push
mov
mov
mov
mov
pop
mov
mov
mov
jmp
mov
pop
ret
int3
int3
push
mov
push
push
push
call
push
call
mov
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
pop
ret
int3
int3
push
mov
sub
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
mov
sub
shr
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
add
mov
mov
add
mov
add
xor
mov
add
mov
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movl
mov
movl
movl
movl
push
push
call
push
lea
push
call
mov
push
lea
push
call
push
push
call
push
call
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
push
call
xor
jmp
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
push
call
xor
jmp
lea
push
mov
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
mov
push
call
test
jne
push
call
xor
jmp
pusha
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
mov
push
call
add
mov
push
mov
push
call
add
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
mov
push
call
add
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
mov
jmp
ret
mov
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
movl
mov
cmp
jae
mov
cmp
jae
mov
mov
jmp
mov
mov
mov
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
pop
ret
int3
int3
int3
lods
xchg
inc
add
add
nop
inc
add
nop
inc
add
add
inc
add
inc
add
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
nop
inc
add
inc
add
xchg
inc
add
inc
add
add
nop
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
nop
inc
add
xchg
inc
add
inc
add
nop
inc
add
xchg
inc
add
nop
inc
add
add
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
inc
add
nop
inc
add
nop
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
nop
inc
add
xchg
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
inc
add
xchg
inc
add
add
inc
add
inc
add
inc
add
inc
add
nop
inc
add
add
inc
add
xchg
inc
add
add
xchg
inc
add
inc
add
add
inc
add
xchg
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
add
inc
add
add
add
inc
add
inc
add
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
add
xchg
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
xchg
inc
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
xchg
inc
add
inc
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
add
xchg
inc
add
inc
add
add
inc
add
xchg
inc
add
inc
add
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
add
xchg
inc
add
xchg
inc
add
add
inc
add
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
inc
add
xchg
inc
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
xchg
inc
add
xchg
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
add
inc
add
add
nop
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
add
inc
add
inc
add
nop
inc
add
xchg
inc
add
nop
inc
add
xchg
inc
add
nop
inc
add
nop
inc
add
xchg
inc
add
inc
add
inc
add
nop
inc
add
inc
add
mov
add
int
add
xor
cmpb
lea
add
nop
xor
je
cmp
inc
jp
outsb
arpl
pop
add
xor
insb
popa
dec
or
push
adc
aaa
xor
aaa
jae
sub
insl
push
sub
jne
cmp
xor
and
arpl
sub
push
pop
add
and
jne
add
je
add
pusha
outsb
cli
xor
add
pop
add
popf
sub
cmp
mov
inc
add
xor
outsl
je
sub
add
pop
push
add
adc
add
xor
aas
sub
ficomps
add
sub
outsl
inc
ficomps
add
jne
cmp
pop
add
loop
inc
add
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
imul
mov
xor
cmpb
lea
add
arpl
sub
pushw
add
inc
cmp
cmp
xor
add
clc
cmp
ficomps
add
jae
cmp
xor
clc
cmp
ficomps
add
pop
add
ficomps
add
pop
add
fisubs
add
xchg
add
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
xchg
add
inc
add
lret
fisubs
outsb
push
xchg
add
xchg
add
add
fistps
add
pop
call
push
ficomps
add
pop
mov
add
add
pop
call
arpl
pop
call
adc
pop
call
add
pop
jmp
add
pop
call
ret
fstpl
lcall
popf
call
add
fsubrp
add
pop
call
add
pop
call
add
pop
fadds
ficomps
add
pop
call
xchg
fcompl
add
pop
call
add
add
pop
add
fstpl
jmp
fstpl
jmp
insl
pusha
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
in
pop
add
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
inc
add
fstpl
ret
sbb
pop
add
and
add
pop
add
xchg
add
popa
add
cmp
pop
add
pop
inc
add
ja
add
ja
add
inc
sbb
add
aaa
pop
add
aaa
pop
add
pop
bound
rcr
fs
call
aas
add
add
pop
out
add
pop
jnp
add
add
negl
add
pop
add
pop
pop
add
mov
add
pop
add
pop
add
pop
add
mov
add
fiadds
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
pop
add
ja
add
xchg
add
les
add
les
add
add
pop
les
add
clc
add
add
jnp
add
imul
add
or
testl
add
push
lahf
add
fs
add
je
add
add
add
push
lahf
add
dec
lahf
add
hlt
lahf
add
sub
add
cli
sahf
add
cwtl
lahf
add
pop
sahf
add
pusha
sahf
add
repnz
add
rcrb
add
es
add
ss
add
add
dec
sahf
add
cwtl
lahf
add
xchg
lahf
add
xchg
add
sahf
add
push
mov
add
sub
add
test
add
jo
add
mov
add
pop
mov
mov
pop
data16
pop
dec
mov
pop
jl
fcompl
mov
pop
call
mov
fcompl
mov
fcompl
mov
add
fcompl
mov
fcompl
mov
fcompl
mov
fcompl
mov
ficomps
xchg
fcompl
xchg
fcompl
xchg
fcompl
xchg
fcompl
xchg
fcompl
xchg
fcompl
xchg
fcompl
xchg
fcompl
xchg
fcompl
int
pusha
add
outsb
pusha
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
add
outsl
pop
add
outsl
pop
add
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
add
cmp
pop
add
cmp
sti
cmp
pop
add
dec
pop
add
jp
add
pop
add
pop
add
sbbb
jge
add
jge
add
add
mov
adc
add
out
add
cmpsl
rolb
aad
add
outsl
mov
add
dec
rolb
adc
add
pop
add
imul
add
mov
add
mov
add
xor
loop
add
loop
add
jecxz
add
add
repz
add
add
sub
add
xchg
jecxz
add
in
add
add
inc
in
add
inc
loope
add
jecxz
add
int3
nop
add
mov
nop
add
push
nop
add
sbb
add
push
add
jb
add
jp
add
pop
movsl
add
pushf
xchg
add
inc
xchg
add
rorb
add
mov
add
xchg
add
push
mov
fidivrs
mov
fsubrp
mov
fsubp
mov
fisubrs
mov
add
fdivrp
mov
mov
mov
faddp
mov
fisubrs
add
jle
add
orb
fcompl
mov
pop
lret
pop
scas
mov
pop
test
fcompl
mov
pop
mov
pop
push
fcompl
mov
pop
push
mov
pop
ss
pop
fimuls
fcompl
mov
pop
repnz
pop
jp
fcompl
mov
add
pop
mov
mov
pop
jle
fcompl
mov
pop
aam
fcompl
mov
pop
mov
mov
pop
mov
ficomps
mov
pop
sub
fcompl
jmp
fstpl
loope
pop
and
fstpl
jmp
js
add
jo
add
push
pop
add
pop
add
add
push
pop
add
dec
pop
add
jns
add
imul
push
pop
pop
add
pop
add
dec
pop
add
inc
pop
add
jo
add
pusha
pop
add
pop
pop
add
push
pop
add
ds
add
or
add
aaa
pop
add
repnz
inc
pop
add
insl
mov
shll
add
add
add
inc
mov
add
mov
add
add
cltd
mov
add
add
inc
mov
add
icebp
mov
add
mov
add
add
popf
mov
add
mov
add
xor
add
adc
mov
add
mov
add
and
add
add
or
add
call
cmpsb
add
call
movsb
add
movsb
add
mov
add
adc
add
call
mov
add
lcall
fidivs
popf
add
sbb
add
or
add
pop
popf
add
insb
popf
add
rcrb
add
ficomps
add
mov
add
sub
add
pop
adc
fcompl
mov
fcompl
mov
fcompl
mov
fcompl
mov
fcompl
mov
fcompl
mov
fcompl
mov
fcompl
mov
fcompl
lahf
fcompl
cmpsb
fcompl
cmpsb
add
fcompl
cmpsb
fcompl
cmpsb
fcompl
cmpsb
fcompl
cmpsb
fcompl
cmpsb
fcompl
cmpsb
fcompl
cmpsb
fcompl
cmpsb
fcompl
cmpsb
fcompl
adc
inc
pusha
add
cmp
inc
inc
pusha
add
pusha
add
andl
jg
add
pusha
add
jg
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
cmp
and
add
inc
pusha
add
cmp
xor
add
fstpl
out
pusha
add
cs
add
fstpl
mov
pop
add
insl
pop
add
imul
jo
add
push
add
push
pop
add
cmp
add
fcmovnbe
add
out
rolb
add
roll
add
aam
add
roll
add
roll
add
add
rolb
add
add
pop
roll
add
add
xchg
rolb
add
iret
add
popa
iret
add
in
roll
add
pusha
add
mov
int
add
int
add
pop
add
mov
iret
add
lods
pop
add
xchg
iret
add
fiadds
add
add
pop
xchg
add
mov
add
fiadds
mov
faddp
add
pop
hlt
add
pop
xchg
add
pop
mov
add
add
pop
leave
add
pop
test
add
add
pop
mov
ficoms
add
add
add
pop
cmpsb
add
pop
jne
add
xchg
add
adc
add
sahf
xchg
add
loopne
add
adcb
fdivrp
xchg
add
add
pop
call
add
pop
imul
mov
lahf
mov
std
stc
jbe
nop
cltd
rorb
xor
jl
subb
mov
cmovp
jo
inc
and
dec
inc
and
hlt
std
sarl
ds
xchg
mov
push
pop
outsb
call
movsb
pop
lea
or
jae
insb
test
add
ficomps
imul
fidivs
add
push
dec
adc
scas
adc
pop
rcrl
and
insb
fstp
or
adc
pop
stos
jmp
mov
cltd
adc
scas
sbb
fstpl
push
pop
stos
jmp
push
out
stos
jmp
add
in
and
sbb
cwtl
adc
fstpl
cmp
mov
adc
xor
and
mov
adc
pop
testb
loopne
mov
xor
adc
cmc
add
rcrb
xor
notb
cmp
jl
jmp
dec
rcll
popa
les
rolb
and
add
dec
lahf
int3
mov
adc
popa
addb
pop
mov
mov
stc
jnp
pop
inc
xor
lods
sub
adc
add
loopne
mov
outsl
sahf
add
popa
repz
fs
add
int
xorb
es
out
push
pushf
add
movsl
ljmp
std
add
je
cmp
ret
dec
add
stc
add
shr
loope
add
insl
and
ror
loope
add
divl
gs
or
add
mov
lea
iret
push
mov
mov
fs
shr
fmulp
add
push
pop
sahf
sbb
ror
pop
insl
mov
pop
popa
lcall
add
popf
pop
mov
rcr
js
insl
adc
or
popa
add
cmc
mov
fisubrs
add
and
mov
pop
into
lea
popa
push
xchg
add
clc
xor
inc
int
popf
lahf
cltd
cmp
scas
pop
test
mov
pop
jne
sbbb
ficomps
add
pop
pop
add
add
dec
add
pop
add
add
fstpl
cmp
hlt
add
loop
add
fstpl
or
loop
add
fstpl
and
and
mov
negb
xor
sbb
ss
and
sbb
rorb
sti
sbb
jmp
add
fstpl
mov
add
add
hlt
add
repz
fisttpll
add
add
add
push
popa
add
add
add
cmp
push
popa
pop
add
popa
add
popa
add
popa
js
stc
pusha
jl
or
add
pusha
add
in
fiaddl
aam
inc
add
aas
add
pop
add
movb
pusha
pusha
add
add
pop
add
add
pusha
jnp
lret
add
pusha
jge
mull
add
add
add
add
popa
pop
add
pusha
or
add
lret
fbstp
add
ffreep
add
call
add
out
add
in
add
lahf
add
ret
add
xlat
add
add
add
add
add
fildll
add
fists
add
fbld
adc
and
add
dec
add
dec
add
dec
add
aas
add
bound
arpl
imul
fcoml
add
fildll
inc
add
lret
add
pop
xchg
add
pop
xchg
add
pop
test
mov
movsl
add
add
pop
scas
add
pop
xchg
add
pop
rolb
pop
mov
add
pop
test
in
mov
xlat
pop
jne
lcall
sti
pop
insl
add
pop
data16
pop
mov
pop
mov
adc
add
pop
mov
movsl
pop
xchg
add
pop
addl
pop
jl
mov
pop
push
add
pop
pop
add
pop
push
add
pop
add
add
add
fstl
add
fstl
add
fdivl
add
fdivl
add
fcoml
add
fmull
add
fdiv
mov
fcompl
xchg
xor
xchg
fsubrl
mov
xor
js
pop
add
adc
pop
fmull
pusha
fmull
push
fdiv
decl
hlt
inc
loope
and
loope
xor
add
fsts
dec
loope
xor
xor
test
pop
mov
xor
pop
cmpsb
xor
loop
push
push
in
popa
push
out
jo
ret
push
std
xor
mov
xor
xor
push
test
xor
push
stos
xor
push
lods
xor
push
scas
xor
push
mov
int
mov
int3
push
mov
add
inc
push
mov
bound
xor
mov
xor
push
shlb
push
lds
add
xor
xor
enter
lret
or
out
aaa
or
out
dec
or
out
dec
or
into
cmp
iret
into
cmp
ror
lret
into
mov
fsubrs
filds
fisubrs
in
loopne
jecxz
loope
in
loop
roll
add
push
lret
out
mov
push
jmp
out
mov
push
in
into
jmp
in
into
sbb
out
into
inc
push
repz
inc
push
fwait
scas
das
push
pushf
scas
call
pop
sbb
pop
ja
icebp
push
sub
call
push
cld
push
sub
std
push
sub
cli
push
and
push
clc
push
daa
push
rcll
push
and
mov
mov
mov
mov
add
lds
add
push
popf
add
push
scas
add
pop
cwtl
add
pop
cltd
add
pop
mov
add
push
mov
add
push
sahf
add
push
xchg
add
push
nop
add
push
xchg
add
push
inc
add
push
dec
add
pop
dec
add
pop
dec
add
add
sbb
inc
fistps
pop
dec
fistps
pop
inc
fists
pop
push
fists
pop
adc
adc
fists
add
adc
adc
adc
or
fists
pop
fimuls
pop
fimuls
pop
sub
pop
fcmovnu
sub
mov
sub
mov
push
add
dec
fists
add
dec
fists
push
fists
add
inc
fistps
add
xchg
add
add
pop
add
add
pop
and
pop
add
pop
add
pop
add
add
pop
pop
add
pop
push
add
pop
or
pop
or
pop
or
pop
or
add
pusha
dec
pusha
push
add
pusha
dec
add
pusha
xor
pop
inc
add
pop
xor
add
pop
inc
add
pop
xor
pop
inc
add
add
cmp
pop
cmp
pop
cmp
xor
cmp
dec
add
loop
add
ficoml
dec
loop
add
push
add
push
add
cmp
inc
loop
add
fidivrl
add
loop
add
add
inc
add
fimull
dec
loop
add
mov
add
mov
dec
loop
add
fisubl
loop
add
fisubl
add
jmp
add
jmp
adc
faddl
and
loop
add
ficompl
add
popa
jl
in
push
add
popa
dec
add
popa
inc
add
popa
pop
add
popa
cmp
or
add
popa
cmp
jmp
add
popa
sbb
add
popa
pop
add
popa
adc
repnz
add
lds
add
add
popa
repz
popa
in
popa
fdivrp
mov
popa
mov
pop
pop
mov
popa
pop
mov
pop
mov
push
pop
test
ja
dec
jmp
push
jmp
inc
pushl
call
add
loope
dec
xchg
push
and
mov
add
or
add
imul
adcl
dec
cmpsl
add
lret
cmp
add
sub
add
and
add
adc
add
or
add
add
add
lock
mov
loopne
add
rcr
add
rcr
mov
mov
add
gs
add
mov
add
movsb
add
cmpsl
add
add
cmpsb
add
js
add
js
add
js
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
jnp
add
jnp
add
jnp
add
jnp
add
jp
add
jp
add
add
mov
cld
enter
mov
and
or
and
and
and
mov
mov
fmull
fwait
std
ljmp
std
clc
or
std
prefetch
std
adc
pusha
mov
aaa
or
xor
inc
or
push
add
mov
mov
or
mov
aam
or
lcall
or
cmp
or
cmp
or
or
mov
idivl
lods
or
cmp
or
cmp
dec
pop
arpl
dec
cmp
push
or
or
daa
or
inc
dec
or
inc
dec
or
or
inc
or
loop
add
add
fildl
or
inc
add
ret
or
inc
adc
out
add
out
inc
cld
or
inc
aad
int
into
std
movsl
inc
std
daa
cmp
std
xchg
cmp
mov
lret
mov
mov
mov
cmp
stos
sub
mov
pop
and
nop
pop
and
pop
and
pop
and
popa
and
pop
and
add
pusha
and
push
dec
and
inc
cmp
push
xor
pop
sub
and
or
pop
sbb
and
adc
and
add
and
clc
adc
sahf
repz
mov
dec
js
and
sub
pop
jae
add
sub
je
pop
and
jae
and
jae
and
add
jae
and
cmp
and
mov
push
and
jb
and
sbb
and
jb
and
jb
and
jb
daa
pushf
jb
and
ljmp
and
xlat
jb
and
in
lods
and
ret
lcall
add
mov
pushl
add
lcall
clc
fcos
gs
fs
cmc
pop
mov
idiv
adc
or
outsb
mov
or
inc
clc
push
aas
add
decl
std
das
call
cmp
aaa
push
lcall
decb
mov
and
cmp
add
fimuls
cld
daa
mov
aas
sub
inc
pop
stos
cld
inc
aas
stos
cld
mov
lods
cld
out
cmpsb
cld
xor
cld
icebp
aas
lods
cld
push
cmpsb
cld
jge
lahf
cld
movsb
cmp
cld
idivl
mov
pop
inc
mov
pop
inc
movsb
cld
aas
inc
jl
cmp
xchg
call
cmp
dec
decl
pop
dec
ljmp
inc
ljmp
pop
inc
incl
add
pop
dec
call
pop
inc
decl
pop
adc
push
pop
adc
pop
pop
add
xor
cld
xor
xchg
add
add
add
lock
add
fidivrs
fidivrs
fcmovu
jle
aad
jns
mov
fidivrs
mov
fiadds
add
fiadds
cmovnp
pop
cmovp
pop
cmovne
pop
cmovl
add
pop
cmova
pop
jle
fbld
sbb
jae
fbld
fbld
test
pusha
movq
arpl
push
fbld
pop
fisttps
add
pop
adc
les
lret
pop
adc
push
test
pop
push
push
aas
pop
sbb
outsb
pop
sbb
insl
pop
sbb
pop
pop
sbb
inc
pop
sbb
push
add
inc
pop
pop
push
inc
pop
push
push
ja
and
inc
pop
and
inc
pop
and
xor
and
cmp
push
dec
pop
and
cmp
push
mov
pop
sub
pop
sub
std
pop
sub
or
sub
repz
sub
push
rcrl
push
fisubs
add
shlb
add
call
xor
xor
push
add
rorb
xor
push
add
add
fsubrs
aaa
call
lods
cmp
mov
ds
movsl
incb
in
inc
shl
incb
loop
inc
loopne
incb
incb
xlat
incb
fdivrp
inc
loopne
decb
or
dec
rorb
decb
sbb
dec
loopne
decb
decb
xor
cmp
pop
cmp
mov
incl
add
pop
push
ljmp
pop
add
test
pop
dec
scas
cs
scas
cs
lods
cs
or
sub
std
or
cmp
out
push
std
in
dec
std
aad
inc
std
shrb
std
lret
sub
std
shrb
mov
sub
fwait
std
sbb
xchg
std
add
popf
sub
std
lcall
jle
sbb
cmpl
xor
and
xor
and
push
adc
xor
and
inc
add
xor
sti
push
xor
repz
xor
aam
xor
or
scas
les
xor
mov
xor
movsb
adc
lods
xchg
adc
movsb
add
xchg
adc
lahf
test
xor
je
xor
fs
das
cmp
xor
adc
adc
loopne
stos
adc
jae
adc
jae
adc
jae
adc
scas
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
mov
mov
addr16
add
add
addr16
adc
addr16
adc
mov
adc
rclb
insl
xor
data16
mulb
xor
data16
fiadds
clc
orb
clc
orl
clc
test
adc
clc
out
push
clc
ljmp
clc
clc
iret
inc
clc
test
and
stos
mov
sbb
push
add
fbld
ja
push
and
mov
xlat
and
movsb
fldenv
cmpsb
test
frstor
stos
decb
and
lods
mov
jle
add
insl
leave
add
insl
add
ficomps
enter
add
pop
cmc
enter
add
pop
sti
enter
add
pop
jecxz
add
ficomps
add
pop
aaa
leave
ficomps
add
pop
mov
add
pop
mov
add
pop
lcall
pop
fwait
enter
add
pop
cmp
ficomps
add
pop
cmp
add
pop
push
leave
ficomps
add
pop
pop
leave
ficomps
add
pop
or
ficomps
add
pop
or
ficomps
add
pop
add
cmpsl
pop
add
add
fstpl
or
pop
add
es
add
ficompl
ret
add
fcompl
imul
pop
add
pop
add
fstpl
je
pop
add
fcompl
js
pop
add
es
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
mov
pop
add
add
pop
add
fstpl
add
mov
add
add
add
or
pop
add
pop
mov
add
shlb
add
shll
add
pop
add
lods
mov
add
pushf
mov
add
xchg
mov
add
mov
add
add
jno
add
and
add
add
add
add
mov
add
mov
add
fiadds
add
push
add
add
push
add
add
bound
add
popa
add
add
mov
movl
movl
fsubrp
movb
popf
add
add
fiadds
movl
fimuls
movl
fidivs
movl
fidivs
add
fidivs
add
mov
add
adc
add
xor
vminss
add
pop
scas
vminss
add
pop
scas
vminss
add
pop
mov
ficomps
add
pop
mov
add
pop
xor
add
ficomps
add
pop
and
ficomps
add
pop
xor
ficomps
add
pop
and
add
pop
vminss
ficomps
vminss
ficomps
vminss
ficomps
vminss
ficomps
ficomps
add
pop
mov
add
pop
add
fstpl
pushf
lcall
mov
add
pop
add
fstpl
mov
pop
add
fcompl
push
sbb
test
pop
add
pop
add
pop
add
sbb
fstpl
mov
pop
add
sbb
add
fstpl
jmp
fstpl
sbb
sbb
add
add
iret
pop
add
push
ret
xchg
pop
add
mov
ret
jle
add
fbld
add
ret
inc
add
add
sbbl
in
jbe
in
outsb
lds
popa
sub
subb
mov
test
shlb
test
cmc
jecxz
push
xorb
add
add
lock
and
add
fdivl
jne
fisubrs
mov
sahf
mov
aam
mov
and
mov
mov
cmp
pop
xor
inc
es
pop
jmp
js
mov
stos
push
adc
lcall
pop
pusha
sbb
xchg
test
pop
out
push
mov
mov
add
adc
lods
or
cmp
lods
jl
cltd
in
push
lret
icebp
fmuls
fistpl
add
cmp
out
cmp
sbb
loopne
inc
mov
add
push
dec
notl
cmpsl
retw
rol
leave
mov
push
leave
push
and
sahf
push
movb
sbb
sub
xor
add
mov
inc
jge
imul
inc
fcompl
popf
sbb
inc
cwtl
pushf
cmp
das
xchg
std
and
jae
stos
mov
ds
iret
fidivrl
push
jge
jnp
imul
lds
sbb
clc
stos
xchg
push
adc
push
fdivl
rcrl
push
xchg
test
mov
insl
add
and
add
or
pop
mov
ficoms
test
mov
push
dec
dec
inc
cs
jmp
xchg
xchg
iret
jns
jnp
jg
jmp
test
sub
in
call
dec
jo
xor
mov
xchg
decl
xor
sbb
sub
and
insl
add
hlt
add
xor
add
dec
adc
fsubrp
pop
pop
or
fsubp
dec
or
xor
popf
out
push
mov
cmc
mov
mov
cmp
sets
ja
jle
sub
data16
jge
bound
popa
sub
leave
es
shrb
mov
mov
les
cs
xor
cmp
add
imul
out
xlat
jl
imul
jmp
lret
addb
insl
inc
jge
mov
pop
inc
cmpsl
mov
lods
mov
aad
add
mov
je
sahf
pushf
inc
and
movsb
jno
xor
in
rol
bound
pushf
sar
test
out
add
mov
hlt
xor
lahf
add
int3
cltd
mov
xor
pop
sbb
orps
xor
int3
push
fistl
in
mov
scas
or
sbb
and
pop
ficoml
mov
cli
dec
ret
pop
sbb
xor
loop
fistl
cltd
inc
stos
testb
add
in
daa
roll
jl
mov
add
jne
cs
notb
jb
xchg
xorb
rcr
xlat
inc
fldl
add
das
push
sbb
xor
enter
xchg
outsl
mov
jle
add
push
and
xchg
mov
cmp
jl
mov
das
jo
popa
fsts
inc
lods
lea
fstpl
sub
sub
lret
jns
push
push
sub
add
popf
div
mov
dec
adc
dec
jge
adc
subl
push
jmp
inc
lea
sub
les
pop
outsl
sahf
sbb
subl
xor
fadds
scas
mov
add
mov
or
aas
pop
cmp
and
sahf
mov
xchg
or
jp
mov
rol
mov
out
pushf
mov
xchg
jmp
rcrl
jne
js
arpl
mov
repnz
sbb
int3
dec
aas
push
or
xor
fidivs
xchg
xchg
jl
inc
inc
add
sbb
pop
out
rol
leave
arpl
pop
stos
stc
cmp
sub
fs
cli
push
pop
stc
sbbl
pusha
jle
test
scas
test
faddl
out
inc
xchg
out
sub
jo
nop
jne
mov
movsb
add
out
lahf
jge
lods
pop
adc
stos
fcomp
idivl
ud2
lret
cltd
add
call
arpl
xor
lods
aam
aam
jp
cmpsl
cmp
add
addr16
leave
nop
push
addb
sbb
jge
sub
dec
and
jl
loope
dec
push
fsts
add
sbb
rorl
repnz
jmp
iret
mov
je
sbb
and
cmp
or
mov
pop
mov
scas
je
mov
add
cs
inc
clc
or
jne
push
fcoms
aam
adc
mov
sub
jae
jns
mov
add
fidivrl
and
dec
inc
and
into
rcrl
jg
test
mov
fucom
pop
call
orl
into
xchg
jge
add
cltd
inc
js
adc
sbb
and
pop
add
outsl
push
add
xlat
imul
mov
xchg
pop
xchg
mov
inc
add
in
sbbb
daa
cwtl
cmc
sahf
mov
insb
pop
stc
adc
cwtl
mov
jo
xor
xchg
dec
cmp
jo
in
mov
in
xchg
cmpsl
repnz
cltd
mov
jne
and
add
fiadds
and
stos
push
jmp
inc
es
xor
mov
mov
arpl
sub
mov
xor
mov
imul
in
inc
sub
adc
jg
mov
lods
push
push
push
jp
mov
or
adc
mov
jl
lods
cmpsl
ja
add
mov
mov
sub
into
imul
xchg
lds
hlt
and
into
inc
add
addr16
dec
sub
pop
sahf
lock
xlat
adc
stos
xor
or
sbbb
xchg
sarb
mov
jo
pop
incb
lock
inc
lods
inc
mov
mov
cmp
roll
dec
or
push
cli
xchg
push
inc
add
in
lret
xor
mov
fsubl
in
add
add
call
cwtl
ljmp
sub
inc
add
aam
inc
loopne
out
dec
jnp
outsl
into
fwait
push
ss
jmp
fisubl
nop
mov
jl
cwtl
popf
sbb
hlt
add
leave
jne
in
push
out
out
in
repz
imull
fldl
iret
cwtl
inc
ljmp
or
loop
data16
faddl
mov
inc
jae
fwait
push
outsl
inc
scas
mov
push
mov
mov
lods
mov
das
xlat
pop
mov
mov
popl
adc
cwtl
mov
test
xor
shr
fstpl
mov
sbb
jle
std
add
mov
pop
leave
pop
pop
pop
daa
imul
leave
lret
outsb
jp
mov
cltd
out
dec
xor
dec
dec
pop
lret
pop
pop
std
into
iret
in
aam
shrb
mov
cli
sti
add
inc
inc
lock
dec
dec
add
bound
xor
in
inc
daa
add
stc
icebp
push
add
xchg
jle
xlat
mov
cmp
lahf
in
test
push
leave
mov
mov
cmp
icebp
icebp
xchg
dec
clc
jecxz
inc
jl
cmp
inc
mov
mov
and
mov
cltd
ficoml
loop
into
pop
test
popa
ds
add
dec
pop
jae
sub
test
sbb
or
sbb
adc
pop
in
inc
movsl
jae
mov
notl
mov
notl
cmpsl
cmp
mov
js
sub
sbbb
sbbl
sbb
leave
stos
jae
cmpsl
lds
mov
sbb
xchg
xor
cld
jg
pop
hlt
xchg
incb
add
mov
and
push
ss
in
fcmovne
imul
outsl
add
popa
xor
ds
sub
es
xchg
into
pop
in
inc
xchg
xchg
cmpsb
repnz
fistpl
cmp
jns
imul
into
jo
xor
dec
add
in
dec
out
inc
hlt
dec
jmp
ret
mov
xlat
add
add
cmpsb
cmp
stos
inc
es
nop
decl
jne
loop
inc
sub
mov
test
lcall
out
xor
add
inc
jmp
sub
jnp
cmpsl
add
pushf
call
mov
push
clc
jp
sti
mov
js
pop
xchg
cmpsb
rorl
mov
jbe
or
jmp
add
add
push
pop
leave
jne
in
jb
inc
inc
test
cmp
dec
push
mov
daa
cli
jo
jne
aas
or
addr16
out
dec
dec
mov
push
div
xchg
arpl
push
push
sbb
loopne
xor
cs
mov
xchg
out
shrl
sbb
sahf
pop
sub
loope
repnz
clc
add
hlt
xor
adc
imul
gs
mov
xchg
xchg
mov
fwait
fwait
aad
sbb
xchg
imul
fimuls
pop
push
xor
push
sub
out
data16
pop
dec
mov
sub
or
popa
jne
out
add
push
pop
aad
cwtl
push
xchg
dec
sub
add
ret
xor
sub
mov
and
lock
clc
mov
dec
xor
sub
jno
test
jne
cmpl
pusha
into
inc
add
fistps
pop
and
es
xchg
sub
and
xor
and
xchg
and
insl
xchg
add
inc
fwait
dec
mov
mov
test
lahf
pop
add
adc
jle
and
test
icebp
inc
mov
stc
sbb
gs
aas
ror
jge
aas
push
pop
pop
repz
lds
lcall
inc
cwtl
nop
pop
add
dec
sbb
pop
and
std
xchg
lds
dec
jmp
push
lock
add
dec
cmp
inc
or
sub
xor
mov
pop
add
lret
and
sbb
roll
sbbb
std
mov
jae
sbbl
imul
jecxz
js
ljmp
shlb
lock
imul
push
mov
rorl
mov
add
mov
iret
add
xor
dec
repnz
push
push
pop
mov
fcoml
mov
fs
mov
test
in
fucom
cwtl
mov
inc
jmp
cmpsl
push
jno
rol
pop
add
stos
das
shr
jns
and
adc
int3
out
mov
sub
cltd
mov
jmp
xchg
jae
lods
pop
xchg
dec
or
cltd
dec
add
pslld
iret
addr16
shrb
testl
fiadds
movl
int
xchg
adc
mov
jmp
fdivr
cmp
adc
mov
adc
push
dec
jbe
mov
shld
mov
add
insb
shrl
jae
cmp
add
add
sub
icebp
mov
leave
arpl
mov
sub
das
scas
test
inc
mov
out
push
in
repz
cld
dec
adc
mov
sub
sbb
pop
fcomi
add
fistpl
movsb
pop
scas
ja
lret
out
mov
cltd
imul
mov
sub
dec
sbb
test
into
in
inc
fs
mov
ret
xchg
stos
icebp
fimuls
addr16
nop
add
mov
mov
cmpsb
aam
popf
or
jge
or
and
js
vmaxpd
push
into
fcompl
add
sub
sub
cmpsb
xchg
lods
jecxz
lock
mov
jae
add
pop
xor
xlat
jno
mov
lock
out
pop
pop
or
popa
push
pop
sub
add
or
test
lret
jg
arpl
xchg
or
inc
push
js
mov
out
sbb
enter
ss
sub
pop
mov
jmp
test
out
and
push
mov
sbbl
fs
push
jnp
mov
pop
adc
popf
sbb
mov
add
icebp
js
gs
and
jecxz
ss
adc
imul
mov
mov
popl
call
sub
call
pop
mov
dec
xor
pusha
mov
cmp
out
loopne
jno
jge
ljmp
iretw
sbb
add
jno
push
es
push
imul
add
imulb
mov
pop
testb
push
loope
jecxz
imul
jmp
jmp
lods
jne
inc
es
and
sub
xor
push
shll
push
shlb
sub
cmp
mov
loop
xchg
cmp
xor
sub
cltd
sarb
bound
orb
add
adc
jmp
lret
gs
and
xorb
sbb
insl
rolb
jbe
sbbb
jne
inc
pop
add
adc
pop
pop
mov
jbe
push
into
mov
imul
add
and
daa
bound
cs
cmp
sub
pop
mov
dec
rcrl
dec
xor
push
dec
sub
repz
pop
iret
push
aaa
sbb
fildl
add
cmpsb
testl
pop
mov
cmp
mov
dec
imul
sub
loop
jmp
inc
dec
jne
das
aas
xchg
fcom
mov
inc
add
shll
mov
inc
test
and
push
push
sbb
in
sbb
sbb
push
pop
dec
clc
cmp
cmp
add
jg
xor
xor
imul
push
clc
cwtl
or
loop
xchg
int3
stos
fmul
stos
arpl
into
mov
in
mov
or
push
roll
cmpsl
pushf
add
jne
ja
xor
or
shll
push
test
and
loope
sbb
out
int
add
sub
movsl
lret
int3
jg
js
ljmp
sahf
sbb
sub
push
sub
sbb
fmull
out
mov
sar
push
scas
mull
pop
pusha
mov
int
jge
and
push
aam
fstpl
ficoms
cmpsb
sub
mov
add
lcall
pop
push
sub
add
add
jb
testl
mov
fld
dec
jmp
int3
mov
fidivs
cmp
lea
outsb
call
shrl
fcoms
test
hlt
inc
lds
xlat
fs
add
xchg
iret
stc
ds
push
sahf
stos
adc
xor
push
loop
and
rolb
lock
out
inc
rolb
add
add
popf
pop
jecxz
out
repz
popa
incb
pop
test
sahf
fstpl
fs
jp
cmp
adc
and
aad
fimull
mov
xchg
mov
mov
jge
mov
call
push
mov
lcall
not
jg
mov
sbb
inc
incl
ja
cmp
lods
inc
sub
idiv
add
mov
sub
xchg
ljmp
pop
inc
in
loopne
enter
push
mov
cld
add
fwait
push
dec
cmp
mov
std
shrb
pop
cmpsb
sub
lahf
or
cmpb
jns
clc
cmp
loope
das
adc
iret
das
ja
jno
xor
dec
mov
pop
cmpsb
aas
pushf
aas
mov
mov
int3
lods
mov
add
fidivrl
cmp
adc
out
push
or
lods
mov
mov
sbb
mov
test
inc
lret
sti
sti
les
divb
je
cli
das
add
cld
xor
repnz
xor
out
sbb
pop
daa
pop
outsb
adc
mov
dec
or
mov
scas
rcrl
mov
add
add
xchg
lods
fwait
in
repz
jl
lret
hlt
mov
pop
sbb
popf
mov
mov
sub
outsl
dec
push
dec
jo
jecxz
and
push
pop
movsl
jae
pop
push
xchg
icebp
and
ret
mov
mov
cmovge
push
rorb
les
nop
mov
add
adcb
stos
lcall
add
imul
and
les
stc
or
shlb
cmc
ret
dec
jmp
hlt
mov
mov
pop
fstpl
mov
and
sub
inc
mov
jbe
lods
mov
add
sbb
mov
add
stos
adc
rcll
sub
jae
push
pop
dec
bound
push
fisttpll
icebp
cmpsl
pop
movsb
mov
sub
fnstcw
sub
sub
pusha
jge
je
icebp
enter
out
arpl
adc
cmc
push
pop
or
sbb
subl
out
add
push
incl
xchg
mulb
or
inc
push
mov
mov
popa
scas
enter
xchg
and
jbe
std
and
adc
iret
xchg
popf
adcl
dec
les
data16
inc
push
cltd
mov
loopne
jo
add
dec
adc
mov
ljmp
xchg
jbe
ljmp
add
jle
and
sub
push
inc
cld
pop
xlat
push
imul
push
aad
push
stos
into
fsubl
gs
data16
cmp
inc
xor
xchg
mov
es
loopne
je
test
fldenv
xchg
daa
xchg
imul
add
gs
mov
outsb
shlb
add
adc
inc
push
and
sub
call
sbb
sub
movsl
daa
xor
repnz
movsb
mov
pop
imul
adc
xchg
xchg
pop
repz
adc
mov
leave
jp
push
inc
in
push
jnp
push
jle
mov
or
xchg
jmp
dec
sub
add
test
adc
jecxz
xchg
cmpsl
mov
add
loop
mov
xor
add
stc
xchg
xor
sti
add
pop
jmp
sbb
stos
inc
jnp
mov
out
int
add
inc
inc
sysret
pop
jo
call
pop
icebp
andl
jmp
add
jns
mov
or
push
test
insl
mov
imul
push
ja
or
mov
jae
adc
hlt
or
or
cmp
jo
sarl
fbld
mov
sti
xor
adc
addr16
push
test
add
hlt
in
lcall
jmp
lcall
add
stc
add
jbe
add
jae
test
push
dec
xchg
mov
sahf
mov
mov
mov
ja
mov
cmp
jle
bound
xchg
sbb
stos
clc
loop
cli
sub
inc
gs
dec
and
jl
xor
inc
imul
jae
imul
dec
mov
pop
nop
in
push
fwait
inc
rcll
add
mov
insl
nop
in
notb
es
and
ljmp
jmp
adc
out
mov
rol
subl
scas
or
ss
fildll
lods
es
mov
in
pop
xchg
or
imul
fxam
adc
aaa
stc
mov
pop
xor
jbe
mov
add
outsb
lock
jl
in
sub
das
lds
cmpsl
lahf
mov
outsb
sub
mov
or
mov
fwait
test
in
insl
outsb
mov
and
out
out
mov
sub
sbb
ja
sub
popa
mov
push
fsubs
scas
mov
scas
push
addr16
stc
inc
mov
add
andb
fcom
push
add
mov
push
shlb
jae
leave
mov
test
dec
sub
add
jecxz
mov
mov
mov
add
push
push
fld
cmp
fiaddl
xor
lret
or
mov
rcll
xor
mov
jmp
adc
add
jmp
hlt
mov
xor
and
jno
idiv
dec
rolb
jns
mov
xchg
xchg
xchg
dec
jnp
out
xchg
mov
shl
mov
xchg
je
aaa
xor
aas
mov
xor
faddl
mov
mov
fs
fwait
clc
pushf
scas
pushf
mov
push
out
or
add
ret
icebp
loope
ficoms
add
or
pop
mov
lock
negb
inc
sbb
xor
stos
add
movsl
push
adc
pop
xor
fadds
jbe
pop
jp
cmp
sti
aaa
aaa
mov
pop
push
sub
dec
pop
dec
and
lahf
test
imul
out
pop
xchg
sbb
inc
invd
mov
shr
add
icebp
add
xchg
addl
pushf
sbb
insb
jp
scas
push
pop
or
mov
and
stos
loope
ret
ffreep
enter
mov
int
jns
mov
mov
dec
lock
mov
jae
iret
cmp
sbb
xchg
push
xor
xchg
gs
add
push
stos
sarb
adc
or
aas
dec
dec
push
lock
outsb
jp
fisubs
jae
and
dec
fdivl
pop
imul
testb
sbb
jg
mov
scas
aaa
out
aam
popa
xchg
loopne
jnp
add
test
mov
ljmp
pop
in
movsb
inc
imul
jo
add
add
das
mov
cmp
shll
in
repz
decl
lds
or
mov
xor
jns
push
outsb
out
pop
xlat
and
fstp
pop
inc
mov
pusha
cmpsb
inc
js
pushf
jb
jmp
inc
add
adc
and
xor
addl
sahf
lcall
ss
jo
push
jecxz
pushf
add
notl
das
arpl
mov
add
pop
imul
loopne
shll
sahf
daa
xor
inc
xchg
fdivs
xchg
add
jne
mov
pop
into
add
or
adc
sub
add
js
xchg
rcr
lret
xchg
cmp
arpl
push
out
sub
dec
jbe
bound
and
scas
dec
testl
add
sbb
or
les
std
sub
push
jl
int3
sub
repnz
dec
loop
push
out
test
push
pop
test
lds
sub
cmp
fldt
popa
xchg
daa
popf
scas
stos
hlt
sub
mov
jg
dec
mov
mov
and
outsl
sbb
test
inc
sub
and
add
dec
and
jmp
cmp
repnz
sub
test
xchg
pop
shl
adc
push
mov
sub
fs
std
mov
mov
jl
nop
cmp
nop
cmp
inc
dec
add
shll
lret
mov
mov
hlt
or
add
mov
add
mov
jns
or
pop
int3
movsl
insb
jg
fimuls
jb
push
in
fistpll
mov
ret
cmp
rorb
and
ret
ja
and
inc
fcomi
pop
fistpl
cmp
ljmp
imul
stos
xchg
mov
pop
incl
jecxz,pt
and
lahf
adc
gs
outsl
add
mov
sahf
lahf
out
fldcw
sub
fistpll
std
push
lret
movsl
push
mov
sbb
andb
aam
push
mov
fcmovbe
push
inc
mov
out
mov
sub
sbb
or
inc
mov
fwait
mov
push
pop
lret
jno
jmp
pop
add
dec
ret
mov
outsb
mov
imul
add
add
decb
push
cmp
adc
lcall
je
sub
data16
dec
popa
pushf
int
push
shll
adc
mov
and
add
lock
jb
lds
outsb
rcrb
ss
sub
ret
stos
std
dec
jo
addr16
fisubrl
add
mov
movsl
jle
mov
add
push
ret
aas
and
xor
sub
xchg
cmp
cli
lcall
sub
pop
testb
sbb
mov
rol
pop
sub
push
dec
lret
add
mov
dec
sbb
ja
shlb
stos
movsb
jb
pushf
add
lods
dec
jecxz
ja
xor
stos
mov
dec
inc
cmc
add
add
int
in
call
es
cmp
js
mov
mov
pop
incb
pop
ret
das
orl
push
clc
clc
add
in
aam
insl
into
add
es
pop
je
adc
aas
cltd
je
fisubs
mov
push
cwtl
pop
out
and
mov
add
mov
fisubl
leave
decb
nop
in
jmp
in
xor
xchg
str
or
mov
out
std
pop
sbb
into
sub
xor
mov
fildl
push
in
fildll
movsl
mov
jecxz
fcmovnu
gs
dec
add
inc
add
das
imul
and
addr16
mov
push
and
add
dec
add
les
in
call
push
cmpsl
ja
jp
in
push
mov
pop
mov
fcomps
in
scas
push
jp
clc
lcall
sub
loop
inc
pop
jp
adc
in
push
pop
push
mov
clc
xor
jb
mov
adc
pop
mov
inc
adc
jne
outsl
mov
sbb
add
push
cmc
mov
aad
je
icebp
sub
push
sahf
dec
adc
adc
dec
dec
inc
jae
ftst
xor
add
test
and
jl
push
mov
xlat
and
test
fstpl
outsl
pop
orl
adc
add
pop
inc
data16
add
pop
test
jno
lock
arpl
inc
jl
pop
mov
add
xchg
jp
mov
or
jb
push
pop
das
jmp
lcall
mov
jbe
dec
push
adc
jg
mov
ss
sbb
sbb
cmpsb
mov
mov
lahf
mov
adc
fcoml
clc
gs
jne
sahf
out
cltd
xlat
in
jg
mov
pop
jb
push
inc
xchg
sbb
into
dec
mov
cmc
leave
and
dec
mov
out
mov
xor
xor
xchg
mov
add
push
test
mov
push
inc
sub
insb
sbb
not
fdivl
adc
jne
sbb
mov
mov
sete
mov
test
or
lahf
push
and
and
add
cwtl
mov
mov
cmpsb
lret
insb
fisubl
fistpl
mov
sahf
sub
mov
dec
subl
add
mulb
lcall
imul
adc
pop
outsl
mov
push
iret
add
lret
movl
iret
or
cmc
sahf
cli
int3
clc
mov
add
push
pop
pop
pushf
push
pop
clc
roll
cld
mov
push
arpl
xchg
mov
jmp
pop
out
cltd
pop
lar
shl
push
aam
add
ret
repz
bound
into
pxor
add
xchg
pop
cmp
fnop
int3
sbb
aaa
sbb
add
aam
movsb
jo
jo
xchg
mov
dec
pop
jp
or
lret
add
cmp
xor
or
out
gs
sub
adc
repz
aad
frstor
stc
lods
push
aaa
adc
je
test
cwtl
repz
dec
push
movsb
inc
es
sarb
aam
adc
add
add
scas
xor
mov
push
mov
or
pop
movsl
inc
cli
pop
pop
scas
and
mov
test
in
push
sbb
inc
out
add
cmpsb
sub
mov
cmp
adc
gs
addl
xor
dec
dec
insb
mov
sarl
mov
push
jle
mov
sbb
add
cmp
lock
sub
pop
xchg
dec
mov
push
and
imull
test
cmc
loop
cld
dec
lods
in
lds
mov
dec
ficomps
das
xchg
inc
dec
sbb
adc
sbb
jns
mov
lds
xchg
lret
mov
sub
imul
sub
add
xor
shlb
std
mov
push
mov
push
insl
adc
mov
scas
pop
pop
into
push
pop
cmpsw
dec
enter
cmp
cmp
vmaxss
push
inc
cld
fimull
loopne
lret
push
test
bound
fistl
out
add
pop
popa
shll
mov
xor
add
cmp
divl
xor
fsub
jmp
ret
lods
or
sti
cmp
jl
insl
pop
pop
dec
jl
sbb
testb
roll
push
dec
add
xchg
into
sub
mov
fwait
shl
stos
pusha
sbb
xchg
xor
cmp
jle
popa
mov
or
imul
sahf
cltd
add
loopne
jle
push
jmp
aas
sbb
push
mov
stc
fildl
cltd
lahf
dec
cmp
clc
pusha
jo
mov
popa
popa
push
sbbb
inc
iret
sub
scas
xchg
lahf
call
add
mov
in
mov
insl
ret
adc
add
fildl
adc
xor
int
push
mov
add
xchg
insl
mull
cld
fs
nop
push
xchg
cmp
movsb
jg
divb
or
sub
rcrb
insl
dec
mov
dec
leave
or
mov
stos
lahf
sbb
dec
addb
imul
out
loop
ja
shl
inc
cmp
inc
sbb
push
dec
or
mov
mov
add
enter
dec
test
push
dec
scas
cs
std
mov
movsl
cmpsb
mov
inc
or
xor
mov
xchg
and
push
mov
test
movsb
daa
inc
int
adc
mov
xor
sbbb
insl
and
xor
enter
mov
jmp
cmc
data16
add
mov
or
out
sbb
les
movl
mov
xchg
out
mov
pop
push
shll
push
addw
ret
es
mov
mov
or
jne
scas
leave
decl
inc
mov
adc
jae
movsb
andl
pop
xchg
add
fidivl
lds
add
dec
je
ret
xor
push
cld
adc
sbb
mov
mov
ss
bnd
lahf
push
notl
out
cmc
imul
popf
pop
out
cmp
cmp
add
insl
pop
and
out
sbb
mov
imul
cld
cld
pop
add
sub
loopne
sub
in
gs
lock
mov
js
jb
mov
shll
xchg
xchg
inc
inc
and
in
mov
lahf
push
push
dec
add
or
pop
pushf
insl
rolb
sti
loop
jno
push
loope
mov
xchg
xchg
stc
pop
jo
mov
push
insb
sahf
cld
lcall
rcll
add
or
jmp
enter
add
out
cmp
lds
aas
push
mov
js
shlb
loopne
jmp
pop
pop
mov
xchg
stos
or
lcall
xchg
push
pop
ret
jae
and
adc
decl
jo
or
fimuls
xchg
mov
fdiv
cwtl
xchg
add
dec
aad
jnp
call
jb
negb
add
pop
add
ret
pop
add
mov
add
ficoms
add
testb
fidivs
add
fisubrs
add
fidivs
add
adc
fidivs
add
popa
jne
xor
jle
xlat
sub
mov
mov
inc
add
add
mov
cmp
jae
add
inc
xlat
popf
cmpsb
add
fists
push
hlt
lahf
xchg
adc
pop
lds
bound
mov
test
jmp
dec
sbb
pop
xchg
out
mov
adc
test
jns
test
iret
inc
push
or
dec
xchg
pop
outsb
hlt
xor
mov
lods
add
jne
lcall
insb
mov
xchg
cld
jle
stos
adc
sbb
sbb
clc
xchg
and
loopne
rol
add
je
bound
inc
aas
loope
sbb
mov
lock
nop
add
inc
xchg
out
push
cwtl
xchg
push
push
cmp
loopne
jo
pop
je
add
mov
pop
test
cwtl
pop
cltd
mov
add
lahf
jnp
rcll
aas
push
jmp
inc
inc
inc
andb
pop
or
xor
repnz
or
xor
out
xor
fucomp
and
in
push
xor
into
inc
xor
or
xchg
adc
mov
add
roll
add
add
xor
insb
shll
add
mov
sbbl
push
lea
add
in
jl
sub
sub
sub
sub
add
dec
ja
add
je
sbb
mov
gs
out
xchg
loopne
xlat
mov
mov
jge
xchg
mov
mov
dec
cmpsb
push
add
cmpsb
jns
popa
dec
in
divl
ljmp
faddp
xchg
lcall
jle
dec
les
lds
cltd
mov
in
insl
lods
xlat
shrl
stos
xchg
cltd
popf
add
dec
pushf
test
lock
xchg
mov
stos
xorl
lods
andl
nop
push
iret
outsb
insb
orps
add
add
jno,pn
fisubrs
jmp
adc
adc
mov
enter
test
xlat
sub
pop
cld
dec
lret
add
add
imul
movsb
sbb
ja
push
in
adcb
adc
idivl
xchg
cmpl
add
fmull
add
mov
sbb
call
clc
test
add
stos
fisubs
dec
insb
pop
mov
adcb
adcb
push
dec
dec
cmp
pushf
sbb
push
adc
cli
push
cmpl
lret
test
dec
bound
lds
cmp
inc
sub
mov
shrl
mov
pop
cmpsl
or
add
inc
std
cmpsl
xchg
dec
pop
loope
inc
test
mov
mov
adc
out
cwtl
data16
xchg
jae
sub
mov
es
xor
cmp
inc
aaa
std
pop
inc
and
and
pop
gs
insl
or
repnz
jns
call
dec
ds
pop
or
enter
sbb
xor
add
call
push
adc
out
add
pop
jno
push
mov
mov
jp
popf
xor
addl
push
cli
cs
adc
pop
add
push
in
cwtl
les
sub
sbb
jnp
mov
shlb
fstpt
fwait
js
rcrl
stc
xor
add
add
das
insb
mov
mov
int
sti
mov
aad
cmp
xchg
or
sbb
pushf
ret
fbstp
mov
mov
aaa
std
stos
adc
add
add
add
testb
and
lock
add
in
mov
xchg
in
mov
int
xor
int
xor
int
xor
mov
sub
pop
add
mov
sub
ja
nop
xor
loopne
pushf
inc
cli
pop
lds
sub
out
cs
mov
sbb
jmp
jne
jecxz
push
out
pop
lods
stos
add
call
or
movnti
out
mov
push
and
xchg
loop
and
xchg
mov
clc
lcall
add
xchg
add
jg
jbe
stos
int3
mov
out
pop
mov
int3
neg
in
sbb
fsubr
mov
add
fsubl
add
loop
add
loop
add
frstor
mov
popf
add
pusha
add
frstor
popa
push
popf
add
add
loop
add
sahf
add
popa
add
sahf
add
fs
add
frstor
jge
sahf
add
popa
add
sahf
add
arpl
jno
sahf
add
fs
add
frstor
xchg
push
sahf
add
popa
or
pop
in
add
add
pop
in
add
add
add
inc
add
popa
add
add
add
jecxz
add
pop
push
add
pop
add
add
pop
or
pop
in
add
pop
pop
add
pop
adc
stos
in
add
in
add
jecxz
add
add
inc
add
pop
or
outsl
jecxz
add
inc
add
outsb
add
mov
or
call
add
ficoms
sbb
lock
js
dec
fimuls
sbb
ficoms
jge
fidivs
jge
fsubrp
add
fidivrs
or
pop
jge
fimuls
jge
fiadds
fidivs
inc
fimuls
or
jns
ficoms
add
outsb
jge
fiadds
add
add
fisubs
inc
ficomps
add
pop
add
push
pop
repnz
pop
cld
jnp
pop
lds
fstps
jnp
pop
filds
rcrb
jnp
pop
std
add
pop
lock
pop
mov
add
pop
cwtl
mov
pop
nop
mov
pop
dec
mov
pop
or
push
pop
outsb
add
pop
jb
out
pop
fmull
add
push
pop
test
loope
fmull
das
pop
orb
pop
mov
mov
jb
lods
addr16
add
add
push
popf
add
fstp
add
popf
add
push
popf
add
frstor
pop
popfw
add
frstor
gs
popf
add
fisubrl
pop
popa
popf
add
popa
popf
add
add
popa
popf
add
add
fimull
frstor
add
fnstsw
add
fisubl
mov
sahf
add
sahf
add
pop
add
fisubl
data16
add
pop
pop
sub
adc
inc
add
or
out
in
add
xor
push
fildl
rcrb
add
pop
or
ja
inc
add
sub
add
pop
or
add
add
fildl
lds
add
fiaddl
sahf
pop
add
add
fiaddl
or
flds
jmp
add
inc
fiaddl
cmp
fadds
inc
pop
or
fcmovnu
inc
add
pop
add
fadds
fisubs
pop
faddp
test
push
add
fidivrs
fisubs
ficomps
test
add
and
test
mov
test
add
test
lock
pop
test
mov
addb
add
inc
ficomps
add
int3
addb
add
inc
ficoms
test
sbb
sbb
incb
fiadds
test
pop
lods
add
pop
addb
jmp
pop
ja
jecxz
cmp
pop
addb
push
test
pop
adc
loope
js
sahf
pop
outsb
add
pop
mov
loopne
je
sahf
pop
mov
sbbl
sub
pop
add
pop
in
sbbl
lods
out
mov
pop
test
add
adc
add
pop
movsb
out
add
sub
cmp
pop
rclb
frstor
pop
mov
add
pop
add
push
add
loop
add
push
add
adcb
loop
add
fstpl
lods
inc
push
add
frstor
int
push
add
roll
add
loope
push
add
loop
add
add
loop
add
loop
add
loop
add
fstl
dec
rorb
pop
adc
add
add
add
add
add
pop
add
add
pop
pop
add
pop
adc
dec
add
add
push
add
add
add
adc
aaa
add
add
pop
sbb
add
add
add
add
add
or
das
add
add
pop
or
and
add
pop
add
pop
add
add
add
add
pop
add
add
les
add
aam
aas
add
fisubs
add
ficoms
fisubrs
or
cwtl
out
aas
fisubrs
add
out
aas
fisubrs
out
aas
add
fisubrs
out
aas
fiadds
out
aas
faddp
add
hlt
out
aas
fimuls
out
aas
fidivs
add
fidivrs
and
enter
loopne
or
insb
call
or
add
aas
fsubp
add
fidivs
aas
ficomps
add
pop
lods
call
out
cwtl
call
rcrl
call
add
in
xchg
call
pop
mov
add
pop
sub
leave
pop
das
add
pop
nop
call
fstpl
call
fstpl
call
negb
call
fstps
call
in
push
add
pop
jo
fstps
add
pop
pop
call
aad
inc
call
fisubl
sbb
add
testb
popa
add
frstor
sub
frstor
and
fstpl
rol
add
ficoml
mov
in
orl
mov
fstl
dec
js
add
push
add
frstor
sub
fstl
sub
add
fstpl
xor
add
fnsave
add
dec
add
sti
dec
add
nop
popa
or
xchg
cli
cmp
add
popa
or
out
clc
cmp
add
stc
cmp
add
stc
cmp
add
popa
pop
add
cmp
add
clc
cmp
add
bound
add
cmp
add
add
cld
cmp
add
cld
cmp
add
sti
cmp
add
sti
cmp
add
sti
cmp
add
mov
aas
add
fsubrp
jmp
fisubs
in
aas
fmulp
add
aam
aas
fiadds
jmp
fimuls
in
aas
fisubrs
in
aas
fsubrp
add
fdivrp
jmp
add
fisubrs
aaa
faddp
jmp
fdivp
add
fisubs
fiadds
jmp
fisubrs
jmp
fdivp
add
ficomps
aas
fdivp
add
cmp
aas
ficomps
jmp
ficomps
add
pop
xor
rcrl
add
pop
mov
rcrl
in
mov
mov
xlat
add
pop
push
in
mov
pop
pusha
in
adc
add
add
pop
and
add
add
pop
cld
in
icebp
pop
ss
pop
sbb
loope
mov
call
pop
adc
out
pop
and
rcrl
in
cld
in
mov
jge
fistpl
in
mov
pop
in
adc
add
pop
or
add
add
pop
or
icebp
pop
add
xor
jae
insl
add
fstpl
lea
add
dec
add
fstl
add
pop
add
dec
add
sub
mov
add
dec
add
mov
add
loop
add
or
add
fldl
insb
add
dec
add
fnsave
dec
inc
dec
add
fnsave
xor
dec
add
add
jae
push
add
pop
adc
mov
pop
pop
add
popa
pop
add
popa
push
add
popa
adc
jecxz
cmp
add
clc
cmp
add
cli
cmp
add
popa
or
and
cmp
add
clc
cmp
add
clc
cmp
add
add
popa
adc
mov
cmp
add
idivl
adc
mov
aas
fisubs
push
fisubrs
add
aas
ficoms
add
jmp
fsubrp
add
fidivrs
aas
fidivs
and
adc
aas
fidivs
add
fidivrs
fsubp
out
aas
fidivrs
add
aas
ficoms
out
aas
add
fidivs
or
push
out
aas
fimuls
or
mov
add
out
aas
add
fisubrs
add
fidivs
ficomps
add
pop
mov
or
add
pop
cwtl
out
stc
pop
ja
fstps
out
jmp
pop
mov
add
pop
pushf
out
leave
pop
test
pop
test
in
adc
test
add
pop
adc
sbb
add
pop
rcr
or
add
pop
call
add
pop
jl
jmp
pop
cmp
fstps
add
pop
cmp
leave
pop
sbb
out
pop
jl
mov
pop
js
test
pop
add
inc
add
fstpl
xor
in
fstl
lea
inc
add
adc
push
ficoml
movsl
add
xor
push
fisubrl
mov
fstpl
add
frstor
adc
sbb
add
mov
add
fstpl
mov
fstl
mov
pop
add
fstpl
sub
jg
leave
fwait
scas
dec
sub
push
or
gs
popa
mov
jae
inc
outsb
outsb
add
sbb
sub
jle
insl
outsl
popa
cmc
sbb
outsl
gs
daa
and
arpl
pusha
add
pop
adc
incl
pusha
add
negl
add
pop
add
pop
pusha
add
pop
pusha
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
add
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
ficomps
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
pop
add
xchg
xchg
ja
add
ja
add
xchg
xchg
add
ja
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
fdivp
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
ficomps
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
pusha
add
pusha
add
pusha
add
mov
add
mov
add
pusha
add
pusha
add
mov
add
mov
add
xchg
add
pusha
add
add
ja
add
xchg
add
pusha
add
ja
add
inc
pusha
add
inc
pusha
add
aaa
pusha
add
aaa
pusha
add
inc
pusha
add
inc
pusha
add
aaa
pusha
add
aaa
pusha
add
pop
pusha
add
pop
pusha
add
negl
add
pop
add
pop
pusha
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
pop
add
pop
pop
add
negl
negl
pop
pop
add
pop
pop
add
negl
negl
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
add
xchg
xchg
ja
add
ja
add
xchg
xchg
ja
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
add
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
add
add
aaa
popa
add
aaa
popa
add
inc
popa
add
inc
popa
add
aaa
popa
add
aaa
popa
add
pop
popa
add
pop
popa
add
mull
add
pusha
add
pop
popa
add
pop
popa
add
mull
add
pusha
add
pusha
add
pusha
add
mov
add
mov
add
pusha
add
add
pusha
add
mov
add
mov
add
xchg
add
pusha
add
ja
add
xchg
add
pusha
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
add
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
add
add
ja
add
xchg
add
pop
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
negl
pop
pop
add
pop
pop
add
negl
negl
pop
add
pop
add
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
add
add
add
add
add
add
add
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
mov
add
popa
add
popa
add
add
mov
add
mov
add
xchg
add
popa
add
ja
add
xchg
add
popa
add
ja
add
inc
popa
add
inc
popa
add
aaa
popa
add
aaa
popa
add
inc
popa
add
inc
popa
add
aaa
popa
add
aaa
popa
add
pop
popa
add
pop
popa
add
mull
add
pusha
add
pop
popa
add
pop
popa
add
mull
add
add
pusha
add
pusha
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
ficomps
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
pop
add
ja
add
xchg
add
pop
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
fdivp
add
ficomps
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
add
popa
add
popa
add
mov
add
mov
add
popa
add
popa
add
mov
add
mov
add
xchg
add
popa
add
ja
add
xchg
add
popa
add
ja
add
inc
popa
add
inc
popa
add
aaa
popa
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
ficomps
add
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
add
pop
call
mov
pop
les
jmp
pop
inc
mov
pop
sbb
rcrl
mov
pop
add
add
rcrl
mov
pop
pop
mov
pop
pusha
mov
pop
add
lea
add
mov
add
mov
add
jb
add
and
int
and
mov
and
adc
fstpl
fcompl
imul
pop
add
fcompl
or
pop
add
fstpl
enter
or
pop
add
fstpl
lret
fcompl
imul
add
pop
add
pop
add
fstpl
imul
pop
add
fstpl
add
pop
add
fcompl
mov
pop
add
fwait
pop
add
ja
add
fs
add
pusha
js
add
add
into
js
add
jns
add
jbe
add
jbe
add
jbe
add
pop
add
add
push
inc
add
pop
add
dec
jae
add
pop
add
xorb
pop
add
push
je
add
jae
add
jae
add
jae
add
add
jb
add
lds
fisubrs
inc
faddp
add
fiadds
add
inc
fisubs
add
sbb
inc
fiadds
outsb
inc
add
fiadds
outsb
inc
ficomps
add
inc
fisubrs
add
inc
fidivrs
jno
fimuls
ficomps
add
inc
fsubrp
add
fdivp
jo
fdivrp
add
fimuls
inc
fimuls
add
ficoms
add
fimuls
call
push
ficomps
push
add
ficomps
push
ficomps
push
ficomps
gs
pop
in
add
pop
repnz
pop
out
add
pop
fbld
pop
repnz
pop
aam
sahf
pop
jecxz
ficomps
gs
pop
hlt
add
pop
in
sahf
pop
out
ficomps
bound
pop
pop
in
ffreep
add
pop
test
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
add
push
add
fstpl
dec
loop
add
insl
add
loop
add
fimull
add
pop
add
std
fnstsw
fisttpll
add
fstpl
xlat
fnstsw
mov
fisttpll
add
fstpl
mov
xchg
add
frstor
fstpl
stos
jl
insl
add
outsl
add
and
add
pop
and
xor
or
lea
add
pop
outsb
add
pop
je
and
jne
jge
and
mov
pop
or
adc
add
jb
out
pop
outsb
add
pop
cmp
daa
pop
and
adc
or
sub
pop
push
add
pusha
add
add
pop
insl
add
jae
cmp
add
bound
push
pop
add
and
outsb
add
jne
push
popa
pusha
add
add
dec
add
bound
fidivrs
add
outsl
fisubrs
push
fisubrs
add
jae
push
inc
fidivrs
jb
js
fisubs
ficoms
jae
insl
add
add
add
fs
outsb
fisubrs
add
add
add
fdivp
add
test
insb
ficomps
add
clc
add
fiadds
add
testl
popa
add
in
insl
ficomps
add
pop
movsb
add
pop
add
pop
dec
add
pop
push
add
pop
inc
add
pop
cmp
pop
dec
add
pop
call
add
add
pop
add
add
pop
enter
enter
sti
add
pop
cld
add
pop
int
lods
pop
fldl
in
call
mov
inc
call
mov
ficomps
movsb
jl
lret
dec
cmpsb
orb
ficomps
scas
insl
dec
fwait
std
or
add
fstpl
int3
fstpl
int3
mov
add
add
sub
das
popa
das
and
fstpl
add
and
addl
add
es
sub
addb
mov
push
dec
mov
jmp
pop
xor
fstpl
jns,pn
add
xchg
dec
xchg
and
push
jmp
jo
fs
and
jecxz
pop
add
add
cmp
or
pop
add
xchg
arpl
or
jne
std
cmp
pop
add
testb
gs
push
sub
fs
xlat
mov
add
loopne
fs
push
jo
flds
inc
loopne
imul
add
icebp
popa
jb
inc
pop
jae
jnp
das
add
popa
insl
add
pop
add
add
addr16
inc
sub
dec
popa
push
sti
inc
outsl
inc
cmpsl
popa
adc
imul
pop
push
fsubrp
lods
inc
insb
imulb
pop
sbb
lods
inc
dec
push
test
push
push
mov
add
fimuls
add
fiadds
cmpsl
jae
xchg
mov
jns
mov
out
int3
out
ficoms
movsb
js
add
je
add
xchg
mov
int3
mov
mov
cmp
ljmp
push
mov
sub
movsl
mov
fiadds
scas
sub
pop
mov
sbbb
jnp
lcall
push
test
xor
add
pop
test
mov
push
dec
mov
dec
dec
add
pop
in
add
jecxz
call
shrb
pop
sbb
incb
sahf
add
repz
mov
ficomps
lods
rolb
mov
lret
inc
or
movsl
sub
lret
dec
lds
ficomps
mov
push
shr
pushf
dec
add
cmp
mov
inc
outsl
jmp
xlat
pop
add
fstpl
rol
jae
xchg
sahf
add
lea
xchg
jnp
add
jne
or
fstpl
lea
fsubs
push
ds
outsl
pop
inc
dec
js
fstpl
sbb
pop
mov
inc
addr16
dec
cmp
xor
pop
add
xchg
sub
jmp
sbb
fstl
cld
fisttpll
jmp
frstor
add
push
pop
inc
add
add
add
xlat
popa
jge
out
add
pop
pop
jb
in
shrl
inc
or
push
shlb
ret
push
add
gs
bound
pop
add
inc
pop
cmp
iret
popa
dec
add
popa
cmp
in
popa
dec
add
popa
cmp
fsubl
add
popa
push
add
popa
add
push
jae
shlb
add
popa
add
pop
add
add
fs
popa
bound
add
in
push
add
pop
push
ficomps
add
add
pushf
add
les
add
repz
incb
push
ficoms
add
sbb
inc
fimuls
add
fldl
arpl
pop
add
push
add
in
je
movb
fimuls
add
ficomps
fisubrs
add
add
ja
popa
add
fisubs
push
fisubrs
data16
add
xchg
add
push
fisubs
je
addr16
add
pop
sbb
add
pop
call
add
test
add
call
add
popf
add
add
xchg
add
pop
stos
add
pop
xchg
add
pop
test
sub
call
add
add
pop
popf
add
pop
inc
add
pop
call
add
pop
cmp
add
pop
xor
pop
sbb
ret
pop
sbb
pop
call
add
pop
add
add
fimull
or
inc
add
frstor
add
fldl
fldl
fstp
pop
add
fstpl
lcall
add
fisttpll
les
add
inc
add
add
fisttpll
nop
fldl
fstpl
jmp
fstl
loop
add
dec
add
add
add
cmp
cmp
cmp
dec
loop
add
fstpl
cmp
push
add
cmp
add
pop
jne
ficompl
add
push
add
pop
bound
sub
add
pop
jne
add
pop
add
pop
pop
add
inc
pop
outsb
add
pop
outsl
add
pop
push
add
pop
add
add
outsb
add
add
mov
add
insb
pop
pusha
add
jno
pop
pop
jae
and
push
pop
add
aam
add
je
and
pop
js
xchg
add
jno
fisubs
jb
add
ja
imul
add
outsb
add
mov
add
jae
les
add
movsl
add
movsl
add
test
and
les
inc
fisubs
add
popf
add
icebp
add
movb
fiadds
add
lock
push
add
fiadds
add
push
add
xor
add
add
movb
fiadds
add
outsl
ficomps
add
pop
xor
leave
pop
sbb
pop
call
add
pop
daa
add
pop
sbb
pop
cli
add
pop
add
add
pop
test
add
pop
mov
add
mov
add
call
add
pop
call
add
add
pop
jge
sub
xchg
add
pop
jno
ficomps
add
pop
sub
add
pop
call
add
pop
add
inc
add
dec
add
dec
add
fstpl
xor
inc
add
loop
add
fimull
fnsave
add
fstpl
xor
aas
add
fisttpll
add
cmp
fstp
inc
add
fnstsw
add
fstpl
pushf
add
fldl
lret
add
fisttpll
fnsave
add
fnstsw
fldl
mov
dec
add
pop
add
dec
add
dec
add
aaa
add
pop
add
les
add
je
mov
push
add
add
add
jno
cmc
lock
add
fcomi
pusha
add
jmp
pop
jb
or
aaa
pop
add
stc
adc
jno
push
rep
gs
idiv
lcall
inc
jb
cld
jno
push
push
gs
or
jae
mov
push
jne
or
dec
pop
clc
outsb
jb
cld
jno
dec
lock
jb
std
fs
pop
add
jne
push
fidivs
cmpsb
jno
sub
shlb
xor
jno
add
and
lcall
test
inc
mov
pusha
mov
fs
ljmp
mov
add
fisubs
add
fidivrs
xchg
andl
pusha
inc
add
fdivp
stos
imul
jge
adc
ficoms
xchg
dec
add
pop
inc
sarl
dec
cli
add
sbbl
xchg
cmpsb
adc
test
xor
mov
mov
jb
inc
mov
movsl
cmp
ret
push
shrl
ficomps
jbe
add
sti
jno
pop
in
pop
add
pop
jmp
fldt
loopne
xchg
push
call
jne
fnstsw
pop
mov
fwait
add
push
inc
call
add
pop
in
or
pop
pop
cmp
icebp
xchg
fcompl
in
add
les
or
pop
sub
mov
dec
and
dec
pop
jmp
push
jmp
test
call
pushf
jno
in
xchg
cmc
mov
cmp
loop
aas
lea
mov
add
jp
sahf
push
repz
adcb
jb
aad
jns
fisttpl
scas
sbb
cs
lahf
sub
cmpsb
lods
sub
mov
fstpl
add
jo
inc
mov
gs
pop
dec
dec
jge
push
jl
add
add
or
ret
pop
sbb
pop
add
cltd
out
and
mov
cmp
add
add
add
pop
push
loop
cmpsb
jb
add
pop
or
das
jno
push
sub
adc
xchg
mov
jl
jecxz
push
jns
stc
pop
pop
add
pushf
data16
mov
cmp
dec
loopne
xorb
add
inc
pop
test
xor
fsubp
or
scas
icebp
cmp
mov
add
or
sub
or
jae
or
decl
add
sbbl
stc
push
into
mov
es
xor
add
cmp
inc
repnz
cmp
aaa
push
add
fcomps
push
leave
fiadds
and
sti
sub
cmp
sbb
lock
mov
sub
mov
pop
pop
fs
call
imul
pop
out
jnp
push
bnd
push
fcompl
xchg
pop
test
sub
jp
int
aas
rol
push
js
aam
inc
ret
jb
jp
pusha
enter
mov
sub
lahf
cmp
pop
xchg
cmp
mov
cmpsb
test
lcall
add
scas
popf
dec
sub
dec
pop
cmp
mov
add
icebp
mov
mov
popa
dec
scas
scas
das
inc
scas
mov
pop
add
lock
and
into
ljmp
jecxz
add
lcall
inc
xchg
push
adc
std
in
call
push
push
fldenv
fst
fs
fstpl
aam
enter
push
pop
in
pop
add
add
clc
cld
lcall
loope
fstpl
xchg
lcall
and
in
daa
aaa
sti
shlb
fidivl
mov
pop
repnz
cltd
inc
pop
add
xchg
mov
sbb
mov
pusha
sbb
mov
popa
adc
add
fld
pop
adc
pop
add
add
clc
rclb
test
xchg
mov
add
ss
sbb
or
sbb
aaa
pop
push
add
xchg
ja
out
xchg
sti
fidivrs
pop
cld
stc
cmp
repnz
jmp
push
jecxz
adc
fsts
pop
repz
cmc
loope
loop
lock
mov
pushl
mov
xor
mov
repz
cli
pop
in
or
fidivrs
xor
jnp
or
pop
call
and
push
add
cmp
mov
out
cmc
movsl
fnstenv
inc
in
cld
lahf
in
ficoms
jb
ja
jge
pop
pop
scas
jnp
icebp
mov
jl
call
mov
sbb
mov
movsl
lret
mov
add
add
sbb
aas
dec
mov
mov
sub
jp
cld
pop
jle
add
xchg
repz
add
pop
mov
push
xchg
lods
roll
stos
pushf
inc
cmpsl
out
ficomps
repz
cmc
rcll
or
pop
in
ficomps
bound
add
hlt
mov
mov
mov
add
mov
mov
ficompl
xchg
insl
pop
lods
addr16
add
xchg
jbe
add
xchg
jp
fiadds
jb
loope
jle
in
nop
outsl
inc
insb
scas
dec
dec
jne
inc
dec
gs
dec
jmpw
add
in
hlt
movzwl
in
fcmove
jmp
inc
cmp
sub
jp
jbe
add
mov
mov
add
pop
add
in
or
sub
nopl
decl
pop
pusha
add
dec
into
add
test
cmp
push
ss
pop
add
lcall
nop
cld
add
outsl
jmp
jmp
ja
hlt
out
out
loope
pop
add
adc
fcomp
int
lret
mov
shl
add
xor
add
sub
in
shrb
ror
sbbl
fbld
add
cmpsb
std
fimuls
inc
mov
js
jns
dec
mov
add
dec
subb
imul
mov
mov
icebp
push
in
int3
push
sub
mov
add
xor
mov
xchg
fdivrp
xchg
insl
add
sbb
xchg
jbe
fsubs
add
add
sub
xchg
shll
fidivs
mov
dec
mov
fidivs
jo
jne
pop
test
aam
movsb
sbbb
jnp
push
jne
fsubrl
or
dec
cmp
adc
push
inc
xor
mov
je
pop
xchg
inc
adc
xchg
add
jge
stos
jne
add
add
pop
cld
add
pop
xlat
out
add
cmpsl
cwtl
sub
mov
shll
cmpsl
mov
or
xchg
mov
pop
cs
push
inc
or
cmp
movsl
add
fstpl
movsb
add
jl
cmpsl
sarb
add
pop
add
inc
xor
inc
inc
push
sbb
sbb
and
push
mov
frstor
ret
inc
into
jl
outsb
lds
dec
pusha
ret
fs
push
xor
jo
mulb
jmp
aad
fsubr
fstpl
and
mov
jmp
push
and
fstpl
add
sbbl
add
lds
rcl
cltd
xchg
aaa
pop
add
jecxz
add
adc
arpl
shll
add
pushf
std
jmp
icebp
out
pop
add
xchg
div
pop
add
pop
adc
rolb
pop
add
push
mov
dec
cmp
movsb
xor
lods
test
adc
add
popa
out
add
dec
dec
ds
dec
dec
add
cmp
add
insb
hlt
scas
xlat
in
in
jns
call
add
jmp
and
push
xchg
pop
add
push
xchg
jae
sbb
inc
xor
incb
add
enter
mov
add
or
clc
dec
shlb
int3
fisubs
icebp
push
cld
or
ret
add
nop
cwtl
insl
push
xchg
scas
popa
add
xor
lahf
or
into
mov
std
ljmp
je
shll
test
push
pop
push
push
push
ss
mov
nop
popa
sub
mov
negl
jg
fbld
pop
pop
add
pop
jno
andl
push
scas
cwtl
aas
or
add
pop
outsb
mov
add
out
ficomps
es
mov
adc
out
ficomps
cmpl
mov
out
ficomps
push
leave
ret
shrl
and
lods
cmp
popf
mov
adc
fwait
add
mov
mov
out
stos
rol
lods
nop
int
push
stos
enter
lds
and
add
ja
lock
sarb
outsl
or
or
jle
outsb
test
mov
push
bound
jmp
sub
jmp
adc
pop
add
dec
push
in
add
cmc
mov
adc
std
adc
pop
add
cmp
out
xchg
push
in
cli
loope
add
add
insb
jns
iret
outsb
add
add
pop
push
add
cmp
out
sarb
in
addr16
and
and
pusha
add
jl
faddl
mov
xchg
test
xchg
nop
aaa
pusha
add
out
jbe
pop
pusha
add
lcall
mov
fs
icebp
fwait
cmpl
ss
adc
ds
xchg
and
add
add
out
add
fiadds
shlb
lret
ds
scas
adc
add
cmp
dec
xchg
hlt
test
fmulp
or
in
lds
push
fld
clc
decl
xor
adc
dec
int3
sbb
dec
add
mov
jns
jle
dec
stos
jne
inc
lods
data16
push
xchg
jg
pop
test
pop
xchg
push
mov
popf
les
add
rcrb
add
xor
push
stos
fwait
les
add
cmp
ja
pop
mov
les
add
pop
add
ljmp
sahf
cmp
cwtl
stos
or
xchg
pop
mov
jb
imul
pop
add
bound
sbb
lret
iret
add
add
pop
pop
xlat
or
orl
jbe
fimull
push
ficomps
pop
add
dec
clc
push
imul
pop
mov
push
pusha
and
in
out
ficomps
cmpsl
dec
call
loop
jns
add
pop
add
test
ret
dec
cmp
mov
mov
and
fstpl
cs
xchg
lret
test
sbb
pop
add
mov
lods
pop
mov
cmpsb
scas
std
cmpsb
add
adc
hlt
fcmovbe
lahf
mov
jmp
sub
push
and
xor
adc
sub
sub
push
xchg
sahf
jne
loop
push
gs
in
addr16
add
push
loop
je
xchg
in
add
jnp
cmc
adc
mov
add
sbb
add
in
insl
leave
stos
xchg
add
xchg
add
ja
add
fiaddl
mov
adc
mov
cmp
movsl
inc
pop
add
not
dec
inc
cwtl
cld
arpl
or
sbb
cmp
add
sar
addr16
enter
add
sahf
insb
pusha
clc
cmp
add
icebp
sbb
ficoms
aas
xor
pop
in
mov
mov
add
add
xlat
leave
push
pop
sarl
or
negl
jp
lcall
fidivrs
dec
stc
xchg
pop
xor
lea
xor
dec
inc
inc
int
jns
vaesdec
fwait
push
xchg
dec
mov
scas
push
mov
mov
lods
push
dec
mov
insb
jp
add
add
fsubp
inc
fcoms
pop
movsb
dec
adc
test
xor
pop
fcmovnb
sbb
cmpsl
lods
cs
enter
lock
and
mov
aam
insl
in
fdivrp
sub
call
mov
ficomps
pop
xor
call
adc
bound
pop
cli
in
outsl
sbb
adc
incl
filds
add
pusha
hlt
fldlg2
je
call
xlat
aaa
int3
add
addr16
mov
sub
xor
sub
dec
adc
pop
sbb
pushf
sbb
imul
call
clc
cli
ds
mov
dec
mov
add
int
leave
and
xchg
add
lods
add
cmpsl
addl
or
fisubrs
pushf
pop
add
sbb
out
or
ds
jecxz
insl
xor
sti
jp
add
jmp
push
pop
ljmp
push
ljmp
dec
mov
inc
dec
sti
decb
dec
repnz
test
icebp
aas
xor
daa
es
rolb
jns
add
add
add
mov
call
jg
loope
push
repnz
int3
push
std
cli
xchg
add
test
into
sub
into
cs
cwtl
shrl
mov
sub
sahf
rcr
mov
fists
add
es
outsb
xor
cltd
push
inc
jge
push
and
popa
movb
fidivs
out
in
sub
add
add
sub
insb
test
xchg
fisubrs
movsb
push
pusha
cmpsb
and
xchg
push
ficompl
push
xchg
ficomps
xchg
fsubp
ret
push
sbb
mov
inc
pop
aam
or
sbb
dec
fisttps
adc
movsb
daa
repnz
and
pop
arpl
xchg
add
inc
test
adc
mov
fwait
xor
dec
lret
movsl
jb
fnstenv
push
test
daa
cmp
mov
inc
mov
pushf
sub
imul
cmp
hlt
imul
mov
pop
xchg
cmpsb
xor
pop
mov
mov
sbb
push
loop
lods
scas
or
scas
mov
or
cmc
mov
aaa
mov
add
push
pushf
lret
pop
cmp
pop
add
das
fs
cmp
jbe
adc
jnp
icebp
sbb
lret
push
fdivr
pop
add
into
iret
push
sbb
fcoml
push
ror
push
push
mov
push
add
insb
xor
int3
push
aas
shll
add
mov
sub
movsb
leave
jae
in
sbb
lcall
adc
fiadds
adc
jl
icebp
and
mov
jl
repnz
hlt
inc
dec
mul
push
mov
jnp
nop
mov
sub
iret
mov
xchg
mov
cli
std
inc
fcoml
lcall
mov
add
pop
push
mov
mov
cs
mov
mov
adc
mov
jle
sub
add
lock
inc
lods
adc
inc
inc
fidivs
inc
out
jg
inc
stos
imul
xchg
and
ja
lods
mov
jl
ja
cmp
mov
add
mov
incl
add
dec
lods
dec
mov
add
ficomps
jno
jnp
dec
and
cmp
mov
jns
add
pusha
out
out
pop
shlb
repnz
rol
add
xchg
gs
mov
ss
xchg
jecxz
lret
ss
pop
jecxz
test
pop
xchg
subb
add
pop
and
ret
push
mov
add
ss
xchg
cs
cmpsb
mov
push
loopne
cmp
sahf
jbe
xor
icebp
scas
gs
inc
pop
out
cmpsb
aad
sbb
xor
outsb
lods
mov
bound
jae
nop
mov
ficomps
pop
sbbl
addb
push
test
out
ficomps
mov
ficomps
mov
add
inc
insl
pop
jne
das
je
sub
adc
dec
push
cmp
cmp
enter
fstpl
and
pop
jmp
fstpl
or
inc
sub
push
or
push
sub
and
xor
orl
jne
jns
jnp
mov
cmp
push
dec
push
lret
insl
int
add
push
xchg
cmp
adc
add
inc
inc
cmp
inc
dec
xor
popa
add
ja
data16
add
or
jl
lcall
ljmpw
ljmp
icebp
inc
push
int3
iret
push
dec
mov
pusha
add
cmc
cwtl
xor
and
add
xchg
sub
add
add
out
daa
xor
jmp
cmp
or
icebp
out
pop
in
mov
repz
rcr
jg
int
push
inc
shlb
xor
faddp
leave
sub
add
outsl
orl
push
mov
jl
data16
cmpsb
insb
or
push
or
xchg
jecxz
scas
add
inc
subb
lret
or
cmc
fiadds
incl
roll
add
incl
jne
add
fisubs
cmpsl
ficoms
fwait
xor
ljmp
cmpsl
xchg
add
lea
xor
xchg
fwait
testl
lret
aam
jns
enter
insb
je
lcall
jmp
arpl
nop
data16
jge
xchg
push
outsb
ror
xchg
test
call
pop
cmp
dec
jl
pop
jle
ffreep
inc
sbb
mov
inc
push
mov
xor
aam
jbe
xchg
pushf
jp
fwait
xchg
ds
lea
inc
xchg
mov
pop
add
pop
mov
daa
add
mov
imul
jg
add
insb
daa
lahf
add
pop
aas
xor
sbb
into
pushf
popa
icebp
lret
pop
repnz
add
pop
lret
mov
lcall
xchg
jge
mov
jmp
test
pushf
insl
ret
lock
push
and
mov
ljmp
pop
mov
cmpsb
lea
stos
dec
out
sarl
xor
mov
push
cmp
mov
add
push
dec
subb
je
popf
cmp
ljmp
mov
ja
mov
rol
lret
pop
mov
ljmp
in
arpl
test
psubd
jle
shll
repz
jae
out
popa
add
dec
jo
fsubrl
lcall
rcr
cmp
add
add
popa
add
xchg
movb
repz
fldt
and
xchg
jl
leave
lcall
jmp
sbb
xlat
cmp
mov
inc
sbb
lahf
adc
jns
dec
mov
adc
mov
pop
aaa
es
push
jle
add
out
in
sub
sbb
inc
iret
outsb
add
add
dec
decb
repnz
roll
and
xchg
testl
loope
loopne
rorb
push
dec
mov
sbbb
int3
mov
adc
in
sub
mov
mov
push
das
mov
pop
movsl
ret
pop
sub
ljmp
jg
and
negb
fs
jne
push
add
add
pop
xor
push
jbe
sub
jg
mov
pop
ret
mov
and
mov
popf
push
push
mov
popf
cmp
lea
add
xchg
and
pushf
xchg
pop
ljmp
scas
adc
leave
xchg
shll
rcll
cmp
xchg
dec
hlt
lcall
add
dec
and
dec
adc
pusha
sbb
sahf
add
xor
fs
or
es
js
xchg
sbb
popa
xor
pop
cmp
jno
jle
loop
add
loop
mov
shr
mov
mov
mov
push
nop
movb
outsl
iret
mov
add
test
jle
test
add
sahf
mov
loopne
dec
push
mov
jle
mov
mov
adc
mov
pop
pop
imul
mov
and
add
pop
fcomps
data16
aam
xor
jmp
dec
add
or
out
bound
popa
add
xchg
xor
add
loopne
imul
add
pusha
add
fidivrs
add
mov
mov
ficoms
xor
xchg
daa
xor
mov
add
fsubr
ljmp
add
jmp
imul
jp
in
cmp
fwait
xchg
xchg
adc
idivl
mov
add
jno
lds
push
lret
mov
add
into
fisttps
adc
jmp
stc
arpl
mov
pop
lods
add
lods
jge
sub
cmpsl
cltd
stc
in
mov
fmull
mov
pushf
imul
test
popf
xchg
dec
lds
push
cltd
xchg
push
in
add
pop
mov
push
pop
sbb
pop
sbb
pop
ljmp
add
add
dec
mov
pop
sbb
add
pop
lcall
or
imul
add
pop
mov
das
in
stos
pop
add
or
jge
cs
cmp
mov
sub
cmp
jb
inc
pop
inc
xor
out
sub
jmp
int
push
jmp
add
aam
push
lock
jmp
push
or
out
adc
fistps
or
adc
inc
add
mov
xlat
dec
xchg
mov
mov
rcrb
jmp
push
rcll
add
pop
add
sub
out
sbb
add
nopl
or
add
outsb
aaa
ds
xor
ljmp
xor
data16
xor
and
mov
or
in
sbb
push
inc
adc
sub
pop
add
test
add
rcll
xchg
mov
inc
xchg
test
mov
hlt
out
mov
lds
mov
add
cmp
add
fdivp
ret
stc
ret
incl
fisubrs
test
add
jmp
mov
add
ja
inc
sbb
pop
fimuls
add
lea
add
mov
add
scas
sbb
shll
sub
fisubs
jmp
jecxz
push
sar
pop
dec
and
add
fisubs
push
gs
add
add
dec
clc
stc
xor
sti
loop
pop
add
cmp
out
ficomps
push
enter
ficomps
pop
pop
movsl
into
adc
out
ficomps
pop
fiadds
add
pop
xor
pop
call
sub
je
cmp
pop
cs
xor
daa
push
sub
push
pop
ficomps
jbe
cmp
js
pop
mov
stos
pop
pop
lods
inc
call
ficomps
and
repnz
and
mov
mov
inc
or
pop
mov
pop
or
nop
cmovnp
shll
jmp
mov
push
ficompl
aas
js
add
jb
insl
inc
loop
add
andl
sbb
fs
loop
add
fnstsw
add
loop
add
add
fidivrl
mov
fidivrl
sbb
gs
fnstsw
sbb
add
adc
cmp
mov
push
sbb
gs
lea
add
rorb
add
test
mov
or
rclb
mov
fcoml
mov
or
shl
push
mov
pop
test
jns
rcll
add
test
rcl
push
mov
int3
or
inc
adc
std
mov
sub
rclb
cmp
fcoms
lods
popa
add
mov
gs
mov
add
add
das
bound
popa
imul
fsubrp
add
xchg
add
les
imul
in
outsl
fimuls
add
add
fidivrs
add
outsb
fisubrs
add
inc
ficomps
add
outsl
ficomps
ficomps
add
and
push
ja
sub
outsw
dec
arpl
adc
pop
jae
fs
cmp
jb
sub
data16
pusha
push
sti
cmpsl
push
add
sub
imul
or
pop
add
push
push
call
pop
sar
subb
mov
add
imul
pop
call
add
pop
dec
add
pop
dec
add
pop
pop
add
pop
or
pop
cmp
pop
loop
cmpsl
pop
ds
pop
sbb
add
pop
int
dec
pop
call
jl
adc
pusha
cmp
call
add
add
pop
adc
or
call
into
adc
add
fs
cli
add
pcmpeqw
mov
or
fstpl
mov
cmp
xchg
pop
add
push
jne
fstpl
and
xchg
add
adcl
sbb
add
and
or
xor
adc
sub
add
add
add
xor
adc
das
sub
add
or
add
cmp
outsl
add
addr16
cmpsb
add
imul
pusha
bound
imul
pusha
addr16
inc
jno
pusha
pop
add
pop
add
bound
jo
cld
add
scas
add
add
mov
popa
add
ret
cmp
call
pop
add
mov
jns
or
jne
jmp
add
repz
mov
pusha
jbe
adc
into
adc
mov
jns
push
lods
addr16
enter
test
jne
mov
push
fs
mov
bound
pop
jno
loope
je
mov
fsubp
xchg
fsubp
xchg
fdivrp
xchg
fsubrp
xchg
fdivp
xchg
ficoms
aas
fimuls
aas
fidivrs
mov
fiadds
aas
fiadds
aas
ficomps
mov
ficoms
mov
fisubrs
mov
fisubs
mov
fidivrs
int
cli
cmp
or
or
inc
sbb
adc
add
int3
adc
and
sub
std
add
xchg
cmp
or
add
pop
call
dec
xchg
sub
enter
lds
arpl
popa
mov
inc
jb
cmp
aas
popa
shll
gs
add
or
or
adc
push
aas
or
popa
dec
push
enter
add
sub
add
jne
cmp
sub
aas
or
xor
imul
int3
mov
insl
mov
mov
outsl
into
cli
pop
lret
or
or
cld
cmp
mov
cli
push
subl
push
outsl
dec
jg
push
dec
jbe
jb
fldenv
push
adcb
dec
add
outsb
dec
push
xor
cmp
rorl
sbb
arpl
fstpl
add
sub
das
xor
or
jae
fimull
cmp
inc
or
scas
aaa
or
cmp
je
in
inc
and
jb
inc
outsl
mov
add
insl
cmp
jo
fs
push
or
xor
pop
add
mov
inc
dec
push
push
add
add
cmp
sbb
push
push
ret
sub
or
negl
add
pop
add
xchg
or
negl
add
gs
or
pop
pop
sub
mov
jbe
ficomps
outsl
cmp
imul
adc
add
ficomps
add
bound
push
and
add
ficomps
xor
jle
pop
ficomps
add
cltd
add
ficomps
add
fmulp
add
xchg
add
dec
pop
dec
mov
xor
mov
jbe
ficomps
and
adc
das
ficomps
je
pop
or
pop
or
or
imul
add
pop
sub
std
add
pop
pop
sti
or
pop
sti
pop
pop
add
push
add
out
ficomps
pop
shlb
pop
mov
add
js
cli
out
ficomps
pop
ficomps
cmp
pop
cmpb
pop
xorb
pop
push
aaa
ficomps
ficomps
xor
jo
add
jo
add
pop
add
pop
add
add
cld
inc
add
fstpl
adc
xor
jne
aaa
or
cmp
and
ds
push
sbb
mov
push
and
cltd
or
push
xchg
push
sub
or
push
ss
ret
mov
std
pop
mov
add
insb
mov
pop
add
add
loop
add
mov
pop
insb
add
pop
jae
cwtl
pop
add
pop
bound
repz
push
add
pop
jae
in
push
add
pop
add
hlt
pop
outsb
add
pop
jno
out
outsl
add
dec
add
pop
add
dec
pop
push
add
pop
push
add
outsl
add
outsb
add
add
pusha
add
pop
pusha
add
pop
outsl
add
pop
add
ficomps
add
jb
sbb
add
insb
ficomps
add
data16
pop
fisubs
add
mov
add
cmp
add
insb
js
adc
jns
test
bound
pop
push
add
in
iret
fs
roll
add
mov
add
add
fsubp
add
add
fisubs
add
fsubrp
add
adc
outsb
ficomps
add
pop
push
add
pop
dec
add
pop
call
jae
add
ss
cmp
cli
cmp
pop
or
pop
sbb
pop
call
add
pop
sbb
add
pop
enter
sti
add
pop
std
jb
or
pop
or
pop
cli
pop
stos
jno
fldt
add
pop
in
add
pusha
add
mov
repnz
pop
ficomps
push
sbb
pop
lret
cli
jge
pushf
add
xchg
mov
bound
lea
or
hlt
pop
add
push
add
cmp
dec
add
mov
outsb
or
add
cld
add
aaa
sti
push
pandn
sbb
arpl
ds
cli
cmp
mov
pop
add
loop
add
fidivrl
add
or
or
pop
add
add
fstpl
mov
adc
mov
jno
and
cld
insl
insl
cmpsl
stc
je
add
push
das
cmp
push
push
dec
cmp
ss
and
das
outsl
cwtl
or
dec
stos
cmp
out
and
dec
sub
add
outsl
outsb
sbb
je
lock
cmp
aam
insl
jae
mov
add
or
shrb
das
fs
add
sar
popa
fisubrs
push
jae
or
addr16
outsb
cwtl
pop
add
addr16
cmp
addr16
add
add
inc
pop
add
inc
pop
add
fiadds
add
roll
cmp
pushf
add
enter
fwait
add
repnz
out
dec
ficomps
cmp
cmp
add
jae
fidivs
ficoms
add
imul
inc
add
jbe
pop
add
fisubs
add
addr16
add
add
sahf
add
rolb
cmp
mov
dec
faddp
add
outsl
add
dec
fdivp
add
pop
nop
add
pop
mov
test
pop
xlat
cmp
pop
iret
cmp
pop
push
ficomps
add
mov
ficomps
bound
popa
mov
inc
pop
mov
inc
cmpsl
and
jg
dec
add
pop
es
daa
pop
dec
pusha
sbb
cmp
add
pop
cs
pop
and
jno
imulb
gs
std
pusha
xor
inc
pop
and
insl
ficomps
add
iret
pop
cmc
stc
int3
pop
out
push
fidivl
adc
imul
add
imulb
lret
scas
add
add
add
add
fstpl
addl
add
add
and
test
and
mov
and
stos
add
and
or
and
adc
das
or
dec
jns
in
dec
jns
in
dec
jns
in
dec
jns
mov
dec
xor
mov
dec
xor
xlat
or
add
mov
pop
add
and
add
pop
add
pop
add
mov
add
out
cmp
add
out
cmp
add
icebp
cmp
add
cmp
add
pusha
add
les
add
pusha
add
mov
mov
or
add
or
jb
pushf
pop
add
imul
test
insl
fisubs
add
add
pop
add
xor
pop
add
and
fisubs
jae
cltd
add
fidivrs
fidivs
ficomps
add
mov
add
roll
fimuls
push
fimuls
push
fimuls
inc
fiadds
dec
fisubrs
inc
fisubs
fisubs
fisubs
push
fisubs
add
inc
fimuls
push
add
fidivrs
add
dec
ficomps
add
pop
sbb
pop
call
add
pop
movsb
add
pop
stos
add
pop
or
pop
or
pop
lcall
pop
int
lods
pop
call
add
pop
cmp
in
ret
stos
int3
cwtl
clc
je
pusha
xchg
dec
pop
jp
daa
pusha
add
ja
push
jno
sub
cmp
pusha
aaa
push
adc
sub
add
outsl
cmp
pusha
aaa
push
add
or
pusha
cmc
sbb
pushl
or
imul
add
add
dec
int3
mov
pop
add
mov
add
cld
insl
test
add
pop
add
jle
dec
push
addl
and
cld
insl
dec
jg
jb
fstpl
cs
jo
cmp
and
std
gs
notl
sub
pusha
or
pop
add
loopne
xor
popa
add
les
fs
mov
push
je
pop
insl
xor
dec
inc
mov
pop
add
cwtl
daa
push
insb
add
and
add
popa
mov
inc
inc
js
add
test
inc
outsl
mov
std
insb
cmp
add
inc
outsl
xchg
adc
mov
insb
gs
jne
xchg
adc
add
daa
jne
sbb
arpl
sbb
add
fiadds
insb
cmp
cmp
pop
arpl
jne
add
xor
sbb
jno
add
fidivrs
pop
insb
sti
nop
pop
dec
cld
stos
pop
arpl
je
add
mov
pop
inc
popf
je
add
rolb
fsubp
add
call
add
ficomps
add
faddp
add
add
dec
fsubrp
add
or
push
add
daa
add
add
inc
add
inc
fisubrs
add
outsb
ficomps
add
add
pop
sub
pop
or
pop
sbb
pop
cmp
add
pop
or
sbb
add
pop
add
add
pop
stos
add
pop
into
add
pop
movl
mov
roll
rcrb
mov
pop
mov
add
pop
lret
add
pop
fiaddl
rcrl
add
pop
call
add
add
pop
inc
add
pop
pop
add
pop
es
adc
sub
pop
add
cmp
sub
es
or
or
fs
hlt
jne
or
jne
or
fstpl
sbb
and
int
or
fstpl
mov
fstpl
jmp
adc
dec
pop
std
add
dec
pop
fldl
add
dec
pop
dec
dec
aad
dec
pop
mov
lds
mov
mov
pop
sbb
stos
dec
pop
add
inc
xor
pop
roll
pop
roll
pop
ret
inc
xor
pop
xchg
inc
add
repnz
sbbl
or
lds
push
std
mov
pop
push
mov
add
test
add
jb
jmp
adc
rolb
adc
jne
aam
or
fisttpl
orl
push
aam
call
fdivp
push
fimuls
push
rolb
and
xor
add
mov
jno
fistl
add
add
add
movsb
cmp
movsl
cmp
sarl
es
cmp
adc
dec
xor
lds
push
popa
cmp
xor
popa
cmp
xor
cmpb
cmpsb
mov
xor
cmpb
xchg
mov
xor
mov
cmp
mov
cmp
sarb
cmpsb
enter
pop
mov
mov
insl
push
mov
add
cmpb
xor
cmp
add
ja
call
lea
pop
push
lea
shlb
mov
xorb
aam
mov
out
fidivs
add
pop
xchg
cmp
cli
loopne
rcrb
xor
out
fidivs
dec
loopne
bound
add
aam
mov
aam
std
int3
cmp
aad
add
fstpl
cmp
jne
cmp
sbb
sbb
pop
add
push
and
inc
int
int
pop
sub
pop
xchg
jb
cmpb
loop
add
addl
jbe
push
mov
push
cmp
push
sar
cmpsl
push
imul
xchg
xchg
add
std
jmp
fs
push
addl
push
xchg
add
ror
call
mov
or
mov
std
push
pop
add
stos
aam
push
adc
xor
or
lock
jle
mov
add
adc
mov
mov
add
cmp
cld
cld
pop
add
ljmp
add
add
cmc
cld
add
inc
push
mov
jb
add
andb
mov
dec
mov
sub
lret
mov
lock
add
mov
rcr
decl
loop
lea
add
fimuls
iret
out
xchg
leave
std
gs
mov
incb
call
fdivrp
lock
pop
sbb
ljmp
mov
sub
sahf
push
add
fbstp
icebp
je
jne
outsl
sbb
or
jnp
stc
inc
or
es
add
data16
outsl
ret
fcoml
push
sar
je
mov
inc
and
push
push
sti
inc
adc
or
negl
sbb
pop
call
mov
rcrb
lcall
push
lcall
add
add
pusha
aas
ljmp
inc
fidivrl
stos
add
pop
xor
ss
outsl
push
fnsave
gs
imul
int3
push
sbb
fs
mov
out
fidivs
sbb
pushw
mov
push
out
xchg
xchg
push
jge
mov
xchg
out
adc
jmp
add
push
jge
jmp
mov
lret
xor
mov
outsb
xchg
pop
test
mov
xchg
jmp
call
int3
jbe
vpabsb
dec
push
jp
sbb
adc
mov
fucom
arpl
lret
pop
jecxz
add
jmp
jmp
add
mov
add
push
insl
subl
xchg
jmp
subl
add
add
std
call
lock
test
adc
dec
mov
jmp
add
loopne
xor
ljmp
cmp
pop
idivl
xor
pop
repz
pop
mov
xor
pop
mov
xor
pop
add
mov
xor
pop
mov
xor
dec
aaa
and
xor
pop
ficomps
xor
push
cmp
xor
push
cmp
add
rorl
cld
mov
mov
or
cmpsb
call
test
fldl
lock
or
dec
lea
negb
ficoms
ss
cmp
add
add
pop
cmp
xor
jns
xor
jno
xor
jns
xor
jno
xor
cltd
cmp
xchg
cmp
cltd
cmp
xchg
cmp
mov
cmp
pop
mov
cmp
push
adc
or
sbb
adc
adc
or
cld
cmp
pop
xchg
mov
imul
fwait
xor
mov
add
add
add
and
mov
stc
ljmp
pop
call
cmp
push
sbb
push
sbb
adc
adc
or
cld
cmp
adc
cld
cmp
adc
fdivrl
rclb
fmuls
daa
fmuls
daa
add
mov
pop
mov
movsl
xor
sbb
pop
sbb
xor
or
pop
adc
add
add
pop
std
cmc
pop
add
push
adc
fs
jmp
bound
in
std
lods
push
cmp
lds
jmp
sbb
pop
sbb
xor
or
pop
adc
cmc
xor
cmc
xor
in
pop
cmc
in
pop
fst
xor
aad
pop
add
xor
pop
add
cmp
pop
sub
pop
negl
xor
pop
xor
cmp
pop
cmp
add
jmp
mov
out
cld
xor
dec
lea
call
mov
outsb
ss
call
jl
std
cmp
xor
cmp
pop
out
xor
cmp
pop
mov
xor
add
xor
pop
cmpsl
xor
pop
ficoms
xor
xchg
cmp
es
cmp
push
mov
xor
mov
xor
mov
xor
mov
xor
push
cmp
xor
je
add
rorl
mov
rcl
je
icebp
xchg
mov
test
xor
push
xlat
mov
add
test
add
push
cmp
xor
push
cmp
xor
jne
xor
jne
xor
pop
clc
cmp
adc
fdivrs
into
adc
fdivrs
into
adc
mov
inc
scas
daa
mov
cmp
push
sbb
push
sbb
push
sbb
push
sbb
adc
xchg
mov
add
pop
xchg
mov
push
daa
dec
out
pop
xchg
or
mov
test
loop
call
nop
loope
out
ficomps
cmp
push
sbb
push
sbb
push
sbb
adc
pop
stc
in
pop
stc
in
pop
stc
aad
dec
fstps
cs
fldenv
cs
fld
sub
pop
mov
and
dec
mov
add
adc
cs
sbb
cs
sbb
sub
add
xor
xchg
data16
xchg
sub
call
nop
pop
jmp
lcall
jmp
fstpl
sbb
cs
sbb
sub
xor
inc
xor
dec
xor
dec
xor
dec
xor
push
xor
add
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
inc
xor
inc
xor
inc
xor
pop
xor
push
add
push
repz
add
mov
xchg
sti
add
pop
andb
mov
sub
dec
ds
fistps
add
fidivs
jle
add
pop
cltd
leave
xorb
xor
jmp
mov
sbb
int
jl
xchg
xor
pop
loope
mov
lods
mov
jle
pop
fxch
push
addps
push
mov
fdivr
push
mov
jmp
mov
mov
push
fldt
pop
add
sarl
xlat
aaa
push
push
cs
fildl
sub
cmpsb
xchg
sub
add
mov
xor
mov
xor
test
xor
pop
mov
add
pop
cmp
int3
pop
sub
or
pop
sbb
inc
jg
call
jnp
jb
jge
test
add
pop
imul
lds
mov
scas
adc
mov
sub
and
inc
push
and
inc
or
sbb
add
repnz
popf
jl
fimuls
jg
call
jnp
jb
jl
fldl
int3
pop
xorl
ficomps
lcall
ficompl
fstpl
cmp
test
cmp
push
jb
cmp
pop
add
test
in
cmp
in
cli
inc
jno
cmp
test
clc
jno
aas
mov
jae
add
bnd
sbb
test
push
fstpl
push
pop
add
cli
sub
pop
sbb
add
pop
std
cmc
sub
cmc
sub
lds
pop
jmp
mov
add
ss
jl
std
incl
pop
dec
imull
test
outsl
adc
pop
add
pop
sub
inc
and
jb
pop
add
add
sub
sbb
fs
sub
aad
jne
ja
add
aam
imul
jb
add
pop
insl
add
push
mov
sub
in
inc
push
push
adc
roll
inc
mov
dec
fidivrl
pop
push
adc
ficoms
pop
add
adc
add
sti
int3
test
icebp
pop
addb
arpl
int
shr
stc
jae
mov
and
test
add
outsb
and
fdivrp
shll
add
mov
lock
or
xor
decl
rcr
adc
fistps
jbe
icebp
add
dec
add
add
rorb
mulps
inc
out
add
lcall
outsb
xchg
in
add
pop
sub
pop
mov
popf
pop
sub
ficomps
add
fistl
add
cmp
fisubrl
xor
data16
inc
pop
cltd
xor
push
jo
add
int
inc
sti
inc
fisubrs
mov
insb
popa
lcall
pop
jns
xorl
adc
shlb
sub
pop
call
mov
pop
call
add
add
pushf
add
sub
and
sbb
pop
icebp
add
mov
push
push
ds
adc
xor
or
sbb
sub
jmp
lods
mov
inc
xor
jmp
and
inc
xor
test
lret
jmp
xchg
mov
call
add
fstpl
sbb
std
jo
inc
adc
insl
add
lods
adc
jle
fstl
sub
fdiv
mov
icebp
or
pop
das
sub
adc
and
inc
adc
and
sbb
mov
push
call
cld
mov
and
add
mov
int
pusha
mov
mov
mov
add
add
movsl
std
ljmp
push
and
jl
jno
jae
xor
pop
outsb
lea
popa
mov
mov
adc
mov
adc
and
pushl
sbb
mov
push
call
fidivrs
ret
mov
mov
aaa
xor
pop
and
xor
add
sar
add
clc
je
loope
lret
idivl
fdivl
add
lea
fdivl
in
dec
insb
push
cmp
adc
lea
fbstp
adc
rcrb
mov
jle
mov
pop
cltd
cmp
pop
std
add
cmp
outsl
ficompl
mov
jecxz
call
dec
add
ljmp
jle
daa
cmp
fsubs
sbb
repnz
push
push
jae
or
loopne
mov
fsubrs
add
ljmp
push
in
call
sub
loope
xor
int3
pop
jns
add
pop
sbb
and
aas
pop
call
popa
add
add
pop
push
fcmovu
add
inc
pop
add
daa
cli
cmc
stos
adc
inc
sbbl
daa
repnz
sbb
js
pop
add
out
pop
cli
sbb
mov
cmp
sub
mov
lcall
jmp
adc
push
rorl
add
xor
ficompl
inc
mov
add
decb
shrl
test
inc
bound
loopne
mov
inc
adc
cmpsl
rolb
call
clc
mov
pop
mov
inc
ret
or
add
xchg
xchg
inc
sbb
test
rclb
rclb
inc
mov
dec
call
mov
scas
pop
add
pop
call
jmp
xor
or
in
xor
add
cmp
std
incl
dec
data16
test
bound
add
cld
jo
push
ja
dec
mov
xchg
xor
std
sub
std
sub
xrelease
cwtl
or
stos
mov
push
pop
cs
out
add
call
cmp
mov
mov
sar
out
xchg
call
sbb
jbe
jmp
adc
jmp
pop
fdivl
cli
jo
cld
jecxz
hlt
mov
jno
cmp
sub
out
push
add
push
pop
sub
out
xor
into
sbb
adc
mov
pop
call
dec
fmuls
nop
popl
add
pop
call
ret
sub
sbb
sbb
ret
shlb
dec
jmp
push
jmp
pop
inc
imul
out
fcomi
or
popa
ret
mov
lret
or
stos
push
insb
push
ficoms
mov
out
sbb
or
push
fs
addr16
loop
inc
or
add
xchg
adc
pop
add
fdiv
push
jno
inc
or
in
mov
sub
jne
iret
fistps
call
pop
ljmp
dec
inc
jmp
add
pop
push
jg
inc
or
pushf
pop
add
inc
loope
and
xchg
or
imul
popf
std
adc
add
inc
jne
testl
add
or
call
add
add
lds
add
pop
add
test
add
repnz
and
add
add
lcall
inc
popa
cmp
fcomps
fcmovnbe
subl
or
arpl
call
mov
fcmovne
popf
pop
pop
jge
pop
mov
add
push
mov
pop
pop
and
adc
subl
add
push
call
or
xor
and
add
mov
sahf
sbb
fdivl
out
aad
cmp
sub
mov
and
push
jbe
sbb
es
pop
jmp
dec
jb
cmp
js
mov
add
aas
mov
movsb
test
mov
les
pop
push
aaa
pop
ret
sub
gs
ret
loopne
mov
pop
ret
jb
imul
imul
jmp
mov
pop
dec
std
leave
jmp
scas
ret
loopne
mov
jae
jecxz
xor
push
hlt
pop
lods
add
jae
jmp
stos
xchg
dec
ljmp
or
mov
pop
mov
push
ret
sbb
mov
pop
ret
dec
stos
mov
in
out
mov
packssdw
clc
jne
sbb
pop
daa
cmp
aam
mov
shrl
add
lret
addr16
ret
jge
es
or
pop
push
cmp
jmp
ss
jmp
aaa
std
jno
arpl
adc
jmp
sbb
jmp
jecxz
mov
add
adc
popf
xorl
jne
popw
arpl
sbb
lahf
mov
arpl
in
add
std
sbb
sub
pop
jmp
sub
xor
add
add
mov
mov
imul
inc
add
shr
adcl
test
lret
sub
jg
jne
dec
insl
lea
ja
inc
cld
lret
pop
fistpll
add
rolb
in
sbb
pop
jmp
test
sub
jb
imul
cmp
test
sbb
mov
fisubs
add
shll
mov
add
icebp
shll
dec
cld
arpl
mov
fs
add
mov
leave
pushf
jb
push
push
xchg
and
fdivl
push
adc
mov
mov
adc
repz
add
add
jbe
jb
mov
push
test
je
add
lea
add
cmpsb
mov
pop
mov
add
add
arpl
add
ret
cmp
jbe
jmp
fcomp
mov
mov
fucom
add
or
call
mov
pop
out
or
popa
aas
ret
push
add
add
sbb
jmp
in
mov
sbb
pop
inc
push
cmpsl
inc
add
add
pop
jae
add
loopne
cmp
ficomps
std
fucom
add
or
stos
inc
shr
add
add
pop
les
jmp
mov
pop
mov
sarl
xchg
mov
adc
int
xchg
std
add
add
cmp
jmp
arpl
and
imul
and
cmp
inc
inc
shll
jbe
or
push
sbb
inc
mov
aam
lds
pop
std
jmp
xor
and
icebp
inc
mov
add
mov
inc
jbe
mov
gs
xor
add
pop
add
iret
jns
add
inc
mov
dec
cmc
pop
je
jge
inc
mov
pop
add
fcomps
jno
xchg
or
adc
popa
mov
in
rcrl
jmp
mov
test
in
pushl
cld
jae
sbb
in
mov
add
ja
push
movb
adc
push
fstl
add
loope
and
popa
or
shlb
mov
add
ja
adcb
aaa
sbb
mov
push
idiv
sbb
cmp
sbb
mov
call
push
push
sub
add
fdivp
test
sbb
add
add
cmpl
iret
cmp
push
fiaddl
inc
mov
cmp
cmp
jno
mov
jne
sub
add
mov
mov
ficoms
jmp
idiv
pop
jecxz
popf
adc
add
in
mov
scas
stc
loopne
add
icebp
pop
jnp
sbb
cmp
in
pop
addb
or
ljmp
pop
nop
mov
push
add
inc
push
cwtl
cltd
pop
cmp
add
mov
add
push
pop
xchg
mov
jne
xchg
or
pop
ljmp
stc
xchg
mov
jnp
repnz
mov
add
pusha
pop
add
leave
out
in
mov
outsb
jmp
ljmp
jmp
inc
loope
xchg
es
std
mov
fnstsw
lcall
push
into
movsl
adc
outsl
into
or
fldl
cltd
fucom
rcrl
xchg
lock
roll
pop
pop
stos
jo
pop
stos
or
call
loop
pop
xor
popf
add
mov
imul
dec
arpl
maxps
std
nop
arpl
mov
mov
xor
add
cli
cld
pushl
shr
cli
cld
jmp
rclb
sub
mov
add
ljmp
lcall
mov
mov
push
inc
cld
mov
inc
add
push
add
loop
js
mov
mov
int3
and
push
fisubs
imul
jae
add
add
out
push
mov
inc
popa
ja
addl
push
pop
inc
add
loop
add
in
imul
ret
mov
xor
push
add
push
inc
pop
ret
jbe
sub
add
or
rcrl
or
fsubrp
lds
xchg
inc
inc
add
sub
mov
push
mov
add
sbb
add
fdivrl
pop
ljmp
mov
stos
lea
mov
xor
fistps
stos
jecxz
adc
in
mov
push
mov
inc
pop
ret
push
jecxz
sbb
sbbb
ljmp
pop
mov
jno
pop
or
ror
add
mov
mov
add
pop
inc
mov
pop
cmp
xchg
test
add
insl
das
lods
and
call
cmp
or
cli
add
pop
addr16
mov
inc
jb
pop
test
mov
lahf
push
jmp
lods
push
bound
push
sub
fldl
jb
pop
test
mov
xor
inc
pop
addr16
mov
mov
add
popf
sbb
sbb
stc
jmp
cmc
adc
jmp
popf
rorl
call
fstpl
push
ficompl
or
icebp
call
in
adc
je
in
lock
sbb
jne
dec
cld
test
adc
call
ret
cmp
mov
mov
jp
cmc
call
jl
cmc
test
lea
push
adc
hlt
das
push
call
nop
mov
and
faddl
filds
movl
test
fiadds
add
hlt
inc
sub
adc
inc
jge
repz
mov
add
add
add
inc
push
adc
faddp
sbb
ficoms
ljmp
inc
add
ret
flds
add
js
cmp
cltd
add
leave
sbb
add
mov
add
sub
int
hlt
push
xchg
test
loop
add
mov
xor
in
add
add
dec
call
pop
add
jbe
test
lods
sar
add
lods
out
testb
sbb
mov
andl
loopne
add
addr16
add
and
sbb
pop
gs
inc
jae
fcompl
les
gs
insb
xor
out
pushf
cwtl
outsl
call
jg
add
push
bound
dec
fldcw
cmp
out
lods
jne
dec
std
pop
pop
mov
push
jno
adc
add
push
push
cmp
fs
sub
push
std
xor
sbb
in
pop
add
jb
add
fucom
inc
popf
pop
sar
subl
cmp
xchg
sar
out
push
xor
inc
jge
pop
add
mov
icebp
jb
dec
mov
add
cmp
jmp
in
cmp
cltd
jmp
test
jmp
out
add
in
stc
idivb
mov
mov
fcomi
incl
pop
mov
fidivrl
cld
gs
push
lcall
and
idivl
testl
inc
aaa
fstpt
add
pop
mov
jmp
rcll
lods
adc
adc
sbb
mov
in
mov
adc
pop
pop
mov
je
and
in
cmp
or
jp
push
add
inc
add
gs
popf
sbb
inc
add
fidivl
pop
add
mov
sub
cmp
xor
xorb
lret
add
add
fmulp
inc
cld
mov
add
lret
inc
hlt
mov
inc
add
roll
inc
filds
push
mov
sbb
xchg
jnp
fiadds
inc
ret
mov
jnp
add
push
ljmp
sbb
inc
jecxz
fistps
mov
leave
into
adc
faddl
add
mov
outsl
aaa
ret
xor
insl
fisttpl
jbe
jo
fsubp
mov
adc
pusha
outsb
mov
push
jmp
inc
sbb
push
call
dec
mov
scas
mov
pop
inc
loop
pop
adc
fcoml
add
inc
cli
adc
pop
pop
mov
pop
es
push
cmp
add
inc
fiadds
lea
cmp
add
push
jbe
fiadds
neg
pop
jmp
pusha
es
mov
pop
add
cmc
jp
jmp
gs
xchg
fucom
fldenv
aaa
repz
fcompl
jb
aaa
aam
fistps
cmp
ficomps
ficoml
lock
xchg
loopne
jmp
jb
jns
pusha
add
cltd
jns
bound
jns
insb
mov
xchg
and
and
and
sub
sarl
xlat
shlb
stos
pop
inc
and
push
inc
and
out
scas
inc
mov
pop
and
rcrl
inc
bnd
push
call
in
xchg
and
adc
icebp
push
or
dec
aad
call
add
mov
sbb
dec
xchg
call
dec
jae
lcall
repnz
rcr
dec
pop
gs
dec
ret
jp
ret
push
mov
notl
dec
lods
jge
lds
dec
orb
ficomps
jg
clc
add
nop
cmp
add
subl
add
scas
inc
add
aad
push
aaa
cwtl
movsl
fidivs
add
mov
inc
ficoms
adc
in
jbe
jns
ss
jo
pop
inc
fisubrs
int3
jne
sahf
rolb
fidivs
cltd
sub
bound
negl
xchg
sub
and
testb
inc
fisubrs
lcall
jb
sbb
add
lods
adc
add
fwait
push
xlat
int
push
mov
out
jbe
lock
mov
mov
sbb
nop
bound
popf
pop
mov
add
add
pop
ljmp
pop
add
inc
jno
fistpl
stos
mov
jge
mov
inc
jno
sti
popf
pop
addr16
xchg
dec
aaa
add
cmp
push
fst
inc
add
and
in
pop
add
popf
xchg
movsl
iret
push
push
into
orl
add
jge
and
hlt
mov
and
jmp
cli
sahf
add
jle
sbb
int
popf
pop
arpl
mov
jmp
add
lret
cmp
add
sarb
neg
mov
xor
les
mov
jp
jno
test
xchg
add
xlat
fwait
arpl
icebp
nop
out
push
shrb
adc
mov
jno
rclb
jg
call
push
imul
add
ja
pop
mov
add
ja
test
push
lret
inc
pop
mov
inc
add
aaa
pop
or
fdivp
add
push
adc
add
ja
add
mov
imul
filds
push
push
xor
daa
ss
lds
aaa
hlt
add
cmpsb
sub
and
subb
fiadds
pop
push
push
adcl
add
cld
jmp
jl
adc
push
xor
fdivrl
push
das
xchg
mov
pop
stos
loope
push
pop
jge
fidivs
pusha
jnp
jae
test
pop
ds
push
dec
lods
push
sbb
mov
stos
scas
pushf
ljmp
add
add
pop
insl
addr16
xor
addr16
push
dec
inc
sub
ljmp
add
aam
sti
inc
repnz
iret
iret
popf
ljmp
pop
jmp
xchg
push
pop
in
ljmp
lods
jecxz
shlb
add
sbb
ljmp
flds
fisubrl
add
es
loop
add
jns
or
fcmovbe
fldenv
adc
pop
jbe
pop
or
scas
push
imul
stc
or
pop
ret
and
push
fcoms
call
fistpl
adc
je
push
bound
cmc
pop
push
std
inc
dec
xor
loopne
inc
int
inc
or
lret
add
add
push
push
inc
aaa
mov
mov
pop
push
mov
mov
cwtl
push
jmp
cmp
inc
pop
hlt
mov
dec
in
test
mov
inc
ljmp
clc
movb
jbe
sbbl
jno
xor
add
test
adc
ret
aam
sbb
gs
xorb
jecxz
je
fnsetpm(287
push
adc
sti
fcoml
push
add
sub
or
xor
divl
push
push
sbb
rcrb
xchg
mov
add
adc
je
call
mov
or
push
lock
or
sub
xor
pushl
cmpsb
adc
inc
inc
add
std
inc
ret
dec
mov
in
dec
xor
add
cli
mov
mov
outsl
js
xchg
into
inc
hlt
push
loop
out
pop
loope
movsl
mov
add
xor
sub
add
fisubrl
mov
push
loop,pt
fwait
mov
jbe
cmp
ljmp
inc
jmp
xchg
dec
shlb
pop
mov
loope
xchg
add
add
pop
and
push
outsb
pop
flds
push
pop
ljmp
ficomps
cld
or
pop
mov
stos
add
inc
mov
add
loopne
test
leave
fldcw
inc
ljmp
inc
and
xchg
cld
cld
push
outsl
inc
jmp
outsl
xchg
rcrl
or
push
scas
ljmp
push
add
sub
ja
pop
sbb
xchg
push
call
cmpsl
sub
adc
test
dec
cmp
scas
imul
jl
adc
sbb
pusha
ret
push
cld
pushf
gs
push
jb
or
test
inc
jmp
inc
shlb
push
adc
lahf
add
cwtl
lret
add
cld
xchg
loope
xor
add
add
aas
mov
cmp
or
push
cld
call
mov
loope
or
fcmovb
lcall
or
pop
rolb
push
sahf
cmc
jne
test
or
and
or
pop
das
pushw
cmp
data16
lea
sti
jne
pushl
lahf
into
addr16
fidivs
call
pop
jo
incb
add
push
test
loope
add
or
jb
ss
jmp
test
loope
add
mov
push
add
push
or
mov
cmp
push
cltd
popf
mov
mov
or
fmulp
inc
lock
andl
fsubl
jae
fidivrs
adc
adc
add
nop
dec
sub
dec
lods
cltd
in
call
xchg
sbb
mov
les
push
push
jns
jmp
adc
xchg
pop
ljmp
push
outsb
adcb
mov
lods
pop
xchg
sub
aas
inc
fisubrs
stos
sbb
mov
push
cs
sbb
test
inc
xchg
pop
add
aam
ljmp
scas
imul
insb
stos
add
mov
imul
sub
pop
add
popf
enter
rcl
rorb
pushf
gs
push
inc
jg
jmp
inc
adc
rcrl
sbb
lods
mov
mov
jmp
data16
add
jle
ror
or
add
xlat
and
or
fistps
sub
roll
rolb
std
or
add
push
cltd
loope
sbb
add
lods
cld
sbb
incl
mov
xchg
fadd
lcall
add
add
pushf
stc
jne
mov
or
and
jb
push
cmpl
add
add
imul
pop
jecxz
add
fstp
jne
mov
loope
jne
jae
imul
push
call
mov
adc
ret
movb
add
repnz
mov
add
in
add
mov
or
rclb
lods
or
or
push
or
int
loopne
add
add
add
mov
inc
mov
add
pop
int
in
push
mov
inc
fisubs
dec
in
push
xor
adc
lcall
test
das
test
fdivl
push
mov
ss
test
fs
mov
adc
dec
inc
icebp
aas
fmulp
sbb
xlat
imul
add
xor
test
pop
jnp
call
add
cmp
repnz
inc
rorb
inc
popf
sub
ds
shlb
inc
fsubp
sub
faddp
ljmp
sub
popf
js
jno
jb
scas
mov
jbe
in
add
call
ljmp
sub
pushf
cmp
sbb
leave
sub
mov
pushf
add
sub
stos
push
fsub
adc
rolb
add
sub
jle
lds
jmp
pop
push
pop
pop
sub
data16
les
inc
push
in
pop
mov
aaa
std
ss
ljmp
leave
popf
add
call
cld
jbe
pop
mov
xor
mov
cmp
sbb
jmp
lods
add
ja
std
cmp
pop
add
jmp
mov
int
inc
cmp
lahf
cmp
ret
add
fmul
test
add
adc
std
inc
xlat
cmp
cli
pushl
dec
xor
out
xchg
enter
jne
cltd
sbb
int3
cld
incl
addr16
incl
add
push
and
enter
push
call
and
mov
pop
int
inc
fsubs
jb
clc
pushl
dec
and
inc
pop
add
xlat
outsl
mov
or
fiadds
xor
arpl
incb
arpl
mov
imul
add
inc
rorl
mov
rcrl
add
add
ficoms
gs
int3
mov
xchg
and
or
arpl
cli
mov
lea
popf
jns
xchg
je
int3
dec
imul
test
mov
mov
call
faddp
rcll
xchg
xchg
rcrl
icebp
aas
fdivrp
cmp
push
pop
sub
or
cltd
adc
push
pushf
or
repz
add
or
add
push
ljmp
cmp
cmp
push
fisttps
xor
ret
pop
ljmp
pop
rolb
push
and
fstps
lods
xorb
cltd
bound
lahf
or
pop
xorb
ljmp
pop
addb
push
and
sbb
stos
pop
xor
pop
or
add
add
bound
ljmp
cmp
mov
ret
pop
imul
test
jmp
fnsave
sbb
pop
imul
fldl
das
jmp
xor
repnz
das
fisubrl
add
pusha
adc
rcr
add
inc
inc
xor
fnsave
fiaddl
mov
in
mov
mov
push
andb
add
fucom
stc
add
add
fprem
jne
add
and
dec
add
dec
or
ret
xchg
cld
ljmp
dec
das
data16
or
rolb
or
or
push
pop
push
inc
pop
jecxz
or
or
bound
shll
cmpb
jbe
mov
jne
pop
add
jno
dec
jbe
add
add
mov
jne
shlb
call
and
inc
xchg
aam
cmpsb
cld
push
and
ret
cmp
sarb
lret
pushl
inc
add
sarb
add
pop
or
xor
adc
inc
mov
mov
cmc
test
xor
add
add
xor
cmp
out
inc
mov
sbb
lds
insl
or
push
cmp
sbb
xor
jae
xor
add
roll
shr
jno
repz
cld
push
pop
sub
fstpl
add
popf
pop
xor
or
and
in
push
xchg
sub
ja
adc
popf
addr16
add
in
test
sub
imul
jmp
push
imul
xchg
add
fcomip
push
jae
sub
xor
lret
inc
mov
rolb
test
fimuls
sub
out
sub
sbb
jno
add
loop
add
shll
pop
xor
add
add
add
jns
jmp
add
add
push
sub
mov
add
imul
call
movsb
jbe
push
sub
imul
loop
add
sbb
stos
fstl
jb
inc
pop
dec
mov
lods
in
push
mov
add
inc
arpl
add
cmc
or
lret
inc
pusha
or
sbbb
mov
push
ud1
cld
incl
pushl
add
loop
push
inc
les
cmp
xor
lret
pop
cmpl
pop
add
adc
add
fidivs
lock
add
pop
xchg
or
int
or
add
push
cmp
repnz
add
ja
jb
in
ud2
cli
add
xchg
pmaxub
lods
add
inc
cmp
dec
add
add
scas
lea
inc
add
fiadds
and
cli
lret
int3
test
xor
sbb
mov
mov
sbb
push
arpl
test
dec
std
push
push
push
nop
add
add
jg
push
movl
pop
push
mov
mov
sti
xor
add
lods
or
push
out
roll
mov
popf
ljmp
pop
addr16
fisubs
cmp
pop
ljmp
dec
push
cmc
or
pop
inc
sahf
cmp
pusha
mov
sbb
fcomp
or
ficomps
dec
loop
outsb
repz
lret
repz
pop
ljmp
out
iret
pushf
test
out
adcl
fcomp
out
add
ret
pop
jmp
lds
add
imul
leave
mov
fdivrp
cmpsb
sbb
fdivrp
mov
out
andl
push
push
stos
adc
dec
cltd
adc
fstpl
lcall
sbb
dec
fsubrl
adc
push
scas
lock
fstpl
cld
sub
icebp
jbe
popa
movsb
and
jmp
fld
hlt
jmp
jp
bound
stos
pop
add
inc
push
call
add
fcoms
cmpl
into
call
add
and
ja
add
pop
jb
lcall
mov
push
call
lret
rolb
push
sbb
repz
sbb
shlb
mov
add
mov
popf
pop
add
pop
pop
push
mov
shrl
add
pop
lods
cmp
mov
bnd
pushf
mov
fiadds
sub
mov
sub
lret
in
add
decl
and
out
push
mov
pop
test
pop
hlt
inc
cltd
repz
push
pop
or
incl
cmp
aas
fidivs
jmp
out
pushl
rol
fcomps
sbb
push
xor
stos
inc
cltd
xor
call
or
push
sahf
inc
cmp
mov
jp
inc
add
push
cmpb
adc
shrb
pop
pop
push
mov
test
adc
sbb
cs
xor
rcrb
testb
mov
adcb
lahf
pop
inc
shll
test
pop
mov
add
fstps
js
in
mov
sub
add
loop
cld
push
sub
ljmp
sbb
ljmp
pop
ljmp
sbb
ret
jp
mov
imul
push
fidivrl
test
lcall
sbb
mov
inc
hlt
add
fistps
sub
mov
icebp
ljmp
jbe
jb
call
push
push
push
cmp
xor
orl
lods
cmp
mulb
in
sbb
cwtl
and
enter
push
movsl
jmp
or
lret
pusha
push
mov
call
loopne
pop
mov
add
leave
xor
mov
mov
cmpsb
inc
or
movsb
in
mov
sub
lret
dec
loopne
mov
in
sbbb
mov
std
push
cld
int3
jg
daa
add
out
sub
cmp
mov
lret
das
test
or
inc
push
and
add
add
pop
cmp
add
call
xor
add
push
andl
or
jp
mov
add
mov
gs
add
clc
mov
stc
add
mov
jae
mov
cmp
cmp
scas
add
sahf
jle
or
leave
jnp
gs
cmpb
xorl
mov
xlat
mov
fidivrs
mov
add
mov
dec
dec
pop
lods
inc
add
fidivs
ljmp
sbb
ljmp
cmp
loope
cmovp
xchg
fwait
add
add
bound
cmpsb
fisubs
mov
ss
ljmp
daa
fwait
cmp
add
outsb
scas
ljmp
add
pop
pop
inc
add
push
fsubs
js
xor
sahf
inc
pop
ljmp
loope
add
pop
pop
aas
es
sbb
inc
lahf
mov
push
push
inc
loop
dec
data16
cmpsl
sahf
outsb
cld
jmp
fst
inc
xchg
jmp
bound
fsubr
out
fiaddl
xor
cmc
push
dec
daa
add
and
xchg
lahf
push
inc
add
loope
push
push
shlb
jmp
sahf
sub
jmp
dec
mov
bound
pop
dec
data16
adc
mov
call
imul
jmp
call
test
cli
add
outsb
jmp
mov
pop
pop
pushf
in
or
ja
in
je
hlt
sbbl
inc
lret
jno
push
add
out
popa
add
xchg
aad
or
andl
out
dec
cld
jo
adc
in
jge
add
pop
add
jbe
mov
mov
into
jo
int3
in
add
bound
mov
mov
fisubs
xor
pop
cld
and
cmpb
das
push
jmp
stos
rorb
add
mov
push
add
jecxz
and
push
mov
add
fldl
jnp
aas
push
jne
in
or
into
or
dec
cmc
adc
andnps
hlt
inc
xor
add
fcoml
pushf
jle
fdivl
inc
mov
and
add
call
and
out
pop
push
add
push
mov
add
mov
in
cmp
xor
pop
or
es
sbb
xor
xor
addr16
pop
ljmp
es
out
push
nop
loop
dec
dec
pop
mov
outsl
xchg
mov
jp
xor
pop
xchg
pop
das
mov
inc
sbbl
add
mov
xor
int
mov
out
pop
add
pop
sar
or
push
bound
cld
fidivs
stc
sub
arpl
fstpl
push
adc
imul
xor
jmp
sbb
fcmovnb
sub
out
lret
dec
adcl
ljmp
push
or
mov
jmp
add
lret
push
add
fnstsw
and
pop
add
xchg
pushf
or
pop
push
add
fnstsw
xor
pop
add
imul
sti
add
popa
arpl
js
or
cmp
add
xchg
add
jbe
or
xor
inc
das
sub
mov
push
or
in
sti
incl
add
or
add
add
cmp
insl
test
adc
inc
push
or
push
enter
fiaddl
add
sub
mov
adc
dec
push
jbe
pop
daa
stc
fidivrs
add
mov
divb
push
mov
jae
loope
push
inc
inc
pop
mov
sub
pop
add
add
add
adc
mov
jmp
xorl
add
out
cli
orb
xchg
test
int3
cmp
dec
xchg
dec
sub
dec
shlb
push
out
cmp
add
inc
xchg
inc
inc
in
push
add
xor
lea
jg
subl
aad
jns
das
add
fstp
pop
adc
xor
add
inc
and
ljmp
addb
pop
xchg
inc
and
subb
add
cmp
adc
fidivrs
out
popf
ljmp
cmp
xchg
mov
mov
nop
bound
mov
shll
fimuls
out
popf
ljmp
cmp
mov
fidivrs
dec
notb
push
pop
adc
test
and
add
popf
and
cmpsb
lock
xchg
loopne
divl
inc
push
inc
addr16
push
in
flds
call
xor
mov
pop
add
fs
mov
push
mov
out
les
pop
pop
std
bound
pop
mov
push
mov
in
xchg
mov
call
bound
cmp
sub
add
push
mov
into
mov
test
push
and
hlt
ficompl
push
jb
cmp
mov
or
sub
andl
les
lcall
addb
push
mov
cld
incl
or
std
pushl
sbb
pop
loopne
sub
call
jl
mov
fmul
sldt
sub
incl
rclb
pop
pop
jle
neg
mov
inc
roll
divl
mov
mov
test
mov
mov
fidivs
add
xor
add
iret
pop
add
mov
shl
xchg
push
jl
out
xrelease
repz
rcrl
add
pop
mov
add
jmp
out
mov
adc
aad
jne
xchg
lret
repz
incb
pop
hlt
push
gs
out
add
add
loope
pop
push
cmp
cmpsb
gs
xchg
shlb
add
xor
jl
adc
leave
movsl
pop
ljmp
push
push
lcall
pop
jns
cmp
mov
jns
fiadds
add
mov
popa
test
mov
pop
ljmp
and
mov
adc
or
mov
mov
pop
test
xor
push
xorb
mov
es
add
xchg
pop
lds
cmpsl
clc
out
mov
inc
mov
aam
loopne
push
add
lds
std
jmp
add
mov
pop
add
fcmovu
fucomp
rolb
push
fidivs
clc
test
jb
mov
in
pop
std
lcall
fdivs
jle
adc
test
cmp
sub
push
cld
jg
roll
mov
imul
sub
pop
aad
loopne
jmp
sar
insb
jnp
sbb
xchg
not
int3
aas
add
dec
pop
stc
sahf
push
mov
add
xchg
add
movsb
mov
shl
cmp
je
mov
xor
and
xor
test
popa
add
sti
mov
std
pushl
imul
ret
jp
cld
out
adc
add
jne
fildll
mov
add
add
out
xor
loope
add
pusha
add
call
push
add
fiadds
jle
loop
push
push
decl
mov
jo
mov
push
mov
arpl
fidivrs
inc
hlt
fs
jns
les
add
xor
filds
add
add
jg
out
add
add
or
orb
mov
imul
arpl
out
xor
add
insl
xor
or
pop
sub
stc
jp
add
sbb
inc
fsub
mov
lock
std
pop
loopne
pusha
add
pop
pop
shll
jb
mov
add
add
add
loope
lock
in
jae
imul
jno
popf
jae
push
adcl
imul
out
arpl
bound
push
pop
push
ficoms
jo
add
push
jns
sbb
xor
sbb
insl
popf
xchg
sub
test
loope
xor
pop
pop
add
lahf
out
test
stc
bound
add
in
xor
out
jge
sub
add
or
inc
push
shlb
inc
hlt
push
je
outsb
fs
mov
loop
call
repnz
add
add
mov
lahf
mov
jmp
push
jl
loopne
stos
test
jbe
add
add
mov
in
and
add
mov
pop
pop
sbb
mov
in
lret
xor
imul
pop
mov
scas
add
ja
mov
ljmp
push
nop
add
in
mov
push
mov
stc
cld
incl
push
call
and
mov
pop
jmp
add
mov
and
ds
fiadds
repz
ret
add
dec
cmp
add
dec
push
lea
pushl
dec
or
inc
add
xor
dec
xchg
fcmovu
jno
shl
jbe
mov
repz
lret
add
push
jg
cmpsl
in
push
pop
pushf
jns
aam
pop
add
add
cmp
fcomps
push
mov
mov
repz
jle
add
icebp
add
pop
mov
mov
out
jnp
mov
jmp
or
adc
ja
push
jmp
mov
add
jecxz
cmp
push
push
or
arpl
jmp
fsubp
lahf
lock
jecxz
adc
add
insb
mov
pop
jmp
mov
aad
jmp
dec
push
mov
push
mov
jbe
mov
push
imul
adc
mov
push
rcll
ja
arpl
dec
not
or
and
cld
stc
push
mov
pop
ficomps
push
std
dec
iret
sti
lcall
mov
sahf
mov
add
xchg
cmp
mov
mov
xchg
and
test
lcall
xor
pop
lret
fiadds
mov
push
xor
sub
add
in
roll
sbb
frstor
xlat
jb
push
or
add
fst
je
pop
inc
aaa
sbb
or
faddl
nop
out
cmp
incb
test
icebp
add
or
in
es
add
aad
pop
pop
mov
call
add
cs
push
and
fcoms
sub
mov
popf
adc
out
call
mov
mov
inc
ja
mov
dec
iret
fdivp
or
add
xchg
push
bound
push
inc
pop
xchg
add
lea
sbb
pop
push
cli
push
out
imulb
insl
stc
sub
jmp
jmp
idivb
insl
and
add
or
call
out
filds
jbe
pop
ret
mov
adc
aaa
dec
add
inc
add
jmp
adc
add
jg
arpl
add
add
out
pop
ret
pop
ljmp
sub
mov
pop
ljmp
pop
ljmp
out
je
lods
jmp
mov
fs
pop
ljmp
mov
mov
shrl
pop
push
clc
testl
add
jb
pop
mov
xchg
cltd
jo
test
leave
xchg
es
cltd
pusha
or
pop
aas
sbb
push
adc
daa
adc
inc
xor
push
push
das
pop
adc
addl
gs
sbb
andb
sti
adc
fsubrp
iret
adc
ret
mov
cwtl
pusha
mov
nop
fs
add
mov
in
sbbb
xchg
imul
leave
pop
mov
sbb
sub
or
push
stos
dec
iret
xchg
fimull
std
jle
rorb
inc
arpl
add
add
mov
inc
ja
inc
sti
inc
mov
add
ret
inc
or
ljmp
and
mov
aas
icebp
add
add
fldl
mov
lea
cs
jmp
mov
inc
sbb
incl
mov
hlt
add
add
jne
adc
xor
testl
cmp
adc
pop
dec
call
insb
das
orb
call
push
jnp
xlat
pop
aad
push
add
popa
mov
xchg
add
imul
or
test
leave
push
dec
inc
push
add
add
addr16
rol
add
xlat
mov
adc
add
fcompl
add
test
add
cli
cmpb
add
add
adc
cmp
fucomip
push
std
filds
js
scas
sub
arpl
mov
dec
bound
add
ficomps
dec
push
cwtl
loop
popf
mov
shrl
ss
aam
call
rcll
cmp
add
push
daa
not
frstor
dec
lcall
addr16
ljmp
sbb
std
mov
lods
leave
hlt
pop
outsl
leave
or
pop
ret
pop
ljmp
sub
push
add
pop
xchg
stos
push
dec
pop
lods
leave
mov
insl
stc
lea
inc
int3
fistps
cmp
mov
add
pcmpgtw
fstpl
add
lahf
add
loop
push
adc
addr16
loop
inc
in
ljmp
mov
int
jne
les
std
sahf
xor
mov
rcll
or
stc
push
or
add
movsl
push
xorb
add
add
xchg
or
loop
sbb
cmpb
shll
scas
enter
mov
sub
add
add
orb
cmpb
outsl
xor
and
in
popa
pop
add
shll
and
dec
mov
add
sbb
cmp
push
add
add
push
add
push
adc
lock
jo
pop
inc
sbb
inc
push
dec
fwait
jo
test
xor
dec
insl
cld
call
and
add
add
or
mov
nop
adc
and
jno
fcomip
add
sbb
ret
adc
aaa
ficoms
mov
cmp
inc
mov
add
jno
notb
cmp
aad
sub
add
sbb
out
je
outsl
roll
fdiv
daa
add
stos
sub
push
outsl
insl
jmp
divb
push
pusha
clc
adcb
ret
inc
std
xor
out
cmp
imulb
jmp
neg
pop
and
icebp
aam
pop
mov
pop
bound
add
push
ljmp
pop
ljmp
or
out
pop
pop
ljmp
adc
dec
add
fucomp
testl
xchg
push
pop
fdivs
popf
es
roll
adc
pop
or
fists
arpl
hlt
fstps
stc
sbb
test
add
jmp
insb
jbe
std
mov
mov
mov
sahf
dec
lret
sbb
stc
and
scas
jmp
add
xchg
jp
jb
xchg
adc
push
add
fiadds
insb
pop
rep
leave
push
cmc
mov
cmpl
mov
mov
std
push
sbbb
jmp
add
fstl
xchg
or
leave
stc
data16
into
fidivrs
xchg
or
sbb
or
add
add
or
jb
add
sub
inc
xor
cmp
ljmp
decl
dec
push
stos
push
test
or
mov
popa
icebp
add
inc
in
in
lahf
or
add
add
inc
sahf
cmp
or
mov
lea
mov
cmp
jbe
icebp
pusha
pop
jmp
sub
push
cmp
adc
jmp
cmp
adc
hlt
add
and
lcall
clc
push
mov
pop
add
jnp
pop
cmp
xor
cli
cmpl
popa
out
shrb
add
stc
decb
jge
ljmp
mov
scas
cs
sarl
add
neg
cmp
imul
inc
testb
pop
mov
sar
test
push
push
adc
or
ficomps
insb
ficomps
pop
icebp
or
or
lret
rcr
add
jae
ja
mov
pop
add
inc
in
add
push
lret
add
push
scas
adc
pop
pop
dec
pop
push
aaa
imul
sub
cmpsb
and
fs
pop
sbb
imul
mov
testb
jl
or
ljmp
pop
popa
mov
aam
pop
data16
jbe
test
out
aaa
mov
or
jo
sbb
pop
xor
pop
icebp
pop
and
stos
shll
xchg
sub
mov
fs
or
jge
fmuls
bound
outsb
outsl
repz
fdivl
xchg
rcll
cld
aam
xchg
push
lcall
xchg
ret
pop
std
cltd
add
pop
pop
cld
pushf
test
ja
sbb
add
pop
add
test
decl
pusha
add
jp
in
fisubs
decl
bound
mov
or
mov
incl
stos
jmp
hlt
dec
fwait
add
xor
inc
mov
sti
lcall
xor
jne
cld
inc
in
jmp
sti
test
add
push
pop
pop
mov
pop
std
scas
stos
cmp
add
stos
cmp
push
mov
add
into
push
aas
push
aas
fimuls
push
aas
fsubrp
ja
pop
pop
sbb
fdivp
jg
ljmp
push
mov
stc
mov
fadds
xor
enter
test
dec
aaa
add
call
add
pop
mov
sbb
jno
adc
repnz
addl
std
imul
imul
imul
ret
out
sar
pop
sub
inc
fcomp
jae
ficomps
out
dec
xchg
imul
addr16
pop
jne
and
cld
add
je
pop
shl
add
jbe
cmc
cmp
add
cmc
push
insb
ficomps
inc
fcomp
jg
ficomps
out
lds
cmp
jo
sbb
jle
mov
int3
nop
mov
roll
fcoms
pop
bound
rolb
fsubrs
mov
mov
jbe
insl
add
or
add
push
mov
cmpsb
cltd
adc
push
jbe
add
mov
stc
call
fstpl
decb
pop
mov
or
pop
xchg
and
cld
inc
add
and
ficompl
jb
jns
fisubs
add
fst
dec
in
pusha
jp
jmp
in
pop
addr16
mov
cmc
sbb
pop
mov
mov
les
je
add
mov
sar
cmp
sub
cmp
sub
cmp
es
jbe
cld
jno
xorb
in
mov
pop
je
pushl
cld
jno
xorb
inc
mov
rorl
cmp
xchg
lahf
cmpsb
jecxz
mov
sub
mov
in
mov
outsl
test
shrb
push
jno
out
add
mov
xor
add
outsb
call
je
jno
test
mov
repnz
fisubrs
mov
sub
loope
out
sub
fdivp
imul
negl
insb
add
lea
push
test
adc
in
cmc
add
add
pmaddwd
mov
testb
xchg
mov
or
mov
add
add
push
dec
pop
sub
pop
gs
scas
sub
pop
ljmp
fwait
decb
add
mov
aam
pusha
cwtl
lahf
lahf
dec
pop
outsb
ljmp
fists
xor
pop
ljmp
mov
hlt
mov
pop
ljmp
add
fimull
popf
cmp
lea
push
jo
lahf
repz
mov
popf
decl
inc
dec
sbb
push
sub
testb
pop
outsl
fsubp
cs
aam
mov
cltd
adc
fadd
fistpl
and
shll
aad
jno
call
pop
faddl
jb
push
mov
add
loope
dec
loope
adc
mov
rcrl
jmp
pop
call
mov
enter
pop
fdecstp
jo
add
or
dec
mov
push
and
or
gs
pop
call
add
mov
lahf
xor
mov
aaa
sub
add
add
jno
jmp
inc
xlat
std
add
pop
mov
aam
and
rorb
adc
jo
or
adc
cmp
push
mov
aam
jmp
rorl
daa
rorb
pcmpeqb
cmp
mov
sbb
and
push
adc
push
dec
pop
add
xor
pop
in
inc
cld
xlat
rolb
add
jo
stos
jb
jmp
add
fiadds
test
and
std
gs
sub
mov
or
or
sub
push
cmp
and
mov
push
push
inc
add
inc
cli
pop
xchg
inc
loop
xchg
lcall
mov
pop
add
mov
or
dec
ret
inc
mov
clc
mov
mov
sub
pop
aad
push
loopne
inc
adc
add
shll
andl
repnz
repnz
add
fstpl
sarb
sub
call
mov
jmp
push
sbb
inc
add
call
fs
ljmp
xor
ljmp
push
pop
add
lea
mov
aaa
add
repz
mov
pusha
sahf
daa
or
out
fsubl
ljmp
add
jmp
add
mov
add
add
ffree
or
pop
jecxz
jmp
jno
dec
lds
shlb
pop
xor
push
incb
add
popa
mov
push
mov
and
aam
test
shrl
jne
lret
mov
fstpl
int
out
ljmp
sbb
jne
in
fucom
dec
or
loop
add
mov
pop
add
ds
test
xchg
jmp
add
in
jge
or
and
inc
pop
xor
mov
inc
and
add
add
xchg
jo
xchg
fistpll
test
adc
or
in
aaa
mov
mov
arpl
inc
jecxz
cmp
or
mov
inc
test
add
negl
and
push
add
clc
jp
add
pop
addr16
mov
and
sbb
mov
add
cli
dec
push
add
insl
mov
and
push
mov
xchg
pop
or
sbb
aad
filds
dec
movsb
icebp
aas
fiadds
xchg
lcall
push
pop
cli
adc
xchg
enter
stos
icebp
mov
les
lea
jmp
add
movb
insb
call
repz
lret
dec
enter
sbb
rolb
add
add
push
push
pop
outsb
pop
adc
add
in
mov
jmp
and
pop
ljmp
fsubl
cld
and
mov
ljmp
fdivl
pop
ficomps
pop
adc
notb
les
jne
std
cltd
ret
int
add
jb
sub
pushf
mov
pop
xchg
jmp
add
pop
ljmp
fsubrl
cld
mov
out
ficomps
sarb
jno
int
add
cmp
ficompl
fistps
faddl
jmp
jb
addr16
fstpl
shl
add
bound
add
dec
lea
jmp
add
push
fstpl
pop
pop
cmp
jmp
push
fdivrl
inc
xor
add
push
fcmovnb
in
notl
mov
fs
mov
or
cld
add
iret
adc
or
add
pop
push
push
loopne
and
pop
add
pop
in
and
mov
mov
dec
enter
push
decl
nop
xor
add
add
sbb
out
jnp
add
jmp
ds
add
imul
mov
sub
and
lahf
or
mov
pop
add
nop
dec
and
ljmp
in
push
lods
inc
sbb
mov
push
mov
bound
add
dec
std
push
add
add
gs
loop
add
insl
fidivrl
adc
add
or
add
or
add
call
add
insl
mov
add
insl
stos
aas
add
push
ljmp
add
imul
push
cld
jmp
add
add
fisttpl
add
notb
fdivp
je
jo
add
hlt
je
rorl
lock
mov
mov
add
add
cmp
cmpb
xchg
xor
xor
xchg
add
mov
pop
cli
addb
nop
pop
mov
mov
rolb
add
push
inc
jl
pop
ljmp
pop
add
add
xor
xchg
cmp
inc
jmp
sbb
aaa
ret
mulb
add
fucomp
dec
jbe
mov
jmp
orl
cmp
mov
push
push
xorb
sahf
dec
cmp
sbb
add
cli
add
frstor
fstpl
adc
dec
hlt
test
fcmovu
jg
fstpl
add
push
jmp
adc
jl
cmpl
and
jae
leave
dec
insl
inc
pusha
xor
ja
and
cmc
lods
or
pop
addl
repz
push
cwtl
or
add
add
mov
pop
cmc
mov
fwait
fs
jne
mov
cmp
pop
add
rcrb
lcall
push
pushl
fwait
adc
out
je
nop
outsl
sbb
jnp
dec
rol
add
shlb
add
mov
push
add
pop
inc
pop
gs
mov
fiaddl
inc
mov
dec
jae
add
aam
jb
repz
fwait
jmp
add
fiadds
out
mov
adc
add
stc
dec
imul
xor
lahf
and
or
and
xor
add
xchg
jmp
addl
pop
into
repz
xchg
dec
pop
ljmp
repnz
daa
lret
out
add
sbb
clc
rcrl
xlat
mov
pop
ljmp
lea
mov
bnd
mov
pop
ljmp
push
jg
cmp
mov
lcall
mov
pop
ljmp
icebp
ss
lock
lock
divl
popa
adcb
pop
add
cmp
lea
add
push
dec
push
fs
cmp
cld
fcmovbe
sbb
push
pop
add
aam
xchg
pop
jbe
cwtl
pushf
and
or
sbb
add
jmp
or
cld
xchg
mov
out
push
movsl
enter
mov
or
jmp
push
dec
push
mov
push
cld
cmp
sbb
pop
add
add
aam
adc
pushf
and
add
sbb
dec
outsl
lcall
jmp
cmp
adc
nop
or
or
sbb
pop
adc
mov
cmp
xor
sbb
push
push
les
add
xlat
je
add
jo
and
stos
lea
fs
add
inc
sbb
dec
or
add
fadd
or
adc
decl
inc
adc
adc
push
push
and
push
filds
fiadds
inc
arpl
sbb
fisttpll
add
mov
outsl
or
push
cmp
adc
mov
in
filds
ret
fiaddl
sbb
in
repz
fidivrs
fldenv
add
ljmp
inc
pop
leave
and
xchg
fiadds
mov
test
add
pop
jo
filds
mov
add
mov
daa
addb
mov
sbb
dec
jbe
pop
ficomps
inc
in
stos
int
xchg
dec
push
push
dec
repnz
ffree
push
out
mulb
fiaddl
adc
ljmp
add
out
and
aad
outsb
je
out
dec
or
dec
repz
cmp
lcall
ss
xchg
out
lock
inc
clc
test
dec
cwtl
pop
jns
dec
rclb
repz
outsl
scas
fsts
gs
inc
ret
pusha
add
pop
lods
or
lcall
pop
xor
inc
jmp
add
sbb
cld
popf
in
mov
push
sub
negb
add
fstl
push
outsb
push
inc
xor
mov
sbb
sbb
mov
pop
add
insl
jp
fsubl
jo
push
popf
outsb
test
scas
inc
pop
jmp
pop
xchg
sub
add
in
repz
pop
mov
mov
add
lret
or
add
mov
adc
sbb
adc
pusha
add
pop
out
add
inc
mov
aaa
incl
inc
pusha
add
lret
retw
push
mov
mov
sti
loop
jle
mov
mov
or
push
inc
add
lcall
mov
addr16
cmp
and
dec
xchg
mov
hlt
add
fistpl
add
addb
mov
test
inc
and
push
jb
and
and
dec
jne
add
sar
mov
dec
insb
shll
out
aam
cmp
mov
jae
in
and
testb
push
cli
and
add
fsubp
inc
cmp
scas
lock
jg
or
jl
jb
push
repnz
adc
dec
repz
rorb
cltd
aad
mov
push
lock
cs
loope
gs
mov
pusha
ljmp
add
inc
fstpl
jg
mov
xor
icebp
push
xlat
push
push
pop
call
add
add
repnz
or
dec
inc
push
imul
cmc
inc
mov
and
ljmp
js
add
sbb
add
ljmp
pop
mov
mov
push
cmc
adc
jo
in
daa
xchg
dec
mov
pop
add
cltd
in
hlt
add
xor
and
add
cld
jmp
or
sbb
inc
addr16
sub
insb
adc
cmp
das
cmc
inc
sub
sti
mov
rorl
adc
pushf
add
pop
sbb
cli
popf
and
mov
aam
or
lods
and
subb
and
add
out
cmp
rcrb
mov
sbb
lea
add
and
popa
jmp
test
dec
mov
dec
addr16
ja
add
mov
sarl
test
and
popa
jne
in
test
adc
icebp
mov
adc
inc
sbb
fs
add
mov
mov
arpl
scas
mov
add
sbb
push
dec
call
mov
dec
imul
add
cmpsl
dec
jne
jae
add
out
or
lock
in
inc
test
sbb
add
stos
push
add
mov
xlat
inc
fidivrs
test
and
inc
fidivrs
push
or
cmpb
icebp
incb
sub
add
add
jp
je
mov
add
shll
inc
fimuls
inc
aaa
cmp
ficompl
ljmp
xchg
mov
call
jns
call
mov
add
loope
iret
in
insl
dec
xchg
out
mov
jae
add
lods
jmp
mov
stc
addr16
jno
xchg
out
add
pop
ljmp
jno
jmp
cmc
or
out
call
gs
bound
std
cmp
mov
xor
add
out
sub
inc
push
ret
mul
adc
add
sbb
sbb
dec
vpmaddwd
cwtl
fistps
movsl
fnstcw
sbb
test
add
xchg
in
mov
mov
sbb
push
fst
dec
or
fcompl
inc
iret
sbb
mov
jge
stc
lods
icebp
fstpl
pop
adc
mov
in
outsb
jp
iret
jo
pop
mov
cld
add
scas
push
fs
ljmp
jb
idiv
clc
test
add
test
enter
pusha
addr16
cmp
mov
mov
test
sti
push
cli
arpl
cwtl
cltd
dec
mov
mov
push
test
sarb
add
mov
pop
fwait
adc
subb
test
pusha
add
int
lea
mov
add
pop
je
dec
push
pop
dec
testb
add
addb
mov
idivb
icebp
ret
mov
cs
in
je
mov
xchg
fcomip
cmpsl
pop
pop
pop
decl
push
add
fidivrs
pop
cmpsl
hlt
inc
dec
xor
xchg
inc
dec
and
sbb
mov
jmp
cmc
xchg
test
scas
inc
decb
dec
or
fdivp
xchg
test
leave
inc
scas
daa
xchg
inc
add
dec
inc
mov
mov
lods
int3
pop
sub
push
mul
push
inc
sbb
cld
jb
push
inc
or
test
jecxz
sahf
fdivrl
loop
sub
cld
leave
push
xchg
call
enter
pop
mov
inc
mov
loope
inc
shl
add
not
insl
xlat
mov
shrl
jecxz
pop
scas
and
mov
add
push
rcrb
ficomps
xchg
imul
rcrb
test
jecxz
inc
test
das
dec
pop
pop
add
push
xlat
in
push
fisttpll
jbe
xor
in
mov
outsb
fsts
jb
cli
fwait
cltd
jecxz
test
int3
fldcw
mov
sub
cmpsl
ja
xchg
fstpl
test
add
dec
ficoml
out
leave
mov
inc
fstpl
cld
out
fldl
jmp
imul
shll
push
jb
mov
inc
add
mov
push
mov
cwtl
mov
dec
ljmp
and
mov
mov
dec
hlt
jp
jo
lahf
jo
add
mov
mov
add
push
ljmp
and
dec
lcall
mov
ljmp
adc
add
xor
inc
xchg
xlat
pop
sub
test
and
inc
xor
test
xchg
leave
ret
lret
andl
jl
faddp
scas
inc
fdivp
aad
mov
xor
pop
jb
add
dec
dec
insb
sahf
testb
add
incl
add
adc
mov
mov
mov
push
pop
and
fidivs
test
testb
imulb
cmp
jl
out
push
ljmp
xor
mov
sub
faddp
mov
xchg
pop
jae
fwait
mov
out
outsl
add
mov
loop
sub
add
sbb
mov
adc
lahf
mov
inc
out
jbe
and
cmc
aas
add
add
or
xor
add
addr16
add
add
shll
inc
xor
push
xorl
cmpsl
add
xchg
sub
ljmp
add
stos
dec
les
leave
ljmp
fiadds
in
cmp
repnz
dec
jns
inc
jmp
dec
sahf
call
jmp
jmp
lock
outsl
imul
fs
ljmp
fs
std
fs
imul
movsb
push
sub
push
add
cmc
pop
das
jmp
cwtl
cmp
sub
xchg
pushf
push
test
fstpl
push
loop
inc
jmp
cmpb
inc
xchg
inc
and
ds
mov
mov
mov
mov
or
mov
push
inc
out
and
call
cld
push
mov
popa
mov
rorl
icebp
insl
add
aaa
popa
cld
xor
fs
imul
or
imul
in
imul
call
jo
pusha
push
call
fimuls
rcpps
sar
jmp
sub
sbb
add
bound
jecxz
jo
pop
xchg
mov
ffreep
cmpl
jnp
pop
mov
or
sahf
sub
les
test
ret
orl
add
div
stos
add
movl
mov
faddp
cmpl
add
pop
add
shlb
movb
pop
jno
mov
stos
or
out
dec
and
add
outsb
or
sbb
sbb
xor
mov
loope
push
ficomps
mov
cmp
and
xchg
rolb
aas
test
dec
bound
ljmp
and
aam
jle
ret
shrl
mov
add
insl
dec
sub
loopne
sub
add
loope
jmp
pop
xor
push
dec
fcomps
je
mov
add
mov
fstp
jle
imul
add
push
into
or
mov
xor
cmc
pusha
push
lret
pop
pop
cmc
jmp
fstpl
sub
out
aad
arpl
out
jecxz
add
orb
sub
adcb
shrl
add
fucom
fsts
andl
ja
add
shl
hlt
popa
add
scas
pop
clc
insb
ja
pop
mov
xchg
loope
or
pop
mov
pop
mov
lock
pushl
dec
push
pop
out
add
inc
in
int3
mov
fldl
subb
shll
pop
add
ljmp
add
xchg
sub
mov
sub
jle
or
insb
mov
push
call
sahf
or
adc
lea
add
fidivrs
mov
insl
push
aad
adc
sub
push
lds
test
mov
rorb
ffreep
xchg
dec
mov
dec
add
jbe
aas
ficoms
aas
fadd
jnp
stos
rorl
jae
jbe
movb
push
add
cmp
in
fwait
shlb
mov
stos
or
ja
add
inc
inc
jae
pop
pop
mov
loope
scas
fldt
xor
fsubp
lods
adc
testb
dec
stos
add
add
add
fsubp
stos
mov
loop
cmp
xlat
pop
push
push
jecxz
sub
mov
add
loop
fstpt
rorl
mov
inc
push
out
sub
sahf
push
adc
addb
lahf
addb
lea
int
movsl
pop
addr16
push
aam
imul
jecxz
inc
add
ret
nop
xchg
fdivr
push
add
sti
sti
push
jmp
call
orl
nop
pop
add
push
jb
into
xchg
inc
push
cmp
push
in
sub
cmc
pop
adc
fmuls
mov
and
in
and
push
into
push
adc
inc
jmp
mov
cmp
fucom
stc
add
mov
sub
test
lea
stos
lea
mov
jne
call
add
xor
jne
sub
hlt
push
fildll
aad
mov
inc
push
iret
jns
add
sub
ja
inc
insb
scas
dec
inc
add
repnz
add
mov
out
adc
add
inc
inc
mov
std
js
jg
js
push
leave
test
push
add
mov
scas
xchg
mov
add
pop
pop
rolb
mul
in
test
xor
push
lods
xchg
xchg
movb
pop
cli
xor
sbb
jle
inc
shl
test
cmp
add
icebp
or
sbb
xchg
ffreep
sub
gs
push
out
xor
es
lds
push
imul
push
add
jbe
dec
add
dec
ret
sti
add
dec
add
sub
lea
push
push
mov
sub
jnp
mov
xor
insl
imul
pop
ljmp
mov
lods
adc
xor
dec
lahf
outsb
ljmp
imul
cmp
fsts
scas
std
add
mov
ja
jne
inc
cmpsl
add
rcl
inc
out
sbb
aad
jo
rcrl
xchg
jo
add
out
rcrl
adc
int
out
dec
imul
mov
cli
lds
insl
mov
pop
addr16
sub
aam
insb
inc
jmp
lods
push
es
jmp
sahf
add
or
aad
popf
rcrb
dec
mov
in
push
lret
orb
pop
jmpw
jbe
popa
adc
jmp
jmp
fstpl
pop
lret
rcrl
in
pop
addr16
sub
aam
insl
inc
jmp
or
stc
cmpsb
shr
pop
push
add
lock
add
push
pop
or
mov
add
je
or
add
pop
push
ljmp
adc
push
or
jbe
push
pop
add
push
inc
and
fdiv
inc
fistpll
mov
push
ljmp
jne
hlt
nop
popl
psubq
add
fcom
je
push
or
push
ret
int3
pushf
adc
add
jne
jno
pop
daa
into
add
movb
jge
cli
popf
fcmovbe
ret
or
addl
popf
scas
add
je
push
sbb
movb
into
jge
testb
inc
xchg
lahf
aas
ficomps
scas
cmp
ja
ja
pop
arpl
in
test
mov
test
fistpll
add
add
add
or
push
pop
sub
push
mov
mov
push
xchg
sbb
xchg
lds
cmp
outsl
xor
add
jmp
add
into
jmp
sub
daa
adc
out
xor
fsubrs
add
ljmp
sbb
clc
fs
push
hlt
push
and
add
xchg
pop
movl
add
imul
jl
in
out
fmuls
add
jmp
fisubs
sti
mov
add
pop
ljmp
dec
push
add
xchg
inc
add
sbb
add
and
pop
adc
dec
and
sbb
bound
and
fnsave
add
ljmp
vpminub
out
add
aam
mov
xchg
pop
cmpsb
jp
cltd
jne
imul
xchg
call
pop
mov
data16
mov
fstpl
int
jecxz
loope
sbb
mov
jbe
dec
add
mov
pop
add
sbb
adc
jb
add
faddl
outsl
sbb
add
jg
and
fcmovne
lcall
int
pop
lret
mov
jle
ret
in
jne
test
sti
jmp
into
movsl
and
mov
jg
sbb
test
jl
cld
jae
dec
inc
sub
or
inc
mov
lahf
or
dec
shl
adc
push
jno
andl
fisubs
cmc
sub
jb
jp
add
std
dec
lret
cmpsb
add
jne
dec
ret
sub
jns
repnz
sub
add
jo
push
jae
in
mov
push
lock
push
adc
outsb
xchg
pop
inc
inc
sbb
add
clc
add
pop
out
aad
lret
mov
inc
fimuls
and
pop
push
push
add
cltd
rcll
mov
je
lret
mov
sub
push
lret
add
test
sub
add
sub
outsb
add
pop
pop
test
mov
lods
push
scas
aad
push
mov
dec
cli
add
and
rorb
jb
adc
mov
xor
lret
outsl
sub
push
or
int3
push
mov
aaa
dec
jmp
add
mov
lcall
jecxz
xchg
pop
ljmp
loop
add
pop
adc
sub
add
ja
or
cld
pusha
mov
lret
jbe
jmp
lods
repnz
add
int3
push
out
mov
sub
lret
add
or
cld
cmc
xor
or
test
mov
sti
dec
and
jmp
pop
mov
xchg
movsb
cld
pop
arpl
and
add
ljmp
fsubrl
insl
inc
jmp
lret
push
iret
popa
add
pop
pop
add
sti
jmp
dec
jo
cmpsl
dec
jo
fwait
add
sti
pushl
jne
orb
add
xchg
add
or
jmp
xchg
data16
jo
or
insl
ja
decl
pop
jmp
call
popa
add
or
sub
sub
add
xor
adc
xor
adc
lahf
popa
insb
inc
dec
inc
add
dec
mov
insl
push
mov
je
cmp
faddl
add
addr16
adc
push
or
lcall
outsb
add
lret
fimuls
out
pop
add
addr16
adc
and
loop
pushf
mov
push
mov
jmp
mov
lcall
jmp
add
pop
fldcw
dec
clc
leave
pop
sub
mov
rcrb
add
loopne
jmp
pmaxub
in
adc
jg
pop
ljmp
push
adc
into
jne
push
in
sarl
mov
push
loopne
pop
fstpt
pop
ljmp
test
sub
aam
loopne
fmull
loopne
aad
cld
fs
adc
out
jl
sbb
mov
fs
jl
add
outsl
test
sub
xor
push
push
stos
insb
stos
add
xor
jb
pop
push
ds
fcmovb
frstor
and
xchg
je
cld
cld
leave
insb
inc
jmp
mov
stc
decb
or
inc
xlat
jmp
in
sbb
xor
mov
bound
mov
in
xor
jbe
movsb
push
sub
push
cld
xlat
lcall
call
fisubrl
jmp
sub
dec
sub
push
jnp
call
xchg
jg
aam
lcall
xlat
je
cmp
and
pop
pop
jmp
and
pop
inc
adc
push
add
inc
ja
sti
xlat
js
or
jne
cwtl
sti
adc
add
les
adc
in
adc
out
jo
pushl
inc
and
in
push
pop
insl
add
pop
dec
mov
xor
or
ja
out
shll
ljmp
mov
iret
pop
add
mov
and
mov
and
mov
or
mov
add
ljmp
and
and
add
sbb
or
mov
test
shlb
push
cmp
xor
and
mov
sbb
pop
fimuls
shlb
push
ret
lock
fwait
pop
rcl
push
sbb
rcll
shll
and
sub
add
add
inc
in
pop
insl
cs
cmp
cmp
cmp
clc
leave
loopne
in
les
sti
inc
fs
cmpsb
cltd
sbb
xchg
int
xchg
mov
inc
adc
pop
jecxz
mov
lcall
ss
icebp
loopne
jmp
sahf
cmp
xor
outsl
push
test
xchg
scas
mov
add
add
sbbl
fidivl
test
xchg
xor
dec
ret
sahf
ret
xchg
lods
cmp
call
dec
bound
adc
int
mov
adc
add
mov
push
fxtract
and
adc
push
push
push
jnp
rcrl
add
pusha
pushf
pop
aaa
mov
icebp
push
add
aam
add
and
les
pop
jns
xchg
sub
or
jl
or
xor
jmp
or
sub
add
jo
adc
and
add
inc
call
add
push
lods
push
mov
hlt
test
out
mov
rol
imul
lea
jg
xchg
push
sbb
dec
jne
mov
sti
jne
add
pop
add
xor
or
jno
push
aaa
jbe
movl
aas
add
lahf
mov
push
adc
xor
andl
push
mov
fs
fcomi
imul
add
pop
in
push
mov
xor
mov
punpckhbw
add
adc
pop
adc
movsl
sar
add
sub
sbb
sahf
add
or
into
dec
sahf
adc
mov
inc
jecxz
pop
push
loopne
add
or
pop
mov
add
add
push
in
push
xor
ret
lods
test
imul
imul
pop
pop
push
sub
add
xlat
sbb
mov
mov
mov
pop
popa
loope
movsb
add
hlt
ret
sub
test
xchg
stos
push
xchg
adc
adc
pop
jp
enter
hlt
dec
pop
mov
mov
mov
xor
xor
mov
push
clc
push
sbb
mov
pop
add
decl
shrl
call
add
out
fldenv
fstpl
xor
sub
inc
add
in
stos
pop
add
sbb
mov
mov
push
mov
or
xchg
pop
add
pusha
sbb
cltd
jnp
push
ss
dec
jmp
fcmovbe
aad
cmp
xchg
xchg
and
negb
add
fst
inc
add
dec
jmp
add
add
cmpsl
cmp
je
test
inc
pop
add
cli
jno
test
pop
add
mov
shrl
or
jne
jae
xor
pop
mov
mov
add
not
pop
in
orb
sbbl
dec
xchg
lock
lods
pop
push
jmp
pop
add
mov
pop
andb
mov
or
add
pop
lcall
lea
test
repz
xchg
aad
fiaddl
add
mov
not
scas
cmpl
add
and
add
ss
add
xor
faddp
mov
mov
cmp
mov
add
jno
mov
leave
adc
call
jg
fcmovb
stos
push
add
cltd
int
faddp
inc
inc
mov
fistpl
inc
orb
inc
jp
les
xlat
pop
mov
ffreep
lea
dec
inc
je
das
leave
out
ja
filds
ficomps
push
lret
sub
mov
loop
cmp
lret
push
jno
aad
pop
inc
ficomps
mov
xchg
jbe
mov
adc
inc
add
fisttpll
ret
data16
mov
sub
add
sbb
mov
out
mov
push
into
loope
lods
negl
and
cmp
sub
fistps
inc
or
loop
cwtl
jecxz
add
lds
fstpl
scas
cmp
and
cmp
imul
adc
pop
xor
sbb
add
fcompl
test
ret
cmp
lds
inc
rcll
and
jmp
mov
xor
fucom
shl
call
jne
call
add
and
jo
dec
mov
jnp
lcall
call
jp
jge
cli
pop
jo
add
inc
out
call
mov
mov
fs
mov
or
lods
nop
add
mov
aam
test
push
push
jl
in
dec
popa
add
sbb
inc
fdivrs
cmp
jge
pop
jbe
mov
cmp
jge
arpl
stc
lahf
xor
add
xor
outsb
inc
xchg
sti
jne
mov
inc
iret
movb
sahf
fdiv
mov
dec
cmp
mov
mov
les
aas
push
mov
mov
xchg
pop
add
sub
int
mov
jp
ljmp
aad
fidivrs
sbb
faddl
jbe
dec
ret
add
inc
ret
dec
xchg
notl
sub
lds
test
imul
cmpsb
mov
out
pop
dec
add
out
lahf
add
movsb
cmpsl
adcl
les
push
mov
ffree
ficoml
inc
mov
das
dec
pop
dec
ljmp
in
or
add
ljmp
mov
xchg
jg
imul
mov
pop
ljmp
xchg
daa
add
ljmp
adc
add
sub
lret
cmp
jmp
shrb
rcr
add
cmp
cltd
and
scas
das
fstpl
sub
loop
call
add
fstpl
sub
sub
jb
jmp
fs
test
fstpl
push
mov
out
jnp
jmp
in
jbe
pop
xor
fldenv
adcl
pop
mov
out
pop
pusha
add
fstp
jns
lods
push
add
pop
xor
mov
pop
mov
jmp
mov
fwait
cld
push
jo
enter
mov
add
repnz
in
idiv
push
pop
pop
push
call
ret
test
pop
add
mov
decl
cmp
hlt
push
in
sub
test
xor
pushf
clc
call
jl
test
jecxz
jmp
mov
pop
das
fistpl
add
mov
ret
orb
xlat
cmovb
cld
faddp
xchg
ljmp
dec
ss
mov
out
push
push
xlat
clc
add
test
pushf
fldl
add
push
jmp
mov
lds
test
xor
mov
ss
mov
in
fidivrs
dec
test
adc
imul
jno
push
add
test
lds
test
pop
add
add
inc
xchg
add
cld
add
testl
data16
add
out
mov
mov
xorb
repnz
or
xchg
loope
adc
mov
call
xchg
lods
popf
add
ficomps
add
popa
lcall
call
insl
inc
mov
addr16
xor
push
add
add
pop
pop
mov
pop
outsl
fldenv
mov
pop
ljmp
mov
mov
pop
add
mov
stc
pusha
mov
push
xor
sub
push
mov
lcall
imul
filds
mov
addr16
mov
pop
xchg
add
push
push
addr16
fucomp
shlb
mov
test
shlb
sub
loope
aad
mov
add
frndint
cmp
pushf
jb
lods
xchg
popa
js
add
in
call
cmp
jo
push
in
mov
push
sti
jne
pop
inc
adc
fcmovnb
mov
mov
xchg
jge
add
nop
xor
call
dec
jmp
and
jmp
mov
ret
xchg
jge
data16
out
cld
into
data16
xchg
test
jecxz
add
cld
push
mov
pop
jle
in
in
inc
pop
add
jp
or
das
lret
pop
jl
movl
push
jl
pop
add
cmpsl
push
cli
jmp
cltd
sbb
or
fiadds
xor
mov
lret
adc
aas
sbb
sahf
lds
ret
push
add
add
cltd
dec
gs
rolb
push
shl
or
nop
rcl
adc
xchg
mov
dec
mov
fcoml
add
push
je
mov
das
mov
scas
pause
sub
add
pop
mov
shrl
sbb
and
mov
pop
ljmp
xor
sti
bound
ljmp
pop
ljmp
pop
aad
int3
cmpsb
jmp
push
out
pop
push
sbb
xchg
pop
call
add
jle
pop
popa
mov
xchg
outsb
nop
dec
fiaddl
add
add
inc
out
inc
or
adc
mov
sbb
mov
or
sub
lock
mov
xchg
adc
ret
shl
pop
dec
adc
mov
adc
in
leave
adc
sbb
loope
push
mov
pop
add
lret
pop
ficoml
repz
jecxz
repz
push
push
xor
and
jmp
mov
add
cmpsb
jecxz
leave
repnz
xor
into
daa
sub
ja
jmp
adc
cld
faddl
dec
inc
jmp
repnz
cld
add
iret
aas
add
and
in
adc
rclb
cld
sbbb
ja
and
mov
mov
mov
jo
movl
incl
add
in
mov
xor
sub
add
fstps
add
xchg
dec
insb
add
mov
add
dec
sti
ljmp
add
add
dec
jg
daa
ljmp
pop
lcall
push
sbbb
lret
clc
out
aas
ficomps
testl
inc
popf
das
test
out
aas
add
fisubrs
inc
call
inc
add
xchg
inc
fisubrs
cmp
mov
faddp
ja
cmp
push
pop
int3
push
add
cmp
fld
add
lahf
lcall
sbb
dec
outsb
dec
cli
xchg
add
mov
or
fcmove
push
ljmp
sub
pop
pop
adc
cmpsl
pop
hlt
rcrl
add
fiadds
mov
dec
pop
icebp
rcrl
sub
cmp
jmp
sub
cmp
and
jmp
enter
push
ficomps
xor
cmc
sti
sub
cmp
pop
jg
inc
jb
add
mov
dec
ficomps
cwtl
xchg
fldenv
push
adc
lods
sti
data16
jnp
dec
mov
mov
add
ficomps
sti
pop
add
popa
mov
mov
or
dec
add
mov
aad
stc
xchg
and
pusha
dec
push
mov
jae
test
and
dec
in
xor
jb
mov
daa
or
jmp
cmpsb
pop
les
jo
bound
xor
popa
ljmp
jmp
ret
sahf
lods
push
dec
add
mov
jbe
push
and
ss
mov
cs
test
cltd
jno
mov
add
ffreep
ljmp
or
mov
mov
dec
mov
inc
pop
test
mov
inc
push
push
and
mov
dec
mov
xor
clc
inc
rorl
push
inc
mov
adc
and
mov
add
out
cmp
lods
jb
adc
adc
leave
dec
mov
adc
sbb
add
inc
push
mov
rclb
inc
pop
mov
fidivs
sbb
in
pop
mov
sti
gs
dec
sub
dec
mov
adc
xor
ljmp
sar
lcall
add
out
mov
mov
inc
mov
adc
lods
sahf
std
xchg
cmc
add
mov
imul
mov
or
je
mov
mov
push
mov
add
xor
sbb
jnp
lds
pop
push
pop
ljmp
aaa
imulb
xor
mov
pop
ljmp
add
jg
sbb
jmp
dec
ficomps
add
pop
ljmp
dec
sub
stos
adc
je
adc
mov
dec
ficomps
shl
sbb
jle
push
jno
std
sub
fs
jl
jp
hlt
push
dec
outsl
mov
sbb
adc
add
inc
add
push
mov
add
dec
loope
sbb
mov
shlb
mov
xor
dec
in
sbb
pusha
gs
mov
sbb
daa
mov
test
in
mov
pusha
dec
arpl
xorl
ljmp
stos
repnz
out
stc
xchg
outsb
push
mov
push
loope
pop
add
push
adcl
add
add
adc
push
sub
add
dec
push
push
sbb
xor
push
mov
or
xchg
jo
inc
ja
jne
iret
dec
icebp
clc
bnd
call
js
inc
aaa
lret
into
sgdtl
inc
leave
mov
push
popa
mov
cmp
mov
xchg
xlat
cmp
mov
mov
ret
mov
xchg
popa
ret
push
add
dec
enter
sub
adc
and
leave
push
dec
sahf
adc
sbb
add
into
sbb
test
jne
fsubp
or
movsb
sbb
push
mov
mov
lods
ja
loop
xchg
sbb
stc
jmp
mov
das
popa
lret
push
dec
or
bound
movsb
and
xor
mov
dec
or
push
hlt
push
and
add
mov
adcb
int
mov
sti
shr
inc
shll
inc
sbb
mov
mov
add
imul
jbe
repz
sti
out
rcrb
and
jmp
adc
loope
add
pop
dec
stos
testl
push
jo
fisubs
pusha
add
add
fisubs
cmpsb
mov
inc
ficomps
mov
rcl
sti
push
and
cwtl
orl
clc
push
push
out
fwait
jns
sub
cmpsb
loope
adc
add
add
fidivs
outsl
sub
fidivs
add
mov
cld
mov
flds
pop
cmp
jmp
add
pop
dec
xor
in
cld
mov
xchg
xor
cld
aaa
and
mov
adc
int
pop
lds
jne
orl
cld
out
adcl
fstpl
sub
dec
dec
xchg
cli
mov
orb
movsb
mov
ret
add
lea
add
icebp
testb
lret
sbbl
in
imul
push
or
adc
daa
js
mov
sti
je
and
mov
push
mov
enter
mov
out
inc
jmp
lock
rcl
or
inc
inc
call
xor
mov
dec
ljmp
pop
jne
add
aam
jo
jecxz
ja
xor
jl
lods
jg
fdivrp
cmc
sbb
add
arpl
mov
test
lret
int3
je
mov
xor
xlat
pop
inc
add
add
aaa
test
fimuls
lcall
jl
inc
lret
or
lock
cmp
jmp
cmc
andl
gs
in
add
adc
faddp
lcall
xchg
scas
das
inc
adc
or
add
int
add
and
pushf
mov
push
into
xor
xchg
mov
pop
dec
xchg
ja
rclb
sub
mov
jbe
test
jp
mov
pop
ljmp
push
nop
sbb
push
sbb
and
push
push
les
add
jmp
push
arpl
ficoml
inc
ds
dec
sbb
fstpl
addr16
repnz
mov
sbb
and
push
out
jmp
roll
pop
popf
fildl
fst
inc
aad
sbb
icebp
push
xchg
mov
test
jge
std
fdivr
out
popa
cmc
add
add
fldl
cld
cli
in
or
dec
push
mov
xor
fsubrl
and
cmc
in
sbb
push
xchg
jne
ret
call
leave
jns
ljmp
jmp
ljmp
adc
add
add
bound
and
add
mov
jmp
ret
jne
push
lahf
jns
inc
add
movl
ljmp
and
call
jne
push
dec
and
jne
xchg
inc
adc
sbb
dec
xchg
and
pop
dec
and
or
push
mov
ja
icebp
jmp
jmp
sub
aam
adc
sub
call
sbb
div
pop
add
fs
sbb
arpl
icebp
add
fiadds
xor
mov
ja
xchg
sub
xchg
lock
test
sar
mov
roll
add
popf
push
sbb
mov
cltd
stos
mov
sub
adc
sbb
sub
adc
xor
cmpb
mov
mov
jmp
mov
inc
cli
jecxz
cmp
pop
jl
sbb
hlt
shrl
out
mov
push
out
mov
cmp
iret
jl
ficomps
addr16
cmp
jb
adc
jo
ljmp
mov
add
pop
pop
addr16
in
pop
arpl
sub
dec
add
or
mov
jp
out
pop
mov
add
mov
in
xchg
pop
ljmp
jle
je
mov
add
pop
decl
sbb
int
mov
add
fnsave
cld
cld
xor
jmp
test
sub
mov
add
add
out
pushf
outsb
add
inc
add
add
add
fwait
jne
int
jne
int
jno
test
outsb
nop
out
push
add
add
pop
sahf
jne
addr16
jne
pop
fwait
cld
mov
negl
add
popf
pop
cld
popf
add
outsl
xor
adc
xor
mov
mov
add
and
stos
inc
or
call
add
jp
jne
pcmpeqd
mul
shll
xor
je
adc
popa
jmp
orl
add
and
adc
loopne
mov
in
hlt
test
push
add
or
xor
push
jne
push
sti
pop
push
mov
add
lret
pusha
mov
xchg
test
roll
leave
add
xchg
add
add
xchg
mov
add
or
into
xor
xchg
mov
int3
int3
inc
add
mov
aam
test
add
xor
dec
addr16
fidivs
jne
out
or
sub
adc
jb
mov
lea
or
jae
xlat
call
cmp
add
pop
pop
ret
sub
mov
or
shll
call
jge
fbld
push
sbb
into
pop
push
enter
pop
pop
xor
sbb
cmpsb
dec
pop
adc
xor
insl
into
pop
ljmp
xor
add
mov
std
iret
int3
sbb
outsl
inc
lcall
add
das
fwait
std
pop
xchg
or
arpl
and
mov
sub
fidivs
pop
call
aad
xchg
iret
gs
mov
push
call
push
and
or
pop
fwait
cld
jmp
add
lret
loop
add
jno
fimuls
fdivs
push
mov
test
jbe
cmc
out
aam
stc
mov
add
xchg
fcmovu
fcomps
sti
sub
pop
lret
mov
fiaddl
xchg
sub
std
pop
jp
jb
rorl
cwtl
sbb
cld
push
pushf
jo
jno
popf
ljmp
sbb
adc
call
adc
call
pop
add
add
sbb
rcrl
or
call
xchg
incb
decl
sub
or
add
decl
ljmp
xchg
jmp
loop
adc
mov
ret
inc
ficomps
or
das
insb
sbb
cli
jae
pop
insb
adc
icebp
std
push
std
cmp
inc
jge
add
test
movb
cmp
std
pop
outsb
cli
je
or
test
add
and
mov
or
dec
test
xorl
call
push
fxtract
lea
fwait
or
push
lods
stc
jae
mov
or
sub
stc
pop
add
push
ret
dec
mov
sub
mov
add
add
pop
clc
or
mov
push
subl
push
mov
sub
and
aaa
mov
or
xor
mov
xchg
push
gs
mov
adc
mov
sub
jmp
pop
mov
pop
loope
fwait
repnz
sub
mov
ficompl
add
add
jecxz
or
cmp
adc
and
xor
jge
xor
xor
mov
jno
cld
mov
cmp
aas
xor
inc
cwtl
xor
stos
sub
cld
rclb
mov
mov
lods
mov
sub
mov
sub
cmp
aam
fsubrp
sub
nop
in
sub
imul
push
sub
mov
mov
push
cmp
cmc
incb
push
mov
sub
add
loopne
push
frstor
add
in
mov
mov
mov
add
pop
inc
add
lret
cld
pushl
push
push
imul
test
add
shrb
adc
cmp
js
enter
mov
mov
push
mov
adcl
jmp
add
cmp
push
pop
add
or
push
add
dec
in
es
mov
xchg
mov
push
jbe
cmc
incl
xchg
adc
push
adc
or
dec
in
mov
add
pop
test
mov
repnz
ficoms
add
jb,pt
ror
movsl
push
push
dec
mov
adc
std
cmp
xorb
jo
mov
arpl
subl
adc
pop
mov
or
pop
lahf
out
pushf
pop
adc
ret
cmp
cmpsl
into
jmp
addb
pushf
outsb
jnp
mov
and
cmp
cvtps2pi
sahf
pop
fsubrl
jecxz
sahf
push
ljmp
pop
ljmp
inc
call
jmp
into
jmp
mov
xchg
stos
push
fs
lahf
lret
ljmp
loop
ljmp
push
ljmp
outsl
add
push
imul
add
add
pop
add
faddp
xor
dec
rcll
sbb
fucom
rolb
jmp
inc
pop
add
pop
fldenv
mov
fldl
push
pop
pop
cmp
jmp
jmp
add
fisubs
add
fldl
push
push
push
jne
jmp
fucom
fldenv
pusha
test
add
ficompl
pop
cmpsb
cmp
jmp
mov
add
imul
pop
add
push
and
add
adc
test
add
xchg
call
loope
mov
add
pop
jne
cli
adc
push
jno
shrl
pop
xchg
mov
jne
add
icebp
and
mov
dec
push
pop
push
add
inc
and
add
pop
jmp
mov
sahf
mov
jb
testl
jnp
call
or
dec
and
jbe
push
inc
orl
out
lds
faddl
jns
mov
add
xchg
je
fiadds
inc
add
mov
adcb
pop
sub
ficomps
xchg
testb
loop
test
xchg
fidivl
add
addr16
and
scas
out
pop
mov
pop
jl
test
fcompl
lret
pop
mov
xchg
pop
ljmp
in
sub
loopne
sub
sub
ljmp
add
aas
jge
xchg
sbb
pop
pusha
lret
pop
mov
xchg
pop
ljmp
pop
popa
inc
mov
popa
mov
add
add
dec
addr16
push
pop
negb
jge
fimull
add
call
jmp
or
fisttpl
add
add
movsl
jno
jmp
adc
jecxz
add
adc
pop
add
notl
mov
inc
sbb
fisttpll
push
push
fstpl
jmp
xchg
cld
test
fldenv
pusha
test
jecxz
add
bound
mulb
add
fldl
mov
stos
call
xor
fistpl
popa
xchg
sub
sbb
fstpl
add
add
pop
arpl
negl
lea
pop
jmp
mov
dec
shll
and
mov
call
xor
adc
and
push
dec
sub
lea
popa
add
outsl
sbb
aas
popa
add
add
decb
cmp
cld
inc
or
enter
add
add
add
jecxz
cld
pushl
popa
add
fdivp
inc
add
movsl
mov
sbb
addl
test
jns
add
jbe
mov
into
add
mov
jbe
xchg
sbb
mov
dec
enter
sub
add
add
add
add
out
mov
pop
inc
add
jae
inc
ret
push
stc
mov
js
add
jbe
mov
dec
add
mov
pop
ljmp
pop
addr16
cmpsb
jne
mov
mov
push
gs
rcr
pop
ljmp
and
add
pop
ljmp
and
add
add
fldenv
xchg
pusha
ljmp
fincstp
inc
fsubp
stos
ja
cs
loopne
ja
dec
mov
jecxz
ljmp
pusha
ljmp
pusha
ljmp
xlat
xor
dec
pop
or
jmp
jne
xor
mov
mov
and
mov
std
xchg
push
or
inc
adc
mov
mov
add
fsubl
jmp
xchg
aam
cmp
push
add
jp
lds
pop
add
or
xlat
push
xor
jne
jnp
jo
loop
mov
fistpl
and
mov
lods
add
adc
js
or
stos
bound
test
pop
push
cmp
pop
popa
add
inc
sub
adc
add
loopne
add
sbb
add
or
je
add
push
push
dec
pusha
pop
mov
test
test
sbbl
scas
pushf
add
sub
push
sahf
mov
add
pop
jbe
lahf
lcall
aas
pop
add
xlat
test
mov
or
int
mov
add
mov
push
push
call
arpl
jns
mov
push
or
test
lret
mov
lcall
arpl
clc
dec
idiv
push
add
cli
mov
and
jbe
aas
pop
sti
sbb
ss
decl
jne
sahf
and
fdivl
decl
jle
add
lea
jbe
je
add
xchg
xchg
call
xlat
jbe
jbe
popf
jns
jbe
xchg
jmp
jne
sbb
pop
rorl
call
sbb
inc
inc
pop
aam
seto
pop
outsb
loop
jo
fsubl
test
aam
jmp
cwtl
mov
add
gs
cmp
add
pushf
int
add
pop
ret
pop
ljmp
mov
add
add
jne
xor
pop
retw
or
ret
ja
cmpb
mov
sbb
fisttpll
pop
sub
mov
inc
pop
in
and
ret
cli
sbb
in
rcrl
scas
jns
xor
add
fiadds
loope
rcll
jae
fcompl
bound
sub
add
mov
add
sub
pop
mov
jo
inc
sub
jmp
pop
mov
mov
pop
movb
adc
popa
movb
adc
fwait
xor
sti
xchg
mov
add
pop
mov
add
mov
jne
jg
das
add
add
negl
call
or
int
negl
call
fisttps
add
or
mov
popa
add
fidivs
and
mov
ljmp
fidivl
xchg
xchg
or
icebp
jnp
push
js
add
filds
fbstp
sarb
inc
fidivs
shr
test
xor
cmp
xor
and
jne
andb
add
loope
fs
arpl
sbb
and
sahf
or
div
add
daa
test
std
push
lret
push
ja
inc
cli
ss
sbbl
add
or
and
mov
mov
fisubrs
into
pop
test
add
fsubs
roll
xor
andb
sti
pop
scas
repz
pop
ljmp
pop
ljmp
push
arpl
ficomps
jbe
cmp
xlat
in
sbb
stos
pop
fdiv
pop
xchg
dec
fcoml
movl
add
frndint
hlt
pop
nop
ljmp
cmp
push
das
cmp
in
sbb
add
pop
add
sbb
mov
pop
andb
aad
xchg
sub
leave
jmp
jp
test
pop
add
ficompl
fnstenv
sub
inc
and
aam
inc
push
push
call
add
jne
sbb
mov
jmp
jmp
in
cmp
fstp
sarl
jne
mov
pop
jmp
jo
cmp
and
cmp
add
adc
sbb
and
and
jbe
imull
test
shll
jne
fcmovnb
or
outsl
decb
imul
add
lret
add
aaa
sbb
add
xor
xor
lcall
add
mov
xchg
std
je
cmp
push
pop
pop
add
mov
mov
sbb
push
mov
push
call
pop
adc
fimuls
inc
or
jne
add
lahf
test
cwtl
xor
call
add
int
in
dec
xchg
mov
inc
add
jbe
mov
jbe
call
push
mov
jge
jbe
mov
fidivs
mov
mov
pop
add
fsubrp
mov
push
test
add
fdivl
call
xchg
leave
outsb
add
adc
je
test
fldcw
pop
add
fimull
jecxz
stos
inc
mov
sbb
sbb
sub
test
xchg
add
fisubrl
and
pop
jg
jnp
divb
xchg
dec
add
shl
negl
insl
jmp
xchg
pop
outsl
dec
fcmovbe
aaa
loope
pop
insl
les
jbe
add
pop
addr16
push
outsb
mov
insl
nop
add
add
pop
popa
inc
cli
dec
sub
popf
addl
jmp
jecxz
lcall
xchg
jecxz
add
sub
cmp
sub
cld
mov
push
jmp
bound
push
icebp
pusha
lods
jbe
pop
add
jge
pop
add
repz
loop
inc
lea
pop
xchg
inc
dec
add
or
int
call
pushf
fdivrl
fisttpll
push
bound
dec
cld
lcall
and
add
jge
call
je
std
add
in
mov
mov
jo
cmp
or
or
adc
adc
inc
addr16
mov
add
fwait
or
stos
shr
adcl
push
in
rorl
mov
jmp
mov
jmp
test
dec
test
bound
add
adc
add
xchg
cmpb
jbe
sti
aas
or
or
jmp
clc
les
fistl
lcall
add
adc
loopne
stc
jg
add
inc
add
and
xchg
adcb
dec
andl
push
inc
add
in
cmc
xchg
jo
inc
jbe
mov
popa
lock
xor
shll
push
addl
dec
clc
xchg
mov
and
sub
clc
fdivl
sub
adc
jmp
xchg
jmp
xorl
push
pop
or
fiadds
add
ljmp
fsubrp
lods
out
notl
in
daa
cmpsl
cmpsl
aaa
mov
mov
mov
cmpb
repnz
sti
roll
fidivrs
lods
dec
mov
push
jmp
mov
inc
loop
jbe
jbe
pop
loope
or
fsubrp
lods
or
pop
mov
add
push
and
jmp
loope
fisubs
add
fnstsw
cmc
data16
mov
fucomp
inc
int
test
fistps
sub
loope
jmp
out
pop
jne
addr16
or
jmp
in
test
pop
test
fstpl
and
jnp
mull
adc
jb
add
pop
and
filds
add
pop
test
mov
stos
jp
xchg
add
jecxz
je
in
inc
and
das
jmp
push
dec
call
mov
and
xor
pop
mov
cmp
lcall
das
dec
fisubs
push
sbb
jne
call
add
notl
outsl
daa
jne
mov
xchg
in
mov
sahf
repnz
jne
xor
xchg
hlt
pop
cwtl
lahf
mov
xchg
inc
icebp
call
pop
jmp
jmp
movsb
dec
mov
mov
shlb
inc
sub
push
cmp
rcrl
movb
add
leave
cld
fdivrl
lds
cs
or
seto
adc
fcoms
or
jae
mov
clc
sub
add
cld
rcl
fs
das
call
or
ret
mov
jecxz
inc
pop
out
mov
cmc
iret
pop
cmpsb
arpl
pop
xchg
ret
mov
dec
push
and
iret
scas
js
pop
adc
loope
ret
ja
fiaddl
add
imulb
pop
ljmp
ljmpw
out
faddl
mov
push
jne
mov
pop
ljmp
sub
xchg
pop
ljmp
and
fsubp
mov
fsubrl
cltd
fldln2
dec
add
in
je
jp
xchg
xor
fucom
rclb
shll
mov
jmp
rorb
push
pop
rcll
test
or
cld
push
jp
out
repz
ljmp
push
pop
push
push
cld
out
repnz
xor
dec
dec
pop
call
repnz
out
repnz
inc
ret
incl
or
add
fstp
data16
mov
xchg
fwait
jmp
decl
mov
shlb
push
nop
daa
or
xchg
pop
add
shr
stc
call
test
dec
clc
andb
mov
pop
jne
call
cld
cmp
add
lds
add
jo
adc
cld
call
cmc
lea
shlb
push
dec
add
test
aam
push
lods
in
popl
xor
ret
xor
faddl
in
paddq
sbb
jae
call
bound
push
add
sti
stc
ds
add
push
pop
add
loope
add
arpl
std
rcl
xchg
pop
lahf
neg
xchg
xor
std
push
and
push
push
or
call
pop
dec
daa
pop
pop
insl
filds
pushw
add
repnz
in
imul
jmp
jno
push
xchg
gs
dec
xchg
fistps
cmpb
pop
mov
lods
mov
add
sbb
shl
xchg
mov
push
cltd
cmpb
cs
je
pop
out
lods
sub
mov
or
lcall
mov
sub
fisubrl
add
call
jne
pusha
and
sbb
pusha
cld
sbb
jb
mov
xor
daa
add
addr16
repz
vcomisd
push
pop
jb
pop
push
jne
push
mov
dec
scas
cmp
ds
insl
xchg
scas
dec
push
xchg
adc
sti
popf
pop
xchg
cltd
pop
sti
sub
pop
push
adc
adc
jmp
mov
cmc
sbb
ljmp
mov
add
orl
test
add
inc
pop
mov
in
hlt
jp
push
adc
dec
xor
cmp
jns
inc
lret
in
mov
sbb
leave
add
pop
outsl
push
push
jo
jo
enter
aaa
pop
mov
in
test
push
push
xor
fcoms
pop
mov
pushf
test
inc
cld
add
addr16
addr16
inc
add
jnp
pop
into
inc
add
xor
cmp
push
arpl
push
pop
cmp
push
xorl
cmc
aas
fiadds
int
bnd
jae
xor
push
les
lods
sbb
inc
add
adc
lcall
push
sbb
xor
fcomi
incb
test
add
stc
sbb
add
test
push
stc
dec
call
jmp
add
in
pop
xchg
cmp
jecxz
fisttpl
jno
sbb
iret
push
pop
jno
shr
sbb
ret
jo
shlb
ss
imul
push
outsb
iret
shlb
mov
int
sub
jo
out
sbb
repnz
add
jno
ret
lods
pop
mov
int
incb
in
rcrb
mov
add
jo
lret
rcrb
popf
add
jo
lret
fisttps
rorl
add
js
test
out
addps
fwait
pop
add
addb
rorl
jmp
jb
push
test
popa
push
inc
and
int
add
addr16
push
shrb
roll
fidivrs
dec
jo
adc
and
fucomp
or
push
jb
add
pusha
popf
jbe
cs
xor
fucom
stc
insb
psubsw
ret
fisttpll
cld
pushf
icebp
ja
fcmovnu
pop
xchg
pop
push
and
mov
pop
pop
pop
jbe
repz
xchg
pop
add
xor
add
add
mov
xorl
mov
jne
mov
aam
jo
inc
or
jne
mov
jo
movsb
outsl
add
pop
pop
int3
ja
ret
push
mov
in
int3
inc
pop
add
mov
lods
aas
or
jge
lea
mov
cmp
jne
mov
rolb
lock
mov
stos
add
dec
les
xchg
mov
rcr
stos
add
test
inc
add
add
arpl
adcl
cld
sbbl
ltr
clc
les
fidivrs
out
aas
fdivrp
les
fidivs
xchg
add
fiadds
xor
fdivrp
aam
add
pop
dec
sar
or
pop
and
imul
sub
mov
test
rcr
insl
out
shrl
stc
inc
push
stos
add
jbe
jcxz
shll
std
es
xor
or
es
icebp
jecxz
dec
add
sbb
pop
jne
mov
jae
popa
cwtl
subb
fwait
jecxz
rcrb
call
clc
add
mov
sahf
cmc
icebp
rcrl
fdivp
jmp
push
and
icebp
fstps
pop
into
insb
cmc
fucomi
sbb
inc
or
rcrl
inc
movsl
das
add
pop
sahf
jbe
pop
mov
insb
stos
fisttpll
push
jb
inc
sbb
call
push
or
cmp
add
leave
push
add
add
mov
add
adc
add
cltd
movaps
cmpsb
popa
setg
pusha
cmpsb
inc
and
jmp
add
hlt
fcmovu
jge
std
pop
jge
or
iret
sahf
pop
add
xor
mov
loop
je
jecxz
je
cs
test
test
addl
or
xor
inc
add
movl
mov
sub
cmp
andl
and
sbb
sub
les
leave
mov
cmp
shlb
push
and
shrb
outsl
dec
mov
in
or
outsl
cmpl
adc
fisubs
and
ficomps
and
add
add
inc
add
mov
xor
cmp
dec
mov
notb
xor
mov
xor
or
mov
pop
sbbl
jno
adc
jne
shl
jnp
xchg
ljmp
lds
mov
fldl
jno
adc
inc
and
loope
mov
add
pop
ljmp
lods
ljmp
mov
add
and
cli
pop
mov
inc
sti
pop
fimuls
and
pop
pop
jmp
call
cwtl
fistpl
mov
add
jge
push
pushf
incl
pop
sahf
call
add
imul
sbbb
jmp
ret
bound
pop
pop
and
pop
jmp
inc
ficomps
inc
push
sti
add
mov
rolb
pop
sahf
jbe
mov
sahf
call
fnstcw
push
cmp
sbb
and
inc
and
jmp
push
sahf
jne
pusha
push
jns
sbb
cltd
movsb
dec
aad
sbb
cmp
pop
stos
add
xchg
push
lea
pop
add
fdiv
xor
jmp
add
cmovs
inc
jmp
cmp
dec
jge
add
add
mov
jne
aas
xchg
adc
add
jmp
pop
arpl
loope
or
sbb
ret
add
jne
add
or
add
or
aam
jae
pop
jmp
test
pop
sub
add
xor
popa
add
js
adc
xchg
jne
mov
add
push
xor
mov
pop
ret
add
sbb
xor
push
push
jmp
cmp
fldenv
jbe
pop
and
sub
add
testb
add
and
mov
es
xchg
add
outsb
fadds
jne
test
push
add
bound
push
in
xor
ret
leave
and
inc
add
jne
jae
pushf
jmp
shl
fsubr
jo
add
popf
sub
ljmp
add
rolb
add
add
push
call
jnp
sub
pop
lock
jne
or
and
jno
mov
fmuls
insl
cmp
data16
inc
pusha
adc
lret
jg
ljmp
mov
adc
inc
sub
es
repz
arpl
jbe,pn
fiadds
add
add
fadds
sbb
pop
test
sahf
dec
push
add
add
sub
es
in
cmc
add
fstpl
push
mov
and
jne
lods
bound
push
out
and
jns
add
pop
push
add
popf
jbe
mov
sti
or
pop
int3
xchg
faddl
add
push
inc
jmp
lods
and
bound
sub
frstor
mov
jae
add
outsb
dec
push
ss
pop
int
inc
ja
mov
inc
pusha
add
popa
inc
cmp
xchg
jge
pop
insb
std
xor
fmulp
decl
popf
add
in
push
test
insb
adc
pop
pop
pop
mov
bnd
dec
rcll
add
imul
add
add
jmp
push
addr16
pop
add
jns
dec
mov
lahf
movsb
pop
cmp
sbb
call
fcompl
outsl
out
call
mov
pop
popf
sub
or
xchg
lods
iret
fstps
xor
dec
jno
stc
aam
pop
or
int
add
addb
add
mov
sub
or
cmp
testb
add
lock
call
test
ret
sarl
and
push
sub
in
mov
dec
hlt
in
das
fadds
call
xchg
sti
or
jmp
out
adc
push
inc
jnp
lret
mov
push
call
inc
add
push
or
pushf
dec
bound
push
sbb
add
out
call
dec
cmc
sbb
les
or
rorb
inc
add
popa
dec
mov
or
inc
pop
ljmp
pushf
fiadds
shrl
inc
aaa
pop
pop
sbb
push
dec
stos
add
xchg
inc
add
popf
ljmp
mov
add
pop
jmp
sbb
mov
add
jb
sub
or
push
icebp
push
sahf
jne
movsl
bound
test
call
sbb
xor
out
cld
mov
popf
pop
xchg
roll
push
in
cld
push
push
dec
cld
mov
ficompl
aas
adc
inc
popa
lret
add
aas
or
fs
cld
add
and
cmovo
pop
push
mov
xlat
in
insb
imul
sti
pushl
or
pop
mov
mov
adc
add
inc
fcomp
add
push
push
shlb
mov
adc
add
inc
add
xor
or
jne
sahf
rorl
aas
imul
add
add
mov
inc
pop
pop
mov
aaa
popf
jo
mov
sarb
dec
imul
mov
inc
fidivs
cltd
movsl
shll
xlat
xor
loope
aaa
sub
jne
data16
push
cmp
inc
fimuls
adc
bound
cmp
cwtl
xor
popa
sub
std
sarl
inc
test
inc
clc
scas
icebp
inc
hlt
add
mov
push
mov
aad
push
popa
cld
xor
xchg
lea
add
push
mov
sbbl
add
gs
inc
cli
mov
shll
lcall
sbb
shlb
mov
ss
pop
mov
stos
call
fadds
decb
add
add
mov
push
dec
sub
frstor
add
mov
mov
pop
fisttps
mull
and
nop
in
pop
jne
dec
dec
fstpl
xchg
arpl
out
mov
dec
sbb
cmp
arpl
xchg
adc
arpl
cmp
xchg
repz
js
dec
test
mov
shlb
cli
daa
dec
adc
and
dec
adc
add
jge
out
cmp
jecxz
cld
and
sbb
cmp
inc
pop
addr16
dec
mov
mov
sub
scas
out
sub
das
adc
dec
adc
fdivs
mov
mov
loope
dec
xchg
sbb
ljmp
and
add
mov
insl
mov
mov
adc
negb
and
push
mov
sub
xchg
mov
lds
nop
push
cmpsb
mov
xor
dec
lock
xchg
dec
js
insb
mov
cmpsb
cmp
dec
mov
mov
leave
ret
mul
xchg
add
movsb
arpl
xchg
mov
int
mov
fdivl
mov
in
mov
nop
cltd
in
mov
lock
and
adc
enter
inc
pushf
xchg
sub
sbb
mov
pop
popa
mov
add
pop
enter
xor
inc
repz
and
popa
enter
call
add
mov
cmc
test
push
cmc
test
jmp
dec
mov
pop
enter
in
jl
out
clc
pop
jle
push
and
test
out
test
lods
pusha
push
enter
sub
pusha
es
sbb
in
test
pop
test
loopne
lcall
jo
sbb
push
mov
jno
in
add
pop
mov
jbe
nop
mov
sbb
or
xor
cltd
or
push
pushf
sub
stos
sbb
flds
sbb
mov
pop
xlat
dec
jl
decl
mov
and
dec
xlat
mov
push
out
inc
and
hlt
inc
imul
pop
fmuls
add
popf
cmp
dec
adc
jp
sbb
decb
cmp
sarb
inc
hlt
clc
cmc
mov
hlt
clc
cmc
mov
xchg
popf
xlat
mov
test
fbstp
cmp
and
sbb
mov
cmp
and
jbe
cltd
mov
fcmovnbe
cmpsb
add
dec
push
cmpb
add
incl
in
push
repnz
xor
push
fsubl
dec
sbb
cltd
cmpsb
sub
dec
cmp
mov
ror
loop
mov
push
mov
int
cwtl
ret
fildl
mov
inc
sbb
into
dec
xchg
inc
push
ret
inc
mov
lea
mov
mov
test
imul
fxch
fwait
mov
push
gs
lods
jo
push
icebp
xor
push
testb
rcrb
in
inc
sbb
mov
mov
mov
add
jo
inc
add
jecxz
sub
pop
xchg
sahf
filds
or
or
add
lcall
stos
add
enter
xchg
stos
mov
ficoms
lahf
mov
ljmp
pop
push
das
shrl
adc
pop
insl
ret
insl
jns
lahf
jnp
ljmp
mov
dec
adc
dec
bound
pop
fadd
adc
ljmp
add
shll
dec
iret
push
dec
pushf
out
mov
cmc
pop
or
mov
adc
or
xchg
enter
and
testb
int3
clc
push
and
testb
cmc
dec
sub
dec
lahf
arpl
pop
push
adc
lahf
pop
mov
lahf
arpl
jbe
jmp
lcall
pop
sbb
cmpsb
movlhps
pop
mov
xor
dec
cmp
jns
stos
mov
jb
into
mov
ret
mov
pop
sub
out
movsb
neg
push
fnstenv
adc
ret
stos
mov
or
stos
add
daa
dec
jno
aad
js
std
push
shll
push
movsl
sub
add
das
pop
cmpsb
lret
dec
jle
std
pop
sbb
movsb
cltd
pop
rcll
dec
js
add
sbb
mov
addr16
push
popf
not
ljmp
hlt
adc
not
pushf
and
cmp
mov
lahf
adc
not
fisubs
dec
cmc
cmpsl
pusha
lods
js
imul
lret
dec
fcoms
test
ret
xchg
dec
dec
std
int3
rcrl
dec
xchg
cmpsl
pop
pop
xchg
adc
dec
or
movsb
inc
or
inc
add
sti
in
sub
ds
call
cmp
out
dec
dec
and
les
lods
cmpsb
xor
dec
dec
scas
cmp
lds
cmp
scas
pop
enter
add
add
jecxz
pop
pop
sub
ret
cmp
lret
lahf
popf
imul
xchg
push
xchg
aad
out
mov
aad
cmpsl
ljmp
in
mov
aam
xchg
push
inc
lret
mov
in
lret
mov
cs
nop
cmpsb
mov
sub
lret
scas
das
rorl
leave
mov
jmp
add
rolb
or
inc
inc
push
jo
and
dec
inc
xor
push
add
inc
xor
dec
xchg
push
scas
pop
sbb
shlb
enter
mov
mulb
xchg
daa
shlb
sbb
daa
rcl
push
mov
dec
bound
mov
mov
dec
dec
dec
mov
test
leave
jno
add
outsb
cmpsl
pushf
mov
ljmp
jle
repz
rcrb
fwait
mov
pop
mov
push
notb
mov
movsl
add
adc
dec
add
hlt
adc
xchg
and
les
cmc
rcrl
dec
movsl
add
lret
out
adc
dec
cmc
fs
stos
adc
add
sbb
ljmp
adc
enter
cmc
mov
mov
xchg
adc
xchg
adc
sbb
dec
ret
in
mov
add
sbb
and
jb
adc
cmc
fidivs
lret
mov
repnz
mov
orb
pushf
repnz
dec
add
imul
gs
dec
rcrb
mov
dec
dec
pusha
xor
in
dec
shrl
rol
movsb
jno
dec
adc
mov
dec
adc
test
jnp
fsubrp
mov
fisttps
loop
dec
push
push
pushf
insb
lret
lret
or
add
pop
mov
dec
inc
mov
add
add
dec
mov
inc
loop
mov
cmp
mov
fs
or
jno
dec
mov
aam
les
popf
imul
fs
addl
aad
rcrl
fistpl
and
mov
adc
sahf
push
xchg
add
inc
xlat
xchg
xabort
cli
je
pushf
sbbb
loopne
gs
pushf
dec
sbb
push
lahf
test
sbb
xor
popf
xor
xor
and
add
adc
ljmp
inc
cmc
mov
inc
ss
pop
ret
ljmp
lahf
jnp
jo
jb
test
testb
shl
add
dec
lahf
divb
sbb
testb
cmc
dec
xor
data16
xchg
testb
xchg
testb
fisubl
cmpsb
jmp
xchg
xlat
rorl
jmp
iret
mov
or
test
or
lahf
int
aad
push
inc
notl
roll
cmc
cld
mov
hlt
push
or
add
add
or
jne
aas
jnp
or
jb
mov
cmc
mov
add
cmp
in
push
dec
cmc
movzwl
xchg
xlat
and
fidivs
mov
fnstenv
or
subl
fnstenv
lock
xchg
mov
loop
xchg
mov
dec
mov
in
fnstenv
lret
mov
ljmp
inc
nop
push
xlat
mov
push
fdivrs
ja
lods
lds
fldenv
jno
inc
mov
popa
xchg
inc
cli
lgs
add
leave
jnp
jo
out
inc
sub
rcrb
push
and
push
xchg
add
pop
pop
lahf
inc
sahf
push
xchg
in
and
bound
sti
lahf
loop
inc
mov
mov
dec
mov
cs
inc
mov
testb
xor
mov
jns
xchg
mov
and
lahf
mov
dec
imul
nop
push
add
xchg
cmpsb
jecxz
and
push
cmc
mov
mov
testb
cmc
mov
ds
mov
cmp
dec
push
xor
dec
inc
fwait
jae
mov
or
push
sbb
sarb
and
dec
rcrb
fwait
fwait
testb
cli
sbb
in
dec
sti
cmc
mov
cwtl
jnp
cmp
aas
dec
add
and
in
xchg
mov
mov
push
xor
mov
push
hlt
xor
or
or
pop
test
cmc
fs
ror
pop
dec
cmc
jl
push
hlt
fs
jno
inc
inc
cmc
push
fcmovb
jno
xchg
dec
cmc
and
mov
cmpsb
inc
shll
je
xlat
sarl
cmc
cmp
out
adc
sub
add
jmp
add
addr16
xchg
addr16
gs
addr16
insl
inc
notl
rcr
xor
xlat
adc
ret
mov
sahf
push
add
iret
dec
mov
pop
xchg
roll
scas
daa
mov
pop
sub
js
es
cltd
out
stos
shll
dec
add
mov
xor
sub
mov
cmp
mov
cmp
outsl
dec
push
sarl
mov
arpl
or
rorl
jmp
in
std
cmp
pop
add
mov
mov
xlat
cs
in
push
dec
mov
xor
mov
push
imul
shr
fwait
inc
mov
inc
and
sub
dec
mov
sub
cmp
dec
cwtl
and
lahf
xor
sub
xchg
out
test
add
fisttpll
push
or
add
jecxz
inc
mov
add
shrb
pop
mov
add
test
or
pop
les
sbb
ljmp
orb
add
fimull
xchg
push
insb
sahf
lahf
push
scas
sahf
xorl
pop
les
fnsave
addr16
xor
mov
inc
imul
mov
pop
add
sub
pop
mov
lcall
addr16
pop
cmp
pop
movb
add
mov
add
inc
pop
add
fcmovne
mov
hlt
les
push
fcmove
jp
pop
call
aam
mov
add
push
fcmove
cmp
cld
incl
or
mov
enter
xor
pop
lea
mov
pop
lea
inc
or
xchg
dec
cmp
dec
mov
xchg
lea
add
mov
enter
inc
fcomip
mov
fidivs
sbb
pop
in
or
andl
cs
mov
sbb
push
les
pmaxub
dec
andl
out
mov
fbstp
sbb
imul
push
les
jp
mov
sbb
add
mov
push
call
adc
jg
add
mov
in
or
out
fdivs
mov
int3
inc
sub
std
xchg
mov
aas
in
popf
ljmp
in
jmp
pop
jbe
jmp
jmp
inc
outsl
mov
jb
sub
and
xor
xchg
mov
cmpsl
sti
inc
cmp
ficomps
aam
add
jmp
mov
inc
arpl
shlb
jns
inc
sub
jmp
insb
pusha
movsl
inc
xor
aad
stos
push
fnstcw
addl
cmp
add
dec
icebp
rcl
dec
dec
xchg
push
inc
mov
cld
push
fimuls
fsubrl
inc
jmp
add
add
rcll
cmpsb
cld
pusha
mov
popf
add
push
insb
mov
dec
push
add
inc
popa
sub
fistpl
subb
sbb
test
mov
xchg
jmp
cmp
cmpsl
stc
out
add
add
xchg
testb
add
ja
inc
hlt
ja
inc
clc
add
pop
push
xor
mov
adc
lret
test
xchg
cmc
cmp
xchg
pop
add
inc
mov
jo
imul
or
pop
test
lret
jae
test
mov
lcall
sti
add
out
jg
adc
std
push
pop
mov
add
jae
push
add
xchg
stc
sar
lea
add
mov
sti
andl
pushl
lds
nop
orl
std
scas
jecxz
pop
inc
xor
mov
popf
std
cmp
adc
and
cmp
std
sbb
sbb
adc
add
sahf
ss
cmp
out
std
icebp
imul
in
les
add
loope
scas
dec
mov
addl
bound
add
sbb
xor
lret
pop
hlt
aas
ficomps
ret
or
shrl
inc
sbb
fidivl
jae
mov
add
fldcw
pop
lock
mov
jmp
scas
lods
shlb
push
leave
out
leave
popf
inc
jmp
inc
xchg
cmpsl
aaa
xor
push
fidivrs
xor
test
add
add
int
out
ljmp
mov
sbb
lds
aas
xchg
cs
test
jge
ljmp
shlb
xor
sub
rcr
rcrb
inc
lock
fst
mov
in
gs
jmp
cmp
cld
push
xor
movsl
jmp
lods
push
add
jne
call
ret
jmp
add
test
call
adc
jmp
stc
loop
call
ficompl
stos
lods
mov
jmp
xchg
insb
inc
jmp
sbb
out
call
mov
lods
cld
add
iret
test
pop
add
inc
iret
test
push
add
ja
rorb
ja
push
lea
aaa
test
xchg
incl
add
adc
hlt
xor
inc
iret
test
pop
add
pop
in
test
pop
add
imul
test
pop
add
in
test
pop
add
imul
test
pop
add
in
test
pop
add
mov
lds
gs
and
push
xchg
add
leave
lds
scas
ret
push
movb
test
add
das
sub
xchg
sbb
push
inc
cmp
inc
aaa
mov
arpl
add
or
jmp
inc
xchg
inc
repnz
xchg
inc
inc
ja
adcl
sbb
andb
in
sti
clc
iret
jmp
add
adcb
lods
aam
inc
add
lret
out
aas
stos
pop
mov
fnstcw
add
push
loop
lahf
ret
cmp
nop
sbb
insl
jmp
add
jne
xor
cmp
cs
and
add
pop
cmp
adc
in
out
jg
push
loop
sahf
pop
cmp
nop
popf
cmp
out
jnp
call
xchg
and
mov
xchg
cmp
cmc
add
xchg
add
mov
insl
add
xor
lds
cmp
fcmovnu
pop
add
fsubl
inc
insl
fcomps
jmp
sbb
in
pop
lahf
or
cltd
mov
lahf
or
xor
in
and
pusha
lahf
fnstsw
and
add
cs
sub
into
shll
sbb
mov
in
pop
push
aas
repz
loope
inc
cmc
cwtl
fcompl
mov
fdivr
rol
cli
inc
lea
test
das
out
call
dec
pop
push
test
jnp
inc
add
imul
jmp
int
mov
sti
push
push
test
add
add
mov
fs
cmp
arpl
cmp
xchg
push
neg
cmp
and
ss
mov
inc
sbb
mov
call
mov
jno
call
jnp
push
test
sbb
ficomps
scas
push
jmp
mov
std
fxch
les
or
xor
cmp
add
mov
lds
faddp
sbb
jecxz
adcl
jmp
ficoml
sbb
stos
or
inc
add
mov
bound
test
inc
add
cmpsb
outsb
adc
aas
sbbl
lret
adc
das
push
pop
adc
stc
cmp
add
jecxz
fildl
pop
add
mov
xchg
cmp
mov
xor
add
mov
jne
sarb
pop
lcall
ljmp
insl
sub
sub
xchg
pop
ljmp
cmp
fildl
jecxz
pop
ljmp
ljmp
push
sub
mov
push
push
ficomps
or
aam
jp
add
jb
cld
insb
leave
and
test
pop
cmp
cmp
leave
sahf
stc
pop
push
sub
fadd
adc
fidivrs
xchg
jmp
push
fwait
leave
mov
mov
testb
mov
mov
pop
cmp
loope
sti
sub
mov
fidivrs
jbe
push
dec
aad
sbb
add
adc
repnz
jmp
jo
inc
cmp
rcrl
movsb
dec
aaa
out
ljmp
push
push
pop
add
in
add
jmp
ret
push
jae
iret
pop
pinsrw
mov
je
xchg
pop
dec
jg
mul
aas
in
and
xorl
add
jnp
or
pop
mov
loope
add
push
fidivs
add
js
push
lods
pusha
pop
mov
pop
test
xor
std
jne
add
shrb
pop
leave
add
fsincos
aaa
push
or
add
aas
fisubrs
inc
add
inc
lret
cmpsb
pop
jl
fildl
fld
add
fiadds
out
inc
cmc
fxch
popl
fiadds
fiadds
and
subb
sub
lods
xchg
push
mov
cmpsb
repnz
fidivrs
add
ficoms
adcb
xchg
push
xor
repnz
faddp
lds
fsubp
jle
or
jmp
xor
mov
jmp
xor
test
sub
rcll
adc
loopne
xchg
rcr
xor
ficomps
xchg
repz
ljmp
ss
lcall
xchg
loop,pn
ljmp
nop
imul
mov
cmpsl
xor
andb
ljmp
inc
cmp
jnp
popa
cmp
xchg
ds
pop
pop
ljmp
xor
incb
add
sbb
push
xor
adc
pop
add
fldenv
fs
dec
jo
call
or
add
push
mov
scas
add
sub
loopne
out
pop
sbb
jmp
pop
fists
jae
les
fiadds
jmp
fstpl
sub
fstps
lods
inc
mov
inc
rorb
sahf
add
push
scas
loope
cmpl
jo
sbb
mov
pop
add
pop
pop
add
imul
std
data16
mov
cld
add
or
add
pop
mov
in
mov
incl
jmp
pop
lret
adc
xor
ret
lret
outsl
adc
mov
sldt
cmp
add
mov
jge
mov
adcb
or
add
push
jne
leave
outsl
in
adc
push
push
mov
xor
xchg
inc
push
xchg
inc
xor
fwait
addb
push
fldcw
adc
mov
add
xorl
add
filds
add
mov
enter
jle
je
jg
cmpl
add
testl
pop
clc
push
inc
scas
mov
nop
nop
push
mov
mov
cwtl
nop
push
cltd
cli
fwait
sbb
pop
ljmp
ret
pushf
jp
ljmp
popa
data16
ljmp
je
add
jmp
inc
add
fisttpll
rcll
or
lods
xchg
leave
mov
sub
insb
stos
adcb
and
fidivrl
shll
cmp
test
add
imul
out
imul
out
jle
jecxz
int3
and
mov
test
jbe
dec
sbb
adc
add
add
fsubs
in
push
in
push
mov
cld
in
inc
stos
jbe
pop
arpl
cmp
in
xchg
in
inc
outsl
xor
outsl
lods
sarl
fiaddl
push
arpl
nop
pop
add
sti
pop
pop
andnps
sub
outsl
xor
inc
cltd
add
jbe
xor
and
jmp
out
cs
add
add
cmp
bswap
bound
mov
pop
add
insl
pop
mov
xchg
stos
jg
pop
arpl
sub
std
ljmp
xchg
rorl
mov
lock
insl
movl
test
std
jae
or
push
sbb
addr16
add
mov
jg
jle
pop
mov
fwait
int
ljmp
icebp
jne
push
xchg
jae
roll
push
stc
mov
push
fisttpll
std
jmp
xchg
adc
stc
xchg
std
jmp
inc
xchg
jae
xchg
adcl
xchg
call
pop
test
test
add
push
xchg
mov
mov
mov
or
add
lods
fmull
lds
lcall
call
push
aaa
mov
pop
jmp
std
rcrl
lock
iret
cmp
jmp
call
fwait
sub
push
mov
inc
loope
xchg
rcl
stos
add
push
shl
fcomi
mov
paddd
sbb
int
addb
fcmovnu
mov
cltd
addb
stos
popa
cltd
fwait
add
xor
fisubrl
out
mov
mov
sub
lds
sub
scas
in
popf
ljmp
xlat
mov
mov
jge
jbe
faddp
jmp
fsts
push
jecxz
icebp
pop
sub
bound
mov
cld
add
lods
mov
push
push
sti
cs
lea
push
inc
push
test
enter
push
jne
push
pop
leave
call
push
sub
sbb
mov
xchg
jmp
jmp
pop
add
push
pop
add
push
in
bound
push
arpl
pusha
jbe
roll
xor
or
lds
mov
into
push
mov
dec
cld
out
and
decl
xorl
cli
jmp
pop
jne
insb
push
ljmp
daa
in
test
std
mov
fdivr
add
mov
outsl
mov
jb
pop
or
mov
movl
xor
pop
out
jl
flds
xor
stos
sub
movl
add
mov
cld
cmp
push
cli
cld
push
lds
fcompl
fbstp
jae
int3
ss
cmp
cltd
ret
lea
mov
js
orb
pop
jb
jae
addb
dec
push
inc
nop
push
adc
lods
repnz
dec
psadbw
sub
test
ss
add
mov
add
clc
or
push
jmp
push
push
mov
adc
xor
or
sub
xlat
push
cli
pop
jmp
mov
fimuls
ficomps
push
test
push
jae
stos
mov
mov
sub
sahf
pop
jge
jns
push
mov
outsl
cwtl
pop
cmp
xchg
pop
xor
cmpsl
das
movsl
out
lods
xchg
add
sub
hlt
cmp
ljmp
popf
ljmp
sub
lret
lret
pop
mov
jl
and
jecxz
gs
outsb
roll
repz
dec
mov
mov
fs
xor
into
push
ret
sub
pop
jmp
mov
push
jmp
adc
add
into
in
push
fisttpll
push
lcall
lret
and
das
push
or
inc
or
mov
xor
test
into
push
das
sub
add
fstp
jge
loop
push
add
mov
sti
mov
mov
ret
add
test
and
mov
add
add
xchg
out
mov
add
pushl
sub
rcrl
loop
sub
dec
shll
ljmp
test
insb
mov
jno
rolb
cld
inc
and
mov
push
enter
test
mov
inc
subl
push
shr
fiadds
cmp
scas
xor
arpl
mov
icebp
inc
js
out
out
lret
je
sbbl
sub
or
cmp
or
gs
mov
xchg
jmp
add
test
jb
and
add
repz
add
icebp
nop
pop
and
jmp
mov
push
adc
pop
fnstcw
add
xor
add
pop
jecxz
popf
inc
mov
add
xchg
push
std
sbb
ljmp
or
ljmp
and
adc
mov
jle
xchg
pop
cmc
sub
gs
jp
xchg
sub
xchg
push
es
or
cwtl
shlb
xchg
add
out
jp
push
sub
push
mov
ficomps
cs
addr16
es
add
inc
adc
mulb
clc
push
and
loope
dec
and
jmp
lret
jmp
popa
mov
mov
fdivrp
call
push
pop
xchg
pop
add
mov
faddl
add
and
in
out
mov
xor
mov
and
out
gs
dec
pop
mov
xor
and
ds
xor
or
cld
push
and
icebp
repz
add
adc
clc
ljmp
jbe
add
popf
cli
add
pop
lds
neg
ja
notb
adcb
outsl
in
and
and
xor
add
sub
mov
push
mov
inc
cld
divl
add
std
add
pop
add
mov
mov
inc
cld
cli
sbb
aam
bound
cltd
sbb
je
sub
je
fdivp
pop
faddp
std
imul
mov
add
push
lcall
push
mov
ret
or
je
xor
push
mov
fdivs
adc
inc
jge
add
add
loope
add
xor
dec
adc
xor
test
aad
or
cs
and
repz
lds
hlt
mov
or
cwtl
clc
fisttpl
clc
popa
xor
je
pop
dec
ds
ljmp
add
into
jmp
add
add
mov
xor
outsl
into
jne
stos
add
jmp
ret
pop
pop
sbb
ljmp
jbe
add
mulb
pop
loopne
add
mov
push
lcall
decb
sbbl
jmp
je
ljmp
lods
stos
add
add
push
cld
sbbl
add
es
cltd
pop
dec
mov
popf
stc
gs
add
fisubl
ficompl
adc
cld
imul
ljmp
sbb
cmp
ljmp
rcr
jmp
add
add
fisttpll
cmp
loope
stc
add
loop
add
pusha
sbb
insb
sbb
jl
bound
jne
jmp
pusha
add
jecxz
aaa
add
sub
lds
js
add
sub
sbb
pop
std
je
dec
adc
mov
ds
mov
cmp
adc
inc
pop
add
adc
insb
mov
xchg
gs
mov
out
inc
testl
adc
fadd
je
or
adc
icebp
add
aad
stos
xor
mov
push
aam
adc
fsin
pop
mov
jae
rclb
jno
jp
sub
xor
add
movl
mov
mov
cmp
add
fbstp
cmc
fwait
add
add
add
sbb
add
arpl
add
add
add
mov
add
daa
test
fidivs
call
hlt
adc
js
and
enter
je
mov
inc
add
xor
pop
ljmp
rcr
daa
scas
in
add
pop
inc
lret
ret
mov
add
ljmp
push
xor
xchg
cltd
push
and
dec
pop
std
ja
adc
into
xor
fxch
adc
push
ljmp
pop
ljmp
jns
insb
push
fld1
add
repnz
lahf
push
jg
jmp
idivl
mov
add
loop
clc
or
cmp
out
push
aad
push
add
add
xchg
test
jmp
add
test
fstps
movsl
push
inc
jle
add
lods
and
jo
mov
leave
out
inc
jae
add
popa
push
jne
mov
and
movsl
mov
mov
jmp
out
testb
mov
adc
imul
jb
pop
addb
add
add
push
pop
push
xchg
cmp
fstl
andb
pop
jae
fs
sbb
jbe
or
add
dec
fwait
add
jl
jmp
test
adc
cmp
add
and
decb
pop
jl
mov
cld
mov
sub
dec
xor
add
mov
xchg
push
mov
add
add
xor
add
xor
das
in
aas
adc
cwtl
jo
nop
adc
nop
cltd
roll
fisubs
mov
push
sar
sub
jl
push
aaa
sar
dec
push
imul
adc
jl
into
mov
das
rolb
fcomps
adc
push
test
adc
add
add
jg
or
adc
fiadds
xor
cmp
sti
add
and
int
pop
js
push
xchg
cmp
mov
fcompl
pop
mov
pop
daa
add
sub
lahf
fistps
xchg
in
shll
add
mov
pop
xchg
or
add
cmpl
in
popa
sbb
gs
in
addr16
sahf
ljmp
xor
cmp
sahf
pop
addr16
popl
cmpl
shlb
sub
jmp
sahf
ljmp
adc
stc
loopne
icebp
fstpl
cmc
xor
call
push
fistpl
mov
popa
lcall
iret
ds
aas
add
rcrb
jmp
and
and
test
stc
dec
push
jbe
xchg
adc
loop
add
fs
dec
out
cltd
pop
fucom
lea
sbb
cwtl
mov
je
fstp
rorb
inc
jmp
xchg
sbb
push
fisttpll
inc
loope
scas
push
xchg
in
test
fstpl
sbb
add
inc
add
popa
push
xchg
xor
and
test
and
mov
add
outsb
and
pop
mov
xlat
push
rcll
mov
out
and
dec
or
adc
popa
add
dec
mov
daa
sub
lahf
in
add
shll
in
pop
cld
mov
xchg
clc
clc
sub
adc
add
mov
jne
test
push
jb
xchg
xorl
add
or
add
xchg
add
or
jmp
addr16
adc
inc
add
push
mov
pop
loope
add
add
inc
out
aad
xor
jl
filds
mov
sub
addr16
scas
rolb
js
inc
fimuls
jmp
jge
inc
fidivrs
mov
ret
jmp
sub
jl
ret
incl
fimuls
cmpsl
add
add
sahf
pop
jecxz
xchg
call
shrl
fs
in
add
fidivl
add
pusha
xlat
pop
out
sbb
mov
mov
add
jle
mov
insl
jle
sbb
xchg
insb
outsl
gs
pop
imul
rol
in
jmp
lcall
cmp
int3
dec
mov
add
add
int
add
sbb
push
add
flds
and
add
call
stos
add
into
pop
sub
addl
test
mov
mov
hlt
loop
call
stos
mov
in
test
pop
ficompl
lods
aad
jne
cmp
test
sbb
mov
rcr
test
lret
lahf
cmp
insb
add
or
ret
ret
push
mov
mov
inc
add
mull
push
xor
and
aam
clc
cmp
push
add
aaa
mov
xchg
sti
decl
in
or
push
jo
add
inc
xor
cmp
jo
mov
xor
jno
mov
in
add
pushf
jb
xchg
mov
or
or
imul
out
pop
pusha
sub
add
pop
out
sbbl
std
jmp
xlat
int
xchg
jle
fmul
mov
icebp
or
aas
lea
data16
fdecstp
dec
jns
loope
jge
sbb
in
fisubrs
or
ficomps
jae
ja
adc
sar
fxam
inc
fdivrp
inc
or
mov
xor
nop
jbe
add
push
cmp
aas
fimuls
ret
lods
mov
lahf
pushf
mov
adc
xchg
push
ficomps
xlat
std
jno
sti
shlb
pop
cmp
push
jl
pop
xchg
out
jo
out
test
fwait
testb
cmp
rcr
test
push
and
pop
repz
pop
ljmp
pop
and
add
pop
inc
and
push
sar
loop
xchg
je
pop
jg
push
mov
repnz
adc
pop
mov
fsubrs
add
and
add
in
sbbb
addr16
loop
add
rcrb
cli
xchg
dec
sbb
jge
je
rcl
call
mov
lods
cld
fmull
inc
jmp
fstl
imul
fucom
xor
inc
mov
inc
jmp
mov
inc
jmp
cltd
adc
cmpsb
add
jns
mov
addl
ret
ficoml
rcll
push
popl
in
dec
movsl
mov
sahf
add
test
repnz
aaa
mov
pop
leave
jno
aaa
mov
movsb
dec
sbb
mov
add
jg
inc
add
mov
mov
cli
hlt
insl
inc
pop
push
add
or
insl
inc
testl
insl
inc
or
cmp
les
mov
add
je
add
add
pop
push
push
in
adc
cld
mov
lods
xchg
jo
pop
jne
adc
pop
mov
lds
push
add
loope
or
add
mov
loop
fimuls
inc
fildl
outsl
adc
adc
ljmp
and
scas
fiadds
sbb
sub
push
pop
jo
jno
push
mov
mov
jge
movb
je
pop
shll
rorb
push
or
push
jmp
add
incl
add
add
lret
cld
jno
jae
push
jg
add
push
push
mov
bound
add
sbb
xchg
cmovae
dec
cmp
ljmp
les
lahf
dec
orb
mov
movsb
push
cmpsl
add
ljmp
bound
jo
push
std
fucomip
popf
ljmp
jo
repnz
push
pop
add
std
imul
dec
mov
mov
add
xchg
jo
loop
add
pop
add
popa
xor
jle
inc
ret
dec
adc
and
gs
and
insb
in
pop
push
je
cmp
jmp
pop
push
ss
jle
and
fs
repz
movsl
dec
into
call
add
cld
insl
popf
pusha
test
adc
sbb
in
push
push
lahf
add
scas
addr16
andl
jge
xchg
loop
mov
out
xchg
fiaddl
inc
add
sarb
adc
fnstenv
mov
test
into
fldcw
imul
add
mov
lahf
imul
lock
rclb
rcrb
mov
push
lahf
add
jno
popa
add
test
mov
popw
cld
ret
add
stos
xchg
outsb
mov
jmp
mov
inc
add
add
movsl
add
mov
mov
add
ret
lds
fdivp
pop
add
add
adc
test
add
idiv
call
and
fcomip
jmp
leave
add
add
and
sahf
data16
neg
add
and
decl
shl
mov
dec
call
not
decl
and
call
arpl
and
je
xlat
mov
repz
inc
fiadds
outsb
mov
in
mov
jecxz
mov
add
pop
pop
pusha
add
pop
add
add
fsub
daa
jbe
out
add
or
jle
inc
mov
insl
lods
icebp
cli
rcrb
sti
mov
add
cmp
pop
addr16
pop
testb
dec
cmpl
pop
pop
jno
and
fprem1
dec
insl
or
gs
imul
aad
fstps
loope
add
into
cmc
fsubrs
nopl
pushf
push
ljmp
push
jmp
daa
xchg
outsl
xchg
pop
add
stos
xlat
test
stos
add
fcompl
mov
dec
pop
add
mov
test
aaa
or
push
sub
pop
cmp
pushf
mov
inc
xor
or
cmp
add
add
add
push
sbb
pop
jne
pop
sbb
dec
cmc
xor
inc
dec
dec
repz
mov
cmp
jge
mov
ret
sub
ljmp
ja
ja
rorb
mov
inc
cmp
outsl
aad
ja
push
repz
add
inc
loopne
clc
inc
loopne
clc
add
xchg
adc
pushf
js
cld
push
mov
inc
cld
sub
push
test
push
push
jp
or
je
or
push
or
je
loopne
sbb
add
addb
mov
fimuls
add
inc
into
arpl
sub
mov
inc
ficomps
dec
out
inc
aad
add
or
imul
xor
inc
ficomps
fwait
cmpb
vandps
add
in
xor
lods
mov
mov
ret
ret
shll
push
std
or
rorl
xor
mulb
cld
imul
rcll
imul
pop
and
out
add
int
ljmp
or
imul
dec
stos
pop
sub
sub
ljmp
lcall
popa
loop
stc
insb
push
cmpsl
iret
fs
js
stc
pop
add
pop
mov
jbe
or
adc
pop
xor
adc
add
popf
notb
lods
mov
ljmp
add
stos
add
jno
or
cmp
in
call
inc
or
cmp
or
aam
push
inc
jmp
stos
roll
xchg
cmpb
fstpl
fs
xchg
jmp
fs
ljmp
sub
mov
aam
cld
jmp
add
fst
ret
lcall
pop
cmc
inc
sub
and
jne
inc
mov
add
pop
jmp
push
jb
cmp
les
mov
in
jmp
orl
jne
jl
insb
lahf
fdivrl
xchg
or
jmp
mov
and
add
jmp
add
add
add
xchg
mull
push
push
mov
js
nop
jl
call
inc
xchg
inc
mov
mov
dec
push
pop
mov
fisubrs
ja
idivb
into
lret
jl
outsb
iret
jle
stc
mov
cmc
inc
lods
pop
add
aam
ret
push
into
inc
add
dec
js
pop
sbb
test
add
in
add
fdivp
fldenv
arpl
pop
jbe
pop
add
jo
mov
into
out
adc
add
xor
xor
pop
pop
hlt
idiv
imul
scas
rcrb
fdivp
fldenv
loope
cld
xor
add
in
dec
into
mov
stos
inc
jb
pop
ljmp
lcall
push
pop
ljmp
cltd
adc
add
and
jle
mov
into
fs
xchg
and
jle
mov
into
fs
pop
aam
lods
ret
pop
ljmp
fstps
aam
testb
add
rcrb
inc
sahf
mov
jno
ficomps
fstpt
cmc
mov
sub
add
out
stos
fstpl
setle
bound
add
sub
sbb
push
push
bound
pop
add
clc
idivb
idivb
mov
popf
add
enter
lea
jmp
push
repnz
inc
lds
add
xchg
lea
mov
scas
mov
cli
outsb
imul
add
test
icebp
nop
in
add
fstpl
fsts
add
jmp
push
mov
add
ret
inc
cmpsb
ret
pop
mov
push
pop
outsb
outsl
inc
idivl
or
int3
push
jne
mov
iret
jne
add
xchg
add
orl
roll
push
sub
and
cmp
call
add
or
cld
push
add
pop
pop
jne
scas
and
dec
je
adc
outsb
inc
fdivp
nop
mov
or
mov
nop
pusha
std
xor
inc
pusha
std
add
das
pusha
std
inc
outsl
lock
fsubrp
adc
xchg
pop
aas
pusha
call
arpl
fldenv
sub
mov
mov
pusha
inc
jb
je
jae
pop
add
fisubs
sbb
jg
ss
xor
cltd
dec
ret
mov
js
idiv
push
push
xchg
std
push
pop
sbb
push
push
lcall
cmpsb
mov
lret
lods
insl
mov
mov
in
shlb
sub
adc
push
subb
add
xlat
jae
xchg
add
xchg
imulb
sar
insb
inc
push
cmp
pusha
sub
jo
add
fldcw
in
cltd
fdivl
mov
sahf
mov
mov
aam
jmp
cwtl
sbb
icebp
clc
push
fst
add
jb
add
pop
repz
add
outsl
out
add
and
gs
mov
fldt
add
jmp
bound
cld
add
add
push
pop
sub
pop
push
bound
in
in
pop
add
lret
jmp
bound
cld
incb
jmp
fisubrl
pushf
xchg
fcompl
ljmp
shlb
lea
add
push
leave
xchg
pop
and
add
or
xor
xlat
cld
cli
nop
jge
call
lods
pop
xor
insb
xchg
mov
in
xchg
add
pop
imul
push
in
rcrb
add
or
cmp
push
and
into
xchg
mov
add
or
lds
add
xchg
jmp
add
mov
xadd
loopne
xor
scas
ds
push
mov
pop
jecxz
add
push
scas
push
or
push
push
mov
into
addb
pushl
cmpsl
push
add
sbb
mov
fistl
loope
push
cld
fldenv
xorl
std
add
fiadds
add
sbb
decl
loope
filds
push
add
sar
add
scas
addr16
pop
les
pop
ljmp
cmp
sbb
xchg
sbb
insb
scas
mov
xor
cmp
ljmp
nop
ret
lahf
ljmp
nop
shlb
mov
ljmp
add
inc
insb
add
repz
mov
cmp
push
or
cmpsl
push
pop
rorl
ljmp
mov
nop
popf
ljmp
repnz
add
mov
push
inc
adc
add
fstpl
cmp
jno
bound
push
sbb
and
xor
add
inc
push
and
add
clc
xor
data16
mov
sti
sbb
out
repnz
iret
push
sti
jno
dec
adcl
cmp
xchg
lret
pop
push
bound
in
dec
ficompl
insb
popa
jge
mulb
mov
fs
pop
add
jb
push
jge
add
out
inc
xchg
xchg
out
mov
add
add
cltd
adc
bound
cld
scas
inc
cmpsl
ret
cmpsl
ret
mov
sub
pop
add
mov
push
mov
rorb
or
incl
add
out
cwtl
pushl
cmc
jno
pop
cld
push
xorl
jecxz
cmp
test
push
inc
mov
add
pop
jmp
std
add
mov
and
iret
add
out
push
rcll
jecxz
fcomp
push
add
push
fwait
outsl
fiadds
jl
ljmp
mov
arpl
inc
lret
sub
add
stc
clc
out
cltd
pop
std
les
call
imul
jae
add
roll
xlat
mov
inc
or
sbb
mov
call
pop
andl
add
fiadds
add
test
mov
fcomp
push
add
dec
pop
in
imul
push
les
pop
pop
push
xchg
add
fmull
push
sti
mov
mov
add
fistpll
cltd
ficomps
add
mov
dec
jne
add
push
jg
adc
or
jno
imul
pop
jge
pop
push
test
jecxz
clc
loopne
mov
popf
repnz
loop
movsl
pop
sahf
popf
popf
roll
add
push
add
sub
idiv
shl
lods
add
jb
fistps
gs
push
cmp
cpuid
and
xchg
jnp
add
pop
stos
and
cmc
add
lods
idiv
je
cmp
sbb
lods
add
addr16
mov
jmp
gs
jns
aaa
add
xchg
add
ljmp
or
cmp
add
bound
enter
rolb
inc
xchg
xor
jne
sti
push
sub
and
fucomi
xor
pop
add
add
lods
cld
xor
cld
xor
rclb
and
mov
adc
int
inc
pop
test
jmp
mov
je
cmp
sbb
in
mov
push
sbb
cmp
lea
push
and
cmp
incl
pop
add
fsubrp
jp
fiadds
std
push
and
out
push
pop
std
bound
test
add
add
inc
cli
stos
scas
addr16
cmc
outsl
xor
jp
and
ss
add
jecxz
fidivs
add
call
push
pop
push
fabs
jp
add
push
mov
push
insl
or
bound
add
push
and
or
mulb
add
sub
mov
add
imul
xorl
add
add
sar
lcall
sar
push
mov
movsl
pop
out
lea
xor
fcomi
jge
sub
sub
icebp
leave
pop
outsl
pop
pop
hlt
xor
lret
iret
popf
ljmp
loop
push
pop
nop
lods
mov
xor
xchg
add
pop
xlat
std
dec
out
add
pop
call
jmp
sub
push
fcompl
adc
movsl
pop
ljmp
call
cwtd
and
popf
rorl
sub
sti
fs
aas
xor
fucom
xor
insl
sbb
add
jo
mov
add
adc
cs
lock
fstpl
test
add
pop
cmc
add
test
adc
pop
cld
cld
pop
push
inc
jmp
fiaddl
adc
push
bnd
mov
loope
add
pop
in
negb
push
mov
shll
stc
add
xchg
dec
push
pop
fdivl
mov
roll
cmp
and
mov
add
push
add
ret
xchg
cld
sbb
adc
fiaddl
jmp
scas
mov
dec
mov
js
cld
jg
pop
xor
add
jne
aas
out
and
mov
mov
jb
pmaxub
mov
push
jo
jecxz
sub
pushf
push
insl
popf
add
xchg
mov
add
imul
cmp
std
push
mov
cmpb
or
jl
add
xchg
mov
push
sub
push
add
cs
pop
mov
push
mov
jmp
xchg
and
push
aam
hlt
add
mov
adc
sbb
fcoms
inc
push
and
push
mov
fistps
inc
mov
add
ret
sbb
frstor
add
mov
out
daa
ljmp
mov
test
loop
daa
testb
cmc
or
sbb
xchg
repz
dec
jmp
mov
pop
xor
lock
sub
add
imul
jb
into
loop
pop
ret
pop
ljmp
nop
jmp
add
add
add
cld
pop
stos
fstps
bound
xchg
sbb
add
test
fucompp
fstpl
shl
fldl
jmp
push
in
add
icebp
sti
cld
and
fwait
stc
mov
popf
out
dec
push
mov
adc
pop
popa
test
pop
add
shlb
jbe
lods
xor
push
add
call
push
out
push
xchg
ljmp
js
into
pop
out
sbb
ss
addb
and
movsb
pop
ljmp
lock
pop
ljmp
bound
xor
inc
not
fnstenv
push
push
dec
mov
int3
or
cld
jg
lea
je
xchg
adc
mov
jmp
testb
lret
inc
push
xchg
sub
push
mov
scas
cld
mov
ljmp
xchg
xchg
xchg
in
sti
mov
in
je
xchg
add
ficoms
imul
add
shlb
xchg
push
push
push
adc
inc
sbb
hlt
cld
jmp
idivb
fidivrs
andnps
idiv
stc
add
add
mov
add
out
gs
or
fcomip
dec
idivl
in
mov
cmc
pushl
stos
cmc
aas
push
adc
mov
sbb
div
add
fimuls
inc
mov
pop
frstor
popf
ljmp
popf
ljmp
xchg
pop
pusha
pop
cli
in
mov
add
add
xchg
jnp
in
cld
inc
in
popf
ljmp
pop
ljmp
in
jmp
shl
movsb
dec
fistl
icebp
adc
leave
rorl
aaa
iret
popf
ljmp
pop
ljmp
dec
outsl
aad
cmp
pusha
popa
jmp
inc
adc
pop
int
push
cs
pop
mov
mov
dec
jo
and
jo
push
arpl
gs
and
cmp
ret
jmp
out
xor
fisttpll
movsb
jne
xor
lock
lock
out
out
dec
addr16
pusha
mov
lea
push
inc
jmp
xchg
sti
je
add
jmp
add
mov
adc
test
xlat
cwtl
jo
sub
fists
mov
push
push
lcall
add
or
pop
push
mov
xchg
sub
mov
jne
cltd
jo
frstor
jne
cwtl
adc
adc
cld
pop
dec
mov
ret
xor
push
insb
and
sub
inc
mov
dec
popf
pop
push
sub
add
push
aaa
sub
add
add
push
ds
xor
sub
mov
pop
movb
add
fdivp
adc
jne
inc
inc
cmp
add
pop
push
lds
and
add
hlt
pop
ljmp
call
xor
pushl
xchg
add
fisubs
cld
ror
icebp
aas
fidivrs
mov
cmc
incl
add
cmc
pushl
outsl
cmp
fidivs
call
add
jae
int3
gs
shr
adc
notl
rclb
mov
sub
imul
jmp
mov
jle
pop
jno
negb
add
dec
add
ret
add
out
stos
add
cmpsb
push
test
cmp
sbb
push
imul
fbstp
fcompl
iret
loope
bound
fcompl
iret
push
add
pop
ljmp
push
cmp
in
stos
add
out
imul
jmp
adc
lea
mov
or
jbe
out
scas
pusha
cld
cld
stc
push
inc
jmp
add
pusha
fs
jmp
fcompl
call
push
bound
rol
jo
fstpl
push
jbe
or
pushf
cmp
test
dec
or
lcall
icebp
xchg
adc
push
pop
add
shlb
lcall
jmp
insb
push
push
cs
dec
cld
pushf
pop
adc
push
add
fadds
add
add
xchg
jo
loopne
add
dec
xchg
sbb
or
xchg
jo
call
sti
test
jg
ja
add
les
dec
cli
mov
cld
jbe
pop
pushf
add
jne
and
add
aaa
pop
ss
sbb
mov
out
pop
mov
fs
mov
incl
push
or
add
pop
push
mov
stos
jecxz
fiadds
std
push
shl
sbb
jae
mov
dec
cmp
call
pop
clc
dec
jbe
or
cmp
hlt
push
push
pop
pop
pop
out
stos
sar
fidivs
in
mov
xor
addr16
cmc
cmp
cld
or
cmpsl
pop
pop
mov
incl
add
mov
jnp
fdivp
cmp
hlt
push
je
mov
push
pop
pushf
add
hlt
clc
orl
lcall
pop
mov
ficomps
cmp
repnz
in
repz
pop
mov
int
test
xchg
adc
in
pop
dec
and
ficomps
jle
in
inc
push
fwait
out
dec
push
cmp
add
pop
push
es
clc
arpl
add
push
push
ds
jecxz
and
in
dec
shll
xorl
push
out
jmp
addl
dec
add
pop
jecxz
push
inc
ficomps
fdivp
mov
sti
in
mov
pop
hlt
add
loop
jmp
jecxz
jo
jecxz
jmp
fnsave
jb
pop
mov
loop
or
shl
sti
mov
add
ljmp
fstpl
sbb
pop
add
pusha
sbb
add
fstl
aad
loop
bound
loopne
cmpsb
cwtl
loop
loop
push
xchg
push
inc
cld
cld
and
jecxz
jbe
aad
push
adcl
in
mov
add
push
mov
je
xchg
inc
or
adc
mov
add
push
incl
rcrl
add
xor
idiv
js
pop
mov
loope
incl
and
sbb
jmp
mov
ror
jmp
cltd
test
gs
adc
orb
mov
orb
cmp
test
add
cli
add
fisubrs
out
pop
adc
jb
fsin
hlt
repnz
shl
stc
push
mov
js
mov
addl
insl
movsb
jmp
fsts
sub
fsin
mov
dec
rcrl
cli
push
dec
clc
js
xchg
addl
jge
out
xchg
pop
or
clc
fsin
test
dec
ror
notl
js
inc
ljmp
dec
fs
incb
jb
add
ss
popl
fcomip
ljmp
sub
decl
pop
pop
stos
dec
popa
pusha
outsb
addb
fisttpl
test
mov
int
test
mov
add
popf
mov
inc
sbb
cltd
and
jmp
repz
cld
pop
iret
popf
ljmp
loop
dec
pop
loope
push
xor
enter
xchg
in
cmp
roll
insl
push
lods
imul
push
add
aam
sub
out
inc
sbb
ljmp
add
add
jne
inc
jmp
push
jecxz
jecxz
add
mov
in
sub
mov
sbb
fistpl
jmp
pop
fs
pop
pop
add
fnsave
ficoml
notb
add
sbb
fstpl
movsb
add
mov
cld
cld
lds
jmp
data16
jmp
in
stos
inc
in
lcall
mov
insb
and
or
jmp
lret
push
mov
pop
inc
mov
out
rolb
stc
mov
cltd
out
lock
or
add
add
xchg
je
mov
mov
add
sbb
repz
scas
push
jne
je
mov
mov
add
loopne
repz
jae
decl
pop
mov
fcomip
clc
incl
cmpsl
or
add
imul
xor
movsl
push
push
call
hlt
jmp
repnz
ljmp
inc
cmp
cld
add
xchg
fmuls
std
or
fsubrp
adc
or
add
hlt
cmpsl
add
hlt
call
out
mov
arpl
fdivp
cmpsl
add
hlt
cld
xor
inc
jae
jnp
call
nop
mov
decl
xchg
add
add
hlt
inc
jae
jno
cmpsl
push
or
xchg
push
pop
inc
cmc
add
fwait
in
incl
ficomps
mov
jae
cmc
jns
mov
push
movsb
jmp
sbb
cmpsb
test
or
mov
push
fcompl
inc
loope
push
decb
add
dec
ljmp
popa
mov
inc
lret
loop
mov
call
ljmp
pop
jecxz
pop
pop
jmp
adc
sahf
es
add
mov
shl
mov
and
pop
ljmp
mov
addl
or
xchg
popa
sbb
fdivr
jmp
dec
out
jmp
fstpl
xor
mov
sub
stc
outsb
pop
imul
in
sub
sti
insl
sbb
mov
aas
jmp
add
push
sub
call
shll
in
jmp
fstpl
sub
addb
gs
inc
jmp
mov
xchg
inc
and
int3
mov
cmp
bnd
push
icebp
rcr
mov
pop
imul
push
fs
xor
inc
divl
outsl
fwait
adc
repz
sti
cmp
call
mov
xlat
hlt
and
fnstsw
pop
jmp
cmp
add
push
mov
incb
adc
inc
xchg
pop
nop
push
sti
cmp
push
incl
lcall
test
test
dec
movsb
cmp
pop
sbb
int3
adc
add
mov
shrl
fwait
adc
les
fnstsw
dec
notb
std
add
je
dec
adc
int3
add
mov
push
lea
insl
orb
pushl
dec
jo
ffreep
incl
mov
lds
dec
push
adc
lea
insb
cmc
mov
fdivs
sahf
pop
xchg
inc
addr16
adc
or
add
iret
sbb
out
add
xchg
addr16
psraw
mov
push
ljmp
ficompl
bound
es
fucomp
add
pop
jno
in
cld
pop
mov
pop
ljmp
pop
mov
aam
push
push
sbb
push
push
sbb
push
push
sbb
pop
iret
sbb
adc
add
mov
cmp
push
push
and
int
fidivl
fidivl
das
cld
hlt
or
push
rorl
pop
pop
cwtl
insl
add
lret
outsl
popa
push
cmpsb
outsl
jno
adc
fidivl
aam
or
fstpl
roll
fiaddl
sub
pop
push
jb
das
mov
add
in
cld
aam
fidivl
add
adc
fs
ss
popa
adc
mov
in
ret
add
push
ret
mov
jecxz
push
popa
add
mov
cmp
or
subb
call
test
and
adcl
inc
push
out
or
fisttps
add
mov
out
adc
xlat
dec
popf
xlat
and
popf
repz
pushf
idiv
and
mov
jl
ret
popa
add
push
lods
push
call
mov
xchg
sub
xor
decl
pop
jecxz
add
dec
pop
or
fmulp
jno
shr
inc
data16
xchg
add
fmul
jno
rorl
mov
inc
mov
xor
cmp
dec
cwtl
add
push
mov
mov
sub
adc
or
subl
xchg
inc
jl
repz
cmp
or
jmp
aaa
or
repz
call
push
or
sahf
jnp
fistps
add
sbb
les
mov
sub
fsubp
mov
addr16
mov
add
sti
cmp
sub
mov
sahf
push
out
push
loop
and
pop
inc
push
cmpsl
rorl
push
push
and
or
jmp
xor
call
subb
sub
add
fcomip
lock
add
xchg
call
pop
shll
push
xchg
popa
dec
rol
lods
add
add
cmc
sub
add
test
inc
cmc
cmc
pop
lret
call
push
add
mov
push
je
lret
mov
mov
xchg
cmp
sub
jecxz
mov
call
sti
sbb
inc
push
bound
lcall
rclb
sbbl
pop
or
dec
imul
sbb
add
pop
addb
cld
lds
loop
test
pop
push
or
mov
mov
rcrb
rcrb
leave
cmc
popa
add
xchg
adc
mov
add
in
mov
repnz
rorb
cld
imul
jecxz
mov
mov
pop
and
fstp
jne
add
mov
add
xor
dec
and
scas
lds
add
mov
incl
pusha
add
fimuls
and
sub
dec
ffreep
xchg
push
mov
add
xchg
stos
push
mov
lahf
aas
decl
addr16
adc
sahf
incb
jp
and
lds
sub
add
add
decl
xchg
loope
push
jno
incb
fdivr
xor
call
push
jns
pop
imul
sbb
ljmp
aas
inc
call
gs
jnp
imul
push
fildl
insl
jae
sub
lret
int3
inc
pop
ljmp
jp
sub
mov
push
add
add
cwtl
rcrb
mov
jno
add
pop
ljmp
arpl
scas
mov
pop
ljmp
dec
push
adc
mov
add
xor
push
mov
adc
cmp
fst
mov
movb
jle
add
out
clc
add
insl
addr16
add
and
popa
xor
add
add
fucom
lock
jns
adc
jb
jge
xchg
add
fld
mov
inc
add
lds
aad
fadds
fdivs
add
lea
mov
lds
call
mov
cld
out
fcmovb
push
jmp
jmp
lds
pop
mov
shll
ljmp
jo
jge
sahf
push
jge
add
add
dec
add
mov
cmp
pop
add
aaa
pop
adcb
std
sti
decl
pop
adc
sbb
test
pop
add
pop
add
xchg
hlt
and
pop
push
lea
sbb
outsl
nop
cld
decl
pop
adc
sub
test
adc
jp
ja
sub
inc
lods
cli
dec
sub
shrb
add
fstl
psllw
inc
lods
dec
sub
mov
pop
jg
fdivp
add
aad
push
add
shll
inc
cmp
jmp
push
pop
cs
addr16
or
sub
je,pn
aam
cltd
sub
decl
or
jp
add
inc
mov
jns
dec
push
int
stos
cmp
add
ret
mov
or
testb
push
rolb
ret
mov
decb
cmp
add
mov
pop
or
mov
mov
stos
loop
or
pop
loop
sub
test
xlat
adc
ficomps
in
sbb
jp
and
in
sub
add
adc
jmp
push
pop
idivl
cmp
sahf
sub
adc
imul
loop
cmc
xchg
aaa
mov
scas
push
pop
ljmp
arpl
jmp
in
push
into
mov
add
sub
je
dec
push
rcll
add
ja
ret
loope
xlat
jne
jne
sti
sahf
dec
jecxz
imul
rclb
add
mov
je
or
in
clc
popf
int
cmpsb
loope
rcr
aaa
or
leave
jae
jmp
sub
push
add
test
call
pop
cld
jo
popa
das
sub
in
push
fnsave
mov
xor
clc
add
out
mov
jge
test
add
adc
mov
push
call
rorl
jmp
out
xor
jecxz
push
push
lea
jp
lea
std
ljmp
mov
aaa
lock
repz
add
xchg
adcb
mov
shlb
mov
popa
and
or
icebp
jmp
dec
ss
fcoms
call
iret
mov
add
add
mov
mov
aaa
and
pop
mov
into
push
gs
push
in
dec
xor
jnp
mov
add
fdiv
jbe
cmp
ret
mov
sub
or
pop
fiadds
je
jl
jl
sub
pop
jne
sbb
pop
insl
or
in
lds
sbb
insb
mov
addl
sahf
jmp
in
cs
inc
mov
mov
shl
call
mov
pop
xor
std
pop
aaa
jg
xor
inc
dec
pop
ljmp
and
call
adc
xor
xchg
jl
pop
ljmp
pop
push
enter
aad
mov
arpl
pop
sbb
sbb
add
or
add
fisubrs
mov
daa
adc
xlat
push
add
pop
ljmp
sub
mov
ret
jnp
movsl
out
loopne
sub
pusha
inc
adc
lret
cmc
hlt
loope
add
shl
dec
add
fst
inc
or
outsb
lret
imul
sbb
xor
cmpsb
mov
add
fcomip
sbb
inc
jmp
mov
mov
leave
cmp
fcompl
dec
add
ret
movsl
mov
lret
sub
bound
lret
pop
rorb
insl
in
enter
xchg
stos
jmp
pop
cmp
push
je
pop
mov
dec
mov
jo
lcall
add
add
test
mov
movb
incl
pop
add
leave
addb
jl
insl
mov
jle
lret
lds
inc
sbb
inc
inc
stos
mov
lods
jae
add
sahf
pop
xor
jne
ret
jae
test
or
adc
mov
and
mov
cli
jnp
lds
fcompl
repz
mov
cli
jmp
jp
add
sbb
mov
popf
ljmp
jbe
push
inc
gs
ljmp
push
call
sub
add
and
imul
add
jmp
rcr
sbb
call
daa
jae
add
fsubrl
push
xor
add
sahf
or
sub
call
faddp
mov
in
in
in
sbb
popf
mov
xchg
imul
sti
push
pop
push
into
out
cmp
dec
add
mov
pop
xchg
fwait
in
add
xor
adc
add
fs
xchg
push
inc
or
pop
sbb
adc
add
cmpsb
jg
push
sti
xor
pop
sti
add
loop
out
sbb
adc
add
mov
mov
push
mov
loop
cli
pop
ljmp
push
jmp
fstpl
lock
neg
pop
add
addb
data16
jmp
pop
mov
fstpl
fs
adc
lret
sbb
jmp
js
subb
add
dec
pop
push
fcompl
or
pop
mov
neg
cmp
pop
or
or
xor
fsubrs
mov
pop
or
cmp
sub
add
popa
add
cmp
jae
pop
push
fcoms
adc
mov
mov
jno
cmc
fcomp
sbb
ror
clc
xorl
jmp
xor
add
inc
popa
arpl
cmc
repz
dec
pop
add
mov
loope
dec
daa
popa
add
aaa
loopne
cld
pop
inc
jnp
jle
orb
mov
add
fdivs
inc
inc
push
or
loop
pop
add
xor
ror
mov
dec
adc
add
cmovo
dec
mov
loope
mov
sbb
addl
add
or
add
into
mov
add
aas
ret
cld
or
push
cmp
fidivl
out
test
out
dec
out
jnp
fidivs
out
shll
sbb
fidivs
jnp
fidivs
add
or
fidivrs
mov
fldl
ds
add
pop
insl
data16
testb
mov
imul
xchg
scas
fildl
jge
pop
int3
ljmp
ljmp
mov
jge
outsb
filds
jns
ficomps
outsb
or
push
xlat
jge
ds
jbe
inc
xlat
mov
sub
pop
cli
add
push
sub
sub
orps
add
cmpsb
fs
mov
sbb
add
sbb
add
cli
dec
out
sar
inc
and
fimuls
add
fwait
pop
jo
push
pop
adc
push
loope
push
or
jb
lret
lea
or
push
pop
aas
push
jbe
sbb
mov
cmp
out
fstpl
and
test
push
ret
fld
xchg
shlb
addr16
in
sbb
pop
inc
and
add
add
pop
add
fmull
mov
mov
ret
in
aam
in
push
nop
jae
sbb
push
add
sub
sbb
add
pop
idivb
jns
pushl
pop
popf
pop
ret
aam
pop
ret
cmp
add
inc
lods
call
ret
cli
xorl
fwait
or
xchg
mov
add
sbb
or
daa
inc
inc
rcrb
cmp
hlt
inc
cmp
mov
dec
test
inc
pop
jb
mov
pop
add
sub
jne
dec
fwait
or
negl
je
scas
mov
fidivrl
inc
je
stos
scas
jae
mov
inc
scas
pop
inc
mov
iret
mov
push
cmpsl
fimull
sub
xor
mov
add
popf
or
push
sub
push
loope
orl
push
sbb
fnsave
jmp
adc
gs
mov
scas
mov
xor
je
arpl
call
lahf
mov
mov
and
mov
cmpsb
add
pop
pop
cwtl
jmp
add
add
pop
jg
rorb
pop
ficomps
push
or
sub
sahf
sub
add
pop
mov
pop
ljmp
pop
inc
mov
xchg
fnstcw
adc
jmp
pop
arpl
sub
test
jmp
add
jne
ret
sub
test
test
add
aam
sarl
add
fst
clc
roll
sti
cmpsb
data16
je
xor
mov
rclb
pop
andl
rcr
shr
inc
cld
orl
ficoml
pop
add
repnz
mov
lret
jmp
cs
push
cwtl
out
push
stc
adc
xor
xor
pop
and
fwait
aam
adc
add
sub
lcall
icebp
jo
movb
pop
pop
add
leave
sti
push
pop
push
test
add
orb
add
jmp
mov
pop
pop
jle
idivb
popa
add
decl
ret
movaps
decl
in
je
ljmp
imul
shr
jb
add
lock
clc
add
stc
je
test
jecxz
je
ljmp
jp
add
ljmp
mov
aas
call
arpl
cltd
or
mov
aaa
xchg
cli
mov
cmc
pushf
xchg
inc
sar
loope
or
mov
call
cmp
sbb
shlb
jmp
add
fdiv
aas
pop
adc
cmp
rorb
decl
lock
rcll
sub
mov
push
sti
jno
mov
repnz
mov
ljmp
mov
mov
jle
ljmp
call
testl
jmp
sub
push
pop
pop
testl
add
call
aaa
mov
xor
mov
mov
les
fisubrl
out
xor
add
bound
xor
and
in
dec
push
addr16
jo
std
and
push
gs
ljmp
inc
jbe
push
push
pop
loop
push
pop
js
call
sbbb
and
imul
add
popa
mov
jmp
fidivrs
or
fistpl
faddp
cmp
adc
aam
dec
inc
jmp
lcall
adcl
imul
jmp
lret
push
sti
mov
adc
mov
fnsave
pop
bound
out
icebp
add
push
push
stc
add
leave
lea
mov
mov
in
cld
push
xchg
or
ja
sbb
mov
jmp
add
in
cld
das
jnp
pushl
in
clc
jle
mov
je
sti
push
jnp
add
fidivrs
clc
mov
arpl
fs
fiaddl
add
cmpsb
or
add
add
mov
xchg
ja
add
sub
pop
mull
push
pop
push
sbb
adc
or
mov
sub
or
pop
add
sbb
lods
rcll
inc
decl
sbb
scas
add
inc
inc
or
add
sub
sti
test
std
loope
xchg
pop
pop
add
xchg
add
roll
sbbl
cmc
inc
inc
pop
std
test
add
ficomps
scas
imul
push
add
push
pop
xor
jae
mov
jbe
and
arpl
outsb
sbb
pop
xchg
fld
sbb
ljmp
add
mov
xchg
add
pop
ljmp
add
loop
call
add
icebp
push
jmp
outsb
cmp
dec
lahf
sbb
jecxz
mov
fs
mov
ficomps
sbb
loope
add
pop
pop
dec
push
mov
pop
jg
outsb
push
ficomps
orb
add
dec
pop
pop
bound
fsubr
icebp
push
and
je
and
sbb
jb
add
stos
or
fnstsw
mov
jg
jmp
ljmp
cld
out
pop
add
loop
xchg
push
mov
mov
mov
add
jb
bound
sub
scas
push
cld
mov
mov
add
adc
ret
sti
mov
jo
cld
mov
or
add
inc
pop
sub
jmp
addb
decb
out
add
push
xchg
inc
mov
cld
cmp
ret
popa
add
sbb
jae
popa
mov
je
pop
add
stos
ja
ljmp
imul
icebp
push
push
pop
pop
aas
add
call
mov
sti
xchg
xor
jg
ret
jae
inc
shl
invd
add
or
decl
pop
xchg
ffreep
mov
lret
and
aas
fiadds
std
lret
out
ss
jmp
idivl
xor
inc
outsl
and
pop
add
mov
je
inc
inc
adc
inc
push
sub
ljmp
mov
and
xchg
add
add
add
std
add
fcmovb
nop
add
idivl
ret
ljmp
adc
inc
mov
pop
push
mov
push
mov
jg
pop
ljmp
flds
mov
fs
pop
ljmp
mov
mov
gs
xchg
sub
add
out
fstpl
add
pop
lcall
aaa
sub
stos
mov
or
pop
push
jmp
nop
leave
sub
stos
mov
das
out
sub
lds
hlt
aam
jne
jo
mov
sub
jmp
gs
pop
mov
xor
imul
add
or
add
lock
test
jo
mov
fimull
hlt
pop
jmp
sbb
lahf
add
xor
in
push
mov
int
pop
add
pusha
pop
and
jmp
scas
repnz
add
outsl
add
push
ljmp
dec
add
pop
cmpb
jo
add
add
add
stos
pop
jne
xchg
and
shrb
xor
aaa
in
pop
mov
add
jnp
jmp
ret
dec
mov
rorl
add
xor
je
in
and
in
call
sub
xor
xor
jp
in
jecxz
add
aam
push
xor
xor
push
aas
pop
fisubrs
daa
test
add
xor
jmp
test
iret
push
fbstp
push
adc
inc
ficoms
mov
lods
insl
sub
incl
faddp
decl
push
testl
std
cmp
mov
add
lcall
sbb
fisubs
jno
addr16
fistpll
add
mov
mov
jb
loop
popf
lods
out
enter
adc
jo
int
sub
shlb
adc
jecxz
or
jecxz
adc
jecxz
xor
fldcw
cltd
les
mov
out
sti
mov
mov
adc
loop
mov
cltd
push
loop
sti
cmp
pop
add
popf
dec
iret
dec
add
mov
outsl
rcr
icebp
jle
popa
scas
sbb
jg
add
sub
sbb
sub
call
lds
mov
fucom
inc
mov
adc
sbb
xor
ret
mov
xor
sbb
sub
pop
outsl
out
out
jmp
push
mov
add
add
stc
fs
add
pop
call
fstpl
in
and
and
mov
call
popa
push
add
fucom
inc
in
insl
or
aas
scas
sti
pop
cmpsl
call
mov
pop
add
sub
or
adc
xchg
repz
inc
sbb
in
pop
imul
push
cmp
add
pop
mov
jmp
add
push
xor
sub
leave
lahf
jp
inc
xchg
jo
ss
into
shlb
rclb
incl
dec
mov
push
rolb
lea
push
cld
incl
je
jae
mov
rcr
ja
stc
adc
jmp
add
cld
push
out
pop
leave
adc
mov
and
jno
in
gs
add
push
add
fiadds
fdivs
push
into
rorb
stos
aam
int
mov
lahf
in
mov
mov
call
or
in
test
out
mov
pushl
call
mov
mov
xchg
add
xor
jle
stc
rorl
xor
add
and
subl
sub
mov
pop
ljmp
mov
out
lods
int
jecxz
aaa
add
pop
outsl
shrl
ljmp
mov
ljmp
lcall
xor
shll
add
add
loope
cwtl
fcoms
fisubs
sbb
gs
jnp
gs
add
mov
sti
out
in
shrb
mov
sbb
and
sbb
scas
inc
xchg
xchg
in
icebp
inc
pop
in
pusha
outsb
mov
scas
scas
loop
test
xchg
inc
fnsave
cld
faddl
add
test
icebp
shrb
icebp
mov
loopne
fadds
arpl
push
mov
call
in
cmp
add
inc
jle
inc
pop
xchg
cmp
leave
cmc
stos
sti
push
jl
jl
cmp
add
repz
lea
idiv
adc
incl
and
testb
and
mov
push
pushl
jecxz
std
sbbb
add
outsl
sub
shll
test
sub
subl
punpckldq
ja
jle
xchg
mov
push
mov
cmpl
adc
js
dec
push
jne
fimuls
inc
dec
test
mov
pop
add
decl
fsubrl
mov
mov
or
pop
or
xchg
add
fbstp
add
jns
add
mov
inc
xor
neg
inc
outsb
addb
or
cmpsl
loop
fidivs
std
sbb
incl
mov
out
mov
dec
fidivs
sbb
ss
push
push
cli
pop
call
gs
movsl
pop
and
sbb
sahf
ljmp
add
adc
push
sbb
add
jl
stc
sub
sarl
fisttpl
sti
or
ret
pop
ljmp
je
cmp
ficomps
add
and
jge
add
pop
js
movsb
fisubrl
test
mov
jnp
add
fucomp
or
xor
fwait
roll
xor
add
popf
dec
add
fstpl
xchg
sub
lock
xor
sbb
sub
jmp
jb
je
ret
fs
lods
push
out
outsb
pusha
push
sar
mov
cmc
jge
pop
add
test
sti
jmp
ficompl
sub
pop
jbe
arpl
inc
call
aam
xchg
add
aam
sti
jle
scas
call
imul
inc
in
pop
sahf
je
sbbl
mov
push
pop
pop
jl
mov
in
mov
xor
aaa
pop
push
push
dec
bound
inc
sub
push
gs
jmp
inc
pop
cltd
les
andl
add
enter
out
push
shrd
add
out
jecxz
andnps
push
add
dec
xlat
shll
jle
or
enter
pop
mov
out
js
cs
call
pop
repnz
lret
insb
sbb
push
push
xchg
or
fidivs
repz
push
decl
inc
je
sub
in
je
out
loope
popf
mov
or
icebp
aas
add
pop
lods
xlat
jno
pop
hlt
push
scas
or
jmp
pop
add
imul
shr
scas
mov
repz
mov
ljmp
cmpsl
jno
incl
sub
pop
rcrb
cld
or
sbb
xlat
call
inc
or
cmpsb
push
add
or
popf
pop
cmp
inc
mov
add
push
jg
sub
ret
cmp
jmp
fbld
ljmp
fldcw
add
in
popf
loopne
pop
ljmp
pop
ljmp
sahf
shl
cmp
inc
inc
ds
in
sub
js
jns
mov
pop
add
repnz
out
add
fldenv
fucomip
fstpl
xor
add
inc
loope
test
in
shrb
inc
int
adc
add
movsb
sti
push
pop
jns
jmp
fstpl
mov
loop
add
adcb
pop
mov
add
fs
sti
pop
sahf
jne
push
sbb
shll
cmpsb
add
bound
and
add
popa
inc
and
pop
testb
add
jne
cmp
add
lods
sti
rcrb
jae
movl
mov
loop
adc
lds
call
mov
pop
adc
pop
add
lea
add
neg
jl
hlt
pop
jne
add
insb
pusha
ljmp
je
add
dec
jbe
inc
mov
adc
movsl
sahf
sti
cmp
mov
fidivs
add
out
sub
add
hlt
movsl
pop
and
mov
add
jo
jmp
xchg
and
fildl
or
jmp
dec
mov
call
or
or
add
arpl
add
je
call
fidivl
clc
pop
mov
mov
xchg
lods
js
loop
or
push
je
xorl
xchg
lds
and
mov
movsb
sbb
popa
or
pop
pop
add
cmp
mov
pop
or
mov
shl
aaa
jno
mov
add
pop
push
push
pop
ljmp
push
insw
fcompl
mov
jmp
add
aam
js
push
xlat
add
cmpsl
ret
add
aam
add
pop
add
pop
ljmp
push
data16
pop
ljmp
mov
jmp
sbb
inc
loope
je
aad
add
call
add
popa
sbb
call
pusha
test
out
jb
call
int
and
fstpl
push
fsubrl
pop
push
mov
and
fnsave
pop
icebp
inc
dec
call
int
add
adc
sub
pop
je
pop
test
jbe
andl
pop
jmp
lcall
jecxz
add
sub
call
dec
mov
pushl
ja
inc
xchg
adc
inc
pop
push
repz
add
adc
sub
or
jg
iret
pop
add
ja
imul
xlat
xchg
add
add
add
pop
add
stos
ret
sti
incl
pop
add
add
or
adc
sbb
aas
and
cmpsl
jg
ret
or
in
add
fiadds
jns
push
fucom
dec
mov
clc
mov
pop
xchg
add
mov
push
adc
push
mov
mov
mov
mov
add
inc
push
mov
mov
mov
pop
mov
inc
mov
pop
mov
add
jo
cmp
mov
push
mov
call
and
lock
out
push
mov
xchg
add
inc
pop
fldl
fsubrs
ja
push
cmp
int
hlt
inc
ficoms
ljmp
sub
sbb
jmp
daa
jle
ljmp
popf
insb
ret
or
pop
ljmp
mov
ficomps
in
iret
sbb
frstor
cli
pushf
xor
popf
inc
repz
push
sbb
adc
add
jae
push
sahf
pop
mov
mov
or
xorb
fstp
jl
out
pushf
je
and
fistpl
je
inc
add
popf
push
bound
jmp
or
inc
add
push
jp
and
add
push
and
iret
pop
pop
les
pop
pop
les
pop
pop
les
pop
pop
les
sbb
les
pushf
pop
les
pushf
pop
jmp
ret
loop
test
xor
xchg
add
ljmp
je
mov
jnp
adc
test
cli
incl
add
adc
sbb
fsubrp
pusha
add
dec
rcrl
push
ret
push
mov
out
mov
add
xor
xchg
push
out
jle
popa
pushf
cld
push
outsl
add
add
push
add
and
push
add
hlt
lcall
xchg
xchg
cld
jmp
pop
sub
add
or
add
fwait
jo
cld
sbb
xchg
xchg
fisubs
std
sub
shlb
dec
hlt
repz
cld
cmc
inc
insl
xor
inc
add
sbbb
add
rcr
and
xabort
ljmp
mov
or
lods
test
fstps
xchg
adc
jno
mov
ja
out
aas
pop
mov
call
push
sbb
jp
pop
cld
jmp
lcall
fidivs
adc
lcall
std
or
cli
mov
int3
repnz
push
pop
and
add
loop
inc
pop
ljmp
jle
add
xchg
jbe
out
stc
mov
fstl
add
xchg
push
jmp
mov
sbb
sahf
xchg
jle
cltd
outsb
jle
push
and
aam
ja
pop
add
popa
pop
bound
xor
sub
loope
call
nop
cltd
add
arpl
jmp
stc
cmpb
fcompl
stc
cltd
fdiv
mulb
add
sub
fucomp
in
add
out
rcrl
loop
out
and
jmp
movsb
add
popa
pop
xchg
int3
mov
adc
jmp
xchg
inc
addr16
das
call
cmp
incb
sti
incl
mov
lahf
adc
mov
incl
jmp
jmp
addl
pop
jle
je
or
add
out
test
pop
xor
cmp
cmc
mov
pop
mov
call
test
add
add
xchg
cld
decl
sbb
call
add
mov
xchg
mov
pop
nop
mov
fiadds
xor
test
mov
mov
cmc
xor
add
inc
nop
js
xor
js
in
pop
test
aas
idiv
add
outsb
pop
mov
push
push
push
push
scas
jl
icebp
sti
pop
or
out
arpl
idiv
rcrl
mov
fidivrs
sbb
push
cltd
idiv
adc
inc
push
mov
mov
cld
add
in
pop
mov
scas
test
loop
add
push
xchg
push
jne
test
xor
xchg
inc
jne
test
jmp
dec
jmp
ret
mov
daa
add
test
xor
xchg
decb
mov
mov
call
outsl
mulb
and
pop
sahf
pop
add
xchg
mov
pop
sbb
add
int3
cmp
insb
rcrb
dec
add
pop
add
add
jbe
fsqrt
sbb
fsubrl
outsl
inc
jmp
frstor
jb
pop
add
adc
test
out
pop
call
fstpl
xchg
jecxz
mov
pop
mov
push
cmp
insb
sbb
int
pop
add
mov
add
test
sti
out
aam
gs
xchg
sti
jmp
mov
aas
call
inc
pusha
mov
fucom
jo
xchg
call
add
xor
mov
xchg
mov
dec
sahf
add
dec
call
int3
es
mov
pusha
push
push
lahf
pop
inc
add
push
push
mov
inc
aaa
push
and
push
test
add
add
cld
incl
push
test
aam
push
or
outsl
xor
adc
dec
lahf
outsl
or
call
repz
jnp
xchg
aaa
jmp
mov
cld
je
outsb
push
andl
loope
add
int
out
lret
imul
xor
add
filds
or
add
jae
fmulp
pop
sbbl
or
push
mov
fsubrp
jmp
test
fidivrs
incl
mov
js
filds
das
filds
das
filds
add
popf
jmp
add
in
popw
pop
jmp
fldl2e
fmuls
add
mov
mov
test
xor
adc
ljmp
xchg
cld
mov
fcompl
rcr
into
cmc
cmp
mov
inc
mov
sub
pop
pop
ljmp
pop
ljmp
sub
mov
popa
pusha
aam
adc
adc
mov
outsb
or
mov
add
gs
flds
dec
fstpl
xchg
adc
popf
bound
out
cmp
or
sti
jmp
xchg
idivl
fisubs
jnp
lret
xchg
in
pop
push
xchg
sti
inc
and
jmp
popa
dec
repnz
cs
inc
cs
add
data16
insb
cltd
dec
add
xor
bound
add
jns
mov
push
and
movsl
jmp
sti
out
inc
push
sub
test
test
mov
pop
add
fsub
add
pop
and
sub
pop
mov
lods
jbe
mov
paddsb
rolb
imul
mov
arpl
jne
cmova
int3
cwtl
sub
xor
cmp
and
push
ret
incl
add
pop
add
sbb
call
mov
or
add
jne
adc
clc
iret
cld
sub
adc
and
js
and
or
out
cld
push
xor
jne
adc
test
cld
sub
pop
jmp
fsubrp
xor
addl
pop
add
sbbb
add
or
add
add
add
push
scas
lods
fsubl
imul
add
cli
push
ss
lcall
add
sti
cld
xchg
adc
mov
incl
imul
call
cmp
mov
push
andl
movaps
fcompl
lods
jmp
js
add
imul
js
jmp
add
cmp
sub
popf
push
xor
daa
pop
mov
ljmp
mov
add
push
or
xchg
lods
daa
rcrl
out
mov
mov
data16
mov
jl
cmp
fsubrl
aas
jmp
jo
cmp
test
ficompl
bound
add
testl
fstpl
and
cmp
sti
jb
push
mov
mov
aas
call
mov
push
vmovq
xchg
out
aas
call
push
vmovq
xor
loope
fst
mov
out
mov
sti
jb
clc
push
adc
jmp
add
nop
xor
call
fst
lock
xchg
xor
pop
or
add
xor
test
cmp
pusha
mov
xor
mov
js
xlat
fisubrs
mov
mov
sub
add
mov
inc
jl
add
adc
ljmp
sub
push
push
iret
popa
add
xchg
decl
ljmp
add
iret
adc
and
inc
pusha
je
xor
add
pop
mov
je
gs
add
and
jae
and
pop
inc
iret
fidivs
pop
test
ljmp
mov
sub
jmp
fcomps
cmpb
or
cld
mov
aam
lds
mov
xlat
or
add
push
xchg
mov
mov
fldt
mov
pop
mov
in
call
inc
mov
xor
lret
push
push
shr
adc
test
add
jns
sbb
sti
and
out
mov
xchg
cmp
xchg
adc
xor
push
incl
scas
popf
mov
pop
addr16
fists
clc
dec
jg
mov
add
out
shr
mov
jg
scas
and
xchg
test
in
fs
out
mov
lcall
mov
sbb
xchg
jl
pop
sub
push
and
dec
cld
fistps
jle
test
sub
sti
ds
nop
xlat
clc
sub
mov
daa
aas
mov
xor
das
mov
add
pop
jbe
mov
pushaw
push
jo
xchg
lea
push
mov
add
das
mov
mov
popa
leave
or
sti
jmp
sbbb
sbb
cmc
test
sbb
xor
cmp
fadd
fisubs
add
fst
inc
adc
das
addr16
cmpsl
imul
fstp
rolb
adc
add
fwait
xor
popa
pushl
fisttpl
sbb
mov
push
xor
incl
daa
add
test
loop
je
add
ret
decl
or
movsb
pushf
arpl
or
add
sbb
jmp
inc
jne
inc
dec
loopne
inc
mov
adc
push
lock
push
cmc
mov
add
push
fisubrs
inc
ss
dec
xor
idiv
mov
jp
mov
push
adc
shl
mov
pushf
add
xchg
jle
std
scas
lret
jmp
outsb
call
push
loope
inc
mov
jp
sub
call
in
sbbb
imul
inc
push
std
sub
std
add
cs
jl
pop
push
dec
hlt
je
je
inc
call
jb
xlat
jo
push
push
icebp
push
pop
xchg
xrelease
jne
jmp
into
shl
push
xor
dec
jo
sub
mov
xchg
xchg
adc
daa
adc
xor
pop
adcb
cmc
adc
add
sub
add
or
faddl
cs
aas
cli
imul
add
pop
cs
dec
scas
push
ss
outsb
inc
sbb
jg
adc
jl
inc
push
sub
jae
stc
pop
mov
add
aad
and
jbe
pop
xchg
mov
and
jmp
mov
mov
sbb
bound
add
pop
add
fstp
pop
int
mov
sbb
or
cmp
ret
add
or
inc
or
icebp
push
fs
adc
scas
sahf
and
jmp
ljmp
add
mov
test
inc
and
jmp
orl
add
add
jbe
or
cmp
jno
popa
add
sbb
shrl
pusha
add
test
cld
call
pop
mov
sbb
push
insb
lods
jp
push
pop
add
and
push
mov
je
xchg
repnz
xchg
or
push
nop
sub
sbbl
sti
ljmp
cld
push
sbb
mov
fidivs
xchg
jae
add
pusha
shl
dec
pop
addl
xor
les
std
imul
pop
and
cld
mov
jle
and
dec
sub
jbe
inc
testb
push
pop
stc
cmp
xor
jae
dec
std
mov
js
pop
push
in
cs
shrl
sub
je
notl
js
mov
add
dec
in
into
icebp
mov
cld
fimuls
decb
adc
dec
subl
cmpb
out
cmp
jmp
andl
and
or
add
sub
out
xlat
mov
inc
push
jp
push
movsl
out
pop
mov
aas
fistpll
pushf
fistpl
testb
push
movsl
inc
add
fisubrl
pop
push
mov
out
push
rorl
bnd
ficompl
add
outsb
ret
and
lods
or
xor
jne
movsl
sub
jmp
inc
sbb
push
bound
pop
add
mov
adc
movb
fstpl
add
out
movsb
dec
roll
add
adc
adc
jne
mov
je
je
icebp
adc
ficompl
lea
sbb
fisttpll
fstpl
out
aaa
orl
sub
call
xor
add
and
push
test
adc
into
jbe
add
pop
pop
add
cld
aas
std
mov
dec
hlt
movsl
sub
push
popl
mov
add
add
pop
sti
incl
pop
hlt
cmp
addb
pop
mov
add
add
jno
popl
pop
lea
xor
xor
mov
in
pushf
insl
mov
daa
cs
movsb
mov
inc
jmp
aas
cld
dec
test
and
idiv
enter
fidivs
adc
mov
pop
add
jmp
add
arpl
test
mov
push
mov
test
popa
jbe
in
iret
fbstp
push
out
stc
lret
aam
popa
icebp
mov
mov
or
add
mov
fsubp
xor
push
mov
dec
gs
in
lods
lods
jne
mov
icebp
dec
clc
idivb
enter
in
mov
add
insl
fldenv
pop
ljmp
loop
pop
addr16
xchg
pop
push
sbb
stos
fwait
push
pop
ljmp
shll
and
fwait
push
inc
insb
adc
fsubp
imull
pop
insb
cmc
mov
cmc
jns
data16
pop
leave
test
ds
mov
mov
jmp
loop
add
xor
cmc
sbb
sbb
xchg
imulb
pop
and
cmp
mov
or
jnp
out
mov
or
insb
or
add
out
sti
pop
sbb
sbb
xchg
add
lock
adc
std
lds
ret
sbb
xchg
jo
sti
jbe
add
icebp
mov
pop
push
push
pop
in
push
mov
orl
sbb
test
cltd
jne
icebp
lods
adcb
pop
push
add
xor
mov
arpl
mov
add
cmp
ljmp
cmp
ret
ljmp
incl
cmpsb
jecxz
push
imul
add
add
fsubrl
inc
jle
decl
in
jle
ljmp
jo
push
call
in
jne
ljmp
pop
mov
xor
sbb
add
mov
pusha
add
push
aaa
mov
outsb
mov
mov
test
flds
loope
and
mov
or
cld
mov
inc
in
add
adc
out
cltd
xchg
fildl
bound
fdivr
jns
dec
loopne
out
mov
imul
inc
lock
fisttpll
dec
fdivl
mov
xchg
jmp
in
push
in
add
shrl
or
add
jecxz
mov
pop
mov
pop
adc
or
dec
mov
and
fidivrs
push
stc
dec
in
icebp
xor
add
adc
mov
mov
roll
cmpsl
repnz
adcl
push
sub
and
pop
aad
shrl
pusha
dec
sub
jo
es
cmpsl
push
mov
jne
sbb
popa
repnz
add
pushf
test
dec
pop
add
ret
fstp
clc
call
sub
cmp
call
pop
pop
cmc
push
or
test
lds
es
cmpl
pop
jp
jmp
stos
out
test
add
fldl
xchg
in
mov
mov
out
add
and
rolb
je
data16
push
aam
push
mov
mov
cwtl
outsb
or
mov
fsubrs
fxtract
pop
add
ret
mov
jb
jecxz
and
mov
fcomip
pop
add
xor
add
add
add
xor
gs
add
cs
pop
add
out
subl
xor
and
ljmp
inc
sub
mov
popf
ss
test
dec
loope
add
mov
fidivs
decl
arpl
or
jmp
mov
aad
std
dec
repz
fimuls
rorb
fdivrp
inc
cld
push
jle
push
add
lret
std
setnp
test
add
or
xchg
mov
cs
cmp
sub
add
rorl
xor
xchg
rcr
imul
in
testl
mov
js
pushf
jns
or
adc
ss
mov
add
pop
add
add
pop
les
push
or
jo
into
and
push
outsb
fs
outsb
mov
add
pop
adc
jp
or
adc
ss
nop
aaa
xor
int
add
pop
insl
ret
or
pop
push
cmpsb
xchg
inc
push
out
in
pop
nop
adc
ficoml
test
mov
ja
push
dec
jecxz
sbb
ss
inc
add
in
inc
jmp
insb
out
icebp
push
fadd
fstp
jg
add
jmp
pop
daa
cld
cs
mov
jbe
push
dec
cld
xchg
lods
in
adc
add
xchg
jmp
add
movb
pop
jo
jmp
xchg
test
out
mov
fstpl
push
jp
xchg
fstpl
and
pop
jmp
add
add
jns
pop
mov
bound
sbb
mov
cli
xchg
jecxz
push
xchg
cld
test
push
mov
aaa
pop
add
mov
incl
jmp
std
call
jnp
outsl
add
jp
mov
popa
add
and
stc
push
test
lds
xor
cld
cmp
mov
or
adcb
mov
int3
xchg
jne
mov
and
mov
aaa
pop
mov
inc
incl
push
inc
aaa
or
rcr
sub
xor
push
add
ds
test
push
mov
mov
and
sbbb
out
or
stc
dec
enter
roll
add
cmp
filds
addb
ljmp
filds
pop
lcall
add
add
pop
sar
cmp
outsb
xchg
pop
pop
cmp
mov
je
add
fwait
cmp
inc
or
call
movsl
pop
ljmp
ljmp
add
out
ljmp
aas
jmp
push
sub
xor
push
sahf
mov
rcrl
push
pop
jnp
pop
addb
pop
jne
ret
cmp
aad
add
fsts
sahf
ss
add
bound
pop
sahf
add
jg
mov
lahf
pop
add
pop
add
add
or
push
add
test
or
in
pop
add
int
mov
mov
cmc
shlb
fstp
clc
inc
fcomp
or
fstpl
sub
flds
jmp
pop
mov
or
xor
pusha
push
mov
sub
call
push
test
out
mov
ret
cmp
into
push
add
add
repnz
push
push
cli
sbb
push
cli
sbb
push
mov
mov
aaa
pop
mov
in
repnz
shlb
stc
inc
std
jg
cmp
jb
pop
pop
mov
in
lea
push
lea
sahf
push
push
sub
outsb
int3
inc
mov
inc
lcall
xor
roll
xor
add
pop
mov
out
lea
push
push
ja
dec
cmp
add
or
jno
fdivrp
cmp
gs
push
cmpsb
push
xor
push
and
fiadds
mov
pop
sub
enter
dec
pop
movl
push
inc
mov
sbb
add
decl
xchg
in
mov
add
add
lret
mov
xchg
jmp
jecxz
sbb
inc
mov
add
pcmpeqb
lods
dec
push
fiadds
push
pop
nop
mov
jo
les
jo
inc
jbe
cmp
jno
outsl
lods
jbe
outsl
dec
stos
sub
test
push
jo
int
xor
fsubl
add
in
mov
add
jmp
jb
movsb
jne
and
pop
ljmp
pop
ljmp
add
stos
adcb
rcrb
outsb
dec
rcr
movsb
xor
mov
add
mov
or
pop
cld
cwtl
test
sbb
jb
outsb
jg
xchg
loope
sub
add
jno
rcl
sbb
jb
pop
cld
cmp
inc
mov
ljmp
mov
rclb
and
in
mov
xchg
jno
loope
jo
loope
repz
shrl
outsl
sti
jmp
dec
cmp
lods
jmp
es
push
pop
fstl
pop
add
push
cmp
jp
sti
pop
add
inc
xor
lea
add
dec
push
das
pop
inc
add
push
pop
add
inc
xchg
jbe
mov
pop
add
mov
pusha
fidivs
dec
fidivrl
sbbb
pop
add
out
outsb
sar
xchg
fmul
mov
push
loope
pop
mov
incl
sub
mov
xchg
push
repz
mov
inc
ljmp
add
jb
dec
push
fiadds
and
add
inc
leave
jp
cs
push
dec
jno
cltd
je
inc
xchg
add
dec
mov
add
stos
ja
ljmp
aad
push
pushf
cs
mov
sbbl
aad
out
xor
lods
dec
jge
sahf
jbe
std
iret
stc
mov
add
mov
cltd
inc
sbb
orb
scas
nop
adc
lret
stc
adc
xlat
ret
push
xchg
mov
call
gs
cmp
xlat
mov
push
dec
insl
jle
imul
and
jmp
rorb
pop
gs
or
addb
fs
mov
dec
cmp
add
pop
adc
sub
push
sbb
push
jne
and
gs
int
xlat
ret
add
mov
sbb
fsubs
sub
pop
call
loopne
add
or
in
jge
fs
sti
imul
jne
cld
cltd
insb
add
push
arpl
or
movsb
xchg
or
mov
arpl
ljmp
test
mov
int
fstpl
dec
add
lret
mov
mov
icebp
cmp
cmc
add
push
data16
cmpsb
and
jbe
andl
xorl
sub
call
sbb
mov
mov
sti
add
loopne
cld
divl
push
push
xor
lock
jge
add
aad
je
out
call
cs
stc
mov
add
call
mov
mov
pop
in
sti
incl
pop
add
scas
jno
lcall
inc
cld
out
inc
mov
sbbl
fscale
js
shr
inc
cld
inc
mov
les
mov
push
jo
adc
jl
cmc
mov
js
xor
xchg
icebp
adc
add
fcmovne
lret
pop
mov
sub
or
mov
adc
cmp
or
lret
sbb
pop
cmpsl
xor
mov
or
out
fimuls
jp
lcall
jl
test
mov
ljmp
int3
mov
cld
gs
mov
or
add
push
cmp
mov
out
inc
cld
int
stos
xor
fidivrl
fdivp
in
pop
fbstp
ja
push
ljmp
fidivrs
xor
adc
daa
xor
mov
jbe
push
sub
ficomps
add
icebp
test
mov
imul
add
add
movsl
mov
and
pop
ljmp
loop
sti
pop
shr
add
fisubl
adc
repz
loop
add
mov
test
jno
add
fst
dec
call
icebp
data16
gs
jno
push
add
xchg
xchg
pop
call
lods
fadd
fisubs
adc
cwtl
incl
add
pop
add
inc
or
je
inc
sbb
jmp
fstpl
push
mov
data16
jmp
and
je
fldenv
add
fisubl
and
push
adcb
xchg
push
mov
sub
and
pop
add
pop
and
add
add
outsb
cmpsl
adc
add
out
add
pop
mov
push
push
in
and
sub
je
jb
adc
cld
xchg
xchg
pop
sti
incl
bound
add
push
and
je
jne
inc
fldt
addr16
xchg
outsl
and
xchg
enter
aas
add
push
imul
jo
inc
ss
stc
inc
and
inc
lret
add
bound
add
push
dec
push
mov
ret
repnz
repnz
and
out
js
shll
movsl
cmp
push
mov
sbb
fwait
pop
mov
cs
std
fbstp
out
popf
lcall
jmp
sahf
add
xor
fbstp
mov
loop
pop
aas
cli
push
inc
add
add
iret
add
and
clc
pop
push
mov
sbb
pop
out
jne
in
or
dec
mov
dec
jmp
add
pop
ljmp
pop
ljmp
xor
xor
sbb
xor
incl
pushf
jae
int3
jmp
mov
scas
movsl
push
add
pop
add
cmpsb
fs
add
fstpl
add
shrl
adc
and
test
addr16
mov
pop
jl
cmp
pop
andb
ljmp
and
jb
adc
aam
dec
inc
jmp
ja
andb
push
push
push
std
aam
xlat
jne
int3
add
fnsave
and
and
lret
add
add
pop
jb
jmp
lods
cmp
jmp
in
imul
lods
or
out
scas
call
add
test
mov
das
imul
inc
add
xchg
pop
jl
incb
jne
jl
stc
push
aas
cmc
sti
push
xchg
add
add
push
stc
call
push
out
push
scas
add
push
fwait
outsl
and
push
add
cli
out
add
jmp
jmp
ret
push
mov
mov
cmc
fadds
fbstp
mov
cli
jne
xchg
cmc
mov
out
das
stos
jg
cmp
loope
ljmp
je
inc
stc
jae
add
sbb
xchg
jmp
cmc
cmp
lcall
add
adc
or
lcall
inc
sbb
shr
mov
and
cld
mov
cld
mov
jo
mov
or
les
push
or
fidivs
inc
xchg
ficomps
jbe
bound
sub
popa
loop
push
adc
hlt
and
aaa
pop
popa
lret
add
insl
testb
les
pop
jg
mov
jnp
aad
dec
and
popa
or
int
inc
add
pusha
jmp
out
ljmp
mov
adc
cwtl
movsb
lock
add
stos
ljmp
lods
mov
xor
add
add
mov
jnp
sub
push
aad
stos
mov
and
or
dec
imul
lcall
sbb
ret
roll
lret
pop
push
bound
in
leave
mov
jne
mov
add
fnsave
mov
jmp
sub
push
mov
pushf
in
or
daa
pushw
add
and
push
pop
push
bound
push
addr16
leave
add
dec
add
lods
jp
adc
add
mov
adc
ja
jmp
adc
lock
mov
add
and
or
inc
xor
incl
push
push
call
xchg
or
out
add
mov
cld
mov
mov
daa
negb
rolb
add
dec
add
pop
mov
call
cmp
cmpb
cld
arpl
pushl
pop
add
fidivrs
xchg
jb
cld
fwait
lcall
dec
mov
lcall
mov
mov
je
pushl
cld
pop
stc
xor
mov
inc
lahf
mov
in
incl
add
je
lock
cmp
subl
inc
jb
ret
sbbb
subb
push
std
imul
aad
xchg
xorl
dec
sbb
mov
adc
push
mov
and
mov
sub
loopne
add
pop
xchg
or
and
xchg
pop
add
gs
inc
scas
jmp
add
push
mov
ror
gs
push
mov
js
pop
call
push
cmp
mov
push
jecxz
aaa
cwtl
mov
pop
and
fsubrl
dec
rorb
add
pop
nop
pop
and
shrb
jmp
call
ds
sub
fs
fiadds
sbb
insb
test
pop
jo
mov
mov
aaa
add
jne
pop
call
ficompl
in
lahf
std
xchg
faddl
fcompl
lods
xor
rcr
jle
out
pop
jne
mov
je
mov
pop
pop
pop
pop
xchg
and
loope
mov
mov
outsb
push
push
bound
vpsubsb
stos
inc
inc
outsb
jecxz
test
int
inc
or
add
loop
jne
mov
sbb
jmp
sbb
or
or
call
call
add
push
jl
jnp
add
inc
mov
push
test
lea
dec
call
or
add
js
mov
inc
pop
add
mov
xchg
cltd
mov
setnp
ljmp
incb
aaa
pop
push
mov
xchg
add
xlat
in
mov
pop
sbb
mov
dec
insb
add
loopne
push
dec
add
cmp
push
imul
stc
shll
mov
add
mov
arpl
mov
test
cmpl
std
repz
ficoms
mov
cmpl
ret
inc
incl
vsqrtps
jb
add
dec
sub
incl
ret
cld
xor
xor
fsubrp
mov
sbb
mov
mov
xor
add
xchg
into
ret
les
pop
jmp
add
pop
and
sub
fisubs
cmpsb
stos
pop
call
mov
pop
sub
ret
sub
int3
adc
pop
les
add
addr16
mov
call
lods
js
fdivrl
pusha
int
inc
lea
inc
ss
inc
bnd
call
mov
xchg
mov
fisubs
outsl
dec
pop
aam
jmp
lea
push
clc
add
fldl
sub
pop
aam
adc
add
add
pop
jmp
lcall
cli
es
test
pop
fstl
add
inc
ja
fcompl
add
int3
and
push
lcall
push
jb
test
cld
imul
sub
test
fs
sti
mov
inc
or
push
pop
jne
pusha
sar
add
sub
push
shll
inc
add
pop
adc
jmp
adc
pop
inc
mov
pop
push
pop
push
mov
sbb
out
in
lret
movl
mov
call
xor
push
stos
push
ljmp
xchg
mov
add
cld
pusha
add
pop
add
sbb
out
sbb
jl
mov
lods
push
push
lods
adc
incl
add
out
sub
or
mov
inc
incl
filds
fcoms
stc
pop
pop
mov
cmp
inc
dec
call
mov
mov
insb
in
inc
decl
sub
cmp
inc
decl
fmulp
jp
push
inc
ljmp
fnsave
push
or
mov
movsl
xchg
xchg
add
inc
ljmp
decb
filds
rol
mov
cmp
loop
jmp
cld
pop
xlat
add
loop
mov
xor
push
jmp
add
in
loopne
in
call
inc
add
pop
push
aam
push
pop
xchg
test
ja
call
mov
in
adc
inc
jo
add
jp
jnp
pop
call
mov
lds
add
call
and
xchg
lods
shrl
cli
imul
sub
loopne
out
test
add
fucomp
test
lods
adc
jmp
mov
mov
sarl
adc
shl
adc
jmp
add
bound
sub
jp
mov
jbe
cltd
fistpl
insb
dec
in
push
push
add
out
xchg
jmp
mov
lods
push
push
and
or
and
jne
mov
pusha
add
out
ss
add
pop
xchg
dec
push
cmp
inc
fidivrs
call
sbbb
dec
jp
and
inc
pop
rol
cmp
je
jno
xchg
pop
add
sub
add
mov
push
mov
daa
mov
test
add
imul
into
iret
add
mov
add
popf
and
call
add
push
and
addl
cld
sub
adc
and
xchg
lods
out
inc
lcall
add
ret
push
mov
lds
push
xor
or
mov
push
add
xorl
push
sar
mov
fisubrs
mov
add
inc
call
add
dec
arpl
orl
jle
popa
pop
repz
push
jmp
add
fsubp
mov
js
shll
mov
mov
out
popf
call
xchg
mov
lods
sbbb
push
mov
xchg
push
sub
test
xor
add
sub
mov
ficomps
aas
lret
add
add
sbb
add
cmp
xchg
jecxz
test
sbb
dec
inc
mov
inc
add
mov
in
icebp
lods
lds
jmp
push
mov
in
imul
add
jmp
sti
ljmp
adc
mov
pop
add
push
sti
jmp
sub
xchg
add
push
sti
push
xor
in
push
dec
orl
test
mov
mov
jmp
sub
pop
test
loop
jae
fstpl
add
andl
rcll
mov
sbb
pop
or
and
inc
aaa
jb
imul
add
fldl
add
or
xor
test
mov
incl
lods
jmp
mov
dec
decb
pusha
pop
test
mov
add
push
pop
add
pop
es
lea
or
sbb
jmp
incl
filds
sbb
jns
shl
dec
std
add
scas
and
decb
xorb
insl
mov
inc
jmp
pop
add
jmp
push
ret
mov
jae
std
outsl
sar
fidivrs
xor
faddl
inc
mov
dec
jecxz
arpl
inc
xchg
fisubrs
inc
cli
xor
lock
or
fcoms
pop
xor
add
call
add
repz
in
jl
jns
or
cwtl
imul
test
inc
loop
call
lea
push
push
daa
pop
push
and
push
add
pop
insl
les
nop
adc
pop
call
pushf
fucom
or
int
cld
out
adc
or
dec
insb
jge
add
fidivl
fxrstor
dec
pop
add
fucom
shll
aam
fstpl
inc
arpl
inc
sti
mov
or
dec
sti
jmp
popa
fadds
jmp
icebp
xchg
negb
add
ffree
cmp
test
scas
icebp
lds
xor
outsb
jb
sbbl
jmp
add
adcb
iret
or
dec
sti
jmp
leave
stos
jle
insb
add
sub
fstpl
push
stc
or
add
cmpsb
cld
je
insl
mov
inc
or
xchg
dec
call
hlt
and
test
mov
mov
je
inc
mov
iret
insb
sgdtl
mov
add
xchg
and
add
add
call
out
sti
lcall
test
add
sti
outsb
and
call
push
call
jl
and
inc
dec
mov
mov
cmp
cld
push
ficomps
mov
mov
jbe
add
inc
cli
and
pop
mov
cmp
cs
dec
mov
add
or
pop
dec
out
fidivs
mov
xor
imul
rol
imul
sub
mov
sub
lcall
xor
fiadds
dec
lock
jge
icebp
daa
lods
mov
mov
loope
push
push
fsts
out
pop
jae
add
add
sbb
mov
sbb
mov
add
add
pusha
into
add
mov
andb
mov
lods
cmpb
test
adc
rcl
lea
fiadds
add
sub
cltd
lods
inc
ret
in
add
stos
xor
mov
pop
push
lods
adc
push
push
loopne
lods
add
pushf
pop
pop
jmp
lods
ljmp
add
add
dec
add
orb
popf
leave
enter
sti
and
or
push
jnp
xor
mov
insl
inc
test
lods
int3
ljmp
mov
in
push
or
in
pop
cs
les
test
pop
add
cli
into
jb
mov
add
add
pop
jmp
fs
cmp
scas
xor
mov
fstpl
or
dec
sti
add
cli
addl
les
ret
aas
fsubr
enter
jmp
xchg
mov
add
stc
std
lea
mov
xchg
mov
int
add
add
sub
mov
inc
in
mov
add
push
hlt
cmpl
std
add
pop
xchg
mov
inc
pop
or
lea
lahf
bound
add
pushf
add
negb
push
fiadds
lods
dec
pop
mov
push
push
xchg
mov
add
mov
cmp
hlt
incb
fbstp
mov
mov
inc
xchg
jns
outsb
in
addb
jbe
cmpsb
cld
cs
and
jno
mov
push
cli
cmpsb
cmp
xor
sbbb
jnp
fbstp
push
push
add
imul
mov
ss
incl
sti
sbb
adc
inc
clc
lds
das
test
ret
stos
jne
and
xchg
stos
xchg
shlb
add
push
and
jg
add
sbb
call
js
cmp
js
xor
cwtl
jl
cmp
mov
test
pop
sbb
imul
pop
jne
xchg
lods
insl
xor
xor
add
ss
test
lods
lret
pop
aas
adc
fstpl
insb
jp
add
fstp
inc
mov
add
pop
aas
std
cmpsb
inc
fcmovnb
pop
lcall
push
push
inc
sti
jmp
ja
je
inc
mov
add
sti
jmp
inc
inc
sti
cwtl
add
call
fstpl
inc
mov
and
mov
inc
add
mov
cmp
test
push
pop
cli
movsb
pop
mov
cmp
add
inc
push
add
testb
loope
inc
pop
inc
cld
push
cmc
outsl
cld
dec
push
cmp
sar
lcall
jae
pushl
cmc
aas
lock
icebp
add
idiv
jne
jmp
xor
adc
lret
ja
add
pop
fcom
mov
add
jecxz
jge
add
xchg
ret
shl
pushl
test
or
fidivs
jbe
cvttps2pi
jmp
leave
js
or
jp
fimuls
mov
fcmove
xor
sub
push
mov
jge
mov
add
lds
ja
fidivs
mov
add
add
cmp
arpl
movsb
cld
cmpl
mov
dec
jp
stos
xor
cld
pop
xor
je
and
lret
mov
cmp
std
ficoms
jmp
push
mov
pop
dec
mov
sbb
sub
inc
jge
lcall
sbb
in
add
add
push
out
fisubrs
mov
adc
and
stc
test
mov
fwait
or
add
cmp
mov
inc
jmp
add
or
pop
sbb
ficomps
inc
sub
fstp
ret
pop
add
pop
cmp
js
lea
shr
pop
jmp
pop
add
rcr
stos
loop
add
ss
mov
iret
shll
sti
jmp
cmp
je
dec
sbb
jmp
addl
jne
sti
jmp
xchg
test
jp
sti
mov
into
inc
flds
shl
movsl
add
inc
sbb
aad
add
cmc
std
call
add
les
clc
xor
inc
pop
add
or
or
sarb
pop
ja
and
lods
push
jb
repnz
xor
dec
mov
pop
add
jo
jg
pop
add
mov
add
add
adc
repnz
inc
cli
dec
mov
jnp
xor
pop
fcomps
ja
ljmp
add
stc
or
add
repnz
fmulp
and
lods
mov
jnp
dec
push
movsl
dec
push
stc
mov
jmp
scas
andb
sbb
negb
jns
mov
mov
jge
mov
orb
sahf
dec
push
jno
out
push
add
gs
cmp
bound
inc
inc
add
add
shll
mov
mov
cld
leavew
add
mov
test
inc
mov
add
pop
pop
lret
fiaddl
ficomps
pop
arpl
add
cli
add
fisubl
pop
push
xor
shrb
add
fldcw
sbb
ds
out
sbb
gs
push
scas
pop
mov
inc
les
and
icebp
ds
clc
movsl
insl
sub
aas
mov
ret
imul
popf
call
and
inc
pop
mov
jb
jmp
push
out
xchg
pop
mov
adc
daa
sti
push
mov
pushf
jns
jl
loop
pop
cmpsl
add
mov
fstp
pop
test
add
rorl
jmp
decl
ja
add
and
cli
push
je
jp
jmp
into
lods
jmp
insl
lcall
jg
dec
jne
pop
mov
test
fldl
add
std
mov
call
mov
jne
in
dec
and
mov
mov
add
ss
addr16
and
stos
jle
popa
loop
inc
popa
add
aaa
popa
push
push
jns
je
movsl
jmp
test
dec
test
cmc
pusha
add
xor
add
push
and
and
xchg
or
and
loope
dec
in
add
pusha
mov
call
fisubrs
ret
and
iret
decl
mov
aad
cmpsl
inc
pushl
pop
cld
popa
mov
and
mov
cmpsl
out
nop
imul
and
addr16
cld
sub
adc
xor
xchg
bound
or
fisubrs
add
mov
xchg
add
add
add
push
add
cltd
push
and
push
lcall
pop
int3
repz
mov
lods
out
cmp
pushf
push
mov
lods
out
cmp
push
jb
bound
push
pop
dec
mov
cmp
mov
mov
clc
push
bound
add
fidivs
pop
fildl
pop
xor
xchg
pop
call
add
add
add
sub
jmp
arpl
xlat
in
call
fidivrl
jo
cli
push
addb
mov
pop
cmp
fs
scas
sub
pusha
xchg
dec
mov
pop
jo
inc
or
test
jmp
fisubrl
sti
jmp
push
cltd
xchg
fnsave
cltd
adcl
sub
lds
sbb
arpl
xor
cli
cmp
jmp
push
inc
imul
ffreep
das
cltd
out
int
cmc
mov
fstpl
add
std
decl
fldt
fwait
out
and
fisubrl
addr16
ljmp
pop
add
push
add
add
loopne
jle
add
out
call
sti
and
add
sbb
jnp
pop
pextrw
pushl
fisubrl
sbb
mov
mov
jecxz
sti
pop
add
insl
push
cli
call
ja
add
out
pop
xor
stos
stos
jle
xchg
fidivrs
mov
push
lret
fiadds
out
add
jb
cld
push
or
or
cltd
xor
test
jbe
add
in
aam
lcall
inc
jmp
pop
inc
add
or
pop
popf
cld
scas
clc
xor
lret
push
cmp
jecxz
sahf
inc
test
mov
fbstp
je
mov
cltd
mov
fdivrs
add
add
stos
movsb
fisttpll
lock
xchg
pop
call
add
inc
sub
stos
mov
lods
repnz
jmp
sub
dec
test
out
fimuls
negl
sbb
add
jno
in
call
add
sbb
sbb
xchg
cmp
jmp
add
or
add
insb
mov
lcall
rolb
mov
xchg
lret
add
inc
mov
je
test
add
fldl
pop
je
lea
out
shr
fstpl
add
cmp
je
sbb
and
fwait
std
mov
pop
cmpsb
cli
push
cmpsb
imul
outsb
outsb
adc
pop
xchg
add
add
fstl
inc
and
cmp
mov
bound
push
call
xor
jmp
cli
ss
add
cwtl
std
add
pop
mov
aam
lock
fidivrs
fidivrs
mov
std
push
dec
jne
call
jne,pt
orl
test
add
inc
sbb
test
add
hlt
fdivrl
rolb
add
jg
sub
std
push
cld
je
add
or
pop
jbe
addb
repnz
cmp
jle
cmp
mov
push
inc
sti
imul
cld
pop
add
inc
mov
enter
nop
jp
jb
mov
push
fwait
pop
jmp
mov
jnp
sar
cltd
dec
add
push
jns
out
imul
gs
test
fistpll
pop
jg
mov
jmp
arpl
decl
mov
dec
jp
cs
jecxz
lds
inc
test
ss
out
cmp
mov
adc
pop
lea
sbb
inc
cli
outsl
test
add
scas
lea
mov
lds
out
sbb
pushf
fstpl
shrl
clc
inc
test
bound
mov
sub
jl
int
sub
test
jmp
push
ljmp
add
cmc
pop
add
pop
push
in
xor
loope
mov
cmp
add
xchg
mov
mov
add
jns
test
add
fstpl
inc
cmp
add
sti
fiaddl
xor
and
ljmp
sahf
in
and
xor
inc
push
mov
add
repz
mov
mov
ljmp
push
into
mov
packssdw
add
jmp
inc
jne
cmp
mov
add
jmp
or
pop
arpl
mov
bound
add
jecxz
inc
add
pop
arpl
dec
pop
add
popf
mov
lcall
mov
addb
jo
negl
mov
pop
add
jno
mov
ftst
aas
stos
paddd
push
addb
adc
arpl
jnp
add
jno
mov
test
cmp
ja
addb
push
mov
mov
fimuls
add
lea
fs
lea
mov
inc
jmp
adcb
idiv
incl
xchg
mov
sbb
mov
fiadds
xchg
sti
push
pop
inc
jmp
jns
mov
or
cmp
daa
add
pop
xchg
outsb
out
in
fiadds
xchg
imul
inc
jmp
add
mov
incl
scas
cmp
es
sar
pop
pop
lret
or
mov
call
pop
enter
mov
xchg
fidivs
ss
adc
ficomps
mov
call
dec
dec
std
call
mov
pop
rolb
fidivs
xchg
and
pop
or
cmp
int3
repz
call
dec
movsb
lahf
call
stos
push
in
aaa
add
mov
dec
jbe
sti
jp
das
ret
jl
inc
xchg
mov
popa
cltd
add
push
outsl
jmp
add
jg
cmp
fstpl
jo
sub
add
pop
mov
inc
cmc
movsl
xor
fnsave
popf
lret
fstpl
jo
xor
sti
inc
imul
jmp
and
mov
sub
out
ret
arpl
pop
mov
mov
incl
loop
jmp
add
adc
mov
movsb
out
xchg
add
pop
add
movsl
or
and
lret
add
test
cmova
mov
pop
add
movsl
adc
popa
mov
adc
lods
movsl
add
addl
pop
pop
arpl
negl
dec
movsl
sbb
and
aas
jg
add
ja
inc
stos
cltd
push
mov
popa
arpl
push
bound
mov
js
dec
xchg
cwtl
aaa
call
addr16
in
mov
add
and
inc
add
fisubs
dec
clc
lods
lods
fidivs
xchg
push
dec
push
push
aaa
jmp
add
mov
push
add
sub
jns
call
fnsave
mov
sub
add
stos
inc
dec
pop
aaa
jmp
adc
cmpb
xor
movsb
jbe
add
inc
xlat
repz
addl
test
jmp
sub
add
and
add
ret
jno
sbb
movsl
dec
mov
faddp
jno
cmpsb
in
gs
sub
jp
xchg
pusha
ja
pop
call
add
add
movsb
dec
adc
add
and
add
ret
popa
inc
scas
in
nop
add
jge
mov
and
pop
push
add
and
add
ret
popa
dec
es
lods
mov
mov
pop
call
and
ffree
mov
in
out
fstpl
jo
mov
sti
iret
add
ljmp
jmp
movsl
hlt
add
ffree
mov
pop
arpl
mov
rcll
sub
xchg
and
jmp
xchg
cli
adc
ffree
mov
in
xchg
fstpl
pusha
xchg
lods
mov
dec
pop
mov
add
add
inc
xor
mov
pop
icebp
add
mov
add
add
xchg
jae
mov
loopne
add
adc
roll
cmp
dec
dec
lea
stos
cld
call
test
call
mov
push
xor
inc
mov
orb
pop
and
or
int3
push
jb
test
rorl
test
lds
mov
mov
les
xor
add
in
push
cmp
and
fisubs
push
arpl
adc
add
mov
test
lds
jmp
push
push
call
imul
arpl
mov
ss
movsl
mov
jns
pop
push
jno
fidivs
xor
mov
stc
fimull
add
ss
or
sbb
add
or
push
sarl
pop
mov
bound
mov
movl
pop
xor
mov
jmp
mov
mov
mov
sub
js
fisubl
jae
pop
call
xchg
mov
popf
fwait
scas
lea
xor
add
loop
cld
pop
in
add
ficompl
add
xor
or
push
fsubrl
mov
xor
retw
ljmp
adc
in
add
pop
rolb
daa
add
push
pushf
std
jb
aam
leave
or
rcrl
repnz
mov
cmp
sti
jo
xor
ljmp
out
jmp
add
repz
pop
jmp
aam
xor
aad
fwait
or
pop
add
or
iret
add
sti
jo
sub
icebp
pop
out
in
mov
adc
cli
testb
push
int
aam
cmp
pop
add
inc
sbb
dec
dec
in
sub
jmp
add
add
roll
mov
jmp
mov
aad
or
outsb
fstl
in
push
push
or
jle
xchg
and
imul
sbb
mov
sbb
btr
xor
sub
cmp
cmp
arpl
sbb
jnp
mov
outsb
jns
push
stc
call
add
fidivrs
cmp
pop
hlt
adc
fs
shll
mov
pop
hlt
mov
fidivs
adc
xor
sub
push
and
decl
lods
mov
mov
or
out
shl
xor
jl
enter
imul
gs
popf
cld
xor
incl
add
push
lret
add
jb
pop
mov
fidivs
mov
dec
mov
mov
scas
pop
pop
call
add
and
mov
sbb
add
fsubs
fwait
test
jmp
jl
lea
xor
loopne
aaa
out
jmp
add
popa
in
add
nop
adc
add
into
add
push
xor
add
dec
add
rclb
dec
daa
pop
call
mov
shlb
xor
dec
add
ja
mov
rclb
jmp
mov
or
shl
hlt
cli
fisubs
popa
and
xor
sti
jo
lea
faddl
sbb
cmpsb
pop
and
jmp
add
fstpl
in
pop
add
popa
scas
xor
pop
call
sti
cmc
mov
mov
push
jg
add
pop
sub
aad
loopne
mov
andb
cltd
pop
push
in
popf
pop
mov
xlat
std
filds
les
data16
jne
fidivs
pop
push
adc
lret
negl
mov
add
lahf
ror
mov
into
loop
outsb
pop
add
jbe
ret
ljmp
and
std
call
outsl
incl
lods
jmp
fnclex
cmpsb
repz
call
psllw
pushl
fnclex
fbld
jne
test
push
sbb
fidivs
mov
gs
ja
xor
xor
add
in
mov
icebp
jbe
push
push
mov
or
or
adc
aaa
call
aaa
sarb
ljmp
add
jae
jbe
shlb
clc
mov
mov
frstor
fisttps
mov
inc
ficomps
jnp
add
lret
sbb
pop
mov
fisubs
out
mov
call
aam
push
or
mov
out
add
nop
rolb
push
jno
ljmp
jp
inc
jno
not
cmpsl
and
fstpl
jns
mov
rcr
push
or
pop
cmp
mov
ficomps
add
repz
adcb
call
cmp
pop
and
xor
add
jne
aaa
jmp
jae
jmp
fst
stc
fs
pop
jns
fst
leave
xchg
inc
jo
lods
in
movq
inc
jo
pop
addr16
push
add
mov
sub
pop
sti
or
push
jns
loop
or
add
push
jns
fidivl
mov
mov
cmpl
push
cltd
pop
mov
sbb
cmp
jmp
outsb
and
pusha
mov
test
and
jg
jae
xor
daa
or
ds
jne
inc
pusha
mov
cmp
jg
jae
mov
add
subl
add
nop
jg
xor
lcall
sar
jae
sbb
lret
jmp
mov
mov
add
push
add
xchg
outsb
mov
jmp
pop
add
test
pop
lcall
cmp
add
lods
push
mov
mov
lock
faddp
xchg
xor
add
or
je
or
pop
jle
fidivs
and
mov
sahf
pop
xlat
ret
call
mov
pop
cmp
xorl
xorb
insl
dec
mov
lcall
jecxz
out
inc
fsubrp
adc
dec
imul
fsubrp
mov
fiadds
mov
pop
pop
add
imul
add
add
dec
clc
push
sbb
adc
fsubr
sbb
jae
mov
in
or
inc
mov
in
aad
cmpsl
add
test
sahf
pop
jno
pop
lea
aas
ljmp
xchg
rcrb
cmp
xchg
adc
or
xor
mulb
mov
sti
sbbb
push
jmp
pop
xor
push
test
add
xchg
sbb
dec
cmpl
sub
sbbb
sub
lods
xchg
fcompl
lods
pusha
pop
mov
mov
dec
je
mov
push
icebp
ret
cmp
jmp
insb
sbb
ret
pusha
sbb
jne
pop
add
sub
sti
jmp
outsl
mov
ljmp
add
popl
push
dec
mov
push
call
and
push
insb
xchg
das
pop
add
movsb
call
dec
lea
push
call
add
xor
cwtl
out
aas
aam
xor
inc
pop
sti
test
adc
mov
xchg
add
jo
inc
inc
das
mov
add
xor
add
out
je
add
dec
push
in
aas
dec
pop
in
aas
aam
jmp
push
add
add
ljmp
lcall
cld
out
mov
nop
jb
dec
insl
pusha
inc
jecxz
mov
sbb
inc
xchg
cmp
leave
outsl
fildl
decl
repz
add
pop
jnp
ss
and
fldl
mov
inc
inc
jbe
fidivrs
push
imul
mov
add
mov
pop
add
leave
push
insl
adc
incl
inc
push
push
cld
and
jge
mov
sbbl
loopne
fisubrs
add
add
gs
scas
sbb
or
add
loope
or
fsubp
movsl
imul
outsb
iret
sub
sbb
mov
adc
add
faddl
mov
sub
ljmp
add
pop
dec
fcoml
fstpt
addl
popa
xchg
fldenv
add
cmp
pusha
mov
jmp
shl
inc
xchg
dec
mov
or
jmp
cltd
fstpl
jb
loopne
pusha
inc
cmp
jmp
push
fstpl
bound
loopne
insb
mov
test
pop
add
pop
or
sbb
jmp
popa
push
xchg
add
jne
add
fstp
rcrl
inc
lds
imul
negl
bound
pop
into
fdivp
call
xor
cld
outsl
mov
add
mov
lock
adc
push
shl
aas
fadd
shlb
or
xchg
scas
rolb
aaa
loopne
or
cltd
std
je
out
push
mov
lcall
add
andl
or
ds
sbb
das
fcoms
imul
out
cli
incl
add
mov
notl
jno
shlb
lcall
jl
sti
adc
shl
rorb
faddl
dec
arpl
mov
push
insl
enter
sbbl
pop
neg
add
dec
imul
add
add
into
out
mov
cld
push
cmp
dec
out
dec
jae
repz
add
call
mov
out
add
inc
add
clc
adc
loopne
rolb
pop
icebp
pop
mov
ficomps
add
data16
flds
cmp
lret
pop
jmp
jg
adc
jns
push
loop
adc
in
sub
add
push
mov
call
frstor
pop
push
push
sahf
movsl
bound
les
unpckhps
std
dec
mov
shll
add
pop
xchg
or
popa
xchg
add
and
adc
mov
les
cmpsb
add
mov
mov
add
cmp
inc
jmp
fsubr
push
or
add
xchg
cld
popl
pop
mov
popa
mov
addr16
lock
push
ds
mov
addr16
mov
mov
mov
adc
jg
pop
jne
bound
or
out
or
adc
lcall
pop
push
bound
stos
push
je
sbb
inc
adc
add
pop
pop
pop
call
and
xor
add
mov
lea
push
call
sub
xor
shlb
std
mov
fnstenv
rcll
fwait
push
sbb
pop
jmp
orl
call
shrb
add
push
js
pop
push
decl
adc
call
loopne
add
mov
or
add
jne
jg
pop
outsb
adc
cmp
and
jae
and
imul
shlb
dec
jmp
jmp
adc
jecxz
adc
push
xchg
sub
ss
add
adc
add
mov
cltd
lret
jg
xchg
dec
cmp
or
repnz
ljmp
add
mov
adc
cmp
sbbl
adc
jmp
mov
cld
test
pop
xor
sub
add
pop
mov
add
xchg
cmpsl
add
popf
call
xor
adc
adc
xchg
clc
aaa
addr16
int
mov
je
add
scas
jno
icebp
adc
lret
out
popf
call
cmp
push
adc
add
pusha
mov
shrl
hlt
mov
and
test
mov
pop
addr16
std
popa
out
loop
add
shll
aad
push
jbe
mov
jmp
in
popf
add
cmp
add
sti
push
pop
or
jge
out
icebp
add
aad
add
aad
cli
cld
xchg
outsb
inc
jmp
iret
popf
add
nop
push
push
jmp
cmp
jg
aad
push
scas
js
cli
cld
jmp
adc
jmp
fstpl
jg
pushf
and
in
clc
stos
jns
pop
das
sub
sbb
or
add
cld
int
aaa
mov
fsubrs
insl
jecxz
and
in
adc
sub
rcrb
and
jecxz
movb
add
inc
ljmp
in
and
in
and
xor
dec
es
and
mov
andb
inc
mov
add
pop
jne
adc
shlb
adc
lcall
ret
call
insb
dec
xor
jne
add
mov
pusha
xor
popf
inc
add
adc
stos
pusha
xor
std
mov
add
hlt
push
inc
push
add
das
fdivs
jns
push
aaa
leave
and
add
inc
add
mov
and
sbb
push
shll
and
sbb
in
fiadds
jnp
pop
pushl
mov
setno
int3
jns
decl
add
sbb
add
mov
pushf
clc
push
push
nop
sub
add
pop
data16
addr16
pop
sti
dec
aas
out
popf
call
cmp
pop
jb
ficoml
rcr
xchg
add
pop
outsl
add
xchg
cmpsl
add
stc
push
jno
jle
inc
gs
insb
jae
fstps
and
outsb
jmp
call
pop
out
xlat
fsubs
sbb
add
sar
mov
jmp
inc
sub
loopne
or
pop
insl
pop
mov
adc
call
ret
imul
add
mov
sti
jbe
test
negb
or
adc
imul
int3
add
fst
inc
icebp
xchg
cmp
mov
or
push
or
insl
inc
or
adc
xor
loopne
jns
fnsave
fsts
cmp
jmp
xor
inc
aad
stc
xchg
out
or
and
mov
jmp
fucom
inc
icebp
pusha
int3
jne
inc
or
add
addb
mov
inc
pusha
mov
mov
and
push
jmp
push
push
add
cld
adc
add
mov
inc
add
push
add
je
add
outsl
lock
push
iret
mov
add
and
add
pop
pop
jecxz
loope
add
push
in
add
pop
jnp
scas
test
decl
jp
pop
mov
add
fwait
insb
add
xor
adc
xor
mov
imul
add
add
lock
test
test
aaa
pop
adc
dec
xlat
jmp
push
add
jmp
jle
pmovmskb
push
or
mov
pushl
jg
adc
mov
push
mov
or
xor
loope
out
sbb
adc
push
cmp
repz
call
cmc
imul
push
mov
pop
add
cmp
inc
pmaxub
jmp
pop
les
sub
cmp
jns
mov
sub
shll
pop
jmp
ret
push
daa
inc
or
loope
sub
fimull
pop
test
call
sbb
lods
xchg
cltd
or
orb
mov
addr16
aam
sbb
add
sbb
and
add
gs
int3
aam
mov
icebp
adc
cs
mov
call
and
add
xor
pop
imul
jno
mov
loopne
leave
push
adc
call
fstp
cli
hlt
xor
popf
adc
cmc
mov
or
pop
addl
add
loopne
roll
sti
mov
and
push
cmp
jne
sbb
imul
icebp
adc
fstp
stc
call
cs
sub
aaa
clc
ljmp
pusha
or
in
jp
lcall
ja
rorb
sbb
jns
or
add
ret
lcall
inc
cmp
and
incl
add
fdivr
jne
xchg
scas
push
jmp
mov
inc
pop
xchg
xchg
clc
pop
je
jl
push
cmp
adc
inc
das
es
incl
mov
mov
mov
inc
jp
sub
cmp
sbb
mov
and
mov
sahf
xorb
dec
std
xchg
sbb
dec
add
xchg
pushl
pop
inc
jp
out
cld
jmp
loope
jne
add
out
push
add
out
pop
fldz
inc
xchg
mov
shl
rorb
out
jno
push
icebp
or
adc
outsl
data16
lock
insl
jge
leave
pop
test
rcrl
addr16
loopne
add
push
pop
dec
inc
stc
shlb
rcl
cmp
mov
imul
sub
pop
push
pop
add
add
shlb
and
xor
shrl
jle
pop
jae
gs
fcompl
add
sub
and
insl
inc
ljmp
inc
cltd
cmc
lods
insl
add
bound
push
nop
jmp
add
inc
test
loopne
pop
add
adc
add
pop
andl
jmp
loope
ljmp
add
fldl
insb
or
sti
jmp
loop
add
cld
add
jmp
repnz
rorb
jmp
pop
adc
add
add
stos
addr16
hlt
add
sbb
mov
sub
sub
add
push
ret
loopne
jbe
leave
fdivl
roll
add
outsl
add
fs
push
pop
push
cld
ja
xchg
jecxz
roll
enter
filds
and
pusha
xchg
dec
sarl
push
mov
cmp
xchg
fptan
add
cmp
jl
or
jae
fnstenv
inc
jne
das
les
adc
mov
and
sub
push
jne
sub
test
test
cmpl
inc
stos
mov
fidivrs
dec
gs
int3
cmpb
repz
sbb
cpuid
mov
into
inc
xlat
adc
dec
addb
xchg
div
cmp
and
dec
sub
ljmp
mov
sbb
push
imul
sbb
adc
cli
adc
xor
or
cmp
mov
fs
int
hlt
jge
cmpsb
jg
pop
arpl
sbb
pop
gs
xchg
cmp
aam
pop
mov
data16
ficoms
add
add
dec
inc
addr16
repz
add
pop
jns
adc
shlb
cli
lods
gs
mov
cmp
pop
mov
jnp
pusha
mov
mov
sub
lret
sbb
sub
lcall
test
aaa
iret
popf
call
je
add
or
add
fimuls
fcmovu
add
add
pop
add
ds
popf
leave
lods
jmp
jo
cmp
sbb
popf
add
idivb
stos
cli
sbb
pushf
and
jb
pop
mov
lods
addr16
test
pusha
add
push
fstpl
inc
add
ret
xor
jmp
jbe
pop
ss
cwtl
jle
add
lds
jmp
ret
aad
mov
subl
add
jbe
out
adc
mov
std
push
or
jp
and
jp
mov
xchg
jns
int3
aad
sti
jg
pusha
adc
enter
pop
mov
jmp
cmpl
jno
test
cmp
lahf
mov
push
add
add
outsb
cmp
movsb
fs
js
fwait
or
push
sti
repz
call
cmpsb
add
inc
inc
fstpl
adc
fdivrp
sar
sbb
sbb
aad
ja
testb
out
ret
jp
test
idiv
xchg
mov
sbb
lock
lahf
out
sar
mov
push
loope
daa
mov
pop
mov
in
add
and
pushl
or
jns
loope
hlt
rolb
imul
pop
inc
pop
adc
add
sbb
xor
adc
mov
pop
cmp
pop
outsl
shl
aam
mov
jo
ficomps
shr
stos
jno
repz
inc
fiaddl
add
and
rorl
cli
fiaddl
arpl
push
jo
test
mov
or
shrb
pop
call
fistpl
pop
jno
jecxz
pop
arpl
sub
ret
popa
rcrl
scas
cmc
mov
push
pop
std
xor
ret
add
aad
bound
pop
push
outsb
push
cmp
add
fnstsw
sbb
aam
add
jl
or
faddl
out
jmp
gs
inc
xchg
xor
out
lahf
sahf
pop
and
data16
bound
inc
or
fnstsw
sbb
cmp
cli
je
outsl
or
aam
dec
inc
jmp
add
xor
cli
add
adc
sbb
mov
mov
sarl
in
scas
test
mov
mov
adc
adc
andl
add
sti
push
sar
pop
jle
or
adc
cmovo
loope
or
jmp
sbb
aas
adc
jmp
or
psubq
adc
pop
add
mov
test
fwait
pusha
dec
mov
jge
shrb
jae
xchg
or
pop
add
push
lcall
stos
or
jae
inc
lret
inc
add
cmpb
mov
repnz
mov
mov
popa
jb
jmp
mov
pushl
subb
add
xor
jns
xor
imul
or
aaa
mov
jbe
arpl
jns
mov
std
repz
in
jns
ret
xor
sub
jno
sbb
inc
clc
xlat
jecxz
call
fdivr
push
jnp
std
push
jae
fsqrt
aad
in
popf
call
mov
inc
or
add
and
call
lock
loop
addr16
fidivl
xchg
sbb
out
movnti
pop
sub
add
loope
sti
fsub
cli
data16
in
pop
xor
pop
pop
or
mov
roll
inc
adc
test
ja
mov
out
outsb
or
nop
push
subl
and
add
add
sub
jmp
mov
ds
add
fstpl
mov
outsb
and
ss
adc
fucom
jne
int
jne
shl
inc
int
lea
cmpsb
popa
push
adc
lock
negb
cli
je
in
or
mov
cli
std
jne
lcall
add
sub
dec
adc
and
mov
outsl
bound
push
mov
mov
rcrb
sti
mov
gs
cmpl
adc
push
push
or
loopne
je
jecxz
or
paddq
sbb
pop
mov
cmp
jb
out
repnz
incl
outsb
cmp
add
mov
push
fdivrp
repz
in
inc
add
inc
test
pop
xorb
adc
pop
js
pop
ljmp
mov
jae
insl
ret
pop
test
inc
add
and
adc
jae
sbb
aas
fisubrs
and
sahf
mov
mov
lret
dec
lock
fcompp
mov
add
into
mov
ljmp
inc
xor
into
dec
pop
cld
pop
dec
pop
jae
pop
test
xor
pop
repz
push
rclb
add
jns
les
fcmovnbe
pop
in
pusha
rolb
idivl
mov
ficoml
xor
fdivrl
mull
dec
adc
call
fcomps
imul
add
add
arpl
negb
ficompl
test
xchg
sbb
add
daa
mov
lea
pop
sbb
pop
or
call
div
pop
add
pop
jmp
push
cli
jne
pusha
arpl
mov
fcmovne
pop
jo
push
cmc
bound
imul
in
push
mov
aad
add
sbb
cmpsb
cli
fldenv
or
mov
cli
jle
cwtl
jle
mov
adc
dec
cli
fmull
clc
adc
out
xor
adc
cs
push
sub
mov
cmpsb
lods
sahf
add
mov
sti
mov
jmp
sbb
outsb
and
add
jns
ja
jb
add
jbe
add
test
je
loop
sub
add
pop
pop
add
sti
push
mov
xchg
std
test
adc
sbb
inc
incl
sti
imul
xchg
std
orl
pop
push
or
sti
pop
mov
cli
push
cmp
loop
mov
roll
cltd
out
add
xor
push
mov
inc
adc
pop
mov
dec
mov
cltd
jmp
notl
push
add
jle
lcall
ljmp
add
cld
test
pop
lret
add
mov
stos
hlt
aas
fisubrs
mov
xor
imul
push
lods
mov
xchg
lods
push
scas
push
test
mul
push
or
gs
jnp
add
imul
call
loope
jp
push
pop
hlt
in
shl
pop
in
popf
call
cmc
stc
pop
pop
push
lcall
add
mov
or
xchg
or
add
roll
aaa
push
lods
adc
lcall
std
stc
add
cs
stos
nop
aas
mov
cmpsb
add
mov
mov
and
add
add
pop
push
add
dec
icebp
fstps
push
in
cmp
jmp
std
add
push
repnz
pop
pop
push
add
pop
add
and
movsb
js
adc
mov
adc
cli
push
repnz
cli
testb
add
cld
ficoms
sti
adcb
xchg
add
insl
xor
jb
cli
je
fstpl
and
cli
sbbl
icebp
test
loopne
je
gs
pop
pop
mov
xchg
sbb
jmp
ret
jmp
sub
adc
inc
fwait
in
add
loop
cld
or
testl
dec
fidivs
dec
xchg
subb
ret
incl
add
das
fcoms
sti
icebp
push
shlb
jne
xor
xchg
xor
mov
ret
dec
mov
fucom
dec
inc
pop
add
ret
mov
addl
mov
mov
incl
cld
js
xor
fiadds
ljmp
or
mov
lahf
psubusw
push
lcall
jp
add
shll
push
dec
pop
mov
ljmp
rol
addr16
jmp
pop
test
call
inc
data16
xchg
adc
mov
mov
push
push
orl
mov
stos
push
or
call
push
dec
add
sbb
xchg
adc
cmpl
call
add
pop
xor
fcompl
test
add
inc
rol
loope
sbb
mov
cmpb
call
push
mov
gs
stc
jne
add
mov
pop
repnz
add
fst
jns
pop
call
push
in
pop
pop
inc
jbe
addr16
popa
out
out
cmp
add
inc
out
pop
fs
sub
pop
mov
roll
jmp
cmp
jmp
jns
and
mov
mov
jmp
pop
dec
xchg
xchg
sbb
loop
jae
sub
xchg
in
add
mov
ficompl
fsts
scas
fstpl
cmpsl
ljmp
add
sbb
pop
add
rcrb
jl
fisubl
fsub
pop
add
push
ljmp
je
pop
add
pop
add
aas
loop
ret
pop
add
dec
xchg
add
xchg
std
nop
mov
cltd
sti
cmp
lahf
imul
in
sub
loop
js
add
add
outsl
bound
mov
imul
mov
xlat
mov
or
mov
jecxz
popa
addb
outsl
test
pop
insb
call
popa
cld
jne
imul
std
nop
popl
in
fidivs
out
addr16
xor
mov
divb
push
outsb
stos
jmp
inc
cmp
jb
jg
out
mov
flds
ret
add
sbb
mov
cmpsl
addr16
pop
cwtl
in
cmc
incb
jo
notb
sahf
mov
sahf
cmpsl
and
mov
dec
imul
xchg
jmp
out
add
add
flds
mov
packsswb
fdivp
push
jb
push
sub
fdivp
push
jb
push
xor
ficomps
jle
leave
lods
push
cmp
call
inc
add
add
push
mov
xchg
mov
pop
call
mov
push
cmpsl
pop
ficoms
or
ficomps
mov
push
fimull
mov
dec
ds
lea
pop
mov
dec
pop
movb
sti
dec
orl
jle
idivb
sbbl
jmp
leave
add
push
pop
add
jbe
adc
fwait
jmp
jo
pop
test
fstpl
add
fwait
add
mov
and
fucom
shl
add
mov
jmp
push
sub
mov
cli
ds
je
cltd
and
loop
in
data16
jne
insl
jmp
sub
add
movsl
popf
add
push
xor
jmp
negl
mov
sub
popa
jmp
mov
xchg
pop
pop
mov
andl
jnp
mov
add
in
push
lea
pop
ret
inc
and
cli
or
pop
loope
decl
popa
add
jp
push
in
hlt
pop
add
sub
xchg
add
cmp
mov
loope
and
cmp
loope
mov
enter
mov
push
and
test
xor
pop
or
fisubs
add
fisubrs
and
jnp
adcl
or
jnp
testl
cmc
loope
push
push
ss
lret
jle
and
fidivrs
ret
fldl
add
ja
sbbb
icebp
cld
jb
stc
out
xor
call
insl
leave
and
pop
shll
loop
out
addr16
jnp
lcall
out
push
add
sbb
shlb
inc
xchg
mov
call
jp
inc
xor
sbb
inc
or
aad
hlt
jle
inc
fdivrl
inc
add
popf
inc
sbb
add
popf
inc
xor
push
dec
call
add
pop
call
dec
aad
std
rclb
les
pop
out
cld
fisubl
repz
sbb
add
loope
lods
daa
fldenv
std
cmp
jp
inc
les
dec
jmp
sbb
sbb
lods
daa
push
add
jmp
insl
sbb
add
imul
fst
pop
add
push
lret
add
fnsave
scas
push
cmp
jmp
loop
cli
adc
out
mov
cmp
jmp
push
pop
cli
and
leave
inc
in
pop
mov
push
and
out
insb
adc
arpl
jmp
fstpl
fwait
add
sbb
cli
jb
fdiv
add
pop
imul
fwait
movsb
cli
lcall
push
and
orb
pop
mov
test
mov
fildl
mov
mov
das
into
jmp
btc
sti
pushl
imul
sbb
cld
out
xchg
jp
outsl
dec
outsl
int3
add
addr16
ss
add
hlt
pop
add
push
xor
pop
popa
add
ret
add
mov
inc
stc
add
idiv
call
fdivp
notl
push
push
fs
incb
fcomip
addr16
push
add
jo
testb
jmp
fdivp
jnp
fcomip
cld
stos
pop
icebp
out
cmp
call
and
add
and
daa
sar
test
xchg
adc
je
faddp
outsb
jmp
call
push
sbb
idiv
out
pop
call
sbb
negl
pop
shrb
fcmovnb
fsubrs
pop
cmp
out
imul
dec
jp
adc
push
pop
jmp
mov
xchg
outsl
mov
add
std
cmp
std
dec
jno
std
mov
xor
pop
mov
add
pop
jno
mov
cmp
pop
add
jge
cmp
or
push
or
sbb
cmp
mov
lcall
fsts
mov
cmpsb
in
gs
xchg
add
add
ffreep
jne
sbb
ja
sti
jne
xor
cli
sbb
iret
add
scas
push
aas
or
mov
dec
xchg
ficompl
xor
hlt
loop
sahf
cs
sbb
jmp
jb
aas
adc
and
mov
rcr
push
add
fwait
std
pushl
add
push
pop
adc
mov
loopne
add
pop
add
std
sbb
pop
mov
mov
or
jle
subl
push
push
lods
pop
imul
into
mov
outsl
push
pop
andl
negl
imul
ret
inc
imul
add
pop
pop
mov
add
pusha
fimuls
cli
call
push
inc
pop
mov
imul
xor
sub
idiv
out
pushf
incl
jae
jae
je
and
idivb
ret
imul
lock
mov
test
adc
push
jnp
mov
ja
add
cli
push
jnp
mov
push
lahf
xchg
cld
xchg
sbb
cld
lret
scas
rolb
iret
ljmp
cmc
ljmp
aaa
inc
insl
cmp
pop
daa
ss
movsl
ss
cmpsl
lahf
pop
call
pop
popa
pop
call
scas
adc
loope
loope
out
mov
loope
sti
subl
cmp
negb
add
add
pop
pop
cli
mov
out
sbb
icebp
rorb
pop
mov
fs
rorb
lcall
cwtl
adcb
sbb
pop
bound
stos
insb
xor
mov
jp
loope
jno
imul
cmp
add
dec
fdivrl
and
push
inc
and
inc
mov
test
sbb
cli
cltd
es
or
add
add
fistpl
stc
add
add
pop
fs
jmp
fucom
je
add
sbbb
sbb
jmp
inc
push
mov
xor
jae
push
jp
and
enter
popf
loope
adc
jne
add
push
sti
decb
inc
or
mov
call
pop
pop
xor
add
dec
lcall
push
gs
mov
stc
and
das
rclb
add
add
jb
xchg
xor
add
mov
pop
jae
add
cmp
fwait
dec
call
jno
cli
pushl
add
test
std
call
into
aas
or
test
add
add
jne
mov
push
add
fimuls
popf
hlt
es
cmc
decb
jbe
add
add
mov
add
movsb
mov
ret
outsb
adc
repz
xchg
aas
sbbb
addr16
dec
mov
xchg
subl
cmp
pop
movsb
xchg
popa
int3
cmpsl
pop
push
add
inc
add
ficomps
lods
imul
push
jge
mov
pop
rol
add
add
sahf
pop
xor
fisttpll
lea
jmp
mov
call
and
push
call
adc
push
cmpsl
add
insb
incl
push
cmpsl
add
inc
iret
popf
mov
addl
jne
out
fidivs
outsl
xor
lahf
popa
fsubr
mov
test
int3
loope
sub
in
sahf
pop
cmp
fs
js
loop
add
popa
call
dec
lahf
sub
mov
mov
or
and
push
out
data16
jmp
iret
adc
pop
shr
fstpl
mov
inc
pop
add
add
fucom
mov
push
sbb
sbb
sub
loope
pop
and
jmp
push
push
in
fidivl
inc
add
sahf
flds
call
cmp
lcall
push
add
xor
test
or
das
pop
add
fistps
js
sahf
cli
incl
add
add
mov
ret
jmp
mov
xor
outsb
mov
jmp
add
je
adc
int
or
jnp
punpcklbw
add
call
xor
inc
push
cli
movsb
jle
pop
cmpsb
sti
dec
out
mov
mov
add
inc
fisubrs
add
add
add
pop
inc
jae
pushf
stos
and
les
xchg
ret
and
jg
xchg
les
test
call
adc
sbb
lcall
inc
sbb
es
stos
nop
cmp
or
jnp
mov
push
push
testb
jns
xchg
jb
outsl
adc
xabort
add
jmp
xlat
cld
mov
ja
pop
cmp
stos
fdivl
out
pushf
aad
lods
pop
sub
add
push
int3
lods
int
daa
test
call
stos
xlat
xor
out
pushf
aad
sub
pop
call
add
jo
dec
lret
lods
pop
call
rol
push
aam
sbb
mov
jne
and
mov
add
cwtl
fadd
mov
or
insl
xchg
push
sbb
jb
add
sbb
ds
adc
xchg
jl
jmp
and
sahf
push
addr16
ds
addr16
movaps
das
cli
hlt
xchg
outsb
inc
jmp
pop
jnp
jb
fdivr
push
dec
xchg
loop
jle
add
out
jmp
fstps
mov
mov
cli
lea
add
shrb
sti
popf
xlat
dec
adc
fistpll
test
std
incl
cld
mov
xchg
idiv
inc
lods
loop
inc
bound
test
and
sbb
xchg
stc
jmp
sub
pop
pop
jle
lret
movb
sti
or
jle
add
pop
mov
ret
scas
push
push
add
adc
xchg
std
mov
iret
fnstcw
and
cmp
or
mov
or
bound
mov
decb
ficoms
cmp
xor
mov
inc
fdivp
test
or
lcall
pop
ds
add
cmpsl
add
push
xchg
sbb
arpl
adc
fisubs
xor
int
jl
addl
addl
jmp
pop
ret
fbld
lock
rorb
mov
mov
test
or
push
sub
enter
pop
call
adc
add
jo
add
dec
pop
imul
negb
and
fcmovu
ljmp
inc
das
aaa
shlb
dec
loopne
push
xor
fstpl
mov
sub
into
fbstp
dec
in
stc
xor
cmp
call
xor
fdiv
add
shrl
pop
aad
out
and
aam
aad
sldt
int3
sbb
add
sbb
shr
jp
jmp
lock
cli
hlt
lds
jmp
mov
aam
lcall
inc
jmp
jmp
add
push
fwait
mov
aad
enter
pop
dec
pop
das
cli
cmpsl
dec
roll
jo
rorb
jmp
outsl
or
add
sbb
fstpt
lret
cli
out
jbe
jmp
or
cli
mov
add
sbb
cld
adc
push
jns
pushl
xchg
mov
gs
pop
add
mov
test
rclb
je
int3
lods
out
cmp
or
add
les
add
test
std
mov
fisttpll
sbb
push
in
call
dec
mov
call
insb
xchg
jg
rorl
mov
call
ficomps
ljmp
adc
ljmp
or
or
out
insb
sbb
add
addl
mov
lcall
sub
jmp
add
add
add
mov
gs
mov
cmp
inc
dec
leave
repz
cld
fwait
cwtl
iret
xchg
push
xor
push
and
cld
adc
jae
cli
sar
xchg
sub
push
icebp
shlb
adc
inc
jbe
fsts
cld
dec
pop
js
in
popa
ret
rcr
push
pop
push
fnsave
stos
imul
pop
add
add
xchg
shll
ss
inc
xchg
sarl
rclb
mov
rcrb
clc
dec
dec
cmpsl
add
aaa
xchg
sub
xor
lods
xor
xor
xor
aad
add
gs
mov
jb
call
xor
mov
ret
jmp
sbb
jmp
lods
out
lea
add
lahf
rolb
jmp
fisubrl
push
inc
cmp
cli
dec
pop
adc
fistpl
cli
call
loop
dec
cs
pop
fucom
inc
push
mov
cmp
pop
das
sub
cmp
xchg
js
fisubs
jle
sub
xchg
pop
enter
and
jle
push
jle
in
into
sub
add
and
in
xor
add
stos
out
andl
push
inc
push
pop
cld
adc
sub
cmp
mov
add
push
lret
mov
mov
mov
add
cld
adc
in
addr16
rolb
push
adcl
idiv
push
pop
jae
xor
std
add
inc
mov
pop
add
nop
and
in
je
icebp
incb
negl
test
jg
ficoms
add
imul
cld
shr
adc
faddp
mov
adc
sbb
int3
add
sbbb
mov
ficoms
cld
addr16
decl
lea
iret
add
jae
cs
adc
or
add
sbbb
test
iret
push
pop
dec
push
idiv
jmp
adc
fimuls
mov
ficompl
add
adc
mov
dec
out
stos
inc
jns
mov
inc
insl
pop
xlat
inc
mov
xchg
cmpsb
pop
fidivs
outsl
pop
dec
mov
adc
inc
xchg
pop
xor
xor
add
lret
mov
call
add
scas
frstor
xor
sub
int
fimull
cmp
ficompl
int3
push
sahf
pop
gs
int
cmp
cmp
xchg
int3
std
stos
into
sbb
add
xor
inc
mov
fadds
jae
stc
sahf
es
xchg
add
leave
popa
adc
loop
shl
inc
add
fnsave
push
push
cmpsl
xlat
inc
jne
xor
xchg
xor
jno
mov
jmp
sbb
jl
cmp
fstpl
movsb
aad
mov
cli
push
xchg
xlat
inc
add
add
cli
sub
jecxz
std
mov
in
push
pop
inc
add
jecxz
sldt
cmpb
pop
loope
in
negb
negl
lea
mov
adc
jp
stc
push
psubd
dec
addr16
mov
jle
cwtl
jecxz
add
pop
arpl
or
or
add
loop
std
enter
pop
pop
add
popa
mov
std
pslld
cli
incl
xor
add
fnstsw
cmp
lea
aaa
pop
arpl
ret
faddp
cli
sbbb
mov
pushf
sub
sbb
pop
pop
xor
add
dec
sti
sti
sub
loop
cwtl
out
repz
adc
sub
pop
hlt
mov
xchg
int3
push
sub
popf
xor
mov
inc
jae
scas
add
cltd
sbb
sti
xchg
and
add
add
rcrl
jns
sbb
sbbl
daa
cld
pop
add
xor
fists
cld
fwait
pop
clc
sbbb
xor
cmc
ret
rcrl
aam
pop
xchg
ret
lret
add
adc
frstor
mov
sbb
das
iret
xor
adc
add
or
sbb
imul
into
insl
xor
repz
mov
or
leave
cmp
jnp
adc
mov
pop
jmp
aad
push
add
loop
sub
lahf
add
push
sarb
shrb
push
jb
fcomi
out
rolb
jmp
fstpl
int3
ficompl
inc
add
and
add
ror
int3
jmp
jge,pn
xor
idivl
push
icebp
inc
lcall
fcompl
movsb
ficompl
rorl
and
cli
bound
mov
jmp
popa
add
jmp
jl,pn
rol
jl
lock
push
aas
inc
int
adc
incl
popa
add
add
pop
stos
xchg
pop
call
jl
add
negl
add
ljmp
dec
adc
cmp
adc
mulb
jecxz
pop
mov
inc
clc
push
add
les
fidivs
adc
jp
cli
pushl
faddp
lcall
jne
add
inc
or
mov
imul
sti
incl
add
dec
les
push
pop
or
cli
inc
jae,pt
cmp
roll
jae
cmp
fildl
aas
aas
xor
mov
mov
mov
stc
pushl
arpl
push
gs
cmp
mul
add
fsubr
je
mov
frstor
test
adc
xchg
add
dec
mov
mov
lds
fimull
pcmpeqd
popa
rcr
sub
pop
adc
add
shrb
add
fdivs
jl
lds
inc
es
call
cli
pop
fsubr
add
sub
sbb
js
popa
cmp
cltd
call
jns
popa
popa
test
pushf
jno
scas
pop
test
add
add
lea
icebp
fsubrs
femms
popa
test
sar
pusha
test
inc
pop
push
sbb
pusha
sub
out
push
adc
cmc
add
jb
pop
dec
pusha
sub
bound
push
data16
enter
fsts
add
jmp
jno
ret
outsb
push
push
xchg
dec
pop
mov
mov
mov
add
sub
sub
cli
xor
xchg
arpl
ret
sbb
add
sbb
shll
sbb
jo
push
inc
int
pop
mov
rcr
inc
icebp
and
or
add
loopne
xor
add
inc
std
lsl
pushl
inc
sbb
sbb
add
add
push
addb
mov
pushl
inc
inc
or
fisttpl
and
mov
cmp
lcall
call
cld
push
jne
dec
add
mov
jbe
inc
jae
add
lret
addb
mov
fidivs
adcl
call
inc
adc
add
mov
shlb
out
mov
ljmp
ja
mov
sahf
mov
inc
inc
mov
gs
cmp
loope
mov
jb
inc
dec
cld
stos
movsb
sbb
cmpb
cmc
mov
pushf
repnz
ljmp
mov
dec
shrb
out
dec
mov
rcr
add
adc
and
cmp
mov
clc
aam
pop
push
mov
pop
and
das
ret
fldl
sbb
jecxz
sub
insl
cmp
in
sub
push
sbb
cltd
cmp
jne
ficomps
mov
in
pop
cli
data16
add
mov
out
or
xlat
outsl
rolb
add
adc
lds
xchg
es
jp
lcall
xor
xor
sub
ret
fadd
cli
jmp
rorb
adc
shl
sbb
inc
fcompl
loop
dec
or
adc
outsl
inc
jmp
outsb
mov
je
add
loop
jmp
scas
cli
push
cld
fidivrs
jne
cmc
pop
enter
pop
jae
je
adc
jmp
fnsave
mov
cli
std
sarl
sbb
or
add
insb
sbb
incl
das
addl
outsl
lock
mov
outsl
fmull
pop
adc
xchg
jne
mov
add
add
push
int3
gs
test
outsb
fwait
xlat
scas
xor
iret
adc
pushl
inc
outsl
or
sbb
dec
lods
pop
xchg
push
push
pmaxub
xor
and
lods
push
rcr
sar
lret
push
mov
std
push
ja
out
fisubl
inc
out
jae,pt
fs
add
xchg
mov
or
or
jae
sub
cli
jno
cmc
mov
in
adc
add
pop
push
xchg
push
mov
jae
add
jmp
sti
and
dec
mov
cwtl
add
ret
sahf
mov
out
arpl
clc
inc
int3
je
push
icebp
test
call
add
push
adc
lock
call
inc
sub
ljmp
fdivrl
or
fs
sbb
add
xor
add
call
xchg
mov
ss
call
sti
push
int
cwtl
std
gs
enter
cwtl
std
imul
cwtl
mulb
push
fwait
or
lods
add
or
gs
ljmp
in
std
mov
and
jmp
stc
push
mov
shl
push
jge
sub
out
popa
cld
add
fnsave
fisubs
add
fldl
out
in
loope
jmp
mov
xchg
fdivrp
or
jle
xor
push
xchg
jne
add
pop
in
adc
ret
loop
mov
or
pop
add
ss
inc
test
sbb
leave
xchg
mov
cmp
or
cli
jge
call
mov
in
cmp
jge
xor
data16
pusha
add
jno
add
pop
mov
lret
mov
call
add
scas
sub
in
hlt
out
mov
push
std
inc
mov
lods
out
xchg
push
orl
subl
cli
mov
or
ljmp
pop
mov
ret
ret
push
push
stos
test
push
inc
sub
fadd
push
mov
cld
push
jp
adc
scas
sub
fnstcw
ret
mov
ficomps
fidivs
add
add
pop
pop
jmp
sbb
xor
add
cmpsb
push
inc
jae
aas
ret
pop
dec
jae
xlat
mov
jmp
cmp
mov
inc
add
and
gs
mov
in
mov
sub
fidivs
xchg
mov
fs
fstpl
and
mov
add
sub
and
and
call
sbb
add
cld
out
pop
std
loope
imul
mov
mov
cmp
pop
call
ret
or
iret
xchg
pop
enter
push
inc
jg
add
mov
or
jb
jle
sahf
add
arpl
push
into
sub
mov
ret
fdivrs
jne
xor
inc
xor
loop
push
pop
jbe
jmp
gs
push
mov
xchg
add
mov
ret
sti
outsb
lock
insb
les
shr
sbb
jmp
mov
ds
popf
mov
loop
add
xchg
mov
adc
ljmp
testl
mov
cld
decl
std
testb
scas
std
jne
out
bound
popf
popa
addr16
sbb
and
mov
call
add
inc
lds
sbb
leave
test
push
sub
dec
sbb
cli
test
dec
sldt
enter
push
dec
je
or
cmp
outsb
push
psubusb
push
push
xor
push
fdivrp
or
or
xchg
or
cld
repnz
mov
sbb
mov
push
mov
sahf
scas
out
repz
lcall
jecxz
push
mov
sbb
push
rcr
sub
rolb
push
xchg
mov
sub
xchg
and
mov
pop
in
xchg
sbb
inc
dec
cld
push
andl
scas
sahf
cltd
out
inc
pop
jg
cmp
fdivrs
fsubp
movsl
pop
push
and
aaa
scas
mov
inc
fildl
mov
pop
sahf
loope
lods
sbb
loop
or
out
insl
pmaxub
jecxz
add
pop
call
dec
icebp
mov
cmp
sbb
addl
pop
call
mov
mov
xor
adc
test
xchg
inc
cltd
mov
adc
stos
pusha
adc
in
push
lea
mov
imul
popa
cmp
mov
aad
cmp
add
cmp
inc
iret
jecxz
inc
test
jns
jle
loop
and
xchg
xor
ljmp
jne
pop
mov
push
fcomps
xchg
sahf
pop
cli
and
sbb
sbb
out
test
or
push
and
jb
in
in
imul
fstpl
push
mov
add
add
xchg
ljmp
es
or
mov
or
or
aad
call
ret
add
pop
mov
inc
in
call
jl
add
jb
or
add
dec
inc
mov
ret
cmc
mov
addl
jne
jecxz
cmp
in
cmp
gs
pusha
add
add
insb
rclb
pop
das
xor
jmp
repnz
push
cli
faddp
les
ljmp
jg
pop
mov
arpl
test
add
dec
movsb
jnp
mov
xlat
pop
cs
mov
lods
sub
inc
push
cmp
fldt
sbb
xchg
cmp
mov
incl
add
mov
repz
orl
vpmaxub
jp
sub
aas
mov
faddp
lea
pop
pop
mov
out
mov
outsl
or
sub
outsb
inc
fdivrl
sub
aam
mov
mov
call
mov
sbb
pop
add
sbb
jecxz
je
add
jmp
jno
mov
mov
and
leave
std
in
sub
fsub
push
shlb
or
rcrl
add
out
pop
mov
inc
add
add
gs
jle
stos
or
xchg
inc
add
fucom
je
push
pop
in
mov
outsl
pop
jmp
add
add
mov
ljmp
call
addl
ffree
mov
loop
test
outsb
dec
xchg
jmp
push
and
cli
insb
popf
popa
test
pop
add
push
push
fildl
cli
cmp
lds
ficompl
sub
fadd
out
xor
pushl
fdivrp
ud2
loope
add
add
add
push
lock
call
out
popf
test
pop
add
mov
out
lock
push
decl
jmp
mov
jg
adc
xor
pop
pop
mov
xor
les
add
fdivrs
hlt
mov
add
mov
jne
test
inc
jg
mov
incl
add
movb
cmp
adc
sub
arpl
xchg
inc
push
jns
sbbb
incb
test
ljmp
inc
out
jns
add
adc
faddp
jle
xor
add
jmp
stc
or
jno
fimuls
xchg
add
adc
loopne
pop
jmp
cmp
call
push
xchg
in
lock
or
sbb
or
fsubrl
data16
call
inc
or
pop
mov
ficomps
cld
pop
or
sar
sbb
sub
fsubp
out
push
sub
push
popa
mov
lds
inc
cmp
fucom
lods
and
pop
xchg
or
sub
loope
sti
mov
ficomps
mov
lds
mov
loop
or
mov
je
cmpsb
push
push
pop
inc
inc
jmp
push
push
jmp
and
cmp
cmpsb
test
and
xchg
movsl
loop
mov
jns
mov
mov
ds
shrl
call
add
fnsave
fsubrl
je
popa
xchg
cli
push
je
add
enter
xor
pop
mov
loop
xchg
sub
je
xchg
ds
adc
int
cli
push
ret
clc
in
ljmp
bound
sbbb
cli
repnz
cld
jne
dec
sub
popa
jle
add
ret
cmpsb
mov
hlt
je
icebp
mov
outsl
mov
add
inc
sub
shrl
mov
xchg
loop
decl
pusha
add
sub
fmul
jmp
mov
inc
psllw
jns
cli
push
lods
std
jne
dec
mov
lock
ret
dec
std
pushl
add
mov
inc
fidivs
mov
mov
add
mov
sarl
inc
or
paddb
aas
ret
lahf
pop
rcr
ja
and
cmp
roll
pushf
scas
push
int
int3
hlt
sarl
jle
jns
adc
imul
jbe
loop
icebp
mov
sub
repnz
cmp
xchg
pop
add
jne
add
sub
loop
or
xor
lods
jb
pop
sub
jnp
dec
shlb
and
adc
popa
xchg
add
xchg
jp
fisubrs
hlt
jp
xchg
cmp
call
xchg
aad
dec
push
xchg
stos
sbbl
lock
ljmp
fisttpll
stos
call
add
pop
imull
add
stos
xor
fidivs
out
ret
aam
and
loopne
push
sahf
add
xchg
pop
cmpl
fistpll
loope
arpl
das
arpl
pop
or
dec
stos
cli
shll
mov
mov
loope
mov
cli
sahf
pop
pushf
adc
fstpl
test
arpl
pop
sub
jle
add
ret
loop
mov
pop
mov
faddl
pop
or
lahf
mov
shl
cli
pop
out
jge
shrl
cli
pusha
cmp
inc
outsb
dec
mov
sbb
inc
pop
sub
sbb
outsb
sbb
cmpsb
dec
cmp
adc
sahf
cli
test
testb
cmp
adc
dec
nop
loop
iret
bound
addl
rcrb
mov
imul
mov
mov
add
es
leave
lock
sahf
into
add
sti
ds
incl
loope
add
xor
movb
pushf
mov
add
xorb
mov
xor
jns
addr16
mov
cmpl
lcall
dec
jge
add
ds
jns
add
popf
mov
dec
shrb
aas
pop
mov
jno
cmp
cmpb
negb
sbbl
or
cmc
xlat
push
adc
fwait
ficomps
jns
jnp
jp
or
sub
out
pop
or
les
ret
push
inc
mov
pushf
xchg
inc
add
xor
call
cwtl
out
minps
adc
cwtl
sbb
xchg
call
shlb
xor
cwtl
inc
gs
mov
arpl
add
and
enter
cld
sbb
dec
insl
sub
and
jle
mov
xchg
jmp
pop
sbb
xchg
call
add
add
add
movsb
shr
inc
mov
and
inc
in
cli
ds
jmp
pop
stos
cli
push
xchg
push
sub
xor
and
mov
cltd
fisubrl
std
je
stos
cli
push
sarb
inc
lcallw
xchg
add
pop
lcall
cmpsl
cli
push
lret
jmp
add
cmpsl
cli
bound
test
loop
ret
fdivrl
aam
cmc
and
out
test
lahf
mov
subb
mov
out
loop
stos
popa
add
div
pop
pop
out
pop
adc
push
out
push
call
fmul
push
repz
jne
jmp
add
inc
mov
adc
inc
add
mov
cmpsb
xorl
pop
call
push
shlb
adc
outsb
push
sub
push
test
inc
sub
cli
jae
and
or
std
or
iret
idiv
push
jg
fiadds
mov
movzbl
ja
faddp
push
sahf
and
decb
fidivrl
cmp
out
jnp
jmp
inc
movl
add
mov
call
stc
mov
pop
xchg
js
call
fs
out
popf
jg
jbe
mov
fwait
jl
inc
iret
js
fidivrs
aas
out
in
or
push
sahf
popf
scas
imul
cmc
mov
jbe
dec
dec
mov
mov
lds
movsb
popa
mov
stos
fidivrl
nop
cmpsl
loopne
sti
dec
xor
add
int3
push
xchg
mov
push
outsb
or
fdivrs
aam
loopne
or
jno
enter
fsubl
inc
push
call
add
popa
add
daa
stos
add
aam
jl
inc
popa
jmp
xchg
call
dec
imul
cmp
mov
mov
xlat
adc
js
pop
pop
inc
jns
add
out
xchg
loop
ret
subl
bound
bound
mov
mov
das
cs
fildl
mov
jne
bound
or
push
pop
cli
jl
or
cli
mulb
adc
dec
cs
cli
jo
fistpl
adc
jne
fsubrs
std
rcr
xor
lcall
fildl
xchg
lret
lahf
add
adc
add
cli
incl
pop
add
sar
pop
leave
xor
inc
mov
out
push
push
lahf
sahf
out
jmp
cmpsb
bound
sub
decl
mov
negb
jmp
repz
jmp
scas
andl
add
mull
ja
je
cli
orb
push
jmp
lds
cmp
add
adc
mov
jle
fidivrs
decl
jb
adc
inc
jbe
pop
fildl
jle
imul
popa
inc
stos
mov
scas
stos
addr16
xor
lds
add
sahf
mov
lds
das
or
add
and
mov
mov
push
or
add
mov
mov
push
or
loope
add
mov
jp
fbstp
icebp
or
sub
ficomps
and
pop
jecxz
pop
pop
call
jg
pop
call
mov
xchg
pop
xor
cld
hlt
mov
inc
add
pop
mov
pop
nop
std
dec
gs
shrb
sbb
xor
fsubrl
ss
js
aam
dec
xor
test
mul
sub
sub
int
movsl
imul
sub
jbe
jns
fwait
ror
add
mov
cmp
lahf
addr16
rcl
sbb
in
add
lahf
cli
jb
gs
pop
add
frstor
add
adc
test
popf
pop
add
aad
dec
xchg
loopne
out
pop
push
fs
outsl
in
pop
push
je
jnp
mov
fisttpll
aad
dec
xchg
aad
shr
fisttpll
mov
cmp
adc
nop
add
loop
and
jmp
or
inc
jne
or
jne
push
ss
outsb
add
and
add
xlat
lds
or
sbb
out
dec
pop
pop
cmp
jne
add
jne
scas
push
and
pushl
adc
and
or
inc
pop
sub
test
and
sbb
add
arpl
test
push
sub
divl
call
jne
add
pop
push
lea
cmp
insl
mov
je
push
xchg
xchg
call
push
mov
pushl
out
dec
xchg
mov
xchg
jmp
push
pop
xchg
jl
call
or
and
ja
jecxz
xchg
cli
shlb
call
add
inc
data16
jle
pop
out
gs
xchg
add
call
push
aas
pushl
add
mov
xchg
push
nop
sahf
xchg
jmp
mov
pop
or
cmp
pop
xchg
mov
sbb
test
lea
adc
pop
call
push
test
les
push
and
sbb
dec
js
add
fisubrs
call
in
add
sub
ss
add
call
pop
push
cli
insl
jno
popa
and
mov
call
call
add
sbb
add
xor
jns
adc
fstpl
xchg
push
adc
sahf
inc
fimuls
shr
mov
ficoms
imul
add
ficomps
mov
loop
ret
rorl
and
sub
loop
cmpl
and
xchg
out
loope
call
out
loope
call
add
gs
add
bound
adc
lcall
mov
lds
test
adc
jb
and
add
add
xchg
cs
cmpl
sub
out
mov
loope
pop
jmp
test
sbb
xlat
jns
inc
fwait
jbe
call
pop
daa
les
xchg
lds
in
sub
rolb
out
test
test
pop
add
inc
pop
add
aaa
pop
jmp
mov
add
add
add
imul
add
xchg
inc
ret
call
lea
and
pmullw
je
add
and
adc
notb
and
arpl
jmp
dec
sub
xchg
push
sub
jnp
sub
jae
sub
sti
mov
push
in
imul
push
cmp
add
xchg
out
sar
sti
mov
test
fidivs
jle
bound
add
pop
insb
mov
pop
call
adcl
adc
aaa
pop
call
mov
xchg
ficomps
sti
arpl
add
xrelease
call
inc
mov
call
std
or
sub
call
sub
add
sub
call
in
jge
call
cld
or
ljmp
scas
test
fistps
js
jb
and
pop
call
jl
pop
xchg
movsl
cli
pusha
enter
addl
int
addb
in
jmp
fstp
leave
pusha
fadds
mov
add
push
and
jo
aad
jmp
gs
add
fnsave
pop
and
pop
stos
jmp
pop
in
pop
mov
fstpl
adc
xchg
dec
aaa
adc
or
arpl
add
roll
jo
inc
adc
mov
mov
sbbb
add
pop
pop
mov
dec
enter
jp
add
pop
pop
sbb
mov
push
hlt
xchg
mov
out
and
and
pop
xorb
lea
test
pop
push
mov
sbb
xorl
add
sti
cmp
testb
xor
in
arpl
data16
pop
les
sbb
pop
loop
mov
mov
add
addr16
shlb
mov
pusha
cmp
push
and
sbb
test
push
xor
lea
fwait
ds
pop
testl
fiadds
cmp
push
divb
in
dec
mov
testl
ss
and
jecxz
sti
jno
push
add
stos
push
add
and
repz
aas
add
fnstcw
ficomps
ret
in
popa
add
pop
pop
sti
icebp
mov
fiadds
cmpsl
add
jmp
call
push
jno
in
imul
fadds
pop
pushf
jg
cmp
aaa
and
jle
or
lea
inc
inc
fsubrp
iret
stc
add
in
call
scas
stc
pop
lahf
rolb
pop
call
clc
and
clc
test
insl
push
fnstcw
add
xor
pop
sbb
mov
sahf
cmp
mov
daa
sub
loope
cmp
push
or
jmp
leave
or
shlb
sub
add
fiaddl
icebp
xchg
xor
jmp
xchg
jne
mov
fistps
cmp
cmp
test
jnp
pop
mov
jb
cli
sahf
add
xor
sbb
jne
xchg
fisubl
aas
pop
divb
mov
divb
push
lea
sub
mov
call
xchg
jne
add
aaa
xchg
jne
das
xchg
je
lahf
add
je
iret
ja
add
add
jmp
jp
in
sbb
sub
pop
add
fs
push
push
jo
fsubrl
inc
cli
mov
xor
and
push
mov
shl
push
mov
test
lcall
hlt
repnz
test
mov
test
dec
jnp
mov
and
pushf
cli
adc
sti
push
cltd
add
test
bound
leave
dec
dec
imul
sti
jmp
pushl
repnz
out
testb
fdivp
dec
ret
and
sbb
cli
shll
mov
test
pop
dec
lds
add
test
jmp
xchg
call
sbb
adcb
pop
mov
mov
add
imul
or
and
sahf
pop
adc
push
sti
inc
notb
pop
lret
cmp
pop
pushf
pop
arpl
les
mov
pop
aas
add
pop
addr16
les
and
add
push
inc
fsubp
and
lret
and
cwtl
and
ljmp
stos
push
bound
and
fstpl
sahf
psubusw
int
add
and
loope
mov
xchg
sbb
movsl
shll
cltd
jno
add
and
fdecstp
dec
addr16
add
loope
adc
jmp
cmp
jmp
xlat
dec
add
lds
rcll
add
add
sarl
icebp
orl
mov
ret
cmp
and
dec
scas
test
repnz
xorb
dec
pop
pop
add
inc
outsl
sbb
adc
jne
add
jecxz
sub
ss
arpl
test
leave
adc
int
mov
in
pop
add
push
and
out
sub
sbb
push
ds
mov
mov
rolb
pop
add
sub
mov
in
out
rcll
cltd
push
push
test
push
cmp
sti
test
cmp
outsb
or
pop
inc
add
dec
inc
add
inc
mov
xlat
push
inc
xchg
out
mov
mov
inc
fisubrs
js
push
shrl
sahf
test
jne
or
pop
test
cli
imul
outsl
xlat
mov
lods
sbb
jbe
cmp
push
incb
fiadds
lahf
in
mov
ficomps
push
bound
movb
cltd
call
xchg
call
add
out
fimuls
add
out
fdivp
cmpsl
cltd
sahf
pop
mov
cltd
pop
inc
fisubrs
lcall
loope
push
ficomps
out
push
call
cltd
sahf
pop
cwtl
jl
xchg
cmp
jbe
pop
inc
fimuls
fnstenv
jae
fimuls
repnz
lods
cmc
add
fs
mov
icebp
inc
jmp
sbb
mov
fimull
int
movsb
cmc
push
pop
and
xor
inc
popa
outsl
scas
imul
rcll
shll
popf
ss
adc
fstpl
or
pop
test
loop
add
xchg
movsl
or
mov
jmp
add
popa
xchg
call
lock
pop
cmp
xor
pop
add
scas
sbb
lods
sti
pushl
movsl
sti
inc
xor
daa
das
mov
add
sbb
push
xchg
in
sar
incl
std
lea
mov
mov
je
sub
push
test
add
mov
and
cmp
add
filds
add
add
pop
jbe
divl
notb
jle
stc
cmp
adc
ficoms
inc
sti
loope
dec
push
add
xchg
jnp
scas
in
adc
pop
xor
call
in
cmp
jge
add
mov
jmp
lds
repnz
add
movsb
xlat
jge
sti
adc
push
push
popa
jno
xchg
pop
call
shll
push
push
std
inc
fdiv
mov
andl
js
sbb
mov
mov
fidivs
lods
pop
and
xchg
xchg
mov
mov
scas
sbb
xchg
repz
pop
popa
push
add
mov
popf
xlat
daa
pop
jno
mov
pop
add
push
cmp
mov
push
adc
jo
sahf
pop
fs
pop
call
es
sbb
out
inc
aad
fadds
cmp
xchg
mov
out
aad
daa
push
adc
pop
pop
dec
push
add
mov
rcr
add
add
fldl
and
faddl
fstpl
movsb
movsl
sub
mov
xor
fs
push
test
jbe
stos
xchg
fcoml
call
ljmp
sarl
mov
push
imul
popa
test
jmp
sub
and
cmp
fnstenv
add
test
pop
xchg
push
cli
add
test
inc
neg
shll
dec
xor
loop
sbb
dec
add
arpl
xchg
or
fistpll
lods
add
adc
call
outsb
sbb
rdmsr
mov
inc
in
dec
out
inc
shrl
push
or
rorl
jmp
add
fistpll
ja
mov
add
jmp
idiv
sbb
push
lret
ljmp
out
add
or
addr16
xchg
lds
add
fidivs
mov
sti
test
mov
jle
pop
icebp
in
sti
fldpi
mov
mov
xorb
lock
sti
mov
out
pop
add
sti
mov
mov
xchg
scas
push
cwtl
arpl
xchg
fs
out
inc
in
test
adc
inc
push
sti
lods
mov
jne
xlat
push
mov
mov
out
and
jno
xchg
jmp
popf
pop
jno
xchg
jmp
shrl
mov
add
xchg
dec
cmpsb
or
ljmp
pop
and
fildl
inc
mov
mov
aam
mov
aaa
push
sub
outsb
push
iret
test
hlt
fstpt
xchg
repnz
clc
pop
jne
xchg
das
xor
scas
dec
insl
ret
rcll
add
mov
pop
jmp
bound
faddl
insb
rcll
rorl
add
cs
inc
lea
sub
xchg
sarl
adc
push
dec
push
jmp
arpl
pop
add
xor
cltd
movsl
loopne
je
add
stc
add
shrl
stc
push
jmp
es
mov
jmp
xchg
cmp
xchg
lods
xor
inc
das
add
add
or
push
scas
push
xchg
jne
add
mov
hlt
punpcklbw
xor
sbb
or
outsb
adc
je
add
and
or
stc
push
je
dec
or
and
test
or
push
cmc
adc
cmp
jne
add
push
orb
cmp
or
test
fcompl
add
add
xor
movsl
jge
push
fidivrs
jne
adc
or
js
out
push
jl
mov
ja
rcr
mov
cld
fnstsw
leave
out
push
add
or
ja
out
decl
add
xor
ss
out
decl
add
outsb
mov
add
add
orl
and
xchg
je
mov
or
jmp
faddl
pop
call
sub
mov
add
pop
outsl
inc
sub
adc
push
inc
add
pop
call
inc
adc
insl
fs
pop
hlt
jl
jno
dec
out
rcll
add
add
inc
mov
aad
call
fcmovnbe
sbb
jmp
sahf
ja
add
pop
pop
xor
imul
push
pop
sbb
in
add
lea
push
bound
test
cmpsb
add
jl
in
mov
bound
stc
xchg
dec
sar
cmp
pusha
sahf
jno
and
add
add
jmp
sbb
insl
fstpl
or
mov
fidivl
clc
test
push
stos
push
mov
sbb
rcll
push
jne
xor
add
inc
dec
shlb
pusha
push
jp
notb
addl
inc
add
call
test
cli
mov
mov
add
jns
notb
push
adc
clc
or
push
test
jns
call
jp
call
hlt
push
icebp
call
mov
ljmp
push
jl
cwtl
repnz
test
icebp
adc
pop
mov
xor
notb
ficomps
call
and
pop
jmp
jle
mov
add
jns
add
stos
insb
cmp
push
and
inc
jle
cmp
mov
je
mov
inc
in
bound
popf
mov
cmpsb
add
call
adc
je
jge
mov
push
pop
mov
mov
sahf
je
shrb
sti
rcrl
push
inc
fdivrp
cmp
pop
rcl
jne
jge
lock
outsl
push
sti
add
dec
gs
lret
adc
push
mov
movsl
mov
xchg
sub
neg
call
adc
insb
jecxz
inc
and
push
or
fiaddl
ficomps
pop
loop
std
jg
sbb
incb
adc
and
push
push
mov
call
pop
add
out
lods
divb
xchg
movsl
neg
daa
xor
mov
and
sub
adc
jge
out
repz
cmp
cmp
dec
fs
xchg
jmp
cmp
add
mov
xor
out
cmpl
or
icebp
or
cmp
test
ss
sub
add
sub
adc
js
in
push
sbb
dec
mov
addr16
movl
adc
call
gs
stc
jns
or
insl
push
cmp
push
enter
pusha
loop
leave
and
cmp
adc
jne
je
je
adcb
popa
dec
shlb
gs
jmp
or
push
lahf
jbe
incl
je
xorb
popa
arpl
ret
mov
fdivrp
pusha
jle
jne
aaa
notb
jmp
and
mov
cltd
push
pop
sub
mov
hlt
out
adc
cmp
je
into
cmp
je
xor
jne
push
loopne
mov
loope
mov
sbb
push
dec
in
lahf
add
movsl
jl
dec
xor
xchg
xchg
jbe
push
test
pop
jne
cmpsb
repnz
jo
fimuls
adc
xor
or
push
in
addl
dec
test
pop
inc
sti
jmp
xchg
fsubp
repz
iret
inc
add
je
scas
pop
add
push
imul
cmp
xchg
jmp
jmp
push
mov
out
inc
sbb
ret
add
add
pop
gs
loop
addr16
adc
jl
call
add
or
sbb
loopne
mov
jo
pop
in
xor
repnz
jp
mov
loope
inc
fidivrs
stos
out
sbb
in
sbb
popa
adc
jmp
jp
sub
adc
add
lahf
loopne
add
stos
out
jecxz
roll
popa
mov
popa
clc
fists
test
sbb
jns
insl
sbb
sub
mul
mov
sarl
add
jecxz
xchg
mov
dec
rep
lods
mov
or
xchg
lea
test
mov
je
stc
cwtl
repz
xchg
push
adc
sbb
mov
mov
pop
add
add
add
and
test
je
insl
sbb
loope
sub
je
push
adc
add
or
sbb
jb
gs
add
notb
cmp
mov
pop
add
or
jmp
test
adc
xchg
loopne
inc
mov
adc
mov
add
pop
popa
je
add
xor
mov
imul
sub
add
gs
inc
in
inc
inc
pusha
dec
mov
inc
or
cmp
test
shll
xor
pop
jo
adc
popa
test
adc
jo
push
add
fiadds
out
mov
je
sbb
sub
add
in
lock
imul
xorb
and
je
add
lds
mov
mov
xor
fnsave
cltd
xchg
cmpsb
adc
test
push
lds
or
add
or
sbb
into
sbb
repnz
or
mov
movsb
fiadds
sub
cmp
adc
dec
or
dec
sbb
call
xor
lock
inc
addr16
faddl
add
jge
inc
ficoms
pop
les
jbe
repz
jecxz
lds
testl
pushf
in
add
jecxz
aad
in
inc
fisubs
mov
xchg
push
push
xchg
sbb
jmp
adc
daa
add
push
xor
pop
pop
aam
outsl
cmp
adc
in
scas
jbe
cld
inc
out
rcr
int3
dec
mov
or
add
pop
addr16
into
pop
add
or
mul
jb
lea
add
fidivl
icebp
push
jb
xchg
out
xor
rcrl
and
test
lahf
pusha
add
shlb
lods
js
fucomp
js
aad
xor
mov
std
push
loope
call
movsl
je
jmp
add
adc
jmp
dec
xor
add
aam
lcall
pop
add
aaa
mov
shlb
popa
arpl
xchg
cmc
cmp
nop
xchg
jmp
xor
test
idiv
aaa
or
leave
cwtl
imulb
xor
inc
push
test
add
fiadds
rclb
inc
mov
insl
push
adc
add
mov
das
mov
xor
repz
inc
add
hlt
cmp
nop
xchg
push
call
cli
cltd
je
push
mov
lea
sub
mov
dec
in
pushl
xchg
jae
lret
ljmp
jb
dec
adc
add
pop
mov
fimuls
mov
mov
leave
sbb
sbb
jg
gs
push
add
inc
xchg
adc
cs
ljmp
add
dec
int3
cli
mov
or
in
out
add
je
add
into
aas
cli
xchg
add
and
mov
xchg
fimuls
cli
rcrb
clc
fimull
add
add
nop
xor
ror
pusha
inc
fsubp
imul
add
shl
pusha
inc
fidivs
insl
fiadds
call
pop
or
dec
dec
xchg
xor
adc
outsl
sahf
adc
and
adc
ficomps
xor
jne
adc
popf
jno
xchg
pop
sbb
add
loopne
fmull
jae
or
dec
lods
lock
inc
add
loopne
sbb
ja
mov
add
cmp
je
cmc
stc
sahf
adc
mov
cli
xchg
test
js
pop
mov
jp
cmpsl
lahf
jbe
imul
jmp
adc
mov
jle
bound
jbe
data16
pop
shr
pop
push
out
xor
sub
je
icebp
mov
or
mov
fstp
rcrl
ficomps
cli
add
or
faddp
int3
add
aaa
test
std
mov
addb
adc
addl
cli
cmpsb
pop
add
adc
mov
outsb
or
pop
notb
jb
jne
lahf
test
inc
xchg
or
adc
test
jb
addl
mov
mov
add
test
sbbl
in
jl
pop
add
inc
xchg
xchg
sbb
call
fsubrp
cmp
inc
and
fiadds
add
push
addb
aam
rorb
addl
aam
mov
sbb
xchg
je
addl
aam
xchg
test
push
jo
adc
add
test
mov
ret
clc
pop
and
dec
sub
into
xchg
mov
fimuls
adc
mov
ljmp
cmpb
pop
call
mov
cmp
ret
call
push
loop
in
adc
stos
pop
dec
popf
call
inc
popa
push
aam
icebp
pop
cmp
add
lcall
ret
in
test
push
jmp
addr16
rorb
test
arpl
cld
sub
sahf
in
arpl
or
sbb
jle
pop
pop
ret
rcrl
pop
popf
pushf
or
fsubrl
pop
out
loop
jmp
jo
push
mov
add
adc
or
bound
inc
cli
hlt
inc
pop
inc
jmp
add
popfw
jne
or
push
jmp
push
in
lods
add
mov
pop
stos
out
in
push
fstpl
push
ss
add
fucom
test
jb
sbb
std
adc
fst
fldenv
and
bound
test
scas
imul
add
pop
xchg
mov
roll
jae
movb
mov
jp
dec
adc
xor
mov
or
sub
in
in
adcl
popa
add
xor
dec
push
pop
adc
mov
leave
push
jp
pusha
push
xor
mov
add
pusha
dec
lret
push
xor
incl
adc
lret
and
mov
add
xor
mov
test
jb
mov
cli
aad
in
dec
iret
lea
sti
sub
sar
push
adcl
ret
je
adc
mov
add
sbb
adc
dec
icebp
inc
test
mov
aas
fdivrp
inc
adc
mov
mov
pop
push
cmp
insl
call
add
push
inc
mov
sahf
outsl
rcr
inc
pop
add
cmpsl
rcll
addr16
mov
leave
and
dec
sub
pop
fstl
imul
jnp
dec
in
sbb
pop
call
jnp
addr16
test
test
addr16
or
pop
insb
data16
jl
lcall
push
or
jnp
xor
rclb
sub
and
and
fnsave
scas
push
fcoms
mov
push
rorl
enter
pop
xor
lock
fstpt
jmp
cmp
mov
ficompl
push
test
fcompl
jb
insl
arpl
pop
arpl
movsl
push
scas
aad
mov
fidivs
hlt
pop
xor
push
imul
divb
outsl
loop
addl
or
add
pop
loopne
mov
and
data16
cli
xchg
jne
mov
data16
sub
fadds
stos
jne
jg
pop
xchg
inc
adc
lcall
jmp
dec
scas
pop
add
fiadds
add
or
push
push
iret
adc
add
xchg
rcrb
js
inc
test
imul
bound
inc
inc
ljmp
je
jle
sbb
push
adc
aas
push
mov
adc
jle
push
add
pop
xor
add
add
divb
xchg
into
mov
add
jbe
mov
mov
stc
out
out
mov
mov
add
je
inc
dec
neg
aas
pop
or
mov
test
dec
sub
xor
add
mov
push
push
data16
ret
rcl
cs
sub
pop
fisttpll
sahf
jbe
shlb
inc
add
scas
int3
je
es
adc
add
push
gs
stc
test
push
add
js
into
add
je
pop
sbb
shll
ljmp
dec
call
sub
pop
call
xor
pop
and
mov
add
mov
ficomps
les
pop
cwtl
int3
test
pop
call
xor
loopne
sbb
test
add
sahf
push
add
fsubrp
add
loopne
push
enter
and
pop
fldl
fistps
push
fdiv
out
fdivp
add
sub
fsubrl
push
inc
jmp
fstpl
cmp
pop
add
fstp
dec
fldenv
add
fucom
sarl
pop
dec
notb
cmpsl
push
pop
push
push
mov
add
mov
add
lds
jmp
mov
jmp
lods
cmp
dec
insl
rol
add
or
rol
add
add
sbb
aad
fisttpl
xor
jmp
cmp
add
or
xor
xchg
mov
aas
adc
xchg
xchg
popa
add
ljmp
add
pop
add
add
sbb
xor
ficoms
imul
inc
pop
jne
xor
sti
adcl
add
adc
mov
outsb
add
or
jnp
push
mov
in
mov
add
dec
decl
or
xor
adc
mov
sub
add
add
fisubrs
and
push
add
add
add
jb
cmpb
jne
pusha
add
dec
inc
ljmp
leave
or
mov
sbb
bound
fdivp
mov
andb
out
aas
sti
bound
dec
or
jbe
sbb
sar
xchg
jae
xchg
les
xchg
jle
sbb
incl
dec
push
sahf
jbe
sti
add
lret
lcall
stos
sbb
aaa
sbb
push
pusha
arpl
aam
add
adc
out
in
sub
popf
hlt
push
imul
incb
imul
xor
shll
pop
lds
aaa
imul
ja
sub
leave
movsl
jbe
insl
ficomps
lods
icebp
popf
test
push
xor
mov
pop
sbb
lcall
outsl
xor
add
dec
pop
xor
aaa
cmp
push
in
pop
or
add
lahf
in
xchg
add
pop
jb
jb
rorl
dec
mov
rcll
lret
rorb
aam
andl
scas
push
call
rorl
cmp
cld
jne
inc
jmp
or
jne
inc
fstpl
sub
push
xchg
add
and
adc
insl
pop
add
fstp
mov
fcompl
mov
rclb
add
call
jmp
ret
cmp
mov
je
gs
or
and
inc
dec
lcall
shl
in
adcl
inc
sbb
in
sbb
xor
pop
xchg
push
test
pop
add
add
mov
pop
jp
sub
xor
notl
sub
test
mov
pop
jp
mov
outsb
jle
aaa
pop
sub
sbb
add
jle
xor
dec
outsb
outsb
adc
ss
push
lods
pop
ret
icebp
repz
add
ds
and
lcall
add
add
add
add
mov
fbstp
push
icebp
popa
idiv
sarl
icebp
aas
fdivrp
movsl
jg
out
repnz
pushl
movsb
sub
jmp
ljmp
pop
sub
stos
cld
cli
lret
fsubrp
aas
ficomps
das
push
mov
idiv
jmp
out
aas
fdivp
dec
or
addr16
fidivs
icebp
sbb
repz
dec
gs
pop
call
add
add
sbb
sub
icebp
pop
outsl
aam
addr16
jg
call
in
mov
push
fwait
out
jge
sub
popf
fstpt
pop
call
dec
pusha
cld
pop
or
pop
cli
cmc
out
ficomps
jmp
sti
inc
fidivs
int3
sbb
fadds
pop
call
fldpi
or
inc
and
add
or
jle
in
sub
dec
add
fstpl
je
fs
dec
pop
add
fsts
mov
add
sbb
jmp
jmp
dec
imul
cmp
jo
cmp
xorl
aad
jmp
sbb
ds
sbb
add
popf
push
bound
or
aas
cwtl
push
fstpl
xlat
movsl
push
sub
lcall
add
and
aaa
mov
divb
out
pushf
inc
and
ljmp
cmpsb
adc
ljmp
or
push
adc
pop
enter
out
add
or
push
call
add
dec
insl
idiv
jnp
jne
and
inc
ret
mulb
mov
in
idivb
gs
mov
ss
je
pop
xor
jne
push
mov
adc
cli
add
sti
jne
mov
adc
xor
pop
sbb
push
and
add
add
jl
jne
xchg
in
push
pop
xor
lds
xchg
stc
jns
xchg
out
cs
loope
stos
adc
pop
adc
dec
aaa
pop
sti
push
dec
mov
add
adc
adc
adc
imul
mov
dec
mov
roll
pushl
sar
ret
outsl
push
add
lret
or
cmc
rcll
ret
jecxz
out
mov
aaa
out
std
dec
lret
popa
mov
fadds
mov
lret
mov
fisubs
lea
pop
int3
shl
cmpsl
cmp
cwtl
aad
push
mov
cmc
adc
fadd
dec
data16
pop
aad
mov
clc
pop
mov
loopne
shl
add
sbb
add
dec
repz
ds
int
and
pop
cmp
push
push
jne
bound
je
push
rcll
pop
rolb
fstpl
push
out
push
rcrl
into
lock
call
push
adc
jmp
sbb
xchg
loopne
imul
mov
jne
xor
loope
std
add
cmc
xchg
xor
push
lcall
push
sbb
or
decl
divb
sbb
je
mov
scas
adc
ret
push
mov
add
dec
mov
jae
sarl
loop
sbb
testb
mov
xchg
adc
xchg
jno
dec
add
je
das
data16
decl
adc
add
shlb
jne
mov
jne
sbb
repz
add
pop
adc
ret
test
gs
popa
dec
mov
imul
mov
dec
divl
mov
mov
adc
sbb
call
jne
mov
adc
jo
or
mov
inc
pop
pop
sbb
push
arpl
add
add
cwtl
xchg
mov
out
pop
mov
sbb
pop
xchg
adc
mov
idiv
mull
sti
jae
push
sti
imul
out
sbb
mov
outsl
scas
lods
bound
icebp
pop
in
push
popa
sar
aaa
incl
jmp
or
clc
popa
in
add
outsb
and
add
shl
lods
sbb
in
lods
push
or
negb
pop
lods
pop
jge
inc
shl
mov
fidivs
sysret
dec
insb
sub
pop
sbbb
ror
xor
sahf
pop
xor
inc
ficomps
push
pop
jno
add
pop
push
add
jg
pop
negb
shll
dec
adc
mov
add
add
jle
mov
xchg
add
xor
jae
leave
sub
jne
cli
gs
jb
jmp
fs
lods
xor
pop
add
cmp
mov
mov
popf
add
adc
fsubrp
push
xchg
in
push
ret
ds
ljmp
add
add
shlb
je
in
add
test
shlb
push
xor
xchg
add
mov
dec
ljmp
mov
push
mov
fucomp
xor
pop
mov
pop
add
je
add
sub
test
lret
inc
test
lret
inc
jnp
xlat
mov
mov
imul
test
add
adc
pop
lods
mov
mov
mov
cmp
fisttps
add
jno
in
pop
jecxz
icebp
jecxz
es
fidivrs
push
xchg
dec
sub
cmpsb
in
cli
test
mov
imull
or
inc
sahf
push
addl
rorb
pop
stc
xchg
fiadds
inc
add
ss
scas
outsl
add
dec
xor
adc
inc
push
and
decl
shll
ficomps
das
testb
mov
jbe
lret
add
loop
mov
push
pop
nop
push
aam
call
sub
loope
pop
call
stos
fsubl
add
insb
fiadds
add
insl
orb
pop
in
je
jne
outsb
push
sbb
sbb
stos
pop
jo
add
je
popa
mov
loopne
fsub
repnz
out
imul
add
push
fsubrp
test
pop
add
lods
mov
jmp
pop
fnstsw
inc
es
es
mov
or
sbb
xor
outsb
ja
shl
push
call
mov
cli
jmp
test
insb
pop
jp
jmp
decb
cli
es
push
or
push
cli
jmp
pop
push
cli
nop
outsb
or
fst
mov
jmp
outsl
lret
jg
add
aaa
loop
and
pop
add
add
xor
les
ret
add
pop
sub
and
pop
add
jp
and
push
pop
mov
rorb
inc
js
pushl
push
mov
test
mov
pop
jp
jecxz
add
pop
add
scas
cmp
ja
sub
pop
add
add
xor
cmp
pop
add
fxch
out
ret
aaa
out
and
add
push
mov
add
inc
xchg
ss
add
mov
add
decb
jp
adc
pop
lds
fmulp
dec
and
mov
int
icebp
arpl
ficoms
add
add
mov
and
inc
decl
scas
jne
filds
shr
inc
add
inc
lock
adc
ud2
cmp
test
add
decb
fdivl
push
or
add
and
pop
jmp
mov
fs
jg
pop
call
dec
testb
add
out
loopne
fnstcw
loopne
loop
loopne
fstpl
add
fldenv
fcomip
loop
loop
filds
add
inc
sahf
mov
ret
fidivrs
pop
call
fbstp
decl
xor
lods
insl
jg
jge
add
out
flds
and
jne
movsl
and
sbb
sub
ds
call
pop
shll
jmp
mov
test
lea
in
add
pop
xchg
fcompl
sbb
cli
aam
pusha
inc
jmp
and
iret
stc
pop
out
xchg
xor
push
add
fstpl
clc
mov
dec
ja
jbe
jmp
sbbl
add
pop
sub
xchg
clc
pop
mov
push
fs
dec
lret
cmp
push
call
or
mov
add
cmp
add
stos
jmp
dec
cmp
add
xchg
jle
xor
mov
and
add
je
pop
jmp
mov
ljmp
imul
and
add
pusha
sub
xor
xchg
adc
ficoms
add
aaa
jp
add
push
pop
mov
shlb
out
les
xor
add
xchg
daa
jg
push
jl
fiadds
xchg
fisubrs
inc
add
mov
ret
call
incb
adc
adc
or
pop
mov
pop
push
decb
or
jge
dec
jle
aaa
jmp
imulb
add
movsl
sar
jg
push
cmp
ljmp
out
lahf
pop
addr16
call
out
bound
std
shl
jge
sahf
pop
aam
andl
repz
pop
xchg
scas
rcrl
pop
pop
push
push
addl
xor
pop
inc
push
cmp
fnsave
out
pop
shlb
orl
sub
add
fsubrs
mov
scas
jle
dec
outsl
push
rorb
jle
popa
dec
xchg
loopne
pop
jbe
add
pop
mov
sbb
lock
fidivrl
maxps
out
sbb
inc
icebp
fmul
inc
outsl
dec
xchg
dec
das
test
dec
mov
push
test
dec
lea
fidivs
loop
test
mov
loop,pn
loope
pop
iret
adc
popa
push
jne
inc
lahf
or
leave
xor
test
fcomip
sarb
arpl
push
sub
mov
inc
cmpl
and
inc
jg
ja
iret
xor
aas
or
add
js
push
mov
fsubrp
test
add
add
imul
lock
out
add
imul
mov
add
ret
out
dec
idiv
popf
insl
mov
pop
ljmp
sub
outsl
sub
cmp
lea
dec
idiv
fisubrs
adc
ljmp
call
imul
inc
add
xchg
mov
les
sbb
fidivs
mov
xor
es
mov
hlt
ja
es
dec
enter
or
or
fidivrs
or
imul
add
fcompl
sbbl
ja
pop
pop
jno
rclb
add
int3
hlt
inc
pop
mov
jl
sub
mov
lret
nop
push
push
jnp
jne
fistpl
loope
add
pop
push
mov
dec
call
pop
jmp
add
faddl
mov
lds
push
ljmp
push
dec
ret
scas
addr16
push
pop
insb
into
jmp
sub
fsts
rorl
scas
or
dec
add
loope
inc
jmp
ds
cli
jmp
es
push
sub
add
add
or
ret
inc
push
push
sbbl
loop
mov
mov
mov
mov
cmc
rcrl
mov
out
arpl
xor
cwtl
add
arpl
cwtl
xor
dec
ror
inc
xor
jmp
fcompl
xchg
jns
stc
add
test
subl
or
cli
push
jne
cmpl
dec
call
xor
add
cltd
cmp
call
mov
pusha
pop
addl
mov
jmp
mov
add
jg
jne
fdivp
add
sub
pop
jne
das
je
add
out
xor
orl
dec
pop
sub
pop
jne
fsubrp
inc
cwtl
fidivs
decb
xor
inc
clc
xchg
xor
out
add
jg
ds
push
incl
add
add
xor
mov
add
mov
dec
dec
xor
lcall
daa
jne
imul
adc
fidivrs
std
addl
adc
arpl
xor
sub
jae
fs
mov
call
and
mov
cli
mov
jge
xor
rcrl
add
add
sub
or
dec
add
loopne
xor
and
leave
ja
pop
jecxz
cwtl
mov
xchg
call
xchg
mov
das
out
cld
pop
popf
popf
mov
fidivl
cli
mov
mov
fwait
add
out
aad
push
and
sbb
pop
dec
jge
dec
outsl
aam
pop
dec
add
xchg
dec
add
add
jne
mov
scas
cli
ss
lods
jmp
out
dec
sbb
bound
mov
iret
ljmp
xchg
mov
arpl
xor
sbb
fnstsw
mov
mov
inc
pop
inc
inc
adc
mov
push
push
lock
jmp
jb
add
pop
add
xor
test
negb
jmp
xchg
clc
ret
negl
cmp
mov
divb
cmp
int
xchg
mov
adc
lsl
add
and
add
inc
int3
roll
jne
scas
dec
lea
add
jne
decl
stos
not
ret
add
das
ret
push
test
jne
scas
dec
lea
ret
add
inc
adc
das
or
cli
cmp
fidivs
dec
mov
cmp
cmp
fcmovu
xor
xchg
mov
add
jns
inc
addr16
ret
add
jle
incl
add
lods
loopne
nop
add
xor
inc
xchg
cmp
fidivs
dec
or
cmp
hlt
std
test
or
das
push
aas
sub
shlb
jge
cmc
jmp
cmpsl
or
mov
pop
call
out
pop
call
rclb
cmpps
scas
jl
aaa
add
insl
aas
fidivrl
adc
add
dec
sub
loop
nop
test
call
cmp
xchg
test
sti
sub
xchg
sti
or
xchg
sti
or
or
jne
daa
xor
pop
movsl
test
mov
pushf
test
stos
inc
inc
push
pusha
fwait
add
int
add
fnstsw
or
sarl
or
ss
add
add
out
test
add
jae
inc
pop
pop
and
add
push
popf
dec
aas
inc
dec
cs
clc
shrb
jle
pop
add
je
test
in
add
adc
test
ficompl
imul
mov
mov
push
andl
add
pop
ret
call
pop
mov
lods
mov
ret
mov
jge
test
adc
push
jge
pop
push
xchg
pop
add
insb
js
punpckhbw
mov
loop
mov
inc
sub
pop
out
add
dec
scas
inc
mov
dec
clc
mov
cmc
push
clc
stos
jmp
punpckhbw
sub
add
aam
mov
ret
je
fisubrs
psubw
jl
mov
or
daa
sbb
dec
adc
mov
xor
or
jns
gs
or
cmc
mov
xor
lea
xchg
push
push
xor
jp
jmp
xor
push
mov
cmpsl
notb
mov
push
frstor
add
das
insl
add
in
js
loope
notb
lret
lods
sahf
mov
xor
add
out
xchg
jns
fcoms
call
push
scas
shl
add
ficomps
push
dec
pop
add
or
shrb
mov
ds
add
pop
call
mov
cwtl
fsubrs
add
and
out
arpl
mov
dec
popa
mov
hlt
mov
mov
andl
test
push
xchg
xor
pop
shr
lods
fwait
arpl
add
outsl
mov
fdiv
orb
inc
jg
loop
scas
call
adc
lods
add
aad
shlb
dec
add
out
cli
pop
push
jecxz
fstpl
dec
dec
pop
cli
push
inc
inc
xlat
outsb
fstpl
and
inc
or
nop
inc
je
jl
cs
mov
dec
jle
inc
fsubrp
or
mov
push
push
mov
or
popa
les
jmp
flds
adc
sbb
cmp
push
add
add
add
inc
or
push
and
clc
rcr
test
jne
jmp
inc
or
pop
and
xor
movsb
and
add
and
add
and
adc
add
inc
dec
add
mov
je
mov
jmp
inc
bound
add
sbb
xtest
xchg
and
popa
inc
decb
or
pop
push
lcall
mov
pushf
jge
fiadds
ror
pusha
add
inc
mov
sub
out
inc
mov
pop
test
cltd
cmp
or
fiadds
push
std
out
lret
push
jno
adc
jmp
or
add
ror
enter
cmc
pop
adc
lret
ficomps
test
jl
push
leave
pop
jae
add
shrb
mov
adc
repz
push
mov
xor
cwtl
mov
popa
mov
inc
rolb
xor
jne
loop
mov
out
inc
fstp
adc
jle
pop
mov
das
add
cmpsb
inc
stc
hlt
cmp
sbb
mov
in
cmp
call
inc
jge
jmp
cmp
sbb
dec
addb
ds
add
pushf
add
mov
ffreep
shl
out
out
push
cli
pusha
pop
cmp
in
movq
pop
addr16
push
leave
sti
add
popf
pop
cs
or
push
dec
loope
fs
mov
xchg
fstpl
fld
xchg
fisttpll
out
loopne
fs
or
inc
lock
or
shll
push
rorl
jne
pop
mov
aaa
xorb
add
dec
call
pusha
push
std
call
adc
call
lea
add
sub
in
andl
inc
outsl
jmp
lea
push
push
dec
sub
inc
inc
int
cld
popa
add
mov
test
clc
test
cmc
jne
or
clc
add
add
mov
call
jmp
call
cmc
push
scas
mov
orl
cmc
push
fisubrs
add
add
fmulp
lds
inc
cld
cmp
mov
in
bound
ljmp
ret
loop
vmovsd
push
popf
adc
pop
lret
inc
lret
dec
jo
push
ss
cli
cmp
pushf
push
mov
mov
cmc
movsl
inc
incb
aam
adc
idivb
addb
or
adc
cld
add
je
es
addw
mov
add
ret
xor
pop
add
imul
faddp
call
pushf
test
call
pushf
lea
cmp
dec
mov
loop
cmpb
call
xchg
imul
rorl
adc
add
lock
ss
scas
inc
lea
xor
aas
int
popa
call
test
pop
add
fldl
sub
out
mov
fwait
cmc
jo
cmp
push
add
adc
sub
out
popf
and
nop
mov
mov
push
fwait
stc
stos
lods
and
pop
add
add
bound
shl
jl
call
jne
mov
mov
aaa
pop
push
or
xor
jmp
popf
pop
cs
lods
movsb
cli
pop
push
cmp
fs
pop
add
adc
jne
xlat
into
test
test
mov
add
in
int3
pop
add
xor
xlat
bound
cmp
pop
call
add
or
or
mov
add
cld
daa
adc
adc
int3
je
call
lea
pop
add
aaa
pusha
sbbb
rolb
jne
xlat
jae
call
xlat
leave
call
fs
call
in
int3
fidivs
jne
sarl
or
inc
fimuls
xchg
fiadds
add
out
sahf
cmc
cs
jne
negb
sbb
push
imul
call
push
adcb
fiadds
xor
mov
mov
mov
imul
xor
js
cltd
sti
push
add
imul
push
mov
sub
test
add
xchg
cwtl
lret
jge
inc
cmpsl
push
mov
push
lret
push
xor
mov
test
cwtl
test
daa
add
inc
stc
add
pop
pop
push
orb
leave
push
mov
stos
sbb
out
push
mov
cltd
jmp
arpl
inc
dec
test
pop
sbb
cmp
and
mov
push
dec
xor
cwtl
mov
sub
add
gs
xor
cwtl
adc
dec
pop
cli
jl
cs
dec
lahf
cli
mov
sub
and
dec
loop
sub
inc
test
ljmp
jmp
push
jb
xchg
jno
inc
loope
xor
sbb
sarl
xor
les
and
mov
add
loop
add
sti
push
jno
cli
aam
xor
add
pop
jne
gs
or
jb
gs
je
cli
add
jmp
mov
sub
mov
lock
in
call
enter
in
xor
lods
shr
or
mov
add
inc
mov
jge
or
jne
into
cmp
shlb
dec
stc
incl
add
jge
sti
pop
divb
into
cmp
leave
je
add
lcall
mov
ret
push
mov
fsub
clc
xabort
add
dec
push
push
xrelease
xor
push
arpl
fidivs
int3
push
gs
adc
adc
push
xchg
mov
mov
push
push
mov
add
or
mov
add
inc
cs
fdivrl
stos
xchg
lea
pop
in
addr16
pop
xor
test
dec
adc
arpl
adc
push
xchg
xchg
cmpsb
jb
xchg
test
pop
cmc
jae
mov
shlb
and
shll
add
adc
pop
call
xor
add
loop
lods
ret
adc
xchg
lcallw
je
pop
lcall
aad
insb
ret
dec
dec
pop
aas
add
aas
cli
xchg
insl
aas
add
lods
jne
stos
xchg
or
mov
ficomps
cmpps
scas
pop
call
add
push
fistl
sbb
arpl
dec
mov
lods
push
mov
add
xor
cli
pop
push
xor
fstpl
jmp
pop
movsb
add
int
pop
or
fst
dec
std
popa
or
inc
pop
fstpl
test
outsb
in
aad
cs
fstp
sbb
inc
mov
lea
ss
xchg
push
adc
sub
daa
cli
adc
xchg
jmp
add
add
add
loope
cmc
add
inc
jmp
inc
lea
add
inc
cld
sbb
popa
add
jb
divb
leave
add
jae
push
push
pop
popa
sub
test
push
pop
dec
ljmp
ja
add
adc
dec
mov
sub
lcall
add
bound
mov
push
sbbb
xchg
addl
ja
loop
in
popa
dec
push
aam
adc
xchg
mov
fldl
orl
mov
sti
leave
cs
adc
inc
js
xchg
mov
sbb
push
gs
test
leave
cmc
or
in
idiv
jle
cs
add
faddp
dec
or
ss
pop
gs
jb
adc
pop
out
je
jg
adc
pop
push
ljmp
add
inc
orb
xlat
out
add
add
xor
mov
add
pop
pop
cmp
cmp
sbb
push
ficomps
add
outsb
pop
jg
sub
cwtl
jp
add
aad
mov
sbb
xor
call
mov
pop
call
xchg
or
daa
add
jmp
inc
mov
lea
lret
mov
xchg
pop
call
repnz
aaa
push
fildll
adc
ret
aad
lahf
add
pop
add
fcomps
gs
test
add
fcompl
rorl
mov
pop
add
cltd
xchg
dec
lcall
push
inc
mov
mov
jmp
fstpl
lods
lods
aam
cmp
mov
aam
dec
push
or
pop
imul
out
out
mov
cli
mov
pop
and
mov
repnz
sahf
lret
add
inc
add
fiadds
push
aam
adc
xchg
or
shlb
jae
mov
cmc
jne
fmul
jp
cmc
mov
add
fdivs
lock
addl
xchg
stc
push
jle
lds
outsb
xchg
leave
lea
cltd
push
push
dec
insb
mov
xlat
adc
add
pushf
add
push
mov
fldl
xlat
dec
lock
add
and
mov
cs
loop
loop
popf
dec
fdivrp
or
ja
xchg
add
mov
scas
mov
popa
mov
fcomps
ret
ss
fsub
jbe
mov
add
cltd
cmp
add
cli
sub
xchg
sub
add
test
adc
or
jne
aas
mov
xor
mov
cli
xchg
mov
add
adc
mov
pop
xor
pop
out
cmc
mov
or
mov
mov
mov
notl
and
fdivr
dec
pop
call
add
add
push
mov
lret
sub
mov
pop
push
daa
cmp
add
daa
xchg
cmc
xadd
push
push
push
les
outsb
pop
xlat
stc
dec
test
pop
mov
pop
push
cwtl
lds
adc
ret
mov
sub
imul
pusha
cli
cmp
and
lock
bound
shll
mov
stos
add
jne
push
je
orl
or
cli
or
es
mov
push
push
dec
add
frstor
adc
sub
add
test
pop
add
filds
push
or
stos
jmp
popf
gs
jg
test
mov
mov
mov
mov
add
aaa
mov
mov
add
inc
jle
incl
add
jle
ljmp
jl
push
lds
cli
jns
ljmp
je
scas
mov
push
pop
loop
sahf
fisubs
fdivs
fstpl
push
cmpsb
ljmp
sub
dec
iret
outsw
je
loope
jbe
dec
inc
subl
je
movsl
gs
call
pop
loop
test
je
add
mov
call
inc
add
fisubs
sti
dec
xor
lds
mov
sbb
sti
xor
sbb
add
rcrb
add
in
pop
sarb
add
xor
add
add
mov
ret
arpl
xchg
push
pop
add
fiadds
std
test
or
lea
inc
cmc
aas
add
ficomps
jbe
push
jnp
int3
inc
sub
clc
popa
pop
shrl
mov
dec
fwait
lods
pop
sub
pop
xor
bound
fimull
mov
mov
push
pushf
out
pop
cltd
xchg
and
in
push
mov
pop
xor
pop
aaa
ja
push
cmp
gs
dec
hlt
mov
add
fldenv
ficomps
xor
push
dec
mov
xor
inc
and
pop
jmp
sub
and
pushf
sahf
aam
add
xchg
jle
bound
fwait
rclb
mov
xchg
dec
cltd
fnstsw
dec
pop
push
mov
push
cmp
sarb
jge
scas
int
adc
add
mov
aas
push
test
jb
cli
cld
pop
push
inc
jmp
lcall
cld
push
daa
adc
dec
bound
neg
mov
jmp
dec
push
push
shll
sub
fsubrl
imul
add
mov
pop
push
dec
sub
cmp
push
call
xor
push
add
shr
fcomi
adc
jne
sub
je
gs
and
loop
xchg
hlt
addl
mov
decb
dec
testb
je
inc
cmp
mulb
fadds
add
decl
rol
xor
sub
shrl
mov
lock
mov
jmp
dec
add
fidivs
jb
add
mov
pusha
stc
inc
cmpb
or
stos
mov
fnstenv
cmpl
or
enter
mov
lods
xlat
mov
lret
sbb
aaa
rorb
lret
add
mov
sti
mov
or
lods
mulb
mov
mov
repz
push
mov
icebp
or
add
ss
push
icebp
subl
xlat
pop
hlt
mov
xchg
xchg
and
ret
xchg
leave
add
orb
fs
pop
call
ret
add
and
sub
popf
call
hlt
outsl
push
test
mov
fmuls
mov
sub
add
leave
hlt
add
das
push
fisttpl
sbb
dec
loop
sub
adc
ret
aas
push
lret
dec
xchg
stos
inc
adc
aaa
fisubrl
or
add
ficompl
push
test
or
mov
out
pop
cli
xchg
popa
mov
rcll
aam
dec
inc
jmp
pop
add
or
cmpsl
pop
and
fiadds
add
push
arpl
push
jb
dec
repz
std
jmp
call
pop
add
inc
sbb
test
push
push
mov
popf
call
fildll
mov
cmp
push
jne
mov
cli
mov
test
adc
jae
mov
push
call
add
xchg
jns
negl
add
add
add
in
push
jbe
scas
inc
mov
dec
push
mov
jb
mov
out
je
mov
enter
mov
mov
jno
inc
dec
or
scas
ret
mov
gs
sub
rol
mov
cltd
push
mov
pop
xadd
add
inc
jo
sarb
adc
or
push
mov
adc
xor
xchg
add
pop
inc
push
gs
insl
pop
or
dec
int3
les
mov
ss
or
into
pop
fs
sbb
cmp
dec
sbb
out
adcb
iret
inc
ret
pop
ja
lret
jne
jg
paddusw
push
push
pop
xchg
pop
dec
cmp
in
cld
push
stos
add
adc
adc
xchg
add
pop
pusha
adc
mov
outsl
shlb
pusha
stos
packuswb
loope
es
clc
scas
mov
push
leave
sbb
ss
out
imul
mov
push
xchg
pop
in
pop
add
pop
pop
rcr
in
pusha
addr16
popa
xlat
mov
sahf
adc
add
out
jo
mov
mov
add
insb
pusha
iret
test
sbb
loope
add
pop
gs
and
jmp
sbb
adc
in
pusha
inc
jbe
popa
repnz
adc
imul
cmc
add
push
je
push
push
jl
add
dec
loop
nop
add
add
sbb
sbb
or
xchg
or
add
fwait
add
jb
push
push
mov
stos
jb
incb
mov
sub
in
nop
or
xor
loop
add
icebp
push
mov
mov
push
scas
aad
xlat
jle
jmp
dec
jmp
fiaddl
inc
pusha
je
xchg
sub
push
scas
push
xor
and
scas
add
add
pop
testb
jnp
imul
jae
dec
orl
or
js
dec
clc
idivl
or
in
aaa
sub
mov
testl
rcll
cmpl
mov
jmp
hlt
dec
cmp
ret
ds
xchg
out
std
rclb
pop
xchg
in
push
xchg
or
mov
xchg
add
mov
pop
push
rclb
cs
pop
rcl
xchg
mov
enter
pop
xchg
sti
dec
sti
mov
sub
fwait
cli
rcll
das
into
ffreep
pop
add
sbb
mov
cmp
push
dec
adc
gs
ficompl
into
aas
sbb
pop
testl
fcoml
mov
add
jp
xlat
push
stos
cwtl
mov
mov
add
pop
outsb
xor
sbb
out
mov
fwait
add
jge
ficomps
dec
cltd
out
dec
stc
pop
pop
fsubr
in
inc
addr16
cmp
push
call
push
mov
test
fcoml
hlt
mov
cmp
inc
xor
lods
jecxz
push
add
jmp
mov
fucomp
push
test
in
bound
dec
cmpsb
imul
les
cmp
xchg
fiadds
pop
and
jmp
fwait
pop
add
roll
and
mov
aad
fwait
mov
jnp
pop
cltd
in
lock
xchg
push
mov
arpl
add
dec
inc
push
leave
popa
cli
movsb
inc
call
push
add
inc
in
in
mul
mov
testb
inc
enter
inc
hlt
pop
rolb
pop
ret
test
mov
test
inc
push
adc
mov
cltd
adcl
decl
enter
inc
loop
pop
adc
inc
add
or
cmp
push
loop
les
jnp
imull
xchg
pop
add
mov
addl
jns
jge
pusha
adcl
add
sbb
insl
pop
fiadds
add
jp
mov
add
mov
add
jne
addb
adcl
jne
push
jbe
outsb
out
cmpsb
cld
popa
in
add
arpl
out
xor
push
or
add
xchg
push
mov
xchg
jbe
cs
lock
mov
jg
stc
push
jnp
sti
or
lock
fnstsw
fnsave
inc
repnz
mov
xchg
iret
out
pop
sarl
pop
xrelease
push
fmuls
xchg
insl
pop
shrl
lret
lret
fidivs
test
add
add
jmp
pop
rorb
mov
gs
xlat
inc
push
stos
test
out
insb
pop
stos
aam
push
mov
sbb
stos
dec
mov
out
ja
daa
fisttpl
popa
mov
out
addr16
sub
mov
jmp
mov
sub
je
sbb
movsb
and
jmp
add
fstp
lock
outsl
jl
pop
mov
xchg
fstpt
jl
sbb
cmp
fcmovne
repnz
mov
js
fcompl
lock
adc
je
push
xchg
in
jo
hlt
leave
nop
pop
sub
jle
mov
icebp
loop
in
aad
push
out
pop
jns
jmp
xchg
pop
dec
xor
je
add
jmp
fimull
mov
std
add
loop
push
and
loope
call
into
sbb
repnz
mov
or
sub
mov
jge
push
or
rorb
xchg
pop
mov
add
mov
cmpsb
push
pop
pop
lret
cmp
xchg
aaa
pop
add
cli
mov
jge
pop
xorb
or
add
add
mov
loope
aaa
push
fnstcw
rclb
mov
test
js
adc
push
mov
xor
jle
add
mov
aaa
popf
mov
dec
stos
add
mov
pop
xchg
jle
jecxz
add
jg
pop
jb
sarb
jecxz
jnp
pop
push
lcall
add
mov
xor
inc
ss
arpl
fwait
ss
inc
push
leave
jecxz
cmp
mov
ret
xchg
push
cmp
test
mov
leave
dec
add
out
pop
test
fwait
imul
ja
fwait
in
mov
xor
pop
sbb
sbb
dec
sub
stos
pop
push
sbb
int3
lds
sub
pop
enter
mov
outsb
out
adcl
mov
pushf
lcall
jecxz
jo
inc
push
test
add
inc
mov
push
mov
sbb
pop
lcall
aad
mov
inc
addr16
cltd
ja
mov
sub
sub
push
mov
sbb
bound
or
xchg
add
ss
test
cli
je
adc
clc
clc
ficoms
arpl
fstl
cmc
push
xor
push
das
add
testl
je
arpl
pop
jns
mov
cltd
lds
jns
add
pop
push
testl
stc
fs
add
add
into
aad
repnz
jno
jge
pop
je
jl
mov
push
out
xor
decb
incl
mov
lcall
orb
mov
rolb
addb
inc
in
fs
mov
mov
mov
jns
or
inc
loopne
rcll
pop
clc
add
pop
je
xor
inc
ja
adc
add
dec
pop
mov
pop
scas
rolb
pop
add
faddp
jae
addr16
cmp
jge
add
test
lcall
add
test
enter
aaa
jae
in
push
mov
cmp
repz
mov
xchg
jae
add
xor
incl
mov
dec
lods
jg
stc
pop
or
es
inc
add
jns
jne
jno
push
loop
outsl
jne
not
pop
jb
push
push
push
call
fldl
outsl
jne
pop
jecxz
fwait
stc
push
sub
or
pushf
dec
fstpl
icebp
lods
jno
mov
xor
mov
and
int
and
mov
pusha
pop
xchg
push
fdivrs
push
loopew
add
pop
pop
ret
jecxz
and
idivl
cli
data16
insl
bswap
xor
je
mov
rcll
fsts
fisubrl
xlat
inc
push
mov
jns
mov
jo
sub
aad
xlat
cmpsb
call
adc
lcall
mov
pop
call
add
fucom
dec
sub
inc
or
lods
and
cwtl
sbb
pop
scas
add
fst
dec
add
cli
cs
add
jmp
lret
mov
dec
mov
mov
adc
bound
mov
jb
push
dec
fnstcw
xchg
inc
or
loop
pop
jge
gs
mov
xchg
cld
in
jge
mov
add
xor
or
jp
lahf
popa
cmpb
fiadds
cmp
cmp
jae
stos
jl
in
xchg
mov
dec
repz
push
in
cmp
out
sub
sbbb
icebp
mov
cmp
mov
xlat
jle
mov
lret
loope
jns
pop
fsubr
xor
xorb
je
add
add
add
fimuls
or
imulb
shrl
jo
adc
fidivrs
or
mov
xor
mov
incb
stos
lahf
jbe
test
jle
sti
push
xchg
add
cmpsb
cli
xor
cli
xchg
aaa
pop
add
les
movsb
hlt
inc
mov
sar
jle
cmc
jbe
mov
ret
mull
pop
aaa
add
popf
stos
mov
dec
xor
mov
mov
fsub
jne
into
jp
or
outsl
lret
flds
sbb
pop
stos
loopne
mov
dec
stos
lcall
rorl
and
jnp
add
cmp
or
jmp
fldenv
in
notl
lcall
mov
add
in
pop
fs
or
jnp
pop
outsb
rcll
xchg
lret
rolb
leave
sbb
lret
cmpb
rcr
and
or
add
clc
test
loopne
bound
ucomiss
mov
lcall
xchg
push
shr
cld
call
push
and
ljmp
xchg
add
sar
call
push
adc
ljmp
mov
sbb
ljmp
sub
add
int3
dec
add
xchg
cmc
testb
ficoms
or
loope
jns
mov
jns
scas
ret
gs
bound
imul
bound
arpl
push
xchg
push
add
add
mov
add
xchg
mov
inc
adc
loopne
jle
fidivrs
testl
inc
fsubrs
inc
mov
jnp
adc
jb
mov
inc
or
testb
dec
aam
pushf
add
jg
movsb
add
add
imul
gs
dec
xchg
add
rcrl
inc
push
xchg
in
jge
pop
hlt
icebp
add
cmp
divl
pop
clc
or
pushw
push
in
out
jge
ret
pop
faddl
xchg
scas
jle
add
int
cld
test
std
lcall
cmc
jg
incb
xor
dec
fs
jae
das
mov
add
jne
add
enter
mov
loopne
and
lahf
pop
rclb
xchg
pushf
inc
ja
pusha
rcl
pusha
mov
fs
addr16
fcomip
jmp
aad
push
sub
sbb
imul
nop
loope
add
cmpsl
icebp
lret
add
imul
lods
pop
add
stos
cmp
imul
add
add
loopne
and
rcl
jae
lds
rorl
xchg
jae
push
add
xchg
cld
cs
fstpl
clc
pusha
lcall
cmpsb
sbb
and
push
cli
into
pop
lcall
xchg
repnz
mov
pop
std
pop
cli
cmpsb
adc
ret
les
push
fucomi
bound
pop
ss
pop
sbbb
add
add
sub
jno
fmuls
pop
cmc
pcmpgtb
sbb
fcmovnb
push
xor
ds
inc
test
cwtl
or
lahf
xor
adc
and
push
stos
adcl
leave
add
mov
adc
xor
push
mov
mov
xor
adc
jno
je
xor
jae
sbbl
cmp
add
lock
fcomip
add
pop
xor
aam
test
mov
inc
imul
ret
enter
xor
inc
adc
fnsave
je
pop
pushw
test
sbb
adc
adc
addps
add
push
fisubs
dec
push
push
cmp
ss
sti
jns
std
or
add
pop
stc
xor
std
jmp
dec
mov
add
add
clc
mov
lret
movl
testl
lcall
mov
xor
rol
mov
pop
sti
mov
inc
mov
dec
stc
jle
idiv
incl
and
fdiv
std
or
jmp
stos
xor
mov
jp
div
mov
add
pop
jno
xlat
lods
pop
pop
fwait
and
xor
into
inc
aad
daa
fnstsw
movsb
mov
in
xor
iret
aam
cmpsl
jge
or
jmp
fildl
cld
fdivrl
ficoms
push
push
add
testb
imulb
scas
stos
std
pop
enter
xchg
push
push
dec
inc
mov
dec
mov
enter
add
addr16
cmp
inc
and
aad
add
fcmovbe
push
and
mov
jmp
pop
push
add
push
adcb
add
push
ljmp
outsb
add
add
arpl
pop
aaa
stc
jo
mov
add
shrb
mov
nop
pop
pop
add
pop
push
lcall
add
sbb
enter
cmp
pop
add
push
shr
dec
mov
cmc
aam
call
or
jmp
dec
je
inc
fwait
sti
cmp
or
add
dec
call
or
push
test
add
or
xor
js
sub
inc
filds
iret
int3
fwait
push
add
cld
lock
mov
lcall
dec
dec
je
mov
add
add
add
call
psrlw
inc
imul
jne
fdivp
jmp
lahf
loop
sar
cli
js
loop
roll
mov
xchg
inc
jb
fisttps
jae
lcall
rcr
cmpsb
add
add
hlt
js
mov
mov
filds
ss
or
lea
bound
popa
bound
inc
jmp
popa
jne
pop
mov
popa
add
imul
addr16
sti
xchg
jae
dec
fisttpl
fs
pop
pop
gs
rcrl
std
add
add
mov
and
add
cmp
mov
jmp
and
push
mov
xchg
push
jp
movsl
std
sbb
adc
in
mov
lods
push
das
xchg
add
std
loop
jmp
xchg
mov
leave
xchg
sbb
mov
mov
jb
mov
jmp
add
popa
mov
add
imul
add
add
clc
test
cld
push
pop
mov
aad
cmp
jo
cs
in
in
ret
pusha
mov
jg
sub
jg
mov
loop
test
xchg
jl
stc
jae
std
jb
add
lret
pop
sbb
inc
rcr
dec
repz
xchg
jmp
jb
add
stc
popf
cwtl
pop
adc
add
es
repnz
jne
dec
jmp
and
push
mov
mov
or
mov
in
je
or
push
insb
cwtl
pop
mov
pop
xor
xchg
push
test
incb
add
pop
pop
mov
add
scas
inc
mov
add
test
xchg
bswap
or
push
add
data16
adc
cli
mov
and
ja
divb
in
ds
ljmp
mov
jmp
push
adc
test
add
or
add
xchg
or
mov
cld
out
testl
xchg
leave
loope
cmp
ljmp
test
fiaddl
or
jl
xchg
add
repz
inc
sbb
sar
adc
rolb
enter
in
je
lret
ret
cwtl
add
loopne
add
ret
add
fiadds
and
push
mov
pusha
fisubs
and
add
pop
call
pushf
inc
sbb
hlt
stc
bound
add
pushf
inc
mov
mov
stc
inc
mov
cwtl
mov
cwtl
mov
repnz
lahf
mov
and
loope
insl
leave
out
lea
lahf
cmp
call
leave
push
imul
leave
aad
mov
out
stc
jo
shl
cmpsl
fmul
clc
push
hlt
push
xor
push
or
sub
out
in
push
push
jne
mov
add
add
loop
adcl
imul
pop
or
jmp
mov
xor
cli
hlt
xor
or
test
sub
fstps
add
fstpl
xchg
movsl
add
mov
pop
cli
xchg
mov
pop
push
adc
addl
sbb
xchg
xor
dec
cmc
sub
jb
loop
xchg
add
xchg
add
pop
or
mov
or
movb
jecxz
shll
lret
or
push
fs
jle
imulb
int
cld
out
je
pop
imul
out
je
mov
jne
xchg
je
pop
sbb
je
lret
ljmp
or
jb
in
sbb
lods
dec
mov
add
dec
push
add
aaa
pop
divb
orl
pop
test
fsubrp
add
adc
in
shr
std
mov
cmp
mov
push
sbb
mov
sub
inc
fmulp
imul
add
mov
inc
and
into
lods
xchg
mov
popf
jl
fiadds
add
add
inc
pusha
or
pop
xchg
sarb
inc
or
add
mov
add
clc
sbb
or
add
ficomps
push
stc
cmp
arpl
xor
push
js
pop
lods
popa
pop
movb
mov
sbb
repz
cld
out
xor
or
call
repz
incb
arpl
mull
lea
loope
sahf
mov
pop
call
subb
dec
mov
out
imul
fs
fcompl
lret
in
inc
add
loope
test
enter
orb
push
fstpl
sub
fxch
out
fstpl
insb
clc
pop
xchg
aam
mov
test
fstpl
mull
loope
add
push
fwait
mov
addr16
scas
insb
imul
jmp
pop
fucomp
insb
cmpsb
clc
stc
jb
out
out
jmp
jp
imul
ljmp
iret
and
or
rcrb
arpl
fsubs
popf
pop
or
pop
arpl
cmp
add
mov
jbe
lcall
roll
fsubrp
add
cld
cmpsl
shl
jecxz
and
ret
rcrl
shl
arpl
mov
leave
bound
mov
sbb
sbb
add
inc
inc
fwait
push
or
sbb
mov
mov
jne
xchg
shl
in
add
in
mov
mov
add
lahf
ret
dec
lahf
push
test
add
pop
add
fidivrs
fiadds
sti
fiadds
dec
gs
mov
pop
insl
pop
sti
jns
test
fisttpl
fiadds
dec
imul
out
mov
pop
mov
clc
dec
aaa
or
jg
fiadds
push
xchg
ficoms
cmp
add
pop
or
add
add
add
jnp
test
fs
add
add
jne
test
mov
iret
int
aam
fcomps
outsl
or
clc
mov
push
iret
cmp
pop
or
add
jmp
addl
pop
pop
ret
push
or
sbb
xchg
dec
repnz
jg
pop
call
jg
add
pop
call
into
mov
ss
cmc
fnstsw
pop
push
pop
into
stc
add
out
icebp
dec
or
sub
mov
inc
cmp
movsb
inc
jno
inc
in
inc
sub
les
out
sbb
push
ss
jae
es
xor
enter
bound
pop
mov
aas
push
fwait
push
cmp
add
sbb
movl
fstpl
jg
pusha
jle
loop
test
sub
fcompl
and
fstps
out
jns
add
frstor
add
adc
lock
add
push
sti
push
dec
movsl
jmp
test
pop
test
pop
add
pop
mov
mov
add
test
mov
add
pop
orb
mov
add
sub
ljmp
fistl
mov
add
aaa
pop
add
xchg
ret
mov
add
jecxz
test
in
hlt
pop
add
out
rorl
iret
add
sbbl
fisubrs
or
cmp
add
mov
push
loop
gs
aas
add
push
sti
adc
add
sub
jmp
add
jp
fldl
popa
lahf
mov
shl
and
fimuls
add
adc
add
sarb
aas
testl
inc
add
dec
cli
mov
push
cmp
add
add
out
jg
pop
jmp
jg
push
adc
sbb
cmpb
repnz
sbb
cmpb
sbb
pop
cld
jmp
test
cmp
dec
mov
pop
or
outsl
lahf
movsb
arpl
test
inc
pop
pop
dec
pop
or
outsl
pop
movsb
bound
test
add
loopne
insl
sub
pop
out
dec
stos
dec
xlat
inc
bound
outsl
push
movsl
addr16
fldenv
jg
ljmp
aad
add
fstpl
movsb
and
in
sbb
loope
pop
ret
stc
or
pop
pusha
adc
add
fidivl
in
bound
repnz
jb
add
pop
xchg
adc
stc
out
fiaddl
mov
jmp
insl
mov
pop
add
roll
fisubs
lea
add
jmp
pop
nop
add
push
insl
leave
rcll
add
add
inc
or
orl
sbb
ljmp
lock
dec
lea
add
push
push
mov
movsl
add
inc
sti
pushl
rolb
pop
sarl
or
push
rorl
pop
mov
jnp
inc
pop
xchg
shl
sub
mov
lea
lods
adc
pop
cmp
je
ficomps
mov
ret
std
or
dec
popa
aaa
fwait
loop
sbb
inc
push
xchg
add
mov
out
pop
scas
call
cmpl
add
pop
sub
ffree
dec
out
leave
lret
push
enter
cmc
std
call
sub
add
jbe
test
or
add
inc
add
std
or
add
pop
mov
xorl
call
sarl
jmp
sti
ficomps
add
filds
add
push
out
inc
jl
and
jecxz
add
pop
cmp
jmp
jle
mov
or
loope
add
jmp
sti
cmp
stc
jl
cmc
push
inc
aad
movsl
add
pop
addr16
pop
xlat
inc
cld
es
mov
in
pushf
pop
arpl
jge
idivl
add
pop
out
add
ficomps
push
aad
xor
inc
push
add
out
jmp
movsb
sub
es
pop
xchg
adc
aam
and
jnp
jmp
sti
push
loop
and
fucom
shrb
cmp
pop
add
add
aas
mov
lock
dec
sub
push
pop
mov
push
jle
add
jns
or
stc
push
gs
add
lahf
fstpl
scas
jno
rcr
dec
mul
mov
pop
cli
add
bound
andl
idiv
roll
push
pop
bound
je
scas
mov
mov
adc
mov
jne
ja
scas
and
call
insl
push
aaa
fxrstor
add
mov
popa
jne
mov
add
inc
sub
fmuls
cmpb
add
out
sar
mov
inc
rclb
inc
push
push
movb
out
mov
scas
rcr
incl
inc
cmovnp
repnz
jae
pop
fsts
sub
adc
sahf
notb
test
push
mov
std
xchg
into
imul
iret
dec
jne
add
fisttpll
adc
outsl
push
jmp
ja
jmp
or
out
nop
dec
sti
and
std
push
gs
jg
cmpsb
jbe
sbb
std
popa
pop
cli
insl
xchg
mov
sbb
mov
je
xlat
add
push
cmpsl
imul
imul
jg
inc
hlt
mov
pop
call
add
add
sarb
or
sbb
add
adc
dec
xchg
inc
lock
rorl
enter
pop
pop
bnd
push
loop
outsl
ficomps
mov
mov
cmp
fsubp
daa
fmuls
xchg
out
sub
jp
pop
call
jp
pop
xchg
sti
pop
mov
bnd
add
add
sbb
push
mov
cmp
add
dec
dec
adc
loop
rclb
lock
in
into
jmp
mov
dec
mov
xchg
fistpll
cmpsb
lcall
adc
in
xchg
pop
push
xchg
push
mov
jmp
pop
mov
push
fstl
mov
add
mov
call
mov
hlt
cli
push
add
and
sti
pusha
add
aaa
pop
sti
mov
jmp
add
mov
je
lods
pop
imul
cmp
pop
shrb
ljmp
decl
imul
ret
lods
fs
inc
pop
add
test
insb
xor
add
add
test
lret
dec
dec
push
push
adc
mov
out
dec
mov
mov
add
pop
add
xchg
jp
fsubp
mov
test
dec
stos
enter
in
pop
dec
icebp
mov
mov
stos
ljmp
fbstp
fisubs
jp
sub
mov
inc
cmpb
rorb
leave
inc
lods
outsl
mov
mov
incb
icebp
cmc
or
add
jns
jmp
pop
add
shr
or
lret
mov
aas
fisubrs
out
pop
cmp
jle
pop
in
xchg
pop
mov
or
cld
jle
fsubs
sarb
xchg
cmp
lods
aas
fisubrl
imul
push
loopne
incl
add
in
aad
cmpl
jns
pop
pop
mov
jge
push
notl
adc
dec
mov
cmpsl
clc
insl
pushf
shlb
pop
dec
sbb
call
or
jo
jge
ja
and
js
xor
add
mov
dec
lds
idiv
pop
pop
sub
add
mov
shl
jb
sbb
push
push
xchg
add
sbb
rcrb
test
mov
out
loop
cli
lods
sbb
inc
in
cwtl
std
push
dec
movsb
push
jo
jb
push
cmp
push
or
mov
pop
jmp
sti
popf
mov
lds
imul
negb
add
std
and
mov
pushf
add
fwait
loope
in
cmpl
jmp
add
sbbb
test
mov
xchg
cmp
or
xchg
mov
mov
es
adc
mov
mov
mov
xchg
fcoms
inc
aaa
mov
mov
mov
push
adc
pusha
les
nop
xor
cmp
cmpsb
fstl
inc
add
pop
mov
mov
mov
es
mov
shlb
std
mov
jl
in
fcoms
negl
mov
cmp
in
ficoms
sahf
add
mov
mov
cmp
in
ficoms
sahf
and
loope
jl
in
test
add
add
xor
cmp
in
stc
adc
xor
cmp
in
ficoms
sahf
cmpb
daa
add
mov
ret
sarl
int
call
add
ret
cltd
mov
mov
in
popf
call
add
xchg
hlt
ret
jno
aaa
in
pop
dec
jnp
add
popf
call
add
fcmovnb
dec
mov
mov
jnp
add
fdivp
ret
and
je
popf
call
add
mov
ret
stc
mov
dec
mov
sahf
jnp
sub
mov
sahf
sbb
inc
jmp
fnstsw
fnstcw
add
dec
inc
jmp
fnstsw
jns
pop
add
dec
inc
jmp
fnstsw
cmp
add
dec
inc
jmp
loop
sub
sbb
pop
add
ds
pop
sub
mov
sahf
mov
rorl
jmp
mov
mov
mov
add
es
inc
mov
and
popa
mov
mov
push
test
inc
mov
inc
arpl
pushf
stos
mov
cmp
push
xor
inc
xchg
pusha
arpl
fsubs
mov
cmpsb
nop
or
incb
add
mov
cmp
data16
inc
mov
sbb
mov
cmp
add
push
ret
testl
mov
ja
movsl
incl
addr16
or
leave
pop
rclb
adc
pop
jl
push
test
push
push
cmp
fwait
push
push
sub
adc
sbb
mov
inc
ficomps
arpl
cli
pop
cli
xor
add
loop
jl
mov
add
add
pop
xchg
cmp
mov
pop
lahf
mov
sub
arpl
fxam
arpl
pop
dec
movl
and
sub
out
fisubs
xor
das
out
sbb
fcom
clc
mov
fildl
cmp
adc
out
ficoms
add
pop
xorps
loope
add
pop
decl
loope
add
pop
testl
add
rcll
cmp
sti
push
xchg
mov
mov
sub
xchg
push
notb
out
aas
push
lret
imul
loop
adc
stos
je
dec
xchg
xchg
jb
imul
or
sahf
jae
daa
es
fisubs
jne
loope
jge
fsts
leave
push
lea
inc
in
pop
out
xchg
add
in
or
inc
aam
add
mov
inc
cltd
test
add
aaa
pop
ret
adc
xchg
cs
sub
xchg
jle
jge
xchg
jne
jmp
dec
sbb
jno
or
je
insl
and
imul
add
out
adc
dec
sbb
aas
cmp
xor
add
mov
add
pop
xchg
push
mov
in
sbb
mov
test
test
pop
add
mov
pop
orb
dec
xor
dec
lock
test
pop
add
add
or
in
and
adcl
je
es
mov
lar
faddp
or
add
push
mov
mov
mov
mov
std
pop
cmp
call
testl
jge
xor
test
iret
addl
out
pop
call
iret
mov
jnp
jb
cmp
and
fcos
push
jg
mov
into
ljmp
repz
add
add
mov
xchg
mov
cmc
pop
jne
inc
ret
jmp
adc
rorb
pop
in
push
pushf
scas
bnd
cwtl
cli
sub
in
jno
in
and
sub
imul
adc
or
loop
push
pop
sub
mov
and
mov
lods
loop
data16
add
in
inc
aaa
xchg
fisubl
jecxz
aam
xor
pop
pop
aam
mov
push
add
pop
inc
std
jmp
fneni(8087
rcrb
stc
push
xor
or
pop
lahf
outsb
push
rorl
jb
shlb
negl
jmp
insl
mov
sarl
repnz
jl
out
int
add
fnstsw
push
mov
addr16
add
and
aad
xchg
mov
data16
mov
push
sbb
stos
pop
pushf
adc
imul
sbb
in
cmp
mov
je
stos
dec
xor
int3
testb
addb
je
aam
jbe
cwtl
mov
rol
pop
stos
add
add
push
or
push
ja
add
add
andl
mov
fcmovnbe
bound
mov
fsubp
clc
test
push
hlt
ss
mov
push
add
ja
mov
call
xchg
test
test
test
test
test
add
xor
aas
fisubrs
mov
loop
std
jmp
loope
ffreep
std
dec
test
xchg
std
addr16
std
ljmp
xchg
sub
cmp
and
jbe
std
bound
loope
ffreep
std
dec
mov
mov
or
add
fisubs
popa
gs
lods
filds
add
aad
mov
cmp
std
xchg
or
add
pushf
stos
imul
pushf
in
popa
and
ret
mov
ficomps
lock
call
xor
not
stos
mov
dec
int
cmp
in
aam
les
popa
pushf
sbb
sarb
data16
adc
repz
popa
pushf
dec
sbb
rcrl
and
jg
dec
in
and
fcmovu
loopne
test
mov
inc
add
je
pop
icebp
mov
popf
xor
cmpsl
sbb
xlat
stc
jno
jg
insl
popf
dec
adc
pop
xchg
jmp
jno
jg
insl
lcall
call
incb
loope
push
sbb
add
add
xchg
ss
ret
sar
xchg
and
mov
xor
hlt
ret
or
lds
std
add
xchg
mov
test
inc
gs
push
cld
ljmp
push
shll
jl
push
pop
je
adc
test
mov
shl
int3
inc
pop
add
add
mov
cmpl
jl
and
pop
add
hlt
mov
sbb
ret
inc
mov
lcall
dec
push
mov
cmp
adc
push
decb
fidivs
orb
adc
sbb
fsts
addr16
das
fnstcw
std
add
stos
add
xor
add
push
fldl
mov
pop
cmp
cli
sahf
and
data16
and
scas
repz
adc
cmpsl
add
loope
mov
stc
add
cmp
add
movb
loope
daa
add
movb
addl
push
bound
int3
cmc
out
dec
pop
sbb
mov
add
jp
shrl
scas
jecxz
bound
pop
pop
enter
or
in
add
int3
bound
cmpsb
add
int3
jmp
pop
inc
xor
sbb
aad
repnz
fidivs
addr16
xchg
sbb
dec
out
ds
mov
adc
loope
or
fld
mov
add
adc
add
add
pop
add
fucom
pop
int
lcall
ds
add
sar
push
imul
dec
je
lods
cltd
jae
jmp
mov
test
rcl
cmp
jmp
or
add
fucom
je
fstps
add
ds
add
jmp
bound
add
popf
les
fstpl
sub
es
jmp
fstpl
add
mov
cs
sbb
pushl
add
mov
mov
idiv
lods
bound
jmp
mov
mov
sbb
xlat
inc
and
stos
loope
incb
or
test
bound
push
jp
mov
add
in
and
jecxz
rorb
inc
negb
loope
jle
les
fcmovnb
mov
jl
sbb
mov
inc
sar
imul
addr16
xchg
inc
mov
mov
mov
fimuls
and
clc
std
jle
mov
ficoml
add
fidivs
mov
int3
mov
test
jmp
xor
cmp
fidivs
cmp
xor
pop
mov
iret
sub
inc
mov
mov
data16
out
icebp
or
pop
or
or
lret
lcall
push
cld
mov
outsw
dec
lahf
mov
push
mov
mov
mov
and
jle
push
lret
inc
or
and
pop
pop
sarb
cmpsb
add
enter
sub
pop
dec
popa
and
jle
add
and
lcall
pusha
jno
and
es
sbb
data16
test
xchg
popa
out
xchg
and
add
add
loopne
negb
add
imul
xor
sahf
or
pop
add
pop
dec
and
push
jg
jmp
lods
pushf
loopne
lock
jb
lret
mov
mov
xchg
test
pop
and
sub
popa
xchg
loop
jmp
jmp
daa
mov
add
test
loop
inc
add
fidivrs
pop
jne
push
test
push
addb
mov
shl
dec
or
add
mov
push
loope
sub
enter
mov
loope
add
sbb
loopne
dec
or
inc
jns
jecxz
add
aas
pushl
mov
and
add
dec
adc
lahf
test
out
dec
cmp
mov
cli
mov
shl
dec
scas
enter
call
dec
sarb
shr
jl
test
jg
in
testb
xor
add
jl
cmpb
mov
int
push
shlb
sti
pop
push
mov
add
jp
loop
jl
xchg
push
test
add
aad
ret
sub
insl
sbb
jl
dec
sub
xchg
xlat
sbb
gs
xor
pop
filds
adc
rorl
mov
pop
jl
or
std
pop
sbb
dec
stc
pop
pop
shll
lcall
push
mov
push
popf
fs
sarl
sbb
rcl
ret
mov
pop
test
pop
test
push
test
insl
test
jb
rorl
sarl
and
mov
pop
xchg
jp
or
pop
fldenv
enter
out
cs
mov
loop
ljmp
faddl
in
sbb
xor
add
add
aas
jmp
add
je
es
sbb
add
aad
mov
and
xchg
mov
lret
jmp
das
and
sbb
ret
dec
cltd
in
xchg
movsb
xchg
xchg
or
sahf
or
push
es
mov
rorb
aad
sub
insl
xchg
aas
movsb
mov
loop
add
lods
ret
scas
popf
roll
fldl
push
das
cmpsb
je
adc
cli
movsb
movsl
fwait
stc
lods
movsl
fwait
stc
mov
pushf
stc
mov
in
stc
shl
fwait
stc
fcmovbe
fwait
stc
jecxz
fwait
stc
in
movsl
pushf
stc
cmc
movsl
pushf
stc
xchg
pushf
stc
pop
xchg
pushf
stc
lret
rcrl
int
cmp
in
daa
jle
push
dec
bound
add
add
popa
adc
pop
adc
pop
adc
mov
push
out
mov
arpl
mov
fwait
iret
mov
xchg
mov
or
std
aas
out
mov
cmp
mov
aaa
out
mov
xor
mov
inc
iret
mov
jnp
mov
addr16
mov
cmp
mov
pop
out
mov
sbb
mov
pop
out
mov
adc
mov
and
mov
pop
iret
mov
inc
iret
mov
inc
iret
mov
incl
add
mov
sti
out
mov
imul
mov
repz
mov
add
mov
cmp
mov
daa
iret
mov
and
mov
fucomip
pop
call
add
outsb
call
add
call
add
add
outsb
call
add
call
add
call
add
insl
call
add
insl
call
add
add
call
add
call
add
outsl
call
add
call
add
outsb
call
add
call
add
add
adc
jmp
fstl
jmp
fstpl
jmp
ffree
adc
adc
fstpl
adc
add
fldl
adc
fldl
adc
fisttpll
adc
adc
fisttpll
adc
fnsave
jmp
fnstsw
jmp
frstor
jmp
jmp
fstl
jmp
fstpl
add
pop
stc
emms
pop
cmc
cmova
cmova
getsec
pop
pop
adc
add
pop
aad
inc
pop
cmpsl
adc
mov
pop
aaa
pop
in
pop
pop
pop
add
pop
pop
movsl
adc
pop
int
negl
adc
pop
rorl
pop
mov
maskmovq
negl
xrstors
xrstors
movzwl
movzwl
xrstors
xrstors
movzwl
movzwl
ja
pop
xchg
emms
pop
lea
fidivs
add
add
mov
and
std
jg
mov
jnp
mov
ja
mov
loope
std
loope
mov
lret
out
mov
lret
std
dec
loope
std
dec
fnstenv
inc
jmp
mov
cmp
mov
aaa
shll
das
loope
std
sub
mov
daa
shll
das
loope
std
sub
mov
daa
shll
std
pop
add
loope
std
sbb
mov
pop
shll
std
psraw
add
push
call
add
push
call
add
call
add
call
add
outsb
call
add
push
call
add
push
call
add
push
call
add
push
call
add
push
call
add
add
push
call
add
dec
call
add
call
add
call
add
add
fucom
or
fnstsw
or
frstor
or
or
fstl
or
or
fisttpll
jmp
fstp
or
fnstsw
or
add
fldl
or
fstpl
or
fnsave
or
fstl
or
fucomp
or
fstpl
or
fstpl
or
fnsave
or
fnstsw
jmp
frstor
jmp
fnsave
add
pop
sbb
xchg
push
xchg
pop
ja
mov
sbb
pop
and
ja
jns
ja
xlat
sbb
add
xor
inc
pop
cmc
or
aaa
pop
in
or
inc
pop
in
aaa
pop
loope
aaa
pop
fisttpll
pop
pop
adc
negl
push
negl
sysret
pop
leave
or
negl
or
pop
mov
pop
ja
mov
lods
or
fidivs
lahf
sub
mov
push
add
out
mov
xchg
mov
and
std
jg
mov
jnp
mov
cmpsl
out
mov
out
mov
fucomp
mov
cli
out
mov
push
jmp
std
push
jecxz
std
mov
shll
push
jecxz
std
dec
mov
jecxz
std
cltd
fnstenv
aaa
jmp
std
loope
std
pop
add
fistpl
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
call
add
call
add
call
add
call
add
imul
cli
imul
imul
shrb
add
insb
call
add
insb
call
add
push
add
add
call
add
push
add
push
add
push
add
add
jmp
fldl
or
jmp
or
adc
ffree
or
fstl
jmp
fstl
or
or
jmp
add
fstl
or
jmp
frstor
or
jmp
fnsave
jmp
add
pop
sub
or
pop
and
or
pop
sbb
or
pop
adc
or
pop
or
or
pop
add
or
pop
std
or
add
pop
icebp
or
in
or
jmp
or
pop
loope
aaa
pop
fisttpll
inc
pop
inc
pop
aad
aaa
pop
rorl
aaa
pop
int
pop
pop
leave
or
pop
lds
negl
or
pop
mov
or
std
mov
std
enter
in
std
cmpsl
in
std
mov
aad
std
mov
std
adc
std
fwait
add
iret
std
aad
std
mov
std
xchg
std
xchg
aad
std
jg
std
jnp
std
loope
std
fstp
std
outsl
aad
std
imul
std
addr16
std
arpl
std
scas
aad
std
stos
in
std
mov
std
test
std
adc
std
jl
std
xchg
in
std
xchg
aad
std
aad
call
add
call
add
add
call
add
call
add
fs
add
fs
add
fs
add
fs
add
fs
add
call
add
call
add
call
add
call
add
call
add
add
fs
jmp
fisttpll
push
jmp
push
jmp
fisttpll
pop
jmp
fldl
pop
jmp
fstp
push
jmp
fst
push
jmp
fucomp
push
jmp
fucom
push
jmp
fucomp
push
jmp
fnsave
pop
jmp
fisttpll
jmp
add
fldl
jmp
fnstsw
pop
jmp
fstl
pop
jmp
pop
pop
dec
or
pop
dec
or
pop
fmuls
negl
or
pop
dec
or
pop
dec
or
pop
inc
or
pop
inc
or
pop
cmp
or
pop
and
pop
sbb
or
pop
adc
xchg
or
add
add
or
pop
stc
or
cmc
or
icebp
or
in
or
jmp
or
pop
loope
inc
pop
fisttpll
inc
pop
faddp
std
rcl
std
iret
out
std
lret
out
std
push
xlat
std
mov
out
std
mov
std
mov
std
scas
out
std
stos
out
std
cmpsl
xlat
std
mov
add
xlat
std
sti
in
std
fwait
out
std
xchg
xlat
std
xchg
xlat
std
out
std
mov
std
xchg
std
adc
std
jg
std
jnp
std
ja
std
jae
std
outsl
out
std
imul
std
xlat
std
int
std
pop
out
call
add
fs
add
fs
add
add
fs
add
imul
add
add
call
add
call
add
imul
add
imul
add
call
add
push
call
add
call
jmp
fnsave
or
ffree
or
ffree
or
fnstsw
push
jmp
fstl
or
fisttpll
or
fstl
jmp
fisttpll
jmp
or
fucomp
or
fucomp
or
fldl
or
fldl
or
or
or
fst
or
or
add
or
fucom
or
fucom
or
inc
pusha
test
aaa
pusha
orb
pusha
jl
inc
pusha
js
inc
pusha
je
aaa
pusha
mov
or
pusha
mov
pop
pusha
mov
negl
or
pop
stos
or
pusha
cmpsl
or
pusha
mov
or
pop
fwait
or
pop
xchg
or
pop
xchg
or
pop
mov
pop
xchg
pop
orl
pop
jg
add
mov
jnp
xchg
or
pop
outsl
or
imul
pop
or
or
pop
or
std
pop
in
std
pop
in
std
push
aam
std
push
aam
std
dec
in
std
dec
in
std
inc
aam
std
inc
aam
std
cmp
in
std
xor
aam
std
sub
in
std
and
aam
std
sbb
add
in
std
sbb
std
adc
aam
std
or
in
std
add
aam
std
std
out
std
stc
out
std
cmc
xlat
std
icebp
xlat
std
in
out
std
jmp
andb
fs
add
call
add
call
add
call
add
call
add
add
add
call
add
call
add
call
add
call
add
call
add
call
add
call
add
addr16
add
addr16
jmp
fldl
jmp
fnstsw
or
fisttpll
or
fstl
or
add
fldl
or
fisttpll
or
fstpl
or
frstor
or
fstl
or
fstpl
or
jmp
frstor
jmp
fnstsw
jmp
fnsave
jmp
fisttpll
jmp
fldl
jmp
fstpl
jmp
fstl
jmp
or
ja
repz
add
out
or
pop
out
ja
jecxz
ja
fisttps
inc
pop
fisttpl
inc
pop
xlat
or
pop
rorl
aaa
pop
iret
or
lret
or
or
pop
ret
or
pop
mov
or
pop
mov
negl
or
pop
scas
or
pop
stos
or
pop
cmpsl
or
pop
mov
or
pop
fwait
or
pop
xchg
or
pop
pop
mov
pop
xchg
mov
orl
pop
jg
faddp
std
jge
std
jns
std
jne
std
jno
std
insl
out
std
imul
std
popa
out
std
pop
out
std
pop
std
push
std
push
out
std
dec
out
std
dec
std
inc
std
inc
out
std
cmp
std
xor
out
std
sub
add
out
std
sub
std
and
out
std
sbb
std
adc
out
std
or
loope
call
add
gs
add
call
add
push
call
add
call
add
call
add
call
add
add
call
add
call
add
add
call
add
call
add
call
add
arpl
add
arpl
jmp
fst
add
fucom
add
fstp
add
add
fnsave
fnsave
jmp
fnstsw
jmp
add
fldl
jmp
fisttpll
add
fldl
add
fstl
add
fisttpll
add
fstpl
add
frstor
frstor
jmp
jmp
fnsave
jmp
fnstsw
jmp
fldl
add
fisttpll
jmp
mov
adc
pusha
sysret
pusha
or
mov
pop
pop
mov
add
add
xchg
push
xchg
push
ja
testl
xchg
push
xchg
push
ja
out
ja
jecxz
inc
pusha
filds
inc
pusha
fildl
aaa
pusha
xlat
push
aaa
pusha
roll
inc
pusha
iret
push
inc
pusha
lret
push
aaa
pusha
addb
jle
pop
pusha
jp
pop
pusha
mov
push
negl
push
pop
pusha
scas
push
pop
pusha
stos
push
negl
push
negl
push
pop
lahf
push
add
fidivs
cltd
fdivs
xchg
fdivs
mov
mov
test
mov
sbb
mov
jns
mov
jne
mov
jno
mov
insl
loopne
std
imul
mov
popa
fdivs
pop
fdivs
push
fdivs
push
fidivl
fnsave
add
add
mov
cmp
mov
xor
fdivs
sub
pop
call
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
pusha
call
add
add
call
add
call
add
pusha
call
add
add
call
add
call
add
call
add
call
add
add
pusha
call
jmp
add
add
add
ffree
add
ffree
add
add
add
fst
add
fst
add
fstp
add
fstp
add
frstor
add
frstor
add
add
add
add
fnsave
add
fnsave
add
fnstsw
add
fnstsw
add
fldl
add
fldl
add
fisttpll
add
fisttpll
add
fstl
add
fstl
add
fstpl
add
fstpl
add
frstor
jmp
pop
pop
xor
negl
negl
pop
and
mov
sbb
pop
adc
add
pop
syscall
mov
or
xchg
xchg
ja
sti
add
pop
testl
pop
out
add
pop
jmp
ja
out
inc
pop
jecxz
inc
pop
filds
pop
fildl
pop
xlat
add
pop
roll
pop
iret
add
pop
lret
add
pop
movl
pop
mov
mov
loop
std
mov
mov
mov
add
mov
lods
fidivl
std
movsl
fidivl
popf
fidivl
xchg
fidivl
fidivl
test
mov
and
mov
jns
mov
jne
mov
jno
mov
insl
fidivl
fidivl
pop
fidivl
push
fidivl
dec
add
fidivl
add
popa
call
add
call
add
call
add
popa
call
add
popa
call
add
popa
call
add
popa
call
add
popa
call
add
add
call
add
call
add
add
add
pop
call
add
pop
call
add
pop
call
jmp
fnstsw
fisttpll
jmp
fstl
jmp
jmp
frstor
jmp
frstor
add
add
fnsave
add
fnstsw
add
add
fldl
add
fisttpll
add
fstl
add
fstpl
add
fucom
add
fucom
add
fucomp
add
fucomp
add
inc
popa
lods
add
popa
test
aaa
popa
movsb
add
popa
push
call
xchg
sbb
sbb
popa
add
rcrb
sbbl
jne
sbb
pusha
add
add
cmp
sbb
popa
mov
add
xor
divb
inc
and
sahf
es
in
bnd
loopne
mov
sbb
sahf
sbb
adc
add
sahf
cltd
stc
incl
lret
test
aaa
or
inc
aam
cmp
mov
jle
sar
mov
inc
loopne
mov
add
add
push
mov
stc
ss
add
gs
xchg
mov
loopne
jbe
jmp
out
mov
cmp
jle
pop
add
sbb
mov
mov
loopne
sub
repz
mov
nop
add
jmp
popf
cmp
jg
scas
stc
mov
sarl
out
ss
imul
xlat
lods
in
add
ficomps
pop
xchg
sbb
inc
mov
fistpll
sub
stos
add
jae
clc
nop
mov
or
mov
pminub
mov
mov
dec
pop
shl
mov
sbb
inc
sub
out
and
pop
cmpsl
test
jg
inc
or
out
or
mov
add
repz
enter
and
ficompl
test
xlat
cmpsb
inc
lret
jl
and
pop
es
cmp
fstpl
movsb
cmp
inc
or
in
or
std
call
lret
jmp
mov
inc
lret
jl
sbb
inc
sti
movsb
mov
sub
add
pop
add
and
inc
or
add
sahf
add
int
jge
jnp
mov
and
and
sub
xchg
pop
add
ja
addb
scas
or
mov
rolb
mov
jl
inc
cmc
nop
push
jp
aam
mov
incl
jnp
aaa
sar
out
pop
add
flds
add
mov
cmp
sub
pop
jmp
ret
fists
idiv
rcrb
xchg
pop
testb
inc
test
call
xor
inc
and
jge
mov
je
xor
push
xlat
repz
mov
mov
je
xor
push
jge
fcoms
fiadds
jae
jge
mov
add
add
nop
add
adc
lret
std
mov
jae
adc
mov
imul
mov
push
scas
adc
mov
fdivp
jle
in
je
add
repz
fcoml
pop
pop
sub
rcr
cmpsl
inc
icebp
and
repz
dec
orb
inc
jmp
add
add
fisubl
fistps
push
mov
fisubl
lock
call
mov
aas
mov
cmp
lods
loop
lcall
arpl
nop
fbstp
es
pop
call
sar
sub
sbbb
in
sub
out
sub
mov
pop
sbb
ljmp
push
fidivrs
fsubrl
add
add
mov
call
jl
sbb
mov
jne
jecxz
jge
ds
mov
aad
mov
dec
jecxz
jge
pop
mov
ss
sbb
jmp
mov
and
loopne
stc
push
dec
add
and
push
jl
sub
add
adc
push
cwtl
stc
stos
and
add
jle
ret
sti
pop
lret
scas
loope
dec
imul
cmp
in
add
xchg
addb
inc
and
fistpl
push
test
jnp
ss
jmp
incl
sbb
lahf
int3
cmc
ljmp
popa
jp
xor
or
add
add
jp
and
mov
jne
js
call
xchg
inc
xchg
fldl
mov
jmp
call
test
xor
call
popf
cmovs
filds
jg
push
add
jno
adcb
jl
call
sbb
jecxz
inc
in
dec
pop
pop
dec
and
sbb
in
add
xor
in
and
cmp
jle
pushf
or
push
stc
adc
ret
addb
inc
in
mov
fnstsw
cli
pop
icebp
pop
add
cmpb
test
std
lcall
jne
loop
pop
cmpsb
mov
out
dec
pushf
fiaddl
popa
fists
adc
xchg
push
out
xor
fildll
test
out
add
jmp
lcall
adc
xchg
addr16
arpl
call
add
jae
js
or
mov
dec
add
les
loop
in
xchg
test
xchg
in
faddl
xchg
add
inc
push
jl
lcall
jge
les
incl
add
pop
ljmp
je
bound
or
or
in
xchg
stc
stos
sbbb
fiaddl
lret
push
jmp
sub
fists
stc
push
outsl
add
fists
add
xor
xchg
stc
push
in
xchg
stc
arpl
adc
push
xchg
stc
sub
adc
add
lds
jmp
das
cltd
idiv
hlt
loop
push
mov
jmp
and
jl
mov
cwtl
idiv
inc
loop
push
jp
jmp
sub
jl
mov
out
xchg
idiv
xor
inc
sbb
sbb
pop
aam
jmp
jl
aaa
adc
out
cwtl
idiv
test
jl
ss
out
cwtl
idiv
add
add
fwait
idiv
je
add
cmp
jmp
ret
fiadds
jnp
pop
call
popf
add
loop
psubsb
pop
add
pop
adc
sub
jg
mov
adc
stc
mov
or
stc
jle
jl
jae
out
std
cld
popa
idivl
cli
sbb
add
dec
push
jg
mov
idiv
xor
adcb
mov
cli
cli
sbb
mov
call
sbb
pop
mov
jmp
xchg
lcall
leave
adc
jmp
lcall
ficoml
fldpi
inc
xchg
loop
and
out
add
inc
rcrb
sbb
or
add
pusha
rorb
lock
add
addr16
lcall
test
add
cmpsb
jmp
cltd
jp
js
sub
fbld
movl
adc
aam
ficoms
loop
scas
cltd
add
fdivrs
rcrl
add
xlat
jge
lret
xchg
je
lds
push
rclb
jl
fsubl
sbb
add
add
or
jl
fcoml
sbb
and
adc
xchg
xchg
jge
aam
insl
daa
jb
std
mov
jno
stc
stos
pop
sbb
in
call
xchg
stc
stos
pop
sbb
in
pop
jmp
stos
pop
sbb
out
test
jmp
push
pop
aam
test
add
sysret
inc
jno
jge
push
adc
add
fdivrl
or
idiv
add
mov
fcoms
add
fiadds
sahf
loope
scas
xchg
testb
mov
jge
pop
push
test
add
loop
ljmp
sahf
jp
xchg
pusha
je
dec
adc
jl
inc
bound
inc
xchg
idiv
test
jl
inc
or
call
add
xchg
idiv
fiadds
jnp
fldl
std
out
das
std
cli
sbb
leave
push
call
pop
ret
push
in
aad
std
mov
push
jge
xor
pop
std
mov
sub
cmc
jle
xchg
add
scas
adc
jle
pushl
or
jns
cmpl
cli
cli
add
popa
movl
cli
dec
out
loopne
cli
sbb
pop
sub
add
adc
data16
pop
fstl
scas
push
sti
add
les
daa
xchg
xor
sub
lods
adc
or
jmp
mov
sti
push
adc
push
push
pop
add
cmp
rolb
lods
xchg
ljmp
add
test
xchg
insb
out
out
test
xchg
data16
pop
cmp
cli
fs
popl
pop
sbb
add
ds
loope
add
sahf
xchg
or
fstpl
and
fnstsw
in
add
mov
push
and
inc
or
iret
or
std
call
or
pop
add
mov
add
sbb
imul
xor
mov
mov
add
add
jae
lahf
ljmp
test
sub
enter
stos
ja
push
mov
jae
sub
data16
inc
nop
negl
cli
cmp
mov
dec
movsl
je
dec
sahf
je
dec
cmpsl
je
dec
cmpsb
je
dec
push
je
cmp
mov
add
cmp
mov
lea
jp
sti
xchg
leave
cmp
ret
mov
sbb
mov
cmpl
sar
call
lcall
jae
insl
jae,pt
insl
cmp
insl
ss
mov
insl
cs
insl
es
insl
and
insl
push
jae
insl
sbb
insl
push
fidivrs
je
mov
je
stos
addr16
add
mov
or
stc
shll
or
fldl
into
rcrl
and
fwait
test
push
idivb
lea
scas
pop
pop
add
mov
jbe
cli
and
push
jmp
jge
cli
popf
sti
aas
pop
shr
or
add
bound
add
lcall
test
lods
cmpsb
mull
fstpl
aad
ljmp
in
and
out
mov
out
ficomps
add
pushf
and
pop
call
and
cmpsl
add
shl
add
adc
jmp
xchg
negl
cli
push
pop
adc
mov
jecxz
sbb
add
sbb
andb
out
pushf
sbb
add
pop
call
lods
leave
pop
adc
jbe
test
lahf
outsb
xchg
stc
push
imul
repz
jl
pop
adc
stc
sahf
sbb
shr
pop
jge
imul
xchg
xor
mov
jae
or
push
insl
stos
add
sarb
fisttpl
xor
nop
je
add
add
iret
jge
fmull
add
xchg
stc
es
psubb
dec
pop
jmp
sub
jl
jbe
add
arpl
cmp
out
iret
call
add
dec
adc
ret
inc
in
mov
add
addb
scas
inc
inc
inc
mov
aaa
pop
jbe
pop
inc
hlt
ljmp
jl
inc
or
call
add
je
roll
pop
jge
mov
rolb
incl
sbbl
out
ljmp
cld
out
jnp
push
jns
hlt
call
pusha
inc
and
add
lret
mov
add
cld
dec
sbb
fsubrp
cmp
fidivs
adc
xchg
mov
cli
pop
and
add
jl
jl
jl
or
add
or
sarl
inc
ss
cli
inc
mov
std
jnp
or
xchg
pop
add
adc
push
pop
incb
decb
mov
call
sbb
jg
clc
out
sti
out
insb
cmc
cli
popf
outsb
ss
shll
aam
cmp
pop
mov
cmp
ficomps
add
fsubs
add
in
daa
add
fimuls
fistl
or
or
aas
rolb
insl
mov
add
or
jl
sahf
lea
push
sahf
in
loopne
add
mov
cmp
and
fbld
pop
xchg
and
add
pop
call
mov
loope
out
divl
not
mov
add
in
pusha
xchg
sti
inc
or
or
roll
ljmp
stc
jmp
fwait
addl
pop
xchg
or
jns
clc
loope
insl
jmp
stos
pop
xchg
or
jne
mov
mov
sahf
shlb
call
stc
mov
jmp
rcll
fisttpl
jmp
add
and
or
pop
and
stc
sbb
jmp
push
leave
mov
push
push
jle
int
je
inc
jp
je
cmpsb
sub
mov
xchg
idiv
cld
adc
jp
aam
mov
add
pop
scas
inc
jbe
mov
inc
pop
jbe
pop
inc
ljmp
or
call
add
push
xchg
idiv
test
roll
pop
jge
scas
mov
roll
adc
out
xchg
idiv
loopne
or
stos
mov
ret
je
pop
jne
loop
add
mov
mov
repnz
mov
icebp
cld
jle
inc
repnz
cltd
xor
sahf
mov
xchg
pop
incb
inc
pop
fdivl
mov
ja
fidivs
ficomps
std
push
orl
fidivrs
xchg
std
inc
ja
fidivs
fiadds
adc
std
sbb
fidivs
fiadds
std
add
add
mov
fidivs
fisubrs
clc
adc
pop
in
lret
mov
add
pop
call
mov
add
ficomps
cltd
mov
pop
call
mov
ficomps
mov
out
ficomps
add
pop
or
ficomps
xchg
push
mov
add
pop
call
mov
mov
mov
mov
add
pop
call
mov
mov
xchg
add
call
mov
xchg
xchg
add
lret
adc
stc
jmp
fstpl
jge
mov
movsl
pop
add
push
mov
jmp
fstpl
dec
dec
mov
in
pop
add
addr16
jmp
fstpl
lret
sub
stc
int
pop
add
push
mov
jmp
fstpl
sti
xchg
mov
fucom
pop
add
mov
jmp
fstpl
imul
cmp
add
pop
add
fstpl
jmp
fstpl
jmp
pop
pop
add
sti
jmp
sti
decl
jmp
sti
jns
sti
decl
sti
incl
ljmp
movsl
loop
decl
in
decl
sti
pushl
jecxz
jmp
in
incl
in
push
jecxz
pushl
add
sti
dec
jecxz
incl
jecxz
decl
sti
pushl
in
decl
in
push
in
incl
push
cwtl
std
stc
fstl
std
jmp
das
cwtl
std
std
sarl
std
leave
popa
mov
std
mov
fistps
std
mov
xchg
scas
std
xchg
mov
mov
lods
std
jns
lods
std
jno
lods
std
imul
mov
pop
ja
fiadds
pushf
std
inc
and
xor
std
sub
popf
std
and
popf
std
adc
pushf
or
cmp
test
jmp
out
ficomps
fildl
lret
test
add
ret
test
mov
test
stos
test
lea
test
lea
test
mov
test
mov
pop
mov
xor
pop
test
mov
popa
mov
test
cmp
mov
test
gs
cmp
cmp
cmp
add
stc
stos
cmp
cmp
push
cmp
jge
stc
imul
pop
addb
popa
addb
xor
cmp
mov
cmp
cltd
cmp
stc
pop
cmp
stc
jne
cmp
ja
cmp
jp
stc
fwait
addb
add
add
stc
add
mov
sti
call
aas
dec
ljmp
sti
ljmp
sti
call
pushl
pushl
sti
ljmp
aam
incl
sti
out
aad
decl
sti
pushl
sti
jmp
sti
call
sti
pushl
incl
add
mov
sti
incl
call
aad
ljmp
fidivs
std
xor
mov
sub
mov
and
mov
adc
mov
or
mov
add
mov
stc
movsl
mov
icebp
leave
mov
jmp
imul
jge
std
leave
jnp
std
rorl
std
mov
mov
test
add
sub
mov
mov
mov
addl
mov
jno
mov
imul
std
pop
jg
std
push
lea
mov
lds
xor
jno
and
sti
mov
addl
mov
andl
mov
ficomps
mov
andb
add
fildl
out
ficomps
add
fstp
add
add
fucom
add
fucom
add
pop
lcall
or
mov
pusha
xchg
jnp
notl
imul
cltd
pop
addb
ja
stc
jg
cmp
addr16
push
cmp
push
cmp
inc
cmp
inc
cmp
ja
stc
sub
add
stc
int
cmp
data16
push
cmp
push
cmp
inc
cmp
inc
cmp
jbe
stc
xchg
jbe
stc
jmp
imul
jecxz
cmp
repz
cmp
jmp
ds
daa
aas
cmp
xchg
cmp
mov
mov
cltd
mov
sti
ljmp
mov
sti
cmp
sti
call
jmp
sti
incl
sti
ljmp
jmp
sti
incl
sti
call
fdivrp
jmp
sti
ljmp
sti
jmp
sti
call
sti
pushl
loope
call
loope
jmp
loope
lcall
loope
incl
add
loopne
decl
stos
pushf
std
imul
pushf
std
pop
add
std
dec
or
std
cmp
std
xor
std
and
xchg
std
adc
xchg
std
add
fwait
std
stc
jmp
std
icebp
dec
pushf
std
jmp
add
shll
pushf
std
rcl
std
add
mov
test
std
mov
pushf
std
xchg
lods
pushf
std
mov
ficomps
jge
popf
imul
arpl
mov
push
jge
mov
inc
jge
mov
xor
mov
and
mov
adc
mov
add
mov
add
repz
mov
jecxz
sub
sarl
lret
jl
popf
ret
jl
mov
mov
jae
stos
jl
mov
fwait
jl
mov
aas
jp
mov
jp
mov
fstpl
out
push
jp
add
stc
fnstenv
stc
jmp
jae
stc
iret
imul
push
jp
aad
jp
sub
add
stc
pop
dec
jp
jp
pop
imul
shrl
stc
fists
stc
insl
dec
jp
dec
push
jp
cmp
stc
popf
jo
stc
insl
push
jns
mov
jns
xchg
push
jns
sub
stc
mov
jns
mov
stc
add
sti
call
sar
ljmp
pop
add
push
sar
lcall
add
sti
push
aad
incl
add
dec
iret
sti
ljmp
iret
sti
cmp
add
adc
pop
add
stc
pop
add
mov
pop
add
add
add
fstps
or
add
lret
pop
add
pop
add
mov
add
std
lcall
std
lcall
std
lcall
std
lcall
std
fisubs
mov
imul
scas
std
pop
scas
scas
std
push
mov
mov
inc
nop
mov
cmp
scas
std
xor
dec
scas
popa
outsl
push
mov
lea
shl
bound
dec
outsl
popa
jb
xor
outsl
insl
test
inc
fldt
push
add
inc
mov
dec
faddp
imul
pop
int3
outsl
cmp
add
notb
jno
pop
xchg
jo
or
push
testl
xor
sbb
or
add
sub
adc
rcrl
mov
out
sbb
icebp
inc
arpl
jmp
pop
xchg
or
add
pop
add
ja
adc
pop
sub
jg
or
addb
push
shll
cld
shrl
or
add
cld
add
xor
imul
sbb
fldl
arpl
add
pusha
test
add
hlt
add
jmp
adc
or
pop
add
or
push
mov
push
or
add
add
mov
pop
xor
icebp
dec
dec
icebp
inc
sbb
ljmp
jl
insb
sbb
fucomp
sub
mov
arpl
test
mov
add
push
push
pop
sbb
addb
dec
push
and
arpl
fs
xchg
add
jne
add
add
add
push
jb
or
inc
pop
and
adc
je
pop
push
add
add
arpl
adc
jne
hlt
add
js
cmp
add
mov
insl
shlb
add
in
jae
fistps
push
jne
lahf
push
cmp
mov
insb
jb
mov
push
add
sub
arpl
mov
std
inc
fdivrl
push
pop
loope
outsb
sti
repz
add
push
push
jne
clc
inc
outsb
sti
sub
outsb
lret
insb
lahf
cmp
mov
dec
insb
jb
inc
data16
ret
inc
pop
push
ficoms
or
popa
bound
js
inc
adcl
jp
imul
pop
or
add
pop
stos
push
or
inc
sbb
gs
jmp
push
sub
mov
inc
std
mov
cmp
pop
mov
push
or
mov
push
xchg
data16
stc
mov
add
add
jbe
add
add
notb
scas
out
dec
popa
mov
pusha
and
or
ret
incb
lds
cmp
cmpsb
jmp
dec
pop
aaa
addr16
or
push
jnp
or
add
xchg
add
fldl
jne
jl
inc
sti
js
inc
loope
and
movsl
cmp
push
fstpt
adc
gs
cmp
inc
sarb
aas
mov
add
mov
ljmp
fucom
jmp
or
pusha
stc
and
add
add
add
mov
outsb
push
loop
add
test
pop
cmp
mov
notb
fstl
add
pop
jg
jne
negl
add
or
mov
pop
jb
or
negl
add
movsb
push
jno
xchg
add
inc
dec
inc
lcall
test
addr16
sti
arpl
or
imul
xchg
add
je
pop
sti
arpl
and
gs
jne
in
add
dec
jae
gs
or
cld
add
mov
sbb
testl
add
and
jnp
das
mov
imul
push
fiadds
ds
pop
fs
inc
dec
gs
cs
adc
push
aas
mov
add
cmp
insb
jo
mov
bound
std
je
rorl
or
dec
gs
cs
pop
incb
aad
imul
out
fs
loope
rcr
pusha
je
adc
mov
sbb
pop
inc
fimuls
push
lods
or
imul
hlt
out
jns
aaa
pop
add
mov
or
sbb
push
test
out
lock
push
pop
jb
or
and
dec
cmp
out
int
mov
xor
sub
out
ljmp
push
in
mov
pop
call
pop
or
jnp
repz
add
call
pop
rcrb
push
mov
push
pop
mov
add
add
xchg
jmp
pop
dec
ljmp
and
fs
sbb
test
sbb
cmc
mov
add
xor
add
cmp
arpl
adc
imul
xor
fistpl
pop
outsl
lcall
outsl
xchg
add
cli
cli
insl
jp
aas
dec
mov
mov
sub
push
cwtl
add
sub
aam
pop
jo
add
aaa
pop
iret
add
insb
gs
ds
pop
ds
addr16
or
data16
cli
push
out
insb
gs
pop
sbb
addl
insb
gs
inc
outsl
je
pusha
je
add
pop
jp
inc
je
bound
jno
outsb
mull
push
push
fs
xchg
add
pop
jo
aas
insb
pop
clc
pop
add
and
inc
push
je
or
add
dec
add
movl
dec
je
sbb
std
dec
fidivl
pusha
je
pop
popa
dec
js
insb
insb
addl
jg
pusha
push
add
insb
push
pop
gs
je
add
sub
dec
inc
cmpsb
dec
inc
xor
stc
dec
aaa
mov
gs
insb
insl
cmp
bound
mov
push
pop
lret
stc
dec
sti
sarb
imul
dec
gs
mov
loopne
popf
clc
jae
popa
mov
out
xor
ljmp
mov
add
pop
sub
or
push
push
cmpsb
clc
or
push
add
add
add
bound
bound
paddusw
out
pop
ficomps
add
divb
adc
mov
or
sub
sbbl
mov
std
pushf
dec
add
add
cltd
add
scas
clc
pop
dec
scas
cld
dec
inc
mov
xchg
and
cld
je
mov
adc
outsl
or
icebp
arpl
frstor
add
mov
push
loop
add
jb
arpl
ds
je
fstpl
fs
inc
cli
arpl
ffree
lods
or
push
sarb
add
add
dec
mov
add
cld
icebp
addr16
pop
add
push
sbb
inc
pop
sbb
push
push
cmp
push
imul
adc
jb
mulb
inc
pusha
test
clc
divb
jo
xchg
add
lock
std
arpl
sbb
popa
jl
rclb
outsb
mov
jne
fildll
add
push
push
dec
imul
das
imul
stos
negb
mov
add
sbb
adc
and
mov
pop
daa
add
mov
pop
imul
std
frstor
push
pop
shl
push
jns
je
lahf
frstor
dec
imul
push
inc
mov
imul
sub
add
inc
pop
jne
add
xor
pop
jb
std
in
filds
je
pop
popa
sub
ficomps
inc
aaa
cltd
push
push
inc
leave
pop
pop
aas
xchg
inc
imul
pop
int
inc
pop
mov
pop
or
test
clc
mov
lock
cli
lock
push
rorb
xchg
add
pop
sub
and
ret
adc
push
add
out
cmp
mov
push
loopne
das
arpl
mov
dec
jnp
xor
lock
es
xor
jns
or
push
inc
pop
sbb
aaa
add
inc
cmp
rcrl
pop
cmp
or
mov
sarb
in
dec
daa
imull
flds
stos
xor
pusha
popf
clc
sbb
add
pusha
cltd
or
add
adc
pushf
stc
insb
xchg
adc
xchg
mull
loop
add
mov
add
in
bound
cli
pop
cmp
fstpl
imul
je
mov
outsb
add
add
cmpsb
fcompl
cmc
and
addr16
sbb
fs
clc
imul
fnstsw
incl
add
add
mov
fs
scas
adc
pop
mov
popa
arpl
push
imul
dec
gs
gs
add
data16
add
bound
rcrl
pusha
je
pcmpgtb
or
gs
inc
lds
inc
dec
adc
daa
fs
std
add
push
popa
inc
js
add
gs
push
jns
inc
pop
push
outsl
ret
arpl
add
cmc
arpl
mov
ds
imul
popa
inc
aas
mov
mov
inc
cmp
pop
popa
or
je,pn
mov
add
inc
call
aad
outsl
add
push
gs
dec
outsl
call
push
inc
mov
test
pop
push
push
imul
sbb
std
xchg
aas
push
add
add
adc
jge
cmp
adcb
jg
pop
imul
mov
inc
push
gs
pop
or
inc
jmp
push
xor
pop
cmpsl
pop
inc
jmp
inc
inc
jmp
push
xor
pop
stos
push
sti
imull
pop
push
psubsb
push
pop
mov
pop
or
xchg
push
or
out
xchg
push
mov
add
dec
arpl
add
cltd
icebp
dec
pop
mov
push
xor
sar
inc
push
orl
pop
jp
sbb
jb
adc
mul
add
and
adc
adc
pop
add
es
jo
fnstsw
push
fistl
add
push
lcall
add
add
cld
jmp
gs
adc
push
jmp
add
sbb
pop
add
frstor
mov
repz
jmp
shr
inc
xchg
add
lods
stc
dec
dec
movsl
clc
jae
sahf
imulb
ficoml
xor
cli
ds
adc
sub
jae
cld
pop
je
add
je
pusha
movsl
add
cld
je
add
mov
outsl
mov
jb
jmp
add
push
or
push
add
sti
je
lcall
outsl
push
pusha
or
inc
pushl
pop
add
fdivs
imul
rcrl
gs
gs
or
addr16
gs
pop
jae
sbb
jo
push
imul
rolb
mov
dec
popa
imul
imul
push
inc
pusha
outsl
dec
push
pop
sub
cmp
push
ficoms
jne
mov
push
pushf
push
add
cmp
dec
add
push
jae
pushf
push
add
add
rcrb
sti
push
popa
add
inc
add
xchg
push
ret
rcrl
mov
shrl
add
js
inc
ret
add
sbb
add
mov
cmp
mov
push
subl
dec
xor
pop
pop
add
imul
pop
js
add
pop
loopne
sbb
out
repz
cmp
out
out
pop
and
pop
aam
inc
out
stos
pop
xor
mov
pusha
adc
rcrl
repnz
hlt
sti
ret
pop
mov
push
sti
repz
add
icebp
jmp
mov
or
add
xchg
pusha
lret
push
mov
push
pop
ficomps
add
out
push
arpl
add
fcmovb
jmp
movsb
stc
imul
fiaddl
es
dec
or
repnz
push
cmp
add
frstor
imul
and
ds
aas
cld
aas
jmp
add
jo
adc
imul
add
icebp
insl
enter
jmp
and
push
rclb
imul
pop
cli
imul
frstor
imul
cmp
or
pop
and
les
pusha
jb
push
outsb
lds
add
pop
dec
imul
pop
insw
cmpsl
push
push
add
add
or
add
inc
fadds
dec
jne
adc
mov
inc
bound
pop
out
jnp
pusha
fs
pop
pusha
addr16
add
pop
ds
data16
add
pop
or
ds
pop
outsl
imul
mov
ja
stc
outsb
fidivs
fidivrs
pusha
bound
pop
xor
add
add
pop
decl
sbb
push
cmpl
push
jne
pop
das
gs
inc
push
outsl
push
dec
pop
outsb
cmp
dec
inc
fs
popa
cmp
add
cmp
std
mov
add
das
gs
test
sbb
pusha
je
lds
ljmp
or
mov
arpl
add
pop
daa
add
jmp
dec
mov
pop
fiaddl
pushf
hlt
cmp
clc
inc
push
ficomps
add
clc
cmp
xchg
inc
push
insl
sbb
add
pop
and
or
pusha
aas
ljmp
stos
pop
and
pop
inc
ljmp
xor
shlb
repnz
dec
ficomps
add
stc
ret
jmp
mov
sbb
movsb
pusha
cld
pop
xchg
fs
clc
mov
sahf
fldl
stos
mov
repz
or
add
ficompl
imul
push
fiaddl
sub
insb
push
movsl
repz
stos
or
add
fmull
fs
test
je
sub
or
int
jmp
and
stos
pop
incl
add
cmpsl
insl
int3
adc
sbb
mov
gs
lret
push
pop
loop
pop
mov
pusha
mov
insl
dec
pop
mov
dec
lret
mov
imul
add
je
mov
insl
outsl
mov
lcall
cwtl
cmp
mov
push
mov
pop
push
pop
popa
nop
add
add
mov
outsl
clc
xchg
outsl
in
add
jmp
xchg
pop
outsb
mov
mov
inc
mov
dec
popa
push
mov
dec
jns
lods
pop
insl
push
mov
insl
gs
push
dec
lock
push
fidivrs
push
int3
in
scas
repz
jne
or
mov
dec
add
icebp
add
mov
mov
inc
je
mov
std
dec
fdivrl
arpl
cmp
xchg
popa
insl
xchg
dec
js
inc
add
je
push
jne
decl
cmp
bound
inc
sub
xor
pop
xor
decl
and
dec
or
xor
xor
add
mov
inc
add
dec
add
es
pop
insl
add
add
ret
mov
xchg
add
pop
lahf
sub
sarb
pop
js
xchg
rorb
aam
xor
ds
xchg
mov
sbb
popf
shlb
jnp
sub
dec
lcall
sub
sub
shll
sub
mov
add
pusha
mov
aaa
add
stos
das
add
dec
fisttpl
popf
add
frstor
lods
ret
shrb
pop
mov
loop
pop
popf
test
je
test
mov
int3
push
lock
add
test
out
pop
add
addr16
les
shrl
sbb
shrb
scas
into
addr16
scas
add
fldt
pop
or
ret
dec
add
add
cmpsl
pop
push
and
outsb
add
ret
jp
loop
add
rol
add
gs
mov
imul
xor
arpl
cmpb
pop
xor
xchg
andb
push
add
xchg
pop
jb
mov
jb
mov
subb
xchg
jp
mov
add
mov
push
mov
xchg
jp
rclb
insl
outsl
cmc
mov
add
dec
gs
mov
arpl
mov
inc
add
pop
and
push
jne
push
xor
and
pop
or
xor
popa
std
and
gs
cli
pop
push
int3
out
gs
inc
outsl
mov
pop
outsb
lahf
inc
add
add
add
add
gs
xlat
sbb
outsl
mov
sub
inc
add
jne
mov
imul
lcall
sub
incb
jno
xor
push
ficomps
add
sar
cs
add
popf
cmp
sarl
add
popf
cmp
add
sarl
ret
scas
mov
lret
shlb
mov
scas
mov
stos
rclb
cmpsl
int
inc
adc
and
js
xor
xor
sbb
test
aaa
sub
ljmp
stos
add
sbb
or
dec
rolb
adc
enter
pop
add
add
fstl
inc
lret
push
xchg
push
aad
pop
add
mov
imul
fnsave
push
addb
outsb
mov
enter
xchg
push
xchg
ficompl
insb
inc
shlb
mov
push
loop
add
mov
mov
xchg
sarb
mov
mov
xchg
jae
out
mov
fimull
cmp
xchg
pop
js
popa
je
incb
imul
imul
imul
popa
mov
inc
jl
push
push
outsb
jb
lea
pop
mov
pop
xchg
insl
outsl
mov
bound
popa
mov
inc
jl
dec
push
test
add
aam
pop
jne
mov
mov
pop
xchg
add
mov
sahf
mov
lcall
jne
mov
pop
fiadds
and
inc
xchg
fs
gs
aaa
xor
pop
push
imul
pop
xor
xor
sti
and
xor
data16
in
and
dec
negl
add
add
mov
loope
dec
mov
xlat
sub
scas
inc
add
je
fldenv
jne
lods
xor
cltd
xor
popf
sub
popa
jge
std
mov
xchg
jns
pop
ss
jnp
cs
aad
and
in
sub
cmp
sbb
adc
adc
inc
scas
cld
sub
cmp
pusha
mov
das
add
sub
mov
push
ficomps
add
iret
shll
movsl
leave
negb
mov
adc
mov
ret
iret
xchg
push
mov
scas
sub
mov
ljmp
movsb
sbb
mov
pop
add
mov
add
mov
add
mov
shrb
lahf
push
jmp
stc
scas
add
std
add
rcrl
leave
pop
call
les
sub
add
jecxz
insl
fistpl
shll
scas
add
bound
mov
pop
stos
add
je
lods
pop
add
nop
leave
jae
lcall
jnp
leave
jae
lods
pop
add
lods
bound
lods
outsb
add
add
lods
add
mov
popa
mov
subl
jo
push
mov
dec
add
jl
push
add
gs
pop
add
gs
cltd
jo
arpl
pop
jno
xor
push
and
add
popa
jae
dec
jae
test
push
subl
add
push
popa
mov
inc
fs
fwait
bound
mov
fidivs
add
xchg
sbbb
subl
gs
inc
add
je
je
imul
std
scas
ficoms
sbb
sbb
inc
add
je
test
insl
cld
sub
add
je
push
sbb
sub
add
adc
lock
add
fdivp
and
and
mov
jecxz
add
inc
add
stos
aam
insl
scas
add
pop
jg
js
mov
push
es
mov
add
movsl
push
dec
lahf
lods
and
jge
dec
add
pop
sbb
sarl
push
mov
aaa
add
pop
cmp
push
ds
ret
inc
scas
or
cmpsl
ljmp
add
pop
sub
or
or
cli
mov
movl
mov
repnz
pop
rolb
popf
mov
pushf
inc
mov
cmpsb
ljmp
mov
mov
stos
rorb
xor
mov
pop
jmp
mov
mov
gs
add
add
add
add
insl
add
ret
lcall
icebp
fisttpll
aas
sti
rol
cmc
iret
les
fst
add
fcomps
dec
mov
jg
test
add
insl
sar
push
sahf
pop
mov
shrb
xchg
add
and
outsl
outsb
js
je
jns
imul
add
cmp
ja
je
jp
imul
dec
daa
cs
test
jl
inc
or
pop
inc
xchg
push
jb
subb
andb
lea
jecxz
aaa
imul
insb
gs
insb
dec
bound
popa
mov
inc
jle
push
xchg
popa
add
add
divl
gs
clc
push
gs
ss
outsl
xchg
jecxz
gs
jb
addb
data16
ds
mov
push
insl
outsb
xchg
xor
mov
add
je
bound
je
pop
pop
add
jae
dec
inc
jae
pop
sub
add
add
push
add
add
aaa
insb
add
or
sub
inc
sti
or
je
sti
inc
add
in
add
pop
mov
mov
xchg
inc
mov
popf
cmp
pop
cmpsl
aas
cmpsl
nop
fsub
mov
pop
push
lahf
mov
and
jge
push
and
test
aas
add
pop
inc
ss
sub
push
and
ljmp
mov
cmp
add
dec
rorl
ficomps
add
ret
or
push
and
sar
sbb
ret
int3
pop
scas
push
pop
xchg
mov
add
jnp
clts
mov
add
idivb
pop
fwait
jmp
mov
push
jnp
pop
add
xchg
jno
mov
add
mov
dec
test
fcmovnu
mov
push
mov
adc
push
sbb
cmp
dec
cld
in
mov
std
sbb
jae
xor
push
mov
leave
mov
pop
add
andl
xchg
dec
outsb
je
insb
jb
pop
push
add
je
test
dec
andl
mov
push
imul
inc
jg
je
jbe
add
popa
push
inc
lahf
mov
insl
inc
mov
jl
gs
add
jl
cmp
xchg
insl
push
or
pop
je
jge
popa
pop
cmp
mov
xor
gs
jmp
pop
add
nop
pop
jb
cmp
inc
add
and
and
add
sbb
aas
leave
sbb
gs
ret
std
dec
mov
pop
outsb
enter
mov
repnz
outsl
popf
aad
insb
jl
sbb
outsl
fdivrp
and
and
jae
popa
jge
push
outsb
jp
std
dec
fimuls
sub
xor
inc
test
dec
cmp
gs
pop
add
xchg
inc
xor
dec
cs
and
add
inc
xor
pop
testb
sbb
push
rcl
xor
ret
sti
into
aad
stc
shll
xor
insl
pop
mov
and
mov
add
ret
mov
int3
jge
jg
xchg
sbbl
xchg
rcll
test
ret
or
dec
data16
ljmp
add
sbb
xor
sbb
dec
roll
push
ficomps
add
mov
add
lods
outsb
add
les
idivl
mov
add
ret
shrb
mov
pop
lods
cmc
pushf
add
xchg
addr16
push
mov
pop
mov
pushf
push
negb
cmpsl
fstl
pop
xchg
add
xchg
pop
js
shlb
add
xchg
imul
addr16
jmp
xchg
addr16
notb
insl
popa
lret
test
out
gs
out
pusha
push
ja
pop
add
mov
xor
mov
ja
addl
push
pop
je
jne
inc
add
andb
push
add
mov
outsb
dec
jne
outsb
pop
mov
fwait
mov
insb
imul
dec
add
addr16
push
lcall
add
pop
dec
je
mov
and
gs
lea
fisubs
add
mov
inc
xor
inc
xor
cmovb
outsl
or
fidivrs
je
dec
pop
add
repnz
ss
sbb
add
je
or
gs
das
gs
or
adc
lods
fdivrp
push
je
call
pop
je
xor
faddl
fsubrp
cmp
mov
rcrb
inc
lahf
mov
or
sub
add
daa
dec
stos
cmp
dec
popf
add
add
add
mov
sbb
adc
push
inc
push
mov
aaa
cld
mov
add
add
push
add
mov
inc
scas
xchg
sti
icebp
pop
mov
call
inc
mov
push
mov
mov
sbb
in
cwtl
subb
and
jge
ficomps
add
add
inc
push
jnp
pop
sbb
hlt
mov
pop
push
fisubrl
dec
aaa
xchg
mov
add
mov
addr16
push
jmp
ret
cmpsb
scas
leave
push
les
mov
aad
mov
jmp
cli
iret
pop
sahf
out
leave
inc
mov
mov
out
mov
jmp
add
daa
jmp
pop
add
fstpl
jmp
fstpl
jmp
negl
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
pop
add
ja
add
xchg
add
pop
add
ja
add
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
fidivs
add
xor
add
ss
add
ss
add
ss
add
ss
add
ss
add
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
pop
add
ja
add
xchg
add
add
pop
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
fidivs
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
add
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
add
add
ja
add
xchg
add
pop
add
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
add
ja
add
xchg
add
add
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
add
mov
add
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
add
fiadds
add
inc
add
add
inc
add
add
inc
add
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
pop
add
pop
add
mov
add
mov
add
xchg
add
pop
add
add
ja
add
xchg
add
pop
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
fiadds
fiadds
fiadds
add
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
add
fiadds
fiadds
ficomps
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
add
xchg
add
pop
add
ja
add
xchg
add
pop
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
add
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
fiadds
ficomps
add
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
add
aaa
pusha
add
aaa
pusha
add
pop
pusha
add
pop
pusha
add
negl
add
pop
add
pop
pusha
add
enter
push
push
jmp
andl
add
mov
mov
ret
cs
mov
add
test
mov
add
dec
sbb
adc
test
and
adc
sbb
xor
fsubs
adc
bound
jne
xor
xor
push
push
clc
add
lret
pop
out
aas
fidivs
mov
push
inc
xor
push
data16
add
lret
sbb
aas
add
fidivs
jnp
cmp
and
fiadds
adc
jl
fiadds
xor
je
mov
scas
rcll
in
jp
xor
mov
mov
mov
or
cmp
mov
clc
cmp
rclb
lret
and
scas
cmp
pop
jnp
cmpsb
mov
aad
jae
add
jg
sub
imul
lods
xor
xor
sbb
xchg
add
jecxz
lods
xchg
fistl
outsl
push
arpl
xlat
fcmove
mov
outsb
out
stos
not
orl
cwtl
ret
add
xchg
movsb
mov
cld
add
sbb
pop
ljmp
aam
call
push
call
add
add
pop
push
bound
push
mov
orl
bound
outsb
add
push
loopne
push
pop
and
ss
jmp
cmp
aam
xor
sub
sub
jle
in
push
mov
mov
sub
cwtl
xchg
cwtl
clc
cld
test
jmp
movsl
sub
jmp
add
push
out
fs
hlt
add
fstp
lods
lods
and
add
sub
add
aam
jne
test
js
xor
inc
clc
inc
repz
rol
bound
shlb
mov
pop
add
pop
add
scas
pop
adc
sahf
push
ss
jmp
ret
je
sti
jne
ret
push
or
pop
dec
xor
add
jno
decl
adc
decl
ss
inc
mov
pop
and
pop
cmp
sbb
or
xor
xchg
push
sti
xchg
xor
xchg
mov
mov
popl
sub
pop
and
imul
add
add
out
je
stos
out
push
mov
push
jg
std
or
sub
lret
fidivs
popf
jnp
xor
sti
sub
push
push
sbb
mov
or
jnp
pop
loop
add
repz
ret
add
sbb
fiadds
push
ljmp
jae
pop
cwtl
fwait
add
cmc
push
ljmp
mov
mov
sbb
adc
cmp
loopne
or
mov
ret
and
xchg
icebp
pop
cwtl
ss
bnd
imul
pusha
mov
das
jo
ljmp
lea
pusha
xchg
add
push
sub
stc
bound
sar
icebp
clc
mov
hlt
cltd
cmc
push
fstpl
stos
loop
stc
jmp
mov
cltd
cmc
add
in
or
fsubrs
outsl
loope
pusha
jns
int
setge
add
leave
pop
mov
cmp
and
xor
mov
and
ljmp
lret
and
popf
shll
jmp
icebp
roll
add
push
add
mov
lock
enter
test
add
pusha
add
les
inc
dec
sar
test
dec
and
repz
adc
adc
ret
into
cld
push
jbe
lods
and
add
pusha
loopne
test
sti
pop
cmp
or
imul
jno
pop
or
cmp
data16
int
testb
je
add
aad
mov
insl
sub
mov
psrld
sbb
int
fucom
and
fdivl
jle
sbb
add
fidivs
lds
inc
xchg
xorb
cs
pop
jbe
into
testl
out
mov
cli
lret
cmp
popf
leave
fnstenv
mov
add
loope
push
or
fmuls
scas
pushf
cmp
stc
jae
mov
push
inc
js
mov
mov
mov
push
cmp
xchg
fstps
add
fs
mov
loop
fldl
aas
ficomps
xor
test
sbb
and
loopne
shl
or
ss
pop
fadd
add
mov
and
fstpl
mov
fwait
stc
pop
ljmp
es
mov
pop
in
add
pop
cwtl
jle
cmpsl
inc
or
pop
xchg
sti
add
add
sbb
pop
add
leave
and
push
pop
loope
repnz
outsb
int
xchg
jmp
inc
mov
fdiv
jns
adc
jg
add
out
push
ret
add
cmp
or
jmp
sahf
inc
add
pop
loope
fcmovb
pop
push
jbe
jns
ljmp
stc
cltd
fnstsw
add
and
jb
cmp
sub
jg
cli
xor
out
insb
and
addl
inc
sar
jae
fsubr
and
add
jns
mov
adc
jl
add
lret
adc
dec
mov
leave
js
mov
add
or
dec
jg
and
scas
fs
sub
jb
mov
imul
sti
decl
sbb
add
lahf
mov
leave
hlt
lret
jge
and
or
sub
cli
add
add
subl
xchg
push
jle
out
add
or
jnp
or
mov
out
outsl
inc
mov
call
adc
jg
sub
test
in
sti
jle
push
adc
fisubrl
addb
call
sub
fisubs
push
inc
dec
mov
push
add
popa
push
sub
mov
lea
jl
add
fs
aam
in
insl
sub
lret
add
rcrl
mov
mov
push
shrl
mov
fldl
push
sbb
jns
rcrb
push
loop
adc
leave
rcrb
push
fcmovnu
stos
pop
adcb
push
fst
add
mov
sbb
mov
pushf
leave
xchg
ljmp
add
lock
and
movsb
insb
pop
sbb
and
les
add
push
sbb
and
shlb
mulb
insb
fwait
leave
rclb
sbb
add
test
addb
shrb
and
mov
sub
push
push
lock
add
lds
scas
xor
jp
clc
jmp
stos
pop
aas
out
add
add
push
sbb
dec
outsb
pop
add
add
xchg
insl
in
pop
adc
test
shr
xchg
xchg
popf
sti
loopne
popa
mov
mov
bound
pop
in
fadds
imul
pop
repnz
lods
sarb
fisubs
imul
xchg
jle
add
inc
jmp
sti
je
xchg
cmp
jge
pusha
insl
add
xlat
mov
inc
sbb
push
rclb
call
mov
jb
stc
sub
adc
iret
adc
repz
decb
insl
push
xorl
mov
xchg
jno
loope
cli
or
sbb
ficoms
imul
add
add
divl
test
test
push
add
mov
jno
test
pop
inc
add
jmp
or
rcrl
add
pushf
jmp
clc
notl
in
mov
mov
std
push
pop
pop
shr
repz
in
sbbl
movl
cwtl
je
inc
mov
pop
jl
addr16
sub
add
pop
inc
cmp
inc
push
cld
push
sub
xchg
cmp
and
add
out
stc
mov
movsb
jb
pushf
push
cmp
add
fstps
je
pusha
mov
in
int3
push
enter
in
fiadds
stc
andl
sbb
out
adc
and
add
scas
adc
roll
pusha
jnp
movb
xchg
pop
shll
sub
andl
pop
dec
out
imul
nop
add
sbb
sbb
ss
arpl
lcall
push
mov
pusha
jo
int3
xlat
ret
ljmp
mov
or
add
sbb
insb
test
sbb
daa
mov
or
out
int3
jmp
sub
add
in
into
int3
ret
sarb
sti
in
pop
scas
pop
sbb
xchg
in
ljmp
cmp
sbb
mov
pop
inc
xor
shlb
js
cmc
mov
or
add
loopne
in
pop
pop
mov
sub
mov
sbbl
push
cmp
add
jmp
xchg
jecxz
clc
insb
jge
orl
add
or
or
inc
stos
mov
mov
lcall
aaa
adc
mov
fdivl
ljmp
fildl
ret
int3
cli
test
cmc
jmp
push
fisttps
mov
jbe
xchg
push
xchg
jl
mov
add
repnz
push
cmpb
xor
out
cmp
push
ret
xchg
arpl
das
test
or
xor
xchg
push
cli
js
loop
test
fidivs
sub
jp
loop
loope
repz
imul
add
add
sbb
fidivs
loop
andb
loopne
pop
mov
mov
xchg
sub
pusha
or
es
out
lret
lods
in
jg
mov
cmp
imul
push
sub
xchg
in
fs
push
push
adc
sub
push
mov
push
cmp
imul
gs
faddl
add
popa
imul
mov
ds
sub
sarb
jae
pop
adc
jmp
xor
cvtps2pi
fcoml
cmp
das
or
aam
sbb
push
push
xchg
pop
add
push
fcoms
stc
ss
insl
in
data16
add
or
push
into
push
add
cmp
rclb
push
stc
push
mov
std
push
data16
add
lcall
xor
mov
out
jmp
in
sbb
jmp
out
clc
mov
xchg
sti
orl
mov
mov
cs
xor
or
mov
cltd
cmp
bound
add
add
pusha
add
jmp
sbb
insb
retw
inc
test
adc
insb
arpl
popa
or
arpl
inc
mov
arpl
mov
cmp
add
push
add
ret
push
inc
std
pop
imul
cli
lock
pop
dec
jne
fs
jns
out
sbb
jp
add
push
data16
fisttps
fwait
xchg
mov
imul
out
jle
cli
fnsave
jne
subl
pop
js
add
pop
inc
popa
push
add
cli
and
inc
add
or
xchg
cli
shrl
ret
fxch
pushf
or
insb
outsb
stos
pop
out
jnp
sbb
dec
or
pop
sub
add
pop
cld
inc
bound
jmp
xchg
pop
cmp
lods
out
and
out
fnstcw
aad
jo
int
mov
add
fcomps
aad
sub
neg
ljmp
fiadds
inc
add
aas
fs
ror
or
sarl
sbb
loopne
add
je
add
or
enter
stc
out
and
bound
sti
push
mov
pop
and
pop
sub
or
jg
inc
imul
out
sub
inc
ret
call
mov
je
lea
mov
sbb
push
rcrb
adc
std
call
add
adc
bound
mov
push
adc
add
pop
add
cmp
cmp
das
pop
add
push
popf
jmp
cmpl
xor
add
dec
outsl
and
stos
xor
test
pop
or
cmp
adc
inc
shll
mov
pusha
xchg
jg
add
mov
sti
jne
loope
call
mov
jle
sbb
fisttpl
push
jp
lock
addps
mov
fiadds
rcr
xor
std
add
cs
arpl
lahf
mov
repnz
inc
mov
jns
lahf
xchg
fistl
cli
add
jecxz
inc
jae
inc
xchg
int
hlt
movsb
int3
call
add
add
cmp
xchg
inc
or
mov
xchg
mov
test
icebp
or
cs
clc
incl
loop
adc
movq
add
mov
and
imul
cs
inc
test
pop
out
pop
imul
gs
dec
or
push
cmpsb
pop
fimull
sahf
out
scas
js
cmp
mov
xor
add
mov
ljmp
jecxz
sbbb
es
fstps
sbb
repnz
je
les
push
sub
faddp
add
popf
pop
push
xchg
sub
movsb
scas
sub
fsubp
sub
stos
arpl
mov
dec
add
mov
add
outsb
jecxz
sub
sbb
xchg
lret
fadds
bound
je
mov
jmp
push
adc
push
pop
insl
hlt
pop
sbb
divb
insb
test
dec
sbb
in
fst
mov
xor
xor
mov
cmpsl
les
addr16
adc
and
dec
jnp
adc
add
add
insl
push
mov
repnz
lret
push
cmp
jns
lock
jp
std
clc
xchg
daa
leave
popa
fimull
insb
mov
jle
pop
or
push
push
fbstp
js
inc
and
xor
mov
or
cld
add
mov
jne
lret
xchg
incl
in
and
add
cld
je
gs
je
gs
ret
repnz
in
push
icebp
call
inc
ficoms
aad
jae
mov
in
fwait
outsb
mov
rcrl
test
rorl
sti
or
icebp
mov
mov
je
mov
in
dec
mov
cs
call
and
cs
add
fdivp
inc
push
push
lret
sti
and
das
push
shl
or
jns
mov
out
icebp
mov
outsb
je
fidivs
pop
gs
jns
mov
fsubs
add
orb
or
adc
je,pt
pop
push
mov
mov
or
je
mul
mov
add
or
aam
mov
pop
out
sub
jl
jae
js
fnstsw
rcrb
outsl
or
inc
or
rolb
inc
add
mov
inc
mov
aam
hlt
popf
add
lahf
pop
sub
nop
jae
fs
inc
lods
insb
add
aad
in
push
std
jbe
aad
loope
pop
pop
sub
lret
insl
pusha
push
add
add
lret
fnsave
dec
or
pop
xchg
aaa
loop
std
stc
sbb
int3
jle
mov
test
loopne
or
pop
loop
add
cmc
fstl
les
and
xor
popf
mov
fstl
insl
lock
add
test
shrl
lret
pop
xchg
testl
mov
add
push
and
dec
sbb
add
ja
shlb
ja
in
adc
jbe
je
repz
adcl
cmp
push
data16
add
testb
pop
mov
imul
shll
mov
and
adc
mov
cmp
je
sbb
dec
jmp
addr16
add
int3
pushf
pop
ret
add
jmp
std
jb
adc
and
out
std
push
mov
les
mov
popa
jle
ror
push
cmpsb
jnp
rolb
fidivl
sbb
push
push
ret
jmp
loopne
mov
or
jbe
loop
dec
mov
push
jbe
into
sbb
sub
inc
jle
mov
add
mov
cmpl
addr16
sbb
push
inc
push
and
add
xor
and
jo
cmpsl
imulb
xchg
push
out
xor
add
sbb
jb
or
popa
jmp
fcoml
out
xchg
pop
ljmp
test
int3
cmpsb
sbb
push
leave
pop
jmp
add
inc
outsb
scas
pop
pusha
mov
jl
pop
je
aam
sub
inc
loope
xlat
jle
push
out
in
pop
mov
add
test
ss
leave
fstps
sub
push
subl
add
jno
popf
add
push
sahf
mov
lea
push
ja
arpl
std
addl
add
add
hlt
mulb
movsb
jno
aas
stc
loopne
jo
dec
add
scas
roll
or
stc
mov
xor
jle
xor
int
push
jle
add
jb
idivb
test
cmpsl
or
jb
pop
cmp
repnz
ljmp
sbb
inc
xchg
pop
cld
inc
xchg
sbb
inc
xchg
pop
or
aad
incl
add
daa
rclb
add
xor
or
mov
jl
add
add
xor
add
cmp
or
add
or
xlat
sub
lret
add
sub
cmpl
mov
mov
jg
cmpsl
push
mov
push
push
xor
add
xchg
pop
add
addr16
jg
les
add
push
xchg
stc
xor
cli
mov
jle
sub
push
xchg
ljmp
push
imul
dec
push
adc
jmp
addr16
fldcw
cmovs
inc
fidivl
js
mov
xchg
daa
sbb
arpl
push
mov
push
push
mov
add
mov
jmp
adc
stos
adc
nop
or
pusha
cmpsl
jp
imul
or
xor
and
pop
movsb
repnz
pop
push
jmp
ret
lcallw
je
fstl
mov
roll
fsts
add
jp
gs
cmp
jnp
jecxz
data16
add
add
sub
fs
lods
js
push
fbstp
mov
or
dec
in
or
hlt
nop
loopne
sub
test
shlb
test
mov
cltd
in
sbb
jge
sub
jl
and
sarl
mov
lret
popf
into
popf
add
push
cmpsb
iret
sub
sub
push
mov
mov
sbb
add
jp
daa
add
sbb
pop
rol
paddb
mov
sbbl
or
popf
lds
or
stc
es
pop
aas
sbb
lods
inc
or
pop
fcomi
or
jo
jg
outsl
xor
jo
daa
incl
cld
cmp
or
add
fidivl
push
jbe
clc
or
cld
add
cmp
btrl
jo
shl
push
add
jne
add
sub
or
mov
sti
mov
add
push
lds
mov
pop
test
das
fidivl
push
js
into
insl
xchg
cltd
push
ror
outsl
test
add
addl
lret
sti
int3
mov
ret
jl
sub
xchg
jge
fistl
or
iret
xor
out
push
push
dec
push
adc
cli
test
sbb
jl
xchg
pop
icebp
push
jmp
xchg
sbb
cmp
mov
mov
jae
rorl
add
add
pop
inc
jnp
repnz
xchg
jno
mov
cmpsb
fcompl
add
add
test
sub
pusha
icebp
imul
mulb
add
fisubs
xor
pop
jp
cmp
pop
lret
pop
mov
mov
std
push
xchg
fsubrl
add
mov
mov
pop
xchg
fsqrt
ljmp
add
cli
mov
stos
add
dec
pop
mov
ljmp
add
ds
fmul
bound
pushl
in
sub
ja
fstpl
ficoml
decl
push
fsubrl
std
xor
pop
xchg
fistpl
jns
inc
add
pop
add
fldl
add
fldl
es
int3
pushf
std
leave
shrl
add
jg
call
sbb
mov
subl
addb
movb
lret
inc
mov
sub
aam
daa
shrl
call
addl
xor
test
sbb
xor
add
clc
aaa
add
mov
add
mov
shll
jp
xor
shll
jp
xor
add
pop
insb
sub
xor
sub
cmpsb
or
sbb
jmp
add
ficomps
je
data16
cli
repz
inc
fimuls
shl
fcom
fldl
mov
add
xchg
fiadds
sar
or
cmp
add
or
insb
cli
lret
loop
inc
fiadds
rorb
out
cmp
gs
lret
ds
add
mul
pop
dec
pop
cli
xchg
into
pop
adc
pop
jnp
out
icebp
pop
aad
fstps
ret
cmp
add
sbb
ret
leave
aaa
fnsave
mov
xor
dec
int
shlb
ljmp
or
xor
clc
fisubs
xchg
outsl
out
call
test
leave
jp
jge
rorb
pop
inc
cld
mov
lock
gs
ss
cmpsl
fs
push
and
xor
add
pusha
or
add
mov
sti
js
arpl
xor
adc
xchg
test
push
or
test
add
pop
xchg
cmp
test
testb
fstpl
xor
popa
jg
sahf
sti
add
mov
sbb
cmp
push
dec
xor
arpl
stc
jmp
add
fstpl
shr
dec
std
push
stos
jo
jmp
rorb
or
push
in
add
push
lret
or
mov
popa
add
mul
addb
pop
add
xchg
data16
data16
mov
push
rcl
cmp
add
test
mov
shr
sbb
add
loope
cld
mov
aam
lcall
inc
or
gs
inc
xor
dec
stos
daa
idivb
or
pop
lods
sub
or
xor
cmp
cmp
push
ljmp
or
fwait
int
into
or
jecxz
xchg
jecxz
mov
out
mov
add
fs
or
mov
sub
or
push
repz
movsb
outsl
lock
add
or
out
dec
add
test
or
sarb
add
ret
pop
cmpsl
inc
or
gs
push
xlat
sbb
xor
sbb
xlat
pushf
push
inc
xlat
pushf
push
pop
xlat
pushf
push
push
xlat
pushf
push
pop
xlat
pushf
push
mov
cmp
jo
jecxz
add
pop
ljmp
pop
ljmp
pop
jmp
cld
add
test
add
imul
pop
imul
pop
popa
int
lret
mov
xchg
inc
mov
jo
cmpsl
jecxz
clc
mov
stos
sbb
xlat
loope
out
clc
pop
popa
stc
adc
xlat
mov
mul
cltd
sub
jl
ljmp
scas
push
popa
dec
in
sbb
pop
fcoms
sti
fcomip
ds
add
push
push
cmp
mov
std
scas
sbb
add
push
test
jae
push
xchg
pop
jae
testb
push
mov
add
fstp
ds
push
jns
call
in
dec
jb
js
fldenv
icebp
sahf
push
popf
add
lcall
repz
pop
add
fucomp
std
mov
mov
cmp
shll
jmp
add
fstpl
sbb
out
je
std
dec
lret
adc
jle
push
xor
sti
clc
push
add
mov
jle
xchg
jno
add
leave
subl
lea
cwtl
leave
and
clc
mov
test
mov
inc
jmp
js
ret
push
mov
call
xchg
jle
shl
push
cmc
add
mov
aad
dec
decl
rol
xor
pop
decl
xlat
add
sub
dec
dec
mov
int
hlt
mov
and
je
inc
sbb
lcall
push
or
push
push
push
dec
add
mov
out
insb
adc
fwait
je
pop
cmpsl
leave
add
sub
cmp
add
adc
xchg
and
push
rorl
pop
xor
pop
adc
sbb
incl
pop
popf
cli
fiadds
add
cli
push
mov
push
inc
mov
and
push
mov
rcrb
nop
sahf
pop
fwait
mov
call
sbb
rcrb
mov
stos
pop
add
stos
add
repz
aam
xor
cld
loop
or
pop
orl
add
in
popa
sbb
imul
test
js
mov
or
xlat
or
iret
mov
push
pop
jae
pop
decb
ficomps
xchg
movsw
adc
test
daa
loopne
sub
arpl
or
daa
loopne
sub
xchg
arpl
rorl
inc
lret
mov
fstp
push
in
out
test
add
and
inc
lret
jo
dec
xor
push
movsb
or
test
das
jecxz
ficompl
pusha
add
or
jmp
push
pop
clc
data16
xor
idiv
push
pusha
mov
gs
clc
jmp
add
decb
in
pop
xchg
loope
add
push
arpl
out
add
add
in
add
adc
mov
or
push
in
push
inc
nop
ret
inc
dec
bound
add
fsub
sbb
loop
cmovns
clc
push
test
pop
or
out
pop
or
lods
and
inc
mul
cmp
iret
pop
cmp
adc
xchg
dec
lds
stc
push
test
jb
sub
pop
sub
and
inc
mov
adc
addr16
jg
inc
add
add
stc
add
loopne
add
and
fidivrs
lret
dec
sbb
cltd
gs
test
fldl
paddusw
test
fldl
icebp
gs
test
push
inc
add
add
add
xchg
sub
ss
pop
cli
sbb
inc
pop
sahf
dec
mov
push
push
loopne
or
lock
lea
or
mov
add
add
add
movb
add
mov
add
xor
push
out
pop
rcl
push
loop
lods
sub
call
xchg
sub
xchg
or
gs
pop
or
fldl
jecxz
in
jb
push
cld
repnz
sub
push
or
rorb
insb
mov
inc
add
cmp
add
in
sbb
pop
std
loop
xor
mov
push
mov
adc
xchg
mov
push
lea
or
xchg
push
arpl
xchg
adc
data16
aaa
inc
mov
pop
fists
sbb
test
add
cld
mov
repz
fstp
cld
sub
pusha
and
sbb
xlat
or
jmp
and
add
add
call
or
jmp
xchg
aas
or
jmp
or
jmp
ret
dec
xchg
push
mov
test
pusha
and
bound
and
add
popf
out
mov
xor
popf
inc
jmp
sbb
add
das
inc
mov
jne
testb
mov
add
mov
or
pop
dec
xor
add
cmpsl
call
cmp
and
inc
loop
in
and
daa
cmp
and
inc
aaa
in
clc
aam
add
sbb
mov
jecxz
in
jbe
add
pop
jecxz
mov
aam
daa
cmp
and
inc
pop
in
cld
adc
add
pop
repnz
cmp
and
jecxz
lock
xor
cmp
and
inc
add
fiadds
pop
mov
or
xchg
ds
lds
push
add
jp
sbb
add
xchg
inc
insb
pop
lods
or
and
add
add
fmuls
lds
stos
pop
adc
out
insl
fsincos
gs
dec
rolb
clc
pop
sbb
cmp
int
jns
enter
mov
add
adc
popf
cmpsb
ds
fsubrs
aaa
std
xchg
pop
adcb
push
test
pop
pusha
call
push
mov
stos
mov
cmp
sub
rcrl
sub
xor
js
movsb
stos
add
push
and
sub
adc
inc
lret
xor
fmuls
rorb
in
sbb
add
adc
sub
push
outsl
cltd
lahf
sub
xchg
rolb
inc
sti
pop
jae
and
add
xor
pop
dec
xchg
aam
jmp
add
add
push
test
icebp
fiadds
mull
push
in
icebp
decb
aaa
test
add
inc
out
push
mov
lahf
sub
bound
cmp
jmp
add
push
imul
inc
sub
inc
jmp
dec
sbb
jmp
shrl
fs
push
imul
sub
in
mov
cmp
jmp
leave
lret
mov
test
rclb
stc
mov
mov
ljmp
inc
xchg
jmp
fnstenv
add
stos
je
inc
inc
pop
sbbb
fistps
test
xchg
dec
cmp
stc
mov
sti
xchg
dec
lea
stc
mov
xchg
push
dec
dec
jp
into
mov
shr
mov
jg
stos
test
fnstenv
sub
inc
popa
sbbb
fistps
add
xchg
dec
mov
mov
icebp
pushf
xchg
push
vandps
add
add
mov
pop
loope
push
mov
gs
mov
push
paddw
mov
mov
pusha
pop
int
js
mov
add
gs
pop
pop
lods
daa
js
jbe
pop
pop
mov
lods
adc
cs
add
pop
dec
xor
addr16
pop
xor
js
cs
pop
pop
push
cmc
push
add
cs
lcall
das
fwait
jle
cmc
test
add
and
loope
fwait
jle
cmp
and
loope
cmp
rsqrtps
mov
scas
jae
popf
ljmp
pop
dec
sti
sahf
hlt
fisubl
mov
jne
aaa
stos
add
cmc
loop
ss
cmp
ss
add
add
cld
loop
adc
test
add
adc
sub
shl
in
data16
add
in
add
add
mov
xor
inc
jmp
ja
xor
pop
push
test
popa
and
fildll
add
xor
or
push
scas
outsb
bound
or
lds
pop
fisttpll
mov
ret
loope
xchg
add
loopne
daa
or
add
aas
ljmp
mov
lret
daa
movsl
pusha
xorb
xchg
jno
sbb
inc
pop
jl
shr
fs
or
inc
or
call
outsl
cmpsb
add
xchg
ret
pushf
fistps
aas
sbb
mov
or
or
adcl
lahf
fidivs
call
mov
pop
xorb
push
mov
and
adc
in
js
dec
add
jo
or
add
inc
xorb
push
mov
int
fst
jmp
or
inc
cld
cld
sti
shl
add
in
sti
ror
add
jne
add
repnz
mov
testl
mov
cli
cmp
or
cld
sti
shr
movsl
add
jo
testb
sti
cmp
or
cmc
sarb
aad
outsb
lods
pop
lahf
push
cmc
push
test
mov
add
push
sub
mov
testl
inc
adc
xor
add
jae
stos
sbb
enter
pusha
push
nop
mov
add
mov
add
lret
dec
pusha
or
sti
clc
or
mov
nop
sbb
add
arpl
les
clc
push
adc
mov
in
clc
push
xchg
adc
mov
mov
sahf
cmc
fisubl
jbe
out
sbb
stos
add
add
inc
xchg
rol
fsubs
loope
and
bound
and
int3
and
jb
jmp
in
stc
xchg
popa
jmp
into
add
into
mov
and
iret
and
bound
xor
jmp
add
cmp
es
xchg
pop
ret
add
stc
sub
push
and
pop
sub
or
xor
jmp
push
xchg
xor
jae
ss
sbbb
adc
iret
dec
xor
add
ret
data16
jl
cmc
shll
pop
clc
mov
cmc
pop
stc
and
xor
add
rcrl
add
inc
cmpsl
xor
data16
and
xor
add
mov
xchg
jg
pop
mov
jg
bound
push
hlt
mov
add
iret
dec
xor
add
outsl
sub
jne
adc
mov
cmpsl
out
cmp
cmp
lods
sbb
jg
cs
inc
out
insl
lret
orb
std
pop
clc
gs
mov
add
call
jmp
shl
adc
sub
stos
repz
lods
adc
sub
inc
fidivs
in
push
mov
xchg
lea
ljmp
mov
push
cmc
jae
sbb
outsl
mov
lahf
pop
inc
in
shlb
mov
or
lret
xor
and
sti
popf
ljmp
add
movsl
pop
data16
mov
xlat
adc
fisttps
pusha
loop
sub
pop
loope
ret
push
or
pusha
jle
enter
pop
jae
std
sub
sub
mov
pop
imul
dec
rorb
adc
mov
hlt
cli
es
aad
jo
sub
test
add
xor
xor
std
negb
push
adc
add
sub
rorl
mov
cli
or
rcl
or
jmp
js
xor
loop
push
mov
negl
cli
stc
rorl
loope
cmp
inc
rol
ret
popf
loopne
and
xor
sbb
or
add
push
in
stc
cli
or
xor
inc
pop
sbb
in
xchg
dec
jmp
mov
jmp
dec
or
add
mov
or
add
daa
cmp
icebp
or
aaa
fists
in
or
negl
jg
setnp
or
sub
mov
add
lcall
xchg
and
inc
inc
add
pop
xchg
bound
ds
hlt
push
scas
lock
lea
pop
mov
out
out
xchg
es
mov
lea
lahf
dec
cld
push
ss
xchg
cmpsb
sbb
lcall
push
cld
cs
cmp
mov
mov
pop
pop
add
in
mov
stos
out
and
cmc
in
out
mov
sub
sub
add
and
fldenv
inc
mov
std
sarb
dec
shlb
insb
inc
push
xor
loop
cltd
rolb
and
ss
add
rcrb
jnp
imulb
pop
fnstcw
sbb
das
lret
mov
add
sahf
pop
sub
dec
pop
imul
repnz
dec
xor
pop
cli
loop
adc
enter
testb
sbb
pop
test
adc
shll
mov
call
std
sahf
bnd
popa
add
aad
das
fsub
aas
in
and
ret
in
in
adc
ret
add
pop
add
leave
mov
adc
scas
gs
loopne
movsb
ret
in
repnz
ret
add
aas
fadd
sbb
adc
cs
lahf
daa
in
notl
pushf
pop
xor
sbb
cmpsb
fucom
std
fcompl
sbb
out
bound
inc
cmp
scas
inc
cmp
push
popa
add
add
or
jne
push
test
xor
sti
call
cmp
je
push
lods
add
stos
aam
cmp
inc
dec
call
je
test
lahf
test
out
fs
push
pop
mov
mov
adc
jp
sti
inc
sbb
adc
das
inc
adc
filds
in
pop
pop
add
ds
add
ficoml
andl
or
xor
push
sarb
fidivrs
jae
rcrb
inc
scas
or
inc
inc
ljmp
mov
aas
cli
mov
inc
ja
or
enter
fisttpl
or
sub
push
adc
imul
push
jl
mov
je
test
icebp
frstor
add
dec
ss
lea
sub
js
mov
inc
out
inc
pmullw
cmp
mov
out
flds
rcrl
add
repnz
xor
dec
and
ljmp
out
adc
popf
out
mov
pop
into
add
loope
add
pop
push
leave
in
pop
fisttps
leave
movsb
enter
popf
movhps
lret
in
imul
ficomps
cmpsl
xchg
or
adc
in
int
stos
add
and
loop
repnz
cmc
ret
adc
fimull
add
ljmp
jecxz
mov
imul
add
mov
outsb
cmc
sbb
or
ficompl
call
test
add
test
sub
add
loop
dec
bound
fildl
jle
sub
cltd
xor
paddd
fstpl
fs
adc
push
pushf
push
mov
lods
cmc
sub
pop
roll
je
loopne
std
bound
stc
jb
imul
ljmp
push
add
mov
incl
add
call
daa
rcrb
dec
leave
jne
add
mov
add
ljmp
sti
pop
add
fbstp
xchg
inc
xchg
adc
aaa
sbb
clc
test
pop
add
lret
call
push
sti
xor
add
lcall
push
mov
add
loope
sti
ficoms
repz
cs
mov
test
push
sti
jae
inc
iret
pop
push
adc
cmp
bound
pop
repnz
test
insl
inc
add
les
out
mov
jmp
adc
testl
jbe
stos
movsb
arpl
pop
repnz
or
add
cmp
testb
mov
push
adc
inc
inc
jae
pop
pop
xchg
cmc
aaa
fistpl
mov
scas
lea
mov
ret
loope
xchg
mov
insl
sub
lahf
mov
mov
dec
and
jae
mov
fisubl
movsl
add
pusha
pop
imul
gs
repnz
cld
fcoml
sub
xchg
adc
pop
sbb
bound
pop
aam
and
aam
push
fidivrs
or
pop
sub
add
pop
pushf
imulb
dec
cltd
and
out
das
pop
cltd
fidivrl
lret
pop
dec
jb
sub
push
inc
ljmp
cld
cltd
gs
jmp
add
push
adc
or
push
lds
imul
leave
outsb
sbb
mov
sarl
add
hlt
cmp
adc
xchg
sbb
fdivs
adc
es
adc
jno
mov
inc
stos
push
ljmp
stos
pusha
add
popa
add
sub
push
inc
mul
call
incl
add
adc
jmp
lods
jg
and
adc
pop
add
mov
or
mov
clc
into
sti
push
frstor
adc
sub
ja
adc
call
in
stos
ret
inc
sbb
add
mov
cmp
jne
cltd
test
test
fcoms
sahf
jg
mov
iret
cli
add
lret
pop
adc
dec
ds
orb
jmp
rcrb
pop
xorl
and
xchg
dec
jmp
jg
push
mov
inc
jne
pop
xor
xor
jmp
mov
in
add
dec
pop
xorb
mov
fldl
add
rol
and
add
faddp
xor
lcall
mov
add
or
sub
mov
push
imul
int
pop
push
push
jo
add
lea
jns
pushl
jmp
ljmp
pop
xor
shlb
dec
adc
pop
push
shl
sti
pop
nop
cs
sbb
scas
fsubrs
inc
rcrl
adc
rol
addr16
cmp
add
sbb
adc
mov
out
int
jne
gs
in
xchg
inc
repz
add
mov
mov
mov
scas
sub
and
hlt
imul
outsb
outsl
mov
rcrb
jmp
fstpt
add
jecxz
subl
add
les
xchg
adc
call
add
scas
fsub
sbb
and
jae
xor
hlt
imul
aam
xchg
jmp
mov
adc
ds
lods
and
aam
popa
mov
jle
or
push
inc
ja
lock
clc
jg
or
mov
iret
out
je
out
cld
ja
insl
cld
jo
sbb
mov
sbb
cmp
add
iret
sti
adc
mov
pop
das
ret
xchg
rorl
aaa
mov
or
cmp
clc
pop
mov
push
or
jb
xorb
push
sub
call
pusha
jmp
pop
fs
popf
adc
sti
fisubrs
cmp
mov
incl
add
mov
mov
mov
ficoms
cmp
aam
jmp
mov
push
or
push
test
cmp
pop
xchg
mov
call
xchg
xchg
pop
adc
push
lods
or
mov
adc
xlat
dec
sub
cmpsl
push
in
mov
mov
mov
mov
push
mov
cmp
int
fs
sbb
aad
add
iret
aad
or
ljmp
sub
fld
pop
fisubrl
scas
sti
xchg
mov
shrb
adc
push
shll
cli
sub
cmp
pop
scas
xor
mov
jmp
ljmp
test
mov
cmp
mov
in
xor
cs
sbb
cld
push
bound
stos
or
popf
and
add
divb
xor
mov
inc
add
insb
mov
sbb
mov
mov
add
push
fmul
shrb
mov
clc
inc
adc
outsb
in
fs
clc
bound
xor
dec
jb
push
in
or
faddl
gs
out
adcl
stc
add
or
into
clc
jmp
add
and
jge,pn
sbb
xchg
sub
sub
xchg
sub
enter
aad
mov
hlt
push
jge
daa
popa
add
mov
or
xchg
insl
or
sahf
hlt
push
movsl
hlt
mov
ficoml
popf
or
bound
jp
dec
call
mov
jmp
mov
add
add
inc
clc
sbbb
push
mov
rcrb
mov
clc
add
popa
push
add
popa
std
dec
movsb
scas
inc
push
movsb
xchg
insl
or
bound
or
jne
sub
pushl
repz
cmp
jecxz
xchg
and
cld
pop
mov
idiv
adc
push
jb
test
jns
aam
push
mov
pop
fldlg2
mov
add
add
jmp
mov
adc
sti
mov
lods
xor
push
sub
and
inc
or
lret
cmpsl
or
xchg
aas
fsubp
sub
sbb
sub
shrl
je
fwait
cmpsl
pop
adc
cli
rorl
andnps
sub
inc
xlat
jae
ljmp
mov
ret
add
cltd
loop
scas
nop
sbb
pusha
fs
or
cmp
test
mov
dec
aam
xor
push
fcmovbe
mov
lret
inc
push
loop
cmp
cmc
outsl
jecxz
ljmp
jno
adc
mov
lock
sub
fidivs
arpl
pop
mov
xor
pop
loope
xor
lret
push
push
add
add
mull
jle
or
clc
sbb
lret
loopne
add
cmc
mov
ret
int
test
sbb
pop
addr16
lods
sbb
out
fstpl
insl
sbb
cwtl
jecxz
add
popf
xchg
ret
in
xor
fstpl
insb
mov
clc
push
adc
jnp
lret
and
clc
insl
lcall
add
add
pop
add
cmc
out
lods
sbb
fimuls
jb
add
test
cwtl
mov
adc
test
in
xchg
pop
bound
je
sti
pushl
or
pop
pop
add
hlt
mov
jne
fidivrs
or
add
adc
mov
or
or
fidivrs
add
or
inc
inc
cmp
add
pop
xchg
filds
fcomps
sti
jle
in
add
pop
xchg
jmp
ja
cli
repz
fimuls
add
push
sbb
std
mov
inc
int
cmpsl
divl
cli
in
test
andl
fidivrs
adcb
add
jns
jno
int
adc
dec
inc
jbe
add
ficomps
jp
push
pop
cmpb
inc
xorb
fnstsw
enter
dec
mov
xor
and
mov
test
xchg
cmp
xor
fisubrs
in
ret
loope
mov
mov
sub
add
push
or
out
add
xor
inc
lds
add
jno
add
mov
sbb
sub
adc
sub
jne
mov
jne
xor
in
ret
imul
mov
ret
push
mov
shlb
sarb
rorb
sub
jle
lds
popf
repnz
sti
sbb
add
loope
add
into
jno
fcompl
fildll
xor
add
sbb
iret
insb
and
ret
lds
rcl
mov
ret
mov
pop
dec
jb
inc
in
lods
sub
aam
jno
jmp
pop
and
sbb
in
sbb
fsubl
push
pop
mov
mov
jno
jmp
adc
shll
flds
or
mov
add
cmpeqps
fnstenv
or
lock
call
add
pop
push
xchg
leave
ret
dec
mov
stos
push
mov
lods
mov
test
jge
mov
aad
inc
out
insl
add
mov
inc
and
sbb
lret
sti
pop
mov
imul
mov
aam
pusha
add
mov
inc
add
inc
je
or
je
or
popa
cmp
js
test
mov
rorl
addr16
out
jnp
or
daa
lcall
cli
in
fidivs
mov
lods
movsb
in
pop
ret
xchg
iret
pushf
call
mov
gs
fwait
stc
scas
sub
movsb
shll
inc
cmc
mov
outsb
sar
adc
xchg
and
add
add
mov
adc
mov
mov
pop
push
and
pop
push
scas
adc
ficoms
mov
mov
adc
pop
mov
pop
adc
js
jge
cmp
xchg
ljmp
mov
cmpsb
push
sahf
pop
mov
into
sub
pop
mov
shrl
sub
jns
pop
imul
leave
ret
or
or
cmp
pop
cmpsb
popa
scas
mov
sbb
cltd
cltd
les
adc
pop
mov
mov
shll
into
pop
ljmp
pop
cli
add
mov
aas
push
ret
pop
inc
int
add
lret
xchg
sar
out
or
imul
mov
add
inc
cmc
ret
mov
jl
xbegin
inc
sbb
push
jmp
and
jo
aad
in
pop
dec
rorl
in
mov
outsb
push
mov
clc
jmp
jecxz
add
fstpl
push
data16
mov
add
inc
mov
aaa
pop
mov
add
add
pop
add
cmpsb
cmp
mov
or
cmp
repnz
or
jmp
addb
pop
mov
add
pop
outsb
push
mov
add
je
lock
add
rolb
inc
mov
mov
clc
repz
dec
inc
jno
jne
lods
sti
adc
add
lock
gs
sbb
add
lea
inc
faddp
mov
inc
int3
sar
jmp
push
inc
fidivrs
cli
fists
mov
inc
sub
cli
xor
sub
movsl
jmp
pop
mov
push
jmp
or
xor
xchg
xor
pop
push
cli
lock
mov
mov
jae
xor
dec
daa
or
lret
add
sahf
mov
cmp
add
mov
andb
incl
xchg
popa
add
out
add
fidivl
cwtl
divl
cwtl
out
ficomps
test
addr16
out
sub
inc
pop
nop
ficomps
clc
pop
pop
jmp
sub
dec
push
jge
push
daa
mov
fisubrl
mov
sub
stos
add
pop
jmp
dec
stc
mov
aad
fistpl
movsb
pop
jae
in
aam
xor
push
imul
pop
push
mov
test
movsb
pop
xlat
addl
xchg
add
pop
imul
roll
sub
ret
outsb
mov
adc
outsb
loop
jle
mov
xor
dec
xchg
out
lods
cmc
push
insl
out
sbb
jb
jae
xchg
in
adc
mov
outsb
pop
clc
sahf
add
loope
outsb
add
mov
mov
or
aad
sbb
sub
push
clc
jbe
push
dec
shl
ret
clc
fdivp
push
clc
pop
lret
sbb
les
lahf
sar
jno
inc
jmp
and
jno
scas
mov
jg
loopne
insb
jbe
and
clc
je
js
std
pushf
sti
cmp
ja
incl
add
js
inc
ss
jbe
mov
jp
jnp
pop
add
into
sbb
add
in
and
stos
pusha
inc
xchg
cltd
clc
xor
clc
mov
jb
ret
cmp
dec
mov
lea
mull
ret
sti
sahf
push
lea
xchg
inc
mov
pushl
mov
add
add
sub
sub
mov
mov
and
cmp
sub
push
sbb
test
pop
cli
scas
inc
cmp
inc
jl
cli
xor
dec
pop
sub
sub
lret
adc
das
inc
push
daa
mov
xchg
inc
adc
lods
hlt
repz
xchg
in
aaa
inc
sbb
std
mov
jne
adc
cli
fld
jp
mov
call
dec
ret
sbb
lods
push
jnp
xchg
sub
xor
jnp
jno
test
or
add
gs
adc
cmpsl
popf
out
sub
gs
fdivrl
daa
inc
xor
sbb
cmpsb
aas
and
nop
cmpsb
sub
pusha
jp
push
sahf
pop
mov
or
and
xor
add
add
sub
scas
mov
ljmp
shrb
mov
mov
adc
sbb
xor
pop
mov
xor
loop
xchg
xchg
sub
movsb
lds
pop
stos
jns
push
push
idivl
aam
mov
clc
cmc
cmp
pop
sti
cs
sub
cmp
mov
add
add
mov
mov
and
jle
cmp
mov
cs
add
xor
popa
sahf
ret
or
std
mov
ds
or
mov
jg
div
push
mov
or
push
cmp
or
repnz
ss
popa
js
fst
pop
mov
add
popa
leave
dec
ljmp
aaa
testl
aas
jg
sbbl
fisttps
inc
xchg
enter
rcrb
leave
ret
dec
mov
ljmp
test
mov
mov
cltd
inc
or
jg
fidivs
push
lret
push
sub
ds
push
push
pop
lods
mov
add
sti
xchg
pop
and
dec
arpl
or
pop
add
cwtl
pop
pop
in
and
and
pop
pop
pop
cmp
shll
jmp
xchg
inc
test
jmp
lret
jg
subl
fistpll
jg
push
ret
push
xchg
push
add
inc
mov
pop
sbbb
add
fwait
popa
ljmp
arpl
repz
shlb
sbb
or
adc
adcl
int3
inc
pop
ljmp
mov
cs
fucomip
fiadds
inc
mov
and
mov
pop
or
or
lds
lret
pop
sub
lahf
das
and
xchg
mov
add
jae
cltd
out
mov
out
pop
add
fnsave
lods
into
loope
jmp
lea
fstpl
and
clc
jmp
popa
test
out
mov
pop
popa
frstor
jmp
cmpsl
pop
xchg
gs
xor
test
push
mov
daa
xor
jae
add
xor
inc
push
mov
sub
xlat
jne
enter
mov
mov
mov
lds
fistpll
add
jmp
and
mov
pop
sub
pushf
and
jno
mov
jecxz
inc
dec
mov
clc
pop
pop
xor
or
push
mov
adc
push
jb
lahf
int
incl
inc
sbb
test
add
add
pop
add
mov
das
inc
lahf
aad
mov
lods
ja
cmp
mov
iret
add
pop
loopne
xchg
push
sti
mov
jg
ja
inc
xor
and
fsubl
filds
fidivrs
out
fiaddl
pop
xchg
jmp
push
jmp
sbbb
fnstenv
xchg
pop
mov
dec
cli
rcll
add
addr16
pop
cli
test
dec
and
cli
or
jns
iret
dec
les
ds
dec
xchg
dec
cli
imul
mov
inc
cmpsb
int3
das
pop
mov
xchg
or
cli
ljmpw
add
scas
xchg
gs
or
push
jb
testl
add
je
stos
dec
insl
lret
jmp
ret
in
sbbb
cmp
nop
pop
add
les
jmp
xchg
sub
mov
data16
push
xor
rcrl
icebp
gs
loop
adc
idiv
pop
or
sbb
or
ret
mov
call
push
or
icebp
dec
xor
pop
movsl
ret
loope
faddl
pusha
hlt
outsb
stos
push
sbb
stos
scas
call
jp
push
lahf
or
jne
rorl
add
or
sbb
jmp
shll
add
data16
sbb
pop
lock
sub
push
mov
xor
inc
stos
sub
in
mov
add
addr16
stos
pop
ret
and
stos
sub
scas
add
pop
ret
mov
mov
imul
movb
pushl
push
testl
push
jg
mov
testb
fiaddl
mov
cld
mov
dec
jg
dec
clc
add
int3
dec
jb
xor
je
add
or
jg
dec
loopne
movups
push
and
sbb
sahf
or
ret
ret
jge
bound
jg
repz
hlt
mov
or
fiadds
add
inc
repnz
push
test
jle
jae
sbb
mov
sbb
test
dec
mov
mov
mov
testb
fldcw
or
add
cmp
das
push
jo
movsb
or
daa
movsb
cmp
out
cmp
aaa
cmc
add
shll
xchg
mov
dec
xor
enter
roll
jno
xchg
cmp
inc
shrl
or
mov
lea
push
jae
aad
and
cmp
icebp
lahf
out
testl
insl
cmp
add
das
xor
mov
push
mov
cltd
dec
add
pusha
es
pop
ss
in
jbe
sbb
pop
ljmp
out
ficoml
fisubl
orb
sub
add
shrl
mov
insl
cmpsl
int
xor
repnz
jno
lods
bts
loop
add
outsl
sub
sub
outsl
add
out
mov
pop
dec
add
mov
xchg
dec
pop
ret
jg
out
scas
inc
add
and
dec
add
jb
and
sub
roll
jmp
mov
jmp
in
in
cmc
pop
insl
mov
fs
pushf
std
data16
jmp
cltd
jg
jbe
push
adc
push
mov
cmpsb
add
mov
sub
sub
ret
js
sub
call
sub
mov
sti
call
popf
filds
int
or
lret
cmp
add
pop
jmp
mov
mov
loop
adc
or
loopne
daa
rcrb
xrelease
inc
mov
pusha
cld
add
nop
inc
filds
cmp
adc
ds
add
out
inc
scas
jecxz
cmp
fdivrl
inc
push
mov
movq
pop
add
int
scas
cli
out
inc
les
rolb
mov
xchg
inc
stos
mov
mov
push
cmc
pop
stos
stc
or
es
xor
stos
int3
adc
stos
decb
add
pop
add
enter
mov
cmp
outsb
call
testl
mov
outsl
jmp
sbb
mov
shlb
fiaddl
lods
fdivrs
in
push
push
das
lds
rorb
jne
xor
fdivr
shll
sub
mov
popa
add
aad
add
mov
jae
int
mov
mov
movsb
stos
out
pop
ljmp
imul
hlt
les
in
shll
fiadds
sub
push
or
adc
mov
and
shrl
jecxz
cmp
sbb
xchg
lret
push
jge
add
outsb
pop
clc
xor
mov
pop
pop
pushf
add
test
stos
jb
jo
std
scas
pop
jmp
ljmp
out
mov
scas
fadds
lret
scas
fcoms
or
jmp
push
test
or
pop
jmp
sbb
pop
jmp
add
in
push
cld
adcb
add
push
sti
decl
in
cmp
call
mov
add
xchg
orl
add
jb
sti
mov
ja
decb
push
sti
mov
js
fwait
jbe
dec
push
fbstp
jp
sti
mov
pop
jmp
dec
push
push
call
inc
pop
insl
mov
add
ja
cmp
pushl
ret
push
or
jle
mov
sbbb
push
add
dec
aas
add
aas
lret
sub
cltd
aaa
pop
cld
fnsave
jae
cli
push
cli
adc
jle
nop
in
dec
dec
js
idivb
mov
out
sub
add
jne
pop
sbb
rolb
jl
fsubrl
pop
mov
pop
lcall
pop
pop
add
fsubp
ja
ljmp
cmp
pop
xchg
sbb
pop
ljmp
sbbb
mov
aad
sbb
jno
mov
pop
mov
dec
jno
push
popf
and
add
dec
ljmp
adc
movl
add
mov
test
adc
jecxz
sub
hlt
data16
adcl
ljmp
pop
ljmp
test
into
stc
xor
jl
subb
pop
push
std
jne
je
jge
jmp
rol
jmp
mov
jne
dec
aad
or
jb
jmp
out
mov
insl
loop
sbb
scas
add
iret
aad
int
mov
or
shlb
pop
add
jl
scas
data16
jmp
fstpl
gs
jmp
fnsave
mov
arpl
shlb
pop
xor
lds
add
pop
addb
inc
iret
sub
sub
and
and
and
and
add
and
xchg
jl
xchg
rolb
mov
mov
push
in
das
fiadds
pop
outsb
or
sub
sbb
inc
pop
cmp
mov
das
dec
sbb
test
loopne
ret
dec
sti
mov
and
inc
dec
das
sub
je
mov
and
pushf
test
loopne
add
fidivs
mov
divb
inc
add
lret
inc
cli
in
addr16
mov
pushl
mov
add
mov
add
cmp
add
int
fwait
inc
cmp
add
jmp
cli
popa
jg
shl
xchg
and
mov
and
push
push
jmp
pushl
mov
fldenv
add
stos
pop
icebp
sbb
add
int3
jns
lret
rclb
rcr
sahf
out
push
arpl
std
jne
jns
movsl
incl
mov
jp
jp
jp
add
pop
imul
jp
sbb
sahf
out
fs
ljmp
or
ljmp
add
bound
ficomps
repz
movsl
xchg
sbb
movsl
outsl
shlb
roll
cli
sbb
movsl
sahf
out
jo
inc
pop
jp
add
pop
add
or
rolb
jmp
lds
int
push
adcb
adcb
mov
and
out
loopne
push
jg
clc
cmpsb
subb
add
pop
stos
clc
adc
mov
mov
cmpsl
imul
data16
jecxz
and
jmp
inc
jl
xchg
into
cmpsl
clc
bound
adcb
pop
mov
popf
and
jle
and
jb
je
mov
lock
je
vmovsd
and
pop
add
lds
cmp
and
add
js
dec
mov
repnz
in
jg
xor
or
hlt
add
outsl
push
xor
sti
mov
inc
ret
inc
inc
pusha
add
xchg
sti
je
loop
lock
popa
out
hlt
js
jmp
es
fnsave
add
jbe
sbb
cmp
insl
adc
cmp
cmp
pop
jl
neg
mov
add
add
nop
or
dec
push
jle
mov
or
ljmp
mov
jns
mov
clc
dec
addr16
or
test
test
lods
xchg
and
lahf
sti
xchg
scas
xchg
sbb
cmpb
xor
jae
aas
xchg
negl
pushl
mov
mov
scas
jg
inc
cmc
and
mov
add
add
pop
outsl
sti
pop
mov
add
sbb
mov
pop
mov
pop
jg
mov
lcall
xchg
cmc
mov
jle
inc
arpl
lahf
out
hlt
sahf
adc
xor
popf
pop
bound
cli
jle
lea
xchg
pop
aam
aam
xchg
aaa
inc
xchg
mov
push
sub
inc
sbb
ficomps
or
push
das
jg
aad
ss
fisttpll
jmp
add
mov
add
xchg
inc
insl
cmpsb
push
inc
jo
movsl
jle
popa
push
dec
in
xlat
enter
fucomip
fcoms
in
cmp
int
ret
in
sahf
out
pop
scas
insl
push
pop
sbb
jmp
mov
inc
add
xchg
lock
adc
bound
mov
add
subl
ljmp
in
bound
mov
lods
sbb
outsb
mov
inc
mov
fcoms
popf
out
cmc
adc
aad
add
cltd
push
push
jg
sbb
inc
hlt
sbb
or
shll
jnp
test
push
jp
je
je
add
notl
or
sbb
mov
xor
add
hlt
mov
or
jmp
out
jg
ss
or
pop
push
sbb
je
imul
xchg
imul
cmp
inc
cmp
add
lock
in
daa
test
test
push
gs
arpl
or
inc
mov
add
sub
or
rcl
out
fidivs
or
xchg
mov
movl
add
or
push
or
lods
cli
sarl
fidivrs
cmpsl
xchg
ret
mov
into
sub
jle
mov
jb
cmp
pop
and
cli
mov
out
fidivrs
or
mov
jg
fbstp
mov
pop
jp
mov
push
test
cltd
mov
mov
mov
sbb
add
sahf
adc
push
stos
push
insl
shll
pop
and
pop
inc
lea
mov
pop
int
cmp
aad
sbb
add
repz
push
hlt
in
repz
out
in
adc
mov
andl
xchg
add
popf
aad
iret
sbb
loopne
or
loopne
add
add
repnz
mov
pop
fstl
fmul
jno
jmp
sbbl
push
cwtl
mov
leave
sub
shrl
cwtl
xchg
adc
pusha
push
cltd
mov
in
push
xor
pop
add
or
xchg
ljmp
adc
adc
xchg
add
add
push
sbb
call
and
add
clc
push
xchg
xchg
outsl
add
bound
sbb
push
into
sub
add
xor
inc
adc
sti
cmp
add
pop
inc
js
ljmp
in
test
bound
and
pop
add
push
call
add
add
fs
pop
sti
jmp
push
sti
mov
les
push
and
push
fisubrs
add
xor
je
cmc
adc
cmc
idiv
lock
add
pop
leave
adc
nop
lcall
aam
inc
fiaddl
mov
jle
mov
jae
xchg
inc
mov
mov
adc
xchg
cmpsb
push
les
addb
data16
test
fadds
cld
or
jnp
push
push
mov
lds
add
adc
mov
std
jae
push
out
repz
sahf
insl
push
inc
test
sub
clc
jle
xchg
repz
push
rcrb
push
aad
add
loop
rcr
rcrb
in
imul
into
lcall
add
fs
clc
arpl
mov
adc
sbb
jo
add
cmp
mov
loopne
js
add
sbb
jb
jecxz
sub
out
lea
and
add
loopne
fiadds
aam
bound
loop
js
in
lea
push
jecxz
mov
out
add
out
fstl
fcompl
loope
adc
shll
clc
ficomps
or
mulb
dec
fstpl
icebp
pop
xchg
jbe
xchg
xor
push
fdivr
call
mov
imul
xchg
push
leave
xlat
sbb
clc
jle
dec
xor
xchg
aaa
jmp
in
shll
jp
mov
aam
add
or
imul
xlat
add
sbb
pusha
push
push
out
sldt
out
pop
cmc
pusha
add
mov
pop
pop
add
imul
add
jge
je
pop
loop
add
loope
call
test
and
into
pusha
pop
daa
rorb
xchg
call
jg
adc
add
push
mov
add
add
push
adcb
push
call
adc
dec
jp
jnp
je
cli
pop
jno
mov
xor
sbb
adc
test
adc
aaa
in
les
sub
add
or
test
or
xor
add
mov
outsl
or
addl
movb
inc
rolb
add
scas
testl
xchg
pusha
pop
push
mov
jg
adc
xchg
push
inc
fidivrs
inc
push
outsb
sti
jo,pt
or
loope
outsb
mov
sub
popa
xchg
xchg
pop
add
xchg
rcpps
pop
cmpsl
xchg
incl
pop
ljmp
xchg
je
repnz
xlat
incl
add
cmp
ljmp
lock
out
ficomps
mov
loop
adc
jmp
jge
popf
push
sbb
stos
inc
in
and
or
add
pop
jno
push
in
incl
xchg
dec
jmp
sub
jo
xchg
idivl
flds
jle
inc
jno
das
fwait
jle
mov
add
addr16
testl
imul
in
sub
rcrb
pop
imul
loope
xlat
jo
push
inc
loop
push
int
sbb
or
jmp
popf
pop
test
pop
bound
push
xchg
insl
jnp
clc
mov
jmp
clc
sbbl
outsb
icebp
mov
psubsw
add
mov
std
mov
lods
push
mov
xchg
je
aam
pop
add
adc
cli
fcomp
stc
call
mov
sub
inc
fwait
inc
or
popa
add
mov
aaa
pusha
pop
ret
jbe
cwtl
adc
cli
adc
rcll
ret
ret
cmp
cmp
inc
call
pop
push
pushl
inc
add
add
cli
xlat
jl
or
cltd
insl
push
in
and
xor
test
jl
call
xor
ret
push
sub
mov
push
push
add
pmullw
xor
push
in
add
fdivrp
cmc
jae
inc
inc
hlt
filds
loopne
jns
rcrl
mov
jbe
inc
add
add
sbb
sahf
mov
mov
scas
outsb
or
popl
loopne
outsl
or
add
repz
inc
ficomps
fcomi
popf
sub
inc
pop
ljmp
cs
push
mov
out
sbb
sub
push
dec
popw
push
push
repz
push
movsl
sub
fisubs
add
add
nop
and
adc
pop
xchg
imul
or
ss
sti
push
push
lock
scas
adc
insb
sub
xchg
in
dec
sbb
arpl
xchg
push
insb
cmpsl
xchg
push
mov
fldt
or
add
lahf
xchg
std
out
pop
dec
push
mov
out
lea
test
add
fstp
shll
jecxz
jmp
movsl
xchg
xor
cmp
aas
out
rcrl
leave
sub
frstpm(287
fimuls
aad
adc
jmp
aaa
mov
ficoms
push
lds
cmp
fnstsw
test
push
cmc
orl
push
cmp
jne
leave
clc
enter
pop
or
or
add
das
push
cmovns
arpl
cwtl
arpl
sbb
jg
add
jmp
in
or
in
mov
xchg
pop
pop
cmp
rol
and
push
xor
add
mov
xchg
cli
adc
push
stc
sbbl
insl
imul
jle
pop
pusha
inc
add
sub
add
fimuls
jmp
adc
xchg
xlat
sarb
punpckhbw
or
das
sbb
xchg
scas
or
or
xor
stc
loope
aaa
cld
adc
out
dec
cmc
stc
jae
hlt
push
push
or
dec
js
xor
mov
pop
mov
nop
addr16
mov
pop
push
gs
stc
pop
add
cmpsl
ret
clc
call
cld
fistpll
xor
fimuls
aaa
clc
scas
add
dec
pop
scas
clc
scas
mov
sbb
ljmp
fsubrs
jle
mov
add
sbb
test
outsb
mov
push
jb
stos
add
mov
add
xchg
clc
in
or
sub
sub
add
stos
sub
jnp
fimuls
ljmp
mov
mov
xchg
popa
pop
mov
and
sbb
insl
aad
or
mov
xchg
clc
xor
sub
cld
pop
insl
inc
jmp
sub
cmc
mov
or
inc
jge
dec
hlt
std
fstps
jo
pop
mov
add
cmc
mov
sub
jp
dec
repnz
insl
push
add
xchg
jbe
inc
test
xchg
sarb
pop
clc
fdiv
insl
inc
jmp
push
and
cltd
and
cmp
icebp
cmp
stc
add
and
adc
faddp
je
xchg
je
in
inc
push
div
rcrb
adc
mov
je
add
mov
cli
jne
xchg
adc
and
sub
ret
push
mov
add
inc
negl
mov
xor
lods
pusha
pop
add
push
or
loope
shll
adc
mov
add
cmp
cmc
call
or
test
adc
inc
mov
cli
jne
sbb
fiadds
js
ljmp
call
add
mov
out
stc
or
mov
call
sub
mov
dec
lods
inc
push
push
je
push
push
cmp
push
addr16
in
bound
mov
or
add
and
cmp
lret
jae
call
inc
add
push
stc
sub
adc
inc
add
lock
add
xchg
cmp
sub
push
mov
sahf
push
adc
adc
dec
push
jno
adc
xlat
mov
push
lea
jns
faddp
xchg
jmp
mov
out
dec
imul
fsubrl
fcomps
and
sub
sub
mov
xchg
sbb
lods
dec
and
and
mov
add
add
sbb
pop
push
cmp
imul
movsl
add
or
out
add
in
push
adc
fiaddl
aaa
rorl
inc
jmp
fisttpll
or
sub
pop
xor
mov
adc
jmp
out
adc
add
loop
shl
sbb
cld
add
mov
jmp
sahf
ret
in
sbb
push
inc
sbb
popf
or
or
ficoml
jecxz
add
mov
inc
or
jle
fwait
jno
push
stos
insl
jle
fwait
mov
jmp
es
dec
mov
mov
fistpl
enter
adc
ja
rolb
add
pop
cs
sbb
or
push
cs
sub
mov
das
dec
ret
jle
sub
inc
insb
dec
sbb
inc
jmp
repnz
insl
add
cmpb
and
adc
xchg
jle
ficomps
iret
push
pushf
xchg
xor
clc
jg
mov
adc
and
add
xchg
rorb
mov
into
pop
xchg
adc
ss
or
ljmp
or
test
icebp
adc
test
repz
loop
jo
add
icebp
xor
lea
setle
push
and
loop
fdivr
pop
sub
cmp
int3
pop
mov
icebp
shl
add
add
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
loopne
ja
dec
ljmp
pop
in
add
adc
add
pusha
add
sti
pop
add
cmpsb
jb
fisubs
add
lods
add
pop
ljmp
dec
sub
add
hlt
jmp
add
hlt
add
and
clc
fdivrl
inc
jmp
scas
adc
xchg
cltd
jle
push
mov
jl
sub
aam
push
inc
jmp
mov
icebp
std
sarl
outsb
loope
xchg
clc
rcr
clc
mov
mov
fidivrs
loope
add
popa
and
orb
add
add
icebp
inc
jmp
adc
fld
fsub
rorb
add
pop
add
lea
or
call
inc
lcall
mov
jle
loopne
fistpll
inc
push
mov
jle
stos
js
shll
std
add
mov
xor
add
das
mov
pushl
cli
inc
fwait
inc
pop
aaa
popa
push
inc
cmpl
pop
ffree
jne
dec
into
pop
mov
lahf
std
call
or
mov
xorl
fdivp
mov
shrl
out
push
mov
out
bound
jo
mov
clc
mov
icebp
stc
mov
arpl
popf
idivl
test
add
dec
or
out
icebp
ret
je
divl
fisubs
pop
data16
aaa
or
sub
stc
into
jb
adc
mov
add
cmc
pop
sbb
mov
test
inc
jp
mul
stc
mov
jg
jb
out
inc
out
loop
aam
jmp
fdivp
jmp
lock
pop
popf
sti
adc
mov
out
sub
das
pop
jbe
stos
add
xchg
push
arpl
repnz
and
push
pop
or
sti
cli
xor
lret
fdivr
ja
xorb
imul
xor
inc
sub
mov
mov
rorl
in
stos
inc
gs
xchg
inc
jae
mov
or
cmp
cmp
add
movsl
js
mov
scas
popf
push
jb
cmp
subb
clc
jne
out
fstpl
sub
pop
clc
mov
jne
fstpl
sub
clc
sahf
mov
test
jle
mov
add
popf
insl
std
fdivrp
faddl
push
rcll
jmp
lock
lret
xchg
clc
mov
add
and
mov
fstpl
insb
pop
test
add
push
mov
and
inc
clc
pop
add
insb
add
shrb
cli
incl
pop
jge
imul
lea
jb
push
sub
adc
or
or
hlt
cltd
cld
push
repnz
imul
add
mull
roll
or
idivb
negl
adc
mov
ja
mov
ja
push
mov
ljmp
or
jae
inc
push
stc
jae
push
add
out
loope
jbe
pop
xor
adc
pop
jge
daa
push
push
mov
fimull
je
and
add
or
cs
adc
xchg
jbe
jno
push
orb
iret
mov
test
cmp
repnz
mov
fidivs
or
idiv
ficomps
jl
push
pop
sub
jmp
lahf
jg
jmp
popf
andl
xor
push
sbb
clc
pop
mov
cmc
popl
add
pop
push
psubd
add
popa
inc
fiadds
stc
pop
aad
add
daa
arpl
dec
insb
stos
add
jbe,pt
fisubrs
jbe
fidivrs
pop
sbb
movsb
push
stos
add
subb
push
ljmp
mov
iret
shll
jle
cld
xchg
aad
jmp
fiaddl
jmp
add
mov
sbb
jp
add
mov
inc
add
rorl
cmc
out
sub
jmp
mov
dec
clc
sbb
inc
add
lahf
or
ds
stc
mov
repz
les
mov
mov
mov
inc
add
cs
in
add
jmp
adc
fiaddl
add
add
insb
push
adc
pop
mov
xor
jmp
test
test
pop
pop
add
sub
add
mov
jle
subb
inc
pop
add
push
cmp
pop
lcall
mov
popa
mov
inc
sbb
add
push
inc
add
mov
rorl
cld
xchg
cli
fadds
dec
xchg
testb
jns
leave
xchg
add
xchg
inc
std
mov
ficoms
or
fcompl
std
xchg
sahf
xchg
int3
mov
scas
into
add
add
inc
push
xchg
jmp
popf
xchg
inc
std
arpl
inc
inc
adc
fimuls
pop
ror
movl
add
sbb
or
add
clc
pop
cmp
cs
inc
add
sub
fucom
aad
fsubrl
pop
out
in
mov
in
sbb
cmpsl
lahf
fiadds
lods
call
arpl
loop
test
daa
pop
shr
push
scas
test
pop
and
mov
movsl
gs
jl
jnp
add
jnp
hlt
fs
ljmp
sub
dec
push
icebp
inc
fdivrl
inc
in
sahf
mov
icebp
sbb
or
pop
ljmp
icebp
in
sbb
mov
in
out
stc
xchg
je
fucomip
jge
loope
cmc
or
add
fldl
imul
scas
or
aad
add
cmp
inc
fimull
imul
mov
push
cmp
xor
jle
repnz
jle,pt
mov
ljmp
jmp
insb
xor
clc
scas
aaa
pop
clc
mov
adc
in
mov
add
xchg
clc
push
or
and
pop
push
mov
jbe
inc
add
aas
sub
mov
inc
clc
inc
jle
push
mov
stc
std
adc
call
mov
daa
std
pop
icebp
sar
enter
push
mov
in
repz
fisubrl
lock
jmp
mov
adc
ds
stc
call
dec
daa
cmc
cmp
add
incb
daa
cmc
mov
inc
push
add
je
inc
hlt
fidivs
add
jecxz
std
out
mov
cmpsl
rcr
shr
hlt
xor
cmp
fidivs
stc
push
cwtl
stc
xorl
mov
mov
call
stc
into
sti
sar
jmp
test
sbb
jecxz
push
inc
loop
icebp
dec
xchg
ficoms
in
das
push
pmullw
in
add
jmp
sarb
test
add
je
lea
mov
pop
ljmp
js
jmp
sbb
add
out
popf
loop
add
out
mov
ja
sbb
pusha
and
mov
adc
lds
sub
add
mov
add
popf
ret
xor
icebp
les
add
add
loopne
inc
mul
push
out
loopne
inc
insl
fidivrs
xchg
call
repnz
adc
pop
or
sub
fsubp
jmp
loopne
jne
call
ja
push
cltd
jle
jmp
sub
jns
sub
or
test
incl
out
mov
mov
push
clc
hlt
add
aad
inc
jmp
pop
sbb
ljmp
push
mov
imul
rorl
andl
or
stos
fsubr
pop
push
data16
out
jne
jecxz
pop
insb
sub
sbb
mov
sbb
call
psadbw
dec
inc
cmp
jb
movsb
mov
jle
add
add
divl
loope
or
sbb
decl
icebp
test
or
mov
je
adc
bound
sbb
jmp
mov
cmpb
pop
pop
dec
fwait
add
push
mov
fs
test
clc
imul
daa
stc
push
cmp
adc
movb
mov
push
inc
adcl
add
stos
mov
inc
xlat
jae
add
xchg
add
in
std
pop
das
fdivrs
jnp
add
pop
push
fsubrp
dec
cld
daa
dec
add
dec
pop
fcmovu
add
imul
adc
mov
in
xor
xchg
sbb
add
gs
das
mov
jbe
leave
stc
rcrl
test
push
stc
add
lret
push
aas
fdivp
or
inc
inc
dec
addr16
in
dec
stos
add
mov
jo
ljmp
cwtl
fwait
nop
and
pop
fwait
xor
jne
or
ljmp
je
addr16
sbb
fmulp
push
notl
je
repz
aad
inc
stos
push
sub
mov
add
add
dec
sub
mov
ljmp
sbb
andb
repz
je
shll
sbb
jne
fsts
mov
or
aas
popa
sahf
outsb
movsl
push
pop
cmc
add
jbe
icebp
into
lock
mov
loop
ljmp
sub
sahf
cmp
add
add
test
clc
pop
popa
sahf
outsb
fcoml
or
frstor
ret
jmp
and
stc
push
rcrb
mov
frstor
dec
jb
out
add
pop
add
pop
cli
jne
fnstsw
mov
jge
ljmp
out
cld
sub
cmc
test
in
cld
sbbb
clc
or
je
add
rorb
add
inc
sub
shrb
adc
pop
pop
mov
inc
xor
das
push
push
addr16
insl
and
xchg
xor
cmp
inc
inc
xchg
xor
insb
xchg
mov
cmp
mov
xor
test
ficomps
push
loope
push
fsts
mov
stc
fldlg2
int3
xchg
in
test
add
sub
cmp
fimuls
les
lahf
push
rcrl
gs
push
xchg
xchg
xchg
jl
or
cld
fdivrp
inc
or
add
dec
test
cmp
pushl
xchg
push
sub
rcrl
out
sbb
loope
jb
sub
adc
xchg
add
ljmp
jp
ret
stos
insb
xlat
jo
and
stos
add
jns
pop
sbb
add
daa
cs
ljmp
arpl
ljmp
add
cmp
repnz
into
in
out
add
jmp
mov
fidivrl
movsl
pop
mov
jo
xlat
repz
add
mov
fldenv
in
shrb
loop
lea
insb
sub
or
sub
fidivrl
add
cltd
imul
ficompl
sti
mov
cs
leave
scas
adc
mov
out
pop
and
addb
pusha
fcomi
xor
jne
ret
jecxz
or
test
add
add
pop
add
pop
jecxz
cld
es
jns
jne
and
or
fstpl
add
mov
notl
mov
cmpb
cli
jne
xlat
test
dec
xchg
cli
inc
imul
test
jle
jae
xchg
je
dec
and
pushl
out
shlb
add
add
andb
push
or
hlt
xchg
pop
jb
dec
rcrl
or
mull
loope
sbbl
push
int3
pop
pop
adc
hlt
push
sub
fidivs
xor
mov
pusha
inc
ficomps
fiadds
sbbl
xor
imul
pop
divb
push
cs
add
fcmovnu
rorb
and
sub
xor
xor
cld
push
or
add
lock
xor
jnp
jbe
add
add
popa
outsb
mov
inc
clc
repz
rcl
add
inc
stc
mov
jbe
mov
pop
push
add
pop
fwait
sub
pop
mov
cmp
addb
add
mov
mov
add
sahf
xor
repnz
insl
cmpb
xchg
mov
adc
js
mov
jne
or
sub
insb
mov
inc
fsubp
sub
test
xchg
xorb
loop
fsubs
mov
dec
sbb
imul
add
inc
outsb
jge
popf
pop
pusha
sahf
push
xchg
dec
inc
jmp
pop
and
bound
into
data16
cmp
adc
cmp
icebp
leave
stos
ficomps
jmp
icebp
fcompl
pop
sti
add
jle
push
mov
pop
icebp
sbb
std
mov
pop
add
ds
popf
jbe
in
push
out
cli
xchg
cmp
jae
add
pop
add
test
fistpll
shrl
jne
jge
pop
insl
and
aaa
xchg
je
ret
incb
push
call
lea
inc
aaa
das
mov
das
fbstp
inc
sbb
jmp
je
push
je
jle
lea
hlt
add
mov
popa
pop
push
loope
ret
mov
add
push
movsb
inc
xchg
mov
hlt
sub
sub
push
xor
inc
pop
pop
pop
into
pushf
adc
push
in
and
add
xchg
mov
pop
pop
push
out
in
mov
xchg
jnp
imul
xor
stc
sub
jae
ret
mov
sbb
add
repz
aas
fiadds
mov
incl
add
insl
jno
jmp
aam
pop
pop
fmulp
lcall
lahf
add
fsubp
stc
int3
ss
xchg
repz
mov
fidivs
or
jbe
push
arpl
testl
pop
out
add
loop
add
pop
insl
mov
addr16
shrl
imul
hlt
adc
jbe
out
rorb
add
imul
rclb
loop
push
fcom
sub
into
imull
stos
sub
xchg
repz
or
adc
cmp
push
into
push
pop
xchg
mov
outsl
xor
setg
cmpsl
loope
push
iret
aam
repz
cmpsl
push
push
insl
in
inc
inc
fstpt
clc
bound
push
jle
add
or
pop
mov
xchg
sub
jge
test
addb
sbb
in
adc
xchg
pop
add
pop
icebp
ljmp
das
icebp
and
push
add
cltd
push
add
fcmovu
adc
fdivr
sbb
fcmovb
adc
xchg
gs
jo
push
cld
mov
xorl
add
mov
outsl
or
aaa
pop
jbe
xchg
add
dec
xchg
or
push
stc
call
pop
inc
inc
ljmp
cmc
jno
push
lods
jge
in
pop
loop
cld
aaa
call
fdivrp
cmp
pop
adc
pop
in
mov
sub
shll
inc
cmp
or
add
xor
lock
test
inc
clc
out
mov
xor
or
icebp
pop
hlt
push
fisubrs
inc
xchg
movsb
add
push
ror
shl
ds
push
js
inc
outsb
les
mov
sub
sub
aas
jmp
jg
inc
cmp
xchg
sahf
je
call
push
ror
sbb
mov
test
sbb
add
in
xor
push
je
je
nop
fisttpl
gs
sub
mov
cld
frstor
enter
mov
dec
aad
pop
pushf
outsl
add
gs
jle
ret
loopne
adc
jp
gs
pusha
ljmp
jbe
outsb
repz
arpl
pop
ljmp
sbb
jmp
mov
add
ljmp
les
dec
jecxz
mov
jmp
add
sbb
fstl
sub
jnp
cmp
xor
xor
repnz
xlat
ss
fs
inc
ficoms
jmp
adc
push
jbe
data16
frstor
sbb
jb
cmp
inc
sub
dec
daa
outsb
clc
mov
add
roll
mov
lock
pop
outsb
clc
popf
add
ss
jle
mov
mov
lock
mov
add
ficomps
jno
std
xor
push
jb
sti
adc
cltd
jns
aas
movsb
data16
adc
fcomps
cmp
adc
setle
data16
fstpl
add
inc
je
cmp
icebp
cmp
add
clc
mov
pop
leave
je
jle
add
xor
out
dec
xchg
add
int3
sub
add
sbb
push
dec
add
mov
nop
roll
inc
pop
add
clc
pusha
and
pop
add
nop
cli
pushl
clc
incl
in
hlt
xlat
pop
inc
push
sub
adc
pop
test
add
mov
add
negl
and
movsb
xor
push
loop
stc
sub
movsl
xor
inc
fadd
rcrb
cmc
sbbl
in
ljmp
adc
sar
push
jns
jp
pop
sbb
lret
addl
or
mov
data16
lds
lods
xorb
inc
xor
fwait
mov
pop
insb
int3
jae
lea
shll
jg
jecxz
inc
xor
inc
jp
push
pop
sbb
insl
push
mov
jg
push
cld
inc
fdivp
mov
lods
fldt
add
aam
cld
bound
ficomps
lahf
fldl
inc
scas
ja
inc
cltd
jbe
inc
xchg
add
pop
insl
inc
mov
add
pop
inc
outsl
fs
daa
xchg
add
out
test
pop
ljmp
sbb
dec
int
fadds
fisubrl
sti
pop
mov
add
repz
mov
jne
addr16
popa
cmp
rolb
sub
push
push
push
adc
push
jge
fstpl
fisubrl
fcmovnb
cmp
arpl
negb
jmp
xchg
js
in
push
xchg
loope
in
push
mov
loopne
add
jmp
jb
push
cld
sub
addr16
push
data16
daa
sub
xchg
out
push
out
mov
inc
fistpl
cmc
mov
sbb
ds
sti
add
pushl
loopne
je
loop
or
mov
fwait
inc
rcrb
jecxz
roll
add
cmp
push
call
pop
ljmp
lods
test
mov
out
hlt
push
xchg
je
lods
jne
push
xchg
adc
jbe
add
scas
xchg
or
inc
loop
push
jbe
push
mov
pushf
inc
aaa
orl
pop
pop
jle
stos
push
cli
push
push
fidivrl
incl
xchg
adc
fisubs
add
inc
add
add
mov
jb
adc
out
push
jle
enter
mov
add
clc
cs
cmp
stc
test
cld
ss
mov
in
cmc
ds
bound
jge
mov
cmp
push
jne
inc
xchg
dec
jno
ja
repnz
jbe
shl
ret
test
xor
lret
insb
xor
imul
add
jne
inc
es
leave
jae
pop
test
scas
or
scas
pop
sbb
daa
mov
lods
cld
add
arpl
test
repz
ret
arpl
adc
inc
arpl
scas
push
out
xchg
mov
test
lret
mov
dec
mov
js
push
mov
movl
add
xor
shl
pop
addr16
sbb
aad
xchg
push
xchg
enter
adc
mov
add
in
adc
call
test
dec
add
jno
xchg
lds
xor
mov
mov
mov
in
popf
int3
sbb
xor
add
add
cmc
adc
mov
imul
popf
test
lret
sub
cmp
sbb
push
gs
bound
push
jle
cltd
jo
movsb
sbb
les
and
jl
mov
or
sarb
repnz
in
xor
push
enter
cwtl
gs
jl
push
push
enter
add
cmp
adc
bound
outsb
sgdtl
mov
push
les
stc
adc
lcall
ja
add
aaa
addr16
and
jle
sbb
fnstenv
addl
pop
xor
fdivrp
push
test
std
fisubrs
ret
jb
mov
lret
and
add
fwait
push
add
loop
mov
ret
into
xchg
xchg
rorl
sub
mov
stc
flds
fxch
lret
cmc
add
jmp
hlt
out
enter
inc
add
std
or
or
xor
or
out
int3
add
sbbl
fisttpl
add
pop
fsubs
add
jb
add
ljmp
shl
int
faddl
fidivrs
out
lret
mov
xchg
mov
addb
xchg
ljmp
out
lods
ret
ret
pop
dec
pop
mov
ficomps
dec
add
scas
pop
in
dec
rcr
jmp
shl
fcom
fdivrp
add
aam
jmp
jnp
scas
mov
cs
add
adc
hlt
cmp
rorl
in
sar
fmul
int3
add
addb
adc
or
out
cld
div
pusha
push
jle
or
push
mov
mov
sbb
rclb
shlb
pop
xorl
hlt
imull
add
or
push
pop
push
clc
bound
push
and
cmp
gs
dec
lea
pop
mov
lock
pop
add
pushf
mov
mov
and
jbe
dec
nop
or
mov
add
clc
or
cmc
push
ficoml
and
add
insb
sub
fs
cli
test
nop
and
fistl
clc
and
insl
jbe
mov
arpl
inc
sbb
pop
push
arpl
or
pop
jl
or
sbb
clc
fmulp
ret
lods
repz
stc
popa
lret
out
lret
inc
shr
xor
lret
insb
mov
add
add
jo
clc
arpl
add
or
pop
add
jmp
add
leave
mov
mov
imulb
pop
stc
loope
les
lret
in
ret
int3
stc
xor
daa
gs
test
fcompl
out
roll
jg
adc
popf
pop
add
xor
lahf
stos
mov
pop
rcrb
or
add
scas
cwtl
stos
stos
repz
rcl
inc
fisubrs
pop
mov
mov
push
pop
dec
imul
stos
mov
scas
inc
cwtl
pop
push
mov
fsubl
into
lea
lods
cmp
iret
repnz
imul
pop
push
sub
jo
pop
ljmp
in
xchg
add
cmpsl
lret
add
insb
in
divl
pusha
cmp
ss
mull
imul
in
dec
pop
dec
cmp
push
mov
push
test
jno
mov
aam
das
adc
idiv
unpckhps
sahf
dec
shr
test
dec
jae
fidivs
push
outsb
aad
mov
clc
cmp
add
lods
jmp
bound
pop
mov
loope
mov
inc
or
call
inc
or
cmpsb
roll
mov
fimuls
mov
pop
ret
inc
sbbl
ret
cli
ss
lock
push
adc
iret
call
push
mov
adc
stos
cli
jne
in
jae
add
push
adc
ljmp
push
mov
or
or
jmp
test
pop
add
jbe
jo
mov
test
pop
std
dec
inc
dec
push
xor
punpcklbw
test
sbbb
mov
faddp
sbb
push
jbe
stc
pop
lret
inc
adc
add
add
mov
add
adc
jb
add
mov
cmp
ljmp
pop
test
sbb
sbbl
sbb
mov
cmp
mov
cmp
xchg
add
cmp
pop
xor
add
push
inc
ret
sub
adc
and
icebp
xchg
in
mov
add
add
fistl
add
pop
mov
push
dec
into
or
int3
gs
dec
push
inc
fldl
ficomps
not
out
push
bound
ficomps
mov
fsubrs
or
dec
ljmp
dec
push
hlt
pop
insl
inc
xlat
pop
dec
cmc
push
out
pop
aaa
ljmp
data16
loop
add
in
inc
jmp
add
or
orb
out
or
jmp
fidivrl
mov
fstpl
out
and
lock
pop
jmp
insl
lcall
push
outsb
pop
add
pop
popf
clc
jmp
in
mov
loop
int3
adc
cs
jne
pop
mov
inc
fdivp
inc
push
jge
scas
pop
imull
add
mov
or
shr
inc
add
dec
orb
add
push
or
jae
push
pushl
dec
and
filds
lods
sbb
jb
push
push
test
inc
pop
mov
push
jmp
add
jne
filds
mov
icebp
add
pushf
fs
lods
movsl
stc
mov
add
cli
inc
iret
fistpll
inc
loope
lock
or
jne
sti
decl
mov
inc
out
inc
roll
addl
clc
or
xor
pop
push
or
inc
cli
cmp
jb
push
push
mov
lock
sub
cmp
sub
cmp
lock
mov
jmp
cmp
jne
add
dec
and
jmp
enter
pop
jg
jl
inc
movsl
add
scas
mov
inc
pop
xchg
xor
sbb
cmp
bound
sub
pop
cmp
mov
pop
cmp
push
fsubs
loopne
dec
ss
inc
aas
mov
ret
pop
fcmovnb
or
add
add
outsb
imul
addb
mov
push
push
ljmp
mov
loopne
or
into
test
pop
arpl
push
lret
popf
push
mov
or
pop
mov
mov
sbb
sub
add
or
dec
fld
sahf
test
je
pop
rclb
jmp
mov
xchg
rclb
cmovp
movd
fdivl
push
outsb
hlt
push
mov
cmp
sbb
add
fucom
insl
addl
and
jbe
bnd
inc
mov
inc
loopne
fidivrs
aas
inc
cmp
xorl
imul
pop
push
push
add
jbe
add
add
in
inc
cmp
jb
loopne
add
jbe
hlt
lea
jne
xlat
inc
hlt
pushf
push
je
dec
mov
mov
or
or
add
pop
jle
jg
jle
fwait
aaa
ret
xlat
ret
xlat
inc
cld
repnz
lret
dec
testl
outsb
xchg
or
xchg
in
push
push
enter
add
add
push
loopne
lock
push
mov
iret
dec
or
pop
or
cmp
iret
mov
fwait
pop
test
push
insl
mov
mov
mulb
fs
fnstcw
cmp
push
dec
lods
jae
jae
jae
adc
cmp
je
sbbb
jl
loopne
daa
sbb
cmpb
mov
push
mov
add
add
push
xchg
stc
imul
cld
sub
pop
test
ret
ja
add
cmp
mov
ljmp
popf
inc
add
xchg
pop
jno
repnz
movsb
or
loop
popf
dec
and
ficomps
dec
pop
mov
xchg
inc
shlb
pop
dec
scas
jle
add
pop
ljmp
jecxz
add
pop
cmp
rcr
mov
test
inc
fsubp
test
adc
rcr
mov
mov
movsb
outsb
dec
add
sahf
icebp
fs
push
aas
push
inc
add
pop
popa
aaa
leave
dec
into
or
cltd
xor
dec
insl
icebp
rcrb
add
add
arpl
negl
cld
push
xor
pop
lea
xor
ss
pop
insl
inc
mov
sbb
dec
xlat
ljmp
mov
loopne
xchg
add
hlt
dec
push
andl
inc
clc
push
sbb
cmp
stc
mov
mov
mov
jmp
test
jae
jge
lahf
mov
incl
add
enter
inc
or
inc
testb
cmp
jae
lret
or
inc
call
testl
jae
xor
imul
mov
adc
ror
mov
mov
jle
sub
add
push
or
cli
mov
bnd
enter
xchg
mov
call
iret
cmp
add
jp
mov
push
sub
inc
push
jle
inc
scas
aad
cmp
out
std
inc
flds
sbbl
loop
fwait
inc
pop
push
mov
insb
mov
pop
outsb
cmp
mov
inc
or
insl
push
sarb
repnz
outsl
add
popf
sbb
jbe
lds
jae
mov
mov
add
add
add
gs
push
hlt
ds
test
sbb
hlt
sbb
icebp
sub
sbb
ret
test
mov
xchg
or
jecxz
push
idiv
mov
out
cmpsb
pop
test
inc
out
jae
mov
xor
jae
pop
and
mov
mov
jmp
gs
jg
jb
dec
ljmp
add
sbb
pushf
jmp
mov
dec
pmullw
pop
sub
cmpsl
fucomi
sahf
mov
cwtl
cli
jp
and
outsl
push
inc
add
das
mov
dec
bound
dec
sbb
cwtl
imul
cwtl
imul
pop
add
popf
inc
outsb
icebp
outsb
push
fistpl
inc
clc
popf
pop
push
in
leave
jo
mov
rorl
mov
add
sbbb
stos
pop
dec
not
cmc
adc
fdiv
add
xorl
rcr
leave
or
notl
fistpl
pop
and
pop
or
push
add
mov
pop
add
pop
pop
add
pop
add
pop
cmc
jae
cmp
add
addr16
add
pop
add
add
xchg
ljmp
push
decl
orl
cmc
push
lock
popa
pop
mov
cwtl
rol
pusha
push
mov
stos
dec
push
sbb
mov
dec
stc
push
or
rcll
add
pusha
add
mov
pop
inc
fidivs
jne
out
lods
stc
adc
dec
xchg
or
add
add
mov
xor
jmp
jl
push
int
add
jl
add
insl
pushl
sbb
ss
pushl
out
stc
sarl
xor
loop
push
arpl
sti
dec
or
decl
in
sti
clc
rcl
or
fidivrs
dec
or
lods
std
jg
xor
stc
adc
mov
je
clc
xor
adc
daa
inc
add
add
pop
stos
dec
cltd
and
add
cltd
jns
fsubrs
sbb
add
push
inc
aad
loopne
ljmp
pop
adc
fisubs
cli
sbb
inc
into
out
inc
mov
int
scas
out
inc
aad
rcrb
jne
push
outsb
ljmp
mov
jle
dec
pushf
lock
jne
add
out
mov
push
pop
gs
dec
push
jae
rcl
xor
mov
add
adc
in
or
inc
outsb
icebp
inc
outsb
insl
clc
sbb
push
mov
fmuls
push
pop
test
lahf
pop
add
mov
xor
lods
lods
imul
mov
add
leave
sbb
jb
inc
push
mov
popf
add
add
hlt
popf
in
scas
jmp
mov
dec
outsb
jmp
es
call
fldl
add
stos
imul
mov
adc
pop
test
mov
pop
push
mov
in
jne
add
push
pop
add
xchg
lea
inc
ja
cmp
inc
pop
add
add
fdivrs
aaa
mov
xchg
ja
insl
add
pop
add
test
ljmp
adc
test
jae
test
fcoml
sarb
in
fldt
push
scas
push
lea
sti
fidivs
push
push
roll
push
aaa
cmp
stos
ss
xor
icebp
mov
aam
stc
outsl
inc
xchg
add
push
aaa
sbb
imul
loop
add
arpl
pushf
in
inc
stos
jge
es
push
and
mov
test
jae
mov
add
bound
adc
lock
jp
stc
bound
or
pushf
out
mov
ss
hlt
pop
clc
dec
arpl
imul
add
movb
push
mov
add
pop
mov
add
xorl
in
aas
xchg
push
mulb
push
push
pop
inc
add
ljmp
add
fcmovu
popa
test
ss
inc
test
bound
push
in
pop
ljmp
ds
sti
push
imul
add
add
mov
jnp
outsl
rcrl
or
rcrb
test
movsb
lret
sbb
cs
add
pop
insl
cmc
bound
xor
mov
outsb
ljmp
push
out
nopl
stos
nop
lock
sbb
add
rolb
fnsave
clc
jp
hlt
mov
dec
test
add
jns
ds
jns
ss
jns
xchg
inc
push
clc
popf
pop
jle
scas
push
mov
cmc
adc
cmc
cltd
add
sbb
pop
pop
push
mov
and
popa
add
add
call
dec
and
call
ret
rolb
add
xor
add
dec
pop
add
out
cli
incl
add
mov
xchg
cwtl
inc
push
add
sahf
out
add
mov
cmpl
cmpsb
out
mov
jg
lret
loopne
fidivs
mov
stc
arpl
mov
mov
js
cli
cmp
adc
sbb
sbb
push
sahf
sbb
call
pop
push
xor
popa
mov
add
cltd
mov
cmpl
stc
cs
test
xchg
sbbb
lcall
inc
add
mov
lret
inc
add
fcoml
add
inc
sbb
fiadds
stc
stos
clc
shl
adc
scas
mov
sbb
das
jmp
addl
adc
pop
gs
mov
out
adc
sahf
pop
cwtl
jns
add
nop
lea
sub
das
xchg
sbb
mov
push
adc
pop
arpl
xor
insb
mov
or
lods
mov
in
pop
push
or
ret
or
push
inc
adc
pop
imul
setp
add
push
add
loopne
xor
ret
add
mov
mov
add
lcall
in
fisttpll
stc
push
fisttpll
xchg
pop
into
inc
jmp
fucom
rclb
jl
lret
jmp
cmpsb
stos
clc
aam
push
jmp
inc
mov
je
xorb
cmp
gs
scas
cs
jmp
out
int
cmp
jmp
add
gs
add
fucom
rcl
das
jge
jecxz
idiv
aaa
dec
insl
or
mov
dec
aad
mov
add
data16
fdivs
add
daa
test
adc
inc
sbb
adc
cmpsb
popf
add
bound
add
cld
adc
mov
add
aaa
adcb
popa
test
clc
dec
xchg
shr
jecxz
xor
jle
add
hlt
add
std
incl
into
jl
lret
pop
add
negl
adcb
dec
fisubrs
out
inc
add
pop
xchg
incl
add
loopne
scas
leave
mov
inc
add
scas
xchg
pop
out
push
add
mov
dec
adc
filds
add
or
fdivp
cltd
aaa
push
movups
sub
sbb
add
inc
loope
fiadds
or
add
fmulp
inc
and
pop
popf
cld
mov
add
leave
data16
inc
xchg
jg
into
push
or
popf
inc
sbb
adc
pop
stos
pop
rcrb
and
ljmp
mov
fsubp
sub
out
repz
stos
ds
in
xchg
mull
mov
add
add
jmp
xchg
cli
xchg
mov
xchg
ljmp
inc
cli
push
cli
pop
sub
stos
add
lahf
iret
sbb
dec
push
mov
leave
in
add
lea
mov
pop
ljmp
pop
ljmp
ja
sbb
push
in
int
aaa
clc
jmp
rcll
aam
stos
clc
faddl
add
inc
dec
jg
xchg
testb
test
pusha
push
insl
int
xor
gs
jbe
cmpsb
pop
xchg
mov
clc
adc
pusha
sbb
or
cltd
insl
in
sub
shr
inc
push
icebp
addl
sub
fcmovb
div
sbb
mov
arpl
inc
adc
add
push
adc
stc
adc
cli
rcll
mov
decl
out
lock
sub
sbb
cld
ror
mov
pop
lahf
jp
pushl
and
add
mov
jle
sub
lock
loop
adc
popf
adc
push
in
add
loopne
or
addl
out
incl
add
sbb
or
jge
stos
pusha
repnz
loope
sbb
push
or
inc
xchg
repnz
std
jae
mov
add
test
les
mov
sarl
adc
aaa
or
sbb
lods
sbbl
imul
stc
jmp
aam
mov
das
hlt
cmp
add
inc
in
push
adc
xchg
inc
test
adc
sbb
cmp
fistps
add
sahf
jnp
pop
pushf
inc
add
push
pop
mov
ss
xchg
andb
jne
fldcw
xor
xchg
pop
xchg
jbe
popf
add
pop
ljmp
xor
mov
inc
js
xor
mov
xor
out
lea
add
cli
fistpll
lds
into
push
sahf
pop
sbb
ljmp
ss
sahf
push
imul
fbld
sahf
arpl
rolb
dec
xor
xor
pop
xor
mov
scas
icebp
jb
xor
add
fistps
sbb
inc
ret
lahf
dec
xor
lret
xor
push
and
add
ftst
push
bound
push
mov
push
cltd
or
jns
mov
mov
inc
inc
cmp
jle
arpl
cmp
movsb
push
scas
add
pushf
aad
dec
in
jp
mov
div
fld
jne
fdivr
jno
dec
sub
dec
test
cmc
mov
xor
cmc
call
repz
insl
sbb
add
pop
testb
cld
movsb
imul
pop
jl
pop
pop
pop
adc
cmc
fldl
mov
dec
adc
xlat
pop
jb
mov
loopne
adc
mov
mov
ljmp
mov
jne
ret
push
mov
outsl
push
mov
in
or
pop
add
inc
insl
cli
jne
shlb
call
add
faddp
mov
adc
xchg
in
clc
adc
lods
and
xor
pop
daa
dec
mov
jae
cmp
jg
lret
and
int
fldcw
add
lds
icebp
jl
aaa
xlat
lds
ds
out
aad
cmp
xor
mov
push
aas
xlat
dec
ret
or
idivl
add
inc
add
outsb
or
or
subl
stc
pop
pop
sub
lcall
or
insl
xlat
sbbb
ret
xor
bswap
daa
sub
jns
pop
hlt
in
push
insl
inc
ret
xor
loop
inc
and
adc
mov
ss
in
lods
popa
mov
lcall
daa
in
cmp
test
aaa
dec
das
cmpps
imull
pop
mov
bswap
inc
jl
xlat
das
arpl
fcmovu
fdivrs
in
xor
cmc
fisttpll
outsb
stc
mov
clc
push
out
outsb
icebp
xor
fcmovnb
cmp
jno
sbb
adc
add
fsts
dec
fsts
mov
stc
aad
jmp
arpl
std
jno
jb
mov
out
dec
bound
in
insb
fwait
add
mov
stc
imulb
add
fldl
sti
jmp
loopne
test
pop
jnp
rcl
push
pop
add
aaa
fidivrl
add
jne
inc
mov
pop
insl
add
add
add
clc
ljmp
push
outsl
in
mov
add
jne
loope
add
and
add
add
pop
je
les
clc
mov
shr
pop
rcl
test
pop
fldpi
psubusw
add
divb
pop
add
out
fiadds
fiadds
push
out
ret
push
cltd
stc
gs
ja
add
push
mov
fld
sub
test
xor
add
in
imulb
jno
shlb
push
jge
jl
pop
add
cmpsl
mov
stc
idiv
cmpl
gs
xchg
test
cld
test
push
jl
xchg
mov
incl
out
je
in
dec
out
lds
add
add
stos
dec
pop
pop
das
xchg
mull
jae
pop
xchg
and
and
mov
jae
shl
fimuls
enter
sub
mov
mov
xchg
loope
movups
xor
pop
stos
into
mov
imul
lea
mov
sub
jg
mov
sub
mov
sub
add
aaa
loopne
repz
out
lods
gs
sahf
push
popf
rcll
insl
ror
push
cmpb
popf
call
loope
je
mov
clc
xchg
int
cmp
push
push
and
fiaddl
clc
mul
and
clc
jb
push
mov
addr16
in
aaa
cmp
rcrl
nop
lret
add
pop
dec
bound
stos
in
fcompl
xchg
sbb
bound
push
mov
push
nop
push
jo
sub
gs
add
push
jmp
lea
clc
jb
fucomip
aad
lock
negl
jo
adc
jne
inc
add
bound
or
pop
add
adc
push
movsb
sbb
rorl
and
je
cmp
std
and
add
add
clc
add
inc
sbbl
xchg
adc
jle
fwait
testb
mov
fstpl
hlt
or
mov
pop
or
repz
aaa
cmc
add
mov
dec
add
jnp
mov
sarl
fidivrs
add
adc
pushf
orl
js
fidivs
sub
test
add
or
and
cmpl
inc
pusha
lea
loope
dec
add
mov
stos
add
mov
cmp
loop
inc
or
cmc
test
cmp
loop
xor
or
mov
adc
ficoms
orb
inc
loop
xor
pop
xorb
jecxz
sbb
add
lahf
notl
mov
or
test
mul
sub
mov
ret
insl
xlat
sub
out
pop
arpl
repnz
sbbl
mov
lret
imul
ficompl
icebp
stc
pop
jmp
hlt
fs
xchg
sub
pushf
sahf
xchg
scas
jae
add
inc
mov
xchg
inc
sub
push
dec
mov
fbstp
bound
or
inc
add
insb
jp
mov
or
dec
bound
in
mov
lock
movsb
or
add
lds
and
loope
fwait
in
gs
ja
dec
lea
cmpsl
mov
and
xchg
outsl
fcmovnb
push
nop
loope
sbb
add
add
add
push
jo
push
mov
loop
xor
fstps
sbb
mov
or
leave
cmp
aas
mov
sub
negb
inc
adc
pop
rclb
add
outsl
jle
xchg
cld
add
pop
push
mov
ljmp
jb
clc
jae
inc
testb
add
cmpsl
test
mov
stc
push
fistpll
push
mov
mov
sub
mov
ffreep
je
test
xor
or
mov
and
add
push
jg
sarb
jne
ljmp
mov
push
lods
jg
stos
pop
cmp
adc
ljmp
inc
ljmp
add
add
pop
out
xor
xor
cld
push
push
adc
sarl
and
fidivrs
out
and
jnp
lret
adc
pop
aam
imul
arpl
dec
jbe
pop
stc
add
int
gs
jl
pop
cli
arpl
lahf
cmp
ret
cmpsl
mov
mov
add
xor
popf
and
jl
and
ljmp
mov
sub
and
sbb
ljmp
and
sti
dec
dec
repnz
push
dec
ud0
ljmp
and
jp
andb
loopne
mov
jnp
rcl
mov
sbbl
add
clc
jmp
test
pusha
out
xor
cld
std
push
inc
jmp
push
outsl
clc
hlt
push
push
inc
jmp
xchg
pop
add
or
cmp
adc
pop
add
push
sahf
adc
xor
fsubr
scas
xor
in
pushf
pop
adc
push
lahf
icebp
loop
cmp
out
pop
cmp
jge
das
fstpl
ljmp
ljmp
out
fcmovb
push
mov
or
pop
mov
push
ss
jb
mov
cmp
ret
xchg
insb
frstor
movnti
lcall
cli
jne
shll
test
loopne
xchg
sar
test
and
loope
adc
sahf
add
test
stc
cmpl
stc
addl
jns
stc
push
nop
imul
add
icebp
jmp
js
rol
pop
test
and
jge
add
stc
je
es
repz
into
clc
rcrl
aas
fidivs
jp
pop
sbb
dec
or
xor
and
imul
cmp
fidivs
stc
call
mov
ret
fadds
add
add
sub
data16
xor
mov
adc
icebp
lcall
fidivs
stc
shrl
jnp
mov
mov
xor
sbb
or
dec
fnstsw
pop
out
ja
dec
mov
pop
fcomps
fidivrl
cmp
fst
and
push
and
mov
fsubl
push
fwait
mov
mov
or
mov
jae
shlb
mov
pop
push
repnz
mov
aas
shl
dec
hlt
mov
dec
inc
notb
pop
mov
adc
das
pop
mov
add
cmc
mov
sub
mov
clc
pop
push
out
add
push
fidivl
sbb
inc
add
movsb
cmc
in
push
outsb
jb
stc
ret
aam
pop
and
xor
cwtl
jmp
push
and
sub
insl
mov
and
push
imul
addr16
insl
sbb
cmp
jo
xor
imul
fwait
in
mov
imul
dec
sbb
jne
inc
mov
sbb
inc
push
cli
cld
repnz
arpl
repnz
cmc
push
nop
dec
in
push
mov
sbb
in
push
in
cmp
jae
orb
je
mov
inc
push
lahf
shll
or
movsb
clc
mov
sarl
mov
add
and
stc
xor
add
je
leave
mov
clc
push
insb
lds
mov
push
dec
ret
fidivs
test
aad
aas
fiadds
movsl
in
push
pop
cld
xor
jl
mov
xor
add
xchg
mov
mov
xor
add
test
ljmp
ljmp
stc
inc
mov
shl
push
add
jns
push
test
outsl
inc
or
push
loope
stc
sub
pop
test
xor
push
stc
fstps
stos
pop
cmp
ds
push
mov
psrlw
dec
jae
stos
push
jne
or
call
filds
sahf
xchg
bnd
popaw
in
bound
popa
call
loop
popf
or
fimull
push
xor
movsb
and
aaa
push
stos
daa
mov
lods
clc
sub
addb
inc
and
lcall
xor
fistpll
pop
ljmp
pop
clc
ds
mov
mov
pop
data16
loop
add
fsubs
mov
add
pusha
loope
jge
stos
xchg
fucomip
cmp
xchg
clc
sbb
mov
cmp
sbb
shrl
pop
cmp
clc
mov
call
imul
mov
das
pushw
les
test
adc
jne
loop
pushl
add
fnstcw
mov
cmp
call
sbb
xchg
notl
fsub
jle
xchg
sbb
loop
mov
cli
sub
lea
and
xor
pop
addr16
je
sub
push
inc
lahf
cs
adc
add
or
push
cs
pop
push
jmp
add
dec
imul
mov
pop
ret
repnz
in
add
negl
clc
fiadds
add
fnsave
clc
sub
loope
sti
push
cmc
or
roll
loop
fldl
out
mov
jg
test
fs
xor
jge
jo
jle
pop
inc
inc
aas
adc
jae
pushf
test
imul
and
jl
cwtl
or
sbb
add
push
add
push
jl
pop
inc
sti
dec
mov
xchg
fwait
push
incl
mov
js
faddl
lock
sub
adc
add
out
sbb
add
inc
and
shrb
xor
xchg
bnd
fs
test
ret
mov
pop
sub
xchg
pop
test
push
jmp
fisubrs
and
icebp
imul
out
add
fdivp
lock
add
pop
cmpsl
stc
aad
xorb
aam
cwtl
adc
ficomps
pop
imul
clc
cmp
mov
stos
rcrb
jb
cwtl
in
out
add
pop
std
call
sbb
jmp
clc
xchg
movsb
loope
jo
adc
add
mov
test
pushf
cmc
jge
test
fstpl
jl
in
cmc
pop
push
clc
cmp
jnp
ficomps
arpl
adc
pop
add
xorb
inc
pop
pop
mov
cmpsb
ss
xchg
scas
xchg
mov
inc
cld
pop
pusha
add
outsl
pop
sti
call
and
xor
sti
pop
pop
add
mov
mov
in
imul
clc
mov
push
push
fdivl
push
push
sub
notl
cmp
jae
adc
mov
add
roll
std
je
push
rolb
add
out
cld
neg
jae
nop
lldt
mov
leave
jne
add
xor
xchg
and
out
fisubrl
add
xor
stc
push
push
in
fimuls
inc
stc
aad
ficomps
sbbl
add
jl
or
fadd
or
mov
pop
push
inc
jecxz
fdivl
inc
push
pushf
add
push
pusha
test
movb
add
inc
sar
aaa
sub
add
adcl
add
roll
add
add
add
add
sub
push
ficomps
aam
nop
repnz
popl
out
cmp
or
sbb
mov
ljmp
pop
ljmp
mov
inc
adc
push
push
dec
adc
ret
adc
adc
push
adc
add
pop
and
jg
pop
ret
pop
gs
sbb
push
push
in
addr16
mov
inc
hlt
add
push
jge
inc
mov
add
arpl
push
clc
mov
insl
mov
test
fmull
bound
jns
test
in
or
insl
add
shll
clc
inc
gs
jo
add
fidivrl
jmp
jne
adc
clc
push
push
mov
ds
loop
out
sbb
aam
jmp
sti
mov
imul
add
fwait
jl
ficompl
add
sub
shrl
push
push
sub
adc
or
jl
sub
add
and
add
repz
push
insb
test
sti
sub
pop
out
or
jne
daa
jg
pop
loop
cld
andl
pop
pushf
inc
hlt
pop
testb
pop
ret
out
inc
xchg
inc
cld
ja
lock
aaa
pop
pop
add
rclb
pop
cli
adc
fidivrs
js
jg
sti
gs
xchg
ja
push
mov
iret
push
inc
push
jns
add
cmp
sbbl
pop
test
jmp
pop
int
sbb
outsb
add
pop
or
jae
jbe
scas
adc
jmp
mov
sub
je
out
dec
xchg
pop
sti
push
cld
rol
and
add
fiadds
inc
mov
rolb
pop
xor
lds
add
add
push
insl
sldt
out
addl
pop
and
fisttpll
jl
sbb
fimuls
fsubrp
add
push
das
or
bound
repz
push
pop
cmp
gs
hlt
and
mulb
pop
fsubrs
or
and
aad
movsb
or
insl
ret
shll
mov
adc
ljmp
cmp
add
push
rorb
test
jl
popaw
notb
adc
cltd
lea
outsb
loope
push
jmp
and
xchg
punpckldq
adc
mov
sub
push
inc
ret
add
lods
inc
roll
ret
icebp
mov
gs
test
hlt
jno
sub
push
jle
out
lcall
add
imul
mov
mov
push
icebp
push
push
in
cli
clc
ss
cmp
fs
adc
cmp
push
or
in
mov
push
call
push
je
add
or
adc
call
in
sbb
roll
dec
leave
jne
add
dec
ffree
je
fisttps
push
subb
add
add
fiadds
jl
push
jmp
popa
push
call
inc
sub
inc
test
fadd
je
fdivrs
push
push
sbbl
add
push
out
clc
cs
aam
clc
cs
add
nop
or
sahf
mov
sub
pop
incb
push
les
pop
stos
jns
add
lret
inc
loop
cmp
push
cmp
test
jmp
xchg
aad
sbb
inc
and
add
fiadds
add
cmp
loop
call
add
roll
stc
jmp
adc
pop
sub
fisubrs
rcl
xcrypt-cfb
cmpsl
gs
out
popf
ljmp
add
pop
nop
jmp
push
repz
fidivrl
mov
test
je
xor
pop
out
pop
add
pop
arpl
stos
lahf
xchg
and
add
cmp
push
in
leave
add
pop
jae
lods
stos
ja
pop
ljmp
push
jp
loope
ljmp
sub
fiaddl
add
push
outsb
loope
in
or
popf
or
mov
pop
mov
insl
mov
arpl
push
inc
out
call
test
push
adc
push
ficomps
ds
cmp
popf
add
adc
sbb
cmp
jb
lcall
xor
ret
and
add
loop
sbb
xchg
pushf
dec
data16
test
mov
sbb
push
iret
xlat
inc
cld
out
mov
add
and
movsb
and
roll
inc
push
movsb
cmpsl
push
mov
out
es
call
cld
xchg
cs
pusha
jle
jo
add
inc
push
das
stc
jne
dec
add
add
inc
pusha
add
repnz
cli
xlat
mov
or
sbb
imulb
stc
jne
xchg
je
js
test
clc
mov
negl
jne
bound
mov
jmp
xchg
push
cmp
xor
add
jle
sbb
or
insb
std
or
jmp
or
and
pop
pop
clc
jge
or
add
push
mov
shl
mov
gs
or
xorl
add
cmp
xchg
testb
mov
insl
jae
inc
xbegin
sbb
and
ljmp
idiv
repnz
or
xlat
in
loope
dec
push
setb
add
cs
cmpsl
and
add
pop
mov
mov
mov
aad
ja
popa
gs
loope
popa
out
imul
lods
push
or
lret
jg
xchg
sti
add
and
jne
insl
mov
fprem1
jne
daa
or
stos
pusha
fildl
imul
xor
adc
pop
ficomps
add
pop
add
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
cmp
pop
push
pop
or
sub
lret
shr
and
push
push
scas
sub
sub
pop
xchg
adc
ret
enter
jnp
pop
repnz
or
mov
jecxz
mov
add
pop
adc
add
pop
push
pop
mov
clc
roll
pop
jge
enter
adc
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
xchg
ja
add
ja
add
xchg
xchg
ja
add
ja
add
inc
pop
add
inc
pop
add
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
ficomps
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
cli
add
jmp
fstpl
add
popa
add
sub
cmp
inc
popa
add
add
aaa
popa
add
aaa
popa
add
jmp
cmp
pop
popa
add
mull
add
pusha
add
inc
aaa
cmp
pop
popa
add
mull
add
pusha
add
outsb
cmp
pusha
add
mov
add
mov
add
pop
aaa
cmp
pusha
add
mov
add
mov
add
mov
cmp
xchg
add
add
ja
add
ficoml
add
ja
add
add
ja
add
ss
cmp
fdivp
add
fdivp
add
fdivp
add
fimuls
aas
fdivp
add
fdivp
add
fdivp
add
fsubp
inc
aas
fdivp
add
fdivp
add
fdivp
add
inc
aas
fdivp
add
fdivp
add
fdivp
add
ficoms
add
fdivp
add
fdivp
add
fisubrs
aas
fdivp
add
fdivp
add
fdivp
add
add
fidivrs
aas
fdivp
add
fdivp
add
fdivp
add
fisubs
aas
fdivp
add
fdivp
add
ficomps
add
pop
cmpsb
dec
adc
add
pop
ljmp
pop
inc
push
icebp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
add
inc
add
fstpl
jmp
fstpl
adc
inc
add
fstpl
jmp
fstpl
adc
inc
add
add
fstpl
jmp
fstpl
outsl
aad
add
fstpl
jmp
fstpl
test
aas
add
fstpl
jmp
fstpl
add
aas
add
fstpl
jmp
fstpl
mov
fstpl
jmp
xchg
add
fs
add
add
ja
add
inc
pop
add
inc
addr16
add
pop
add
add
aaa
pop
add
inc
pop
add
lcall
add
pop
add
aaa
pop
add
pop
pop
add
mov
aaa
add
pop
add
negl
pop
pop
add
sub
add
pop
add
negl
pop
add
jecxz
aaa
add
pop
add
pop
add
pop
pusha
aaa
add
pop
add
xchg
leave
pusha
aaa
add
testb
fdivp
add
add
fdivp
add
fidivrs
add
fdivp
add
fdivp
add
ficoms
add
testb
fdivp
add
fiadds
ds
add
fdivp
add
fdivp
add
fisubs
fdivp
add
fdivp
add
fdivp
add
fiadds
ds
add
fdivp
add
fdivp
add
fiadds
add
fdivp
add
fdivp
add
add
ficomps
ds
add
fdivp
add
ficomps
add
pop
ret
push
enter
ficomps
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
jns
or
add
pop
ljmp
pop
test
jmp
fstpl
jmp
stos
aas
add
fstpl
jmp
fstpl
loope
aas
add
fstpl
jmp
fstpl
mov
fstpl
jmp
fstpl
xor
aas
add
add
fstpl
jmp
fstpl
out
popf
add
fstpl
jmp
fstpl
push
das
popf
add
fstpl
jmp
fstpl
adc
pop
add
fstpl
add
popa
add
mov
inc
add
popa
add
xchg
add
inc
add
add
xchg
add
xchg
inc
add
add
add
inc
popa
add
inc
popa
add
sbb
inc
add
popa
add
inc
popa
add
inc
popa
add
xchg
jno
add
popa
add
pop
popa
add
pop
popa
add
push
jno
add
pusha
add
pop
popa
add
push
popa
add
dec
ret
inc
add
ret
inc
add
pusha
add
lds
add
inc
add
sahf
sahf
inc
fiadds
add
fiadds
add
fmulp
popf
inc
fidivrs
sahf
inc
fiadds
add
add
fimuls
add
popf
inc
ficomps
add
fimuls
add
fisubrs
inc
fidivrs
sahf
inc
fiadds
add
fimuls
add
jle
inc
ficomps
popf
inc
fiadds
add
fimuls
add
fimuls
pushf
inc
fiadds
add
fdivrp
add
fisubrs
inc
ficomps
popf
inc
fiadds
add
fdivrp
add
ficomps
inc
fisubrs
sahf
inc
fiadds
add
pop
in
add
ficomps
movsb
push
pop
inc
movsb
push
pop
ljmp
pop
add
push
pop
ljmp
pop
shlb
pop
ljmp
pop
add
sahf
pop
ljmp
pop
bound
pop
ljmp
pop
mov
sahf
pop
mov
add
pop
out
ficomps
mov
add
sahf
pop
ret
pop
ljmp
pop
xchg
mov
jge
add
fstpl
out
fstpl
mov
jge
add
fstpl
out
fstpl
xchg
jge
add
cmp
pop
add
fstpl
cmpl
pop
add
fstpl
push
cmp
add
fstpl
jecxz
pop
add
add
jl
add
fstpl
loop
pop
add
cmp
pop
add
fstpl
push
cmp
popf
add
fstpl
add
pop
add
jecxz
inc
add
pop
add
mov
add
inc
loop
add
inc
add
pop
add
mov
add
arpl
inc
add
inc
add
pop
add
ret
loop
add
inc
add
add
pop
add
jecxz
inc
add
jecxz
add
add
cmp
add
inc
add
inc
add
add
cmp
add
fiadds
fldl
pop
pop
add
lcall
inc
fiadds
addb
add
fdivrp
add
fiadds
sahf
inc
fiadds
add
fdivrp
add
fdivp
ja
ficomps
add
add
fdivrp
add
fisubs
js
fisubrs
add
fiadds
add
ja
fidivrs
popf
inc
fiadds
add
fiadds
js
fdivrp
mov
add
add
add
or
addb
add
fiadds
add
fidivs
addb
add
ficomps
add
pop
jle
sahf
pop
addb
pop
in
add
ficomps
jg
pop
loop
push
pop
ljmp
pop
push
jg
pop
addb
pop
out
ficomps
jg
pop
loop
push
pop
ljmp
pop
jge,pn
pop
cmpb
ljmp
pop
pop
jg
pop
mov
sahf
pop
ljmp
pop
outsb
jg
pop
ret
pop
ljmp
pop
addb
sahf
pop
add
cmp
pop
add
fstpl
adc
cmp
add
fstpl
mov
jge
add
fstpl
jmp
pop
add
sahf
add
fstpl
ljmp
add
pop
popf
add
fstpl
in
fstpl
movsl
sti
popf
add
fstpl
in
fstpl
icebp
fistpl
pop
popf
add
fstpl
out
fstpl
std
mov
add
fstpl
add
pop
add
add
jbe
add
pop
add
lcall
add
inc
add
inc
add
pop
add
pop
add
push
js
add
jns
add
popa
add
xchg
js
add
je
add
popa
add
pop
jns
add
inc
add
add
add
jnp
add
or
add
inc
add
add
inc
add
add
inc
popa
add
push
addl
sub
add
add
fiadds
add
cmpsb
imul
add
fisubs
mov
fsubrp
mov
fimuls
mov
fimuls
mov
fdivrp
mov
fdivrp
mov
fisubs
mov
fdivp
jae
ficomps
inc
add
fiadds
insl
inc
faddp
jae
fimuls
add
fidivrs
std
fiadds
xchg
xchg
fisubrs
xchg
inc
ficoms
xchg
inc
fidivs
fidivs
xchg
inc
fiadds
add
fidivs
xchg
inc
fiadds
xchg
inc
ficomps
add
pop
cs
sahf
pop
jmp
ficomps
nop
sahf
pop
out
ficomps
nop
sahf
pop
in
ficomps
nop
sahf
pop
call
add
add
pop
pop
nop
sahf
pop
out
ficomps
xchg
sahf
pop
jmp
xchg
push
pop
in
add
pop
adc
push
pop
ss
lock
out
nop
push
pop
sti
or
pop
ljmp
pop
ss
push
pop
popl
push
pop
and
push
pop
xchg
or
pop
cmp
adc
jmp
pop
add
push
sahf
add
inc
xor
in
add
pop
add
pop
sahf
add
push
sahf
add
addr16
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
pop
add
fstpl
jmp
fstpl
jmp
lea
add
insl
xor
shrl
add
jb
add
insl
xor
sti
dec
xor
or
add
push
xor
jmp
push
gs
add
pop
add
fstpl
add
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
add
mov
add
xchg
add
pop
add
ja
add
xchg
add
push
add
fiadds
add
fiadds
and
fsubrp
add
fiadds
sbb
push
lcall
and
mov
cmp
push
ljmp
das
std
fiadds
sbb
ljmp
leave
pop
sbb
roll
mov
xor
test
sbbb
add
imul
xor
or
sbb
stc
lret
icebp
jb
hlt
jmp
push
mov
cltd
dec
fdivrp
adc
adc
into
pop
or
adc
cs
add
jle
lret
adc
sub
push
adc
sub
ss
sub
mov
add
adc
add
sub
adc
cs
adc
notb
cs
adc
subb
adc
sub
pop
adc
sub
ds
sub
sahf
adc
sub
ds
sub
ficoms
jmp
xor
lret
xor
movsl
shll
xor
jmp
xor
add
loope
pop
jmp
xor
shll
lret
mov
and
enter
lock
fucomp
icebp
xor
repnz
xor
ljmp
std
lret
and
lret
xchg
xor
repz
jmp
xor
shll
lret
mov
movsl
shll
xor
lret
adc
xor
xor
add
dec
and
xor
pop
inc
xor
pop
push
xor
pop
gs
pop
jne
ret
dec
test
dec
xchg
xor
dec
movsl
xor
dec
mov
add
xor
pop
aad
and
xor
pop
cmc
xor
pop
add
xor
repz
xor
xor
jecxz
gs
inc
pop
test
add
and
repz
mov
sbbl
sub
mov
pop
cld
roll
adc
or
sbb
bound
sub
ljmp
test
adc
adc
adc
adc
mov
adc
stos
push
and
in
enter
rolb
pop
or
or
sbb
bound
sub
add
inc
or
or
or
or
or
mov
punpckhdq
setb
btrl
xorb
mov
sbb
and
sbb
and
sahf
sbb
es
mov
and
pop
sbb
and
ds
and
push
ljmp
pop
add
ret
sbb
mov
add
mov
cmp
xor
add
fimull
cmp
lret
in
pop
cmp
testl
sbb
out
cmp
xlat
jns
mov
add
fnstcw
jge
leave
cmp
mov
cmp
xlat
or
add
jmp
add
pop
pop
add
ficompl
in
repz
aaa
fucomp
dec
aaa
fst
inc
aaa
cmp
aaa
std
lret
sub
aaa
fucomp
popf
aaa
add
push
dec
jecxz,pt
add
outsb
add
cmpsl
pop
add
das
dec
cmc
xor
pop
std
xor
add
pop
or
xor
xchg
add
stos
dec
out
xor
dec
jne
les
adc
xor
pop
xor
jecxz
pop
aaa
jns
pop
aaa
xchg
pop
mov
xchg
inc
cltd
cmp
bound
icebp
inc
stos
cmp
inc
inc
cmp
push
cmp
push
xchg
cmp
inc
push
into
cmp
add
adc
or
add
movb
ficoms
adc
out
inc
adc
out
jno
add
in
adc
int
adc
int
adc
lods
cmp
adc
mov
adc
mov
inc
adc
push
or
fwait
repnz
lods
ljmp
cli
ljmp
pop
lret
cwtl
sbb
add
ror
sbb
mov
sbb
dec
sbb
push
sbb
xor
sbb
xor
sbb
xor
mov
leave
or
adc
arpl
and
or
jecxz
icebp
or
inc
and
push
loop
rorb
cmpsb
and
push
repz
js
sub
adc
sub
add
add
sub
jb
adc
sub
adc
daa
movsl
adc
and
adc
sub
adc
sub
inc
sub
js
sbb
lahf
int3
pop
add
popf
pop
add
loop
add
ret
xor
ljmp
sti
lret
shlb
push
shrl
cmp
in
cmp
in
test
shr
aaa
xchg
add
int3
movsb
aaa
xor
or
add
lods
pop
add
fstpl
or
xor
pushl
in
jmp
xor
enter
test
das
cltd
div
cs
in
cs
in
add
inc
add
add
aaa
mov
cvtps2pd
cmp
dec
clc
cmp
mov
cmp
add
pop
fisttpll
aas
call
add
dec
mov
aas
and
aas
xchg
add
bound
add
push
sub
in
push
dec
xor
push
cwtl
xor
push
in
aam
xor
xor
aad
inc
push
and
xor
dec
xor
sbb
xor
push
movsl
xor
dec
push
xor
jb
shrb
in
or
add
stc
push
ss
adc
mov
adc
adc
cld
or
sbb
pop
sbb
push
sbb
lock
hlt
call
and
push
out
add
mov
popa
or
adc
imul
mov
movsb
incl
adc
adc
aas
add
stos
add
cmc
rolb
in
add
add
add
pop
jae
cwtl
sub
or
sub
jnp
mov
adc
and
sub
lahf
adc
and
or
dec
and
ljmp
pop
loopne
int
int3
adc
sub
adc
sub
mov
sub
mov
repnz
es
adc
das
fwait
adc
xor
adc
xor
add
push
xor
adc
sub
pop
mov
nop
pop
dec
sub
int
add
in
aad
cmp
mov
loopne
xor
adc
inc
shrl
jns
mov
xor
ljmp
dec
aad
cmp
ljmp
stos
fiaddl
cmp
add
in
cmp
in
cmp
out
jb
lcall
xor
aaa
pop
jmp
cmp
pop
add
fucom
notl
pop
add
imul
sub
and
xor
dec
scas
xor
cmp
iret
dec
jnp
imul
rorb
dec
scas
xor
dec
out
mov
dec
xor
inc
adc
add
xor
xor
sbb
jnp
push
test
dec
mov
aaa
nop
push
sub
cmp
push
mov
aaa
push
xchg
push
xchg
cmp
in
adc
idivb
push
push
das
cmp
movsb
or
cmc
cmp
xor
mov
xchg
ljmp
neg
add
jbe
jle
xchg
lret
stos
add
add
add
mov
add
mov
push
sub
hlt
repz
fnstcw
std
fidivs
rorb
cmpsl
adc
or
adc
in
cmp
mov
or
xchg
repz
push
inc
call
pop
or
mov
fimuls
fcmovb
nop
or
mov
or
movsl
adc
add
pop
jg
inc
and
and
cmp
ficomps
adc
add
sub
movsb
adc
cs
adc
cs
adc
cs
pop
das
je
dec
das
mov
cmpsb
sub
insb
sub
insb
sub
pushf
sub
push
loop
ficoml
in
sub
push
or
mov
bsr
and
adc
mov
adc
add
sub
adc
mov
imul
sub
cmp
out
dec
das
jecxz
fisubrl
and
int3
pop
xor
int3
xor
fwait
in
mov
das
jno
arpl
push
sarb
mov
jecxz
cmp
cmp
shrl
cmp
call
test
sub
shll
mov
add
test
pop
add
add
int
divl
ficompl
popa
in
mov
sub
out
adc
inc
out
dec
xor
int
xor
add
ret
dec
aaa
jnp
mov
rcpps
cmp
jl
add
cmp
push
cmp
push
outsb
cmp
popa
push
jae
pop
sbb
inc
pop
add
rorb
and
xor
ds
out
xor
xchg
xor
dec
loop
add
dec
test
aaa
mov
push
data16
push
sbb
mov
push
push
cmp
dec
adc
scas
push
inc
cmp
push
mov
leave
mov
push
lock
push
pop
stos
jecxz
xor
pop
add
mov
test
add
cld
cli
call
jmp
test
push
jecxz
add
shrl
jge
jl
mov
pusha
fdivrl
add
add
dec
or
adc
or
pushf
or
or
clc
lret
or
icebp
mov
cmp
orb
loope
or
faddp
mov
xchg
pop
mov
ficomps
adc
adc
lea
adc
lea
adc
lea
adc
add
lea
adc
mov
dec
mov
push
mov
daa
mov
adc
mov
adc
mov
adc
mov
adc
popf
mov
dec
popl
pop
mov
mov
mov
adc
enter
hlt
popl
mov
in
pop
xor
add
in
sub
adc
aaa
xor
iret
fbstp
jp
add
xor
int3
sub
in
fidivs
insb
in
lret
sub
out
imull
into
or
sub
into
sub
into
arpl
out
and
mov
dec
cs
out
aaa
xor
call
push
cmp
sar
cmp
out
cmp
in
cmp
add
xlat
mov
cmp
push
inc
cmp
data16
push
dec
cmp
gs
sub
loope
push
and
shll
pusha
add
aas
jns
push
aas
lret
aas
xchg
arpl
aas
fisubl
aas
aaa
mov
add
jbe
push
xor
outsb
mov
add
jno
xor
outsl
pop
xor
outsb
lea
push
outsl
mov
xor
insb
xor
ficomps
adc
in
int3
adc
in
mov
push
int
adc
int
adc
lret
movl
xchg
cmpsb
lcall
adc
or
adc
or
icebp
or
inc
or
add
hlt
mov
shl
popa
or
in
or
aad
or
lds
test
push
or
movsl
mov
or
addl
dec
pop
sbb
pop
movsl
adc
mov
mov
mov
push
loopne
sub
cmp
mov
or
add
mov
xchg
leave
pop
rcrb
push
pop
fwait
adc
push
call
cltd
ljmp
pop
jge
aaa
mov
push
pop
xchg
push
push
lds
mov
xlat
xchg
sub
push
xchg
jae
cmpsb
xchg
add
lret
lea
test
cmp
mov
cmp
cmp
add
mov
add
cmp
mov
aaa
pop
fdiv
ss
fsubrl
cmp
fcompl
jmp
loop
add
dec
mov
sub
push
aaa
inc
mov
and
xor
inc
cmp
adc
mov
ss
fbstp
jmp
loop
add
lahf
shr
xor
add
rclb
xor
shrb
xor
xor
iret
pop
xor
cli
rcrl
cmp
shlb
cmp
add
not
cmpsb
cmp
mov
aas
hlt
pop
xchg
ja
clc
push
popa
add
loop
lds
xchg
rcrb
popa
iret
icebp
xor
aad
xor
mov
fisubrl
cmp
push
cmp
add
adc
negl
clc
incl
sbb
jo
mov
test
cli
xor
or
cli
mov
icebp
ret
divb
cmc
push
out
cmc
cwtl
add
int
div
fcmovb
push
cmc
add
mov
cld
dec
mov
cli
push
mov
je
inc
cld
xchg
aaa
cld
xchg
pop
movsb
cmc
outsl
add
or
dec
add
add
lock
add
call
mov
push
fprem1
add
push
add
rcrl
std
xchg
ljmp
pop
or
test
mov
repnz
lret
push
cmc
push
nop
xchg
pop
xchg
sbb
sub
xchg
sub
cmp
add
lahf
mov
clc
mov
loop
out
xchg
clc
lea
clc
cmp
idiv
fwait
xchg
mov
sti
adcb
cli
inc
xchg
cmp
push
xchg
lods
std
pusha
cwtl
add
or
cmp
cli
dec
cmp
repnz
and
cmp
in
cmp
aad
xor
cmp
fnstenv
add
fdivrp
xor
fidivrs
xor
fimuls
ss
xor
movsb
xor
fbstp
aaa
mov
and
xchg
pusha
cmpsl
xor
cmp
push
dec
mov
sbb
std
aam
cmp
pop
add
sub
pop
xor
and
leave
je
iret
xor
sbb
add
xchg
aaa
aaa
mov
lret
xchg
aaa
out
pop
cmp
roll
push
sarb
pop
xlat
mov
cmp
cmp
shlb
cmp
sarb
cmp
rclb
loope
popa
cmp
mov
mov
movsl
cmp
shlb
cmp
xlat
xor
jge
pop
cmp
aad
cmp
mov
cmp
add
and
cmpsb
in
sti
mov
sub
rcl
sti
rol
aam
lock
imull
clc
subl
add
sbb
add
or
clc
push
sti
and
clc
mov
fdiv
mov
fcoms
imull
add
testb
adc
cmp
mov
roll
add
lds
call
add
fisubs
push
push
push
hlt
jge
pop
push
hlt
jp
loop
enter
mov
mov
inc
push
repnz
xchg
cmc
push
mov
lock
cmc
and
mov
repnz
cld
call
and
jo
adc
or
clc
xchg
popa
clc
pop
xchg
cmp
add
nop
sar
mov
ljmp
pop
mov
lock
cmp
mov
icebp
scas
mov
jnp
cmp
sub
xor
xor
and
stos
sub
xor
aad
mov
mov
fsubrs
sub
or
das
mov
repnz
mov
lock
xor
in
cmp
arpl
out
das
repnz
aad
cmp
lret
sub
loop
mov
lret
stos
jb
loop
adc
fs
movsb
cmp
xchg
xor
aam
jne
dec
je
ss
fs
fs
cmp
aam
aas
mov
insb
idiv
inc
pop
add
inc
int3
push
xor
leave
xor
int3
cmp
pop
int3
bound
jne
mov
add
ror
xor
leave
call
xor
leave
adc
xor
leave
jmp
leave
or
cmpsl
leave
push
xor
pop
xor
into
jbe
adc
lret
jmp
int3
shlb
int3
aaa
pop
int3
add
scas
roll
test
jg
sub
mov
arpl
out
cmp
rcrb
cmp
jp
dec
pop
or
js
push
cmc
mov
add
pop
into
cmc
adc
imul
hlt
cli
cmc
push
in
divb
inc
negb
js
jecxz
into
hlt
add
lret
negb
cli
negb
testl
adc
lret
out
pop
add
stc
insl
repnz
stos
ljmp
dec
fistpl
jno
push
lock
ret
sub
mov
add
pop
lret
nop
pop
cli
inc
ds
inc
sti
clc
add
pusha
stc
lea
jmp
add
pop
lea
hlt
dec
lea
hlt
fisttps
repnz
repz
cmc
xchg
shl
xlat
nop
std
hlt
or
hlt
add
imul
cwtl
out
fcoml
sub
popa
xchg
mov
adc
push
outsl
ljmp
aas
outsl
cltd
mov
cs
dec
es
dec
cltd
dec
movsb
das
ss
and
mov
cmp
and
cmp
je
ljmp
add
jne
movsb
hlt
cmp
in
cmp
in
cmp
xlat
cmp
cmp
fistpll
pop
mov
cmp
movsb
insl
cmp
movsl
cmpl
lea
xchg
pop
cmp
ret
enter
enter
enter
enter
lds
ds
shll
aas
test
idiv
aaa
shl
fbld
add
sbb
fcmovnbe
sbb
add
dec
xor
push
mov
cmp
sbb
nop
cmp
pop
shlb
inc
lahf
cmc
call
bound
add
shlb
dec
iret
enter
add
aad
inc
xor
shlb
push
int3
inc
repnz
int3
push
repnz
int3
add
lods
fcomi
push
lods
or
dec
lods
pop
hlt
lea
add
xor
dec
or
lock
or
icebp
icebp
repz
stos
call
mov
inc
jmp
mov
std
adc
lock
leave
int3
hlt
and
mov
stc
add
mov
push
out
call
mov
std
leave
push
add
fimuls
repnz
mov
bnd
pop
pop
icebp
dec
mov
test
icebp
xchg
int
bound
fsubrp
out
push
out
sub
lahf
out
mov
dec
out
cmp
push
out
inc
nop
jmp
in
loope
int
rcll
add
xchg
fucomi
leave
xchg
aad
lret
xchg
cmpsl
in
xchg
xchg
mov
in
xchg
xchg
jge
adcl
in
push
nop
imul
nop
gs
add
pop
nop
ja
gs
mov
jg
add
mov
popf
mov
xorl
mov
cs
mov
addb
xor
jb
xor
dec
xor
inc
xorl
push
xor
xor
cmp
xor
or
xor
cli
dec
xor
add
aam
js
out
das
bound
jmp
xor
or
xor
push
xor
lds
cmpsb
out
jb
in
aaa
push
mov
cmp
adc
cmp
mov
cmp
mov
push
cmp
mov
jnp
mov
jl
mov
pop
mov
push
cmp
int
cmp
int
cmp
into
mov
cmp
lret
into
cmp
ds
into
ds
into
jne
cmp
movsb
ds
icebp
rorl
popf
icebp
testb
icebp
adc
int3
repnz
push
pause
jmp
dec
repz
fldlg2
repnz
mov
std
mov
fiadds
repz
add
es
cmpsl
scas
hlt
repz
dec
hlt
push
cvtdq2ps
das
punpckhbw
dec
movups
jb
cmp
nop
out
fucomip
loop
ret
in
xor
lret
in
cmp
repz
inc
int3
or
dec
int3
add
push
int3
or
pop
lods
inc
out
sahf
lods
xchg
out
and
xchg
out
sub
pop
mov
adc
daa
cmc
and
ljmp
pop
div
add
repz
hlt
pop
mov
mov
adc
jnp
pusha
mov
testb
mov
movb
add
pop
push
testb
sbb
or
push
divl
nop
fyl2xp1
rorl
sahf
stc
mov
insb
cli
pusha
addr16
imul
add
add
out
xor
dec
xor
out
mov
int
out
lds
mov
mov
cmp
mov
cmp
test
cmp
mov
mov
cmp
mov
data16
sarl
xor
daa
dec
xor
insb
cmp
xor
sub
inc
movsb
xor
lock
jo
stc
add
jl
aaa
xchg
cmovg
imul
add
into
mov
ds
add
mov
and
xchg
int
aas
adc
mov
aas
pop
mov
aas
pusha
mov
aas
jge
loope
fs
aas
xchg
add
loop
and
movsb
sarb
xor
leave
push
xor
leave
jg
std
leave
test
aaa
leave
xor
in
xor
add
lret
xchg
push
xor
ror
xor
iret
loopne
jmp
iret
rdpmc
adc
cmp
ds
push
xor
out
jbe
cmp
xchg
lods
sbb
mov
jns
iret
lods
push
hlt
rep
mov
or
xchg
out
sub
icebp
out
inc
adc
stc
or
stc
jle
loopne
mov
repnz
out
ljmp
cli
and
add
rcrl
cli
pusha
lret
push
stc
sahf
stos
sub
mov
clc
in
inc
stc
movups
out
pop
adc
out
mov
idivb
in
nop
out
jmp
out
in
jmp
stos
test
in
jle
das
in
and
bnd
addl
enter
mov
dec
xchg
imul
add
add
xchg
jmp
lock
cmpsl
add
out
das
adcl
out
testb
in
and
out
jg
inc
out
sti
subb
push
subb
xor
int
ficomps
in
sub
inc
xor
adc
or
xor
add
in
cmc
xor
pop
xor
in
mov
xor
xchg
xor
int3
movsb
xor
iret
pop
xor
scas
push
xor
scas
aad
movsl
scas
lret
cmpsb
fsubrs
xchg
add
das
xchg
shrb
outsb
jae
cs
imul
bnd
xor
imul
mov
mov
cmp
ffree
divl
pop
add
xor
xor
outsl
cmpsb
lret
pop
lret
fbstp
adc
xorb
leave
cmp
ret
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
pop
mov
cmp
jle
and
mov
je
out
mov
or
add
add
mov
ds
mov
aas
mov
mov
aas
fisubrs
in
cmp
std
fmulp
repz
out
insl
in
xor
lock
into
int
cmp
jecxz
push
iret
gs
or
out
and
in
xchg
lods
or
push
adc
out
or
stc
adc
repnz
repz
insl
jmp
bnd
cmp
test
add
and
icebp
pushf
lret
test
lret
lock
mov
lock
lock
lock
test
icebp
adc
mov
div
mov
icebp
sbb
mov
icebp
or
aas
icebp
xor
mov
repnz
xchg
repnz
js
sub
test
in
xchg
test
add
je
fsubr
das
test
in
scas
sub
ljmp
in
mov
icebp
out
cmpb
cmp
orl
jmp
inc
jg
ljmp
icebp
call
inc
mov
testl
dec
jbe
mov
sub
sub
xor
xor
mov
adc
xor
add
or
sub
mov
in
sub
adc
mov
cmp
into
fwait
das
out
jle
adc
out
sbb
push
xor
add
mov
sti
xchg
divl
xor
jae
xor
cmc
mov
xor
mov
xor
adc
xor
add
mov
xor
mov
xor
lods
sbb
xor
int
xor
int
xor
int3
cmp
ror
lock
jge
fbstp
shrl
aas
aaa
jns
xchg
and
sbb
cltd
enter
lret
xor
loopne
add
lret
xchg
add
iret
scas
scas
xor
add
scas
xor
fisubs
fwait
lods
and
push
mov
icebp
jae
es
jnp
sub
aad
ljmp
pop
daa
jmp
hlt
ds
hlt
mov
or
in
in
add
rorl
lret
sub
lock
mov
jo
es
mov
fisubs
mov
ficomps
repz
push
fpatan
arpl
xor
addl
out
cmp
mov
out
clc
repz
nop
repz
cwtl
in
and
mov
inc
iret
pop
push
cmc
std
insb
cs
pop
insl
jbe
cmp
insl
mov
jge
mov
icebp
std
outsl
scas
icebp
popf
outsl
push
repnz
jo
icebp
jge
mov
sbb
jo
icebp
repnz
outsb
xchg
bnd
scas
repnz
outsl
jbe
add
cmp
outsl
ss
outsb
push
repnz
out
std
jno
out
sbb
jb
out
cmp
jb
lock
jno
lock
jno
lock
out
sub
mov
sub
outsb
mov
sub
outsb
pop
loope,pn
dec
cs
dec
jle
roll
sarl
and
push
adc
roll
loope,pn
add
fisubrs
jno
sub
cmp
lea
adc
scas
sub
loope
dec
das
icebp
lret
jge
rol
insl
das
sarl
das
xchg
lret
cmp
das
popa
mov
lret
xchg
ss
mov
ss
lret
ret
ss
lret
shll
dec
lret
jecxz
dec
lret
repz
lret
add
add
jg
adc
dec
lret
das
lret
pop
lret
dec
push
aaa
iret
lret
bswap
jae
aas
lret
mov
leave
mov
aaa
pop
lret
mov
leave
jecxz
iret
leave
repz
mov
lds
cmp
les
cmp
inc
cmp
dec
cmp
dec
cmp
sub
imul
aad
out
aad
add
xor
fwait
ljmp
or
lret
mov
aam
mov
aam
cmpsb
out
jecxz
jmp
xlat
aam
push
sti
push
aam
pop
ret
aam
testl
aam
out
aam
xlat
cmpsb
aam
xlat
mov
decl
movb
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
add
faddp
add
faddp
add
ficomps
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
popa
add
popa
add
mov
add
mov
add
popa
add
popa
add
mov
add
mov
add
xchg
add
popa
add
ja
add
add
xchg
add
popa
add
ja
add
inc
popa
add
inc
popa
add
aaa
popa
add
aaa
popa
add
inc
popa
add
inc
popa
add
aaa
popa
add
aaa
popa
add
pop
popa
add
pop
popa
add
mull
add
pusha
add
pop
popa
add
pop
popa
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
ficomps
add
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
add
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
add
pop
add
ja
add
xchg
add
pop
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
faddp
add
ficomps
add
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
add
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
popa
add
popa
add
mov
add
mov
add
popa
add
popa
add
add
mov
add
mov
add
xchg
add
popa
add
ja
add
xchg
add
popa
add
ja
add
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
add
fidivs
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
add
fstpl
jmp
fstpl
jmp
add
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
fstpl
jmp
add
fstpl
add
add
xchg
add
pop
add
ja
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
pop
add
pop
pop
add
negl
add
pop
add
pop
add
pop
add
mov
add
add
mov
add
pop
add
pop
add
mov
add
mov
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
orb
inc
cmpsl
out
scas
test
or
push
cmp
out
xchg
daa
xor
loope
cmp
sahf
jg
scas
sbb
lcall
je
leave
cli
scas
push
push
leave
les
push
movb
add
mov
xchg
shlb
jno
imul
lods
jle
bound
sbb
jns
hlt
push
and
xchg
add
sbb
iret
js
pusha
movsb
dec
and
xor
or
add
ficoml
xchg
sub
add
adc
sub
dec
shll
stos
cmp
cmp
pushf
add
popf
rclb
in
rcrl
clc
add
push
xor
or
xor
jl
or
inc
adc
jge
or
or
mov
sub
sbb
aas
pop
aaa
push
adc
and
repnz
push
jg
pop
xchg
push
fildll
push
cmp
add
inc
xor
xchg
repnz
mov
int
jge
xchg
xlat
imul
mov
dec
pop
cli
sub
stos
lds
lret
pop
pop
movsl
dec
pop
ja
lret
inc
popa
iret
dec
int3
lret
pop
fcoms
in
ds
imul
loop
add
sbb
cwtl
hlt
or
mov
mov
add
mov
ficomps
sarb
pusha
cmpsl
test
lods
cmp
out
and
lea
call
clc
jo
mov
ja
sub
dec
cwtl
pop
repz
hlt
push
and
dec
xchg
lahf
neg
pop
leave
push
jne
lret
inc
mov
mov
xor
lret
mov
call
add
jns
xor
dec
fsub
jl
out
push
scas
mov
fidivrs
add
inc
dec
lea
mov
and
mov
and
mov
faddl
mov
xlat
cmp
adc
inc
inc
pop
jle
popf
cmp
ljmp
jae
ret
add
jecxz
sbbb
xor
push
cmp
insl
mov
cmpl
arpl
lret
rorb
dec
lods
das
into
xchg
fsub
cmp
or
push
lods
fdivrl
pop
xchg
cmp
aas
pusha
imul
cmp
push
adc
dec
sub
dec
pop
mov
lds
inc
je
jne
add
lods
imul
cmp
xlat
push
rcrb
scas
fs
push
fidivrl
shr
scas
sub
les
or
sti
movsb
mov
jmp
fistpll
cmp
mov
frstor
mov
add
pop
or
into
cltd
and
dec
jns
outsl
xchg
mov
push
add
dec
loope
aam
vmptrld
mov
add
imul
push
cs
test
add
sbb
mov
push
pop
int3
sub
lods
cmp
adc
pop
or
sbbb
jo
adc
jb
or
pop
cltd
jns
scas
pop
ficompl
xor
xor
test
inc
xor
lods
leave
mov
add
mov
dec
aas
inc
adc
imul
xor
cwtl
xor
movsl
push
push
aam
pop
mov
je
call
jns
xor
in
ljmp
hlt
push
mov
pop
push
cmpxchg
loop
repz
cmc
stos
insl
mov
lret
aam
fdivl
fsts
test
add
dec
out
mov
stc
lock
outsb
aam
pop
pop
adc
enter
lds
lret
into
xor
cmpsl
mov
test
lods
divb
insb
into
pop
sbb
sub
mov
int3
lcall
push
push
pop
add
fisubs
add
pop
inc
add
jle
inc
fisubs
push
sbb
pop
sbb
xchg
int3
sbb
in
dec
push
imul
fldl
add
xor
imul
pop
add
jge
inc
fisubs
add
negb
imul
pop
imul
sbb
push
rorl
lea
adc
push
or
push
mov
in
sbb
push
push
mov
add
cmpsb
push
jmp
test
xor
lea
mov
add
push
pop
mov
push
clc
adc
gs
push
push
dec
fisttpll
mov
xchg
int3
and
int3
mov
in
or
inc
out
cmp
mov
aam
in
sbb
mov
aam
clc
gs
mov
add
add
aam
call
movd
push
sbb
mov
inc
add
out
inc
cld
cltd
sbb
add
pop
add
xlat
rorb
pop
fwait
add
data16
movsl
adc
pop
push
push
or
mov
pop
or
pop
test
fcmovu
shlb
inc
hlt
gs
cmovns
mov
add
rorl
gs
mov
fwait
push
in
or
push
pop
mov
mov
pop
popf
stos
int3
sub
in
lret
test
pop
add
cmpsb
cs
sbbl
add
pusha
inc
add
stc
push
jno
rorl
and
push
pop
add
pusha
inc
add
rorl
add
popf
pop
mov
movsl
cmp
add
loope
add
cmc
adcl
cmp
fcompl
stc
push
jmp
pop
mov
out
mov
lods
mov
and
int3
mov
test
in
lret
add
call
or
push
and
popf
test
int3
lcall
push
and
cmc
add
pop
add
xlat
call
add
xor
adc
pusha
dec
cld
and
mov
cmp
int3
stos
call
cmc
add
pop
add
xlat
call
add
rclb
adc
mov
pop
dec
cld
jmp
add
push
dec
stos
imul
push
pop
add
fiadds
rorl
stos
int3
mov
stos
int3
or
in
imul
or
mov
stos
int3
and
int3
mov
in
or
inc
out
js
fisubrs
mov
pop
add
fcmovu
ljmp
add
mov
or
or
lret
add
xchg
mov
lcall
push
xor
cmp
xchg
jae
gs
mov
mov
mov
sbb
cli
rcr
cli
add
dec
mov
out
lock
or
pop
jg
pmaxub
push
push
out
or
add
clc
gs
adc
fwait
insl
mov
out
or
add
insb
mov
in
or
out
or
pop
std
mov
cltd
testl
lret
inc
out
cmp
mov
addb
cli
out
call
push
fiadds
add
out
lock
sbb
add
loope
add
pop
mov
pop
dec
lock
mov
jle
js
pop
or
add
pop
imul
sub
mov
sub
adc
addr16
mov
adc
mov
pop
adc
in
or
and
jmp
push
xor
mov
out
hlt
gs
mov
data16
push
xor
and
mov
fdivrl
ficoms
or
add
ficoms
add
and
mov
fdivrl
add
or
jg
add
pop
adc
mov
cltd
idiv
shrl
adc
push
and
jmp
in
hlt
gs
mov
ljmp
add
inc
add
aad
imul
in
gs
mov
orb
add
and
or
dec
hlt
push
and
sbbl
mov
repnz
loopne
pop
clc
jns
fstpl
stos
int3
lcall
push
and
cmc
add
pop
add
xlat
loop
cld
pop
sahf
add
xor
adc
pop
dec
cld
and
or
in
fldl
add
push
ret
sub
int3
sbb
in
adc
inc
add
dec
mov
in
add
push
fstpt
int3
lcall
orl
add
enter
shl
or
sub
mov
xchg
mov
in
clc
push
xor
mov
pop
add
ficomps
addl
mov
dec
shr
loop
clc
push
sub
mov
in
lock
sub
cmovns
test
or
fwait
lea
mov
dec
imul
into
gs
fsub
clc
gs
bound
fsub
cli
inc
sub
mov
gs
stc
jb
bound
loop
clc
push
or
dec
jbe
inc
sbb
add
jmp
mov
pop
inc
cld
lret
pop
xor
xor
xchg
testl
sbb
in
or
sub
and
ds
push
xor
push
es
inc
ljmp
mov
aad
add
pop
jle
push
and
in
popf
jmp
gs
mov
add
jbe
push
or
mov
xchg
mov
out
sbb
sub
mov
outsb
mov
call
or
add
pop
add
imul
cmp
dec
inc
call
cmc
jne
push
shr
mov
pop
sbb
mov
int3
sbb
in
mov
adc
mov
add
pop
mov
xor
int3
mov
mov
in
lret
inc
out
cmp
mov
data16
dec
in
sbb
sqrtps
or
inc
in
mov
out
in
sub
push
pop
xor
fsubp
cmp
jmp
test
in
call
fwait
gs
mov
add
xchg
idiv
pop
lcall
ficomps
or
in
sbbl
in
lret
pop
and
jae
out
in
pop
pop
or
inc
ret
adc
or
push
out
out
in
and
clc
mov
jp
shlb
xor
scas
sbb
push
mov
orb
add
scas
out
in
push
sbb
add
idiv
pop
cltd
add
fwait
addl
push
push
das
jmp
sbbl
test
fimuls
add
add
sbb
xchg
pop
outsb
pop
xor
imul
and
mov
sub
inc
add
add
test
push
push
add
ficomps
dec
jb
imul
imul
imul
inc
ficomps
sbb
add
ficoms
add
gs
mov
in
cs
inc
add
dec
push
in
call
sbb
xchg
idiv
add
pop
cltd
add
sub
adc
cmc
cs
inc
sbb
movsb
ficomps
add
inc
test
pop
insl
es
mov
mov
xchg
ds
add
push
sub
mov
mov
push
dec
sub
mov
testl
push
sbb
add
loopne
add
or
add
scas
in
cld
mov
push
mov
dec
mov
sub
adc
sub
inc
std
rorl
lea
xchg
idiv
pop
lcall
das
jecxz
hlt
pop
sbb
push
push
sbb
mov
mov
sub
jecxz
cld
push
sbb
push
inc
addr16
push
fstpt
ficomps
mov
pop
movsb
xor
add
add
sahf
add
mov
dec
mov
sub
adc
mulb
stc
aad
add
pop
mov
mov
in
and
inc
shlb
int3
lcall
push
push
add
ficomps
inc
sub
mov
ret
mov
mov
in
mov
rolb
add
add
ficoms
add
and
in
add
pop
add
mov
pop
rolb
add
fsubp
and
mov
loopne
add
cmp
decl
mov
push
stc
pop
add
std
pop
pop
sbb
add
pop
add
in
std
pop
pusha
and
add
pop
add
ficomps
or
pop
add
add
ficomps
cmp
ficoms
push
push
mov
mov
gs
cmc
lea
mov
xlat
cmp
mov
test
add
fildl
cmp
movsb
std
daa
pop
and
push
fstpl
mov
das
jmp
sbbl
mov
add
fdivrs
dec
mov
lea
imul
jb
lea
test
lcall
add
and
inc
cld
mov
icebp
jae
or
cmp
cld
pop
mov
loopne
sbb
push
push
jb
popf
pop
add
inc
das
mov
add
xchg
incl
add
add
fwait
xchg
add
pusha
inc
call
mov
dec
cld
push
and
sub
jle
inc
mov
xchg
add
pop
in
or
stc
sbbl
dec
clc
in
icebp
jae
mov
add
xchg
or
adc
inc
add
xor
mov
cmp
add
add
add
add
jno
lea
aad
jmp
jbe
mull
mov
push
push
mov
shlb
shr
sbb
pop
pop
dec
or
out
in
lea
bound
or
mov
adc
int3
ficomps
add
pop
add
ficomps
add
pop
add
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
ret
add
outsl
leave
xor
outsl
shll
sub
xor
outsl
loope
cli
outsb
jmp
xor
outsb
add
add
lcall
xor
insb
or
loope
sub
in
dec
xor
insl
popa
xor
push
xor
push
xor
imul
inc
push
xor
push
ss
add
subb
pop
data16
repnz
cmp
arpl
mov
jle
pop
cmpsl
cmp
call
cmp
sbb
mov
fs
cmp
fs
pop
lea
pushf
fs
cmp
popa
in
es
bound
cmp
bound
or
cmp
bound
bound
cmp
add
xchg
cmp
popa
mov
cmp
arpl
stc
bound
pop
bound
cmp
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
add
ficomps
add
pop
add
ficomps
add
pop
add
ficomps
add
pop
add
into
mov
ljmp
call
stc
xor
push
or
and
lret
xor
sbb
adc
out
enter
aaa
dec
push
or
lods
into
mov
pop
lds
out
cmp
ja
hlt
sahf
push
push
pop
inc
out
fimuls
popf
jns
cltd
mov
xchg
pop
aas
pop
xor
add
jnp
into
repnz
fucom
and
cs
ficoms
into
cmp
jbe
sbbl
clc
rorb
xchg
out
xchg
lds
int
mov
popa
mov
orb
cli
cld
inc
jbe
sbb
inc
jmp
push
mov
adc
filds
fadds
adc
cwtl
mov
mov
or
and
leave
sub
sub
xor
pop
jecxz
in
sub
pop
test
push
testb
in
fidivrl
cmp
dec
xchg
aam
xor
out
popf
inc
cmp
loop
xor
xchg
repnz
movsl
nop
sub
iret
cli
scas
xchg
xlat
mov
sub
scas
jp
jge
pop
cli
lret
scas
cmp
rorb
xchg
inc
stc
pop
in
pop
pop
rorb
int3
inc
jb
int3
push
push
loope
push
xchg
int
imul
cli
cmp
lods
rcrl
mov
and
mov
in
push
sbb
shl
movsl
sbb
mov
ret
sti
jmp
pop
stc
jb
push
push
lahf
fimuls
lock
push
pop
jne
jns
aam
or
sti
mov
dec
mov
repnz
jnp
cmc
loop
in
andl
dec
jb
out
jae
aam
lret
sub
lods
call
dec
pop
lock
cmpsl
nop
imul
out
pop
and
add
loopne
iret
pop
push
clc
sub
cmpsb
push
push
cmp
je
cmp
push
jb
mov
into
enter
jnp
mov
js
fsubl
xor
pop
fldl
fadds
cltd
mov
or
mov
scas
push
out
pop
xchg
ja
shll
jl
push
fcmovb
mov
push
adc
dec
xor
leave
or
rclb
mov
push
push
icebp
and
aas
jae
fistpll
jg
jns
out
js
mov
fdivs
stos
sbb
jge
xor
cmp
push
pop
adc
jns
push
dec
mov
mov
fistps
mov
sbb
divb
and
mov
adc
jecxz
sbb
loopne
insb
std
aad
and
dec
les
xchg
shrb
cmc
sub
lods
jg
lods
pop
mov
aas
mov
push
imul
xor
push
push
loope
rcrb
nop
cmp
add
xlat
in
in
push
jne
int3
inc
pushf
dec
pop
sbb
lods
cmp
xchg
jmp
xchg
jo
cmp
xchg
out
sti
pop
push
adc
fidivrl
shlb
adc
test
pop
push
xor
cmp
and
dec
iret
sbb
pop
mov
dec
ds
pop
imul
cmc
pop
insl
repnz
fisttps
add
out
push
xchg
call
leave
jne
adc
mov
scas
push
pop
sti
inc
jno
pop
sub
pop
dec
cld
mov
cli
pop
jns
xlat
je
pop
fstpt
lcall
lahf
rcr
mov
fstl
and
add
push
leave
shrl
outsb
adc
test
xchg
fldt
mov
jne
popf
push
inc
lahf
lock
pop
cmp
mov
aam
.byte
in
add
add
add
mov
cltd
add
loopne
add
in
cltd
add
add
add
and
add
dec
lcall
outsb
lcall
nop
lcall
mov
lcall
hlt
lcall
sbb
add
xor
add
dec
fwait
add
fs
add
je
add
mov
add
mov
fwait
add
ficomps
add
cli
fwait
add
or
add
pushf
add
dec
pushf
add
push
add
jp
add
nop
pushf
add
test
add
mov
pushf
add
lock
add
add
add
sbb
add
cmp
add
jb
add
mov
add
mov
add
popf
add
in
add
clc
popf
add
adc
add
ds
add
dec
sahf
add
pop
sahf
add
outsb
sahf
add
jl
add
mov
add
cmpsb
sahf
add
stos
cltd
add
les
add
clc
sahf
add
or
add
sub
add
dec
lahf
add
pop
lahf
add
push
add
sbbb
add
lahf
add
mov
lahf
add
rcrb
add
hlt
lahf
add
add
add
sub
add
inc
mov
add
data16
add
mov
add
lods
mov
add
lret
add
mov
add
adc
add
inc
mov
add
mov
add
mov
add
les
add
out
add
cld
mov
add
push
mov
add
inc
mov
add
mov
add
xchg
mov
add
mov
mov
add
lock
add
or
add
and
add
cwtl
cltd
add
add
add
add
add
es
add
ss
add
dec
stos
add
pop
stos
add
push
add
push
scas
add
cmp
add
sbb
add
clc
lods
add
out
add
js
add
int3
lods
add
mov
add
xchg
lods
add
jp
add
push
add
pop
lods
add
dec
lods
add
xor
add
and
add
clc
lods
add
out
add
into
lods
add
mov
add
sahf
lods
add
mov
add
add
dec
lods
add
cmp
add
lods
add
repnz
add
loop
add
shrb
add
cmpsb
stos
add
mov
add
stos
add
dec
stos
add
ss
add
sbb
add
in
add
lret
add
stos
add
xchg
add
insb
scas
add
jbe
add
subb
add
scas
add
mov
add
scas
add
mov
add
add
cmpsl
add
cmpsl
add
adc
add
cs
add
add
dec
test
add
add
insb
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sub
add
cmp
add
push
test
add
jb
add
subb
add
add
shrb
add
cmpsl
add
aam
add
mov
add
test
add
lcall
add
add
cmpsl
add
push
cmpsl
add
inc
cmpsl
add
cmpsl
add
and
add
add
add
fsubl
add
mov
add
cmpsb
cmpsb
add
xchg
cmpsb
add
jl
add
push
add
pop
cmpsb
add
dec
cmpsb
add
cmpsb
add
sub
add
sbb
add
repnz
add
fisubs
add
mov
add
cmpsb
movsl
add
xchg
movsl
add
test
add
pop
movsl
add
inc
movsl
add
cmp
add
push
movsl
add
or
add
in
add
shlb
add
movsb
add
jo
add
push
movsb
add
inc
movsb
add
xor
add
movsb
add
cld
mov
add
loopne
add
enter
mov
add
pushf
mov
add
jp
add
bound
add
inc
mov
add
pop
movsb
add
add
add
adc
add
add
add
sub
add
sbb
add
add
add
fsubrs
add
or
add
add
add
repnz
add
adc
add
pusha
scas
add
or
add
lock
add
shrb
add
in
add
add
add
mov
cltd
add
loopne
add
in
cltd
add
add
add
and
add
dec
lcall
outsb
lcall
nop
lcall
mov
lcall
hlt
lcall
sbb
add
xor
add
dec
fwait
add
fs
add
je
add
mov
add
mov
fwait
add
ficomps
add
cli
fwait
add
or
add
pushf
add
dec
pushf
add
push
add
jp
add
nop
pushf
add
test
add
mov
pushf
add
lock
add
add
add
sbb
add
cmp
add
jb
add
mov
add
mov
add
popf
add
in
add
clc
popf
add
adc
add
ds
add
dec
sahf
add
pop
sahf
add
outsb
sahf
add
jl
add
mov
add
cmpsb
sahf
add
stos
cltd
add
les
add
clc
sahf
add
or
add
sub
add
dec
lahf
add
pop
lahf
add
push
add
sbbb
add
lahf
add
mov
lahf
add
rcrb
add
hlt
lahf
add
add
add
sub
add
inc
mov
add
data16
add
mov
add
lods
mov
add
lret
add
mov
add
adc
add
inc
mov
add
mov
add
mov
add
les
add
out
add
cld
mov
add
push
mov
add
inc
mov
add
mov
add
xchg
mov
add
mov
mov
add
lock
add
or
add
and
add
cwtl
cltd
add
add
add
add
add
es
add
ss
add
dec
stos
add
pop
stos
add
push
add
push
scas
add
cmp
add
sbb
add
clc
lods
add
out
add
js
add
int3
lods
add
mov
add
xchg
lods
add
jp
add
push
add
pop
lods
add
dec
lods
add
xor
add
and
add
clc
lods
add
out
add
into
lods
add
mov
add
sahf
lods
add
mov
add
add
dec
lods
add
cmp
add
lods
add
repnz
add
loop
add
shrb
add
cmpsb
stos
add
mov
add
stos
add
dec
stos
add
ss
add
sbb
add
in
add
lret
add
stos
add
xchg
add
insb
scas
add
jbe
add
subb
add
scas
add
mov
add
scas
add
mov
add
add
cmpsl
add
cmpsl
add
adc
add
cs
add
add
dec
test
add
add
insb
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sub
add
cmp
add
push
test
add
jb
add
subb
add
add
shrb
add
cmpsl
add
aam
add
mov
add
test
add
lcall
add
add
cmpsl
add
push
cmpsl
add
inc
cmpsl
add
cmpsl
add
and
add
add
add
fsubl
add
mov
add
cmpsb
cmpsb
add
xchg
cmpsb
add
jl
add
push
add
pop
cmpsb
add
dec
cmpsb
add
cmpsb
add
sub
add
sbb
add
repnz
add
fisubs
add
mov
add
cmpsb
movsl
add
xchg
movsl
add
test
add
pop
movsl
add
inc
movsl
add
cmp
add
push
movsl
add
or
add
in
add
shlb
add
movsb
add
jo
add
push
movsb
add
inc
movsb
add
xor
add
movsb
add
cld
mov
add
loopne
add
enter
mov
add
pushf
mov
add
jp
add
bound
add
inc
mov
add
pop
movsb
add
add
add
and
inc
gs
jb
arpl
fs
jae
add
testb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
js
je
jb
arpl
jae
stc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
cmpsb
add
jae
jb
popa
je
add
inc
add
je
jns
je
insl
inc
imul
jns
add
add
arpl
jo
jb
je
add
add
insb
insb
dec
popa
insl
gs
imul
add
popa
outsb
addr16
imul
jne
push
imul
inc
insb
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
insl
inc
outsl
outsb
imul
insb
outsl
addr16
add
inc
outsl
insl
jo
jb
inc
imul
jne
inc
jb
popa
je
inc
jbe
outsb
je
add
test
inc
jb
popa
je
dec
outsl
inc
outsl
insl
jo
gs
outsl
outsb
push
outsl
jb
add
xchg
inc
jb
popa
je
dec
outsl
bound
push
arpl
add
popa
je
dec
jne
gs
add
xchg
add
gs
je
push
jb
arpl
jae
add
pushf
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
mov
popa
je
push
push
add
mov
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
fiaddl
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
add
jne
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
add
je
insb
inc
jo
inc
js
je
add
add
insb
gs
imul
jae
popa
je
push
imul
imul
insb
gs
jne
jo
je
je
jb
bound
add
sbb
fs
imul
gs
add
xor
inc
imul
inc
imul
imul
jne
arpl
js
add
inc
outsl
insb
fs
je
imul
inc
jb
gs
imul
push
add
je
imul
jo
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
jle
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
add
je
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
inc
add
addl
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
push
add
addl
gs
outsl
outsb
jae
insb
gs
push
add
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
je
outsl
arpl
gs
outsb
outsw
push
add
lar
je
jne
bound
inc
outsl
jb
popa
je
add
adc
inc
gs
jne
bound
dec
inc
outsl
outsb
jae
insb
gs
outsl
jne
gs
jne
je
outsb
jae
add
push
jb
outsl
jb
je
inc
insb
popa
jae
add
push
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
je
jb
arpl
jae
data16
dec
popa
jae
add
sub
inc
gs
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
sub
inc
gs
jb
arpl
jae
outsl
jb
imul
imul
inc
gs
jb
imul
je
outsl
outsb
push
add
cmp
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
inc
gs
jns
je
insl
push
imul
imul
jns
add
pop
add
je
gs
jo
imul
add
arpl
inc
gs
push
push
gs
arpl
inc
outsb
je
jns
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outsb
addr16
add
jne
inc
gs
gs
imul
addb
gs
jb
je
push
popa
je
push
insb
outsl
bound
inc
insb
insb
outsl
arpl
mov
inc
insb
outsl
bound
inc
imul
push
add
popa
insb
push
imul
dec
gs
jo
xor
je
imul
dec
gs
jo
insb
insb
outsl
arpl
mov
jo
jb
add
movsb
add
popa
jo
gs
insb
insb
outsl
arpl
scas
add
imul
bound
mov
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
popa
fs
gs
fs
je
add
leave
add
inc
popa
fs
je
imul
add
add
inc
popa
fs
je
imul
add
add
push
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
fildl
dec
jae
popa
insb
imul
addr16
add
push
popa
insb
imul
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
icebp
add
fs
imul
add
hlt
add
fs
imul
add
std
add
popa
insb
inc
jb
gs
add
popa
insb
dec
outsl
arpl
add
imul
add
adc
dec
outsl
jbe
inc
imul
outsl
jbe
inc
imul
add
outsb
inc
imul
outsb
addr16
add
xor
dec
jo
outsb
push
jb
arpl
jae
inc
add
outsl
arpl
jae
xor
jb
je
add
push
gs
fs
outsl
outsb
jae
insb
gs
outsb
jo
je
add
push
gs
fs
outsl
outsb
jae
insb
gs
add
imul
inc
imul
add
insb
gs
jae
dec
jne
gs
add
insb
popa
arpl
imul
push
gs
popa
arpl
imul
push
gs
gs
inc
gs
arpl
popa
imul
add
gs
jb
je
push
popa
je
push
gs
jb
push
inc
add
jb
push
push
add
outsl
insl
insl
inc
jb
popa
imul
sahf
add
je
outsl
insl
insl
dec
popa
jae
add
inc
outsl
outsb
jae
insb
gs
arpl
gs
arpl
outsb
inc
jne
data16
add
inc
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
rolb
gs
outsl
outsb
jae
insb
gs
gs
inc
je
jb
bound
gs
add
je
outsl
outsb
jae
insb
gs
imul
outsw
add
leave
add
je
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
je
jbe
outsb
je
add
add
je
imul
outsl
dec
inc
dec
add
in
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
jae
data16
dec
popa
jae
add
stc
add
je
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
cld
add
je
je
dec
popa
outsb
fs
add
sbb
gs
outsl
insb
jne
gs
popa
bound
inc
add
add
imul
push
arpl
fs
popa
imul
insl
imul
outsl
arpl
jae
add
add
outsb
insb
outsl
arpl
imul
jo
popa
je
push
gs
jne
arpl
add
push
gs
data16
gs
imul
push
add
push
add
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
push
popa
imul
je
jo
gs
bound
arpl
js
add
popa
imul
insb
gs
bound
arpl
add
imul
outsl
dec
jne
je
inc
jns
add
je
inc
imul
jb
xchg
add
jb
je
push
jb
imul
je
outsl
outsb
inc
add
fwait
add
jb
je
push
popa
jo
insl
popa
jb
add
jb
je
add
jb
insl
jo
add
lods
add
jae
jb
insl
jo
inc
add
jb
insl
jo
push
add
jb
jo
inc
add
mov
insb
jae
jb
outsb
add
push
dec
inc
dec
xor
cs
insb
add
add
fs
arpl
inc
add
add
imul
outsb
outsl
ja
or
inc
jo
outsb
fs
outsb
jne
add
add
jb
outsb
addr16
arpl
imul
ja
add
push
add
imul
add
adc
inc
jb
outsb
addr16
imul
push
outsl
jo
add
popa
arpl
je
jns
je
insl
dec
gs
popa
addr16
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
add
popa
outsb
addr16
insb
imul
inc
push
add
add
popa
jb
outsl
ja
jb
add
add
popa
jb
gs
inc
js
add
add
popa
jb
jb
jbe
add
jb
outsl
dec
gs
inc
jne
push
add
inc
add
imul
ja
jb
insl
push
outsl
imul
inc
insb
imul
arpl
outsb
add
inc
add
imul
jb
add
inc
outsl
jo
dec
arpl
add
push
add
gs
je
inc
gs
je
jo
add
pop
add
gs
je
inc
imul
imul
jb
insl
inc
add
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
fs
insl
jo
je
imul
insb
gs
jae
inc
fs
outsl
outsb
outsb
arpl
jae
add
test
inc
fs
jne
jb
inc
outsl
outsb
jbe
outsb
outsw
add
mov
inc
fs
gs
jae
jb
popa
outsb
fs
add
fwait
add
je
outsl
jns
popa
jb
je
add
je
outsl
jns
outsb
jne
test
jo
je
push
popa
addr16
add
roll
jb
ja
outsb
jne
popa
jb
movl
push
gs
inc
js
add
add
fs
gs
imul
jae
fadds
inc
outsb
jne
inc
push
imul
add
add
jne
push
imul
popa
je
outsl
outsb
jae
add
add
imul
jae
js
stc
add
je
arpl
gs
imul
add
je
insb
popa
jae
dec
popa
insl
gs
add
inc
gs
insb
imul
push
imul
sub
inc
gs
outsb
jo
je
gs
je
jo
xor
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
gs
outsb
jne
je
je
add
dec
add
je
gs
popa
addr16
imul
inc
gs
outsl
outsb
imul
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
ja
inc
gs
jo
popa
je
push
outsb
add
jge
inc
gs
imul
add
je
imul
outsb
addr16
add
test
inc
gs
imul
fs
gs
imul
mov
inc
gs
imul
arpl
add
je
imul
jb
add
inc
gs
dec
inc
inc
add
test
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
jo
popa
inc
add
scas
add
inc
push
jo
popa
dec
jne
gs
arpl
mov
jne
addr16
jo
push
imul
add
push
arpl
jo
jns
int3
add
pop
outsl
outsl
insl
gs
into
add
fs
arpl
insb
gs
je
jb
inc
add
add
fs
arpl
insb
gs
je
jb
push
add
add
fs
insl
popa
addr16
add
faddl
dec
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
push
add
add
fs
outsb
jne
add
add
jo
imul
gs
js
add
testl
popa
addr16
gs
add
dec
outsl
imul
push
add
add
addr16
popa
imul
je
jo
gs
bound
arpl
js
or
dec
gs
dec
gs
arpl
add
sbb
push
popa
imul
je
jo
add
add
dec
outsb
push
arpl
sub
push
gs
insb
inc
gs
imul
popa
jae
add
dec
add
imul
outsb
outsl
ja
gs
popa
addr16
add
dec
add
insl
outsl
jbe
push
jb
jo
add
push
gs
outsl
jbe
push
jb
jo
add
push
gs
jns
gs
popa
add
push
add
jb
outsb
push
outsl
inc
insb
imul
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
push
outsb
fs
gs
popa
addr16
add
add
outsb
fs
outsl
je
data16
gs
popa
addr16
add
imul
popa
jb
je
outsl
jae
jp
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
popa
jae
inc
jb
outsl
jb
js
add
dec
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
jb
arpl
jae
imul
popa
je
outsl
outsb
add
push
jb
jo
add
xchg
add
je
arpl
insb
insb
push
popa
outsb
add
cwtl
add
je
jns
inc
outsl
insb
outsl
jb
add
cmpsb
add
je
imul
popa
arpl
outsb
je
add
push
imul
jae
add
push
imul
outsb
add
mov
push
push
jb
outsl
jb
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
outsb
imul
add
fs
je
push
imul
incl
push
imul
add
add
push
imul
add
or
ja
jo
imul
push
inc
push
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
cmp
push
push
js
arpl
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
add
sbb
push
push
js
arpl
gs
add
add
gs
insb
inc
js
arpl
gs
js
add
add
gs
insb
inc
js
arpl
gs
js
add
push
push
js
arpl
gs
add
add
gs
insb
inc
bound
je
add
add
gs
insb
inc
bound
je
add
add
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
push
add
lock
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
inc
add
out
push
dec
dec
outsl
popa
fs
outsb
push
jb
arpl
add
add
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
add
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
gs
popa
insb
insb
outsl
arpl
lds
push
dec
inc
gs
outsb
jae
popa
outsb
arpl
js
insb
outsl
jb
jb
ret
add
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
rolb
dec
inc
gs
outsl
insb
fs
popa
je
push
add
mov
gs
outsl
insb
fs
outsl
arpl
imul
dec
inc
gs
imul
add
mov
gs
imul
mov
push
dec
inc
gs
imul
push
jo
arpl
js
add
je
imul
push
jo
arpl
add
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
jb
gs
popa
insl
gs
popa
jo
imul
add
inc
imul
je
outsl
outsb
push
add
test
push
dec
inc
imul
je
outsl
outsb
inc
add
cmpsl
add
inc
imul
je
outsl
outsb
add
insl
jo
jns
arpl
insb
gs
imul
push
dec
inc
insl
jo
jns
arpl
insb
gs
imul
push
dec
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
add
mov
push
dec
inc
jb
popa
je
inc
imul
jns
js
add
jl
push
dec
inc
push
dec
outsl
je
data16
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
jbe
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
jne
push
dec
inc
imul
jb
outsb
je
add
push
dec
inc
fs
outsl
push
arpl
je
outsl
arpl
sub
fs
js
arpl
popa
bound
add
add
je
popa
arpl
outsl
outsb
inc
js
sub
inc
js
jb
arpl
outsl
outsb
inc
add
daa
add
je
popa
arpl
jae
arpl
je
fs
arpl
push
add
add
je
popa
arpl
jae
arpl
je
fs
arpl
inc
js
add
and
jb
arpl
jae
arpl
je
fs
arpl
inc
js
add
and
inc
js
jb
arpl
jae
arpl
je
fs
arpl
inc
add
and
inc
jb
addr16
jne
jb
push
outsl
imul
inc
jb
addr16
jne
jb
inc
imul
inc
jb
addr16
jne
jb
inc
imul
popa
addr16
imul
sbb
inc
jb
addr16
arpl
jo
inc
imul
outsl
inc
outsb
jbe
jb
outsb
insl
outsb
je
jne
jae
push
add
add
arpl
jae
popa
jo
jae
add
inc
dec
dec
xor
cs
insb
add
inc
push
add
jb
push
add
jb
insl
jo
dec
push
add
add
jb
insl
jo
push
add
xor
push
inc
push
aaa
add
jb
push
je
dec
inc
add
add
jb
push
je
dec
push
add
push
je
push
je
inc
add
push
je
push
je
dec
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
push
imul
insb
insb
outsl
arpl
add
add
jb
gs
xor
add
add
push
add
push
add
add
pop
add
outsl
add
je
jb
outsl
add
add
je
xor
xor
xor
add
add
jae
add
jbe
imul
jae
pop
add
add
insl
add
outsb
add
add
jbe
add
add
pop
popa
fs
popa
arpl
fs
insb
add
add
inc
jb
popa
je
inc
imul
add
outsb
add
insb
add
add
add
add
add
add
add
add
add
xor
add
pusha
add
adcb
add
js
add
nop
add
addb
add
add
add
test
add
rolb
addb
add
fadds
add
lock
addb
add
add
add
add
addb
add
add
add
and
add
add
add
add
add
cmp
add
add
add
pop
or
add
add
pop
or
add
add
pop
or
add
add
pop
or
add
add
add
or
add
add
add
or
add
add
add
or
add
loope
add
add
add
loop
add
add
push
call
add
cmp
add
test
add
loopne
add
add
add
hlt
add
addb
mov
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
or
cmp
xor
adc
mov
add
test
wrmsr
mov
lock
mov
lock
or
or
test
add
add
mov
add
or
xor
or
add
add
add
rolb
xor
add
test
ja
add
or
test
divl
js
dec
test
add
add
add
mov
inc
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
add
add
add
incl
repz
jmp
add
jmp
out
je
incb
jno
std
add
jecxz
add
std
add
std
add
add
std
add
std
add
std
add
add
loope
add
add
std
add
add
std
add
std
add
add
cld
add
std
add
add
std
add
std
add
add
fcmovnu
add
add
std
add
sti
add
fcmovu
add
stc
add
clc
add
stc
add
clc
add
fcomp
add
stc
add
testl
inc
fcomi
add
cmc
add
repz
aam
add
rcl
add
rcl
add
icebp
add
rcl
add
add
into
into
add
out
add
in
add
add
int3
int3
add
lret
ds
call
add
mov
mov
add
faddl
ret
add
ret
cmp
flds
mov
rcr
cmp
fildl
cmp
iret
add
mov
add
lods
lds
sub
leave
add
movb
mov
ret
add
ret
add
xchg
mov
add
mov
add
mov
add
mov
sub
add
xorl
sbb
jge
add
xchg
pop
push
test
add
movsl
add
jae
add
add
mov
add
add
jae
data16
jb
and
add
lcallw
add
imul
int
ds
pop
cmp
add
add
add
dec
cltd
add
pop
add
push
test
add
rcll
add
add
push
outsl
add
push
jle
add
add
push
jl
and
add
dec
ja
mov
dec
das
add
inc
and
into
inc
adc
iret
inc
adc
xor
xchg
add
inc
adc
aas
adc
enter
leave
aas
adc
lret
add
adc
aas
adc
ret
adc
ret
add
cmp
add
cmp
adc
mov
xor
add
sub
nop
sub
mov
or
lea
or
xchg
sub
mov
or
incl
lcall
pop
pop
pop
pop
pop
pusha
insb
jae
jg
pop
pushl
xchg
fs
ds
push
sbbb
data16
pop
xor
push
jge
outsb
popf
add
lahf
lahf
dec
inc
and
addl
fwait
add
lahf
pop
and
push
addl
fwait
add
add
sbb
arpl
push
lahf
lahf
lahf
lahf
lahf
daa
cmp
add
lahf
lahf
push
or
lahf
lahf
sbbl
lcall
lahf
lahf
lahf
pop
xor
je
mov
lahf
or
jo
mov
lahf
lahf
lahf
lahf
lahf
or
insl
arpl
lahf
lahf
dec
push
lahf
lahf
pop
pop
bound
pushf
test
lea
xchg
pop
arpl
cmp
mov
xchg
xchg
xchg
pop
arpl
xor
nop
test
arpl
adc
ss
cmp
jns
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
cmp
adc
adc
adc
adc
xor
dec
les
adc
adc
adc
add
dec
inc
inc
incl
or
dec
inc
inc
push
add
or
sbb
incl
mov
mov
xor
adc
adc
cmp
mov
cmp
mov
push
cmp
mov
push
ud0
mov
mov
mov
rolb
adc
adc
mov
mov
add
cmp
mov
decl
push
cmp
mov
decl
decl
cmp
mov
icebp
adc
add
cmp
mov
decl
pswapd
mov
mov
lock
push
or
or
ud0
cmp
or
inc
add
add
mov
or
or
int3
or
mov
mov
rol
ror
xor
add
xor
xor
inc
int3
add
inc
orb
int3
int3
int3
dec
dec
les
int3
lock
pop
emms
dec
int3
int3
dec
dec
add
rolb
jg
jo
testl
int3
lock
add
pop
jg
int3
int3
dec
dec
rolb
movl
rolb
int3
int3
dec
dec
add
int3
add
push
cld
int3
ja
int3
int3
dec
inc
rolb
jg
jl
ja
int3
int3
dec
dec
les
ja
cld
int3
ja
int3
int3
dec
dec
int3
int3
jo
jg
int3
ja
int3
int3
inc
dec
int3
int3
ja
idiv
int3
ja
int3
les
add
inc
inc
inc
ja
ja
ja
ja
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
andl
add
and
add
add
ss
add
stos
mov
add
ja
push
jbe
add
jne
add
adc
rdmsr
pusha
add
ds
incl
add
add
inc
add
std
add
pop
add
mov
cmp
mov
add
and
repz
add
pop
mov
pop
mov
jmp
add
dec
roll
ja
clc
add
fs
jbe
add
mov
pusha
movsb
leave
add
add
and
xchg
mov
and
add
ss
add
add
add
lea
add
in
add
lock
lock
enter
bound
add
pop
sub
fcom
add
lea
div
testb
dec
outsl
add
mov
mov
out
add
mov
enter
sahf
add
lcall
pop
ret
xchg
sub
or
add
cld
add
pop
addb
pop
add
mov
add
roll
dec
cmp
adc
xor
ret
push
nop
add
pop
cmp
and
mov
add
add
xlat
lock
out
out
add
outsb
dec
add
add
out
mov
aas
adc
jae
and
add
sub
add
sub
add
mov
add
faddl
sbb
inc
add
into
into
add
pop
add
add
imul
mov
cwtd
add
ja
add
or
inc
shr
add
xchg
add
fstp
add
testl
sub
aad
mov
popa
mov
and
add
mov
add
cwtl
movb
jae
add
call
add
mov
or
add
push
jg
sub
cmpsb
add
and
add
aas
mov
dec
xchg
mov
add
flds
mov
cmp
add
xorl
lods
cmp
add
fildl
or
mov
add
add
add
or
or
or
or
or
or
or
or
cmp
pop
pop
or
or
or
add
add
add
add
add
add
add
jnp
dec
inc
pop
mov
lea
or
arpl
sbb
sbb
sbb
mov
pop
mov
xor
or
gs
adc
adc
adc
adc
adc
inc
push
inc
cmp
mov
pop
push
push
push
push
push
outsb
and
js
adc
adc
adc
adc
adc
xchg
mov
pop
jns
xchg
dec
sub
push
push
xchg
or
or
js
adc
adc
adc
adc
adc
pop
dec
dec
jge
pop
xchg
inc
inc
pushf
push
pop
pop
push
andb
or
js
sbb
sbb
sbb
sbb
sbb
jno
jno
sbb
inc
inc
xor
push
push
push
inc
pusha
or
js
adc
adc
adc
adc
adc
jno
cmp
sub
push
push
push
pop
adc
adc
adc
adc
adc
adc
adc
adc
dec
jge
jns
cmp
mov
or
adc
adc
adc
adc
adc
jp
adc
adc
dec
bound
test
add
data16
or
js
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
inc
imul
data16
fs
adc
adc
adc
adc
adc
inc
inc
inc
inc
jno
inc
inc
sub
mov
js
adc
adc
adc
adc
adc
inc
inc
inc
inc
adc
add
cmp
data16
fs
adc
adc
adc
adc
adc
inc
inc
inc
inc
inc
and
nop
sbb
jns
add
data16
fs
sbb
sbb
sbb
sbb
sbb
dec
dec
dec
dec
inc
jae
inc
add
pop
mov
fs
adc
adc
adc
adc
adc
dec
dec
dec
dec
dec
push
inc
inc
xchg
cmp
pop
pop
jns
data16
fs
adc
adc
adc
adc
adc
push
popf
inc
inc
xchg
dec
cmp
sbb
sbb
daa
fs
adc
adc
adc
adc
adc
imul
push
orb
sbb
sbb
daa
sub
push
dec
js
js
js
js
js
inc
dec
dec
dec
dec
dec
inc
inc
inc
inc
adc
cmp
jge
push
daa
sub
fs
or
adc
inc
inc
inc
inc
adc
adc
adc
jge
xor
sub
sub
fs
sub
jp
jp
jp
jp
lahf
or
or
or
or
add
add
jle
add
arpl
lea
daa
sub
dec
sub
fs
add
and
and
pop
add
or
arpl
or
sub
dec
sub
sub
sub
jle
outsl
ds
sbb
or
aaa
or
arpl
or
sub
dec
sub
sub
sub
jle
insb
outsl
ds
or
or
and
or
arpl
lea
daa
sub
dec
sub
sub
sub
sub
insb
outsl
orl
add
arpl
or
sub
dec
sub
sub
sub
or
jle
insb
outsl
andl
or
arpl
lea
daa
sub
dec
sub
sub
sub
outsl
outsl
sub
insb
andl
or
arpl
push
or
sub
dec
sub
sub
sub
ds
jle
dec
fs
pop
add
or
sbb
daa
sub
dec
sub
sub
sub
jl
or
jle
fs
and
or
ja
daa
sub
add
sub
sub
pop
and
aaa
jl
or
pusha
pusha
pop
and
xchg
xor
xchg
daa
daa
daa
daa
pop
pop
and
aaa
jl
outsl
outsl
ds
aaa
add
adc
mov
add
add
add
add
add
add
add
adc
add
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
add
cwtl
add
add
inc
add
insl
add
add
je
jae
add
push
add
outsl
add
add
jae
add
add
outsb
add
add
outsb
add
insb
add
add
add
jns
and
push
add
je
popa
add
add
outsl
add
insl
add
outsb
add
add
sub
and
add
and
outsb
add
je
and
jae
je
popa
add
je
and
add
jb
add
je
insb
add
and
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
imul
add
and
push
add
data16
add
jb
add
add
insl
add
dec
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
je
popa
add
add
outsl
add
insl
add
outsb
add
add
and
inc
add
add
outsb
add
jae
je
jb
popa
add
add
and
push
add
outsl
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
imul
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
push
add
je
imul
and
inc
add
imul
add
add
push
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
sub
add
add
popa
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
jbe
popa
add
add
jne
imul
add
push
and
add
outsl
add
add
je
dec
add
insl
add
add
add
jo
adc
add
jae
insb
add
jb
and
push
add
data16
add
jb
add
add
insl
add
dec
add
add
add
add
add
add
add
imul
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
sbb
add
add
xor
sub
and
xor
sub
and
xor
add
add
and
add
and
add
add
add
imul
inc
add
imul
add
inc
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
and
jae
insl
bound
or
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
jb
imul
xor
xor
xor
or
jo
cmp
xor
and
insl
gs
jae
gs
je
insl
popa
fs
imul
das
ds
gs
jb
jo
imul
popa
insb
and
insl
insl
popa
outsb
fs
inc
fs
imul
insb
gs
fs
jb
jo
imul
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
or
and
and
and
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
or
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
cmp
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
add
add
add
add
mov
add
pop
xor
xor
xor
xor
data16
out
divb
adc
and
int3
cmp
cmp
pop
cmp
cmp
test
cmp
int3
cmp
ljmp
ds
ds
sub
xor
jae
mov
xchg
ds
fnstsw
in
idivl
add
push
aas
xor
cmp
aas
cmpl
lods
aas
mov
aas
sarl
fdivrs
in
aas
clc
aas
aas
add
add
add
lods
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
