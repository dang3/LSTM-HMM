push
incl
add
add
add
inc
add
add
add
add
and
adc
add
inc
aad
lods
imul
mov
mov
aad
push
pop
rolb
push
cltd
xor
cld
lahf
sbb
lret
fs
in
mov
mov
mov
add
fisttps
mov
cs
mov
faddl
pop
out
movaps
mov
ret
jae
pop
inc
testb
mov
add
add
into
insl
cwtl
add
jmp
rcl
mov
jmp
mov
push
add
test
sbb
clc
xchg
pop
adc
push
xor
lret
jo
add
add
shl
dec
cwtl
popa
xchg
enter
xchg
leave
sub
jle
lret
add
add
ljmp
cltd
sub
adcb
cmp
incl
sub
add
mov
outsb
int3
lcall
sub
mov
add
xlat
call
sbb
pop
out
ret
cmc
sti
inc
movsb
mov
jno
pushf
fiaddl
incl
jmp
jne
inc
ret
add
pushl
push
mov
dec
mov
xor
jae
mov
mov
ret
add
mov
decl
and
add
call
sub
insl
adc
in
mov
lahf
arpl
push
pushf
lock
cltd
and
test
loopne
testl
sub
nop
mov
call
dec
add
add
cltd
jb
pusha
add
add
push
cmp
call
mov
subb
xor
add
add
dec
stc
cmp
xlat
jmp
push
mov
add
imul
or
and
sbb
incl
std
ret
xor
add
mov
and
jge
mov
incl
add
cmpsb
scas
mov
out
sub
dec
and
push
inc
sub
and
cmp
add
inc
int
push
data16
add
mov
imul
test
stc
add
inc
mov
push
sub
sbb
jmp
out
add
mov
add
add
imul
out
je
add
pop
mull
out
lret
addr16
stc
cmp
add
cltd
xor
lret
mov
inc
or
add
ljmp
adc
inc
outsb
aas
movsl
inc
and
dec
cmp
roll
add
add
xchg
cwtl
sahf
add
add
data16
mov
scas
popf
or
sbb
pop
add
add
out
and
aas
fisubl
adc
in
popa
adc
icebp
enter
mov
xor
add
push
jae
orb
popa
push
xchg
mov
out
jmp
and
mov
jne
sti
add
jg
add
andl
add
incl
inc
add
inc
incl
gs
add
add
add
add
add
add
dec
add
jle
jmp
cmp
add
add
mov
incl
add
test
mov
dec
fsubr
add
add
call
stos
test
add
cltd
incl
shr
insl
roll
adc
fdiv
arpl
add
add
jmp
mov
adc
mov
out
mov
and
lahf
mov
sub
jns
aas
jge
pop
mov
repz
sub
add
mov
incl
sbb
jne
mov
add
add
jns
jp
fldl
and
and
adc
sub
mov
mov
mov
daa
jmp
add
add
ja
mov
inc
sbb
add
dec
xlat
and
dec
scas
test
in
leave
mov
pop
jns
adc
fistpl
out
incl
add
cmp
pop
pop
jae
add
add
and
mov
add
push
cmp
out
xchg
mov
sahf
xor
sub
and
mov
and
xchg
incl
xorl
stos
and
add
movsl
inc
jns
adcl
xchg
mov
add
add
add
out
pop
in
add
push
adc
add
cmp
add
push
js
and
xor
sahf
call
in
std
out
add
mov
jae
adc
mov
fs
and
add
int
add
jl
sbb
push
mov
aam
sahf
and
add
and
sbb
mov
das
add
push
test
jo
dec
decl
lcall
xorl
hlt
decb
loop
lcall
xor
test
add
incl
jmp
xchg
and
inc
test
adc
push
insb
test
mov
mov
mov
xor
xchg
adc
add
testb
inc
and
sub
inc
dec
add
adc
add
add
add
js
add
add
adcb
mov
add
sub
lods
movsl
roll
add
clc
sub
push
mov
add
push
jae
neg
mov
rcrb
adc
stos
out
aas
sbb
add
add
dec
ljmp
out
push
sti
add
in
add
mov
int
lcall
add
cmp
mov
test
cld
mov
add
add
mov
mov
mov
mov
fstpt
xchg
jo
add
repnz
mov
and
fldenv
inc
and
add
and
dec
mov
jnp
add
push
ret
mov
call
mov
add
cmc
add
jmp
mov
fsub
and
sbb
add
fdivrs
add
out
or
xchg
leave
sbb
or
add
sbb
xchg
pop
mov
xor
incl
out
rorb
mov
incl
mov
xor
mov
jmp
push
aas
add
test
in
fisubl
cld
pop
fildll
jp
push
add
mov
mov
fidivrl
jl
add
cltd
sub
loope
shrl
lret
jmp
pop
jne
ret
vsqrtps
popa
mov
jmp
sbb
aad
mov
add
mov
cmc
inc
sar
jmp
add
fwait
incl
push
cmp
shrb
push
inc
fisttps
add
out
cmpsl
cmp
lcall
push
sbb
push
add
ljmp
faddl
add
and
test
ljmp
dec
in
mov
imulb
push
jno
dec
cltd
jns
fs
add
pop
pop
xchg
jge
jmp
push
scas
pop
scas
lock
decl
out
mov
jl
lock
jl
hlt
clc
jmp
adc
inc
mov
pop
fsts
add
pushl
add
rclb
test
add
inc
in
loopne
cmp
mov
sar
mov
sub
sbb
sub
addr16
mov
add
add
imul
mov
fs
add
push
sbb
inc
add
push
leave
arpl
jb
gs
add
jbe
and
fstpl
addb
mov
add
xchg
iret
push
sub
out
fucom
sahf
fimull
jo
add
add
out
sti
add
jne
mov
add
addr16
addr16
push
adc
add
ffreep
call
cld
daa
xor
add
addr16
xor
mov
add
lret
sbb
xchg
add
add
int3
add
add
add
rcll
inc
fwait
sub
inc
pop
xchg
incl
ret
add
pop
lret
mov
lret
add
and
dec
xlat
xlat
and
add
pop
sti
int
add
mov
xchg
xlat
addl
ss
add
jle
jns
add
outsb
imul
cmp
jb
xor
add
and
mov
sbbl
cld
add
and
add
mov
shrb
pop
mov
mov
xchg
xchg
in
cli
add
decl
adc
mov
inc
scas
sar
mov
shlb
dec
add
add
fcmovnbe
call
add
cltd
dec
fstpl
and
xchg
mov
fcmovnb
and
je
das
jmp
and
jg
add
fstl
dec
in
addr16
add
scas
loop
mov
and
add
add
cmp
pop
inc
add
or
adcb
add
xchg
add
dec
xor
dec
mov
adc
jg
and
xchg
mull
xchg
std
and
mov
mov
popa
nop
jae
xchg
add
add
inc
add
inc
outsl
inc
add
add
add
xor
dec
add
add
int3
add
add
inc
add
add
add
addb
incl
inc
test
roll
orl
push
mov
fwait
add
fcomps
incl
adc
xchg
shll
xchg
cmp
inc
sub
add
jl
incl
mov
cmp
inc
inc
pop
call
mov
clc
pop
loop
sarb
add
subb
ja
or
mov
sub
push
jecxz
pusha
ljmp
add
mov
insl
adc
sbb
or
aam
add
add
loop
inc
cmpsl
add
add
add
popf
cmp
and
add
outsb
add
mov
xor
imul
inc
and
popa
decl
xchg
roll
jb
adc
repz
mov
push
adc
add
lcall
pusha
mov
out
aaa
cmp
loope
cli
dec
mov
add
shll
jno
incl
jmp
std
mov
es
add
or
add
mov
out
push
shll
xchg
in
pop
incl
add
incl
xor
xchg
lods
and
sub
add
xchg
pop
lcall
push
or
add
mov
jae
ljmp
mov
and
mov
add
add
adc
pop
popf
sbb
add
dec
mov
push
pop
call
sub
icebp
add
das
lret
outsb
fwait
jbe
je
xor
add
add
add
push
dec
add
inc
lret
jmp
lcall
add
xchg
and
mov
add
pop
mov
and
jbe
push
std
add
pop
lock
pop
pop
mov
and
cmpsb
mull
jo
mov
add
cmp
loopne
repz
sub
fcomi
push
ljmp
cmc
fwait
jbe
sub
xchg
xor
or
and
call
add
add
test
add
add
call
add
add
add
mov
adc
and
ljmp
add
inc
add
add
jno
add
jnp
mov
add
mov
pop
incl
repnz
jno
cmc
call
cmp
add
push
loope
adc
add
and
sbb
jo
jmp
push
fidivrl
add
add
test
mov
into
or
repz
mov
add
add
std
or
mov
add
add
mov
hlt
add
sub
push
adc
in
lea
cmpsb
cs
outsb
addr16
adc
adc
and
and
incl
and
ret
add
add
cmp
outsb
out
xchg
and
and
push
pop
mov
add
incl
ds
sub
xchg
ret
in
jmp
add
aaa
sub
add
add
es
adc
mov
pop
jae
decl
ljmp
gs
add
and
and
out
and
and
std
pop
push
cmpsl
sub
sub
sahf
call
loope
lahf
sub
add
int
add
xor
cmp
out
sub
add
and
xor
mov
shl
adc
add
add
jge
adc
add
ret
sub
ja
int3
movsl
mov
pop
cmp
lret
mov
aas
or
adc
push
mov
add
sub
adc
add
imul
testl
add
int3
lods
decl
sbb
xchg
decl
sar
incl
daa
pop
repnz
inc
jecxz
incl
mov
mov
out
add
cmp
add
cmpsl
mov
inc
dec
mov
jmp
mov
add
push
xlat
lret
add
add
mov
inc
mov
mov
mov
cmp
xor
mov
ljmp
add
andb
mov
ja
test
and
std
sub
das
add
xor
flds
call
adc
enter
dec
mov
fimull
cmp
add
into
add
es
pop
add
call
movsl
add
and
pop
add
xor
sbb
out
andb
and
add
jo
cmp
add
add
push
cmp
outsb
mov
rclb
sub
dec
cmp
add
mov
sti
les
mov
insl
add
fwait
lret
add
incl
add
imul
pop
cwtl
mov
pop
ljmp
sti
in
test
add
mov
jecxz
dec
repnz
js
jp
popf
sub
fs
inc
mov
add
add
ds
cmp
or
shll
jb
loop
dec
add
add
add
and
add
cmp
je
add
add
xchg
adc
inc
xchg
add
int3
add
and
pop
sub
inc
shrl
lock
sbb
incl
push
in
nop
lret
push
incl
incl
lahf
inc
add
mov
out
mov
add
orb
out
lea
inc
sub
in
mov
mov
jl
mov
sub
push
sbb
sub
mov
sahf
dec
push
dec
add
out
loope
sub
sub
dec
aaa
pop
xchg
add
lcall
add
out
lcall
mull
add
cwtl
dec
add
lods
dec
mov
mov
add
addr16
cwtl
subb
pop
cmpsb
push
push
pushl
mov
sub
lods
out
mov
add
divb
mov
cs
add
mov
decl
adc
add
adc
jno
out
mov
push
jae,pn
add
decl
mov
add
add
lcall
cltd
and
add
push
mov
rcll
cmpsl
xor
adc
and
jmp
add
jmp
ret
in
fwait
arpl
mov
call
jb
je
mov
int
add
lods
pop
addr16
push
pop
and
repz
pop
add
outsl
insl
sub
add
scas
add
jmp
mov
out
add
pop
cmpl
fidivs
xchg
in
cmp
pop
jne
add
orb
pop
add
add
inc
aad
pop
loopne
add
adc
into
lahf
das
add
js
incl
imul
hlt
mov
repz
outsb
cmp
xchg
mov
jle
jg
push
inc
and
add
xchg
int3
ret
jnp
mov
mov
sbb
in
popf
negb
sahf
in
xor
mov
cli
jne
add
and
clc
cwtl
in
push
add
sub
mov
js
out
add
add
lret
mov
jae
pop
into
add
shll
add
pop
sbb
add
add
add
and
sub
mov
out
movsb
out
add
rorl
inc
out
push
jno
loop
loop
push
in
call
add
icebp
aaa
stc
lret
adc
and
aaa
mov
add
outsl
aaa
add
fdivr
out
inc
divl
push
in
push
and
mov
jge
mov
sub
add
add
lock
add
incl
add
dec
inc
add
add
push
cmp
add
add
jb
sahf
leave
inc
out
sub
and
pop
mov
push
stos
push
hlt
mov
add
imul
and
and
cmp
sbb
fimull
jo
into
add
pop
mov
call
xchg
pushl
add
xchg
add
pushl
js
jg
add
add
dec
movsl
lret
xor
fcomip
lods
xor
mov
push
push
add
sub
add
pusha
mov
add
cmc
enter
add
add
fisubrs
and
jbe
loop
adc
dec
and
add
jmp
xor
xor
sub
dec
mov
movsl
je
mov
jmp
mov
lret
adc
cmp
lcall
pop
stos
or
and
xchg
xchg
mov
and
or
outsb
add
add
enter
add
incl
xchg
sub
mov
pusha
pushf
imul
pop
pop
movsb
mov
mov
mov
and
sarl
add
push
bound
sbb
pop
jp
fsubr
cmpsl
loop
add
stc
mov
mov
lods
daa
xchg
add
adcb
lock
xchg
scas
mov
add
and
fildll
int3
sbb
jmp
sbb
sahf
aad
notl
std
leave
test
lret
cmc
add
sbb
inc
push
cwtl
mov
add
out
fsubs
add
adc
add
add
jl
xchg
mov
jne
clc
add
mov
dec
sub
add
push
fidivs
rolb
add
push
dec
repnz
mov
sub
andb
adc
add
jns
xor
xchg
add
incl
adc
add
inc
add
add
add
cmc
pop
shl
or
add
mov
add
in
jb
or
lret
jmp
push
adc
rclb
int
pop
in
adc
add
cmp
lock
add
add
and
add
xchg
mov
lahf
jbe
addl
add
mov
cmpsl
mov
addl
movb
lcall
mov
gs
incl
add
and
add
pushl
lods
out
mov
outsl
fcmovnu
mov
incl
lret
xor
aam
sub
inc
and
or
add
add
scas
mov
and
in
fdivrp
jne
rcl
incl
inc
scas
idiv
lcall
inc
dec
push
cmp
in
arpl
pop
mov
mov
add
int3
mov
add
jecxz
add
and
inc
add
adc
add
lahf
test
mov
ja
jmp
and
dec
movsb
adc
data16
push
pop
mov
add
movsl
xchg
out
add
cmpsl
jne
push
cmp
out
add
push
repnz
cwtl
and
ljmp
add
sbb
mov
add
cli
and
mov
cli
add
std
dec
ja
xchg
add
sub
xor
cwtl
pusha
call
push
sub
cs
mov
adc
add
ret
int3
pop
add
sub
or
mov
mov
mov
incl
pop
sbb
and
xor
inc
lret
adc
add
xchg
xchg
cltd
xchg
sub
add
jle
mov
mov
or
add
mov
sbb
add
add
jne
pop
pop
fidivl
xor
into
adc
stos
mulb
add
cli
push
pop
pop
jae
loope
inc
adc
and
inc
xchg
xor
enter
xor
sub
insl
pop
mov
cmpsl
dec
pop
xor
int3
pop
add
adc
and
add
jmp
xchg
in
jmp
lret
rclb
lock
add
add
add
test
adc
loope
lahf
aaa
cltd
pushl
pop
int
add
fildll
incl
jo
pop
push
cmp
std
mov
add
inc
add
incl
add
add
xchg
xchg
int3
incl
and
inc
add
add
add
int3
add
out
add
add
add
addb
xchg
add
add
add
lret
xchg
add
and
add
add
rcl
xchg
mov
add
add
andl
loope
and
decl
mov
fstpt
add
hlt
sbb
adc
add
add
add
add
add
pop
or
popa
add
test
inc
adc
sbb
aam
adc
call
les
test
jmp
add
pop
or
add
bound
add
movsb
pop
lahf
add
sub
out
mov
movsb
add
and
in
xchg
mov
mov
imul
decl
stos
and
add
add
mov
test
mov
jg
mov
mov
sbb
or
adc
lea
and
psubw
sub
incl
adc
out
incl
and
add
sub
and
fisttpll
xchg
jle
test
pop
sbb
pop
adc
ret
add
add
sbb
add
cmpsb
cmp
cli
sub
add
dec
sub
add
jae
push
ffree
sbb
je
testl
jl
add
incl
decb
mov
add
ljmp
jle
cs
xchg
loop
out
add
pop
outsl
roll
jge
dec
xchg
inc
and
xchg
and
add
incl
and
repnz
insb
sbb
je
incl
push
jge
loopne
add
jmp
sbb
loope
sbb
orb
insl
adc
inc
pop
and
mov
cmp
add
data16
jno
push
mov
decl
pushl
stc
or
rorb
mov
add
mov
clc
lds
sub
add
push
add
mov
or
or
jns
scas
jne
push
add
fs
xchg
add
inc
mov
add
and
dec
aad
mov
adc
and
add
jne
add
mov
mov
or
popa
loope
lcall
cmp
dec
add
add
inc
sbb
clc
in
push
add
mov
sub
out
jmp
jno
dec
xor
incl
jne
mov
mov
and
xchg
jge
add
mov
lret
jge
add
add
and
mov
add
rcrb
push
jl
and
push
sbb
push
lret
add
pop
addr16
cmpsb
or
ds
and
adc
mov
inc
add
ja,pn
mov
pushl
cs
mov
out
adc
pop
adc
and
mov
aaa
or
and
mov
mov
ret
test
sub
add
andl
add
out
push
test
xor
push
out
push
stos
mov
add
push
les
sub
int3
xchg
mov
push
jp
add
out
je
call
in
jae
movsl
mov
popa
icebp
add
sbb
add
add
out
add
cmp
mov
sti
push
jl
add
icebp
sub
lea
mov
data16
out
push
gs
jl
incl
incl
mov
loop
add
stos
cmpsl
jnp
xor
inc
add
xor
add
int3
int3
rclb
cmp
xor
xor
stc
lods
pushl
test
xchg
xchg
out
mov
hlt
repz
nop
mov
add
dec
dec
gs
add
sbb
in
fcos
add
mov
scas
add
xchg
loop
jae
adc
push
dec
add
and
sub
insb
cmp
and
fs
incl
cmp
dec
push
pop
call
movsl
dec
mov
add
stc
mov
add
or
push
and
mov
in
dec
in
mov
add
cli
ljmp
add
cmpsb
mov
add
or
or
fists
in
push
cli
adc
popf
outsl
fnsave
add
in
insb
dec
mov
decl
ljmp
test
add
add
pop
mov
mov
movsl
cmc
jmp
repnz
add
pushw
inc
push
or
mov
call
lods
inc
incl
and
add
out
add
add
loop
ja
add
xchg
pop
popl
das
inc
dec
aaa
rcrb
add
rcl
inc
dec
in
adc
add
idiv
pop
adc
incl
arpl
leave
cwtl
mov
movsb
add
jmp
xchg
dec
add
push
sbb
insb
lret
mov
enter
jns
stos
dec
adc
dec
stc
notb
and
ds
jno
decl
add
inc
test
ss
icebp
jno
mov
fsts
add
shl
xchg
add
add
adc
add
test
dec
jmp
xchg
cmp
cs
and
lock
or
adc
out
cltd
rolb
push
sbb
mov
mov
and
stos
xor
out
xor
mov
inc
pop
js,pt
add
mov
ljmp
scas
xchg
sbb
pop
mov
add
add
ficomps
rcr
add
inc
inc
add
mov
insb
incl
add
pushl
add
add
ja
inc
movsl
in
pop
add
dec
add
dec
mov
negl
incl
add
add
arpl
add
sub
and
incl
cld
and
incl
sbb
adc
adc
fmul
fdivs
add
mov
and
mov
sub
mov
sti
pop
cld
frstor
add
lds
inc
adc
decl
add
add
incl
and
adc
and
and
mov
sub
cs
dec
pop
xchg
and
fsubp
rolb
lods
add
xchg
and
incl
xchg
test
sbb
add
add
pop
sbb
js
and
jmp
dec
lock
inc
add
mov
add
adc
shl
mov
jnp,pn
fstpl
sbb
add
mov
loope
fdivs
add
mov
lods
mov
add
fisttpl
out
add
xlat
cmp
or
out
jnp
pusha
xor
add
add
in
add
lahf
mov
add
stos
ja
add
add
dec
or
in
add
add
in
mov
out
add
outsb
clc
jno
add
add
mov
adc
mull
rorl
je
add
mov
push
ja
mov
pop
add
add
add
incl
push
add
xor
add
add
inc
add
sub
mov
add
and
add
mull
xor
mov
add
nop
roll
movsb
add
cld
cmp
adc
shll
add
mov
iret
incl
add
mov
je
or
add
mov
sub
pop
loope
int
push
xchg
mov
add
pop
repnz
mov
xchg
add
add
pop
aad
push
jae
mov
lret
add
and
dec
xchg
xchg
lods
clc
data16
jecxz
and
insb
pop
or
add
add
inc
sbb
and
ficomps
pushl
mov
loop
scas
incl
outsb
sbb
aam
das
xchg
mov
cwtl
ljmp
xor
and
adc
add
add
or
push
test
or
faddl
push
and
insb
cmp
icebp
outsb
scas
repnz
xor
leave
cld
pop
mov
incl
add
int3
inc
jbe
sbb
add
mov
aad
push
or
jmp
mov
sbb
xor
and
cmp
outsl
sahf
add
add
rcrl
jnp
roll
add
ficompl
out
or
push
xchg
mov
ret
repnz
data16
loope
xchg
enter
add
push
and
mov
add
incl
push
pop
bound
add
faddl
xor
push
add
add
add
add
imul
mov
loope
add
pop
mov
sub
add
add
or
add
arpl
in
insl
add
pop
cs
pop
jmp
jnp
out
hlt
add
inc
test
out
jle
and
mov
and
adc
daa
and
incl
add
inc
ljmp
add
shll
add
mov
and
decl
pop
sub
add
movsl
mov
call
repz
jae
clc
sub
or
int
pop
adc
jecxz
out
test
sub
incl
xchg
add
add
add
dec
adc
add
add
add
add
xchg
inc
incl
add
add
add
int3
int3
add
incl
add
mov
add
inc
add
sar
and
ret
push
or
cmp
or
xchg
out
sti
aad
adc
roll
add
cmp
xchg
and
add
insl
jge
push
decl
mov
lahf
or
add
dec
inc
faddl
add
enter
mov
lock
adc
jmp
incl
add
inc
in
and
add
ja
ljmp
fadds
adc
cmp
scas
imull
andl
add
pmaxsw
mov
add
mov
das
mov
or
add
xorl
pop
xchg
repz
xchg
add
add
mov
add
sub
dec
xor
lsl
daa
and
add
imul
sub
icebp
pushl
pop
and
enter
add
pusha
cmc
inc
mov
incl
and
lcall
sbb
xchg
cmp
add
xor
add
popf
out
scas
or
cmp
sti
cli
add
jecxz
inc
movsl
jecxz
and
test
into
sbb
jmp
add
mov
ss
int
xor
movsl
decl
fstpt
and
cmpl
outsb
and
and
and
add
mov
cld
mov
je
sub
out
lret
in
leave
cmp
int3
sbb
add
lock
cld
incl
add
add
add
dec
and
add
sbb
add
mov
dec
mov
fiadds
add
add
mov
sbb
jmp
add
mov
pop
not
and
incl
mov
sub
push
and
clc
cmp
mov
and
add
dec
ficoms
add
mov
xchg
call
cld
inc
adc
pop
cmp
popa
icebp
add
cmp
push
jae
in
mov
add
js
int
jbe
add
and
sub
add
sbb
mov
incl
loope
clc
adc
and
cmc
lahf
pop
orb
add
adc
fwait
ret
adc
test
add
and
mov
add
jmp
add
add
out
add
fsubrl
inc
sub
lods
ss
pop
add
add
adc
sub
les
mov
xchg
and
out
mov
jae
xor
daa
dec
add
es
sub
mov
movsl
mov
add
cmp
decl
sti
dec
push
incl
add
push
mov
fwait
add
mov
hlt
leave
imul
cmp
xor
decl
push
push
cmp
and
rclb
jno
sti
adc
add
jg
add
push
inc
mov
add
int3
int3
add
add
inc
inc
xchg
add
inc
add
pop
add
addr16
push
jp,pn
out
sub
add
notl
sbb
enter
mov
ljmp
aam
call
loopne
dec
sbb
add
mov
sub
xchg
mov
inc
jg
sub
add
jns
addr16
mov
mov
mov
xchg
xor
xchg
and
add
mov
dec
fistpll
rorb
adcb
movb
mov
jo
test
mov
andl
sbb
push
mov
add
push
add
mov
movsb
and
mov
lds
add
mov
push
mov
loopne
sub
ljmp
and
rcr
idiv
incl
incl
jno
inc
sahf
cmp
cmp
jne
add
add
lcall
call
mov
push
nop
add
add
enter
lret
mov
add
add
mov
mov
add
roll
add
mov
out
inc
and
jae
lds
and
stos
and
add
test
adc
repz
pushl
lret
mov
add
outsl
xchg
push
add
jbe
cltd
dec
cli
out
je
lcall
fiadds
decl
popf
cld
jg
mov
add
cmpsb
popf
inc
ss
add
add
sbb
data16
je
arpl
pop
add
inc
enter
rolb
cmc
add
mov
enter
add
jbe
inc
dec
adc
add
mov
mov
mov
add
add
incb
cli
jg
push
mov
outsl
mov
push
addr16
add
paddsb
adc
mov
add
test
or
dec
inc
add
add
add
mov
rcll
in
cmp
sahf
out
lret
aad
enter
sti
xor
mov
xchg
pop
adcb
inc
adcb
loopne
icebp
call
push
add
fistpll
mov
xlat
cmc
icebp
add
add
add
xchg
lret
sahf
push
cltd
jmp
mov
add
lods
mov
push
pop
imul
sbb
inc
js
ss
jae
mov
mov
call
lcall
jmp
xor
add
add
test
mov
jge
repnz
incl
sbb
outsb
mov
pop
test
add
mov
ljmp
call
inc
pop
sti
dec
jmp
inc
mov
inc
mov
sub
or
or
mov
std
mov
add
and
inc
sti
cmc
cmp
and
and
sbb
mov
stos
imul
add
enter
pop
rolb
incl
adc
pop
fs
add
mov
sahf
and
xor
add
xchg
add
int3
incl
inc
add
add
incl
jnp
add
add
add
inc
add
add
add
ficoml
add
add
out
mov
fwait
mov
jp
fstp
insb
sub
xchg
scas
sbbl
pop
cmp
incl
icebp
mov
and
adc
dec
and
rolb
dec
cmp
incl
rorl
adc
or
and
add
sub
add
xor
data16
inc
pop
xchg
in
leave
dec
mov
std
jle
lea
and
jae
push
pop
add
mov
and
mov
mov
sub
inc
cwtl
repnz
fldl
add
dec
fldl
add
sarb
fistpl
mov
roll
loope
add
add
or
add
or
add
lahf
mov
and
incl
add
jp
stos
es
cltd
push
test
and
mov
add
je
inc
jne
incl
incl
inc
sti
in
adc
stos
leave
rcll
incl
cmpsl
sbb
inc
sub
pop
sub
or
jo
add
clc
gs
push
add
mov
fldcw
incl
decl
imul
add
and
lahf
orl
xlat
sub
jnp
push
pusha
loope
add
incl
add
and
cwtl
lret
incl
mov
mov
push
stc
in
add
add
mov
add
push
and
inc
repz
xchg
add
incl
iret
nop
cmp
mov
out
out
mov
cltd
xchg
and
lahf
add
and
aam
flds
and
mov
and
pop
and
dec
fldl
add
add
std
ret
je
add
mov
jge
loope
fs
xor
add
in
mov
int
je
xor
pusha
js
add
and
add
and
cmc
mov
cs
sub
call
out
add
inc
aas
data16
incl
test
loopne
xchg
cmp
mov
test
mov
int3
addr16
pop
jmp
incl
sbb
enter
cwtl
mov
add
adc
jbe
add
push
insb
xor
xor
pusha
push
add
cs
and
add
mov
pushl
stos
mov
add
dec
lcall
mov
jae
loope
add
fwait
lcall
xor
mov
push
gs
add
add
mov
call
xchg
xor
adc
mov
add
movsb
dec
stos
pop
sarb
jmp
fdivrs
add
xor
mov
add
mov
add
mov
push
add
mov
add
mov
stc
push
popa
cmp
ja
add
cmp
add
add
xchg
adc
ds
add
ss
jecxz
add
fsubs
and
inc
xchg
push
mov
xchg
repnz
orb
adc
push
dec
xchg
pop
cmc
enter
adc
imul
adc
add
mov
roll
lods
add
stos
jecxz
or
add
add
jae
les
incl
and
and
xchg
jp
dec
pop
and
movsl
mov
pop
xchg
inc
xor
fldenv
xchg
adc
mov
cmpsl
rcl
adc
incl
add
push
sti
inc
inc
ret
add
test
add
mov
loope
incl
jecxz
repnz
and
xchg
lcall
ret
cmc
pushf
jae
and
call
incl
add
cli
dec
cmc
sbb
mov
adc
add
iret
test
lods
cmp
add
add
add
add
inc
inc
add
dec
add
add
incl
cmpsl
add
push
add
fs
sbb
inc
roll
add
nop
data16
sbb
add
add
add
add
and
and
mov
lcall
adcl
pop
xor
leave
sub
add
int
int
incl
and
or
add
add
add
pusha
inc
mov
xchg
jne
add
and
mov
es
add
add
shl
inc
mov
mov
bound
lcall
dec
fsubrl
add
pop
loopne
sub
add
mov
add
jnp
aas
pop
mov
popa
and
fadd
adc
mov
stos
pop
in
mov
ljmp
and
add
loop
add
dec
inc
roll
shlb
add
pop
pop
arpl
add
add
add
mov
movsl
dec
out
add
cs
add
adc
repnz
pop
mov
cwtl
popf
or
xchg
shr
add
push
imul
add
jge
cmpsb
add
add
cld
sahf
imul
cmp
inc
push
insb
out
dec
adc
sahf
lcall
dec
aaa
mov
and
and
aad
gs
incl
push
pop
pushl
incl
pushf
sbb
jl
aam
cmc
xchg
sub
outsl
xchg
stos
frstor
incl
jmp
in
test
mov
repz
add
mov
jp
adc
add
inc
pushl
inc
mov
mov
dec
mov
mov
rorl
add
sarl
outsb
add
xchg
negl
add
ljmp
cmp
mov
xor
add
mov
mov
pop
add
mov
insb
lock
and
add
or
xor
and
add
add
add
add
add
add
adc
inc
movl
add
add
xchg
cmp
add
dec
inc
add
inc
add
sbb
add
cli
faddl
incl
and
pusha
and
lods
add
sub
and
testl
inc
jg
scas
add
mov
mov
and
notb
addr16
mov
and
push
or
mov
mov
cmpsl
push
lret
xchg
cld
add
aad
incl
sbb
pop
mov
mov
int3
into
and
jmp
add
add
jmp
mov
add
mov
mov
jecxz
test
mov
aam
roll
ret
jle
pop
cmpsl
sbb
mov
sub
mov
scas
or
xor
les
test
sbb
loop
es
sbb
pop
adcb
cld
mov
incl
jbe
and
add
adc
mov
cmc
jb
xchg
adc
icebp
xor
jo
icebp
and
pop
cmpsb
lahf
add
add
dec
adc
and
mov
scas
cld
add
mov
mov
xchg
imul
clc
push
dec
mov
pop
add
icebp
mov
add
mov
pop
iret
sub
add
icebp
inc
cmp
add
inc
out
and
icebp
push
add
and
cmp
add
lds
sub
add
and
add
add
jmp
add
pop
mov
sarl
dec
lret
out
pop
inc
jne
jle
sub
cwtl
mov
and
cmp
sub
push
icebp
call
ljmp
and
add
rorl
jno
sbb
push
into
enter
out
add
cmp
and
add
fdivp
and
jno
jo
add
repz
add
and
add
cmp
xor
test
add
add
xchg
mov
and
mov
mov
add
aam
mov
add
mov
scas
mov
decl
cmp
jl
stc
and
or
mov
and
add
leave
mov
add
into
push
jp
add
lods
mov
pop
add
fldl
outsl
add
push
int3
adc
xor
inc
fsts
and
cs
push
std
sahf
mov
inc
jmp
adc
jle
std
add
inc
int
inc
jmp
sbb
adc
mov
push
es
mov
mov
decl
in
in
add
and
or
loopne
jne
adc
add
cld
ret
add
popf
das
inc
in
aam
xchg
sub
lods
incl
jl
mov
jmp
and
pop
loop
inc
add
add
and
cmp
stos
mov
add
jl
pop
add
pop
sahf
loopne
clc
ffree
jge
add
pop
add
incl
and
push
add
push
insl
or
ljmp
ja
movsb
jge
mov
dec
or
adc
int
adc
out
and
mov
add
add
add
add
jns
add
add
add
adc
add
add
loopne
cmp
add
and
add
in
lcall
add
stos
pop
test
add
adc
in
in
mov
add
dec
neg
cmc
clc
mov
xchg
test
lret
lcall
add
orl
out
lods
add
fldcw
scas
dec
lcall
dec
add
add
insl
arpl
mov
in
outsb
jmp
push
mov
mov
jns
bound
add
ljmp
ja
fldenv
pop
jnp
dec
add
add
lds
sbb
gs
pop
push
test
push
incl
jp
push
push
fs
adc
call
and
or
or
arpl
setnp
add
add
fwait
add
pop
add
fldl
decl
pop
pop
into
insl
add
cmpsl
ret
mov
add
add
jmp
stc
mov
fs
add
add
and
adc
cmp
and
setp
add
sbb
subb
xchg
mov
mov
incl
mov
add
mov
pop
or
add
sub
mov
sbb
jne
mov
add
jmp
movsb
dec
add
es
jo
lods
orl
add
inc
push
sub
add
lcall
add
inc
jne
and
mov
and
or
mov
dec
dec
ljmp
dec
xchg
add
lock
inc
dec
inc
aad
add
jo
dec
xchg
mov
dec
mov
call
repnz
jno
sub
test
add
sub
ret
adc
cs
loopne
rol
clc
adc
and
mov
lahf
enter
add
test
add
aam
add
aad
add
aas
pop
mov
mov
scas
and
add
sub
jae
adc
test
add
mov
and
mov
rcrl
adc
adc
int
mov
push
xchg
or
mov
sub
add
pop
add
cld
shl
or
pop
in
push
and
and
lret
add
add
lods
or
decl
dec
int3
shl
add
xchg
and
mov
adc
ss
add
mov
sub
into
add
and
fisubrs
jbe
add
js
pop
daa
loop
outsl
dec
mov
nop
add
jo
bound
add
mov
mov
mov
and
mov
jmp
or
add
fucomi
or
sub
incl
sub
inc
add
add
add
sbb
pop
call
lret
add
cli
aas
sti
add
add
sbb
lock
adc
lds
add
add
sahf
movsb
push
pop
add
and
adc
push
cld
inc
and
mov
mov
add
popl
incl
and
call
in
jne
incl
mov
stos
gs
out
sub
ret
add
out
outsb
cmpsb
mov
sub
add
jnp
adc
add
mov
jmp
shll
insl
mov
movsb
and
iret
and
and
add
add
and
call
rorl
arpl
jg
sbb
add
in
jmp
mov
out
and
pushf
lahf
fs
ljmp
adc
lret
xchg
decl
add
pop
pop
je
add
orb
incl
in
js
or
decl
push
and
adc
mov
lahf
in
push
fwait
mov
add
movsl
shll
ret
adc
inc
add
lods
pop
lea
add
inc
jge
rclb
and
add
dec
mov
out
push
and
adcb
test
sub
sub
add
stos
mov
es
push
sbbb
add
aaa
inc
mov
mov
ds
adc
mov
ljmp
and
incl
mov
repz
fcmovu
test
aas
add
in
mov
sub
mov
dec
je
adc
je
adc
test
mov
add
dec
lret
jnp
sub
mov
cwtl
and
test
add
push
xchg
add
add
xor
add
lea
inc
pop
add
xor
mov
dec
stos
cmp
pop
and
add
loope
sbb
jmp
scas
cmp
xor
mov
mov
sub
xor
mov
add
call
nop
add
incl
xor
push
xchg
loopne
push
lret
and
aam
fs
inc
add
add
xchg
xchg
stos
add
incl
lahf
dec
rcrl
test
ja
add
sbb
mov
clc
sbb
cli
fildll
push
add
push
sub
mov
ja
push
add
adc
pop
add
inc
movsl
lret
adc
sub
add
jle
mov
nop
subl
mov
dec
inc
inc
incl
out
and
lcall
add
mov
shlb
lret
sub
mov
cmpsb
sub
fxch
idivb
mov
imul
add
add
add
xor
lea
jo
jmp
add
lods
mov
xchg
xor
inc
xor
xor
add
and
ja
mov
add
add
and
incl
int
clc
lret
inc
adc
out
fbstp
mov
incl
repnz
push
stc
add
add
and
xchg
cmc
mov
pop
pop
add
outsb
test
sub
sar
int
loop
enter
movsl
jae
ret
and
add
insb
iret
sub
and
cmp
jecxz
adc
incl
jl
pop
and
inc
jmp
add
lea
add
sub
and
add
sub
jne
and
adc
add
add
add
cwtl
cmp
mov
push
jl
movsl
nop
jmp
lcall
adc
call
incl
test
and
jl
sbb
pusha
ret
sahf
mov
add
inc
add
int3
add
add
and
add
movsl
and
add
add
mov
test
add
mov
inc
add
add
pushl
xor
add
and
mov
test
sti
sub
insb
or
mov
cld
add
data16
xchg
add
mov
add
dec
sub
add
leave
mov
ja
add
mov
add
into
clc
lods
nop
or
jnp
lock
push
andl
je
jle
sub
and
stos
push
or
add
add
out
xchg
cmp
push
call
insb
pop
add
inc
shlb
fwait
dec
mov
pop
mov
imul
mov
arpl
sub
clc
and
cmp
incl
dec
call
or
outsb
mov
add
movsb
in
inc
add
pushf
inc
fisttpl
dec
add
add
add
jb
add
add
add
incl
add
add
xchg
add
mov
fcmovne
xor
xchg
add
mov
and
add
and
adc
and
mov
andl
fwait
sbb
jnp
add
and
add
jp
div
ss
add
andl
xor
mov
clc
mov
or
xor
jno
add
mov
incl
add
cmp
sub
jo
sbb
mov
addr16
add
out
mov
das
sub
xchg
lods
jp
mov
adc
popf
test
sub
lds
mov
inc
imul
cmp
aaa
pop
sbb
add
out
dec
jmp
mov
aad
je
mov
popa
push
cmpl
sahf
add
repnz
xchg
jae
add
js
inc
fnstcw
add
fildll
fsts
incl
es
inc
adc
jmp
insb
mov
sub
cmp
fsubs
dec
aas
inc
incl
outsl
cmc
insl
loopne
jmp
add
jmp
jl
mov
ljmp
lret
rolb
xlat
add
lods
mov
add
inc
pop
jae
add
dec
fsub
dec
in
aam
ljmp
mov
decl
pop
sahf
xchg
add
pop
hlt
jo
add
aad
dec
int
lea
psrlq
jno
mov
add
add
jno
add
ja
sbb
call
dec
insb
incl
adc
lods
add
rorl
loope
movl
add
mov
add
add
hlt
dec
lods
or
repz
add
add
pop
add
mov
add
ljmp
call
mov
xchg
cmp
mov
lret
mov
incl
and
ret
xor
add
push
jge
push
les
pop
fsubrl
mov
insb
add
addl
inc
cmpsb
push
add
mov
incl
rcrb
insb
add
add
dec
adc
xchg
daa
sub
and
ljmp
sub
roll
add
push
in
add
sbb
cmp
adc
inc
movsb
mov
scas
loope
and
sub
mov
add
add
mov
adc
cmpsb
lss
adc
adc
mov
add
add
xchg
dec
push
xchg
andb
mov
add
and
jl
inc
xchg
lds
and
lret
inc
add
mov
pop
pushf
inc
cmp
adc
sarb
mov
inc
clc
add
sbb
add
incl
sahf
ljmp
decl
lret
dec
add
lcall
add
add
pushl
add
add
mov
scas
inc
pop
dec
push
addr16
mov
dec
fimuls
dec
fldl
enter
add
ljmp
inc
and
or
push
add
or
add
mov
push
call
nop
mov
mov
pop
xlat
mov
push
incl
add
push
push
adc
iret
dec
adc
add
push
cs
mov
mov
adc
mov
es
add
jmp
push
test
test
add
push
push
jmp
add
loopne
jg
push
mov
dec
sub
arpl
cltd
sbb
negl
adc
incl
and
incl
iret
mov
sub
test
sahf
ss
jecxz
xchg
and
add
incl
add
scas
pop
mov
incl
clc
pop
add
add
add
add
aas
stc
add
aas
jns
and
lahf
and
mov
add
bound
add
inc
add
inc
add
add
add
or
scas
sbbl
add
pop
xchg
push
cmp
xchg
push
sarb
xchg
add
imul
jp
and
popa
sub
mov
push
call
incl
sub
dec
sarb
cmpsb
lret
add
or
xor
mov
add
sahf
xor
shr
mov
cmc
fsubl
mov
incl
add
pop
fwait
xor
mov
add
lahf
xlat
or
mov
add
mov
in
adc
insl
ljmp
mov
jmp
add
xor
pop
push
out
add
push
mov
mov
lds
fsubs
add
xchg
in
add
addr16
mov
gs
pop
push
int3
int3
add
add
add
add
inc
add
add
add
add
loope
incl
add
add
add
rol
call
add
xor
sub
mov
popf
mov
dec
add
adc
fwait
dec
add
jmp
and
xor
js
inc
push
add
pusha
xchg
add
sar
leave
arpl
pop
cwtl
add
or
mov
or
add
ror
aad
mov
mov
add
add
movsb
add
out
rcl
and
decl
add
rsqrtps
incl
ret
sbb
mov
add
mov
mov
inc
out
or
adc
add
orl
pop
mov
mov
aas
adc
ja
inc
xchg
int
mov
lcall
decl
out
cs
sub
pushl
std
add
fisttpll
or
lds
enter
jl
jo
pop
add
rolb
add
inc
mov
push
add
add
pop
jns
incl
mov
out
cld
inc
inc
and
add
mov
jmp
aam
mov
test
mov
and
clc
or
add
into
dec
scas
into
and
xchg
inc
add
add
dec
mov
mov
je
add
incl
xlat
pop
gs
popa
stos
add
add
xchg
cmp
add
mov
xchg
stc
push
add
int
xchg
xlat
imul
decl
mov
add
or
and
add
into
jae
and
mov
jnp
jno
mov
mov
inc
stos
jecxz
add
push
jge
orl
mov
mov
add
add
xchg
sub
and
mov
cmc
mov
jmp
ljmp
add
fbld
dec
test
add
add
add
je
add
movsl
inc
testb
add
mov
imul
dec
dec
add
stos
addr16
icebp
sbb
add
adc
push
stos
add
mov
ljmp
jo
add
fiaddl
mov
insb
and
fildl
pushl
fistpll
out
inc
xor
pop
sub
lahf
sbbb
jg
add
test
in
and
or
inc
mov
int3
and
add
movsl
ljmp
xorl
add
add
mov
pushf
dec
adc
push
mov
add
add
add
add
incl
inc
add
add
add
add
add
add
add
add
add
adc
push
add
adc
lock
in
pop
push
add
lds
sbb
gs
or
adc
and
xchg
and
mov
scas
daa
adc
inc
cmpsb
fnstcw
ret
add
xchg
dec
adc
sbb
aaa
push
jg
and
enter
mov
add
xchg
adc
loop
popa
adc
cmp
xlat
push
addl
incl
inc
or
mov
clc
pop
repz
add
add
adc
jge
add
add
add
incl
add
test
add
cltd
jge
xchg
out
adc
add
push
mov
cwtl
pop
mov
sub
imul
xor
and
dec
int
cmc
sbb
das
decl
out
mov
and
xor
add
add
lcall
enter
and
add
aas
add
mov
add
add
mov
add
gs
add
and
and
xchg
and
cmp
adc
fisttps
or
and
roll
jecxz
add
add
sahf
sbb
sahf
jne
add
ljmp
push
das
rcrb
cwtl
and
push
jno
xchg
dec
cmc
xor
jecxz
pop
add
incl
out
xor
add
and
adc
sbb
add
mov
ljmp
out
sbb
sbb
test
add
icebp
test
dec
inc
add
add
jge
pop
and
out
nop
push
pop
pop
outsl
and
incl
adc
xor
out
push
scas
data16
mov
out
jmp
pop
inc
pop
pushl
jbe
das
add
decl
cmc
das
fiaddl
add
xor
pop
mov
mov
add
data16
pop
arpl
fldenv
add
repnz
push
add
add
mov
int
xchg
lds
adc
pop
lods
push
loop
and
mov
mov
insl
inc
jmp
mov
xchg
ds
add
jge
mov
movsb
sub
sub
add
add
jo
lods
roll
add
fiadds
push
fneni(8087
loope
add
call
addr16
sub
fiadds
decl
and
rorb
sub
das
jle
add
mov
add
outsl
pop
pop
add
adc
or
add
sbb
aam
cltd
add
and
dec
mov
add
into
mov
repnz
daa
pop
add
in
jns
rolb
xor
jo
and
in
pushf
push
xchg
sbb
shlb
mov
add
cmpsl
and
rorb
add
add
pop
xlat
faddl
lcall
mov
stos
sbb
add
dec
xchg
movsl
int
inc
andl
adc
unpckhps
imul
push
int3
cli
mov
add
pop
sbb
xchg
lods
and
adc
ljmp
cmp
out
mov
xor
mov
pop
add
fadd
cmp
add
and
test
cmp
add
jno
ds
icebp
roll
in
add
inc
stc
pop
into
mov
ret
push
push
jmp
stos
add
pop
xor
rcr
add
add
movsb
out
int3
mov
jno
add
jne
add
add
int3
fdivrl
aaa
xchg
incl
add
stos
jb
ss
dec
out
and
fcompl
jmp
push
add
jmp
outsl
or
call
add
int
test
add
clc
addb
add
loope
inc
add
inc
loope
add
inc
add
add
xchg
inc
cltd
add
cltd
addb
adc
hlt
inc
add
mov
jle
sub
mov
rclb
and
cli
cltd
and
mov
cmc
xor
loop
clc
xor
mov
gs
add
outsb
sar
stc
fmul
jns
mov
add
sti
sti
popa
lods
fldl
incl
add
lock
add
add
rcr
cld
mov
pushl
jne
add
jb
out
inc
and
lods
mov
cmpb
mov
and
pusha
out
fstpt
jbe
add
add
fwait
add
mov
mov
cmpsl
sub
jbe
add
ret
out
add
mov
add
loope
in
inc
mov
incl
mov
add
ljmp
and
mov
adc
jne
into
cmp
mov
and
out
add
and
cmp
incl
lcall
and
enter
xchg
decl
add
enter
add
lods
shll
or
data16
fwait
add
add
cmpsb
sar
xchg
cmp
and
and
sub
pushf
add
cltd
je
add
and
mov
cmp
movsb
mov
add
addb
dec
pop
lods
mov
adc
add
push
mov
mov
add
insl
scas
add
jnp
nop
add
inc
ja
insl
incl
popf
and
ficoms
add
mov
idiv
add
rcrl
add
sarb
add
dec
sti
push
inc
in
push
pop
in
lods
rorb
mov
and
lods
jne
cmc
push
add
std
add
add
mov
add
pop
enter
rolb
cltd
add
fcom
sub
add
add
pushf
mov
cmpsl
xchg
and
imul
jnp
add
push
xor
and
inc
mov
add
mov
lcall
mov
add
stos
and
jg
add
std
xchg
icebp
and
adc
mov
add
cmp
add
inc
nop
jmp
dec
mov
add
and
add
add
jle
mov
insb
idivb
pop
pop
or
cltd
add
jo
mov
out
add
add
dec
mov
incl
pop
out
mov
ret
fs
xchg
incl
sbb
out
mov
sbb
js
sti
mov
call
sbb
incl
mov
dec
jne
xor
incl
mov
push
movsb
stc
decl
add
jbe
jae
fiadds
stc
mov
mov
push
mov
add
call
ja
xchg
add
inc
add
add
add
add
aaa
decl
scas
add
jno
dec
leave
add
sti
xchg
call
add
mov
and
dec
clc
ja
add
shlb
xor
cmp
sub
call
push
loop
or
roll
aad
add
aad
in
add
ljmp
mov
add
incl
leave
clc
and
mov
pop
xor
mov
add
cld
push
incl
adc
cmc
fcompl
or
mov
cmp
add
add
pop
addr16
add
add
mov
rcll
push
mull
sub
add
mov
pop
mov
lahf
mov
lahf
mov
or
jbe
mov
incl
add
lahf
ja
jbe
add
jl
fildl
pop
and
add
add
aam
mov
add
loopne
mov
and
mov
repnz
mov
add
add
xlat
mov
xor
rorl
mov
inc
aaa
sub
add
xchg
inc
xlat
imul
adc
add
add
xchg
add
add
add
add
add
aas
mov
mov
xor
jmp
in
scas
jno
incl
addr16
ds
mov
pop
out
add
aas
rcrb
mov
daa
jo
sub
add
or
add
stos
cmp
mov
jmp
jno
inc
xchg
push
add
and
push
adc
inc
notb
aad
enter
aam
cmc
or
add
mov
xor
incl
add
sahf
push
xchg
push
mov
rclb
jno
pusha
loop
jmp
movsl
cmp
mov
mov
push
lret
mov
xchg
nop
mov
add
add
adc
hlt
sub
out
cmp
add
add
push
mov
add
jb
xor
fcompl
add
and
decl
sub
sub
add
in
adc
push
sbb
dec
and
sbb
aaa
data16
xchg
adc
mov
add
add
call
or
dec
dec
lock
inc
clc
mov
add
add
nop
mov
cmp
sbb
dec
imul
test
cmp
adc
add
add
ffree
pop
sub
fldenv
xchg
shlb
ljmp
pop
lock
add
sub
cs
add
sbb
pushf
sti
jb
and
add
add
lds
ret
mov
addl
sahf
lods
and
icebp
jmp
and
js
mov
add
push
incl
jmp
pop
jge
lahf
add
add
dec
ja
incl
dec
xor
sub
test
and
cs
lahf
add
mov
add
sub
sbb
mov
jbe
add
in
mov
call
xor
roll
dec
add
dec
out
push
loope
stc
xchg
jp
call
scas
jbe
push
leave
add
cmp
insl
mov
xor
and
mov
mov
and
insb
outsb
adc
bound
int
mov
and
popl
hlt
dec
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
inc
add
incl
lret
dec
add
add
dec
outsb
adc
and
adc
in
push
stc
add
adc
jne
jmp
dec
add
add
mov
cmpsl
cwtl
xchg
sub
pop
add
ret
mov
and
mov
int3
cld
and
add
sub
and
pop
mov
ret
pop
push
mov
sub
fistps
sbb
popa
adc
add
mov
xor
mov
add
and
lock
push
fiaddl
add
pop
outsl
add
sbb
push
add
ret
adc
pushl
test
xchg
and
add
jnp
xor
add
add
xor
arpl
popfw
cmpsl
pop
mov
mov
pop
loopne
and
addl
xchg
lock
mov
pop
add
add
mov
push
dec
das
icebp
insl
sub
or
or
aad
loopne
call
add
dec
daa
inc
sub
movsl
dec
addl
add
add
adc
xchg
add
add
and
add
pop
mov
bound
inc
fstpl
dec
mov
inc
bound
add
incl
mov
iret
aad
icebp
add
add
xor
test
and
mov
mov
mov
push
mov
leave
test
xchg
sub
and
bound
mov
incl
dec
or
loope
add
xor
xor
repnz
adc
mov
imul
sahf
adc
ret
jp
push
ret
filds
mov
mov
pop
mov
iret
insl
mov
pop
mov
lds
sub
mov
insl
push
cli
ja
mov
mov
dec
add
add
fistpl
add
out
jo
adc
adc
add
xchg
gs
jmp
frstor
dec
aad
cmpsl
and
fwait
jnp
add
les
cmpsb
incl
and
rclb
je
jb
add
out
mov
sub
repz
mov
incl
enter
das
sub
add
aaa
dec
mov
push
add
add
and
add
and
jecxz
int
mull
orb
add
es
lret
pushl
add
add
push
sbb
movb
jb
incl
add
mov
pop
imul
int3
mov
out
add
jmp
add
add
jmp
add
insl
fstcw
add
add
pop
jecxz
add
inc
clc
fstpl
push
add
stos
mov
push
dec
add
add
sarb
and
jmp
cwtl
and
ljmp
fsts
mov
cltd
xor
cli
xor
out
pop
popf
sbb
mov
movl
fsubs
mov
dec
adc
fsts
add
xchg
faddl
lcall
orb
mov
dec
jg
sub
imul
add
or
or
add
mov
data16
decl
add
pop
sbb
pop
xor
lcall
mov
pop
lcall
mov
sbb
xlat
add
or
nop
add
in
sub
out
fldt
movsl
and
addb
add
cmp
add
ds
test
pop
add
adc
inc
ficomps
jo
and
sbb
mov
ja
fs
push
in
add
out
scas
add
add
sbb
inc
inc
jmp
lods
add
add
jmp
inc
add
add
add
add
cmp
rolb
add
jne
mulb
mov
scas
add
push
pop
inc
int
js
imul
out
add
jmp
cmpl
incl
repz
sub
imul
jae
and
cmp
mov
ss
daa
jnp
cmc
leave
pop
adc
xlat
ret
out
add
xor
mov
adc
sub
add
mov
add
add
mov
insl
or
xchg
add
xchg
add
push
je
sub
xor
cmpsl
outsl
add
add
loope
pop
mov
push
ja
add
adc
mov
stc
push
add
js
sub
mov
add
sbb
mov
and
cmpsl
push
add
push
sbb
jmp
std
push
cmp
lds
add
xchg
xchg
sbb
sarb
mov
mov
add
pop
shrl
add
call
inc
add
add
leave
movl
jo
add
lods
scas
pop
add
imul
in
test
arpl
mov
cmc
push
repz
pop
ljmp
addr16
shlb
mov
out
push
add
add
out
imul
add
mov
mov
and
iret
push
mov
in
or
test
mov
aad
out
add
fsubrl
imul
push
pop
adc
bound
inc
pusha
mov
add
negl
incl
jp
filds
mov
pop
sbb
add
mov
dec
mov
nop
jecxz
decl
sub
mov
stos
add
sti
loopne
out
add
cmc
sbb
add
add
shl
mov
mov
add
add
movl
loopne
ljmp
add
out
test
cmp
and
mull
jmp
add
add
ret
rcrb
lds
adc
sbb
mov
and
xchg
add
sbb
incb
cld
jle
out
mov
outsl
cld
add
scas
hlt
loopne
and
add
lcall
movsb
addl
add
xor
sub
int
roll
add
xchg
add
xchg
xchg
jle
or
repz
iret
and
sahf
add
add
jbe
xor
mov
mov
add
lahf
out
add
fnsave
movsl
incl
enter
xor
mov
xor
mov
fmull
xchg
mov
decl
mov
add
add
add
add
xchg
add
add
add
add
add
add
leave
add
test
sub
cmp
incl
clc
adc
lret
in
nop
movsl
test
add
add
sub
mov
daa
incl
add
clc
sub
cs
push
repz
cli
inc
xor
add
xchg
mov
sar
push
add
sbb
dec
push
add
jmp
dec
jl
xchg
add
adc
xchg
push
sti
push
pushl
add
std
add
and
xchg
jne
roll
and
scas
cwtl
cmpsl
lret
add
add
hlt
mov
add
add
jbe
orb
add
add
cmc
rorb
aaa
incl
cmp
mov
mov
add
and
decl
mov
add
in
inc
mov
imul
xor
cld
jmp
inc
sub
add
nop
jle
add
shll
or
adc
std
add
sub
sbb
addb
lret
xchg
mov
add
sub
add
dec
mov
hlt
and
or
pop
repz
and
loopne
imul
pop
lcall
in
mov
mov
push
pop
cmpsl
pop
incl
mov
mov
xlat
fstp
aaa
and
scas
rorl
incl
testb
push
inc
add
cmp
sub
jle
add
add
popa
mov
out
shrl
mov
add
sbb
add
addl
add
pop
fwait
outsl
ret
sbb
rcll
aam
incl
add
aam
mov
mov
lcall
inc
inc
incl
add
fildll
pop
xchg
dec
add
mov
sbb
add
hlt
ja
add
sub
add
push
inc
mov
lcall
and
mov
jp
mov
xchg
adc
mov
xchg
mov
lret
xorb
xor
incl
loopne
xchg
dec
add
lcall
xor
mov
mov
or
outsb
add
add
xchg
mov
in
out
add
mov
call
add
add
adc
add
add
fistps
add
add
incl
add
add
int3
int3
inc
add
mov
add
imulb
fsubrl
add
jo
add
mov
add
call
mov
fs
gs
cld
add
test
pop
add
and
mov
or
lahf
mov
mov
dec
mov
incl
sbb
and
pop
and
inc
cwtl
add
incl
faddl
decl
jl
xchg
out
jo
test
jbe
jmp
add
in
or
add
add
push
add
dec
push
cld
in
xor
add
movsb
cld
faddl
mov
jl
aam
add
call
outsb
xchg
add
add
mov
fdivr
dec
and
inc
out
movsb
dec
add
incl
xchg
cltd
nop
popf
insl
or
cmp
cmp
mov
add
shll
mov
add
fistpll
mov
fdivrs
jb
ljmp
sbb
add
add
and
add
sbb
push
dec
testl
and
push
add
jns
sub
add
push
jne
enter
pop
int3
jmp
fildll
add
cmc
iret
xchg
outsl
and
cmp
jno
cmp
decl
add
xor
cmp
push
ja
and
loop
xchg
mov
jp
ljmp
xor
adc
mov
or
aad
cltd
movsb
mov
add
ret
inc
outsb
add
pop
jge
jmp
loope
mov
jp
sbb
rolb
add
add
imul
hlt
lcall
xchg
sub
testb
nop
aam
mov
aam
inc
add
pop
add
add
inc
jmp
xchg
add
call
dec
out
dec
in
add
adc
inc
add
or
mov
inc
dec
add
outsb
dec
and
cmovg
lcall
inc
add
add
incl
xchg
add
add
sub
add
add
add
cmp
add
add
add
adc
dec
lock
xchg
decl
cmp
roll
add
xchg
and
out
add
aaa
push
mov
cmp
and
ljmp
mov
add
mov
dec
push
xchg
addr16
int3
add
add
jp
call
jnp
mov
xor
adc
movsb
pop
pop
add
push
insl
mov
lret
or
icebp
mov
inc
jnp
arpl
cmpsl
add
inc
xchg
inc
aad
add
in
push
or
add
add
add
iret
sbb
mov
and
inc
xchg
and
jecxz
adc
and
add
xchg
lret
add
sub
daa
mov
dec
dec
cmp
and
mov
aam
loop
and
fists
into
push
and
lea
movsl
add
inc
loopne
mov
mov
and
cmp
popa
mov
lret
add
outsb
xchg
hlt
fidivrs
add
and
dec
push
ljmp
push
mov
imul
cs
mov
in
adc
scas
cmp
add
cmp
out
incl
add
mov
dec
xchg
cmp
and
jo
and
int3
mov
int3
inc
mov
add
jge
movsb
ret
xor
add
dec
and
cld
lcall
sarl
lods
mov
add
push
lcall
ror
mov
aad
ljmp
ficoml
add
pusha
test
xchg
mov
call
loope
incl
je
pop
pop
inc
add
and
pushl
popa
shr
mov
out
mov
shlb
add
or
sub
incl
incl
stos
push
mov
add
out
push
xchg
mov
add
pop
jb
adc
decl
bound
lret
cmp
subl
add
push
inc
push
movsl
sbb
inc
ljmp
and
and
add
arpl
pop
pop
mov
ss
lock
mulb
dec
cld
add
or
mov
mov
cmp
adc
popa
pop
add
aas
stos
mov
cmc
test
mov
out
addb
mov
mov
adc
add
shl
push
pop
sahf
mov
mov
pushl
movsb
repnz
add
sbb
cmpsl
daa
repz
cmp
jae
mov
out
add
mov
add
and
add
jle
push
stc
jmp
mov
jl
mov
stc
mov
xchg
lods
add
or
incl
add
mov
adc
mov
cmp
lret
mov
add
inc
add
and
addr16
dec
sub
incl
add
jmp
xor
add
add
pop
add
add
dec
adc
add
sbb
mov
pop
lcall
inc
push
scas
xchg
rcll
imul
sub
in
cmc
add
mov
inc
imul
add
aam
jbe
and
add
ficoml
push
dec
mov
add
add
add
bound
lods
inc
add
adc
push
push
jno
and
sub
mov
rcr
roll
leave
lea
pushl
add
push
xlat
add
and
aam
int
aas
movsb
add
or
adc
jb
add
sub
outsl
add
incl
push
mov
add
add
add
jmp
add
add
add
add
lods
cmpsb
cmp
add
fistl
and
add
orb
in
add
add
incl
push
pop
filds
add
insb
sbb
add
rcll
jge
add
cltd
pusha
xlat
decl
add
lret
jecxz
int
mov
hlt
mov
add
push
stos
loop
sti
lret
mov
and
lret
add
mov
and
scas
ds
inc
and
call
jp
fnstsw
xchg
add
xor
incl
jg
add
lods
test
mov
xor
jo
push
mov
in
sub
movl
and
add
adc
xchg
mov
inc
daa
jecxz
or
imull
add
aaa
sub
mov
sub
pop
mov
clc
cmp
add
dec
mov
sarl
int3
or
add
jae
outsl
fdivrs
mov
add
jecxz
add
sahf
outsl
decl
mov
push
dec
xlat
sub
nop
std
sbb
push
ds
scas
lahf
or
add
je
push
ret
push
add
imul
jns
cwtl
add
dec
popf
out
popf
cli
idiv
and
or
mov
mov
std
adc
aam
testl
mov
out
mov
and
or
add
cmc
add
add
jmp
and
adc
es
add
fildll
add
inc
mov
add
lahf
push
ret
xor
pushf
out
and
mov
incl
scas
jmp
push
and
add
lock
xchg
dec
mov
dec
adc
sbb
mov
test
add
cltd
sbb
je
push
sbb
add
push
xor
add
add
inc
std
mov
adc
mov
lret
mov
jmp
and
cmp
add
push
push
xchg
adc
push
data16
ret
add
pop
stos
outsl
jae
and
and
fimull
mov
add
sub
sarb
and
mov
in
push
sbb
mov
je
sbb
pusha
outsb
add
lods
lret
add
jmp
cmc
cli
and
inc
add
popl
lcall
fisttpl
scas
shlb
in
mov
psraw
aas
cmp
hlt
and
add
mov
dec
mov
and
in
adc
push
sbb
stos
adc
mov
test
decl
cmc
add
incl
pushf
mov
mov
add
fwait
movsb
scas
jecxz
repnz
js
add
imul
call
inc
jp
mov
xchg
test
cld
mov
add
incl
mov
pop
movsb
mov
add
adc
jne
jbe
add
inc
add
inc
add
add
pop
xchg
and
icebp
pop
mov
out
pop
rcl
pop
add
inc
pusha
mov
add
add
mov
out
out
test
push
xor
mov
filds
and
pop
mov
sbb
mov
sbb
add
pop
clc
mov
add
test
or
and
mov
popa
inc
add
lea
faddl
insb
inc
shlb
and
dec
xor
xchg
sub
jl
test
add
add
rorb
dec
je
push
mov
mov
incl
add
jno
pushf
sub
scas
add
clc
outsl
add
test
jmp
add
dec
or
push
add
lcall
mov
cmp
add
push
cmp
call
pop
adc
inc
add
in
add
xchg
outsl
inc
add
add
inc
push
add
adc
call
ss
add
sar
mov
xchg
lahf
or
add
add
add
add
pop
pop
lahf
or
add
xchg
lcall
sub
add
decl
mov
mov
dec
add
les
add
and
sbb
add
xchg
addr16
add
call
mov
out
cmp
add
and
fidivl
xor
add
add
add
pop
jns
jmp
incl
lcall
mov
mov
dec
sbb
add
add
add
mov
frstor
add
mov
and
jle
xchg
incl
cmp
out
and
sub
jne
std
enter
mov
into
jge
add
movsl
scas
sub
add
add
add
sub
inc
pushl
into
iret
das
mov
mov
add
and
iret
icebp
and
xor
je
movsb
test
stos
pop
into
mov
out
add
add
push
add
add
inc
add
je
call
jmp
cld
fsubs
incl
dec
lods
mov
xchg
mov
idivl
sub
out
pop
mov
sub
add
push
mov
in
pop
jno
add
hlt
dec
mov
inc
loopne
incl
inc
add
add
int3
int3
adc
adc
xchg
in
pop
fidivrl
add
lret
xor
add
add
enter
mov
sub
js
insl
dec
sbb
ljmp
and
into
mov
jg
xchg
mov
jbe
xchg
scas
xor
aam
jmp
sub
add
call
inc
pushl
in
jmp
mov
and
dec
testl
jg
add
inc
rclb
mov
mov
push
aas
out
adc
inc
jbe
add
adc
sbbl
mov
and
xchg
add
add
lods
insb
xchg
jle
ljmp
ret
mov
add
sub
add
paddd
add
mov
loop
mov
out
add
insb
mov
scas
stos
add
add
aas
cwtl
out
add
cmp
adc
js
add
or
loope
cmp
add
add
sub
adc
aam
add
add
jnp
inc
jo
add
or
add
ret
ja
jge
add
incl
add
out
and
iret
ret
dec
mov
pop
and
xchg
xchg
pop
fstpt
sbb
mov
or
mov
daa
adc
jns
or
mov
and
mov
xchg
mov
jmp
jbe
add
add
add
int3
add
xchg
add
add
xchg
add
jae
push
add
add
inc
add
lea
int3
xchg
je
add
cmc
add
adc
mov
fs
push
out
add
test
add
enter
sbb
or
add
lcall
cwtl
mov
add
and
addr16
stos
movsb
add
pushl
lret
fwait
lea
repz
shrl
xor
lods
add
add
and
aaa
jnp
and
pop
sbb
adc
xor
or
add
sbb
jge
arpl
sub
test
adc
decl
repz
add
mov
data16
jge
mov
add
add
xchg
mov
mov
ljmp
add
add
aaa
mov
cmp
cmp
mov
mov
loop
data16
add
iret
or
add
out
les
lods
pushf
cli
es
leave
mov
mov
or
cmp
add
mov
add
xchg
mov
add
inc
inc
inc
add
jecxz
cld
xchg
xchg
stos
xchg
int
adc
out
outsl
add
dec
adc
dec
add
dec
jle
popa
imul
mov
or
push
incl
xor
add
ja
jecxz
mov
jp
incw
in
dec
fwait
jl
add
add
test
out
mov
repz
mov
cmpl
cmp
inc
jo
xchg
jns
jno
add
incl
fildl
add
add
enter
or
add
add
adc
gs
pushl
movsb
icebp
xor
rorb
incl
lss
jmp
jmp
call
stos
incl
and
dec
sbb
adc
jecxz
cmpsl
adc
adc
repz
and
movsb
data16
ret
loopne
fwait
add
add
add
add
mov
lods
out
push
add
incl
adc
add
and
ja
dec
jnp
shrl
lret
inc
inc
pop
jl
xchg
outsb
int3
incl
inc
imul
sub
push
mov
add
add
mov
and
jne
add
pop
jbe
scas
push
aaa
pop
mov
cli
incl
fisttps
adc
sub
and
and
imul
cmpsb
add
add
lods
incb
test
movb
sbb
add
incl
add
stc
xorb
adc
ds
aaa
add
decb
test
add
sub
sub
jecxz
roll
dec
add
shlb
mov
add
mov
pop
add
jmp
aas
sub
add
scas
inc
dec
insb
jp
in
jl
xchg
xchg
push
ret
outsb
mov
andb
imul
shll
movl
mov
pop
stc
mov
add
jae
xchg
sub
ljmp
jbe
mov
hlt
pop
xor
pushl
xor
or
cmp
mov
push
lcall
and
repz
ljmp
imul
sbb
and
add
add
jae
out
add
incl
nop
xchg
or
enter
decl
lea
les
out
push
fildl
add
add
add
xchg
mov
lcall
add
add
add
push
sub
push
xor
incl
dec
push
and
xor
ljmp
dec
add
lcall
cwtl
movsl
dec
xchg
or
mov
mov
or
sub
adc
movb
mov
loopne
stc
sbb
cs
rcrl
mov
int
ss
xchg
mov
dec
add
inc
clc
lods
add
jle
leave
add
add
mov
loop
and
mul
add
and
mov
and
cmpsb
cwtl
and
or
sbb
int3
int3
add
add
add
inc
add
int3
add
add
inc
inc
jns
add
roll
adc
add
incl
add
add
xchg
inc
add
cs
leave
jmp
add
aas
sub
add
mov
mov
add
ret
cmp
add
fwait
dec
scas
pop
int3
mov
push
nop
mov
lret
add
or
inc
adc
add
mov
inc
scas
pop
and
imul
push
les
add
and
jae
dec
add
sub
out
jmp
fs
pop
and
aam
lods
mov
sub
in
popa
pusha
incl
push
inc
jae
mov
pop
inc
dec
mov
xchg
dec
lret
add
add
sub
or
or
add
pop
add
mov
add
xchg
cmpsl
sub
ljmp
mov
cld
movsl
ret
scas
jg
sub
xchg
inc
mov
mov
or
and
xchg
iret
ljmp
inc
leave
adc
lods
mov
add
icebp
roll
xchg
xchg
add
add
lret
push
rclb
add
cli
xor
add
add
pop
stos
and
ds
imul
push
and
mov
out
jo
stos
fldl
jmp
rolb
incl
incl
push
int3
pushf
pop
addl
adc
jl
mov
sub
push
stos
pusha
mov
inc
xor
in
js
add
jne
or
mov
aas
pop
or
mov
xchg
sub
pop
mov
fiadds
and
lret
add
xchg
nop
ret
test
cld
push
add
jae
mov
sub
jg
push
inc
inc
add
mov
push
sub
out
testl
push
mov
add
in
stos
lock
cmp
cli
add
loope
daa
andl
xchg
add
add
subl
daa
add
popf
xor
dec
orb
in
add
mov
xchg
clc
add
add
mov
les
adc
push
push
addl
dec
and
mov
add
or
mov
sub
mov
repz
add
push
repz
sub
incl
sub
jnp
test
and
dec
xchg
lahf
incl
mov
loopne,pn
loope
add
add
push
mov
cmpsb
pop
mov
sti
add
incl
and
pushl
mov
add
push
andl
iret
popa
push
call
mov
add
cmpsl
and
jne
lcall
adc
dec
repnz
pop
add
add
push
insl
mov
and
loop
mov
incl
sbb
mov
add
lods
xchg
xlat
mov
scas
es
lcall
dec
dec
adc
add
and
stc
popw
adc
pop
xchg
test
sub
aam
mov
sub
sub
add
add
mov
int
add
add
mov
in
pop
je
incl
and
xlat
out
add
mov
adc
int
xor
cli
scas
enter
xchg
fisubs
add
add
add
xchg
dec
mov
ret
jnp
adc
fcos
xchg
push
scas
call
jge
add
iret
enter
int3
mov
add
lcall
add
xchg
xchg
add
vmovddup
popf
xchg
mov
popa
fs
adc
sub
add
inc
sbb
subl
inc
add
add
add
pushf
add
xlat
add
inc
adc
rcr
xor
adc
lea
imul
add
sti
pop
pop
in
mov
outsb
data16
aas
inc
pop
push
and
add
jnp
cmp
stos
adc
xor
jl
add
adc
mov
mov
sub
add
jns
jge
add
enter
mov
add
out
push
outsb
mov
jmp
sub
and
incl
add
xor
test
jmp
call
stos
or
outsb
fisttps
add
add
jb
xor
xchg
mov
js
mov
inc
adc
dec
add
pop
jno
xchg
mov
xorb
adc
leave
xchg
test
and
adc
mov
sbb
cli
rolb
cwtl
mov
mov
incl
add
gs
cmpsb
fsubrs
incl
mov
mov
jle
jl
incl
jb
std
jmp
and
inc
jmp
lds
jmp
out
bound
add
movsl
sbb
add
add
repnz
sar
and
mov
mov
out
inc
hlt
or
shrb
cmp
dec
xchg
fistpll
add
incl
and
push
add
daa
sbb
incl
mov
jge
jecxz
aam
aad
subb
and
and
add
adc
xchg
push
add
add
sub
add
shr
xor
and
add
or
loop
push
add
outsb
hlt
movb
mov
mov
enter
dec
sbb
add
adc
fcoms
and
sub
jns
mov
add
mov
jbe
xor
mov
adc
mov
add
xlat
xchg
les
add
inc
fisubl
out
sbb
xchg
add
rcll
and
mov
add
add
mov
jmp
push
pop
popa
mov
testl
in
xor
add
add
mov
and
aam
imul
scas
loope
sub
or
mov
xor
test
mov
inc
and
mov
add
jecxz
mov
add
mov
xor
shr
sbb
add
mov
dec
sub
sti
add
add
inc
sbbl
aas
jle
add
cmpsl
sbb
outsl
call
add
dec
sbb
adc
pop
inc
les
add
and
cmpsl
add
and
jg
int3
jbe
add
icebp
add
add
add
add
add
adc
add
add
add
outsl
int3
int3
xchg
pop
xchg
add
xchg
add
add
and
add
add
je
dec
int3
int3
and
xchg
add
incl
add
out
add
xchg
xchg
add
add
add
inc
int3
int3
add
add
adc
add
jae
add
add
pop
ret
push
mov
sub
mov
push
push
push
lea
push
push
push
mov
push
movl
sub
call
movzbl
mov
mov
imul
add
sar
movzwl
mov
sub
shr
add
add
cmp
je
mov
add
sub
mov
jmp
sub
sub
mov
mov
mov
add
lea
lea
sub
dec
sub
dec
mov
and
mov
mov
mov
mov
sub
sub
movzwl
sub
mov
add
mov
add
mov
lea
movl
mov
mov
sub
movzbl
mov
movzbl
lea
lea
cmp
jne
lea
mov
lea
mov
shl
add
mov
mov
call
mov
mov
mov
shl
add
cmp
mov
je
cmp
jne
mov
sub
add
mov
mov
jmp
movzbl
movzbl
lea
movzbl
add
cmp
jle
mov
mov
shl
add
mov
shl
add
pop
pop
mov
pop
mov
pop
ret
mov
push
push
push
xor
push
xor
lea
mov
movzbw
mov
movzbw
add
movzbl
add
cmp
lea
mov
mov
lea
jb
pop
mov
pop
pop
pop
ret
int3
push
movzbl
lea
lea
mov
cmp
movl
mov
jne
add
mov
push
mov
push
push
mov
push
mov
mov
jmp
mov
lea
mov
cmp
je
cmp
je
add
lea
mov
jmp
movzwl
sub
add
mov
jmp
movzbl
lea
movzbl
lea
mov
mov
mov
mov
sub
add
push
mov
call
movzwl
add
cmp
je
dec
jne
mov
mov
movl
mov
push
push
push
call
push
mov
call
movzbl
add
lea
mov
add
dec
mov
jne
mov
lea
cmp
jbe
movzbl
mov
shl
add
mov
push
call
add
mov
mov
sub
add
inc
dec
mov
jne
movzbl
push
push
lea
call
add
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
call
mov
cmp
je
cmp
jne
movzbl
movzwl
lea
movzwl
sub
mov
sub
mov
add
mov
sub
mov
lea
cmp
jb
sub
sub
mov
mov
push
mov
push
push
push
call
add
mov
pop
add
ret
int3
push
mov
push
push
push
call
mov
cmp
je
cmp
mov
je
add
lea
mov
pop
ret
movzwl
lea
pop
ret
mov
sub
movzbl
inc
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
movzwl
mov
lea
push
lea
push
lea
push
mov
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
cmp
jb
sub
sub
mov
push
call
mov
sub
add
mov
mov
add
ret
int3
add
add
inc
inc
add
add
inc
add
xchg
add
incl
add
inc
loop
add
int3
add
bound
add
add
add
add
incl
insb
insb
inc
inc
add
add
push
insb
imul
add
int3
int3
repz
pop
xchg
add
add
int3
add
add
add
add
xor
addb
add
add
add
inc
add
add
adc
add
inc
outsb
inc
jb
add
incl
add
add
add
inc
add
inc
add
add
inc
add
add
pushf
inc
add
add
add
add
cmc
add
imul
inc
xlat
inc
dec
lea
add
mov
add
jae
push
int3
int3
pop
add
add
add
pushl
add
push
add
add
add
add
lock
imul
add
add
add
add
add
add
add
add
add
add
push
adc
and
add
xor
inc
inc
int3
cmp
jbe
add
add
add
add
add
jbe
add
add
in
add
add
add
pop
add
add
jl
int3
xchg
add
add
add
add
inc
add
add
add
add
add
add
add
wrmsr
add
add
add
inc
xchg
add
add
int3
add
add
add
call
add
add
inc
add
inc
add
int3
int3
mov
call
mov
push
mov
push
push
mov
sub
add
push
mov
call
mov
add
test
je
mov
movzwl
mov
movzbl
push
lea
mov
mul
shr
cmp
mov
je
mov
mov
mov
mov
mul
mov
sub
movzwl
shr
sub
cmp
je
movzbl
movzwl
lea
mov
jmp
sub
sub
mov
movzwl
push
push
call
lea
push
call
mov
add
lea
cmp
pop
jb
mov
sub
sub
mov
lea
push
push
push
call
add
test
je
call
movzbl
mov
lea
lea
lea
cmp
mov
jne
lea
mov
add
sub
mov
pop
pop
xor
pop
add
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
jmp
push
push
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
mov
push
or
testb
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
andl
mov
pop
pop
ret
push
push
call
orl
mov
testb
je
andl
mov
call
ret
push
call
pop
andl
push
call
pop
mov
orl
call
jmp
mov
push
call
pop
ret
push
mov
push
push
mov
push
push
mov
imul
test
mov
mov
mov
jne
xor
jmp
push
mov
testw
je
mov
mov
jmp
movl
mov
and
je
mov
test
je
cmp
mov
jb
mov
push
pushl
pushl
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
test
pop
jne
cmpl
mov
je
xor
mov
divl
sub
push
pushl
pushl
call
add
cmp
je
add
sub
cmp
jb
mov
jmp
mov
movsbl
push
push
call
cmp
pop
pop
je
incl
mov
dec
test
mov
jg
movl
test
jne
mov
pop
pop
pop
leave
ret
mov
sub
xor
divl
jmp
orl
mov
jmp
push
push
call
pushl
call
pop
andl
pushl
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
push
call
pushl
call
mov
mov
push
call
pop
pop
andl
push
call
mov
push
pushl
push
pushl
call
mov
push
pushl
call
add
orl
call
xor
mov
cmp
sete
dec
call
ret
pushl
call
pop
ret
push
mov
mov
test
push
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
test
pop
jns
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
xor
add
cmp
setne
dec
mov
jmp
call
movl
or
pop
pop
ret
push
push
call
pushl
call
pop
andl
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
push
call
call
mov
test
jne
call
movl
xor
jmp
andl
push
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
pushl
pushl
call
add
ret
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
cmpl
je
call
pushl
call
push
call
pop
pop
ret
cmpl
je
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
pop
ret
push
push
call
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
movl
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
call
movl
push
lea
push
call
add
xor
jmp
mov
jmp
push
call
pop
orl
call
xor
inc
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
push
call
mov
mov
push
mov
call
pop
pop
mov
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
call
mov
cmp
je
call
pushl
pushl
push
call
add
ret
mov
ret
mov
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
mov
sub
push
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
xor
cmp
je
mov
decl
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
decl
mov
mov
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
mov
incl
cmp
je
cmp
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
mov
test
jle
push
lea
add
pushl
pushl
call
dec
pop
pop
jne
pop
pop
ret
push
mov
push
push
mov
push
push
push
call
mov
mov
add
test
je
cmp
jne
lea
cmpb
je
push
push
lea
push
call
add
movb
xor
jmp
andl
push
jmp
cmpl
lea
mov
jne
cmp
jae
cmp
je
push
push
pushl
jmp
cmpl
jne
cmp
jae
cmp
je
push
mov
add
jmp
cmpl
jne
cmp
jae
test
je
cmp
jne
push
mov
add
push
push
call
add
cmp
je
test
je
incl
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
xor
jmp
push
mov
push
pushl
call
lea
cmpb
pop
pop
je
push
push
push
pushl
call
add
lea
cmpb
pop
je
push
push
push
pushl
call
add
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
mov
push
xor
inc
test
jne
push
call
test
pop
mov
jne
pop
ret
push
push
push
movb
pushl
mov
push
pushl
push
pushl
call
mov
add
mov
push
pushl
call
add
pushl
pushl
call
add
test
je
xor
pushl
mov
push
pushl
push
pushl
call
add
cmp
jl
test
pop
pop
pop
jne
mov
pop
ret
pushl
call
andl
mov
pop
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
mov
jne
xor
jmp
cmpb
jne
cmpb
jne
mov
mov
cmp
movb
movb
je
mov
mov
mov
mov
cmp
je
mov
jmp
push
push
push
call
mov
cmp
pop
mov
jae
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
je
lea
push
push
call
test
pop
pop
jne
lea
push
push
push
call
add
test
jne
xor
jmp
movzwl
mov
lea
push
push
call
cmpb
pop
pop
je
push
call
cmp
pop
jb
mov
push
push
push
movb
call
add
cmpl
je
push
push
pushl
call
add
cmpl
je
push
push
pushl
call
add
mov
push
pushl
call
pop
pop
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
mov
push
lea
push
lea
push
lea
push
pushl
call
add
test
je
push
lea
shl
pushl
lea
push
call
test
pop
pop
jne
mov
jmp
lea
push
call
inc
push
call
test
pop
pop
mov
je
mov
push
mov
lea
mov
mov
lea
lea
push
push
mov
lea
push
call
mov
mov
lea
push
pushl
call
mov
movzwl
mov
push
lea
push
pushl
call
add
cmp
jne
mov
mov
andl
mov
mov
mov
mov
mov
cmp
je
mov
incl
mov
mov
mov
mov
mov
mov
add
cmp
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
pushl
lea
pushl
push
push
push
push
call
add
test
je
xor
andb
inc
cmp
jb
push
lea
push
push
call
add
neg
sbb
inc
jmp
xor
mov
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
call
test
je
mov
pushl
mov
call
mov
mov
mov
mov
pop
xor
jmp
cmpl
je
pushl
call
pop
mov
pop
pop
mov
call
add
leave
ret
push
lea
sub
mov
push
push
mov
xor
cmp
push
mov
mov
je
cmp
je
push
call
pop
jmp
lea
mov
jmp
cmp
movl
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
push
push
call
mov
test
pop
pop
je
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
test
pop
pop
jne
cmpb
jne
mov
cmp
jg
push
lea
push
push
call
lea
push
movb
call
add
test
je
incl
add
cmpb
je
inc
cmpb
jne
xor
cmp
je
call
mov
mov
mov
pop
pop
pop
call
add
leave
ret
xor
jmp
push
push
push
lea
push
push
call
mov
add
cmp
je
mov
xor
mov
cmp
je
pushl
lea
push
call
test
pop
pop
je
lea
push
call
test
pop
jne
and
jmp
incl
add
inc
cmp
jle
xor
cmp
je
call
pushl
mov
call
pop
mov
jmp
cmp
jne
xor
jmp
push
push
call
mov
xor
cmp
jl
cmp
jg
push
call
pop
mov
cmp
jne
xor
mov
call
mov
push
lea
push
call
pop
pop
mov
jmp
push
call
pop
mov
mov
cmp
jne
mov
jmp
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
xor
mov
cmp
jg
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
push
call
pop
mov
call
cmp
jne
cmp
je
push
call
pop
orl
call
mov
jmp
push
call
pop
ret
xor
call
ret
call
ret
mov
cmp
je
push
call
orl
jmp
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
push
push
call
mov
xor
cmp
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
mov
mov
mov
cmp
je
decl
jne
cmp
je
push
call
pop
orl
call
push
call
pop
movl
mov
mov
cmp
je
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
mov
decl
cmp
je
cmp
je
cmp
jne
push
call
pop
orl
call
push
call
pop
call
ret
xor
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
cmp
je
mov
test
jne
push
call
push
call
push
pushl
call
ret
jmp
jmp
call
test
jne
call
xor
ret
push
push
push
call
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
call
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
mov
call
orl
mov
mov
jmp
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
mov
push
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
cmp
pop
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
test
pop
lea
movb
je
push
call
pop
or
jmp
xor
pop
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
push
call
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
jns
and
mov
jmp
orl
or
pop
mov
andl
mov
pop
mov
pop
ret
push
mov
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
pop
neg
sbb
pop
ret
xor
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
mov
cmp
je
testb
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
incl
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
pushl
push
call
pop
pop
ret
orl
call
cmpl
mov
je
mov
call
ret
push
call
pop
ret
push
push
call
xor
cmp
jne
push
call
pop
jmp
pushl
call
pop
mov
pushl
call
pop
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
call
pop
ret
mov
ret
mov
test
push
push
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
test
pop
pop
mov
jne
push
push
mov
call
test
pop
pop
mov
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
and
sar
mov
lea
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
xor
pop
ret
call
cmpb
je
jmp
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
push
mov
push
push
mov
mov
test
mov
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
lea
mov
mov
sub
dec
test
mov
jle
push
push
push
call
mov
jmp
cmp
je
mov
sar
mov
mov
and
lea
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
xor
inc
push
lea
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
lea
sub
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
mov
push
mov
and
sar
push
lea
lea
mov
shl
testb
je
push
push
push
pushl
call
add
mov
add
testb
je
cmp
mov
mov
mov
jbe
mov
sub
lea
mov
cmp
jae
mov
incl
mov
inc
cmp
jne
incl
movb
inc
incl
mov
inc
incl
cmpl
jl
mov
lea
sub
push
lea
push
push
lea
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
xor
cmp
jb
jmp
call
mov
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
movl
call
mov
jmp
push
lea
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
jne
xor
jmp
call
movl
call
mov
or
jmp
sub
pop
pop
mov
pop
call
add
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
mov
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jae
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
mov
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
int3
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
pushl
call
test
pop
je
cmp
jne
xor
jmp
cmp
jne
xor
inc
incl
testw
jne
push
push
lea
cmpl
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
orw
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmpl
je
push
mov
testb
je
push
call
andb
andl
andl
andl
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
call
add
ret
call
add
ret
push
call
mov
mov
xor
cmp
je
inc
cmp
jb
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
mov
pop
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
push
mov
push
call
cmp
pop
jne
call
movl
or
pop
ret
push
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
sar
mov
mov
lea
lea
andb
mov
pop
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
mov
sub
push
push
push
mov
mov
xor
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
mov
sar
mov
and
lea
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
cmp
jb
cmpl
jne
mov
jmp
test
js
call
movl
or
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
jmp
cmpb
jne
incl
inc
cmp
jb
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
push
call
pushl
call
pop
andl
pushl
call
pop
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
xor
inc
jmp
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
je
xor
jmp
movl
or
jmp
test
jne
or
inc
mov
cmp
jne
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
mov
cmp
je
testb
jne
cmp
jle
cmp
jge
lea
push
call
pop
test
je
mov
pushl
push
call
pop
pop
mov
mov
testb
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
mov
cmp
je
push
add
push
call
pop
pop
test
mov
jne
pushl
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
orl
orl
call
mov
call
ret
mov
push
call
pop
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
jne
pushl
call
push
call
mov
mov
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
jb
mov
cmp
je
call
jmp
push
mov
call
pop
push
mov
call
pop
orl
call
cmp
jne
mov
pushl
call
xor
xor
inc
cmp
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
lea
jmp
cmpl
je
lea
push
call
mov
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
rolb
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pushf
roll
movsb
roll
mov
inc
add
roll
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
inc
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
add
rolb
in
rolb
hlt
rolb
cld
rolb
add
inc
add
inc
add
roll
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
push
push
push
push
mov
xor
xor
pushl
call
pushl
mov
call
add
inc
cmp
pop
pop
lea
jb
inc
push
call
mov
test
pop
je
mov
xor
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
inc
cmp
jb
movb
pop
pop
mov
pop
pop
ret
push
mov
push
push
andl
push
push
push
mov
lea
movl
pushl
call
pushl
mov
call
add
pop
lea
add
decl
pop
mov
jne
inc
push
call
mov
test
pop
mov
je
push
add
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
movb
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
mov
movl
mov
pushl
call
pushl
mov
call
addl
pop
pop
mov
add
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
add
push
call
mov
add
test
je
push
pushl
lea
push
call
andl
lea
mov
add
sub
mov
mov
mov
mov
pushl
push
call
push
call
mov
lea
mov
mov
pushl
push
call
push
call
addl
add
incl
cmpl
lea
jb
lea
mov
lea
mov
movl
jmp
mov
mov
mov
pushl
push
call
push
call
lea
mov
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
add
pop
pop
mov
pop
leave
ret
cmpl
push
mov
je
push
mov
test
je
mov
mov
incl
inc
decl
cmpl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
je
cmpl
mov
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
dec
lea
test
je
push
cltd
pop
idiv
mov
add
incl
mov
dec
cmp
jne
mov
add
sub
jmp
mov
pop
pop
leave
ret
push
mov
movsbl
cmp
push
mov
push
mov
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
cltd
push
pop
idiv
mov
test
jne
push
pop
jmp
pushl
mov
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
movb
incl
decl
jmp
pushl
mov
push
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
cltd
push
pop
idiv
pushl
push
add
imul
add
pop
mov
call
pop
jmp
pushl
push
push
push
push
pushl
call
add
test
jne
xor
jmp
mov
test
jne
push
pop
jmp
lea
jmp
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
cmp
jl
jmp
pushl
mov
push
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
pushl
mov
inc
push
jmp
pushl
mov
push
jmp
cmpl
pushl
push
push
push
je
push
pushl
call
add
test
je
cmpl
je
mov
movb
incl
decl
jmp
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
inc
pushl
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
xor
cmp
setne
mov
jmp
pushl
mov
cltd
push
pop
idiv
mov
jmp
cmpl
pushl
push
push
push
je
push
jmp
push
jmp
pushl
mov
xor
inc
jmp
cmpl
mov
jg
mov
jmp
mov
mov
mov
call
xor
inc
pop
pop
pop
ret
push
push
call
mov
xor
sub
je
dec
mov
je
mov
jmp
mov
jmp
mov
mov
mov
mov
cmpl
je
cmpl
mov
jne
mov
mov
mov
mov
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
lea
push
push
pushl
call
mov
cmp
je
mov
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
xor
cmp
jne
pushl
call
pop
mov
cmp
je
movl
mov
pushl
push
pushl
lea
push
push
mov
pushl
call
dec
cmp
jle
mov
mov
cmpl
jbe
mov
mov
mov
mov
incl
incl
decl
dec
test
jg
cmpl
je
push
call
pop
xor
inc
lea
call
ret
mov
mov
mov
test
je
mov
mov
jmp
mov
cmpl
je
movb
xor
mov
mov
inc
inc
cmp
je
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
push
call
pop
pop
test
jne
add
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
pop
test
jne
add
mov
movb
jmp
add
test
je
mov
jmp
mov
test
je
cmp
je
movzbl
mov
mov
testb
je
cmp
jbe
mov
inc
cmpb
je
mov
mov
incl
mov
decl
jmp
mov
mov
mov
mov
incl
inc
mov
decl
mov
test
jne
jmp
incl
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
jg
mov
jmp
mov
cmp
jne
cmpl
jbe
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
decl
jmp
cmpl
jbe
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
mov
test
jne
mov
mov
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
mov
test
je
pushl
pushl
pushl
pushl
mov
mov
call
add
test
jne
xor
jmp
mov
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
mov
decl
mov
mov
test
jne
jmp
push
mov
push
mov
test
push
mov
jne
mov
mov
mov
test
je
test
push
push
mov
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
jmp
inc
xor
cmpb
jne
inc
inc
push
pushl
mov
pushl
lea
push
lea
call
add
test
je
inc
cmpl
ja
cmpl
jbe
mov
movb
mov
sub
jmp
cmpl
jne
decl
mov
movb
xor
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
call
pushl
pushl
pushl
pushl
pushl
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
mov
ret
mov
ret
mov
ret
push
mov
push
push
test
movzwl
movzwl
mov
mov
jne
or
leave
ret
push
push
lea
push
push
xor
push
inc
push
call
mov
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
push
push
pushl
or
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
mov
or
lea
push
push
push
push
call
add
or
mov
mov
pop
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
cmpl
push
je
push
push
call
mov
test
pop
pop
jne
xor
inc
pop
ret
call
test
je
push
call
push
call
pop
pop
jmp
mov
mov
jmp
andl
movl
xor
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
push
xor
cmp
push
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
je
mov
push
pop
mov
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
xor
inc
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
jmp
mov
movzwl
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
pop
or
push
call
pushl
call
pop
pop
mov
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
test
je
cmpl
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
leave
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
jne
cmp
jne
mov
mov
movl
mov
jmp
push
push
call
mov
cmp
pop
pop
je
push
call
mov
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzwl
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
push
call
pushl
call
add
xor
inc
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
push
pop
mov
mov
rep
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
mov
mov
je
cmp
push
push
jne
movzwl
push
push
push
push
call
add
test
jne
push
call
mov
mov
movl
call
mov
movl
call
cmp
pop
mov
je
cmp
je
cmp
je
mov
xor
mov
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
cmpb
jne
xor
push
push
push
lea
push
push
pushl
mov
push
call
add
test
je
lea
andw
cmpl
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
jg
lea
movw
movzbl
inc
inc
inc
cmp
jle
mov
inc
inc
cmpb
jne
push
lea
push
push
call
mov
add
mov
mov
mov
xor
pushl
call
pop
mov
pop
pop
jmp
mov
pushl
call
push
call
pop
xor
pop
inc
jmp
movl
mov
mov
xor
mov
pop
call
leave
ret
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
add
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cltd
sub
mov
mov
sar
lea
pushl
mov
pushl
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
orw
call
mov
mov
ret
push
mov
sub
mov
push
mov
test
mov
je
cmpb
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
pushl
call
test
je
lea
push
call
pop
mov
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
mov
push
push
push
push
xor
pop
mov
lea
cltd
sub
sar
mov
imul
mov
cmp
je
jae
lea
jmp
lea
cmp
jle
push
pushl
pushl
pushl
call
pop
pop
pop
pop
ret
mov
dec
je
dec
dec
je
sub
je
sub
je
sub
je
dec
je
dec
dec
jne
imul
add
jmp
imul
mov
jmp
imul
mov
jmp
imul
add
jmp
imul
add
jmp
imul
add
jmp
imul
add
test
je
cmp
jl
mov
lea
push
push
push
call
xor
add
movb
inc
jmp
xor
jmp
inc
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
jg
add
add
movsbl
shl
add
mov
test
jne
ret
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jg
inc
jmp
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
lea
push
mov
and
push
or
push
call
test
je
lea
call
cmp
je
cmpl
je
push
pushl
call
mov
pop
mov
call
cmp
pop
jne
xor
jmp
xor
inc
mov
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
push
push
lea
push
pushl
call
test
pop
pop
mov
mov
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
test
pop
pop
jne
orw
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
mov
jmp
testb
jne
push
call
test
pop
je
orl
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
xor
inc
jmp
lea
push
pushl
call
pop
xor
test
pop
jne
orb
cmp
jne
cmp
je
pushl
call
cmp
pop
jne
push
jmp
cmp
jne
mov
cmp
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orb
cmp
jne
mov
mov
shr
not
and
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
cmp
jne
push
jmp
cmpl
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
pushl
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
andl
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
neg
sbb
andl
inc
cmpl
pop
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
mov
test
je
test
je
test
jne
andl
ret
pushl
call
sub
neg
sbb
inc
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
testb
jne
andl
ret
push
xor
cmp
push
jne
cmpl
jne
mov
mov
jmp
movl
mov
cmp
je
lea
cmp
mov
mov
mov
je
cmp
je
push
push
push
call
mov
mov
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
cmp
je
cmp
je
call
jmp
call
cmp
jne
xor
jmp
push
lea
call
mov
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
je
cmpw
jne
push
push
call
pop
pop
jmp
push
push
push
push
call
test
je
push
lea
push
push
pushl
call
test
je
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
push
call
push
call
pop
andl
call
mov
mov
mov
mov
cmp
je
test
je
decl
jne
push
call
pop
mov
mov
mov
mov
incl
orl
call
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
lea
lea
testb
je
mov
ret
call
movl
call
andl
or
ret
push
push
call
mov
mov
sar
mov
and
lea
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
push
lea
push
call
pop
pop
xor
jmp
incl
orl
call
mov
sar
and
lea
mov
lea
push
call
xor
inc
call
ret
mov
push
call
pop
ret
mov
mov
and
sar
mov
lea
lea
push
call
ret
push
push
call
orl
push
call
pop
test
je
push
call
pop
xor
mov
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
testb
jne
xor
cmp
jne
push
call
pop
movl
cmp
jne
push
lea
push
call
pop
pop
test
jne
push
lea
push
call
pop
pop
or
jmp
incl
mov
call
lea
push
call
testb
je
push
call
add
jmp
mov
mov
push
call
pop
ret
orl
mov
sub
cltd
push
pop
idiv
mov
shl
add
mov
cmpl
jne
inc
jmp
mov
push
call
pop
mov
test
je
lea
mov
addl
mov
add
cmp
jae
movb
orl
movb
andl
add
mov
jmp
shl
mov
push
call
pop
test
jne
orl
orl
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
testb
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
mov
cmp
jne
call
movl
call
andl
or
jmp
andl
pushl
push
call
pop
pop
or
mov
mov
sar
mov
and
lea
mov
mov
orl
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
push
call
pop
push
call
test
jne
call
mov
jmp
andl
cmpl
je
call
mov
mov
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
mov
cmp
je
testb
je
push
call
pop
cmp
je
incl
cmp
jl
mov
mov
add
push
call
mov
pushl
call
pop
mov
mov
inc
jmp
orl
call
mov
call
ret
push
call
pop
ret
incl
push
call
test
pop
mov
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
mov
lea
movsbl
and
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
movl
jmp
pushl
lea
push
pushl
push
call
cmp
mov
jne
call
test
je
push
call
pop
mov
mov
jmp
mov
sar
mov
and
lea
lea
andb
mov
mov
pop
pop
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
pushl
push
call
add
mov
mov
jmp
call
movl
call
andl
orl
orl
orl
call
mov
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
mov
call
ret
push
mov
sub
mov
push
push
xor
test
movl
mov
jns
mov
movb
jmp
movl
movb
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
jne
movl
jmp
movl
jmp
movl
cmp
je
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
push
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
movl
jmp
movl
mov
test
mov
je
mov
not
and
test
js
xor
inc
test
je
orb
or
cmpl
jne
orl
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
call
movl
call
andl
mov
jmp
mov
push
push
pushl
movl
mov
mov
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
orb
mov
sar
lea
mov
and
lea
mov
pop
pop
mov
shl
mov
andb
mov
jne
test
jns
testb
je
push
push
push
call
add
cmp
mov
jne
call
cmpl
jne
cmpb
jne
testb
je
mov
lea
orb
mov
pop
pop
pop
leave
ret
push
lea
push
push
movb
call
add
test
jne
cmpb
jne
pushl
push
call
cmp
pop
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
jmp
push
push
call
andl
andl
pushl
pushl
pushl
lea
push
lea
push
push
pop
call
add
mov
orl
call
mov
call
ret
cmpl
je
pushl
call
pop
ret
push
push
call
andl
andl
pushl
pushl
pushl
lea
push
lea
push
mov
call
add
mov
orl
call
mov
call
ret
cmpl
je
pushl
call
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
push
call
xor
mov
push
call
pop
mov
mov
mov
mov
orl
orl
push
call
pop
mov
mov
cmp
je
cmpb
je
mov
cmp
je
push
push
call
pop
pop
test
je
mov
cmp
je
push
call
pop
push
call
inc
push
call
pop
pop
mov
cmp
je
push
push
call
pop
pop
orl
call
push
push
pushl
call
add
mov
movb
add
cmpb
jne
movl
inc
push
call
pop
imul
mov
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
mov
cmp
je
push
call
pop
mov
push
call
cmp
je
xor
inc
mov
mov
imul
mov
cmp
je
mov
imul
add
mov
cmp
je
mov
cmp
je
mov
sub
imul
mov
jmp
mov
mov
lea
push
push
push
pushl
push
push
push
push
mov
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
lea
push
push
push
pushl
push
push
push
push
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
push
lea
push
call
pop
pop
jmp
mov
xor
push
call
pop
ret
cmpb
jne
inc
push
call
pop
imul
add
jmp
cmp
jg
inc
mov
cmp
jge
cmpb
jne
inc
push
call
pop
add
jmp
cmp
jg
inc
mov
cmp
jge
cmp
je
negl
movsbl
mov
cmp
je
push
push
pushl
call
add
mov
movb
jmp
mov
movb
call
ret
push
mov
push
push
push
push
push
mov
mov
mov
push
cltd
pop
idiv
cmpl
jne
test
mov
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
shl
mov
jmp
mov
shl
mov
mov
lea
cltd
lea
mov
idiv
push
pop
inc
push
mov
mov
cltd
idiv
mov
pop
push
sub
mov
dec
mov
cltd
idiv
mov
mov
imul
add
add
lea
cltd
pop
idiv
mov
imul
sub
add
cmp
jg
lea
jmp
add
cmpl
jne
cmpl
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
mov
jmp
mov
mov
cmp
jle
sub
jmp
test
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
jmp
mov
add
imul
add
imul
cmpl
jne
add
mov
imul
add
mov
mov
jmp
add
mov
add
imul
add
mov
jns
add
dec
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
leave
ret
push
xor
cmp
jne
xor
pop
ret
push
xor
push
mov
inc
cmp
jne
cmp
je
cmp
je
cmp
movzwl
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
jmp
movzwl
push
push
push
push
push
movzwl
push
call
movzwl
movzwl
add
cmp
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
movzwl
push
call
add
jmp
movzwl
push
push
push
push
push
jmp
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
add
mov
mov
cmp
mov
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
xor
jmp
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
push
call
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
incl
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
call
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
call
mov
orl
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
xor
cmpl
mov
push
jne
push
lea
push
mov
push
pushl
mov
pushl
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
call
mov
add
cmp
je
push
call
mov
cmp
pop
je
push
push
push
pushl
movl
pushl
call
mov
add
cmp
je
push
call
cmp
pop
mov
mov
jne
cmp
je
push
call
pop
or
mov
pop
pop
pop
call
leave
ret
push
push
push
call
add
cmp
je
push
call
pop
jmp
cmp
jne
push
push
mov
push
pushl
pushl
call
add
test
je
mov
mov
mov
movzbl
push
call
test
pop
je
mov
mov
imul
add
sub
inc
inc
cmp
mov
jl
xor
jmp
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
jne
pushl
pushl
call
pop
pop
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
mov
mov
inc
test
je
cmp
je
pop
sub
pop
pop
leave
ret
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
inc
decl
mov
je
cmpl
je
cmp
je
mov
pop
sub
pop
jmp
xor
pop
leave
ret
cmpl
je
movb
inc
neg
push
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
push
mov
push
xor
cmp
mov
mov
push
je
movb
inc
neg
adc
neg
mov
mov
pushl
pushl
push
push
call
cmp
mov
mov
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
xor
inc
push
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
mov
push
pushl
pushl
pushl
call
mov
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
mov
mov
mov
ret
push
push
call
pop
pop
ret
mov
mov
mov
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
mov
mov
call
mov
push
push
push
xor
push
pushl
mov
call
or
add
cmp
mov
je
push
push
pushl
call
add
cmp
je
push
mov
sub
test
jle
mov
push
lea
push
push
call
push
pushl
call
add
mov
cmp
mov
jge
mov
push
lea
push
pushl
call
add
cmp
je
sub
test
jg
jmp
call
cmpl
jne
call
movl
or
pushl
pushl
call
pop
pop
jmp
jge
push
pushl
pushl
call
pushl
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
call
movl
call
mov
call
mov
push
pushl
pushl
call
add
mov
pop
jmp
mov
mov
pop
pop
call
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
push
call
pop
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
mov
sub
andl
cmpl
push
mov
push
push
mov
je
mov
mov
and
sar
lea
lea
mov
shl
add
mov
test
jne
test
je
cmpb
je
mov
mov
decl
mov
mov
lea
movl
movb
push
lea
push
pushl
mov
push
pushl
call
test
jne
call
push
pop
cmp
jne
call
movl
call
mov
jmp
cmp
je
push
call
pop
or
jmp
mov
mov
add
testb
je
test
je
cmpb
jne
mov
lea
orb
jmp
mov
lea
andb
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
mov
jmp
incl
push
lea
push
push
lea
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
testb
jne
lea
orb
sub
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
cmpl
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
push
call
pop
andl
pushl
call
pop
mov
orl
call
mov
call
ret
push
call
pop
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
cmpl
sbb
neg
ret
mov
and
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
push
push
call
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
xor
inc
cmp
jne
pushl
call
pop
mov
cmp
je
mov
pushl
push
pushl
pushl
call
test
je
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
mov
cmp
jne
xor
jmp
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
push
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
jmp
pushl
pushl
pushl
pushl
call
lea
call
ret
mov
add
ret
push
mov
push
push
mov
push
mov
cmpl
push
je
cmpl
je
cmp
jbe
xor
inc
cmp
jae
cmp
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
mov
mov
sar
movzbl
testb
je
push
mov
mov
movb
pop
jmp
mov
movb
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
jmp
cmp
jl
cmp
lea
jle
mov
pop
pop
pop
leave
ret
call
mov
cmp
je
call
pushl
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
mov
sar
and
lea
lea
mov
shl
movzbl
push
mov
and
cmp
jne
mov
lea
andb
jmp
cmpl
jne
mov
lea
orb
neg
sbb
and
add
pop
ret
call
movl
or
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
push
call
pop
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
pop
mov
je
push
push
pushl
push
push
pushl
push
push
call
test
je
lea
push
push
call
test
pop
pop
jge
cmp
je
pushl
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
pushl
call
pop
or
jmp
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
mov
mov
xor
xor
inc
cmp
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
pushl
mov
call
pop
mov
mov
cmp
jle
push
mov
call
pop
mov
mov
push
pop
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
jmp
cmp
jg
cmp
jle
push
pop
jmp
lea
push
pushl
call
test
je
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
andl
orl
mov
xor
inc
xor
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
mov
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
test
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
mov
test
jne
lea
push
call
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
cmpl
je
push
call
pop
cmpl
je
pushl
call
pop
mov
jmp
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
push
push
lea
push
pushl
push
push
call
add
mov
test
jne
push
call
pop
jmp
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
test
je
push
call
pushl
call
pop
pop
mov
lea
mov
call
call
ret
push
mov
jmp
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
pop
sar
neg
ret
mov
sub
pop
sar
ret
push
mov
push
xor
test
mov
jne
leave
ret
cmpl
je
add
inc
cmpl
jne
push
lea
push
push
call
mov
test
pop
mov
jne
push
call
pop
mov
mov
jmp
push
call
mov
add
add
mov
pop
test
jne
and
mov
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
push
mov
jne
or
jmp
push
mov
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
cmp
je
xor
cmp
mov
sete
cmp
mov
jne
mov
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
je
xor
jmp
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
mov
sub
pushl
mov
call
mov
cmp
pop
jl
cmp
je
lea
pushl
call
cmp
pop
jne
mov
mov
mov
mov
jmp
mov
mov
inc
add
cmp
jne
mov
shl
push
pushl
call
cmp
pop
pop
je
jmp
cmp
jne
cmp
jge
neg
lea
push
pushl
call
cmp
pop
pop
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
pushl
call
inc
inc
push
call
mov
cmp
pop
pop
je
pushl
push
call
mov
sub
pop
add
pop
mov
mov
inc
neg
sbb
not
and
push
push
call
test
jne
orl
push
call
pop
cmp
je
pushl
call
pop
mov
jmp
pushl
call
mov
pop
mov
jmp
push
mov
test
je
push
call
inc
push
call
test
pop
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
pop
jmp
mov
push
push
jmp
movzbl
testb
je
inc
mov
test
je
movzwl
movzbl
shl
or
cmp
jne
lea
jmp
movzwl
cmp
je
inc
movzbw
test
jne
mov
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
xor
jmp
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
rolb
add
add
jo
add
add
add
cmpsb
fadds
add
fadds
add
add
outsb
fadds
add
fadds
add
fadds
add
fadds
add
add
ljmp
add
fadds
add
fadds
add
add
clc
aam
add
xlat
add
mov
xlat
add
cwtl
xlat
add
mov
add
adc
add
rolb
add
roll
add
add
roll
add
roll
add
add
roll
add
add
add
lods
roll
add
roll
add
roll
add
roll
add
aam
add
aam
add
add
inc
aam
add
add
pop
aam
add
add
add
mov
add
xchg
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
aad
add
aad
add
add
add
data16
add
add
mov
add
mov
aad
add
aad
add
aad
add
add
push
add
cmp
add
dec
add
pop
add
push
add
xchg
add
xchg
add
test
add
mov
add
loopne
add
repnz
add
add
add
push
xlat
add
and
add
cmp
add
dec
xlat
add
pusha
xlat
add
jo
add
add
add
in
roll
add
add
dec
roll
add
add
jl
add
nop
roll
add
rolb
add
rolb
add
rolb
add
roll
add
add
loopne
add
rcl
add
mov
add
movsb
roll
add
add
add
rolb
add
rolb
add
rolb
add
add
add
add
add
ljmp
add
add
jnp
add
push
into
add
push
into
add
add
add
popf
inc
jecxz
cld
mov
decl
in
incl
cmp
xchg
jmp
jae
jmp
je
or
cld
aaa
add
dec
fdivl
pop
in
decl
and
fistpll
das
popl
and
jle
push
add
add
in
mov
addr16
and
xchg
xlat
mov
add
scas
hlt
cmpsb
loop
js
mov
add
mov
insl
sti
popa
das
add
add
add
xchg
incl
add
js
daa
clc
jecxz
lcall
add
in
movsl
xor
and
pop
fst
cmp
add
mov
add
and
pop
cld
mov
mov
jg
pop
add
mov
decl
pushf
inc
cmp
hlt
push
add
cmpsl
mov
and
pushl
sub
incl
sbb
push
in
mov
nop
out
hlt
mov
add
decl
mov
fcomps
popl
clc
add
cmp
incl
adc
std
push
add
mov
adc
sarl
cmp
psubw
mov
outsl
inc
mov
add
and
int
outsb
addb
add
arpl
mov
mov
adc
add
andl
xchg
adc
and
add
add
aad
mov
add
and
or
xor
add
in
loop
test
push
jp
add
sarl
dec
or
ja
add
mov
fs
add
call
sub
jmp
in
jecxz
add
inc
enter
add
xor
dec
imul
sub
incl
add
inc
incl
add
sub
mov
mov
xchg
sbb
add
push
sub
mov
push
and
int
add
int3
std
cli
mov
ss
cmp
mov
add
into
sub
add
imul
add
sub
pop
push
call
lods
pusha
dec
mov
insl
add
cmp
in
call
mov
icebp
cwtl
jae
add
add
and
and
out
out
pusha
pop
and
cmp
imul
sub
add
inc
notl
add
jg
mov
insb
jne
incl
or
cmc
adc
mov
xchg
imul
mov
xchg
sbb
jns
add
xchg
sub
adc
adc
push
ljmp
cwtl
test
add
sub
adc
add
adc
mov
pop
out
fdivrl
push
adc
mov
sbb
adc
add
incl
pop
aas
pop
mov
add
andl
movsl
scas
add
add
int
sbb
int
out
fwait
out
sub
fsubs
mov
data16
mov
add
in
add
and
mov
pop
or
add
aas
or
mov
xchg
mov
lcall
hlt
test
mov
decb
lahf
incl
sbb
jbe
add
sub
in
push
push
incl
sub
stc
movsb
or
add
add
or
add
test
lock
arpl
mov
and
jge
mov
mov
xor
inc
xchg
adc
call
lods
adc
and
mov
push
dec
add
fistl
negl
xor
add
jo
imul
call
add
lcall
lcall
jmp
mov
add
fistpll
adc
add
and
push
sub
orl
jmp
lahf
dec
fisubs
sub
cs
addb
mov
test
pop
and
jae
xchg
out
add
add
sbb
and
lret
lret
mov
push
or
pop
mov
add
push
popa
incl
popf
arpl
sbbl
mov
leave
sbb
mov
cmp
sbb
push
sbb
inc
pop
xorb
mov
sbb
xchg
ss
fcomi
sub
lods
test
mov
add
hlt
cmp
add
add
inc
cld
jl
movb
and
xor
mov
add
iret
mov
jle
iret
adc
ja
sbb
aam
jne
mov
xchg
test
jp
ss
jns
mov
jp
in
xchg
cli
and
and
cli
addr16
roll
fldz
and
add
and
ljmp
inc
dec
add
add
ds
leave
fldenv
mov
decl
xlat
add
add
sbb
mov
lret
mov
lock
push
and
and
push
xchg
xchg
jmp
stos
mov
cmc
mov
xorb
rolb
or
and
and
xchg
jae
inc
mov
add
and
and
repz
js
add
xchg
and
insb
add
inc
negb
adc
daa
gs
sbb
xchg
add
test
add
fdivrp
cmp
dec
cltd
add
and
pop
lock
movsb
add
jae
and
mov
add
and
add
mov
int
add
xor
add
mov
hlt
test
or
hlt
jns
xchg
rolb
mov
cmpsb
sbb
sub
dec
nop
out
mov
add
aam
decb
add
jl
daa
jl
or
dec
stos
push
add
int
stc
add
dec
insl
out
roll
push
and
mov
cmpsb
cld
jp
mov
add
add
icebp
outsb
adc
or
incl
decl
test
mov
rcrb
call
sbb
inc
and
insb
call
iret
and
or
das
out
mov
add
shrl
add
cwtl
push
sar
sbb
adc
xchg
mov
and
incl
or
cwtl
imul
xchg
mov
add
mov
and
and
push
mov
addr16
mov
mov
add
jg
inc
cmp
add
sub
loop
scas
inc
mov
push
and
mov
add
sar
add
js
cmpsb
test
fdivr
and
cs
add
call
and
mov
daa
inc
and
push
sbb
add
out
add
add
add
or
call
pop
in
add
sub
inc
je
mov
mov
adc
lds
cmpsl
and
mov
add
pushfw
xlat
mov
addb
sti
pop
inc
sub
adc
lcall
ljmp
add
cmp
out
nop
add
xchg
inc
xor
cmp
pushl
into
push
jmp
add
cmpsl
data16
sub
add
cmp
adc
enter
in
add
mov
scas
mov
cltd
dec
fldl
add
aad
jbe
bound
iret
add
mov
add
mov
pushl
fstpt
pushl
inc
or
add
mov
mov
cmp
add
lods
cmp
xchg
jge
int
decl
xlat
xor
shll
mov
xor
ds
rolb
add
into
and
cmp
mov
je
incl
jmp
pop
pop
adc
outsb
sbb
add
loop
add
add
js
dec
out
add
mov
loope
ss
and
hlt
sbb
lcall
pop
fsubrs
call
dec
jae
inc
repz
pop
out
xchg
sub
xor
fwait
add
mov
xor
inc
jmp
adc
adc
mov
add
into
mov
jbe
add
xor
add
mov
test
pop
pop
adc
cs
dec
add
mov
jmp
lret
or
adc
mov
movb
add
call
adc
stc
out
sbb
push
sub
push
dec
inc
rorl
add
or
std
sbb
add
int3
jo
pop
fisubrs
test
add
ljmp
ljmp
sti
cmp
cld
xor
and
mov
sbbb
mov
add
sbb
shl
int
add
adc
sbb
pop
test
xlat
add
jnp
mov
xchg
cmp
add
cmpsb
ljmp
add
out
push
inc
enter
add
loopne
std
dec
nop
push
and
add
and
out
cmpl
nop
lea
mov
mov
add
add
add
push
inc
out
add
and
ljmp
rolb
mov
jl
test
clc
add
sub
test
mov
add
or
xor
add
fnstcw
mov
mov
cmp
sahf
jbe
mov
shlb
adc
sbb
loop
incl
add
mov
scas
xorb
add
inc
sbb
int3
push
push
negl
add
inc
dec
dec
or
loop
inc
arpl
and
incw
add
movsb
ret
lcall
add
scas
sbb
stc
mov
mov
insl
xor
xchg
jmp
mov
out
andb
popf
cmp
mov
cs
rolb
pop
add
inc
inc
add
pop
cmpsb
fiaddl
cmp
outsl
xorb
stos
dec
cs
add
adc
mov
mov
incl
add
xlat
arpl
add
dec
mov
mov
stos
in
sbb
or
sub
add
iret
add
clc
inc
inc
and
iret
aas
sub
jmp
or
sbb
incl
adcb
add
sub
shlb
push
or
data16
or
cwtl
rcll
dec
and
adc
jmp
mov
dec
cmp
xlat
jnp
inc
mov
mov
add
dec
stc
mov
mov
lcall
add
add
xchg
jp
cltd
popf
rolb
add
ret
loop
lahf
add
adc
imul
add
cmp
add
add
dec
or
jmp
test
dec
aad
iret
mov
lods
decl
icebp
add
add
cmc
cmp
data16
push
and
incl
push
mov
and
add
xchg
or
pop
add
fsubrs
ss
mov
sub
cmpsb
cwtl
decl
andnps
mov
mov
xor
jns
add
js
roll
outsl
testl
add
roll
ljmp
xor
add
add
push
add
ret
out
arpl
add
cmp
into
add
arpl
push
call
push
fldcw
xor
testb
aad
cmp
ret
mov
aaa
test
add
and
inc
addl
or
imul
jmp
fistl
decl
pop
xlat
xor
cmpsl
lret
sub
sub
sbb
adc
and
or
xlat
mov
incl
mov
add
popa
lret
sbb
mov
in
outsb
subb
adc
loope
inc
mov
sldt
add
sub
pusha
mov
add
fwait
nop
addb
pop
lret
int
and
mov
adc
dec
cmpsb
arpl
mov
out
adc
add
add
add
iret
pop
add
add
or
in
jmp
rol
add
gs
add
and
sbb
sub
add
add
and
mov
and
clc
idivb
sub
movb
jmp
out
sub
add
int3
add
mov
add
add
or
incl
xchg
push
notb
add
pop
enter
jbe
fmull
adc
lcall
aaa
sub
cmp
add
adc
or
incl
lahf
dec
stos
cmp
inc
or
mov
call
insb
call
cltd
pushf
incl
push
in
and
adc
add
mov
pop
out
jb
cmp
add
int
add
mov
push
outsb
fsubs
jb
fcmovnu
push
jmp
mov
je
add
jg
xchg
in
xchg
sub
add
int
ret
daa
stos
add
mov
push
add
add
repz
jmp
xlat
in
cs
dec
add
or
nop
imul
icebp
mov
add
add
cltd
xchg
jmp
in
in
add
ljmp
je
call
decb
jae
ss
ljmp
iret
roll
add
push
push
or
add
scas
leave
mov
into
adc
or
add
subb
enter
and
xchg
shlb
mov
add
in
mov
and
add
mov
sbb
or
scas
mov
cltd
rcrb
cmc
add
mov
sbb
jecxz
add
das
arpl
push
adc
add
or
lock
stos
icebp
les
les
lcall
incl
push
fdivs
decl
in
pushl
jmp
mov
in
pop
dec
jae
add
pusha
dec
addl
jno
enter
pop
aad
inc
add
add
ja
adc
incl
out
adc
jo
je
mov
mov
xchg
test
add
push
cli
xor
loopne
add
packssdw
add
pop
nop
or
add
add
pop
jne
push
add
add
xchg
add
or
cmp
add
in
add
scas
cld
inc
ja
jl
fdivr
js
push
push
sub
and
adc
add
scas
outsl
add
xchg
fldt
add
or
add
sti
pop
mov
inc
or
repz
sti
fs
add
mov
call
aas
clc
adcb
pop
sub
mov
lock
adc
int3
decl
invd
xor
incl
mov
fcmovb
mov
adc
mov
movntps
push
sti
add
add
aam
jp
out
mov
enter
ds
sbb
xchg
mov
dec
movsl
xchg
xchg
inc
stos
add
out
jecxz
sub
xor
roll
add
pop
push
incl
mov
fdivl
xor
adc
and
in
mov
cmp
sbb
inc
inc
inc
cs
add
testb
and
jns
jmp
add
jo
sbb
incb
mov
enter
arpl
inc
sub
scas
loopne
cld
pop
add
out
add
cmp
and
push
add
sub
add
mov
jp
mov
repz
jmp
movlhps
lods
add
add
pextrw
mov
and
and
inc
iret
and
add
aad
roll
add
pop
jae
mov
decb
add
inc
add
add
push
cmp
pop
stc
fdivl
cli
and
dec
pop
add
sub
mov
adc
pop
cmp
fistps
push
int3
sbb
iret
sub
mov
sub
add
add
popa
fwait
and
inc
rclb
add
js
add
stos
popf
mov
mov
add
dec
cmc
cmpsb
mov
add
add
lds
add
add
call
xchg
adc
pop
je
add
pop
jne
mov
loopne
iret
push
jmp
in
shlb
test
and
into
out
or
andb
loop
insl
pop
add
aaa
cltd
cmp
add
cmp
test
popf
ljmp
adc
and
and
call
pop
jge
aaa
mov
imul
jmp
lret
decl
scas
out
sar
add
mov
add
movsl
inc
mov
aas
add
movsb
in
jmp
daa
ret
xor
hlt
inc
add
lret
lcall
add
mov
imul
add
sub
cltd
popl
je
xchg
jnp
mov
fistpl
add
add
sarl
incl
and
and
out
mov
mov
xchg
xor
dec
and
sbb
incl
int
adc
scas
incl
add
test
rolb
and
loopne
jle
je
add
stc
popa
cld
mov
pop
fs
lcall
and
fsubl
jnp
rol
lea
incl
push
ljmp
or
movsb
data16
sbb
dec
or
mov
add
mov
jmp
out
jbe
fld
xlat
add
adc
mov
mov
fldcw
add
add
push
cmp
aas
jmp
iret
ja
inc
cmp
add
and
mov
add
add
les
mov
mov
in
mov
add
ret
xchg
jnp
inc
sub
and
mov
leave
jo
cmpsb
add
loop
jle
hlt
incl
add
xor
repz
add
and
dec
das
xbegin
lahf
cmc
es
jmp
rolb
and
cwtl
fnstenv
incl
mov
addl
push
in
jno
mov
mov
fimuls
jl
jge
sar
mov
cmc
and
dec
push
xor
add
call
mov
and
into
push
and
pusha
sub
add
cli
jl
add
inc
xchg
xchg
les
push
cmp
or
and
add
in
jns
jecxz
add
out
cmp
pushf
js
add
mov
sub
sub
add
aam
add
adc
xchg
arpl
adc
test
hlt
shll
cmp
add
mov
ss
incl
outsl
jge
mov
out
pop
sbb
in
sbb
flds
mov
imul
scas
mov
add
add
mov
sbb
sar
add
std
sbb
add
and
mov
add
and
andb
xorl
jle
gs
adc
dec
js
mov
incl
lahf
add
cmp
ljmp
cli
and
add
or
xor
add
popf
lcall
and
and
out
inc
jns,pn
xchg
jmp
fistpll
fidivs
mov
cmpsl
and
aaa
cmp
test
add
adc
fsubrs
inc
popl
and
dec
call
ret
xchg
sub
test
push
outsb
inc
adc
and
sti
aam
add
push
jp,pt
cmp
add
add
pop
lock
jo
and
or
ljmp
out
jne
incl
fidivrl
pop
add
lea
push
and
add
jbe
add
and
pop
mov
add
adc
cmpsl
pop
insb
xor
incl
push
mov
cmc
pop
pop
fdivs
mov
sub
lods
out
cltd
sbb
fstpl
repz
xchg
or
add
mov
adc
test
add
jb
mov
pop
jmp
inc
and
sub
fists
mov
call
lods
add
and
xor
out
loopne
cli
fldpi
sbb
cmpsb
fisubl
ret
aaa
ret
inc
sbb
pop
notl
inc
lahf
inc
sti
add
incl
pop
sbb
cli
mov
and
stos
mov
ljmp
xor
and
iret
mov
mov
add
mov
jno
leave
in
lods
incl
add
adc
sub
add
inc
cmp
imul
add
cmp
push
shlb
jmp
xor
clc
and
sbb
add
cmp
jle
incl
arpl
call
xor
mov
das
push
or
mov
xchg
mov
sub
mov
icebp
decl
or
orl
aaa
add
jge
jno
add
jmp
out
jb
outsl
sub
idiv
mov
mov
incl
das
xor
in
cmp
mov
add
adc
test
jno
and
incl
mov
cwtl
inc
push
push
jg
mov
enter
push
pop
ret
incl
adc
cmp
add
add
add
ljmp
adc
out
pushf
sahf
mov
jae
xchg
mov
and
add
add
push
xchg
cmp
jns
add
and
cli
add
ja
sbb
adc
inc
rclb
add
and
add
mov
jecxz
icebp
jmp
adc
inc
gs
sub
incl
add
cli
mull
mov
cmp
pop
iret
add
push
movsl
add
movsl
push
int3
decl
daa
push
inc
push
mov
xchg
add
xor
jbe
jp
decl
hlt
outsl
in
ljmp
and
lret
and
mov
lea
cmp
and
xlat
imul
adc
adc
adc
add
jecxz
jp
repz
push
add
lret
cmp
xchg
mov
pop
inc
cmc
and
shll
and
lcall
or
add
jns
add
add
fistpl
xorl
fisttpll
out
pop
and
mov
incl
add
cmpsl
aas
add
in
ja
aad
test
mov
add
lret
and
lret
mov
dec
and
incl
cltd
push
add
call
sbb
cwtl
daa
popl
cmpl
arpl
outsl
jp
addr16
imul
push
pop
mov
and
mov
mov
add
mov
sub
add
loope
jb
add
sbb
mov
adc
es
push
jecxz
xchg
add
sahf
add
adcl
add
add
jle
adc
and
dec
add
sahf
adc
mov
dec
xchg
mov
pop
mov
dec
sbb
incl
and
stos
add
jmp
xchg
add
xchg
add
inc
into
testb
sbb
adc
fnsave
enter
add
pusha
jle
mov
add
mov
frstor
jae
test
incl
mov
decl
sub
mov
testb
sub
cltd
dec
add
inc
fidivs
and
iret
add
and
xor
pop
shll
sti
push
fidivl
mov
jnp
incl
add
mov
std
cwtl
es
pop
out
or
add
push
js
out
add
and
mov
or
add
mov
push
sbb
add
inc
fsubp
incl
mov
lret
loop
inc
jle
cwtl
mov
leave
inc
clc
inc
pusha
or
add
incl
xor
adc
pop
movl
aad
add
es
add
fwait
jg
out
xchg
loop
xchg
repz
bound
jb
add
incl
add
lds
add
add
push
sbb
add
dec
sub
call
fdivr
icebp
mov
roll
mov
hlt
mov
add
test
sub
add
add
sub
xor
cmp
add
push
hlt
push
add
add
subb
call
iret
in
decl
cli
xor
incl
add
mov
test
mov
add
movsl
incl
jp
add
inc
add
push
fsubrp
in
incb
add
cmp
lods
popa
imul
and
cmc
push
test
add
add
xor
jnp
and
mov
xchg
fldl
add
dec
mov
add
adc
add
hlt
sbb
insb
aad
shrl
ja
jge
add
fptan
adc
add
mov
xchg
push
and
loop
sub
add
add
cmpsb
and
mov
cs
mov
cwtl
cmpsl
add
inc
add
cmp
sub
bound
add
add
pop
lds
mov
add
add
ss
mov
incl
pusha
fisttps
gs
mov
add
out
fisttpl
movups
add
jmp
adc
xor
dec
mov
std
mov
jp
add
and
add
popf
mov
xchg
in
pop
adc
add
stos
lods
xchg
add
stos
ret
add
lea
mov
aad
pop
jno
jnp
adc
jl
mov
fxam
push
mov
mov
sub
scas
mov
add
add
pop
and
outsl
mov
in
jno
add
stc
test
cli
mov
pop
add
call
add
lret
lahf
and
aaa
mov
mov
and
incl
clc
mov
ret
push
push
inc
adc
popa
mov
add
and
xchg
fucomp
add
test
popa
std
mov
add
std
jl
jmp
ljmp
incl
add
dec
mov
jno
mov
add
test
repz
iret
aas
adc
xchg
and
test
add
lods
es
mov
incl
push
fsubp
cmp
in
aas
add
add
cmp
rclb
jle
adc
loop
sbb
and
mov
and
xorb
xor
incl
cmp
xchg
mov
add
sub
pop
push
sti
repnz
push
xor
insb
rcl
aad
sbb
add
addl
add
cmp
push
mov
sahf
and
jae
add
iret
mov
jnp
adc
pop
or
add
add
incl
mov
jmp
ficomps
add
and
add
outsb
mov
add
add
adc
mov
mov
lret
pop
divl
outsb
movb
xor
mov
adc
out
incl
gs
sub
adc
test
mov
add
ljmp
jmp
jle
add
or
dec
out
add
xor
xchg
jle
mov
fstpl
add
mov
add
insl
mov
add
in
jnp
cltd
fcmovnbe
decl
fidivrl
push
add
jmp
mov
and
add
clc
ret
lcall
ret
and
sbb
cli
pop
and
xchg
jne
add
aam
adcb
pop
cmp
add
orb
add
add
add
test
mov
add
cmp
xchg
je
and
sbb
icebp
jae
lods
inc
jnp
movsb
ljmp
mov
mov
inc
sub
and
std
std
in
add
mov
jge
insl
dec
xchg
pop
add
add
scas
or
cmpsl
xlat
ss
add
xchg
pop
imul
and
add
mov
mov
add
scas
mov
add
loope
movsb
xchg
dec
cli
rolb
add
xchg
xchg
decl
lcall
jno
ds
and
add
mov
sarl
incl
incl
rcrb
je
add
and
add
repnz
mov
mov
imul
out
leave
jp
and
in
jle
and
add
in
in
push
cmpl
mov
sbb
mov
add
andb
add
sti
out
sahf
add
and
mov
test
add
jae
inc
add
decl
sub
add
and
sub
or
out
sti
insb
push
outsb
xor
add
adc
adc
out
pop
lods
es
arpl
cltd
pop
ss
in
or
add
decl
xchg
add
icebp
hlt
add
out
or
add
xchg
mov
sub
add
add
jb
dec
mov
xchg
xchg
add
movsb
test
add
cld
sti
and
add
add
inc
inc
xchg
sub
hlt
leave
pop
mov
add
icebp
lods
js
stc
adc
sahf
push
popa
add
decl
filds
mov
sbb
add
add
xorps
bound
mov
dec
add
outsb
jo
and
or
pop
sahf
in
add
mov
or
add
cli
push
dec
xchg
add
pushl
icebp
mov
testl
cmp
push
sar
fwait
rolb
add
mov
aaa
pop
cmp
add
mov
inc
add
add
sbb
xchg
inc
push
stc
mov
shrb
aas
add
std
mov
add
incl
mov
xchg
loop
adc
and
dec
cmp
stos
jl
loop
add
out
aas
mov
pop
push
push
sbb
imul
mov
xor
js
les
cmp
subb
mov
fidivrs
sub
repnz
cmp
cmp
mov
sub
ds
popa
xchg
lret
add
ret
scas
inc
cmp
ljmp
jo
pop
sbb
add
push
push
xchg
mov
add
add
pop
addb
arpl
add
fists
pushl
jmp
out
cmp
in
incl
add
call
cmp
fldl
out
and
ja
gs
pushl
arpl
or
sbb
add
add
sub
lock
lods
and
add
ret
push
lret
adc
mov
jo
add
out
add
call
pop
add
ds
inc
jge
add
add
clc
fimull
add
add
test
repnz
mov
inc
add
pusha
js
push
push
insl
push
xor
incl
push
sbb
add
mov
inc
addl
add
mov
or
adc
add
and
xor
jl
setae
add
and
mov
mov
jbe
and
sub
add
add
sti
aas
inc
and
mov
add
insl
lcall
and
andb
decl
decl
jae
cmp
inc
add
xchg
pushl
cmpsl
incb
in
add
mov
mov
pusha
sbb
dec
pop
int3
xchg
ret
mov
add
adc
out
add
ja
add
pusha
stos
inc
mov
add
xchg
xchg
aas
adc
or
loop
and
std
jmp
lea
and
fstp
sub
xchg
lods
push
insb
test
sub
frstor
mov
out
jmp
add
add
fsin
mov
mov
imul
or
add
pop
xchg
add
bound
xor
and
lahf
sbb
add
loopne
adc
mov
add
add
mov
lods
push
add
add
out
pop
add
push
subb
add
aaa
xor
add
daa
add
out
repnz
add
incl
xor
test
add
incl
loop
sub
mov
popf
cmpb
mov
dec
cmp
xchg
dec
push
or
jecxz
add
scas
insb
ret
decl
pop
add
add
mov
add
fcomip
push
aam
and
jp
mov
out
dec
push
or
mov
push
pop
int3
add
add
sti
mov
jo
adc
fptan
into
popl
and
lret
addr16
jmp
add
cmpsb
cwtl
lods
and
ss
incl
pop
cmp
dec
leave
add
incl
mov
push
daa
mov
add
mov
out
movsb
add
push
ficoms
mov
test
test
pop
jg
add
add
dec
movsl
xchg
sub
cmp
and
dec
cli
sub
and
add
dec
out
xchg
sbb
mov
adc
incl
add
add
add
data16
mov
movsb
add
inc
mov
out
jae
mov
add
mov
and
imul
sbb
add
add
mov
jecxz
jno
jmp
lcall
sub
bound
pop
jp
testl
add
push
out
decl
push
mov
push
popf
xor
sub
ja
mov
mov
add
sahf
inc
stc
push
insl
pushl
cmpsl
ljmp
roll
sbb
add
xor
ljmp
sti
aas
mov
jl
mov
jo
shrl
out
and
adc
adc
xchg
iret
das
add
mov
mov
sub
and
xor
push
mov
int
add
mov
add
push
push
sbb
add
and
sub
cld
push
mov
aas
dec
pop
or
loopne
mov
aad
sub
ljmp
addl
ljmp
repz
mov
aam
mov
ret
adc
lea
adc
mov
add
and
rcrb
mov
leave
cmp
xor
sub
add
jge
add
mov
and
int
mov
test
add
dec
cmp
mov
mov
test
dec
or
sbb
add
bnd
xchg
xchg
aaa
xor
insl
jl
add
adc
pushl
xor
movsl
mov
mov
add
or
lahf
mov
in
fmuls
aad
xor
add
mov
ficomps
add
jno
xor
add
push
data16
decl
ds
add
ja
loop
add
push
mov
mov
add
stos
aam
test
add
adcl
pop
cmc
movsb
out
dec
add
add
and
fisubrl
fidivs
xor
add
or
adc
ret
mov
add
adc
xchg
adc
ret
mov
in
sarl
jae
add
add
ficoml
in
add
aas
cmp
dec
inc
jmp
dec
rorb
rcrl
repnz
xchg
pop
decb
mov
add
and
out
movsl
incw
and
sub
jmp
and
incl
out
xchg
adc
dec
xor
sbb
push
incl
add
jp
ret
jo
popf
add
add
out
jp
xor
sub
jmp
cmp
add
fists
add
andb
mov
and
add
nop
aam
or
adc
add
push
cltd
sub
cmpsl
mov
jmp
mov
add
mov
lock
dec
mov
dec
mov
sbb
filds
fcmovne
loop
mov
xchg
and
incl
jp
movsl
mov
add
add
cmp
mov
jmp
inc
cmpsb
mov
add
sub
or
xchg
sbbw
and
and
cbtw
das
mov
mov
pop
xor
call
cs
mov
cmp
pop
sbb
add
outsl
push
jle
add
and
cmp
or
mov
pop
mov
pop
stc
mov
mov
ds
loopne
push
cmovbe
adc
pop
sub
incl
add
pusha
out
lea
and
add
fadds
mov
add
pop
ret
incl
loopne
fwait
cmp
cmovle
dec
jle
call
mov
add
js
add
adc
pushl
hlt
inc
and
decl
add
aad
pop
and
xchg
add
outsl
bound
jns
popa
push
popa
jo
jbe
js
outsb
jne
jns
outsl
push
outsl
push
jp
jb
push
outsl
bound
outsl
je
and
xchg
lahf
mov
decl
cmp
add
add
add
in
stos
add
sbbb
lock
loopne
and
call
add
mov
outsl
xlat
addr16
mov
mov
cli
insb
filds
xor
rcl
add
add
inc
hlt
fiaddl
dec
das
add
add
and
cmpsb
ret
cwtl
or
add
add
shlb
mov
jp
and
push
sahf
pop
lock
arpl
add
dec
add
push
bound
add
hlt
jae
aaa
cwtl
ja
incl
cmpsb
inc
cmp
add
add
mov
xor
ljmp
mov
notl
mov
sbb
mov
incl
and
out
sbb
mov
xlat
repnz
jg
cmc
insb
sub
fwait
leave
xchg
fisubs
cmp
aas
aad
or
pop
inc
mov
inc
cmovl
add
loope
add
mov
insl
inc
push
sbb
mov
xchg
add
xchg
add
push
add
decl
outsl
add
sgdtl
add
int3
or
imul
sbb
add
push
jge
je
cmp
mov
xchg
stos
xchg
iret
add
sbb
out
stc
test
mov
and
inc
test
stos
pop
and
mov
scas
call
mov
and
lcall
adc
or
cmp
add
xorb
add
ret
dec
fwait
pop
add
add
push
or
shl
mov
in
and
push
sbbl
insb
dec
mov
ret
sub
mov
popa
pop
xchg
sub
ds
or
leave
xchg
shr
mov
movsl
mov
loope
and
add
or
mov
jmp
jbe
push
inc
and
sub
pushl
jb
mov
fnsave
out
add
xchg
js
mov
and
ret
and
imul
mov
mov
add
cld
shl
add
scas
lods
mov
incl
push
push
add
push
xchg
jmp
inc
call
sahf
mov
test
add
add
mov
and
add
sub
or
and
add
hlt
jge
jl
push
std
lods
sbb
in
pop
jmp
add
stos
imul
mov
add
call
in
mov
call
adc
add
movsl
add
in
cmp
test
loope
lret
fwait
inc
xor
sub
shr
jo
add
adc
popa
push
push
or
test
and
incl
imul
jmp
mov
call
in
adc
adc
xor
add
divb
addr16
incl
mov
jg
mov
testb
pushl
rclb
adc
sub
add
in
xor
jno
aam
mov
test
fadds
add
add
incl
adcl
sbb
lcall
lcall
aad
and
cld
xor
les
scas
fstpt
jmp
cmp
incl
std
rorb
mov
popf
inc
jg
lcall
mov
push
data16
movsb
call
xor
lahf
inc
cmp
fucomip
repz
ficoms
and
add
adc
cltd
push
scas
mov
mov
in
mov
test
xchg
cmp
inc
cwtl
cli
add
je
std
sbb
add
fbstp
ds
out
or
xchg
call
mov
nop
push
fldlg2
mov
mov
fidivrs
mov
push
filds
mov
orb
cmp
add
dec
lret
in
out
and
add
sti
jge
add
add
jb
xchg
cltd
inc
xchg
rcrb
mov
adc
push
lds
sub
dec
mov
add
out
gs
and
adc
cli
jmp
mov
adc
insl
sbb
add
movsl
int3
cmpsb
incl
sbb
push
pop
lock
mov
add
insb
stos
shlb
fdivr
lret
jnp
add
call
cld
decl
cs
daa
fldl
add
scas
sbb
sub
mov
jmp
stc
cmpsl
pop
add
stc
mov
mov
mov
fwait
xor
mov
sbb
push
mov
lret
add
cmc
lret
out
add
add
pop
sbb
add
add
inc
push
lods
loopne
mov
rorb
add
movsb
push
and
dec
add
cmp
fstl
mov
add
cmp
flds
mov
lds
sbb
and
pop
test
add
xor
nop
mov
stos
test
add
imul
add
jmp
and
std
mov
add
add
popa
sub
xor
sub
add
outsb
scas
jne
imul
add
pop
mov
pop
stos
sbb
idivb
aaa
pop
cwtl
sub
add
lods
push
add
roll
pop
dec
repnz
add
add
mov
add
cwtl
je
mov
mov
xorb
jno
or
jmp
lret
mov
clc
popf
inc
test
push
push
xor
adc
pop
xor
and
incl
and
jb
decb
add
cld
sub
add
in
add
mov
jae
ljmp
std
add
insb
cld
inc
add
call
call
sub
adc
add
decl
xor
sarl
es
sub
nop
fwait
add
sub
mov
decl
jg
insl
shlb
shrl
jno
decl
aad
sub
pop
mov
test
and
inc
mov
lods
rorb
cmp
gs
incl
jns
xchg
xor
int
pop
sbb
jmp
cld
repz
aaa
call
shrl
add
incl
shrb
and
je
push
mov
out
mov
xchg
cld
inc
mov
out
mov
adc
imul
add
sub
test
aad
and
decl
scas
ret
add
pusha
dec
mov
mov
add
mov
mov
add
add
push
and
add
outsl
je
add
add
pop
or
push
in
daa
push
add
cmpsb
insb
insb
add
add
xor
jnp
inc
mov
add
add
add
mov
mull
add
movsl
pop
lea
mov
sub
jb
add
lods
cmpsl
incl
pop
dec
sub
adc
sub
mov
enter
mov
add
jno
and
add
xor
jbe
pushl
or
push
lds
xor
out
fildll
in
jp
sti
out
and
aas
add
mov
ret
lcall
lods
jbe
add
jae
stc
adc
out
imul
ljmp
sbb
add
mov
add
jle
sub
add
stc
adc
inc
mov
adc
add
xchg
inc
xor
add
mov
mov
popa
jmp
bound
jb
add
inc
push
lds
add
add
jnp
dec
aam
add
int3
jmp
mov
push
and
add
loop
add
inc
dec
dec
test
push
ljmp
cmp
jnp
add
daa
rolb
add
add
imul
pop
out
add
add
stc
ljmp
and
dec
flds
test
add
nop
aaa
push
sbb
mov
add
add
add
mov
xchg
daa
xbegin
lods
ror
insl
pop
mov
inc
add
cld
fdivrl
xlat
fwait
int3
push
shl
mov
mov
sbb
jmp
add
ljmp
add
mov
mov
popa
ljmp
sbb
xchg
add
ljmp
sahf
call
enter
mov
je
incl
decl
loope
add
lds
add
add
pusha
outsl
and
xchg
lods
add
loopne
insb
test
lods
mov
adc
mov
add
incl
daa
cmp
out
mov
test
add
add
jnp
inc
add
aaa
sti
ljmp
ljmp
js
cwtl
add
jbe
add
mov
sbb
outsl
add
and
sti
or
testl
cmovno
and
call
xchg
cld
add
mov
mov
mov
add
rorl
into
loopne
jmp
push
addl
mov
pop
mov
push
adc
out
add
mov
es
test
add
add
fmuls
jmp
and
stc
pop
dec
add
mov
adc
adc
movsl
jno
gs
add
aas
add
add
shl
xchg
movsl
cmp
lea
in
sti
xor
cmp
jb
in
sub
cwtl
call
jmp
add
pop
pop
mov
sbb
jle
insl
push
add
push
dec
lock
add
clc
clc
adc
addl
sub
in
ljmp
out
aaa
jb
add
and
jmp
incl
and
cmp
or
rorb
mov
dec
push
xchg
jge
rcrb
xchg
incl
or
add
test
mov
movsl
incl
sarl
mov
gs
add
out
insb
push
out
mov
cmovne
stos
imul
jle
add
add
test
add
add
packuswb
add
add
dec
cmc
mov
add
xchg
addr16
jmp
lcall
call
add
cmc
cwtl
out
add
add
and
dec
cli
incl
mov
add
add
dec
adc
imul
stos
push
pop
insl
mov
loopne
push
jbe
add
add
fucomp
push
mov
cmp
into
cmp
or
lods
jne
add
imul
push
nop
decl
repz
mov
mov
mov
ljmp
pushl
or
leave
add
and
add
arpl
out
dec
mov
incl
stc
aas
lds
mov
test
in
sbb
adc
aas
adc
add
add
cmp
leave
xor
or
and
sub
xchg
mov
fmuls
sub
cmpsl
mov
inc
ljmp
add
or
cmc
nop
repz
incl
loopne
mov
idivb
loopne
decb
xchg
incl
daa
aad
into
and
or
das
fcoml
add
jo
add
add
push
add
add
lcall
mov
sbbl
bound
mov
pop
popf
jne
add
add
mov
add
jae
out
mov
add
push
lret
popf
fisttps
mov
testl
add
ds
movsb
add
adc
std
jge
jno
jb
decl
and
and
add
jp
mov
popf
imulb
push
aam
stos
adc
dec
and
add
stos
sahf
or
decl
inc
in
push
into
call
out
repz
adc
mov
out
xor
dec
and
add
jmp
lock
repnz
mov
imul
jae
ja
bound
imul
js
add
add
add
jp
pusha
mov
fimull
add
clc
mov
les
add
pop
int3
add
adc
add
and
out
out
sub
jae
mov
mov
add
add
scas
sub
jp
add
test
adc
sub
cmp
int
subl
sbb
jmp
xchg
add
add
add
add
mov
adc
je
xchg
xchg
movsl
int
add
pop
adc
mov
cmpsb
aad
add
es
mov
pop
ret
sub
add
inc
ljmp
arpl
add
and
add
dec
roll
sub
lret
test
mov
cmp
insb
sbb
add
out
mov
push
jo
loopne
jge
and
mov
ljmp
and
fwait
pop
call
adc
mov
add
add
data16
adc
mov
cs
add
testl
int
push
add
add
popf
js
iret
cmp
movd
add
in
movl
or
ja
and
mov
in
and
mov
cmp
ljmp
add
mov
iret
inc
mov
rorb
mov
les
or
mov
scas
fcmovnu
dec
add
cmp
dec
and
add
jecxz
jno
add
add
jnp
data16
push
xchg
test
jmp
mov
jl
hlt
mov
out
cltd
add
les
rolb
cld
mov
add
add
je
push
cmp
pop
and
insb
lret
add
ret
fldl
adc
xchg
inc
add
ret
xor
dec
xchg
adc
add
sub
incl
add
jno
cmp
xchg
add
add
mov
fidivrl
stos
lods
pop
ja
incl
jg
jns
jp
mov
and
add
out
jecxz
add
add
add
pusha
ja
push
mov
xchg
mov
jg
and
outsl
daa
pop
add
mov
dec
adc
mov
fwait
xor
jnp
sub
lcall
mov
cmp
add
add
inc
add
add
jae
movw
pop
adc
add
jns
lcall
iret
movsb
xchg
fsubrs
add
mov
add
stos
std
scas
sti
add
add
call
es
jnp
add
sub
cmp
in
push
mov
add
call
xchg
sti
or
add
add
add
pop
xchg
test
add
add
stc
movsb
lcall
incl
and
jbe
xor
mov
mov
jns
push
add
lea
mov
add
xor
pushl
mov
add
add
ja
add
cmp
mov
lods
or
add
out
add
pusha
and
incl
in
idiv
sub
fs
call
mov
ljmp
mov
mov
jns
scas
mov
mov
and
call
mov
add
adc
aad
ljmp
add
mov
inc
add
mov
call
fisubrs
xchg
scas
mov
jl
mov
add
add
sbb
mov
cmp
adc
pop
scas
adc
add
cli
sub
mov
test
fisubrs
cmp
add
xchg
test
add
cmpsb
sub
add
aam
xchg
stc
xchg
mov
add
mov
dec
ret
daa
xor
int3
jmp
add
and
and
test
add
and
jbe,pt
fistpll
jmp
jmp
and
pusha
mov
mov
stos
mov
add
cmpsb
jl
outsl
sldt
and
and
cmp
add
mov
adc
std
test
ljmp
push
sbb
add
mov
add
cs
outsb
inc
lock
inc
inc
add
add
sbb
push
add
das
call
pusha
xchg
insb
rolb
out
mov
or
addl
add
add
add
ret
ljmp
arpl
aaa
add
mov
insl
mov
and
mov
pushl
int3
push
jg
aam
and
add
int3
xchg
lods
ds
mov
add
jp
incl
add
lds
popa
sahf
push
xchg
inc
add
inc
jmp
frstor
adc
mov
popf
mov
pop
jno
add
mov
out
add
mov
hlt
cmc
add
add
xor
mov
add
mov
popl
add
jae
rcr
add
inc
jbe
add
insb
pop
test
incl
ljmp
add
adc
stos
add
mov
mov
mov
xchg
xlat
stc
add
lahf
sbb
add
imul
movsb
and
jp
mov
add
sbb
mov
mov
xlat
add
add
sbb
cmp
cmp
xchg
and
xchg
mov
loop
add
mov
jp
dec
cmp
iret
out
add
and
inc
jnp
and
add
int3
adc
and
inc
mov
or
sbb
add
sbb
add
add
daa
iret
insb
mov
mov
and
add
cmp
test
and
mov
mov
es
xchg
push
jo
cmp
pusha
jp
dec
sbb
push
push
incl
mov
cltd
adc
sti
push
jecxz
add
jg
fstp
adc
sub
push
mov
add
bound
mov
add
lods
scas
dec
ja
or
incl
fldl
mov
int
and
add
mov
adc
sub
lret
jmp
outsl
mov
push
incl
jo
xchg
cld
aad
sarb
pushl
js
xor
popf
daa
jmp
lahf
cmp
and
jnp
jmp
incl
stc
pop
xchg
and
push
cmp
pop
and
mov
sahf
mov
pop
icebp
add
in
sub
into
data16
outsl
jp
bound
imul
jae
insb
jne
jns
imul
bound
imul
incl
adc
lahf
nop
mov
incl
adc
add
pop
shll
incl
push
jge
pop
inc
icebp
movsb
cmpsb
add
flds
add
mov
dec
dec
incl
and
lods
icebp
repnz
mov
aas
adc
cmpsl
out
and
jb
add
sub
dec
add
divb
push
push
add
fwait
cmpsl
mov
add
sub
add
mov
mov
cmp
call
mov
mov
jo
mov
sar
hlt
pop
stos
sbb
sub
add
mov
pop
add
sub
add
lcall
shll
mov
sub
and
sub
ds
in
mov
add
incl
add
add
add
add
stc
lods
mov
inc
sub
inc
add
cmp
ljmp
jmp
xor
mov
outsb
pop
ja
cmp
and
and
data16
fildll
sbb
push
in
pop
movsb
mov
and
inc
pushl
in
movsb
out
pop
inc
pop
out
mov
add
add
pop
jle
sub
addr16
add
add
out
call
pop
arpl
mov
xor
mov
push
pop
push
xchg
add
xor
adc
add
push
repz
pop
mov
call
icebp
mov
add
lods
and
mov
mov
mov
js
cmp
mov
incl
incl
push
and
push
and
pushl
add
pop
dec
icebp
mov
and
push
imulb
add
add
or
pop
add
add
or
jne
add
add
and
rorb
adc
mov
and
push
test
add
stos
fmull
dec
mov
add
aad
add
incl
ret
sbb
adc
ljmp
lret
add
cmp
inc
pop
add
xchg
lret
mov
iret
or
cmp
test
add
and
xor
add
jb
and
incl
decl
mov
mov
loopne
inc
or
test
and
ficoms
incl
and
pop
mov
mov
test
decl
push
and
add
sarl
incl
and
inc
cmc
mov
incl
pushl
mov
sbb
gs
add
push
imul
mov
je
add
jmp
adc
mov
js
jmp
clc
insl
test
add
mov
cmp
test
rcl
out
adc
add
les
adc
add
add
vorpd
incl
add
add
jmp
add
cmpsl
sti
std
xor
cmc
fdivrs
jnp
aaa
cltd
xchg
incl
push
and
add
out
xchg
incl
add
call
push
mov
mov
cmp
xor
add
loop
lcall
push
loopne
sub
dec
in
inc
push
test
in
xchg
mov
pop
sbb
add
and
jmp
cli
sbb
and
imull
jmp
ss
push
xchg
xor
inc
add
aaa
jae
jle
add
aad
add
mov
mov
push
push
cmp
incl
dec
mov
test
add
sub
aas
sti
ret
push
add
mov
std
dec
mov
add
scas
mov
insb
jae
decl
fwait
add
loopne
push
incl
or
pop
sahf
mov
xchg
cltd
cwtl
out
and
add
mov
jge
xchg
jo
add
outsb
ds
mov
sbb
jbe
lcall
jecxz
cmp
xchg
xchg
je
ljmp
stos
push
imul
jnp
repz
testb
mov
adc
mov
push
and
add
adc
mov
scas
xlat
xor
and
hlt
movsb
add
mov
out
mov
in
and
xchg
push
cmp
pop
mov
add
pop
clc
or
and
add
loopne
icebp
mov
add
add
push
xor
mov
inc
cmpsl
lahf
inc
add
inc
rolb
add
xchg
gs
hlt
and
decl
movsb
lahf
pop
stos
and
aam
es
mov
incl
outsl
sbb
mov
test
loope
enter
pop
add
dec
and
add
mov
push
and
mov
xor
add
and
xchg
add
add
mov
pop
fcomi
or
pushl
jmp
add
mov
xor
add
add
sahf
sub
add
fcmovbe
addb
inc
jl
add
adc
sub
iret
add
or
add
cli
jl
or
add
mov
dec
xor
or
fildl
add
loope
and
cmp
subb
push
add
or
mov
xlat
notb
incl
mov
sbb
push
jbe
add
add
add
add
and
mov
inc
inc
add
adc
dec
lds
sub
imul
sbb
cmp
add
call
jp
add
add
incl
jmp
add
add
jp
mov
in
call
jl
gs
incl
and
lret
add
mov
incl
fldl
cmpb
bound
call
dec
inc
add
loop
pushl
adc
add
mov
and
sbb
and
xor
add
lcall
roll
and
outsl
jnp
aas
and
sub
in
add
popa
add
add
add
sub
add
in
ds
ret
outsb
out
cmpsl
add
jbe
outsl
add
ficompl
mov
in
leave
shrl
jg
inc
or
ljmp
add
add
and
mov
inc
data16
add
cmp
sub
movw
mov
add
adc
jne
jae
cs
push
in
fisttps
mov
scas
push
incl
add
add
js
arpl
add
add
rcr
ret
call
mov
add
push
lea
add
add
mov
and
and
clc
mov
adc
mov
cmovg
push
sub
and
fnstsw
scas
add
sahf
aas
fwait
add
add
into
xchg
cmp
cwtl
push
idiv
add
fbld
imul
in
mov
or
and
add
add
xor
fwait
out
incl
or
add
add
test
ja
fcoml
ljmp
and
aaa
fbstp
xchg
mov
and
cmp
loope
sbb
add
and
sarb
ja
je
add
and
jnp
add
mov
xor
shrb
incl
mov
sub
add
inc
int3
out
das
cmp
jmp
rolb
mov
cmpb
or
pop
or
cmp
push
add
inc
and
jecxz
mov
incl
cmc
sub
mov
xor
or
icebp
mov
inc
pushf
mov
add
and
add
jnp
stc
std
movsb
je
icebp
xchg
and
in
nop
add
out
repz
stc
add
jmp
push
addb
decl
aaa
into
sbb
pop
ret
adc
dec
add
int
or
pop
jg
adc
xchg
inc
rcll
test
lods
jae
mov
aas
cld
xor
add
aad
xor
add
mov
jnp
add
jnp
les
sbbl
xor
mov
add
mov
fildl
mov
cld
cli
and
ret
sub
call
or
into
mov
hlt
std
mov
add
pop
lret
add
lcall
test
add
test
dec
sub
lahf
fwait
add
sbb
sub
add
cwtl
sub
call
hlt
adc
mov
in
pop
out
incl
add
push
mov
add
or
cld
cltd
incl
xlat
pop
scas
or
add
push
aas
andb
add
mov
add
xchg
aaa
add
add
ds
dec
add
mov
jno
roll
add
add
cmpsl
test
dec
or
in
adc
lahf
push
add
cmp
mov
add
add
xor
inc
add
add
and
inc
adc
ret
in
call
iret
push
fadds
add
call
scas
mov
add
sub
fdivrs
decl
ret
inc
add
sub
fstpt
je
shll
xor
movl
cwtl
lods
add
add
test
jl
xor
popf
mov
std
cld
fwait
leave
incl
add
mov
ficomps
sbb
cmp
adc
sub
ret
add
pop
xchg
pop
add
add
and
inc
mov
roll
arpl
adc
incl
fistl
mov
xchg
xchg
push
fmul
add
add
cmp
add
int3
push
sub
add
decl
lds
fiadds
add
push
mov
dec
add
add
sub
ficoms
pushf
push
or
cmpsl
fistpll
add
repz
ja
cltd
xor
add
push
je
add
dec
lods
call
inc
fiaddl
lcall
incl
add
pop
adc
adc
push
sub
les
add
ja
and
pushf
or
sub
icebp
sbb
jo
cs
pop
arpl
add
add
js
loope
add
mov
fwait
roll
outsb
add
popf
out
les
push
xor
add
incl
add
outsl
xor
das
mov
mov
loopne
incl
xor
and
inc
mov
add
leave
add
imul
aad
rolb
add
push
test
mov
dec
orl
jmp
dec
in
push
fcoms
and
call
jae
xor
orb
std
push
lods
add
dec
mov
int3
data16
cs
xchg
push
pop
and
pop
lcall
add
xchg
sub
and
daa
mov
and
les
jnp
xor
mov
nop
inc
sub
and
and
add
mov
add
inc
add
fildll
icebp
jg
and
jbe
add
ficoml
push
cli
rorl
adc
in
add
add
pushl
icebp
cs
adc
sub
and
add
add
iret
adc
mov
call
add
lea
cmp
add
incl
adc
mov
jmp
inc
arpl
mov
mov
jge
add
push
lock
jbe
pop
mov
jb
or
pop
add
mov
add
add
sbb
pop
mov
add
clc
inc
pop
and
add
push
jae
out
pop
lock
fidivrl
dec
aam
push
add
js
cltd
and
add
add
je
mov
add
add
lcall
testb
lds
dec
and
stos
mov
ret
movsl
and
and
fcoml
aad
add
add
add
insb
js
incl
add
xlat
mov
adc
lcall
mov
lods
out
sahf
cmp
pop
inc
add
xor
incl
adc
out
ljmp
loopne
mov
xchg
cli
out
sbb
add
and
and
push
cmp
rcll
pop
cmp
bnd
add
fcoml
mov
add
add
and
push
mov
cld
aad
adc
and
in
test
es
cmp
pushf
adc
jl
int
lcall
pop
ret
ret
test
mov
xchg
cld
push
flds
mov
inc
mov
inc
in
add
repz
or
pop
cli
roll
cmp
popl
inc
ret
lods
decl
lahf
testl
jmp
and
and
mov
mov
inc
insb
cltd
inc
shl
sbb
add
lcall
add
sbb
add
and
mov
and
pop
stos
xchg
and
int3
xor
aaa
lock
add
incl
add
je
mov
add
out
inc
popa
add
stos
pop
mov
incl
mov
pusha
add
add
jne
aam
and
xlat
dec
xor
adc
push
adcl
xor
add
add
jnp
subl
sub
leave
dec
xor
mov
mov
mov
enter
pushl
call
jl
dec
mov
add
add
lahf
stos
dec
or
add
add
sbb
imul
sbb
add
inc
adc
adc
cmp
ret
inc
icebp
stos
and
mov
mov
sbb
add
mov
mov
jg
jecxz
add
loop
adc
out
xchg
dec
testl
movsb
jo
add
icebp
test
aad
xchg
mov
add
pop
cmpsb
or
scas
mov
add
jne
add
shrl
iret
pop
and
jmp
mov
add
in
lods
mov
sti
ja
add
fcom
cmp
inc
and
and
sub
mov
pushl
inc
and
jbe
ds
cwtl
rcrb
mov
dec
int
inc
lahf
jl
add
lcall
jge
inc
std
popa
add
in
add
add
rcrl
ja
int
and
incl
cmpsl
adc
addl
cmp
and
mov
xchg
scas
xor
and
cs
ss
push
xor
add
sub
xor
insl
mov
mov
dec
adc
push
sbb
lods
sbb
jmp
ljmp
incl
fwait
orb
sbb
add
sub
mov
add
cmpsl
push
ds
add
scas
addb
sbb
mov
and
mov
fstpt
cld
inc
add
xchg
and
ja
add
stos
cmc
leave
out
add
inc
push
lahf
mov
decl
sbb
ret
sub
out
add
sub
adc
mov
add
incb
xchg
and
add
add
sbbb
sahf
arpl
jb
lahf
and
sbb
add
push
shlb
xor
ja
cmp
cld
add
mov
mov
cmpsb
movsl
sub
and
fdivrl
sub
mov
add
iret
add
add
stos
scas
pop
mov
rcrb
cld
sub
add
push
js
notl
fcmovu
add
aaa
fisubl
or
adc
test
sub
add
mov
scas
push
add
rorl
and
out
jmp
jae,pn
out
ljmp
decl
pop
xchg
dec
xor
mov
fwait
xchg
fmull
popa
pop
and
add
or
das
das
push
pop
mov
nop
movl
fdivr
push
aas
and
mov
or
add
mov
and
incl
add
and
mov
out
je
fstl
add
mov
sbbl
imul
movsl
in
push
cs
jge
ret
jns
roll
add
add
xor
jno
pop
lret
add
sbb
pop
hlt
mov
mov
scas
test
xchg
push
orb
pshufw
mov
mov
pushl
imul
add
dec
loop
les
stos
mov
add
xor
mov
dec
loopne
xchg
inc
mov
fistl
adc
insl
jnp
cmp
add
incl
mov
incb
add
jne
add
mov
mov
popf
push
cltd
xchg
add
das
and
incl
ret
push
add
mov
cmp
lods
ja
ljmp
decl
and
ret
jecxz
enter
negl
add
pop
add
adc
aaa
std
repz
mov
mov
test
jecxz
add
es
and
dec
in
cli
ja
add
loope
pop
add
icebp
lcall
and
add
add
call
lcall
add
mov
mov
in
jge
lret
inc
fists
fidivrs
or
add
add
sub
stos
xor
sbb
add
je
adc
dec
dec
xchg
add
sbb
jp
mov
mov
jnp
jmp
pop
add
push
adc
add
ss
jnp,pn
mov
popf
pushl
adc
and
in
dec
ljmp
sbb
push
insb
rcr
andb
in
and
add
ljmp
incl
mov
rcr
inc
incl
sub
mov
and
mov
cwtl
insb
mov
inc
scas
int
out
cs
jecxz
add
push
sub
add
cli
ja
clc
and
and
or
adc
ljmp
idiv
aaa
sahf
sarl
pop
add
cmp
add
mov
push
enter
mov
push
cmp
std
add
and
cmp
incl
and
sbb
negl
jae
mov
and
mov
enter
ljmp
mov
add
add
add
adc
add
cld
daa
ljmp
add
imul
ljmp
pushl
sub
xchg
add
jl
cmpsl
jo
mov
mov
mov
call
add
repnz
inc
lcall
add
fldt
mov
dec
xchg
add
pop
pop
scas
ds
dec
mov
jne
pop
sar
sub
add
repnz
lcall
aam
xchg
add
fwait
movsb
repz
incl
add
out
insl
and
pop
sbb
add
mov
sbb
sub
add
and
shlb
jmp
ss
sbb
push
jl
add
mov
adc
mov
adc
dec
aas
add
add
cld
add
add
stc
into
add
loop
mov
adc
sahf
push
adc
lcall
xchg
outsl
jmp
lahf
and
add
add
and
add
mov
mov
ret
aaa
test
add
cmp
adc
adc
jo
pop
insb
mov
cmpsl
add
adc
add
lea
add
and
add
rcll
add
mov
push
ds
sbb
add
mov
mov
add
jae
outsl
outsl
add
adc
add
std
cmp
sub
add
iret
and
or
pusha
xchg
mov
lcall
add
add
idivl
ss
add
pushl
push
jl
inc
add
add
add
pop
test
add
gs
push
mov
sbb
addr16
out
mov
nop
lcall
stc
dec
jne
push
and
pop
add
add
adc
incl
out
loope
add
lret
sti
stos
into
shlb
add
add
push
inc
mov
mov
mov
clc
pop
and
adc
add
stc
ds
decl
add
fucom
lods
mov
jns
cmp
add
and
xchg
add
mov
add
inc
test
sbb
add
mov
incb
inc
jae
incl
ficoml
sub
mov
mov
repnz
and
cwtd
mov
adc
jns
nop
sub
add
push
sbbb
cli
push
lcall
add
mov
movsl
scas
es
add
call
filds
and
and
incl
aas
adc
sub
lahf
mov
mov
decl
into
xchg
push
xor
dec
jecxz
jmp
mov
add
cmp
mov
add
ret
imul
sub
push
xor
lcall
stc
push
add
cld
inc
pop
and
add
add
cmp
sub
pop
mov
mov
add
into
loop
jecxz
decl
movb
ret
es
add
jmp
ret
enter
sub
cwtl
mov
mov
decl
incl
ficompl
loopne
incl
add
mov
pop
add
out
cmp
xchg
lods
add
out
add
adcl
mov
cmpsb
add
pop
pusha
sub
and
mov
push
lods
lcall
gs
sbb
mov
int
jo
incl
add
stos
aad
fisubs
out
mov
add
mov
adc
imul
xchg
push
add
jl
sub
pop
call
adc
and
adc
mov
pop
xchg
xor
imul
mov
cmp
cmc
addr16
mov
add
mov
add
loop
mov
addl
or
push
add
mov
add
xchg
ljmp
incl
push
gs
push
xor
add
push
pushf
push
decl
xchg
add
add
int3
add
repnz
add
out
add
iret
hlt
add
incl
jmp
add
test
dec
mov
and
out
cmp
nop
jp
add
add
ret
stos
lea
add
push
sub
movsl
add
out
mov
xorb
jp
xor
repnz
mov
sbb
add
inc
arpl
and
incl
mov
jge
mov
jecxz
iret
pop
orl
mov
out
stos
pop
sbb
push
xor
add
jnp
inc
shlb
lods
inc
pop
add
inc
out
jno
incl
add
cmpsb
dec
add
std
xor
xchg
lcall
pushl
add
cltd
add
mov
add
inc
popf
cli
incb
incl
jp
in
inc
adc
push
and
sbb
mov
ror
add
add
and
sbb
adc
jmp
nop
call
int
jmp
jmp
mov
push
pop
cmp
mov
cmp
push
repz
js
add
add
and
add
out
pop
cmc
pop
jbe
add
and
mov
loope
add
xor
jg
add
daa
ja
and
cmpsl
mov
mov
in
test
xchg
gs
add
ds
xchg
cmp
jl
into
loop
out
sub
or
mov
push
cmp
mov
testl
sti
stc
xchg
xchg
add
add
mov
ja
jnp
mov
cld
add
add
mov
syscall
inc
ret
adc
mov
rcrb
add
add
xor
rolb
and
xor
je
and
xor
insl
xchg
add
dec
mov
adc
add
add
sbb
xor
and
xor
adc
ret
fwait
and
add
popf
setnp
jne
adc
sbb
and
pop
leave
jns
or
incl
incl
add
push
mov
incl
fwait
out
ss
add
dec
pushf
test
std
hlt
cwtl
loopne
aaa
sub
incl
insb
dec
rcrb
lds
mov
add
push
push
xchg
insl
pop
add
sub
mov
stos
fyl2xp1
repnz
mov
adc
push
ret
sub
lea
aad
sub
add
decl
xlat
xchg
jge
sub
add
add
gs
loopne
out
roll
add
cmp
add
outsl
adc
add
mov
negl
jmp
sub
mov
add
add
add
stos
stc
sub
add
jnp
jns
xchg
js
cmp
push
mov
add
stos
cmp
data16
add
mov
mov
add
add
es
cs
pop
mov
shl
mov
in
xchg
outsb
jne
add
inc
int
sbb
out
push
xor
and
jmp
and
out
sti
pop
xchg
xchg
mov
pop
pop
mov
incl
add
lea
incl
xor
ja
test
add
ljmp
pop
fstps
add
xchg
je
mov
fdivl
add
ljmp
inc
jmp
scas
mov
jmp
add
mov
mov
lahf
xchg
lds
sbb
and
mov
or
adc
add
call
jnp
iret
roll
add
ret
ret
stc
add
jnp
mov
add
aad
sti
add
dec
dec
xchg
cmp
js
pushl
out
lds
xchg
int3
add
je
rcr
add
add
adcb
jle
fsts
inc
jo
incl
mov
pop
xor
mov
inc
scas
pop
test
add
inc
inc
add
mov
bound
cmpsl
jecxz
insl
mov
add
push
jno
add
scas
repz
sbb
cmpb
test
add
std
testl
jl
cmpsl
xchg
and
cld
add
add
daa
rol
xchg
jp
out
add
cs
add
popa
inc
jno
add
or
iret
or
adc
sub
add
insl
add
add
ss
xchg
lahf
pop
je
add
mov
add
add
push
push
mov
add
cmp
stos
dec
dec
clc
cmp
add
jp
add
xchg
or
sbb
incl
add
iret
cmpsb
mov
and
add
in
pushf
leave
ljmp
and
mov
cmpsl
mov
mov
jmp
mov
inc
xchg
ljmp
andb
jle
inc
mov
adc
jecxz
add
mov
in
jmp
lods
xor
add
mov
ljmp
adc
dec
inc
mov
rcll
add
add
mulb
fisubrl
sub
push
push
fwait
push
push
xor
add
pop
add
inc
pop
test
inc
add
add
inc
mov
aas
sub
adc
cwtl
adc
and
test
and
jle
mov
pop
adc
roll
and
pop
mov
mov
sarl
pop
xor
add
pxor
sub
mov
add
fcoms
insb
or
xorb
add
es
add
fwait
arpl
add
lods
aad
xchg
push
cmp
push
hlt
add
add
dec
cmp
add
add
jl
arpl
sbb
rdtsc
fsubl
add
and
adc
add
and
cpuid
mov
add
jmp
add
fs
out
add
pop
lea
add
stc
pop
cmp
and
clc
scas
mov
sub
out
test
adc
hlt
add
and
add
dec
pop
mov
lret
add
lods
adc
push
or
inc
aad
lcall
and
incl
mov
int
pslld
add
add
xchg
cmp
ljmp
adc
pop
arpl
mov
movsb
mov
and
xor
mov
add
sub
and
decl
outsb
sbb
add
add
add
mov
add
repnz
add
and
incl
sti
jnp
add
jl
jnp
incl
incl
sti
testb
lcall
mov
in
idiv
jns
mov
jnp
popl
call
add
and
add
add
xor
sub
inc
mov
test
xchg
pop
fnstcw
addl
imul
mov
sbb
and
add
es
andl
aas
add
push
add
icebp
cmp
pop
cs
mov
sub
sbb
add
mov
movsl
incl
add
mov
jnp
add
call
inc
add
leave
lods
mov
in
arpl
xchg
loopne
add
mov
sub
and
add
jne
adc
enter
mov
xchg
jg
mov
add
xchg
mov
jle
mov
cld
sub
push
xlat
add
jg
dec
mov
and
daa
outsl
add
inc
jl
inc
mov
in
add
add
and
inc
insl
repz
adc
fstpt
add
push
fdiv
sbb
pop
in
sbb
or
and
sldt
dec
adc
sub
add
ret
cmp
hlt
push
std
daa
mov
add
and
xchg
xor
add
add
jle
pop
mov
add
and
mov
test
jno
dec
mov
add
pop
inc
add
pop
xchg
jle
push
add
inc
or
mov
add
jb
add
add
popa
imul
jecxz
and
or
jge
xor
inc
mov
js
add
incl
or
mov
add
pop
hlt
xchg
stos
add
ret
pop
mov
add
ret
jb
pushl
mov
and
push
lods
mov
cli
outsb
xchg
mov
fmuls
pop
xor
incl
inc
mov
mov
sbb
and
in
outsb
and
call
push
shl
jb
out
mov
ret
addl
sub
leave
lret
popl
add
add
shll
xchg
add
sub
popa
fists
mov
mov
mov
add
mov
popa
imul
mov
pop
push
xor
cmp
rcrb
lods
push
xlat
mov
je
and
sbb
out
add
and
mov
incl
fidivrl
nop
add
out
push
push
add
lret
sti
enter
push
ss
or
lock
and
mov
incl
decl
aaa
in
mov
add
xchg
cs
pop
fistps
sbb
add
push
into
inc
mov
sub
into
xlat
ret
and
dec
les
movsl
mov
add
rorb
mov
add
push
inc
add
fwait
lret
add
cmpsb
mov
dec
out
popf
mov
jo
cld
incl
inc
and
push
add
add
jno
rcrl
mov
mov
push
mov
add
inc
xchg
add
push
scas
jnp
sub
aad
loope
pop
jno
xlat
cmp
adc
xchg
mov
and
mov
jns
mov
fwait
out
xor
hlt
cmpsl
fs
pop
xor
into
xchg
fdivrs
fists
xchg
ret
add
add
mov
mov
push
scas
dec
add
mov
sbb
mulb
mov
or
add
adc
and
or
jae
and
pop
add
adc
insb
xchg
xchg
call
dec
push
pop
push
jl
lcall
divb
in
daa
jnp
incb
jnp
add
lea
mov
jmp
movsb
lds
mov
add
cmp
push
adc
fcmovnbe
xor
cmc
pop
movb
add
daa
add
add
fdivrl
push
push
mov
sub
out
inc
mov
adc
pop
dec
testb
int
mov
adc
mov
add
xchg
cld
xchg
mov
add
add
mov
mov
hlt
push
cmp
insb
aam
call
push
cmp
add
es
and
subl
sbb
add
sbb
add
mov
orb
add
pop
add
jne
sub
pop
je
adc
mov
ss
pop
fsubs
js
fmull
add
pop
adc
add
call
mov
add
push
and
add
push
flds
jle
xor
xchg
mov
incl
and
js
notb
adc
add
and
mov
add
pushf
inc
adc
add
add
in
das
fdivr
add
cmp
jb
add
mov
repz
mov
int
scas
inc
add
inc
in
add
or
dec
mov
inc
adc
shrl
test
data16
mov
imul
iret
cs
loopne
add
mov
daa
mov
add
add
mov
pop
push
int3
popa
push
pop
mov
lea
decl
out
jmp
stos
pusha
or
add
movl
xchg
add
data16
faddl
icebp
mov
mov
sbb
movsl
adc
mov
cmp
sub
xor
popf
aaa
mov
test
jl
incl
inc
adc
xor
cli
insl
dec
popf
xor
into
pusha
xlat
mov
mov
or
add
lcall
pop
mov
push
and
add
push
jge
int
push
xchg
loope
mov
mov
inc
xchg
decb
add
scas
mov
xor
and
outsb
adc
incl
mov
cli
mov
shll
xchg
push
adc
decl
sub
lret
loopne
call
mov
cmp
add
add
leave
pop
xor
add
pop
add
jae
and
ljmp
xchg
jmp
xchg
clc
iret
cmp
in
pop
add
mov
jne
pop
roll
mov
add
xchg
pand
pop
add
add
jnp
lcall
add
ljmp
daa
jge
aam
inc
repz
imul
enter
pushf
scas
add
add
xor
add
xor
and
clc
xchg
sbb
push
sbb
push
xchg
or
add
push
imul
add
pop
scas
xor
xchg
jae
incl
cmpsl
and
inc
lahf
and
and
xchg
sbb
add
repz
insb
popf
xchg
jecxz,pt
jmp
add
sbb
add
add
lcall
xor
shlb
cld
js
jmp
and
push
mov
inc
lret
sub
adc
add
xor
push
adc
mov
mov
popf
mov
add
or
insb
mov
add
movsl
push
out
add
mov
mov
mov
outsl
inc
inc
shl
int3
insl
mov
add
incl
mov
cmp
mov
and
add
or
xchg
mov
fsubrs
mov
and
xor
lret
mov
testb
xchg
mov
add
add
add
inc
pop
fidivrl
jmp
and
adc
gs
fstl
aas
sub
cwtl
mov
xchg
lret
inc
in
and
cld
bound
incl
out
jno
add
mov
add
jae
mov
add
shrl
or
fwait
repz
cmp
popf
mov
ljmp
adc
call
cli
add
add
xchg
movsb
mov
and
add
cmp
mov
cmp
mov
sbb
add
push
dec
xor
sub
push
enter
xor
add
iret
inc
cmp
pushl
and
sbb
mov
add
push
xchg
xchg
mov
jmp
mov
cmpsb
add
add
popa
and
add
push
gs
inc
pusha
jo
adc
stos
popa
push
xor
jmp
push
inc
and
sar
pushf
rorb
pop
loop
pop
jg
add
jae
icebp
sahf
or
mov
outsl
push
hlt
add
mov
xchg
xchg
ljmp
add
push
loopne
dec
imul
dec
incl
add
iret
fldcw
add
dec
outsb
in
and
dec
sbb
lcall
add
sub
cmp
icebp
sar
cmp
incl
movsb
hlt
movsl
push
les
add
add
pushf
sub
mov
jnp
mov
fidivrl
add
push
out
add
leave
dec
loop
mov
data16
add
mov
lods
add
add
dec
pusha
idivb
and
and
add
push
pop
pop
stc
add
lret
imul
add
aas
push
sub
fstl
add
pop
add
add
inc
xchg
stos
inc
dec
sub
outsl
inc
lret
pop
add
add
xchg
add
pop
subb
add
add
mov
add
imul
sub
add
sbb
and
stos
in
mov
add
mov
sbb
add
cmpb
adc
mov
xchg
inc
jne
add
add
jl
jmp
mov
add
andl
add
int3
mov
jo
and
mov
add
in
ljmp
xchg
inc
inc
into
fcomip
in
and
xor
aad
sbb
pop
nop
pop
inc
jo
lds
mov
popf
int3
add
aad
inc
jle
add
push
jmp
push
sub
pop
pop
imul
jmp
add
push
daa
mov
cmpsl
add
ljmp
jae
and
add
mov
stos
add
leave
mov
inc
adc
scas
stos
scas
add
cmp
sub
add
xorb
add
or
jge
add
decl
add
add
push
daa
pop
mov
rorb
xchg
xor
cmp
adc
add
xor
mov
xchg
or
add
lods
cmp
movb
dec
jg
incl
push
ljmp
add
mov
movsl
sbb
mov
add
sbb
hlt
mov
add
cmpsb
int
leave
dec
arpl
cmp
jmp
out
inc
mov
xchg
popa
lret
push
ret
lock
pushl
and
sub
mov
nop
add
mov
xor
add
push
mov
nop
stc
add
add
incl
jmp
sub
out
cmp
add
mov
imul
xchg
bound
or
add
xchg
inc
das
add
aas
dec
scas
addl
cmpsl
sbb
jge
or
insl
mov
incl
add
sahf
popf
sbb
add
out
jg
out
aam
jmp
add
fcmovu
testb
lcall
popa
xchg
and
xor
xchg
pop
dec
repnz
in
add
stos
push
mov
fildl
and
push
repnz
push
stos
or
es
add
add
mov
repnz
fnsave
imul
mov
add
add
aam
mov
and
add
dec
es
or
arpl
mov
icebp
test
cs
out
push
push
jmp
inc
popf
mov
and
aam
and
mov
mov
add
shll
test
addl
and
scas
dec
call
movsl
insb
int
sbb
mov
jp
inc
and
add
lret
and
add
mov
dec
mov
add
adc
add
dec
std
shr
sbb
add
cld
enter
lret
in
add
add
divb
mov
ret
in
sahf
cmp
and
add
add
das
ss
push
add
mov
add
and
mov
mov
jmp
stos
xor
add
outsl
and
xor
pop
iret
push
add
fsts
insb
sbb
out
and
or
add
add
dec
add
leave
xchg
iret
dec
and
mov
dec
push
adc
xor
pop
fmuls
stc
push
jbe
mov
add
lahf
iret
movsb
inc
xor
mov
add
scas
or
iret
imul
mov
adc
add
lret
pop
dec
adc
dec
lret
sub
pop
cmpsl
push
decl
push
mov
or
add
add
test
add
add
mov
data16
add
insl
loopne
fdivrp
and
outsl
push
cmp
outsl
aad
repz
adc
cmp
add
xchg
xorl
sub
imul
add
incl
mov
and
mov
stc
pop
aad
add
sarb
jbe
xor
outsl
iret
add
push
add
jmp
inc
imul
clc
mov
jnp
movsb
sbb
push
call
jl
cld
popf
add
adc
jl
ret
add
test
add
add
sub
movsl
add
mov
loopne
icebp
and
dec
mov
add
insb
testl
add
lock
cltd
inc
add
push
decl
mov
mov
movsb
jno
loop
mov
push
add
jmp
movl
adc
xor
mov
xchg
js
sti
xchg
mov
push
jmp
daa
std
add
cmpsl
popf
out
aas
roll
add
jl
lcall
xchg
dec
sub
mov
inc
in
or
add
dec
adc
rorb
and
sub
xor
aas
cmpsl
lret
stc
sub
and
mov
push
mov
in
repz
imul
mov
mov
stos
rep
and
roll
jp
mov
imul
pushl
fsubs
incl
jmp
xor
mov
and
mov
add
xchg
cli
incl
push
lahf
test
xor
sbb
push
add
pop
add
push
lahf
push
xlat
repnz
jg
sub
add
inc
xchg
add
mov
stc
test
mov
stos
pop
cmpsb
push
daa
push
cmpsl
incl
add
call
mov
xchg
inc
test
sbb
add
cld
xchg
add
mov
pop
shlb
xchg
mov
dec
xor
or
mov
mov
aad
xor
and
pop
add
incl
lea
rcll
sbb
in
sbb
pop
pop
ds
dec
sahf
or
incl
decl
xor
adc
jmp
loope
push
test
stc
addl
shlb
lret
loop
xor
lods
inc
neg
add
mov
add
add
lock
test
add
push
xor
mov
jmp
cwtl
pop
jecxz
mov
repnz
sahf
and
sbb
je
push
lock
xchg
add
adc
cmp
rol
loope
add
pusha
mov
push
call
and
add
cli
in
popf
cwtl
push
cmpsl
and
pusha
add
add
incl
fdiv
cwtl
jmp
movsl
xor
add
pushf
mov
movsl
dec
dec
mov
add
xor
pop
sbb
add
cmp
std
mov
call
xchg
push
push
lods
faddl
and
mov
add
xchg
jnp
add
insb
push
ljmp
add
add
push
push
ret
add
incl
dec
and
clc
call
decl
lock
movsb
shl
add
cli
call
mov
inc
out
and
and
call
pop
andb
add
add
rol
test
test
enter
stc
push
jb
icebp
add
push
pop
decl
add
stc
je
loopne
add
jecxz
aam
add
js
in
incl
add
sub
add
inc
andl
add
in
js
add
mov
sub
and
add
shrl
pop
add
lcall
mov
mov
jnp
dec
and
add
mov
out
add
subl
clc
subb
xchg
data16
out
sub
ror
add
incl
mov
cmp
push
mov
pop
pop
add
and
dec
inc
shlb
add
testl
and
xchg
cmpsb
add
mov
subl
cmc
gs
and
jmp
incl
in
add
imul
add
add
mov
add
aas
das
add
add
incb
inc
out
lret
decl
dec
cmpsl
sbb
mov
mov
inc
ret
mov
sub
adc
ja
add
add
lcall
add
adc
xchg
mov
flds
stos
sbb
adcb
and
mov
mov
add
jecxz
mov
xchg
add
jle
mov
pop
inc
sub
mov
into
pop
xor
inc
addb
and
add
sub
mov
mov
xchg
and
adc
xchg
fiadds
jl
lret
lret
pop
add
add
je
and
inc
gs
mov
adc
out
in
sub
cs
jg
fnsave
jg
adc
xlat
fisubrl
or
mov
fiadds
outsb
mov
add
adc
les
ljmp
add
or
pusha
add
ret
mov
mov
cmp
add
int3
pop
sbb
mov
js
int3
or
pushf
repnz
incl
push
jp
jl
mov
jne
xchg
pop
add
add
scas
jl
aas
lods
lret
cwtl
add
repnz
mov
jmp
sub
or
and
add
scas
test
mov
and
mov
incl
add
add
stos
xchg
add
das
arpl
jb
call
ret
mov
inc
jmp
add
mov
popa
cmc
cs
imul
out
sub
aaa
outsb
push
add
jl
mov
incl
dec
stos
loope,pn
jns
pop
mov
movsb
fmulp
fimuls
ret
mov
rcl
xchg
repnz
inc
jp
ss
cmp
add
add
divb
in
mov
add
jb
add
jbe
and
add
add
xor
add
xor
add
or
add
sti
mov
fcmovne
mov
insl
lcall
push
fidivrs
mov
add
jae
adc
add
inc
push
mov
lret
mov
fnstcw
adc
repz
xor
dec
scas
jne
add
add
fidivl
sub
cmp
mov
icebp
ficomps
leave
cmp
mov
mov
iret
addl
mov
sub
test
sub
add
and
add
std
mov
xor
adc
mov
incl
cld
sub
test
mov
add
mov
incl
add
or
add
add
jle
insb
mov
fnstcw
test
add
add
and
lret
lret
push
jp
push
jmp
pop
lods
add
jmp
cltd
cld
js
ss
decw
add
add
adc
fs
add
inc
in
shll
out
mov
js
lret
add
jno
add
stc
jo
adc
dec
out
add
add
and
add
dec
inc
adc
mov
jo
xlat
push
iret
xchg
sbb
je
add
outsl
imul
adc
fprem1
cwtl
adc
scas
out
insl
add
dec
mov
mov
dec
int
push
push
cmp
add
arpl
and
and
ror
add
mov
and
std
fiadds
add
jmp
xchg
cmpsb
in
dec
add
aam
mov
fwait
add
test
lret
hlt
xchg
dec
cmp
gs
push
xor
mov
push
add
jns
dec
xchg
mov
add
and
pop
add
inc
and
in
movsb
stos
test
or
jmp
outsl
movsb
mov
loop
add
hlt
lcall
add
add
adc
cmp
fdiv
xor
add
add
out
movsb
mov
lcall
out
push
adc
xchg
sahf
xor
pop
sbb
pcmpgtb
incl
and
testb
and
push
stos
dec
jne
leave
je
add
add
daa
and
cwtl
mov
dec
pop
adc
sub
adc
add
jle
jne
jmp
bound
dec
and
cld
adc
cmpsb
dec
in
mov
jecxz
add
aaa
jne
add
mov
and
lods
cmpsl
incl
add
gs
icebp
test
call
add
jne
and
add
xorb
sub
loope
push
add
fildl
mov
call
sbb
push
scas
add
pop
addb
jnp
mov
jle
arpl
lods
inc
push
sbb
cmc
jp
and
inc
inc
sub
out
ljmp
xchg
out
add
call
add
add
data16
sub
pop
push
xor
sub
clc
push
mov
add
add
or
add
mov
mov
cmp
and
adc
movsb
add
fdivrs
cmp
or
bound
sub
add
dec
incl
add
mov
mov
mov
add
ljmp
lret
adc
sbb
movsl
add
jns
pushf
xchg
ljmp
sub
add
movsb
in
push
mov
cltd
out
xor
add
cmc
add
test
cld
cltd
out
jl
add
push
mov
adc
mov
adc
ja
and
push
lods
cmp
jno
aas
bound
cld
incl
and
mov
and
data16
ret
divb
add
push
xor
mov
pop
fdivr
add
jno
and
mov
mov
mov
add
and
push
mov
add
pop
mov
mov
dec
pop
and
out
sub
pop
add
sub
sub
lcall
pushf
adc
mov
idiv
jae
inc
adc
dec
rcl
test
repnz
lret
add
cs
cmp
pop
xor
add
mov
call
pusha
loopne
es
dec
add
add
imul
pushf
add
add
sub
xor
adc
mov
jmp
mov
lds
jmp
mov
and
or
dec
pusha
test
inc
pushf
movsl
add
add
jmp
repnz
cs
xor
sub
add
inc
xchg
sarl
add
sti
pushf
xchg
fwait
add
ja
push
and
push
enter
add
incl
ja
mov
add
add
adc
cmp
xor
add
imul
gs
jae
add
adc
add
add
lahf
adc
and
aas
push
mulb
mov
and
add
cmpsb
jnp
pop
mov
mov
xor
add
orl
push
nop
add
jmp
out
xchg
lock
mov
incl
movsl
jns
int
lcall
aam
mov
mov
cmc
adc
pushf
pop
fcomps
adc
fdivl
mov
and
pop
push
mov
call
lahf
pop
das
inc
jns
xor
call
pop
add
das
movsl
mov
or
xchg
mov
and
incl
arpl
dec
and
ljmp
pop
pop
call
xchg
out
stos
mov
dec
mov
push
add
pop
pop
sub
inc
dec
sub
mov
and
add
adc
xor
adc
sbb
mov
movb
mov
ds
adc
out
scas
ret
aas
sub
arpl
add
incl
sub
gs
dec
rolb
add
out
mov
mov
add
incl
in
and
idivb
xchg
jmp
add
repnz
ja
fadds
mov
add
xchg
mov
mov
add
jecxz
and
incl
mov
xlat
add
lahf
leave
xor
stos
adc
mov
mov
lods
addr16
add
mov
out
add
dec
outsb
and
add
push
aam
add
xor
andl
mov
icebp
add
push
or
popa
xor
add
add
and
add
push
jno
pop
add
jg
push
add
and
popa
add
test
pushf
fs
sub
mov
mov
add
bound
andl
sub
incl
and
addl
cltd
and
sahf
scas
lahf
or
lret
lods
add
js
pusha
cwtl
or
fxch
cmp
add
add
inc
add
xchg
das
decl
xchg
dec
add
decl
mov
mov
xchg
xchg
pop
and
cli
movsb
pushf
pop
int
incl
add
dec
adc
xor
mov
js
lods
cmpsl
jg
in
mov
and
add
cmp
cmc
or
cld
sti
add
dec
add
add
in
jecxz
bound
add
mov
out
add
shrb
xchg
test
pop
test
and
mov
xchg
xor
add
and
popa
cli
pop
jecxz
mov
add
incl
pop
add
fucom
dec
adc
push
jae
push
and
jl
cmpsl
call
pop
popa
cmp
jo
test
adc
sar
mov
ljmp
add
dec
mov
int3
cs
mov
rcrl
fwait
jg
and
fiaddl
mov
xor
mov
and
inc
mov
push
sbb
fsts
pushl
and
jge
push
sub
cmp
xchg
push
or
mov
add
ja
stc
out
das
add
add
cmpsb
inc
and
add
mov
and
add
mov
jg
and
dec
jnp
cli
add
sub
fsub
add
add
lea
imul
enter
pop
enter
sub
icebp
mov
adc
cmpsl
fisttpl
xchg
xchg
add
add
incl
adc
xor
add
add
pop
sbb
add
fbld
push
dec
mov
mov
or
xchg
push
jnp
cld
cmc
aam
adc
sbb
add
and
sbb
add
out
xlat
and
add
stc
push
sbb
bound
into
addl
jl,pt
add
paddd
mov
add
add
inc
fwait
sub
mov
mov
pop
repz
push
and
add
fwait
mov
add
mov
mov
ret
push
hlt
fwait
scas
incl
stc
mov
add
and
dec
mov
add
add
xchg
sbb
add
test
mov
test
add
scas
xchg
adc
xchg
lret
mov
fdivrp
aam
out
adc
and
popa
inc
loopne
and
xchg
add
mov
and
jp
mov
xor
cli
add
xor
rorb
incl
imul
lods
lcall
out
add
out
add
shrb
je
mov
adc
scas
loope
mov
lods
sbb
add
add
add
je
xchg
mov
and
je
mov
inc
add
rol
repz
jo
jnp
outsl
addr16
add
add
incl
sbb
lahf
scas
add
loopne
add
mov
adc
add
add
ss
or
add
push
sub
adc
out
aaa
add
mov
add
sub
pop
push
push
or
mov
ljmp
mov
pop
sub
jl
es
add
ss
scas
add
lahf
xchg
dec
icebp
add
mov
int3
addb
pusha
jne
add
fcoms
add
add
xchg
out
int3
jb
leave
movl
fildl
adc
ds
lcall
inc
pop
clc
cmc
dec
add
stc
stos
push
lret
jg
and
decl
dec
incl
mov
push
mov
dec
and
jno
jno
add
out
out
push
jns
add
inc
adc
mov
ds
jmp
sbb
and
add
add
add
sbb
arpl
add
out
mov
testl
scas
outsl
dec
incl
pop
stos
dec
repz
mov
incl
pop
faddl
out
jle
incl
jne
ds
xor
mov
mov
xchg
cmp
push
push
or
jne
add
incl
mov
out
repnz
sarl
xor
lcall
lods
out
mov
stos
dec
add
sbb
jmp
decl
xchg
pop
pop
ljmp
mov
iret
sub
jo
ljmp
ret
test
add
or
add
test
add
mulb
aam
add
add
mov
fistpll
add
jmp
inc
cmc
mov
cs
incl
gs
sbb
in
inc
lods
das
xor
out
add
mov
fwait
mov
std
sub
incl
sub
sahf
xor
inc
repnz
mov
lea
add
cli
and
lcall
add
js
and
add
scas
and
add
repnz
xor
add
and
pop
and
add
das
shr
sub
js
add
add
cmpsl
out
inc
add
outsl
imul
insb
outsl
je
jb
je
imul
insl
imul
test
bound
repz
push
adc
decl
add
push
cltd
out
sub
add
add
sbb
sbb
decl
shl
popa
adc
mov
mov
mov
incl
jae
mov
pusha
mov
imul
cwtl
xor
dec
xchg
add
sar
fmuls
out
add
sti
xchg
add
add
and
data16
xchg
jno
and
mov
and
add
sub
and
add
repz
mov
pop
add
add
daa
add
add
mov
ljmp
add
jge
in
mov
addr16
add
lret
leave
add
lods
inc
ljmp
pushf
mov
mov
add
sub
mov
sub
or
adc
incl
add
js
fs
cmp
add
xor
inc
incl
in
sub
push
and
mov
dec
aas
lods
imulb
enter
fdivrs
sub
out
and
sub
add
addb
add
rcl
and
testl
sbb
leave
test
str
in
add
add
push
add
push
push
add
or
mov
pop
cld
jle
jmp
hlt
pop
cmp
std
cmpsb
imul
push
mov
push
add
and
repnz
and
adcb
out
in
and
add
add
push
bound
mov
push
add
jg,pt
aad
add
add
iret
add
mov
and
sbb
jmp
call
insl
adc
les
add
fisubs
push
mov
inc
inc
sbb
add
lcall
add
sub
pop
imul
add
jmp
add
xchg
jnp
push
adc
fisttps
add
addl
stos
mov
mov
cld
add
mov
mov
mov
jp
add
lea
add
adc
ja
and
push
add
xchg
xchg
data16
add
out
and
cmp
xchg
incl
fstps
out
or
addl
adcl
add
mov
mov
adc
xor
jge
push
add
cmp
add
mov
sub
xchg
mov
and
cld
jmp
add
pushl
cli
add
out
mov
sbb
dec
aaa
adc
xchg
pop
push
add
jp
out
mov
decl
les
add
pushl
and
cwtl
nop
mov
push
add
mov
fdivrs
out
add
or
aad
lods
add
add
pop
push
sub
jmp
iret
mov
jae
add
xchg
add
xor
and
inc
les
pop
push
or
add
mov
incl
mov
in
aas
xor
add
add
jl
out
std
ljmp
rcr
mov
lods
add
cld
push
jmp
add
cmpsb
iret
push
xor
addr16
add
add
mov
inc
and
int3
add
adcl
adc
add
add
or
xorb
add
push
ret
mov
sarl
jp
dec
decl
xorb
adc
call
inc
add
xor
enter
out
mov
add
orb
xor
add
fdivrs
incl
and
adc
cmpsl
push
jnp
and
fidivs
outsb
cmpsb
repnz
cmp
sbb
mov
and
decl
orb
dec
add
and
scas
sbb
add
in
sti
mov
add
jp
add
scas
sar
mov
mov
sahf
mov
jae
cltd
lods
and
add
mov
fistl
mov
and
mov
jno
mov
fistl
add
mov
ss
mov
outsb
xchg
cmp
stos
cmp
jp
add
xchg
mov
add
fistl
add
ljmp
pop
std
gs
or
mov
mov
mov
add
decl
and
pop
add
decl
xchg
sbbl
and
mov
in
sub
fnstcw
and
xchg
xor
insb
or
out
fnstsw
pop
mov
and
add
fldcw
dec
add
add
shrb
sub
outsb
push
mov
pop
dec
cmpsl
add
insb
mov
nop
push
outsl
add
adc
mov
mov
test
iret
and
add
or
jnp
add
dec
lds
add
dec
cmpsl
ljmp
add
mov
add
and
loope
xor
cmp
add
mov
cmpsb
repz
or
xchg
insb
add
and
out
lods
arpl
loop
push
add
adc
lret
add
adc
pop
test
add
test
sub
call
and
sti
data16
xor
incl
add
in
test
cltd
cmpl
jl
cltd
mov
jmp
mov
or
out
cmpsb
pushf
sub
in
mov
sbb
mov
push
xor
add
add
mov
movsb
pop
push
add
lock
call
cmpsl
pusha
add
test
loope
dec
xchg
fwait
add
decl
fistpll
pop
add
add
mov
add
xor
xor
pop
jno
add
pop
lock
cs
jb
adc
add
cmp
out
call
add
inc
adc
add
out
mov
les
jmp
incl
hlt
ss
mov
push
pop
pop
movsl
inc
ljmp
push
push
xor
pop
incl
incl
pop
xchg
or
add
add
and
out
mov
and
mov
repnz
aaa
jns
dec
and
add
add
mov
decl
sti
and
add
mov
push
fisubs
add
fcoml
adc
pop
jne
aam
incl
add
add
add
loop
jnp
shll
add
and
lds
or
xchg
and
je
addr16
xchg
mov
mov
add
decl
xor
shrl
mov
rolb
mov
cmp
pop
rol
mov
jne
lock
add
push
jge
add
jo
and
incl
out
mov
out
andb
cwtl
adc
xchg
sti
lret
add
movsb
mov
jmp
pop
jg
lea
inc
jp
inc
and
lock
test
add
daa
incb
mov
pop
xchg
cwtl
pop
and
jns
and
push
sti
pop
add
or
mov
add
pop
movl
jb
xchg
xor
add
xchg
mov
xchg
int
pop
ljmp
mov
mov
leave
mov
sarb
test
call
cwtl
dec
or
add
rep
jnp
or
int3
push
aas
ljmp
jmp
pop
add
add
mov
ret
xor
add
and
cld
inc
adc
mov
jo
jbe
and
push
fnstenv
pusha
sbb
push
push
xor
add
add
and
incl
mov
push
xchg
add
ror
jae
add
mov
mov
addl
pusha
jge
incl
adc
adcb
aam
sub
adc
jecxz
add
mov
add
dec
cli
add
and
test
adc
cmp
sub
adc
add
mov
inc
add
add
inc
stos
pop
out
adc
roll
add
lock
sub
mov
jp
lcall
decl
ss
add
scas
insb
push
fs
stc
add
dec
idiv
js
jmp
jle
pushl
add
ss
aam
xor
cmpl
xchg
add
outsl
xchg
jnp
xchg
cld
call
incl
cld
xor
add
gs
sub
shr
sar
add
adc
jae
mov
iret
xlat
xchg
push
add
mulps
add
roll
add
lods
imul
lods
data16
add
adc
roll
and
pop
das
std
in
add
add
sbb
outsb
outsl
adc
pop
add
add
lahf
and
dec
scas
inc
push
add
xchg
fwait
enter
hlt
cmp
adc
sbb
arpl
push
fisubrl
mov
test
add
add
ret
fildl
add
dec
sbb
mov
pop
incl
dec
jmp
and
dec
push
fistpl
dec
fwait
add
cltd
mov
add
ljmp
sbb
nop
jge
and
call
add
or
lods
cmc
ljmp
je
add
rorb
test
and
fwait
test
int
add
lods
aaa
sub
incl
jo
das
add
add
pop
dec
add
xchg
or
add
jnp
scas
mov
bound
mov
fidivrs
adc
add
pop
or
test
aaa
dec
in
mov
mov
loope
add
in
clc
cld
incl
and
mov
mov
fidivl
push
icebp
push
outsl
push
add
add
idivl
and
add
mov
add
outsb
add
ss
icebp
aam
aas
or
inc
dec
pop
outsb
adc
sti
mov
add
mov
adc
add
adc
and
add
inc
mov
mov
push
sub
lock
arpl
fstpl
sub
add
add
dec
push
xchg
jecxz
pop
add
add
add
sub
stc
decl
cwtl
bnd
jle
add
and
add
pop
notl
add
mov
jmp
cmp
xchg
aam
add
mov
shll
adc
mov
mov
pop
ss
adc
add
outsl
cmpl
add
inc
mov
aaa
sub
sub
outsb
adc
mov
arpl
mov
xchg
iret
add
mov
nopl
add
add
jge
add
lret
adc
mov
adc
shrl
push
lret
add
and
decl
loop
sub
jno
mov
in
sar
inc
mov
aaa
cmc
mov
add
out
fimull
add
mov
or
pop
mov
int3
mov
push
xlat
and
std
and
pop
mov
inc
aas
push
add
xor
sbb
add
jmp
mov
push
stc
outsb
add
stc
sbb
adc
add
adc
sub
and
movsl
rolb
mov
inc
repz
jle
and
adc
add
and
shrl
push
es
out
add
add
add
dec
addb
pop
xchg
inc
out
std
push
jg
pop
sbb
sahf
add
cmp
add
jmp
test
loop
adc
and
enter
incl
jl
add
xlat
add
incl
mov
jno
js
jae
push
outsw
jae
aas
add
inc
jns
pop
add
loop
scas
mov
add
loopne
into
adc
add
mov
add
mov
add
dec
sbb
cld
inc
jmp
dec
xor
nop
ret
jno
test
mov
inc
jb
add
mov
mov
add
pop
sub
mov
movsl
and
and
fwait
incl
out
cmp
addb
popa
cmpb
add
stc
loope
mov
and
jle
add
add
and
add
add
mov
lea
fdivs
flds
add
not
xlat
add
dec
fldt
xor
add
push
icebp
scas
incl
pop
and
pop
add
add
cmp
xor
adc
mov
mov
xor
push
fucom
fimull
dec
call
cmp
mov
int3
adc
jns
adc
jmp
add
mov
adcl
mov
jmp
add
and
sar
cmc
lods
and
ljmp
push
sbb
into
int
imul
xchg
mov
pop
or
add
add
xchg
add
into
sub
and
add
sbb
add
mov
out
roll
mov
jno
fwait
lret
js
add
add
addb
mov
cmpsb
es
cmc
sbb
cs
dec
clc
mov
mov
sbb
bound
int
pop
sbb
add
add
and
cld
icebp
xor
nop
cli
cld
mov
jp
xchg
std
je
and
add
mov
in
movsl
cs
jmp
icebp
add
and
mov
data16
scas
aam
jp
add
in
xor
push
out
add
and
cli
jl
xchg
decl
adc
rcrl
add
shrb
mov
mov
lods
and
pushl
add
out
xor
mov
add
and
cvtdq2ps
addr16
mov
mov
incl
xchg
cmpsl
adc
adc
mov
xor
jmp
cmp
add
add
insb
mov
add
mov
add
jp
dec
jnp
add
dec
or
jg
xchg
arpl
sub
mov
call
loope
sbb
add
add
dec
mov
and
ja
call
pushl
dec
push
add
adc
jl
cli
and
add
push
out
xchg
inc
inc
mov
mov
insl
push
add
cmp
xor
adc
dec
decl
add
shll
pop
sbb
mov
pop
out
mov
mov
push
addl
and
sub
jp
sub
and
sbb
das
inc
jecxz
addl
cmp
stos
insl
imul
sub
pop
dec
incl
mov
and
inc
mov
add
push
popf
xchg
std
add
add
nop
push
cld
test
cld
add
mov
xchg
ljmp
add
lcall
xor
add
dec
mov
adc
and
sbb
imul
sar
jb
add
add
mov
lock
add
add
jge
mov
add
fcompl
add
aaa
add
daa
pop
gs
sub
out
adc
add
add
and
add
add
dec
or
add
cmp
or
aaa
xor
jp
cmp
sub
sub
cmp
add
es
add
fisubrs
add
test
scas
mov
pop
int3
out
jmp
hlt
dec
cmp
pop
push
push
push
inc
add
mov
add
add
jnp
mov
and
add
add
add
push
loope
mov
push
push
mov
add
lock
shlb
xchg
fstpl
mov
add
dec
mov
dec
jmp
add
imul
fs
pushl
in
dec
leave
rol
mov
sbb
add
decl
mov
add
push
sbb
out
stc
mov
dec
out
add
sbb
inc
incl
outsl
mov
add
clc
mov
add
pop
or
call
lahf
add
cmp
or
mov
sub
incl
mov
fidivrs
mov
jmp
jmp
sub
mov
add
pop
sbb
add
ret
std
add
pop
or
add
inc
add
notl
mov
jo
lcall
push
ret
sbb
les
add
ret
jne
jmp
push
pop
and
add
or
and
loope
mov
call
jg
stc
xor
mov
sahf
decl
xlat
add
and
decl
out
add
test
pop
jnp
mov
pop
jle
ljmp
out
mov
push
mov
incl
add
adc
add
xchg
hlt
mov
mov
push
mov
test
push
xchg
cmc
sbb
add
rcl
sbb
mov
stc
mov
xor
and
and
jp
adc
and
lds
add
sbb
out
incl
or
mov
jmp
daa
cwtl
lea
dec
add
mov
cltd
jae
add
iret
push
cwtl
jle
call
or
rcl
mov
lods
push
and
pop
inc
mov
dec
pusha
sbb
gs
and
add
mov
adc
add
jge
push
and
scas
sbb
leave
mov
mov
mov
adc
xor
add
sar
bound
add
push
add
or
mov
add
cmp
sbb
jnp
push
add
shl
aam
nop
add
add
fidivrl
mov
xor
add
movsb
inc
pop
pop
mov
loop
add
jecxz
testl
pushf
jnp
cmp
lcall
add
sub
das
scas
add
jge
fs
add
ss
add
add
ret
or
and
add
jg
outsb
add
incl
pushf
push
jae
add
xchg
repnz
push
lods
je
ja
add
add
adc
out
fisubrl
xchg
add
add
js
bound
aad
mov
decl
add
jne
ja
add
add
add
pushl
cwtl
hlt
jmp
add
cmp
nop
inc
aas
pushf
push
add
stc
mov
or
stos
dec
arpl
pop
adc
sub
mov
add
ljmp
or
add
mov
add
cmp
fwait
or
adc
mov
out
ljmp
inc
dec
mov
or
or
add
add
clc
hlt
clc
mov
add
or
call
add
jb
push
xor
add
fsubrl
mov
rorb
outsb
adc
push
pop
adc
add
add
mov
add
add
xor
push
cmp
test
add
js
into
push
ret
mov
cmp
icebp
mov
sbb
jmp
and
addr16
test
add
int3
cmp
gs
loopne
mov
out
sahf
cmp
add
aad
pop
lock
and
cmp
mov
pop
inc
icebp
adc
mov
mov
add
incl
add
loopne
ja
add
push
fwait
shrb
loope
js
mov
lahf
xchg
pop
and
pop
inc
cmp
add
stos
add
aas
rclb
inc
add
add
mov
lods
add
add
out
add
xorb
add
push
jp
mov
mov
gs
or
mov
dec
sub
aam
add
xchg
add
add
mov
ljmp
ljmp
test
ljmp
pop
lahf
and
mov
inc
scas
clc
gs
adc
and
jge
push
es
fwait
bound
add
incl
cltd
roll
jmp
pop
std
add
mov
rcll
movsb
test
cmpsb
mov
xchg
das
sldt
add
jns
cs
push
add
arpl
add
add
cli
scas
testl
or
shll
sti
mov
dec
jne
pop
push
mov
add
andb
add
add
sub
ds
push
add
push
aaa
and
xchg
ja
jbe
adc
cmpsl
jbe
push
adc
inc
add
add
jmp
push
fildll
test
add
add
incb
add
call
pop
jg
data16
mov
xchg
shlb
add
mov
add
aas
outsl
dec
call
add
movsl
jecxz
aas
sub
filds
add
fstps
inc
filds
dec
and
outsb
ret
cmp
cmp
mov
add
std
ret
push
sub
sub
das
sbb
mov
into
inc
cmp
in
add
add
sti
sbb
adcb
inc
add
xchg
jmp
cli
in
in
jle
std
jbe
add
addr16
push
incl
mov
lea
out
and
loopne
and
add
or
add
dec
out
pushl
ljmp
xchg
fiaddl
decl
xor
add
out
fwait
push
ret
mov
lret
and
xor
pop
adcl
das
or
add
out
xchg
xchg
test
add
scas
and
inc
popf
jle
push
xor
sub
stc
jmp
add
and
mov
jbe
in
dec
or
add
dec
inc
call
add
shlb
decl
xchg
mov
fs
f2xm1
dec
lds
sub
incl
xor
sbb
add
add
cmpsl
pushf
imul
icebp
call
and
add
outsl
scas
sub
incl
pop
ja
mov
cmp
xchg
and
push
stos
jl
aam
incl
dec
xor
sbb
cmpl
dec
loop
mov
push
or
dec
add
cwtl
out
adc
mov
add
mov
rorb
adc
xor
mov
add
adc
outsl
and
push
push
inc
test
add
add
cmc
in
loop
inc
clc
std
pushl
mov
out
jnp
mov
jmp
popa
pop
add
add
fildl
mov
add
mov
add
mov
orl
xor
and
fpatan
add
jmp
adc
fstpt
adc
add
lahf
out
jg
in
sbb
fwait
mov
add
mov
ret
add
mov
scas
lds
adc
ljmp
dec
add
pop
jb
roll
lods
mov
push
lcall
pop
sti
sbb
pop
adc
aas
arpl
mov
sti
imul
push
add
add
inc
mov
test
add
add
movsb
jae
xchg
jmp
into
in
loop
and
leave
aas
sbb
enter
imul
imul
lret
negl
cmp
mov
lret
and
and
adc
adc
loope
outsb
add
xchg
inc
jbe
add
jne
push
add
xor
add
pushl
insl
adc
jmp
incb
std
sub
jmp
and
fst
xchg
mov
and
mov
pavgb
add
jae
add
cmp
mov
adc
add
push
je
add
mov
mov
bound
out
out
jo
mov
fnstenv
lcall
insl
push
rcll
out
outsb
pop
add
or
add
cmc
incl
add
rclb
cmc
lcall
cmp
ja
incl
stos
test
and
add
popa
je
ljmp
jo
scas
rolb
add
xor
mov
mov
cmp
add
and
add
testb
mov
mov
add
mov
jno
mov
xor
addr16
add
jns
incl
jg
adc
sub
mov
add
aas
fwait
dec
gs
adc
call
in
ret
popf
ss
incl
cs
xor
push
add
in
add
xsaveopt
push
insl
incl
es
jg
cltd
imul
hlt
aas
mov
subb
add
lcall
incl
add
add
in
mov
fmull
and
lods
shl
pop
stc
call
sbb
mov
jmp
add
pop
ficoms
add
sahf
loopne
and
jmp
or
fisubl
cmc
pop
ljmp
incl
sub
pop
test
adc
stos
lock
add
push
xor
pushl
mov
xchg
mov
push
test
add
add
pop
push
cmp
add
nop
lds
add
xchg
insl
cmp
add
das
mov
jge
hlt
jo
add
add
and
fcoms
sbb
dec
sti
add
insl
test
adc
loopw
pop
popa
cltd
cltd
std
in
in
add
incl
sbbl
add
xor
incb
je
add
stc
gs
add
data16
popl
cmpsl
enter
xor
jmp
out
mov
xor
add
add
jl
or
adc
bound
add
incl
sub
mov
iret
mov
xchg
push
lds
mov
jecxz
and
in
xchg
add
add
les
xor
add
add
mov
mov
add
inc
lea
sub
cli
dec
mov
add
fwait
testb
xlat
add
incl
and
aam
mov
mov
mov
mov
scas
call
xchg
movsb
push
add
and
fistpll
imul
add
mov
adc
inc
decl
add
ftst
fs
sub
inc
jns
sub
sbb
repz
incl
mov
dec
jno
pop
xchg
mov
adc
add
sub
mov
adcb
add
add
pop
xor
xor
xchg
mov
cwtl
lret
test
add
add
enter
cmpsb
pop
incl
pusha
mov
jb
ljmp
or
xchg
pop
jp
mov
cmpb
movsl
lcall
add
add
add
lret
inc
test
xchg
dec
and
or
add
in
mov
add
lods
push
cmpsb
and
rolb
mov
add
jb
adc
lds
add
jle
nop
sub
shlb
add
pop
mov
push
and
and
add
inc
mov
jmp
das
ret
add
xor
mov
adc
and
pop
cmp
pushf
push
add
jae
mov
mov
cmp
pop
and
fistpl
incl
add
bound
add
dec
cmp
jae
insb
mov
add
and
jp
xor
add
fbstp
hlt
xchg
inc
jb
mov
add
mov
je
add
sbb
add
mov
inc
xor
cmc
add
repz
out
popl
es
push
daa
jmp
aad
lret
insl
incl
mov
add
incl
repnz
lahf
inc
xchg
cmp
add
xbegin
mov
and
sub
call
jmp
lock
dec
jmp
push
add
xorb
enter
add
add
xchg
add
jb
xchg
fisubs
add
xchg
cld
and
pushl
add
filds
jnp
scas
sbb
mov
fmulp
fsub
hlt
add
cmp
out
add
add
and
dec
add
inc
leave
shrb
and
jnp
sub
mov
adc
fsubr
add
push
cs
add
mov
dec
out
and
imul
mov
stos
push
xchg
out
add
lea
mov
xor
xor
add
mov
adc
and
push
popf
and
sahf
adc
add
out
outsb
addr16
cmp
push
daa
lea
add
inc
jl
pop
dec
add
addb
adcl
cmp
pop
sbb
xor
xchg
out
add
add
mov
bound
add
mov
xor
repnz
pop
jmp
sbb
xchg
adc
cld
jb
stc
lods
and
and
sub
cmpsb
sub
jbe
adc
jl
lret
add
add
incl
sbb
sbb
xchg
add
add
add
decl
xchg
and
call
sahf
call
addl
in
and
mov
aas
inc
addl
sbb
push
or
rol
rolb
and
std
sub
ds
test
jmp
xchg
ds
nop
inc
add
add
xor
push
adc
call
add
pop
cmp
mov
nop
adcl
cmp
lods
dec
mov
aam
xchg
and
xchg
add
incl
neg
pop
pop
jb
mov
mov
js
incl
xor
jae
adc
test
fs
std
fcoms
add
jbe
jo
adc
add
and
inc
popl
incl
inc
je
lcall
pop
add
inc
mov
cmp
dec
inc
pushw
push
xor
out
cmp
loope
mov
add
add
jno
incl
add
jns
scas
pop
mov
icebp
add
pmaxub
incl
and
jge
mov
ret
adc
lcall
push
or
add
add
call
push
out
mov
sbb
jne
add
jp
lds
inc
dec
sub
add
sbb
add
mov
sti
dec
mov
add
stos
add
iret
jb
stos
add
fwait
xor
int
add
and
sbb
stos
pmullw
xchg
mov
add
mov
add
add
and
dec
imul
mov
xchg
test
out
add
adc
mov
mov
shl
lea
add
add
add
ret
add
shll
push
incl
mov
loopne
jbe
dec
inc
rorl
dec
inc
add
addr16
add
add
int
mov
addb
add
adc
jp
xchg
cmp
add
add
xor
decb
pushl
test
add
add
add
xor
outsb
xor
dec
add
pop
iret
dec
stos
add
add
adcl
or
xchg
shlb
add
add
incl
add
push
or
insb
add
loope
xchg
incl
test
push
lods
sahf
or
movsl
xchg
dec
and
scas
add
xor
jecxz
decb
push
sub
sub
and
mov
ss
pusha
daa
aam
incl
and
sar
outsl
lock
sub
xor
ljmp
outsl
ja
addr16
imul
arpl
imul
mov
or
imul
test
mov
push
iret
mov
out
add
add
lahf
je
xor
pop
add
dec
outsl
push
xchg
mov
add
decl
negl
add
add
push
sbbl
incl
lods
loop
mov
ds
add
or
cmp
cmpsl
sbb
clc
mov
add
sub
mov
sub
pusha
adc
outsl
or
add
add
inc
inc
popa
ljmp
add
fsubl
add
andl
das
fadds
fistpll
add
js
add
sub
pop
pop
mov
cmp
test
jge
adc
pop
and
sarl
jmp
test
add
add
add
mov
cmp
sbb
add
add
mov
mov
add
cmc
lods
add
icebp
in
jge
or
pushf
mov
add
ja
testl
xor
out
lods
daa
sbb
fs
pushl
sub
fistl
jne
add
xorl
decl
stc
repz
pusha
lods
xchg
out
loope
add
shrl
nop
mov
add
jmp
dec
daa
push
cmp
mov
imul
add
lea
into
add
iret
mov
add
add
popa
rcl
add
in
add
mov
mov
in
ljmp
add
fidivl
pop
pop
add
add
mov
adc
sub
movsb
cmpsl
in
add
mov
add
add
lret
imul
pop
mov
shlb
and
mov
loopne
add
fldcw
jnp
ljmp
ljmp
stc
mov
and
bound
filds
add
mov
add
fdivrs
add
push
jns
and
popf
jp
xorl
dec
rcrb
lea
mov
mov
adc
mov
shrl
adc
or
and
decl
add
cmp
jmp
inc
popa
add
mov
add
je
cmp
pop
add
add
imul
cmp
cmp
jb
fdivrl
mov
mov
add
shr
push
sub
hlt
rcll
out
jae
clc
add
add
movsb
pop
mov
mov
mov
adc
ret
and
dec
xor
push
out
lcall
lods
jb
xor
mov
and
or
jno
mov
add
rorb
ljmp
lods
arpl
add
and
add
fisttpll
add
xchg
test
push
out
and
add
xor
xor
cli
add
push
sti
roll
incl
add
call
add
imul
call
mov
aad
mov
in
mov
loop
and
add
addr16
subb
ret
sub
repz
adc
and
adc
and
push
push
rcl
or
incl
ja
pusha
lret
add
add
xor
bound
fiadds
aaa
sub
add
int3
adc
cld
add
jno
mov
push
negl
add
add
push
mov
jb
mov
mov
add
xchg
dec
test
lcall
add
mov
aad
or
aaa
xor
mov
in
jnp
and
add
dec
sub
pop
pop
jmp
mov
andb
cs
push
leave
add
daa
cld
sbb
jns
inc
orb
xor
fisubs
mov
jmp
sub
ja
lret
add
add
push
outsl
mov
push
mov
sbb
and
and
push
mov
push
test
jmp
add
push
pusha
jp
fwait
add
in
jnp
add
add
mov
xor
out
cmc
pop
add
add
add
add
aam
inc
add
out
xchg
data16
and
lret
and
add
adc
jmp
decl
mov
pushf
sbb
call
dec
fwait
mov
add
out
add
outsl
add
or
incl
cmp
incl
push
incl
add
fdiv
adc
sahf
movb
das
idiv
add
push
out
lret
jae
leave
jmp
mov
in
mov
and
add
and
insl
mov
test
decl
fcmovne
xchg
notb
mov
add
pop
jnp
push
adc
add
mov
cld
cwtl
into
incl
and
dec
jno
aam
loope
and
adcb
mov
mov
and
sbb
push
add
xor
fisubs
inc
add
xchg
adc
mov
loopne
bnd
push
sub
mov
xchg
fldcw
incb
sbb
add
and
xor
adc
in
jl
dec
cli
testl
mov
add
add
call
add
mov
cli
push
and
adc
fadd
jge
jg
xor
pushl
inc
and
int3
pop
add
call
add
sub
adc
pop
or
jge
adc
mov
incl
repnz
addb
in
ljmp
iret
and
add
add
mov
add
out
adc
gs
sbb
push
dec
in
xor
add
fistps
add
push
jnp
lock
testl
mov
xor
dec
mov
and
push
xchg
lock
sub
ljmp
add
add
adc
hlt
std
sub
mov
lea
and
inc
add
pushl
mov
call
and
sbbl
decl
push
inc
cli
arpl
sbb
add
sub
lock
in
nop
adc
testb
and
jp
sbb
aas
add
jmp
mov
push
scas
fldl
incl
dec
in
shrl
add
add
out
xlat
cmp
out
or
pushf
xor
add
lahf
lret
add
add
mov
cli
cwtl
add
call
mov
iret
sub
incl
sbb
sbb
dec
lahf
xor
rolb
cmp
inc
das
add
mov
inc
push
add
add
mov
xchg
cmpsb
int
dec
incl
add
js
add
cmp
jnp
cld
cld
pop
out
push
add
jmp
jl
mov
sub
lea
decl
aas
outsb
add
and
add
adc
and
imul
add
sub
repz
ss
xchg
add
add
inc
sub
jl
sbb
test
add
es
push
mov
orl
mov
adc
cmp
add
call
shlb
out
add
mov
shl
sub
repz
xor
mov
inc
mov
or
incl
or
decl
out
push
addb
and
xor
sub
inc
dec
mov
add
lods
enter
jecxz
in
add
dec
mov
mov
add
add
jno
mov
cmc
jns
call
jne
fimull
push
mov
add
std
jecxz
add
adc
add
xchg
mov
inc
push
pop
push
test
and
decl
mov
sahf
enter
or
dec
push
repz
cmp
add
add
sub
lods
dec
push
mov
add
or
flds
add
mov
in
sbb
mov
arpl
dec
or
imul
gs
add
add
mov
inc
mov
add
and
inc
mov
xchg
add
mov
adc
pushf
int
add
jmp
lcall
add
daa
add
mov
add
incl
les
jg
xchg
add
xchg
dec
hlt
int
add
lret
sub
cli
mov
push
or
in
mov
sbb
mov
sub
js
and
and
cwtl
add
inc
add
add
xchg
add
aam
clc
into
jne
and
repnz
push
popa
iret
jp
call
ljmp
push
jne
pop
ljmp
cmp
add
aad
sbb
out
add
push
inc
add
and
lcall
push
bound
test
nop
add
mov
add
cld
push
add
inc
call
add
xor
aam
add
jmp
inc
decl
scas
inc
iret
inc
in
inc
int
cmp
cmpsl
jne
and
mov
je
add
pop
int3
sbb
jmp
add
sub
pop
add
add
add
cmpsb
or
or
push
push
adc
pop
testl
movsl
mov
add
mov
mov
shufps
or
and
add
out
ss
test
push
and
and
dec
or
out
xchg
fbld
dec
add
cmp
and
adc
test
decl
push
pusha
add
or
cmp
mov
cld
xchg
inc
jne
or
lds
ficomps
mov
jp
adc
add
mov
popf
adc
idivb
movsl
cwtl
add
add
in
hlt
gs
cmpsl
aad
test
rorl
adc
adc
push
pop
scas
mov
ljmp
add
or
push
add
jbe
push
testl
sti
stc
idivb
add
xor
aas
add
sub
push
jmp
sub
mov
and
mov
add
add
and
int
mov
and
jb
fildl
out
add
xlat
push
fldt
xor
adc
ret
add
mov
jnp
testb
and
add
add
inc
scas
jnp
fwait
and
lret
adc
sub
arpl
dec
jbe
mov
and
add
orl
scas
add
add
adc
sti
sbb
push
xchg
icebp
add
mov
les
and
xchg
add
mov
add
add
jl
pusha
push
mov
mov
ljmp
mov
add
data16
dec
cld
enter
es
inc
mov
movsl
jl
movsl
add
add
lods
loopne
leave
dec
scas
decl
adc
lods
add
and
jne
xchg
mov
jno
enter
sbb
add
mov
loopne
cwtl
xchg
mov
add
les
add
sub
or
push
push
push
sub
add
outsb
ja
and
mov
adc
in
xor
add
mov
fcmovbe
add
add
add
adc
es
fldz
push
add
and
cli
and
popa
les
xorl
and
hlt
add
dec
pop
rol
jae
mov
and
and
ja
mov
add
pop
lret
arpl
cs
pop
xor
cltd
add
add
mov
pop
dec
test
and
xchg
mov
ljmp
in
mov
and
add
adcb
out
add
out
jbe
hlt
dec
outsb
pop
sbb
adc
decl
jle
mov
mov
stc
jns
incl
hlt
dec
and
and
scas
jne
repz
jb
xor
add
mov
incl
and
xlat
add
sub
insl
or
cmpsb
cmp
data16
adc
sbb
add
cmp
stc
cmpsl
enter
mull
sarb
or
xor
and
add
and
mov
sub
stos
cmp
and
outsl
shlb
jne
add
pop
mov
lea
add
adc
xchg
jno
push
add
fdivp
mov
and
add
jle
pop
adc
int3
icebp
icebp
xchg
adc
add
cs
inc
mov
sub
mov
and
jo
add
ljmp
add
fdivs
cmp
xchg
andl
push
or
add
add
jbe
push
mov
mov
std
lock
call
ljmp
mov
incl
push
adc
cs
addr16
add
leave
mov
lock
adc
incl
hlt
fisubrs
popl
add
xchg
mov
ret
pop
int3
add
aas
cmc
xchg
aaa
add
cmc
inc
mov
mov
push
ss
mov
add
add
add
sbb
jno
ja
lcall
add
xchg
dec
or
adc
push
jb
add
mov
pushf
dec
or
int3
pushl
sub
outsb
aas
mov
add
incl
cmpl
and
mov
dec
xor
add
add
flds
xor
in
dec
jge
add
add
cwtl
pop
bound
mov
sahf
fisubs
sub
adc
xchg
fbld
dec
xor
addl
mov
bound
out
scas
lahf
inc
loopne
pmuludq
sub
fprem1
mov
add
and
add
adc
jbe
je
lret
in
ficoml
add
adcb
adc
lea
jae
add
and
repz
dec
sbb
in
adc
mov
lcall
lcall
test
add
pop
xchg
xor
pop
in
add
mov
pop
xchg
add
test
xor
stos
mov
out
enter
add
add
jb
mov
decl
sub
stos
add
incl
jne
jp
add
jmp
enter
add
xchg
xchg
add
incl
add
call
jns
mov
jg
out
push
add
cli
outsb
jns
mov
fcompl
add
subb
jbe
ljmp
cmc
jb
call
add
fucomip
add
add
add
add
add
into
ss
add
mov
add
inc
rcl
and
nop
mov
std
dec
fsubrl
sub
add
adc
xchg
add
aas
xchg
into
repnz
stc
inc
clc
scas
push
mov
xor
sbb
mov
sahf
sub
daa
je
in
add
pop
sbb
add
jl
sub
incl
and
push
divb
cli
call
xchg
add
or
jmp
insb
xchg
lea
jb
pop
cltd
test
bound
cli
ret
mov
dec
jns
add
popf
pushf
push
aad
add
sub
int3
cmp
scas
mov
clc
sbb
fwait
cmpsb
decl
add
add
dec
cmp
lods
fisubrs
enter
xchg
call
call
mov
mov
push
fs
cmc
add
cli
ret
addr16
xor
push
scas
jmp
add
jne
or
sub
jb
push
add
mov
mov
jmp
cmpsb
inc
inc
adc
arpl
pop
sub
loopne
in
add
pushf
repnz
lock
add
jmp
test
push
add
and
and
cli
loopne
xchg
jp
and
add
pop
and
in
cmp
lcall
inc
pop
sub
add
ja
add
test
push
cld
cmpsl
adc
inc
xchg
add
outsb
push
add
jae
jnp
push
call
gs
sbb
and
mov
add
cmpl
add
jmp
test
and
jl
jp
pusha
add
add
add
push
mov
add
cld
xchg
push
std
incb
add
ljmp
xchg
adc
notb
out
add
adc
mov
mov
add
add
cmp
adc
add
sub
sub
movsl
add
leave
and
push
cld
decl
mov
xlat
lret
cli
cs
mov
add
add
sbb
sar
out
scas
adc
jae
lcall
ja
jb
push
rcrb
sbb
xor
inc
xchg
add
adc
and
add
add
mov
in
jae
decl
loop
add
dec
movl
popf
out
cs
push
push
inc
sub
add
add
pop
js
mul
fiadds
add
rclb
and
shrb
xor
decl
mov
mov
in
repz
ret
sarl
fld1
dec
add
add
dec
ret
jmp
add
jnp
cmp
adc
les
movsb
sub
je
nop
add
fildl
add
cmpsb
cmc
andl
push
in
jle
test
mov
add
lahf
add
add
xchg
and
lret
jl
add
data16
add
out
test
mov
into
add
incl
decl
push
bound
dec
dec
sbb
mov
mov
add
idiv
pop
shrb
add
aas
pop
add
movb
add
mov
dec
loopne
add
stos
popl
sahf
cld
lods
int3
inc
add
mov
mov
mov
idivl
ficompl
aam
in
add
and
add
mov
test
mov
int
test
test
in
insb
add
iret
add
and
enter
hlt
and
and
mov
add
and
out
add
mov
iret
fldl
add
and
aam
sub
push
bound
add
sbb
add
incb
add
lret
mov
mov
mov
imul
test
and
push
mov
adc
sbb
push
sub
xchg
fisttpl
add
mov
and
cmp
and
sbb
fsubp
inc
push
add
xchg
loope
mov
add
mov
or
lret
add
cld
in
int
out
jmp
adc
xchg
mov
fnstenv
test
lahf
sbb
mov
push
pop
jnp
incl
lcall
cmp
divb
push
jmp
mov
je
xchg
xor
mov
roll
pop
ja
lods
fnstenv
test
add
inc
add
add
out
cmp
jae
add
fcomps
pop
cmp
dec
sub
mov
add
in
movsb
xchg
lods
lods
sub
add
ret
add
mov
shlb
dec
addb
add
pushf
cltd
add
add
imul
test
add
nop
xor
add
cld
and
dec
add
add
insl
xchg
int
call
into
mov
out
and
add
mov
pop
jns
add
add
adc
movl
add
and
add
push
add
scas
mov
sub
jl
jmp
add
incb
pushl
add
movb
add
xchg
addb
fsubrs
mov
jne
xchg
inc
insb
inc
lret
add
js
stos
pop
mov
add
add
call
add
lods
ja
add
cmp
mov
mov
cmp
add
and
lea
and
iret
mov
mov
incl
call
sub
sbb
fs
fwait
decl
lods
inc
cmp
jecxz
dec
push
inc
lcall
push
mov
call
pop
out
xchg
add
add
cmc
mov
sub
add
stos
fwait
cmp
and
lret
add
fisttpl
das
inc
push
insl
repnz
or
pop
add
push
incl
mov
repz
jge
add
lea
fs
add
and
pop
adc
lods
mov
cltd
sti
lret
adc
popa
add
test
add
add
mov
mov
mov
add
mov
add
add
sarb
jmp
insl
clc
or
out
add
enter
adc
sub
adc
sahf
xor
fimull
mov
xchg
stos
dec
cwtl
add
fdivrp
mov
mov
mov
add
mov
add
or
add
add
add
ljmp
dec
insb
add
pop
dec
fcomps
dec
push
xchg
or
push
inc
push
cs
aaa
jg
inc
add
add
push
sbb
add
push
imul
mov
inc
addr16
add
fbstp
inc
clc
and
add
xchg
inc
jbe
icebp
xchg
add
adc
inc
adc
push
incl
lcall
add
movsb
mov
aaa
popf
jnp
data16
push
mov
add
pop
pop
xchg
add
dec
xchg
mov
movsl
in
enter
call
or
or
add
mov
xor
dec
pop
sbb
add
scas
and
xor
fadds
scas
out
and
sbb
subb
xchg
mov
add
and
dec
pop
jns
and
add
inc
add
cs
aaa
push
cs
je
add
stc
mov
xchg
inc
and
pushl
inc
in
add
mov
icebp
out
add
add
sahf
add
and
dec
sahf
add
jmp
mov
jne
mov
fwait
scas
andb
pop
cld
fstpt
pop
adc
cmp
add
add
gs
mov
add
add
adc
mov
push
jo
mov
mov
add
xchg
repnz
and
lahf
xchg
ljmp
lock
pop
incl
ds
add
rcrb
adc
jae
mov
push
sub
adc
adc
add
icebp
pop
pmulhuw
or
add
cltd
into
test
pop
sub
iret
ss
incl
enter
mov
pop
test
cmp
push
mov
add
cld
gs
jmp
icebp
je
add
add
scas
pop
sbb
jo
stos
add
mov
and
adc
insb
pop
add
add
xchg
dec
sub
ror
or
pushf
pop
mov
or
add
add
mov
add
mov
inc
nop
mov
sbb
ljmp
orl
add
add
pushf
inc
and
decl
std
cmpsb
and
sbb
add
ficomps
mov
scas
or
test
int
push
pop
cmc
in
loope
jae
jmp
sub
mov
add
and
jmp
add
sarl
jae
push
jbe
pop
mov
dec
mov
sub
aaa
testl
add
sub
mov
add
sub
add
call
stc
dec
add
js
idiv
add
pop
popa
add
mov
mov
mov
cmp
mov
inc
add
push
ljmp
mov
push
mov
lods
xor
add
add
add
jb
faddl
add
push
xchg
add
adc
mov
fsubrp
sub
lahf
xchg
add
add
xor
negl
test
loopne
adc
pop
mov
add
mov
shrl
mov
add
add
pop
subl
add
cmc
jmp
add
incl
cltd
in
incl
cli
cmpsl
fwait
insl
mov
add
icebp
or
incl
add
dec
iret
addl
out
sub
into
bound
jno
cmp
push
add
jno
fistpll
sti
add
decl
mov
inc
incl
adc
test
lcall
and
incl
add
cld
mov
add
mov
stos
adc
incl
xchg
mov
add
pop
fnstsw
add
clc
sarb
jp
and
lock
xchg
mov
and
add
les
and
or
movsl
add
incl
mov
push
lcall
sbb
mov
jbe
cmp
and
push
mov
mov
jno
sbb
fildl
add
add
jecxz
add
sbb
fnstcw
lret
int
pop
ret
jl
jno
jbe
fwait
into
xor
sub
add
pop
jge
and
popa
lds
or
mov
inc
push
jge
repz
jg
mov
call
jbe
mov
mov
popf
data16
add
pusha
ret
imul
jb
xchg
add
nop
ljmp
sub
push
add
loop
add
clc
add
pushf
push
add
inc
mov
mov
push
lds
fdivrs
dec
test
leave
add
cmp
add
add
int
imul
add
adc
mov
mov
mov
mov
test
xchg
or
mov
add
gs
adc
mov
leave
pop
or
mov
add
push
data16
jmp
mov
cmp
dec
call
ret
add
in
test
add
push
adc
xchg
mov
dec
and
int
incl
xchg
pop
cmp
call
dec
pop
aaa
jae
and
aas
dec
cmp
mov
add
dec
or
add
decl
pop
sbb
add
add
stos
push
incl
dec
ja
cmp
ja
xchg
lret
mov
jmp
add
add
xor
and
xchg
aad
add
or
pusha
mov
cmp
leave
sub
in
inc
and
imul
mov
and
lods
cmp
add
jmp
sahf
add
stos
jbe
add
xor
incb
add
mov
sti
jp
sub
js
xchg
add
add
mov
mov
ljmp
fisttps
sarl
add
push
add
add
xchg
add
cwtl
ds
xchg
cmp
pushw
add
push
jge
mov
and
push
lret
data16
push
and
mov
lea
add
imul
mov
add
inc
xchg
cmovo
mov
mov
cmp
sub
data16
sbb
out
dec
adc
incl
stc
push
cs
push
inc
incl
add
movl
push
and
imul
adc
je
rcrl
inc
add
lock
mov
incl
and
leave
pop
or
mov
adc
fwait
jg
ljmp
xor
dec
loop
leave
pop
push
adc
daa
sub
or
fwait
mov
add
test
add
out
and
out
mov
add
jge
add
sti
cmpsl
push
adc
mov
ljmp
xor
add
pop
ficoml
dec
out
es
test
mov
or
subl
test
add
push
adc
mov
lea
and
add
pop
fwait
add
add
xchg
dec
inc
add
add
mov
mov
dec
in
out
fmuls
out
sbb
and
incl
mov
incl
mov
add
jl
pushf
test
aaa
adc
in
ja
scas
rcrl
add
lcall
fdivr
add
mov
je
icebp
add
add
add
add
xchg
push
loopne
incl
lahf
aas
ss
add
lds
mov
icebp
add
and
inc
out
add
inc
xchg
inc
sbb
add
ret
and
pusha
sub
sub
xor
sub
and
pop
jnp
adc
dec
int
mov
adc
mov
adc
mov
add
and
and
xchg
mov
js
imul
out
add
and
add
mov
jae
pop
or
add
fucomip
idivb
add
add
inc
push
frstor
add
inc
call
decl
repz
add
test
xlat
xchg
add
mov
xorb
add
subb
test
je
add
cld
mov
les
add
mov
cwtl
decl
insb
add
arpl
das
add
sub
dec
daa
sub
jne
or
cmpsb
xchg
add
pop
mov
mov
cwtl
ja
dec
test
mov
xchg
bound
add
js
data16
add
imul
pop
or
cmp
mov
and
lods
in
jmp
add
stc
jg
and
and
and
int
sbb
call
and
add
adc
add
repnz
adc
decl
outsl
aad
shl
add
in
mov
xor
mov
test
adc
into
add
xlat
call
sub
sub
add
adc
add
pushf
cmpsl
mov
sbb
add
jmp
push
ljmp
es
add
push
inc
mov
add
and
in
mov
imul
and
jl
in
dec
and
outsl
mov
xchg
repz
sahf
das
ret
mov
out
icebp
cmp
mov
lahf
mov
add
cltd
call
and
mov
cmpsl
scas
add
add
mov
add
sbb
add
jbe
push
lret
add
push
ret
dec
stc
inc
or
add
imul
aam
incl
sti
cmp
sub
popf
outsb
and
fldl
add
adc
push
mov
call
and
sub
mov
inc
jnp
push
mov
and
add
fbstp
mov
or
sub
dec
incl
rclb
add
add
cmp
add
aad
mov
cltd
and
xchg
incl
adc
mov
add
loopne
arpl
jl
mov
or
and
pop
jmp
sbb
incl
jne
add
jl
or
and
incl
sub
xchg
fisubl
fstps
sub
dec
mov
inc
sbb
test
add
and
adc
dec
test
sbb
and
jl
add
mov
dec
add
adc
dec
cmp
add
fs
push
incl
add
mov
les
add
and
adc
add
test
call
cmp
addb
push
sub
push
outsl
pop
and
add
scas
dec
add
add
out
loope
insl
loope
adc
call
add
rcrb
incl
jp
pop
mov
iret
mov
pop
or
add
fists
cltd
pop
and
xor
in
aad
adcl
jp
adc
add
sti
in
daa
and
jbe
adc
decl
es
add
add
mov
fimull
rolb
mov
add
out
push
aaa
add
cli
sub
dec
add
adc
mov
outsb
pusha
inc
push
outsl
rorl
and
sub
cmp
push
add
insb
push
cli
sbb
scas
jle
adc
add
and
cmpl
add
decl
cli
and
pusha
cmp
add
dec
sub
repnz
cmp
outsl
pushl
sbb
mov
jmp
mov
add
sahf
sub
mov
add
mov
xor
add
jmp
push
push
jne
mov
mov
jne
add
stc
in
push
add
mov
add
and
sub
pop
and
aam
cmpsb
addl
sub
dec
inc
add
nop
outsl
push
in
add
pop
add
cmp
dec
cmp
incl
gs
call
add
movsb
mov
out
ss
adc
repnz
call
pushf
xchg
sbb
push
mov
fwait
lret
enter
add
add
out
mov
inc
lahf
adc
incl
cmp
add
or
orb
or
add
adc
push
in
and
popa
mov
incl
add
adc
adc
outsl
scas
mov
jl
push
push
add
pop
push
lahf
mov
adc
aad
out
add
jmp
add
xchg
in
and
mov
hlt
ljmp
adc
decl
adc
imul
xor
out
add
ret
inc
adc
jo
out
lahf
lods
mull
jns
pop
and
mov
fwait
sahf
add
out
in
add
add
sub
mov
xor
pop
mov
xlat
incl
and
inc
scas
xchg
mov
xchg
popf
add
or
add
add
sbb
or
mov
sbb
hlt
sbb
xor
mov
fistpl
mov
movsl
inc
insb
mov
outsl
testl
incl
insl
movsb
pop
xorb
bound
add
stc
xchg
out
mov
mov
rolb
add
add
mov
es
popa
add
jl
xor
incl
outsl
sbb
add
cbtw
and
jge
jecxz
or
out
incl
mov
add
add
push
repnz
adc
adc
jne
ljmp
and
mov
mov
mov
mov
iret
pop
add
pop
cmpsl
outsb
mov
and
add
imul
dec
push
add
ljmp
in
data16
decl
clc
mov
xchg
out
in
pop
add
lcall
testb
sub
jp
push
jmp
add
xor
add
jmp
pop
sub
add
adc
bound
jle
mov
and
pop
leave
add
add
xchg
and
mov
xchg
aad
jl
repnz
dec
out
add
jnp
dec
pop
and
add
sti
mov
jae
mov
incl
add
decl
add
lock
push
mov
arpl
push
hlt
push
sub
push
jp,pt
xor
add
and
push
add
lcallw
sbb
inc
push
ljmp
sbb
xchg
sbb
pop
adc
push
xor
pop
add
push
pop
inc
mov
add
out
add
dec
mov
add
insb
sahf
popf
xor
add
add
inc
ret
add
add
data16
cli
in
xchg
jmp
aaa
dec
add
mov
rcll
ljmp
adc
add
push
jg
jl
add
mov
call
add
push
mov
add
add
inc
inc
rolb
add
mov
jbe
push
mov
xchg
les
add
xchg
mov
incl
xor
push
int
addb
add
cmp
ss
jmp
pop
xchg
ljmp
in
xor
add
scas
andl
sbb
int
in
das
test
sbb
or
and
add
xor
cmp
mov
cmp
mov
add
sub
outsb
add
cmpb
scas
adc
or
xchg
push
adc
jge
faddl
add
jmp
add
mov
decl
add
bound
inc
ljmp
hlt
andb
imul
in
mov
cmp
dec
add
jmp
or
adc
mov
add
adc
mov
push
jl
and
xchg
and
incl
push
iret
inc
dec
add
push
je
cltd
add
xor
cs
test
dec
mov
mov
and
add
jb
sbbl
add
in
push
mov
nop
mov
dec
add
xor
or
jne
add
sub
pop
mov
mov
add
lret
mov
xlat
lret
add
inc
jle
mov
xor
ficoml
add
mov
add
and
add
mov
incl
popf
lds
xchg
sub
pop
mov
lcall
xchg
fsubrs
push
daa
roll
inc
pop
das
incl
mov
cmc
xor
pcmpeqb
ljmp
add
sbb
sbb
test
scas
sbb
cmp
jl
popa
incl
outsl
mov
push
call
int
pop
pop
jp
add
ret
push
jmp
mov
add
adcb
mov
ret
jg
out
add
xor
and
push
mov
mov
add
ret
jmp
add
aas
incl
jo
lods
loop
push
std
mov
movq
add
add
incl
add
in
into
popa
cld
loopne
mov
andl
jb
add
push
add
push
mov
and
xor
pop
dec
in
and
mov
mov
push
add
and
out
std
and
daa
scas
mov
add
add
xchg
sbbb
mov
sahf
add
call
and
and
add
inc
lret
mov
add
arpl
mov
pop
pushf
adc
bound
add
dec
inc
rolb
add
not
pushf
xchg
add
adc
imul
or
add
add
inc
decb
cmp
in
and
imul
int
and
rcrb
pop
jno
sbb
adc
add
sub
jno
adc
add
add
lahf
loope,pn
lret
and
add
imul
xlat
add
fdivr
xlat
ljmp
add
mov
xor
out
stc
mov
cmp
mov
decl
leave
mov
push
xor
and
mov
add
add
mov
pop
dec
rorb
and
mov
pop
and
mov
mov
jecxz
cmp
ret
mov
int3
add
or
mull
scas
lcall
rolb
add
or
dec
scas
es
add
xlat
imul
xchg
pop
bound
adc
adc
xchg
add
jno
jne
add
mov
imul
insl
push
out
dec
add
mov
add
xlat
xor
add
repnz
out
sahf
sub
shlb
add
or
and
xchg
fcmovne
add
push
sbb
adc
das
ja
jmp
xchg
add
mov
cltd
jmp
cltd
and
decl
jmp
insl
incb
add
dec
push
sahf
sub
lcall
repz
pop
add
sub
xor
data16
incb
adc
push
subb
add
pop
into
jmp
mov
repnz
dec
add
mov
inc
dec
pop
add
rcll
add
xchg
stos
cmp
xchg
add
add
sbb
xchg
sub
sub
xchg
add
mov
mov
xlat
pop
out
and
fdivr
inc
popl
add
pushl
pushf
and
sbb
filds
adc
aaa
cltd
out
add
test
loopne
dec
push
pop
clc
dec
add
or
mov
pop
lahf
lock
add
decl
cwtl
push
jmp
loop
add
mov
and
jo
lcall
adc
pushf
cmp
push
ror
dec
ljmp
sbbb
add
mov
add
lea
dec
into
add
in
fcos
add
mov
call
xor
add
sub
out
insb
ret
adc
enter
mov
add
sub
add
call
in
sahf
and
jle
adc
mov
cmp
and
ret
jecxz
add
cli
lds
add
xor
and
add
incb
cmp
and
decl
and
mov
add
frstor
xlat
mov
adc
add
cmp
bound
add
push
push
add
push
out
xlat
and
inc
sahf
dec
xchg
jmp
or
xchg
add
add
incl
add
add
jnp
nop
mov
mov
leave
cmc
ret
cld
sbb
out
dec
xchg
pop
xchg
out
and
push
mov
add
sbb
sahf
inc
aaa
and
xor
int
enter
test
xchg
lret
push
out
jp
cld
decb
add
decl
outsb
jnp
sub
incl
cld
sub
add
incl
loopne
rcrb
add
cmp
add
and
cwtl
loop
or
mov
and
mov
adc
ret
sbb
add
xchg
or
lcall
add
inc
jmp
into
mov
stc
inc
idivl
test
call
add
cmpsb
dec
mov
and
call
jae
or
dec
insl
mov
jb
lock
pop
aad
mov
add
cmp
mov
sbb
rorl
add
and
mov
add
test
movsl
idivb
cmpsl
sbbb
pop
sar
mov
add
mov
xor
add
mov
bnd
pop
xor
mov
jno
aam
add
mov
lds
movsl
jg
add
add
lea
sbb
jl
int
insb
pop
add
push
push
inc
and
and
mov
mov
mov
mov
mov
add
push
sub
scas
cmp
cltd
add
jmp
test
test
jle
repnz
add
add
jge
test
int
mov
mov
mov
cs
mov
popf
sahf
int3
lret
inc
add
add
into
out
or
daa
pop
xchg
adcl
ficoms
jne
and
add
mov
mov
add
nop
out
xchg
insb
les
add
add
push
mov
popf
xchg
iret
jae
cmp
sbb
dec
enter
incl
or
into
imul
cmc
aaa
ret
push
and
mov
mov
imul
add
push
or
int
daa
daa
adc
and
ss
ljmp
add
mov
in
sbb
incl
pushf
adc
lea
mov
ja
push
add
mov
repnz
mov
adc
or
pop
add
cmp
cmc
mov
push
and
jae
incl
incl
xchg
add
add
sub
out
call
dec
add
test
add
mov
cmpsb
dec
loope
mov
add
pop
mov
and
pop
dec
stc
pop
stos
add
adc
or
add
enter
test
sub
mov
sbb
andb
in
add
add
push
and
iret
pushf
insb
add
pop
ja
cmpsb
adc
mov
movb
xchg
adc
jnp
pop
test
fwait
sti
dec
mov
rcl
lea
mov
add
icebp
add
mov
push
pop
and
add
incl
xchg
gs
mov
add
xchg
dec
imull
lds
add
mov
xor
jb
incb
xlat
pop
lock
jmp
mov
inc
call
add
mov
stos
pop
or
and
rorl
std
mov
test
inc
and
pushf
incl
fcoms
js
add
or
dec
dec
imul
std
call
xchg
add
addl
xchg
jmp
mov
out
filds
cmp
test
incl
add
fxch
push
xor
pop
imul
inc
jle
stos
daa
adc
push
xchg
and
pop
pop
icebp
pop
jne
int3
sub
cmp
in
adc
add
ljmp
add
inc
imul
daa
lcall
mov
jo
add
cmpl
add
sbb
cmp
add
pusha
mov
ret
push
mov
mov
inc
push
jbe
add
dec
pop
xchg
mov
dec
add
dec
pop
sub
or
lds
jmp
sub
es
add
lods
loope
add
and
jmp
addl
lcall
or
inc
and
add
adc
fbld
add
cmp
and
push
data16
int
add
xor
add
out
sahf
adc
mov
xor
sub
sub
add
add
rolb
add
mov
add
add
and
fucomp
mov
es
push
cmp
incl
mov
cs
add
insl
mov
add
adc
in
ljmp
inc
add
nop
mov
and
insl
and
sub
sbb
lods
mov
push
inc
pop
pop
pop
sar
and
pop
sahf
sub
add
mov
mov
sbb
loopne
ja
mov
add
mov
add
lret
mov
pop
add
fs
sub
mov
mov
cmp
jp
jp
mov
push
addb
movsb
mov
add
and
inc
int
push
cmp
adc
jp
in
pop
incl
xor
add
leave
xchg
cmp
pop
data16
clc
pop
inc
sub
xor
add
sub
add
jmp
aad
add
les
int3
xchg
add
cmp
fs
sbb
stos
fdivl
or
ret
fimull
add
cmp
movsb
jae
hlt
mov
test
rcll
pop
sbb
and
out
or
add
add
xchg
jmp
jge
inc
incl
out
int3
test
cwtl
add
add
dec
fcmovb
mov
add
sub
add
sbb
adc
add
fdivrs
add
mov
mov
int3
bound
ss
xlat
add
xor
fs
mov
add
xchg
xor
add
push
lcall
jmp
decl
adc
jnp
xchg
and
sub
sbb
jmp
pop
jmp
jmp
jae
cmp
add
add
add
add
call
add
add
add
jb
add
fcomps
xor
push
es
call
push
aas
add
fwait
aad
movsb
es
fmul
leave
and
adc
mov
outsl
je
add
add
js
add
mov
and
mov
add
fsubrl
mov
insb
push
cmp
xchg
mov
jge
scas
hlt
cmp
jnp
in
and
dec
int
ret
add
decl
and
fidivl
lock
inc
jg
push
decl
lea
mov
cmp
jg
je
sub
add
scas
add
inc
jl
or
in
add
xchg
pop
imul
fbstp
decl
call
decl
or
adc
jnp
arpl
mov
rcrl
scas
sub
add
es
jmp
push
pushf
mov
testb
mov
add
add
nop
and
push
pushf
jnp
and
incl
add
jne
icebp
pushl
int
lcall
add
pop
sbb
addr16
jno
inc
and
inc
sub
add
fldenv
sbb
jmp
pop
jg
mov
rolb
add
cmp
mov
xor
add
cmp
mov
mov
add
add
rorl
pop
jmp
add
fsubl
insl
inc
pop
int
ss
xchg
and
not
push
int3
roll
add
add
push
add
decl
aad
mulb
push
sub
fdivrl
add
pusha
adc
divb
or
mov
jmp
adc
add
std
sbb
add
add
dec
add
aas
out
add
loop
pop
imul
dec
scas
cli
aas
dec
arpl
add
add
in
bswap
scas
adc
add
repnz
xor
mov
jne
ds
or
cld
sub
mov
add
incl
mov
iret
testb
shrl
mov
jp
add
imul
add
pop
std
dec
jmp
push
stos
lea
jnp
add
ljmp
mov
or
add
call
mov
aam
test
ljmp
arpl
mov
push
in
lcall
sub
clc
ja
xchg
add
and
add
addr16
xor
fisttps
mov
inc
adc
mov
add
ljmp
xor
je
push
cmp
and
addr16
sar
mov
pop
pop
adc
add
aaa
sub
pop
incb
add
mov
shrl
mov
mov
and
add
add
add
mov
insb
jp
add
out
and
nop
sub
mov
add
pop
fbld
mov
pop
mov
xor
lea
mov
mov
push
xchg
andb
imul
xchg
jp
and
test
incl
xor
cmp
out
ret
add
inc
add
decl
pushf
inc
out
cs
lahf
arpl
loop
gs
add
add
jl
std
lahf
rcll
std
xchg
mov
incl
pop
clc
gs
and
cld
jp
add
cmpsl
test
or
jp
add
shr
fs
iret
stos
inc
call
int
xchg
pop
pop
add
or
push
loop
mov
add
lods
ja
and
loopne
xor
cmpsb
sub
mov
fldcw
inc
add
data16
cmp
mov
movsl
data16
add
add
sbb
mov
add
aas
xchg
add
repnz
add
inc
rolb
add
mov
aad
add
sbb
lret
mov
adc
mov
mov
add
test
mov
mov
push
or
mov
lds
add
or
sub
es
cmp
sbb
incl
lret
bnd
add
pushl
scas
frstor
and
scas
stos
add
cltd
scas
dec
and
mov
add
push
sbb
or
jns
jg
adc
pop
aas
dec
xchg
cmp
mov
add
add
cs
sub
pop
mov
mov
test
push
test
and
add
movsb
add
mov
mov
lret
incl
xchg
addb
mov
mov
mov
pushl
mov
and
pushl
insl
fistpl
cmp
add
add
jle
mov
jmp
mov
negb
add
pop
loop
ljmp
ja
cli
movsl
gs
js
sub
ljmp
int
adc
add
in
jmp
cltd
jo
and
adc
mov
xor
mov
popl
loopne
stc
push
add
or
sarb
add
cmp
mov
add
mov
xchg
mov
or
mov
add
jae
adc
mov
add
add
and
ljmp
sbbl
and
add
pop
lock
add
ljmp
faddp
and
sbb
jns
aaa
test
mov
subb
mov
add
add
pop
stc
mov
incl
ret
test
add
mov
jle
adc
out
cwtl
mov
shll
adc
in
and
movsl
xor
add
cmpsl
dec
movsb
pop
lret
add
stos
scas
add
insb
xchg
jnp
add
mov
mov
pop
imul
mov
mov
incl
add
insl
mov
mov
js
jmp
hlt
lods
mov
ja
icebp
incl
jne
loope
ficomps
out
pop
and
lea
add
icebp
mov
inc
add
add
dec
ss
arpl
fcomi
lcall
lods
incb
call
jns
jmp
fs
xchg
idiv
add
insl
push
add
jmp
add
pop
dec
add
ret
push
add
and
insl
add
mov
orl
adc
mov
es
arpl
add
and
std
gs
cld
cmpsl
out
cmp
lds
icebp
xchg
add
scas
xlat
inc
decl
push
mov
push
cs
mov
mov
add
add
mov
dec
add
add
push
or
add
add
addps
add
in
and
pop
xor
add
aaa
mov
and
add
dec
mov
add
rcrl
jp
add
aad
pop
add
fcmovb
dec
scas
cmp
je
xchg
pushl
fwait
and
dec
push
and
add
push
xchg
push
add
into
mov
mov
test
cltd
movsb
loop
mov
fiadds
inc
pop
sbb
lods
push
mov
rolb
mov
add
in
push
test
jle
add
jge
sub
pop
cltd
dec
add
out
jg
imul
sub
andl
jg
fcomps
incl
dec
xchg
jmp
repz
add
xchg
cmpsl
dec
and
lcall
mov
add
inc
pop
fwait
jmp
cld
test
or
mov
and
sbb
add
add
sbb
sbb
add
ret
push
jecxz
aad
push
xlat
and
faddl
mov
sti
jmp
xchg
pop
ss
add
push
jle
js
mov
add
ds
add
mov
add
mov
xchg
nop
cli
daa
mov
mov
lea
and
jo
lcall
adc
add
inc
dec
sub
add
pop
aaa
or
push
xchg
decl
add
and
add
iret
repz
xor
add
je
es
add
frstor
mov
add
mov
idiv
insb
adc
add
pop
popf
inc
bound
sbb
dec
mov
dec
add
add
add
mov
shrb
mov
dec
clc
ret
and
add
lret
xchg
mov
add
in
add
cmpsl
cli
decl
xchg
add
and
dec
stc
or
cmp
cmp
mov
and
sub
inc
add
add
mov
es
lret
and
mov
or
add
add
mov
popa
mov
incl
pop
fs
add
or
xor
adc
ret
and
outsb
out
add
fistpll
adc
cmpsb
and
dec
call
add
sbb
add
fisttps
and
adc
fs
out
subl
cltd
inc
add
incl
mov
movsb
sub
add
push
xor
test
mov
add
aad
dec
mov
sub
jl
xlat
add
dec
in
and
sub
add
mov
add
and
mov
add
ds
sub
and
out
pop
movb
jmp
mov
sbb
or
flds
add
add
lock
add
adc
enter
add
cmp
lcall
cltd
mov
movsb
adc
iret
cwtl
sub
xlat
mov
lahf
inc
add
adc
mov
lock
in
sub
mov
pusha
xor
lods
scas
mov
pop
rcrb
add
jmp
mov
mov
sub
add
movsl
mov
sbb
mov
inc
cmp
lret
xchg
scas
repnz
adc
xchg
or
lcall
sub
add
xlat
scas
add
add
adc
inc
or
orb
add
js
repnz
or
add
incl
add
lahf
inc
xchg
orb
lcall
repnz
ljmp
pop
lock
dec
fiaddl
cmpsb
sub
cltd
sbb
aas
popa
cmpsl
insb
mov
add
or
mov
incl
jge
mov
cmp
xor
enter
xchg
popa
push
cmp
inc
sub
add
jle
cli
aam
or
add
out
add
rcl
cmp
inc
mov
lcall
cmp
shl
cli
out
add
clc
xchg
int3
add
lods
pop
fistpl
and
jmp
stc
cltd
daa
lcall
std
sub
add
notb
cld
jnp
xor
incl
negb
mov
add
add
sbb
iret
mov
pop
cmpsb
sub
scas
mov
add
pop
test
repz
add
bound
xlat
add
add
mov
mov
lcall
sbb
inc
pop
lcall
add
pop
aaa
ljmp
movsl
or
and
pushl
repz
cmp
jbe
add
xchg
cmp
sub
add
in
clc
test
incl
lods
add
mov
rolb
add
xorl
and
test
and
mov
fiaddl
jg
xor
and
dec
ret
adc
mov
jbe
add
add
add
and
push
cmpsl
add
gs
roll
nop
pop
fldt
aaa
outsl
xchg
xchg
incl
aas
cs
add
loopne
mov
add
ljmp
adc
aad
pop
add
jns
popf
xchg
popa
cld
and
and
add
add
test
decl
lods
mov
div
add
mov
test
xor
add
mov
dec
fwait
jne
nop
outsl
inc
add
sub
xor
push
sub
loop
sub
aaa
and
add
mov
and
test
add
divb
incl
idiv
je
inc
push
sub
add
and
add
xlat
mov
je
test
add
mov
or
cmp
and
push
add
mov
shl
into
popa
sbb
xchg
in
and
mov
xor
add
scas
movsb
sbb
add
lcall
inc
push
mov
or
repz
int3
sbb
lds
add
jne
jbe
call
and
and
rcll
repnz
cmpsb
mov
jno
dec
add
es
loope
in
fiaddl
mov
add
add
jb
xor
scas
cmp
adc
jnp
lds
and
mov
inc
shll
add
sti
xchg
jmp
jo
cmp
add
mov
test
add
mov
scas
push
add
fsubrl
incl
pop
pop
mov
decl
add
in
in
add
pop
add
add
inc
xchg
jmp
adcb
mov
or
imul
mov
test
mov
pushl
inc
insl
call
xlat
pushf
popa
add
add
jmp
leave
cmpsl
jmp
dec
cmc
movsb
xor
and
add
jg
add
sbb
incl
sub
add
icebp
xchg
dec
adc
ja
rcrl
pusha
mov
verr
shl
mov
and
add
jb
les
sub
add
adc
test
add
loope
and
xchg
or
add
ret
mov
mov
jmp
or
mov
sub
jecxz
mov
mov
roll
add
xor
clc
inc
mov
cmp
xlat
daa
inc
add
add
add
sub
sti
add
incl
sub
repnz
mov
add
pusha
xchg
xor
iret
sub
jns
decl
cltd
add
mov
daa
sbb
add
pop
loop
xchg
lea
adc
mov
ret
add
lcall
sbb
mov
add
sub
or
loope
pop
add
cmp
add
add
mov
aam
add
ds
xor
icebp
iret
idiv
add
and
sub
lea
es
add
ljmp
ljmp
cs
lcall
and
mov
add
popa
mov
lret
push
pop
fiadds
add
xor
push
push
and
pop
xchg
cmp
and
in
imul
mov
loope
add
dec
mov
and
add
aas
mov
add
jmp
inc
call
jae
popf
add
scas
dec
mov
jp
jns
jo
mov
add
adc
dec
cmpsb
push
xor
call
pushl
in
push
inc
add
jmp
jnp
movlps
movsl
sub
xor
call
add
mov
add
add
dec
mov
out
add
and
or
call
loope
icebp
add
mov
xor
mov
cmp
jmp
inc
incl
add
dec
sub
mov
imul
xor
add
mov
pop
pop
out
add
jae
inc
mov
ljmp
mov
mov
pop
add
sub
xorb
call
jnp
mov
cmpsl
incl
call
adc
lods
jne
xchg
add
mov
test
jae
test
mov
decl
pushf
in
and
add
enter
adc
loop
jmp
fistl
add
jo
daa
xor
mov
add
pop
mov
xchg
adc
adc
xor
pop
lcall
in
scas
negb
popf
scas
arpl
add
dec
test
pop
sahf
inc
dec
xchg
shll
jnp
add
add
sbb
mov
loopne
xchg
xchg
sbb
mov
add
mov
jb
adc
stos
and
pop
cmp
and
and
add
mov
add
inc
adc
add
add
in
add
sarb
add
push
pop
add
aad
negl
jge
imul
add
clc
push
test
mov
cmpsl
repnz
sub
adc
dec
inc
xchg
mov
xchg
jg
jp
and
push
jae
iret
add
mov
in
add
insl
push
and
lcall
and
add
loopne
push
mov
leave
cmp
add
ljmp
adc
push
add
mov
decl
imul
insl
call
add
jns
jmp
push
mov
popf
xchg
ss
cld
addr16
cltd
add
pop
add
int3
xor
jmp
daa
mov
add
out
fisttpll
xchg
ljmp
imul
sub
mov
cmp
fwait
dec
add
int3
jae
cmpsl
in
incl
fnsave
ud0
out
aaa
int
mov
cld
loopne
test
aas
and
cli
jno
mov
add
rorl
dec
push
adc
and
push
arpl
dec
mov
mov
pop
push
jmp
fiadds
or
aaa
and
cs
jg
add
int3
int3
inc
cmp
mov
outsl
add
dec
mov
ret
popa
and
adc
mov
or
add
nop
adc
iret
cmp
arpl
pop
je
add
inc
in
and
jnp
cltd
lcall
add
and
and
incl
sbb
jge
jecxz
and
inc
call
iret
jbe
test
add
push
loop
jmp
sbb
lcall
add
lret
fbstp
add
add
sti
cmpsb
jmp
std
mov
mov
inc
xor
add
push
mov
add
and
push
movl
add
mov
mov
mov
shll
add
shlb
fildl
mov
cmc
add
test
es
loop
pop
cmpsl
pop
mov
icebp
repz
adc
add
mov
mov
fwait
jmp
add
or
mov
les
adc
leave
divl
sbb
insl
fstp
adc
daa
jge
incl
scas
jne
shll
mov
add
mov
inc
add
sub
stos
iret
rcrl
xlat
jns
mov
add
sbbb
add
adcl
jmp
and
stos
add
add
mov
add
sub
cmp
push
add
leave
sub
pop
insb
and
je
pushfw
adc
mov
jl
rorb
jmp
popf
cmc
mov
jne
sub
mov
mov
add
jmp
scas
aam
and
mov
and
sub
insb
cmp
mov
cmp
xchg
out
ja
stos
dec
out
jno
xchg
add
adc
sub
push
add
add
xor
movb
mov
add
and
std
inc
mov
stos
jle
mov
mov
lods
incl
pusha
ret
push
rclb
mov
adc
mov
xor
inc
push
jl
inc
cmpsb
scas
xchg
add
lds
ljmp
and
jge
addl
fists
add
xchg
add
mov
add
faddl
add
shlb
subl
push
cmpsb
xchg
insl
add
add
add
mov
add
and
mov
add
add
add
jno
iret
out
and
test
stos
incl
xchg
repz
add
cmp
or
jmp
mov
add
addr16
xor
loopne
cwtl
mov
mov
and
sbb
cli
movsl
adc
adc
cwtl
cmp
dec
add
add
je
and
cmc
pushf
sar
call
and
movsb
mov
incl
xchg
sbb
test
aam
add
in
cmp
add
popf
setno
aam
xchg
test
add
xor
inc
sub
lcall
out
mov
sbb
push
push
push
inc
or
mov
add
sub
xchg
add
push
lret
stos
cmc
adc
and
add
push
popf
jmp
lcall
jecxz
gs
mov
insl
lcall
call
test
add
loop
clc
adc
mov
sbb
mov
std
adc
adc
add
add
jns
into
mov
lret
bound
jmp
inc
orb
incl
mov
dec
push
adc
push
push
mov
sbb
add
clc
add
mov
add
pop
fwait
iret
dec
adc
out
add
jne
inc
fistps
inc
xor
mov
cmp
decl
mov
sbb
jbe
push
add
jg
sbb
inc
mov
add
mov
pop
push
mov
decl
call
dec
in
add
and
cltd
fcos
add
cmpsl
lods
mov
pop
hlt
std
loopne
sub
incl
mov
xchg
imul
add
test
xchg
dec
mov
jnp
push
add
cmp
aam
mov
mov
add
add
inc
add
jb
and
shlb
addl
jge
loop
adc
push
repnz
scas
jmp
push
inc
push
xchg
lds
pop
add
sbb
cmp
mov
stos
cmp
pop
add
add
mov
fdivs
mov
xchg
test
push
cltd
out
addr16
jmp
xchg
add
adc
insl
gs
add
call
in
mov
add
add
test
jmp
mov
push
cmpsl
mov
add
sarb
jp
leave
add
mov
adc
add
adc
sub
xchg
nop
jecxz
mov
fdivrs
xchg
mov
add
popf
cltd
push
dec
xorb
xchg
ja
mov
cs
mov
pop
mov
add
jbe
dec
sub
je
incl
add
out
mov
jg
adc
cwtl
dec
cltd
add
xchg
jae
incl
adc
jp
movsb
int
sub
add
xor
add
cmp
add
pop
mov
push
cmp
xchg
mov
sub
aaa
insb
mov
loope
xchg
add
call
xchg
orl
and
jg
push
arpl
out
ja
pop
add
sub
cs
mov
aam
sub
add
insl
or
call
add
test
or
xchg
adc
into
and
cmp
lret
xor
pop
outsb
add
add
xchg
pop
lret
sbb
add
add
sbb
mov
sarl
aas
in
out
add
dec
add
pushf
push
push
sbb
mov
repnz
daa
stos
sti
add
pushf
inc
mov
add
adcb
add
incl
mov
or
add
cmpsl
xchg
into
incl
mov
add
push
les
add
xor
int
mov
cltd
call
aaa
rorl
leave
mov
jg
add
add
jmp
incl
jl
cwtl
jmp
adc
mov
xor
add
mov
add
cmp
sti
add
clc
mov
loopne
lock
add
std
add
out
add
sub
mov
sti
add
pop
cmp
iret
lahf
jge
jmp
dec
jmp
popa
fcoms
icebp
sti
test
cmpsl
jp
add
sub
incl
add
pop
repnz
jnp
sub
add
xchg
mov
xchg
add
add
add
xorl
jecxz
dec
lock
insl
sub
add
inc
dec
mov
clc
lret
mov
add
jae
mov
into
cs
cli
stos
add
decl
inc
out
pushl
inc
adc
add
mov
ljmp
add
add
ja
ret
cli
add
imul
icebp
jg
ds
andb
cltd
adc
add
add
ds
incl
dec
int
and
adc
sub
jmp
enter
push
mov
mov
mov
jl
push
add
mov
xchg
call
dec
stc
mov
add
arpl
ljmp
fwait
push
adc
mov
push
jmp
pop
mov
in
lret
jnp
arpl
mov
incl
mov
ljmp
mov
add
and
pop
jle
mov
cmp
in
pusha
je
add
adc
add
stos
incl
sub
ja
pop
mov
add
addr16
call
nop
ret
ljmp
xchg
data16
inc
jno
push
mov
addr16
mov
adc
add
ret
movsl
inc
mov
movsl
add
mov
stos
push
and
add
and
imul
enter
and
add
test
add
add
imul
xchg
cli
lods
dec
ret
add
pushl
adc
pop
xor
add
mov
mov
test
jle
std
lods
mov
and
mov
and
icebp
sub
add
stos
cli
orl
sub
add
test
sub
repz
iret
insb
and
aam
mov
repnz
xor
cmp
mov
in
xchg
incl
add
scas
lds
xchg
enter
ljmp
es
add
add
push
inc
inc
outsl
mov
xor
add
push
lahf
cmc
inc
mov
add
notb
xchg
add
mov
push
inc
add
pusha
insb
in
fsubr
incl
fisubs
add
push
scas
add
out
xorl
and
mov
or
nop
cmp
int
int3
dec
mov
outsb
add
lock
add
icebp
repnz
call
mov
pop
xchg
pusha
fistpll
roll
adc
loop
iret
cmp
add
bound
sbb
hlt
scas
and
mov
mov
inc
pop
mov
fdivrs
add
incl
incl
negb
gs
add
std
add
and
jb
jae
incl
add
push
test
and
add
mov
mov
pop
fsubl
add
repnz
jmp
mov
push
jecxz
out
mov
mov
and
adc
pop
push
pushf
xor
add
movsl
pop
cmp
bnd
sub
adc
aam
xchg
sub
shll
pushl
lret
add
sbb
popa
sub
jmp
fmulp
xchg
mov
call
jmp
mov
inc
xchg
sub
add
mov
mov
ss
xchg
add
lea
dec
fs
fwait
test
mov
incl
sbb
xchg
mov
lret
in
sbb
and
decl
add
popa
push
mov
ljmpw
sub
fildl
mov
jmp
inc
xchg
incl
mov
fdivrp
in
iret
jecxz
lods
add
outsb
xchg
push
das
add
pop
addb
ss
ret
test
push
push
lahf
mov
add
mov
mov
adc
xchg
dec
dec
and
push
adc
push
aam
jecxz
mov
movsb
lock
arpl
icebp
pop
stc
decl
fistps
sarb
mov
add
add
rcr
movb
outsw
insb
popa
jb
ja
push
gs
push
outsb
jns
popa
jp
arpl
popa
js
je
jo
imul
jae
ja
mov
add
inc
and
and
adc
nop
idivb
sub
add
add
call
add
mov
fidivs
incl
mov
xchg
lds
rcl
pop
add
jle
pop
push
int
add
das
mov
fwait
mov
add
add
push
ret
stos
cs
addl
xor
testl
test
add
out
push
out
rcll
mov
inc
scas
jmp
aad
and
lcall
outsl
mov
sub
aaa
fstps
add
adc
or
out
xchg
xor
iret
mov
jmp
pop
das
fnstsw
push
add
mov
sbbb
lret
add
mov
lcall
mov
dec
mov
mov
add
pusha
out
mov
add
push
out
outsb
mov
aaa
add
xchg
and
int3
daa
cmpb
add
scas
pushl
fidivl
push
jae
out
jmp
add
arpl
testb
add
negb
imulb
jle
incl
add
imul
push
jle
and
incl
mov
iret
mov
lret
cmpsl
mov
jl
in
add
les
incl
lret
shrb
add
ss
mov
cld
in
dec
adc
cmpsb
and
and
in
sub
decl
aam
clc
in
incl
mov
jbe
jecxz
sbb
inc
xchg
adc
add
add
sbb
insl
cmp
add
scas
ljmp
adc
or
loopne
test
xchg
clc
popf
push
add
rcrb
mov
subl
push
enter
stos
idiv
sbb
and
inc
xor
fiaddl
decl
add
xor
xor
add
lahf
mov
mov
fdivrl
push
inc
loopne
nop
gs
and
dec
xor
and
add
add
mov
sbb
pop
inc
cli
les
mov
es
incl
repnz
sbb
fildl
int
rolb
add
repz
std
mov
sbb
mov
cmpsl
out
adc
add
pusha
popa
daa
fistpll
shrl
aaa
jp
pop
pushl
cmp
or
or
das
xlat
incl
incl
addr16
sub
add
jl
dec
and
xor
jo
add
incl
mov
stc
sbb
add
loop
add
sbb
fcmovb
mov
add
add
inc
jp
mov
mov
add
dec
jecxz
add
mov
sbb
xchg
jle
mov
movsb
jecxz
and
jo
lods
mov
add
cmc
sbb
xor
add
call
data16
jmp
or
xchg
or
add
adc
cmp
add
push
mov
adc
add
jmp
dec
pop
add
mov
add
gs
sub
dec
jne
mov
add
add
mov
outsl
inc
and
add
adcb
incl
fildl
sub
add
push
and
lods
mov
pusha
leave
pop
outsb
jle
add
fldl
and
outsl
or
sbb
mov
add
adc
incl
imul
inc
adc
and
add
xor
js
and
xor
jno
enter
add
ret
add
and
dec
pop
add
mov
in
loope
add
outsl
xor
add
adc
test
mov
cltd
push
xchg
xor
add
add
roll
add
sar
mov
neg
mov
and
sub
push
add
and
iret
mov
cmp
js
call
inc
inc
dec
cmp
sub
loopne
add
dec
mov
std
xor
xchg
inc
repz
add
add
xorb
lcall
lea
ss
jne
pop
aas
mov
incl
aaa
push
out
add
outsl
fwait
out
mov
dec
arpl
fstpt
decl
mov
add
popa
push
add
add
xchg
mov
push
movsb
bnd
push
push
scas
movsb
fwait
lea
and
mov
cmp
adc
sub
push
in
incl
call
mov
jg
call
add
adc
mov
add
jno
fldcw
fsubl
hlt
outsl
cmp
in
mov
add
add
in
lea
add
jb
add
fwait
mov
dec
xchg
sub
and
sub
incl
dec
add
dec
mov
mov
add
xchg
leave
leave
push
lds
jmp
dec
dec
mov
in
add
add
or
aad
and
ss
xchg
mov
sbbl
in
add
jmp
mov
lods
mov
lods
push
push
test
adc
out
ds
fadds
incl
add
insl
jg
push
adc
lds
cltd
movb
push
jae
inc
add
adc
xchg
add
bound
jmp
popa
xchg
adc
scas
pusha
pop
add
jae
shlb
add
arpl
dec
push
jae
incl
add
cwtl
outsb
fisubrs
daa
out
xchg
add
ja
movsb
repnz
inc
ffreep
sbb
add
js
stos
out
add
loope
rorb
cmp
or
jae
and
call
jp
cmp
scas
and
sub
popa
bound
shll
add
add
dec
add
mov
sbb
or
addr16
and
add
sub
out
in
cs
addb
and
add
jae
xchg
push
sub
dec
aam
in
mov
mov
testl
add
daa
adcb
test
xchg
cmp
sub
add
mov
adc
test
mov
call
adc
jmp
int
mov
jns
sbb
js
lcall
jmp
add
cs
lods
repnz
jnp
add
out
and
add
sub
add
jle
add
add
dec
std
sti
stc
xchg
cmp
std
add
add
add
addr16
inc
popf
mov
inc
pop
dec
mov
jmp
decl
das
pop
push
mov
add
add
add
and
mov
jp
jl
adc
xchg
addl
mov
loopne
out
mov
mov
or
imul
add
dec
mov
add
inc
and
xchg
sarb
add
push
outsb
sbb
add
subb
incl
mov
insl
cli
add
sub
ja
incl
xchg
mov
imul
add
iret
fwait
xchg
add
cmp
lods
adc
rorl
add
arpl
add
add
sbb
in
ljmp
repz
add
imul
enter
aad
add
andl
cwtl
int
add
or
add
incl
sub
movsb
jno
pop
fstl
roll
daa
mov
xchg
lret
add
sbb
jge
add
push
mov
cmp
add
add
jae
stc
sar
add
cmpsl
ret
sub
arpl
add
incw
test
loop
imul
lret
inc
in
gs
sbb
incl
and
jl
xchg
mov
add
xlat
mov
mov
stc
sar
add
mov
sub
mov
add
xchg
test
add
add
jmp
jbe
lds
mov
add
lcall
repz
pop
add
ljmp
jl
lock
cltd
insl
add
jl
adc
scas
jbe
ffree
add
add
or
stc
data16
add
dec
mov
mov
fwait
mov
and
jbe
mov
push
iret
repz
mov
cli
pop
jle
add
add
push
push
jge
test
add
add
mov
fldcw
push
inc
and
inc
add
mov
test
test
out
and
addl
call
mov
std
push
test
in
ret
mov
cs
jecxz
add
dec
lcall
stos
insl
sub
fwait
ret
es
adc
jp
jmp
incl
mov
subb
incl
add
add
adc
aaa
mov
xchg
pop
mov
call
outsl
aam
mov
mov
popf
sahf
incl
incl
mov
mov
push
add
cs
xorl
fnstenv
stos
add
in
add
jp
push
call
outsl
mov
sbb
jmp
add
mov
and
or
push
add
cmp
out
sar
dec
std
add
call
xor
dec
ljmp
lock
add
pop
shlb
incl
sub
decl
push
pop
lcall
mov
jb
pop
add
or
mov
loope
and
outsb
adc
adc
xchg
cmpl
and
xchg
adc
cmp
scas
pop
add
cmp
add
pop
mov
out
loope
add
sub
mov
add
movsl
enter
call
sub
mov
cs
testl
fildl
lods
add
cld
or
rolb
incl
add
aad
pop
push
out
add
jl
mov
add
fisubs
fsts
call
repnz
push
sbb
loope
adc
adc
jle
xchg
add
add
std
filds
xchg
jl
clc
lcall
decb
pushf
add
push
inc
out
mov
incl
ljmp
in
pop
xchg
je
incl
inc
es
xchg
or
imul
bound
mov
inc
out
and
mov
push
add
mov
frstor
add
dec
add
xchg
aaa
sbbl
adc
shlb
add
data16
and
add
and
mov
stos
add
dec
filds
xchg
adcb
mov
scas
call
mov
xchg
dec
int
xchg
pop
pusha
movb
clc
jmp
incl
adc
gs
and
into
add
add
mov
push
in
out
mov
incl
mov
pop
clc
adc
jno
lcall
je
mov
add
lcall
cld
mov
cmp
and
cltd
adc
lcall
in
ret
testb
leave
add
cmp
add
adc
insb
or
add
dec
test
sub
add
sub
or
insb
sub
add
shrb
cmp
mov
add
jle
add
lods
and
mov
lahf
aad
add
jmp
das
and
mov
and
add
sub
or
cmp
inc
adc
movsb
imul
jae
aam
push
inc
mov
push
popf
imul
push
and
cmpsb
add
add
jns
mov
add
mov
int
rorl
loopne
fistps
xor
xor
movsb
add
mov
and
incl
orb
dec
sub
call
lret
andl
pop
fsubs
jbe
incl
and
stos
out
and
popa
sub
or
adc
lea
add
and
pop
ror
daa
hlt
add
add
and
insl
fcoms
sbb
push
outsb
add
jno
fnsave
pop
jne
jg
fidivrs
cmp
adc
andb
add
lock
add
cmpsl
mov
mov
pushf
cmp
add
ret
cwtl
movsl
mov
push
add
das
sbb
mov
insl
adc
add
call
inc
sbb
mov
ficoml
xor
jmp
dec
pop
mov
sub
inc
mov
sbb
adc
add
call
mov
mov
jno
push
fcom
mov
mov
iret
mov
and
jbe
add
mov
shrl
and
mov
clc
jne
and
int
ret
mov
add
jno
popf
push
fnstsw
out
add
add
roll
add
xchg
mov
sub
enter
cmpsb
mov
add
add
and
sar
add
movb
inc
xchg
add
subl
mov
fs
mov
addb
cmpsl
jnp
add
rcrb
inc
jecxz
incl
add
mov
decl
test
aam
jg
sub
xchg
add
std
out
mov
stos
add
sti
call
add
mov
sbb
add
jns
test
add
dec
gs
sbb
and
and
or
cmp
orb
adc
mov
add
dec
lahf
push
inc
jno
inc
add
bound
sub
test
add
push
adc
insl
shrl
push
incl
in
pop
cmp
sub
incl
call
lcall
mov
ret
rcll
outsl
ds
out
add
lods
nop
iret
incl
jle
cmpsb
pop
mov
pop
pop
or
lods
adc
jle
mov
add
add
fadd
mov
add
call
test
insl
mov
add
jle
sub
or
jge
pop
or
sbb
jno
add
mov
cli
dec
jbe
mov
add
cmpsl
int
cmp
incl
or
outsl
jmp
dec
or
add
aas
sbb
outsl
sbb
pop
and
mov
xchg
ds
push
out
mov
in
fbstp
add
add
ja
add
pop
mov
sbb
aam
adc
mov
inc
xchg
lods
out
adc
ret
bound
add
pushl
movb
add
or
ss
fistpll
fldl
cs
or
decl
and
lcall
incl
dec
xor
mov
xchg
jge
cs
incl
add
push
pop
lcall
incl
dec
xchg
sbb
fldcw
cmp
pop
add
add
add
call
adc
incl
popf
sub
mov
xchg
add
add
sub
in
bound
sti
fisubl
add
loope
repz
into
mov
sbb
inc
add
xor
or
mov
add
dec
stc
sub
add
and
add
mov
incl
pop
jne
jbe
mov
loopne
movsl
test
add
jne
add
imul
mov
and
jecxz
push
adc
cmp
aam
adc
fadds
add
or
cwtl
jmp
jnp
add
xchg
lods
scas
ljmp
incl
add
cmp
mov
mov
add
dec
and
mov
and
imul
lock
push
int3
add
add
sbbb
sub
dec
jno
jae
add
xor
andb
test
pop
mov
xor
pop
jge
add
adc
add
jmp
incl
add
dec
mov
mov
ljmp
mov
js
pop
incl
mov
scas
cltd
xchg
mov
cmpsb
aam
and
mov
pop
inc
das
cwtl
add
add
shrb
lods
and
incl
add
jne
insb
lret
roll
ret
mov
incl
mov
testb
add
sub
mov
decl
in
insb
xor
rolb
jge
jne
sbb
mov
aaa
and
incl
mov
xchg
xor
cmpb
cmp
add
shlb
pop
mov
mov
sub
add
mov
insb
int
mov
fistpll
push
incl
arpl
sub
ljmp
fstps
xor
adc
add
jae
xchg
and
mov
jae
mov
jmp
arpl
and
add
add
sarl
es
lret
cmp
add
mov
and
arpl
adc
and
cmp
bnd
mov
mov
addb
xor
out
repz
stos
and
mov
inc
xor
add
add
pop
aas
mov
add
adc
jbe
ret
cmp
aad
and
or
cmp
xor
in
cltd
aaa
ret
mov
sub
add
lds
mov
add
das
mov
test
mov
cmp
repz
sbb
pop
add
cmp
ds
add
lods
mov
add
nop
mov
adcb
cmp
and
pop
cmpsl
loope
jb
orl
add
popa
xchg
add
sub
add
adc
add
mov
incl
adc
popa
xchg
loope
or
push
mov
and
xchg
mov
add
and
cli
add
add
add
add
lcall
cli
data16
repz
loopne
mov
or
ds
inc
push
mov
lahf
add
mov
insb
addr16
filds
lcall
jo
pop
add
adc
imul
add
les
adc
cmp
sub
test
mov
add
mov
jmp
fsubrs
into
add
add
aas
sbb
pop
aas
out
lds
sub
addl
lret
iret
xor
in
clc
mov
mov
mov
or
aad
add
and
rcll
lret
in
enter
xor
clc
js
mov
add
xor
xchg
add
add
xchg
adc
push
mov
mov
ds
push
incl
and
mov
add
leave
mov
sti
pusha
call
fisubs
mov
add
loopne
and
xchg
mov
xchg
jmp
inc
lock
add
cmp
decl
mov
adc
insl
decl
xchg
incl
and
mov
sub
add
popa
and
cmpsl
push
or
add
incl
lods
outsb
pop
and
shr
call
add
add
and
imul
pop
mov
shr
incl
movsl
xchg
mov
sub
dec
fmulp
stc
int3
push
mov
stos
add
pop
jmp
add
add
xchg
std
and
jne
mov
add
mov
incl
push
inc
jg
inc
lock
test
sub
dec
shrb
add
and
add
add
xchg
or
mov
out
add
dec
sbb
and
repz
adc
nop
fldl
add
std
xchg
pop
fstp
and
das
es
inc
add
and
subb
add
jp
xor
idivl
push
and
xor
inc
mov
add
add
pop
ss
rclb
add
xchg
loop
cld
and
or
jmp
mov
leave
xchg
xor
data16
push
mov
add
add
popa
verr
mov
incl
add
sbb
popl
xchg
or
pop
lahf
push
jmp
lea
bound
push
pop
shlb
out
cmp
mov
mov
jnp
pop
xchg
lcall
cwtl
incl
mov
insl
in
push
mov
add
mov
outsl
sbb
jns
scas
sub
add
arpl
testl
jmp
add
and
add
mov
ljmp
inc
mov
es
or
mov
inc
sub
adc
add
enter
and
adc
add
fidivrl
add
add
pop
inc
dec
mov
xchg
jecxz
mov
in
test
decl
test
sub
push
sahf
xchg
into
mov
dec
lods
and
add
and
daa
jg
or
push
mov
cs
sahf
lock
leave
and
fwait
or
add
int3
inc
cltd
push
lcall
pop
add
repnz
push
pop
mov
push
mov
add
sarl
add
sub
loope
out
dec
add
add
jl
stos
add
stc
stos
mov
adc
cmp
xchg
add
mov
add
mov
loope
xchg
jp
add
and
andb
das
std
lcall
mov
xor
std
add
clc
add
push
imul
addr16
gs
push
outsl
addr16
lcall
sbb
sar
das
xor
jnp
or
hlt
icebp
arpl
mov
add
clc
push
add
adc
pop
xchg
sbbl
imul
cmp
or
ret
sub
test
add
mov
push
add
bound
pop
aaa
and
add
add
add
fisubrl
add
and
add
add
fstpt
mov
leave
mov
dec
or
jb
ljmp
int3
aaa
add
mull
cmpsl
loopne
push
aaa
jns
add
rorb
xchg
add
mov
sbb
add
and
push
fiaddl
cld
mov
add
add
and
mov
add
add
incl
add
je
mov
das
verr
add
cmpsl
dec
cmp
and
add
mov
xchg
mov
repnz
out
cmp
mov
add
jle
nop
addb
incl
arpl
lods
in
addl
add
stos
and
loope
sub
stos
add
push
mov
aam
into
sub
lea
pop
repz
add
mov
into
cmp
jg
add
jecxz
or
or
xchg
cs
mov
lock
cmp
jbe
bound
mov
xor
movb
cli
pushf
into
push
add
add
xor
fs
lahf
mov
add
mov
jp
add
incl
mov
mov
scas
push
mov
mov
adc
add
sub
test
add
add
jle
add
jmp
add
decl
decl
aas
ror
rclb
cmpsl
shl
mov
cmc
shrb
mov
add
add
mov
rolb
add
ljmp
sub
push
loop
arpl
jnp
lret
lods
inc
push
lods
add
add
xchg
jae
and
jmp
es
imul
mov
lret
icebp
mov
test
mov
das
add
jecxz
cwtl
xor
stos
dec
mov
roll
add
cmp
aas
in
or
add
fnstenv
or
incl
add
and
add
inc
int
pop
cld
mov
ljmp
decl
xor
or
sub
dec
sti
add
scas
sbb
add
ja
cld
outsb
dec
outsb
mov
mov
mov
dec
push
push
enter
and
mov
add
cmpsb
or
mov
and
iret
mov
sub
leave
sar
and
add
cmpsb
fisubl
popa
test
mov
add
add
pop
shrb
lahf
inc
inc
add
cmc
pop
call
xor
cld
mov
jmp
insl
xlat
jne
add
fsts
add
dec
jge
popf
dec
mov
pop
add
sbbl
add
add
jne
in
clc
adc
add
xor
xchg
jmp
and
add
bound
jne
or
incl
mov
add
incl
add
add
cmpl
inc
icebp
adcl
repz
push
mov
incl
add
inc
mov
incl
ljmp
cli
pop
mov
in
lcall
dec
push
pop
xorb
daa
ljmp
hlt
les
add
add
xlat
mov
jmp
shr
mov
and
incl
jmp
inc
add
pop
jl
push
sub
mov
sbb
incl
pushf
dec
outsl
jno
jb
outsb
popa
jo
jbe
add
add
add
das
and
add
dec
fnstenv
add
add
adc
arpl
outsb
add
scas
cmpsl
adc
jge
lcall
movsl
out
mov
lcall
addb
push
and
and
and
outsl
das
mov
and
add
xchg
loope
mov
mov
xor
or
add
rorl
ret
add
movsl
push
push
adc
adc
add
adc
push
imul
loop
jns
incl
shlb
fs
in
xchg
add
add
and
sub
sahf
add
add
mov
mov
mov
jnp
lcall
mov
loope
sub
popf
loop
dec
add
mov
add
mov
outsl
jb
in
incl
sub
jmp
ret
mov
out
xor
add
and
or
daa
push
pusha
dec
and
inc
cwtl
cmpsb
cmp
add
incl
jo
xchg
imul
decl
cltd
inc
add
add
arpl
add
pusha
pop
add
aas
arpl
or
testl
add
dec
sbb
jl
incl
add
andl
add
add
add
add
enter
or
and
imul
add
inc
push
leave
out
xchg
sbb
mov
lea
leave
pop
adc
incl
and
ljmp
push
js
mov
sub
pusha
lcall
fisubs
dec
and
mov
mov
mov
add
call
push
sbb
xor
dec
ljmp
add
sbb
incl
addl
incl
jb
xchg
std
incl
incl
pushl
cmp
js
add
lcall
mov
push
test
mov
movsl
jne
push
add
xchg
cmp
add
add
jge
jle
insb
add
add
add
ja
ffreep
lods
cmp
add
mov
sub
rcr
repnz
repnz
jl
jmp
push
pop
inc
add
mov
test
fs
decl
int
pop
add
add
mov
imul
mov
inc
mov
push
cmp
incl
add
flds
lock
add
das
jmp
sub
in
inc
add
xor
fmull
add
or
call
push
add
add
push
add
data16
mov
mov
lds
mov
add
xchg
add
mov
stc
int3
sbb
pop
sub
pop
mov
add
jle
adc
or
incl
add
or
add
mov
outsl
jne
add
mov
push
cmp
or
adc
pop
out
incl
adc
test
popf
fwait
mov
add
xchg
jle
dec
mov
adc
add
add
fwait
cli
scas
push
incb
add
pop
insb
push
add
incl
sbb
cwtl
imul
xchg
notb
xor
decl
or
mov
pop
repnz
push
xor
xlat
mov
shll
inc
mov
add
out
add
in
add
mov
xor
test
mov
add
and
test
das
inc
test
add
jne
xor
add
add
gs
mov
add
nop
or
jno
add
adc
mov
mov
test
int
pusha
and
incb
lods
hlt
std
jnp
adc
incl
add
je
pop
mov
add
cmp
sbb
lods
int3
add
and
out
popf
add
repnz
add
add
in
or
add
pop
loope
mov
and
inc
repz
add
mov
insb
testb
lock
xor
test
loop
add
fs
in
add
add
xor
lock
call
jmp
add
jnp
inc
jg
push
and
dec
sar
cmp
mov
adc
add
mov
add
xchg
and
and
mov
incl
adc
nop
add
adc
dec
mov
inc
aas
push
xor
add
out
pop
adc
cmp
cld
cld
inc
add
cmp
mov
incl
jp
mov
add
in
pop
pop
insl
pushl
jl
cmp
adc
popa
aaa
dec
add
inc
sub
cltd
in
mov
addl
cmp
add
add
adc
cmp
adc
incl
push
roll
add
ja
add
fiaddl
std
repz
add
push
xchg
cltd
push
inc
int
fadd
aas
mov
add
add
out
xchg
mov
icebp
xor
fldl
ljmp
clc
sbb
sub
test
sbb
fisubs
add
cli
mov
mov
add
cmpsb
out
add
add
add
sahf
add
jl
mov
and
shll
mov
lret
xchg
sub
inc
fnstcw
add
jge
jmp
jmp
dec
add
add
and
jne
and
cmp
in
push
and
mov
loope
pop
pushf
out
fsub
add
clc
jb
and
add
add
icebp
sarb
iret
out
and
add
xchg
daa
push
mov
mov
add
add
fucomi
mov
in
mov
jge
pop
insb
ret
daa
inc
mov
add
and
mov
add
shll
xchg
es
enter
mov
lea
addb
sub
cmpsb
add
push
xor
add
ja
add
or
or
incl
xchg
inc
add
add
mov
mov
out
inc
add
and
sub
mov
incl
jl
cld
lcall
jmp
mov
call
lods
add
add
pop
add
and
incl
inc
aaa
xchg
and
jmp
je
sbb
incl
add
dec
and
add
add
xor
xchg
add
add
pop
add
ljmp
xchg
cmc
pusha
or
mov
add
std
mov
incl
inc
test
pop
mov
sub
std
pushf
adc
ds
jae
aad
sub
xchg
sub
pop
call
add
pushl
mov
and
jp
cmc
or
add
mov
pop
sarl
lcall
outsb
divl
cltd
cmc
pop
add
add
call
mov
testl
icebp
adc
add
add
fmuls
mov
in
dec
mov
dec
mov
cmp
sti
je
cs
cmp
and
inc
cmp
mov
add
mov
mov
add
leave
lds
iret
add
call
add
sbb
mov
add
sub
mov
add
ficompl
fnstenv
add
add
and
cli
and
mov
xchg
incl
dec
insl
jns
jmp
mov
add
arpl
mov
add
add
jle
jmp
add
add
xor
sub
sti
sahf
sub
add
nop
dec
add
aad
xchg
add
mov
je
outsb
add
and
sub
adc
pop
jl
pop
mov
add
lds
xchg
push
mov
jecxz
add
divb
movsb
pushf
xor
xchg
mov
sbb
outsb
add
adc
out
into
mov
adc
aas
and
lea
adc
add
adc
pushl
add
adc
sub
xchg
dec
add
inc
icebp
and
add
mov
loope
push
rorb
mov
push
push
add
jb
add
add
cltd
sti
add
mov
add
mov
decl
adc
rolb
iret
cli
fidivrl
pop
push
cmp
sub
cltd
adc
add
push
push
mov
add
cs
cli
lock
adc
add
int
mov
popf
fnstsw
scas
cld
xlat
add
in
add
pop
jmp
jle
add
add
shlb
sbb
pusha
mov
xor
mov
int3
in
add
inc
loope
mov
daa
into
stos
sub
ljmp
gs
sti
or
sub
add
adc
loopne
add
add
in
fmuls
inc
rorb
add
dec
and
add
xchg
je
in
clc
and
fwait
test
add
jmp
mov
mov
push
incl
ljmp
add
mov
pop
inc
cmpsl
add
setae
or
add
jmp
loope
add
push
cmpsb
imul
add
add
jg
xor
lock
xor
int3
dec
mov
add
push
aas
pop
mov
add
adc
fdiv
stos
jo
mov
jmp
pop
inc
cs
jns
es
aad
add
mov
xor
adc
dec
mov
scas
jo
mov
sbb
add
stc
repz
add
jbe
sahf
add
dec
punpcklwd
add
dec
fcos
aas
and
pxor
in
sub
dec
pop
mov
lds
and
adc
jmp
xlat
roll
incl
repz
pop
dec
data16
out
xchg
jbe
mov
xor
push
cmp
cs
adc
incl
jae
or
test
jno
imul
ljmp
lcall
pop
add
fisubrs
add
aam
xchg
inc
mov
add
pop
pop
call
divb
hlt
and
add
adc
fstl
test
mov
cmp
pop
add
mov
cs
mov
adc
add
inc
pop
int
inc
out
imulb
add
pop
mov
shlb
jno
add
popf
sbbl
mov
cmc
mov
and
add
jge
incl
cmp
fmuls
imul
mov
xor
xchg
sub
movsb
jo
add
add
add
mov
pop
cmp
in
add
add
mov
popa
jg
add
xor
add
roll
pushl
outsb
jle
add
cmc
sarl
add
int3
mov
ljmp
pop
ljmp
out
inc
xorl
stc
and
jecxz
add
and
pop
pop
mov
repnz
incl
ret
test
add
lods
popf
jno
mov
add
push
imul
loopne
jge
xchg
incl
sbb
mov
mov
jae
jmp
jmp
push
fdivrs
ds
incl
add
stc
sbb
xor
adc
add
sub
mov
out
nop
std
mov
push
rorb
lcall
add
fwait
call
and
and
and
mov
push
push
subl
and
in
mov
or
push
js
call
ja
add
or
add
lock
push
mov
dec
cmp
add
add
pop
sbb
push
adc
mov
adc
add
push
add
or
in
xchg
pop
out
add
sub
bound
and
jmp
and
pushl
mov
pop
lea
dec
mov
jge
sbb
pop
in
ds
jp
pop
push
mov
sbb
daa
add
add
push
mov
add
add
iret
lock
fiaddl
jge
jb
rolb
mov
and
jbe
imul
mov
xchg
pusha
pop
adc
incl
add
mov
out
mov
add
loop
inc
add
out
mov
dec
adc
xlat
popa
loop
mov
leave
adc
pop
and
adc
decl
inc
lea
and
mov
ljmp
add
test
roll
inc
pop
call
bound
gs
imul
insb
gs
mov
out
cmp
mov
jmp
stos
mov
add
add
decl
jle
push
add
stc
addl
pop
or
mov
and
cmc
in
add
andb
ficompl
push
add
mov
add
incl
xchg
fs
and
inc
add
ds
test
add
jmp
jae
es
push
mov
lds
lods
and
mov
mov
add
sbbl
dec
dec
loop
add
add
test
or
sub
jle
sbb
mov
add
mov
add
clc
mov
cmc
lret
pop
sbb
add
add
xlat
lret
ret
mov
out
in
inc
jge
mov
add
vmread
inc
bound
add
movsl
jg
in
mov
add
push
outsb
jb
mov
loopne
mov
pop
cmp
cmp
mov
adc
inc
add
mov
pusha
les
fs
or
push
and
and
movsl
pop
daa
test
popf
pop
call
popf
jle
xor
mov
jmp
add
dec
testl
add
iret
push
mov
add
shrb
add
xor
push
inc
lods
xor
mov
rolb
incl
and
testl
or
push
add
mov
add
add
add
adc
mov
mov
or
or
jmp
mov
mov
and
add
add
fmuls
sub
mov
xchg
mov
mov
cmp
lods
and
add
mov
test
mov
jns
cmp
push
dec
inc
jae
pop
add
and
inc
jmp
shlb
sbb
dec
mov
xchg
mov
add
and
add
imul
fwait
add
add
lock
add
ret
in
sub
and
cwtl
pusha
mov
and
notb
inc
push
icebp
not
add
add
ja
out
and
mov
pop
jae
cld
fldcw
pop
out
add
sub
jmp
xor
add
nop
mov
add
mov
add
decl
or
mov
xchg
mov
mov
scas
shl
add
xchg
aad
adc
popa
pushf
ja
fildl
sarl
mov
mov
sub
repnz
leave
and
xchg
addr16
lods
int3
decl
mov
icebp
sbb
push
adc
in
pop
call
push
rorl
je
ja
je
jae
add
add
decl
add
inc
mov
mov
decl
add
and
xlat
add
sub
sbb
insb
imul
push
data16
test
pop
fstps
mov
add
adc
mov
or
mov
add
add
adc
mov
rolb
jg
jbe
hlt
decb
mov
push
pushf
jg
or
mov
mov
div
xor
dec
add
add
mov
add
xchg
dec
ficoms
in
and
rol
loopne
ds
outsl
mov
cmp
incl
adc
decl
mov
add
add
out
push
inc
incl
or
testb
inc
push
adc
testl
adc
lahf
xor
les
add
xor
decl
movsl
fwait
mov
add
inc
lcall
push
into
add
loope
add
mov
ljmp
jecxz
add
add
pop
stc
mull
add
aam
outsb
sub
and
add
cmp
and
add
mov
mov
and
in
cmp
out
and
push
inc
loopne
push
incl
or
xchg
rorb
add
cmc
dec
pop
jae
cmp
mov
movsb
ds
xlat
jae
mov
add
push
popa
jge
xor
or
add
add
and
mov
ret
sub
dec
movsb
loop
sub
inc
movsb
sbb
adc
add
add
xchg
call
test
mov
stos
movsb
mov
add
or
mov
fmul
push
sbb
mov
daa
push
aas
add
mov
cmpsl
inc
dec
or
int3
add
mov
jb
rorl
add
jmp
cmc
js
add
lret
out
out
add
andb
add
jnp
xor
cmp
testb
and
mov
and
add
add
std
add
add
cld
dec
jnp
pop
add
notb
or
mov
and
shlb
add
bound
add
in
sbb
test
jl
add
popf
cmpsb
decl
aad
lret
add
mov
sub
dec
add
and
out
ficoml
and
sub
nop
add
mov
outsb
mov
sbb
popf
rorl
ss
mov
or
jp
sar
add
stos
imul
sahf
push
ljmp
push
in
int3
dec
add
daa
mov
xor
xor
sarl
jmp
stos
mov
mov
cmp
add
call
adc
push
add
add
into
ja
add
out
scas
scas
cmp
add
add
out
call
subl
cmp
sub
xchg
adc
incl
push
add
std
jecxz
push
xchg
nop
pop
or
lods
cltd
sub
add
add
incl
and
mov
div
and
and
test
xlat
rcl
push
lahf
add
pop
inc
pop
add
push
sarb
inc
add
icebp
jb
add
and
scas
sub
add
add
or
push
insb
cmp
mov
int3
mov
fidivrl
out
add
and
ljmp
arpl
int
add
add
add
mov
jb
into
popa
add
call
add
repnz
xchg
in
and
add
adc
lcall
add
test
push
sub
cmpsl
subl
fdivl
adc
lods
repnz
and
dec
jg
sub
outsl
xchg
lret
movsb
mov
cmp
ret
add
xor
not
adc
jbe
lret
inc
incl
das
aad
mov
and
sbb
dec
mov
xor
dec
sub
xchg
inc
sbb
shrb
xchg
jmp
and
xor
cmp
add
add
add
adc
mov
in
clc
jae
punpckhdq
inc
pusha
add
cmp
rcrb
mov
and
dec
xchg
pop
out
incl
add
adcb
adc
cmp
add
lea
add
dec
pop
fildl
add
pop
dec
cmc
push
jae
add
adc
loopne
add
add
popf
add
outsb
cld
push
jno
add
jnp
add
or
cmp
sub
xor
dec
jg
es
xor
add
mov
add
add
xor
insb
add
incl
pop
mov
lcall
je
mov
xor
xor
add
add
pop
inc
ds
dec
jns
add
adc
addb
inc
mov
ljmp
xchg
mov
pop
je
dec
jg
mov
add
rorl
pop
or
push
scas
mov
mov
sub
or
ja
mov
inc
dec
inc
xor
add
rorl
lret
icebp
push
add
adc
push
jp
jmp
add
add
pop
mov
ret
or
mov
scas
mov
rorl
loope
xor
add
dec
aaa
aaa
data16
call
mov
incl
add
stos
neg
add
incl
orl
or
mov
add
popf
inc
scas
lcall
shrb
push
out
stos
add
pushl
add
dec
adc
inc
add
icebp
cmp
leave
mov
loope
adc
dec
cmp
decl
sbb
add
add
jno
mov
incl
add
add
in
lds
mov
arpl
add
roll
incl
das
sub
xor
and
push
hlt
jmp
cs
dec
adc
incl
jp
pusha
jbe
int3
mov
jg
add
dec
popa
or
add
sti
test
loop
orb
push
mov
cmpsl
aam
sti
mov
push
dec
adcb
sub
lods
mov
shl
pop
sub
add
jg
push
add
xchg
jbe
testl
imul
pop
stos
loopne
add
cltd
pop
aas
push
cli
and
add
ljmp
add
add
je
outsl
mov
mov
adc
mov
jl
fiadds
sub
jns
testb
add
jns
push
or
cmp
ljmp
lcall
jp
add
test
cmp
add
jp
mov
and
cmp
add
add
mov
mov
adc
inc
rolb
add
mov
add
mov
addl
add
outsb
into
cltd
cmp
mov
xor
mov
mov
sbb
pminsw
add
pop
pusha
insb
filds
dec
mov
add
add
test
pop
cmp
hlt
add
or
or
fisttpll
dec
jae
ds
sub
addb
and
loopne
mov
jmp
add
xchg
movsl
add
jns
pop
inc
add
dec
dec
and
xchg
mov
pusha
lret
add
pop
lea
out
add
incl
mov
std
xor
and
fnsave
addb
test
xchg
add
lock
sti
lret
hlt
push
aam
ljmp
add
int
cmp
add
bound
and
adc
add
sub
add
inc
mov
repz
ret
sahf
add
jae
enter
add
mov
call
add
and
addr16
imul
jle
inc
and
add
and
add
fstp
push
movsb
mov
add
cmp
add
incl
decl
pop
cmp
and
popa
fiadds
sub
mov
add
imul
incl
ficomps
pop
std
add
loop
mov
lods
jmp
iret
xor
add
test
enter
and
and
adc
das
or
fildl
xchg
in
inc
cmp
mov
or
add
mov
add
xor
int
pusha
and
add
leave
mov
inc
mov
loope
insl
mov
movd
push
sub
mov
xor
mov
inc
add
incl
ja
dec
or
orl
popf
push
add
scas
add
add
mov
loopne
mov
push
setns
add
sbb
add
xor
adc
jmp
xchg
add
mov
in
jnp
popf
jmp
incl
pop
daa
lcall
add
xchg
xchg
cmp
add
add
shlb
scas
sti
dec
adc
or
add
stc
hlt
xchg
popa
xchg
sub
lret
mov
mov
add
push
ficoml
mov
adc
cmp
mov
mov
sub
add
mov
dec
adc
jnp
add
add
mov
ret
scas
add
pop
mov
cld
lds
xchg
jg
fldenv
lock
add
mov
add
aam
mov
lcall
xchg
mov
jle
add
gs
sub
add
cmpsb
mov
add
sbb
mov
nop
data16
mov
add
int3
mov
mov
mov
lcall
test
nop
jecxz
lcall
mov
loop
adc
mov
add
dec
push
test
add
pop
lock
inc
adc
mov
mul
cmp
js
and
mov
incl
ljmp
or
sbb
hlt
add
jmp
mov
inc
es
cmc
push
and
add
mov
scas
mov
cld
repz
bnd
mov
add
mov
add
add
add
icebp
call
and
inc
push
inc
add
or
push
mov
inc
add
push
pusha
mov
add
sti
cltd
aam
leave
add
add
mov
pop
mov
incl
inc
pop
add
and
icebp
rep
cmc
pop
inc
test
dec
andl
xchg
add
add
add
sub
sub
pop
add
out
rolb
push
nop
pop
stos
add
lret
incl
push
xor
incl
jle
mov
repnz
jne
add
and
mov
lods
jmp
push
mov
out
ja
gs
shlb
out
xchg
arpl
sub
decl
inc
xchg
cwtl
mov
add
ficomps
or
inc
or
pop
adc
adc
jecxz
clc
adc
pushl
sub
jns
adc
iret
mov
add
lahf
nop
xor
xor
mov
stos
cli
mov
outsb
xor
cld
add
sub
jecxz
imul
pop
push
add
mov
add
mov
aam
add
incl
xor
ds
add
mov
mov
add
call
xchg
addb
out
lret
daa
mov
jl
in
ljmp
pop
add
aaa
decl
les
jbe
outsb
sub
xchg
decl
sub
mov
and
shll
leave
jmp
push
orb
call
imul
push
clc
pushf
adc
jb
pop
xlat
negb
jo
add
lods
sbb
dec
lods
add
and
sbb
sub
add
jl
mov
cmp
fwait
int
add
movsl
cmp
test
dec
add
mov
add
sub
push
test
lret
fdivr
add
fwait
cmpsb
add
mul
mov
incl
add
push
and
mov
incb
pop
xchg
push
and
add
mov
mov
push
add
pushl
aad
mov
clc
incl
lods
aam
adc
adc
sarb
cwtl
adc
pusha
int3
mov
out
add
loope
and
add
add
xor
lret
mov
or
jno
add
adc
mov
ljmp
xchg
cmp
add
fnstsw
add
jne
mulb
cmp
add
push
push
add
and
roll
jl
aam
add
xchg
xor
and
mov
mov
dec
lcall
incl
cltd
mov
inc
andl
mov
jne
jno
incl
lock
mov
adc
xchg
add
ljmp
add
jnp
hlt
je
push
decl
das
mov
mov
incl
mov
adc
mov
pop
in
out
inc
add
insb
ret
in
fwait
push
sbb
add
and
test
mov
mov
and
setns
add
add
cwtl
movsb
rclb
pop
fstps
sub
mov
testl
sub
cmpsb
xchg
das
add
pop
sbb
xlat
enter
add
lds
add
out
ss
cmpsl
shrl
or
mov
fiaddl
mov
mov
ljmp
mov
pushl
xchg
andb
incl
add
nop
add
fcoms
andl
mov
imul
cmpsl
add
push
add
add
add
lret
fdivl
and
testl
add
fwait
xor
mov
jmp
add
lock
std
imul
add
jbe
ret
mov
add
sahf
pop
pop
mov
fisubl
insb
cmpsb
mov
loopne
stos
add
inc
cmp
add
xor
incl
or
xor
add
dec
jns
psraw
sbb
outsb
fwait
jmp
inc
jbe
sbb
xor
push
decl
jbe
add
add
cmc
or
add
and
repnz
add
mov
leave
add
movsb
sbb
roll
test
add
sub
faddl
repnz
addb
add
pop
cld
lret
jge
jmp
and
inc
add
movsl
fcompl
adc
add
sbbb
sti
in
add
inc
jmp
and
leave
dec
inc
pop
add
add
add
pop
push
rol
add
pusha
call
or
inc
mov
popf
and
cmc
adc
and
in
mov
add
and
cmpsl
mov
stos
incl
subl
outsb
or
orl
cs
hlt
stos
xchg
roll
add
add
pop
sbb
dec
jmp
call
icebp
mov
add
rorb
movsb
add
sarb
movsb
aaa
cs
xor
lahf
cmp
push
xchg
mov
decl
pop
mov
xchg
add
add
xchg
aaa
jmp
fisubrs
cmp
cltd
add
loop
add
rcrl
incl
je
jmp
lods
lcall
adc
in
dec
cli
mov
icebp
into
mov
repnz
or
and
lock
add
mov
sub
imul
mov
add
out
mov
jge
repz
sub
inc
inc
mov
add
neg
or
mov
fwait
test
add
std
and
mov
push
sbb
pop
xchg
in
add
add
daa
add
cmp
lahf
sub
dec
cmpsl
pop
sub
fs
mov
mov
sub
iret
aaa
in
and
and
or
add
adc
lods
and
fisubl
sub
push
push
dec
or
add
out
insb
jmp
fs
and
fsubrs
add
mov
sub
mov
add
aas
pop
fldl
add
lea
incl
mov
ss
decl
jmp
incl
and
or
add
adc
add
inc
repnz
add
fmul
ljmp
ja
pushf
or
loope
or
pop
dec
add
rcll
mov
popa
jg
pop
stos
adc
jmp
add
outsw
movsl
decl
incl
dec
and
pop
daa
sahf
inc
int
mov
and
jb
test
add
add
sbb
incl
xchg
loopne
mov
fst
mov
ljmp
adc
push
call
add
xor
mov
and
sub
mov
adc
inc
lock
jne
adc
xchg
mov
shrl
cs
lahf
stc
das
ret
and
mov
xor
cmc
adc
add
xor
dec
fs
dec
add
adc
or
loop
adc
mov
fidivs
comiss
jne
xor
scas
lods
mov
add
and
jle
incl
add
jb
incl
dec
pop
add
add
in
dec
jb
mov
repz
iret
inc
loopne
sahf
insl
xchg
repz
iret
or
flds
add
add
out
inc
pop
jne
and
inc
push
push
and
jl
pop
xor
mov
in
sub
mov
add
cmp
lcall
negl
scas
sub
adc
decl
int3
cmpsb
test
incl
pop
pop
xchg
add
or
out
jo
xchg
cmpsl
in
or
add
mov
xchg
hlt
mov
ljmp
incl
test
add
int
in
mov
push
add
cmp
ljmp
add
and
pop
push
mov
xlat
call
and
addr16
xor
cmp
insl
jmp
out
sbb
add
add
scas
shll
mov
pop
dec
xor
lea
mov
call
lock
add
add
xchg
dec
mov
mov
add
nop
push
jl
mov
call
call
mov
add
jmp
xor
add
add
add
jmp
xchg
add
clc
ret
adc
xchg
xchg
add
add
mov
add
sbb
mov
incl
inc
and
jmp
mov
lods
add
xor
incl
mov
lret
dec
mov
jae
fcmovnbe
incl
incl
loop
mov
and
cmc
stos
pusha
and
adc
add
orl
mov
mov
mov
testl
cmc
dec
add
add
fdiv
mov
fcoms
add
cmpsb
inc
jmp
icebp
mov
and
sbb
and
sti
fstps
or
stos
push
add
add
int3
adc
add
fldt
fsubr
sub
gs
add
cmc
lods
je
lock
icebp
add
fdivr
add
ljmp
cs
cld
fsubrl
add
je
add
test
xchg
add
add
adc
xor
adc
add
incl
and
pop
ja
mov
leave
add
and
xchg
xor
push
mov
sbb
test
xchg
pop
sub
add
shrb
xchg
sarb
lods
pop
roll
add
ret
xor
lcall
push
addb
jg
xchg
mov
lods
aaa
test
cmp
mov
incl
shr
int3
jecxz
xor
lret
push
mov
adc
cwtl
mov
incl
push
fwait
mov
pop
inc
mov
roll
add
lea
add
add
add
adc
mov
mov
add
mov
add
stos
mov
add
push
jge
push
adc
insl
xchg
sub
adc
add
add
add
orb
or
and
add
scas
push
leave
add
sub
out
inc
add
mov
or
scas
leave
sub
add
add
add
mov
ja
out
les
call
mov
dec
push
jno
add
aam
jb
ljmp
jl
std
movsb
add
push
sbb
in
xlat
sub
jmp
add
sub
inc
and
dec
fmulp
out
incl
mov
loope
rorb
cltd
out
add
sbb
add
pop
mov
adc
ja
add
sbb
xor
aam
add
call
sti
pusha
pop
pop
dec
and
or
or
fsts
popa
incl
test
lret
add
clc
test
je
pop
jp
mov
shrb
push
rcrb
or
add
int
xlat
enter
stos
fdivrl
int3
filds
add
pop
adc
dec
lahf
lret
lret
repnz
add
mov
push
add
add
ljmp
cmp
lods
pop
loopne
or
add
mov
and
rorb
or
nop
es
call
pop
mov
add
jb
pushf
or
aam
adc
xlat
push
test
mov
mov
jns
int3
adc
or
xchg
lahf
inc
add
mov
je
or
adc
add
test
mov
add
incl
push
inc
in
add
add
cld
and
add
add
sbb
add
sarl
add
stc
add
pop
adc
fisttpll
mov
lahf
ljmp
fldt
add
rcll
call
sub
xchg
jg
adc
jo
mov
sub
adc
push
pop
xor
cmp
inc
lods
add
xchg
dec
mov
xor
add
and
cli
dec
add
and
fsubs
pop
pusha
rcrb
popw
add
hlt
jmp
add
sub
sub
add
cmp
add
or
push
stos
pushl
lds
or
jbe
or
fimull
repz
mov
mov
add
add
xchg
jmp
loop
movsl
call
cmpsl
mov
mov
add
insb
cltd
sbb
jae
add
in
icebp
push
sub
mov
add
popf
add
add
jg
icebp
dec
jmp
incl
mov
mov
into
popa
outsl
loopne
add
int3
aad
dec
das
stos
mov
jae
adc
add
inc
xor
scas
adc
add
mov
dec
ljmp
xchg
dec
jmp
js
mov
mov
movb
mov
mov
add
push
cmp
add
xor
incb
incl
mov
or
pop
add
popl
dec
add
mov
enter
out
xor
and
fdivrs
add
add
sub
add
sbb
scas
lahf
xchg
jp
mov
mov
inc
rolb
and
fisttpl
sub
cmpsb
ss
sub
stc
test
insl
sbb
data16
add
mov
incl
in
call
add
adc
mov
push
inc
add
adc
cmp
mull
nop
movsb
add
pop
sub
ret
incl
cmp
aaa
loope
add
add
push
hlt
cmpsl
mov
mov
mov
jl
push
add
test
add
lret
mov
lds
shl
and
and
add
xchg
jle
jl
incl
add
test
adc
add
test
lods
mov
jno
add
mov
push
bound
decl
cmc
roll
and
push
mov
pop
mov
sbbb
mov
int3
push
clc
xchg
insb
mov
push
sub
adc
and
aas
in
push
push
sub
add
adc
movsl
scas
stos
add
dec
fsubrl
adc
xchg
mov
inc
push
pop
add
add
mov
mov
incl
adc
movsb
xchg
test
jp
incl
and
and
add
adc
hlt
jnp
dec
add
dec
sahf
andl
divl
adc
loop
add
ss
ljmp
fmuls
add
mov
xchg
gs
mov
cli
in
pop
add
call
add
add
std
std
mov
in
cld
jnp
add
xchg
adc
jp
jmp
xor
dec
popa
call
add
mov
shlb
add
add
cs
cmp
mov
pop
cwtl
addb
cmpps
mov
add
lcall
add
imul
and
bound
push
in
fcos
add
lret
mov
aam
notl
pop
mov
push
out
add
mov
idiv
decl
add
xchg
and
add
and
mov
pop
jle
add
add
xchg
stos
pushl
jb
aaa
mov
cmp
add
out
add
sub
add
and
out
or
and
and
add
inc
mov
jmp
jmp
loope
dec
sbb
jmp
add
jge
mov
add
inc
sbb
incl
pushf
sbb
xorb
negl
lock
sbb
add
mov
sti
and
fistps
add
add
mov
push
mov
xchg
cmp
add
ficompl
in
jne
scas
jbe
xor
insl
adc
pop
add
mov
add
mov
jp
pop
add
mov
mov
or
dec
mov
xchg
out
sub
pmaxsw
add
pop
inc
fldcw
cld
and
add
mov
jb
add
sub
cmp
add
sub
xlat
xchg
cltd
jbe
push
adc
mov
ds
add
in
out
and
add
jbe
and
pushl
add
mov
mov
add
shrb
cmp
xchg
movsl
incl
lret
jo
movsl
sbb
imul
cmp
sbb
and
jnp
sbb
xchg
inc
incl
push
inc
std
and
filds
hlt
enter
add
add
add
out
js
pop
xchg
add
and
icebp
add
in
and
filds
xlat
lret
add
ror
mov
mov
adc
sbb
fs
sub
add
mov
mov
mov
cmp
mov
cwtl
filds
lea
jmp
mov
pop
test
or
push
mov
add
in
push
jmp
jnp
imul
xchg
sahf
add
ds
or
adc
mov
add
incl
lahf
nop
mov
add
mov
add
add
and
fildl
mov
popa
lods
cmpsb
loop
mov
sub
push
add
sahf
mov
add
and
rcrb
mov
fld
add
cli
mov
add
sbb
and
sti
cmp
xor
add
adc
incl
add
movsb
ljmp
ss
mov
add
xchg
out
mov
mov
aas
add
scas
cmp
sub
add
cmp
pushf
mov
add
in
js
add
pop
pop
mov
or
add
xor
or
jmp
pushl
stc
mov
add
add
dec
adc
dec
mov
and
arpl
inc
mov
adc
inc
add
mov
insl
cld
incl
xor
jnp
add
sahf
inc
outsl
stc
lods
movsl
pop
add
out
pop
jp
add
add
decl
inc
fldt
add
xor
add
jl
jno
out
add
loop
and
dec
mov
arpl
pushf
ja
pushf
daa
lret
gs
xor
pushl
add
cs
cmp
sub
sub
sti
gs
sbb
call
hlt
cmp
cld
add
sahf
push
out
add
adc
xor
in
lldt
mov
loopne
jmp
data16
jbe
add
dec
dec
add
sub
out
mov
lahf
mov
add
add
add
pop
jle
sahf
jmp
add
cmpsb
loopne
pop
orl
add
lahf
leave
xchg
add
add
movsb
xlat
lret
and
add
in
jecxz
mov
and
pop
jg
xchg
addb
push
and
sahf
rclb
add
push
jp
mov
movl
dec
mov
add
add
cwtl
or
mov
loop
mov
scas
lahf
outsb
add
in
lock
pop
dec
mov
pop
fwait
and
bound
add
jl
dec
jg
mov
add
jne
jle
cli
mov
jmp
and
mov
cltd
incb
mov
add
std
incl
cld
add
add
jl
xor
add
add
and
pop
mov
xchg
addr16
shl
mov
incl
add
xor
add
into
je
aam
xor
and
call
out
pop
lds
test
xor
add
nop
mov
add
dec
xchg
roll
adc
cmp
out
mov
in
add
cmpsb
je
mov
sbb
xor
inc
cmp
incl
or
xchg
add
add
scas
sub
and
push
imul
xor
mov
and
inc
adc
cmp
mov
add
sbb
insl
faddl
mov
aaa
pop
and
mov
mov
sti
cwtl
adc
add
cmp
push
enter
fwait
xchg
pop
repnz
fdivrl
hlt
xchg
add
sub
cvtdq2ps
add
jo
loopne
ljmp
add
ficompl
xchg
test
and
xchg
stc
and
fsubrl
add
mov
and
xchg
mov
cli
incl
add
mov
mov
add
cmpsl
gs
mov
ss
fcomip
lds
push
leave
incl
popa
mov
cmp
incl
and
int
decl
fadds
add
xor
fcompl
mov
adc
mov
and
mov
dec
add
cwtl
lret
mov
incl
test
clc
dec
adcb
call
sbb
ds
inc
add
daa
into
sub
das
jmp
jb
add
insb
lahf
add
mov
ljmp
add
adc
cs
add
andb
shr
ds
pushl
push
inc
fcomp
insb
ds
add
inc
xor
aam
jmp
add
jmp
insb
or
add
addr16
pusha
push
pop
push
add
mov
mov
dec
ds
pop
mov
mov
and
outsb
inc
push
mov
incl
std
mov
mov
je
adc
mov
and
mov
jl
jns
mov
out
shll
add
fistpll
mov
fs
decl
push
scas
sub
std
add
fisubs
xchg
push
incl
sti
push
push
decl
ret
sub
and
push
and
scas
repz
aad
leave
bound
add
fisttpll
pusha
mov
jge
add
dec
push
push
bound
outsl
arpl
imul
data16
jns
gs
je
push
imul
xchg
or
ljmp
inc
xchg
incl
add
lret
mov
mov
add
mov
mov
and
push
stos
enter
out
push
sbb
xrelease
lock
mov
inc
add
shll
and
adc
push
jecxz
add
and
push
add
out
pop
cs
dec
sahf
xchg
incl
or
cmp
add
call
pop
jmp
repnz
and
pop
mov
imull
or
jae
in
pop
pop
inc
push
cmp
cld
sub
add
and
push
mov
sub
add
xchg
xor
fwait
in
loope
add
dec
call
pushf
xor
aam
add
xchg
mov
pushl
xor
add
xor
mov
repz
mov
add
leave
ret
ficomps
and
xchg
out
add
dec
or
sbb
incl
mov
inc
jp
or
adc
pushl
add
add
cmpsl
xor
and
cs
add
cmp
sbb
testb
and
adc
test
fwait
es
test
iret
fsubrl
pop
mov
loop
add
or
cmp
mov
mov
dec
cmp
decl
roll
jmp
and
push
enter
add
add
lods
and
cmc
add
add
add
add
push
dec
push
adc
out
ja
push
add
imul
mov
incl
and
push
cmp
shrb
add
mov
das
cli
mov
mov
add
and
or
iret
and
add
jge
shll
cmp
add
sub
mov
lret
inc
add
mov
add
jb
push
insl
xchg
mov
and
das
push
jo
mov
loop
add
incl
lods
imul
nop
repnz
pop
mov
jle
pop
ljmp
cmc
stos
frstor
repz
mov
mov
sahf
push
stc
incl
adc
dec
inc
decl
aad
adc
add
ss
cmc
test
add
mov
push
or
mov
add
lock
adc
adc
icebp
imul
data16
sub
push
int
add
sub
in
dec
or
xor
incl
lcall
das
movsb
jp
push
pop
jno
call
sub
repz
ss
dec
lea
dec
add
cmpsl
addl
js
jmp
pop
xchg
in
xchg
pushl
mov
add
or
ljmp
pop
jnp
sub
or
pop
mov
mov
and
sti
sub
stc
jns
cmp
call
add
out
add
add
add
ljmp
inc
xchg
stos
xor
push
add
sub
int
sub
and
nop
inc
jmp
add
or
add
add
dec
in
cmp
add
mov
push
jmp
jmp
mov
popa
test
and
push
xchg
movsl
fnstenv
xor
pop
and
decl
in
bound
push
test
xchg
lock
call
xchg
ret
and
bound
jns
add
sbb
incl
pop
test
sbb
incl
out
add
and
call
ds
add
incl
movsb
fdivrs
dec
lods
iret
or
mov
cmpsb
cmpsl
add
add
jle
and
mov
fcomi
cwtl
xchg
rolb
pusha
push
push
add
jnp
xor
lods
fisubs
push
or
cs
pop
adc
aad
add
mov
push
add
fisttps
add
add
xlat
mov
add
jmp
jl
jl
insb
sarb
ud0
outsl
add
add
add
stos
mov
outsb
add
add
add
xchg
ja
add
cmpb
add
or
dec
dec
sub
int
add
cmp
jns
add
mov
pop
sahf
mov
mov
mov
adc
sbb
add
dec
push
add
cmp
sbb
decl
mov
in
add
fdivr
add
sarl
add
cmp
decb
add
das
add
lock
jo
mov
add
ficoms
int3
movsl
jno
mov
pop
sahf
ret
push
cmp
out
mov
cmc
dec
pop
sub
mov
mov
and
xchg
call
cmp
sub
add
popa
movsl
aas
sbb
and
jb
add
add
loope
dec
cltd
add
scas
mov
dec
and
dec
call
add
arpl
push
inc
add
adc
sub
pop
and
or
add
cli
lods
int
incl
incl
pushf
xchg
dec
sbb
loop
test
pop
mov
sti
sub
out
xor
pop
pop
mov
add
test
out
add
add
jge
mov
rol
mov
rcrb
mov
adc
mov
add
add
loope
pop
andb
rolb
faddl
mov
mov
mov
and
mov
stos
xchg
stos
adc
scas
or
xor
add
add
ss
arpl
jne
add
and
xlat
bound
aam
add
lea
add
and
jno
insl
cwtl
mov
adc
and
and
mov
and
rolb
or
and
and
add
sahf
popa
jp
cmp
mov
mov
add
add
rcrl
aam
mov
add
and
jno
adc
xlat
adc
sub
add
sbb
mov
push
dec
sub
scas
fldcw
add
xchg
enter
add
dec
insb
aad
inc
add
add
jle
pop
add
push
inc
inc
jbe
or
jb
jmp
add
jmp
add
sub
dec
decl
test
add
xchg
mov
add
and
aam
add
sub
pop
mov
add
add
scas
incl
add
testl
sub
imul
add
and
and
push
jae
jnp
add
pop
fistpll
pop
add
add
lret
and
and
mov
adc
add
and
incl
xchg
aad
test
xchg
js
or
je
add
leave
and
mov
inc
mov
push
xchg
dec
add
mov
and
and
jmp
imul
jo
out
enter
sub
lcall
inc
and
and
add
mov
sahf
adc
and
inc
xor
inc
push
ror
jae
in
add
push
push
jle
inc
mov
mov
sub
or
shlb
mov
lods
inc
in
test
add
aam
and
clc
pop
imul
adc
sub
add
add
pop
jae
scas
lret
sub
pop
mov
test
push
add
and
jo
and
xchg
int
sbb
and
loope
mov
add
sbb
jmp
add
add
cld
mov
incl
bnd
add
loop,pt
lcall
sti
cld
data16
cmp
jo
mov
add
push
lea
outsb
inc
add
fdivr
fdivrp
xchg
lcall
testl
adc
add
lahf
stos
insb
enter
dec
aad
mov
push
mov
or
jbe
int3
add
inc
call
data16
add
add
inc
sbb
add
add
sbb
test
fiadds
add
shr
add
xor
lret
hlt
and
push
add
cwtl
test
add
sbb
adc
add
adc
adc
add
add
fwait
adc
and
and
add
loope
or
subb
pop
out
add
pop
jne
jge
add
sub
loop
mov
add
loopne
data16
mov
and
add
sub
add
popf
mov
fistpl
add
pushf
ja
and
push
adc
test
mov
outsl
push
mov
stos
lock
iret
or
mov
icebp
and
mov
xchg
outsl
add
sub
mov
incl
xchg
add
jmp
add
loop
std
jmp
into
mov
mov
test
mov
xor
mov
jge
push
out
add
cwtl
and
or
add
test
rolb
add
fildll
leave
add
lods
je
outsb
cmpsl
add
and
les
or
xor
and
and
mov
add
bound
imul
shlb
dec
mov
inc
pusha
jnp
add
add
pushf
mov
add
mov
add
nop
inc
inc
incl
lods
repz
and
jo
or
add
cmp
mov
mov
jmp
mov
in
sub
iret
andb
sbb
call
sbb
es
and
push
stc
mov
into
cmpsb
add
add
jmp
add
rcl
jmp
push
leave
mov
or
aas
add
dec
sti
into
incl
ret
dec
outsl
cmp
incl
pop
rcll
mov
add
jmp
aas
int3
aad
mov
pop
add
iret
xchg
aas
cmp
adc
rcll
and
out
sti
iret
fdivs
add
mov
add
xchg
add
and
incl
lock
dec
sub
and
incl
inc
fwait
mov
pop
dec
cmp
push
js
adc
xor
mov
cmp
cmp
sti
daa
mov
mov
pushf
pop
ret
fldl
add
scas
xor
incl
mov
dec
nop
in
add
call
in
in
incl
add
fisubrs
add
add
add
add
push
mov
dec
add
jo
pop
stos
pushf
cltd
add
jp
cmp
push
je
add
call
mov
add
xor
scas
cli
add
push
adc
stc
add
loop
test
stos
xchg
lahf
add
cltd
xchg
xor
pushl
push
pop
adc
add
xchg
xor
rorb
or
add
andb
xchg
fwait
mov
sub
loopne
add
fsubl
add
or
jb
add
add
testl
js
add
jb
add
mov
and
cmp
cwtl
jp
add
push
test
in
and
mov
call
mov
mov
mov
or
push
inc
ljmp
pop
mov
outsb
pop
jb
sub
push
add
push
add
cmpsl
jb
mov
adc
and
dec
fdivrp
pushl
mov
call
xchg
addl
add
pop
stos
and
add
js
imul
add
sub
push
ds
or
pop
stos
enter
popf
mov
add
xor
je
incl
loopne
and
add
or
add
test
testb
mov
cmpsb
add
mov
add
pop
lahf
lahf
sub
mov
ljmp
mov
add
movsb
mov
add
or
das
xor
enter
faddl
shr
out
add
mov
add
repz
push
add
dec
out
push
rorl
add
add
and
fistpll
add
dec
out
mov
or
loope
das
jae
mov
add
mov
pushf
stos
add
sub
add
insl
js
stos
pop
test
add
nop
cmp
mov
add
adc
push
fwait
mov
add
bound
xlat
test
imul
pop
std
aaa
and
pushf
add
adc
dec
adc
test
add
sub
notb
mov
add
call
nop
stos
xchg
xchg
sbb
clc
int
and
mov
outsb
xor
out
daa
fimull
mov
notl
stos
xor
jmp
sub
mov
fstpl
cmp
insb
pop
add
incl
mov
pop
stc
movsl
nop
mov
movsl
mov
sahf
mov
mov
incl
ss
xchg
mov
cld
push
out
push
xchg
pop
or
jp
sbb
lahf
adc
add
imul
sub
adc
jmp
cmp
push
pop
push
ljmp
add
mov
gs
fwait
or
iret
out
mov
add
cmp
sub
add
incl
ja
lcall
incb
jle
mov
cmp
add
inc
pop
testb
ret
test
mov
push
push
into
add
int3
add
lods
push
mov
add
add
and
stc
enter
pop
xlat
adc
popl
cmp
mov
xor
sbb
decl
popf
or
decl
push
add
fisubs
jle
decl
enter
mov
lds
fs
inc
and
and
xor
rcll
push
cmp
jge
fldl
add
or
pushl
xlat
dec
inc
lods
mov
dec
add
lcall
add
cli
pop
xchg
add
add
popf
stc
push
add
loop
push
dec
mov
pushf
sub
lahf
or
and
and
outsb
jae
cmpsl
out
decl
sti
insb
mov
insl
clc
sub
adc
add
sub
std
add
ret
dec
add
adc
maskmovq
testl
daa
insb
decl
jge
insb
or
and
imul
cmc
nop
add
mov
out
add
lahf
into
cs
add
cld
std
arpl
movsl
push
add
inc
popf
xor
adc
jnp
add
xor
lahf
scas
jbe
lcall
in
sub
std
cmpsl
call
or
incl
enter
add
out
sti
and
adc
into
add
add
in
inc
add
jmp
inc
data16
incl
add
add
add
out
repz
add
out
and
std
mov
mov
mov
jmp
add
push
xchg
add
divl
mov
cmp
pop
fbstp
lahf
jl
push
jae
add
pop
pop
sub
mov
pop
shll
rorb
cmp
loop
incl
add
adc
dec
lods
adc
leave
ss
add
lret
stos
pop
in
adc
popl
add
jns
out
mov
jns
add
push
jb
movsb
and
push
jmp
xchg
mov
add
ljmp
mov
jge
add
add
aas
pop
cmp
in
adc
xchg
inc
add
inc
mov
mov
add
jmp
push
lahf
lock
stc
decl
and
bound
mov
decl
insl
incl
add
or
aas
in
and
xor
mov
adcl
add
dec
in
orb
add
mov
push
dec
imul
mov
and
add
dec
in
incl
out
rcl
and
cmp
testb
mov
lahf
mov
mov
add
or
cmp
add
and
cwtl
jbe
sub
adc
cmp
sub
incl
sub
add
std
frstor
pop
out
mov
add
and
mov
sub
add
incl
xchg
add
xchg
mov
mov
mov
lahf
push
xchg
incl
push
iret
gs
orb
push
fsubrs
xchg
push
dec
add
xlat
loopne
stc
jg
add
add
orl
add
out
fdivrl
push
or
add
push
and
incl
data16
inc
aas
or
mov
xor
add
lret
and
and
add
sub
xor
insb
inc
out
xor
mov
out
xchg
and
pop
int3
add
out
loope
add
out
mov
xorl
aad
mov
add
xor
sahf
and
imul
decl
daa
incl
adc
xchg
mov
add
sbb
add
jp
jno
add
and
ret
in
push
pop
cltd
std
test
std
mov
add
add
pop
jbe
out
mov
add
mov
and
mov
cmpb
add
test
sub
dec
gs
and
xor
adc
add
lods
aas
adc
add
push
das
add
mov
and
in
and
cmpsb
cltd
dec
sub
dec
jle
xchg
sbb
cmp
addl
enter
pop
incl
add
into
bts
add
cmp
ljmp
lret
add
jp
cs
mov
adc
xchg
adc
int
and
iret
aaa
loope
incl
add
popf
mov
imul
decl
cmpb
mov
and
mov
adc
adc
add
add
gs
add
in
jge
xorl
mov
inc
jbe
mov
rclb
es
ret
movsl
jne
add
mov
inc
add
incl
mov
xchg
stos
rorl
add
andl
mov
and
mov
xor
lahf
popf
mov
push
mov
jnp
cmp
incl
mov
push
add
add
add
add
and
xor
jno
add
adc
inc
arpl
inc
add
decl
in
int3
and
dec
mov
add
fcomi
daa
mov
adc
fistl
add
stos
jno
popw
add
sub
pop
roll
add
add
fcmovnbe
sbb
cwtl
add
add
fmuls
add
and
add
add
in
push
es
ds
ret
add
adc
push
into
push
mov
and
stos
repnz
in
das
add
cs
and
movsl
adc
out
fldt
dec
mov
add
add
add
js
push
sbb
mov
incl
mov
jbe
insb
add
cmp
cltd
scas
decl
cmp
add
mov
sub
mov
push
aaa
xchg
xorl
add
outsb
dec
inc
push
xchg
std
cmp
add
repnz
mov
dec
sar
mov
and
mov
outsl
adc
jnp
add
add
jmp
jmp
jb
cmpsl
lods
add
mov
add
add
xchg
data16
adc
incl
dec
ds
mov
xor
jb
add
jecxz
add
cmpsl
cmp
xchg
addb
insl
xchg
test
add
add
mov
push
add
adc
add
add
xchg
jmp
icebp
sbb
xchg
scas
push
fsubrl
mov
adc
and
jp
add
mov
jmp
add
add
test
sbb
insl
inc
add
inc
add
add
or
and
inc
sbbl
stos
mov
add
imul
cld
and
jle
pop
jno
repz
ret
xchg
lcall
cmc
dec
mov
add
into
push
sti
insb
add
add
add
add
add
jae
add
jge
xor
ret
sti
ja
addr16
mov
push
cmpsb
adc
add
jmp
dec
enter
mov
mov
mov
ret
pop
int3
rcl
incl
test
add
cmp
xor
sub
fstl
mov
add
add
out
mov
hlt
jecxz
mov
adc
decl
add
mov
mov
clc
scas
add
add
and
mov
js
sub
mov
push
sbb
cmp
add
jae
xor
std
jle
mov
daa
je
add
push
and
incl
mov
push
jl
test
add
adc
imul
add
loope
mov
dec
jg
add
add
sub
loope
xchg
add
stc
js
sbb
inc
ja
dec
jge
cmp
cmp
enter
test
test
xchg
and
jg
add
cs
mov
xor
add
loopne
sarl
stc
pushw
adc
add
mov
xchg
mov
adc
add
cmp
mov
addr16
std
jl
jmp
xor
ljmp
jbe
mov
incl
dec
cmp
jb
out
add
add
cmp
add
in
jmp
decl
adc
jmp
insl
lods
mov
fcmove
mov
add
incl
add
lcall
add
jge
mov
fadds
lcall
and
pop
add
push
fidivrs
cmp
sub
mov
gs
insb
incw
and
nop
xchg
adc
and
add
mov
sahf
mov
add
xchg
cmp
add
add
sub
or
add
push
adc
popf
fwait
test
mov
dec
add
fldl
push
xor
mov
jb
jl
add
decl
js
inc
xorl
mov
bswap
dec
and
mov
aam
add
jge
je
push
mov
add
incl
add
sbb
add
push
lcall
push
cmp
mov
jl
outsl
add
cli
lods
sub
push
adc
dec
and
inc
shll
add
call
mov
mov
mov
jmp
inc
sbb
add
in
andl
rorb
notl
adc
lret
add
add
jp
jnp
add
add
or
add
xchg
and
stos
test
mov
arpl
call
pop
fiaddl
add
jne
pushf
add
lcall
inc
xchg
and
in
and
dec
data16
add
addr16
ffree
add
stos
pop
pop
add
out
cld
dec
lods
or
popa
call
inc
cmp
add
fidivrs
add
add
sarb
mov
or
push
add
popf
cmp
xor
ret
incl
jbe
call
cltd
add
stos
add
mov
mov
add
scas
or
cs
insl
and
test
inc
and
cltd
add
xchg
test
stos
xchg
imul
jb
mov
add
cmpsl
pop
mov
and
mov
das
add
and
push
out
flds
mov
xorl
mov
sub
add
call
jns
repnz
jl
add
add
fildl
icebp
loope
adc
add
add
movsb
inc
jno
mov
add
iret
or
cmpb
pop
mov
add
sub
dec
decl
mov
ficoml
sbb
mov
roll
pushl
xor
or
xor
repz
call
out
out
stos
movsl
test
incl
adc
aas
jno
add
mov
roll
lods
inc
mov
or
jecxz
out
scas
lcall
pop
add
add
movsb
mov
xor
add
incl
add
mov
inc
jnp
adc
push
mov
ss
xchg
sub
sti
cmp
mov
cwtl
cmp
push
lea
and
mov
jp
add
pop
xor
xor
or
jmp
mov
add
xchg
scas
aas
add
in
inc
push
ret
add
and
xor
add
xchg
inc
xchg
lods
filds
outsl
adc
lcall
dec
add
mov
cmc
cmp
cmp
jo
cmp
jbe
add
and
mov
adc
lret
fwait
shll
or
add
add
rorb
ja
mov
in
add
jo
add
dec
jmp
push
inc
push
pop
add
and
and
shll
jno
mov
fidivs
fs
incl
cmpsl
mov
xchg
cld
call
push
add
in
cli
inc
mov
mov
add
add
fdivl
pop
add
and
ffree
pop
adc
and
movsl
lods
int3
mov
shlb
and
cltd
aaa
stos
into
add
mov
incl
pop
lea
jno
sub
add
sbb
pop
in
fmuls
fstl
add
pop
add
cld
shlb
xchg
xor
inc
add
add
xlat
js
adcl
loop
mov
fs
mov
pop
xor
mov
inc
pop
inc
push
xchg
mov
add
and
mov
mov
add
or
jno
add
add
add
sarl
add
and
lods
cmp
out
jp
cmp
sbb
cmp
mov
add
cmp
xchg
mov
mov
inc
and
dec
xchg
icebp
lock
and
sub
enter
jp
mov
and
dec
push
add
add
lds
cld
jl
add
mov
cmp
xor
mov
push
add
mov
inc
push
loope
add
fxam
stc
pop
add
add
sub
jae
add
imul
out
xor
into
and
or
inc
loop
stos
scas
add
add
jae
movsl
stos
xchg
xor
nop
add
or
add
loopne
ljmp
mov
dec
ja
test
sbb
add
and
and
or
les
mov
mov
incl
and
call
popa
xrelease
clc
adc
sbb
sub
add
jno
cmpl
leave
push
fsubl
add
cmp
lcall
in
add
iret
fcoml
add
imul
outsl
and
sub
xor
add
add
es
leave
xchg
shrb
leave
jl
add
inc
jae
incl
pop
xor
sub
out
cmc
mov
add
fdivrl
mov
add
mov
div
jg
xor
xlat
jno
add
inc
xchg
jle
mov
jno
shl
mov
stc
and
fstpl
ljmp
cmpsl
sub
push
test
scas
rolb
and
jp
add
repz
movsb
add
or
sub
js
add
and
and
and
movsb
aam
aaa
movsl
incl
incl
mov
and
dec
ret
repnz
add
adc
lret
out
mov
xor
cmpsl
out
xor
jl
jnp
adc
and
test
mov
incl
xchg
jle
add
cmp
jne
and
sub
add
out
add
ljmp
ret
xchg
mov
mov
add
pop
das
sub
and
lods
stc
xor
add
jmp
enter
arpl
incl
add
add
nop
test
mov
les
mov
popf
test
add
xchg
xchg
add
jmp
jo
add
ja
cmp
aas
pop
and
mov
mov
incl
mov
add
add
inc
xor
add
mov
add
jecxz
cmp
add
lcall
xor
cld
mov
sahf
add
mov
push
mov
pusha
add
add
lods
adc
jne
xchg
add
and
jg
xor
dec
movsb
jo
add
add
adc
pop
add
addr16
std
xor
mov
test
mov
pop
push
data16
add
add
sub
mov
add
outsl
lret
ljmp
cmp
leave
dec
adc
out
and
add
ljmp
and
jmp
jmp
lock
add
fbstp
jge
add
add
add
es
mov
sub
lret
mov
icebp
jno
arpl
push
adc
pop
ljmp
add
gs
add
loope
ljmp
aaa
mov
and
jb
mov
mov
outsl
push
sarb
faddl
out
add
dec
jl
pushaw
xor
mov
in
lcall
mov
jl
pop
xor
cmpsl
ret
and
cs
aaa
xor
sti
lret
jbe
mov
xchg
or
sahf
mov
pushl
add
rolb
aaa
mov
mov
stc
outsb
incl
sbb
and
bound
jns
popa
push
fstpt
xor
mov
add
test
add
inc
cmp
and
sbb
aam
add
or
add
or
and
add
int
dec
pop
add
adc
aam
scas
adc
mov
sbbb
pop
ja
incl
pop
fldl
call
inc
das
push
and
cmp
test
add
mov
decl
push
sbb
or
sbb
add
xchg
sbb
xchg
add
std
or
pushl
icebp
int
push
adc
scas
mov
mov
nop
aad
add
add
mov
testb
incl
stos
inc
add
sub
add
add
mov
add
mov
jmp
les
add
call
cltd
add
jp
xchg
decl
orl
leave
pop
and
and
inc
sbbl
pop
push
fisubrs
lods
add
add
fisubl
adc
adc
roll
fwait
ljmp
cs
mull
incl
adc
stc
push
or
add
loopne
out
dec
pop
lods
sub
incl
dec
lea
rolb
and
add
mov
and
cld
ret
cmpsb
jne,pt
and
ljmp
lahf
loop
filds
add
dec
adc
mov
data16
scas
divl
pop
call
or
sbb
and
out
out
pop
fsubrl
mov
add
add
mov
and
add
lods
dec
fcmovnb
sbb
and
add
cmc
imul
add
mov
mov
add
and
cmpb
and
das
push
stc
filds
adc
and
mov
or
cs
ds
insb
stc
add
ljmp
mov
push
incl
add
insl
in
and
out
test
and
ss
push
pushf
xchg
add
add
and
add
shr
mov
sub
lret
and
sarb
mov
daa
stos
jmp
ljmp
sbb
add
add
add
cmp
in
inc
adc
add
xor
int3
rcrl
popa
pop
and
out
enter
sarl
and
pop
dec
adc
sahf
leave
add
lcall
setnp
call
adc
adc
mov
mov
add
and
inc
jg
sub
test
mov
add
xlat
add
push
arpl
notb
and
fnstenv
inc
add
out
and
sub
add
subb
add
loop
push
sub
mov
negl
cmpsl
add
push
mov
pop
sub
add
jmp
cmpsb
inc
fdivs
ljmp
fadd
cld
mov
loopne
dec
mov
add
fisubrs
pop
add
mov
popf
scas
repz
sbbl
add
add
mov
xchg
pop
mov
add
aam
jne
jmp
incl
jo
push
add
add
cmp
push
jb
pop
add
sbb
and
or
push
and
xchg
andb
dec
mov
mov
imul
jmp
add
add
add
adc
shlb
mov
mov
adc
mov
decl
sbb
mov
add
call
imul
xor
dec
stos
int
mov
ja
jp
ja
jno
addr16
jns
popa
addr16
jns
jne
outsl
adc
jp
mov
mov
xlat
stos
push
jmp
adc
sahf
iret
decl
mov
sbb
add
sbb
mov
add
jmp
adc
inc
adc
and
and
xlat
test
mov
add
les
push
add
arpl
aam
call
add
dec
aam
mov
pop
xor
adc
fs
mov
sbb
decl
xor
out
jp
pushf
push
mov
lock
pop
jl
add
mov
jp
dec
mov
sahf
push
mov
inc
loopne,pn
and
add
lock
repnz
orl
add
sbb
sbb
insl
sub
add
pusha
loope
incl
add
push
test
push
les
adc
push
mov
jl
and
popf
aas
pop
sub
mov
dec
lds
imul
adc
push
clc
hlt
dec
fistpl
cmp
lock
adc
cmp
les
add
mov
mov
fs
rclb
idiv
add
std
sbb
xchg
mov
add
leave
cmp
add
adc
add
test
movb
cld
jbe
dec
out
mov
jmp
bound
cmpsb
and
pop
cwtl
cld
popa
incl
inc
test
add
leave
incb
pop
out
pop
mov
lret
add
loope
incl
add
clc
inc
jmp
mov
add
push
add
add
add
lcall
aas
sub
pop
movsb
sarl
fisubrs
movsb
add
push
in
jmp
incl
add
cli
imul
push
pusha
add
insb
or
mov
mov
lret
jecxz
jae
add
loopne
and
add
add
inc
mov
call
lods
add
fldl
add
xor
push
inc
pushf
mov
cmp
mov
and
add
xchg
iret
addl
add
ror
incl
incl
add
add
cmp
lret
add
dec
add
rorl
test
adc
stos
je
cld
incl
add
fidivl
pop
incl
add
mov
mov
out
mov
inc
or
xchg
xor
cmc
stos
add
dec
adc
add
lcall
add
jno
rol
adc
adc
add
add
rolb
add
or
inc
incl
in
and
inc
add
cs
add
outsb
incl
mov
shrb
push
add
add
cmp
mov
add
xor
add
add
mov
mov
mov
xlat
incl
or
xor
and
pop
push
xchg
xchg
add
and
add
call
add
add
dec
xor
xchg
adc
add
add
incl
lcall
loopne
push
cmp
add
add
xchg
add
negl
xchg
sbb
add
bound
cmp
in
push
sti
rcll
add
add
mov
movsb
leave
daa
mov
cltd
cli
fld
testb
pop
mov
mov
in
sub
xor
mov
jns
sbb
add
add
push
cwtl
push
dec
in
out
add
ss
add
push
decl
cld
popa
and
jns
adc
aad
fadd
add
add
leave
shlb
jg
arpl
incl
inc
test
fstps
insb
aaa
fs
fwait
and
inc
sbb
and
jo
in
adc
cltd
mov
add
push
cli
pop
push
pushf
add
adc
or
and
push
fildl
adc
in
incl
add
cmp
ljmp
cmp
fwait
jp
daa
addr16
xchg
adcl
idiv
dec
aas
insl
and
cmc
xor
and
jnp
js
sbbl
push
std
out
out
xor
add
popf
xchg
adc
add
shll
add
mov
add
testb
stc
add
in
std
jmp
or
push
sti
jmp
jle
movsb
cmp
cmp
std
ss
jp
std
aas
testb
addl
incl
add
jae
decl
std
cld
jnp
xchg
jp
pushf
push
call
xchg
sub
incb
ljmp
cli
mov
dec
imul
push
incl
std
loop
imul
adcb
jmp
es
incl
in
add
ljmp
and
cli
mov
xchg
std
out
dec
mov
sbb
ljmp
xchg
in
lcall
in
add
cmpsl
data16
sti
outsl
add
in
jl
jp
call
xchg
cltd
decb
xchg
jne
incl
jmp
stc
fcoms
lcall
pop
xor
add
clc
cmp
or
adc
mov
sbb
or
adc
mov
xor
out
jns
inc
xchg
adc
mov
repnz
jbe
push
cmp
mov
pop
mov
mov
adc
mov
sub
pop
xchg
call
rclb
xchg
lret
add
push
inc
push
dec
cmp
dec
and
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
jmp
mov
testb
incl
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pop
cs
add
add
add
add
add
incl
add
add
add
add
cmp
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
inc
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jb
gs
xor
cs
insb
incl
add
add
mov
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
mov
add
incl
add
add
inc
add
add
add
incl
add
add
mov
add
incl
add
add
mov
add
incl
add
add
mov
add
incl
add
add
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
incl
add
add
les
jb
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
call
add
inc
add
add
add
lcall
into
inc
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
add
add
lcall
inc
add
iret
inc
add
add
add
jg
inc
add
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
ljmp
fiadds
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
popa
add
add
test
inc
add
push
add
push
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
dec
dec
add
dec
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
inc
add
push
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
je
inc
add
dec
add
add
dec
add
xor
add
xor
xor
add
xor
add
add
roll
push
inc
add
add
inc
add
xor
add
xor
xor
add
xor
add
add
push
roll
push
push
add
push
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
dec
roll
push
dec
add
add
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
push
inc
add
inc
add
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
xor
inc
add
add
inc
add
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
inc
add
inc
add
roll
push
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
add
inc
add
dec
add
push
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
inc
add
rolb
inc
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
dec
roll
push
inc
add
rolb
push
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
push
push
add
rolb
dec
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
dec
roll
push
inc
add
rolb
push
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
dec
add
rolb
push
pop
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
dec
roll
push
inc
add
rolb
inc
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
inc
add
push
add
inc
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
dec
roll
push
inc
add
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
dec
roll
push
push
add
inc
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
dec
roll
push
dec
add
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
dec
roll
push
push
add
add
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
dec
roll
push
push
add
inc
add
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
dec
roll
push
inc
add
inc
add
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
dec
roll
push
dec
add
inc
add
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
dec
roll
push
pop
add
inc
add
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
dec
roll
push
pop
add
add
pop
add
xor
add
xor
xor
add
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
or
sbb
adc
add
or
adc
or
add
inc
add
add
push
add
add
dec
add
add
inc
add
add
push
add
add
push
add
add
inc
add
ret
inc
add
inc
add
inc
add
dec
add
ret
inc
add
dec
add
inc
add
dec
add
ret
inc
add
dec
add
inc
add
dec
add
ret
push
push
dec
add
ret
pop
inc
inc
add
ret
dec
dec
push
add
ret
pop
inc
inc
add
ret
dec
dec
push
add
push
dec
add
inc
push
add
inc
push
add
push
inc
add
inc
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
add
add
cwtl
leave
inc
add
push
add
push
add
inc
add
push
add
add
inc
add
add
inc
add
inc
add
inc
add
add
dec
add
inc
add
dec
add
inc
add
push
add
inc
add
dec
add
leave
inc
add
push
add
inc
add
dec
add
enter
dec
push
add
enter
dec
inc
add
enter
dec
push
add
enter
dec
inc
add
dec
dec
add
inc
add
dec
inc
add
dec
add
add
dec
add
inc
add
pop
add
inc
add
push
add
inc
add
push
add
enter
dec
inc
add
inc
add
push
add
enter
dec
push
add
enter
push
inc
add
movl
fadd
inc
add
dec
add
movl
mov
inc
inc
add
inc
inc
add
dec
add
push
add
add
dec
add
add
push
add
inc
add
push
add
add
push
add
movl
sbb
inc
add
inc
add
inc
add
push
add
movb
push
inc
add
movb
push
dec
add
movb
push
dec
add
inc
add
push
inc
add
push
inc
add
add
inc
add
inc
add
inc
add
add
dec
add
add
dec
add
inc
add
dec
add
movb
push
dec
add
movb
push
inc
add
lds
inc
push
pop
add
lds
inc
push
push
add
lds
inc
push
push
add
lds
inc
push
pop
add
push
add
inc
add
push
add
dec
inc
add
push
add
dec
push
add
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
jb
imul
outsl
jb
imul
add
decl
inc
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
add
add
add
add
pop
inc
add
incl
add
add
inc
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
incl
add
add
or
add
add
add
incl
add
add
add
add
incl
add
add
cmovno
add
add
incl
add
add
adc
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
ljmp
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
incl
add
add
inc
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
dec
pop
inc
add
pop
inc
add
add
add
lcall
and
add
and
add
lcall
and
pop
and
jmp
and
add
add
incl
add
add
add
add
incl
add
add
sub
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
sub
add
add
add
mov
das
inc
add
add
add
jmp
xor
in
inc
add
add
add
incl
add
add
inc
add
add
add
lcall
aaa
inc
add
aaa
inc
add
pushl
inc
add
add
and
inc
add
into
inc
add
add
add
inc
push
jae
sub
or
inc
lods
xor
rolb
add
add
pop
pop
gs
gs
pop
dec
push
pop
push
jne
jne
jne
imul
jns
gs
push
jns
outsl
imul
jp
push
jp
inc
outsl
bound
gs
js
push
popa
jae
insb
imul
je
jb
pop
inc
jns
imul
gs
data16
jo
bound
add
add
add
rolb
add
add
push
iret
add
xchg
add
add
add
add
call
inc
add
insb
iret
add
neg
add
adc
add
add
add
jo
add
add
add
cmpsb
fadds
add
fadds
add
add
outsb
fadds
add
fadds
add
fadds
add
fadds
add
add
ljmp
add
fadds
add
fadds
add
add
clc
aam
add
xlat
add
mov
xlat
add
cwtl
xlat
add
mov
add
adc
add
rolb
add
roll
add
add
roll
add
roll
add
add
roll
add
add
add
lods
roll
add
roll
add
roll
add
roll
add
aam
add
aam
add
add
inc
aam
add
add
pop
aam
add
add
add
mov
add
xchg
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
aad
add
aad
add
add
add
data16
add
add
mov
add
mov
aad
add
aad
add
aad
add
add
push
add
cmp
add
dec
add
pop
add
push
add
xchg
add
xchg
add
test
add
mov
add
loopne
add
repnz
add
add
add
push
xlat
add
and
add
cmp
add
dec
xlat
add
pusha
xlat
add
jo
add
add
add
in
roll
add
add
dec
roll
add
add
jl
add
nop
roll
add
rolb
add
rolb
add
rolb
add
roll
add
add
loopne
add
rcl
add
mov
add
movsb
roll
add
add
add
rolb
add
rolb
add
rolb
add
add
add
add
je
insb
imul
je
mov
push
imul
jb
popa
fs
jb
arpl
jae
add
pop
add
gs
je
inc
imul
imul
jb
insl
inc
add
push
add
je
outsl
jb
addr16
jne
fs
imul
add
jo
je
push
popa
addr16
add
jbe
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
gs
je
push
outsl
jo
jo
outsb
jne
mov
inc
imul
js
outsb
imul
jb
insl
inc
add
push
imul
arpl
add
insb
gs
jae
inc
inc
add
push
imul
outsl
arpl
add
push
imul
outsb
addr16
add
sub
insb
dec
gs
dec
outsl
outsl
imul
add
add
jne
push
imul
pop
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
push
xor
cs
insb
add
cmpsl
add
je
imul
outsl
jb
add
inc
jb
popa
je
push
outsl
insb
imul
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
inc
inc
dec
xor
cs
insb
add
add
gs
outsb
imul
add
add
gs
outsb
imul
imul
outsl
dec
outsb
imul
add
push
add
push
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
xor
cs
insb
add
je
inc
outsl
outsb
jae
insb
gs
add
add
jb
jne
insb
push
jb
je
arpl
push
add
fs
imul
js
add
pop
add
fs
je
insl
inc
add
mov
dec
popa
je
jbe
push
jns
je
insl
dec
outsb
outsw
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
jb
jbe
push
jns
gs
add
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
dec
gs
jo
insb
insb
outsl
arpl
lcall
fs
gs
popa
outsb
fs
gs
add
adc
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
into
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
inc
popa
je
insb
inc
jo
inc
js
je
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
popa
jo
gs
jb
jns
cmp
jo
jb
popa
je
add
test
je
popa
insb
inc
jb
add
dec
gs
jo
jb
add
fwait
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
dec
gs
jo
gs
insb
insb
outsl
arpl
inc
add
inc
popa
fs
jb
je
push
je
add
inc
insb
insb
outsl
arpl
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
jne
jb
outsb
je
push
dec
add
lcall
jae
inc
jb
outsl
jb
add
inc
gs
jne
jb
outsb
je
push
add
mov
push
insb
jae
jb
add
push
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
add
je
jb
arpl
fs
jae
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
imul
das
add
je
imul
gs
add
add
imul
jae
pop
add
insl
imul
outsl
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
call
push
je
dec
popa
outsb
fs
add
nop
add
je
outsl
fs
gs
imul
add
imul
outsb
fs
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
or
push
je
jb
jne
dec
outsb
outsw
inc
add
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
add
jb
jne
insb
push
jne
jb
add
iret
add
je
je
imul
inc
add
jne
dec
jne
je
inc
jns
gs
outsl
push
imul
aad
inc
gs
je
imul
push
add
std
add
je
imul
popa
je
add
jae
inc
gs
popa
je
inc
outsl
jb
popa
je
add
or
inc
push
dec
outsb
outsw
add
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
addb
gs
outsl
arpl
gs
outsb
outsw
inc
add
into
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
cmp
dec
jae
popa
insb
imul
add
dec
jae
popa
insb
imul
add
add
je
inc
push
add
lcall
dec
inc
push
add
xor
push
gs
je
dec
popa
outsb
fs
add
adc
inc
insb
jne
push
inc
jne
data16
add
mov
popa
je
inc
imul
outsl
popa
fs
imul
add
add
push
jns
je
insl
dec
outsb
outsw
add
push
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
call
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
or
inc
gs
imul
je
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jns
je
insl
push
imul
insb
gs
imul
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
outsb
fs
inc
imul
gs
fs
imul
gs
jo
imul
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
add
das
pop
inc
add
add
add
inc
add
mov
add
add
jne
add
dec
jns
jns
add
add
add
add
sub
decl
incb
jp
std
cwtl
push
and
cmc
call
jo
into
imul
out
cmp
mov
in
jmp
lret
mov
incl
mov
stos
xor
loope
add
lods
jmp
shlb
aam
add
xchg
xor
mov
jne
fidivl
push
jge
test
mov
add
push
dec
sub
pop
push
aad
andb
add
sbb
add
add
jl
mov
incl
addr16
push
pusha
add
fmuls
push
pop
imul
jg
or
add
add
je
popa
addl
xchg
mov
lods
insb
addl
jmp
pop
test
fistps
cli
adc
adc
xchg
and
push
inc
add
jo
xchg
adc
add
daa
daa
rolb
arpl
pusha
push
sbb
fld1
add
inc
add
add
mov
outsl
incl
add
jl
xchg
mov
stos
pop
inc
incl
popa
ja
pop
cmp
clc
and
jnp
subb
sub
sub
and
mov
add
mov
int3
pop
ljmp
add
xor
push
and
push
imul
jns
sub
lea
lods
inc
ss
aam
mov
outsb
mov
add
test
dec
mov
dec
addr16
nop
sbb
and
in
mov
push
add
mov
push
divl
loope
inc
add
jmp
test
mov
xchg
daa
add
mov
add
xor
sub
mov
shl
lds
fdivr
and
inc
add
jmp
lret
shrb
add
roll
imul
add
in
notb
jp
stos
push
add
add
and
and
cmp
sub
sub
incl
cmp
add
and
lods
mov
rcll
xlat
xchg
sub
cs
xorl
ret
xor
sub
add
xchg
lahf
stos
inc
add
add
push
cmpsb
lret
sbb
ljmp
xor
add
test
mov
ret
in
fbstp
xor
add
or
add
sti
cmp
pop
adc
or
out
add
and
and
add
pop
xchg
pop
mov
add
cwtl
mov
call
add
add
divb
and
decl
and
or
outsl
xor
jns
adc
pushl
clc
addb
loop
aas
js
add
stc
add
ljmp
add
sti
mulb
arpl
add
pop
and
and
pop
push
mov
xchg
push
push
add
popf
imul
aaa
jnp
mov
xchg
add
incl
sub
lods
das
jne
add
pusha
mov
cmc
add
lret
xchg
push
add
jns
adc
faddl
fdivp
cmp
xor
decl
js
mov
inc
mov
jno
incl
jno
cwtl
jge
add
es
mov
sub
jge
stc
xlat
dec
cmc
cwtl
add
jnp
adc
ret
add
mov
add
jg
leave
adc
add
mov
push
jge
incl
mulb
imul
cmpsb
outsb
mov
mov
std
setno
adc
and
test
imul
out
lds
mov
call
add
cmpsb
mov
stc
insb
add
adc
or
mov
add
inc
aaa
cmpsb
cmpsb
mov
outsl
mov
ljmp
and
aas
mov
fnsave
cld
mov
cmp
rolb
data16
cs
dec
pop
popl
jmp
add
xchg
dec
mov
mov
cvtps2pd
in
sahf
sbb
sbbb
mov
pop
add
add
add
mov
enter
fisubl
add
subl
imul
mov
test
push
test
push
mov
stc
mov
out
decl
and
pop
add
dec
sub
call
dec
lret
cwtl
mov
mov
xchg
push
repnz
add
mov
add
add
ret
mov
inc
or
jns
pop
in
in
inc
mov
aaa
jge
add
in
popa
stos
addr16
loopne
add
and
add
add
mov
sub
adc
add
dec
mov
add
std
jne
adc
mov
rorb
jnp
add
clc
int3
jae
add
incl
clc
in
jmp
sbb
out
mov
add
lock
lods
push
lcall
mov
test
data16
add
xorb
decl
xor
std
mov
jnp
jnp
ds
jl
add
in
popl
add
mov
cmpsb
into
sub
and
shrb
adcb
aas
mov
add
loop
repz
movsb
mov
and
inc
inc
mov
adc
incl
jno
insl
data16
jne
adc
jp
bound
push
add
cmp
cmp
insl
jae
sbb
add
push
sti
add
incl
add
mov
cmpsb
ss
jmp
call
ds
cmp
mov
adc
test
xor
mov
mov
add
add
add
pop
push
jge
testb
sub
jne
js
sti
add
jae
pop
and
adc
popf
cmp
cltd
lods
add
fadds
xchg
mov
xor
dec
push
outsb
decl
or
push
add
add
mov
aaa
sbb
add
ret
inc
add
mov
cmp
icebp
leave
fsubrs
push
mov
ja
insl
out
and
sub
dec
mov
sbb
and
pusha
jg
push
in
mov
add
sub
mov
stos
sub
add
jp
mov
fcos
add
and
xchg
rorb
decl
mov
sub
jmp
roll
add
dec
arpl
xchg
xchg
mov
jp
and
add
add
add
sbb
xchg
xor
push
popf
add
sub
into
loopne
sub
inc
mov
mov
xlat
pop
filds
add
sarl
into
add
add
jnp
ds
add
icebp
add
add
pop
xchg
sub
jae
xchg
rolb
lcall
jo
outsb
add
js
sub
jmp
stos
and
mov
incl
mov
rolb
add
decl
and
cmpsb
jne
orl
pusha
sub
and
xor
mov
push
push
mov
add
int3
add
and
add
movsb
sub
inc
add
cmp
add
decl
push
xchg
aas
pop
add
add
out
sbb
add
cmpsl
rolb
call
stc
pop
leave
icebp
mov
movsl
push
movsb
std
add
jle
add
add
add
pop
sbb
dec
cmp
add
pop
js
push
add
in
iret
and
add
jo
lcall
stc
test
aas
nop
add
cld
mov
lods
arpl
add
and
inc
inc
mov
decl
push
add
mov
js
xor
xchg
leave
std
mov
outsl
jns
fwait
mov
dec
mov
cli
sahf
add
incl
ret
je
inc
or
sbb
dec
pop
popf
lods
cmp
add
dec
dec
mov
jge
mov
push
subl
mov
ljmp
mov
add
or
cwtl
mov
dec
and
sub
sbb
push
xlat
iret
add
add
push
mov
pop
mov
jo
imul
test
mov
mov
sub
add
cld
add
orb
dec
push
xchg
add
xchg
ljmp
dec
cltd
call
pop
inc
add
xchg
fists
cmp
and
add
and
add
add
add
test
into
xchg
mov
pop
aam
add
xchg
cmp
outsb
add
mov
nop
mov
rorb
cmpsl
incl
pushf
pop
call
mov
add
add
negb
sub
loope
dec
aas
mov
sbb
add
inc
xor
add
add
add
sub
shrl
xchg
into
xchg
hlt
add
add
ja
repnz
out
pop
push
pop
test
or
dec
mov
add
mov
mov
add
ja
enter
lods
mov
add
add
add
adc
imull
mov
add
es
xor
test
add
and
test
mov
in
out
dec
popa
add
add
pop
jp
mov
fstl
xchg
mov
mov
cmp
xchg
xor
push
incl
pop
jae
push
xlat
sahf
in
add
add
pushl
movb
ljmp
test
mov
mov
arpl
jmp
jb
loope
or
mov
add
push
push
inc
enter
inc
inc
and
in
into
mov
addl
add
cmp
or
shll
add
add
add
scas
loopnew
dec
call
and
incl
mov
pop
repz
jp
xchg
in
add
test
add
aaa
std
add
add
cld
out
xor
add
ret
fiaddl
inc
push
xor
and
lcall
movsl
or
jmp
out
rol
std
lea
jb
add
push
mov
pop
add
decl
call
enter
lcall
mov
mov
add
mov
xor
ljmp
sbb
ljmp
add
jbe
aad
add
jns
push
add
fwait
inc
push
mov
add
and
ficoms
mov
or
popf
jle
mov
decl
add
cld
mov
sub
mov
mov
pop
incl
cwtl
daa
add
and
sub
ljmp
and
sub
rclb
xor
add
push
aad
push
add
inc
inc
pop
outsl
and
sbb
cmp
and
stc
testl
arpl
mov
add
xor
add
int3
hlt
ror
add
mov
pop
inc
or
insl
out
mov
faddl
les
add
adc
addl
fimuls
push
mov
and
cmp
sub
mov
add
sub
xchg
mov
sub
addl
mov
add
cmp
pop
or
mov
into
mov
pop
xor
cld
inc
and
cmpsl
in
jmp
divl
test
movsb
clc
add
sub
incl
mov
mov
in
in
jb
add
mov
lods
jmp
add
add
jo
sahf
add
sbb
sub
mov
add
jmp
loopne
adc
add
aaa
add
adc
adc
test
leave
sti
leave
sub
and
xor
and
repnz
loop
dec
add
and
sub
add
incl
pop
repnz
adc
adc
movsl
ljmp
push
int3
daa
imul
inc
add
adc
cli
mov
call
rorb
test
add
add
mov
sbb
pop
cmc
mov
shlb
add
sbb
jp
lock
enter
xor
add
add
ja
jge
add
add
inc
push
iret
cli
xchg
xchg
add
add
sbb
xchg
add
or
xlat
arpl
mov
fimull
pushl
mov
test
jmp
sbb
inc
and
cmp
mov
ljmp
mov
incl
xchg
cld
add
mov
out
mov
lcall
add
pop
call
push
dec
out
add
in
or
call
gs
xor
test
jnp
add
pop
test
add
dec
cmp
add
add
mov
cvtdq2ps
test
stc
mov
add
shll
add
fldt
push
mov
lock
add
add
ljmp
mov
add
mov
decl
jmp
inc
inc
mov
and
sub
and
in
fimull
xchg
cmp
incl
add
adc
jle
adc
jp
decl
stos
cli
add
jmp
mov
mov
fmuls
repz
shlb
incl
cli
adc
add
add
push
cli
or
verr
mov
add
mov
add
and
mov
add
sub
pop
add
lods
pop
cmp
add
lds
jge
jnp
xchg
sub
add
add
sbb
and
xorl
outsb
add
add
inc
and
jge
add
jg
out
add
out
mov
mov
add
sub
push
rcrl
mov
push
rcll
sahf
test
popf
add
mov
adc
add
jecxz
pop
sar
incl
iret
dec
cltd
lcall
in
add
add
out
test
incl
jno
sub
add
add
mov
nop
cmp
add
add
xor
jmp
imul
push
int3
mov
mov
roll
test
aam
sub
mov
push
lods
add
sub
push
mov
add
add
inc
and
mov
add
xor
mov
jae
jb
clc
and
sub
cmpsb
xor
pop
out
outsl
add
pushl
ret
and
add
xor
add
adc
add
sbbl
mov
std
cltd
rcll
sti
icebp
dec
test
add
ljmp
add
sub
sub
enter
add
and
sub
cmp
inc
out
add
mov
sbb
cwtl
mov
into
out
mov
incl
xchg
dec
and
adc
and
int
xchg
rolb
add
lods
icebp
std
in
mov
dec
and
fsts
add
popf
add
out
and
leave
and
or
jbe
mov
cmp
pop
jl
jnp
decl
lcall
out
mov
std
cld
imul
xchg
and
test
outsl
call
cmc
add
and
jae
lea
into
add
inc
mov
push
add
ss
add
add
arpl
lret
xor
add
iret
pop
fimull
add
add
add
decl
enter
or
mov
sbb
add
mov
aas
cld
sub
decl
pop
push
add
dec
mov
xchg
sub
push
add
roll
mov
add
scas
xchg
and
mov
mov
add
push
test
jmp
mov
lds
pop
pop
out
jmp
fisubrl
add
mov
out
cmpsb
add
sub
push
adcb
rorl
pop
test
adc
fstl
incl
add
cli
pop
dec
inc
imul
add
aad
fs
insb
stc
mov
jg
addl
and
mov
bound
push
pusha
cld
das
loop
add
into
mov
xor
sub
dec
push
mov
das
sub
js
fisubl
jp
xchg
sbb
sbb
stos
and
sub
add
add
cmp
add
add
adc
adc
add
bound
mov
std
and
pop
adc
jp
mov
cmp
repnz
add
add
pop
and
adc
nop
loope
ljmp
out
pop
mov
lret
sbb
and
jg
xor
add
add
lcall
adc
dec
push
mov
push
sbb
sahf
incl
dec
sahf
mov
sbb
mov
and
xor
clc
ja
repz
mov
out
add
mov
add
out
mov
int3
dec
pop
pushf
incl
loopne
repnz
in
mov
add
out
incl
jmp
mov
and
jb
and
imul
and
jmp
add
mov
sbb
mov
xchg
sbb
in
test
sub
add
and
jne
daa
add
add
push
leave
mov
loop
and
or
stos
cmp
inc
adc
and
mov
add
add
cwtl
mov
ljmp
and
sub
add
ret
push
and
std
stos
push
fisttps
icebp
adc
sub
ds
ljmp
lret
xchg
mov
add
xchg
loope
ficoml
add
or
adc
jmp
mov
and
add
popa
js
add
data16
cli
icebp
add
mov
add
adc
mov
mov
in
xchg
rorl
add
add
sub
iret
mov
xor
xchg
add
xchg
inc
ja
pushl
ljmp
push
mov
popf
mov
jmp
mov
and
and
xchg
xor
sub
mov
aaa
pop
cmpsl
leave
sbb
mov
add
add
insl
pop
sub
xchg
mov
js
xchg
test
add
test
jle
and
dec
xor
sbb
cmp
nop
ljmp
fcompl
add
imul
add
shr
mov
scas
ret
call
mov
daa
pop
std
pop
lea
aas
add
in
cmpsl
inc
movsb
and
incl
cmpsb
inc
filds
add
dec
push
or
sub
lret
iret
mov
loop
xchg
imul
ljmp
movb
add
push
cmc
das
add
push
cmpsb
add
cli
adc
push
inc
mov
sbb
mov
shll
cmp
xlat
dec
out
pop
add
mov
jle
aaa
add
popf
add
add
mov
mov
in
or
add
mov
dec
adc
in
add
cltd
mov
shlb
incl
adc
ret
cmpsb
and
mov
cli
and
hlt
xor
out
incl
daa
fistpl
pop
push
cli
int
repz
add
inc
xor
jnp
mov
jge,pn
lret
add
cltd
lock
cmp
mov
add
mov
lcall
jge
insb
notl
clc
movsl
fdivrs
aaa
mov
cld
pop
xchg
xchg
mov
add
mov
push
mov
and
jmp
cwtl
jns
jo
dec
std
jge
incl
cli
test
xchg
cld
mov
mov
pop
jmp
das
add
push
pusha
push
xor
mov
add
xlat
mov
incl
add
inc
add
add
dec
ds
mov
xor
mov
add
aad
and
xor
jecxz
sbb
pushl
sub
push
add
mov
inc
int3
sub
and
xchg
pop
add
loopne
xchg
ret
out
aaa
inc
mov
xor
add
lret
dec
rcr
jecxz
adc
sub
cmpsb
mov
sub
decl
out
adc
aaa
dec
sub
inc
gs
incl
dec
xchg
add
push
mov
sub
incl
cmp
add
add
fs
movsl
into
pushf
jb
incl
add
xchg
das
xor
add
add
cmpsb
jae
dec
xchg
push
shl
sbb
add
adc
xchg
xchg
incl
and
inc
mov
add
pop
cmp
das
adc
mov
incl
incl
add
ss
je,pt
xor
add
iret
add
xchg
aad
mov
add
mov
lock
xor
insl
mov
popa
add
out
xchg
jns
push
daa
lcall
add
outsl
pop
push
rorb
cld
cmp
add
insl
test
incl
mov
mov
add
incl
fmuls
pop
adc
add
add
or
inc
push
pop
jno
add
fwait
imul
pop
dec
or
dec
xchg
mov
jg
add
out
mov
jb
add
test
dec
add
jl
cmp
sub
fsts
adc
pop
add
pushf
sub
add
fadd
sar
pop
add
add
inc
inc
mov
add
lds
add
dec
std
leave
incl
out
movsl
or
fisttps
inc
int3
push
stos
clc
mov
add
add
mov
sbb
add
add
add
xor
push
jno
lods
enter
scas
insb
add
lret
out
loopne
mov
or
add
insl
mov
popf
pop
incl
add
ljmp
incl
add
add
cmp
mov
out
add
ljmp
push
push
fdivs
pop
cwtl
mov
xchg
in
lods
das
add
add
sub
mov
loopne
adc
and
test
cmp
adc
and
lret
add
inc
xchg
xchg
xchg
das
add
add
add
add
jne
daa
add
add
jo
push
adc
sti
sub
add
mov
ljmp
sarl
pop
subb
and
lea
xchg
int3
dec
iret
insb
incl
mov
fwait
movsl
adc
mov
add
incl
popa
fistps
js
add
add
call
loop
ds
pop
add
dec
dec
push
shrl
call
jb
add
fisttpl
jmp
incb
fdivr
dec
and
add
cmp
ljmp
decl
add
dec
jb
add
or
nop
outsb
mov
lods
and
xor
and
pop
std
ljmp
add
adc
lret
bound
fs
shll
adc
out
xchg
mov
inc
add
jno
incl
inc
call
add
add
mov
in
add
mov
clc
add
mov
das
add
das
insb
js
add
sarb
push
lcall
test
add
sub
add
mov
push
data16
add
add
ficompl
iret
and
push
mov
add
add
sub
lret
pop
mov
add
add
add
adc
shr
icebp
orl
cli
mov
jmp
add
es
int
add
inc
mov
pop
push
sbb
cmp
scas
add
add
aad
inc
nop
in
add
jp
add
pop
push
incl
jl
and
add
inc
cli
xchg
mov
test
aaa
cmp
mov
add
mov
sub
pop
sbb
add
sub
mov
add
test
leave
dec
fwait
mov
loop
add
jle
call
add
add
cmpsl
mov
mov
adc
jno
pusha
fwait
add
mov
pop
imul
push
fistl
imul
fucom
xchg
cmp
add
iret
scas
js
add
decl
enter
ljmp
inc
mov
call
pop
push
and
sub
xchg
and
jae
or
add
jecxz
sti
fcomi
and
add
sub
xor
xchg
test
xor
jbe
add
loop
xchg
insb
push
mov
cmp
add
mov
mov
sti
outsb
cs
add
sub
cmp
pop
addb
adc
add
jl
loope
ljmp
lcall
out
add
fnstenv
push
add
icebp
loopne
mov
and
jbe
cld
add
incl
sub
jae
adc
add
mov
add
scas
xchg
sahf
incl
jp
adc
mov
arpl
xchg
out
dec
inc
mov
and
or
adc
shrl
loopne
mov
add
xor
scas
dec
add
add
add
call
daa
and
add
gs
mov
mov
in
push
mov
cs
jge
add
add
xor
adc
add
sti
jp
cmp
add
or
aas
and
inc
jbe
jnp
cmp
pop
ljmp
xchg
std
cmp
mov
das
mov
jo
inc
mov
dec
call
add
mov
and
js
mov
shrl
out
add
repz
and
dec
les
and
ret
fisubrs
push
add
cmpsb
and
and
mov
mov
mov
jo
mov
and
push
inc
lahf
in
add
fistps
in
decl
ret
movsl
add
iret
dec
stos
fdivl
mov
cli
push
lods
add
jmp
mov
dec
mov
decl
sbb
xor
xchg
add
cmp
and
loope
mov
decl
mov
je
pusha
add
add
jmp
out
shlb
daa
incl
jne
add
in
cltd
jnp
dec
and
pop
pop
add
add
and
test
incl
inc
lret
xchg
jmp
sbb
incl
popa
sub
jns
adc
pop
es
cs
jl
repz
iret
arpl
xchg
shlb
jmp
and
add
add
mov
adc
add
mov
loopne
add
inc
out
sahf
add
mov
inc
imul
xchg
mov
cmp
and
idivb
incl
idivl
add
sub
add
add
test
stos
das
mov
mov
adc
outsl
out
add
jne
ljmp
pusha
idivl
test
add
add
cmp
je
sub
and
enter
add
lret
daa
imul
int3
push
lds
xchg
sahf
jbe
push
lods
cmpsl
xchg
mov
lcall
outsl
inc
incl
pop
sbb
pop
sbb
addr16
pop
add
push
jmp
incl
hlt
jecxz
mov
js
add
decl
add
sub
and
je
movsl
test
mov
mov
shll
add
vmovapd
arpl
add
mov
pop
pop
shrb
fldl
data16
call
add
incl
sbb
push
mov
dec
sti
sub
mov
cltd
out
add
add
pop
lret
aad
push
scas
mov
add
insb
stos
and
mov
push
movl
push
add
mov
sub
in
movsb
push
outsb
mov
fbstp
pop
sub
and
enter
inc
mov
add
cld
xor
jns
fiaddl
mov
incl
pop
mov
or
int
and
pop
add
or
and
add
add
jmp
adc
and
lods
sub
add
mov
cmp
imul
mov
push
call
mov
and
negl
mov
mov
call
dec
sbb
jmp
mov
incl
imul
movsl
jecxz
sub
adc
mov
push
mov
add
push
pop
frstor
incl
lcall
sbb
jp
mov
and
sbb
loopne
rcll
sahf
and
cmp
js
jnp
incb
mov
out
ds
in
push
add
lods
add
add
and
add
add
jnp
add
add
cmpsb
pop
jg
mov
sub
mov
imul
fwait
mov
add
fadds
sahf
out
jl
add
jno
mov
rol
repz
cmpsl
add
add
and
lds
add
add
xor
aaa
or
pop
fiaddl
add
cmp
add
mov
pop
fmuls
decl
cmpsl
ret
sahf
xor
dec
xor
add
mov
mov
dec
incl
add
add
add
xchg
mov
mov
dec
roll
mov
lods
jmp
imul
push
add
cmpsb
fwait
out
inc
mov
shlb
add
mov
dec
or
add
add
xchg
clc
subb
dec
imul
adc
mov
stc
dec
decl
mov
add
scas
jb
and
or
add
incl
out
aaa
or
add
add
and
or
sub
jmp
lcall
lret
add
lods
fiadds
push
add
aad
add
jp
mov
rorb
push
hlt
icebp
pop
add
mov
test
and
mov
pop
jmp
and
decl
pop
add
incl
jle
xor
add
cmp
sahf
xor
bound
mov
fcoms
sub
stos
imul
push
xor
and
incl
loop
pop
xor
and
sbb
and
add
fwait
jmp
cltd
adc
add
add
cmc
jo
ss
out
dec
call
adc
mov
add
clc
push
add
jmp
cmp
push
movsl
test
imul
pushf
jge
push
and
scas
pop
incl
add
cmpsb
mov
fisubrs
xchg
or
add
push
rorb
xor
cmp
mov
add
add
mov
and
add
adc
fldenv
call
js
sub
lret
pshufw
in
fs
shl
mov
add
add
add
test
push
mov
mov
add
jmp
add
jno
add
enter
sub
mov
adc
fists
add
adc
out
sub
add
add
adc
incl
add
and
add
jae
insb
dec
adc
xor
mov
int3
lods
dec
jns
sub
add
lahf
lret
mov
add
cmp
add
add
adc
pop
xchg
add
jbe
shlb
pop
pop
cmpl
ja
add
inc
dec
sarl
xchg
jnp
incl
add
std
mov
call
decl
inc
adc
add
fisttps
mov
decl
add
cmp
add
pop
sub
and
sti
sti
lcall
aam
cltd
jl
add
add
das
loope
leave
push
jmp
cmp
jmp
js
mov
and
add
test
adc
imul
add
push
gs
aaa
incl
and
cli
jmp
mov
add
and
cmp
mov
mov
and
jmp
daa
cmc
jmp
aaa
call
xchg
xchg
mov
pushf
call
add
add
and
xchg
popa
cmp
and
adc
add
pop
sbb
xchg
mov
mov
and
mov
xor
outsb
add
xchg
and
ret
incl
jmp
cmp
mov
jb
fistpll
addr16
ja
add
xchg
out
ljmp
js
ret
jg
in
cs
add
cld
pop
leave
fld
dec
add
ret
ljmp
xchg
add
and
bound
mov
add
xor
mov
stos
in
and
add
mov
out
add
cmp
cmp
dec
sbb
imul
and
sti
push
sub
mov
push
in
add
and
mov
mov
adc
incl
stc
dec
add
push
dec
cmp
cs
popl
add
and
mov
or
roll
add
or
add
in
lahf
flds
mov
jmp
or
out
fucomi
and
adc
lods
and
andl
std
sbb
std
add
jecxz
add
jp
insl
addl
incl
fidivrs
fs
mov
dec
dec
lea
call
and
xchg
and
and
bound
fsubs
add
int
push
adc
sbbb
decl
ret
jmp
mov
mov
stos
out
adc
and
movsl
pop
add
test
mov
adc
add
iret
sbb
xor
add
and
ss
rolb
push
add
scas
adc
mov
jge
dec
add
pushl
test
mov
addr16
mov
out
add
and
daa
imul
mov
add
aad
adc
push
popf
lret
jbe
add
sbb
and
cmpsb
sub
mov
je
sbb
bound
call
and
and
les
dec
lcall
decl
mov
mov
mov
adc
ljmp
add
dec
inc
hlt
cld
add
jns
add
add
mov
jno
mov
test
insl
add
sbbb
lcall
fistps
mov
lcall
sbb
leave
add
add
scas
add
mov
add
jnp,pt
add
call
mulps
add
cmp
cltd
ficoml
add
add
out
dec
decl
repz
mov
and
sub
add
out
xchg
and
adc
ljmp
xchg
cmpsb
mov
add
pop
repnz
add
lret
xchg
cltd
fimuls
ljmp
add
sub
stos
or
add
cs
imul
mov
insb
add
add
add
cli
movsl
add
add
add
xor
mov
sub
or
dec
in
mov
add
add
mov
add
inc
xchg
int3
sar
xor
jae
incl
fwait
and
and
mov
enter
cmpsl
mov
shr
lahf
jne
add
test
out
xchg
add
adc
fidivrs
or
add
mov
jle
mov
add
push
mov
data16
sbb
add
nop
fdivs
dec
push
push
add
std
and
add
incl
push
sub
pop
pop
into
lods
incl
ljmp
incl
xchg
mov
incl
xchg
test
dec
outsl
and
cmpsl
popf
and
mov
pop
pop
xchg
ljmp
sbb
in
lcall
push
mov
add
pop
clc
cmp
lret
ljmp
add
adc
mov
xchg
cwtl
and
push
incl
dec
mov
or
add
adc
and
insl
scas
out
add
fst
repnz
add
and
xchg
add
xor
adc
scas
add
sbb
pop
andl
add
or
inc
jae
and
addl
add
mov
jp
fldenv
add
add
outsb
and
inc
xlat
add
add
ss
and
add
add
out
pop
inc
mov
mov
dec
lret
add
add
into
add
mov
inc
cli
cli
ljmp
mov
push
pop
bound
decl
lea
decl
inc
push
jl
mov
dec
movsl
fcomps
add
add
shlb
lcall
bound
cld
and
cmp
rorb
sub
or
add
loop,pn
ljmp
inc
shld
or
xchg
add
in
and
add
jo
and
movzwl
lock
sbb
int
jno
int
incl
arpl
add
pop
jg
push
add
mov
add
adc
adc
sbb
fisubrs
xor
cmpsl
mov
mov
mov
xor
push
mov
jo
pushl
mov
cli
stc
popa
xchg
mov
mov
fidivrs
add
add
lcall
js
stos
xlat
mov
dec
jno
adc
int
sub
mov
das
ss
mov
incl
call
divb
and
les
jno
mul
sub
push
add
shll
rorl
movsl
and
sub
test
add
incl
out
shll
ja
incl
add
add
insl
mov
nop
pop
pop
add
dec
test
insl
and
out
into
sbb
inc
mov
fwait
mov
mov
xchg
fwait
jl
aaa
push
add
jmp
push
hlt
cmc
add
fs
adc
add
dec
jmp
push
or
mov
xor
mov
add
or
jmp
add
jmp
jp
inc
stc
lcall
addl
sub
add
jmp
sbb
add
bound
add
sub
stc
pop
add
jecxz
cmpl
mov
and
cs
data16
mov
ljmp
icebp
clc
pop
cmpsl
cmpsl
addb
shrw
add
xchg
mov
decl
jmp
sbb
add
pusha
mov
inc
jnp
lods
icebp
add
sub
scas
add
add
out
mov
mov
add
jp
jae
inc
add
add
jnp
repnz
icebp
and
loope
ljmp
add
jg
insb
add
jg
pushf
mov
dec
dec
cmp
or
popa
pop
cmp
sub
mov
and
or
pushl
fildl
loope
and
add
test
mov
or
adc
add
xor
dec
jp
mov
add
pop
mov
sub
mov
xchg
rorl
add
add
clc
or
jo
or
ja
adc
push
mov
and
popl
or
filds
mov
jns
add
sbb
mov
add
xchg
sbb
out
jne
xchg
rorl
push
incl
imul
add
add
imul
sti
or
mov
add
jae
inc
cmp
sar
sub
js
gs
pop
add
mulb
mov
add
and
mov
add
inc
add
push
mov
fldenv
jg
add
mov
test
xchg
add
inc
xchg
add
inc
and
and
das
into
iret
add
stc
int3
inc
enter
mov
pusha
fadds
add
mov
inc
roll
add
nop
pushf
pop
imul
mov
fildl
add
imul
add
pop
loop
or
add
lahf
add
test
dec
add
sub
cmp
jne
faddl
and
cmpsb
sub
cmc
movsb
lods
pop
mov
and
xor
and
popf
jmp
loopne
push
or
fsubrp
mov
and
sbb
cli
data16
ja
jmp
dec
pushl
dec
mov
fcomps
cltd
popf
add
incl
mov
xor
add
ja
leave
incl
mov
fnsave
and
inc
add
add
leave
ss
add
dec
in
push
jmp
push
push
add
sti
call
enter
mov
and
jmp
in
xchg
add
jp
lcall
incw
jmp
jmp
jns
les
add
jl
pusha
mov
mov
push
pop
adcb
incl
sub
mov
ss
in
and
jmp
sub
cmc
lcall
add
add
add
les
add
inc
push
sub
iret
xor
imul
pushf
insb
sbb
ror
lcall
jecxz
add
out
push
push
jns
push
sub
and
jg
cltd
jge
out
sti
or
add
addr16
mov
inc
xor
fwait
dec
xchg
and
mov
sub
ljmp
incl
scas
nop
and
dec
add
aas
mov
loope
mov
inc
mov
dec
and
decl
lret
add
add
aaa
push
sahf
in
mov
add
add
mov
add
rorb
jmp
cmp
fcmovb
divb
and
pop
add
call
pop
mov
add
and
mov
jnp
pop
addr16
add
incl
add
ljmp
mov
inc
frstor
cmp
shll
mov
adc
call
mov
add
repnz
outsb
add
pop
mov
cmpsb
add
sub
mov
inc
in
push
inc
pop
jo
sbb
and
mov
jl
adc
add
sbb
and
icebp
inc
add
add
and
inc
fwait
push
push
xor
movsb
pushf
fldenv
mov
je
jo
incl
incl
jb,pt
mov
decl
mov
add
or
mov
ljmp
out
movsb
std
jns
push
loope
and
mov
aam
mov
add
xor
jbe
add
incl
out
and
in
test
cld
mov
jnp
add
test
incl
jo
ror
stos
sub
mov
lock
lds
and
add
mov
adc
leave
and
stc
mov
hlt
add
and
and
inc
add
incl
out
jp
repnz
dec
decl
adcb
fwait
pop
mov
mov
and
add
cmp
push
scas
jnp
sub
add
fisttpl
add
imull
add
and
and
xor
pop
das
in
and
inc
mov
push
incl
push
test
loope
out
mov
popa
ja
xchg
clc
and
add
mov
jle
add
call
cmp
lock
repz
iret
incl
imul
and
mov
mov
add
add
pop
mov
mov
adc
call
cmpsb
add
add
jmp
dec
xor
adc
push
nop
fidivrs
add
dec
test
xchg
cmp
xchg
imul
mov
incl
mov
fwait
add
mov
movsb
mov
add
out
add
jne
pop
and
les
in
data16
mov
popa
jge
movl
sub
out
pop
add
and
hlt
add
pushf
xchg
jb
and
add
add
jl
test
push
decl
add
sub
sub
cmpsl
or
cmp
xorl
add
add
insb
xchg
sbb
mov
add
lea
add
adc
and
sub
sub
and
cmp
mov
push
mov
add
nop
add
add
push
cmp
and
sub
add
cwtl
push
out
xlat
lods
push
imul
cmpl
js
add
add
rcll
xchg
rorb
out
lock
add
xor
add
lahf
lahf
mov
sbb
ljmp
in
or
add
pop
xor
enter
and
and
fcoml
adc
dec
popf
xor
sahf
jmp
add
push
hlt
decl
stos
add
incl
stos
fnstcw
mov
ljmp
add
push
xor
in
dec
add
add
xorb
or
add
jns
stos
mov
add
in
adc
add
jecxz
xchg
lods
adc
adc
cmp
or
call
dec
push
jg
add
inc
ja
add
lret
fs
add
add
add
pusha
js,pt
add
mov
mov
scas
sahf
mov
fidivl
add
mov
add
gs
jns
incl
add
mov
jbe
testb
inc
add
add
cli
cmpb
add
out
add
incl
push
movsl
cs
push
call
leave
jg
popa
mov
adc
sahf
loopne
incl
xchg
pop
loop
scas
repnz
add
incl
incl
repz
and
jecxz
add
sub
mov
and
add
and
add
decb
jnp
pop
test
cld
add
add
in
std
ss
cmpsl
add
mov
mov
ror
mov
jmp
stc
cmp
and
sub
add
add
lods
pop
aas
arpl
leave
mov
dec
add
test
stos
add
add
add
aaa
mov
cmpsb
and
add
pop
and
lds
or
pusha
inc
test
add
fldt
int
adc
and
sbb
mov
sub
dec
jae
add
int
add
popf
adc
xchg
mov
cmpsb
cmc
mov
loope
stos
leave
mov
adcl
cmp
inc
inc
pop
inc
mov
add
sbb
add
lods
and
pop
mov
pushl
or
jbe
test
rorl
add
rcl
into
add
push
adc
add
add
xor
decl
cwtl
dec
xchg
popf
roll
adc
xchg
add
incl
adc
xchg
repnz
sub
or
add
cs
add
pop
adc
incl
xchg
mov
fidivs
sub
repnz
dec
divb
add
cs
inc
add
add
popa
into
mov
fstpl
adc
jge
mov
and
mov
repnz
cmp
sbb
dec
daa
pushf
mov
sbb
add
mov
and
inc
mov
add
sub
add
lahf
and
add
movlps
out
in
lods
sbb
ljmp
bound
popf
lret
incl
add
sahf
and
and
add
xor
add
or
int3
pmaxub
movsl
cld
xchg
fadds
adc
dec
xchg
sub
jl
xchg
push
mov
adc
sbb
or
xor
dec
and
hlt
jmp
sbb
cmp
jmp
and
addr16
iret
fsts
add
and
repnz
sub
add
call
sub
add
fdivrl
insl
pushl
pop
cmpsb
iret
and
andb
and
fisubrs
or
add
add
push
add
cmp
aam
pop
test
adc
popl
add
incl
add
out
inc
mov
sub
or
outsl
jle
mov
add
mov
pushf
shrb
inc
cmpb
and
ret
mov
mov
xlat
xchg
repz
ljmp
add
mov
jp
js
add
and
fsubrl
or
add
decl
add
pop
add
jmp
sti
inc
sub
adc
incl
loopne
pop
shlb
add
sub
aas
mull
sub
add
add
push
xor
call
decl
add
loopne
into
xor
cli
mov
inc
ljmp
lret
cmp
or
adc
mov
in
ficoms
inc
adc
jmp
bound
in
and
leave
js
add
das
cli
adc
adc
call
mov
add
incl
push
xor
lret
ror
add
mov
sbb
ljmp
add
mov
cld
and
add
xchg
stos
add
jbe
sbb
incl
add
sbb
leave
adcb
es
movb
dec
mov
out
add
and
mov
testl
add
icebp
add
push
lcall
add
ljmp
add
std
in
ljmp
push
in
jg
xor
lea
add
add
inc
test
add
lcall
or
sub
jg
dec
add
mov
jne
mov
cmpb
sbbb
lcall
add
loopne
ds
push
in
add
and
and
and
add
jno
jnp
add
sub
pop
notrack
call
out
dec
incl
add
push
loop
inc
rorb
inc
add
inc
pop
and
scas
clc
jno
jmp
fistpll
insl
xchg
push
lret
add
cmp
pop
add
jmp
gs
adc
push
cmp
mov
cmp
mov
xchg
and
jne
sbb
mov
add
add
jg
add
dec
cltd
mov
add
jp
das
decl
add
leave
aad
jbe
add
insl
and
adc
stos
psubq
mov
sbb
mov
cmc
add
sub
push
pop
jnp
jnp
lods
jmp
mov
inc
jne
jo
incl
add
addr16
xchg
inc
add
add
mov
xor
mov
mov
bound
add
add
decl
mov
cmp
add
incl
inc
or
add
dec
out
push
sahf
ja
mov
mov
xor
pop
mov
sti
test
cmpsl
mov
push
sar
mov
mov
push
xchg
mov
add
lock
mov
sub
arpl
lock
mov
add
mov
cli
cmp
add
add
jle
int3
add
ret
lock
adc
xchg
add
incl
mov
orl
add
inc
es
jmp
mov
sub
add
dec
test
pop
add
cmp
add
mov
add
movsb
popa
mov
mov
mov
add
out
add
arpl
mov
push
mov
sahf
cmp
add
add
loop
out
sub
imul
add
cli
cmpsl
inc
cmpsl
push
add
xor
add
add
xchg
and
xorl
push
popf
push
and
xor
popa
int
pop
dec
add
add
cli
into
loope
and
and
mov
mov
and
ljmp
push
cmp
mov
and
adc
call
xchg
es
push
add
stos
call
lret
popa
add
or
cmc
push
repz
add
mov
sub
mov
add
add
xlat
add
add
push
add
add
sarl
cld
mov
pusha
jle
incl
lcall
out
adc
das
incl
ljmp
gs
fwait
inc
pop
lods
cwtl
mov
and
es
loopne
aad
int3
xor
fnstcw
incl
cmp
negb
hlt
mov
adc
add
les
mov
add
dec
inc
fldt
incl
addl
call
xchg
popf
cmc
in
incl
adc
mov
and
sbb
decl
xchg
add
add
pop
jl
ljmp
cmc
aad
adc
scas
mov
or
push
or
incl
mov
jl
and
add
clc
fbld
add
dec
int
add
mov
mov
jmp
add
cs
adc
decl
jmp
add
xor
add
cmpsl
mov
ret
inc
ja
add
loope
mov
mov
es
repz
pop
pushf
add
sbb
add
dec
mov
movsl
loop
inc
incl
add
add
jge
xchg
jmp
cmp
outsl
mov
call
roll
arpl
mov
sub
enter
mov
add
sbb
inc
andb
add
add
fisubl
jo
sub
and
add
iret
and
pop
stc
lret
push
add
add
push
call
adc
pop
es
or
and
add
xor
add
add
mov
sub
mov
sub
and
iret
subb
add
dec
lods
jge
movsb
inc
add
add
mov
push
add
pop
and
add
fidivl
jno
dec
in
lret
repnz
stc
divl
mov
pop
jecxz
adc
incl
and
lcall
add
incl
stc
in
cmp
push
gs
call
cmp
add
into
scas
in
and
add
sub
add
jbe
in
addb
cmc
movsl
dec
mov
adc
test
stos
verw
xchg
and
cmp
jo
pop
addl
and
fisubs
ss
cmp
add
add
movsl
push
and
incl
jecxz
adc
lods
ret
xchg
add
add
inc
and
lret
add
pop
cs
inc
sub
lea
jno
test
mov
add
push
ret
mov
ud0
add
sbb
shlb
adc
add
sub
out
cli
adc
lret
rolb
add
xor
mov
inc
lcall
int3
add
sbb
mov
mov
add
add
jb
mov
and
fldcw
ja
incl
outsl
inc
lret
and
movsb
mov
mov
sub
add
pop
mov
cmp
fisubrs
add
adc
sub
or
stos
in
jno
jp
mov
movsl
and
incl
add
into
mov
mov
jmp
add
fwait
outsl
lds
pusha
add
mov
enter
inc
xor
roll
add
inc
test
add
pop
adc
imul
dec
xor
in
add
scas
adc
repnz
mov
add
mov
add
add
repz
add
cmc
mov
add
inc
jmp
add
cltd
cmp
mov
push
mov
lock
pushf
add
jmp
add
aad
jmp
add
adc
add
fdivp
add
jne
sbb
dec
mov
sbb
mov
add
and
add
push
lea
decl
xchg
loope
arpl
add
adc
jno
fisubl
add
jmp
xchg
lea
incl
cmc
fldcw
add
push
add
decl
pushl
fcmovu
jbe
and
jae
sbb
in
fwait
add
scas
sbb
add
pusha
aad
cmc
pushf
add
ret
push
outsl
mov
out
int3
or
and
shrb
xchg
and
sti
sub
cltd
mov
loopne
sqrtps
mov
movsb
sbb
add
add
add
pop
xor
add
xor
add
outsb
insl
dec
mov
xor
add
add
and
mov
maskmovq
mull
movsl
mov
daa
aad
lea
dec
mov
pop
mov
mov
dec
mov
add
and
int
out
add
insb
sbbl
fcoms
jle
adc
shrl
jne
decl
insb
test
inc
cwtl
add
add
mov
add
sahf
adc
add
push
rcll
test
add
push
fdivl
add
adc
in
mov
adc
and
xchg
mov
and
push
incl
addl
mov
clc
cltd
movsb
incl
add
jnp
sbb
cmp
icebp
and
add
ljmp
jnp
mov
call
add
pushl
cmp
pushl
decb
int
enter
pop
add
adc
mov
mov
xor
push
mov
mov
gs
incl
incl
xor
add
add
add
scas
daa
subl
cwtl
add
and
pop
xchg
mov
xor
mov
add
and
addr16
sub
and
ret
add
add
repnz
sbbb
in
mov
cltd
adc
mov
xchg
add
std
and
loope
and
fdivr
and
mov
and
adc
out
sar
and
imul
inc
mov
add
pop
mov
out
add
sub
aas
incl
xorb
in
incl
add
es
jmpw
mov
popa
xchg
add
add
jmp
and
and
mov
incl
mov
add
decl
xor
add
mov
mov
test
and
mov
push
add
jae
xor
and
ljmp
jmp
es
sbb
add
add
notb
aad
sub
mov
pop
jle
add
push
push
je
test
mov
xor
mov
push
call
add
add
dec
add
add
mov
add
push
mov
mov
xchg
push
mov
and
inc
in
dec
fbld
and
data16
jmp
add
add
mov
push
movsb
test
mov
xor
mov
mov
cmpsl
popa
scas
addb
mov
and
add
sbb
add
add
scas
daa
cmp
js
call
in
loopne
xchg
arpl
push
lods
add
cltd
push
adc
add
lock
test
add
and
js
fdivrs
mov
add
add
sti
ret
add
inc
mov
and
xchg
in
test
outsl
fiaddl
movsl
mov
and
incl
add
add
inc
movsl
cmc
fmul
add
add
out
shrb
jmp
add
xor
mov
cltd
adc
fnstcw
add
mov
xor
add
dec
jo
lods
fbld
mov
ret
rep
add
movsl
or
mov
imul
stos
sti
dec
jns
and
mov
nop
add
and
incl
lret
imul
pop
add
icebp
out
push
add
cltd
incl
ltr
ret
aam
jae
call
lcall
incl
pushl
loope
xchg
cs
xchg
sub
jg
pushf
push
xor
add
pop
repnz
loope
or
call
xchg
sahf
sub
cld
mov
push
mov
outsl
push
add
add
and
or
popa
and
and
sbb
iret
add
mov
add
sub
mov
ljmp
adc
sub
jnp
std
call
add
loopne
popf
ud0
add
out
mov
mov
add
adc
filds
sub
mov
jnp
mov
lret
push
jns
pushf
push
add
mov
repz
aam
mov
incl
cld
mov
add
scas
pop
add
xchg
adc
fidivrl
les
add
jns
aad
icebp
orb
int
push
add
adc
add
add
fwait
sahf
std
ja
xor
in
stc
out
and
inc
lea
and
decl
cmp
test
add
add
add
push
out
lcall
insl
pushf
xor
mov
pop
iret
mov
aam
mov
push
mov
and
rorb
pop
rcrl
js
incl
add
and
fs
insl
push
cltd
or
ljmp
xlat
cmc
xchg
movsb
dec
dec
add
cmp
in
aad
add
mov
push
push
lods
sti
add
add
and
ss
pop
pusha
mov
fwait
pop
push
add
lods
xchg
cmp
sub
xchg
xor
mov
push
and
adc
add
mov
and
in
add
shrb
add
mov
jl
es
pop
sub
add
cmp
outsb
std
adc
add
adc
lcall
fstps
add
dec
pusha
jno
and
in
jp
add
add
mov
rcr
sar
xor
fmuls
inc
std
xorl
icebp
add
add
xor
lcall
arpl
add
addb
add
mov
sub
jp
add
and
repz
add
push
leave
or
bound
push
sub
add
cld
punpcklbw
repz
js
pop
add
adc
or
sbb
and
mov
pop
jo
jle
jmp
jmp
xlat
dec
jp
les
add
xchg
stc
mov
add
push
js
mov
popf
pop
cltd
sbb
cmpb
mov
sarb
add
std
pop
jbe
mov
adc
add
mov
adc
add
psrlw
enter
mov
xchg
decl
adc
movsl
je
sbbb
jmp
add
add
push
inc
pusha
ljmp
inc
dec
and
sub
pushf
or
add
test
add
dec
lret
int3
dec
and
in
mov
popa
mov
ljmp
js
das
jle
push
or
in
or
add
inc
lock
repz
mov
mov
stos
jge
add
mov
std
jnp
add
adc
mov
mov
add
pushl
xchg
mov
push
stos
adc
add
mov
mov
popf
sbb
incl
add
cmp
test
loope
pop
add
add
std
mov
and
add
ret
adc
inc
add
aad
add
pop
pop
aaa
add
add
jne
or
add
dec
cmpsb
pop
sub
add
add
or
pop
notl
cli
pop
mov
mov
inc
leave
sti
dec
cld
adc
add
clc
push
jle
or
push
add
and
pop
add
paddd
add
lret
jmp
fninit
mov
xor
jp
cmpsl
and
add
lcall
gs
in
call
xchg
add
xchg
incb
imul
push
loope
mov
add
stos
sbb
xor
and
mov
mov
mov
insl
push
into
mov
xchg
filds
cmp
or
incl
add
add
mov
add
add
pusha
add
add
pusha
cmp
ss
add
ret
ret
fildl
add
add
mov
in
out
sbb
inc
add
add
jmp
fiaddl
add
test
add
xchg
cltd
lret
out
adc
dec
stc
sti
sub
add
add
fstpl
js
add
pushl
jne
and
add
movsl
fiaddl
incl
dec
outsl
pop
fs
sub
mov
cmpsl
push
fld
add
add
jbe
and
xchg
jne
add
cmp
lret
fidivs
icebp
fnstsw
add
push
mov
add
mov
lea
and
push
int
insl
add
xchg
out
sub
and
mov
ljmp
xchg
mov
add
pop
or
add
add
and
decl
add
sti
cmp
rorl
jmp
and
jno
and
pusha
andb
add
mov
incl
and
xor
xor
test
call
in
call
pop
ss
mov
or
in
fists
incl
mov
cs
add
add
and
mov
sub
xchg
jnp
add
movsb
xchg
adc
rolb
roll
xchg
xchg
mov
add
inc
xchg
lea
mov
repnz
cmpsb
push
mov
and
decl
and
loope
push
mov
out
add
aad
cld
loopne
add
add
std
ret
add
add
push
mov
add
inc
sub
add
clc
xor
jge
test
fs
xchg
add
in
and
mov
adc
incl
mov
lahf
push
cmp
add
popf
fsubrl
arpl
lods
lret
idiv
icebp
xchg
push
incl
js
test
cmp
add
or
sub
sub
jle
movsl
push
mov
mov
fst
in
pop
insb
jns
add
gs
mov
outsl
push
daa
sub
and
les
lea
lods
cs
rcll
enter
mov
in
mov
in
repz
scas
imul
stos
add
testb
add
xchg
popl
es
jp
insl
decl
sub
std
js
idiv
xchg
mov
decl
add
adc
mull
sub
jle
and
lcall
dec
add
and
jnp
in
add
add
jae
sub
add
pop
cld
loopne
mov
sbb
jmp
sub
cmp
add
mov
adc
xchg
gs
adc
add
adc
add
dec
add
adc
popf
out
mov
jmp
jge
ljmp
fimuls
aas
sbb
mov
std
jmp
incl
cmp
add
add
rorl
add
xlat
ljmp
adcb
add
pop
fsts
add
inc
inc
lret
mov
add
xchg
adc
sti
int
mov
push
add
daa
adc
push
pop
adc
scas
push
ljmp
popa
mov
lret
jae
sahf
or
cmpsl
and
add
cmp
out
xchg
xchg
mov
hlt
sbb
lea
cwtl
mov
xor
aam
and
lret
mov
add
add
es
add
add
inc
and
in
icebp
cmp
add
sti
inc
lcall
add
jl
cmp
add
data16
call
inc
mov
out
out
jnp
sar
lret
xor
popf
movsl
dec
and
sub
in
add
lret
mov
inc
insl
inc
cmpsl
add
and
mov
imul
jae
cmp
mov
insl
add
or
bnd
ljmp
add
mov
mov
xor
xlat
outsb
and
decl
andl
in
push
mov
mov
lds
jbe
gs
sub
add
sbb
ja
add
add
pop
mov
mov
jb
add
mov
inc
ds
push
nop
dec
cs
inc
incl
add
add
and
scas
sbb
incl
xor
jmp
jbe
cmp
jmp
mov
and
sub
xor
add
js
add
icebp
inc
add
mov
incl
cmc
int
xor
mov
jae
mov
and
add
imul
sbbl
arpl
and
test
mov
fidivrs
fstcw
ret
add
add
or
push
inc
lods
sub
add
incb
imul
push
inc
sbb
jge
lahf
pop
adc
incl
jae
dec
and
adc
lds
push
xor
inc
mov
add
add
add
fldt
jb
popf
mov
and
or
mov
ret
outsb
add
jns
loopne
out
and
add
sbb
in
add
inc
aad
ja
mov
call
jnp
and
cwtl
into
rcrb
adc
gs
adc
add
push
mov
bound
arpl
icebp
add
push
jno
add
shl
das
cmp
mov
add
cmc
data16
push
shrl
mov
mov
inc
and
add
fistps
adc
cmp
shll
repz
imul
mov
call
and
sbb
dec
mov
out
push
and
ja
add
and
incl
pusha
stos
imulb
push
mov
mov
cmp
add
add
add
push
call
add
cmpsl
cmp
addr16
xchg
jns
bound
aam
push
push
mov
add
jae
hlt
call
add
sub
or
add
in
or
fdiv
push
and
lcall
push
add
add
sbb
ljmp
and
and
add
and
out
in
in
cmp
xor
cmpsb
pop
inc
add
sahf
jnp
sub
jecxz
cmp
and
cs
dec
fiadds
add
mov
add
fistpl
filds
or
xchg
inc
cmp
mov
add
mov
mov
or
pop
or
dec
sti
incl
inc
mov
outsl
scas
add
add
in
ja
jo
adc
or
push
mov
sbb
fnstcw
shr
add
mov
dec
add
push
ja
sbb
push
std
add
and
mov
adc
pusha
test
ljmp
add
add
dec
faddl
mov
push
decl
lret
fsubs
add
ljmp
or
lret
add
sbb
dec
cmp
mov
sbb
add
add
imul
jp
stc
call
xchg
cld
pushf
add
jns
xchg
jecxz
jmp
lods
idiv
add
aas
mov
add
stc
out
ficoml
add
add
cmp
mov
cmp
aaa
add
repz
add
out
or
add
ja
add
xchg
xor
or
jg
mov
jl
les
and
mov
je
push
cmp
and
pop
cmc
push
jbe
jp
jns
incb
mov
fldenv
add
jo
xor
mov
icebp
fistpll
mov
test
sub
add
add
mov
adcb
add
add
jne
inc
das
test
mov
je
and
xlat
cmp
repz
cmpl
jl
add
outsb
mov
add
or
xor
frstor
jge
cld
cltd
add
inc
lret
pushl
pop
sub
cmp
scas
mov
imul
inc
adc
bound
nop
jae
out
call
dec
add
jg
int
incl
in
mov
addl
popa
mov
mov
dec
out
add
add
add
fsubr
pop
dec
xchg
outsb
add
ljmp
mov
jg
inc
or
call
addb
pop
daa
cltd
stos
out
cmp
jecxz
and
add
ja
std
inc
jmp
add
or
add
into
xor
ret
push
jecxz
js
call
rorb
inc
call
stos
jno
es
and
and
mov
mov
inc
add
sub
lods
cmc
cwtl
fisubrs
sbb
mov
inc
bnd
andl
mov
push
cmc
ret
cmpsb
add
and
pop
pop
push
jmp
add
cmp
sub
add
aad
add
mov
sub
add
lds
aas
ja
mov
mov
aad
popa
pop
dec
add
fistpll
inc
popf
enter
mov
cmpsb
addr16
and
aaa
sar
call
movsl
inc
hlt
stos
push
loope
xchg
and
cmp
aad
pusha
add
add
les
inc
adc
mov
inc
and
fs
mov
aas
sldt
loopne
out
incl
sbb
dec
cmpb
mov
mov
mov
in
sbb
push
xor
add
cld
inc
adc
add
roll
add
push
mov
sub
mov
movsb
adc
add
aad
sub
and
xor
add
imul
mov
mov
add
sub
sarb
repnz
sbb
loope
mov
pop
cli
in
mov
add
ljmp
sub
adc
and
cmpsb
mov
addl
int3
inc
cmc
loope
add
add
dec
das
mov
add
leave
add
sahf
xor
test
push
push
mov
sbb
mov
mov
adc
pop
out
aad
mov
arpl
add
add
shll
adc
cmp
jbe
cmp
xchg
ljmp
add
hlt
adc
sbb
test
lahf
mov
add
adc
bnd
adc
test
add
popa
shr
push
imul
movsl
add
cmp
jb
mov
dec
aad
leave
jo
mov
mov
xchg
pop
cmp
inc
mov
sub
pop
fidivrs
pop
sbb
add
mov
mov
cmp
add
jmp
pushl
xchg
or
add
mov
jge
jne
add
add
mov
hlt
add
jmp
adc
testl
pop
add
sbb
rol
cmp
and
pop
imul
inc
cmc
lds
int3
sub
push
lcall
cltd
or
adc
mov
mov
mov
push
jnp
ds
xchg
xchg
rcll
jle
add
add
stc
enter
add
add
adc
add
lds
outsl
or
sbb
enter
push
mov
mov
std
mov
insb
add
add
pushf
ja
add
push
and
mov
and
dec
cmp
jp
ret
add
fstps
adc
add
add
and
add
mov
add
ret
pop
adcb
add
sub
add
xchg
sbb
lock
fwait
testl
push
push
xor
incl
dec
xchg
push
mov
jb
lret
jne
add
lcall
push
into
mov
add
daa
iret
mov
add
pop
dec
subl
mov
incl
push
jg
dec
stos
imul
add
jp
ret
add
lods
dec
push
fwait
jne
lcall
pop
mov
dec
imulb
and
lahf
push
sub
fiadds
add
and
jns
mov
dec
nop
add
stos
int
add
scas
in
pop
jle
fistpl
int
pushf
cwtl
xchg
aam
add
add
add
daa
mov
ret
add
mov
mov
bound
decl
dec
cmp
pop
ljmp
sub
mov
add
mov
xor
add
ds
dec
sbb
out
xchg
xchg
mov
out
add
mov
cld
les
ret
ljmp
xchg
xor
push
lods
dec
and
incb
xchg
cltd
xchg
testb
mov
into
test
add
cmp
cmp
add
jmp
lea
aaa
roll
add
cld
pop
cltd
jb
cmp
and
add
lock
add
dec
mov
sbb
xchg
mov
jae
xor
out
cmp
sbb
mov
mov
test
sahf
mov
add
mov
scas
add
add
xchg
ljmp
add
in
out
jns
add
pop
pop
rcrb
cmp
jno
add
mov
incl
add
xor
mov
mov
clc
add
mov
movsb
insb
incl
push
addb
popf
jb
inc
dec
lods
inc
mov
jle
ljmp
add
sub
push
dec
ss
sbbb
add
jnp
ret
cmp
and
and
sar
and
cmp
jmp
jge
pusha
xchg
add
add
jb
cmp
add
fsts
in
pushl
imul
add
insl
sarb
sbb
mov
add
imul
add
movsl
mov
mov
xor
add
mov
pusha
fs
nop
cmc
stc
testb
decl
enter
imul
lock
popf
jmp
mull
inc
add
and
jbe
or
or
dec
add
pusha
pop
add
dec
addr16
test
out
mov
mov
add
incl
mov
push
mov
mov
dec
mov
cmpsl
leave
imul
adc
popf
aam
mov
jae
call
jmp
add
and
mov
and
popa
imul
and
dec
lcall
sub
mov
dec
adc
les
mov
pop
pusha
push
test
add
add
mov
out
or
add
add
xchg
add
pop
push
ja
mov
adc
rcll
xchg
stc
push
incl
call
or
lcall
incl
mov
scas
add
call
mov
mov
inc
adc
mov
icebp
bnd
in
xchg
push
fs
ljmp
addr16
add
add
ss
cmp
or
add
pop
mov
mov
add
or
add
cmc
cmp
enter
xchg
in
cmc
and
add
cli
pushf
jns
and
incl
push
clc
mov
sub
add
dec
insb
mov
sub
add
insb
movsb
pop
mov
ret
nop
mov
insl
add
mov
mov
mov
jns
jmpw
add
and
test
cltd
add
push
mov
mov
in
inc
pushf
dec
orb
in
sbb
add
and
incl
push
fisubs
ret
mov
ljmp
inc
or
test
rcrl
add
mov
add
mov
mov
push
loopne
xor
add
add
mov
lock
add
frstor
mov
adc
ret
orb
xor
add
push
lods
pop
adc
out
add
add
in
pushl
out
inc
cmpsb
mov
pxor
jbe
and
lcall
icebp
dec
add
int3
mov
add
sub
add
in
or
in
dec
incl
and
jbe
mov
jp
add
call
sti
add
std
add
incl
add
adc
add
mov
call
imul
jle
dec
divb
add
lods
sbb
enter
sub
fadds
and
sbb
mov
rorb
and
add
andl
sbb
ret
xor
jne
ds
decl
push
add
mov
pop
add
adc
daa
push
and
cmp
sti
test
add
call
and
mov
mov
add
out
out
xor
mov
and
jl
outsb
loop
add
scas
dec
jg
mov
cwtl
cmpsb
je
movsb
out
mov
pop
add
nop
sbb
mov
mov
decl
add
mov
loopne
icebp
inc
xchg
mov
scas
add
mov
inc
shlb
aas
mov
add
push
repz
popa
cmp
pop
in
pop
les
add
add
jl
and
adcl
and
cltd
outsb
xor
inc
cmp
mov
lds
lods
rcr
add
call
add
incl
dec
lock
ret
add
add
and
inc
dec
orb
cmpl
in
sub
sub
mov
dec
mov
and
or
mov
and
push
lret
cmp
add
add
mov
cmp
movsb
mov
and
add
adc
cmc
add
mov
jae
lods
jmp
sub
mov
mov
cmp
mov
addl
incl
sti
lret
out
add
dec
mov
sbb
mov
js
mov
incl
add
test
int3
add
mov
movsb
xchg
fidivl
in
loop
mov
lock
decl
push
imull
imul
sbb
mov
add
xor
pop
in
xchg
add
add
jmp
cmpsl
or
in
adc
mov
lcall
mov
inc
in
xor
mov
lahf
jb
mov
decl
enter
mov
xchg
mov
inc
mov
pop
xchg
call
sub
outsb
imul
mov
push
xor
xchg
lcall
pushl
nop
xor
jnp
call
cli
push
xchg
out
mov
scas
dec
and
add
sub
jp
pushf
out
adc
mov
pop
imul
decl
add
mov
add
jg
sub
loop
adc
add
xchg
dec
gs
mov
add
jmp
cs
into
xchg
add
push
sahf
sbb
mov
mulb
adc
les
sar
fs
add
in
mov
sub
pushf
mov
mov
add
add
and
mov
pop
mov
orl
mov
and
mov
sbb
push
or
ljmp
and
or
call
mul
mov
imul
mov
in
sahf
aad
lods
push
add
dec
repz
add
scas
ud1
incl
and
jbe
mov
add
add
and
lods
push
add
jmp
jge
and
mov
and
mov
dec
cmp
gs
test
add
test
and
hlt
imul
ret
dec
add
and
mov
push
sbb
cmp
inc
xchg
sub
andb
dec
xchg
lahf
cmpsb
sbb
call
mov
sbb
cltd
xchg
xor
push
mov
add
gs
pop
clc
ja
movb
stc
or
xor
or
cld
add
pop
incl
in
push
mov
jl
out
mov
sub
lds
shll
xor
add
sub
stos
jg
add
add
das
stc
dec
fstpt
and
pop
int
insb
jecxz
dec
pop
add
add
les
add
mov
test
and
adc
sahf
bound
in
xor
jmp
jns
push
push
inc
mov
pusha
mov
push
scas
xchg
scas
xchg
sub
push
push
mov
mov
cmpsl
add
call
add
int
jmp
add
add
jmp
pop
push
loop
lea
enter
add
pop
xor
or
adc
sbb
add
xor
cmp
popa
adc
ljmp
mov
add
in
add
xchg
add
mov
add
in
pop
or
and
inc
lods
loopne
incl
xchg
add
pushl
sbb
add
rolb
lea
mov
inc
mov
into
add
bound
mov
add
add
rcrb
and
or
mov
push
out
xchg
fildl
and
mov
push
lcall
mov
and
push
sti
incl
mov
roll
dec
rolb
mov
adc
ljmp
hlt
dec
incl
sti
jmp
sub
xlat
or
or
cld
push
aad
incl
inc
clc
mov
movsl
mov
decl
mov
inc
dec
push
sub
lcall
decl
fdivl
mov
jmp
das
push
test
add
insl
cmp
sahf
add
out
add
xor
lods
cmp
mov
adc
mov
mov
aas
jge
add
mov
jmp
scas
into
ds
push
adc
popf
and
cmp
loop
add
add
push
xchg
add
and
call
add
insl
jbe
xchg
add
and
imul
xchg
mov
int3
incl
incl
clc
jno
das
incl
add
clc
jp
insb
in
das
add
mov
mov
adc
divl
nop
xor
sldt
cmp
fwait
sub
sbb
rcrl
scas
mov
adc
pop
pop
mov
jmp
xchg
add
push
ljmp
scas
and
adc
sbb
rorb
lods
repz
cli
mov
decl
flds
add
add
fmul
cmc
popa
movlps
add
mov
int3
push
push
js
add
push
loop
adc
filds
and
or
incl
add
mov
incl
dec
inc
js
lahf
add
sbb
dec
push
scas
add
jp
test
cmpsb
fmuls
out
mov
daa
shll
mov
lcall
rcl
add
xchg
dec
mov
add
into
adc
xchg
ds
les
mov
jne
add
and
cmpsl
inc
xchg
repz
push
mov
push
add
pop
mov
loop
fcmovnu
loopne
cli
mov
or
out
add
add
add
mov
dec
cmp
incl
decl
and
bound
or
pop
int
lret
mov
in
mov
push
add
add
sub
xor
and
and
mov
and
popaw
jae
je
jp
push
jne
outsl
js
sbb
filds
rcll
je
jbe
add
sbb
pushf
add
add
insl
mov
insl
pop
in
add
into
xor
stc
and
add
dec
sub
in
mov
hlt
jmp
lcall
stos
cltd
cmp
stc
loop
scas
inc
add
xchg
inc
add
add
xor
loopne
ror
pop
mov
mov
adc
js
loope
add
and
add
add
cmc
int3
add
out
call
sub
add
lcall
jne
xor
or
adc
cli
mov
add
dec
repnz
add
fst
or
xor
incl
xlat
add
scas
clc
sbb
test
xchg
xchg
add
pop
test
add
mov
cli
add
decl
sarb
add
lret
jb
add
push
and
add
rorl
sahf
cmp
jmp
add
repnz
add
sub
add
loope
fnstenv
ljmp
sub
stos
andb
sbb
lock
call
pop
mov
add
fstl
lds
add
add
in
lock
inc
icebp
push
dec
and
mov
and
aam
jmp
cltd
fwait
mov
inc
stos
xchg
mov
and
ja
loop
pop
adc
ljmp
add
add
lds
dec
xor
dec
cmp
fiadds
add
nop
add
out
mov
leave
popl
dec
push
pusha
lods
add
adc
lods
and
mov
add
lea
decl
cmpsb
mov
std
leave
add
adc
test
ss
inc
push
sbb
push
add
or
add
sarb
and
lcall
fdivrl
add
add
mov
sar
xor
inc
xor
pop
and
imul
add
xchg
push
sub
adc
iret
adc
push
sbb
add
ss
sub
gs
sub
inc
scas
add
adc
add
incl
dec
les
popa
mov
cmp
leave
aam
sbb
and
jmp
add
jecxz
incb
sbb
ljmp
add
adc
add
add
sub
or
and
loope
add
add
arpl
loopne
mov
pop
in
adc
in
jne
mov
shrl
add
add
add
xchg
add
add
cmpsl
xor
mov
add
fiaddl
pushf
sub
xchg
and
cmpsb
and
push
rcr
and
pop
mov
push
incl
add
cld
pop
sarb
adc
loopne
shll
add
loopne
add
clc
adc
adc
and
pop
imul
jb
add
cs
add
rcrb
enter
cmp
xchg
add
cmpb
add
pop
xchg
lcall
les
jecxz
decl
ficomps
push
jl
call
adc
and
aam
add
jae
divl
xchg
jmp
add
cld
jmp
add
add
ss
jmp
ljmp
dec
push
pop
dec
add
cmp
add
pop
cmp
add
add
js
jmp
je
scas
adc
push
jl
mov
ret
test
adc
adc
mov
add
jb
repnz
or
add
cmp
stc
jg
add
push
pop
pop
add
adc
xor
adc
pushl
mov
sub
std
cmpsb
push
xchg
add
xor
rcr
add
push
incl
add
dec
xchg
mov
jp
incl
out
sarb
pusha
popf
mov
xchg
cmc
ljmp
fsubl
push
add
mov
push
push
jge
mov
lret
jl
jmp
and
and
ret
mov
mov
jnp
mov
rcrl
add
inc
cmp
adc
and
lcall
cmp
or
dec
jo
add
daa
addr16
js
mov
out
jmp
ljmp
add
or
sbb
fstps
mov
add
pop
cmp
out
addr16
shrl
add
stos
push
rcr
mov
pop
pop
sbb
mov
jnp
add
insb
setl
add
pop
mov
add
mov
pop
mov
clc
inc
mov
hlt
jecxz
mov
ljmp
add
and
mov
incl
scas
out
test
add
lcall
xor
out
xchg
out
add
mov
mov
mov
call
jmp
shll
push
filds
add
cmp
inc
cmp
push
mov
enter
add
add
pop
mov
add
mov
or
jmp
cmp
movsl
ljmp
pop
lret
pushl
mov
loop
add
jmp
push
sub
int3
cmp
lds
add
add
push
push
and
add
in
jae
incl
pushf
push
subb
decl
push
jo
add
in
and
jnp
std
pop
cs
cltd
loop
push
mov
cmp
and
push
jl,pt
mov
leave
inc
add
add
add
jle
lock
add
mov
roll
jmp
es
sub
mov
incl
test
dec
rcr
dec
add
jmp
addl
sbb
and
pushl
fdivl
and
das
stos
pop
or
pop
inc
movsl
add
out
addr16
xor
add
add
and
add
mov
loopne
movsl
jmp
jmp
add
jmp
xchg
adc
sub
and
fs
add
and
mov
jns
testb
sbb
push
xchg
aad
ljmp
jg
out
dec
sbb
pop
lret
rcl
xchg
mov
mov
push
cltd
inc
aas
jmp
jmp
dec
mov
js
add
popa
push
jmp
nop
cmp
orb
sub
bound
add
mov
add
mov
das
inc
jmp
daa
imul
add
mov
aas
sbb
incl
test
subl
and
es
clc
incl
jnp
push
and
lahf
pop
ds
adc
idivb
unpckhps
popa
inc
and
int3
xchg
incl
add
pop
incl
sub
ljmp
call
mov
mov
daa
movsl
and
mov
mov
or
clc
cmp
add
add
sahf
mov
push
add
aad
add
xchg
lret
add
incl
and
lods
testb
outsb
and
pushf
mov
add
xlat
xlat
loopne
add
add
xchg
sub
cmp
decl
inc
add
imul
js
in
mov
popf
adc
pushl
out
mov
test
ljmp
pop
cmc
fcmovbe
cmp
jae
add
sahf
fnstsw
add
iret
fstl
in
push
lcall
outsb
mov
add
loope
shrl
sar
add
inc
sbb
add
daa
xchg
cltd
adc
add
mov
adc
and
push
roll
jmp
xlat
lcall
rcl
hlt
mov
sub
divl
add
mov
bound
mov
mov
idivl
jl
add
and
add
add
pushf
test
and
incl
or
add
inc
enter
adc
cmpsb
incl
insb
push
cld
dec
xchg
cmpsb
mov
mov
mov
xchg
mov
pop
in
popf
scas
add
incl
add
sti
adc
addr16
add
xchg
jecxz
lea
cli
add
jns
add
pop
xchg
pop
cs
test
cld
add
mov
mov
pushl
shll
cltd
mov
and
add
or
adc
xchg
repz
loop
cmp
mov
mov
or
lock
add
pop
jmp
add
sub
inc
flds
lods
or
inc
add
add
jb
ret
sbb
and
mov
dec
daa
add
sbb
bound
mov
add
fistl
cwtl
add
or
adc
hlt
pop
xchg
cltd
sbb
push
in
cltd
push
add
lahf
lock
mov
add
add
xchg
mov
jo
add
and
dec
add
test
push
xor
push
mov
dec
popa
push
add
movb
and
jmp
mov
ss
mov
int3
or
js
test
mov
add
pop
fld
lahf
mov
lahf
add
add
addb
add
add
shl
and
mov
jge
adc
jg
jne
adc
pop
push
mov
andl
in
cld
inc
sbb
and
add
and
dec
inc
xor
add
sbb
lods
enter
adc
mov
add
dec
out
sub
jns
pop
adc
ret
sbb
lods
pusha
add
dec
aad
push
jnp
aad
ret
in
incb
mov
add
sub
call
push
add
cli
nop
std
pop
fxch
incl
mov
and
pop
push
and
pop
pop
sub
push
mov
insl
fcmovnb
mov
xor
sarb
and
cmp
xor
cmc
jns
rorl
out
decl
push
jecxz
add
push
movsl
sarb
stos
rorl
and
repnz
pop
addb
and
cmp
aas
das
mov
fimuls
aam
mov
and
sbb
and
inc
lods
test
fildll
and
mov
jae
jbe
adc
add
test
adcb
lea
in
add
shll
into
sub
fiaddl
lods
pop
mov
incl
les
sbb
incl
add
cs
cld
xor
mov
cmp
dec
iret
mov
shrl
add
xorl
or
imul
pop
mov
and
dec
and
arpl
add
test
jae
jmp
sar
lock
sub
fists
mov
mov
and
jns
into
out
decl
shl
push
add
add
adc
cmp
lcall
shl
add
fisubl
jae
sub
adc
idiv
push
and
mov
mov
adc
adc
lret
push
outsl
and
add
out
mov
adc
sub
icebp
adc
push
ss
jge
mov
add
mov
and
mov
add
lds
mov
fmul
add
jne
xchg
int3
add
incl
fiadds
std
out
mov
jl
sub
push
sbb
mov
jbe
sub
sti
out
jno
out
and
inc
add
sbb
push
inc
adc
arpl
out
add
fs
push
rcl
addb
add
ja
add
mov
mov
std
sar
add
add
addr16
incl
mov
jmp
add
pop
mov
adc
add
mov
jmp
push
add
cld
pop
enter
cmp
push
scas
push
add
push
jb
lea
add
sub
or
clc
incl
push
push
and
incl
inc
mov
pop
add
mov
jecxz
xchg
in
push
mov
dec
cmp
out
incl
aad
pop
mov
add
xchg
in
loopne
add
bound
imul
jp
int3
mov
imul
pop
cmp
cmpsb
outsb
add
add
add
add
ror
in
je
add
add
or
add
mov
and
jae
add
insl
ljmp
mov
rcrb
lock
cltd
lret
add
xchg
or
cltd
xor
in
incl
repnz
jmp
ja
adc
insl
int3
add
and
popf
nopl
mov
and
fbstp
scas
aam
add
fs
pop
test
push
push
push
lret
add
xchg
out
xchg
inc
sar
mov
push
incl
add
add
loop
dec
xchg
jmp
add
add
out
mov
mov
rorl
push
inc
xor
lods
dec
pop
repz
jp
mov
mov
jmp
add
movsb
subl
inc
add
adc
xchg
decb
add
in
add
cltd
jmp
mov
xlat
lahf
adc
out
sti
xor
add
lret
popf
ljmp
inc
sub
mov
jg
pop
fsubrl
incl
ret
shl
push
mov
shr
popl
add
cltd
pushf
and
xlat
mov
int3
adc
test
int3
leave
push
add
in
mov
jno
add
fwait
and
dec
in
adc
pop
pop
mov
sbb
decl
cmp
and
add
mov
sahf
loopne
shlb
incl
add
sbb
idivb
jnp
jmp
cli
mov
enter
push
and
add
ljmp
inc
jnp
add
add
pusha
ss
imul
in
sub
and
std
lret
dec
nop
cmpsl
pop
jne
sbb
shll
sub
mov
jne
test
push
xchg
adc
ret
jecxz
out
jae
pop
das
daa
add
mov
sbb
inc
lock
inc
stc
add
mov
mov
add
jo
out
std
add
xor
add
or
pop
dec
add
fwait
sti
cmp
push
data16
repnz
mov
popa
and
add
adc
and
add
mov
mov
repz
imul
add
cmp
cwtl
enter
call
add
add
sbb
or
fstps
adc
out
testl
incl
test
cltd
inc
std
ret
stos
pop
ficompl
cmp
adc
jae
pusha
sbb
mov
aad
add
add
test
and
out
mov
int
mov
mov
int
add
lret
add
lcall
leave
out
add
add
pop
push
rcrb
or
add
jb
std
incl
rorl
fbld
dec
rol
jmp
sbb
fadds
add
jmp
mov
je
jmp
or
dec
add
lret
incl
sub
scas
mov
add
cwtd
imul
outsb
test
incl
dec
mov
orb
leave
shll
mov
mov
out
push
loopne
cmp
sbb
lds
cs
cwtl
inc
insl
add
add
and
lret
mov
lret
sar
xlat
mov
sub
std
movsl
shl
hlt
mov
sbb
and
sub
int
mov
mov
adc
movsb
stc
add
cltd
sbb
jno
xlat
adc
or
xor
std
sbb
lds
dec
fwait
adc
incl
incl
fwait
and
add
cmpsb
mov
xchg
and
push
mov
add
mov
or
test
inc
popa
insb
add
xbegin
and
add
sub
inc
mov
add
das
fldl
add
nop
insl
andl
movsl
ret
aaa
push
add
lret
aam
add
inc
cmp
xor
mov
add
imul
test
add
jo
add
mov
pop
xchg
insb
sub
add
add
stos
imul
stos
pop
add
add
addr16
cli
mov
int3
fisttps
add
test
push
incl
xchg
cmp
test
adc
xchg
or
push
add
in
add
mov
xchg
and
lock
fstpl
dec
mov
std
mov
add
call
cmpsb
cmp
je
adc
pushl
xchg
loop
add
add
mov
mov
inc
and
add
shlb
mov
in
jbe
lea
bound
stc
add
sbb
add
sti
jbe
add
daa
sbb
push
mov
cld
sbb
nop
xchg
popf
int3
jl
pop
xlat
cld
dec
and
sub
add
add
push
jns
lahf
iret
mov
adc
add
xor
mov
xchg
pop
add
and
ds
push
mov
cmp
outsl
jns
add
add
aas
inc
stc
shll
add
xor
in
dec
ja
incl
and
fadd
popa
lods
cmp
in
mov
lahf
dec
sbb
add
pushf
cltd
pop
adc
ss
filds
push
lds
pmullw
dec
aas
movb
and
das
xchg
arpl
call
rcr
testl
loopne
mov
and
mov
adc
push
jae
pop
xchg
decl
add
out
shl
ja
xor
movsb
ficoms
add
shll
add
sti
pop
add
lret
add
cmpl
icebp
cmpsl
bound
sahf
sbb
mov
add
adc
add
dec
jmp
and
add
loope
jge
imul
add
xchg
or
sub
cmp
sbb
add
incl
mov
fildll
incl
jg
xchg
test
add
push
inc
add
pushf
mov
cli
push
cmpsl
jmp
pushf
lahf
cmp
push
adc
inc
bound
add
add
in
icebp
outsb
popa
xchg
incl
add
out
arpl
pop
add
es
mov
repnz
daa
shrl
adc
pop
push
xchg
jp
add
movsl
insl
add
incl
add
xchg
mov
stos
add
ljmp
or
dec
and
daa
or
and
or
cld
mov
mov
in
popf
ja
add
add
call
pushl
cmp
loop
inc
insl
adcl
pushl
cmp
inc
js
cmp
add
mov
iret
adc
insl
mov
call
lods
jno
sub
dec
xlat
add
sub
fistpll
sub
fstp
mov
add
lret
add
pushf
push
and
bndstx
or
mov
dec
pop
pop
cmc
pusha
push
add
mov
sbb
add
cs
jns
sbb
sub
and
movsl
xor
add
and
add
and
scas
push
js
int
add
add
xchg
test
add
lret
cwtl
mov
xor
pop
mov
fildll
jmp
push
filds
mov
add
xor
incl
fistl
js
std
add
and
add
jo
cmpsl
mov
add
daa
lods
add
or
cltd
movntps
and
add
sbb
mov
ret
xor
outsl
aad
sub
add
clc
imul
mov
mov
or
dec
pop
xchg
and
pop
dec
mov
arpl
dec
push
xchg
mov
add
add
scas
ss
or
and
pop
jl
pusha
sub
sbb
xor
mov
cmp
data16
call
call
call
add
jne
pop
xchg
fildl
call
add
popf
mov
cmp
insl
les
and
and
add
add
leave
js
mov
insb
hlt
in
push
add
incl
push
daa
dec
add
fidivrl
pop
cs
mov
ljmp
add
or
cmp
incl
jmp
xchg
sub
cs
out
pop
sbb
add
pop
loopne
add
ja
add
and
lds
sub
call
in
nop
push
pop
add
mov
mov
decl
fucomp
add
popa
test
incl
sub
cmp
lret
cli
in
shrb
shlb
lea
ljmp
inc
sbb
jmp
jge
decl
in
loope
movsl
add
push
ja
or
mov
inc
int3
mov
jl
cmpl
insl
push
sbb
adc
dec
xchg
mov
add
add
push
adc
add
popf
ds
push
xchg
ret
jmp
add
mov
lock
lock
das
notb
je
out
add
cs
test
pop
pusha
fld
cs
mov
inc
cmp
add
xor
jnp
js
incl
and
incl
add
sbb
add
mov
cltd
int
decl
shr
mov
cmp
cltd
adc
add
inc
loope
incl
add
out
cs
mov
sbb
movsb
add
jmp
lea
push
add
add
mov
inc
outsb
and
add
incl
les
and
fists
xlat
add
adc
movsb
push
sahf
jbe
data16
xlat
jle
add
sarb
and
lcall
add
nop
jmp
push
popa
stos
add
sbb
or
dec
repz
dec
and
imul
jmp
and
mov
add
cmp
jo
cmp
in
add
pop
imul
pop
in
aas
xchg
jbe
lds
js
add
mov
add
and
ds
add
arpl
mov
cmpsb
add
mov
mov
rorl
sbb
clc
sub
imul
sbb
add
jo
insb
out
and
add
shrb
loopne
je
mov
add
aad
rorb
sahf
ss
add
ljmp
xchg
jo
mov
aad
xchg
adc
je
and
enter
add
fisubl
mov
add
fbld
cmp
mov
add
or
jl
jmp
xchg
push
cltd
out
add
xchg
lahf
cmpsb
mov
add
add
adc
and
sbb
and
rorl
and
les
out
loopne
add
fbld
cmc
xor
mov
call
add
hlt
or
mov
mov
or
and
rorb
add
addb
xor
incb
je
jmp
call
add
jmp
add
push
add
jmp
pushl
iret
inc
pop
pop
icebp
mov
mov
xor
jbe
lock
mov
pop
ljmp
add
mov
add
push
bound
add
mov
inc
adc
add
stos
out
and
insl
test
or
add
cli
inc
adc
add
and
je
ljmp
incl
loop
xchg
adc
dec
movsl
cld
iret
lds
sbb
mov
dec
mov
add
push
loope
aas
xchg
lahf
fiaddl
mov
adc
mov
add
repz
sub
inc
xchg
xchg
filds
xchg
nop
fbld
idiv
mov
pop
or
mov
mov
or
decl
outsb
xchg
sub
inc
movsb
ret
push
dec
bound
add
stos
add
sahf
and
negb
out
loope
movsl
cmpsb
add
xchg
aaa
pusha
outsl
or
add
ficomps
sbb
incl
mov
add
cld
adc
orl
shrb
mov
incl
add
cld
cld
lcall
add
and
cmpsb
jmp
mov
add
dec
ja
and
arpl
and
mov
lret
mov
add
movsb
sub
mov
dec
add
cwtl
pop
xlat
add
test
add
fmuls
arpl
nop
xchg
fisttpll
sti
mov
and
cmp
add
add
insb
or
test
sbb
test
push
sahf
mov
aam
inc
add
add
fimull
ret
add
push
push
mov
shrb
fiaddl
cli
mov
xor
add
sahf
fstps
xchg
jecxz
js
add
dec
push
add
add
movsb
and
add
sub
rclb
add
mov
cmp
adc
cmp
add
lahf
add
adc
ret
mov
push
xchg
shrb
and
mov
mov
or
add
sub
mov
ljmp
int
insb
add
test
stc
sbb
xor
out
sub
fimull
inc
mov
cmpsl
add
incl
add
je
dec
incl
add
or
mov
adc
xor
add
sbb
fwait
lcall
jp
or
pop
inc
iret
ljmp
adc
mov
mov
add
add
jns
jg
int3
mov
and
pushl
jle
push
and
add
sub
addr16
add
sbb
cmp
test
add
in
ljmp
mov
dec
out
xchg
add
push
mov
bound
stc
jg
and
jl
incl
mov
xchg
pop
out
movsb
lcall
sbb
inc
mov
add
pop
loope
add
jnp
add
cli
jmp
add
sub
in
jo
pop
push
shll
add
mov
out
lahf
mov
fiadds
enter
add
add
iret
inc
cmc
stos
incl
push
sbb
fcoml
stc
fcmovu
sub
add
add
mov
popf
js
adc
add
mov
adc
incl
cmp
adc
push
je
enter
lea
add
adc
mov
or
dec
jnp
incl
add
mov
add
incl
sahf
lea
pop
leave
sbb
pop
pop
xchg
and
movsb
inc
add
decl
loope
les
or
dec
push
add
push
loop
inc
xor
in
xchg
pushl
and
aas
add
jp
xchg
xchg
jnp
popf
ds
cwtl
pushl
sub
je
cmp
mov
inc
mov
and
mov
add
sub
imul
add
mov
das
aas
xchg
movsl
add
dec
adc
push
cltd
add
or
inc
sub
dec
mov
lcall
add
add
fists
push
add
mov
into
add
pop
push
hlt
callw
or
mov
mov
mov
mov
mov
adc
mov
jle
jmp
fxam
add
or
push
xor
add
xchg
loop
ret
sahf
ds
pop
test
popa
add
out
sbb
decl
fnsave
sarl
repnz
call
fldcw
dec
add
pop
add
mov
xchg
inc
push
ljmp
adc
mov
cltd
popa
mov
mov
cli
xor
je
and
and
inc
xchg
or
je
add
daa
or
add
mov
xchg
lods
jg
add
fisubs
mov
and
pop
insl
lahf
rcll
mov
sbb
fcomip
jg
dec
add
add
lds
cwtl
incl
xchg
fidivrl
cltd
pop
daa
mov
and
push
sub
sub
xchg
inc
add
pop
incl
lods
lret
mov
add
cmp
mov
add
and
add
sbb
sbbb
add
movsl
add
or
inc
sbb
and
ja
inc
xchg
lea
add
mov
add
add
or
add
add
jb
imull
loop
mov
adcb
and
cmp
adc
cmpsl
icebp
inc
adc
dec
add
je
shl
pop
add
in
ret
xchg
imul
push
and
iret
decl
add
inc
xlat
leave
scas
add
push
or
ss
in
decl
enter
add
test
add
jp
pop
xchg
adc
enter
add
cmpl
pop
cmpsb
push
sub
inc
sbb
incl
add
insb
dec
xor
push
mov
mov
add
lcall
mov
jecxz
push
dec
mov
adc
and
data16
add
add
mov
add
je
sub
jp
mov
cmp
inc
hlt
incl
dec
ret
sarl
aam
mov
out
mov
sub
inc
je
pop
mov
add
and
ffreep
stc
push
add
mov
adc
call
add
jae
popa
mov
adc
in
iret
and
dec
inc
mov
iret
add
int
into
jo
sub
mov
fldenv
incl
mov
enter
add
sub
xor
add
int3
mov
add
add
add
add
cmp
add
sbb
roll
and
mov
lret
arpl
adc
out
ja
in
lock
scas
and
cmpsb
leave
insl
jo
add
add
push
fiadds
sbb
incl
xchg
pop
inc
add
adc
jecxz
add
pushl
lcall
inc
repz
push
cmp
sbb
push
loope
cwtl
inc
inc
in
jge
dec
adc
add
sub
and
mov
sbb
jecxz
add
sar
cs
push
jge
push
and
mov
add
jle
pushf
and
insl
adc
add
cmpl
loope
add
add
movsl
fsubrs
mov
jge
dec
add
in
mov
incl
lock
dec
mov
imulb
jne
decl
xchg
cmp
sbb
insb
add
add
mov
imul
mov
xor
test
call
mov
loopne
jo
outsl
les
call
call
mov
add
pop
cmp
je
add
mov
subl
not
dec
add
or
faddl
call
stos
push
and
in
mov
decl
and
sarb
inc
and
add
add
addl
outsb
ja
stos
mov
lcall
bound
insb
jmp
dec
mov
test
add
call
pusha
and
je
add
mov
add
cmpsb
repz
and
mov
mov
add
mov
je
cmp
sub
xlat
sub
add
mov
inc
inc
add
mov
lret
cld
xchg
and
add
add
push
adc
dec
add
sbb
das
sub
mov
add
or
add
fwait
test
jp
popa
adc
bound
add
add
pop
jp
test
xchg
jle
repz
pushl
add
incl
push
ret
sub
sbb
cwtl
or
cli
mov
cmpsl
jge
pop
decl
add
and
add
cs
leave
rolb
and
sbb
add
jg
add
adc
add
add
add
testb
push
sbb
int
add
or
add
fisttpl
cmp
fbld
call
add
inc
sbb
mov
add
add
sub
jmp
enter
jmp
add
stos
jmp
incl
add
add
push
adc
sbb
mov
cli
fld
ja
add
jge
cmp
add
add
push
adc
pop
xchg
call
int3
cltd
arpl
inc
and
stc
lcall
add
pop
mov
cltd
add
dec
insb
ss
adc
dec
stos
mov
out
mov
lods
pop
mov
add
add
jae
xor
and
add
pop
and
sbb
add
enter
std
ret
adc
mov
add
xchg
insl
jmp
jnp
test
jo
mov
xor
and
movsb
fwait
or
mov
add
int
test
call
shlb
cmp
ja
mov
mov
inc
push
add
jg
add
add
cld
adc
arpl
sti
push
incl
cs
pop
add
and
push
sub
cs
in
pop
dec
add
add
leave
clc
jg
or
out
incb
jl
jbe
add
add
pop
test
add
popf
cli
mov
and
push
in
bound
add
push
dec
xchg
mov
stos
pop
add
and
cs
insl
lahf
bound
incl
out
adc
jmp
mov
mov
mov
and
pop
cld
add
mov
mov
inc
bound
jnp
in
add
leave
jb
adc
adc
call
cmp
add
mov
add
pop
push
inc
add
inc
dec
out
add
js
mov
mov
mov
and
cmp
sub
jg
xor
daa
in
add
and
ds
fimull
mov
scas
cmpsl
xor
add
xchg
in
mov
jmp
add
xchg
adc
divl
mov
xor
incl
mov
inc
add
jg
out
mov
and
dec
call
cld
lcall
int3
ror
cld
out
ljmp
add
sub
fldt
jnp
mov
in
cltd
jnp
orl
cmp
push
and
dec
dec
add
sti
and
add
mov
dec
incl
add
inc
lock
mov
lods
sub
sahf
shl
sub
jno
bound
add
xchg
xlat
jmp
loop
outsl
fcoml
and
add
aam
jb
add
add
cltd
add
jp
lock
add
add
sub
and
add
incl
in
and
pop
mov
into
and
push
outsb
mov
sahf
adc
cmpsl
cs
add
filds
adcl
adc
leave
incb
add
jmp
idivb
mov
ficoml
addb
movsl
push
mov
add
test
sbb
jge
cltd
jno
mov
and
bswap
js
cmp
sub
and
ror
push
push
aad
and
pop
jbe
and
and
add
pushf
or
mulb
jg
adc
push
add
jge
and
add
and
sbb
xchg
or
daa
dec
ljmp
mov
les
ljmp
aam
enter
add
test
add
add
fadds
incl
pop
lods
lcall
lea
sub
lcall
aaa
and
inc
push
outsb
outsb
and
mov
lret
cmp
jmp
flds
int3
popl
add
sbb
and
push
mov
add
repz
ficoml
mov
rcr
push
dec
mov
sub
add
xchg
add
xchg
incb
nop
add
cmp
add
add
cmp
add
add
add
jle
add
fsubrl
fcmove
xchg
add
or
sub
add
lods
inc
ljmp
in
and
mov
pop
sub
or
push
mov
add
push
mov
dec
jne
and
sti
add
inc
lock
add
pusha
xchg
cli
jno
add
pushl
xchg
mov
mov
xchg
add
sub
shll
arpl
mov
cmp
jnp
push
and
sbbl
xchg
sub
stos
ja
cs
rcrl
or
or
ret
xchg
gs
add
lea
sarb
add
and
fnstenv
dec
cwtl
dec
push
xchg
incl
and
add
xor
add
pushf
add
jmp
data16
std
jae
sub
mov
add
imul
add
mov
pop
sub
mov
ret
add
mov
inc
pop
adc
add
add
mov
or
sub
jno
lret
add
mov
push
das
push
xor
and
mov
shll
sahf
jmp
incl
xor
and
mov
add
mov
idiv
inc
cmp
add
lods
add
xor
mov
inc
add
sbb
mov
jg
mov
movsl
push
testl
adc
mov
pop
jae
incl
in
jno
mov
sub
imul
pop
nop
mov
add
incl
add
je
adc
add
in
aaa
arpl
jge
das
add
add
adc
imul
repnz
cs
ret
inc
sub
and
jge
pop
add
ss
aam
incl
add
inc
cmpsl
leave
push
add
add
mov
add
add
mov
cwtl
in
int3
or
jle
inc
dec
cmp
sub
mov
add
incl
mov
inc
or
out
sub
mov
add
in
jno
add
push
and
stos
mov
sbb
add
add
add
mov
cmpsl
xor
add
and
and
inc
test
and
sub
push
mov
add
out
data16
mulb
xor
and
adc
jmp
ljmp
jg
leave
sub
adc
add
sbb
fsubs
sub
int
lock
sub
mov
add
add
scas
in
inc
and
enter
roll
cmc
pop
jnp
incl
fldl
add
lods
std
mov
add
push
out
cmp
es
add
in
add
add
pop
adcl
sub
jbe
push
mov
push
add
movsl
jp
add
ss
inc
cmp
incl
and
cltd
lock
push
add
call
jle
mov
mov
add
or
int
add
mov
cmp
leave
addr16
cmpsl
jmp
jle
xchg
test
add
add
inc
aam
rcll
and
dec
xchg
mov
adc
add
add
aaa
loope
loop
or
jle
add
mov
ret
push
out
incl
dec
out
mov
add
xchg
data16
jmp
xor
pusha
xchg
jae
stos
and
std
test
sti
iret
incl
add
pop
pop
add
add
add
cmp
cmp
and
add
mov
das
in
mov
mov
ljmp
incl
add
and
je
incl
add
fnstenv
mov
and
add
sub
jbe
int3
jl
push
adc
jmp
xor
pop
jbe
incl
cli
aad
pushf
mov
and
and
fadds
arpl
cmpsl
adc
dec
mov
add
lcall
mov
mov
out
cltd
jl
out
jmp
push
add
pop
adc
push
sbb
repz
shll
leave
aaa
add
das
pop
push
add
pop
add
aam
mov
pop
sete
clc
mov
pop
orb
adc
jbe
sbb
jmp
or
mov
sahf
inc
lock
mov
cli
push
add
cmpsl
add
jl
push
cli
add
xor
fs
lret
fcoml
add
add
mov
and
out
jo
dec
lods
or
mov
and
inc
push
or
nop
lea
out
xor
jle
mov
fisubs
xor
add
in
out
out
and
add
add
add
sbb
mov
in
add
cli
fdivrs
add
in
mov
add
call
fstpt
cmp
cmp
adc
cli
in
dec
sbb
into
js
inc
sahf
inc
pusha
cmp
icebp
add
fs
dec
jecxz
and
and
cmp
add
add
add
add
cltd
mov
sbb
and
scas
lret
sti
add
mov
sar
cs
mov
test
mov
add
out
shrl
add
pop
pop
push
in
sahf
add
leave
push
inc
repnz
mov
mov
add
into
outsl
js
jae
add
xor
pop
popf
movsl
push
out
repnz
outsb
mov
les
mov
in
out
add
nop
pushf
sub
add
fimull
aaa
push
pushf
leave
fdivr
add
fwait
mov
xor
xchg
and
mov
enter
add
and
gs
mov
inc
in
inc
push
mov
xchg
add
add
adc
shl
fisubrl
add
mov
cmc
add
ret
pop
cmp
clc
aaa
add
push
inc
add
shr
int3
ret
and
jb
fcoml
outsb
mov
add
ljmp
decl
jno
add
mov
pusha
xchg
or
add
pop
outsl
mov
and
add
aam
and
out
add
jge
add
add
dec
insl
add
imul
pop
rcrb
movsl
push
xor
add
push
add
sti
sub
adc
add
push
jne
orb
add
jb
or
cmp
dec
fisttps
add
outsb
or
lods
inc
add
into
mov
add
mov
mov
in
incb
ljmp
xorl
add
js
jae
add
mov
sbb
jb
inc
lahf
xor
mov
in
cli
ret
add
add
or
dec
sbb
out
pushf
sub
out
jl
add
add
add
jmp
out
and
pop
xor
add
inc
adc
pop
add
push
fdivs
mov
xorl
add
and
xorl
cs
add
sub
pop
sub
ja
fisubs
and
inc
or
mov
add
add
mov
adc
add
incl
cmpl
jb
dec
add
dec
pop
and
add
sbb
daa
ret
add
cmpsl
cmc
in
jne
out
add
adc
mov
jmp
lcall
or
loop
add
and
sahf
push
inc
nop
jne
adc
lods
outsl
and
push
add
incl
in
fnstcw
mov
movsl
cld
adc
call
xchg
sbb
out
outsl
mov
pop
push
push
xor
add
sahf
add
add
out
femms
enter
add
pop
dec
test
add
imull
add
push
jnp
push
daa
adc
and
and
and
ss
and
add
xchg
cmp
add
std
dec
mov
adc
sub
add
mov
jle
decl
fmulp
loope
cltd
add
bound
jmp
js
mov
add
push
arpl
lret
add
push
xor
dec
xchg
cmp
mov
and
pop
sub
xor
mov
je
insl
cld
mov
add
add
ljmp
add
out
adc
and
repnz
addl
pop
xor
jmp
mov
adc
add
add
gs
sbb
and
adc
into
decl
loopne
sti
push
and
and
dec
or
lcall
and
and
in
stos
fsubp
add
mov
mov
dec
cmp
add
pusha
out
jmp
cmpsl
xchg
lahf
jmp
insb
jnp
add
addr16
and
add
sahf
mov
mov
scas
jae
add
jp
sub
add
add
rclb
cmp
jmp
xchg
inc
mov
int
and
mov
sub
mov
out
add
mov
lret
xor
incl
sub
popf
xchg
mov
lcall
std
ss
inc
cmp
push
add
push
adc
addb
add
add
and
mov
xchg
imul
and
adcl
js
add
and
add
add
out
mov
mov
mov
std
or
mov
sub
movsl
incl
mov
incl
or
xchg
cmp
add
and
mov
jne
sti
out
add
adc
add
sahf
in
pop
js
and
test
ja
clc
pop
add
inc
mov
movsb
aaa
add
add
sbb
fdivl
dec
cmpsl
add
and
add
movsb
add
jbe
add
xor
je
sub
and
add
mov
lods
mov
incl
mov
add
lods
add
popf
cltd
loopne
mov
ja
or
bound
rclb
inc
sub
add
js
das
mov
decl
lret
rcrb
add
mov
clc
xor
add
mov
mov
mov
test
add
inc
jns
add
add
push
std
inc
push
pop
cltd
jmp
and
mov
jmp
pushl
mov
jb
sub
out
adc
sub
inc
dec
add
cmp
sbb
or
jmp
cs
pushl
ljmp
out
incb
add
jmp
xorl
add
incl
jne
jmp
decl
mov
or
xchg
call
stos
in
nop
and
repz
out
out
push
es
inc
mov
out
add
not
out
add
mov
add
mov
lcall
bound
add
mov
lret
mov
adc
cmpsl
lea
inc
lret
adcl
ljmp
jbe
cmp
mov
test
dec
xchg
and
aad
push
stos
loope
int3
incl
cltd
mov
add
sub
pusha
fimuls
shrl
incl
lea
idivl
icebp
push
mov
pop
add
push
insl
test
xchg
scas
add
add
mov
incl
and
add
pusha
mov
add
add
mov
and
popa
cmpsl
mov
jne
sub
xchg
rorl
xor
js
add
add
mov
out
add
cmp
imul
add
ret
in
add
inc
inc
and
leave
add
cs
mov
sub
pop
fsubr
outsb
add
add
mov
fstpl
add
and
ret
test
mov
imul
cwtl
mov
hlt
sbb
push
sub
decl
mov
adc
add
in
xchg
add
loope
pushf
ss
or
movsl
stos
add
sbb
mov
mov
jae
or
add
mov
inc
out
sub
jmp
dec
and
mull
add
jns
mov
cld
nop
sahf
les
adc
ret
test
add
ss
rorl
add
mov
sbb
andl
xor
add
mov
sahf
js
push
in
push
negl
and
std
stos
subl
adc
imul
sbb
add
jo
xchg
push
les
add
add
clc
cmp
pop
sbb
test
mov
outsb
add
pushl
mov
add
add
inc
mov
add
cmp
or
incl
in
and
aas
push
xor
pop
sub
incl
sti
push
movsb
mov
mov
rolb
ljmp
cmp
cmc
push
aaa
mov
and
divl
add
mov
push
pop
insl
add
mov
clc
and
les
incl
add
dec
fwait
stos
fidivrs
adc
ss
addr16
pop
adc
int
js
add
push
sbb
cli
cmp
dec
sub
add
aam
sahf
inc
sti
add
mov
mov
mov
mov
push
fs
add
insb
sub
cmp
fiadds
movsb
xchg
bound
repz
mov
and
call
xchg
fadds
xchg
add
sub
cli
dec
mov
add
sub
dec
inc
add
mov
adc
pop
and
cmc
and
cmpsb
sbb
add
in
push
xorb
add
call
cmp
cmp
xchg
pop
add
out
push
add
mov
ds
jge
ljmp
nop
outsl
mov
loopne
push
mov
add
add
incl
sti
sub
mov
add
add
and
add
mov
lcall
shrb
adc
jp
jmp
add
add
add
std
add
add
jge
fisubrl
and
cmc
xor
add
or
jg
mov
mov
mov
sbb
mov
mov
mov
push
add
and
mov
sub
hlt
incl
mov
cmpsb
shr
lret
pusha
incl
test
push
mov
testb
cld
pop
mov
mov
or
push
mov
mov
sbb
gs
mov
add
mov
sarb
pop
dec
repnz
out
outsb
pop
incb
add
dec
push
daa
push
add
add
adc
ds
mov
lcall
pop
out
jb
add
das
sub
push
fistpl
sub
xchg
mov
out
sub
add
dec
mov
mov
jae
add
add
in
and
inc
mov
outsb
add
sbb
add
sbb
lret
test
in
into
add
add
dec
stc
add
jp
mov
int3
push
push
add
inc
xor
incl
dec
in
mov
fdivs
popl
add
or
add
add
push
adcl
mov
jmp
cmp
je
ljmp
cmp
ja
and
xor
add
lahf
scas
push
mov
aam
and
sub
pop
andl
out
inc
outsl
movsl
out
mov
inc
gs
and
add
jge
fdivrs
add
pushl
mov
jp
add
inc
ret
add
jl
mov
adc
jmp
add
add
into
cmc
mov
ljmp
cmpsb
xchg
mov
clc
cmp
add
outsb
adc
add
and
or
mov
rcll
xchg
insb
and
dec
add
mov
mov
loope
add
or
add
add
xchg
sbb
daa
adc
xor
cmc
add
scas
push
xchg
add
jnp
push
add
sub
add
add
ds
pop
mov
jno
ljmp
cmpsl
jecxz
mov
adc
add
sub
ljmp
push
jge
mov
add
insl
and
inc
fwait
mov
and
add
pop
lret
add
add
or
jge
loop
jg
cmp
add
add
add
incl
dec
call
cwtl
ss
adc
add
call
mov
data16
stos
lods
mov
loope
fisubl
xchg
dec
mov
mov
sbb
mov
jl
in
imul
push
div
and
jmp
inc
mov
mov
push
xor
push
insl
mov
add
int
lock
adc
add
dec
sbb
add
mov
and
roll
in
sbb
mov
jbe
repnz
jmp
mov
add
and
popf
mov
xor
mov
add
add
filds
incl
jnp
add
add
jg
call
add
pushl
incl
jp
jmp
jmp
call
add
add
loop
mov
cmp
arpl
lods
push
incl
and
and
mov
mov
test
add
adc
inc
dec
xlat
aas
mov
add
lcall
or
mov
add
add
loope
sbb
add
add
test
inc
mov
clc
adc
dec
int
jp
out
addr16
add
jb
fdivr
mov
decl
jmp
incl
xor
mov
add
sahf
jmp
outsl
dec
or
inc
xor
mov
xchg
push
lods
add
add
jl
add
add
incl
pop
push
test
and
add
pusha
or
add
in
adc
mov
push
fisttpl
or
add
add
div
mov
mov
mov
fistps
jae
and
outsl
incl
mov
sbb
add
mov
scas
mov
sahf
mov
fisttpll
mov
add
pop
pop
sti
bound
add
adc
inc
and
and
mov
add
in
ja
mov
insb
lods
or
loopne
mov
add
enter
decl
mov
add
adc
mov
adc
or
mov
sarb
add
cmp
add
add
decl
aad
add
sub
and
add
cmp
fdivrs
scas
lcall
add
popf
daa
cmpsb
ret
sahf
incl
add
add
int3
insl
jo
lods
incl
loopne
mov
add
inc
mov
pop
adc
pop
scas
testb
pushl
int3
jo
mov
inc
in
push
imul
rolb
dec
pop
jle
add
add
and
cld
dec
cmc
mov
fsubr
xchg
add
sub
movsb
jmp
add
xchg
cwtl
mov
incl
and
sub
pop
movsl
mov
jo
add
dec
pop
adc
arpl
rcl
mov
icebp
add
add
ret
out
sbb
add
add
das
push
jno
and
add
jmp
jo
add
push
cli
sub
add
add
lea
and
lea
das
fadds
mov
outsl
loopne
fildll
mov
sub
mov
push
mov
or
dec
or
lret
add
jp
and
ljmp
add
setl
add
jb
sbb
cmp
push
mov
cmp
ljmp
inc
cltd
mov
mov
addr16
adc
add
add
add
add
stc
dec
aas
ja
and
cmp
sbb
inc
ret
jp
mov
mov
cmp
xlat
add
incl
in
sub
mov
add
test
pop
jl
dec
xor
add
add
dec
pop
test
bound
shrb
push
sub
or
mov
incl
adc
inc
subb
add
add
xor
loope
sti
mov
lcall
xor
lds
xor
xlat
mov
dec
mov
add
jbe
std
add
jp
call
sbb
mov
cmpsl
dec
leave
and
std
inc
add
inc
add
nop
mov
add
decl
ljmp
testb
dec
inc
pmaxub
sub
xchg
pop
add
add
fbld
jg
pop
mov
jmp
adc
sbb
jno
mov
cmp
mulb
popf
sub
mov
adc
std
add
add
loope
movsb
add
popa
mov
push
imul
add
pop
mov
popa
add
sub
leave
jmp
int
inc
mov
or
add
ss
dec
and
imul
lds
add
mov
adc
add
mov
fiaddl
add
cmp
mov
jge
or
pop
enter
cmp
incl
xchg
repnz
sub
push
sub
add
shrb
addr16
and
cld
mov
decl
out
xchg
movsl
incl
or
add
repnz
add
pop
arpl
xchg
in
push
sbb
jl
jecxz
adc
add
push
push
in
add
inc
mov
pop
ja
add
pop
lahf
inc
lods
cmp
adc
mov
mov
add
or
incl
dec
sub
mov
mov
and
xor
sub
and
lahf
sti
mov
jae
add
sub
add
mov
pop
push
add
add
imul
movsl
out
add
insl
mov
orl
pop
dec
add
and
pusha
in
fildl
mov
add
int3
xchg
mov
add
adc
add
fs
and
sbb
and
inc
shrb
pop
adc
xchg
add
mov
xor
addb
mov
and
in
sti
mov
inc
xchg
incl
xchg
pop
pavgw
mov
push
add
mov
pushf
xchg
inc
add
and
push
mov
mov
imul
xchg
into
dec
sub
dec
dec
push
adc
inc
addr16
iret
and
arpl
and
inc
cmpsl
mov
and
fstl
pop
push
pop
add
and
pop
sarb
scas
call
fstpl
fistpll
std
out
fidivs
divb
mov
jmp
jo
pop
ret
add
xor
shrb
scas
mov
mov
or
add
push
bound
xchg
or
mov
add
cld
add
in
addr16
and
bnd
add
mov
mov
mov
insb
popa
mov
cs
push
lods
insl
add
adc
mov
sub
pusha
sub
add
call
xor
xchg
add
adc
mov
and
sbbb
add
add
out
or
add
stc
mov
jl
enter
hlt
mov
incl
and
incl
add
mov
mov
sahf
idiv
and
lods
sbb
sbb
cld
add
add
dec
andb
iret
add
pop
mov
insl
jmp
dec
daa
push
mov
and
cmp
stos
movsl
pushl
add
mov
adc
into
xchg
mov
mov
icebp
add
xchg
sub
sbb
adc
rorb
mov
mov
jmp
mov
push
cmp
cmpl
sub
mov
jmp
roll
add
cmpsl
in
lret
inc
pop
add
add
mov
sbb
and
jge
dec
adc
sub
xor
fsubrl
lods
add
rcll
aaa
add
and
lods
sbb
das
jb
mov
add
add
add
std
add
fsubr
in
jmp
lcall
xor
sldt
shlb
mov
out
ljmp
add
insl
mov
and
sbb
cld
add
add
in
add
cmp
sti
sub
add
add
mov
add
add
ret
incl
add
cs
pop
inc
imul
add
popf
call
mov
add
and
and
lret
add
pop
aad
inc
dec
enter
ljmp
add
add
and
stos
add
repz
adc
and
add
incl
fldcw
adc
and
ds
bound
out
mov
jmp
or
add
fs
and
add
add
add
xchg
cmpsl
shrl
popa
add
and
adc
in
cmp
mov
adc
inc
sbb
and
bound
adc
jp
jae
insb
mov
sub
and
out
aaa
pop
add
add
pop
pop
dec
sub
pop
mov
jne
hlt
mov
test
std
push
ja
dec
ja
mov
mov
and
xlat
and
and
push
gs
add
cs
mov
add
in
jmp
and
mov
scas
aaa
add
cmp
mov
int3
aam
add
mov
outsb
in
jle
add
popf
shrl
incl
mov
jg
add
sbb
jns
jmp
jecxz
pop
enter
imulb
jbe
add
incl
jmp
aad
pop
in
std
push
nop
and
add
pop
and
out
pop
pop
fstpl
ret
lea
loope
insb
xchg
lret
mov
mov
push
test
add
mov
jnp
xchg
lods
mov
mov
insl
incl
push
rclb
cmp
add
in
push
jmp
fucomi
je
js
aad
cmp
sbbl
and
mov
sub
incl
add
sbb
pop
add
add
mov
xchg
add
add
mov
mov
mov
xchg
popl
test
add
pop
shrl
add
dec
sub
add
imul
or
mov
mov
mov
incl
add
lret
add
mov
sbb
pushf
aaa
jae
add
sbb
pusha
filds
aaa
nop
add
xchg
enter
push
fs
sti
pop
out
mov
mov
add
roll
in
add
and
je
mov
adc
lret
or
xor
xchg
mov
test
inc
sbb
inc
ljmp
lahf
stos
and
cmp
mov
jns
cmpb
decl
pop
pushf
sbb
fdivr
add
pop
popl
add
mov
dec
into
sub
lock
add
mov
add
cmpsb
jmp
mov
addr16
add
mov
lods
and
int3
lret
jmp
std
es
xchg
stc
xchg
sub
mov
xor
incl
fadds
push
push
and
add
cli
aaa
or
mov
push
mov
add
push
sub
add
lea
sbb
push
pop
mov
arpl
in
or
add
add
jp
aad
inc
add
add
cmc
fiadds
add
mov
mov
frstor
bswap
mov
add
in
ljmp
in
add
add
lretw
and
and
sbb
rcll
fidivrl
out
mov
xor
add
fildl
rol
sub
add
gs
loop
add
incl
rolb
rclb
aaa
fwait
add
mov
push
jne
icebp
mov
add
aaa
pop
jns
sub
dec
movl
cmp
sbb
and
stos
xor
scas
jne
xlat
movsl
add
pop
push
cmpsb
scas
add
add
push
fs
jns
add
push
add
mov
add
add
sti
mov
cltd
std
and
call
xchg
into
jp
aam
cmp
and
add
add
in
mov
jg
add
decb
add
adc
push
or
and
push
add
add
scas
pop
and
push
mov
push
xchg
xor
cmpb
add
mov
cmpsl
lods
filds
add
push
fdiv
lahf
addb
ret
and
sbb
xchg
mov
mov
fiaddl
arpl
add
mov
add
ljmp
and
and
jnp
pushf
jnp
add
or
decl
add
xor
sbb
cld
mov
sbb
add
cmp
nop
andl
adcl
lcall
sub
or
mov
inc
push
xor
mov
call
sub
add
out
jecxz
mov
rcll
ret
mov
shl
add
incl
mov
roll
popa
mov
add
les
out
movsb
out
inc
mov
fisubrl
decl
pushl
int3
and
adc
cmp
ja
insb
add
adc
and
pop
imul
xor
arpl
int
mov
cmp
xchg
and
mov
scas
fbstp
sarl
repz
adc
movsl
ljmp
and
lods
mov
nop
divl
inc
add
dec
icebp
daa
adc
mov
push
inc
pop
mov
push
push
not
adc
andl
dec
pop
mov
int3
out
mov
push
in
mov
cs
push
jge
jo
mov
insb
mov
ljmp
ret
nop
bound
decl
int3
mov
ljmp
js
mov
cmp
mov
add
inc
cmp
into
ss
loop
cmp
sub
mov
add
pop
fst
movsb
add
add
out
xchg
int
add
es
call
cmpb
mov
jge
incl
scas
loope
icebp
add
and
shl
lahf
add
lcall
sbb
add
adc
clc
shrl
lret
add
xchg
addr16
jo
and
rcrl
xchg
nop
or
cld
test
adc
dec
in
test
mov
enter
test
fistpl
mov
outsl
add
jno
out
into
and
add
cmp
xor
add
iret
cmp
pop
and
adc
add
fsubrs
outsb
jo
rorb
dec
pop
sub
jmp
pushw
stc
mov
mov
and
add
into
mov
in
mov
inc
loopne
sub
mov
add
imul
add
push
and
and
cmp
outsb
adc
jbe,pn
add
pop
or
add
lahf
pop
add
aam
pop
outsl
sub
inc
std
jne
and
add
incl
and
or
add
add
repnz
and
mov
add
add
dec
xchg
sbb
dec
pop
push
imul
adc
lret
mov
add
mov
jg
add
sub
pop
add
push
ret
out
add
xchg
adc
add
fdivrs
sahf
mov
push
add
mov
ljmp
add
mov
add
scas
xor
add
inc
sub
jmp
xor
xchg
add
lcall
push
pop
mov
mov
add
cld
fadds
and
stos
xor
dec
decl
scas
dec
rol
adc
cmp
je
dec
es
add
push
inc
mov
and
add
je
jno
dec
shll
fs
inc
xor
jmp
ljmp
test
add
dec
push
jecxz
push
call
int
fwait
add
cld
and
ljmp
pop
mov
mov
and
mov
out
cmp
xor
sbb
bound
add
add
adc
fs
ud0
out
jne
lret
jl
iret
add
xor
pop
scas
add
mov
pop
inc
add
add
add
sbb
add
imul
aas
inc
pop
dec
or
mov
scas
add
add
add
jns
cltd
ljmp
mov
ljmp
pop
inc
mov
add
lret
or
add
mov
add
add
xchg
arpl
push
ror
mov
incl
jmp
imul
add
or
out
add
mov
and
add
incb
jmp
add
adc
xchg
jg
xchg
sub
mov
push
mov
add
push
cld
mov
pop
dec
cmp
add
mov
incl
fisttpll
mov
mov
add
adc
jge
xlat
insl
aaa
add
gs
add
leave
mov
dec
jo
and
mov
xchg
sub
addr16
dec
test
popa
add
add
addr16
mov
add
xor
push
add
daa
push
pop
pushf
jmp
stos
xchg
out
jmp
xchg
movsl
mov
add
add
repnz
dec
cmc
pop
add
mov
add
dec
out
incl
in
ret
and
mov
add
shl
add
std
enter
add
int3
and
sbb
add
int3
mov
push
xchg
or
mov
ss
mov
inc
adc
fisttpll
and
mov
pop
xchg
data16
call
and
call
pop
fldl
dec
lods
loope
call
mov
push
add
lcall
add
xchg
add
cmp
incl
add
add
cwtl
pop
inc
insl
cmpb
add
jmp
aad
jnp
add
ljmp
pop
pop
sbb
int
fsubp
push
mov
add
pushf
mov
add
jmp
js
jae
test
cs
cmp
sbb
dec
fs
jp
push
xchg
int
and
incl
mov
pop
cwtl
and
and
mov
mov
jae
add
adc
pop
das
insb
test
xchg
inc
mov
orb
stos
aad
dec
sub
add
aaa
sub
add
sbb
mov
les
sar
add
cmp
sub
lcall
lret
or
add
add
aaa
lods
and
pop
add
add
add
add
pop
lods
andb
push
sbb
xchg
call
dec
in
add
mov
xchg
and
add
pushl
xor
push
mov
add
xor
outsb
shrl
jae
mov
add
push
mov
mov
add
in
ret
sbb
incl
adc
arpl
outsb
push
jb
movsb
arpl
and
add
add
inc
out
sbb
and
xchg
cld
scas
add
xor
cltd
xlat
outsl
mov
mov
xchg
push
loopne
add
jmp
sub
mov
xchg
call
aas
je
mov
outsb
dec
test
mov
imul
roll
and
and
adc
adc
and
push
aaa
add
dec
test
incl
out
cmp
sbb
div
aad
in
aad
decl
add
add
mov
cmp
add
cmp
cmpsb
jmp
add
lret
insb
mov
dec
dec
or
mov
adc
cmpl
adc
sub
add
add
leave
add
push
jae
add
add
outsl
xor
xchg
je
inc
aam
in
add
test
add
mov
shll
adc
pop
adc
push
incl
xor
xchg
sub
xchg
jmp
stc
push
pop
loope
mov
testb
pop
or
adc
add
out
add
xchg
iret
add
xor
lret
adc
jl
sahf
inc
mov
adc
fldenv
bound
pushf
jno
jno
mov
and
sbb
incl
add
rep
add
mov
and
xchg
mov
and
add
lods
dec
lods
jge
iret
fstpt
push
add
inc
push
ret
push
imul
add
mov
ret
xchg
jo
add
cwtl
adc
ss
call
das
dec
push
incl
dec
and
mov
cmc
push
daa
inc
cltd
ret
add
pop
mov
xor
add
add
fstl
add
cmp
clc
les
and
scas
cwtl
out
add
xor
and
aas
orl
ljmp
and
fimuls
and
cmpsb
and
popa
add
inc
jo
and
add
fidivl
cmpb
sahf
cmpsl
stc
loopne
add
mov
inc
daa
jg
jge
add
call
or
shll
xchg
add
jbe
repnz
out
cltd
pop
add
mov
lock
dec
sbb
push
mov
sub
jecxz
int3
ljmp
cmpl
mov
das
and
push
and
ss
addr16
mov
stos
add
add
jno
loopne
addb
add
imul
jmp
add
imul
decl
adc
mov
ds
mov
ret
jp
push
pop
sub
add
pop
orb
pop
cmp
repz
notl
add
int
mov
add
lea
add
add
add
push
popf
sub
enter
xor
add
add
pop
jb
lods
incl
and
add
and
arpl
mov
stos
rolb
or
mov
ja
sub
mov
inc
addr16
add
add
fidivs
and
add
and
loopne
imul
add
xor
in
clc
sub
add
pop
loop
roll
add
add
jge
mov
and
clc
and
insb
dec
mov
fmull
add
pop
roll
xlat
fdivrl
clc
faddl
pop
push
xchg
movsb
add
sbb
add
or
add
ljmp
mov
or
adc
les
ljmp
xchg
add
imul
jg
add
add
insl
gs
movsb
mov
test
sub
std
addl
stc
add
adc
jmp
call
add
dec
jmp
adc
aad
fisttpl
add
mov
incl
add
out
lahf
nop
sbb
loopne
add
push
iret
cmpsl
sar
add
sub
rorb
push
add
cwtl
or
sub
cmc
jno
add
leave
sahf
xchg
sub
add
out
and
xchg
popf
add
das
inc
adc
jge
inc
lea
dec
mov
rclb
imul
aaa
sbb
daa
add
popf
ret
cmp
add
xor
sar
push
pop
data16
stc
and
in
in
clc
sbbl
add
stos
mov
stos
inc
inc
push
iret
incl
mov
iret
add
jnp
aam
dec
ret
pop
mov
sub
fimull
add
adc
out
inc
mov
and
or
filds
decl
into
xchg
dec
mov
stc
dec
or
stos
les
cwtl
xchg
mov
mov
rol
repnz
out
mov
decl
cmc
decl
add
clc
addr16
sbb
pop
cmpsl
out
xchg
mov
xchg
add
dec
mov
hlt
mov
out
and
mov
inc
pop
incl
adc
xchg
decl
xchg
ret
lods
into
mov
and
add
and
mov
dec
mov
adc
adc
xchg
add
sub
mov
dec
gs
incl
cmc
jno
xchg
xor
ret
jmp
mov
add
jnp
xchg
jge
add
push
xor
sub
fildl
add
leave
jge
ja
and
jo
add
xchg
jg
sub
jne
xchg
add
scas
scas
xchg
jmp
or
xchg
shlb
and
mov
add
pop
cmpsl
dec
push
mov
xlat
jmp
jge
in
subl
mov
jp
mov
pop
xchg
add
incl
inc
xor
push
fadd
add
mov
push
mov
mov
xchg
sbb
incl
cs
stc
push
and
in
lods
ficoms
addr16
mov
ljmp
call
rcll
add
jmp
mov
jmp
mov
popl
or
or
loop
add
aad
xor
add
jo
adc
add
adc
add
pop
shlb
addr16
xchg
add
add
add
es
idiv
add
movups
clc
cmp
fsubs
sbb
add
and
mov
add
mov
mov
and
and
adc
jmp
dec
addl
push
xchg
and
mov
hlt
in
jno
cmp
add
cmc
adc
add
out
jg
mov
mov
mov
cld
pop
stos
mov
pushl
lock
nop
clc
das
in
pop
add
jb
fsubrl
jmp
mov
mov
arpl
incl
mov
add
inc
push
jae
add
jae
xchg
inc
jnp
lret
jmp
ss
mov
sbb
pop
add
adc
mov
movsl
mov
add
add
icebp
mov
push
add
lock
push
movb
jge
and
pop
sub
mov
loop
repz
imulb
add
mov
ljmp
outsl
stc
mov
or
ds
icebp
into
add
cld
scas
call
push
pop
mov
scas
adc
iret
mov
mov
movb
pushf
or
pusha
icebp
repnz
daa
xor
cli
add
inc
push
vmovntdq
xchg
call
dec
aaa
das
fadd
add
lcall
jae
pusha
std
adc
add
mov
add
mov
mov
test
mov
xchg
jmp
xchg
ljmp
pushl
clc
push
mov
add
xor
add
add
dec
ficoms
add
add
dec
push
lods
sbbb
jnp
add
xchg
jmp
jp
and
aas
xchg
sahf
add
xchg
incl
add
add
add
add
xchg
movsl
add
add
in
sub
add
pushf
fistpll
ljmp
xchg
add
push
push
adcb
mov
mov
mov
add
and
add
repz
adc
xor
fdivs
lds
mov
fwait
cmp
push
cmp
inc
cwtl
incl
insb
adc
or
add
push
sub
and
test
cmp
jae
add
xchg
incl
sub
and
push
add
mov
mov
pop
sub
and
cmp
jmp
add
in
pop
sub
pop
std
lock
mov
cmp
push
mov
mov
fmull
mov
mov
mov
mov
daa
ret
loopne
mov
lods
xchg
incl
jge
sub
add
add
cmc
xor
in
cmp
decb
add
jl
es
adc
add
mov
or
cmp
and
add
add
lret
jns
decl
jmp
out
rcl
jmp
mov
bound
testb
and
add
add
push
and
jp
add
lods
and
pushf
scas
cmp
add
add
lods
dec
incb
scas
add
sub
add
mov
add
add
and
incl
add
incb
lods
sbb
add
sub
inc
add
add
rcr
insl
and
cmp
incl
add
incl
cltd
and
lret
add
scas
cltd
mov
sub
int3
lahf
incl
pop
enter
or
add
jnp
add
test
add
pusha
les
incl
add
sub
xchg
add
ss
arpl
mov
add
xor
and
adc
ljmp
emms
xchg
cmc
movl
xor
cmp
push
inc
adc
add
mov
cmp
push
rorl
and
sbb
in
push
sub
add
adc
add
mov
mov
insl
mov
rclb
lcall
or
incl
add
pop
repnz
mov
or
add
ret
mov
decl
add
pop
mov
or
mov
mov
dec
arpl
add
pushw
push
xor
out
mov
and
dec
cmp
test
ds
incl
lcall
push
dec
popa
inc
popa
pushf
incl
mov
mov
incb
pushl
inc
add
adc
add
mov
in
add
mov
mov
jmp
and
mov
jmp
mov
cmp
out
sti
decl
repnz
movsb
int
add
sub
add
pop
inc
sub
mov
push
test
shl
add
ret
xor
add
mov
adc
jno
incl
adc
cmpsl
adc
negb
add
std
lahf
xor
pop
das
add
in
push
jo
add
cmp
mov
loop
add
add
call
xchg
cmpsb
inc
cmp
repz
add
jmp
sub
mov
add
mov
mov
lret
jno
or
mov
ret
mov
fs
add
or
mov
add
pop
xor
xchg
add
mov
test
sarb
rcr
mov
add
daa
sbb
add
add
loop
out
test
mov
icebp
push
and
movsl
scas
dec
ja
ljmp
lret
out
add
push
xchg
xchg
add
dec
loop
cmp
pop
loop
add
sbb
stos
and
add
add
sub
jnp
idiv
incl
fisttps
mov
in
push
add
mov
pop
xchg
lcall
xor
adc
lcall
call
jecxz
incl
add
and
add
pop
mov
add
int
add
scas
adc
je
lcall
shl
jbe
mov
sahf
shl
add
sub
jns
mov
daa
filds
add
in
inc
mov
leave
xchg
add
jns
ljmp
jne
mov
jg
das
xor
aas
loop
add
je
shl
incl
pusha
lds
add
mov
data16
xor
mov
fdivr
dec
and
pusha
shr
add
jmp
fcomip
sub
add
jge
fisubs
outsb
add
ds
xor
clc
sbb
xchg
adc
add
xchg
stc
decb
incl
decl
mov
add
call
jp
enter
add
in
or
cmp
mov
add
inc
test
push
andb
or
das
push
mov
add
rcrl
add
add
popa
mov
lcall
add
pop
pop
scas
cmp
push
out
sub
add
mov
jge
add
ret
mov
sbb
mov
add
movsl
in
add
fldt
jmp
rorl
stos
or
mov
aad
pushf
add
sub
gs
lock
stos
mov
add
sub
push
mov
sti
jge
add
add
mov
mov
add
add
in
dec
jecxz
scas
cmp
add
out
adc
aas
push
adc
xchg
nop
add
add
fimull
test
jg
cmp
mov
test
cmp
dec
xor
add
jge
out
and
inc
out
loope
arpl
ja
jmp
mov
adc
add
push
jl
stos
mov
add
dec
adc
mov
sbb
decl
popa
dec
pop
call
push
jmp
mov
lahf
push
mov
flds
mov
add
mov
incl
lock
jecxz
adc
mov
mov
cmp
add
jg
and
xor
push
xor
mov
sbb
add
adc
cltd
jmp
mov
add
ja
test
push
sub
and
lcall
add
mov
cmp
add
sti
pop
jnp
mov
add
dec
add
and
addr16
add
add
xor
add
fimuls
xor
call
popf
lahf
jmp
xchg
sub
xchg
adc
in
add
add
imul
add
push
adc
add
mov
fdivrl
or
gs
add
mov
cmp
add
cltd
jmp
sub
mov
lcall
add
out
scas
add
call
je
loopne
push
pop
fiaddl
lcall
cmp
xorb
daa
in
fwait
cmp
add
call
into
add
in
jb
out
add
dec
pop
imul
call
stos
jb
les
add
add
cltd
xchg
outsb
pop
push
rorb
stos
leave
add
add
dec
sbb
add
out
repz
lods
in
mov
scas
lret
sbb
add
jl
rolb
add
xchg
test
add
jae
jmp
mov
fcoml
test
mov
mov
mov
add
fs
incb
test
ljmp
mov
imul
push
xor
rcr
and
mov
mov
adc
mov
mov
lret
add
mov
cmp
nop
loope
add
addr16
outsb
sbbb
dec
mov
jmp
xchg
call
int
inc
lahf
add
add
adc
mov
add
int
push
pop
and
loopne
aam
incl
aad
pop
lret
daa
mov
stos
push
mov
and
mov
mov
add
out
fadds
add
pop
or
xor
xorl
mov
stos
xchg
and
jge
jg
lcall
icebp
and
mov
iret
mov
incl
add
jg
out
jge
jge
call
adc
mov
and
stos
push
and
mov
push
sub
push
push
add
sahf
adc
add
add
add
add
mov
loop
and
test
add
mov
jb
push
add
es
pusha
push
xor
sbb
jne
dec
das
insl
incl
add
movsl
data16
add
add
adc
sub
mov
or
addr16
inc
add
mov
add
sti
arpl
insl
and
movsb
jmp
sahf
mov
jecxz
sbb
mov
in
and
in
cmp
add
add
jmp
cltd
mov
out
add
inc
call
add
mov
scas
lcall
and
aam
add
ljmp
sbb
add
test
push
cmp
roll
and
cmpsl
sbb
dec
movb
add
es
add
cmp
daa
sarl
aad
test
inc
clc
xor
add
add
add
add
sub
sti
ss
call
cmp
hlt
and
adc
imul
movsl
sub
add
ljmp
incl
xchg
push
cmp
dec
push
cmp
into
add
fs
mov
xchg
movb
or
or
mov
add
add
jne
decl
mov
add
nop
add
sbb
insl
and
incl
and
and
sub
pop
cmp
add
inc
ficompl
inc
add
pop
add
add
lock
out
add
mov
add
sbb
push
add
mov
push
dec
inc
add
and
int
addr16
aas
sub
cmpsb
xchg
ret
mov
pop
sbb
incl
jmp
xor
and
iret
add
mov
add
add
hlt
lret
in
roll
mov
je
addr16
jns
add
xor
pop
dec
mov
mov
dec
and
pop
mov
add
aas
sub
fisubs
and
pop
incl
jle
aad
add
repz
inc
add
and
ja
add
add
mov
add
mov
add
dec
test
cmp
mov
ljmp
fisubrs
mov
xchg
adc
adc
bound
rolb
incl
mov
push
ljmp
cmp
pushl
xchg
insb
mov
mov
test
push
inc
jle
inc
repnz
pushf
xor
xchg
add
add
fsubr
jp
xor
lock
add
fiaddl
cmp
mov
je
leave
add
sbb
pusha
cltd
out
mov
outsb
lret
mov
push
pop
add
and
repz
pop
ljmp
push
and
add
movsl
lds
adc
or
mov
add
mov
decb
mov
jbe
add
add
add
jbe
inc
sbb
add
mov
call
sub
fwait
inc
dec
dec
lcall
push
pop
push
jne
add
ljmp
jle
call
popf
jp
cmp
push
lcall
nop
pushf
mov
ljmp
lods
orb
dec
mov
push
lret
add
decl
cmc
push
cmpl
push
incl
and
inc
imul
cmp
add
mov
push
movsb
xchg
cmp
add
inc
add
adc
push
mov
dec
add
out
jae
adc
out
lcall
dec
call
mov
pushl
dec
lods
int
add
inc
jns
add
push
pop
mov
add
sbb
mov
dec
adc
add
xchg
jl
mov
gs
add
clc
xchg
ljmp
add
rolb
popa
add
and
roll
icebp
addb
add
fstpl
rol
roll
add
ja
out
sbb
ljmp
and
and
and
addr16
sar
adc
fdivp
and
aas
sti
std
xor
inc
cmp
stc
add
add
loopne
add
add
ja
pop
adc
pushf
decb
or
add
pusha
dec
out
mov
fsts
mov
cmp
mov
add
ffreep
mov
adc
cmpsl
xor
mov
dec
add
add
and
ror
movsl
inc
inc
add
and
mov
pop
jge
mov
dec
cmpsl
shll
xorb
ret
or
mov
push
jbe
lret
add
mov
je
push
add
shll
add
and
inc
int
xchg
js
sbb
add
mov
jmp
sahf
lds
mov
mov
stos
nop
add
add
xchg
int
and
int
loope
call
mov
xchg
push
test
add
add
jbe
xor
dec
add
add
add
fld
mov
into
pushf
incb
add
and
mov
push
inc
xchg
cmp
add
pop
inc
and
mov
sub
adc
and
stos
add
je
imul
add
mov
lods
pop
mov
jmp
mov
pop
mov
insl
test
in
cmp
add
repnz
cmp
sub
add
xor
lds
test
and
dec
sub
add
das
xor
add
xchg
in
test
add
inc
mov
and
inc
adc
insl
mov
cmp
dec
sbb
sti
add
int
cmp
add
cmp
add
into
mov
fsubl
pop
adc
jge
sub
and
sbb
shll
push
mov
pop
les
add
loop
outsl
push
enter
and
inc
sub
cmp
addl
incl
jmp
add
xchg
cmp
ret
push
sbbb
add
decb
or
add
mov
roll
adc
cwtl
jno
frstor
stos
shrb
idiv
mov
dec
mov
add
pop
icebp
mov
mov
add
fldl
ljmp
sbb
add
and
jae
mov
test
nop
cli
add
add
cli
sub
jmp
add
xchg
adc
flds
incl
add
xchg
retw
add
cli
adc
mov
add
imul
mov
add
add
arpl
mov
xor
enter
sub
mov
or
add
pusha
mov
pop
and
je
pop
out
push
xchg
rolb
hlt
rorb
mov
mov
ljmp
mov
adc
add
addr16
jb
adc
adc
scas
xor
add
das
push
scas
andl
ficomps
mulb
inc
je
add
dec
mov
jns
add
mov
ret
incl
es
mov
add
pop
adc
icebp
setl
cmp
adc
add
cmp
and
adc
xchg
ljmp
adcl
incl
out
lds
add
and
xchg
push
xor
add
mov
mov
sub
int3
orl
dec
les
pop
pop
decl
pop
inc
test
cwtl
sub
dec
cmpsb
ljmp
dec
add
fiadds
das
and
or
add
add
outsb
pushf
jne
mov
add
mov
cltd
jmp
cmc
out
and
mov
xchg
mov
and
lret
dec
push
ret
and
adc
lea
add
incl
rcrl
add
and
add
add
pushf
pop
inc
sub
lods
jo
mov
loop
loopne
sbb
push
sti
xchg
add
ljmp
add
cmpl
call
out
xlat
pop
addb
inc
add
test
aad
cmp
hlt
lds
incl
mov
leave
dec
mov
add
add
mov
mov
mov
dec
xor
sub
add
nop
pushf
gs
loop
add
aaa
shl
pushl
push
ljmp
add
pop
outsb
mov
fld
test
aaa
lret
incl
adc
leave
loopne
ljmp
lods
jno
loope
push
jo
and
jge
decl
pop
cs
dec
ss
jmp
cs
mov
add
cmpb
push
icebp
data16
mov
and
cmp
ja
in
add
add
in
xchg
test
add
dec
orl
cmc
jp
and
add
sub
push
sahf
add
mov
cmp
add
incl
pop
jg
test
add
mov
fdiv
mov
and
jbe
sbb
add
push
xchg
icebp
push
jmp
loopne
mov
outsl
hlt
lret
add
add
popf
sub
out
mov
mov
add
loop
popa
adc
add
out
add
sub
and
add
dec
fadds
add
rol
and
ljmp
add
adc
out
and
and
nop
pop
push
aaa
mov
jg
jmp
cwtl
mov
arpl
dec
add
push
aam
inc
lahf
adc
and
mov
repz
mov
aaa
filds
cld
add
inc
add
jne
adc
mov
addl
sbb
jge
or
add
sub
gs
xor
sub
mov
dec
adc
and
ret
into
lahf
pop
lahf
mov
fstpt
fsubl
push
lock
mov
add
add
adc
shrl
pop
and
incl
mov
sbb
adc
mov
jbe
add
rorl
dec
in
add
das
mov
mov
lcall
mov
cmp
fildl
lock
dec
mov
hlt
push
xor
add
sub
ds
push
popf
push
add
ja
add
out
xor
add
xchg
ds
push
adc
add
sbb
ss
add
push
cmpsl
cmp
lahf
mov
add
jp
add
add
scas
pop
fucomi
add
add
pop
xchg
push
ficompl
add
mov
pop
and
and
jo
cmp
add
ljmp
mov
and
add
incl
adc
xor
add
add
add
xchg
idivl
cwtl
incl
in
jecxz
sti
hlt
scas
or
cmpsb
lea
decl
jmp
fwait
imul
leave
sbb
mov
pop
pop
decl
add
aaa
mov
add
out
adc
pop
jo
add
cmp
inc
addr16
push
cmc
pop
call
pop
xchg
mov
mov
incl
cwtl
mov
push
fstpt
call
jmp
mov
dec
push
add
jbe
add
incl
cmpsb
cld
sarb
lret
lret
dec
jle
and
jg
or
mov
mov
add
xchg
push
dec
cs
lcall
adc
out
incl
or
pop
iret
stos
xchg
dec
nop
aaa
arpl
movsb
mov
jae
aaa
scas
nop
add
shlb
lods
sar
add
add
sub
dec
adc
dec
add
sub
nop
dec
add
popf
mov
call
sub
mov
dec
mov
add
xchg
ljmp
xchg
add
fwait
mov
inc
or
insl
mov
addr16
aam
decl
lret
add
cmp
divb
insl
mov
pop
and
loopne
les
add
mov
ret
or
add
adc
mov
mov
lret
xchg
sbb
call
and
mov
rorl
insb
lahf
cmp
add
or
jns
sarl
fsts
sub
int
mov
add
add
inc
test
push
adc
fimull
icebp
add
imul
mov
jb
mov
mov
shrl
add
add
incl
mov
rcr
lods
and
fisubs
push
add
ja
aas
add
jae
push
mov
mov
or
cmpl
mov
mov
cmp
cltd
cmp
add
pop
data16
mov
and
xchg
dec
or
xchg
das
push
cmp
mov
add
aam
add
xor
and
and
add
push
add
fwait
arpl
imul
in
push
add
out
aam
add
sbb
imul
pop
and
xor
incl
mov
ret
loope
mov
add
add
aam
repnz
clc
insb
mov
adc
cwtl
iret
dec
movsb
sub
imul
jmp
add
add
add
add
lcall
incl
add
ja
add
add
xor
sbb
inc
repz
incb
pushl
cmc
cltd
incl
add
add
es
in
push
shrl
jg
cmp
decl
mov
incl
addr16
shlb
adc
dec
xor
fisttpll
or
push
push
jp
and
and
in
add
adc
mov
sub
mov
add
and
and
arpl
cli
cmpsl
add
and
sub
mov
sahf
popf
mov
add
mov
push
cmp
mov
imul
pop
sub
test
mov
add
jo
cmpsl
arpl
xchg
push
mov
std
leave
bound
mov
hlt
sub
add
add
dec
mov
jmp
scas
push
mov
jo
mov
mov
mov
test
jmp
test
int3
add
incl
lock
aam
jne
add
popf
lret
push
dec
pop
xchg
incl
pop
aas
rcr
add
daa
clc
in
add
inc
insl
fisubrs
inc
xor
adc
mov
mov
incl
jle
or
jnp
add
adc
call
out
sbb
repnz
add
xor
mov
cmp
aas
mov
mov
add
out
add
orb
jmp
mov
pop
decl
add
testb
into
mov
test
incl
add
stc
xchg
out
incl
push
incl
decl
xchg
or
add
and
mov
ljmp
dec
fidivrs
and
xchg
in
lock
push
out
mov
test
add
sub
cwtl
push
pop
pop
add
add
cmp
and
in
fists
pushl
stc
add
push
mov
inc
push
sbb
in
sbb
das
hlt
decb
jae
es
sub
add
push
repnz
jg
xchg
sub
stos
add
test
add
xchg
testl
and
inc
mov
lds
incl
out
fcmove
cmp
jmp
loope
mov
mov
imul
inc
sub
out
or
adc
cmp
push
dec
add
loopne
lods
out
sub
mov
add
imul
mov
mov
add
pop
cmp
mov
cmp
add
inc
sub
imul
decl
arpl
je
incl
adc
pop
cmp
xor
jmp
and
xchg
shll
pop
add
call
shlb
imul
loopne
pop
add
pop
cwtl
jb
add
add
xor
lcall
outsb
incl
mov
add
shlb
dec
push
enter
hlt
mov
pop
add
push
aas
pop
cmp
decl
pushf
sub
insb
popa
add
decl
add
mov
bnd
push
call
mov
lea
adc
add
xchg
sbb
mov
and
popf
dec
push
adc
add
cmp
and
sbb
fisttpll
mov
mov
cmp
lea
incl
sbb
dec
add
mov
add
in
unpckhps
add
mov
add
test
xor
jle
mov
add
mov
clc
cmp
mov
popa
xor
arpl
pop
loope
mov
daa
mov
lods
add
dec
mov
add
pop
sub
in
add
sub
cmp
ljmp
idivl
mov
fcmovne
out
add
sbb
push
addl
mov
repnz
insl
icebp
aam
pop
xlat
jb
add
es
daa
ds
and
jo
mov
xchg
lods
clc
insl
or
movsl
popf
stos
imull
add
mov
scas
je
out
add
xchg
or
pop
decl
add
mov
call
lds
add
add
add
scas
pop
or
mov
and
add
and
test
fs
add
add
decl
mov
lahf
add
incl
jmp
incl
xchg
in
pushl
jl
add
add
jmp
add
jne
add
add
jle
leave
and
outsl
loopne
mov
add
rcll
incl
push
dec
fsubl
call
add
add
or
cmpsb
sbb
jnp
add
xlat
xorl
rclb
mov
imul
dec
ds
add
int
xchg
cmpsl
and
sub
or
sub
add
mov
add
inc
popf
add
jmp
and
scas
and
mov
mov
add
test
repz
imul
cs
cmp
xor
jns
sbb
lods
cmp
int
in
add
adc
das
arpl
add
idivb
xor
sbb
insl
add
decl
add
and
sub
adc
mov
mov
roll
ljmp
add
lret
sub
and
and
jo
push
cmpsl
call
aaa
push
dec
push
incl
aaa
in
out
add
xor
call
mov
sbb
or
mov
dec
mov
mov
sub
decl
cltd
iret
jb
add
or
add
in
cwtl
rorl
add
sub
mov
decl
arpl
sbb
add
out
mov
add
mov
mov
lea
scas
jo
add
inc
dec
sub
jl
and
das
andb
xchg
sbb
mulb
add
ret
fistl
xchg
fldenv
pop
or
add
cltd
aaa
mov
aam
add
add
mov
sar
shr
cmp
mov
into
sbb
adc
loop
add
f2xm1
fdivp
add
pop
jecxz
or
add
sti
push
push
add
fisttpll
sub
sbbl
xchg
outsb
and
dec
sbb
and
mov
fbld
data16
add
mov
incl
es
mov
add
addl
das
add
mov
jecxz
adc
test
popf
xor
xchg
jl
lods
cmp
push
mov
add
and
nop
jo,pn
or
mov
sahf
and
add
inc
adc
pop
add
jp
insl
add
push
xor
adc
adc
testl
and
incl
dec
mov
outsb
decl
mov
jbe
sahf
or
jl
push
mov
add
dec
add
pushl
and
add
in
and
add
dec
push
pop
mov
mov
sti
test
jns
add
and
pusha
mov
add
mov
pop
jp
adc
add
popf
shll
int3
pop
xchg
dec
cmp
outsl
insb
mov
leave
aas
mov
add
add
ret
test
add
les
aas
add
add
js
dec
incl
les
jle
add
add
repnz
xor
add
outsl
or
mov
fnstsw
jp
mov
dec
sbb
add
xchg
enter
add
jb
mov
add
inc
jle
add
jle
mov
ret
call
dec
jbe
and
push
clc
enter
jo
xchg
sub
push
incl
add
sub
adc
js
push
fnstcw
out
dec
xor
ss
mov
push
das
adc
add
fdivp
inc
jno
add
add
add
pop
fcoml
mov
inc
and
add
adc
and
rolb
repz
lods
ljmp
das
les
mov
push
jno
gs
sub
mov
sbb
add
jnp
cmc
add
loopne
dec
xchg
daa
lea
xchg
push
incl
lods
or
dec
add
test
pop
mov
pop
inc
daa
xchg
add
mov
xchg
int
mov
sub
adc
push
pop
jecxz
and
incl
sub
imulb
incb
subb
out
adc
shrl
incl
add
pop
push
pop
add
popf
add
add
mov
std
jmp
mov
adc
jl
add
jmp
xchg
add
aad
incl
add
or
arpl
add
hlt
add
mov
cmp
leave
push
mov
xchg
lret
gs
add
add
and
jmp
inc
lret
add
jl
test
lret
add
mov
adc
jl
in
cli
xor
mov
mov
incl
mov
add
or
cs
insl
call
sub
insb
push
mov
lds
popa
sub
shlb
add
xlat
adc
add
mov
repnz
gs
add
add
sub
add
add
rorb
pop
clc
add
ss
mov
add
out
mov
loope
add
add
add
add
call
call
in
add
popf
into
add
lock
add
mov
sbb
add
add
jecxz
inc
sbb
call
push
jbe
xor
int3
data16
lret
mov
hlt
outsl
nop
adc
mov
add
lret
and
jmp
mov
sub
inc
or
add
xlat
sbb
adc
add
loop
xor
mov
push
jmp
leave
dec
test
and
push
xor
add
fwait
mov
mov
jbe
cmc
and
ljmp
sub
add
adc
push
add
out
mov
mov
sbb
cmp
mov
pop
movsl
fwait
add
add
js
call
inc
fmuls
dec
gs
add
add
sub
jmp
movl
add
jl
cmc
sub
add
pop
dec
add
xchg
mov
cmp
adc
and
and
add
mov
pop
add
add
jge
inc
and
add
fs
add
sti
dec
fisubrl
clc
jmp
jmp
add
add
push
movsb
xor
incl
sub
mov
dec
add
mov
call
mov
and
push
jg
out
inc
mov
adc
repnz
call
cltd
aaa
xor
adc
incl
scas
xchg
xchg
and
fldt
sarb
add
xchg
rorb
jae
cmpsb
popa
jecxz
add
in
add
mov
add
fimull
add
mulb
aas
dec
stos
adc
fwait
adc
pop
imul
sub
fsts
push
incl
or
add
add
push
mov
ljmp
cmp
add
data16
and
jne
lods
aaa
movnti
push
loope
lret
xchg
cld
mov
add
push
push
inc
xchg
add
and
pop
add
arpl
das
add
je
sbb
in
push
add
and
ljmp
incl
jmp
loopne
add
add
jl
jns
add
jl
enter
sub
mov
pop
cli
push
jmp
jl
dec
pop
lods
sub
aad
lret
decl
mov
push
mov
add
cmp
inc
and
add
negl
or
andb
int3
mov
decl
inc
pop
push
incl
insl
sarb
cli
add
mov
in
sbb
add
push
incl
test
mov
add
out
or
sarl
loopne
data16
testb
repz
and
jnp
add
add
xor
add
sbb
and
pop
cmp
add
addr16
enter
add
mov
lods
sbb
add
add
mov
aas
lock
jmp
mov
cmpsb
decl
add
sbb
sbb
shr
lds
sbb
dec
incl
test
mov
add
xlat
mov
or
sub
add
xor
mov
inc
sub
add
push
cmc
or
mov
icebp
testl
jmp
or
add
sub
mov
cld
pop
adc
xor
jne
int
add
add
mov
int3
outsb
add
add
xchg
add
mov
mov
add
add
add
or
and
or
test
and
add
jnp
add
jbe
mov
iret
in
lahf
mov
addl
pop
add
adcb
add
inc
in
call
add
or
cmp
cmp
arpl
add
add
push
inc
add
and
or
lock
jle
daa
jle
ljmp
mov
adc
fwait
ljmp
jnp
adc
push
inc
sub
mov
lcall
out
loope
out
call
fs
add
popa
js
ljmp
xor
or
and
ljmp
rorl
add
incl
push
mov
icebp
pop
dec
incl
pushl
ds
int3
mov
xchg
loop
decl
enter
and
add
dec
lds
add
and
das
dec
mov
sahf
loop
loope
loope
iret
decl
add
adc
aad
mov
daa
pop
and
sti
xor
sbb
and
and
test
push
fcos
add
mov
adc
add
mov
mov
adc
sti
les
testl
lcall
sub
add
add
jle
loopne
xor
mov
add
pop
incl
cmp
sbb
mov
es
mov
inc
dec
mov
lret
mov
cli
ret
ret
stc
and
decl
test
orl
test
mov
or
jb
xchg
xchg
cmp
jmp
sub
add
mov
jmp
add
ror
mov
in
push
sub
sub
inc
add
pop
out
adc
ja
xchg
int3
add
dec
daa
aam
mov
add
pushl
out
push
cmp
mov
add
pop
or
sub
jbe
jmp
jmp
add
std
mov
je
cmp
scas
movsb
clc
add
out
clc
and
add
je
sub
add
mov
iret
mov
xchg
loopne
add
xor
mov
add
nop
or
mov
in
xlat
jb
add
add
jl
sub
inc
jbe
push
mov
scas
je
cmp
add
stos
sbb
inc
in
lea
add
push
add
sti
mov
add
or
sub
rorl
ds
push
cmp
push
dec
xor
add
or
mov
and
add
mov
gs
add
mov
and
pop
xchg
cs
hlt
xchg
or
cwtl
xchg
adc
loop
jo
add
add
inc
pop
decl
pop
jnp
sbb
roll
mov
jecxz
add
ja
or
adc
cmp
lcall
add
add
daa
data16
push
pop
call
add
scas
add
gs
or
add
and
and
addr16
push
mov
push
out
mov
mov
add
out
push
mov
push
or
add
icebp
add
add
mov
xor
cs
mov
fdivr
adc
lcall
adc
pop
xchg
enter
adc
mov
lods
cwtl
add
mov
incl
daa
push
and
xchg
mov
add
mov
add
xor
loopne
add
add
mov
sti
xchg
sbb
or
add
dec
jno
xchg
jg
cmp
push
lahf
sbb
mov
mov
add
cli
or
inc
pop
push
mov
add
add
push
subl
add
adc
mov
icebp
data16
in
and
ret
cmpsl
movsl
jecxz
add
pop
pop
xor
sahf
inc
push
inc
add
fimull
mov
pop
test
add
aam
aam
lcall
cmpl
push
ret
add
xlat
sub
add
add
testb
mov
add
xchg
and
mov
add
shll
adc
xor
mov
add
sub
sbb
add
mov
mov
adc
xchg
lcall
int3
das
mov
mov
cmp
flds
add
call
jge
in
pusha
and
pop
mov
mov
add
add
mov
shll
add
es
ss
adc
sub
cli
add
jl
jo
test
andl
add
loop
ds
xchg
sub
add
mov
incl
add
add
lea
add
pop
mov
jge
in
xor
je
push
inc
jmp
mov
add
sub
call
fnstcw
add
in
insl
fidivrs
add
out
test
cs
sbbb
filds
jmp
std
and
sub
xchg
and
cmp
lcall
adc
cmp
dec
mov
and
mov
mov
inc
pusha
dec
incl
or
add
xlat
sub
add
cmp
add
add
sbb
mov
jmp
mov
push
clc
add
lcall
aaa
sub
add
jns
mov
sbb
add
bnd
loopnew
testb
jne
mov
adc
incl
add
in
decl
bound
xchg
sub
fiadds
shll
repnz
data16
xchg
std
daa
lcall
sub
add
and
ss
add
add
mov
data16
mov
adc
add
add
add
inc
addr16
sbb
add
adc
out
jmp
add
push
rcll
add
push
repnz
int3
cltd
fcoml
add
mov
add
inc
ret
sub
fidivrs
push
add
pop
fistpll
in
add
and
fcos
lret
cmp
add
add
fcos
xchg
cmp
inc
aaa
and
pop
ljmp
lret
call
xchg
insl
xchg
cs
add
jmp
add
incl
pop
loope
mov
mov
lcall
lock
add
lcall
adc
sbb
rclb
mov
mov
cwtl
lods
add
enter
clc
add
sbb
xchg
in
add
jmp
mov
adc
add
in
and
sbb
add
rorb
push
pop
sti
and
pop
fisttpl
add
repz
inc
jmp
xchg
push
or
add
adc
dec
dec
or
mov
inc
scas
addr16
add
testb
jl
daa
dec
mov
add
in
jno
ljmp
es
fiaddl
sub
and
add
sti
add
mov
mov
add
pop
or
add
and
xor
mov
icebp
xchg
jl
add
add
jb
aad
mov
and
call
decl
xchg
lea
dec
mov
jmp
and
dec
add
mov
std
movsb
cmp
movsl
mov
add
add
adc
fiaddl
add
mov
xchg
add
add
lods
ret
jmp
add
mov
jg
incl
fs
mov
dec
adc
stos
mov
push
add
mov
fisttpll
incl
in
clc
scas
jmp
call
scas
movsl
add
jnp
dec
xchg
add
in
mov
push
jecxz
add
add
adc
into
cmp
mov
adc
sbb
add
ret
add
add
sub
cmp
jbe
jae
xchg
andl
add
add
add
add
add
ret
add
ljmp
shll
loope
add
sti
fs
jne
imul
imul
mov
push
inc
mov
in
popf
add
push
hlt
repnz
incl
movsb
sti
cli
lahf
pop
incl
add
imul
pop
push
add
and
incl
mov
pop
jmp
test
imul
add
add
imulb
add
add
add
mov
cmp
sub
es
xor
loop
movsl
les
dec
out
mov
cs
lcall
sti
inc
xchg
add
and
mov
cwtl
push
je
mov
mov
ret
pop
cmp
xor
mov
and
mov
add
cmp
or
mov
add
add
incl
or
divl
lret
daa
push
sbb
xor
in
popa
cs
add
js
push
sti
mov
add
pop
cmpsl
add
mov
mov
loope
lods
add
adc
and
add
scas
push
sahf
xchg
fidivrs
cmpsl
add
add
jmp
add
daa
aas
stos
into
mov
sub
call
pop
add
add
dec
push
test
add
in
push
insb
inc
cmpsb
subb
jl
add
mov
lea
movsl
inc
add
add
push
mov
loop
mov
add
mov
lret
sub
mov
xor
add
cld
jmp
add
addl
js
xor
add
add
scas
jmp
incl
add
xchg
jmp
add
jbe
cmp
xchg
insb
sub
rcr
add
cmpl
mov
lcall
xchg
add
adc
popa
jbe
nop
xlat
mov
and
test
xor
add
lahf
xchg
idiv
and
pop
and
arpl
sub
adc
mov
push
xchg
decl
jo
or
cli
jge
adc
pop
lock
lods
lds
std
xor
incl
roll
leave
movl
stos
das
adc
decl
fwait
rorl
repz
pushl
lock
mov
dec
mov
dec
or
add
insb
xlat
pop
add
adc
cld
faddl
aam
sti
xor
sar
test
pop
mov
add
mov
xor
xchg
add
fadd
xchg
pop
inc
imul
jmp
cmp
and
jmp
jb
jae
and
add
int3
leave
fisttpll
cmp
mov
jmp
lods
add
ljmp
fimuls
push
lret
orb
pop
lds
add
or
ljmp
inc
int
add
jbe
push
pop
or
sbbl
xchg
bound
incl
mov
fiaddl
adc
cmpsl
jmp
jno
mov
decl
add
push
mov
adcb
sub
dec
or
sub
add
js
pop
call
lcall
xor
or
lea
decl
jbe
loop
adc
fwait
mov
and
add
add
add
add
out
popf
pushl
add
jbe
fstpl
popf
add
jle
mov
out
push
add
and
testl
inc
mov
mov
cmp
add
andb
incl
or
add
push
gs
add
in
sbb
nop
pushf
add
aaa
inc
pop
mov
pushl
cmp
add
sti
and
add
add
loop
add
cmp
shlb
add
mov
sbb
add
js
jp
and
lret
and
rcr
cmp
sarl
sbb
fdivrl
xchg
jl
pop
incl
pusha
cmp
add
and
or
add
add
xor
lahf
in
decl
add
mov
cmp
push
lret
jmp
imulb
cwtl
add
str
movsb
add
add
jle
pop
mov
incl
sbb
push
inc
push
cmp
sahf
push
or
pushf
lret
fdivr
add
or
aam
incl
add
mov
scas
add
in
add
pop
cld
jl
add
faddl
and
aad
aad
and
aaa
les
inc
mov
push
movl
repnz
pop
and
mov
call
jmp
cli
je
xchg
in
idiv
pop
call
cmp
jmp
cs
or
loop
aaa
mov
int
mov
pop
add
add
std
xchg
mov
imul
out
loopne
add
aad
push
and
mov
dec
icebp
mov
in
jmp
xchg
push
pop
add
cs
shlb
adc
add
adc
outsb
pop
fildl
decl
mov
push
ljmp
add
leave
jmp
adc
mov
mov
add
push
gs
cltd
incl
and
std
jp
stos
pop
outsb
add
and
lea
mov
and
add
xchg
in
cmpsl
lods
scas
addr16
xchg
push
sub
add
test
add
int3
xchg
movlps
add
adc
incl
inc
mov
negl
jge
push
out
adc
sub
cmp
add
add
in
mov
add
and
rclb
push
les
cmp
add
mov
mov
sub
push
repnz
sub
add
decl
inc
jg
jne
add
add
lods
into
incl
jecxz
mov
add
inc
pop
lock
add
adc
mov
es
sub
aam
mov
mov
mov
jne
and
mov
rcr
add
add
dec
movsb
inc
in
mov
adc
mov
add
cmpsl
and
sub
mov
dec
xor
add
mov
inc
mov
add
lcall
inc
add
repnz
jg
add
or
adc
mov
cmp
in
lcall
int
push
js
call
mov
mov
xor
add
jge
inc
inc
and
bound
jge
pusha
add
add
clc
daa
out
dec
add
imul
mov
daa
sub
jmp
pushl
icebp
ss
and
sub
sbb
icebp
dec
and
push
sub
inc
mov
xchg
negl
add
mov
and
mov
adc
jg
mov
ds
sbb
mov
out
pop
incl
outsb
popf
out
aad
sbb
mov
add
xor
and
mov
in
jae
sub
mov
mov
push
fcomip
and
scas
or
cmp
mov
fwait
sbb
jle
sub
les
add
mov
fsubs
add
add
fistpl
mov
mov
push
insb
inc
dec
and
dec
and
lahf
jnp
add
movsb
insb
jecxz
push
add
xchg
add
adc
rclb
pop
pushf
adc
mov
imul
negb
push
add
and
popf
xor
sbb
sub
ljmp
popl
fcoms
insl
add
push
mov
in
incl
incl
sbb
add
stc
add
add
push
pop
and
add
popf
mov
add
pop
push
pushf
mov
push
pop
pop
sbb
mov
ds
mov
mov
dec
fildll
faddl
add
and
fisttps
mov
push
movsl
push
add
add
mov
lcall
je
sub
add
xchg
repnz
incl
adc
xchg
ljmp
xchg
or
insb
sbb
add
push
dec
orl
add
and
or
movsb
pusha
add
inc
cli
aas
ret
mov
dec
push
add
mov
sub
push
data16
push
jbe
mov
jge
push
out
xor
add
scas
adc
pop
add
adc
mov
into
inc
mov
dec
cs
sub
add
clc
adc
addr16
test
rolb
xchg
jno
xchg
add
ret
shll
add
add
mov
leave
pop
mov
or
add
fcompl
ja
add
jne
lds
incl
les
pop
sub
mov
bound
add
mov
mov
xor
push
mov
pusha
add
sub
jl
test
das
add
dec
add
mov
mov
rclb
add
mov
mov
imul
jb
incl
mov
add
mov
lea
ljmp
push
cmp
shlb
xchg
add
ds
jne
filds
jmp
and
add
cltd
adc
or
les
lret
and
add
call
aad
lods
mov
xchg
add
mov
push
test
add
ljmp
inc
jge
loopne
cltd
sbb
mov
inc
fisubl
cld
xor
add
ss
push
addb
pop
mov
mov
in
xchg
ljmp
ds
add
decb
gs
cld
out
add
cmpb
add
push
and
mov
arpl
add
cld
push
outsl
lds
pop
mov
add
xor
data16
add
incl
add
xor
ja
add
stos
add
lret
mov
add
cmp
dec
push
sub
jb
daa
xchg
stos
incl
lods
sti
xor
popf
add
mov
incl
imul
xlat
mov
mov
mov
ss
loopne
cmp
aad
adc
sub
inc
xchg
push
rcrb
add
aad
adc
jmp
cmp
mov
jl
push
aam
jbe
push
popa
add
pop
mov
push
lods
add
mov
lahf
mov
add
and
lcall
lahf
roll
add
pusha
add
and
xchg
jl
jge
subl
inc
jb
nop
incl
mov
outsl
pop
xchg
add
pushl
add
xor
add
mov
adc
out
sub
mov
push
cmp
lcall
add
incl
and
mov
incl
cmp
dec
scas
pop
call
rol
pop
testb
mov
scas
add
sahf
push
fistl
dec
mov
and
mov
dec
mov
add
jne
dec
add
ljmp
jno
xlat
xchg
in
jg
add
pop
pop
push
add
push
jg
and
and
in
iret
ret
stc
orb
sbb
add
add
mov
add
pop
mov
mov
mov
or
add
dec
xor
sarb
cmc
pop
mov
and
xchg
add
and
loopne
roll
and
enter
sub
lahf
sub
mov
and
and
clc
add
stc
inc
adc
mov
mov
sub
loope
push
and
add
or
xchg
add
add
add
add
xor
arpl
sub
and
call
push
dec
dec
incl
add
push
nop
jo
cmp
jmp
ljmp
mov
push
aaa
outsb
mov
adc
add
decl
pop
push
mov
je
mov
or
or
cmp
lea
xor
mov
std
inc
add
imul
add
pop
dec
loopne
inc
lcall
addr16
sub
add
icebp
inc
mov
add
push
mov
jl
aaa
mov
mov
stos
xor
add
xor
mov
jmp
and
add
inc
xchg
mov
mov
addl
mov
push
out
adc
add
xchg
outsb
mov
sub
add
adc
fldenv
add
mov
lahf
add
mov
dec
mov
daa
and
aas
jnp
add
sbb
add
add
lods
ds
notl
incl
and
fdivrl
sbb
dec
add
movsl
push
xchg
and
xchg
jmp
cmp
int
shll
decl
dec
inc
add
add
xorl
decl
test
add
add
add
mov
adc
mov
ret
add
fwait
mov
decl
cmpsl
xchg
pop
decl
ds
add
arpl
movsb
add
xlat
std
push
add
fistpl
scas
testl
add
clc
xchg
fadds
cld
loop
add
addl
add
jl
push
jnp
cld
decl
jns
add
out
jnp
repnz
rol
and
incl
es
and
add
cmp
inc
add
out
xlat
sub
push
movsl
mov
xchg
das
insb
add
add
cltd
incl
add
loopne
fisubrl
call
hlt
inc
and
lcall
lahf
adc
add
in
mov
hlt
xor
pop
add
dec
dec
lcall
jo
cmp
shll
add
add
mov
dec
xchg
cmpsl
test
add
or
lcall
adc
add
lret
pushl
in
nop
and
add
sub
or
fisttpl
cwtl
mov
pop
sbb
sti
mov
and
xor
add
and
mov
and
add
stos
fwait
push
add
add
iret
popf
xchg
pushf
cmp
cmpsl
shll
jo
add
push
add
add
ljmp
pop
frstor
aaa
dec
and
inc
mull
add
sbb
mov
xchg
imul
ret
jmp
xchg
xchg
cmpsb
cli
pop
sbb
mov
pushl
and
fnsave
test
add
push
mov
xchg
sbb
and
pop
ljmp
ds
add
add
or
jae
add
jno
cmpsb
mov
lret
inc
or
add
push
out
lea
aad
and
add
jno
xchg
js
add
int3
jmp
ljmp
call
add
xchg
addb
and
call
push
xor
lret
dec
sbb
and
data16
mov
lea
add
inc
aas
pop
out
add
cwtl
loop
add
stos
mov
pushl
test
push
cld
lods
jle
mov
add
or
imul
incl
ja
insl
push
sbb
add
mov
push
addr16
mov
add
call
dec
call
xchg
mov
pop
or
and
pusha
add
add
in
jl
sub
xor
pop
dec
jb
icebp
and
mov
mov
sub
rol
dec
fcoms
sar
cltd
cmp
mov
imul
add
je
mov
sbb
lret
add
add
dec
data16
jl
add
dec
push
add
mov
or
inc
loopne
and
dec
pop
jb
add
decl
testl
jg
idiv
cmpsb
aad
push
add
and
sbb
ds
clc
les
add
pop
out
jmp
add
cwtl
test
or
inc
and
sub
xor
out
add
cmp
cmp
add
jns
int
icebp
add
add
sub
fwait
push
xchg
xor
incl
rcrb
xor
add
movsb
dec
add
adcb
or
ljmp
test
and
cmp
icebp
jmp
adc
or
mov
adc
mov
adc
imul
add
nop
jecxz
imul
add
aad
ja
incl
add
adc
insl
dec
jmp
pop
or
add
shlb
enter
mov
imul
jae
fs
popa
js
push
dec
mov
add
xchg
pop
jmp
jmp
and
and
or
movsl
or
add
adc
mov
test
adc
add
movsb
add
in
mov
call
ds
mov
aad
imul
mov
or
sub
inc
cs
incl
incl
sbb
add
mov
ffree
mov
dec
outsl
add
pop
cld
mov
add
adc
incl
add
sub
cmp
stos
repz
fmuls
add
std
dec
add
clc
inc
xchg
icebp
add
cld
cvttps2pi
cs
dec
xchg
xchg
cmc
sbb
fucomip
add
cmc
incl
add
cmp
push
mov
add
incl
jecxz
pop
mov
shl
sahf
sbb
adc
fsts
aas
cmp
outsl
xor
aas
movsb
outsb
add
sldt
incl
and
addl
add
add
or
lcall
xor
out
repz
jmp
int3
arpl
mov
out
add
mov
xchg
incl
push
aam
aaa
mov
and
xchg
fdiv
incl
jne
in
jmp
cwtl
pushl
or
out
fdivrs
mov
mov
add
add
cs
sub
add
nop
mov
add
mov
mov
dec
and
arpl
add
push
in
add
add
add
popa
push
aam
xor
data16
data16
xlat
int
pop
add
leave
and
add
mov
out
jnp
add
aam
mov
subb
sub
mov
mov
xor
add
and
incl
mov
sub
mov
jl
cld
inc
mov
dec
and
incl
push
mov
add
mov
les
test
push
and
add
adc
cwtl
int3
mov
cmpsl
sbb
je
adc
cmp
dec
cmpsl
or
addr16
mov
sbb
sti
loopne
cmp
dec
xchg
mov
repz
mov
mov
add
or
incl
popf
mov
cmp
clc
and
add
add
rorb
xchg
clc
mov
stos
or
add
incl
cmp
sub
and
mov
out
lock
adc
sti
incl
mov
lret
idiv
nop
cwtl
lcall
mov
inc
push
in
pushl
hlt
bound
decl
add
add
add
call
push
xchg
aaa
dec
add
pusha
fdiv
mov
not
arpl
stos
sub
push
jl
mov
mov
dec
incl
incl
shlb
mov
test
add
push
mov
shll
push
mov
clc
addl
mov
fildl
push
lods
mov
or
adc
gs
incl
add
add
jns
fisttpll
pop
add
pop
sub
add
fistl
jl
testb
push
subl
lcall
add
and
adc
mov
add
xchg
mov
enter
sub
lcall
out
shlb
cmp
js
sub
lods
add
icebp
add
add
pushf
mov
add
mov
pop
mov
dec
adc
add
add
add
xchg
in
add
jnp
pushl
jmp
call
cld
push
xor
in
xchg
std
xor
pushf
pop
decl
pop
popf
jnp
jl
mov
out
add
in
incb
std
std
adcl
push
jbe
decl
cld
add
aas
cld
mov
incl
cmc
cld
cmp
nop
cld
incl
decl
pushl
jecxz
aas
add
in
mov
push
std
pop
mov
std
call
add
decl
or
add
xchg
jmp
add
adc
call
jnp
and
daa
add
add
xchg
incl
cmp
mov
jmp
nop
add
loop
fs
jp
incl
incl
jmp
cltd
incl
je
add
incl
xchg
push
xchg
incl
stc
outsl
mov
lcall
jnp
call
jmp
add
add
add
xor
pushf
adc
add
orl
add
jge
xor
mov
inc
lahf
testl
adc
mov
dec
mov
test
inc
movsb
mov
in
es
sbb
jg
pop
push
inc
lea
lahf
xchg
in
push
push
daa
stos
lods
xchg
fcmovbe
imul
js
dec
xor
push
nop
dec
sahf
jns
loope
test
mov
les
sub
ljmp
dec
inc
ja
shll
fxch
jg
pop
mov
xor
pop
aad
in
in
ret
mov
mov
cmpsb
pop
jb
fwait
push
imul
inc
mov
xor
ja
push
clc
xchg
ss
call
dec
imul
fs
xor
sbb
stc
out
cmp
xor
dec
int3
loop
scas
fxtract
ss
int
cmpsl
iret
lods
sti
sbb
leave
iret
cmpsl
fldz
mov
cs
adc
cwtl
mov
minps
xlat
cmp
mov
push
sbb
aad
repnz
lret
xchg
inc
jmp
loope
inc
insb
cli
push
sbb
insl
in
or
push
mov
aas
xor
cltd
pop
sbb
shlb
lahf
jae
jecxz
xchg
mov
call
aas
xchg
xor
mov
dec
shrl
dec
mov
repz
filds
rclb
xchg
xchg
add
lods
stos
add
xrelease
out
dec
cmp
addr16
push
xchg
and
add
enter
cmc
sub
insb
mov
mov
inc
and
sbb
and
xor
testb
test
insl
mov
pop
ljmp
jnp
mov
lock
add
mov
pushf
jge
cmpsb
jge
test
das
testb
fiaddl
inc
mov
inc
inc
cmp
jle
flds
pop
fcomi
xor
fsts
or
pusha
cmpsb
xchg
cmpsb
mov
jae
ss
shll
testl
cmp
jp
hlt
bound
cmp
jg
adc
add
pop
in
jnp
push
out
popa
int3
cld
inc
mov
ja
dec
mov
sbb
dec
xchg
mov
xchg
hlt
sbbb
pushf
lret
mov
flds
adc
aas
imul
rorb
jecxz
aam
and
sub
pop
incb
or
pop
sbb
add
xor
arpl
mov
cmpsb
xlat
in
and
popa
sbb
cmp
fcmovne
pop
les
sbb
into
rcrl
sub
jg
dec
xchg
xor
jecxz
and
inc
pop
lcall
bound
cwtl
push
add
shrb
mov
movsb
mov
cmp
jmp
xor
cmp
cwtl
cwtl
aam
data16
add
jae
bound
loopne
ljmp
xor
adc
add
add
pop
lds
insl
pop
and
jg
sbb
mov
and
es
jl
insb
lds
push
push
shll
mov
xor
mov
orb
mov
dec
and
add
xchg
mov
mov
xor
addr16
enter
push
imul
dec
in
sub
leave
mov
std
mov
iret
test
testl
sub
outsb
std
sub
adc
imul
arpl
sub
mov
out
jbe
xchg
iret
push
js
adc
jp
repnz
mov
xor
out
xlat
pop
fidivrs
mov
xchg
adc
add
mov
outsl
add
mov
xor
xchg
popf
rcrl
lret
sbbb
mov
bound
dec
clc
test
fldt
cltd
cld
mov
push
fnstcw
test
unpckhps
dec
xor
pop
xor
daa
dec
mov
xor
fstps
int3
pop
rcll
xchg
or
sti
inc
lahf
ja
imul
xchg
add
cltd
push
fwait
inc
ljmp
mov
or
lcall
shrb
mov
in
inc
cmpsb
nop
jae
xor
insl
and
pop
divl
outsb
ds
dec
jnp
cmp
fnstenv
xlat
scas
pop
mov
jmp
jne
shl
data16
mov
sub
leave
roll
jo
daa
fdiv
shlb
outsb
fcom
pusha
out
jno
inc
js
push
clc
push
out
pop
xchg
cltd
jo
pop
mov
in
mov
lahf
fidivl
ret
jo
dec
pop
add
std
test
scas
sbb
pushf
pop
mov
mov
sub
ds
lds
nop
gs
inc
cmp
fs
mov
in
clc
shlb
cwtl
scas
popa
mov
add
or
and
outsb
repnz
fcomp
or
jl
push
jbe
sti
int3
cmp
movsb
daa
repnz
push
repz
shlb
push
int3
and
fisttpl
xchg
in
imul
enter
lret
loope
pop
inc
outsb
xchg
lds
lret
and
mov
sbb
fistpll
push
scas
fcomps
pop
mov
scas
sub
xchg
lret
nop
and
mov
popa
push
push
push
in
mov
mov
xor
cmp
cmp
lods
insl
pop
aaa
mov
or
shr
testl
cmp
cmpsb
xor
cmc
xlat
push
pop
mov
out
int3
xor
mulb
fs
dec
lods
mov
mov
aas
dec
cmp
out
scas
mov
mov
ds
jecxz
out
xorl
jp
inc
pop
inc
and
mov
jp
mov
jmp
jl
sahf
jmp
adc
mov
dec
mov
fsubrs
jae
sti
outsb
mov
xor
fs
movsb
mov
pop
push
xor
leave
insb
adc
push
pop
cmp
mov
push
mov
jo
jecxz
mov
hlt
outsl
divl
push
push
fidivl
stos
xchg
cli
xor
mov
cmc
sbb
arpl
cld
and
shl
fimuls
bound
test
push
pop
jl
lcall
loopne
lods
out
mov
cmp
aaa
or
dec
mov
sbb
aas
or
adcl
mov
insl
xchg
movsb
sub
or
int3
insl
scas
jb,pt
mov
ds
not
subl
std
and
add
add
dec
jbe
roll
adc
bound
das
mov
mov
stos
aas
dec
loop
xlat
jmp
orl
mov
test
lods
pop
sub
jle
loop
ljmp
mov
fdivr
clc
movsb
push
ret
push
popf
lods
in
in
popf
lock
imul
movsl
push
int
cld
add
push
testl
stos
cmp
scas
and
push
jl
jne
cmpb
jns
cld
out
inc
xor
jo
movsl
xchg
and
lcall
or
insl
mov
lahf
jb
jl
or
mov
jmp
jbe
dec
dec
imul
lret
hlt
stos
mov
aas
cmp
sub
jle
dec
out
sub
ss
out
and
push
lock
shll
xchg
xor
pop
dec
mov
fadds
call
js
and
jmp
dec
mov
pushl
int
push
push
imul
xor
lods
out
mov
lock
in
pop
lahf
mov
scas
or
mov
jmp
cmp
sbb
mov
and
stos
lcall
cs
inc
movsb
mov
into
pop
xchg
in
fs
sar
push
movsb
sarl
sub
int3
in
test
pop
lret
jnp
and
cmp
nop
mov
mov
cmp
das
push
xor
xor
cwtl
xor
mov
out
loope
repz
mov
dec
jg
jmp
in
notl
mov
and
clc
mov
lds
movsl
or
in
ljmp
mov
lcall
insl
and
push
aaa
es
dec
es
lea
addr16
add
in
lcall
out
aas
xor
rolb
incl
and
in
mov
outsb
push
xor
sub
es
push
jns
insl
ljmp
daa
ficoms
scas
mov
fisubl
ss
ja
call
sti
ds
nop
jge
sub
insl
int
lret
jbe
jl
daa
lea
loope
jl
xchg
jmp
loope
das
jp
je
loope
test
sub
cs
jbe
mov
sti
pushf
push
sub
fildll
stos
cwtl
jle
lods
popa
std
ljmp
cmp
xor
in
pop
addr16
mov
gs
add
inc
out
out
cmpsl
ret
mov
imul
xor
mov
cmp
lods
outsb
bound
and
scas
cli
pop
jbe
sub
mov
or
iret
insl
call
fistpl
je
jmp
insl
jb
mov
das
scas
and
xchg
inc
pushf
clc
push
lret
and
mov
icebp
jno
cmpsb
ljmp
out
pushf
mov
and
dec
in
adc
negl
xor
repnz
insb
dec
sub
inc
inc
andb
iret
daa
in
and
jns
sbb
scas
inc
dec
mov
xor
popa
cmpsl
ds
std
xchg
lcall
jmp
sti
jmp
add
add
xchg
jmp
and
incl
xchg
xor
incl
add
add
and
outsb
ljmp
jmp
cltd
xchg
jl
jbe
popa
clc
insb
movsb
xchg
add
adc
push
add
incl
cli
add
incl
fimuls
pusha
fdivrp
add
mov
pushl
call
add
mov
and
inc
cmp
mov
out
pushl
ljmp
std
decl
test
jp
adc
fwait
orl
imul
cld
cld
ss
orl
js
sahf
add
jmp
stc
decl
js
add
xchg
xchg
add
add
add
jmp
add
add
jmp
call
ds
add
std
add
add
adc
add
ljmp
jmp
cltd
dec
nop
mov
call
addb
adcl
std
out
lcall
incb
jnp
aas
cld
add
js
mov
xchg
cld
add
push
incl
outsl
ljmp
add
call
fwait
test
cld
popf
add
out
fdivr
incl
call
std
xchg
std
fs
jnp
add
lods
jmp
std
incb
call
outsl
jb
and
incl
incl
call
incl
or
incl
lcall
mov
xchg
mov
popf
add
inc
incl
outsb
ljmp
xchg
add
add
incl
std
mov
add
addr16
add
sub
add
add
add
push
add
incl
in
sbb
ficoms
sbbl
pop
xchg
js
testb
std
xchg
add
incw
std
add
lcall
decl
add
jmp
add
incl
sub
add
cmp
jbe
xchg
ds
popa
xchg
incl
popa
add
xchg
incl
add
xchg
popf
incl
jnp
ss
data16
xor
dec
add
test
pushl
cld
lods
xchg
and
lcall
nop
ja
andl
add
add
add
cmp
js
popf
lahf
aaa
ljmp
movsb
ss
test
pushl
aas
imul
in
xor
out
jmp
mov
out
and
add
xchg
push
aas
sub
incb
sub
std
mov
clc
add
add
nop
jmp
add
test
add
add
jp
push
mov
push
jmp
jae
push
in
cwtl
add
insl
lahf
add
sbb
test
incl
js
idiv
lcall
sub
outsb
pop
add
pushl
jne
in
sub
jmp
jl
add
addl
cmp
cltd
xor
call
decb
decl
call
xor
cld
pop
add
incl
jnp
jo
ljmp
popf
jmp
in
add
and
in
sbb
mov
in
xchg
add
imul
call
xchg
sbbl
add
ljmp
lcall
jnp
push
jmp
stc
xchg
inc
in
add
and
imul
je
insl
popa
js
arpl
popa
insb
gs
fs
imul
push
outsb
bound
popa
bound
imul
insb
cmp
incl
pop
jle
lcall
sub
test
decl
add
in
incl
and
decl
popl
jmp
popl
data16
sti
cltd
push
xor
mov
std
cwtl
sub
popf
add
cltd
incl
sub
decl
incl
sub
xchg
xchg
xchg
incl
xchg
incl
in
push
outsb
sbb
addr16
insl
out
add
cmpsl
call
incl
add
clc
ss
jbe
cld
popf
jmp
xchg
add
add
cmp
jl
in
in
ljmp
call
jp
in
es
mov
push
incl
outsl
jl
jae
jmp
cltd
adc
add
std
mov
jae
insl
imul
jbe
insb
outsl
addr16
gs
gs
push
push
insb
jns
inc
outsb
jne
jne
popa
data16
bound
bound
gs
sub
decb
sub
sbb
mov
ss
incl
add
jnp
fsubrs
pushl
add
add
imul
mov
cmp
incl
addl
add
add
incl
std
add
out
mov
incl
out
test
ljmp
xor
data16
sti
std
std
cld
push
add
std
add
cltd
call
jnp
incl
and
outsb
jmp
jmp
mov
in
xchg
cltd
ljmp
out
xchg
in
pop
addl
add
add
add
and
and
stos
jmp
inc
push
pop
iret
sarl
cmp
inc
or
out
inc
mov
lret
mov
cld
mov
stos
arpl
out
and
or
mov
sub
cli
xchg
sub
call
cmovl
cmp
lret
push
add
in
sbb
sbb
in
cmp
mov
mov
sub
lea
pusha
mov
pop
pop
out
jmp
mov
inc
mov
mov
push
pusha
push
mov
outsl
fiadds
fwait
xlat
aaa
outsb
push
aaa
push
sbb
fs
mov
mov
lahf
xor
in
outsl
and
xchg
stos
mov
jb
insl
and
insl
sbb
sarl
jp
cld
cmp
jb
aas
inc
scas
add
sub
cmp
cmp
lock
dec
push
and
cmp
mov
xor
push
lds
mov
icebp
imulb
in
mov
lods
mov
sub
fs
mov
mov
mov
cmpsl
int
and
dec
movsb
push
mov
xchg
icebp
mov
push
adc
call
dec
add
imul
cmp
cltd
jl
xchg
add
dec
fisttpll
repnz
aas
testl
das
xor
mov
iret
iret
fbld
sbb
push
roll
ljmp
lods
cmc
and
mov
mov
mov
push
mov
or
cmc
add
cs
xor
and
out
xchg
imul
daa
push
inc
push
test
out
push
addb
sub
daa
sbb
int3
pop
inc
fcompl
int3
lret
sbb
addr16
fs
dec
lret
mov
std
das
into
mov
ljmp
cmp
sarb
xchg
jbe
lock
outsl
mov
push
out
xor
push
and
sbb
cmpsl
adc
xchg
push
mov
inc
les
jecxz
xor
mov
xchg
jp
push
sub
lds
cmc
aaa
xor
mov
jbe
or
pop
ret
mov
pop
ss
mov
jnp
mov
jne
cmpsl
jns
jle
and
fwait
dec
js
mov
mov
jb
jg
xor
aad
pop
scas
pushw
pop
or
out
scas
push
or
call
xchg
shr
outsb
mov
mov
pop
jns
mov
ja
out
adc
push
dec
adc
dec
shl
mov
pop
adc
dec
sub
add
sbb
xchg
sbb
mov
data16
cld
jge
push
inc
into
or
int
rep
sahf
test
cmp
sbb
and
jmp
dec
dec
xchg
push
mov
and
xchg
enter
adc
or
fwait
cmp
mov
out
push
repz
xlat
jecxz
jg
push
dec
insl
in
adc
push
mov
sub
dec
jp
add
movsb
pop
fiadds
inc
xchg
add
inc
inc
xorl
mov
mov
add
add
mov
pop
adc
test
aas
loop
stos
jge
rcll
fistps
nop
adc
adc
adc
iret
sub
cmc
std
or
add
xchg
repz
or
add
push
xorl
imul
movl
fnstcw
je
sub
lcall
mov
std
rol
dec
scas
add
sub
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
cld
inc
add
cld
inc
add
add
add
hlt
inc
add
add
add
add
add
add
inc
add
add
add
add
mov
inc
add
hlt
inc
add
lock
add
hlt
inc
add
scas
inc
add
hlt
inc
add
inc
add
inc
add
hlt
inc
add
inc
add
inc
add
hlt
inc
add
incl
add
add
mov
add
add
add
mov
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
add
add
pusha
mov
add
add
add
inc
add
add
add
mov
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
mov
add
add
add
mov
add
add
add
add
fs
add
add
add
inc
add
add
add
mov
add
add
int3
mov
add
mov
add
add
sbb
add
or
add
clc
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
add
add
sub
inc
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
add
add
add
add
add
add
add
mov
add
call
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jg
jg
jg
in
cld
inc
add
inc
mov
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
icebp
incl
add
add
push
add
push
add
inc
add
incl
add
add
add
add
incl
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
adcb
add
push
add
addb
add
add
add
cmp
add
dec
add
addb
add
xor
add
add
add
add
add
enter
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
aam
add
add
add
add
add
pop
add
add
add
pop
add
dec
add
or
inc
add
inc
add
dec
add
pop
add
pop
add
push
add
dec
add
inc
add
push
add
pop
add
push
add
push
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
cmp
or
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
push
add
jb
je
popa
add
outsb
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jbe
add
add
outsl
add
jae
imul
add
add
imul
insb
add
add
insb
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
outsb
add
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
arpl
sub
and
xor
cmp
cmp
cmp
sub
add
add
add
add
jns
and
jo
insb
add
outsb
add
and
inc
add
add
and
jb
imul
je
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
imul
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
insl
add
outsb
add
jns
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
incl
add
add
add
add
add
addb
add
add
mov
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
push
add
mov
add
add
incl
add
add
incl
add
add
add
add
add
addb
add
add
add
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
and
or
jp
add
incl
add
add
push
popa
add
xor
push
add
add
incl
add
add
push
or
roll
add
add
add
incl
add
add
incl
add
add
add
add
int3
add
add
add
xor
imul
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
or
jle
add
incl
add
add
push
pop
add
add
add
add
add
incl
add
add
push
sub
dec
add
add
add
incl
add
add
push
pop
add
add
or
addl
addb
add
add
add
incl
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
addb
push
pop
add
add
incl
add
add
push
nop
add
xor
push
add
addb
add
