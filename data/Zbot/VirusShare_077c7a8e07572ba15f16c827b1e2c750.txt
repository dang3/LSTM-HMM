push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
mov
mov
pusha
call
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
jmp
ret
cld
xor
push
pop
add
mov
mov
shl
xor
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
popf
push
pushl
decl
ret
ret
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
adc
add
mov
add
and
add
add
push
and
add
add
mov
and
add
and
add
and
add
add
and
add
add
fisubl
add
sbb
add
out
and
add
and
add
and
add
add
and
add
add
mov
and
add
and
add
add
push
and
add
and
add
and
add
add
add
add
xor
add
add
pop
and
add
add
add
add
jp
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
and
add
add
mov
add
and
add
add
push
and
add
add
mov
and
add
and
add
and
add
add
and
add
add
fisubl
add
sbb
add
out
and
add
and
add
and
add
add
and
add
add
mov
and
add
and
add
add
push
and
add
and
add
and
add
add
add
add
xor
add
add
pop
and
add
add
add
add
jp
add
add
add
roll
dec
gs
jo
jb
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
outsb
fs
insb
outsl
jae
add
add
imul
jb
je
arpl
add
xchg
add
je
jne
jb
outsb
je
push
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
push
gs
imul
and
gs
outsl
insl
insl
inc
jb
popa
imul
add
gs
outsl
jbe
inc
imul
jns
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
dec
outsl
arpl
inc
insb
popa
addr16
add
gs
popa
jae
inc
jb
outsl
jb
add
add
je
imul
bound
gs
add
push
push
je
imul
inc
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
call
inc
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
popa
je
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
push
gs
outsl
arpl
add
pop
or
jae
dec
gs
popa
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
rolb
jae
imul
xchg
push
push
gs
jae
addr16
add
xchg
inc
gs
imul
js
push
add
movl
outsl
insl
gs
sbb
ja
jo
imul
pop
dec
outsb
jae
jb
dec
outsb
jne
add
inc
gs
imul
outsb
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
imul
jae
popa
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
inc
push
xor
cs
insb
add
add
inc
insb
insb
push
imul
jb
gs
add
jb
popa
je
inc
gs
je
jo
arpl
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
dec
inc
push
push
dec
inc
dec
dec
cs
insb
add
add
inc
ja
insb
outsl
outsb
gs
outsb
je
jns
add
push
inc
push
dec
xor
cs
insb
add
ficoms
lods
lcall
jo
xor
add
addr16
jns
fsubrs
rcrl
xchg
out
bound
mov
mov
loopne
mov
hlt
and
and
cwtl
dec
fwait
push
fmul
dec
cmp
lods
jl
idivb
mov
push
dec
xchg
jle
add
xchg
test
pop
into
clc
xchg
test
sbb
lods
jle
adc
popa
test
es
das
sub
cmp
outsb
mov
pop
mov
cld
cmc
test
jg
inc
test
enter
loope
lret
dec
int3
popf
fildll
jo
inc
and
sub
cmp
mov
jecxz
cltd
push
mov
pop
xchg
lock
adc
cmp
lahf
cmpsb
je
jmp
test
sbb
inc
mov
sbb
ret
sub
sub
movsl
and
jl
inc
std
ljmp
stc
inc
cmp
push
cmpsb
mov
gs
pop
fidivl
add
hlt
rol
mov
mov
sub
xor
rcll
sub
xlat
sub
push
out
sub
sbb
lret
movd
stc
lods
mov
stc
sub
inc
aad
sub
dec
sbb
inc
inc
out
mov
adc
pop
xchg
imul
jns
xor
lcall
add
or
sti
stc
mov
dec
pop
data16
inc
hlt
repz
mov
repnz
pop
pushf
dec
dec
les
add
insb
data16
das
cmp
push
adc
fildll
mov
xchg
testl
out
mov
mov
xchg
inc
inc
mov
addr16
mov
jl
cmpsb
fs
rorb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
movsb
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jl
jnp
lods
lods
lods
add
cmpsb
push
mov
mov
mov
leave
lret
int3
int3
rcl
in
rcl
shl
ror
shl
int3
int3
int
enter
mov
in
mov
mov
lods
stos
lods
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
leave
not
rcl
cld
fcomp
fdivr
fcom
aam
rcl
sar
int3
int
aad
rcl
sar
ret
std
mov
mov
scas
iret
movsb
movsl
mov
dec
cs
das
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
sbb
mov
jnp
mov
sar
leave
lret
rcl
sar
aad
aam
xlat
xlat
fcom
xlat
call
aam
int
int
int
into
call
aam
dec
int
mov
mov
mov
std
cmpsb
cmpsl
cmpsl
ljmp
push
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
into
int
rcl
sar
xlat
fcomp
fcom
call
aam
int
int
lret
lret
into
int
inc
mov
mov
mov
cmpsl
test
jmp
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
fs
push
das
or
sbb
xor
cmp
aaa
cmp
cmp
and
and
push
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
mov
dec
enter
sar
aad
call
aam
call
ror
dec
leave
leave
inc
mov
mov
ljmp
movsb
movsb
popf
sahf
sahf
xchg
cwtl
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jge
jg
jo
jo
arpl
mov
cmp
inc
mov
outsb
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
lret
lret
lret
mov
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
cltd
cltd
lcall
aas
cmp
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jp
lea
incb
jl
idivb
jl
outsl
outsl
outsb
out
addr16
push
ret
jg
jp
jns
fs
inc
inc
cmp
pop
sbb
adc
adc
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addb
xchg
xchg
mov
mov
xchg
mov
jp
jns
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
sahf
cltd
popf
in
mov
mov
addb
decb
xchg
loope
jb
enter
mov
test
xchg
push
cmp
ss
jge
cmp
movsl
mov
test
sti
lods
lods
lods
lods
stos
stos
test
movsb
movsb
std
cltd
lcall
mov
jge
jp
jns
jl
jnp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
mov
push
getsec
femms
or
dec
insb
imul
xchg
leave
cltd
cltd
lcall
lcall
mov
mov
xchg
mov
mov
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
test
mov
incl
test
decb
xchg
xchg
popf
sahf
pushf
std
mov
mov
xchg
in
xchg
nop
xchg
in
xchg
push
jne
or
add
or
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
mov
call
mov
cmpsl
ljmp
cmpsl
lods
pushl
lahf
mov
mov
mov
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cltd
pushf
incl
mov
call
xchg
nop
xchg
xchg
xchg
pushf
popf
pushf
movsl
movsl
movsb
stos
test
movsb
movsl
movsb
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
jb
mov
jle
addl
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
xor
jbe
mov
movsb
mov
mov
lods
lods
mov
movsb
add
pop
pop
adc
mov
jmp
lea
call
xchg
xchg
call
xchg
cwtl
lcall
mov
movsl
movsb
std
movsb
movsl
movsb
stc
cwtl
cwtl
lcall
nop
xchg
les
cltd
lcall
mov
stc
xchg
xchg
std
xchg
jae
lcall
jmp
jge
mov
jp
mov
je
mov
outsb
ljmp
adc
lods
or
lods
or
mov
jge
mov
mov
stos
pushf
movsb
mov
movsb
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
cltd
lcall
sahf
mov
lcall
xchg
xchg
call
cwtl
xchg
call
cltd
cld
cltd
cwtl
popf
stc
sahf
fwait
mov
cld
sahf
mov
xchg
imul
xchg
dec
jns
cltd
cmp
cltd
sub
sahf
and
sahf
push
jmp
ljmp
adc
stos
packuswb
lods
adc
mov
push
mov
push
mov
insb
mov
lcall
lods
scas
lods
scas
movsl
movsb
movsl
sub
movsb
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
sahf
popf
lcall
mov
movsb
jmp
xchg
xchg
decl
mov
xchg
xchg
xchg
jbe
fwait
jo
cltd
bound
call
cs
decl
adc
nop
or
xchg
add
call
add
sahf
push
pop
jmp
sbb
pushl
pop
jo
mov
outsb
mov
and
mov
pop
je
roll
les
mov
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
scas
mov
shlb
sahf
sahf
popf
jmp
cmpsb
cmpsl
jmp
test
test
lcall
decl
inc
outsl
decl
sub
mov
decl
or
test
incl
add
mov
push
decl
add
fwait
add
sahf
add
cmpsl
or
pushl
sub
mov
sub
mov
sub
sub
leave
xor
leave
cs
inc
mov
leave
scas
inc
mov
mov
mov
mov
movsl
add
push
adc
test
mov
mov
mov
stos
ljmp
lods
pushl
scas
scas
jmp
jno
incl
or
push
incl
add
incl
add
addl
decl
add
add
xchg
add
cltd
add
sahf
add
mov
adc
mov
ss
leave
cmp
int3
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
test
mov
mov
lahf
fwait
lahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
push
decl
push
incl
or
xchg
push
decl
add
xchg
add
xchg
add
sahf
add
add
test
pusha
ljmp
sbb
test
leave
inc
dec
inc
mov
roll
call
dec
call
dec
xchg
call
dec
xchg
fmull
ficoml
call
test
mov
mov
mov
sahf
sahf
or
add
add
add
add
dec
dec
adc
jl
movsb
popf
mov
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
insl
decl
sbb
sbb
mov
pop
decl
add
add
xchg
add
pushf
add
mov
add
test
pop
pushl
and
dec
inc
nop
call
push
xchg
call
push
cltd
fsts
fstpl
fists
fistps
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
cmpsb
test
jne
sahf
lahf
or
xchg
xchg
xchg
add
inc
adc
js
sahf
cltd
sahf
jmp
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
and
xchg
and
xchg
and
call
sbb
or
xchg
add
xchg
add
lcall
jmp
add
mov
gs
mov
xor
fcomps
fisubs
fisubs
in
test
jecxz
cmpsl
jmp
data16
call
test
stos
fldl
mov
cmpsb
test
sahf
lahf
lahf
adc
xchg
xchg
xchg
add
inc
adc
jae
lcall
lcall
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
xor
cltd
jo,pn
cwtl
sub
xchg
pop
call
add
lcall
jmp
add
mov
pushw
adc
roll
jmp
outsl
lods
jmp
jno
call
je
in
jae
in
jae
in
je
out
je
out
jb
jmp
xchg
mov
cmpsl
cmpsl
lcall
lahf
add
jg
cmp
cmp
js
mov
popf
pushf
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
sahf
aaa
jbe
mov
xor
cltd
sbb
call
add
mov
add
test
add
mov
gs
mov
sbb
ficoml
in
mov
ljmp
in
xorb
icebp
cmpl
push
cmpl
ljmp
inc
mov
test
sahf
sahf
popf
daa
sahf
mov
mov
add
popa
add
xor
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
jmp
cmp
movsb
inc
jge
movsb
inc
jge
mov
sbb
xchg
add
pushf
add
add
test
pop
ljmp
add
add
ret
call
and
movsl
jmp
mov
push
lea
push
pop
push
xchg
ret
push
xchg
clc
xchg
stc
pop
out
pop
lods
stos
mov
pushf
popf
xor
pushf
add
add
add
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
nop
pushl
mov
mov
inc
ret
ret
inc
mov
jle
lcall
dec
jg
lods
dec
test
movsb
xor
pusha
lcall
add
test
pop
ljmp
add
mov
add
leave
push
outsb
call
xor
in
xchg
ret
push
fwait
push
fwait
push
cltd
push
pushf
leave
push
pushf
lret
popf
int3
cld
sahf
int
sti
popf
int
sti
cltd
lret
xchg
ret
fbstp
cli
mov
mov
lahf
lahf
lahf
aas
nop
xchg
popl
fwait
lcall
xor
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
mov
mov
inc
mov
mov
ljmp
dec
xchg
movsl
sub
cltd
push
pop
lcall
pop
ljmp
popa
mov
add
leave
add
rorb
jbe
loopne
xchg
in
mov
push
movsb
into
push
movsl
int3
stc
test
cld
test
cli
cmpsb
iret
cld
cmpsl
into
test
iret
std
test
jmp
mov
int3
std
mov
mov
mov
xchg
xchg
add
cltd
cltd
add
add
add
xor
daa
sub
or
inc
bound
pop
xlat
jne
jno
mov
rol
rol
mov
ret
ret
inc
ret
mov
inc
mov
pushl
push
test
scas
push
mov
scas
dec
xchg
lahf
sbb
pop
jmp
popa
pushl
add
ret
add
into
add
add
fists
jnp
in
pop
test
negl
aam
sti
mov
cld
scas
sar
cli
mov
mov
cld
mov
std
mov
cld
mov
pushl
sar
cmc
movsl
jmp
mov
call
leave
int3
mov
mov
mov
xchg
xchg
or
add
add
sbb
outsb
outsb
jo
xchg
lcall
aad
xlat
jmp
xlat
fdiv
rcl
sar
lret
into
int3
dec
lret
lret
lret
lret
dec
lret
leave
inc
enter
lahf
scas
jmp
push
mov
lods
cmp
popa
jmp
add
mov
arpl
mov
add
rolb
outsl
call
add
fiadds
jae
call
jb
sti
scas
aam
mov
mov
std
mov
fdivr
std
mov
xlat
std
rcr
std
mov
lret
jmp
mov
call
lret
into
mov
lahf
mov
or
add
add
xor
add
add
pop
or
movb
jecxz
call
call
jecxz
fsubp
fsubp
fcmovnu
fdiv
fdivr
aad
std
int
into
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
add
add
fildl
jne
jecxz
jbe
out
xor
cli
mov
loope
inc
std
inc
loopne
inc
loopne
std
leave
fdivrp
std
inc
loopne
dec
std
lret
cli
mov
lret
lret
iret
mov
mov
xchg
adc
add
add
std
incb
std
add
std
std
add
div
or
out
jmp
jmp
in
sub
in
out
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsl
cmp
movsl
push
jmp
add
mov
fs
mov
add
int3
add
add
fiadds
ja
ljmp
cli
mov
in
cld
lret
jecxz
dec
out
std
int3
jecxz
dec
loop
dec
loop
dec
loopne
shl
std
shl
std
shl
shl
cld
fcos
out
mov
inc
ret
test
cmpsl
mov
cwtl
xchg
add
add
add
std
add
incb
idiv
testl
icebp
repnz
in
icebp
lock
out
lock
cmp
out
in
pop
loopne
loope
les
sti
mov
push
pop
jmp
add
mov
inc
add
enter
rolb
jno
fildl
je
in
jp
in
movd
negl
cld
mov
shl
cld
iret
in
std
shr
std
shr
call
jecxz
call
out
std
fsub
call
call
fucompp
std
fucomi
cld
shl
push
ret
in
lret
repz
xchg
xchg
and
xchg
xchg
add
std
cli
add
stc
add
sti
stc
add
cmc
cmc
or
aad
xor
mov
xchg
negb
add
add
lods
add
mov
add
lret
add
roll
jo
fldl
jbe
out
ja
in
sbb
sti
cld
fsubr
fldl2t
std
fldl2e
std
fldl2e
std
fsubr
std
fucomi
fucomi
fucomip
std
fucomip
std
fucomip
cld
shl
push
aam
out
iret
rcl
clc
stos
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loopne
add
mov
xchg
lods
jnp
repnz
ljmp
add
mov
add
int
insl
call
add
filds
je
call
sub
cld
shl
jmp
out
fsubr
fucomi
std
fucomi
std
out
std
jecxz
cld
shl
cli
shl
cld
shl
push
iret
test
out
mov
jmp
rcr
fcom
sti
mov
mov
fwait
lcall
cltd
lcall
mov
mov
add
enter
mov
lahf
jmp
sub
sahf
add
test
pusha
pushl
add
les
imul
add
fadds
jae
loopne
js
call
ss
cli
xchg
sti
lret
cli
lret
cld
clc
mov
aad
repnz
sar
lock
int3
call
mov
sar
call
shl
ljmp
in
mov
mov
xchg
add
add
add
int
add
shrb
loopne
xor
pusha
ljmp
add
mov
add
dec
or
rorl
je
ficoml
js
loopne
cmp
dec
xchg
ljmp
jmp
scas
std
loope
ret
cld
loopne
ret
cli
fnsave
lock
into
in
leave
into
into
shl
xlat
fcmovb
call
in
test
out
lock
jmp
lret
stos
stos
lods
adc
cmpsl
cmpsb
test
mov
ret
roll
ret
rol
pop
mov
stos
aam
dec
cmp
test
push
lods
and
ja
mov
inc
xchg
ret
push
mov
lret
gs
test
mov
out
mov
enter
lret
ret
int
rol
int3
mov
iret
shlb
fcom
aad
fnstenv
gs
jecxz
out
jmp
xor
div
cmc
and
repnz
fcmovnu
or
mov
int3
add
add
add
mov
roll
mov
stos
xchg
stos
je
ljmp
mov
sarb
mov
ret
cmpsl
leave
mov
mov
leave
int3
jp
into
iret
addr16
iret
iret
push
rcl
rorl
xlat
aad
rcr
aad
fcmovnbe
daa
fistpl
fcmovnu
fcoml
fsub
loop
loope
in
call
repnz
add
sti
testl
incb
std
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandb
leave
xor
into
lret
ror
and
aad
sbb
aam
adc
rorl
rcl
aam
aam
xlat
add
add
loopne
add
in
add
in
jmp
add
std
add
mov
add
ret
ret
mov
mov
mov
mov
push
rol
or
enter
leave
movl
lret
aam
add
fcom
add
add
aam
xlat
aad
add
fabs
add
aad
add
loop
add
fnstsw
add
out
add
repnz
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
ret
mov
mov
mov
stos
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
mov
mov
jmp
aad
cmc
aam
sar
ror
iret
cli
lret
int
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
jg
inc
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
into
aad
call
aad
iret
ror
dec
into
int
int3
lret
rol
mov
mov
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jne
jae
gs
inc
dec
dec
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
int3
lret
rcl
call
rcl
dec
lret
inc
mov
mov
test
lahf
popf
xchg
xchg
xchg
jmp
jo
xchg
pop
push
pop
dec
add
add
add
add
add
add
addb
test
jns
imul
movsb
push
push
push
stos
push
outsb
insb
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
fstpt
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
cltd
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
xchg
cwtl
fcoml
addb
jl
jge
jp
jns
jns
jns
jns
jns
jb
jb
push
push
push
cmp
aaa
popf
popf
popf
mov
scas
lods
repz
scas
scas
sti
scas
scas
scas
std
test
test
popf
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
movsb
movsl
cltd
je
jb
adc
adc
add
add
add
add
insl
insl
insl
pop
xchg
mov
mov
xchg
std
mov
lock
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
jo
outsb
orl
lcall
lea
call
popf
ljmp
test
mov
mov
mov
xlat
cmpsb
mov
addb
add
add
add
add
pop
or
scas
mov
cmpsb
sahf
movsl
decl
mov
nop
call
lahf
lahf
sti
sahf
mov
cwtl
call
push
push
push
jo
push
pop
outsl
insb
outsb
insl
xchg
subl
mov
lcall
mov
pushl
pop
mov
mov
jl
mov
scas
stos
insl
stos
stos
test
add
add
add
pusha
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cwtl
cltd
lcall
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
push
cld
xchg
pop
cmp
dec
jp
movsl
inc
js
scas
aaa
ja
mov
je
scas
pop
outsb
ljmp
sbb
mov
mov
scas
mov
mov
add
add
add
add
pusha
or
mov
in
movsb
test
cltd
xchg
cwtl
lcall
mov
mov
decl
orl
cld
xchg
pop
cmp
dec
jp
cmp
xchg
daa
imul
cwtl
maxps
mov
pop
push
pushl
sbb
mov
and
mov
stos
mov
lods
lods
scas
xchg
lahf
popf
sahf
adc
add
add
popa
pusha
popa
or
lods
mov
test
mov
test
test
cmpsl
cmpsl
lcall
pop
jp
mov
imul
sub
decl
adc
xchg
pop
decl
add
xchg
add
fwait
add
cmpsb
or
mov
jae
mov
sub
jge
leave
das
cmp
lret
pop
cwtl
inc
test
divl
test
sbb
add
add
pop
pusha
popa
or
movsl
test
jmp
scas
mov
mov
mov
mov
mov
movsb
xchg
lahf
decl
adc
mov
pop
incl
add
decl
add
xchg
add
lahf
add
cmpsl
add
mov
outsb
inc
cmp
dec
inc
mov
roll
call
inc
xchg
fimull
call
popa
popf
inc
cmpsl
mov
mov
mov
movsb
movsl
movsl
daa
std
incb
add
add
pusha
pusha
pusha
or
lahf
mov
ljmp
mov
mov
mov
ljmp
push
jl
nop
push
arpl
xchg
sbb
lea
push
decl
add
lahf
add
cmpsb
add
scas
add
jne
iret
dec
nop
fcomps
ficompl
ficomps
loop
mov
fildll
dec
test
cld
mov
mov
cmpsb
stos
movsl
xor
jg
add
add
dec
dec
dec
pop
jl
jl
pushf
cwtl
lcall
lods
scas
pushl
mov
mov
jmp
sub
imul
and
xchg
adc
add
popf
add
cmpsb
add
scas
add
mov
addr16
xor
fsubl
jmp
insb
stos
jmp
jo
ljmp
in
jno
call
test
std
mov
test
addb
add
dec
dec
dec
pop
insl
outsb
insb
bound
cwtl
cwtl
ljmp
mov
mov
mov
jbe
lcall
cmp
popf
sub
lcall
add
movsb
add
stos
add
mov
fs
or
xchg
jmp
jns
jmp
test
push
xchg
push
xchg
mov
test
push
lcall
add
sub
push
push
dec
pop
pushw
loopne
mov
mov
mov
ret
mov
sahf
jmp
inc
jg
mov
push
pop
jmp
add
mov
gs
mov
push
ja
loopne
mov
push
xchg
push
cltd
push
xchg
stc
lcall
clc
xchg
lods
inc
mov
lods
popa
lahf
mov
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
xchg
test
ljmp
pop
insb
lcall
add
mov
arpl
mov
add
and
push
mov
into
clc
test
sti
stos
iret
sti
stos
sar
std
lods
sar
sti
cmpsl
int
call
rol
test
popf
pushf
or
add
add
dec
push
push
aaa
jb
jb
test
int3
int3
out
int
cmc
leave
lret
int3
sti
enter
mov
mov
stos
pusha
mov
stos
inc
jg
mov
add
mov
gs
add
into
add
flds
xchg
push
xchg
cld
mov
mov
xlat
std
mov
xlat
mov
sar
ljmp
repz
lods
scas
mov
add
add
add
add
pop
or
aad
dec
loopne
jecxz
loope
ffree
fcmovnu
aad
out
shlb
test
jb
movsl
or
scas
add
mov
add
xlat
add
in
jl
lock
mov
sti
inc
loopne
inc
dec
std
enter
lret
std
out
mov
lret
mov
xchg
popf
pushf
pushf
sbb
add
add
std
add
std
add
jmp
out
sbb
jmp
xor
loopne
jecxz
mov
mov
mov
add
mov
fs
add
int
insl
fldl
jne
jmp
insl
mov
cld
ret
fdivrp
sti
shl
shl
call
out
aam
aad
std
xlat
call
push
fcos
fcmove
sar
mov
mov
and
add
add
std
std
add
std
add
incb
aam
aam
mov
pop
xchg
lahf
or
ljmp
add
add
rolb
jno
filds
jne
in
and
std
shl
fldl2e
fsubr
fsub
cld
fld1
std
xlat
out
cld
aad
push
enter
iret
xlat
sti
mov
popf
popf
das
add
add
int3
into
into
or
arpl
stos
add
mov
add
add
loop
ja
out
xor
cli
int3
loope
cli
lret
cmc
repz
repz
aad
lock
out
aam
in
ljmp
ljmp
test
add
add
add
aam
mov
jb
or
mov
insb
inc
pop
jae
lret
and
xlat
cs
loopne
pushf
clc
jecxz
mov
out
loop
lret
mov
loope
mov
lret
leave
faddp
iret
mov
jecxz
fistpl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
xchg
mov
xchg
fidivrl
jle
rol
lods
mov
mov
ret
nop
rol
leave
jge
vpunpckhqdq
int3
int
aam
iret
dec
xlat
cmp
das
jecxz
frstor
in
lock
in
in
or
std
std
incl
std
std
std
add
mov
jns
mov
mov
mov
mov
shrb
enter
aam
pop
rol
adc
rcl
or
loopne
or
into
int
stos
stos
stos
add
std
incb
incb
lcall
pinsrw
or
int3
int
add
std
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
leave
mov
ret
sarl
mov
insb
lods
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
std
rcl
sar
int
into
std
mov
mov
test
cmpb
push
pop
add
add
add
add
add
add
add
add
jb
jae
addr16
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
into
into
call
aad
dec
iret
iret
inc
mov
mov
scas
lods
lcall
mov
push
add
add
add
add
jne
jae
test
aad
jo
ret
popa
mov
push
outsl
jb
pusha
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cltd
lds
jno
es
add
add
add
add
je
jb
pushf
xchg
lcall
xchg
clc
xchg
test
test
push
dec
push
inc
mov
pushf
into
movsb
mov
mov
decb
lcall
stos
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsl
test
cld
mov
mov
xchg
xchg
xchg
cld
sahf
pushf
sahf
cmc
cwtl
cltd
lcall
push
push
imul
jge
mov
testl
xchg
pushl
jno
mov
mov
test
lods
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
fwait
lcall
lcall
xchg
mov
loope
jne
out
xchg
fs
push
jnp
lcall
ljmp
pop
jo
mov
insb
pushl
popf
lods
lock
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
popf
pushf
lahf
jmp
cmpsb
call
push
js
popl
decb
sbb
call
or
mov
sbb
pushl
and
inc
sub
lds
xchg
rcrb
subl
jae
push
mov
movsl
test
test
test
scas
mov
ljmp
mov
decl
or
xchg
push
decl
add
mov
adc
shlb
call
inc
mov
aam
call
dec
xchg
dec
lcall
movsb
movsb
mov
add
imul
movsl
mov
scas
pushl
mov
ljmp
ss
xchg
push
call
push
pop
call
add
lods
add
mov
push
xchg
fcompl
loope
mov
jmp
movsw
call
lcall
cmpsl
cmpsl
test
add
add
popa
arpl
mov
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
pop
pop
jmp
add
mov
dec
xor
jmp
outsl
stos
jmp
ja
in
jl
out
jge
push
jge
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
bound
lcall
add
pop
pushl
pop
insb
fmull
in
lea
push
xchg
push
cwtl
enter
enter
mov
movsb
movsl
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
sarb
ljmp
pop
jmp
pushl
add
vmread
in
outsb
lods
push
test
clc
lods
iret
cli
lods
sar
cld
scas
sar
std
lods
iret
jmp
leave
inc
mov
movsl
ds
std
incb
xor
inc
scas
mov
mov
aad
mov
aam
fnop
aam
out
leave
enter
xchg
jmp
add
ret
add
add
call
mov
std
mov
fdivr
cld
rcr
inc
cld
rcr
out
mov
ret
test
dec
addl
stos
add
in
in
or
jmp
out
outsb
movsb
daa
outsb
ljmp
add
int3
add
fiadds
ja
lock
cld
into
in
dec
in
std
shl
call
out
aam
push
leave
fcos
aad
into
in
lods
lods
scas
popa
jg
addl
add
add
incb
incb
lret
lret
shrb
mov
add
mov
add
loope
jns
cmc
push
cmpsb
cld
loope
out
out
cld
aad
sti
aam
stc
aam
push
leave
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
jg
jmp
lods
cld
out
mov
shl
call
mov
shl
out
aad
jmp
fcmovnu
scas
ret
ret
les
cltd
fwait
add
rol
or
popf
lods
xchg
dec
and
ret
int3
lret
mov
mov
int3
adc
int3
outsl
fxch
into
pop
dec
in
fistpll
out
call
sbb
rol
add
mov
lods
arpl
mov
les
les
rol
sbb
bswap
into
int3
or
aam
push
std
std
add
std
incl
stos
incb
rol
add
std
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
add
dec
popw
pop
jnp
jns
je
test
outsl
mov
push
stc
or
mov
mov
add
repnz
and
nop
cmp
out
pop
xor
cmp
repz
pop
sub
xchg
insb
aad
sub
lahf
xor
js
xchg
mov
push
jecxz
adc
adc
hlt
dec
push
jmp
cwtl
das
outsb
imul
clc
sub
xor
mov
and
rclb
add
lret
push
lret
subl
mov
jle
push
cmpsl
mov
add
lcall
mov
or
adc
xchg
inc
pop
or
jnp
pusha
insb
xchg
pop
fdivr
rol
jo
mov
or
and
xor
or
and
add
mov
mov
add
loope
mov
jb
lret
scas
imul
in
iret
dec
and
cmp
jl
loop
aaa
push
adc
call
sub
or
push
add
add
testb
in
arpl
adc
xlat
lret
repz
mov
xchg
and
enter
loopne
push
xchg
inc
scas
aas
xor
pop
int
xchg
push
push
add
or
dec
repz
pop
jb
or
lret
sti
cmp
push
and
divb
jecxz
cmc
jne
lock
cmp
or
arpl
inc
or
ret
and
pop
jmp
pop
push
inc
dec
cmp
aad
pop
sbb
hlt
imul
sti
ss
icebp
pop
stc
fnstsw
cmpsb
loop
rorl
test
sbb
add
push
lock
mov
dec
clc
push
fisttps
xchg
lret
lock
push
cmp
in
dec
or
lret
bound
pop
push
lods
test
hlt
jne
jle
push
outsl
mulb
pop
mov
cmpsb
adc
roll
inc
adc
pop
mov
push
orb
or
ja
sbb
aad
and
xor
xchg
push
mov
mov
movsl
movsl
xchg
sub
cs
mov
push
jne
loop
push
in
sub
hlt
xchg
mov
imull
sbb
sbb
xchg
gs
sbb
add
in
and
pop
push
add
inc
test
outsl
adc
mov
incb
mov
xchg
movntq
out
sahf
lahf
dec
cli
pop
jmp
cli
test
int3
scas
sub
sbb
fwait
add
outsb
in
clc
pop
into
mov
dec
pushf
inc
movsl
into
sti
lcall
loopne
in
inc
jb
or
sti
inc
and
int
data16
xor
inc
adc
addr16
pop
shll
dec
adc
jno
es
lods
mov
inc
orb
inc
lock
mov
xor
mov
ret
push
inc
jbe
adc
mov
nop
xorb
imul
lret
pop
lret
in
inc
cmp
mov
or
adc
nop
ret
add
stos
out
push
xor
sub
mov
out
jle
lret
push
and
pop
pop
xor
lods
mov
in
cmp
jmp
lret
fisubs
sub
fmuls
ljmp
adc
hlt
popa
aad
and
pop
div
cmp
adc
aad
xchg
pusha
pushl
popf
mov
pop
lret
sub
add
add
jl
mov
outsl
test
mov
mov
in
jo
and
shll
xor
mov
into
xor
lcall
sub
pop
sub
mov
shrb
jge
repz
push
fsubs
jne
pusha
nop
into
push
pushf
fwait
cmp
mov
jb
mov
jmp
scas
adc
fmull
cmc
fs
cmpsl
fnsave
imul
xchg
popa
push
pop
lds
sub
aad
sar
xchg
not
xchg
jle
ds
icebp
and
jo
inc
mov
aaa
pusha
lea
mov
ja
fmul
sbb
xchg
test
mov
out
jbe
ja
jae
out
and
jle
xor
mov
enter
popf
inc
push
mov
out
clc
jae
stos
lock
push
int
js
dec
mov
rorb
test
test
testb
out
xchg
clc
cli
bound
test
repz
fiadds
stc
jmp
aad
fdivrl
xchg
push
mov
lcall
int
xor
ret
je
or
rcrl
rclb
shlb
cmp
in
mov
shll
pusha
loop
jne
dec
cmc
adc
aaa
fdivs
nop
jno
addr16
jae
mov
mov
bound
cmp
fildl
xor
xchg
imul
pop
dec
mov
aad
movsl
fwait
into
jae
ss
lods
xchg
or
in
mov
sbb
xchg
cmp
shlb
or
mov
lahf
inc
jo
lods
mov
push
mov
pop
pop
jbe
sub
stos
jle
sub
jb
xor
inc
call
lods
es
test
mov
sbb
mov
les
js
sub
leave
lcall
adc
in
fsubrs
push
xor
adc
fisubl
mov
xor
inc
divl
roll
nop
lea
cmc
push
loope
xor
cld
add
into
push
out
mov
adc
pop
cmpl
lret
dec
pop
stc
adc
adc
adc
cmp
mov
jl
and
xchg
icebp
xor
lds
inc
fcompl
mov
mov
mov
xor
inc
lods
iret
data16
xchg
in
test
mov
add
push
sbb
cmp
das
sub
mov
jge
pop
out
sub
jbe
jnp
repnz
adc
jbe
mov
pop
je
cmc
jl
dec
test
jl
and
add
adc
pop
lock
jge
jle
ja
sbb
xchg
pop
mov
addb
jnp
mov
sarl
cmp
addl
push
pop
sbb
lahf
pop
and
bound
in
ss
xor
add
pop
lret
add
add
ret
cmc
aas
es
ja
inc
pop
hlt
js
xchg
cld
cltd
jnp
lret
sbb
cltd
xor
jo
shlb
ret
repz
aad
les
cmovbe
repz
push
adc
in
mov
mov
fmull
or
imul
mov
cmpsb
out
mov
mov
lds
aam
ds
pop
dec
jecxz
daa
lds
push
fidivrs
jp
decl
mov
arpl
lcall
in
stos
pop
ds
fdivrl
jbe
int3
lret
cmp
and
leave
sub
dec
dec
inc
jbe
sbb
shrl
sub
adc
push
sbb
dec
or
push
negl
test
mov
in
xchg
push
js
xor
jnp
test
mov
je
cwtl
mov
fstpl
mov
sbb
pusha
mov
iret
call
or
cmp
jns
add
es
cs
scas
xchg
sub
jns
dec
stos
add
push
push
shlb
pop
repnz
out
test
jb
cmpsl
mov
lds
sub
jle
dec
in
lahf
dec
imul
and
test
jne
test
inc
xchg
mov
pop
xchg
jmp
in
jmp
or
adc
mov
mov
jae
aaa
mov
sub
mov
sbb
faddl
int
std
aaa
into
out
sbb
sbb
mov
and
sti
cmpsl
mov
mov
pop
or
mov
imul
cli
xchg
pop
add
xorl
lcall
daa
cmp
cwtl
xchg
push
out
mov
pop
fwait
dec
inc
fnstcw
inc
fstpt
gs
dec
sbb
pop
popa
fcmovbe
push
hlt
mov
shrl
xchg
mov
leave
pusha
sbb
add
and
pusha
push
int
in
mov
loopne
jno
mov
shlb
adc
roll
sbb
mov
ljmp
push
jl
mov
push
out
in
xor
inc
sbb
mov
pop
cmp
mov
xor
mov
add
rep
push
es
popa
clc
add
mov
jl
jno
in
push
mov
dec
dec
jae
jae
jae
pop
push
lcall
aad
aaa
add
int
add
mov
xchg
mov
popa
daa
push
ss
dec
jbe
cmp
cmp
dec
cld
push
jmp
pop
mov
jbe
repnz
push
test
test
into
gs
cmp
stc
dec
jecxz
int3
addr16
mov
faddp
pop
rclb
out
jecxz
sahf
xor
jne
jo
jns
scas
inc
or
jg
pusha
sub
or
fmull
inc
mov
fdivl
jnp
xchg
mov
cmp
push
lds
xchg
sub
loop
mov
lea
fidivs
xchg
mov
pop
insl
jp
insb
add
dec
loopne
fldenv
aad
popf
jno
rorl
cmpsb
pop
into
gs
inc
mov
test
mov
jno
adc
ss
mov
push
mov
dec
aam
iret
clc
push
xor
mov
outsl
push
dec
fisttps
sub
pop
and
xchg
repnz
sbb
jle
fmuls
into
cmp
mov
dec
cmp
in
test
clc
adc
xchg
loopne
sub
orl
rclb
add
mov
sub
mov
fiaddl
xchg
lret
cmc
insb
add
in
leave
pusha
ficoms
fidivl
bound
orl
jp
clc
push
adc
mov
push
and
dec
out
into
or
inc
iret
xchg
xlat
outsb
lock
xor
jo
mov
add
je
cmp
adcb
in
sub
jbe
cli
dec
out
mov
popa
clc
testl
lret
bound
mov
xor
insb
mov
stc
pop
fidivl
sbb
mov
pushf
xor
lret
inc
daa
mov
rcll
inc
insb
ds
gs
push
xor
outsl
push
js
adc
push
sub
ret
or
inc
fsts
mov
inc
and
stc
nop
ss
or
dec
cmp
mov
outsb
pop
jl
and
and
mov
add
lods
fnstenv
mov
stos
daa
addl
mov
dec
das
mov
pop
insl
mov
pop
clc
popa
clc
sub
shrb
enter
adc
test
push
sbb
adc
aas
insl
add
int
arpl
loopne
pusha
shr
mov
push
hlt
xchg
out
loopne
icebp
pop
mov
mov
lcall
fs
sbbl
shlb
aam
mov
aam
cmp
ret
cmpsl
ds
out
neg
cwtl
or
jmp
out
xchg
inc
add
adc
and
outsl
xor
cmpsl
mov
les
mov
out
adc
enter
movsl
jmp
adc
push
in
adc
sub
aad
cmp
mov
adc
pushf
xor
test
mov
xchg
sub
fsubl
int
adc
loopne
in
pop
add
mov
pop
lds
iret
icebp
sub
imul
mov
sub
dec
xchg
mov
dec
enter
sbbl
inc
mov
jl
pop
mov
inc
sbb
mov
push
ljmp
jmp
cmp
rcrl
ret
movsl
dec
jecxz
das
aad
shlb
div
mov
enter
or
xchg
xor
mov
push
xchg
mov
ret
xor
mov
mov
inc
add
loopne
rol
pop
cmc
stc
fs
ljmp
lahf
jl
hlt
mov
cmp
aad
repz
ret
mov
dec
in
aam
jl
pop
pushf
xor
cmp
sub
lea
or
jmp
and
pop
lock
xor
or
cmp
mov
fprem1
mov
push
xor
cmp
pop
icebp
shrb
adc
mov
addb
ja
mov
dec
aas
shrb
or
les
mov
in
test
insl
out
xchg
pop
shrl
add
lahf
pop
xchg
add
mov
lcall
sub
dec
pusha
idivl
push
clc
dec
pusha
shrl
std
xchg
mov
inc
jb
cmp
mov
inc
jp
add
push
cmp
shrl
rcll
ret
ds
jecxz
xchg
aad
fnsave
test
sbb
pop
hlt
jp
xor
daa
pushf
and
or
mov
and
mov
inc
fidivs
mov
movb
aad
out
mov
into
sub
idiv
fnsave
lret
or
je
jns
out
adc
mov
xor
xor
push
ljmp
xchg
mov
jo
fnstsw
xlat
outsb
imul
push
movsl
cmp
cmp
or
jnp
mov
xchg
iret
xor
adc
cmpsb
enter
push
sbb
lret
push
jge
cmp
imul
iret
shrl
add
and
xchg
push
out
cwtl
jecxz
ret
mov
ja
adc
mov
imul
dec
add
cmp
dec
shlb
adc
push
bound
jl
cmc
push
jo
scas
push
cmp
xchg
mov
cwtl
das
and
add
cmp
mov
pop
mov
popf
das
js
jge
xchg
mov
add
out
js
mov
lods
pop
mov
or
pop
pop
sub
add
es
sahf
xchg
jp
arpl
dec
loopne
mov
mov
aaa
loop
jne
pop
hlt
add
and
jle
scas
inc
jno
push
ljmp
inc
faddl
mov
inc
fldenv
inc
inc
fisubl
sub
sti
cmpl
mov
les
rcrb
shll
rclb
lods
add
test
je
es
push
enter
das
test
jl
sbb
daa
in
stc
push
dec
lock
or
push
lret
lcall
inc
fs
je
adc
mov
mov
out
cmp
pop
insl
pop
push
nop
mov
jnp
sub
jne
mov
adc
shrl
clc
pop
repnz
movsl
outsl
add
stos
jne
les
sarl
sub
jae
mov
mov
xchg
loope
add
nop
daa
jnp
xchg
push
push
xchg
xchg
test
add
inc
mov
xor
xor
jnp
imul
pushf
mov
fcoml
lock
push
mov
rcll
pop
neg
xor
mov
sbb
std
push
and
mov
mov
mov
fistl
or
aas
pop
js
mov
cmp
mov
inc
fdivr
sbb
rorl
mov
mov
cmp
sub
sarb
rclb
adc
into
dec
jmp
popa
ffree
push
mov
lret
shrl
fisubs
lret
clc
and
aaa
scas
sub
fisubl
adc
fwait
nop
mov
xor
dec
das
dec
inc
push
stc
xchg
sbb
aas
inc
sbb
sbb
mov
jno
loope
mov
ljmp
dec
jl
lcall
stc
scas
imul
add
and
push
mov
sbb
mov
loopne
jo
mov
or
out
mov
mov
call
lods
mov
dec
mov
es
aas
push
lcall
cmpsb
outsb
dec
xchg
push
or
popa
int3
fwait
inc
leave
sub
and
sarb
xor
fldl
fimull
shlb
or
xor
jmp
stc
pop
add
cmc
pop
les
push
out
movsl
lods
mov
hlt
xchg
sub
pop
std
movsl
cmp
jp
orb
outsb
push
push
lock
pushf
mov
sub
cmp
pop
mov
pop
mov
fistpll
icebp
cld
add
mov
js
dec
stos
std
dec
mov
mov
sub
fiadds
mov
or
rep
cmp
es
xchg
cltd
jl
jo
fisubl
jo
push
xor
xor
mov
mov
mov
adc
sbbl
fs
mov
mov
pop
xchg
aad
xchg
int
mov
jg
mov
adc
ss
es
mov
adc
cld
xchg
mov
data16
scas
stos
xchg
lock
lcall
outsl
push
pop
ret
dec
loope
inc
icebp
mov
sbb
lret
jl
add
lock
loopne
out
adc
cmp
out
test
sub
cmpsl
xor
lret
cmpsb
cmp
lods
push
mov
inc
sbb
repnz
cmp
dec
test
jne
push
pop
fdivl
jb
sub
mov
movsb
mov
push
add
inc
xlat
ja
and
into
cmp
sbb
jae
xlat
arpl
pop
shlb
push
into
lret
pop
lea
push
push
out
into
int
cld
push
lods
ja
push
lcall
sbbb
dec
movsl
cmp
sub
pushf
sbb
mov
outsb
pop
lods
insl
add
jge
imul
pop
into
mov
pop
int
hlt
mov
out
in
test
or
cmp
leave
in
xor
mov
xchg
inc
fisttpll
adc
or
push
mov
inc
mov
imul
jns
mov
fidivs
mov
push
sub
dec
in
int
das
shll
dec
aad
int3
arpl
xchg
clc
test
mov
push
montmul
cmpsb
inc
pop
cwtl
das
push
scas
mov
stos
cs
lret
bound
mov
xorb
in
mov
jp
sahf
xor
and
inc
push
mov
or
idivb
daa
add
cmpb
outsb
xchg
mov
fildll
movsl
cmp
cld
std
xchg
out
jo
mov
stos
mov
and
flds
fwait
push
movsl
or
push
flds
sbb
imull
jp
pop
pop
inc
push
cmpsl
inc
jne
jns
xchg
xchg
fdivs
push
jne
jle
pop
cmp
cmp
dec
sbb
xlat
outsb
adc
aam
mov
lret
bound
hlt
push
out
in
pop
cmc
or
pop
mov
pop
mov
cmp
push
dec
adc
cmp
es
stos
inc
or
jp
or
sbb
jne
and
jge
xchg
mov
sub
cltd
rcll
add
stos
jae
cmp
adc
and
outsb
jmp
dec
fstl
sbb
sub
les
xchg
jb
js
ja
ret
lcall
mov
xchg
out
mov
les
cmc
xor
xor
lcall
es
xchg
sub
cs
sbbl
cmp
sbb
dec
xchg
pop
jno
dec
inc
inc
sbb
push
jnp
in
jno
pop
dec
int
cmpsl
lock
adc
push
mov
adc
stos
mov
repnz
popf
jnp
scas
inc
inc
pushf
jp
das
addr16
popf
push
mov
js
mov
cld
pop
pop
lock
sbb
ja
dec
jo
dec
dec
insl
hlt
mov
outsb
repnz
pop
jne
push
push
sbbb
je
sub
cmpsb
add
jno
jb
jbe
lcall
out
je
cmp
xchg
mov
shrb
cli
test
mov
popf
mov
shrb
fadds
pop
or
add
jnp
imul
daa
sbb
subl
jbe
xor
stos
inc
imul
pop
xor
dec
imul
push
mov
push
mov
xchg
mov
addl
mov
mov
adc
aaa
test
mov
movsl
push
test
sub
inc
cld
mov
mov
jno
fwait
xor
int3
stc
fwait
xor
in
inc
fnstsw
mov
xchg
jo
rcrl
ja
and
inc
add
gs
cmp
adc
mov
push
xor
mov
cmp
mov
mov
dec
loop
into
fs
ljmp
loopne
and
sbb
jae
push
movsl
adc
jno
into
lret
pop
cmpsb
cmp
bound
xchg
cs
sub
mov
lods
inc
sti
ss
xor
push
lods
xchg
in
es
test
flds
sub
fnsave
nop
daa
dec
std
lea
imul
inc
out
pop
stc
popa
movsb
cmp
mov
into
gs
out
iret
aas
xlat
outsb
scas
rorl
fwait
jae
mov
push
sbb
stos
mov
cld
xchg
movsl
fbld
sub
jne
add
push
popf
out
mov
notb
ds
hlt
lods
lods
xchg
sub
testb
xor
mov
dec
push
testl
inc
add
push
ss
clc
cmpb
test
mov
mov
or
pop
cmp
push
cs
xor
and
ds
pop
lret
push
pop
push
xlat
outsb
xchg
addr16
hlt
xchg
add
stc
xchg
cs
mov
dec
sbb
jge
or
loopne
aaa
into
cmp
movsl
cmp
pop
push
in
mov
xchg
xchg
sub
mov
daa
mov
sub
insb
add
adc
push
sti
fs
push
push
cltd
xor
inc
fdivs
rcrl
daa
mov
pop
mov
decl
and
pusha
jmp
mov
loop
jge
call
or
pop
mov
out
cli
inc
daa
mov
push
pusha
insl
add
jae
xchg
push
scas
iret
data16
aas
data16
lock
stc
mov
and
leave
mov
mov
test
adc
int
ss
out
xchg
xor
sub
dec
push
mov
xor
lea
pop
sahf
loopne
es
xor
inc
fildl
push
call
fucomip
gs
fbld
iret
xchg
imul
sbb
lods
ja
daa
test
lret
mov
inc
xchg
sub
andl
or
cmp
popa
nop
daa
push
out
and
enter
dec
jno
and
mov
sbb
fisttpl
mov
repz
mov
adc
stos
jno
push
push
cmp
mov
movntq
jle
push
mov
push
mov
push
sti
daa
add
ds
outsl
or
hlt
jbe
sahf
jb
pop
inc
xlat
mov
cli
inc
mov
or
sarb
std
push
adc
sahf
mov
movsb
lea
or
mov
je
fsubl
add
lods
xor
vpsrlw
movl
imul
outsl
sbb
fmuls
jge
repz
pop
adc
lock
test
cmp
jge
jmp
lods
push
or
test
push
test
clc
das
sub
jne
mov
jl
in
fistps
popa
fldl
lret
mov
lahf
shlb
sbb
mov
out
pop
testl
add
vpmacssdqh
lds
in
adc
mov
fistps
adc
lods
pushf
jns
es
fcomps
push
mov
sbb
pop
enter
daa
add
repnz
arpl
inc
pop
decb
or
pop
inc
and
jbe
sti
and
arpl
jno
aad
jno
pop
push
mov
mov
ja
ljmp
repnz
dec
int
hlt
ds
fldcw
jne
leave
xchg
jns
in
outsl
mov
sarl
mull
push
enter
les
mov
or
lods
jnp
pop
in
pop
outsb
popa
popf
xor
cmpsb
insl
sbb
sti
dec
lahf
sahf
mov
sub
lods
pop
jne
mov
inc
xor
aaa
jge
xchg
sub
sahf
mov
push
scas
insl
test
inc
lds
jne
shrl
outsl
mov
mull
orl
aas
into
xorl
js
xchg
xchg
xchg
adc
mov
mov
out
adc
aaa
neg
outsl
fstps
mov
cli
stos
inc
sub
outsl
xchg
insb
orb
dec
stos
mov
fcompl
or
rolb
cltd
add
movsl
cmp
and
fnstenv
imul
pop
mov
ljmp
adc
cmp
inc
out
push
dec
movl
inc
mov
xchg
shlb
popf
outsl
jp
imul
cmpsl
mov
jne
push
in
das
xchg
add
xchg
dec
jl
xchg
mov
mov
mov
xchg
jmp
scas
lods
repz
out
arpl
push
pop
rorb
scas
and
jae
jle
jnp
jns
or
loopne
pop
pusha
loope
xchg
jp
jns
sbb
cmp
mov
xlat
ret
subl
pushl
sub
push
mov
push
jns
sti
dec
jno
sub
insb
stc
push
cmpsb
nop
daa
fdivs
stc
dec
stc
jmp
fdivl
mov
std
jns
das
push
fisubrs
inc
inc
arpl
gs
dec
int3
push
sub
insb
je
or
dec
xor
outsb
dec
and
xor
inc
mov
pop
test
jns
stc
cmpb
cmc
mov
rcll
stc
or
into
add
leave
pusha
add
int
jecxz
sub
mov
int
adc
in
ja
fildl
and
adc
imul
mov
rcrl
jmp
dec
frstor
stos
inc
int3
and
pop
mov
mov
cli
scas
jl
or
nop
xchg
adc
jns
movsb
jae
jle
dec
pop
idivb
sbb
xor
mov
fsubs
jmp
repnz
jns
cmp
leave
xchg
inc
fildl
mull
xchg
mov
movsb
pop
xor
and
faddl
xchg
dec
mov
pop
test
and
jns
xor
fstpt
pop
inc
nop
sbb
mov
stc
roll
cmp
aas
cmp
stc
nop
mov
cmp
jno
cmpsl
nopl
in
xchg
push
push
flds
jmp
pop
stos
jno
mov
mov
push
out
xchg
or
movb
or
icebp
jno
cld
js
mov
sub
repnz
int
sub
cmp
cltd
xor
ljmp
cmp
pop
sbb
or
inc
in
gs
add
pop
data16
inc
mov
xchg
lcall
push
ds
fwait
mov
sbb
sbb
rcrb
rolb
dec
in
stos
cvtdq2ps
adc
inc
adc
shlb
lods
pop
out
and
sbbb
scas
xlat
xchg
fmull
xchg
jle
cmp
ror
inc
xor
mov
mov
enter
fcomps
mov
adc
bound
mov
push
cmp
push
rorb
divl
inc
shll
xor
loop
add
leave
loop
in
add
lret
cmp
add
sub
add
jl
sub
imul
pop
lock
loopne
in
insl
fwait
hlt
adc
pop
lcall
shr
fbld
push
fwait
fwait
adc
lahf
pop
inc
jle
shl
add
and
sbb
dec
sub
pop
mov
fadds
aam
add
movsl
sub
nop
push
cltd
or
lret
xor
adc
xor
xchg
pop
push
popa
jbe
adc
sub
iret
dec
mov
xchg
sti
call
lods
xor
lods
addr16
inc
js
idiv
mov
lock
xchg
mov
pop
in
cmp
jmp
push
inc
sahf
in
mov
dec
jmp
jle
cmpsl
fidivl
pushf
fcomps
jno
cmp
jecxz
mov
sub
rclb
pop
leave
pusha
cmp
mov
pushf
jmp
push
xor
test
addr16
arpl
inc
jo
sbb
daa
fmuls
sti
lcall
cmp
mov
arpl
es
gs
push
pop
mov
loop
jle
fsubs
das
jl
pop
sub
xor
inc
cltd
inc
arpl
jmp
cltd
fildll
jbe
into
gs
js
and
adc
and
pop
test
inc
shll
in
js
and
cwtl
pusha
mov
daa
adc
and
scas
mov
mov
push
push
jnp
in
popl
dec
push
xchg
pop
hlt
xor
push
sbb
mov
xchg
mov
xor
inc
sbb
and
shll
mov
fs
in
lcall
pop
mov
je
push
pushf
and
pop
cmp
sbbl
push
push
xor
xor
pop
test
sub
push
repz
pushf
pop
sub
mov
pop
and
sbb
aam
mov
xchg
push
mov
cmpsl
adc
shll
push
pushw
add
mov
sub
jbe
xor
cld
pop
cmp
sub
or
pop
pop
mov
sub
sbb
mov
dec
loop
push
inc
ds
mov
imul
cli
jne
test
and
nop
dec
inc
push
xchg
cmp
aad
loopne
mov
enter
stc
push
lret
icebp
loop
push
mov
rcl
into
xchg
xor
jp
push
sub
enter
mov
cmp
or
or
addr16
ficoms
and
iret
data16
mov
insb
adc
mov
and
xchg
sub
lds
xor
adc
inc
mov
xchg
push
lods
push
push
push
pop
jae
jmp
jmp
push
icebp
jmp
jnp
sbb
cmp
pop
shrb
sub
repnz
clc
sbbl
lret
fimuls
mov
mov
mov
insl
or
adc
mov
outsl
or
cmp
ficomps
repz
add
xchg
adc
loopne
mov
push
fists
stos
xor
add
xchg
push
jne
pop
cmpsl
not
les
or
loope
cmp
sub
orb
xchg
dec
inc
xchg
cmp
sbb
cmp
femms
aas
sbb
adcl
imul
stc
loope
mov
cmc
inc
mov
fldenv
jno
sub
add
jecxz
inc
jae
xchg
pop
xor
mov
jns
cld
push
pop
scas
aas
fistps
andl
enter
in
ret
mov
cmc
xchg
insb
add
xor
xor
out
dec
lods
xlat
fdivrs
ret
movsl
mov
xor
popf
mov
inc
xchg
lret
shrb
sub
add
mov
or
mov
dec
loope
stos
aad
and
sub
mov
add
ds
clc
inc
xor
and
adc
push
cmp
mov
mov
hlt
xchg
idivl
adc
inc
scas
pop
mov
lahf
mov
outsb
mov
lds
push
iret
xchg
push
or
sbb
jmp
cwtl
das
pop
or
sarb
mov
insl
inc
adc
dec
loopne
xchg
add
cwtl
insb
lods
inc
sahf
mov
add
jecxz
loopne
pop
imul
je
repnz
imul
sahf
push
in
iret
stos
dec
sub
jne
inc
sbb
mov
jno,pn
inc
xchg
inc
insl
hlt
mov
inc
add
push
in
xchg
ficomps
pop
repz
push
in
mov
pop
adc
cmp
dec
movsb
repz
adc
cmp
jae
cld
cmp
movsl
and
rcll
aas
sub
lcall
inc
loopne
xchg
xor
push
mov
or
sahf
sbb
addr16
mov
pop
cmpl
testb
repz
or
jbe
xchg
pop
lods
cmp
sbbl
and
int
mov
pop
test
stos
movsl
pop
les
adc
pop
lea
lea
lods
aad
adc
jns
xor
xlat
mov
pop
cmp
mov
stc
iret
pusha
testl
mov
or
retw
cmp
or
popf
in
fstpl
push
bswap
arpl
sub
subl
push
pop
jne
mov
push
in
les
stos
adc
push
adc
nop
jge
mulb
movb
or
into
outsl
insb
add
sbb
fcomip
xchg
xchg
cmp
pop
mov
icebp
jnp
cmp
outsb
jb
gs
arpl
jne
jne
sti
cmpsb
sahf
test
pop
in
lods
adc
dec
imul
push
subps
push
jecxz
mov
mov
xchg
inc
loop
jmp
push
scas
sti
xor
xchg
negb
push
nop
pusha
inc
popf
lahf
cmp
mov
mov
cs
sub
pop
xchg
jbe
dec
pop
add
cltd
and
repz
adc
loop
jne
filds
jo
popl
push
inc
xchg
jge
repz
sahf
pop
dec
xchg
dec
ret
mov
dec
hlt
sbb
mov
push
sbb
xchg
je
hlt
sahf
jg
cmpsb
movsb
and
pushf
lock
cli
leave
mov
mov
mov
xchg
push
sbb
mov
mov
jo
mov
jno
sbb
add
mov
xor
xchg
dec
mov
sbb
test
pop
adc
shll
pop
loopne
js
shrl
test
xorb
ljmp
notl
lahf
mov
or
add
movsl
jmp
rol
fcomps
shl
mov
popf
icebp
mov
lcall
lea
pop
out
jae
mov
mov
mov
dec
or
add
add
scas
dec
cltd
push
jo
movsl
shl
test
mov
inc
jmp
std
sbb
pop
sti
mov
fists
pop
jae
arpl
movsb
mov
pusha
fwait
and
and
mov
rcrl
mov
jo
jbe
cmp
test
fnstenv
out
and
jnp
jo
imul
mov
fisubs
testb
cmp
pop
ljmp
stc
shl
arpl
leave
or
nop
mov
push
nop
jmp
xor
fs
jns
popf
inc
mov
sarb
movsl
and
bnd
movsl
in
pop
or
push
dec
mov
cs
js
push
mov
sub
mov
pop
mov
mov
mov
jp
arpl
mov
dec
and
fsubs
dec
xchg
cmp
pop
mov
dec
pop
push
push
pop
sbb
pop
out
mov
adc
iret
in
jno
pop
icebp
adc
cmpsb
xchg
dec
insl
cwtl
push
sti
dec
mov
hlt
sbb
cwtl
xor
adc
fldenv
inc
rcr
inc
rolb
gs
mov
and
jmp
and
xor
cli
cmpsl
andl
mov
inc
out
add
cmc
std
pusha
mov
clc
cmp
jecxz
mov
jg
dec
sub
iret
fs
inc
rorl
mov
outsb
test
mov
outsl
push
inc
stos
test
push
in
arpl
cmp
fisttpl
negb
jae
test
xchg
mov
add
jbe
mov
sub
jecxz
jge
ret
sub
and
mov
jns
loopne
inc
push
call
and
sbb
jo
push
clc
repz
js
push
inc
jp
jno
mov
cmpsl
hlt
push
in
push
fdivrl
mov
je
pop
aam
mov
cs
rorl
dec
loope
push
or
xchg
inc
or
or
scas
or
das
ficomps
cli
xchg
add
xchg
insb
lods
jns
aaa
sbb
fildl
js
inc
push
xor
lcall
or
loop
dec
fstpl
mov
sbb
xchg
imul
ret
add
xchg
xchg
adc
stc
jmp
lahf
mov
enter
fwait
sbb
cli
mov
mov
sub
mov
adc
inc
jmp
cmp
push
mov
adc
mov
enter
int
mov
push
add
and
jnp
inc
cmp
inc
mov
mov
gs
mov
neg
or
lods
xchg
adc
push
jmp
mov
mov
decb
mov
or
nop
daa
push
shl
scas
popa
jle
xchg
call
inc
push
outsl
mov
push
adc
stc
nop
les
sbb
jmp
xchg
aas
icebp
push
popf
out
mov
icebp
mov
mov
jo
fs
jno
add
jge
into
in
mov
test
sbb
dec
not
es
cmp
xchg
inc
mov
pop
mov
inc
inc
mov
cmc
nop
daa
daa
outsl
inc
test
mov
jge
les
int3
imull
mov
loopne
mov
xor
xchg
mov
add
jbe
push
add
sarl
push
pop
in
bound
sub
aam
mov
sbb
xchg
int
add
lret
pushf
adc
hlt
pusha
mov
jo
inc
lods
mov
stc
ja
add
mov
stos
mov
into
decl
imul
push
xor
mov
jo
enter
shr
push
rol
sahf
leave
shrl
jo
mov
cmp
shl
in
add
sub
and
je
stos
aam
aad
popa
cmc
xor
inc
leave
xchg
out
in
jecxz
test
shrl
xchg
repz
leave
cld
leave
int
push
dec
dec
lock
gs
lcall
mov
sub
xchg
push
xor
bound
mov
shll
pop
add
push
popf
sub
iret
repz
scas
cltd
xor
cmpsl
mov
xor
stos
movsb
flds
popa
xchg
adc
xchg
sbb
mov
data16
xchg
cwtl
sbb
mov
ljmp
out
pushf
stc
out
cltd
sub
add
outsb
imul
das
lret
push
mov
lahf
jge
xchg
sub
leave
daa
xchg
push
dec
xchg
jecxz
inc
adc
or
dec
lret
inc
xchg
fistpll
aaa
jns
xor
and
sti
adc
inc
shrl
sub
mov
icebp
lret
lret
ret
add
xchg
mov
push
ret
pop
ret
imul
loop
adc
pop
pop
gs
xchg
inc
sub
fnsave
stos
out
scas
sti
pusha
mov
jge
mov
jge
cmpsl
adc
dec
push
push
ljmp
xor
setbe
xor
mov
and
scas
xchg
icebp
mov
rorb
lods
lea
mov
mov
stos
shl
fs
or
lret
popa
pop
mov
push
int3
mov
adc
cltd
je
add
mov
loope
jns
xchg
push
aad
ret
xor
aam
leave
pop
xor
xchg
neg
les
xlat
dec
mov
adc
push
jae
cmp
add
add
fiaddl
test
adc
test
pop
scas
lcall
cld
mov
scas
dec
out
push
xchg
dec
lret
fildl
push
scas
adc
xlat
sub
ljmp
ret
adc
lock
cmp
sbb
dec
jo
adc
hlt
cmp
and
mov
pop
scas
insl
mov
xchg
dec
jg
sub
ds
mov
dec
jecxz
mov
or
push
or
push
cmp
mov
sbb
ffree
cmp
fcmovnb
sub
adc
shll
fwait
xor
mov
push
bound
mov
inc
xorl
cwtl
jne
sahf
data16
xchg
push
dec
sarb
lds
push
cld
or
loope
and
sub
je
fbstp
and
ja
bound
jecxz
jnp
pop
mov
scas
mov
mov
push
jmp
jmp
xlat
cwtl
sub
mov
mov
ja
lea
xor
adc
add
push
adc
inc
sarl
gs
out
test
sub
cmpsb
pop
add
roll
cld
sti
leave
outsl
add
rcpps
pop
sbb
pop
inc
arpl
xor
mov
push
adcl
or
dec
mov
iret
inc
inc
and
dec
popf
icebp
enter
scas
sub
jmp
push
dec
sub
lods
in
push
dec
xor
addr16
xor
mov
mov
mov
or
es
mov
push
daa
pusha
divl
pop
repnz
mov
dec
push
scas
xor
jns
shll
cli
mov
add
stos
dec
loop
ds
add
std
repz
cmpsb
and
shll
mov
cmc
pusha
push
in
push
cmp
jne
ficoms
into
sbb
lods
lea
jb
scas
xor
fildll
push
jmp
xor
pop
test
xchg
andl
mov
stc
lods
inc
sub
cmp
sub
popa
jg
push
out
jp
call
or
repz
popf
and
xchg
sub
push
pusha
testl
aam
dec
dec
repz
dec
stos
aas
iret
ss
or
js
test
fdivrl
gs
stc
or
xchg
mov
dec
cmp
inc
jne
pop
mov
mov
or
stos
adc
adc
stc
call
push
ret
bound
xchg
fsubr
loope
std
sbb
inc
mov
dec
ret
pusha
hlt
into
sbb
xchg
sbb
in
pop
xor
negl
jb
add
lahf
mov
mov
je
sbb
fisubrl
xorl
and
leave
or
mov
popf
stc
sarl
sub
in
dec
mov
dec
loope
sub
inc
ja
iret
call
cmp
clc
sub
sub
dec
rcll
push
jno
test
add
xor
xchg
cmp
cmp
inc
sbb
mov
ret
iret
out
bound
add
lock
inc
std
lret
iret
push
std
call
in
rol
mov
pcmpeqd
push
movsl
add
or
mov
pusha
xor
mov
mov
out
ljmp
out
scas
loope
fwait
in
fdivp
cmpsl
ret
xchg
mov
inc
push
cmpsl
sbb
sub
rcrl
imul
roll
popf
mov
cmp
jb
rcrb
xchg
call
aas
in
push
push
ds
cmp
jmp
iret
sub
inc
fs
cmp
rcrb
pushf
scas
leave
fsubrs
scas
popa
out
addr16
test
mov
movsb
xchg
ja
nop
dec
ficomps
imul
mov
daa
cmpsl
pop
xor
mov
pusha
lret
loope
mov
pop
mov
scas
xchg
add
or
out
jg
pusha
into
popa
sbb
ja
in
xchg
add
arpl
inc
sub
faddl
mov
mov
addb
sahf
jbe
and
cmp
movsb
jmp
cwtl
imul
sbb
inc
dec
jae
ljmp
pop
add
ss
and
pop
arpl
clc
xchg
cwtl
jl
mov
ret
notl
rcrb
adc
sub
add
stc
dec
shll
adc
mov
fptan
inc
xlat
aad
call
jl
dec
inc
enter
imul
enter
mov
bound
into
cld
in
fsubl
push
xchg
pop
leave
repz
or
test
popf
xor
pop
call
aaa
xor
cmp
test
js
sub
sbb
scas
sti
xchg
sbb
mov
movsl
cmpsb
dec
mov
popa
add
mov
hlt
ret
mov
sahf
inc
jmp
je
aam
inc
mov
sti
pop
enter
inc
es
push
lock
lds
xchg
pop
jmp
lcall
aad
pushl
inc
sahf
add
cmc
push
outsl
insl
mov
adc
aad
lcall
xchg
add
xor
xor
lcall
lcall
dec
nop
test
jns
xor
inc
cmc
jnp
loop
loop
mov
xor
scas
or
xlat
push
ss
sar
dec
and
iret
xorb
sub
icebp
or
mov
inc
movsb
stc
mov
cli
mov
mov
xchg
out
adc
jl
sub
rcl
dec
add
loope
cmp
or
cltd
and
pushf
jl
sub
lret
cmc
push
mov
sbb
mov
movsl
sbb
popf
sub
cld
mov
pop
sub
jbe
insl
fnstsw
push
mov
sbb
loope
cmpl
add
nop
int3
fs
xchg
call
insb
add
leave
mov
or
push
fnstenv
and
pop
imul
fwait
movd
enter
in
pop
adc
repz
mov
or
jnp
orl
aam
call
out
inc
or
std
xorl
loopne
cmp
ds
sub
mov
lahf
popa
outsl
xlat
push
mov
xor
mov
dec
cmp
mov
popl
dec
ret
inc
fwait
mov
mov
dec
cmp
xchg
loope
ret
jnp
and
or
scas
mov
inc
dec
jbe
inc
push
jb
aad
cwtl
sbb
lret
mov
in
je
and
sub
mov
ss
xlat
shrl
adc
outsl
jb
pop
mov
lods
sbb
hlt
adc
add
xor
out
fadds
out
mov
dec
ljmp
pop
jo
jne
cmpsb
cmpsb
xor
mov
bound
mov
std
cmp
imul
add
pop
mov
push
movsl
leave
mov
imul
lds
adc
mov
adc
jg
lods
xchg
int
movl
dec
xorl
inc
sbb
js
rcrl
adc
jo
jno
or
gs
mov
dec
mov
lahf
mov
or
clc
jo
push
fadds
stos
dec
jae
test
hlt
and
pop
orl
scas
jp
lret
scas
mov
xor
xchg
jge
and
int3
fidivrs
sub
inc
cmp
out
test
push
and
adc
sbb
jo
jg
call
and
xor
hlt
or
movsl
mov
fwait
dec
jbe
clc
stos
jae
or
push
xchg
mov
xchg
movl
and
mov
mov
sbb
out
out
js
xchg
adc
in
call
mov
add
xchg
or
dec
ss
aas
pavgb
pop
pushf
testl
ret
cmp
loop
outsl
adc
push
imul
add
stos
add
mov
aas
js
fstpl
sub
mov
out
mov
xchg
mov
jmp
aas
clc
cli
cmp
sub
ret
rol
fs
mov
movsl
push
sbb
or
cmp
and
sbbb
push
mov
test
and
mov
hlt
mov
dec
loope
mov
and
push
sbb
sar
jb
and
pop
iret
add
out
icebp
push
cs
data16
fistl
ret
pop
sub
int
out
pop
adc
int
lock
cmc
adc
inc
loope
cltd
xor
sub
mov
shl
inc
push
fiadds
arpl
xchg
fsubl
xlat
shlb
jbe
sbb
jp
mov
js
cld
mov
push
or
push
int3
mov
int
xchg
cmpsb
sbb
mov
jp
add
int
test
nop
subl
pop
sub
jb
and
dec
loope
inc
in
jp
jmp
imul
add
mov
addr16
inc
into
sub
int
inc
push
test
and
sub
leave
jg
out
test
bound
xchg
repz
aaa
js,pn
jo
lret
mov
aas
jg
adc
in
and
add
out
push
in
pop
das
lds
sub
xchg
stc
xor
mov
mov
ret
fwait
xchg
popf
insb
loop
wbinvd
and
xor
cmpsb
adc
mov
rolb
mov
adc
inc
pop
jecxz
mov
jmp
popa
and
adc
out
or
cmp
xor
adc
repnz
mov
inc
fsubrs
mov
imul
sub
lea
lret
push
cltd
mov
adc
out
rcrb
pop
sbb
jg
rorb
push
sbb
daa
pop
out
pop
jp
aaa
mov
loopne
dec
adc
out
add
dec
or
stos
out
push
inc
cmp
cld
xchg
je
xchg
sub
or
dec
xor
push
jno
xor
dec
mov
pop
in
pushf
movl
stc
pop
push
push
call
jne
lret
and
mov
pop
fidivl
lahf
cmc
cwtl
pop
adc
lods
xchg
aas
jne
jecxz
dec
repz
stc
mov
dec
add
dec
cmpb
sub
jge
in
addr16
add
subb
lds
mov
mov
sti
aaa
fidivs
fcomps
incl
fnstsw
jne
movsb
mov
enter
or
mov
lock
adcb
adc
lret
ljmp
test
lahf
idivb
sti
push
xchg
xchg
flds
int3
shl
adc
fidivs
mov
cld
in
xchg
push
xchg
cmpsl
je
pop
stos
mov
mov
add
inc
pop
loope
sbb
frstor
push
or
dec
add
cltd
xor
adcl
jp
mov
idivb
add
subb
mov
aad
xorl
rcl
insb
mov
fcomi
aas
inc
gs
icebp
dec
pop
movsl
xor
out
xor
les
ja
call
adc
addr16
xor
in
cwtl
sahf
outsl
add
rclb
and
jbe
stc
lahf
js
xchg
subb
lods
call
popa
fistps
mov
jbe
shll
sub
push
or
xor
mov
arpl
mov
shrl
jo
mov
inc
mov
std
out
push
das
sbb
cltd
jle
arpl
shrb
stos
mov
sbb
aas
mov
clc
push
out
rol
pop
add
lods
xchg
mov
loope
jb
jl
rcll
push
out
test
es
or
scas
inc
mov
dec
int3
lret
and
aaa
add
mov
cmpsl
loopne
nop
jb
jb
clc
pop
jne
pop
andl
xchg
cmpsl
lods
inc
incl
cmovs
aad
or
ljmp
flds
outsl
add
jbe
lock
rcrb
and
stos
jae
inc
movsl
mov
mov
sti
call
jno
dec
lret
jmp
jl
jmp
push
in
into
ret
fsubs
cld
shr
mov
les
inc
mov
imul
mov
shr
and
xchg
orb
lea
inc
fisubs
fisubl
xchg
gs
addl
mov
call
adc
push
movsl
cmpsb
jne
ss
xchg
fcoml
xor
fistpll
push
jno
cmpsb
mov
insl
fcmovnbe
xlat
outsb
jne
or
jbe
notb
cmp
bound
add
fnstcw
aam
in
popf
enter
mov
inc
mov
inc
jge
add
inc
sahf
leave
pop
aam
icebp
into
fcomip
out
adc
or
outsl
pop
mulb
adcl
xlat
ss
lea
sahf
insl
add
cmp
in
mov
lahf
sti
cmpsl
insb
cmp
cmp
jae
adc
push
daa
mov
lods
sarl
jae
push
fnstsw
sub
xor
mov
inc
jmp
dec
xor
inc
xchg
sbb
mov
shl
add
push
cmpsb
out
mov
std
enter
push
cmp
adc
roll
lds
and
aad
mov
xlat
notb
movsl
nop
fs
add
and
sti
hlt
fbld
xchg
mov
mov
and
pusha
div
cmp
push
push
ds
in
push
adc
sbb
add
ja
mov
outsb
cwtl
lcall
lret
inc
xlat
cld
xchg
jns
push
out
test
sbb
mov
cmpsl
lock
out
and
inc
xor
sub
lret
push
push
imul
pop
rcrl
imul
jbe
lret
dec
rcll
repnz
jp
data16
add
inc
ja
push
scas
repnz
and
mov
fidivrl
sub
vcvttpd2dq
clc
dec
mov
mov
filds
xchg
lahf
push
out
test
add
push
add
adc
icebp
push
leave
out
sahf
mov
push
js
mov
push
mov
lea
nop
dec
lcall
inc
pop
mov
ljmp
loope
aam
out
or
xchg
pop
xchg
imul
fcmovne
arpl
pop
sbb
xchg
mov
in
pop
push
sbb
add
aad
leave
int3
add
int
jbe
push
pop
in
pop
loope
dec
ds
mov
xchg
roll
jbe
hlt
stos
sarb
addr16
and
test
mov
sarb
add
or
jno
pusha
sub
adc
push
jne
pop
push
add
stos
push
fstpl
sub
leave
fsubrl
in
cmc
aaa
icebp
sahf
jmp
sbb
call
inc
xor
int
lahf
push
push
adcb
cmp
xor
cmpb
mov
pop
addb
retw
pop
sbb
shl
sahf
loope
push
jmp
ss
repz
orl
mov
clc
xchg
pop
rorl
jecxz
lret
fisubrs
sbb
lret
std
mov
icebp
or
into
cld
mov
hlt
sar
adc
xchg
push
popa
fmull
insl
adcl
stos
lcall
imul
iret
jle
or
aam
xlat
leave
and
je
inc
pop
xor
movsb
mov
mov
pop
adc
andl
addr16
mov
mov
and
push
cmp
sbb
stos
test
cmp
sbb
dec
push
inc
fdivrl
sbb
pop
test
insl
rorl
or
jb
inc
xchg
sbb
xchg
xor
shr
out
out
xchg
or
lahf
dec
add
xor
adc
imul
cld
pop
shrl
mov
icebp
xor
rorl
cwtl
jns
cli
mov
pop
mov
out
xchg
mov
push
push
sub
int3
outsl
lds
xor
imul
xchg
cmpsl
cmp
in
sbb
sub
jg
aaa
mov
out
xor
jbe
push
mov
movsb
aas
clc
test
popa
sub
cmp
xchg
sbb
adc
push
icebp
add
hlt
push
jecxz
sub
xchg
pop
aam
je
push
cmc
dec
xchg
pop
rcrl
jl
adc
mov
je
out
xchg
int3
pop
mov
inc
test
insl
add
js
subb
into
sub
jns
adc
scas
jnp
fldcw
pusha
jnp
roll
add
jno
jbe
cmp
cmp
dec
xchg
sti
out
inc
test
int
aam
in
dec
cmc
mov
push
in
mov
mov
mov
loopne
push
xchg
add
push
sarl
jae
movsb
popf
in
fdiv
mov
clc
in
stos
xchg
mov
jae
inc
mov
scas
mov
bound
add
iret
andb
adc
cmp
sub
in
sti
mov
jge
cltd
xlat
addb
mov
mov
add
push
xchg
mov
imul
mov
mov
insl
jnp
jp
in
das
add
dec
ds
or
mov
push
aas
add
inc
fld
lcall
movsb
test
cltd
pop
je
mov
push
or
aam
add
sahf
xor
fwait
pop
out
push
mov
or
mov
add
jmp
xchg
cmp
in
insl
notl
rcrl
lea
popa
and
pop
adc
lods
sub
es
repz
mov
cld
cmp
sbb
loop,pt
outsl
call
bnd
dec
loop
incl
cmpb
cli
cmp
and
cmp
dec
jecxz
cmp
lea
loopne
subl
mov
xchg
dec
dec
negb
cmp
mov
mov
sub
lods
imul
sbb
aas
push
jb
hlt
xchg
mov
adc
xchg
mov
mov
loopne
mov
mov
pop
cmp
out
mov
add
insb
add
mov
lock
and
jl
mov
add
xchg
sbbb
mov
frstor
sbb
and
cmp
and
mov
popa
call
xchg
mov
rep
dec
mov
in
enter
jg
fwait
divb
into
cmpl
nop
push
pop
inc
sbb
push
sub
das
xchg
repz
stos
pop
xchg
dec
xor
andl
test
sub
xor
dec
sub
jle
inc
dec
fisubl
orb
sbb
dec
cmc
push
rcll
mov
jbe
add
xor
cmp
xor
xor
xchg
aas
sbbl
mov
xchg
call
sbb
jne
popa
or
lret
xor
mov
push
sbb
gs
mov
int3
mov
xor
movb
pop
lods
bound
xchg
stc
adc
dec
xchg
sub
push
mov
outsb
mov
push
cmc
mov
cmp
pop
ror
xor
jg
sbb
mov
ljmp
jne
fcoml
or
mov
or
inc
call
push
push
rclb
mov
lods
push
pop
sbb
dec
inc
pop
sti
cmc
arpl
inc
xchg
push
cmpb
in
js
push
add
imul
mov
inc
and
data16
fs
sti
or
jb
xor
xchg
sahf
dec
cmp
imul
mov
jbe
inc
idivb
in
ja
push
popf
mov
std
or
or
fucomp
aas
inc
pusha
mov
push
fs
mov
cmp
jns
add
push
xchg
mov
jns
and
fwait
incl
sti
xor
lret
outsl
jp
outsl
into
mov
dec
inc
stos
subb
or
jo
insl
loop
lea
or
sbb
stos
cmpsb
insl
fmul
mov
test
or
add
into
fsubl
and
push
ja
js
jbe
xor
sti
and
insl
jmp
inc
mov
dec
int3
arpl
aas
dec
xor
iret
xchg
lock
shrb
negl
xchg
and
es
lods
fsubrs
inc
and
jne
test
xlat
rorb
movsb
dec
daa
js
cld
mov
shrb
push
dec
pop
pop
mov
add
lods
fsubrs
pushf
fstl
out
popf
xor
xchg
outsb
sub
or
sbb
lret
and
adc
xor
sub
xchg
sbb
push
or
and
leave
es
lahf
fmull
fs
push
call
out
and
test
and
pop
scas
pop
aaa
out
in
xor
jmp
pop
inc
mov
lods
arpl
frstor
jb
and
push
loopne
nop
dec
lahf
dec
iret
arpl
push
cmp
iret
add
sbb
out
jl
mov
pop
rcrl
fmuls
cmpsb
inc
in
dec
popa
in
sub
push
push
fwait
add
mov
hlt
mul
cmp
sbb
clc
pop
cmp
xor
pop
stos
inc
notl
dec
lock
enter
daa
ljmp
push
mov
push
fsubrs
test
mov
pop
cmp
lcall
out
dec
or
sbb
or
or
push
fdivp
mov
push
mov
mov
scas
push
push
ss
je
in
imul
insb
dec
push
test
test
out
clc
loopne
test
xor
pusha
aam
sub
dec
movsb
nop
out
stos
int
mov
int3
mov
ret
std
xchg
hlt
cld
add
push
sbb
inc
es
xlat
int3
repnz
incb
sub
cmp
mov
testl
jnp
sbb
jmp
and
mov
or
addr16
mov
ja
push
iret
cmpsb
cmp
dec
dec
add
arpl
pop
jmp
cmp
xchg
sti
lds
adc
lahf
xor
or
dec
movsb
out
popf
popf
loop
sub
cmp
fisubrs
popa
out
aas
sbb
orl
mov
in
in
inc
fs
jnp
jae
add
jns
add
jo
daa
lret
pop
int
stc
sbb
jecxz
imul
aam
xor
inc
repz
shll
out
loope
cld
lcall
jno
rorb
test
ds
cmpsb
imul
sbb
mov
xchg
adc
pop
adc
out
xchg
adc
subb
addb
loop
fistpll
imul
movsb
or
das
dec
mov
xchg
outsl
call
fcmovbe
shlb
dec
pop
shrl
es
das
and
add
mov
ja
sahf
inc
xchg
subb
mov
cmp
xor
xor
sahf
sahf
push
push
push
mov
cmpsl
loope
mov
jl
aam
test
push
mov
and
sub
pop
mov
shrl
lahf
shrl
sub
push
fldcw
movsb
ja
jecxz
lods
in
fisubrl
insb
nop
stos
das
popf
lods
aam
repnz
adc
xchg
fstpl
mov
frndint
and
adc
inc
pusha
mov
jae
fmulp
ret
notl
pusha
loop
lea
xchg
scas
sub
jno
dec
dec
lahf
inc
movsb
jnp
mov
sub
add
add
jl
and
ficompl
jle
in
adc
ja
daa
pcmpgtd
dec
std
and
mov
mov
out
mov
in
jle
and
addr16
testb
xchg
mov
stc
mov
pop
mov
jle
sbb
outsb
add
and
lret
dec
mov
mov
push
pop
or
in
les
movsl
inc
or
push
cmp
jecxz
push
adc
xchg
add
jp
int
mov
push
pop
fbstp
cwtl
dec
xchg
data16
lea
jmp
popa
cld
xchg
lock
add
mov
mov
dec
pop
xor
mov
notb
mov
movb
divl
shlb
lods
mov
dec
fbstp
mov
fwait
or
and
cmp
or
dec
or
jle
mov
call
or
pop
jno
jl
sbb
xor
shll
push
imul
in
test
imul
mov
push
sub
rolb
xor
mov
xchg
cs
lock
mov
pop
mov
cltd
pop
arpl
inc
test
pop
addr16
lret
outsb
cmp
mov
mov
dec
pop
add
or
jne
xchg
xchg
imul
aam
test
cmc
cmc
adc
adc
jg
in
fs
ljmp
ret
fcompl
gs
in
sti
cmp
lahf
and
shrb
jge
and
jb
lds
adc
sti
pop
inc
sub
out
inc
xor
test
mov
inc
ja
gs
movsb
sub
aad
pop
imul
mov
and
int
stc
data16
nop
scas
push
xor
hlt
mov
cmpsl
dec
sbb
out
das
add
cmp
sub
sbb
and
sub
jp
mov
sub
daa
pop
ret
jnp
call
out
push
int3
sub
inc
out
cwtl
adc
mov
les
or
mov
sbb
dec
enter
stos
add
repnz
lods
pop
loopne
fidivs
xchg
stc
out
jge
pop
ss
xlat
shlb
fsin
pusha
add
test
or
das
pop
or
nop
jecxz
loopne
int
push
push
repnz
mov
in
les
mov
leave
pusha
mov
jb
adc
pop
repnz
or
sub
fisubrl
movsl
lds
pusha
scas
or
push
ja
jge
adc
or
jl
bound
aad
ret
scas
push
outsb
scas
repz
pushf
js
and
add
mov
lahf
es
dec
jo
and
and
outsl
pushf
mov
sub
cld
xchg
xchg
mov
pop
movlps
gs
jb
lds
cltd
cmp
push
dec
and
dec
in
xchg
inc
repz
testb
cmpsb
xchg
andb
dec
sbb
fs
arpl
test
cli
mov
dec
dec
fdivl
push
dec
dec
xor
inc
je
cmp
mov
jbe
sbb
ja
imulb
pop
add
js
outsl
mov
rol
xlat
popa
pop
jmp
fbstp
sbb
fwait
inc
lahf
fisubrl
or
fmuls
andl
clc
ret
sarb
out
cmpsl
jne
jle
jo
lds
int3
cmp
std
repnz
sbb
sbb
add
sbb
sub
mov
scas
cmpb
popa
mov
out
ss
and
test
in
lds
push
pushf
jb
push
fadds
cmp
jle
sub
push
pop
jl
add
scas
fistl
sbb
into
mov
hlt
outsl
stc
insb
or
jp
mov
aam
add
out
pop
iret
mov
sub
jl
fisttpll
dec
repz
fs
loope
adc
jb
sub
dec
mov
fadds
jmp
xor
push
icebp
inc
or
ds
call
mov
addb
push
ss
or
xchg
push
xchg
adc
add
xor
mov
popa
cmp
xchg
in
dec
mov
aam
cmpsb
jge
sbb
mov
mov
lcall
cmpsb
das
clc
xchg
pop
imul
jp
pop
cltd
mov
in
test
adc
xchg
mov
cld
imul
sahf
mov
cltd
or
pop
ja
push
popf
xor
jp
mov
mov
jl
repnz
sub
xchg
sbb
mov
repz
fbld
aad
mov
enter
adc
std
and
mov
int3
int3
pop
or
jge
cmpsb
cmp
xchg
in
jb
mov
outsb
fidivs
sbb
pusha
mov
rclb
movsb
gs
fstpt
mov
add
inc
adc
xor
push
cwtl
fldcw
cmp
mov
cwtl
gs
sub
cwtl
outsb
fistpll
adc
das
xor
fistpl
aad
sub
movsl
stc
add
add
and
xchg
jae
push
addr16
mov
mov
xlat
push
xchg
mov
in
add
arpl
pop
pop
and
ljmp
shll
pop
cmp
mov
dec
out
mov
pushf
ret
xchg
jae
or
or
sbb
nop
mov
lock
xor
and
mov
jmp
scas
inc
in
push
xor
pop
push
data16
arpl
cmp
in
pop
icebp
rol
mov
shlb
xchg
mov
pop
mov
adc
arpl
adcl
mov
ficoms
adc
mov
pop
lods
jmp
insl
mov
fisubl
add
aad
add
icebp
dec
fistps
imul
iret
jne,pn
idivl
iret
push
mov
push
mov
dec
das
push
loop
jnp
ds
fldcw
pop
sahf
out
mov
add
xor
insl
pop
mov
int3
mov
pop
movsl
push
inc
mov
cmpsl
cmp
inc
fcmovb
sahf
inc
cmp
stc
pop
icebp
push
or
out
cmp
out
and
insb
ret
pop
cmp
dec
xor
pop
mov
push
xor
popf
popa
leave
test
mov
out
inc
adc
je
jo
mov
sub
frstor
pusha
inc
or
xchg
lods
mov
sub
popf
cmp
cs
adc
mov
ficoml
int
pop
icebp
mov
iret
add
mov
lahf
sarl
stos
inc
mov
je
iret
or
repnz
add
bound
lahf
xchg
sub
fwait
push
mov
mov
movups
cmp
xor
cs
cmp
cmp
call
test
lock
add
testl
xor
cld
xchg
movsl
xlat
inc
push
lahf
sbb
clc
cld
mov
mov
pop
outsl
and
movsb
jno
xchg
sub
subl
sbb
stc
insb
push
out
andl
popa
inc
sub
push
xor
testl
testb
repnz
push
xor
cmc
mov
xchg
int3
arpl
sti
cmc
jo
sub
push
in
add
mov
imul
pop
lods
nop
mov
mov
fisttps
imul
dec
roll
fst
fstpt
leave
add
sub
sub
test
sbb
jg
dec
andb
or
pop
sub
repz
and
and
xchg
push
xor
arpl
ss
mov
jbe
loopne
cltd
push
or
stc
ja
xchg
jbe
add
or
pop
repz
sbb
cli
push
loop
outsb
fdivs
jno
add
pop
insb
cmpsl
mov
fmul
movsb
scas
inc
adc
subl
inc
hlt
int3
je
idivl
cmc
ret
inc
aam
int
mov
or
in
mov
pop
sarl
or
mov
mov
cli
add
dec
xchg
jge
push
imul
test
pop
imul
mov
cmp
out
stc
cltd
sbb
jmp
fidivs
pop
fdivs
inc
test
and
mov
shlb
push
or
lds
add
out
dec
arpl
movsb
and
ficomps
sub
mov
add
testb
scas
jp
jge
inc
scas
cmc
mov
cmp
jnp
mov
movsl
inc
mov
outsl
hlt
jecxz
add
fistl
inc
pop
jae
cmp
and
into
pusha
icebp
jne
cmp
lret
xor
cltd
aas
shll
pop
inc
stc
adc
loop
jno
push
rclb
and
mov
cmpsl
rcll
shlb
fdivl
pop
es
out
mov
push
jg
fcomi
dec
fbld
mov
mov
sahf
pop
push
loope
mov
cwtl
and
incl
std
in
std
inc
mov
mov
bound
sub
cwtl
das
xchg
adc
enter
negl
mov
scas
out
mov
dec
mov
push
call
pop
popf
or
ret
push
or
push
mov
ret
test
jo
shrl
mov
rcrb
ror
das
add
cwtl
fmuls
out
cmpsb
xchg
sbb
mov
fidivrs
dec
fidivrl
or
nop
cltd
and
into
mov
je
daa
or
mov
in
pop
aas
repnz
push
lcall
sahf
push
add
loopne
jmp
mov
and
add
xor
clc
scas
inc
out
jne
je
scas
adc
mov
adc
adc
adc
into
xchg
pop
shrl
dec
mov
adc
test
dec
sbb
push
mov
push
push
mov
cmpsl
dec
xchg
and
mov
xor
xchg
or
pop
negb
stos
arpl
push
mov
jns
test
push
lcall
icebp
enter
notb
idivl
and
call
xchg
fildll
gs
sub
popa
add
xchg
mov
inc
ret
int3
vpcmpestrm
dec
fsubrp
test
data16
cmp
fbstp
pop
sahf
jno
xchg
mov
imul
jp
out
cltd
push
sbb
fnstenv
add
sti
shrb
pop
add
xchg
ljmp
into
fwait
stos
and
sar
int3
ss
mov
stos
push
mov
adc
sbb
das
or
mov
shll
pusha
mull
xor
or
add
std
and
jb
into
decl
mov
imul
xchg
or
pop
repz
lcall
lret
mov
xchg
xor
scas
jmp
fwait
ds
jae
pushf
notl
in
push
icebp
dec
cs
aam
fmulp
rcr
add
stos
or
inc
gs
xchg
pushf
aas
mov
and
xor
push
pop
pop
insb
push
jb
repz
xor
shlb
orb
mov
jno
mov
jno
sub
mov
aam
jno
xor
inc
iret
lret
add
arpl
aam
xchg
sarl
cld
push
test
popa
andl
ljmp
pushf
xor
push
insl
test
clc
xor
sub
jge
cmp
int
scas
fcmovbe
dec
mov
jmp
adc
lcall
mov
jecxz
in
data16
xchg
mov
or
inc
jnp
mov
ds
into
xor
jecxz
push
dec
imul
pop
jge
out
icebp
push
pop
sbb
ljmp
sbb
fistpl
lock
cs
int3
and
cs
sbb
pop
mov
es
push
stos
mov
clc
aaa
int3
test
cmp
add
in
mov
js
mov
lods
inc
cmpsl
or
sub
fadds
call
pop
and
xchg
cmc
push
aas
data16
fsubs
xor
je
inc
jle
rcrl
pop
adc
mov
cs
or
jne
mov
mov
xor
or
xlat
lahf
sbb
xchg
mov
push
int
cmp
add
stos
mov
add
adc
xor
pop
in
sysenter
int
gs
insl
xor
sarb
push
jne
ds
les
and
add
rcrb
fmull
jp
add
inc
add
clc
outsl
gs
rsm
mov
imul
add
daa
outsl
xor
inc
cld
nop
fcoml
mov
cmc
icebp
add
punpckhbw
inc
outsb
push
or
push
leave
call
pop
fwait
push
popa
and
xor
jae
lds
mov
xchg
testb
fwait
rcrl
in
mov
loop
pop
enter
cli
and
psraw
cmp
in
in
mov
js
xchg
loopne
fisttps
icebp
mov
and
data16
xchg
fidivl
xor
leave
in
sub
mov
mov
xor
inc
mov
out
pop
push
push
push
ret
insl
add
shlb
push
pop
xchg
movsb
mov
mov
insb
addr16
adc
adc
mov
xchg
les
mov
sub
mov
scas
inc
lea
jnp
pop
scas
adc
jg
orb
lock
clc
cli
add
mov
scas
je
lret
xchg
rorb
mov
cmpsb
mov
xchg
scas
mov
mov
cmpsb
xor
stc
ljmp
nop
xchg
pop
andb
rcll
mov
adc
cld
test
sbb
arpl
test
hlt
icebp
sub
call
mov
int3
sub
push
mov
jno
stos
add
xor
jg
aad
cmc
mov
jle
int
lea
and
add
icebp
mov
ror
cmpsw
out
out
outsb
mov
xchg
ret
lock
in
cmp
dec
xchg
and
inc
and
cmp
sub
ret
repz
repz
aad
pop
mov
lcall
sbb
into
and
mov
shrl
pop
test
pop
idivb
fdivrl
push
pop
aad
test
pushf
dec
push
cmpsb
nop
push
lea
adcb
cmp
and
scas
dec
rolb
pop
pop
in
loop
addr16
push
xchg
in
pop
inc
ret
inc
push
add
inc
popa
fisttps
xor
jle
lea
mov
xor
ja
mov
imul
sbb
in
xor
addl
xor
add
mov
or
inc
sahf
pop
add
sbb
and
inc
mov
adc
cmp
dec
aas
rcll
inc
pop
jns
jl
pop
jle
dec
mov
xor
insl
ret
pop
xor
ret
inc
into
out
cwtl
push
or
xor
pop
add
xor
dec
into
mov
fcmovnb
testl
pop
in
xchg
jo
loop
outsl
xchg
pop
outsb
ret
mov
dec
rorb
clc
repz
sub
or
push
and
xchg
imul
fists
iret
push
inc
sbb
pop
test
mov
mov
lret
cmovg
jg
pop
and
xorb
jnp
icebp
adcb
or
sbbl
mov
push
adc
stos
mov
lcall
sbb
mov
fwait
mov
loop
xchg
push
pop
jp
int
rcl
mov
dec
fmull
test
fisubs
out
jbe
pusha
in
shll
or
lods
jnp
scas
in
dec
cltd
push
icebp
add
sub
repnz
mov
mov
lds
mov
aas
int
imul
jmp
leave
pusha
mov
cmp
jle
pushf
fwait
xchg
push
pop
lock
testl
and
out
les
or
es
push
mov
pop
push
or
jmp
mov
ret
dec
mov
inc
out
ret
dec
dec
jge
idivl
sbb
cmp
scas
xchg
dec
outsl
test
pop
mov
pop
jg
or
inc
js
cmpsb
mov
loopne
ret
mov
stos
daa
in
dec
pop
pop
inc
jbe
lret
imul
xor
push
cmp
pop
cltd
cmp
aas
enter
add
dec
pop
push
cltd
hlt
adc
repnz
mov
adc
dec
push
rcr
outsl
out
lret
stc
push
xchg
pop
xor
outsb
loope
fsts
lds
add
ljmp
add
pop
cmp
mov
bound
add
adc
pop
stos
jno
xor
add
or
mov
lock
repz
out
add
push
in
xchg
mov
jae
in
outsb
add
orb
sbb
mov
ret
dec
pop
out
xlat
int3
xor
mov
call
or
jb
cmp
bound
sbb
lods
fdivl
jle
pop
mov
hlt
inc
jns
xchg
adc
or
fistpll
sub
mov
push
sti
idivb
fmuls
jbe
shrl
jb
sbb
je
pop
cmp
pushf
es
mov
clc
jae
enter
mov
icebp
mov
cmp
pop
daa
xchg
pop
add
and
xor
adcb
push
cwtl
add
lret
mov
xchg
arpl
xchg
push
mov
test
adc
aam
pushf
ljmp
mov
mov
or
adc
js
iret
aaa
xor
jecxz
mov
dec
ret
xchg
iret
xchg
sub
adc
test
mov
xor
sub
in
cmpsl
xor
sub
sbb
lahf
lret
and
sub
fisubs
adc
das
sahf
out
rcrb
lea
adc
mov
jae
xchg
nop
push
ror
mov
push
sarb
inc
fisubrs
mov
sbb
add
mov
sbb
les
cld
cmc
into
pushf
sbb
sub
insl
fsts
mov
lret
orl
loopne
push
sbb
lds
pop
or
xchg
mov
xchg
sbb
push
inc
pop
mov
mov
aas
frstor
lret
fnsave
dec
cmpsl
rcl
pop
mov
mov
mov
pusha
lods
cmp
xor
out
ss
and
add
sub
sahf
push
mov
inc
hlt
jns
mov
mov
inc
push
leave
loopne
arpl
movsb
ret
out
and
inc
jno
fldenv
int
dec
lods
mov
shr
push
ljmp
imul
repnz
clc
int3
mov
sbb
mov
call
mov
jmp
adc
cmp
jge
jmp
or
in
xor
jne
mov
mov
inc
pop
icebp
sbb
outsl
pop
das
xchg
stos
jmp
adc
xchg
es
mov
ret
jl
insl
push
rcll
js
imul
ds
xchg
mov
aad
in
aam
divl
pop
pop
mov
sub
sub
lea
test
mov
xor
pop
push
mov
mov
xorb
pop
lahf
or
jns
cmp
mov
dec
fsubp
dec
fs
ss
pop
push
mov
push
gs
push
stos
dec
xor
mov
jmp
leave
xor
dec
pusha
xchg
pushf
cltd
xor
mov
stc
dec
cld
push
dec
repz
shr
aaa
pop
popf
sbb
cs
adc
pop
sub
sarb
cmp
pop
mov
in
mov
add
fld
dec
pop
jl
and
mov
outsb
sti
adc
xchg
lret
sbb
lea
adc
sub
mov
sbb
shll
cmpsb
jl
xchg
mov
imul
mov
sti
jns
mov
add
adcb
out
inc
inc
mov
stc
dec
int3
fimuls
xchg
cwtl
cli
jl
das
jbe
movsl
mov
jmp
scas
inc
push
popa
testb
rclb
pop
add
xor
jg
mov
lds
add
call
sbbl
xchg
xlat
ret
inc
push
out
les
iret
add
mov
adc
gs
pop
aaa
int
jne
in
inc
sub
inc
stos
inc
xchg
in
out
stos
out
test
dec
aaa
hlt
jl
sbb
dec
in
xchg
add
aam
testb
sub
push
hlt
adc
cs
xor
es
sub
mov
inc
jb
xchg
mov
mov
mov
shr
out
pusha
ss
push
push
out
xchg
sub
cli
cmp
push
push
mov
or
push
jle
add
rcrb
pop
faddl
les
jecxz
fidivs
add
fldcw
push
test
mov
loope
xchg
jno
loopne
mov
push
jmp
aaa
leave
mov
jge
xor
scas
or
xor
mov
adc
out
popf
xor
pop
lock
cmp
mov
jmp
add
xchg
int3
push
movsl
call
pop
in
scas
push
inc
adc
jg
data16
loop
out
xchg
adc
testb
enter
lea
or
mov
out
or
cwtl
das
fadd
outsl
inc
and
xchg
xor
mov
daa
pop
hlt
pop
xchg
sub
mov
pop
fucomip
sbb
sub
pop
or
cmp
lea
fcomps
psadbw
mov
nop
pop
std
gs
xor
mov
sbb
xlat
mov
out
outsb
ss
imul
pop
lret
jg
xchg
or
and
add
mov
fidivl
push
mov
push
push
dec
xchg
dec
sub
loope
adc
je
mov
adc
loopne
in
xchg
sub
loope
pop
icebp
imul
push
lea
fdivl
sbb
movsb
lods
inc
shlb
mov
dec
jp
daa
dec
mov
scas
jp
clc
mov
xchg
xchg
mov
ret
int
cmp
andl
dec
out
cmpsb
cmp
mov
das
xlat
mov
aam
and
push
out
repz
pop
and
fs
cmp
fnsave
icebp
mov
and
inc
aad
mov
fsubrl
push
shlb
and
mov
enter
pop
pop
movsl
cmp
jge
jb
aad
lcall
stc
ds
fiadds
cmp
sub
dec
and
or
adc
ss
data16
or
sbb
popa
xchg
add
ss
pop
mov
into
in
in
lcall
scas
and
lods
dec
andl
mov
leave
pusha
mov
push
push
shrl
les
pop
adc
push
sub
out
orl
loopne
daa
sarb
cmp
jmp
ret
xchg
pop
loopne
mov
and
jbe
jg
xor
into
pop
dec
loop
daa
mov
shlb
dec
pop
push
aam
jbe
repz
iret
fs
cltd
sbb
mov
clc
inc
dec
fucomi
pushf
aad
push
pushf
adc
jb
sbb
jl
jp
pop
lods
cs
fistps
xlat
push
int3
and
gs
cld
push
int3
fwait
sbb
pusha
das
outsb
sub
push
das
cmp
xor
idivb
repz
lods
iret
sbb
inc
in
jl
addr16
xchg
sub
adc
scas
inc
inc
mov
inc
fwait
inc
rorl
inc
inc
bound
gs
jp
loopne
jo
je
lret
insl
inc
test
ret
xchg
add
or
jmp
cwtl
cmp
jl
jle
pop
cmp
clc
inc
ficomps
jae
or
cmp
fbld
jl
xor
ret
fwait
mov
and
xor
gs
and
or
and
mov
mov
ds
sbbl
mov
imul
aas
mov
loopne
enter
pushf
sbb
or
out
cld
dec
stos
jnp
inc
dec
adc
loope
pop
xor
dec
in
lahf
or
pop
insb
ret
cltd
mov
dec
mov
push
in
scas
nop
inc
xor
ds
inc
fstl
cmp
xchg
or
sbb
hlt
and
fucomp
cmp
incb
jl
jp
xchg
adc
jns
enter
daa
outsb
in
rcrb
mov
jbe
and
dec
pop
mov
fidivs
lods
lret
xchg
inc
in
add
imul
push
sbb
popa
clc
cmp
stos
cmp
lret
jno
mov
push
jmp
sti
repz
mov
adc
insl
mov
push
hlt
mov
cmpsb
je
mov
and
imul
cmp
inc
ss
lods
mov
faddp
sub
out
shlb
insl
daa
or
stos
andb
imul
or
pop
movsl
lds
fmuls
lea
scas
sub
jae
mov
enter
mov
cld
sti
cmp
push
push
jb,pn
lret
out
inc
lods
mov
iret
jns
ja
mov
shll
icebp
fnstcw
inc
fcomip
xor
out
pop
mov
scas
mov
dec
ss
test
mov
fs
cmp
fdivl
test
cld
lea
in
fucom
push
cmp
sub
test
sbb
mov
mov
xor
inc
cmp
js
es
dec
ds
xchg
fsub
clc
decl
cmp
lcall
int3
cmpsb
js
fcmovb
dec
mov
repnz
cs
cmpsb
cli
and
lock
xchg
inc
andb
mov
shl
std
call
shll
dec
or
dec
inc
jo
orl
jmp
dec
push
mov
mov
sub
jns
lock
mov
mov
rol
mov
nop
sbb
sbb
sbbb
mov
mov
repz
jge
mov
adc
fwait
gs
mov
fadds
movsb
sbb
hlt
xchg
jno
ret
pop
push
std
or
popf
xchg
enter
fsubrs
mov
je
or
stc
data16
adc
inc
stc
inc
pop
sbb
fs
adc
pushf
popf
das
sbb
aaa
jbe
lods
inc
xlat
sbb
hlt
ret
pop
xor
loope
cmpsl
movsb
testl
push
xchg
test
jno
lock
sarl
loopne
inc
push
or
mov
push
lock
out
sbb
xchg
mov
mov
or
gs
ret
pop
fisubl
push
aam
loope
jmp
push
in
xchg
sbb
adc
jp
add
and
add
push
test
cmp
popf
xor
ds
popf
and
xchg
and
fwait
aas
inc
pop
mov
test
or
cmp
adc
adc
jmp
imul
pop
add
push
int
ss
pop
cmpsb
xchg
addr16
fsubrp
test
cmc
daa
mov
data16
imul
xor
es
add
test
leave
fldt
or
pop
cmpsl
fbstp
sti
mov
adc
adc
das
lcall
xor
clc
lret
inc
inc
mov
ret
mov
roll
jns
jp
inc
adc
clc
vprotw
mov
xlat
push
mov
jb
sub
addr16
and
xchg
out
mov
ljmp
insl
mov
fwait
mov
add
daa
and
insl
and
pop
sub
cmp
fst
repz
arpl
cmp
stos
aas
in
pop
mov
push
cmp
adcb
and
in
int
jmp
clc
out
cmpsl
cmp
jecxz
jbe
inc
loope
pusha
push
std
push
movaps
cmpsl
jno
testl
test
in
pop
push
outsl
adc
stos
dec
mov
or
test
xor
xchg
enter
mov
sub
in
push
cmp
out
lds
jg
pop
imul
ds
bound
xor
out
jge
and
inc
lret
out
add
jmp
push
mov
nop
mov
adc
fistpl
std
dec
mov
push
mov
pop
and
lret
sbb
bound
rclb
sub
lods
pop
dec
mov
jns
push
shrb
dec
pop
sbb
mov
jbe
mov
mov
push
jmp
call
push
cmc
std
dec
jecxz
clc
push
jl
test
mov
adc
or
add
adc
clc
out
dec
sti
fs
mov
cs
mov
push
cmp
pop
cld
mov
scas
and
test
dec
cmp
push
adc
xchg
cmpsl
jl
out
cmp
jl
sbb
mov
mov
test
pop
out
adc
fcomi
sarb
data16
pop
inc
fstps
aaa
pop
scas
sbb
push
jo
ljmp
jmp
sub
inc
cmpsb
cmpsb
ds
shl
pop
fadd
rorl
jle
lds
dec
or
loopne
daa
icebp
xchg
aam
lods
adc
adc
int3
cli
inc
iret
mov
push
call
and
add
xchg
add
jns
sahf
lock
cmc
in
daa
lret
inc
les
fstpl
cmp
push
and
sarb
cmp
cmp
in
mov
mov
mov
mov
rorl
fwait
xor
iret
enter
into
ret
mov
cmc
cmp
adc
lahf
push
mov
push
ss
pop
mov
push
mov
out
jg
xchg
hlt
mov
mov
outsb
test
in
shl
or
push
jnp
cs
mov
arpl
xchg
add
int3
out
rclb
or
fiadds
push
leave
push
dec
pop
rcl
aaa
sbb
call
out
xor
xor
cmpsb
mov
xchg
mov
pop
cmpsb
cmc
call
push
lcall
jns
mov
pop
repz
add
xchg
dec
test
sti
mov
xor
xor
lea
push
cmpsl
call
imul
sbb
mov
and
mov
push
test
sub
out
cli
int
inc
lcall
xor
jb
subb
jl
push
and
inc
int3
push
xor
cmp
or
jecxz
out
ret
pusha
daa
call
scas
add
xchg
jg
mulb
pop
add
push
push
andb
andb
leave
cs
aad
pop
or
cmpsl
shll
jg
mov
adc
insb
mov
or
cli
mov
andb
xor
cmpsb
leave
add
jne
jmp
push
xchg
sahf
mov
cmp
sub
sahf
dec
arpl
push
adc
mov
cs
sahf
fldenv
inc
or
movsl
mov
fsubrl
push
push
jecxz
jae
ret
fstl
ret
orb
cs
cmp
sarl
aad
fdivrl
xchg
add
lret
push
add
outsl
mov
loope
xlat
cmpsb
push
xor
cmc
int
dec
cld
xchg
cmp
mov
ljmp
sbb
mov
inc
gs
ja
lahf
sbb
sub
or
adc
pop
xor
pushf
cmp
mov
push
xor
inc
fdivrs
aaa
pop
dec
cs
pop
testb
dec
test
jmp
jl
lret
and
xchg
imul
jmp
mov
fmul
mov
repz
and
data16
sbb
mov
rcrb
cmpsb
cmp
mov
hlt
mov
adc
stos
sbb
das
inc
arpl
mov
das
test
lahf
test
lods
js
sbb
xor
cs
mov
or
mov
imul
in
into
mov
rclb
inc
orl
pop
pusha
jl
sbb
insl
test
mov
inc
jl
fidivs
es
or
flds
xchg
inc
jbe
sub
icebp
imul
fcomps
adc
sub
or
cmp
lods
cmp
imul
testb
push
cmp
cmpsl
jns
jle
les
fistps
push
stos
mov
push
mov
ljmp
lcall
cmp
mov
jle
cltd
mov
mov
and
aaa
jae
out
cmpl
stos
cmp
mov
cmpsb
mov
push
movsl
cld
push
ror
cwtl
sub
adc
stos
lds
push
leave
fldenv
inc
mov
jb
bound
test
cmpsl
rcrl
or
mov
enter
jo
add
cld
jb
jo
ret
fistpll
js
aas
inc
adc
inc
arpl
sub
cmc
add
mov
ret
scas
cli
jns
dec
loop
mov
imul
loope
mov
xor
fimull
sbb
aaa
add
jp
cmpsl
ds
push
lds
iret
daa
cld
dec
pop
fistps
and
adc
rclb
in
sbb
ss
xor
cmp
mov
mov
xchg
sahf
add
shlb
lock
cmpsl
jmp
cmp
iret
scas
xor
lret
lock
add
bound
inc
mov
mov
or
pop
leave
lcall
jno,pt
cmpsl
data16
jge
ss
mov
ficomps
inc
add
xor
pop
lods
fmull
mov
fdivrs
and
sbb
mov
fcomps
cmpsl
ds
mov
repnz
sahf
pop
push
inc
push
sahf
mov
lods
js
jb
gs
jecxz
xor
adc
out
hlt
xchg
jno
add
xor
notl
adc
push
fsubr
mov
out
scas
sub
repz
fwait
test
push
fwait
push
add
push
inc
bound
mov
mov
mov
mov
xchg
or
mov
push
imul
xchg
dec
pop
sahf
dec
sti
fistpl
arpl
scas
sahf
xor
cmp
es
loop
push
xor
test
xchg
sub
int
and
addr16
add
cld
mov
cmp
mov
pop
rorb
and
hlt
aas
es
outsl
xchg
xlat
gs
hlt
mov
add
mov
and
movsb
mov
in
mov
shll
ficomps
inc
xchg
and
clc
std
mov
jecxz
push
pop
ret
pop
mov
mov
xchg
jae
xor
sub
fwait
push
andb
jno
lahf
div
gs
push
addr16
mov
pop
add
xor
cmp
jecxz
cmp
xlat
sbb
fld
sbb
pop
cmc
imulb
enter
fsubl
fnstsw
repnz
mov
pushf
pop
or
xchg
fwait
xchg
sub
hlt
push
cli
mov
mov
fldt
sbb
jl
insb
movups
mov
dec
bound
mov
cmpsl
cmp
jb
adc
cwtl
not
subb
fidivrs
jg
lods
stos
gs
dec
das
int
cmpsb
cmpsb
xor
add
ficompl
lret
cmpsl
jo
ljmp
iret
movsb
inc
push
and
sub
mov
dec
fdivl
lods
rcrl
outsl
enter
push
and
inc
add
push
stc
or
jno
and
sub
and
mov
xchg
aas
sbb
cmpsl
mov
in
xchg
mov
mov
pop
leave
add
and
sbb
shr
and
out
cmp
jne
mov
in
cli
or
inc
sub
into
pop
dec
das
cmpl
mov
cmp
pop
or
lret
xor
ficomps
dec
mov
cli
inc
push
inc
pusha
lret
push
jb
sbb
lahf
stos
jb
mov
lods
loope
ljmp
cmp
inc
enter
xor
xchg
inc
xchg
test
cltd
leave
pop
mov
pop
in
mov
cmpb
mov
add
call
mov
mov
iret
fsubl
jne
mov
int3
stc
out
xor
loopne
addr16
sbb
mov
pop
mov
cmp
push
nop
pusha
push
add
out
fmuls
rolb
mov
push
popf
inc
jne
lea
hlt
bound
lret
clc
daa
cmpsw
fdivrs
mov
aad
mov
cmp
inc
pop
loopne
cmpsl
sbb
push
out
nop
test
xlat
call
outsb
push
or
les
in
inc
daa
scas
xchg
std
lock
fmul
dec
pop
mov
mov
out
mov
push
test
dec
shll
xchg
xchg
shll
into
mov
adc
lods
lock
pop
push
je
push
enter
mov
inc
xlat
mov
clc
pop
lret
fld
popa
in
push
mov
addr16
cmp
cmp
xor
inc
ljmp
mov
mov
cmp
cltd
clc
jg
nop
ret
sbb
nop
in
push
sbb
sbb
xor
mov
inc
rorl
pop
mov
int
loopne
test
adc
orb
mov
mov
xor
cli
pushf
loope
push
cmpsl
movb
aad
sbb
cmp
pop
test
cmp
jp
das
in
cmp
cs
psubb
repnz
ret
add
imul
jecxz
dec
add
jns
iret
xor
mov
insl
dec
loop
mov
imul
dec
enter
ds
cmc
lods
pop
pop
cmc
adc
std
xchg
push
mov
dec
xor
or
pop
sub
push
mov
in
pop
ss
sbb
xor
push
je
and
aam
dec
repz
imul
mov
xor
xchg
fisubrs
dec
pop
cmp
rclb
push
inc
negb
inc
jge
fadds
int3
push
xchg
sub
and
fldt
jno
repnz
fdiv
ret
pop
adc
lds
cltd
mov
arpl
jns
stc
adc
adc
inc
dec
lea
mov
jge
cli
scas
add
pushf
scas
dec
mov
xor
call
dec
add
cwtl
jns
ja
jp
pop
sub
or
jle
es
aam
ss
sbb
popf
stos
in
mov
add
shr
scas
pop
cmpsl
mov
xchg
notb
dec
test
test
arpl
in
add
cmp
outsb
cmp
ds
mov
mov
and
sti
roll
cmp
xchg
jp
mov
cli
pop
pop
mov
push
or
mov
arpl
mov
ja
ds
dec
fistps
xchg
dec
fiadds
mov
or
add
mov
pop
mov
sub
jecxz
sbb
les
and
loop
cmp
mov
mov
insb
or
repz
xchg
ret
ffreep
pop
imul
ret
and
cmpb
loop
mov
fmull
fsubrs
out
scas
stc
jno
add
xchg
roll
and
push
out
jne
out
aad
fidivs
cwtl
das
fbld
mov
dec
orl
insl
mov
aam
push
adc
cs
repnz
movsb
add
pop
rcll
mov
fcoml
sti
xchg
fcmovbe
cmp
and
dec
sbb
jbe
mov
mov
mov
clc
inc
nop
mov
lods
jp
shrl
pop
xor
int3
cld
mov
and
and
jbe
pop
mov
cmp
nop
sbb
test
popl
nop
popf
mov
lcall
and
push
ficompl
sbb
idiv
cmp
xor
loop
xchg
mov
mov
ss
iret
sub
test
lods
inc
cld
xor
dec
mov
push
dec
repnz
cmp
xlat
test
cmp
cmp
sub
movsl
lds
in
fwait
popf
cmp
xor
jecxz
xlat
mov
mov
ja
test
ds
add
push
test
inc
add
sub
xchg
leave
cli
xchg
repz
pop
push
roll
add
cwtl
or
add
popa
andl
outsl
push
fmul
out
out
popf
fisttpl
adc
inc
cld
xchg
inc
jbe
pop
dec
jmp
lcall
jne
pushf
add
and
cmp
add
jnp
adc
mov
out
jbe
pusha
out
jno
or
ss
jno
xchg
test
jl
xchg
sub
fcomps
enter
lods
aad
xchg
push
dec
in
jp
and
cmpsl
push
cs
push
pop
xor
enter
stc
or
inc
pop
lret
mov
ficomps
loopne
jno
dec
je
dec
mov
dec
in
adc
rorb
cmpsb
hlt
imul
stos
out
sbb
mov
mov
shrl
and
cmp
pop
insb
or
in
xor
hlt
test
push
iret
loope
pop
mov
out
fucomip
adc
std
pop
mov
xlat
mov
inc
stc
decb
hlt
inc
and
loope
pop
ljmp
or
mov
fbld
sub
add
jnp
movsb
lods
pop
mov
dec
lock
add
pop
call
decl
push
jnp
lret
stos
sbb
ss
test
push
ss
icebp
push
out
adc
push
pop
adc
sub
outsl
scas
jb
dec
xchg
arpl
adc
icebp
inc
cmc
leave
fildl
push
mov
mov
into
pop
sahf
jmp
mov
inc
movsb
pushf
incl
test
pushf
push
dec
and
imul
or
imul
fxch
jl
js
inc
pusha
divl
add
enter
push
pop
sbb
outsb
popa
jbe
add
xor
inc
xchg
loopne
pushf
push
and
xor
jne
js
jb
lds
fs
sbbb
xchg
push
aaa
rcrb
cltd
dec
aad
xchg
xchg
call
cs
ljmp
mov
push
lcall
lods
cld
sar
daa
cmc
int3
mov
aas
jbe
cmp
mov
call
lock
or
xlat
stc
sub
xor
addr16
sbb
bound
ds
cmp
pop
add
jno
out
push
xor
mov
add
outsb
xlat
repz
jbe
pop
mov
mov
cltd
push
mov
or
pop
negl
adc
mov
cs
jmp
int
pop
mov
cmc
mov
adc
jo
test
aaa
popf
imul
and
lcall
popf
xchg
lret
iret
mov
std
int3
adc
in
xorb
data16
xchg
pop
call
stos
ja
cs
insb
pusha
nop
or
ret
dec
outsb
push
rcrl
jns
cmp
xchg
adc
repz
lahf
stc
pop
lods
add
sbb
lods
movsl
add
dec
xchg
lods
daa
dec
movsb
pushf
inc
or
xor
mov
mov
in
mov
sbb
bound
aam
xlat
scas
adc
pop
jbe
cmp
icebp
fists
shlb
mov
les
out
rcrb
stos
pop
mov
nop
and
nop
fsincos
adcb
inc
cld
repz
adc
fidivs
sarb
pop
xor
fwait
or
cltd
jb
adc
mov
rol
or
ja
sbbb
loopne,pn
shr
xchg
dec
push
out
adc
outsb
shl
lahf
pop
popa
and
cmp
jge
fidivl
mov
clc
or
add
pop
adc
inc
pop
mov
add
shrb
insl
sbb
push
out
fwait
dec
xchg
sub
or
inc
dec
scas
cmpsl
mov
ror
sbb
mov
mov
mov
jmp
mov
fisubl
cmp
cmp
xchg
cltd
orb
shlb
xlat
add
cmpsb
mov
inc
test
fdivrs
loop
ja
mov
insl
mov
aad
jl
xchg
notb
sub
lods
loope
jge
adc
fsubl
dec
negl
mov
aad
shll
sbb
shl
and
imul
ret
mov
in
mov
movsl
vpsraw
push
clc
pop
push
test
pushf
xor
add
fdivs
js,pn
lret
daa
mov
scas
mov
in
cli
add
arpl
subb
sub
or
iret
inc
test
jge
xchg
cmpsl
cmpsb
aas
xlat
xchg
rorl
test
cs
leave
xor
fisubrs
ss
or
in
xor
jo
add
lahf
xor
xor
arpl
movsb
imul
andl
fs
xchg
cmp
jmp
data16
sub
nop
fisubrl
dec
jecxz
cmp
icebp
mov
pushl
in
test
out
mov
sarl
stos
es
insl
iret
sub
in
test
out
orb
sub
mov
mov
sub
push
pop
lock
xor
adc
xor
mov
lods
inc
stos
cmpsl
fldl
inc
xchg
stos
jmp
stc
sub
mov
stos
call
mov
decb
leave
push
jo
sub
mov
inc
xor
rcl
mov
fs
or
bound
call
cmp
and
and
lods
push
insb
jecxz
fnsave
inc
lcall
adc
lahf
mov
xchg
adc
mov
sbb
into
ret
mov
pop
adc
lret
sbb
inc
xchg
call
fisttpll
imul
mov
dec
xchg
sti
cmp
arpl
mov
inc
sbbb
dec
ja
mov
jne
push
and
push
xor
sbb
mov
out
jecxz
push
fildll
or
add
out
xchg
mov
xor
aaa
pop
add
adc
fwait
js
scas
cmp
xor
adc
outsl
cmp
cmp
icebp
sub
lret
xchg
insl
dec
push
sbb
shlb
addr16
push
sbb
insb
negb
mov
dec
stos
and
sbbl
add
jg
insl
popa
std
cmp
pop
mov
push
fidivs
and
test
or
sarb
and
stc
inc
fsubrs
lret
add
js
and
aam
xchg
notb
add
and
movsb
push
shrl
rcrb
adc
jno
aaa
dec
mov
pop
inc
leave
pop
and
pop
scas
sar
mov
push
sub
icebp
jno
add
nop
pop
lea
sub
push
push
and
and
ds
pusha
jns
cmpsb
and
cld
loop
das
icebp
pop
cmp
lret
jnp
rcll
in
pop
arpl
xor
insb
popa
push
int3
sahf
leave
lret
push
cmp
jnp
xlat
mov
pop
cmp
dec
fwait
mov
into
js
rolb
insl
jmp
nop
pop
lret
lahf
dec
add
idivb
test
mov
push
pop
gs
rorl
shlb
mov
movsl
jle
stos
dec
inc
inc
ljmp
lds
dec
xlat
pop
in
jle
ror
and
xchg
or
dec
dec
arpl
add
jg
mov
and
in
je
js
imul
in
lds
mov
fldcw
push
test
cmp
lret
dec
loop
bound
mov
aad
inc
mov
loopne
cmp
fpatan
popa
sarb
mov
inc
xchg
jae
ret
arpl
jne
imull
inc
adc
lods
mov
and
push
and
data16
mov
add
jge
es
daa
xchg
add
fiaddl
mov
pusha
out
or
fldl2e
nop
popf
mov
dec
call
add
cmp
clc
dec
out
fwait
aam
mov
sahf
jp
cltd
mov
iret
lret
push
push
fwait
sti
xor
scas
jne
mov
dec
sub
pop
mov
fbstp
pop
pop
sub
push
jp
pop
cmp
and
repnz
push
dec
cmc
jp
xchg
out
fwait
cmp
mov
jb
and
call
push
add
xor
sbb
insb
divl
mov
or
pop
stc
popa
loope
out
popf
orb
xchg
xor
orl
xchg
sub
outsb
adc
fs
inc
push
test
stos
inc
clc
sbb
jmp
inc
dec
jo
mov
dec
out
lcall
jp
dec
loopne
fwait
sub
push
fmul
enter
mov
pop
dec
in
push
push
xchg
dec
daa
insb
jg
cmpsl
fwait
xor
jnp
mov
pop
mov
xchg
jns
in
xor
xor
rol
mov
sub
pop
mov
xchg
pop
push
mov
and
mov
es
repz
int3
sahf
gs
mov
adc
push
inc
call
cmp
repz
jb
pusha
test
cmp
pop
in
loop
sbb
jg
sbb
and
jbe
xchg
int
fidivs
aad
mov
vdivps
shl
dec
inc
lods
add
popf
fucomi
stos
push
inc
stos
jmp
nop
lret
movsb
cmp
in
lret
jge
jns
in
mov
leave
loope
hlt
js
add
ret
mov
into
jle
sbb
jle
mov
dec
xchg
jno
repnz
sub
popf
adc
pop
pushf
scas
sub
xlat
sarb
popa
dec
jo
fmul
mov
sti
stc
xchg
call
dec
rorb
popa
mov
adc
out
adc
xor
xor
popa
lret
test
xchg
lcall
and
shll
loopne
dec
out
adc
push
mov
add
sbb
sbb
sub
and
push
and
cltd
adc
popf
mov
mov
push
or
cmpsl
sub
pushf
imul
inc
inc
addr16
cmp
adc
test
fcomps
fisttpll
movsb
pop
and
or
divl
mov
lret
or
xor
push
sbbb
push
mov
push
mov
insb
sar
stos
lods
adc
addr16
insb
pop
xor
push
popa
loope
sbb
mov
sub
aam
cmp
lods
aad
pop
and
shll
ja
sub
fnstcw
dec
inc
sbb
mov
xor
push
pop
sub
iret
xor
sarl
jne
add
std
xor
and
call
outsl
je
mov
aad
fs
mov
add
call
sub
daa
jbe
hlt
mov
and
or
push
pop
dec
movsl
in
jg
jae
or
cmpsb
xchg
jge
cmovge
call
or
adc
xor
add
cmp
and
call
pop
lock
ja
and
dec
sub
movsl
cmp
outsb
rcrb
xchg
cmp
popf
fnstenv
sbb
dec
xor
out
sub
pusha
xor
mov
aaa
addr16
cwtl
push
mov
pop
pop
shl
testl
jge
jnp
rcrb
mov
popl
cmc
dec
mov
mov
sbb
cwtl
das
call
cmp
popf
mov
fisubl
or
mov
test
lret
push
popf
or
xor
or
insl
pop
roll
jnp
xchg
xchg
xchg
mov
leave
mov
jne
outsb
jl
lahf
jmp
aad
outsb
and
mov
cmpsl
pop
and
bound
mov
test
jmp
mov
pop
pop
mov
push
sub
dec
dec
mov
int3
push
daa
cmp
out
xor
and
dec
cmpsl
xor
scas
roll
push
stc
inc
or
test
mov
jno
movsb
inc
sub
js
mov
mov
fcmovbe
outsb
daa
or
cmc
inc
repnz
cmpsl
call
xchg
inc
cmp
jp
nop
mov
pop
repz
ja
ja
ljmp
shrb
shlb
and
fwait
xor
jp
jnp
mov
icebp
xor
lods
mov
fstp
rorl
mov
mov
add
sub
xor
mov
xchg
or
cmp
pop
xchg
lods
iret
gs
mov
mov
negl
or
addr16
and
aad
add
push
hlt
lret
mov
fiaddl
test
bound
or
adc
push
call
jo
mov
sbb
jmp
ss
jne
jmp
xchg
sbb
jle
lods
adc
test
adc
inc
xchg
repnz
out
sbb
xchg
add
sub
iret
cs
dec
or
out
dec
data16
dec
sub
test
cmpsl
pmaxub
inc
mov
test
ret
or
jp
outsl
std
jmp
popf
mov
adc
icebp
push
cli
rcrb
es
cwtl
inc
lea
mov
repz
mov
test
faddl
pop
mov
ret
scas
mov
mov
xchg
insb
lock
push
push
xchg
jmp
jne
mov
jmp
pusha
and
cwtl
inc
insb
add
jae
clc
cmp
cmp
sbb
movsb
aaa
cmp
scas
movswl
dec
xchg
sbb
inc
jmp
cli
dec
js
cmp
aam
add
and
push
lahf
jp
mov
in
ret
xor
scas
adc
stos
add
mov
push
xor
testl
fdivrp
lret
push
mov
pushf
bound
in
notl
cld
push
dec
pop
dec
fisttpl
mov
scas
outsl
mov
jmp
out
in
mov
and
xchg
sbb
and
shrl
pushf
fwait
clc
fcomip
fistpll
stos
xorb
push
adc
xchg
inc
sub
sahf
into
rolb
add
lds
and
js
lcall
je
mov
cwtl
jns
mov
add
fwait
cs
lret
dec
jns
mov
xlat
adc
mov
enter
in
mov
sbb
std
pop
aad
push
pop
pop
lock
in
xchg
cmp
sub
sbb
add
pushw
daa
call
shr
adc
pop
cmp
xchg
pop
in
adc
rcr
fsubrs
xchg
or
sbb
or
adc
fcoml
mov
loope
aas
callw
fistps
xchg
add
jmp
cmpsb
inc
and
sbb
jle
add
arpl
icebp
mov
test
out
hlt
mov
mov
cmp
mov
sub
pop
pusha
inc
xor
push
and
push
data16
shrb
imul
jecxz
mov
int
push
mov
mov
push
outsb
add
dec
inc
mov
in
cmp
pop
inc
into
mov
mov
lret
cld
popf
hlt
outsl
test
push
mov
mov
mov
xchg
and
outsl
lahf
dec
negl
push
adc
cwtl
test
mov
or
fldt
inc
jmp
xchg
mov
sub
arpl
out
pusha
adc
nop
jmp
jnp
cltd
in
ret
fistl
xchg
and
mov
fsubl
mov
adc
jge
rol
dec
dec
outsb
lds
and
sub
mov
xchg
jb
stc
repnz
shrb
scas
aad
in
cmc
or
push
pusha
push
xchg
popa
cmp
mov
cmp
clc
stos
mov
add
es
push
mov
push
scas
test
mov
lcall
sbb
jge
sbb
popf
je
mov
or
xchg
imul
sbb
imul
call
sub
add
dec
ret
sahf
sub
aas
fwait
out
addl
divl
nop
mov
pop
pop
jne
mov
cmp
icebp
push
adc
pop
in
and
add
inc
nop
mov
aam
movl
inc
or
jns
cwtl
mulb
in
pushf
cmp
aam
inc
push
clc
push
mov
ja
into
pop
in
icebp
and
add
inc
aas
pushw
test
adc
icebp
mov
ja
jecxz
adc
xor
jl
adc
daa
je
fistps
js
fidivrl
mov
mov
adc
xor
enter
cltd
roll
sbb
ror
dec
lcall
jbe
pop
xchg
xor
adc
jge
test
mov
popf
sub
movl
push
imul
in
add
roll
and
push
imul
xchg
pop
jns
hlt
mov
paddb
loope
lcall
dec
or
xchg
pop
out
mov
dec
xchg
out
scas
loope
cld
xchg
xchg
repnz
mov
sub
aas
cmp
cmp
mov
lret
mov
fsubrs
cli
jmp
les
push
iret
push
pop
lahf
lcall
mov
pop
std
arpl
xchg
xchg
into
ss
aaa
call
inc
dec
out
dec
jecxz
gs
imul
jp
icebp
ret
in
in
inc
sbb
ds
pop
lods
mov
push
mov
scas
insb
roll
and
repnz
push
add
adcl
jmp
sub
cmp
in
mov
nop
scas
das
outsl
add
sbb
adc
movsl
mov
mov
imulb
arpl
pop
lahf
xchg
add
pop
notl
in
scas
pop
push
or
inc
test
push
movsl
push
pop
pop
das
adc
cld
jae
mov
inc
out
mov
mov
jecxz
fidivrs
dec
dec
mov
sbb
mov
ja
aas
jae
jno
jnp
sub
jno
lds
inc
sbb
das
das
out
push
or
mov
mov
ljmp
pushf
mov
loopne
ja
add
xchg
adc
in
xchg
out
shrl
add
cld
sti
ret
imul
mov
nop
inc
icebp
movsl
out
mov
mov
add
or
test
xchg
pop
movsl
orl
icebp
mov
popf
jno
iret
pop
lds
lahf
lret
cltd
repnz
loope
sub
sub
mov
scas
fldt
ss
movsb
leave
les
jl
cmp
jge
lds
sbb
sub
xchg
inc
add
lret
push
or
test
imul
icebp
lock
call
xchg
mov
push
dec
and
and
push
sbb
cmp
ret
and
lock
jns
sbb
or
sub
inc
sti
jbe
shll
in
sbb
pop
cmc
jge
inc
gs
shll
push
negl
inc
popa
lods
shr
mov
neg
out
pop
stc
nop
ss
test
pop
lret
add
sbb
and
lea
fstpt
cmpsb
or
xchg
fidivl
iret
repnz
ds
std
cltd
mov
andl
ss
and
iret
push
jmp
call
mov
jmp
or
inc
push
das
cmpsb
sbb
lcall
mov
ljmp
push
insl
aas
aas
add
jo
push
testb
jge
xchg
or
pop
cmp
cmp
pop
push
lea
or
es
out
fdivs
testb
adc
iret
inc
jae
push
xor
outsl
push
or
leave
pop
repnz
bound
sbb
add
inc
js
and
xchg
incb
hlt
das
adc
mov
fdivl
mov
cli
inc
in
cmc
xchg
add
add
pop
mov
fnstenv
pop
bound
cmp
pop
loop
out
call
xchg
xor
loopne
int3
int3
cmp
and
or
mov
push
jno
add
jne
xor
mov
mov
push
inc
ficoms
loopne
cld
gs
mov
ret
sub
call
adc
mov
xlat
mov
addb
shll
xchg
and
push
loopne
push
mov
inc
jp
add
xor
sbb
and
jecxz
push
orl
jnp
fcompl
leave
les
ror
push
call
mov
mov
mov
ficoms
dec
pusha
inc
repz
sbb
push
push
cwtl
shll
sbb
dec
add
mov
pop
fnsave
push
mov
cmpsb
nop
mov
stc
ret
jne
leave
stos
repnz
ja
subb
dec
dec
cmpb
ret
sub
int
and
push
sbb
test
orl
jg
int
lret
mov
xor
enter
mov
mov
shrb
cmp
fs
mov
cmp
cltd
cmp
test
aam
sbb
mov
dec
test
cmp
clc
pop
dec
inc
out
mov
push
movsl
shl
jnp
mov
cltd
mov
dec
dec
fwait
mov
pop
cli
jne
loop
negb
or
push
dec
push
fcmovne
lock
xchg
pushl
insl
fisubs
pop
repz
popa
mov
mov
mov
or
jne
add
or
mov
lret
ficoms
push
arpl
movsl
jbe
arpl
outsl
sub
add
mov
pop
xchg
stos
outsl
pop
fistps
ljmp
cmpb
cmp
inc
xchg
insl
pop
inc
test
mov
inc
jns
lock
sbb
push
add
cmc
andb
mul
or
sbb
sub
push
xchg
or
adc
sub
cmp
les
fwait
das
adc
cmp
leave
flds
sbb
lret
or
je
cli
mov
jmp
shll
movsl
sub
push
jbe
pop
and
icebp
daa
jbe
mov
movsl
lds
test
sub
xchg
add
jecxz
adc
pop
add
enter
cmp
ds
adc
icebp
cmp
add
mov
loopne
daa
nop
popl
xlat
pop
mov
dec
jg
ja
push
shl
leave
pop
adc
pusha
add
ja
pop
outsl
cld
outsl
dec
scas
dec
aam
jmp
arpl
add
lock
in
xchg
push
sti
popa
ljmp
push
clc
cmpsl
test
addl
inc
std
push
imul
movsl
in
mov
std
xchg
xor
inc
stc
testl
add
mov
sub
test
xor
dec
popa
outsl
fcompl
in
cwtl
cmp
cwtl
xor
pop
fistl
in
sti
pop
sub
ljmp
jne
inc
addr16
jg
rorl
xchg
pop
add
das
push
or
pushf
loope
or
mov
lret
jnp
xchg
push
cmpsl
mov
loope
cmp
cmp
inc
mov
sti
je
daa
cmpsl
and
dec
mov
dec
xlat
xor
cld
jmp
test
mov
xchg
dec
sahf
mov
lods
cmp
mov
cmpsl
mov
adc
cmp
fimull
pop
sub
loop
jge
repz
jp
jb
fchs
mov
into
andb
inc
sub
std
lods
orb
mov
and
adc
xchg
es
rcrb
jnp
dec
out
jmp
sbb
mov
and
inc
icebp
ret
test
pop
pop
push
jb
jg
push
neg
in
push
shl
pop
inc
mov
ret
ficoms
lds
sub
cmp
jmp
fsubrs
or
xor
jnp
cld
outsl
jno
push
ljmp
pusha
fistpl
pop
repz
jl
incb
cmp
adc
cmpsl
data16
and
inc
fprem
fs
dec
adc
jg
out
mov
jbe
movsb
insb
jg
xor
call
or
lods
mov
les
sbb
jno
out
outsb
loope
call
jo
mov
jns
jno
mov
rol
jp
mov
addr16
and
inc
sti
imul
aas
inc
fildll
mov
pop
dec
sbb
mov
or
push
dec
pusha
lret
outsl
xchg
push
mov
mov
fs
in
xchg
test
mov
cmp
rcr
aas
adc
mov
or
pop
adc
gs
and
shlb
jp
and
iret
pop
ss
stos
jle
mov
das
cwtl
icebp
loope
and
orb
fsubr
std
lahf
adc
mov
or
jne
lret
outsl
cmc
cld
dec
mov
sbb
dec
addb
dec
mov
loopne
scas
inc
fs
dec
jno
pop
sub
inc
movsb
and
pop
mov
stos
mov
add
xlat
xor
ret
xchg
popf
andl
dec
xor
pop
cmovl
fidivs
sub
aam
mov
mov
push
jnp
inc
cld
mov
cmp
sbb
fdivrl
shlb
jp
mov
jb
cli
cmp
arpl
dec
dec
loop
add
orb
movsb
adc
sbb
aas
jmp
bound
adc
pop
jl
cmp
push
aad
xor
mov
andb
addr16
in
data16
lahf
mov
movsl
hlt
mov
jno
sub
cs
mov
inc
ret
xor
jg
lret
scas
dec
mov
out
fs
sbb
stos
fnstsw
adc
int
adc
push
or
in
rorb
cmpsl
jae
add
out
test
idivl
icebp
rorl
cmp
xorb
pop
int
adc
jne
sahf
popf
and
and
sub
sahf
sbb
insl
ja
outsl
sbb
or
data16
fbstp
int
mov
jmp
push
decb
out
mov
mov
pop
pop
das
fnstcw
movl
loope
inc
int
mov
sbb
push
and
int3
jbe
inc
test
xchg
gs
stos
test
rorb
mov
inc
or
push
jnp
insl
aad
xchg
add
or
mov
aaa
jno
sbbb
adc
dec
aaa
into
jl
das
mov
mov
cmpsl
imul
fisubs
cmp
pop
int3
lahf
xor
push
rol
and
xor
jg
test
adc
cmpsb
je
in
inc
xchg
jne
int
xor
or
fadd
pop
or
sbb
idiv
cmp
dec
xchg
lret
je
xchg
xchg
dec
sbb
and
aam
inc
mov
in
shlb
inc
push
jge
shl
pop
mov
inc
mov
dec
and
arpl
outsl
inc
imul
repnz
cmp
adc
in
pop
je
and
test
mov
imul
cmp
cmp
pop
push
or
ret
pop
ret
mov
cmp
daa
inc
loopne
cs
dec
push
out
dec
scas
mov
in
insb
xchg
mov
scas
fiadds
lea
inc
sti
jb
movsl
adc
xchg
stos
sbb
out
ss
xchg
aas
rcrl
cmp
push
out
je
push
jmp
adc
stc
int
jb
or
cs
pop
pop
push
in
cmp
fildl
and
cmp
mov
daa
dec
or
jl
fwait
xchg
sub
mov
jl
clc
xchg
gs
arpl
mov
push
hlt
jmp
mov
mov
into
pop
dec
sbb
or
xchg
sbb
cmp
aad
inc
in
popf
dec
xor
sub
sbb
fs
dec
callw
mov
ret
mov
cmp
add
cs
shll
loopne
mov
dec
inc
imul
in
and
icebp
outsl
jbe
outsl
das
loope
push
shl
mov
jb
push
mov
aaa
jne
and
loope
inc
stos
jmp
jle
sbb
sbbl
fiaddl
into
in
push
call
movsb
pop
jmp
jo
in
xlat
cltd
add
mov
movsb
cwtl
pop
flds
fldenv
cmpsb
push
rcl
xor
fsubrs
push
mov
pop
lods
push
fldl
fcoml
leave
cmp
repnz
fdivs
jp
fadd
jbe
and
mov
mov
xchg
enter
add
aaa
push
shl
xchg
push
xchg
add
fs
mov
fisubs
cmpsl
inc
cmp
loop
bound
sbb
dec
out
sub
jecxz,pt
movsb
and
insl
add
adc
pop
sbbl
mov
stos
pop
call
ficomps
ds
pop
mov
fwait
dec
rcll
mov
test
jp
mov
cmpsb
push
notb
testl
xor
add
inc
pushf
mov
fisubs
das
cmp
movsl
push
out
mov
jno
insl
cld
fildl
lea
or
jns
jb
loop
inc
dec
inc
add
sbbb
mov
mov
dec
out
in
enter
sbb
das
mov
and
cmc
mov
pop
int
push
sub
out
out
xor
xchg
jne
cltd
es
push
sti
in
xchg
cmc
mov
ds
push
pop
push
sub
gs
or
je
sarb
pop
movsl
out
jns
cwtl
adc
cltd
mov
dec
and
divb
out
in
inc
inc
sbb
fs
xchg
pop
mov
test
mov
xchg
mov
dec
mov
orl
int3
outsl
pop
in
push
rorb
fbstp
inc
aam
add
loope
push
pushf
mov
sti
xchg
cmp
cmp
in
fists
mov
lret
popa
lret
sbb
mov
movsb
mov
sahf
mov
jle
push
mulb
pop
enter
push
out
pusha
pop
pop
sbb
mov
xchg
pushw
repnz
sub
out
cli
int3
mov
lahf
mov
mov
sub
inc
mov
mov
iret
push
inc
xlat
stos
adcb
fs
scas
sbb
fbstp
or
dec
mov
ficomps
mov
out
inc
xlat
out
lea
sub
push
push
mov
sbb
mov
push
test
sub
push
mov
icebp
nop
and
in
jp
idivb
xchg
mov
lcall
mov
xor
dec
loope
aas
ret
fistps
cwtl
xchg
pusha
stc
cwtl
push
mov
mov
push
or
pusha
bound
push
jae
cltd
std
test
inc
push
popa
mov
mov
mov
es
cmpsl
insl
jae
jns
imul
stc
mov
in
imul
mov
push
mov
es
and
push
pop
sarb
sub
inc
icebp
dec
push
dec
addr16
pop
cltd
imul
xor
mov
adc
adc
inc
jne
notb
lock
fwait
scas
xlat
push
into
bound
fiadds
into
push
das
push
push
repnz
int3
and
out
js
sbb
dec
and
cmp
mov
flds
xchg
jmp
xchg
mov
mov
les
dec
outsb
les
jns
xor
jle
sbb
stos
out
push
in
adc
fsubr
in
outsb
test
xchg
jae
add
nop
lret
div
xchg
out
cmpsb
mov
jle
adc
mov
add
in
mov
pop
xor
pushf
xor
pop
shl
cmp
inc
adc
jle
repz
pop
push
and
jne
je
xor
gs
das
imul
lcall
dec
sbb
inc
mov
stos
shr
sbb
loope
mov
mov
add
fnstsw
fisubl
xlat
inc
pusha
and
add
xchg
jp
movl
push
out
or
dec
shll
bound
aam
xchg
daa
inc
adc
fisttps
hlt
push
cmp
mov
jnp
in
and
push
jb
lea
dec
addr16
shll
xor
js
cmp
and
xchg
xchg
mov
push
push
popf
subl
shl
repz
sbb
in
mov
enter
pushl
or
mov
imul
pop
or
nop
sub
in
xor
or
pop
xor
test
mov
ret
pop
xchg
sbbb
jbe
and
push
mov
cwtl
shll
repnz
lcall
sbb
mov
sbb
or
push
mov
loope
push
pop
mov
push
jmp
xchg
push
jmp
pop
sbbl
insl
call
pop
repnz
dec
es
fisubrs
mov
outsl
jno
clc
addl
fidivl
xor
lods
mov
stos
and
lds
cld
mov
and
shrl
arpl
mov
jp
gs
fwait
sub
ss
pop
lock
sub
inc
cltd
loope
lret
sub
shl
orb
cmp
clc
out
dec
and
mov
jbe
mov
mov
push
jno
enter
bound
stos
ja
and
scas
test
dec
fsubr
jbe
push
xchg
ljmp
xor
std
mov
add
test
push
je
movsl
sarb
pop
call
jle
in
mov
fistpl
mov
mov
push
mov
add
mov
dec
inc
stos
outsl
call
lea
movsl
cmc
bnd
or
lds
mov
push
inc
cmp
push
mov
out
mull
aam
popa
insb
mov
sub
push
fcomps
jno
push
sbb
mov
test
int3
in
dec
testl
push
jp
mov
add
imul
jmp
lods
xchg
ja
or
add
jp
mov
and
rcrb
and
mov
stc
xchg
btc
jg
pop
inc
or
fidivrs
push
in
mov
in
adc
popl
dec
sbb
in
cs
in
sbb
xchg
xor
sbb
inc
mov
inc
aad
jmp
push
push
inc
mov
inc
mov
mov
jl
jne
aad
and
mov
lret
inc
mov
pop
push
or
sub
xor
lret
dec
xchg
ror
lods
ja
pop
adc
jo
dec
add
shl
or
mov
push
scas
mov
shlb
dec
fmuls
and
or
jae
add
jp
iret
dec
jmp
dec
enter
imul
mov
adcl
gs
shrl
jae
aad
cld
mov
and
popa
mov
lret
out
push
out
out
test
jns
mov
xlat
sti
int3
jo
in
aas
cltd
ss
fs
jmp
shll
mov
jbe
sahf
lret
xor
je
je
xor
xchg
xor
fidivl
andb
sbb
inc
sti
dec
imul
and
sub
jecxz
cmpsb
xchg
adcb
add
mov
call
push
aaa
repz
ds
pushf
scas
pop
fimull
sbb
std
pop
ja
pusha
push
out
push
inc
and
cmp
sbb
in
loop
test
mov
mov
or
lods
add
adc
add
push
lcall
enter
mov
push
adc
jb
dec
daa
mov
test
xor
or
loop
aad
or
add
inc
movsb
pop
loope
push
jo
outsb
xchg
mov
out
inc
out
cmp
xor
xchg
hlt
ds
lock
mov
adc
mov
cltd
mov
fistpll
lret
in
outsl
pop
jg
nop
scas
mov
ficomps
lods
or
dec
pop
mov
fwait
mov
sbb
add
sbb
or
jb
icebp
pop
cmp
xor
and
xchg
jae
and
add
in
repnz
iret
and
pop
lahf
mov
and
pushf
xor
int
shrb
jae
daa
jae
sbb
and
jl
lahf
stos
lock
iret
jecxz
add
addr16
enter
xor
pop
jno
jecxz
sbb
daa
mov
in
nop
mov
out
inc
mov
ss
push
ljmp
les
popl
leave
mov
mov
pop
les
in
xchg
test
dec
ds
lahf
testl
mov
adc
jle
xchg
es
movsb
xor
gs
int3
and
mov
xchg
or
into
and
lea
push
lods
aas
dec
loop
in
sbb
cmp
cltd
std
mov
add
xor
cld
push
ljmp
call
pop
dec
or
sub
enter
xor
insb
aas
call
adc
mov
jbe
add
fiaddl
adcl
or
fsubl
pop
popf
addr16
sbb
fildl
insl
decb
lods
pusha
jp
xchg
push
out
cmpsl
sbb
ja
and
push
test
mov
std
jge
into
out
push
cmp
pop
xchg
and
pusha
xchg
sub
jmp
push
mov
push
and
jmp
mov
dec
loop
sbb
sbb
jne
jno
mov
jns
jns
cmpsb
ror
xchg
mov
rcrl
es
push
jne
and
dec
jle
cmp
sub
lret
mov
lds
enter
arpl
jl
insb
cmp
cmp
scas
ljmp
adc
rcll
xchg
cmpsl
test
cmc
mov
imul
les
inc
lahf
test
ja
mov
fisubrs
jns
push
movsb
dec
pop
mov
push
testb
ss
loope
sub
pop
xchg
sbb
call
or
cmp
scas
jp
test
loope
xlat
and
and
mov
adc
iret
cwtl
xchg
arpl
test
and
iret
stos
testb
mov
call
cmp
mov
ret
pop
dec
jp
gs
in
fildll
jne
pusha
inc
mov
sbb
subb
iret
leave
mov
mov
mov
test
js
ds
repnz
mov
incb
jl
pop
mov
outsl
mov
fnstenv
aam
xchg
push
jae
cmp
and
nop
stos
pop
mov
repnz
data16
jno
arpl
js
jne
aas
cmpsl
sahf
orb
outsl
push
int3
mov
repz
xor
imul
mov
int3
xor
lret
jnp
and
jl
sbbb
lret
scas
push
xchg
js
mov
lcall
sbb
fimull
dec
test
xchg
push
cmp
inc
shl
movsl
mov
icebp
dec
cmpsb
mov
shlb
nop
loopne
sub
movsb
add
inc
scas
dec
arpl
fistl
gs
fdiv
adc
insl
sahf
lods
cmpl
adc
mov
mov
mov
pushf
push
xor
add
jno
repnz
das
jmp
rcrb
in
test
mov
stos
cmp
mov
cmp
loop
mov
xor
outsl
hlt
inc
cmp
jge
insl
jge
sahf
ja
shrb
mov
dec
subl
or
mov
pushf
call
mov
jg
scas
repz
sub
cmp
sub
mov
mov
orb
or
push
aad
shrl
inc
pop
jns
inc
testl
iret
std
inc
fwait
and
and
icebp
test
sti
dec
leave
xor
dec
inc
ljmp
in
cmpb
lods
push
mov
sub
lahf
lods
mov
xor
out
shrl
add
and
out
out
xchg
test
or
sahf
jne
inc
cmpsl
imul
xor
fbld
stos
cmp
cmc
scas
mov
push
xor
out
cmp
cmp
lds
dec
adc
push
cmc
adc
push
lret
cli
and
mov
test
insb
cmpsl
pop
mov
aad
xor
jmp
mov
inc
in
stos
ret
adcb
scas
popl
pop
divb
xchg
divl
in
fwait
sbb
in
les
cmp
negb
adc
sub
mov
inc
xlat
cmc
loop
mov
loopne
call
push
sbb
mov
in
mov
call
add
xor
xchg
popa
lret
movsl
inc
mov
cs
jns
clc
xchg
sub
fidivrl
clc
dec
dec
aas
jle
mov
pop
cwtl
inc
test
fdivs
push
loope
cmp
outsl
mov
mov
mov
jl
popa
add
mov
pop
jg
dec
scas
jo
fidivrs
mov
js
int3
and
test
ds
push
xlat
or
aas
add
es
outsb
pop
sbb
inc
mov
add
imul
ss
adc
iret
inc
push
sub
adc
jnp
in
or
add
jmp
dec
add
push
shll
nop
jp
test
mov
fucomp
jg
cltd
add
lds
jne
loope
mov
ret
sbb
loope
push
imul
mov
fisttpl
xor
lods
add
pop
add
cmp
add
test
lret
sub
xor
xchg
lods
pushf
cmp
jbe,pt
jo
aas
into
jg
stc
sbb
or
mov
pushf
pop
andb
popf
cmp
lret
jle
xor
jge
adc
je
lcall
push
xlat
pop
pop
jae
jge
bound
mov
loope
cmpsb
ljmp
aas
adc
push
into
loope
and
mov
test
test
cmp
rorl
xor
movsl
lods
out
ja
into
jmp
shl
push
in
notl
sbb
pop
cmc
jb
scas
sbb
imul
gs
addb
add
xchg
popl
bound
adc
or
mov
sti
mov
mov
mov
bound
lahf
dec
and
xor
mov
aas
and
test
sti
in
test
mov
mov
ljmp
jno
jne
shll
movsb
ret
hlt
out
test
cmp
sbb
ret
popl
jno
ja
sbb
imul
divb
out
in
push
push
mov
pop
jo
out
mov
fcmovbe
fisubrs
int
dec
cmp
pop
mov
pop
out
sub
pop
mov
mov
adc
mov
les
dec
mov
popa
pop
in
aam
mov
or
pop
jp
bound
lcall
push
cmp
scas
adc
aad
das
pop
arpl
mov
add
adc
adc
cmp
jnp
xchg
mov
test
jp
adc
add
pop
mov
cmp
test
jno
fisttps
add
dec
loop
sub
in
ljmp
pop
sub
push
xchg
adc
in
out
xchg
xor
pop
loop
push
mov
test
lcall
xchg
pop
daa
push
int3
mov
xlat
sub
insb
push
movsl
xor
mov
lahf
push
sub
push
mov
arpl
daa
les
sbb
mov
mov
hlt
sub
push
cltd
adc
mov
imul
movsb
or
ljmp
cli
mov
les
or
scas
inc
pop
stos
daa
rol
insb
mov
test
cmpsl
ds
stos
mov
cmp
into
push
push
mov
add
ss
mov
dec
fisttpll
add
jg
mov
adc
mov
xlat
call
les
das
mov
inc
mov
jae
test
xchg
adc
push
and
mov
test
fcompl
enter
mov
dec
sub
pop
xor
hlt
shll
test
jo
inc
xor
add
push
mov
sub
pop
pop
clc
xor
xor
in
adc
mov
mov
aad
imul
push
dec
dec
sub
xlat
popa
mov
pop
sub
sbb
xor
push
jp
es
and
inc
inc
inc
inc
test
mov
arpl
xchg
sbb
pop
xchg
lahf
std
or
push
inc
into
add
aaa
inc
adc
mov
dec
jmp
dec
pop
ljmp
push
test
icebp
cld
xchg
cmp
int
sub
out
imul
in
or
gs
and
pop
adc
adcl
xor
stos
jbe
or
xchg
and
insl
js
jbe
popf
cmpsl
adc
or
imul
das
rcrl
mov
push
xor
call
fidivl
iret
mov
mov
and
lahf
clc
xchg
sbb
hlt
movsb
and
pushf
xchg
dec
pop
shl
jb
or
sarl
xchg
pop
repnz
push
mov
jmp
cs
pusha
lea
loope
pop
outsl
sub
insl
scas
dec
ljmp
into
adc
bound
clc
lock
inc
push
rcl
sub
adc
pop
jae
cltd
les
xor
sbb
sub
mov
mov
and
ja
sbb
mov
mov
sbb
dec
insb
rol
insl
loopne
and
bound
dec
nop
cmp
orb
aaa
cltd
gs
xchg
mov
fsts
icebp
es
fcomi
jae
dec
push
out
xlat
test
jge
cld
imul
data16
rol
sub
or
outsb
aam
data16
jb
je
pop
out
push
jnp
inc
fucomi
lods
push
mov
cs
test
mov
or
mov
out
out
sbb
mov
in
inc
gs
orl
sub
fisubl
clc
mov
pop
jne
cmc
cmp
mov
fnclex
xchg
mov
sub
cmpsb
inc
insb
stos
ss
pop
lcall
sbb
rsqrtps
in
in
adc
pop
push
test
dec
mov
mov
lahf
clc
cmpsl
int
pop
std
iret
adcb
lret
aas
push
lahf
xchg
adc
xor
push
ljmp
sub
fildll
mov
in
sub
clc
and
pop
scas
xchg
or
rolb
adc
jp
pop
lock
jae
movsb
pop
mov
insl
sbb
and
jl
mov
ret
xchg
pop
jle
cltd
arpl
cmp
inc
insb
dec
xor
inc
call
sbb
insl
mov
lcall
and
hlt
xchg
jno
sbb
dec
xlat
fcomps
adc
sub
or
mov
mov
testl
movsl
sub
adc
lcall
dec
loop
cli
xor
inc
sub
push
push
push
cld
stos
pop
inc
sub
jae
xlat
push
fcmovbe
int
insl
lods
mov
and
out
inc
cmp
sbb
cmp
push
nop
and
pop
leave
lods
ljmp
es
xor
lret
fcmovnu
inc
push
mov
push
mov
ja
fldcw
fxch
xor
jb
test
fs
fildll
add
sahf
adc
fisttps
movsb
xlat
mov
mov
rcl
cmp
dec
fidivs
cmp
pusha
pop
push
cmp
push
js
push
scas
in
xlat
aam
jnp
les
pop
pop
push
and
lock
mov
movsb
xchg
jmp
cmpsb
mov
lret
pop
int
cs
xchg
mov
dec
dec
inc
sbb
pop
outsb
xchg
mov
cmp
mov
mov
mov
imul
hlt
fistl
outsb
and
dec
out
inc
adc
leave
mov
jbe
or
ljmp
andb
cmp
mov
scas
call
mov
or
es
dec
pop
mov
mov
es
jmp
sub
or
or
mov
out
out
insb
inc
adc
jmp
pop
jo
jl
cmp
sub
jg
fldt
dec
mov
cmp
jne
callw
push
cltd
ss
mov
lds
movsl
xchg
push
xchg
mov
sbb
rorl
les
pop
xor
outsb
xchg
aad
mov
data16
ds
add
xchg
inc
lea
jnp
nop
and
data16
xor
imul
fnstcw
mov
jae
jbe
pop
out
lea
mov
push
pop
ja
add
jge
ret
dec
inc
jno
cmp
jmp
adc
push
das
imul
dec
lret
mov
mov
sub
pop
xchg
orb
jbe
bound
add
jmp
inc
jmp
dec
aam
xor
mov
in
ret
xor
dec
pusha
jl
xor
in
jbe
xlat
imul
push
stos
fcoms
cs
mov
pop
imul
push
test
dec
sub
add
add
addb
cmp
mov
adcl
movsl
add
push
xchg
repnz
mov
adc
stos
out
lds
in
lret
cmp
cmp
movsl
mov
cmp
push
sbb
inc
pushf
fidivs
fimull
xchg
xor
out
insl
outsb
add
inc
ficompl
jne
cmpsl
gs
ss
sar
push
rolb
ret
cmp
mov
mov
or
inc
fsubs
inc
mov
cmp
pop
jl
dec
mov
cmpb
lret
lret
add
push
lock
jp
loop
int3
sbb
push
outsl
push
sahf
adc
aam
mov
inc
fcoms
stc
fsubrl
sub
pop
sbb
xchg
cs
xchg
hlt
add
dec
inc
clc
in
jno,pn
mov
mov
and
lret
or
aam
inc
cmpl
sbbl
cmp
adc
cmpsb
lea
lret
testl
xor
mov
mov
decb
bound
pop
push
push
sub
test
dec
fwait
cmp
cmp
dec
cmp
mov
daa
into
cld
mov
sub
pop
popa
adc
gs
js
fwait
lcall
icebp
fldenv
cmpsb
dec
fpatan
sbb
lods
add
mov
and
push
fs
es
or
mov
shrb
adc
pushf
aas
int
adc
dec
popf
aas
lahf
ss
test
jo
mov
add
loop
into
xlat
sbbb
sbb
popf
mov
sti
and
mov
lcall
je
dec
jns
mov
out
xchg
adc
daa
xor
dec
scas
sti
xchg
rcl
repz
or
mov
jmp
repnz
imul
sub
imul
imulb
loop
mov
pop
test
mov
imul
and
lret
cmc
mov
push
mov
aaa
lahf
or
jae
stc
mov
sbbl
add
addr16
jns
je
jnp
and
pusha
divb
push
mov
mov
into
mov
jns
enter
das
jnp
scas
jns
dec
sbb
testb
mov
jnp
jb
lcall
les
mov
push
adc
push
int
mov
pop
mov
clc
rolb
mov
insl
in
js
mov
jns
clc
sub
out
add
add
pushf
test
xchg
js
cmpsl
mov
es
xchg
dec
push
xor
movsb
gs
test
bound
pop
adc
lret
aas
xchg
mov
jno
cmc
push
pushf
addr16
sbb
test
sahf
or
cmp
xchg
mov
aam
mov
daa
pop
and
push
pushf
xorl
out
and
sbb
negl
add
sub
push
fsubl
ret
and
sub
mov
add
iret
cmp
sbb
fbld
or
notl
add
sub
or
addr16
add
stos
mov
loopne
mov
push
or
outsl
xchg
lret
leave
push
cmp
xlat
mov
roll
hlt
xchg
xor
sub
mov
test
imul
cmpsb
mov
jl
pop
andl
fldcw
or
and
push
dec
dec
jp
les
dec
out
mov
inc
rcrl
das
shrl
xchg
lods
jnp
and
mov
lods
mov
pop
sub
pop
xchg
cli
hlt
pop
adc
addr16
and
mov
mov
int3
inc
movsl
jno
add
stos
ljmp
add
mov
jne
lods
push
and
test
xchg
push
std
mov
das
inc
cwtl
and
jmp
fsubrl
dec
pop
or
out
int
test
hlt
push
lea
cwtl
std
sbb
movsb
inc
movsl
arpl
inc
xchg
xchg
and
cmpl
enter
inc
test
dec
adc
ret
xchg
sbb
test
aaa
icebp
xchg
cltd
jge
enter
les
addr16
and
or
loope
aas
movsb
pop
or
lds
jl
daa
lret
into
enter
fcom
jg
sbb
test
push
insl
sub
sbb
cmp
lahf
pop
shlb
sbb
sub
gs
or
in
pop
movsl
lds
inc
mov
xchg
xchg
xor
loopne
add
into
andl
and
and
mov
adc
adc
outsb
repz
cmp
cmp
push
push
adc
les
jge
pop
mov
outsb
add
jb
cmpsb
movsb
out
enter
pop
inc
out
push
and
adc
mov
testb
adcl
jno
popa
ljmp
sbb
popa
lea
jle
in
insb
fnstcw
pop
jo
lods
fisttpl
xchg
pop
jo
pop
dec
and
jmp
bswap
mov
add
stos
outsb
mov
mov
gs
pop
inc
jmp
test
psubusw
jbe
xchg
sub
pop
test
stc
clc
xor
cmp
imul
popf
pusha
mov
sbb
cmp
mov
and
cwtl
sub
fbstp
cmp
loopne
lcall
movsl
lea
mov
pusha
rcll
jb
xor
in
inc
stc
popf
negl
xchg
mov
fwait
nop/reserved
pushf
stc
adc
in
adc
mov
popa
mov
adc
repz
int
lods
mov
test
repz
bnd
and
lods
push
mov
iret
lods
cs
fisubrl
rolb
jle
jg
and
inc
cmp
stc
jecxz
rol
pop
enter
mov
scas
add
xor
ss
vsqrtps
pop
repnz
int3
xchg
aaa
outsb
xchg
into
aad
xchg
inc
xor
mov
in
or
push
xchg
and
mov
bound
xchg
xor
pop
insb
js
insl
scas
call
mov
test
jae
or
jns
dec
pop
mov
cwtl
mov
cmpb
insl
mov
stos
xchg
mov
push
imul
dec
inc
push
xchg
xorb
shll
pusha
or
cli
addr16
jmp
nop
gs
cld
push
dec
dec
sub
lahf
push
mov
popa
rcrb
loope
popf
mov
test
jle
shlb
push
shlb
pop
inc
push
int3
outsl
or
lret
dec
lods
scas
push
loopne
in
fisttpl
sbb
push
pop
repz
sbb
jb
mov
hlt
push
push
popf
in
cwtl
mov
ljmp
call
test
loope
adcl
cmp
mov
loopne
inc
xchg
jno
push
push
xchg
adc
mov
movsl
mov
out
mov
stos
sbb
stos
push
inc
fs
mov
mov
or
imul
pop
fbld
jo
mov
lea
ds
xor
push
out
in
cs
sbb
sti
push
mov
jg
fstl
jbe
cmp
daa
cmpsb
inc
ds
jmp
and
outsb
insb
ss
sahf
dec
sbb
fistpl
jne
int
dec
sti
cmp
hlt
push
add
loopne
inc
fidivrs
fldt
in
adc
push
arpl
ficomps
int
pcmpeqd
das
pop
xorb
imul
jne
clc
ss
sti
daa
inc
fidivrs
lcall
mov
jns
push
cmp
scas
mov
pop
push
movsb
dec
sbbl
or
loopne
icebp
jb
in
mov
push
sbb
push
sbb
adc
xchg
stos
or
dec
mov
fisubrs
dec
lds
add
and
lahf
xchg
dec
test
ja
sbb
jno
mov
sub
inc
cld
jl
sub
orb
dec
inc
jg
enter
inc
mov
scas
and
inc
xchg
adc
dec
sbb
push
ret
icebp
ja
jns
lea
push
ss
cmpsl
cmpsb
data16
movsl
shlb
daa
cmp
cltd
sub
and
ss
and
xchg
arpl
xchg
test
insb
lds
sahf
test
aaa
push
xchg
xor
adcb
fsub
add
mov
push
lods
jb
test
fwait
xchg
dec
pop
mov
inc
pop
mov
xlat
sbb
pop
and
pop
jg
fstpl
lcall
sbb
xchg
jp
or
loopne
mov
push
in
std
cwtl
and
cltd
and
je
icebp
outsl
outsl
sbb
pop
or
sub
mov
test
arpl
pushf
pop
popf
cmc
sarl
cld
xchg
jo
lods
push
scas
xchg
sarb
fwait
lock
xchg
pop
mov
lret
xor
and
in
pop
or
push
mov
imul
fiadds
test
or
mov
mov
jo
movsl
lods
sahf
arpl
xchg
fabs
push
mov
nopl
loope
test
hlt
fsubs
ror
shrb
mov
add
jle
aam
cmovo
and
dec
jp
cmp
pop
loope
jnp
sbb
vorps
or
lods
aam
js
xor
push
test
adc
or
jecxz
lret
inc
push
jo
add
cmc
inc
push
inc
lds
add
push
call
test
movl
and
sub
xor
adc
and
jno
aas
push
xchg
adc
std
stos
sbb
mov
nop
push
hlt
or
icebp
stc
sbbb
iret
dec
jl
adc
rcl
mov
mov
mov
xor
xor
lcall
enter
int
out
enter
or
xchg
arpl
sbb
dec
test
inc
inc
loop
sbb
int3
pmulhw
inc
pop
cmpsb
sbb
fsubrs
mov
jns
jge
cmp
lcall
scas
adc
mov
push
and
jns
dec
pushf
mov
iret
push
mov
movsl
lds
jo
mov
stos
lea
bound
jp
dec
or
nop
into
mov
push
hlt
push
or
mov
jno
out
xchg
scas
lea
loope
sbb
adc
iret
es
xor
adc
sbb
dec
stc
xor
xor
into
xchg
fdivrs
push
jno
dec
sahf
data16
sahf
stos
hlt
sbb
sub
ds
dec
inc
ret
dec
fsubr
mov
cmp
lods
pop
lcall
cltd
out
add
in
shl
lods
and
add
stc
rcrl
das
cld
mov
jmp
test
xor
mov
mov
add
push
shll
ret
fs
lcall
jmp
lods
xchg
jo
jecxz
sub
je
cmp
inc
xchg
aas
stc
std
cmp
in
sahf
sub
dec
icebp
or
lods
or
sub
inc
aaa
clc
sub
sarb
repz
jnp
sub
jb
pop
cmp
mov
pusha
pop
repz
out
push
jnp
mov
mov
fcomps
sub
stos
mov
xchg
jae
repz
mov
fcompl
aam
leave
into
xchg
mov
mov
cmp
adc
and
mov
mov
popf
out
jg
sbb
jmp
push
jecxz
stos
inc
cltd
or
and
lock
fadd
out
jecxz
cmp
ret
pop
bound
aad
mov
dec
dec
icebp
rorl
mov
dec
mov
jb
int
xchg
xlat
mov
mov
xlat
dec
mov
outsl
lea
repz
data16
dec
dec
mov
psraw
in
mov
iret
dec
mov
jnp
fcmovb
pop
jnp
sbb
inc
push
lods
mov
out
ja
sub
jg
sbb
imul
xchg
sub
in
jle
push
mov
pop
push
cmc
int3
xchg
cmp
push
jb
mov
scas
addr16
ffree
fistpll
pop
mov
shll
nop
sub
pop
insb
nop
pop
scas
out
add
test
cmc
std
in
stos
jmp
int
inc
lcall
lret
jb
lods
jg
fs
mov
iret
adc
mov
lock
repnz
or
mov
xchg
cmp
notb
add
cld
jnp
mov
dec
lret
shl
push
xabort
jge
or
mov
xchg
fs
sub
imul
enter
mulb
xchg
cmp
inc
decl
push
cmp
fbld
dec
mov
add
dec
ds
test
les
jg
outsb
mov
cmp
negl
mov
mov
cmp
movsb
cmp
add
jp
aaa
fwait
and
loop
data16
ds
mov
jne
lods
jp
sbb
mov
data16
jbe
sbbl
lods
repz
adc
inc
push
push
movsl
inc
je
stc
push
mov
hlt
scas
std
and
rolb
adc
sbb
add
insl
jae
cmp
lods
ret
in
adc
and
bound
cmp
lods
cmp
fsubrp
adcb
jbe
sahf
scas
jb
popa
xchg
pop
call
arpl
add
pop
add
mov
jns
aad
adc
xchg
clc
js
adc
fucomip
jl
mov
adc
xor
xchg
in
cwtl
ret
push
inc
outsb
sahf
xchg
sbb
inc
mulb
ljmp
dec
test
testb
fbld
aaa
or
data16
mov
adc
insl
ja
mov
inc
xchg
jg
idivl
inc
lcall
pop
push
add
rorb
js
pop
sub
aas
lahf
push
cmovge
cmp
popl
add
pop
pop
push
mov
ret
into
add
ljmp
push
mov
mov
xchg
pop
filds
in
sarl
mov
inc
aad
mov
clc
mov
mov
push
test
sarb
ud2
pop
and
xchg
cwtl
fs
dec
jle
mov
pop
cmpsl
mov
inc
subl
fnstsw
pop
lret
mov
fnstcw
push
enter
stos
jmp
mov
cmp
mov
stc
mov
cld
or
cmc
sub
xor
jne
frstor
jecxz
xor
cmp
pop
inc
mov
ret
add
lods
cs
mov
sti
xor
adc
shl
cs
lcall
aaa
or
mulb
scas
dec
lcall
dec
cmc
push
rorl
repz
adc
jno
outsl
imul
loope
repnz
sbb
push
inc
and
dec
popa
lahf
push
fsub
jo
adc
cmp
insl
inc
cvtps2pi
mov
rclb
dec
stos
jne
or
mov
rcll
xor
sbbb
pop
shll
push
cwtl
add
jno
mov
mov
sub
ja
and
stos
or
out
mov
jle
sub
loop
stc
push
cmp
stos
xor
pop
movl
mov
pop
mov
ds
push
imul
movsb
addr16
xchg
fdivrl
inc
pop
pusha
adc
andl
lahf
imul
add
inc
test
loope
push
pop
lret
popf
xor
xlat
sbb
jbe
dec
and
dec
cs
mov
fs
bound
xor
sbb
jg
jmp
in
pusha
add
xchg
sub
pop
mov
stos
or
out
cmp
pop
adc
aam
clc
test
lret
mov
inc
scas
jmp
mov
inc
and
int
loopne
hlt
fdivs
arpl
sbbl
mov
cwtl
sub
pop
out
dec
pushf
and
mov
jg
ds
dec
pop
jp
loop
sub
jnp
lahf
ss
xchg
mov
add
cmpsl
jle
mov
add
mov
aad
and
sbb
cmp
fwait
lods
adc
xchg
sbb
pusha
not
mov
and
daa
in
aaa
int3
mov
inc
push
dec
xlat
push
stos
clc
pop
enter
xor
lahf
inc
popa
mov
pushf
cwtl
int
pop
add
pop
adc
mov
add
imul
mov
xchg
not
ror
loope
sbb
add
adc
clc
subl
fsubrl
popf
das
xchg
add
xor
fsubrl
push
sti
dec
or
stos
or
in
int
pop
bndldx
ja
in
jmp
jbe
decl
fwait
cmp
mov
iret
xchg
call
adc
rorb
jne
into
out
pop
pop
fdiv
mov
test
sub
adc
aaa
push
xchg
jg
fidivrl
pushf
inc
and
iret
fiaddl
std
pop
and
movsl
sub
mov
pop
push
jb
in
mov
scas
jl
jae
dec
pop
adc
andb
xchg
sub
aad
push
sbb
inc
pop
xchg
pop
xchg
push
or
movsl
mov
cltd
insb
fwait
push
mov
adc
ret
int3
out
dec
pop
outsb
cli
push
test
loope
fists
push
pushf
jg
jmp
iret
mov
mov
dec
and
aas
std
xchg
outsl
jl
jp
add
loope
decb
cmpsb
mov
nop
mov
add
push
adc
mov
add
pop
repnz
fisubl
sbb
enter
popa
fidivrs
repz
leave
bnd
js
aad
lcall
ja
mov
inc
mov
out
int3
jne
dec
dec
push
mov
mov
xor
xchg
push
inc
int3
push
int
xor
mov
data16
andl
push
lahf
mov
xlat
icebp
mov
inc
cmp
pop
push
insl
call
cmp
rcrl
mov
mov
stos
push
mov
pop
cmp
xor
fs
mov
add
fisubrs
out
fldenv
in
push
cmc
inc
xor
std
mov
outsb
fwait
and
mov
xlat
sbb
inc
dec
pop
call
pop
jmp
cmpl
lahf
mov
push
gs
pop
and
lds
or
lfs
cltd
cld
mov
addr16
push
arpl
jb
fsubl
call
sbb
ds
jmp
shrl
dec
daa
mov
mov
sbb
add
mov
lret
std
push
lods
daa
nop
mov
aad
or
ja
pop
rclb
or
in
mov
sbb
imul
test
mov
mov
mov
pop
add
hlt
push
push
cli
mov
mov
mov
faddl
int3
mov
out
fildll
push
mov
call
adc
cwtl
inc
das
xor
int3
mov
ljmp
inc
mull
lret
enter
mov
movsl
jl
xlat
pop
xchg
aaa
fcmovne
sub
hlt
insb
lar
xor
adc
sbb
test
mov
xchg
lds
inc
xor
sub
decb
jns
add
xlat
add
pop
je
inc
sbb
mov
adc
das
and
pusha
ret
mov
outsl
cmpsl
mov
sub
repnz
test
loop
push
fld1
cli
mov
push
mov
mov
sub
subl
lret
les
cmpsb
shll
outsb
int3
or
stos
lock
push
stos
popa
xor
xor
into
icebp
adc
xor
dec
mull
outsl
inc
shlb
inc
dec
xor
dec
data16
loopne
divps
mov
pop
addb
loopne
xor
fidivrs
lock
cltd
add
jnp
lods
movsl
testb
and
push
jmp
inc
push
icebp
pop
fucomi
cmpps
ss
xor
fmull
rcll
cs
mov
or
addr16
insl
mov
add
jg
and
outsb
mov
shrb
lock
lods
pop
cmc
push
inc
fidivs
mov
popf
test
mov
inc
pusha
outsb
jl
or
test
loopne
dec
negb
stos
add
lock
push
push
xchg
popa
add
mov
dec
lods
mov
cwtl
aaa
push
mov
sbb
xor
pop
adc
sbb
mov
and
out
push
shl
nop
je
add
scas
jle
or
cld
pop
test
xchg
daa
ret
jb
push
jno
sarb
cld
mov
test
shrl
lods
mov
jle
xor
mov
mov
repz
xchg
push
dec
lea
mov
inc
lods
fwait
xor
adc
inc
fidivl
mov
lods
mov
push
cmpsb
jl
fdivs
xchg
sarb
push
insb
pop
mov
shlb
cmpsl
and
add
jnp
cs
or
je
jecxz
jmp
pop
mov
cmp
insb
hlt
mov
movsl
or
or
jnp
imul
or
pusha
in
ss
pop
js
pop
pop
sub
or
jg
push
leave
xor
xchg
sub
push
pop
add
jne
pop
and
fs
mov
and
mov
popf
adcl
call
sti
dec
xchg
jl
stos
enter
xor
inc
ficomps
enter
adc
push
shl
mov
insb
push
jns
push
pop
jae
bound
iret
or
loopne
push
inc
jge,pn
aas
mov
and
mov
pop
ror
xchg
into
dec
lds
int
fiaddl
mov
mov
aad
std
sbb
jb
adc
repnz
clc
add
or
sti
sbb
cmpsb
mulb
inc
mov
pop
inc
add
mov
inc
pushf
bnd
mov
scas
sub
in
js
stc
test
mov
mov
leave
movsl
push
sbb
bound
cltd
movsl
xchg
idivb
lods
pop
fists
sti
in
imul
or
add
push
mov
paddd
fcmovb
out
pushf
or
ljmp
cmp
mov
inc
fldt
popa
cs
mov
out
shrb
lret
jo
ret
mov
je
fisubrl
pop
mov
xchg
mov
sub
push
push
and
sbb
iret
lea
jno
add
outsl
orb
or
loopne
mov
dec
lds
cmpsb
mov
push
adc
xor
das
cli
cmpsl
xchg
adc
and
mov
push
cld
inc
sub
cmp
mov
sub
test
inc
popa
jg
adc
mov
insl
xchg
cmpsb
pop
lahf
cwtl
mov
mov
mov
mov
xor
cmp
scas
iret
mov
js
rcrl
inc
js
fstpl
jbe
xor
mov
cmp
sbb
shlb
cmpl
ja
inc
imul
jne
mov
mov
fdiv
loope
xor
sar
mov
inc
push
lods
pop
add
xchg
add
in
popa
test
or
dec
sub
xchg
sahf
xor
cld
pop
aaa
stc
cmp
cli
test
dec
in
jmpw
icebp
xchg
adc
inc
xchg
add
loop
addl
cmpsb
inc
imul
les
mov
inc
test
cmp
mov
add
int3
out
test
mov
add
stos
push
lret
andl
pop
cmpsb
mov
je
sub
test
push
mov
jg
jae
or
xchg
je
inc
xor
adc
or
mov
mov
divl
pusha
fnstsw
mov
aaa
insl
iret
and
addr16
addl
jp
outsl
stc
inc
sub
pusha
jns
push
aam
dec
or
inc
lret
sbb
sbb
xor
scas
dec
repnz
iret
mov
imul
cmp
sub
loop
daa
cli
hlt
add
push
xchg
data16
push
mov
xchg
jnp
sbb
or
ret
xchg
dec
iret
lods
les
out
xor
fs
out
lods
pop
jbe
xchg
mov
out
xchg
and
cmp
lahf
mov
je
pusha
nop
pop
gs
sti
jbe
setb
sub
xorl
inc
cwtl
test
in
adc
pop
stos
divl
push
sbb
or
sbb
mov
inc
pusha
xchg
jmp
insl
xchg
mov
pop
or
adcl
sbb
pop
les
lods
pusha
int3
loope
popa
adc
jmp
jp
or
sub
push
js
imul
sub
or
push
sub
mov
sub
lods
or
pop
jae
jmp
cmp
sbb
ja
ljmp
ja
jle
cli
test
jmp
adc
cs
cli
pushf
xor
or
movsb
xor
pop
xor
add
and
cltd
stc
xor
addl
fwait
outsb
mov
lods
xchg
inc
sbb
lds
stos
hlt
push
test
xchg
cmpsl
sub
shl
mov
adc
cmpsb
cwtl
xor
jbe
test
push
fs
jbe
aaa
adc
repz
loop
sbb
std
vcvttpd2dqy
mov
mov
rcrb
aas
stos
in
dec
loopne
loopne
cli
adc
test
dec
in
fcoms
pop
mov
sbb
mov
pop
mov
insb
std
testl
test
fs
dec
jecxz
or
clc
or
adc
xlat
push
mov
jp
je
mov
sbb
xchg
sbb
popf
lods
push
inc
adc
push
popf
lock
scas
mov
loop
and
pop
in
mov
push
jae
xor
mov
pop
int
and
int
cmpsl
out
call
or
ret
scas
ret
jle
pop
xor
push
pop
leave
push
pop
pop
out
add
inc
fcomps
mov
xchg
push
lock
push
inc
mov
dec
loope
sbb
popa
fwait
sub
cmc
xchg
sarl
ret
cmp
xlat
adc
pop
jae
divb
into
movsl
pusha
sub
aas
dec
xorl
shrl
into
jno
fs
outsl
andl
loopne
xorl
ljmp
mov
clc
cmp
mov
fwait
insb
xchg
jb
andb
or
fiadds
mov
movsl
in
aam
jg
mull
add
sbb
bound
or
mov
rorb
cmpsb
xchg
fstps
enter
pop
push
and
cltd
lock
or
and
or
jmp
sub
add
std
fisubl
inc
cmc
std
adc
push
push
cwtl
movsb
xor
out
roll
push
jmp
aas
and
xchg
or
fnstsw
cmp
loopne
add
dec
fbstp
pop
icebp
lea
js
push
add
int
inc
aad
mov
sbb
jno
mov
fs
push
pop
jecxz
cs
and
or
and
jnp
ljmp
cmc
jo
pusha
jl
xchg
dec
mov
jo
mov
hlt
pushf
in
ja
test
jecxz
pop
shlb
pop
mov
nop
sbb
sub
jbe
jecxz
jo
cli
shrb
cltd
or
das
stc
inc
lods
inc
jl
ljmp
push
push
out
mov
int3
loopne
loope
cld
jb
outsb
les
movsb
cld
out
or
rcll
out
mov
push
not
adc
mov
enter
dec
mov
cmc
sub
dec
mov
mov
js
pop
out
imul
aas
push
popf
pop
xor
mov
in
mov
test
pop
xchg
rsm
add
and
imul
and
push
call
jl
and
xor
lahf
jno
cli
xor
mov
fcom
cltd
sub
icebp
testl
pop
adc
test
pop
adc
jns
mov
in
pop
inc
addl
adcb
xchg
and
aaa
adc
sub
das
ret
or
xor
divb
lahf
clc
aam
ret
mov
shrb
pop
das
dec
pushf
imul
repnz
add
fldl
lahf
xor
mov
adc
mov
aam
daa
push
loope
call
gs
cli
sarl
mov
lret
shll
aad
mov
sbb
or
cmp
xchg
rcrb
jmp
push
xor
inc
mov
inc
adc
inc
fisubl
adc
mov
dec
fcmove
mov
push
sbb
xchg
pop
dec
and
mov
xchg
sub
mov
pop
lret
cmp
in
insl
lods
shl
and
test
dec
mov
cmpsb
lea
push
push
xchg
xor
inc
inc
xchg
out
sarl
jmp
call
cmc
mov
daa
nop
jnp
push
push
cmp
lock
movsl
push
jo
enter
and
inc
fs
and
aas
mov
enter
push
cmp
dec
cmp
fs
jae
cmp
imulb
xchg
jl
lcall
lea
pop
cli
sub
pop
out
cmpsl
dec
pop
mov
add
fbld
loopne
cmp
lahf
mov
test
pop
popf
stc
xor
and
jecxz
jno
xchg
adc
jne
add
sub
ffreep
aam
xlat
test
int
add
mov
push
jns
push
mov
lcall
ret
es
inc
imul
test
std
aaa
mov
aaa
dec
int3
insb
outsb
sbb
dec
pushf
sbb
lods
xlat
pop
mov
xor
in
in
push
inc
scas
movb
addps
movsb
xor
adc
pop
add
xchg
jmp
sub
stos
lock
stos
int3
dec
stos
jbe
xchg
mov
lods
insb
mov
mov
push
sahf
lret
xlat
add
popf
pop
mov
sbb
xchg
jae
scas
and
jne
mov
xchg
xor
push
jno
int3
sub
outsl
adc
js
jo
pusha
or
xchg
lcall
jbe
or
inc
pusha
inc
data16
ja
stos
es
shrl
rolb
xchg
dec
xchg
lods
inc
cli
and
sub
push
imul
push
sbb
cmp
sbb
dec
or
dec
in
insl
stc
orb
rol
call
loopne
push
add
mov
gs
mov
dec
mov
dec
jp
jno
xor
popf
and
es
or
int
stc
aas
xchg
in
in
sbb
test
incl
and
subb
add
imul
lock
xchg
dec
stos
cld
and
pusha
pop
ljmp
jp
inc
mov
push
dec
mov
push
ja
mov
add
mov
stos
add
fsubrl
popa
add
lcall
fldt
dec
and
popf
stc
push
ret
inc
fstp
data16
movsb
inc
adc
ja
jae
and
movb
scas
dec
pop
xorb
pop
js
push
in
mov
out
jb
insb
out
scas
xchg
xchg
jecxz
pop
scas
out
fisttpl
pop
roll
jle
mov
xchg
ja
xor
scas
arpl
push
fcoml
jecxz
mov
out
push
pop
push
lea
arpl
push
icebp
push
leave
mov
repz
fwait
push
es
stos
inc
out
mov
or
jg
adc
add
xchg
mov
inc
add
pop
xlat
xchg
cmp
test
add
shlb
in
inc
test
cmp
pop
sbb
jo
sub
fwait
push
jp
pop
in
push
push
fmull
lds
sahf
cmpps
out
lds
push
pusha
fisttpl
push
out
adcl
insb
add
pop
mov
adc
lods
pop
sahf
dec
pop
int3
xor
call
leave
mov
xchg
xchg
cmp
pushf
out
sti
sub
add
shll
fsubl
rorb
and
dec
rcrl
pop
adc
xchg
flds
lahf
ficomps
sbb
push
lods
jmp
xor
bound
mov
ljmp
jbe
fwait
lods
dec
xchg
xor
jo
leave
xchg
push
decb
push
ret
xchg
hlt
insl
out
nop
adc
and
inc
cs
in
cmp
mov
add
mov
add
jo
cmp
data16
cmp
pop
and
cmp
jnp
push
imul
ja
push
pop
dec
add
leave
ss
mov
test
in
push
ret
xor
dec
mov
jns
or
jb
repz
push
push
mov
jmp
or
stc
stos
shl
mov
addl
xor
and
mov
push
out
dec
mov
inc
ret
sub
mov
andl
add
jmp
sbbb
jne
dec
and
test
cmp
dec
lret
mov
cmp
xchg
push
sub
push
dec
out
xchg
cmp
cmp
xchg
fadd
mov
mov
outsb
inc
fisubs
pop
or
jl
sbb
adc
pop
fidivrs
sub
rcrb
in
push
sub
pop
jbe
inc
sub
aam
or
inc
dec
cmpb
incl
aam
aam
popa
les
xor
push
and
clc
sahf
adc
aaa
lds
jmp
fcomp
bound
xchg
repnz
xor
mov
push
and
jl
and
arpl
add
xchg
sub
jb
cmp
lock
dec
push
out
jns
je
adc
icebp
cmp
mov
shll
or
sub
fiadds
imul
or
push
aam
xor
test
xor
jp
mov
outsl
nop
jnp
inc
rcr
call
pause
mov
shr
xchg
add
jo
lret
into
inc
push
sahf
ss
add
inc
sbb
mov
leave
repnz
xchg
mov
gs
insb
xchg
cwtl
iret
xchg
push
cmc
jmp
jmp
push
dec
imul
scas
add
dec
xchg
jle
mov
sub
out
push
xchg
cld
inc
fnstsw
in
fwait
mov
je
cmp
sbb
xchg
stos
inc
jle
jnp
addr16
cwtl
test
jnp
mov
lock
adc
jge
cmc
xor
jnp
mov
lods
icebp
int3
xchg
adc
sub
xor
imul
lock
pop
lods
add
and
mov
inc
enter
insb
add
jno
sub
mov
jne
dec
xor
dec
loop
test
imul
jns
fbstp
pushf
rcrl
add
rol
xchg
shl
fisubrl
arpl
cs
subl
mov
mov
popa
ret
sub
add
mov
inc
lods
xor
mov
repnz
push
mov
pop
sub
js
mov
aad
push
or
jnp
js
lcall
inc
mov
dec
ret
les
push
outsb
out
sub
pop
xchg
inc
push
lods
mov
xor
dec
stos
mov
mov
pop
sbb
add
inc
pop
mov
or
push
mov
mov
je
jg
in
xor
movsb
notl
lds
xor
std
lods
mov
push
lods
jne
lock
sbbb
mov
ficoms
insl
inc
popa
xchg
punpckldq
fcomp
insb
js
stc
andb
ret
pop
in
cwtl
push
leave
sbb
mov
hlt
addr16
iret
jb
mov
cli
rorl
repz
xchg
mov
mov
fcmovne
dec
pop
mov
mov
xchg
dec
mov
lcall
cmp
xchg
les
push
test
imulb
mov
or
jae
jmp
jnp,pt
jno
fsts
lds
and
mov
lahf
mov
xchg
pop
jno
dec
or
adc
jg
scas
je
add
mov
xor
mov
sbb
fldenv
ja
fadds
mov
iret
rorl
or
jnp
mov
xchg
int
mov
push
push
or
push
sub
in
jnp
addr16
loope
jge
xor
outsb
clc
add
fwait
xor
faddl
mov
push
dec
xor
rorl
cmpsb
or
pop
xor
or
mov
pop
cmp
pop
jp
mov
or
aam
lods
test
test
cltd
dec
out
cmp
dec
adc
outsb
clc
adc
mov
mov
jno
xor
sub
subl
lea
cmp
in
add
jns
cs
inc
faddl
jg
bound
mov
pop
cmpsb
ret
imul
sti
das
ret
sub
jns
andl
jecxz
out
aad
inc
adc
fwait
arpl
xchg
adc
push
mov
out
insl
data16
ljmp
add
jae
mov
mov
mov
jb
push
sub
js
test
cmp
jnp
adc
aaa
jge
imul
cmp
xor
ret
inc
popa
jns
cmpsl
mov
fstps
jle
andb
adc
mov
jbe
and
shl
aas
loop
std
daa
bound
dec
pusha
repz
sub
ds
push
xchg
testl
add
xor
adc
shlb
sbb
and
mov
inc
pop
push
mov
jmp
xor
jo
pop
sar
cmp
mov
sbb
scas
pop
int3
loopne
rolb
test
mov
adc
adc
xchg
sub
push
int3
xor
std
je
inc
sub
xor
jle
popf
jnp
dec
pop
pushf
xor
mov
mov
add
insl
shlb
hlt
sarl
push
iret
inc
sub
aas
mov
fildll
cltd
lds
leave
fldlg2
cmpsb
dec
jmp
sarb
adcl
jb
push
xor
cmp
jge
scas
arpl
lock
dec
cmp
jecxz
js
pop
cmpsl
push
stos
and
int3
sti
push
gs
adc
pop
idivb
xchg
push
mov
rorl
lret
mov
pop
push
lea
movsl
adc
xchg
jns
enter
push
int3
xchg
xchg
addr16
sbb
out
bound
or
xchg
stc
shrb
rolb
dec
xor
or
sub
mov
pop
jno
test
inc
pop
stos
lcall
lcall
mov
sub
mov
mov
aas
and
test
and
or
push
mov
shrb
dec
loopne
in
mov
incb
mov
fistl
add
jmp
mov
lcall
push
push
ja
out
jecxz
imul
dec
les
sahf
mov
dec
pushf
mov
mov
jnp
mov
and
push
stos
testl
aad
jge
jns
dec
cmpsb
inc
mov
lret
aad
xor
cmp
imul
ja
shr
clc
push
movups
xor
add
xor
out
inc
lock
xor
cmp
mov
add
daa
bt
mov
cld
jbe
jo
outsl
test
sub
test
push
cli
pop
mov
fmull
xchg
test
dec
ljmp
or
iret
jb
repz
lock
cli
cmpsb
ret
add
fmull
repnz
out
mov
mov
outsb
es
and
mov
loopne
loopne
inc
ret
test
sbb
mov
and
sub
pop
jnp
pop
cmpsb
push
clc
xlat
in
inc
int
sti
popa
mov
test
mov
mov
pop
shrb
loopne
int3
sahf
in
ret
ret
mov
adc
ficompl
dec
sar
or
xor
ljmp
jno
xchg
aam
movsb
adc
icebp
loop,pn
or
push
mov
cmpsl
sarb
push
lods
inc
pop
popl
add
aad
je
jecxz
mov
mov
imul
or
jbe
mov
js
sbb
dec
insl
jl
pop
mov
dec
lock
push
fstps
push
pop
pop
cmc
int3
fwait
cmp
mov
rcrb
mov
scas
ja
fnsave
nop
and
dec
pop
ds
ja
xlat
xchg
mov
dec
pop
aam
push
inc
adc
movsb
push
mov
adcb
std
mov
clc
incl
addr16
adc
outsb
call
orl
lcall
dec
mov
jns
mov
add
js
mov
or
leave
xchg
jl
call
fists
mov
or
fistpll
mov
xor
loope
push
pushf
testb
cld
or
mov
fisubrl
xlat
mov
mov
inc
cmp
scas
inc
stc
popf
push
outsl
cld
rcrb
mov
out
out
add
xor
push
lret
sbb
add
fs
pop
and
stos
data16
addl
jg
push
add
enter
and
lea
push
fsubrl
pusha
es
xchg
push
fdiv
xchg
adc
xor
insl
push
sbb
push
test
mov
and
dec
jecxz
inc
out
cmp
adc
popf
arpl
pop
or
cltd
daa
int3
jbe
inc
dec
test
dec
das
in
notb
or
add
add
arpl
sub
mov
mov
add
lds
pop
jl
jns
sarl
ret
pop
jbe
pop
push
out
pusha
sbb
xor
rolb
dec
pop
cld
ret
push
mov
repz
lahf
addl
iret
cld
xchg
add
cmp
sub
icebp
cmpsb
lock
fwait
test
insb
mull
and
lahf
sub
out
pop
cltd
or
test
and
sti
les
mov
cmpsl
shll
adc
mov
inc
ljmp
outsb
adc
jne
pop
leave
test
decl
mov
out
icebp
push
mov
lods
pop
sub
adc
outsl
ret
fwait
xor
lods
insl
cmp
jmp
cmpsb
icebp
aaa
int
xchg
push
mov
int3
or
ficoml
or
bound
mov
stc
test
notl
js
aad
mov
outsl
cmp
sahf
jbe
inc
test
sahf
or
rcr
sbb
mov
lahf
add
cli
inc
les
addl
jmp
mov
sbbl
mov
push
testl
xor
xor
lods
bound
cmp
cmp
test
dec
out
sbbb
push
shlb
xchg
jp
lds
cli
outsl
jmp
inc
mov
sti
push
into
add
pop
pop
pushf
cmpsb
nop
into
test
dec
or
push
jne
test
sbb
push
test
jge
jl
ds
stc
frstor
lea
and
pop
divl
cmp
inc
lret
jnp
sbb
sbb
adcb
lock
push
sbb
bound
xchg
add
lea
and
add
jnp
jge
cs
jb
xor
lods
mov
xlat
mov
jae
aam
mov
sar
sti
jnp
push
dec
movsl
fsubl
dec
inc
inc
mov
bswap
cmp
push
call
mov
jp
daa
xor
and
xchg
leave
sub
loop
ja
jns
movsl
or
jl
sub
bnd
or
sbb
mov
or
mov
imul
movsb
insl
adc
sub
jg
inc
inc
adc
xor
mov
cli
pusha
pushf
lock
mov
popa
push
push
xchg
mov
mov
adc
sbbl
popf
test
punpcklbw
inc
jbe
dec
mov
and
push
push
pop
hlt
mov
lock
hlt
jnp,pn
mov
aam
lcall
sub
dec
push
je
jecxz
mov
xor
pause
lahf
aas
into
sub
pop
lcall
cwtl
sub
mov
imul
test
inc
orl
test
sbb
mov
test
in
push
mov
mov
cmp
add
xor
push
add
loope
mov
cli
lods
push
mov
lahf
jb
mov
dec
or
dec
mov
jecxz
jmp
test
add
xchg
jb
movsb
pop
lods
pusha
push
fnsave
mov
daa
dec
xchg
fcomip
outsl
mov
aaa
shll
push
sbb
jmp
add
repz
rcrl
push
mov
js
subb
push
movsl
hlt
sub
lahf
stos
ret
and
sub
insb
xor
loopne
jo
add
push
and
mov
jmp
sub
jecxz
enter
test
scas
jmp
or
or
mov
movsl
xor
lods
fiadds
lret
ljmp
sbb
jno
filds
xor
jno
add
hlt
in
jl
sbb
ss
sbb
xor
mov
mov
dec
out
or
sub
dec
cmpsb
push
popf
jne
jae
fs
fildll
orb
or
jecxz
test
sbb
pop
rcl
rclb
mov
arpl
sub
nop
lods
inc
pop
cli
push
xchg
addl
cmp
jmp
into
shlb
je
pop
movsb
shlb
cmp
mov
ss
push
sbb
cmp
add
dec
cmpsl
xchg
scas
mov
movsl
sbb
pop
xchg
jge
out
and
ja
jo
mov
adc
or
push
sti
mov
adc
fildll
xor
mov
inc
je
iret
movsb
push
les
add
les
mov
push
and
adc
pop
outsb
pusha
adc
cmpsl
ret
andl
or
adc
shll
in
inc
shlb
aam
pop
sarb
jb
push
int
xchg
adcb
fisttpl
mov
icebp
xchg
adc
ret
lahf
push
sbb
pop
cwtl
cld
aam
fidivl
mov
mov
pop
mov
mov
xlat
ljmp
add
pop
fdivrp
add
adc
xor
pop
das
cmc
les
jnp
dec
vcvtsi2ss
addb
push
push
jnp
loope
cwtl
xor
xchg
fsts
mov
addr16
fldl2t
xor
sbb
pop
adc
cmp
in
mov
lcall
cli
jne
movsb
rolb
stos
frstor
mov
outsb
test
inc
pop
ljmp
jno
xor
fcmovb
out
loopne
push
pop
ja
or
jno
xor
je
cmp
sbb
sti
clc
and
lds
lret
xor
xor
lock
sbb
es
dec
and
scas
lods
add
fdivs
jno
xchg
jecxz
popf
repnz
imul
into
jns
repnz
outsl
aam
mov
mov
push
lods
ret
mov
test
call
hlt
xor
fnstcw
pop
lcall
je
cwtl
pop
mov
scas
adc
out
dec
push
dec
in
shll
dec
rol
out
ljmp
and
adc
je
dec
mov
sbb
imul
jae
and
adc
mov
lahf
jecxz
in
insl
mov
popf
in
fsubr
js
std
rcpps
mov
inc
ja
je
into
sbb
lods
lret
inc
mov
fs
pop
and
add
lcall
sbb
iret
jb
xor
int3
jae
test
mov
ja
ret
outsl
dec
aad
xchg
out
je
jnp
dec
popf
add
leave
aam
cmp
fs
adc
je
pop
adc
inc
dec
sub
cli
mov
and
es
jle
in
adc
and
push
mov
or
push
mov
je
jmp
cmp
bound
ja
ljmp
fs
cmc
inc
add
out
push
imul
adc
mov
or
cmp
rcrl
mov
inc
fisttps
and
mov
lods
add
scas
leave
fldenv
push
ljmp
aad
cld
mov
dec
push
push
jge
sub
pop
push
mov
cmp
add
xchg
jle
sbb
dec
xchg
xchg
mov
popf
faddl
cmpsl
stos
test
shlb
xlat
repz
or
inc
gs
jge
mov
adc
lret
insl
sbbb
imul
xchg
dec
jl
loop
ja
xor
sbb
bound
mov
cmc
pop
push
sub
icebp
mov
adc
cltd
shll
jle
inc
out
xchg
repnz
repnz
cli
lcall
mov
ret
fs
sbb
jns
iret
xchg
push
xchg
add
inc
cltd
test
mov
sahf
and
iret
insl
loopne,pt
nop
sbb
hlt
xor
loop
fld
pop
dec
notl
inc
pop
push
jecxz
pop
enter
cs
jno
stc
xor
or
icebp
mov
or
imul
nop
adc
in
stos
pop
rcrb
pop
inc
sub
jnp
pop
jno
out
push
sbb
and
dec
pop
movsl
inc
decl
dec
mov
sbb
cld
xchg
cmp
jo
mov
in
xchg
add
adc
cmp
sub
or
roll
jb
jle
adc
cmp
dec
je
aam
bndstx
mov
xor
jecxz
adc
stos
inc
data16
test
clc
mov
jp
daa
mov
jge
js
or
ds
stos
in
incb
sbb
cltd
xor
pusha
ljmp
pushf
jns
loope
mov
sbb
std
push
inc
decb
std
push
out
sub
sahf
pop
std
push
ror
stos
sarl
sub
pop
into
stos
add
addr16
bound
xor
imull
rcrb
pop
xor
jmp
int3
sbb
in
mov
lods
pop
adcl
out
arpl
push
in
xor
loope
test
leave
push
mov
cmp
aam
jae
or
idivl
cli
lahf
stos
in
push
mov
xchg
mov
inc
jecxz
xchg
ja
call
shl
adc
mov
mov
mov
rclb
ja
pop
fsubrs
icebp
fidivrs
mov
xor
xchg
xor
in
mov
js
fdivs
data16
sub
xor
add
fisubrs
xor
mov
or
adc
test
sub
arpl
pop
pop
mov
pop
dec
or
scas
in
stos
call
cmp
arpl
pusha
sbb
outsl
stc
pop
cmp
mov
es
aaa
iret
iret
and
pushf
xorps
icebp
inc
insl
ljmp
or
add
sti
mov
jae
sbb
iret
popf
cltd
xchg
adc
std
sbb
shl
fidivl
push
mov
mov
nop
jmp
cli
pop
sbbl
inc
push
mov
enter
sub
dec
push
pop
pushf
mov
rcrl
ret
iret
push
adc
sbb
sbb
aas
andl
mov
adc
rolb
pop
ficoms
inc
das
imul
fstpt
jbe
scas
push
sub
ret
or
stos
scas
lahf
push
push
pop
les
movsl
add
inc
mov
lock
gs
mov
push
jg
jecxz
and
sbb
cs
inc
sbb
mov
push
gs
push
jns
cmp
inc
mov
mov
xor
or
ret
mov
push
inc
push
or
mov
iret
stos
push
xchg
in
inc
inc
and
cmp
inc
cmpsl
cmp
lods
xchg
lods
das
push
push
andb
inc
imul
mov
stos
test
mov
cs
out
sub
and
icebp
je
orl
sbbb
or
pop
inc
fsub
sbb
jbe
arpl
jl
sub
sub
cmpsb
imul
in
aam
scas
pop
mov
aad
fcoml
push
sub
cmp
fwait
add
enter
or
sbb
ds
mov
mov
in
out
lea
out
jae
imul
pop
jmp
jae
mov
leave
ret
mov
fisubl
and
pop
push
cmp
out
imull
mov
bound
mov
pop
popf
mov
xor
rcl
push
or
lods
outsl
and
push
jmp
div
sbb
jb
dec
cmp
push
data16
xchg
inc
loope
iret
mov
mov
pop
icebp
nop
lock
cmpsb
mov
pop
sti
ss
mov
adc
or
add
lock
cs
xchg
inc
pop
les
sbb
xor
mov
test
gs
sbb
shlb
ds
xchg
jp
or
and
pop
xor
mov
inc
inc
cmpsl
sahf
push
cld
adc
fbstp
or
sbb
cmp
aas
jmp
pop
imul
pop
jbe
aam
jo
xchg
add
sti
in
jecxz
sahf
xchg
sub
sahf
sub
xor
mov
sti
mov
hlt
mov
in
les
dec
cmp
add
mov
or
or
leave
imul
pop
jae
dec
shlb
xor
jae
xchg
adc
movl
ja
sub
lret
jne
jmp
icebp
sbb
cld
or
and
das
inc
add
mov
pusha
inc
mov
xchg
xchg
xchg
out
inc
mov
jne
in
imul
xchg
decb
xor
in
in
jmp
or
repnz
mov
cmp
or
bnd
push
test
ja
sub
cwtl
and
loop
adc
outsl
jmp
scas
sarl
adc
inc
push
lcall
rcll
cmpsl
add
js
jne
cs
mov
pop
fsubr
sub
es
arpl
test
mov
pusha
mov
inc
scas
in
loopne
cmc
dec
fisttpll
repz
lock
inc
cmp
je
inc
sti
sbb
jb
loop
adc
gs
mov
addr16
call
cli
push
shrl
xor
cmp
cmpsl
ds
jge
jno
repz
bound
pop
outsl
stos
and
rolb
aad
test
subb
jecxz
bound
scas
sbb
in
lods
pusha
rcll
dec
dec
std
dec
pop
das
sub
outsb
pop
adc
sbb
jg,pt
sub
repz
hlt
pop
outsl
jmp
cmpsl
popf
cmp
aaa
mov
adc
xchg
push
xor
mov
aam
fstpl
sub
cmpsl
or
test
iret
inc
out
push
mov
imul
or
outsb
cmp
pop
fidivrs
in
in
pop
xor
pop
dec
dec
popf
fldcw
stos
adc
movsl
mov
aad
dec
loop
jg
lods
and
mov
loopne
inc
inc
repz
push
js
push
scas
jmp
mov
pop
stos
aas
int3
loopne
sti
fcomps
cltd
push
sti
mov
mov
addl
push
jnp
out
and
popf
mov
push
lea
fmulp
aaa
nop
mov
dec
cmpsb
adc
mov
aam
aad
inc
jo
pop
fcomi
push
std
and
mov
jmp
or
test
xchg
cmp
mov
scas
outsl
sub
jecxz
mov
test
out
insb
loop
xor
add
add
pusha
stos
mov
je
mov
jg
ss
adc
sub
cltd
popf
jle
or
xchg
fld
fld
ljmp
xchg
xor
fstpt
sarl
inc
imul
por
jbe
push
sbb
nop
arpl
pop
mov
cmp
movsl
ret
mov
popf
sti
sbb
xchg
cld
test
stos
out
adc
outsb
push
jp
out
je
and
inc
and
aam
add
xor
cmp
jle
pushf
jge
dec
adc
mov
pop
cmpb
insl
inc
dec
stos
push
into
mov
push
repnz
cmpsl
and
rclb
int
mov
pop
addr16
xchg
rolb
ljmp
jno
loopne
sub
mov
inc
out
inc
cmpsb
int3
xchg
and
mov
into
test
lds
int3
xor
loop
stos
sub
add
cli
dec
lods
push
cmp
mov
xor
js
cmp
or
or
test
fidivs
cmp
ja
sahf
push
ss
incb
and
lret
sbb
push
mov
adcb
sub
movsl
repnz
es
mov
pop
test
lret
lret
jb
test
lock
adc
xor
push
ret
fstps
mov
mov
push
cmp
pop
jo
fsubs
jns
mov
xor
jae
movsl
imul
inc
fidivrl
push
movsb
jmp
popa
sbb
cmpsb
sub
rorl
fmuls
andl
or
aaa
cmp
sub
xchg
into
jo
lret
lret
lock
lret
dec
cmc
lcall
std
lea
pusha
dec
les
push
fsubrs
inc
seta
call
data16
subb
pop
in
jb
inc
lods
cmp
test
jmp
mov
loopne
xchg
cmpsl
xor
pusha
pop
or
mov
cmp
scas
fidivrs
shl
jle
cmpsl
push
cmp
out
pop
xlat
outsb
jne
sahf
clc
xor
fisttps
mov
sbb
push
cmp
mov
neg
imul
hlt
in
addl
xor
in
add
or
sbb
outsl
dec
cmp
or
adc
jle
ss
fdivl
scas
sub
adc
add
lret
mov
cmp
pop
pop
cmc
nop
aaa
lret
fldt
ljmp
call
mov
inc
test
jecxz
xchg
stos
dec
ljmp
xor
sub
jb
insl
mov
adc
cltd
into
cmpsl
test
repz
fs
cmp
fdivrs
cmpsl
xor
add
popf
sub
les
and
push
xchg
mov
adc
mov
lods
andb
outsl
inc
fidivl
xor
xor
xor
mov
imul
rcr
jge
sbb
pop
mov
pushf
pop
push
push
lds
and
jecxz
rclb
add
dec
dec
stos
xor
mov
add
adc
jmp
push
add
in
fwait
jmp
bound
cltd
adc
push
sub
inc
sbb
shrl
cltd
mov
notb
push
jnp
push
sbb
lahf
in
mov
test
rol
ja
bound
dec
lret
mov
push
cmp
cmpsb
xchg
aad
dec
adc
jns
pop
test
mov
cmp
xchg
jmp
mov
fs
cli
sbb
xor
stos
and
fcmovnb
mov
inc
cltd
adc
test
jmp
lret
bound
push
mov
mov
xor
xchg
dec
aad
push
mov
aad
fs
adc
xor
adc
xchg
jle
fwait
and
call
jp
mov
xor
add
rcrl
sub
mov
cmpsb
stos
jb
pop
sub
mov
enter
aaa
loop
mov
pop
jle
dec
in
nop
ja
jno
mov
and
mov
and
fidivs
mov
sub
mov
inc
call
aaa
cmp
dec
adc
inc
inc
push
rcl
repz
pop
shrb
data16
data16
adc
xchg
insb
in
pop
adc
add
lahf
jle
inc
orl
xchg
jl
xchg
mov
inc
icebp
jns
int
fstpl
sbb
add
pop
mov
mov
rcrl
out
pop
roll
fidivs
fwait
jno
mov
add
mov
sub
mov
in
adc
add
mov
popf
mov
loope
lods
shrb
orl
cmp
outsb
sbb
push
hlt
outsl
or
das
imul
shrl
pushf
imul
fiadds
scas
leave
push
sbb
mov
je
xor
cmp
mov
sbb
xchg
stos
mov
fnstsw
iret
xchg
mov
cltd
sub
mov
rcrb
nop
xchg
loope
dec
loop
push
push
loop
imul
outsb
inc
mov
bswap
pusha
shll
sub
popf
or
ss
ret
sbb
or
cmpsb
dec
pop
dec
scas
lret
jo
ja
cltd
push
jecxz
aad
aaa
out
sti
pop
jg
or
loopne
pop
sub
push
cwtl
jg
mov
aad
inc
mov
stos
dec
add
dec
loope
jl
negl
push
add
jae
addr16
add
cld
sbb
lods
mov
jl
imul
xchg
mov
pop
ds
orb
aam
jmp
jb
lds
hlt
jns
mov
push
xchg
imul
stos
xchg
stos
xchg
cvtps2pi
std
dec
xchg
fbstp
sbb
adc
lea
arpl
mov
or
nop
sub
mov
cmp
outsb
push
inc
xor
sbb
lea
xchg
dec
add
psadbw
lods
jno
pop
mov
test
sub
mov
push
push
daa
mov
push
adc
sbb
dec
icebp
or
lods
dec
sbb
mov
dec
jl
and
cwtl
xor
or
testl
insb
fwait
incb
pop
add
inc
lods
cmpsl
jp
jae
cltd
sub
inc
sti
test
or
pop
mov
sub
sbbb
repz
sub
pop
mov
mov
aam
dec
lock
and
pop
xchg
jmp
cmc
xchg
mov
int
mov
dec
int
mov
cltd
insb
ret
jo
jb
inc
add
jns
adc
into
mov
fldcw
adc
inc
jmp
cmp
fdivrs
sub
fdivrp
stos
xchg
jl
shrl
inc
in
testl
cmp
std
lods
dec
mov
stos
cmc
rorb
inc
fiadds
fwait
sti
or
and
lds
inc
xchg
test
sbb
loope
fnsave
insl
insl
adc
ljmp
jns
dec
mov
adcb
mov
push
aas
sub
mov
mov
pop
jne
icebp
dec
pop
cmp
out
jg
sub
jecxz
xor
in
fcom
and
inc
cmpxchg
mov
inc
inc
fisttpll
or
mov
adc
sub
ss
lock
clc
add
sub
je
pop
and
mov
aam
and
push
cs
fs
test
xchg
push
jo
outsb
insl
sbb
add
pop
xor
jnp
xchg
adc
lcall
out
mov
dec
fs
les
hlt
leave
loop
or
xor
inc
mulb
aad
mov
pop
cmpsl
mov
mov
dec
jge
jnp
rcl
adc
cmp
shrb
lgs
jp
mov
dec
lret
bound
adc
jmp
movb
loope
add
dec
pop
xchg
daa
mov
and
sbb
inc
sbb
int3
dec
ss
out
stos
pushf
xor
cmp
rolb
pushl
pop
ret
or
loope
ret
stos
inc
lock
mov
xor
jge
cld
xchg
aad
stc
xchg
mov
sbb
or
adc
xlat
iret
jbe
repnz
sahf
imul
mov
lock
test
add
mov
lods
ljmp
pushf
int
add
popa
sub
xchg
add
shrl
enter
push
shlb
imul
xchg
add
sbb
icebp
push
dec
dec
ret
rep
cltd
std
ret
in
incb
mov
ret
push
pushf
fiaddl
pop
xlat
fwait
aad
aas
decl
adc
jmp
push
jne
sbb
outsb
cmp
stc
out
pop
jge
and
or
dec
mov
aas
dec
push
pop
mov
inc
push
test
in
mov
pop
mov
xchg
iret
push
cmp
dec
sub
outsl
pop
pop
lds
or
jns
int
fdivl
add
adc
mov
data16
test
hlt
xor
incb
in
ret
bound
xor
jo
testl
stos
inc
mov
pop
dec
or
xor
or
cmp
cmp
push
and
push
cmc
cmp
out
scas
fiaddl
fadds
ficomps
sbb
mov
jb
into
mov
push
sbb
jge
push
in
pop
dec
in
and
xchg
test
pop
or
shl
ja
push
mov
ds
lds
jb
cmp
cwtl
add
and
sbb
xor
shr
sbb
mov
sarl
popa
lret
rcl
loope
add
ljmp
jnp
or
clc
fsub
js
movb
popa
push
das
lds
aam
dec
pop
push
ljmp
dec
mov
or
shl
mov
xchg
out
mov
shlb
mov
popf
cmp
mov
aam
mov
jno
and
add
dec
sub
aam
adc
sbb
or
mov
popa
pushl
out
outsl
aad
mov
and
insl
fnstenv
adc
mov
int
stos
jp
iret
xchg
pop
mov
imul
lahf
cmp
mov
pop
int
cmp
mov
aaa
sti
or
push
mov
dec
lea
lods
push
cmovnp
aas
aad
fistpll
mov
fldl
push
inc
out
mov
dec
fsubrp
dec
imul
mov
jbe
cmp
push
outsb
sub
pop
loopne
cmpsl
jno
mov
xchg
jmp
repnz
call
fnstcw
movsl
cmp
mov
mov
adc
in
jb
mov
ds
repnz
outsb
xor
xor
jns
add
jbe
lock
scas
pop
aam
incb
inc
inc
pop
hlt
mov
xchg
jne
mov
push
lahf
and
jmp
inc
les
idivb
lods
pop
or
mov
clc
subb
mov
or
jb
and
enter
fstps
pop
int3
lret
mov
das
cwtl
arpl
push
out
out
lret
pop
imul
push
add
lcall
mov
bound
cmp
popf
js
in
fsub
stos
mov
call
in
sub
add
adc
lret
aam
hlt
pushf
dec
rolb
sub
and
push
and
push
jge
dec
mov
cmpb
ret
dec
fisubl
xchg
add
lock
xor
xchg
sub
push
pop
add
xor
mov
sbb
push
ds
aam
adc
fdivrs
push
dec
loopne
test
sub
mov
mov
mov
sub
data16
xlat
insl
cwtl
je
jb
ds
mov
out
pop
fwait
and
mov
in
inc
and
bsr
jg
mov
mov
dec
bound
ret
xchg
push
push
popf
test
ficompl
arpl
and
cmp
mov
pop
ret
and
inc
inc
int3
lret
jle
gs
jp
int
mov
adc
jle
xchg
inc
mov
aaa
fwait
mov
fstpl
call
nop
pop
cmp
pop
repnz
ret
aaa
std
lds
jp
inc
test
sub
inc
push
push
daa
les
pop
sbb
fildl
shll
imul
movl
fadds
or
stc
rolb
sub
int
mov
int3
and
daa
test
pushf
mov
aaa
popf
movsb
xchg
dec
cmp
sarl
and
xor
int
inc
stos
lret
bound
or
push
aas
pushf
jmp
adc
movsl
sahf
aad
xchg
nop
jmp
lcall
decl
and
xor
inc
gs
leave
pop
push
xchg
hlt
fxch
daa
or
into
sub
jmp
jge
mov
mov
and
jo
dec
mov
jp
and
push
scas
mov
add
repnz
xlat
mov
adc
roll
out
dec
pop
cmp
jb
add
and
pop
in
pop
mov
xchg
cmp
push
stos
cmp
add
popa
mov
jle
mov
mov
xor
clc
push
push
in
xchg
aas
movsb
dec
loop
rcll
jo
pop
lret
inc
push
jmp
pop
xchg
stos
mov
and
jnp
xchg
cmpb
lock
in
lcall
dec
loope
aad
clts
inc
imulb
xchg
pushf
movsl
outsb
adcb
je
int3
mov
imulb
aam
outsl
lret
cwtl
pushf
pop
mov
insl
inc
mov
imul
ds
aad
xor
fsubrs
sbb
jl
test
cmp
divl
jmp
push
subb
incl
mov
or
inc
or
pop
and
pop
cmc
popl
sub
push
mov
in
add
inc
xor
xchg
scas
or
sbb
sub
faddl
iret
xchg
jg
pop
popf
out
sbb
sbb
popf
sbb
es
lret
and
out
call
xchg
in
xor
add
push
mov
lret
xor
je
dec
cmpsb
clc
adc
loope
repz
loopne
cld
adc
xchg
inc
hlt
out
dec
dec
xchg
jle
roll
xor
sub
sti
in
pop
jo
fucom
add
xor
rcr
sti
lods
add
fdivr
pop
dec
jp
lock
sahf
or
xor
aad
jp
push
lods
mov
mov
lahf
ja
lcall
in
ljmp
jno
xchg
adc
sub
cmp
in
bound
and
cwtl
pop
shlb
lea
cli
jg
shl
jnp
dec
clc
pop
and
lods
pushf
xchg
pop
sbb
jns
or
test
push
rcrb
and
inc
aas
movb
jmp
daa
les
jp,pn
sbb
adc
hlt
push
sub
ds
scas
repz
mov
adc
in
jg
cmp
call
adcl
or
and
push
pop
orl
or
mov
mul
cmp
addb
cmp
inc
cmp
inc
insl
jge
lahf
push
lock
push
enter
xchg
sti
movsl
mov
bound
jae
fsubrl
in
mov
ja
jge
jnp
dec
les
ret
pop
std
scas
cmp
add
xlat
subb
pop
fs
orb
inc
inc
cmp
test
mov
pop
jb
stc
js
imul
out
jecxz
shll
stos
loopne
add
imul
inc
inc
repz
ret
mov
lea
adcl
push
and
stc
fs
adc
or
pop
lods
ljmp
das
test
out
push
outsl
cs
lods
bound
mov
cmpl
nop
in
xchg
xor
subl
dec
xor
push
xor
andl
mov
es
lret
push
arpl
sahf
test
out
mov
pusha
popa
mov
push
pop
pop
int3
cmp
jo
imul
movsl
cmp
div
mov
outsl
xchg
scas
loope
push
xor
stos
inc
fcmovu
daa
dec
in
loopne
dec
out
imul
mov
push
sub
jecxz
sub
sbb
jmp
sbb
insl
loopne
arpl
std
xchg
xor
push
out
scas
jne
sbb
mov
iret
shll
fsubr
arpl
cmpsb
imul
lcall
jne
dec
pop
xor
jl
xor
inc
inc
arpl
ret
xchg
cmp
scas
xchg
mov
pop
out
in
push
add
xchg
jp
inc
mov
mov
out
pop
sbb
adc
mov
sbb
push
pop
loop
fwait
dec
jl
lret
mov
loopne
mov
adc
test
test
mov
or
mov
sbb
add
mov
cmp
es
loope
test
xor
aad
leave
or
aas
mov
push
test
adc
push
push
int3
cmp
fs
mov
push
xchg
mov
pushf
lret
inc
iret
in
add
push
mov
andl
in
and
inc
insb
jb
jno
andb
jg
imul
mov
test
aaa
lea
mov
ret
stos
push
sbb
push
push
cmp
xchg
sbb
lret
loope
jp
inc
xlat
or
fldt
test
iret
jns
mov
into
pop
cmc
fs
aas
inc
xchg
mov
cld
adc
sub
mov
jl
loopne
and
mov
push
mov
insb
fbstp
pop
sbb
sub
cli
cltd
divb
lds
dec
stos
test
adc
inc
adc
shrb
dec
pop
push
bound
ret
test
sbb
xor
ja
es
pop
lods
dec
aad
xchg
sub
loope
aas
lcall
cmpsb
and
mov
lcall
mov
aaa
aam
int3
xor
and
lea
fsubrl
cmp
aas
cmp
sub
dec
pop
icebp
mov
loopne
movhlps
mov
mov
cmpsb
or
xlat
xchg
mov
loop,pt
pop
aas
adc
bnd
out
pop
scas
pop
rcll
add
scas
imul
cmp
mov
add
ds
push
or
mov
hlt
dec
arpl
dec
push
sub
arpl
xchg
mov
inc
out
pop
cmp
test
sbb
xchg
push
outsb
inc
dec
add
add
es
pop
mov
arpl
js
dec
inc
dec
leave
mov
mov
push
cmc
cmp
mov
rcrl
js
out
pop
fildll
stos
mov
pusha
test
push
out
jle
hlt
inc
fsubrl
sub
add
adc
int
jle
icebp
movsl
adc
jmp
mov
cltd
dec
decl
mov
and
adc
inc
sub
sbb
jne
dec
cmp
lds
mov
pusha
mov
pop
xor
jne
imulb
inc
mov
dec
test
aaa
adc
or
stc
imull
xor
mov
test
dec
fwait
push
cltd
rolb
out
aam
stos
pop
lock
in
scas
inc
sub
cs
cli
cmp
jge
arpl
dec
jns
cmp
ret
add
in
xchg
cmp
js
mov
xor
pop
scas
xchg
iret
in
stos
or
adcl
imul
mov
adc
cmp
imul
or
into
xor
mov
or
jle
xchg
push
sti
out
lahf
les
out
and
inc
shrb
and
fwait
loopne
repz
es
ss
sbb
sarl
mov
mov
jae
pop
push
mov
xchg
sub
rcll
sbbb
dec
cmp
mov
xlat
cmc
inc
clc
loop
insb
ret
addr16
xchg
loopne
mov
jns
subb
xchg
and
insb
shll
sti
sarb
adc
adc
add
mov
pop
cmp
mov
rcl
gs
xchg
repnz
aad
pop
subl
pop
movsb
popf
mov
int3
rolb
or
outsb
xchg
mov
scas
fs
jo
test
xchg
xchg
addb
mov
jmp
ljmp
cmp
and
insb
mov
inc
popa
sbb
out
dec
andb
inc
cltd
popf
enter
fiaddl
std
mov
xchg
cmp
subb
inc
dec
add
lahf
xor
fwait
pushf
push
loopne
fisttpl
pop
cmp
iret
mov
jbe
sarb
ja
test
adc
cmp
lahf
das
xchg
aam
mov
cmc
jle
nop
movsb
mov
testb
adc
insl
leave
and
jne
out
jecxz
mov
cwtl
sub
bt
test
mov
pop
xchg
add
jge
std
enter
inc
pop
scas
js
mov
mov
repnz
mov
out
mov
rorl
gs
dec
lds
sti
sbbl
jb
xchg
sub
mov
mov
stos
mov
jg
aas
in
jmp
push
jl
cmp
lcall
mov
data16
dec
pop
inc
call
orb
mov
imul
imul
mov
ja
jne
mov
and
fnsaves
lret
mov
into
sbb
jmp
fcomps
lahf
inc
pushf
and
jle
pop
jle
mov
push
and
and
stos
sub
mov
add
mov
cltd
xchg
dec
pop
ret
dec
pop
fs
loope
popa
pushf
popa
xchg
shld
imulb
aam
test
dec
push
jecxz
lds
and
rcl
test
xchg
pop
pop
cs
xchg
loop
pop
enter
adc
aas
push
sub
packssdw
divb
ds
outsl
sub
or
push
sub
dec
mov
xorl
push
loop
js
adc
mov
cwtl
mulb
adc
mov
mov
lock
dec
pop
sub
inc
dec
adc
scas
outsb
inc
and
into
mov
xchg
cltd
jl
or
cmp
xchg
dec
out
dec
jmp
shl
dec
aad
repnz
and
xor
daa
ja
and
and
in
pusha
add
test
xor
cmp
xor
ljmp
test
enter
inc
cmp
pop
pop
sbb
aas
push
lret
jb
pushf
cmc
adc
jmp
iret
jo
xor
sahf
loop
negl
shll
sub
fsts
mov
rcl
rclb
inc
jno
adc
jbe
mov
mov
loope
and
lret
add
jbe
jg
or
arpl
dec
add
out
push
stc
jg
fs
cmp
adc
loope
inc
jmp
popl
dec
and
imull
les
or
subl
jb
xchg
divb
and
out
decl
add
shrb
outsl
sbb
mov
push
jnp
dec
inc
mov
mov
lret
pop
sub
mov
and
inc
adc
jnp
fdivl
les
pushf
hlt
clc
ss
cmp
sbb
pop
xchg
sub
push
add
lods
lea
rcl
lods
repz
jmp
inc
sbb
and
cmp
test
pop
push
add
xlat
shrl
jne
outsb
aad
stos
jbe
jb
cmp
cli
rcrl
test
pop
jns
adc
addr16
loop
popf
nop
mov
dec
mov
aad
mov
les
pop
fucomp
dec
enter
pop
lods
inc
and
inc
pop
je
fdivs
or
or
and
dec
xchg
jae
xchg
and
shlb
lods
daa
mov
or
jb
xchg
mov
push
or
or
pop
in
aaa
pop
xor
sub
mov
int3
ss
stos
cmp
mov
loop
or
mov
sub
cmc
xor
shlb
leave
push
xchg
sub
adc
pop
xor
incl
stos
ss
test
lods
mov
inc
xchg
mov
lret
gs
shlb
out
dec
das
cmp
mov
add
shll
pop
bound
into
xor
xchg
int3
fmul
leave
adc
fsts
add
clc
xor
pop
insl
lods
jg
xlat
cmp
mov
rclb
inc
dec
and
dec
flds
ljmp
or
std
mov
cmp
pop
push
mov
scas
fidivs
scas
call
outsb
ljmp
inc
into
push
jnp
test
dec
repnz
cmp
dec
mov
in
arpl
mov
lock
je
add
sbb
jae
xlat
push
in
jecxz
xor
push
aad
test
inc
fnop
cmp
int
xchg
mov
std
mov
fs
dec
xchg
push
jle
inc
add
inc
stos
cmp
xor
jg
ds
je
sbb
or
dec
loop
stos
pop
xor
popf
in
pushf
inc
aaa
daa
outsl
cli
or
out
lahf
and
test
test
xrelease
sbbl
add
push
cmp
cwtl
test
sbb
and
stc
or
cmp
xor
ljmp
inc
push
fisttps
xchg
jb
cltd
das
out
xchg
pusha
mov
or
adc
jne
xchg
xor
pop
jae
jle
cmc
mov
lahf
pop
rcll
xchg
stos
mov
mov
iret
shll
jmp
repz
pop
mov
lea
push
out
xchg
cld
cmp
imul
jmp
push
or
stos
mov
addr16
jg
dec
mov
xchg
mov
push
mov
push
and
shl
inc
sahf
xor
add
rorl
xor
sbb
dec
push
insl
mov
xchg
sbb
lret
shll
sub
or
or
daa
negl
xchg
call
cwtl
pop
sarb
or
and
test
xor
xor
insl
leave
mov
hlt
lret
sbb
inc
clc
out
cmp
notl
loopne
nop
jae
push
add
int
jp
lods
stos
imul
lods
add
mov
push
sarl
jl
jecxz
push
mov
bound
pop
add
scas
mov
scas
jne
xchg
movsb
or
or
je
push
sub
cmp
mov
jne
imul
inc
xor
jno
test
ljmp
adc
movsl
or
int3
dec
clc
dec
mov
sub
sbb
xchg
inc
and
repz
inc
das
imul
mov
shlb
dec
adc
dec
xchg
push
adc
sbb
or
out
jl
icebp
daa
outsl
fbstp
notl
add
mov
aad
aas
adc
cltd
and
xor
push
cmp
mov
pop
addr16
data16
cwtl
push
jg
jbe
int3
fnsave
data16
mov
fcmovnbe
insb
or
cmpsl
repz
jbe
sub
movsb
cmp
push
jne
xchg
ret
cld
mov
adc
ljmp
insl
pusha
fldt
xor
mov
mov
movsl
jnp
cltd
out
stos
or
jo
out
cs
cmp
pusha
ds
loop
je
testl
rcrl
loop
out
cmp
mov
and
subb
or
loop
iret
push
orl
mov
fs
and
sub
sti
jo
sub
scas
push
sbb
adc
cmp
adc
mov
mov
cmp
mov
jp
stos
sbb
dec
not
sbb
jg
add
jae
stos
mov
push
mov
inc
push
sub
cmp
data16
loop
jno
add
test
hlt
xchg
sub
fwait
xor
popf
push
adc
xor
adc
xlat
mov
or
push
adc
dec
xor
mov
push
js,pt
dec
cmp
imul
out
sbb
lret
mov
xchg
out
sbbb
inc
es
xlat
mov
and
stos
lds
hlt
stos
inc
es
fisttps
cmp
cmp
enter
xor
cmp
jle
outsl
xorl
cli
cmpsb
inc
insb
stos
pusha
neg
lds
jecxz
jle
lock
data16
mov
inc
in
sub
pop
sbb
sbb
cmp
sub
scas
shlb
mov
imul
repnz
mov
scas
inc
jbe
ja
fsubrl
stos
lret
push
pop
mov
lcall
in
fcmovu
xchg
mov
mov
sub
cmpsl
lds
icebp
insb
adc
jl
sub
add
shlb
xor
repnz
pop
fwait
xor
mov
fs
mov
jmp
cmc
aam
cmp
mov
mov
or
ret
sub
xchg
lret
dec
inc
inc
fs
jbe
fnstsw
mov
sub
mov
shll
inc
fldcw
push
popa
clc
xor
xor
and
mov
xchg
in
dec
and
outsb
int3
fwait
inc
push
movsl
mov
fildll
out
sbb
js
jbe
lahf
mov
mov
rcll
jp
cmp
mov
sbb
sub
sbb
mov
in
cli
je
push
test
and
lea
in
test
xchg
or
popf
clc
js
ljmp
icebp
jg
call
or
fbld
in
cmp
aad
out
aad
jge
and
mov
xchg
mov
and
jne
movsl
inc
ret
cmpl
mov
inc
and
dec
jg
enter
dec
mov
or
cmp
pusha
sti
push
or
lods
or
nop
daa
je
pop
xor
notb
jecxz
jbe
rcr
mov
cs
pop
jb
test
leave
mov
scas
sarb
js
inc
iret
adc
outsl
sub
push
cmp
scas
pop
mov
adc
push
jno
pusha
sub
js
adc
cmp
out
sbb
orb
xchg
es
nop
daa
lock
sti
inc
cmp
xor
jecxz
fists
jno
push
mov
sub
es
pop
stos
jae
in
sub
clc
inc
pushf
pop
arpl
cmp
cwtl
push
mov
test
adc
mov
xor
cmp
out
xchg
mov
xchg
lods
push
or
test
mov
xchg
popl
mov
out
add
dec
pop
sbb
pop
xor
inc
xchg
inc
in
mov
mov
mov
sahf
rolb
lcall
outsl
sti
pop
lock
xchg
dec
jno
out
xchg
sub
sub
test
rorb
ret
sub
mov
cmpsl
jne
or
mov
sbbb
mov
mov
xor
std
ret
daa
xchg
add
clc
dec
dec
xchg
popf
and
ljmp
adc
test
sub
sub
sub
pop
icebp
mov
jno
hlt
xchg
ret
addr16
xchg
mov
lea
sub
lcall
cld
inc
fwait
mov
roll
je
movsb
sub
lea
pop
cli
mov
cmc
jmp
jns
xchg
xor
lea
mov
std
dec
bound
stos
xor
bound
cmp
xchg
push
insb
lds
ret
cmp
jp
mov
dec
pop
dec
int
ficoms
xchg
out
enter
jne
sbb
leave
mov
rclb
cmp
jb
dec
pop
shrl
stc
push
jge
or
fs
sahf
ljmp
mov
push
insl
repz
inc
ret
call
rcl
leave
stos
mov
fucomp
pop
aas
shll
mov
jle
add
imull
aaa
and
inc
jge
xchg
sbb
lret
mov
cs
mov
lahf
in
xor
stc
xor
in
andb
sarb
dec
in
out
dec
ljmp
push
loope
into
mov
dec
jecxz
mov
jae
mov
sub
sub
xor
push
outsb
cwtl
scas
lcall
popa
sahf
adc
inc
scas
jno
int
push
clc
data16
insl
aas
push
test
adc
scas
and
mov
jnp
push
xchg
mov
lock
aas
xchg
test
subb
testb
push
les
mov
mov
les
loopne
lret
inc
frstor
mov
lds
mov
inc
or
test
xlat
xchg
xor
push
inc
xor
jp
xlat
mov
insb
push
ret
jle
or
xchg
dec
icebp
jno
cmpsl
push
and
mov
push
ret
cs
daa
and
xor
repz
pop
push
pop
in
pop
testb
shl
mov
push
nop
jae
mov
sub
fiadds
mov
pop
movsl
loopne
mov
pop
dec
cmpsl
sti
mov
incl
adc
cwtl
sbb
mov
lds
enter
sti
pop
shl
fildll
mov
stc
push
adc
jno
xor
jmp
inc
push
mov
ret
loop
and
sbb
popa
aaa
in
in
aam
test
test
dec
push
fucom
jge
and
lahf
push
lods
test
js
pop
or
adc
popf
cmc
xchg
aas
repz
jbe
ljmp
test
rclb
adc
int
pushf
test
add
mov
repz
rcrl
adc
inc
scas
sub
push
inc
mov
ficompl
aas
xchg
jne
fsubs
xchg
fstpl
add
outsb
out
sub
add
loop
mov
sub
mov
dec
xor
scas
arpl
iret
add
xor
push
hlt
xor
mov
data16
lcall
push
push
xlat
mov
ret
movsb
dec
push
xor
mov
cmpsb
sub
sbb
jg
xchg
xchg
add
jle
add
xchg
icebp
jae
adc
dec
mov
es
push
jne
push
imul
mov
rcr
enter
mov
popa
pop
xlat
inc
push
add
push
test
sub
xchg
div
or
inc
cwtl
sbb
sbb
cld
lcall
in
clc
orb
not
jae
outsb
or
adc
nop
ret
aas
aam
cmp
movsb
repz
cmp
push
scas
dec
sbb
xlat
xchg
stos
dec
lcall
adc
jb
sahf
cmpsb
inc
sbb
adcl
loopne
dec
fwait
push
mov
push
inc
xchg
mov
pop
lcall
dec
add
popa
pop
xor
enter
sbb
ror
jg
xor
push
sub
fs
subb
pop
in
js
push
fadds
subl
test
adc
cmpsl
inc
lods
cmp
insl
inc
loop
inc
cltd
std
in
fsubp
pop
int3
dec
or
out
rcrl
sbbb
js
stos
push
pop
mov
cld
mov
push
pop
movsl
mov
push
jl
push
cmp
xchg
divb
cmc
or
mov
clc
sbb
out
pop
xchg
aaa
test
aas
sbb
jo
aaa
adc
cmp
lods
pushf
scas
fiadds
decl
sub
cmp
fsubr
out
hlt
adc
jecxz
adc
adc
arpl
jb
mov
sahf
lds
sbbl
ljmp
int
aas
gs
std
push
adc
sub
in
fs
in
addl
jle
fadds
dec
adc
mov
shlb
insl
aad
sbbb
imul
les
cmovnp
pop
cli
adc
cmp
cli
stc
inc
mov
or
cmpsl
adc
jge
loop
mov
mov
mov
aam
or
loope
or
xchg
sahf
out
lods
scas
mov
in
outsb
jle
inc
dec
push
push
mov
int3
lcall
shll
add
aad
cmc
lea
das
lcall
xchg
or
loopne
cli
fildl
sub
mov
dec
and
psllq
fsubs
dec
fsubrs
pop
out
pushf
lcall
call
punpcklwd
mov
fsubrl
xor
fs
aaa
jb
pop
cmpl
cltd
adc
adc
popf
push
mov
rcll
xchg
inc
sti
insl
sub
cmp
mov
addr16
cmp
or
data16
jno
pop
addr16
push
xchg
pushl
test
adc
cmpl
dec
sub
sub
or
decl
loop
mov
rol
fadd
pop
ja
pop
adc
or
ds
mov
sub
lret
and
lret
popa
xor
xchg
movsl
lods
in
lods
sbb
push
test
sti
lods
mov
inc
decl
ror
inc
push
cli
hlt
scas
mov
dec
movsl
inc
adc
jmp
cltd
sub
add
clc
insl
push
mov
fcmovnb
or
jne
or
inc
fidivrl
fldcw
pop
push
xchg
dec
jne
jnp
mov
dec
insb
cmp
les
testl
enter
mov
or
pushf
jns
ds
fbstp
data16
lahf
popf
xchg
sub
add
adc
push
ficomps
xchg
add
sbb
mov
fidivrs
aas
jge
cmpxchg
add
sub
push
loop
inc
out
cmp
xchg
mov
mov
xlat
cmpsb
aad
sbb
push
aas
sbb
xor
dec
testb
cmp
pop
int3
jo
mov
mov
xor
repz
idivb
imul
and
or
push
pop
sbb
sbb
iret
xor
pop
mov
mov
jne
and
in
xchg
xchg
leave
imul
mov
scas
in
incb
ss
jno
xchg
mov
pop
sbb
nop
xor
cmp
inc
stos
gs
fsubl
int
mov
shlb
in
xchg
push
xor
add
orb
xor
mov
mov
push
je
test
mov
lcall
xchg
and
jne
add
subb
mov
sub
imul
or
mov
mov
xchg
cltd
adc
jp
pop
out
outsb
fwait
dec
pusha
les
ss
fidivs
mov
cs
ret
scas
jno
mov
out
stos
mov
lret
mov
rorl
lods
adc
xor
push
sub
inc
clc
addl
sbb
popf
shlb
pop
or
test
adc
lret
adc
and
stos
repnz
sub
dec
scas
mov
lcall
sbb
outsb
inc
pop
sub
mov
mov
dec
movl
orl
aam
mov
cltd
imul
mov
push
fwait
xchg
nop
std
orl
jp
cmp
mov
outsb
and
test
pop
ret
hlt
sbbb
negl
mov
dec
xor
shrb
fwait
popf
push
scas
lds
lea
sub
inc
scas
pusha
lret
pop
popa
ljmp
inc
movsb
lds
cs
and
in
mov
push
fdivrs
pop
inc
stc
aad
mov
push
mov
sbbl
jl
mov
xchg
mov
std
jmp
xchg
sbb
jl
bound
aam
iret
mov
cmpsl
inc
scas
pop
sbb
and
fwait
adc
lock
mov
vsqrtss
lea
inc
sbb
loope
in
mov
cld
jg
pop
mov
cmpsb
add
rol
outsl
mov
jne
jae,pt
xor
jnp
fdivl
xchg
mov
cmp
stos
stos
aas
aam
lea
add
outsb
inc
cmpb
inc
call
dec
mov
leave
inc
cs
lcall
pop
aaa
jge
sub
xlat
xchg
arpl
daa
sahf
cld
dec
dec
in
sbb
sarl
nop
add
out
and
daa
movsb
cmp
adc
add
mov
or
push
mov
pop
xor
mov
xchg
rcrb
add
imul
jmp
adc
test
mov
repnz
js
mull
std
scas
hlt
into
xor
pop
inc
sub
jnp
es
sub
push
mov
inc
mov
jns
xchg
sbb
lcall
mov
mov
sbb
add
push
pop
std
aad
jbe
jg
scas
pop
das
pop
pop
jl
mov
loope
fnsave
lods
ss
pop
sbb
dec
or
leave
mov
loopne
sub
int
inc
loopne
cld
in
in
jne
mov
dec
xchg
jae
jo
cwtl
mov
dec
pop
rorb
inc
pusha
cwtl
imul
pop
mov
jns
imul
and
jl
xchg
sub
test
mov
xlat
add
xchg
ret
in
pop
scas
or
std
sub
sarb
adc
push
pop
jae
mov
cmp
pop
movsl
mov
bound
lods
cmp
test
mov
xchg
adc
loop
push
hlt
lahf
mov
push
sbb
mov
imul
addr16
int3
lahf
dec
push
in
test
int
hlt
inc
xlat
repz
sub
adc
repnz
int3
add
aad
das
mov
add
push
mov
sbb
push
loop
dec
or
popf
test
push
pushf
ds
fdiv
mov
and
int
xor
adc
xlat
inc
mov
js
sbbl
mov
jl
mov
pop
lcall
push
es
xor
add
jmp
loopne
and
jb
push
pop
sar
fcoml
adc
lcall
mov
push
xchg
lods
sbb
stos
movsb
fnsave
arpl
aaa
mov
mov
add
arpl
add
xchg
clc
and
imul
push
imul
adc
xchg
push
ss
inc
inc
jmp
lret
mov
mov
pop
or
mov
fwait
movsl
aas
dec
mov
stos
mov
addr16
cmpsl
jp
lods
adc
mov
lods
cld
das
xchg
cli
jns
shl
pop
push
xchg
and
xorl
call
jae
sub
outsb
mov
es
push
push
fstl
in
mov
xchg
mov
sbb
int
in
push
xor
adc
cli
lret
dec
loop
jne
out
stos
jne
test
int3
or
cmpsl
outsl
push
pop
or
cltd
and
inc
stc
lret
mov
ret
rcl
pop
xor
xor
mov
ss
lds
add
int
sahf
jp
ret
jg
data16
frstor
shrl
in
push
cmp
hlt
pop
pop
sar
and
lahf
xor
notl
mov
fnstsw
repz
imul
cmpsl
dec
enter
xor
dec
mov
fnsave
jecxz
imul
mov
shlb
gs
mov
fcoml
fldt
jmp
test
mov
and
sub
fnstsw
pop
push
mov
pop
subb
dec
jecxz
jae
loop
inc
sub
lcall
leave
scas
ret
ret
sub
je
or
jmp
clc
push
ret
notl
rolb
or
aas
inc
bound
and
sbb
add
mov
sub
loope
adc
inc
pop
aad
ljmp
xor
mov
fwait
push
xchg
xchg
stos
push
daa
popa
jnp
jne
mov
in
rcr
push
push
imul
xor
cmpsb
or
daa
aam
testl
loopne
adc
loope
xchg
gs
cmp
sbb
dec
pop
jne
xchg
add
mov
push
xchg
sbb
mov
lods
jp
sbb
xor
cmovne
ficoml
iret
cmpsb
xchg
push
bound
cld
roll
dec
popf
push
add
inc
or
mov
push
fldl
pop
mov
fs
push
sbb
jge
or
sar
sub
sbb
mov
xchg
mov
xor
js
in
test
lahf
out
test
dec
jbe
push
leave
dec
shlb
mov
cmp
inc
xor
xor
and
test
cmp
xor
push
mov
sub
addr16
movsb
jns
fildll
inc
mov
jmp
push
hlt
into
inc
stc
push
sbb
dec
int3
xchg
jmp
and
pop
adc
loopne
and
push
dec
sub
dec
and
xchg
outsl
scas
push
jmp
data16
movsb
add
sbbb
pop
and
test
clc
imul
add
arpl
jb
out
call
lcall
and
jmp
in
pop
xor
xor
sub
cmp
int3
and
or
insl
stos
lea
jb
leave
xchg
imull
lds
mov
scas
xchg
loopne
ret
push
outsl
fisubrl
mov
hlt
and
arpl
and
xchg
xor
sbb
and
xor
out
test
sbb
adc
inc
movsb
repnz
imul
mov
ret
push
loope
mov
mov
arpl
je
addr16
aaa
divl
mov
popf
sub
mov
inc
push
push
pop
stos
aaa
fistl
jle
js
inc
add
cmpsl
imul
inc
inc
ds
push
jmp
out
dec
and
xchg
fisttps
vpaddusb
insb
xchg
xchg
dec
xchg
repz
das
data16
pusha
sbb
xchg
mov
popa
push
jp
xor
pop
popf
add
jb
stos
lahf
inc
lret
and
mull
adc
push
push
inc
insl
ss
sbb
push
fcompl
loopne
push
push
mov
cmpsw
cmc
xor
add
xchg
dec
sti
aaa
xchg
lea
pop
inc
in
std
adc
jb
cmpsb
stos
inc
fdivrs
push
call
mov
jo
mov
jle
mov
das
loope
aam
cmp
pop
add
maskmovq
notl
xchg
je
int
jecxz
enter
int
mov
mov
repz
sub
filds
lcall
dec
pop
insb
or
and
cmp
xchg
xor
pop
rclb
mov
adc
arpl
xor
mov
cmpl
pusha
clc
add
jg
push
dec
shlb
ret
outsl
repz
sub
cmp
dec
jp
cmp
lods
pop
loope
ja
jnp
xorl
inc
ret
pop
jae
mov
mov
cmp
das
mov
faddp
jge
jge
jnp
inc
dec
jae
data16
fidivs
or
sbb
mov
je
mov
int3
sbb
addr16
js
pop
outsb
mov
cmp
jecxz
ljmp
mov
pop
movsb
jo
sub
adc
js
xor
popa
cmpsl
mov
fwait
pop
xchg
xor
mov
mov
xorb
cmp
test
call
and
sub
pop
cmp
stos
lret
mov
es
adc
jmp
mov
push
loope
jg
add
dec
pop
pop
cli
xor
xor
push
std
cmp
jno
ss
aaa
ss
adc
push
xchg
xor
cmp
and
les
hlt
shld
aaa
iret
lods
in
out
sub
fiaddl
int3
jg
js
xor
inc
loop
xchg
lret
cld
mov
jmp
and
aaa
inc
out
bound
fldt
in
add
cmp
lea
int3
jns
xchg
sub
stos
xorl
fmull
dec
mov
popa
orl
push
jl
jne
cmp
mov
sbb
dec
cmp
cmp
loopne
stos
icebp
lock
fsin
cwtl
shrb
clc
addr16
loopne
adc
or
add
out
imul
sbb
ss
mov
andl
mov
jnp
pop
xor
ret
xlat
pop
cmp
imul
fidivs
pop
iret
xchg
hlt
xchg
sbb
sub
mov
aad
or
pusha
and
inc
cmpsb
xorl
lea
or
inc
bound
xchg
out
and
mov
jns
lahf
clc
nop
mov
lds
scas
cmc
jp
and
ljmp
and
pop
outsb
adc
and
pop
pop
cmp
cld
push
mov
ds
push
xor
ror
aad
jmp
data16
xchg
push
push
cmp
jb
arpl
push
movsl
mov
xchg
enter
andl
incl
or
aad
fnstenv
xchg
mov
stos
mov
pop
and
in
jmp
jae
popa
xor
inc
aas
sbb
scas
ljmp
jle
dec
in
std
dec
call
cwtl
gs
pop
jmp
loope
jbe
and
ret
test
rol
mov
aad
xchg
jl
ret
xor
push
rcll
dec
mov
sub
repz
loop
sub
out
xorb
xchg
sbb
dec
pop
cmp
push
cmp
cli
push
nop
fistps
movsb
dec
xchg
sbb
shl
das
int3
sub
into
rol
fs
ret
fistpll
sub
mov
lods
xchg
add
push
cltd
sub
adc
or
orl
dec
test
jmp
adc
xchg
pop
xor
or
loope
imul
subl
mov
fsubrs
mov
sbbl
pop
push
sbb
ret
lea
pop
ss
or
cmp
cmc
gs
mov
cmp
adc
icebp
sub
fdivl
cmp
pop
sbb
dec
out
testb
cs
test
js
xchg
add
iret
sbb
add
insl
add
sar
mov
adc
adc
ss
or
add
xchg
pop
out
and
js
cs
xchg
daa
push
ret
push
pop
cwtl
stos
dec
loopne
loopne
fnstenv
dec
insb
jbe
les
imul
stc
ds
jp
mov
mov
xchg
add
pop
jae
or
inc
fwait
ds
repnz
gs
cmp
daa
insl
loopne
or
mov
arpl
inc
in
pop
xor
fsts
loopne
rol
jp
ljmp
adc
ljmp
nopl
mov
ret
sbb
iret
xor
lret
into
xlat
mov
aad
mov
lock
cli
mov
mov
fidivrl
dec
push
jno
lock
sbb
mov
call
dec
xor
mov
lock
iret
subb
cmpl
enter
leave
popf
xorb
ret
ss
divl
mov
fsubrp
ljmp
sbb
add
fcompl
cmpl
roll
clc
cld
movsl
lcall
mov
inc
gs
push
add
mov
stc
dec
mov
mov
int3
mov
ror
leave
and
sub
mov
xchg
pop
mov
jae
inc
test
inc
lds
into
iret
adc
push
inc
add
jge
or
add
mov
dec
ss
stc
out
lds
dec
push
pushf
notl
inc
push
sub
fs
xor
fdivr
or
dec
daa
loopne
dec
lea
jmp
jecxz
rorb
call
push
push
out
bound
shll
jl
add
scas
jecxz
push
cmp
pop
fiadds
push
cmc
push
and
iret
mov
pop
mov
lock
leave
in
insl
js
insl
mov
xchg
fldcw
ficomps
jl
pop
push
lcall
jne
add
scas
xchg
mov
dec
outsb
jl
fstpt
xor
xchg
push
data16
jnp
adc
hlt
addb
cmp
ss
lds
push
inc
sbb
movsl
jg
lods
je
loope
cs
jp
xchg
or
push
lahf
pop
push
inc
lcall
push
adc
pop
out
xor
pop
mov
cwtl
rorl
lcall
cmc
adcl
pop
data16
xchg
sbb
jno
xchg
sub
push
out
cmp
or
ret
xor
pop
inc
data16
std
jno
in
cmpsb
sbb
cmp
or
xor
or
sti
jbe
addr16
aad
movb
rol
add
testl
testl
pusha
mov
pop
test
faddl
sti
push
in
adc
fstps
push
ret
iret
mov
pop
in
cltd
mov
add
and
dec
test
rol
xchg
sbb
push
out
sub
mov
sbb
push
sbb
or
ljmp
and
jg
dec
adc
dec
daa
stos
add
mov
jp
rorb
in
mov
push
hlt
js
jb
mov
mov
cmp
gs
or
push
fnsave
loop
nop
sbb
test
cld
das
icebp
insl
jl
ljmp
sub
cmp
pop
adc
sarl
clc
fiadds
push
cmp
or
or
adc
outsl
mov
insl
cs
xchg
and
mov
fidivrl
and
mov
arpl
sahf
sub
insl
xchg
xor
add
jne
xchg
sahf
icebp
jl
cld
pop
out
rolb
loop
lahf
call
dec
mov
mov
pop
jg
push
ss
fdivrs
mov
jbe
rcrl
cmp
pop
cmc
adc
pop
adc
js
mov
inc
mov
and
fsubrl
jno
sarb
call
cmpsl
das
and
or
inc
pusha
sbb
int3
std
xchg
xchg
es
stc
push
mov
mov
outsb
fstps
les
jo
js
rcrl
orb
sti
adc
add
xchg
addl
jp
mov
cmc
icebp
movsl
xchg
pop
loop
cmp
mov
mov
mov
sahf
js
loopne
jg
dec
cltd
sbb
xchg
sub
sbb
add
or
movsb
and
sub
or
ret
sti
imul
popf
or
dec
in
jbe
add
pop
mov
mov
stos
dec
xchg
loope
test
jne
stc
nop
adc
data16
mov
aaa
push
add
xor
int
mov
xchg
icebp
aaa
stc
hlt
mov
call
jp
test
sahf
mov
dec
call
out
xchg
inc
dec
cld
mov
inc
push
or
test
lea
pop
movsb
add
ljmp
mov
mov
sahf
or
xor
pop
mov
cs
test
mov
cltd
push
inc
mov
pop
cmp
and
adcb
mov
fs
lods
fstpt
test
test
out
stos
add
inc
lcall
lods
mov
xor
adc
mov
lods
xor
jne
or
add
jbe,pn
and
jp
or
xchg
push
sub
cmpsb
cmp
mov
xchg
in
sbb
lcall
je
sub
ja
lock
mov
sbb
aad
xchg
cmp
mov
cwtl
ret
inc
xor
aas
pushw
iret
sbb
or
popf
add
sbb
xor
insb
inc
push
jp
movsl
dec
sub
insl
pusha
stc
or
les
rclb
js
jl
sub
cmp
mov
sbb
testl
cmp
cmp
xchg
xor
or
es
sti
jecxz
cmp
adc
insl
stos
add
cmp
fmull
jbe
fadd
repnz
fcompl
xchg
dec
cmp
inc
xchg
push
xor
sbb
sub
mov
mov
sbb
or
movsb
nop
cwtl
jp
stc
xchg
je
enter
sub
xchg
scas
into
nop
stc
jbe
dec
stc
sahf
loopne
rol
add
in
xor
arpl
push
aas
xlat
test
and
cld
rcrb
mov
and
mov
dec
cwtl
mov
mov
pop
pop
sahf
sahf
or
imul
push
gs
das
addr16
and
out
mov
addr16
imul
mov
pop
adc
cmp
imul
imul
sub
popa
mov
mov
std
testl
pop
pushf
rorb
sbbl
jnp
loope
addr16
xor
testb
inc
mov
push
mov
cmpsb
movsb
out
stos
stc
popa
fidivs
sub
lds
add
jb
dec
mov
mov
pop
xchg
mov
xor
inc
js
inc
and
push
push
leave
sarl
aas
xchg
mov
iret
lahf
adc
dec
sub
mov
xor
orl
xor
fstl
or
push
mov
push
xor
insl
jge
in
fs
es
or
xchg
les
push
test
leave
and
imul
push
push
orb
pop
lock
out
and
sub
mov
jle
test
mov
repz
fdivl
push
sub
add
xor
mov
inc
inc
mov
xchg
mov
enter
pop
sub
mov
adc
insb
or
cld
sub
jecxz
sbbl
add
sbb
xchg
sub
movsl
in
push
sbb
shrb
mov
push
movsb
repnz
pop
adc
xor
int
mov
xchg
inc
bound
mov
inc
add
and
pop
sub
and
or
jns
adcb
sbb
inc
in
test
incb
andl
call
test
lock
xor
popf
adc
andl
jnp
cmc
jbe
push
adc
jmp
adc
movsl
add
inc
inc
adc
scas
add
sbb
cmp
xlat
jle
ret
mov
addr16
insb
sarl
jl
clc
das
cmp
iret
ret
or
push
pop
jbe
cmpsb
arpl
inc
mov
pusha
mov
xchg
push
dec
scas
and
cli
mov
lock
mov
adc
cli
push
neg
repz
pop
inc
dec
test
mov
sbb
sbbb
jle
xchg
into
loopne
cmp
je
cwtd
int3
jg
shlb
imul
aam
xor
mov
rol
mov
sbb
pop
push
mov
outsl
jp
int
xchg
nop
pop
loopne
mov
or
inc
fldt
lret
shl
in
fsubl
cmc
add
push
sub
stc
cmp
cmpsl
add
xor
adc
mov
mov
movsl
adc
mov
nop
mov
cli
mov
adc
adc
cmpsb
or
arpl
mov
in
fldl2e
popa
fs
loopne
sub
dec
inc
pushf
cmc
jmp
jmp
add
ret
jmp
pop
mov
adc
andl
je
orl
es
cmp
pop
sub
pop
aam
int3
aaa
dec
js
dec
stos
jnp
daa
sub
inc
ficomps
in
fidivrl
mov
imul
dec
shll
cmp
das
cltd
xor
jge
xor
pop
xor
movsb
or
sbb
or
inc
mov
rcrb
mov
mov
xor
inc
cli
test
jg
mov
rclb
movsb
dec
push
pop
shll
ljmp
or
fwait
repnz
enter
mov
push
popf
popf
jne
xorl
mov
int
pop
jbe
scas
in
orb
xor
cmp
cs
in
fsubp
push
loop
pushl
xlat
cmp
in
xchg
add
enter
jo
push
leave
gs
popf
jl
movsl
jbe
test
inc
lret
ficompl
mov
mov
mov
js
ja
sti
enter
push
pushw
inc
das
sahf
fdivrl
push
and
pushf
pop
xor
lds
push
jp
sbb
cmp
jg
es
cmpsb
imul
rcrl
pop
call
or
sub
nop
pop
ds
mov
rcrl
mov
imulb
push
fdivs
mov
mov
inc
stc
loopne
aam
pop
mov
sub
repnz
ret
sbb
pop
sub
dec
mov
sbb
pop
inc
and
sarl
out
push
test
fstpl
lods
pop
cs
loopne
ficomps
sarb
cmp
shlb
aas
jno
sub
lret
push
cmpsb
fildl
cmp
fmull
and
cld
out
enter
ja
lret
int3
xchg
mov
arpl
bound
ds
push
mov
mov
sbb
push
lock
nop
push
mov
jle
jle
xor
cmp
shl
dec
inc
aas
cmp
std
insb
pusha
or
xor
insb
call
imul
mov
inc
inc
cltd
mov
test
lods
dec
mov
repz
mov
xchg
les
dec
fs
push
fldcw
daa
inc
mov
lret
mov
adc
lods
push
repnz
jbe
shll
loopne
cmpsb
mov
mov
add
cmp
xchg
cmp
jbe
cmp
pop
cmp
std
sub
push
pop
cwtl
outsl
push
lret
subl
adc
pusha
ret
mov
jmp
fldcw
lcall
jg
mov
xchg
pop
leave
outsl
push
mov
cmc
pusha
cmp
mov
dec
out
lds
orl
ret
sbb
add
out
nop
mov
push
xchg
dec
scas
push
out
push
mov
cmpsb
sub
push
dec
iret
aaa
test
inc
mov
aad
or
repz
xor
jmp
pop
int
call
jecxz
int3
cmp
aaa
adc
sahf
inc
pop
adc
lods
push
call
push
lods
jmp
fldpi
jp
jp
xchg
jg
test
sub
sbb
and
test
in
jo
push
mov
inc
leave
cmp
cmpsl
jne
fldcw
adc
pop
dec
rcrl
pop
sub
pop
add
and
out
pop
xor
outsb
gs
push
or
notb
and
icebp
mov
xchg
adc
dec
aaa
adc
repnz
pop
mov
and
ljmp
inc
mov
xor
mov
pop
decl
mov
cmp
cmp
pop
in
scas
pop
add
xor
xor
stos
test
push
cmp
push
ret
inc
sbb
dec
push
fbstp
subl
lret
cmp
aad
ds
push
pop
push
adc
lods
cli
shlb
stc
push
in
les
pop
mov
and
cli
cmpsl
fnstenv
jae
jle
xchg
mov
push
aaa
mov
lock
inc
fidivrl
sub
repnz
mov
cmp
push
push
fs
dec
and
test
enter
inc
call
dec
dec
imull
iret
cmp
jb
adc
xchg
loopne
inc
data16
jge
mov
fwait
stos
xchg
xchg
cwtl
push
push
ret
mov
aaa
loopne
push
push
mov
inc
out
ds
cmp
imul
xchg
lock
mov
mov
lahf
test
xchg
mov
add
icebp
or
mov
test
cld
push
cmpsl
mov
out
jecxz
cli
lds
movsb
dec
pop
push
pop
push
push
popf
cmp
jne
stos
push
sbb
loop
stos
mov
xchg
loop
aam
sti
aas
jns
mov
jp
adc
shrb
dec
les
and
arpl
pop
int3
shl
xor
arpl
or
inc
xorb
mov
int3
fwait
dec
jge
imul
sub
and
sub
ror
inc
push
mov
mov
out
lock
sbb
orl
jnp
sbb
or
lds
test
aas
inc
sbb
ljmp
call
or
repnz
sub
movups
enter
jbe
lock
subl
lret
pop
scas
mov
push
insb
sub
dec
imul
arpl
or
test
xor
mov
fdivr
xchg
int
jae
les
adc
ja
pop
cli
decb
sahf
lret
mov
mov
clc
and
cli
push
inc
sbb
mov
jns
je
or
mov
xor
jmp
jne
xor
js
xchg
push
notl
addr16
and
dec
mov
imul
add
jns
push
cltd
mov
ja
gs
fildll
inc
sti
lods
jo
jecxz
int3
jmp
adc
mov
inc
xchg
sub
sbbl
xor
mov
daa
testl
fdivs
aad
mov
jbe
sbb
or
jle
scas
mov
dec
loope
mov
mov
push
jl
xor
inc
hlt
out
test
ja
sbb
dec
lods
imull
inc
fcomps
sarb
int
adc
into
shlb
inc
add
cs
lods
fiadds
vpavgw
push
scas
pop
icebp
push
push
cmc
hlt
adc
jg
and
pop
call
out
mov
ss
test
mov
inc
adc
ss
adc
sbb
test
inc
fmulp
leave
fcompl
jbe
cmp
mov
pop
mov
sbb
inc
cmp
pop
push
adc
xlat
out
test
xor
cmp
xor
adc
jne
arpl
jne
xchg
popa
xlat
push
push
pop
xchg
clc
call
out
out
call
rcll
push
mov
fisubrl
pop
mov
fldcw
jns
xor
or
stos
cmp
push
repnz
test
loope
hlt
lret
out
push
sbbl
xchg
test
add
jo
orl
jle
ljmp
adc
cli
and
and
mov
pop
add
pop
xorl
sub
inc
pop
aas
push
pop
push
sbb
jl
inc
pop
jb
cld
stos
pop
xchg
xchg
lcall
jp
ljmp
xchg
add
push
popf
sub
ss
lcall
or
aad
xchg
add
adc
push
dec
cmp
push
or
nop
xchg
inc
stos
sbb
fsubl
loope
sub
cmp
pop
inc
iret
pop
cmp
arpl
push
push
mov
push
sub
fcmovbe
aas
insb
xor
or
arpl
push
mov
out
sbb
xor
cmp
fdivrs
dec
mov
mov
hlt
dec
or
push
cwtl
movsb
aad
gs
sbb
xchg
int3
arpl
repz
out
push
xchg
inc
enter
pop
sbb
xor
stos
inc
inc
ret
jl
push
jmp
jge
outsl
cmp
or
movsl
cmp
dec
in
out
cmpsl
ss
ret
lods
push
push
mov
push
add
mov
pop
adcb
push
movsl
insb
fdivs
clc
mov
lret
jae
pop
push
fs
pop
inc
in
inc
std
jle
jae
jmp
xor
sbb
cmp
in
bound
mov
sub
pop
ja
fndisi(8087
push
ror
jp
cmpsb
out
mov
xchg
call
lds
adc
sub
aas
in
pop
jecxz
pop
mov
std
mov
sbb
mov
pop
js
in
sub
adc
add
pop
push
ds
mov
in
insl
sbb
add
and
insb
fstpl
cwtl
jle
mov
aas
notb
xor
addr16
out
out
push
xchg
pop
mov
lahf
repnz
adc
aaa
clc
or
mov
cmp
xchg
xor
xor
hlt
js
call
jmp
sbb
mov
push
mov
cwtl
stos
pop
in
cmpsb
push
mov
push
cmc
out
icebp
gs
and
clc
mov
andl
aam
push
pop
pusha
daa
lcall
dec
hlt
in
mov
movsb
addr16
cmpsl
add
in
int3
fimuls
pxor
in
int3
arpl
mov
test
mov
xchg
out
inc
push
call
xchg
add
orb
mov
mov
xchg
adc
push
rorb
xchg
imul
push
push
dec
dec
cmc
divb
add
inc
popa
push
jecxz
addb
mov
add
dec
push
lret
cld
je
icebp
cmp
cmp
xlat
push
mov
subb
push
mov
push
mov
lret
int
mov
test
dec
inc
gs
xlat
outsb
pusha
lcall
test
ss
shl
adc
sbb
mov
xchg
and
ret
jns
or
dec
mov
loopne
mov
cltd
and
fidivl
mov
or
fidivl
jae
aad
push
or
ficoms
sahf
xchg
ja
lea
sbb
jmp
fsub
inc
pop
rcrl
addl
sub
xchg
in
mov
pop
xorl
mov
in
std
aas
mov
hlt
or
aas
push
loop
mov
jne
shlb
mov
mov
xchg
aam
push
cmc
fs
sahf
mov
jns
mov
xor
ljmp
xchg
stos
cs
xchg
scas
sub
das
cmp
ret
enter
pop
push
lock
add
fsubrl
xchg
fdivrs
jo
adc
repz
imul
jbe
xchg
xor
ficoml
das
jns
scas
stos
dec
add
cmp
cmp
jbe
loop
psubusb
mov
or
inc
cltd
iret
popa
xor
push
mov
ret
push
fs
inc
push
pop
lcall
sbb
hlt
push
inc
sub
cli
pop
push
stos
into
mov
neg
adc
mov
sbb
dec
dec
cmp
cmp
xor
in
push
add
cmp
xlat
and
mov
inc
inc
mov
lret
in
jno
ljmp
push
or
ds
mov
mov
pop
hlt
push
inc
xor
mov
in
imul
lcall
shlb
inc
fadds
push
in
inc
fisubl
xor
inc
jecxz
sti
push
lahf
adc
push
sbbb
mov
xor
xchg
and
sbb
in
pop
push
pushf
ret
nop
jp
ljmp
mov
jg
mov
add
push
sub
fs
dec
loope
cs
sub
sub
jp
outsb
cs
mov
addr16
sbb
xor
imul
push
outsl
in
icebp
or
loope
mov
lahf
mov
xchg
enter
push
ljmp
and
pop
call
xchg
hlt
ljmp
bound
xor
xchg
orl
iret
cmpsb
insl
jg
gs
daa
or
scas
test
sbb
int3
rclb
andl
or
xchg
dec
lea
ja
fpatan
imul
lds
test
aas
subb
pusha
addl
jg
jmp
inc
pushf
jnp
dec
mov
xor
out
aaa
and
push
inc
rclb
bound
stos
negl
and
adc
rep
imul
mov
xchg
lds
test
adc
mov
xchg
mov
je
je
add
mov
jge
inc
cltd
ret
fsubl
add
cwtl
mov
cmovae
inc
xor
adc
jbe
inc
sbb
outsl
inc
cli
pop
sahf
loope
inc
outsl
ret
decl
xchg
jae
je
mov
in
jnp
imul
inc
jo
imul
mov
jl
out
mov
xchg
cmpsb
lock
lcall
xchg
inc
cmc
std
xchg
sbb
rcll
mov
imul
pop
fstl
stos
mov
pushf
outsb
daa
mov
jp
sub
insl
cmp
mov
pop
adc
repnz
mov
cmpsl
sub
fldt
scas
xchg
outsb
sbbb
or
sbb
push
xchg
sahf
and
cmpsb
inc
pusha
jl
cmc
mov
push
out
pop
pusha
xchg
adc
or
and
ret
js
std
outsl
orb
je
cmpl
xchg
and
int
scas
sbbl
xlat
mov
jg
mov
xchg
pop
loop
je
popf
lods
xor
cmpsb
negb
in
les
ret
jnp
aam
cmp
in
adc
daa
jecxz
notl
scas
bound
cmp
idivl
xchg
imul
dec
push
lahf
outsb
les
xchg
mov
and
sub
ja
xchg
add
in
sbb
mov
cmp
xor
adc
jle
pop
dec
mov
dec
lret
lret
dec
jo
add
jmp
outsb
inc
cmc
sbb
loop
xor
mov
pop
mov
xchg
dec
mov
dec
jnp
negb
pop
xor
nop
daa
push
xor
out
add
es
repz
xchg
jecxz
in
lea
or
int3
jmp
and
imul
cmp
test
adc
dec
das
mov
sub
stos
icebp
adc
lcall
cmp
scas
mov
aam
lods
add
jno
stos
jg
cs
and
adc
cltd
ljmp
insb
or
stos
ds
outsl
or
aad
mov
push
sub
mov
mov
int
gs
xchg
xor
cwtl
stos
inc
mov
jbe
inc
std
data16
out
and
xor
in
in
xorl
xchg
mov
adc
test
insl
xchg
xor
mov
jnp
pop
xchg
fdivl
fcomi
movsb
push
push
sti
inc
fsubrs
pusha
or
cli
and
iret
fwait
mov
pop
sub
aam
lahf
add
adc
push
sub
adc
lods
js
dec
sub
dec
lret
lret
ja
daa
fidivrl
test
push
popa
shrl
jae
add
imul
ret
inc
clc
std
push
loop
mov
imul
pop
and
inc
or
sub
cmp
ret
outsl
cmpsb
sub
xlat
in
mov
addr16
shlb
and
add
dec
sub
arpl
les
jne
shll
xchg
adcl
cmp
movsl
imul
stc
cmpsl
lahf
loope
dec
enter
pop
insl
les
hlt
inc
in
jns
adc
jno
adc
imul
or
fadds
adc
jb
pushf
and
mov
sub
pusha
sub
fistps
insb
fwait
loope
sbb
jbe
les
stos
jl
fcmovne
fnstsw
xchg
cmp
push
testb
xchg
in
bound
jmp
fcmovu
and
out
fiaddl
addl
lock
je
ret
js
mov
jns
enter
cli
shrb
sub
xchg
dec
movsl
or
add
sbb
addb
mov
or
push
loopne
dec
sbb
push
jnp
dec
in
popa
lock
dec
xchg
add
shl
xor
lret
insb
int
xlat
mov
cs
in
mov
sub
push
xchg
test
push
jno
or
mov
inc
sub
xchg
popf
jbe
pop
mov
or
xor
adc
ljmp
es
lods
xlat
hlt
lret
adc
xor
mov
icebp
bound
inc
mov
add
cmp
xchg
out
repz
lcall
stc
xlat
call
or
adc
into
sbb
sub
popa
cmp
sarl
fs
push
inc
enter
or
or
movsl
cmp
cmp
adc
adcb
push
jg
js
sahf
subl
cmp
ret
mov
pop
repnz
sbb
rorl
lret
sub
adc
push
inc
lahf
cmpsl
pop
mov
push
xlat
pop
je
adc
xchg
movsb
sti
xor
sub
mov
push
int
aam
outsl
mov
jb
data16
inc
inc
add
sti
nop
sbb
lahf
inc
mov
pushf
xor
repz
pop
jo
push
dec
sbb
stc
adc
sub
dec
out
hlt
add
jle
and
lock
mov
aad
sahf
movsl
push
lcall
sahf
or
or
mov
cmpsl
adc
dec
nop
or
loop
and
popf
aad
xchg
and
ja
iret
test
and
adc
andb
xlat
sbb
inc
lods
mov
push
xlat
mov
cmc
adc
cmp
jno
cmp
movsl
sub
jl
jge
xchg
jns
xchg
popf
mov
mov
pushf
aam
mov
jge
scas
mov
pop
inc
sbb
jle
shl
rol
gs
jp
into
sub
or
jge
push
jns
adcl
mov
stos
mov
stos
inc
cmpl
dec
jne
mov
sti
dec
or
shlb
test
lret
in
sub
sbb
mov
mov
add
inc
testl
push
cli
test
pop
movsb
mov
aad
push
mov
test
and
cmpsl
aas
pop
and
sahf
jp
push
cmp
pop
stc
add
sahf
inc
cmp
jnp
or
jae
divl
inc
fcompl
icebp
jl
pop
out
inc
pop
add
dec
aam
jne
lcall
lods
adc
ret
mov
mov
mov
leave
andb
and
ds
jmp
imul
or
int3
push
aas
dec
push
mov
gs
cld
xchg
mov
into
insl
pop
jbe
scas
enter
cmp
pop
pop
push
out
aaa
insb
jne
xchg
push
jbe
cmpl
xchg
add
je
push
and
jae
lea
mov
mov
imul
shrl
data16
mov
dec
pop
push
jecxz
popf
xor
mov
and
lret
popa
adc
ss
outsb
mov
push
inc
sub
push
or
ja
or
pusha
mov
mov
data16
mov
mov
mov
rorb
test
pop
lods
jbe
and
int3
push
movsb
popf
shr
test
mov
inc
push
lahf
xor
cwtl
leave
xchg
mov
hlt
xchg
rcr
in
push
aas
lcall
xchg
aaa
into
push
call
lock
jo
insb
aad
in
pop
data16
divb
sub
in
pop
lahf
imul
sbbl
pop
dec
xchg
add
mov
arpl
insl
in
add
lahf
ss
leave
mov
mov
dec
test
lret
nop
loopne
mov
cmpl
fldcw
es
mov
ja
jb
sub
stos
sahf
int3
jmp
lods
xchg
mov
jge
cmp
mov
insb
or
ret
jne
xchg
ljmp
jo
inc
jecxz
push
pushf
xchg
fidivrs
out
inc
mov
sbb
psrlw
pop
das
aam
cmp
mov
call
into
repz
fs
popa
mov
cmc
lock
lret
fnstsw
bound
push
js
arpl
xchg
push
push
mov
in
cmpsb
and
xchg
fsubs
xorb
sub
jp
test
ret
mov
pop
fiaddl
and
jae
and
xor
mov
or
cmpsb
cmp
cmp
sbb
ds
inc
daa
mov
outsl
add
xor
cmpsl
adc
ja
xor
push
pop
fisttpl
arpl
cmp
cli
les
adc
push
add
sahf
xor
cmpsl
cmp
hlt
lcall
stos
lret
mov
mov
imul
leave
xchg
popa
syscall
pushf
jg
sbb
push
inc
std
xchg
or
shr
lds
cmp
push
mov
mov
lods
jns
or
int3
mov
icebp
insb
sbb
cmp
fdivs
xor
in
xchg
jle
loopne
popa
jns
mov
pop
sbb
inc
jecxz
pop
loopne
mov
out
sti
jecxz,pn
push
and
cs
adc
fs
aad
dec
test
bound
lock
shrl
or
lods
adc
xchg
pop
je
inc
stc
push
dec
lock
push
int
fnstcw
sub
ret
mov
out
pop
push
sub
cmp
sti
aas
mov
imul
mov
daa
push
mov
cwtl
stos
mov
xchg
out
imul
adc
loope
mov
xchg
mov
subb
xor
fisttpll
mov
sub
adc
shrl
mov
mov
shll
out
sbb
add
incl
call
scas
fcoml
iret
jp
int3
bound
inc
in
cmp
xor
mov
pop
jb
lods
sub
insl
ffree
aam
cmc
frstor
decb
jne
imul
ret
xchg
popa
into
ja
iret
out
rol
aam
pushf
std
pop
into
push
fmul
push
jno
or
push
xor
psubsw
cmp
aas
dec
add
loopne
or
aad
popa
adc
outsl
in
lods
aam
push
xchg
fimull
sti
add
rol
addb
pop
mov
shll
jbe
loop
mov
or
addr16
fimull
mov
or
xchg
mov
bound
inc
fwait
xor
adc
jp
mov
xchg
lret
jp
pop
lods
call
int
xchg
inc
daa
cmpsb
pop
mov
push
lds
ja
mov
add
in
sbbl
mov
test
inc
add
adc
mov
les
es
sub
fsubrl
jns
dec
pop
inc
lds
jge
lods
mov
loop
inc
push
repz
dec
fcmovnb
inc
add
dec
sbb
xor
cmp
out
rcll
mov
hlt
cmpsb
or
push
jae
jae
inc
pop
xchg
insl
add
mov
fsubs
insb
testb
xlat
fcomps
cmpl
jo
std
xchg
fldenv
repnz
lock
inc
xor
movsl
iret
adc
and
pushf
repnz
mov
mov
movb
add
xor
call
inc
dec
jmp
xor
xchg
roll
fldl
pop
scas
adc
dec
cmp
ret
ss
cmc
shlb
jno
sbb
jl
pop
in
dec
jbe
cmp
test
je
incb
sbb
inc
dec
fs
arpl
jl
jp
fisubrl
fists
cmp
add
sbb
push
insl
mov
xorb
gs
scas
stos
test
shrb
aam
adc
xchg
aas
push
iret
arpl
mov
cli
mov
mov
mov
fiaddl
push
and
faddp
fadd
jae
pop
mov
xchg
dec
push
sbb
adc
adc
mov
jns
gs
pusha
jbe
shlb
adcl
fdivl
jb
mov
out
arpl
cli
daa
mov
mull
pop
test
fdivl
dec
fiaddl
test
in
mov
pop
hlt
push
inc
lock
jnp
sub
lret
lea
int3
mov
push
sahf
xchg
push
int
adc
xchg
sbb
sub
shrl
adc
mov
xchg
hlt
mov
movsl
sbb
int3
sbb
jno
shll
mul
imul
push
lods
inc
mov
lods
dec
stos
into
imul
inc
movsl
in
pop
gs
pop
daa
sahf
scas
mov
mov
sahf
xor
dec
iret
into
fidivs
sub
ja
xor
aam
fdivr
test
pop
cmp
push
and
pop
fidivrl
push
and
mov
push
jne
push
or
in
test
das
xor
and
or
insb
adc
xchg
lcall
cmpsb
loop
cmp
pushf
cmp
mov
jg
push
int3
aas
push
leave
insb
jo
mov
test
or
push
rep
inc
and
cmp
enter
je
push
ja,pn
cmc
and
rcrl
xorl
jle
xlat
sbb
and
cmc
pop
fimuls
pop
dec
jl
ss
sub
sbb
das
addr16
fdivl
gs
jae
faddl
out
popa
jo
ljmp
pushf
sbb
cwtl
decl
cltd
jno
mov
cld
jb
out
fsqrt
xchg
push
je
adc
fstps
push
outsb
jp
test
mov
out
cmpsl
xor
mov
das
in
shr
out
loop
cld
jecxz
push
ret
xor
mov
in
adc
push
popa
stos
inc
jnp
fsubr
jns
mov
push
pushf
mov
mov
pop
pusha
fldl
cwtl
adc
add
in
pop
insl
jne
push
mov
aad
in
inc
fs
add
sub
push
rclb
test
int3
push
mov
mov
dec
test
xchg
xor
fnstcw
fistpl
pop
mov
repz
loope
cmpsl
bound
out
add
lds
push
pop
loop
pop
leave
fnstenv
lock
jmp
insb
bndstx
rcrb
incb
sbb
ret
push
add
sub
lods
mov
dec
icebp
mov
or
inc
out
stos
xor
pop
sbb
and
lret
clc
dec
inc
pop
sbb
and
push
pop
mov
outsb
js
idivw
imul
mov
mov
push
ret
xlat
outsb
shrb
js
xchg
or
scas
arpl
sbbb
mov
addr16
daa
into
dec
lcall
stc
shlb
sub
shlb
sub
arpl
jmp
xadd
nop
jmp
cld
xchg
out
cltd
aam
ret
pop
ret
adc
decb
xor
hlt
aam
jle
sub
xchg
pop
hlt
sub
dec
and
mov
sub
lds
inc
je
xchg
xor
aam
or
mov
sub
adc
mov
xor
push
jmp
lahf
int
cmp
ret
iret
pop
icebp
mov
outsl
mov
lcall
int
push
push
andb
nop
xor
push
xchg
xlat
push
sub
in
rorl
or
mov
mov
push
dec
mov
xchg
pusha
mov
push
sarb
push
xor
icebp
rorb
dec
xchg
inc
mov
push
subl
shlb
add
lods
lea
xor
mov
cld
stos
push
pushf
xor
hlt
push
out
xorl
rcrb
les
fdivl
jns
arpl
xorps
outsb
adc
mov
nop
inc
sub
jno
pop
cs
shrb
and
and
bnd
lea
cmp
popf
rol
xchg
popa
faddl
cmp
xchg
inc
xchg
jns
xor
cwtl
clc
scas
or
or
mov
pop
jb
nop
jl
jb
ret
jp
lea
jnp
fwait
stos
sbb
jecxz
sbb
or
imul
push
adc
dec
and
mov
mov
idivb
cmp
lock
xchg
or
dec
aaa
push
dec
cmp
jns
xchg
pop
adc
sbb
in
in
mov
xchg
sbbl
sub
aad
jp
xchg
or
inc
pop
popa
clc
jl
pop
clc
adc
mov
movsb
mov
push
pop
aad
loopne
sbb
das
xorb
lock
popf
cmpb
mov
pop
repnz
jae
mov
and
push
push
or
lahf
cmp
in
cwtl
stos
adc
repz
clc
in
mov
xor
aaa
pushl
cmp
xchg
stos
jbe
push
scas
ds
xchg
mov
mov
xchg
es
adc
mov
push
mov
inc
xorl
push
int3
cmpsb
jns
sub
les
nop
daa
shlb
xor
push
push
inc
arpl
jae
add
pop
sbbb
sub
and
push
or
mov
mov
xor
sub
lret
xchg
imul
outsb
mov
jg
addr16
adc
std
rorl
inc
mov
xchg
sub
sub
lea
mov
adc
arpl
or
add
mov
lods
sbbl
lahf
pop
out
pop
orl
or
je
cwtl
sbb
pushf
jo
into
pop
fwait
mov
sub
lahf
mov
sbb
pushf
pop
scas
mov
push
jne
add
pop
xchg
cmp
in
insl
mov
xor
xchg
mov
pop
out
adcl
out
inc
mov
xchg
jmp
mov
in
orb
mov
mov
in
insw
mov
in
mov
mov
test
out
in
adc
lret
loop
in
pop
pop
sbb
loopne
xor
cmp
add
fdivrl
mov
mov
js
push
jns
lea
adc
adc
sbbl
outsl
fisttpl
mov
ss
lahf
ss
cmpsl
ljmp
daa
sbb
jmp
scas
and
lods
outsl
mov
leave
sub
lock
loop
xchg
pop
fildll
shlb
jmp
andl
mov
dec
arpl
push
fisttpll
jg
fbstp
push
mov
inc
cmpsb
push
inc
and
lahf
lock
mov
sub
les
lods
lea
lds
repnz
xor
setge
push
out
and
or
add
cwtl
test
ljmp
jno
es
sbb
jne
mov
mov
sahf
hlt
sub
scas
or
jl
nop
cmp
test
popa
mov
inc
hlt
mov
rcl
fnstsw
lods
pop
nop
sub
call
test
adc
sub
ljmp
sbb
dec
cmc
or
inc
dec
push
insl
xchg
notb
jae
jge
push
movsl
xchg
leave
incb
das
out
xlat
lock
jmp
mov
loop
jg
in
add
insb
lods
not
and
aam
push
cmpsb
xchg
or
mov
in
pushf
xor
loopne
cmpl
out
or
mov
pop
mov
and
mov
pop
test
pop
dec
mov
jg
or
jbe
adcl
inc
mov
cwtl
lcall
int3
xor
arpl
mull
cmp
ss
cmp
push
mov
fadd
fldcw
addps
mov
rcl
mov
xchg
mov
jnp
xor
mov
pop
jno
stc
fs
mov
add
roll
dec
add
push
cwtl
ds
or
loop
pop
mov
mov
and
mov
test
mov
jle
out
adc
dec
mov
mov
in
fldenv
or
jb
xor
call
mov
xor
add
pop
mov
nop
add
add
jae
add
push
jg
and
push
mov
loope
stos
mov
out
mov
out
roll
mov
and
fists
xor
out
addr16
sar
or
xlat
sbb
sub
cmp
mov
aas
out
push
jno
cmp
add
cmp
shrl
push
arpl
hlt
cmp
lea
or
inc
inc
lret
std
inc
pop
popf
arpl
ja
movsl
mov
idivl
pop
and
xchg
mov
hlt
mov
sub
rcl
repnz
scas
mov
cmpsb
lock
or
ficompl
fnsave
mov
sbb
pushf
or
and
and
pop
inc
jb
out
cmpsb
lock
add
aam
xchg
push
outsb
sub
ja
insb
repnz
pop
lds
dec
and
dec
mov
add
daa
dec
inc
inc
notl
lcall
pop
cld
push
fdivl
mov
sbb
mov
fmull
outsb
dec
or
aaa
nop
lods
insb
xchg
nop
int
out
push
in
dec
addr16
test
gs
xchg
xor
mov
mov
insl
sub
cmp
data16
lahf
mov
adc
inc
xchg
stos
in
repz
jno
dec
fwait
lcall
leave
imul
pop
mov
mov
sub
outsl
notl
adc
push
mov
cltd
mov
leave
je
adc
and
cmp
fcoms
shlb
sub
ret
jo
adc
push
jp,pn
inc
into
and
stos
and
add
in
and
subl
arpl
inc
add
lock
mov
clc
and
inc
gs
cmp
xchg
sub
lcall
lret
repz
xlat
mov
ficompl
fiadds
fidivs
adc
sahf
subl
jecxz
fdivl
pop
mov
inc
xlat
cli
mov
sbb
inc
xlat
ret
jo
mov
xor
adc
cmpsl
xor
and
enter
push
lea
movzwl
push
inc
and
xor
fs
hlt
mov
pushf
cmp
dec
mov
rsm
mov
and
pusha
cmc
aam
lds
aam
add
adc
cli
mov
rcrb
adc
ss
jp
fimull
cmp
in
mov
dec
and
push
sar
repnz
cmp
adc
pop
repnz
or
fmull
push
pushw
test
das
addr16
testb
icebp
pop
push
test
out
cmc
pushf
or
mov
pop
or
lods
pusha
pushf
mov
mov
dec
pop
hlt
arpl
addr16
adc
test
push
aam
mov
jmp
out
rorl
dec
aaa
mov
mov
sub
inc
jg
mov
xchg
mov
fistpll
in
inc
ret
add
mov
mov
inc
mov
loope
test
vmwrite
scas
bnd
int
pop
out
jmp
inc
jae
std
xor
add
and
call
jo
lods
inc
addr16
mov
inc
lds
jns
sbb
adc
lods
sbb
out
inc
out
adc
mov
cmp
jmp
push
aam
ljmp
test
jl
inc
imul
pop
ljmp
loopne
inc
sbb
ror
rolb
ret
fidivrs
pusha
shrl
pop
int3
outsl
mov
push
scas
imul
push
shlb
test
xor
imul
and
xchg
sub
lret
rorb
cmp
sub
das
and
xor
pop
dec
lret
xchg
sub
adc
loop
mov
sbb
push
lds
xchg
andb
fcoms
inc
bndstx
push
sbb
pop
out
ja
es
fstps
sub
pop
popa
jle
fwait
sub
and
stos
clc
mov
hlt
into
dec
rol
icebp
insl
es
xor
fimull
mov
je
int3
push
jle
lea
xchg
std
out
inc
fidivl
sbb
rep
pop
mov
inc
je
lahf
out
mov
push
mov
insl
scas
inc
inc
mov
dec
shrb
mov
insl
dec
jne
xorl
ret
ret
sub
push
mov
mov
jecxz
mov
sbb
mov
subb
cs
mov
scas
adcb
sub
addb
out
ret
imul
sub
sub
dec
jno
jl
jmp
adc
pop
push
mov
xor
lds
push
in
pusha
pushf
stos
dec
pop
cltd
cmp
cwtl
in
xchg
add
pop
imulb
adc
mov
rclb
pusha
call
add
icebp
je
cmp
cmpsb
add
xchg
inc
push
xchg
ffree
int
mov
pop
lret
stos
lcall
push
cmc
ret
incl
test
cli
les
ficomps
cmp
in
cmp
ljmp
cmp
rol
loopne
jns
imul
imul
in
nop
xchg
pop
mov
push
or
mov
jecxz
sub
ja
movsb
push
loopne
into
ret
pop
cmc
mov
out
in
in
in
mov
add
dec
fdivs
gs
clc
sub
sub
mov
sahf
aas
or
in
cmpsl
jns
movsl
mov
mov
cmpl
daa
inc
sub
xchg
add
add
or
loop
daa
sarl
sbb
movsl
xchg
ss
int3
add
js
mov
mov
ljmp
xor
jge
fwait
xor
push
sub
jns
call
stc
mov
jle
pop
lods
add
add
faddp
lahf
pushf
dec
or
test
dec
adc
cmp
dec
mov
lea
imul
jo
pop
cmp
mov
stc
ret
arpl
pop
aam
xchg
mov
js
dec
fdivl
repnz
lcall
and
pop
ja
jle
fsubrs
faddl
out
mov
mov
dec
stos
or
frstor
mov
cmp
pop
rorl
pusha
and
push
fldcw
and
jnp
sub
mov
out
pushl
testb
daa
cli
std
lods
mov
scas
and
mov
leave
insl
outsl
xchg
jno
test
ja
shlb
dec
adc
pop
into
ds
mov
or
outsb
jo
addr16
xchg
add
pop
popf
mov
cmp
fs
loopne
test
inc
jmp
movsb
icebp
xchg
adc
lods
pop
lret
mov
inc
add
pop
pcmpeqw
jl
loope
je
dec
loop
cwtl
cvtpi2ps
jp
xor
inc
mov
orl
or
pop
or
aas
push
sub
xor
test
xchg
inc
sub
rolb
pop
mov
mov
add
push
pop
jge
shrl
lahf
pop
outsb
shlb
pop
or
adcb
in
ficoms
cmp
sub
xor
push
xorl
or
sbb
xor
inc
mov
xor
in
out
push
xor
sub
frstor
push
fnstcw
or
fcomps
jns
out
add
lods
subl
fisttps
imul
cmpsb
pushf
cmp
icebp
sbb
in
mov
ret
add
outsb
loopne,pt
push
imul
popf
pop
xchg
mov
mov
inc
sbb
xchg
xchg
sti
popa
cmp
mov
push
mov
add
aaa
fwait
push
movsl
stos
jmp
pop
mov
and
fadds
out
sub
pop
or
je
mov
ficoml
jno
lock
cmp
popa
jns
fildll
jge
jp
xchg
cmp
adc
aam
mov
push
daa
test
xor
adc
int
jo
dec
mov
lret
aam
inc
inc
push
imul
adc
fucomip
sub
mov
add
and
xor
mov
shll
lds
mov
out
xchg
xor
mov
xchg
and
in
xor
daa
in
dec
in
cmp
sbb
pop
mov
pusha
loop
cmpsl
pop
sub
dec
or
and
sub
stc
nop
stc
clc
xor
insb
xor
jmp
mov
sarb
cmp
xchg
cs
sub
and
push
mov
popa
sub
lahf
jns
sub
fwait
bnd
out
and
pop
sbb
and
xchg
add
xor
dec
dec
push
outsb
mov
ret
jo
pop
mov
inc
mov
in
sub
cmp
push
inc
nop
sbb
into
push
sub
and
std
stos
jbe
sub
inc
cmpl
pop
imul
repz
jmp
daa
adc
ja
stos
inc
push
inc
cmpsb
push
test
mov
adc
fcmovu
loope
in
sti
movsb
xchg
jb
outsl
enter
pop
mov
sbb
js
push
inc
pop
adc
xchg
leave
jne
xor
jno
clc
cmp
adc
mov
mov
and
mov
insl
enter
fsubrs
sub
mov
adc
sub
push
xchg
jle
adc
mov
bound
dec
or
dec
adc
leave
test
out
xor
gs
dec
sub
push
fidivrl
bound
test
call
loop
sub
push
xchg
mov
push
das
cmp
es
shll
jp
push
loope
cli
popf
xchg
add
or
clc
test
or
xor
sub
imul
or
movd
jl
sbb
sub
data16
xchg
xor
pop
iret
fimuls
and
pop
movsb
sbb
mov
testb
cs
mul
movsl
or
sub
insl
icebp
mov
add
jns
bnd
sbb
jb
and
js
je
adc
mov
sbb
mov
lahf
mov
inc
arpl
xlat
mov
pop
lods
xchg
rorl
pop
and
lods
push
xchg
mov
jne
mov
pop
mov
test
fildll
mov
xchg
push
fcomps
in
mov
inc
adc
adc
sub
test
cmpsb
mov
push
scas
outsl
add
scas
add
outsb
cmp
ljmp
mov
xchg
and
inc
push
xchg
cwtl
mov
mov
push
mov
fmul
xchg
push
mov
sarl
in
pusha
fmul
sbb
xchg
mov
mov
scas
stos
pop
and
add
mov
cs
addr16
sub
add
inc
inc
sbb
loopne
sub
aaa
mov
dec
jne
adc
mov
push
movsl
andl
mov
push
outsl
cmp
mov
inc
push
insl
pop
nop
mov
mov
test
aad
jne
inc
aad
iret
mov
push
lock
int3
adcl
xchg
std
dec
scas
gs
push
adc
or
mov
xchg
sbb
mov
std
fs
lock
movsb
jb
call
int
pop
daa
sbb
lods
outsb
or
cld
lea
mov
les
pop
inc
scas
pop
sahf
cmc
out
pop
sbb
popf
stc
sub
mov
inc
and
cmp
sub
sub
cwtl
xor
call
movsb
xor
mov
mov
add
dec
pop
or
stos
dec
popa
jecxz
fdivs
lret
add
in
push
call
xchg
adc
out
shl
push
ret
mov
mov
or
or
es
sub
push
sbb
das
mov
and
sbb
sbb
sahf
jbe
and
fdivs
in
cltd
mov
fidivs
push
pop
or
fstpt
gs
pop
xchg
sahf
test
jae
cmpsl
les
and
cli
push
adc
loopne
or
and
and
mov
xchg
lret
cmp
addl
lret
xlat
xchg
imull
sub
pop
lods
fisttpll
pusha
dec
mov
xor
jne
loope
sbbl
jge,pn
fisubrs
shl
sbb
mov
dec
push
in
add
add
or
jmp
stos
ljmp
adc
jno
inc
mov
int3
xchg
gs
jl
jecxz
mov
call
mov
fdivl
inc
clc
dec
xchg
adc
xor
dec
ljmp
enter
pop
ret
xchg
mov
into
mov
enter
mov
pop
cmp
push
jecxz
mov
pushf
and
fcmovb
orb
mov
lahf
testl
into
gs
jno
dec
pop
in
inc
and
nop
sbb
fwait
xor
es
adc
out
push
sbb
pop
adc
add
jno
test
inc
test
push
push
xlat
sub
cmp
pushf
pop
mov
iret
mov
inc
fucom
aam
push
and
xlat
mov
add
adc
ror
pushf
cmp
mov
xor
push
icebp
xchg
pop
jecxz
das
mov
mov
loopne
xor
sbbb
sub
lret
stc
inc
jmp
sbb
mov
pop
into
xorl
sub
jne
lods
sbb
inc
gs
mov
adc
test
cmp
jne
arpl
mov
stc
inc
movsl
les
jbe
loopne
fldcw
or
mov
inc
lock
sub
add
jb
cmp
inc
mov
les
mov
ja
movsb
ja
cwtl
imul
adcb
test
jb
cmp
insl
push
cld
xchg
imul
idiv
jb
out
in
pop
xor
mov
inc
push
or
cwtl
pop
adc
repnz
lea
cmpsb
add
outsl
ss
fwait
test
movb
add
xor
movsb
cmp
mov
lret
jg
test
stc
jl
push
mov
stos
inc
inc
xchg
sub
mov
dec
push
mov
adc
rcrl
pop
adc
sub
add
push
mov
ret
inc
je
dec
push
xchg
push
stos
fisubs
cmp
ret
jl
add
lds
jne
jecxz
ficoms
add
jp
fisubrs
mov
pop
adcl
xchg
pop
push
leave
or
lea
and
push
loopne
pop
fs
rol
repz
icebp
test
repz
jnp
cltd
cmp
into
sub
gs
xor
pop
mov
adc
mov
xor
pop
push
xchg
sub
xor
mov
aad
sub
inc
lret
ret
add
lds
inc
sbb
sub
outsl
add
xor
cmpsb
jmp
dec
rorb
sbb
jnp
mov
ret
cwtl
cs
pop
xor
push
mov
xor
sub
inc
mov
jbe
fdivl
subl
ljmp
gs
pop
cmp
ds
sub
and
pop
push
fisubs
xchg
mov
ja
mov
push
push
movsb
mov
dec
and
dec
pop
bound
xchg
aas
cmc
jge
clc
in
add
scas
adcb
dec
popf
ret
stos
jle
inc
mov
aaa
lea
pop
pop
call
ja
in
aaa
fistps
mov
pop
mov
mov
xchg
xor
mov
fcompl
cld
or
stos
mov
cmp
int
xor
inc
in
mov
out
push
ja
ret
bnd
outsb
sub
iret
push
push
ficomps
cmpsb
stc
movsb
add
arpl
adc
loope
cmpb
jne
xchg
adc
arpl
xchg
adc
and
cmc
or
mov
lock
sbb
mov
mov
cwtl
fdivr
outsl
sbb
cwtl
imul
icebp
and
xchg
add
or
repz
adc
push
jb
shl
out
or
bound
loopne
mov
or
xchg
jge
ret
xor
mov
mov
cmp
cmp
xchg
sbbb
add
push
and
lret
out
ror
fdiv
out
test
inc
cltd
lock
push
or
sbb
lret
out
lock
cmc
lret
pmulhw
dec
movsb
xchg
mov
iret
cmc
adc
nop
mulb
xlat
scas
fiaddl
adc
imul
jo
clc
xlat
mov
stc
cpuid
mov
test
lahf
sbb
outsb
dec
dec
jo
push
data16
xchg
xchg
adc
gs
xchg
fiaddl
dec
mov
pop
repnz
sbb
rclb
outsl
xorl
pop
adc
pop
push
or
add
cmpsl
shll
negl
mov
adc
aam
fdivrs
xorb
lea
jo
inc
ja
xchg
nop
mov
movsl
mov
lock
lret
push
push
and
and
loop
and
inc
addr16
in
add
jno
ss
arpl
jl
addb
jne
mov
fdivs
dec
insb
jl
pushl
shlb
into
fidivrs
jge
lds
loope
in
lcall
out
mov
lock
mov
sbb
xchg
fistpl
jmp
sbb
adc
rcrl
jno
add
xlat
xor
lods
iret
jmp
xor
lahf
addr16
mov
cs
test
sub
xor
adc
sbbb
and
lcall
in
adc
xor
int
cmp
int3
in
pop
adc
test
sahf
fdivl
daa
rcl
lcall
in
aas
adcb
cmp
movsl
insb
mov
push
xchg
shrl
nop
int
sar
mov
test
pushf
gs
daa
adc
sub
dec
mov
cmpsb
rorl
xchg
dec
cmp
dec
cmpsl
push
fmull
mov
rcrl
sbb
rcll
xchg
out
test
out
daa
mov
mov
lods
inc
sub
xchg
inc
in
clc
jae
or
xchg
loop
and
cmp
subl
ret
shr
add
imul
pop
inc
xchg
mov
mov
loop
icebp
xlat
cmc
bound
adc
clc
adc
js
xor
mov
fistpl
pusha
outsb
xchg
dec
pop
push
add
pop
adc
insl
mov
inc
push
or
push
out
cmpsb
mov
add
nop
addr16
xchg
aam
push
clc
sub
shl
xorb
imul
inc
icebp
jno
dec
popa
cmp
push
push
sub
mov
dec
aam
frstor
mov
xor
and
xorl
icebp
insl
loope
sahf
ror
cwtl
adc
cmpsl
xor
adc
or
sub
stos
mov
mov
mov
sbb
fs
xchg
data16
dec
or
fbld
rol
mov
clc
mov
cmp
jge
aam
pop
sub
fdivrs
add
inc
pusha
imul
xchg
sbbb
mov
push
movl
push
mov
dec
addr16
xor
jmp
iret
sbb
or
lods
mov
mov
and
cmpsl
out
jecxz
jp
outsl
pop
testl
jmp
mov
mov
sbb
inc
std
or
jnp
ja
test
sbb
rcrl
aad
jmp
pop
lret
sub
in
cmp
sti
and
add
mov
cmp
popf
jle
sub
mov
push
fwait
sbb
xchg
jge
xor
mov
xor
imul
adc
xchg
sbb
push
les
pop
stos
gs
jo
inc
loop
int
out
mov
jns
mov
cmp
jo
ja
pusha
mov
mov
or
into
subl
je
xor
add
insl
xor
pop
cltd
lahf
repnz
jnp
or
inc
test
dec
icebp
cvtdq2ps
rolb
adc
loopne
pop
push
pop
cmc
icebp
mov
cmp
idiv
or
sub
sbb
xor
imul
add
dec
push
sub
iret
inc
push
xchg
dec
test
in
and
lds
js
xchg
add
cwtl
push
push
lret
jp
pslld
xor
cs
or
push
cmpsb
cmp
dec
in
scas
sub
push
add
sub
mov
adc
push
xor
cli
jne
nop
and
in
jg
push
idivl
xlat
test
and
adc
ret
fnsave
movsl
mov
shll
push
or
sar
xlat
cs
jl
sbb
sti
imul
fs
testb
push
out
inc
js
int3
push
push
sbb
fs
popa
xor
fisubs
enter
out
test
xor
std
xchg
loop
or
add
xchg
cmp
sub
subl
mov
cmp
out
enter
xchg
test
push
xchg
sub
pop
test
pop
mov
jp
jp
sub
pop
jne
adc
push
sarb
pop
test
int
adc
xor
mov
xchg
cmc
pop
fadds
lock
cmc
daa
mov
mov
daa
icebp
sub
add
gs
je
dec
loopne
les
cwtl
mov
cmpsb
inc
push
mov
mov
test
ret
or
dec
fsts
lods
jnp
shlb
mov
cltd
push
lods
mov
add
lods
mov
int3
out
inc
fcompp
mov
jnp
push
mov
dec
fwait
loop
add
xchg
test
lock
xchg
xchg
sahf
inc
inc
dec
out
lret
fsub
rorl
push
xchg
mov
int3
lret
or
mov
shll
int
xchg
add
dec
xchg
cmpsb
loope
lods
loop
cmp
push
xor
or
mov
pop
jl
xor
adc
popa
mov
mov
or
adc
lods
sbb
rcr
and
cltd
push
iret
std
shll
fstpt
push
lods
push
mov
lea
adc
outsl
insl
test
push
add
stos
xchg
aas
mov
loop
or
sub
jp
mov
push
sbb
pop
pop
ds
gs
sub
add
push
jne
cmpb
jb
mov
and
lahf
sbbl
push
pop
add
mov
insb
icebp
mov
ds
rol
cwtl
cmc
imul
in
out
cmpsl
imul
icebp
pop
fbld
jne
mov
out
movsl
xor
mov
movsl
cmp
xor
hlt
jno
ret
sub
sbb
inc
ss
pop
push
cmp
arpl
jne
adc
mov
gs
xchg
push
insb
sbb
and
mulb
sbb
loop
push
pop
repnz
dec
ss
nop
xchg
fcoml
lods
out
mov
cld
in
inc
ljmp
cltd
add
mov
mov
outsb
cltd
push
mov
mov
lods
fistpl
pop
loope
hlt
pop
cli
rorb
fucomi
mov
mov
inc
inc
cmpsl
add
stos
lcall
rorb
and
test
mov
xchg
jmp
sbb
lcall
das
xor
scas
inc
adc
mov
jle
sbb
and
xchg
out
adcl
xchg
les
jo
into
push
popf
les
aaa
mov
jle
pop
fisttpl
jae
cltd
jg
shll
mov
jns
jns
aas
in
dec
jle
scas
and
jae
pop
pop
adc
ljmp
jo
pop
pop
scas
xchg
mov
adc
rcrb
ret
push
mov
adc
insb
pop
xor
psubusw
icebp
xor
insl
inc
sbb
mov
or
push
in
cmp
mov
jge
adc
rcrl
sbb
popa
popa
enter
popa
movsb
mov
xchg
outsb
lds
ror
xchg
sub
mov
sbb
xor
lods
loope
clc
aad
out
icebp
sub
dec
sub
add
pop
xor
jb
jbe
or
scas
push
and
or
or
iret
xor
int3
addr16
es
push
or
sub
push
loope
dec
xor
dec
inc
dec
imull
add
push
inc
stos
dec
loop
push
inc
inc
cld
ss
add
inc
push
push
cmp
pushf
shll
in
push
pop
push
aam
sbb
repnz
into
fdiv
lds
jge
mov
movsl
movsb
xor
andl
in
pop
mov
mov
aam
jp
pushf
cmp
dec
fisubs
lods
jmp
push
and
nop
mov
into
cwtl
inc
imul
dec
fsubl
repnz
inc
cmp
xlat
push
inc
pop
mov
sti
xor
movsb
or
fstps
push
or
rcrl
lds
add
cmc
lret
push
push
inc
adc
stc
test
mov
mov
cmpsl
cmpsl
ficomps
or
aaa
mov
xchg
add
push
popa
jb
mov
lret
outsl
subl
xchg
mov
mov
hlt
push
ret
daa
dec
jno
mov
lahf
mull
stos
cmp
mov
inc
sti
mov
add
push
inc
pop
adc
int3
das
inc
sbb
or
ds
imul
std
pushf
cld
xlat
mov
mov
inc
pop
and
push
push
aaa
add
xchg
and
mov
mov
xor
or
iret
xchg
cmpsl
and
sub
jl
leave
pusha
daa
sahf
ret
xchg
sub
fildl
lods
loopne
and
or
pop
repz
fdivrl
mov
and
es
jno
mov
push
lods
pushf
dec
adc
or
mov
divb
adc
out
pop
fildll
xor
add
testb
js
in
and
pop
daa
sahf
cmp
aam
push
sarb
out
std
jg
rorb
ret
cmp
add
sub
pop
and
rclb
pushf
fs
jp
mov
popa
xchg
adc
int
jmp
and
sub
ret
hlt
rol
dec
pusha
add
leave
xor
in
stos
pop
inc
inc
lds
cmc
jb
into
jno
push
xor
in
clc
clc
inc
sub
dec
loope
mov
push
jmp
mov
dec
fldenv
dec
in
imul
pop
dec
lea
push
sahf
dec
xchg
call
jbe
stc
push
das
mov
or
xor
je
pop
and
cmpsl
push
sbb
fcmovnbe
push
pop
pushf
icebp
es
jecxz
cmp
xchg
push
add
les
dec
jbe
lret
xchg
call
xor
push
leave
out
push
pop
testl
mov
jge
xchg
adc
fs
std
inc
dec
fs
cmc
aas
mov
pop
xlat
mov
sbb
mov
int3
arpl
mov
and
xor
gs
in
push
pusha
test
push
lea
lahf
mov
cmp
int
sahf
jns
jae
cmp
and
cmp
adcl
cwtl
test
neg
push
in
addr16
cltd
je
sti
out
lods
adc
pop
dec
pop
outsl
cli
jmp
es
mov
pop
movsb
pop
std
cmp
popf
pop
in
ja
mov
ret
imul
cli
push
ja
loope
mov
add
stos
jl
fstps
push
iret
inc
push
pop
es
addr16
sub
fidivl
sbb
dec
loop
test
ja
subl
push
hlt
mov
push
jae
xor
imul
sbb
inc
or
cwtl
pop
sbb
aas
loop
mov
clc
add
lcall
in
push
push
inc
jae
loopne
int3
adc
fisubrs
mov
xchg
iret
ret
jno
sbb
push
jge
cmp
push
dec
insl
mov
popf
inc
out
fisubl
je
in
xlat
push
shll
inc
cmpsl
nop
mov
push
dec
cmp
in
jg
inc
stos
mov
je
and
mov
dec
sbb
mov
scas
lds
int3
or
mov
pop
or
fadd
daa
push
mov
xor
scas
adc
sbb
cmp
cmpsl
sbb
lea
iret
test
dec
in
dec
sarl
cld
pop
mov
mov
inc
loope
out
cmpsb
out
jg
fucomp
icebp
mov
mov
jg
scas
mov
mov
ret
jl
xchg
test
cmovg
subb
adc
xchg
jb
xor
iret
cs
add
inc
psrad
sub
ljmp
jmp
ljmp
subb
cmp
or
pop
mov
cmovo
or
jns
or
cmp
sahf
insl
rcll
imul
fnsave
cmpsl
cs
pop
cltd
inc
nopl
push
int3
aaa
dec
data16
fldl
cmpsl
xchg
adc
lret
jno
scas
inc
dec
into
lods
mov
aam
ja
mov
mov
fldt
nop
sub
in
outsb
add
cli
sbb
push
mov
shl
and
xor
mov
fcmovbe
jno
jo
ds
adc
sbbb
call
stos
or
dec
adc
and
shrl
rcll
mov
sbb
je
push
addr16
movsb
pop
adc
cmp
sub
repnz
sub
mov
mov
mov
in
mov
push
xlat
cwtl
push
ljmp
dec
test
in
andb
rolb
in
jmp
loopne
jae
inc
mov
mov
mov
ljmp
jo
sti
je
lds
aad
shll
jge
icebp
mov
test
movsl
adc
aad
into
xor
fcomps
and
ja
sbbb
je
pop
cwtl
add
das
jg
ja
push
cltd
in
rcrb
std
cwtl
inc
xor
cmp
jecxz
les
adcl
mov
push
mov
das
in
sbb
icebp
outsb
inc
cld
shl
mov
aad
push
pop
adc
sti
dec
bound
xchg
addr16
and
sub
fbld
ja
cmpsb
mov
mov
cmp
or
cmp
mov
and
test
stos
jmp
fsubrl
cltd
cmc
xchg
out
mov
scas
les
das
ret
pop
mov
jns
shll
fsubrs
pop
or
sbb
jb
or
mov
pop
leave
cld
mov
mov
negb
push
xorb
jmp
lock
mov
iret
jecxz
pop
outsl
add
repnz
and
jle
adc
fsubrs
stos
and
or
icebp
pop
outsb
inc
outsb
mov
mov
loope
sbb
push
mov
mov
dec
test
and
addb
out
add
in
jecxz
push
lods
imul
mov
stos
inc
cs
lret
mov
rorl
push
jne
ljmp
xchg
in
das
les
test
cmp
xor
out
imul
test
fwait
xor
fst
clc
add
cmpb
cmpsb
cmp
out
jg
and
inc
fs
mov
test
movsb
jge
inc
sub
xchg
sub
jnp
or
xchg
xchg
jg
cs
cmp
cs
mov
mov
adc
cld
push
xchg
pop
imul
pop
enter
dec
sbb
mov
scas
jns
cs
push
lods
mov
jmp
add
adc
xor
jbe
loopew
cli
mov
gs
arpl
js
or
dec
cltd
sbbl
xchg
repnz
mov
mov
xor
adc
cwtl
push
pop
loop
mov
mov
mov
adc
xor
xor
add
ret
xchg
xor
dec
mov
cmpb
int3
adc
ds
pusha
jns
orl
addr16
shlb
xchg
loop
int
ljmp
mov
loope
ljmp
sbb
dec
add
das
fmul
bound
dec
adc
testl
jmp
aas
mov
and
test
lods
pop
sub
jno
dec
dec
pushf
dec
xor
inc
out
add
cli
cmp
jae
mov
mov
pushf
scas
xchg
lret
not
jno
or
cmp
addr16
pop
jbe
xchg
mov
mov
out
sarl
jp
push
aad
pop
cli
jne
insb
or
sbb
fcomps
or
mov
fildll
cli
sahf
add
outsl
mov
xchg
bound
rcrl
sbb
push
arpl
or
clc
push
test
roll
xchg
daa
stc
and
push
jmp
and
ljmp
outsl
or
dec
imul
fistps
xchg
fdivs
xchg
out
call
lret
adc
lods
xchg
inc
xor
xchg
jae
push
sub
stos
sbb
les
mov
mov
cmp
stc
sub
pop
inc
mov
and
aad
mov
ja
add
add
adc
jno
cmpsb
sub
clc
add
mov
mov
fisubl
xchg
jecxz
in
loop
arpl
mov
std
fstps
push
or
scas
xchg
add
add
sbb
cmp
out
jbe
nop
cmp
dec
or
dec
add
push
mov
mulb
ret
jae
sub
mov
imul
mov
push
lahf
stos
sub
enter
inc
mov
dec
pop
sub
popf
stc
fsub
pop
add
or
mov
dec
out
jmp
dec
outsb
aad
sbb
nop
shl
mov
inc
xchg
adc
mov
je
rorl
inc
xlat
mov
ds
fdiv
mov
and
jp
outsb
jp
fwait
jl
cwtl
mov
insb
repz
scas
and
rorl
push
popl
add
stc
or
lea
mov
inc
mov
std
adc
imul
jge
xor
sub
lods
mov
fidivl
mov
adc
dec
sbb
dec
jecxz
dec
pop
adc
out
test
es
gs
inc
dec
mov
dec
out
fldl
in
xchg
pop
pop
sub
mov
jge
mov
bound
mov
xchg
fsubl
scas
stos
sbb
mov
loopne
jae
fldenv
lods
mov
push
inc
jno
test
cmp
mov
incb
cld
rclb
xchg
add
int3
popa
add
sub
adc
dec
pushf
icebp
xor
pop
test
out
dec
arpl
ret
int3
fistpl
mov
out
mov
mov
push
sahf
inc
sub
jne
int3
daa
inc
daa
int3
popa
dec
lahf
data16
inc
enter
mov
mov
loope
dec
mov
dec
lods
xlat
stc
stos
rcrl
mov
push
clc
test
dec
lods
add
cmpl
add
xor
inc
and
sbbl
xchg
outsl
mov
sahf
sbb
outsl
jno
jge
jl
pop
arpl
add
inc
hlt
cmp
in
hlt
mov
or
cmp
ret
jp
add
or
test
stos
mov
jbe
jecxz
pop
mov
movsb
jle
sub
sbb
mov
imul
fdivl
pop
mov
mov
adc
fadds
sahf
jecxz
cmp
lds
popa
shll
fists
shrl
fistl
push
pushw
insb
xchg
jae
lea
push
or
cmp
add
mov
lods
ja
es
loopne
adc
sub
dec
pop
ljmp
mov
test
push
push
mov
add
fidivrs
xor
fadds
xlat
lret
jmp
dec
xor
adc
inc
addr16
cmp
cmp
jp
sbb
movsb
das
fiaddl
jns
js
mov
pusha
bound
aam
sub
repz
and
idivl
adc
in
mov
lret
iret
fsubs
pop
das
movsb
xchg
popa
jns
out
pop
push
call
scas
pop
outsl
add
sbb
test
lea
cwtl
pop
stos
in
mov
js
pushf
out
xchg
repz
insb
xchg
sbb
outsb
cmc
jmp
sbb
and
call
jmp
loop
mov
mov
andb
fdivrp
mov
push
fstl
dec
jecxz
arpl
jnp
in
loopne
sarl
add
sub
lret
xlat
or
mov
andl
push
jne
push
loope
dec
cli
mov
pop
pop
fwait
stos
in
in
lahf
mov
mov
pop
adc
xchg
push
out
arpl
xchg
daa
cmp
add
push
pop
and
fstps
int3
jg
repnz
cmp
jae
imul
into
imul
and
cmc
fisttpll
dec
mov
xchg
sbb
jge
jg
push
mov
loope
sarl
add
sbb
loope
out
sbb
in
adc
cmc
add
xchg
sub
ja
fsubrl
ss
out
in
jp
add
test
fucomp
orb
test
notl
out
or
and
cmpsl
fucomi
out
mov
fiadds
shlb
in
filds
test
and
gs
sbb
mov
mov
sbb
jle
jp
sub
cmp
jbe
mov
adc
sub
cs
mov
sbbb
inc
pushf
cwtl
aaa
fldt
cmp
lds
gs
rcll
iret
sbbb
or
fisubl
mov
lret
mov
and
or
cmpsl
and
loopne
inc
scas
dec
sub
lods
and
adc
fadds
dec
inc
jns
push
scas
inc
mov
cmpsl
out
xor
cmpsb
push
cmp
popf
push
push
test
jmp
mov
push
xor
or
fiaddl
popf
sub
cmp
in
pop
fdivrl
dec
shrl
imul
inc
dec
lret
out
lods
dec
mov
ret
mov
call
lods
xchg
inc
xchg
add
adc
je
pop
sub
mov
xchg
sbbb
sub
pop
xor
push
jmp
push
sbb
mov
xchg
dec
xchg
scas
dec
jno
addr16
jmp
insl
iret
push
out
jg
and
or
subl
mov
xchg
sub
mov
mov
inc
jmp
pop
gs
scas
inc
or
jbe
js
pop
cmpsl
scas
std
xlat
sub
ds
dec
pop
adc
idivb
pop
js
or
mov
and
cltd
mov
daa
sub
lahf
pop
dec
inc
into
mov
push
jbe
out
mov
icebp
addb
fs
hlt
dec
xor
aad
dec
mov
mov
lods
fdivrs
lret
xchg
dec
add
push
add
out
adc
cld
divl
in
push
in
call
jae
mov
xor
subb
sarl
fnsave
sub
adc
xchg
push
imull
lret
sub
mov
pop
mov
mov
mov
jae
fs
mov
xchg
dec
or
mov
outsl
adc
scas
mov
xchg
stos
sub
jae
cmp
mov
rorl
adc
ret
lcallw
pusha
push
mov
je
in
lods
inc
lret
lock
shll
ret
lds
or
test
sub
xchg
mov
xor
and
popa
movsl
icebp
bound
cmpb
out
pop
or
mov
stc
xchg
imul
xchg
rcrb
jge
ret
mov
inc
fsubr
ret
call
cmp
push
imul
push
aas
add
sub
and
mov
dec
dec
or
adc
inc
roll
fstps
push
mov
nop
mov
rcll
pusha
mov
sub
add
jbe
mov
insb
or
pusha
dec
xor
jne
loopne
jb,pt
pop
stos
push
into
sub
fdivrp
jb
push
mov
xchg
xchg
dec
lea
enter
frstor
sahf
xor
mov
push
xchg
scas
lahf
pop
adc
lods
rolb
loopw
sbb
decl
dec
popf
jg
push
ret
push
outsl
jns
push
xchg
add
pop
test
lret
jp
jecxz
add
and
sahf
pop
jae
sbb
xchg
movsb
in
int3
hlt
mov
jmp
enter
jle
rcll
add
xchg
gs
push
push
jno
pushf
lret
hlt
movsb
jmp
mov
mov
xlat
adc
xlat
push
es
fstpl
fwait
xor
mov
add
sub
push
cwtl
mov
jno
push
test
aad
fwait
push
test
dec
fcompl
xchg
xor
push
pusha
cmp
roll
jbe
mov
enter
jne
fs
cmp
pop
dec
jp
insl
imul
bound
add
mov
adc
aaa
inc
mov
cli
subl
inc
pop
adc
xor
scas
jno
dec
mov
clc
aam
stos
xchg
cmp
dec
hlt
sti
pop
das
mov
push
int3
ret
mov
aam
pop
mov
je
dec
lea
adc
mov
jae
and
roll
nop
xor
jb
jb
jge
nop
imul
test
and
adc
dec
pop
jno
scas
and
jbe
add
jno
sub
jge
adc
hlt
dec
cltd
jg
cwtl
aam
and
mulb
mov
mov
inc
xlat
add
addr16
pop
lcall
dec
cmp
mov
lret
sub
cmp
stc
scas
repz
dec
icebp
inc
push
fsubr
cmp
pop
icebp
pcmpgtw
andl
movsb
dec
lods
nop
cmc
pop
mov
movsb
xchg
call
inc
mov
pop
test
inc
in
mull
lds
enter
insl
std
pop
lret
jb
pop
mov
push
movsb
mov
adc
and
jp
scas
rcl
inc
cs
mov
clc
mov
mov
jb
and
lods
inc
stos
inc
xchg
sbb
jmp
adcl
cmp
outsl
push
mov
push
mov
lock
or
sub
mov
loopne
push
mov
jae
push
mov
int3
notl
repnz
fdivl
jge
push
xor
jle
negl
aam
loopne
in
mov
push
add
xchg
push
mov
xor
xor
lea
fistpl
setge
pop
and
leave
nop
sbb
sub
inc
mov
cmp
jecxz
sub
inc
add
adc
xor
sub
sub
pop
pop
movsl
or
fdivs
cli
push
mov
aam
insb
mov
push
int3
cmp
insl
lods
mov
cmpsb
scas
inc
push
xor
mov
out
cmp
xor
jno
mov
xor
scas
pop
out
or
test
xor
adcb
push
sar
mov
testl
fs
das
cmc
inc
adc
not
or
cmp
mov
icebp
addr16
add
xchg
pop
xlat
rorb
nop
std
xchg
ret
shll
adc
xchg
leave
or
jne
in
mov
inc
jp
xchg
loop
mov
in
out
outsb
cli
lds
lds
xor
lcall
outsb
imul
or
dec
mov
mov
aas
jl
cmpl
pusha
fldt
or
mov
ja
dec
sub
push
jmp
xchg
test
popf
mov
xor
mov
aaa
push
out
fs
adc
push
xchg
ds
hlt
aas
dec
pop
add
jo
fsubs
insl
fistpl
xor
iret
gs
add
xchg
mov
fistpl
out
shrb
and
xorb
cld
mov
es
rcll
std
jo
xor
jecxz
push
and
nopl
das
lea
or
xor
sub
ljmp
aas
add
hlt
out
and
mov
cmp
mov
add
push
sub
stc
je
data16
mov
jmp
leave
inc
loop
push
loopne
and
hlt
movsb
loop
subl
iret
mov
or
add
jl
mov
xor
loope
in
mov
mov
mov
ljmp
add
cltd
mov
test
mov
aas
loope
sub
popf
jb
enter
or
enter
movsl
cli
xchg
pop
mov
lcall
push
xor
sbb
flds
into
lea
pusha
jns
ss
mov
push
mov
adcb
cmp
sti
pop
stc
xor
xchg
add
lret
xlat
jmp
pushf
std
dec
xchg
and
push
ret
push
sbb
adc
jae
jae
pop
lods
bound
xor
jb
push
mov
movsl
pushf
lods
fisubrs
sub
js
inc
lahf
dec
sub
mov
fisttps
enter
add
or
push
enter
loop
insb
js
fiadds
xchg
stc
into
fidivrl
add
js
aas
sbb
mov
inc
xchg
xchg
jbe
sub
xor
jge
pop
sahf
icebp
and
lods
mov
popf
lods
or
dec
pop
mov
dec
out
pop
movsb
mov
pop
jge
test
out
jne
pop
les
fistpl
fidivl
pusha
mov
sarl
jns
cmp
loope
or
cmp
dec
rclb
pop
xchg
adc
leave
add
push
lret
bound
jle
sbb
adc
inc
or
mov
nop
pop
int3
packsswb
jbe
cmc
inc
les
loope
insl
dec
inc
adc
popa
mov
mov
ljmp
push
loop
inc
fnstsw
mov
cmpsl
loope
and
das
xabort
push
mov
ret
int
cmpsl
aas
stos
inc
pop
xchg
fstpl
mov
mov
stc
cli
cmpsb
notrack
sbb
mov
adc
xchg
pop
inc
mov
xor
in
push
dec
sbb
lea
mov
sbb
cwtl
adc
push
movsl
out
sub
mov
cmpsb
imul
fnstcw
or
adc
mov
mov
test
mov
mov
out
stos
cmpsl
dec
adc
pop
repnz
int
loopne
cmp
inc
mov
fwait
push
sbb
dec
adc
fldcw
lcall
push
xor
mov
pop
out
nop
aad
cmpsb
dec
xchg
insl
cmpsl
std
pop
jmp
int3
and
pusha
fmulp
jb
pushf
or
fmull
xor
out
ret
int3
arpl
push
sbb
fs
daa
and
daa
cmpsb
cmc
aad
stos
push
cmp
jne
sub
leave
mov
lcall
daa
xor
xor
loope
stc
xchg
outsl
add
lds
xor
push
mov
dec
dec
push
xchg
mov
jno,pt
push
or
mov
in
add
mov
fs
enter
fdivp
mov
xor
andb
pushf
into
invd
dec
inc
scas
adc
inc
cwtl
aad
xlat
lock
jmp
sub
xchg
sub
jbe
mov
sub
xchg
adc
out
inc
inc
nop
jb
cmp
ret
lods
fistps
stc
push
jne
and
xor
movsb
jl
fs
scas
push
aad
movb
and
in
inc
test
inc
sbb
or
pop
icebp
push
cmp
mov
xchg
loop
mov
mov
int3
nop
adc
js
jecxz
cltd
xor
pop
pop
jno
enter
notl
lods
adc
stos
adc
into
gs
stc
dec
into
mov
jnp
xor
adcb
add
movl
dec
in
lock
js
loop
add
add
pop
add
inc
mov
iret
data16
and
cmp
divb
cmc
adcl
lds
push
movsl
fdivl
push
loope
lea
repz
xor
sub
xor
movsl
and
mov
pop
ja
lret
xor
mov
sbb
mov
dec
sbbl
xchg
sub
movsl
and
nop
or
push
jl
sub
pop
out
cltd
dec
add
std
fisubl
data16
pop
outsb
test
pop
arpl
scas
push
and
cmpl
or
fcoms
pop
outsl
outsl
xchg
cmp
dec
and
into
lock
push
pop
jo
jo
sub
aam
pop
ljmp
xchg
mov
pop
cmpsb
push
ror
loopne
arpl
jge
push
outsb
or
cmpsl
mov
xor
or
mov
add
jns
das
or
mov
stos
mov
push
jbe
inc
mov
int3
movsl
pop
mov
push
in
fst
imul
sbb
jge
jne
or
push
nop
imul
shll
jmp
cmp
sbb
dec
movsb
xor
sub
rcrl
mov
cmp
leave
dec
sti
dec
and
sbb
push
inc
push
push
leave
insl
jg
inc
dec
mov
loope
outsb
cs
fnsave
cwtl
outsl
sbb
push
idivb
xorb
ss
jb
xchg
jno
mov
shl
nop
in
push
mov
lret
or
je
add
pushf
popa
sbb
push
shll
xor
xchg
hlt
lret
inc
add
gs
pop
pop
es
jae
inc
or
daa
fstl
add
lcall
clc
out
add
jl
stos
popf
jne
xor
sub
inc
mov
sub
stc
test
mov
push
xchg
imul
popf
lcall
inc
mov
les
mov
pusha
or
jecxz
sbb
and
movsl
xorb
cmpsl
cli
movsb
push
in
adc
inc
in
les
xor
xchg
mov
jge
pop
and
sub
sbb
lods
mov
aaa
and
pop
xor
ror
arpl
push
push
add
pop
addr16
rclb
and
es
mov
in
outsb
adc
testb
jbe
xor
lret
shll
mov
sub
imul
pusha
push
lahf
cmpsb
icebp
fistpl
or
sti
imul
jg
mov
pop
and
dec
sbb
dec
bound
dec
scas
push
ja
push
cmc
mov
adc
pop
dec
cmpsl
icebp
mov
inc
lahf
adc
sub
movsl
jmp
lds
loopne
mov
mov
xchg
ljmp
cmpb
test
or
push
cmp
test
iret
cwtl
fnstsw
loopne
push
jmp
shr
or
sbb
mov
fidivrl
push
dec
cmpsb
dec
popa
into
pushf
imul
int3
insl
sub
sbb
loope
mov
bound
sbb
jne
cmp
xchg
rcrl
cmp
jl
test
insl
jbe
jns
notl
xchg
xchg
add
dec
lock
addr16
in
mov
adc
jle
sub
sbb
shr
jo
pop
add
or
adc
cmp
test
pop
adc
adc
jg
popa
mov
stc
lcall
sbb
fwait
rclb
push
call
mov
stc
aaa
pop
inc
mov
fiadds
sti
xchg
mov
int
fsubrp
fsubl
xchg
ror
sub
mov
xchg
scas
bound
lods
sbbb
in
adc
aam
lahf
xor
mov
sbb
push
aam
pop
mov
push
int
clc
mov
dec
mov
sbb
jmp
mov
mov
sub
inc
in
ret
cld
mov
push
nop
sbb
mov
in
cwtl
mov
int
ss
adc
jne
mov
jl
repnz
cltd
fdiv
popf
or
mov
movsl
cmp
push
lock
pop
mov
call
call
xor
push
push
movsl
fldcw
cmpb
fbstp
out
xor
adc
and
pop
sahf
cmp
cmpsl
in
adc
push
inc
test
jno
jg
std
xchg
test
shl
leave
enter
pop
out
xchg
mov
pop
adc
inc
sti
xor
out
out
outsl
cmp
mov
jns
jno
sbb
int
mov
fstps
movsl
movsl
mov
aaa
xchg
lds
dec
jnp
lea
pushf
mov
pop
sub
test
fstpt
sbb
mov
inc
ljmp
out
mov
cmp
sub
jno
mov
int3
cli
test
int
es
jle
insb
in
scas
lods
sarl
push
fsubr
mov
xlat
imul
pop
shrb
xchg
sub
mov
shrb
mov
subb
xchg
mov
lret
in
push
in
mov
out
fwait
into
fsubl
add
mov
adc
lret
push
in
cmp
ficomps
shll
xor
icebp
jg
mov
jo
dec
add
mov
add
add
adc
add
dec
iret
mov
push
dec
filds
outsl
mov
shlb
outsl
adc
rcrl
and
and
in
cmpsl
adc
frstor
inc
aam
pop
mov
or
sbb
dec
in
jmp
mov
cmp
arpl
mov
mov
cmp
or
jo
xchg
outsb
jmp
sub
lds
jl
push
sub
jecxz
js
jmp
xchg
aam
ja
aad
xorb
cli
push
mov
sar
cmpsl
dec
test
mov
outsb
inc
pop
xchg
or
idivb
fs
jb
adc
std
lock
xchg
xor
xor
imul
xchg
test
sbb
dec
mov
clc
or
fildll
sub
out
test
ret
sbb
adc
aaa
lods
pop
mov
xlat
rcrb
push
dec
xor
cwtl
adcl
inc
je
movsb
insb
in
test
stc
jne
mov
insb
cmp
scas
xchg
bound
shll
jae
loopne
pop
mov
in
jl
mov
and
pop
addr16
sbb
or
push
orb
aaa
sbb
mov
adc
pop
in
cwtl
mov
shlb
lret
sub
lock
fmulp
mov
push
idivb
dec
notl
sub
jnp
in
lods
inc
adcl
push
sbb
pop
aaa
pusha
lds
fisubrs
cmp
out
mov
lret
xchg
cmp
pop
es
jnp
add
aaa
hlt
cmp
jge
lods
aaa
in
adc
add
bound
ret
pop
dec
fidivrl
lods
sbb
lods
mov
insb
mov
push
and
fdivrl
cwtl
xor
test
test
mov
push
sbb
add
aad
sub
jae
insl
sbb
sbb
push
or
xchg
add
sbb
test
lret
mov
fistl
push
icebp
out
mov
scas
xor
in
jno
or
pop
cmp
arpl
add
movsb
repnz
cmp
add
sub
ret
add
decb
sbb
mov
pop
xor
in
les
lret
fmul
fidivrs
push
mov
fsts
sbb
gs
lods
jmp
and
ret
adc
mov
imul
and
addr16
in
je
xor
jne
xor
ja
mov
adc
out
test
mov
push
es
jbe
rcll
pop
mov
lcall
add
cmp
aaa
sbb
pop
add
sub
stos
push
add
repnz
fnstcw
out
cli
adc
sub
mov
cvtpi2ps
dec
scas
dec
les
in
popw
mov
and
lock
xor
lock
insb
xchg
mov
cmp
jle
xor
insl
std
jb
jle
add
adc
adc
mov
inc
inc
dec
insb
mov
mov
cmp
insb
les
jl
aas
out
in
adc
addr16
adc
mov
adc
je
jns
cmp
es
stc
dec
cmpsb
dec
movsl
xor
test
shrb
xchg
inc
out
ljmp
fucom
cld
mov
mov
nop
daa
jo
jmp
xchg
aam
clc
mov
inc
jnp
aas
xchg
add
stos
fimull
push
in
stc
jp
ss
pop
in
js
sub
call
lcall
arpl
insb
das
es
mov
sar
jl
repnz
and
pop
xchg
push
cmp
stos
xor
dec
in
out
lret
ror
rorb
popa
fistpl
push
xchg
stos
std
out
test
xor
insl
lret
imul
mov
stc
rorl
and
mov
jnp
jns
cmp
mov
push
cmp
and
cli
lds
xchg
inc
fisubs
mov
test
jle
adc
pop
lods
mov
fucomi
cmpsb
jl
xlat
popa
pop
jnp
dec
sbb
mov
add
and
hlt
push
shl
sbb
mov
pop
lods
lret
mov
cmp
xchg
or
fsubs
push
test
ret
repz
mov
pop
orl
mov
negb
mov
pop
fsubs
loope
rolb
sub
jge
add
dec
pop
xchg
mov
out
cmp
sub
lcall
or
bound
popa
jecxz
push
imul
out
shll
lcall
cwtl
xor
cmpsb
cmc
std
addr16
inc
cli
movsl
in
xchg
cmpsb
dec
stc
mov
xchg
icebp
jp
adc
push
mov
out
push
dec
dec
addb
fdivr
sub
xchg
add
ljmp
mov
and
mov
and
push
pushf
ljmp
mov
ja
fcompl
mov
loopne
ret
xchg
pop
push
outsl
addr16
and
and
xlat
fsubs
aam
inc
jecxz
dec
inc
mov
jbe
mov
pusha
and
jmp
jns
fdivs
adc
or
jno
shrl
jnp
out
inc
imul
xor
push
std
sbb
adc
cmp
push
ret
shlb
and
jno
push
stos
xchg
jns
dec
mov
cli
push
fxch
and
sub
mov
push
push
fwait
and
popf
outsl
jb
clc
ds
lcall
and
arpl
fildll
popf
lds
mov
std
lret
push
fwait
pop
add
insb
nop
push
outsb
mov
das
icebp
xchg
into
dec
mov
lea
mov
xor
cmp
sub
dec
stos
jg
scas
fwait
jne
pop
cmpsl
cld
inc
sbb
jp
jae
ret
or
cmp
cmp
les
data16
pop
rorb
ffree
cwtl
xor
push
or
dec
xchg
imul
repnz
loop
sub
jp
lods
jae
mov
push
mov
cmpl
scas
dec
ffreep
xchg
inc
lret
ret
fcom
jo
fildll
dec
loop
pop
subb
jns
xchg
xchg
rcl
push
test
inc
xchg
xor
bound
outsl
jge
cmp
mov
cmp
adc
cmc
in
cld
dec
pop
cs
test
jl
das
test
int
aaa
mov
jg
cmp
negl
sbb
bound
es
mov
loopne
out
pop
fistps
push
mov
xchg
das
xchg
push
scas
mov
mov
int3
int3
sbb
push
fildll
adc
inc
xchg
test
mov
sti
push
fcompl
and
jae
scas
fidivs
jno
xchg
xchg
mov
mov
jno
call
ret
stos
adc
lds
nop
push
push
ret
mov
mov
aaa
movsl
fwait
mov
sbb
pop
xchg
sbb
cld
pop
jo
mov
js
jg
jbe
jl
ljmp
or
xchg
mov
or
scas
dec
add
aam
sbb
adc
push
xor
xchg
mov
sub
and
mov
push
and
xor
in
pop
mov
adc
mov
sbb
mov
idivl
outsl
dec
loop
fcmovnu
xor
fidivrl
int3
sbb
jb
insb
or
jo
ficompl
fs
cmc
mov
lock
faddp
pop
mov
incl
je
stos
ss
push
call
jle
leave
mov
fwait
sub
enter
push
pop
add
fs
scas
ret
jecxz
clc
fdivs
mov
addr16
mov
mov
pushf
jo
daa
sub
mov
push
push
ljmp
lock
pop
cmp
jge
popf
stos
inc
pop
fsubrp
or
test
pushf
inc
xorb
mov
push
sbb
aaa
push
adc
sub
and
ret
push
movsl
repz
xchg
push
sbb
aad
movsl
mov
inc
mov
push
pushf
xor
mov
inc
fdivrs
sub
sahf
popf
cmc
cmpsl
adc
incl
jl
adc
movb
dec
lcall
jbe
mov
xchg
adc
mov
inc
fisubrl
sbb
int3
xchg
pop
aaa
mov
push
dec
inc
pusha
xor
gs
dec
mov
add
setge
lcall
popa
sbbl
call
cli
xchg
psubd
mov
mov
push
sbb
and
dec
push
or
rorl
push
enter
ja
add
std
setle
dec
pop
dec
mov
out
pop
inc
dec
loopne
jne
popa
pop
fcomps
mov
ret
sub
aam
mov
daa
ret
lds
in
xchg
scas
fldl
sbb
sbb
ret
mov
leave
and
stos
cmpsl
mov
and
dec
out
inc
sub
ss
cmpsl
sbb
popf
sub
arpl
rcr
inc
push
or
cmp
int3
out
das
rorl
pop
lret
in
push
inc
sarl
lret
mov
sti
lahf
jl
sbb
push
js
mov
or
xchg
xor
je
int3
push
mov
cmc
ret
and
mov
mov
pop
call
inc
and
pop
out
in
ret
loopne
lret
cmc
aad
mov
aad
jno
xor
stc
orb
xor
jae
jmp
fisttpll
and
lea
iret
je
mov
add
fmul
sbb
mov
enter
and
hlt
mov
test
push
pcmpgtb
xchg
mov
cmp
mov
cmc
enter
adc
xchg
lret
les
into
mov
lret
mov
inc
jp
xchg
lcall
xchg
das
cli
sub
fwait
xor
inc
dec
add
clc
mov
pop
iret
ret
hlt
out
xchg
inc
std
roll
dec
cmp
cmpps
mov
push
pop
lsl
loop
cmp
out
cld
and
mov
sti
bound
pop
push
jp
aad
mov
inc
and
stc
add
pop
imul
mov
btr
es
cmpsb
jne
sbb
shlb
ss
subl
adc
rorb
xor
lock
popf
stos
stos
clc
in
jmp
fwait
xchg
repnz
imull
inc
addb
adc
push
out
add
jne
jo
xlat
repz
add
cmc
mov
and
cmp
jo
les
add
push
icebp
adc
or
in
jns
insl
cmp
xchg
xchg
jb
bound
ds
or
lcall
lcall
cmp
inc
jo
push
xlat
cmc
aaa
inc
testl
stos
dec
in
arpl
mov
fbstp
sub
cld
sarb
adc
stos
xlat
push
cltd
mov
or
hlt
xchg
inc
out
rcrb
rol
cmp
fcomip
fildll
fmull
xchg
jnp
aam
inc
xchg
or
dec
out
mov
rcl
jge
fnstenv
ja
jge
cmp
mov
test
cmpsl
pop
push
inc
aas
sbb
jne
jl
jmp
aaa
mov
in
decb
xor
jp
cmovp
fistps
and
mov
and
repnz
test
inc
orb
mov
fsubr
repz
adc
loope
cmp
ror
mov
xchg
mov
out
lret
pop
out
addl
inc
rolb
jle
fsubrs
test
inc
fwait
sub
inc
or
xchg
xor
orb
mov
sbb
adc
inc
movsb
mov
mov
insb
cmpsl
cmpsb
incb
ret
push
jp
imul
movsb
add
sbb
lcall
mov
out
cli
pop
out
popa
mov
fxch
jg
out
inc
xlat
push
fisubl
cmpsl
cwtl
das
sbb
shrl
sbb
imul
inc
ljmp
cmp
dec
dec
shrl
repnz
pop
lcall
mov
push
out
pop
xor
add
mov
scas
mov
lret
dec
add
movb
mov
insl
add
test
inc
push
and
je
lock
inc
std
test
cmpsb
jae
in
shrl
push
aaa
test
mov
pop
aam
mov
adc
pop
mov
mov
sbb
cmovne
jbe
add
pop
cmpb
and
and
iret
mov
test
jl
lret
sbb
push
inc
inc
notl
mov
dec
jbe
shlb
jo
in
stos
ret
stos
inc
add
mov
fstps
test
xor
in
out
sub
pop
cmp
pop
in
push
inc
mov
cmc
and
push
push
cmpsl
ret
inc
xchg
xchg
call
in
call
push
jnp
movsb
jecxz
js
mov
rcrb
adc
add
pop
mov
je
in
push
and
pop
xchg
sti
lret
xchg
inc
lcall
repz
cmp
js
pushf
idivl
push
loope
jbe
mov
sbb
pusha
int3
and
mov
push
out
pop
inc
out
rorl
aad
out
and
faddl
sti
out
pop
lahf
mov
and
cmp
xor
outsl
cmp
insb
and
insb
add
sub
data16
mov
push
jo
aas
jne
pop
sbbl
loope
imul
cmpsl
icebp
adc
pusha
subb
fsubs
sbb
repnz
test
inc
xlat
lods
jb
fldcw
inc
ljmp
sub
add
in
std
dec
push
or
mov
and
pop
leave
add
jae
cs
mov
lds
in
popa
cmp
roll
in
push
mov
push
sti
out
pop
jp
adc
dec
inc
adc
fwait
mov
leave
xchg
cmp
and
pop
pop
sbb
mulb
dec
jp
or
adc
cmp
lcall
adc
jns
subl
adc
lea
sub
xor
out
mov
insb
popa
push
mov
xchg
mov
or
sub
cmp
jmp
xchg
sub
gs
mov
les
lret
rclb
mov
imul
fmul
push
arpl
xor
ret
dec
inc
pusha
int
cmpsl
fmul
fmull
cmp
fwait
out
pop
pop
cmc
mov
push
stos
pop
jmp
mov
sbb
cs
out
cmp
out
dec
push
orb
popa
pop
loop
push
inc
jge
daa
adc
push
lods
dec
jo
and
xchg
icebp
cld
xchg
in
mov
sbb
xor
lret
bound
mov
andb
enter
pop
lods
sub
inc
sbb
loope
mov
push
repz
addr16
stos
jle
inc
cli
movsl
push
into
pop
sub
fisubs
xor
cli
or
cmp
stc
or
cmp
mov
test
and
and
or
push
mov
stos
mov
in
sar
dec
movsb
jge
lds
sub
cmp
mov
aaa
push
aam
test
bound
iret
ljmp
cmpsb
xchg
push
mov
adc
jge
and
or
es
mov
lods
inc
mov
dec
pushf
cli
out
loop
repnz
push
lds
pop
cmp
push
into
push
ret
cmpsl
push
enter
and
pusha
je
jno
jp
es
andl
mov
push
jp
data16
and
in
pop
dec
cltd
jno
daa
pop
lock
or
xchg
cs
cmp
cmp
fisubs
xor
lcall
cmpsl
stos
and
cmp
repz
xlat
test
in
xor
pusha
test
mov
ret
xor
pop
adc
xor
test
sbb
xor
nop
sahf
jecxz
pop
xchg
imul
icebp
xchg
add
sbb
and
inc
xchg
daa
cmp
call
or
mov
pop
hlt
pusha
inc
fsubrs
or
jnp
aam
jns
jl
pop
mov
pop
push
jae
jae
adcb
push
add
mov
push
lock
mov
mov
add
dec
loop
out
addb
or
aam
lea
pop
xor
push
mov
sbb
cwtl
mov
repnz
and
fldl
push
xchg
rcr
nop
dec
pop
ret
sti
filds
data16
add
jb
loopne
adc
nop
adc
inc
add
pop
scas
fs
pop
mov
pop
shrl
fucom
lahf
xchg
out
add
cmpsl
or
mov
pop
insl
dec
push
push
ss
mov
xchg
adc
cmc
mov
cmc
adc
cs
stos
cmp
repnz
incb
mov
push
xchg
addr16
adc
sub
jecxz
lea
xchg
sub
ja
jp
jnp
mov
inc
sbb
adcb
sbb
xor
jp
mov
mov
adc
aad
sbb
int
dec
mov
xchg
inc
fnstsw
mov
out
cmp
xchg
loopne
les
loopne
lahf
es
or
adc
arpl
xor
mov
ret
addr16
jne
and
decb
out
mov
cli
adc
mov
frstor
xchg
lods
xchg
in
aad
mov
mov
cmp
sub
leave
xchg
add
xchg
add
cmp
sbb
ret
and
rclb
mov
xor
push
decb
xchg
sub
jg
and
cmp
pop
sub
or
sahf
sbb
jne
fisubrl
lret
push
xchg
cmp
jne
mov
mov
testb
out
sub
cli
cmp
adcb
aad
test
daa
mov
movsl
repnz
mov
std
inc
test
aas
inc
push
jno
mov
push
jbe
jle
jb
mov
mov
and
inc
hlt
fnstcw
call
mov
or
movsl
cmp
mov
and
jge
shlb
js
dec
xchg
push
sub
push
out
push
add
neg
jno
jg
add
clc
jae
scas
fnsave
mov
leave
inc
jle
dec
push
fsubrl
adc
pop
popf
xor
daa
jl
out
xchg
sbb
xchg
xchg
or
data16
sub
test
xor
cltd
int
add
bound
ss
add
imul
dec
mov
rcll
mov
sub
aam
mov
add
jp
xor
movsl
xchg
lods
mov
jl
cmp
popf
sahf
sarb
mov
pop
cmpsl
xchg
xchg
push
fstps
cmp
adc
jbe
xchg
test
movsb
xchg
and
and
or
mov
lret
mov
sbb
dec
xchg
push
cmp
inc
in
add
aam
testb
xor
test
lods
ss
mov
or
adc
addr16
rorb
mov
in
pop
adc
stos
push
mov
adc
xor
inc
ljmp
fcmovb
mov
mov
or
cmp
sub
cld
ficompl
fstps
cmp
sub
sbb
addr16
mov
push
dec
xor
insl
icebp
adc
dec
cmc
inc
fbstp
fdivp
imul
jno
data16
xorb
dec
hlt
xchg
jmp
rorl
xchg
sti
jbe
cmpsl
or
insb
loopne
pop
sbbl
ljmp
in
lock
inc
jecxz
or
xchg
sub
push
incb
cwtl
inc
and
clc
fldl2e
push
in
sbb
daa
aam
xor
dec
lods
es
fucom
and
inc
cmp
stos
and
push
lret
out
and
mov
cmp
jb
inc
inc
jecxz
jno
adc
inc
sahf
and
lock
push
andb
call
cmp
outsb
cltd
sub
pop
inc
adc
or
lcall
sub
call
inc
fsubp
mov
arpl
mov
cmp
mov
fucomp
cmp
inc
das
lods
inc
shll
dec
cmpsl
rorl
push
jae
ror
data16
push
in
or
inc
inc
push
sub
scas
cld
mull
int
into
xorb
pusha
arpl
xor
lods
sti
inc
sbb
into
push
adc
fbstp
sti
movsb
inc
or
jae
mov
adc
xor
push
arpl
cltd
mov
out
xor
pop
jae
xchg
dec
jns
jb
aad
jge
inc
xlat
stos
popf
dec
bound
out
int
int3
shl
fisubs
xchg
jge
add
rclb
out
xchg
cmp
mov
dec
dec
pop
testl
add
fldcw
leave
mov
add
out
test
cli
inc
int
sbb
mov
ds
cmp
inc
jp
sti
lcall
cmp
out
out
sbb
iret
mov
jae
movsl
jns
inc
lock
sbb
push
jg
ja
insl
test
shrb
pushf
fnstenv
xchg
cld
ljmp
mov
lret
bound
sub
add
lea
insl
dec
pop
pop
negl
popa
test
shr
clc
push
into
data16
push
loopne
jbe
xchg
sbb
iret
pop
mov
nop
repnz
mov
lock
and
or
push
inc
adc
pop
jbe
gs
or
sub
push
cwtl
pop
mov
insb
cmpsl
mov
popf
or
sub
data16
inc
fnstcw
ja
negl
arpl
sub
je
fsubp
jle
into
sti
mov
lret
hlt
jb
insb
in
jmp
jle
scas
jge
shll
inc
add
lret
stos
mov
mov
jbe
lea
jmp
sub
sub
push
scas
mov
sbb
mov
mov
ss
or
mov
pop
ret
mov
xor
mov
mov
or
out
pop
pop
adc
dec
loopne
xor
xchg
or
repz
pop
inc
and
shrl
sbbb
add
leave
arpl
mov
xor
jg
pmulhw
pop
cmp
mov
push
pop
out
lea
ja
mov
andl
fldt
call
jle
outsl
ret
fstl
out
lods
mov
test
lret
les
imul
scas
std
xchg
incb
mov
cmc
rolb
push
adc
subl
push
xchg
inc
xchg
addr16
jg
fimuls
fs
mov
aad
jnp
pop
adc
mov
xchg
shr
xor
fwait
push
lock
push
or
dec
push
sti
mov
xchg
sub
mov
scas
dec
pop
add
jle
cmpsb
insb
inc
inc
insb
and
cmp
mov
outsb
sub
in
sbb
js
pop
jno
sti
xchg
push
mov
mov
push
out
in
pop
das
mov
lret
xchg
test
dec
flds
xlat
push
pop
push
shl
popl
cmp
mov
outsb
in
cmp
inc
pop
and
dec
stos
mov
daa
rcll
jmp
xlat
std
cltd
pop
out
mov
mov
inc
jne
sbb
fldenv
pop
scas
cmp
imul
pop
lcall
scas
xor
pop
mov
pop
in
push
cmp
outsb
adc
aaa
aad
pop
push
jg
push
test
add
inc
pop
dec
jecxz
enter
aas
push
inc
push
js
adc
push
dec
idivb
cmp
pop
frstor
ret
sbb
mov
jae
lock
arpl
mov
popf
lea
mov
or
jns
adc
sbb
mov
jl
mov
add
mov
fisttpl
adc
push
call
inc
popa
outsb
fmuls
scas
jg
loop
sub
inc
mov
mov
enter
repnz
push
js
insb
and
mov
fcmovnb
dec
dec
cmp
and
gs
jb
out
adc
ret
jns
sahf
call
and
sbb
xchg
dec
cmp
mov
les
or
enter
xchg
stos
mov
nop
fsts
xor
jo
pop
das
lea
mov
test
push
out
fwait
mov
cmp
push
xchg
xor
ja
cmp
pop
xchg
in
sbb
push
jecxz
or
aas
adc
inc
pusha
dec
jmp
or
jno
cmp
and
sarl
push
or
mov
out
nop
mov
jle,pn
lea
pop
cmp
xchg
pop
dec
dec
mov
pop
fs
mov
bound
xchg
popf
pop
hlt
dec
mov
xchg
loopne
xchg
jo
add
cmpsb
mov
pop
mov
outsb
jp
pushf
xor
in
call
pusha
pop
pop
fcmovnb
subb
cmp
movsl
pusha
mov
fmulp
bound
add
ds
jmp
pop
xlat
ficoms
or
mov
or
pop
cmpsl
or
jmp
notb
pushf
xor
cmp
xchg
popf
cmp
pop
mov
adc
add
push
test
enter
dec
adc
aad
incl
popa
mov
dec
hlt
push
out
xlat
insb
fadd
or
xor
push
leave
mov
xor
lods
movsl
pusha
fistl
xchg
dec
mov
push
lods
das
fucom
mov
xor
mov
test
mov
mov
fisubrs
mov
pop
jp
sub
andl
fisttpl
ja
mov
test
repz
clc
or
rol
push
cld
cmp
fstl
dec
or
push
fstenv
hlt
fwait
adc
test
sub
adc
ret
fwait
int
in
cli
sub
xchg
fs
les
jle
and
sbb
nop
adc
leave
nop
decb
push
xchg
dec
adc
jmp
jmp
and
adc
test
push
gs
mov
pop
sahf
les
cli
fcomps
sub
cmc
daa
bound
loop
mov
mov
ja
inc
ret
call
push
outsl
push
mov
lea
mov
jg
int
add
jo
fdivrs
orb
cmp
push
jno
dec
test
pop
outsb
test
ret
outsb
hlt
loop
enter
lods
and
mov
repz
xchg
pop
adc
mov
in
je
sbb
inc
jbe
mov
cmp
ret
lahf
xchg
cmpsl
call
movsb
sub
push
pop
push
data16
mov
jg
dec
cld
orl
push
inc
adc
push
in
dec
lahf
jl
mov
in
xor
int
mov
fisubrs
adc
loope
call
mov
cmpb
movsb
ja
mov
ret
fwait
leave
cwtl
rorl
or
lea
mov
xor
lret
in
sbbl
add
loope
scas
shrb
inc
mov
fistpl
pop
inc
fldl
mov
and
cs
out
insl
dec
int3
dec
xor
and
call
cld
test
incb
cmpsl
shll
inc
repz
push
mov
fidivrs
lods
sar
sti
xor
xor
ret
adc
or
das
cmp
jns
faddl
clc
icebp
sub
lods
testb
lahf
out
mov
or
xchg
das
or
inc
sub
icebp
jo
push
std
jmp
lret
sub
jl
ret
pop
jp
js
fisttpll
inc
adc
jmp
pop
lods
loopne
mov
cmpsb
stos
aaa
iret
add
notb
jnp
adc
adc
das
cmp
jl
clc
or
dec
fcoml
iret
filds
mov
cmp
dec
ficompl
add
insl
fcmove
mov
xor
repz
popf
dec
push
shlb
mov
inc
jno
sub
test
push
mov
nop
pop
adc
insl
sbbb
sahf
test
arpl
aaa
repz
arpl
mov
mov
and
or
xor
cmp
adcb
jnp
aas
xor
xchg
cmc
stos
mov
push
cltd
jle
aaa
or
fnstenv
inc
cmp
icebp
mov
mov
add
and
xor
in
cmp
jb
cmp
shr
ret
outsl
fisttps
mov
mov
sub
sub
inc
fldl
push
or
sti
xchg
js
stos
and
adcb
leave
mov
pop
xchg
ss
push
jns
xor
inc
mov
mov
jbe
aaa
into
data16
push
cmp
daa
pop
mov
sti
mov
ffreep
xchg
add
pusha
xor
loope
out
bound
mov
jno
fnstenv
push
fs
leave
jno
inc
sti
dec
fidivrl
call
pop
adc
fdivr
inc
jne
hlt
adc
fsubrs
insl
fcomp
dec
fcomps
fs
daa
outsl
push
xor
notb
add
js
pop
call
xchg
and
fs
jg
lahf
rclb
dec
mov
and
jecxz
sub
movsl
pop
mov
mov
push
int
add
mov
ret
push
je
ja
negl
xchg
dec
jge
lds
pop
adc
sbb
movsl
and
pop
push
sbb
pop
and
rorl
std
sub
dec
sbb
inc
loope
mov
fs
cmpsl
ds
jecxz
sub
daa
cmp
xor
cltd
xor
faddl
mov
add
aam
repz
loop
xor
xchg
xchg
cmp
xor
out
add
sbb
sahf
out
xchg
sbb
js
jno
andb
cs
incl
popf
jne
dec
jle
pushf
push
subl
or
pop
ret
repnz
icebp
xchg
sub
mov
das
fidivl
roll
mov
mov
in
sti
cli
arpl
pop
lret
push
test
push
xor
mov
xchg
daa
and
pop
mov
push
jmp
add
out
or
xchg
cmc
test
push
inc
imull
push
test
insl
movsb
cmp
cltd
cmpsl
xor
and
leave
xlat
mov
movsl
sbb
roll
orb
lahf
hlt
mov
addr16
scas
das
mov
ret
std
jne
mov
test
push
and
mov
pop
mov
test
push
mov
and
call
push
insl
and
cltd
mov
mov
jle
int
jp
xlat
xchg
pusha
cmpsb
cmp
mov
shll
mov
jbe
divl
ja
pop
cmp
and
sahf
cmpsb
les
mov
hlt
inc
es
add
sub
dec
inc
push
movsl
cmpsl
outsb
cmpsl
aas
mov
les
mov
stos
inc
arpl
fldl
mov
sbb
and
sub
mov
and
movsb
inc
jno
jne
xchg
out
add
xor
stos
inc
and
push
xor
adc
and
lds
push
inc
xor
repz
subb
mov
loop
lock
mov
loop
inc
popf
imul
fisubrs
inc
xor
ja
and
js
cli
push
mov
lcall
outsl
cmp
push
mov
sbb
aas
pop
notb
jge
mov
xchg
repnz
sbb
sbb
ret
popa
pop
jg
jmp
loop
dec
push
call
aam
dec
pop
push
loope
mov
lret
test
add
mov
jne
jo
pop
lret
mov
mov
rcrb
pop
loope
xchg
leave
cmpsl
pop
xor
inc
data16
and
insl
add
sub
mov
enter
leave
ds
push
leave
repnz
pmullw
inc
int3
jo
sub
ss
and
mov
pushf
data16
inc
pop
test
mov
mov
add
popf
pop
sbb
out
js
imul
imul
mov
fxch
or
add
mov
xor
mov
inc
pusha
cli
out
mov
pop
sub
pop
mov
jge
adc
enter
or
inc
mov
mov
mov
sub
sbb
aam
sahf
ret
push
in
hlt
shlb
sub
fstps
or
adc
scas
xchg
cmp
sbb
push
ret
cmp
or
in
jne
outsl
pop
ficoml
inc
test
mov
mov
inc
xchg
xor
loope
or
xchg
mov
pop
fnstcw
jg
cmp
and
dec
pop
dec
and
xchg
xchg
mov
xchg
mov
test
mov
jns
test
inc
xchg
mov
insl
adc
ss
fstl
iret
jmp
or
cmp
xchg
push
push
jns
xchg
add
lcall
mov
fisttpll
pop
imul
ret
inc
inc
mov
lods
cwtl
or
je
sbb
in
fs
shr
xchg
xchg
mov
aaa
outsb
dec
jmp
pop
in
out
aas
addb
mov
stos
adc
js
inc
xlat
int3
cmc
jns
cmc
pop
popf
push
pop
push
jb
out
arpl
popa
or
addr16
xchg
adc
in
fsubrs
stc
int
adc
rol
cwtl
sbb
ficoms
mov
or
fsubs
daa
pop
pop
dec
mov
cli
sahf
sub
adc
xor
or
pusha
fisubl
inc
divb
pushf
fs
stos
dec
movsb
jae
jbe
mov
mov
jg
jl
push
sub
push
stos
loope
push
stos
sbbl
cmpsb
sub
xlat
push
and
mov
andl
cmp
push
fs
mov
sahf
sarb
iret
cmp
push
and
push
adc
dec
lahf
xchg
xor
jp
cwtl
inc
adc
fwait
and
inc
mov
mov
xchg
dec
mov
movsl
jo
and
adc
cmp
jle
enter
int3
imul
cmp
in
push
cmpsb
dec
sbb
shlb
push
ds
push
sub
xor
loop
arpl
stos
pop
mov
jp
jae
push
imul
sub
fwait
mov
pop
subl
les
scas
push
outsb
loope
test
mov
jns
je
aam
cs
pop
mull
lret
iret
sbb
loope
insb
adc
inc
repz
inc
out
cli
jg
int3
arpl
jmp
or
pop
fs
pop
into
cli
insb
sub
add
mov
xlat
lods
jg
push
aaa
push
inc
mov
cwtl
or
cmpsl
outsb
jle
push
push
js
sarl
and
pop
pop
enter
rcl
cs
push
xor
filds
mov
data16
loopne
cli
int3
or
mov
sbb
push
jp
jmp
mov
jno
popf
ror
mov
stos
outsl
add
mov
shll
pop
jmp
cmp
mov
aam
or
lods
push
lea
add
inc
std
push
jp
adc
mov
sbb
popl
loop
mov
jmp
mov
aas
icebp
sti
mov
ret
adc
pusha
xchg
xor
xchg
outsl
loop
ret
roll
push
jge
mov
les
arpl
enter
jbe
invd
out
pushf
lods
inc
mov
mov
or
call
or
popaw
mov
push
adc
das
add
pop
cltd
push
jg
outsl
mov
sahf
sub
sub
sub
push
call
aad
loopne
es
mov
std
lock
cmc
sbb
pop
jecxz
adc
push
outsl
in
sbb
insl
jle
imull
nop
dec
pop
mov
aas
ds
or
lds
lea
aad
movsb
in
lea
lods
cmpl
cmp
mov
call
and
push
cld
test
stos
cmovne
mov
loope
das
adc
add
and
cmpsb
out
fsubs
inc
or
xor
pop
mov
xchg
xor
lcall
frstor
xchg
scas
and
cltd
inc
popa
cmpl
dec
hlt
jns
or
pushw
sbbl
cmp
hlt
add
adc
xchg
mov
nop
lcall
mov
xchg
stos
jo
cmp
mov
adc
daa
movsl
shr
lcall
add
xchg
mov
fcomps
ja
mov
lret
inc
mov
sub
arpl
mov
ja
pop
test
dec
in
subl
mov
sub
mov
jle
sub
lds
mov
mov
adc
ljmp
mov
push
mov
mov
push
pop
adc
mov
cmp
mov
fadds
xlat
outsl
stos
popl
in
push
mov
jg
lods
mov
lea
stos
xchg
mov
and
fildl
jns
add
es
xor
out
sbb
shlb
insb
fucomip
and
mov
or
pop
mov
xor
ss
cmp
dec
push
jmp
or
lcall
sub
std
in
sbbb
subb
in
push
mov
fidivs
cmc
jl
dec
inc
pop
xchg
adc
outsl
subl
inc
jbe
pop
shl
xor
fs
jg
int3
inc
test
cmp
pop
clc
lret
sbb
fimull
inc
push
aaa
addb
pop
cltd
shll
sbb
orl
xlat
mov
jg
outsl
ss
fdivr
or
xor
outsb
test
cwtl
mov
cwtl
mov
dec
stc
fcoms
cmc
sub
call
lods
add
sub
sub
mov
push
push
rcl
mov
pop
inc
dec
mov
jae
fbstp
mov
push
mov
adc
stc
xchg
das
pop
out
add
std
call
scas
pop
lock
and
pop
push
imul
stos
add
shll
out
push
lds
push
test
pop
sti
add
xor
pop
jo
fdivrs
in
cmp
adc
xchg
sbb
cmp
loopne
fstpt
lock
cmp
push
in
scas
sub
cmp
fmull
out
jnp
and
lret
xchg
addr16
xlat
xor
jle
daa
pop
or
sar
mov
lods
and
jb
cld
mov
ss
scas
lret
inc
stos
sub
adc
push
scas
daa
cmp
push
sbb
mov
jnp
loope
cld
pop
sub
rcrl
out
dec
and
or
out
leave
pop
jb
dec
cmp
aad
pop
adc
fdivs
inc
cmpsb
mov
shlb
gs
add
call
ljmp
insb
jno
mov
xchg
std
pusha
add
lock
hlt
lods
xor
popl
push
data16
and
and
push
mov
decl
bound
mov
insl
in
outsl
dec
mov
mov
das
mov
test
mov
imul
mov
cmc
pop
stos
out
pop
scas
pop
shll
add
addr16
sahf
je
shll
imul
cmp
lods
mov
lods
mov
arpl
or
pusha
lret
mov
addr16
inc
add
mov
insl
insb
add
add
icebp
sbb
xchg
xor
push
xor
lcall
sbb
stos
push
xor
aas
insb
sti
adc
fdiv
mov
lock
push
xchg
dec
imul
mov
test
in
mov
cmp
mov
sbb
lahf
imull
sub
cmpsl
sub
cwtl
ror
jno
sbb
ds
cmpsl
dec
cs
pusha
insb
sub
imul
ret
mov
and
ja
lods
adc
mov
pop
lods
mov
loopne
or
lods
sbb
mov
xchg
popa
sub
sub
dec
out
inc
in
pusha
imul
fwait
xchg
cmp
mov
dec
es
or
std
iret
cltd
sub
jl
xchg
push
jl
mov
push
mov
mov
stos
dec
mov
aam
outsb
shl
adc
mov
les
int
pop
in
insl
out
dec
pop
and
or
xchg
les
test
add
mov
cmp
pop
or
cmp
dec
push
cwtl
fsubr
xchg
mov
dec
xchg
faddl
pop
not
inc
cli
jecxz
hlt
jge
ret
jne
pop
pop
repnz
sub
adc
test
fisttpl
ljmp
hlt
or
cmp
push
sub
rolb
btr
in
in
das
dec
jne
adc
movl
dec
fldcw
mov
mov
pushf
cmp
sbb
je
fisttpl
lret
leave
cmp
cmp
pop
pop
dec
fimuls
cs
sahf
pop
popf
inc
cmc
ljmp
lds
arpl
setle
int3
ljmp
ljmp
xor
stos
xchg
rcl
inc
xor
dec
jb
lods
push
jo
jmp
dec
jle
ret
mov
test
push
lods
dec
fbld
xchg
sub
mov
data16
outsl
orl
push
jno
lahf
mov
dec
int3
or
in
gs
aad
pop
imul
cmpsb
mov
push
mov
pop
and
loopne
data16
jecxz
aam
adc
test
xchg
aas
int3
fcoml
add
mov
mov
fwait
cmpsl
lahf
ret
dec
jmp
jg
test
jo
dec
fistpll
pop
test
out
pop
mov
ss
addr16
xor
test
xchg
test
lret
jne
icebp
xchg
sti
mov
sbb
push
cltd
mov
jmp
sti
test
lahf
xor
out
mov
popa
cmpsl
cmp
sbb
out
mov
cmpsb
and
pop
dec
mov
mov
mov
xchg
mov
pop
push
fldcw
into
pop
cmc
ret
pop
out
repnz
jl
push
outsl
pop
push
and
fwait
repnz
push
sbb
xlat
sub
movl
or
dec
mov
jg
mov
sub
lret
sub
repnz
dec
mov
mov
rcll
shrl
sbb
mov
push
mov
fdivs
sbb
mov
hlt
sti
jne
jnp
icebp
add
repnz
call
pop
imul
mov
sahf
mov
cld
fbstp
dec
loopne
dec
subb
sarb
sub
pop
repnz
dec
xchg
xchg
push
jns
mov
cmp
out
xor
shrb
sub
push
leave
das
jbe
inc
push
cli
fcomps
mov
pop
std
dec
mov
std
adc
outsl
inc
push
mov
inc
dec
mov
jl
mov
addl
push
orb
mov
daa
pop
cld
stos
in
mov
dec
sbb
mov
cs
in
leave
mov
mov
mov
adc
arpl
inc
jp
and
rcrl
leave
test
fs
xchg
push
pop
out
repz
xlat
adc
sub
test
xchg
adc
adc
inc
popf
mov
adc
mov
jno
clc
stos
enter
cld
add
rol
int3
dec
jno
inc
retw
lahf
jg
icebp
cld
xchg
mov
outsb
cmp
into
or
shl
and
adc
fcom
aaa
or
cmp
pop
mov
aas
in
lods
mov
iret
mov
and
jb
aam
cwtl
mov
imul
int3
mov
je
sub
ljmp
test
je
aaa
cmpsb
fnstsw
lret
cwtl
aaa
mov
mov
out
cmp
dec
jl
cltd
lods
outsl
push
jp
sbb
jno
mov
clc
popl
pop
mov
shl
mov
into
mulb
and
lods
ljmp
call
xchg
popa
push
xchg
xchg
sahf
xor
lret
and
mov
mov
sub
sub
leave
hlt
mov
push
cmc
in
daa
jae
cmp
daa
jp
xchg
pushf
and
loop
cmp
cs
xor
pop
dec
add
call
bnd
test
test
and
scas
and
push
jle
cwtl
test
daa
loope
and
cmp
mov
aam
sarb
adc
jge
scas
mov
cmpsl
shld
xchg
add
gs
dec
and
aad
push
sbb
arpl
test
cs
pminub
push
out
mov
test
scas
pop
cmc
scas
call
loop
sahf
push
aam
jl
stos
cld
clc
or
int
cmp
pushf
in
sbb
fiaddl
dec
push
cltd
shrb
sub
mov
jno
popf
in
aad
cmpps
fdivrs
adc
cmpsl
cwtl
xor
dec
mov
loop
mov
sub
imul
dec
add
es
fisttps
mov
je
push
fbld
xor
sar
insb
adc
sbb
cld
xchg
call
int
leave
out
jecxz
lods
pop
push
call
int3
xchg
outsl
pop
jo
jnp
or
xchg
rcrb
push
cltd
mov
cmpl
ds
mov
negb
pop
push
sub
repz
movsb
cmp
jb
jg
adc
mov
mov
or
mov
arpl
mov
and
inc
or
enter
dec
stc
lock
jbe
mov
test
daa
out
or
push
int
xchg
sbb
mov
xor
mov
iret
in
ret
sub
fistl
movsb
loopne
iret
jl
pop
pop
dec
pop
jne
or
cmp
fdivrs
push
lcall
cwtl
adc
fst
insl
or
or
lahf
mov
dec
dec
lret
rclb
lret
jns
inc
cltd
je
adc
mov
fidivrl
adc
and
sbb
out
cmpl
inc
cmc
mov
test
lock
pop
cmpsb
or
sarb
jns
add
fisubl
addr16
push
jle
shll
adc
mov
sub
adc
in
test
out
jo
test
dec
adc
pop
adc
mov
gs
fdivrp
xor
fs
scas
call
mov
call
insl
xor
or
sub
iret
js
subb
stos
loope
mov
push
xchg
push
xor
mov
orl
dec
popa
in
pop
jp
pop
add
movsl
pushf
clc
and
test
shrb
cmp
mov
push
call
and
repz
subl
cmpsb
insl
dec
pusha
dec
leave
mov
rclb
les
mull
jae
pop
inc
or
adc
sub
int3
fs
hlt
mov
outsl
push
in
xchg
add
test
fistpl
in
xor
icebp
or
inc
jae
ja
mov
loop
push
add
cmpsl
xor
movsb
xchg
sbb
jbe
xchg
pop
lods
mov
sub
std
xchg
sub
repz
xlat
mov
shl
clc
cmpsl
out
cmp
movsb
mov
repnz
pop
cltd
jb
xchg
loope
outsl
call
mov
cmc
adc
fsubp
mov
addb
fsubp
aas
push
lods
jo
loopne
stc
sbb
mov
test
inc
push
mov
test
mov
cmp
movsl
mov
lret
cmp
insb
jb
rolb
dec
dec
fisttpl
or
and
loop
test
cltd
xor
push
inc
repnz
mov
stc
idivl
scas
sbb
and
cmp
insl
xchg
test
lahf
fcmovu
mov
and
cmp
daa
mov
dec
out
testb
mov
and
jae
flds
xchg
int
add
xchg
insb
stos
sbb
push
test
pop
fcomp
insb
ret
sub
push
jmp
cli
cmp
jp
mov
testl
call
stos
dec
int
in
xor
push
aaa
stos
or
jne
call
or
adc
test
sysenter
push
loope
fcoml
out
or
and
mov
jb
cmp
enter
mov
insb
ret
sub
hlt
xlat
dec
pop
sbbl
xor
sub
mov
ret
sbb
fadds
jge
xchg
clc
stos
pop
lock
mov
test
mov
gs
pop
shll
and
std
int
fsqrt
xchg
mov
cmc
fisubl
loope,pt
mov
fiadds
in
cmpsl
fistpl
sub
push
dec
add
shrl
or
incl
and
add
pop
jle
mov
adcb
testb
mov
int
jmp
aad
xor
dec
stc
popf
in
stc
fs
popf
xor
sti
mov
fstpt
es
dec
add
lods
inc
mov
fmul
sub
add
jl
xchg
sub
test
mov
xor
adc
inc
in
xor
loope
mov
out
sbb
pop
lds
cmp
out
pop
cmp
rol
mov
dec
jns
imul
pushf
test
xchg
or
loop
int3
sub
xlat
cmp
pop
cmp
adc
idivl
and
stos
jne
sbbl
xchg
jle
hlt
xor
cmp
mov
shll
cld
shlb
fxch
leave
pusha
dec
jp
cmp
jge
popf
imul
or
lret
and
stc
push
adc
xchg
push
push
cmp
mov
sar
sub
add
pop
shrl
mov
dec
in
mov
mov
xor
movl
dec
inc
mov
fs
add
mov
mov
cmp
testl
jge
andnps
roll
push
shlb
pop
aam
xor
into
cld
push
sbb
inc
mov
lret
flds
or
mov
pop
mov
jge
insb
push
xchg
pop
adc
mov
push
inc
push
jbe
js
int
je
lods
jbe
fwait
addr16
jge
cmc
jmp
daa
cmp
push
in
adc
scas
xchg
xor
test
mov
stos
fwait
push
call
int3
sub
test
mov
cmp
xchg
fs
mov
outsl
jecxz
in
jno
dec
imul
or
xlat
sub
sbb
mov
cwtl
cwtl
or
cltd
mov
push
fbld
or
daa
xchg
fs
push
in
stos
xchg
inc
fdivl
movsl
stos
cld
xchg
arpl
test
inc
fsubrs
cmpsl
cmpsl
out
and
stc
jno
loop
or
push
xor
mov
clc
cwtl
adc
add
add
mov
jle
and
cli
xchg
add
lods
sbb
fists
loope
push
jae
push
push
movsl
cmp
jae
sti
imulb
pop
mov
out
out
push
xlat
sahf
rcrl
enter
add
dec
out
enter
xor
es
xchg
xor
inc
bound
xchg
xor
stc
out
loop
daa
shrb
dec
lahf
cmp
mov
and
or
or
xchg
jae
and
mov
jge
push
sub
lcall
mov
imul
fdivrs
mov
cmp
fcmovne
and
sbb
mov
stos
sarl
jns
or
mov
adc
push
data16
fcoms
lcall
scas
popa
aam
or
xor
leave
dec
add
push
aam
fiaddl
test
dec
mov
pop
std
popa
lret
xor
stos
push
push
xor
fistpll
int3
adc
push
insl
popf
outsb
cmc
int3
cmpsb
sbb
sub
aas
rorl
mov
sbb
punpckhdq
mov
arpl
jnp
pusha
jle
or
xor
push
aam
mov
shl
enter
xchg
or
fwait
pop
ret
adc
out
sbb
popa
or
adc
jp
jl
and
add
sub
jo
dec
insl
push
mov
hlt
pusha
push
enter
iret
add
or
xchg
pop
cmp
sbb
pop
cld
dec
mov
test
sub
mov
xchg
leave
jmp
xchg
cmpsl
mov
pop
icebp
test
lock
fs
subl
push
imul
jge
popa
cmp
mov
adc
fldenv
add
roll
std
mov
repz
popf
hlt
mov
jnp
pop
std
or
pop
mov
pop
mov
pop
repnz
pop
stos
ret
iret
and
push
lock
sub
cmp
push
jle
jl
sub
repnz
cmp
dec
push
js
mov
subb
jo
adc
clc
push
cmp
adcb
fnstenv
dec
sub
xor
mov
nop
xor
sbb
sbb
jns
pop
and
enter
mov
lods
dec
movsb
jmp
inc
sub
xchg
xchg
testb
jecxz
imul
mov
adcl
sbb
pusha
sbb
loopne
inc
ja
jbe
mov
pop
mov
rorl
or
pop
hlt
xchg
mov
jnp
mov
lock
jne
push
lods
push
pop
shrb
jbe
xor
clc
shll
inc
xor
lock
rcll
sub
aaa
push
test
jb
xor
cmpb
mov
nop
imul
dec
lock
mov
push
stos
push
jnp
sub
pusha
mov
mov
data16
sahf
sbb
inc
inc
in
leave
sbb
into
and
push
test
push
stc
push
xlat
nop
imul
loopne
dec
add
aas
adc
jbe
sub
fwait
jo
xchg
mov
xlat
testl
shrl
stc
jo
daa
lds
jmp
jae
jno
and
mov
jns
jnp
loope
xchg
push
into
push
arpl
inc
notl
and
imul
xchg
jp
sahf
dec
push
jg
stos
xchg
mov
repnz
sbb
inc
scas
push
mov
lret
and
cld
and
ficoms
les
mov
pop
bound
mov
jns
push
call
add
pop
jmp
xor
adc
mov
dec
loope
adc
je
call
push
xor
dec
jecxz
dec
hlt
mov
shrl
aam
daa
cld
xchg
mov
gs
adc
add
jno
push
les
xchg
xchg
movsb
jge
xor
cmp
sub
mov
push
movsl
inc
popf
mov
shrl
das
mov
xchg
mov
adc
jge
in
loope
jno
enter
dec
pop
push
stos
cltd
arpl
les
xchg
push
dec
fs
into
enter
aad
sub
and
iret
cmpsb
mov
mov
pop
adc
rcl
imul
cmp
jae
repnz
mov
rep
shll
subl
div
mov
imul
xor
pushf
cmp
orb
or
cwtl
mov
adc
scas
lret
call
adc
mov
inc
sbb
mov
cwtl
popa
cmp
mov
sub
add
loope
nop
aaa
stos
dec
scas
push
int3
jp
dec
iret
into
fwait
push
repnz
and
sbb
cwtl
lcall
sahf
lds
insl
push
jmp
scas
xchg
aam
ss
cmp
xchg
lret
jge
cmp
sahf
push
aam
cmpsb
sti
adc
je
cmp
icebp
push
inc
stc
jae
xchg
popw
scas
pop
addl
inc
xchg
shlb
gs
pop
add
fsts
mov
filds
repz
andb
push
push
shll
dec
or
jb
dec
ficomps
or
cmpsb
mov
imul
imul
jmp
stc
in
adc
inc
and
cmp
cmpsb
mov
fcoms
aad
cmpsb
gs
jae,pn
outsb
jle
xchg
mov
jbe
sbbl
jmp
push
stos
jne
adc
imul
sub
test
dec
cmp
call
pop
adc
decb
cmp
mov
movsl
popa
pusha
stc
sub
inc
ret
jge
je
fmuls
mov
xorl
aas
aaa
push
lods
push
lret
lods
mov
cmp
fwait
loop
push
or
sub
pop
fidivrl
dec
insb
push
jmp
pop
push
push
sti
shlb
jg
push
sub
dec
jp
rolb
cli
add
inc
add
fwait
dec
mov
sbb
das
movb
loope
fildll
inc
fs
sbb
shr
stos
pop
jp
mulps
inc
shl
pop
lahf
ljmp
pop
bound
movsl
or
or
daa
scas
sub
shlb
loop
adc
aas
jge
dec
cmp
cmp
das
mov
movsl
cmp
cmc
pop
stos
das
jl
add
jns
or
cwtl
and
mov
lea
fisttpll
rclb
mov
fistps
mov
inc
fdivs
xor
call
mulb
scas
mov
pop
add
aam
mov
rcll
fstps
out
pusha
rcrb
data16
jae
loop
js
push
mov
adc
jnp
loop
gs
fldt
jg
cld
addl
adc
lea
lahf
xor
adc
test
jl
push
daa
lock
cmpsb
mov
insl
push
jg
imul
loop
mov
cmp
bound
push
rol
mov
cmp
lret
push
int
jmp
push
cmp
sbb
mov
push
outsb
add
jnp
mov
dec
mov
jb
ljmp
sahf
ss
out
xchg
push
ljmp
dec
or
notl
mov
lcall
xor
jge
mov
xchg
aad
rol
negb
rorl
stos
cmp
rcr
add
out
jns
xor
imul
pop
sahf
in
xchg
addr16
and
ret
adc
aad
test
or
leave
stos
sub
or
sbb
leave
pusha
cltd
adc
out
inc
aam
out
mov
lods
ds
inc
pop
pop
xor
cmpsb
ror
jg
movsl
hlt
sub
or
pop
mov
push
pop
cmpsb
push
inc
fstps
inc
mov
xchg
or
push
add
outsb
cmp
dec
lcall
fwait
pop
adc
cli
dec
sbb
dec
ret
imul
mov
sbb
inc
cmp
inc
test
push
call
aaa
mov
sub
inc
out
fmull
jns
pop
mov
push
test
add
jge
cmp
sahf
dec
data16
xchg
sub
adc
inc
std
mov
cmpsl
addr16
fwait
jns
xchg
jp
movlps
and
inc
clc
clc
dec
loop
adc
imul
rorb
in
std
push
aad
and
in
or
mov
dec
iret
dec
mov
stos
cmpsb
call
fbstp
rorl
mov
push
push
jno
sti
push
pop
inc
inc
mov
or
push
imul
ret
dec
pop
mov
in
lea
int
pop
cmc
sarb
lods
inc
mov
sar
subb
loopne
pushf
jnp
or
ljmp
movsb
mov
pop
adc
cmpsb
jne
adc
mov
add
cmpsl
jb
fpatan
add
add
aam
lret
xchg
xchg
sub
pop
icebp
inc
push
push
inc
cmp
xlat
and
pop
push
adcl
loop
ds
lods
outsl
xor
xchg
das
lahf
xor
lods
or
xchg
add
daa
sbb
shll
outsb
push
hlt
scas
ret
and
cmpsl
loopne
pop
enter
push
fisubrs
sub
stc
cmc
adc
rcll
jmp
xor
fwait
test
inc
pusha
sbbb
lea
call
add
lods
push
xchg
fstl
lds
shll
addr16
ret
dec
sti
in
imul
xchg
dec
call
push
vpandn
out
xchg
sbb
sub
pop
push
pop
mov
aad
mov
add
jo,pn
das
sub
mov
aam
insb
outsl
or
in
dec
push
imul
inc
lock
scas
mov
mov
pop
pop
push
jmp
sub
jno
add
and
xchg
ja
nop
fs
mov
aad
test
mov
or
es
sub
dec
ds
popf
or
add
imul
jbe
out
ja
mov
sbb
pushf
pop
inc
xchg
popf
divb
rorb
lahf
push
mov
aas
jb
hlt
movsb
test
cli
dec
jnp
or
loope
stos
dec
xchg
dec
das
jbe
cmp
push
cmp
movsl
or
das
cmp
gs
cmp
xchg
xchg
mov
push
sbb
clc
xchg
es
dec
xchg
aam
push
jns
cmc
ljmp
dec
shr
and
push
xchg
add
arpl
inc
test
pop
stos
jmp
dec
jl
outsb
dec
push
out
xlat
add
clc
jne
cmp
or
out
leave
mov
add
add
scas
andb
out
push
sbb
sub
jae
sub
es
mov
lods
jo
js
dec
aad
mov
test
in
pusha
lods
fwait
xchg
dec
adc
xlat
inc
bound
inc
jnp
out
test
lods
fld
push
mov
cmpsl
fwait
pop
cmp
jecxz
pop
rol
jle
xor
cmpsl
push
xor
cmp
pop
lcall
jno
fwait
loop
lahf
add
shrl
in
or
mov
xchg
fsubrl
or
lods
xor
sarl
jl
test
lea
pop
arpl
je
xor
clc
sbb
int
inc
pop
inc
fcmovbe
insb
lock
mov
jg
adc
or
mov
lock
jle
xor
push
jg
xchg
cltd
std
inc
mov
mov
sbb
lods
test
push
sub
std
or
mov
pop
cmp
pop
cs
test
aas
xchg
pop
imul
jo
mov
pushf
or
aaa
push
mov
adc
mov
ret
cmp
or
cmpsb
pop
push
mov
adc
xchg
pusha
ljmp
loopne
xor
addr16
arpl
cmp
sub
dec
cmp
fbstp
xchg
xchg
mov
mov
pushf
shrd
test
cltd
or
pop
adc
loop
push
bound
ss
mov
imul
insl
mulb
shr
popf
movsb
or
mov
orb
cmp
fdiv
cmp
pusha
das
test
xor
lods
inc
push
mov
pusha
jmp
xchg
lock
fwait
xor
mov
js
sbb
jnp
xor
xor
dec
in
lea
mov
or
xchg
mov
fdivl
decb
add
mov
lret
mov
lods
in
cmp
roll
mov
mov
cli
sub
fcomps
sbb
push
fidivrl
adc
divb
pop
sub
inc
outsl
cmc
push
inc
aas
add
sbb
add
push
push
pop
and
jge
mov
mov
test
or
in
insl
xchg
add
mov
testb
pop
in
jp
sub
sub
pop
das
sbbl
lods
mov
pushf
add
jb
loope
fwait
sar
aad
idiv
push
mov
pop
fiaddl
stc
dec
mov
xchg
int
into
mov
loope
sub
bound
sub
mov
jns
sub
dec
mov
shrl
inc
fdivp
mov
cmp
add
int3
pop
sbb
add
outsl
out
push
orb
fdivl
outsl
ret
jnp
mov
mov
jp
rcrl
mov
out
cwtl
cmp
fisubl
int
lret
cmp
movsb
mov
mov
iret
movsb
adc
jg
mov
sbb
scas
iret
jecxz
inc
les
mov
imul
cwtl
and
les
jl
mov
xchg
adc
pushf
dec
fsubrs
shll
imul
daa
push
test
mov
mov
dec
fsubl
mov
fsubs
mov
sub
bound
pop
jns
andl
mov
stc
popf
xor
jmp
inc
sbb
or
jne
push
aad
push
pop
cld
cmp
sti
jbe,pn
fiadds
lea
push
cmp
shrl
enter
add
pop
jae
lods
scas
inc
fdivp
es
aad
int3
imul
scas
xchg
mov
int3
sub
jnp
outsl
shll
and
orl
sbb
ja
jecxz
in
fs
xchg
cmpsb
push
daa
cmp
sbb
xchg
cltd
cmp
icebp
xchg
pop
push
shl
xor
js
popf
divl
dec
and
daa
rcr
mov
mov
sub
shrb
out
jmp
inc
xchg
push
jbe
ljmp
push
sahf
shrb
dec
jae
je
in
lds
nop
add
js
or
cs
popa
les
jmp
in
cltd
fdivrp
in
xor
inc
ss
cmp
jge
mov
or
jns
mov
adc
sub
daa
scas
mov
adc
leave
xchg
rcll
mov
addr16
jecxz
mov
push
push
jbe
or
int3
mov
pop
test
add
fcmove
xlat
in
ret
mov
jae
xchg
push
popf
cld
mov
add
dec
icebp
ds
in
cmc
pop
push
insb
cmp
push
lcall
dec
cmp
xor
xlat
ds
cmp
dec
dec
sub
sbb
and
nop
imul
cmp
sbb
mov
fimuls
inc
idivb
jmp
pushf
popf
sub
dec
inc
push
out
lcall
xor
fidivs
add
in
xor
imul
push
test
push
cmp
gs
sub
movups
pop
sub
stc
push
clc
movsl
mov
ja
jecxz
add
inc
jb
mov
int3
lahf
xchg
sub
in
jnp
pop
mov
cmp
leave
or
inc
fsts
loopne
cltd
pushf
pop
mov
mov
pop
enter
call
cmp
les
jb
divb
loop
push
xor
add
xor
push
sti
test
xor
into
mov
adc
xor
pop
decb
sub
mov
jb
pop
pop
pop
mov
dec
mov
mov
aad
inc
outsl
scas
out
xor
test
rolb
fiadds
sbb
daa
or
push
out
std
mov
pop
clc
add
mov
pop
sub
push
mov
rorb
sub
mov
rolb
mov
je
scas
jl
stc
pop
sti
xchg
lea
mov
inc
cmpsb
inc
inc
fdivrs
ja
cli
xor
add
add
push
cmc
or
nop
daa
xor
push
fstl
outsb
sub
jo
sub
std
sarb
movsl
sbb
lret
adcb
inc
inc
push
jl
leave
inc
sbb
or
mov
push
dec
mov
repnz
arpl
jbe
dec
or
bound
pop
test
add
ds
ret
outsb
pop
mov
in
ss
nop
call
clc
lea
push
mov
cmpsl
pop
mov
ljmp
xchg
pop
cmp
sbb
test
les
inc
popl
jb
jns
sbb
dec
cwtl
inc
fcoml
sub
ret
hlt
jmp
movsb
sub
sub
pop
insl
xchg
ljmp
std
xchg
iret
jne
xorb
addr16
popf
xor
outsb
movsl
xor
js
mov
inc
mov
fstl
inc
pop
inc
lcall
and
mov
scas
pop
jmp
mov
movsl
scas
fsubrp
ljmp
adc
push
xchg
iret
push
das
mov
mov
ss
das
xchg
xchg
rclb
mov
push
mov
fstp
mov
movsl
outsb
iret
push
sbb
outsb
mov
or
inc
loopne
andl
imul
out
pop
das
jecxz
loope
stos
add
jl
sbb
xchg
mov
mov
inc
int
jo
and
jo
xchg
lock
jmp
inc
dec
scas
sub
mulb
dec
cwtl
pop
mov
push
mov
sbb
ficoms
and
fwait
cmpsb
gs
stos
or
dec
or
and
cmpl
addb
jbe
loop
nop
jp
aam
pop
mov
cli
inc
cld
jg
lahf
and
and
shlb
pop
mov
dec
stc
adc
insb
push
cmp
and
rcrl
je
pop
fidivrs
iret
xchg
xchg
push
jb
lcall
push
shl
adc
fsubr
or
inc
push
pop
test
test
and
outsb
ror
mov
add
inc
adc
jecxz
in
cwtl
xchg
movsl
clc
frstor
adc
mov
adc
test
push
xor
data16
sbb
jg
outsl
and
dec
or
mov
sub
movsl
sbb
dec
mov
dec
iret
bound
fdivrl
jmp
andl
and
or
mov
and
push
decl
pop
or
mov
sahf
outsb
xchg
mov
loope
popf
dec
cmp
sahf
aaa
lret
xor
in
xor
inc
push
inc
lret
fs
pop
inc
es
lret
mov
fsubp
iret
xor
jl
adc
loopne
xchg
out
pop
mov
jmp
xor
lcall
jo
push
adcb
sbb
sbb
pop
test
fldcw
and
xor
pop
push
jecxz
cwtl
add
lret
rclb
gs
loopne
popa
aad
sar
nop
push
pop
adc
sub
ljmp
cmp
lcall
push
xchg
xor
mov
lods
movsb
pusha
jmp
fnstenv
insb
inc
push
roll
scas
mov
fwait
cmpsb
jp
sub
cmpsb
mov
mov
cltd
loop
or
jne
fbstp
xchg
lret
in
sub
int
xor
mov
mov
lret
push
xchg
pop
mov
pop
cmp
mov
dec
add
in
pop
cmp
pop
lcall
pop
in
pusha
xchg
add
inc
push
mov
push
or
sub
imul
sub
jle
and
pop
jg
push
push
mov
jmp
es
pop
fstpl
int3
inc
lods
ret
ja
pop
negb
shll
ret
addl
mov
pushf
mov
push
push
fcoms
insb
fbld
data16
dec
outsb
push
cmp
int3
arpl
pop
repnz
leave
mov
fidivl
xchg
adc
jno
or
and
out
xor
xchg
mov
mov
scas
push
or
and
adc
imul
lods
mov
mov
xchg
test
je
push
pop
xor
jno
fwait
push
xchg
inc
adc
out
cli
or
nop
push
sahf
dec
inc
cwtl
sbb
enter
push
ljmp
pop
std
in
rcrb
ja
sbb
lret
xor
imul
push
popa
movsl
lret
xlat
mov
jmp
fs
out
ja
mov
jnp
jl
inc
xlat
lods
out
add
pop
insb
add
mov
por
inc
xor
scas
movsl
jl
mov
leave
xchg
inc
ffree
fs
mov
inc
std
dec
lods
jo
fimuls
fldenv
and
jge
iret
loop
mov
jns
loope
mov
sbb
dec
lret
std
sarb
mov
jno
scas
add
fdivrp
add
cmp
and
sbb
mov
jmp
cmp
lahf
lret
ds
mov
mulb
arpl
sbb
sub
mov
mov
repnz
xor
sbb
lahf
xchg
pop
xor
sarb
int
cmc
mov
inc
sbb
mov
imul
fnstsw
shl
cld
cwtl
push
pushf
mov
scas
inc
lret
fwait
sub
cwtl
mov
lods
and
sub
imul
fdivrl
lods
scas
push
xor
dec
in
adcb
mov
push
cmp
nop
push
jnp
adc
movsl
xor
xchg
popa
push
push
pop
lret
aaa
out
mov
test
adc
outsb
cmpsb
add
mov
xchg
in
sub
push
stc
jno
cmp
fcompl
popa
enter
insb
push
jp
lret
mov
les
aaa
pushf
push
push
dec
and
sub
mov
icebp
sbb
push
aas
mov
mov
xchg
xchg
adc
inc
adc
xchg
dec
aaa
lret
sub
cmp
cmpsb
ja
subb
cltd
mov
push
fildll
fmul
cmp
add
xor
hlt
addr16
mov
push
mov
mov
mov
int
and
sbb
or
dec
popa
cwtl
test
jle
mov
scas
daa
sti
push
pop
dec
loopne
clc
mov
mov
jge
fcmove
xlat
sbb
push
test
mov
or
iret
xlat
arpl
and
test
jb
call
add
pushf
mov
lods
adc
mov
fildll
fwait
shrl
or
xor
ret
adc
gs
es
and
lods
mov
dec
and
pop
cmp
xchg
xchg
imul
pop
aad
arpl
lea
pop
and
lcall
push
int3
pop
ja
push
test
push
in
sub
push
lock
xor
mov
out
dec
fcoml
sub
sbb
lea
and
movsl
lcall
cmp
jl
pop
sub
imul
dec
in
inc
sbb
adc
lret
repz
push
js
xor
cmpsb
dec
mov
bound
adc
fdivl
mov
xor
lea
mov
fwait
ljmp
cld
sub
mov
push
jmp
fcomps
lret
dec
lds
pop
daa
adc
push
sti
inc
loope
ficomps
icebp
jl
mov
mov
loopne
mov
loop
daa
jmp
popf
push
stos
ja
or
jb
mov
cs
and
jl
cli
popf
shlb
enter
sub
jae
push
add
jecxz
sub
jmp
and
rcll
fstpt
sub
xor
jb
add
lahf
or
js
call
and
fldl2t
inc
negl
cmp
ss
aaa
imul
sub
pop
xor
xchg
sbb
mov
or
push
addb
cmp
ds
es
dec
out
mov
lds
push
hlt
daa
inc
push
xchg
mov
add
pop
dec
adc
sbbl
out
inc
push
popa
in
pusha
dec
mov
iret
push
push
jb
sub
imul
imul
mov
adc
ret
call
and
add
imul
and
inc
addr16
xchg
test
mov
into
lea
in
cwtl
xor
in
rcrb
and
loopne
add
scas
jns
push
sbb
out
int3
in
xor
lcall
in
aam
cmp
mov
loopne
jb
in
push
mov
mov
bound
sub
sbb
ret
or
cwtl
cmc
adc
xchg
pop
pusha
jno
ret
pop
inc
nop
sbb
mov
xchg
pop
gs
sub
ret
push
pop
sti
aam
movsl
jb
jb
mov
scas
push
sub
cmp
ret
cltd
stos
push
out
mov
es
xlat
shrl
or
repz
cli
adcl
xchg
cmp
cmc
xor
bound
fistl
loope
sub
cmpsl
xor
movsl
test
add
mov
dec
xchg
icebp
push
data16
repnz
aaa
mov
sub
repz
jae
dec
pop
scas
roll
leave
lret
pushf
jo
mov
aam
push
mov
xchg
add
mov
mov
add
sbb
mov
inc
and
leave
pusha
mov
iret
das
jl
push
nop
pop
sub
lret
les
fldt
xchg
xchg
jae
lea
ds
jge
or
cmpsl
fwait
jb
and
and
mov
pop
dec
fldt
mov
andb
mov
or
inc
mov
int
add
xchg
popf
loopne
cmp
jecxz
cs
sub
test
inc
jnp
out
sub
hlt
mov
lahf
cmpsl
mov
cwtl
rcrl
in
mov
inc
mov
inc
push
incl
jo
or
jg
sbb
fwait
xchg
adc
xchg
cmp
pop
sbb
out
pop
and
cmc
nop
mov
sahf
scas
cmc
sbb
jns
and
xchg
xchg
xchg
xchg
mov
fildl
sbb
and
xchg
jmp
pop
frstor
call
xor
fldl
fdivrs
jb
enter
lods
mov
xchg
dec
jecxz
insl
push
sbb
adc
mov
jne
inc
and
sbb
enter
adc
lds
data16
sbb
in
xor
in
outsb
or
mov
xor
int
sub
sti
mov
adc
or
or
test
scas
push
fsubl
push
iret
inc
sub
out
jne
subb
lret
arpl
pop
imul
cli
nop
adc
mov
adc
xchg
stos
in
dec
dec
inc
mov
imul
loope
xchg
jecxz
cmp
aad
sbb
jo
mov
ret
mov
int3
or
movsl
in
in
pop
sub
lods
dec
cmp
mov
fisubl
inc
add
rcrb
jecxz
test
sbb
insb
sbb
loope
or
hlt
cmp
dec
into
gs
addl
in
test
sbb
pop
mov
aam
lahf
cmc
lret
aad
dec
das
int3
jmp
fwait
xchg
pop
pop
and
test
fsubs
mov
out
push
cmp
add
cmpsl
es
rorl
cmp
in
xlat
icebp
xchg
and
fstps
xchg
xor
ret
cmc
mov
addr16
sbb
xlat
cmp
das
mov
int3
arpl
mov
jns
idivl
xor
xchg
xchg
push
mov
dec
ret
dec
and
xchg
ret
pop
rcr
mov
adc
loopne
mov
push
es
std
adc
ss
inc
in
rcrb
aaa
scas
std
or
and
loopne
cmp
cli
dec
xchg
out
jb
cmpsl
lock
mov
mov
incb
inc
sbb
test
outsb
sbbl
mov
rorb
cmpsl
mov
shl
mov
jp
or
mov
das
and
dec
push
xchg
aas
jl
pop
xlat
stos
mov
cmp
mov
mov
adc
fidivl
sub
popa
int
mov
and
lock
fsubs
xor
jb
arpl
mov
jmp
sbb
fildl
mov
dec
cli
cmp
sub
mov
inc
sub
pop
lods
hlt
sbb
dec
adc
in
jns
dec
mov
or
ja
sub
and
cmp
stos
mov
or
out
sub
sub
push
sub
divl
mov
lock
push
movsl
cltd
fidivrl
imul
lock
pop
mov
scas
popa
jno
jns
xchg
xor
icebp
in
lods
add
cmp
push
repz
arpl
adc
pusha
cmpb
jbe
jb
movsl
push
ja
enter
pushl
mov
push
jecxz
adc
jmp
jbe
rolb
xchg
pop
shrl
out
sbb
ja
sbb
mov
aad
or
sbbb
push
xchg
mov
shlb
cmp
adc
mov
push
adc
mov
adc
pop
mov
comiss
orb
push
jno
sbb
mov
fdiv
popf
mov
call
mov
sbb
inc
addl
add
pop
mov
inc
add
and
sbb
dec
inc
mov
adc
dec
or
fidivl
fcomip
dec
push
lock
dec
xor
arpl
std
mov
lret
xor
gs
pusha
dec
push
jns
inc
pop
out
bound
or
cmp
ljmp
sub
xor
dec
mov
inc
popf
lods
jg
into
and
jb
stos
xchg
fnstenv
fstp
dec
out
sub
movsl
cmp
clc
inc
mov
push
or
xchg
outsl
push
test
pop
push
pusha
sub
testb
test
outsl
add
outsl
or
mov
sub
stos
pop
mov
cmp
int3
xor
cmp
loope
mov
add
popa
and
mov
ret
mull
mov
imul
xchg
cmp
lds
sbb
inc
aad
xchg
sbb
sub
imul
inc
and
and
push
fistpl
aad
fildl
in
xor
push
sub
mov
or
mov
fstl
fsts
inc
leave
jmp
fxtract
xor
jae
popa
gs
jno
adc
test
sbb
stos
shr
add
lret
jae
pop
dec
or
das
jp
add
sbb
addb
enter
xor
pop
inc
push
sbb
xor
dec
mov
bound
gs
les
mov
push
mov
mov
or
cwtl
adc
aaa
test
icebp
or
mov
dec
push
jle
xchg
daa
cltd
inc
es
lcall
sbb
mov
mov
fsubrs
outsb
pop
pop
mov
jb
inc
and
sti
pop
cli
or
mov
inc
sub
xlat
xor
fiadds
push
mov
leave
daa
adc
test
xchg
or
xchg
fcomi
inc
inc
add
arpl
movsb
pop
sub
pop
push
popf
cmpsl
out
or
loopne
out
dec
movsb
fimuls
mov
sbb
inc
jae
push
out
popl
sub
pop
fwait
jecxz
or
mov
push
cmc
les
lret
lods
jecxz
inc
stc
loopne
sub
rolb
jns
test
stos
outsl
jl
sub
sub
ret
addr16
insb
dec
fistpll
mov
movsb
rcll
inc
mov
test
mov
icebp
std
inc
stc
stos
cltd
mov
lret
lret
mov
cmp
lret
mov
std
sbb
lahf
pop
push
or
add
and
mov
adc
cmpl
mov
repz
inc
out
push
icebp
jae
mov
testl
les
and
mov
xor
xchg
into
mov
push
mov
fbstp
inc
sbb
orb
rcrb
stc
jge
imul
loop
fwait
lods
mov
mov
test
lods
dec
fwait
lods
lret
inc
mov
add
scas
scas
repz
adc
and
je
mov
mov
pop
push
jge
dec
mov
outsb
int3
pop
mov
dec
adcb
xchg
push
xor
xor
jmp
cli
and
cmp
test
mov
aad
inc
stc
mov
push
je
sti
sti
push
test
sbb
cmp
enter
arpl
mov
add
xchg
xor
push
sub
sbb
push
ret
outsl
and
push
jo
mov
xor
sub
out
in
inc
dec
mov
lds
lret
jl
xor
jns
inc
jmp
fsubs
popf
push
addps
inc
jae
inc
mov
xor
les
inc
fstl
mov
and
into
jns
jge
out
jg
sub
inc
sarl
jecxz
test
lods
outsb
stos
fcmovbe
inc
aas
js
inc
fidivs
jmp
fsubrl
int3
pushf
mov
int
mov
fistl
mov
mov
lods
movsl
push
lods
cmp
xchg
js
jne
data16
adc
cltd
sbb
lret
push
push
in
sbbl
inc
mov
cmp
mov
cmp
loopne
adc
pop
adc
loopne
cmp
lahf
and
lcall
and
push
sbb
lahf
ss
insl
enter
fstpt
or
pop
inc
push
adc
xchg
sbb
mov
iret
push
or
cmp
push
adc
sahf
mov
sarb
fdivr
add
xchg
mov
inc
and
int
fcomps
adc
loop
cmp
dec
jecxz
xchg
int
dec
mov
xor
mov
xchg
data16
push
fadds
scas
mov
mov
xorb
pop
mov
add
int
mov
jl
or
dec
xchg
pop
repz
lods
sub
outsl
icebp
pop
sbb
xor
jnp
ja
ucomiss
xchg
pop
mov
lock
scas
movsl
in
cld
loope
cs
addr16
jp
idivl
and
sub
mov
out
push
out
cmc
push
lods
mov
xlat
scas
cwtl
xor
lds
dec
adc
mov
pushf
mov
xchg
jb
fistpll
shl
es
faddl
push
cmp
inc
inc
sbb
mov
jecxz
push
insb
xrelease
mov
inc
in
ret
js
pop
lcall
lods
ljmp
rcll
and
mov
push
push
repnz
aam
shr
adcl
subb
enter
outsb
pop
xor
add
push
sub
repz
int3
test
mov
cmp
in
pop
pop
fldcw
lds
aam
xchg
mov
addb
jp
shld
popa
pushf
sbb
sbb
es
and
jae
outsb
movsl
xor
call
ds
ljmp
out
repz
rcrb
ss
icebp
push
dec
dec
in
cmp
ret
dec
inc
jecxz
popa
or
mov
test
mov
inc
and
into
push
mov
push
int
aaa
sahf
or
sbb
adc
or
int3
ret
outsl
mov
rcrl
pop
insl
pushl
mov
sbb
cmp
xlat
push
add
outsl
jae
sarb
fisubrs
xor
scas
xchg
cli
xor
inc
sub
xor
xchg
jg
inc
pop
inc
in
dec
fs
shrb
mov
aas
add
cltd
test
cs
fistps
push
cld
jbe
shrl
push
mov
add
fnstsw
divl
bound
hlt
fistpl
sbb
xor
int
fistpll
mov
pop
sahf
xor
mov
aas
loopne
ficoml
push
push
push
mov
sbb
and
cmpsb
cmp
add
test
aaa
mov
adc
ds
and
outsb
add
push
imul
push
lret
andb
out
sub
inc
and
cmp
aas
roll
sbb
fbld
sbb
or
xchg
adc
mov
insl
test
ret
icebp
push
loope
mov
inc
mov
fnsave
xor
jp
repz
or
and
jg
test
leave
xor
dec
pop
add
push
cwtl
sbb
and
mov
jne
pop
push
test
fnstsw
jle
sbb
mov
inc
jnp
xor
inc
jmp
xchg
push
mov
imul
xor
insb
sbb
rol
push
add
arpl
aaa
lods
push
mov
sub
push
pop
rorb
cmp
daa
jle
jnp
sahf
sub
lret
push
scas
call
movsb
and
xor
imul
lret
lds
aas
mov
mov
mov
adc
int
mov
dec
fidivl
jno
fimuls
stc
je
not
movsb
inc
imul
mov
mov
movsb
inc
movb
push
imulb
cmp
inc
lods
sti
cwtl
add
movsb
outsl
xlat
sbb
jnp
das
imul
xchg
mov
daa
sub
adc
leave
jp
cmpsl
xlat
loope
inc
push
out
scas
lds
clc
ljmp
cwtl
pop
mov
movsl
jo
je
push
jbe
xchg
xchg
addr16
jp
movl
xchg
lock
pop
cmp
mov
mov
xchg
dec
cmp
jmp
push
sbb
cmpsl
or
bound
sahf
inc
xchg
dec
ds
pop
outsb
les
push
aad
pop
sbb
add
mov
shrb
ds
std
shr
sbb
mov
lea
pop
imul
cmc
adcb
out
xor
fcmove
out
ret
fsubs
fnstenv
fcomi
aaa
into
pop
sub
fs
jle
je
xchg
lcall
and
jbe
pop
xchg
adc
inc
pop
mov
pop
lahf
sub
inc
leave
lcall
out
stos
xchg
popa
adc
adc
fistps
cmc
inc
mov
jle
mov
cmpsl
dec
xchg
pop
ficoml
mov
cltd
stos
jge
pop
insl
dec
outsb
je
mov
pop
loopne
cmp
xor
fldcw
add
stos
sbb
inc
pop
pop
lock
ja
sub
cmpb
into
lods
inc
add
push
jecxz
pop
movsb
icebp
sub
xchg
jge
iret
xchg
scas
lret
lods
inc
packssdw
and
rcll
daa
inc
add
dec
je
or
and
pop
push
inc
pop
lcall
dec
in
andl
nop
scas
mov
dec
mov
or
mov
add
mov
lods
jp
fbld
xchg
adc
pop
imulb
push
push
jle
jns
std
mov
mov
inc
and
cmpsl
ret
push
push
aas
dec
gs
jle
mov
loopne
push
popf
cwtl
sub
mov
push
cwtl
repnz
dec
pop
mov
lcall
jecxz
xchg
and
xor
loope
clc
or
test
int
call
test
in
std
xchg
fldl
sbb
mov
out
xchg
add
adc
test
int
arpl
pop
orb
mov
mov
mov
jo
lahf
outsb
add
pop
push
pop
and
jae
dec
mov
stc
cs
mov
sub
push
movsb
mov
mov
push
sub
dec
movsl
dec
push
push
jo,pn
dec
scas
repnz
sub
jnp
fdivs
lea
mov
or
push
in
lds
and
scas
push
in
or
scas
mov
in
sbbb
push
stos
mov
cmp
lret
outsb
int3
fadds
jge
stos
aad
xchg
sub
repnz
lods
inc
test
lret
jo
inc
xchg
incb
add
push
push
in
and
jle
sarb
xor
ja
inc
stos
mov
dec
dec
jno
adcb
in
and
ret
jno
lea
adc
mov
cmp
cmp
mov
shlb
mov
adc
mov
sbb
add
adc
arpl
jmp
push
and
sti
testl
popf
or
add
dec
mov
adc
dec
inc
insb
inc
mov
ss
aam
flds
mov
jno
mov
inc
ret
addr16
iret
test
push
pop
jo
shll
and
fdivl
test
lret
cmp
sarb
iret
loope
push
adc
sbb
sti
insb
jecxz
leave
fsubrs
lcall
xchg
add
cli
pop
je
rcll
dec
jg
clc
sbbl
inc
dec
repz
jp
iret
mov
adc
int3
jns
mov
loope
add
cmpsb
fldl
mov
cmp
insb
and
xchg
insl
dec
scas
sahf
sbb
mov
cmp
xchg
vpandn
inc
outsl
push
fbld
mov
and
outsb
rol
lahf
jno
cmp
mov
dec
jp
add
jns
out
shrb
mov
jae
call
mov
push
mov
jno
sub
movsl
pop
cmc
jnp
xchg
push
sub
fnstenv
push
cmpsl
adc
mov
nop
cmp
arpl
lds
jno
inc
les
incb
push
divl
push
mov
testl
sub
mov
int3
jnp
loopne
dec
mov
in
mov
mov
lret
std
hlt
jo
xor
test
inc
sub
outsb
dec
stos
mov
push
mov
mov
and
into
scas
inc
inc
outsl
addl
jmp
push
nop
inc
imul
fucom
int
adc
sahf
sbbb
push
movsb
pushf
repz
loope
imul
cmp
divb
cli
fsubp
mov
lock
mov
adc
xchg
mov
push
enter
jg
mov
xor
jae
push
push
xchg
sub
add
sbb
pop
iret
adc
inc
mov
mov
movb
js
adc
and
hlt
daa
mov
mov
sahf
lahf
sbb
sub
mov
xor
mov
add
sub
sti
pusha
daa
mov
jne
pushf
iret
mov
jge
push
push
ret
je
rcr
loop
les
xchg
xor
in
cmp
xor
mov
stos
dec
and
cmp
xorl
out
mov
outsb
lahf
je
mov
cltd
popf
popf
aas
dec
lock
out
stos
sbb
lea
sbbl
sbb
cs
xchg
dec
divb
sarl
add
jmp
addr16
insb
mov
js
xorb
ret
push
pop
dec
leave
adc
lods
hlt
aas
pop
push
ret
add
movsl
cmp
cwtl
imul
push
idivl
mov
mov
dec
dec
and
leave
adc
add
jae
icebp
dec
loope
jp
cwtl
ror
shl
mov
int3
mov
out
nop
bound
je
pop
test
xchg
inc
sub
ds
xor
dec
cs
setl
mov
mov
xor
sbb
adc
insl
into
pop
sub
add
dec
repnz
jecxz
scas
inc
or
arpl
stos
int
lock
lock
mov
mov
sbbl
mov
scas
cmp
mov
gs
add
and
push
fwait
sbb
jp
out
cmp
inc
xchg
pop
in
push
scas
inc
inc
sbb
adcl
and
cmp
push
movsl
xchg
lds
repz
inc
add
loop
jecxz
mov
push
sti
and
cmp
adc
add
push
loop
test
nop
daa
fnstenv
jmp
adc
js
sub
jbe
sub
mov
cwtl
rcrb
movsl
push
and
pop
retw
xor
sub
mov
imul
pop
and
mov
jae
data16
xchg
mov
fwait
cmpsl
mov
mov
pop
shlb
lea
data16
xor
ljmp
pushf
xchg
mov
int3
lods
lods
lahf
cmp
test
cli
mov
loopne
xchg
mov
mov
mov
in
and
lods
orb
lret
mov
adc
das
movsl
pushf
xor
jl
sub
lods
mov
cmp
inc
fdivr
mov
popa
clc
or
jg,pn
outsb
jbe
psllq
cwtl
das
inc
faddp
aas
out
mov
outsb
mov
push
sbb
mov
and
sbb
and
int3
rcl
lock
and
push
pop
popf
cmp
and
dec
int
les
push
adc
mov
lar
pop
cmp
adc
adc
xorl
pop
out
sbb
into
and
outsl
inc
ret
jo
mov
pusha
push
dec
loop
cmpb
mov
adc
add
into
in
sub
adc
adc
mov
push
add
mov
jb
pop
jae
push
or
sbb
add
sbb
int
mov
shl
and
stos
mov
cs
push
movsl
in
mov
cmpsl
inc
push
daa
jbe
xor
jae
or
in
and
jno
daa
adc
scas
fcomps
add
and
or
or
out
mov
and
and
and
jae
xchg
push
sahf
lods
xor
ljmp
or
flds
cmp
out
inc
sub
cld
jmp
push
mov
ret
call
aaa
jle
sti
sub
push
mov
pop
iret
mov
or
cmp
movsb
out
sarl
je
or
sub
shrb
or
mov
negb
std
jp
cmp
mov
rcll
aam
imul
in
push
mov
pop
mov
jns
mov
jg
aam
lds
pop
add
lea
inc
ljmp
sub
in
pushf
pop
adc
sub
push
mov
test
sti
add
sbb
pusha
ss
mov
dec
lret
lret
sahf
inc
sub
outsb
iret
pop
mov
mov
mov
or
mov
lods
dec
pop
pop
dec
pop
scas
ss
popf
lock
pushf
inc
fstpt
mov
jae
dec
movsl
lahf
push
inc
push
aas
jb
lret
pop
jmp
push
daa
stos
xchg
mov
push
pop
out
pop
fstpt
mov
adcb
dec
cs
jns
fnstcw
clc
jl
push
pop
fldl
xchg
push
mov
xor
jo
std
and
es
mov
cmp
fldt
push
add
cwtl
scas
mov
bound
negl
jb
and
testb
xchg
cld
nop
popa
adc
jle
adcb
jb
push
mov
xchg
sbb
sahf
mov
jnp
roll
or
adc
scas
or
xor
add
lds
stc
cltd
je
fnstcw
xchg
fs
mov
pusha
push
outsl
lcall
je
pusha
mov
adc
enter
aam
xchg
fistps
aad
cmp
xor
jns
push
pop
cmpsb
rcll
inc
in
mov
or
adc
push
test
ja
loope
or
outsb
jne
and
jb
sti
inc
push
ja
and
push
out
cltd
lods
inc
or
xor
mov
fxch
idiv
dec
xlat
loope
inc
dec
fisubrs
scas
add
inc
aaa
into
ja
in
hlt
sbb
cmp
bound
enter
dec
xorl
pop
or
into
daa
push
cs
jmp
xchg
dec
scas
ret
lcall
push
jle
test
test
mov
fsubr
xor
mov
xor
inc
leave
jge
sub
add
psubq
add
mov
dec
mov
ret
mov
ja
lret
repnz
mov
and
mov
ljmp
sub
js
fs
adc
sub
cmp
xchg
dec
popf
mov
lahf
pop
out
rcrb
pop
adc
mov
outsb
mov
jo
js
jb
add
jle
shrb
mov
inc
clc
stos
mov
jb
sti
jp
daa
movsl
cmp
int3
xchg
add
call
adc
push
rolb
or
outsl
jb
jg
fmull
dec
je
insb
aam
and
sub
icebp
mov
ss
ud2
sbb
mov
lds
repnz
roll
in
aad
jl
test
rcrl
xchg
add
sub
sbb
iret
dec
mov
outsb
das
aam
add
pop
mov
loop
rep
jle
js
clc
lds
pop
mov
push
jno
in
test
aas
repz
mov
push
outsb
fsubrs
icebp
test
inc
cs
push
mov
mov
stos
adc
enter
xor
outsl
xchg
mov
inc
jge
jbe
jnp
mov
sbb
orps
mov
movsl
jle
mov
cmp
into
insl
and
mov
insb
filds
push
or
cmp
mov
xchg
or
stos
cmpsl
mov
mov
ss
push
sbbl
ret
mov
sub
xchg
cltd
popa
repnz
jmp
data16
pop
jno
add
push
outsl
adc
xchg
sub
enter
mov
pop
daa
mov
fcoml
dec
scas
jecxz
sub
les
mov
cmp
push
mov
pushfw
adc
add
in
dec
mov
aad
sub
mov
movsl
out
jae
test
inc
dec
pop
dec
leave
jp
push
in
pop
sbb
push
fs
push
jne
jecxz
int
inc
and
scas
sub
shlb
bound
push
cmpsl
outsb
adc
mov
mov
js
and
notb
cmp
pushl
and
mov
repz
pop
daa
aad
lea
repnz
xchg
and
dec
dec
leave
mov
add
push
in
jbe
cmp
cmpb
aaa
push
insb
inc
xchg
push
mov
inc
and
mov
jno
mov
jnp
and
insl
rol
push
xor
mov
add
ljmp
dec
ljmp
and
mov
adcl
nopl
mov
mov
jns
flds
inc
sarl
mov
mov
jg
push
cwtl
enter
mov
cmp
xlat
xchg
test
std
jnp
mov
pop
in
mov
sub
std
push
shlb
push
pop
cmpsb
test
ja
jmp
out
shr
or
cmp
enter
mov
and
cmp
popf
movsb
out
ret
mov
addr16
xchg
adc
fwait
sbb
lret
movsl
dec
icebp
js
and
ja
ss
and
lretw
push
mov
shll
repz
rcll
lea
sub
mov
fistl
popa
aaa
pop
mov
lds
push
pushf
xchg
mov
lfs
jl
rol
push
and
pop
dec
fcom
js
dec
push
mov
ret
int3
and
mov
outsl
xchg
scas
mov
xlat
in
push
jno
fisttps
int3
outsb
xor
sub
xchg
andl
and
lea
jnp
adc
in
push
sbb
xorl
push
adc
loope
mov
sub
cltd
andb
xchg
cs
icebp
mov
sti
push
mov
cmp
int3
push
clc
iret
add
xchg
jle
adc
sub
test
adc
cmp
pop
push
cltd
mov
push
jae
in
nop
roll
in
push
add
push
mov
lret
addr16
mov
scas
mov
sbb
cmp
dec
xchg
add
mov
imul
jl
scas
iret
nop
push
bound
add
sahf
cmc
cmp
es
push
mov
fdivr
jbe
sahf
jo
packuswb
mov
and
jns
mov
adc
fisubrl
mov
out
imulb
addb
jl
fisubrs
and
pop
push
inc
in
push
movsl
adc
or
cmp
mov
test
andb
not
fmulp
mov
push
xor
xchg
cmp
imull
bnd
mov
push
clc
sub
js
loopne
xchg
lock
mov
mov
shlb
or
imul
adc
xchg
sub
decb
mov
push
movsl
ret
cmp
cmp
lahf
scas
sub
mov
insb
sahf
and
adc
sbb
gs
mov
lcall
xor
dec
sarb
cmc
arpl
jne
sbb
nop
and
cld
dec
mov
into
cltd
or
mov
addb
icebp
jb
dec
fadds
xor
movsb
sbb
jle
adc
jle
call
shrb
cmc
sub
insl
pop
pop
xchg
cmp
lods
jno
subb
mov
sbb
and
loope
and
and
in
gs
mov
mov
jecxz
leave
lret
mov
imul
adc
mov
clc
mov
dec
fcompl
xor
xchg
ss
sbb
xor
ljmp
sbbl
stos
push
push
dec
fwait
test
rolb
jmp
imul
cs
xchg
sub
dec
ja
insl
push
xor
cmpsb
dec
adc
aas
dec
push
dec
nop
pop
andl
dec
or
or
dec
shlb
push
addr16
es
scas
stos
clc
inc
pop
dec
push
icebp
inc
jb
ja
addr16
pop
dec
shrl
cmp
xchg
sub
cmp
mov
mov
popa
ficoml
jbe
inc
daa
mov
dec
lahf
stos
lea
mov
mov
clc
inc
mov
les
in
cwtl
imul
push
imul
sbb
xchg
fsubs
rclb
out
push
pusha
pop
lret
add
mov
vpunpckldq
movsb
test
push
dec
pushf
shlb
cmp
in
lods
or
cmp
pop
sahf
mov
xchg
adc
adc
jge
fsubrp
cltd
mov
jae
xor
inc
sbb
mov
aaa
mov
pop
dec
add
fnsave
pushf
scas
and
test
fcoml
push
repz
dec
icebp
push
xor
out
xchg
lret
bound
add
and
xchg
and
cmp
bound
ret
pop
repnz
mov
dec
mov
scas
cmp
test
mov
xor
push
pop
rorb
sbb
pop
test
icebp
icebp
dec
scas
cld
aas
adc
loop
test
fwait
sub
rcr
inc
shl
add
dec
stos
subb
cmp
pop
sbbb
das
sti
jge
cmpsb
cmp
int
repnz
adc
or
mov
movsb
mov
les
aam
icebp
ds
in
sti
jo
sub
adc
jb
or
sub
push
aaa
add
repz
jecxz
cs
shll
call
lret
das
pop
aam
mov
xor
cmpl
out
inc
popf
xlat
repz
sub
das
inc
jbe
xchg
negl
lea
cmpsb
lea
jmp
dec
xchg
leave
dec
jp
or
fcmovne
orb
mov
mov
es
popa
jmp
push
cld
shll
jle
push
xor
push
xchg
jae
cwtl
mov
mov
pop
pop
push
or
cltd
jno
into
mov
or
stc
xorl
dec
dec
imulb
mov
int
int
inc
out
add
leave
jae
clc
mov
push
mov
lcall
cmp
jbe
movsb
pop
iret
mov
dec
adc
push
out
pop
movsb
lret
sbb
outsl
sahf
popa
jns
inc
ljmp
aas
xchg
adc
jmp
pop
dec
xor
mov
je
pop
mov
xchg
mov
inc
movsl
mov
or
fucomi
test
mov
mov
call
aas
aas
imulb
loope
aad
dec
sarb
call
out
les
push
sub
xchg
sub
hlt
sub
pop
push
or
adc
or
gs
xchg
dec
fdivl
and
movsb
in
push
fwait
insl
mov
mov
sbb
xor
jnp
push
mov
mov
pop
sub
pop
pop
xchg
mov
inc
imull
sbb
out
daa
jecxz
push
push
add
pop
jb
push
pop
repnz
test
ret
mov
pop
repnz
add
cld
xor
mov
xchg
push
or
mov
or
das
ja
push
pop
adc
push
or
cmpsl
fwait
dec
push
xchg
nop
cmp
xorl
sub
rcrl
dec
pop
add
call
jge
push
stos
clc
popf
and
lods
cmp
sub
lock
rclb
xchg
fisubs
dec
sar
arpl
cmp
test
stos
pop
pop
rcl
js
mov
insl
sub
push
mov
jge
push
xchg
cmp
xchg
pop
fistps
out
push
and
xchg
mov
and
mov
test
movsl
stos
out
frstor
jecxz
arpl
sub
bound
and
dec
aam
push
jle
test
sbb
lret
cltd
pop
add
stos
mov
mov
jbe
cs
ja
inc
pop
mov
int3
push
mov
mov
mov
and
cmp
leave
mov
jb
jno
iret
sti
cltd
and
xlat
fwait
sbb
int3
pop
mov
stos
cmp
hlt
cmp
push
xor
icebp
js
daa
jnp
mov
shrb
add
dec
jge
es
mov
cmp
or
mov
jmp
lcall
in
stos
dec
cmpsl
jle,pt
xchg
xchg
pop
dec
lds
loopne
sbb
lret
hlt
jecxz
and
pop
incl
push
popf
loopne
mov
mov
outsb
mov
jmp
add
cmp
test
xor
ja
lret
push
call
jb
mov
mov
jae
test
js
addr16
dec
mov
cmp
jp
pop
into
cmp
inc
add
leave
lods
fdivr
pop
or
fwait
fs
xchg
mov
sbbl
or
subl
pusha
push
sbb
xor
lods
inc
dec
call
inc
cltd
addr16
insl
mov
sbbl
xchg
xor
adc
and
dec
cmc
js
out
wrmsr
sahf
js
dec
dec
aad
loop,pt
jge
mov
ret
mov
repz
fdivrp
les
add
pop
mov
frstor
jp
je
iret
add
add
mov
aam
js
movsb
sti
pusha
aad
call
pop
push
sbb
andb
mov
pop
add
arpl
add
pop
movsl
pop
xor
shll
cwtl
mov
ficompl
ja
xchg
xchg
adc
sbb
push
fimuls
movsbl
xor
popa
cmp
decb
push
sub
mov
out
scas
push
cmpsl
test
xchg
bound
push
div
mov
or
movsl
and
rcl
mov
insb
loope
sahf
clc
shl
sub
sub
rcrb
mov
mov
xor
bound
ret
daa
call
sbb
pop
dec
lock
stos
inc
mov
push
xchg
sub
stc
inc
and
dec
repz
gs
jg
mov
shl
lcall
xor
movsb
mov
push
inc
pop
mov
mov
ss
ja
fisubs
jne
out
es
add
mov
xor
out
test
mov
cmpsl
add
mov
hlt
imul
sbbl
adc
ffree
jecxz
add
mov
sub
sub
cwtl
sbb
cmp
mov
ret
pusha
data16
mov
push
jne
movsl
jmp
stos
ret
jnp
jp
and
cwtl
pop
idivb
scas
popl
pop
stos
loope
mov
shl
xor
outsb
jmp
aam
ficompl
stos
aad
cs
pop
inc
mov
nop
test
test
dec
in
idiv
cs
push
stos
sbb
pop
je
lods
insl
dec
lods
or
pop
inc
fmuls
mov
lcall
into
cli
cmp
cmc
inc
sti
cmp
xchg
sbb
sub
add
push
jae
jg
sub
outsb
mov
stos
xchg
push
int
mov
pop
movsb
push
push
add
xor
xchg
popa
add
add
push
cltd
dec
mov
sbb
adc
sahf
dec
mov
dec
mov
xchg
stos
cwtl
xchg
fmul
mov
mov
lock
and
ret
jns
jmp
mov
pop
imul
mov
pop
cmp
outsl
or
pushf
in
loopne
loop
add
lock
aad
xor
pop
cmp
pop
dec
push
jg
stc
aas
xchg
jl
mov
idivb
xchg
aad
je
xchg
inc
inc
xor
mov
push
sub
dec
jb
push
jo
aad
sbb
mov
sahf
ret
ret
xor
adc
cmpl
cltd
pop
push
or
dec
xchg
scas
dec
jo
call
jmp
cmp
lock
add
xchg
and
scas
adc
movsb
mov
dec
iret
jbe
sbb
js
dec
jmp
sbb
jno
outsl
xlat
jl
or
xchg
popf
pop
lds
test
loopne
or
dec
mov
test
ja
add
inc
push
xchg
pushf
daa
inc
imul
cmc
lock
jecxz
inc
and
and
cmp
xchg
mov
repz
in
fwait
sti
inc
sbb
shll
incb
aam
jg
or
hlt
aaa
push
shll
push
call
xchg
aaa
outsl
push
adc
xchg
inc
data16
sahf
xchg
mov
mov
adcb
es
mov
ss
into
inc
lret
or
out
pop
insl
stos
fwait
push
movsl
mov
test
fadd
test
pop
std
or
sub
xor
push
repz
into
mov
and
incb
aad
ret
lret
jge
jmp
jno
jle
xchg
mov
ja
out
fcomps
aad
fidivl
or
jl
dec
pusha
add
movsb
outsl
xchg
inc
mov
addb
inc
pop
xor
fildll
call
push
rorl
fs
mov
daa
pop
sbb
shlb
xchg
test
daa
xor
popa
stos
and
mov
xchg
out
lcall
ret
cmp
aad
inc
mov
dec
push
mov
std
jp
add
cwtl
fnstenv
ror
psubq
sub
out
clc
mov
clc
sub
sub
jae
sti
adc
enter
and
dec
mov
sub
jnp
adc
hlt
pop
in
nop
insl
sub
push
sbb
mov
mov
adc
pop
rorl
add
setl
test
jbe
shr
les
sub
dec
loop
mov
imul
ds
icebp
adc
jno
adc
mov
push
mov
jp
mov
enter
addr16
inc
rcl
sub
cli
movsb
dec
pop
testb
jge
sysexit
jnp
call
fldcw
dec
sub
push
inc
mov
sbb
push
pop
dec
lock
mov
inc
imul
loope
pop
call
inc
std
or
nop
sub
jnp
ja
mov
jno
dec
and
jmp
test
mov
test
and
push
enter
call
adc
inc
cmpsl
cli
negb
pop
testb
cwtl
inc
insb
mov
pop
xchg
mov
iret
gs
cmp
jae
les
pop
subb
pop
repnz
orb
sarb
xchg
mov
mov
jo
mov
jmp
cmpl
pop
adc
pop
adc
or
out
cmc
fwait
movhlps
adc
cmp
rcrl
test
scas
inc
gs
sub
dec
pop
cltd
and
push
scas
adcl
addr16
mov
dec
mov
mov
adc
inc
fidivl
pop
pushf
daa
xlat
jae
out
cwtl
fstpt
adc
xor
xchg
out
sarb
insl
push
loop
dec
clc
sbb
xlat
pop
inc
sub
mov
pop
xorb
sub
repz
outsb
jnp
adc
cmp
faddl
into
jl
jb
adc
lods
mov
mov
cltd
daa
xor
pop
dec
jl
in
call
in
cwtl
add
xor
fsubrs
xchg
xlat
mov
fsubr
add
lea
movsb
or
xor
enter
inc
jl
ss
jle
lods
mov
mov
fadds
add
and
gs
cwtl
incb
and
adc
xchg
mov
pop
in
sbb
jge
dec
arpl
call
add
and
lcall
movsb
ja
add
es
incl
push
sub
ja
imul
push
mov
icebp
fiaddl
cmpb
ljmp
xor
inc
mov
test
mov
stos
inc
mov
arpl
pop
in
repnz
fcmovu
lret
xor
cmpl
mov
mov
cltd
sbbb
and
inc
movsl
lea
xlat
imul
add
js
testb
mov
stos
pop
dec
clc
xchg
idivb
movsl
das
pushf
xor
fisubrs
jl
push
scas
inc
jbe
dec
inc
fsubs
call
mov
loop
fsubl
or
jnp
scas
sub
subl
or
xchg
stos
inc
or
cwtl
stos
fcoml
jmp
add
push
cltd
pop
loope
jecxz
pop
sbb
aaa
sbb
xchg
fdivl
bound
int
adc
fstpt
lret
dec
mov
in
loope
aad
pop
lea
mov
sbb
lds
not
lret
adc
inc
xchg
cmpsl
jge
shrl
sahf
jb
daa
push
mov
leave
pop
hlt
dec
hlt
sbb
and
ret
pop
into
idivl
cld
inc
dec
add
outsb
popa
lea
sbb
sbb
mov
sub
cmp
addr16
inc
inc
pop
test
icebp
and
sbb
pop
leave
and
mov
mov
jno
add
fiaddl
and
or
sub
lret
inc
pop
notl
inc
xchg
fstp
sahf
lds
jae
cwtl
shrb
adc
jo
xor
push
aaa
push
jle
pop
dec
fnstcw
cmp
jg
inc
clc
mov
loopne
mov
sbb
cmp
movsl
sbb
or
fsubl
faddl
in
dec
xor
ror
dec
cmp
popf
jg
add
mov
xchg
jl
lea
dec
sahf
mov
bound
mov
fnstsw
in
flds
inc
dec
add
aaa
lret
cmpsb
adcl
xchg
imul
ficoms
in
fidivs
daa
and
xchg
fildll
insb
push
dec
mov
test
fisubs
fdivrl
mov
xchg
sbbb
xor
jecxz
int
adc
shll
hlt
cmc
push
movsl
fmul
fiadds
mov
into
das
cmp
ret
imul
sbbb
push
jbe
mov
cmp
inc
mov
xchg
mov
fisubs
jmp
sarl
out
imul
sti
xchg
test
xlat
insl
rcrl
sub
mov
inc
js
jecxz
mov
xlat
add
outsl
or
cmp
sub
into
push
push
shrl
subl
in
push
sub
jno
sbb
push
adc
bound
sbb
nop
dec
xor
mov
mov
adc
cld
cmp
test
xor
mov
mov
repz
push
aam
push
andl
in
movsb
xchg
push
jge
mov
pop
inc
sub
fs
fiaddl
cmpsb
cmpsb
jle
ss
je
lea
sbb
sub
mov
imul
push
sbb
shlb
ret
fs
jg
mov
jne
cmp
jecxz
test
inc
xor
iret
fnstcw
fdivs
out
lods
mov
aad
sbb
sbbb
in
cmp
daa
cmp
sub
mov
xchg
pushf
ljmp
lock
out
xor
xchg
dec
mov
in
daa
mov
push
add
mov
mov
rcrb
imul
icebp
imul
mov
adcl
cwtl
and
dec
fildll
jg
cmp
int3
push
mov
and
out
popf
jg
sbb
fs
fnstenv
dec
pop
push
divb
sub
lods
cmp
lock
add
jge
push
mov
decb
cmp
adc
and
je
jmp
adc
pop
jle
fldt
cld
mov
insl
andl
sbb
pminsw
out
cmp
xchg
in
jge
push
into
sbb
outsl
push
jbe
cmp
outsb
cmpsb
adc
lret
mov
lock
in
cmp
pop
mov
popf
push
dec
pop
push
out
pop
jne
cmp
jg
shr
adc
pop
dec
cmp
dec
jns
std
in
mov
fsubrl
inc
popa
js
gs
mull
dec
xchg
and
cs
cmpsl
imul
addl
pfnacc
subb
pushf
jmp
into
mov
dec
mov
adc
inc
cmp
sbb
add
insb
push
repz
mov
push
cmp
stos
mov
mov
pop
into
adc
int
xchg
mov
flds
cs
sbb
mov
xor
idivl
inc
nop
sar
test
and
clc
and
dec
adc
sbb
cmp
ror
adc
or
fildll
adc
mov
test
mov
pop
ss
and
jg
jno
es
cmc
cmpb
repnz
add
dec
mov
andl
push
pusha
cmp
movsl
cmp
fisubrs
addr16
inc
test
push
out
dec
and
dec
movsb
jmp
mov
dec
push
mov
mov
lds
sbb
mov
inc
pop
aaa
pop
mov
popa
push
pop
in
or
cmp
mov
ret
or
mov
imul
popf
pop
push
stc
aad
xchg
mov
inc
loop
je
clc
or
inc
movsb
leave
incb
xchg
xchg
hlt
jmp
std
jns
mov
outsb
mov
popa
or
pop
outsl
test
pop
mov
ret
xchg
and
rcl
add
scas
push
or
mov
sbb
pop
inc
ror
xor
push
add
imul
jns
mov
orb
push
sbb
inc
test
inc
pop
cmp
and
adcl
es
call
ret
jecxz
add
mov
mov
call
adc
pop
pop
xor
popa
or
test
jmp
std
inc
jp
pop
xor
cltd
sahf
push
loope
inc
enter
pop
lret
fisttps
mov
outsl
aam
dec
aaa
scas
fucomip
dec
pop
out
xchg
sbb
dec
pop
dec
fidivrl
int3
gs
dec
sub
mov
loopne
aaa
sbb
es
lds
negb
data16
nop
hlt
mov
pop
in
out
jp
test
lods
mov
imul
fldl2t
or
lock
add
out
mov
fadd
test
aas
mov
arpl
jae
pop
adc
push
es
fistpl
mov
mov
lods
pop
shrl
sbb
clc
sti
test
add
dec
cmp
jno
movsb
mov
adc
jl
cmp
push
stc
lret
xlat
fidivrl
loope
pop
pop
sub
lcall
jecxz
sbb
or
cmp
dec
stc
sarb
mov
and
push
jmp
leave
pop
jmp
int3
scas
xchg
push
mov
push
mov
popf
cmp
push
lahf
mov
or
call
dec
mov
popf
or
pop
push
xchg
adc
idiv
xchg
sub
mov
inc
or
adc
divb
andb
aad
xchg
mov
lods
ret
sahf
pop
sbb
adc
aaa
push
pop
adc
or
into
gs
test
or
in
jp
in
arpl
xor
shrl
stos
les
and
mov
rcrb
nop
xchg
inc
push
fdivs
mov
add
and
push
pusha
shrb
dec
mov
adc
in
outsb
pop
lock
lds
and
add
adc
pop
lret
scas
push
dec
aaa
fnstcw
or
movsl
inc
push
and
loop
xchg
je
push
inc
stos
daa
rorb
pop
ljmp
and
push
push
jnp
dec
ficoml
fimull
lret
jne
cmp
hlt
jbe
mov
sbb
es
jo
pop
data16
mov
sbb
sub
pop
sbb
pop
repz
pop
outsb
jnp
sbb
add
js
inc
mov
push
lods
jns
popf
cmpl
push
add
movb
push
mov
sbb
and
inc
sub
lret
nop
pop
cmc
or
addl
lods
adc
push
pop
adc
push
ss
andl
mov
cmp
cmp
lds
xor
xchg
pushf
into
cmp
xchg
xlat
adc
dec
add
clc
jbe
sub
ret
fildll
jecxz
xor
sub
les
or
jg
cli
add
aad
mov
cvtpi2ps
push
dec
or
in
mov
inc
jmp
inc
sbb
sbb
ds
push
sbb
cmp
jge
mov
iret
dec
and
mov
mov
rcr
jmp
out
jns
sahf
stos
ja
push
lcall
add
in
mov
sbb
xor
imul
repnz
jge
outsb
pop
jle
fld
fimull
sub
push
cmc
pop
lods
sub
test
mov
jbe,pn
jae
push
xchg
sbb
add
scas
sbb
push
mov
repz
jl
mov
out
popf
aad
jmp
js
das
dec
dec
add
lds
lds
inc
dec
insl
ret
jle
in
scas
ds
movsl
test
pop
add
sub
dec
jle
sbb
jmp
push
dec
jo
pushf
cmp
mov
xor
pop
adc
loope
fs
sub
out
hlt
push
ret
fs
pop
lret
ja
jo
enter
clc
or
adc
sub
mov
and
mov
jbe
dec
test
dec
cmp
lods
cmpsb
jg
push
xor
and
pop
es
xor
pop
pop
lods
popa
in
dec
leavew
cmp
outsl
lock
sub
and
aas
inc
jae
sbb
mov
out
clc
lahf
test
and
or
inc
inc
cli
cwtl
movl
lahf
push
dec
mov
test
negl
scas
test
aam
sarl
imul
xchg
cwtl
loop
cmp
je
xchg
enter
rep
inc
outsb
inc
fsubs
out
jb
scas
fdivl
ja
movsl
push
ficomps
les
inc
int3
daa
arpl
push
mov
aas
adc
pop
lea
aaa
stc
imul
adcl
inc
mov
sbb
lret
push
call
cmp
jae
mov
jmp
sti
push
test
scas
mov
pop
lods
jmp
mov
popf
dec
sub
mov
xchg
mov
push
jae
mov
sbb
cmp
dec
xlat
ret
and
insb
sbb
test
nop
push
cmpsl
dec
inc
or
dec
jge
gs
into
addr16
xor
mov
lcall
inc
gs
test
fsts
out
mov
ret
cmc
stos
jg
lds
test
sub
mov
mov
inc
push
pop
fmull
mov
test
scas
out
std
or
in
push
enter
scas
les
or
dec
push
subl
cmp
dec
cld
outsb
mov
mov
mov
lea
dec
dec
out
stos
f2xm1
leave
int3
jecxz
adc
xchg
jmp
and
jge
stc
mov
stc
fs
ja
shrl
pop
jbe
dec
xchg
stos
sub
rolb
xlat
iret
das
mov
insb
add
mov
ljmp
inc
loopne
pop
popf
stos
or
mov
adc
in
pusha
inc
popa
xchg
jmp
cmp
imul
adc
jp
testl
add
pop
adc
pop
scas
mov
cld
xchg
cmp
cwtl
lds
leave
push
sub
inc
cld
mov
adc
cwtl
xor
in
mov
stos
aas
test
insb
ficoms
cmpsb
push
into
xchg
adc
xchg
mov
push
mov
add
adc
sahf
sub
mov
sub
jb
mov
xlat
sub
jp,pt
mov
dec
je
js
scas
call
sub
push
jmp
pop
jae,pn
xchg
pusha
shrb
int3
adcl
jecxz
and
push
out
cld
imul
fbld
inc
repz
mov
jmp
xor
pop
dec
xchg
imul
outsl
xchg
sub
shrb
bound
sbb
push
push
fs
lea
jecxz
stc
sbb
outsl
add
repnz
decl
add
add
inc
pop
mov
push
jmp
jle
out
add
jmp
or
add
cmp
mov
xor
popaw
cld
pop
mov
pop
scas
inc
mov
int3
jg
popf
dec
add
xor
inc
lock
daa
pop
fld1
inc
das
dec
pop
mov
sbb
pop
dec
clc
adc
mov
add
push
xchg
cmpsl
mov
inc
or
cmc
test
lea
xchg
sub
pshufw
jb
and
imul
dec
dec
xchg
inc
cmp
clc
jae
sahf
push
xor
mov
in
inc
adc
mov
movsb
aaa
cmp
pop
addb
or
xchg
int3
mov
mov
push
xlat
xchg
popa
inc
mov
call
mov
cmp
mov
mov
cmpsb
je
mov
dec
scas
call
movsl
jl
sub
ds
int3
mov
mov
rclb
int3
fdivs
pop
pop
mov
int
cltd
ss
shlb
cltd
je
xchg
jecxz
testb
pop
push
adc
leave
movsl
cmp
es
hlt
mov
jae
pop
fstpt
or
leave
adcl
push
jecxz
lock
xor
imulb
push
fbstp
fldt
scas
add
mov
sbb
ja
dec
rcrl
into
cmpl
out
sbb
popa
mov
les
adc
cmp
stos
clc
push
xor
xchg
cmp
mov
pop
lock
fidivs
push
adc
cmpsb
xchg
mov
mov
bound
jno
pop
push
stc
popf
sbb
jmp
lcall
inc
call
gs
pop
out
leave
vmovshdup
sbb
imul
imul
aas
into
sub
inc
push
pop
sub
sbb
fcmovne
cld
or
pushf
mov
loopne
cmc
lret
or
in
repz
pop
adc
push
mov
enter
pop
inc
pusha
dec
cmp
push
rcrl
std
adc
popf
xchg
sub
push
inc
fists
js
mov
sub
push
lret
cld
or
push
pop
mov
xorl
sbb
dec
push
shll
push
subl
test
push
and
cmp
popa
cld
adc
and
clc
imul
data16
mov
es
and
mov
xor
push
das
adc
shrb
fldlg2
movsl
in
cmpsl
mov
jge
in
insb
clc
pop
and
push
pop
movsb
pop
testb
scas
mov
or
lods
in
out
pop
add
enter
cmpsb
cmp
inc
and
or
xor
jmp
mov
add
sub
sbb
lods
ljmp
pushf
mov
xchg
and
or
ret
les
and
push
push
lahf
jl
xchg
js
iret
push
cmp
pushl
push
sbb
jge
pusha
scas
xor
sub
scas
in
das
jne
push
inc
cld
pop
xchg
xor
sub
stos
repnz
add
mov
in
add
mov
dec
mov
fs
adc
les
xchg
jp
sbb
cltd
lret
add
jne
in
pusha
pop
pop
arpl
into
inc
rorl
push
loopne
cld
fmuls
jp
and
xchg
dec
push
and
sub
cmc
roll
cld
mov
mov
out
repz
sub
fldl
test
shlb
jne
jno
mov
mov
stc
enter
ds
mov
cs
sbb
ret
ffreep
stc
dec
pop
push
xchg
orb
push
push
cwtl
pop
vpmullw
dec
mov
cmp
add
fbld
or
pop
mov
pop
sahf
inc
sub
jbe
movsb
cmpsl
js
sbb
jb
or
roll
add
pop
ds
mov
jecxz
dec
loop
test
or
imul
sbb
sub
dec
lret
imul
mov
xor
stos
mov
sbb
jb
ja
fs
inc
addr16
pop
decb
or
std
cltd
mov
pop
in
test
aad
mov
mulb
out
jns
mov
pop
flds
mov
mov
roll
std
push
iret
ficoms
push
cmpl
pop
in
test
rorl
add
mov
adc
mov
dec
mov
sbb
push
sub
inc
fwait
sbb
stos
stos
int3
fadds
sahf
jecxz
sub
or
mov
xchg
adc
mov
mov
push
pop
mov
xor
je
xchg
insb
or
jo
push
jb
dec
test
dec
movsb
xchg
or
movsl
sub
add
cmc
jmp
dec
xor
jmp
mov
sbb
int
out
fcoml
cmp
in
test
cmp
mov
sub
pop
push
lret
xor
jl
repz
sub
dec
leave
mov
mov
sub
xchg
das
iret
stos
inc
add
xor
add
xor
insl
sub
aad
out
out
lods
orb
push
inc
subb
xor
push
test
dec
ret
cmpsl
xor
push
fcomps
jg
cltd
xor
sahf
xchg
xor
repz
and
scas
inc
pop
jno
pop
loop
mov
jns
push
or
mov
push
adc
push
adc
push
xchg
push
mov
scas
xor
loopne
dec
pop
je
mov
pop
add
inc
push
idivl
jbe
mulb
mov
andl
pop
je
into
movsl
jns
sti
mov
andb
sbb
decb
xor
inc
popf
out
in
ljmp
mov
shr
bound
stos
dec
sbbb
jmp
clc
call
andb
push
sub
ds
jbe
test
adc
lret
pop
ljmp
sbb
or
jnp
push
cs
jae
push
ficoms
cli
xchg
lea
sbb
out
and
push
call
jge
sbbl
stos
call
es
pop
sbb
dec
push
inc
hlt
sub
out
sbb
dec
mov
or
arpl
mov
clc
add
and
test
ljmp
rclb
insl
aam
test
lds
lds
divb
jne
out
fisubrs
fwait
jae
mov
bound
scas
mov
fidivs
loop
cwtl
inc
das
inc
jb
outsb
add
ss
jbe
out
push
push
push
push
xor
inc
sti
jecxz
movsl
mov
mov
aad
jns
loop
and
fldcw
lret
pop
mov
pop
movsb
cli
push
mov
js
sbb
and
adc
stos
fs
dec
inc
jg
out
in
or
dec
mov
rcrb
aad
sbb
stos
dec
fcomip
xchg
rcll
push
fs
iret
dec
jle
inc
jecxz
dec
cmc
mov
sub
jmp
inc
mov
and
imul
mov
jbe
aam
rolb
std
lods
inc
out
pusha
ss
ret
pop
roll
into
inc
fimuls
mov
cli
push
mov
sti
dec
clc
out
mov
pusha
jmp
insb
sbb
cmpb
scas
fildl
xorl
sti
add
inc
loope
stos
and
std
insb
mov
sbb
push
push
lds
pop
std
fistpll
dec
out
sub
xchg
jns
repz
push
test
mov
xrelease
cmpb
adc
pop
inc
repz
push
jmp
sub
shrb
mov
mov
aam
dec
adc
push
inc
xor
adc
xor
enter
xchg
xchg
jecxz
mov
xchg
inc
inc
arpl
aam
les
mov
xchg
mov
jmp
sub
fwait
lret
ret
cs
notl
xor
lds
xor
mov
jp
or
xor
mov
xor
lret
jg
cmpsl
mov
mov
and
xchg
sti
pop
sub
les
repnz
pop
jo
push
cli
daa
lcall
in
dec
xlat
dec
cmpsb
les
out
cmpsb
xorb
fwait
lcall
mov
loop
in
mov
pop
mov
in
xor
jnp
leave
mov
push
push
jecxz
pop
adc
gs
pop
outsb
xor
mov
daa
or
jnp
add
and
sub
out
cld
daa
repnz
icebp
mov
lods
lret
stos
and
lret
xor
jge
mov
or
mov
cld
lods
xor
adc
mov
shlb
xor
push
call
mov
aad
and
pop
test
and
xchg
dec
ja
or
scas
mov
in
xor
loop
stos
adc
rorb
inc
fdivr
jp
addr16
xorb
pop
aas
mov
adc
add
xor
lret
lret
dec
loopne
and
inc
inc
cltd
pop
scas
out
xchg
ss
psubd
loope
xchg
or
clc
test
push
out
sbb
inc
orb
and
sub
xchg
ds
aaa
orb
jne
out
das
shlb
fwait
in
push
cli
jmp
outsl
fs
lea
lahf
mov
std
or
aas
or
dec
shll
arpl
daa
stc
mov
adc
and
xchg
das
gs
gs
mov
ds
popf
xchg
cmpsl
aas
ret
mov
inc
in
inc
in
mov
cmp
add
mov
insb
pop
xor
dec
rcrl
testl
inc
leave
clc
jne
enter
jne
jl
mov
sbb
jno
cmp
iret
lahf
stos
imul
adc
mov
nop
inc
push
aad
jnp
mov
jmp
lahf
fbstp
or
lea
pop
mov
xchg
adc
jmp
xor
mov
mov
adc
enter
movsb
scas
leave
dec
stos
enter
dec
sub
push
scas
cmp
dec
hlt
xor
fcmovnbe
cwtl
cmpl
out
add
sub
pusha
pushf
dec
pop
rep
movsl
mov
clc
lods
mov
cli
pop
js
dec
xor
rcr
jecxz
and
lret
dec
cmp
addr16
mov
cwtl
jecxz
inc
fsubr
stos
add
popa
imul
xor
ds
das
xchg
push
push
xchg
lds
insb
xchg
ljmp
es
les
and
gs
out
push
in
xlat
and
jns
add
sbb
int
push
loop
rorb
sbb
jno
or
sbb
mov
mov
aaa
xlat
inc
lods
push
xchg
adc
stc
mov
add
push
pop
andb
movl
lret
mov
outsl
or
testl
aad
push
insb
mov
mov
ret
sarb
ja
je
cmpsb
jge
jnp
cmp
fwait
xor
dec
mov
pop
int
dec
mov
mov
xchg
sub
sub
in
xchg
jo
xor
jmp
and
leave
scas
cmp
ljmp
sub
das
repnz
movsl
pusha
aam
dec
push
in
pusha
and
insb
scas
pushf
sbb
js
sbb
mov
adc
mov
or
xchg
xchg
or
push
popf
sbb
mov
fidivs
push
std
dec
pop
in
es
mov
orl
andb
movsl
fwait
gs
and
push
mov
aas
es
sarb
push
push
in
clc
adc
xor
jne
inc
fstpt
stos
sti
mov
xor
aam
sub
arpl
ds
popa
jecxz
mov
pop
mov
sbb
in
jo
out
stc
fs
mov
mov
dec
pop
and
mov
jmp
mov
sub
shll
iret
pop
outsb
xlat
push
subb
sbbl
notb
lods
ds
and
adc
lods
sti
cwtl
aaa
sbbl
cmp
fstpl
push
shll
jg
fdivl
lds
sti
scas
imul
sti
inc
cmpsb
test
push
mov
inc
push
adc
jns
aam
loop
pushf
push
dec
push
mov
std
dec
loopne,pt
ss
xor
ja
ds
push
shll
in
out
sti
and
out
mov
bsr
inc
adc
mov
int3
ds
lret
xchg
out
stos
jae
in
push
mov
adc
ret
in
sbb
repz
dec
insb
adc
add
add
push
out
sub
jbe
cmp
cs
cltd
mov
cmp
insl
clc
popf
sti
mov
dec
cmpsb
inc
or
sbb
xor
in
int3
adc
push
cmc
and
clc
mov
xchg
xchg
push
mov
in
sub
test
js
stc
jge
movsl
pop
add
imul
outsl
xchg
mov
or
sbb
cmp
inc
pop
out
aas
pop
int
xchg
add
or
dec
lahf
xchg
xchg
xchg
pop
adc
mov
ljmp
xor
stos
pop
add
shll
gs
repz
inc
mov
stc
mov
xchg
mov
mov
cs
mov
dec
cmp
sub
cmp
rolb
and
cmp
push
jp
ret
adc
xlat
ljmp
mov
dec
mov
ret
or
ds
out
sarb
inc
mov
xor
out
cwtl
movsl
outsl
cmp
fs
mov
std
mov
cli
or
jle
and
xchg
sub
dec
mov
shl
pop
inc
add
cmp
rcl
in
sti
roll
loop
in
inc
ljmp
sbb
jnp
pop
inc
or
mov
div
inc
pop
popf
and
mov
fldcw
cld
je
aas
pop
sbb
andl
test
in
loopne
xchg
aaa
mov
movsl
pop
pop
in
sub
pushf
out
in
jge
xor
cmc
pusha
sub
js
push
cmp
push
mov
push
cmp
push
ret
cwtl
pop
push
cmp
and
jne
stos
xorb
xlat
in
jl
xor
jnp
and
cmpsl
mov
mov
or
in
mov
lock
dec
dec
bound
inc
xchg
insb
rolb
xchg
adc
cmpsl
call
inc
mov
dec
int
jge
mov
inc
test
mov
pushf
fs
mov
mov
fstpl
loop
or
popf
sbb
sbb
aad
mov
push
movsb
pop
and
rcr
inc
aas
add
loop
dec
and
push
lock
adc
pop
mov
adc
add
xchg
xchg
outsb
loope
aas
mov
mov
jp
push
iret
es
jbe
mov
pusha
inc
mov
dec
aad
sti
loope
notb
and
into
lea
or
sahf
aad
jne
push
jb
arpl
push
leave
jne
add
or
dec
in
testl
insl
pop
push
mov
dec
mov
aad
sbb
and
andb
scas
fwait
add
loop
adc
mov
sbb
sarl
mov
lea
insl
cmpb
leave
iret
lahf
adc
movb
movsb
sarb
out
test
mov
out
test
aam
xchg
rorb
ds
lret
inc
repnz
lret
jb
mov
cmp
pop
scas
jb
sbb
nop
aam
rcrl
pop
mov
call
int
xor
js
aam
dec
cs
in
push
fmull
out
mov
fldt
fwait
iret
sbb
mov
mov
aaa
push
stos
adc
es
inc
fimuls
ss
xchg
sub
je
adc
ds
fwait
adc
cmp
jecxz
pusha
jp
mov
in
test
mov
ret
shrb
xchg
jmp
leave
push
adc
cld
lods
inc
xor
loope
ret
mov
jbe
idivl
mov
mov
lret
jge
xchg
cwtl
push
lcall
setg
cwtd
sbb
icebp
ret
add
cltd
ljmp
das
inc
lock
cmp
pop
xor
pop
cmpsl
ret
jp
ret
fistpll
or
xor
inc
adc
mov
jne
daa
mov
data16
jb
push
pop
nop
sub
pushf
cli
pop
pop
add
push
testb
fiaddl
cmp
pop
sahf
jae
fidivl
jmp
cli
xchg
movsl
cmp
daa
shrl
inc
pop
ss
inc
or
sub
inc
jns
pusha
imul
scas
shrb
pusha
insb
mov
cmp
mov
cmpsl
sbb
cs
lcall
xor
int
push
test
cmp
icebp
dec
fsubr
idivl
movsl
ja
stos
and
nop
jnp
mov
mov
jge
inc
jno
fs
push
xor
pop
push
cli
push
out
mov
mov
mov
pop
xor
fildll
mov
and
cs
enter
clc
jmp
fstl
repz
pop
in
repnz
in
fdivl
inc
sub
xchg
adcb
mov
addb
std
add
imul
xchg
adc
in
add
push
mov
rol
push
out
cmp
push
scas
inc
aaa
decb
jecxz
jae
jle
ljmp
xchg
xchg
xchg
popa
les
sub
xor
jb
mov
adc
test
xor
cltd
or
mov
mov
test
mov
fcomps
jmp
fnstenv
aas
or
add
xchg
mov
sub
daa
jg
cmpsl
cmp
jg
adc
cli
mov
scas
pop
movsl
aaa
pusha
mov
xchg
jns
xor
bound
xchg
fcmovbe
jmp
lea
push
movsb
add
add
dec
cmp
aas
sub
push
add
mov
adc
cmp
mov
icebp
cmp
xchg
cmp
out
xlat
mov
adc
fimuls
stos
gs
sbb
bound
add
dec
imulb
fcomp
in
jmp
sub
dec
jl
mov
sub
in
sti
ds
push
insb
mov
mov
ret
jl
aas
or
xchg
cli
sub
xchg
nop
fsubs
ja
push
call
jns
bound
mov
push
xlat
scas
sbbb
jg
dec
mov
pop
ret
cmpsl
repnz
mov
dec
jb
insl
sti
lods
ljmp
xchg
into
push
xor
xor
popa
out
ret
out
aad
ja
iret
ss
test
in
and
stos
imul
mov
stc
leave
and
or
test
test
test
mov
arpl
inc
int
pop
ljmp
mov
push
or
cmp
sub
xor
cmp
repnz
or
cltd
and
les
push
aad
stos
cmc
add
fmul
jno
mov
dec
adc
shrb
sbb
sbb
sub
xchg
mov
popa
dec
inc
in
jge
adc
dec
sahf
xor
mov
sub
sub
rclb
in
xor
add
mov
lcall
fstl
addr16
jg
inc
movsb
repnz
or
push
out
pop
scas
sbb
lret
xor
lods
outsl
push
mov
and
cmp
or
sub
lcall
mov
add
fs
or
cmp
lret
imul
xor
jno
mov
xchg
xor
add
orb
jbe
in
push
xchg
pop
inc
jmp
gs
rol
lahf
cmpsl
add
mov
sarl
mov
mov
das
inc
inc
ret
hlt
insb
sarb
jg
bnd
mov
les
lds
or
jns
ljmp
mov
mov
roll
hlt
mov
mov
in
test
cmp
mov
push
or
or
pushf
cmc
xor
mov
in
popf
mov
pop
pop
xor
xchg
int
and
xlat
mov
fstps
enter
mov
sub
sub
lcall
ret
jno
mov
inc
mov
push
mov
out
xchg
inc
fstl
add
fiaddl
inc
push
or
xchg
inc
repnz
popl
adc
jl
aad
push
adc
sti
sti
cli
fwait
push
xor
push
loop
jmp
gs
inc
fcoms
call
mov
mov
addr16
and
dec
mov
xchg
jl
hlt
push
mov
dec
lods
xchg
notl
adc
jl
or
pop
aaa
xchg
push
fadd
lea
in
jbe
mov
or
mov
sahf
xor
mov
inc
loopne
mov
adc
call
js
pushf
daa
ljmp
addr16
xor
mov
sub
jle
jo
xor
cmp
sbb
je
lahf
loop
inc
imul
enter
mov
subl
inc
sbb
fdivs
push
fsubr
xchg
pop
into
xchg
sub
outsb
call
cmp
mov
adc
sub
sub
adc
and
icebp
push
imul
push
add
mov
sbb
cltd
std
mov
and
int
pushw
outsb
rolb
imul
mov
icebp
out
jae
xor
test
push
jns
mov
mov
mov
add
daa
jmp
movsb
int3
xor
jmp
into
jns
imul
ja
sbb
scas
adcb
stc
push
dec
cmpsl
mov
dec
aam
out
addr16
ss
xor
mov
add
xchg
adc
pop
mov
shrl
aam
mov
out
sub
jg
xor
add
fists
sbb
aam
js
xor
dec
movsl
push
cltd
mov
and
in
inc
and
int3
ss
inc
mov
bound
push
push
stos
or
mov
adc
adc
pop
mov
pop
movsl
arpl
fidivrs
shll
pop
xor
pushf
ljmp
pop
inc
push
push
sarb
and
dec
add
hlt
lea
cmp
lea
pop
int3
das
shr
popa
adc
orb
repz
cmp
lcall
jmp
scas
push
sub
sub
addr16
cmp
pop
inc
lret
dec
in
inc
jne
cwtl
shlb
adc
ss
xor
jmp
jnp
push
fcomip
out
mov
aad
in
lock
pop
lods
cmpl
loop
and
push
scas
inc
add
push
loop
and
pop
jge
mov
ret
and
add
sub
xor
sti
fldt
push
mov
inc
xchg
ljmp
call
ja
and
fbld
dec
adc
dec
pop
adc
test
in
rcl
outsl
mov
cli
and
push
cli
cmpb
js
movsb
xchg
cltd
mov
inc
mov
cli
rcrl
mov
adc
rorl
insl
shl
sahf
push
mov
leave
mov
pushf
add
xchg
xchg
push
jmp
mov
sub
mulb
mov
sbb
push
out
es
cmpsb
es
imul
inc
aaa
stos
inc
movsl
in
lret
mov
and
shrb
enter
sbb
dec
sbb
iret
cmpsb
in
xchg
xor
xchg
lcall
pop
push
jp
mov
xchg
mov
xchg
cs
dec
adc
ss
xor
aaa
daa
push
clc
popl
push
lods
xchg
xor
xlat
std
icebp
icebp
movsl
and
dec
mov
mov
sub
adc
xchg
inc
inc
add
stc
mov
adc
lret
test
sub
sbb
adc
mov
or
les
add
inc
fcmovnbe
mov
sub
aaa
add
sub
push
scas
jno
mov
jno
out
mov
iret
mov
rcll
or
shrl
cmp
adc
add
test
daa
data16
and
add
dec
and
popf
add
sahf
clc
and
fsubrl
xor
icebp
xchg
dec
mov
negb
iret
xor
stc
nop
pop
inc
jb,pn
jno
add
jne
adc
jne
pop
lea
cld
and
outsb
cmc
mov
addr16
jb
push
add
pop
pop
into
arpl
mov
or
mov
inc
jecxz
mov
daa
test
add
and
and
lea
push
mov
ss
lods
iret
xchg
scas
lds
rcrl
add
icebp
ds
iret
mov
sub
adc
lods
cmp
adc
outsb
pop
mov
jecxz
ss
xchg
punpcklbw
cltd
inc
lret
aam
shll
aas
mov
mov
inc
iret
xor
lahf
sub
or
notl
int3
cmp
nop
push
movsl
js
xor
lods
add
push
jg
pop
repnz
loopne
add
clc
add
cld
imul
sub
pop
mov
dec
inc
fildl
aas
dec
insb
and
das
fstl
cmpsl
hlt
in
xchg
mov
xor
lret
cli
in
push
sub
out
test
mov
rcll
or
jb
xor
jns
es
mov
dec
mov
cld
leave
xor
mov
rcl
test
test
imulb
mov
jge
or
push
inc
and
rorb
popf
lret
xor
xchg
js
jl
outsl
xchg
add
popa
sbb
mov
add
clc
mov
fnstenv
push
ret
jle
xor
mov
shll
push
jp
lods
lds
xor
gs
scas
ss
fidivs
mov
jecxz
scas
std
mov
pop
xchg
inc
jecxz
jg
fs
popa
adc
cld
xor
in
inc
mov
cmp
sbbb
fldl
mov
xor
dec
xchg
inc
mov
xchg
cmp
push
ficoml
shlb
repz
pop
jmpw
push
call
dec
cld
outsl
ret
xchg
insl
in
insl
jnp
scas
in
dec
and
mov
cld
xlat
cmc
sbb
inc
roll
dec
popf
mov
mov
mov
stc
push
dec
pop
push
mov
idiv
in
pop
pop
pop
jl
stos
mov
fwait
cli
andb
mov
dec
mov
popl
jecxz
pop
sbb
inc
dec
pop
movsb
les
aam
pusha
xchg
mov
push
in
cmpsl
xchg
or
xchg
mov
dec
loopne
push
push
cmpsb
mov
mov
testl
jg
js
mov
test
lods
mov
and
adc
adc
shlb
or
fcomip
stos
xor
sbb
pop
lcall
or
lods
jg
jmp
dec
push
int3
mov
sbb
pop
les
lds
inc
dec
add
test
in
jmp
push
data16
mov
fdivrs
pop
inc
aad
jmp
mov
push
dec
or
rol
pop
jnp
push
test
pushf
jecxz
out
sbb
xchg
mov
sub
mov
xor
lds
inc
in
iret
add
leave
addr16
out
or
scas
bound
js
cmc
mov
jbe
pop
cmpsb
adc
xor
jle
aaa
out
jnp
and
mov
repz
dec
add
fsubrl
pop
repz
mov
xor
movsb
shrl
test
pop
jmp
and
cwtl
movsb
arpl
pop
sbbl
cltd
jp
decb
test
das
mov
lea
lods
cli
cmp
add
xchg
ja
jns
out
rcrb
fidivl
insb
lcall
repnz
xor
cs
sub
lea
rcrb
shlb
push
cli
notl
xorl
mov
xor
push
sbb
push
jp
adc
adc
ret
movl
jp
mov
fwait
mov
movsl
int
mov
mov
int3
insl
xor
pop
testb
addb
sbb
lea
cmp
jle
xchg
sub
daa
cmp
pop
mov
out
push
dec
int3
dec
mov
jns
fcmovbe
lock
xchg
sbb
jg
cmc
push
mov
push
rol
adc
aaa
mov
xchg
and
xor
mov
xchg
sub
ja
inc
mov
add
push
sahf
lahf
popa
pushl
dec
jns
mov
mov
lods
enter
std
andl
mov
xchg
out
imul
dec
fisttpl
int
pop
cmpsl
ds
and
or
push
dec
dec
push
push
and
or
lcall
xor
push
test
cltd
test
stc
or
daa
mov
jmp
inc
inc
fmull
mov
adcl
xor
push
movsl
sbb
shlb
push
push
add
dec
loope
test
push
jno
out
outsb
pop
or
test
sub
arpl
mov
dec
fsubrs
outsb
xchg
cmpsl
inc
push
roll
ja
xchg
fmuls
or
jl
adc
mov
jb
mov
jl
and
push
cld
pop
fs
add
scas
inc
push
stos
jp
xchg
gs
addr16
adc
popa
icebp
int
shrl
cli
jnp
cld
dec
mov
std
test
mov
xor
or
idivl
pop
push
dec
ffreep
out
daa
data16
pop
idivl
adc
test
cwtl
mov
jne
cmp
cli
testl
gs
outsl
pop
pop
ret
aad
mov
aam
and
jbe
adc
aas
adc
xchg
sub
xor
loopne
mov
cmpsl
in
addr16
pusha
ret
lods
jns
test
jne
cltd
popa
pusha
jp
pop
orl
enter
cli
dec
mov
dec
bound
idivl
jae
sub
imul
jb
jb
je
and
lods
adc
fnsave
cwtl
cmp
repz
or
dec
pop
cmp
movsl
call
cmpsl
out
ja
fstl
dec
pop
cmp
stos
sub
inc
push
mov
insl
mov
insb
outsl
testl
stc
je
das
fwait
xor
fists
cmp
das
pop
adc
loope
pop
adc
test
pop
jns
xor
call
std
lret
es
arpl
jno
push
xor
adcl
insl
adc
outsb
push
sub
pusha
sbb
push
lret
hlt
cmp
repz
jo
push
repz
jle
mov
ffreep
adcl
add
lcall
test
popa
mov
ss
scas
in
insl
dec
dec
insl
push
aaa
int3
push
push
out
je
and
dec
imul
cmp
ret
fldln2
test
mov
fwait
dec
icebp
mov
into
push
popf
js
std
ja
insb
mov
add
xchg
mov
sbb
jle
out
div
lahf
gs
test
jo
xor
scas
add
jb
movsb
jmp
mov
shl
repnz
push
subb
jge
jl
dec
scas
push
add
mov
or
mov
push
ds
adc
fistpl
loopne
stos
pop
mov
sbb
and
insl
add
out
fistpll
test
push
sub
jle
push
mov
lea
jns
adc
mov
adc
loopne
or
xchg
xor
in
mov
cmp
stos
dec
mov
mov
divl
mov
push
dec
rol
mov
arpl
int3
push
popa
cmpsl
cmp
movsl
ret
push
repnz
cmp
mov
test
push
fsubp
lea
push
inc
test
jno
sub
and
adc
jg
mov
push
shlb
mov
call
pop
scas
cmp
mov
adc
fmuls
sub
pop
push
pop
data16
enter
sti
adcl
nop
pop
xor
dec
jg
arpl
add
pop
dec
fwait
cmp
test
mov
data16
jmp
std
shll
cli
sbb
xor
rcrb
pusha
das
dec
pop
outsl
mov
outsl
int3
mov
jns
outsl
sbb
sub
push
dec
dec
jbe
and
sub
fsubrs
movsl
or
mov
xchg
fs
fwait
cmp
les
add
sub
iret
xor
mov
dec
cmp
pusha
outsb
shrl
int
hlt
test
sub
pop
repnz
fcompl
mov
or
mov
jne
shll
fwait
call
cli
dec
loope
je
insl
jge
xchg
sub
lret
sarb
add
cmp
push
add
orl
jbe
out
out
sub
shrb
or
out
push
sbb
loop
add
movsb
mull
iret
andb
cmp
test
andb
sbb
pop
add
xlat
xor
roll
or
push
pop
xlat
jmp
mov
rclb
jo
rclb
push
lea
add
jg
pop
lods
fwait
js
mov
or
jg
in
add
adc
pop
pop
ss
negb
xacquire
call
es
and
imul
aam
jge
sub
insb
mov
fwait
int
sarb
lret
sahf
fstpl
lret
loope
cmp
xchg
stc
pop
sub
sti
lea
dec
loopne
repz
jae
pop
cmp
aas
cmp
mov
sub
mov
dec
xchg
mov
addr16
mov
mov
xor
sub
cmp
das
dec
das
push
dec
ret
jae
and
aaa
dec
aam
rol
dec
rorb
hlt
inc
cmpsb
inc
jb
arpl
lahf
xchg
sbbb
jne
inc
ljmp
jb
cmp
add
jbe
nop
cs
inc
sub
ret
xchg
xor
jg
aam
sbb
mov
testl
mov
lods
ljmp
pushf
cli
gs
mov
int3
psllw
lds
adc
sub
subb
cs
in
fistpl
push
int
fsubrp
and
sbb
inc
jp
pop
and
mov
xor
fstp
gs
pop
idivb
clc
pop
out
add
sbb
xor
xchg
dec
in
jmp
mov
movsb
inc
sub
in
mov
mov
movsb
rorl
es
push
hlt
sub
sar
sbbl
sbb
arpl
sbb
sub
dec
popf
push
fldcw
cmp
out
push
sbbb
loop
out
aas
bound
dec
xor
stos
arpl
push
or
andb
dec
stos
mov
jge
iret
data16
xor
add
lods
sub
push
pop
mov
xchg
mov
dec
int3
rorl
enter
cmp
push
push
jne
ret
adc
fidivl
mov
cwtl
dec
call
xlat
mov
mov
lret
adc
jbe
jno
aad
pop
loopne
imul
andl
mov
cmpsl
or
roll
jne
int3
push
and
pusha
mov
cmp
mov
movsb
add
xor
mov
or
movl
xchg
int
and
xchg
lea
cmc
mov
aas
stc
popf
icebp
dec
jae
rcll
mov
addr16
fldenv
cmc
pop
jb
mov
shr
je
fs
imul
ds
sub
xor
inc
xchg
bound
hlt
inc
mov
outsb
jecxz
jno
divl
stc
call
mov
jl
cwtl
outsb
adc
sub
mov
ficompl
jnp
push
or
idiv
stos
in
cmp
sub
fstpl
jmp
jg
cwtl
lret
fwait
push
mov
adc
cmp
sbb
dec
push
popf
jecxz
jmp
mov
mov
mov
out
push
insl
push
gs
rcll
xlat
in
mov
xlat
and
jle
push
sub
test
fs
mov
dec
ret
iret
push
xor
fildll
stc
cmp
divl
aam
push
push
push
out
inc
adc
popf
das
jl
fldenv
enter
xlat
pop
addr16
icebp
mov
add
push
mov
stc
imull
jbe
push
inc
or
mov
loope
lods
push
or
repz
pop
adc
nop
pop
adc
fidivrs
xchg
sahf
push
push
test
jae
cmp
jl
mov
adc
mov
jae
jnp
mov
cmpsl
dec
xchg
out
cltd
hlt
mov
jmp
pop
in
andl
sbb
dec
xchg
scas
jge
rcrl
jle
jb
mov
outsb
add
out
mov
adc
pushf
repnz
jmp
mov
mov
xor
loope
lock
or
int3
pop
out
in
sbb
push
pusha
xor
and
mov
adc
hlt
add
or
xchg
lods
mov
andl
mov
xchg
test
enter
cmpl
sub
jbe
sbb
les
cmpsl
push
and
loop
xor
add
push
imul
dec
push
mov
jo
xor
mov
cmp
notl
lcall
push
dec
push
xchg
addr16
mov
out
cld
lds
insb
int3
or
sti
xlat
shrb
push
push
sub
xchg
mov
dec
push
out
and
dec
mov
xchg
jns
popf
cmp
jbe
repnz
push
hlt
into
xchg
jbe
jge
jns
xchg
fs
insb
fwait
pop
imul
and
cmpl
push
int3
cltd
sub
test
inc
loope
filds
adc
xor
ret
loopne
pop
outsb
in
jmp
int
into
inc
lcall
lods
push
mov
push
scas
dec
push
rclb
add
push
pop
pushf
in
sub
in
dec
std
cs
push
dec
add
mov
dec
cmp
inc
sub
pop
mov
push
cmpsb
push
dec
push
adc
getsec
push
popa
bound
lods
mov
fdivs
push
pushf
mov
mov
lret
mov
sub
push
daa
xchg
jmp
data16
negb
movsb
and
inc
out
xchg
movsl
decb
jne
jbe
mov
push
inc
lea
pop
cmpsb
fidivs
ss
or
les
sub
push
sbb
pop
ds
mov
xor
sub
mov
push
fs
mov
movsl
xor
sbb
cmp
mov
xor
xchg
jp
int3
mov
bnd
adcl
leave
out
call
jp
ss
cmp
hlt
jns
mov
aam
push
push
dec
out
jne
shll
sbb
lods
mov
or
pop
push
test
mov
gs
cwtl
scas
ret
sti
packsswb
mov
sub
enter
icebp
xchg
imul
mov
sub
pop
mov
pop
and
das
inc
push
sub
jecxz
mov
cmp
divb
sub
push
test
sub
inc
sbb
pop
lds
add
enter
leave
mov
fsub
ljmp
ljmp
cltd
pop
cld
sbb
jecxz
out
mov
out
ds
aad
push
xchg
jb
mov
jb
xor
sbb
ds
aas
ret
mov
mov
inc
lods
sbb
loope
mov
out
cld
inc
jmp
jp
aaa
xchg
xor
push
int3
or
ljmp
bound
sti
mov
jns
adc
in
xchg
bswap
cmp
movsl
xor
ds
out
jne
lds
iret
fs
xchg
lock
sub
out
or
icebp
nop
sub
sub
pop
cli
sarb
jb
add
push
push
lcall
and
hlt
addr16
ret
xsaves
outsl
cmp
inc
cltd
cmp
mov
push
out
cmp
push
test
jmp
sar
js
pop
insb
push
mov
hlt
xchg
adc
and
sub
fmul
xor
xchg
ds
out
dec
and
pop
movsl
lock
xor
push
pop
push
mov
cmpsl
jns
inc
jo
nop
push
push
in
push
mov
push
jb
sub
test
pop
inc
fildll
outsb
mov
sahf
sbb
lret
mov
jmp
mov
and
cmpl
dec
sahf
jo
sahf
loope
stos
dec
adcb
sbb
enter
fs
pop
loopne
adc
pop
jo
xchg
imul
jns
in
and
pop
insl
andl
add
mov
test
int
xchg
push
lds
les
stc
andl
push
mov
cmp
sbb
imul
sbb
cmp
lds
fidivl
or
xor
into
mov
scas
push
pushw
addr16
inc
xchg
scas
stos
or
cmp
xchg
add
insb
sub
outsl
mov
or
push
ja
jnp
push
mov
mulb
push
push
leave
sbb
decb
aam
and
mov
or
cmp
inc
mov
xchg
cmc
shll
adc
test
mov
les
shl
dec
cmp
push
repz
or
xchg
popa
lahf
xchg
push
add
test
pop
repz
dec
dec
mov
out
pop
pop
mov
cmp
into
insl
ja
pop
sub
std
mov
dec
xchg
stos
repnz
call
dec
aas
test
cmpsb
push
jo
push
push
pusha
inc
dec
jecxz
lods
pop
cmpsb
das
stc
push
xor
js
mov
out
test
mov
lcall
in
stos
addl
aas
mov
inc
movsl
pusha
inc
clc
push
dec
rcrl
out
sahf
orb
sbb
push
sub
stc
and
es
jno
loope
or
mov
add
rcl
inc
mov
roll
sarb
or
adc
lea
stos
jmp
push
aam
pop
insb
lahf
bound
mov
gs
inc
stc
xchg
xchg
das
push
adc
test
sbb
push
shl
and
mov
fmuls
repnz
out
and
lds
aad
push
xchg
imul
popa
sbb
xchg
mov
add
loop
gs
jp
loope
jg
aam
or
ja
sarl
ljmp
xchg
fs
jbe
and
sub
xor
jp
arpl
xorb
in
es
in
int
mov
ds
std
inc
or
cltd
cmc
add
push
test
sarb
pop
mov
xor
daa
sarb
sarl
lea
divl
sbb
scas
cmp
cmp
lret
movsb
loope
sahf
xchg
inc
sti
pminub
push
push
in
inc
jb
inc
loopne
pop
cmp
jae
fcmovbe
or
les
out
sbb
jecxz
adc
ds
push
and
cmp
xorl
pop
mov
je
cmp
add
mov
mov
les
lahf
testl
adc
lret
js
sub
imul
test
lahf
pop
or
push
andl
hlt
outsl
adc
arpl
jns
dec
movsb
repnz
popa
sbb
mov
jbe
icebp
add
jo
cltd
repnz
out
mov
es
fsts
pop
cmp
ja
push
mov
inc
xchg
mov
or
jmp
les
push
push
loop
pop
incl
mov
icebp
ffreep
stos
xchg
xor
jle
int3
mov
movsb
push
cmpsb
pop
into
xor
sti
inc
jmp
fwait
daa
jo
pop
mov
mov
xor
adc
xchg
dec
add
sahf
jno
data16
clc
fsubr
cmp
mov
inc
ret
imul
mov
call
push
das
rcll
inc
pop
icebp
xor
pop
jecxz
sahf
add
xor
xor
pop
bound
inc
xor
aad
fnsave
dec
enter
cmp
aad
cmp
lcall
jp
push
insb
iret
stc
xchg
cltd
sahf
inc
fsubs
mov
movsb
addr16
pop
repnz
insl
sbb
icebp
movsb
cmp
dec
sub
mov
lret
and
xchg
dec
test
pop
arpl
adc
fisubrl
cltd
pop
fnstcw
ret
pop
mov
xor
test
cmpsl
sbb
add
pushf
or
daa
add
je
cltd
push
jb
jg
dec
xchg
jl
pop
fsubrl
inc
aam
mov
stc
cmc
popf
xorb
xor
add
pop
cmpsb
push
jnp
or
test
and
imul
jne
mov
cld
xchg
jbe
aad
sub
sub
add
xchg
jp
jb
pop
mov
jns
sbb
mov
mov
or
shld
lret
loope
jb
xor
addr16
push
dec
or
fstps
pop
imul
dec
push
or
or
scas
jns
dec
addl
aas
or
xor
xchg
pop
sar
push
test
xor
das
mov
popf
rclb
jge
daa
jo
test
dec
adc
mov
xchg
aaa
into
ret
sub
mov
inc
fnstsw
jne
pop
sub
adc
xchg
ds
dec
sahf
aas
jo
and
aam
cli
mov
into
lea
add
dec
cmovno
xor
xor
dec
dec
fs
cld
sti
push
and
inc
xor
arpl
add
jl
or
adc
orps
int
and
push
mov
or
test
cmp
or
inc
push
jne
test
pop
xor
and
vmovntps
pop
sbb
imul
repnz
mov
cmp
xlat
xlat
addr16
lods
inc
inc
nop
pusha
sbb
lret
and
dec
sbb
ljmp
sub
adc
mov
subl
clc
sahf
push
push
pushf
scas
mov
call
mov
loope
mov
test
mov
lret
xchg
add
stos
setnp
push
and
cmp
rcrb
jl
mov
aas
and
inc
xchg
adc
shrd
xor
add
out
push
xchg
fsubrs
mov
ret
shl
out
fstpt
das
xchg
mov
or
lea
lret
xchg
xchg
mov
repnz
out
lret
pop
jbe
clc
jne
push
popa
and
mov
sbb
int
or
lahf
lods
clc
shlb
cmp
add
std
int
dec
or
pop
xor
push
cmp
loopne
int
inc
add
dec
cmp
sbb
lock
iret
stos
loopne
pop
je
lea
push
pop
inc
mov
lea
fimull
xor
xchg
stos
inc
rcl
int3
testb
dec
inc
movsl
aam
rcrl
inc
xchg
pop
inc
pop
ds
adc
imul
pushf
mov
stos
clc
xchg
xor
ret
addl
gs
stos
sbb
sub
mov
out
sub
es
dec
xlat
gs
pop
stc
mov
mov
dec
negb
hlt
scas
pop
xchg
loopne
sahf
push
and
cld
mov
mov
push
ljmp
sbb
pop
xor
add
cli
xchg
lret
hlt
sbb
movsb
push
out
xlat
mov
mov
mov
outsb
gs
and
int
xchg
dec
mov
and
cmp
dec
adc
xlat
or
xor
cmpsb
cmc
add
lods
jb
ficompl
jecxz
mov
mov
mov
test
ja
int
dec
js
jle
pop
cmp
mov
mov
js
mov
mov
jle
decb
jo
out
pusha
mov
sub
mov
sbb
nop
add
hlt
adc
push
lahf
dec
icebp
cltd
fisubl
dec
fs
imul
cmp
test
sub
cmp
shl
lahf
out
in
icebp
sub
test
pop
push
fwait
dec
mov
xchg
add
lcall
cmpsl
dec
icebp
pop
xor
fisubs
leave
shrb
xor
sbb
lea
idivb
loope
mull
iret
jge
push
fdivrs
mov
cmp
pop
jo
in
inc
in
mov
or
cltd
pop
mov
loop
mov
push
cmp
fisttps
jns
lods
ucomiss
ds
jo
ret
dec
inc
push
data16
cmc
sbb
inc
xchg
js
inc
add
cmp
clc
sahf
not
push
int3
adc
xchg
test
mov
mov
push
nop
adc
pop
leave
in
popf
stc
sub
sub
xor
add
cmp
xchg
jns,pn
inc
fidivrs
and
pop
sbb
in
jge
ljmp
xchg
mov
inc
lea
hlt
leave
shll
push
cltd
inc
sbbl
inc
mov
jg
cmp
mov
shl
mov
into
in
popl
ja,pn
xlat
sbb
pusha
lahf
dec
sub
out
je
sub
addr16
dec
jb
add
jae
xchg
scas
sti
or
mov
aam
xchg
lret
popf
dec
bound
mov
daa
mov
mov
imul
aaa
adc
addr16
stos
addr16
fcomps
add
subb
mov
cmpsl
movsl
mov
into
in
sbb
fst
imul
or
scas
mov
add
jge
mov
test
mov
mov
dec
loop
and
jle
inc
imul
das
lea
lret
aaa
inc
sarb
xor
and
mov
call
popf
in
cmp
cmp
imul
sub
fwait
xchg
stc
mov
add
jmp
sub
push
pop
shlb
int
xor
mov
cmp
out
mov
scas
and
pop
ss
lea
rorl
sub
imul
repnz
out
call
daa
or
popf
clc
fidivs
jg
mov
xor
dec
jp
int
mov
faddl
and
test
imul
mov
mov
mov
lahf
scas
pop
mov
pop
jmp
std
in
add
mov
aas
loop
fidivl
lods
imul
hlt
pop
call
mov
addr16
push
lahf
fisttpl
sbb
jb
outsl
pop
and
pop
cs
sbb
jmp
mov
test
pop
jle
push
jnp
or
push
and
bswap
jp
pop
les
mov
std
mov
in
lods
lret
es
cmp
int3
mov
icebp
pop
dec
and
jbe
adc
lcall
cmp
bnd
dec
cmp
ret
add
lock
add
ljmp
bound
test
push
adc
pop
lret
push
add
sub
sub
rcr
add
xor
add
cld
and
mov
fnstcw
sub
cmp
insb
push
mov
mov
icebp
enter
push
cmp
adc
cmpsl
xor
enter
push
jnp
inc
aas
or
enter
insl
loopne
hlt
bound
cmp
pop
nop
cs
xor
or
lret
cmpsl
mov
fldcw
sub
subb
cmp
testl
ret
cmc
or
dec
mov
nop
mov
pop
pop
lret
inc
sti
cltd
jmp
outsb
sub
enter
xor
fnstenv
mov
mov
into
and
xchg
insl
mov
jnp
divb
pushf
aam
cmpsl
pusha
cli
or
fdivr
jbe
enter
fs
popf
jb
outsb
push
addb
paddusb
push
push
repz
in
out
cmp
jns
lock
std
sbb
fdivl
jne
and
pop
push
xor
test
loope
dec
fsts
add
movsb
mov
sub
icebp
into
push
jmp
out
lds
mov
stc
testl
mov
or
lret
shrb
loope
loop
jb
mov
sub
dec
sub
out
fcomps
ret
sbbl
push
fmul
cmp
stos
in
push
pop
push
jno
dec
pop
out
mov
mov
lahf
ss
dec
je
int3
lods
mov
jge
loop
or
push
pusha
out
mov
scas
adc
mov
xchg
lret
add
and
hlt
orl
xor
sbb
mov
mov
mov
mov
in
mov
stos
mov
add
in
xchg
stos
test
inc
out
leave
and
ja
add
int
push
mov
jae
mov
popf
xor
fsts
lret
xchg
divl
lock
xlat
lods
es
mov
inc
mov
add
je
pop
mov
push
fs
mov
adcb
sub
cmc
dec
mov
mov
mov
mov
out
push
add
push
mov
push
in
adcb
push
jle
add
mov
dec
sbb
cmc
xchg
cmp
jp
scas
ret
push
xchg
scas
test
mov
or
mov
stos
mov
push
sbb
stc
ror
add
sbb
pop
into
inc
pop
xchg
daa
and
pop
jae
out
jge
xor
push
out
rcll
outsl
pop
jne
icebp
sarl
idivb
rorb
inc
push
sub
mov
mov
out
clc
ret
ret
jnp
xor
in
push
or
inc
sub
insl
adc
cmpl
fstpt
xor
es
xchg
inc
in
push
cmpsl
xchg
mov
fwait
mov
testl
jp
xlat
add
jbe
fldenv
jg
arpl
xor
xor
int
ret
sub
sbb
mov
cmp
cmp
adc
leave
sbb
and
fucompp
pop
and
mov
push
mov
push
fstpt
pop
loopne
testb
cwtl
pushl
idivl
push
jno
pop
sarl
dec
bound
adc
daa
cmc
cmpb
dec
cltd
adc
pop
imul
pop
pop
nop
ljmp
loop
lret
mov
call
inc
mov
push
sbb
pop
fwait
sub
stos
out
frstor
dec
xor
and
jge
xor
jle
xchg
fistpl
inc
std
xor
icebp
rcr
je
push
jns
cs
cmc
or
add
jne
addr16
jle
push
gs
out
sbbb
enter
or
cmp
or
in
outsl
insl
sti
pop
cltd
jno
les
mov
sbb
sbb
out
push
or
pusha
dec
cmc
adc
mov
popf
xor
xchg
xorl
in
pop
iret
mov
add
add
loop
pop
push
xchg
cmc
add
sti
lods
or
pop
mov
push
sbb
mov
dec
mov
leave
xor
aam
push
xchg
fnsave
inc
sbb
sti
xchg
and
sbb
jg
out
sbb
mov
mov
cli
or
inc
outsb
shrb
rolb
sub
xor
bswap
jne
push
jbe
in
mov
sbb
shll
mov
or
out
stos
mov
outsb
inc
jnp
sti
mov
sbb
jg
mov
add
jmp
stos
mov
or
jl
aad
cs
adc
jo
testl
rorb
jecxz
lods
movsl
sbb
sete
jmp
jo
lcall
lret
sbb
push
loopne
pop
lock
pushl
mov
xchg
gs
push
mov
mov
frstor
or
jae
and
push
jb
into
mov
push
push
repz
dec
mov
mov
push
jge
iret
dec
imulb
gs
mov
fsubs
sti
dec
fiaddl
cmpsl
stos
and
dec
pop
repz
or
jecxz
adcb
mov
jne
pusha
shll
cli
out
shlb
or
pop
loope
push
mov
xor
data16
test
push
adc
jno
outsl
or
pushf
dec
dec
aad
in
xchg
sbb
popa
cld
fsub
cmp
and
ret
or
dec
or
notb
xchg
bound
int
sub
decb
jp
adc
xor
addl
ret
decl
adc
testb
mov
adc
inc
pop
outsb
push
lcall
mov
push
fsubrs
and
pop
add
cwtl
hlt
in
xchg
sbb
dec
dec
mov
arpl
cmp
vsqrtpd
jnp
jbe
mov
ret
jo
mov
dec
fmulp
adc
fsubs
sbb
sbb
push
test
xor
test
daa
and
adc
cmp
in
pop
in
xchg
lds
fs
aad
in
dec
loop
or
mov
icebp
mov
roll
jo
rorb
add
cmp
bound
cwtl
mov
shr
mov
test
xchg
mov
pop
xor
movsl
popa
jnp
or
jns
pop
and
ss
mov
fsubl
jge
pop
out
in
xor
sbb
lods
cld
icebp
jb
push
mov
fsubrs
mov
inc
xor
adc
les
rol
imul
push
mov
and
cmp
mov
xchg
pop
inc
fstps
xor
dec
jno
mov
stos
pop
fdivr
add
cbtw
aas
je
test
sub
pop
jp
inc
pop
aad
in
dec
ret
mov
push
sbb
dec
jecxz
jl
fildl
inc
inc
call
mov
lock
ja
or
test
mov
in
popa
pop
mov
mov
and
dec
xor
pop
xchg
sub
cmp
pop
outsl
or
push
mov
mov
xor
mov
cli
inc
adc
jl
lret
fiaddl
sbb
push
fs
fildll
push
aad
mov
sbb
pop
stos
mov
xor
fisubs
ds
cltd
jae
shl
cwtl
js
out
mov
jle
push
mov
jecxz
js
jl
rorb
push
add
js
mov
jmp
mov
push
mov
mov
mov
mov
xor
adc
and
rorb
std
xor
pop
mov
shl
mov
and
mov
sub
mov
out
sbb
lea
jle
xor
hlt
jg
or
movl
int
inc
push
cmp
out
xchg
jg
dec
insl
cmp
js
nop
xchg
dec
cltd
xor
in
loopne
pop
fsubr
mov
ret
mov
hlt
fsubl
cltd
rcrl
popa
xchg
cmc
out
orb
cmpsb
andl
lcall
cwtl
xor
dec
loopne
push
aaa
mov
add
inc
pushf
lods
cmp
jbe
mov
std
adc
add
dec
xchg
cmpsl
cmpsl
rcrl
lock
jns
loope
xchg
push
aas
add
or
xchg
test
or
xor
dec
in
jne
in
sub
xor
sbb
mov
cmp
pop
dec
dec
shrb
insl
pop
cmp
mov
sti
insl
ja
imul
pushf
into
jg
mov
pusha
stc
nop
adc
inc
stos
sbb
sbb
icebp
lock
ds
xchg
dec
loope
lds
inc
sub
xor
loopne
xchg
out
sahf
push
xchg
nop
xlat
outsb
ret
sarl
lds
mov
sub
jp
popa
mov
sbb
rcr
call
adc
and
cmp
sub
rcr
out
dec
sahf
sub
ja
cmp
and
xchg
pop
pop
and
add
adc
insb
jb
fnstenv
push
nop
cmp
ret
pop
dec
push
insl
arpl
mov
mov
adc
inc
repnz
cmp
insb
adc
ret
je
inc
cmp
mov
lds
mov
sbb
ljmp
lret
xchg
imul
xor
fdiv
jo
mov
sub
lods
mov
ficomps
sbb
pop
xchg
shrl
in
das
nop
inc
mov
movsl
loopne
lcall
jp
jg
std
sahf
ss
dec
jns
dec
je
push
inc
leave
adc
xchg
lea
xchg
loopne
push
adc
data16
scas
xchg
sbb
cld
inc
outsb
jl
dec
mov
adc
out
lds
popa
and
dec
cmp
int3
lret
ds
pop
mov
testl
add
pusha
push
and
jae
aas
add
xor
or
adc
pop
jns
in
sub
xchg
adc
je
nop
mov
movsb
shl
xor
nop
adc
imulb
cmpsb
les
neg
pop
scas
outsl
or
push
or
jl
xor
dec
xchg
inc
add
mov
and
mov
inc
cmpsl
dec
stos
mov
movsb
in
mov
in
lds
push
dec
fisubs
test
jno
movsl
iret
enter
ja
loopne
and
fsubr
sub
mov
lea
xchg
sub
loope
push
push
cmp
xchg
outsl
mov
jge
dec
scas
jns
and
les
mulb
test
shlb
xor
out
cmp
dec
adc
shrb
push
inc
sbb
ja
cmpsl
iret
or
mov
add
pusha
scas
inc
xchg
int
xchg
shlb
mov
stos
cmp
outsl
test
fiadds
push
cmp
dec
in
pop
cmpsl
jno
push
adc
std
lret
inc
repnz
or
mov
mov
or
es
rcrb
cld
dec
push
mov
ret
or
or
ljmp
icebp
aaa
testb
or
out
mov
int3
xor
or
stc
push
and
outsl
xchg
shlb
and
jle
mov
add
es
sub
sbb
push
loopne
cmp
inc
gs
mov
adc
fldcw
push
add
inc
push
loope
fwait
or
mov
scas
out
scas
insl
scas
sbbl
sub
push
or
add
les
insl
sub
sub
addb
mov
scas
inc
xchg
outsl
mov
aas
push
xchg
mov
jp
cmp
inc
mov
shlb
scas
imul
and
xor
loopne
xor
mov
dec
aas
inc
xor
xchg
push
int3
lret
dec
cltd
pop
inc
sbb
test
clc
das
jb
jo
jl
xor
lds
dec
jnp
or
in
sbb
mov
pop
test
cmp
push
loope
in
call
test
add
push
mov
sbb
jnp
xchg
fldl
jnp
loop
cmpb
mov
fmull
cwtl
jnp
das
xor
fisubs
loope
sbb
mov
outsb
pop
or
mov
jbe
stos
cmp
stos
or
fidivs
pop
cmp
mov
insb
jecxz
sbb
popa
cmp
adc
mov
in
inc
flds
pop
push
out
mov
jb
sbb
and
outsb
loope
mov
or
insl
lods
ja
or
lods
cmpsb
sub
and
bound
loop
mov
test
mov
fidivrs
mov
mov
mov
insl
add
mov
mov
push
fcmovne
mov
bound
in
inc
push
push
mov
aad
jae
xchg
out
pusha
test
sub
pop
xor
es
insb
cltd
xor
jbe
inc
test
scas
fidivrl
jne
add
pop
jle
push
and
xchg
sub
mov
adc
cltd
pop
test
repnz
push
mov
add
add
cwtl
sbb
enter
and
leave
int
or
inc
mov
lods
push
cvtps2pd
jmp
bound
xchg
shll
pop
cmp
cmp
loope
daa
mov
mov
mov
filds
js
jg
je
sub
sub
ds
movsl
test
push
sub
leave
loope
fwait
jo
inc
cmp
sub
jns
dec
mov
aam
mov
rclb
mov
inc
fwait
mov
rcrb
ljmp
jbe
imul
ja
push
jp
jmp
in
fdivrp
cmp
pop
push
outsb
fwait
jns
insl
sbb
adc
jbe
xchg
nop
mov
mov
mov
imul
inc
aad
scas
mov
pop
add
rclb
jmp
ret
cmpsl
insb
lea
lds
adc
sub
mov
jmp
cmp
clc
cmp
lods
subb
mov
fimuls
mov
and
push
sbb
xchg
les
call
and
into
sub
dec
push
cmp
push
js
out
xchg
dec
outsl
xchg
hlt
bound
and
mov
ja
xchg
xor
mov
mov
push
aam
call
add
out
xchg
test
and
out
sub
movsl
pop
popf
insl
or
jge
adc
je
mov
xchg
add
bnd
outsb
adc
testl
or
sub
dec
dec
sbb
fnstenv
jmp
int
xchg
lcall
adcb
dec
mov
sub
adc
sub
jae
sub
lods
pushf
sbb
loope
mov
divb
stc
dec
inc
dec
mov
aas
sti
push
scas
sub
jecxz
jnp
cs
sub
cmp
jnp
popf
mov
sahf
push
jns
fisubrs
sbb
lods
loopne
cmp
pop
test
pusha
mov
sub
mov
jae
repnz
push
cs
or
mov
call
jle
xchg
push
adc
clc
xor
leave
xor
xchg
jno
or
push
inc
int
inc
push
jl
xchg
jg
pop
inc
mov
pop
xor
xchg
inc
cmp
lock
imul
xchg
int3
dec
or
mov
enter
aas
sub
cmp
push
inc
hlt
sub
mov
fisubrl
jge
mov
outsb
inc
test
jno
int
test
adc
mov
mov
sub
jns
xor
push
testl
adc
fisubrl
lret
mov
pandn
jae
inc
push
push
dec
lods
mov
test
jle
pop
in
add
addr16
sub
out
sub
fnsave
cmpl
ss
out
mul
jp
and
push
xchg
mov
cmp
mov
inc
adc
xor
xrelease
js
or
mov
sub
lret
popa
inc
data16
stos
xor
xor
xchg
cmp
sarl
data16
adc
jl
clc
mov
mov
sbb
mov
sub
mov
in
xchg
scas
je
dec
clc
fidivs
sbb
add
jecxz
jmp
mov
out
xchg
test
mov
and
orl
rcl
mov
sti
dec
xchg
pmulhw
adc
rorb
pop
or
jns
inc
inc
mov
call
shrb
lahf
aam
inc
mov
xchg
add
out
xlat
mov
scas
mov
cmp
test
cmp
ja
xor
mov
jns
lock
outsl
mov
or
jae
ja
dec
addr16
cli
or
int3
xchg
sub
sbb
sub
in
cltd
sub
out
insb
sbb
sahf
and
fimull
mov
jns
xor
lods
pop
mov
insb
and
mov
xchg
repz
xor
and
movsl
sbb
adc
inc
int
jbe
in
bound
loop
push
inc
pop
ret
sub
test
fcos
int3
and
add
es
xchg
ss
and
lds
notb
mov
cwtl
call
mov
lea
push
sub
push
repz
mov
mov
scas
and
and
add
and
mov
xchg
push
ljmp
add
aad
cwtl
rclb
cmp
mov
dec
dec
or
mov
or
sbb
scas
das
mov
dec
dec
pop
idivl
or
adc
mov
rcrl
sbb
or
xchg
loope
repz
sub
fnstsw
push
add
jmp
add
sub
lret
in
add
mov
push
incl
daa
repz
pop
pop
scas
sahf
test
ja
cwtl
xor
or
ret
xchg
adc
int
sub
push
push
insl
mov
add
xchg
addl
mov
test
push
sub
mov
pop
mov
pop
and
add
mov
imul
test
sti
ret
movsl
jl
out
push
pusha
mov
mov
fcomps
mov
fnstsw
shrl
fsubl
push
push
scas
push
add
mov
push
popf
int
aaa
push
ret
inc
movsl
mov
sbb
mov
push
test
cs
out
insl
dec
icebp
pop
mov
jae
popa
xor
sahf
test
insb
js
movsb
mov
cmpl
mov
lahf
lods
and
loop
scas
xchg
outsb
out
pop
inc
sub
leave
stos
adcl
or
xchg
mov
das
out
mov
test
and
ror
push
testl
xlat
inc
enter
mov
scas
dec
loop
pop
xor
out
fidivl
push
mov
out
cltd
dec
lods
push
mov
aaa
pop
dec
aaa
jne
sub
imul
ja
push
xchg
and
testl
pop
sbb
add
cmp
adc
daa
mov
nop
shld
add
mov
movsl
out
or
and
xchg
roll
and
orb
xchg
mov
xor
push
inc
inc
in
lret
shlb
xor
sbb
scas
lds
xchg
or
ja
and
dec
leave
cmp
and
loop
fwait
or
xchg
mov
push
dec
dec
ficoml
xchg
lds
sbb
cmc
lret
mov
xor
cmpb
out
sahf
or
pop
and
xor
add
cs
pop
dec
add
stos
mov
pop
sub
sub
imul
jle
and
and
jno
das
outsl
push
push
fsubs
incl
pop
cmp
push
cmpsl
jnp
sbb
mov
test
sbb
repz
cli
mov
push
sub
rcl
fistpl
add
fimull
xor
adc
call
pop
push
push
mov
adc
mov
insl
push
jp
popf
rcll
and
mov
push
fldenv
mov
add
jle
sarb
jge
mov
popf
cmpsb
jns
adc
jmp
shlb
lock
lods
add
xchg
xor
fstl
jne
sub
sub
sub
shll
idivl
mov
cld
push
daa
mov
dec
sbb
mov
xlat
cmp
cwtl
pop
jecxz
loop
fdivrl
fistpll
mov
jge
pop
scas
icebp
push
and
std
and
das
cmp
mov
cli
dec
sub
test
clc
pusha
sahf
mov
out
mov
arpl
fs
sub
cs
mov
ljmp
mov
mov
xor
jb
into
data16
push
das
xchg
pop
lods
and
xchg
pop
insb
repnz
fistpll
jne
mull
hlt
sarb
test
clc
adc
cmpsl
push
mov
xor
jp
fnstsw
inc
mov
cmc
jno
add
adc
and
test
in
in
mov
bound
mov
mov
mov
mov
gs
lcall
sbb
clc
cwtl
xor
inc
stos
rcll
sbbl
sti
push
xchg
cs
mov
lods
insb
inc
out
mov
popf
xor
adc
cmpsl
dec
sahf
xchg
jne
scas
mov
jb
sub
adc
mov
daa
mov
add
pop
insl
clc
leave
jb
sbb
sub
hlt
pop
push
xor
adc
cltd
mov
pop
inc
pop
xchg
mov
out
daa
rolb
int3
je
push
into
mov
or
in
mov
or
mov
cs
sbbl
cmc
int3
hlt
lret
add
cmpsb
test
mov
mov
sti
push
add
sub
rolb
rorl
sbb
cmp
add
xchg
adc
push
add
pusha
dec
mov
cmp
mov
vpavgb
xor
push
dec
fwait
into
inc
mov
mov
push
outsb
inc
push
in
push
fcompl
in
test
out
ljmp
stos
rcl
mov
xor
ds
mov
pop
push
and
mov
dec
push
mov
lcall
jno
fldenv
push
and
mov
inc
pop
xor
fidivs
push
test
out
scas
xchg
mov
or
and
jle
bound
inc
mov
jl
aaa
adc
mov
sbb
xchg
fwait
insb
rolb
aad
mov
arpl
or
and
ds
cmp
cmpl
aam
call
jnp
and
repz
xor
jbe
xchg
mov
push
and
jg
int3
imul
insb
fistps
xor
cmp
stc
add
pop
and
push
pop
stos
fwait
ds
les
rorb
jg
mov
adc
or
or
push
cmc
mov
out
xor
mov
nop
movsb
cmp
push
sbb
push
dec
mov
inc
adc
out
inc
imul
insb
adc
vmovaps
jmp
xchg
sbb
pop
popa
xor
mov
aaa
into
push
aam
ds
jmp
mov
mov
or
daa
xchg
xchg
ret
inc
dec
xor
arpl
lea
mov
xchg
adc
xchg
stos
cmp
cwtl
das
and
decl
push
in
add
xchg
mov
sti
or
icebp
xor
into
ljmp
inc
xchg
pusha
shrb
mov
or
ljmp
mov
push
clc
adc
loopne
dec
mov
imul
int3
push
mov
lahf
fdivrl
sub
xor
repnz
adc
mov
pop
notl
ja
inc
xlat
and
repnz
loope
leave
pusha
dec
lods
mov
cmpsb
mov
test
adc
in
sbb
fadds
popf
scas
repnz
and
arpl
add
loopne
jecxz
push
mov
stos
cmc
mov
cld
out
mov
add
icebp
rclb
cmpsb
addr16
aad
add
sbb
push
outsb
xchg
pop
outsl
daa
xor
gs
leave
bound
add
bound
imul
mov
test
fsubl
add
outsb
loop
pop
jecxz
mov
inc
sbb
add
jp
pushf
adc
aad
inc
mov
jge
cmp
in
out
mov
addr16
cwtl
stos
push
or
les
adc
push
mov
imul
ret
mov
sub
xor
nop
lea
sbb
out
imul
jbe
and
out
pop
iret
sub
jecxz
or
aam
xchg
push
mov
les
dec
hlt
and
cmp
mov
mov
rolb
out
add
icebp
mov
mov
push
int3
lret
decb
dec
ljmp
icebp
js
cs
add
loop
loop
cmp
add
jnp
sub
sub
repnz
inc
leave
vucomisd
cwtl
jo
dec
mov
nop
mov
xlat
insl
outsl
cmc
adc
sbb
sbbl
jbe
mov
lock
add
rcrl
mov
and
ficompl
stos
xchg
push
sahf
repnz
xchg
pop
scas
dec
xor
test
add
jg
sbb
outsl
add
pop
ret
loopne
outsb
add
sub
mov
lods
in
push
repnz
pop
or
pushf
daa
pop
sbb
push
repz
xor
or
fwait
sub
mov
cwtl
pop
xlat
cwtl
inc
xorb
adc
mov
call
mov
push
dec
es
jbe
or
bound
xchg
stos
cmp
sti
jae
scas
dec
and
cwtl
xor
jmp
arpl
xor
lods
stos
mov
aad
xlat
outsb
cmp
data16
sarl
xor
fdivs
mov
notl
mov
pop
add
sub
dec
fldenv
sub
cmp
adc
and
clc
stos
xchg
movsl
add
ret
and
cmp
sbb
mov
fcomps
or
jl
aas
mov
rorb
outsb
mov
sbbb
stos
std
pop
popf
inc
dec
adcb
imul
orb
jg
pusha
fidivrl
add
lods
jg
add
lock
or
lea
mov
gs
xchg
mov
xor
insb
rorl
add
jae
or
insb
mov
push
mov
inc
pusha
imul
test
adcl
repz
and
clc
stos
shrb
sbb
dec
fs
es
imul
scas
push
mov
fs
ds
mov
xor
dec
jecxz
adc
outsb
sbb
imul
clc
jp
movsl
cmc
out
sbb
push
mov
xchg
inc
repnz
sar
inc
fisubrs
jbe
pop
mov
add
repz
ret
mov
sbb
mov
data16
or
js
jge
mov
fimull
add
xchg
faddl
inc
add
std
xchg
sub
out
outsl
mov
jge
out
pop
mov
shll
add
mov
test
test
shrl
sbb
aam
ss
idivl
movsl
push
sbb
sub
sub
hlt
enter
shr
add
stos
inc
push
dec
xor
xchg
mov
jp
xor
rcrb
adc
data16
and
call
jmp
out
sbb
cmp
aad
mov
dec
mov
clc
inc
jo
mov
fs
push
mov
int3
add
jmp
and
testl
je
mov
lret
je
dec
test
and
add
pop
inc
sub
divb
movsb
mov
push
std
iret
xor
jmp
rolb
sub
sbb
shll
pusha
push
push
dec
loopne
shll
ret
sub
add
hlt
jmp
jge
xor
jl
sub
pushf
jo
mov
adc
adc
in
fdivl
push
adc
cmpsl
js
pop
imul
test
sahf
xor
je
in
push
mov
or
arpl
jle
negl
sbb
adc
fsubrl
pop
sbb
sub
sbb
in
aam
inc
sub
test
mov
or
scas
sbb
ja
aad
cmp
mov
js
fwait
outsl
jl
lret
jae
shll
inc
adc
dec
xor
jo
lcall
inc
insl
dec
sub
mov
inc
cltd
lea
scas
ret
aam
pusha
stos
xlat
mov
ja
fsubrl
pop
mov
test
fcmovnu
jbe
shll
icebp
mov
ds
lret
and
in
loopne
adc
pusha
divl
mov
aad
cmpsb
bound
in
ret
cmp
pop
sbbb
pop
aas
shrl
add
mov
in
pop
mov
adc
das
es
jo
je
daa
dec
lret
out
dec
bound
inc
mov
pop
insl
lods
aas
loopne
data16
loop
pop
je
sub
sub
lods
pop
jae
inc
stos
ret
mov
repnz
jmp
shrb
xchg
mov
or
mov
mov
aaa
jecxz
call
mov
xor
jg
add
sbb
das
push
popa
cmpsl
jge
mov
adc
repz
sbb
xor
inc
gs
xchg
or
push
cmpsl
shr
arpl
jg
xorb
mov
pop
inc
inc
adc
mov
sub
lret
bound
inc
and
sbb
rorb
cmp
enter
adc
fstp
inc
dec
cltd
inc
push
mov
fsubrs
sub
lahf
xchg
push
mov
mov
outsl
leave
mov
mov
iret
adc
and
es
and
pop
pop
scas
add
roll
fidivrl
or
notl
mov
add
pop
sti
popf
sbb
dec
push
scas
jne
and
pop
inc
fwait
xchg
xlat
jns
lods
sbb
and
mov
rep
mov
push
subl
iret
test
test
insb
add
leave
or
jle
in
mov
adc
addr16
xorl
rcrl
cwtl
mov
insb
rcll
pop
loope
into
sbb
push
aam
pop
in
jmp
push
adc
pop
outsl
jl
mov
mov
mov
xchg
dec
dec
push
lds
jo
addr16
pop
jmp
aam
and
testb
push
add
cmpsb
dec
and
vmovsd
push
xor
pop
stos
add
mov
shl
not
pop
mov
hlt
sub
push
movsl
sbb
pop
rolb
pusha
xchg
fwait
xchg
xor
outsb
push
stc
shrl
pop
lods
out
int3
jg
ret
mull
pop
movl
shrl
push
in
mov
push
mov
cli
adc
jnp
mov
adc
mov
pop
adc
jecxz
fistl
inc
gs
push
gs
cs
cwtl
ljmp
cwtl
fdivr
ds
fdivrl
cmp
roll
mov
stos
jl
mov
mov
or
daa
cmp
dec
call
cmp
push
cmp
xchg
lock
mov
decl
and
mov
scas
push
cmpsb
test
mov
fisubrl
push
mov
mov
xchg
outsb
mov
shrl
adc
xlat
xchg
fsubrs
xor
aaa
iret
sub
mov
or
dec
mov
xor
xor
pop
repz
mov
shrb
mov
jb
xchg
and
dec
pop
pop
js
enter
jecxz
pop
pop
test
jle
test
icebp
mov
cmp
adc
mov
push
jecxz
scas
call
pop
dec
sahf
mov
ret
fidivrl
lret
cmp
insl
pop
das
std
add
fdivrs
pop
jo
enter
xor
imul
lock
lret
addr16
fstl
xor
pop
xor
out
cli
pushf
or
das
cmpsb
mov
xor
push
outsb
push
in
xchg
inc
outsb
out
jmp
jae
nop
test
and
ja
sti
jge
lfs
scas
add
mov
ds
sarl
dec
and
das
pushf
lahf
xchg
arpl
mov
mov
repnz
or
jg
pop
jne
mov
out
sti
ret
or
or
ljmp
push
inc
outsl
adc
and
lea
mov
movsb
fcomi
gs
and
inc
stos
push
test
in
xchg
hlt
ljmp
test
xchg
jp
dec
cmp
cltd
sbb
pop
cli
pusha
jp
test
adc
jns
xor
mov
nop
add
lgs
into
mov
in
mov
addb
repz
pop
sub
iret
mov
cmc
or
daa
sub
or
sbbb
jns
pop
or
mov
fnsave
mov
mov
sbb
andb
pop
std
cltd
roll
pop
sbb
test
test
mov
mov
or
insl
stc
shl
pop
repz
lds
mov
movsb
repz
fidivl
lret
repnz
add
push
pop
xor
fldcw
out
add
sub
adc
jmp
out
js
js
shlb
xor
aas
dec
dec
cmc
and
ret
cwtl
mov
outsb
sub
xor
cmp
jno
xor
adcl
bswap
mov
add
dec
xlat
cmp
adc
pop
in
or
hlt
push
jle
js
sub
dec
pop
dec
cli
push
mov
fxch
and
aad
in
cmpsl
mov
loop
pop
call
lock
into
sub
std
adc
clc
mov
and
cmc
push
cwtl
out
sub
mov
imul
ss
jge
bound
shrb
cltd
jg
repnz
shld
adc
fs
adc
mov
movsl
icebp
push
inc
shll
clc
stc
adc
dec
mov
xchg
out
rolb
cmp
push
arpl
push
push
xor
and
cld
pop
push
int3
sahf
lcall
mov
lods
loop
insl
sub
orb
ja
stos
push
cld
pop
imul
push
jmp
ficomps
shl
mov
lret
pop
pop
cmpsl
ja
lock
aad
jle
jno
aad
gs
xor
mov
data16
or
cmpsb
aam
jne
cmpsb
mov
arpl
mov
xchg
jno
cwtl
push
mov
mov
sub
fmulp
orb
loop
cmp
mov
leave
loopne
rclb
xor
xchg
mov
cwtl
cltd
arpl
sbb
xchg
fdivp
insb
popf
insl
incb
lret
adc
into
push
je
sbb
dec
shrl
pop
aaa
xor
dec
jb
xor
mov
sbb
dec
sub
xlat
lea
pop
cmp
in
cmc
ds
xor
ds
gs
repnz
movsb
and
mov
jecxz
pop
push
or
cmp
cs
mov
pop
jbe
mov
cmp
sub
push
push
inc
sub
inc
push
jg
xlat
out
imul
sub
insb
dec
fmulp
jmp
xor
lahf
jecxz
push
push
mov
sub
add
jno
fldenv
inc
xor
xchg
arpl
and
fidivrl
xchg
lret
out
mov
sbb
in
sbb
mov
push
xchg
adc
sahf
cmpsl
mov
push
out
adc
out
cs
or
push
dec
xor
and
push
or
pusha
out
repz
leave
add
call
mov
adc
lods
test
push
fs
into
fdiv
inc
fisubl
dec
cld
push
jno
pop
movsb
fiaddl
mov
or
mov
mov
pop
out
pop
in
cld
test
mov
andb
mov
sbb
adc
push
stos
pop
xor
rcrl
dec
xor
mov
add
sub
or
lcall
pop
test
add
sti
mov
repz
imul
cmc
fbld
lret
dec
jbe
data16
adcl
lock
rcl
mov
cld
jne
fs
les
clc
adcl
sahf
mov
pusha
and
adc
xor
sbb
roll
jl
adc
aaa
push
pop
add
popa
push
cli
movsl
rep
jno
call
mov
xchg
sub
adc
ds
adc
or
and
push
sbb
dec
jge
mov
xor
pop
bound
loope
mov
mov
mov
mov
or
hlt
es
xor
jne
push
insb
mov
cltd
dec
jnp
xchg
xchg
mov
fistpll
test
cmp
inc
inc
mov
jg
es
in
pop
push
mov
arpl
push
jle
fstl
mov
fs
sbb
jl
lds
push
xchg
push
popa
in
add
sbb
and
cld
push
cs
add
fnstcw
shrl
ljmp
dec
inc
sub
repz
xchg
cs
lock
add
push
dec
jnp
leave
mov
add
sar
dec
cmp
jmp
lods
inc
cmp
cli
lcall
sbb
aas
push
fists
adc
xchg
xchg
ja
jae
jne
mov
stos
lret
add
sbb
inc
pop
mov
jecxz
fisubl
std
cmp
jge
fidivrl
rclb
mov
jno
ljmp
inc
std
jno
xor
mov
cld
xchg
ss
adc
adc
lret
pop
push
mov
jmp
fnstenv
out
hlt
push
sarl
in
gs
orl
iret
lret
mov
fsub
add
popf
lock
ret
add
fstpl
push
popf
jle
les
mov
pop
add
jmp
add
pop
jmp
ljmp
xrstors
mov
add
inc
stc
rorb
fwait
or
inc
cmp
cs
push
adcl
repz
imul
icebp
scas
or
jb
popa
sbb
fidivrl
sub
out
stc
out
icebp
dec
dec
push
inc
cmp
mov
fidivs
push
lea
push
lret
mov
imul
dec
adc
cmpsb
pop
and
sahf
and
sub
mov
cmp
and
pop
cmp
hlt
xchg
out
cmp
lcall
mov
sub
dec
jl
push
cmp
test
cs
cmp
adc
sbb
dec
loop
ss
cmp
mov
dec
push
insl
xchg
inc
out
jbe
adc
add
dec
xor
popf
mov
add
mov
lahf
or
test
ja
xchg
pushf
cmc
lret
mov
pop
call
shlb
rorl
sbb
jp
xchg
outsb
push
test
insb
nop
icebp
mov
ret
and
lods
dec
pop
pop
push
cld
xchg
mov
cmp
bound
ficompl
inc
shll
sbb
mov
push
rcrb
or
popa
mov
cmpsb
ret
pop
idivb
gs
pop
jns
mov
xchg
sub
insl
dec
loop
dec
push
mov
jno
cmp
add
sbb
xchg
push
mov
xchg
cld
lcall
in
add
and
push
cld
cld
jmp
ja
push
mov
cld
add
cmp
hlt
ds
lret
shrb
pop
lahf
mov
xchg
sbb
fwait
pop
pushf
inc
push
xchg
lcall
xor
dec
arpl
push
xchg
add
or
andl
jmp
cs
call
test
mov
jae
das
notl
adc
mov
fstpt
dec
mov
andl
loop
jno
xchg
ja
cmp
clc
mov
mov
std
sub
fists
sti
mov
inc
adc
stos
std
les
dec
loope
sbb
mov
dec
xchg
dec
dec
pop
or
fbstp
test
in
jge
inc
fcmovnu
jmp
and
inc
iret
mov
cmp
into
stos
sbb
lea
push
sub
jb
out
xchg
in
cld
outsl
ret
pusha
es
and
inc
lods
jmp
out
ljmp
xor
data16
xchg
pop
xor
mov
pop
call
pop
push
and
iret
enter
imul
pop
sbb
movsl
shrl
and
jmp
fldcw
mov
call
cmp
xor
mov
jo
vmovaps
mov
in
xor
inc
movsb
out
mov
iret
pop
cmp
out
aad
sbb
mov
adc
or
xchg
iret
xchg
cmpsb
orl
sub
cmp
sbb
loopne
aaa
popf
dec
outsb
mov
cmp
xorb
divl
pop
jb
cmc
dec
notl
ds
cmp
mov
xchg
jb
mov
in
xchg
xor
push
pop
mov
and
xor
in
icebp
js
mov
aas
and
cmp
out
and
xchg
fcompl
mov
pop
subb
jnp
fsubrl
aam
or
adc
lods
out
sbb
call
jg
orl
mov
test
jge
pop
or
pop
test
cmp
test
inc
movsb
scas
aam
nop
and
jae
cmpsl
push
imul
aad
or
dec
sub
out
ljmp
daa
in
sub
ja
popf
sub
fistps
adc
xchg
add
mov
in
inc
pop
das
push
sub
xchg
std
xor
je
loope
mov
push
cltd
sbb
shlb
inc
fucom
mov
or
lahf
daa
xor
mov
push
cmp
and
mov
cli
cli
xchg
ja
add
loope
int
xchg
arpl
xor
clc
mov
sar
xchg
pop
negb
and
sahf
clc
mov
push
lods
inc
cmp
mov
pushf
pop
test
mov
movsl
mov
into
pop
out
sti
call
jbe
pushf
lret
xrelease
mov
mov
cmc
sbb
push
out
lods
or
popf
push
cmc
test
data16
gs
mov
sti
mov
push
and
jno
sub
jbe
adc
aam
popf
and
mov
icebp
inc
imul
sbb
dec
movsb
ja
xchg
out
jbe
dec
adc
inc
repz
popf
pop
ljmp
out
test
pop
push
int
pop
mov
popa
ret
lock
bound
xor
jae
es
rcll
mov
push
or
add
push
add
ljmp
arpl
out
xchg
ja
push
imul
test
fwait
jbe
je
stos
xchg
and
jbe
lret
mov
scas
add
out
push
and
dec
dec
xchg
xor
xor
cltd
xchg
xor
push
in
loopne
fisttps
mov
jnp
lods
cmp
adc
int
cmpsl
cmp
xchg
xor
lahf
push
push
cmp
shr
sbb
cmp
mov
incb
adc
sbb
cmp
mov
push
test
xchg
jmp
popa
vmovdqu32
icebp
jbe
outsl
jnp
push
lock
push
jge
out
mov
hlt
jg
xor
xor
hlt
imul
sub
xchg
mov
xorb
adc
inc
or
in
imul
and
jnp
cwtl
inc
sbb
movsl
inc
in
xchg
and
mov
xchg
xor
mov
out
sub
inc
ret
push
lahf
push
ja,pn
movsl
rcr
imul
inc
sbbl
cwtl
shr
sbb
sub
push
pop
jns
aad
lcallw
addr16
lods
pop
jmp
mov
shlb
fisubl
cmpsb
inc
cmpsl
dec
pop
xorb
mov
pop
push
and
test
mov
aaa
repz
and
sarb
dec
jnp
sbbb
ss
stos
aad
out
xor
out
inc
fbld
fucomip
cltd
cmpsl
pop
pop
mov
xor
jne
ficoms
mov
movsb
dec
cltd
and
pop
cmp
shl
daa
pushf
xor
rorl
push
sub
ds
rcrl
mov
mov
push
pusha
mov
push
outsb
inc
pop
xchg
out
inc
test
mov
test
lea
cmovs
movsl
dec
jne
dec
cwtl
test
mov
ret
pop
mov
ret
adc
idiv
mov
notb
sbb
xchg
mov
dec
daa
outsb
add
mov
add
insl
add
mov
push
adc
push
loope
cmpsb
aam
mov
push
push
ds
lods
rcr
mov
inc
xlat
insl
mov
push
mov
xchg
jae
dec
fistps
insl
add
shl
jns
pop
or
dec
cmpsb
mov
lods
aam
xor
jne
rclb
in
pop
icebp
dec
loopne
add
cld
xchg
lods
scas
mov
push
jp
fldcw
mov
mov
mov
test
repnz
xor
aas
int3
arpl
jl
lahf
outsl
outsl
sub
pop
mov
addr16
mov
jno
repnz
insl
mov
jl
bound
sbb
sbb
jge
xchg
add
jno
pusha
idiv
lods
sbbb
and
cmpsb
xchg
jmp
rcr
mov
push
dec
xor
xchg
movsb
fiadds
lock
pop
add
sub
fidivs
add
lods
jae
mov
repz
add
stos
ja
mov
add
xchg
jne
pusha
into
xlat
pop
stos
gs
pop
sbbl
xchg
sbb
pop
push
cmc
sub
out
bound
cwtl
xchg
nopl
pushf
call
push
ficomps
ljmp
xchg
popa
into
movsb
cmp
mov
xchg
arpl
and
xchg
dec
and
fisubrl
mov
and
jl
sub
stos
xor
fwait
in
arpl
popf
lds
jmp
movsb
es
sub
mov
mov
popa
adc
fwait
xor
xchg
shll
mov
jbe
lods
fstpt
mov
arpl
jl
in
cmp
and
jl
cmpsl
fistpl
or
jne
fwait
jne
jne
add
fmulp
leave
into
sbb
ficomps
test
push
mov
sbb
mov
stos
ror
int
lds
ret
dec
pushaw
outsb
ljmp
and
mov
cs
fnstenv
push
mov
push
adc
fistl
sbb
sbb
jmp
test
adc
bound
loopne
aaa
dec
push
mov
cmp
shll
dec
sti
je
add
adc
mov
sbb
fucomip
lods
nop
xor
mov
mov
pusha
in
in
scas
adc
sbb
jbe
movsb
adc
lret
cmpsb
daa
push
push
sub
pop
aad
dec
scas
pop
mov
lret
add
les
mov
mov
jmp
dec
rclb
inc
fistl
jmp
fidivl
inc
and
push
jmp
sbb
mov
test
cld
xchg
scas
cwtl
mov
cmpsw
std
xor
or
rolb
xlat
cmp
jns
sub
inc
add
cmp
sub
enter
inc
push
das
add
dec
adcb
nop
movsb
and
aad
leave
jns
clc
pop
or
mov
sarb
pop
cmp
rcr
mov
sbb
insl
mov
jno
mov
jle
ds
leave
pop
sbb
sbb
fucomip
sub
cmp
jp
mov
push
pop
add
sbb
mov
lret
in
and
jge
shrb
sub
pop
dec
loop
xchg
fs
cmp
mov
jle
and
decl
sub
inc
enter
iret
ja
dec
and
repz
cwtl
cmpsb
push
jo
inc
xchg
clc
pop
aaa
dec
shr
jb
push
push
adc
xor
scas
or
dec
pop
inc
inc
or
jno
bound
lea
call
mov
sbb
test
mov
sbb
add
bound
push
ja
mov
cmp
test
cmp
lods
adc
call
jo
repnz
xor
jecxz
cltd
out
out
mov
push
leave
xlat
cmp
lock
sahf
insl
mov
fs
out
or
lcall
pop
nop
jl
inc
sahf
jno
out
add
push
adc
mov
insb
sub
lods
icebp
paddusw
mov
xchg
jb
pop
ret
mov
jo
enter
xchg
movsl
icebp
xor
push
cld
scas
xchg
pop
inc
xor
call
ljmp
jo
loop
and
cmp
pop
push
dec
cmpsb
or
loopne
test
or
es
xlat
jmp
leave
cli
adc
mov
pop
call
loopne
sub
adc
imul
hlt
mov
and
xor
cmp
mov
inc
xchg
orl
lock
ret
xor
insb
xor
aaa
mov
outsl
loop
popl
cwtl
pop
test
pop
enter
fsubr
mov
push
xchg
adc
je
in
les
fldl
es
notl
fwait
cs
dec
stos
xor
testb
in
sahf
into
xor
pusha
cmpsl
les
mov
mov
iret
mov
jl
pop
mov
jle
gs
mov
cmpsb
mov
xor
inc
or
fisttpl
pop
ret
dec
lds
fs
fistpl
subb
lods
fldl2e
xor
out
sub
addl
sub
and
ficoms
lods
outsl
dec
ficoms
jg
test
clc
jmp
icebp
mov
jl
lods
stos
dec
inc
push
mov
xor
mov
lret
xchg
fwait
jecxz
inc
call
lods
inc
repnz
jbe
repz
sbb
add
mov
xchg
xchg
nop
sub
das
push
jmp
out
push
xlat
adc
xor
xlat
mov
push
mov
jmp
mov
popf
cld
cltd
pop
add
clc
mov
mov
roll
cs
test
xor
loop
jmp
bound
shr
dec
in
shl
jp
xchg
das
loopne
fwait
incl
fidivl
mov
rclb
xchg
push
jmp
je
jo
mov
xchg
dec
add
jbe
push
and
jbe
imul
jb
in
mov
inc
mov
sub
sbb
cmpl
sub
sub
pop
in
stc
mov
adcb
aaa
sahf
stos
cwtl
fidivs
push
shlb
icebp
sub
lock
les
push
push
lock
fstps
popf
xchg
test
mov
push
stc
inc
pop
cld
jbe
sub
fnstenv
and
mov
test
mov
push
xchg
mov
lds
movsb
pop
aam
add
das
mul
lods
cmp
movsb
rcrb
dec
cmp
in
mov
das
aas
add
sub
xchg
sbb
sub
or
loope
std
jo
aas
test
cmp
xchg
pop
cli
xchg
jns
pop
divl
push
das
cmp
clc
test
or
jb
xchg
aam
enter
adc
lcall
out
ljmp
imul
leave
dec
push
popf
dec
out
mov
pop
xlat
popf
lods
and
or
mov
divb
push
ds
aas
add
mov
vfmsubaddpd
nop
mov
mov
mull
pop
xor
into
inc
jp
stos
jmp
sbb
pop
imul
mov
jl
mov
adc
cltd
sub
mov
fwait
ss
lds
pop
pusha
inc
lods
bound
adcb
out
es
pop
fists
jb
and
sub
shr
call
call
test
mov
hlt
aam
cs
xchg
sub
out
mov
out
lods
and
imul
mov
into
pop
aas
dec
orb
cli
or
in
clc
shl
mov
push
gs
out
xchg
aas
ror
fidivl
ljmp
sub
xchg
jp
leave
push
mov
and
inc
push
adc
sahf
mov
pushf
or
xchg
jge
inc
mov
loopne
push
dec
cmp
mov
std
push
or
shrb
pop
mov
sahf
pslld
adc
ret
jbe
ss
add
adc
jge
stos
lds
enter
mov
cmpsb
or
loope
movsb
xor
mov
xlat
cmp
into
movsl
or
les
fs
mov
push
sbbb
dec
add
mov
out
push
stos
stos
jl
xchg
out
dec
xor
out
out
aaa
xor
cmpsl
out
lea
mov
pslld
rolb
lds
mov
ss
sbb
std
or
pop
dec
cli
aad
mov
fsubrl
scas
scas
repz
xor
xchg
pop
xchg
das
out
mov
push
sub
mov
sub
sub
jp
sahf
jae
lcall
xor
cmpsl
dec
cld
adc
rclb
popl
sbb
jmp
push
stc
sahf
enter
sti
lds
sbb
xor
push
and
shl
aaa
or
mov
rorb
out
mov
mov
test
fildl
add
dec
xchg
stos
add
test
shlb
adc
fstps
test
ljmp
mov
mov
jge
out
xor
adc
ds
arpl
xchg
pop
movsb
aas
loop
cltd
arpl
outsl
fidivrl
fadds
fisubl
lods
xchg
shl
ljmp
pop
sub
push
inc
cmpsl
jp
inc
stos
clc
lods
jnp
push
jle
or
add
cwtl
mov
mov
mov
shlb
pop
repz
jnp
daa
jp
dec
jo
std
push
das
outsb
jle
jge
mov
sbb
jg
movsb
das
or
xchg
jnp
xchg
inc
int3
sub
lds
rol
pop
mov
push
out
dec
out
test
test
xchg
ss
inc
leave
bound
out
test
imul
in
fstl
mov
in
jne
or
aam
faddl
test
test
ljmp
mov
cmp
outsl
sbb
inc
cltd
sub
jae
push
movsl
cmpb
test
add
mulb
mov
lret
sub
inc
decb
sbb
mov
test
dec
nop
pop
mov
xchg
mov
into
stos
or
push
stos
push
cmc
push
test
xchg
test
xor
aad
inc
shll
or
out
pusha
idivl
add
sub
sbbl
push
xchg
js
lods
lds
lcall
add
and
jg
pop
cmp
pop
sti
lcall
std
cmpsl
loop
xchg
hlt
mov
or
push
std
push
jne
cmp
mov
out
outsb
clc
outsb
sub
lret
pop
sub
add
push
ljmp
jno
hlt
int3
mov
mov
xchg
xor
rcrl
cmp
mov
cmp
jbe
call
push
mov
std
aaa
sbb
sarl
inc
mov
mov
insb
stos
mov
inc
popf
lcall
xlat
loopne
fidivl
rcr
dec
add
lea
adc
inc
adc
add
ret
jl
add
stos
inc
aas
and
aam
add
push
or
mov
xchg
mov
int3
or
ljmp
or
mov
jmp
push
add
adc
shll
lahf
adc
xchg
test
adc
out
arpl
push
xchg
out
cltd
mov
add
cli
inc
scas
add
testl
pop
in
push
ds
sbbl
mov
sub
enter
repz
cli
call
fldcw
mov
pop
and
mov
loopne
mov
pop
sbb
or
cmp
addr16
popa
in
add
inc
cli
xor
pop
out
and
repz
ret
dec
ficoms
iret
addr16
ja
jb
mov
scas
ja
push
and
mov
aaa
adc
xchg
out
ret
ljmp
iret
jbe
dec
or
push
inc
test
repz
xchg
outsb
ss
dec
jns
shll
fcoms
pushf
popa
inc
cmc
push
rolb
jae
gs
pusha
xchg
push
pop
jo
jb
mov
sbbb
mov
mov
sub
ficoms
jno
adc
notb
push
sub
mov
ljmp
pop
mov
and
jo
cmpsb
les
in
cwtl
cmp
mov
inc
rorb
cwtl
cmc
sbb
scas
mov
jecxz
mov
bound
rcr
and
fstl
mov
lret
dec
lea
popa
lds
jecxz
movl
and
mov
xor
arpl
mov
pop
cmp
pop
mov
scas
ljmp
cmpsl
mov
les
ficompl
out
cmp
mov
inc
pop
or
aad
jl
or
data16
hlt
dec
sahf
ss
icebp
cli
push
imul
clc
lds
add
pusha
stc
cmp
shl
push
sahf
pop
lcall
mov
sub
ja
inc
or
add
or
jnp
jns
daa
popf
cmp
fucomi
pop
inc
mov
sbb
rcrb
int
aaa
into
and
stos
insl
mov
lods
rolb
jmp
out
xchg
cmp
lock
adc
notb
inc
or
inc
add
ret
xchg
cmpsl
out
gs
pop
leave
sbb
shrl
jno
mov
out
aad
jmp
fidivrs
and
dec
test
call
adc
shrl
pop
imul
out
sti
hlt
pushf
mov
push
add
fidivrl
lret
shll
lods
pop
je
outsl
and
lods
into
loop
mov
mov
mov
adc
adc
in
cmp
int
call
stos
mov
mov
sbb
je
jne
stos
jbe
adc
test
or
addr16
movb
out
xor
pop
cmc
test
frstor
ss
jl
ljmp
pop
test
pop
inc
outsb
popa
cmp
inc
rcrl
fcomi
jae
nopl
dec
push
nop
aaa
and
movsl
movsl
xchg
popf
xor
int3
test
testb
lea
dec
xor
aad
pop
push
dec
mov
jno
sbb
aaa
jo
int
jmp
or
dec
dec
scas
mov
sub
loop
std
addr16
test
add
lock
or
lret
pushf
ja
ljmp
xor
and
out
mov
loope
jne
std
mov
mov
mov
sbb
cmp
iret
sbbl
imul
ret
mov
push
popf
sti
push
int
fcoml
ljmp
and
cld
ret
dec
pop
outsb
and
imul
dec
mov
lahf
pop
stc
xchg
sub
jo
mov
mov
out
sahf
sub
loop
call
fdivl
mov
cltd
fidivrl
icebp
cli
jge
jle
and
or
xor
aas
adc
add
gs
stc
stos
sahf
lahf
and
mov
sbbl
repnz
fcompl
sti
mov
inc
jecxz
xchg
pop
imul
jae
and
pusha
and
xchg
sbb
mov
gs
lds
push
push
sub
jns
jecxz
ret
pop
sahf
ret
xchg
mov
dec
divb
int
idivl
push
or
test
stos
ja
mov
pop
loop
mov
cmpsb
popf
mov
into
mov
or
jnp
pop
lods
adc
das
xor
or
adc
iret
inc
pusha
shrb
leave
cmp
cld
rcr
cmp
mov
mov
in
sub
fs
pop
mov
pop
adc
das
mov
loopne
psubw
adc
dec
scas
push
and
dec
movd
cmpsb
lock
lods
inc
adc
dec
push
pop
ret
mov
leave
mov
stos
dec
mov
add
jns
leave
and
pop
insl
mov
stos
and
mulb
push
mov
sub
mov
pop
pop
sahf
int3
jnp
sub
pshufw
cltd
cltd
mov
sub
mov
cli
xchg
xor
sbb
lcall
cltd
lods
test
mov
push
adc
sbb
mov
sbb
daa
push
inc
fsubs
fs
inc
dec
lock
xchg
pop
ror
loopne
jns
cli
mov
adc
sbb
pop
push
sarb
mov
xor
or
cld
repnz
jns
sbb
adc
cwtl
and
add
js
rorb
adc
mov
in
xor
popf
xchg
shrb
xchg
xchg
imul
aam
cmc
out
aas
aam
sub
cmp
hlt
push
nop
clc
inc
js
sbb
mov
pop
movsb
mov
stos
lods
mov
inc
mov
repnz
aad
xchg
pop
adc
subb
dec
in
push
xorb
jbe
add
push
sub
int3
pop
cmp
cmpsb
jb
aad
mov
stos
lahf
hlt
and
je
inc
inc
jg
inc
aaa
add
xchg
cwtl
mov
stos
mov
cmpsl
push
push
and
mov
enter
mulb
jmp
jmp
inc
cmp
jbe
push
push
xor
loopne
fdivrl
rorl
leave
loop
enter
mov
add
push
mov
push
fdivrl
jp
aaa
dec
add
stos
or
pop
ljmp
sub
shll
lret
mov
and
pop
fistps
ja
mov
lret
test
insl
aad
mov
mov
out
ja
shl
inc
xchg
or
scas
pop
adc
dec
adc
neg
mov
leave
sahf
scas
loopne
pusha
test
in
mov
sbb
je
pop
jge
int
ja
repz
pop
jo
cmpsl
popf
ds
and
jne
sub
xor
aaa
dec
and
pop
jbe
jecxz
mov
arpl
test
lret
xor
iret
pop
and
sbbl
or
pop
mov
sub
jp
and
scas
in
in
mov
sti
cmp
mov
mov
ret
dec
sub
lret
jns
add
popa
shlb
imul
dec
mov
inc
xchg
cmp
lds
or
aam
std
in
inc
and
dec
aam
insb
enter
lahf
sbb
xchg
sbb
adc
stc
sub
pop
fbstp
fnsave
mov
xor
andl
cmpsl
pop
xor
add
ret
push
cmp
rcr
repnz
lock
xor
inc
adc
cwtl
mov
loopne
cmp
pop
mov
xor
leave
and
dec
jg
aad
xor
imulb
insb
cmp
mov
mov
aaa
pop
xor
cs
adc
jo
mov
lahf
inc
adc
in
ss
cli
pop
xchg
int
scas
mov
or
bound
test
or
pop
mov
cltd
lret
fcmovnu
in
xchg
mov
fwait
xor
or
shlb
and
cmp
lret
inc
mov
jg
jo
mov
test
rorl
sbb
mov
pop
cmp
adc
xchg
mov
sub
loop
adc
mov
mov
mov
insl
sarb
sbb
mov
and
lcall
loope
aam
jnp
jb
or
mov
call
add
add
lret
mov
ss
test
scas
icebp
ds
cmc
bound
into
cmp
adc
pop
std
or
xor
xor
add
clc
mov
dec
data16
movsb
loopne
cmp
repnz
adc
mov
mov
in
mov
adc
ljmp
adc
lods
addb
fldt
jbe
inc
mov
ja
fnsave
mov
mov
insb
jne
stos
or
repz
jge
cmp
adc
pop
adc
rolb
fsubr
sti
ds
out
xchg
mov
movsl
push
jmp
mov
sbb
loop
imul
xchg
imul
adc
aaa
scas
loope
mov
or
push
xchg
mov
sbbl
sahf
fstpl
pop
jae
cld
or
cmp
xor
push
es
xor
inc
pop
and
repz
inc
out
jmp
sbb
aaa
xchg
pusha
stos
pop
push
call
mov
cmc
inc
xchg
push
popf
shlb
sbb
ds
pop
js
ret
adc
sbb
dec
leave
sub
shrb
shrb
dec
incl
mov
inc
ljmp
xchg
dec
shr
out
jmp
movsb
jnp
adc
in
xchg
repz
inc
popa
sub
das
adc
xor
out
mov
sahf
clc
int3
push
ds
add
and
fisubl
jae
dec
and
subb
movsl
sub
xor
inc
mov
inc
adc
or
dec
je
outsl
call
fcmovb
pop
int3
fistps
add
clts
popf
cmp
dec
dec
mov
call
sbb
and
in
cmpb
mov
icebp
adc
mov
cmp
dec
and
pop
jmp
int3
jae
and
mov
xor
mov
add
lea
add
cmp
ds
push
inc
psubw
add
fisttpll
cmpsl
pop
push
or
rclb
aas
test
push
cmpsl
cmp
lds
enter
and
xchg
mov
stos
fbstp
push
aaa
movsl
add
mov
ds
loope
pop
pusha
jp
roll
popf
cmp
insl
sbb
data16
rol
iret
pop
push
lock
ret
outsb
mov
fsubl
stos
push
aas
ret
pop
icebp
mov
dec
iret
loope
stc
test
loop
adc
or
push
adc
jnp
dec
cmpsb
into
movsl
inc
scas
es
test
xor
pop
cmc
aam
movsl
jecxz
xor
mov
aad
jnp
cld
inc
mov
stos
inc
ficompl
loop
loope
cld
out
dec
sub
push
and
mov
popa
mov
sbb
mov
xchg
scas
std
pop
insl
mov
inc
nop
shrb
data16
lret
ds
nop
rclb
cmp
cmp
rcl
or
int
dec
jg
popa
lods
scas
xor
mov
faddl
push
inc
push
stc
jmp
sbb
inc
das
cmp
jge
sub
loop
fstpt
fisttps
xorl
aaa
push
loope
push
imul
inc
xor
sbb
sbb
and
fnstcw
outsb
pop
out
stc
popf
inc
lds
xor
in
nop
mov
add
and
fbld
add
jge
fsts
pushf
jnp
pop
bnd
dec
cmp
jp
or
aad
xor
cmp
inc
push
leave
imul
push
xor
mov
xchg
lcall
scas
xlat
lcall
pop
test
xor
adc
loop
fwait
sub
bnd
outsb
orl
insb
sbb
ret
inc
andl
ret
or
outsb
push
repz
xchg
cmp
push
jmp
sarb
or
sbb
mov
test
mov
cmp
imulb
jg
rcr
mov
lds
outsb
add
cmc
fnstsw
lds
push
insb
aas
mov
pop
mov
jl
call
or
fdivs
mov
fcomp
sub
pop
mov
cmp
jae
sbb
stos
icebp
js
jg
fsubrs
lock
addr16
pop
cmp
xor
out
pop
sbb
movsb
jmp
add
and
inc
add
sbb
outsl
cmp
jns
push
jae
jae
aaa
std
int3
sbb
lods
ret
mov
sbbb
clc
sahf
rorb
inc
sti
mov
sub
aas
shl
mov
scas
out
mov
ss
js
cmp
pop
jmp
add
fcomi
movsl
movl
xor
das
cs
movntq
ds
repnz
cltd
jns
xchg
outsl
inc
rcrl
ds
enter
lods
ret
insb
xlat
pop
les
cltd
pop
xor
jbe
sub
jo
jg
repnz
jle
sub
dec
mov
sub
roll
add
xchg
lods
dec
fimuls
mov
cltd
jp
cmp
sbb
xor
mov
sub
sahf
daa
xor
sub
sbb
aaa
adc
inc
insb
adc
mov
add
mov
sbb
xchg
ss
add
aad
xor
xor
jb
in
lea
ror
cli
sub
sbb
hlt
xor
adc
jge
test
lret
outsb
lret
ror
jns
push
jae
je
cmp
stc
sahf
mov
add
cmp
lea
test
jbe
out
and
and
sub
sbb
pop
adc
jp
std
xchg
hlt
lea
ljmp
cmp
jmp
sub
inc
fs
ret
lret
and
adc
mov
enter
mov
iret
push
lret
mov
and
adc
rolb
shl
adc
stc
cld
sbb
or
cli
pop
jns
aaa
lds
notb
cltd
shll
mov
in
cmp
loop
in
mov
jmp
ret
in
nop
push
icebp
cmp
out
cmpsl
xchg
int3
fmuls
jmp
xor
inc
add
add
jge
loope
leave
push
adc
inc
in
rolb
sub
push
cmp
dec
dec
sub
leave
cmp
push
mov
scas
scas
imul
and
daa
mov
test
and
rcl
bound
cmpsl
adc
pop
popf
adc
and
dec
jmp
adc
adc
ljmp
es
xchg
stos
pop
xor
hlt
gs
jp
pop
xchg
cmc
bound
sbb
push
mov
pop
cmpsb
and
mov
ds
out
jns
sbb
jg
cmp
popf
add
addl
in
call
pop
and
pop
xor
pop
mov
les
adc
cli
popa
sbb
pop
jmp
cmp
xchg
cmc
scas
inc
fistpl
or
adc
testb
ljmp
xor
xchg
xchg
repnz
xlat
sbb
push
inc
push
lods
sub
popa
mov
adc
mov
sub
mov
dec
add
cmpsl
sbb
vpunpckhbw
push
add
pop
addl
inc
das
inc
addb
pop
push
ja
cmc
test
lret
fiaddl
scas
and
fdivrs
pop
cmpsb
std
fwait
pop
loope
int3
jl
mov
fwait
pop
fwait
insb
jmp
outsb
xchg
lea
pop
ret
or
push
push
pop
test
xchg
cmp
je
push
loope
xor
pop
iret
cmpsb
cltd
sbb
jecxz
and
loopne
mov
lcall
jno
jnp
loop
xchg
movsl
jbe
xlat
testl
jp
pop
lret
mov
fsts
xlat
push
push
into
ja
fisubrl
and
jnp
scas
addr16
xor
ja
ss
xor
sub
add
lds
xor
jmp
mov
jno
cs
push
fidivl
icebp
fadd
stos
mov
or
push
int3
lret
mov
stc
jg
ljmp
addr16
adc
mov
add
push
aas
frstor
fstpl
movsl
mov
mov
xor
jae
mov
adc
loopne
push
ljmp
js
in
les
sub
push
lea
xchg
arpl
mov
adc
int
mov
lock
mov
xchg
enter
xor
push
cmpsb
mov
inc
insb
jmp
andl
jg
cmp
into
fs
pushf
daa
fmuls
xchg
sbb
or
and
stc
lock
imul
mov
out
out
nop
dec
xor
add
ret
xchg
xchg
aad
addb
mov
add
xchg
push
mov
or
pop
pushf
sbb
insb
adc
mov
add
xor
mov
test
es
mov
test
clc
dec
mov
pop
xor
jae
xorb
das
outsb
testl
lds
add
sahf
aas
js
jno
add
mov
push
sahf
mov
or
out
js
mov
std
jns
sub
inc
cltd
dec
adcl
xchg
sbb
ja
jg
inc
mov
or
sbb
jle
pop
push
pop
lock
sbb
testb
pop
es
leave
jmp
sub
into
add
and
in
adc
pop
shlb
jl
pop
push
aad
lock
fwait
outsl
ljmp
cmpb
push
clc
adc
dec
dec
testb
sbb
test
test
xchg
iret
mov
mov
push
scas
mov
or
mov
iret
cwtl
scas
xchg
les
in
lea
jo
hlt
mov
les
addr16
mov
inc
inc
xlat
jae
mov
fimuls
mov
repz
daa
dec
dec
adcl
mov
dec
xor
jle
jp
cmp
pop
xchg
mov
sbb
jp
jp
mov
fisttpl
push
or
push
xor
sbb
aaa
cmpb
sbb
add
fstps
cmpsl
fistps
push
sub
add
fisubrl
add
adc
jecxz
ds
stos
repz
cmc
cmp
sub
pop
push
sti
shll
add
add
lods
call
inc
mov
mov
stos
pop
inc
dec
in
jb
adc
shl
inc
pop
and
test
bound
push
addr16
call
mov
sahf
and
mov
mov
dec
dec
rol
xlat
call
test
adc
and
cmpsl
xor
sbb
dec
outsb
sbb
adc
ja
fidivs
cwtl
les
ja
clc
jnp
lret
and
shrb
jmp
lock
lret
lret
cmp
fisubs
fidivl
mov
movsb
pop
or
in
icebp
lahf
xor
sub
pop
inc
mov
sub
sub
scas
cmpl
sbbl
lods
ljmp
mov
mov
das
inc
mov
ret
out
cmp
imul
cmp
sbb
xchg
sub
movsb
mov
fmull
push
ss
fwait
cmpsb
fstpt
add
mov
js
inc
jne
cltd
push
jmp
push
jns
mov
loopne
cmp
sbb
aas
mov
cld
mov
pop
jle
inc
jecxz
dec
cmp
in
and
shlb
flds
sub
and
sbb
inc
gs
push
in
insl
adc
into
in
pop
xchg
es
jge
outsl
ljmp
inc
mov
and
sub
repnz
xor
out
movsl
cmc
cmp
sub
repnz
adc
sbb
aad
or
cmp
repnz
iret
pop
xchg
sub
ret
out
sbb
cltd
or
shlb
fs
stc
out
cmp
or
mov
dec
push
pop
es
jo
jge
or
cmp
imul
popf
xor
js
dec
shll
loopne
cltd
lods
add
or
inc
repnz
pop
mov
popf
movsl
cmp
insb
cmp
jnp
cmpsb
fisttpl
or
or
push
sbb
dec
mov
lret
push
repnz
stos
push
popf
cs
imul
mov
sub
out
ret
inc
and
pop
sbb
cli
or
ja
test
lahf
lcall
or
xor
std
or
cmpsl
xor
stc
push
sbb
popf
dec
aad
sub
cmp
push
shlb
testb
push
fucomp
inc
inc
push
ja
icebp
mov
cwtl
add
cltd
inc
mov
mov
rcrl
sub
sub
pop
dec
rcrl
outsl
push
pop
sbb
ljmp
call
add
pop
unpcklps
lds
inc
xor
orl
inc
xlat
imul
adc
icebp
push
fsubs
mov
push
sub
sahf
mov
stos
mov
xchg
enter
fstpt
lret
ja
pop
push
pop
xchg
std
push
cmp
cwtl
cmc
addr16
cmp
inc
push
in
xchg
lea
mov
xor
dec
jnp
mov
mov
cwtl
mov
cmc
testb
loope
stos
adc
mov
stc
sub
cmp
mov
ss
dec
mov
daa
push
pushf
and
mov
xchg
xor
pushf
inc
mov
test
divl
inc
sbb
hlt
fidivrs
pop
pushf
repnz
rcrl
in
push
fwait
outsl
pop
mov
es
mov
dec
int3
mov
pop
lds
sub
test
mov
out
scas
jmp
ds
mov
imul
in
andb
dec
mov
or
cmp
call
and
std
fldt
sub
pop
shlb
mov
pop
dec
daa
mov
jo
inc
pop
movsb
mov
test
and
mov
or
jl
test
sub
lods
add
sub
stc
test
ret
pop
cmp
lods
fdivrl
das
dec
out
out
mov
rcl
adc
testl
out
dec
sahf
aam
mov
mov
inc
lods
lea
xor
leave
push
int
addl
stc
push
xor
or
test
bound
inc
inc
lods
dec
pop
jg
es
sahf
mov
ret
xor
jl
xchg
gs
or
nop
pop
adc
out
push
popf
testb
ds
xor
mov
test
jo
out
dec
dec
xchg
outsb
divb
pushf
cmpsl
pop
ja
mov
pushf
mov
sbb
xlat
dec
scas
inc
stc
mov
mov
inc
loop
inc
loop
test
call
out
and
jno
cltd
dec
pop
icebp
jp
jl
sub
cs
sahf
clc
sbb
adc
mov
clc
lahf
ret
notb
and
sbb
enter
fwait
jmp
pop
insb
push
cltd
or
push
and
or
lds
mov
jb
push
subb
push
icebp
cmp
mov
jbe
in
rorb
push
xchg
scas
lods
fldl
sbb
lahf
stc
imul
sbb
divb
adc
enter
cmp
push
in
xor
jo
int
sub
and
movsb
xor
aad
dec
mov
jg
inc
or
mov
addr16
mov
outsl
adc
and
scas
or
pusha
jne
sub
push
mov
dec
mov
push
sbb
and
push
shll
shrl
sbb
xor
ja
pop
test
pop
pop
daa
in
dec
and
inc
pushf
dec
xor
cmpl
cltd
xchg
and
out
push
cmpsb
xchg
cmp
lcall
jbe
rclb
or
or
xchg
sub
stos
insb
popaw
pop
mov
xchg
dec
xor
add
loope
test
pop
sarb
lods
mov
imul
xchg
push
mov
or
jg
aas
mov
mov
pop
and
repnz
jge
mov
xor
inc
pop
aas
jo
mov
imul
lds
and
pusha
loop
jae
std
nop
shlb
add
sbb
outsl
daa
ja
add
sarb
clc
fmull
aaa
loop
xchg
test
into
stc
dec
push
popf
scas
inc
and
lods
loopne
iret
cmc
cli
pop
inc
pop
lret
out
faddl
inc
pxor
pushf
cmp
fucomi
fnstenv
jno
in
ss
inc
out
mov
fcomip
dec
push
inc
mov
add
fiaddl
xor
cmpsl
sbb
jge
sbb
lea
stos
mov
mov
movsl
mov
push
std
mov
fwait
out
addr16
cmp
inc
mov
shll
cltd
popa
adc
je
addr16
mov
xor
nop
dec
dec
in
mov
insl
mov
sahf
sub
js
push
sbb
adc
jp
mov
pop
out
cmpsl
call
and
inc
std
dec
jp
push
sbb
lret
shlb
cmp
mov
sub
mov
xchg
in
xor
cld
pushf
mov
out
neg
mov
add
mov
cmp
cmp
and
add
sbb
insb
mov
and
js
cld
jne
xchg
cmp
es
movsb
cmp
repnz
jp
into
mov
xchg
clc
stos
inc
xchg
xor
jmp
adc
inc
js
and
ljmp
addb
sbb
ds
cmp
mov
mov
in
cmpsl
pop
leave
pusha
mov
stc
cmp
mov
xchg
adc
mov
in
push
dec
dec
out
out
jmp
cwtl
cmp
insb
mov
aad
aaa
mov
xchg
icebp
mov
add
rcll
fucomp
ret
or
mov
inc
out
in
testl
jle
enter
adc
scas
inc
test
andl
mov
cmp
imul
bound
stos
mov
subl
push
sub
push
xorb
mov
imul
and
adc
ret
pusha
cmovge
mov
je
or
loopne
imul
popa
push
xor
pop
push
daa
fsubrs
mov
testb
mov
adc
pop
sbb
cmp
push
xchg
cltd
sub
fdivl
push
pop
outsb
dec
jbe
xchg
stos
jmp
fwait
cmp
inc
pop
push
xchg
pop
jno
pop
mov
ss
icebp
ds
jo
movsl
sbb
push
lock
sbbl
bound
out
daa
sbb
push
xchg
push
mov
bsf
lock
xchg
adc
loope
mov
sub
push
insl
hlt
jnp
nop
lds
shr
mov
sbbl
cs
mov
sbb
pop
rclb
shl
push
gs
adcl
or
test
add
out
mov
das
loopne
adcb
sbb
sub
xor
and
adc
xchg
into
leave
fidivrs
xor
jecxz
add
inc
leave
flds
fidivl
lret
outsb
popa
clc
and
cmp
in
push
out
ss
addr16
jns
hlt
addr16
inc
rcll
ficoms
cmp
or
out
popf
or
inc
xchg
or
pop
and
inc
pop
jae
movsb
negl
icebp
pop
repz
cmp
int3
aas
xchg
mov
repnz
movl
movsb
lcall
xlat
jmp
dec
inc
mov
mov
fistl
mov
or
mov
out
pop
xchg
inc
fwait
std
mov
lret
js
testl
loopne
sbb
mov
frstor
or
incl
jae
mov
dec
push
fsubs
fucomip
dec
add
xor
mov
iret
mov
jge
adc
es
jno
mov
jg
popf
stos
pop
pop
mov
scas
inc
xchg
out
outsl
inc
in
mov
xchg
stos
inc
push
xor
jbe
sbb
sub
add
mov
fidivl
inc
fildl
inc
lcall
mov
std
hlt
pop
test
xor
fcmovnb
mov
jg
mov
jle
xor
and
xchg
sub
lock
fidivs
add
fucomi
daa
and
xchg
pop
incl
jno
addr16
xor
popa
and
loope
out
xchg
hlt
sbb
mov
cmpsb
cmp
sbb
adc
cld
push
insl
lds
jb
xchg
sub
out
add
fmull
jnp
cmpsl
mov
stos
xchg
leave
in
mov
outsb
push
popf
or
cs
es
mov
imul
xchg
inc
ds
dec
out
fidivrs
out
add
xor
push
jnp
call
push
push
adc
mov
clc
popw
fnsave
mov
das
ffreep
ret
stos
mov
aaa
cmpsb
or
pop
ja
and
stos
gs
imul
add
xchg
mov
dec
mov
in
out
out
aad
jo
bound
cmpsl
inc
mov
cmpsb
mov
loope
inc
outsb
lods
xor
ds
push
shl
loop
outsb
aam
mov
fnstenv
jge
mov
out
xchg
sbb
mov
sbb
xchg
addr16
shlb
leave
jnp
or
outsb
jb
sbb
mov
cmp
jbe
xor
rcrl
lret
sub
push
sub
sbb
stos
inc
in
cmp
push
mov
in
in
mov
stos
push
jle
push
fildl
lods
call
mov
out
adc
xor
pop
popf
stos
mov
lds
mov
stos
inc
scas
mov
push
repz
dec
es
shlb
push
call
xchg
push
enter
jae
daa
add
xchg
xchg
cmp
inc
xchg
sbb
sarb
pop
in
or
push
mov
push
fcoml
inc
test
push
mov
scas
ljmp
jae
daa
cmp
lea
dec
sahf
pop
es
sarl
jecxz
jmp
dec
adc
and
jg
mov
or
xor
cmp
int3
rclb
mov
mov
out
push
sahf
cmc
dec
adc
cli
pushf
inc
movsb
xorl
inc
jp
xchg
push
cmp
fldl
xchg
mov
cmp
push
pop
inc
inc
push
loope
inc
dec
cs
xchg
imul
xor
pop
insb
xlat
or
push
mov
mov
movsl
cld
xchg
pop
cmp
imul
repnz
into
cmp
leave
inc
cltd
inc
inc
pop
add
fcoms
sbbl
fucomp
test
jo
shrb
adc
cmp
rorl
aas
enter
test
lea
out
jecxz
sub
push
stos
fldcw
lods
aaa
insb
mov
mov
xor
fists
lods
mov
xor
jno
mov
add
jle
dec
test
inc
sbb
shll
ret
icebp
push
lods
dec
clc
or
pusha
pop
cmp
fstpt
out
push
aam
mov
add
into
fwait
arpl
or
dec
xor
lea
sub
jg
out
aad
bnd
aas
add
jbe
popf
sbb
ret
cwtl
dec
xlat
mov
popa
popf
xor
jle
jb
jb
sub
fwait
and
xor
xchg
das
in
xchg
sahf
cmp
and
test
js
lock
rolb
mov
and
movb
add
dec
mov
push
sahf
jg
cmc
movsl
mov
shll
push
push
movsb
push
lcall
cs
dec
popf
or
lret
cmp
sbb
repnz
pop
sahf
fs
pushf
hlt
xor
pop
pushf
pop
dec
jb
jp
ret
sbb
xor
push
popf
and
std
or
imulb
in
sub
push
pop
cs
lret
lods
mov
pop
mov
loopne
pop
cmp
xor
fwait
fs
leave
jp
mov
mov
xor
xchg
add
aaa
into
jnp
cmp
aam
or
push
cmpsl
pop
dec
leave
std
jge
sub
imulb
shlb
xchg
ja
lds
inc
jns
adc
into
xor
ja
jbe
ror
fidivl
and
mov
mov
arpl
jmp
adc
stos
stos
mov
fucomp
mov
int
pushl
loopne
mov
orl
jle
cmp
adc
outsl
sbb
mov
outsb
sub
insl
clc
dec
adc
add
das
notb
add
cmpsb
sub
mov
dec
sub
lds
out
lret
xchg
inc
fs
out
push
inc
out
xor
mov
in
adc
call
cmp
sub
loope,pn
dec
mov
arpl
sub
mov
mov
sbbb
mov
shlb
inc
out
shr
out
push
dec
roll
into
sbb
mov
cmp
sub
notl
add
in
jge
mov
or
cmp
xchg
and
add
aas
sub
mov
push
test
mov
sbbl
mov
push
fmull
pop
imul
pop
lahf
js
xchg
add
xor
fcompl
mov
pop
mov
pop
fidivs
pop
mull
mov
or
inc
inc
bound
push
out
mov
push
or
fdivrp
iret
dec
mov
push
fwait
insb
cltd
sub
xchg
or
mov
mov
insl
inc
ficompl
fimull
jl
mov
inc
and
cmp
loop
mov
das
imull
scas
clc
or
mov
in
out
push
ret
pop
lret
mov
add
mov
shll
or
dec
add
dec
std
daa
into
mov
popa
int3
jg
clc
dec
dec
push
fsub
lods
test
cmp
jmp
inc
shlb
mov
jno
or
aas
addr16
popf
jbe
lsl
pop
daa
call
jno
sbb
fidivl
jmp
sub
repnz
and
insb
sub
pop
jmp
idivl
pop
icebp
shll
mov
mov
insb
sbb
lock
test
add
push
xor
stos
lcall
xchg
ja
push
fcmovu
call
pusha
clc
dec
das
jl
xor
xor
dec
loop
push
adc
xchg
dec
icebp
aam
mov
adc
rolb
test
mov
pop
cwtl
lret
mov
gs
sbb
mov
jmp
arpl
stos
iret
and
mov
mov
fidivrl
dec
push
mov
mov
pushf
fxch
int3
insb
xor
mov
sbb
mov
or
jmp
cli
inc
lcall
inc
pop
add
shlb
mov
inc
xchg
adc
inc
mov
fs
jl
mov
add
mov
aas
inc
rcrb
xor
sbb
mov
cmp
sarl
aad
inc
rcr
lods
in
out
cs
jo
pop
sub
sbb
sbb
test
mov
sbb
andb
cmpsb
fdivl
mov
arpl
sbb
fst
or
xchg
daa
leave
or
push
or
jle
sbb
jmp
mov
inc
fdivr
inc
mov
in
inc
or
shrb
gs
add
cli
cmp
imul
or
gs
sbb
pusha
cmp
xchg
and
test
out
iret
gs
and
sub
movl
inc
lahf
stos
pusha
clc
jmp
sbb
cmp
dec
xor
aas
stc
ret
pop
cmp
mov
ja
mov
xchg
shr
jo
add
mov
sub
push
fmull
mov
js
scas
sahf
adc
inc
incl
push
push
or
xchg
bound
cmp
call
insb
sub
mov
std
adc
pop
in
cmp
fwait
jae
and
fldenv
sarl
cmp
out
push
and
js
mov
xchg
jge
shlb
nop
fisubrs
xor
add
pop
cmp
push
movsb
pop
test
addb
loopne
add
adc
insl
xor
jnp
inc
sbb
rol
sbb
bound
xchg
push
jle
ret
mov
mov
pop
popa
fcoml
inc
fwait
add
push
inc
test
and
cmp
sub
lahf
ret
push
fwait
lods
jp
push
xchg
xchg
pop
mov
sbb
mov
stc
clc
in
cld
sbb
sbb
das
jp
bnd
dec
mov
aas
roll
and
sbbb
out
and
sti
inc
in
jno
daa
mov
das
fs
inc
mov
inc
mov
pop
inc
lods
nop
inc
sti
dec
cld
subb
lea
cmp
jnp
inc
shll
mov
cmp
out
pop
dec
xchg
fsubrp
cli
mov
pop
mov
loopne
test
mov
or
push
rsm
push
test
lret
lcall
add
cli
cmp
out
pop
call
fidivrl
das
cmp
mov
clc
dec
jecxz
jmp
scas
dec
adc
xorl
mov
hlt
es
sub
jnp
dec
mov
arpl
sbb
adc
enter
pop
decl
pop
pushf
dec
and
fdivl
adc
sub
movsl
xor
aaa
push
icebp
and
loope
movsl
ja
inc
mov
stc
inc
mov
xor
cmp
inc
inc
cmp
int
fisubrs
sub
mov
scas
cmp
jae
add
dec
pop
and
mov
xchg
out
ja
out
xchg
sbb
insb
inc
test
adc
xor
fidivrs
mov
lcall
xor
addb
push
idivb
addr16
mov
sti
or
or
cwtl
pop
lock
push
xchg
pop
test
mov
adc
pop
cmp
rcl
mov
jns
mov
sub
pop
mov
sbb
mov
stc
cmpl
dec
mov
mov
push
adc
fisubs
andl
outsl
in
ret
jnp
or
adc
divb
and
xchg
ja
ficoml
add
xor
dec
sub
inc
sub
stc
stos
lock
test
mov
repnz
loopne
imul
adc
add
cs
imul
es
or
sti
cmp
pop
xchg
in
jg
and
mul
jbe
push
movsl
push
fnstcw
or
jl
mov
sub
mov
mov
jb
xor
jnp
xlat
aas
inc
add
add
ret
out
xchg
mov
add
inc
cmp
or
rolb
adc
in
in
aas
xor
loopne
sub
and
lcall
sub
inc
mov
in
imul
mov
fsubr
push
push
enter
rcrl
inc
dec
loopne
ret
pop
in
dec
cmpsb
mov
xchg
sub
ret
aas
xchg
and
mov
mov
dec
and
dec
sbb
cmp
jns
stos
inc
sub
lret
adcl
lret
shrl
pop
mov
mov
jo
in
dec
sahf
pop
pop
inc
insb
lahf
stos
lea
outsl
mov
sub
sub
clc
adc
mov
xchg
xor
mov
fdivs
push
cs
inc
mov
push
mov
mov
sbb
data16
mov
add
mov
jle
pop
mov
push
cmc
cmove
andl
dec
push
dec
insl
popa
jecxz
lahf
cmpsb
or
jo
rcrl
pop
in
into
ds
pop
and
popf
push
sub
pop
add
lods
xchg
xchg
cs
mov
sub
push
mov
cmp
xor
fwait
das
inc
aad
sbb
mov
movsb
and
lea
shrl
je
aas
push
movsb
popa
andl
call
xlat
outsb
inc
ss
out
mov
push
adc
jb
xor
xlat
jne
movsl
mov
cmp
or
jp
sbb
jp
dec
rcrl
xchg
add
xorl
lahf
cmp
dec
repnz
pushf
out
into
out
loopne
or
addr16
lock
ret
movsb
mov
call
fs
xchg
aas
xchg
in
jmp
add
dec
nop
imul
jge
mov
xchg
call
aad
out
ret
mov
xchg
leave
dec
and
fisttpll
mov
push
scas
cs
pushf
stos
fdiv
fsubr
pop
sbb
jo
sub
aas
and
je
sbb
lret
add
les
mov
dec
push
pop
aam
repnz
xor
jg
pop
loop
adc
mov
xlat
inc
andb
jmp
aad
xor
lcall
pop
sub
fdivs
cmp
jp
sub
dec
jg
jge
xchg
add
loopne
test
bound
inc
leave
jb
sarb
pop
aaa
mov
cs
or
xor
addl
inc
push
jp
cltd
gs
lods
andb
and
or
out
stos
sbb
adc
clc
popf
ja
lods
rorb
cltd
dec
pop
mov
dec
imul
aaa
or
sbb
rcrl
mov
jmp
mov
lock
push
push
popa
xorl
out
hlt
mov
les
pop
pop
jg
xchg
roll
rorb
scas
in
sarb
int
or
hlt
jecxz
popf
icebp
psubsw
push
dec
cmp
jle
inc
flds
pop
inc
scas
and
or
aam
xchg
jge
rcll
fdivrs
sti
in
jb
and
dec
push
hlt
or
xchg
sti
push
or
mov
xor
ficompl
push
or
stos
xchg
sbb
ljmp
xchg
push
test
hlt
adc
jns
sub
xlat
outsb
sbb
insb
js
push
jns
orb
mov
jmp
loopne
loopne
sti
adc
insb
xchg
add
pop
jns
cmpsb
outsb
jl
dec
dec
pop
insl
jge
inc
mov
add
mov
insl
lods
adcb
pop
mov
push
lcall
xlat
repz
pop
mov
ret
loope
stos
mov
pushf
arpl
fs
incl
inc
fptan
jae
imul
sbb
mov
sub
cmp
pushf
adc
inc
cmp
or
adc
insb
jmp
data16
iret
xor
ljmp
mov
add
or
cmp
adc
push
pop
and
xchg
ret
cli
push
popf
jmp
clc
jae
shr
push
cmp
fs
subl
fsubrs
jo
cmp
rol
lret
push
subb
in
push
movb
inc
cmp
mov
mulb
inc
mov
mov
addl
jb
or
test
aad
iret
je
test
cmp
lret
mov
push
push
sub
mov
out
jp
xlat
stos
in
inc
cmp
xchg
sub
sub
push
jmp
pushl
fimull
jge
jecxz
call
out
cmp
add
subb
je
xchg
mov
pop
jmp
loopne
in
xor
out
cmp
xor
mov
fldl
fimuls
es
fucomp
cmp
stos
in
adc
mov
icebp
xor
mov
add
sub
fistpl
aam
cmp
mov
ljmp
sbb
aam
mov
lods
pusha
in
rclb
loope
sahf
outsl
mov
push
ljmp
add
jns
pop
movsl
adc
and
or
mull
push
cli
or
mov
imul
mov
pushf
hlt
aaa
inc
aam
and
jo
daa
xchg
pushf
xchg
jle
sub
daa
or
mov
mov
rcr
pushf
repnz
and
dec
add
nop
xchg
loope
pop
xor
inc
pop
xor
idivl
roll
int
fdiv
pushf
dec
call
fldcw
test
adcl
mov
jg
pop
mov
pop
dec
int
ja
pop
sub
add
es
repz
out
xchg
fbstp
fmul
bound
shlb
xchg
xor
mov
repz
or
xchg
pop
fucomi
ret
jb
shrb
jmp
adcb
mov
leave
add
cmp
mov
neg
mov
outsb
loop
mov
test
stc
stos
andl
xor
test
cmp
mov
cmp
xor
sub
push
mov
push
repz
ljmp
xor
fwait
loopne
and
data16
lods
sub
sbbb
xor
jg
negl
aas
adc
jns
dec
lods
rclb
lahf
popa
into
test
push
mov
xchg
int
aam
jmp
inc
repnz
into
cli
inc
lret
adc
xor
insl
dec
fnstenv
jno
sub
imul
pop
add
subl
mov
pop
movsl
scas
loopne
push
jnp
dec
out
pop
add
in
mov
jg
xor
lock
mov
mov
jp
jo
xor
or
pop
loop
xor
out
js
lock
rcrl
cmp
shrb
dec
xorb
sti
rclb
subl
je
or
pop
mov
ficoms
xor
push
inc
pop
test
scas
mov
mov
sbb
jg
sub
mov
cmp
push
push
mov
test
test
push
lods
push
cltd
sub
sbb
popa
ret
lods
stos
outsb
sbb
xor
pop
mov
cmpsb
sub
push
jne
sbb
push
mov
testb
insl
lods
mov
lods
or
test
test
sbb
pop
push
xchg
pushf
ret
xchg
xchg
stc
and
rclb
stc
pop
test
xchg
daa
add
bound
or
push
lods
jb
pop
add
or
inc
stc
jge
arpl
sub
jne
into
push
lods
inc
adc
jae
ficompl
or
and
push
dec
das
mov
jb
mov
xor
lea
loopne
ret
xlat
mov
cli
inc
js
ret
adc
push
xchg
push
int
mov
dec
cmp
das
dec
jg
cmp
lods
loop
adc
mov
fsub
test
lds
in
je
inc
pop
add
xor
sub
sbb
enter
cmpsl
imul
xchg
lahf
jb
or
out
mov
frstor
into
xor
sbb
mov
push
fmuls
push
and
ficoml
out
push
adc
test
pop
bnd
push
outsl
pushf
out
mov
filds
int3
insl
sbb
int
les
scas
out
js
cs
outsl
test
pushf
or
andb
mov
adc
pop
popf
xchg
mov
fcoms
add
cmp
imul
mov
inc
fldcw
pop
jle
scas
fcoml
pop
xor
aas
xor
jle
cmp
mov
cmp
xchg
inc
sarl
mov
mov
jbe
xor
mov
mov
xor
jnp
fdivs
std
xchg
and
loope
out
in
sbb
xor
jno,pt
adc
xchg
js
mov
push
nop
outsb
sbb
dec
add
lods
cwtl
addl
push
and
lcall
in
fldenv
pop
push
mov
mov
cs
arpl
sbb
outsl
jecxz
test
dec
lods
fstl
adc
pcmpeqw
idivl
sub
mov
mov
and
push
push
ror
xchg
icebp
mov
dec
cli
jne
les
sub
cmc
add
push
pop
in
sbbb
push
jbe
cmp
bound
dec
sarl
stos
jle
xchg
in
in
fisttps
push
mov
xor
movsb
pop
lock
insl
mov
mov
sub
imul
add
movsl
push
pop
aam
mov
dec
inc
push
loop
cmpsb
dec
fiadds
cmp
stos
cmp
cltd
mov
stc
iret
popa
push
or
test
lret
js
int
xchg
push
setae
std
lods
icebp
js
stos
inc
lods
sub
pop
fnstenv
test
dec
jmp
rolb
repz
xchg
push
or
jae
xor
jno
out
popa
adc
leave
pop
lods
sub
ret
sub
rorb
stc
or
or
into
push
xor
aad
movb
mov
imul
mov
cmpsb
bnd
imul
scas
xchg
add
popa
aad
jecxz
negl
jl
gs
sub
mov
movsl
pop
adc
rclb
mov
mov
xor
inc
mov
cmpsb
into
std
je
sub
ds
imul
popa
push
jle
aas
mov
into
insl
inc
add
in
ret
push
fsubp
lret
insb
sub
and
jno
mov
and
shl
repz
cmpsl
push
mov
std
shlb
repnz
mov
jno
pop
ljmp
popf
stc
adc
adc
push
out
xchg
lahf
lret
into
in
mov
jle
leave
push
jg
add
add
dec
pop
mov
sub
sarb
fwait
adc
sub
sbb
sbb
pop
enter
xor
pop
out
mov
in
jnp
outsl
fildl
subl
dec
and
adc
scas
xor
pop
or
mov
and
imul
out
inc
jp
xorl
rorb
into
mov
dec
mov
aas
jge
lock
ret
ficoml
addr16
gs
cmp
mov
aas
mov
cmc
repz
add
jp
sti
adc
jnp
mov
mov
mov
sahf
data16
rorb
aad
xchg
pop
hlt
jl
flds
addr16
mov
imul
jl
cmp
and
int3
in
sub
loope
mov
mov
lods
or
in
mov
mov
inc
and
push
movsl
inc
dec
add
pop
pop
pushf
cli
fsubs
dec
sbb
sbb
lea
jno
loopne
loope
add
cwtl
mulb
out
dec
dec
jne
stc
popf
adc
mov
inc
test
inc
cmp
stos
out
rcl
or
xlat
clc
jg
js
add
sub
idivb
dec
jmp
adc
mov
sbb
cwtl
push
pusha
pop
and
mov
inc
fsubs
fsts
add
inc
jle
popf
cmp
jmp
loopne
popl
shll
negl
inc
inc
cli
adc
mov
outsl
popf
xor
add
lret
add
jbe
mov
xor
push
fwait
aad
or
mov
fsubrl
ret
lds
xchg
test
hlt
xor
jmp
jb
xchg
scas
jb
xchg
adc
adc
daa
mov
aaa
int
daa
js
sbb
push
push
xchg
hlt
or
xlat
pop
cmp
dec
sub
subb
sub
pop
dec
mov
push
jno
pop
repz
in
sub
adc
cmp
mov
sbb
jnp
mov
sti
fnstcw
lods
lcall
popa
mov
xchg
or
mov
filds
lds
push
loop
add
or
lods
outsl
es
jmp
jns
xor
dec
push
lds
add
add
scas
xor
daa
lcall
or
mov
enter
fistps
mov
sbb
cmpsb
aam
fidivrl
test
test
cmpsb
dec
jge
loop
call
mov
push
cmp
dec
call
mov
mov
imul
ja
into
xor
push
cmp
add
pop
outsl
ja
inc
pop
cmp
int
cmp
inc
cmpsl
test
subl
loopne
push
jno
stc
outsb
jo
fsubs
pop
fldl
ss
jp
dec
movsb
mov
jecxz
or
das
popa
int3
jno
sub
mov
lret
data16
call
or
sub
cmc
mov
jmp
out
inc
insb
dec
push
sbb
call
and
pop
mov
fs
add
xlat
jge
cmp
cli
repnz
pop
gs
out
cmp
or
fimull
mov
dec
movsb
ficompl
jge
xchg
pop
mov
std
jnp
adc
scas
fs
add
push
xchg
loope
es
inc
les
mov
push
sbb
xor
stc
push
xor
adc
shlb
add
push
outsb
lods
mov
xor
in
pop
pop
xchg
aaa
mov
scas
sti
jne
popa
cwtl
xor
retw
mov
cld
sbb
xor
in
mov
lods
mov
jo
cmp
in
dec
aad
jmp
jns
sbb
add
mov
sbb
or
out
loop
fidivs
imul
scas
ljmp
dec
xchg
outsl
int3
cmpsl
stos
mov
mov
mov
jle
loop
or
lods
sub
lcall
pop
movb
inc
sub
xor
xor
jne
mov
cld
and
negl
rcl
fimull
stos
cwtl
popa
outsl
daa
rolb
sub
mov
dec
dec
lahf
push
arpl
add
cmp
sbb
sub
out
jno
and
xor
and
push
popf
addr16
adc
and
or
notb
cmp
add
jns
mov
or
lock
push
jne
or
jns
add
jnp
repz
adc
jg
fsubr
fmuls
jge
and
cvtdq2ps
pop
push
mov
leave
sbb
scas
loope
mov
sbb
dec
fwait
pop
insb
sub
sub
push
mov
adc
int3
addl
dec
xor
sub
fsubr
adc
test
push
and
aaa
dec
or
jbe
dec
jecxz
cwtl
mov
inc
arpl
sbb
rcll
jg
mov
loopne
dec
add
cmp
ss
mov
dec
adc
mov
pop
add
repz
dec
stos
sub
loopne
ja
bound
dec
call
add
sub
inc
shrb
pop
xor
lds
and
lcall
scas
aam
mov
daa
mov
and
inc
enter
dec
js
sarb
rcrl
mov
or
shll
mov
loop
sub
jbe
dec
mov
sbb
add
fistpll
xchg
movsb
xchg
cli
sub
sub
nop
jbe
add
mov
add
lahf
add
iret
inc
in
cmp
popa
cld
adcl
or
jge
fwait
push
inc
pop
pop
push
leave
cltd
cmp
fnstsw
fistl
jo
inc
fstpl
sub
fildl
push
mov
xor
lock
sti
jle
sub
inc
hlt
jmp
loope
mov
dec
add
les
lahf
pop
rcrb
stos
and
mov
jg
pushl
push
arpl
pop
push
mov
inc
mov
mov
shl
cwtl
cmc
cmc
test
out
lea
out
js
es
outsb
dec
cs
out
jg
sbb
nop
xchg
sbb
cmp
pushf
xlat
rorl
std
fnstcw
iret
je
or
jb
ret
setb
jo
jno
incb
push
xlat
jbe
push
or
cmpsb
aam
mov
mov
sti
repnz
xor
push
pop
xor
push
add
fsts
push
inc
inc
and
dec
jo
mov
stc
jno
stc
push
stos
cmp
sbb
adc
adc
bound
rep
lods
outsl
push
sub
push
add
je
mov
mov
fsubrl
data16
in
mov
inc
and
mov
iret
or
leave
jecxz
fidivrs
cld
addr16
inc
push
es
xor
stc
xor
aaa
and
imul
aaa
pop
ds
xchg
inc
dec
int
repnz
scas
pop
test
gs
lahf
rol
mov
int
jmp
mov
lds
dec
scas
mov
lods
inc
sbb
mov
cmpsb
inc
decl
push
xor
sahf
std
xor
bound
xchg
jmp
pusha
push
js
push
jne
mov
aaa
in
xor
and
shrb
push
lret
xor
pop
imul
in
ret
loop
popf
iret
push
ds
ss
or
pop
icebp
fbstp
arpl
cmp
xor
add
fmulp
cmp
adc
daa
inc
out
outsb
sbb
out
mov
sbb
stos
scas
call
sbb
ret
sti
fldenv
test
lock
inc
adc
pop
fcompl
xchg
iret
mov
ljmp
push
test
popa
subl
loop
and
fwait
sbb
sbb
add
jno
xchg
ret
mov
adc
lds
lret
push
push
shlb
push
xchg
nop
insb
push
roll
xchg
mov
or
bound
fbld
subb
dec
gs
mov
in
dec
sub
daa
clc
sbb
das
addr16
repz
dec
sbb
into
pop
int3
adc
pop
jae
fcmovbe
adc
jae
adc
inc
lods
dec
adc
in
sbb
sub
nop
notl
in
inc
out
dec
sub
or
das
and
ret
cmp
outsb
mov
jg
data16
push
mov
dec
mov
push
inc
jle
or
adc
mov
insb
movsb
rol
fldenv
cmc
outsb
popa
add
mov
in
clc
cmpsl
out
rol
pop
daa
mov
repnz
pop
xor
cmp
les
stc
sub
inc
and
imul
xor
mov
jns
mov
and
mov
mov
int
std
cmpsl
in
cmc
movsl
mov
loop
jne
lods
lret
push
push
out
sbb
icebp
cmp
iret
cmp
fdivrs
cmpsb
lret
les
mov
fisubs
fnstenv
rcrl
mov
lds
outsl
testl
dec
mov
or
test
cmpsb
jns
outsb
mov
lret
xchg
inc
xchg
cld
out
addr16
leave
jae
push
insl
cmpsb
in
pusha
and
sub
push
inc
int
push
cmp
pop
das
or
mov
jecxz
jb
pop
das
add
add
out
mov
lock
out
test
mov
cmp
add
repz
xor
push
arpl
dec
mov
stc
cmpsb
fs
mov
fs
adc
pop
jmp
pop
mov
jae
test
dec
js
loop
adc
testb
and
insl
mov
and
mov
aaa
movsl
mov
push
sub
fisubl
scas
repz
jno
push
outsb
loopne
fwait
insb
push
or
mov
push
dec
sub
pop
jne
mov
fsubrl
and
jns
sbb
xchg
frstor
aaa
jmp
and
out
rclb
sub
pop
jle
inc
and
rcrb
dec
enter
pop
das
add
ja
add
cwtl
inc
pop
cltd
mov
and
jmp
jecxz
repz
mov
lahf
imul
dec
jae
inc
pop
xchg
xchg
stos
pushf
and
add
repz
decl
insl
push
mov
int3
lods
lods
cmp
sub
frstor
sub
cmp
ret
imul
fadds
addr16
jne
das
or
xchg
dec
jge
jge
cmpsb
sbb
push
dec
das
addr16
and
aam
push
rcrb
ss
push
adc
in
xchg
je
mov
fidivrl
inc
aas
icebp
xor
or
or
push
or
movsl
pop
mov
mov
and
dec
cmp
and
mov
aas
adc
sbb
mov
movsb
mov
pop
dec
ljmp
jp
jg
dec
scas
inc
jg
jbe
insl
mov
xor
dec
lock
add
inc
cli
add
mov
adc
xchg
cwtl
js
mov
sbb
sub
jmp
and
push
jle
sbb
mov
xchg
xor
popa
and
cltd
std
xchg
adc
add
cmpsb
lahf
fwait
xor
pusha
lods
lock
outsb
cli
cmp
jg
es
lods
or
les
or
cmp
mov
leave
std
subl
in
push
lock
scas
mov
sbb
cmp
dec
lcall
xchg
lret
mov
into
iret
push
rclb
pop
fs
lret
mov
hlt
mov
test
test
cmp
push
icebp
cs
pop
jp
pop
or
lahf
mov
fwait
mov
mov
mov
addr16
fxch
inc
mov
pop
movsl
cmp
ljmp
mov
shl
push
rolb
or
dec
in
incl
adc
add
nop
bound
aad
imul
xchg
daa
lcall
or
or
and
mov
loope
iret
mov
movsb
mov
out
aaa
cmc
mov
les
lret
jmp
sub
cmp
sahf
cmpb
aad
repz
push
mov
sbb
jmp
mov
dec
gs
jle
mov
test
test
vpmulhw
imul
addr16
push
mov
push
sub
push
outsb
dec
les
mov
in
jmp
add
adc
lods
addr16
jp
cmpsb
shrb
cltd
pop
orl
jb
xlat
lret
and
or
xor
movsl
data16
push
pop
sub
mov
aaa
jle
movsb
jo
mov
jl
sbb
cld
pop
cmp
je
inc
lret
inc
adc
cmp
xchg
mov
jne
pop
push
cmp
mov
mov
iret
jns
pop
cmp
in
sub
and
addl
mov
xlat
outsb
scas
pop
fildl
movsl
mov
mov
dec
pusha
cltd
sbb
repz
jno
or
inc
adc
jmp
out
xchg
lret
xor
lods
aas
lcall
push
rolb
idivb
mov
sahf
mov
pop
inc
loopne
imul
mov
mov
icebp
mov
aad
or
jl
out
das
fcompl
jle
push
scas
adc
sub
lea
dec
mov
inc
xchg
mov
fldenv
jo
jno
jle
lods
mov
jmp
sub
stc
adc
loopne
xor
xchg
and
pop
sbb
inc
xor
mov
jmp
jecxz
stc
scas
fldt
pop
lock
pusha
aad
inc
add
push
pop
adc
mov
xor
pop
inc
mov
in
adc
inc
sbb
pop
jmp
movb
leave
fsubrp
dec
add
jbe
mov
push
inc
pusha
cwtl
cmovl
xor
cld
imul
jl
movsb
mov
mov
imul
adc
fwait
push
xor
pop
faddp
stos
cmc
mull
cmp
mov
dec
adc
sbb
inc
mov
jle
jae
rcrb
fisubrl
imul
inc
repz
push
scas
in
mov
les
in
mov
hlt
addr16
jo
inc
idivb
js
std
adc
lea
pop
cli
stc
aad
mov
dec
jae
cmp
add
int
jae
rcl
in
xchg
incl
orb
enter
adc
lahf
cmp
sub
iret
pop
repz
and
pop
punpckhwd
test
movsl
mov
sahf
sub
dec
icebp
out
call
adc
cmpsb
mov
cmpsb
psubsb
loope
xchg
sbb
test
push
imul
dec
mov
lahf
cs
arpl
movsb
addr16
lahf
mov
jb
jo
jns
fisubrs
bound
mov
xchg
push
repnz
xchg
adc
and
movsb
or
out
cmpsl
jns
mov
cwtl
out
and
pop
outsb
mov
push
lock
cs
pop
inc
scas
cmp
jmp
sub
jno
xorl
pop
int
or
push
sub
jae
clc
push
repz
dec
mov
out
add
adc
pop
jne
cmc
pop
flds
int3
mov
imul
and
filds
sbb
dec
test
sub
insl
pop
dec
sbb
dec
in
hlt
jmp
shl
jle
lret
cmpsl
mov
dec
in
push
je
mov
xchg
adc
push
mov
bnd
xchg
scas
das
pop
add
jl
mov
dec
adc
loop
incl
adc
sbb
cs
idivl
mov
shlb
sbb
mov
fldenv
sahf
jns
cmpsb
mov
les
pop
cmpsl
cmpsb
lock
jl
add
or
mov
xchg
popa
out
cmp
xchg
push
or
ja
jae
xor
xchg
pop
push
lret
hlt
inc
lds
pop
fists
aas
or
mov
das
dec
ss
mov
test
add
cwtl
and
and
fsub
sbb
push
jge
sbb
jo
mov
call
fistpll
mov
mov
inc
pop
sbb
fiadds
inc
stos
cmp
into
iret
mov
pop
xlat
xlat
adc
cltd
jp
push
sbb
jmp
lock
jae
data16
xchg
call
loop
outsl
push
push
fstl
aaa
cmp
cmpsb
stos
inc
jbe
stc
jl
fstpt
jne
mov
rcr
mov
sbb
add
imul
repnz
lcall
and
push
jp
sbb
stos
nop
test
cmp
lret
jbe
arpl
fsts
rclb
test
nop
les
ret
loopne
stc
pop
xor
jae
cmp
pop
add
push
out
out
in
push
inc
outsb
shlb
jnp
push
and
push
cltd
mov
iret
xchg
mov
or
pop
adc
das
sar
enter
fiadds
xor
cmp
sub
out
jle
cmc
pop
jb
insl
repz
mov
scas
loope
test
test
sub
sub
arpl
and
test
mov
and
pop
ret
mov
push
push
in
inc
inc
cmpsl
ret
mov
out
movsl
xlat
ret
adc
lahf
pop
and
cld
mov
cmpsb
pop
test
movl
clc
int
mov
pop
mov
ficomps
mov
rcrl
mov
loope
sti
mov
mov
cli
scas
or
dec
dec
jno
mov
imul
xor
xchg
sbb
les
lcall
jns
icebp
shll
pop
test
push
jo
sbb
daa
loopne
sbb
stc
mov
je
jmp
adc
mov
shrl
dec
insl
inc
nop
jp
adc
pop
inc
call
cmp
fldcw
les
pop
inc
jp
lods
aaa
push
test
imul
inc
cmp
lock
jle
pop
push
add
mov
xor
sbb
push
fcompl
jnp
cld
and
sbb
push
sbb
sarb
mov
jecxz
pop
movsb
addr16
or
mov
ficoml
dec
testl
cmp
aam
outsb
adc
shlb
dec
dec
cmp
push
xor
and
ja
ret
pop
add
sub
push
sub
popl
inc
push
gs
scas
xor
test
lahf
lret
fwait
pusha
cmp
sbb
mov
cmpsb
aam
shll
scas
cmp
sbb
jle
les
test
xor
scas
imul
ret
or
pop
sub
fdivrp
mov
mov
mov
jo
test
scas
roll
sar
push
mov
loope
cltd
outsb
in
add
mov
dec
popf
lods
jl
cmpltps
pop
ffreep
sbb
movsb
mov
mov
stos
sbb
and
and
adc
in
push
jne
pop
jne
ljmp
inc
jbe
and
in
inc
mov
stc
sti
in
inc
mov
xchg
push
push
push
test
mov
imul
stos
sub
sub
clc
sbb
push
in
inc
push
leave
push
js
jbe
jne
push
jo
pushf
popa
pop
pop
mov
fdivr
in
jmp
pop
movsb
sbb
ja
sub
cmp
in
lods
aad
imul
mov
pavgw
jbe
nop
popf
or
leave
out
repnz
out
rcll
inc
icebp
mov
imul
inc
enter
cs
push
push
dec
filds
pushf
scas
jl
adc
cltd
outsl
adc
sarb
jns
ret
sbb
cli
adc
mov
ret
xor
and
cld
lcall
push
mov
sete
xor
xchg
movb
pop
xor
or
cmpsl
sbb
rcrl
jne
shrb
cld
dec
dec
dec
pop
cwtl
movd
fstpl
movsl
sbb
xor
test
sysexit
cmp
data16
into
xor
xchg
xor
repnz
pop
aam
imul
std
popf
or
xorb
fisttpll
std
dec
je
xor
mov
into
gs
push
lods
xor
xchg
pop
ret
hlt
and
movsb
jnp
xor
add
popa
stos
cmp
add
pop
xor
xchg
jmp
insb
sub
pop
pop
cmp
sub
lock
lods
in
mov
dec
mov
mov
test
add
jae
mov
test
rol
aam
jecxz
xchg
push
dec
ret
dec
mov
push
fdivrs
inc
lret
test
ljmp
mov
dec
push
outsb
inc
cli
inc
or
jbe
push
push
cltd
subl
stc
fcoms
ja
dec
es
shlb
test
or
mov
lcall
pop
cmp
jns
mov
push
push
push
adc
ret
sar
push
xchg
lea
loope
popa
cmp
pop
sub
xchg
scas
jl
pusha
movsb
cli
push
pop
or
loopne
ss
js
add
fdivs
std
andl
inc
jmp
and
push
shrb
dec
pop
mov
inc
imul
fiadds
shlb
loopne
out
mov
xchg
mov
jne
ret
lods
imul
mov
cmp
ja
cltd
std
push
and
and
inc
loopne
cld
imul
stc
and
nop
lock
pop
sbb
das
cmp
enter
and
je
ljmp
out
push
cmc
jp
outsb
or
cli
stos
outsl
and
leave
ret
mov
pop
leave
popl
inc
fnsave
dec
or
lret
jns
pop
pop
inc
pop
fwait
into
jecxz
or
add
inc
pop
and
inc
fstps
int3
movsl
shlb
sbb
xor
sbb
dec
push
jne
push
std
add
mov
inc
pop
xlat
pop
das
mov
loopne
lock
ret
adc
fwait
cmpsl
mov
dec
dec
sbb
push
cmpsl
loop
icebp
int3
jb
mov
pusha
sub
xlat
xor
shrl
andl
mov
std
mov
in
xchg
xchg
add
fwait
mov
push
cmp
lcall
in
jg
fdivrl
popa
jg
movsb
lcall
jae
or
jge
fucomip
mov
fldl
dec
fsubl
fs
lods
cmp
mulb
cmp
mov
dec
sub
sbb
mov
in
cmpsb
rcll
scas
dec
inc
les
sbb
mov
jge
out
add
rorb
inc
adc
call
cmp
mov
xchg
pop
stc
push
out
mov
xchg
out
loop
cmp
mov
vmread
aam
popa
insl
sbb
mov
mov
dec
sbb
xor
dec
push
push
movsb
mov
cltd
out
mov
sbb
jae
stos
insl
bound
dec
int3
inc
fdivr
sbb
outsl
push
xchg
mov
jmp
sti
or
aaa
scas
xor
xor
dec
dec
inc
lock
sub
rcrl
aaa
test
mov
cltd
outsl
xor
xchg
xor
and
sub
mov
int
mov
jbe
ds
imull
sbb
clc
cmp
repz
adcl
movsl
mov
lods
lret
imul
jp
popa
cmc
mov
lods
lods
inc
fdivrp
adc
ljmp
inc
cmpsl
add
ja
push
test
int
mov
imul
push
inc
pop
ja
sbb
mov
pop
pop
cs
jnp
cmp
movsb
loope
fsub
jl
loop
aad
out
cmp
leave
int3
cmp
or
push
fdivrl
sub
add
jno
rol
leave
sbb
sbb
mov
sti
mov
mov
mov
add
test
add
sbb
pop
dec
lds
jne
fimuls
mov
jle
psubsw
rorb
or
je
jns
xor
decl
popf
xor
out
mov
imul
ja
mov
pop
jge
arpl
ret
addb
fdivp
repnz
xchg
lock
gs
popa
lret
loopne
mov
cli
cli
outsb
mov
xor
into
fcoml
in
push
ljmp
testb
shll
mov
adc
outsb
fnstcw
mov
pop
pop
cmp
mov
xorb
sahf
pop
call
test
mov
scas
daa
mov
ret
and
jecxz
push
lcall
out
out
jns
add
std
mov
pop
sbb
xor
xchg
pop
in
jne
or
sbb
or
arpl
test
aas
jmp
mov
loopne
mov
sbb
les
sbb
jno
imul
mov
int3
or
inc
mov
nop
cmp
jmp
jecxz
outsb
sub
cmp
shrb
divb
and
jl
push
shll
imul
add
push
sti
xchg
mov
sahf
mov
imul
push
icebp
add
jb
in
aam
push
pop
jns
inc
push
repz
cmp
pop
jmp
cmpl
xchg
or
sub
xor
mov
mov
enter
xor
or
popa
insl
xor
xchg
mov
in
call
dec
out
lods
stc
iret
or
aad
pop
dec
pop
testb
xchg
xor
movsl
mov
sbb
dec
sub
repz
xchg
rolb
pop
or
push
cwtl
test
sbb
cmp
cmp
shll
jmp
xor
in
scas
push
mov
jmp
test
shll
xchg
xchg
div
pop
and
push
add
cwtl
cwtl
stc
xor
pusha
and
mov
dec
cmp
movsl
sarl
stos
mov
hlt
jne
ret
shr
push
adcb
mov
jl
pop
push
xchg
sbb
scas
sub
cli
stc
or
mov
sahf
shlb
iret
pushf
push
sub
data16
inc
cmpsl
and
mov
mov
mov
in
inc
inc
decb
es
mov
inc
ss
or
aad
punpcklwd
adc
push
jp
stos
fldenv
das
in
scas
inc
shlb
out
loop
int3
sub
lds
in
scas
jmp
or
fwait
pop
and
sub
lret
shr
sub
push
cmc
push
inc
daa
xchg
pop
mov
sbb
jbe
aaa
dec
stos
push
jne
adc
adc
sub
rcl
push
mov
dec
or
aam
fs
mov
jmp
call
iret
jb
std
and
test
nop
xor
imul
ffreep
sub
lcall
std
or
adc
iret
pop
jle
lahf
xchg
out
add
arpl
rcrl
pop
push
int3
mov
sub
cmpsb
mov
xor
pop
dec
gs
jns
scas
ret
push
and
dec
mov
ds
aas
sahf
vunpcklps
cld
cmp
test
sbb
repnz
insl
and
lcall
fnstcw
pusha
xchg
cmpsb
aaa
mov
cs
leave
push
sbb
imul
dec
cmp
shr
xchg
adc
jl
subb
in
mov
xor
xchg
dec
daa
inc
in
aam
insl
push
in
cmc
push
adc
cmpsl
out
push
or
test
dec
jmp
dec
out
test
add
adc
add
add
and
shll
mov
aas
xor
mov
jmp
mov
arpl
cld
push
push
add
rcrb
testb
cwtl
mov
in
std
fs
cmp
adc
aam
xor
sub
fbstp
mov
jo
cmpsb
outsb
push
insl
xchg
jnp
push
mov
test
cmp
fs
sar
push
ljmp
mulb
mov
cltd
mov
test
jns
push
and
mov
idivb
sub
inc
mov
imull
in
jno
and
mov
rcll
ss
dec
std
inc
mov
dec
mov
sub
pop
xor
sbb
push
in
scas
ljmp
inc
push
lahf
in
inc
popl
and
imul
pop
mov
in
scas
in
incl
inc
mov
imul
sub
stc
mov
arpl
or
or
movq
pusha
xchg
xchg
cmc
pop
mov
test
enter
mov
cmp
in
sbb
call
push
cs
cmp
sub
arpl
add
mov
insl
faddl
inc
ret
pop
ljmp
out
sbbl
jne
repz
push
test
push
sbb
out
incb
inc
flds
cmp
inc
push
mov
add
xor
mov
pop
mov
aad
rorl
and
sbbb
andb
mulb
inc
mov
adc
pop
call
popl
dec
mov
gs
xchg
jmp
xlat
sub
lahf
push
sub
or
inc
xchg
in
push
imul
add
add
push
mov
lds
cld
outsb
dec
mov
mov
mov
xchg
jae
push
lahf
ds
int
daa
cmp
ficompl
testb
dec
cmp
xor
jmp
inc
push
xchg
mov
and
xchg
jecxz
stos
xchg
mov
jne
lret
jl
loope
icebp
movsl
xchg
xchg
sub
js
aam
imul
push
js
fistps
mov
fmuls
movsb
scas
jp
mov
or
lds
lcall
xchg
fucomp
xor
dec
dec
sub
mov
inc
mov
sbb
les
mov
push
mov
sub
mov
loop
and
lock
test
and
rcrl
in
jae
fstpt
lods
cmc
scas
fimuls
jns
scas
aam
adc
icebp
xchg
mov
dec
mov
pop
sbb
sub
or
xchg
fidivrs
leave
xchg
adc
and
and
push
mov
sbb
ja
mov
cmpsl
mov
sbb
mov
in
out
mov
je
lret
and
cli
push
mov
jae
incl
scas
testl
loope
jne
sarl
push
lea
xor
xchg
jg
add
mov
inc
aaa
dec
call
inc
lcall
shl
mov
pop
jbe
or
stc
cmp
hlt
push
rolb
add
sbb
pop
pop
sub
jae
dec
cs
popf
jg
push
data16
jns
sbbl
adc
sub
pop
stc
mov
adc
sahf
test
push
popf
mov
sbbl
xor
rcl
iret
mov
jle
mov
mov
and
cli
cli
scas
push
jne
inc
mov
or
push
and
int3
test
loop
sub
in
dec
cmp
inc
mov
pop
xchg
mov
inc
or
or
jne
daa
mov
mov
adc
push
inc
cmpsb
sub
inc
addl
sbb
mov
xor
mov
mov
loopne
cltd
std
mov
push
push
or
lcall
mov
outsb
loopne
outsl
add
inc
jb
sti
jbe
test
addb
lcall
xor
inc
pop
inc
fcmovbe
mov
int3
into
inc
repnz
subl
push
jno
cmp
dec
inc
jg
mov
imul
adc
or
jbe
push
scas
fisttps
rdtsc
mov
leave
pop
sbb
int
mov
xor
adc
out
loopne
and
fistpl
imul
cli
fs
pop
fsubrp
mov
xchg
dec
mov
ret
aas
incb
andb
sbb
mov
es
mov
jmp
movsb
sub
mov
lahf
xchg
dec
adc
adc
push
push
shlb
mov
pop
std
ljmp
push
testl
stc
mov
les
stos
cmpsl
adc
into
scas
dec
mov
jecxz
negl
mov
test
mov
shrb
mov
cmp
loop
mov
sbb
imul
pop
rcrl
mov
and
adc
inc
jo
or
leave
jne
cmp
loopne
xchg
shrl
gs
jle
orl
mov
jl
cmpsb
cld
scas
movsl
cmp
jno
cs
adc
pop
insb
xchg
pmaxsw
in
or
dec
sub
pusha
jl
mov
mov
inc
movsl
js
mov
daa
aam
stos
mov
xor
xlat
fildll
add
xchg
dec
xor
dec
inc
leave
push
shlb
push
out
outsb
push
mov
in
add
dec
xchg
jge
sbb
pop
mov
ljmp
shrl
and
jmp
add
sbb
mov
sub
sbb
mov
pop
xor
push
int
push
ret
imul
cmp
movb
inc
daa
ret
mov
mov
sbb
fimull
ret
fistpl
dec
pop
insl
nop
stos
dec
sbb
jne
mov
mov
mov
sbb
mov
cs
push
inc
xchg
xlat
out
out
push
gs
int3
adc
xchg
add
sbb
push
mov
mov
aas
adc
cmp
loopne
sbb
dec
push
js
add
nop
sbb
sbb
cmc
mov
push
sbb
ss
jecxz
adc
in
mov
imul
cmp
cmp
mov
aad
les
mulb
notb
mov
adc
std
dec
pop
test
fwait
sti
push
fdivrl
inc
cli
mov
out
sbb
dec
pop
je
popf
bound
ss
pop
sub
lea
or
fdiv
pop
outsl
cmp
pop
fwait
cmpsl
jecxz
notb
or
leave
xlat
jp
xor
cmpsb
int3
and
add
sub
and
jb
mov
adcb
sbb
gs
testl
dec
xor
and
mov
imul
movsb
pop
add
cmpb
push
cmp
xchg
push
xlat
adc
push
dec
test
cmp
and
and
lds
dec
dec
js
ds
or
movsl
andb
int
movsb
rcrl
jb
fisubl
nop
pop
repnz
fsubrp
rcrb
jo
dec
mov
mov
sti
inc
fsubp
mov
cmp
in
lea
mov
pushf
push
aam
addl
pusha
or
test
mov
fs
mov
fbld
dec
cmpsl
cmp
arpl
sbb
pop
pop
les
or
call
sub
lods
into
sbb
xor
int3
call
int
test
scas
and
push
imul
mov
lds
cmp
push
test
jb
pushf
push
cmc
xchg
int3
xchg
out
int3
xchg
das
clc
and
xor
lods
ja
and
adc
lock
lcall
sub
mov
orb
jmp
test
ret
xchg
scas
in
enter
cmc
je
pop
mov
fsub
xchg
outsl
pop
aas
dec
xchg
rclb
add
in
pop
loop
incl
xchg
shrb
loopne
je
sbb
lods
fadd
add
or
pop
pop
stos
pop
adc
data16
add
xor
mov
lock
xchg
xor
jge
mov
fimull
mov
lods
mov
push
cltd
das
xchg
sub
arpl
sti
sbb
mov
or
push
and
rolb
sbb
fwait
jne
fildll
and
push
enter
sti
jle
fadd
lret
xor
dec
mov
fidivl
mov
pop
pop
scas
or
jne
movsl
mov
aad
mov
pop
aam
pop
loopne
dec
sub
or
adc
push
and
inc
orb
xchg
mov
push
notl
jecxz
dec
lcall
test
mov
jbe
jae
bound
int
inc
outsb
jecxz
mov
popa
clc
ficomps
jg
data16
pop
cwtl
popf
sub
repz
or
jle
lock
sub
xchg
xchg
sbb
sahf
xor
or
cmp
or
into
pop
jg
add
jnp
jmp
jmp
jmp
xor
lahf
mov
and
test
or
mov
dec
jecxz
push
pop
xchg
push
adc
sub
sbb
mov
fnstsw
out
fisubl
sub
pusha
adc
leave
push
xchg
pop
inc
ljmp
in
adc
mov
std
add
mov
or
pop
pop
pop
repnz
es
xlat
sub
arpl
sub
movsb
clc
or
mov
mov
mov
insb
jle
adc
pop
mov
pop
or
mov
loopne
ljmp
aaa
cmp
or
dec
add
push
xchg
loope
dec
vxorps
fidivl
sbbl
mov
imul
leave
cmp
jmp
loopne
repz
sbb
adc
gs
insl
in
pop
inc
into
xor
stc
out
sub
bound
lret
std
push
mov
scas
daa
mov
aaa
adc
call
ficoml
pop
pop
shrb
idivb
mov
cltd
push
je
cmp
shr
cmp
mov
sub
lretw
sbb
je
data16
mov
mov
les
push
xchg
dec
mov
or
dec
icebp
xor
pop
xchg
jl
add
mov
add
xor
xor
or
pop
xchg
pop
sbbl
inc
cwtl
std
inc
or
outsl
mov
pop
sbb
jge
into
push
lods
add
and
cltd
sbbl
and
clc
mov
repz
repz
mov
mov
push
xor
sub
nop
pop
push
int
or
mov
xchg
imul
cmpb
xchg
add
xchg
mov
shrb
inc
mov
out
mov
cwtl
insl
push
and
dec
pop
xchg
sbb
insb
out
test
in
push
push
mov
call
xor
sbb
pop
mov
xchg
sub
shll
push
mov
inc
jo
lods
test
dec
repnz
mov
fsubrs
iret
sbb
mov
cli
lods
jbe
ficoms
sbb
xchg
ss
mov
mov
sub
pop
lods
aas
fs
in
scas
fisttpl
idivb
daa
inc
fdiv
add
nop
push
adc
pop
repz
mov
test
jp
aas
vshufps
push
and
test
add
sub
scas
rcrb
subl
cmp
pop
mov
leave
and
lret
dec
pop
std
outsb
jmp
xchg
fnsave
dec
mov
mov
cld
stos
dec
mov
jne
xchg
dec
bound
out
sub
lods
in
orl
aam
dec
bound
pop
dec
loop
cli
jns
out
sub
push
or
rcll
xor
imul
loope
cli
inc
test
cmp
mov
inc
repnz
xor
mov
mov
iret
inc
xchg
lahf
imull
dec
and
dec
push
mov
test
inc
pop
add
add
cwtl
pop
jbe
add
sarl
cwtl
mov
cmpsb
sub
mov
out
push
arpl
repz
cmp
repnz
fimuls
adcb
add
ss
lock
enter
mov
mov
popa
dec
pop
push
or
data16
std
mov
push
in
iret
test
pop
fisubrs
shll
pop
xor
mov
mov
cwtl
jecxz
outsl
cmc
cmp
lahf
not
adc
testl
sub
xchg
pop
mov
mov
pop
in
add
push
cmpsl
cmp
mov
adc
or
in
subb
dec
push
in
das
dec
mov
mov
mov
sbb
dec
outsl
mov
pop
xor
jmp
outsl
inc
dec
popa
jnp
mov
inc
xchg
xlat
dec
rol
loop
sub
jns
mov
push
adc
sbb
test
dec
dec
data16
stc
lcall
jl
mov
aaa
xlat
jo
pop
jmp
outsl
daa
push
cmp
jecxz
pop
cli
repnz
out
loopne
orb
cmpsl
adc
add
imul
jge
jae
push
faddl
idiv
stos
and
push
sti
ffreep
dec
push
enter
das
addr16
leave
icebp
iret
aas
inc
cmp
jns
int3
out
cs
jmp
mov
jae
xchg
daa
push
movb
bound
and
pop
jbe
pushl
push
push
xor
mov
inc
out
sbb
lret
and
push
rol
dec
pop
outsl
cmpsl
or
sub
and
pop
xchg
mov
dec
sbb
test
sbb
add
imul
or
cmp
pop
fldcw
mov
mov
cli
or
mov
sbb
andl
push
pop
out
inc
cmp
cmp
xor
and
pop
paddsw
imul
mov
mov
inc
mov
stc
dec
fnstcw
jge
mov
in
sarl
addr16
cs
insl
add
sti
xchg
repnz
ret
mov
mov
sbb
cmp
mov
jl
dec
mov
pop
les
pushf
cli
icebp
jmp
dec
mov
addr16
lret
push
ret
jo
daa
sub
add
add
pop
dec
push
dec
or
sbb
sbb
dec
scas
jge
scas
cmp
lea
loopne
adc
jl
push
and
idivb
fwait
mov
cmc
xor
das
cld
xchg
popa
ret
dec
pop
les
dec
mov
xlat
arpl
mov
lods
pushf
xchg
dec
gs
lret
aad
push
mov
rolb
jecxz
or
push
adc
pop
jp
cmp
enter
add
sahf
lods
adc
not
shll
movsb
jmp
jb
jns
leave
xor
sbb
stos
sbb
jmp
roll
or
adc
dec
push
repnz
into
lods
ret
sub
ret
fistl
lock
lods
cmp
adc
mov
rorb
fnsave
jne
pop
ret
adc
jmp
sbbl
aam
fcompl
cs
xchg
xor
add
or
es
pop
repz
mov
jb
out
stc
lea
jmp
loope
adc
jge
pop
xchg
xchg
hlt
pop
or
jns
fwait
lock
pop
jnp
les
or
repz
mov
nop
cmp
jb
into
inc
dec
mov
lahf
les
adc
xchg
adc
scas
cmp
cld
add
cwtl
lods
adc
ja
cltd
push
dec
pop
gs
and
loop
mov
aas
ja
mov
hlt
mov
int3
push
inc
cmp
stos
add
mov
mov
shrl
ret
shrb
mov
pop
adc
pop
movsb
or
neg
hlt
dec
fmull
ja
std
lods
xchg
jae,pn
jne
pop
cmc
dec
or
xlat
cmp
in
dec
pop
mov
cmp
sbb
xorl
test
mov
cltd
mov
das
fcmovbe
and
add
mov
xlat
pop
lret
and
pop
sbb
inc
dec
cmp
imul
inc
adc
in
test
int3
arpl
dec
jle
adc
subb
mov
mov
sti
pusha
lods
out
test
add
fwait
decl
cs
sub
ja
mov
jae
aad
rcr
cmp
outsl
fsubrs
add
out
std
testb
mov
sbb
dec
sub
jbe
leave
add
xchg
dec
pop
adc
pop
lods
jmp
sub
mov
js
mov
push
push
adc
cmpsl
mov
xchg
jl
bound
subl
andb
cmpsl
jp
flds
add
jae
sub
and
or
jmp
mov
lahf
lea
sahf
fsts
cmc
outsb
test
cmp
pop
pop
int3
faddl
in
xchg
scas
pushf
ja
int
sbb
pop
xchg
sarl
jge
jbe
movl
ss
faddl
cs
int3
insb
xchg
pop
lret
ret
out
dec
insb
jp
jge
inc
dec
ss
mov
outsl
lea
pop
sahf
and
orb
xchg
sub
xor
sub
nop
fwait
lret
sbb
jns
sub
sub
dec
jnp
mov
jecxz
push
sub
dec
sbb
pusha
aam
mov
popf
call
mov
cwtl
mov
adc
sarl
push
inc
fwait
push
repnz
je
gs
jp
or
inc
xor
xchg
bound
adc
lods
inc
mov
leave
movsl
testb
iret
xchg
or
cmpsb
loopne
sub
enter
xor
lret
push
dec
jns
iret
test
lret
sti
mov
je
in
sbb
or
push
out
jmp
rcrl
insl
cmp
add
jmp
jnp
pop
push
sub
add
outsb
push
lahf
arpl
cld
mov
ret
jp
add
ret
jae
fstps
push
adc
daa
inc
jp
mov
add
into
arpl
loope
cmc
adc
inc
xor
loope
aaa
nopl
mov
cmpsb
clc
fidivrl
arpl
sbb
or
ljmp
lret
mov
icebp
fistpl
push
lds
ret
pop
xchg
ds
testb
inc
mov
ss
inc
dec
in
mov
cmp
add
adc
lcall
push
icebp
add
pop
add
dec
aam
mov
insb
jle
lret
fsubrp
int3
cmp
std
xor
sbb
ljmp
sbb
ror
popl
je
dec
jns
mov
arpl
adc
dec
or
and
lcall
icebp
dec
ds
push
inc
int
xchg
jne
int3
jg
lahf
test
aad
mov
push
mov
dec
out
ret
mov
ljmp
jno
jae
clc
or
dec
pop
cmp
mov
mov
jbe
add
xchg
mov
sub
pop
fisttps
dec
movsl
adc
pop
adc
mov
call
insl
mov
movsb
repnz
outsb
sub
rcr
xor
push
scas
je
dec
out
push
jo
cmp
cli
xchg
ljmp
xor
js
sahf
adc
popa
jns
mov
out
dec
lds
mov
repz
xchg
mov
push
call
fwait
xor
ret
pop
sbb
xor
dec
in
push
mov
jno
test
inc
lret
sub
ja
sbb
xchg
sub
mov
sub
mov
arpl
xor
mov
inc
push
fcoml
mov
std
enter
push
jle
and
lahf
sbb
fcomps
inc
data16
repnz
inc
in
jb
test
stc
sbb
pushf
ss
into
cmp
packsswb
out
mov
or
pusha
push
stc
fcmovu
jp
lret
in
sub
lcall
lods
or
cmpsb
mov
arpl
loopne
jmp
bound
push
and
movsb
aaa
jbe
test
adcb
call
fistl
or
ss
inc
and
jnp
mov
add
dec
sbb
xor
addr16
es
push
add
lock
mov
rorl
mov
adc
ret
jl
cmc
jo
fldl
push
xor
jecxz
adc
enter
stos
inc
hlt
adc
sub
cmp
mov
icebp
cmp
jmp
iret
sbb
mov
loop
pop
addr16
push
fiadds
push
mov
rolb
mov
inc
mov
adc
lahf
out
sbb
jno
out
bound
sbb
movsb
mov
inc
cmpsl
xchg
fwait
cmp
push
decl
stos
test
cmp
pop
cs
sbb
ret
imul
mov
std
or
push
aas
add
jl
std
sub
push
jle
or
cmp
insl
mov
div
sbb
aas
mov
lahf
int3
popa
sbb
lods
mov
pop
add
mov
fsubrl
inc
adc
xchg
popa
add
sti
dec
in
aaa
push
ret
sub
mov
cld
pop
xchg
pop
fidivrl
imull
lret
cltd
or
mov
xor
scas
stc
shlb
adcb
les
test
jb
repnz
push
jp
pop
lods
rcrl
pop
jg
xor
fsubl
mov
jp
xchg
adc
sub
sbb
xchg
pop
dec
xor
int3
pop
leave
mov
push
fildll
pop
xor
in
or
ret
insb
mov
lds
adc
cltd
jg
xlat
repz
cltd
outsb
repz
pop
push
ret
cmp
adc
int3
jl
mov
fdivrl
xchg
cmpsb
int3
pop
xchg
in
dec
inc
inc
dec
out
inc
fstpt
mov
loop
xor
mov
adc
fldln2
sbb
pop
xor
aas
cmp
call
test
imul
bound
repnz
sub
aaa
sub
scas
rcrl
fwait
loop
add
add
in
push
sbb
jnp
mov
shrl
mov
andb
sub
add
idiv
and
and
movsb
int3
or
mov
push
inc
dec
pop
mov
mov
test
mov
es
dec
stc
aas
mov
push
pop
fsubl
push
jb
cmp
rclb
pop
sbb
fisubrs
gs
mov
push
cld
loop
dec
adc
orl
subb
in
sub
outsl
mov
stos
in
imul
test
dec
pop
sub
into
mov
xchg
mov
negb
shlb
mov
jmp
lods
xchg
nop
add
dec
xchg
mov
sub
jbe
aaa
xlat
movsl
imul
pop
dec
sub
xchg
xor
cli
mov
push
movsl
test
mov
sub
out
jl
test
repz
or
cmp
inc
xchg
lret
lret
mov
jle
int
dec
std
adc
cmpsb
sub
sbb
out
xorb
cld
outsb
push
test
pusha
xor
mov
cmp
lcall
loope
int
cltd
mov
adc
push
out
dec
mov
jl
cmp
jbe
cmp
testl
push
xchg
insl
hlt
loop
je
mov
cmovs
xchg
arpl
mov
mov
sbb
add
cmp
sub
inc
das
nop
fsubl
push
sti
inc
arpl
subb
cmp
mov
lcall
inc
mov
outsl
inc
jmp
mov
fldl2e
inc
and
loopne
add
sub
fisttps
push
idivl
lcall
pop
icebp
lret
cmp
push
iret
lds
jb
fnstcw
push
fs
push
push
jg
xchg
xor
jo
mov
jl
mov
addl
push
mov
loop
push
adc
jns
add
rcrb
mov
cld
inc
rorb
jnp
sbb
rorb
hlt
pop
out
adc
inc
aaa
mov
ja
outsl
icebp
mov
test
xchg
aaa
scas
loop
loopne
sbb
repz
mov
cld
xor
jb
dec
sbb
sahf
aas
scas
inc
data16
andl
test
pop
in
mov
pop
out
mov
sahf
adcl
in
call
sub
ss
aad
mov
repnz
mov
jmp
je
into
popa
cmp
pusha
data16
int3
inc
std
push
mov
out
xchg
aam
inc
add
mov
sahf
xchg
mov
jno
pop
pusha
int
pop
nop
adc
scas
xchg
pop
mov
pop
xchg
mov
fld
xchg
test
lea
cld
dec
pop
xor
xlat
aad
int
adc
add
cmp
mov
mov
dec
rcrl
andb
lret
fcmove
shl
mov
pop
and
and
std
dec
sbb
add
jp
jne
dec
imul
pop
cmp
in
push
out
inc
sahf
sub
mov
push
sub
mov
jl
aas
adc
lcall
stos
mov
out
in
mov
mov
lea
or
cmp
fadds
out
jle
sti
scas
xorb
cmp
inc
fs
xchg
daa
movsl
xor
enter
sub
adc
lds
jg
dec
cmpsl
cwtl
adc
and
mov
into
jl
ret
les
inc
fldl
sub
aaa
loope
aad
mov
ficomps
scas
sub
int3
in
std
sbb
cs
fsubrs
xlat
mov
ja
add
adc
je
fsubr
int3
lret
xchg
inc
mov
fadd
rorb
sub
cmp
enter
into
shll
or
daa
mov
js
inc
lcall
pop
push
stc
cmpsb
popf
sub
fmul
sti
mov
fdivs
inc
sub
and
xchg
jbe
lret
add
test
notl
jecxz
ret
mov
or
xchg
or
add
popf
lods
add
mov
je
and
mov
test
jle
or
int3
rcrb
flds
xor
adc
mov
or
fdivs
push
fsubrl
mov
pop
mov
in
sbbl
and
xor
loopne
popa
cmp
push
push
mov
mov
shlb
aam
idivb
adc
lahf
jge
roll
sbb
xchg
sti
jae
and
ret
mov
push
inc
stc
fisubrl
bound
xchg
outsl
push
jne
adc
or
lods
lods
nop
and
dec
mov
adc
imul
inc
popf
cli
push
insl
scas
mov
mov
mov
je
test
stos
lahf
jl
sti
sub
insb
mov
int
inc
push
sub
push
je
imul
xor
dec
shl
clc
mov
shl
cltd
arpl
sub
stos
popf
lock
add
and
cmp
and
imul
movsl
mov
sbb
jl
pop
scas
mov
cmp
jb
pop
or
jecxz
sub
ds
loopne
dec
or
cmpsl
jecxz
adc
lods
cmp
cmp
dec
xchg
cwtl
mov
aad
pop
lods
in
jns
lret
pop
hlt
push
test
jnp
lock
inc
mov
dec
push
insb
cmc
loopne
push
adc
ficoml
fadd
gs
and
adc
mov
outsl
dec
aad
mov
je
mov
pop
adc
dec
jg
jno
test
leave
jns
pop
dec
mov
sub
fwait
jne
es
in
xor
imul
mov
dec
cmpsl
aas
jg
push
inc
bound
inc
push
xor
xchg
sbb
popf
sbb
dec
fs
xor
push
add
imul
mov
and
sub
jg
inc
mov
in
dec
and
add
jle
mov
rcrb
jbe
add
shlb
scas
out
mov
mov
popa
pushf
subl
xor
cmpsb
cmp
cli
mov
hlt
mov
jae
jno
lock
cmp
pop
enter
lods
mov
lret
and
hlt
dec
data16
xor
fists
icebp
fneni(8087
fucomp
out
movsl
xchg
in
sub
mov
dec
push
test
inc
lahf
pop
mov
out
lcall
ljmp
mov
test
arpl
sub
mov
inc
jge
in
rcrb
sbb
cmp
cld
insl
xor
or
cmpl
pop
insl
ret
loop
sti
mov
xor
iret
popa
sbb
jo
and
scas
popa
cli
dec
mov
mov
push
or
and
sub
and
inc
cli
xlat
mov
push
aaa
add
iret
in
cltd
push
push
inc
push
pop
cltd
adc
add
xchg
popf
mov
xchg
outsl
enter
mov
sahf
mov
lock
in
push
andb
lea
mov
add
fstps
lds
xor
jmp
xor
cltd
aaa
in
mov
jb
xor
daa
aad
test
cmp
movsb
fiaddl
dec
xchg
xor
and
jno
shlb
inc
fisttpll
cmp
mov
fs
add
fisubl
stos
inc
aaa
ret
andl
add
inc
fstpl
pop
gs
mov
sub
dec
aam
push
and
out
lock
fsubrs
mov
testb
mov
push
mov
inc
mov
cmp
xor
lea
pop
pushf
scas
not
sbb
inc
imul
pop
jmp
out
or
push
push
stos
popf
push
pop
iret
or
popf
movsl
fistpll
sub
repnz
xchg
cmpsb
adc
inc
or
cli
pop
movb
fucomi
push
push
test
int
mov
push
sbb
nop
in
dec
repz
loop
stc
roll
inc
mov
push
cs
ja
mov
fldcw
out
xor
ljmp
mov
mov
xchg
bound
push
pop
arpl
inc
scas
inc
mov
scas
inc
mov
xchg
jmp
or
aaa
xchg
push
in
movl
jno
cli
add
insl
mov
fwait
lahf
or
xchg
cwtl
pop
cmp
mov
and
repz
push
pop
add
enter
and
dec
cmpsl
imul
adcb
dec
test
jge
inc
data16
pop
pop
ljmp
push
dec
xlat
idivl
out
test
incl
mov
adc
push
jb
jnp
xor
lret
or
and
icebp
push
popa
clc
dec
adc
mov
cld
push
push
fsub
jl
movsb
bswap
cwtl
dec
add
cmpsl
pop
and
enter
pop
in
ss
pop
lea
jo
jmp
lods
subb
lret
push
aaa
sarl
sbb
inc
push
loopne
loop
dec
nop
pop
shll
sub
jecxz
fadds
mov
test
dec
add
aas
arpl
sbb
xchg
arpl
push
cmp
pop
clc
jo
and
insl
clc
lods
pop
pop
pop
add
es
pop
mov
inc
loope
ljmp
jb
push
ss
mov
lahf
mov
jno
inc
sub
xlat
xorl
adcl
out
or
int3
pop
int3
mov
ret
or
aad
leave
mull
stos
loopne
xchg
mov
fwait
sub
pushf
inc
scas
iret
jo
add
mov
mov
cmpsb
xor
or
in
or
xor
out
in
dec
gs
mov
cmp
fiaddl
ljmp
rcll
jnp
lret
aam
push
push
ds
out
mov
xchg
xchg
out
nop
std
ret
cmpsb
bound
nop
ret
or
cmp
pop
cltd
xor
cmovae
aas
push
popa
sub
cli
sbb
pop
lock
js
sub
movsb
push
cltd
inc
mov
outsl
cwtl
in
leave
nop
data16
ror
adc
test
mov
sbb
jl
mov
pushf
popa
mov
lcall
sbb
js
int
push
or
xchg
pop
mov
in
out
loopne
sub
mov
mov
xlat
and
sbb
out
dec
ljmp
cld
cmc
fwait
xchg
push
sub
pop
cltd
pop
test
xchg
push
xchg
push
in
lods
push
in
int3
mov
mov
rcrl
add
cltd
adcb
mov
pop
mov
xchg
xchg
in
aad
pop
mov
ret
cli
cmc
xchg
mov
and
cmp
lea
ret
insb
sti
add
adc
ss
jg
mov
push
mov
inc
out
out
mov
ret
imul
dec
ljmp
mov
mov
scas
xchg
add
inc
inc
shlb
bound
ja
in
and
sti
mov
scas
stos
test
fmul
data16
or
jb
mov
loopne
push
insl
pop
mov
jno
stos
mov
into
xor
jmp
mov
hlt
push
push
jb
mov
and
scas
repnz
mov
adc
arpl
inc
ljmp
lcall
pushf
fwait
fwait
cmpsb
and
pop
sub
mov
sbb
scas
std
lret
scas
dec
lock
outsb
dec
jbe
pusha
ja
pop
lea
push
adc
and
fdivrs
mov
dec
xchg
push
sbb
pop
or
pop
loop
addr16
inc
scas
xchg
fnstcw
jg
xor
loopne
pushf
lcall
loopne
rcrl
hlt
push
ljmp
cwtl
fldt
lods
mov
dec
cltd
repnz
imul
push
in
adc
aas
lahf
stos
imul
aaa
sti
xchg
inc
inc
scas
inc
push
jg
jbe
xchg
adc
cmpsl
pop
inc
dec
fsqrt
or
cmp
jno
xchg
push
ud0
outsb
jae
and
mov
in
std
aam
xchg
out
or
xchg
nop
jecxz
sbb
jmp
cmp
push
adc
or
int3
cld
aaa
fdivrs
pop
jmp
or
inc
outsl
xorl
lret
aaa
xchg
cmp
leave
rorl
fcomp
lahf
clc
test
pop
jg
dec
xchg
jp
ljmp
mov
repz
in
sbb
adc
dec
inc
fdiv
or
sti
int3
dec
or
lret
mov
jbe
in
insl
xchg
pop
repnz
sbb
mov
bound
shr
xorb
push
jg
pop
or
mov
push
sbb
xchg
ret
adc
push
mov
cmpsb
pop
fdivs
scas
outsb
fistl
rcll
jnp
mov
es
cmpsl
cmpsl
mov
js
sub
cmp
popf
jns
sbb
push
clc
popl
and
pop
inc
jno
cmc
jecxz
mov
testb
std
and
leave
push
or
add
jne
mov
fimull
movsb
arpl
cmpl
mov
jbe
leave
cmp
push
fs
addr16
rcrl
cmp
push
mov
pop
cmp
jp
cmp
jge
fistpl
shlb
inc
mov
mov
fst
push
fisubl
ret
mov
xchg
fdivs
aas
jecxz
outsl
push
cmp
xor
das
xchg
pusha
push
push
jge
push
dec
in
sub
ja
cmc
jl
adc
jl
sti
mov
mov
sbb
mov
je
lret
push
sub
jns
inc
fs
call
jecxz
inc
push
dec
cmp
pop
inc
pushl
out
add
jp
lahf
call
insl
cmp
repz
jno
jnp
mov
push
mov
rcr
mov
pushf
out
mov
and
mov
aam
test
cmp
push
push
add
adc
lods
cltd
mov
test
mov
push
in
es
inc
fxch
jae
add
lahf
lods
xchg
stos
aam
jne
out
hlt
in
push
mov
call
mov
js
in
hlt
repz
cmp
stc
push
xchg
mov
adc
pop
push
and
mov
sarb
dec
repz
call
sti
jne
pop
popf
sbb
jl
stos
cmp
or
xchg
pop
fiaddl
aad
xchg
sub
icebp
inc
xor
cmp
fnstenv
cmp
sub
push
add
test
jns
push
sbb
xor
xchg
mov
sbb
and
jmp
mov
sbb
mov
jg
jnp
insl
and
adc
lret
repz
inc
sub
xor
fisttpll
cmpsl
adc
xlat
push
into
loope
jge
mov
fmull
or
mov
adc
int3
inc
push
mov
cmp
adc
pop
insb
cmp
shrl
push
shrl
and
outsb
add
mov
fdivl
push
loope
sbbl
lahf
ss
mov
dec
int3
lods
jmp
cli
inc
cmp
sbb
cli
mov
or
loope
cmp
sbbb
mov
jle
fldcw
mov
imul
sti
lea
outsb
std
es
outsb
daa
dec
cld
inc
stc
push
mov
adc
in
nop
rolb
cli
decl
es
push
xchg
pop
mov
andb
mov
jl
imul
daa
sbb
dec
in
clc
push
fsub
cmp
out
je
rolb
fwait
dec
sbb
dec
dec
outsl
and
or
sub
repnz
test
pop
push
jae
pop
je
lods
cltd
xor
inc
in
scas
jb
sub
and
std
inc
imul
inc
out
jge
mov
jl
sbb
mov
mov
outsb
fdivs
mov
imul
push
roll
mov
push
mov
xor
fimuls
loopne
cmpl
mov
or
mov
pop
add
pushf
vmptrst
cmpsb
lahf
cmp
stc
jns
mov
movsl
stos
inc
xlat
das
mov
arpl
mov
movsl
push
mov
lret
imul
xor
rcll
mov
mov
mov
ret
sbb
cmp
lea
fwait
hlt
outsl
pop
or
dec
loope
inc
and
lcall
jae
test
popf
in
sahf
push
push
xlat
testl
lret
cmpsb
arpl
pusha
jae
jnp
ljmp
xchg
sti
iret
inc
cmp
fisubrs
push
lds
xchg
pop
xor
xor
out
and
loopne
andl
cmp
jp
mov
jecxz
in
sbb
shr
repnz
out
sbb
mov
pop
push
les
cmp
movsl
es
add
cmp
and
add
cltd
xchg
mov
and
jns
pusha
jecxz
repnz
and
out
push
xchg
sbb
repnz
icebp
stos
jo
cmp
les
jbe
add
dec
scas
dec
addr16
jae
stos
add
or
mov
rcll
and
lds
outsb
xlat
addl
dec
ffreep
lock
data16
rolb
mov
repz
adc
fiaddl
sub
ljmp
or
and
jae
in
out
ljmp
sbb
or
mov
movsb
adc
stos
decl
imul
jo
popf
repz
stos
iret
and
sahf
and
add
jecxz
out
add
xchg
mov
rcr
je,pt
pop
mov
fidivl
push
jb
sahf
clc
imul
pop
insb
lods
repnz
out
mov
adcl
add
lret
jae
mov
jmp
jmp
adcl
fs
add
push
in
mov
aad
dec
pop
jp
fisubrs
cmp
sbbl
rorl
insl
popa
icebp
stos
xchg
roll
jp
jle
dec
mov
mov
push
shr
xor
mov
in
jb
fs
imul
mov
shrb
outsb
test
insb
jno
icebp
cmp
dec
hlt
push
mul
nop
das
xor
push
push
arpl
fnsave
movsb
add
js
dec
mov
test
call
repnz
jmp
or
adc
bound
sbb
or
imul
cmp
adc
inc
fdivrs
mov
add
popf
pop
xchg
add
cmp
lods
jge
push
add
fnsave
shl
sub
pop
mov
xchg
mov
rorl
adc
ds
sub
cmpl
dec
push
clc
sbb
mov
shl
jnp
mov
pop
mov
dec
cmp
cmpsb
push
aas
mov
jbe
inc
cltd
add
sub
sbb
pop
push
mov
jg
imul
aad
fucomi
repnz
sub
pop
lahf
ss
xchg
inc
pop
or
and
push
sub
push
call
leave
popa
test
std
loope
push
cmpsl
pop
mov
xor
and
fcmovbe
push
in
or
pop
outsb
push
mov
pop
cmc
cld
shlb
push
out
sbbl
cmp
lret
lds
dec
mov
popa
jns
scas
sbb
loopne
mov
pop
xchg
push
gs
mov
jo
test
cmp
pop
sti
and
mov
cmp
jecxz
xchg
xor
es
negl
lods
mov
push
sbb
ds
sub
repz
cli
jbe
mov
fsts
or
push
mov
fdivrl
inc
mov
pop
outsb
pop
inc
scas
sub
cmp
or
rclb
xchg
in
pop
std
pop
inc
fnstsw
mov
or
push
test
das
in
lods
inc
fwait
push
xor
leave
xchg
pushf
out
dec
ljmp
or
xor
test
scas
fcom
inc
push
iret
mov
fs
pop
xchg
in
sub
pop
cmpsb
push
lret
lock
lods
add
push
adc
mov
shlb
jo
test
js
or
jecxz
popf
ljmp
lods
inc
push
test
sbb
jg
out
flds
ljmp
jno
int
xchg
add
push
imul
scas
aam
push
mov
fucom
cli
mov
sti
pop
push
popf
fsubs
sti
hlt
mov
jbe
pop
sub
rcll
sub
pop
fsubrs
test
pop
lock
xor
rcll
sar
xlat
and
inc
loope
xor
jg
fdivl
loopne
mov
mov
jnp
inc
loopne
adc
mov
sub
cs
add
mov
out
ret
mov
lret
or
mov
inc
and
xchg
jbe
pushf
decl
cmc
cs
and
pop
mov
int3
ja
in
mov
push
iret
out
adc
out
pushf
pop
outsb
xchg
jb
add
ljmp
out
aas
ss
and
sahf
push
pop
xor
mov
ljmp
push
pop
pop
sbb
fbld
inc
pop
incl
out
xchg
cmp
iret
push
inc
mov
fmulp
jecxz
cli
mov
sub
insl
jg
inc
clc
ja
or
mov
xchg
sub
sub
scas
sub
xchg
sbb
popf
mov
hlt
repz
jg
repnz
jmp
jo
xor
testb
sbb
je
repz
adc
jno
daa
aas
mov
jno
mov
out
cmp
sub
xor
push
repz
je
andl
in
sahf
mov
std
mov
adc
jg
jns
sub
bound
adcl
mov
jmp
addr16
sub
lahf
xchg
mov
dec
jo
xchg
scas
stos
fisttps
repz
mov
inc
xor
or
xor
imul
mov
inc
adc
pop
inc
and
and
xchg
ds
dec
rol
and
scas
test
cmpsb
jecxz
testb
test
shl
mov
adc
loope
fnstsw
fwait
repnz
mov
out
adc
mov
mov
addb
mov
inc
frstor
testl
je
jl
mov
mov
ret
std
sub
lods
push
cmp
xor
and
fldlg2
pop
mov
mov
pop
bound
lods
and
arpl
inc
ljmp
and
sbb
jmp
jo
sbb
pop
cmp
stos
inc
pop
pop
jmp
xor
add
pop
sbb
je
insb
or
lahf
cmp
mov
push
dec
add
push
aam
leave
mov
fdivl
adc
mov
gs
popf
push
xchg
movsl
int3
in
dec
les
mov
add
out
pop
out
popf
dec
pop
scas
mov
inc
cmc
loopne
inc
pop
call
repnz
pusha
xor
inc
jbe
or
and
out
mov
and
test
sub
pop
fisubrs
cltd
cmp
pushf
fdiv
lret
xchg
jbe
push
jmp
inc
xchg
adc
popa
stc
fimull
mov
dec
jno
imul
stos
mov
cli
xor
stos
xchg
dec
jmp
jl
jo
xchg
popf
mov
iret
test
aas
stc
inc
push
ret
xchg
je
scas
inc
cmpb
mov
lret
lock
cli
sub
sub
bnd
int
ret
and
jl
and
les
adc
pop
cmp
fdivp
or
popa
cmp
movsb
das
sarb
xor
mov
sbb
dec
test
vsqrtsd
rorl
enter
pop
in
xchg
ret
mov
test
shrl
scas
push
rcl
jne
cmp
jecxz
rclb
daa
out
cli
inc
repnz
jmp
imul
cmp
sbb
xchg
cmp
xchg
or
sbb
push
xchg
int3
sub
sub
sub
jb
sbb
pop
ljmp
jb
add
push
aam
xchg
out
sub
pop
scas
divb
fstpl
jl
mov
imull
rcll
push
test
rcrl
sbb
sbb
shlb
movsb
mov
cltd
sub
cwtl
jmp
mov
nop
insl
shl
jmp
pop
xor
xor
iret
jb
xor
loope
mov
lock
jecxz
jp
dec
mov
es
aaa
inc
jne
xlat
mov
test
cmp
mov
fwait
loope
xchg
sbb
int
jmp
jl
hlt
pop
icebp
loopne
jle
outsl
adc
aad
arpl
hlt
ret
hlt
aad
inc
push
ret
ss
enter
ja
loopne
cmpsb
cmp
pushl
test
xchg
shlb
test
insl
scas
mov
dec
or
das
dec
jecxz
mov
mov
shlb
mov
dec
mov
clc
dec
and
add
xor
xchg
imul
test
pop
and
out
push
jecxz
pop
add
outsb
lods
dec
dec
xchg
push
ds
add
out
adc
scas
adc
xor
mov
mov
call
jmp
push
pop
mov
mov
push
out
or
add
fnsave
arpl
inc
jp
xchg
mov
adc
dec
outsb
jmp
movsb
daa
adc
shll
sub
push
or
cmc
pop
ret
sarl
outsb
sbb
leave
clc
adc
mov
pop
mov
adc
adc
ret
add
jae
adc
xchg
jnp
je
cmp
insb
add
scas
enter
enter
repnz
inc
sbb
jg
jno
imul
stos
ds
sbb
cld
and
sub
add
mov
sbb
xchg
inc
lret
cmp
adc
mov
sub
mov
pop
mov
add
mov
and
pop
in
jecxz
or
divl
sub
xchg
cmpsl
inc
lcall
mov
mov
scas
mov
sbb
or
out
not
add
cmp
cli
adcl
jns
into
stos
mov
es
lea
stc
arpl
mov
ret
mov
insl
stos
xchg
add
mov
aaa
out
mov
pusha
lret
outsb
or
movsl
cmc
dec
pop
test
ds
sub
cmp
enter
pop
sub
add
int3
in
ret
push
push
jmp
lret
sbb
out
les
mov
fcoml
in
stos
xor
in
in
aam
sub
mov
and
mov
test
shl
js
jecxz
adc
repnz
cltd
mov
lcall
and
xlat
sbb
dec
xor
aas
in
call
addr16
push
cmp
jb
sbb
inc
leave
mov
jle
out
sub
pushf
cwtl
mov
orb
and
mov
push
xchg
jle
mov
mov
adc
into
or
sub
std
push
mov
pop
ljmp
lock
push
push
and
xchg
mov
pop
push
and
setno
iret
jecxz
add
aas
adc
mov
lock
inc
rcr
scas
xorl
cmp
add
sbb
jno
fnstenv
pop
scas
cmpsb
inc
test
je
adc
fidivrs
sahf
cs
fucomp
mov
mov
sub
jmp
jb
jecxz
push
cmpsl
push
add
xchg
aaa
inc
push
dec
dec
loopne
jmp
das
dec
hlt
dec
loop
scas
lcall
ret
push
out
pusha
mov
mov
sub
lods
sbb
xchg
cwtl
jp
int
mov
mov
test
lods
mov
call
jecxz
mov
xchg
mov
insl
jge
hlt
xchg
xor
ds
jnp
fiadds
sti
fdivrl
imul
imul
jnp
lcall
add
ljmp
lock
lds
mov
dec
xchg
fnstcw
loope
pop
xchg
cltd
ror
fdivrl
lret
xchg
mov
mov
jp
xchg
je
jmp
sub
push
xlat
jns
cmpsb
cmp
xchg
adc
sti
sub
std
pop
or
inc
jo
push
mov
pop
xor
cmp
pop
sahf
outsl
aas
lcall
inc
sub
int
std
push
outsb
es
add
fimuls
mov
out
in
inc
push
mov
rcll
aaa
scas
cmp
inc
xchg
sbb
ret
insl
add
clc
sahf
pop
test
dec
pop
push
adc
jno
fstl
xchg
rorb
or
or
cltd
insl
xor
test
scas
imull
popa
lret
cld
adcb
pop
mov
xlat
jo
or
xchg
sub
push
jne
sub
out
movsb
imul
mov
dec
lcall
inc
call
xchg
cmpsl
call
mov
add
sub
fisttpll
pop
jle
xchg
pop
aad
std
bound
dec
stos
or
stos
addb
xlat
out
xchg
sub
dec
push
jge
mov
mov
fistpl
subb
cld
movsl
lds
jmp
pop
in
jecxz
push
sub
mov
aad
mov
into
sbb
sti
out
cmpsb
mov
cmp
inc
lock
xchg
sub
shrb
lea
cmpsl
jnp
lock
icebp
testl
in
mov
add
lea
adcl
insb
stos
negb
push
ret
pop
in
inc
mov
stc
rcrl
add
stos
jae
push
xor
sti
xor
cmp
out
js
dec
xor
loope
into
jbe
mov
sbb
inc
xor
mov
inc
std
pop
movsl
push
and
jle
cltd
pop
jae
movl
mov
bound
sbb
pop
sbb
xor
test
xchg
insl
aad
lods
inc
mov
mov
cltd
cmp
xchg
sbb
cld
stos
lds
mov
imul
cmp
adc
jmp
shll
pop
push
push
insb
das
test
sub
fidivrl
leave
cwtl
push
fcompl
jae
push
cmp
and
jmp
and
lds
mov
mov
mov
add
iret
mov
cli
imul
xchg
pop
dec
mov
xchg
scas
outsl
movsl
push
test
mov
aaa
lret
xor
fsubs
add
pop
test
jmp
iret
xor
insl
call
imul
fldl
in
test
inc
jmp
fbstp
mov
push
jge
jl
fs
in
inc
test
sub
push
or
push
mov
pop
jle
faddl
xor
hlt
les
dec
aam
loop
push
and
add
xchg
test
insb
std
sahf
pop
sub
and
push
or
jbe
pop
js
push
roll
in
int3
pop
inc
lods
ja
sbb
ss
push
es
inc
fmul
imul
test
in
pop
icebp
adc
push
mov
pushf
ljmp
mov
addr16
imul
int
mov
movsl
xchg
inc
dec
shlb
push
outsl
xchg
and
outsb
imul
shl
add
pop
out
sbb
dec
dec
dec
andb
arpl
jo
outsb
arpl
in
add
add
jmp
sub
dec
or
icebp
adc
ss
mov
mov
or
cmp
or
out
fidivrl
nop
add
xor
mov
imul
adc
jb
rorb
cs
pop
data16
jno
jo
leave
xchg
test
lret
loope
adc
rcrb
adc
pop
xor
jmp
add
imul
and
clc
xchg
jecxz
inc
and
cmp
sarb
pop
inc
cmpsb
mov
pop
sub
sub
in
push
push
ja
test
sti
shl
test
pop
xchg
lahf
ret
xor
adc
ljmp
or
lret
cmp
les
and
int
clc
iret
and
inc
xchg
in
ja
loop
movsl
mov
xchg
test
cmpb
mov
testl
mov
or
jae
cmpsl
movsb
mov
xor
xor
js
cmp
stos
sub
rol
pop
jae
icebp
ljmp
call
ja
xlat
fdivs
mov
adc
imul
xchg
hlt
cmpsl
aas
es
inc
in
inc
mov
shlb
mov
fninit
cmp
jae
inc
addr16
jg
lds
movsb
js
stc
bound
test
stos
rorb
xchg
jns
xor
dec
lahf
fs
dec
fwait
inc
jmp
mov
into
jp
call
ret
movsb
repz
cmp
cwtl
mov
fistpl
aad
xchg
test
in
fbstp
mov
add
dec
xor
icebp
int
sbb
adc
repnz
lods
cmp
shll
cmp
xor
add
push
repz
pop
movsl
mov
leave
fs
je
ljmp
adc
ds
cli
xchg
inc
or
jmp
add
pop
mov
pushf
jmp
inc
cltd
imul
or
repz
pop
or
mov
push
mov
lods
lahf
and
dec
ret
hlt
xchg
cmc
outsb
and
sbb
sbb
imul
les
xor
push
je
ret
cmc
aad
pop
or
mov
fldl
push
xor
add
cmc
sti
add
std
sub
shrl
pop
xchg
mov
fiaddl
mov
pop
stos
cli
mov
les
pop
mov
jmp
sbb
adcl
or
cmpsb
cmp
mov
add
jmp
test
or
or
sub
push
js
xchg
pop
pusha
gs
pop
mov
lcall
or
pusha
lahf
xchg
rorl
cs
in
and
repnz
shrb
shrb
push
stos
test
icebp
push
das
testl
addr16
pusha
sbb
loope
cli
sub
insb
mov
cld
sbb
xlat
dec
lea
mov
sub
xor
push
add
xchg
sub
popf
dec
aad
adc
push
mov
mov
movsb
add
pop
cmovae
cli
xchg
imul
out
cmp
mov
xchg
mov
xchg
xchg
pop
adc
test
cltd
js
lret
fcmovbe
loopne
xor
sub
sti
repnz
inc
fimull
sbbl
push
loopne
cmp
pushf
sar
push
xchg
inc
es
inc
daa
stos
mov
jmp
repnz
lods
mov
xchg
inc
push
in
sbb
or
and
pop
mov
leave
inc
adc
jmp
inc
xor
pmaxsw
shrl
fstp
out
in
icebp
out
ja
cmp
jmp
add
jns
mov
cmc
inc
or
mov
pop
std
xchg
icebp
les
std
adc
jl
and
mov
cmpl
lret
imul
push
ret
push
sbb
sub
mov
sbb
je
push
mov
pop
push
loop
mov
mov
dec
addr16
sbb
dec
gs
int3
imul
das
push
je
movsb
jecxz
hlt
dec
stos
pop
cs
cmp
addr16
fnsave
add
mov
cmc
or
add
ret
mov
push
loop
push
cltd
inc
and
pop
insb
outsl
lods
xor
xor
repnz
into
imul
imul
sbb
adc
mov
adc
pop
vhaddpd
mov
sbb
push
cmc
into
push
jnp
add
int3
lds
push
adc
rol
sahf
das
mov
lock
inc
gs
mov
mov
ds
aam
pop
pop
xlat
add
or
or
stos
sbb
mov
pop
in
pop
push
std
fpatan
push
aaa
pop
jge
jp
enter
xlat
loop
es
lods
push
and
pop
cmpsb
iret
push
in
shll
roll
shlb
cltd
sbb
push
xor
insl
es
jmp
push
xor
pusha
shr
mov
pop
add
mov
cmp
mov
imul
jo
mov
push
hlt
in
out
cmpsl
xlat
xor
sub
mulb
sub
sbbb
cmc
push
jbe
cmp
in
js
xchg
and
mov
ret
xor
push
dec
loopne
outsl
push
cmp
scas
sub
add
ret
jno
es
and
cmp
divl
sahf
cmpsb
jl
int
andl
in
adc
jge
hlt
scas
inc
es
add
lahf
out
mov
cmpsb
data16
xlat
cmp
inc
sub
cmp
xor
test
cltd
jb
andl
fsubrl
mov
cmp
adc
mov
inc
popf
xchg
popa
xchg
push
jmp
mov
ljmp
hlt
js
dec
ljmp
inc
ret
shll
push
add
inc
pop
xorl
and
loope
mov
mov
pop
addr16
aad
mov
mov
lds
cli
nop
in
mov
and
fidivs
gs
cli
cmp
ret
jae
cmc
lea
mov
xchg
or
lock
popf
sub
in
push
sbb
es
cmpsb
imul
filds
movsb
sbb
cltd
sub
enter
into
testb
pop
xchg
iret
ret
lret
mov
das
pop
repz
dec
xor
aad
jb
movl
ljmp
test
gs
in
aam
mov
add
or
jae
jge
ret
mov
jge
adc
xchg
sahf
xchg
jecxz
mov
lea
rcl
jg
ret
stos
int3
shlb
mov
push
icebp
and
mov
ja
cmc
mov
jne
testb
cmp
mov
scas
adc
lods
push
rorl
movsb
add
mov
clc
cmp
cmp
push
outsb
mov
mov
loopne
inc
push
mov
push
jns
mov
adc
int3
arpl
dec
repz
sub
gs
mov
in
fstpl
sub
sbb
lahf
push
xor
lret
and
push
pop
das
test
js
insl
mov
or
dec
js
cmp
adc
les
ret
imul
pop
dec
out
fsubrl
lods
rcll
int
int
xlat
imul
repnz
mov
mov
mov
xchg
in
mov
je
sub
enter
sub
mov
insl
sbb
bound
push
popa
lcall
sarl
xchg
sub
test
adc
into
sbb
divps
mov
add
jl
add
pop
xor
jle
fnstcw
orl
mov
push
mov
jnp
test
xchg
push
add
cmp
sbb
push
inc
stc
add
shrb
mov
and
push
pop
repnz
neg
sahf
in
push
inc
xchg
sub
call
popl
push
pop
sahf
mov
xorl
cwtl
sbb
mov
xor
and
add
xor
call
inc
outsb
inc
aaa
lret
mov
aad
repz
cmp
xchg
insb
mov
aam
into
shll
add
inc
loop
jecxz
stos
pop
sbb
stos
pop
pop
or
pop
jae
insl
stc
mov
mov
mov
scas
scas
loope
loope
xor
push
repnz
inc
testl
xchg
aam
fs
into
aas
pop
in
int
mov
les
insb
pusha
mov
pushf
mov
push
sbb
lahf
xor
imul
or
push
sub
psubq
jne
movsl
push
es
std
add
push
or
dec
out
es
push
sub
loop
cs
or
xorb
push
pushf
sub
pop
ss
inc
test
outsl
adc
lret
jp
jle
push
mov
js
inc
test
dec
pop
or
into
sbb
cmp
js
pop
xchg
mov
je
mov
cli
sarb
leave
xchg
inc
adc
add
jbe
sbb
es
rcr
lahf
jno
aaa
jb
test
add
jae
outsl
jbe
call
or
inc
push
sub
push
scas
xor
mov
clc
and
push
push
sahf
ret
jb
jne
lods
iret
data16
in
cld
sub
repnz
test
into
fdivl
clc
pushf
test
jmp
xchg
jns
enter
xchg
stc
sbbb
cmp
or
xor
ljmp
loope
mov
adc
mov
adc
pushf
out
mov
push
pop
push
push
out
sbb
lods
inc
cmp
inc
test
inc
out
addr16
push
sbb
dec
je
dec
push
rcrb
out
lds
push
loopne
mov
push
roll
and
or
pop
cld
cltd
outsl
cmpsl
arpl
xor
mov
and
xchg
cmp
jae
jnp
aad
jns
add
movsb
sbb
or
repz
inc
test
push
mov
push
sarb
int
ds
fsubrs
mov
sbb
cld
push
cltd
or
out
sub
sbb
mov
outsb
cmp
mov
stc
test
mov
gs
push
push
out
mov
mov
jmp
inc
je
lcall
push
xor
mov
add
int
pop
or
lds
cmp
cld
push
and
lahf
stos
mov
fcoml
mov
sbb
push
lretw
adc
sub
std
push
notl
jns
mov
out
add
sub
loope
pop
jns
lds
xlat
sbb
fs
mov
out
aam
sahf
mov
jle
aas
sbb
roll
in
out
int
jo
insb
clc
mov
loop
mov
inc
push
call
cmp
pop
rcrl
mov
add
insl
jg
sbb
popa
cmp
inc
fstpl
in
in
dec
daa
xor
rclb
push
aam
sub
cmp
ljmp
rclb
gs
and
jmp
adc
add
add
cmp
or
sbb
mov
xor
push
or
stos
mov
arpl
jp
movsl
inc
dec
cmc
adc
inc
fwait
and
xor
jmp
int
mov
sbb
push
fwait
adc
push
xor
ror
jmp
js
cwtl
fsub
enter
and
lods
les
jae
cmc
popa
dec
push
push
ss
dec
iret
add
inc
out
andl
out
fwait
xor
test
das
loopne
xchg
mov
jp
sbb
or
enter
push
je
xchg
scas
cmc
adc
cmp
mov
sub
cmp
jp
jmp
cmp
jns
jb
aad
mov
inc
pusha
divl
cmp
jp
leave
lcall
inc
xchg
sub
dec
in
lret
mov
inc
xchg
sub
lds
dec
inc
fdivrl
inc
xor
xor
push
lods
mov
jb
and
mov
rcll
and
adc
int
sbb
add
in
mov
xor
add
xchg
aam
inc
leave
xor
movsb
jne
addr16
xchg
cmc
int3
xchg
cmc
xor
sub
add
xchg
push
sub
mov
inc
dec
adc
xor
lret
sbb
and
dec
push
mov
jb
cmpsb
mov
push
inc
pop
mov
arpl
cmp
adc
inc
ds
or
shll
hlt
int
fwait
lds
mov
xchg
xchg
aaa
mov
lret
or
pop
clc
stos
mov
cmp
data16
imul
rcrb
jge
shll
mov
push
sbb
test
mov
fcom
shll
or
push
cmpsl
and
mov
inc
mov
ficompl
push
and
loopne
xlat
or
cmp
imul
call
hlt
lock
test
test
pop
push
mov
xchg
push
xchg
push
inc
mov
mov
jne
pushf
cwtl
stc
int3
test
xchg
push
loop
inc
shl
fnstcw
repz
xor
sbb
adc
test
pop
fsubrs
add
xchg
add
stos
fldcw
movb
push
xlat
mov
gs
add
in
push
mov
das
arpl
lret
bound
test
mov
mov
movsl
stos
lret
outsb
clc
jo
bound
in
push
and
sub
mov
lret
mov
or
popf
int3
sub
insb
inc
jecxz
fmulp
xor
bound
call
test
mov
xchg
hlt
mov
mov
xor
icebp
mov
pop
insb
sub
lret
mov
popf
jnp
sub
lods
adc
loope
mov
stos
insb
dec
push
jl
cmp
or
mov
xor
dec
mov
lret
mov
aad
dec
lock
jbe
mov
rcr
xlat
dec
and
je
inc
daa
imul
dec
inc
fsubr
lahf
repz
or
pop
jae
inc
popl
add
push
aad
in
pusha
add
add
mov
into
dec
push
hlt
push
or
pop
push
sbb
mov
push
xor
and
rcll
jno
mov
or
mul
cmp
jne
pop
push
xor
data16
lods
and
das
mov
push
mov
rcrb
jge
mov
loop
add
loope
je
cli
sbbb
push
shll
mov
cwtl
ret
imul
addr16
sub
mov
xor
xchg
test
or
rcrb
jns,pn
dec
and
push
es
adc
lds
xor
movsb
or
lret
out
shrl
push
insl
and
or
hlt
dec
fwait
or
popf
cld
cmp
call
xchg
arpl
jne
outsb
mov
xchg
push
sbb
icebp
pop
mov
mov
and
mov
lea
jmp
xor
cmpsb
sub
push
mov
leave
bswap
add
jb
sbb
xor
out
push
sbb
adc
rclb
add
inc
sub
jbe
mov
push
mov
fimull
loope
mov
stos
test
movsb
insl
daa
js
add
ja
ja
mov
push
into
or
ss
cs
fisttpll
insb
mov
lds
stos
addl
stos
or
leave
mov
out
mov
je
add
arpl
sti
push
pop
in
mov
xlat
dec
gs
jmp
shrb
adc
cld
movsl
or
data16
dec
lret
and
sub
xor
cld
int3
je
add
xchg
inc
xlat
sarb
jecxz
xor
cmp
push
fwait
xor
jno
pop
cli
sbb
cmp
addr16
sub
adc
orb
mov
pop
daa
inc
pop
dec
bnd
in
outsb
and
cli
mov
sbbl
and
sbb
xor
push
push
aas
cmpsb
cmp
fstpl
jecxz
dec
dec
sti
lods
jecxz
ds
filds
mov
and
mov
gs
cmp
cmp
flds
mov
es
add
pusha
test
or
inc
loopne
sub
test
test
xchg
push
movsb
jecxz
loope
mov
cwtl
mov
sub
sbb
lods
jne
jp
es
bnd
mov
and
std
add
int3
std
and
jge
push
testb
push
into
and
jns
xchg
push
or
rcll
push
scas
sbb
mov
and
mov
lods
scas
xchg
mov
sub
mov
rcrl
sbb
sbb
mov
xor
xchg
mov
cmp
pop
cmp
push
fidivrl
xchg
dec
fwait
aam
cmp
sub
adc
bound
imul
hlt
mov
sub
hlt
iret
cmp
leave
loope
fldenv
pop
test
and
stc
mov
adc
push
je
addr16
xchg
mov
and
mov
mov
fwait
icebp
test
ficompl
xchg
cmp
push
jbe
cwtl
stc
leave
aad
gs
notl
sbb
cmp
pop
sahf
mov
in
icebp
mov
adc
cltd
xor
mov
xorl
dec
cvttps2pi
mov
mov
mov
in
shrl
mov
fisttps
pop
push
mov
ds
sub
mov
sub
bnd
cwtl
imul
je
daa
jg
push
bound
xchg
cmpsl
out
stos
mov
insl
in
mov
outsb
shrb
lock
xor
test
int3
adc
adc
sub
stc
int3
sbb
lahf
mov
aad
gs
mov
or
shr
das
dec
rcll
xchg
gs
cmpsl
xchg
mov
sub
pusha
inc
push
dec
sub
gs
pop
data16
xchg
mov
fistpl
aam
pop
push
cmc
jge
in
enter
jb
dec
movsb
shrl
roll
xor
popa
popf
test
shrl
mov
xchg
das
rclb
mov
sub
shll
or
imul
adc
xor
add
inc
popa
mov
jle
repnz
xor
in
lret
jmp
or
cmp
mov
xchg
call
sti
outsb
lock
dec
inc
inc
shlb
pusha
stos
push
dec
loopne
movsb
xor
dec
dec
xchg
pusha
mov
xlat
pop
jge
jp
xchg
lods
aas
pop
cmp
jl
sar
mov
xchg
repz
dec
mov
fmuls
stos
aam
aas
lock
in
jle
push
pusha
inc
and
mov
clc
inc
push
mov
jno
std
cltd
jne
scas
xor
sarb
and
sbbb
testl
stos
aad
fcmovbe
pop
testb
pop
scas
cmpsl
sarb
rolb
pop
scas
aas
shlb
add
movsl
xchg
push
movsb
push
jb
pop
jecxz
fildl
and
mov
es
cmp
jg
xchg
mov
cmpsl
adc
das
repnz
jb
ds
in
pop
dec
inc
mov
sub
andl
out
xchg
lret
cmpsb
inc
xor
bound
bound
stos
cmp
inc
or
js
shrb
xchg
sbb
lds
rcrl
jge
divl
xchg
or
call
dec
outsl
outsb
cmp
cltd
lret
aaa
jbe
int3
fisttpll
mov
outsl
ret
dec
das
jg
daa
ja
or
shll
push
push
loope
in
dec
fs
leave
push
fnstsw
sbb
dec
in
gs
aam
jp
stos
insl
push
or
stos
cld
sarb
decb
and
out
js
add
mov
js
add
jns
pop
push
std
hlt
mov
in
xor
xchg
fsubrs
add
dec
cli
and
mov
add
lahf
ss
xor
movsl
jmp
pop
dec
fisubrl
or
sti
not
loopne
adc
fucomip
ret
daa
cli
hlt
jns
je
mov
pop
leave
and
fnclex
xchg
les
les
idivb
data16
pop
js
push
push
out
xchg
pop
sub
inc
dec
aad
insb
ljmp
pop
xor
mov
mov
lds
add
in
mov
mov
xchg
xor
icebp
cmp
jp
xor
sub
cld
and
dec
je
add
repz
and
sbb
ds
or
lcall
cpuid
mov
out
aad
fisubrl
mov
imul
outsb
std
inc
mov
pop
test
sti
test
xor
or
fwait
iret
fmulp
popa
or
mov
push
xor
inc
mov
das
mov
call
inc
mov
push
dec
pusha
repnz
cmp
in
adc
dec
mov
movsb
es
hlt
and
insl
test
lods
xchg
orl
adc
sub
out
test
adc
adc
ss
lock
imul
out
lock
and
jbe
push
lret
lods
std
or
inc
sbb
inc
ficoml
inc
jl
jo
dec
popf
rcrb
mov
sbb
arpl
out
shlb
imul
jmp
outsb
enter
mov
inc
gs
jecxz
sub
mov
adc
dec
andl
dec
dec
adc
ss
dec
and
push
loop
in
pop
lods
jmp
and
aaa
cmp
enter
pop
jmp
dec
fmull
jne
push
inc
xor
imul
sahf
push
outsl
cwtl
pop
push
jmp
inc
outsb
imul
and
xchg
aad
shr
leave
int3
and
aas
js
cs
fwait
lock
jg
xchg
es
push
sub
or
add
and
xor
pop
xor
push
repz
and
cltd
lods
insl
sbb
mov
dec
jnp
pop
jecxz
mov
inc
out
aad
movsl
push
adc
pop
fcmovnu
mov
push
mov
lea
out
dec
loop
enter
lret
imul
gs
xchg
cmp
movsl
inc
push
jge
lret
push
pop
jmp
mov
cmp
mov
sbb
push
or
mov
add
fwait
push
dec
adc
mov
imul
adc
adc
jnp
movsb
idivl
jmp
bt
pushf
movsb
dec
xchg
pop
and
jp
inc
sahf
and
sbb
xor
add
add
outsl
sahf
xor
or
in
imul
or
inc
or
cmp
mov
aam
xor
mov
cs
adc
add
jo
ljmp
sahf
bound
imul
addr16
aad
sbb
and
pushf
das
jl
sub
sbb
in
jp
adc
jge
xor
push
mov
fs
mov
pop
lret
jbe
stos
xor
imul
push
jae
out
shlb
push
push
ljmp
jno
cmc
enter
add
cmp
pop
sbb
add
mov
or
xor
pop
inc
out
mov
dec
scas
inc
je
cmpsl
loop
push
int
sub
inc
sbb
xorl
sbb
mov
cmp
lods
adc
sub
fstps
lods
ret
inc
or
cs
adc
in
clc
jl
insb
push
adc
jg
push
sub
mov
ljmp
mov
sbb
movsl
push
fdiv
adc
xor
enter
enter
push
or
cmp
push
idiv
insb
add
insb
bound
mov
mov
in
jmp
nop
or
sub
jg
mov
cs
and
or
addr16
mulb
and
and
jge
mov
imul
add
xor
push
mov
cltd
sub
cs
ret
hlt
test
subb
mov
out
pop
jne
cmp
divb
pusha
js
xchg
pop
and
popf
jnp
lret
lret
mov
out
inc
or
adcl
xor
push
push
int3
arpl
mov
jno
stos
sub
fadd
clc
push
je
mov
pop
es
or
ds
inc
and
sub
or
mov
or
sub
cld
xchg
adc
in
sbb
push
aam
cmp
jbe
xor
out
test
outsb
psrlq
mov
xchg
hlt
xchg
sbb
mov
xchg
imul
adc
inc
mov
popf
mov
enter
sub
inc
pop
fldcw
sub
cmpsb
mov
inc
mov
fiadds
movsl
xlat
loope,pn
enter
and
adc
das
std
mov
ljmp
call
lcall
dec
or
add
popf
lahf
and
fcmovnb
and
iret
sti
push
xlat
jae
aam
and
fsubr
addr16
adc
mov
sbb
pop
sti
outsl
xchg
out
xor
cltd
xchg
out
fldenv
andb
jae
mov
add
mov
and
adc
jo
scas
mov
shlb
add
lods
lds
adc
int3
ret
cmp
push
jbe
cld
mov
iret
fildl
xchg
test
mov
stos
sarl
cmc
mov
in
mov
call
and
arpl
loop
adc
pop
insl
leave
push
mov
cmp
aam
scas
stos
adc
fldl
sbb
ja
push
test
mov
sar
push
add
inc
push
popf
ja
push
ficoms
sbb
add
and
pop
mov
sbb
lods
mov
jo
jmp
stos
xor
subb
sub
cli
lcall
push
rol
js
loop
lds
cld
jg
imul
jbe
dec
mov
mov
icebp
mov
in
xor
cs
adc
xchg
test
mov
pop
mov
test
inc
mov
test
pop
push
in
nop
mov
dec
dec
popf
stc
fists
mov
cmp
jp
iret
cmp
sbb
popl
xchg
jl
movsl
icebp
fsubl
xor
or
jnp
test
stc
mov
cmp
pop
mov
pushf
add
test
cmp
lods
dec
shl
jge
pinsrw
add
push
mov
test
ja
sarl
negl
cmp
sbb
cmp
cmp
iret
lods
inc
xchg
cmpsl
pop
out
punpckldq
mov
ss
adc
aaa
or
popf
movsb
dec
mov
pop
mov
sub
sub
out
imul
xor
fisttpl
insb
jle
cld
out
test
inc
int
xor
dec
cmpsb
notb
mov
sahf
cmp
rclb
lods
xlat
or
mov
xchg
add
dec
aas
mov
sti
xor
push
subb
sahf
aad
inc
cmp
bound
pop
inc
dec
sub
aaa
into
ja
push
push
and
je
daa
fimuls
and
mov
mov
xor
add
mov
jle
scas
test
push
in
mov
sahf
mov
cltd
xor
inc
mov
pop
jns
mov
idivb
xor
mov
je
mov
out
pop
movsb
cmp
xor
lods
or
cmp
xchg
pop
es
xchg
cli
test
lea
addr16
mov
ret
xlat
sbbl
mov
inc
rcl
sbb
fistpll
add
mov
push
ds
or
repnz
and
adc
cld
mov
aad
sbb
or
add
push
inc
xchg
shll
jns
imul
adc
add
mov
sbb
sbb
jno
jge
sub
cwtl
cmc
mov
cmp
out
shlb
sahf
add
jg
pop
push
in
cli
es
mov
scas
pushf
pop
pop
out
test
std
das
sub
pop
lock
rorb
lahf
add
stos
lock
xor
paddsb
lahf
insb
es
cmp
add
cmp
cltd
pop
cmp
les
loopne
sbb
in
call
or
in
xor
add
inc
int
xor
insl
cwtl
push
pop
add
xchg
fnstenv
dec
hlt
icebp
and
repz
int3
std
dec
lock
test
int3
dec
in
pop
add
ret
sahf
sub
cwtl
or
inc
sub
and
dec
fdivs
out
divb
xchg
xor
insb
xlat
jnp
dec
cmp
icebp
xor
lea
add
imul
mov
lret
mov
je
adc
sahf
pop
dec
lods
sub
pop
imul
cmp
pop
repz
jnp
push
pusha
repz
js
jb
nop
sbb
mov
fwait
data16
arpl
adc
repz
sub
out
mov
cmc
andl
jno
pop
popl
repz
insb
push
push
aad
stc
nop
jle
sbb
scas
xchg
sahf
mov
sti
stos
ret
mov
aad
adc
rorl
jl
in
adcl
les
scas
fists
mov
bound
or
and
aas
rcrb
push
mov
push
inc
das
mov
cmp
mov
mov
into
mov
inc
mov
daa
pop
loop
or
mov
ficoml
mov
int
insb
xorl
mov
and
aad
fistpll
pop
scas
fidivl
fbld
gs
sub
mov
andb
cs
push
dec
add
rolb
and
pop
or
loopne
lea
mov
push
xchg
js
pop
add
or
fnsave
push
push
lret
shl
xchg
pop
imul
or
mov
mov
jbe
inc
pop
mov
pushf
xor
sarl
bound
fcomp
loope
ljmp
popa
jnp
mov
and
inc
scas
lcall
ret
aas
and
in
je
ret
sbb
hlt
jo
imul
stc
jns,pn
or
mov
ret
dec
push
call
andb
fadd
sbb
xchg
insb
out
pop
sbbb
setle
popf
jmp
stos
or
rclb
jbe
jp
outsl
inc
push
fsubrp
add
xor
movsb
cmp
mov
lret
test
ret
insl
jl
or
push
cmpsb
cmc
mov
xor
and
fcoms
stc
mov
xchg
mov
xor
push
fisttpl
sbb
pop
subl
sub
fs
pop
imul
ret
jmp
sbb
push
mov
mov
int3
imul
fisttpll
aas
mov
out
push
arpl
sbbb
jne
sub
jno
in
mov
mov
clc
lret
stos
sahf
sub
add
hlt
inc
ds
sub
dec
mov
pop
push
pushf
push
mov
outsb
mov
out
sti
aas
mov
push
aad
cli
sbb
jecxz
sub
mov
sub
cmp
mov
and
mov
inc
or
int
sbb
pushf
negl
add
outsl
push
sub
inc
bound
sbb
sub
adc
sbb
jmp
movsb
xor
insl
int
repz
sub
pop
xor
sbb
sbb
sub
test
mov
notl
aam
lds
lret
in
in
push
repnz
adc
lods
push
out
in
xor
mov
mov
sub
shll
sub
mov
mov
xchg
ret
pop
lcall
cli
int
imul
inc
mov
jecxz
stc
fnstsw
and
lahf
xchg
adc
jne
popa
sti
int3
pop
lret
mov
xor
sbb
and
lods
in
icebp
xchg
shrb
xor
test
notl
out
sbb
sub
pop
mov
and
jmp
inc
add
and
jb
xchg
dec
add
push
jecxz
cld
mov
mov
jnp
adc
jne
leave
pusha
lret
xchg
xlat
sub
jle
mov
lret
pop
stos
ret
xchg
pop
jge
addr16
dec
loop
pop
es
sbb
mov
push
ror
nop
xchg
dec
cmp
mov
push
aas
ljmp
popa
je
outsl
cmpl
ljmp
and
adc
push
pushf
and
sub
inc
inc
setnp
inc
fildl
mov
fldenv
inc
push
mov
jmp
sub
gs
into
or
stos
aas
sub
leave
out
test
jg
stc
pusha
lea
incb
fistpll
pop
xor
sbb
iret
mov
add
mov
das
shll
fisttps
jmp
mov
pop
test
lods
and
test
ja
loopne
or
xorb
movsb
test
loope
fsts
mov
lea
and
cmp
xor
mov
nop
mov
loop
mov
std
loope
scas
inc
xchg
push
xor
xchg
inc
fcmovbe
pop
mov
and
ds
xchg
xchg
scas
inc
push
pop
repz
lods
sub
outsl
sarb
pop
inc
sbb
outsb
imul
lock
push
out
xor
inc
inc
in
or
call
gs
add
xchg
inc
lcall
xor
sbb
call
and
iret
sarl
push
out
aad
push
leave
push
outsl
js
push
xor
mov
mov
je
rcr
aad
mov
popa
sub
push
mov
or
je
push
pop
mov
out
imul
xchg
pusha
daa
jmp
ret
adc
sbb
mov
mov
andb
mov
addr16
fildl
out
jno
jno
sbb
inc
dec
xchg
cli
dec
fbstp
jmp
push
xor
jmp
incl
xchg
test
cltd
xchg
sti
in
jb
push
jmp
loop
into
and
ret
inc
aaa
fst
sbb
lret
jo
mov
or
arpl
lods
iret
inc
fildl
sbb
sbb
fs
aas
dec
cmp
mov
outsl
pop
jne
mov
adc
xor
mov
cmpsb
fbld
mov
rcrl
pop
mov
adc
mov
shll
int3
pop
xor
into
out
decl
iret
loopne
insb
sub
fwait
mov
repz
mov
mov
mov
or
movsl
jb
adc
shlb
push
dec
mov
xchg
mov
push
and
nop
lods
jp
in
dec
cmp
dec
mov
pop
add
idivb
push
imul
mov
cltd
mov
xor
cld
mov
outsl
mov
mov
fsubs
fsubrl
cmp
ja
idivl
pop
fwait
push
xor
in
loopne
lea
jmp
aad
dec
jne
aam
dec
push
icebp
push
aad
jne
push
pop
out
ss
xor
push
sbb
lds
rolb
in
mov
scas
mov
addr16
adc
inc
and
test
sbb
add
aaa
in
inc
xor
je
mov
sub
or
pop
jbe
test
xchg
pshufw
pusha
sub
mov
xlat
cmp
repnz
jb
xor
std
add
div
mov
jns
lcall
scas
aad
loope
push
push
lods
test
adc
push
or
repz
and
out
fsub
xchg
xchg
jnp
mov
ja
xchg
jno
or
popa
loope
or
pop
es
xchg
sbb
sub
inc
mov
sbbb
ja
jmp
insb
punpckldq
or
test
das
sub
scas
ret
orb
shl
sub
aas
push
mov
lock
push
pop
hlt
test
xor
and
adc
pminub
scas
mov
sti
xchg
add
out
xchg
sbb
lock
mov
pop
dec
ret
sub
repz
jae
jg
mov
cmp
lret
mov
call
xor
sti
add
lahf
pop
rcrb
xor
ss
and
adc
stos
je
call
popa
scas
xchg
popf
add
push
sbb
add
leave
inc
cmp
push
push
pop
sbb
mov
das
ret
rcrb
mov
cwtl
push
in
test
shlb
rorl
sbb
jns
mov
mov
dec
nop
jne
aas
push
xor
xor
cwtl
aad
lret
sub
and
xor
mov
loop
xchg
pop
dec
loope
cmp
jmp
fcomip
outsl
sub
inc
mov
aaa
into
fwait
jno
in
stos
dec
and
int3
js
lods
pop
mov
push
add
pop
ficoml
pop
cmp
addb
or
mov
mov
jnp
sbb
cmp
or
add
dec
fiadds
pushf
push
in
subb
mov
adc
addb
cwtl
push
pop
fmulp
jle
push
inc
mov
and
imul
fidivrs
or
sub
inc
jmp
lret
push
in
cld
stos
mov
push
cwtl
je
lret
mov
sub
inc
fs
mov
hlt
aad
mov
pop
gs
fwait
inc
ret
pop
mov
inc
and
mov
jns
jno
xchg
jp
mov
jbe
lods
pop
cwtl
cmpsl
xchg
add
mov
inc
lea
lods
bound
jge
lds
sbb
cmpsl
xchg
sbb
or
les
loop
arpl
mov
push
push
ret
call
aam
pop
idivb
push
jge
fisubl
mov
or
movsl
and
sub
icebp
xor
dec
and
cltd
push
xor
sub
pusha
subb
add
leave
sbb
sub
dec
xchg
pop
inc
jmp
movsb
mov
lea
dec
mov
out
imul
jno
mov
fsubs
pop
jp
mov
hlt
test
jae
imul
aas
pusha
inc
push
mov
push
pop
addr16
test
insl
lea
cmp
or
lea
ss
in
test
ljmp
imul
lock
cmp
dec
repz
test
sarb
mov
lods
shlb
stos
push
mov
mov
je
fdivl
xchg
mov
sub
mov
mov
add
mov
movsl
lcall
mov
or
pop
fmuls
out
lahf
je
xchg
rcl
outsb
pop
pusha
inc
scas
pop
ja
mov
sar
xchg
pop
call
jecxz
shll
inc
pop
lds
and
das
lds
and
insb
push
inc
dec
es
xor
out
push
xchg
pop
adc
mov
inc
cmp
shrb
in
jle
in
fdivl
test
inc
push
imul
hlt
out
movsb
ds
sbb
or
stc
popf
or
jmp
jno
fxam
mov
push
sub
into
sub
in
pop
outsl
mov
loopne
out
pop
ffree
mov
lcall
sbb
mov
shrl
test
pop
repz
pop
hlt
push
rolb
insb
jecxz
fbstp
add
cmp
cmp
push
shrb
add
adc
add
popa
stc
push
or
lock
test
sbb
mov
cmpb
push
sbb
ja
imul
fdivp
xor
dec
mov
pushf
ss
cmp
sub
sbb
std
push
push
scas
adc
mov
cmc
mov
fldl
shlb
mov
out
dec
dec
dec
loop
inc
loope
pop
dec
jecxz
loop
and
in
mov
dec
xchg
push
mov
push
push
pop
je
push
fcoms
js
dec
xchg
lods
push
cmp
or
icebp
xor
pop
stos
mov
xor
push
pop
fmuls
xlat
fwait
insl
adc
mov
or
push
call
pop
mov
inc
sub
mov
push
mov
push
jno
and
pop
and
nop
pop
sub
testb
out
push
outsl
leave
and
cmc
lock
cld
pop
cmpsb
mov
stc
sbb
sqrtps
mov
sti
jmp
sub
cmovno
xchg
addb
cmpsb
das
arpl
mov
punpckhdq
inc
xlat
push
push
jecxz
xchg
outsb
arpl
scas
sub
pop
sbb
cmp
mov
dec
pusha
dec
pop
xchg
push
outsl
pop
fcoml
pop
ja
movsb
mov
mov
shl
lock
les
idivb
mov
lods
xor
in
sub
iret
mov
dec
clc
dec
arpl
dec
loop
fs
pushf
jmp
sbb
push
addr16
xchg
jne
and
xor
mov
cmp
cmp
shrb
scas
jne
pop
cmp
mov
and
fildl
adc
lock
xor
mov
dec
lea
mov
cwtl
push
inc
sahf
mov
pop
mull
jp
mov
jmp
sbbl
es
ficomps
bound
xchg
mov
out
xor
inc
push
add
js
dec
pop
dec
jge
dec
sub
lods
push
in
inc
mulb
loopne
out
lahf
sbb
jo
sbb
add
aad
repnz
mov
fwait
cmpsl
fbstp
cmp
xchg
inc
push
ficoms
das
sbbb
add
mov
pop
pop
iret
sub
xchg
cmp
cmp
adcl
mov
stos
add
imul
ljmp
jno
cmp
xor
ja
es
cltd
push
jmp
pop
jmp
or
mov
add
imul
push
je
sbb
push
mov
mov
cmpsl
mov
call
lea
cmp
pusha
push
in
addb
and
push
in
and
cmp
and
dec
in
dec
incl
jge
out
xor
icebp
ss
addr16
test
mov
lock
in
orb
ljmp
addr16
popf
push
push
push
cltd
cmpl
testl
inc
pop
repz
pop
lea
inc
test
sqrtps
pop
mov
sarb
arpl
push
movsb
push
in
dec
xchg
mov
les
sub
mov
jmp
inc
and
xor
jecxz
std
rcll
add
xchg
inc
bnd
push
or
mov
inc
fcmovnb
jg
testl
jge
pop
shlb
xor
pop
in
push
xchg
sub
repnz
jmp
pop
and
add
push
lcall
movsb
loopne
adc
mov
jo
and
jmp
xchg
fmull
lock
push
mov
cli
mov
or
mov
vpshab
jecxz
mov
in
pop
in
jg
push
and
movsl
adc
mov
fsub
test
push
mov
cmp
cmp
rolb
jbe
xchg
call
loope
je
mov
push
xchg
lcall
mov
mov
ja
xor
mov
sarl
inc
push
xchg
into
ds
insb
or
int
push
punpckldq
xchg
pop
sub
pop
mov
outsl
jo
mov
mov
lret
int3
fcomip
or
cmp
mov
dec
stc
fldl
xchg
add
lods
stc
fucomi
test
ss
es
fstps
insb
add
mov
mov
int
mov
sarl
aas
mov
mov
ljmp
sti
pop
mov
push
or
add
cmpl
xor
cltd
add
mov
lret
and
aaa
test
stos
and
fiadds
in
sub
sti
out
inc
sbb
inc
popf
in
xor
jmp
xchg
call
std
das
dec
pop
push
pusha
and
loope
mov
adc
adc
stc
dec
jge
sub
lret
in
cld
sti
mov
xor
mov
ret
pop
in
xor
rcll
xchg
lds
adc
add
mov
add
in
insb
gs
int3
mov
out
in
lods
adc
inc
add
clc
sub
or
sub
or
addr16
xchg
cltd
in
outsl
push
push
mov
out
imul
subb
sbb
xor
mov
lods
mov
mov
lcall
loopne
mov
shlb
orl
mov
push
xor
push
call
push
push
test
in
cltd
pop
dec
popf
pop
cltd
push
dec
aaa
mov
push
aas
stos
aad
fldl2t
and
and
cmp
out
decb
adc
xchg
push
dec
movl
xchg
pop
mov
cmpsl
daa
jb
ret
in
inc
dec
cs
push
adc
outsl
xor
imul
xor
inc
add
psubb
xchg
iret
push
scas
adc
movsl
inc
inc
adc
js
in
ljmp
insb
adc
sub
mov
stos
cmc
xchg
andl
insb
shrb
xor
adc
add
mov
cmp
aad
inc
iret
dec
stos
gs
popa
pushf
fcomi
mov
fwait
cmp
mov
lds
pusha
in
inc
sbb
ds
bound
fadd
mov
dec
adc
loope
popl
lea
fwait
icebp
outsl
sahf
jecxz
lock
mov
push
xorl
sbb
aad
cltd
sub
dec
sarl
loopne
push
test
push
cmp
mov
jne
pop
dec
outsb
push
addr16
jle
aad
mov
mov
aam
jb
fildl
and
call
xorb
xor
loopne
inc
cli
pop
stos
cltd
or
or
dec
sub
mov
ds
fdivs
pop
add
mov
sbb
test
data16
cwtl
addr16
popf
aad
add
pusha
mov
mov
pop
cmp
and
sti
movsl
cmp
roll
movsb
sbb
in
cmc
mov
shl
mov
xlat
push
push
popf
fwait
jb
ss
pushf
movsl
jb
insb
xorb
cmpsl
cmp
pop
cmp
jb
dec
arpl
push
jge
test
push
icebp
pusha
xchg
idivl
mov
ljmp
mov
sahf
jle
cmc
dec
pop
fcomps
mov
and
mov
fdivrs
inc
mov
cmpsb
cmp
sbb
aaa
inc
notl
xor
sbb
loope
lock
insb
fwait
inc
lret
test
ja
lods
test
fmuls
ret
mov
sbb
mov
or
arpl
dec
or
push
pusha
xorb
fmul
mov
loopne
scas
call
sub
cmp
data16
push
cld
lock
int3
add
sbb
or
insl
or
negb
imul
sbb
daa
outsl
popf
mov
repz
test
or
xchg
mov
push
mov
pushl
xchg
repz
dec
test
jl
cmpsl
dec
cmp
and
mov
mov
insb
imul
push
sub
and
jbe
pop
sarb
xchg
shl
push
sbb
sub
jge
push
rcrb
mov
mov
leave
adc
gs
mov
cmpsl
pop
sub
jae,pt
push
lret
out
jns
ret
xchg
sbb
cmp
jno
and
jl
jg
cli
test
push
outsl
aam
xchg
daa
jle,pt
xchg
mov
xor
dec
dec
adc
inc
and
ss
jecxz
rcll
pop
push
jecxz
hlt
jmp
xlat
xor
mov
imul
push
add
mov
jge
mov
push
into
movsb
les
inc
or
mov
push
sub
push
mov
scas
xor
push
pusha
das
push
lret
bound
push
hlt
push
dec
xchg
fsubrs
out
push
push
jb
adc
add
ss
loop
test
push
incl
dec
cs
shrb
dec
std
rorl
dec
dec
or
shrl
fwait
adc
xor
cmp
dec
cli
ret
pop
jo
xchg
loop
push
and
aad
xchg
in
stos
adc
cmpl
cmp
shrl
loope
jb
stc
cbtw
xlat
mov
and
dec
xor
adc
xchg
mov
mov
lea
adc
dec
loop
push
leave
in
pop
int
or
mov
cs
repnz
cmp
pop
test
push
or
popa
adc
shlb
add
rcrb
xchg
imul
sbb
mov
imul
lds
fistps
xchg
mov
adc
in
aas
sub
jge
pop
jmp
dec
mov
insb
sub
jns
lds
cmp
jp
xchg
push
lcall
adc
andl
sbbb
in
lcall
stc
imul
ljmp
ljmp
push
xor
lods
insl
add
data16
inc
pop
cmc
jbe
loop
loop
test
or
icebp
pop
cmp
insl
pop
imulb
repz
cmp
sub
jnp
mov
add
out
adc
nop
pop
xchg
jae
push
scas
lds
bound
adc
mov
js
insl
inc
loopne
fldl
cwtl
or
cmpsl
pop
mov
and
xor
clc
ljmp
sahf
mov
rcll
int
lods
inc
add
lods
dec
add
bound
sbb
mov
and
add
in
popa
push
cmp
mov
iret
je
xor
and
nop
sbb
or
mov
pop
lock
mov
pop
inc
ja
call
test
jle
stos
inc
cmp
mov
pop
leave
fsts
outsb
notb
sub
pop
xor
jo
decl
sbb
je
jmp
clc
adc
pop
enter
mov
data16
rcrl
lcall
xchg
addr16
mov
enter
scas
call
fdivr
outsl
mov
cmpsb
das
pop
sub
lret
jae
dec
hlt
add
push
aam
add
cmc
inc
mov
xchg
loop
sub
in
inc
push
aas
xor
cmp
xor
fists
les
pop
push
stos
dec
and
cmp
aaa
inc
jmp
les
xor
jno
mov
cwtl
xor
loopne
mov
sub
jge
jp
bound
pop
loope
fwait
dec
mov
ret
push
sub
pop
sbb
aas
inc
cmpsl
out
sbb
xchg
ss
in
push
dec
dec
pop
adc
insl
ret
cmp
in
adc
ja
sub
fs
andl
in
insb
add
notb
stos
inc
dec
cmp
leave
ss
aas
fsubs
pop
cmp
and
test
divb
dec
sbb
ret
jle
bndstx
scas
fstpl
outsl
sahf
xor
loop
mov
mov
imul
pop
subb
imul
ljmp
xchg
cmp
mov
push
or
test
sbb
sub
lcall
out
fnstcw
adc
int3
sbb
or
out
jg
sub
ljmp
mov
or
jbe
mov
push
xchg
mov
jns
aaa
and
jle
xor
addr16
aaa
xchg
sbb
popf
sub
iret
pop
mov
push
je
mov
mov
jnp
mov
bound
xchg
sub
mov
mov
pop
mov
xchg
dec
roll
shrb
jo
inc
fwait
dec
sbb
pop
fdivrl
daa
jo
pushf
ss
fidivrl
or
notl
in
adc
in
push
stc
push
adc
xor
into
out
cltd
and
loop
push
push
int
pushf
out
xor
mov
outsb
add
sar
ret
pusha
or
loope
fdivrl
lret
mov
aaa
push
arpl
into
mov
mov
lock
cmp
clc
das
xlat
pop
repnz
ret
jbe
add
lret
cmpsl
mov
sahf
test
add
sub
ja
std
mov
insb
decb
cmpsb
push
mov
jns
hlt
ja
xorb
jmp
push
sub
cld
pop
push
das
fistpll
insl
lock
jns
fnstsw
inc
sub
sbb
shl
aam
pop
icebp
into
jbe
xchg
pop
xchg
test
xchg
fstp
pop
cli
pushf
scas
int3
test
adc
addl
mov
cwtl
divb
ret
push
sti
stos
add
push
cltd
popw
mov
je
lret
sti
hlt
jp
adc
jnp
push
je
xchg
cmpsb
pop
das
fmull
push
and
adc
enter
push
mov
push
push
cmp
je
add
push
lods
adcb
into
mov
fists
popl
mov
dec
push
cmpsl
icebp
daa
mov
lods
out
fwait
icebp
aaa
pop
scas
jmp
xchg
mov
jge
sbb
pop
lahf
jge
out
jp
pop
adc
ds
hlt
mov
or
jle
pop
in
xchg
out
jp
dec
pop
imul
sub
inc
idivb
nop
fldenv
push
loop
nop
pop
cmc
fs
mov
or
stos
std
jb
scas
mov
outsb
sbb
scas
pushl
push
sbb
mov
movsl
inc
mov
mov
insb
or
sbb
popf
push
jno
aas
imul
ret
mov
cmp
sbbl
mov
in
out
dec
in
cmp
scas
lcall
pop
enter
cmp
inc
pop
popf
dec
loopne
clc
fucomip
cli
pop
jo
mov
cli
adc
js
jae
test
dec
sbb
lret
cmp
imul
jl
mov
lds
sbb
dec
or
ss
jp
sub
sub
negb
xor
sub
sub
sti
cmp
into
rcrl
jnp
pushf
fisttpl
xchg
mov
fdivs
fistl
movsl
sub
xchg
xor
xor
movl
mov
inc
sbbl
push
mov
jne
jg
or
fcmovne
jns
ds
int
pop
inc
arpl
sahf
cltd
js
mov
xchg
fwait
lods
out
movsl
icebp
add
xor
test
aaa
rorb
xchg
repz
and
push
mov
pop
lock
dec
cmp
ds
les
xchg
js
xor
xlat
or
cmpsl
out
jnp
into
xor
sub
shr
adc
dec
xor
xor
add
jecxz
cli
pusha
inc
mov
arpl
aaa
inc
fld
xor
nop
xchg
push
sarl
mov
lcall
cltd
jae
aas
xor
pop
push
nop
xlat
mov
andb
js
in
cld
cmc
aas
cmpsl
in
mov
dec
dec
icebp
push
jno
stos
pop
lea
test
loop
adc
push
scas
in
jp
push
clc
sub
push
hlt
adc
gs
xchg
push
fidivs
and
je
aam
lret
lea
ss
lea
dec
mov
and
jnp
ljmp
out
je
mov
or
jb
inc
mov
enter
repz
and
mov
mov
in
sbb
or
cmpsl
sub
add
sbb
push
inc
mov
int
sbb
and
out
add
pop
test
jle
add
gs
push
mov
cs
push
mov
sbb
xor
xchg
push
popl
jge
jae
lea
loope
pop
fimull
xchg
pop
or
int
jmp
and
sbbl
sbb
adc
mov
sbb
shl
out
or
add
push
mov
cmp
pop
addr16
shrb
addl
jl
int3
mov
call
cmpsl
pop
in
push
les
mulb
jbe
mov
or
and
cmp
xor
popf
icebp
adc
pop
mov
or
add
mov
shrd
loop
push
dec
pusha
int3
sub
mov
jo
incl
push
jne
pop
sub
cmp
dec
outsb
dec
inc
inc
negl
push
popf
sahf
adcb
jne
arpl
lds
ret
mov
leave
adc
and
jne
push
fwait
xor
push
push
adcb
push
mov
or
leave
cmp
adc
inc
mov
je
int3
rolb
add
mov
mov
pop
popf
loopne
xor
and
adc
add
fdivs
fs
mov
fsubr
mov
push
push
xor
adc
popf
jns
mov
mov
xlat
out
aaa
into
adc
pop
dec
xor
arpl
cmp
cmpsb
insb
adc
jge
test
cltd
push
xchg
daa
mov
jbe
sub
jmp
stc
adc
cltd
or
or
scas
mov
or
xor
int3
lret
mov
test
adc
xor
inc
add
mov
adc
cmp
out
mov
cld
push
cld
xor
adc
pop
lahf
push
jo
xor
xchg
out
pop
js
push
stc
mov
nop
cmpsb
imul
insl
sahf
cs
push
mov
push
arpl
js
aad
jno
lock
cmp
sub
ret
dec
xchg
flds
jno
xchg
mov
push
adc
loope
jl,pt
repz
and
cmc
addr16
mov
pop
adc
inc
inc
shll
gs
roll
popf
xchg
addr16
dec
jmp
ret
inc
sub
pop
adc
mov
loop
insl
jge
mov
mov
mov
fdivl
pop
push
repnz
lods
xor
sub
in
sbb
xor
aad
pop
cld
push
rorb
push
mov
mov
fildll
dec
adc
pop
sahf
sub
shl
mov
push
inc
popa
jns
jb
mov
stos
lds
sbb
push
mov
xor
shrb
cmp
addl
add
test
js
rcr
mov
adcb
fwait
inc
movsl
dec
dec
iret
imul
adc
mov
push
mov
mov
ss
dec
out
shrb
pop
sti
pop
leave
mov
sbb
leave
ror
add
out
cmp
xchg
or
shrl
or
xchg
nop
loope
in
and
movsl
inc
xor
inc
pop
out
aaa
inc
imul
pop
repz
adc
sbb
or
pusha
aas
out
mulb
popa
push
push
dec
icebp
mov
adc
mov
xchg
daa
mov
stos
ds
cld
push
mov
xlat
fbstp
jl
imul
and
xor
mov
mov
in
scas
add
aam
decl
push
jecxz
in
int3
sub
mov
inc
xor
mov
sbbl
subl
jl
add
cmp
shlb
mov
cs
dec
lods
shlb
cltd
lds
xor
push
scas
or
pop
loop
cmp
clc
test
fidivs
imul
nop
clc
jae
mov
mov
push
out
cld
mov
mov
lods
mov
test
mov
int
sbb
les
js
jle
cmpsb
call
cmp
adc
sub
outsl
dec
pop
std
jne
cwtl
xchg
mov
nop
mov
orb
aaa
adc
mov
fbld
fs
insl
mov
jge
rorl
push
les
les
jle
xchg
mov
mov
into
add
int
cmpl
test
mov
stc
push
jmp
mov
jo
pextrw
adc
dec
repz
xor
cld
adc
lret
xlat
outsb
shlb
out
jle
push
popf
cli
lret
pop
icebp
xor
das
push
push
cmp
xor
stos
test
idivb
mov
int
push
sub
leave
and
push
dec
mov
mov
test
fidivl
iret
cwtl
jne
jb
aad
cld
scas
data16
fldcw
or
pop
fwait
jb
mov
cli
xchg
add
jecxz
pop
sbb
lods
mov
sbb
std
inc
push
pushw
lret
pop
adc
jle
iret
out
jmp
cmp
test
bnd
fst
loop
xchg
insb
jp
dec
mov
pop
pop
xor
cmc
ret
jle
push
push
mov
pop
push
jo
mov
stos
adc
xchg
jg
jge
repz
call
test
sti
ret
xor
mov
sub
out
or
adc
add
je
movsl
push
jno
in
mov
push
and
ljmp
mov
and
ret
stos
lea
inc
aam
cli
adcl
cld
or
js
mov
aam
addr16
sahf
xchg
sti
or
sahf
mov
out
pop
cmc
in
pop
test
lcall
mov
mov
gs
mov
inc
mov
cmp
in
sbbl
pop
notl
lods
lds
mov
xchg
test
out
cmp
adc
ss
pop
imul
loopne
and
mov
shll
pop
gs
int
andl
jne
iret
dec
shlb
data16
in
pop
dec
movsl
add
cmp
loop
inc
out
mov
sub
fs
xor
scas
add
pop
sti
mov
insl
mov
lahf
pop
pop
arpl
xor
inc
ds
addl
aaa
fnsave
shr
and
mov
lock
add
pusha
cwtl
out
push
scas
sub
out
nop
pop
insl
pop
stos
in
dec
lret
lea
data16
jns
and
mov
int3
add
cmp
push
cmp
adc
jl
inc
push
adc
in
lds
nop
das
mov
aad
xlat
sbb
test
in
cmc
repnz
insb
adc
or
jbe
dec
sti
ss
rcr
cwtl
add
lcall
mov
cld
sarl
cwtl
int
sbb
ror
mov
loop
repz
les
mov
insl
rcrb
dec
or
sbb
ret
fmuls
repz
shrl
xchg
mov
popa
pop
cmp
out
pop
push
mov
xor
leave
pusha
hlt
and
sub
fidivs
or
decl
rcrb
add
filds
push
push
cmpsb
dec
push
iret
fs
inc
cmp
pop
push
iret
ds
cmp
xchg
int
inc
hlt
push
outsl
icebp
imul
xor
and
pop
sub
fwait
ja
in
fstps
jns
add
out
hlt
test
mov
ja
bound
pushf
and
incb
cmpsb
xor
sti
xlat
test
negl
inc
mov
sbb
inc
ds
push
mov
ret
pop
or
loope
push
or
sahf
clc
mov
fldcw
mov
shlb
sti
and
or
adc
add
adc
adc
inc
mov
add
fsts
shll
fstps
out
adc
mov
cmc
test
mov
fldt
jo
std
lahf
xchg
pop
dec
mov
pushf
insb
stos
inc
push
mov
jne
xor
mov
inc
cmp
mov
mov
fiaddl
adc
push
aaa
out
and
mul
xorb
nop
sub
pop
repz
or
adc
push
dec
sbb
popf
and
and
cmp
cs
incl
mov
pop
icebp
jge
imul
xchg
xlat
xchg
mov
ja
cmp
fwait
xor
jmp
ficomps
xchg
add
call
add
mov
mov
hlt
mov
iret
out
add
adc
call
mov
out
mov
stc
vmovlps
dec
pop
fnsave
lock
das
jle
popa
decl
mov
mov
xlat
outsb
mov
fdiv
mov
popf
in
cmp
fisubs
mov
cmp
mov
inc
lahf
ss
xchg
add
sbb
and
xlat
add
xor
mov
rol
hlt
loope
popa
push
sub
mov
and
or
int3
stc
mov
inc
sub
dec
stos
pop
sbb
cmp
xchg
aam
pop
cmp
rcrb
cmc
in
pop
dec
sub
lcall
or
idivb
jge
dec
addr16
cmp
xchg
or
aad
repnz
test
sub
je
sbb
cmp
int3
arpl
test
or
xorl
lock
fimuls
movsl
nopl
xor
fs
ret
repz
pop
cmc
dec
aaa
xchg
sub
lods
mov
lcall
and
test
xchg
loopne
fwait
adc
and
insl
xchg
js
ret
mov
xchg
sub
daa
or
xchg
cmp
icebp
add
faddl
mov
std
mov
hlt
mov
fistpll
adc
rclb
aaa
into
arpl
push
call
push
add
cmp
sbb
pop
dec
push
popf
jg
push
mov
mov
cmp
pop
icebp
mov
imul
inc
inc
test
mov
fiaddl
or
mov
pop
mov
fildll
outsl
push
xor
dec
popaw
shrb
mov
inc
loop
lock
add
pop
cmp
fnstsw
xchg
sub
fs
int
movsl
cmp
ljmp
les
mov
dec
pop
imul
mov
aad
jle
xchg
mov
fnstenv
or
mov
popa
jno
xchg
movsb
mov
lods
xor
je
mov
mov
push
bound
jl
mov
dec
in
xor
mov
jo
mov
jmp
addr16
mov
inc
fsubl
push
in
movsb
mov
outsl
push
mov
cltd
xor
pop
mulb
aad
scas
xor
bound
push
test
loope
in
jae
andb
pop
repnz
mov
inc
fisubs
jns
repnz
shl
hlt
jae
dec
mov
jl
adc
jg
out
lods
shlb
enter
mov
sub
pop
sub
test
jge
add
subb
add
xchg
or
xchg
cs
sub
shrb
aaa
into
add
es
add
or
and
ret
repz
test
push
movsl
push
ret
repz
repz
mov
mov
cld
shll
repz
and
mov
mov
shl
hlt
aaa
fwait
xor
les
mov
sbb
iret
or
push
mov
add
stc
and
xor
pop
int
xchg
add
sbb
inc
adc
or
or
cltd
xor
cmp
dec
fsubrl
adc
lods
inc
adc
mov
aaa
push
aad
aaa
jecxz
pop
adc
in
sbb
fnstenv
or
fwait
xor
xlat
mov
mov
dec
xlat
mov
push
ficoms
push
adc
lcall
leave
sahf
xor
dec
sub
popf
pop
fnstsw
ja
sarl
sbb
mov
fiadds
push
cmp
dec
fimuls
push
loopne
or
dec
add
pop
xor
sub
or
sbb
mov
xor
dec
loope
in
add
pusha
adc
into
inc
mov
or
mov
dec
test
pop
out
push
inc
jbe
js
xor
dec
stos
push
popf
fchs
shrl
dec
dec
jecxz
or
in
lock
push
cmpsb
cmp
daa
xchg
jbe
notl
mov
adc
sar
pop
cmc
cs
mov
jae
pop
mov
mov
jns
pop
dec
pop
repz
mov
add
sbb
push
das
ds
data16
ret
pushf
sbb
push
xchg
sub
lcall
and
divb
repz
add
cwtl
std
and
int3
loope
ja
inc
dec
jecxz
sbb
rclb
inc
in
loopne
mov
sbb
lahf
or
aam
testb
pop
imul
mov
xlat
in
les
pop
es
dec
test
jno
xchg
sub
ja
jmp
cmp
push
out
test
lds
clc
cmp
sub
dec
dec
loope
insb
ja
sahf
lahf
push
cli
jmp
mov
pop
cmp
mov
std
mov
jl
loope
add
xor
pop
cmp
sti
xchg
and
inc
sbb
cmp
in
in
in
test
or
sub
and
data16
or
adc
mov
pop
or
jnp
xor
inc
fisttpll
stos
inc
and
cli
or
inc
clc
mov
sub
repnz
and
fsubrs
add
test
sbb
add
mov
or
loop
loop
je
inc
imul
inc
stos
movsl
cmp
fcomip
mov
inc
sti
xchg
jns
adc
aam
pop
out
testl
aad
cmpsl
int
lds
adc
sahf
cmc
mov
lret
inc
push
adc
push
sahf
loope
iret
int3
hlt
mov
pop
imul
dec
xchg
inc
fcmovb
aam
mov
popa
mov
xchg
sub
into
pop
mov
insl
add
or
int
rorb
jns
sub
jl
mov
xor
jp
dec
mov
sti
xchg
aaa
aam
addb
adc
push
mov
add
xor
scas
inc
stc
push
int
test
into
in
cmpsb
std
adc
insb
jp
lcall
lahf
in
dec
lret
loop
push
and
inc
sahf
jge
shlb
ficoml
mov
push
out
push
out
je
or
les
adc
sbb
ret
fisubrl
mov
adc
fsubl
rcl
sub
pusha
icebp
xchg
sub
andb
jns
inc
pop
push
fwait
push
insl
int
aad
push
out
dec
pop
and
mov
jb
xor
xchg
jle
lds
in
out
cwtl
pop
outsl
sbb
mov
mov
fidivrs
jb
add
pop
mov
dec
in
inc
fsubrl
int3
xchg
cs
push
push
call
dec
cmpsb
lea
insl
jo
mov
outsl
pop
sahf
mov
ja
jb
movsb
adc
xchg
inc
jl
mov
in
adc
jp
adc
mov
adcb
jo
repnz
sub
pusha
lods
jnp
pop
addr16
xor
and
fildl
subl
or
sub
scas
xor
cmp
lahf
mov
inc
int
test
sbb
adc
icebp
xchg
sub
inc
adc
and
adc
push
jns
and
pop
cmp
dec
fwait
push
adc
sbb
rcrl
out
cs
loopne
dec
mov
hlt
lods
jo
mov
ds
mov
mov
pop
mov
xchg
fbld
outsb
aam
fistpll
fdivrl
cmp
push
dec
mov
das
les
loope
and
cmc
push
sub
mov
and
aam
adc
mov
movlps
shlb
pop
decl
loop
fildl
add
adc
sbb
jmp
fs
and
add
jg
xlat
jmp
mov
cmc
jb
xlat
adc
sub
in
lret
ds
add
mov
les
push
xchg
mov
out
in
arpl
add
pop
je
xchg
xchg
stc
pop
hlt
das
pop
mov
movsb
add
sarl
jae
dec
fbstp
xchg
rorb
and
dec
xchg
or
fcoms
push
popf
gs
rorl
and
and
adc
hlt
mov
outsl
mov
sahf
pop
hlt
scas
sbb
sahf
in
cmp
mov
push
rorl
or
enter
dec
mov
pop
aam
rol
ss
mov
push
popf
and
out
out
xchg
lds
sbbl
fsubrs
xchg
push
cmp
push
xchg
mov
push
cmp
sti
and
ret
inc
xor
lret
push
popf
xchg
xchg
pop
jo
insb
push
xlat
xchg
fisttps
leave
rclb
jno
sub
les
pop
cmp
ja
fnstenv
push
cmp
mov
pop
cwtl
xchg
cmpsl
out
dec
shr
hlt
orl
sbb
cltd
jbe
cltd
insl
add
out
mov
pop
rolb
dec
xchg
xchg
inc
rcrl
push
fldcw
aas
in
dec
xchg
sub
psadbw
inc
leave
faddl
inc
mov
negb
jmp
into
loopne
pop
mov
jl
add
enter
dec
rorb
cmp
pop
add
movsl
jl
stos
jne
cmp
jns
test
bound
cmp
sahf
mov
mov
repnz
outsl
fistps
ss
jecxz
fwait
push
and
fwait
or
test
cld
or
mov
dec
mov
mov
dec
idiv
dec
ror
mov
push
add
lea
aad
in
jle
push
push
xor
mov
jmp
fidivl
add
fildl
push
inc
cwtl
je
inc
cmpsb
lock
test
les
rol
addb
movsb
jnp
cld
shlb
call
mov
and
or
cwtl
jg
cltd
and
lret
jnp
in
mov
jno
iret
mov
xor
sbb
inc
lcall
push
mov
negl
jecxz
jmp
cmpsb
mov
sub
nop
hlt
outsl
mov
fwait
ljmp
scas
enter
sbb
scas
test
int3
jecxz
out
jno
or
sbb
out
cmpsb
mov
sarb
fxam
sub
lock
mov
fimuls
shll
xchg
lods
push
js
jbe
sbbb
xchg
inc
lret
aam
mov
out
cmp
mov
out
adcl
jbe
lea
pop
test
popa
dec
sarl
pop
dec
mov
mov
pop
roll
ljmp
shrl
mov
outsb
or
dec
repz
mov
pop
fisubl
insb
ret
push
fstpt
lods
cmpl
mov
dec
lcall
imul
insl
arpl
fisubl
jno
and
inc
rolb
cmp
addb
push
mov
add
and
ss
xor
inc
push
ficoml
dec
and
push
pop
test
int
and
xchg
stos
mov
jp
cltd
lahf
ss
mov
fldt
cld
sub
fistps
cmp
pop
and
push
movsl
and
out
jp
hlt
sub
repnz
mov
jno
mov
and
cwtl
mov
mov
lock
lock
aad
jmp
inc
and
arpl
pop
scas
xor
cmp
sbb
fsubs
or
cmp
inc
mov
movsb
push
dec
les
jle
fildl
or
dec
mov
mov
mov
int
leave
mov
mov
mov
in
xchg
mov
lock
ljmp
xchg
or
inc
imul
dec
push
jp
arpl
sbb
cmp
ss
xor
ds
jns
add
cwtl
sbb
das
dec
xchg
push
stos
cs
loope
jo
dec
loop
xchg
mov
add
xchg
movsl
push
adc
mov
divb
cmc
or
jmp
inc
orl
push
dec
shll
cmp
daa
jns
fsubrl
into
push
aad
jge
shrl
pop
lret
fcmovnbe
or
mov
fdivs
mov
inc
in
fisubrl
rsm
mov
decb
cmpsb
data16
pop
rcr
jg
xchg
aas
mov
ja
xor
pop
cld
mov
jmp
mov
push
inc
sbbl
xor
repnz
pop
stc
adc
inc
addl
jnp
xchg
js
pop
repnz
imul
pop
fisubrs
icebp
mov
adc
jmp
adc
out
std
stos
jbe
cmpsl
sbb
and
es
cs
push
aam
jecxz
std
mov
repnz
push
in
jno
fcompl
push
into
stos
lock
mov
lret
bound
enter
dec
add
push
mov
sti
xor
js
loopne
sahf
xor
cmp
stc
lret
pop
and
fs
inc
lret
push
mov
fst
dec
call
xlat
enter
inc
enter
dec
mov
xorl
push
mov
jbe
push
into
mov
xor
mov
clc
xor
filds
fstpt
or
shll
mov
clc
ss
rcll
mov
cmc
inc
or
mov
fnstenv
mov
test
leave
pop
mov
fwait
cwtl
pop
sti
xchg
mov
push
out
cld
dec
mov
insl
fwait
leave
jmp
or
mov
sbb
jmp
mov
je
inc
dec
dec
rcl
dec
scas
jle
les
fisttpl
jae
fistl
fstpt
dec
cmp
xor
out
test
clc
cli
mov
addr16
mov
js
xor
imul
cmp
dec
loopne
mov
ds
insl
sub
cmp
jp
add
ret
inc
push
push
jmp
cmp
and
add
jle
in
xor
xor
sahf
adc
sbb
cltd
imulb
adc
jle
fidivl
pop
cmp
stc
sbb
mov
pop
xchg
adc
or
std
xchg
fprem
xor
add
or
shl
out
scas
test
das
cld
dec
jb
pop
scas
into
gs
push
lret
dec
das
lods
outsl
xchg
dec
inc
test
adc
fcoms
pop
clc
xor
mov
mov
fisubrs
jae
fstl
mov
out
sbb
outsb
pushf
pop
xor
jne
andb
and
mov
ret
mov
lods
pusha
dec
ret
xor
jle
or
sti
push
lds
in
orl
testb
mov
aad
mov
xchg
std
ficompl
mov
jg
dec
ret
jae
fnsave
xor
stos
test
in
or
jbe
aad
mov
and
or
sbb
and
cmpb
jg
movq
mov
imulb
push
out
pushl
mov
lret
xor
mov
cmp
out
and
fsts
lods
js
sub
dec
imull
pop
out
imul
mov
pop
leave
dec
ds
pop
int
push
mov
fnstcw
cmc
mov
icebp
cmp
in
repz
ret
test
push
mov
and
cmpsl
test
xlat
in
dec
mov
push
stc
shl
xchg
sub
fucomp
ss
imulb
loopne
fidivl
add
bound
addr16
mov
fisubl
std
fistpll
push
in
add
xchg
cltd
or
push
mov
push
lods
daa
mov
scas
and
test
bound
cmpsb
xor
nop
in
rcl
cmp
jb
xor
rcll
andl
out
push
scas
xor
hlt
mov
fwait
sub
jne
xchg
pop
sarl
and
jne
inc
mov
xchg
cmc
cmp
inc
mov
cmpb
sbb
popf
insl
pushf
and
ja
popl
fs
pop
rorl
push
mov
dec
adc
insb
cmpsl
mov
cs
lcall
dec
jno
push
cmp
cli
aaa
jae
inc
push
jg
icebp
fs
pushf
jno
es
je
lahf
ss
cmp
cltd
cs
dec
idivb
out
lret
dec
push
sub
cwtl
mov
iret
inc
test
pushl
aad
popl
or
das
and
xchg
cltd
pop
movsb
sbb
sbb
lock
jle
xchg
inc
inc
mov
popa
aam
mov
and
pop
repz
fisubl
ss
js
movsl
cmp
cmp
shrd
mov
xchg
gs
sbb
and
sbb
add
ss
lret
mov
lods
and
mov
rcrl
mov
sarl
lock
sbb
sub
adc
sbb
mov
push
adc
js
outsb
mov
xchg
sarb
out
lea
fnsetpm(287
sub
inc
mov
sbb
push
cmp
push
fnsave
sbb
inc
push
int
imul
pop
xor
insb
pop
add
insb
xchg
cltd
xchg
mov
out
sbb
addb
jns
inc
pop
mov
cmp
mov
xchg
fwait
jo
sub
pop
repz
loop
push
aaa
inc
int3
jbe
in
std
and
mov
adc
ret
pop
hlt
mov
dec
mov
and
js
mov
loopne
or
sub
out
and
pushf
sbb
lret
cwtl
jp
sbb
lcall
mov
and
movb
sub
mov
loop
mov
ret
loope
mov
fadd
jge
out
mov
dec
scas
test
xor
pop
out
popa
movsl
mov
std
jne
ret
jp
ret
dec
jecxz
aam
sub
loopw
inc
sahf
push
test
pop
lcall
test
rcrl
ja
scas
out
pop
aam
add
xchg
movsl
inc
fsubs
ud2
add
pop
jmp
daa
shlb
aad
fldl2t
and
and
inc
popf
nop
call
sub
das
pop
shrb
add
xor
fnstcw
mov
dec
mov
clc
shrl
sub
stos
mov
icebp
pop
leave
and
jnp
fiaddl
cmp
hlt
pushf
xchg
hlt
idivb
adc
push
mov
scas
add
mov
ret
fsubrl
mov
rcll
mov
cs
iret
push
jp
or
addr16
test
jg
inc
mov
aaa
push
inc
fwait
push
push
test
pop
movsl
cmp
dec
xchg
cmp
je
push
test
push
pusha
data16
mov
pop
ret
sbb
push
rorl
dec
add
sbb
mov
rcr
out
sbb
pop
stos
into
cmp
pop
jmp
je
xchg
jecxz
sbb
jg
inc
dec
sbb
jne
jno
jecxz
xchg
outsb
pusha
mov
iret
add
xchg
mov
sbb
divl
mov
mov
mov
jge
aam
jg
xchg
fwait
xchg
repz
jl
cmpsl
jge
adc
jge
cltd
arpl
mov
das
adc
add
push
mov
out
xor
in
sbb
fdivr
and
testl
cmp
call
loop
inc
in
das
repz
in
pop
fcmove
cmp
cmp
add
bound
mov
pop
popf
inc
call
popa
stos
iret
push
stos
out
dec
iret
test
cs
ret
push
leave
psllq
push
sbb
push
scas
sbb
xor
pushf
sbb
sbb
push
popa
push
xchg
sub
arpl
pop
pop
push
aam
xchg
imul
pop
push
aaa
lock
pushf
xchg
ret
test
or
sarb
call
or
imull
jmp
call
xchg
pop
sahf
repnz
adc
adc
shlb
and
stos
aam
adc
and
mov
adc
mov
adc
xchg
xchg
mov
jae
and
in
subl
data16
jno
push
mov
and
mov
inc
gs
iret
push
fs
inc
pop
enter
pop
jb
inc
fdivl
cmp
xchg
or
xor
mov
jns
fstpt
bound
dec
icebp
dec
fcomip
imul
push
mov
or
pop
rorb
dec
pop
sub
arpl
clc
inc
subb
dec
pusha
notb
add
jg
aad
inc
mov
in
xorb
or
fildll
xchg
aam
add
adc
loop
aam
dec
jecxz
test
mov
sarl
outsb
movsl
push
xor
outsb
cltd
lea
push
test
mov
push
cltd
pop
aad
cmp
dec
xchg
fcompl
les
jle
dec
pop
cmp
inc
jg
test
nop
nop
xor
mov
lds
loop
and
sahf
push
or
rorl
add
xor
jmp
insl
clc
sub
sbb
sbb
ds
pop
jmp
jle
pop
cld
cmp
pop
xor
pop
stc
lds
jmp
or
notb
mov
mov
mov
js
pop
shrl
fidivl
loop
shl
fs
shll
std
sub
jecxz
xchg
inc
adc
bound
add
sub
push
rcl
jl
pushf
push
aad
adc
cmpsl
lcall
mov
push
shl
jecxz
mov
loopne
sub
icebp
sbb
mov
cmc
daa
in
lahf
mov
xchg
psubsw
xchg
cmp
aaa
mov
cmpl
adc
jnp
inc
mov
imul
outsb
cmp
fistl
mov
inc
lcall
jge
pop
inc
dec
insb
lcall
jl
iret
pusha
jp
arpl
or
insl
fs
fisttpl
mov
dec
fisttps
mov
std
xor
daa
mov
into
xor
in
sub
aad
pop
ret
pop
out
cmp
and
xchg
mov
roll
fisttpll
ds
jle
ret
push
xor
pop
gs
inc
cmpsl
jl
jle
jecxz
and
xchg
insb
mov
adcb
movsl
insb
mov
out
fldt
or
iret
adc
cld
and
sbb
std
push
ficoms
mov
flds
inc
and
shll
lods
jl
dec
sbb
push
daa
xchg
ja
js
int3
inc
lock
push
adc
push
movsl
pop
out
jno
scas
arpl
push
mov
push
or
aaa
fiadds
ljmp
test
out
xchg
xchg
fisttps
mov
popa
lahf
out
push
imul
xchg
xchg
outsl
xchg
or
mov
repnz
pusha
notl
adc
fs
cmp
sbb
xchg
cmp
jp
and
jmp
inc
pop
or
xor
inc
adc
test
leave
sbb
push
xchg
jmp
or
imul
sub
xchg
stc
xor
sbb
jmp
repz
dec
add
push
mov
and
jge
fdivrs
dec
mov
dec
test
cmp
or
pusha
jge
xor
out
and
js
or
test
sub
stos
push
in
fildl
lcallw
pop
sbb
lcall
jne
mov
out
xor
fcmovne
push
int3
lock
lahf
adc
paddw
xor
decb
mov
inc
mov
sub
push
stc
lods
jbe
jne
dec
inc
aad
mov
push
mov
xchg
cwtd
std
mov
jb
jecxz
jp
lea
add
mov
push
sub
mov
enter
inc
fcmovnb
cmp
push
cmpsb
push
mov
xchg
dec
lea
or
popf
cmp
add
adc
ss
pusha
sub
dec
lahf
jnp
and
mov
js
jmp
je
inc
inc
cmp
mov
adc
mov
cmc
idivl
mov
mov
adc
ss
daa
jbe
jne
add
iret
ficompl
pop
add
mov
sbb
mov
outsl
out
add
add
int3
push
cwtl
gs
xor
les
jg
testb
and
or
ds
aaa
fildl
mov
adc
imul
xor
faddl
out
inc
sub
and
cltd
xchg
mov
iret
cmp
push
xchg
or
jae
xlat
push
cmp
je
jb
lds
mov
hlt
xor
xchg
pop
gs
mov
pop
imul
pop
popa
add
inc
pusha
push
adc
inc
jmp
inc
dec
pop
mov
push
dec
cmp
and
mov
xlat
cmp
cmp
fwait
and
pop
or
push
jl
push
cld
jo
cwtl
mov
and
mov
clc
xchg
mov
mov
mov
add
xlat
outsb
out
inc
cmp
outsl
push
xor
lea
rclb
sbb
sahf
addr16
sbb
add
scas
je
or
cmc
daa
inc
stos
test
addr16
ds
sbb
pusha
lods
ds
sbb
insl
dec
mov
rolb
mov
hlt
jle
roll
pop
cmc
fbstp
inc
into
call
movsl
adc
imul
pop
hlt
mov
fdivrl
sub
mov
cmp
push
subl
dec
mov
cmp
fsubl
daa
iret
movsb
cmp
imull
pop
or
stos
fs
and
std
pop
push
mov
aaa
bound
pop
pop
pop
or
fisttps
hlt
cmp
fdivrl
rcll
pop
mov
arpl
test
call
jns
pop
mov
push
cmp
stos
arpl
mov
xchg
mov
cli
inc
int
rolb
fstpt
or
mov
in
dec
iret
xchg
dec
jecxz
in
arpl
cmc
daa
mov
fdivrl
test
sbb
push
add
dec
mov
ljmp
stc
or
jae
adc
xor
adc
mov
incl
andb
pop
clc
xchg
sarb
int
add
repnz
adc
jecxz
pop
mov
add
jg
jmp
xchg
sarb
out
pop
xor
jbe
daa
stc
pop
xor
fimuls
lock
mov
jne
sbb
adc
jle
mov
lock
lds
loop
add
inc
inc
sahf
inc
mov
cs
xor
popa
mov
imul
outsb
addb
jle
call
cmp
inc
lcall
lahf
dec
imul
cmp
nop
jns
imulb
adc
xchg
xchg
mov
ljmp
movsl
fbstp
in
lods
loopne
sub
stos
lods
push
inc
pushf
jecxz
sarb
xor
inc
sbb
cmpsl
inc
xor
jb
push
int3
xchg
lods
jo
xlat
sub
jo
imull
pop
ss
push
dec
xchg
inc
bound
fldl
xchg
sub
jbe
cli
sub
add
push
xchg
sub
adc
stos
arpl
lret
fsubs
or
insl
mov
movsb
std
pop
xor
jae
sbbl
daa
xor
xor
sbb
mov
jno
notl
xor
imul
call
cli
xchg
add
scas
cmp
addr16
pop
adcb
push
xchg
movsl
xchg
fisubrs
cmpsb
stos
mov
pop
repnz
sahf
iret
cmp
xor
and
mov
shlb
fwait
mov
dec
sbb
push
stos
xchg
xchg
sub
stc
mov
mov
cmc
and
imul
push
out
stc
imul
mov
fwait
xorl
pop
shll
popa
mov
fldt
leave
stc
cli
mov
sbbl
outsb
lahf
mov
sarl
loop
fdivl
add
xor
cli
xchg
cltd
push
gs
xchg
sbbl
or
into
cmp
pop
push
in
nop
dec
mov
or
mov
xchg
sub
repz
xchg
and
inc
sbb
sbb
jge
jecxz
imul
sbb
mov
repnz
aas
mov
loopne
out
int
xor
movsb
fucomp
test
mov
clc
xor
mov
sbb
shll
jbe
idiv
push
jg
mov
fiaddl
inc
sub
rcl
les
sbb
in
dec
cmp
insb
push
mov
mov
les
leave
cmc
fdivrs
or
mov
pop
push
es
jle
daa
scas
pop
lods
inc
iret
scas
inc
add
int3
arpl
stos
inc
cmp
enter
enter
out
push
cmpsb
cmp
mov
lahf
xchg
sub
out
cmp
repz
adc
movsl
cmp
xor
and
cmpsb
pop
cmp
push
mov
mov
push
aaa
xchg
aaa
mov
adc
roll
add
mov
stos
popf
lret
popf
cmp
es
xchg
mov
dec
popf
inc
into
sti
push
jg
or
inc
jg
push
adc
sbb
loop
xor
adc
pop
xchg
xchg
jae
adc
cmp
ja
xor
add
icebp
and
pop
mov
add
mov
bound
cmp
lods
rol
pop
sbb
xchg
mov
cltd
adc
xchg
xchg
imul
dec
dec
mov
mov
lret
cmpsb
and
loop
mov
sbb
test
inc
jl
mov
dec
lods
push
cli
push
add
mov
in
push
mov
aad
int
mov
mov
rorl
popf
cli
mov
mov
js
js
ficoml
mov
mov
imul
in
adc
jno
or
jbe
dec
subb
adc
subl
push
add
fistl
or
pop
inc
out
in
pushf
cmp
fdiv
pop
popa
jno
pop
cmp
bound
mov
les
iret
jle
dec
sub
ja
mov
cmp
or
mov
scas
imul
test
iret
push
pop
cmpsl
sub
movsb
mov
jmp
leave
lcall
bound
cmpsb
pusha
or
ss
or
cmp
mov
iret
fwait
test
das
adc
rolb
jmp
std
pop
icebp
cmp
outsl
stos
rcr
pop
roll
mov
pushf
jbe
idivb
lea
pavgw
inc
and
into
pop
xchg
pop
sbb
and
pop
popf
jbe
imulb
mov
pushf
or
div
mov
mov
jp
mov
js
ficoms
mov
cmp
loopne
mov
sub
pop
cli
mov
hlt
push
aas
mov
stos
test
push
out
popa
fcomps
sbb
xlat
cmp
push
add
adc
sub
jge
cmp
shrb
jp
and
mov
adc
sbbl
mov
pusha
sub
aaa
and
xor
in
inc
fdiv
or
sub
or
aam
xchg
test
xchg
cs
inc
xlat
cmp
sub
rcr
int3
popa
mov
push
insl
enter
jge
out
or
stc
adc
jne
lcall
cwtl
scas
fwait
xor
cmp
movsl
lods
ret
mov
sbb
aas
jmp
sbb
bound
cltd
push
les
mov
shlb
in
cmpsl
ficomps
fstl
imul
inc
out
imul
pusha
cmp
push
mov
test
adcl
test
dec
out
enter
push
call
mov
xor
or
test
push
in
test
test
add
pop
idiv
pop
test
mov
cmc
push
daa
mov
icebp
mov
outsb
loop
xchg
aas
aad
mov
aam
repz
sahf
cmp
nop
inc
push
arpl
mov
bound
cmp
jle
es
je
pop
or
popf
xor
xchg
xchg
sub
cwtl
orl
mov
cmp
rolb
xchg
dec
adc
jne
and
cld
arpl
pushf
faddl
rclb
sbb
adc
xchg
adc
pop
ds
push
sti
fs
addr16
jbe
fimuls
enter
jle
or
cmpsl
jo
outsl
ds
mov
xor
fnstsw
sub
jecxz
and
popa
sbb
sub
add
cmp
push
inc
jnp
sbb
xchg
arpl
fsubrl
xor
adc
jno
xlat
jl
mov
orb
dec
adc
pusha
sub
fldl
jmp
psubusw
or
aaa
dec
jno
adc
push
mov
jmp
and
mov
sub
adc
sbb
sub
ret
aad
adc
jo
pop
mov
pusha
add
adc
test
fiadds
add
lea
push
leave
cwtl
fidivl
pushf
xlat
int
pop
jae
mov
pop
mov
pusha
add
leave
push
jbe
mov
fldenv
fnstsw
or
repnz
rclb
repnz
jbe
mov
cmp
rol
mov
xor
jp
cmc
xchg
cmp
iret
and
dec
mov
pop
mov
mov
mov
lock
sub
mov
mov
sarl
or
and
jnp
lods
ss
jnp
pop
mov
and
mov
pop
xor
sarl
mov
sbb
jno
lret
addr16
or
fs
mov
je
adc
shll
std
mov
adc
xchg
pusha
xor
pushf
mov
lds
mov
mov
fstpt
cwtl
add
sbbb
xor
fadd
mov
out
pop
or
pushf
pop
adc
test
and
mov
cmp
in
xor
jle
pushf
rclb
repz
add
cmp
rcrb
jae
ret
mov
inc
adc
or
pop
mov
push
imul
fnstsw
or
xchg
xor
mov
jno
cmp
cmc
imul
out
cmp
leave
or
popf
adc
cltd
sbb
mov
sbb
xchg
pop
cmp
dec
adc
jl
xchg
lds
push
lock
ja
add
fisttps
repnz
xchg
or
adc
nop
inc
js
cmp
hlt
push
mov
ljmp
ret
test
jge
and
mov
jp
aaa
mov
mov
iret
mov
adc
mov
xor
shrl
mov
mov
lea
scas
mov
cmp
mov
popa
sub
sub
sub
ds
or
aaa
and
cmpsb
sub
int
mov
sub
test
test
and
or
sub
xchg
inc
and
dec
add
and
mov
roll
and
and
test
mov
int
mov
sub
test
mov
or
xor
inc
and
mov
aas
and
mov
shrl
or
fidivrs
cs
call
xorb
rcll
inc
repz
push
pushf
mov
mov
cmpsb
jno
mov
test
add
push
add
dec
fnstsw
adc
imul
and
not
add
push
jmp
mov
int
mov
xchg
pop
leave
mov
mov
clc
pop
test
call
mov
inc
ret
xchg
pushf
inc
adc
mov
mov
neg
add
pop
ljmp
mov
fcompl
movb
sarl
push
pop
add
mov
mov
push
std
outsb
out
add
les
ds
xor
inc
sbb
sbb
xchg
addr16
jp
push
std
lock
pop
sbb
mov
dec
mov
xchg
sub
mov
lds
cld
stos
iret
xchg
stc
out
or
ret
jmp
fldl
xchg
adc
adc
vmwrite
add
inc
or
fsub
orb
push
mov
scas
xor
stos
cmp
xor
sahf
xor
lea
ret
orb
push
mov
test
mov
jbe
pushf
mov
or
fiadds
mov
cmpsb
pop
ret
sub
loopne
sub
aas
lds
adc
orb
cmpsb
sub
xlat
gs
lods
pop
psrlq
shl
aas
inc
sahf
inc
shrb
sub
and
cmp
imul
in
push
cld
sbb
rorl
and
stos
mov
xorl
and
fisttpl
cwtl
lods
jl
xchg
int
cmp
pop
cwtl
pusha
jmp
mov
mov
jbe
push
movsl
outsl
icebp
mov
mov
adc
leave
mov
cmp
xchg
adcb
mov
mov
mov
shl
imul
mov
lea
add
or
cmpsb
sub
pusha
out
lods
imul
mov
sahf
inc
int
dec
push
push
sbb
push
jle
loope
int3
push
test
dec
cmc
fdivrl
cwtl
fwait
cmp
mov
xor
stos
lods
sub
dec
jmp
arpl
jp
jl
loopne
pop
jns
test
dec
or
mov
loop
and
cmpsl
mov
xlat
test
sarl
rclb
cmc
pushf
sbb
rol
cld
pop
test
mov
loope
std
xor
inc
jge
xlat
cltd
adcb
inc
adc
mov
popf
js
imul
cltd
in
jno
adc
in
insl
add
xor
cs
sub
shrl
sub
adcl
mov
dec
aam
mov
clc
pop
jns
roll
mov
in
xchg
and
fwait
mov
jg
enter
cmpsb
cli
pop
lock
push
add
in
enter
cmpsl
xor
adc
test
vpperm
xor
sub
push
into
mov
jg
adc
arpl
fnstenv
orps
repnz
ret
xor
aas
out
jo
adc
sbb
jl
insl
das
cmpsl
push
aas
test
lds
mov
inc
or
imul
mov
mov
jge
clc
push
push
mul
jnp
sahf
pusha
imull
mov
jno
push
pop
pcmpeqw
dec
mov
or
pop
clc
arpl
test
test
xchg
sub
or
push
pushf
das
pop
leave
fmul
pop
push
mov
int
fistpl
push
cmp
lcall
xor
jl
fisttpl
mov
sub
fldt
pop
mov
inc
adc
addr16
leave
pusha
mov
mov
mov
scas
addl
call
sarl
push
jl
adc
bound
or
dec
ja
push
pushf
ds
and
fadds
jne
push
sti
lds
sub
adc
mov
dec
dec
or
jmp
js
out
bound
xchg
sub
hlt
shlb
mov
inc
out
mov
jns
cmp
pop
add
and
sub
jg
jmp
sti
sbb
es
push
pop
push
pop
push
mov
sarb
inc
lds
cmc
sti
fcoms
fs
rol
lods
lods
push
arpl
stc
mov
nop
cmp
clc
dec
mov
mov
mov
ss
clc
xchg
dec
lock
aam
orb
cmp
lcall
pop
push
ret
loope
testl
pop
push
aad
sub
mov
imul
jb
insb
js
shlb
mov
rclb
rcrl
jmp
cld
inc
or
jo
xchg
inc
jl
lock
fldenv
enter
bound
mov
rorb
shrb
pop
pop
lcall
mov
mov
in
int3
mov
jecxz
pop
pop
push
incl
lret
popf
sbb
ja
addr16
sbb
rcr
call
clc
pop
clc
ss
aas
sub
dec
cltd
inc
cltd
fwait
mov
bound
test
pushf
inc
shl
sarl
add
lea
mov
mov
sub
aas
out
out
push
cld
daa
cmc
push
clc
sbb
fxch
dec
adc
xchg
push
mov
pop
les
jg
add
or
adc
and
cmpsb
sub
insb
jmp
pop
repz
aas
add
dec
es
sbb
or
push
dec
or
daa
mull
xor
pop
clc
cltd
push
ljmp
mov
pop
std
ret
push
push
add
push
push
jne
xchg
outsl
mov
sbb
pop
dec
ret
xchg
mov
cmpsl
fidivl
mov
pop
faddl
lea
mov
sbbb
leave
out
je
or
jmp
sti
mov
stc
mov
lods
fldenv
mov
push
fimuls
or
mov
xor
outsl
rclb
jbe
adc
cltd
cmp
mov
jle
es
adc
daa
push
shrb
fwait
pop
shl
xor
mov
push
jle
push
and
adcl
dec
fidivl
push
mov
cmp
mov
inc
jp
cwtl
inc
ret
insb
dec
push
push
adc
lahf
sbb
xchg
lods
ss
dec
inc
or
or
mov
mov
ljmp
insl
xchg
cmp
adc
ret
mov
mov
enter
mov
pop
fdivs
and
outsl
fucomip
and
sbb
cmp
lret
pop
test
or
loope
int3
lods
dec
js
scas
mov
popa
cld
mov
cwtl
push
loop
in
jns
ret
push
decb
shlb
outsl
xor
jle
aam
hlt
sbb
rcrl
and
pop
jae
sbb
xor
rolb
pop
mov
xorl
push
add
inc
fnstcw
in
sub
xchg
xor
clc
nop
cs
jg
sbb
clc
pusha
lret
lret
adc
or
int3
sub
mov
mov
mov
fdivrs
cli
adc
xchg
push
test
dec
iret
and
xchg
popa
fdivrl
int3
bswap
or
clc
pop
sbb
cli
fwait
inc
cld
pop
movl
nop
adc
outsb
mov
mov
push
add
out
test
repnz
mov
aad
jmp
push
jno
jno
mov
cmp
ds
mov
and
push
xor
pop
cltd
loop
pop
or
push
add
scas
aad
and
mov
dec
outsb
outsb
fnstenv
mov
push
int
das
mov
sbb
aas
movsb
jmp
pop
add
cli
mov
lock
cmp
js
push
sarb
scas
cmp
cmp
mov
mov
dec
adc
test
add
in
jno
push
or
ret
insl
dec
jno
mov
mov
cmp
push
xchg
mov
mov
cmpsl
loop
dec
push
icebp
stc
cmp
cmp
dec
cmp
scas
cwtl
jne
cmp
push
shll
mov
mov
repnz
lcall
clc
xor
push
sbb
mov
adc
add
lcall
out
cmp
fisubl
pop
add
dec
or
push
add
fnstcw
call
clc
fdivrs
adc
clc
rorb
call
xchg
sub
cmp
hlt
inc
sbb
mov
push
std
test
mov
xchg
cmp
ss
or
xchg
aaa
sub
test
aas
leave
xchg
and
mov
data16
mov
cmp
push
mov
cmpsb
xor
xor
cs
aas
les
lret
and
fwait
movsb
push
sbb
push
xlat
iret
data16
gs
imul
cmc
les
movsl
out
aam
mov
xor
xlat
scas
xor
inc
add
pop
stos
flds
xor
xchg
aaa
jmp
cld
test
dec
adc
ds
jle
outsl
outsl
and
shrw
nop
jno
mov
mov
inc
or
mov
mov
ret
lcall
lea
fstpt
add
xchg
xor
pop
inc
js,pn
popa
and
js
sbb
jae
pop
push
add
jecxz
sub
cmpsl
and
mov
push
jmp
mov
pop
add
out
push
xor
orl
es
mov
addr16
mov
inc
adc
adc
leave
push
loopne
xchg
clc
pop
daa
or
jge
mov
scas
cmp
sub
icebp
push
cltd
mov
push
xchg
leave
push
pop
lds
mov
cmp
shll
sub
xor
push
das
mov
adc
sahf
inc
jle
cmp
xchg
das
mov
hlt
push
dec
xor
and
stos
xor
add
lea
leave
pop
add
xor
mov
pop
add
filds
enter
div
sahf
fwait
inc
lret
sub
pop
xlat
ja
sub
pusha
in
mov
pop
lds
aad
pop
adc
mov
mov
rolb
es
lret
mov
xchg
inc
sub
sti
xchg
mov
lret
bound
rorb
iret
push
jl
adc
push
sbb
push
idivl
lret
icebp
inc
pop
sbb
or
dec
adc
sahf
inc
testl
aaa
cwtl
jle
mov
imul
lret
imul
lds
push
pop
push
sbb
push
imul
pusha
icebp
dec
dec
sbb
adcl
ljmp
cli
inc
fwait
cmp
in
shl
mov
xchg
push
pop
cli
or
pop
iret
push
push
mov
in
jbe
in
mov
jno
adc
shll
shlb
hlt
mov
shll
out
in
cmp
das
jo
lret
mov
sbb
mov
lds
push
gs
add
pop
mov
test
stc
pop
fnstsw
push
dec
add
cmp
and
jmp
data16
dec
cmp
jnp
mov
jmp
push
stos
sahf
inc
mov
mov
push
cld
cli
fcoml
pop
lock
aaa
inc
mov
mov
push
push
mov
pop
or
pop
stc
data16
mov
sub
scas
callw
pop
cli
pop
lcall
xor
xchg
inc
subl
ja
xchg
inc
pushl
call
icebp
nop
inc
out
dec
or
call
ja
lods
cmp
or
aam
movsl
lahf
xor
enter
lods
sbb
mov
pop
push
dec
bound
or
adc
test
inc
rorb
inc
mov
dec
loope
popf
cmp
mull
mov
cld
jmp
xor
add
sub
std
mov
adcl
xchg
cmpsb
sbb
fcoml
imul
lea
dec
xchg
cmp
mov
xchg
cwtl
inc
push
sti
cmc
push
sbb
push
mov
bound
ja
fbstp
dec
mov
cmpsl
fdivs
repz
jbe
call
icebp
lcall
out
rcrb
in
insb
movl
vpor
jl
call
lret
sub
lods
cld
pop
std
pop
mov
pop
pop
xchg
mov
pop
mov
sub
pop
fisttpl
fmull
ss
rol
add
xchg
add
enter
rolb
lcall
sbb
jmp
fisubrl
mov
mov
in
dec
push
repz
sub
pop
pop
ret
dec
pop
decl
pop
rorl
ljmp
cmc
and
outsb
stos
out
pushf
js,pt
ja
and
or
shl
lea
daa
xchg
cmp
xor
std
pop
mov
jns
fisubs
and
push
cli
jecxz
jno
mov
cmpsl
xchg
fildll
mov
mov
mov
push
xorl
mov
xor
mov
pop
dec
pushf
scas
sub
push
jb
sahf
mov
hlt
gs
stos
bswap
mov
lret
scas
jg
sbb
dec
push
rolb
leave
fmuls
inc
push
xchg
add
sbb
in
addr16
aad
incb
cmp
mov
pop
jno
xchg
cmp
popw
enter
dec
icebp
pop
adc
xchg
cmp
inc
cli
pusha
rorl
ret
lret
data16
pop
cli
push
ljmp
lock
push
ljmp
ss
ret
xchg
lret
jl
test
test
sbb
jae
and
fs
sub
or
sahf
in
sbbb
shlb
dec
in
adc
sub
pop
or
sahf
icebp
add
mov
and
jno
sarb
push
add
imul
cmp
sbb
xchg
inc
pop
je
inc
cld
dec
jge
in
lret
test
jae
and
push
push
and
fiadds
pop
rcll
lret
dec
repnz
pop
pop
std
push
or
mov
addl
xchg
xchg
pop
mov
pop
xchg
push
cs
orl
dec
mov
lds
aaa
popf
lret
into
xchg
jl
fcomps
mov
mov
inc
or
xor
inc
js
aas
movsb
and
sub
inc
xlat
jl
stos
inc
pop
jae
and
cmp
loopne
sub
dec
popa
push
clc
push
mov
cmp
loope
gs
and
aaa
mov
and
movsb
enter
lcall
addl
jnp
xchg
push
shl
loope
cmp
jbe
loop
fiadds
faddp
pop
push
xlat
or
mov
add
pop
mov
dec
adc
pop
jmp
stos
ss
ja
insb
frstor
jns
sbb
scas
lahf
inc
rcrl
fiaddl
aas
mov
mov
aad
pushf
mov
stos
adc
aam
popf
inc
pop
push
jmp
jl
add
xchg
ds
push
dec
adc
mov
sarb
jg
sub
mov
inc
or
mov
or
push
lret
clc
xchg
lods
fstl
mov
xchg
sar
pop
and
das
stos
dec
inc
lahf
cmp
adc
fadd
imul
mov
and
cmp
pop
dec
adc
cmp
sub
insb
inc
mov
in
ss
div
call
ljmp
xchg
cmp
jl
fstl
mov
and
iret
and
push
pusha
pop
enter
negb
insl
orl
pop
xor
pusha
pop
lods
arpl
xchg
inc
sub
enter
mov
adc
or
cld
inc
fldcw
out
xchg
sub
push
dec
adc
xor
jns
inc
push
lret
js
push
add
aad
js
gs
pop
sub
outsb
jb
pop
ret
push
add
cwtl
testb
sbb
jo
popf
in
jne
stos
sbb
lahf
std
mov
int
out
sbb
push
rcrb
jmp
cwtl
cmovbe
jbe
pop
insb
icebp
lret
push
push
sti
lret
and
push
mov
in
lock
push
dec
std
mov
sahf
orb
daa
cmpsl
pop
sarb
mov
pop
xor
mov
mov
aad
fiadds
out
push
std
popa
dec
inc
sub
notb
int
mov
lods
orl
daa
cmpsl
sbb
and
pop
xor
sbb
lea
dec
mov
insl
orl
addr16
push
jge
lret
dec
test
sbb
pop
push
or
pop
lods
out
outsb
push
test
jp
pop
mov
dec
loop
cmp
xchg
out
xchg
inc
or
rcll
repz
mov
cmc
lods
roll
mov
mov
pop
mov
pop
xchg
rolb
mov
movsb
mov
std
das
clc
mov
push
mov
jo,pn
insl
mulb
cmp
pushf
repnz
inc
or
loop
imul
stos
pop
xorb
inc
inc
notl
xchg
and
xchg
bound
mov
push
sbb
inc
jns
push
nop
cmpsl
xor
mov
mov
xor
fwait
popa
and
or
push
mov
and
fwait
ds
adc
lock
divb
add
xor
imul
addr16
mov
std
pushfw
fisttpll
shlb
xor
stos
lods
mov
cmp
std
inc
lea
in
mov
fcmovne
call
jno
and
lods
fs
inc
adc
rorl
sti
adc
pop
jp
push
stos
cwtl
inc
int3
cltd
inc
adc
inc
pop
scas
inc
popf
inc
and
test
mov
sub
test
mov
and
ret
scas
jp
notb
orb
and
pop
jo
inc
ficoml
sub
or
scas
cmp
pop
add
das
sub
sub
and
aam
sub
pop
jns
psrld
mov
sub
cmp
lret
mov
cmp
daa
mov
cwtl
inc
push
popa
je
jno
flds
fsubs
or
aaa
mov
out
and
pop
adc
ds
scas
das
dec
sub
enter
imul
aaa
movsl
stc
divl
and
sbb
or
xchg
mov
sti
cli
push
jnp
cmpsb
xor
jbe
in
push
repz
cld
sbbl
sbb
dec
cmp
sbb
xchg
out
dec
ss
aad
xchg
sub
or
jg
je
dec
cmpsb
popa
in
scas
mov
xchg
inc
mov
fadds
fidivl
lds
gs
xlat
jnp
ja
ficoms
fwait
mov
inc
sarb
fs
mov
mov
mov
xchg
cltd
dec
and
jno
sbb
sub
lods
jo
or
push
and
xchg
push
jne
stc
xchg
mov
xchg
repnz
popa
out
xor
hlt
orb
fisubrl
mov
in
push
das
aas
cwtl
jae
xchg
aas
xchg
outsb
outsb
call
sti
xchg
testl
cmp
rorb
roll
popf
xchg
inc
or
inc
iret
jge
pop
mov
xchg
jnp,pn
jns
in
pushf
aad
inc
jne
or
pop
mov
add
push
mov
fs
insb
mov
xchg
popf
inc
xchg
mov
in
adc
leave
cli
jb
cltd
sbb
movsl
sti
enter
in
stos
rclb
mov
lret
adc
mov
pop
notl
ds
mov
or
insb
mov
test
ja
mov
lods
add
aad
sub
fiadds
adc
inc
icebp
pop
push
jmp
jle
xor
loope
mov
push
ret
jg
jle
loopne
data16
movb
int
scas
jo
lea
push
dec
pop
sub
shlb
ret
xchg
adc
repz
orb
pop
fcmovb
xchg
lods
mov
lea
scas
pop
std
lea
scas
je
test
jo
add
mov
mov
rclb
sub
push
or
dec
sub
xor
jne
jecxz
movsb
mov
mov
adc
mov
popa
call
cmp
pusha
jmp
adc
mov
pop
push
std
pop
mov
mov
in
cli
or
ja
mov
mov
or
jnp
lahf
movsl
ss
or
imul
pop
int3
xchg
inc
leave
mov
shl
arpl
testl
and
mov
mov
mov
cmp
imul
enter
cld
cmp
cs
lret
xor
sbb
lcall
stc
push
div
pop
add
fwait
push
clc
arpl
pop
push
rcll
in
jo
dec
mov
jg
mov
jne
xchg
push
clc
xchg
out
cmpsl
sbb
icebp
lock
roll
sbb
dec
daa
mov
aaa
fidivs
popf
aaa
into
into
mov
and
mov
mov
pop
cmp
data16
dec
push
jbe
fdivrs
xchg
jb
das
sarl
pop
add
push
negl
rol
mov
fildll
iret
pop
sarb
sbb
leave
rcll
mulb
or
cld
pop
add
adcb
movsb
sar
insb
sti
sbb
shlb
fidivrl
imul
jle
repz
sbb
sub
pop
std
sbb
daa
mov
inc
out
mov
test
cmp
push
sub
outsb
add
in
mov
imul
sub
pop
add
mov
pop
push
out
mov
or
addr16
and
jae
mov
adc
aaa
in
loope
mov
fdivs
stos
xchg
jo
inc
es
pop
cld
adc
add
dec
repz
arpl
mov
subl
outsl
xor
gs
out
jb
jne
repnz
repnz
pusha
and
leave
xchg
jmp
or
in
push
sahf
cmp
xchg
and
sub
es
jge
xchg
or
fwait
aaa
adcl
sbb
push
int3
xchg
inc
mov
mov
xchg
aas
xor
jbe
es
daa
test
mov
loope
add
pusha
ds
int
adcl
and
dec
sbb
jno
xchg
inc
adc
cmpsl
mov
test
and
femms
in
push
xor
sbb
pop
sti
jl
add
inc
popa
sbb
adc
cmpsl
mov
mov
pushf
cmp
pop
xchg
dec
jmp
sub
jns
add
cmpsb
lret
in
sbb
int3
mov
push
pop
fimull
test
mov
mov
cmp
pushf
and
lret
lods
dec
push
in
sub
mov
push
add
mov
xchg
call
cmc
sub
arpl
push
add
jmp
and
add
movsb
sub
or
loopne
std
adcb
xchg
push
jmp
jp
jecxz
pop
stos
push
sub
lods
dec
cwtl
cmp
or
out
addr16
push
xor
iret
repnz
xlat
adc
aam
pop
cld
sub
pop
sbbl
popa
cmp
out
push
mov
sbb
faddl
push
test
push
testl
xor
or
xor
lcall
daa
lods
push
jnp
or
cmp
js
iret
xchg
shrb
and
mov
imul
insb
test
es
subb
pop
adc
push
and
fnstsw
lods
and
adc
mov
xor
jb
xlat
pusha
loope
push
in
lds
imull
into
xchg
lock
fcmovne
or
fildl
and
cmpsl
aaa
cmpsb
cmp
xchg
inc
and
adc
and
mul
cmp
icebp
pop
cs
cmp
or
pop
push
pop
sarl
xchg
ret
xor
stc
std
push
rolb
out
stos
adc
ss
push
gs
add
pop
clc
pop
dec
fwait
cmp
gs
sub
mov
cmpsl
sub
cmpsl
mov
sbb
sarb
pushf
ret
repnz
nop
inc
sbb
pop
scas
les
push
adc
inc
leave
stc
fstpt
mov
or
lods
cs
repnz
pop
ds
inc
test
fwait
aas
pop
mov
jns
jecxz
adc
lock
test
iret
xchg
gs
mov
jb
lret
xchg
adc
jg
les
or
pop
adcl
pop
pop
sti
push
jg
scas
mov
clc
mov
fbstp
push
xchg
dec
nopl
mov
filds
fistpll
or
mov
pop
idivl
add
and
add
xchg
inc
xchg
jno
pusha
imul
jo
test
adc
pusha
fdivrs
sub
cs
in
jns
fmuls
push
add
cs
insb
or
inc
shrl
ljmp
call
inc
psubsw
xchg
rorb
or
xchg
cmp
fs
lret
iret
shlb
cld
pusha
or
mov
sbb
scas
cmp
dec
loope
pushf
push
lahf
cmpsb
daa
test
jl
push
sbbb
mov
push
add
ss
add
movsb
fistpll
xchg
mull
sub
adcb
mov
jae
fiaddl
adc
ret
in
jle
iret
xchg
subl
xchg
or
mov
mov
daa
jle
outsl
lock
or
filds
xlat
jno
popa
lods
add
idivb
or
xlat
cmp
push
and
dec
jno
movsb
sahf
lahf
iret
xchg
js
push
mov
add
pop
loop
fidivs
xchg
loop
lds
int3
nop
cltd
cmp
shl
popa
loopne
inc
adc
pop
imull
and
adc
loope
sub
int3
mov
leave
mov
les
out
lret
cli
cs
addr16
cmpsl
orb
dec
pop
loopne
push
push
sti
cmp
mov
ja
shrl
cmpsl
cmp
test
and
aad
push
roll
inc
jmp
push
add
mov
inc
rol
adcb
add
lcall
js
jge
repnz
dec
or
aam
inc
xor
aam
loope
add
into
xchg
push
into
fwait
pop
in
test
scas
pop
mov
cwtl
int3
push
add
cmp
in
dec
push
pop
repnz
stc
jle
jne
push
jo
stc
cwtl
test
vxorpd
arpl
jae
lods
jle
jbe
popf
imul
rcl
jnp
pop
mov
aam
gs
pushf
pop
ret
rorb
or
ss
cmpsb
daa
ret
mov
push
add
scas
test
test
mov
stos
xor
in
and
test
add
ret
mov
and
push
inc
rorb
stos
int3
xchg
jne
pusha
call
xchg
sub
sbb
pop
jle
leave
xchg
shrl
sub
jns
pop
ret
lcall
or
sub
cmp
orb
rclb
inc
or
inc
orl
mov
xchg
xchg
cmp
sub
fisttpl
xchg
adc
add
loopne
push
sub
call
fcompl
jle
or
jmp
imul
pop
xor
fnstsw
aad
cmpsb
lahf
inc
pop
int
repz
loope
fwait
aas
js
std
les
sbb
daa
nop
lret
jl
loop
jle
cmp
sub
push
cmp
or
daa
push
push
fbstp
lret
xor
jecxz
addr16
cld
data16
or
or
shrb
aas
stos
inc
jno
mov
mov
les
jle
sbb
pop
dec
cmp
jl
mov
mov
out
faddl
or
cs
negb
inc
xlat
xchg
cmpb
mov
cmc
out
fwait
xor
es
xor
scas
mov
mov
add
outsl
xor
adc
push
push
testb
cmpsl
adc
fadd
push
out
stc
xor
sub
outsl
push
dec
dec
push
out
imul
inc
out
lock
and
lret
inc
stos
inc
jne
call
pop
enter
out
out
sbb
and
fwait
insl
pop
inc
fimull
popa
clc
fsubp
inc
xlat
adc
adcb
xor
arpl
xor
mov
mov
xor
cli
fidivl
sub
jg
insl
mov
push
lods
rcl
hlt
mov
repz
and
adc
jbe
xor
test
jo
leave
leave
dec
in
ljmp
dec
cmp
mov
mov
ret
hlt
jecxz
jg
push
enter
push
popf
addr16
mov
in
fiaddl
or
and
pop
popa
inc
fcoms
mov
mul
rcrl
cmp
push
push
pop
pushf
xor
lods
mov
cld
fsubrs
push
adc
lea
adc
ret
repz
leave
sub
push
out
push
outsb
add
in
out
mov
and
lret
bound
stos
inc
jae
jmp
pop
mov
sahf
out
out
sbb
es
imul
mov
stc
fstp
inc
xlat
ud0
cmc
bound
xor
mov
mov
xor
stc
fidivl
sub
jle
insl
scas
lahf
push
lods
rcl
hlt
mov
repnz
and
test
jne
xor
cmpsl
xchg
jo
enter
stc
jmp
insl
add
cmp
inc
outsb
outsb
mov
mov
shrl
adc
enter
push
popf
pushw
lcall
fwait
in
flds
or
and
pop
pusha
inc
fcoms
mov
mul
rcrb
aaa
and
xor
stos
mov
sti
fsubrs
sbb
testb
movsb
adc
aad
push
call
daa
adc
pop
inc
dec
push
out
mov
cltd
lcall
in
in
mov
pop
push
lret
bound
stos
inc
jb
jmp
pop
lds
jge
pop
es
push
inc
fisttpl
stos
stc
inc
xlat
push
incb
cmc
popa
push
sahf
xor
mov
mov
xor
clc
fidivl
sub
jge
insl
scas
sahf
push
lods
iret
iret
hlt
mov
icebp
xor
and
adc
je
xor
cmpsb
xchg
jo
mov
mov
dec
cmp
lahf
mov
popa
rol
inc
repnz
jg
adc
pop
inc
xor
popf
gs
cltd
xchg
mov
add
jmp
inc
or
pusha
negl
inc
fcoms
mov
mul
iret
pushf
xor
add
adc
push
push
pushf
xor
stos
mov
cli
std
fsubrs
sbb
lods
dec
push
testb
mov
push
call
adc
inc
inc
push
out
data16
lret
mov
mov
push
or
stos
inc
jno
jmp
pop
les
out
pop
push
es
imul
mov
fcmovnu
inc
xlat
or
das
pop
cmc
pusha
push
sahf
xor
mov
mov
xor
neg
jno
sub
jl
insl
lods
popf
push
lods
into
into
hlt
mov
lock
and
adc
jae
xor
movsl
xchg
jo
mov
in
out
and
dec
cmp
sahf
lret
mov
call
pop
inc
xor
popf
fs
cwtl
test
mov
add
ljmp
mov
pop
pop
inc
fmuls
mov
mul
into
pushf
xor
add
xor
push
pushf
xor
test
testb
sbb
lea
mov
push
call
and
inc
push
out
mov
lret
inc
ljmp
bound
ds
inc
jo
jmp
pop
ret
mov
sahf
jecxz
out
push
add
add
push
mov
mov
fcmovu
inc
xlat
or
adcb
cs
cmc
pop
dec
sahf
xor
mov
mov
xor
daa
mov
jnp
insl
lods
pushf
push
lods
int
hlt
mov
out
xor
pop
and
stos
push
inc
push
jmp
movsb
xchg
jo
lds
mul
mov
dec
cmp
popf
mov
popa
mov
fsubrp
jg
adc
pusha
inc
xor
popf
bound
jle
andl
mov
inc
flds
or
cmp
pusha
negl
inc
scas
pusha
mul
int3
pushf
xor
add
xor
mov
xor
jb
jo
cmpsl
mov
mov
cli
fnstenv
sbb
lods
dec
dec
testl
sarl
xor
and
jno
inc
inc
push
call
xchg
xchg
outsl
push
enter
call
or
arpl
stos
inc
outsb
pop
ljmp
mov
lahf
loope
out
adc
daa
mov
push
inc
faddl
cmpsl
arpl
fcomp
inc
fmuls
cli
sbbl
pop
dec
lahf
ss
jge
mov
mov
xor
hlt
and
stc
nop
jns
xlat
outsb
stos
lcall
std
in
xor
stos
push
ds
ljmp
jno
ret
out
jecxz
es
lods
inc
push
mov
bound
fsubr
orb
lret
das
pop
sahf
pusha
arpl
jg
andl
fiaddl
and
clc
push
pop
inc
fimull
popa
clc
fmulp
popf
xor
jg
xor
mov
xor
jno
jno
movsl
mov
idiv
fnstenv
sbb
scas
dec
dec
testl
iret
mov
xor
and
jb
inc
inc
push
call
xchg
xchg
outsl
push
mov
inc
out
lea
or
cmp
stos
inc
insb
pop
jmp
mov
or
adc
sub
fs
inc
fldl
cmpsb
fs
xlat
xlat
inc
fmuls
stc
sbbb
sub
pop
dec
mov
adc
lahf
mov
xor
repz
and
xchg
js
xlat
outsb
test
sbb
sti
jmp
int
sbb
push
jmp
outsl
xor
mov
rcll
loop
daa
adc
outsl
push
inc
xor
lea
mov
arpl
fucomi
orl
popa
call
mov
in
inc
fildl
pop
and
stc
push
pop
inc
fimull
stos
popa
clc
fmul
sahf
xor
das
sbb
popf
xor
jo
jb
mov
stc
nop
cmc
neg
jo
pop
sbb
jnp
ss
pushf
adc
jmp
out
xor
pop
push
jae
inc
inc
push
call
xchg
xchg
outsl
push
les
and
or
cmp
stos
inc
push
in
orl
or
adc
sub
xor
add
fiadds
gs
aad
fadds
clc
sbbl
sub
pop
dec
mov
adc
sahf
mov
xor
icebp
fnsave
mov
xchg
jbe
fsubrs
xchg
sbb
stc
jmp
adc
in
insb
insl
xor
sahf
lea
mov
loopne
sub
adc
inc
xor
and
mov
fldpi
orb
lret
bound
sub
mov
xchg
jle
mov
jecxz
inc
faddl
add
arpl
push
push
inc
fisttpl
test
lahf
ss
sti
adcb
sbb
xor
mov
sar
repz
fidivl
adc
clc
jns
aaa
into
cwtl
lcall
ljmp
or
ds
jmp
xchg
nop
jo
ret
inc
in
mov
cmp
lods
inc
push
mov
popa
mov
fsubr
jg
ljmp
shlb
push
popf
popa
push
inc
fiadds
mov
inc
flds
daa
pusha
negl
mov
adc
into
int3
pushf
xor
out
fnsave
mov
xchg
je
fnstenv
xchg
sbb
clc
out
into
sbb
push
lods
dec
cmp
push
xor
popf
mov
mov
ficoms
or
scas
inc
arpl
xchg
test
fs
lods
inc
jmp
or
arpl
pop
ljmp
mov
lahf
loop
inc
fdivr
add
mov
push
push
inc
faddl
cmpsl
arpl
fadd
mov
sbb
sbb
ss
fnsave
mov
xchg
icebp
repnz
adc
mov
inc
stc
nop
ja
cmp
xchg
cwtl
pop
scas
leave
mov
in
call
or
cmp
push
ljmp
jno
shlb
adc
addr16
inc
push
out
test
stos
or
fcmovnu
jmp
shrl
pop
sahf
pop
dec
dec
filds
mov
inc
fiaddl
hlt
test
es
mov
push
test
lret
cld
in
fidivs
push
mov
xchg
jb
fidivl
xchg
sbb
mul
cmp
push
sbb
scas
dec
aaa
push
in
push
mov
mov
xchg
sub
or
mov
popa
bound
gs
scas
inc
out
in
addl
int
cmp
or
mov
mov
loopne
inc
add
mov
dec
push
inc
fldl
fs
ret
mov
sbb
pop
rclb
mov
jne
popf
mov
xchg
out
lock
adc
mov
inc
cli
xchg
jne
cmp
xchg
xchg
sbb
out
ss
or
cmp
push
jmp
pop
xchg
sub
scas
mov
loopne
nop
daa
adc
shrl
xor
xchg
test
movsb
ljmp
sub
lahf
pop
dec
dec
loopne
jle
mov
rcl
inc
fildl
repnz
and
push
inc
mov
pop
cmpsl
cwtl
rcrl
sahf
xor
sbb
ds
xchg
jo
xchg
sbb
hlt
jecxz
rclb
sbb
pushw
cltd
xchg
mov
ficoml
or
sub
xchg
sub
mov
inc
in
in
test
or
mov
shrb
inc
fdivrp
ljmp
mov
dec
push
inc
fldl
mov
mov
sbb
push
rcrl
mov
jbe
fwait
mov
xchg
out
out
fdivl
adc
inc
inc
cli
xchg
jae
cmp
xchg
xchg
sbb
in
ss
pop
ja
cmp
push
jmp
pop
xchg
sub
mov
mov
fstl
imul
push
lock
cmpsl
push
movsl
fcom
ljmp
sub
lahf
pop
dec
dec
loope
jl
mov
iret
into
inc
lock
push
inc
movsb
cmp
sbbl
enter
clc
jmp
mov
xchg
outsb
insl
fdivl
sbb
rol
xchg
repnz
rcll
adc
mov
xor
fs
into
xchg
test
mov
push
in
jmp
or
sub
sub
mov
inc
jecxz
out
test
add
or
push
pop
in
test
stos
or
stc
std
sub
sbb
dec
dec
inc
fiadds
mov
mov
sbb
inc
mov
ja
cltd
mov
xchg
in
in
fnsave
sbb
xchg
jno
cmp
xchg
xchg
sbb
jecxz
aaa
into
adc
ss
in
addr16
xchg
sub
mov
fistl
imul
push
lock
push
movsl
aad
addb
sub
sub
or
jnp
daa
mov
int
inc
fdivr
out
xchg
push
inc
movsb
cmp
sbbb
xchg
ret
lds
ja
sbb
xchg
insb
insb
fnsave
sbb
mov
fistpll
rcll
adc
mov
xor
bound
iret
xchg
xorl
mov
in
call
or
cmp
mov
pop
pop
xchg
sub
mov
dec
loop
out
test
add
and
mov
mov
movsl
stos
or
fcmovnb
dec
fcomip
cld
sub
sub
dec
dec
fistpll
test
mov
test
and
ret
inc
mov
ja
cwtl
rclb
xchg
ljmp
mov
ds
xchg
jo
cmp
xchg
sbb
loope
cmp
adc
js
xor
push
xchg
sub
mov
ficoml
imul
push
lock
mov
in
addl
sub
daa
sub
mov
jns
sub
lret
int3
inc
in
xchg
push
aas
movsb
cmp
sbbl
xchg
ret
les
ja
sbb
push
dec
cmp
xchg
push
fidivs
mov
mov
fnstsw
rorl
adc
mov
das
pop
out
pusha
fs
xchg
xorl
out
xchg
sub
or
cmp
mov
pop
pop
xchg
sub
scas
mov
loope
out
test
add
push
push
push
out
xchg
test
movsb
fld
dec
loopne
cli
sub
sub
push
loopne
imul
cmp
lock
adc
pop
inc
inc
mov
js
xchg
rcrl
call
sbb
push
mov
cmp
xchg
outsb
pop
cmp
lea
pop
icebp
cmp
adc
jns
xor
push
out
fs
xchg
xchg
mov
xchg
sub
sti
shrl
sub
dec
pop
dec
icebp
mov
mov
in
test
sub
mov
ja
sub
test
lret
sti
jmp
push
sbb
movsl
cmp
outsl
test
mov
ret
hlt
in
js
push
rcrl
call
fwait
mov
xchg
out
fdivrl
rorb
cs
lock
bound
rcll
mov
out
in
xchg
sub
pop
ja
cmp
mov
pop
pop
xchg
sub
jns
push
out
xchg
add
imul
push
lock
cmpsb
push
movsl
xlat
ret
dec
loope
clc
sub
sub
imul
jnp
xchg
fwait
pushf
push
cmp
out
xchg
inc
inc
movsb
cmp
loop
xchg
xchg
ret
mov
xchg
out
loopne
sbb
pop
mov
cmp
xchg
insb
pop
cmp
mov
lods
pop
repnz
cmp
adc
jp
xor
pop
out
bound
das
test
mov
fcom
xchg
sub
cli
aam
sub
mov
pop
dec
repnz
shlb
mov
out
test
repz
or
push
inc
dec
jecxz
jbe
shll
dec
ljmp
dec
cmp
test
nop
les
shlb
adc
add
cltd
mov
mov
mov
cmp
or
sbb
icebp
pop
pusha
cmp
xchg
jle
cmpxchg
xchg
sub
aaa
and
dec
push
pop
xchg
sub
test
lret
cld
shrb
push
xsha1
cmpsb
dec
push
lock
movsb
push
movsl
aad
dec
loop
imulb
daa
adc
dec
loope
push
push
cmp
push
pextrw
pop
inc
aas
movsb
cmp
jecxz
xchg
xchg
ret
mov
cwtl
out
loopne
pop
or
mov
cmp
xchg
push
ds
mov
mov
fnstsw
rorl
jp
xor
pop
out
popa
push
cwtl
das
test
mov
xlat
aad
sub
stc
aam
sub
mov
pop
dec
repnz
shlb
lahf
adc
add
lds
and
push
inc
dec
jecxz
jne
shll
dec
jmp
decb
cmpsb
cmp
sahf
pop
pop
sarl
jns
adc
pop
inc
xor
loopne
cwtl
xchg
mov
mov
cmp
or
pop
icebp
pop
pop
cmp
nop
jge
imul
xchg
sub
and
mov
imul
std
shrb
sbb
lock
mov
dec
loop
cmc
sub
es
add
dec
loope
mov
cltd
cltd
push
cmp
sbb
movsb
cmp
jecxz
xchg
xchg
ret
mov
cwtl
in
loopne
push
pop
and
imul
mov
stos
pop
repz
cmp
or
das
pop
out
pusha
push
cwtl
das
addl
dec
aam
sub
clc
aam
sub
mov
pop
dec
repnz
shlb
sahf
adc
add
lds
and
push
inc
dec
jecxz
je
shll
dec
fcomip
call
decb
cmpsb
cmp
popf
mov
add
dec
push
add
dec
xchg
adc
mov
mov
push
mov
xor
imul
fbstp
pop
xor
dec
mov
pop
shld
lahf
icebp
inc
aad
mov
mov
xchg
and
dec
cld
fwait
sub
inc
das
bound
xlat
fs
pop
leave
jae
dec
jnp
pop
test
add
sub
pop
les
sti
jne
pop
jg
dec
mov
pop
sbb
call
push
push
cmp
in
scas
xchg
jge
push
mov
pop
fldl
mov
sbb
outsl
mov
jl
sahf
outsb
imul
or
and
cmp
shrb
lret
shl
sbb
xor
int3
lock
mov
leave
mov
lcall
push
and
rcrb
ret
in
sbb
mov
shl
xorb
notb
and
and
lods
xor
add
fistl
test
addb
mov
fmull
cmp
movsb
sbb
xchg
mov
stc
in
lock
out
adc
clc
jl
pop
xchg
out
cmp
or
mov
gs
popa
das
and
loope
popa
mov
mov
inc
outsl
adcb
lods
test
push
fidivrl
mov
leave
lret
fldenv
cmp
es
xor
jge
sbb
push
mov
push
and
in
aad
repz
mov
adc
xchg
mov
lret
ret
sub
xor
testl
imul
repnz
sbb
xchg
xchg
pop
outsb
sbb
cmp
movsl
inc
loope
cmpsb
cli
cs
cmc
daa
cmp
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
adc
in
xlat
fbstp
push
stc
insl
xor
aam
sub
iret
jb
lret
mov
pop
cmp
sbb
call
xchg
outsl
jnp
sub
shrl
mov
mov
out
adc
adc
popf
in
into
out
sbb
ret
stos
fsubl
shlb
jnp
pop
fiaddl
and
inc
sahf
lret
pop
sbb
dec
cmp
mov
inc
inc
sub
push
add
xor
xor
and
dec
mov
in
shll
dec
adc
pop
sbb
jmp
insb
push
or
ds
inc
or
cmp
int3
inc
inc
jo
sub
xchg
imul
addr16
jae
pop
inc
out
sti
mov
xchg
clc
jns
loope
mov
pop
stc
test
xchg
mov
mov
ja
push
enter
aaa
jle
pop
leave
enter
sub
cmp
and
sub
sub
into
xor
dec
fistpl
xor
aad
mov
inc
push
pop
stos
jg
add
test
std
pop
mov
cld
nop
push
fldt
leave
push
outsl
out
mov
shlb
cmp
mov
jl
ljmp
and
pop
sub
pop
pop
pushw
cmp
leave
jmp
daa
es
push
repz
nopl
ljmp
jae
mov
push
jb
pop
mull
out
in
lret
mov
mov
xchg
pop
sti
lret
cli
add
in
and
sti
add
and
sbb
pop
mov
lcall
dec
hlt
stos
push
xchg
mov
dec
hlt
dec
mov
inc
cmp
jbe
pop
test
sbbl
pop
adc
insl
clc
xor
mov
jmp
into
jecxz
es
xor
sahf
xchg
cmp
ljmp
adc
jns
adc
popf
mov
xchg
cli
pop
js
add
mov
add
imul
xchg
or
push
cmc
jae
lods
outsl
ret
loopne,pt
cld
jnp
and
das
and
imul
inc
push
in
dec
mov
xor
push
pop
mov
aaa
in
dec
mov
outsl
cmp
ret
iret
icebp
xor
jno
movsb
cmp
mov
xor
mov
jmp
mov
fcoms
push
repz
xor
repz
mov
sub
cmp
mov
xchg
outsb
jo
rclb
mov
and
out
aaa
sbb
out
push
add
sub
scas
shll
sti
das
dec
rolb
jae
push
cmp
stos
decl
mov
dec
loop
jp
std
int3
test
mov
lods
repz
shl
or
xchg
xchg
mov
jae
or
jae
in
std
sbb
jne
addr16
call
daa
in
das
mov
jbe
jecxz
push
fistpll
lds
cmp
imul
or
cld
mov
mov
sub
fsts
push
mov
out
cli
mov
add
mov
rcrb
pop
mov
popa
dec
je
pusha
rcl
mov
aas
lahf
dec
mov
dec
mov
jne
mov
dec
mov
shlb
xor
icebp
adc
out
cmp
xchg
fistpll
and
iret
cmpsl
sarb
pop
test
xchg
cmp
rol
sub
divl
pop
mov
dec
lock
movsb
cltd
sub
aaa
sub
inc
sbb
pop
xor
jae
call
aas
sub
rcrb
sbb
inc
lahf
in
cmp
xchg
xchg
mov
sbb
cld
js
ja
pushf
movsl
outsb
mov
sbb
xchg
in
inc
inc
cmpsl
mov
push
xchg
xor
inc
mov
or
daa
mov
shr
jo
arpl
imul
mul
and
stmxcsr
pop
cltd
icebp
pop
sbb
push
sbb
add
jecxz
add
cli
bound
pop
mov
js
icebp
push
lcall
dec
stc
inc
arpl
out
jae
sbb
inc
sar
jns
sbb
ds
dec
push
pop
mov
pop
cmp
pop
push
add
std
shll
out
add
add
rcll
test
out
mov
mov
pop
mov
mov
sbb
int
mov
fidivrl
test
sub
pop
test
xor
pop
pop
push
push
out
cld
mov
pop
dec
add
mov
repnz
repnz
mov
cmp
outsb
out
addr16
loope
push
int3
mov
js
jae
out
insl
jmp
push
mov
icebp
repz
mov
fucom
ret
scas
mov
ret
push
lcall
iret
ljmp
dec
push
sbb
jae
ds
push
sbb
stos
andl
add
fdivrl
add
mov
out
lds
cld
add
scas
repnz
dec
aam
repz
fistpl
jge
and
test
jmp
in
adc
in
cld
ret
cmovg
mov
add
mov
insl
repz
xchg
pmuludq
clc
inc
call
loope
out
mov
test
loope
pusha
fwait
cmp
xchg
int3
sub
out
mov
xor
sub
sbb
inc
fists
outsl
nop
push
mov
pop
lock
mov
mov
push
mov
aaa
mov
cmp
aaa
adc
lcall
iret
xor
test
int3
mov
stos
cmp
push
cld
jne
adc
out
push
sbb
pop
cmc
jns
cmp
divl
movl
int3
adc
movsb
jg
out
mov
loop
jb
imul
add
test
fcompl
and
stc
fcomps
mov
outsb
xor
std
out
int3
lock
leave
into
mov
out
rclb
shr
insb
and
xchg
outsb
and
xchg
jo
scas
mov
jb
scas
sahf
arpl
lea
jg
sahf
test
aaa
inc
pop
lods
cmp
mov
insb
sti
cmpsl
jo
or
mov
int
dec
aad
pop
sahf
jbe
jl
or
jmp
cmp
xor
xchg
add
