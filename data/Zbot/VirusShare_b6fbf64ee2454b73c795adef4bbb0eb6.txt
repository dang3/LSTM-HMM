ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
push
xor
push
xor
push
xor
push
ret
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
call
lea
push
push
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
mov
call
movl
push
push
push
mov
push
call
push
push
push
mov
push
call
mov
push
call
add
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
jmp
push
lea
push
push
call
cmp
ja
mov
jmp
mov
jmp
outsb
jo
add
aaa
push
xor
push
xor
push
xor
push
xor
adc
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
movl
movl
movl
movl
movl
mov
call
push
push
mov
call
mov
mov
push
push
movl
movl
movl
call
lea
mov
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
call
push
mov
call
sub
push
cltd
push
sub
push
push
sar
push
push
push
lea
cltd
sub
sar
push
push
push
push
push
call
mov
test
jne
pop
pop
pop
ret
mov
mov
push
push
call
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
call
mov
cmp
ja
je
mov
sub
je
sub
jne
mov
lea
push
push
call
mov
lea
push
push
call
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
add
lea
push
push
call
xor
pop
pop
add
ret
push
call
xor
pop
pop
add
ret
mov
pop
pop
add
ret
cmp
je
cmp
je
mov
mov
push
mov
push
push
push
call
pop
pop
add
ret
mov
mov
shr
movswl
movswl
push
push
call
mov
push
jmp
mov
mov
and
cmp
jg
je
sub
je
dec
jne
mov
push
call
xor
pop
pop
add
ret
mov
mov
push
push
push
push
push
call
xor
pop
pop
add
ret
mov
push
push
call
add
xor
pop
pop
add
ret
cmp
je
mov
push
push
mov
push
push
call
pop
pop
add
ret
mov
push
push
call
push
call
add
xor
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
je
dec
jne
mov
cmp
je
cmp
je
xor
ret
and
push
mov
push
call
mov
ret
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
sub
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
sub
pop
sub
push
sub
dec
sub
inc
sub
cmp
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
sub
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
inc
add
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
les
inc
add
sub
aam
inc
add
sub
in
inc
add
sub
hlt
sub
pop
sub
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
sub
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
cmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
cmp
pusha
cmp
insb
cmp
cmpb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
cmp
sbb
add
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
cmp
add
inc
add
inc
add
inc
add
cmp
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
cmp
add
cmp
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
addb
push
dec
add
inc
dec
add
ss
add
and
add
dec
add
decb
add
dec
add
loopne
add
aam
add
enter
mov
dec
add
cmpsb
dec
add
lcall
add
dec
add
fs
add
push
dec
add
inc
dec
add
xor
add
sbb
add
inc
add
xor
add
inc
inc
add
pop
inc
add
inc
add
je
add
mov
add
add
rolb
add
inc
add
add
add
add
add
add
or
add
inc
add
out
inc
add
faddl
add
inc
add
mov
inc
add
xchg
inc
add
addb
je
add
fs
add
pop
inc
add
dec
inc
add
ss
add
sub
add
add
push
inc
add
out
inc
add
fiaddl
add
inc
add
mov
add
movsb
inc
add
add
add
jmp
push
inc
add
push
inc
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
decl
inc
add
inc
add
incl
cmp
push
cmp
incl
cmp
nop
inc
add
xchg
inc
add
add
add
add
add
add
adc
add
xchg
inc
add
addb
push
dec
add
inc
dec
add
ss
add
and
add
dec
add
decb
add
dec
add
loopne
add
aam
add
enter
mov
dec
add
cmpsb
dec
add
lcall
add
dec
add
fs
add
push
dec
add
inc
dec
add
xor
add
sbb
add
inc
add
xor
add
inc
inc
add
pop
inc
add
inc
add
je
add
mov
add
add
rolb
add
inc
add
add
add
add
add
add
or
add
inc
add
out
inc
add
faddl
add
inc
add
mov
inc
add
xchg
inc
add
addb
je
add
fs
add
pop
inc
add
dec
inc
add
ss
add
sub
add
add
push
inc
add
out
inc
add
fiaddl
add
inc
add
mov
add
movsb
inc
add
add
add
and
inc
gs
outsl
fs
gs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jp
dec
outsb
jbe
insb
imul
je
add
add
je
insb
imul
je
xchg
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
jg
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
je
gs
popa
addr16
add
fs
arpl
insb
gs
je
jb
inc
add
fs
je
imul
push
imul
popa
jae
inc
js
add
lcall
jne
jae
jb
add
fs
arpl
inc
add
popa
je
push
imul
push
push
push
outsb
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
inc
gs
jns
je
insl
dec
gs
imul
inc
imul
js
popa
jb
insl
inc
add
je
outsl
jns
imul
add
push
imul
outsl
arpl
add
add
jae
push
jne
je
gs
popa
add
outsb
fs
popa
imul
inc
imul
add
mov
inc
imul
push
inc
push
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
sahf
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
lods
add
push
gs
js
gs
imul
gs
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
insl
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
popf
add
popa
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
je
popa
insb
inc
jb
add
jo
jb
add
das
add
insb
push
outsb
ja
outsb
fs
add
imul
mov
inc
push
dec
outsb
outsw
add
inc
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
cltd
add
popa
jo
insb
insb
outsl
arpl
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
jo
gs
insb
insb
outsl
arpl
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
in
dec
jne
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
out
es
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
add
add
pusha
inc
inc
add
add
add
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
add
inc
add
add
inc
inc
inc
add
add
xor
add
add
and
add
add
adc
add
add
add
inc
add
add
add
inc
inc
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
nop
add
addb
add
rolb
orb
add
fadds
add
clc
add
addb
add
add
add
add
add
add
or
add
add
adc
add
xor
add
dec
add
addb
add
add
js
add
nop
add
addb
add
test
add
rolb
addb
add
add
add
add
add
add
add
insl
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
insl
add
add
add
addb
add
add
add
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
adc
add
push
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
or
add
add
add
add
add
add
add
add
dec
add
add
add
sub
add
in
add
add
add
andb
xor
add
add
add
add
add
or
add
add
add
add
add
add
enter
in
add
add
add
sbb
add
in
add
add
add
subb
add
add
add
add
add
roll
add
add
add
add
add
loope
add
add
add
add
add
add
push
add
add
add
add
out
add
jo
add
in
add
add
add
xor
add
out
add
add
add
add
add
add
icebp
add
adc
add
in
add
add
add
xor
add
jbe
add
in
add
add
add
test
add
adc
add
in
add
add
add
mov
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
and
add
add
es
add
add
bound
add
es
and
inc
bound
inc
bound
sub
test
and
cmp
add
sbb
add
and
add
or
add
mov
and
sub
and
add
add
add
mov
add
add
and
add
cld
pop
add
lock
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
cld
pop
add
incl
add
add
add
add
addb
add
add
add
add
add
xor
add
add
incl
incl
adc
decl
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
enter
add
add
jmp
iret
jmp
iret
jmp
iret
jmp
iret
jmp
iret
jmp
iret
jmp
iret
jmp
iret
jmp
iret
jmp
iret
lcall
int
cmp
cmp
cmp
cmp
cmp
cmp
pushl
sar
sbb
fcos
pop
fcos
pop
fcos
pop
fcos
pop
fcos
pop
fcos
pop
fcos
push
fcos
dec
xlat
incl
add
mov
adc
adc
cli
add
add
pushl
pushl
je
pushl
je
pushl
ljmp
incl
add
push
mov
adc
adc
ud1
add
add
decl
decl
incl
add
add
ret
decb
sar
sar
sar
sar
sar
sar
sar
sar
sar
add
mov
jmp
incl
add
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
add
iret
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
aas
aam
pop
push
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
add
call
call
xchg
jecxz
mov
incl
add
add
lods
cli
sbb
add
adc
mov
adc
cli
adc
cli
adc
add
add
mov
adc
adc
adc
adc
ud1
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
add
push
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
bswap
call
int
sbb
lcall
lcall
lcall
lcall
lcall
decl
int3
incl
add
add
sar
cmp
incl
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
ss
pop
scas
cli
pop
lods
cli
pop
lods
cli
pop
scas
cli
add
jmp
push
ljmp
insb
insb
addr16
add
add
sti
adc
sti
adc
sti
adc
sti
adc
sti
adc
sti
add
add
call
add
mov
adc
adc
adc
add
mov
std
push
mov
push
mov
push
mov
push
mov
or
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
std
or
incb
add
pop
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
enter
add
push
leave
decl
lret
lret
decl
decl
decl
decl
decl
decl
decl
decl
decl
incl
add
add
jmp
jmp
sar
es
es
es
es
es
es
es
and
lcall
incl
add
aaa
sar
aas
aam
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
aas
aam
aaa
sar
add
add
lods
cli
pop
lods
cli
push
fdivr
pop
fcos
pop
pop
pop
pop
pop
fcos
push
fdivr
add
add
scas
cli
push
scas
cli
push
scas
cli
push
mov
outsb
jbe
js
js
pushl
ljmp
incl
add
adc
sti
adc
sti
adc
sti
adc
sti
adc
sti
adc
sti
mov
call
decl
sti
adc
adc
adc
adc
mov
call
mov
adc
adc
adc
adc
adc
add
add
mov
adc
adc
adc
adc
adc
btc
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
or
std
or
std
or
std
or
std
or
std
add
add
std
or
or
or
or
or
or
or
decb
sar
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
or
decb
decb
decb
decb
decb
decb
decb
decb
decb
decb
decb
add
or
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
incb
enter
add
enter
incl
incl
incl
incl
incl
or
decl
decl
decl
decl
decl
decl
lret
incl
add
lcall
int
sbb
lcall
int
sbb
lcall
int
sbb
lcall
int
sbb
lcall
into
incl
add
iret
jmp
jmp
jmp
jmp
jmp
ljmp
sar
add
cs
xor
pushl
sar
xor
pushl
sar
xor
pushl
sar
xor
pushl
sar
xor
pushl
sar
add
cmp
cmp
aas
aam
aas
aam
aas
aam
aas
aam
aas
aam
aas
aam
inc
aad
dec
decl
decl
decl
decl
decl
decl
decl
decl
incl
add
add
call
call
call
call
call
call
lcall
lcall
incl
add
add
jmp
fs
fs
fs
fs
fs
gs
add
add
pushl
pushl
pushl
pushl
pushl
pushl
pushl
incl
add
jp
jl
jge
jge
jge
jge
jge
incl
add
decl
decl
decl
add
add
call
call
add
mov
jmp
incl
add
incb
jg
cld
add
clc
add
clc
add
push
add
incl
incb
pop
clc
add
jmp
add
inc
add
jmp
add
push
add
cld
add
dec
cld
add
push
add
jmp
add
inc
add
jmp
add
clc
add
incb
pop
inc
add
push
add
clc
add
clc
add
clc
add
cld
add
incb
dec
incl
xchg
incl
inc
add
jmp
add
clc
add
clc
add
cld
add
incb
pop
incl
ud0
incl
inc
add
jmp
add
push
add
clc
add
cld
add
incb
aas
incl
aas
inc
pop
jmp
ud0
push
ud0
clc
pop
cld
add
incb
incl
inc
ljmp
add
add
add
add
add
add
or
add
add
addb
add
add
add
add
add
add
push
and
add
and
add
pop
sub
add
lldt
xor
add
cmp
add
sbb
sbb
push
dec
add
pop
inc
sbb
push
pop
adc
and
add
add
and
add
or
sub
sbb
and
and
add
sub
jae,pn
add
jo
add
jbe
add
jnp
add
popa
adc
sub
add
jp
add
jnp
add
dec
sub
xor
daa
add
inc
sub
add
dec
add
jns
add
cmp
add
inc
add
dec
add
pop
add
pop
add
push
sub
and
sub
sub
add
mov
add
xchg
cmp
xor
subl
pop
mov
add
xchg
inc
add
pushf
dec
add
xchg
inc
add
mov
and
push
add
test
insl
add
scas
insb
add
scas
bound
xor
outsb
add
mov
add
mov
jae
cmp
jl
dec
cltd
dec
add
dec
add
push
add
push
add
pop
add
pop
add
bound
jg
ja
inc
test
imul
pop
scas
jo
inc
mov
jns
push
mov
add
jae
pop
mov
add
outsb
add
imul
lods
jb
insl
mov
jnp
jno
jge
subl
add
fs
add
insl
incl
add
add
jl
add
jg
add
subb
dec
mov
addl
jns
mov
pop
movsl
stos
add
mov
sbb
movb
es
leave
mov
cmp
mov
and
xchg
add
xchg
add
xchg
add
int
add
rcrl
add
aad
add
xlat
stos
add
test
add
xlat
test
add
mov
inc
lret
dec
lds
add
cwtl
add
lea
inc
movsl
add
mov
add
movsl
add
mov
data16
add
mov
add
test
add
mov
add
xchg
incl
add
add
lcall
and
incb
dec
scas
testl
inc
mov
add
incl
jno
incb
loopw
add
movl
jbe
lret
out
add
std
add
incb
jg
incl
jbe
incb
lea
test
xchg
mov
add
test
cwtl
add
scas
lahf
add
stos
stos
add
mov
lcall
iret
lods
add
int
add
fdivrs
add
ret
roll
rol
add
call
into
add
aam
mov
icebp
fiadds
xchg
aam
add
hlt
in
lods
in
add
les
leave
movb
int
add
faddp
add
fmul
add
rcl
add
add
fcmovu
add
out
add
in
loopne
lret
add
clc
out
add
cli
repz
jecxz
add
in
add
in
in
add
hlt
in
add
repnz
add
cld
clc
add
std
sti
add
incl
add
adc
add
add
adc
adc
add
add
sbb
cmp
adc
add
adc
mov
scas
push
adc
add
add
ret
xlat
xlat
rcl
ret
mov
adc
add
add
add
adc
mov
sub
push
popa
mov
dec
adc
add
add
add
adc
mov
add
add
add
sub
adc
add
add
adc
mov
add
and
and
mov
adc
add
adc
push
or
push
daa
mov
mov
mov
sub
mov
adc
adc
pusha
adc
pop
insl
into
into
rcl
aad
fcmovne
lods
and
add
adc
add
das
or
gs
aad
aad
fstp
lods
and
and
adc
adc
sbb
push
push
data16
rcl
aad
fst
lods
add
jo
pusha
aaa
adc
pop
sbb
dec
wbinvd
insb
fwait
push
sub
fnsave
pop
dec
pop
adc
xor
cmp
imul
adc
aad
into
sub
dec
sbb
add
sbb
pop
pop
xor
pop
fwait
xchg
imul
mov
aad
sub
push
das
sbb
add
ss
pop
xor
xchg
imul
and
aad
push
push
add
add
xor
push
lret
xchg
xchg
stos
mov
and
into
push
add
outsl
pop
push
xor
add
xor
cmp
dec
adc
shrl
lret
loop
and
pop
push
xor
xor
xor
int
cltd
cwtl
xchg
xchg
xchg
lahf
loop
loop
and
add
outsb
pop
inc
cmp
add
add
inc
dec
xchg
int
cltd
cwtl
cwtl
xchg
xchg
lahf
loop
loop
and
inc
cmp
add
add
dec
xchg
ret
cltd
cltd
cwtl
xchg
xchg
mov
sub
pop
dec
inc
cmp
add
add
xchg
jbe
push
sbb
mov
loop
lods
jge
xchg
add
add
add
mov
jl
xor
adc
jb
adc
loop
dec
jge
dec
inc
add
add
add
dec
nop
nop
jl
cmpb
adc
push
push
or
xchg
xchg
mov
mov
add
add
add
dec
jge
xchg
jl
jg
je
aas
es
jg
jnp
xchg
nop
jbe
jbe
xchg
xchg
lea
test
test
jge
add
ja
lds
addb
lds
add
js
movsl
enter
cmpsl
xchg
xchg
xchg
cmpsb
leave
leave
xchg
jp
add
add
int3
loopne
loopne
fmul
mov
add
mov
test
add
clc
ud0
rolb
incl
add
add
aas
cld
add
pop
clc
add
add
pop
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
pop
incb
add
addb
jmp
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
daa
add
adc
add
cmp
add
xor
add
inc
add
sbb
add
inc
pop
add
pop
adc
and
add
add
and
add
dec
adc
add
sbb
and
push
add
arpl
add
add
sub
sub
add
jno
add
adc
and
insb
sbb
sub
add
jge
add
jbe
add
jne
add
inc
and
sub
add
inc
sub
add
dec
add
push
and
cmp
jne
add
outsl
cmp
add
jbe
add
cmp
inc
jle
add
cmp
add
inc
add
dec
add
inc
add
push
add
push
add
popa
add
add
jno
sub
sub
add
xchg
add
mov
add
cmp
aaa
mov
add
and
inc
test
add
xor
push
mov
push
mov
push
mov
xchg
inc
add
popf
inc
add
lahf
dec
add
dec
add
cmpsb
pop
add
jl
das
mov
add
outsl
add
jno
xor
inc
add
dec
add
dec
add
push
add
push
add
inc
add
add
push
add
push
add
pop
add
popa
add
push
add
jbe
jae
jno
jle
jns
inc
stos
arpl
dec
test
insl
add
data16
imul
inc
mov
add
je
dec
mov
jns
dec
mov
jb
pop
mov
add
bound
popa
lods
outsl
add
add
pusha
add
insb
add
jno
jo
jae
jo
jns
outsl
mov
add
jae
add
imul
add
insb
hlt
add
jb
add
jp
add
jle
add
popf
add
add
addb
mov
mov
add
popl
push
int3
cwtl
add
lahf
add
leave
mov
daa
iret
xchg
add
xchg
add
int
add
pushf
add
aam
add
xlat
stos
add
xlat
stos
add
shll
add
xlat
test
add
xchg
inc
mov
inc
leave
mov
inc
into
xchg
add
nop
add
add
lcall
aad
add
cmpsl
add
scas
add
movsb
add
movsl
add
stos
add
mov
insb
fldcw
add
mov
add
cmp
add
incl
add
incl
das
cwtl
incl
aas
xchg
incl
and
add
mov
incb
dec
mov
add
incb
push
mov
add
std
add
incl
jo
les
js
ret
add
incb
lea
mov
lea
popl
mov
lahf
add
mov
mov
add
rcll
xchg
fwait
add
cmpsb
add
int
add
shlb
add
fnstcw
add
fadd
add
lret
mov
in
add
ljmp
cmpsl
lock
xchg
fdivr
add
loopne
add
repnz
scas
in
add
int
add
fcmovne
add
rcl
add
fcmovu
add
loopne
add
in
add
out
in
fdivp
in
jecxz
jecxz
ljmp
add
idiv
add
lock
clc
incb
incl
add
adc
push
push
push
add
add
adc
adc
adc
adc
adc
add
add
adc
leave
ljmp
adc
add
inc
lret
ror
int3
aam
aam
pop
adc
add
add
add
add
inc
lret
es
mov
lret
iret
lret
adc
add
add
add
mov
sub
pusha
rol
push
adc
add
add
push
adc
mov
les
subl
add
adcb
jns
jecxz
out
jmp
and
mov
add
jb
push
ja
pop
js
jnp
jecxz
out
out
ret
add
adc
add
or
jle
jnp
mov
sub
pop
add
sbb
arpl
scas
mov
out
add
push
sbb
add
insl
bound
sub
test
in
jecxz
popa
add
dec
cmp
add
ds
push
stos
stos
fsubp
icebp
out
xor
imul
insb
ds
mov
stos
test
xor
or
add
dec
xchg
push
adc
stos
test
shrb
insb
dec
dec
add
add
mov
pop
fistpll
lock
icebp
pop
mov
add
add
fwait
xchg
cwtl
mov
test
icebp
pop
mov
add
xchg
mov
cmp
or
movsl
lcall
add
add
xchg
xchg
test
mov
add
add
add
mov
cmpsl
fldenv
add
add
add
add
fcmovu
loopne
loope
popf
add
mov
fstpt
add
incl
incl
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
sub
add
adc
add
and
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
add
adc
add
sbb
cmp
add
sbb
and
dec
add
sbb
pop
add
es
push
add
pop
sbb
daa
popa
add
sub
sub
add
or
add
jne
add
jne
add
inc
das
add
push
xor
ds
cmp
xor
jle
add
and
das
jo
add
dec
add
pusha
add
andl
sub
add
mov
dec
mov
add
add
xor
push
cmp
add
lcall
xor
pusha
add
mov
add
mov
add
jnp
inc
xchg
inc
add
pop
add
pop
add
push
add
push
add
dec
add
push
add
pop
add
pop
add
arpl
dec
pushf
imul
push
xchg
jge
jl
js
push
scas
outsl
add
imul
pusha
cmpsb
arpl
push
insl
add
add
imul
mov
add
jl
add
jne
add
addb
mov
test
insl
mov
addb
rcrb
add
int
add
rcrl
add
aam
add
test
ds
add
add
xchg
dec
aam
add
add
movsb
add
test
fs
movsb
add
add
add
add
mov
add
mov
add
xchg
incl
sub
sti
add
cltd
incb
das
lahf
incl
cmp
in
add
incb
insl
movsb
jmp
jne
rolb
out
add
int
pop
sar
gs
nop
addl
xchg
xchg
lea
lcall
mov
mov
mov
les
add
shrl
test
mov
rol
add
mov
lret
add
ror
add
out
add
ljmp
xchg
in
rolb
cltd
in
aad
test
faddl
xchg
sti
add
xlat
incl
mov
mov
lret
lret
lret
add
int3
add
rcl
add
fstp
add
in
filds
call
incl
add
adc
or
jnp
nopl
add
add
add
inc
jle
xor
dec
cmpl
add
add
or
adc
jns
and
add
adc
adc
xchg
xchg
xchg
cmp
add
xor
or
xchg
xchg
xchg
xchg
sbb
dec
pop
adc
adc
imul
xor
push
cmp
cmp
adcb
jne
add
xor
and
and
cwtl
jbe
add
daa
aas
add
sub
popa
mov
aas
add
sub
lea
test
add
push
push
dec
sub
or
pop
cmp
add
add
push
dec
push
push
push
push
push
pop
pop
add
add
add
pop
mov
push
add
add
add
add
incl
add
pop
add
lock
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
cld
pop
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
add
add
add
adc
add
adc
mov
sub
mov
sub
add
add
add
add
dec
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
xor
or
add
imul
sub
ljmp
imul
sub
ljmp
imul
sub
ljmp
imul
sub
ljmp
imul
sub
hlt
and
xlat
sbb
add
add
add
add
xor
add
sbb
add
or
add
add
add
push
add
add
add
add
add
add
add
imul
sub
ljmp
push
ljmp
insb
add
jno,pn
pushl
ja
cmp
cmp
daa
cmp
daa
pushl
jnp
pushl
jne
ljmp
pop
ljmp
push
ljmp
push
ljmp
imul
sub
jmp
pop
add
adc
mov
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
adc
mov
arpl
jmp
push
ljmp
push
ljmp
pop
cmp
call
dec
ljmp
jne
pop
cltd
ljmp
faddp
inc
loop
inc
loopne
pushl
int
incl
cmpsb
push
pushl
sbb
sub
ljmp
imul
sub
jmp
and
jns
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
and
add
sub
ljmp
push
pushl
jae
decl
pushl
jne
movsl
shlb
fdivp
in
jmp
stc
hlt
push
cli
clc
push
sti
clc
push
stc
idiv
in
div
jmp
cmc
in
fcomip
out
shr
mov
call
mov
sub
sub
push
ljmp
imul
sub
jmp
push
add
add
add
add
add
add
add
add
add
add
adc
add
xor
sub
hlt
sub
ljmp
outsb
add
inc
mov
ja
jl
lods
mov
dec
jmp
loop
loopne
out
in
jmp
out
out
jmp
hlt
in
jmp
bnd
call
in
shr
lret
out
inc
in
mov
lret
bound
push
ljmp
imul
sub
jmp
arpl
jmp
adc
add
add
add
add
add
add
add
add
add
push
aaa
add
sub
pushl
jbe
lcall
push
call
ffree
mov
loop
dec
in
dec
call
fdivrp
loop
fdivp
in
loope
call
jmp
lock
fsubr
in
xlat
in
shr
lret
out
inc
in
mov
ffree
pushl
mov
cmpl
or
sub
ljmp
imul
push
and
je
add
das
add
add
add
add
add
add
sbb
cltd
sub
ljmp
push
cmp
ljmp
jmp
xlat
mov
mov
loopne
inc
jecxz
dec
out
call
ljmp
fdiv
in
fdivp
out
in
inc
jecxz
loop
aad
fdivrp
into
jmp
sar
shl
mov
fcmovb
ljmp
aam
jmp
les
pushl
jae
ljmp
imul
sub
std
push
and
jae
add
sub
add
or
add
pop
add
add
push
and
jo
push
std
sub
cmp
pushl
ja
popf
int
jmp
mov
scas
xlat
mov
mov
in
mov
rcll
push
cltd
dec
lcall
jmp
push
js
cmp
mov
stos
pushl
ffreep
mov
fnstcw
jmp
iret
lods
lcall
popf
lcall
pop
pushl
je
ljmp
imul
sub
std
adc
add
add
add
add
add
add
add
add
add
add
imul
sub
pushl
jnp
ljmp
call
lret
cmpsl
jmp
shlb
pushl
pushf
call
dec
cmp
ljmp
gs
and
call
xor
add
or
add
pop
sbb
incl
sbb
jmp
inc
pop
incl
pushl
je
scas
fstpt
mov
sar
shll
lcall
movsb
call
rcll
xor
ljmp
push
ljmp
fs
add
add
add
adc
add
add
daa
popa
add
sub
pushl
jne
jmp
pusha
decl
lahf
call
int3
test
jmp
sahf
push
ljmp
push
or
cvtpi2ps
decl
es
or
and
decl
and
decl
and
decl
push
add
or
incl
sbb
lcall
xor
jmp
call
out
in
jmp
lret
xchg
mov
decl
mov
dec
xchg
inc
ljmp
imul
and
mov
add
add
add
add
add
add
sbb
sub
ljmp
add
incl
rcll
xchg
mov
call
jge
jmp
pop
add
adc
add
adc
add
push
sub
decl
add
or
add
or
decl
and
incl
and
decl
and
decl
and
decl
pop
add
or
add
or
add
sbb
iret
sar
hlt
jmp
decl
rcll
cmpl
subl
sub
ljmp
imul
adc
add
add
sbb
add
add
add
or
sub
repz
cmp
pushl
jns
cmpb
mov
xchg
call
mov
pop
lcall
add
adc
add
adc
add
or
cmp
incl
mov
ljmp
stos
lods
ljmp
jae
incl
cmp
sbb
or
pop
push
add
or
add
add
add
fwait
test
jmp
mov
mov
cmpb
lcall
pop
pushl
je
ljmp
imul
es
add
add
add
add
or
add
add
add
sbb
sub
ljmp
jo
lcall
push
jl
xchg
jg
mov
cmpl
mov
xchg
cmp
add
adc
add
adc
add
adc
add
sbb
add
jge
jne
ret
ret
iret
into
iret
call
xlat
fcos
fstp
loop
jecxz
ljmp
call
xlat
fdivr
lods
lods
scas
call
decl
and
decl
sbb
add
add
add
lcall
decl
mov
test
js
cmp
mov
incl
cmp
sub
sub
lcall
add
add
add
add
add
add
add
sub
repz
cmp
ljmp
je
ja
cmp
cmpb
incl
aaa
jmp
pop
pop
call
aaa
add
adc
pop
xor
leave
mov
dec
into
iret
dec
iret
iret
call
rcl
call
rcl
call
fcmovu
loopne
in
in
in
in
in
clc
idiv
jmp
in
jge
jl
and
adc
or
add
add
add
mov
loop
jnp
xchg
ja
cmp
mov
pushl
jnp
pop
mov
adc
sub
jmp
bound
faddl
add
sub
add
add
add
add
add
add
push
aaa
add
imul
sub
add
push
xchg
dec
pushl
jns
jne
jle
jns
test
jg
mov
stos
insb
jmp
outsl
ud0
cmp
call
cmp
lcall
cmp
decl
data16
call
loopne
call
ror
dec
int3
lret
dec
int3
int3
dec
int
dec
iret
iret
call
rcl
call
aad
fcos
fdivrp
in
in
jmp
jmp
cmc
cmc
cmc
cli
stc
cli
lcall
xor
decl
push
add
or
lcall
lock
mov
fwait
pushl
cmp
mov
ljmp
jbe
imul
add
sub
or
add
add
push
add
add
push
add
xor
pusha
mov
ja
jno
jle
ja
xchg
jge
nop
pushl
andb
push
push
or
sbb
lcall
cmp
incl
imul
incl
arpl
call
fsubr
call
ror
dec
lret
lret
int3
lret
dec
into
into
call
rcl
call
rcl
call
fcmovu
fdivrp
jecxz
jecxz
ljmp
sti
sti
cld
jge
jl
add
or
add
pop
sbb
jmp
ljmp
mov
pushl
jl
imul
decl
inc
ljmp
add
lcall
dec
add
add
add
add
add
add
add
sub
repnz
cmp
and
ljmp
jne
jo
jge
jne
xchg
popa
stos
insb
jmp
js
lcall
cmp
add
sbb
call
jae
decl
ja
incl
imul
incl
fsubr
call
ror
dec
int
dec
into
int
iret
iret
iret
call
rcl
call
aad
call
xlat
xlat
fcmovnu
in
in
jmp
jmp
cmc
cmc
cmc
dec
push
inc
decl
pop
add
or
add
mov
enter
mov
insb
mov
ljmp
je
data16
outsb
lcall
pop
pushl
jae
ljmp
imul
daa
bound
fildl
add
and
add
add
add
pop
add
add
sub
ljmp
insl
add
inc
lea
data16
outsl
ljmp
jne
insl
mov
pushl
mov
inc
cltd
dec
jmp
addr16
sbb
lcall
inc
add
push
push
xor
and
jp
incl
jo
incl
push
incl
arpl
incl
fsubr
call
ror
dec
into
int
rcl
sar
aam
aam
xlat
fdivr
fcom
fdivr
fcos
fcmovnu
in
in
in
in
in
stc
stc
stc
jmp
add
or
add
or
add
je
cmp
lret
lahf
ljmp
jl
scas
je
fs
insl
lcall
arpl
aaa
jge
ljmp
insb
add
sub
incl
add
sub
add
add
add
or
sub
ljmp
jb
decl
dec
jmp
outsb
jmp
jne
push
jge
jno
mov
sub
xor
sbb
inc
add
sbb
add
sbbl
incl
jne
incl
jo
incl
imul
add
incl
cmc
call
fucomp
mov
dec
xor
add
add
or
lcall
push
dec
int
fcos
fdivr
in
in
out
out
out
call
rcl
cmp
decl
and
decl
sbb
decl
mov
jmp
jmp
insl
lcall
addr16
cmp
xor
sub
ljmp
insb
add
adc
add
or
add
adc
push
add
sub
ljmp
sahf
pop
jmp
outsl
jmp
jmp
jle
gs
ljmp
mov
lcall
dec
add
dec
scas
bnd
xchg
incl
jle
incl
jp
incl
jbe
incl
jno
incl
imul
add
jmp
jbe
call
aad
clc
idiv
mov
xor
lcall
push
fcos
fcmovnu
call
in
in
jmp
decl
and
decl
and
jmp
cmp
decl
jle
bound
outsb
lcall
incl
aas
ljmp
je
ljmp
outsl
pop
lcall
cmp
add
and
mov
sub
mov
outsb
jmp
jbe
fs
lcall
je
test
lcall
dec
add
push
dec
add
sbb
decl
cmp
add
incl
ja
incl
jno
incl
imul
pushl
pop
xor
push
insl
inc
jmp
jecxz
dec
ror
incl
sbb
dec
int3
lret
call
xlat
fcom
fdivr
fcmovnu
loopne
loopne
in
jmp
call
and
decl
sbb
incl
mov
jne
pop
lods
outsb
lcall
incl
inc
ljmp
js
ljmp
jb
jmp
push
push
xchg
add
add
add
add
and
lahf
sub
ljmp
movsb
pop
lcall
outsb
lcall
jbe
bound
jb
test
lcall
dec
add
pop
dec
add
daa
bound
pushl
incl
mov
incl
mov
incl
test
incl
cmp
add
add
cmp
iret
ljmp
push
or
and
call
cmp
ljmp
inc
adc
cmp
jmp
fdivr
aad
call
xlat
xlat
fdivr
out
out
mov
mov
or
decl
sbb
jp
lahf
jmp
lcall
lcall
outsb
call
push
ljmp
jl
ljmp
jbe
jmp
pop
or
add
add
and
lahf
sub
sub
movsl
pusha
lcall
outsl
lcall
ja
pop
mov
jmpw
mov
jmp
dec
add
and
pushl
push
incl
incl
mov
incl
mov
incl
xchg
incl
cmp
cmp
lret
jb
call
test
incl
daa
add
decl
cmp
dec
int3
lret
xlat
call
xlat
fcos
loope
loope
mov
mov
or
add
push
es
or
fwait
jmp
test
pop
mov
call
outsl
call
imul
sub
ljmp
jnp
jmp
pusha
adc
add
add
and
sub
decl
pusha
call
outsl
call
ja
pop
mov
jnp
es
cmp
jmp
push
add
push
pop
add
xchg
loopne
incl
fwait
incl
xchg
incl
incl
mov
incl
xchg
incl
cmp
sbb
insb
xchg
pop
pushl
mov
lcall
ja
push
lock
jmp
ljmp
cmp
dec
int3
lret
call
xlat
fdivr
xlat
xlat
fdivr
fdivrp
scas
scas
lods
decl
daa
add
push
daa
add
or
add
push
mov
js
push
mov
call
push
ljmp
andb
sub
jmp
push
cltd
add
add
add
add
and
lcall
xor
inc
movsl
pop
call
jo
push
mov
call
cmp
mov
pop
jmp
push
add
and
jmp
push
add
pushf
jmp
lods
incl
cwtl
incl
xchg
incl
nop
incl
mov
incl
xchg
incl
cmp
pop
stos
std
jmp
fcom
mov
mov
iret
fdivrp
icebp
lock
in
in
in
ljmp
inc
sbb
es
dec
int
fcos
fstp
xchg
add
movaps
call
xor
xchg
call
cmp
mov
call
jo
dec
lods
push
cmp
sub
lcall
dec
adc
add
add
add
add
sub
xor
aas
mov
jno
push
mov
call
call
xchg
sub
pop
jmp
add
and
jnp
movsb
lcall
incl
sahf
incl
cltd
incl
xchg
incl
xchg
incl
incl
xchg
incl
cmp
jnp
cld
jmp
lret
ror
int3
jmp
push
repz
out
out
in
ljmp
inc
sbb
daa
cmp
int
aad
call
dec
decl
sub
decl
sub
jmp
sub
push
mov
push
mov
jns
dec
mov
decl
push
xor
xor
sub
sbb
add
add
add
add
push
sbb
mov
sub
push
decl
decl
js
push
mov
mov
xor
sub
jmp
add
push
mov
mov
incl
cmpsl
incl
lahf
incl
fwait
incl
xchg
incl
xchg
incl
mov
incl
mov
incl
cmp
add
incl
ja
call
call
iret
int
loop
loope
div
idiv
out
lock
ljmp
inc
sbb
sub
sbb
ret
jmp
adc
adc
add
adc
add
aaa
lea
push
lds
decl
decl
jae
inc
scas
push
sub
aaa
ljmp
mov
incl
add
sbb
add
push
sub
aas
ljmp
popf
dec
incl
jno
dec
mov
cmp
les
ljmp
lods
pusha
jmp
pop
add
bound
jmp
add
cmpsl
aad
lcall
incl
movsb
incl
lahf
incl
pushf
incl
xchg
incl
xchg
incl
mov
incl
mov
incl
test
incl
jg
incl
ja
call
call
ror
jmp
jecxz
clc
idiv
push
icebp
lock
inc
sbb
decl
das
add
cvtps2pi
decl
and
incl
test
dec
decl
test
dec
mov
jae
inc
lods
ljmp
xchg
inc
ljmp
xchg
cmp
sub
add
add
add
xchg
lds
cltd
inc
ljmp
push
incl
insb
decl
jp
dec
rolb
dec
lret
sub
jge
sub
ljmp
arpl
jmp
data16
dec
xchg
lret
icebp
lcall
movsl
incl
mov
incl
cwtl
incl
xchg
incl
incl
mov
incl
test
incl
cmp
add
call
rcl
jmp
in
cli
stc
cli
push
repnz
ljmp
inc
push
call
add
push
fs
lcall
int
decl
decl
xchg
inc
mov
je
ss
ljmp
fwait
dec
ljmp
xchg
inc
jmp
add
pop
add
add
and
jb
pushf
dec
ljmp
movsl
pop
pushl
mov
cmp
mov
dec
int
pushl
lret
mov
sub
add
sub
ljmp
push
jmp
push
inc
in
lcall
mov
incl
mov
incl
cltd
incl
xchg
incl
nop
incl
mov
incl
xchg
incl
cmp
call
lret
fcom
aad
jmp
sti
cld
push
lock
dec
ror
mov
imul
incl
xchg
inc
mov
je
xor
push
ljmp
cltd
inc
lcall
pop
and
add
add
add
adc
dec
cld
xor
pushl
mov
ds
test
inc
enter
iret
xchg
decl
pushf
ljmp
lret
sub
add
sub
ljmp
outsl
add
jne
data16
mov
lret
add
incl
popf
incl
cltd
incl
xchg
incl
nop
incl
mov
incl
xchg
incl
cmp
add
lcall
into
int3
fcmovu
fcos
ljmp
mov
inc
sbb
inc
aad
incl
xchg
incl
xchg
aas
mov
outsl
pushl
lods
pushl
movsl
pop
ljmp
cltd
dec
out
add
add
add
add
es
dec
mov
lods
fs
cmp
jne
ds
test
inc
leave
incl
xchg
incl
fwait
cmp
cwtl
jmp
sbbl
sub
jno
call
xor
mov
fdivr
test
incl
incl
incl
sahf
incl
lcall
add
lcall
cltd
ljmp
mov
lcall
iret
sar
fcmovnu
in
jmp
inc
les
inc
aam
incl
xchg
cmp
mov
jo
cmp
jmp
add
add
add
add
pop
cs
inc
mov
jl
cmp
cmp
aas
into
xchg
aas
rcrb
pushl
rclb
ljmp
adc
jo,pn
ljmp
outsb
add
daa
imul
lcall
out
incl
into
jmp
lcall
jmp
incl
enter
pop
call
inc
add
xlat
xlat
aad
int
int3
repnz
lock
std
idiv
decl
rclb
cmp
mov
xor
mov
jae
sub
push
adc
add
add
cwtl
push
nop
cmp
cmp
xchg
aaa
lret
mov
cmp
xchg
cmp
xchg
cmp
cwtl
cmp
iret
xchg
jmp
iret
xchg
jmp
cwtl
cmp
ljmp
push
ljmp
imul
jmp
data16
inc
jnp
aas
ja
cmp
aaa
outsl
lcall
dec
add
push
dec
add
sbb
add
sbb
jmp
jmp
ljmp
out
out
cld
repnz
sbb
rclb
pushl
lds
pushl
mov
jmp
push
jle
add
add
add
add
sbb
sub
insb
out
dec
lret
dec
rcrb
pushl
mov
ss
pushl
iret
xchg
cmp
lcall
rcrb
jmp
mov
ljmp
andb
sub
ljmp
arpl
jmp
pusha
add
and
pop
add
and
jmp
push
add
and
lcall
dec
add
push
dec
add
sbb
ds
push
pop
sbb
push
mov
xchg
ljmp
xchg
jmp
mov
arpl
lods
pushl
into
xchg
pushl
int
pushl
lret
cmp
decl
xchg
aas
ret
test
sub
add
add
add
and
jg
pop
movsb
decl
lahf
pushl
nop
pushl
lret
pushl
int
pushl
iret
xchg
pushl
rcrb
pushl
shll
lcall
mov
aaa
jmp
imul
pop
add
and
push
add
and
jmp
dec
add
and
lcall
push
or
sbb
inc
lcall
cmp
sub
sahf
ljmp
rcrl
ljmp
iret
xchg
ljmp
int3
nop
ljmp
lret
cmp
xchg
call
mov
ljmp
orl
add
add
add
add
stos
insb
jnp
int
jmp
call
movsb
pushl
int
ljmp
int3
xchg
ljmp
xchg
ljmp
rcrl
ljmp
aam
ljmp
movsl
jmp
movsb
lcall
movsb
lcall
xlat
cmpsl
lcall
rcrl
lcall
mov
jle
sbb
sahf
lcall
fsubs
ljmp
movsl
ljmp
shll
ljmp
rcrb
ljmp
int3
xchg
ljmp
lret
mov
cmp
xchg
lcall
test
pop
fisubrl
jmp
movsl
imul
add
add
add
inc
rcrl
lcall
lods
pushl
rcrb
jmp
int
jmp
rcrb
ljmp
rcrb
ljmp
movsl
ljmp
xlat
test
fldcw
lcall
fisubrl
lcall
fisubrl
jmp
fldcw
ljmp
aad
jmp
shll
jmp
rcrb
jmp
int3
xchg
incl
lahf
jmp
ljmp
mov
aaa
int3
jmp
stos
outsl
push
add
add
dec
rcrl
ljmp
incl
movsl
jmp
iret
xchg
jmp
int
jmp
iret
cltd
jmp
rcrl
jmp
aam
jmp
aad
jmp
test
lcall
fsubrs
push
fldcw
lcall
fsubrs
jmp
aam
jmp
shll
jmp
rcrl
jmp
int3
xchg
ljmp
rcrb
pushl
mov
pushl
into
xchg
jmp
lods
jae
add
add
add
add
mov
popf
jl
ret
call
mov
cmp
rcrb
lcall
rcrb
lcall
aam
lcall
aad
lcall
test
call
fsubrs
lcall
xlat
stos
lcall
cmpsl
lcall
aam
lcall
shll
lcall
iret
lcall
rcrl
ljmp
mov
ljmp
mov
xor
xchg
jmp
mov
data16
add
add
add
sbb
into
xchg
cld
insb
loope
lcall
jmp
ljmp
mov
ljmp
aad
lcall
rcrb
call
shll
call
test
call
stos
call
aad
call
aam
call
mov
lcall
cmpsb
decl
mov
jae
ret
call
ljmp
daa
leave
mov
sbb
outsl
das
add
add
or
xor
cltd
inc
xlat
movsl
incl
icebp
fdivrp
test
in
sar
jno
enter
mov
pushl
fdivl
jmp
fidivl
pushl
mov
inc
fidivs
jns
lret
out
aad
lods
icebp
fdivrp
movsl
out
jb
mov
lcall
gs
or
add
add
popf
outsl
sbb
xchg
stos
inc
fsubrs
pushl
clc
in
call
clc
out
dec
imul
inc
imul
inc
imul
inc
imul
inc
imul
mov
imul
dec
imul
dec
stc
out
inc
imul
jmp
in
pushl
les
sbb
add
add
add
add
pop
inc
pop
pop
rorl
dec
fdivl
mov
imul
call
stc
icebp
jmp
sti
idiv
hlt
dec
clc
out
pushl
in
aad
gs
cmp
stos
jmp
lret
cltd
mov
push
addr16
push
add
add
adc
xchg
jne
cwtl
mov
lret
sahf
stos
push
shlb
int3
push
int3
popf
stos
pop
les
jne
mov
add
push
ud0
add
incb
add
incl
add
clc
add
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
incb
add
add
add
add
add
incl
add
addb
add
add
jmp
add
pop
incl
add
lock
ud0
add
incb
add
add
inc
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
add
or
add
adc
add
push
add
add
add
add
add
sub
add
sub
add
daa
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
xor
add
dec
add
add
or
push
add
movaps
orl
add
add
pop
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
gs
pop
bound
jmp
gs
and
jmp
addr16
and
jmp
fs
and
jmp
pop
add
push
cmp
lahf
add
add
add
cmp
add
sbb
add
pop
add
add
add
add
add
add
daa
add
and
ljmp
jne
call
inc
incl
shll
mov
shlb
call
pushl
jbe
jmp
gs
and
add
pop
cmp
popf
add
add
add
add
add
add
add
add
add
add
add
and
and
pushl
mov
mov
hlt
jmp
in
stc
idiv
cmc
std
sti
sti
push
std
out
stc
idiv
in
out
fcomi
out
mov
mov
cmp
and
pop
add
add
add
add
sub
add
add
add
add
add
add
add
add
arpl
icebp
daa
push
lcall
push
ljmp
in
dec
call
fdivp
jmp
in
cli
repz
jmp
cmc
in
fsubr
jecxz
iret
ljmp
mov
aam
lcall
pop
ljmp
imul
daa
push
add
add
sub
add
or
add
add
add
sbb
add
dec
and
insl
add
imul
pushl
loopne
inc
call
loop
lods
aad
lcall
lret
mov
xchg
ljmp
in
inc
call
int3
pushl
mov
ljmp
je
sub
or
daa
push
add
add
and
add
add
add
add
add
add
and
fsubrs
push
jmp
push
jmp
fnstcw
jns
jb
das
insb
sbb
sbb
call
xor
incl
or
incl
or
lcall
cmp
pushl
push
pushl
jp
vpaddq
mov
jmp
int
lcall
stos
outsl
ljmp
insl
add
and
add
inc
add
add
add
add
add
and
inc
add
push
xchg
dec
decl
lret
lahf
shrl
ljmp
outsb
or
or
add
add
add
add
add
add
add
add
incl
adc
incl
push
add
add
incl
or
decl
and
ljmp
jmp
mov
decl
cltd
push
jmp
imul
mov
add
add
add
add
add
add
xor
sbb
jge
mov
mov
xchg
call
mov
add
or
add
sbb
jmp
push
jmp
enter
enter
movsb
popf
ljmp
decl
sbb
add
add
add
cmpsb
mov
call
lock
xchg
xchg
incl
mov
cmp
daa
push
add
add
adc
add
add
add
add
add
sbb
dec
add
pop
sahf
pop
jle
mov
test
mov
and
add
cvtps2pi
decl
sub
jmp
dec
call
lret
enter
fdivr
fdivrp
in
in
lock
icebp
jmp
loopne
decl
inc
incl
or
incl
pop
add
pushf
stos
pushf
jmp
test
js
cmp
mov
add
and
enter
and
add
add
add
add
add
daa
sub
sti
xor
outsl
scas
js
js
test
add
incl
cmp
adc
add
pop
xor
incl
dec
cmp
jnp
out
call
int3
call
iret
into
call
rcl
call
fstp
fdivrp
call
stc
sti
stc
idiv
lcall
pop
incl
or
incl
add
call
xchg
jb
jl
outsb
lods
jae
xor
push
ljmp
push
add
add
add
add
add
pop
adc
cmp
push
xor
outsb
mov
pushl
pushl
xchg
sbb
ss
push
dec
sub
add
incl
jmp
jae
call
ror
call
iret
iret
call
aad
fcos
out
call
push
lock
xor
add
push
jno
call
mov
ljmp
jae
dec
mov
jmp
push
add
add
adc
add
nopl
subl
cwtl
dec
ljmp
ja
jno
test
dec
mov
add
sbb
ljmp
xorl
add
incl
pusha
jmp
jae
jmp
loope
dec
mov
cltd
lahf
xchg
ljmp
jmp
loopne
jmp
std
lcall
push
add
push
push
add
fsave
lods
jb
push
pushf
push
ljmp
push
jmp
push
add
add
add
and
mov
push
mov
ja
outsb
mov
dec
lcall
cmp
lcall
inc
add
inc
mov
incl
jg
incl
jbe
incl
insl
incl
pop
call
mov
into
incl
xor
popa
outsl
pop
loopne
loopne
loopne
out
out
lock
loopne
decl
or
xchg
jmp
jle
popa
scas
jb
push
mov
or
filds
add
sbb
add
adc
pop
or
push
cmpsl
jmp
jbe
imul
add
and
sar
add
incl
ja
incl
push
fcomp
jecxz
cmp
sbb
add
in
in
jmp
pop
das
or
loope
loope
fstp
fdivrp
in
in
out
jmp
incl
adc
jmp
jle
bound
call
ljmp
jns
jmp
push
fiadds
add
sbb
add
adc
adc
sub
call
lcall
ja
arpl
mov
and
add
cmp
ljmp
incl
incl
xchg
incl
jg
incl
je
inc
mov
xor
cmp
incl
push
xor
orb
loope
loope
hlt
repnz
cmp
lcall
ja
pop
mov
jb
push
cmpsl
ljmp
andb
es
fldl
add
sbb
add
push
and
sub
call
ja
pop
rorb
push
dec
add
and
add
jle
incl
xchg
incl
mov
incl
xchg
incl
jge
call
xlat
out
jae
push
decl
sub
rcl
int3
push
div
call
mov
in
in
loope
jecxz
sub
push
add
push
mov
test
push
mov
decl
ljmp
test
jmp
add
sbb
add
or
outsb
and
inc
cmpsl
pop
call
js
pop
rorl
push
dec
add
pop
push
add
mov
sti
incl
mov
incl
nop
incl
mov
incl
xchg
decl
fucomp
fmul
lret
in
jmp
idiv
adc
xchg
cmp
fsubp
decl
add
add
mov
test
dec
mov
incl
pusha
ljmp
mov
ljmp
jnp
faddl
add
adc
add
add
and
mov
cmp
ja
push
ret
ds
and
jmp
push
add
jle
jl
popa
sar
incl
lahf
incl
cwtl
incl
xchg
incl
mov
incl
jle
incl
jl
inc
aam
call
iret
out
in
jmp
sti
stc
cli
lcall
xor
decl
cmp
add
add
push
sub
xchg
decl
test
dec
mov
cmp
jmp
sub
add
add
add
add
sub
decl
js
dec
ret
dec
int3
xchg
jmp
pop
add
sub
add
lret
repnz
lcall
mov
incl
cltd
incl
xchg
incl
mov
incl
cmp
add
enter
fxch
leave
push
lock
lcall
xor
lcall
cmp
dec
rclb
incl
jbe
xor
inc
lcall
imul
add
add
add
add
or
xchg
inc
fisubrl
test
cmp
les
pushl
rcll
jmp
popa
add
dec
jg
dec
lock
ljmp
sar
add
incl
xchg
incl
incl
cmp
add
inc
aad
fcmovbe
sar
cmc
repz
call
lret
call
insb
aaa
incl
cwtl
incl
cmp
jbe
das
test
ljmp
lcall
add
add
and
pushw
les
incl
mov
jmp
ja
ljmp
imul
pushl
pushl
mov
incl
xchg
call
mov
jmp
cltd
std
inc
mov
fcmovnbe
xlat
cli
hlt
idiv
call
push
cwtl
cmp
xchg
xor
je
cmp
dec
movsb
add
add
add
add
xor
xchg
lds
rcrl
jmp
int
ljmp
jns
ljmp
fs
and
subl
jne
jbe
mov
jnp
lret
cwtl
mov
sub
dec
decl
xor
pushl
into
call
idiv
call
orb
rclb
incl
test
xor
add
add
add
sbb
lds
pushl
lret
mov
xor
xchg
pushl
rcrb
jmp
mov
jmp
popa
add
and
push
add
and
lcall
dec
add
push
inc
add
sbb
add
push
jno
incl
mov
jmp
scas
ljmp
iret
nop
ljmp
int
incl
xchg
incl
mov
and
add
add
add
pop
xlat
movsb
decl
sahf
ljmp
lret
sub
xchg
ljmp
rcrb
jmp
fldcw
lcall
xchg
dec
lcall
ja
lcall
imul
lcall
mov
sahf
jmp
jmp
int3
nop
jmp
lret
inc
aam
lcall
cmpsl
ljmp
mov
add
add
add
sub
fidivs
ljmp
int
jmp
int
jmp
aad
jmp
fldcw
jmp
fbstp
lcall
loopne
jmp
fisubrs
jmp
fwait
lcall
int3
xchg
jmp
int3
xchg
call
cmpsl
ljmp
mov
xor
mov
add
add
add
add
sub
xchg
jns
ret
mov
call
into
cwtl
lcall
rcrb
call
fsubrs
call
fsubrs
call
rcrb
lcall
int3
xchg
pushl
aad
pushl
mov
ljmp
enter
add
pop
add
add
mov
mov
popf
out
incl
fdivl
call
shll
incl
aad
incl
shlb
lcall
aam
incl
jge
enter
lcall
mov
and
test
add
add
vmwrite
lret
outsb
jecxz
pushl
imul
pushl
lock
xchg
out
fdivr
xchg
out
fdivr
lcall
inc
imul
mov
in
pushl
int
aad
mov
add
add
add
les
shrb
decl
icebp
stos
icebp
in
aam
imul
scas
rcrl
lea
add
add
incl
add
add
aas
clc
add
add
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incb
add
rolb
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
adc
add
daa
add
add
add
pop
push
daa
add
sbb
mov
inc
add
adc
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
push
add
and
pushl
jne
decl
aas
ljmp
popa
ljmp
call
inc
pushl
jns
jmp
data16
push
push
add
movaps
addl
add
and
add
pop
add
add
add
add
inc
add
dec
lea
ljmp
push
std
call
lock
mov
xchg
dec
jmp
dec
add
add
add
add
and
add
push
add
add
add
add
push
push
add
sub
mov
aam
iret
in
fdivrp
fdiv
ljmp
cli
out
stc
jmp
stc
out
call
lock
out
mov
mov
adc
and
repnz
add
add
sbb
add
add
add
or
add
xor
push
add
mov
xchg
ljmp
loop
pushl
movsl
arpl
cmp
xor
and
sub
sub
push
jg
lcall
call
mov
decl
ja
jmp
pop
add
add
add
add
sldt
add
add
add
add
add
sub
je
push
pushl
lcall
xlat
mov
decl
add
add
add
add
add
add
add
add
add
inc
pop
aas
call
in
mov
mov
ljmp
insl
add
sbb
mov
add
add
add
or
add
xor
data16
dec
popl
mov
xchg
call
mov
decl
sub
incl
pop
add
dec
pop
cmp
stos
lods
movsl
loop
jecxz
mov
pop
inc
incl
or
incl
adc
inc
aad
call
mov
dec
jmp
add
cmp
add
push
add
add
adc
add
imul
outsl
scas
jbe
cmpb
call
cmp
decl
add
push
test
fstp
fcmovnu
fcos
loope
loope
lock
lock
jmp
add
and
adc
jp
xchg
outsb
scas
je
sub
pop
lcall
add
sbb
add
sbb
push
add
jno
jge
jge
xchg
ljmp
jb
call
add
push
fs
call
jmp
call
rcl
xlat
jmp
fsubp
in
in
out
call
add
jo
jns
mov
insb
mov
aas
subb
and
add
add
add
add
add
and
add
inc
popl
imul
sbb
lcall
inc
add
sub
incl
pop
call
jecxz
mov
mov
mov
loop
out
in
out
sti
idiv
call
and
lcall
xor
incl
mov
decl
inc
jmp
push
add
add
add
daa
outsl
push
decl
jmp
jge
dec
lods
lcallw
dec
add
das
push
incl
jge
incl
outsl
ljmp
test
ljmp
movsl
mov
jne
imul
sarb
stc
idiv
call
dec
incl
or
jnp
sahf
jmp
ja
dec
popf
push
jmp
outsl
or
add
add
add
add
daa
ja
decl
push
lcall
jge
inc
mov
lcall
inc
add
pop
xchg
jle
sbb
incl
jnp
jl
clc
pushl
je
jmp
pop
or
mov
test
out
in
lock
pop
incl
or
ljmp
cwtl
lcall
decl
pop
jmp
js
lcall
or
add
sbb
jle
incl
push
lcall
jge
inc
mov
add
inc
jp
incl
incl
xchg
incl
xchg
decl
pushl
lea
clc
lock
call
xchg
jmp
in
jmp
push
incl
jmp
xchg
call
jp
inc
mov
and
pop
add
add
daa
subl
push
mov
xchg
and
sub
lcall
popf
incl
xchg
incl
mov
call
xchg
jmp
cld
jmp
aad
stc
repz
lcall
mov
cmp
decl
xor
call
decl
jl
cmp
das
incl
add
sbb
add
or
xor
dec
mov
xchg
ljmp
stos
pop
jmp
push
add
xchg
mov
incl
lahf
incl
xchg
incl
mov
incl
jl
decl
clc
jmp
int3
cli
clc
lcall
aaa
ud0
mov
dec
iret
xchg
incl
jnp
das
mov
cmp
add
add
add
add
sbb
dec
das
movsb
pop
cmp
ja
inc
lret
xchg
ds
jmp
pop
jmp
bound
jmp
sar
incl
mov
incl
mov
incl
jg
call
jmp
fcmovu
lcall
jns
incl
xchg
cmp
jns
das
test
cmp
add
add
add
add
add
or
stos
arpl
cmp
incl
sahf
ljmp
int
ljmp
jne
ljmp
fs
outsb
cwtl
dec
jmp
fdivrp
jmp
decl
icebp
lcall
outsb
jae
cltd
mov
fdivr
stc
call
fs
cmp
nop
cmp
jle
xor
add
add
add
push
orb
mov
cmp
nop
pushl
iret
xchg
cmp
mov
jmp
lcall
and
jmp
dec
add
pop
inc
add
sbb
add
adc
add
push
mov
mov
fwait
loop
ljmp
iret
pushl
int
decl
nop
jmp
add
add
add
add
pop
fisubrl
ljmp
into
xchg
ljmp
aad
jmp
fldcw
lcall
mov
lcall
dec
lcall
xchg
dec
lcall
lods
insl
lcall
sahf
jmp
fldenv
lcall
int
ljmp
into
nop
lcall
stos
pushl
mov
add
add
add
xor
mov
inc
aad
lcall
rcrl
sbb
scas
lcall
fidivs
lcall
fsubrl
lcall
rcrl
cmp
mov
pushl
lret
nop
ljmp
add
mov
sar
call
scas
lcall
shll
incl
cmpsb
incl
cmpsl
decl
shll
incl
scas
jle
enter
sar
ret
add
add
add
add
push
ja
cmovbe
movsl
scas
mov
int
mov
clc
in
inc
clc
jmp
ret
dec
clc
in
mov
ljmp
adc
add
add
add
add
mov
xor
int
jle
aam
jnp
aam
jp
into
cmpsl
jle
mov
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
add
add
or
add
push
add
sub
sub
sub
sub
sbb
add
add
add
add
or
cmp
jl
insb
add
dec
mov
call
shrb
ljmp
cmpsl
pushl
jae
ljmp
fs
or
add
add
add
add
cmp
jl
jb
pushl
ljmp
mov
lcall
pop
lcall
pop
jg
test
mov
sar
lret
cmpsl
call
cmp
out
add
add
add
add
add
insb
add
arpl
cmp
pop
sbb
sbb
push
xor
push
pop
dec
jmp
cmp
jmp
sbb
test
les
jmp
popa
add
add
add
add
add
and
cmpsb
cmp
mov
jmp
pop
push
call
inc
das
pushl
mov
lret
lret
lret
dec
into
into
jl
js
and
sbb
lea
insl
ljmp
insb
add
sbb
add
add
add
push
out
push
lcall
sbb
jl
ljmp
sti
inc
int3
call
rcl
fstp
call
outsb
pusha
ds
cmp
jno
cmp
andl
cwtl
sbb
adc
pop
stos
imul
das
jo
jmp
cltd
incl
jne
ljmp
jmp
mov
fdivrp
mov
mov
add
insl
mov
inc
jmp
or
sub
outsl
pushl
jle
call
cmp
decl
outsb
daa
inc
mov
mov
sub
lcall
cmp
lcall
sub
xor
dec
mov
pushl
xchg
dec
decl
notrack
incl
xchg
ljmp
lahf
ljmp
pushl
nop
cmp
dec
mov
push
jmp
jge
lods
add
add
sub
outsb
cmp
jnp
sub
jmp
mov
incl
mov
lcall
pushl
arpl
inc
roll
daa
mov
pop
add
add
sub
jl
cmp
lods
pusha
cmp
decl
aad
lcall
incl
mov
lcall
insl
aas
mov
ss
ljmp
mov
add
sub
jg
dec
aam
pushl
int
jmp
mov
jmp
andl
daa
popa
add
and
lcall
dec
add
dec
pushf
imul
fs
movsb
call
ljmp
add
add
ret
jle
push
aam
in
fidivs
pop
rcrb
lcall
test
sbb
movsb
jmp
rcrl
ljmp
mov
stos
sub
add
es
xlat
cmpsb
ret
xchg
in
sar
mov
sar
jnp
int
sub
lret
in
aad
jne
sar
iret
cwtl
js
enter
add
add
into
xchg
and
js
ljmp
outsb
in
cmp
int
or
add
add
sldt
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
adc
add
imul
add
add
add
add
jo
add
add
add
add
popa
add
add
add
add
add
add
add
add
imul
nop
add
add
add
add
add
add
bound
outsl
add
je
and
add
add
add
add
or
add
add
add
push
add
add
add
add
bound
outsl
add
je
add
or
push
add
push
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
or
incl
add
arpl
imul
add
add
add
jae
imul
and
xor
add
add
push
add
add
xor
adc
dec
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
sub
add
add
incl
add
add
add
adc
aas
add
add
nop
add
add
add
add
add
or
adc
adc
add
add
sub
add
add
and
add
add
or
test
add
add
sbb
add
add
or
enter
add
adc
add
add
or
push
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
or
push
inc
add
add
add
inc
inc
add
add
sbb
sub
add
add
mov
jl
push
movsb
push
lods
push
xchg
jmp
jb
das
cwtl
das
addr16
cli
rorb
mov
scas
addb
adc
rcll
mov
das
das
sub
cmp
imul
sbbb
push
mov
xchg
in
popa
cs
orb
mov
outsl
ret
ja
fmul
test
hlt
add
xor
push
add
iret
filds
jno
decl
xchg
pop
jl
fwait
push
shrl
cmpsb
jl
and
pop
popf
iret
je
aad
aaa
inc
mov
jne
cwtl
clc
push
idiv
das
nop
lock
dec
push
xlat
sub
cli
lcall
das
sub
mov
cmp
call
es
cmpsl
push
aam
pop
rorl
aam
orb
lods
imul
mov
aaa
mov
jae
mov
xor
cltd
dec
int
aas
outsb
jmp
mov
push
das
push
or
add
pop
inc
add
lahf
lret
jns
adc
rclb
cli
jp
out
push
sbb
out
cmpsl
mov
pop
arpl
mov
jne
jmp
push
lcall
les
adcb
xchg
cmc
push
outsl
mov
shll
outsb
les
int
or
add
shll
test
sti
lock
subl
test
arpl
outsl
test
pop
adc
pop
dec
mov
cwtl
repnz
mov
xor
or
sbb
pop
cmp
xor
adc
inc
fsub
pop
sbb
jmp
call
jnp
and
pop
es
sub
insl
movntps
or
lret
and
or
fs
add
inc
sub
popf
xchg
push
jnp
in
push
or
jmp
inc
icebp
sbb
clc
jnp
pop
or
mov
adc
lods
jecxz
xchg
in
out
mov
xchg
pop
sbb
pop
cmpsl
fstpt
ret
xor
sub
push
test
jns
push
sub
xor
dec
ss
push
loopne
jae
dec
or
inc
aaa
jp
aam
inc
add
mov
int
push
cltd
outsb
mov
lret
mov
cmp
xor
jns
in
decb
push
dec
rclb
test
mov
push
addr16
mov
pushf
or
xor
add
jbe
fldl
inc
mov
fs
into
mov
orb
addl
and
stos
fdivl
pop
hlt
and
cmc
movsb
and
lock
daa
shrl
mov
lea
fiaddl
sub
scas
js
push
outsb
sbb
sti
int3
jo
inc
push
sbb
test
mov
movsl
cmp
mov
mov
xchg
iret
jp
dec
icebp
sub
mov
push
inc
adc
dec
pusha
push
mov
pop
fcmovnu
lds
jge
mov
daa
push
or
leave
adc
jge
sub
es
and
addr16
flds
arpl
and
das
cmc
lds
and
addb
fs
stos
int
push
sbb
fldenv
sti
cwtl
or
pop
mov
sub
sub
inc
sub
in
into
pop
jg
adc
push
or
aas
test
popf
in
cmp
dec
add
cli
in
dec
jp
popa
or
test
pop
dec
pop
inc
xchg
jne
sub
arpl
adc
lods
add
pusha
nop
int
mov
out
cmc
or
mov
pop
xor
inc
cld
push
adc
xor
sbb
addb
fwait
sbb
push
lret
or
data16
xor
xchg
fs
out
sub
sbb
or
mov
scas
dec
push
cmp
jecxz
push
in
sub
xchg
jg
jne
cmp
outsb
sub
inc
mov
xchg
jg
loopne
ljmp
mov
je
sbb
mov
xchg
in
jge
push
into
and
push
lret
shlb
cmpsl
ja
xchg
sbb
push
rclb
lods
push
fucomi
inc
cmp
mov
out
arpl
mov
popa
int3
mov
fcomp
je
cmp
cmpsl
pop
cmp
push
pop
pop
mov
push
jle
lds
xor
jo
je
sbb
aaa
stos
sahf
andl
popf
jno
dec
repz
pusha
adc
out
xlat
ljmp
fsubl
add
and
div
xor
and
or
out
dec
add
add
pop
xchg
popf
push
inc
add
mov
add
inc
adc
cld
pop
push
ja
mov
div
push
daa
aaa
sbb
sbb
mov
sub
aas
shl
pop
jl
mov
mov
lretw
ficoms
xchg
push
ja
inc
pop
ficoml
or
inc
sbb
cmp
out
xchg
arpl
stc
cmp
sbb
dec
pop
and
call
mov
or
xchg
mov
xor
cmc
lret
enter
mov
mov
and
dec
test
repz
xchg
iret
push
cmp
mov
mov
inc
cs
pusha
push
les
push
or
adc
jbe
and
mov
fsubrs
outsb
push
lock
xor
mov
mov
testl
mov
add
inc
in
or
xchg
pop
test
aas
pop
mov
mov
es
into
pop
or
inc
rorl
push
mov
jmp
add
jp
subl
adc
push
aaa
add
lea
out
nop
and
out
and
insb
int
mov
jl
mov
mov
or
stc
adc
cmp
push
xor
inc
mov
sub
insb
jo
movsb
inc
xchg
or
cmc
dec
sbb
imul
mov
incb
pop
cmp
sub
xor
mov
adc
and
bound
jbe
mov
mov
push
outsl
incb
or
add
sbb
lods
insb
out
mov
pop
xor
pop
mov
fisubrs
sbb
test
xor
outsb
ja
mov
aam
add
cs
ljmp
lods
mov
hlt
in
int
or
out
mov
sub
pop
nop
fdivl
or
iret
jbe
mov
push
pop
lock
xor
std
rcrl
divl
mov
rcrl
mov
jo
aas
jp
jbe
add
cltd
loopne
clc
fsubl
cli
notl
stos
cmp
and
pop
cmp
pusha
pop
dec
add
add
sbb
outsb
xor
pop
push
movsl
add
arpl
sub
dec
xchg
jge
sbb
insb
pusha
xchg
gs
xchg
dec
mov
fidivl
call
dec
xorl
pop
mov
lock
aaa
imul
dec
inc
xor
stc
movsl
lret
leave
addr16
out
loopne
aad
sti
insb
mov
inc
inc
cmpb
dec
xchg
push
dec
mov
lods
lock
mov
sbb
mov
loop
pop
jmp
mov
lods
loope
mov
scas
mov
js
int3
dec
sub
mov
aaa
popf
mov
mov
mov
clc
int3
pop
and
lods
scas
or
xor
scas
pop
inc
dec
test
popf
call
xchg
rep
pop
mov
xchg
cld
add
lods
and
push
push
mov
outsl
adc
add
sub
pop
lock
lret
sarb
mov
aad
jp
out
aaa
push
add
push
mov
xchg
mov
dec
jae
mov
gs
out
mov
jb,pt
xchg
pop
addr16
mov
in
mov
cmp
xor
mov
adc
popf
pop
dec
inc
sbb
imul
push
in
sbb
xchg
pop
out
pop
movsl
push
mov
add
xor
in
jecxz
mov
lret
inc
fcomp
outsl
jno
mov
and
mov
jnp
repnz
xchg
lock
rcrl
jae
dec
xchg
sbb
mov
dec
insb
in
out
fildl
pop
clc
pop
into
lret
mov
enter
jle
dec
shr
mov
ja
mov
xchg
outsl
jb
xchg
call
jne
cmp
sbb
and
loopne
jb
lret
jmp
add
cmpsl
push
or
insl
aam
add
fmull
test
ja
out
mov
daa
test
cmp
push
or
sbb
popa
ret
xor
pop
lret
mov
adc
inc
cli
pop
push
or
or
or
inc
add
scas
mov
mov
sub
add
lea
mov
mov
dec
ja
dec
cwtl
stc
dec
mov
jb
dec
fdivrs
out
dec
pushf
repz
and
setae
xchg
sbb
sub
arpl
scas
in
and
hlt
and
jbe
stc
int3
mov
lcall
rclb
out
scas
pop
out
xorb
scas
inc
sbb
cld
iret
pop
pop
xor
dec
jns
jge
push
pusha
test
ud1
and
fnstsw
fnstenv
std
stos
jno
iret
push
out
shlb
adc
add
ss
push
xlat
push
adc
popf
loop
or
int
add
ja
inc
lret
and
stos
loope
jge
jnp
xor
insb
test
dec
jbe
sbbl
push
enter
sbb
and
fistpl
cmpb
mov
test
mov
cltd
lahf
jne
sbb
es
dec
mov
push
int3
dec
enter
pop
jmp
mov
mov
pop
xor
divb
mov
test
xor
push
sub
sbb
or
mov
sti
push
xchg
jmp
in
insb
stc
jle
and
sbb
cmp
leave
lea
pop
sbb
and
imul
fidivl
pop
or
imul
xlat
jne
pop
and
into
sub
mov
js
into
mov
push
aas
insb
sbb
xor
inc
dec
adc
test
jmp
jbe
lret
ret
sbb
cmpsl
xchg
and
pop
inc
out
pop
int3
js
xor
jns
lods
xchg
out
mov
adc
in
adc
add
dec
repz
stos
cltd
in
cmc
js
loopne
xor
mov
adc
cmpsl
xchg
push
mov
clc
jmp
jmp
or
jl
pop
xor
push
inc
sbb
jle
add
jns
cmpsb
inc
xor
rcrl
mov
fwait
dec
xor
sbb
jmp
lods
push
add
rcrl
push
enter
dec
sbb
dec
call
inc
push
ljmp
fnstcw
popa
rorb
inc
push
sbbl
or
movsb
fwait
mov
pop
stos
bound
sub
pop
std
mov
inc
cmp
push
pop
orl
movsb
jno
add
sub
in
stos
xor
clc
mov
leave
imul
mull
test
sarb
lods
or
pop
push
xchg
inc
add
jge
pop
lcall
cli
lret
cmp
mov
cltd
lods
xchg
incb
data16
icebp
adc
cs
cmp
pop
mov
out
xor
adc
jle
cli
imul
repnz
stc
and
vphaddubw
mov
push
cmp
adc
mov
mov
push
out
mov
mov
cltd
add
ror
loope
mov
rcrl
je
popf
sub
js
cli
jo
cmc
xor
aad
push
or
jge
mov
clc
or
fcmovnu
jne
xchg
jo
daa
bound
jg
les
pop
scas
adc
sub
jg
cmpsl
nop
sbb
mov
ficoml
stc
jno
dec
push
sbb
out
call
pop
xchg
test
mov
jecxz
fisubl
pop
daa
push
push
pushf
jbe
push
jno
pop
fscale
push
sahf
lods
cli
lcall
sub
lea
nop
cltd
test
les
or
fwait
jge
xchg
out
mov
icebp
mov
clc
inc
mov
push
iret
enter
jp
leave
fs
xor
sub
xchg
mulb
fcmovnbe
out
repnz
shrl
dec
adc
cwtl
lods
jnp
push
cmpsl
mov
mov
outsl
push
mov
sbb
js
in
and
aas
adcl
push
add
cli
out
or
stos
pop
xchg
add
mov
insl
xchg
jns
cmc
rcll
aam
pop
xor
ret
xor
outsl
jbe
je
pusha
and
loopne
sbb
cmp
adcb
and
in
cld
insb
cmp
popa
bound
fiadds
sbb
pop
call
dec
fdivl
ret
cs
mov
or
pop
cmp
popa
pop
lds
mov
adc
std
xor
xor
rorl
cs
xchg
or
sar
adc
lea
push
loope
and
cmp
stos
js
notl
inc
adc
outsl
sbb
movsb
cwtl
js
lret
xchg
inc
in
cmpsb
dec
mov
shl
sbb
cmp
or
add
mov
pop
movsl
into
pop
gs
inc
or
in
dec
into
jo
nop
adc
sbb
cmp
adc
xchg
cltd
pop
orb
xchg
ret
sti
sysret
inc
adc
pusha
std
loope
ljmp
push
mov
adc
lahf
rcrl
dec
popa
xchg
repz
addr16
aaa
rolb
sub
fidivrs
cmpsl
push
cmp
adc
sub
fldl
mov
rep
xor
lods
and
test
test
sub
fadds
sub
idivb
inc
xchg
mov
mov
sbb
das
stos
inc
pop
es
adc
pop
cltd
out
push
push
add
push
cmp
loop
test
out
sbb
sbb
sub
sti
cmp
sub
xor
push
sbb
sarb
xlat
cmp
add
rcr
sti
cli
and
dec
js
popa
sub
mov
scas
mov
push
push
dec
cmpb
out
push
ja
add
mov
call
outsb
mov
pop
pop
cwtl
push
xchg
xor
bndmov
sub
insl
jno
in
xor
call
fstl
iret
das
pop
cmpsb
xchg
mov
ss
popa
adc
adc
js
inc
cmpsb
xor
mov
jmp
sbb
pop
pop
sub
jle
sbb
dec
mov
sub
aad
les
lret
cmp
mov
push
out
xchg
and
cmpsl
inc
push
iret
mov
and
inc
adcl
dec
or
pop
scas
mov
xchg
outsl
leave
movsb
mov
inc
pop
and
sub
scas
jge
or
cs
adc
movsb
int3
lds
mov
dec
es
popf
add
dec
ljmp
lods
adc
mov
stos
stc
pop
rcrb
adc
pop
sbb
mov
ret
jmp
xchg
lret
das
divb
mov
loope
push
ffreep
and
addr16
bound
aaa
or
lcall
stc
fcomps
xchg
push
inc
es
outsb
mov
stos
sarb
roll
mov
sbb
xchg
jle
adc
adc
call
cmp
add
ucomiss
cwtl
loop
cmp
cmp
clc
mov
or
push
jae
aaa
ror
adcb
push
movsb
and
mov
in
int3
test
lea
push
movsb
sbb
xor
and
aaa
dec
mov
mov
imul
xor
rclb
fistpl
xorps
fisubl
mov
mov
rcl
sarb
ret
repz
add
adc
xchg
sub
add
fcompl
dec
sub
cli
xchg
jecxz
test
cmc
xchg
and
inc
in
jae
xchg
push
adc
jl
mov
cmpsl
dec
dec
or
std
test
mov
sbb
ret
out
xchg
lret
add
sub
mov
mov
sub
movsb
add
js
adc
dec
inc
ds
dec
add
push
outsl
in
in
outsl
outsb
jge
sbb
je
mov
int3
sbb
pop
int3
clc
add
fdivr
arpl
jmp
adc
push
dec
mov
test
cmp
nop
inc
lahf
pop
cs
cmp
add
xchg
sub
dec
sbb
push
cmp
hlt
inc
in
ret
dec
lds
or
cmp
cmp
cltd
mov
mov
fdivl
pop
sub
aam
rorl
push
icebp
jp
lret
dec
lcall
push
push
xor
hlt
sahf
aaa
icebp
aas
jbe
int3
xchg
test
xchg
insl
fidivs
pop
pop
test
insl
iret
andl
mov
mov
xchg
jbe
xchg
mov
push
mov
push
leave
push
aad
push
leave
xlat
es
xor
sbb
aam
adc
jg
lcall
cmpsl
jns
pop
sub
popa
lret
negb
xor
mov
xchg
add
test
fsubrl
fwait
sub
sub
sti
xchg
pop
enter
clc
ss
pop
fcmove
mov
js
in
pushf
loope
jmp
mov
mov
xlat
sub
sar
roll
movsb
sbb
and
mov
or
xor
outsl
push
sub
arpl
xor
fdivrs
outsl
stos
fsubs
inc
rcll
pop
jmp
jmp
add
pop
hlt
jae,pn
pop
sub
repz
mov
repz
je
pusha
cltd
pop
adc
dec
add
movsl
fwait
lea
mov
jle
lock
adc
lock
pop
pop
sub
and
and
hlt
adc
mov
sub
xor
shr
pop
pop
sbb
test
pop
pop
cli
ret
or
cmp
ds
xchg
mov
dec
imul
jb
addr16
fcmovne
cmpsl
loopne
sbb
adc
xchg
mov
add
push
push
bound
jno
sbb
test
push
push
adc
loopne
dec
icebp
xchg
popf
mov
push
pop
aaa
lret
sbb
int3
inc
cmp
lahf
sub
dec
aad
inc
jg
ret
xor
sbb
lret
cli
inc
sbbl
push
dec
mov
mov
pop
inc
pop
xor
xchg
push
adc
push
hlt
xor
insb
xlat
mov
mov
pop
inc
rcl
or
orl
ret
lods
pushf
push
lods
xor
dec
or
jae
sub
outsl
das
dec
and
sub
cmp
scas
dec
ds
movhps
cmpsb
sbb
inc
dec
dec
in
inc
scas
mov
or
cmpsl
jp
test
scas
std
or
stos
inc
or
push
repnz
pop
outsb
int
lods
cmp
mov
push
jl
pop
cmc
test
and
repz
dec
enter
clc
rolb
pop
mov
jns
lret
sbb
add
mov
or
jge
out
mov
aaa
inc
scas
jp
shlb
jns
fs
addr16
fwait
stc
popf
xor
in
stos
or
fadds
xchg
test
mov
fcompl
and
aas
fistps
iret
popa
mov
sub
jae
cmp
cmp
xchg
adc
out
aaa
add
addr16
mov
mov
aaa
popa
add
shl
and
xchg
push
pop
loop
shlb
inc
ljmp
subl
dec
inc
mov
cld
idivl
out
push
loopne
sub
xchg
mov
stos
leave
mov
decl
sub
pushw
je
mov
jae
bound
insl
mov
clc
sub
adc
out
cmp
fwait
or
jp
push
mov
insb
push
add
andb
rolb
aas
test
lret
out
and
repnz
lock
mov
cwtl
outsb
fildll
cmp
rol
mov
jecxz
pop
push
inc
add
movsl
mov
adc
out
jno
push
jg
cwtl
int
push
mov
and
jp
jno
cmpsb
dec
out
inc
pop
jp
jb
add
mov
hlt
jne
dec
cmp
xchg
jg
push
xchg
mov
mov
stos
ja
xor
dec
outsl
lods
lahf
adc
fmull
sub
shll
cmpsb
mov
sub
nop
rcrl
fnstenv
ffree
xor
fsubr
in
xor
adc
ficoms
test
add
xchg
fildl
or
mov
lret
dec
or
icebp
mov
pusha
gs
dec
pop
or
sbb
xchg
mov
xrelease
xor
pop
dec
fwait
es
inc
inc
int
lea
in
and
sub
push
in
js
mov
mov
xor
aaa
movsl
es
das
into
sbb
cmp
dec
pop
dec
hlt
repz
scas
cmp
or
ss
push
pushf
insl
pop
aas
push
outsb
movsb
and
xchg
push
and
mov
leave
or
pop
imul
sbb
mov
gs
fwait
leave
mov
add
mov
ljmp
imul
pop
and
xor
jl
bound
fwait
or
xchg
dec
ds
or
push
gs
cmp
mov
pusha
inc
xchg
mov
jle
pop
sbb
bound
cmp
fwait
cmp
je
sub
cs
in
mov
push
test
inc
fwait
pop
repz
icebp
bound
imul
xor
in
dec
call
addb
sbb
and
mov
pushf
cmp
mov
insb
iret
adc
repz
add
scas
push
out
icebp
mov
add
pop
inc
xchg
lahf
rolb
adc
sbb
push
jo
repnz
push
xor
pop
rcl
cmpsl
jb
add
push
adcb
adc
add
adc
leave
push
mov
jl
ja
add
movsb
adc
gs
fst
out
jl
pop
inc
push
add
ljmp
adc
jecxz
jl
jnp
cmp
inc
xor
sub
push
mov
nop
fcomps
aas
aad
inc
fimuls
pop
mov
dec
arpl
call
enter
jo
mov
rol
and
ret
jmp
mov
xchg
jge
sub
jb
fstp
mov
push
out
out
repnz
fildl
mov
push
xchg
cmp
mov
jp
out
loopne
popa
mov
ret
xchg
leave
and
es
jno
daa
cmp
out
into
lcall
loop
xor
mov
xchg
sub
and
dec
adc
xor
push
or
pop
mov
and
fiaddl
insb
fs
push
fisttpl
inc
lds
pusha
fucomp
int3
jo
popa
in
or
xor
adc
hlt
incl
lods
loope
cli
xor
in
cmpsl
lea
jno
loopne
mov
sbb
dec
ja
jge
xchg
dec
jb
or
jg
daa
jb
dec
or
adc
inc
xchg
push
pop
dec
xchg
inc
enter
es
sbb
pop
mov
push
xchg
movsb
inc
add
lret
loopne
lods
or
gs
jl
fdiv
sar
dec
in
out
out
nop
test
fsubrs
sbb
mov
mov
add
lods
outsl
pop
mov
xor
js
or
pop
rcll
es
xor
adc
xchg
int3
mov
sbb
mov
sub
mov
lods
mov
js
jbe
lcall
mov
add
mov
cmpsl
in
sub
dec
mov
push
filds
dec
xor
cs
xchg
push
arpl
cmc
xor
lahf
rcl
adcb
aam
adc
js
dec
mov
jns
or
jg
lock
imul
and
xchg
popf
jmp
fcoms
iret
push
jge
enter
jge
mov
mov
add
xorb
cmp
add
outsb
xchg
notl
aam
mov
aam
inc
inc
adc
sub
imul
xor
cwtl
xchg
hlt
loopne
mov
xchg
add
push
mov
or
xchg
push
push
call
xchg
xlat
jne
jge
sbb
xor
enter
xchg
sub
hlt
andl
mov
jecxz
or
push
jo
or
int
push
repz
repz
inc
xchg
lcall
scas
fimuls
ljmp
pop
sub
test
mov
add
jo
mov
and
shlb
push
cmp
mov
xchg
push
imul
sbb
xchg
dec
je
xchg
mul
lahf
mov
test
pop
mov
xor
xchg
pusha
aad
and
add
pop
not
sbb
aaa
xchg
dec
dec
lret
mov
dec
xchg
jnp
adc
lahf
dec
add
mov
dec
xor
sub
push
ds
leave
dec
sbb
jno
xor
sub
pop
push
dec
enter
iret
cmpsb
in
or
aaa
popf
fadds
arpl
sbb
sbb
ss
ret
push
punpckldq
js
icebp
xchg
sarl
inc
xchg
jecxz
sbb
xchg
xor
data16
fiadds
push
pop
ljmp
push
xchg
andb
fidivrl
test
push
in
scas
pusha
mov
add
in
sub
jecxz
jne
push
pop
testb
cmp
mov
inc
cltd
xor
aaa
js
cmp
rcl
ljmp
sbb
incl
sub
in
jns
push
xor
add
mov
scas
cmp
lcall
mov
push
cmovp
and
in
dec
mov
xor
mov
inc
jmp
aam
jne
xor
std
cmpsl
xchg
push
mov
mov
stos
in
mov
jo
repnz
test
cmp
jb
jle
daa
lret
aaa
push
cmp
xchg
daa
cmpsb
es
ja
inc
sbb
jecxz
jo
jp
jmp
jl
sbb
add
or
adc
flds
dec
test
xor
cmpsb
in
xchg
mov
xchg
pushf
testl
xor
std
pushf
sub
xor
push
jae
add
sub
inc
call
push
fcmovb
lods
lahf
lock
cmpsl
dec
xor
xor
jnp
loopne
inc
sub
jmp
stc
negl
ficomps
int
push
xor
xchg
cld
pusha
jmp
push
scas
sbb
pushf
sti
sbb
cmpsl
dec
stos
push
movl
test
jae
or
imul
outsl
in
sub
inc
push
inc
lret
pop
js
aas
daa
pop
adc
lods
cwtl
and
hlt
roll
pop
repnz
inc
push
jbe
stos
out
ficoms
mov
data16
dec
std
rcr
mov
lods
jle
dec
xchg
inc
push
shrl
and
inc
call
push
sti
xchg
push
sub
pop
mov
adc
repz
in
daa
xor
adc
in
notl
sbb
js
js
push
je
xchg
adc
movb
jno
and
addb
dec
push
fsubp
ss
ret
rcrl
rcr
ret
mov
pop
mov
mov
add
add
cmp
pop
add
cld
ret
jmp
and
cmp
xchg
cli
mov
sbbb
ret
repz
popa
pop
xchg
sub
fmul
mov
push
lock
xchg
cmp
int3
jae
or
xchg
jecxz
sarb
push
mov
jp
jne
cwtl
sub
loope
xor
push
leave
pushf
jnp
xor
jecxz
xor
sbbb
pop
fwait
mov
imul
and
lea
mov
sub
xor
adc
decb
add
in
cmp
push
les
mov
mov
mov
lcall
scas
sbb
jge
push
insb
faddl
or
aad
sub
in
decb
mov
test
jge
sahf
push
mov
pop
add
iret
shll
jb
std
scas
stos
inc
push
nop
adc
push
push
adc
cmpsl
cmp
xor
das
ficoml
inc
loop
mov
cmp
and
bound
js
das
andb
mov
sbb
xlat
xchg
loope
stos
lahf
or
arpl
test
mov
dec
in
outsb
xor
inc
jmp
and
popf
in
push
inc
adc
xor
js
es
mov
dec
and
pop
xchg
inc
pop
adc
pop
mov
ljmp
fwait
mov
paddusw
popa
daa
push
xor
nop
push
test
jb
pop
insb
retw
mov
cli
jb
sbb
in
das
sar
cmp
sub
decl
inc
gs
mov
mov
loope
jnp
xchg
add
and
ss
cmp
adc
mov
dec
mov
add
jnp
shlb
int
sbb
add
jle
xchg
outsb
mov
sub
cmp
xor
insl
pop
ljmp
jecxz
push
cmpsl
push
push
inc
icebp
shrl
jg
mull
int
imul
sub
lcall
mov
dec
adc
sbb
xchg
and
jmp
jns
push
dec
into
xchg
push
cmc
sbbl
xor
pop
jge
pop
cmp
mov
cmc
int
mov
add
fucomp
loop
xor
and
les
dec
cmc
jo
icebp
xchg
das
push
int3
xor
and
or
sub
mov
lods
cwtl
int
jo
mov
inc
add
ljmp
cmp
stos
push
adc
cld
roll
adcl
mov
imul
bound
and
aaa
push
add
xor
dec
xchg
sub
push
jbe
je
and
daa
inc
fists
inc
mov
shlb
push
lret
std
aam
add
add
adc
add
or
cltd
ret
ss
sub
push
cmp
xor
and
test
lods
ss
mov
lret
roll
xchg
xorb
repz
je
pop
and
jl
es
jo
jb
out
sbb
out
mul
mov
cmc
sahf
push
jecxz
jle
test
xchg
xchg
movsw
pop
jnp
cltd
or
jecxz
xor
scas
push
mov
int3
leave
aas
pop
mov
mov
rcrl
jge
test
rclb
testb
jg
repnz
bound
je
pop
push
or
sub
loope
shlb
dec
mov
aad
pop
and
adc
add
push
ljmp
xor
es
push
in
mov
fidivrl
pop
repz
fldcw
aad
cli
loopne
movsb
adc
and
test
and
push
add
cmp
jae
sbb
stos
jge
cltd
test
xor
xor
and
pop
stos
jecxz
rol
push
pop
int3
out
inc
push
cmpsb
ficompl
or
into
arpl
xor
xor
inc
mov
movsb
jg
sub
xor
aam
xchg
and
mov
fimuls
mov
ficoms
fdivrl
sbb
xchg
mov
push
sar
test
xchg
mov
add
out
xor
dec
adc
push
icebp
clc
rcr
push
jmp
fldcw
mov
dec
decl
pusha
in
mov
dec
enter
add
mov
mov
add
pop
or
adc
mov
mov
test
inc
pop
pushf
pop
mov
cmpsl
js
dec
jo
rorl
arpl
cwtl
and
pop
dec
mov
addr16
ss
popa
sub
out
add
xchg
push
fldenv
and
xlat
popa
push
or
jb
xchg
mov
aad
xor
add
aam
jge
dec
stos
arpl
sub
stos
sub
jl
clc
push
dec
test
and
aad
aam
pushw
jg
pop
push
shrl
inc
dec
xchg
pop
jae
cs
xchg
mulb
dec
mov
jne
inc
btc
sbb
jns
xlat
xor
scas
in
add
fisttps
addl
cmpsb
clc
popa
aaa
icebp
jo
jle
jmp
pop
xor
sbb
xor
jl
rep
cmp
fidivrl
mov
push
mov
ds
ljmp
pop
dec
outsl
out
sbb
in
adc
repz
cmp
int
mov
inc
cmc
enter
jmp
xchg
cmp
outsb
insl
pusha
aam
in
adc
pop
mov
cmpsb
dec
stos
mov
outsl
and
dec
sub
cmp
vxorps
lds
adc
je
fstl
cmp
xchg
leave
jle
push
mov
ffreep
mov
inc
mov
rcrl
iret
mov
adc
fldt
fsubrp
scas
inc
fadds
stos
dec
mov
popf
push
mov
jg
pop
sbb
loop
pop
outsl
jecxz
scas
cmp
and
mov
inc
pop
stos
pushf
dec
mov
jmp
jns
mov
mov
addr16
push
sbb
pop
mov
sub
inc
test
inc
mov
out
aas
push
hlt
xor
inc
mov
mov
loopne
aad
inc
test
das
xchg
xlat
push
inc
data16
fwait
cmp
lea
mov
scas
outsl
lods
sbb
cs
imul
or
xchg
iret
cmpsl
aad
loope
stc
push
es
int3
movl
loope
pop
sbb
stc
mov
jp
mov
fld1
mov
out
cmp
push
cmp
subb
jp
mov
push
pop
push
enter
out
shll
add
arpl
fildl
add
sub
out
inc
aas
xchg
or
arpl
and
rol
cmp
rolb
push
mov
in
mov
push
jb
cld
lds
ds
add
stos
out
add
enter
xchg
aaa
rcr
scas
in
nop
xor
and
jnp
movsl
inc
sub
and
jb
call
add
mov
add
xchg
shrb
jb
stos
cmp
ljmp
sarb
lods
hlt
nop
int3
inc
ljmp
orb
inc
mov
clc
xor
xor
aaa
int
fwait
jns
mov
adc
ret
jo
inc
gs
mov
inc
or
xchg
xchg
push
sbb
ja
int3
mov
and
cmp
rcrl
push
mov
pop
ss
xlat
mov
rol
in
js
ja
icebp
insb
inc
inc
outsb
adc
testb
inc
loop
fwait
int
fwait
inc
out
mov
xor
add
testb
pop
out
addr16
or
cwtl
jge
xchg
je
das
pop
push
cmp
pop
aaa
lock
inc
sahf
cmpsl
mov
fstpt
out
cltd
inc
jg
and
sbb
sub
jl
cmp
add
repz
xchg
icebp
pusha
ficoml
xchg
orb
jns
nop
jae
out
cmpsl
movsl
popa
dec
scas
sbb
loop
xchg
xor
and
cmp
dec
push
push
repnz
add
sbb
stc
jnp
adc
movsb
sbb
adc
push
add
lods
in
xchg
or
and
sbb
push
call
or
xchg
cmp
test
push
adc
pop
insl
js
xor
cltd
js
aaa
mov
push
add
test
outsl
push
lock
sbb
subl
jbe
rcrb
dec
cmp
jle
lcall
add
call
outsl
int
addl
pop
add
outsb
daa
push
sarl
add
icebp
mov
loop
sub
sbb
inc
xor
dec
inc
repz
aad
inc
cmpsl
push
mov
mov
cmc
nop
es
ret
fcmovnbe
and
fbld
mov
mov
stos
int3
loop
cmp
sub
insb
add
or
xor
insl
push
sahf
sub
sahf
pop
loope
jle
xchg
mov
iret
cmpsl
inc
cmpsl
fs
mov
push
rorl
mov
sti
sub
mov
lret
or
inc
mov
inc
rcr
fistl
in
cmp
jne
ss
adc
mov
inc
mov
xor
add
push
rol
popf
rclb
mov
pop
mov
movsl
dec
or
sub
es
adc
pop
mov
imulb
out
ljmp
jns
aaa
mov
dec
cmp
sbb
mov
ljmp
and
imul
fdivrl
adc
mov
lock
cmp
cld
inc
inc
push
cmp
cmp
sub
call
aad
push
jb
fnstsw
in
xchg
push
daa
dec
lds
stos
repz
roll
stc
push
andl
xchg
xchg
cmp
mov
int
xor
data16
movsb
sbb
or
mov
dec
adc
mov
and
lcall
jns
pop
into
push
or
dec
jb
xchg
jg
add
push
std
jb
xor
inc
dec
pop
xchg
adc
add
hlt
in
inc
mov
add
mov
ljmp
jb
iret
adc
loope
icebp
push
mov
dec
subl
sub
mov
cmp
pop
pop
add
fcmovne
ss
cld
in
ret
lahf
int3
inc
lods
hlt
pop
hlt
jecxz
sbbb
std
pop
mov
into
pop
jbe
mov
cmp
cwtl
inc
sub
mov
aad
aas
sbb
insb
xchg
adc
cmpsb
aas
inc
aad
iret
rcrb
aas
mov
cmp
cmp
cmp
aaa
add
test
xchg
in
mov
adc
mov
inc
push
mov
cltd
ljmp
inc
les
sub
inc
inc
push
sbb
popa
lret
movb
sbb
xchg
int3
aas
incl
xorl
dec
popf
jp
test
ret
mov
xchg
jns
push
and
dec
cmp
sub
adc
cmpsl
fists
scas
popa
in
pusha
nop
repz
xchg
sub
pop
lret
aad
sbb
fisubl
loope
cmp
mov
and
mov
adc
test
fs
scas
push
or
test
test
movswl
xor
inc
add
mov
ja
in
int3
mov
jno
xlat
add
loopne
or
push
xchg
inc
xchg
inc
xchg
xlat
mov
add
outsl
add
dec
jns
cmpl
std
add
add
push
aas
mov
and
inc
fcmovnb
xorb
jo
shr
std
add
cld
roll
push
sahf
adc
push
cmpsl
add
mov
js
call
les
adcl
or
sub
mov
in
mov
arpl
sbb
sbb
dec
push
push
ljmp
iret
je
shll
pop
push
mov
pop
testb
scas
inc
in
outsl
xchg
add
or
jnp
sub
das
dec
jbe
jp
lock
dec
in
lds
sub
and
xchg
jecxz
inc
push
jp
jge
jp
push
out
cmp
shlb
sub
addl
out
stos
rcl
xchg
lods
dec
add
jnp
out
inc
add
sub
repnz
jno
jno
lret
lret
test
in
push
sub
push
mov
xor
js
pop
pop
cmpsl
jbe
dec
flds
aad
pop
xchg
scas
mov
data16
testl
stos
fsubs
movb
and
fs
pop
push
lret
push
jp
xchg
fidivrl
push
pop
dec
sub
fmul
push
jg
pop
popf
cld
inc
cli
add
into
mov
push
mov
lret
popf
pop
hlt
mov
sub
stos
out
stos
push
lock
iret
cwtl
adc
pop
fmull
adc
sub
cmp
std
into
movsl
or
or
cmp
inc
mov
cmp
jp
mov
mov
lret
and
xchg
push
push
jbe
insl
mov
cmp
xchg
int
and
bsr
pop
leave
pop
stos
xchg
es
cli
lds
cmp
mov
call
adc
mov
popa
cli
pop
test
push
cwtl
sbb
mov
std
dec
inc
call
inc
cmp
jle
cs
sub
test
daa
mov
cmpb
mov
rorl
pop
sbb
idiv
leave
mov
shrb
lahf
xchg
dec
aas
adc
mov
fistl
shll
push
cmp
mov
or
push
dec
and
sbbl
int3
sbb
aaa
pop
sarb
stos
cmp
rolb
scas
jns
pop
sbbl
pop
repnz
xchg
jmp
jmp
jmp
adc
je
aaa
mov
push
lcall
test
ljmp
dec
mov
inc
sub
inc
rorl
sar
add
mov
or
dec
xor
cmp
xchg
repnz
mov
daa
scas
loope
cmp
jbe
stos
xchg
je
xor
or
insb
add
xchg
dec
xchg
ret
roll
sarl
jo
outsl
sti
ss
adc
sahf
leave
xchg
jecxz
icebp
push
push
sahf
adc
push
iret
cmp
cmpsb
gs
xchg
sub
lods
mov
sbb
lahf
repz
pop
dec
int3
jns
push
outsl
pop
mov
sub
cmp
lds
inc
clc
outsl
inc
aad
int3
mov
fildl
shrb
mov
push
push
into
add
orb
cmpl
sbb
jbe
imul
sub
dec
or
cmp
aad
adc
imul
inc
xchg
inc
xor
in
clc
sahf
push
add
push
push
xchg
out
inc
push
ja
call
stos
and
push
pushl
dec
call
inc
loope
mov
testl
jns
and
jge
jmp
pop
pop
out
sti
and
sbb
sub
out
lock
repz
insb
sbb
out
cmp
adcb
ds
jecxz
push
xor
jg
sub
dec
scas
repnz
add
jg
shrb
rcr
je
cs
gs
lods
inc
scas
inc
mov
hlt
test
push
xchg
dec
fnstenv
test
sub
pop
es
cmpsb
sahf
mov
leave
sarl
dec
sbb
dec
xchg
push
imul
dec
xor
push
je
repz
cs
pusha
xor
fildll
and
jns
push
enter
jnp
cmpb
jp
xchg
adc
aad
loop
sbb
push
cmp
sbb
sbb
xchg
xor
loope
lret
icebp
fs
push
nop
cli
mov
bound
fld
add
mov
int
clc
jns
add
dec
push
mov
addr16
push
jb
icebp
jl
mov
and
clc
jnp
jl
and
or
mov
jmp
push
jnp
sar
mov
popa
or
in
cmpsb
fistps
jcxz
int3
cmpsb
pop
call
aaa
gs
mov
push
dec
xchg
cwtl
mov
stos
mov
jmp
pop
mov
xorl
xor
cmc
push
shlb
pop
pop
int3
aas
in
cwtl
sbb
pusha
xorb
and
sti
and
xor
popf
xchg
popa
es
idivb
add
loopne
jne
cli
enter
cld
pushf
idivl
mov
pop
mov
mov
or
adc
or
jns
in
xchg
add
negl
insb
ljmp
in
shrl
in
pusha
xor
ja
pusha
scas
or
push
push
mov
jno
lret
sarb
scas
push
lods
leave
nop
and
out
mov
movhps
call
imul
add
js
popf
mov
adc
sbb
push
ret
cmp
and
pop
mov
inc
mov
dec
xchg
into
insl
mov
shl
daa
negb
inc
repz
pop
mov
and
sti
jnp
test
scas
mov
push
or
add
pop
stos
cwtl
aaa
xchg
add
stos
aam
pop
mov
addb
scas
iret
or
cmp
sar
jmp
fists
pop
inc
or
push
mov
sbb
adc
xor
lea
inc
in
xchg
mov
mov
pop
push
out
ss
cmp
fistpll
adc
push
mov
cli
std
repz
fiadds
push
arpl
and
cmp
cld
pop
pop
and
daa
mov
mov
xchg
pop
movb
shll
mov
lret
jnp
mov
or
jb
in
stos
outsb
out
and
icebp
add
loopne
adc
xchg
adc
test
pop
addr16
xchg
mov
fisttps
insb
push
xor
mov
push
sahf
cli
dec
pusha
mov
popl
stos
cltd
bound
test
cs
in
dec
orl
daa
jne
js
icebp
testl
js
pusha
cmp
sub
mov
and
ret
movsl
cli
aad
mov
xchg
xor
push
daa
das
jmp
mov
sbb
bound
mov
add
xor
push
shl
mov
mov
sbb
xchg
orl
push
xchg
in
flds
sbb
adc
stos
outsl
cltd
sub
cmc
in
dec
loopne
xor
jo
jg
jge
xchg
cmc
sub
jae
inc
jg
cmpb
jg
mov
cmc
dec
cmp
aad
stos
mov
inc
lea
mov
sbb
inc
and
gs
inc
mov
rorl
insb
jecxz
ret
pushf
test
scas
insl
pop
xchg
je
xlat
loopne
cld
mov
and
imul
push
or
fnstcw
pop
xor
faddl
and
pusha
pusha
jle
es
pop
and
les
and
and
inc
inc
dec
leave
loope
inc
lret
push
ljmp
out
push
fwait
jmp
push
daa
rep
frstor
in
sub
jns
pop
fsubs
cmpsb
gs
adc
daa
idivl
or
mov
scas
test
xor
xor
sbb
jge
or
aaa
arpl
pop
lods
outsb
cld
pop
leave
mov
inc
lahf
gs
jmp
xchg
inc
repz
and
dec
loope
mov
ficoms
das
aas
push
notb
sbb
mov
adc
lods
cmp
jb
add
outsl
outsl
adc
push
int3
sti
decb
xor
mov
dec
pushl
fwait
jns
or
sarb
das
add
aam
ficompl
dec
adc
cmp
mov
inc
pop
divl
rolb
sub
mov
lods
and
and
pop
dec
mov
imul
test
repnz
popa
mov
mov
push
addr16
and
pop
cmc
stos
js
mov
movsl
mov
fwait
sub
mov
lret
ret
negb
std
mov
sub
add
push
aaa
cli
mov
pop
xor
inc
fucomip
addr16
mov
dec
xor
cmc
lret
les
push
outsl
enter
mov
shrl
scas
ret
sbb
ljmp
jmp
loope
mov
dec
daa
mov
bnd
xchg
add
aaa
stc
pop
mov
push
sbb
jmp
lret
dec
int3
les
mov
or
push
adc
adcl
push
sbb
add
test
or
push
mov
mov
fcoms
or
clc
xor
shl
hlt
leave
xchg
push
xchg
mov
dec
jl
mov
pop
sbb
repz
jge
add
negb
cmp
xchg
imul
insb
jb
into
ret
cmp
rcrl
shll
int3
adc
cmp
mov
jl
lds
cmc
jp
cmp
shll
dec
sbb
or
fnstcw
jp
mov
loope
push
pop
pop
imul
inc
pop
sub
mov
pusha
xchg
cmp
dec
hlt
sbb
stos
sarl
scas
jmp
mov
cmp
adc
cltd
cmp
scas
and
jne
mov
pop
inc
push
loope
pop
sub
mov
xor
inc
push
mov
cmp
xchg
pop
dec
and
mov
dec
cmp
popa
loop
and
pop
jns
aas
aam
or
scas
in
cmp
inc
sbb
and
xchg
dec
out
in
inc
aam
enter
pop
or
divl
xchg
xor
inc
jno
lret
hlt
dec
jns
ds
mov
aas
loop
sbb
jl
inc
xchg
jno
shrb
or
adc
xchg
or
cmp
imul
scas
push
adc
nop
pop
xchg
stos
popa
cmp
aam
loope
mov
jg
cld
cmp
insl
xchg
cwtl
xchg
xchg
ljmp
je
cmp
jns
sti
pop
cmpsl
mov
int
bound
aas
in
cltd
cltd
add
nop
push
inc
das
lahf
jecxz
mov
outsl
repz
js
cmpsl
add
mov
push
loopne
ds
jecxz
loopne
jecxz
mov
js
in
pop
mov
sbb
jle
sub
pop
popf
jp
pop
lcall
dec
sbb
or
stos
fcmove
fistl
jmp
pop
movsl
adc
inc
jns,pt
sbb
xchg
mov
dec
or
roll
pop
xlat
cld
addr16
popf
fcompl
mov
sti
xchg
cmpl
jmp
cmp
pop
roll
jae
push
mov
add
and
fsub
shl
adc
leave
lcall
leave
nop
sbb
mov
int3
xchg
mov
inc
pop
out
xchg
sti
adc
pop
loop
adc
out
mov
int
sti
jl
popa
mov
scas
push
xlat
mov
pop
xchg
repz
xor
test
or
mov
dec
dec
xchg
data16
sub
xor
movsb
dec
and
loopne
out
ja
imul
fldcw
mov
stos
jo
mov
dec
jmp
lret
mov
jmp
mov
adc
pop
in
icebp
sbb
dec
leave
fldenv
adc
clc
stos
or
fnstcw
mov
fs
stos
inc
imul
int3
movsb
bound
xor
cmpsl
stc
xorl
dec
icebp
pop
mov
in
fsts
movsl
adcl
or
pop
and
lods
loopne
mov
popf
xor
aad
sub
or
mov
mov
inc
xchg
jl
sub
mov
outsl
popa
cmp
insb
or
adc
and
jle
movsb
int3
and
sbbl
push
cmp
ds
icebp
pop
inc
cmp
pop
int3
daa
testl
mov
fs
clc
sub
add
and
sbb
aam
xor
mov
cmp
mov
sub
jae
std
fidivrl
adc
stc
cmp
jp
ret
ds
and
mov
pop
pop
dec
movsb
pushl
and
mov
and
xchg
dec
xor
movsb
jmp
xchg
mov
push
pushf
data16
fistpl
pop
and
add
idivb
mov
mov
push
xchg
push
cmc
leave
pop
js
sub
or
dec
cmc
outsl
xchg
and
ffree
mov
in
cmp
dec
xchg
sbb
xor
mov
jo
mov
aas
push
cli
cmc
dec
shll
sbb
add
pop
xchg
psadbw
shrb
pop
add
pop
lcall
adc
cmpsb
hlt
adc
mov
adc
idiv
adc
pop
vpaddsb
sbb
mov
and
push
int
fldl
decl
push
mov
dec
mov
adc
mov
stos
lret
inc
and
pop
inc
sar
stos
cld
imul
leave
sub
mov
std
push
iret
lea
jae
cld
sbb
mov
push
jno
lret
push
ss
out
xlat
dec
dec
and
fwait
xor
add
cld
pop
sub
movsl
xor
add
stos
mov
adc
popf
mov
movsb
dec
into
fwait
xor
mov
aam
or
xor
mov
push
sub
stos
dec
lea
inc
shlb
mov
and
xchg
int
imul
inc
imul
int3
daa
xcrypt-cfb
cmpsl
mov
push
mov
shl
push
xlat
or
subl
push
xchg
sub
sahf
xlat
mov
sub
xor
mov
mov
rcll
fistps
mov
andb
push
movsl
jno
insb
je
or
jp
xor
mov
mov
inc
sbb
lock
js
in
scas
pop
xor
xchg
ficompl
mov
mov
fwait
movsb
cmpsl
push
add
test
sbb
sar
shll
dec
shrb
cmp
push
in
rcl
mov
pusha
loopne
dec
jno
enter
loop
ret
sub
sti
lcall
xor
pop
in
lds
mov
xor
cli
sbb
mov
add
loopne
outsb
dec
pop
mov
imul
inc
push
lea
lods
in
test
repnz
jle
stc
jl
push
xchg
inc
subb
lods
pusha
and
aas
pop
mov
ja
negb
mov
sub
xchg
loopne
pop
fstps
jbe
add
data16
mov
push
cld
pop
pop
sub
push
cmp
sub
mov
insl
fnstcw
mul
cmc
mov
inc
loope
and
fchs
jle
inc
xorb
and
add
mov
ja
pop
push
mov
inc
pop
fistps
es
rclb
test
test
dec
push
jo
pop
push
xor
das
adc
adc
frstor
mov
cmp
gs
std
mov
out
jno
rorb
sub
aad
sub
xchg
out
movsb
loopne
cmp
test
aas
out
pop
lahf
in
and
outsl
jbe
push
add
or
or
lcall
push
sub
leave
pop
adc
fistpll
faddl
xchg
xor
rcrb
pop
push
outsl
jge
fiaddl
push
and
stc
fiadds
into
pop
rcr
sub
cmp
cmp
jp
and
ret
repnz
push
loop
pop
jg
negl
leave
push
mov
jg
jo
pop
bound
pop
cmp
xchg
lods
out
jnp
pmaxsw
sti
sub
and
add
fistpl
xor
rcrb
mov
xchg
cld
scas
movsl
lods
neg
idivb
negl
jle
jbe
mov
inc
insl
cltd
enter
mov
ljmp
insb
ds
jnp
pop
or
daa
jne
cmp
je
jns
loope
xchg
and
stc
ret
inc
cs
pushf
in
fnsave
les
cmp
or
sub
dec
ret
pop
pusha
outsl
mov
push
and
pop
inc
cs
int
dec
add
hlt
jg
dec
aad
loopne
sahf
cwtl
mov
cmp
xor
jp
ffree
add
inc
jl
inc
hlt
fsubrp
xor
mov
pop
add
rcll
bnd
sti
pop
cmovo
xchg
mov
mov
cltd
lock
push
lds
sub
inc
xor
mov
out
push
cmp
arpl
dec
in
rclb
fnsave
cmp
sub
jo
test
stc
mov
in
mov
xchg
jb
divb
inc
outsl
pusha
sahf
push
push
notb
dec
mov
arpl
dec
cltd
addr16
rcll
cvtdq2ps
adc
jo
sbb
and
mov
jne
mov
jmp
sbb
lret
and
test
dec
pop
jl
mov
xor
loope
dec
or
lds
cmp
or
pop
jl
int3
sbb
gs
sbb
or
add
sub
xchg
xor
retw
movsl
aaa
decl
out
inc
mov
mov
loopne
js
and
xchg
jmp
popa
mov
lods
jnp
pop
iret
cmp
xchg
in
xor
push
push
cmp
xchg
test
rcl
outsb
or
lock
arpl
jmp
test
mov
add
rcll
out
cmp
outsl
jmp
lods
in
rorb
mov
loope
inc
jnp
sub
adc
cli
shl
cmpsb
aam
lcall
mov
fsubrs
add
xor
iret
jno
add
sub
push
lods
jge
pop
xchg
mov
cmp
xor
sub
cmp
fdecstp
popf
mov
pop
cltd
cmc
fidivs
enter
mov
sub
mov
rorl
sub
pop
pop
out
sahf
loope
add
and
add
push
test
sub
jne
sbb
xchg
or
hlt
in
pop
push
mov
xchg
cwtl
xor
les
insl
cmp
loope
mov
jo
aam
fmull
push
mov
jo
xchg
mov
shrb
sbb
xchg
pop
lds
sarb
or
ds
push
adc
pop
leave
pop
loop
dec
scas
test
xchg
neg
mov
in
out
pushf
filds
lds
cs
into
cmp
dec
dec
dec
dec
cmp
xchg
sbb
adc
lock
add
adc
imul
sub
dec
pop
ror
mov
pop
loopne
jle
push
mov
das
mov
popa
ljmp
dec
dec
xchg
mov
inc
loope
roll
add
add
mov
shlb
call
jbe
push
in
or
movsb
xchg
shrb
stos
pop
push
arpl
mov
popf
orl
and
push
mov
or
and
sub
imul
fwait
dec
adc
adc
fists
shlb
test
cmp
pop
loope
out
jbe
repnz
and
in
cmp
pop
pop
inc
loope
stos
movsb
adc
ljmp
ljmp
repz
lock
xor
loope
mov
inc
mov
jno
in
cmp
xchg
inc
mov
mov
sub
int3
mov
adc
in
xor
sub
dec
fidivl
mov
jg
dec
lahf
lret
fidivs
cmp
int3
xor
gs
loopne
xchg
push
push
rorl
arpl
hlt
loop
sbb
inc
xor
xchg
inc
add
sbb
cmp
je
in
test
mov
sub
or
pop
mov
xchg
push
jg
stc
sub
mov
or
std
lds
punpcklwd
mov
pop
sbb
sub
pop
push
addl
mull
std
incb
ss
in
pop
out
in
jmp
movb
dec
mov
adc
jp
dec
loop
jl
outsb
mov
into
hlt
out
jns
shlb
xlat
add
cs
xchg
sbb
xchg
pop
xchg
sti
ret
sti
xor
cmpsl
jae
into
mov
inc
scas
and
aaa
bound
movsb
dec
popf
shrb
mov
fsubr
pop
xor
pushf
mov
mov
sub
dec
sub
mov
into
pop
shrb
push
jnp
dec
fistpl
adc
lret
lods
adc
and
or
and
in
mov
rorb
inc
inc
sbb
std
mov
int
repnz
xchg
lods
lock
movb
mov
jnp
cwtl
sbb
dec
scas
divl
push
and
and
sbb
mov
or
mov
popf
pop
fs
xor
in
mov
in
dec
cli
jns
cmc
icebp
aam
adc
imul
inc
and
pop
das
jmp
test
bound
leave
xchg
xor
jb
shl
jge
mov
fwait
jns
and
pushf
in
sti
subb
jnp
mov
mov
lcall
mov
mov
mov
mov
fisttpll
ret
jp
lahf
mov
mov
dec
mov
push
xchg
lods
imul
mov
cltd
fwait
inc
popl
cmp
lcall
xlat
xor
xor
pushf
mov
add
push
imul
sub
mov
iret
fmull
sbb
inc
or
cmovbe
retw
dec
xor
shl
or
push
imul
scas
lock
aad
rolb
mov
rclb
int3
inc
and
mov
repnz
fiaddl
dec
cmp
sbb
inc
pop
aas
jle
sbb
in
push
lret
mov
cltd
xor
jp
imul
loop
xor
dec
inc
mov
les
add
in
push
insl
enter
fstpl
dec
cmp
enter
aas
int3
or
xchg
std
push
mov
or
jbe
daa
test
popf
or
mov
lcall
insb
ret
xor
insb
pop
xchg
inc
cltd
pop
pushf
mov
sub
jno
stos
xor
les
out
clc
das
dec
jae
shl
add
mov
les
into
addr16
das
pushf
add
mov
dec
and
orb
repz
xchg
and
jne
inc
jle
mov
xor
adc
nop
sub
daa
movsl
mov
sbb
dec
mull
or
sbb
or
pop
pusha
hlt
push
clc
xor
sbb
mov
mov
sub
adc
push
xchg
bound
ror
test
loopne
lret
lahf
icebp
mov
fstl
inc
or
dec
adcl
in
sbb
push
or
sbb
in
clc
rcrl
jl
orb
pop
in
repz
jb
mov
stos
inc
ljmp
xchg
js
cmpsl
pop
xchg
cmp
movsl
cmp
jns
cmp
pop
mov
shlb
sahf
pop
fldcw
movsl
std
xlat
and
into
cmp
jg
mov
test
test
mov
jne
or
outsl
out
out
imul
pop
fdivr
xor
loop
loop
push
movsb
push
cmpsb
mov
add
lods
arpl
xlat
jne
outsb
jmp
jge
arpl
and
mov
dec
lret
lcall
insb
movsl
cmc
lods
es
mov
xor
dec
fs
fsubs
push
ljmp
push
mov
add
mov
shll
adc
scas
mov
mov
dec
insb
sub
and
je
movsb
dec
push
adc
push
push
test
test
xchg
cmpsl
push
pop
mov
push
bound
testb
dec
or
rcrb
loopne
mov
xchg
xor
psllq
sub
dec
nop
jns
mov
add
xchg
insb
jno,pn
and
scas
pop
sbb
rcll
jecxz
cmc
jae
fsubl
scas
int
inc
lods
incb
repz
or
inc
roll
push
mov
xchg
sbb
push
push
arpl
jno
xchg
call
js
in
xchg
mov
ret
add
add
out
mov
jae
addl
push
shrb
test
mov
jle
das
mov
in
jle
cmp
hlt
mov
arpl
pop
insl
lock
int
das
adc
std
mov
addr16
sbbb
idivl
rorl
xorl
sub
or
xorb
cmpsb
jnp
mov
cltd
cld
int3
jmp
xor
and
repnz
gs
insb
push
dec
cmp
dec
fwait
aas
dec
pop
in
addr16
les
mov
or
mov
push
in
pop
jae
popf
adc
cs
ljmp
sbb
dec
std
fildll
mov
or
sub
loopne
dec
mov
outsl
aaa
mov
adc
in
lods
pop
push
ret
or
jno
test
mov
jge
incl
ffreep
movsb
dec
pop
sbb
or
cwtl
inc
dec
add
sbb
iret
cltd
jmp
aad
stos
lea
mov
imul
mov
and
pop
xchg
push
and
adc
lods
and
dec
jnp
movsb
hlt
mov
dec
data16
mov
test
stos
hlt
lods
idivl
cmp
imul
out
enter
std
cmp
repnz
outsl
push
ds
imul
cld
ret
jb
pushf
lcall
clc
les
stos
jae
sub
js
mov
subb
lods
aas
adcl
dec
adc
push
inc
arpl
stc
imul
dec
imul
fmull
shll
push
stos
lods
loop
decb
and
sarb
out
add
sub
sub
es
mov
and
mov
mov
xlat
in
mov
mov
xor
add
xchg
inc
andb
adc
mov
push
jl
lret
stos
mov
pop
leave
or
pop
push
loopne
add
xchg
sbb
dec
jmp
stos
inc
jns
jbe
push
test
pop
pop
movsb
cmp
lods
push
xchg
sbb
push
pop
xor
lcall
add
hlt
cli
xor
call
xor
jo
repnz
sbb
pop
and
leave
jbe
push
cmpsl
jmp
lahf
cltd
ljmp
cmpsb
aaa
je
bnd
stos
sub
sub
mov
dec
out
stos
aas
sbb
rorl
cwtl
ds
sbb
xchg
inc
mov
xor
insl
jns
leave
jno
pop
movsl
jp
sahf
mov
aad
inc
dec
adc
in
stos
loopne
in
or
push
clc
adc
xor
fstl
inc
and
ret
and
sti
lahf
pop
mov
push
data16
mov
out
inc
adc
arpl
jae
sub
sahf
xlat
cmp
push
mov
cmp
lock
push
cli
pop
mov
pop
and
jno
cli
push
stc
aam
js
lods
rclb
or
cmc
xor
mov
pop
ss
cmp
push
push
nopl
lret
push
pop
cltd
add
push
and
sub
not
add
sub
and
inc
es
add
insb
sbb
js
or
decl
popf
call
pop
sbb
sub
cmp
js
mov
popf
cmp
cmpsl
aaa
mov
lcall
xor
jp
bound
add
pop
or
leave
jb
int3
iret
scas
mov
and
iret
lods
sbb
lret
mov
stc
repnz
out
and
adc
push
jne
out
jmp
jno
int
mov
jo
cmpsl
xor
adc
mov
cmpsb
mov
xor
jge
fists
jo
jecxz
vpshab
out
sub
insb
mov
push
ja
fucompp
lea
xchg
xlat
pop
roll
xor
dec
movsl
ja
mov
in
mov
push
fsub
sbb
push
loopne
jecxz
faddl
nop
dec
sbb
push
cmp
pushf
rol
adc
mov
push
mov
add
aam
sbb
jl
xor
aas
xchg
loop
dec
xlat
icebp
sti
sub
lock
jne
xchg
cmpsb
call
scas
dec
inc
int3
mov
insb
push
repnz
sub
or
inc
adc
xchg
sbb
inc
push
leave
mov
int
ror
shrl
popa
movsb
jmp
sbb
add
mov
imul
hlt
or
incl
fnstsw
mov
inc
cs
and
push
jle
pop
or
scas
cmp
fists
lgs
hlt
xorb
xlat
add
jmp
int3
lcall
loopne
mov
mov
bound
and
mov
test
mov
enter
adc
out
mov
gs
or
outsb
arpl
popf
dec
xchg
aam
cmp
test
dec
pop
inc
inc
aam
pop
stc
pop
ficoml
adcb
add
loop
rcrb
mov
add
mov
popa
inc
popa
ret
pop
out
xchg
incb
dec
fs
or
movsl
mov
mov
pusha
sti
imul
in
scas
fistl
pop
test
cmpsb
cmp
push
jge
outsb
int
or
pushf
mov
loope
in
lret
push
jno
dec
outsl
gs
add
push
iret
insl
sbb
push
mov
stos
and
test
pop
movsb
inc
leave
jmp
pop
cmp
mov
clc
pop
fmuls
xchg
pop
in
je
shr
add
mov
out
mov
into
xor
adc
push
movsb
ljmp
cmc
cmc
jle
cmp
icebp
mov
jmp
xchg
hlt
pop
push
cmp
stos
inc
or
mov
into
repnz
and
inc
test
sub
lahf
xor
shrb
mov
cltd
xchg
sahf
pop
repz
fs
loop
es
inc
jae
push
sbb
jbe
lret
push
bound
mov
mov
cmp
nop
adc
lahf
nop
mov
aad
loop
outsl
movsl
or
inc
in
jb
scas
cld
dec
fistpl
adc
notb
mov
lods
scas
dec
test
in
cld
mov
loopne
movsb
fdivrl
adc
pusha
and
mov
sbb
fnstcw
lods
shrl
and
popa
in
loop
add
mov
ret
das
dec
stos
leave
dec
jge
sahf
cmp
add
repnz
jne
mov
into
scas
dec
xor
test
movsl
and
adc
aaa
ret
and
add
or
push
dec
jnp
cmp
inc
jge
ljmp
loope
xchg
pop
or
in
lods
xchg
jmp
insl
adc
call
jp
xchg
xchg
pop
outsb
mov
enter
nop
adc
bound
adc
je
rcll
hlt
sahf
fmuls
hlt
jmp
push
jp
out
loopne
stc
out
xchg
cmp
in
mov
ljmp
sub
jo
xlat
les
cltd
dec
out
shr
addl
xor
mov
add
call
ret
mov
ja
std
cltd
add
push
and
pop
ret
push
jmp
repnz
andb
std
jle
fsub
sbb
ret
sub
xchg
adc
add
xchg
push
and
jp
sub
sbb
xor
jo
pop
jns
subb
inc
sub
jns
jb
sbb
loopne
sub
setl
jnp
adcl
or
jge
mov
sbb
xchg
lahf
jmp
lods
movsb
lea
jmp
lcall
mov
std
mov
pop
call
add
mov
inc
push
xchg
imul
push
pop
stos
pushf
mov
repnz
lods
pop
jge
dec
jl
cmp
push
repz
fstpl
jnp
ljmpw
pop
divl
add
addr16
xchg
int
mov
pushf
xchg
adc
outsb
xor
inc
sbb
negl
pop
sti
ret
mov
mov
or
or
fisubrs
add
mov
jle
push
dec
dec
or
jns
and
les
jns
lea
sbb
rorl
aaa
insl
cmpsl
nop
mov
sub
and
stos
hlt
xor
xlat
mov
xchg
sar
inc
pop
ret
mov
push
or
push
insb
adc
rcll
cli
inc
inc
sub
repnz
xor
cmpsb
repz
pop
xor
roll
mov
aaa
xlat
scas
ljmp
imul
pop
push
mov
inc
jge
push
gs
cld
add
cmp
clc
pop
jnp
leave
jg
fsts
and
int
push
mov
adc
lds
out
and
subl
xlat
push
in
cmpsb
mov
das
xchg
jecxz
jp
fs
add
mov
fnsave
push
sbb
lods
dec
sub
bound
inc
ja
adcl
push
addb
add
lock
dec
push
push
mov
push
mov
lret
mov
sti
sbb
xchg
lahf
add
xchg
ret
popl
add
rcrb
les
jno
shll
mov
jg
and
fdivrl
leave
and
and
xchg
int3
dec
add
lret
jmp
sub
dec
sub
mulb
mov
push
pop
pushf
enter
xor
mov
out
int3
push
mov
and
jae
sbb
pusha
arpl
lcall
jmp
pop
fucomp
adc
mov
jo
push
inc
cmpsl
and
or
pop
lret
out
out
cmovno
mov
and
or
jae
push
cmp
daa
roll
jecxz
in
pop
test
cmp
pop
push
pop
shl
sub
push
mov
cmc
lds
jno
xchg
lret
rolb
pop
fists
loope
pushf
cmp
mov
xchg
bound
ret
pop
or
icebp
mov
iret
sbb
inc
mov
les
jmp
push
inc
mov
stc
xchg
cwtl
mov
and
pop
xchg
xor
adc
loopne
jnp
bound
cmp
stc
jne
mov
sub
lcall
repnz
mov
lret
ds
xor
out
cltd
dec
lods
pop
adc
les
stos
sub
sbb
or
in
in
popa
mov
xchg
sub
and
mov
andl
cmp
pop
clc
mov
fdiv
hlt
push
into
test
push
inc
xor
insb
push
cmpsb
xlat
outsb
or
test
hlt
mov
dec
push
cmp
mov
pop
rcrb
mov
mov
jp
add
xor
stc
lret
out
xchg
xchg
jns
shlb
test
cmp
push
jl
out
repnz
int
insl
xchg
sbb
nop
out
cmp
out
mov
mov
cmpsl
out
cmpsl
pop
mov
lock
aam
push
in
sub
push
das
aam
or
cmpsl
or
aad
andb
xchg
push
std
out
xor
out
js
sti
lahf
xchg
sarl
xchg
testl
ja
cmp
mov
insl
imulb
mov
aam
lret
pushf
mov
in
pop
push
repz
xchg
icebp
iret
movsb
lods
movsl
pushf
loop
pop
pop
sbb
adc
mov
bound
hlt
shlb
push
jle
mov
and
cmp
cmpsb
scas
lret
in
sbbb
xor
js
jmp
or
call
or
orb
pop
inc
sub
dec
sub
lea
cmp
das
loope
fdivs
pushl
sbb
sbb
lret
mov
sbb
or
cmp
loop
loopne
sub
push
roll
mov
scas
rolb
mov
fcomps
cltd
jecxz
sbb
movsb
das
or
pop
out
rcrb
cmc
xor
sub
mov
icebp
or
roll
xchg
lds
mov
or
or
outsl
cmp
mov
and
xor
in
imul
adc
and
and
bound
mov
pop
sub
idivl
push
sbb
imul
loopne
stos
add
rcll
popa
xor
dec
out
mov
xchg
fildll
orl
adc
and
inc
popa
mov
outsl
mov
lods
sti
xchg
rcr
iret
dec
fiaddl
rorl
andb
push
add
add
jge
test
repnz
mov
hlt
out
lods
inc
mov
cmp
cltd
mov
lret
lock
jnp
dec
mov
mov
addr16
and
push
sbb
mov
sarb
clc
push
mov
js
lods
mov
js
push
pop
inc
jp
pop
fwait
test
mov
addr16
cmp
cld
out
loope
clc
sbb
mov
ja
hlt
mov
inc
adc
mov
push
inc
into
jne
incl
or
jecxz
mov
aam
add
lea
or
movsb
cmp
mov
xchg
outsl
xor
push
add
pop
enter
rorl
jb
les
insl
jp
add
add
popa
push
and
pop
jbe
push
or
xchg
push
xor
jl
es
cmp
out
sbbb
das
mov
in
loope
push
arpl
xor
push
xchg
inc
sbb
pop
mov
xlat
pop
loope
cltd
cltd
in
inc
aas
pop
xchg
dec
xor
jbe
sub
push
lods
aad
or
shll
push
and
jns
add
out
aas
lea
mov
mov
mov
lds
loopne
js
andl
fs
jp
lcall
loop
jae
movsl
fsubrs
leave
jbe
jge
mov
pop
jge
popf
call
adc
loop
out
inc
sub
imul
cmp
adc
push
push
xchg
mov
sbb
add
test
add
enter
scas
hlt
nop
dec
pop
in
ds
push
adc
mov
sub
sahf
mov
jno
clc
adc
ss
lea
push
push
xchg
fs
sbb
jns
outsb
shlb
inc
les
cli
add
js
outsl
push
jge
cmp
pop
push
ss
cmpsb
or
mov
lds
push
sbb
rorb
repnz
clc
mov
cmp
repnz
cltd
inc
cwtl
adc
inc
inc
lea
dec
xchg
dec
mov
mov
dec
mov
and
aad
shlb
xor
lcall
jns
out
and
out
loop
not
test
xor
push
cs
inc
lret
mov
inc
lds
adc
out
fisubs
dec
cltd
outsb
dec
xor
imul
pop
inc
push
rol
dec
int
dec
sbb
mov
ja
xadd
mov
mov
fldt
push
movsl
ljmp
leave
cld
test
out
ret
sahf
out
sbb
aas
mov
dec
sbb
push
mov
or
xor
sbbb
mov
insl
scas
sbbl
dec
daa
dec
lods
or
cmpl
and
pop
jmp
sub
repz
sub
fbld
xlat
cmpsl
outsl
mov
adc
jl
jmp
mov
jmp
mov
xor
sub
sub
nop
insb
in
adc
test
loop
out
push
dec
stos
pop
std
and
test
loopne
sti
loope
xchg
xchg
shl
mov
dec
lcall
into
clc
xchg
dec
mov
add
cmc
mov
or
pop
push
stc
sub
cmc
inc
das
mov
push
xchg
push
sub
jnp
xchg
subb
rcrb
subl
xor
out
and
outsl
push
adc
imul
loop
lds
push
das
call
lods
rcrl
jne
mov
cmp
arpl
pop
xchg
adc
inc
hlt
test
push
rcll
test
jne
out
fistps
inc
and
push
out
push
in
or
lret
add
xchg
push
pop
out
mov
pop
mov
push
mov
push
shr
dec
shll
cmc
add
push
pop
jnp
out
dec
pop
jns
jg
int
jno
inc
push
push
and
pop
push
pushf
loope
sbb
jmp
js
rcrb
jo
xchg
xchg
in
dec
or
lret
and
xchg
xor
xchg
imul
push
mov
xor
inc
mov
or
and
pop
loope
cld
push
mov
je
and
in
push
sub
jp
hlt
jae
sub
repnz
add
adc
dec
push
lret
push
mov
jmp
pcmpgtb
addb
cmp
addr16
ja
aaa
in
gs
pinsrw
or
fadd
test
in
lahf
pop
in
push
fldt
insl
lds
cmp
push
mov
out
insl
movsl
mov
or
repnz
fdivrl
test
add
pop
cwtl
shrl
xorb
push
out
xor
and
adc
xorb
mov
and
mov
dec
mov
subb
sub
jnp
insl
dec
jecxz
or
and
or
mov
mov
xor
lea
shlb
pushf
xor
mov
jne
jbe
scas
inc
movsl
bound
les
jae
xor
mov
inc
cltd
clc
fiaddl
xchg
push
pop
stos
cmpsb
jae
aas
mov
xor
push
movsl
adc
cmp
sub
push
aam
sub
sarb
push
inc
nop
xchg
and
and
jp
iret
add
lods
test
div
or
lret
jle
cmp
jb
aam
js
movsl
fcomps
imul
inc
ljmp
test
lock
in
aaa
push
aad
dec
jl
sbb
das
push
mov
pop
in
fsubrp
mov
nop
mull
in
test
fisttpll
mov
push
movsl
cli
xchg
mov
rcrb
data16
cmp
shrb
rorb
xlat
pusha
int3
pop
pushf
ss
dec
pop
fisubrl
popf
lret
lret
int
xchg
pop
push
jns
add
test
dec
dec
test
fsubrs
sub
stos
sub
pop
mov
pushf
jg
pop
jne
sahf
push
pop
cmp
mov
xchg
xor
xor
mov
scas
sub
mov
mov
out
mov
sti
es
mov
in
xchg
or
call
sub
mov
dec
std
fwait
aas
jl
fistl
add
jbe
sub
dec
data16
jl
pop
lahf
mov
mov
test
mov
mov
jnp
bswap
xor
sub
sarb
push
mov
fldl
dec
das
pavgw
or
mov
add
add
fldenv
out
icebp
mov
popl
push
test
xchg
fwait
test
jmp
bound
aam
mov
ja
mov
mov
pop
fwait
cmc
not
test
addr16
push
cmp
cli
pop
std
sbbl
pop
jnp
add
xchg
jl
repz
mov
or
addr16
inc
movsb
and
dec
int3
add
pop
or
dec
aad
popl
add
mov
loopne
and
into
test
pop
repnz
in
mov
loope
mov
in
pop
sbb
or
and
and
jns
enter
lret
cmpsb
les
push
push
lcall
xchg
inc
jns
out
fdivp
inc
sub
jbe
scas
stc
insb
imul
add
outsl
shlb
pop
add
and
pop
pushf
sarl
xor
enter
mov
pop
addr16
js
cmp
aad
or
mov
push
inc
adc
xchg
xor
imul
sbb
lods
mov
mov
iret
jle
pop
sub
in
add
pop
sbb
das
test
in
stos
cld
dec
mov
mov
ret
mov
mov
pop
bound
out
pusha
dec
in
hlt
mov
cli
push
push
mov
pop
or
gs
xlat
xor
xor
mov
cli
push
mov
inc
je
lret
ret
adcb
inc
in
fcomp
std
sub
pop
hlt
sbb
push
sahf
dec
nop
xorl
iret
gs
mov
dec
hlt
jmp
xor
jnp
push
test
and
pop
testb
test
fisttpl
inc
xor
enter
outsb
js
jns
adc
pusha
dec
cli
je
repz
ficoml
mov
leave
cmp
push
sbb
adc
stos
mov
iret
bound
xchg
nop
mov
fdivl
mov
push
pop
cmpsb
dec
stos
cmp
in
mov
sti
test
xorb
cmpl
add
ss
mov
adc
popa
adc
fidivrl
in
je
stos
xchg
sbb
dec
fdivrl
xchg
ss
ds
cmpsb
add
inc
imul
push
xorl
xor
jg
jo
cltd
clc
sub
cwtl
mov
orb
out
and
push
lret
inc
ficoml
std
cmpsl
sbb
sbb
in
or
dec
pop
out
test
mov
pop
icebp
int
dec
insl
adc
xorb
mov
dec
hlt
dec
push
mov
out
push
push
pop
inc
popa
cmp
js
ds
popa
adc
pop
fadd
nop
aam
add
adc
pop
xor
adc
dec
xchg
inc
sub
loope
jns
mov
mov
adc
into
out
pusha
and
cs
pop
das
add
arpl
lods
mov
sub
add
pop
pop
scas
or
orl
inc
sbb
xchg
orl
leave
xchg
xorl
push
sub
pushf
pop
and
negl
scas
jmp
ror
pop
dec
mov
lcall
int3
mov
sbb
ds
sahf
pushf
dec
ja
pop
mov
add
test
push
stos
sub
fdivrs
pushf
ret
dec
push
sbb
scas
sbb
cmp
jbe
mov
es
lret
insl
dec
mov
push
jp
xlat
push
cwtl
dec
shlb
pop
push
mov
movsb
inc
bound
cmp
mov
je
sub
xor
int3
add
mov
cli
fsubrs
sub
mov
mov
dec
push
sbb
jo
mov
into
inc
jp
sub
nop
sbbl
fdivp
and
sbb
pop
lahf
xchg
fisubs
adc
inc
popf
pop
out
psubd
jns
jp
ret
insb
jo
mov
cmp
add
notl
push
push
and
in
imul
jg
mov
dec
aaa
mov
or
inc
stc
mov
mov
fisubrs
jo
sbb
or
dec
adc
icebp
adc
jecxz
lock
mov
sbb
pop
and
mov
xchg
sahf
fsubrl
sbb
fisubrs
mov
add
dec
jecxz
mov
aad
ljmp
test
cmp
jmp
shl
stc
out
hlt
push
imul
push
arpl
notl
push
and
xor
mov
xor
mov
fcoms
outsb
inc
pop
mov
mov
or
scas
fcoml
jb
shrb
icebp
and
data16
cmp
jbe
cld
mov
dec
mov
jg
in
sub
ror
sti
loope
jb
cmpsl
aas
xchg
out
pushf
pusha
std
leave
xchg
pop
in
inc
ds
sub
fidivl
fcoml
sub
es
and
mov
stos
imull
lods
push
rclb
fcompl
push
jno
pop
pop
bound
inc
pop
push
push
call
cmp
ret
leave
push
js
lock
xchg
jae
mov
loopne
inc
rcrl
loope
lods
dec
cld
push
loop
sbb
je
rdpmc
or
loope
imul
int3
mov
mov
outsb
mov
adc
iret
sub
mov
lahf
fwait
iret
into
dec
adc
push
push
cltd
pop
adc
shl
sbb
fdivs
sbb
jmp
dec
mov
pop
dec
shll
fdivrs
sahf
adc
stc
sbb
sub
rolb
xor
test
xchg
push
xor
cltd
aam
push
sbb
cmpl
push
jl
out
fs
out
and
adc
jmp
nop
mov
mov
dec
push
mov
mov
add
bound
add
js
adc
imul
pop
push
repnz
out
scas
xchg
in
mov
loope
or
es
or
xchg
hlt
push
adc
inc
icebp
jae
jg
jo
sti
push
push
test
xchg
aam
in
cmp
jnp
or
jno
xor
xchg
push
int
shll
and
out
xchg
mov
mov
bswap
sub
dec
xor
cli
cmp
inc
imul
inc
sub
xchg
clc
ds
movsl
add
push
int
lea
mov
push
ficoms
adc
add
or
andl
dec
pop
xchg
lret
outsb
cli
loopne
sub
aad
in
addb
cmp
or
mov
movsl
jle
mov
call
ds
nop
aaa
dec
sbb
and
jle
shll
out
add
hlt
mov
popf
lcall
pop
hlt
les
adc
clc
mov
jae
push
inc
insb
std
lea
pop
adc
ret
call
idivl
adc
and
movsb
jge
leave
cmp
pop
adcb
dec
inc
testb
sti
push
xchg
pop
loope
fs
mov
mov
scas
push
pop
fsubs
jns
out
movsl
xor
shrl
and
adc
dec
insl
lret
cmp
and
in
arpl
cwtl
xor
mov
test
outsb
mov
cmpsb
and
lea
inc
sahf
icebp
jb
pop
inc
insb
addr16
fcomps
fbstp
inc
mov
jmp
jno
popa
test
dec
push
inc
outsl
xchg
mov
xor
cmp
mov
add
jmp
jno
push
add
xor
dec
mov
mov
lahf
xor
aaa
fscale
imulb
xor
cli
or
pusha
insl
mov
std
dec
sub
stos
adc
insb
adc
cmp
enter
push
pusha
sub
neg
cwtl
mov
mov
mov
jne
ret
sub
mov
add
lret
movsb
inc
mov
jnp
out
cmpsl
imul
mulb
or
aam
sub
push
push
aas
outsl
lods
dec
scas
add
and
cmp
subb
sbb
dec
cmp
jle
pop
mov
or
std
pop
jae
mov
jns
js
mov
cs
inc
test
and
pop
mov
jne
mov
xchg
outsl
ficoml
bnd
push
cmp
sbb
ljmp
into
push
xor
js
idiv
jno
jmp
and
mov
jne
push
jp
pop
sub
ljmp
int
jecxz
sbb
ret
or
and
xor
cmc
mov
push
inc
pop
outsb
mov
sub
xchg
cltd
push
mov
dec
push
pop
and
jp
mov
and
mov
mov
cs
inc
je
mov
mov
dec
xchg
imul
out
mov
outsb
mov
jne
push
pop
shrb
shlb
and
inc
mov
add
mov
dec
jg
and
cmp
pop
addr16
xor
bound
inc
jae
cmp
jmp
push
mov
mov
orl
sub
or
push
clc
dec
cmpsl
icebp
cmp
fadds
inc
cmp
jl,pn
ljmp
inc
push
sub
imul
loopne
mov
dec
mov
xor
push
add
lock
std
or
imul
in
dec
or
out
int
outsb
xor
and
sub
xchg
imul
icebp
je
inc
sbbb
mov
fcomps
addl
inc
syscall
loopne
add
cwtl
lea
jbe
cmc
inc
inc
dec
push
pop
xor
add
test
push
jb
lods
int3
out
pop
pop
jecxz
mov
xor
call
add
sti
imul
shlb
xchg
pop
pop
lea
mov
dec
testl
cmp
mov
sub
test
push
or
in
lods
and
sbbb
jg
mov
mov
test
add
jb
pop
das
push
pop
cmpsl
push
adcl
push
xor
dec
mov
xchg
mov
cmpsl
inc
sbb
sbb
and
dec
ret
inc
vshufps
pcmpeqb
sbb
mov
pop
or
dec
out
out
lods
jne
or
jle
dec
or
dec
pop
push
cmp
sbbb
ficompl
std
lcall
shll
lock
sub
aaa
adc
jmp
mov
dec
test
push
cmpsl
iret
mov
sub
mov
mov
imul
loop
dec
inc
xchg
inc
lahf
dec
js
sub
mov
and
xchg
call
add
arpl
pop
pop
cltd
jb
loopne
lahf
pop
testl
dec
stos
jno
popf
test
jg
aam
faddl
xor
adc
imul
xorb
cmc
and
punpckhbw
fwait
pushf
mov
jb
outsb
inc
or
ficomps
mov
push
inc
loope
sub
repnz
jnp
and
jno
xchg
cltd
lods
insl
in
insl
inc
aas
jns
adc
mov
add
les
int
mov
dec
loop,pn
fildl
test
sub
jl
cmp
nop
cmp
mov
or
mov
aaa
sbb
adc
sbb
mov
lods
pop
sbb
mov
pop
xchg
ja
xor
aas
cwtl
out
jno
ss
jg
mov
sahf
dec
sbb
adc
pusha
enter
dec
loopne
pop
sbb
mov
mov
adc
icebp
inc
out
and
add
cmp
imul
push
mov
mov
mov
leave
sbb
shlb
xchg
mov
and
and
jno
out
push
add
push
mov
pop
aam
push
ret
rcl
in
mov
xchg
loope
fs
jno
xchg
or
out
pop
mov
and
das
adc
mov
or
call
jg
xchg
sub
jb
sarb
mov
lcall
cmp
int3
test
xor
xor
adc
jae
aad
aaa
jl
popa
call
lret
adc
push
mov
sub
pushl
push
fst
cmp
cmpsb
inc
in
or
mov
movsb
jmp
mov
stos
aaa
sbb
test
jg
imul
jge
fxch
inc
push
adc
jl
sbb
cmp
pushf
outsb
sub
inc
cld
and
icebp
xchg
aaa
test
cwtl
xor
cltd
cmpsl
lahf
mov
mov
movsl
repz
lock
enter
vzeroupper
cmpsl
sub
pop
push
jo
in
scas
mov
push
and
sub
pop
xchg
lahf
and
xchg
aam
mov
push
xchg
ss
jns
mov
lock
or
outsl
jge
out
imul
jl
pop
rdmsr
and
mov
and
or
daa
and
lods
inc
cmpb
repnz
sbb
push
and
mov
scas
mov
mov
jle
mov
jmp
int
push
icebp
and
mov
mov
sub
imul
imul
and
pushf
shll
dec
xor
cli
decl
scas
xchg
xchg
sub
mov
mov
pushf
mov
and
mov
and
sbb
int3
movsl
testl
sti
je,pn
sbb
cmpsb
repz
mov
iret
pop
popf
call
mov
xor
int
arpl
push
or
xchg
push
leave
mov
sbbb
sbb
xchg
sbb
test
dec
cli
hlt
imul
shll
mov
enter
outsl
xchg
cmp
pusha
test
jbe
mov
nop
mov
xchg
dec
xor
lahf
push
in
out
pop
mov
test
icebp
xchg
cmc
sbb
out
pop
js
cmp
cmpsl
mov
and
cmpsl
mov
gs
and
pop
add
and
sbb
inc
xchg
lds
aas
or
enter
push
push
push
mov
fsubl
or
orl
pop
fstl
mov
out
fiadds
xor
jno
mov
lahf
xchg
imul
shrl
inc
mov
xchg
stc
inc
stc
dec
scas
pop
adc
inc
insw
ret
xchg
add
push
aaa
stos
mov
xor
sti
inc
sbb
push
mov
std
push
jmp
and
inc
dec
shlb
stc
movb
sbb
mov
lods
std
pop
add
pop
mov
fsubrs
and
aad
jae
sub
xor
fcompl
inc
pop
and
test
in
enter
add
fidivrs
jns
add
fcom
jne
lods
dec
dec
mov
in
dec
daa
out
int3
flds
roll
jp
adcb
fwait
addr16
push
adc
cli
cltd
pop
xchg
test
and
leave
int
lret
xchg
push
or
int
mov
movb
xchg
int3
stos
pop
ljmp
mov
loope
lret
push
mov
jecxz
jmp
cmpl
jl
sarb
mov
xor
push
fidivrl
or
out
xor
lcall
mov
sub
rclb
test
data16
or
add
nop
shl
scas
cwtl
add
ret
stos
pop
stc
sbb
push
add
mov
cmp
cmpsb
int
jne
fists
pop
into
cmp
xchg
movsl
ficompl
mov
inc
and
aas
scas
int3
or
ljmp
xchg
jg
xor
sub
cmp
mov
stos
clc
xchg
out
inc
mov
mov
and
adc
pushf
fnstsw
ret
scas
sbb
fimull
mov
repnz
push
cmc
lods
xchg
jns
std
ret
mov
aas
and
sbb
test
mov
jle
iret
clc
int
jo
jbe
shlb
xor
sub
push
inc
xor
inc
or
inc
jecxz
jbe
xor
xchg
sub
xchg
mov
xlat
aad
in
adc
inc
fs
repnz
mov
insb
outsb
xchg
or
cltd
dec
push
mov
mov
flds
rclb
sub
xchg
insl
mov
es
lcall
cli
mov
xchg
xorb
add
mov
ss
push
xorl
mov
jo
insl
xchg
xchg
mov
cmp
mov
leave
dec
in
sahf
xor
lods
fwait
aad
xchg
aam
jns
mov
push
in
imul
mov
test
lods
xchg
cmp
pop
and
test
repz
mov
add
and
pushf
lret
cmpb
imull
outsb
push
and
push
fwait
dec
xchg
arpl
cld
fsubrl
sbb
mov
jo
sub
out
jnp
aam
gs
imul
and
xor
scas
sarl
or
sbb
pop
xor
push
lret
mov
pop
sub
pop
ficompl
movsl
lcall
lods
mov
mov
test
cs
das
sub
mov
fdivrs
mov
std
push
je
cmp
and
jl
pop
mov
sahf
mov
cmp
nop
mov
pop
push
sub
or
xchg
shl
or
inc
insl
stos
cs
mov
mov
mov
dec
cmc
fcoms
and
xchg
push
imul
enter
aad
cmp
cmp
jmp
push
inc
xchg
xchg
dec
int
lahf
mov
adc
stos
xor
fwait
lock
jge
or
dec
cltd
lcall
imul
push
push
test
mov
arpl
mov
movsl
jae
xchg
cmp
lods
add
jge
ja
sub
fldl
xchg
mov
push
insl
pop
aaa
push
push
mov
push
xchg
xor
sub
nop
jno
pop
sbb
adc
push
sbb
adc
jecxz
mov
or
cmp
xchg
int3
mov
stc
fistpll
push
dec
ss
packsswb
mov
pop
shlb
loope
hlt
dec
adc
rolb
inc
lods
cld
jl
pop
hlt
fsubp
mov
mov
fisubrs
jb
into
ljmp
xchg
and
das
xchg
cmp
mov
mov
roll
sbb
push
jle
outsb
xchg
push
nopl
es
gs
daa
and
pop
push
mov
aas
xlat
cmpsb
nop
mov
push
mov
inc
sahf
pop
adc
int3
or
jmp
rcrl
fcmovnb
out
movsb
xor
ss
cwtl
scas
rcr
dec
adc
sbb
bound
dec
in
xchg
and
inc
jl
out
add
inc
lea
lods
ss
mov
not
and
or
or
add
mov
loope
mov
cmpsl
lret
pop
ljmp
aas
stos
sub
in
arpl
test
testl
mov
loop
mov
cmp
push
ss
push
clc
adc
push
mov
fsubrp
or
push
cmp
xor
mov
int3
ret
roll
inc
dec
es
fmull
xchg
in
xchg
cmpsb
fistpl
lret
rclb
mov
add
jmp
outsb
fwait
mov
adc
xlat
jp
mov
adc
loope
push
iret
stos
push
push
pop
in
mov
jp,pt
outsb
pop
shrb
pop
xchg
outsl
pusha
xchg
adc
pop
pushf
je
pop
pop
std
cmp
xchg
or
xchg
idivb
mov
adc
pop
lods
call
lcall
cmp
adc
inc
outsl
add
and
jge
dec
mov
cmp
insb
imul
int3
add
pusha
repnz
mov
out
iret
bound
rcrb
repz
mov
fisttps
cli
clc
cld
imul
ja
into
les
push
xchg
rcr
bound
dec
ret
popf
pop
mov
jns
mov
or
xor
pop
mov
sub
imul
inc
test
cmpsb
inc
push
outsl
jae
ret
aaa
add
in
fsub
jnp
jns
mov
or
xchg
cltd
cli
data16
imul
aad
test
shlb
pop
test
cltd
jae
pop
daa
pop
adc
orl
pop
mov
aas
xchg
out
adc
xor
inc
and
cmp
dec
jne
cmp
push
xor
lcall
jbe
or
clc
mov
cmp
movsb
mov
pop
mov
fistps
cli
or
push
xor
mov
hlt
arpl
fwait
in
mov
jae
cmp
ret
pop
sbb
sbb
inc
fs
int
sub
out
icebp
xor
stc
fbstp
sub
mov
jle
mov
push
popl
in
sub
ljmp
xchg
es
mov
push
mov
jb
cwtl
loop
pushf
aam
push
nop
mov
fisttps
mov
jo
jbe
cmpsl
push
sbb
jb
test
xor
jo
mov
sbb
cmp
out
mov
xchg
jmp
inc
xchg
addl
imul
mov
inc
cmpl
add
pop
push
mov
dec
int
sarl
repz
mov
imul
lods
imul
and
push
sarb
push
stc
sub
data16
sbb
cmp
imul
mov
push
je
rorl
add
outsl
adc
jmp
sbb
out
and
mov
adc
movsl
mov
dec
jp
jle
int
and
xchg
pop
js
rol
inc
std
out
dec
xor
addr16
mov
pop
jb
xor
aad
stos
cmp
mov
jecxz
jae
pushf
out
inc
dec
insl
mov
or
xchg
loop
mov
jp
scas
mov
out
repnz
jmp
test
pop
adc
mov
add
sub
sbb
cmp
movsl
into
insl
inc
ljmp
push
jb
loope
fstps
mov
fucomp
je,pt
fsubrl
push
push
or
ret
jbe
stc
dec
dec
outsl
jno
cmc
inc
jno
push
mov
add
movsb
es
jmp
jo
pop
sub
test
js
dec
in
pop
mov
rcr
mov
jle
or
add
fs
mov
lcall
std
data16
stc
sbb
cmp
fstpt
push
call
push
imul
push
lods
pushl
js
or
xor
jae
push
icebp
jecxz
pop
adcl
inc
lea
out
push
insl
ficompl
cmp
xchg
lret
cmp
jge
xchg
or
xchg
jo
out
inc
lea
mov
mov
mov
icebp
inc
xorb
jo
stos
orb
mov
inc
jno
push
mov
mov
inc
and
cli
ret
adc
and
push
inc
out
addl
push
push
test
adc
hlt
sbb
repz
lahf
mov
lods
mov
lock
insl
mov
test
js
mov
fisttpl
stos
sbb
xchg
mov
rcrl
and
pop
ja
or
sbb
je
mov
xchg
shlb
mov
cld
and
fisubl
fsubrs
xchg
or
adc
into
or
cmp
repnz
aad
lcall
stc
mov
pop
dec
mov
push
sub
fcmovb
mov
cmpsb
enter
xorb
int3
jmp
daa
test
fdivs
cmpsl
in
mov
push
loope
fsubrs
mov
lcall
mov
cmp
sub
or
adc
cmpsl
movsb
je
mov
scas
dec
sbb
in
lahf
repnz
mov
out
repz
cmc
mov
aas
inc
jg
pop
cmp
mov
int
mov
mov
inc
mov
scas
lods
arpl
imul
xchg
xor
in
out
cmp
inc
les
movsl
adc
das
in
jbe
lcall
pusha
jmp
orb
cmpl
pop
lret
ss
lahf
dec
pop
daa
pop
sarl
sub
xchg
imul
push
mov
push
and
add
aad
div
cmc
sarb
movsb
mov
mov
aaa
or
push
stos
inc
je
nop
xlat
es
dec
test
pop
lds
lcall
movsb
cmp
js
movsb
mov
dec
mov
nop
or
xor
repnz
mov
dec
arpl
inc
insl
push
shlb
cmp
je
mov
mov
xchg
repnz
rolb
movsb
enter
dec
cltd
std
cwtl
adc
mov
jmp
push
inc
pop
add
dec
mov
lcall
mov
push
mov
roll
jne
sahf
mov
xor
push
inc
jae
lods
adc
push
jg
insl
dec
jb
xchg
inc
and
push
movsl
pop
sbb
mov
jp
jae
add
push
pop
ficoml
jge
out
mov
sub
push
aad
in
dec
adc
jne
mov
xor
pop
push
add
jae
xor
jge
add
jb
jnp
mov
ret
orb
add
fisubl
pop
into
movsb
sbb
roll
mov
inc
xor
adc
inc
aaa
jmp
jmp
inc
sbb
sub
addr16
push
fwait
or
xor
lcall
std
je
cwtl
mov
in
cltd
pop
int3
test
xchg
fldcw
inc
and
adc
test
mov
nop
xchg
sub
push
aas
cmc
mov
xlat
sub
lods
std
sbb
sbb
push
pop
push
xor
into
pushf
mov
in
mov
mov
dec
nop
ja
inc
push
in
leave
push
mov
leave
fldpi
xchg
pop
mov
cltd
cmp
stc
sub
loop
dec
sbb
cld
sbb
adc
cmp
dec
add
push
lock
sbb
outsb
shrb
push
jbe
loope
or
fwait
imul
in
or
cltd
adc
adc
pop
mov
lds
sbb
popa
inc
cmp
or
add
and
push
leave
inc
jmp
js
push
xor
rcr
insb
mov
lahf
cld
sbb
xchg
pop
mov
std
pop
enter
or
mov
sahf
ja
ret
or
sbb
xor
repz
adc
pushf
xchg
loope
xor
mov
insl
adc
mov
int
insl
pop
jmp
jb
lock
testl
sti
fdivp
inc
add
mov
mov
and
inc
pop
ljmp
adc
mov
call
stc
iret
les
in
jb
clc
push
lret
dec
mov
test
mov
jl
mov
cmp
clc
sbb
ljmp
in
addl
mov
xchg
pop
lea
xchg
or
dec
mov
add
data16
push
hlt
aaa
repnz
push
mov
sahf
ja
movsb
pop
jmp
int
inc
mov
mov
and
jg
call
bound
or
inc
loopne
icebp
mov
gs
movb
or
outsl
std
mov
gs
pusha
mov
loopne
gs
pop
in
jmp
rcll
push
jns
ja
js
inc
out
jg
ljmp
aaa
int
cmp
jne
imul
adc
mov
cmp
jnp
out
lea
xor
or
in
push
les
cli
xchg
pop
stos
inc
mov
and
lret
xor
es
out
adc
ljmp
inc
test
xchg
jnp
shlb
or
or
flds
and
scas
jno
lock
shlb
mov
rcl
cmpsl
sbb
cmp
addr16
xchg
mov
mov
mov
push
add
out
je
cmpsb
mov
fwait
push
xor
mov
xor
pop
popa
gs
bound
das
lds
mov
pop
test
inc
jbe
adc
mov
mov
mov
stc
mov
sub
mov
push
add
or
cmp
cmc
int
jecxz
int3
jb
sub
stos
outsl
jnp
dec
jno
jnp
les
pop
jbe
adc
js
lahf
mov
push
out
jg
test
das
sub
xor
repnz
mov
fmull
fldcw
and
mov
mov
jmp
pop
or
mov
test
cmp
xchg
fldenv
sub
and
cmp
jb
add
test
lret
dec
push
ret
mov
cmp
jnp
jne
mov
cmpsl
pop
and
mov
loope
movsb
ja
push
cmpb
out
stc
add
scas
mov
out
sarl
sbb
inc
leave
js
pushf
mov
cmp
dec
aam
adc
sbb
loop
vpaddw
mov
ret
testb
push
inc
dec
mov
jg
les
xchg
dec
ja
in
test
enter
dec
loope
imulb
test
fs
sahf
mov
aas
mov
popa
adc
out
shrb
hlt
cmc
repnz
test
mov
jge
dec
fdiv
or
and
or
into
sti
div
or
and
cmp
cld
dec
arpl
push
pop
rcrb
push
mov
movl
test
inc
ja
mov
daa
gs
cmpsl
subb
fdivs
ret
or
jmp
jle
sti
inc
fcompl
shll
dec
mov
es
dec
sahf
into
jnp
xchg
scas
lds
or
xchg
faddl
mov
or
jg
jb
test
fsubrl
xchg
inc
lcall
pushf
fisubl
lret
mov
fildll
inc
mov
add
mov
mov
dec
adc
dec
inc
mov
test
adc
shll
pop
pop
loop
dec
mov
mov
nop
cli
adc
out
mov
insb
repnz
sub
outsb
movsl
out
js
sub
cmpsb
rol
scas
inc
incb
mov
add
rol
out
cmp
sbb
dec
aad
rorl
dec
cmpsb
sub
test
das
xor
in
mov
dec
ja
mov
pushf
mov
adc
xchg
cmp
rcll
mov
jae
pushf
or
shl
inc
popa
cmpsb
xchg
mov
fcoms
lahf
call
push
cmp
and
mov
rcrl
test
sbb
push
loope
fstps
cwtl
push
xlat
jo
js
cmp
mov
loop
pusha
and
sbb
mov
out
jo
imul
aas
lods
pushf
and
mov
jne
inc
jns
loope
je
and
dec
and
out
add
lods
mov
dec
dec
or
imulb
sarl
shrb
ljmp
imul
mov
push
mov
sub
lahf
stos
insb
pop
into
xor
int
lcall
inc
ds
imul
jbe
mov
popf
addl
cmp
enter
mov
mov
jp
pop
fwait
cmp
int
sbb
inc
jp
inc
jo
imul
leave
inc
and
pop
lock
ret
fnstsw
addr16
xlat
cmc
push
dec
mov
adc
popa
mov
sub
out
push
shlb
cmpsb
inc
jne
mov
mov
lock
test
pop
enter
pop
pop
add
je
lock
mov
mov
pop
popa
call
shrb
jg
jns
jle
pusha
xor
or
pop
in
lahf
outsb
add
pop
add
out
dec
js
sarl
or
pop
or
sti
jg
cmp
cmp
mov
push
data16
xor
dec
imul
xchg
mov
test
imul
xlat
jl
pop
xchg
and
nop
fisubs
or
movsb
lret
jb
cli
jb
or
out
mov
stos
or
pushf
test
hlt
xlat
cmp
int
in
or
pop
xlat
call
je
hlt
iret
add
lahf
and
imul
xor
loopne
add
dec
push
adc
sub
lcall
call
test
push
sub
fldcw
les
mov
jne
pop
in
cmp
addr16
pop
adc
scas
jle
int3
inc
push
mov
xchg
add
outsl
ja
shll
loope
jno
push
sub
push
jl
xor
bound
pusha
and
sub
jl
fnsave
xor
pop
sub
cmp
rclb
rolb
sbb
pop
rcr
mov
les
movsl
mov
mov
ficomps
pop
sbb
dec
addr16
gs
lret
pop
movsb
call
mov
std
pop
stos
mov
jle
add
in
std
fsubl
iret
pop
xchg
jns
cmp
imul
lea
aad
daa
stos
cmc
pop
cli
xchg
cmp
adc
clc
adc
popf
icebp
popf
je
icebp
jp
cld
fildl
in
inc
lods
cmc
xchg
add
sbb
dec
lea
mov
inc
movsl
push
test
adc
jl
push
jmp
insl
rolb
aas
push
pop
ljmp
gs
fs
mov
mov
jg
int3
cmp
or
test
and
inc
cld
pop
or
in
adc
push
dec
or
mov
hlt
mov
mov
dec
dec
loop
xor
xor
xchg
lds
int3
in
scas
repnz
and
adc
and
inc
aam
shrl
mov
repz
dec
ss
fmull
jge
ret
sbb
jae
push
outsl
adc
or
aad
ret
hlt
out
pusha
push
and
fwait
subb
or
sbb
cmpsb
mov
pop
cmp
lret
aaa
cwtl
push
fldl
dec
push
in
mov
insb
cmp
sub
or
pushf
out
nop
lock
lock
in
mov
nop
and
data16
fs
enter
loope
stos
inc
pop
xor
mov
xlat
shrl
hlt
pushf
adc
xchg
cli
ds
jo
sub
lret
loope
movsl
xchg
inc
xchg
stos
addr16
xchg
dec
cmpsl
les
jne
in
inc
lret
loop
adc
or
imul
pushf
xchg
sbb
pushf
loopne
mov
ror
jno
dec
push
push
loope
adc
cmpsl
mov
push
lock
sbb
mov
mov
into
into
cmpsl
in
jmp
push
cmp
and
adc
subb
jl
in
mov
jnp
add
testb
lahf
dec
push
shlb
out
push
push
subb
lods
inc
hlt
adc
jle
mov
lret
rclb
enter
dec
in
push
jns
push
lds
adc
aas
lock
push
pop
repnz
dec
cli
pop
adc
lds
mov
dec
mulb
sbb
lea
push
cmpsb
push
fldcw
mov
mov
les
and
or
xor
repz
pop
lods
mov
lahf
repz
sub
in
leave
incb
adc
dec
insl
add
aas
and
mov
outsl
loope
fsub
pop
subb
mov
or
test
in
pop
enter
test
lret
popf
inc
jecxz
add
sti
in
jmp
sbb
adc
add
fadds
push
mov
add
dec
outsl
lret
sub
fistpl
push
movsb
pop
jb
out
sbb
out
mov
pop
outsl
lret
in
loopne
xor
mov
ror
or
mov
ficoms
mov
xor
xor
pop
incl
das
mov
and
inc
icebp
test
imul
adc
adc
or
xor
dec
out
scas
dec
adc
xchg
fnstsw
mov
lock
pop
xchg
sub
dec
in
inc
push
lods
inc
pop
mov
arpl
xchg
out
shll
cwtl
push
xor
inc
xor
pop
adcl
push
icebp
jmp
or
data16
mov
idivl
stos
add
repnz
movsb
jg
adc
sar
xchg
adc
cmp
add
dec
fwait
mov
xor
stos
fwait
xor
movsb
pop
jne
mov
pop
jbe
dec
cmp
push
lea
fisubl
pop
jmp
mov
and
mov
loop
lock
icebp
enter
mov
add
cmp
out
cmc
stos
jae
arpl
rorb
jecxz
not
pop
fisttps
or
dec
and
or
mov
xchg
dec
mov
dec
es
add
popa
xor
pop
iret
sub
push
shrb
jo
std
xchg
rcl
sub
fs
or
dec
lidtl
es
insb
dec
mov
sbb
adc
pop
mov
out
outsb
and
xor
ja
int
int3
mov
sbb
xor
jno
pop
and
mov
fbld
gs
adc
pusha
pop
scas
repz
sub
mov
clc
xor
fwait
repnz
xor
and
sbb
lret
and
aad
jl
lret
pop
rol
jg
subl
lret
mov
mov
dec
mov
dec
and
jge
jno
sti
xor
dec
int
xor
sqrtps
sub
push
repnz
push
outsl
es
pop
cltd
adc
mov
push
sbb
xchg
jo
add
xor
xchg
inc
push
inc
sbb
gs
mov
aam
popa
inc
push
mov
pop
push
addr16
mov
movsl
into
mov
push
sti
and
jecxz
sbb
pop
inc
js
loop
int
jp
scas
nop
dec
cwtl
and
jb
lods
out
stos
rorl
push
mov
ja
push
push
lcall
sbb
mov
and
ret
lods
adc
cmp
frstor
faddl
xchg
mov
stos
adc
dec
xchg
push
icebp
cmp
fs
mov
push
add
or
cld
cmp
in
dec
and
jge
es
add
pusha
shl
in
pop
ret
jp
cmpsb
lahf
shlb
push
out
test
cmp
syscall
sbb
sub
jb
adc
xchg
sahf
sbb
inc
notb
lcall
xchg
cmpsl
lock
mov
inc
test
mov
cltd
mov
or
jno
mulb
aaa
sub
std
orb
mov
fsts
out
fiaddl
push
orl
xor
adcl
shll
lods
pop
les
mov
adc
ja
fidivl
cs
or
je
das
ret
mov
sbb
mov
push
das
iret
push
xchg
add
add
loop
fwait
pop
cmp
cmpsl
inc
mov
daa
adc
mov
dec
lds
js
push
leave
xchg
out
jnp
insl
jbe
data16
lret
out
jmp
out
fcomps
loop
add
inc
aaa
shlb
rolb
out
inc
lcall
dec
mov
push
cmpsl
fisttpll
out
js
mov
cmpsb
cmp
and
mov
xchg
push
mov
in
out
xchg
mov
xor
mov
ljmp
cmc
and
pop
lret
push
jbe
sahf
ss
jno
pop
outsl
lods
loop
mov
push
pop
nop
lret
insl
scas
sbb
jno
mov
ljmp
or
fiaddl
ficoms
xor
push
adc
dec
xor
aam
aad
xchg
imul
xchg
mov
dec
flds
nop
mov
xchg
adc
dec
mov
jne
mov
add
and
in
outsl
sub
pop
sbb
push
mov
pop
mov
jle
push
femms
add
add
repz
mov
inc
xchg
dec
push
cli
and
lret
in
mov
cmp
and
push
dec
inc
dec
jle
rcll
cmpsb
inc
mov
cltd
sbb
mov
into
shl
inc
clc
push
decb
cmp
xlat
and
and
lods
inc
xor
dec
clc
push
stos
aad
push
pop
mov
pop
das
mov
dec
jp
sub
ret
xchg
jg
iret
sarb
add
lea
add
outsl
outsl
add
lods
xchg
cmp
and
inc
push
mov
sub
shrb
inc
adc
pop
lcall
lcall
mov
aaa
xor
or
inc
xor
inc
sub
dec
mov
cmp
cmp
jo
lea
adc
pop
cli
popa
hlt
cmp
cli
jae
jb
adc
pop
cmp
mov
mov
f2xm1
push
xor
out
jo
cmp
mov
adc
enter
ja
negl
test
and
pusha
repnz
andl
xor
sub
or
xchg
in
cli
loop
jmp
jp
cmpsb
lock
push
adc
mov
xchg
cmp
mov
fidivrs
pop
sbb
pop
lea
adc
lock
cmp
int
mov
dec
adc
mov
hlt
fldenv
jle
aaa
sbb
and
idiv
pop
pop
push
mov
inc
pop
push
gs
into
xchg
insb
xchg
and
bound
adc
sbb
lock
in
stos
dec
sbb
jno
out
sti
jne
xchg
movsb
mov
aad
inc
jae
jo
mov
sbb
cmp
mov
data16
or
xchg
cmp
sub
push
push
inc
mov
adc
mov
cli
popf
xlat
cmpsb
fimull
xchg
mov
test
or
jmp
mov
pop
and
incl
dec
scas
jo
jo
push
pop
inc
addl
push
mov
and
push
add
scas
inc
jmp
mov
inc
inc
iret
inc
fsubp
leave
mov
sub
cmp
in
adc
in
orl
inc
xor
push
adcl
pop
call
push
jae
decb
pop
aaa
jge
lods
sub
cmp
mov
push
mov
js
or
pop
add
dec
cwtl
test
sub
mov
ja
mov
dec
lahf
loop
xchg
cs
or
inc
loopne
inc
add
mov
aad
cs
mov
and
insb
dec
cmpsb
lods
scas
xchg
or
push
add
shlb
icebp
out
and
cmp
movsl
xchg
test
std
sbb
and
jno
inc
test
push
ret
pop
roll
out
jp
daa
icebp
js
mov
lock
test
push
xchg
sbb
fsubs
xchg
test
xor
fwait
xbegin
lods
enter
or
jb
inc
inc
inc
out
and
rorb
popf
xchg
and
pop
mov
cli
arpl
inc
stos
jl
adc
stc
push
or
jmp
pop
fwait
gs
lods
lods
adc
mov
call
aas
lcall
jl
cmp
pushf
movb
sbb
xchg
fistl
imul
jp
mov
or
pop
cmp
xchg
stos
fs
iret
imul
frstor
loope
and
dec
xorb
stos
sbbl
mov
clc
dec
mov
cmp
push
out
mov
fmulp
pop
dec
mov
mov
arpl
les
sub
fistl
add
ss
nop
in
pushl
mov
add
sbb
ljmp
iret
push
testl
push
mov
cmp
cmp
idivb
movsb
inc
jg
adc
lret
test
add
jmp
repnz
scas
mov
loope
std
cmp
add
mov
popa
out
scas
xor
repnz
push
inc
outsl
xchg
bound
or
leave
testl
movsl
stos
pop
int3
cli
mov
popf
in
mov
jb
jno
sub
adc
add
cld
lcall
xor
jb
xchg
mov
popa
bound
popf
push
shl
inc
pop
call
pop
stos
mov
pop
mov
sbb
push
push
mov
mov
dec
in
mov
jmp
aam
sbb
xchg
mov
pop
add
xor
sbb
hlt
dec
cmp
filds
mov
and
jns
loop
stc
push
js
js
arpl
mov
mov
adcb
leave
or
leave
dec
imul
ss
fldlg2
xchg
pop
into
cmp
jb
mov
mov
fwait
scas
fwait
or
fwait
stc
sbb
or
lcall
or
popa
imul
or
out
push
and
xchg
pop
jae
je
in
outsb
shll
lahf
shlb
mov
adc
in
mov
insl
or
adc
aaa
js
rolb
and
imul
push
std
jo
dec
mov
in
lock
call
pushf
clc
inc
cmp
lret
ja
push
inc
sub
loope
and
adc
rclb
jl
decb
fistpl
mov
xchg
sbb
sbb
daa
cmp
push
imul
dec
inc
rcll
push
divb
mov
jb
imul
std
div
adc
sub
pop
xchg
cmpsb
in
or
adc
jns
fs
nop
ret
aaa
mov
inc
mov
adc
lret
ret
jg
enter
testb
push
and
out
adc
lret
mov
sub
aam
jne
push
sbb
push
in
pop
pop
jo
dec
adc
add
aaa
pop
inc
leave
imul
shlb
adc
inc
int
xchg
cmpsl
aaa
push
fnstenv
movsl
addr16
jnp
xchg
outsl
shrb
jae
inc
scas
xchg
fwait
pop
ret
and
push
out
test
lds
or
add
xchg
lret
pop
sbb
mov
xor
shrl
loop
ret
adc
iret
aad
push
push
shl
mov
fstps
andb
or
jne
sahf
fsubrp
mov
mov
jbe
jle
push
or
mov
sub
imulb
xchg
nop
pop
roll
call
insb
mov
mov
fldenv
inc
adc
sbb
int3
sub
repnz
cmp
mov
jp
mov
cmp
push
in
daa
sub
out
dec
vcomiss
push
cmp
aaa
push
fisttpl
sbb
pop
mov
adc
cmp
repnz
or
lret
cld
orb
dec
nop
mov
test
sub
add
rclb
fldcw
add
jae
mov
xrelease
out
aam
pop
jne
xor
mov
popa
sub
dec
sbb
mov
rorb
cmp
enter
jns
mov
mov
das
outsl
out
add
sub
pop
mov
in
add
out
inc
mov
mov
aas
add
xchg
pop
fcmovnb
stos
out
aad
cmp
mov
xchg
dec
testl
int
xor
mov
fidivl
or
cmp
jle
sub
add
xlat
sbb
leave
out
add
cli
dec
pushf
lods
roll
rclb
cltd
shlb
lods
cmp
cmp
cltd
sub
test
jne
outsl
int3
or
mov
pop
xor
xlat
xor
rorb
mov
mov
push
xchg
push
stc
outsb
xchg
or
pusha
out
inc
push
cmpsb
mov
xchg
rclb
clc
xchg
jmp
or
scas
and
imul
sbb
cmpsb
or
jb
push
mov
shrb
inc
cltd
aas
cmpsb
pop
in
pop
cmp
sti
xorb
mov
shll
jo
incl
mov
push
sbb
xchg
lret
sbb
push
mov
lock
not
mov
adc
push
movsb
flds
sub
xor
push
fdivrs
jne
cmpsl
dec
loopne
out
les
sub
adcl
std
and
jl
xor
xor
or
sub
mov
pushf
push
je
imul
sub
jp
rcrl
or
enter
pop
in
and
data16
fldenv
lods
jb
out
imul
cmpxchg
sbb
in
cmp
ja
fnstenv
insl
mov
rcrl
sub
or
scas
mov
jle
inc
pusha
add
popa
leave
jle
loop
inc
fstpt
lret
jno
repnz
xchg
inc
jo
adc
imul
repz
push
xor
inc
pop
iret
outsb
and
hlt
movsl
push
into
cmp
mov
add
cmp
hlt
mov
inc
jl
mov
shl
adc
dec
cmpsl
or
push
je
test
xorb
into
or
or
add
movsl
adc
xor
inc
inc
lods
mov
inc
cmpsb
or
test
add
dec
xor
xor
or
add
and
mov
push
imul
fwait
or
cmp
mov
jbe
push
fildl
loopne
or
xchg
mov
imul
mov
dec
add
and
andl
ret
pop
and
mov
jb
into
popf
movsl
in
sub
cmpb
fidivrl
idivb
cmp
pop
cs
xor
cmp
mov
ret
sbb
std
ss
bound
das
mov
test
int
lret
and
imul
rclb
sbb
out
push
lcall
cs
daa
repz
in
inc
cld
or
jge
pop
push
push
xchg
or
and
adc
nop
lahf
mov
xorl
sub
pushf
mov
pop
inc
push
dec
jae
aaa
movsl
lods
inc
jmp
rolb
sub
or
jne
mov
and
push
orb
mov
push
xchg
lcall
and
ss
dec
inc
fcoms
xchg
je
mov
movsb
fadd
mov
sub
push
iret
not
dec
xor
test
out
mov
insl
mul
fisubs
inc
jbe
inc
xor
cwtl
jl
dec
fwait
outsl
sub
cld
pop
sub
push
inc
dec
jae
jbe
sbb
insb
mov
shll
out
mov
xchg
dec
jb
dec
inc
lods
rol
xor
mov
sti
test
add
mov
xchg
sbb
xchg
stos
inc
ljmp
mov
dec
rcl
and
jmp
gs
cmc
ret
or
xor
loope
nop
dec
mov
mov
xor
inc
mov
pushf
ret
stos
inc
test
and
or
mov
sbb
pusha
jb
xor
in
and
int
cltd
rorb
sarb
out
or
cmp
in
pop
or
stos
fwait
lahf
mov
pop
add
bound
sbb
cli
loope
testl
dec
cmp
sbb
pop
push
mov
sbb
sub
adc
sbbl
cwtl
or
vmovddup
pop
adc
into
adc
sub
sub
inc
andb
push
jns
dec
mov
jle
mov
lret
lock
aas
ljmp
or
enter
push
das
fcomps
pop
adc
xchg
fists
mov
adc
icebp
cld
addb
xor
lods
xchg
ljmp
test
in
mov
fimull
mov
rorl
std
frstor
popa
roll
notl
push
mov
mov
and
dec
inc
and
or
sub
pop
outsb
outsl
mov
popa
push
dec
push
xor
cmp
movsb
fisubrs
pop
cli
inc
stos
add
int
mov
xchg
push
fdivs
dec
imul
cltd
into
pop
xor
pop
ror
cmpsl
add
lock
xchg
pop
shrb
mov
cs
sbb
cmp
rolb
pusha
ret
add
imul
cvttps2pi
inc
push
mov
mov
fwait
cmp
arpl
push
mov
sbb
mov
pop
fdivl
sbb
movsb
jnp
and
dec
cs
cmpl
xor
clc
push
mov
or
hlt
mov
pusha
filds
xor
pop
in
xchg
xchg
dec
mov
push
ss
jg
lahf
push
add
xchg
mov
movsb
outsb
xchg
jno
pop
cli
push
pusha
xor
hlt
test
pop
das
sbb
scas
jo
aad
clc
jge
je
xchg
push
pop
out
jle
cmc
push
dec
arpl
int3
push
jp
jmp
jmp
xchg
and
sarl
xlat
inc
je
insb
add
ftst
imul
mov
aad
out
lcall
add
or
out
jae
mov
sub
dec
dec
jp
aam
enter
je
nop
push
cld
xadd
aad
mov
sbb
or
inc
push
add
dec
fs
rorl
mov
cmp
call
pushf
sti
xor
fucom
mov
or
xchg
adc
lcall
repnz
stos
icebp
sbb
sub
test
sar
ds
cmpsb
outsb
rorb
pusha
adc
push
hlt
xchg
push
xchg
pop
xchg
outsb
rclb
xor
mov
sbbl
pop
nop
mov
push
mov
lret
pop
fcomp
and
jl
cmp
out
inc
dec
dec
addr16
xchg
loopne
sub
xchg
dec
rcrb
mov
loope
dec
mov
jmp
movsl
pop
leave
push
cmp
insl
imul
mov
push
sbb
add
movsl
out
scas
dec
in
push
lret
fs
sbbb
pop
js
dec
dec
jg
sbb
xor
fbstp
pop
ja
and
or
add
lods
scas
lret
fsubrs
pop
dec
push
ss
mov
xor
lods
inc
mov
ret
fstp
subl
or
xchg
push
sti
loope
scas
cwtl
inc
mov
leave
int3
push
jmp
inc
das
lret
adcl
inc
lahf
sub
xor
mov
ss
divl
fnstcw
adc
sub
or
mov
jbe
aaa
enter
jmp
test
cs
mov
push
sahf
popa
sub
pushl
into
popa
sub
cltd
mov
adc
adc
ss
lahf
cld
mov
mov
int
jb
xchg
mov
or
fisubrs
lahf
int3
mov
fwait
dec
cld
fnsave
adc
cld
push
ljmp
subb
test
mov
icebp
mov
jmp
push
adc
js
imul
push
mov
xchg
fcomip
jge
push
xchg
insb
push
adc
lahf
jns
fldl
sbb
and
loope
sub
pushf
mov
ja
je
and
or
pop
jecxz
inc
in
lods
pusha
popf
test
push
mov
ret
and
faddl
movsl
lds
or
repz
xchg
icebp
imul
jb
sbb
fs
iret
hlt
call
loope
setb
inc
inc
test
pop
popa
xchg
and
xor
fcompl
push
enter
xchg
das
pop
adc
xchg
fs
lahf
bound
testb
xchg
test
in
addl
stos
addr16
pop
fwait
dec
xor
xor
stos
cmpsb
adc
dec
mov
loop
loopne
data16
jns
push
cmp
rcll
mov
sbbb
mov
mov
in
pop
lret
hlt
jle
mov
fnstenv
clc
shrb
in
scas
lds
jne
jne
cli
jl
fstps
inc
adc
iret
mov
dec
inc
pop
nop
cmp
cmc
xchg
aaa
dec
ja
popf
mov
iret
xchg
and
addb
sbb
ss
fcmovnbe
push
insb
lret
lds
arpl
sub
je
mov
fcomps
push
adc
inc
mov
pop
ljmp
push
aaa
sub
lahf
xchg
jo
cmpsb
push
push
or
pop
and
in
daa
cltd
xchg
adc
mov
mov
xchg
sub
mov
andl
dec
hlt
pop
popl
xlat
jns
clc
mov
or
loope
dec
mov
and
pop
mov
dec
push
arpl
stc
fwait
adc
icebp
mov
jns
mov
push
int3
icebp
arpl
pop
fsubl
dec
insl
lock
mov
scas
fincstp
jo
xchg
mov
iret
mov
ljmp
jmp
dec
jg
adc
push
flds
insl
outsb
jbe
imull
add
mov
test
cmp
aaa
aas
jne
and
test
loop
dec
imul
dec
adc
jg
add
adc
sbb
and
push
gs
aas
ljmp
cmp
sahf
adc
fdivs
xchg
sahf
aam
into
stos
data16
shlb
sub
into
stos
fwait
adc
sahf
or
dec
sub
pusha
roll
pushf
lock
into
nop
jge
mov
aas
pop
sbb
sbb
dec
add
mov
test
loope
mov
cwtl
xchg
jge
ja
jno
jno,pn
inc
fs
pusha
pop
mov
adc
js
and
popa
aaa
stos
mov
rcl
sub
jl
or
orb
lret
sub
jge
pop
shlb
or
imul
pop
jle
dec
mov
movsl
movsb
in
cmp
popf
bound
adc
std
jo
push
outsb
mov
xor
stos
lahf
or
pop
mov
stc
push
gs
xchg
dec
in
iret
pop
sub
jns
cmp
mov
pop
xchg
pop
mov
cmpsl
js
dec
andl
adc
xor
hlt
or
outsb
scas
push
data16
jle
arpl
test
inc
adcb
xor
mov
sub
push
mov
sets
and
imul
sbb
rclb
xchg
pop
sbbl
sub
add
pop
mov
inc
pushw
cli
ror
ds
cld
fstpt
outsb
jge
ss
scas
arpl
and
mov
add
sbb
mov
out
lds
jo
jl
es
call
testl
sbb
test
pop
push
add
in
hlt
or
sub
adc
cld
sbb
sub
sbb
and
in
incb
ss
loopne
xchg
andl
lds
cltd
call
iret
jo
mov
out
dec
pop
cmp
aas
push
dec
testl
xchg
loopne
and
push
push
or
enter
add
jbe
push
imul
movsl
hlt
pop
xor
lcall
dec
mov
push
les
pop
lea
movsl
xor
fdivr
xchg
aad
cmc
rolb
jbe
mov
adc
test
push
add
push
jno
inc
and
mov
fs
push
jecxz
xchg
in
push
inc
dec
xchg
jbe
repnz
mov
sub
push
add
xchg
outsl
jg
mov
adc
mov
roll
mov
out
mov
out
pop
lods
gs
cli
pop
popf
mov
stos
dec
dec
clc
into
mov
outsb
fnstsw
push
jnp
imul
shrl
jae
mov
dec
lea
jmp
push
pushf
orl
dec
std
xchg
arpl
and
add
outsl
and
lods
mov
rorb
mov
add
std
stc
cli
shr
repnz
movsl
add
or
out
jnp
inc
mov
push
lods
test
sub
xchg
ljmp
adc
out
clc
push
xor
lea
btr
jl
sarl
jl
test
lret
cltd
in
imul
or
inc
in
nop
cmp
gs
and
jp
or
adcl
xchg
mov
shl
and
fsubl
mov
mov
out
frstor
sbb
jecxz
and
leave
filds
push
sbbl
jle
inc
das
fnsave
mov
in
mov
pop
add
jnp
push
mov
jg
xor
xchg
lods
fildl
out
fisttpll
adc
ret
cmpsl
gs
sbb
ljmp
sahf
fdivs
repnz
mov
push
mov
arpl
nop
jecxz
xchg
cld
mov
inc
stos
sub
xchg
insb
dec
push
jge
sub
cmp
lcall
test
ss
out
adc
in
das
mov
or
loopne
xchg
pop
push
imul
sbb
add
addr16
add
or
dec
inc
loopne
add
xchg
sti
cmc
inc
es
xor
xchg
add
imul
mov
repz
and
inc
hlt
js
xor
or
and
leave
int
addr16
add
addr16
aad
xor
push
jmp
or
mov
or
daa
or
mov
test
xchg
ficompl
sbbb
mov
sub
enter
loopne
icebp
fadd
xor
out
shr
pop
jo
jle
ret
xor
sbbl
mov
jnp
cli
xchg
jmp
mov
std
test
loopne
out
repnz
push
mov
xor
xchg
outsl
shll
leave
xor
mov
adc
stos
inc
enter
cmp
stos
lahf
xor
xor
inc
sub
in
push
mov
pop
and
fcomi
xor
mov
sbb
jl
stos
in
pushf
jae
inc
or
pop
jge
stc
or
xchg
sub
jns
mov
mov
test
push
and
lcall
jmp
repnz
repnz
incb
lahf
mov
mov
pop
xchg
test
jp
push
div
movb
hlt
addr16
das
ss
rcl
je
mov
sbb
sub
jnp
jecxz
iret
loopnew
mov
loopne,pn
rcrb
fs
movsl
lods
add
cs
out
cmp
ja
lret
rorl
pushl
jns
xchg
cmp
pop
mov
daa
aas
jecxz
incb
dec
and
dec
dec
sub
xchg
icebp
lahf
xchg
sub
cltd
push
out
les
cmc
cmp
cld
arpl
gs
mov
mov
push
scas
push
stos
int3
outsb
sub
in
pushf
dec
mov
fsubl
ret
cmpl
and
mov
mov
push
rcl
jl
sub
dec
call
inc
xor
adc
dec
jne
sti
xchg
mov
inc
orl
jnp
out
clc
push
dec
insl
jno
data16
push
inc
cwtl
dec
push
inc
sbb
dec
jno
xor
cmp
or
push
cmp
inc
jmp
lock
lret
and
pop
movsl
loopne
pop
aaa
mov
pop
sbb
pusha
push
push
sbb
mov
das
mov
leave
aaa
mov
xchg
inc
sub
mov
sbb
fwait
div
mull
pop
negl
sub
xchg
mov
loopne
push
sbbb
mov
cmp
pop
push
gs
jp
push
and
and
pop
xchg
and
sbb
push
test
scas
shlb
enter
mov
pop
xchg
cmp
aas
sbb
cmp
in
sbb
iret
fstl
cwtl
jo
int
sub
lods
cwtl
outsl
and
dec
negb
jp
and
out
or
mov
xor
push
imul
mov
and
insb
rep
push
rol
push
xchg
ja
pop
sti
scas
jbe
push
mov
es
jb
mov
mov
sarl
das
jg
lock
repz
sub
jmp
cmp
imul
rcrl
lods
cmp
and
shr
sbb
cmp
xchg
in
test
mov
inc
int
stos
addr16
push
add
or
lcall
push
inc
push
sub
gs
sub
push
rcll
popa
jle
test
clc
aad
test
xchg
or
dec
mov
add
cwtl
mov
inc
test
xchg
jge
sbb
mov
or
fdivr
cltd
in
scas
pop
imul
pop
add
nop
test
sbb
cltd
movsb
add
jne
scas
mov
xor
lods
sarl
xchg
add
call
or
dec
mov
fwait
jo
aas
add
dec
inc
dec
out
cld
insl
insb
jo
fisubl
arpl
inc
iret
lods
jo
jle
aam
rcll
mov
sub
js
shlb
inc
daa
adc
mov
shrl
cmpb
add
push
in
mov
push
and
mov
inc
push
bound
adc
xchg
pushf
dec
jle
and
std
push
loop
mov
ljmp
cwtl
or
fcom
movsl
xor
in
lea
jae
xchg
and
push
adc
mov
mov
push
imul
jg
movsl
push
ret
mov
ljmp
incb
mov
push
adcb
sub
mov
in
fwait
dec
pop
pop
inc
or
jmp
frstor
test
mov
lahf
shlb
cmp
mov
adc
jp
pop
in
test
into
ss
pop
and
and
or
jo
aam
sbb
mov
lret
cwtl
or
sti
jno
popa
mov
fwait
xor
cwtl
int3
cmpb
xlat
jae
dec
shlb
inc
and
imulb
and
int3
mov
int
out
cmpl
cwtl
outsb
sbb
cli
adc
jb
xchg
inc
cmp
fiadds
mov
cmp
mov
arpl
aad
aad
in
adc
fldl
inc
lcall
data16
pop
mov
dec
mov
nop
mov
xchg
shlb
push
sbb
lret
imul
inc
jne
jno
add
dec
scas
inc
mov
daa
cmp
inc
les
lahf
stc
fstps
cmp
in
pop
in
cmp
in
lds
mov
inc
aas
cmp
aas
adc
xor
sbbl
mov
shl
test
dec
ja
dec
mov
dec
popf
add
fwait
push
sub
arpl
jle
leave
loopne
repnz
inc
aaa
hlt
jb
push
pop
into
sbb
cmp
ret
das
into
aam
jne
stc
jp
stos
mov
loope
sbb
mov
out
flds
clc
or
es
cmpsl
out
mov
mov
call
mov
out
jl
cmp
mov
gs
cmp
or
adc
inc
lods
jo
xor
das
and
test
push
cmc
outsl
mov
push
and
repz
stos
xor
into
and
addr16
inc
cmp
in
mov
ret
enter
sub
rcl
rcll
aad
les
insl
or
and
ret
sub
es
cs
mov
mov
cmpsl
shrl
fstpt
jns
mov
sti
in
int3
pop
xor
stc
jp
dec
adc
ja
push
insl
sub
pop
jl
lret
pop
popf
dec
inc
inc
add
nop
sahf
data16
cmpsl
mov
or
aaa
pop
lret
mov
cli
jp
and
std
cmp
out
fnstcw
or
cmp
scas
xor
loopne
pushf
pop
fistl
loope
push
cld
jmp
dec
mov
push
sub
arpl
cmp
push
enter
insb
outsl
push
stc
or
mov
pop
or
mov
testl
mov
pop
out
cmpsl
jg
clc
pop
push
scas
sub
ljmp
sbb
xchg
rsqrtps
call
scas
add
mov
pop
rsm
cmpsb
sbb
lods
fmull
imul
inc
mov
mov
arpl
xor
ret
mov
mov
gs
adc
rclb
rcr
loopne
cmp
addr16
and
sbb
xor
jmp
push
and
inc
ds
mov
pop
mov
cmpsb
cmp
popf
mov
pushf
loopne
add
rcrb
mov
lods
pop
xchg
and
lcall
xor
ja
insb
rcrb
sub
test
push
es
lea
out
pop
jo
pusha
in
aam
aad
call
lods
sbb
fistpll
mov
dec
push
sbb
push
mov
mov
mov
outsl
ds
dec
out
mov
xor
test
fisubrl
pop
dec
ret
ja
vmovdqa32
ds
dec
inc
call
pop
popf
jno
inc
mov
ret
add
ds
xor
cmpsl
sub
fildl
gs
das
inc
ljmp
je
xchg
fstpl
cmp
fimuls
adc
mov
add
pop
stc
rol
xchg
cmpsb
es
mov
adc
xor
icebp
dec
adc
mov
sbb
or
inc
push
lret
xchg
xor
pushf
fxch
stos
cmp
mov
adc
push
arpl
pop
jge
mov
loope
fisubrs
pusha
sbb
imul
idiv
and
sub
test
xchg
adc
movsl
jno
jle
mov
mov
inc
cmpsl
lods
and
lock
cwtl
push
sub
push
loop
or
fsts
or
jns
sbb
xor
cmpsb
int
lret
daa
sub
mov
jl
push
insb
imul
xchg
mov
fdivrs
cmp
fldlg2
inc
jp
cli
fwait
cmpsl
pop
mov
cmp
idivb
jecxz
ja
ret
inc
jns
or
cli
or
dec
cmpl
pop
test
inc
test
xchg
ret
or
pop
push
xchg
hlt
cmp
rorl
imul
fimull
jbe
fisubrs
lret
fistpll
fdivs
mov
fldenv
push
out
sub
pop
and
and
mov
and
ja
orb
dec
pop
and
ror
push
loopne
sbb
pop
xchg
enter
sti
mov
sub
jp
andl
in
or
jge
adc
iret
stos
test
push
gs
mov
lahf
inc
loopne
cs
jp
and
cmp
lcall
into
push
fwait
sbb
pop
push
jnp
jae
add
push
into
cltd
mov
int
push
adc
iret
ret
loope
pop
inc
repz
add
es
mov
cmp
sar
mov
clc
inc
cmp
lret
pop
mov
inc
xorb
out
jl
sbb
sub
pop
and
pop
add
cltd
inc
rorl
jb
dec
mov
mov
add
mov
xlat
gs
lahf
insl
insb
mov
cmp
aam
mov
sbb
inc
popa
out
dec
repz
loope
mov
mov
jmp
pop
fucomip
shl
pop
sub
adc
mov
cmpsl
push
int3
addr16
inc
scas
xlat
cmp
out
outsb
push
lock
xchg
dec
and
push
test
insb
mov
mov
test
lcall
stos
mov
or
dec
fiaddl
xor
and
test
rcll
pop
enter
sbb
dec
xlat
sub
mov
xor
in
inc
push
cs
outsb
and
sbb
aam
xor
or
scas
das
pop
inc
inc
xor
mov
cmp
or
or
fdivr
mov
aad
jae
sub
jns
mov
into
hlt
sub
mov
jne
popf
lret
jnp
mov
mov
dec
subl
pop
dec
pushf
push
xchg
xlat
push
pop
adc
xchg
roll
and
dec
fadds
mov
sub
and
scas
sbb
inc
lcall
push
stc
pop
icebp
clc
imul
jnp
sub
or
arpl
lock
pop
jmp
rol
movsb
imul
ret
shrl
adc
jge
jmp
sbb
stos
pushf
mov
mov
mov
dec
add
imul
fwait
aam
scas
or
decl
aaa
les
jo
imul
bound
mov
pop
inc
and
imul
cmp
or
cli
dec
cmp
or
jns
fsubl
in
push
aas
jae
or
cld
sbb
es
jbe
push
sub
sub
push
dec
cmp
sub
movsl
or
fsubrl
mov
fstps
imul
or
add
lock
rcl
in
push
fmull
int3
mov
popf
into
movsl
cli
jno
fisttpll
inc
mov
dec
xlat
test
inc
xor
test
xadd
inc
sti
xchg
rcll
pop
mov
or
sub
cmp
adc
fs
jle
out
jp
iret
inc
fsubs
test
hlt
pop
test
xlat
mov
sti
jbe
push
pop
add
mov
pushf
cwtl
mov
push
adc
gs
inc
xchg
stos
cltd
std
fidivrs
push
add
dec
addr16
test
out
imul
or
cli
out
in
push
xchg
ja
fwait
aam
or
push
mov
push
cmp
adc
mov
inc
inc
idivb
cmp
sbb
mov
sub
jb
in
xor
shrl
xchg
repz
xchg
inc
sub
hlt
data16
dec
cmp
cmpsb
push
pop
pop
add
in
or
negl
into
add
inc
cwtl
mov
rorl
jbe
inc
repnz
es
in
fistpll
adc
fldl
pusha
jmp
pushf
adc
jmp
flds
jo
adcl
cmp
cwtl
test
in
out
mov
push
in
lods
xchg
pop
mov
inc
or
not
test
push
mov
adc
scas
xchg
out
popf
testl
mov
movsl
cmpl
push
shl
icebp
xor
iret
adc
mov
jbe
insb
inc
push
inc
ss
repz
jae
jecxz
mov
roll
push
cmp
sbb
fimuls
jle
rcl
adc
inc
aam
push
inc
popf
loop
add
mov
scas
hlt
int
add
mov
addr16
mov
pop
notl
je
test
add
push
in
daa
mov
xor
dec
mov
cli
sbbl
clc
pop
dec
stos
or
dec
das
dec
adc
push
mov
test
icebp
adc
sbb
aad
pop
pop
xchg
add
adc
cwtl
aad
popa
mov
sub
adc
dec
mov
pop
shl
test
jmp
cli
xor
cwtl
jnp
lret
inc
lret
push
jl
jge
movsl
shlb
jne
test
fwait
xor
loop
inc
lds
arpl
sub
shlb
push
dec
sub
aaa
in
cmp
mov
mov
mov
inc
jns
loop
sahf
pop
in
pusha
sbb
imul
repnz
mov
lret
stos
lods
sbb
cmp
popf
adc
es
and
and
or
enter
cmp
pop
cs
add
clc
mov
pop
xor
cmp
je
cltd
in
xchg
mov
jnp
outsl
int
repz
or
fwait
adc
test
dec
bnd
repnz
pop
xchg
iret
cltd
lahf
jmp
sub
jo
mov
int3
jl
sbb
call
data16
lea
mov
lahf
mov
jmp
dec
sbb
jnp
int3
inc
aaa
cwtl
and
rorb
cmp
mov
mov
notb
jae
adc
jge
sub
pop
and
mov
jno
ds
mov
mov
aam
aaa
addr16
enter
xchg
hlt
aaa
je
ret
imul
xchg
push
fnstcw
hlt
mov
add
and
push
pop
dec
lods
xor
gs
mov
xlat
data16
call
pop
mov
outsl
aaa
or
xor
insb
cwtl
lcall
jmp
sub
lds
inc
xor
imul
por
push
imul
xchg
fwait
lret
in
decb
movsl
push
jae
loope,pn
leave
cmc
or
push
jg
cmp
je
dec
pop
lahf
xchg
jp
sbb
inc
idivl
fstpt
dec
lret
out
xchg
mov
xchg
in
fsts
scas
sti
fdivl
sbb
adc
jbe
nop
cmp
int
or
testl
cmp
inc
and
push
and
lret
xchg
adc
adc
sahf
testb
nop
lret
jecxz
dec
jno
mov
arpl
xchg
shrl
les
add
rorb
xlat
jmp
mov
and
inc
add
dec
in
or
mov
pop
push
and
testb
xchg
sbb
pop
xor
pop
leave
inc
mov
sti
shr
pop
mov
xor
cmc
mov
push
repz
fdivp
sub
loop
pop
hlt
pop
mov
xchg
mov
dec
cli
xor
scas
ljmp
adc
mov
aas
pop
andl
sub
mov
rcr
mov
push
es
fst
aam
jecxz
or
pop
jg
cmp
sub
xor
mov
jp
repnz
dec
xchg
pop
shlb
inc
in
push
xchg
add
xchg
mov
adc
imul
insl
jae
sbb
jo
outsl
xchg
out
or
data16
mov
cmc
into
rorl
dec
lcall
push
shll
mov
sub
loopne
sbb
daa
call
leave
mov
cmp
out
sbb
roll
aaa
and
addb
pop
les
aad
dec
sub
sar
fidivrl
adc
popf
mov
pusha
fidivrl
sahf
and
cmp
lods
inc
mov
out
cmc
data16
xchg
cltd
mov
push
int3
test
xor
jge
aaa
lock
adc
adc
add
xchg
insl
inc
and
xor
adc
sbb
movsl
mov
push
int3
arpl
in
dec
leave
jmp
out
dec
mov
jle
loop
hlt
sbb
push
mov
sub
cld
cltd
and
sti
adc
pop
scas
sti
push
cmpsl
lar
scas
dec
cli
mov
ret
data16
push
push
sub
scas
pop
dec
sub
sbb
ror
scas
into
cmp
fstpt
mov
popa
sbb
aam
push
cli
test
push
repz
dec
adc
push
out
and
adc
sub
insb
mov
xchg
aad
inc
iret
pop
enter
mov
decb
pop
shll
or
and
repz
out
xchg
gs
pop
xchg
inc
cmpsl
mov
jle
pusha
sub
jo
xor
jo
fcmovnu
or
sub
cmpsb
mov
xor
push
pop
jb
push
jecxz
dec
popf
push
insb
push
xchg
sbb
mov
inc
push
jo
stos
fs
movsl
mov
dec
call
movsl
lea
dec
sti
imull
xor
xor
mov
arpl
fnsave
cwtl
aaa
ds
lret
and
mov
stc
insl
inc
jnp
iret
xor
dec
jns
mov
out
xlat
loope
ljmp
push
mov
cmp
es
sbb
out
push
jle
jl
pop
ret
jo
int
inc
ficoms
fidivrs
adc
imul
xchg
hlt
push
xor
inc
aas
or
lea
mov
lods
mov
scas
ret
adc
test
lcall
cmpsl
fcomip
test
mov
jbe
jge
enter
loop
dec
pop
outsl
push
or
mov
xlat
jo
jle
and
jnp
adc
jne
sub
mov
cmp
add
xor
and
mov
ficoms
push
fldt
mov
xor
inc
shll
cmpsl
fxch
sub
dec
xchg
or
ror
mov
inc
mov
adc
sahf
outsb
dec
sbb
cld
ss
gs
repnz
xchg
int3
jne
cmc
sub
jmp
enter
adc
sub
imul
test
jmp
jne
and
jge
rol
cld
push
pop
aaa
lret
insb
cld
fnstsw
mov
sub
filds
sbb
imul
mov
and
popa
loope
pop
push
cli
push
cmc
jne
mov
mov
xlat
pop
add
pop
xor
mov
insb
cmp
lds
lds
xchg
fwait
inc
xor
lcall
add
push
sbb
int
pop
sbb
pop
cmpsb
xlat
addr16
jl
dec
mov
cmp
aaa
sub
lcall
pop
xor
or
add
mov
pop
cltd
mov
inc
loope
lret
cli
sub
add
fimuls
mov
imul
cli
arpl
sbb
inc
adc
sarl
fwait
jmp
adc
push
add
jmp
jnp
adc
stos
mov
dec
shlb
loope
xor
rorb
outsl
xor
sbb
cmp
fistpll
jmp
loopne
or
push
dec
cld
mov
push
cmp
mov
cmp
cmp
repnz
mov
rorl
into
js
daa
jg
shr
mov
xor
xlat
dec
jno
push
mov
ret
cmp
or
incl
loop
xchg
rcll
xchg
sub
aad
aaa
out
mov
mov
nop
push
adc
or
sbb
ljmp
jb
sub
inc
loope
fs
aad
insb
mov
jecxz
cmp
insl
out
pop
dec
rorl
adc
ret
pop
jb
pop
or
mov
jns
ss
pop
dec
jl
aaa
test
push
ret
mov
pop
fadds
xor
cld
push
cmp
jb
mov
test
stc
and
push
or
jno
fs
sbb
test
inc
xchg
roll
mov
sbb
add
jns
cltd
hlt
std
mov
stos
pop
sub
mov
sbb
or
xor
sbb
leave
mov
xchg
push
jb
adc
lret
mov
cwtl
sbb
add
jae
fistps
ret
rcr
or
xchg
call
push
mov
call
adc
mov
arpl
scas
mov
out
sbb
gs
mov
adc
test
and
pop
mov
sub
pop
ffree
adc
int
out
inc
pop
ljmp
in
mov
push
push
icebp
call
movsl
loop
dec
mov
mov
mov
add
enter
in
lret
mov
loopne
or
mov
pop
mov
addr16
jp
scas
loope
pop
testb
cli
jge
lret
jae
pop
xor
xchg
ljmp
lahf
dec
xor
adc
jge
insb
xchg
pop
and
cltd
out
mov
lods
push
push
in
pop
imulb
or
sub
inc
out
mov
orl
inc
roll
mov
inc
stos
xchg
mov
ljmp
fcomps
pop
and
ret
jb
and
pop
sahf
ja
inc
and
cmp
pop
add
xchg
push
test
mov
loopne
mov
fimull
cmp
ret
int3
lock
push
gs
popl
push
test
neg
jmp
lods
mov
daa
cltd
popa
or
mov
push
lods
mov
push
rcrl
test
pop
inc
fsub
lahf
daa
inc
mov
cmpsl
xchg
sbb
pop
imul
mov
dec
inc
sbb
ljmp
and
hlt
xchg
sahf
stc
cmp
inc
sub
and
pop
push
adc
insb
icebp
rcr
loope
mov
jno
mov
fstpt
shrl
gs
jp
lock
add
mov
outsb
sub
lret
jnp
fistpll
ficoms
cmp
jno
sub
or
fmuls
lahf
mov
jae
xchg
je
mov
das
or
sub
ja
jno
mov
nop
mov
adc
jp
mov
int3
xor
cs
jmp
out
mov
movsl
out
inc
nop
popf
push
in
imul
mov
les
aas
add
xchg
jbe
mov
sbb
cmp
aas
push
adc
mov
leave
mov
stos
ret
inc
sub
sub
arpl
cmpb
inc
dec
js
mov
inc
xchg
add
pop
cwtl
add
movsl
idivb
add
in
xchg
inc
and
addb
mov
call
aam
add
pop
shll
insb
add
adc
in
nop
daa
cmpsb
fstl
jnp
gs
fstl
stc
cmpsl
ret
daa
inc
iret
inc
cld
lds
mov
leave
pop
jecxz
in
lea
sahf
cmp
pop
cmp
push
jle
ss
scas
mov
sbb
pushw
mov
std
das
mov
push
cmp
sub
xor
cmpsb
xor
popl
sbb
inc
cwtl
shlb
bound
xchg
out
dec
or
xor
sub
push
jne
movsb
pop
jl
ret
fnstenv
pop
cmp
mov
xchg
loopne
lret
addl
cli
xchg
adc
das
shlb
jl
add
adc
repnz
xchg
jb
or
push
nop
jno
xchg
jge
sub
and
mov
test
cmp
sarb
or
test
dec
jmp
jb
xchg
in
lret
loopne
xchg
pop
xor
test
sbb
dec
jo
adc
inc
xchg
loope
xchg
cmp
in
pushf
pop
imul
push
movsb
aas
and
jg
xchg
test
mov
lds
push
push
out
or
push
iret
testl
xchg
dec
xchg
xchg
test
jnp
arpl
loope
scas
dec
pop
ss
lods
ja
ljmp
fdivrs
sub
pop
js
sub
mov
ret
enter
cs
inc
sbbl
fisubs
sbb
scas
adc
dec
hlt
cmp
push
jne
insb
sub
cmp
mov
fstl
inc
int
dec
stos
fiaddl
in
xchg
sbb
push
imul
xor
fdivl
mov
test
mov
out
xor
aaa
or
jle
sbb
pop
fwait
idiv
in
iret
lret
lods
fwait
scas
sbb
pop
cmpsl
bound
loop
iret
jp
call
lods
jns
adc
jmp
xor
xor
pop
cmp
sbb
dec
push
push
pop
insb
movsb
cmp
push
xchg
ret
lcall
xchg
ret
xor
add
cmp
pop
stos
popa
cmp
fstps
ljmp
fsubrs
pop
sub
lahf
gs
scas
xchg
add
roll
test
sbb
xchg
lods
jl
shrl
lock
repz
fsubr
in
popf
pop
lods
and
and
xor
int3
mov
lret
cmpb
xor
es
and
push
adc
lea
inc
adc
gs
push
shrl
add
pop
ds
test
sub
shrb
mov
lds
add
aaa
hlt
rolb
and
cmp
enter
outsl
popf
dec
cld
rolb
adc
outsb
gs
jl
fwait
cmp
push
arpl
scas
rclb
lret
outsb
dec
inc
loope
or
lcall
rclb
xor
push
xchg
pop
jle
push
cmp
add
ret
or
jle
cmpb
add
push
or
mov
jns
and
lcall
fcoms
aaa
xchg
xchg
dec
cmp
fimull
loop
popf
push
icebp
inc
in
pop
in
xor
adc
sbb
pop
jp
cmp
jle
mov
ds
dec
mov
lahf
xor
cmp
push
mov
push
mov
out
lea
sub
mov
loope
loop
pop
mov
out
mov
je
jmp
sti
ffreep
fldl
dec
mov
stc
ret
into
fwait
test
fistpll
lret
add
or
mov
jp
cmp
es
andb
push
jp
add
xor
jns
inc
jns
movsb
imul
sub
push
scas
fidivs
inc
lea
test
push
push
mov
sbb
subl
lods
ds
iret
add
add
push
xchg
or
mov
mov
or
push
dec
movsb
sub
inc
adc
or
xor
mov
sti
stos
iret
push
outsb
daa
cmp
int3
in
into
add
fs
ss
xchg
mov
sub
mov
add
xor
pop
xor
fdivrl
inc
shll
adc
fildll
inc
dec
jl
lods
xor
shl
mov
mov
mov
arpl
cmp
xchg
and
xchg
bound
sub
mov
push
mov
pop
inc
jle
lret
outsl
xchg
outsl
popa
push
in
push
cld
jle
xchg
jo
lcall
push
ret
xchg
jae
jo
jmp
imul
mov
jg
cmp
pop
fdivrl
pop
mov
jg
cmp
loop
xor
ret
jmp
sbb
fidivl
shrl
outsl
xor
jne
xor
andb
out
push
jns
call
push
mov
pop
adc
pop
ds
xor
pushfw
mov
sub
add
sti
jae
add
icebp
mov
adc
loope
jnp
xchg
and
dec
push
enter
rcll
mov
mov
mov
xchg
lods
fnstcw
jo
rcrb
inc
mov
imul
cwtl
and
gs
cltd
inc
test
push
aam
add
and
mov
cltd
lds
inc
lea
sub
sbb
push
xor
cli
dec
or
adc
add
out
ds
es
adc
test
add
popl
loope
das
in
xchg
inc
mov
inc
xchg
cmpb
pop
inc
mov
mov
stc
add
cmp
or
xor
ja
jnp
call
sbb
adc
subb
mov
jle
fs
xchg
or
mov
dec
test
cmp
pop
mov
push
cltd
mov
xchg
cmp
pop
jp
pusha
es
push
xchg
or
push
mov
pop
ret
stos
xchg
cmp
lods
push
cld
jmp
cmp
cli
push
sub
aam
scas
adc
bound
dec
pop
ret
iret
or
imul
mov
add
mov
in
rorb
mov
popf
fcoml
fucomp
shrl
push
enter
jg
mov
jl
fadds
adc
mov
xlat
popa
add
cltd
xor
leave
movsl
mov
pop
aam
pop
arpl
dec
repz
adc
sub
pop
pop
mov
push
jl
psubusb
aam
cmp
and
and
xor
aam
or
rcll
les
xchg
out
test
fucom
dec
dec
insb
inc
push
jle
pushf
mov
xor
ret
test
in
scas
testl
push
sub
jne
jg
ljmp
roll
inc
fdivrl
push
dec
ret
mov
cs
flds
mov
jnp
mov
stc
sub
xor
es
adc
sbb
push
xor
pop
subl
or
jne
cmp
sbb
inc
dec
hlt
arpl
mov
pusha
inc
lret
movsl
pop
hlt
fimull
xchg
cltd
sbb
or
imul
xchg
lret
mov
pusha
incl
cs
jae
pop
xchg
xchg
add
cs
dec
sbb
jnp
mov
clc
adc
outsl
cwtl
sar
inc
jo
lods
lods
js
sti
movsb
xchg
hlt
add
pop
inc
or
push
sub
jg
daa
mov
push
nop
ficomps
sbb
jle
push
insb
pop
mov
cmpsb
mov
adc
mov
pop
xchg
pusha
mov
std
arpl
das
adc
xlat
int
movl
sub
push
xchg
fldl
mov
mov
pop
and
call
jl
sub
lret
cmpsl
jge
push
jmp
outsb
push
cmp
push
cmpsl
cmp
sub
sbb
pop
daa
clc
mov
test
rorl
adc
sti
adc
sbb
negl
ljmp
flds
pop
jle
into
stc
add
sub
xchg
inc
pop
jno
and
mov
cwtl
xlat
jl
leave
pop
inc
jns
in
in
arpl
insl
push
and
mov
rorl
fldl
mov
cs
inc
sub
jno
sub
push
adc
sbb
rorb
push
mov
or
lret
jmp
inc
nop
add
xor
mov
xor
shl
pusha
and
pushf
and
cmp
inc
cli
cmp
fwait
outsb
xor
jae
inc
pop
repnz
cmpsl
mov
or
xchg
xchg
push
mov
sub
in
add
nop
push
cmpsl
sbb
xor
subl
sahf
and
add
popf
fnstsw
idivl
mov
xor
sbb
fsubrl
mov
sti
pop
repnz
icebp
jecxz
adcl
pop
inc
pop
aam
adc
fadds
imul
sub
push
in
push
insb
cmpsl
fdivrp
and
es
loope
pop
lahf
sbb
jne
cltd
jbe
mov
hlt
dec
xlat
jle
sbb
adc
ss
outsb
imul
push
jmp
popa
dec
lcall
fs
push
mov
push
and
cs
cmp
or
fs
sbb
and
jbe
repz
adc
xchg
pop
inc
in
rcl
cmp
cli
mov
mov
xchg
imul
xchg
sbb
ljmp
xchg
adc
in
sbb
sub
cld
and
mov
call
imul
push
in
int3
fldcw
jmp
dec
cmpsl
jle
cld
in
xor
loop
ret
mov
call
ret
ret
push
lds
pop
dec
jbe
data16
mov
and
push
popf
and
stos
cmp
lcall
fimull
cwtl
out
jp
js
jg
test
je
inc
pop
pop
or
mov
push
xchg
mov
out
lds
inc
and
adcl
jp
sub
jle
mov
inc
pop
dec
cmp
fcompl
ret
mov
jns
cmpsb
jp
sub
stc
mov
inc
in
inc
sbbb
inc
mov
xor
shrb
pop
dec
cmp
push
push
xchg
stos
data16
js
pop
sub
mov
push
add
fwait
lds
sbb
rclb
out
xorb
fnstcw
jns
cltd
lahf
sahf
std
repz
fsubrl
xor
cmp
pushf
sbb
mov
xchg
ja
pop
adc
rclb
repnz
sub
sub
jecxz
and
dec
sbb
mov
jo
jmp
push
push
rorb
ja
shlb
nop
jge
or
cwtl
data16
xchg
ja
lea
popa
add
out
inc
clc
movsl
and
into
jl
xchg
loop
sbbl
sub
in
lea
xor
subl
imul
jae
mov
mov
stc
pop
adc
mov
mov
fwait
shlb
adcb
xchg
mov
inc
xchg
cltd
pop
roll
cmp
mov
aas
sarl
jnp
insb
jnp
cmc
and
mov
ret
pop
adc
rol
xchg
mov
stos
lods
mov
mov
call
movsb
je
inc
or
fisttpl
mov
mov
pop
sti
cmp
sub
xchg
add
cs
mov
xor
shrl
xor
aam
and
ret
or
jno
pop
ret
out
shrb
ja
add
mov
push
mov
sbb
addr16
and
inc
test
jle
rorl
cmp
aaa
mov
pop
mov
xchg
and
lcall
xchg
cmpsl
inc
iret
mov
fs
imul
push
movsb
pop
inc
add
push
ja
xchg
repnz
mov
push
jmp
and
jno
adc
push
flds
je
in
testb
lds
orl
mov
cltd
shrl
or
cmc
cli
pop
or
fstpl
je
shl
sbb
or
jo
mov
loope
pop
jle
add
pop
cmpsl
push
jmp
loopne
ret
outsb
je
popf
pop
popa
shll
xor
xor
inc
jmp
js
mov
and
mov
dec
add
xchg
cltd
jmp
rcrl
mov
mov
xchg
aaa
dec
cmp
out
negb
mov
push
into
out
adc
push
dec
inc
stos
dec
rcrb
stos
push
lea
int
and
das
push
in
cmp
pop
ret
sub
sbb
cmpb
xchg
arpl
pop
and
push
cmp
mov
in
xchg
pushf
cmpsb
sti
pop
jg
pop
gs
add
inc
inc
popf
movsl
ljmp
cmp
push
lds
in
sub
sbb
inc
int3
mulb
mov
in
pop
mov
mov
xchg
dec
mov
fidivrl
lods
inc
push
out
icebp
mov
cmpsl
imul
mov
inc
not
sahf
mov
sahf
adc
gs
and
xchg
push
test
insl
xchg
fdivrs
daa
out
sbb
aaa
xchg
sub
movsb
inc
test
outsb
ret
or
testb
adc
bound
xor
movsl
xor
in
ret
stos
setnp
cwtl
test
cmp
call
lahf
sar
nop
test
das
test
sarb
mov
and
mov
xchg
sbb
rcrl
xchg
dec
adc
lods
mov
icebp
jo
ljmp
xor
adc
cmpsb
aaa
fcompl
mov
out
outsl
inc
dec
ja
mov
call
or
mov
rol
rorl
leave
push
adc
repnz
fcompl
sub
inc
les
lret
add
aam
aam
jbe
mov
dec
push
add
add
mov
fcoml
xchg
mov
std
mov
and
subb
or
jo
mov
xchg
sub
popa
lahf
mov
sbbl
sbb
insl
adc
out
xchg
and
int3
mov
dec
xchg
sarl
push
ljmp
in
ds
in
jbe
pusha
jl
jae
mov
cmp
adc
stos
scas
push
mov
lea
push
ljmp
ret
push
add
gs
inc
inc
mov
imul
pop
mov
cmp
jo
aad
and
sbb
push
into
cltd
mov
jo
xchg
jae
ss
xor
push
fldenv
mov
jge
sub
adc
into
inc
pop
aaa
or
test
stos
add
inc
push
fistps
cltd
cltd
sbb
arpl
cwtl
jns
inc
int
clc
rclb
cmp
andb
aaa
or
jge
sub
addr16
sbb
dec
iret
mov
and
daa
push
pop
jle
cli
xchg
loopne
and
and
pusha
lock
adc
fidivrl
sub
lret
loop
sbb
in
aam
roll
mov
ficompl
pop
sbb
shl
mov
clc
adc
mov
ss
xor
fisubl
cmp
loope
fwait
mov
add
adc
pop
stc
jecxz
inc
insb
xchg
sti
mov
pop
pcmpgtd
es
repnz
or
repz
lcall
push
sbb
clc
push
loop
jl
es
push
cmp
aad
mov
push
or
xchg
xor
or
pop
sub
subb
icebp
aam
mov
pop
stos
or
lods
mov
lock
in
mov
jmp
lcall
inc
jmp
adc
xchg
jge
or
add
adc
test
jbe
mov
dec
hlt
and
les
pop
jmp
sbb
jo
mov
cmp
jl
gs
inc
pop
cltd
xchg
sub
jno
inc
push
mov
aad
fdivrl
or
inc
add
xor
fidivl
dec
mov
sbb
lret
test
push
sub
mov
insb
mov
mov
stos
fnsave
and
xchg
ljmp
test
out
rcrb
addr16
dec
ret
outsl
popa
xor
testl
jns
pop
aad
dec
or
mov
loope
mov
adc
repnz
adc
and
and
icebp
aad
xchg
mov
or
cld
in
lcall
mov
int3
pop
jno
push
dec
inc
xor
xchg
fptan
pop
or
jno
shrl
sub
mov
inc
mov
sbb
push
enter
mov
es
cwtl
jecxz
pop
inc
fists
ljmp
mov
in
aas
mov
ret
and
lods
lahf
or
divl
outsl
xchg
push
mov
fsubl
addr16
pushf
adc
mov
data16
movsl
or
ret
add
fistpl
lock
in
or
jl
sbb
sbb
scas
into
xrelease
fistpll
fcomps
and
adc
adc
fisubrs
arpl
dec
js
cli
pop
aaa
fsubrs
sbb
mov
or
or
fcomp
lods
pop
add
shll
pop
inc
or
imul
inc
outsb
push
fwait
dec
mov
imul
ja
in
les
inc
arpl
push
test
into
adc
sbb
push
adc
aad
push
into
and
rep
push
mov
movsl
sbbl
rcll
and
lret
pop
outsl
lock
ret
bound
sbb
aaa
and
sub
jmp
xchg
es
stos
loope
ljmp
inc
movsb
stc
adc
sub
sarl
push
mov
jb
pop
mov
lods
push
scas
outsl
push
sbb
test
out
test
scas
mov
and
lods
lods
sbb
in
subl
jbe
adc
sbb
inc
mov
mov
add
ljmp
hlt
mov
inc
dec
movsl
fcmovnu
mov
jns
stc
or
sti
in
lods
scas
ljmp
or
sub
and
mov
lahf
jmp
dec
cmp
dec
popf
dec
pushf
iret
sub
in
mov
aaa
push
mov
add
jl
ljmp
out
addl
iret
dec
inc
jb
inc
inc
pop
xor
and
xchg
dec
sub
lock
insb
test
jnp
leave
adc
adc
jmp
jl
leave
xlat
push
mov
mov
xchg
dec
pop
pop
add
arpl
sub
sub
jno
push
or
out
fs
ljmp
cmp
lods
stc
jno,pn
and
mov
fsubrs
ds
pop
push
push
clc
hlt
xor
xchg
out
into
stos
sub
ficompl
fists
scas
xchg
cmpb
pop
push
sbb
jns
push
gs
pop
push
jp
scas
test
mov
cltd
repnz
imul
cmp
adc
sub
clc
cmp
pop
sub
icebp
montmul
cmpsb
ret
xlat
and
sub
rcll
push
std
mov
sti
jne
jge
or
and
faddl
jbe
sbb
inc
jmp
inc
outsl
mov
jae
fisubrs
push
mov
push
fwait
cwtl
jb
test
daa
test
lds
fldenv
xorb
hlt
ror
in
and
mov
and
cwtl
pop
das
sbb
mov
clc
insb
pop
and
sbb
cld
inc
fbstp
mov
cmp
xlat
lds
sti
sbb
jmp
push
cmp
shrl
dec
lods
inc
jmp
mov
or
dec
mov
rolb
push
loope
jp
xchg
xor
sub
mov
or
or
jl
lock
lret
xor
mov
lea
xor
and
sar
shr
mov
jne
clc
ss
adc
and
stos
mov
fimull
fisubs
clc
pop
mov
cmp
or
sub
lds
leave
call
cli
out
sub
mov
jecxz
in
dec
mov
in
fldcw
and
outsl
jecxz
pop
cli
jmp
fldt
pop
movsb
rcll
in
sbb
mov
mov
sub
push
aad
cmc
lods
pop
cwtl
out
cltd
xchg
gs
lds
ret
or
and
xchg
movhlps
xchg
pop
push
out
inc
mov
dec
mov
je
inc
sub
lods
mov
aas
out
jle
push
mov
push
cmp
mov
inc
div
lods
adc
pop
sti
inc
ja
out
insb
aam
mov
dec
nop
jno
arpl
pop
jle
andl
mov
push
pop
mov
adc
or
shl
mov
fdivp
in
mov
push
add
aam
nop
inc
mov
bnd
mov
sub
jae
ret
leave
test
xor
or
aam
push
loop
rorb
rol
rorl
ret
lods
mov
jmp
lods
clc
add
dec
cmp
adc
sub
sar
jno
xor
jo
inc
mov
test
mov
add
cmc
push
jno
flds
mov
push
fistpll
cmp
jne
and
and
aam
popa
jns
mov
jmp
leave
inc
mov
push
daa
push
add
insb
sub
xchg
and
or
movsb
movsb
cli
sbb
shl
push
mov
mov
pop
xchg
or
xorl
xor
pop
imull
mov
cmp
sbb
ja
and
cwtl
sub
mov
inc
push
adc
sub
into
and
lds
out
popa
cmpsl
out
rcrb
addr16
out
sub
arpl
mov
sahf
popf
xor
and
xchg
jo
mov
insb
dec
mov
jmp
pop
jmp
adc
testl
xchg
ret
or
incb
mov
int3
lret
pop
movsl
lods
push
testb
ds
addr16
rcr
push
xchg
xlat
jb
xor
cmp
bound
lods
mov
popf
test
dec
cwtl
lods
and
cmp
mov
mov
jg
adc
aad
mov
mov
in
xchg
push
sub
out
jno
xchg
xchg
bound
daa
ror
inc
sarl
add
sub
in
pop
sbb
cmpsl
into
inc
add
and
and
add
mov
popf
mov
mov
data16
aad
push
mov
dec
sbb
or
in
jb
das
aaa
adc
shll
dec
rorl
imul
cmp
cmp
cld
jb
jp
ficoml
sub
push
in
les
mov
sub
fs
js
push
jnp
out
or
or
inc
jmp
add
popf
scas
maxps
or
jnp
jb
cmp
push
push
adc
or
jg
lds
pop
fbstp
mov
imul
pop
xor
lret
pop
push
inc
mov
xchg
jmp
mov
dec
in
and
scas
pop
es
jns
dec
popf
scas
mov
loop
into
xlat
jo
inc
loope
adc
jo
or
or
sub
mov
outsb
lret
inc
jno
lods
arpl
xchg
into
std
xor
les
push
outsb
aam
hlt
pusha
iret
mov
dec
mov
mov
mov
jmp
arpl
mov
jecxz
and
jp
scas
fstp
mov
mov
stos
leave
dec
xchg
jle
data16
push
pop
inc
mov
jb
or
rcrl
rorl
lahf
push
iret
inc
mov
mov
out
pop
xor
sub
loopne
push
adc
jno
clc
push
je
cmpsl
adc
imul
mov
ja
inc
es
jmp
add
sbb
jae
ret
stos
mov
addr16
sub
out
les
dec
jecxz
mov
sub
cmp
insl
aad
insb
adc
push
ficomps
add
push
inc
adc
repnz
ud2
das
inc
nop
mov
pop
and
push
cltd
adc
ror
insl
and
mov
rolb
pop
xchg
es
data16
pop
fs
mov
inc
je
jecxz
sub
shl
push
movsb
add
dec
faddl
popf
test
or
inc
loop
jmp
mov
pop
mov
test
mov
mov
sti
pushf
mov
mov
mov
fbld
sub
lahf
jns
cmc
mov
dec
in
call
in
sbb
cmp
inc
jecxz
sbb
mov
fiaddl
popa
xor
push
pop
lcall
xor
inc
stos
dec
sub
lods
cs
push
fldl
push
out
push
or
scas
inc
or
pushf
xor
xchg
or
les
sub
pop
test
mull
mov
sub
xlat
or
lcall
mov
div
mov
subb
sbb
inc
push
dec
lods
mov
movsl
mov
inc
fimull
fwait
pop
in
lock
std
dec
pushf
xchg
movsl
dec
shlb
dec
test
jno
loope
fldcw
xlat
jne
js
cld
and
inc
fucomip
shrl
sbb
dec
insl
icebp
dec
in
sbb
leave
imul
lea
sar
dec
shll
push
sbb
in
gs
sbb
sbb
cmp
bound
out
test
loopne
jo
lret
ret
pop
push
jnp
icebp
ret
fstpl
adc
xchg
inc
imull
push
imul
testl
xchg
cwtl
pusha
aad
push
dec
inc
jne
insb
mov
xchg
jnp
jo
stos
sahf
adcl
mov
xlat
cmp
ds
shlb
push
popa
inc
push
ret
cs
stc
or
mov
dec
mov
xor
ljmp
jae
jg
stos
adc
pop
imul
dec
ss
and
loope
clc
insb
jg
xor
mov
dec
lret
add
add
inc
lods
dec
fwait
cs
xchg
push
test
sub
int
test
lock
hlt
mov
shlb
sbb
rorb
mov
xor
and
jmp
popa
lcall
mov
sbb
cmp
xchg
cmpsb
out
xchg
into
mov
repnz
test
cli
push
iret
mov
jae
imul
or
fstpt
mov
jg
into
int3
lods
adc
popf
cli
and
push
sbb
insl
xchg
sbb
add
push
cmp
jl
push
repnz
daa
sub
fsts
aad
cwtl
fsubl
jb
test
push
mov
inc
xchg
out
mov
pop
jp
test
in
mov
je
jb
fmuls
adc
jl
ret
pop
fstpl
and
lahf
mov
dec
mov
inc
xchg
xchg
js
lret
add
adc
xchg
mov
mov
int3
mov
jnp
adc
pop
mov
fiadds
adcl
cmp
push
adc
imul
mov
pop
and
fst
orb
pop
sbb
xchg
sub
shlb
fnstsw
nop
xchg
or
push
scas
mov
and
add
push
and
adcl
lea
setg
push
fisttps
mov
cmp
xor
mov
in
sbbl
push
and
fimuls
ss
sar
lret
cltd
fbstp
lret
sti
pop
mov
xorb
xor
pop
in
jl
lds
sbb
test
cmp
pop
jne
dec
sbb
dec
adc
movsl
scas
shl
xchg
mov
jg
dec
mov
in
cmp
cwtl
fstp
mov
lcall
enter
push
movsb
pop
push
dec
fs
sahf
dec
cmpsl
sarb
iret
cmc
lods
insb
and
mov
mov
cmp
cmpsl
push
mov
fiadds
mov
xlat
rorb
xchg
xchg
lods
lcall
icebp
sbb
clc
dec
or
mov
sbb
adc
dec
xchg
test
into
cwtl
mov
xchg
daa
add
mov
popl
push
sub
xor
xor
push
outsl
insl
negb
stos
mov
decb
ret
inc
mov
sarb
ret
cld
mov
mov
adc
in
shlb
mov
test
dec
cmp
or
andb
inc
ret
push
jge
outsl
push
loopne
mov
movsl
jno
insl
ret
int3
mov
ljmp
adc
arpl
pop
ljmp
mov
mov
loopew
cld
add
fwait
cmp
adc
leave
mull
imul
jle
push
push
xchg
callw
jle
and
add
les
leave
sbb
jno
jl
mov
gs
pop
and
xchg
int3
aad
das
faddl
mov
xchg
pop
push
gs
mov
ljmp
dec
add
sbb
xchg
mov
mov
push
push
sbb
mov
call
dec
int
rolb
sub
mov
das
shrl
cmpsl
cmp
fistl
add
jmp
mov
aam
or
push
push
pop
fwait
fs
in
pop
cmc
andl
mov
pusha
xor
pop
pop
shrb
pop
jo
push
cs
xchg
xchg
fs
and
mov
lds
ret
int
dec
sub
mov
subb
push
imul
or
cmp
cmp
ret
int
aam
fsts
jnp
jmp
pop
adc
leave
jae
insb
mov
daa
push
arpl
loopne
in
movsl
das
cmp
xor
pop
jle
repz
mov
test
sbb
xchg
outsb
dec
cmc
popa
pop
imul
push
mov
sbb
inc
push
xor
cmp
outsb
stc
xorb
cli
out
and
and
push
and
fisubrs
jbe
cmp
movq
cs
lahf
lcall
inc
loop
fs
daa
mov
push
sbb
rcl
frstor
and
fisttps
sub
pop
xlat
scas
or
les
xor
mov
out
adc
in
int
sub
pop
mov
cmp
fwait
ror
push
add
mov
mov
push
pop
pop
clc
mov
rorb
iret
fsubp
stc
es
pop
mov
push
stos
lret
in
or
rorl
outsl
outsb
jl
xchg
insl
mov
inc
push
loopne
dec
mov
or
bound
sbb
pushf
adc
cltd
sbb
push
add
int
xor
loope
jmp
std
mull
cmp
in
mov
xor
push
movsb
arpl
sbb
or
jb
roll
sub
mov
popl
scas
sbb
sub
repnz
in
stos
pop
icebp
lods
inc
bswap
mov
inc
loopne
add
mov
daa
xchg
dec
nop
test
jnp
loop
or
push
outsl
cld
fldl
mov
cmp
jno
inc
mov
aad
mov
jmp
dec
push
jnp
les
incb
sahf
in
xor
fldt
imul
xor
cmpl
and
mov
std
add
lds
mov
movsl
aaa
dec
cld
test
popf
jno
cmp
push
notl
cmp
mov
dec
lcall
push
add
jb
out
jg
shlb
add
nop
gs
std
inc
sbb
xor
daa
push
mov
orl
btsl
adc
ljmp
aam
mov
push
or
sahf
dec
cli
mov
push
mov
imul
loop,pn
push
in
dec
mov
pop
mov
xchg
xchg
cmpsl
lods
lret
mov
and
outsl
push
adc
fprem
pop
add
lret
subb
sub
es
and
sahf
stos
mov
jb
fdivl
mov
push
push
shll
fistl
jmp
adc
cmp
roll
ss
adc
or
int
mov
xor
test
stos
sub
add
jg
and
cmp
cmpl
out
pop
fisttpll
outsb
xor
cmp
push
xor
rol
stos
gs
jns
cmp
pop
xchg
ja
xor
xlat
mov
push
les
arpl
ss
mov
fimull
push
dec
inc
pop
lret
bound
andb
lahf
cmpb
xorl
rcr
inc
lds
adc
rclb
mov
int
cmpsl
push
lahf
and
mov
mov
jb
sbb
in
iret
adc
jb
push
lcall
and
mov
mov
add
pop
and
sbb
sbb
les
jbe
mov
cmp
or
shrb
jo
mov
sysret
pop
push
nop
mov
negb
sti
outsl
imul
and
sub
mov
jg
lret
push
adc
inc
shll
aas
jle
mov
negb
nop
andl
sbb
inc
inc
jnp
leave
lcall
push
loope
fcomip
icebp
je
xchg
push
push
icebp
sbb
sub
pop
mov
jecxz
jp
xchg
dec
jo
pop
jg
mov
dec
or
xchg
iret
jne
jae
xchg
shlb
dec
mov
xlat
out
mov
lret
imul
js
sub
arpl
clc
sub
gs
jb
pop
cwtl
jb
cltd
scas
xchg
xor
adc
jo
cli
loopne
int3
popa
das
repz
dec
stos
sbb
add
aad
loop
cmc
stos
clc
xor
and
jecxz
pop
int3
mov
xchg
rorb
adc
imul
jb
data16
aad
cmp
lock
dec
push
test
xchg
fsts
cld
push
idivl
js
pop
xor
out
lahf
outsb
sbb
sbbl
sub
xchg
sub
adc
subl
add
clc
lahf
jb
cmpsb
adc
flds
out
sbb
mov
mov
rorl
pop
pop
dec
outsl
test
imul
adc
push
add
sub
ljmp
inc
inc
pop
jns
or
push
adc
push
push
scas
rorl
jb,pt
outsb
jl
jmp
cmp
add
sbb
sbb
aad
mov
add
gs
es
inc
aam
cld
shrb
sbb
fs
shrl
aas
mov
mov
insl
test
push
popf
jnp
jp
jns
mov
mov
or
arpl
lods
sub
mov
sub
push
xlat
jmp
repz
sub
addr16
pop
ret
sub
subb
add
subl
mov
outsb
jmp
push
ret
insb
dec
fnstenv
add
mov
push
pop
jg
clc
es
retw
test
mov
mov
xchg
mov
adc
sub
and
movsb
mov
and
outsl
add
scas
and
inc
inc
or
mov
sub
mov
sbb
repnz
lds
push
dec
pushf
mov
ret
imul
ds
and
adc
mov
xchg
pop
gs
add
cmpsb
cmp
pop
addr16
insb
adc
pop
pop
xor
mov
dec
and
cld
shll
repz
lds
jnp
into
je
lods
fiaddl
fdivl
ret
fcmovnb
icebp
mov
add
movsb
sub
jl
pop
push
cmp
push
leave
mov
mov
ja
mov
cmp
outsb
adc
fbstp
aas
mov
rcr
pop
dec
and
aas
adc
sti
cltd
test
jo
lea
fucom
inc
mov
sub
push
pop
sub
int3
shr
arpl
popa
inc
sub
mov
out
jo
call
mov
je
mov
fadds
mov
jmp
lret
xorl
out
in
push
dec
adc
pop
adc
loope
lock
into
dec
jae
fwait
shlb
ret
ljmp
loopne
mov
pop
xchg
inc
lret
cmp
jnp
ss
jbe
mov
out
sub
fcmovbe
inc
loopne
push
jg
mov
andl
or
push
test
inc
pop
mov
imul
js
mov
lds
or
scas
sub
fiaddl
fldl
mov
push
rclb
sub
push
sbb
into
aam
loopne
insb
fwait
push
mov
xchg
ret
out
push
fs
ja
mov
pop
shr
inc
or
stos
cwtl
enter
or
cld
sahf
in
ficoml
lret
mov
mov
cmpsb
jmp
popf
fimull
xor
cmpsl
insb
bound
xchg
dec
pop
psrlw
mov
xor
dec
mov
xchg
ja
out
arpl
dec
dec
ss
out
mov
mov
or
adc
stos
pop
test
ret
and
sahf
int
test
add
cmp
imulb
jg
outsb
push
aaa
icebp
xchg
push
popf
cmp
mov
xor
mov
mov
je
es
mov
out
loop
gs
mov
pushf
and
or
mov
mov
stos
lock
jle
push
pushf
lcall
pusha
and
roll
aad
mov
decb
out
stc
mov
xchg
mov
xchg
cmpsl
cmpsb
xchg
je
pop
lret
scas
int
cwtl
mov
inc
int3
cmpsb
push
jae
repz
mov
ret
jge
pusha
dec
les
mov
sbbl
cmc
jno
neg
inc
lcall
icebp
cmp
fmulp
mov
push
jbe
adc
push
add
bound
or
repnz
bound
ret
lahf
rclb
xchg
cli
inc
jo
or
test
and
dec
sbb
lock
xor
pop
add
insb
mov
aas
sbb
xchg
jno
mov
imul
out
icebp
xor
rol
data16
arpl
shrb
movsl
xchg
or
jle
push
popf
popf
arpl
add
and
pop
repz
subb
lea
xor
jle
push
push
inc
insb
add
out
fmull
xchg
pop
stos
push
push
mov
mov
addr16
flds
sbb
pop
pushf
loopne
insb
enter
loopne
lds
jge
mov
in
push
push
int
mov
cwtl
mov
mov
pop
xor
xchg
push
lock
hlt
mov
adc
sbb
pop
jns
out
dec
pop
into
add
mov
cmc
fwait
dec
into
les
push
andb
adc
xor
mov
jl
xchg
add
or
cmp
add
push
leave
lock
hlt
dec
cwtl
dec
sbb
stos
push
jae
ss
push
lcall
mov
sub
ret
and
ds
sub
pop
arpl
jne
adc
cmc
aam
xchg
mov
into
sti
cmovge
fstpl
fidivl
mov
int
popl
repz
mov
ffreep
push
test
fs
sub
bound
imul
pop
pop
insb
adc
mov
jmp
ret
neg
ljmp
pop
rolb
test
insb
loope
mov
dec
rcll
and
rcrl
or
bound
sub
repnz
fisubrs
mov
sarl
add
orb
xchg
fwait
adc
adc
iret
sti
ljmp
pop
jecxz
or
sbb
push
ror
ja
stc
mov
dec
dec
inc
cmpsl
aam
arpl
xchg
stos
mov
lret
loope
clc
cltd
orl
add
scas
push
adc
dec
nop
xlat
jmp
loop
js
mov
mov
divb
ss
dec
mov
ret
leave
test
imul
dec
lahf
mov
xor
fs
lods
mov
jae
jns
iret
cli
test
inc
cmp
iret
outsb
xor
xchg
mull
pop
cli
fcompl
dec
push
and
test
fnstenv
jno
fimuls
cmp
imul
arpl
andb
out
sub
push
outsb
fcoms
ret
mov
mov
arpl
nop
popa
into
mov
aaa
jnp
lock
mov
cmp
mov
mov
xlat
movsl
scas
sbb
inc
inc
adc
bound
int
jnp
arpl
mov
enter
add
xchg
shrb
insb
and
insl
stos
les
push
fcomp
popa
rcll
sbb
push
xor
in
imul
insb
orl
mov
cmpsl
xor
cmp
push
and
jp
arpl
jl
ds
and
cmp
je
dec
add
and
jle
mov
insl
jg
push
xor
jle
add
xor
push
push
xor
or
popf
cmpsb
shrb
lea
inc
xchg
mov
scas
sub
jno
dec
fs
mov
adc
out
fdivl
ret
aaa
dec
in
sar
cmp
stos
ds
pop
sbb
ret
or
popf
enter
cmpsl
lahf
fildll
idiv
mov
ja
mov
pop
inc
addl
mov
mov
int
adc
leave
int
lock
jg,pn
and
xchg
xchg
xchg
cli
jl
fwait
sbb
into
dec
jne
cmp
outsb
enter
ret
push
xchg
mov
js
xor
outsl
fdivl
xchg
xor
add
out
jp
stc
fnstsw
hlt
loopne
jmp
fwait
inc
adc
lahf
jb
sbb
jns
jg
xchg
or
cmp
into
push
dec
mov
loopne
pop
out
enter
push
icebp
mov
xor
xchg
fs
sub
or
and
cmp
jno
xor
jg
lds
mov
icebp
or
lret
cmp
adcl
inc
sbb
cmpsb
mov
xorl
inc
fcomp
adc
in
sbb
rcl
push
sub
jecxz
mov
les
jo
push
jno
into
lret
xchg
addr16
jp
xchg
pop
or
xchg
mov
sbb
or
js
in
mov
inc
loop
outsl
mov
insb
push
inc
test
stos
adc
outsb
out
push
nop
les
add
dec
das
out
xchg
xorb
jb
in
lahf
or
aad
loopne
mov
xchg
lea
pop
stos
mov
inc
in
dec
mov
push
loopne
js
pop
imul
mov
lret
or
or
lret
sbbb
inc
jl
enter
aaa
stos
fldenv
ja
jns
xchg
mov
shl
pop
inc
mov
push
adc
jmp
cmpsb
mov
popa
dec
cmp
imul
jg
sbb
mov
inc
mov
shll
cmp
loop
loop
dec
hlt
nop
xor
test
int
xchg
mov
pusha
and
fcmovnbe
std
icebp
add
loopne
sahf
cmp
lods
or
xlat
cmp
aas
push
pop
mov
ret
sti
stc
gs
mov
add
fadd
test
adc
in
inc
mov
xchg
jl
int3
xor
lods
dec
out
mov
cs
lods
pop
mov
inc
imul
mov
je
push
ja
xchg
lea
sub
jo
and
jecxz
fs
popl
push
in
cwtl
jb
jbe
addr16
int3
add
fbstp
push
adc
ja
xchg
pop
aam
xchg
inc
mov
data16
lret
xchg
add
push
xor
sbb
push
shr
mov
dec
pop
pusha
cmc
push
outsb
pop
and
push
clc
and
dec
loope
repz
push
push
shll
ret
jo
mov
xorl
leave
mov
and
ds
cmp
cmp
test
pop
icebp
inc
mov
stos
push
lock
std
push
dec
xor
cmp
insl
and
or
jnp
out
push
or
out
aad
fbld
out
arpl
jge
push
mov
dec
xor
pop
xlat
xchg
int3
and
adcl
sub
xor
cmp
cmp
and
xor
imul
fcmovnu
mov
cmc
pavgb
dec
pop
jnp
adc
push
fnstcw
mov
sti
stos
cmp
loop
popf
clc
out
dec
push
ret
dec
sbb
mov
lods
jns
and
mov
mov
pop
adc
adc
jle
cwtl
xchg
call
cmp
divb
add
jge
repnz
pop
cwtl
mov
jnp
or
jne
icebp
hlt
in
xchg
mov
test
push
scas
mov
mov
ja
pop
lock
loope
or
pop
rolb
insb
mov
lock
adc
push
pushf
in
jmp
mov
popf
call
aad
sub
out
loope
push
scas
jge
push
gs
imul
inc
jp
out
sti
rclb
jno
loope
adc
and
call
nop
adc
jmp
loop
int3
repz
xchg
out
sub
and
ret
adc
pop
xchg
xchg
sbb
xchg
into
sub
cmpsb
push
jp
test
push
aam
arpl
jns
aad
bound
add
push
pop
add
xchg
loopne
adcl
shlb
mov
cmp
cmp
scas
jmp
test
mov
testl
test
call
lahf
add
jne
add
incl
int3
popf
push
inc
sti
pop
cmpl
xor
inc
lods
xchg
xor
dec
bt
lahf
sub
ret
jge
sub
es
aaa
or
lods
dec
stc
mov
ds
lahf
and
insl
add
mov
sbb
xchg
sahf
xchg
incl
into
fnstcw
rcll
mov
or
ja
mov
outsb
imul
jl
pop
lds
mov
insl
dec
es
cld
fidivs
and
les
add
xchg
or
ror
daa
xor
pop
ret
pop
mov
add
mov
cli
decb
jle
dec
cli
fs
add
xchg
int3
jo
scas
pmuludq
inc
daa
mov
mov
and
jg
std
sub
xor
xchg
lds
xchg
lds
push
int
xor
and
mov
aam
call
or
adc
jge
icebp
pop
pop
or
jl
push
dec
scas
outsl
loop
sbb
ljmp
movsb
test
pusha
push
xor
in
aas
and
int3
mov
into
sub
xor
addl
or
inc
divl
dec
cltd
out
lods
cmp
adc
mov
outsb
and
std
cli
lods
push
cmc
js
ljmp
cmp
movsl
nop
lahf
dec
aaa
push
dec
mov
push
adc
call
inc
imul
sbb
pop
push
push
lret
pop
push
sbb
pushf
shrl
fisttps
or
adc
jp
sbbl
push
enter
pop
sbb
inc
push
imul
lahf
pop
or
das
jmp
pop
popa
push
in
pop
pushf
adc
bound
sub
fadd
int3
cmp
fcmovnb
cmpsl
popa
lea
jecxz
adc
inc
bound
jle
loope
fwait
add
pop
in
fs
int3
scas
xchg
ret
leave
jno
test
push
mov
adc
std
and
sbb
or
icebp
loopne
pop
mov
dec
xlat
lods
xchg
lds
loop
mov
lcall
fsubr
pop
int
xchg
std
add
adc
or
cmp
movl
cmp
aam
cmp
lods
pop
mov
in
xlat
stc
repz
cmp
hlt
popf
repz
test
cltd
add
cld
lret
mov
inc
enter
adc
lret
adcl
out
mov
les
xchg
outsb
out
es
cmp
imul
or
popa
sbb
movsl
jbe
and
mov
inc
cmp
push
push
dec
in
popa
in
subl
jo
pop
mov
mov
xchg
sbb
pop
iret
xchg
ja
adc
mov
pusha
push
mov
add
pop
pop
xor
jmp
dec
mov
adc
xor
aam
ds
imul
imul
test
mov
lods
aaa
pop
orl
xchg
inc
mov
jmp
pop
mov
cmp
xchg
out
dec
repnz
jle
cltd
int3
cs
xchg
aad
icebp
std
es
stos
jl
add
cmp
cmpsb
sub
cmp
int
fs
cmp
cmp
push
shrl
insl
push
fnstcw
or
mov
fxch
mov
dec
jb
mov
cld
mov
data16
cmp
inc
inc
ret
scas
scas
fdivl
mov
addr16
xchg
fsubrp
dec
fildll
out
aas
js
add
or
add
aaa
inc
xor
js
je
test
sbbl
out
dec
or
lds
fldpi
mov
mov
xor
adc
sbb
jp
insl
data16
fistl
jle
loope
mov
adc
shl
xor
push
sub
sbb
int3
cmpsb
das
mov
push
or
lds
fwait
mov
jmp
mov
imul
lcall
test
xchg
fs
add
dec
mov
add
mov
cmpb
arpl
fidivrl
scas
std
aam
inc
popa
pusha
lret
loopne
xchg
pop
aas
popa
idivb
jo
subb
lahf
xor
and
pop
mov
adc
cmc
movl
aas
inc
and
mov
shll
movsl
scas
hlt
sti
sub
addr16
add
push
pop
adc
pushf
or
pushf
cmp
mov
loop
jno
pop
dec
jge
scas
je
jmp
xchg
cmp
clc
add
add
in
cli
test
push
or
xchg
fldt
xchg
call
and
rcll
jp
add
cmpsl
std
or
cmp
and
jg
add
pop
jb
jb
movups
or
xor
inc
adc
test
cmp
cli
aas
adc
push
push
cmpsl
adc
jge
lret
push
inc
orb
std
addl
push
add
icebp
inc
push
mov
cwtl
cmp
xor
jo
outsb
fisubs
popa
or
cmp
sbb
fistps
inc
ja
movsb
add
lret
sub
mov
pushl
jp
dec
in
aam
jmp
repz
mov
push
jb
lret
fucomip
rcl
cmp
xchg
test
jl
sbb
inc
mov
arpl
cmp
or
mov
xchg
and
lea
fsts
mov
pop
outsb
movsb
imul
sarb
orl
lds
lret
out
pusha
rcll
out
clc
dec
xchg
outsb
fucom
aas
mov
inc
and
je
ret
stos
popf
xchg
shrl
nop
jnp
xor
xchg
mov
or
sbb
daa
test
jg
inc
mov
add
int
stos
or
fdiv
data16
mov
das
mov
sbb
pop
adc
fbstp
sahf
aaa
mov
xchg
cs
push
rcrb
add
lods
icebp
arpl
decb
push
push
add
dec
inc
and
test
sar
negb
xor
xchg
popa
shrl
dec
xor
inc
test
out
jbe
std
ficoml
popa
and
icebp
cmc
push
out
out
int3
xorb
out
testl
cmpl
mov
sbbl
out
mov
xor
cmp
adc
add
pop
divb
ror
scas
fsubl
lods
aaa
jae
jp
shr
lock
aas
mov
sbb
sub
xchg
cmp
out
push
clc
std
pop
into
mov
ret
inc
cmpsl
enter
sbb
or
test
mov
dec
hlt
sub
cmc
adc
cld
fiadds
ss
std
mov
rorb
push
int
movb
aam
gs
popa
addb
aaa
movsb
cld
loope
imul
cwtl
das
lods
jg
jbe
cmp
cmpb
add
cs
xlat
leave
sbb
mov
or
sub
stos
test
pop
ret
fnsave
xor
jnp
jne
jb
fnstsw
call
mov
push
ljmp
gs
adc
ja
loop
loopne
and
testb
loopne
push
fisubrl
scas
getsec
aas
mov
adc
sbb
lods
mov
push
xchg
data16
subl
ja
xor
cs
leave
mov
out
xlat
xchg
imul
out
pusha
dec
pushf
scas
and
xor
inc
dec
dec
int
iret
insb
lea
and
rcl
lock
scas
fisubrl
jle
dec
xor
jle
fidivrs
mov
ss
pop
or
pop
repz
and
adc
jge
inc
mov
jg
dec
loopne
jbe
sarl
cmp
push
inc
ficoms
sti
and
jbe
mov
icebp
adc
fcmovbe
jg
sbb
pop
js
in
scas
es
cmp
mov
addl
mov
adc
inc
push
jecxz
cmp
xchg
gs
scas
cmp
out
mov
pop
jbe
cmp
rcr
lock
adc
sti
fdivl
filds
ficomps
insb
ret
xchg
push
and
mov
xchg
push
fsubl
and
sub
dec
cmp
mov
add
int
mov
bound
mov
aam
push
sarb
sub
push
into
js
in
std
setnp
adc
xor
jae
insl
sbbb
mov
hlt
sub
and
mov
imul
inc
xor
test
mov
adc
loope
fists
mov
cld
push
pop
cmp
and
ss
stc
mov
imul
or
lret
fidivrs
and
sbb
fcmovb
xor
and
fwait
push
lret
sub
mov
jnp
xchg
lret
idivl
lods
pop
lahf
push
lret
aas
sub
mov
mov
repnz
iret
jge
inc
mov
shll
lahf
jmp
push
sub
notl
mov
and
lea
mov
jp
sti
adcl
cwtl
sahf
into
jp
xor
sub
aad
addb
in
fisttpll
movb
dec
xchg
imul
jge
cmpsb
xchg
mov
or
jecxz
aaa
movntps
outsb
add
loopne
sbb
aas
out
testb
ret
mov
leave
lret
cli
mov
inc
sahf
or
jne
cmpsl
xchg
cs
pop
call
stos
packuswb
pop
out
das
in
sbb
nopl
xchg
nop
sub
std
in
jmp
scas
lods
out
in
leave
mov
add
inc
pop
fists
inc
ja
cmp
negb
aaa
ljmp
inc
inc
rcrl
test
mov
enter
push
pushf
pop
sub
cli
sub
dec
jo
imul
iret
xchg
out
jecxz
stos
sahf
dec
adc
popa
push
es
ret
add
cs
sub
ret
inc
push
jo
fwait
cli
int3
lret
xor
adc
in
enter
add
xlat
das
movsl
arpl
fisubrl
leave
std
je
imul
or
sub
mov
and
add
nop
fwait
movsb
popa
bound
pushf
inc
insl
stc
cs
and
sub
push
dec
add
fdivrl
fstl
test
pop
or
dec
divl
flds
inc
sbb
mov
cmp
xchg
inc
push
int3
inc
push
mov
shrb
and
sub
and
ja
jl
jns
cmp
es
push
pusha
repnz
dec
aad
xchg
add
nop
inc
in
in
pop
aam
sti
imulb
jecxz
mov
out
mov
aad
arpl
iret
xchg
adc
mov
imul
test
loope
pop
cld
sbb
adcb
ljmp
jo
test
ficompl
lods
and
aad
cmp
push
test
arpl
dec
imull
add
cwtl
inc
add
cmp
fldenv
in
jge
pop
fst
jmp
xchg
testb
lds
fs
cmc
adc
cmp
notb
sbb
addr16
out
push
sbb
negl
mov
imul
pop
sub
popf
xlat
pop
dec
sbb
jp
fwait
jae
xor
stos
add
aaa
test
pop
outsb
dec
xor
xchg
xor
xchg
addl
dec
cmc
loope
mov
cwtl
test
iret
push
daa
mov
sbb
cmp
mov
int
jno
aaa
fcoml
push
cmp
into
and
movsl
or
and
ds
in
and
or
int
dec
aad
ja
sub
mov
sbb
cli
jne
hlt
or
xlat
adc
arpl
pop
pusha
sbb
jnp
add
outsl
shlb
insl
imul
jns
shl
icebp
push
lret
aas
cmpsl
outsb
push
mov
cwtl
push
add
mov
adc
adc
mov
mov
nop
cmp
cli
jne
jno
aas
shll
dec
mov
icebp
mov
jge
xchg
jno
enter
or
out
dec
mov
mov
addl
push
adc
loop
js
xchg
add
fst
jl
jle
add
subl
jp
adc
shlb
jmp
mov
lahf
mov
stc
fildll
xchg
inc
pusha
mov
decb
fistpll
sub
add
xchg
imul
mov
sbb
fimuls
mov
imul
movsb
xchg
jp
jecxz
mov
mov
movsb
incb
das
fbld
add
das
cmp
mov
mov
popa
inc
mov
pusha
mov
mov
in
mov
ret
adc
test
das
out
xchg
or
xchg
jne
insb
push
or
stc
leave
push
inc
fsubr
pop
cs
aad
sbb
cmpsb
aam
push
push
jae
or
or
popa
mov
and
dec
int3
scas
loopne
jl
sub
push
mov
arpl
out
imul
sub
or
jno
out
jbe
pop
ljmp
jmp
lahf
cmp
or
xchg
adc
push
push
xchg
jb
ljmp
lds
cld
mov
push
xchg
jle,pt
int3
adc
push
sahf
push
pop
xor
dec
bound
xchg
test
stos
cmp
inc
hlt
mov
notb
or
les
dec
inc
adc
rcrl
sbb
pop
pop
push
add
push
cltd
fistpll
add
or
dec
mov
ja
dec
mov
push
jmp
jo
inc
dec
fists
sbb
mov
movsl
jbe
push
mov
jns
sub
cmp
mov
and
inc
ljmp
cmpsb
test
in
cmp
push
lds
fs
lock
xchg
mov
xchg
lock
idivb
pop
scas
mov
add
mov
call
hlt
les
insb
rolb
sahf
push
sahf
scas
mov
adcb
loop
mov
cmp
dec
loop
ljmp
push
and
scas
adc
push
cmc
add
jl
mov
sub
jne
adc
loopne
enter
dec
loop
ss
cmpsl
xchg
lahf
xchg
push
mov
subb
jbe
rorb
push
adc
insl
lret
jmp
push
movsl
orl
mov
into
popf
pop
jg
leave
out
std
in
jae
xchg
fnstsw
cmpsl
xchg
fwait
dec
or
adc
enter
ficoml
bound
jae
push
in
pop
mov
ret
lret
sub
mov
or
loopne
iret
call
aad
and
mov
and
mov
sub
gs
enter
pusha
test
ds
push
mov
fcoms
fcompl
loop
add
pop
aaa
lock
sub
inc
sbb
jo
int
enter
xchg
or
dec
cwtl
mov
data16
clc
mov
add
push
inc
sbb
push
jnp
faddl
repz
fisubl
aad
ret
sbb
inc
fildl
or
adc
dec
xor
or
jecxz
jne
fadd
test
test
and
mov
sub
and
mov
jmp
push
movsl
push
cmp
mov
imul
subb
enter
mov
std
test
push
add
jle
mov
jno
xor
or
and
mov
inc
push
adc
stos
mov
out
mov
mov
push
push
loop
imul
movsl
orl
xchg
push
aam
sub
cwtl
aam
inc
imul
jnp
fcoml
push
mov
adc
fcmove
jae
lcall
stos
xor
cmp
jg
sbb
outsb
popa
mov
arpl
mov
loopew
fnstenv
roll
pop
repnz
daa
xor
adc
mov
inc
adc
ljmp
out
mull
pop
xor
mov
inc
popf
push
nop
push
mov
in
add
sbbb
adc
stos
inc
and
rcr
loope
xlat
mov
or
aaa
pop
mov
mov
daa
pop
pop
out
xor
adc
adc
xchg
ficoms
cltd
out
call
lahf
mov
pop
rcll
fstl
inc
jbe
notl
in
sahf
iret
xchg
in
xchg
mov
loopne
push
daa
rcrl
cs
inc
mov
aam
or
js
mov
jle
insb
inc
add
pop
movsl
xchg
outsl
test
mov
ss
clc
pop
scas
jae
ret
inc
xor
mov
xor
je
xchg
js
dec
cwtl
sub
xchg
or
xor
scas
std
mov
lods
fsubrs
add
xchg
sarl
int3
cwtl
fs
lahf
mov
jmp
fs
lret
jg
aam
xor
adc
add
cltd
movsl
xor
jnp
cltd
adcl
loopne
int
leave
and
pop
aas
dec
jle
lock
out
ja
push
in
jecxz
cltd
test
mov
rolb
subb
inc
sbbb
ds
xchg
les
pop
out
jp
xchg
in
lea
mov
dec
mov
les
xor
xchg
push
and
icebp
jle
loope
jle
or
mov
jnp
or
sti
imull
inc
pusha
flds
daa
pusha
es
inc
dec
test
xchg
adc
lods
ret
ret
sbb
rolb
cmpsb
jb
mov
pop
jns
iret
sbb
movsb
mov
sahf
adc
pop
mov
outsl
sbb
adc
scas
lahf
pusha
and
dec
outsl
rclb
mov
icebp
mov
xchg
jl
sbb
inc
push
xchg
icebp
or
pop
stos
sarl
das
mov
pop
jle
inc
cmp
lret
sbb
ljmp
das
cli
xlat
sbb
xchg
mov
scas
ljmp
dec
xchg
push
jb
js
shl
testl
mov
addr16
adc
inc
fbstp
imul
arpl
sbb
mov
push
push
add
lcall
jl
enter
mov
stc
cmp
mov
mov
xor
insb
cmp
xchg
xchg
push
push
aaa
push
mov
lret
jecxz
and
inc
divb
xchg
lcall
iret
dec
push
xchg
xchg
js
or
push
icebp
inc
cmp
xor
imul
xchg
and
push
aam
sub
pop
outsb
mov
dec
inc
fsubs
dec
jb
push
popl
and
fnsave
aad
out
pop
pop
cmpsb
push
js
mov
in
mov
cmp
nop
scas
int3
pop
insb
lcall
repnz
in
xor
test
data16
mov
cmp
out
jb
lret
mov
push
js
inc
and
push
cmpsb
dec
in
xor
stos
push
sub
pop
loope
mov
jmp
in
dec
push
xchg
insl
add
stos
sbb
testb
lcall
scas
stos
xchg
ja
and
inc
or
xchg
cltd
mov
xchg
jp
out
mov
jp
nop
push
xchg
in
fstpl
or
sub
cmc
add
bound
aaa
sub
cwtl
xor
ss
stc
xchg
pop
loopne
pop
lahf
dec
or
and
and
rcll
rcr
lock
adc
dec
xchg
test
rol
jl
arpl
scas
jno
psubb
mov
inc
sub
clc
loope
lds
cmpb
icebp
in
in
jnp
xor
add
cmpl
dec
rcrl
xor
mov
out
negl
ja
xlat
jge
xchg
push
pushaw
add
xor
push
rorb
add
inc
cld
leave
jg
mov
daa
xchg
call
cmp
aam
push
rol
xor
sbb
scas
add
sub
or
ja
dec
cmp
lcall
push
mov
pop
cmp
test
xchg
or
mov
inc
aaa
sbb
idivb
sub
push
sub
lock
lods
and
jns
and
cltd
inc
push
hlt
mov
inc
sbb
push
adc
test
xor
loopne
ljmp
adcb
lock
mov
cmp
cmp
pop
mov
push
inc
xchg
sbb
rdtsc
hlt
movsb
ficoml
jbe
jg
adc
jo
sbb
clc
cmp
dec
lods
ror
jecxz
test
rcll
daa
xor
pop
xchg
pop
sub
inc
outsl
loop
dec
pand
and
in
out
add
incb
push
xor
shlb
cmpb
pop
outsb
es
insl
nop
mov
sub
mov
fwait
adc
xlat
addr16
adc
xor
out
sub
and
push
or
sub
pop
fsub
mov
into
cmpsl
pop
pop
xchg
or
inc
mov
dec
xor
outsb
or
and
ret
aaa
cmp
pop
popa
mov
stc
into
cs
and
call
filds
sbb
aaa
les
daa
lahf
and
jge
or
bnd
fldl2t
sahf
xchg
fsubrs
leave
mov
dec
push
sbb
and
test
scas
dec
popf
xor
mov
imul
and
cmp
sub
mov
xchg
xlat
jb
jo
ret
push
scas
inc
sbb
jmp
cmp
push
jns
sub
out
jnp
push
add
dec
call
bnd
xchg
and
popa
push
push
sub
scas
rorb
das
mov
mov
cmc
dec
popf
inc
cli
add
mov
jle
shlb
inc
adc
fs
adc
decl
pop
jns
loope
jmp
aaa
sub
test
ret
iret
shrl
inc
and
add
jbe,pt
fidivrl
fdivl
mov
sub
aas
in
fwait
jns
out
and
add
adc
mov
jl
cmpsb
lods
add
pop
push
imul
lahf
cmpsb
lahf
xchg
out
jmp
mov
pop
dec
sub
pop
add
inc
inc
sarb
fidivs
mov
jecxz
or
imul
sbb
loopne
push
adc
or
mov
das
test
aad
or
fs
push
inc
xlat
sbb
add
in
out
push
std
int3
mov
push
mov
movsb
jle
or
xor
int
mov
push
add
xchg
jae
jne
int
aas
mov
das
and
mov
aas
adc
popa
add
push
mov
inc
movsl
enter
xlat
or
rolb
pop
scas
pushf
push
enter
test
fildll
push
enter
outsl
xchg
inc
add
push
sub
fs
push
xchg
inc
pop
sqrtps
pop
dec
sub
lea
inc
out
popf
cmp
mov
push
cmpsl
leave
mov
jns
adc
gs
cltd
dec
jb
push
sub
fstps
push
int3
xchg
cmp
jle
fldl
mov
or
ljmp
sub
mov
lcall
dec
pop
in
lods
push
int
das
sahf
out
cmp
movsb
xor
mov
or
and
sti
sub
inc
outsb
sbb
fwait
rcll
pop
mov
scas
jae
inc
sub
test
lahf
push
jle
fstpl
cmc
in
out
dec
cmp
lock
jno
pop
arpl
cmp
je
xchg
outsl
jle
sub
dec
pop
inc
orb
lahf
cmc
sti
mov
clc
fucomp
out
jb,pt
in
loopne
mov
cmpsl
jp
pop
clc
sbb
fistpl
adc
dec
sub
mov
mov
and
aam
dec
arpl
das
cmp
mov
xlat
sbb
inc
in
mov
add
add
jo
inc
xor
mov
es
shl
or
lds
cmp
xor
xor
xlat
dec
mov
xchg
push
xchg
xchg
or
cmc
imul
sub
jo
rcll
jmp
addr16
jg
cmpsl
lret
fnsave
adc
sarb
in
test
xchg
push
mov
jo
scas
lret
and
or
mov
int3
out
adc
xor
xlat
push
or
push
jp
int3
stos
mov
add
jnp
lea
push
divb
push
dec
sbb
outsb
clc
aam
pop
bound
push
aaa
popf
and
xorb
pop
ja
pop
push
lds
insl
and
iret
xchg
scas
dec
movsb
xchg
inc
push
mov
inc
cmc
in
pop
and
ja
jae
or
in
ficoms
sub
xor
adc
cmp
jne
xchg
xchg
cltd
scas
js
jo
dec
aam
data16
and
loope
mov
insb
pop
sbb
outsl
mov
lods
aad
and
xchg
cmp
inc
out
mov
insl
leave
add
mov
pop
scas
stos
scas
jmp
cmp
cmp
fwait
cmp
out
fldcw
lds
fmuls
sub
mov
xchg
add
sub
ret
xor
push
daa
pushf
filds
adc
aam
sti
sbb
js
test
lahf
sub
and
test
scas
lret
outsl
shll
dec
ss
neg
sahf
clc
data16
push
loope
addl
call
mov
mov
out
sbb
stos
in
std
in
ret
imul
xchg
sbb
jns
add
into
sub
outsb
xor
inc
ffree
adc
addr16
pop
adc
imul
sarb
jbe
aas
jmp
aaa
jno
icebp
idivb
movsl
mov
and
jb
test
dec
mov
inc
xchg
daa
hlt
push
lods
gs
out
xchg
jns
pop
lahf
cld
inc
mov
rcl
or
mov
or
fucom
imul
insb
jmp
out
std
or
inc
imul
pop
add
jl
lret
into
imul
cltd
lods
dec
jl
cld
mov
out
lods
addr16
lret
pop
xchg
pop
movsb
fcom
push
mov
btr
ds
mov
js
mov
pop
scas
jne
lock
jecxz
test
mov
scas
into
xor
paddusw
xchg
out
stos
test
mov
ljmp
mov
inc
insb
das
es
sub
add
outsb
and
pop
and
fbld
pop
inc
xchg
push
rep
jmp
jp
xchg
fmul
sub
aad
add
dec
sub
jp
aam
cmpsb
and
sbb
push
adc
mov
sbb
popf
jecxz
imul
pushf
ficoml
mov
mov
js
loope
popa
clc
cmp
push
xor
cmp
clc
mov
imul
xchg
cmp
insl
add
gs
aas
push
es
pop
cwtl
sbbl
or
lds
pop
xlat
cmp
ljmp
lahf
inc
ljmp
pop
and
xchg
xor
aaa
aas
cld
fldcw
and
and
mov
arpl
rcl
dec
int
decl
adc
fucom
jle
out
int
ret
rcll
or
xor
add
pop
or
mov
mov
dec
aas
sbb
nop
push
and
pop
andl
int3
lcall
mov
mov
add
jnp
push
lahf
sbb
xchg
out
andl
xor
jb
popf
sub
jno
lret
call
test
std
imul
inc
adc
mov
mov
jg
cmp
js
or
adc
adc
test
into
xor
mov
les
pop
cmpsl
cwtl
popa
fsubs
jp
mov
mov
jne
cltd
dec
jg
lds
data16
xor
pushf
enter
xchg
dec
xchg
dec
rorb
fildll
xor
jo
jns
inc
jl
leave
mov
movsb
mov
pop
sti
push
push
hlt
push
aaa
xchg
mov
cmp
ds
jno
cmpsl
pop
pop
mov
jo
rcl
in
pop
scas
imul
xchg
push
das
mov
fisubl
and
pop
mov
push
xor
push
push
mov
push
xchg
mov
lahf
pushf
push
xchg
std
rclb
jmp
dec
ja
jl
mov
fcmovbe
loop
gs
add
and
inc
sub
xchg
xchg
inc
notl
pop
inc
inc
mov
mov
mov
add
lahf
cmpsb
xchg
mov
push
dec
sbb
cmp
jle
ss
in
roll
sub
out
std
cmp
jmp
xchg
rcrb
adc
scas
add
jecxz
dec
jmp
jae
add
jbe
lret
cwtl
int3
cmp
xor
cltd
inc
shl
movsb
sub
aam
iret
sahf
clc
outsb
cmpsb
test
scas
sub
sti
out
lods
aad
fsubrs
xchg
push
mov
pop
and
mov
cmp
neg
push
lock
into
jae
lea
xchg
mov
mov
xlat
cmpsb
aad
dec
jl
mov
dec
movlps
rclb
and
and
aam
push
adc
into
and
fwait
push
add
lahf
push
in
sbbb
outsl
loopne
in
scas
scas
fdivrl
cmp
sub
cwtl
xor
test
pop
push
mov
pop
es
loop
mov
pop
pop
ficoms
xchg
dec
inc
jecxz
repnz
fbstp
test
cmp
fstpt
mov
movsb
jns
popf
mov
pop
adc
fmuls
call
add
inc
rclb
je
cmp
mov
outsl
insb
pop
ds
mov
popf
mov
pop
loopne
pop
xor
bound
repnz
cmpsb
subb
cli
aam
test
pop
in
lret
jbe
jb
lret
jnp
fwait
inc
loopne
std
test
xor
mov
adc
scas
cmpsl
mov
aas
jae
movl
mov
addr16
ja
dec
push
push
fs
cmc
mov
xchg
ds
in
call
pushl
negb
rolb
xchg
stc
faddl
jbe
adc
jle
cmp
lock
cmp
mov
sbb
push
cwtl
imul
aam
repz
and
popf
leave
jmp
orl
into
sub
jle
scas
mov
push
mov
sub
cmc
push
int3
call
bound
pop
xchg
cwtl
pop
je
scas
imul
cltd
into
sti
jecxz
and
scas
pop
or
mov
adc
add
inc
inc
push
inc
mov
pushf
int
cmovne
mov
mov
icebp
movsb
int
shrb
mov
mov
insb
xor
jb
fsubs
xor
push
and
and
clc
test
bound
ljmp
subl
push
movsb
ret
add
and
in
xchg
sub
jbe
nop
lret
fdiv
jge
ljmp
sahf
mov
arpl
and
nop
cmp
jnp
inc
add
dec
add
daa
dec
lods
cld
push
xchg
sarl
movsl
dec
push
out
int3
cmp
add
mov
sub
jo
push
jmp
es
jo
and
test
cwtl
xchg
jae
dec
add
cmp
dec
ja
jecxz
sub
test
jo
inc
bound
and
sbb
mov
je
data16
inc
xchg
mov
mov
push
out
sti
xor
int3
jae
add
in
sarb
cmp
push
inc
movsb
mov
pop
fdiv
mov
stos
pushf
jo
cmpsl
cwtl
sbb
xor
inc
pop
add
sub
inc
cmpsb
cmpsb
test
or
xor
jmp
aaa
dec
mov
fstpl
divl
loope
xchg
in
xor
dec
pop
push
popf
adcl
lret
jae
or
gs
xchg
or
inc
xchg
xor
push
jo
and
sub
repnz
sub
cmp
or
cwtl
scas
jl
adc
xor
ljmp
cmpsb
cmpsb
fs
add
nop
stos
in
sbb
lret
lret
stos
cmc
ret
mov
lahf
lea
or
sub
loopne
jge
jp
xor
mov
or
int3
test
mov
xor
inc
enter
incl
ljmp
inc
sbb
xchg
daa
jp
xor
sbb
xor
or
loop
cmp
js
pop
jo
mov
stos
ret
xor
sahf
out
aad
test
lds
lret
push
lahf
repnz
pop
pop
mov
dec
mov
sub
push
outsb
lods
sub
loop
add
or
lods
into
push
outsl
adc
cmp
cmpsl
cmp
imul
fcomp
mov
gs
aad
push
jmp
mov
outsl
xor
push
push
mov
pop
aam
mov
mov
add
jl
jno
dec
in
sub
scas
mov
int
js
and
or
or
and
fimull
movsb
push
movsb
mov
pop
fisttps
mov
push
or
movsl
xor
sbb
sbb
mov
lret
je
lods
out
test
std
push
add
xchg
fstpt
mov
icebp
popa
and
arpl
cli
cmp
pop
pop
pop
sub
or
xchg
sbb
inc
mov
xor
or
mov
sub
or
gs
stc
cmp
orb
jns
in
out
pop
fistps
fcomps
push
mov
add
or
imul
in
pop
roll
fadds
enter
push
xchg
mov
dec
pushf
mov
pusha
inc
push
popf
add
cwtl
ljmp
mov
cmp
pop
mov
push
mov
jnp
xchg
lock
sub
push
out
popa
cmp
addr16
sub
popa
fistpll
sbb
out
xchg
xchg
mov
sbb
and
cmpsl
in
js
into
dec
iret
cmp
scas
add
sub
rcrl
std
scas
mov
lahf
cmp
out
xchg
icebp
int
xor
jnp
dec
loope
std
inc
scas
adc
stc
or
ljmp
cmp
enter
stos
xchg
nop
loop
scas
ss
arpl
mov
cld
ljmp
mov
sub
es
mov
adcb
ds
cld
or
push
jae
xor
add
xchg
fptan
nop
sbb
add
mov
inc
shlb
pop
push
jmp
out
hlt
dec
imul
sbb
mov
stc
and
in
pop
scas
push
daa
cli
jle
inc
jnp
inc
push
sub
push
push
and
bound
cmp
mov
mov
and
push
jg
jl
gs
in
imul
add
and
fs
xchg
leave
dec
and
and
mov
dec
cmp
clc
fiaddl
push
jle,pn
bound
sub
mov
jge
sbb
xchg
sbb
adc
bound
jg
ja
xorl
jno
jb
jmp
add
mov
movsl
adc
je
or
mov
sti
aad
jp
adc
mov
ret
stos
vsubps
jmp
jb
repz
add
imull
movsb
aas
mov
insb
and
orl
loopne
lret
out
add
sahf
sbb
jne
pslld
mov
outsl
cwtl
shlb
mov
ja
jb
xchg
push
push
mov
mov
shlb
shl
adc
push
dec
xchg
dec
cmp
xchg
fidivrs
test
xchg
jge
std
outsb
and
mov
adc
jo
leave
or
mov
cs
and
daa
adc
inc
add
xchg
mov
mov
scas
ljmp
lods
mov
or
outsb
mov
xchg
sub
inc
js
popa
rcll
inc
js
inc
pusha
fisubrl
jmp
fsubrp
das
mov
cwtl
push
adc
pop
mov
ss
mov
das
movsb
pop
add
and
and
mov
stos
fcmovne
icebp
ds
aas
sbb
push
repnz
push
test
roll
inc
pusha
clc
jo
cmp
xchg
pop
adc
inc
xor
jecxz
enter
push
push
sarl
add
js
jns
and
enter
fwait
lea
xchg
sahf
psrlw
cmpb
mov
pop
push
mov
jge
push
lock
insl
shlb
std
std
cmp
pop
ljmp
cli
js
test
scas
rcll
push
dec
mov
es
xor
dec
aad
movsl
add
ss
mov
pop
addb
sub
mov
push
jge
inc
call
dec
outsl
and
xchg
lret
or
mov
mov
insl
mov
cs
rcll
mov
popl
fsubrs
cli
sbb
or
dec
test
std
fmuls
in
jle
mov
sub
call
rsqrtps
loope
fidivrl
mov
bound
iret
in
popa
shl
rolb
rcrl
lods
sub
mov
add
out
leave
std
into
lret
mov
imul
pop
xchg
mov
or
cltd
pop
mov
fidivs
add
pop
dec
cld
push
mov
repnz
push
sub
add
sahf
push
xchg
lcall
or
mov
adc
lret
in
cmp
xchg
add
ljmp
xor
jg
daa
orb
inc
jns
jns
sbb
addr16
dec
cmpl
inc
pushf
sub
pop
or
stos
or
push
dec
movsb
mov
xchg
imul
daa
mov
jmp
xor
cmp
mov
xor
outsl
std
sahf
adc
jecxz
cmp
inc
stos
jp
fisttpll
add
jmp
sbb
ljmp
loope
dec
cmp
mov
fistl
cltd
es
mov
pop
popa
jge
shlb
in
das
mov
pop
ss
add
mov
inc
sbb
or
pop
push
andb
data16
mov
mov
punpcklwd
insl
push
cmp
cmp
add
icebp
add
lret
push
lea
xor
mov
mov
adc
sub
enter
mov
movsl
faddl
je
push
pop
prefetchnta
hlt
xchg
adc
addr16
fmull
scas
xchg
lock
stc
adc
in
jns
shl
inc
xchg
cmp
lahf
sub
bound
cmp
fcoml
xchg
out
dec
cltd
mul
popf
pop
jo
lret
aas
daa
jb
dec
sub
cmp
test
cmp
inc
sti
lods
into
pop
lahf
data16
mov
mov
scas
scas
ret
inc
adc
aaa
mov
adc
subb
in
sahf
push
sarb
int
cmp
cli
push
addr16
aas
or
xchg
push
xchg
jl
or
aad
and
pushf
dec
imul
xchg
addb
mov
out
and
push
test
outsl
jo
jg
ret
hlt
sub
dec
jge
push
xor
mov
sub
mov
stos
mov
mov
ficomps
sbb
lock
insb
and
orl
push
ja
inc
push
jmp
pop
mov
imul
rcrb
out
cmpsb
clc
pop
push
pop
adc
fidivs
mov
push
xchg
push
jno
mov
push
push
neg
push
jne
dec
mov
jmp
int
xchg
sub
or
and
adc
sbb
clc
testl
xchg
repnz
mov
and
aam
jg
and
pop
lcall
push
pusha
lret
mov
jge
mov
lcall
fstp
push
mov
and
cmp
inc
pop
jns
loop
push
or
decb
adc
adcl
mov
mov
imull
fstpl
xor
mov
sub
and
cmp
je
xor
fwait
or
mov
lods
jge
push
push
pop
rcrb
push
push
and
bound
mov
dec
mov
aas
add
lock
es
sbb
sbb
pop
xorl
mov
fadd
cmpb
inc
mov
push
xorl
mov
pop
repz
mov
xchg
lock
cli
in
or
popf
inc
lahf
sbb
add
sub
out
scas
rcll
testb
lahf
xchg
es
jns
aaa
cmp
out
mov
shrl
inc
popa
pop
add
insl
dec
or
mov
imul
imul
imul
arpl
mov
ret
and
cmp
clc
insl
adc
shl
data16
mov
rcrl
outsb
jl
fcmovne
in
mov
sbb
mov
xor
repnz
in
inc
jno
bound
mov
lret
testl
lods
shl
sarl
je
adc
mov
outsl
mov
lds
fdivr
push
in
lcall
fdiv
cmpl
jmp
push
push
and
push
into
mov
jo
mov
adc
adc
push
sahf
bound
sbb
lret
aaa
pop
inc
iret
rcrb
or
lds
add
push
mov
xchg
idivl
adc
xlat
test
add
cmp
lcall
in
sub
pop
xor
mov
jae
cltd
cmovle
inc
in
test
je
mov
dec
xor
mov
xor
stc
fstpt
stc
cmp
leave
and
fs
jp
sbb
add
out
and
lahf
adc
fdivrs
jns
out
outsl
jns
shrb
adc
xlat
add
push
xchg
mov
jbe
test
sub
jl
xchg
insb
inc
movsb
les
fsubl
dec
test
lret
dec
out
lods
or
bound
arpl
xchg
cmp
ljmp
cld
adc
addr16
in
sbb
pushl
pop
inc
pop
lret
inc
push
or
mov
xchg
push
dec
jnp
adc
mov
in
sub
push
pop
jno
jmp
mov
lock
cmc
dec
mov
cmc
mov
lcall
adc
sub
jge
aam
push
fs
shl
and
or
les
les
lock
xor
adc
xor
divl
sbb
cmp
repnz
loopne
jae
sbb
cmp
mov
mov
pusha
lret
sbbb
clc
jg
imul
fadd
movsb
fadds
xchg
inc
pop
rcrb
inc
inc
sub
andb
subb
aaa
mov
push
lds
add
cmc
movsb
idivl
sbb
mov
ss
add
cmpb
jg
mov
shrl
adc
add
repz
sbbb
inc
in
jae
push
pop
push
pop
dec
jp
popa
mov
mov
mov
rcrb
pop
shrl
iret
sbb
jmp
aam
aaa
clc
movsl
fnstenv
rcl
dec
xchg
insb
mov
les
cwtl
iret
sbb
dec
arpl
jo
xchg
hlt
sbb
jns
imul
arpl
xor
sbb
sbb
gs
aas
dec
sbb
mov
inc
jle
inc
scas
xlat
xor
icebp
mov
loope
xchg
cltd
sbb
out
push
sub
in
mov
fsts
js
add
iret
inc
adc
inc
adc
jo
push
sarl
push
inc
mov
dec
lock
daa
test
in
mov
ljmp
je
lret
daa
xor
and
mov
mov
sub
das
mov
orl
fadd
daa
sti
xor
outsb
jae
sbb
sbb
aaa
das
or
sar
xchg
mov
insb
dec
lea
rol
xchg
mov
sti
mov
out
push
jg
xor
aad
ljmp
xor
shll
movsb
pushf
aaa
sub
and
imul
push
fiadds
jnp
data16
lahf
cmpsb
pop
dec
pop
pop
scas
test
add
addr16
adc
mov
xchg
inc
sahf
xor
outsl
out
or
inc
andnps
dec
orb
std
mov
sbb
xlat
ds
or
push
push
sahf
jae
or
popa
dec
mov
out
sti
pop
pop
push
int
enter
pop
and
push
mull
mov
mov
jecxz
std
jbe
rorb
and
fldcw
fsubs
push
dec
dec
jae
fistpll
sbbb
xor
jecxz
sub
adc
xor
mov
fidivl
xor
xchg
jmp
ds
pop
adc
xchg
lret
and
ret
dec
push
mov
cmpb
mov
inc
mov
inc
subb
push
inc
dec
push
test
rorl
pop
push
pop
clc
cltd
pop
mov
shrl
cmpsb
test
enter
imulb
mov
add
xchg
leave
adc
xchg
xor
insl
push
lret
fdivrs
lret
loopne
loope
mov
xchg
push
int3
mov
cld
ror
sub
jge
mov
hlt
inc
repnz
pop
pop
mov
inc
inc
xor
ljmp
dec
cmpb
into
and
sub
lods
hlt
cmp
push
divl
mov
cmp
push
mov
jl
rolb
inc
nop
mov
scas
ret
mov
sarb
dec
sbb
scas
lds
shlb
fnstcw
cmpsl
out
xchg
xchg
data16
fisubrl
add
insl
jns
mov
dec
out
add
add
xchg
or
in
and
arpl
cwtl
xchg
cli
lret
sar
pop
fiaddl
mov
ret
push
xchg
test
xchg
inc
xchg
add
jge
and
inc
mov
mov
adcl
ss
sbb
xor
jbe
adc
insl
lods
dec
popa
mov
inc
adc
adc
xor
rolb
mov
and
ds
mov
fadd
xlat
cwtl
popf
rcrl
int
or
sti
popa
jp
out
push
sbb
sbb
push
pop
cmpsb
jne
cmpsb
push
inc
fs
je
lcall
out
and
jle
and
movsl
xchg
sarb
pop
lret
sti
fstps
add
scas
xchg
insb
inc
or
adc
push
fildl
enter
xchg
sbb
jne
nop
mov
pusha
pop
pusha
pop
mov
test
mov
popf
sbb
and
sti
flds
adc
jno
mov
and
out
popf
sahf
stos
jecxz
inc
movsb
mov
fs
fnstenv
je
jns
arpl
mov
enter
add
mov
in
ret
push
pop
or
loopne
adc
outsl
inc
test
shll
ds
jge
data16
mov
mov
or
test
add
out
movsl
cltd
cltd
fcmovb
in
into
sti
push
out
or
mov
imul
inc
fs
push
and
in
mov
lret
push
roll
outsb
aam
cmpsb
das
or
sub
lcall
and
xor
and
xchg
mov
loopne
lret
xchg
scas
mov
mov
push
ljmp
leave
ret
mov
mov
mov
jl
fmull
mov
fwait
push
or
andl
cmp
ljmp
test
int
and
push
pop
out
clc
adc
scas
iret
js
rorb
popa
clc
lcall
incl
call
dec
cs
aas
add
add
adc
shlb
mov
bound
dec
cmpsb
inc
xor
adc
sub
stos
lcall
jns
push
mov
in
or
mov
sahf
jno
pop
push
mov
adc
outsl
ret
mov
iret
std
sbb
iret
dec
mov
adc
pop
cld
add
jp
push
mov
cmp
sub
jmp
rcr
pop
mov
xchg
aam
or
mov
test
lahf
jnp
xchg
in
xchg
mov
pop
pop
cltd
inc
cltd
pop
mull
pop
jg
adc
jns
out
dec
mov
jge
sbb
jmp
leave
dec
loope
jne
mov
xchg
mov
push
fmuls
jo
ja
push
in
push
xor
shlb
or
arpl
int
or
add
insl
xlat
int3
xchg
inc
leave
sub
jl
inc
cmp
int3
mov
jo
stos
leave
fwait
mov
push
jno
jge
xacquire
adc
push
icebp
xchg
push
inc
cmp
xchg
xor
mov
fwait
mov
dec
push
loope
icebp
lret
jge
loopne
sbb
mov
lds
push
pop
mov
jge
popa
ljmp
bound
fdivs
roll
adc
xchg
rorl
shl
push
cli
lret
imul
mov
xorb
add
push
pop
int3
mov
xlat
mov
andb
and
push
push
in
imul
fistps
and
addr16
cwtl
push
jmp
xor
push
iret
mov
pushf
popa
iret
mov
popl
pop
rclb
daa
xchg
ret
cwtl
sbbb
movsl
pop
mov
sarb
lods
das
sahf
mov
ja
and
jo
mov
or
aad
dec
sbb
dec
movsl
mov
cmp
sub
xchg
scas
std
out
lea
xor
stos
jbe
push
xchg
mov
in
adc
aaa
ja
outsb
es
adc
roll
fcomps
das
pop
cmc
cmp
scas
inc
mov
mov
jge
adc
into
in
int
aaa
sub
stos
mov
inc
mov
and
lahf
sbb
stos
je
mov
cld
cwtl
and
mov
jns
dec
xchg
mov
jne
push
dec
hlt
pushf
pop
dec
and
cmp
push
push
pop
lcall
inc
enter
push
ja
or
ss
cmp
shll
cmpsl
push
inc
cld
jmp
insb
mov
xchg
cld
jo
push
and
fsubrp
out
xor
sbb
repnz
lods
lds
test
mov
push
xchg
push
pop
mov
adc
pushf
pop
popf
int
lcall
or
stos
push
sbb
ljmp
jecxz
cmpsb
aam
stc
xchg
mov
cmc
rcrl
mov
jmp
jnp
out
das
out
aam
test
add
ficoms
and
roll
mov
sbb
outsb
sbb
test
cmp
aas
mov
testb
sub
jno
bound
and
jae
xchg
out
or
add
cli
mov
mov
lfs
sbb
gs
and
lcall
xchg
sbb
mov
cs
cld
jle
rorl
jp
push
aad
shrl
push
xchg
ljmp
push
add
les
leave
mov
gs
mov
ret
fimuls
pop
dec
jg
mov
test
xorl
fnstsw
adcl
push
push
cmc
scas
mov
mov
aam
mov
fisubrs
outsb
push
dec
out
adc
xchg
out
aam
int3
aaa
adcb
fildll
xor
mov
jecxz
xchg
cmp
mov
jbe
pop
xchg
mul
test
and
out
sarb
adc
fldl
push
flds
iret
adc
sub
ret
cmp
cmpsb
in
or
and
out
and
mov
in
push
adc
pop
xorb
gs
fs
dec
dec
push
mov
adc
ficomps
xchg
cmpsb
faddp
pop
fidivrs
mov
xchg
imul
cmpsb
fcoms
stos
xor
pop
pop
mov
or
bound
insl
cwtl
fisttpll
adc
aam
or
adc
popa
pushf
inc
xor
out
pop
bswap
add
adc
pushf
adc
in
lea
cmc
ja
inc
mov
faddp
cltd
xor
loope
and
inc
lods
pop
adc
nop
and
imulb
mov
addb
scas
repnz
ficoms
je
push
xchg
aad
arpl
out
and
sub
pop
dec
sarb
hlt
fcompl
stos
push
xlat
nop
shrb
cmp
mov
cmp
sub
bnd
insl
push
dec
inc
data16
jmp
popa
pop
lds
jge
fisttpll
cltd
mov
mov
fldl
xchg
icebp
scas
or
ret
xchg
nop
mov
xor
pusha
insb
in
test
ljmp
add
pusha
shlb
lret
ds
inc
jp
test
shll
ljmp
inc
inc
outsb
in
fildl
lcall
xorl
out
test
xchg
fildl
push
shl
pop
imull
push
stc
repnz
mov
mov
cmp
addr16
adc
inc
or
xchg
inc
cmp
or
jg
icebp
cwtl
sub
mov
fldenv
sbb
ret
sti
fidivl
jecxz
fcoms
or
and
popa
dec
or
bound
int3
jns
sub
pop
adc
mov
inc
imul
repz
mov
dec
pop
mov
mov
mov
lds
lds
inc
enter
mov
push
jnp
xchg
insb
mov
repz
xchg
sbb
cmp
jo
or
leave
outsb
mov
pop
push
xchg
movsb
adc
xchg
icebp
popa
cmp
pushf
int
and
pop
add
sub
aaa
cmpsb
js
add
xchg
repnz
js
xor
stos
mov
mov
loop
jg
sub
stos
mov
cld
add
dec
scas
aam
scas
fdivrp
imul
test
cs
pop
or
add
mov
test
mov
lret
xchg
add
adc
mov
enter
xor
sub
dec
adc
pop
xor
leave
sbb
cwtl
mov
mov
mov
push
mov
lret
mov
inc
pop
add
or
or
mov
jmp
incl
orb
adc
xor
mov
dec
xlat
outsb
mov
int
mov
pop
insb
xchg
push
fidivl
cmpsl
fldcw
sbb
mov
sbb
sbb
xchg
insl
xchg
sbb
and
nop
inc
repz
jae
scas
test
adc
adc
dec
daa
or
mov
push
inc
inc
lea
leave
testb
or
dec
out
pop
dec
int
lret
lock
add
into
or
xor
mov
and
xchg
je
xor
ret
xchg
sub
outsl
pop
jne
paddusw
test
sub
out
lahf
sbb
push
fldpi
repnz
mov
cmp
movsb
imul
sti
scas
sub
pop
mov
mov
jno
xchg
xchg
call
xchg
lahf
mov
clc
pop
jae
out
mov
outsl
mov
xor
xor
dec
inc
pop
cmp
mov
imul
jne
repz
push
xchg
xor
out
leave
insl
popf
pop
jge
adc
mov
addr16
andnps
mov
adc
xchg
push
inc
arpl
sub
in
dec
sarl
xchg
bound
inc
cltd
ret
test
aas
or
mov
pop
lods
lock
ret
or
cmpsl
sbb
outsb
adc
data16
fnclex
push
add
test
bound
std
dec
pop
sti
inc
xchg
fnsave
inc
jae
push
mov
pop
cmpsb
shlb
mov
hlt
rcrb
sub
sbb
cmpsl
xchg
repz
mov
add
push
lods
movsb
outsl
jno
pop
ljmp
pusha
in
int
add
loope
hlt
inc
xorl
xor
cmp
shlb
jmp
aaa
fimull
push
inc
pusha
sbbb
mov
scas
testb
jecxz
js
push
or
sbb
or
fisubs
aaa
mov
mov
outsb
cmp
stos
int
data16
push
sbb
je
cmp
lock
addb
aaa
cmp
je
hlt
in
sbb
and
adc
pop
sbb
enter
ret
mov
jge
jmp
or
pop
jp
dec
jecxz
jmp
pop
stos
adc
mov
pop
dec
cmp
sbb
fldl
mov
xchg
push
jg
pop
js
push
imul
scas
and
jns
iret
daa
or
cwtl
mov
adc
iret
enter
icebp
repz
cmp
xchg
mov
jg
insb
insl
mov
cmpsb
sbb
movsl
cmp
daa
jge
in
mov
cltd
fsubrl
push
es
xlat
fcomps
ret
mov
es
jo
or
adc
pop
scas
sarl
mov
add
dec
cmp
leave
addr16
push
xchg
iret
mov
int
repz
mov
std
mov
inc
mov
mov
nop
shlb
or
mov
fsubs
or
sti
lock
inc
dec
popa
mov
sub
adc
sub
mov
push
outsl
push
inc
pop
push
and
cmp
adc
xchg
mov
mov
xchg
mulb
inc
pcmpeqw
jbe
cmc
dec
popl
cmp
mov
xchg
test
jecxz
fwait
push
jge
addr16
stos
int3
or
sbb
or
out
lret
loop
les
stos
push
mov
fwait
push
cltd
inc
mov
cmp
stos
push
xchg
add
ret
and
cmovb
push
sub
mov
adc
lret
dec
int3
add
and
jnp
sub
jl
rcl
push
call
inc
stos
fnsave
or
loop
sbb
push
add
insb
push
outsb
je
mov
xor
or
xchg
sub
jbe
fcomi
or
xchg
xchg
outsb
inc
and
and
xlat
xchg
imul
test
xchg
fdivr
xchg
lret
push
inc
popf
jl
mov
cmpsl
cmp
insb
cwtl
rcll
or
cmc
addl
ds
jne
adc
and
inc
mov
mov
divb
dec
push
cld
daa
mov
dec
mov
arpl
sbb
xchg
cld
iret
sbb
fldenv
mov
pop
cmp
inc
dec
jno
mov
lods
mov
mov
clc
sub
mov
std
lret
cmc
imull
xchg
cmpl
test
sub
xchg
jle
addr16
aad
xor
jns
xchg
negl
inc
push
ljmp
pop
cmp
sbb
mov
pop
and
jecxz
xor
dec
xor
pop
push
ljmp
xlat
inc
cltd
cmpsb
xor
xchg
inc
dec
rcll
lcall
mov
shlb
jecxz
jge
sbb
xchg
mov
popf
mov
jo
adc
sub
sub
adc
rcrb
sub
mov
test
clc
lods
test
push
pop
cli
push
cld
sbb
mov
push
jle
fwait
add
sbb
xor
int
pop
pop
push
mov
sub
mov
aam
ret
push
jnp
mov
jg
lods
xor
xchg
add
push
test
pop
pusha
cmp
pop
push
outsl
pop
mov
sarl
frstpm(287
ljmp
add
shr
mov
mov
jge
xor
fisubl
dec
and
pop
sti
adc
pop
mov
mov
je
fwait
hlt
daa
arpl
xor
pushf
mov
xchg
popa
mov
rolb
jae
lret
stc
xchg
or
inc
js
rcl
pop
add
mov
loope
or
stc
mulb
mov
jp
jle
push
jns
or
xchg
push
stos
out
popf
rep
lods
mov
mov
push
sbb
mov
pusha
imul
xor
cmp
or
cld
fimuls
ljmp
sbb
in
adc
hlt
into
sete
jp
test
outsl
nop
pop
xchg
sbb
jnp
sbb
cwtl
push
lret
push
mulb
mov
push
pushf
les
pop
sbb
sahf
stos
movsl
inc
shrl
pop
xlat
inc
fwait
adc
jle
mov
ficompl
stc
pop
mov
dec
lret
sbb
and
repnz
pop
mov
or
ret
add
nop
stos
cli
mov
imul
cltd
movsw
jno
or
inc
lods
jecxz
je
cmp
jl
adc
add
cmpl
sti
mov
xor
adc
xchg
mov
dec
adc
inc
mov
add
pushf
mov
loopne
xchg
and
push
in
sub
movsl
or
daa
hlt
popa
scas
mov
xchg
scas
adc
nop
or
outsb
cwtl
sbb
push
mov
movb
dec
incb
xchg
in
gs
xchg
jae
stc
dec
stos
cld
js
sbb
dec
and
sub
xchg
push
push
cmc
cmp
test
or
mov
call
cmp
sub
adc
jo
roll
outsl
aam
dec
cmc
loope
mov
scas
mov
inc
sub
in
mov
test
icebp
xor
test
stos
adc
jb
outsl
cmp
xorl
lods
rorb
jns
jecxz
xor
sub
mov
cmp
pop
ds
nop
inc
push
and
lret
add
imul
repz
shlb
inc
push
sbb
test
adc
pop
xchg
sti
movsb
mov
stos
mov
sahf
adc
dec
loopne
in
xchg
pop
xor
outsl
daa
fmul
arpl
in
add
inc
mov
and
mov
pop
repnz
push
xchg
fistps
loope
inc
dec
mov
mov
lods
mov
insb
out
cmpsb
cli
dec
cmp
jg
sbb
adc
mov
shrl
push
inc
loop
fdivr
sbb
icebp
push
mov
test
add
xor
dec
or
xlat
rol
aas
push
mov
mov
push
mov
dec
pop
pop
dec
jae
lcall
xchg
pop
sbbl
jl
cmp
ret
nop
dec
mov
insl
lds
out
xor
jp
xchg
fcmovu
movsl
sub
rclb
imulb
mov
sbb
decl
xor
das
mov
push
call
mov
bound
out
stc
cmp
adcl
jo
mov
scas
and
cmpsl
int
push
sahf
gs
inc
je
mov
shll
cmp
out
sbb
pop
cmp
mov
sbb
iret
push
fidivrl
pop
in
or
mov
sahf
arpl
in
jbe
nop
adc
arpl
sbb
or
mov
inc
int
mov
sbb
jecxz
daa
mov
lret
or
sub
mov
fcoml
add
mov
pushf
xor
adc
dec
xchg
push
or
cmp
inc
popf
fdiv
lret
fadds
in
rorb
push
loopne
shrb
jns
pop
stos
sahf
out
insb
dec
mov
les
and
mov
ja
xchg
pop
or
lcall
xchg
mov
data16
outsb
test
out
aam
bound
pop
shl
lret
push
mov
xor
push
outsb
es
mov
cs
mov
dec
aas
hlt
fsubrl
xor
pop
and
sbb
sbb
jg
mov
pop
fdivrs
nop
and
ss
jl
jge
out
jo
lcall
lcall
sti
or
adc
dec
jae
adc
pop
in
clc
sbb
and
jle
sub
out
adc
test
insb
xor
adc
mov
dec
test
inc
and
leave
fwait
loop
pop
outsb
sub
mov
daa
popf
dec
es
sbb
cmp
add
data16
mov
daa
lret
enter
sub
xchg
cmpsl
enter
mov
inc
pop
stos
test
icebp
mov
inc
mov
and
mov
pop
add
pop
lock
lret
inc
jl
out
out
fwait
pop
out
xchg
sbb
pop
shrl
jmp
xor
and
inc
xchg
jmp
jle
pop
popa
mov
pop
lahf
push
aam
div
sub
push
pop
das
push
and
sub
mov
push
push
mov
dec
lret
mov
adc
roll
fwait
or
in
push
xor
lahf
pop
lret
iret
jbe
mov
test
in
sub
lods
in
rsqrtps
aaa
or
add
add
aas
sarb
fadd
gs
fsubrl
mov
stos
adc
adc
movsl
adc
pushf
lahf
pop
push
clc
adc
lret
insl
outsl
and
and
test
cmpsb
leave
mov
inc
cli
mov
in
stos
sbb
mov
insl
sub
inc
int3
push
lods
mov
mov
dec
sbb
sub
inc
ds
ret
jne
clc
push
push
int3
leave
xor
mov
into
xchg
jl
dec
xor
mov
push
stos
and
xchg
xor
sub
stos
cmp
fidivs
ret
pshufw
sbb
int3
lahf
enter
es
ljmp
movsb
dec
cmpsl
sub
stos
das
mov
push
mov
cli
cltd
shll
push
adc
bound
shl
mov
iret
jg
fmuls
dec
fadd
sti
mov
or
xlat
pop
adc
mov
or
push
inc
mov
adc
test
mov
or
or
lea
arpl
jp
xchg
repz
jno
test
pop
dec
std
mov
sub
mov
add
cli
std
daa
sub
adc
mov
or
in
ret
ja
or
fwait
mov
dec
dec
ja
xchg
adc
repz
xor
rcr
jae
lods
jle
je
cmc
fiaddl
std
jge
out
bound
pop
popf
popa
xchg
in
aas
cmc
es
mov
fisubl
nop
test
sbb
jae
sbb
or
jne
leave
clc
xchg
call
pusha
sub
or
movsb
mov
xchg
divl
int3
push
sbb
fcomps
out
fstpt
outsl
sti
scas
jle
lahf
push
adc
sub
std
cmpsb
sub
rcl
add
push
lock
sub
fldz
sti
dec
test
cmc
arpl
jge
inc
jno
enter
leave
or
in
inc
push
lods
push
test
mov
inc
insl
pop
dec
sahf
mov
in
or
ficomps
in
test
pushf
pop
xchg
js
inc
xor
ds
jmp
out
and
mov
inc
stos
cmp
push
leave
mov
mov
loopne
fld
shlb
inc
ss
push
jo
or
pop
pop
mov
inc
mov
test
mov
icebp
inc
cmpsl
cwtl
data16
mov
cmp
int
outsb
dec
cmpsb
sub
mov
not
sub
xor
lods
aas
mov
loop
inc
jmp
shr
cli
fs
into
lret
fisttpll
push
sub
stc
cmpsb
or
push
iret
daa
pushf
lahf
pop
xchg
xchg
icebp
sti
jle
and
sub
push
movsb
add
push
mov
cmp
repz
in
mov
pushf
add
cmpsb
mov
dec
sub
or
leave
adc
das
dec
jno
das
das
push
sahf
xor
sub
movsl
stc
fbld
dec
shlb
pusha
jmp
fdivr
sub
pop
and
arpl
mov
xchg
mov
pop
lods
mov
jp
cmp
cmp
nop
je
jae
mov
sub
in
push
adc
or
pop
jo
jne
add
test
insb
mov
sub
scas
adc
test
cmc
fistl
mov
xor
stc
test
pop
push
sarl
roll
mov
cmp
repz
add
sub
inc
mov
adc
mov
push
outsb
mov
inc
dec
mov
cmpl
cmc
and
je
dec
xchg
inc
cwtl
cmp
std
ss
loope
ja
mov
lea
scas
xor
jae
and
sahf
xchg
push
fdivl
leave
xchg
mov
loopne
push
outsb
movsl
mov
mov
mov
cmp
ja
lret
xchg
rcrb
add
daa
mov
or
jb
mov
ja
pop
inc
xchg
jp
cmpsb
lcall
xlat
test
sbb
sbb
mov
aad
insl
cmp
jle
fs
dec
out
dec
push
mov
cmova
sahf
sub
inc
pop
xorl
loopne
test
cmp
call
fmull
jecxz
sub
insb
mov
lret
sar
sub
push
stc
mov
imul
sti
mov
ret
movsl
movsl
mov
leave
fistps
repz
mov
iret
pop
fs
mov
cmp
jmp
insb
andnps
insb
imul
xchg
loopne
rcrl
dec
or
dec
ljmp
andb
dec
lahf
repz
repnz
rcr
loopne
sahf
repnz
mov
pop
sub
outsl
in
dec
pop
add
fs
in
mov
mov
sub
in
mov
dec
xchg
sub
mov
sbb
and
push
cmp
insl
or
test
fmulp
mov
mov
stc
sbb
cwtl
int
out
push
and
adc
push
mov
lods
stos
pop
push
mov
lret
lea
xor
test
test
and
fisttps
sarl
push
lret
mov
and
or
fcoml
pop
imul
aaa
and
ljmp
and
in
pop
out
test
mov
xorb
mov
je
inc
rcl
inc
xchg
aad
push
push
mov
jae
aas
fcmovnu
mov
mov
adc
js
xor
scas
lahf
outsl
or
push
inc
ja
adcl
loope
rcll
jno
add
xchg
add
xchg
pop
cmp
bound
mov
inc
cmp
xor
insb
and
or
adc
lcall
insl
sbb
pusha
dec
jg
andl
daa
out
cwtl
loopne
popa
scas
jg
jb
insb
sbb
insb
push
cmp
loopne
pop
xor
xchg
or
gs
int3
bound
fucom
xchg
lock
mov
dec
test
pop
adc
mov
rorb
mov
leave
orl
push
sub
push
cmp
out
pop
jnp
cltd
xchg
sbbb
xchg
fwait
loopne
insl
rcll
cmp
mov
dec
mov
mov
adc
arpl
cs
lock
subl
mov
stos
fidivrs
in
icebp
mov
aaa
cmc
scas
mov
bound
xor
mov
xchg
orb
jae
imulb
sar
jns
sbb
mov
mov
ljmp
and
out
adc
add
fisubrl
push
cli
pop
jnp
int
cltd
subl
test
mov
push
pop
add
jns
pop
cld
xor
enter
xsha1
cmpsb
dec
xchg
leave
mov
fldenv
mov
outsb
push
fldl
movsb
and
imul
rolb
and
test
adc
rcrb
les
and
dec
or
in
mov
subb
in
and
movsl
in
popf
nop
aad
mov
mov
mov
leave
inc
mov
and
mov
aaa
pusha
addr16
out
lret
xchg
andb
adc
stos
sub
in
mov
and
test
jge
int
dec
jns
stos
outsl
mov
popf
shr
aad
sbb
push
cmp
adc
sub
push
adc
or
mov
xor
push
test
loopne
leave
imul
jg
call
sbb
imul
mov
stc
outsl
xor
jg
jo
sub
adc
mov
cmpsl
aad
mov
pop
lds
and
int3
cmp
pop
icebp
mov
cltd
test
adc
xlat
add
and
xchg
fdivrs
and
and
mov
inc
jno
out
or
mov
dec
and
dec
pop
iret
pop
push
orl
xchg
test
sub
pusha
jbe
jle
cmpsb
icebp
mov
js
and
cs
adc
orl
push
lahf
inc
leave
icebp
pop
cmp
cmp
jno
fidivl
add
mov
xchg
inc
es
adc
adc
aad
in
repz
roll
dec
lock
int3
xchg
pop
xchg
sbb
scas
lea
repnz
xor
dec
popf
lret
and
or
xchg
push
out
push
dec
add
mov
xchg
push
outsl
mov
enter
push
sbb
in
add
jno
fdiv
repz
ljmp
adc
sahf
loopne
dec
rorl
ficomps
jae
outsb
or
push
push
loop
ficomps
inc
jo
cmp
mov
lds
xchg
cmc
cmpsl
xcrypt-ctr
cmpsl
pushf
xchg
repnz
loop
mov
sbb
aam
flds
std
shrb
movsl
inc
idivb
ficoml
mov
mov
sti
push
shrl
or
mov
iret
push
xchg
mov
xor
mov
int
ds
push
pusha
addr16
decb
xor
daa
cmc
in
cmp
addl
fs
pop
jae
cli
cmp
clc
xor
dec
xchg
mov
cmp
cmpsb
dec
ja
test
call
xor
xlat
iret
mov
dec
jmp
shrl
mov
faddl
push
jne
in
jp
ja
mov
jbe
call
shrl
push
sahf
out
loopne
sbb
mov
pop
sub
push
rcll
ret
pop
and
cmp
push
fsubrs
xchg
rcll
mov
sbb
or
lock
int3
cmp
add
subb
mov
bound
cli
adc
scas
sbb
sbb
or
aas
sbb
dec
fidivs
repnz
dec
dec
mov
mov
sub
sarb
rcrb
inc
pop
cwtl
mov
push
xchg
shll
pop
notb
js
add
punpckhdq
out
pop
scas
sbb
or
and
add
addb
enter
add
push
sbb
add
mov
testl
and
outsb
dec
cld
fidivs
pusha
rcrb
sub
outsl
push
pusha
jl
outsb
and
shrb
sbb
ss
jbe
or
push
mov
mov
push
push
loopne
add
test
push
lahf
xor
jmp
out
mov
gs
adc
mov
daa
jns
and
lea
inc
xor
hlt
fldl
pop
decb
jb
lcall
jb
div
sti
in
pop
hlt
jb
inc
xchg
gs
js
popa
sbb
lret
push
or
pop
out
dec
inc
addr16
shll
fdivrs
hlt
xor
mov
inc
or
jg
xchg
imul
mov
jmp
jb
icebp
loop
cmp
loope
in
fwait
in
or
jg
leave
les
bound
loopne
jl
sbb
shr
loope
jge
test
in
mov
cmpsb
push
aad
push
cmp
pop
bound
push
scas
mov
fwait
nop
int
rcll
pushf
sub
out
push
xchg
fadd
sti
sahf
or
fsubs
pop
adc
mov
fwait
fwait
or
sub
mov
cmpsl
jb
fcompl
push
divb
es
jecxz
xchg
dec
ljmp
addl
test
and
aad
or
mov
dec
ret
jge
mov
or
bts
ret
out
insb
cmp
mov
and
leave
cmp
lds
in
int
int3
adc
adc
jbe
in
arpl
mov
mov
xchg
lcall
xlat
or
loopne
or
mov
shll
and
js
push
ret
and
xchg
repz
cltd
xor
loop
mov
xchg
stos
cmp
mov
cwtl
adc
add
jb
js
lea
fsts
jmp
add
mov
mov
cs
dec
cmc
test
xor
xchg
js
inc
movsl
push
xchg
dec
into
cmp
mov
hlt
neg
mov
push
ret
inc
jne
sbb
or
dec
in
jp
leave
push
sbb
cwtl
mov
out
es
pop
and
xchg
cmp
adc
clc
mov
jge
pop
clc
jp
div
scas
sbb
repnz
std
push
or
xchg
mov
rcrb
popa
push
in
mov
gs
xor
dec
into
arpl
mov
cmp
fdivl
mov
jmp
cmc
int3
popf
inc
pop
imull
lock
cltd
mov
xchg
xchg
jb
pop
lods
jmp
rclb
scas
cmp
call
icebp
mov
jmp
adc
push
or
cmpsl
imul
aaa
pop
aas
js
test
js
mov
sub
fisubs
pop
mov
rorl
mov
adc
cmp
ljmp
into
popf
adc
add
add
imul
js
push
adc
pop
ljmp
lds
movsl
les
outsb
scas
jl
aas
lret
pushw
loop
in
aaa
jns
xchg
pop
out
ljmp
cmp
fcoml
sub
test
data16
lahf
dec
aam
xchg
and
shll
cmpsl
and
jno
jae
jne
aam
incb
mov
inc
insl
mov
xchg
nop
das
mov
push
xchg
ret
jp
and
xor
addb
repz
scas
sbb
xchg
lods
mov
loop
xchg
xchg
dec
les
int
dec
sub
in
insl
pop
cltd
mov
adc
je
xchg
addb
xchg
fdiv
jb
jnp
inc
push
pop
pop
in
pop
dec
pop
outsl
xchg
push
adc
jnp
stc
xchg
in
add
jp
mov
incb
lds
mov
lahf
push
jno
aas
js
jb
dec
inc
cld
jl
mov
adc
aas
clc
add
push
scas
sub
xor
mov
imul
cmp
in
push
pop
lods
cmp
ret
lock
sti
jno
pop
jge
lahf
out
ficomps
adc
fnop
mov
push
sub
sbb
pusha
adc
testb
jge
cli
xchg
cmp
push
psllq
xchg
call
pop
and
es
push
push
rorb
aas
sti
fcmovnb
out
popf
sahf
mov
dec
cmp
rcl
std
es
inc
in
cmp
fisubrs
movsb
into
dec
cmpb
mov
or
inc
jmp
sub
add
in
mov
jg
xchg
pop
cs
test
dec
divb
mov
and
in
push
jecxz
mov
sbb
imul
rorb
mov
or
push
jg
movups
adc
cli
cs
sbbl
test
push
in
sub
test
mov
lock
xchg
mov
rcll
outsb
and
mov
inc
inc
mov
in
scas
jecxz
int3
sbbb
add
lahf
jns
mov
pop
sahf
in
hlt
shrb
aaa
nop
int
xor
dec
dec
aaa
negb
push
mov
sahf
std
mov
sub
mov
nop
xchg
std
mov
cld
push
jne
xor
or
adc
inc
shl
jle
in
or
dec
adc
mov
testl
fidivrl
mov
and
cli
out
sub
dec
imul
faddp
mov
inc
loop
mov
mov
pop
nop
lahf
pop
nop
in
lock
or
xchg
es
pop
pusha
pop
aaa
or
out
inc
push
mov
dec
cld
inc
jae
mov
mov
jg
dec
leave
add
push
shlb
cmp
xchg
inc
jp
jns
insl
xchg
sarb
mov
in
daa
idiv
data16
pop
cwtl
xchg
sbb
inc
iret
dec
dec
dec
xchg
das
jnp
popf
iret
into
dec
mov
xlat
pop
ljmp
or
push
int
push
lock
pop
pop
ret
out
test
movsl
jmp
cmp
repnz
call
jmp
xchg
add
jbe
call
xlat
ja
pop
adcb
and
enter
dec
pop
std
cmp
outsl
xchg
lret
fisubrs
aaa
pop
pop
aas
cmp
adc
pop
dec
push
and
xor
pusha
add
fucomp
jae
test
and
sti
jmp
mov
addr16
clc
pop
jae
pop
es
stc
jns
push
jge
cld
mov
lea
negb
insb
mov
add
into
sub
fsubr
inc
rcll
inc
js
scas
sahf
test
cwtl
fsubr
sahf
out
pusha
sahf
sub
xchg
in
lods
pop
insb
cmpsb
test
scas
or
mov
std
ljmp
mov
and
lods
add
fadds
xchg
out
cmp
inc
imul
int3
xchg
rorb
stos
xor
lcall
sub
push
lahf
cld
std
aam
adc
cltd
pusha
insl
xor
rorl
cli
jno
add
xor
pop
data16
pop
or
mov
scas
jg
rcr
das
xchg
or
mov
mov
cmp
clc
cmp
xchg
mov
out
sbb
jbe
sarb
push
push
std
xor
test
mov
cmp
adc
in
mov
jp
jb
mov
lods
jmp
mov
lahf
cmp
movsl
xchg
insl
add
inc
jns
je
sub
xchg
loope
cld
sbb
ljmp
sub
sbb
cmp
into
out
stos
scas
mov
fdivrp
xchg
sti
mov
scas
xchg
test
pop
mov
dec
push
pop
sbb
es
mov
adc
dec
sub
pop
pop
in
jecxz
shlb
fcomps
pop
pop
xor
push
add
adc
push
xlat
mov
mov
lods
ds
jae
aas
imul
test
and
dec
inc
sub
xchg
out
cmp
fdivrl
jb
mov
ds
push
je
mov
fisubrl
repz
popa
jle
dec
add
mov
lret
inc
lcall
push
add
xchg
mov
xor
xchg
ret
push
and
or
stos
addr16
stos
mov
mov
cmp
inc
dec
out
call
jae
loope
push
fnstcw
aaa
adc
push
popa
arpl
popf
imul
mov
fcmovbe
js
inc
sub
cwtl
outsb
lahf
mov
mov
call
adc
fstpt
dec
jnp
mov
and
andl
ficompl
mov
fisubrs
mov
movsb
dec
dec
lods
ret
test
sub
js
test
adc
call
stos
inc
rcrb
push
xchg
mov
jge
mov
push
dec
vpmacssdd
or
dec
mov
sub
and
lahf
lock
mov
dec
sbb
jge
xor
pop
mov
fidivl
xchg
dec
cmp
cmpsb
jmp
shl
aas
sub
jno
testb
xchg
dec
adc
push
jge
sahf
pop
sub
add
xor
pushf
js
in
cmp
xor
or
shrl
pop
xor
andl
jnp
jne
popa
xor
es
push
inc
sub
xor
inc
cmp
pop
nop
mov
rolb
push
dec
xchg
mov
loope
xchg
mov
mov
pop
lea
call
arpl
outsb
lea
dec
dec
cmp
fstpl
jmp
fsubrs
loope
or
fsts
xchg
cmp
xchg
add
lock
ret
xchg
lcall
fstl
mov
xchg
loope
sub
jmp
inc
cmp
push
aam
and
mov
nop
cmovo
sub
ljmp
rcrl
jbe
xchg
repnz
xchg
data16
addr16
pop
std
push
add
jecxz
scas
pop
xor
mov
out
pop
mov
push
add
jecxz
mov
test
adc
or
fstps
call
call
mov
in
ret
or
or
mov
and
cltd
or
mov
sbb
aas
nop
mov
rcrl
xlat
add
daa
dec
xorb
fst
cmc
pop
fidivl
jns
fsubrl
or
addl
push
in
arpl
aam
cld
lock
pop
mov
mov
push
dec
and
dec
cmp
xchg
sbb
icebp
fs
jno
into
or
insl
sti
or
in
fcmovnbe
loope
lods
movsl
aam
dec
or
push
adc
sbb
ljmp
std
xchg
or
mov
cli
ficoml
mov
push
cmpsb
sbb
xchg
mov
in
scas
sarl
cmp
leave
fwait
enter
or
sub
lret
cwtl
mov
xor
push
leave
inc
lea
xor
std
sarl
in
cmc
out
mov
push
repz
sub
sahf
pop
pop
mov
push
idivl
mov
push
jno
bound
mov
xchg
aad
dec
ficomps
xlat
gs
cmc
push
sub
cmpsb
in
in
sbb
cmp
adc
mov
movsb
je
sbb
cltd
jno
xchg
push
in
inc
sub
inc
jnp
out
arpl
pusha
flds
call
cltd
pop
sub
pop
orl
inc
mov
xorl
jge
push
ret
xchg
addb
popf
pop
adc
fxtract
push
jp
xor
flds
add
and
ficomps
imul
push
jp
cmp
insl
mov
ficoms
dec
sbb
movsb
dec
jl
sahf
jge
subb
pop
jg
jge
clc
cwtl
and
ret
pop
insl
mov
ret
popa
jae
jo
mov
add
addr16
push
call
sbb
push
mov
sub
arpl
fistl
push
sbb
popa
jp
scas
jg
lds
push
fcoml
or
sbb
xchg
js
xchg
imul
dec
xchg
aad
sarl
ror
pop
test
test
imul
lds
mov
test
shll
push
test
fidivs
cs
adc
sub
popa
daa
rcr
in
jmp
xor
inc
stos
or
adc
push
xor
in
jns
jne
fdivrs
cmp
cltd
pop
xchg
xchg
fmulp
cmpsl
sub
repz
and
sbb
daa
inc
out
loope
adc
adc
ret
jle
icebp
cmp
pop
insl
mov
test
mov
push
shufps
inc
cld
sbb
rcr
imul
mov
gs
cmpb
icebp
cmp
shlb
int
cwtl
inc
sub
test
push
lods
fiaddl
out
mov
push
rcl
mov
mov
mov
testb
push
jecxz
jg
aas
add
pusha
xchg
mov
xchg
sub
push
add
xchg
pop
jg
mov
int
pop
dec
xlat
mov
mov
leave
xor
mov
std
xor
lahf
aas
fidivrl
popa
jg
xchg
adc
out
inc
add
incb
test
js
mov
cmp
hlt
pushf
mov
xlat
clc
sahf
xor
sub
loopne
push
jb,pt
aad
in
out
je
push
stc
aaa
out
fadd
scas
adc
test
daa
cmpb
stos
xchg
jecxz
sbb
ret
sub
insl
inc
and
movsb
insb
sti
mov
imul
scas
dec
or
out
xor
loopne
mov
cmp
out
in
add
push
mov
cmp
sti
xchg
mov
xorb
inc
adc
lahf
ds
push
dec
mov
push
enterw
mov
test
mov
jecxz
mov
jns
pop
add
inc
push
and
dec
movsb
fcompl
pushf
data16
cmp
inc
test
repz
orb
xorl
mov
shr
cltd
xchg
pop
das
jmp
fistps
jno
fdivr
jae
xor
inc
xor
cmpsl
mov
pushf
into
xor
les
sub
xchg
mov
adc
jl
push
jg
pop
filds
repnz
cmp
mov
push
ljmp
lret
jmp
imul
mov
cwtl
mov
shl
add
test
sbb
hlt
mov
cwtl
and
mov
mov
cmp
xor
push
out
push
das
pop
and
insb
cltd
pop
push
outsl
or
push
fwait
push
xchg
adc
xorl
push
mov
pop
pop
mov
imul
gs
jns
mov
sbb
mov
push
nop
rcrb
aam
mov
dec
inc
call
mov
ret
push
fs
push
leave
xor
leave
or
jmp
and
hlt
mov
ds
inc
test
das
pushf
jae
jl
cmp
sbb
lods
imul
sar
lahf
push
out
mov
inc
xchg
mov
hlt
jo
sahf
iret
add
mov
push
movb
ret
outsl
inc
or
xchg
push
mov
loop
pop
popa
inc
in
lret
pop
insb
pop
iret
xor
aam
mov
call
arpl
xorl
mov
xlat
mov
sbb
dec
repz
sub
cmpl
ljmp
int
lcall
fs
js
repnz
mov
cltd
fmuls
leave
rolb
outsl
sub
in
jmp
rclb
stc
push
jmp
fimuls
mov
cmp
loope
test
jb
sbb
jl
lds
xor
xorb
xchg
mov
push
jmp
adc
sbb
dec
pop
dec
inc
xor
fsubr
mov
call
xor
movsb
dec
dec
or
mov
dec
dec
inc
iret
outsb
xchg
inc
mov
add
xor
ja
inc
jae
lods
lcall
pop
into
sub
mov
pop
fstpl
jl
mov
xor
xchg
ja
dec
rcrb
outsl
jbe
xlat
clc
lahf
mov
mov
lahf
inc
aaa
cwtl
inc
dec
xchg
in
mov
dec
cmpsl
in
jmp
stos
mov
mov
loope
or
mov
mov
cmpsb
pushf
pusha
shl
mov
ficoml
aam
push
mov
and
pop
xchg
pop
pop
xchg
cli
lods
xor
xchg
or
pop
into
aad
mov
xor
adc
and
cmp
cmc
inc
fwait
and
shlb
cmpsw
and
idiv
divb
cltd
pop
cmpsb
lods
rcll
jne
std
add
jecxz
fucom
mov
push
sbb
cmp
cmp
lock
lret
data16
test
add
jecxz
push
mov
hlt
cmp
xchg
pusha
incl
call
sub
push
mov
dec
add
cli
inc
repz
mov
push
in
or
popa
dec
push
je
cmp
pop
pop
loope
inc
fidivrs
pushf
cmpsb
add
mov
adc
jp
dec
jp
add
popf
cmp
sub
dec
adc
mov
dec
xchg
add
lret
and
cmp
sbb
jbe
jmp
and
push
enter
daa
imul
inc
push
andl
fdivl
mov
or
scas
fidivrs
jg
or
adc
jl
sbb
and
lcall
outsb
mov
jmp
sbb
fwait
mov
xlat
or
push
arpl
mov
into
std
or
vmwrite
lahf
mov
cld
pusha
xchg
into
shl
lods
mov
insl
les
mov
fwait
mov
jb
mov
fstpt
mov
cs
cld
out
mov
cld
test
cmp
push
and
mov
ret
adc
sbb
fsts
fdivrp
dec
in
neg
sahf
fmul
fwait
cs
in
xchg
lret
notb
adcl
dec
jg
fisttpl
and
test
inc
dec
in
shl
lret
data16
cli
xchg
xor
repnz
jns
stos
scas
xchg
test
fst
cmc
jnp
fs
repz
cmp
outsb
sub
mov
push
rorb
jno
mull
inc
jecxz
mov
push
loope
loope
test
jnp
xchg
loope
cwtl
out
cld
cmp
jmp
xchg
pushf
addr16
fxch
mov
call
popf
mov
or
cmc
push
aaa
xor
add
pop
cli
movsl
sub
inc
sbb
mov
in
pop
inc
add
gs
xchg
push
in
out
dec
test
jle
pop
nop
in
push
sbb
dec
out
cmp
loopne
int
jnp
xchg
mov
or
cwtl
rclb
pop
insl
xchg
daa
fwait
dec
adc
pushf
sti
repnz
mov
mov
inc
pop
push
popf
dec
add
dec
pushf
xchg
mov
pop
mov
mov
dec
imull
test
xlat
ficoms
arpl
jo
daa
int3
andl
push
incl
jns
aaa
pop
xchg
push
clc
sub
shl
icebp
mov
push
push
pop
lret
loopne
dec
orb
push
roll
sahf
adc
loopne
adc
cld
test
das
xchg
sbb
adcb
out
push
cmp
adc
sbb
mov
bound
sbb
cltd
fnsave
les
imul
aad
lret
pop
xchg
adc
mov
push
and
jnp
mov
xor
mov
adc
pushf
cmp
pop
pop
mov
ds
mov
mov
push
subb
fstl
aam
sub
lret
push
push
jecxz
or
aas
std
in
jge
orl
cli
jg
xchg
push
repnz
sarl
jnp
js
movsb
mov
sbb
xchg
aaa
inc
mov
sbb
push
and
cwtl
pushf
mov
mov
fnstsw
mov
fsub
inc
mov
mov
and
sbb
xor
icebp
add
sbb
mov
dec
mov
out
sbb
push
mov
mov
fcmove
pop
jle
xor
pop
pop
insb
jge
fisubrl
ret
movsl
test
cmc
roll
mulb
dec
out
arpl
mov
mov
repz
movsb
ja
adc
rep
aad
cltd
jb
sbb
xor
mov
jnp
call
stc
jbe
dec
and
mov
xchg
shlb
push
into
xchg
jl
sti
in
pop
andb
mov
lods
repnz
test
adc
xchg
jne
sub
xchg
inc
add
ja
jp
daa
hlt
rclb
ret
jecxz
and
sub
or
vshufpd
jbe
xchg
es
jnp
insb
add
in
add
cmp
and
mov
dec
mov
dec
jae
cmpsl
adc
push
stc
mov
jge
fdiv
mov
inc
jl
adc
fistpl
orl
xor
xchg
mov
jbe
push
cltd
cwtl
push
jne
in
das
js
sub
loop
inc
jnp
sbb
inc
insl
xchg
clc
test
out
add
adc
mov
pcmpgtb
cmp
fstpt
dec
imul
xor
insb
std
or
mov
addb
test
xor
mov
pop
dec
push
mov
dec
xchg
cmc
ss
pop
je
sahf
cs
mov
adc
adc
mov
pop
jecxz
sbb
pop
xor
test
test
and
mov
inc
iret
cmp
loopne
adc
xor
jae
push
pop
test
xchg
nop
or
negb
leave
sub
iret
lods
mov
lahf
pop
push
adcb
enter
test
lods
sbb
lahf
xor
lea
jmp
jns
clc
out
insl
mov
loope
aad
mov
aaa
xor
ss
cmp
fsubp
cmp
push
out
lds
cli
inc
mov
mov
scas
stos
cmp
cmpsl
mov
adc
lods
jge
inc
fadds
fsubrl
push
mov
mov
xchg
lahf
subb
mov
addr16
cmpsb
sbb
incb
mov
scas
cld
outsl
stos
sbb
dec
cmpsb
ljmp
pop
enter
fisubl
pop
inc
testl
xorl
mov
sbb
xor
out
fwait
call
sub
int3
insl
out
dec
pop
push
movsb
lret
xacquire
incl
movsl
mov
dec
jmp
mov
enter
ficoms
push
mov
out
mov
and
out
stos
mov
mov
mov
push
leave
addl
movsl
xchg
addr16
outsl
mov
imul
das
or
loopne
fldenv
push
andb
ret
or
pop
imul
adc
inc
adc
popf
sub
fwait
pop
lods
dec
mov
cmpb
out
sub
dec
cmp
push
loop
adc
jl
push
jns
xchg
jl
xchg
mov
pop
cwtl
subl
scas
lods
shl
fbstp
mov
in
inc
aaa
and
dec
inc
int3
or
or
mov
cmpsb
jbe
fadds
outsl
aaa
mov
shrb
jno
pop
jnp
mov
inc
push
mov
jl
xlat
or
xor
xor
lock
pop
and
scas
mov
jae
push
add
repz
sub
jmp
std
pushf
jnp
scas
xchg
xor
mov
test
xchg
or
inc
lcall
dec
adc
sbb
mov
pop
mov
mov
into
mov
fwait
pushf
push
mov
fcom
dec
sub
out
jle
pop
out
xor
rorl
adc
mov
xchg
rorb
adc
aas
inc
dec
adc
jae
mov
adc
repz
dec
nop
sbb
es
rcl
shrb
fistpl
dec
dec
scas
outsl
test
dec
xchg
andl
aad
pop
dec
jb
push
shlb
arpl
cmp
or
test
fistl
jbe
xor
movsbl
mov
pop
cwtl
pop
insb
xor
jne
outsl
out
test
lds
pop
cmc
or
bound
loop
outsl
mov
push
dec
dec
cwtl
decb
push
push
jg
out
xor
fwait
adc
loope
xor
cmp
cmp
mov
faddl
ret
xchg
ret
popa
nop
cli
aad
push
out
lock
dec
mov
in
sub
mov
dec
sbb
xchg
xchg
mov
cmp
sub
jbe
push
fldenv
and
test
shll
sub
cmp
std
xchg
in
out
push
imul
adc
xchg
pop
nop
lds
aas
cmp
or
jns
push
addl
sahf
or
mov
lock
inc
jmp
cmpsb
or
enter
ja
pop
mov
inc
mov
or
push
imul
js
sbb
mov
push
lods
or
fimuls
inc
out
jl
inc
pop
incb
and
xchg
jmp
mov
xchg
rcrl
insb
mov
popf
je
mov
push
lods
push
dec
ja
repnz
sbb
xchg
shl
pop
mov
sbb
shlb
loop
sahf
lods
cmp
push
rorb
pop
pop
test
jge
test
in
into
mov
push
lea
aam
mov
sub
pop
adc
std
add
xor
or
pop
mov
push
popf
les
inc
mov
jbe
jne
mov
push
andl
adc
pop
rorl
scas
xlat
sti
lea
fcoms
ret
mov
jbe
dec
xor
dec
inc
roll
sahf
or
mov
in
jb
into
jno
add
enter
shrl
outsl
pop
lods
xchg
add
lods
sub
xchg
clc
xchg
adc
sub
mov
push
xchg
lods
addl
cmp
es
jle
and
je
cmpb
pushf
push
les
sbb
mov
mov
pusha
adc
mov
sahf
js
and
xchg
mov
mov
mov
jge
xchg
pop
imul
xchg
clc
stos
add
sbb
jge
mov
hlt
cmp
arpl
inc
inc
cmp
xchg
pop
pop
xchg
outsb
out
or
repz
mov
pop
fwait
inc
in
cld
clc
pop
arpl
or
scas
xchg
cmp
ret
mov
adc
aad
movsl
mov
mov
repnz
iret
shll
push
pop
jno
mov
add
ljmp
inc
aas
inc
out
stc
in
lods
or
jnp
lret
dec
xor
fcompl
inc
pushl
jmp
mov
fsubrl
ljmp
test
xchg
inc
call
mov
sub
imul
inc
add
push
cmp
shrb
in
jge
xor
mov
add
aam
dec
xchg
test
ljmp
lods
add
mov
adc
sub
cmp
iret
dec
mov
pop
lea
ja
jl
and
fmuls
adc
cmpsb
pop
push
mov
ja
and
cmp
xor
dec
push
push
xor
or
enter
push
xor
shl
jnp
cs
fs
int3
shr
dec
dec
fiadds
adc
sub
daa
push
imulb
lcall
jbe
and
adc
into
or
mov
call
std
and
mov
mov
test
and
and
bnd
test
lds
lock
pop
clc
pop
jnp
lods
cltd
mov
dec
dec
pop
jg
stos
cmp
roll
push
push
lock
jle
pop
xor
mov
std
flds
sbb
lock
mov
mov
outsb
mov
xchg
jnp
dec
lret
das
xchg
lret
jne
rolb
mov
test
es
cmc
insl
nop
stos
shlb
adc
jge
test
mov
jmp
mov
mov
mov
repnz
inc
mov
in
ret
or
mov
inc
pop
in
testl
outsb
push
adc
scas
and
pop
sub
hlt
gs
cmp
or
std
mov
cli
mov
movsl
int
jbe
int
add
mov
mov
std
cld
dec
xlat
mov
and
ss
fisubs
xadd
xchg
or
xor
iret
std
or
xor
int3
scas
aad
int
ljmp
inc
ja
jg
xchg
lds
dec
int
jg
loop
sbb
add
mov
inc
mov
pop
push
imul
les
push
call
mov
aad
pop
movsb
in
inc
inc
add
fisttps
xchg
mov
lock
icebp
jge
inc
pop
mov
je
adc
test
dec
push
test
repz
xchg
icebp
mov
dec
int
jmp
jno
repz
mov
jo
fcomps
mov
adc
pushf
jmp
sub
sub
jno
or
sub
mov
push
rorl
jp
test
pop
sub
jl
adc
aad
lea
nop
inc
les
inc
repnz
or
mov
fidivl
adc
cmpsl
sbb
outsl
mov
fs
add
jl
mov
sub
jae
mov
xchg
mov
mov
xchg
xchg
mov
dec
jnp
pop
cwtl
xchg
mov
pop
pop
pop
cmp
psadbw
jg
mov
xor
push
jmp
jne
addb
mov
pop
les
mov
cmpsl
fistps
hlt
cmpsl
repz
mov
mov
lods
outsl
std
aad
test
fwait
cmpsb
inc
mov
push
push
mov
in
cmp
ret
mov
inc
ret
inc
daa
daa
or
ss
sub
fwait
and
test
lret
lret
cmp
mov
mov
andl
mov
jmp
pop
sub
loope
inc
adc
test
mov
fdiv
movsb
nop
adc
dec
xchg
mov
cltd
inc
fdiv
in
repnz
jecxz
inc
mov
adc
das
lock
sbb
mov
cwtl
xor
ficoml
push
adc
stc
int
xor
inc
stos
fsubs
sub
int3
inc
jb
cmpsb
mov
xchg
int
pop
sbb
fists
addr16
push
add
dec
adc
xor
fs
sub
cmp
loop
cmp
arpl
fs
mov
ja
mov
inc
jp
jl
stos
push
decl
fldcw
jecxz
cli
insb
dec
je
cld
mov
lock
jb
nop
lret
xlat
negb
cmp
ret
adc
outsl
jns
mov
and
adc
xchg
jae
inc
cwtl
je
or
stos
xor
sub
ja
ret
test
xor
test
mov
int
adc
pop
pop
int
jp
ds
xchg
movsb
negb
adc
iret
pop
dec
mov
jb
fdivl
insb
mov
imul
pop
lea
mov
sbb
jl
mov
imul
pop
push
xchg
xchg
push
xor
sbb
mov
or
mov
add
dec
mov
loop
fs
in
lods
inc
xchg
fmul
xchg
xor
dec
fnstsw
js
faddl
push
or
hlt
cmp
mov
imul
and
adc
push
jne
popf
and
jp
cmpsl
cmp
mov
inc
stos
test
cmp
sub
cwtl
cltd
jno
adc
pop
xchg
int
pusha
mov
gs
pop
int3
mov
jns
pop
imul
mov
xchg
pop
xchg
inc
inc
lds
pop
xor
or
enter
lret
cli
loope
fwait
add
xchg
inc
and
mov
in
pop
shlb
movsb
inc
inc
mov
fbstp
into
mov
cwtl
pop
lahf
mov
pop
das
pop
and
leave
out
xchg
and
pop
pop
jns
ja
lods
stos
pop
mov
push
inc
or
popl
pop
or
sbb
mov
inc
xor
arpl
cli
push
mov
jg
push
pop
cmpb
dec
sbb
and
xchg
iret
repz
mov
mov
or
xor
test
cmpl
outsb
gs
std
mov
pop
xor
cltd
push
insl
pop
dec
add
or
and
faddl
inc
call
pop
push
jle
push
dec
pushf
or
adc
push
xor
scas
loope
mov
sbb
fwait
mov
ret
arpl
push
bound
adc
push
pop
and
adc
mov
pop
pop
sub
ror
xchg
imul
in
jp
addr16
xor
in
sub
mov
mov
push
pop
in
sbb
sub
mov
mov
and
add
xor
sub
dec
pop
sbb
sub
add
or
mov
and
movsb
jge
dec
jmp
inc
out
xchg
imul
cs
sub
pop
xlat
movsl
push
sysexit
jmp
nop
leave
les
inc
leave
pop
aam
fimull
xor
bound
push
jle
movl
push
cmp
push
loope
rorl
iret
push
mov
cmp
sub
out
add
mov
mov
mov
push
add
adcl
jecxz
dec
sbb
movsl
in
cmp
push
and
fs
xor
jbe
push
repz
xor
aas
xor
testb
jmp
repz
pop
popa
mov
imul
imul
mov
adc
loop
pop
dec
pop
or
and
jp
daa
pusha
popa
or
pusha
lods
or
sbb
pop
mov
or
in
inc
add
inc
cmp
mov
mov
inc
cwtl
xchg
jae
sarb
mov
xchg
adc
leave
ja
pop
cmp
mov
mov
xchg
jg
in
sbb
repz
pop
scas
jno
je
xor
std
xchg
pop
adc
sti
sub
movl
jg
pop
adc
dec
dec
fld
push
cmp
push
daa
or
ja
xchg
sbb
repnz
stos
pop
std
call
ficompl
xchg
dec
jge
mov
out
cmp
loop
dec
roll
ret
stos
jae
roll
mov
dec
out
xor
movsb
xor
mov
inc
jmp
sti
das
cmpsb
clc
pop
test
push
mov
aaa
mov
cmp
gs
sbb
dec
out
xor
mov
shrb
push
mov
dec
sub
cmpsb
fmull
fisubrl
inc
cmc
stc
scas
insl
rcrl
push
push
js
icebp
xchg
test
mov
mov
add
cli
lods
sbb
outsl
add
ljmp
mull
scas
std
imul
xchg
push
adc
aam
sahf
scas
sub
or
cltd
jmp
mov
push
arpl
cltd
pop
fyl2x
mov
mov
test
pop
addb
mov
nop
pusha
mov
stos
ret
add
mov
adc
push
pop
orb
push
icebp
dec
xor
xor
popf
pop
int3
pop
cmp
insb
and
jle
cmp
js
sbb
cs
scas
inc
add
xor
xor
lods
add
push
sbb
stc
inc
out
push
push
aad
jmp
sbb
pop
mov
data16
cmp
dec
mov
mov
out
in
or
push
sub
xchg
fimuls
pop
or
pop
fstps
sub
pop
and
pushf
jnp
inc
test
mov
jb
iret
mov
mov
push
mov
dec
roll
push
xor
adc
lret
add
dec
jb
mov
aaa
rclb
repz
out
add
nop
push
jnp
push
shl
inc
icebp
jle
jmp
inc
mov
test
jb
out
aam
aam
scas
adc
lods
jge
lock
and
dec
loope
sti
lds
dec
into
out
lds
sti
lock
sti
ja
xchg
stos
and
iret
pop
push
addl
push
push
pop
jmp
stos
push
sahf
pop
shrl
mov
jnp
sti
mov
push
arpl
lock
sar
pushf
xor
pop
jne
sar
xchg
mov
xchg
adc
adc
pusha
aad
fstl
xor
jnp
lods
dec
aaa
aam
pop
add
push
shlb
xor
mov
gs
sahf
daa
dec
cmp
mov
push
xchg
xor
dec
mov
shl
insl
call
sbb
aaa
jmp
lret
repnz
dec
cmp
icebp
insl
jge
cmp
jmp
jp
mov
jne
add
repz
pop
cs
mov
mov
or
cmpsl
cltd
xor
aas
leave
test
aam
pop
popa
sar
loop
inc
daa
sub
lock
sub
ja
push
repz
jne
xchg
cs
icebp
mov
or
xor
cmp
jmp
in
enter
and
and
lahf
outsl
cmpsl
xor
add
cmpsl
xchg
adc
sub
insl
add
cmp
xorb
movsl
mov
fld
daa
sub
sub
or
or
je
jns
test
addr16
jle
test
pusha
xor
xchg
push
int
mov
outsl
pop
jecxz
dec
out
call
int3
sbbl
jae
icebp
xchg
sbb
jns
outsl
stc
add
inc
lcall
inc
pop
ret
mov
push
sub
fsubr
jmp
pop
jno
mov
or
sahf
ljmp
push
ljmp
in
or
push
xchg
jb
push
add
andps
pop
push
jg
or
or
icebp
mov
addb
sub
fdivs
xor
clc
push
icebp
pop
mov
pop
jnp
push
decb
add
cmc
jmp
and
add
dec
mov
xor
out
or
pop
cld
cwtl
jecxz
icebp
and
clc
je
and
lahf
iret
ret
clc
mov
lds
imul
nop
add
sub
mov
pop
adc
leave
mov
xchg
arpl
testl
aaa
pusha
push
add
pop
jae
out
cmpsb
and
sub
fidivl
push
or
repnz
cli
icebp
fidivrl
leave
adc
adc
mov
mov
fs
test
cltd
ret
movsl
jns
pop
xchg
je
aaa
orl
pusha
addr16
fists
sbb
mov
arpl
add
insb
lea
push
mov
popa
loopne
fwait
aad
jmp
shrl
cmpsl
pop
ja
insl
and
xor
mov
nop
inc
xor
inc
shrl
add
dec
sahf
mov
leave
sbb
test
add
push
adc
filds
jmp
jecxz
inc
insl
xchg
push
sub
popl
ret
mov
test
xchg
cmp
sub
mov
adc
int
scas
daa
movsl
jmp
add
mov
fs
leave
mov
sub
push
mov
adc
cmp
outsb
aaa
nop
scas
scas
stos
lds
xlat
cmp
push
out
insb
and
jle
adc
aad
jmp
fiadds
sub
jecxz
fldt
cmp
xlat
add
int3
jle
aaa
sbb
push
js
add
dec
dec
ret
mov
les
insb
xchg
gs
into
shr
js
jmp
mov
stos
inc
or
addb
mov
mov
mov
lret
leave
or
xor
sub
and
sbb
fwait
lods
std
push
pop
cmpsb
jge
pop
gs
sub
and
test
loope
mov
jecxz
xchg
test
shrb
inc
adc
in
test
shrl
mov
es
and
mov
es
insb
dec
xchg
jbe
and
fists
int3
mov
pusha
int
mov
and
in
out
call
xor
aas
xchg
adc
mov
add
lods
outsl
add
subb
sbb
mov
sub
orb
add
or
sub
cmc
decb
pop
xchg
sti
out
and
push
push
pop
in
sbb
loopne
pop
insl
iret
orl
scas
adc
add
inc
xchg
clc
or
dec
cwtl
ret
cmp
out
xchg
arpl
push
data16
popa
add
out
add
sbb
xchg
cmp
dec
test
jae
dec
mov
xor
cmovp
pop
cli
std
jo
jbe
pop
dec
xor
sbb
test
adc
gs
lret
cmpsb
mov
lret
pop
loope
imul
adc
repz
sub
mov
movsb
shr
bound
in
ss
fbstp
aaa
jnp
cltd
pop
sti
adc
jne
sub
add
xlat
jmp
rorl
in
push
mov
mov
sub
popf
push
scas
jae
or
push
xchg
mov
mov
mov
aas
mov
in
xor
xor
into
dec
xchg
dec
sub
xchg
lret
mov
jl
inc
inc
out
sub
sbb
pop
dec
mov
sub
inc
pop
mov
cwtl
sti
sub
mov
xor
add
outsb
cmp
fwait
xchg
insb
shlb
repnz
pop
mov
jo
mov
aad
idiv
adc
fcomps
movsb
stc
sahf
sahf
or
sbb
pop
fcomi
mov
xchg
mov
sbbl
xor
xor
movsb
inc
sub
cmc
jns
arpl
in
sbb
fidivs
push
xchg
mov
pop
movsl
add
aaa
fs
fisttps
sti
out
cmc
dec
ljmp
test
aam
sar
cmp
clc
and
daa
cmp
mov
mov
ficoml
hlt
shlb
push
cmpsb
cli
mov
push
lret
jp
cmp
mov
adc
test
cmp
out
rcll
stos
jecxz
loop
pop
mov
arpl
or
call
popa
xchg
xchg
aam
hlt
das
stos
xor
repz
imul
sbb
mov
scas
push
imul
addb
rclb
stos
aaa
dec
sbb
fdivl
add
shl
jae
xchg
dec
xchg
lret
test
push
push
dec
and
xor
mov
sti
cmp
ja
cli
sbb
dec
fists
popf
movsb
fsin
jle
in
aas
lods
in
jae
mov
and
das
push
je
stos
jl
test
inc
es
divb
mov
push
faddl
sti
sbb
cmp
sbb
or
in
fs
mov
dec
outsl
and
pop
outsl
jge
pop
popf
pop
pop
inc
lret
pusha
aas
push
sbb
leave
sbb
decb
loopne
mov
sbbb
mov
xor
sbb
inc
cmp
shll
rclb
cmp
dec
inc
scas
mov
xchg
jg
enter
sti
mov
mov
orb
push
cmp
mov
cltd
fimull
out
fimull
cmp
fnstcw
mov
out
cmc
mov
mov
and
jbe
cmpsb
lea
mov
stc
outsb
mov
jp
mov
in
adc
xor
por
enter
pop
mulb
outsb
mov
or
cs
xlat
inc
xchg
stos
aaa
pop
cmc
shr
inc
pusha
jge
ss
lods
fsts
dec
xchg
int
jl
cmpsl
and
xchg
std
or
hlt
mov
fdivs
cs
sub
cmp
inc
and
mov
mov
inc
stc
in
pop
leave
cmpsb
rcr
js
mov
jge
xchg
mov
and
in
movsl
jle
enter
jecxz
in
cli
test
or
jg
int
sbbl
lret
insb
rcll
dec
jnp
push
push
fildll
mov
push
and
and
fnstsw
cs
sbb
movsl
fcomp
and
xchg
mov
pop
mov
and
sub
jnp
aas
pop
subb
sti
pop
daa
jnp
lock
ret
stc
ljmp
and
xor
add
sbb
cmp
cltd
adc
mov
mov
mov
daa
adc
cwtl
ja
std
and
mov
mov
fisubrs
dec
push
es
pushf
hlt
mov
gs
adc
push
rclb
sarb
mov
lcall
cmc
stc
stos
aas
pop
sub
loop
jne
dec
call
enter
mov
jg
out
or
cmp
mov
outsb
lcall
cmc
cmp
int3
loopne
push
pop
jle
sbb
adc
xor
mov
jo
dec
outsl
xor
pop
dec
xchg
jno
xchg
jae
mov
xor
inc
adc
fnstcw
and
jmp
gs
les
inc
rorl
sti
or
push
in
xchg
mov
outsb
inc
aas
ja
test
clc
or
ljmp
xchg
push
pop
loopne
mov
cmp
roll
sbb
shr
jg
sbb
and
mov
adcl
lcall
and
push
loop
pusha
loope
out
mov
stos
jg
int3
push
in
sub
and
inc
jg
add
mov
aam
js
and
jg
data16
fsubrl
mov
pop
loope
fbstp
jnp
dec
or
addl
or
int3
pusha
fists
fmull
sahf
in
cwtl
sub
mov
push
insl
pusha
and
outsb
in
mov
gs
jmp
subl
and
nop
sbb
mov
jno
xchg
push
push
inc
lcall
aas
hlt
mov
xchg
mov
fdivl
adc
in
sub
das
push
fs
jmp
sub
cmp
repz
sub
cmp
mov
xor
lods
leave
test
int
sub
mov
or
outsb
add
mov
stc
cwtl
and
testl
decb
or
pop
test
rcll
mov
ds
incl
loope
cmp
push
lret
jb
gs
ficomps
cmpsb
pop
inc
jne
xor
xlat
xchg
dec
jl
flds
mov
sub
ds
xchg
xor
cmp
adc
jo
aam
jmp
test
fldl
std
js
pop
jns
pop
inc
add
sahf
jo
push
pop
add
pop
stos
xchg
push
dec
push
pop
lods
stc
sahf
mov
rcrl
xor
push
mov
push
mov
mov
flds
and
pop
es
das
or
cltd
or
push
dec
push
das
arpl
push
xchg
mov
xchg
cmp
add
inc
aas
dec
push
mov
fucomp
rorl
xchg
add
pop
jns
test
stos
xlat
mov
ljmp
lods
call
enter
xor
xchg
jo
rolb
adc
and
jo
daa
mov
or
jl
jbe
stos
sub
lods
cmp
and
std
jmp
lret
pop
pop
xchg
loope
fisubs
push
cmpsl
js
adc
sbb
out
repz
inc
and
sarb
nop
jg
test
lcall
das
fidivrl
mov
xchg
fildl
jbe
jge
mov
or
and
sti
decb
xchg
rcl
push
jl
lock
xorl
outsl
xchg
ja
pop
mov
das
test
test
aaa
in
loopne
add
push
pop
dec
clc
jl
fistpl
in
test
bound
sbb
clc
sub
sbb
or
daa
shrl
lahf
test
mov
add
pop
ljmp
or
lret
add
and
pop
sub
inc
les
mov
push
rcrb
adc
scas
and
js
adc
xlat
cmp
sahf
cmp
insb
mov
dec
mov
dec
add
and
hlt
cwtl
incl
fists
pop
mov
scas
xor
ja,pn
cmp
pop
mov
or
dec
adc
stc
push
in
sbb
psrlw
and
js
add
inc
sarb
dec
mov
add
lods
xor
jl
out
or
adc
push
mov
jl
mov
xchg
sbb
push
sbb
lods
in
push
je
mov
dec
mov
xor
fildl
loop
leave
or
daa
xor
hlt
mov
int3
sub
xchg
mov
les
icebp
lret
fisubs
cmp
aad
hlt
xchg
pop
aaa
fidivrs
pop
divb
dec
jb
push
lods
mov
inc
mov
xchg
int3
push
and
push
daa
das
mov
lock
pop
sti
lock
pusha
mov
xchg
cmp
in
sub
jl
sbb
and
xor
xchg
dec
clc
repz
lret
jae
mov
cltd
enter
leave
jnp
cmpsl
ret
mov
and
loopne
jne
sub
in
push
inc
rcr
incl
fdivs
scas
jns
inc
sbb
xlat
dec
mov
lds
add
add
lret
test
jp
push
mov
push
mov
repz
mov
adcb
cmp
fstl
push
and
jg
sub
cli
xchg
xor
and
imul
xor
xchg
mov
mov
xlat
push
mov
repz
popa
inc
xchg
pop
xchg
cwtl
out
xor
lret
push
jns
cmpsb
pop
mov
xchg
mov
sub
inc
in
xchg
or
imul
loopne
lea
mov
and
xchg
lret
mov
mov
lea
arpl
sub
stc
mov
and
or
pop
jp
mov
add
aad
xchg
mov
push
xor
clc
test
loope
mov
call
fs
imul
mov
inc
jo
xchg
push
xor
idivl
pop
mov
imul
dec
or
sub
sub
movsl
xchg
sbbb
fwait
pop
in
dec
sbb
inc
jl
cmp
into
mov
jo
push
push
sti
hlt
ret
fcmovb
inc
mov
pop
add
jb
xor
imul
fmull
orl
pop
test
lds
insl
cmc
arpl
insw
subl
xchg
cltd
jecxz
das
fiadds
movsb
xor
insb
or
in
leave
xor
xlat
insb
jg
mov
dec
pop
jge
cli
mov
push
ficompl
mov
xchg
sub
mov
mov
outsl
js
lret
adc
lds
inc
gs
call
xchg
repz
mov
mov
outsl
jmp
xchg
in
leave
mov
ljmp
mov
push
int
out
mov
out
divl
push
mov
xor
lahf
and
out
inc
jbe
mov
lock
rcrb
xchg
and
icebp
arpl
sub
fcom
sahf
jae
adc
call
or
cmp
mov
mov
rol
test
sub
rorb
fs
ret
add
jg
rorb
cmp
sub
jecxz
push
inc
repnz
mov
lea
xchg
sahf
adc
inc
imul
out
out
mov
xor
movsl
mov
in
fimull
inc
push
sbb
adc
inc
xchg
jl
popf
cwtl
push
inc
insl
addr16
mov
sbb
mov
lret
aaa
jnp
movsl
mov
jb
xchg
mov
leave
mov
jg
or
rclb
fiaddl
sub
jmp
popa
or
or
pop
outsl
sbb
mul
lcall
rol
pop
mov
aas
sbb
pushw
cmp
pop
shll
in
movsl
scas
add
or
dec
push
in
in
cmp
mov
movsl
out
cmpsl
dec
hlt
mov
mov
cmp
mov
scas
insl
push
mov
outsb
pop
xor
ret
iret
hlt
cmc
jecxz
xor
rolb
test
dec
or
out
inc
pusha
push
repz
outsl
frstor
mov
iret
pop
add
ss
mov
test
xchg
and
cli
pusha
jnp
hlt
push
ret
sbb
ja
dec
cmp
xchg
jg
mov
test
lds
rcrl
push
insb
ja
or
into
adc
inc
mov
aad
jmp
out
xchg
setb
xchg
rol
push
pcmpeqb
mov
sbb
std
mov
pop
jmp
leave
cmpsb
jae
xlat
xor
mov
push
add
xchg
in
dec
sbb
dec
in
sub
pop
sub
fistps
hlt
and
test
pop
das
add
sbb
dec
xchg
pop
and
and
repnz
sahf
push
push
inc
fistpll
scas
mov
roll
mov
sbb
and
fadds
and
shlb
adc
xchg
ret
and
adc
movl
pop
xor
aas
cmp
lret
lahf
adc
ljmp
push
jne
out
jl
addr16
sbb
mov
xchg
pushf
or
jbe
push
pop
xor
leave
rorb
push
std
mov
add
outsl
in
sub
mov
xlat
jg
mov
cltd
inc
jnp
test
sbb
push
pop
sub
imul
or
xchg
stc
jg
mov
or
inc
popf
gs
jmp
test
leave
daa
mov
jmp
idivb
mov
jb
nop
adc
sub
sarb
sbb
imul
dec
icebp
outsb
jp
clc
dec
sub
pop
pop
xor
out
or
std
stos
jmp
or
pop
mov
cmp
fidivrl
cmc
push
adc
jbe
fwait
cmpsl
ja
mov
sub
daa
xchg
jg
or
hlt
mov
sbb
pop
fadds
push
adc
mov
inc
ss
mov
mov
or
dec
mov
loopne
es
cmp
xor
das
bound
pop
xor
inc
push
sub
xor
add
adc
mov
mov
inc
jns
push
hlt
add
xor
add
cmp
test
es
mov
add
cltd
filds
bound
adc
arpl
cwtl
mov
xchg
xchg
and
jle
into
pop
imul
cmp
movsl
mov
lret
inc
mov
pop
lahf
in
xchg
cmp
pop
test
inc
data16
ja
into
adc
cmpsl
xchg
mov
and
push
rorb
int
xchg
ss
loop
div
loopne
rol
xchg
cld
add
mov
xor
sub
mov
inc
insl
mov
push
js
or
fucomp
xchg
jp
jg
xor
dec
das
rolb
mov
mov
arpl
mov
mov
and
jne
cmpsb
out
pusha
xor
imul
pop
int
pop
stos
rorl
fldl
and
js
in
test
in
leave
int3
insb
rclb
sbbb
in
xchg
jb
loop
scas
ja
lcall
sbb
int
out
test
adc
and
dec
into
out
xchg
dec
js
sbb
pop
push
mov
lahf
pavgb
insb
out
jp
stos
fsubrl
mov
push
sbb
add
je
jge
pop
jae
mov
shrb
aaa
or
pop
out
cwtl
sub
je
stos
jge
sub
fs
add
xchg
inc
sarb
mov
scas
sub
mov
pop
cmp
pop
xor
adc
das
addl
adc
fbstp
nop
mov
mov
fwait
clc
lahf
inc
xor
jl
ficoms
pop
jbe
push
sahf
sti
jl
cli
pop
popw
pop
mov
sub
push
fimull
leave
xchg
xchg
adc
jo
push
xchg
test
dec
sbb
pop
test
test
rorb
xor
xchg
dec
pusha
div
lahf
add
loope
xchg
inc
xchg
add
push
bound
adc
lea
imul
hlt
out
scas
aas
cmpsb
cli
ret
add
mov
push
sahf
xor
lods
pushf
mov
loope
cmp
lret
aaa
in
popa
shrb
and
jnp
mov
outsb
pop
ret
fstps
mov
mov
inc
leave
nop
jns
adc
push
push
cmp
in
xchg
andb
dec
sbb
or
sbb
out
push
inc
std
xor
leave
dec
pop
cmc
cmp
jmp
fcomps
cltd
mov
adc
mov
mov
cld
xlat
xor
cmp
mov
sti
add
pusha
into
outsl
ja
push
addl
sbb
mov
jmp
cwtl
sub
sub
xchg
add
mov
loope
ss
jne
movsl
xor
hlt
cmc
sbb
dec
sbb
xchg
cmpsb
jne
fbld
out
bound
adc
pop
lahf
inc
adc
push
leave
lahf
lods
and
es
sub
xchg
dec
cmc
test
test
sbb
dec
imul
push
mov
imul
jns
rorb
mov
data16
mov
xor
lcall
xchg
jle
sub
jno
repnz
inc
icebp
cmpsb
nop
mov
inc
jmp
scas
dec
test
mov
mov
in
jno
cmpsl
mov
jg
xor
sti
add
inc
lahf
inc
in
adc
into
jo
popf
in
and
jle
icebp
rcrl
cld
sub
out
fwait
sub
aam
or
jecxz
clc
movsl
xor
data16
xchg
mov
xor
cmp
sub
add
push
cmp
enter
test
sub
jo
push
pop
xchg
mov
xor
lock
fimull
roll
and
dec
sahf
xor
in
inc
mov
test
pushf
push
in
js
inc
dec
mov
jo
lret
scas
mov
std
loopne
xchg
stos
int
sub
aas
and
aaa
mov
outsl
pop
mov
aam
imul
bsr
pop
push
mov
mov
ficomps
fistpl
pop
dec
testb
test
adc
sbb
int
fldt
lds
inc
add
fiaddl
sub
sub
sub
decb
add
stos
pop
dec
out
aam
push
inc
push
or
adc
lods
dec
lret
mov
lret
out
fs
cs
jne
nop
lock
gs
sub
xchg
pop
sbb
mov
push
outsb
mov
mov
je
jne
jae
movsl
mull
mov
sbb
mov
push
ss
mulb
sbb
pop
and
jno
pusha
xor
mov
xchg
mov
xchg
and
insl
loop
push
jecxz
xchg
aas
lock
and
fstl
cli
sbb
inc
aas
adc
inc
add
ds
or
dec
pop
stos
mul
dec
push
jmp
dec
mov
pop
jg
into
outsl
sub
or
sbb
lods
mov
mov
loopne
jecxz
or
iret
movsl
inc
and
push
mov
mov
mov
cmp
rorl
jae
xchg
fwait
rcrb
mov
mov
xor
cwtl
mov
jnp
scas
mov
addr16
inc
cmp
dec
add
sbb
pusha
mov
ret
ja
jbe
mov
test
std
fs
loop
jge
xchg
adc
jnp
call
shlb
lahf
stc
lret
adc
pop
inc
inc
insl
pop
sti
lds
mov
push
fs
pop
dec
xor
daa
ror
mov
jno
movsl
inc
jnp
idiv
shlb
idiv
mov
jg
iret
sbb
fimull
stc
je
jp
mov
xchg
sbb
fdivp
push
test
fsub
sti
sar
pop
stos
push
cmpsl
cmp
std
adcl
ss
mov
neg
inc
cmp
inc
push
out
in
sahf
push
aad
out
cmp
push
jnp
xor
movsl
popf
movsb
setl
test
gs
or
mov
xor
jecxz
jne
push
repz
iret
outsl
popf
aad
jle
adc
xor
sbb
push
outsb
test
add
or
clc
das
mov
push
jb
aad
adc
add
mov
fidivs
pop
cmp
into
push
movsb
push
das
cld
sbb
xor
sti
mov
xchg
mov
loopne
jae
int
sti
xchg
adc
ret
imul
mov
cltd
js
insb
negb
aas
int
mov
loopne
mov
mov
sub
lods
xchg
or
fstpl
stos
or
adc
cli
mov
mov
pop
jge
and
mov
addr16
adc
enter
push
inc
push
cmp
jp
push
cwtl
insl
mov
mov
lock
adc
cmp
push
push
xchg
popf
pop
dec
gs
roll
mov
inc
xchg
shlb
inc
cmpsb
cmp
fwait
je
jge
rorb
fildl
fcoms
scas
push
stc
push
test
xchg
pushf
inc
jns
out
ret
lods
xor
rorb
pop
insl
push
mov
gs
and
lcall
adc
aam
add
imul
je
jmp
cmp
iret
push
loopne
out
lea
jb
aas
ja
insl
call
pop
lahf
into
pusha
out
insl
inc
ss
imul
adc
pop
jnp,pt
add
xor
sbb
dec
stos
test
inc
and
mov
xchg
popf
sbb
loopne
rclb
mov
shll
adc
lea
aaa
sbb
and
xor
mov
cmp
ror
in
pushf
push
fcoml
mov
add
xchg
test
and
pushl
inc
cmpsb
cwtl
rcll
fidivrl
dec
adc
cmp
jp
in
xchg
hlt
cmp
test
push
inc
or
mov
xchg
pop
outsl
add
sahf
setb
icebp
incb
adc
test
jl
dec
pop
hlt
sub
out
sbb
popf
inc
push
jnp
mov
into
mov
push
bound
mov
loop
cld
scas
xor
cwtl
jnp
pop
jbe
sbb
mov
inc
ss
cmp
data16
loop
fcoml
pop
mov
cld
aaa
ja
add
xor
or
pop
loop
in
xor
test
dec
cmp
xlat
mov
push
dec
icebp
jge
adc
imul
insl
sub
pop
mulps
aad
push
xchg
inc
jns
shlb
lcall
mov
push
pop
sub
or
and
in
cwtl
push
pop
xchg
imul
adc
movsb
adc
stos
mov
mov
jl
das
and
add
lods
sub
pop
iret
mov
movsl
sub
loopne
xor
fwait
arpl
push
add
sub
dec
in
push
dec
pop
mov
dec
stos
mov
test
enter
jmp
mov
or
lret
pop
aad
mov
pushf
jb
mov
insb
loope,pn
xor
shl
aam
ss
add
cli
pop
test
cmp
adc
mov
bound
ret
xor
push
daa
lock
push
test
scas
cld
fcomip
enter
lret
rcr
in
insl
aaa
ss
sub
cmp
mov
imull
stos
mov
clc
mov
test
ret
mov
ljmp
xchg
dec
jl
ljmp
pop
mov
and
inc
sub
and
cmp
lds
sbb
aam
push
sub
cmp
test
movsb
into
sub
mov
xchg
cmp
mov
cld
ja
aas
mov
pop
std
mov
dec
movsl
jae
adc
inc
cltd
es
inc
xchg
inc
adc
test
scas
pusha
or
jge
lods
mov
stc
mov
lods
ja
mov
cs
push
inc
cmp
inc
imul
stos
push
push
jl
xor
sahf
or
cmp
push
or
aaa
mov
push
dec
out
insb
cld
outsb
icebp
enter
inc
sahf
xchg
cmp
fisttps
icebp
jmp
enter
repz
test
fst
lods
mull
addr16
sahf
ret
iret
hlt
pusha
sbb
adc
push
xchg
arpl
jae
std
mov
mov
iret
mov
lds
cmp
pop
test
das
add
jo
jnp
xchg
fcompl
lret
leave
int3
or
leave
xchg
clc
dec
scas
sarl
dec
pop
inc
xor
into
push
sbb
ljmp
mov
gs
jmp
jl
sbb
ljmp
push
sub
adc
xchg
sti
cmpsb
push
ja
and
xchg
sub
icebp
push
push
mov
daa
lahf
add
ss
add
nop
cmpsb
arpl
lcall
mov
and
sbb
loope
mov
sub
xchg
test
and
bound
and
lea
pop
mov
mov
mov
mov
add
cwtl
cmp
push
adc
fldt
add
inc
pmaddwd
imul
aaa
xchg
cmc
sbb
outsl
es
fisubl
aam
outsl
stos
lcall
push
mov
daa
int
push
and
pop
jp
inc
mov
adc
lods
add
mov
dec
mov
lock
sbb
sub
out
jne
lahf
sbb
test
sbb
push
mov
jbe
pop
rcll
cmp
push
xor
and
pop
cmp
loopne
ret
dec
enter
popa
fsubl
insl
cmp
loope
push
xchg
bound
js
jb
mov
mov
xchg
dec
sbb
mov
lret
mov
xchg
ljmp
dec
bound
cwtl
out
call
mov
push
sbb
xor
cmp
jns
out
cmp
xchg
pushf
cmpsb
mov
adc
cmp
dec
nop
mov
clc
mov
leave
rorl
sbb
sbb
jge
lock
dec
jp
stc
pop
xor
or
push
cmp
mov
add
jge
add
dec
das
add
lods
xchg
or
xchg
stos
shll
jb
cmp
inc
test
pusha
dec
out
pushf
repnz
mov
fldenv
xor
das
les
call
ss
insl
add
imul
mov
out
jp
push
mov
popf
cmp
dec
rcrb
mov
sub
and
inc
mov
gs
jge
xchg
clc
shr
nop
rcl
xor
push
out
push
imul
int3
enter
jno
xchg
add
dec
scas
adc
dec
incl
popa
pusha
xor
rol
sti
mov
pop
sbb
rclb
push
int
leave
xor
mov
mov
lahf
insl
mov
xchg
pop
dec
push
xor
xor
push
js
mov
inc
push
sbb
push
adc
pop
inc
sub
push
fwait
jns
jg
call
and
pop
js
sub
add
pop
incb
inc
dec
repnz
inc
pop
inc
jge
or
adc
cmp
ds
dec
xchg
xchg
xchg
jo
adc
pop
loop
push
daa
cmpsl
jno
or
push
jns
xchg
dec
mov
or
in
mov
push
mov
outsl
out
mov
lds
cld
outsl
ret
out
pop
shrb
push
xchg
repnz
push
push
out
les
and
push
xlat
repnz
cmp
lods
dec
sub
fstl
push
ljmp
jno
int3
test
push
inc
cmp
shll
dec
xor
inc
lods
je
add
and
ds
call
jnp
jp
loop
push
adc
call
cmp
test
fldt
xor
add
mov
adc
add
pop
add
rcll
addr16
jle
in
es
sbb
ja
push
adc
xorl
pop
scas
push
pusha
jnp
mov
lea
sub
mov
out
or
xor
jmp
les
and
cmp
inc
mov
push
inc
and
adc
adc
add
adc
lea
cltd
sbb
and
in
push
xor
adc
mov
pop
std
enter
in
ss
xorb
add
imul
mov
mov
mov
xchg
dec
adc
es
mov
ret
mov
test
xchg
sbb
imul
inc
mov
fsubrl
out
or
cwtl
xchg
cmp
sti
call
ficompl
mov
add
cltd
jbe
mov
sti
clc
std
filds
in
imul
inc
movsb
je
aas
rcrb
das
ds
add
gs
dec
inc
out
aam
sub
pand
sbb
cld
lods
cmp
and
xor
jg
sub
sbb
jae
adc
mov
in
nop
out
ret
push
inc
divl
lahf
popf
in
pop
mov
jne
jge
or
jg
pop
out
adc
xor
and
xchg
or
fldenv
adc
mov
pop
jle
cmp
cmp
inc
and
sbb
push
in
ljmp
xchg
lcall
push
fstpl
icebp
push
xor
mov
and
testb
stc
test
mov
mov
mov
scas
cs
xor
sub
imul
enter
mov
int3
pop
xchg
mov
in
inc
mov
or
sbb
lcall
push
pop
imul
pop
loop
subl
sahf
fs
add
cmpsl
and
inc
fcmovnu
push
jnp
push
xchg
jb
pushf
xchg
dec
sub
push
rcrb
nop
mov
xor
jno
sub
push
mov
mov
xlat
pop
lds
sbb
mov
fimull
outsl
mov
sub
mov
or
and
popa
lods
lds
push
test
inc
loop
xchg
jge
cmp
aad
test
sahf
pop
dec
push
mov
inc
xor
gs
pop
jno
push
push
xchg
pop
rcr
iret
cmpsb
test
sbb
popf
xchg
insb
hlt
ret
call
cmp
std
sarl
jmp
jno
mov
loope
mov
in
mov
pop
lea
imul
mov
inc
aas
mov
enter
inc
mov
sarb
mov
sbb
mov
mov
addb
aaa
dec
je,pt
sbb
ret
movsl
lret
pop
test
cmp
xchg
pop
and
in
xchg
and
popa
dec
aad
sbb
aam
in
lock
pop
test
pushf
fistpll
mov
stos
mov
pop
sub
fwait
cld
push
jecxz
dec
sub
dec
gs
jge
ror
mov
in
in
mov
push
xor
movsl
lahf
or
inc
rcll
adc
inc
cmp
mov
fisubrl
adc
xchg
int3
dec
sub
mov
mov
testl
outsl
xor
push
cmp
ss
xor
dec
in
outsb
or
pop
lds
loope
and
push
fsub
sub
hlt
fwait
mov
jge
daa
repz
jmp
jb
cmpsl
xor
xor
mov
pop
sbb
outsl
xchg
jp
add
ret
popf
ud2
push
sub
dec
mov
das
int3
movsb
jbe
jle,pt
sbbl
test
push
cs
sti
out
mov
dec
jo
pop
xor
aam
mov
pop
mov
dec
inc
mov
daa
idivb
mov
cmp
shr
lods
push
pop
jnp
sub
jge
push
shlb
cvtpi2ps
ja
mov
jp
xchg
and
pusha
jnp
adc
or
dec
fwait
xchg
jo
and
jmp
lods
shr
xchg
addr16
sbb
mov
rorb
pushf
into
ret
lock
mov
mov
imul
punpcklwd
mov
dec
negl
jo
ror
insl
es
jmp
cs
repz
sbbl
ss
adc
push
into
or
xor
jbe
adc
inc
insl
cmp
in
xchg
movsl
xchg
popf
out
movsl
sub
mov
addb
jl,pt
ds
jnp
fdivrp
lret
stos
js
mov
jo
xchg
jns
aam
sbb
ja
loopne
sti
enter
push
stos
xlat
dec
sbb
mov
ret
xor
arpl
xchg
bound
sub
repz
sub
scas
xor
pop
cmpsl
test
mov
daa
jns
jo
pusha
xchg
adc
mov
dec
xor
push
sub
repnz
mov
dec
jnp
and
stos
jno,pt
jno
jno
mov
in
or
jne
adc
cld
xor
or
fbstp
push
scas
es
hlt
enter
outsb
popf
rclb
and
inc
jo
add
adc
mov
dec
insb
rcll
lret
mov
cmp
push
notb
adc
mov
ds
dec
loope
mov
js
jne
repnz
es
adc
dec
rcrb
adc
cmp
pushf
mov
lar
aas
in
pop
in
sub
adc
jb
mov
mov
stc
in
lods
arpl
std
push
clc
jae
ja
mov
inc
push
add
sbb
add
int3
test
fcoms
and
adc
xchg
movl
push
add
jmp
rcl
adc
cmp
adc
movsb
sbb
pop
sahf
outsl
mov
and
sbb
sahf
cwtl
or
add
repz
ret
hlt
int
sub
mov
add
cmp
pusha
mov
pop
and
lea
adc
scas
sub
sbb
insl
loope
outsl
lea
out
sub
call
xchg
repnz
pop
pop
mov
test
mov
test
lret
mov
clc
movsl
add
mov
test
jmp
lahf
fstps
jle
cwtl
jmp
jbe
les
dec
pushf
mov
inc
add
xchg
lea
xor
mov
sarl
xchg
lods
cmp
mov
and
ja
ds
ljmp
stos
popf
sahf
sbb
push
xchg
or
enter
sbb
aas
aam
or
movsl
mov
popf
jmp
mov
daa
add
sbb
fcompl
push
inc
mov
xor
mov
mov
repnz
mov
cltd
or
aaa
mov
roll
je
jl
add
fimuls
test
cmp
sti
jbe
lea
adc
and
rorb
jne
or
jg
mov
ret
push
sbb
pop
or
or
ret
sbb
mov
sahf
gs
addr16
push
into
mov
add
pop
pop
cmc
test
mov
add
pop
xchg
int3
loopne
cmpb
jg
test
cmp
jae
les
xchg
sarb
sbbb
jge
pusha
test
in
das
add
mov
add
mov
cld
mov
subl
jmp
xchg
xor
cmp
daa
movsl
push
cmc
fs
ja
shl
pop
sarl
stc
mov
lods
rorb
push
cmp
mov
loop
or
cmp
je
rolw
push
mov
dec
cmpsb
jo
xor
push
mov
mov
inc
shlb
push
jbe
inc
cmpsb
les
adc
imulb
push
imul
adcb
dec
insl
pop
int3
xor
mov
popa
pop
jno
push
sbb
repnz
test
and
maskmovq
imull
inc
inc
es
adc
lods
lahf
mov
mov
aam
cmpsl
inc
cwtl
out
or
incb
ficompl
and
jecxz
and
movsl
pop
sub
push
inc
stos
pusha
xchg
aad
xor
dec
jno
push
dec
cmpsl
sub
inc
sbbl
lds
xor
and
xchg
roll
or
cli
imul
sbbb
sbb
jp
push
inc
adc
scas
and
fisubrs
mov
pusha
loope
inc
or
into
hlt
fsubrl
mov
mov
pop
mov
fldl
xchg
jmp
pop
daa
lret
lret
mov
sarb
add
cmp
out
sbb
fwait
xchg
mov
es
insl
mov
and
xchg
scas
push
and
xchg
lahf
cli
jge
push
in
lahf
dec
sub
add
and
dec
jg
inc
jbe
add
in
stos
or
cwtl
mov
inc
dec
mov
xor
clc
sbb
adc
fwait
or
push
mov
add
shlb
push
lea
inc
add
jno
xchg
push
dec
xchg
movsb
dec
in
fcoms
sbb
and
daa
mov
arpl
push
and
fucomp
sub
adc
in
xor
push
repz
lds
inc
xor
cmp
aas
lods
js
mov
cmp
cmp
jno
jae
pop
subb
bound
fnstcw
es
xchg
mov
pop
test
xor
int3
js
out
cmp
neg
push
ljmp
jne
jl
mov
scas
cltd
lods
pop
nop
adcb
xchg
ljmp
xor
ja
sub
push
xchg
xor
pusha
mul
stos
jmp
addl
inc
lock
jecxz
in
lcall
movsb
push
jmp
or
mov
dec
mov
and
test
loopne
jge
pop
add
orl
mov
sub
rorb
cmp
or
and
hlt
ret
in
into
and
cwtl
imul
out
mov
les
jno
aam
lret
das
and
push
icebp
inc
sub
scas
xor
and
insl
jo
cld
aaa
test
sahf
fxch
nop
inc
mov
mov
xor
jo
xor
ljmp
push
clc
fisttpl
mov
stos
fsubrs
dec
push
jne
movsl
dec
fistps
mov
dec
lahf
dec
pop
fildl
inc
ss
jecxz
mov
pop
iret
push
adc
test
sub
cmp
lahf
fsubrs
mov
xor
ror
sti
add
fwait
insb
bound
xor
mov
cmpsb
jo
cltd
xor
sbb
jl
lahf
int3
cmp
rcll
xchg
cmpsl
pop
mov
rol
inc
sarl
jns
js
lds
mov
in
lcall
add
push
ror
mov
adc
add
call
jmp
or
fucomp
daa
push
xchg
or
dec
and
fisubl
xor
xchg
fwait
jae
jne
movsl
lret
popf
jae
xchg
rorb
push
fldt
inc
dec
sarl
adcb
jne
rorl
cmp
int
daa
clc
mov
jnp
pop
dec
icebp
jb
in
movsb
outsb
pop
dec
sbb
ret
int3
aam
and
repnz
and
adc
xchg
loopne
pop
and
sahf
test
xor
aaa
cmc
adc
cwtl
fnstsw
dec
dec
dec
push
xor
and
shrb
add
pop
fs
mov
mov
les
sbb
fstpt
scas
out
fcoml
pop
jne
sub
insb
es
lret
pop
jnp
loope
cs
jbe
aaa
insl
and
inc
or
xor
cmpsl
dec
pop
mov
movsl
xchg
adc
aaa
loope
jae
ds
stc
cmpsb
mov
sub
xchg
mov
pop
data16
nop
sbb
mov
loop
sub
leave
fwait
or
std
push
dec
insl
fbstp
lea
add
addl
out
dec
bound
dec
outsl
xchg
push
xor
mov
push
movsb
shrl
inc
or
add
outsl
add
in
mov
in
ljmp
js
or
inc
gs
mov
xor
xor
and
or
and
push
jl
cli
hlt
sub
shrl
push
hlt
pop
cmpsb
leave
add
mov
shll
xor
jo
or
bound
mov
aad
pop
insl
popf
jle
es
inc
sub
inc
mov
inc
rcr
rcrl
sahf
dec
and
pop
lcall
aam
push
xor
mov
mov
dec
in
mov
push
jecxz
fisubrs
insb
sahf
mov
mov
cmpb
rclb
lods
or
jae
mov
jmp
rcll
cmp
pop
fidivrl
xchg
cmp
pop
mov
lret
call
adc
cmp
fcomi
fstl
xchg
adc
bound
stos
xor
ja
scas
ljmp
lods
lahf
cmp
cmp
push
test
out
fsubr
sbb
mov
xchg
push
and
in
subb
and
and
push
mov
and
cmc
movsb
fists
cmp
das
or
jp
les
fsubr
dec
mov
loope
leave
ret
mov
inc
insl
pop
bound
pop
inc
out
mov
dec
loop
dec
or
je
inc
pop
or
iret
shlb
ds
in
inc
cmp
add
cmp
sub
outsl
adc
pop
mov
xchg
enter
mov
inc
pop
dec
ja
xchg
pop
scas
jecxz
sahf
jo
inc
push
enter
outsb
dec
fistps
pop
in
fisubrl
hlt
xor
je
mov
pop
leave
sub
orb
jae
jns
pop
jge
daa
pushf
mov
cli
das
xor
scas
lock
and
sub
test
sub
mov
inc
jbe
mov
mov
repz
fsincos
xor
pop
push
test
lock
shl
xchg
sti
adc
and
push
jl
jg
xor
orb
dec
fisubrs
lahf
loope
test
ficomps
ljmp
mov
add
push
mov
adc
mov
flds
mov
or
stos
es
pop
movsl
sbb
je
mov
out
or
xlat
fwait
jae,pt
pop
aaa
xor
ss
in
push
and
or
rorb
jo
inc
xchg
push
cmp
jle
xor
adc
pop
fsubr
mov
notb
jmp
cmp
rcl
jbe
fnsave
inc
mov
add
frstor
stos
inc
roll
inc
mov
and
inc
push
iret
pop
mov
push
inc
inc
mov
call
cmp
push
jge
sahf
jnp
xchg
pop
cwtl
inc
gs
cmp
jns
xchg
fisubrl
pop
dec
mov
push
cmpsb
jl
dec
shl
movsb
bnd
aam
call
jo
aam
mov
mov
subb
mov
push
imul
fidivs
cltd
icebp
sti
les
inc
repnz
int3
xchg
sub
push
enter
rorb
push
es
mov
js
in
jne
mov
ss
aas
inc
in
push
and
mov
aas
inc
adc
xchg
and
aaa
or
inc
cmpsb
add
xchg
inc
add
and
mov
jg
daa
jmp
ret
push
pop
jl
cmp
mov
sbb
and
push
aaa
lock
mov
ret
rcrl
test
imul
test
jbe
lock
push
mov
pop
lret
jge
adcl
mov
mov
xchg
sbb
out
sub
jl
pop
icebp
ja
push
add
stos
sub
call
mov
mov
shr
jl
scas
fistps
mov
inc
sub
int3
jno
out
pusha
mov
xchg
adc
cmp
ljmp
jno
shll
adc
push
nop
lcall
sbb
enter
call
cmp
xchg
pushf
and
std
cmp
lret
jmp
ss
insl
xlat
push
pusha
mov
mov
xor
lcall
lods
push
push
pop
je
jl
mov
add
sub
jb
pop
pop
add
testb
fucom
sub
arpl
addr16
inc
mov
add
or
push
aas
mov
and
mov
cmc
fsts
xchg
insl
lret
les
fs
imul
and
int
fwait
dec
lods
add
gs
sub
or
xchg
adc
and
and
mov
popf
push
shrl
xchg
cmp
movsb
dec
ficompl
lret
dec
mov
imul
icebp
xchg
enter
sub
shlb
jbe
aam
in
sarl
hlt
outsb
jecxz
sar
or
push
cmp
xchg
sbb
sbb
pop
dec
inc
leave
mov
jecxz
fs
and
add
or
data16
inc
and
mov
ds
push
movsb
pop
or
push
pop
orb
mov
std
int3
icebp
pop
push
icebp
and
cmp
stc
inc
popa
add
xor
popa
mov
adc
int3
mov
sub
adc
adc
imul
std
clc
sbb
clc
push
xlat
ficomps
lcall
sub
bound
inc
sbbl
or
ret
xor
or
subb
ret
pop
jne
in
mov
out
repz
mov
lret
shrb
cmpsl
sbb
jl
add
add
sbb
bound
int
int
push
xchg
insb
lahf
jnp
jbe
jbe
out
inc
fmuls
out
dec
xor
call
xchg
mov
js
repz
mov
push
clc
xor
clc
loope
cld
stos
dec
ficoms
lret
mov
push
inc
int
adc
stc
or
sbb
std
repnz
shrl
hlt
jo
gs
inc
mov
sub
cwtl
dec
loopne
jne
mov
or
sahf
xchg
hlt
je
int
xor
clc
adcb
iret
xchg
xlat
pusha
jns
xchg
cmc
mov
mov
gs
movsl
inc
jne
xlat
push
mov
sbb
adc
repnz
pop
xchg
imul
mov
das
dec
loop
out
les
add
mov
cmp
and
out
movsl
sbb
jmp
xorb
outsl
aam
cmp
jno
add
sbb
jae
xchg
jbe
sbb
ja
sub
pop
repz
hlt
lahf
sub
stos
in
je
mov
imul
xor
pop
pop
fsubr
js
push
jge
pop
jbe
xor
sbb
ds
std
shl
rorl
in
shlb
shl
ret
push
sbb
icebp
imul
push
jnp
jmp
movsl
mov
xchg
jp
ljmp
pop
fnsave
adc
int
cmc
mov
xor
cmp
push
hlt
mov
movsb
mov
testl
hlt
jp
popf
arpl
sub
aad
fstpl
sahf
inc
dec
xor
addr16
and
mov
and
fistpl
mov
iret
jle
and
shlb
inc
nop
test
popf
mov
rcrl
lods
sahf
lds
pop
test
insb
sbb
lods
dec
xchg
pop
inc
pop
aam
or
push
push
sub
imul
push
xor
lds
inc
push
int
and
add
hlt
or
jb
cmp
test
xor
xor
fadd
mov
sbb
jecxz
mov
in
pop
aad
test
jo
dec
jne
xor
cmp
jb
jp
sbb
inc
mov
add
or
xchg
fucomp
xchg
imul
dec
add
lret
add
dec
fwait
jecxz
adc
lods
jb
bound
aam
cmp
sahf
aas
mov
inc
xor
ret
cmp
jg
lock
cmpl
pop
xchg
or
cmp
mov
leave
in
cmp
test
movsl
inc
insl
mov
or
mov
cmp
ljmp
mov
xchg
test
pusha
pop
loop
pop
ss
jns
xchg
scas
push
dec
add
lock
cmp
mov
adc
push
or
and
scas
ljmp
movsb
mov
aas
push
push
aaa
shrb
jb
cmp
and
push
inc
mov
adc
aaa
sbb
mov
sbb
mov
inc
pop
jl
ret
out
fsubl
fdivrl
rclb
or
lahf
xchg
jmp
pop
pop
jp
cs
sub
mov
addr16
cmp
fs
gs
cmc
mov
jns
dec
inc
adc
dec
sub
out
bswap
jnp
stos
mov
mov
or
lds
fisttpl
cli
test
not
popa
xchg
in
and
mov
inc
or
jle
pop
sbb
pop
dec
arpl
dec
pushf
lock
cmc
inc
loope
ja
les
scas
push
mov
fwait
imul
mov
notl
mov
inc
add
jmp
mov
iret
adc
jbe
adc
xchg
mov
ljmp
jb
sbb
push
mov
jp
or
adc
lds
fistpl
lock
and
adc
into
adc
adc
popf
stos
and
xchg
xchg
add
sbb
or
jl
cwtl
cmp
aas
std
in
cmp
test
pop
test
mov
cmp
addb
pop
ficoml
push
test
fists
mov
ret
push
push
std
stos
xchg
push
movsl
jmp
movsb
outsb
popa
and
fs
pop
lods
or
fs
clc
outsl
daa
addr16
scas
test
inc
fisubrs
adc
ja
inc
mov
fldcw
div
mov
les
cmc
fstl
gs
inc
jo
cmp
orl
sub
sub
adc
mov
dec
mov
dec
xchg
sub
xchg
adc
pop
scas
jnp
lods
scas
and
mov
shlb
cmc
aam
les
lahf
scas
lret
adc
aad
jne
lcall
or
dec
mov
or
and
les
add
mov
dec
in
sbb
add
fs
clc
call
bound
pop
bound
cltd
mov
sub
inc
lahf
push
es
inc
xchg
js
jmp
pop
mov
ds
cwtl
js
mov
pop
xor
push
adc
sbb
mov
out
cmp
inc
jmp
push
ret
push
xchg
daa
jle
dec
fs
jle
or
cmc
int3
fnstcw
ret
mov
gs
pop
in
pop
frstor
pusha
rorl
test
pop
push
into
clc
xor
cmc
out
xor
dec
in
ss
cmp
inc
cmp
jnp
imul
inc
and
or
jbe
mov
cmc
pop
mov
jns
adc
push
and
sub
or
inc
popf
shl
cmp
jecxz
and
movsb
mov
dec
rcrb
xor
ds
mov
fidivrs
add
pop
xor
imul
out
pop
ljmp
icebp
pop
cmp
test
dec
inc
icebp
stc
pop
lea
dec
jge
dec
addr16
adc
orl
lods
loop
push
aas
cs
sahf
mov
gs
pop
movsb
loopne
outsl
es
jmp
loopne
and
test
inc
pop
movb
sahf
jo
in
int3
add
incl
enter
pop
stos
add
push
adc
in
andl
jle
int3
stos
fsub
insl
inc
push
out
sbb
stos
rep
mov
inc
icebp
cmp
pop
dec
sahf
add
frstor
fsubs
sub
cmpsb
bound
mov
aaa
lcall
sbb
std
add
sub
ss
jne
or
loope
rcrl
push
sbb
and
mov
fldl
cmpb
cld
mov
lahf
test
sbb
mov
pop
mov
xor
mov
mov
stos
arpl
pop
sub
loopne
pop
xor
sti
gs
test
cmp
arpl
mov
adc
negb
xor
mov
repz
loop
sbb
shr
fwait
sbb
fwait
adc
lcall
addl
cli
jg
dec
sub
fadds
hlt
xor
ss
lds
lods
movsl
fistpl
es
pop
scas
jmp
or
adc
lea
mov
fildll
aam
movsb
sbb
push
icebp
sub
push
adc
xchg
ja
ficoml
cmpsl
cmp
xlat
push
les
push
pop
and
cmpsb
dec
iret
mov
add
push
lock
push
aaa
pop
sub
fsts
xor
addr16
test
cmp
mov
mov
in
inc
addr16
fwait
and
pushf
and
iret
fisubs
xor
and
repz
dec
insl
jae
lret
inc
shrl
icebp
mov
sub
inc
fildl
cmp
cli
sbb
out
mov
and
push
fidivrs
push
inc
decb
ljmp
mov
test
dec
mov
lea
fldcw
xor
mov
sub
loopne
inc
pop
or
jae
push
cmpsb
sub
mov
add
aad
nop
xchg
out
adc
mov
pop
dec
scas
inc
inc
rcl
in
imul
inc
notb
and
mov
and
ljmp
pop
push
std
ret
je
xchg
mov
popl
push
add
jno
cmc
pop
mov
in
xchg
push
and
lods
push
jmp
dec
rolb
inc
sahf
cmc
les
movsl
stos
es
dec
dec
pop
in
mov
jp
push
mov
cmpsb
lods
jnp
test
mov
sbb
lock
ret
lahf
push
jne
enter
faddl
out
xchg
dec
or
sub
loopne
mov
xchg
mov
jo
pop
mov
inc
lods
cmpsl
dec
or
xor
ds
out
cmpsb
inc
arpl
cli
enter
out
shl
int3
icebp
mov
subl
imul
mov
and
cmpsb
sbb
xor
adcb
push
xchg
dec
lods
or
out
adc
lods
xchg
cmp
sbb
jne
xor
adc
addr16
mov
movsb
dec
dec
xor
jle
and
insl
repz
pop
dec
inc
cwtl
xchg
data16
xor
and
xchg
or
fldt
imul
jecxz
xlat
pop
jbe
fstps
scas
mov
pusha
mov
mov
ljmp
loopne
cmp
out
rorb
imul
and
xor
pop
xchg
loop
popa
aad
cli
xchg
sbb
pushf
popf
sarb
outsb
inc
stos
add
jle
inc
out
mov
sbb
hlt
out
jns
and
imul
cmp
push
stc
cltd
mov
movsl
fidivl
push
inc
and
loopne
pop
clc
mov
dec
jo
pop
rolb
xor
jns
pop
mov
xchg
les
push
das
je
ljmp
add
pop
dec
jg
std
xchg
jl
or
pusha
stc
lcall
std
and
or
in
mov
xchg
mulb
mov
mov
mov
jbe
xor
jecxz
push
sbb
addr16
jmp
test
ret
stos
shll
popa
add
mov
cmp
sbb
mov
adc
or
adc
das
fldl
pushf
sbb
sub
fstl
sub
ret
inc
mov
in
or
push
or
imul
jecxz
jecxz
inc
add
cli
lret
outsb
int3
je
mov
dec
push
jecxz
mov
clc
pop
cld
mov
imul
enter
inc
out
inc
movsb
jns
jecxz
add
or
adc
loopne
loope
test
lea
pop
jle
mov
xlat
cmp
popl
hlt
sti
sbb
inc
into
mov
pop
mov
mov
pop
in
dec
push
movsl
sbb
les
pop
aam
mov
pop
dec
dec
sbb
mov
in
sub
add
mov
xchg
in
xchg
xor
fwait
test
xchg
jl
mov
insl
sbb
xchg
xchg
popa
jecxz
test
jo
xor
adc
and
pushf
push
sti
dec
jno
xchg
movsl
xchg
xlat
shlb
jae
divb
or
fwait
add
fptan
dec
mov
lods
aas
inc
push
xor
lds
cmp
sbb
cs
ljmp
movsl
mov
scas
mov
dec
pop
repnz
mov
inc
movsl
mov
push
lods
cli
icebp
xchg
clc
dec
jne
add
iret
in
clc
div
sbbb
mov
jbe
push
xor
inc
addr16
out
mov
push
pop
dec
pop
push
cmpsb
mov
in
fmulp
sub
pusha
cmpsl
mov
out
sub
cmp
pop
pop
cmpsb
pop
sub
sbb
ret
dec
fldcw
push
lea
fadd
out
mov
clc
jmp
cmpsl
pushl
pop
insl
adc
popf
sbb
and
mov
sbb
js
sbb
fs
jno
int
enter
nop
sbb
jo
jg
es
dec
push
mov
mov
push
jno
jle
repz
adc
adc
mov
add
subb
pop
test
xor
aad
ds
aam
mov
call
dec
ret
inc
xor
dec
vsqrtpd
mov
push
pusha
cmp
ja
dec
shlb
cmp
mov
aad
fsts
imul
xorl
stc
sbb
mov
stc
repz
in
loope
add
push
rorl
ficomps
loop
xchg
mov
mov
sub
pop
dec
dec
push
nop
out
or
pop
inc
jecxz
popf
lahf
mov
mov
jmp
add
pop
icebp
int3
push
das
and
pcmpgtb
inc
cmp
or
jb
inc
in
js
or
xchg
adc
xor
mov
into
mov
xor
aas
pop
in
xchg
nop
out
push
fisubs
adc
xor
inc
shlb
sarl
push
inc
stos
lods
add
push
jecxz
mov
data16
pop
movsl
mov
mov
das
out
jbe
pop
jnp
fidivrl
orb
push
xchg
and
and
sub
jns
push
out
lea
test
dec
sbb
stos
cmpsl
pop
cmp
call
adc
xlat
or
cmp
cld
test
sbb
test
push
and
repnz
ds
push
mov
int3
sarl
jp
pop
nop
movsl
adc
in
iret
pop
mov
sbb
inc
fsubrl
and
dec
aam
gs
hlt
jae
icebp
in
xchg
ret
mov
sub
lea
lahf
cmp
fdivrl
cli
test
outsl
dec
subb
mov
pop
or
nop
pop
inc
ds
jne
sub
jno
insl
sbbb
or
mov
imul
popf
xchg
fimuls
clc
cmp
xchg
mov
ds
cmpsb
arpl
cmc
aas
lods
cmp
mov
mov
mov
out
jmp
lods
pop
hlt
mov
xchg
dec
and
and
lea
xor
xlat
adc
decl
add
mov
pop
fbstp
or
test
es
lods
icebp
inc
mov
jns
rorb
sub
dec
pushl
dec
jmp
sahf
jnp
imul
out
dec
push
leave
jno
fildl
in
dec
sbb
xor
inc
pop
insl
sti
mov
scas
mov
aam
mulb
inc
mov
mull
cs
daa
adc
pop
adc
test
aam
pop
mov
in
rorl
test
push
ljmp
repz
cmp
add
xor
pushf
mov
inc
lahf
lods
shl
push
jno
cwtl
pop
cs
push
cmpsb
add
loop
popf
inc
out
popf
leave
jle
aas
insb
xchg
arpl
sub
jne
xchg
bound
scas
sbb
push
sahf
ja
das
jb
mov
dec
test
fnstsw
mov
cmp
fld
mov
ljmp
adcl
leave
jmp
xor
dec
pop
sahf
ja
inc
cmc
in
lea
inc
adc
int
fstpl
popl
or
mov
push
push
inc
dec
pop
xchg
inc
fldenv
or
adc
lea
push
push
cmp
out
jne
cli
mov
or
jne
cmp
insb
add
fwait
or
addl
jne
push
ja
ret
ret
insl
xor
stos
dec
imul
notl
mov
inc
or
inc
sti
or
jae
ret
xor
xor
xchg
push
push
in
loop
xchg
fs
mov
inc
outsl
insb
cmp
movsl
cmpsb
lods
jo
test
xor
pop
lcall
divl
aas
repz
sub
xchg
lods
push
mov
out
addr16
in
inc
jno
jge
push
jns
aam
cmp
adc
jb
pop
pop
test
movb
push
xor
cmp
aad
test
xor
popf
jp
imul
inc
mov
aas
movsb
mov
loope
inc
adc
popl
adc
outsb
mov
pop
jle
js
and
or
push
cld
mov
fcoml
mov
lret
lcall
aad
or
pop
push
popa
mov
and
fs
add
pop
and
les
push
cmp
lcall
push
fimull
mov
lods
mov
mov
mov
shl
xor
das
filds
inc
mov
fidivrl
movsl
jne
testb
inc
pop
scas
enter
js
adc
test
push
enter
xchg
cmp
mov
sti
mov
aaa
sahf
sub
sbb
mov
inc
stc
testl
xchg
mov
cld
ret
sarb
jle
jmp
sarl
adc
rorb
jno
adc
divb
push
out
in
add
mov
xor
sub
imul
mov
je
push
sbb
fisubl
mov
rcll
mov
addr16
mov
sub
adc
inc
rclb
xchg
cmpsb
loop,pn
les
jae
inc
dec
mov
inc
or
shl
es
mov
cli
outsb
xor
xchg
mov
pop
pushf
daa
cwtl
inc
and
stc
mov
dec
and
out
movsl
and
add
push
in
adc
adc
mov
jg
push
xchg
out
and
andb
push
ljmp
pop
dec
inc
inc
inc
xor
or
hlt
ds
jns
inc
push
and
adc
test
xor
fisttpll
add
push
mov
mov
aad
xchg
aad
inc
or
movsl
dec
or
jmp
icebp
xchg
lods
sub
pop
fistps
jnp
mov
dec
xchg
in
mov
and
push
insl
cmp
enter
test
mov
pop
jp
xchg
fcoml
cmp
mov
sub
mov
psubd
loop
out
out
movsl
movsb
xchg
sub
insl
lret
jnp
call
xchg
add
movsl
push
push
mov
mov
jb
push
push
popf
or
in
jne
inc
fnsave
push
dec
stos
rcrb
inc
in
rorb
outsb
cmp
outsl
jae
jge
cmp
stos
xlat
sbb
or
and
sbb
mov
push
inc
jnp
add
inc
aam
mov
xor
sub
es
dec
test
push
leave
sbb
sub
add
jo
mov
ljmp
imul
jmp
pushf
adc
lret
mov
mov
pop
pop
jmp
xchg
lcall
rcrl
cltd
sbb
inc
sub
into
call
mov
cmpsl
ret
call
xchg
add
in
call
fisubrs
xchg
lock
das
je
test
cmp
sbb
mov
pop
mov
adc
push
ljmp
pop
dec
cmp
dec
iret
mov
jnp
repz
lahf
ffree
xor
mov
aam
scas
mov
sbb
cmp
insb
xor
movsl
lea
jno
xor
pop
jb
mov
and
fildl
pop
mov
or
andb
in
mov
inc
hlt
push
insb
mov
inc
imul
pop
mov
dec
or
dec
movsl
loope
ret
repz
pop
mov
sub
dec
sub
orl
mov
push
mov
pop
test
pushf
icebp
fs
push
into
xchg
outsl
test
jbe
ror
lods
sbb
leave
lock
lods
test
mov
pop
mov
mov
adcb
inc
out
add
fisubrs
push
xor
fiaddl
cs
mov
stc
repnz
xor
add
push
and
add
ljmp
js
insb
testl
mov
adc
xor
mov
or
mov
sbb
ret
nop
into
mov
loop
or
std
adc
jp
clc
mov
inc
or
or
ljmp
xor
push
mov
faddl
shll
outsl
mov
push
nop
fprem
ss
out
lret
pop
jne
out
jmp
ret
sti
outsl
out
test
scas
pop
repnz
in
adc
fldt
jbe
and
add
stos
cmp
adc
mov
xor
pop
inc
sub
rorb
scas
repnz
cmp
dec
cmc
mov
cs
mov
push
andb
cli
dec
dec
shrb
cmp
jno
pop
in
jp
dec
mov
pop
shl
xchg
nop
int3
and
fidivrs
fdivp
mov
adc
sbb
or
inc
pxor
ret
adc
jno
daa
rol
lahf
cmpsb
repz
loopne
repnz
insl
sarb
dec
xor
lds
fists
jle
scas
lahf
adcb
inc
xchg
rcll
add
sub
nop
cs
andb
scas
in
jae
aam
and
shlb
and
icebp
ja
popf
xchg
add
jae
subl
outsb
xchg
xchg
xchg
pop
xor
or
mov
or
inc
aam
cmp
sbb
inc
mov
enter
cmp
clc
jae
lods
into
lcall
movsl
sbb
aam
in
imul
scas
mov
mov
ret
cwtl
mov
jo
imul
adc
ret
inc
stos
xchg
adc
mov
fst
mov
and
inc
rorb
pop
dec
scas
mov
and
mov
mov
mov
and
iret
jecxz
jge
cmpsl
sub
shrb
imul
andl
cmp
adc
insb
notl
out
and
lea
jl
sbb
inc
jl
xor
cltd
mov
push
hlt
push
xchg
push
sub
aam
jmp
cli
je
ret
negb
jle
and
cli
add
icebp
mov
add
shrb
cmp
xchg
jbe
addr16
das
cmpsb
dec
xchg
int3
fidivrl
push
inc
je
repnz
mov
or
sub
sbb
mov
push
jecxz
adc
call
imul
cs
data16
jb
subb
xor
dec
cmp
cmp
add
add
jno
xchg
cwtl
mov
or
rol
aad
call
shl
pop
daa
test
cmp
cmpsl
cltd
adc
in
rcrb
sbb
jge
jge
adc
adc
popa
ja
mov
or
mov
add
xlat
cmp
add
jge
inc
insl
lret
mov
shlb
sub
leave
pop
mov
out
aad
and
sub
dec
xchg
call
mov
and
divl
and
in
lret
arpl
dec
movsb
fsubr
sub
dec
xlat
push
or
pop
inc
rol
push
inc
out
cs
pop
inc
mov
xchg
mov
test
xor
cmp
repz
shrb
inc
clc
inc
inc
jb
dec
sbb
sub
and
bound
lock
push
movsb
lcall
in
dec
rcrb
xor
dec
sub
mov
inc
cmc
add
push
xor
cmp
dec
dec
faddl
or
nop
in
or
js
inc
scas
in
xor
pop
cmpsl
push
js
in
push
mov
add
aad
fs
mov
jle
mov
sub
test
or
sbb
or
dec
fstpl
fwait
jb
cmovge
mov
mov
fnstsw
mov
cmp
inc
cmp
sbb
mov
mov
mov
iret
jl
sub
fwait
push
fistps
dec
push
lods
popf
inc
pop
loop
mov
outsl
push
push
xor
cmp
sbb
pushf
popa
test
sbb
jne
sti
mov
rep
push
adc
mov
fdecstp
lods
fsub
dec
outsl
mov
sbb
xchg
pop
push
icebp
sti
ficoml
xor
cmpsb
cmp
lahf
push
call
mov
popa
mov
test
pop
pushl
xor
xchg
in
loope
add
push
lahf
mov
xchg
cmpsl
stos
xor
rcrb
lret
mov
or
les
xor
cmpsl
aas
sbb
xchg
jo,pn
repz
push
lods
fistps
push
out
sti
lock
mov
cmp
fistl
xchg
adc
arpl
std
adcl
mov
mov
icebp
add
xor
mov
ficoms
sahf
in
ret
fcmovu
xorb
and
test
add
xor
push
or
pop
pop
clc
out
mov
ret
mov
scas
lahf
sub
pushf
pusha
adc
adc
push
das
ret
and
loop
lods
inc
arpl
js
pop
popa
movsl
cmp
das
xchg
or
inc
push
inc
cwtl
imul
pop
mov
out
push
sbb
and
cmp
fsubrp
sub
lds
mov
jne
xchg
sbb
fcoms
inc
iret
fcomi
mov
dec
je
or
out
out
arpl
pusha
mull
mov
add
aad
fdivl
imul
mov
and
xor
dec
inc
sahf
sub
dec
push
inc
xlat
add
push
adc
pop
bound
into
sub
jp
mov
sbbb
mov
test
mov
xor
lret
cmp
add
sarl
sahf
inc
daa
popf
sub
lret
add
aam
aas
add
xorl
add
inc
das
popa
insl
dec
testl
inc
sbb
ret
sub
scas
lcall
jecxz
imul
sahf
add
jae
jns
xchg
in
lcall
and
call
inc
ss
sub
dec
ret
adc
nop
test
dec
imul
xor
pop
faddl
in
cmp
and
mov
dec
ret
mov
cmp
loope
or
cld
ja
lret
dec
adc
aas
jnp
mov
test
nop
popf
fcoms
add
outsb
std
clc
dec
push
sub
insb
in
xor
insb
pop
loop
adc
jne
decb
cmp
dec
jbe
aas
frstor
aam
pop
or
mov
ss
mov
and
push
test
mov
and
icebp
das
inc
jnp
aam
int
xchg
lahf
mov
scas
xchg
aad
imul
cltd
pop
aaa
sarb
inc
out
add
xor
insl
loop
inc
add
sbb
stos
aas
loop
push
xchg
out
outsb
pop
add
aad
pop
sub
aas
push
dec
jle
sbb
lea
lret
adc
or
negl
sarb
jno
lcall
ja
ljmp
push
in
cld
out
outsb
xor
data16
mov
sbbl
je
dec
xchg
fisttpl
and
leave
adc
rclb
stos
sti
loopne
push
pop
insb
mov
xchg
cltd
lret
add
inc
shrl
es
mov
push
ret
pop
cmp
fiaddl
inc
in
aas
cli
lods
and
cmp
xchg
jle
imul
push
mov
mov
xlat
xchg
loope
or
rcl
int
sbb
mov
or
daa
lret
cvtdq2ps
ss
cmp
nop
sbb
in
rorl
mov
xchg
enter
and
cmp
adc
and
in
mov
aas
push
inc
fnstcw
ret
dec
add
je
xchg
adc
movsl
adc
ret
pmulhuw
fmulp
aas
dec
xor
test
cli
xor
popf
test
gs
dec
pop
mov
dec
repz
xchg
push
test
and
jne
hlt
xor
jnp
bound
daa
int3
push
add
mov
dec
cmp
jno
jbe
lret
lock
imul
ret
fcmovne
adc
pop
xor
pop
stc
das
leave
repnz
inc
enter
mov
stos
cwtl
mov
ljmp
mov
leave
inc
add
cmp
aas
sub
pop
jecxz
movsb
aas
xchg
jno
pop
or
out
sbbb
jb
cwtl
push
cmp
je
dec
ljmp
mov
dec
mov
cmp
xchg
push
adc
jo
pop
push
dec
jno
adc
sbb
mov
pmuludq
adc
jnp
lahf
push
mov
sbb
sbb
cmp
add
mov
mov
mov
addl
lds
out
xor
fimull
int
xor
leave
pop
mov
or
xchg
mov
std
movsl
adcb
mov
xor
or
lahf
test
or
pusha
cmc
clc
adc
ss
movsl
mov
cmpsb
nop
repz
mov
xchg
cmpsb
pop
inc
jge
in
or
fcoms
adc
or
fwait
dec
mov
test
cs
cmp
test
aaa
push
gs
pop
push
mov
pop
dec
lods
cmp
mov
or
mov
fcmovne
frstor
sub
std
and
mov
pop
lcall
add
and
lret
rorl
push
push
bnd
lcall
cmpsb
in
adc
push
addl
and
mov
rcrb
loope
es
aaa
push
xor
mov
and
fcomp
push
sarl
pop
lret
adc
cltd
cmp
xchg
mov
movsl
cs
mov
xchg
aad
add
xor
mov
xchg
or
dec
scas
dec
cmpl
lcall
call
leave
ficompl
bound
push
stc
adc
out
ret
call
es
in
lret
cmp
popf
dec
inc
and
mov
test
js
dec
lock
mov
adc
xchg
mov
pop
mov
lret
jnp
aaa
sbb
inc
cwtl
in
jl
mov
mov
mov
push
and
xor
ja
pop
in
repnz
pop
push
jle
push
mov
and
loop
dec
mov
sbb
adcl
lods
jle
xor
div
fisubrl
lods
ds
sbb
xchg
imul
std
cld
dec
rcl
hlt
popa
pusha
hlt
pop
imul
test
jb
jae
sbb
test
mov
sbb
mov
cmp
push
data16
cmp
sub
lea
jbe
mov
mov
dec
leave
xor
test
jae
inc
add
fs
jbe
leave
adc
aas
lock
fcmovb
jae
adc
shrl
pop
fcmovbe
cwtl
fsub
mov
mov
nop
push
push
into
vmwrite
loope
mov
or
inc
jnp
inc
aas
or
es
bound
jg
jp
add
inc
imul
mov
xchg
in
sarb
cmp
xchg
push
out
mov
push
mov
push
or
out
int3
hlt
mov
mov
fisttps
jne
dec
push
and
add
out
add
lahf
in
sub
push
mov
sub
into
push
push
ljmp
adc
pusha
push
daa
cwtl
jmp
push
mov
fdivs
mov
scas
insl
pushf
out
divb
in
fldcw
in
fistps
jecxz
out
jmp
or
outsl
xor
out
adc
add
and
sub
out
icebp
ret
lods
sbb
sub
mov
mov
push
jne
pop
cmpsb
pop
mov
arpl
testl
push
pop
daa
sbb
mov
sub
mov
decl
movsb
jbe
sbb
ds
mov
adc
pop
cltd
adc
dec
lret
mov
dec
and
xchg
fwait
mov
popa
jmp
test
pop
and
mov
movsl
outsb
jbe
adc
jmp
in
jecxz
mov
mov
xchg
sti
dec
test
aaa
mul
cli
fwait
and
insb
mov
mov
mov
mov
inc
mov
push
xchg
bound
es
stos
aam
push
sbb
mov
mov
test
dec
popf
jle
mov
loopne
ljmp
adc
das
sar
nop
es
mov
push
ret
iret
es
xchg
repz
insl
sub
pop
xchg
jle
and
and
mov
push
gs
mov
pop
pop
and
pop
push
and
popa
lock
ret
dec
mov
sub
insl
adc
imul
cmc
mov
cmp
mov
cltd
mov
dec
js
mov
cltd
sub
adc
les
insb
pushf
cmp
ljmp
sbb
iret
imull
xchg
out
or
sbb
xor
pop
std
stc
std
push
mov
test
sbb
or
pushf
jl
loopne
jge
and
ja
jp
dec
xor
js
push
xchg
inc
bound
outsb
cmpsb
jbe
decb
je
push
andb
cmc
inc
pop
xchg
mov
xor
or
xorb
or
jl
pop
call
lock
inc
mov
xchg
in
lret
movsb
pop
sahf
aam
daa
xchg
std
repz
in
dec
movsb
in
cmp
xorl
and
movsl
sbb
jns
fstl
pop
jg
fimull
inc
ret
or
cs
xchg
adc
aas
das
or
gs
pop
add
xor
inc
test
xchg
insb
lods
imul
or
dec
push
xor
mov
rcrl
fwait
sbb
mov
xor
mov
aas
adc
pop
jg
lahf
cmp
insb
imul
aaa
std
std
into
mov
inc
hlt
xchg
mov
cmp
jl
repz
adc
loopne
roll
fdivl
pop
inc
ss
out
push
push
pop
andb
mov
loope
std
and
jle
pushf
scas
and
cmp
scas
adc
mov
into
movsb
ret
rorl
popa
cmp
xchg
aaa
push
aas
dec
mov
mov
xchg
xor
jecxz
dec
scas
je
divl
enter
adc
fcomps
add
imul
sub
pop
mov
xor
or
mov
cmp
sub
sbb
rolb
stos
mov
jno
xor
js
jno
jmp
in
inc
aas
adcl
std
adc
sbbb
mov
int3
out
xor
add
xorl
cmp
rclb
pushf
in
pop
and
aam
mov
pop
sbb
aaa
sub
mov
xlat
mov
xor
xchg
lock
aas
jmp
ret
rorl
popa
pushf
dec
pop
into
sub
xchg
shrl
cmpsb
mov
adc
xchg
mov
outsl
popf
push
inc
inc
jne
sbb
xchg
jb
outsb
xchg
test
mov
jb
mov
pushf
cmc
push
mul
insb
data16
mov
or
bound
out
add
movsb
jp
ror
popf
sti
imul
and
inc
cltd
je
dec
add
gs
jae
mov
lods
std
leave
aam
int
das
push
push
mov
pop
mov
arpl
outsl
bnd
dec
mov
dec
fadds
xchg
cmpsl
out
test
pop
add
jmp
push
dec
mov
mov
jne
imul
jnp
inc
enter
mov
scas
hlt
fildl
nop
sarl
mov
pop
push
or
int
sub
pop
cmp
cmpsl
jp
push
pop
out
enter
fisttps
aam
test
dec
call
pop
stos
xchg
jge
shll
iret
divl
mov
adc
and
mov
ret
mov
jl
flds
xlat
mov
sbb
pop
lods
or
adc
shr
data16
add
jns
in
jge
lock
push
xor
mov
mov
jge
in
jecxz
mov
shll
test
mov
mov
fldl
das
lahf
push
and
pop
test
sbb
rclb
pop
xlat
pop
inc
rorl
insb
arpl
cmp
std
sub
cmp
fildl
mov
nop
lods
lret
sbb
jmp
lods
xchg
xchg
mov
sub
pop
and
clc
adc
out
xchg
pop
lock
sub
xlat
push
lret
sbb
inc
cs
mov
call
test
subl
cmp
inc
mov
and
jnp
fistps
adc
jno
mov
push
xor
dec
cmp
mov
xor
cld
mov
mov
sub
ja
dec
dec
dec
vphaddbq
out
or
sbb
xor
popa
sub
xchg
xor
gs
cmp
addr16
or
mov
push
lea
das
jp
push
cmp
dec
out
or
cmp
ljmp
xor
popf
sub
push
adc
into
jbe
adc
in
jno
cmp
or
loopne
and
jne
xchg
shll
inc
cmp
xor
cltd
sub
call
pop
ds
xchg
js
ss
mov
repz
aad
inc
push
pop
xchg
data16
xor
mov
js
cmpsl
mov
mov
inc
insb
mov
sub
pop
fst
pop
push
scas
rcrl
daa
ret
test
js
mov
push
rcr
mov
pop
xor
shlb
popa
add
sbb
test
sub
push
lock
loope
inc
les
pop
rorb
in
jnp
gs
fwait
adc
out
mov
dec
ljmp
fbstp
adc
popl
enter
xchg
and
shr
lea
arpl
dec
stos
arpl
in
cmpsb
loopne
cmp
push
mov
rcrb
xor
faddl
pop
push
out
cli
sub
test
pushf
cltd
jo
icebp
add
stos
rcrl
lds
xchg
and
inc
adc
pusha
sarb
scas
inc
push
call
sbb
lds
inc
pop
js
in
sub
inc
je
jp
and
rcrl
enter
mov
es
sub
or
jbe
aaa
imul
mov
pop
mov
adc
popaw
scas
movsl
sahf
rcll
stos
pop
mov
jns
add
adc
pop
cmp
mov
test
xchg
insb
shr
enter
das
cmp
mov
sub
mov
pop
cld
cmpsb
sub
and
cmpsb
sahf
aaa
loop
enter
adc
cmpl
loop
neg
sbb
or
fnstcw
cmp
mov
jge
divb
and
fimuls
stos
sub
shlb
dec
mov
cmpsl
neg
test
fnstsw
mov
cmp
adc
ret
and
sbb
addl
sbb
fcmovbe
push
stos
clc
and
lahf
mov
or
add
mov
lahf
push
inc
or
sbb
pop
insl
inc
jo
inc
xor
xchg
lsl
cmp
xchg
mov
in
icebp
add
push
jge
cmpb
fwait
mov
xor
mov
faddp
movsl
pop
xchg
fs
pop
xor
or
xor
sbb
push
loop
xchg
adc
mov
xchg
rolb
add
mov
sarb
push
dec
cld
xor
jmp
cmc
lcall
pop
mov
or
lods
push
sbb
negl
mov
mov
aas
pop
or
pmullw
push
add
mov
lods
push
rep
aam
sbb
aaa
mov
mov
int3
insb
jmp
int3
xchg
or
andl
jecxz
fnstcw
jnp
bound
adc
lds
call
ljmp
hlt
and
mov
dec
stos
repz
cld
push
add
pop
jns
mov
jle
and
cmpb
jp
mov
hlt
mov
rcr
ljmp
mov
pushw
jecxz
out
mov
xchg
ret
or
cmpsb
mov
sbb
and
outsl
cwtl
inc
pop
push
cmp
jnp
mov
cmp
mov
add
add
push
mov
mov
stc
jge
mov
mov
mov
icebp
testb
je
mov
jmp
pushf
push
push
pusha
out
dec
nop
fwait
repz
push
stos
or
and
hlt
cmp
xchg
imul
loop
pop
pop
sbb
mov
sub
loop
je
or
ja
mov
sub
dec
jge
xchg
mov
xchg
push
cltd
roll
and
mov
mov
leave
das
mov
stos
sbb
dec
scas
and
dec
mov
add
mov
xchg
cmp
lret
sbb
je
cmc
test
mov
mov
aaa
xor
scas
adc
test
roll
icebp
std
dec
call
fcoml
lcall
adc
inc
ljmp
mov
fisttpll
aam
loop
xchg
fnstenv
stos
inc
mov
loope
lock
jo
jmp
pop
lcall
inc
pop
jns
sub
or
lds
xor
orb
rolb
inc
xchg
dec
mov
std
sbb
push
xchg
rclb
mov
loop
mov
jl
sub
ret
sub
inc
mov
xchg
lret
mov
xchg
add
lods
clc
outsb
push
pop
xchg
movsl
jnp
jns
das
je
mov
pushf
test
or
fisubrs
sbb
sbb
adc
inc
jo
xchg
cmc
ret
pusha
pop
add
push
pop
xchg
imull
ja
shrb
xchg
jg
fdiv
xor
jo
xor
mov
out
adc
mov
ret
or
lcall
xor
jb
cli
jae
out
xlat
push
inc
or
jbe
ret
aas
pop
hlt
sahf
sarb
push
fadd
push
mov
jmp
ja
mov
outsl
push
pop
in
out
add
pop
cmp
mov
sbb
xchg
xchg
punpckhwd
repnz
pop
incl
int3
mov
daa
mov
jo
test
dec
fs
inc
clc
fildl
stc
push
ficompl
xor
pop
pop
or
add
pusha
cmp
or
packuswb
pushf
fldl
ret
ror
mov
sbb
mov
idiv
add
mov
addr16
ret
in
mov
ja
mov
cld
mov
push
bound
xor
push
lcall
mov
cmp
fsts
in
mov
fistl
inc
push
dec
js
and
mov
hlt
imul
out
xchg
sarl
inc
push
xchg
push
orb
sub
sbb
and
mov
xchg
cld
fcompp
je
push
jne
mov
adc
push
test
out
cld
jl
mov
and
xchg
and
mov
xchg
push
push
daa
xor
push
add
outsl
mov
stos
loope
sub
scas
xchg
pop
shlb
mov
repz
inc
xorb
dec
adc
jo
adc
jne
sub
mov
mov
inc
psrlw
popl
pop
mov
jmp
mov
push
ja
xor
frstor
fwait
and
dec
scas
in
inc
mov
out
jae
and
mov
imull
cltd
mov
xchg
cmp
dec
leave
bound
cmp
lock
pop
mov
push
adc
pop
pop
add
pop
mov
ficomps
and
rol
lods
inc
jns
mov
xor
cltd
imul
mov
add
test
loop
mov
add
inc
enter
lret
test
pop
mov
shlb
imul
loop
cmp
jnp
clc
jmp
mov
mov
xor
push
inc
adc
xor
mov
xchg
out
je
adc
scas
xor
cmp
jo
addr16
stos
sub
push
xchg
push
sub
test
clc
out
enter
mov
cmc
xor
ds
mov
adc
sub
ret
fnstenv
dec
push
call
cld
mul
outsl
and
rolb
sbb
cs
popf
subb
dec
out
les
loopne
or
loopne
sbb
lock
mov
sub
andb
pop
outsl
pop
pusha
movsb
and
mov
sub
bound
lcall
sub
cwtl
pop
lahf
dec
push
movsl
ret
popf
and
mov
fisubrs
bnd
int
adc
sub
and
test
adc
test
cmp
lret
addr16
push
ret
mov
je
mov
sub
out
jge
cld
pop
adc
lahf
pushl
loopne
mov
jp
hlt
rcrl
cmp
jbe
jo
pop
jne
pop
movsl
pop
pop
push
adc
xor
xchg
rcr
push
jo
mov
push
or
cmpsb
inc
imul
lret
cmp
jl
ljmp
movsb
cltd
dec
scas
xor
xor
dec
push
bound
adc
nop
outsb
lahf
sbb
pop
xor
cmovl
lahf
push
ljmp
mov
xchg
aaa
insb
lcall
das
mov
xor
icebp
and
lods
xchg
mov
pop
addl
mov
daa
sbb
jecxz
inc
add
bound
lahf
pop
and
stos
push
lds
lea
cwtl
out
insl
cmp
jl
xor
mov
jl
sbb
cld
stos
xlat
pop
jmp
and
popf
out
adc
ss
cltd
out
stos
dec
jnp
test
sub
lahf
insb
cmp
shlb
jb
stos
xchg
sub
ds
xor
mov
ss
in
outsb
add
test
sar
in
rclb
sbb
push
jno
pushf
pop
mov
push
mov
hlt
jns
xor
vmovntps
int
cs
leave
cmp
lret
sarl
jmp
xor
test
movsl
adcb
mov
push
pusha
ss
mov
jg
orl
nop
mov
xor
faddl
aas
fwait
and
sub
jno
hlt
jecxz
inc
cmp
mov
je
lcall
das
testb
add
or
dec
jmp
adc
xchg
or
pcmpgtw
loop
into
pop
orb
mov
shlb
ss
jl
pop
inc
xchg
mov
xor
jecxz
push
push
andb
add
cmp
popa
xor
dec
dec
push
rorl
or
xor
roll
dec
insl
pop
out
push
lock
mov
jno
fldcw
lea
ja
leave
inc
inc
pop
push
xchg
mov
jbe
add
pop
movsb
add
push
daa
in
sub
insb
scas
xchg
nop
enter
sub
push
arpl
jbe
mov
mov
dec
push
cld
mov
enter
push
lea
les
cmp
leave
mov
lock
sub
mov
lea
in
pop
hlt
xchg
shlb
push
mov
mov
add
std
xor
xor
push
pushf
push
in
push
push
cmp
xchg
lds
popf
daa
mov
call
adc
jno
add
cmp
sbb
push
sbb
push
ds
cmp
adc
sub
loope
adc
cmp
popf
outsl
mov
sbb
sbb
out
loopne
or
push
xchg
sbb
jns
ja
adc
ss
jno
xor
fcom
cwtl
ja
pop
xchg
mov
in
push
mov
mov
pop
adc
push
and
aad
lock
clc
mov
sti
int3
scas
pop
test
mov
dec
ret
lods
aas
fs
xor
sub
das
cmp
sti
cmpl
lcall
jbe
jae
adc
push
inc
je
fcompl
add
or
iret
pop
lods
cmc
test
mov
add
xchg
jnp
lahf
loopne
dec
lahf
mov
jo
pop
inc
rcrb
fmull
push
adc
pop
das
rclb
scas
daa
loop
jb
mov
arpl
add
lcall
cs
dec
nop
in
iret
call
or
pusha
xor
lret
jp
pop
mov
int
es
xor
outsb
gs
sarl
daa
jne
jecxz
adc
xchg
call
or
and
adc
dec
scas
jecxz
dec
icebp
mov
cmpsb
inc
stos
popf
scas
ljmp
push
in
rcll
cld
xor
mov
mov
xorb
dec
fcoms
bound
xlat
rcrb
mov
push
cmp
dec
pop
jbe
in
push
dec
jae
push
dec
mov
jb
ret
gs
inc
je
jl
adc
xchg
movsb
dec
addl
aas
and
lods
movsb
lcall
push
adc
hlt
sti
ss
inc
insb
popa
dec
stos
arpl
call
pusha
inc
int
test
fs
scas
call
ds
repnz
cmp
jle
insb
pop
cmp
sub
cmp
ljmp
fmuls
xor
mov
or
dec
sti
bound
and
sub
rcll
out
add
ja
jo
adc
icebp
sub
ret
sub
and
pop
sub
test
bound
cmp
jno
sbb
adc
loope
int
xlat
sub
adc
mov
or
insl
jg,pn
adc
xor
mov
xorb
push
mov
mov
icebp
jp
loopne
xor
sub
ror
inc
imul
lcall
repnz
inc
cld
ret
loop
pop
int3
lods
jl
divb
add
fcoms
pop
jp
ds
jg
nop
push
repz
jns
dec
mov
pop
jmp
xchg
icebp
sub
in
cltd
std
sub
add
shll
add
subb
cs
push
aaa
shll
push
dec
mov
loope
push
dec
and
mov
fisubrs
cmp
dec
push
fstpl
cmp
mulb
aad
scas
es
inc
add
xchg
fnstcw
sbb
rol
pop
fs
sbb
add
test
data16
and
imull
popa
lock
cmpsb
lock
inc
call
ja
testb
sub
cmpsl
inc
add
and
pop
scas
leave
mov
mov
xor
sahf
and
mov
imul
mov
movsb
inc
mov
mov
adc
jl
sbb
push
pop
push
aam
loope
dec
pop
int
push
mov
dec
cmp
xchg
fisttpl
and
dec
data16
loope
data16
mov
jl
addr16
mov
pusha
leave
mov
push
adc
sub
adc
nop
xor
and
movsl
gs
fisubs
cmp
add
rcrl
out
xchg
inc
sbb
icebp
inc
into
nop
pop
pop
push
or
mov
cmc
insb
jae
jns
arpl
lods
xchg
test
jnp
and
cmp
data16
sarb
mov
xor
pusha
mov
adc
imul
jbe
pop
ror
mov
or
xor
mov
les
and
and
aam
cmovp
jbe
movsl
inc
push
cmp
and
or
pop
mov
or
dec
sbb
pop
sbb
and
mov
in
sub
add
sub
je
sahf
mov
adc
dec
push
xlat
lcall
rcr
cli
imul
mov
inc
outsl
inc
ss
pop
in
ret
mov
push
xor
push
jno
mov
dec
mov
lahf
cmp
jp
mov
jb
jo
arpl
insb
push
mov
testl
mov
mov
lcall
stos
je
push
sahf
push
cmp
arpl
fdivrs
mov
dec
push
xchg
jecxz
mov
fisttpll
rolb
nop
aas
daa
lcall
hlt
jge
sub
sub
lret
cli
int
shll
push
enter
ror
adc
adc
test
scas
cwtl
adc
add
fcmovbe
and
fnsave
xchg
mov
jge
flds
cmp
lock
out
and
mov
xchg
out
mov
int
stc
inc
mov
lock
lds
mov
mov
loope
outsl
xchg
bound
shlb
mov
add
xor
and
aas
and
fcomi
leave
push
xchg
loope
xchg
ljmp
lret
pop
cs
cwtl
push
fdivr
push
cld
xchg
ja
cmpsb
aaa
in
xchg
rcll
test
fs
mov
fmuls
das
lods
fwait
push
xchg
aaa
sbb
cwtl
fimuls
and
mov
into
sbb
sub
push
push
jl
dec
xchg
xchg
out
xchg
std
sub
cs
jecxz
ljmp
sbb
cmp
sub
in
and
jne
arpl
sub
xchg
stos
jl
inc
daa
xchg
lahf
or
outsl
xor
mov
jle
xchg
mov
loopne
outsl
ret
jl
sbb
push
es
mov
fistl
or
repz
and
loopne
fadds
pop
notb
inc
sub
jle
cmp
lret
popa
ret
push
xor
mov
cltd
xorl
leave
or
btr
stos
xchg
dec
negl
bound
or
xor
sub
out
push
lret
sbb
pop
jno
cwtl
ss
ret
mov
out
jp
mov
cmpsl
call
stos
xor
neg
aaa
test
movsb
sbb
push
jns
mov
xchg
mov
lock
adc
cmp
mov
pop
incl
pusha
push
cwtl
mov
outsb
inc
mov
and
adc
jo
inc
leave
sub
mov
mov
add
in
xchg
insb
aaa
lea
mov
rclb
sub
lahf
leave
cmpsl
dec
jno
xchg
roll
negb
jle
add
xchg
sub
push
xchg
xor
inc
ds
lcall
ds
or
xorl
pop
jge
scas
mov
out
data16
jb
jmp
adc
mov
mov
rcr
ja
fisubrl
jl
adc
call
or
jmp
dec
mov
jno
dec
clc
push
push
and
stos
bnd
imul
add
call
lret
lods
pop
fmull
jb
push
xchg
adc
jle
mov
js
movsb
inc
push
push
leave
xor
xchg
stos
cmpsl
aas
mov
ret
shl
sub
mov
mov
call
lods
push
movsb
jnp
xchg
cld
xlat
xlat
shr
jbe
gs
rcr
es
movsl
sub
jne
gs
cmpsl
es
rcll
xor
add
xchg
enter
sbb
or
and
pop
les
into
jae
mov
icebp
hlt
das
inc
jmp
adc
shlb
lock
lret
push
pop
test
adc
xchg
imul
add
mov
xlat
or
ljmp
mov
outsb
adc
mov
cltd
adc
mov
and
jnp
dec
fiadds
lods
data16
in
rcrl
xchg
sbb
xchg
push
pop
das
push
and
loop
cmc
loop
adc
icebp
mov
lods
movsl
mov
cltd
sbb
daa
orl
in
jnp
negl
aas
fsts
push
std
rcrl
movl
dec
lret
cs
jo
subl
sahf
or
push
pop
jo
out
add
and
outsl
pop
inc
aad
arpl
stos
adc
jno
inc
js
cmp
sbb
jg
mov
cmp
movsl
cmp
inc
pop
inc
mov
jle
or
jb
pop
cld
mov
adc
jp
push
or
ret
sbb
lods
push
fldenv
jl
sub
fisubrl
jmp
std
pop
cmp
insl
push
insl
iret
imul
fucomp
mov
xchg
test
mov
mov
push
jecxz
push
adc
push
adc
jb
mov
lret
iret
jle
std
sbb
loop
xor
push
jg
scas
es
je
sub
cld
es
push
addr16
jb
loopne
mov
pop
push
mov
jge
call
mov
mov
nop
add
mov
xchg
mov
loopne
add
mov
xchg
inc
lods
insb
pop
sub
inc
sbb
scas
mov
bound
fidivrl
leave
mov
and
mov
mov
mov
int
js
insl
out
js
push
in
xchg
leave
push
sub
dec
mov
mov
hlt
lret
jbe
loop
xor
push
pop
and
jecxz
outsl
fadd
iret
ja
sub
or
push
call
std
ja
sbb
sbb
icebp
xor
mov
rorb
mov
jge
and
mov
adc
mov
sbb
dec
les
push
pusha
pop
sbb
mov
dec
out
lods
cmp
sub
inc
es
fcomip
dec
inc
mov
sbb
and
jp
or
out
les
int3
and
pop
push
or
mov
out
inc
gs
shll
jp
cmp
out
cmp
and
or
pop
mov
lds
cmc
gs
mov
sub
clc
pop
loopne
xchg
ret
mov
xchg
mov
sarl
push
mov
addr16
push
stc
jecxz
push
int3
andb
int3
xchg
add
pop
add
addr16
sub
jle
aaa
call
fs
add
mov
push
int
xchg
dec
adc
xor
fistpl
es
and
and
fimull
loopne
mov
test
xor
cmp
xchg
fmul
loop
cmp
stc
arpl
mov
jg
sub
loop
stc
and
orb
or
mov
pop
push
pop
dec
dec
add
xchg
push
mov
inc
cltd
inc
shrb
xor
push
sub
subb
js
mov
pop
or
mov
popf
lods
mov
nop
popa
mov
mov
call
stc
mov
addb
sbb
cmp
xchg
jo
adc
ret
aam
js
xor
sub
pop
sbb
xor
push
jle
push
ret
mov
xchg
enter
in
dec
push
jmp
mov
xor
hlt
loope
inc
mov
dec
push
push
fldl2e
shlb
mov
jne
cmp
dec
push
bnd
adc
mov
repz
sub
cmpsb
loop
mov
lcall
scas
shrb
pop
dec
xchg
mov
and
lock
xchg
cmc
test
push
mov
hlt
jl
outsb
xchg
mov
mov
bound
lret
push
jecxz
divb
jno
les
rolb
out
mov
and
and
cmpsl
sti
fwait
clc
inc
or
mov
inc
sub
outsl
push
inc
inc
out
mov
js
dec
mov
pushw
aam
mov
pushl
mov
mov
stc
mov
shlb
cltd
cmp
sbb
es
aas
push
sbb
cmpsl
fdivs
mov
add
sub
jb
push
add
fldl
les
rolb
xchg
es
xchg
lret
enter
cwtl
mov
dec
cmp
cmpsb
pop
outsb
rcrb
jae
sbb
dec
pusha
push
in
js
mov
push
mov
sbb
inc
sahf
repnz
mov
outsl
enter
cltd
hlt
shll
out
fldcw
inc
lea
in
adc
ss
sbb
xor
jp
in
sar
call
xchg
mov
lcall
jo
out
cmc
mov
pusha
or
insl
or
xor
and
xchg
sti
push
push
mov
mov
insl
stc
push
xlat
scas
lea
std
cs
xchg
xor
jecxz
sbb
xor
fsts
mov
dec
shl
xor
in
jns
arpl
dec
sub
pop
divl
mov
add
jge
sub
je
push
mov
jne
mov
cmp
cmpsb
or
pop
stos
jle
mov
or
and
nop
loope
rorl
fcomip
cmp
fwait
ss
add
add
sbbl
inc
lods
sbb
lahf
aam
idiv
les
out
cmp
data16
add
jae
and
cmp
mov
push
ret
int
lea
pop
jle
cmp
xchg
mov
push
loop
fnstenv
adcb
out
and
imul
cwtl
pop
out
push
pop
bound
shll
popa
daa
out
dec
fsubrp
sbbb
int3
jge
pop
lret
sbb
movsl
inc
sub
jg
loopne
insb
hlt
pop
outsl
ds
iretw
push
sbb
dec
pushf
jecxz
jno
adc
push
test
fstpt
lahf
mov
and
test
mov
lock
inc
xlat
push
xchg
fwait
popf
inc
insl
add
adc
int3
sub
es
jb
push
xchg
sbb
clc
push
mov
cmpl
loop
icebp
ds
outsb
lret
icebp
inc
jecxz
lahf
add
and
jnp
cwtl
and
and
cltd
lahf
aas
into
icebp
stc
test
outsl
sub
dec
test
lock
stc
insl
out
movsl
pop
lods
sti
or
dec
mov
jo
pop
jle
push
shll
scas
mov
jp
xor
repnz
lods
in
pop
pushf
dec
mov
push
mov
mov
jg
repnz
in
cwtl
int3
adc
fwait
mov
insb
jnp
lret
mov
in
mov
mov
xchg
push
or
aas
sbb
mov
out
cmp
dec
fiadds
adc
mov
in
sub
imul
sbb
lcall
mov
add
xchg
mov
sub
fmull
dec
outsb
cmpsb
add
je
dec
xor
sub
ds
inc
and
movsl
mov
sbb
xor
iret
mov
stc
std
or
fmuls
stc
inc
adc
mov
sbb
sub
insb
adc
ss
add
xorb
mov
add
loope
dec
jge
ds
push
sbb
js
sarb
outsl
pusha
fadds
mov
movsb
insb
fcomi
jmp
lods
rolb
test
and
arpl
push
lahf
inc
mov
dec
jns
popf
push
mov
or
ret
xchg
dec
call
pop
into
sbbb
inc
push
pushf
push
adc
ja
std
jmp
clc
mov
dec
dec
sahf
addr16
ljmp
inc
push
rcl
push
lret
xor
jg
mov
iret
push
les
add
xchg
push
jns,pn
jecxz
mov
mov
jg
pushf
push
adc
push
xor
insb
mov
or
fwait
jno
add
jmp
ret
xor
push
mov
adc
pop
insl
cmp
popa
bound
fidivs
xchg
popa
loopne
cmp
pop
sub
mov
xor
aas
in
adc
fimull
jl
lods
lods
jnp
jmp
and
push
push
loopne,pn
es
pop
test
jmp
or
leave
out
scas
lods
lods
or
dec
mov
push
mov
mov
loop
inc
push
shll
add
test
pop
icebp
fcompl
cmp
mov
pop
nop
xor
lcall
fidivs
in
add
push
stc
or
or
jnp
jmp
pop
dec
or
inc
xlat
inc
mov
rolb
xlat
dec
sub
and
dec
jge
jmp
sub
sbb
jmp
mov
iret
fcoml
xchg
rolb
repnz
xor
add
mov
aas
push
hlt
mov
movsl
push
jge
pushf
mov
inc
xchg
out
cli
xchg
push
push
add
movsl
or
arpl
push
aad
in
dec
in
pop
inc
jle
into
inc
ss
pushf
cmp
imul
jg
pusha
or
pop
cld
mov
std
adc
ss
out
unpckhps
adc
pop
imul
mov
hlt
jl
push
sbb
xchg
xchg
sub
jno
stos
das
stos
mov
or
mov
sub
out
arpl
push
int3
scas
mov
cli
insl
adc
mov
fwait
adc
nop
and
push
pushl
xchg
stos
add
xlat
push
mov
flds
add
call
mov
imul
cld
mov
cwtl
aad
jl
add
xlat
sub
lret
and
dec
adc
insb
or
lcall
lahf
xchg
in
hlt
sub
je
adc
loopne
leave
adc
sub
out
addr16
movl
out
xor
jmp
ret
bound
mov
xchg
mov
test
insb
pop
bound
sub
out
inc
ja
pusha
adc
mov
xchg
fsubrs
cwtl
or
js
repz
sbb
cmp
and
jb
push
ffree
jo
insl
adc
aaa
ds
cli
pop
aaa
mov
or
or
sbb
mov
add
xchg
or
xor
movsb
incl
hlt
xlat
jns
mov
pop
inc
xor
cmp
adc
pop
mov
xor
jl
sub
cmpsl
out
ret
xor
xor
orb
es
xor
mov
inc
and
mov
xchg
aad
mov
imul
adc
lret
dec
inc
test
inc
add
add
xchg
call
or
out
cmp
repz
les
mov
enter
shr
lcall
dec
pop
fimuls
dec
xchg
mov
and
jmp
gs
mov
sbb
stos
outsl
pop
cmp
aad
icebp
mov
sub
push
sbb
subb
cmpsl
ds
addr16
clc
sbb
mov
cmp
xchg
push
bswap
ds
out
repz
add
mov
mov
push
sub
cld
daa
aaa
repz
pop
ss
jnp
movsb
add
push
sbb
jae
or
cmp
lods
jp
es
push
imul
mov
addr16
adc
out
cli
mov
cmc
stc
cmp
ret
in
lods
imul
fnstsw
jo
push
adc
mov
jbe
xorb
pop
push
ret
inc
jle
stc
and
jg
push
jo
movsl
sbb
and
xor
mov
call
push
cli
push
mov
lret
cmp
mov
fidivrl
pop
stos
test
inc
out
push
ljmp
popf
xor
cmp
pop
dec
pushf
and
lahf
xchg
push
mov
in
cmp
adc
mov
mov
push
push
pop
ds
cmc
mov
rcpps
adc
sahf
add
movsb
nop
hlt
or
lods
fwait
decb
fwait
vmwrite
jle
and
inc
lcall
es
outsb
jae
jg
sub
xchg
xor
sbb
pop
gs
cmp
dec
sbb
mov
push
xor
les
stc
aad
mov
popw
and
xor
dec
sar
push
sarl
les
cmp
fwait
mov
insb
inc
jnp
hlt
pushf
stos
lret
lahf
sbb
and
inc
mov
pop
mov
cmp
cmp
inc
lock
ljmp
dec
jae
push
or
rcrl
loopne
sub
sbb
xchg
popf
fcomps
out
add
or
in
aaa
sbbb
data16
dec
sbb
mov
and
out
icebp
aas
cwtl
mov
push
inc
std
aaa
aam
std
inc
mov
call
jnp
dec
push
adc
popf
mov
lret
pop
movsl
add
sub
pop
inc
cld
and
popf
mov
inc
inc
adc
cmp
out
lea
cld
sub
outsl
dec
loop
das
xchg
enter
mov
std
mov
lods
sbb
ret
cmp
in
push
cmp
mov
popf
xor
ss
dec
adc
sub
mov
rol
inc
les
and
add
roll
mov
mov
lods
and
imul
or
jp
hlt
scas
repnz
je
loope
sub
pop
dec
nop
out
mov
push
xor
mov
imul
xchg
inc
push
icebp
pop
loope
sbb
xor
mov
adc
sub
adc
ds
push
xor
pop
aad
sti
pop
jne
inc
les
or
test
push
std
dec
push
sbb
lcall
push
xchg
hlt
popl
stos
movsl
cli
aad
lret
int
inc
mov
push
pop
dec
jge
imul
pop
fldl
or
je
popf
sub
lock
push
cli
fnstsw
cs
xchg
mov
mov
or
push
mov
stc
jb
cmp
mov
bound
jb
jb
dec
test
addl
rcrb
test
push
adc
cwtl
adc
stos
sub
sub
pop
jne
xlat
jecxz
fucomip
mov
sti
push
xchg
lret
enter
scas
jl
xchg
adc
test
adc
cmp
xchg
mov
adc
das
js
add
cwtl
nop
cmpsb
mov
or
mov
sub
push
push
inc
cmp
shlb
lods
test
mov
mov
pop
fcoml
outsl
add
pop
add
adc
xchg
inc
lret
xchg
sbb
out
pop
outsl
into
xchg
hlt
mov
pop
jmp
mov
lods
iret
das
lret
cs
dec
mov
fldenv
addr16
xor
mov
fcoms
pop
stos
in
mov
and
shll
xchg
jp
mov
cmc
mov
xchg
mov
imul
xor
in
iret
pushf
inc
adc
insl
sbb
clc
fwait
mov
scas
mov
sbb
int
jo
mov
data16
pop
xchg
cmc
insb
inc
inc
mov
mov
in
in
pop
xchg
cmpsl
push
movsb
sti
fs
adc
add
lea
cld
scas
sahf
loope
dec
xchg
icebp
sub
inc
cmpsb
adc
es
pop
shrb
adc
sar
popf
mov
cmpsl
ds
movsb
hlt
repz
inc
loope
dec
sti
sub
pop
xchg
repz
xchg
cmp
cmpsl
xchg
sbb
fadds
aam
pop
loopne,pt
mov
lock
mov
out
xor
mov
jg
jge
xchg
rcl
fwait
imul
pop
shr
lcall
mov
loope
fs
decl
jbe
movsl
push
add
mov
xor
jae
mov
mov
gs
test
rolb
push
daa
jmp
out
icebp
jb
sti
outsb
or
and
cltd
push
add
sahf
dec
sbb
inc
pop
sar
in
dec
pop
fcmovb
cmp
pop
loopne
shlb
dec
idivl
js
jne
stc
mov
xchg
pop
pop
mov
mov
cwtl
inc
sbb
daa
fldenv
mov
shlb
mov
or
fiadds
movsb
xor
pop
cmp
dec
jae
jns
push
pop
mov
pop
out
mov
imulb
adc
xor
xor
jmp
lds
scas
cmp
jbe
xchg
mov
ret
fnstcw
das
sub
out
ret
int
xchg
inc
jnp
mov
outsb
inc
jno
dec
in
xchg
imul
mov
sbb
push
imul
std
push
fstl
push
test
das
rol
cli
push
test
xchg
xchg
dec
icebp
jmp
jge
xor
push
enter
punpckhbw
jle
jg
mov
or
jno
rcll
stos
gs
xor
push
lahf
mov
iret
ja
aam
movsl
das
adc
stc
push
hlt
dec
add
sbb
decb
lods
cmpsb
or
jno
jnp
arpl
pop
fsts
lods
and
ret
mov
ss
lret
movsb
jp
add
icebp
rcr
gs
inc
inc
add
adc
dec
pop
mov
or
movsb
and
xchg
xor
mov
push
xor
mov
sbb
das
cwtl
and
test
cmpsb
pop
push
mov
mov
fildll
and
in
pop
in
jle
cmpsl
xchg
daa
or
dec
lds
loope
stos
subl
movsb
xchg
pop
sub
mov
enter
mov
mov
icebp
adc
cld
int3
sbb
jns
cltd
test
fnsave
pushf
clc
out
lods
xchg
and
insb
mov
inc
outsb
in
mov
lret
rol
test
mov
vxorps
or
subb
lcall
loopne
gs
out
sbb
fdivs
es
cltd
mov
mov
sbb
das
test
xchg
ja
adc
xor
fldcw
inc
lcall
sbb
cmc
mov
jle
test
push
fnstsw
mov
pop
push
sbb
xchg
shlb
mov
or
bound
xchg
loopne
les
and
xlat
mov
je
shrb
sub
jb
xchg
imul
stos
aad
or
repnz
mov
mov
repz
xor
daa
and
pop
repnz
push
inc
scas
in
xchg
dec
aam
jge
outsl
jbe
test
mov
stos
xchg
push
gs
loopne
popa
ja
add
xchg
sbb
popf
ljmp
xchg
mov
mov
dec
dec
lea
pop
in
cltd
into
mov
lods
in
dec
mov
add
insl
imul
rolb
in
xchg
adc
push
xor
sbb
ss
jns
pop
aad
xor
jge
xchg
xor
add
std
inc
inc
mov
in
sub
hlt
fsubrs
or
insb
fistps
adc
cld
xor
cmp
dec
cld
push
xor
cmp
sbb
jb
and
mov
fcmovu
xchg
gs
cld
dec
in
push
push
and
dec
cmp
mov
enter
pushf
fisttpll
mov
in
mov
in
or
mov
mov
fsts
mov
getsec
movsl
in
mov
cmp
ljmp
pop
sbb
pop
add
lret
inc
jo
outsl
xor
lea
and
mov
or
add
jae
mov
call
xchg
cmp
fucomp
jmp
cmp
mov
push
or
jmp
xchg
sbb
aam
in
inc
repnz
xor
aaa
push
and
inc
les
mov
bound
dec
sarl
outsl
in
pop
enter
jb
sub
cmpb
clc
fisttpll
sbb
cmp
jecxz
inc
movsb
rcrl
repz
call
addr16
outsl
jns
jne
jbe
cmp
sahf
sbb
push
leave
mov
and
and
mov
add
outsb
lret
fisubrs
je
pop
cmp
sbb
lock
lea
sbb
scas
or
in
push
decb
xlat
cmpb
mov
ret
push
mov
sub
movb
movsb
bound
fs
rcr
popa
mov
xor
in
ret
add
cmp
sbb
cmp
imul
dec
xor
mov
lods
iret
arpl
or
mov
movsl
lret
movsl
push
out
mulps
das
add
xchg
and
or
adc
or
mov
leave
add
inc
cld
popf
push
pop
loopne
add
pop
enter
mov
mov
cmp
xor
fistpll
or
xchg
setns
or
xchg
jle
sbb
xchg
sbb
inc
inc
ss
and
jns
xchg
dec
push
pop
inc
mov
mov
sub
movsb
push
and
aaa
lock
test
jle
mov
pop
and
push
mov
pop
add
xor
call
or
aad
je
subl
mov
pop
mov
xchg
iret
popl
addb
adcl
icebp
cli
lcall
lds
arpl
lods
adc
sbb
mov
das
adc
inc
mov
and
mov
fdivrl
sbb
fdivl
mov
into
adc
or
xor
xchg
mov
push
lods
call
sbb
xchg
or
add
sub
push
jmp
sbb
mov
cwtl
pop
sbb
insl
jnp
inc
mov
cs
or
int
cmpsb
std
fcoms
cs
test
cwtl
inc
or
cli
pop
dec
cld
mov
xor
dec
scas
inc
stos
insl
daa
push
mov
push
out
jne
or
aaa
pusha
adc
dec
inc
cmpsl
and
inc
fdivrl
ret
push
pop
push
mov
sbb
add
mov
sbb
pop
aad
mov
scas
stc
repnz
jl
push
pop
dec
data16
out
orb
jl
std
push
pop
stos
pop
dec
fldenv
arpl
repz
out
or
in
movsb
or
pop
gs
shll
ficoms
subl
add
xchg
mov
pop
cmp
pop
pop
bts
mov
jae
outsl
inc
jnp
in
adc
or
fimuls
aaa
sahf
sub
add
and
mov
fstl
aaa
and
sbb
dec
aad
and
mov
notl
xchg
jbe
pop
rcrb
or
fmul
pop
sbb
xchg
das
inc
sub
aaa
pop
nop
jbe
lret
imul
dec
cmp
int3
vprotq
pusha
add
lds
rclb
scas
inc
lret
arpl
or
insl
mov
lret
stos
pusha
cld
es
addb
bound
nop
lcall
dec
dec
jl
or
inc
add
mov
stc
ja
mov
jg
int3
cmp
mov
sbb
enter
sbb
std
or
scas
sbb
mov
jle
ss
popa
or
mov
cmpsl
push
or
push
fldl
adc
mov
adc
aas
inc
jae
daa
inc
mov
cs
cmc
or
lods
stos
dec
dec
loopne
push
adc
jecxz
test
loopne
cld
or
or
imull
sub
out
push
pop
adc
cmc
outsb
and
push
das
jge
push
adc
add
dec
xor
mov
add
sahf
sahf
leave
sub
fstp
xchg
loopne
cmp
push
or
std
test
push
xor
in
cld
mov
shlb
push
imulb
into
call
mov
cmpb
mov
in
xchg
xor
stos
mov
mov
cli
addr16
push
xchg
int
fs
jb
pop
and
loope
add
push
ja
jae
test
pop
xchg
inc
int
xchg
push
mov
jl
cmc
cmp
imul
xor
inc
sub
popf
js
imul
mov
lahf
lcall
repnz
pop
daa
jb
test
inc
xor
loopne
jne
enter
push
cmp
fs
cs
xchg
into
leave
test
jo
jp
xor
mov
clc
jmp
imul
xor
fs
fwait
ljmp
adc
aam
jl
repz
mov
sub
scas
dec
lcall
pop
or
cmp
aad
cmp
cmpsb
addb
scas
rorb
xlat
mov
push
ljmp
cli
shrl
add
int3
mov
aaa
xor
push
dec
mov
and
arpl
fadd
adc
mov
sub
push
sbb
shll
pop
jle
pop
dec
push
mov
mov
add
or
cli
rcrb
sub
mov
sarl
frstor
es
cltd
and
test
aaa
test
faddl
sbb
stc
clc
fsubl
adcl
int3
es
pushf
sti
mov
cli
xlat
lea
popf
cltd
into
push
dec
mov
pop
mov
fnsave
jl
adc
lret
ds
shlb
bound
repnz
and
inc
pop
lods
push
test
stc
lahf
xchg
es
ds
mov
push
rorb
sbb
push
ret
popa
sub
and
push
sarl
bound
fdivr
pop
mov
adc
data16
xchg
lock
insl
push
pop
out
adc
clc
push
testl
push
into
dec
imul
subl
test
xchg
test
jmp
repz
je
test
pop
repz
data16
sub
sub
xlat
sbb
cs
test
mov
pop
pop
enter
std
sub
jge
pop
add
insl
jae
jns
dec
into
add
or
push
cmpsl
jl
movsb
inc
and
fisttps
lret
inc
inc
sub
jno,pn
cld
push
movsb
ja
aas
pop
int
aam
jnp
jno
cmp
enter
arpl
lock
pop
cltd
neg
jmp
and
lahf
fwait
into
popa
xorl
xchg
pop
mov
inc
and
sbb
lahf
xor
mov
mov
inc
int
mov
das
mov
leave
xchg
xchg
hlt
xlat
fbstp
push
cmp
pop
ffree
fcomip
cwtl
xchg
xchg
fimull
mov
scas
lods
mov
aaa
outsb
shl
mov
outsl
stos
mov
jb
negb
jg
jp
dec
push
xorb
iret
mov
movsb
cmc
lds
arpl
jg
sub
cmp
pop
popa
or
int3
cltd
mov
adc
repnz
mov
sub
divl
or
loopne
es
jbe
mov
nop
movsl
inc
push
xchg
shlb
cmp
and
je
test
daa
ljmp
hlt
arpl
xlat
cltd
in
sbb
or
call
into
or
and
nop
fimuls
jbe
loopne
mov
push
jns
adc
and
inc
lds
or
xor
sub
movsl
orl
mov
fdivs
xchg
imul
jnp
hlt
andb
adc
inc
mov
xchg
push
mov
idivb
cmpsb
call
pop
dec
jge
pop
pop
cmp
insl
test
or
repnz
pop
xor
xchg
les
lods
xor
pop
inc
lea
lock
clc
xchg
scas
les
in
lret
and
and
insb
mov
add
popa
shll
cmpsb
jp
sar
scas
xor
or
ja
xlat
push
les
mov
cmpb
testb
das
push
das
movsl
fmull
fs
sbb
sub
jmp
pop
jbe
lock
inc
fcmovnbe
sub
ljmp
fldl
mov
js
ljmp
repnz
mov
lods
push
xchg
cli
test
inc
or
sbb
bound
mov
add
sub
imulb
fistpll
mov
rol
dec
mov
mov
repz
out
and
push
popa
imulb
jge
xor
inc
ss
cltd
and
add
cmpsb
push
pusha
inc
push
es
push
adc
inc
jnp
or
mov
pop
out
lea
stc
push
sub
daa
mov
xor
leave
cmc
cmpl
lret
jb
mov
jge
test
out
and
jl
mov
prefetch
aad
xchg
nopl
push
les
and
and
sbb
iret
mov
imul
sbb
mov
add
cmp
dec
adc
jl
dec
fdivs
push
fbld
scas
add
pop
lods
cmpsb
xchg
mov
outsb
mov
in
cli
xchg
xchg
rcr
int
or
pop
lods
cs
sbbl
insb
dec
je
jno
push
imul
or
in
xchg
cmp
cltd
pop
mov
mov
xchg
dec
sbb
jnp
jae
into
xchg
cmp
push
int
fsubrp
push
vaddsd
out
mov
shl
mov
inc
outsb
test
daa
sti
inc
nop
fnsave
pop
rcrl
popf
mov
ret
or
xor
mov
inc
call
mov
inc
add
mov
in
push
imul
jae
lret
ret
fldl
push
insb
or
lahf
jae
test
fs
sbb
pop
mov
or
dec
into
imul
ja
cmp
js
popf
stos
lods
aaa
rcrb
aas
ja
pop
jl
dec
push
ret
jge
jg
test
adc
pop
pop
popa
leave
aas
pusha
mov
push
fwait
sbb
in
pop
out
mov
mov
inc
adc
jae
popf
dec
adc
enter
bound
jmp
test
loope
xchg
pop
icebp
lods
popf
js
dec
aaa
xor
cltd
cli
arpl
out
xchg
int
sbb
mov
jmp
jmp
dec
test
cmpsb
sbb
stos
repz
ret
xlat
into
loope
stos
mov
pop
inc
xor
setle
xchg
jae
outsb
fnstenv
add
adc
in
iret
sub
hlt
mov
and
sub
inc
and
pop
dec
xor
mov
adc
js
or
iret
or
mov
bound
jl
sar
outsb
fisttpl
push
pop
lods
add
jo
add
ljmp
add
jne
fsubrs
cmpsb
in
pop
pop
pusha
ret
lods
int3
pop
add
arpl
sub
dec
sub
stc
jmp
inc
add
sahf
mov
daa
jle
mov
push
lret
sbb
jnp
and
lock
jl
push
push
inc
daa
add
pop
push
jo
insl
or
mov
stc
jg
lods
aam
add
add
ds
daa
dec
stos
sbb
in
cmp
adc
es
sbb
outsb
xchg
xchg
sub
dec
pusha
testl
adc
data16
sub
cmp
imul
mov
hlt
call
adc
imul
push
jg
gs
les
jl
lcall
add
jmp
inc
xchg
mov
mov
mov
stos
cwtl
lock
or
hlt
fstps
cmpsb
andb
call
inc
jmp
call
pushf
mov
or
inc
push
mov
or
out
pop
stc
fstps
inc
loope
mov
and
jo
popf
popa
sbb
pop
push
into
push
dec
ficoml
ja
and
or
sub
xchg
nop
in
push
push
movsb
call
add
insl
pushl
xlat
rcrb
and
adc
out
push
push
sub
mov
pop
fidivs
movsl
out
jg
lret
jae
pop
mov
push
faddl
inc
dec
adc
or
sbb
push
mov
mov
js
shll
jne
mov
mov
push
mov
popa
jle
into
cli
pop
add
fwait
aam
sub
pop
stos
rcl
outsl
fnstsw
addr16
mov
mov
in
fs
movsl
lret
jg
mov
mov
mov
mov
push
inc
sub
insl
dec
and
cmc
in
dec
push
add
fcomps
xchg
adc
push
xchg
es
or
adc
jg
lods
sbb
shlb
and
mov
int
xchg
out
lock
xor
ljmp
mov
mov
add
lret
jmp
mov
ss
pop
movsb
js
mov
push
xlat
popf
fwait
xchg
cld
pop
je
test
aam
test
and
fdivrp
cmp
inc
xlat
lret
mov
sarb
icebp
imul
pop
sarb
sbb
out
leave
scas
test
cld
jp
clc
icebp
pop
add
gs
xchg
scas
xlat
test
lahf
ja
fists
xor
xor
jle
jb
push
or
jp
sarb
sbb
cmp
dec
dec
pop
mov
push
or
push
mov
shlb
mov
jg
sbb
test
pushf
mov
lret
dec
pop
mov
sub
test
push
and
and
fidivrl
adc
add
inc
cmp
fdiv
jno
dec
insb
fst
clc
cmp
xor
fistl
xor
cltd
inc
sub
push
mov
mov
lcall
and
notb
and
pop
rsm
orl
pop
mov
call
xor
xchg
stos
add
add
push
inc
mov
dec
jl
xchg
or
jae
pop
test
movsb
cltd
add
in
insl
ja
and
mov
push
inc
ficoml
jo
aas
pusha
push
jne
mov
outsl
mov
hlt
adc
cmp
dec
lret
in
pop
cmc
cmc
cmpsl
insb
xchg
or
test
adc
push
data16
out
inc
lret
dec
or
ret
push
jecxz
mov
and
in
or
dec
inc
nop
add
dec
jge
mov
das
mov
into
cmp
test
mov
xchg
xchg
fs
mov
jmp
loope
pop
add
jnp
test
ficompl
test
jbe
jl
jl
lcall
jg
pop
lock
fwait
imull
in
xchg
jg
mov
psllq
fnstenv
or
popa
mov
idivb
out
and
jno
outsb
adc
outsl
insb
pop
push
addr16
jge
xchg
or
imul
fstl
adc
cmp
and
mov
scas
pop
ret
jecxz
push
outsb
mov
fimull
mov
jns
push
les
insl
cli
sarl
fisttps
adc
mov
jecxz
fisubrl
ds
add
adc
mov
loopne
xlat
adc
mov
scas
lods
bound
js
cmc
sti
sbb
scas
ljmp
jno
pushf
push
sbb
jge
pop
push
jo
lods
stos
mov
ret
cs
es
fwait
xchg
arpl
push
lcall
cld
lds
sti
fmuls
mov
or
lods
scas
je
lds
mov
loop
loope
cmp
mov
mov
cmp
pop
mov
mov
in
dec
and
push
jl
or
pop
repz
loope
mov
sarl
in
clc
out
sbb
push
stos
adc
pop
sahf
loope
mov
xchg
rorb
xor
mov
daa
cmpsl
mov
fcomip
pop
sub
cltd
outsl
fildll
xor
orl
sub
popf
stos
pop
lods
mov
mov
aas
std
hlt
sub
outsl
jnp
mov
rcpps
dec
les
out
fiadds
shlb
adc
es
xor
sbb
mov
pop
addr16
mov
sbb
fldcw
scas
cmp
dec
out
and
std
jbe
mov
xor
inc
add
xor
stos
out
xor
pop
cli
xor
add
ljmp
scas
enter
repz
jg
scas
pushf
movsb
mov
or
lds
or
mov
jne
subl
jno
ja
int3
xor
data16
xchg
aam
shr
xchg
cmc
test
sub
xchg
inc
xchg
pop
adc
repnz
mov
cld
jne
xlat
scas
pop
xor
push
pop
dec
and
ret
sbb
push
stos
bound
jp
cli
bound
jo
jle
stc
mov
push
addr16
sar
test
bound
les
clc
mov
das
sub
dec
pop
imul
fdivp
lret
push
jo
pop
push
mov
setae
add
and
sub
dec
mov
loopne
es
push
scas
insl
lcall
in
loope
rcl
sbb
inc
jnp
push
ds
pop
sbb
pop
xor
gs
pop
xchg
rclb
mov
add
xlat
fldenv
lock
push
aas
xor
xchg
scas
xchg
out
jne
jmp
mov
push
aaa
aam
rorl
sti
and
cmp
pop
nop
push
out
movsb
mov
xor
movsl
fstps
jns
test
call
jne
adc
imul
add
fimull
jmp
add
adc
lcall
ret
inc
pop
out
aad
aaa
rcl
sahf
arpl
push
xchg
xchg
xchg
inc
push
push
inc
push
jge
mov
push
outsl
pusha
call
in
mov
sub
mov
insb
pop
incl
sti
pop
mov
push
jge
sub
insl
xchg
push
adc
push
sbb
jae
data16
mov
mov
neg
sub
aas
and
inc
stos
cmp
sub
ss
jb
xor
clc
jg
mov
xor
call
out
mov
push
inc
fdivrl
loopne
mov
jb
jae
mov
jmp
cmpsb
sti
cmp
mov
aad
out
cld
jnp
stc
sbb
inc
dec
icebp
pop
xor
sub
jge
mov
xor
leave
insl
push
jno
into
stc
mov
aaa
sarl
neg
push
xchg
jle
mov
mov
adc
or
cltd
inc
mov
rolb
movsl
xchg
inc
mov
daa
out
iret
inc
xchg
mov
mov
and
shl
xchg
and
sbb
cltd
pop
jns
and
pop
xor
xchg
leave
cmp
and
mov
sub
iret
dec
pusha
and
jne
daa
pop
jecxz
jl
shlb
sub
dec
adc
arpl
xchg
sub
arpl
shlb
scas
push
mov
adc
mov
jne
sbbl
in
imul
icebp
sub
int
jmp
xchg
push
sub
inc
sbb
and
inc
lds
stc
dec
test
jmp
fdiv
xor
mov
mov
test
xchg
jbe
jecxz
in
mov
push
xchg
pop
dec
pop
add
fistpl
mov
xor
fstl
mov
sbb
sbb
insb
xchg
jns
jle
pushl
jp
aaa
into
add
add
sub
js
sti
adc
insl
push
aas
shrl
ret
mov
inc
pop
pushf
sbb
xor
push
arpl
adc
adc
sbb
leave
and
sbb
fdiv
pop
pop
in
loop
or
xor
xor
and
push
das
mov
xor
pop
cmp
sbb
or
dec
sub
sbb
dec
dec
mov
mov
jb
loopne
adc
cmpsl
sti
jnp
dec
ret
add
lods
add
pop
in
insb
repnz
dec
xor
adc
repnz
popf
rorl
mov
in
cmp
scas
xlat
mov
push
mov
ljmp
popa
in
pop
bound
inc
fstpl
or
lcall
xor
stos
rorl
cmp
jmp
inc
xchg
mov
dec
test
idiv
or
push
dec
inc
or
mov
loop
mov
inc
cmp
imul
mov
lods
jb
ljmp
mov
xor
xchg
testb
cmp
roll
mov
addr16
repz
insb
add
int3
pushf
pop
pop
iret
out
aas
and
cwtl
mov
push
dec
mov
addr16
pop
movsl
dec
mov
fisttps
adc
inc
mulb
add
and
es
xchg
sahf
mov
dec
and
jbe
roll
out
rclb
pop
scas
sbb
out
fstpl
scas
or
call
out
fcmovne
xchg
sub
xchg
fisubl
outsb
mov
jg
dec
xchg
cld
aad
pop
and
sti
je
and
jo
clc
addr16
push
dec
aam
or
xor
fucom
sub
jbe
pop
add
cltd
pop
sub
out
imul
push
mov
out
mov
clc
lods
int
inc
sub
dec
bound
jb
jle
cli
shll
xchg
test
lea
lea
cmpl
mov
mov
inc
jb
out
sti
popa
dec
ret
mov
mov
pop
mov
sahf
cltd
mov
les
sub
xchg
loop
stc
xchg
inc
add
icebp
push
insl
mov
adc
pop
rdpmc
xor
scas
cmp
inc
mov
pop
push
push
stos
mov
jmp
test
pop
mov
dec
ja
sub
pushf
lret
test
or
nop
xchg
lods
outsb
nop
popf
je
mov
sub
jle
insb
pop
sub
shlb
fs
std
rolb
and
xor
xchg
adc
pop
cli
in
adc
ds
cmp
cld
mov
inc
add
fwait
sub
xchg
aas
fs
jns
test
movsb
jns
xor
pop
xchg
mov
out
dec
add
not
ds
mov
in
sahf
fsubl
pop
inc
cmpb
pop
stos
xchg
lcall
mov
mov
sbb
xchg
sub
icebp
test
ds
xor
jne
in
mov
cmp
rolb
pop
data16
xor
mov
clc
ljmp
ret
cmpsb
xor
inc
dec
pop
and
fsubrp
mov
mov
cmp
jmp
jmp
ds
dec
movsb
cmp
jp
cmp
or
roll
mov
ja
dec
push
add
adc
imul
ffreep
jae
mov
sar
pusha
jg
sub
pop
xor
imul
in
icebp
dec
sub
lods
jb
push
out
jbe
dec
add
inc
mov
cwtl
mov
loop
or
pop
mov
mov
adc
inc
testl
push
test
arpl
inc
or
pop
mov
bound
mov
push
fstps
pop
int3
dec
lea
gs
sbb
xchg
add
insb
scas
std
mov
loope
sub
sarl
movsb
subb
addb
dec
jno
lret
jns
mov
sbbb
mov
push
mov
repnz
adc
enter
into
sbb
adc
movsb
sub
loope
jg
ljmp
inc
out
mov
mov
xchg
inc
cmp
loop
cmpsl
leave
cmp
out
outsb
push
lea
sbb
dec
mov
mov
sbb
in
and
and
aad
imul
sub
mov
add
pop
subl
popa
xor
inc
pop
cmc
int
in
mov
adc
movsb
fcmovnbe
arpl
add
imul
outsl
jl
xchg
pop
jmp
cmp
inc
xrelease
push
test
sbb
and
cmpb
lock
lock
pop
mov
fcompl
shlb
xor
movl
xor
fistl
ror
shll
orl
mov
pop
sarb
in
pop
inc
lods
bound
lods
test
test
fimuls
out
ficoml
dec
adc
punpckldq
inc
lret
and
and
xchg
ljmp
lea
loop
cs
add
bound
cmp
lea
out
push
stos
push
cmp
test
mov
shll
jne
fldl
or
or
pop
xchg
lock
pusha
or
outsb
mov
mov
lea
movsb
xor
cmp
inc
adc
dec
lea
andl
sub
jg
shlb
push
lcall
xchg
notb
in
push
cld
xor
out
xchg
int3
mov
into
in
mov
jns
cmp
mov
mov
push
rorl
sbb
mov
mov
cmp
sahf
push
mov
stc
mov
dec
ja
fbld
push
testb
mov
jne
aam
pop
aad
adc
int3
xor
rorl
leave
popa
leave
mov
scas
stc
inc
lods
mov
fs
into
test
adc
test
mov
lcall
insl
mov
push
stos
jbe
mov
cmpsl
xchg
mov
xlat
arpl
mov
fdivs
cld
aad
iret
aas
divb
mov
inc
mov
int
pop
js
dec
add
std
arpl
loopne
inc
loopne
shlb
mov
sbb
mov
push
cld
inc
add
out
mov
fstps
outsb
loope
mov
sti
add
cmp
loop
fcmovnbe
and
cld
fs
aas
and
mov
fisubl
sub
jnp
mov
or
or
ds
sub
popf
stos
mov
sahf
cld
fldl
hlt
icebp
nop
jge
push
ret
xchg
in
and
add
sub
adc
daa
sbb
push
cmp
add
fidivrl
mov
push
int
cmc
lds
adc
shlb
jle
aaa
enter
mov
test
ja
xor
jne
clc
add
push
jp
adc
jge
enter
in
div
or
sub
pop
dec
out
imul
sub
int
pop
adc
push
pusha
jl
cmpb
cmp
scas
push
inc
roll
loopne
or
xchg
fiadds
push
xor
popl
loop
mov
adc
dec
push
cmp
test
and
push
xor
add
popa
cwtl
cltd
aas
repz
mov
out
sbbl
push
mov
imul
push
int3
out
mov
adc
xor
cmpsl
lods
loopne
loopne
pop
jns
arpl
negb
arpl
icebp
ja
int
leave
or
leave
mov
in
adc
sbb
pop
stos
xchg
das
lea
mov
js
fidivl
icebp
in
dec
hlt
inc
std
cmpb
into
insl
push
leave
push
jb
stos
arpl
inc
sti
mov
insl
pusha
loop
sub
push
mov
xchg
lods
dec
insl
lret
por
pop
outsb
xor
xchg
jp
and
into
xor
dec
aaa
dec
mov
imul
aaa
inc
push
add
aam
dec
push
lret
scas
mov
fldenv
push
or
inc
xchg
shll
scas
or
adc
and
mov
shl
cmp
ret
inc
inc
xor
sbb
stc
fidivrs
aas
jmp
push
fdivrs
adc
dec
pushf
js
sub
test
pop
or
jle
in
lret
add
out
incb
ja
xchg
test
ds
mov
add
push
lahf
arpl
push
pop
sub
dec
adc
das
pop
fldl
nop
fs
inc
ret
std
xor
xchg
xor
movsb
clc
jmp
cs
adc
sub
orl
xchg
sbb
in
push
inc
cmp
fmuls
cltd
in
xor
in
sub
sbb
xchg
idivl
divb
jle
mov
mov
and
icebp
sti
xchg
outsl
sbb
mov
cwtl
sbb
mov
dec
cmp
pop
hlt
adc
sub
add
test
arpl
dec
cld
orb
loope
mov
mov
lock
push
out
dec
mov
fsubs
or
cmp
ret
rorl
mov
sub
ds
fisttps
pop
jle
push
popf
sbb
jge
daa
xchg
or
jp
or
test
and
ret
in
push
test
inc
imul
in
fldt
jmp
in
call
xchg
pop
push
mov
sti
popa
andl
into
bound
xchg
inc
popa
dec
fstpl
mov
jecxz
fadds
loop
outsl
outsb
mov
fcmovb
into
dec
or
lret
xor
adc
lret
dec
xchg
xor
mov
pop
dec
in
sarl
mov
movsb
adc
inc
lcall
sbb
xor
mov
jmp
jne
xor
jno
cmpsb
lock
loopne
lods
leave
inc
imul
sub
pop
ja
and
bound
les
stos
mov
or
sub
or
push
insb
add
add
xor
out
call
aam
mov
ret
scas
jmp
test
addr16
jmp
leave
hlt
scas
lock
pop
cmc
fbld
int3
jge
push
arpl
mov
sbb
aas
mov
scas
clc
sbb
add
adc
mov
adcb
push
movsl
mov
push
pop
adc
movl
sbb
push
aam
incl
enter
adc
loope
xor
xor
mov
dec
pop
dec
iret
js
nop
cmpsl
imul
hlt
adc
test
dec
imul
jl
xchg
shll
dec
fildll
pop
outsl
cltd
cld
sbb
cmpsl
sbb
sbb
je
adc
xchg
testl
out
enter
popa
push
mov
pop
fimull
inc
mov
aam
repz
mov
mov
enter
in
jg
lock
add
inc
adc
pop
vcvtdq2ps
inc
insl
orb
cltd
xor
cmp
adcb
adc
sarb
xor
test
repnz
stos
aad
adc
stos
inc
jo
sub
repnz
fcoml
add
jl
push
insl
xor
int
jb
mov
xchg
jnp
rorb
not
test
push
stc
add
daa
push
push
loope
mov
mov
mov
imul
hlt
or
push
xchg
ds
lret
sbb
sub
fnsave
je
inc
lret
pop
or
pop
add
lock
shlb
mov
stc
adc
popa
lea
lods
mov
out
sti
jecxz
xor
xor
mov
lea
dec
adc
cmc
adc
fsubrs
ja
mov
mov
aas
adc
and
xchg
push
ret
cs
or
xchg
mov
inc
lret
clc
cmp
cs
xchg
mov
jo
lods
pusha
adc
aas
fsubrs
lods
cmp
sub
inc
cli
repnz
test
inc
xchg
dec
mov
les
es
jnp
inc
sub
lea
ss
and
add
fwait
cwtl
adc
cwtl
mov
pop
mov
dec
xor
in
mov
xchg
scas
xchg
mov
ja
inc
fwait
xor
and
shlb
clc
add
popf
mov
fwait
cmp
sbb
lahf
movsb
call
test
shl
aas
and
and
insb
and
sti
xchg
inc
icebp
mov
scas
arpl
or
xor
jno
lock
lret
imul
ret
push
jl
xchg
mov
jno
mov
pop
lods
sub
gs
xor
fidivs
rclb
mov
out
daa
push
pop
jp
insb
enter
mov
and
int
jo
dec
push
lret
sbb
fwait
push
xchg
mov
int3
test
dec
mov
sbb
mov
psubusw
mov
mov
adc
cli
pop
jmp
pop
faddl
repnz
mov
jecxz
dec
fnstsw
xchg
inc
fisttpll
xor
cmp
jp
incl
mov
mov
sub
ljmp
stos
test
add
sbb
fwait
push
dec
pop
lock
sbb
or
mov
pop
jge
int
and
rclb
ljmp
inc
pop
fstps
xchg
xor
jb
inc
movsb
fwait
push
out
jno
mov
and
stos
repz
jns
int3
add
jmp
cmc
mov
xorl
aad
daa
hlt
cmp
iret
or
aam
cltd
jne
in
jge
leave
hlt
stos
insb
test
cmp
mov
jge
fmul
mov
dec
xor
xor
popf
xchg
fs
es
popa
test
cli
decb
or
mov
sub
jns
mov
movsl
fmuls
jmp
std
push
mov
adc
fsubp
paddusb
cmp
inc
divl
mov
jmp
add
in
xor
scas
cmp
sbb
stc
cmp
mov
lea
dec
addb
lods
sub
fcoml
icebp
add
lahf
mov
dec
pop
inc
cmp
and
lahf
jns
daa
cmp
movsl
cli
int3
add
xchg
lods
adc
loopne
xor
enter
sbb
mov
aam
nop
pop
add
lods
add
dec
hlt
fstps
mov
sbb
dec
jae
test
mov
clc
ficomps
jno
cmp
rcrb
sbb
je
push
shl
xor
data16
and
mov
cld
jg
jns
mov
cmp
inc
ljmp
cmp
push
adc
push
aam
dec
push
and
clc
mov
mov
aas
cltd
jno
cmp
test
fwait
xor
jns
int3
pop
inc
orb
xor
in
mov
pop
mov
test
fldcw
pop
mov
adc
pop
je
sub
rcl
xchg
jne
testb
push
sub
cmpsb
cli
shll
decl
jge
adc
sub
loop
inc
and
pop
cmp
adc
rcr
faddl
ds
in
or
pusha
nop
jae
in
lahf
xor
add
mov
push
push
xchg
gs
pusha
jg
lcall
lock
int
mov
sahf
push
dec
mov
xor
scas
jmp
cs
lret
inc
pop
xchg
push
mov
jl
daa
pop
cmp
adc
rclb
fdiv
lock
adc
int
cmp
xlat
iret
push
out
pop
pop
xor
gs
sbb
shlb
lods
sub
mov
cmp
adc
adc
dec
or
sbb
pop
scas
and
xchg
mov
in
xlat
and
lret
cmp
mov
mov
and
repz
ljmp
sbb
inc
ret
xor
jp
aad
es
adc
fdiv
mov
sub
ljmp
adc
out
xlat
pop
or
mov
push
or
out
dec
sub
push
sub
add
scas
arpl
out
imul
lods
fimuls
mov
lds
inc
into
insl
mov
push
dec
loopne
rcl
mov
mov
cmpb
in
mov
out
sti
or
ficoms
fildll
xor
push
nop
mov
gs
movl
shlb
in
out
or
jg
jno
and
adc
lret
xchg
mov
stc
inc
call
mov
jnp
lret
lods
in
jno
mov
sbb
inc
xchg
inc
mov
les
cli
jp
mov
fnstcw
adc
jmp
inc
cltd
sub
mov
mov
lcall
push
inc
inc
pop
dec
les
lret
js
dec
mov
push
mov
jo
aad
jl
inc
ret
fidivl
jmp
gs
push
loopne
push
xor
mov
arpl
cmp
mov
sbb
push
sbb
aad
stc
mov
inc
or
sub
andl
jl
adc
mov
enter
clc
push
ds
outsl
loop
inc
outsb
out
sub
sub
mov
adc
or
wrmsr
stos
or
nop
fsubs
sub
aam
aad
jmp
dec
jle
push
stc
cwtl
stos
rorb
lahf
subb
nop
sti
leave
jnp
rorb
das
pop
hlt
or
pop
popa
imull
xor
push
movsb
mov
stos
fnstsw
pop
push
xorl
aam
fsubrs
adc
inc
jge
and
jg,pt
jns
das
iret
jnp
and
adc
pop
mov
loop
aam
jle
push
ljmp
pop
les
ljmp
stos
fs
push
inc
loope
es
loope
add
jo
jge
movsb
push
fwait
sbb
add
xor
push
addl
lock
mov
mov
cmc
aaa
push
cmc
testl
decl
lret
popf
pop
fcmovne
mov
cmp
mov
jnp
inc
popf
sbb
mov
add
cmpsb
daa
in
and
fwait
add
andl
mov
pushf
aad
lcall
int
aam
cmp
or
popf
xchg
scas
fwait
dec
movsl
and
shll
sub
int
adc
jecxz
sub
fldenv
adc
out
mov
mov
xchg
and
sahf
adc
mov
pushf
mov
scas
cmpsl
push
test
jo
ss
pop
test
aaa
mov
push
clc
sbb
aas
sbb
inc
movsl
xor
jecxz
lret
lcall
inc
xchg
mov
sbb
inc
add
test
imul
mov
xchg
jbe
add
int3
dec
fimull
mov
scas
sub
mov
mov
test
sarl
adc
mov
push
jo
cmp
inc
stc
mov
push
sbb
or
test
mov
aaa
adc
imul
loop
out
add
or
icebp
rep
sti
jb
daa
lds
or
mov
mov
out
bound
and
xor
xchg
aaa
jne
test
jge
pushf
mov
lods
push
jne
pop
sub
xor
push
pop
xchg
pushf
aas
or
or
popa
mov
stos
subl
sbb
bound
sbb
and
mov
int
jle
push
lods
mov
in
shlb
cmp
inc
jecxz
dec
movsl
aam
loope
ds
inc
mov
loopne
push
xorl
or
mov
adc
out
in
push
mov
cmp
sub
push
mov
stc
push
mov
jmp
sbb
or
leave
out
push
mov
mov
xchg
icebp
ja
fwait
push
clc
in
cmp
add
les
push
sbb
jo
add
lret
push
fimull
add
out
repnz
fnsave
push
and
or
ret
jecxz
imul
dec
bound
stos
rolb
pop
and
icebp
push
dec
gs
xchg
lahf
mov
push
hlt
inc
adc
xor
sahf
test
inc
clc
addr16
enter
adc
pop
push
ss
xlat
pop
out
xchg
idivb
mov
lret
mov
loopne
push
mov
mov
mov
in
xor
mov
pop
sar
xor
pop
sub
in
pushf
xchg
ljmp
pusha
mov
inc
add
jg
mov
lea
xchg
jo
cltd
hlt
jge
cmp
push
sub
xor
mov
sub
data16
push
add
xchg
adc
pop
dec
cmp
rcrb
dec
sbb
sbb
pop
cmp
ret
inc
cwtl
sub
xor
pop
pop
mov
mov
fbld
scas
push
xorb
stos
cwtl
pop
push
pop
dec
scas
jmp
out
jecxz
jns
clc
pusha
and
repnz
xlat
dec
jp
test
and
outsb
sbbl
xor
pop
and
in
sarb
movsl
iret
fwait
les
mov
lahf
pushf
sub
adc
push
sbb
mov
xchg
out
jmp
mov
ficoms
int3
adc
push
subl
sub
rcll
dec
data16
adc
mov
xor
shll
into
test
aas
pop
mov
fs
cmc
int3
insb
test
jg
loopne
lods
test
sahf
inc
push
and
mov
mov
pop
vpmullw
repnz
daa
jo
lea
fidivs
shll
and
fldenv
pop
pop
std
sub
add
leave
fildl
xchg
inc
jnp
je
sub
repnz
js
mov
jecxz
shlb
mov
lock
and
dec
into
adc
mov
and
mov
insl
popf
repnz
fs
adc
ds
and
add
scas
aaa
movsb
jmp
test
sahf
in
mov
jnp
mov
xor
sbb
dec
in
and
jb
insl
pop
ljmp
arpl
mov
sub
inc
mov
call
push
mov
cmc
pop
loope
xor
mov
pop
shll
add
xchg
clc
in
mov
les
ss
mov
insb
insb
dec
int3
lcall
ret
add
push
add
dec
lcall
roll
lret
scas
mov
push
dec
dec
ljmp
jns
andb
pop
hlt
es
mov
push
imul
popf
sub
sub
mov
and
cmp
rorb
cs
shll
inc
cmp
aam
mov
outsb
xchg
mov
mov
test
sbb
push
daa
dec
push
push
xor
or
popa
int3
push
sbb
mov
mov
rcrb
adc
push
and
roll
cmc
call
in
jbe
arpl
dec
adc
cmp
sahf
dec
loope
or
sbb
fists
cmc
jb
sbb
dec
ret
jmp
lahf
push
pmaxsw
ljmp
ja
lds
mov
arpl
stos
pop
lret
dec
aaa
addb
sub
xor
in
cmp
out
cmp
and
shlb
cmp
and
adc
in
popf
and
fcmovnu
lds
jne
ret
adc
pop
cmp
mov
push
cmp
ss
std
sti
dec
imul
mov
mov
xor
mov
jmp
cli
bound
xchg
hlt
xchg
mov
or
imul
mov
test
adc
pop
cld
xor
data16
shl
dec
xorl
es
mov
jl
push
add
mov
add
test
std
xor
push
dec
int3
imulb
push
fcmovnbe
fcmove
mov
pop
sub
adc
dec
jl
pop
pushf
stos
mov
cmp
mov
ss
push
pop
push
xchg
pop
fadd
in
aad
mov
lret
outsl
icebp
pop
xlat
mov
in
mov
mov
inc
je
pop
pop
cmpsb
int3
cli
test
sbb
fnsave
mov
pop
sbb
ljmp
jle
out
adc
add
jl
test
movsl
test
or
fisubrl
insb
jle
push
mov
int3
pop
aad
xchg
dec
loop
inc
loopne
aaa
pop
add
push
rolb
lods
lahf
push
loopne
adc
mov
pop
cmpsl
sti
out
movsl
je
sbbl
mov
shll
jl
lcall
push
scas
fcomps
clc
icebp
mov
inc
adc
sbb
xchg
std
mov
sub
mov
ja
add
sub
jl
mov
sbb
adc
xor
xchg
cmc
cmpsl
push
into
xchg
push
sbb
pop
push
mov
adc
test
cs
xor
jp
mov
sub
mov
sbb
adc
fimuls
push
inc
jae
pop
out
fwait
dec
mov
jmp
popf
mov
rorb
es
not
adc
sub
rolb
sub
xchg
mov
inc
jbe
push
sub
mov
imul
mov
pop
lods
fdivs
mov
mov
jmp
andb
dec
aam
jnp
mov
repnz
and
add
dec
pop
rcr
iret
inc
pop
outsl
pop
lds
add
fstps
jmp
movsb
sub
dec
pushf
jge
fldt
repnz
mov
outsb
subb
mov
aas
add
rcrb
rcrl
mov
pop
rolb
ljmp
mov
push
call
pop
mov
sbb
pusha
add
add
sarl
scas
je
dec
pop
outsl
xchg
decl
in
pop
lret
pushf
daa
pop
jecxz
pushf
incb
arpl
mov
adc
pop
mov
insl
mov
cld
scas
or
sbb
fsubrs
xor
mov
push
pop
test
xchg
push
inc
jge
outsb
repz
mov
insb
std
cmc
sbb
jbe
div
out
arpl
daa
dec
stos
cmpsl
imul
test
mov
inc
xchg
pop
inc
test
push
push
lock
push
aam
pop
jmp
sub
add
and
aas
push
in
shrb
cmp
stos
cmpb
lds
sbb
js
mov
dec
mov
add
mov
xor
cmp
add
negb
xor
test
xchg
aas
aam
xchg
movsl
push
notb
jmp
daa
dec
add
push
fbld
cmp
addr16
push
cwtd
push
stc
insb
je
sub
fisubs
icebp
in
mov
mov
inc
stos
cmp
mov
pop
insl
sti
inc
jmp
imul
insl
jge
in
pop
inc
adc
push
inc
jp
and
push
push
stos
xchg
cld
sahf
jge
cmp
xor
sub
or
add
leave
sub
cwtl
test
mov
fmulp
push
test
adc
mov
fwait
or
xor
fists
mov
jl
pushf
mov
pop
sbb
push
pusha
push
out
mov
pop
js
mov
sub
daa
mov
sbb
xchg
xor
cmp
or
mov
out
xor
inc
inc
shl
jns
mov
add
mov
xchg
scas
fwait
out
or
inc
out
sub
sbb
fidivl
sti
cmp
mov
sbb
outsl
orb
sbbb
xlat
xchg
hlt
call
outsb
divl
and
push
imul
das
xchg
cmp
sbb
mov
mov
dec
outsl
dec
mov
iret
sahf
data16
lods
xlat
mov
repz
jp
dec
aas
mov
bound
pop
lret
addl
push
loop
loope
sbb
mov
dec
les
aas
xor
in
push
push
mov
adc
dec
gs
pop
lods
cli
mov
mov
test
in
mov
out
js
cmpsl
cli
sbb
in
push
or
add
mov
pop
loope
lock
int
mov
bound
outsb
pop
jns
jbe
gs
iret
cs
stos
cmc
cmpb
shl
dec
dec
movsl
add
mov
stc
sbb
and
aad
loopne
fnsave
ret
repz
or
pushf
sub
enter
pop
push
es
arpl
jp
stos
push
mov
test
pusha
dec
push
repnz
adc
leave
mov
add
outsb
sbb
mov
push
mov
les
jno
dec
loopne
cmp
mov
jb
push
out
xlat
test
mov
movb
ret
lock
jae
and
loope
pop
pop
lea
sbb
shrl
jnp
cmp
pop
push
pop
dec
cmp
sbbl
enter
pop
out
sbb
mov
and
popf
adcb
mov
mov
out
jo
push
fistl
stos
icebp
jecxz
push
rcrb
ljmp
jae
add
daa
jbe
out
loope
dec
mov
cmp
sbb
cwtl
outsl
jne
dec
shr
cmp
mov
push
adc
or
mov
fwait
popf
jge
negl
nop
dec
mov
and
fstl
movsl
andb
jmp
mov
popa
or
movl
lret
dec
shrl
mov
adc
ja
add
dec
inc
scas
out
xchg
subb
addl
or
jb
sti
std
push
lcall
jo
jp
mov
jg
xor
and
sbb
icebp
pop
ljmp
pop
adc
sub
dec
or
aas
ja
dec
mov
xchg
mov
cmc
and
or
inc
jl
out
into
push
or
std
or
andb
jl
and
inc
add
imul
into
cmc
add
mov
sub
mov
fadd
cli
or
lock
js
into
sbb
inc
pop
nop
pop
clc
mov
lea
xchg
or
icebp
imul
xor
pop
sti
mov
jae
popa
movsb
pop
sub
inc
mov
cwtl
fs
cmp
shrd
test
ret
push
lcall
xor
xlat
cmp
inc
dec
xchg
scas
xlat
jnp
jg
loope
sbb
sahf
pop
add
jno
out
sahf
testb
add
push
or
pushf
and
loop
push
cmp
out
ret
mov
xchg
mov
int3
gs
loopne
mov
push
and
and
sahf
ret
ljmp
sbb
push
pop
iret
pop
adc
int3
mov
pop
stc
inc
mov
push
in
mov
cmp
sbb
fidivrs
push
adc
fwait
xchg
rcrb
xchg
add
inc
sbb
je
inc
xchg
sahf
addb
adc
sbb
shll
inc
mov
aam
jmp
and
mov
sub
fsubrl
int
shrl
shlb
push
insl
xlat
dec
cmp
andb
les
bound
test
repnz
addb
nop
rolb
lcall
push
push
jecxz
addr16
testb
inc
aaa
pop
jb
xor
jno
ret
pop
mov
sub
jecxz
mov
scas
dec
movsb
push
fadds
lahf
add
int
out
loop
lock
xchg
aam
jp
mov
sbbb
pusha
inc
sub
int
pop
jbe
mov
xor
clc
and
sarb
loop
inc
xor
sbb
jbe
imul
movsl
enter
mov
jne
adc
adc
sbb
pop
sbb
jbe
and
xchg
jge
dec
and
push
jne
dec
out
inc
movsb
lcall
int3
mov
imul
cmp
sub
shlb
daa
xchg
movsb
out
cld
add
mov
imul
enter
lods
pusha
pop
arpl
xchg
and
mov
push
jb
test
add
and
stos
dec
repnz
aad
push
iret
mov
test
fisttpll
push
fs
fdivrl
mov
loop
test
jl
loope
cli
ret
cmp
int3
or
adc
jp
cmp
lods
inc
pop
insl
cld
mov
xor
push
notl
fs
xchg
outsb
mov
sbb
jge
shl
std
and
jb
jo
mov
test
scas
fmul
mov
pop
les
cmpsb
lret
jecxz
push
mov
scas
sbb
dec
loop
out
jecxz
sub
lcall
sbb
clc
pushw
shlb
lret
mov
push
cmp
sahf
pop
andb
popa
hlt
mov
cltd
sti
divl
inc
xchg
pop
mov
xchg
out
je
fbld
xor
cmpsb
lock
movb
adc
icebp
adc
out
xor
inc
int3
insb
jno
jmp
push
and
sahf
movsl
and
mov
lret
cs
mov
mov
test
ret
pop
push
xor
xchg
and
add
rcrb
jp
leave
cltd
movsl
xchg
unpcklps
js,pt
adc
pop
push
sub
xchg
insb
sbb
in
jle
mov
enter
or
rol
pop
or
cwtl
jbe
jg
pop
sarb
ja
cs
subl
jnp
push
jne
mov
insb
inc
xchg
pop
stos
mov
sbb
mov
add
jo
cmp
cmp
sbb
push
cs
call
xorl
cmp
mov
cmpsb
iret
aam
lods
mov
cmp
xchg
fwait
mov
jno
in
adc
out
aam
dec
mov
mov
push
insb
xchg
loop
or
mov
loop
and
xchg
scas
push
fisubl
cmp
and
mov
sub
ret
in
pop
sub
stos
adc
les
pop
fwait
inc
add
pop
mov
fisubl
out
sub
and
lds
cmp
xchg
pop
inc
add
scas
dec
inc
subb
dec
and
stc
and
mov
sub
movsl
inc
test
enter
clc
cmp
pop
pop
jbe
xor
adc
pop
push
ret
add
test
dec
lea
xor
lret
out
ret
lods
xchg
mov
push
jns
sti
setnp
push
idivl
daa
into
dec
inc
sbb
sbb
pop
mov
popa
cmp
cmp
sbb
jae
push
fists
ret
add
inc
int3
push
inc
mov
testl
hlt
lahf
adc
add
mov
mov
pop
cmp
inc
cmp
cmpsb
push
test
lods
mov
fcomps
stc
or
cltd
lret
add
xchg
mov
jl
into
imul
pop
add
sub
xchg
xor
inc
stos
push
lods
mov
dec
xchg
les
mov
rorl
inc
mov
in
mov
shrb
jne
mov
stos
mov
imul
xchg
pop
xor
mov
push
mov
iret
test
mov
stc
mov
insb
pop
dec
mov
mov
jbe
outsl
aaa
pop
ljmp
mov
sti
push
pop
test
imul
pop
arpl
movsb
jno
mov
cmp
sub
jb
adc
adc
in
dec
cmpl
inc
mov
jg
dec
inc
xchg
cmpsb
aad
icebp
pop
cmc
or
mov
sub
enter
push
adc
push
xor
add
xchg
cld
push
add
shrb
ficoml
mov
cwtl
dec
cs
cmp
xor
js
je
jb
xor
inc
and
fcomi
sub
int3
or
fadds
push
push
hlt
in
add
or
ret
jo
stos
fcoml
mov
shlb
push
jne
inc
adc
sub
lret
dec
lea
out
jle
xor
push
scas
ljmp
into
xor
mov
popa
into
jmp
push
cmpsb
clc
in
jmp
lahf
ljmp
cwtl
fdivs
ss
out
mov
sbb
adc
in
repnz
lea
mov
into
lods
sub
pop
and
shl
movsb
out
fdivr
sti
sbb
mov
pop
gs
icebp
mov
mov
aad
stc
and
inc
sahf
dec
jmp
lcall
mov
add
xor
testb
xchg
add
mov
lock
repz
push
add
mov
call
adc
add
mov
xchg
lods
fnsave
xor
inc
push
cs
loop
addr16
lcall
sbb
adc
mov
jp
xchg
dec
dec
mulb
shll
xor
add
mov
jge
xor
pop
or
testl
push
lret
sbb
dec
outsb
sahf
lcall
adc
mov
cltd
mov
cmp
fldl
lods
popa
pop
jno
lods
mov
movsb
int3
cld
cwtl
mov
mov
push
or
ret
pushf
aaa
cmp
repz
test
mov
stos
cmp
push
xlat
adc
sub
xlat
mov
mov
mov
negb
xchg
mov
je
xchg
pushf
sahf
mov
dec
push
movsl
jg
aam
mov
or
sbb
pop
dec
lods
je
es
pop
cmp
inc
sub
aas
fs
or
movsb
scas
les
mov
push
test
je
imul
scas
ja
xlat
das
inc
gs
outsb
push
aaa
jno
mov
jns
pop
sub
dec
xchg
push
jnp
int3
jl
jo
testl
call
inc
sbb
ret
lods
out
push
sub
loop
dec
jg
cltd
lret
sub
or
sub
adc
fisubrs
sub
pop
loope
fmull
ds
add
pushf
aas
push
lret
pop
in
jb
loope
mov
sub
jmp
jns
loopne
lret
out
push
or
xchg
adc
add
sbbl
mov
push
jecxz
mov
xchg
dec
dec
test
cmp
cmp
cmc
xchg
mov
sti
push
icebp
aam
cmc
xchg
stos
inc
xchg
cmp
sbb
rorb
push
mov
mov
dec
loop
mov
pushf
mov
faddp
test
jg
cwtl
push
lret
inc
push
mov
mov
fildl
fcoms
pop
jecxz
mov
dec
mov
and
sbb
mov
cmpb
cld
cmp
call
inc
shlb
dec
loopne
pmovmskb
into
xchg
imul
ret
jecxz
lahf
sahf
imul
sbb
addr16
xchg
rcll
jne
test
jne
stos
loope
inc
mov
shrb
sarl
xor
inc
rcrb
add
std
popa
mov
js
out
inc
xorb
xor
scas
jns
xlat
jge
dec
stos
adc
push
movsb
xchg
push
mov
mov
imul
or
test
or
sahf
mov
adc
repnz
in
pop
xchg
daa
testl
ja
cmp
aad
jbe
inc
sub
pop
inc
aaa
les
fwait
push
mov
push
mov
pop
mov
popf
xor
push
arpl
xor
push
sbb
cmp
pop
aam
clc
mov
inc
xor
imul
jp
xor
push
mov
out
pop
or
push
insl
pusha
rolb
mov
mov
push
push
lcall
add
sub
out
add
cmp
mov
popf
cmp
repz
adc
fnstsw
sub
outsb
inc
ds
xchg
out
aas
or
adc
outsl
mov
inc
aam
or
rcrb
and
mov
movaps
stos
lock
sti
mov
and
mov
in
repnz
lcallw
incl
out
sub
cmc
add
jle
pop
pusha
mov
mov
not
and
lods
les
jno
inc
dec
sub
movsb
lret
push
sbb
stos
push
or
inc
or
arpl
leave
shll
les
ljmp
ja
int3
in
cmc
int
mov
and
lahf
fcoml
cmp
sbb
adc
sub
lret
pop
aaa
cmp
and
pop
cs
leave
xor
adc
test
rcrb
mov
jecxz
lret
sbb
dec
sub
push
iret
pop
testl
enter
and
outsl
sbb
pop
addr16
cltd
addl
packssdw
fnstcw
aas
push
sbb
aas
inc
sbb
fdivr
popa
insl
mov
mov
mov
ss
xorl
lret
sbbb
in
stos
sbb
out
sbb
dec
cmp
aaa
add
and
push
mov
push
lds
xor
icebp
lahf
testb
push
and
test
jp
sbb
inc
cwtl
inc
push
mov
xor
in
push
mov
sbb
mov
mov
push
sbb
in
outsb
hlt
je
sbb
lea
pop
mov
movsl
mov
mov
cmp
movsb
sbb
shll
out
insb
daa
push
cmp
lds
js
pushl
ret
inc
sahf
mov
sub
mov
push
ds
add
jbe
sub
inc
pop
push
scas
push
inc
jbe
orl
fldcw
xor
push
lahf
std
mov
shlb
sub
ljmp
movsl
sbb
outsl
pop
xchg
lock
xor
xlat
inc
fldcw
pop
xchg
mov
nop
fwait
mov
cwtl
lret
jp
aaa
dec
mov
insb
ja
dec
decb
in
cmp
pop
call
cmpsl
in
scas
nop
add
or
out
sbb
scas
out
mov
jnp
mov
push
clc
int3
ret
xchg
test
xchg
outsb
movsb
add
js
jp
iret
mov
dec
push
enter
ljmp
ss
lahf
fwait
sbb
push
cltd
sub
jp
pop
jnp
in
inc
test
cmp
mov
ds
mov
xchg
xchg
stos
mov
sbb
inc
popf
push
push
repz
xor
mov
repz
aas
inc
mov
andb
inc
insb
mov
add
and
mov
rclb
xor
in
lods
cmp
data16
add
adc
movsb
pop
pop
loop
cmp
mov
push
xchg
push
cli
adc
jns
mov
es
mov
fiadds
xchg
aam
and
in
pop
or
pop
xor
jo
push
jmp
movsl
fldl
lcall
adc
lahf
leave
and
push
nop
sbb
cwtl
mov
les
jp
sub
xchg
loope
mov
push
pusha
int
xor
xchg
faddp
test
pop
sub
sub
adc
ja
jp
jl
aam
mov
dec
dec
mov
lods
xchg
aam
mov
jge
mov
stc
add
or
mov
push
sbbb
mov
rorb
int3
push
adc
xor
push
test
push
test
xor
ds
pop
aam
fwait
or
aaa
cmp
insb
inc
add
jne
imul
fisttpll
fstps
jecxz
jecxz
imul
lcall
addl
add
add
or
xchg
movsb
fwait
sub
inc
add
das
xor
and
test
xor
mov
mov
lods
pop
cltd
push
xor
lahf
lcall
push
xor
ret
xchg
or
pop
adc
hlt
and
mov
push
xor
addr16
cld
lcall
data16
jl
cmp
push
aad
pusha
and
hlt
or
cmpsl
xchg
or
stc
test
xchg
jge
sub
pop
cltd
adc
xlat
pop
mov
pop
cmp
js
pop
or
fbld
pushl
mov
mov
inc
push
out
mov
loop
int
xor
mov
out
js
sub
cs
mov
into
mov
jl
inc
sti
push
sbb
and
push
and
sti
std
sti
stc
push
outsl
arpl
jno
jae
aaa
jno
repz
std
xchg
cmc
ret
and
pop
add
or
mov
sti
scas
call
pop
pop
jo
lret
ret
std
cld
pop
push
dec
sbb
jp
jg
dec
int3
or
in
adc
add
sbb
push
and
xor
push
mov
loopne
outsb
cmp
outsb
rolb
int3
out
data16
push
mov
and
xor
or
pop
sub
xor
xor
mov
add
jl
outsb
shlb
push
and
sub
cwtl
enter
pop
loope
pop
xor
ret
movsl
pop
pop
out
rolb
popa
nop
jl
out
popa
sbb
out
inc
in
pop
mov
sub
mov
or
lahf
fisubrs
pop
enter
in
push
lret
xchg
rolb
sahf
stos
in
inc
sti
or
out
sub
movsl
lds
pushl
paddusw
dec
fiadds
scas
out
mov
sarl
imul
or
into
add
dec
pop
or
inc
popf
mov
xor
fs
es
dec
or
ret
das
out
aad
cmpsl
inc
vhsubpd
dec
arpl
jnp
jp
add
sub
sbb
push
lods
mov
subb
ljmp
sahf
leave
sbbl
in
mov
ds
mov
imul
out
pop
xorb
push
jae
popa
scas
mov
rcrb
mov
cmp
out
sub
push
dec
testb
push
pushf
adc
cli
lea
cmp
int
jb
rclb
inc
nop
sbb
lret
xchg
dec
loopne
xor
xchg
js
mov
iret
mov
les
jns
nop
pop
fwait
mov
pushf
fs
pop
mov
lcall
fsubs
pusha
xchg
mov
sub
fs
out
cwtl
or
icebp
stc
or
or
mov
xor
inc
add
outsb
lds
jae
xchg
mov
xor
inc
ja
xchg
dec
cmp
repnz
mov
scas
iret
or
and
xor
inc
push
xlat
insl
inc
insl
sti
rcrb
push
int3
pop
xor
aas
cwtl
pop
icebp
fwait
pop
gs
in
xchg
das
pop
jno
int3
jl
mov
xchg
rcrb
mov
cmpl
xor
xor
mov
inc
fs
bound
mov
push
jnp
cmp
mov
pushl
mov
cmp
mov
xchg
xor
xor
or
or
push
lcall
fdiv
xchg
xor
lea
addr16
xchg
sub
icebp
jl
dec
subl
push
xor
adc
fwait
adc
lahf
imul
push
sahf
fsubrs
es
addl
push
jp
cld
imul
stc
xor
jns
jnp
xor
xor
rolb
rcrb
pop
aam
out
sbb
shlb
push
mov
and
shrl
and
or
test
xchg
push
jno
push
mov
sub
iret
jae
hlt
add
push
out
pop
or
imul
bound
lcall
push
stos
and
fisubs
out
rorb
inc
cs
xor
mov
push
negl
inc
repnz
rolb
xchg
mov
in
nop
inc
jl
stos
inc
dec
xchg
dec
mov
mov
pusha
sbb
stc
push
push
pop
rcr
mov
stos
dec
adc
arpl
cwtl
dec
jp
dec
sub
aam
xor
push
sub
and
out
aas
cli
mov
in
and
cmp
cmp
movsb
sub
in
inc
pop
sub
in
and
push
in
repnz
testl
lock
fists
push
inc
fisubrl
mov
ret
in
in
arpl
fs
or
cmp
and
dec
dec
imull
cmp
jl
adc
cwtl
mov
xchg
xor
aas
outsl
sbb
xor
lret
in
mov
pop
mov
int
push
inc
rcrb
test
loope
xor
dec
sti
lcall
dec
mov
mov
outsb
sub
outsb
sahf
sub
or
xor
mov
add
cmp
push
lea
sahf
int3
lcall
mov
add
push
les
xchg
push
sbb
nop
jo
inc
jecxz
and
cmp
xor
mov
and
into
lock
lret
inc
dec
mov
in
outsb
retw
lcall
aad
adc
xor
cwtl
jno
xchg
mov
xchg
into
adc
sti
inc
or
push
hlt
pop
sbb
adc
jb
pop
dec
inc
xchg
neg
cmpl
stc
int3
mov
add
lods
add
inc
out
adc
sub
cmpsb
pop
mov
and
pop
mov
mov
adcb
dec
mov
push
jp
cmp
dec
push
test
lret
and
jne
jge
mul
outsb
adc
addr16
or
std
fxch
jl
push
es
or
jmp
mov
faddl
loop
popa
loope
data16
inc
out
fdivrl
add
push
jge
movsb
xchg
inc
xor
or
mov
repz
xchg
js
mov
aaa
add
pop
and
sub
out
adc
cmp
push
repz
mov
inc
or
icebp
push
dec
jb
ret
push
inc
inc
fdivrl
sub
push
pop
repnz
or
xor
and
fcomps
lret
ja
sub
pop
mov
scas
aam
imul
adc
dec
push
shrb
test
mov
inc
loope
dec
das
fidivs
mov
into
jno
jg
stos
jno
mov
les
sub
xchg
fisttps
jg
dec
sbb
inc
and
jl
cmpsl
jmp
inc
in
imul
cmp
xor
ret
fistpll
dec
and
sub
mov
xor
mov
push
js
fimuls
rclb
lahf
int3
addr16
push
inc
inc
mov
dec
ds
rorb
cmp
or
test
js
movsl
cmp
mov
stos
ljmp
xchg
fsubs
inc
fwait
test
mov
xlat
testb
shll
and
lret
aas
jbe
adc
and
xor
out
mov
pop
adc
dec
stos
jmp
fcomi
push
sub
ja
std
loop
ss
jmp
cli
dec
sub
adc
insl
jno
mov
pop
cmp
inc
mov
xchg
sub
iret
jl
jl
outsl
sub
insl
test
notl
xor
fs
out
or
cld
out
das
mov
jae
repnz
xor
jbe
sar
adc
push
jg
fsubr
mov
ja
cld
pop
mov
pop
jns
jns
popf
insb
hlt
fs
push
sub
scas
pop
pusha
pop
stc
cld
push
add
add
fisttps
and
in
push
add
mov
cmp
out
test
and
xchg
inc
adc
sub
adc
mov
adc
sbb
and
lock
stos
push
adc
insb
mov
and
int3
inc
inc
or
sub
scas
flds
scas
mov
pop
xor
out
sbb
shrl
divb
adc
push
jo
mov
pop
shr
das
out
and
mulb
jl
inc
fistl
fisubrs
pop
pop
aad
xchg
xor
adc
inc
and
fstpt
and
xchg
data16
jne
mov
out
mov
mov
xchg
xchg
mov
js
rcll
ret
jp
cmp
ficompl
jecxz
aas
mov
mov
sub
cmc
add
mov
mov
in
adc
xchg
imul
cmpsl
inc
data16
rorl
push
ds
dec
dec
ds
adc
mov
fimuls
mov
mov
xchg
sub
or
sti
or
repz
mov
sbb
aad
sub
incl
dec
aad
test
xchg
ret
inc
ja
jge
add
dec
movsb
adc
popa
xchg
mov
push
add
xor
aaa
pop
xchg
inc
cmp
pop
aad
loopne
gs
or
cmp
xchg
mov
inc
pop
icebp
sbb
adc
inc
std
pusha
mov
loopne
jl
stos
lods
arpl
lock
ss
loopne
arpl
outsl
add
lock
fmuls
adc
roll
movsl
xchg
int3
mov
mov
sbb
inc
fiaddl
push
sbb
test
push
push
insl
repz
xchg
int3
sbb
lret
and
shrb
lret
pushl
pop
pop
add
push
rclb
pop
pop
fisubrl
repnz
and
or
sub
pop
or
lods
filds
daa
mov
dec
test
fwait
stc
orb
or
cwtl
inc
add
mov
dec
and
fldl
jl
and
mov
test
adc
mov
mov
fs
adc
jl
mov
add
addr16
or
jecxz
push
ja
sub
add
fs
bound
insb
loop
aam
not
push
push
out
jmp
clc
push
mov
ret
xlat
cmp
ret
add
cmc
movsl
jne
aam
xor
sbb
sti
add
or
inc
cltd
xchg
cmp
add
loope
rcll
inc
mov
sbb
add
adc
daa
clc
aas
hlt
lcall
aad
xchg
sub
push
repnz
dec
push
loopne
jmp
xor
adc
fwait
lea
pop
or
or
mov
sahf
xchg
movsl
testl
pop
sbb
sahf
jae
adcb
mov
mov
lcall
mov
out
jbe
in
movsb
fdivl
lret
lret
aas
dec
mov
xor
sti
aam
mov
sub
sub
mov
add
fsts
ss
leave
clc
je
pop
adc
adc
outsb
int3
fidivrl
ret
jge
inc
jae
mov
inc
out
test
cli
je
jl
inc
out
mov
push
add
adc
push
push
int
aam
sbb
pop
xor
xor
stos
sbb
test
push
dec
lret
adcl
subb
xor
mov
stc
cld
dec
mov
call
out
jmp
mov
andb
add
into
mov
iret
insl
inc
push
xchg
or
mov
insl
popa
jno
cltd
add
loop
fimull
stos
cmp
mov
hlt
popa
lcall
mov
shlb
in
mov
in
popf
in
cmp
mov
or
mov
repnz
stos
adc
in
fsubrs
shll
leave
rclb
aaa
lds
adc
xor
pushf
shlb
lds
popa
inc
jnp
or
loopne
negb
xchg
sub
loop
cmp
sub
push
fcoms
jecxz
hlt
adcl
or
mov
mov
push
push
push
add
adc
sti
in
rcll
outsl
cmp
in
jg
in
xchg
mov
pop
sbb
ss
jns
add
pop
int
cltd
pop
or
mov
add
repz
movl
push
ja
pop
dec
lods
sub
xor
ret
popaw
ret
call
fs
jbe
and
aaa
bound
mov
testl
test
mov
dec
pop
inc
and
daa
lcall
and
call
scas
adc
lods
sbb
mov
cmp
gs
mov
mov
sub
lret
push
rol
clc
cmpsb
std
adc
iret
in
mov
jmp
mov
repnz
push
add
insb
test
cmp
pusha
mov
and
mov
in
in
jmp
xor
gs
jp
loopne
mov
daa
jl
dec
repz
les
inc
xor
movsb
mov
jg
jns
dec
and
xchg
cwtl
jnp
into
pop
cmpsl
mov
push
pop
push
inc
out
and
inc
push
loop
cld
add
xor
ret
call
movsl
jns
lcall
and
cmp
in
mov
xchg
cmp
fstpt
mov
bnd
and
out
lods
mov
jae
cmp
cmc
lods
mov
lret
inc
pop
mov
aaa
xchg
decb
pop
fstps
jmp
mov
loope
shl
xor
sbb
inc
scas
or
or
test
mov
mov
std
cmp
cld
xchg
mov
loope
test
fistl
iret
mov
or
sti
insb
mov
lret
popf
mov
std
jne
sbb
test
aam
jns
jnp
jbe
outsb
or
inc
lcall
dec
je
movsb
stos
fcmovnb
jbe
punpckldq
xor
or
jp
xlat
stc
mov
mov
pop
dec
movsl
andl
xchg
idivl
fwait
jb
int
sbb
jnp
pop
imul
sub
dec
fs
adc
ds
sahf
outsl
popa
clc
loope
lods
xor
push
cwtl
push
mov
dec
nop
inc
out
pop
std
das
les
mov
popa
sbb
jmp
loope
dec
repz
push
mov
ljmp
bound
jo
cwtl
jne
push
imul
nop
mov
cmp
sub
es
add
mov
mov
mov
inc
pop
xor
mov
inc
or
out
daa
int3
mulb
push
mov
cmp
jmp
mov
sub
push
rcrl
fstl
cmp
jl
insb
popf
xchg
call
jae
lret
jl
imull
shlb
mov
fimull
jb
into
cmp
stos
fnstcw
mov
sarw
inc
xor
inc
rol
or
stos
adc
call
lods
mov
xchg
pop
dec
xchg
lret
shll
sub
mov
inc
dec
mov
pop
ret
stc
mov
cli
std
push
mov
mov
movsl
inc
out
stc
adc
mov
push
loop
scas
cvtdq2ps
gs
stc
repnz
cmpsl
jp
cltd
outsl
adc
jbe
movsl
add
lret
std
cmp
repnz
inc
inc
pop
pop
fwait
gs
fisubs
mov
imul
int3
faddl
cs
mov
je
mov
add
mov
ficoms
ljmp
adc
dec
loope
jmp
lods
mov
ret
sub
addl
mov
xlat
sub
dec
outsl
repnz
testl
pop
cli
pop
arpl
adcl
test
xor
push
dec
out
pop
clc
clc
test
aad
xor
adc
test
pop
mov
jle
rol
lock
xor
pop
lods
cmp
fcompl
mov
lcall
fiaddl
imul
jl
ret
inc
mov
lret
add
call
dec
test
cmp
dec
push
mov
cwtl
divl
insl
mov
ret
add
mov
push
int3
lock
jmp
lods
call
xchg
inc
out
add
jne
and
test
push
pop
pop
xchg
mov
ljmp
push
js
or
sub
pop
xor
fldl2t
xchg
push
fnstsw
sbb
push
pop
xor
and
lcall
add
inc
shll
test
loope
cmp
xchg
inc
or
cmp
xchg
mov
mov
xchg
insl
je
xor
sbb
icebp
shll
push
int
or
aaa
fldt
pop
mov
pmuludq
sub
jg
jb
in
stc
rorb
sahf
das
push
cmpsb
or
loopne
xchg
dec
andl
inc
cmpsl
adc
sbb
das
pop
movsb
jle
aam
adc
and
pushf
in
jns
jge
or
adc
sub
into
in
sbb
or
out
rcr
imull
push
jns
pop
add
adcb
aaa
scas
push
sti
sub
push
and
andl
cmp
shrl
push
and
push
lods
or
dec
sub
mov
mov
dec
mov
pushl
add
cltd
out
in
push
push
vpaddsb
add
xchg
mov
insb
push
or
xor
or
lret
xchg
aad
push
in
mov
int
sub
pushf
data16
daa
mov
add
jns
cli
or
add
mov
loope
imul
int3
jno
out
cmp
lea
add
insl
fbstp
cmpsl
ja
push
cld
pop
xchg
popf
insl
mov
mov
cmp
testl
inc
sti
clc
int3
cmp
clc
imul
and
mov
xrelease
push
fiaddl
loop
sahf
popf
sbb
xor
xor
adc
sbb
enter
data16
xchg
imul
movsb
scas
push
cwtl
imul
aaa
out
in
push
cmp
icebp
rcrl
or
stos
testb
dec
repnz
es
xor
shlb
sbbl
jle
ret
aad
clc
std
loopne
dec
mov
xor
adc
pushf
fldl
clc
sti
call
data16
adc
fisttpl
dec
aam
inc
push
sub
out
imul
pop
fwait
sub
rcll
xchg
sub
cld
sbb
xchg
rorl
inc
cmp
lcall
out
pushf
pop
dec
mov
adc
push
ss
push
push
imul
xchg
mov
adc
loop
mov
daa
add
sub
ljmp
enter
loop
test
dec
fdivl
loope
stos
jl
push
mov
cs
shlb
nop
sbb
fxch
pop
in
orl
adc
popf
push
outsb
ds
movsb
mov
outsl
or
call
push
cltd
ja
fwait
mov
orl
jbe
repz
xor
mov
inc
inc
mov
loop
or
add
push
sub
dec
and
push
mov
xor
sahf
xor
aad
push
push
pop
ficomps
rol
aad
enter
test
push
mov
jge
jmp
cld
cld
pop
out
into
inc
call
test
iret
mov
es
pop
pop
sahf
rorb
in
mov
sbb
repz
lahf
out
dec
enter
and
mov
add
mov
jno
out
mov
rol
stos
std
mov
lret
stc
inc
in
xor
mov
or
xor
addl
sahf
mov
jecxz
ficomps
and
adc
push
mov
dec
cmpl
loop
fisttpll
aam
aad
cmp
push
pcmpgtb
divl
xor
cmp
cltd
ss
mov
int
call
in
bound
inc
sub
adc
xor
sbb
sub
mov
inc
mov
inc
mov
outsl
cli
insb
std
insl
into
dec
pop
out
addr16
ficoml
xor
out
in
sbb
testl
roll
data16
addl
imul
dec
loop
jmp
jp
shrl
das
into
dec
xchg
mov
xchg
fdivp
dec
pop
jge
gs
and
outsb
shrb
out
ret
sahf
or
mov
cld
cwtl
lods
inc
leave
lock
push
test
push
fwait
jg
lret
mull
mov
push
xor
jae
mov
testl
cld
loop
push
and
push
ds
xor
xchg
insl
push
rol
add
pop
pop
pop
mov
add
jle
aaa
push
push
and
jmp
arpl
iret
push
into
gs
pop
rcrb
out
adc
mov
daa
loopne
xchg
ja
adc
outsb
shl
popf
pop
dec
pop
je
or
fiadds
test
push
lret
push
xlat
lahf
fwait
lds
mov
mov
jns
sub
sbb
sbb
xchg
fnstsw
lods
es
cmpsl
pop
cmp
jle
int
pop
out
adc
mov
jns
jle
xchg
mov
sub
mov
mov
inc
sub
sub
or
cmpsb
subb
and
out
dec
jne
cmp
push
lahf
and
outsl
mov
add
dec
test
dec
mov
and
jmp
cmc
dec
iret
fucomip
aaa
test
insb
fs
fnsave
int3
fsubrp
sbbb
scas
les
sub
icebp
in
aad
mov
test
popa
xlat
rolb
andb
sahf
out
test
int3
outsb
rcll
adcl
inc
xor
jge
jo
pop
int3
xor
adc
cmp
cmc
adcb
xchg
mov
or
and
sahf
adc
jbe
in
insb
xor
add
pop
shl
push
xor
jno
data16
jl
sti
cltd
jge
imul
pop
negl
inc
scas
das
ss
or
sub
inc
jg
lock
add
pop
xchg
in
fists
xlat
iret
lock
mov
push
xor
call
jge
mul
mov
mov
in
pop
dec
or
jb
push
outsb
add
sub
or
mov
jmp
mov
mov
mov
jbe
lcall
adc
jp
rcrl
cld
add
lock
jp
daa
imul
js
pop
insb
lcall
lods
shrb
push
cmp
adc
xchg
lods
xchg
adc
add
fcmovb
or
outsb
in
xchg
xchg
aas
mov
pushf
lahf
js
aas
dec
jle
sub
push
pop
lret
mov
push
aaa
test
jge
iret
sbb
les
in
adc
divb
cmp
into
cmpsb
jne
movsb
jns
jmp
push
xor
cltd
mov
or
daa
push
sbb
cwtl
push
hlt
pop
sbb
inc
jnp
and
pop
pop
lahf
stos
xlat
popf
push
lea
xor
mov
sahf
out
add
lcall
push
scas
roll
cmp
test
push
pop
pop
mov
push
jp
adc
pop
es
pop
pushf
push
jge
or
test
xchg
inc
adc
jg
es
sti
cmp
js
xchg
sub
mov
xchg
or
rclb
xchg
push
cs
out
xor
ja
mov
pop
lret
or
jle
jecxz
ja
ror
push
movsl
or
psllq
sahf
push
lret
inc
int
lock
xchg
daa
repz
in
sub
mov
sbb
inc
out
mov
scas
and
dec
aad
mov
xchg
sbb
les
sub
in
jns
imul
in
mov
jg
sub
pop
andb
push
xchg
fs
pusha
xor
outsb
mov
sub
fwait
or
xchg
cmp
popf
je
mov
loope
xchg
adc
repnz
mov
mov
arpl
out
cld
lods
push
into
fistpl
adc
orb
jb
data16
aas
mov
sbb
mov
xor
ret
insl
cs
out
cmp
cld
cmp
mov
cmp
push
sti
cmpsb
dec
mov
cmp
bound
rcrb
push
push
bound
bound
adc
sub
sbb
cs
iret
insb
adc
mov
mov
mov
test
in
mov
push
bound
insl
fisubrs
mov
push
push
test
push
stos
cmp
xchg
mov
lods
pop
xchg
or
fdivr
stc
sub
lods
mov
push
movsl
mov
mov
fbstp
sub
push
mov
loopne
fwait
inc
xchg
cmp
decl
dec
mov
ljmp
jno
ret
and
fdivr
shll
int3
addr16
jl
in
inc
mov
adcb
in
push
xchg
xchg
jne
dec
xchg
jmp
cmpsb
inc
jbe
xor
cmp
mov
shl
notl
cmp
mov
sbb
mov
inc
mov
imul
dec
mov
fdivr
pop
sbb
scas
rorb
bound
cmp
lods
rcr
jecxz
pop
je
and
pusha
and
aam
inc
adc
xlat
pusha
sbb
sub
sub
js
imul
jns
test
movsb
stos
stos
aaa
add
xchg
decb
arpl
jecxz
out
add
xchg
pop
push
movsl
push
or
add
gs
iret
sub
push
shll
jle
fbld
outsb
pop
adc
andb
jp
popf
jb
jae
and
cmp
hlt
hlt
rcll
pop
add
inc
aad
cs
mov
pop
or
mov
cwtl
repnz
ret
dec
rorl
bnd
pusha
ds
push
add
xor
decl
adc
sbb
cmp
in
mov
push
and
fidivl
fcoms
xchg
pop
dec
dec
sbb
xor
pop
xor
inc
xchg
scas
push
leave
mov
or
sub
insl
add
push
aas
cmp
xor
or
push
sub
mov
jle
xchg
adcl
jno
add
jne
and
dec
popf
stos
mov
es
jb
pusha
mov
movsb
out
push
into
push
push
fndisi(8087
xchg
xlat
xlat
cmp
stc
icebp
arpl
das
sub
iret
in
fimuls
or
test
das
aad
sbb
push
cld
pop
mov
mov
push
gs
fdivp
pop
fstpt
clc
sub
loope
test
inc
sub
add
push
test
ja
inc
or
jne
push
ljmp
push
xor
mov
movl
movsb
out
mov
or
sub
cmp
xor
or
dec
inc
xor
xor
out
mov
push
repnz
mov
arpl
mov
jno
xchg
push
movsb
mov
into
pop
pop
xchg
jmp
in
in
inc
or
push
cmp
imul
out
les
mov
xor
js
mov
dec
fcomps
mov
shl
jnp
sbb
data16
mov
fwait
mov
cmp
dec
loopne
sbb
lcall
cmp
xor
stos
mov
mov
mov
xor
add
xchg
sbb
enter
mov
xor
xchg
scas
fwait
xor
inc
dec
xor
mov
lea
ds
test
das
mov
int
and
dec
idivb
addr16
push
jo
or
inc
xor
shlb
pop
push
and
jg
dec
in
loope
popf
or
xchg
mov
adc
jbe
das
scas
in
mov
lcall
pop
ret
js
mull
rorb
mov
add
pop
pushw
popa
push
icebp
call
jbe
push
or
mov
roll
xchg
dec
mov
pop
scas
pop
sbb
lea
test
cltd
lods
loopne
fists
outsl
mov
call
data16
pop
inc
icebp
dec
in
lea
xor
sti
insl
cltd
in
jle
mov
dec
scas
sarb
cmp
adc
adc
sbb
cmp
bound
cwtl
mov
or
or
push
ret
cmc
add
mull
add
mov
ficomps
jge
adc
clc
mov
mov
enter
pusha
cs
das
and
mov
or
icebp
and
and
adc
inc
jmp
mov
ret
stos
xor
popf
mov
jb
jecxz
xchg
xor
cwtl
das
sub
push
pushf
sbb
gs
js
xor
add
pusha
and
mov
sub
jg
push
xchg
or
dec
cli
jae
pop
int
and
inc
cmc
fidivs
in
mov
push
clc
xchg
push
fs
push
mov
addr16
fmuls
in
cmpl
bound
dec
bound
push
pop
xor
or
cmp
inc
outsl
pop
call
adc
mov
or
out
push
dec
out
scas
out
in
and
js
push
pop
cmc
mov
add
loope
pop
sbbl
xchg
test
sbb
xchg
ret
cmp
es
add
cmp
je
xchg
outsl
and
lea
lods
dec
ret
scas
xor
scas
xor
jg
push
mov
cmp
rcrb
call
mov
bound
mov
fwait
or
xchg
push
and
xor
push
xlat
addr16
sbb
xor
pandn
push
push
mov
and
shll
je
out
insb
imul
xchg
mov
fnstsw
pavgb
add
sbb
or
insb
pop
xor
dec
and
out
cmp
xchg
shl
lds
inc
repnz
mov
sar
out
ret
push
cmp
cmp
jae
xchg
xor
andl
sti
sub
pushf
out
scas
sub
cld
jge
xchg
jno
sub
lret
insb
out
or
mov
insl
adcl
pminsw
enter
push
stos
cmp
cld
cli
mov
filds
mov
test
sub
fisubl
imul
dec
jae
add
and
out
pop
scas
and
xchg
ret
push
fwait
sbb
out
sub
add
mov
mov
inc
sbb
xchg
xchg
xchg
push
adc
cmp
cli
push
rcrl
inc
gs
add
push
sub
mov
pushf
mov
mov
or
and
pinsrw
data16
repz
out
rcll
jmp
sub
push
sbb
movsl
loopne
cmpsl
xchg
pop
adc
stc
xchg
in
fyl2x
jmp
ljmp
xor
jge
icebp
or
arpl
mov
ss
mov
pop
lods
outsl
sub
pushf
xor
mov
push
mov
inc
fisttpl
mov
repz
add
out
dec
test
sbb
and
pop
jbe
jge
sarb
xchg
stos
ret
jnp
adc
out
sbb
sub
sbb
aam
inc
loopne
mov
xchg
daa
cwtl
jo
ja
shl
dec
add
mov
es
idivb
sbb
jns
jge
fwait
inc
dec
data16
mov
sahf
mov
loop
push
stos
xor
pop
cltd
lret
in
pop
mov
adc
push
sub
scas
mov
lahf
rorl
xor
fldl
sbb
dec
mov
push
loopne
and
pop
add
xor
push
adc
sbbl
dec
dec
push
mov
sbb
cmp
jle
outsl
lods
pop
loopne
mov
fbstp
mov
push
ja
sbb
xchg
push
jge
mov
arpl
into
cs
ret
cli
adc
int
xorb
sti
pop
ljmp
or
les
ret
sbb
mov
std
adc
and
out
xor
bound
cmpl
jb
mov
addl
shrl
xor
or
inc
fldenv
and
ret
add
cli
ljmp
cltd
jns
negb
in
sbb
mov
and
cmc
loop
mov
sbb
stos
dec
push
aam
jnp
dec
stos
jmp
or
out
addr16
jnp
pop
mov
nop
add
pop
mov
pushf
subl
and
mov
iret
adc
ljmp
lds
pusha
jo
dec
xchg
xchg
pop
icebp
into
xchg
mov
add
add
jns
ljmp
jge
xchg
in
int3
dec
movsl
xor
fdivl
int
add
pop
or
js
cmp
add
out
dec
iret
add
cld
rclb
popa
jmp
inc
andl
mov
shl
les
push
push
jb
xor
daa
cltd
sub
int3
pop
jo
push
inc
adc
inc
cmpsl
je
les
push
and
nop
es
in
sub
iret
xor
notb
sarb
in
mov
cmpsl
jns
cld
push
mov
aad
pop
adcb
cmp
mulb
sbb
mov
enter
lods
xchg
ror
stos
js
mov
divb
cwtl
scas
adc
fiaddl
push
cli
mov
sahf
loop
cmp
scas
jmp
jge
shll
lds
add
or
jns
rep
int3
adc
pop
test
mov
pop
outsb
je
imul
lret
ss
mov
sahf
test
cmpsb
enter
clc
mov
add
or
aas
xlat
xlat
mov
dec
inc
mov
or
adcb
add
adc
inc
xchg
or
loop
xor
aas
ss
mov
sbb
das
jno
lahf
mov
js
fidivl
out
inc
imul
ffreep
sub
sub
popf
pop
xchg
sbb
cmp
icebp
adc
dec
enter
push
shll
mov
inc
in
mov
jp
roll
lret
mov
xor
adc
or
fwait
mov
pop
repz
sbb
sub
fnstsw
cmp
jb
pop
or
or
dec
jb
sub
ret
push
pop
popa
push
xor
xor
inc
cmc
lcall
arpl
lods
daa
mov
in
pusha
sub
push
jmp
sub
enter
addr16
mov
mov
push
pop
daa
and
pusha
cwtl
pop
lods
fisttpl
pushf
push
jle
mov
ret
addb
cli
daa
mov
or
dec
hlt
cmovg
cmp
xchg
fnstcw
sub
dec
cmpsl
icebp
stos
fdivs
repz
mov
mov
stc
add
shrl
pushf
icebp
pop
jecxz,pn
mov
cmp
or
sub
popf
into
push
mov
popa
fcompl
test
dec
xchg
cs
sub
daa
outsb
dec
adc
lcall
aaa
add
sbb
add
out
inc
xchg
ja
inc
inc
cmp
pop
sub
xor
fldt
cmc
mov
jg
ret
fadds
mov
fadds
add
and
and
testb
ret
xor
in
negb
adc
push
mov
out
mov
jg
sub
xchg
push
push
aad
repnz
stos
mov
mov
sub
fsubrp
mov
xchg
mov
sbb
lock
fadds
iret
mov
mov
or
ds
pop
push
fdivs
cmp
dec
mov
cmp
lock
sub
imul
repnz
mov
les
push
clc
jb
test
cmp
in
jl
xchg
testl
mov
push
and
xchg
stc
cmp
sbbb
jbe
mov
neg
or
movsl
filds
sub
adc
add
dec
imul
ds
ljmp
xor
lahf
movsb
jnp
neg
sbb
mov
fmull
out
jmp
mov
xor
mov
test
dec
dec
test
push
push
stos
cmp
pop
xchg
push
repnz
push
xchg
outsb
fsubrp
xchg
mov
jg
sub
push
jle
sbb
push
lock
andl
cwtl
pop
dec
je
inc
mov
inc
mov
push
sub
repnz
nop
xchg
sar
jno
inc
dec
mov
and
aas
push
pop
jle
in
in
pop
mov
fnstenv
add
into
mov
add
insl
fcmovne
idivb
fstpl
or
cmp
adc
andb
and
adcb
lock
das
xlat
xor
xor
add
pop
mov
psubq
daa
push
mov
fmuls
clc
fs
mov
fsubr
cltd
cmp
mov
inc
or
imul
ja
xchg
pop
movsl
mov
or
mov
mov
mov
push
outsl
add
mov
mov
iret
jmp
mov
inc
fbstp
mov
out
and
or
push
enter
mov
mov
cmc
pop
loop
loop
sbb
andl
push
mov
inc
sub
and
push
mov
push
inc
cltd
jmp
test
add
insb
pop
cld
pop
push
and
pop
out
pop
pop
mov
mov
cmp
shrb
cs
int3
push
cmp
lock
mov
roll
loope
ret
xchg
add
out
icebp
xchg
pop
enter
sub
mov
in
mov
jg
inc
mov
or
inc
jns
jb
jl
out
adc
inc
mov
lcall
sub
cli
add
xchg
inc
negl
cltd
insl
loopne
mov
stos
cmpsb
sub
testb
or
xchg
or
mull
sbb
test
and
sub
cmp
popa
or
cld
adc
mov
ljmp
imul
push
aas
fcom
push
jne
out
push
data16
leave
sbb
jmp
pop
xchg
sbb
int3
mov
jne
inc
mov
lods
mov
xchg
out
mov
imull
sbb
in
dec
and
sbb
bound
inc
pop
or
stc
repnz
in
xchg
pop
mov
loop
sub
cli
subb
mov
inc
jo
fstl
rcrl
stc
arpl
dec
jl
cs
mov
lcall
push
inc
add
add
in
mov
jecxz
xchg
test
scas
xchg
lahf
xor
mov
shrb
pop
sub
xchg
out
hlt
dec
xor
dec
loopne
push
mov
ljmp
xorl
loopne
cmp
push
cltd
ja
sahf
loop
mov
outsl
inc
push
pop
dec
cwtl
cltd
in
iret
pop
lds
bnd
ret
leave
gs
stos
imul
mov
movsb
sarl
adc
lret
xor
mov
popf
jmp
cmovae
testb
rcrl
mov
xchg
pop
push
jne
outsl
adc
jnp
lret
lods
xor
xchg
xchg
enter
scas
jg
pop
xor
mov
mov
cltd
sub
inc
adc
dec
mov
jbe
out
mov
ficompl
inc
xchg
fnstsw
mov
adc
and
es
sbb
mov
pop
push
sub
sbb
sahf
mov
xlat
or
ljmp
xor
mov
mov
and
fs
dec
mov
mov
sub
lcall
testb
fwait
dec
dec
jecxz
jne
sbb
xor
subl
fsubrl
push
imul
hlt
addb
scas
lods
adc
mov
adc
xchg
xor
inc
inc
xor
inc
xor
repnz
cmpsb
push
test
adcb
pop
xchg
push
inc
lods
pop
xchg
xlat
lret
sbb
jae
mov
cmp
mov
inc
add
xchg
mov
jns
jae
rol
and
adc
sub
and
sub
push
flds
pop
and
les
shr
sub
subb
out
cltd
dec
imul
lahf
xchg
fdivl
into
ja,pn
push
dec
stc
push
pop
daa
sbbl
clc
adc
mov
cmp
jmp
data16
push
pop
adc
push
push
add
jg
lcall
ljmp
fwait
or
int3
stos
jg
mov
push
imul
cmc
popf
sub
xor
cmp
repnz
repnz
icebp
mov
xor
repnz
sbb
fs
arpl
sbbl
push
cmp
loope
push
jno
xchg
and
out
inc
mov
clc
cmpsb
aad
dec
sub
or
adc
jp
out
test
flds
enter
daa
enter
push
repz
mov
jge
sbb
outsb
or
mov
sbb
dec
sbb
xchg
pop
test
xchg
stos
mov
aas
outsb
xor
dec
loop
inc
xor
icebp
mov
insb
fstps
or
jnp
or
subl
les
mov
in
xor
jo
into
pop
jno
mov
inc
jl
ds
pop
scas
lods
or
les
dec
sub
adc
into
inc
jl
and
imul
cmp
adc
jmp
or
mov
and
mov
lods
repnz
jbe
call
ja
leave
test
push
mov
pusha
push
repz
jo
cmp
mov
sarl
push
stos
mov
dec
aad
movb
add
jmp
scas
adc
xlat
daa
sbb
push
mov
lds
sbb
lods
and
nop
ja
inc
or
jle
jo
xchg
inc
repnz
or
out
mov
lcall
or
aam
outsl
sbb
xor
hlt
cs
lahf
mov
xor
sub
xchg
repz
imul
out
cwtl
lds
cmpsb
das
sub
push
test
cmpsb
fsubl
andb
and
sub
shrb
cmp
mov
xlat
fcmovnbe
in
push
xorb
leave
jb
dec
js
ljmp
cwtl
pop
push
mov
out
mov
pop
loopne
out
push
outsb
dec
mov
scas
inc
int
int
inc
cltd
arpl
adc
mov
lds
sub
mov
enter
cmc
sti
notl
push
mov
bound
sbb
ret
mov
jnp
pop
ficomps
xor
mov
fstpt
xchg
mov
push
or
mov
xchg
inc
lds
cmp
ret
ret
xorl
test
rorb
mov
ret
push
sarl
fbld
in
data16
enter
call
push
jecxz
insl
push
push
lret
xchg
clc
sarl
shll
mov
sar
loopne
ret
icebp
jmp
mov
jnp
sbb
fisubrl
notl
push
mov
loope
mov
pop
scas
shlb
jns
mov
outsb
or
cmpsl
sbb
push
push
push
xor
ss
add
movsb
jg
test
ret
insb
les
enter
inc
mov
dec
cmpsb
cmpsb
fldcw
xor
in
stos
xor
data16
jg
push
add
sti
sub
inc
jl
call
pop
and
daa
dec
cmp
push
cld
loop
repnz
mov
push
js
mov
std
pop
shl
stos
xchg
adc
mov
ficompl
scas
mov
addr16
mov
cmc
insl
cmp
sub
negl
mov
pop
jne
push
jle
outsb
sub
and
test
inc
int
sub
js
lahf
jecxz
or
pop
lret
lea
outsb
fmull
mov
push
jle
mov
stos
sub
lretw
jp,pt
pop
fmulp
imul
pop
mov
or
cld
stc
mov
pop
jecxz
idivl
aam
dec
mov
sbb
pop
pop
rolb
test
sub
gs
mov
push
sub
xor
sub
in
xchg
jp
incb
dec
orl
mov
sbb
subl
pop
add
inc
jne
sbb
sbb
sbb
pop
movsb
iret
cmpsl
xchg
push
mov
fcompl
jbe
jl
and
mov
arpl
adc
xor
mov
dec
pop
call
repz
js
dec
mov
inc
nop
sbb
sub
hlt
repz
test
sbb
lods
jmp
stos
cmc
out
rcrl
adc
int
xchg
into
push
in
lcall
pop
adc
test
test
and
cs
in
test
push
stos
lods
jle
add
pop
lods
ljmp
sbb
push
in
lret
pop
clc
sub
ljmp
call
jge
ds
push
cli
cmpsl
add
nop
inc
pop
lahf
das
push
cmp
leave
pushf
mov
jo
mov
xchg
cs
lods
fisubs
xor
jecxz
jmp
xor
sbb
daa
fisubl
lret
push
jno
out
fsubr
add
dec
fwait
mov
dec
mov
push
pop
orl
in
add
inc
mov
mov
les
shll
sarl
mov
cmpsl
mov
es
cmpl
test
ret
shrl
inc
sbb
mov
mov
push
pop
cli
in
cmp
sbb
mov
loopne
cld
jmp
push
cmpl
lret
jb
repz
daa
cmc
push
cs
xchg
inc
popf
data16
aam
xchg
xor
addr16
jae
ds
push
rorb
repz
cmp
cmp
add
mov
es
test
ror
cmp
ja
cltd
mov
xor
mov
stos
aas
mov
push
pop
vunpcklps
lock
and
jle
inc
dec
inc
cmpsl
and
fidivrl
pusha
adc
cmp
cmp
jl
cwtl
or
mov
mov
inc
cmp
lret
dec
sub
aaa
lahf
xor
cltd
cld
jns
adc
sbb
out
jle
jbe
xor
push
les
loop
and
jo
in
loopne
sub
test
xchg
fadds
add
jb
and
xchg
jb
mov
out
lret
cltd
sub
imul
mov
subl
imul
lods
inc
test
pusha
push
ss
stos
xchg
push
nop
mov
fistps
ja
sbbb
mov
sub
repnz
lcall
leave
in
aad
jp
push
dec
shr
mov
shrl
mov
lea
jno
repnz
aam
xchg
mov
adc
insb
loopne
insb
add
orb
idivl
add
test
add
pop
idivb
popf
jecxz
clc
jl
sbb
dec
punpckhwd
xor
lret
das
imul
sbb
push
icebp
cmpsl
outsl
idivl
push
sub
jp
nop
mov
popa
scas
sbbl
cmp
lret
mov
call
mov
mov
dec
cmc
cmp
or
js
movsb
sub
jge
xchg
xor
xchg
pop
push
jmp
cmp
jge
jo
xchg
mov
adc
stc
and
mov
fmull
inc
mov
sub
sub
sub
mov
xor
inc
mov
mov
inc
cmpl
jle
stos
sbb
sbb
pop
bound
mov
in
pop
cmp
cli
das
adc
jge
pop
addl
pop
pop
fldenv
sub
push
jmp
pop
movsb
pop
jecxz
adc
outsl
fisubrl
mov
pop
mov
ret
inc
les
shll
xchg
fldenv
movsl
dec
mov
aad
fmull
sarl
sbb
inc
and
scas
xor
aas
push
jecxz
lea
sub
js
inc
or
pop
mov
notb
add
pop
imul
mov
and
pop
adc
cld
xchg
pushf
ret
lcall
pop
out
mov
push
leave
cli
jne
in
mov
xor
sahf
pop
dec
testb
dec
clc
fsqrt
xor
sbb
push
jmp
push
lcall
pushf
stos
ljmp
enter
mov
test
adc
adc
or
inc
mov
jge
push
shr
xlat
mov
jmp
cmpsb
cwtl
pop
fists
dec
mov
xlat
add
adcb
pop
cmp
inc
and
jno
add
pop
rcl
mov
xlat
dec
rcr
stos
lret
jmp
sub
imul
daa
pop
push
mov
popa
adc
pop
and
xor
cli
adc
sbbb
mov
cmp
pop
int3
xor
fwait
jmp
dec
push
in
insl
add
aaa
movsb
push
fnstenv
sub
add
insb
cld
xor
lea
ret
ret
stc
fsts
fdivrs
mov
dec
and
cmp
movsb
xchg
sub
xchg
into
shl
xchg
sub
popf
mov
cmp
les
xor
rcrl
aam
cmp
inc
jp
les
repz
fstl
inc
jl
cmp
out
leave
pusha
aas
in
lock
gs
jp
sub
pop
pushf
dec
lea
pushf
and
lods
jbe
daa
mov
ss
popa
pop
int
imul
dec
icebp
cmovns
rolb
ja
ss
push
dec
push
incl
out
sbb
mov
scas
or
jl
pop
mov
mov
or
jle
xor
divl
xchg
push
lret
inc
fcmovu
ss
mov
dec
jp
mov
mov
aaa
jmp
loopne
and
out
xor
mov
imul
jecxz
or
mov
jmp
jg
int
ja
jnp
out
push
into
adcl
lea
aam
sub
in
or
popa
call
mov
or
add
xchg
fucomp
arpl
adc
mov
mov
insl
mov
adc
cmp
cs
mov
xchg
sbb
push
xchg
mov
jnp
jl
int
insl
mov
cmp
loope
sbb
mov
xchg
fistps
nop
jne
aaa
and
sbb
xchg
out
and
jl
aas
stos
fwait
rcl
xchg
jg
and
lret
stos
scas
arpl
sub
cli
stc
and
xor
shrl
xchg
test
mov
les
adc
js
or
jno
pop
dec
pop
xchg
shl
xor
xlat
cmpsl
es
mov
pop
xlat
insb
adc
lret
andl
sti
test
fdivrs
stc
ret
add
push
mov
or
cli
inc
pop
cmp
movsl
gs
in
out
movsl
mov
cld
sbb
mov
imul
dec
mov
arpl
dec
fsubl
dec
jbe
lret
dec
psllw
mov
rcl
xchg
push
or
aad
lcall
xor
pop
mov
imul
inc
fwait
out
rcl
sub
lea
adc
mov
inc
mov
lret
test
pop
rolb
inc
xor
push
sub
dec
cmp
fs
aas
rcl
int3
outsl
int
dec
test
mov
mov
aad
mov
mov
xchg
pusha
test
rcrb
cmpsb
cld
xor
dec
xor
pop
sub
pop
fwait
hlt
mov
movsb
mov
xchg
push
test
sti
jmp
or
xor
cmc
cs
addr16
pop
out
jp
cli
ds
movsb
loope
push
pop
test
sub
lcall
adc
pusha
dec
jp
loop
ret
les
adc
int
sbb
or
xor
mov
inc
mov
and
mov
push
sbb
cltd
adc
sub
xchg
loope
or
cs
adc
mov
cmp
stc
fidivrs
mov
fidivrl
mov
dec
or
push
inc
test
cltd
dec
mov
and
sbb
and
sub
loopne
jnp
xlat
mov
lcall
out
pop
mov
xlat
sahf
mov
aam
call
cmp
cltd
pop
or
xor
add
mov
mov
and
negb
aam
fistpll
test
mov
jl
push
cltd
and
xor
and
hlt
xor
outsl
fsubrs
xor
add
cmp
inc
mov
sbb
mov
bound
outsl
fwait
cli
rcll
xchg
sahf
sbb
js
lods
xor
loope
int
bound
push
dec
mov
inc
dec
rolb
jg
jmp
nop
stos
sub
adc
testl
add
icebp
imul
cmp
lods
sti
sbb
out
jmp
or
sub
jo
jecxz
mov
pop
add
jno
int3
xlat
shll
mov
pop
int3
or
dec
adc
or
mov
mov
sbb
push
or
adc
xorps
inc
mov
add
mov
fs
dec
pop
sar
or
mov
adcl
mov
sub
adc
out
test
or
jecxz
pop
mov
cmpsb
popa
js
aam
jp
movsb
mov
lcall
sub
aaa
inc
out
outsl
xchg
push
ljmp
add
xchg
loopne
cmp
pop
aam
lds
add
inc
into
adc
adc
cmp
mov
cmp
dec
mov
mov
lahf
adc
aaa
out
jns
enter
and
fistpl
lods
mov
test
lret
inc
cld
hlt
lods
mov
rol
cmp
inc
iret
cltd
pop
jl
rcrb
jne
cmp
int3
xchg
fsubs
and
pop
out
xchg
sbb
outsb
pop
cmpb
lock
ret
add
movsl
pop
and
inc
push
fdivl
daa
imull
fmull
or
inc
or
dec
sub
dec
in
js
test
jne
sub
lods
xor
jge
int3
insl
lea
cltd
inc
repnz
pop
movsb
jnp
push
mov
cld
loopne
inc
add
push
inc
mov
sub
subb
pop
jae
repnz
pop
jne
sbb
jl
dec
pop
pop
test
and
mov
mov
push
cmp
cmpsl
fmul
aam
mov
rcrb
sub
cmpsb
push
movsb
and
and
xchg
mov
adc
or
addr16
jnp
sub
jge
add
loop
notl
fldl
sti
mov
pusha
mov
js
jno
aam
cmc
or
sub
sub
scas
cmpsl
jae
scas
mov
cs
jp
or
std
pop
fisttpll
fucomp
sbb
mov
popf
mov
mov
in
xchg
jmp
pushf
or
push
outsb
lret
aaa
and
movsb
fisttpll
rclb
inc
addr16
cmp
bound
xchg
daa
jo
inc
fldenv
in
mov
ret
cmp
dec
adcb
rcrb
lret
nop
mull
xchg
ss
cmc
mov
mov
sub
aam
push
lahf
jbe
sarl
adc
or
and
mov
pop
out
cli
sbb
mov
lods
lret
fwait
fwait
jle
push
mov
addr16
mov
lods
mov
add
cmpb
divb
ret
push
stc
add
jmp
mov
mov
lds
pop
in
adc
pop
in
and
pop
mov
mov
dec
push
in
sti
xchg
fcomps
das
repz
in
and
xor
fxch
or
ds
add
cmp
and
cmp
adc
ret
add
sbb
fidivs
out
and
or
cwtl
sar
xchg
cltd
inc
inc
jecxz
add
aad
and
out
pusha
insl
pop
mov
cmp
dec
dec
aam
loop
insb
mov
into
cmpsl
xor
jne
xchg
out
cmp
je
pop
mov
adc
pop
push
inc
pop
sbb
xlat
je
in
push
xor
sub
xchg
jae
sbb
in
xor
lcall
cmpsb
or
xchg
and
xchg
mov
cld
and
xor
dec
mov
je
mov
sub
xchg
adc
sub
adc
mov
xlat
das
lock
adc
shlb
inc
mov
mov
push
push
jmp
lahf
inc
sahf
mov
jl
jno
cli
and
daa
cmp
jecxz
push
movsb
mov
repz
je
je
xor
xchg
in
mov
fwait
xor
xchg
dec
ja
mov
leave
enter
xlat
leave
xorb
out
adc
inc
inc
mov
imul
push
les
bound
push
faddp
fstps
sar
dec
lea
jbe
add
jecxz
and
sub
or
push
cmp
loop
in
sbb
fldcw
ja
cmp
push
les
nop
inc
add
mov
xor
mov
xor
jo
insb
mov
in
hlt
push
pop
mov
inc
jmp
pop
adc
or
xchg
lret
mov
xchg
int3
aas
sub
xor
push
gs
ss
loop
and
repnz
pop
fstpl
jno
shlb
or
divl
test
loop
inc
mov
push
lahf
push
leave
mov
fcoms
nop
pop
mov
in
adc
xchg
mov
jg
cmp
inc
xchg
push
cld
out
std
dec
inc
and
das
insl
mov
inc
pop
enter
add
xor
push
jecxz
jbe
inc
test
mov
lcall
jnp
sahf
mov
out
insb
adc
ret
sti
mov
xor
cld
pushf
pop
js
or
pusha
cmc
cwtl
out
pop
and
jle
andb
int3
out
les
and
xchg
bound
mov
into
dec
adc
aad
push
dec
and
jl
sbb
push
outsb
mov
inc
mov
in
inc
aas
lods
add
es
cmp
jae
aad
outsl
arpl
lock
mov
xor
xchg
test
add
jb
inc
jb
inc
add
and
test
pushf
shlb
xlat
hlt
cwtd
mov
pop
pop
fstl
jecxz
iret
mov
fcmove
push
es
jae
dec
or
stc
pop
xchg
adc
jmp
pop
fdivp
push
pop
cmp
adc
popa
pop
ret
in
pop
dec
lahf
jg
mov
out
inc
in
outsb
add
aam
daa
hlt
sahf
mov
ret
scas
ficoml
ret
int
fists
jecxz
mov
addr16
mov
mov
ret
je
out
push
jmp
sbb
mov
pushf
negb
and
ret
inc
insl
mov
xor
and
mov
inc
mov
mov
inc
push
adc
add
mov
outsb
cmpl
dec
test
cmp
pop
jae
or
ficoms
jg
pop
dec
sbb
in
pop
insb
ja
push
in
out
in
inc
ja
mov
sub
xchg
pop
sti
fstpt
pushaw
mov
cmpsl
fcom
cmpb
sub
pop
stc
add
dec
xlat
and
es
push
or
pushf
fsubr
or
inc
dec
call
xchg
ds
int
jb
nop
call
sbbl
xchg
scas
mov
mov
dec
mov
std
test
dec
in
iret
or
sbb
xor
lds
cmp
imul
mov
clc
bound
dec
jns
in
mov
jp
mov
ret
sub
pusha
push
adc
stos
xchg
fcomps
mov
mov
mov
shl
es
sbb
jecxz
rcll
insb
lret
scas
mov
mov
fdivl
popf
sbb
in
mov
inc
lds
jmp
std
mov
push
test
cmc
or
pushf
pusha
sbb
cwtl
icebp
xchg
pop
mov
rolb
hlt
dec
lahf
filds
adc
push
add
push
out
loope
cli
add
mov
out
push
and
sub
add
lods
test
test
jae
lcall
sub
mov
adc
scas
mov
mov
clc
jns
out
or
andb
push
aas
xchg
in
xor
pop
push
sub
sub
cmp
xchg
pop
fmuls
push
fidivrl
jmp
orl
arpl
shlb
std
imull
adc
xor
std
clc
jl
mov
and
scas
popf
cmp
pop
clc
ds
pop
call
pop
xchg
movsl
jno
pop
or
incb
out
add
sti
adc
push
loope,pn
push
pop
pop
push
movsb
and
jae
mov
jbe
mov
imul
lods
negb
sub
xchg
insb
mov
xchg
xorl
mov
mov
inc
lods
xchg
in
and
xchg
loopne
pop
rorb
das
mov
shlb
cmpsb
push
adc
jle
mov
push
mov
std
mov
inc
inc
dec
pop
outsl
call
dec
mov
or
cmc
rclb
sub
out
or
mov
cli
stos
mov
lret
test
jne
pop
add
cs
xchg
dec
das
and
fsub
inc
clc
shll
jl
cmp
push
cltd
xchg
mov
adcb
repnz
jne
roll
sub
sub
xor
sub
dec
out
and
mov
in
dec
pop
or
dec
ret
ds
xor
popa
and
pop
lahf
imul
mov
mov
cmp
add
mov
clc
gs
cmp
movsl
mov
sbb
jmp
fisttpl
shr
loop
mov
xchg
jge
sbb
enter
inc
xchg
mov
dec
dec
ret
lret
test
test
jo
outsl
xor
xor
add
dec
scas
jle,pt
testl
loop
jno
xchg
sarl
pop
rol
or
push
enter
out
pop
call
adc
lods
add
mov
inc
lds
loope
push
mov
sbb
cmp
scas
mov
mov
jmp
inc
cld
bound
aam
inc
iret
pop
ficoms
aam
mov
cmpsb
mov
adc
pop
loopne
mov
es
jg
call
jno
in
rorl
push
sgdtl
xchg
mov
fistpll
and
jno
push
test
aad
push
shrb
es
insb
scas
add
xchg
mov
repnz
jb
push
addr16
cltd
movsb
cs
insb
jo
inc
test
movsl
mov
loop
push
popl
sbbl
insl
xchg
pop
rolb
lret
shlb
dec
pop
outsb
push
imulb
out
and
sbb
cld
ret
pop
fiaddl
cmp
in
add
pop
addl
mov
sbb
push
das
jns
sub
test
jo
sub
test
xor
xor
xchg
jmp
pop
adc
hlt
bound
inc
jecxz
dec
sbb
test
cmp
daa
push
insb
pop
in
outsb
cltd
push
mov
ret
inc
adc
xor
popf
or
push
xor
loop
cli
push
sbb
and
loopne
sbb
ret
push
xchg
xchg
sbb
sub
mov
jmp
xor
ss
sbb
or
call
insl
add
scas
into
test
clc
loope
in
jbe
pop
mov
test
clc
add
inc
cwtl
pop
movsb
cs
adc
push
ss
sbb
jo
ljmp
imul
sbb
ret
sub
xlat
data16
sahf
mov
aaa
clc
into
push
push
out
adc
in
shlb
sub
ljmp
shll
pop
mov
xor
addb
pop
adc
lcall
mov
xor
nop
pop
out
sbb
or
cltd
jp
cmpsb
in
pushf
testb
mov
mov
loopne
pushf
xchg
xor
xor
cmp
dec
js
call
scas
xor
aam
movsl
daa
les
and
add
sub
sbb
out
inc
inc
mov
mov
pop
jl
bound
out
xor
int3
xor
xchg
pop
mov
xorl
mov
jmp
add
push
stos
idiv
stc
mov
xchg
push
sbb
adc
jmp
bound
xchg
xor
adc
mov
jmp
push
repz
scas
jg
xchg
mov
mov
out
jmp
mov
mov
lock
sbb
mov
test
lret
adc
dec
fisttpl
fsubl
xor
jecxz
scas
mov
mov
push
mov
pop
push
jecxz
outsb
xchg
gs
imul
js
cmp
out
push
fisubrl
inc
icebp
enter
stos
inc
xor
insb
leave
push
xor
imul
nop
in
mov
inc
rcrl
mov
mov
in
sbb
nop
mov
pushl
cmp
cmp
rcrl
pushf
clc
into
inc
daa
fists
iret
insb
push
scas
aas
mov
inc
cli
into
out
into
inc
cmp
add
jbe
xor
adcb
sbbl
xor
cmpb
dec
push
filds
cs
sbb
enter
sbb
inc
pusha
lret
and
popf
mov
mov
push
std
lds
cli
ret
xchg
push
dec
inc
fcoml
les
cmp
adc
repnz
in
imulb
mov
je
lds
aam
out
rorl
push
outsb
addr16
incb
into
mov
ds
pop
dec
mov
cmpsl
push
hlt
fwait
adc
aaa
stos
pop
iret
sub
mov
movsb
or
fmuls
test
enter
dec
xchg
dec
dec
repnz
mov
jns
sbb
loope
dec
loope
mov
xlat
aaa
jo
dec
loopne
cmp
xor
xchg
pusha
ja
std
aad
sbb
adc
or
sub
push
psubd
jle
or
pushf
mov
mov
addl
sub
test
outsl
cmp
sbb
testl
pushf
divl
jecxz
mov
scas
int
push
mov
jmp
adc
test
fbstp
push
jecxz
push
pop
rorb
test
nop
xor
or
mov
icebp
mov
aam
pop
cmp
push
outsb
scas
aas
push
fcompl
jecxz
insl
repnz
cmp
fnsave
js
pop
mov
cmpsb
mov
icebp
pop
push
sub
mov
aas
mov
popf
je
inc
pop
mov
push
movsl
pusha
ljmp
dec
or
repnz
add
aad
or
xchg
repz
fsts
insb
fcompl
xlat
pushf
ljmp
sbb
xor
aad
lock
pop
andl
test
ret
mov
xchg
push
cld
bound
out
test
mov
movsb
fldenv
pop
jle
adc
push
adc
sbb
or
leave
bound
sahf
cmp
aad
in
ret
loope
mov
mov
sti
and
mov
mov
mov
dec
inc
lret
addr16
bound
and
lea
pop
add
js
add
adc
sbbb
movsl
or
decl
cmp
ds
sti
sbb
xchg
cltd
sub
ljmp
loope
or
and
push
popa
mov
iret
scas
dec
into
push
cmp
les
std
add
arpl
sbb
xor
push
cmc
pushf
xchg
insb
xchg
mov
push
push
bound
lods
cwtl
and
clc
stos
ljmp
lahf
movsl
adc
cmpsb
inc
xor
outsb
xor
int
in
cmp
add
insb
negl
les
imul
add
mov
js
and
insb
sarb
cmc
in
icebp
push
xor
aaa
push
aad
scas
jo
xchg
cmp
cmp
movsl
rclb
int
lcall
lock
cwtl
add
cmp
add
fadd
cmpsb
and
sti
or
lret
shl
mov
pusha
mov
push
lods
jo
lock
cmc
call
les
fcoml
invd
jbe
pusha
in
dec
xchg
cld
js
cmpsl
dec
pop
decl
xchg
or
cmc
rolb
push
jg
jp
add
xor
lods
ret
fcmovb
lods
and
loopne
push
ljmp
mov
frstor
xchg
mov
insl
shll
into
lds
insl
stos
cmpsb
sub
inc
movsl
adc
mov
mov
xor
ds
stos
sub
mov
je
jb
int
frstpm(287
test
mov
std
lea
mov
jmp
mov
loopne
out
xchg
hlt
scas
fwait
orl
insb
mov
push
or
xor
cmp
mov
pop
nop
loop
add
fs
dec
imul
ljmp
mov
int3
sahf
mov
je
int
aas
imul
fcompl
xchg
cmpsb
adcb
imul
adc
jne
push
mov
arpl
jae
mov
leave
xchg
mov
and
loop
out
ds
enter
dec
push
cs
pop
mov
loopne
rcrb
inc
pusha
fstpl
jns
stos
ret
dec
xchg
cmpsl
lods
das
movsb
pop
repnz
adc
mov
andb
pop
sahf
cmc
sub
ret
outsl
pop
mov
dec
cwtl
push
enter
lret
jne
shll
and
loope
mov
rorb
lods
push
add
aaa
pop
cld
adc
jmp
fwait
mov
push
sti
popa
push
adc
mov
lret
aas
stos
fildll
jb
mov
int3
pop
mov
pushf
jmp
dec
and
mov
enter
adc
push
cld
xor
jge
nop
sub
adc
jp
mov
cmpsl
mov
icebp
ss
adc
mov
push
imul
nop
cltd
mov
sub
pusha
adcb
ds
idivl
push
cld
cs
cmpsl
cmpb
leave
repnz
les
inc
ja
jl
dec
or
cmp
push
pop
aaa
adc
mov
sbb
fcmovne
mov
mov
dec
fidivl
test
cli
sahf
notl
sub
bnd
test
mov
out
fisubs
stos
lds
and
into
jb
mov
xor
nop
insl
ss
cwtl
mov
stos
rcr
add
add
mov
push
cmp
xor
popa
inc
push
jp
pop
loopne
movsb
mov
xchg
xchg
stos
inc
mov
outsl
sub
xor
xchg
adc
xchg
aaa
and
sbb
dec
mov
and
sti
mov
inc
iret
jmp
in
subb
icebp
lea
outsl
xchg
mov
xchg
xor
or
fsubrs
sbb
mov
fisubrs
leave
nop
pop
or
mov
add
pop
dec
xchg
test
lahf
lds
mov
pop
rol
ja
test
jbe
jb
popa
add
or
xchg
insb
cmp
scas
nop
add
or
dec
inc
sbbb
xchg
popf
dec
pusha
loop
in
xor
frstor
outsl
xor
leave
lcall
push
scas
lods
aaa
ja
loope
mov
rorl
out
lock
arpl
lret
xchg
inc
lahf
into
pop
jge
stc
lahf
push
cmp
movsb
dec
sub
outsl
and
lret
in
xchg
jae
adc
fiadds
clc
jmp
mov
add
ss
ret
test
mov
cmp
adc
lahf
cmp
fwait
in
inc
inc
lods
adc
setg
push
push
clc
fbld
xor
mov
sub
adc
mov
jbe
mov
mov
pop
xlat
fistps
add
xchg
mov
hlt
sub
adc
cltd
stos
sub
mov
std
fcmovnbe
into
and
out
ret
dec
int
arpl
or
fcmovb
mov
rcrb
add
cli
dec
push
jmp
clc
add
mulb
xchg
add
je
imul
movsb
pop
mov
test
insl
hlt
jb
out
data16
clc
add
movsl
test
out
sbb
fstpl
ret
loop
jbe
add
popf
mov
xchg
cmpps
aad
mov
nop
add
jb
es
xor
add
dec
pop
xor
in
sbb
mov
scas
jl
push
sbb
sbb
cmpsb
into
addl
jbe
push
ljmp
insb
mov
add
lcall
or
and
sub
inc
push
jb
movsb
xor
mov
push
pop
ret
mov
mov
popf
mov
dec
aas
int
push
idiv
sub
test
iret
xlat
fcmovbe
or
cmp
jl
dec
aaa
icebp
jl
stos
scas
sub
or
lea
push
mov
test
in
dec
imul
js
sub
mov
repnz
stc
jp
dec
in
minsd
xor
arpl
fsubp
adc
iret
stos
push
push
insl
fsts
xchg
dec
sub
mov
movsl
mov
mov
cmp
xchg
inc
inc
in
popa
icebp
sub
jl
push
xor
xorl
fwait
pusha
repz
jmp
xchg
insl
enter
addl
mov
or
xchg
lret
xchg
cmp
neg
mov
lahf
outsl
sbb
fs
fwait
and
mov
rcll
mov
test
rcrb
adc
sub
adc
imul
jb
sbb
data16
out
xor
cmpsb
sub
dec
movl
xor
push
or
inc
outsb
stc
sahf
jo
add
xor
fldl
sahf
jne
mov
jo
out
pop
data16
mov
cmpsb
xor
mov
xchg
pop
cmp
in
fstpl
loope
jns
aad
decl
test
movsl
add
int3
or
mov
add
mov
rol
push
lcall
jb
add
jg
xchg
pop
sahf
test
int
inc
xchg
or
in
clc
and
pusha
xchg
test
pop
sti
jle
std
mov
xor
lahf
int3
lcallw
fldl
mov
pop
sbb
aaa
mov
fs
dec
lahf
pop
es
add
mov
mov
inc
shll
jge
aad
push
test
in
pop
sbb
adc
nop
popf
jp
movsb
mov
pop
sahf
jo
rolb
cmp
nop
stos
mov
imul
dec
add
roll
gs
add
in
ds
sti
pop
mov
push
imul
mov
mov
add
push
add
fisubrl
sbb
shlb
lods
roll
push
pop
mov
enter
test
mov
dec
jle
jge
insl
mov
xchg
mov
sub
push
pushf
and
testb
cltd
ficoms
lea
push
push
push
xlat
adc
sahf
popf
insl
in
mov
lcall
push
push
aaa
sbb
xchg
xchg
clc
insb
in
lcall
movl
lock
push
movsl
push
shll
push
sub
and
test
sub
add
inc
sbb
cmp
clc
jge
push
cmp
ror
sti
lret
jae
es
and
test
sbb
mov
stos
cmp
fs
sbb
inc
xchg
sbb
ljmp
pop
enter
je
jmp
in
and
daa
fstps
cs
mov
and
and
outsb
imul
das
add
xor
mov
xchg
xchg
jo
in
jg
add
jle
jb
mov
fisubs
inc
mov
pop
xchg
mov
int3
lock
enter
pop
ss
shll
sahf
mov
fldt
loopne
int3
xchg
scas
sbb
sbb
orb
repz
cmpsb
je
sbb
push
pusha
js
mov
popf
popf
mov
jo
pop
out
fcmovnu
test
xchg
nop
push
mov
ja
lods
cmpsb
in
jecxz
mov
mov
ljmp
mov
xchg
pop
ljmp
xor
sub
int
add
xchg
lret
fcomip
add
cld
and
sbbl
sbb
push
mov
jnp
lret
mov
loopne
jnp
aad
mov
outsb
into
in
out
xchg
lahf
push
mov
leave
cmp
negb
mov
nop
mov
sub
xchg
and
imul
cld
mov
mov
movsb
hlt
test
outsl
call
pop
sarl
add
rclb
sbb
xchg
or
imul
sub
clc
cli
jnp
lret
push
jnp
bnd
loopne
into
dec
or
sahf
dec
stos
jle
iret
or
jle
leave
lahf
iret
cmp
divl
outsl
stos
xor
fisubs
inc
jge
outsl
arpl
cli
negb
in
dec
loop
ja
adc
out
push
stos
in
fcoml
iret
jne
mov
sub
stos
push
lods
pop
cmp
inc
lock
mov
adc
and
mov
iret
testb
xor
sub
negb
int
iret
xchg
orl
adc
push
stos
xor
cmp
mov
jp
cmp
sbb
in
nop
es
ds
movsb
pushf
jo
xchg
int3
cmp
sub
scas
outsl
sub
cmc
fimuls
sbb
sti
in
push
shlb
push
inc
mov
in
mov
sbb
xor
mov
js
int3
je
in
aas
dec
and
pop
xor
int3
jmp
pop
test
dec
mov
add
insb
pop
and
mov
and
cmc
popf
or
ret
and
dec
xor
jmp
jno
les
movsb
aas
dec
outsb
push
insb
clc
loop
inc
mov
cli
insb
aad
xchg
pop
dec
dec
xchg
jno
adc
aad
push
in
mov
pop
jae
xor
aam
ljmp
xor
dec
cld
hlt
dec
sbb
fistps
or
cs
out
sbbl
mov
stc
orl
jmp
or
ds
inc
inc
add
lea
cmp
leave
mov
movsb
jmp
adc
test
xor
mov
mov
test
into
sbb
or
int
jnp
mov
sbb
jno
hlt
inc
aad
pop
add
mov
xchg
pop
scas
popf
pop
ret
xor
xchg
add
int
pop
push
imul
js
iret
xchg
jb
xor
ja
xchg
sbb
pop
daa
mov
cmp
call
jnp
mov
mov
xor
sarl
orl
jo
int
loope
and
xor
dec
adc
mov
popf
dec
insl
inc
pop
jns
nop
ret
insl
mov
cmpb
mov
das
push
dec
daa
dec
jb
movsl
pop
jecxz
add
add
xor
mov
insb
pop
or
fld
out
dec
insb
mov
mov
outsb
jle
movsb
or
lods
sti
pop
adc
pop
sbb
into
cs
scas
jecxz
add
pop
repnz
push
nop
mov
ss
sahf
and
iret
data16
and
and
adc
lret
in
cmp
mov
cmp
and
and
jns
dec
xor
adc
arpl
cltd
rol
xor
mov
push
cmpsb
fistpll
xchg
push
mov
mov
jecxz
inc
out
popf
mov
mov
call
xchg
sub
xchg
and
mov
xchg
cmp
mov
pop
nop
stos
cwtl
pop
test
pop
ret
xor
mov
push
inc
mov
out
mov
mov
bnd
jb
jb
jno
mov
jo
stos
fstps
ret
fisubrs
or
lea
ss
mov
ficomps
push
mov
inc
in
sbb
mov
mov
icebp
js
and
and
loopne,pn
lahf
inc
dec
mov
push
push
cmc
shrb
mov
gs
push
jge
and
mov
mov
aad
pusha
or
xchg
mov
outsb
aas
or
cmp
fmull
das
xor
or
mov
xor
inc
inc
mov
dec
aaa
movb
xchg
sbb
xchg
ficoml
imul
stc
ud0
sub
and
repz
jno
popf
std
aaa
ljmp
xorb
cmp
test
and
xchg
cmp
cli
clc
in
outsl
into
jb
dec
int3
enter
rclb
dec
scas
cltd
movsl
inc
out
out
mov
mov
cmp
xor
call
cmc
inc
repz
addb
loope
daa
jmp
fisubrs
aad
pop
cli
std
jecxz
xor
test
enter
pushf
and
cmpsb
or
mov
cli
mov
rcrb
push
xor
std
hlt
xchg
push
pop
repnz
lods
test
inc
push
out
jno
sub
push
mov
jnp
or
popa
out
push
xor
dec
push
sbb
cwtl
mov
pop
addr16
bound
and
and
inc
cwtl
sbb
and
leave
mull
das
js
push
lret
mov
mov
int
push
int3
mov
imulb
pop
xor
sub
push
movsl
xor
or
popf
in
sahf
add
rcl
insb
xor
das
add
imul
xor
lds
push
push
jle
pop
aas
ja
pop
in
insb
shll
ret
out
stc
arpl
in
push
jle
shrl
ljmp
mov
daa
in
lea
call
notl
pop
repz
pop
mov
push
inc
repnz
pop
inc
mov
out
mov
jl
jmp
div
rolb
insw
arpl
mov
fcmovnu
testl
pusha
out
jmp
xor
mov
cmpsb
cld
add
cmpsl
xchg
repnz
divl
mov
mov
insl
mov
and
sti
loop
aas
int
mov
push
xchg
mov
cmc
int3
je
sbb
sub
jecxz
hlt
scas
xchg
imul
insl
imul
mul
and
xor
subb
bound
data16
leave
sbb
and
lret
adc
pop
hlt
jp
inc
lcall
imulb
push
int3
xchg
sub
pop
mov
dec
push
cmc
pop
fidivrs
js
jbe
lock
add
les
pop
in
add
roll
movsb
mov
and
pop
jno
push
pop
mov
int
sbb
ret
cli
sbb
imul
out
ja
sub
jbe
and
pop
and
mov
pop
loope
ret
int3
mov
pop
push
hlt
mov
add
imul
pushf
testl
inc
ljmp
push
addr16
leave
push
lcall
lods
adc
in
inc
adc
mov
cmpb
adc
sub
xor
fadds
lahf
rorb
outsb
mov
cmp
dec
addr16
dec
or
fadds
xchg
pop
push
bswap
cmpsb
jp
xor
mov
mov
mov
js
fs
mov
xor
lahf
aaa
test
loope
mov
push
stos
paddb
ss
cltd
mov
lods
lea
mov
shlb
sub
jle
sub
jp
scas
mov
in
das
cwtl
cmp
int3
add
jno
sbb
adc
sub
jbe
loopne
and
and
cwtl
push
repz
mov
cmp
shlb
add
imull
clc
push
or
inc
insl
cmpsl
dec
push
push
sbb
push
loope
std
imul
in
aad
sti
pop
cwtl
lahf
sbb
out
jne
and
fstps
lea
mov
add
sahf
adc
mov
cmp
fstpl
in
push
das
lock
in
add
mov
or
xor
mov
testl
and
mov
lret
push
fmuls
push
push
adc
sbb
loope
popa
scas
mov
adc
sbb
insl
pop
js
sub
mov
sub
cmp
sbbl
dec
loope
sbb
in
loop
shll
repz
outsb
shr
inc
push
adc
outsb
fwait
pusha
fldl
addr16
sti
jmp
add
cmp
in
cld
nop
testl
inc
mov
pop
cmp
ja
jmp
pop
out
js
cmp
mov
sbb
hlt
add
mov
inc
jne
dec
sbb
bound
lret
icebp
cmp
cmp
mov
jecxz
jge
sbb
mov
aas
lods
mov
dec
push
mov
adc
sarb
bound
popa
fistpl
sbb
sub
ret
pop
mov
cmp
and
mov
sbb
xchg
leave
lcall
ljmp
dec
fwait
icebp
dec
mov
xchg
cmp
mov
cli
enter
sbb
and
scas
xchg
je
push
nop
and
jns
mov
or
cmpl
adc
cwtl
and
xchg
jecxz
in
fisubrl
outsb
sti
sbb
jns
addr16
push
lods
sub
data16
jbe
mov
pop
push
push
jae
push
dec
xor
movsl
push
cmp
pop
clc
lahf
jle
add
or
int
cltd
xchg
sti
push
dec
jne
clc
cld
popf
inc
sbb
and
negl
jle
int3
add
or
adc
fs
adc
mov
xchg
jl
daa
push
jno
xchg
mov
fimull
mov
mov
cltd
push
add
pushl
jns
js
cmp
mov
arpl
sbb
mov
mov
adc
mov
mov
inc
aad
out
cs
jae
iret
xchg
mov
into
cmpsb
mov
add
out
push
mov
ret
scas
mov
mov
cmpsb
push
adc
or
mov
mov
adcb
lcall
xchg
adc
iret
int
cwtl
sub
ret
popf
lcall
insl
loop
adc
inc
ss
adc
mov
icebp
sub
addr16
pusha
add
out
pop
out
fcoms
adc
dec
jne
mov
mov
mov
test
int3
mov
xor
pop
lds
aaa
mov
popf
in
add
jo
shlb
push
jmp
hlt
jbe
imulb
cwtl
je
loope
jp
push
icebp
push
push
mov
sahf
stos
pop
cs
sahf
outsl
fnsave
jo
fildll
mov
movsb
enter
in
adc
fdivs
imul
sub
fcomps
outsl
jg
arpl
mov
jle
stos
adcl
sub
bound
ja
jge
movsb
sahf
ja
jo
push
fsubrs
xchg
test
jp
jbe
fucom
add
sub
push
jno
loop
inc
outsl
jmp
mov
xor
sbb
lcall
in
pop
mov
mov
mov
mov
jns
pop
data16
or
cmp
dec
sub
mov
mov
inc
es
jae
loopne
or
xchg
xor
das
mull
cwtl
stos
andb
jp
rolb
mov
adc
add
dec
pusha
ret
fs
lods
shrb
xor
scas
mov
sub
mov
mov
cmpl
dec
out
ret
imul
jmp
mov
pop
repnz
inc
inc
mov
int
dec
in
dec
jle
xchg
add
mov
mov
loopne
adc
xchg
lret
and
test
sub
sarb
dec
roll
add
fsubr
pop
xor
into
sub
hlt
iret
bnd
inc
lea
in
shrl
stc
push
enter
or
push
les
loop
mov
mov
and
cmpsb
mov
iret
fiaddl
push
xchg
call
lret
call
mull
mov
push
cld
aad
sbb
push
pop
and
rolb
test
xorb
xor
jne
in
lods
loopne
sbb
ficoml
mov
lea
cwtl
addr16
xor
fldcw
jge
lret
lods
jne
mov
adc
push
js
cmp
lcall
mov
adc
repz
push
pop
aaa
lds
lahf
mov
mov
aaa
sub
ret
adc
push
jne
push
dec
jge
xchg
dec
test
mov
sbb
cmpsl
jae
mov
xchg
add
repnz
cmp
adc
sahf
sarl
dec
into
pop
inc
sub
enter
pop
leave
adcb
lea
cmpsl
andl
inc
cmc
dec
mov
fdivrs
aam
cld
mov
sbb
xchg
sbb
fistpll
and
ss
ljmp
jmp
pop
jle
test
xorb
lods
dec
inc
mov
and
test
mov
daa
sub
out
or
in
loop
inc
push
je
pop
mov
and
sarb
or
negb
divb
leave
xorl
loop
inc
jmp
jnp
xchg
xchg
movsb
mov
push
mov
adc
loope
xor
jmp
ret
lods
xchg
xchg
inc
out
rcr
pop
iret
loope
mov
jns
popa
push
repz
cld
lock
pop
pop
and
xor
in
xchg
imul
rol
lahf
loopne
repz
cli
sbb
jp
test
clc
fisubs
cmp
std
lret
inc
dec
aaa
insl
popf
cwtl
cs
dec
mov
mov
ds
sbb
pop
xchg
and
xor
mov
jae
add
push
dec
fsubr
fistpll
lods
inc
out
stos
pusha
mov
shrb
shrl
push
jnp
dec
shl
add
mov
js
pop
sbb
hlt
cli
dec
pusha
or
mov
mov
xor
sahf
lods
fisttpll
dec
rclb
test
das
mov
jg
jg
push
test
mov
pop
mov
inc
hlt
dec
shlb
mov
lahf
fstl
dec
push
adc
lahf
les
mov
mov
adc
mov
xchg
mov
adc
outsb
jns
cltd
jbe
icebp
and
ret
loopne
mov
push
out
scas
ss
mov
leave
xor
adc
insb
mov
cmpsl
cmp
andb
xchg
xchg
or
mov
clc
sbb
pop
adc
pop
mov
pop
frstor
out
imull
movb
ret
mov
scas
mov
rcrb
xchg
add
mov
xor
das
out
cli
cld
das
scas
inc
hlt
mov
mov
cmp
negb
pop
hlt
cmp
shll
test
pusha
je
mov
ss
and
jmp
mov
mov
mov
cltd
pop
scas
mov
out
lock
into
sbb
sub
scas
cmpsl
cmp
pushf
divb
jge
jg
xor
mov
xor
insb
mov
dec
cli
sub
sti
jns
in
clc
jmp
and
out
dec
scas
lcall
aad
imul
loopne
mov
imulb
lods
push
mov
mov
dec
fisttpll
mov
arpl
pop
sahf
pop
sti
inc
test
fstpt
inc
cmpsb
daa
xchg
or
lcall
dec
xchg
outsb
xchg
dec
inc
dec
or
mov
push
push
cmp
movsl
out
dec
insb
dec
int3
aas
add
or
jg
loop
inc
mov
ror
jns
fs
sub
aad
push
jle
sbb
lds
cmpsb
xchg
mov
flds
and
adc
mov
leave
int3
das
nop
ljmp
push
inc
xchg
ljmp
dec
dec
jne
lods
ret
icebp
and
aam
add
loop
aad
pop
jne
sub
leave
fbstp
in
inc
cld
daa
scas
imul
fstl
stos
popa
xor
jge
inc
inc
sbb
divl
sbb
inc
dec
xor
sbb
lock
daa
push
mov
shl
inc
mov
ja
mov
push
repz
push
lahf
int
xchg
adc
std
sbb
mov
into
push
mov
js
outsb
imul
sub
push
inc
jne
push
cmpsb
mov
cmpsb
divl
lds
push
fdivrs
mov
xchg
or
int3
cmp
sub
jp
xor
iret
mov
mov
cmpsb
or
mov
push
add
adc
mov
push
shrl
stos
insb
les
dec
mov
jmp
fs
loopne
js
sahf
jbe
mov
sub
dec
sahf
decb
xchg
mov
cmpsb
and
pop
and
sti
xchg
daa
pop
xor
insl
push
xchg
pop
out
or
iret
test
call
mov
add
add
aas
jo
xor
sub
xchg
scas
sub
mov
rcr
out
aaa
mov
add
or
jl
inc
sbb
repz
dec
outsb
scas
lea
incl
xchg
movd
add
jl
pusha
shlb
cmp
mov
xchg
aam
mov
call
mov
pusha
lea
jne
mov
pop
in
sbb
ret
es
scas
out
mov
mov
leave
xor
xchg
mov
in
stos
cmp
sub
and
jnp
xchg
decb
aaa
mov
arpl
xchg
loop
scas
inc
add
ficoml
pusha
sub
xor
cmp
imul
and
je
xchg
xor
pop
rolb
jo
ss
inc
and
sub
mov
sub
mov
repnz
aas
cltd
lock
fcoml
jns
lahf
rcrb
icebp
insb
imul
sbb
into
lret
sbb
dec
inc
testl
lods
iret
jl
push
into
adc
ret
sbbb
jae
xor
xchg
out
scas
in
imulb
shrl
sub
insb
popa
adc
dec
inc
cmpsb
ret
pop
je
sti
insl
sbb
movb
movsb
fiadds
pushf
sbb
xor
mov
push
daa
mov
add
pop
xchg
fcmove
sub
push
add
mov
cli
pushf
and
sbb
lods
test
push
fdiv
scas
test
aad
and
adc
dec
cmp
nop
in
cmpsl
sub
or
push
sbb
enter
ljmp
mov
jp
add
sub
inc
repz
sar
rorb
outsb
rcrl
js
sub
jnp
addl
rsqrtps
xchg
push
enter
push
mov
mov
xchg
xor
inc
int3
call
scas
fwait
inc
mov
or
ret
roll
gs
aas
xchg
test
cmc
es
inc
in
add
aad
add
leave
push
adc
test
sub
scas
push
cs
cltd
aaa
out
mov
inc
leave
cwtl
sarb
xchg
or
pop
cmp
jle
arpl
stc
add
ja
or
or
inc
xchg
lds
sbb
outsl
and
fldenv
push
lcall
std
xchg
sbb
mov
movsb
ret
orb
and
pop
std
ficomps
jo
jno
or
mov
int3
clc
scas
lea
cmp
in
sub
pop
imul
push
add
ret
scas
push
add
clc
mov
xor
mov
cmp
adc
jb
inc
pop
out
pop
lods
pusha
add
movl
out
out
test
xchg
xor
out
jle
std
add
int3
jmp
pushf
lcall
pop
mov
popf
fisubrl
out
test
xor
imul
mov
pushf
push
push
stc
int
data16
popf
xchg
sbb
mov
ss
int
push
imul
outsl
cld
xchg
add
cmp
mov
jge
cltd
push
mov
out
sahf
fadds
lahf
jge
sub
and
push
jne
inc
pop
pop
sub
jle
out
jecxz
into
lahf
mov
jns
cmp
fdiv
test
out
jae
pop
icebp
fstl
push
dec
dec
pushf
lea
repz
mov
push
into
cmp
out
sbb
stos
popa
aad
repz
ret
push
add
sub
jb
add
in
movsl
ret
cmpsl
nop
inc
sbb
fisubrs
ret
mov
sbb
test
sbb
pop
and
xor
xor
fwait
in
movsb
xor
int
mov
push
scas
aad
shlb
arpl
ret
jg
mov
xchg
add
fisubrs
stos
shlb
dec
in
pushf
and
scas
cmp
adc
sbb
shll
call
sub
notb
mov
mov
push
sti
xchg
popf
aad
in
jecxz
enter
push
push
pop
pushf
cmp
mov
push
lock
cli
pop
dec
mov
test
lods
mov
adc
mov
mov
inc
dec
mov
arpl
or
inc
loop
es
lcall
mov
lea
xchg
jge
mov
pop
out
sub
mov
xchg
jmp
jns
mov
jae
imull
inc
inc
loopne
xor
aad
cmpsl
push
lds
push
adc
jmp
pop
repz
add
mov
dec
jp
scas
push
bound
cmp
ljmp
in
lcall
inc
lcall
fbstp
xor
mov
xchg
imul
lods
iret
xor
aad
fadds
stc
ret
xchg
xchg
sbb
xor
xor
adc
pop
insl
and
sbb
cli
xchg
and
enter
mov
ja
mov
cmp
adc
and
fs
popa
popf
push
cmp
xor
mov
cmp
popa
push
outsb
sub
fcmovu
cmpsl
je
pop
mov
lahf
ret
add
idivb
adc
xchg
sbb
add
cmc
or
repz
sarb
pop
push
mov
sti
add
cmp
push
test
add
adc
aam
ds
or
popa
leave
and
xor
sarl
pop
andl
imul
mov
mov
pop
js
fistl
hlt
sbb
es
out
sar
or
popf
sbb
mov
sub
cltd
mov
xchg
out
outsl
mov
popf
pop
and
movhps
lret
sbb
add
pop
inc
sub
inc
lret
loopne
or
aam
test
repnz
lods
mov
inc
xor
push
je
mov
mov
xchg
mov
je
dec
adc
and
cmp
out
xchg
loop
into
out
push
pop
lods
pop
mov
call
and
sti
cmp
cltd
imul
notl
push
decl
adc
movsb
inc
pop
cmpsb
subb
ficomps
ds
ja
vpshad
and
xchg
test
xor
scas
adc
add
sahf
outsl
mov
rcl
into
adcl
test
addl
dec
xchg
lret
mov
mov
hlt
cmpl
lea
ljmp
das
xchg
mov
popf
ds
mov
jecxz
mov
jge
adc
xlat
ret
pusha
push
sub
inc
inc
jg
xor
mov
push
jae
push
mov
cmpsb
mov
mov
jl
cmp
aad
shrb
lcall
clc
cmp
int3
lods
sti
fbld
xchg
mov
mov
mov
add
lea
jmp
inc
out
into
push
mov
enter
mov
aas
inc
mov
jnp
mov
sbb
ret
sub
cli
dec
xor
add
test
add
pop
mov
cmp
shl
jp
test
shl
incb
in
lret
stos
ja
add
insb
stos
sub
stc
xor
push
shrl
jne
scas
dec
testb
outsb
mov
jbe
cs
mov
ljmp
mov
ret
xchg
les
cltd
push
mov
cmc
fildl
sub
jae
sbb
fldenv
fistpll
xchg
sbb
fdivs
inc
xor
adc
inc
shl
mov
jecxz
loope
push
push
scas
xchg
sub
xchg
sub
xchg
adc
push
fmul
aam
dec
dec
ret
jno
sti
stc
in
out
xchg
lods
movsb
inc
fmuls
xchg
loope
sub
mov
pop
dec
push
out
cltd
addl
add
xor
or
inc
cmp
jg
inc
sarb
xlat
movd
push
shlb
xchg
add
scas
inc
jb
nop
test
add
jp
je
mov
push
cli
inc
push
stc
xor
sbb
faddl
or
andl
gs
fmuls
push
mov
lret
jbe
pop
mov
cmp
lcall
in
rcll
cli
push
mov
arpl
jl
xchg
adc
lret
out
dec
rcll
fcoms
cltd
sti
loopne
jecxz
sub
das
js
mov
add
mov
mov
add
in
lods
scas
xlat
lcall
out
adc
inc
test
cmp
pop
pop
ret
dec
cmc
inc
lods
int3
add
jnp
adc
push
xor
sbb
and
gs
mov
cmc
out
jp
pop
mov
imul
mov
xchg
test
and
adc
add
pop
sbb
inc
inc
sub
cltd
shrb
shlb
es
dec
mov
xlat
icebp
cmp
push
inc
mov
outsl
add
sbb
adc
fstl
cmp
pop
lahf
lea
mov
sbb
lret
int3
or
pop
add
mov
add
pop
dec
cmp
mov
cmp
inc
sub
adc
sbb
pop
jmp
mov
push
js
out
dec
lods
sub
sbb
xor
fildll
into
dec
xor
and
jns
push
mov
mov
xchg
xor
leave
xchg
pusha
xor
push
adc
sub
adc
jp
dec
scas
aad
arpl
js
cmp
out
fimull
cmp
push
cmp
mov
sbb
arpl
sbb
jbe
popa
push
jle
jp
mov
jle
sub
add
sub
cld
xchg
mov
push
fs
jl
mov
jbe
scas
popa
in
aad
add
dec
std
dec
bound
cmp
rolb
mov
popf
inc
sbb
insb
cs
in
cli
inc
jo
addl
cmp
mov
add
test
stc
pextrw
cmpsb
shll
mov
or
sahf
sub
ljmp
inc
mov
stc
push
jns
mov
cmpb
cmp
repnz
pop
sbb
mov
inc
repz
push
aas
popa
mov
jb
movsl
sti
lock
xor
in
jns
sahf
mov
out
scas
dec
sub
xor
mov
cmpsb
inc
pop
test
popa
push
jne
and
in
das
fimull
outsb
dec
mov
test
sbb
loop
jl
push
xrelease
inc
imul
jmp
pop
mov
cmpl
mov
xlat
fcoml
popf
test
push
notl
xor
pop
mov
mov
stc
out
jmp
sbb
xlat
jne
aam
jnp
test
xchg
push
cs
push
lods
or
pushf
stos
adc
sub
neg
mov
fistpll
jnp
mov
sbb
dec
dec
pop
jmp
aas
xor
leave
lock
mov
dec
fwait
dec
and
fwait
or
jb
loopne
cmpsl
and
mov
inc
jle
int3
mov
stc
adc
adc
test
out
xchg
repz
xchg
xchg
movsl
pusha
das
dec
and
or
jp
push
icebp
mov
daa
pop
jmp
or
jo
mov
lods
loopne
incb
push
fwait
divl
imul
dec
aad
adcb
lahf
iret
xchg
adc
fdivrs
push
mov
sahf
push
adc
cmp
stc
jle
jmp
pusha
ret
push
jg
pop
arpl
imul
fsts
mov
jnp
leave
imul
jno
jmp
bound
mov
cld
push
adc
jb
push
cmp
lret
pop
sti
xchg
insl
cmpsl
cli
pop
jmp
out
adc
mov
std
imul
cmp
ficoml
arpl
inc
scas
xchg
cmp
inc
ucomiss
fidivs
ja
inc
mov
or
cld
and
daa
sub
inc
or
xchg
nop
inc
sbb
cs
ficompl
daa
adc
sbb
std
push
jecxz
add
mov
std
jmp
popf
push
jb
subl
xor
xor
aam
lea
orl
mov
cmp
cmp
cmc
mov
sub
and
cmc
mov
jne
or
stc
or
xor
inc
movsl
mov
test
xchg
stos
mov
inc
gs
in
ret
leave
mov
cli
aad
jl
test
jno
icebp
aaa
jl,pt
in
push
cld
out
out
data16
shll
cmp
lock
loope
das
popf
xlat
mov
pop
fidivl
test
enter
pop
inc
push
fidivrl
fisubrl
mulb
sub
pop
push
pop
jb
idiv
inc
adc
adc
mov
popf
rcll
xor
in
pop
mov
dec
in
or
and
aas
or
xchg
lahf
add
ja
in
adc
dec
jmp
cs
xor
mov
mov
vpcmov
mov
rcll
and
or
jecxz
mov
xchg
ja
out
aam
pop
xor
nop
mov
jmp
xchg
cltd
test
pop
xor
sbb
fwait
shlb
pop
and
mov
pusha
jo
mov
push
fldt
pusha
movsl
jne
sub
dec
jecxz
pop
jne
leave
lock
xchg
inc
xor
jbe
dec
mov
mov
stos
or
or
cmc
jmp
mov
inc
les
and
push
xor
push
add
dec
mov
cmp
fwait
and
test
mov
cmp
push
dec
mov
into
icebp
int3
mov
lcall
adcb
dec
out
loop
jg
sub
fstps
and
in
add
into
mov
add
in
inc
test
cmc
sbb
mulb
add
and
lods
xor
xlat
mov
mov
sti
sub
mov
sti
aas
cli
sbb
rcrl
les
sahf
push
dec
stos
inc
arpl
enter
lret
cmp
jge
out
fnstcw
mov
or
andl
subl
adc
fwait
push
nop
sub
xor
std
jae
mov
stos
stos
in
jne
dec
push
enter
push
pop
cltd
dec
movlps
pop
push
and
fcmovne
scas
and
int
in
mov
pop
fwait
jne
jmp
xchg
in
jle
and
shl
ss
mov
mov
lock
sarb
mov
je
insb
aas
mov
mov
clc
rolb
daa
jmp
sbb
cmp
mov
dec
add
or
gs
jge
pop
push
push
inc
mov
pop
addr16
or
scas
mov
cmp
imul
insb
sbb
mov
push
push
popf
sti
xor
mov
cwtl
inc
xchg
mov
xor
jecxz
ja
ja
jg
orl
cmp
dec
cmc
jmp
sub
mov
push
sbb
addb
jne
outsl
adcl
das
mov
scas
in
outsb
jae
testb
and
rclb
dec
dec
sbb
pop
dec
int
push
in
cltd
inc
dec
mov
stos
aad
push
and
in
jg
lret
adc
mov
inc
nop
mov
cld
add
or
enter
mov
sub
pop
mov
pop
aaa
scas
pop
xchg
push
mov
jmp
decl
sbbl
mov
movsl
cmp
pop
mov
dec
mov
aad
cmp
out
inc
mov
lods
lea
pusha
imul
mov
std
cmc
xchg
mov
outsb
pushf
shl
add
outsl
loopne
cmp
lret
stos
mov
lock
movsl
inc
popw
cmp
cmpsb
in
addb
out
mov
cmc
ljmp
jl
or
je
push
mov
ljmp
add
xchg
dec
mov
fisttpll
or
xchg
push
mov
pop
mov
or
loop
adc
test
and
mov
mov
sub
add
sub
ret
pop
pop
enter
cltd
or
sbb
addr16
repz
or
sub
out
sbb
pushf
mov
popf
sbb
and
dec
int3
lock
decl
pop
and
lret
sahf
and
push
aad
jae
popa
out
sti
adc
inc
stos
push
aam
lea
xchg
inc
xchg
test
shlb
pusha
push
or
mov
movsb
ret
inc
pop
insb
dec
dec
sahf
out
aas
xchg
into
into
ds
jge
insb
xchg
mov
push
mov
jo
cmp
addb
shl
hlt
lahf
outsb
mov
dec
aaa
jmp
jle
jp
pop
add
rcrl
jnp
cmp
adc
xor
aaa
ss
or
jmp
xor
loop
cmp
sbb
andl
adc
call
cmc
pop
xor
pop
cmpsl
das
pop
push
inc
cli
mov
sahf
adc
mov
mov
xchg
outsb
mov
cmp
cmpsl
cmp
mov
fs
lods
ss
stc
mov
jmp
mov
mov
dec
push
and
mov
mov
push
pop
sbb
out
or
and
icebp
pop
lods
es
add
icebp
movsb
dec
mov
test
daa
movsb
inc
xchg
push
xlat
mov
fildll
dec
sub
sub
fsubl
pop
shlb
cmp
push
sub
push
or
stos
xchg
pop
pop
mov
cwtl
ficompl
sbbl
outsl
push
add
jb
push
out
jo
lds
gs
fbstp
pop
xor
sub
cmp
push
rcrl
dec
jnp
inc
pop
sbb
mov
xor
adc
sbb
addl
and
es
add
mov
xchg
out
dec
and
lahf
pop
in
ljmp
mov
test
repnz
outsl
and
xchg
jmp
cmp
fwait
push
mov
call
inc
jae
imul
sarb
xchg
stos
into
ret
fsts
rcrl
insl
jne
jne
fnstsw
ret
xchg
in
mov
inc
fcos
iret
test
mov
pusha
and
test
cmpsb
imul
mov
shrl
sbb
ret
fldcw
insl
cmp
aad
push
lea
int
cld
out
mov
dec
xchg
mov
scas
and
ja
push
mov
push
lods
jb
adc
cmp
adc
lds
loopne
inc
dec
out
or
test
imul
jns
daa
aas
clc
mov
jle
sub
aam
or
imul
stc
jle
xchg
popa
mov
mov
imul
addb
hlt
jnp
add
loop
ja
fiadds
or
dec
cltd
jo
mov
enter
dec
les
call
data16
cld
mov
xchg
popa
sbb
lahf
inc
inc
ss
inc
pshufw
idivl
fistpll
adc
xchg
mov
stc
jp,pn
lods
mov
fiadds
ret
incl
aad
outsb
cwtl
call
sbb
cltd
insl
cli
pop
adc
loope
lret
jl
mul
je
arpl
mov
or
adc
scas
mov
hlt
dec
jl
aad
stos
fidivrl
jl
aam
add
popa
and
int3
add
es
and
adc
xor
xor
decl
mov
fs
cld
or
stos
cmp
jmp
das
jne
push
hlt
xor
dec
jl
out
iret
mov
int3
cmp
push
jmp
test
pop
mov
pop
aaa
fnstsw
out
hlt
xor
mov
mov
mov
test
ds
or
mov
xchg
cmp
jle
or
and
ret
loopne
fisttpll
jbe
ffree
addr16
ds
insl
lahf
pop
cmp
inc
int3
nop
fwait
pop
sbb
roll
lods
inc
mov
out
adc
xlat
leave
jo
fldcw
ret
lods
cmc
test
std
push
or
leave
or
stos
add
xor
out
mov
jg
enter
xchg
fucomip
bnd
mov
jbe
loope
prefetchw
or
test
sub
ja
stos
in
xor
jbe
mov
mov
adc
cmp
jecxz
push
cmp
xor
dec
mov
xchg
pop
es
std
xor
dec
xchg
shr
push
ss
negl
and
loopne
jmp
cltd
dec
fcoms
add
lods
xchg
icebp
sarb
hlt
mov
adc
jns
jno
movsb
xor
stos
jmp
lea
mov
imul
dec
je
lock
xchg
pop
cld
ret
leave
out
insl
push
or
dec
mov
cmc
rorl
mov
mov
lods
adc
push
mov
pop
cmp
das
xlat
inc
fstl
inc
xchg
lds
aad
or
test
push
pusha
jae
imul
cmp
inc
clc
clc
lcall
pusha
jle
cmp
add
mov
scas
cmpsl
mov
xchg
adc
dec
cmp
xchg
loopne
inc
pop
mov
lret
mov
loope
in
roll
out
out
je
cld
subb
jb
dec
or
mov
jno
lahf
adc
sub
sbb
test
aam
sbb
mov
push
push
icebp
push
jno
ret
arpl
enter
mov
pop
mov
scas
dec
mov
jle
push
inc
mov
imul
fstpt
icebp
les
pop
xor
sub
mov
icebp
clc
shl
jae
jne
add
xchg
pop
or
mov
and
xchg
mov
dec
insb
jnp
xlat
xchg
pop
xchg
scas
pop
sahf
fwait
xor
test
prefetchw
or
and
cli
add
or
push
in
jae
mov
ds
dec
fwait
cld
dec
neg
scas
addr16
jmp
and
pop
jnp
push
hlt
aas
aam
jmp
in
pop
js
pop
sbb
js
xor
clc
mov
pop
loopne
dec
sub
sub
adc
pop
mov
stos
xor
push
ds
xchg
je
push
xorl
xchg
ja
sti
imul
pop
inc
or
nop
pop
cli
add
imul
inc
inc
mov
orl
sub
xor
xchg
or
imul
xor
pushf
mov
in
lods
sub
inc
inc
add
lods
mov
stos
scas
jge
cld
mov
pusha
stos
das
mov
push
adc
dec
add
sub
iret
dec
jns
cld
xor
nop
pop
imul
xchg
in
push
imul
mov
fldl
push
and
rcr
daa
mov
daa
xlat
push
pop
fstp
out
jecxz
cltd
enter
outsb
xorl
inc
shlb
jnp
lret
lahf
jnp
push
push
nop
xchg
js
sub
jl
dec
mov
jo
inc
adc
mov
ret
ljmp
cmpsb
iret
ss
ja
popfw
mov
fsubrl
xchg
hlt
jg
sub
lock
adc
cmp
jb
push
lahf
jle
xchg
fsubrs
mov
mov
xchg
push
in
push
out
ret
xor
es
sbb
jmp
loop
mov
mull
scas
mov
add
mov
pop
cmp
or
fcmovbe
xor
cmc
icebp
xchg
sbb
sarl
in
in
mov
and
pop
arpl
or
ret
mov
mov
stos
and
adc
xchg
mov
lahf
stos
mov
or
mov
sub
test
add
mov
pop
cli
mov
adc
test
jnp
push
cmp
stc
xchg
add
int
dec
out
and
and
outsl
pop
stos
lea
xor
aad
cmc
push
adc
in
jae
xor
lds
dec
out
inc
addr16
and
out
dec
lock
adc
rorb
push
sbb
mov
ret
jnp,pt
orl
cmp
and
daa
mov
rcll
or
lods
test
cld
subb
imul
cltd
mov
cmp
lahf
sbb
stos
xor
jl
mov
xlat
sbb
lock
lods
rcrb
pop
push
jbe
std
inc
movsl
push
ss
gs
jo
jne
mov
mov
je
leave
xchg
in
xor
fsubr
test
cmpsl
mov
mov
push
outsl
pop
xchg
cld
mov
mov
and
xchg
xchg
sub
push
or
mov
dec
gs
or
in
dec
imul
sti
jb
cmc
call
jg
cs
cmp
push
xor
push
setbe
add
jb
cld
scas
mov
sbb
inc
xchg
ret
inc
add
cwtl
push
push
sbb
pop
subb
pop
cltd
iret
lods
pop
loop
imul
and
mov
sbbb
mov
sbb
bound
ja
cli
aad
mov
push
scas
xor
pop
sub
add
add
fchs
adc
push
cltd
sub
shlb
insl
inc
inc
lret
add
lret
ljmp
jbe
mov
cmpsl
jl
nop
repnz
xchg
into
jb
and
sbb
mov
test
in
pop
shl
jne
mov
xor
cwtl
sub
sti
pushf
insb
dec
mov
add
stos
gs
test
das
popf
jne
sbb
push
in
bsf
outsb
popa
adc
lds
pop
loopne
pop
mov
movsl
mov
and
in
fbstp
faddl
dec
mov
cmp
mov
sbb
or
lds
popf
push
scas
lret
arpl
loope
leave
sar
loop
cmp
lock
jns
hlt
insb
cmp
jns
push
int3
les
sbb
dec
inc
or
dec
xor
es
push
xchg
arpl
aad
mov
int
push
cltd
call
mov
scas
jge
push
xlat
cmp
xchg
mov
sbb
rcll
jb
lods
cltd
push
push
fnstenv
outsb
push
cmp
insl
cmp
sub
pop
pop
test
fnstsw
popa
cltd
jecxz
sbb
push
cmc
iret
enter
xchg
or
sbb
pusha
mov
fimull
cmp
rol
dec
sbb
outsb
jbe
ss
mov
stos
stos
and
dec
or
lods
push
cmpsl
sbb
jns
movsb
push
jge
orb
out
out
push
push
hlt
mov
jno
sbb
jecxz
mov
cld
cmp
je
mov
std
fsubl
pushl
mov
arpl
or
jl
popa
adc
pop
clc
pop
push
fisttpll
mov
cwtl
out
aam
das
dec
inc
xor
dec
test
rcll
jmp
lahf
mov
sbb
mov
jge
test
and
xchg
pop
gs
mov
jmp
je
inc
inc
jmp
lock
ret
and
jmp
pop
cld
cs
lods
adc
dec
in
daa
sub
add
jecxz
and
mov
sub
js
mov
dec
loope
notl
sub
cmp
aam
jnp
and
pop
in
mov
jne
outsl
xchg
add
mov
xchg
mov
mov
fists
push
stos
xorl
push
loopne
orb
fildl
addb
es
mov
add
jb
sub
inc
roll
ss
into
ret
imul
aad
jmp
shll
repnz
mov
sbb
cmp
testl
sbb
decl
aam
dec
jnp
dec
imul
xchg
in
mov
jo
inc
inc
xor
dec
les
adc
rcrb
sub
or
repz
and
push
mov
out
into
lods
ja
in
dec
shll
filds
and
cmp
sarb
inc
inc
mov
add
or
mov
or
leave
sub
lea
mov
clc
jo
sub
popf
scas
mov
addr16
mov
push
mov
cmpl
pop
xchg
mov
add
xor
or
jne
movsb
push
adc
adc
xchg
cltd
mov
and
adc
jge
aaa
sahf
xchg
push
aad
fisttps
mov
cmp
jmp
and
inc
into
fnstcw
cli
pop
outsb
dec
lcall
push
out
xchg
xchg
or
gs
or
shl
or
adc
cltd
cs
and
lret
mov
push
out
rcll
into
jno
mov
cltd
out
mov
inc
mov
js
enter
mov
mov
leave
jge
insb
incl
lock
cmp
inc
hlt
notl
orb
cmp
sbb
and
mov
imul
adc
sub
ljmp
addr16
and
out
idivl
sarb
hlt
pop
jb
lahf
test
push
inc
int
push
cltd
imull
sub
and
mov
fs
ja
dec
loop
lods
hlt
push
lds
jb
mov
fs
mov
cmp
test
mov
push
adc
xchg
ss
cwtl
lret
imul
out
xchg
shll
mov
pop
jns
pop
xchg
pop
js
pop
mov
lret
aad
or
and
fwait
in
mov
or
or
mov
and
lret
adc
into
shll
ljmp
dec
or
idivl
cmp
push
popf
mov
rclb
ret
mov
lret
test
mov
testb
jp
lahf
cmp
into
test
aaa
pop
adc
loop
or
xorl
in
pop
out
in
js
incl
adcb
roll
sub
fsubr
rolb
or
pop
xadd
out
mov
rcrl
out
xchg
hlt
jae
stos
lods
lds
and
ja
lock
into
subb
out
sahf
lahf
mov
sub
jnp
call
mov
push
jmp
int
mov
movsb
out
mov
pop
sti
es
scas
mov
sbb
xor
sti
stos
arpl
bound
inc
push
push
sbbl
imul
je
into
xor
lds
mov
xor
xchg
insb
and
or
cmp
ror
outsb
test
hlt
enter
fdecstp
test
lock
arpl
inc
and
fwait
and
rcl
mov
iret
loopne
out
mov
inc
mov
cmp
in
std
insl
movsb
inc
xchg
iret
fs
pop
jge
cmp
adc
sbb
das
push
xchg
pop
mov
inc
cmp
iret
cwtl
jb
movsl
int3
xorl
test
icebp
movsl
in
dec
xor
or
adc
imul
fwait
inc
adc
or
popa
test
daa
sub
xor
test
lea
inc
pop
pop
sahf
mov
mov
mov
xchg
iret
lret
cmpl
leave
ja
dec
jp
cmpl
mov
pop
rolb
and
mov
ret
ret
cwtl
cltd
fisubs
mov
xor
loop
sbb
inc
repnz
jo
rorb
xor
xchg
jo
push
sbb
aad
or
sbb
inc
les
dec
sub
out
pop
inc
scas
rolb
pop
stc
add
popf
das
push
cs
xchg
or
jno
pop
jns
push
daa
les
add
inc
iret
cwtl
pop
hlt
sbb
inc
aaa
out
test
aad
inc
dec
mov
testl
aad
adcl
pop
fcoms
out
cmp
add
mov
cmp
mov
pushf
inc
mov
repnz
cltd
out
cmp
mov
add
or
pusha
lds
ret
leave
enter
or
jnp
out
in
mov
pop
lahf
mov
mov
aad
call
in
aam
mov
adc
push
fsubrs
push
rclb
aas
push
insl
fwait
dec
lods
rol
aas
jl
jo
or
ss
push
stc
dec
pop
in
ret
pop
fwait
sub
jle
dec
and
fimull
ja
inc
call
xor
mov
push
push
push
xor
jmp
jge
repnz
jnp
repnz
repnz
lahf
fisttpl
sbb
aam
push
sbb
inc
push
fstpt
scas
nop
leave
cmp
orl
fwait
and
in
outsl
sbb
out
push
push
insb
in
lcall
pop
sub
adc
push
das
fidivs
pushf
fildll
inc
mov
push
in
daa
adc
mov
dec
push
mov
loop
ds
in
sbb
shlb
jg
inc
cmp
push
sub
or
or
mov
popf
ffree
daa
sbb
out
sbb
inc
mov
jns
and
or
sbb
shlb
lcall
aam
stc
test
push
sahf
jle
jg
in
add
shrl
push
ljmp
les
cld
push
dec
ljmp
es
jne
arpl
fisttpll
jne
mov
leave
bound
sar
add
sbb
std
pop
ror
insl
add
dec
or
ds
mov
in
negb
jns
fs
sub
pop
add
cmp
iret
sub
inc
je
xlat
jno
dec
push
mov
lcall
in
pop
lock
mov
stos
cmp
scas
xlat
aad
and
notl
or
nop
roll
bound
mov
dec
jle
icebp
inc
or
push
fcompl
loope
cmp
push
push
flds
lret
pop
mov
dec
ja
dec
lahf
cltd
sbb
sbb
pop
push
jmp
pushf
inc
sbb
js
repz
out
mov
daa
or
cmp
out
aam
clc
cmp
cmp
inc
sarb
adc
mov
mov
lea
cmp
xchg
lcall
push
sbb
or
push
cmpsl
stc
mov
cmp
into
sbb
pop
test
sbb
cmc
mov
outsl
adc
imul
mov
or
cltd
sbb
xor
imulb
lret
pop
jno
xor
xor
fsubl
lods
pop
aam
sbb
push
sbb
and
mov
pop
adc
xor
dec
lock
inc
popf
or
loop
jmp
and
sti
jns
add
cmpsl
xor
in
fldl
mov
jle
pop
adcl
in
nop
and
dec
out
add
dec
or
shl
jns
push
mov
mov
sbb
inc
push
ljmp
pop
inc
sub
cmp
ret
outsl
mov
out
mov
push
mov
adc
dec
push
loopne
xor
aaa
inc
addr16
les
call
mov
stos
cmp
and
lods
call
jg
push
pop
jae
in
inc
cmp
pop
cmpsb
xorl
outsb
mov
or
cmp
jne
test
dec
sub
mov
mov
and
pop
push
cmpsb
inc
jmp
and
in
pop
ljmp
push
push
mov
stos
neg
mov
lods
outsl
xchg
fsubr
lret
jl
pushf
dec
in
or
mov
arpl
stc
ret
jge
iret
out
xchg
xor
in
jg
adc
adc
adc
sbb
popf
mov
cmp
out
gs
sti
arpl
jno
mov
adc
sub
xchg
cmc
outsl
popa
enter
mov
out
cwtl
stos
hlt
es
xlat
mov
add
fists
mov
pop
xchg
xchg
in
daa
outsl
mov
in
aam
rclb
leave
and
sti
ja
xchg
jo
jecxz
pop
jo
das
inc
mov
jbe
or
dec
pop
dec
add
sar
mov
cmp
or
in
mov
pop
xchg
lret
mov
clc
inc
mov
repnz
dec
adc
rol
push
in
cmp
cli
mov
mov
sub
cmp
std
ja
dec
ljmp
xor
fmull
mov
das
fcoms
iret
je
mov
adc
and
std
xchg
mov
push
adc
push
icebp
imul
mov
int3
out
mov
cs
mov
mov
dec
cmp
int3
cmp
ret
cmc
and
and
add
ds
add
mov
adc
aas
and
mov
cmpsb
pop
stos
dec
sbb
stos
lods
fistpll
inc
subb
xor
fidivl
xchg
jo
daa
ja
mov
xor
filds
js
or
out
leave
jle
fwait
push
hlt
lock
sub
mov
mov
ret
hlt
mov
add
push
inc
sub
mov
cmpb
sbb
adc
loopne
sub
lods
mov
jmp
bound
aaa
mov
sbb
xlat
xchg
push
or
repnz
cmpb
push
adc
adc
bnd
mov
xchg
dec
aad
js
adc
jmp
imul
mov
int
inc
inc
jns
or
xchg
iret
rcll
adc
mov
in
and
jb
lcall
cmp
lods
pop
xchg
mov
pop
mov
daa
mov
call
sbb
cli
rcrl
enter
add
fimull
push
sbb
xor
sbb
movsb
fisttpl
push
bound
jno
push
or
jg
xor
fs
and
icebp
xchg
test
aas
add
push
xchg
mov
inc
mov
in
mov
dec
adc
push
inc
jbe
add
out
jns
packsswb
jl
or
testl
mov
push
xchg
out
addr16
je
push
out
adc
mov
stos
mov
rolb
xlat
nop
jne,pt
daa
cltd
aaa
repz
ljmp
mov
in
sub
push
jge
popa
mov
lds
sub
orb
xchg
add
fs
movsl
icebp
dec
sbb
mov
cmp
xor
inc
loope
ss
stc
in
jno
ret
jle
repz
adcb
sarb
dec
add
adc
mulb
fstps
inc
mov
outsl
jecxz
movb
ficompl
loope
sarb
test
in
lretw
mov
add
push
rcrb
mov
mov
xor
in
bound
lahf
mov
lret
and
xchg
dec
jecxz
fwait
lods
and
sbb
lret
lcall
flds
aaa
jne
lahf
xchg
les
pop
jns
jns
mov
mov
pop
test
push
nop
jmp
mov
frstor
add
in
jns
mov
lret
jle
loop
cmp
nop
out
mov
sub
xchg
cmp
lea
jb
movsl
pop
ja
push
jbe
mov
jbe
sbb
in
out
xor
add
popa
movsb
mov
int3
add
je
pushf
mulb
sub
mov
inc
lods
xor
jp
mov
mov
fnstenv
test
and
lahf
into
loope
sbb
notb
stos
mov
popa
cmp
cli
or
jo
jnp
imul
popa
shl
add
sti
or
mov
jo
lods
xor
xor
aas
popa
mov
or
fcomps
pop
jae
mov
sbb
dec
stos
inc
add
and
cld
xchg
add
rolb
or
push
in
jp
pop
test
sub
test
js
pusha
xchg
pop
sub
xchg
cmpsb
jecxz
outsb
int3
pop
push
insb
or
hlt
pop
jno
rolb
arpl
jbe
xor
inc
loop
xchg
inc
push
cmp
pop
push
xchg
push
mov
fcoms
mov
aas
lahf
mov
xor
stos
xorl
js
xor
dec
adcl
in
mov
mov
ror
cmpsl
xchg
and
jecxz
xor
mov
sub
dec
mov
loope
mov
mov
inc
push
and
mov
inc
int
xorb
stos
cmp
aaa
xchg
jae
xchg
pop
pop
dec
mov
enter
pop
pushf
add
sbb
scas
or
rcr
mov
sbb
jmp
in
cmp
and
lods
mov
jo
sub
lock
adc
popf
ret
stc
add
pushf
call
dec
push
dec
aad
cmp
sub
out
xor
mov
mov
lods
pushf
adc
mov
pop
jbe
rcrb
adcl
stc
sti
push
xor
mov
les
and
int
pop
push
and
xchg
push
mov
and
adc
imul
and
jae
sbb
test
pextrw
inc
lret
aas
push
jle
mov
cli
sarb
fs
int3
aad
pop
xchg
pop
sbb
cmp
std
xlat
fisttpl
loop
outsl
fs
xchg
add
xor
inc
xchg
test
jno
jecxz
adc
imul
rclb
adc
jno
xchg
pop
lods
pop
fldpi
xbegin
push
pop
push
outsl
cmp
fildl
and
push
repnz
loop
loope
inc
adc
lcall
sbb
adc
push
jne
cmp
or
sub
dec
rclb
mov
cmp
xchg
xchg
rolb
mov
out
inc
addr16
push
out
movsb
or
sub
dec
cli
hlt
and
sbb
loop
xor
outsl
fmuls
mov
arpl
aam
add
loop
bound
addl
js
jle
loop
cltd
cwtl
mov
sbb
iret
sbb
int
dec
mov
adc
dec
shll
and
push
outsl
inc
push
iret
jmp
mov
sub
into
sub
inc
fs
pop
mov
jmp
mov
and
dec
std
mov
xchg
jmp
mov
hlt
scas
add
ljmp
mov
and
pusha
loopne
insl
inc
mov
or
and
push
enter
mov
add
xchg
xchg
aad
pop
dec
cmpsl
xchg
xor
mov
out
divb
cli
add
cmpsl
ds
testb
js
hlt
fwait
ret
cmc
mov
icebp
movsl
lods
push
call
mov
fimuls
es
sub
xor
xor
xchg
push
aas
in
orb
sub
pusha
mov
pop
les
or
addb
in
jnp
sbb
pop
jg
lret
pushf
lret
push
push
mov
lcall
movsb
rolb
imulb
int
outsl
sbb
add
in
adcl
dec
push
pop
insb
jb
and
xor
xor
loop
jns
jns
push
lods
in
mov
out
mov
outsb
out
jo
int3
lret
cmp
mov
outsl
fimull
iret
sbb
add
fmuls
cmp
fists
addl
or
push
push
mov
xlat
mov
mov
inc
xor
inc
mov
cli
xor
adc
dec
mov
add
push
popf
push
push
in
cmp
pop
push
mov
rol
push
fdivp
sbb
aam
and
insb
imul
cmp
cmp
ss
push
lret
ficompl
mov
sbb
lahf
out
rcll
jo
mov
cmp
xchg
lea
push
push
stos
lods
push
ja
jns
mov
jae
cmp
add
cmpsb
xor
inc
cmp
in
dec
mov
cli
stc
fadd
nop
fisubl
pop
inc
cli
into
inc
in
cmp
nop
frstor
in
mov
ret
stc
adc
in
imul
xchg
xor
imul
movsb
sbb
addr16
cmp
and
faddp
clc
jmp
inc
nopl
xchg
and
int3
pop
sub
scas
adc
cld
movsl
and
inc
clc
sub
jmpw
xchg
cmp
or
xchg
lahf
dec
arpl
loope
pushw
iret
mov
xchg
popa
xor
mov
sbb
jge
xchg
push
fcompl
negl
add
addb
jnp
in
mov
pop
xchg
sbb
xor
mov
jge
cltd
outsl
movsl
data16
inc
es
sub
insl
adc
ret
loop
mov
jb
add
add
sbb
jb
and
stc
push
pop
jle
das
bound
dec
enter
movsb
xchg
push
je
aaa
fwait
cwtl
fyl2x
test
imul
pusha
jns
mov
mov
xor
and
mov
dec
xor
lods
cmpsb
loopne
clc
repz
pop
push
out
fistpl
ret
subb
xchg
mov
sub
xchg
jl
mov
ja
fmull
aaa
and
jl
jne
repnz
sub
lahf
push
into
jb
hlt
mov
or
cmp
push
pop
xor
or
jg
mov
mov
out
mov
popa
cmp
mov
xchg
jg
jo
inc
mov
push
and
jae
jb
or
jmp
mov
int
out
scas
pop
ret
loopne
fisubl
jl
mov
jns
mov
adc
jo
mov
mov
fwait
cmp
call
ret
add
cmp
cltd
xor
popa
inc
in
fsincos
sub
fwait
dec
insb
loope
inc
lret
int3
xor
push
gs
test
cs
xchg
int3
jno
and
movsb
cmp
push
fldcw
scas
rclb
pop
mov
jmp
test
sbb
add
lods
roll
sub
inc
cli
jbe
cmp
mov
cmpsb
adc
fisubl
adc
xchg
and
inc
and
inc
out
push
adc
mov
lods
jae
shlb
in
das
or
test
mov
cmp
outsb
adc
mov
or
inc
in
enter
jnp
xor
xor
mov
cmc
xchg
mov
pop
fnstcw
push
into
ds
or
stos
xchg
js,pt
mov
in
scas
push
mov
imul
inc
in
test
shrl
lcall
push
rorl
imul
int3
jle
test
repnz
loope
call
jecxz
and
pop
mov
divb
jg
fcomps
xor
or
push
mov
push
adc
test
dec
in
jb
jb
testb
xchg
int
gs
or
nop
adc
or
sarb
sub
shr
aaa
pop
dec
and
xor
iret
vmovd
adc
pop
popa
int
outsb
xor
stc
cmp
sahf
arpl
pop
pop
mov
stos
pop
insl
sbb
rorl
shr
lahf
aas
dec
jbe
out
out
loope
pop
idivb
jae
mov
pop
cs
add
sub
clc
xor
jne
cmpsl
mov
bound
mov
insb
loop
aaa
aam
aam
out
stc
adc
pop
stos
insb
xor
mov
cmp
outsb
mov
add
cltd
fwait
sbb
enter
addr16
pop
lods
shrl
xchg
sbb
sti
imul
int
xchg
push
iret
xchg
mov
xchg
fsubrl
sbb
push
xlat
cmpl
pop
fiaddl
dec
jae
or
cmp
ja
pushf
ret
sbb
in
fnstsw
sti
addr16
sarb
sub
or
sti
adc
xor
in
push
or
sbb
pop
scas
sub
pop
xchg
cmpsb
sbb
lret
es
sbb
ds
or
repz
mov
lahf
mov
sbb
jmp
gs
out
fmul
sti
xchg
lret
cmp
sub
mov
repnz
cmc
xorb
mov
pop
pop
mov
ret
xchg
sub
xor
adc
scas
push
rcrb
cmp
adc
aam
add
mov
insb
arpl
mov
jnp
iret
ret
lea
mov
fdivl
gs
or
out
scas
imul
arpl
cmp
cmp
xor
cs
clc
adc
aas
sub
cmpsb
or
sub
pop
test
insl
mov
mov
test
movsl
clc
xchg
inc
jo
push
rorl
fdiv
mov
xor
mov
dec
call
mov
sbb
aam
gs
arpl
add
push
push
or
cmpsl
sub
cmp
adc
mov
rcll
dec
enter
sbb
lcall
xorb
adc
pop
or
cmc
sbb
into
pop
fidivrl
inc
lret
xchg
add
andb
xchg
mov
mov
push
into
adc
xor
leave
dec
push
push
lret
adc
lock
sbb
pop
xlat
mov
in
lret
loop
or
pavgb
movsl
mov
jge
jmp
idivl
sarb
xor
pop
into
dec
les
fnsetpm(287
adc
xchg
or
push
pop
sahf
push
add
fs
push
xor
fisttps
or
in
lds
inc
stc
pop
xchg
inc
mov
jmp
rolb
movnti
int3
mov
push
bnd
sub
mov
cmpsb
push
sub
cmp
shr
inc
xor
or
mov
mov
inc
jns
sub
stos
leave
lock
xchg
int3
push
outsl
xor
dec
sub
sbb
scas
test
jne
jmp
mov
shll
mov
dec
dec
push
mov
loopne
mov
frstor
xor
adc
dec
cmp
sarl
jae
loop
in
ljmp
in
in
aad
xchg
cmpsb
or
lods
pop
insb
fnstcw
in
xchg
mov
fnsave
lahf
jl
outsl
push
push
lahf
movsl
fcmovnu
sbb
cmp
in
es
nop
and
xlat
or
xor
push
pusha
shll
xchg
mulb
and
lahf
xchg
popf
addr16
inc
xchg
aas
shrl
xor
jo
fisubrs
lret
movd
add
or
mov
jle
mov
stc
or
int
fnstcw
test
pop
shll
dec
aaa
mov
lret
inc
loop
pop
mov
testl
ret
and
mov
in
mov
imul
inc
mov
daa
cmp
xor
sbb
repnz
ja
push
or
cmp
cmpsb
data16
add
cmpsb
push
cvttps2pi
push
push
and
lods
mov
call
mov
mov
dec
xor
jae
pop
lret
in
test
ret
xor
xchg
xchg
lcall
mov
fidivrl
arpl
aas
push
stos
sbb
enter
or
cmp
loope
add
stc
jae
and
or
jbe
hlt
rorb
shr
xchg
popf
xchg
or
stc
pusha
dec
repz
jae
cmc
jns
mov
sarl
lock
leave
pop
cmpb
bound
xchg
cmc
jmp
xchg
inc
popa
outsb
andb
sbb
push
dec
gs
mov
rcll
dec
fildll
add
in
mov
pushf
sbb
mov
inc
sbb
lds
cs
mov
data16
stos
stos
inc
fisubrl
sbbl
xchg
dec
adc
fstl
sub
mulb
in
push
dec
mov
cld
insb
int
pop
pusha
div
mov
mov
aad
cwtl
pusha
fisubs
mov
pop
scas
xor
push
xchg
test
push
repnz
lods
hlt
outsl
inc
in
xlat
jp
daa
scas
adc
jne
rcl
jnp
std
mov
sahf
das
push
pop
mov
std
cmp
and
outsl
loop
sahf
jmp
xor
loop
push
mov
test
jmp
test
mov
dec
push
in
pop
and
push
neg
testb
xchg
sbb
xor
pop
cmp
sub
sub
cmp
mov
and
mov
jl
sbb
push
arpl
dec
mov
mov
sahf
cmp
out
icebp
leave
push
lahf
ss
testl
dec
fdivl
and
in
adc
cmovg
ss
loope
or
inc
adc
pop
mov
je
or
sbb
aad
imul
leave
adc
and
in
mov
int3
add
call
mov
mov
pop
jb
scas
test
inc
pushf
cmpsb
push
mov
ljmp
js
nop
inc
dec
sar
mov
outsb
fnstsw
adc
rcr
dec
xchg
jp
push
sbb
in
mov
jmp
xor
lock
adc
inc
dec
cli
and
xchg
xor
mov
subl
push
pusha
and
jb
adc
enter
or
xchg
add
inc
lods
call
or
mov
mov
jb
insl
lock
jg
cmp
mov
push
rcrb
out
pop
icebp
adc
xchg
test
outsb
jg
dec
into
dec
jmp
mov
add
jecxz
or
adc
pop
mov
out
pushf
arpl
or
ljmp
mov
cmc
mov
rclb
mov
inc
mov
jg
xor
inc
sti
xor
push
sbb
mov
in
xlat
pop
jo
or
mov
jmp
cmp
fcomps
mov
and
ret
in
cmp
inc
dec
xor
pop
in
sbb
test
decb
mov
xchg
das
push
mov
jp
mov
test
js
xlat
fwait
add
ret
icebp
pop
fcomps
call
popa
insl
fwait
out
or
mov
sbb
aaa
sti
pop
xchg
cmp
repnz
add
jb
ret
adc
adc
inc
ret
stc
dec
es
pop
cmp
lds
leave
cmp
cmp
mov
fldcw
ljmp
cmp
pop
popf
lea
and
xchg
and
cmp
cmp
push
sbb
lods
lock
mov
xor
int
sbb
jnp
cmp
mov
push
aas
ror
pop
mov
and
sbb
ljmp
loopne
enter
mov
pop
neg
ljmp
mov
cmp
xor
sub
stos
pop
xor
rcrb
mov
pop
push
testb
cli
scas
jo
sbb
popf
xor
jge
pop
sub
jbe
daa
dec
sbb
imul
xchg
in
int3
pop
push
fcompl
xchg
mov
cmp
inc
cmp
ss
pop
jo
push
xchg
jp
inc
cmp
sti
xchg
sbb
jecxz
je
jmp
mov
dec
adc
addr16
adc
mov
lcall
inc
cmp
rcl
jg
cmp
aas
negl
pop
rcrl
enter
add
pop
scas
lds
out
sbb
leave
dec
add
scas
mov
hlt
xor
inc
push
mov
push
jo
mov
fs
mov
lock
outsl
ret
sti
mov
shrb
mov
xchg
mov
das
inc
sub
clc
jecxz
cmc
lods
jb
aam
adc
pop
add
cmp
inc
sbb
mov
rcll
pop
jle
inc
push
movsb
push
in
ja
adc
insb
cs
movsb
repz
cmp
cwtl
adc
cmpsb
sub
cmp
xchg
adc
xor
cmp
add
inc
cld
pop
sbbb
jcxz
test
addl
xor
adc
jns
adc
aam
lds
dec
sbb
inc
aas
adc
bound
ss
cmp
jns
jge
fsub
icebp
mov
jle
inc
sub
xchg
push
dec
jle
dec
push
arpl
pop
push
jno
pushf
shl
inc
cmp
sub
mov
push
xor
jno
push
inc
mov
push
lock
mov
jmp
movsb
jae
add
jg
fstp
enter
cmpsl
out
aad
test
push
mov
inc
lock
xchg
movsl
aam
inc
pushf
mov
pop
inc
cmp
dec
jge
add
fisttps
nop
sub
fstps
xor
and
adc
xchg
rcrb
loope
das
pop
pop
scas
fsubrl
adc
popa
jno
mov
in
push
pop
cmp
adc
adc
out
xchg
ret
xchg
xor
xchg
addr16
lea
ret
or
dec
sub
and
sbb
loop
stc
mov
mov
jmp
xchg
pop
mov
push
call
jp
sbb
and
pop
mov
mov
pop
dec
sub
stos
movsb
daa
loopne
and
push
rorb
jno
mov
jmp
daa
mov
roll
xlat
js
imul
js
cwtl
aas
pop
pop
or
mov
mov
test
adc
stc
xchg
shlb
add
adc
sbb
daa
stos
test
xchg
xchg
mov
cld
cmpsb
xor
pushf
mov
and
jo
inc
mov
aam
daa
fsubr
sbb
fsubrs
or
push
mov
inc
sub
xchg
sub
sbb
sbb
test
sbb
int3
jb
cmp
xchg
fistpl
mov
data16
push
sbb
jns
inc
out
ret
test
or
and
jns
adc
movsb
pusha
inc
mov
jne
js
ret
mov
stos
cmpsb
jmp
push
fsubrl
cltd
insl
or
sbb
addr16
push
aam
xor
adc
push
pop
shlb
cmpsb
push
mov
dec
mov
arpl
andl
or
es
jecxz
mov
dec
push
bound
inc
das
sarl
pop
cmp
mov
int3
pop
inc
sub
xchg
sub
dec
mov
cmc
pop
push
ljmp
cld
mov
pusha
subb
mov
xchg
and
and
sub
adc
mov
adc
xor
mov
push
clc
or
mov
nop
mov
add
das
andl
adc
fcmovnb
mov
mov
mov
ljmp
adc
out
sub
sti
cmp
push
icebp
dec
scas
xchg
mov
sbb
jmp
notb
sbb
xor
mov
int3
dec
mov
in
lea
addb
sbb
jge
xor
gs
je
mov
jb
dec
pop
iret
ret
fldl
lahf
imul
dec
jmp
loope
and
lds
xor
add
and
in
xorl
mov
je
pop
pushf
pop
mov
adc
mov
stos
sub
jnp
pusha
in
scas
scas
stos
ss
cwtl
xchg
insb
add
fdivrl
jb
fs
push
and
cmp
sahf
inc
or
in
movsl
int
dec
and
xor
sbb
dec
fmuls
ret
outsb
imul
jae
mov
scas
int3
das
sti
mov
stos
jp
test
mov
add
out
in
mov
jae
xor
fsubl
adc
decl
lods
imul
and
mov
push
and
lock
jg
jge
cmp
out
fsubrl
pop
nop
enter
stos
xchg
cmp
xchg
shrb
fldenv
hlt
cld
and
inc
repz
imul
addr16
test
push
out
ja
dec
push
mov
shlb
push
fcoml
insb
push
push
jmp
sub
cld
testl
and
pop
bound
pop
out
ficoml
xchg
jp
es
push
adc
bound
xor
mov
cmp
test
add
jb
aad
and
jnp
shlb
inc
int
aam
xchg
sub
out
sub
lahf
mov
repnz
xchg
dec
mov
out
and
aaa
xchg
mov
push
inc
add
movsb
es
mov
adc
xchg
bound
pop
push
dec
inc
pop
gs
mov
fistpl
and
test
int3
pop
and
ljmp
mov
movsl
lcall
mov
xor
cld
dec
imul
pop
add
jnp
in
loope
jae
pop
sbb
xchg
inc
lahf
sbb
sub
push
cwtl
repnz
xor
cmp
das
stos
dec
xchg
out
addr16
les
jb
insl
pushf
push
data16
cmp
pop
sar
sub
sub
dec
mov
mov
outsb
xchg
std
push
or
mov
jmp
out
mov
xlat
mov
mov
mov
subl
in
pop
add
xchg
pop
lcall
pop
mov
ljmp
ds
lods
push
cmp
aam
shrb
lods
mov
mov
inc
mov
adc
cmp
adc
add
repz
addr16
push
mov
scas
inc
sbb
inc
and
cld
xchg
rolb
or
push
mov
lahf
pop
push
pop
sub
shrl
or
sub
test
mov
xlat
pop
jne
xor
xchg
out
dec
aam
mov
mov
imul
cli
mov
call
adc
add
pop
xchg
sub
sbbb
mov
cmp
cmp
dec
mov
mov
cld
repnz
bound
cltd
cmc
insl
fidivs
inc
outsl
cld
mov
mov
fs
jecxz
add
rcl
int
pusha
jno
inc
out
popa
cld
loope
ret
divb
dec
popf
rcrb
into
sub
icebp
jo
or
cwtl
fdivr
fidivrl
and
sub
repnz
cmp
test
cmp
jge
xlat
mov
stos
loope
jnp
das
gs
das
add
push
push
adc
shrl
cmovns
sub
and
fadd
jp
push
cmp
int
sub
test
add
sub
mov
jb
or
cwtl
mov
jb
mov
ficomps
inc
or
sbbl
pop
out
mov
shr
lcall
adc
adc
cmp
mov
cmc
sti
ret
sub
pop
dec
sbb
mov
fxch
stos
lahf
fdivrp
lret
mov
sbb
cmp
push
and
xchg
lcall
out
push
inc
jge
push
jo
push
mov
scas
fwait
jmp
mov
jl
sub
dec
sbb
mov
jnp
inc
adc
mov
mov
jl
dec
leave
xchg
sbb
in
push
inc
fwait
lret
push
xor
lds
mov
into
push
fsubrp
sub
out
lods
cmp
and
inc
scas
out
mov
xchg
inc
pop
or
pop
pop
testb
addr16
or
js
sub
adc
and
adc
aaa
mov
imul
std
dec
mov
cltd
in
dec
or
decl
jp
inc
jnp
mov
jecxz
push
push
mov
xchg
shlb
outsb
cltd
dec
test
mov
sub
imul
jb
fcmovbe
inc
push
sub
dec
ljmp
fdivrl
test
pusha
lods
push
xor
dec
push
mov
pop
or
cli
xlat
pop
mov
sbb
adc
xor
sbb
shll
dec
mov
mov
fists
inc
and
xchg
pushf
xchg
sbb
jbe
fmulp
loope
es
insl
fistps
lret
cmp
daa
xor
sahf
mov
xlat
dec
sbb
jae
fistpll
jge
adc
xor
cwtl
int
and
bound
cmc
je
jmp
xchg
rclb
cmp
cmpsb
fs
mov
pop
imul
xchg
cs
aaa
pusha
add
push
ja
sti
add
push
fistl
pop
xor
mov
or
adc
test
mov
aas
and
mov
cmp
ret
add
out
and
sub
psllw
addr16
xor
aaa
test
mov
aaa
push
ret
add
mull
in
scas
shlb
pop
js
push
jmp
push
mov
mov
rcl
nop
jno
cmp
popf
mov
mov
or
test
insb
adc
xchg
and
cmpsl
jecxz
icebp
lods
mov
push
sbb
adc
mov
xlat
repnz
ret
sub
push
and
mov
and
inc
push
jo
pop
push
and
mov
jge
sbb
jmp
adc
xchg
cs
dec
adc
and
idivl
movsb
sub
mov
inc
sahf
loop
repnz
inc
ficoml
add
xchg
sub
push
mov
dec
adc
test
mov
push
mov
lret
lret
sub
sti
xor
int3
jae
test
jp
mov
inc
push
mov
jo
iret
push
inc
mov
push
mov
lods
or
enter
pop
pop
or
jge
mov
push
mov
test
pop
pop
in
mov
mov
loop
mov
push
popf
out
jo
and
sub
or
in
sbb
jecxz
adc
adc
mov
into
mov
dec
rcrb
div
dec
icebp
mov
dec
xchg
adc
leave
xor
push
add
ss
fstps
imul
fucom
cmp
xchg
and
scas
xor
movb
xchg
inc
inc
cmp
mov
lret
movsb
pop
xchg
in
jmp
mov
outsb
mov
push
sbb
fmull
lea
in
inc
pop
inc
sahf
mov
xchg
aad
popa
inc
outsb
movsl
out
movd
je
fdiv
mov
xchg
xor
sbb
rcr
adc
call
loop
sbb
mov
mov
mov
lcall
les
jo
scas
lahf
fcompl
dec
jo
jae
cmp
xor
push
xchg
or
cli
outsl
adc
es
in
add
pusha
add
lods
pushl
add
xor
jmp
mov
cmpsb
sbb
int
inc
lcall
sub
iret
mov
pop
mov
push
ss
sub
xor
lods
jge
sbbb
popa
enter
jmp
mov
das
cmpsb
cmpsb
dec
enter
sbb
out
add
mov
scas
bound
inc
adc
je
mov
loopne
clc
adc
adc
imul
insl
dec
sar
push
mov
imul
xchg
mov
pop
lock
sub
ret
lret
sub
mov
mov
lods
adc
cwtl
mov
enter
clc
ljmp
or
pop
mov
faddl
dec
cmp
in
ljmp
notb
adc
jnp
out
fcmove
hlt
adc
sbbl
popa
in
mov
icebp
mov
xor
movsl
int
xchg
mov
nop
adc
dec
mov
lock
mov
testl
push
stc
movsb
test
fldenv
dec
jo
adc
push
orl
or
dec
mov
push
pop
out
jne
inc
jmp
divb
sub
cmp
repnz
jne
clc
pop
push
jns
setge
cwtl
xor
lds
aad
jo
inc
fsts
and
popf
insb
repz
push
ss
stos
sbb
or
pop
js
je
push
pop
ror
lods
sbb
pop
loope
mov
lret
lods
mov
and
xor
and
xchg
dec
ljmp
push
xchg
xchg
adc
rcrb
jecxz
movsb
jl
popf
mov
aas
fdivrl
cs
shll
pop
cmpsl
leave
xchg
les
rcl
xor
adc
inc
push
sub
cs
movsl
pop
pop
cmp
fmull
or
dec
or
push
iret
aaa
or
lods
lahf
lea
outsb
mov
bnd
sbb
or
stc
insl
enter
xchg
iret
pop
jo
and
jp
in
inc
and
stc
in
xor
cmp
repz
ds
jg
sbb
test
inc
xchg
mov
mov
movsb
dec
test
or
loope
adc
inc
xchg
fsubrl
ficoml
and
xlat
or
jecxz
hlt
inc
fcmovne
mov
and
sahf
in
aas
aad
xchg
nop
inc
in
xchg
pop
cs
imul
stc
mov
div
lret
jbe
pop
lea
push
adc
inc
fwait
sub
repnz
arpl
mov
jecxz
imul
push
adc
aaa
xor
add
mov
pop
pop
xor
sbb
xlat
push
add
scas
icebp
inc
lcall
outsb
test
call
movsb
lcall
xchg
push
sbb
inc
mov
add
into
in
sub
adc
imul
jp
adc
add
cs
push
hlt
mov
lret
xor
pop
push
scas
sbbb
push
popa
jmp
fdivs
icebp
pop
xchg
xchg
push
sbb
out
imul
fwait
ds
add
xchg
push
mov
inc
lret
ss
shlb
cld
or
ret
das
fcoms
and
out
xor
add
and
mov
out
insl
adc
sahf
xchg
sub
data16
xchg
mov
cmp
mov
std
aad
js
cmp
pop
adc
mov
sub
and
xorb
cmp
cmc
enter
sub
insl
xor
lods
lret
imul
or
adcl
js
jbe
dec
push
je
mov
bound
and
cmp
mov
jo
cmp
sbbl
jecxz
out
mov
jmp
leavew
in
cmp
adc
into
test
dec
mov
lret
sbb
xchg
or
pop
insl
dec
subl
stos
dec
xchg
pushf
scas
jnp
adc
and
mov
and
fimull
push
xor
dec
icebp
or
xor
dec
call
jae
test
push
mov
mov
xor
sti
xchg
add
ja
mov
iret
lcall
out
lcall
ret
xchg
div
mov
leave
mov
xchg
sbb
xchg
xchg
adc
outsl
cmp
adc
inc
fnstenv
insb
das
lods
cld
mov
orb
push
pop
fimull
fbstp
ja
fs
sub
loop
sub
out
fbstp
les
mov
aaa
mov
bound
and
shr
in
push
out
ds
xor
inc
dec
mov
imul
imul
out
push
bnd
lret
dec
lret
out
or
pop
and
dec
andb
aam
xor
sahf
push
jbe
out
jle
jmp
xchg
and
mov
and
test
clc
fcompl
test
lock
jmp
jl
dec
repnz
pop
repz
out
mov
popf
xor
loope
and
daa
pop
xor
stos
pusha
rorl
xor
or
push
jg
pop
out
mov
mov
cli
and
push
inc
ret
dec
ret
scas
cwtl
inc
xchg
insb
imul
push
imul
or
xor
push
adc
loopne
inc
stos
lods
sbb
addb
mulb
cmc
sahf
cmp
shlb
push
jnp
cli
dec
mov
test
out
inc
mov
notb
sbb
and
mov
daa
xor
adc
jecxz
fsubrl
shrl
into
in
jg
adc
xor
cmpsb
mov
cmpsb
inc
fs
repz
in
lds
out
in
or
xor
es
rorb
aaa
fs
xchg
out
iret
and
or
sbb
jge
inc
cmpsl
fbld
les
stos
fadds
pop
das
push
dec
inc
ror
xor
pop
repnz
int3
cmp
inc
lods
je
fcoms
mov
mov
xor
adc
pop
inc
push
jmp
bound
mov
js
out
pop
lahf
adc
xchg
jecxz
jecxz
rclb
call
ljmp
jnp
or
mov
das
mov
inc
mov
mov
cmc
dec
nop
inc
push
and
insb
or
fnstsw
sbb
sbb
mov
test
inc
mov
mov
push
mov
dec
ficompl
ljmp
test
and
xorl
push
xchg
iret
pop
or
cltd
lock
std
mov
js
rcr
hlt
test
sbb
mov
cs
jbe
jo
add
mov
lea
jp
mov
mov
loope
test
notl
mov
xor
sbb
popf
pop
sbb
mov
aaa
shl
jbe
add
cmpsl
add
aad
inc
sahf
add
xor
sbb
pop
notl
dec
cld
or
out
pop
div
jge
in
rorl
xor
out
mov
xchg
jmp
stos
ret
jns
xchg
daa
data16
sbb
mov
cmc
and
push
insb
pop
out
and
add
lock
xchg
lock
adc
lret
pop
adc
xor
repz
pop
in
pop
insl
push
xor
push
outsb
in
mov
mov
mov
mov
mov
and
out
and
repnz
shl
ret
xlat
cmp
cmpsl
xchg
insb
lret
jge
xchg
lea
dec
jp
stc
ljmp
pushf
cmp
dec
sub
addb
add
push
and
rorb
pop
mov
stos
mov
clc
lret
sub
add
cmp
mov
pop
adc
pop
pop
call
mov
bound
xor
loop
jne
mov
mulb
pop
scas
mov
out
jecxz
lcall
loopne
adc
pop
rcrb
mov
out
sbb
das
jge
ss
stos
out
mov
and
cmp
ds
in
jl
iret
mov
lods
ljmp
mov
sub
aad
arpl
subb
rorl
aam
test
push
mov
jne
ljmp
daa
jne
and
les
aaa
and
xor
mov
int3
dec
pop
das
test
ja
xchg
cltd
orb
jle
adc
outsb
mov
push
adc
push
and
imul
shl
push
or
popa
js
xchg
cmc
sbbl
jne
or
insb
xlat
fisubrl
popf
fstpl
into
mov
pop
int3
aaa
sbb
imul
cld
andl
cmp
aam
int
jb
sti
cmp
pop
call
faddl
mov
xlat
ljmp
push
xchg
divb
cmpsb
xchg
pop
scas
iret
push
fsubl
cmp
sub
loop
popa
mov
and
cmp
mov
and
jl
in
mov
int3
and
stos
loope
xor
das
or
and
outsl
pop
mov
lret
cmp
ficoml
cmpsl
mov
add
and
lock
sbb
xchg
in
lods
mov
pop
or
cltd
insb
xchg
ret
lods
push
pop
ficoml
cmp
pop
inc
gs
mov
or
jmp
and
mov
and
out
mov
stc
stos
push
jp
pop
push
in
popa
aam
ja
adc
mov
sarb
mov
cmpsl
mov
inc
ret
scas
jb
insl
jne
outsl
xchg
add
pop
js
std
inc
pop
or
xchg
loope
mov
add
mov
cmpsl
cwtl
lcall
cwtl
push
pop
jbe
out
push
pusha
adcb
jnp
mov
aam
out
add
shrl
push
call
or
pusha
sub
fisttps
sahf
xor
xor
dec
je
or
jecxz
pop
dec
mov
pop
dec
or
mov
hlt
mov
cltd
lret
ret
xor
sbb
xchg
xor
jl
subb
outsl
gs
rcll
pop
ss
cwtl
mov
pop
stos
mov
dec
mov
sub
sbb
push
lret
mov
cmp
sub
jl
push
fsubs
adc
add
cmpsl
push
les
push
repz
call
sbb
dec
inc
or
outsb
stos
jle
in
aad
shlb
fstps
xchg
and
dec
jle
dec
rclb
fldenv
call
mov
cmp
rcl
xchg
adc
ja
dec
cmpsb
dec
pop
pusha
fisubrl
ja
clc
push
pop
dec
leave
movsl
cmp
ds
loope
xchg
incb
hlt
insb
out
aas
mov
pop
adc
cmp
cmp
loop
les
test
iret
mov
dec
xchg
mov
insl
xchg
or
sarb
and
lds
push
xchg
xchg
popa
sahf
fdivs
and
inc
shlb
sub
lcall
cmp
inc
mov
xchg
popa
mov
jno
or
pop
mov
sahf
in
adc
repz
ret
clc
cmpsb
pop
mov
ret
pop
mov
adc
mov
mov
push
jp
jbe
outsl
push
repnz
iret
mov
das
lcall
jnp
xchg
cmp
lcall
mov
cmp
jmp
fnstenv
xchg
lret
inc
mov
jbe
in
scas
bsf
movsb
pop
mov
scas
jne
pop
dec
jl
and
insl
sub
cmpsb
stos
je
mov
add
int3
mov
add
daa
mov
add
jb
popl
aas
lds
jg
test
push
add
pop
adc
icebp
dec
push
mov
in
scas
mov
adc
mov
test
mov
mov
jnp
jl
in
std
and
mov
push
data16
int3
cmpb
add
add
adc
inc
mov
loope
xorps
cltd
testb
iret
push
dec
xchg
push
fidivrl
and
sub
push
out
sbb
lret
rcll
sbb
mov
in
fidivl
fs
fcmovu
repz
std
scas
dec
xor
lods
loope
int
dec
out
inc
jle
and
loope
inc
sbb
ret
aaa
jnp
arpl
dec
inc
enter
push
sbb
mov
sbb
xchg
mov
xor
dec
movsl
dec
enter
jbe
add
cli
jno
jge
sbb
cli
vsqrtss
adc
dec
push
stos
dec
inc
mov
xor
mov
mov
mov
adc
push
pushf
add
jno
dec
aaa
mov
into
dec
mov
loopne
mov
adc
mov
mov
xchg
mov
scas
jp
test
dec
mov
mov
push
mov
test
push
jae
xchg
test
add
and
adc
adc
pusha
sub
lea
jae
cwtl
int3
jnp
ret
jge
cmpsb
jl
jnp
push
push
sub
jl
dec
inc
xchg
pop
hlt
mov
in
outsl
repnz
cmp
dec
fldenv
sub
push
in
dec
stos
sti
cmpsb
stc
mov
je
xchg
cld
iret
adc
or
gs
or
and
push
insb
popf
daa
xor
mov
leave
movsb
movsl
mov
flds
push
cmp
scas
imul
in
mov
imul
cwtl
scas
mov
dec
pop
call
fisubrl
loope
mov
sub
aas
push
leave
js
pop
xor
mov
icebp
insb
jns
cmpsl
stc
or
pushf
mov
xchg
out
push
push
inc
adc
push
pushf
lds
push
rcrb
shlb
add
jae
inc
out
sub
add
xchg
sti
ret
sbb
xor
jno
sub
stc
and
push
cmc
int3
sbb
lret
push
cltd
out
ds
mov
adc
cmp
pop
rolb
mov
out
and
out
out
out
mov
dec
lret
jle
loop
hlt
je
int3
rcrb
jmp
lret
sub
or
hlt
mov
fsincos
ja
xchg
push
test
std
or
test
mov
mov
test
stos
in
cmp
xchg
filds
add
xchg
fistps
sbb
cmp
test
cmpsb
xorb
mov
xor
lods
mov
and
dec
add
fcoml
aad
je
pop
xlat
and
push
mov
enter
cmc
ss
mov
scas
adc
pop
ret
xchg
or
cmp
dec
imul
rol
bound
out
push
mov
outsl
mov
int
fisttpl
cmc
cmpsb
dec
mov
into
imull
in
dec
aad
hlt
fcompl
decb
push
fldenv
test
imul
add
cli
push
push
push
lea
mov
pshufw
in
or
push
jmp
insb
das
jp
and
dec
dec
call
testl
pusha
jle
adc
pop
fimull
mov
mov
sahf
xor
loopne
xchg
pop
xchg
mov
xchg
sbb
push
inc
jp
int
pop
mov
cs
enter
fsubrs
adcl
dec
jmp
ss
mov
arpl
and
push
cmpb
testl
mov
lock
mov
mov
aad
scas
pop
mov
xor
fldl
push
jmp
ret
notb
xchg
cmp
call
mov
cmp
or
sbb
mov
loopne
and
push
fdivrs
xchg
xchg
push
sahf
and
jnp
in
sbb
lret
pop
sub
loope
imul
push
fdivrl
lret
outsb
add
or
jl
scas
ljmp
fnstcw
adc
push
inc
mov
dec
fucomi
hlt
pusha
outsl
adc
int3
mov
and
aad
pop
out
scas
mov
iret
jno
js
cmpsl
pop
das
pop
jge
ds
hlt
mov
lea
sahf
ds
push
cs
xchg
or
push
jbe
lods
popa
mov
lock
cmpsl
jae
sbb
xchg
jns
fwait
into
xor
or
or
cmpsl
push
ret
sbb
test
jecxz
mov
pusha
lret
pop
jecxz
sub
dec
call
or
loop
aad
ss
pop
je
pop
xor
cwtl
sub
cs
mov
inc
mov
std
mov
mov
rcr
jge
add
and
rorl
lds
test
mov
daa
aam
stc
adc
mov
imul
mov
test
out
and
popf
stc
dec
je
stos
mov
jle
jmp
xor
and
aas
cli
test
pop
into
scas
pop
fs
push
loopne
dec
jb
call
pop
xchg
fwait
out
outsl
fdivrs
dec
jge
shl
inc
push
sbb
cmp
fistpl
int3
fcoml
mov
mov
mov
jge
and
or
decl
dec
inc
xchg
xor
in
popa
iret
fwait
pop
push
insb
cs
cli
rcr
ficomps
xchg
dec
jecxz
flds
cmp
xor
mov
or
testl
push
pop
mov
pop
xor
xchg
and
sahf
push
jb
pop
out
repnz
ret
enter
leave
add
shl
mov
in
add
add
adc
movsw
ret
xchg
jl
push
or
and
mov
add
popa
xchg
mov
or
jecxz
sbb
out
sbb
out
subl
fisttps
or
inc
mov
lds
xor
aas
xlat
scas
cmp
in
adc
xor
cmpsl
xchg
in
xorb
iret
fcoms
imul
mov
adc
push
mov
pop
dec
mov
int3
pop
mov
mov
outsl
pop
ss
stc
insl
dec
mov
sub
aad
sub
int
repnz
jnp
xor
xchg
sub
outsl
cwtl
int3
movsb
lcall
stc
cmp
dec
xchg
pop
mov
push
das
nop
rorl
shlb
shll
call
ret
pop
sbb
pushf
pop
xlat
add
adc
bound
mov
outsb
xor
pop
inc
fnsave
mov
rep
out
loopne
call
out
dec
dec
arpl
push
push
cs
pop
into
sbb
dec
inc
iret
icebp
or
push
cmp
jp
pushf
inc
add
stos
dec
mov
je
aaa
pop
hlt
push
add
pusha
test
xchg
sti
mov
xchg
inc
sti
packssdw
mov
dec
inc
push
mov
xchg
push
pop
xorl
adcl
and
push
push
mov
jae
cld
mov
out
mov
lcall
push
test
jo
sbb
sub
scas
divl
ds
pushf
outsl
mov
inc
popf
push
xchg
loopne
imul
movsl
into
cltd
int
xorl
fwait
jge
mov
jo
and
sub
mov
fidivrs
jo
es
loopne
in
xor
push
mov
mov
sahf
xlat
mov
mov
sbb
inc
sarl
fisubrl
mov
in
adc
xchg
mov
adc
fnstcw
xchg
xchg
imul
jb
inc
lret
jge
cld
inc
imul
push
inc
push
cmp
addr16
cmpsb
sbb
insb
in
test
ss
icebp
insl
xlat
out
call
in
mov
cltd
dec
icebp
xchg
cmp
sbb
bound
cmp
add
divb
cmp
xchg
push
or
icebp
ret
stc
bnd
add
sub
sbb
and
stos
or
in
jmp
pop
pop
adc
pop
mov
addl
movsb
shll
std
pop
inc
outsl
into
dec
sbb
dec
aaa
enter
cmpsb
pop
mov
pop
mov
jp
pop
jbe
pop
aas
inc
sub
and
mov
mov
or
add
scas
pop
mov
adc
int3
mov
cmp
sarl
fcmovb
jo
iret
dec
sbb
mov
push
js
lock
cmp
fs
mov
xor
dec
jle
lods
push
insl
aaa
scas
clc
jmp
xlat
dec
add
pushl
out
xchg
mov
daa
add
push
push
fcmovnbe
insb
or
arpl
cmp
sub
jg
sbb
sti
mov
out
das
push
ja,pn
lahf
sbb
cmp
or
add
into
mov
or
sbb
xchg
shrb
inc
add
inc
in
jle,pn
mov
repnz
dec
imul
data16
dec
xchg
or
rorl
cmc
js
lds
nop
pop
gs
pusha
add
cmp
jnp
or
scas
xchg
inc
push
test
add
outsb
inc
xor
sub
test
pusha
sbb
jnp
imul
scas
dec
push
jmp
out
cmpsl
movb
sub
or
rolb
js
cmc
push
mov
xor
jl
bound
jl
jp
push
mov
xor
inc
arpl
adc
sbb
insb
sbb
es
xchg
insl
add
add
dec
sbb
sbb
adcb
cmp
popf
shlb
add
jl
xor
flds
pop
dec
xor
fsubrp
jne
mov
sbb
cmpsb
std
sbb
adc
test
dec
movsl
test
outsl
and
adc
pushf
cmp
jns
orl
nop
ret
aam
lahf
or
mov
inc
fisttps
out
in
and
mov
dec
inc
scas
push
adc
outsl
enter
fldl
cmpsl
xlat
mov
push
fmull
movsb
das
pop
and
mov
cmp
jne
in
add
cmp
lret
xchg
dec
dec
dec
or
xchg
adc
push
jns
lahf
adc
jecxz
or
xlat
dec
imull
xor
btr
jge
pusha
jle
xor
js
add
sbb
idiv
or
xchg
jns
xor
add
push
addr16
add
orb
dec
cli
and
xor
ljmp
sub
aaa
mov
sbb
fcoms
popa
jns
jae
sub
or
inc
loop
fldl
xor
or
int3
iret
pop
sbb
sub
pop
outsl
mov
imul
loop
fs
jl
rcrl
imul
inc
loop
pop
mov
rcrb
push
add
xchg
mov
sbb
pusha
shl
inc
xor
in
repz
inc
sbb
test
jo
gs
popf
xchg
scas
fwait
sbb
xor
xor
ds
enter
cmp
push
mov
and
xlat
mov
mov
inc
lods
test
cmove
push
mov
lods
add
xlat
adc
cmc
rcrl
ss
pop
and
inc
aad
in
lcall
jno
test
outsl
or
sub
dec
das
pop
lock
mov
xchg
add
leave
pop
xchg
addl
in
lods
pop
push
call
into
cmpsb
jl
mov
sbb
add
mov
xchg
lea
add
inc
xchg
addr16
nop
into
push
fs
lcall
mov
data16
fdivrl
dec
cld
fmuls
rorb
mov
jle
pusha
mov
fcoms
pop
pop
or
lock
lret
mov
xchg
out
sub
xchg
std
addr16
dec
sub
fbld
cltd
mov
sarb
aaa
jmp
dec
sbb
lret
inc
call
dec
insl
lds
mov
xchg
test
inc
xor
fcmovu
push
xchg
scas
fisubs
cltd
movsl
ret
pop
aam
leave
xchg
ficoml
jne
pop
rcll
ret
cmpsb
test
outsl
cld
sub
out
xchg
cmp
adc
mov
lods
xor
mov
mov
subl
dec
jle
stc
arpl
push
sbb
icebp
jne
push
pop
pop
icebp
sbb
mov
jo
test
loope
push
xchg
cmpsl
push
nop
mov
jb
xor
aam
js
fstpt
xor
cmp
jno
sub
inc
and
imull
pmulhw
into
in
mov
inc
mov
adc
les
or
movsb
fs
sub
push
loopne
jno
jo
pushf
push
mov
js
adc
in
xlat
add
cmc
gs
lcall
call
out
sub
mov
mov
mov
sbb
rcr
or
mov
adc
bound
and
sub
rcrb
xchg
pop
sbb
int3
or
push
add
insb
dec
sub
jo
ljmp
pop
cmpsb
dec
pop
ja
add
clc
pop
fadds
std
push
jmp
cltd
cmp
or
xor
mov
ror
mov
push
xorb
pop
or
add
loope
and
enter
pushf
mov
daa
lods
lret
cmc
leave
addr16
xor
aam
push
lods
ljmp
jns
mov
pop
pop
inc
cli
fnstcw
in
cwtl
outsb
repnz
pop
daa
mov
push
pushf
sub
js
sar
stos
xchg
push
fsubs
shrb
sub
insl
inc
sarb
inc
xchg
or
orb
push
test
les
rol
fcom
cwtl
xchg
pop
or
mov
cmp
dec
adc
xchg
mov
test
pusha
pop
mov
push
dec
js
mov
inc
cmp
and
repz
bound
sub
mov
daa
fsubl
insl
xor
pushf
cld
and
dec
movsb
ret
std
xchg
lret
lahf
ljmp
push
shll
mov
iret
sti
test
enter
mov
jne
push
xchg
ja
outsl
dec
jl
in
jne
push
jne
or
cld
jne
insl
lret
sbb
in
inc
ds
sub
mov
add
popa
jo
lock
sbb
sar
sbb
clc
stos
or
cmpsl
push
sbb
dec
add
sti
jg
imul
push
incb
out
icebp
call
push
adc
xchg
test
or
add
xchg
les
mov
orb
push
dec
add
in
aam
jmp
sti
ljmp
mov
fldt
outsl
fs
xor
inc
inc
jecxz
pusha
pop
push
xor
adc
jle
mov
mov
test
xchg
int
push
outsb
mov
lock
sub
insb
push
lods
addr16
mov
int
jb
xchg
addr16
add
xchg
dec
adc
dec
cmc
ljmp
in
test
inc
sbb
mov
test
shr
xlat
test
pop
mov
xor
fadds
js
push
daa
js
loop
and
jb
das
int
and
js
jg
xchg
xor
nop
xlat
add
fnstcw
ror
in
das
sti
jle
jle
hlt
add
inc
mov
fdivr
pop
fcomps
lahf
sarl
dec
mov
movb
sbb
outsb
pop
nop
in
fnsave
add
neg
pop
mov
xor
mov
cmpsb
jnp
inc
mov
mov
mov
outsb
pop
jmp
inc
push
divb
js
loop,pt
ret
out
outsb
and
push
cli
mov
mov
push
ss
sub
push
cltd
testb
bound
idivl
movsl
mov
cmp
mov
jmp
sub
xchg
mov
rorl
jns
sahf
add
stc
out
test
and
and
dec
mov
popa
fmull
cmp
nop
in
mov
scas
and
sub
push
mov
not
bt
jo
int
lcall
jo
inc
orb
imul
shl
or
daa
call
test
shr
dec
adc
jmp
lea
pop
push
cwtl
cmc
les
push
push
mov
mov
pop
in
clc
push
orl
aad
or
push
xor
popa
cmc
imul
jge
dec
or
cmpsl
jb
into
fimull
fs
scas
pusha
and
pop
std
shr
cmp
xor
cmc
or
into
sbbl
jmp
rcll
or
imul
mov
js
dec
fistpl
dec
xchg
ss
sub
mov
in
jno
dec
popa
pop
pop
stos
or
mov
addb
cmpsb
xchg
lahf
int
in
sub
push
sub
call
inc
data16
sub
imul
mov
clc
sub
xlat
and
nop
xor
lods
nop
inc
sub
xchg
inc
adc
in
mov
and
push
insl
lcall
std
cld
pusha
das
sbb
daa
out
sub
mov
sbb
mulb
mov
cltd
movsl
je
std
ret
dec
sub
or
inc
pop
pop
sarl
aam
mov
xlat
xor
jecxz
pop
in
push
stos
leave
push
cld
push
ja
movsl
pushf
dec
aam
hlt
adc
movb
out
imul
insl
mov
mov
lcall
and
addl
adc
sub
mov
pop
cmp
ret
cmpsb
mov
imul
push
jge
popf
cs
and
inc
sarb
push
dec
fstl
inc
test
test
push
mov
add
jge
sbb
mov
pop
arpl
fstl
mov
mov
jl
imul
mov
push
mov
jle
fsubs
pop
notb
cs
loopne
xchg
xlat
stos
pusha
and
jle
push
cmp
jno
fstpt
icebp
ss
ds
insb
jb
mov
adc
pushf
insl
pop
inc
imul
sub
jl
negl
sub
inc
mov
mov
test
push
adc
sbb
in
xchg
adc
ror
shlb
popf
pop
mov
lock
mov
mov
pop
subb
movsl
insb
sbb
push
hlt
inc
xor
popf
adc
enter
pop
dec
arpl
inc
mov
sub
adc
loope
ficoml
cmp
out
add
int
daa
jnp
add
ret
jge
fsts
pop
mov
push
gs
in
mov
test
vmovq
insb
loop
testb
adc
push
movb
mov
xchg
fcom
fcmovne
push
or
mov
lds
mov
sar
add
xchg
mov
outsb
pop
hlt
cmp
or
mov
pop
cli
pop
mov
jbe
xor
lods
cld
adc
mov
fcoms
mov
ret
dec
mov
inc
idiv
pop
stc
flds
mov
mov
pop
mov
jp
in
aaa
sbb
mov
pusha
inc
mov
into
xchg
stos
and
push
mov
aaa
pop
fwait
or
lods
dec
frstor
mov
cli
aas
jp
loopne
jl
sub
mov
daa
push
xchg
insb
loope
or
dec
hlt
mov
xchg
add
mov
pop
mov
data16
int
lock
inc
in
sbb
hlt
add
sub
cmc
push
sbb
mov
cmpb
add
sbb
cld
mov
es
ds
push
ret
nop
mov
or
outsl
pop
or
sub
ficompl
push
mov
push
push
nop
int3
les
lea
mov
int
inc
rolb
mov
lcall
mov
push
mov
shl
inc
insb
lret
sbb
sub
pop
add
lret
daa
jmpw
pushf
into
and
call
fucomp
and
push
mov
mov
pushf
jae
frstor
notb
js
cli
adc
imul
pop
fcomps
inc
mov
out
xor
scas
pop
aaa
inc
mov
xor
push
jecxz
xlat
mov
movsl
out
repz
push
inc
rcrb
xor
pop
inc
and
sbb
cmp
and
add
adc
or
inc
add
xchg
dec
xor
cli
adc
sbb
dec
push
cmp
jp
mov
push
jge
fildll
in
into
add
inc
test
insb
jmp
push
lea
cmp
add
mov
mov
imul
inc
push
lcall
pushf
rorl
cmp
xor
outsl
nop
shrl
mov
cmp
pop
push
and
int3
mov
pop
xor
push
pop
xchg
mov
mov
dec
dec
test
jmp
sbb
icebp
jnp
in
aad
dec
push
mov
cli
or
aam
sbb
leave
cmp
sbb
dec
dec
mov
into
loope
push
imul
lods
push
push
adc
adcl
or
xchg
jbe
aam
sbb
scas
je
push
sbb
out
mov
fwait
mov
subb
add
lock
pop
sub
push
negl
push
jne
bound
and
stos
dec
mov
lods
fsubl
aaa
sbb
pushf
inc
and
pop
or
popa
nop
or
sbb
pop
xchg
sbbb
imul
popf
roll
mov
in
mov
in
lds
adc
pop
lret
push
in
jns
fld
insl
out
xor
pop
sahf
cmp
jns
rolb
mov
and
clc
push
sub
test
adc
in
lcall
sub
push
mov
mov
out
add
pop
scas
faddl
aad
dec
fadd
adc
add
and
fmull
jp
std
sub
scas
sbb
add
dec
and
lods
fistpll
cmp
gs
inc
cmp
cmp
sbb
jp
sbb
fdecstp
jmp
out
icebp
cmp
or
add
popf
movnti
and
push
test
lcall
push
inc
add
lcall
not
cmpsl
ficoml
adc
xchg
jo
call
push
pop
insl
rcrl
ljmp
mov
push
es
xor
cmp
out
cli
jecxz
mov
ja
mov
fstl
mov
mov
and
or
mov
mov
jmp
ret
xor
jns
cmp
mov
je
add
add
shlb
adc
repnz
jno
xchg
aas
mov
xorb
sbb
push
inc
sub
mov
xchg
mov
insb
pop
fwait
popl
sahf
bound
push
add
jmp
add
jbe
push
cmpl
sbbb
setno
mov
pop
nop
sahf
movsl
ja
mov
jns
jbe
es
lret
xchg
push
jecxz
lret
push
hlt
cmove
adc
add
std
jo
and
outsl
jnp
sub
dec
cmp
lcall
dec
add
sti
jbe
cmc
lcall
fadd
jle
mov
inc
hlt
into
jl
push
std
xchg
and
pop
enter
adc
pop
daa
push
aaa
cmp
int
scas
data16
lods
int
xor
push
loop
inc
xchg
lods
lds
loop
into
jae
clc
lcall
outsb
pop
mov
dec
fdivl
jns
sub
pop
dec
je
dec
aaa
jp
addr16
xchg
movsl
shrl
jg
fisubl
push
movsb
jg
iret
dec
lcall
xchg
adc
or
push
add
sub
addr16
mov
fwait
push
mov
fdiv
outsb
into
repnz
xor
lcall
inc
pusha
fldcw
mov
mov
lret
push
insl
hlt
inc
imul
xor
push
mov
rcll
mov
test
push
or
push
es
pop
fimull
int
aaa
clc
dec
push
dec
push
xchg
je
xchg
mul
jns
xchg
inc
mov
andl
rcrl
or
std
icebp
out
shll
push
int3
adc
xor
cwtl
xchg
int
add
and
gs
loop
and
mov
repnz
mov
mov
pop
loopne
mov
pop
rorl
mov
pop
lahf
stos
jbe
jne
and
outsl
int
push
subl
cwtl
mov
in
push
cs
std
pop
add
and
mov
out
lods
vmaxps
out
lcall
adc
movsl
mov
je
inc
pop
and
push
sub
in
cmp
mov
cmp
into
cld
fldt
push
in
shrl
popf
fstl
outsb
push
ret
xor
jp
xchg
cwtl
ds
into
add
push
daa
mov
adc
pop
push
xchg
inc
out
je
mov
push
jl
jecxz
mov
iret
test
xchg
into
inc
pushf
leave
stc
or
pop
push
mov
in
cltd
mov
stos
insb
icebp
sub
xchg
sbb
scas
push
xlat
or
stc
rep
xchg
pop
popf
pop
inc
lahf
rclb
jne
repz
sub
ja
adc
mov
addr16
pusha
les
aam
xchg
mov
jno
mov
push
lar
pop
repz
les
xor
dec
test
lods
or
pop
jg
arpl
dec
fldenv
lds
test
push
ret
out
negl
mov
mov
sub
fwait
pushf
enter
iret
ret
mov
xchg
lret
fcoms
fwait
aad
sub
push
mov
daa
add
mov
adcb
pop
inc
jns
push
fstl
cld
mov
xor
pop
aas
jno
int
insl
dec
bound
test
jmp
aas
jno
cmp
sbb
lods
test
enter
outsl
add
jnp,pn
addb
jl
or
xchg
xor
test
imul
push
cmpsl
outsl
and
xchg
loope
fists
mov
test
ffreep
into
xor
inc
pop
pop
arpl
push
mov
sbb
data16
addr16
xchg
mov
add
xchg
sti
andl
fdivrs
hlt
push
xlat
fdivl
sbb
je
add
loop
adc
mul
out
ret
pop
cmp
call
std
test
cmpsb
les
sbb
mov
cwtl
push
and
into
mov
mov
mov
sub
les
int
and
loop
sbb
push
mov
inc
mov
out
xchg
mulb
sarl
loop
js
mov
sub
test
add
roll
cmp
mov
pop
scas
or
cwtl
mov
adc
cmp
dec
push
mov
sub
call
adc
xor
inc
jo
bnd
mov
pop
cmp
mov
jo
mov
adc
jo
cwtl
jae
add
subl
push
hlt
lods
test
adc
sub
sti
inc
mov
sub
scas
out
sub
insl
inc
dec
fwait
cmp
mov
loopne
outsl
push
adcb
lret
and
push
and
jae
adc
scas
daa
icebp
daa
lahf
xchg
iret
cld
lock
das
sbb
scas
hlt
xor
jg
xchg
arpl
jne
dec
push
jle
in
fadd
outsw
xchg
inc
f2xm1
dec
lret
mov
sbb
adc
add
push
stc
push
popf
es
lret
inc
test
scas
jb
inc
xor
mov
data16
and
sbb
das
ret
xor
imul
and
clc
lock
sbb
hlt
add
fildl
and
ljmp
sbb
mov
call
frstor
adc
pop
int
mov
sub
jmp
pop
ds
inc
ljmp
inc
and
cli
loope
xor
mov
push
sbb
add
jno
xchg
scas
aaa
inc
mov
sbbl
pushf
add
dec
insb
mov
xchg
dec
sbb
jo
stos
in
dec
or
insb
xor
aaa
sbb
or
loopne
addr16
cmp
ret
jo
pushf
int
pop
shrb
xchg
add
xchg
into
pop
and
shlb
movsb
iret
adcb
aam
cmp
and
test
sbb
inc
mov
mov
sub
or
lds
negb
push
cmp
sbb
jmp
testl
push
mov
mov
xchg
and
test
jnp
jno
stc
pop
mov
add
sub
loop
pop
fs
faddl
push
int3
aam
loopne
int
fidivrl
je
insl
add
dec
mov
in
xchg
push
dec
not
loop
push
dec
inc
push
sbb
xor
xchg
dec
or
sti
jl
popa
mov
lea
pop
mov
dec
mov
je
mov
outsl
mov
imul
xor
sbb
xor
inc
cltd
pop
push
in
or
xchg
out
sbb
pop
pop
lods
mov
lock
ljmp
xchg
add
xchg
mov
fists
mov
dec
mull
lret
and
cld
mov
mov
sbb
pop
xchg
dec
sub
test
fsubs
and
fldl
mov
adc
js
or
push
rcrb
int3
mov
mov
fucom
mov
mov
cmp
lret
jbe
jle
dec
aam
lods
jae
add
or
loop
mov
mov
inc
pop
mov
or
jno
fwait
sbb
scas
dec
or
pop
push
mov
mov
xchg
frstor
jno
insb
pop
add
loop
xchg
sbb
inc
xor
push
push
cmp
sub
fmuls
pop
repz
aam
sbb
dec
test
sbb
lods
orl
inc
sub
or
in
pop
mov
push
mov
jne
mov
imul
push
cmp
callw
xchg
jge
scas
imul
and
adc
cld
pop
cmpsb
sub
mov
mov
loop
push
add
pop
lods
or
pop
cwtl
adcb
out
mov
jecxz
mov
dec
sahf
sahf
xchg
sahf
mov
push
out
cmp
pop
mov
cmpl
push
sub
xchg
pushf
add
icebp
pop
xlat
std
icebp
ja
dec
mov
mov
cli
sbb
xchg
shlb
xor
dec
daa
and
xchg
jbe
sbb
mov
fistl
xlat
daa
add
out
push
mov
das
ficoml
add
jle
sbb
stc
cmp
xchg
inc
dec
and
in
jno
mov
sub
cmp
pop
mov
xor
xor
inc
mov
jne
loope
mov
je
sub
jo
imul
ljmp
xor
sbbb
gs
scas
sub
popa
fimull
or
cmp
dec
dec
pushf
push
xchg
scas
cmp
jmp
ja
or
inc
lcall
ret
jae
jg
sub
push
sti
push
sti
push
jae
jg
aas
les
mov
repz
js
ret
xlat
push
cmp
pushf
stc
xor
int
inc
rcll
lock
hlt
sti
mov
ss
test
cmp
test
push
push
fdivl
testl
xchg
jns
leave
and
adc
pop
adc
fs
js
arpl
push
stc
int
add
jns
out
mov
out
jbe
mov
sbb
das
add
in
rcrl
mov
dec
mov
out
fidivl
insl
jecxz
jle
sbb
mov
inc
lret
aaa
cmp
inc
loop
test
jnp
add
js
arpl
jno
testl
pop
aas
or
and
inc
pop
cmp
filds
add
out
sub
orb
pushl
xlat
cli
mov
dec
out
shrb
cmp
xor
jge
outsb
cmp
fsubl
jl
xchg
cmp
mov
ljmp
inc
mov
fcomps
fs
push
xor
jns
ret
popf
mov
lret
adc
fnsave
jg
xor
ds
xlat
or
dec
imul
inc
push
fdivl
or
loope
push
inc
je
adc
decb
imul
sahf
movsb
aas
mov
aam
faddl
je
mov
xor
xchg
cmp
and
pusha
pop
and
aam
push
rcr
mov
imul
inc
cmpsl
inc
mov
int3
cmc
clc
or
lods
pop
cmp
cli
pop
rol
and
lds
mov
mov
loope
lret
cmpsl
divl
and
rol
push
call
mov
cmpsb
xor
bound
jmp
cli
leave
repz
insb
mov
rolb
dec
jne
cwtl
mov
and
scas
imul
inc
pop
pusha
dec
test
add
mov
jb
sbbl
cli
lahf
and
adc
sbb
popf
push
or
sub
jnp
and
mov
push
call
pop
les
aad
push
xor
addl
scas
inc
iret
stos
js
mov
pop
and
dec
pop
gs
cmp
inc
ret
stos
inc
leave
push
pop
mov
or
push
in
sub
sbb
inc
cmpsb
sub
adc
mov
aad
inc
xchg
fisubrs
push
fcmovnb
rorb
repnz
data16
stc
jo
idivl
sub
ja
js
inc
dec
mov
rclb
movsl
push
or
xchg
lock
data16
outsl
and
xchg
pusha
mov
leave
and
clc
dec
out
sarl
mov
adc
jle
xor
daa
mov
into
pop
cmp
sbb
inc
cli
or
out
dec
mov
int
push
sahf
fisubrs
push
aas
cmpsb
std
mov
subb
test
mov
mov
adc
jg
loopne
xor
mov
dec
xor
push
add
cwtl
int
fwait
add
dec
push
ss
fistpll
outsl
jbe
push
mov
mov
jnp
lods
andl
outsl
add
xorb
jp
in
sub
out
adc
mov
push
adc
cwtl
cmp
andb
jg
mov
jne
lret
adc
adc
push
gs
fistl
xor
jo
mov
int3
pop
mov
add
loope
loop
cmc
pop
shr
lods
mov
mov
cmc
cmp
mov
jns
mov
mov
sbbl
lock
hlt
inc
mov
mov
dec
mov
stos
outsl
jnp
ljmp
je
sbb
or
sub
aas
sbb
test
jmp
adc
jle
out
sbb
mov
jbe
cs
lret
mov
push
dec
cmc
add
loope
ret
iret
out
scas
push
push
es
push
cmc
xor
cwtl
mov
push
sbb
data16
and
pop
sahf
xlat
xor
aad
dec
mov
out
or
inc
and
mov
ss
lcall
stos
sahf
pushf
and
icebp
xchg
or
aad
cmpsl
adc
or
pop
out
enter
jg
add
std
loopne
xchg
xor
int3
xchg
adc
dec
and
les
adc
loop
mov
mov
xlat
inc
fs
rorb
pushf
dec
jno
ljmp
and
fdivs
shl
subb
mov
and
rorb
push
mov
in
ljmp
ret
enter
push
pusha
outsb
mov
push
iret
cmp
test
lds
add
das
or
lahf
pop
pop
cs
cmp
and
adc
cmp
imul
push
xor
mov
add
push
add
adc
push
test
scas
cld
mov
fbld
or
scas
jecxz
insb
mov
jp
das
jl
push
cmp
cmp
mov
push
adc
xchg
imulb
dec
fnstenv
js
addb
call
fwait
jbe
jb
jno
test
mov
scas
sbb
scas
inc
mov
les
jns
or
lds
js
into
pop
inc
sbb
push
hlt
jecxz
dec
adc
sub
dec
mov
or
out
jns
clc
cmp
out
cwtl
xchg
push
arpl
movsb
lea
aas
mov
fidivrs
add
dec
push
aad
jge
sbb
fisubrs
sbbl
es
fwait
push
mov
sbb
mov
adc
out
dec
test
aad
mov
mov
mov
out
and
data16
xchg
sbb
and
fistps
push
cmp
test
cmpl
xor
sub
pop
test
popf
mov
adc
xor
push
loope
dec
jp
mov
xchg
mov
in
lret
aam
pop
scas
sbb
xor
pop
mov
fistpl
adcl
roll
lcall
cmpb
js
inc
mov
test
cs
add
lock
icebp
sbb
mov
popa
dec
loop
xchg
repnz
mov
mov
mov
push
cld
pop
popa
xchg
sub
add
pop
sbb
push
arpl
int
loop
cmp
ret
mov
outsl
mov
mov
pop
xchg
imul
jbe
pop
test
sbb
dec
iret
dec
sbb
lods
enter
xchg
pop
aaa
xor
ffree
rcrb
jge
mov
das
imul
pusha
scas
cld
addl
jae
jns
inc
mov
pushf
rcr
pop
in
imul
cmp
xchg
inc
jecxz
out
pop
adc
jle
imulb
push
imul
loope
aad
aam
mov
int
lods
push
cmp
mov
fsts
and
or
sub
aaa
sub
xchg
iret
les
inc
cmp
sahf
cmp
adc
lea
mov
xchg
inc
sub
movsb
xor
out
mov
popa
cld
cmp
mov
mov
aam
int
scas
stos
jns
mov
hlt
out
mov
movsb
xchg
adc
fistpl
int
sbb
mov
add
loope
shl
iret
mov
icebp
mov
mov
fwait
pop
je
jne
push
aaa
arpl
sub
mov
stos
iret
inc
jmp
mov
bound
rcrb
ds
push
sbb
mov
orl
sbb
in
cmpsb
push
xlat
xor
push
inc
jne
popf
roll
in
fstl
loop
lret
adcl
adc
int
lods
das
mov
add
fwait
adc
fldl
call
imul
cmpsb
popf
pop
inc
fsubr
scas
sbb
ret
xor
push
inc
repz
aaa
jbe
push
jecxz
cld
dec
pop
push
mov
loope
xchg
pushf
and
shlb
aaa
lea
or
adc
push
loop
xor
sub
in
xlat
sbb
xor
sbb
dec
push
sbb
pop
call
or
sarb
pop
xor
leave
add
lock
fisttps
xor
adcb
mov
push
sub
clc
dec
push
dec
stos
push
cmp
mov
hlt
arpl
mov
loopne
mov
jne
lock
or
push
push
add
and
scas
les
mov
ds
popf
lahf
xchg
pop
mov
imul
xchg
out
sbb
jne
sub
rolb
xchg
pop
or
int
sub
jecxz
cmovbe
sbb
sub
sbbl
inc
sub
fmull
faddl
sahf
div
lods
test
cmc
or
dec
cmpsl
in
add
push
jg
rclb
decb
add
mov
cli
pop
sbb
push
mov
movsb
adc
enter
push
iret
js
mov
iret
fwait
and
out
sbb
outsb
inc
insl
testl
inc
fadds
sbb
out
or
dec
fwait
mov
sub
and
roll
dec
push
inc
cmc
dec
mov
sub
in
pop
xor
and
inc
jle
imul
pushf
scas
jecxz
fisubrs
or
or
test
inc
mov
cld
arpl
pop
xchg
jnp
pop
inc
xchg
cmp
adcb
push
pop
pop
xchg
aas
popf
dec
push
subl
mov
inc
mov
ljmp
sbb
pop
mov
je
outsb
popf
data16
cld
xchg
push
cmpl
pop
mov
int3
test
lret
loop
push
cmp
dec
test
sub
xor
lahf
dec
lods
xor
jb
pop
mov
lock
push
loopne
mov
repnz
js
pop
mov
je
pop
sub
cmp
cmp
gs
mov
inc
dec
loope
and
sbb
insb
sbb
xchg
xor
imul
mov
pop
clc
leave
lods
sti
cmp
test
lods
cmc
sbbb
add
pop
jmp
add
cli
xchg
sub
add
xchg
mov
das
pop
das
data16
shlb
ja
stos
dec
loopne
inc
pop
pop
jb
sbb
add
mov
inc
negb
inc
ss
mov
inc
cmc
adc
mov
mov
fcomip
pop
loop
push
and
cmc
stc
cmpsl
mov
xor
inc
jle
add
mull
mov
adc
xlat
enter
outsl
pushf
in
push
idivb
test
stc
sbb
adc
jle
push
ja
rorl
adc
std
divl
movsl
push
adc
scas
imul
dec
into
push
fisubl
mov
and
cli
ljmp
inc
rorl
or
push
mov
pop
or
outsb
rcl
inc
dec
push
inc
cmpsb
inc
call
dec
inc
or
pop
aaa
cmp
lret
push
xlat
or
popl
movsl
lahf
sub
int3
loop
ja
outsb
ljmp
xlat
int
pop
mov
push
cmp
insl
addr16
xchg
test
cmp
xchg
test
xchg
push
mov
aaa
addr16
mov
outsl
out
xor
das
inc
pop
mov
ds
jecxz
imul
stc
mov
lea
xor
pop
inc
dec
inc
ss
in
cmp
or
fidivl
sahf
inc
sbb
sub
in
nop
add
cmc
or
clc
cmp
dec
std
sbb
pop
cmova
lahf
scas
leave
mov
nop
in
pop
pop
lock
pop
jb
dec
unpckhps
pop
cmp
cmpsl
push
mov
inc
mov
sub
ror
mov
aaa
mov
or
mov
fnstenv
lods
cmp
cld
push
test
mov
loopne
xchg
nop
sub
or
add
adcl
icebp
imul
les
lret
mov
cwtl
cmp
in
jnp
imul
dec
fisttpll
imul
push
push
shlb
jno
dec
push
enter
sbb
xor
stos
stos
sbb
les
mov
fucompp
fwait
pop
out
sub
pop
cltd
push
rclb
dec
push
push
jno
repz
add
popa
sbb
sti
inc
ret
add
rol
fdivrs
jb
repnz
imul
pusha
pop
or
xchg
mov
pop
icebp
xorb
pop
or
rcrl
call
inc
leave
lds
cmp
xchg
xor
push
fistps
cmc
pop
mov
out
add
cmp
movsl
mov
repz
jmp
xchg
jle
sbb
in
shll
fiaddl
mov
fwait
movsb
pushf
sbb
xchg
pop
and
sarl
sbb
in
cmp
jmp
shl
daa
mov
lods
sbb
shr
fstpl
hlt
daa
xlat
pusha
ret
cmpsl
or
jo
pop
ss
lock
mov
xchg
push
push
scas
icebp
les
mov
dec
arpl
sub
jnp
sarl
int3
xor
push
fwait
mov
push
mov
pop
push
jae
test
fwait
arpl
jl
test
mov
pop
mov
into
or
ror
pop
sbb
xchg
jns
dec
addr16
rorl
les
cwtl
sti
mov
lods
mov
xor
insb
movsb
and
out
mov
add
test
xchg
fcompl
out
stc
jmp
sahf
push
lock
in
int
adc
mov
ljmp
mov
jle
pop
enter
in
aaa
sahf
or
fldpi
pop
aad
stc
push
mov
pop
hlt
pop
inc
pop
cmp
loopne
push
pop
mov
in
mov
add
or
idivl
lods
out
arpl
sub
sbb
aam
xchg
push
xchg
ret
and
mov
negl
push
and
push
jnp
adc
sub
adcl
mov
dec
or
pop
fmull
insl
mov
outsl
leave
orb
xor
subb
add
push
lock
lods
sub
adc
pop
repz
cmc
push
jmp
add
and
bound
ret
ret
mov
push
iret
adc
clc
into
sahf
add
fiaddl
test
addl
push
mov
jns
sbb
lahf
xchg
xchg
or
gs
pop
in
xor
jbe
nop
cmpsl
inc
mov
xchg
and
sbb
inc
mov
inc
and
popa
movsb
xchg
inc
mov
lret
mov
push
repnz
add
xchg
xor
mov
cli
jg
outsb
and
outsb
dec
daa
jne
sub
mov
shll
rolb
std
ja
das
mov
xor
mov
xchg
or
sub
daa
lahf
mov
testl
cmp
in
enter
and
enter
out
mov
bound
jno
cmp
cmp
and
mov
cmp
or
xchg
and
fsubl
lods
push
insb
pop
xor
ficoms
sub
out
mov
jecxz
dec
dec
mov
lret
sub
pop
adc
cmp
add
outsl
cltd
jo
rclb
fs
adc
push
fcoms
pop
cmp
xchg
mov
pop
outsb
adc
push
jno
stos
push
insb
sahf
pushf
out
dec
rcrb
fildl
aaa
xchg
xchg
pop
dec
adc
les
jbe
jp
xor
mov
cmpsb
xchg
cmp
jg
push
xchg
or
inc
or
cmp
gs
gs
xor
popa
cmp
or
xor
loopne
bound
insl
outsl
sbb
out
mov
je
or
stc
jns
loopne
leave
stc
mov
and
and
es
cmpsl
ret
imul
inc
sbbb
and
and
sbbb
inc
xor
and
pop
scas
mov
sbb
sbb
jnp
cmc
dec
imul
daa
jno
call
lret
xchg
cmp
cltd
data16
push
cltd
movl
pop
imul
push
push
and
cwtl
cmp
in
xchg
movsl
pop
pop
push
cmp
add
inc
and
ret
pop
pop
jae
js
mov
adc
sahf
mov
fcomps
lahf
test
iret
push
mov
dec
inc
mov
repnz
pop
inc
mov
and
mov
pop
sti
adcb
jg
push
sahf
adc
stc
fcmovnu
jge
call
in
adc
cmp
dec
cs
test
or
leavew
inc
xchg
inc
inc
adcl
pushf
and
dec
lret
inc
addr16
cmp
test
pop
cmpsl
movsl
jl
inc
movl
ja
and
popa
lds
je
cmp
ds
lds
outsb
xor
inc
jnp
sbb
inc
add
sub
inc
xchg
sbbb
loope
adc
xor
dec
cwtl
sti
mov
adc
fdivrl
xlat
scas
fistps
push
out
adc
mov
faddp
mov
jl
fistps
xchg
ret
pop
stos
in
mov
leave
enter
dec
mov
xor
aam
jge
lods
test
icebp
test
imul
mov
test
test
lcall
lcall
je
mov
repnz
arpl
or
daa
jae
leave
clc
sub
fs
cmp
pop
ds
repz
outsb
pop
fdivrp
dec
and
mov
out
pusha
or
pop
ficoml
inc
lds
stos
mov
cmpl
cmc
call
xor
fildll
ljmp
leave
sub
pushf
popa
stos
jp
orb
cmp
js
mov
inc
shll
scas
mov
dec
add
push
cld
push
jle
push
inc
fnstsw
pusha
addr16
or
mov
clc
sub
xchg
mov
sub
or
cmpsb
lret
jbe
rcrl
and
push
imul
adc
adc
add
lods
cwtl
notb
jle
into
out
inc
scas
cmp
jb
add
insl
test
fimuls
push
push
into
es
push
fsts
or
loop
into
test
jp
in
setge
or
add
push
dec
and
dec
mov
dec
pop
int3
icebp
add
inc
lock
bound
and
jnp
mov
shlb
mov
sbb
cwtl
adc
stos
adc
aas
sub
or
push
sub
cs
xchg
mov
lret
cltd
and
push
push
mov
pmaddwd
and
xchg
or
inc
test
pop
lods
or
outsb
push
cmpsl
mov
adc
popa
jb
mov
dec
pop
push
out
test
clc
cmc
pushf
adc
neg
cwtl
test
push
jnp
or
iret
mov
pushf
pop
add
adcl
push
fwait
sbbb
mov
sbb
psubb
add
mov
cld
mov
mov
iret
inc
cmp
dec
jge
sbb
xchg
adc
dec
repz
vmwrite
xor
mov
push
aam
scas
mov
mov
popf
cld
inc
hlt
sbb
add
sbb
loope
sti
inc
xor
daa
cmpsb
out
mov
fiaddl
mov
fildll
rorl
pop
and
sub
pop
pusha
inc
mov
aas
loop
add
ret
or
imul
rcll
insl
lea
test
xor
sti
or
inc
xor
bound
mov
ds
xchg
loopne
and
mov
into
fdivl
test
mov
rcrl
psraw
into
sub
mov
ljmp
mov
cmp
mov
jg
push
lcall
je
mov
mov
rcl
roll
adc
arpl
add
mov
cmp
js
and
dec
sub
dec
or
sub
xlat
mov
test
gs
jbe
xchg
sbb
std
mov
dec
and
lahf
adc
in
xchg
mov
sbb
pop
xchg
jnp
imul
mov
mov
jge
or
ja
dec
sbb
dec
pop
in
push
add
pop
xor
jne
cmp
xchg
cltd
addl
cmp
and
mov
fistl
sarb
sub
xchg
mov
rcrl
mov
cmpsb
or
or
xchg
add
push
xor
dec
jecxz
push
test
add
ds
stos
mov
sub
push
sbb
jp
or
jnp
arpl
lods
sbb
add
mov
es
leave
mov
jmp
mov
insl
or
sbb
mov
in
add
cmp
add
mov
dec
shl
out
mov
mov
cmpsl
push
dec
movsb
sarl
lock
mov
xor
addr16
pop
push
push
in
enter
inc
mov
jge
mov
out
dec
sub
mov
ja
repz
inc
xchg
jnp
mov
lahf
add
lods
xchg
cmp
lret
cld
mov
push
lock
aam
xchg
pop
sahf
aaa
jns
xchg
xchg
stos
aaa
lret
adc
mov
sarl
xor
icebp
mov
jnp
add
or
cmp
inc
in
fcoml
jmp
jno
xor
js
arpl
cmp
roll
inc
cwtl
lock
push
fstl
and
pop
loop
push
mov
mov
jae
xor
test
sub
iret
push
das
pop
sbb
fisttpll
je
sbb
or
add
adc
push
cwtl
sbb
mov
xchg
and
shl
loopne
xlat
ljmp
push
mov
ficompl
testl
std
jp
dec
lock
jp
mov
xchg
sbb
into
xorl
sbb
fs
add
imul
inc
aaa
inc
dec
mov
jns
push
and
xchg
jb
int3
hlt
fnstsw
dec
aam
sub
js
cli
mov
jge
inc
jmp
loop
push
movsl
inc
xor
pop
jnp
sarb
shll
bound
or
and
push
call
dec
roll
jno
push
aad
push
pop
and
movsl
mov
xchg
addr16
jmp
lcall
dec
int3
push
cltd
sbb
mov
movsb
push
cmp
repnz
stc
shl
scas
add
mov
test
inc
jb
cmpsl
dec
xlat
popa
push
and
repz
mov
stos
dec
xlat
cld
pop
dec
xorb
or
in
inc
xor
push
lods
xchg
xor
pop
mov
pushf
mov
fsub
fcomi
rorl
push
aad
cmp
mov
ret
insb
popa
into
fists
dec
adc
lret
or
and
and
jmp
mov
lahf
sti
clc
pop
inc
push
or
mov
mov
aam
mov
jmp
aad
cmp
ror
mov
enter
push
mov
loope
das
test
jecxz
add
xchg
aaa
loope
mov
and
aaa
fmulp
dec
push
adc
bnd
gs
daa
jg
mov
rcrb
fldl
fwait
adc
dec
sti
jge
test
add
mov
jbe
xchg
jecxz
inc
stos
xchg
or
subl
scas
inc
or
push
out
aas
fimuls
inc
int3
pop
xor
xchg
jnp
xor
sbb
and
sbb
xlat
scas
sti
xchg
fldt
pop
and
cmp
stc
mov
dec
ds
call
push
sbb
pop
bound
mov
js
mov
add
movsl
popa
push
or
mov
inc
inc
lds
hlt
and
push
mov
mov
js
lods
leave
push
pushf
push
out
push
cwtl
sahf
fcmovu
pusha
mov
cmp
fcoms
es
push
ss
lahf
xchg
in
sbb
popa
add
dec
mov
repnz
mov
repz
sbb
mov
xchg
mov
add
sub
or
pop
xlat
adc
jg
xchg
test
mov
mov
in
loope
cmc
ror
adc
pop
test
or
mov
ja
xor
lret
xor
jmp
cmpsb
jae
fsts
icebp
push
mov
jns
jnp
pop
dec
je
aas
push
out
cmp
xlat
mov
lret
cmp
lret
cmpsb
sub
jecxz
and
xchg
jmp
loopne
xor
test
mov
jnp
fldl
xchg
scas
inc
mov
mov
mov
out
ret
gs
push
les
mov
in
jnp
xlat
xchg
adc
pop
lock
xchg
or
sbb
inc
scas
dec
mov
inc
repz
js
loop
push
push
sbbl
dec
movsl
test
dec
daa
popf
adc
aas
cli
adc
icebp
lock
es
push
mov
dec
sbb
dec
mov
int
inc
or
int3
roll
mov
fs
mov
sub
inc
pop
stos
push
xchg
cmp
popf
xchg
mov
xchg
xlat
movsb
roll
imul
jle
pop
sahf
jns
dec
loope
pop
pop
lcall
cmp
mov
mov
push
jecxz
rorb
jg
scas
mov
add
outsb
rcl
shlb
dec
jl
xor
movsb
push
out
mov
jge
imul
lods
mov
jbe
or
cmc
pop
jbe
push
add
cmp
and
mov
pop
pop
icebp
xlat
xchg
mov
jg
repz
sti
dec
mov
xchg
sub
ja
fstpl
aam
mov
cmp
mov
stc
jmp
mov
dec
test
dec
test
sub
ja
scas
mov
mov
pop
in
setge
and
or
xor
iret
jbe
jl
andb
lods
add
fucomi
nop
sub
loop
fists
push
sub
xchg
repnz
cmp
nop
mov
cmp
xor
push
mov
and
cs
add
mull
jbe
inc
and
mov
mov
cltd
in
jle
leave
roll
int
pusha
repz
push
jae
icebp
shlb
leave
cmp
xchg
je
mov
pop
imul
dec
sbbb
mov
inc
out
ljmp
xchg
jmp
scas
xor
sub
and
addr16
xor
es
inc
xchg
mov
ror
mov
xor
cmp
sahf
fildl
mov
orb
rcll
scas
pop
jne
add
adc
aam
mov
push
lods
subb
jg
jae
pop
rorb
lcall
and
loopne
inc
mov
das
mov
lea
dec
shlb
dec
cmp
and
lret
ja
dec
mov
push
mov
iret
insl
stos
push
cld
adc
mov
mov
pop
jp
sub
push
sahf
test
sbb
add
scas
cmc
das
in
cmp
test
sbb
xor
ljmp
inc
sbb
mov
add
fstpl
cmpsb
jmp
xchg
jb
mov
hlt
fldt
inc
loope
enter
shrb
mov
xchg
add
cmp
mov
loop
out
mov
sub
test
arpl
and
xchg
addl
pusha
in
movsl
rol
clc
out
out
mov
inc
inc
xor
es
push
divb
mov
imul
ss
pop
and
clc
nop
jnp
out
aad
mov
arpl
push
mov
and
lods
cmp
cmpl
shrb
dec
mov
xchg
adc
push
or
dec
in
xor
mov
jnp
pop
orl
sub
and
add
push
imul
ret
fsubl
adc
pop
mov
mov
iret
cmc
jns
jge
pop
mov
out
mov
jle
pop
adc
pop
stc
jo
lret
cld
jecxz
subb
push
sub
repz
or
or
icebp
inc
shlb
mov
pop
jb
jmp
adc
sub
jns
mov
lea
bound
aad
sub
rcr
sbb
ds
outsl
int3
nop
nop
insb
cmp
sbb
and
out
and
int3
xor
subb
lret
push
fildl
decb
outsl
sub
ret
mov
pop
hlt
jne
inc
js
pop
lock
leave
pop
fnstsw
sub
mov
adc
or
and
push
jno
push
dec
daa
or
loopne
lods
and
out
sub
enter
sarl
loop
pushf
pop
xchg
movsl
jb
out
xchg
dec
popa
jno
dec
in
lea
or
sub
dec
add
cltd
jbe
or
sub
in
mov
xor
fidivrl
cmp
pop
sahf
clc
dec
pop
mov
lock
xchg
scas
in
jbe
mov
cld
add
dec
aad
in
pop
fwait
push
push
ss
clc
mov
arpl
dec
xchg
clc
fadds
pop
jnp
or
loope
dec
jne
std
mov
aam
add
out
cmp
push
mov
cmpsl
jno
inc
addl
jle
arpl
ret
xchg
push
sbb
lea
outsb
pop
push
and
cmp
pop
cmp
cmp
bound
insb
jo
inc
and
inc
shll
ret
int
or
xchg
inc
and
xor
cmpsb
add
pop
cmpsl
dec
insb
prefetchwt1
mov
sbb
cmp
and
mov
lods
xlat
sub
mov
jbe
or
mov
loopne
add
xchg
paddsb
dec
call
inc
repnz
insb
pop
mov
imull
les
repnz
aaa
xchg
inc
pop
fidivrl
jl
fldcw
ljmp
push
and
in
lcall
cwtl
shrb
arpl
lret
cmp
aas
fwait
push
pop
inc
movsl
adc
scas
das
int
mov
outsl
andb
mov
or
mov
sbb
dec
lcall
bound
js
add
mov
sbb
adc
push
xor
adc
adc
mov
aad
mov
aam
cmova
push
mov
add
shll
mov
xor
roll
or
testb
popf
and
loop,pn
inc
cmp
popf
fadds
push
pop
mov
inc
clc
fsub
mov
outsl
stos
test
pop
out
int3
xlat
loop
scas
mov
mov
sbb
push
mov
movsb
arpl
arpl
xchg
adc
ja
dec
mov
cltd
xchg
dec
push
into
loop
jne
inc
adc
sbb
jno
jecxz
mov
xlat
push
jmp
in
inc
loope
jmp
mov
pusha
rorb
xchg
mov
loop
jmp
loop
add
ljmp
pop
rorb
push
xor
loop
cmp
mov
xchg
in
and
mov
xchg
mov
mov
pop
sahf
shll
pop
jb
test
dec
lea
dec
out
iret
pop
cs
push
lds
in
int
xchg
jecxz
xchg
enter
xchg
movsl
dec
in
or
sbb
aad
dec
aas
aaa
inc
out
xchg
outsb
sbb
outsb
lcall
jb
icebp
clc
enter
pop
cmpsl
aaa
int3
cmpsl
and
sub
adc
mov
mov
cmp
out
mov
pop
jae
jl
cld
cmpsl
data16
xchg
sub
daa
add
push
dec
dec
lret
push
inc
fwait
stos
cltd
sub
or
bound
leave
dec
je
test
adc
dec
popa
fcmovnbe
push
das
mov
sahf
sahf
and
cmpsl
adc
pop
xor
xlat
outsb
fidivrl
adc
xchg
adc
pop
push
dec
repz
loop
push
mov
jle
mov
pop
mov
bound
dec
add
xchg
sbb
shl
imul
xlat
pusha
sub
cmp
lods
adc
insb
adc
sbb
adc
movsb
es
fcmovnb
rolb
iret
dec
cmp
imul
and
cld
xlat
std
push
cmpsl
jnp
cld
int3
mov
mov
and
iret
call
and
add
inc
or
pop
and
pop
mov
sbb
dec
pop
icebp
into
sbb
push
mov
mov
loop
xor
inc
adc
daa
mov
cmpsb
jge
cmp
or
and
sbb
add
pusha
pop
push
cmp
out
dec
and
out
shr
push
mov
icebp
sahf
ret
imul
lret
js
cmp
pop
xchg
loop
loop
cmp
pop
cmp
inc
pop
mov
stc
adc
mov
xchg
dec
mull
cmpsl
mov
sbb
popa
rcrb
lea
cmc
mov
test
sub
jnp
test
sbb
mov
mov
or
xchg
push
add
hlt
outsb
aaa
lahf
icebp
das
das
sbb
imul
outsl
push
adc
mov
sbb
fsubrl
mov
notl
xor
loop
stc
sbb
dec
scas
mov
cltd
pop
dec
sbb
sub
push
or
sub
gs
test
fisttps
data16
stos
out
sbb
cmpsb
js
or
push
test
hlt
lea
iret
dec
insl
sub
push
sti
sbb
das
adc
sub
xchg
mov
ljmp
adc
popa
mov
xchg
inc
adc
jo
mov
cli
js
test
and
mov
ds
jmp
and
je
dec
ret
xor
insl
test
add
mov
cmp
cmp
mov
dec
cmp
adc
into
test
xchg
jmp
sbb
push
fs
out
push
jge
cmp
add
pop
mov
adcb
pop
mov
call
jb
or
int
cmp
xor
mov
int3
lcall
xchg
mov
dec
jg
jae
fists
int3
xor
jne
negb
cmp
loope
pop
out
lahf
in
inc
loop
inc
pop
mov
sub
data16
stc
cmc
xor
insl
outsl
sub
adc
cwtl
fidivs
mov
xchg
add
add
sub
nop
hlt
jnp
int3
dec
fs
mov
cmp
jno
stc
xor
cmp
jne
mov
xchg
jmp
fcomi
add
std
mov
pop
insb
adc
subl
add
pop
xchg
es
dec
ds
cmp
arpl
das
fildll
jbe
add
push
inc
cmpsb
iret
dec
fidivrs
mov
sbb
mov
mov
push
fcomip
mov
mov
push
and
mov
into
imull
addb
lock
mov
add
and
sbb
test
outsb
push
or
mov
je
in
or
add
pop
xor
or
dec
jmp
or
imul
adc
test
stc
dec
sbb
xor
mov
mov
cld
pop
mov
nopl
enter
adc
xchg
sbb
sub
aad
push
std
pop
cmp
popf
adc
js
lods
data16
aam
lea
fucomip
and
add
cmp
mov
push
bound
lahf
sti
ja,pt
rol
dec
xchg
ds
cli
mov
jmp
jno
andb
cmp
inc
aas
ret
pop
in
mov
dec
dec
push
lahf
push
ss
mov
pop
std
jp
scas
stc
test
mov
push
xchg
in
arpl
push
and
cmpl
add
push
stc
or
push
popa
sub
dec
ficompl
xchg
aaa
test
shrb
stos
fstl
enter
insb
lds
dec
arpl
xor
and
mov
js
jecxz
xcrypt-ecb
cmpsl
int
push
std
push
lea
ret
pop
in
dec
scas
xor
pop
hlt
push
or
adcb
popa
cmp
ja
lea
into
jno
xor
push
addr16
xchg
ret
inc
xor
xor
leave
std
insl
dec
test
xchg
and
test
mov
inc
popf
push
pop
dec
sbb
add
lods
sahf
out
dec
int
sub
push
jp
je
sub
adc
push
xchg
jno
mov
xchg
out
scas
jecxz
aam
sbb
mov
cmpl
aam
push
addl
fisubl
push
or
shrl
test
add
push
arpl
push
mov
inc
push
push
push
ljmp
fwait
mov
sbb
nop
add
cmp
adc
int3
lahf
movsl
gs
arpl
pop
push
fcmovu
aad
mov
ret
aad
aam
popa
movsl
test
push
aas
or
js
jecxz
jo
testb
sbb
mov
sbb
cwtl
jle
addr16
jmp
lock
fidivl
mov
sub
dec
outsb
xor
ret
xor
sahf
iret
ds
popa
ljmp
push
clc
pop
pop
dec
nop
xchg
fcompl
or
stos
lods
mov
fbstp
xchg
adc
mulb
jo
mov
push
xchg
iret
pop
lret
scas
test
inc
cld
outsb
sbb
jp
fisubl
pop
mov
lcall
jle
mov
lods
pop
dec
xchg
xchg
rol
add
adc
adc
mov
and
fwait
push
jmp
cmp
jo
push
ljmp
loopne
stc
mov
adc
popa
or
fs
jb
popa
mov
sbbb
or
arpl
cmp
pushf
and
xor
movsb
sub
and
ljmp
add
add
test
and
scas
icebp
sahf
pop
push
xchg
sarb
mov
sub
popl
adc
sahf
adc
jl
mov
cmc
hlt
inc
int3
push
push
and
mov
flds
cmp
xchg
sub
data16
or
push
jb
aas
mov
fisttps
sbb
xchg
insl
and
push
inc
push
and
ffreep
in
mov
divb
cmpsl
shrb
int3
and
rol
adc
fwait
sahf
cmpsl
arpl
sub
rol
lcall
hlt
or
cs
out
sub
sbb
mov
cwtl
dec
outsb
add
sub
sub
movsl
jno
inc
mov
aas
sub
push
gs
les
push
mov
dec
pop
hlt
add
cld
popf
loope
and
testb
imul
jle
jl
sub
mov
mov
in
push
mov
insb
push
repz
divl
dec
or
js
xchg
aaa
xchg
ljmp
sbb
or
and
movsl
outsb
insl
ss
or
dec
jecxz
sbb
pop
cmp
or
xchg
in
and
cmp
add
gs
andb
int
adcb
and
mov
mov
mov
je
push
mov
stos
dec
sbb
test
mov
ljmp
shlb
into
push
pop
xchg
jg
dec
sbbl
rep
outsl
adc
ret
push
and
out
sbb
xchg
gs
mov
jl
mov
mov
sub
addr16
sbb
sahf
mov
and
jge
arpl
pushf
sbb
push
sbb
fwait
lcall
mov
sbb
jae
rol
and
sbb
and
lods
insl
sahf
push
pop
pop
jnp
xor
into
mov
shr
cmpsb
icebp
mov
nop
in
or
adc
stc
push
push
inc
aas
cltd
fs
test
stos
add
mull
jp
push
push
addr16
sub
inc
loopne
adc
cld
shll
dec
sub
ss
xlat
mul
xor
stc
xor
jecxz
outsb
jo
or
pushf
cli
pop
and
mov
sub
test
xchg
rclb
lods
mov
sbb
test
pop
sbb
push
inc
jecxz
out
jmp
mov
mov
imul
call
call
outsl
xchg
cwtl
lods
and
mov
mov
inc
xchg
mov
and
mov
mov
enter
pop
popf
add
adc
imul
push
pmullw
das
jp
cmc
sub
or
les
rol
lcall
mov
pop
ficoml
push
rep
inc
daa
xchg
cmp
das
cli
add
or
in
sbb
sbb
mov
sti
daa
adc
pop
pusha
ror
icebp
jmp
iret
inc
mov
jbe
hlt
mov
dec
flds
cmp
dec
leave
or
cmpsb
mov
xor
aad
sbb
jb
or
jbe
mov
clc
and
mov
push
decl
cmpsb
fistl
rorb
adc
push
sbb
or
out
and
js
je
inc
and
and
and
jne
jnp
jle
dec
pop
and
lret
cltd
leave
mov
out
mov
cmp
pop
pop
lahf
fiadds
js
mov
gs
int
sarb
mov
addr16
lahf
pop
xor
aad
xorb
dec
xchg
mov
mov
cmp
les
mov
lods
mov
xchg
imulb
ret
in
je
bound
cmp
mov
pop
sub
les
xchg
inc
fists
mov
mov
or
aad
dec
xchg
lds
lods
loop
sub
add
push
hlt
xor
push
ret
pop
mov
xor
dec
inc
push
push
xor
std
jnp
dec
mov
fwait
mov
xor
in
sbb
lahf
mov
insb
adcb
mov
imul
push
scas
mov
adc
jnp
jo
rcl
cmpl
gs
mov
mov
insl
cwtl
mov
mov
mov
xor
loope
xor
cmp
xor
ret
scas
int
sbb
push
enter
test
or
mov
aaa
fcmovnu
movsl
not
push
mov
push
mov
leave
leave
mov
sbb
es
aas
pop
push
xchg
xchg
or
add
mov
push
inc
mov
sbb
nop
add
add
gs
cmp
sahf
icebp
sbb
jecxz
adc
es
lods
movsb
or
ret
cmp
dec
je
jle
inc
sub
sub
ljmp
fwait
xchg
mov
std
ss
cmp
inc
inc
pop
sti
mov
js
push
push
pushf
fbstp
popf
jb
outsb
sub
xchg
adc
mov
push
push
std
sbb
mov
es
loop
lods
add
test
jmp
mulb
xabort
inc
sbb
fbld
and
dec
mov
stc
js
lahf
add
or
push
xchg
popa
and
iret
ds
adc
out
test
pop
stc
adc
repz
test
imul
add
repz
lret
hlt
mov
fisubrs
ret
lock
cmpl
aam
mov
cmp
ret
ret
mov
xor
ret
je
pop
adc
lret
divl
adc
dec
push
aas
push
mov
pop
ljmp
test
adc
cmp
gs
and
repnz
push
arpl
mov
push
fdivr
test
inc
in
adc
adc
jae
jnp
jp
scas
lret
or
jge
jae
aam
xchg
push
mov
or
insl
subb
and
faddp
jge
mov
inc
fildl
ja
mov
outsl
mov
add
xchg
out
or
repz
mov
fsts
cmp
sbb
inc
jnp
xchg
pop
xchg
mov
nop
fidivs
outsl
jnp
cltd
and
jle
mulb
mov
pop
icebp
cs
hlt
lahf
pushf
pop
dec
xchg
push
outsl
or
mov
stos
sub
les
lahf
sahf
arpl
popf
push
lock
jg
jbe
cmp
xchg
negl
imul
out
ja
inc
add
jnp
sub
inc
js
out
data16
je
sbb
or
mov
popf
aaa
fwait
jle
inc
pop
repz
xor
lds
adc
gs
mov
cmp
push
je
mov
aaa
add
sahf
cmpsb
cmp
in
jno
js
in
test
aad
lods
into
nop
and
mov
daa
les
int3
movsb
lods
inc
popa
add
pop
push
push
aad
andb
imull
push
add
sbb
cli
add
sbb
mov
gs
ds
clc
adc
aas
mov
in
cwtl
out
aaa
xchg
js
lea
int3
ret
scas
lds
out
bound
cmpsl
xchg
push
and
int3
mov
and
sbbb
cmc
loop
pusha
pop
fldt
adc
mov
sbb
add
adc
outsl
andl
fs
push
sub
adc
fsubrp
movsb
mov
push
and
sysexit
scas
or
mov
dec
das
mov
inc
shl
test
or
movsb
jle
add
js
aam
ds
test
pop
out
mov
imul
push
and
xlat
lret
lahf
mov
or
pusha
jge
ret
cmp
nop
pushf
mov
fnstcw
loope
jnp
out
roll
cmp
repnz
jno
out
xor
mov
movl
sbb
sti
dec
sbbl
inc
dec
gs
xchg
je
inc
mov
sbb
xor
inc
xchg
nop
lods
lcall
out
cmc
neg
lock
lds
xor
dec
imul
cld
cmpsl
aam
je
test
adc
int
leave
daa
stos
sbb
faddl
insb
ret
mov
xchg
or
cmp
cltd
icebp
outsl
jno
in
es
xchg
ds
xchg
movsb
jg
push
and
and
movsb
mov
sbb
mov
add
dec
ret
jbe
loope
xchg
xchg
mov
jo
add
idivb
jne
dec
lret
pop
pop
rolb
xchg
or
imul
mov
and
add
testb
mov
into
vmread
lahf
xor
inc
mov
ret
jo
sub
inc
jp
sbb
lods
je
icebp
scas
sub
bswap
jo
jge
cmp
in
sub
dec
xchg
test
adc
xchg
and
in
stos
mov
mov
loope
not
lds
adc
push
cmc
pop
enter
cmp
jl
cmp
inc
aas
shll
jns
jbe
lret
mov
fwait
xor
dec
or
xchg
sbb
inc
es
xchg
fadds
clc
out
mov
dec
mov
pop
mov
cmp
jno
sbb
jo
fiaddl
shlb
clc
and
and
adc
mov
jno
loopne
mov
je
fmuls
in
xor
inc
dec
lods
test
pop
sbb
mov
lahf
testl
outsb
les
mov
rclb
inc
call
or
enter
pop
data16
rdtsc
sbb
mov
loop
int3
inc
in
xorl
aam
fldt
mov
lcall
xchg
sbb
leave
jl
xlat
popf
jb
gs
mov
xchg
in
cltd
out
iret
lret
loope
rcrl
dec
lahf
or
sbb
pop
ficompl
aas
rorb
addr16
sbb
pop
insb
fldt
adc
scas
sbb
sbb
fmull
movsb
xlat
stos
decb
vmwrite
mov
xchg
cltd
faddp
aam
fsubs
stos
push
movsl
orl
mov
js
std
jecxz
mov
imul
test
jo
daa
sbb
inc
pop
inc
jno
or
cmc
fisttps
repz
aaa
outsl
sub
ret
dec
mov
rcrl
mov
nop
mov
mov
add
fucomi
cmp
jbe
scas
ds
pop
das
push
sbb
in
ja
push
btr
shl
xor
sbb
loop
ds
lret
ja
jns
sti
xor
jp
imul
out
jecxz
ds
jle
fcmovbe
repz
and
in
imul
out
pushf
pop
sahf
loope
xor
inc
test
popf
rol
lods
fdivrs
dec
mov
dec
leave
adc
and
jno
outsb
jl
adc
in
lods
lret
call
out
repz
shll
stc
adc
lods
dec
sbb
push
enter
arpl
jbe
mov
int3
out
icebp
mov
sbb
in
jle
jl
mov
and
sbb
movsb
andb
cmp
mov
movups
hlt
cmp
sarb
pushl
es
pop
mov
push
movsb
jecxz
pop
dec
pop
add
scas
cli
out
test
into
and
push
jno
push
fidivs
lcall
mov
insb
sbb
mov
ds
rclb
mov
mov
inc
jbe
mov
imul
popf
or
pop
loope
das
mov
jnp
in
xlat
lods
xchg
leave
arpl
je
cmp
mov
xlat
sub
shlb
xor
or
jno
in
inc
ds
mov
mov
mov
jo
jmp
pop
lds
dec
and
popf
mov
xchg
rclb
fisubs
fistps
and
repz
in
or
push
outsl
jns
test
cmpsb
push
mov
test
and
push
pop
icebp
inc
push
push
pop
dec
sub
shlb
rcr
or
out
fbstp
adc
fistl
pop
mov
stc
hlt
lock
out
pop
fwait
imul
push
or
fsubs
out
mov
or
cli
and
cld
fldl
push
inc
xchg
add
pushf
push
push
pop
stos
jbe
and
push
or
shll
inc
inc
cld
push
add
push
mov
add
jl
xor
arpl
rcrb
jmp
cmp
add
jbe
addb
popa
push
pop
shrl
arpl
jne
shrb
xchg
aad
push
mov
das
imul
inc
sbb
mov
or
out
xchg
pop
jne
and
pusha
icebp
lock
and
add
or
hlt
fldl
push
mov
es
stc
mov
dec
in
mov
mov
ret
adc
idivl
xchg
shll
dec
dec
js
lret
out
outsb
mov
pop
inc
bound
push
dec
hlt
or
into
mov
jbe
lahf
mov
call
hlt
xlat
scas
mov
lds
mov
rolb
mov
inc
fisubl
je
inc
sbb
ret
xchg
data16
cmp
inc
divl
jecxz
push
adc
jo
jns
loope
hlt
sarb
adc
loopne
jns
mov
xchg
in
xchg
mov
pop
push
cmp
jae
sahf
in
mov
stos
pop
out
push
rcrb
popa
xchg
cmp
xlat
shll
add
push
scas
fdivl
out
jp
mov
sbb
xor
or
push
mov
mov
mov
int
xchg
fists
les
insb
jg
lds
cmpsb
pop
rolb
push
test
je
push
imul
adc
enter
ja
cltd
test
push
lods
out
jle
xor
adc
fsubrs
pop
or
dec
enter
ret
mov
or
js
dec
mov
repz
pop
and
outsl
xor
leave
inc
xor
cmp
mov
mov
inc
rol
add
adc
xor
shlb
push
add
adc
mov
xchg
or
inc
into
idivl
and
pusha
and
xchg
cli
pop
push
mov
and
mull
test
xchg
pop
jnp
push
dec
aas
jmp
jg
out
fidivrs
add
cmp
lcall
outsb
test
push
mov
xor
lods
adc
dec
jmp
cwtl
add
cmc
pop
stos
loopne
cld
out
fldcw
mov
jo
pop
mov
stc
cltd
push
or
dec
lcall
dec
out
mov
lcall
or
leave
sbb
lods
pushf
jno
incb
sahf
xor
mov
lock
ror
dec
and
adc
fmuls
aas
cld
mov
add
mov
and
test
jb
jbe
sub
sbb
lret
inc
and
mov
popa
mov
out
loopne
mov
pop
loope
rcll
mov
fisttps
mov
cmp
out
pop
dec
pop
mov
push
xchg
in
cmp
lahf
outsl
fiaddl
inc
xor
cmp
ja
sub
dec
sub
fldt
insb
pop
mov
jo
sub
ja
out
pusha
mov
fsubs
xor
cmpsb
data16
hlt
or
cmpsl
mov
gs
addr16
ret
jmp
add
dec
mov
pop
repnz
add
xor
je
xchg
adc
pushf
outsb
xor
lods
int
xchg
pop
jns
xchg
outsl
imul
int3
and
add
jl
test
cli
inc
stos
cmp
pop
das
sub
lret
and
inc
neg
out
inc
loope
sbb
adcb
push
lods
mov
push
mov
pop
xor
cmpsl
inc
aad
ret
clc
push
icebp
or
ret
shl
popf
lods
mov
xchg
xchg
pop
shr
or
leave
leave
xchg
add
stos
cmpsl
dec
sti
jbe
add
mov
out
jmp
rcll
mov
mov
movsb
add
addr16
pop
test
cmp
vmrun
adc
cmp
dec
adc
mov
xchg
mov
dec
insl
mov
imul
data16
push
pop
imul
movsb
aam
ret
pop
push
shr
testl
shlw
arpl
test
push
jmp
jecxz
adc
inc
fwait
lcall
hlt
pop
fst
fidivrl
pop
cmp
call
mov
ret
add
out
jp
mov
pop
cmpsl
test
or
sub
dec
pusha
fstp
sbb
cltd
in
movsl
mov
lret
test
dec
stos
call
test
xchg
subl
into
addr16
daa
jno
mov
mov
dec
mov
sbb
ljmp
pop
insb
leave
scas
aaa
test
push
loopne
test
ds
push
sub
pop
mov
ret
mov
xchg
loope
std
stos
iret
jle
shlb
sub
shlb
xchg
out
dec
lds
daa
das
popf
xor
jo
push
push
push
jb
and
cmc
mov
cld
sti
jmp
popf
mov
lahf
cmp
cltd
shlb
jae
call
test
cli
mov
cmp
daa
cmp
outsl
pop
aas
add
push
mov
ss
insb
pop
enter
dec
jmp
out
xchg
je
adc
test
jle
cmpsb
and
add
sti
fisttpll
mov
int3
sbb
dec
arpl
cmp
xchg
mov
pop
enter
mov
xor
xchg
or
and
lods
or
sar
arpl
or
das
mov
inc
push
test
or
cmp
test
and
add
xor
hlt
push
xchg
pop
std
jne
pop
cmpsl
test
mov
mov
jno
mov
jns
jecxz
mov
dec
sahf
jle
inc
sub
push
test
outsl
in
es
cmp
jle
bound
adc
mov
adc
decb
ret
and
addr16
int
addr16
cmp
out
and
mov
sbb
and
ja
out
clc
das
xchg
insb
xchg
incl
xchg
jle
jns
mov
xlat
push
stc
push
sbb
push
inc
cmpsb
mov
sbb
dec
or
movsl
pop
popa
sbb
fldpi
shll
fsubrl
je
lock
divb
mov
xchg
or
pop
pop
adc
jg
inc
stc
outsb
add
pop
pop
mov
imul
or
pop
dec
lea
dec
imul
inc
push
shll
aam
and
iret
jae
or
pop
ret
stos
shll
test
inc
daa
das
xor
inc
cmc
push
repnz
xchg
adc
and
sbbb
pop
mov
inc
cs
jo
test
cs
cmpxchg
cmp
lods
ficoms
pop
and
and
ds
sub
scas
sbb
and
add
mov
cld
mov
cli
inc
imul
out
push
lea
mov
pop
push
movsb
rcrl
pop
fidivrs
aas
aad
dec
insb
push
or
push
jns
les
cmpsb
je
cmc
invd
push
scas
or
mov
and
popa
icebp
into
push
jo
sbb
push
inc
xor
sbb
cmp
mov
push
jbe
xchg
mov
mov
adc
or
dec
adc
jb
outsb
in
sbb
ret
lahf
movsl
outsl
inc
add
sub
ljmp
mov
iret
xchg
push
je
or
lea
pushf
push
mov
add
xchg
sbb
pop
mov
sub
cwtl
xor
popa
push
icebp
into
add
push
inc
out
gs
arpl
ja
or
cmc
pop
lahf
cwtl
addr16
shl
inc
mov
xor
or
inc
sub
mov
cmp
out
sub
scas
in
xor
int3
dec
sbb
jnp
and
mov
pop
xchg
out
push
ds
jnp
test
xchg
jb
sbb
push
aaa
je
mov
lea
pop
neg
push
add
rol
inc
xor
mov
ja
es
dec
jmp
inc
lods
fwait
addr16
sbb
mov
jg
dec
fwait
gs
fists
jbe
cmp
mov
cmpsb
imul
int
enter
and
jb
xchg
inc
push
inc
addr16
adc
ljmp
sbb
bound
stos
push
adc
mov
loope
xchg
cmp
lcall
mov
push
mov
jle
orl
lods
outsb
inc
add
xor
scas
out
aam
ds
out
mov
out
cwtl
add
fnstsw
adc
xchg
sub
jle
xchg
push
stc
test
sub
xchg
adc
into
mov
scas
ds
sbb
push
dec
cmp
in
das
xor
push
jle
mov
fwait
jmp
mov
push
call
in
mov
cmp
dec
maxps
or
jne
push
inc
popa
xchg
adc
inc
adc
cmp
adcl
mov
mov
mov
or
xor
dec
fs
inc
and
addr16
adc
pop
inc
dec
xchg
pop
rolb
in
arpl
cltd
mov
fdivrp
dec
fdivl
leave
sbb
fisubrl
xchg
sahf
push
lock
xor
or
add
inc
idivb
sbb
imul
fsubl
cmp
aas
aad
dec
hlt
fucomip
dec
call
xchg
dec
mov
and
rorl
jge
mov
bound
fidivrl
sbb
jecxz
push
pop
out
jae
outsb
push
jle
add
inc
into
pop
jns
imull
pusha
push
aaa
lret
xchg
outsl
outsl
and
mov
mov
xchg
das
bound
sbb
mov
mov
dec
in
nop
fdivrl
sbbb
add
int
loope
stc
icebp
out
in
sbb
shrb
popa
movsl
jo
sub
mov
lahf
xor
mov
fidivrs
call
xchg
xor
and
std
pop
ficoml
shll
loop
jb
sbb
arpl
jecxz
push
scas
lcall
outsb
xchg
ljmp
test
int3
push
scas
add
inc
leave
adc
popf
mov
xchg
adc
out
jo
and
popf
mov
es
ret
scas
xchg
pop
loop
add
push
call
mov
call
mov
insb
add
push
outsl
faddl
pusha
dec
out
fiaddl
jno
lea
add
fs
sub
lcall
add
pop
shrd
or
out
repz
jae
jne
iret
push
jg
fmull
pushf
mov
and
xlat
push
cmp
sub
js
or
push
jnp
ss
mov
lock
std
and
in
pop
push
adc
dec
sbb
sbb
adc
daa
mov
sub
aad
jno
int
enter
repz
mov
lret
outsb
mov
jae
or
nop
inc
int
mov
sub
les
jns
add
cmp
out
and
rol
jnp
xor
loopne
dec
jmp
mov
fdivr
jne
outsb
adc
cmp
popf
xor
in
sub
xlat
les
mov
ret
and
in
add
ret
hlt
into
sbb
adc
xchg
cmp
and
dec
insb
in
fildl
inc
xlat
in
pop
rcr
mov
rcrb
xchg
lahf
xor
jnp
sub
or
cmp
pop
cli
push
ds
out
repz
push
gs
sbb
add
inc
cli
inc
out
cld
xor
iret
cwtl
add
shrb
inc
cmp
lahf
stos
xchg
and
mov
jno
add
cmp
sbb
xlat
and
dec
xchg
jle
mov
xchg
and
pop
fstl
xchg
out
push
imul
fs
xchg
dec
testb
inc
sub
add
leave
pop
sub
faddl
loop
jle
cmpsl
ja
xchg
lods
mov
int
mov
xchg
je
addr16
rorb
xchg
jb
and
push
and
inc
xchg
js
mov
pushl
ljmp
fmull
inc
pop
dec
sub
lcall
jnp
inc
xchg
cs
mov
aas
mov
dec
dec
xchg
ja
sti
jbe
rcll
dec
cmpsl
das
fiaddl
add
adc
mov
rolb
cmp
mov
or
jp
jp
cmp
pop
mov
fildl
addr16
out
lods
mov
hlt
pushf
mov
lcall
cwtl
scas
xor
cmovbe
out
imul
test
mov
cmp
lahf
fwait
pop
stos
adc
shl
pop
test
scas
mov
ret
leave
xchg
loope
cmp
cmpsl
cmc
mov
xor
dec
out
xchg
sub
test
push
dec
xor
sti
cmpsb
pop
push
cmp
and
adc
xor
or
push
sbbb
outsb
dec
or
lret
dec
jmp
out
pushf
add
sbb
pop
nop
and
lods
jnp
adc
xor
mov
repz
das
imul
cmp
lock
mov
mov
and
and
or
inc
stos
in
inc
cmp
and
push
add
mov
mov
pop
cmpsb
shrb
loopne
popf
push
out
out
js
inc
outsl
sub
mov
aad
add
jb
cwtl
repnz
pop
rcrb
fwait
xchg
in
pop
cmpsl
rcrb
cmpsb
jno
daa
je
inc
mov
in
or
and
out
push
shrb
adc
and
or
test
and
je
or
xlat
enter
push
rcrb
adc
and
jmp
orl
dec
add
rcll
jle
test
jmp
rcll
adc
std
dec
pop
ret
mov
sbb
and
jno
jmp
mov
int3
test
gs
test
clc
pop
enter
aam
ret
outsb
adc
sbb
insl
push
hlt
enter
fnstsw
xchg
xchg
mov
movsb
jp
shrb
out
andb
dec
mov
imul
fisttps
adc
jmp
jecxz
jno
sub
addr16
add
add
xor
add
inc
xor
insl
xor
xorl
xor
xor
xor
xor
xor
jns
xorl
enter
in
jmp
add
sbb
push
xor
xchg
xor
xor
xor
xor
xor
xor
xor
js
xorb
xor
aad
icebp
xor
fs
mov
nop
ss
mov
ss
lock
pop
aaa
or
aaa
aaa
aaa
aas
aaa
inc
aaa
push
aaa
push
aaa
imul
aaa
int
fnstenv
jmp
icebp
aaa
add
adc
cmp
pop
cmp
cmpl
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
push
cmp
cmp
xor
cmp
push
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
xor
cmp
dec
jnp,pt
test
cmpsb
ds
ds
aas
arpl
push
jnp
cmpl
add
add
dec
add
add
pop
xor
pop
xor
xor
lret
xor
adc
push
xor
xchg
xchg
xor
xor
xor
adc
xor
je
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jns
jg
out
xor
and
ss
imul
xchg
ss
shll
ss
lock
sub
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sbb
and
and
sub
jb
js
jl
cmpb
cmp
cmp
cmp
cmp
cmp
and
and
inc
cmp
popf
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
sub
cs
cmp
aas
pop
aas
jo
cmpl
aas
xchg
aas
cltd
aas
lahf
aas
lods
aas
leave
aas
iret
aas
fidivrl
loopne
ljmp
xor
add
add
add
xor
xor
lock
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
xor
jp
mov
xchg
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
ss
mov
xchg
ss
lods
ss
pushl
pop
aaa
ja
lea
shlb
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
push
cmp
cmp
cmp
push
cmp
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
add
hlt
xor
xor
cmp
xor
xor
xor
xor
push
add
xor
add
or
xor
in
in
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
mov
dec
jo
sbb
test
jmp
pop
popf
pop
testl
cmovne
daa
or
mov
inc
pop
pop
sub
push
icebp
xchg
cwtl
mov
daa
mov
inc
push
jmp
lea
movsb
cli
adc
js
scas
sbb
mov
or
inc
fwait
outsl
popa
cmp
push
xchg
out
rclb
mov
adc
mov
outsl
sub
sbb
out
aas
xor
aad
push
xor
pop
cwtl
xor
aad
xchg
xor
sub
xor
xor
mov
stc
jl
in
sbb
push
cmpsb
xchg
dec
mov
push
stos
xchg
xchg
or
je
mov
jmp
das
and
int3
pusha
popa
cltd
loopne
lret
shrb
lock
dec
push
pop
shrb
mov
xor
test
xchg
xor
jnp
adc
mov
jmp
jns
jp
movsb
and
lahf
push
mov
arpl
mov
add
pop
cmpsl
out
xchg
xchg
in
mov
add
jae
cmp
jmp
and
fstpl
les
mov
inc
dec
fs
addr16
bound
dec
xor
push
inc
ja
inc
sub
pop
cmp
xor
push
dec
dec
push
xor
inc
adc
dec
cmp
bound
push
arpl
adc
aas
adc
inc
pop
push
dec
cmp
aaa
pusha
adc
sbb
sbb
sub
sub
add
or
arpl
sub
dec
sub
add
cmp
push
daa
pop
sbb
xor
and
inc
adc
add
pop
and
adc
or
push
push
sbb
pop
sub
cmp
daa
das
pop
or
push
aas
das
push
xor
cs
or
aaa
ss
and
pop
push
xor
push
sbb
add
add
pop
or
cmp
or
push
add
push
das
sub
sub
aaa
xor
inc
dec
push
and
daa
adc
bound
and
dec
push
and
cmp
sub
inc
or
cmp
sub
pop
dec
popa
sbb
sbb
pop
pop
aaa
push
pop
or
sbb
inc
or
pop
inc
push
sub
dec
sub
sub
sbb
inc
adc
pop
and
inc
and
inc
pusha
pop
sbb
inc
sub
or
push
sub
aaa
push
cmp
dec
or
push
or
inc
inc
inc
pop
push
adc
dec
and
push
cmp
cmovs
inc
inc
and
or
sbb
xor
pop
xor
xor
pop
push
push
cmp
push
push
pop
sbb
xor
dec
sub
inc
or
push
and
das
add
cmp
dec
es
dec
sub
xor
adc
inc
popa
push
pop
dec
pop
pop
xor
and
or
push
ss
pop
dec
xor
dec
inc
ss
popa
cmp
add
inc
sub
push
aas
sbb
dec
add
inc
pop
push
push
and
add
sub
push
and
sub
pop
xor
dec
pop
pop
sub
sub
pop
push
sbb
cmp
pop
pop
pop
and
dec
sub
sub
or
bound
dec
cmp
adc
inc
aas
inc
cmp
pop
xor
push
inc
sub
sub
dec
dec
das
dec
inc
dec
inc
dec
adc
and
cmp
sub
push
inc
daa
sub
dec
or
sbb
adc
sbb
sub
cmp
push
dec
cvtps2pd
cmp
pop
push
xor
ss
pop
add
es
add
xor
arpl
das
and
pusha
inc
pop
push
add
pop
adc
das
cmp
aaa
pusha
sub
das
adc
cs
push
sub
pop
adc
cmp
dec
bound
cs
adc
sbb
pop
popa
push
and
and
pop
and
xor
inc
sub
xor
push
ss
adc
or
cmp
pop
sub
push
es
pop
adc
adc
cmp
pop
add
or
or
and
dec
pop
xor
xor
and
pop
push
adc
dec
cmp
inc
push
push
dec
push
sub
adc
and
xor
and
dec
sbb
add
pop
and
add
push
sbb
cmp
inc
pop
sub
inc
das
cmp
pop
das
or
pusha
inc
pop
dec
push
pop
adc
push
and
sbb
inc
add
sub
pop
push
adc
adc
and
pop
push
adc
or
adc
dec
push
aaa
or
adc
sub
pop
inc
daa
add
and
xor
inc
pop
push
dec
dec
adc
add
daa
or
push
pusha
push
sbb
add
add
cmp
popa
adc
sub
cs
inc
push
xor
dec
cmp
push
push
push
sub
push
push
cmp
dec
add
pop
sbb
cmp
and
bound
or
aaa
xor
add
push
sbb
dec
inc
pop
dec
or
or
push
add
push
cmp
add
dec
sub
pop
adc
pop
pusha
jle
mov
xchg
mov
mov
jne
jne
mov
mov
mov
mov
mov
mov
bt
xchg
mov
mov
jg
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
jae
xchg
sub
mov
jno
jge
xchg
mov
jns
mov
mov
xchg
mov
dec
xchg
jp
xchg
mov
xchg
mov
xchg
jne
xor
xchg
mov
bt
je
jl
mov
mov
jge
mov
jmp
add
inc
inc
inc
jg
mov
mov
bt
mov
mov
xor
jbe
jg
jb
mov
xchg
xchg
mov
mov
mov
jmp
inc
dec
mov
xchg
je
bt
bt
jnp
mov
jb
mov
mov
mov
mov
mov
jl
jne
jne
mov
jbe
bt
jle
add
jb
jp
mov
jmp
xor
arpl
das
xchg
jb
jo
add
jno
mov
xchg
jg
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
jge
bt
jae
js
mov
mov
mov
jbe
mov
jmp
adc
bt
jl
bt
inc
jae
bt
jne
popa
ret
pusha
jg
bt
mov
mov
bt
mov
mov
mov
mov
jne
mov
xchg
jg
mov
mov
xchg
mov
mov
jae
jge
mov
bt
mov
mov
mov
mov
xchg
xchg
mov
xchg
jb
bt
mov
mov
xchg
xchg
jge
xor
ja
mov
mov
mov
xchg
jbe
xor
mov
mov
xchg
xor
xchg
jg
jge
jbe
ja
jmp
sub
pop
pop
sub
add
fisttpl
jp
mov
mov
mov
mov
bt
jne
mov
inc
mov
je
mov
mov
jo
mov
jl
ja
mov
xchg
xchg
js
mov
mov
mov
mov
xchg
jno
mov
add
bt
jle
mov
mov
jnp
jne
mov
jge
mov
xchg
mov
ja
mov
bt
xchg
jb
jae
ja
jbe
mov
jae
jb
je
xchg
mov
add
mov
mov
mov
xchg
mov
jne
bt
ja
mov
mov
mov
xor
jbe
mov
mov
jnp
jne
mov
mov
mov
mov
jns
jmp
sub
mov
mov
mov
jno
dec
bt
bt
mov
jnp
mov
mov
jp
mov
jne
mov
je
popa
jae
ret
jge
shl
pop
inc
aam
jae
fnstenv
mov
lahf
xor
orl
inc
es
jae
stos
test
or
mov
or
stos
push
gs
mov
or
sbb
mov
ret
or
jne
test
cmp
stc
jae
push
gs
pop
pop
dec
dec
lods
movsl
sbbl
dec
jle
jp
jl
adc
mov
push
mov
es
adc
jae
or
sahf
stos
push
ja
jp
inc
jne
flds
stc
push
pop
jle
mov
or
mov
mov
push
push
xchg
jl
mov
mov
push
inc
hlt
push
push
les
push
push
insb
mov
ds
int3
flds
mov
or
cmp
data16
cltd
cmp
int
or
sbb
xchg
mov
adc
jae
push
jle
int
les
ret
clc
push
pop
insb
add
pop
jle
int
cmp
inc
add
mov
sbb
xor
cmpsl
cmp
push
push
insb
clc
or
sbb
test
xorb
pop
jle
popf
mov
and
inc
sbb
clc
xor
or
push
dec
stc
and
mov
inc
mov
pop
mov
push
mov
mov
movsb
cmp
inc
or
jae
jp
clc
and
jo
or
test
das
sti
jae
mov
push
ja
mov
clc
and
gs
or
fxch
clc
cmp
and
dec
das
out
and
ret
repnz
mov
int
jl
or
mov
fnstenv
test
jp
hlt
pop
pop
inc
stc
and
stc
and
mov
cwtl
mov
clc
test
or
inc
cmpb
push
jle
int
gs
add
or
mov
or
fprem
jae
flds
iret
xor
mov
add
dec
clc
add
inc
push
int
push
stc
push
push
pop
or
movsb
cmp
mov
sbb
hlt
iret
cltd
sub
fdivrp
jae
mov
flds
mov
inc
divb
jp
stc
or
push
sahf
clc
add
inc
stc
pop
scas
adcl
sub
and
ret
clc
or
add
int3
flds
jae
clc
xor
and
inc
xchg
jae
jp
hlt
and
and
and
cmpsb
cmpl
shlb
xchg
dec
sbb
jae
cmp
lock
cmp
inc
stc
sbb
test
fsincos
jae
flds
test
mov
pop
pop
insb
clc
or
xchg
push
jae
add
jae
xchg
movsl
or
push
gs
add
and
inc
xor
jae
cmpb
push
gs
int
gs
push
pop
hlt
xor
pop
jl
add
test
jp
stc
and
insb
add
fimull
outsb
sbb
jae
sbb
jae
adc
mov
outsb
sbb
mov
sub
hlt
add
jle
int
add
inc
or
push
int
inc
clc
lds
or
mov
push
clc
push
fcmovb
pop
jp
stc
or
scas
cmp
add
push
jl
adc
clc
add
pusha
jno
das
icebp
jae
sahf
ret
clc
cmp
adc
mov
or
ret
adc
mov
divl
adc
mov
add
mov
jmp
mov
add
adcl
inc
or
mov
lods
jge
int
orl
or
mov
jle
mov
cmp
xorl
add
jae
es
push
ja
add
orl
xor
adc
outsb
and
mov
jge
lds
lods
and
test
clc
push
and
and
mov
or
xor
fiadds
clc
add
gs
mov
hlt
cmp
out
sub
mov
mov
popf
adcl
stos
push
insb
stc
pop
push
insb
adc
and
pop
inc
stc
sub
and
inc
das
clc
jae
xor
sub
flds
stc
sub
lds
das
mov
or
or
xor
stc
and
clc
add
addl
int
pushl
adc
repnz
stc
jae
jp
clc
cmp
stc
or
xchg
movsl
inc
shll
mov
or
jae
adc
clc
cmp
push
add
push
dec
mov
and
cmp
stc
pop
pop
pop
clc
push
mov
es
or
mov
adc
jae
push
gs
and
push
add
pop
pop
adc
mov
push
mov
int
insb
jl
adc
test
sti
jae
jp
jl
or
mov
mov
repz
sbb
test
out
cmp
mov
pop
push
stc
cmp
clc
push
push
insb
or
push
push
hlt
or
test
jae
test
push
mov
int
cmpl
inc
add
stos
andl
movsl
mov
mov
add
mov
int
or
movsl
int
xor
xor
cmp
popf
mov
stc
and
xor
int
and
inc
adc
stc
pop
stos
addl
int
push
clc
or
push
dec
hlt
pop
mov
cmp
leave
pop
lds
add
or
cmpsl
orl
int
cmp
int
dec
jl
or
mov
jp
or
cmp
out
xor
bnd
es
jae
adc
sbb
popf
xor
inc
es
xchg
dec
cmp
out
sub
push
fisttpl
lret
bnd
add
jae
mov
aaa
int
ja
and
adc
movsl
cmpsb
add
int
push
sbb
mov
and
mov
fdecstp
jae
fldl2t
ja
test
hlt
sub
dec
hlt
push
mov
add
int
inc
or
mov
cmp
outsb
adc
test
cld
add
int
addl
int
xor
int
out
and
push
out
call
mov
add
cmp
mov
push
icebp
jae
fnstcw
inc
xor
clc
cmp
gs
cmp
add
push
gs
cmp
fdivl
int
dec
stc
cmp
out
and
xchg
jae
cltd
addl
xor
xchg
nop
cltd
xor
int
mov
mov
or
fwait
push
insb
stc
xor
adc
mov
hlt
jae
int3
addr16
fyl2x
jae
mov
jp
stc
cmp
hlt
pop
mov
insb
clc
xor
mov
add
jle
int
or
int
adcl
mov
das
or
inc
das
clc
jae
jp
cwtl
leave
lahf
mov
or
push
dec
push
int
cmp
mov
push
mov
jp
stc
and
or
xor
mov
lock
fwait
cmp
repnz
or
movsl
mov
aaa
int
cmp
int
or
mov
or
clc
cmp
push
hlt
or
and
jne
shll
or
movsl
test
aaa
int
sbbl
popf
and
dec
adc
sub
jae
sbb
test
or
flds
clc
cmp
mov
mov
aaa
int
or
dec
sbb
jae
sbb
mov
mov
pop
push
pop
sbb
fxtract
jae
or
mov
or
mov
or
int
xchg
xchg
nop
cltd
adcl
int
rorl
push
gs
int
xorl
add
sahf
mov
out
sub
sbb
sbb
sahf
movsl
flds
hlt
sub
hlt
add
ja
clc
mov
aaa
int
dec
stc
pop
push
inc
or
sbb
mov
lock
add
mov
stos
push
insb
adc
dec
cmp
cmc
jae
sbb
test
addl
xor
out
sub
jl
adc
mov
mov
sbb
mov
fprem1
jo
scas
xor
push
mov
repz
hlt
jae
das
or
sub
and
sbb
hlt
sub
clc
cmp
stc
or
scas
cmp
aas
fadds
mov
mov
push
out
clc
les
cli
orl
cmp
sbb
movl
sbb
fld
jae
das
jle
stos
push
gs
or
xor
inc
xor
xchg
inc
add
test
rcrl
xlat
mov
jae
adc
test
mov
mov
push
mov
int
or
push
movsl
sbbl
mov
movsl
sbbl
stos
push
insb
add
push
pop
hlt
cmp
test
divl
or
sahf
mov
das
jmp
adc
fwait
stos
cmp
add
dec
hlt
pop
es
hlt
pop
push
insb
stc
or
test
or
stos
adcl
int
cmp
sbb
push
pop
stc
sub
and
dec
popf
cmp
int
cmpl
out
xor
stc
add
push
sbb
pop
lds
push
insb
or
inc
or
xchg
xor
cli
jae
or
sahf
mov
add
jae
jp
stc
or
scas
cmp
int
sbbl
inc
adc
sahf
mov
mov
test
clc
and
push
add
test
lds
flds
mov
cli
jae
clc
xor
or
int
cmpl
gs
xor
hlt
or
push
pop
add
mov
jle
dec
add
jae
fimull
stc
add
shl
mov
hlt
jae
cmp
cmp
inc
add
mov
jle
mov
lods
orl
int
insb
clc
or
pop
gs
pop
lds
es
sub
cmp
ret
or
scas
orl
scas
orl
int
xorb
push
test
or
clc
stos
add
stc
cmp
jl
or
jae
fnstcw
mov
add
jae
or
jae
xor
mov
mov
jae
add
mov
jle
mov
jp
push
int
insb
stc
push
and
inc
sbb
xchg
mov
pop
lds
clc
sub
hlt
sub
jnp
xor
or
or
clc
cmp
mov
inc
es
jae
mov
xor
mov
jp
jo
in
mov
or
mov
pop
test
decb
push
jle
or
or
sub
mov
pop
stc
pop
mov
pop
pop
int
dec
sbb
pop
lds
or
jae
or
jmp
sahf
stos
push
ja
int
xor
cmp
mov
aas
fdivl
int
xor
pop
push
inc
adc
inc
xor
rolb
push
sarb
shll
or
dec
add
xchg
inc
es
jae
push
gs
add
jae
cmp
out
and
stc
xor
adc
dec
das
jle
cltd
mov
xlat
add
and
dec
add
jae
fprem
jae
lods
xor
int
or
mov
push
insb
jl
adc
test
jp
or
and
flds
mov
dec
or
or
push
ja
mov
or
mov
push
mov
mov
icebp
jae
f2xm1
jae
xor
xor
or
xor
pop
int
gs
cmpsl
addl
mov
or
mov
sbb
rclb
mov
inc
stc
pop
lods
cmp
sub
insb
hlt
cmp
clc
add
dec
clc
push
ljmp
cmp
addl
sub
xorl
mov
xorb
and
int
or
xor
mov
push
jle
fsubrs
adcl
dec
es
mov
push
fcmovbe
addr16
sbb
mov
xor
and
push
pop
push
stc
xor
stc
add
and
inc
adc
mov
xor
addl
outsb
sbb
cwtl
sarl
aas
stc
rorb
stc
and
mov
sub
adc
mov
push
xor
out
repnz
divb
flds
mov
jle
jge
shll
push
stc
cmp
or
push
movsb
addl
mov
cmp
xlat
insb
sbb
pop
loop
stos
adc
dec
jle
xor
inc
inc
adc
clc
sarb
xor
push
push
add
push
dec
lock
rorl
test
fdecstp
jae
sbb
jae
fsincos
jae
clc
cmp
push
mov
fcos
jae
aam
and
pop
dec
or
push
ja
sub
mov
or
or
mov
int
push
adc
mov
and
mov
jle
mov
sbb
jge
shll
divb
sbb
jae
flds
mov
inc
xor
clc
sub
jo
icebp
std
jae
jp
bswap
push
insb
adc
ret
stc
add
pushf
ret
lahf
cltd
cmp
int
push
jl
or
jae
es
hlt
or
pop
ja
mov
or
jp
clc
xor
xchg
nop
cltd
cmp
inc
das
out
sub
shll
repz
push
ja
clc
stos
add
int
insb
adc
dec
or
test
std
jae
flds
mov
or
or
mov
push
mov
dec
popf
orl
cmp
pushl
fldcw
in
aam
shl
cwtl
xor
es
xchg
cltd
orl
xor
xchg
xchg
nop
cltd
cmpl
or
and
jl
adc
mov
cmp
jle
dec
sbb
jae
or
aam
popf
orl
mov
mov
xor
and
cmp
dec
pop
and
add
or
sub
mov
jp
jbe
mov
xchg
mov
mov
mov
xchg
mov
jns
je
jno
xchg
bt
mov
mov
xorl
xchg
jnp
mov
mov
jbe
jo
bt
xchg
xchg
jge
add
xchg
jo
jbe
mov
xchg
xchg
xchg
jae
jg
jne
jl
sub
ja
mov
jg
xchg
jbe
jge
mov
jne
jmp
pop
sbb
add
pop
dec
pop
cmp
sub
pop
sub
push
das
sub
add
and
and
push
push
aas
push
xor
es
push
pop
sbb
add
cmp
dec
push
and
bound
pop
cmp
pop
adc
sbb
push
or
inc
and
sbb
inc
inc
adc
or
pop
dec
push
arpl
xor
push
aaa
push
add
sbb
and
popa
xor
push
dec
xor
inc
cmp
sbb
cmp
adc
or
sbb
xor
das
add
or
sub
and
add
pop
dec
cmp
ds
cmp
sub
dec
and
pop
popa
inc
adc
push
pusha
dec
and
ss
cmp
sbb
inc
pop
push
or
inc
arpl
adc
or
pop
aaa
add
push
sub
aas
xor
pop
or
cmp
and
pop
or
sub
dec
dec
sbb
sbb
pop
sbb
push
xor
xor
dec
adc
adc
xor
xor
sbb
inc
inc
push
adc
adc
inc
pop
bound
or
daa
inc
sub
or
and
cmp
push
push
sbb
cs
bound
pop
das
pop
inc
or
or
push
sub
popa
or
or
and
cmp
pop
pop
cmp
inc
add
cmp
adc
dec
sbb
xor
push
and
adc
pop
push
arpl
adc
push
popa
arpl
pop
inc
add
pop
and
sbb
pop
xor
sub
dec
push
push
xor
adc
cmp
push
daa
inc
sbb
dec
pop
push
push
push
push
add
sbb
pop
adc
pop
sub
push
push
push
sub
pop
push
ss
cmp
inc
or
push
bound
inc
pusha
add
aaa
daa
minps
adc
pop
or
xor
pusha
push
and
or
push
and
xor
sbb
sub
sub
sbb
pop
and
add
sbb
or
adc
es
sub
or
pop
sub
ss
pop
and
ds
cmp
pop
push
bound
bound
pusha
dec
adc
aas
or
and
xor
inc
adc
pop
pop
sub
cmp
xor
add
and
push
adc
push
and
push
sbb
push
inc
sub
and
pop
sub
add
dec
adc
push
or
cmp
xor
popa
sub
sbb
sub
sbb
push
adc
dec
sbb
adc
sbb
push
add
pop
sub
pop
push
push
ds
or
pop
sub
dec
push
sub
aaa
sbb
dec
aaa
xor
sbb
push
push
inc
and
xor
pop
pop
inc
dec
xor
aaa
pop
pop
adc
mov
or
sub
xor
inc
inc
sbb
pop
popa
and
push
xor
and
sbb
and
inc
push
inc
dec
push
pop
or
inc
sub
or
sbb
pop
and
sub
dec
or
xor
inc
popa
pop
or
pop
xor
xor
adc
daa
sub
pop
dec
cmp
and
dec
xor
dec
or
pop
cmp
sbb
xor
sub
pop
add
xor
inc
adc
ss
es
pop
adc
cmp
adc
and
or
add
arpl
add
add
sub
invd
inc
inc
and
inc
and
pop
push
pop
xor
or
aas
sub
pop
dec
bound
es
inc
dec
xor
inc
sub
inc
xor
push
adc
push
sub
and
inc
sbb
sub
pusha
aaa
cs
xor
dec
dec
cmp
cmp
add
dec
pop
xor
pop
pop
push
ss
sbb
or
push
add
dec
push
mov
push
es
push
aaa
pop
push
xor
pop
inc
sbb
daa
pop
adc
push
inc
and
or
xor
dec
push
push
add
or
add
cmp
adc
dec
aaa
inc
sub
cmp
pusha
or
sub
sbb
pop
cmp
pop
push
and
aaa
push
push
cmp
pop
pop
add
or
push
dec
xor
sub
pop
sub
dec
popa
pop
xor
or
cmp
inc
dec
pop
adc
sub
adc
push
cmp
add
xor
or
cmp
inc
sbb
pop
aas
inc
pop
add
push
push
or
dec
inc
xor
sub
pop
aaa
push
add
dec
xor
pop
sub
dec
push
push
sub
xor
push
pop
adc
dec
popa
xor
adc
add
dec
adc
add
and
push
adc
cmp
adc
sbb
adc
push
inc
daa
sub
sub
add
and
and
cmp
or
xor
cmp
inc
push
push
pop
sub
sub
and
push
and
pop
dec
dec
adc
and
pop
ss
dec
xor
xor
cmp
dec
sub
sub
dec
add
sub
cs
and
adc
and
dec
adc
cmp
and
inc
adc
push
pop
or
xor
push
dec
or
push
dec
and
sbb
xor
arpl
pop
xor
pop
push
cmp
xor
pop
push
add
and
push
cmp
pop
add
arpl
add
sub
pop
sub
pop
and
bound
inc
pusha
or
popa
inc
sbb
adc
sbb
add
sbb
arpl
pop
add
aaa
xor
push
adc
dec
add
add
dec
sub
dec
push
inc
adc
adc
minps
arpl
or
inc
or
adc
ds
pusha
push
pop
bound
push
sub
aaa
dec
ds
es
pop
push
inc
or
or
add
sbb
sbb
pop
dec
inc
push
cs
ud2
bndldx
push
