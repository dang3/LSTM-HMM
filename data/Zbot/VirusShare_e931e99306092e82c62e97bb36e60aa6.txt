xchg
mov
in
sub
pushl
add
push
push
push
adc
push
aas
in
pushl
call
leave
ret
daa
loopne
inc
xor
lea
push
push
mov
call
dec
hlt
push
push
call
add
dec
add
adc
sub
jmp
je
fisttps
push
push
push
push
call
fdivr
incl
lock
mov
sbb
neg
jmp
jnp
pop
in
push
push
pushl
hlt
push
add
jnp
call
mov
in
sbb
sub
push
in
sbb
xchg
insl
push
xor
idiv
jle
push
or
es
adc
neg
dec
adc
inc
adc
sub
mov
aas
mov
push
arpl
push
add
dec
dec
and
dec
outsl
xchg
ret
dec
neg
jmp
rcll
ret
add
neg
add
sbb
mov
xlat
adc
movl
sub
pop
inc
mov
push
adc
and
mov
inc
adc
fxch
ret
imul
js
jmp
pop
cld
push
mov
pop
add
push
or
ja
push
push
or
clc
xor
popf
inc
add
push
in
xor
test
clc
inc
inc
cmp
xor
aas
jecxz
pop
push
lea
fcomip
fcomi
rorb
add
jecxz
das
hlt
jmp
dec
mov
imul
push
js
push
call
jmp
add
sti
sbb
sub
add
jmp
rorl
mov
inc
mov
xchg
push
or
out
inc
fsubr
andb
fldenv
and
cwtl
call
mov
dec
mov
call
cmpsb
and
dec
xchg
vprotb
push
je
add
clc
xlat
sti
rorl
add
and
fs
jbe
fwait
sub
inc
gs
adc
push
push
xor
inc
call
mov
lods
adc
dec
push
dec
mov
xor
jns
call
dec
xchg
jnp
testb
push
and
mov
fldl
add
test
mov
fwait
sbb
jbe
jb
insb
shr
push
insl
ret
sti
jns
je
jmp
call
xor
das
xor
fs
sbb
and
out
cmc
lds
push
dec
arpl
fildl
subl
es
dec
push
push
push
inc
inc
dec
jo
pop
pavgw
cmp
shlb
mov
push
clc
ja
add
ret
pop
call
clc
loope
int
pop
je
push
in
call
jge
mov
outsb
push
push
pop
ja
dec
insl
dec
push
inc
addr16
or
push
pusha
rolb
int3
test
in
call
sbb
inc
sub
mov
fdivrs
jl
lock
push
les
jo
stc
rcl
mov
jbe
pop
jb
scas
ror
bound
bound
mov
pop
decb
push
ja
lods
scas
insb
insl
repz
xor
loop
inc
xor
pop
fidivl
dec
add
xor
push
pop
dec
push
arpl
mov
jne
or
jge
aaa
and
xchg
aas
ret
cld
mov
call
or
aaa
addr16
dec
sub
push
fcmovu
xor
bound
cmp
push
aas
inc
push
sub
push
mov
incb
push
pushl
js
fidivs
adc
add
sub
push
sbb
inc
push
outsb
adc
and
sub
fists
fsubrs
cli
adc
add
jle
jge
sub
and
add
dec
jmp
and
les
push
xchg
bound
rorl
dec
push
insb
push
and
jo
push
and
mov
cmp
mov
call
or
or
dec
xor
jb
cmp
xor
ss
sbb
and
je
push
xchg
sub
xchg
negl
dec
push
jno
pusha
call
loope
xor
iret
cmp
xlat
mov
add
cs
jmp
sub
xchg
enter
push
cmpsb
xchg
and
stos
xchg
xchg
inc
cmp
test
mov
dec
inc
pop
or
cli
jecxz
xlat
push
lds
mov
call
add
sbb
jb
inc
imull
shl
outsl
or
repnz
push
sbb
push
dec
adc
pop
inc
sbb
and
dec
pushl
sbb
ret
not
inc
pop
test
test
push
jae
jo
lahf
into
negl
scas
dec
out
aam
inc
outsb
or
imul
dec
mov
mov
and
sti
mov
add
in
aad
cmp
hlt
jle
pop
xor
sub
dec
mov
fadds
push
xor
jle
mov
ja
ss
imul
add
std
or
add
jo
or
ret
jg
dec
push
xor
xchg
push
jb
mov
xchg
inc
call
sbb
clc
ja
pop
adc
stc
sbb
add
inc
adc
dec
dec
mov
mov
imul
dec
inc
dec
in
ret
inc
push
dec
test
xor
cld
xor
xor
push
call
sbb
xchg
and
outsb
adc
fidivrs
jmp
or
add
hlt
mov
sbb
imul
or
dec
mov
shll
or
lods
xchg
stos
mov
out
sub
cmp
cmp
push
sub
inc
jmp
pushf
icebp
xor
jbe
cmp
shll
xchg
dec
adc
ss
push
clc
add
push
sbb
loope
mov
fisttpl
rcrb
sti
sub
inc
jnp
mov
faddl
pop
jne
fs
push
das
jno
xor
outsl
out
movsl
inc
adc
xor
jl
enter
pop
addl
lea
lock
or
push
addr16
aas
pop
jo
inc
add
sbb
push
jbe,pn
mov
cmp
hlt
arpl
mov
cmp
rorl
in
push
hlt
mov
cmp
and
jne
xchg
call
mov
cld
dec
sub
jmp
in
int3
sub
inc
imul
cld
add
adc
aam
mov
fcomp
adc
sarl
mov
jmp
fidivrl
jne
inc
push
jns
push
jl
mov
arpl
cmp
push
arpl
jb
jbe
stos
mov
call
sbb
inc
sarb
push
insb
sub
popa
je
sbb
mov
xor
add
sbb
mov
mov
sbb
mov
and
fs
dec
out
popa
dec
adc
enter
add
jmp
push
sbb
js
push
sbb
rcl
fadds
sub
clc
scas
sbb
cmp
push
bound
imul
clc
mov
mov
jbe
jo
les
imul
test
inc
inc
adc
es
mov
dec
push
cmp
cmp
ret
push
and
lcall
ret
inc
add
inc
jmp
mov
test
int3
adc
mul
cmp
test
adcl
jp
inc
inc
pop
xor
gs
call
xor
jg
dec
outsl
mov
xor
sub
pop
lret
add
jp
or
fisubl
push
pop
jo
dec
xor
pusha
jg
push
call
pop
and
jnp
mov
xor
and
sub
inc
imul
lea
jmp
int3
push
jmp
andl
loopne
cld
into
lock
jno
outsl
repnz
into
dec
dec
jno
leave
add
dec
fldt
cmp
mov
pop
lcall
cmp
inc
jmp
ja
push
xor
pushf
jne
fstpl
mov
xor
add
sbb
push
adc
shr
scas
dec
mov
aad
xor
push
iret
cmp
jo
les
and
push
add
jmp
inc
aam
mov
inc
dec
inc
pop
outsb
push
mov
push
call
hlt
and
ja
je
addr16
push
fmul
call
out
inc
int
cli
xchg
and
shl
add
push
pop
data16
push
mov
push
mov
mov
aaa
mov
nop
out
inc
adc
cltd
inc
push
push
test
dec
push
pop
imul
xor
mov
xchg
mov
inc
outsl
mov
push
enter
imul
fsubl
outsl
inc
jb
je
pusha
xlat
test
adc
jg
lret
iret
xor
pusha
jmp
adcl
fisubs
repz
mov
out
fildll
imul
outsb
aaa
push
mov
arpl
cmp
outsl
adcl
dec
es
sbb
xor
movsb
push
cs
push
bound
jbe
push
dec
push
push
addr16
pushf
imulb
xor
scas
inc
add
stos
add
push
ret
jmp
or
inc
add
adc
ds
lret
push
out
jb
add
push
cld
cmc
push
and
pop
sbb
js
insl
inc
push
pop
inc
or
outsl
xchg
sbb
pop
sbb
jne,pt
testl
add
xor
loopne
and
mov
repz
loopne
push
push
das
jl
ret
leave
adc
in
push
ja
outsl
push
add
pop
mov
or
xor
xor
push
and
addl
hlt
push
test
push
fiaddl
mov
push
xchg
jne
sub
sarl
push
fmuls
or
add
mov
sub
push
mov
mov
inc
fs
push
mov
adc
and
cs
and
fidivrs
inc
dec
push
mov
add
mov
mulb
aaa
js
test
sbb
adc
dec
pop
cmp
sbb
add
sub
jmp
mov
and
adc
call
roll
cmp
push
cltd
mov
dec
mov
sarl
pop
add
xlat
jmp
popa
push
sub
lock
jmp
xlat
dec
push
imul
dec
cmp
divl
outsl
pop
loop
add
dec
data16
inc
dec
aaa
inc
arpl
ds
xchg
ja
and
mov
adc
push
inc
jmp
cwtl
icebp
rcll
cmp
test
inc
out
jae
pop
call
push
ret
rcl
add
inc
add
test
lret
inc
aam
rorl
adc
adc
dec
add
test
sti
add
inc
jmp
not
and
xchg
xor
jecxz
xor
dec
scas
cmp
fwait
call
movsb
lock
incb
push
ljmp
sti
sub
adc
mov
push
das
push
sahf
inc
add
lahf
pop
sub
add
pushw
inc
adc
fcomp
adc
jmp
adc
psllw
jae
inc
push
lret
xor
je
sbb
iret
push
jbe
sub
insb
xchg
dec
aaa
push
push
outsb
mov
pop
inc
cmp
push
popa
xor
shl
xchg
leave
jbe
fsub
and
inc
xor
push
cld
cmc
gs
ret
shrb
inc
data16
js
mov
jo
dec
xchg
rcrb
lds
lock
sub
repnz
clc
mov
pop
jo
or
jmp
cld
mov
insb
pop
outsl
jo
mov
aam
jno
imul
add
mov
divl
testb
inc
pop
dec
imul
jp
and
cwtl
insl
arpl
jg
sarb
xor
stos
stc
lret
mov
push
outsb
sub
cld
dec
fidivrs
clc
xor
jmp
cmpsl
mov
ljmp
mov
dec
xor
pop
js
dec
inc
xchg
mov
je
push
add
push
lock
sbb
jno
push
outsb
into
std
inc
ss
dec
or
and
ds
xchg
push
popa
test
or
fildl
inc
insb
push
insl
out
jg
mov
hlt
push
add
imul
outsb
or
and
loopne
sti
mov
sbb
xchg
adc
push
insb
sbb
mov
rclb
or
mov
jbe
fiadds
push
push
or
add
or
push
dec
push
push
push
ret
adc
add
insl
stc
iret
jle
jnp
or
push
push
sbbl
cli
inc
add
mov
mull
cmp
mov
push
jbe
push
cwtl
jle,pt
jg
fisttpll
push
push
lret
mov
mov
iret
sbb
pop
push
sbb
aaa
inc
push
or
adc
or
push
std
jg
das
fbld
push
add
aad
popf
int
cmpsl
add
icebp
xchg
outsl
aaa
mov
mov
dec
cmpsl
sbb
jo
adc
fnsave
dec
push
ret
sbb
push
ljmp
nop
and
cmc
push
and
mov
push
in
push
inc
and
dec
push
jno
ret
add
scas
cld
out
dec
adc
push
push
je
int
popf
jp
push
jne
outsl
push
das
mov
lcall
push
pop
sahf
adc
insl
fildll
jne
aam
rorb
insb
inc
pop
das
imul
rcll
push
outsl
or
in
pop
jg
ret
sahf
insl
js
sub
mov
push
popa
aas
enter
daa
mov
xorl
fsubl
mov
lods
loopne
in
mov
push
sbbb
icebp
push
cltd
jo
in
xchg
imulb
jge
dec
jae
loope
xchg
mov
cld
jbe
movsl
or
add
sbb
pop
mov
or
push
adc
push
xchg
rorb
mov
loope
mull
or
mov
fbld
adcl
cmp
jl
cmp
dec
mov
repnz
sbb
lret
nop
out
jl
push
add
adc
in
inc
inc
gs
popa
push
sbb
push
push
iret
pop
test
pop
jg
js
pusha
js
xor
bound
insl
push
mul
mov
imul
call
push
fwait
pushf
adc
mov
add
push
in
jge
xor
scas
pop
fucom
jae
mov
cmp
xchg
jmp
mov
stos
pop
test
jb
jmp
decl
lahf
or
push
mov
lds
cwtl
fcompl
imul
pop
das
jl
imul
add
xor
loope
fbstp
xchg
adc
cmpsl
rolb
lcall
in
ret
test
insl
out
mov
and
arpl
int
in
add
out
out
div
mov
mov
jp
mov
clc
inc
pop
pop
add
and
ss
mov
pop
inc
pop
mov
jle
sub
xchg
and
movsl
and
push
jg
cs
jmp
cmp
dec
pusha
adc
add
and
or
sub
push
push
cmp
daa
add
fmull
outsl
pop
cmpsl
xor
call
test
push
push
xchg
test
sub
addr16
push
mov
xor
jge
call
leave
aas
sub
shlb
xor
sti
fildl
dec
xchg
xor
in
sbb
and
fcmovnu
push
arpl
add
mov
xchg
ss
rcrb
xor
sbb
pusha
popa
sub
xor
mov
jle
data16
add
sbb
pop
and
adc
and
mov
and
js
aas
push
push
fcmovne
insl
mov
daa
jmp
push
rclb
mov
ret
pop
test
adc
push
call
xchg
pop
push
inc
ret
push
addr16
movsl
movsl
and
mov
mov
mov
fisttpll
out
push
mov
daa
cld
adc
sbb
pusha
es
sub
testl
sbb
enter
movsb
sbbb
test
andb
cmpb
pop
sbb
rclb
ret
dec
push
add
mov
inc
ja
ret
xchg
push
push
adc
jge
rcll
lods
fldcw
les
mull
fwait
xchg
jg
lds
sti
lods
es
jg
jle
jmp
cld
lahf
sti
cmp
mov
fwait
out
sarb
leave
add
xchg
pop
clc
rcll
add
cmp
gs
push
fcmovb
pop
adc
pop
add
jae
loop
add
mov
addr16
dec
mov
xor
cmp
sbb
aas
loop
jle
arpl
shrl
pop
mov
pop
fistpll
xor
lret
ret
stc
pop
add
idivl
enter
or
mov
mov
jb
aas
jecxz,pt
call
add
push
fbstp
add
jb
fisttpll
xchg
in
inc
cmc
inc
dec
stc
dec
sub
mov
mov
mov
mov
mov
pop
jecxz
sbb
inc
add
cmp
repz
adc
and
dec
pop
add
ja
lcall
adc
shll
shl
pop
pop
mov
lods
fiaddl
sbb
pusha
fisttpl
fldcw
jns
cmp
clc
movsb
lock
dec
sarl
push
sub
in
xchg
in
shlb
fnstenv
shlb
and
in
push
movsl
and
jp
and
dec
xor
out
les
mov
outsl
fisttpl
push
ds
jle
cmp
xchg
in
int
into
push
and
push
fs
call
test
inc
or
sub
jmp
dec
push
cs
push
push
push
add
dec
test
jns
mov
fisttpl
es
push
stos
dec
inc
jae
jmp
lds
mov
mov
push
bound
push
mov
sbb
pop
pop
cs
mov
clc
test
sub
leave
sarb
fucom
mov
mov
sbb
outsl
push
jb
adc
xchg
jbe
mov
aaa
and
mov
sub
adc
iret
jns
mov
adc
scas
dec
loopne
mov
inc
cwtl
push
rcl
ret
rorb
call
sahf
fistl
fstpl
mov
decl
inc
fsubrs
mov
jl
pop
aam
orb
fcompl
into
mov
xchg
cmp
ss
add
dec
enter
movsb
and
pushl
iret
sbb
lret
test
scas
mov
adc
dec
mov
mov
jl
mov
jns
ret
repnz
add
mov
aaa
pop
push
test
pop
cld
or
jmp
out
pop
js
cs
and
push
and
push
stos
mov
loopne
cli
lea
sbb
orb
or
lock
int
pop
loopne
cmp
or
out
xchg
cmp
movsb
sbb
or
shlb
or
cmp
incb
push
sbb
test
inc
clc
mov
icebp
pushf
push
add
cli
lods
dec
pop
mov
repnz
repnz
in
adc
pushf
movd
inc
add
ja
cld
xchg
fldcw
ljmp
sbb
jp
je
lret
xlat
insb
push
aad
pop
or
mov
sbb
jae
inc
pusha
lods
jg
outsb
cwtl
bound
fiaddl
xor
and
push
dec
and
lock
mov
fisubs
mov
pop
mov
xchg
inc
inc
repz
cmpsl
cmp
test
mov
mov
inc
add
loope
je
test
nop
lock
mov
pop
inc
pusha
pop
clc
jge
mov
fisttpl
adc
fcmovnbe
pop
push
sbb
adc
orl
pop
cmp
arpl
movsl
pop
sbb
lcall
pop
inc
adc
out
scas
scas
pop
div
lcall
cmpsb
pop
dec
test
add
mov
in
aad
lods
and
lods
jg
or
shr
sbb
fidivrs
out
fcompl
sub
adc
call
mov
incb
xorb
inc
fs
pop
pop
mov
lret
test
dec
cmp
and
jbe
ljmp
jno
push
push
or
push
xor
cmc
jmp
pop
or
out
daa
aam
mov
in
imul
fstps
push
jle
inc
fbstp
jge
xor
lahf
clc
add
adc
pop
xor
test
jecxz
pop
imul
in
mov
inc
loope
outsl
fs
shl
test
xor
or
les
mul
inc
push
mov
jecxz
roll
sub
fsubl
xor
and
bound
push
nop
xchg
xchg
xchg
mov
cmc
out
mov
jge
pushf
mov
pop
out
imul
mov
adc
inc
lcall
inc
add
mov
arpl
lcall
cmc
fwait
shlb
shlb
mov
loope
mov
pop
xor
icebp
fucomip
jb
leave
fmuls
adcb
push
js
decl
jg
inc
fisubl
mov
sbb
popa
push
sbb
outsb
mov
aaa
xor
xchg
push
popa
in
lahf
stc
lcall
bound
xlat
jae
flds
add
ret
dec
and
push
and
sahf
fists
arpl
div
sbb
xchg
rol
xor
xchg
push
leave
dec
or
es
xchg
mov
popf
ljmp
sub
inc
idivl
or
lret
fisttps
add
loopne
lds
shlb
subb
scas
sub
scas
ds
data16
cld
adc
daa
push
pusha
and
jp
xchg
out
cltd
aam
cwtl
lea
ljmp
inc
or
or
dec
sbb
insl
nop
mov
pop
hlt
pop
bound
das
or
and
stos
add
fistpll
inc
pop
int3
push
test
mov
enter
push
je
std
xchg
out
or
ret
lret
fcomps
loopne
cli
arpl
mov
insl
add
and
scas
divl
add
lods
lock
pop
cmp
push
add
sub
mov
cmpsl
sbb
fistpl
dec
mov
negb
jl
and
leave
pushf
xor
rorb
sbb
adc
and
repz
mov
adc
out
lcall
test
mov
loopne
mov
call
mov
test
jno
imul
pop
pushf
jb
mov
push
mov
pop
leave
jnp
inc
loopne
cmc
mov
sub
nop
jge
cwtl
loope
sub
movb
jl
cmp
pop
cwtl
push
or
out
push
pop
mov
in
ret
add
sbb
mov
and
dec
xor
mov
xor
stc
js
sbb
inc
push
out
dec
notl
jg
push
mov
fwait
roll
testb
sub
int3
mov
call
mov
xor
xchg
sbb
addl
in
mov
add
in
pop
xor
inc
xorl
ret
scas
cmpsb
mov
ljmp
jmp
subb
repnz
pop
daa
insb
jnp
rcl
and
inc
addr16
out
inc
ss
and
add
jp
push
cmp
mov
mov
mov
push
xchg
cmp
jno
mov
inc
pop
push
cmc
sub
jb
clc
dec
out
xchg
dec
out
mov
push
sbb
mov
shll
sbb
dec
es
add
adc
test
and
arpl
fwait
call
test
mov
pop
jl
pop
add
adc
test
mov
nop
fcmovbe
shrb
mov
mov
insl
in
xchg
xor
lock
popf
lcall
mov
aam
and
sub
mov
fadds
adc
jns
sub
cmp
jg
jge
mov
push
or
pop
lret
push
test
sub
sti
testl
jl
jbe
inc
stc
push
insb
in
mov
pop
cli
pop
cmpsb
pop
fdivl
pop
dec
pop
aam
subb
or
or
or
popa
setp
fnstsw
xchg
rcr
cmpsb
fsubrs
and
fld1
test
fcoms
inc
inc
pop
mov
dec
out
or
push
rcrl
fnstsw
xchg
pusha
je,pt
sub
mov
cmp
adcl
pop
fbld
or
int3
inc
sub
xchg
cmpsb
pop
fdivl
out
pop
jg
pop
loopne
sbb
add
push
loopne
xchg
dec
fcomp
leave
fmull
xor
add
shl
rolb
stos
in
push
clc
add
mov
es
or
imul
jmp
mov
mov
hlt
inc
or
flds
jno
jb
dec
push
inc
imul
dec
loope,pn
stos
lds
mov
mov
mov
filds
xchg
inc
loop
pusha
mov
cld
mov
xchg
mov
pushf
hlt
das
test
adc
imul
js
int3
notl
pop
stos
inc
pop
sbb
jbe
pop
stos
or
test
mov
and
mov
fst
dec
xchg
inc
sbb
cmp
mov
jne
rol
fnstcw
inc
mov
fcomi
mov
les
push
sub
cs
jnp
cmpl
inc
dec
xchg
or
sahf
mov
sar
pop
fwait
in
pop
rol
jnp
mov
or
dec
aas
cwtl
incb
lcall
pusha
jmp
cmp
xchg
fsubs
orl
leave
mov
sbb
xchg
pushf
pop
add
xlat
xchg
fwait
lea
out
pop
rorl
add
movsl
mov
mov
or
test
rorb
cmpl
test
insl
adc
inc
mov
dec
mov
xor
jmp
mov
sbb
mov
lods
nop
pmulhw
jne
mov
dec
mov
scas
jo
mov
xchg
addb
dec
cwtl
pusha
inc
xor
inc
inc
and
popa
repnz
push
ret
xor
pop
xor
jne
add
mov
or
cld
ds
cwtl
mov
mov
ret
aas
and
jl
push
cmpsl
les
mov
aad
in
adc
lcall
data16
fnstsw
aaa
xor
cmp
loop
sbb
inc
sbb
ss
sub
mov
mov
xlat
scas
pusha
fidivrs
and
mov
and
mov
cmp
push
test
mov
dec
ret
enter
dec
xchg
jp
mov
add
jno
mov
ss
arpl
sub
out
pop
mov
fcoml
push
iret
xor
add
cmp
dec
leave
mov
into
and
jnp
dec
ror
or
fsubr
pop
or
push
bound
subb
jne
repz
cmp
or
pop
in
add
sub
mov
xor
repnz
fildl
es
icebp
jo
jp
or
arpl
mov
aaa
andl
in
scas
mov
add
stc
lock
cld
cmp
adc
sub
pop
test
lds
jmp
imul
loopne
out
mov
addr16
mov
in
mov
add
sti
sbb
ss
jecxz
imul
call
and
aam
mov
dec
cmp
hlt
and
movsb
es
aad
or
cmpsb
ljmp
repz
fiaddl
push
or
mov
adc
cmp
das
inc
jge
hlt
cmp
insb
or
test
repnz
dec
test
addr16
sbb
jo
pop
dec
jle
loope
daa
fadds
mov
or
jbe
sub
pop
lahf
inc
xor
adc
test
cmp
mov
nop
sub
push
xor
mov
mov
jp
or
add
xor
das
paddb
mov
insl
mov
xchg
xorl
movsb
push
mov
push
inc
cmpsb
jge
test
push
push
mov
rcrl
incl
bound
je
mov
push
mov
int
and
addl
ret
int
sbb
cmp
mov
cs
and
xchg
xor
pusha
ror
add
mov
jno
dec
loope
icebp
frstor
mov
mov
sbb
dec
mov
es
push
mov
cld
loopne
mov
inc
movsb
adc
mov
pop
outsl
xor
lock
sub
xor
fs
add
push
inc
outsb
cltd
leave
push
push
insb
mov
mov
out
je
and
test
inc
and
lock
lret
inc
es
testl
mov
fwait
or
loop
mov
stos
push
loope
subl
cli
pop
mov
test
cmp
pop
xchg
jae
fildl
mov
xchg
leave
in
sti
int3
jae
and
inc
pop
addr16
sar
pop
iret
sub
mov
cmp
mov
sbb
fwait
aad
flds
js
pop
lods
loopne
fldt
cmp
loopne
and
stos
xor
stc
push
cs
call
int3
and
jne
dec
stos
imul
hlt
pusha
ficoml
ljmp
or
xor
and
ret
xchg
xor
lock
imul
fiadds
xchg
mov
push
inc
xor
lcall
out
icebp
jmp
pusha
insb
mov
stos
mov
dec
xor
jmp
and
testb
faddl
mov
adc
sbb
es
fiaddl
add
cmpb
lret
rcrb
aaa
sbb
cmp
insb
bound
sti
xor
jg
paddsw
cmp
hlt
lahf
xchg
rcl
sbb
mov
xchg
outsl
mov
js
xchg
xor
cwtl
clc
pop
jle
jl
jmp
adc
sbb
std
divps
pusha
scas
push
cwtl
repz
arpl
adc
pop
js
aaa
sbbb
repz
add
xor
xor
pop
js
mov
adc
adc
cmp
jmp
dec
dec
fwait
mov
jae
mov
icebp
pshufw
shl
pop
outsl
cs
ja
or
cs
jge
or
inc
test
call
lahf
fstpl
ss
or
aad
adc
js
cmp
mov
sub
pop
arpl
jb
loop
sbb
shlb
jmp
cmpsl
cmp
mov
movsl
xchg
jno
sub
aas
or
cwtl
sbbl
add
and
mov
cmp
and
sbb
mov
sbb
cmpl
sbb
shrb
xchg
enter
add
fidivrs
fdivs
mov
inc
jne
cli
aaa
sbb
sub
push
adc
adc
push
mov
fcompl
in
cmp
sbb
lods
cmp
lds
pop
jp
ficomps
test
lcall
enter
jg
cli
daa
add
shlb
ud1
dec
enter
inc
sub
mov
movsb
mov
mov
shrl
lock
sbb
aaa
dec
cmp
scas
xor
sahf
or
cmp
push
pop
out
jge
mov
aad
insb
dec
aaa
lret
cmp
ja
push
xchg
clc
mov
in
mov
xchg
cld
pop
mov
jo,pn
sbb
mov
xorb
pop
loopne
or
sbb
add
arpl
sbb
sub
xor
jecxz
xchg
inc
aas
insl
in
add
shll
jo
fdivl
lret
push
orl
es
movsl
mov
enter
xor
int3
arpl
dec
clc
ret
add
cld
testl
or
push
clc
mov
xchg
dec
ds
jnp
hlt
push
xchg
cmp
mov
add
push
je
andb
mov
sub
test
inc
das
pusha
dec
xor
jecxz
and
cmp
loope
push
xchg
das
out
jl
fidivs
cmp
lock
sbb
mov
xchg
mov
cltd
mov
pop
jno
push
dec
inc
dec
arpl
or
mov
aas
sahf
in
sub
or
cmp
fwait
mov
push
sti
mov
mov
xlat
pop
mov
fwait
stos
not
sbb
mov
xchg
lret
pop
jo
cmp
out
jno
test
imul
cmp
testb
outsl
pusha
mov
and
push
addb
ds
loop
adc
test
mov
inc
xor
jmp
mov
jno
sti
mov
fidivrl
add
jmp
mov
movsl
cltd
pushf
popf
cmp
and
lahf
repz
dec
mov
push
test
data16
cmp
lret
incb
lahf
ret
repnz
ss
loop
in
lcall
call
xor
sbb
and
add
bound
les
add
inc
scas
adc
mov
mov
inc
out
fs
aas
lahf
scas
ljmp
sarb
outsb
adc
jo
aaa
pop
lahf
push
push
add
fidivrs
aaa
mov
ret
inc
scas
mov
xchg
dec
sub
and
or
repz
fwait
stos
lock
cmpb
lret
add
xchg
out
nop
inc
leave
lods
mov
rcll
mov
cwtl
xor
pop
shlb
fwait
aad
ds
add
mov
push
xor
sub
gs
or
cmpsb
pop
jno
dec
stos
in
add
xchg
in
push
pop
jne
mul
in
inc
jg
mov
cmpsl
mov
lea
add
pop
fmuls
mov
rorl
insl
jmp
mov
jne
aaa
and
jo
add
test
test
aas
loop
jle
les
sub
je
int
or
mov
xor
lea
xchg
rcrb
ficoml
inc
loope
add
mov
orb
sti
fisttpl
or
mov
xor
loopne
cmp
in
movsb
and
aad
push
sbb
fdivrs
adc
ret
xor
mov
mov
cmp
or
xchg
shr
mov
div
mov
xchg
outsb
sbb
add
test
fisttpl
lcall
add
js
jp
and
loope
jge
aas
movswl
adc
pop
push
pop
leave
test
dec
jne
repnz
icebp
push
adc
cli
insb
jno
dec
dec
xchg
add
call
mov
mov
daa
or
jbe
dec
dec
mov
pusha
jae
cld
ja
fidivs
js
fisttpl
pusha
enter
cwtl
imul
sub
or
pop
adcb
xchg
les
je
sahf
in
inc
nop
sbb
insl
inc
imul
xchg
in
leave
sub
push
inc
inc
or
enter
mov
mov
cmp
xchg
out
push
fwait
shl
cltd
adc
mov
sti
adc
je
or
adc
jg
cmp
jg
fdivs
sbb
out
iret
ss
jl
mov
repz
push
sbb
cmp
push
popf
fbld
mov
jl
cmp
cld
cmc
movsb
add
mov
xor
sub
mov
loopne
xchg
mov
data16
xorb
cmp
push
mov
push
gs
addr16
jecxz
loop
bound
xchg
inc
pop
cmp
mov
lea
adc
jl
mov
mov
add
inc
cmpsb
sbb
lret
add
mov
dec
out
inc
fisttpl
cmp
test
sub
fs
testl
rclb
pop
mov
int3
and
mov
xchg
sbb
sbbl
xor
cmc
jno
jae
sbb
mov
les
or
inc
gs
ret
and
ds
ds
ja
push
sub
adcb
lea
fdivs
ficompl
sti
jbe
push
sahf
push
mov
sub
test
xchg
into
mov
mov
sbb
in
test
or
cmp
cmp
fwait
push
ja
lretw
js
fistps
pop
adc
std
inc
jl
xor
ficoms
mov
scas
out
loope
pop
sbb
add
daa
insb
and
shrb
or
push
push
sub
ja
push
dec
pop
jl
jbe,pn
sar
lods
add
xor
stc
mov
cmp
repz
xchg
aas
popa
shr
push
movsl
xchg
daa
add
dec
out
push
sahf
imul
fcmovnb
sub
push
jle
mov
in
pop
fsts
mov
jno
jge
inc
and
xchg
push
clc
and
adc
xchg
in
cmp
mov
xor
test
cmpsl
and
jg
adc
dec
stos
xchg
jo
mov
sbb
sbb
mov
xchg
popf
syscall
adc
inc
sub
xor
test
fdiv
daa
clc
pusha
shr
stos
add
cmc
sbb
xchg
sub
ret
sub
jb
jb
inc
pusha
pop
mov
mov
inc
les
fs
je,pn
xor
pop
imul
adc
sub
insb
mov
push
mov
pop
addb
xor
mov
mov
sbb
mov
sbb
cld
mov
push
or
in
cs
loope
sbb
sbb
in
sub
cwtl
test
lods
ret
xor
mov
dec
add
enter
and
add
pop
stos
push
loop
jb
arpl
push
ja
pop
xchg
call
inc
mov
daa
shlb
and
push
and
fucomip
lret
sbb
daa
mov
repnz
and
xchg
sub
je
pop
xchg
mov
adc
pop
in
ds
sbb
insb
adc
imul
lret
dec
fstps
in
mov
jae
sbb
dec
sti
cli
sbb
mov
pop
cmp
xchg
sbb
xchg
divb
xchg
mov
and
outsl
xor
lret
cmp
cmp
mov
je
dec
in
jnp
and
mov
cmp
ret
int
sbb
jns
jbe
mov
mov
pop
mov
jl
lret
jg
rclb
pop
push
paddq
roll
inc
sub
adc
inc
jmp
in
sbbb
js
push
gs
mov
dec
push
call
dec
pop
push
gs
insl
xlat
call
xchg
daa
jno
jg
inc
mov
push
and
sub
outsb
stos
and
iret
les
ds
shll
aad
mov
loop
pop
gs
repz
or
push
jp
sub
out
lock
inc
imul
dec
push
andb
pop
sti
lahf
into
xlat
push
inc
adc
jmp
movl
mov
outsb
push
paddq
popf
jg
faddl
cmp
scas
loop
mov
int3
dec
lods
jnp
sub
push
pop
test
dec
bound
inc
inc
insl
sbb
add
fdivrp
int3
dec
push
or
das
push
pop
inc
add
and
decl
inc
inc
inc
xor
stc
dec
lock
push
aam
stc
ljmp
jo
outsb
int
js
mov
mov
sbb
cs
xchg
pop
push
call
movb
negl
sub
decl
jmp
push
dec
jmp
mov
mov
je
xor
gs
mov
or
jbe
fstps
pop
mov
adc
push
dec
cmpsl
push
test
adc
inc
inc
js
paddq
add
imull
es
and
scas
adc
jle
add
xor
jmp
push
adc
not
aam
and
mov
mov
lds
inc
das
fbstp
add
sub
rcrl
sub
cmp
neg
cltd
clc
fdivl
jmp
test
sbb
scas
inc
lock
test
rcrb
mov
push
int
incb
js
jno
add
test
ljmp
enter
rcrb
ds
or
jmp
inc
mov
or
push
cmp
imul
hlt
inc
nop
stos
inc
ret
add
xor
dec
adc
add
dec
jmp
cmp
inc
xchg
mov
push
inc
imul
loopne
popa
pop
push
push
inc
xor
insb
push
or
cmp
sbb
sub
ror
cs
pop
xor
adc
rclb
inc
bound
xor
sti
shufps
mov
pop
arpl
pop
int
sarl
sbb
jns
pusha
or
fidivs
xchg
pop
in
mov
or
iret
popf
int
dec
loopne
xor
lea
mov
adc
fdivrs
inc
hlt
mov
or
lea
daa
aaa
lret
insl
xchg
shlb
xor
xor
bound
push
dec
cmp
ljmp
outsb
lret
inc
push
mov
fnstsw
fcomip
mov
out
cmp
sub
ret
into
in
push
je
fcomp
push
cwtl
insl
pop
push
leave
loope
add
cmp
fidivl
add
pop
testb
jge
pop
movsl
test
aaa
mov
bound
enter
iret
inc
adc
test
xchg
xchg
pushf
jnp
or
adc
sub
outsl
insl
addr16
es
call
jp
xchg
mov
dec
mov
inc
mov
lahf
dec
push
dec
mov
ds
mov
jg
dec
inc
push
dec
add
push
sub
loopne
inc
inc
add
mov
repnz
or
mov
out
loopne
std
adc
outsb
sbb
cmp
lock
dec
inc
dec
mov
mov
loopne
xchg
enter
inc
hlt
xor
incb
xchg
mov
or
or
or
xorl
fs
cmp
jo
call
add
adc
repz
mov
inc
xor
xchg
or
mov
inc
pushl
add
sbb
jmp
stos
cmp
inc
inc
cmc
push
adc
mov
or
sbb
or
inc
add
or
decl
jge
sbb
inc
add
jmp
insb
arpl
mov
or
ds
add
add
repnz
xor
jne
shrl
xlat
inc
pushl
adc
dec
sbb
jne
aas
pop
psubsw
mov
sbb
inc
lcall
call
insb
call
mov
gs
ljmp
jns
insb
test
into
and
pop
push
pop
sbb
add
and
inc
popa
jne
je
adc
aam
jbe
inc
orl
mov
mov
std
dec
cmp
sti
lock
dec
inc
insb
dec
jo
subl
int
insb
cmp
sbb
and
xor
mov
mov
jns
out
lods
lret
mov
fdivl
sub
xor
xor
cmc
jl
xor
rorb
aam
xor
cmp
add
or
inc
fldenv
jae
leave
lock
nop
fs
mov
push
sti
pop
cld
dec
adc
add
add
add
jmp
dec
xchg
and
jb
mov
shll
dec
add
fs
sub
mov
xor
or
loopne
mov
push
sbb
cwtl
xor
fwait
sbb
mov
add
lock
push
cs
or
push
lcall
mov
inc
dec
add
push
pushl
jecxz
adc
inc
inc
cmovno
fisttpl
test
outsl
add
pop
pop
gs
push
in
push
cmpsl
mov
or
dec
jns
in
add
js
inc
lds
js
mov
mov
push
js
data16
arpl
push
inc
loopne
xor
cmp
mov
fwait
mov
push
movsb
mov
imul
jle
jne
dec
jae
inc
fbstp
aaa
clc
mov
inc
dec
insl
dec
ja
and
push
mov
call
add
fwait
or
xchg
in
push
jae
das
add
xabort
dec
enter
push
push
adc
fisubs
lock
push
mov
sahf
repz
in
xor
insl
insl
add
aad
loope
fiaddl
negl
fnstenv
jo
iret
inc
xor
inc
jmp
in
in
movsl
push
sub
push
call
push
xor
push
mov
pop
in
call
orl
imul
add
inc
loop
cmp
cmp
hlt
insb
push
lock
inc
cmpsl
in
xor
fs
pop
fsubp
or
lods
push
jo
push
gs
idivl
jnp
sbb
outsl
mov
cmp
ret
clc
sbb
sub
dec
mov
adc
pop
es
fadd
sbb
cmp
dec
inc
xchg
xchg
into
and
jb
fidivrs
xchg
jge
andl
xchg
div
es
cmc
mov
test
mov
xlat
mov
insl
pusha
jnp
xchg
add
leave
jg
mov
clc
shlb
ret
outsl
mov
and
inc
xor
js
dec
jbe
inc
add
inc
nop
out
or
add
mov
mov
xor
outsb
mov
inc
js
ss
inc
cmp
cmp
psrlw
scas
push
jg
ret
cli
aas
fisubrs
in
pop
pop
sti
scas
outsl
mov
cld
dec
pushl
sub
sbb
imulb
imul
add
call
xchg
sbb
mov
jmp
cli
jmp
shr
js
push
inc
adc
mov
add
inc
outsl
xor
js
in
movsl
or
push
push
scas
inc
imul
mov
mov
insb
mov
mov
dec
xor
insl
push
jg
add
dec
and
sbb
xorb
cmp
rcrl
rolb
inc
cmp
mov
movsb
or
mov
push
outsb
outsl
xchg
xor
imul
jg
insb
outsl
ja
push
daa
jnp
pop
cmp
xor
inc
xor
push
push
jp
push
aaa
adcb
add
or
add
inc
stc
insb
and
rol
js
shlb
mov
lret
push
jns
push
dec
jne
cli
or
pop
insb
push
mov
push
call
in
mov
dec
jb
push
mov
inc
cmp
push
pop
data16
lods
das
in
arpl
inc
dec
xor
mov
mov
adc
add
push
call
or
imul
cli
push
div
fucomip
and
push
push
jg
sub
dec
inc
dec
insb
or
inc
push
adc
repz
push
lods
outsb
add
fsubrs
imul
cld
xor
cwtl
and
test
xchg
insb
jae
icebp
insl
movsb
jae
xor
jl
or
xlat
jle
jno
xor
jae
cmp
loop
pop
dec
inc
rcrl
push
movsb
sbb
shlb
add
cld
call
inc
aaa
outsl
xor
sbb
push
sub
aam
push
bound
inc
icebp
dec
out
pop
dec
jbe
addr16
mov
mov
jmp
call
fsub
dec
sbb
dec
enter
or
shrl
clc
subb
push
int3
mov
lock
in
idiv
mov
loop
mov
insb
push
dec
xor
sub
sbb
dec
pop
mov
add
pop
fxam
out
lock
inc
movsl
push
dec
movsl
jbe
push
orb
inc
fdivrs
dec
mov
pop
xorl
sysret
mov
mov
lds
inc
mov
ficomps
dec
xor
mov
stos
mov
jmp
or
and
jp
dec
add
repnz
les
push
ret
int
jl
push
popw
in
add
lods
cld
push
add
cltd
je
dec
xor
addr16
test
insl
gs
pop
clc
ret
pop
imull
dec
cwtl
adc
dec
insl
sti
xor
jo
outsb
icebp
xor
cmp
test
out
fwait
mov
xor
jbe
aaa
insl
xor
push
push
dec
lds
int
pop
inc
bound
pop
rorb
lcall
mov
scas
or
outsl
xchg
push
bnd
mov
fwait
add
js
add
cmp
sub
xchg
arpl
dec
fcompl
ret
jmp
jmp
sbb
mov
enter
ficoml
sarl
je
sub
jb
sbb
lods
jno
mov
xchg
inc
aam
dec
push
xlat
mov
mov
xor
or
mov
inc
and
notb
and
mov
lret
jl
clc
add
mov
movsb
incb
je
int
add
outsl
add
daa
mov
add
jae
jo
rcrl
inc
stos
mov
inc
xchg
clc
idivb
clc
mov
ficomps
shr
pop
adc
dec
jmp
and
cmp
jb
pop
dec
pushl
add
sub
sub
pop
stos
loope
dec
jno
xor
pop
adc
ds
repz
jmp
sbb
add
add
adcb
je
das
mov
enter
gs
out
addr16
repnz
data16
cmpsb
and
sbb
push
or
insl
xchg
xchg
cmp
imul
adc
push
sub
jno
sbb
push
pop
sarl
cmpsb
out
mov
fldenv
jo
mov
fisubl
decl
in
jnp
jae
popa
sub
outsl
ss
xlat
cmc
push
jne
pop
scas
jns
sbb
cmp
out
call
sbb
das
fneni(8087
add
test
and
jecxz
cmp
push
cld
sbb
decl
mov
loopne
cmc
pop
enter
mov
push
sbb
into
out
loope
stc
loopne
in
decl
push
imul
cmpb
sti
ret
or
test
mov
aas
xor
dec
mov
xor
or
mov
insl
mov
dec
jo
out
das
negl
idiv
mov
pusha
test
xchg
mov
add
fistpl
push
lret
pop
mov
rolb
into
sbb
imul
lods
mov
cmpsb
push
lret
push
and
lret
xchg
jl
push
outsb
addl
sub
mov
fimuls
ljmp
push
seto
add
dec
jb
inc
das
mov
adc
sub
pop
loopne
test
test
or
and
push
or
sub
call
xchg
cmc
stc
sbb
inc
mov
mov
dec
inc
aas
inc
lcall
dec
push
mov
xor
pop
negb
cmp
scas
and
test
sub
xor
dec
push
mov
adc
repz
iret
ljmp
data16
sahf
mov
popf
daa
mov
das
fs
cmp
pop
cs
cmp
inc
adc
cmc
sub
lcall
movsb
mov
popa
and
lret
inc
xor
in
pop
pop
cmp
mov
cmp
fdivr
mov
dec
xor
push
int3
push
mov
sub
mov
in
sar
pushl
or
jnp
xor
dec
fwait
pop
sbb
ret
cwtl
mov
leave
call
imul
gs
add
or
pop
addr16
loop
jne
xchg
inc
mov
fs
loop
faddl
int3
arpl
dec
mov
into
fcmove
pop
popf
leave
pop
sbb
pusha
and
jmp
xchg
lods
iret
xchg
fldenv
push
mov
ss
testl
and
inc
sbb
dec
repz
mov
xchg
outsl
ret
cmp
cmp
sti
mov
inc
das
call
mov
mov
mov
lods
sbb
dec
xchg
jge
scas
out
lret
mov
add
jnp
sub
pushl
test
cld
or
les
mov
jmp
mov
incw
jb
xor
cld
fdivr
adc
and
add
jns
decl
mov
cmpsl
daa
xor
lods
push
call
mov
xchg
inc
sbb
mov
fdivs
outsl
inc
mov
pop
sub
frstor
out
jb
and
adc
decl
and
loope
js
imul
out
mov
rcrb
adc
push
mov
loope
mov
scas
decl
or
sub
push
push
in
aam
add
lcall
andps
push
sub
fistl
arpl
mov
call
lods
add
lea
inc
xlat
pop
call
pop
outsb
push
js
daa
ss
leave
rorl
incl
cs
push
in
xchg
subl
jecxz
adc
mov
dec
and
decl
jmp
inc
mov
pusha
jo
jnp
or
sbb
sahf
jno
repz
imul
sbb
pop
mov
mov
ljmp
sub
or
jb
xchg
inc
movsl
inc
into
cmc
jnp
insb
sub
std
out
jmp
inc
dec
cmp
int3
jge
cmp
decl
out
out
pushl
aaa
inc
imul
adc
cmp
ljmp
and
fdivr
add
jge
jle
imul
or
jmp
loope
popa
mov
mov
cmpl
push
sub
pop
xchg
adc
repz
lcall
sub
out
popf
xchg
dec
popa
sub
shll
fisubrl
pop
xor
ljmp
sub
xlat
xchg
mov
sub
pop
sub
imul
mov
outsl
xor
decl
jne
mov
sti
mov
inc
sub
shl
jge
movsl
loope
dec
cmp
dec
dec
hlt
add
fwait
lret
cmpsl
push
arpl
out
adc
pushl
test
loopne
jae
jle
mov
pop
call
xor
int3
adc
ljmp
pushl
mov
mov
xor
mov
jmp
sub
adc
in
daa
push
xor
fldpi
or
mov
push
xor
dec
test
xchg
jp
decl
loop
divb
ja
xchg
lods
xchg
lahf
lahf
cs
outsl
mov
mov
ja
cli
repz
dec
pop
sarl
sar
dec
in
mull
je
pop
dec
mov
ljmp
push
dec
insb
mov
aas
xor
call
lahf
or
cltd
clc
adc
andb
or
push
and
aam
mov
rorb
gs
std
mov
lods
adc
gs
lds
xchg
cmp
into
das
stc
scas
int
mov
aaa
jg
xor
push
push
aaa
int3
mov
cmp
cli
cmc
adc
rclb
mov
outsl
xchg
pop
shr
fdivrl
push
lods
lcall
fisubs
inc
or
lods
fwait
inc
arpl
stos
inc
cli
hlt
xor
jo
lods
aam
pop
sub
addb
mov
pop
push
jge
aad
pusha
mov
add
enter
dec
lahf
loope
test
mov
out
inc
incl
mov
decl
fs
dec
push
js
test
lahf
and
push
dec
inc
jge
decl
stos
push
jns
cld
push
add
shl
shl
xchg
arpl
sub
call
xlat
loop
sbb
insl
cmp
jle
pop
jle
sbb
push
xchg
inc
push
or
sar
push
std
inc
jp
rclb
push
out
jecxz
mov
push
jae
xlat
test
jbe
out
decl
dec
pop
push
icebp
mov
and
pushf
mov
test
clc
adc
push
push
test
push
fldcw
ret
mov
pushf
xchg
and
popf
mov
and
dec
icebp
jbe
lcall
fldcw
mov
sbb
lds
mov
pop
ljmp
notb
and
or
incl
push
mov
out
aas
mov
aas
pushf
mov
adc
sub
movsl
jmp
shr
ljmp
sub
scas
pop
filds
and
mov
jg
jle
mov
add
pop
aas
mov
sub
sbb
cmp
inc
mov
push
fs
lock
out
cmp
adc
mov
loop
fwait
sar
xchg
aas
jg
sar
mov
iret
icebp
loope
nop
mov
in
fstpt
xchg
outsl
inc
jno
jb
mov
inc
pop
mov
jmp
mov
addr16
adc
fimull
push
jns
add
sahf
addr16
mov
xchg
in
jb
sahf
xorb
lcall
cmp
scas
xchg
rcr
mov
lcall
adc
daa
rcrb
jmp
js
mov
xchg
sub
fs
mov
jg
xchg
mov
sar
pushl
clc
xchg
test
adc
push
xchg
xchg
and
aam
or
adc
mov
movsl
jl
cmpsl
dec
aas
inc
pop
ficomps
lcall
mov
xchg
sbb
mov
into
xor
mov
shll
incb
jae
out
sub
out
dec
cld
fsubr
and
dec
stos
mov
call
mov
mov
scas
pop
stos
push
inc
sbb
dec
mov
jbe
cmpsb
inc
pop
jb
jg
call
add
add
xchg
out
xchg
std
cld
jg
decl
cmp
cmp
ds
push
gs
sbb
cli
decl
insl
lods
rcr
add
sub
int3
sub
push
in
pop
movsb
jmp
decl
lret
xchg
test
and
sub
mov
ljmp
lock
sub
decb
adc
repnz
mov
cmp
pop
mov
leave
jmp
sub
pop
test
mov
call
cmpl
sbb
dec
pop
inc
ja
adc
inc
push
cmp
dec
mov
push
cli
add
sbb
cltd
lret
std
adc
adc
test
cli
outsl
xchg
jo
std
in
push
push
cmp
fldcw
shrb
sbb
nop
jle
pop
pushl
mov
in
test
fidivl
sbb
lcall
jae
rol
ds
clc
fs
cmp
inc
jns
fdiv
push
stc
mov
incl
icebp
into
rcl
mov
sub
xchg
xchg
push
cmp
xor
dec
hlt
loope
loop
fstps
jne
insl
xor
enter
pushl
cmc
dec
dec
lock
pop
pop
hlt
aam
scas
mov
cmc
das
cmpsb
test
jno
imul
xlat
out
jle
pop
cld
fistpll
aas
imul
jo
mov
cmpsl
movsl
mov
ljmp
test
pinsrw
push
mov
enter
mov
adc
cmp
decl
addb
push
cmpl
aam
xlat
dec
loop
leave
ljmp
bound
outsl
jg
loope
mov
imul
or
in
data16
mov
jg
outsl
cld
fs
cmp
sub
popa
loop
jp
stc
decl
dec
insb
add
mov
fcoms
cmp
insb
ret
lcall
lock
push
fs
out
in
leave
aaa
jnp
mov
stos
arpl
loopne
ljmp
hlt
decl
les
cmpb
jecxz
test
push
lods
or
aaa
sbb
out
frstor
pop
jnp
out
icebp
cmpsl
cmp
in
setl
lcall
sbb
dec
pop
fcmovnb
out
add
mov
inc
pop
pop
jl
mov
mov
push
incl
fsubl
pop
dec
out
sbb
fwait
nop
icebp
push
cmp
scas
xchg
cltd
mov
cld
decl
xchg
xlat
xor
lea
cmp
ljmp
jmp
mov
sbb
pop
xor
imul
test
pop
int3
adc
std
mov
mov
hlt
xchg
ficoml
mov
inc
push
pop
jbe
or
aaa
jg
push
inc
iret
lock
push
dec
push
pusha
dec
or
mov
dec
decl
std
or
cmpsb
sub
aad
add
jle
mov
push
jo
mov
cld
pop
mov
jmp
lcall
scas
push
mov
pop
sbb
js
adc
jge
push
das
icebp
incl
shlb
mov
sti
in
xor
cmpsb
leave
shlb
cmp
mov
popf
sub
aaa
pop
flds
jp
jb
lock
push
mov
inc
xchg
xor
xor
jl
les
xchg
in
push
push
mov
push
aam
decl
jbe
call
hlt
shll
sub
clc
mov
push
jge
sub
iret
lcall
outsl
mov
in
jmp
call
sub
loop
push
iret
pop
and
inc
xor
pop
mov
nop
outsb
push
mov
fcoml
pop
clc
xchg
mov
fadds
dec
cmpsb
jl
movsl
sarb
fcmovu
aad
mov
and
decl
std
add
push
fadds
cmp
pop
adc
sub
outsb
std
notb
test
mov
insl
test
shlb
push
pop
outsb
mov
hlt
jge
lret
inc
outsl
push
loop
sub
fisubl
or
cld
jmp
ja
dec
pop
pop
je
push
bound
sarl
push
dec
jae
jge
mov
ss
push
mov
lds
lahf
mov
pushf
sbb
fucomp
adc
addr16
mov
push
insb
jg
pop
pop
lock
jmp
adc
pop
xor
add
enter
xchg
dec
cmc
in
or
orl
sti
cmp
out
inc
mov
insb
lea
mov
addl
loop
scas
xchg
push
inc
cmpsb
fildll
jmp
mov
andl
mov
cld
fwait
pop
sti
inc
sub
xchg
jle
clc
inc
xchg
pop
je
push
mov
sub
std
aaa
mov
ret
int
clc
push
addr16
int3
leave
dec
ljmp
mov
lahf
mov
and
add
loopne
std
ljmp
cmp
inc
loope
mov
stos
int3
xlat
push
std
mov
and
inc
mov
clc
inc
push
stc
mov
mov
pop
call
push
fs
xchg
out
test
mov
cli
cmpsb
scas
mov
mov
pop
aaa
in
ret
scas
pop
stos
jle
jp
jmp
lret
sub
sarl
adc
add
mov
pop
pop
xor
mov
dec
xorb
push
mov
jecxz
call
lock
xchg
sbb
call
mov
cmp
aam
mov
fs
into
inc
sbb
stc
jne
jg
call
mov
xor
xlat
inc
incb
clc
or
inc
insl
scas
sti
dec
inc
aad
push
adc
enter
ss
sbb
scas
jno
and
clc
or
int
ljmp
push
clc
inc
out
mov
sbb
xor
scas
ljmp
jmp
fiadds
or
xchg
xchg
fwait
push
lcall
imul
pop
call
mov
repz
mov
jl
jecxz
xchg
cs
rdtsc
pop
adc
or
add
mov
adc
test
xchg
mov
jg
pushl
sbb
mov
mov
sbb
lahf
inc
fistpl
inc
fnstsw
ss
lods
or
xor
out
popa
lcall
cmpsl
xchg
push
push
call
lea
cld
xchg
or
push
cmpsl
iret
hlt
pop
mov
jo
fwait
sub
jmp
test
loop
jge
in
xchg
mov
aas
add
push
or
daa
jp
sub
jg
in
xor
adc
insl
mov
cltd
dec
sub
mov
inc
pop
movb
inc
in
pushl
cli
mov
pop
out
or
icebp
pop
loope
jnp
xchg
fwait
in
idivb
addl
jo
pushf
push
mov
fistpll
pop
xchg
mov
mov
sbb
lods
or
and
je
rcrl
mov
ljmp
cmp
std
repz
push
inc
mov
outsb
xchg
xchg
push
sbb
lret
cmc
outsl
hlt
add
andl
adc
mov
or
sbb
das
mov
dec
dec
jnp
lret
ljmp
ljmp
lock
fnstsw
sbb
mov
test
jmp
addr16
shll
dec
push
fmuls
pushf
xchg
int3
hlt
mov
loop
push
out
add
mov
outsl
insb
aam
lcall
imul
fisttpll
cmp
or
lds
in
lret
fs
inc
push
adc
incl
mov
push
fcmove
push
scas
push
andb
add
pop
adc
or
mov
ljmp
adcl
pop
mov
iret
jmp
or
rep
gs
sarb
outsb
decb
lock
incl
adc
mov
orl
dec
pop
pushl
sub
jge
jb
sub
out
cli
scas
inc
ja
lcall
inc
mov
insb
add
adc
pop
push
xor
das
icebp
xchg
fimuls
fadds
movsl
cmp
jmp
pop
fdivrp
lcall
add
testl
cs
xor
and
sub
xchg
sbb
rcl
ficoml
mov
jp
jle
xor
push
leave
xchg
push
lret
ds
out
aad
jmp
dec
hlt
add
scas
aam
cmp
mov
fcoms
nop
adc
and
mov
pop
insl
clc
loopne
xor
addb
add
push
push
xchg
xchg
sti
shrl
icebp
call
or
je
ja
dec
loopne
cmp
outsb
test
xchg
js
add
stos
int3
hlt
mov
incl
xchg
push
pop
push
xchg
mov
fildll
clc
das
push
push
addr16
ret
lgs
aaa
mov
lock
leave
pop
movsb
in
fwait
inc
jmp
aaa
outsl
push
loop
inc
dec
shr
arpl
orl
and
dec
mov
rorb
out
aam
les
sub
or
lea
sub
cmp
mov
mov
jnp
sti
subl
das
icebp
adc
adc
jno
shlb
dec
inc
mov
jg
cmp
out
and
mov
sub
call
cli
incl
lock
or
sub
pop
push
leave
push
pop
or
decl
data16
pop
adc
mov
pusha
aam
cmp
jb
cli
jmp
or
dec
icebp
jmp
enter
inc
imul
ficomps
clc
fisttps
aaa
adc
xchg
lahf
inc
sbb
test
jecxz
cli
mov
mov
pushl
jg
ret
jge
xor
cmp
mov
jecxz
inc
sahf
fsubrs
and
lret
xchg
sub
std
notl
int3
or
js
jl
decl
loop
or
stc
cmp
push
jge
jecxz
pushl
pop
out
or
pop
dec
ret
lea
enter
pop
dec
push
fcompl
add
xchg
mov
or
mov
cld
in
gs
movsb
push
daa
das
std
lcall
adc
dec
push
sbb
in
mov
jg
out
xchg
call
pop
pop
jge
loopne
lea
xlat
jbe
loope
decl
pop
and
or
or
cmp
inc
movsb
fstpt
iret
mov
aaa
mov
outsl
ss
push
lcall
xor
pop
mov
aad
inc
imull
xchg
or
cmpsb
sar
incl
push
les
push
movsl
xchg
test
jbe
das
push
cli
sbb
dec
jmp
cmp
lods
fsubl
sub
cmp
cmpsl
xchg
mov
out
pop
int3
bound
sbb
jmp
jmp
outsl
xor
cmp
mov
movsb
and
mov
jge
lahf
mov
push
inc
xchg
imul
jbe
mov
jecxz
pop
pop
cmpl
incl
out
cltd
pop
fstl
cmp
movsl
lea
mov
inc
mov
adc
push
or
mov
outsb
cmc
adc
inc
pusha
je
ret
pop
inc
pop
lds
clc
movsl
incb
loop
ss
pop
sbb
mov
jge
dec
or
or
xchg
inc
mov
pop
xor
out
adc
popa
popa
cmpsb
roll
cltd
jbe
movsl
mov
mov
movl
jle
data16
or
pop
cmp
mov
jg
cli
lock
mov
inc
mov
xor
icebp
sbb
movsl
xchg
arpl
outsb
mov
cmp
dec
and
outsl
call
subl
inc
repnz
jg
mov
aaa
lods
popf
adc
mov
mov
pop
ljmp
lcall
sbb
push
jb
lods
imul
icebp
rclb
inc
es
incl
shrl
inc
icebp
add
fstpl
lcall
aad
xor
pushl
and
repnz
cld
xchg
pop
scas
sbb
loop
ds
add
filds
push
sbb
xlat
mov
ret
cld
dec
lods
in
adc
dec
dec
sti
lods
cmp
jmp
fildll
cld
insl
leave
xchg
mov
and
test
fsubl
adc
incl
aam
sbb
lea
lds
cmp
jg
decl
adc
js
xlat
arpl
push
jo
shl
fcos
mov
lds
dec
add
popa
and
sub
dec
xlat
or
das
js
scas
divb
sub
dec
fstp
mov
xchg
sbb
mov
int
push
mov
mov
and
cmp
mov
add
incl
mov
lea
stos
int
cmpsb
pusha
adc
add
dec
cld
dec
out
fadd
jmp
decl
test
pop
and
dec
mov
ret
adc
add
mov
lods
pop
or
xchg
jne
mov
ret
mov
cmp
mov
iret
mov
mov
adc
cwtl
adc
in
stos
sbbl
xchg
jb
jb
sti
jb
lahf
xor
stos
mov
mov
stos
pop
push
or
es
repz
scas
push
ljmp
decb
ret
pop
cs
sub
add
aam
jbe
fdiv
adc
adc
pop
hlt
push
jbe
dec
mov
mov
out
ds
call
mov
push
sbb
fwait
arpl
push
lcall
popa
inc
xor
adc
std
fsincos
test
fbld
push
push
add
rolb
cwtl
pop
jae
jmp
ss
push
data16
dec
outsl
mov
aas
mov
pop
ret
call
hlt
stos
jg
fxch
pop
popl
stos
pop
scas
repz
aad
hlt
jb
test
sbb
inc
xor
das
hlt
das
lock
mov
scas
cmp
gs
out
clc
adc
and
imul
xchg
scas
sub
in
inc
cld
mov
pop
jmp
mov
mov
mov
sub
jmp
pop
xor
cli
push
and
test
int
sbb
jg
decl
dec
jge
sbb
add
and
inc
in
inc
sub
hlt
ds
fcoms
mov
and
cld
add
clc
mov
xchg
pop
sbb
pushl
icebp
sub
mov
cmp
ljmp
dec
mov
mov
add
andb
mov
push
lcall
jmp
mov
mov
mov
inc
mov
xchg
push
dec
jne
pop
jmp
in
xchg
mov
or
lods
jae
add
inc
cmp
pop
idiv
fdivr
fmuls
add
sub
pop
cmp
clc
ljmp
inc
frstor
add
and
popf
jno
fsubr
btsl
mov
jmp
int3
movsl
jle
add
mov
in
stos
adc
cs
addr16
test
pop
clc
in
sbb
lea
xchg
adc
lods
sar
push
dec
outsl
stos
das
hlt
das
add
sbb
lret
mov
imul
andl
flds
fisttpl
lcall
cld
and
lods
add
inc
xor
xor
shrb
negl
mull
das
out
ds
scas
pop
sahf
push
push
sub
out
sbb
lahf
sar
xor
rcll
pop
push
js
mov
jg
incl
mov
cmp
in
adc
xor
fsub
incl
xchg
shll
mov
jo
xchg
mov
in
dec
loop
sahf
das
sbb
sbb
cmp
jbe
mov
push
push
aam
data16
mov
jmp
dec
cmc
lods
jge
int3
jp
rorl
mov
sbb
jge
into
divl
lods
sahf
xor
jmp
cmp
xor
push
es
inc
call
decl
pop
push
clc
sub
mov
xor
mov
add
jp
add
and
or
jge
aaa
js
push
out
clc
add
pop
mov
pushl
lcall
ljmp
mov
imull
ljmp
dec
lahf
lahf
sub
ret
cmp
ret
xor
jo
ljmp
cmc
out
into
cmp
push
or
xlat
inc
jmp
or
addb
mov
rcll
test
and
xor
pextrw
in
jo
dec
or
clc
ljmp
sbb
std
repnz
jecxz
or
mov
inc
mov
outsl
in
or
mov
movsb
push
inc
mov
xchg
mov
std
lcall
ss
daa
sbb
inc
and
mov
ja
into
out
add
jg
xchg
pop
push
or
jl
out
cmp
int3
roll
push
leave
add
jg
jle
cmc
mov
mov
mov
jl
inc
jnp
or
in
lcall
pop
shll
aaa
or
cmpsb
and
mov
addr16
sbb
adc
mov
adc
mov
hlt
mov
add
xor
jl
add
sbb
mov
aaa
pop
mov
mov
and
jno
mov
aad
call
lock
jmp
dec
fwait
push
jmp
iret
fsubrs
lret
cld
pop
mov
pop
in
cmpsl
fwait
inc
ret
rclb
popa
pop
or
leave
mov
push
mov
jae
jbe
adc
lock
ficompl
iret
aad
decl
mov
fildll
xchg
jl
daa
jecxz
fs
int
sub
ret
rcl
clc
jg
es
jo
das
jg
lods
int
std
mov
inc
pop
ret
jg
jno
ljmp
aam
sbb
daa
mov
jg
push
stc
xchg
aaa
mov
cmp
std
xchg
enter
mov
mov
sti
aad
mov
inc
xchg
jmp
lock
adc
icebp
sub
xor
ljmp
les
std
sbb
shll
jg
ljmp
sbb
adc
sub
enter
out
pop
incl
outsl
sbb
pop
and
gs
mov
std
decl
fwait
jb
inc
jmp
push
popa
ficompl
mov
sti
sub
arpl
dec
addr16
adc
test
pushl
nop
sub
xor
test
fsub
cs
cld
ret
cltd
mov
cmp
cmp
fnstenv
sub
outsb
lock
push
xchg
cmp
jne
dec
xchg
xor
mov
insl
adc
pop
test
ljmp
rorl
pop
nop
xchg
mov
push
mov
fs
cmc
insl
ss
arpl
mov
inc
push
adc
mov
and
jns
movsb
mov
jecxz
idiv
pushl
mov
out
inc
jae
int3
out
adc
push
bound
icebp
call
call
int
loopne
dec
pop
jle
push
rol
movsl
pushf
cmp
ljmp
xorb
push
xchg
or
xchg
dec
dec
adc
push
xor
outsb
jb
xchg
xchg
scas
fisubs
decl
push
daa
add
add
mov
sbb
ds
pop
sar
cli
adc
sub
mov
jp
dec
push
inc
testb
pop
xor
inc
push
or
lret
dec
adc
xorb
loope
inc
push
es
fs
sbbb
sahf
inc
insl
mov
pop
arpl
lret
ret
cmp
call
cmp
jg
xor
nop
out
xor
mov
push
push
pop
aam
repz
mov
rorl
repnz
xchg
std
and
cmpsl
lahf
mov
push
clc
rorb
push
mov
out
adc
xor
and
jne
mov
fadds
jg
xchg
cmc
call
dec
mov
mov
hlt
adcb
fwait
iret
shlb
or
das
test
mov
shll
cld
sbb
daa
xchg
sbb
decl
ja
data16
sub
leave
sar
cwtl
lcall
aam
fnsave
ret
dec
push
in
mov
adc
fisubl
fistps
sub
gs
dec
cs
add
clc
idivb
inc
bound
sub
cmp
pop
mov
mov
cmp
xor
sub
aad
add
mov
cmc
sub
xchg
aaa
and
sub
imul
pop
jge
shll
aam
jg
inc
or
mov
jle
pop
cmc
pop
pop
pop
mov
mov
pop
call
adc
addl
out
push
outsl
and
ljmp
adc
inc
cmp
imul
pop
inc
sbb
mov
mov
imul
and
push
ljmp
bound
test
pop
mov
mov
ret
xor
mov
bound
je
pop
cmpb
push
ret
push
jne
mov
mov
in
ljmp
lcall
lcall
ficompl
add
leave
in
push
ja
jge
mov
sbb
sub
insb
dec
les
jecxz
movsl
mov
incl
lret
repz
fmuls
push
xchg
fs
std
push
sbb
sar
aaa
mov
testl
inc
fmul
fcoml
mov
adc
shlb
push
loope
or
dec
out
movsl
push
jns
test
mov
or
dec
dec
cmp
cli
fimull
je
mov
inc
call
sub
clc
pusha
adc
iret
sub
push
enter
and
lock
lcall
lock
pop
push
pop
scas
stos
xchg
call
dec
and
ds
mov
fucom
mov
and
daa
or
lea
mov
out
loopne
std
fists
scas
stc
icebp
stos
adc
enter
hlt
add
aaa
cli
ljmp
ljmp
lock
fidivs
xor
das
mov
cli
sbb
push
pop
jp
xchg
daa
into
jbe
insb
lret
mov
push
rolb
mov
adc
ja
jg
pop
imul
ror
lea
push
xor
imul
xchg
clc
decl
aam
js
push
inc
sbb
loope
pop
xor
push
sbb
adc
lock
cmpsl
shrb
sti
add
repnz
movsb
popf
inc
mov
inc
pop
clc
test
popf
daa
inc
and
gs
mov
mov
cmp
insl
jo
je
sbb
fwait
stc
mov
lods
mov
jae
push
push
leave
push
xchg
add
push
cltd
nop
push
push
loopne
fistpl
sub
or
dec
out
fidivrs
dec
stos
insl
pop
sbb
std
incb
scas
inc
das
dec
sti
push
xchg
mov
jle
add
out
inc
jmp
test
imul
stos
cmpsl
mov
loopne
add
std
mov
add
cltd
and
outsb
jns
lcall
pop
insb
mov
mov
fcom
test
in
bound
mov
push
cwtl
dec
std
or
mov
adc
int
adc
jno
pop
cli
or
pop
pop
call
daa
out
push
sub
pop
mov
shlb
loope
mov
add
fdivrl
mov
repnz
sub
lods
or
mov
loop
jbe
cmpsb
add
idivb
decl
std
decl
stc
lret
cmp
xor
popl
mov
mov
jg
cmp
and
sarb
sarl
out
xchg
mov
cmpsb
sbb
ror
xchg
cli
ljmp
mov
pop
sub
jp
or
fs
icebp
loopne
rorl
adc
pushf
push
dec
dec
sub
das
mov
dec
mov
sbb
cld
xor
xor
pushl
lcall
aad
adc
inc
add
mov
xchg
stos
daa
inc
fstl
cltd
or
mov
xor
mov
jmp
jno
ja
or
adc
add
addr16
jo
fdivp
inc
adc
xor
call
push
fdivrp
or
aas
and
xchg
xchg
pop
lcall
mov
xchg
add
imul
int
leave
push
jg
or
dec
mov
xor
pusha
jle
arpl
mov
jmp
jbe
data16
movsb
adc
out
jmp
cld
call
pop
arpl
fildl
mov
jg
rcll
bound
mov
dec
in
or
je,pt
push
or
jg
xlat
enter
sub
int3
mov
mov
mov
pushl
decb
xchg
ret
in
push
mov
faddl
jp
mov
int
gs
xchg
pop
lods
xchg
clc
in
xor
movsb
fwait
mov
mov
sbb
cs
fucomip
xor
in
lea
xor
cmc
lret
pop
rol
mov
icebp
dec
ret
jg
imul
cmp
xchg
stos
lods
aas
mov
mov
cmc
jg
mov
scas
jecxz
mov
btr
mov
aaa
jp
decl
nop
xchg
xlat
pop
hlt
sub
jge
scas
mov
jns
shrb
mov
xchg
mov
cmpsb
jmp
ror
sbb
incl
xor
jg
ds
test
mov
mov
sbb
ljmp
cld
jmp
pop
sub
jbe
fwait
pop
jne
xchg
cmp
and
mov
roll
rcrl
mov
js
cmp
mov
add
xchg
jp
cli
test
repz
inc
lret
or
xchg
and
in
andl
movsl
cmc
sub
pop
push
ja
and
subl
push
ljmp
push
hlt
sbb
movsl
call
sbbl
push
jb
add
mov
dec
sub
shr
pop
xchg
mov
add
inc
and
lock
xor
fmul
push
insl
xchg
mov
sar
cmp
insb
jb
push
jae
pop
jae
ret
loop
xchg
mul
pop
outsl
pop
push
jg
jg
xor
iret
mov
enter
addr16
pop
loopne
loopne
orl
xor
mov
negb
js
or
push
push
out
hlt
mov
imul
mov
movsbl
xchg
xor
jl
mov
lcall
aaa
rorb
adc
jbe
mov
inc
or
sbb
ret
mov
dec
jne
adc
pop
sub
subl
testb
fbld
outsb
mov
jecxz
dec
cld
mov
push
cltd
mov
pop
xor
and
lea
pop
adc
test
pop
std
jg
cmp
sub
mov
mov
jno
sbb
ljmp
cmc
mov
fcomps
add
pop
xchg
fisubrl
cmpsb
or
les
xlat
lcall
cmc
popf
fnstcw
jno
mov
icebp
iret
icebp
adc
inc
adc
test
aam
mov
sub
repnz
xchg
xchg
cmp
lock
mov
stc
mov
add
ljmp
cld
mov
pop
inc
fs
aad
lods
ror
cmp
outsl
lock
incl
cwtl
pop
sbb
pop
or
lret
sbb
jnp
adc
test
iret
add
cmp
stos
stos
sbb
fucomi
adc
movsb
lods
decl
mov
mov
test
stc
lods
push
ljmp
loopne
push
test
push
cmp
fucomip
xchg
cs
mov
fnstcw
subl
pop
clc
mov
pop
aam
and
jecxz
gs
sarb
pushl
mov
incb
in
sbb
mov
inc
inc
pushf
cmp
pop
decb
dec
adc
mov
outsb
lret
bound
lods
in
or
inc
fbld
call
sub
jg
mov
rorl
pop
add
and
lahf
ror
incl
push
cmp
mov
add
subl
xchg
cmpsb
daa
lret
repz
adc
subb
ljmp
std
sbb
add
sti
cmp
push
jns
test
or
loop
rcl
mov
loope
inc
js
shl
ja
mov
movsb
aas
xlat
stos
mov
add
mov
call
clc
adc
sbb
insl
xor
dec
jae
insl
lods
mov
rcrb
pusha
sub
jmp
sbb
fdivrp
and
iret
ds
push
pop
in
cwtl
das
leave
sbb
pop
cli
and
dec
movsb
sahf
loop
not
inc
dec
jb
fcoml
jmp
xchg
outsb
sub
or
aad
mov
testl
or
and
inc
xor
popf
ret
ljmp
fs
je
les
aaa
sub
incl
cmp
iret
inc
and
mov
rorl
test
es
inc
addr16
mov
ror
pusha
push
aas
popa
mov
sbb
loope
nop
and
pop
cmp
xor
lret
xor
mov
popa
les
insb
pushl
call
mov
adc
add
lods
inc
mov
mov
repnz
fcoms
push
jbe
bnd
pop
mov
cmp
xchg
test
stos
xchg
ja
test
mov
sub
xlat
xchg
mov
adcl
mov
cld
push
popf
ljmp
jle
push
rcrb
sar
call
xor
pop
cmpsb
push
inc
push
ret
sub
cmpsb
enter
sahf
sub
dec
sub
or
and
xor
sbb
movsl
cmpl
aad
fnstsw
xchg
fwait
aaa
sub
pop
lods
pusha
lret
fisubs
add
cmc
mov
pop
insb
mov
and
out
pop
cmpsb
and
cs
das
icebp
pop
mov
jbe
fwait
das
cmp
mov
mov
call
cli
inc
loopne
cmpl
xor
and
or
inc
repz
ljmp
add
aas
push
pop
out
xchg
dec
popa
andl
rclb
in
mov
fadds
fs
fsubl
mov
jle
cmp
test
hlt
or
sub
int3
shrb
das
hlt
mov
inc
sbb
pop
xchg
or
cmpsl
xchg
lret
adc
lahf
cld
fnstsw
call
fs
inc
lods
popa
or
aam
repz
in
daa
insl
ljmp
ljmp
mov
or
push
xchg
or
cmp
loop
jmp
ljmp
aam
sbb
repz
xlat
loope
push
arpl
jl
xchg
incl
fnstsw
or
dec
test
sahf
sbb
xor
nop
out
xchg
cli
pop
loop
mov
mov
adc
imul
lcall
into
sbb
sbb
xchg
push
bound
jmp
out
sub
cld
jg
js
movsb
inc
pop
incb
outsb
mov
mov
or
fstpt
sbb
sarl
pop
std
bound
pop
test
push
mov
lcall
loop
stc
cmpsl
cmp
sub
rorl
xor
mov
push
xchg
cmpsb
pop
jg
test
mov
mov
in
adc
nop
inc
pushl
cmp
jmp
add
lcall
andl
in
add
push
ret
push
clc
sbb
daa
sub
fists
jbe
rcrl
scas
push
pushf
mov
or
enter
or
fiaddl
aam
inc
or
jb
sahf
push
fldt
mov
adc
jnp
out
mov
add
sahf
pusha
sbb
sub
sti
pushl
in
jo
fs
iret
and
fsubl
hlt
incl
sar
mov
cwtl
mov
pop
inc
jmp
cli
push
xchg
jne
mov
imul
and
loop
jmp
shl
stc
mov
and
xchg
outsb
push
clc
lds
sbbl
push
cli
mov
jno
icebp
adc
dec
jl
movsl
sbb
call
aad
shll
test
adc
sahf
inc
out
sbb
xor
adc
adc
push
movsl
xchg
jno
movsl
ret
xor
push
scas
adc
dec
cmp
decl
fsts
and
inc
fdivrl
sub
mov
loopne
ss
dec
xor
cmp
out
pusha
inc
sbb
repz
jg
xchg
loop
jle
lods
xorl
les
push
xor
mov
mov
setb
imul
loope
or
xchg
daa
fsts
leave
ds
fldl2e
mov
push
test
pop
cld
pushl
cltd
sbb
mov
nop
add
jl
jg
fwait
sub
fsubl
repnz
jae
icebp
jp
xchg
xchg
sbb
or
jns
popa
inc
rcll
and
insb
in
xchg
decl
jp
ret
hlt
push
popa
test
test
in
rclb
sbb
dec
scas
negb
jg
in
adc
neg
or
push
stos
mov
fdiv
das
xchg
sub
or
pop
xlat
sub
int3
in
or
outsl
mov
mov
pop
pushl
mov
inc
imul
and
and
loopne
mov
jg
and
sbb
push
leave
pop
sbb
out
inc
xor
pop
xor
sbb
lock
jg
cmpsl
decl
loope
loope
in
loop
pop
leave
cmp
sbb
mov
cwtl
mov
pusha
jnp
lea
outsb
push
ljmp
push
mov
out
out
pop
imul
and
jmp
and
pusha
and
movaps
mov
mov
scas
mov
roll
mov
xor
test
push
lret
add
inc
insb
xor
xchg
les
sub
inc
stos
decl
and
sbb
add
mov
mov
jmp
ds
xor
fsubrl
push
add
xchg
sbb
lea
or
jne
in
repz
rorl
pop
ljmp
add
xchg
sbb
push
mov
mov
dec
inc
jmp
dec
push
jns
lds
es
arpl
mov
mov
pushf
dec
notb
cmp
jmp
movsb
je
fsubl
mov
mov
nop
mov
xchg
dec
cmp
daa
data16
leave
out
adc
ret
outsl
hlt
mov
sub
insb
mov
sub
lods
jmp
xchg
in
out
fstpl
jmp
into
pop
jle
or
mov
add
fucomip
cmp
in
fdivs
cmp
sbb
lods
mov
and
pushl
arpl
mov
gs
stc
aam
out
xchg
aad
mov
ds
pop
std
jmp
mov
and
mov
test
dec
idiv
lcall
pop
pop
test
imul
iret
jle
enter
push
call
icebp
push
data16
imul
add
jno
repnz
sbb
insl
scas
mov
sub
int
xchg
push
leave
imul
test
jg
jg
and
and
ret
fwait
and
stos
shlb
sub
lds
decl
push
or
mov
movsl
les
push
mov
adc
aam
jmp
sbb
adc
or
mov
fnstcw
push
inc
sbb
clc
add
das
incl
shlb
add
ret
mov
inc
mov
pop
xor
cmp
mov
or
cmpsl
jecxz
xor
mov
incl
js
add
sahf
inc
sbb
mov
jg
or
ja
cmp
aad
jno
jns
in
xor
out
insl
subb
cmp
and
cmpsb
loop
and
out
scas
add
insl
into
cmp
jg
das
hlt
idivl
mov
call
add
cld
dec
icebp
mov
and
in
push
xor
add
pop
mov
pop
insl
decl
aas
sub
sub
jnp
sbb
cs
inc
ljmp
incl
aas
pop
imull
dec
push
pop
push
sbb
or
popa
into
gs
pop
js
inc
jmp
cli
cld
insl
jg
repnz
iret
mov
pop
test
add
or
mov
lahf
test
or
cmc
fldt
scas
adc
aaa
pushl
nop
clc
dec
lret
sub
aam
mov
clc
sub
cmp
es
push
pop
lret
aad
mov
pop
jge
jg
loopne
inc
xchg
loop
mov
int
in
aaa
or
mov
mov
dec
jg
fbld
mov
or
mov
sbb
outsl
cmp
incl
decl
jnp
fdiv
sbb
fnstsw
sub
xor
test
iret
daa
and
push
cld
adc
aas
mov
loop
jmp
rol
cmp
xor
push
in
pop
inc
out
mov
dec
outsl
mov
cli
jmp
fcmovu
jmp
fldl
mov
jbe
xchg
dec
out
repz
lahf
lahf
fwait
mov
mov
dec
imul
addr16
popf
mov
gs
call
fsubr
inc
jg
cmp
jno
mov
in
or
daa
incl
flds
imul
ljmp
xchg
mov
dec
sbb
scas
jg
rorb
inc
cmp
push
aam
pop
sub
inc
insl
mov
pop
mov
adc
orb
push
ret
jmp
adc
mov
dec
out
mov
test
add
outsl
subb
das
test
mulb
scas
dec
mov
call
decl
fsubr
cld
push
cmpsl
mov
xchg
or
lcall
push
xchg
adc
jge
sti
xor
lcall
xchg
sbb
call
aam
mov
fs
dec
cmp
int3
pop
xchg
incl
insl
insl
inc
push
out
push
int3
movsb
and
lahf
in
popf
aaa
in
int
repnz
and
icebp
incl
xchg
iret
outsb
fs
sbb
cld
jae
pushl
mov
jbe
mov
fwait
lcall
arpl
ljmp
mov
mov
loopne
and
lcall
insl
and
sub
cli
pop
sti
cltd
mov
cs
and
sbb
sub
cld
mov
stc
or
rcll
jo
hlt
mov
call
jb
call
les
dec
adc
inc
or
incl
clc
and
cmp
lcall
sbb
arpl
xchg
in
adc
call
xor
cmp
subb
sbb
cmp
call
jmp
je
pop
lods
jns
pop
mov
mov
popf
test
pop
test
mov
ss
pusha
pusha
loope
enter
jmp
and
sbbl
and
dec
jge
lcall
std
add
addr16
mov
out
or
es
adc
push
out
lods
decl
insb
hlt
jmp
ja
ret
outsb
push
mov
add
lcall
stc
cmp
mov
rorb
xor
cmc
lods
daa
iret
push
inc
xchg
xchg
mov
inc
les
adc
jne
xor
loopne
decl
cmp
cltd
call
int3
ret
jbe
lcall
mov
jg
les
mov
mov
out
aaa
cli
call
idivb
cmpsl
and
leave
add
fistl
lcall
cmp
cmpsb
shl
shll
adcb
xor
aam
rolb
movsl
xor
ljmp
in
lds
dec
js
pop
cmc
push
scas
mov
aaa
jle
loopne
bound
cmp
in
jo
jmp
sbb
ffree
sti
inc
xor
ret
xor
inc
scas
sub
jns
push
cmp
xchg
push
mov
or
jg
or
movsb
ja
mov
xchg
test
aas
stc
inc
pop
mov
add
hlt
xchg
cli
incl
sub
into
inc
mov
repz
test
test
das
and
inc
call
mov
cltd
test
cli
stos
f2xm1
sbb
push
or
jg
cmp
out
outsb
je
add
dec
stc
pop
fcmovnbe
or
add
xor
idivb
mov
andl
sti
fnstsw
test
rcl
xchg
lds
adc
jg
lcall
sahf
repnz
pop
sahf
mov
dec
mov
shlb
push
lcall
icebp
adc
rol
enter
pop
call
xchg
jg
lea
stc
loope
aaa
leave
popf
mov
add
cli
jg
inc
incb
lcall
out
sub
pop
mulb
outsl
loop
dec
inc
mov
sti
icebp
xor
xchg
testb
jg
pminsw
push
repz
out
lahf
aad
sbb
push
mov
lods
ljmp
icebp
sarb
fildll
pop
xchg
lods
leave
ljmp
and
lahf
push
stos
daa
imul
dec
pop
scas
and
pushf
jl
mov
mov
push
in
es
popa
lea
sub
rcrl
sahf
mov
or
cld
dec
mov
mov
sbb
push
data16
cmpb
das
lock
mov
in
je
cld
or
mov
and
inc
loopne
lock
cli
sbb
cwtl
xor
dec
mov
shl
movsl
in
lcall
outsl
sti
mov
cmp
stos
outsl
dec
jg
aas
rolb
repnz
push
or
test
fistpll
add
gs
pop
bound
inc
mov
pop
jbe
sub
sbbl
arpl
fwait
dec
aam
jge
loope
sub
outsl
into
xor
dec
pop
cld
pop
mov
dec
push
sub
popf
movsl
push
mov
push
sbb
or
testl
lods
fists
sub
sbb
push
pop
sub
xchg
xor
frstor
and
inc
loopne
fidivrs
mov
xchg
add
jbe
add
adc
or
push
fnsave
outsb
stos
cltd
leave
mov
pop
rep
xor
decl
or
sub
xchg
stc
mov
mov
and
aam
cli
mov
test
mov
lcall
js
cwtl
jns
out
push
xlat
and
icebp
ljmp
add
and
sbb
cmp
xor
dec
rep
jg
pushl
outsb
nop
push
inc
je
ror
sbb
pop
mov
out
push
cli
pop
cmp
aad
aam
inc
mov
shl
outsl
dec
aam
das
fistps
add
cmpsl
push
imul
mov
jae
sar
ds
dec
out
je
loope
push
insl
sahf
dec
pop
dec
in
push
mov
ja
fidivs
bound
adcb
or
mov
push
jl
mov
adc
cli
jnp
iret
test
xchg
clc
add
jmp
out
sub
mov
jbe
ljmp
add
add
ret
in
out
push
mov
pushl
inc
push
movsl
jmp
call
mov
jp
adc
test
jg
dec
hlt
xchg
xorb
ja
out
outsl
jb
lahf
test
sar
hlt
push
pop
scas
jecxz
notl
je
cli
movsb
lahf
mov
fidivrs
call
inc
in
or
jp
mov
jno
add
push
jne
sbb
jne
inc
insb
lret
fdivrs
repz
sub
mov
lret
in
jp
cmpl
sub
movsb
notb
pop
pop
lock
inc
or
popf
xchg
cmp
or
in
notl
sbb
movsb
lcall
mov
xchg
idivl
pop
inc
pushf
add
push
cmp
dec
mov
jmp
je
mov
adc
sub
sahf
pop
stc
imul
or
add
js
jmp
loop
pop
rclb
mov
lcall
cmpsl
or
ror
aaa
jg
call
clc
sti
mov
int3
xor
jge
cmpb
idiv
or
movsb
jge
es
cld
push
and
pusha
inc
dec
call
jl
sbb
or
xor
pop
popf
hlt
je
sbb
rcr
inc
mov
inc
gs
addr16
popa
lcall
sbb
insl
mov
add
sub
push
cltd
std
push
sub
mov
test
jg
sar
daa
fsubl
add
cmp
sbb
pop
jns
cmpsl
sbb
mov
sbb
jle
mov
outsl
cld
pop
repz
stos
jb
cmp
inc
insb
dec
inc
scas
insb
xchg
mov
or
mov
cld
aaa
mov
loop
scas
mov
mov
roll
hlt
xchg
divb
push
dec
popf
adc
adc
ljmp
sbb
fildl
popf
sarl
ror
mov
jns
test
dec
mov
repz
aaa
cmp
sub
fistps
icebp
incl
jae
jb
adc
mov
and
hlt
decl
sbbl
pop
int3
jae
pop
ljmp
cli
pop
sbb
orb
fsubl
sti
or
test
adc
jmp
shr
push
mov
mov
decl
or
lods
inc
mov
pop
xor
adc
xchg
scas
or
cmc
add
hlt
lods
and
imull
mov
clc
or
in
loopne
xchg
movsl
xor
and
fstpl
cmp
test
add
sub
cmp
mov
sbb
call
and
mov
cmp
push
cmp
dec
fstps
add
mov
push
jge
aad
call
and
cmp
inc
add
cmp
xlat
aam
inc
bound
mov
cmc
mov
dec
insl
push
push
cld
pop
jp
mov
inc
incb
das
mov
xchg
repz
or
testb
push
lea
pop
dec
test
inc
and
mov
sti
imul
fldt
scas
cli
rcl
and
and
test
mov
cmpsl
or
pop
push
and
adc
das
fdivrs
mov
dec
jmp
fisttpl
sbb
cmp
decl
int
out
xchg
xor
adc
or
mov
lret
push
inc
rorl
inc
mov
push
daa
js
or
sarb
pop
mov
mov
aam
or
jl
call
add
inc
add
fwait
jle
or
outsl
or
int
sti
repz
jbe
aad
leave
push
xor
sbb
shr
cmp
ss
add
call
addr16
pop
dec
xchg
fwait
mov
ds
hlt
cmp
sahf
dec
mov
leave
mov
xchg
aad
mov
pushl
or
lret
lcall
gs
fs
loopne
call
xor
add
adc
dec
push
xchg
ljmp
std
ret
cli
push
dec
clc
inc
aaa
push
outsb
xor
in
rcr
loopne
subl
mov
lret
mov
insb
loop
xchg
dec
jne
cld
outsl
mov
sub
lahf
add
dec
loopne
mov
decl
push
push
aas
mov
repz
cmpsb
rcrb
ja
or
fxtract
shrl
lahf
sub
stos
or
jg
mov
cli
inc
cmp
cmp
adc
icebp
jmp
imull
lret
hlt
and
sti
mov
jb
in
xlat
pusha
jmp
fdivr
call
cli
pushl
jp
fs
adc
and
dec
adc
push
jge
ljmp
movsl
mov
adc
lcall
xchg
enter
lcall
mov
add
cmpb
shlb
ljmp
lock
jo
inc
pop
arpl
daa
mov
shl
inc
pop
jb
in
mov
jg
pusha
mov
insb
lea
push
iret
int3
lret
es
jmp
mov
cwtl
repnz
adc
dec
adc
in
dec
call
test
xchg
inc
xchg
std
lret
inc
outsl
pushl
jmp
sbb
mov
mov
mov
jecxz
loop
clc
pop
icebp
decl
stc
adc
mov
out
lret
pop
cmpsb
jb
pushf
decl
fisttpll
int
mov
inc
sbb
lahf
es
aad
jg
jnp
daa
push
pop
xor
mov
fs
or
out
out
pop
xchg
loopne
inc
mov
mov
aad
lret
push
xchg
sbb
loope
sahf
lods
decb
xchg
push
in
sbb
test
sbb
and
out
xchg
pop
pop
imul
jle
or
call
and
dec
adc
addr16
xlat
gs
mov
cmpsb
stos
setnp
stos
or
jne
stos
lock
int
fisubrl
out
push
mov
cmpsb
enter
incl
xchg
and
dec
and
jg
shll
xor
cmp
cmp
jecxz
jg
repz
int3
and
mov
divl
in
push
lahf
xlat
mov
cmpl
adc
inc
xchg
pop
jb
cs
repnz
js
lock
das
dec
mov
punpckhwd
outsl
das
std
outsl
lods
sub
repnz
lds
shll
je
sub
ljmp
ficoms
fbstp
fcomi
mov
pop
jb
jmp
fdivrl
jg
movsb
in
push
jp
lret
stos
loopne
mov
cwtl
sahf
and
mov
and
push
popf
mov
bound
sub
xchg
xchg
lock
lock
stc
mov
jecxz
cmp
or
sub
xor
decl
out
sahf
inc
or
fwait
xor
mov
fbld
mov
les
call
cmp
mov
cwtl
filds
push
cld
dec
xchg
fnstsw
mov
or
cld
jg
movsl
test
jo
lds
mov
arpl
incl
call
and
cmc
inc
sub
xor
aad
jns
outsb
xor
incl
add
or
cmpsl
xchg
mov
fistpll
xlat
mov
ljmp
pop
sbb
in
add
insb
cmpsl
and
xor
insl
lcall
ljmp
cld
inc
scas
xor
mov
loopne
sub
push
adc
mov
push
ljmp
stc
push
sub
repnz
decl
aaa
or
jne
xchg
mov
in
pop
sub
xor
cmp
jb
xchg
cli
outsl
cs
test
outsb
cwtl
push
add
jg
cli
pop
pop
lcall
lcall
jbe
repz
or
lcall
or
adc
mov
inc
pop
enter
andb
jle
rclb
pop
ljmp
push
in
push
enter
int3
fs
call
jmp
repz
addr16
mov
and
incl
in
rcl
jnp
fildl
lahf
ds
pop
fs
cld
xor
hlt
fstpt
aam
push
js
mov
jno
xlat
mov
mov
mov
clc
jae
lods
and
fstpl
dec
fbstp
xchg
jp
dec
cmc
shlb
or
pop
xchg
mov
cmpl
push
jg
ret
sbb
xchg
shlb
jmp
rcll
mov
push
or
push
incl
fsubrp
inc
cmp
add
andb
gs
jne
cld
mov
mov
cmp
aad
stc
daa
jl
aam
jmp
mov
inc
mov
jae
sbb
xchg
jae
mov
scas
xor
mov
dec
push
in
lret
or
incl
or
pop
mov
leave
movsb
or
ljmp
jp
arpl
fsincos
jo
inc
lret
cmpsl
xchg
stos
xor
fwait
mov
sti
out
and
jb
push
loop
jg
out
pushf
ljmp
movsb
lds
jb
fidivrs
pop
rclb
xchg
jo
adcl
and
std
out
xor
dec
shlb
call
inc
dec
int
add
iret
jmp
and
push
jbe
add
shlb
in
or
pop
fucom
add
sahf
sbb
sub
push
sti
xor
pusha
stos
lds
mov
icebp
call
dec
je
js
jl
cmp
fwait
aaa
mov
inc
xchg
xchg
xchg
or
mov
test
or
in
pop
adc
push
inc
cmp
ljmp
cltd
dec
in
and
xor
aad
test
lods
clc
cmp
cld
and
in
or
lcall
pop
test
insb
scas
test
imul
pop
lea
adcb
out
cli
loopne
xchg
mov
or
daa
shlb
ret
cmpsb
pop
test
sub
jmp
lahf
cmpsb
je
leave
imul
data16
out
stos
jg
shlb
mov
in
adc
push
jns
mov
push
imul
jmp
iret
hlt
xlat
je
jne
lds
lret
das
cmp
outsl
and
cld
or
dec
outsb
and
pusha
hlt
jo
imul
pop
mov
sub
fiadds
sub
mov
in
jg
mov
sbb
repz
and
jg
rolb
nop
push
inc
aas
fdivrl
mov
rcl
mov
lret
cmp
xor
outsl
xchg
loope
rcll
decl
fcomps
sub
cwtl
add
lock
ds
push
inc
dec
fistpll
jmp
dec
fcos
ljmp
jle
sbb
leave
sub
iret
fs
push
scas
addr16
mov
or
add
call
incl
sbb
and
popa
out
in
daa
cs
cmpsl
hlt
arpl
lret
xchg
push
fsin
and
lods
test
sbb
mov
loop
xor
lock
jl
test
test
pop
mov
pop
inc
dec
lret
iret
lret
scas
dec
jb
fcompl
out
in
icebp
xchg
or
lods
or
xor
cmpsb
add
and
aam
inc
rcrb
dec
pop
call
dec
popa
ret
mov
nop
fsubrl
pop
xchg
mov
lcall
cmpsl
aaa
sahf
addr16
sbb
in
xstore-rng
cmpsl
xchg
dec
xor
das
hlt
pop
mov
rclb
push
loope
pusha
loopne
lret
ret
incl
inc
addr16
jl
cs
sbb
sub
ljmp
aam
jmp
jle
dec
stc
ret
jae
aam
adc
das
jge
push
or
pop
jg
jno
sub
mov
fwait
in
in
mov
mov
sbb
jo
cmp
dec
jge
fs
lahf
outsb
dec
ds
fwait
decl
lahf
mov
cmc
push
cmp
mov
neg
push
push
push
movsl
inc
push
loope
in
in
and
mov
or
pushl
ret
jne
cmc
enter
and
mov
dec
push
cmp
push
sbb
mov
inc
sub
shr
sbbb
jmp
jg
pushf
cs
push
fimuls
or
aam
inc
adc
rorb
pop
lret
stc
mov
fsts
scas
shrb
jbe
sub
inc
leave
sbb
jno
insb
sbb
dec
test
pop
cmp
aam
fildl
ret
das
cmc
incl
and
js
pop
mov
lods
fsubr
addr16
inc
lret
xor
popa
cmp
jecxz
lcall
cli
loope
out
mov
push
les
ds
pop
xchg
adc
pop
cli
je
dec
sub
rcll
ja
sahf
jae
add
jg
pop
jns
pop
mov
ss
inc
std
idiv
lcall
pop
dec
and
mov
xchg
call
jg
leave
daa
adc
stos
loope
or
stos
mov
sub
inc
lds
hlt
dec
mov
das
hlt
jle
mov
push
pusha
mov
inc
sub
shlb
imul
cmpsb
jg
mov
rclb
gs
scas
push
ljmp
sub
push
into
mov
sub
push
into
ret
mov
out
and
add
loopne
add
in
jg
inc
mov
add
lods
jno
insl
fcomps
loopne
fs
jne
std
fisubs
rcrb
jl
scas
clc
sbb
push
mov
push
mov
call
sub
popf
pushf
sarl
cwtl
xchg
jl
lock
jmp
das
cmp
movsl
test
cmp
loop
sbb
mov
decl
sahf
pop
cmpsl
das
les
push
push
or
jg
test
mov
inc
mov
data16
lea
ljmp
mov
jne
mov
jle
cmp
fidivs
insb
loop
jmp
data16
jbe
imul
jmp
push
loopne
inc
mov
xchg
add
aaa
jp
adc
sti
sbb
pop
or
pusha
xchg
pop
xor
xchg
test
mov
add
int3
sub
inc
pop
jle
dec
jb
add
mov
aaa
mov
movsl
das
xor
mov
loopne
xchg
mov
cltd
pop
cmp
in
pop
arpl
xchg
cli
incl
adc
or
mov
mov
pop
push
inc
xor
outsl
mov
adc
add
or
loop
test
hlt
mov
aam
test
push
and
jg
fstl
push
dec
movsl
pop
aaa
call
mov
leave
insb
ljmp
add
mov
test
push
cli
pop
loope
cmp
std
inc
shl
mov
outsl
jl
movsl
mov
mov
adc
mov
xchg
in
jge
adc
inc
divb
jae
cmc
imul
jns
lods
movsl
push
sub
dec
jge
subl
jmp
gs
mov
mov
sub
fcoms
sbbl
or
leave
imul
lcall
mov
lret
ret
inc
repz
cmp
cmp
mov
adc
or
jle
stos
and
adc
cli
incl
fidivs
mov
ret
mov
cmp
jp
push
push
es
mov
mov
or
add
dec
jae
scas
or
incl
mov
in
jae
push
insb
push
scas
call
jp
lahf
jae
lock
iret
aas
iret
shrd
adc
mov
lcall
inc
adc
mov
mov
stos
out
aaa
fwait
xchg
mov
sub
adc
int3
jle
ljmp
push
xchg
cwtl
mov
adc
or
cltd
or
xor
mov
mov
sbb
idivb
movsl
xchg
adc
jnp
cld
add
add
xchg
call
test
call
mov
addr16
adc
mov
push
mov
and
call
sar
mov
shrl
or
cmp
cmpsb
mov
pop
js
arpl
lcall
hlt
or
push
xor
add
fadd
stos
push
aam
sub
pop
ja
loop
add
sub
jg
inc
shrb
lret
cmpsb
scas
leave
movb
adc
add
ljmp
incl
dec
loope
or
int3
mov
inc
aam
fsubp
ret
pop
clc
cltd
cmp
push
xor
call
mov
xchg
jle
push
and
inc
xchg
xorb
test
mov
mov
enter
andb
cmpl
pop
cmp
scas
pusha
stc
adc
cmc
mov
jo
out
scas
pop
jp
andl
shl
nop
ss
add
xchg
out
rcl
cld
incl
repz
jo
pop
mov
fcoml
dec
mov
mov
lea
xchg
inc
test
mov
in
ss
cmp
sti
outsl
loop
cmp
mov
data16
cli
sub
jns
outsb
mov
fwait
call
sarl
or
daa
dec
pusha
or
jo
das
cmc
jmp
xchg
adc
xchg
push
jg
mov
clc
add
cmp
call
call
cwtl
or
lret
aas
cs
push
cmp
mov
std
cltd
sarl
or
pop
cmp
mov
nop
jo
cmp
repnz
nop
sbb
sub
scas
inc
in
sub
subl
in
mov
pusha
sbb
pushl
pop
mov
aam
or
pushf
fs
aas
adc
aaa
jno
adc
dec
cld
aaa
mov
dec
mov
fbstp
add
jge
divb
pop
or
add
inc
hlt
xlat
adc
aad
sbb
push
je
dec
adc
call
pop
clc
clc
or
pop
int
push
lcall
and
fwait
loope
ljmp
fsts
jl
dec
sub
imul
clc
rorb
pushf
outsb
ret
mov
sahf
and
push
mov
mov
outsl
cwtl
lret
movsl
mov
xchg
dec
sub
ret
adc
jg
rcr
xchg
mov
ljmp
push
sar
sbb
push
sub
pop
lods
sub
pop
mov
sbb
mov
int3
in
push
pop
ss
push
in
pop
mov
xor
jmp
jno
ljmp
push
pusha
sahf
jmp
pushl
jmp
push
xor
std
sub
lcall
movl
aad
inc
push
jae
jmp
dec
xlat
test
sub
into
push
and
lea
das
mov
in
test
rcl
daa
jmp
fcomi
pop
icebp
add
pusha
or
decl
out
test
lea
push
aaa
iret
and
lret
or
incl
mov
jmp
clc
pop
dec
mov
pop
dec
inc
stos
mov
scas
mov
or
shll
aaa
faddl
loop
lds
sub
iret
xchg
mov
push
repnz
jmp
pusha
mov
jnp
sub
stos
pushf
ficomps
jmp
sahf
and
nop
cmp
mov
pushl
or
sbbl
and
loope
pushl
mov
pop
imul
out
cld
add
fwait
js
lret
incl
std
repz
jo
mov
sbb
mov
pop
arpl
notb
add
out
xor
das
sbb
jae
insl
push
pushf
cli
iret
into
inc
pop
test
jecxz
enter
adc
lahf
jns
fucomip
popa
push
push
mov
pushl
mov
mull
push
inc
fildll
scas
mov
divb
xchg
inc
mov
cld
xchg
push
or
fdivp
les
out
imul
jmp
or
int
bound
stos
scas
mov
xor
adc
pushl
shlb
xor
jle
inc
mov
adc
insb
mov
push
cmp
or
fistl
lahf
fdivrl
xor
jge
mov
loopne
lods
mov
sub
sbb
test
or
pusha
orl
mov
xor
push
lcall
call
ss
push
mov
clts
add
popf
jno
iret
xlat
pop
jns
out
hlt
push
mov
jno
mov
and
cs
stos
adc
hlt
in
call
pop
dec
inc
andb
jns
add
loope
mov
into
jmp
push
xchg
mov
or
dec
push
aad
in
outsl
sub
gs
jmp
lock
jg
mov
add
fidivs
push
ljmp
xor
outsb
adc
pusha
cmp
pushf
pop
cli
sbb
mov
test
cmp
xchg
fidivrl
out
lods
out
xor
or
ss
daa
lret
sub
lcall
pop
in
shll
inc
mov
mov
sbb
mov
or
mov
pop
jg
call
stos
ret
loope
or
mov
inc
lods
push
hlt
xchg
cli
pushl
xchg
icebp
adc
rcr
lcall
cli
jg
ljmp
push
pop
mov
jmp
test
pop
cmp
xchg
pop
clc
adc
pushf
ret
addl
mov
outsl
jo
fnstcw
jo
arpl
mov
pushl
daa
jl
fisubrs
jge
push
std
cli
pushl
xlat
cmpsl
es
icebp
jle
insl
mov
xor
mov
inc
xor
jmp
dec
or
decl
ljmp
cmpl
lds
mov
jmp
pop
addb
pop
mov
mov
and
mov
push
cld
incl
and
mov
mov
mov
mov
das
icebp
dec
ljmp
cmc
cli
in
sbb
pop
inc
dec
outsl
nop
movsb
repz
insb
dec
std
test
pop
int3
xor
dec
imul
stos
outsl
lock
pop
jbe
lods
pop
mov
mov
inc
fdivs
sarb
mov
lds
daa
cmp
push
ja
and
repnz
xor
dec
fst
dec
divb
aas
sub
sub
decl
lcall
or
pop
inc
dec
rcrl
sbb
pop
rcrl
cmp
decl
cwtl
mov
inc
jl
mov
add
adc
scas
andb
jecxz
add
mov
pop
sbb
cmpsb
lock
push
sbb
ljmp
dec
xor
push
pop
jmp
cmpsb
mov
and
ret
sbb
lock
mov
pop
hlt
sbb
aas
aam
in
jg
mov
outsl
std
cmp
adc
sbb
xchg
xchg
aad
xor
ret
sar
sub
out
scas
add
jne
cltd
dec
hlt
and
cli
vfrczpd
xchg
int3
mov
or
jmp
orb
lret
push
in
jmp
mov
pop
add
mov
xchg
jp
xor
jg
pop
adc
pop
fnsave
add
outsl
jp
mov
lock
fisttps
cmp
or
mov
insb
out
stos
cld
mov
ljmp
out
mov
andl
mov
cmp
sahf
pop
cmpsb
sbb
in
dec
xchg
stos
faddl
jl
lret
jnp
sub
setge
pop
mov
jg
mov
push
push
jp
rorl
xor
sub
mov
enter
js
cld
push
jmp
loop
add
xor
xchg
mov
mov
arpl
push
xlat
mov
stc
push
leave
decl
cmp
out
sbb
xorl
icebp
loope
xor
jecxz
inc
js
test
test
into
arpl
xchg
insb
and
out
addr16
add
sbbb
and
aad
ss
and
lcall
jno
jg
ss
fimull
cmpsb
add
outsb
rolb
pushf
pop
clc
pushl
dec
arpl
dec
jno,pn
stos
int3
cmp
and
gs
dec
mov
jmp
or
inc
mov
lds
scas
popa
mov
in
add
add
mov
lea
fdivr
fcmove
ret
leave
insb
stos
stos
out
inc
sub
mov
enter
ret
sti
pushf
aam
push
ss
or
sbb
not
and
pop
decl
jle
out
inc
pop
and
xor
flds
and
shl
ljmp
lcall
sub
loopne
add
xor
cs
aad
fs
int
dec
jae
mov
jo
mov
call
mov
inc
ret
test
cmpsb
mov
decl
dec
push
adc
pop
mov
stos
pop
punpckhwd
or
pushl
out
push
jmp
cmp
cmp
adc
mov
cld
fbld
jno
sub
pop
js
fstl
cli
and
jecxz
call
in
enter
ljmp
pop
movsl
sub
rcrl
dec
je
leave
pop
dec
bound
sarl
push
je
test
sahf
pop
std
push
jl
push
pushf
in
sbb
aaa
pushf
push
in
aad
nop
loopne
pop
loopne
loop
mov
ljmp
pop
adc
or
cltd
loop
js
decl
cmp
imul
mov
mov
xchg
sbb
dec
mov
ret
mov
sbb
mov
arpl
xor
insl
fdivs
push
jne
push
push
fld
fwait
pop
roll
mov
in
sub
movsb
js
arpl
std
in
pop
sarb
jmp
or
mov
outsl
inc
lret
loopne
pop
sbb
popa
mov
adc
loopne
daa
pop
xchg
sar
inc
loop
push
bound
and
push
jbe
bound
insl
and
inc
rclb
sbb
inc
incl
lods
shl
ja
inc
pop
sbb
int3
sub
frstor
and
call
sub
sahf
inc
iret
pop
inc
jmp
ret
xchg
add
xlat
test
bound
push
decl
popf
bnd
je
clc
cmp
dec
push
mov
push
sub
xor
aas
scas
rolb
push
addr16
fnsave
sub
incl
xchg
mov
lcall
ret
leave
mov
pop
inc
cmpsb
xor
jp
cmpsl
jnp
jg
mov
testl
in
ss
mov
jmp
or
pop
mov
pop
lcall
cmp
push
push
pop
mov
int3
out
pusha
lret
cmp
arpl
push
movsl
dec
mov
nop
outsl
std
call
repz
leave
test
adc
addr16
test
xchg
push
dec
add
decb
mov
lock
rcr
fisttpll
and
fbld
in
out
sub
mov
add
push
jne
mov
jl
ret
out
lret
mov
clc
lcall
jp
pop
push
shl
mov
aad
and
loopne
mov
arpl
in
push
ja
adc
negb
enter
cld
call
sub
jne
cwtl
lock
les
lods
arpl
mov
enter
das
sar
fwait
out
dec
sbb
xor
add
std
xor
int3
pop
sbb
pop
sbb
pop
sbb
lods
das
cmc
stos
aam
loope
bound
icebp
xor
cld
jmp
dec
imul
repnz
je
aam
pop
nop
test
inc
in
cs
push
mov
call
clc
mov
or
add
and
mov
ret
sbb
sbb
mov
dec
icebp
ja
insl
jecxz
jle
outsl
jecxz
mov
addb
int
cmp
mov
inc
repnz
mov
mov
mov
mov
js
das
push
aad
clc
pushl
dec
stc
repz
push
jmp
mov
push
outsb
loopne
mov
scas
ret
das
aas
jbe
pop
sub
cmp
clc
test
outsl
push
repz
mov
and
fdivrp
jmp
dec
daa
iret
or
mov
inc
cmc
mov
or
pushl
jle
adc
cmp
pop
mov
clc
test
add
xchg
sbb
je
or
imul
mov
ret
jg
cmpsb
mov
mov
pushf
daa
mov
stos
add
and
mov
out
xchg
inc
push
add
mov
les
test
ljmp
dec
add
pusha
and
sahf
sbb
call
fimull
push
js
orb
push
in
xchg
popa
aad
aam
pop
add
outsl
mov
pop
mov
es
ror
lds
push
iret
mov
fs
cmp
rcrl
add
adc
dec
xchg
add
hlt
pop
popf
pusha
sub
adc
sbb
jb
add
sbb
fsubrs
dec
or
lock
xchg
mov
dec
sbb
dec
xchg
fnstsw
ljmp
test
jmp
pop
orl
lock
sti
cmpsl
fs
testl
test
sti
pop
ljmp
ret
loope
cs
jnp
jns
mov
mov
imul
or
jl
mov
lcall
aas
sbb
cs
enter
jg
add
add
adc
out
cmp
sbb
adc
lods
ret
jecxz
add
mov
adc
or
loop
lcall
hlt
mov
jg
shll
sti
mov
outsl
inc
sub
push
cmp
sub
addr16
mov
push
loop
ss
stos
add
and
lret
xor
std
ja
call
or
cmc
stc
leave
push
arpl
aas
pop
movsl
push
inc
adc
std
outsl
aad
test
and
es
push
pop
into
insb
xchg
cs
aas
inc
hlt
aas
repz
aaa
sti
lods
not
sub
ljmp
lods
jns
sub
popa
jnp
aad
and
jnp
dec
pop
push
and
jo
jbe
outsl
std
push
sar
nop
popa
test
add
push
sub
adc
lcall
cmp
nop
jo
push
jp
loopne
or
mov
xlat
jecxz
decl
or
std
shlb
inc
js
sahf
repz
add
mov
jns
fs
aad
push
lahf
aad
das
xor
push
mov
cmp
push
ds
or
data16
test
shlb
cmp
cmpsl
shlb
notb
cli
ljmp
lock
inc
iret
pop
mov
clc
icebp
call
cmp
adc
sub
addl
pushf
xor
das
mov
pop
cwtl
fiadds
in
call
push
data16
jmp
icebp
mov
pop
stos
repz
push
dec
sub
mov
xchg
decb
mov
xchg
test
and
lods
cmp
clc
push
jmp
pop
inc
or
loopne
xchg
imul
pop
pop
jbe
pop
ja
lods
pop
je
psrad
cld
in
decl
jno
lods
into
cwtl
mov
sbb
or
fs
icebp
jg
mov
gs
mov
mov
pop
fnstsw
push
adc
push
push
sub
jmp
cmp
dec
std
pushl
mov
xor
in
shrl
push
jmp
jg
jns
das
fldt
push
ret
mov
shrb
mov
mov
mov
ret
in
jmp
popf
mov
cld
lds
mov
loopne
fimull
fcomps
xor
call
clc
pop
add
int3
xchg
test
stc
test
je
sbb
jg
dec
cmc
push
dec
das
sub
in
push
sbb
popa
xchg
mov
lret
andl
icebp
pushl
cli
push
push
shlb
jo
and
imul
int3
in
jmp
sti
das
add
mov
call
add
xchg
sub
call
jle
pushf
inc
adc
xor
dec
mov
hlt
lods
mov
xor
mov
or
sbb
loope
adc
cs
data16
inc
pushl
add
fwait
es
movsl
pusha
lods
orb
dec
pop
and
jg
hlt
sbb
dec
addr16
fidivs
call
lock
or
xor
xor
loopne
lret
enter
pushl
jb
sub
cwtl
out
fldl
pusha
adc
sbb
mov
mov
cli
ljmp
dec
int3
inc
jle
inc
jle
enter
mov
lret
aas
adc
pushl
xchg
je
int3
sbb
aam
jmp
mov
mov
mov
adc
sbb
dec
insb
mov
jno
cld
aas
aaa
ljmp
mov
mov
lds
mov
adc
stos
repnz
icebp
cwtl
add
test
std
sbb
lcall
mov
test
ja
mov
adc
mov
fsubrl
push
mov
int
mov
insb
jo
sti
aam
out
ljmp
incl
push
cmpl
pop
inc
stc
int3
jo
dec
and
mov
push
xor
xchg
repz
mov
pushf
out
and
lcall
sub
push
sahf
mov
test
xchg
arpl
xchg
mov
call
aaa
mov
xchg
sbb
test
mov
es
xchg
push
cwtl
mov
fdivs
or
push
pushl
pop
sar
mov
cwtl
in
scas
adc
sbb
xor
jg
jmp
jmp
cli
mov
xor
xorb
aam
lahf
mov
xchg
clc
decl
cmp
xlat
push
int3
cmpsl
lret
push
mov
ds
iret
sbb
mov
pop
lret
outsb
fisttpll
dec
jno
test
clc
adc
dec
daa
inc
jae
add
inc
jg
aaa
jmp
movsl
xchg
pop
cmp
jp
popf
add
adc
aad
incl
jb
dec
jmp
xor
call
dec
jg
enter
outsl
cld
mov
dec
dec
mull
adc
sub
in
sbb
dec
xor
decl
bound
mov
repz
pushf
fwait
push
aas
xor
clc
les
cmp
xorl
lcall
xlat
mov
cmp
stc
dec
sbb
xchg
mov
xor
add
sahf
jne
imul
mov
dec
xchg
lock
jl
xchg
mov
imul
pop
mov
mov
xchg
sbb
mov
jg
xor
arpl
cmpsl
pusha
pushf
or
lods
int
in
push
std
inc
in
pop
cmpsl
cmp
and
popa
lret
call
inc
add
jge
sub
clc
or
icebp
call
xor
in
mov
or
pop
aam
push
dec
jo
dec
leave
cmp
push
ljmp
leave
out
mov
leave
fs
cwtl
hlt
ret
fistps
cmc
mov
andl
add
mov
sti
enter
push
xor
push
jecxz
or
pop
adc
lock
jp
leave
mov
add
cwtl
fisubrs
lock
nop
outsl
push
mov
call
sbb
cmp
push
sub
xchg
mov
daa
imull
inc
decl
enter
or
mov
mov
xor
inc
push
into
xor
and
ljmp
inc
pop
mov
push
jmp
cmpsl
adc
xor
mov
test
fucomp
shrb
aaa
sbb
nop
sub
xor
lcall
pop
xchg
sub
js
sbbb
dec
call
mov
jno
sub
movsb
push
fildl
jg
loopne
mov
scas
adc
inc
push
pop
scas
ja
and
or
clc
test
lcall
ljmp
xor
jmp
in
insb
test
scas
test
leave
out
adc
or
ljmp
mov
enter
cmp
mov
test
jle
pop
stc
sbb
push
pop
cmp
ljmp
push
push
cltd
mov
sub
sub
cwtl
sbb
rcr
ret
cwtl
imull
std
push
adc
data16
push
testl
testb
fsubs
or
sub
pop
push
xchg
push
adc
mov
decl
lcall
pop
faddl
fs
mov
das
lcall
out
std
inc
cwtl
or
pop
xor
pop
scas
shrl
pop
dec
mov
hlt
or
or
pusha
mov
fwait
cmp
mov
xor
or
decl
lret
mov
lds
push
test
fnstsw
lds
and
ljmp
mov
pusha
movsb
lahf
or
adc
jo
fwait
mov
or
sbb
inc
or
ds
iret
dec
fsubl
stos
call
or
xchg
xor
ret
jle
out
mov
movsb
xchg
push
lock
call
inc
dec
das
lea
push
sub
pop
movsl
aam
lods
lcall
std
outsl
add
adc
jge
data16
mov
sbb
jmp
push
call
pop
push
xchg
loopne
out
in
pop
sub
cltd
lcall
fimull
push
ja
pop
out
jne
pop
fs
loopne
arpl
dec
jo
sub
out
mov
addr16
xchg
cli
mov
lea
sub
std
push
or
sub
adc
pop
imul
ss
decb
sbb
pusha
mov
stos
rol
cmp
mov
push
cld
sub
sbb
pusha
mov
dec
sub
incl
jnp
push
jno
xor
aas
inc
sti
dec
mov
jb
push
sub
pushl
lret
adc
or
dec
jno
and
sub
jmp
out
fnclex
and
cld
lcall
push
or
shl
rorb
mov
jmp
pop
or
ja
in
rcr
jnp
pop
jnp
cmp
int3
cli
sbb
ss
xlat
mov
mov
push
cmpsl
xchg
xchg
ljmp
dec
outsb
push
lahf
sbb
sbb
push
and
sahf
mov
cmp
fbstp
mov
or
jns
movsb
and
shl
movsb
test
jo
js
fucomip
mov
out
fimuls
shrl
movl
sbb
iret
mov
std
inc
dec
inc
shl
pop
cmp
movlps
loope
mov
jg
iret
jmp
aaa
or
repz
adc
mov
fcoml
sar
test
lods
mov
push
push
xor
inc
jp
mov
mov
mov
jnp
mov
shrb
sbb
mov
mov
std
and
and
ljmp
mov
loopne
mov
dec
cmc
pop
nop
movsb
ret
inc
add
xchg
mov
orb
test
mov
cld
mov
decl
call
lock
in
lods
push
inc
cmpsl
xor
mov
jb
inc
testl
mov
mov
push
pop
clc
inc
fidivrs
dec
jne
add
sbb
sti
incl
inc
xor
cld
decl
cld
outsb
pop
cmp
mov
push
je
sarl
orb
sbb
pop
mov
ss
mov
mov
xor
jg
pop
mov
adc
mov
xchg
inc
xchg
out
pop
loopne
aaa
clc
rcr
xchg
loopne
clc
in
imul
mov
push
adc
add
xlat
lods
add
decl
in
jo
cmp
ss
sbb
rolb
lods
adc
cmp
incb
jb
repnz
sbb
mov
xchg
stc
cmp
push
mov
popf
cmpsl
stos
cs
jg
clc
mov
mov
mov
movsb
push
or
push
notb
cmc
pushl
fisubl
inc
inc
add
jno,pn
cmpsl
mov
arpl
xchg
loope
or
sub
data16
in
mov
dec
inc
mov
mov
jp
leave
lea
loop
mov
sbb
stos
cmp
decl
push
dec
push
rorl
popf
pop
mov
sbb
inc
xchg
popa
ljmp
lcall
jg
in
fsubrl
lret
pop
addb
xchg
inc
icebp
xchg
dec
pop
mov
out
pop
sarb
iret
push
jno
pop
aaa
cli
dec
pop
ds
xor
fists
movsb
mov
sbb
addb
xchg
and
pop
repnz
pop
xchg
outsl
shl
daa
mov
lock
fwait
cmp
stos
pop
int3
mov
lret
test
add
ja
cmp
loope
iret
movsb
shl
ja
lock
outsb
or
adc
push
push
push
ss
add
mov
movsl
repnz
lods
inc
loop
dec
lret
sbb
xchg
ds
jmp
scas
jnp
fs
addr16
nop
adc
jb
pop
push
test
jmp
lret
add
outsl
hlt
mov
cmp
sbb
mov
or
jge
xor
mov
adc
popf
sti
mov
test
jnp
ret
loopne
xchg
add
sub
pop
test
shll
push
or
std
and
stos
xchg
mov
push
lock
jg
stc
or
xchg
popl
xchg
fidivl
ret
cld
push
xchg
mov
filds
ffree
ljmp
imul
pusha
cmp
mov
push
cmpsb
push
mov
jns
fwait
in
pop
xlat
loope
push
jmp
scas
notrack
jg
sub
mov
mov
ret
push
subb
ja
sub
filds
pop
mov
mov
test
jne
inc
or
jg
lret
cwtl
jp
dec
sti
ss
sbb
and
repnz
ljmp
icebp
bound
inc
shl
fsubl
cmc
xchg
mov
add
mov
fs
mov
xchg
add
mov
pushl
ljmp
cmp
add
sar
jecxz
xchg
sbb
data16
loope
incl
jge
xlat
into
xchg
lahf
popf
cltd
push
jmp
mov
push
sub
leave
je
outsl
cld
pushl
jg
sbb
lods
lods
lret
jbe
dec
xchg
outsl
mov
xor
or
and
and
mov
or
push
jmp
mov
add
xor
mov
dec
xchg
in
in
dec
ja
mov
into
out
jo
pop
shlb
sbb
in
mov
or
out
mov
push
lret
bound
aas
js
mov
add
cmc
fbld
ficoml
in
dec
inc
test
mov
xchg
pop
mov
pop
push
push
shlb
movsb
sbb
incl
dec
mov
cli
shr
movd
repnz
jg
mov
sub
leave
sbb
mov
pop
lods
dec
ds
jg
or
decb
les
cmp
mov
pop
jnp
scas
cmp
fsubrp
fsts
xchg
dec
xchg
pop
scas
mov
or
das
lock
xor
jnp
xchg
out
out
fdivr
jge
in
incl
ljmp
sub
stos
or
mov
gs
sub
inc
sub
and
cmp
xchg
pop
popf
mov
or
xlat
imul
movsb
mov
push
repz
add
push
decl
sub
addl
lods
gs
cmp
jae
xchg
out
adc
lods
movb
loop
sub
mov
filds
popw
orl
dec
inc
mov
pop
pusha
insb
arpl
mov
fiaddl
mov
loopne
xor
std
pop
cmpsl
les
dec
call
cli
scas
push
daa
jg
pop
insb
sbb
pop
outsb
adc
jle
notl
clc
incl
outsb
xor
push
pop
iret
icebp
rcr
lret
aad
cmpsl
loop
xchg
mov
repz
add
fisubrs
in
andl
or
sub
test
leave
mov
jmp
xchg
cs
in
outsl
icebp
push
shl
pop
xchg
push
mov
jbe
fwait
out
subl
mov
add
sbb
call
ret
inc
or
jmp
insb
mov
sub
xchg
cli
ror
cld
call
pop
int
xchg
aad
std
mov
cmpl
adc
mov
loopne
jl
add
xorl
cmp
pop
incb
pop
adc
or
cmpl
and
cli
aaa
clc
mov
imulb
mov
dec
clc
outsl
lock
xchg
stos
mov
test
aaa
mov
cmp
xlat
fidivl
cmpsb
leave
repnz
mov
or
std
mov
movsl
jecxz
or
out
mov
add
cld
ret
std
in
loope
xor
inc
inc
dec
mov
loop
std
adc
jl
rolb
or
cld
lods
out
mov
push
jl
pop
add
test
inc
dec
pop
mov
add
sub
je
xchg
mov
add
sub
pop
push
mov
sahf
xchg
jmp
cmp
jbe
fstps
mov
clc
fnstcw
mov
mov
cmp
repnz
hlt
bound
jae
sahf
dec
xchg
push
lea
pop
clc
sub
pop
pop
mov
xor
xchg
and
cs
jo
pop
ja
ss
mov
outsb
add
or
imul
xor
jg
dec
sbb
decl
xchg
pop
sub
flds
fsubr
std
or
ljmp
in
enter
jbe
cvtpi2ps
fisttpll
sub
test
inc
stos
call
mov
lret
ds
mov
nop
xchg
dec
push
xchg
sub
out
and
aad
mov
in
mov
jno
push
push
loop
std
call
hlt
dec
xchg
fcmovb
adc
dec
push
push
lret
or
lods
decl
sub
test
orl
and
push
push
aaa
clc
outsl
cmp
cmp
adc
inc
jl
jno
or
pushf
mov
push
xor
jae
xchg
pop
loop
jno
aad
pop
ror
movsb
scas
nop
not
or
xor
inc
and
lds
add
cmove
or
mov
mov
or
sar
sbb
outsl
mov
scas
imul
shrl
outsl
mov
lock
addb
mov
mov
insl
dec
mov
ljmp
mov
xor
push
cmp
in
mov
push
jae
mov
xchg
sahf
mov
ficomps
mov
lcall
and
sbb
mov
in
fcomi
adc
lds
popf
mov
in
cmpsb
std
incl
scas
dec
jnp
adc
push
leave
mov
dec
dec
cli
dec
pushl
and
cmp
sbb
mov
mov
dec
push
push
ja
mov
pusha
orl
pop
insl
stos
int
push
enter
inc
test
andl
pop
push
mov
mov
mov
pop
sbb
xchg
inc
loope
aas
push
push
mov
call
or
mov
popf
lret
fcomps
cmp
sbb
mov
cwtl
mov
fcomp
imul
lcall
scas
dec
push
adc
mov
mov
ljmp
decl
pop
mov
push
fwait
rorb
gs
add
dec
std
pop
fcompl
inc
test
pop
imul
mov
and
lea
cmp
insl
sbb
inc
and
cmp
fisttpll
rolb
mov
pop
jl
pop
sbb
aas
mov
fildl
mov
scas
lock
insb
lea
jg
xchg
movsl
jne
and
je
xor
sbb
test
aad
test
ss
call
imul
mov
xor
inc
test
mov
cli
cs
adcl
inc
sbb
shlb
mov
popf
hlt
sub
loope
test
lret
fistpl
ret
adc
test
jno
adc
lock
pushl
jecxz
inc
inc
orl
cltd
mov
push
inc
cmp
and
dec
je
inc
pop
js
lcall
rcrb
xchg
and
push
lods
enter
clc
fcomi
mov
daa
roll
add
or
repnz
imul
lock
mov
dec
mov
or
inc
mov
mov
cld
lcall
testl
ret
stos
std
stos
push
and
lods
sub
jbe
mov
lret
sub
xlat
cmovg
es
int3
xchg
imul
lods
movb
cmp
inc
cmp
aas
stc
mov
mov
sub
pop
pop
cmpsb
xchg
bound
es
sub
jmp
movsb
dec
and
lds
rcrl
adc
inc
bswap
imul
add
pop
clc
orb
testl
daa
popa
mov
mov
and
loopne
lcall
int
in
or
arpl
mov
sub
loopne
outsl
je
push
push
into
xchg
pop
jp
inc
or
mov
xor
mov
stc
xor
lds
imul
jmp
cmp
gs
push
out
jae
ficompl
jge
xor
insb
xchg
mov
jnp
out
sbb
ljmp
inc
mov
mov
aaa
movsl
hlt
movsb
pushf
and
pop
pop
jmp
mov
jo
insl
mov
jp
mov
mov
mov
xchg
cld
push
lcall
shrb
shr
aaa
inc
push
ljmp
mov
fnstenv
and
test
jl
xchg
in
insb
mov
scas
std
pop
fldl
lcall
sbbb
or
stos
aad
xchg
jmp
add
add
xchg
icebp
call
push
adc
test
mov
jmp
sbb
jg
mov
in
xchg
into
movb
movsb
push
lea
xchg
jge
or
sub
push
cmp
int3
jae
gs
gs
xor
cs
loop
ljmp
push
imul
or
add
hlt
fistpll
sahf
out
push
add
push
and
mov
ds
xchg
mull
pop
add
sub
push
cmp
ficomps
or
add
push
dec
push
cmp
push
aaa
add
pushf
push
ljmp
or
push
and
push
nop
or
or
push
cmpb
sub
mov
inc
inc
add
xor
dec
xlat
inc
fisttps
mov
jecxz
xchg
shll
add
mov
mov
add
cmp
jbe
in
push
sub
push
or
or
pop
mov
push
and
add
rcll
add
mov
mov
mov
pop
cld
mov
repnz
stos
push
push
rorl
jge
stos
xchg
mov
cmp
leave
sbb
test
test
mov
inc
in
push
push
jl
adc
mov
inc
inc
xchg
mov
adc
insl
push
jno
clc
hlt
and
inc
sbb
repnz
lret
push
cmpsl
movl
cmp
icebp
icebp
mov
sbb
fisubs
cmp
dec
scas
inc
scas
sub
adc
fldenv
jg
jno
push
fidivs
push
outsl
fistpl
xchg
call
sub
mov
push
or
dec
push
pop
je
clc
out
sahf
push
in
or
aas
or
add
das
cmp
mov
mov
pop
orb
lods
push
fnsave
add
std
fsts
cmp
fsubrs
imul
add
inc
test
mov
push
or
sarb
inc
mov
add
pop
js
fistpll
mov
es
and
cmp
mov
pusha
je
cmp
mov
loop
ret
jg
sti
push
scas
int
les
mov
enter
int
rclb
test
mov
mov
mov
lret
scas
mov
fildl
jns
shlb
fs
lcall
or
xchg
insb
std
dec
ret
ret
pop
mov
lahf
shl
das
or
push
scas
in
inc
pop
push
daa
andb
inc
aaa
out
clc
rorl
insb
mov
cmp
dec
lods
adc
icebp
sarb
and
sub
aam
inc
imul
daa
or
push
sahf
popa
sbb
xchg
scas
imul
sbb
sub
in
lods
jmp
imul
cmp
inc
call
aaa
outsl
pop
xor
cmp
adc
shrl
lret
das
aaa
and
mull
inc
aas
jmp
jg
cmpsb
imul
sub
inc
add
jle
pop
sysret
mov
push
sahf
rorb
cmp
mov
pushf
add
push
mov
cmpsl
and
mov
push
mov
jp
ret
push
das
push
or
jnp
in
mov
dec
cmpl
std
cmc
or
sbb
ss
jecxz
xchg
scas
cld
cmp
inc
mov
fists
xchg
cmpsb
mov
pop
xchg
js
orb
rorb
jbe
cmpsl
std
mov
sub
shl
xchg
push
push
lods
dec
push
hlt
lds
pop
push
mov
in
adc
mov
and
jecxz
incb
push
popf
lret
and
push
add
aaa
ret
fmull
sub
xor
inc
andl
iret
pushl
jns
call
push
flds
add
mov
jno
test
pop
mov
out
dec
ljmp
orl
add
jl
cmpsl
sub
lock
ljmp
jge
jno
in
cmp
mov
push
cmc
dec
pop
andl
repz
shlb
sahf
push
rep
cmpsb
pop
and
cs
lcall
mov
push
inc
popa
sbbb
pop
mov
lret
movsl
adc
repnz
movl
adc
loope
insl
mov
popa
jl
cmpb
mov
jno
hlt
js
in
push
fsub
lock
call
addr16
push
add
pop
push
lret
or
stc
testb
mov
push
ret
sbb
dec
test
xor
dec
mov
aam
mov
push
dec
mov
pop
push
pop
enter
aaa
aas
pop
shl
jne
loope
out
das
jecxz
and
adc
nop
sub
sub
mov
sahf
dec
push
rol
add
repz
inc
rorb
fmuls
test
add
outsb
pop
mov
inc
inc
loope
mov
sbb
jmp
push
mov
lods
aam
xor
jg
iret
push
xchg
mov
imull
adc
lock
push
jle
mov
andl
pop
pop
sbb
cmp
popf
pop
rcrl
test
push
xlat
xchg
push
cmp
xchg
jecxz
into
sbbl
xchg
call
or
lcall
xchg
rcrl
stc
mov
test
add
pusha
fwait
add
aas
iret
hlt
xor
mov
aam
and
xchg
int
call
sahf
out
outsl
mov
push
mov
xor
pop
xor
jne
call
jo
out
push
mov
scas
decl
adc
push
fsubrp
mov
jmp
in
xchg
or
fwait
mov
add
xchg
hlt
jg
lahf
sub
xor
push
mov
sti
pusha
or
jb
lods
loope
jae
jle
xorl
jno
push
inc
in
and
push
stc
aaa
stos
mov
fisttpl
push
aad
test
sub
ja
or
jge
shlb
negb
mov
dec
imul
lock
fmull
push
outsl
in
sbb
rcl
pop
cmpb
cvtps2pi
fmuls
adc
es
enter
jae
in
scas
stos
aam
call
sub
int3
aaa
imul
shrb
fcmovnb
mov
sbb
lea
scas
mov
xor
xor
loopne
loopne
push
jae,pn
aad
pop
add
lcall
lcall
sahf
sub
mov
fidivs
cld
pop
push
adc
ret
ficomps
cld
mov
add
mov
xchg
or
ljmp
adc
mov
daa
ss
pop
pop
cs
ja
mov
adc
xchg
js
cmp
mov
mov
pop
mov
fistpll
or
and
dec
pop
lods
jge
mov
mov
and
xchg
pop
jl
pop
cmpsl
jmp
rolb
push
and
out
cmp
popa
fisttpll
negb
loope
test
push
stc
pop
jmp
jl
cmp
push
push
inc
mov
fs
inc
or
pop
ret
mov
xorb
pop
jl
call
jp
mov
mov
data16
stos
pop
shrl
push
pop
mov
sbb
repz
insl
fwait
ret
mov
mov
imul
mov
dec
js
or
fildll
fistps
stos
sub
jo
jo
insl
cmp
add
or
imul
inc
pop
lahf
adcl
imul
call
push
shrl
sbb
push
inc
mov
cmp
lock
sbb
mulb
or
popf
fidivrs
cmp
imul
adc
sub
mov
mov
sti
inc
or
mov
mov
cmpb
mov
adc
iret
pusha
enter
add
or
into
xlat
xchg
aaa
incb
pop
in
cmp
sbb
fs
xchg
mov
add
mov
loope
pop
ljmp
adc
aas
pop
subl
push
mov
data16
cmc
mov
rol
inc
movaps
mov
test
jnp
subl
stc
inc
pop
mov
imul
or
pop
test
in
mov
lret
sub
into
pusha
pop
pop
jmp
cmpsb
fsubl
pusha
outsl
lock
outsl
pop
fcmovnb
in
xchg
imul
inc
mov
loopne
inc
mov
call
or
jo
rclb
pop
nop
mov
aam
push
sbb
xor
add
pop
fists
ljmp
jno
sub
sbb
sbb
adc
adc
shr
lods
mov
push
add
jne
or
js
mov
inc
and
popf
pop
test
pusha
lods
xchg
mov
loope
cld
int3
data16
mov
mov
loopne
sbb
sub
cs
outsb
test
popf
adc
fstpl
psrad
sbb
stos
sbb
ret
jns
mov
xchg
dec
sbb
inc
stos
add
and
inc
inc
cld
insl
stc
cmovbe
sbb
pop
xchg
sbb
sbb
ror
dec
mov
adc
cld
outsl
aas
dec
push
push
data16
ret
pop
lea
dec
ja
xor
add
sarb
mov
inc
test
jno
call
and
sub
jbe
test
addr16
fmull
fildl
cmp
pop
call
cmc
pop
xor
pop
xchg
mov
or
push
and
sbb
std
sub
test
subl
cwtl
xor
inc
mov
jmp
and
pop
js
adc
adc
ret
xor
jbe
adc
idivl
nop
movsb
hlt
adc
hlt
pop
stos
ja
or
add
xor
pop
gs
pop
decl
mov
and
inc
ljmp
out
sbb
pop
mov
push
sahf
cmpsl
add
mov
xor
pop
and
jecxz
jl
fcmovu
cwtl
and
inc
lcall
das
xor
pop
insl
mov
cmp
push
popa
and
xor
enter
sar
mov
inc
gs
cwtl
jl
lods
jecxz
ds
outsb
aas
call
sub
jae
push
jns
xor
jl
lahf
outsb
pop
pop
mov
jae
inc
imul
pusha
aas
sub
mov
arpl
xor
ljmp
mov
loop
xchg
adc
outsl
xchg
xchg
mov
cmpsb
pop
das
insl
pop
jg
pop
pop
cmp
mov
in
dec
repnz
leave
and
dec
adc
daa
jle
xchg
cld
popa
push
cs
fnstenv
cmp
fcmovnbe
push
add
dec
push
sbb
mov
jmp
push
inc
dec
into
stos
pop
jnp
out
mov
pusha
add
stos
push
stos
mov
cmp
testb
adcb
and
mov
mov
push
repz
sbb
fwait
mov
imul
mov
inc
pop
sub
clc
pop
dec
xchg
pop
pusha
xor
sbb
and
dec
add
insb
icebp
fwait
mov
scas
inc
cmp
mov
dec
pop
or
ja
mov
add
inc
add
sbb
sar
std
and
inc
fwait
cld
cs
lock
repnz
rorb
arpl
add
jle
pop
fcom
or
popf
pusha
lcall
push
add
adcl
scas
loopne
cmc
pop
sbbb
pusha
adc
daa
adc
jne
aaa
adcl
rep
pop
enter
dec
bound
ja
outsl
mov
ja
sub
hlt
add
cmovl
in
jns
test
dec
ret
aaa
test
lods
fcmovnb
mov
out
pop
int3
pushf
sub
mov
sub
cwtl
test
xchg
cmp
xchg
xchg
pusha
pop
aas
lock
xorl
mov
hlt
pop
cld
sti
shr
cmp
les
xor
pop
insl
cmpsl
mov
ljmp
inc
adc
sbb
inc
ss
rolb
adc
mov
sbb
cmpsb
movsb
jecxz
hlt
dec
mov
push
xchg
push
es
jg
stc
addb
and
xor
popa
loope
dec
sbb
dec
in
popa
and
jne
pop
jge
roll
jb
mov
fldt
dec
das
sub
mov
xor
pop
pop
adc
fcmovnb
xor
pop
fsubrl
push
or
cs
pop
dec
push
stc
mov
sti
mov
outsb
imul
les
add
popf
jl
mov
js
xchg
loope
inc
and
outsl
iret
push
xlat
test
imul
sti
rol
test
mov
dec
scas
fidivrs
rolb
rorb
je
outsl
pushf
mov
sti
test
fldl
ret
xlat
int
sahf
movsb
andl
jo
lret
and
jmp
aas
dec
xchg
aad
sbb
sbb
loopne
lret
cld
fildll
fisttps
test
jb
shll
sbb
cwtl
or
addr16
mov
jg
jmp
xor
add
repnz
in
insl
xor
lods
xchg
dec
loopne
js
mov
inc
test
rep
adc
mov
mov
sahf
insb
dec
mov
ja
or
dec
jbe
pop
pop
cmp
dec
icebp
sbb
cld
push
jns
loopne
lret
or
cs
sbbl
arpl
pop
push
rcrl
dec
dec
xchg
push
push
nop
xchg
mov
hlt
lods
scas
inc
xchg
dec
push
xor
and
dec
jns
xor
mov
jno
inc
fldcw
cmpsb
ja
sbb
jne
ja
mov
out
outsl
gs
or
rcr
and
mov
dec
fsubr
mov
pop
mov
aaa
scas
stos
jns
dec
xchg
pop
lcall
add
push
jmp
or
cmp
ss
and
mov
xor
add
and
sbb
sbb
in
in
in
fdivrs
flds
inc
jl
cmp
xor
sti
pusha
mov
scas
sbb
sbb
mov
cmpsl
cmc
sub
dec
adc
push
adcb
inc
adc
lock
inc
lods
out
mov
ljmp
pop
add
pop
insb
mov
test
shll
data16
sbb
loope
adc
scas
fistpll
add
sub
mov
mov
test
jg
divl
lds
add
mov
push
decb
call
out
fmul
lods
jnp
nop
or
movsl
xor
mov
fmull
xor
push
and
push
pop
je
adc
dec
xchg
cli
iret
push
mov
test
ret
jbe
push
push
sar
mov
mov
lret
mov
mov
jne
pop
stos
inc
rep
sbb
push
sbb
mov
loopne
xor
shlb
orl
outsb
mov
loope
pop
mov
jle
rcrb
fiadds
es
or
push
adc
cmp
lock
pop
xor
orb
outsb
mov
xor
cmp
js
mov
cmpsb
pop
xor
repz
mov
das
loopne
ret
ret
mov
rclb
mov
inc
and
movl
mov
stc
push
xor
push
sbb
adc
dec
popa
rorl
push
lock
jo
xor
ds
lock
outsl
pushf
das
lcall
out
adc
pusha
inc
adc
popa
dec
and
sub
ja
add
lret
pop
sub
or
sbb
adc
rolb
push
xor
xor
in
aas
aaa
lcall
cltd
jns
repnz
out
mov
stc
cmp
int
bound
cmp
jae
das
fstpt
sub
icebp
inc
mov
je
loop
sbb
imul
sub
test
mov
fsub
push
rorl
push
jmp
popa
sbb
mov
sub
mov
jbe
mov
mov
in
testb
and
out
cmp
leave
ret
popf
sub
insl
dec
jg
out
and
imull
pop
mov
adc
push
nop
movsb
and
mov
mov
push
les
pop
fcoml
xchg
xor
filds
mov
inc
cld
push
sbb
mov
xor
xchg
in
jle
sbb
stc
cwtl
stos
lret
in
aaa
mov
push
xlat
sub
fwait
idivb
jp
cmp
test
xor
jno
xor
mov
cmp
sub
dec
push
nop
and
test
fidivs
and
movsb
lea
and
xor
add
jecxz
int
les
ret
push
fidivrs
shrb
push
and
iret
inc
adc
push
fcmovb
cmpl
hlt
jg
and
sti
lds
lods
pop
push
push
inc
sub
ja
fcmovb
lods
stos
sbbl
dec
jg
mov
inc
xor
lods
sbb
jne
cld
out
mov
scas
adc
xlat
popf
jnp
clc
leave
fmul
mov
xor
je
jbe
mov
cmp
pushl
adc
mov
mov
fistl
cmp
fdivrl
sahf
pop
movsb
push
inc
or
negl
mov
xlat
and
xchg
jbe
cmpsb
repz
fcomi
mov
add
and
xchg
les
ret
push
mov
into
mov
pusha
and
in
pop
sub
and
xor
jmp
cmp
xchg
push
lock
clc
sub
adc
call
cmp
ret
and
iret
xlat
outsl
adc
adc
fdivrp
xchg
mov
arpl
and
dec
gs
int3
jb
je
fwait
jne
and
jmp
push
outsl
sbb
cld
dec
cmp
addr16
and
stc
stc
in
pop
and
out
inc
fsubrs
outsb
popf
testb
jp
arpl
js
rcll
inc
sub
jmp
xor
inc
popf
xor
mov
mov
add
arpl
push
scas
in
call
std
fucomip
mov
imul
out
inc
adc
out
lock
mov
lods
add
cmp
jno
leave
pusha
or
ret
dec
pop
or
mov
cmpsb
cmpsb
insb
mov
adc
loope
lock
add
sub
daa
mov
mov
rcll
cmp
cs
lahf
jb
fbld
adc
ds
ret
repz
jp
das
sbb
push
out
in
fbstp
es
hlt
daa
adc
sub
inc
pop
mov
or
outsl
fcomi
shrl
mov
inc
push
add
loope
add
xlat
sahf
push
in
dec
cltd
xor
fwait
sbb
dec
in
pop
insb
fcomp
xchg
test
lea
jnp
aam
add
fcoms
jb
ljmp
or
cmp
push
jge
icebp
dec
lock
les
xchg
test
pushl
xchg
cmp
inc
pop
cmpsl
push
out
stos
cmp
pop
cli
or
xchg
sub
sub
in
lahf
insb
or
out
clc
push
movb
xchg
push
jns
jcxz
mov
shlb
addl
outsl
lret
cltd
loopne
repz
push
outsl
movl
test
pop
clc
scas
imulb
shl
enter
je
mov
sbb
dec
pop
loopne
push
sti
gs
inc
in
int3
mov
fucomp
mov
andl
ljmp
jno
inc
mov
loopne
xchg
mov
mov
sbb
call
xchg
in
iret
mov
sbb
int3
imul
cli
insb
xor
mov
imul
pop
dec
mov
mov
iret
pop
inc
out
jne
das
insb
cltd
jg
in
pop
add
push
iret
daa
imul
es
cwtl
mov
inc
xchg
lock
inc
mov
jl
out
mov
orb
mov
dec
inc
outsl
sbb
and
js
into
mov
fldenv
loope
inc
lods
lea
lods
loopne
repnz
inc
rolb
xor
mov
push
int3
faddp
dec
add
gs
daa
mov
push
xlat
push
divl
pop
ljmp
mov
pop
dec
mov
mov
loopne
ret
fs
push
ret
inc
mov
stos
pop
test
inc
push
adc
lods
cmp
mov
mov
fildl
add
hlt
push
fists
repz
daa
insb
mov
in
orl
insb
int3
cltd
mov
popa
or
movsb
inc
roll
js
xor
dec
nop
repz
jge
rcr
xchg
fstl
fidivl
xchg
cmpsb
mov
pop
mov
lods
rcl
aam
add
add
je
adc
ja
pop
jbe
sbb
push
test
lods
xchg
insl
xchg
mov
sub
sbb
rorl
nop
mov
int
push
mov
and
ss
es
jl
mov
xor
mov
pop
scas
xor
ss
cld
jl
cltd
push
jl,pn
sub
sbb
std
add
pushf
or
clc
ror
test
shll
inc
sub
xor
push
mov
outsb
push
aad
in
jns
test
ja
lock
push
mov
mov
outsb
mov
pusha
sbb
nop
pop
ror
shll
sti
test
jp
mov
arpl
ja
loope
jo
mov
sti
xchg
mov
fbstp
sarb
xor
int
icebp
sbb
inc
xor
mov
test
or
push
daa
lds
sbb
pop
js
mov
es
mov
push
mov
andb
pushf
stos
decl
or
add
das
loope
les
pop
loopne
pushf
push
fs
out
sub
sbb
je
adc
shrb
push
mov
and
xor
mov
mov
stos
inc
sbbl
jp
add
fndisi(8087
sbb
call
adcl
mov
xchg
add
outsl
inc
dec
and
pop
sub
inc
add
cltd
js
pop
leave
inc
fsub
pusha
fstl
jecxz
aam
adc
call
sahf
mulb
add
shlb
cld
mov
mov
add
dec
outsb
sahf
fisttpl
sarb
pop
imul
push
lcall
std
or
sahf
cmp
push
or
subl
bound
outsl
mov
test
out
jge
data16
movsl
pop
outsl
adc
rcl
cmpsl
fwait
jp
gs
push
shlb
mov
dec
inc
xchg
subb
xchg
push
mov
int3
outsl
std
int
inc
push
cmp
xor
adc
shl
cmp
ret
mov
popa
jmp
lahf
or
lds
cmpsl
xor
negb
out
xchg
mov
fmull
jmp
movl
aaa
loopne
icebp
and
mov
cli
imul
mov
ljmp
jl
loopne
and
outsl
movsl
mov
rcr
ret
mov
or
add
aaa
push
test
add
jle
push
fdivrl
xor
iret
out
dec
out
mov
xchg
cmp
push
aaa
fcomi
pop
in
cmp
mov
mov
add
jp
pop
cmp
ret
imul
icebp
nop
fiaddl
ds
cwtl
fstps
jmp
jecxz
adc
push
mov
jmp
inc
dec
xchg
or
hlt
mov
inc
popa
mov
cmp
rcl
mov
js
pop
and
mov
in
pop
icebp
dec
dec
push
icebp
shll
push
ret
xor
jb
xchg
fstl
xor
mov
mov
xor
jo
loopne
dec
inc
imul
sub
test
mov
mov
test
pushf
sub
mov
inc
jge
inc
ja
int
mov
xchg
mov
sbb
sbb
push
add
addb
sbb
mov
dec
mov
push
stos
mov
lret
xor
cmp
pop
popf
out
clc
sub
dec
adc
or
sub
sbb
mov
dec
xchg
xor
in
ud1
pop
or
fidivl
into
or
push
sbb
or
add
add
mov
lahf
bound
cmpsl
or
data16
or
xchg
and
sbb
mov
outsl
aas
adc
push
cli
add
lret
out
xor
shrb
push
lret
cmc
and
adc
clc
cli
stc
les
mov
fstpt
sbb
in
mov
mov
or
ss
sub
test
jno
mov
mov
pop
cli
cmpsb
out
adc
fstpt
rcl
mov
or
adc
mov
add
sub
jo
cmp
jmp
aaa
xchg
rcrl
movlps
jnp
cli
jecxz
mov
in
xlat
mov
aam
int
outsb
int
cmp
and
pop
enter
loopne
adc
or
xchg
xchg
pop
add
pop
subl
pop
adc
xor
cmp
orb
xor
sbb
dec
jb
lret
or
js
push
add
stc
adc
movsb
mov
mov
or
adcb
pushf
clc
pop
adc
fcoml
pusha
loope
addr16
frstor
and
dec
mov
add
cmp
fsub
int3
or
cmp
insb
add
dec
fcoml
mov
dec
icebp
sub
pop
loopne
dec
or
push
ds
inc
sbb
test
xor
testl
les
jg
lcall
push
add
mov
jae
hlt
sub
arpl
addr16
or
xchg
add
cmpsl
aas
es
mov
aad
repz
js
add
or
fldenv
mov
pop
xlat
ss
mov
lea
sarl
or
push
rorb
adc
sbb
outsl
jl
xchg
mov
mov
icebp
add
lock
adc
fcmovnu
cmpsl
inc
adc
pop
popf
cltd
fs
push
frstor
jmp
out
mov
xor
retw
imul
xor
push
fwait
sbb
push
in
jb
int
add
into
xor
xchg
sbb
dec
jmp
cli
mul
dec
inc
icebp
mov
adc
jg
mov
jae
rol
sub
mov
leave
in
inc
dec
cmp
xor
push
xor
cmp
sbb
cmp
pop
arpl
lock
outsl
cmp
lea
popf
not
xor
and
jo
int3
mov
into
adc
cmc
mov
mov
xor
movb
xchg
jno
pop
fcomi
pop
and
or
pusha
mov
mov
and
cmc
stos
pop
popf
fs
pop
dec
add
jecxz
ljmp
insb
mov
ret
lock
mov
xlat
inc
pop
cmc
cmp
shll
jl
jo
hlt
shll
add
and
mov
inc
mov
xor
pop
rorl
ja
je
add
rep
sub
pusha
adc
sub
adc
cltd
jle
cs
getsec
xchg
filds
xor
jo
push
adc
fadds
rcl
aad
test
mov
rolb
lahf
push
adc
or
and
push
xchg
movsl
jbe
push
pop
cltd
cmp
icebp
rorb
movswl
int
sbb
in
push
or
dec
add
insb
adc
scas
insl
fistpll
dec
mov
dec
pop
jae
adc
add
cmc
pushf
pusha
or
dec
std
cltd
jle
lock
pop
dec
or
pop
sub
add
adc
or
fbld
outsl
fwait
xor
add
dec
add
mov
add
inc
cmp
mov
xor
pop
jae
aam
lock
mov
mov
pop
lahf
jae
es
js
push
jne
fidivl
movsb
mov
mov
je
fwait
dec
and
hlt
lahf
fdivr
int3
jae
adc
pop
mov
adc
int
es
scas
mov
mov
movsb
xor
cmpsb
push
fnstsw
jmp
lret
mov
out
and
cmc
shll
aaa
adc
and
add
cmpsl
js
pop
jno
add
cmp
insl
xchg
add
das
push
sub
jo
stos
sbb
inc
jmp
dec
icebp
fistps
cmp
stos
and
sbb
aam
insl
enter
rcrb
icebp
aas
or
hlt
addr16
rcrb
cmpsb
xor
lret
dec
call
adc
cld
shrb
mov
cmp
enter
xchg
fsubr
mov
mov
mov
addb
test
aaa
jg
push
in
arpl
stc
bound
mov
push
testb
in
adc
mov
lock
xchg
jae
pusha
loope
cltd
sbb
mov
pop
pop
outsl
outsl
mov
pop
cmp
js
mov
and
subl
xchg
in
push
in
icebp
out
orb
lods
or
xchg
scas
mov
xchg
in
mov
mov
pop
sbb
adc
jge
out
movd
shll
pop
hlt
fidivrl
push
sbb
add
cmpsl
or
insb
incl
cmp
pop
and
aad
aam
fstl
jo
pop
xor
sarl
add
rcl
aas
insl
sbb
inc
mov
outsb
xchg
mov
mov
ljmp
loop,pt
xor
xchg
push
pop
into
test
rorb
sbb
xor
pop
mov
or
xchg
popf
or
popf
pop
subl
ljmp
stos
push
jecxz
push
loopne
pop
cs
fdivs
adc
ret
pop
cmpsl
movsl
shll
push
pop
imul
inc
es
daa
insl
dec
push
js
es
ss
mov
lds
sti
loop
mov
inc
inc
xchg
and
xchg
loop
jp
insl
fnstsw
loope
jno
cs
xor
fcmovnbe
mov
jecxz
clc
inc
mov
xchg
inc
push
adc
into
ljmp
dec
jbe
rol
cli
outsl
out
loope
lcall
test
add
mov
xchg
mov
aas
hlt
lods
out
out
mov
loope
orl
lret
pop
mov
sti
push
inc
jns
xchg
stos
pop
shrb
out
add
lahf
sub
sub
mov
pop
lcall
dec
xchg
cmp
mov
pushf
pusha
jb
or
out
clc
sbb
jge
inc
xchg
mov
in
sub
pushl
add
push
push
push
adc
push
aas
in
pushl
call
leave
ret
daa
loopne
inc
xor
lea
push
push
mov
call
dec
hlt
push
push
call
add
dec
add
adc
sub
jmp
je
fisttps
push
push
push
push
call
fdivr
incl
lock
mov
sbb
neg
jmp
jnp
pop
in
push
push
pushl
hlt
push
add
jnp
call
mov
in
sbb
sub
push
in
sbb
xchg
insl
push
xor
idiv
jle
push
or
es
adc
neg
dec
adc
inc
adc
sub
mov
aas
mov
push
arpl
push
add
dec
dec
and
dec
outsl
xchg
ret
dec
neg
jmp
rcll
ret
add
neg
add
sbb
mov
xlat
adc
movl
sub
pop
inc
mov
push
adc
and
mov
inc
adc
fxch
ret
imul
js
jmp
pop
cld
push
mov
pop
add
push
or
ja
push
push
or
clc
xor
popf
inc
add
push
in
xor
test
clc
inc
inc
cmp
xor
aas
jecxz
pop
push
lea
fcomip
fcomi
rorb
add
jecxz
das
hlt
jmp
dec
mov
imul
push
js
push
call
jmp
add
sti
sbb
sub
add
jmp
rorl
mov
inc
mov
xchg
push
or
out
inc
fsubr
andb
fldenv
and
cwtl
call
mov
dec
mov
call
cmpsb
and
dec
xchg
vprotb
push
je
add
clc
xlat
sti
rorl
add
and
fs
jbe
fwait
sub
inc
gs
adc
push
push
xor
inc
call
mov
lods
adc
dec
push
dec
mov
xor
jns
call
dec
xchg
jnp
testb
push
and
mov
fldl
add
test
mov
fwait
sbb
jbe
jb
insb
shr
push
insl
ret
sti
jns
je
jmp
call
xor
das
xor
fs
sbb
and
out
cmc
lds
push
dec
arpl
fildl
subl
es
dec
push
push
push
inc
inc
dec
jo
pop
pavgw
cmp
shlb
mov
push
clc
ja
add
ret
pop
call
clc
loope
int
pop
je
push
in
call
jge
mov
outsb
push
push
pop
ja
dec
insl
dec
push
inc
addr16
or
push
pusha
rolb
int3
test
in
call
sbb
inc
sub
mov
fdivrs
jl
lock
push
les
jo
stc
rcl
mov
jbe
pop
jb
scas
ror
bound
bound
mov
pop
decb
push
ja
lods
scas
insb
insl
repz
xor
loop
inc
xor
pop
fidivl
dec
add
xor
push
pop
dec
push
arpl
mov
jne
or
jge
aaa
and
xchg
aas
ret
cld
mov
call
or
aaa
addr16
dec
sub
push
fcmovu
xor
bound
cmp
push
aas
inc
push
sub
push
mov
incb
push
pushl
js
fidivs
adc
add
sub
push
sbb
inc
push
outsb
adc
and
sub
fists
fsubrs
cli
adc
add
jle
jge
sub
and
add
dec
jmp
and
les
push
xchg
bound
rorl
dec
push
insb
push
and
jo
push
and
mov
cmp
mov
call
or
or
dec
xor
jb
cmp
xor
ss
sbb
and
je
push
xchg
sub
xchg
negl
dec
push
jno
pusha
call
loope
xor
iret
cmp
xlat
mov
add
cs
jmp
sub
xchg
enter
push
cmpsb
xchg
and
stos
xchg
xchg
inc
cmp
test
mov
dec
inc
pop
or
cli
jecxz
xlat
push
lds
mov
call
add
sbb
jb
inc
imull
shl
outsl
or
repnz
push
sbb
push
dec
adc
pop
inc
sbb
and
dec
pushl
sbb
ret
not
inc
pop
test
test
push
jae
jo
lahf
into
negl
scas
dec
out
aam
inc
outsb
or
imul
dec
mov
mov
and
sti
mov
add
in
aad
cmp
hlt
jle
pop
xor
sub
dec
mov
fadds
push
xor
jle
mov
ja
ss
imul
add
std
or
add
jo
or
ret
jg
dec
push
xor
xchg
push
jb
mov
xchg
inc
call
sbb
clc
ja
pop
adc
stc
sbb
add
inc
adc
dec
dec
mov
mov
imul
dec
inc
dec
in
ret
inc
push
dec
test
xor
cld
xor
xor
push
call
sbb
xchg
and
outsb
adc
fidivrs
jmp
or
add
hlt
mov
sbb
imul
or
dec
mov
shll
or
lods
xchg
stos
mov
out
sub
cmp
cmp
push
sub
inc
jmp
pushf
icebp
xor
jbe
cmp
shll
xchg
dec
adc
ss
push
clc
add
push
sbb
loope
mov
fisttpl
rcrb
sti
sub
inc
jnp
mov
faddl
pop
jne
fs
push
das
jno
xor
outsl
out
movsl
inc
adc
xor
jl
enter
pop
addl
lea
lock
or
push
addr16
aas
pop
jo
inc
add
sbb
push
jbe,pn
mov
cmp
hlt
arpl
mov
cmp
rorl
in
push
hlt
mov
cmp
and
jne
xchg
call
mov
cld
dec
sub
jmp
in
int3
sub
inc
imul
cld
add
adc
aam
mov
fcomp
adc
sarl
mov
jmp
fidivrl
jne
inc
push
jns
push
jl
mov
arpl
cmp
push
arpl
jb
jbe
stos
mov
call
sbb
inc
sarb
push
insb
sub
popa
je
sbb
mov
xor
add
sbb
mov
mov
sbb
mov
and
fs
dec
out
popa
dec
adc
enter
add
jmp
push
sbb
js
push
sbb
rcl
fadds
sub
clc
scas
sbb
cmp
push
bound
imul
clc
mov
mov
jbe
jo
les
imul
test
inc
inc
adc
es
mov
dec
push
cmp
cmp
ret
push
and
lcall
ret
inc
add
inc
jmp
mov
test
int3
adc
mul
cmp
test
adcl
jp
inc
inc
pop
xor
gs
call
xor
jg
dec
outsl
mov
xor
sub
pop
lret
add
jp
or
fisubl
push
pop
jo
dec
xor
pusha
jg
push
call
pop
and
jnp
mov
xor
and
sub
inc
imul
lea
jmp
int3
push
jmp
andl
loopne
cld
into
lock
jno
outsl
repnz
into
dec
dec
jno
leave
add
dec
fldt
cmp
mov
pop
lcall
cmp
inc
jmp
ja
push
xor
pushf
jne
fstpl
mov
xor
add
sbb
push
adc
shr
scas
dec
mov
aad
xor
push
iret
cmp
jo
les
and
push
add
jmp
inc
aam
mov
inc
dec
inc
pop
outsb
push
mov
push
call
hlt
and
ja
je
addr16
push
fmul
call
out
inc
int
cli
xchg
and
shl
add
push
pop
data16
push
mov
push
mov
mov
aaa
mov
nop
out
inc
adc
cltd
inc
push
push
test
dec
push
pop
imul
xor
mov
xchg
mov
inc
outsl
mov
push
enter
imul
fsubl
outsl
inc
jb
je
pusha
xlat
test
adc
jg
lret
iret
xor
pusha
jmp
adcl
fisubs
repz
mov
out
fildll
imul
outsb
aaa
push
mov
arpl
cmp
outsl
adcl
dec
es
sbb
xor
movsb
push
cs
push
bound
jbe
push
dec
push
push
addr16
pushf
imulb
xor
scas
inc
add
stos
add
push
ret
jmp
or
inc
add
adc
ds
lret
push
out
jb
add
push
cld
cmc
push
and
pop
sbb
js
insl
inc
push
pop
inc
or
outsl
xchg
sbb
pop
sbb
jne,pt
testl
add
xor
loopne
and
mov
repz
loopne
push
push
das
jl
ret
leave
adc
in
push
ja
outsl
push
add
pop
mov
or
xor
xor
push
and
addl
hlt
push
test
push
fiaddl
mov
push
xchg
jne
sub
sarl
push
fmuls
or
add
mov
sub
push
mov
mov
inc
fs
push
mov
adc
and
cs
and
fidivrs
inc
dec
push
mov
add
mov
mulb
aaa
js
test
sbb
adc
dec
pop
cmp
sbb
add
sub
jmp
mov
and
adc
call
roll
cmp
push
cltd
mov
dec
mov
sarl
pop
add
xlat
jmp
popa
push
sub
lock
jmp
xlat
dec
push
imul
dec
cmp
divl
outsl
pop
loop
add
dec
data16
inc
dec
aaa
inc
arpl
ds
xchg
ja
and
mov
adc
push
inc
jmp
cwtl
icebp
rcll
cmp
test
inc
out
jae
pop
call
push
ret
rcl
add
inc
add
test
lret
inc
aam
rorl
adc
adc
dec
add
test
sti
add
inc
jmp
not
and
xchg
xor
jecxz
xor
dec
scas
cmp
fwait
call
movsb
lock
incb
push
ljmp
sti
sub
adc
mov
push
das
push
sahf
inc
add
lahf
pop
sub
add
pushw
inc
adc
fcomp
adc
jmp
adc
psllw
jae
inc
push
lret
xor
je
sbb
iret
push
jbe
sub
insb
xchg
dec
aaa
push
push
outsb
mov
pop
inc
cmp
push
popa
xor
shl
xchg
leave
jbe
fsub
and
inc
xor
push
cld
cmc
gs
ret
shrb
inc
data16
js
mov
jo
dec
xchg
rcrb
lds
lock
sub
repnz
clc
mov
pop
jo
or
jmp
cld
mov
insb
pop
outsl
jo
mov
aam
jno
imul
add
mov
divl
testb
inc
pop
dec
imul
jp
and
cwtl
insl
arpl
jg
sarb
xor
stos
stc
lret
mov
push
outsb
sub
cld
dec
fidivrs
clc
xor
jmp
cmpsl
mov
ljmp
mov
dec
xor
pop
js
dec
inc
xchg
mov
je
push
add
push
lock
sbb
jno
push
outsb
into
std
inc
ss
dec
or
and
ds
xchg
push
popa
test
or
fildl
inc
insb
push
insl
out
jg
mov
hlt
push
add
imul
outsb
or
and
loopne
sti
mov
sbb
xchg
adc
push
insb
sbb
mov
rclb
or
mov
jbe
fiadds
push
push
or
add
or
push
dec
push
push
push
ret
adc
add
insl
stc
iret
jle
jnp
or
push
push
sbbl
cli
inc
add
mov
mull
cmp
mov
push
jbe
push
cwtl
jle,pt
jg
fisttpll
push
push
lret
mov
mov
iret
sbb
pop
push
sbb
aaa
inc
push
or
adc
or
push
std
jg
das
fbld
push
add
aad
popf
int
cmpsl
add
icebp
xchg
outsl
aaa
mov
mov
dec
cmpsl
sbb
jo
adc
fnsave
dec
push
ret
sbb
push
ljmp
nop
and
cmc
push
and
mov
push
in
push
inc
and
dec
push
jno
ret
add
scas
cld
out
dec
adc
push
push
je
int
popf
jp
push
jne
outsl
push
das
mov
lcall
push
pop
sahf
adc
insl
fildll
jne
aam
rorb
insb
inc
pop
das
imul
rcll
push
outsl
or
in
pop
jg
ret
sahf
insl
js
sub
mov
push
popa
aas
enter
daa
mov
xorl
fsubl
mov
lods
loopne
in
mov
push
sbbb
icebp
push
cltd
jo
in
xchg
imulb
jge
dec
jae
loope
xchg
mov
cld
jbe
movsl
or
add
sbb
pop
mov
or
push
adc
push
xchg
rorb
mov
loope
mull
or
mov
fbld
adcl
cmp
jl
cmp
dec
mov
repnz
sbb
lret
nop
out
jl
push
add
adc
in
inc
inc
gs
popa
push
sbb
push
push
iret
pop
test
pop
jg
js
pusha
js
xor
bound
insl
push
mul
mov
imul
call
push
fwait
pushf
adc
mov
add
push
in
jge
xor
scas
pop
fucom
jae
mov
cmp
xchg
jmp
mov
stos
pop
test
jb
jmp
decl
lahf
or
push
mov
lds
cwtl
fcompl
imul
pop
das
jl
imul
add
xor
loope
fbstp
xchg
adc
cmpsl
rolb
lcall
in
ret
test
insl
out
mov
and
arpl
int
in
add
out
out
div
mov
mov
jp
mov
clc
inc
pop
pop
add
and
ss
mov
pop
inc
pop
mov
jle
sub
xchg
and
movsl
and
push
jg
cs
jmp
cmp
dec
pusha
adc
add
and
or
sub
push
push
cmp
daa
add
fmull
outsl
pop
cmpsl
xor
call
test
push
push
xchg
test
sub
addr16
push
mov
xor
jge
call
leave
aas
sub
shlb
xor
sti
fildl
dec
xchg
xor
in
sbb
and
fcmovnu
push
arpl
add
mov
xchg
ss
rcrb
xor
sbb
pusha
popa
sub
xor
mov
jle
data16
add
sbb
pop
and
adc
and
mov
and
js
aas
push
push
fcmovne
insl
mov
daa
jmp
push
rclb
mov
ret
pop
test
adc
push
call
xchg
pop
push
inc
ret
push
addr16
movsl
movsl
and
mov
mov
mov
fisttpll
out
push
mov
daa
cld
adc
sbb
pusha
es
sub
testl
sbb
enter
movsb
sbbb
test
andb
cmpb
pop
sbb
rclb
ret
dec
push
add
mov
inc
ja
ret
xchg
push
push
adc
jge
rcll
lods
fldcw
les
mull
fwait
xchg
jg
lds
sti
lods
es
jg
jle
jmp
cld
lahf
sti
cmp
mov
fwait
out
sarb
leave
add
xchg
pop
clc
rcll
add
cmp
gs
push
fcmovb
pop
adc
pop
add
jae
loop
add
mov
addr16
dec
mov
xor
cmp
sbb
aas
loop
jle
arpl
shrl
pop
mov
pop
fistpll
xor
lret
ret
stc
pop
add
idivl
enter
or
mov
mov
jb
aas
jecxz,pt
call
add
push
fbstp
add
jb
fisttpll
xchg
in
inc
cmc
inc
dec
stc
dec
sub
mov
mov
mov
mov
mov
pop
jecxz
sbb
inc
add
cmp
repz
adc
and
dec
pop
add
ja
lcall
adc
shll
shl
pop
pop
mov
lods
fiaddl
sbb
pusha
fisttpl
fldcw
jns
cmp
clc
movsb
lock
dec
sarl
push
sub
in
xchg
in
shlb
fnstenv
shlb
and
in
push
movsl
and
jp
and
dec
xor
out
les
mov
outsl
fisttpl
push
ds
jle
cmp
xchg
in
int
into
push
and
push
fs
call
test
inc
or
sub
jmp
dec
push
cs
push
push
push
add
dec
test
jns
mov
fisttpl
es
push
stos
dec
inc
jae
jmp
lds
mov
mov
push
bound
push
mov
sbb
pop
pop
cs
mov
clc
test
sub
leave
sarb
fucom
mov
mov
sbb
outsl
push
jb
adc
xchg
jbe
mov
aaa
and
mov
sub
adc
iret
jns
mov
adc
scas
dec
loopne
mov
inc
cwtl
push
rcl
ret
rorb
call
sahf
fistl
fstpl
mov
decl
inc
fsubrs
mov
jl
pop
aam
orb
fcompl
into
mov
xchg
cmp
ss
add
dec
enter
movsb
and
pushl
iret
sbb
lret
test
scas
mov
adc
dec
mov
mov
jl
mov
jns
ret
repnz
add
mov
aaa
pop
push
test
pop
cld
or
jmp
out
pop
js
cs
and
push
and
push
stos
mov
loopne
cli
lea
sbb
orb
or
lock
int
pop
loopne
cmp
or
out
xchg
cmp
movsb
sbb
or
shlb
or
cmp
incb
push
sbb
test
inc
clc
mov
icebp
pushf
push
add
cli
lods
dec
pop
mov
repnz
repnz
in
adc
pushf
movd
inc
add
ja
cld
xchg
fldcw
ljmp
sbb
jp
je
lret
xlat
insb
push
aad
pop
or
mov
sbb
jae
inc
pusha
lods
jg
outsb
cwtl
bound
fiaddl
xor
and
push
dec
and
lock
mov
fisubs
mov
pop
mov
xchg
inc
inc
repz
cmpsl
cmp
test
mov
mov
inc
add
loope
je
test
nop
lock
mov
pop
inc
pusha
pop
clc
jge
mov
fisttpl
adc
fcmovnbe
pop
push
sbb
adc
orl
pop
cmp
arpl
movsl
pop
sbb
lcall
pop
inc
adc
out
scas
scas
pop
div
lcall
cmpsb
pop
dec
test
add
mov
in
aad
lods
and
lods
jg
or
shr
sbb
fidivrs
out
fcompl
sub
adc
call
mov
incb
xorb
inc
fs
pop
pop
mov
lret
test
dec
cmp
and
jbe
ljmp
jno
push
push
or
push
xor
cmc
jmp
pop
or
out
daa
aam
mov
in
imul
fstps
push
jle
inc
fbstp
jge
xor
lahf
clc
add
adc
pop
xor
test
jecxz
pop
imul
in
mov
inc
loope
outsl
fs
shl
test
xor
or
les
mul
inc
push
mov
jecxz
roll
sub
fsubl
xor
and
bound
push
nop
xchg
xchg
xchg
mov
cmc
out
mov
jge
pushf
mov
pop
out
imul
mov
adc
inc
lcall
inc
add
mov
arpl
lcall
cmc
fwait
shlb
shlb
mov
loope
mov
pop
xor
icebp
fucomip
jb
leave
fmuls
adcb
push
js
decl
jg
inc
fisubl
mov
sbb
popa
push
sbb
outsb
mov
aaa
xor
xchg
push
popa
in
lahf
stc
lcall
bound
xlat
jae
flds
add
ret
dec
and
push
and
sahf
fists
arpl
div
sbb
xchg
rol
xor
xchg
push
leave
dec
or
es
xchg
mov
popf
ljmp
sub
inc
idivl
or
lret
fisttps
add
loopne
lds
shlb
subb
scas
sub
scas
ds
data16
cld
adc
daa
push
pusha
and
jp
xchg
out
cltd
aam
cwtl
lea
ljmp
inc
or
or
dec
sbb
insl
nop
mov
pop
hlt
pop
bound
das
or
and
stos
add
fistpll
inc
pop
int3
push
test
mov
enter
push
je
std
xchg
out
or
ret
lret
fcomps
loopne
cli
arpl
mov
insl
add
and
scas
divl
add
lods
lock
pop
cmp
push
add
sub
mov
cmpsl
sbb
fistpl
dec
mov
negb
jl
and
leave
pushf
xor
rorb
sbb
adc
and
repz
mov
adc
out
lcall
test
mov
loopne
mov
call
mov
test
jno
imul
pop
pushf
jb
mov
push
mov
pop
leave
jnp
inc
loopne
cmc
mov
sub
nop
jge
cwtl
loope
sub
movb
jl
cmp
pop
cwtl
push
or
out
push
pop
mov
in
ret
add
sbb
mov
and
dec
xor
mov
xor
stc
js
sbb
inc
push
out
dec
notl
jg
push
mov
fwait
roll
testb
sub
int3
mov
call
mov
xor
xchg
sbb
addl
in
mov
add
in
pop
xor
inc
xorl
ret
scas
cmpsb
mov
ljmp
jmp
subb
repnz
pop
daa
insb
jnp
rcl
and
inc
addr16
out
inc
ss
and
add
jp
push
cmp
mov
mov
mov
push
xchg
cmp
jno
mov
inc
pop
push
cmc
sub
jb
clc
dec
out
xchg
dec
out
mov
push
sbb
mov
shll
sbb
dec
es
add
adc
test
and
arpl
fwait
call
test
mov
pop
jl
pop
add
adc
test
mov
nop
fcmovbe
shrb
mov
mov
insl
in
xchg
xor
lock
popf
lcall
mov
aam
and
sub
mov
fadds
adc
jns
sub
cmp
jg
jge
mov
push
or
pop
lret
push
test
sub
sti
testl
jl
jbe
inc
stc
push
insb
in
mov
pop
cli
pop
cmpsb
pop
fdivl
pop
dec
pop
aam
subb
or
or
or
popa
setp
fnstsw
xchg
rcr
cmpsb
fsubrs
and
fld1
test
fcoms
inc
inc
pop
mov
dec
out
or
push
rcrl
fnstsw
xchg
pusha
je,pt
sub
mov
cmp
adcl
pop
fbld
or
int3
inc
sub
xchg
cmpsb
pop
fdivl
out
pop
jg
pop
loopne
sbb
add
push
loopne
xchg
dec
fcomp
leave
fmull
xor
add
shl
rolb
stos
in
push
clc
add
mov
es
or
imul
jmp
mov
mov
hlt
inc
or
flds
jno
jb
dec
push
inc
imul
dec
loope,pn
stos
lds
mov
mov
mov
filds
xchg
inc
loop
pusha
mov
cld
mov
xchg
mov
pushf
hlt
das
test
adc
imul
js
int3
notl
pop
stos
inc
pop
sbb
jbe
pop
stos
or
test
mov
and
mov
fst
dec
xchg
inc
sbb
cmp
mov
jne
rol
fnstcw
inc
mov
fcomi
mov
les
push
sub
cs
jnp
cmpl
inc
dec
xchg
or
sahf
mov
sar
pop
fwait
in
pop
rol
jnp
mov
or
dec
aas
cwtl
incb
lcall
pusha
jmp
cmp
xchg
fsubs
orl
leave
mov
sbb
xchg
pushf
pop
add
xlat
xchg
fwait
lea
out
pop
rorl
add
movsl
mov
mov
or
test
rorb
cmpl
test
insl
adc
inc
mov
dec
mov
xor
jmp
mov
sbb
mov
lods
nop
pmulhw
jne
mov
dec
mov
scas
jo
mov
xchg
addb
dec
cwtl
pusha
inc
xor
inc
inc
and
popa
repnz
push
ret
xor
pop
xor
jne
add
mov
or
cld
ds
cwtl
mov
mov
ret
aas
and
jl
push
cmpsl
les
mov
aad
in
adc
lcall
data16
fnstsw
aaa
xor
cmp
loop
sbb
inc
sbb
ss
sub
mov
mov
xlat
scas
pusha
fidivrs
and
mov
and
mov
cmp
push
test
mov
dec
ret
enter
dec
xchg
jp
mov
add
jno
mov
ss
arpl
sub
out
pop
mov
fcoml
push
iret
xor
add
cmp
dec
leave
mov
into
and
jnp
dec
ror
or
fsubr
pop
or
push
bound
subb
jne
repz
cmp
or
pop
in
add
sub
mov
xor
repnz
fildl
es
icebp
jo
jp
or
arpl
mov
aaa
andl
in
scas
mov
add
stc
lock
cld
cmp
adc
sub
pop
test
lds
jmp
imul
loopne
out
mov
addr16
mov
in
mov
add
sti
sbb
ss
jecxz
imul
call
and
aam
mov
dec
cmp
hlt
and
movsb
es
aad
or
cmpsb
ljmp
repz
fiaddl
push
or
mov
adc
cmp
das
inc
jge
hlt
cmp
insb
or
test
repnz
dec
test
addr16
sbb
jo
pop
dec
jle
loope
daa
fadds
mov
or
jbe
sub
pop
lahf
inc
xor
adc
test
cmp
mov
nop
sub
push
xor
mov
mov
jp
or
add
xor
das
paddb
mov
insl
mov
xchg
xorl
movsb
push
mov
push
inc
cmpsb
jge
test
push
push
mov
rcrl
incl
bound
je
mov
push
mov
int
and
addl
ret
int
sbb
cmp
mov
cs
and
xchg
xor
pusha
ror
add
mov
jno
dec
loope
icebp
frstor
mov
mov
sbb
dec
mov
es
push
mov
cld
loopne
mov
inc
movsb
adc
mov
pop
outsl
xor
lock
sub
xor
fs
add
push
inc
outsb
cltd
leave
push
push
insb
mov
mov
out
je
and
test
inc
and
lock
lret
inc
es
testl
mov
fwait
or
loop
mov
stos
push
loope
subl
cli
pop
mov
test
cmp
pop
xchg
jae
fildl
mov
xchg
leave
in
sti
int3
jae
and
inc
pop
addr16
sar
pop
iret
sub
mov
cmp
mov
sbb
fwait
aad
flds
js
pop
lods
loopne
fldt
cmp
loopne
and
stos
xor
stc
push
cs
call
int3
and
jne
dec
stos
imul
hlt
pusha
ficoml
ljmp
or
xor
and
ret
xchg
xor
lock
imul
fiadds
xchg
mov
push
inc
xor
lcall
out
icebp
jmp
pusha
insb
mov
stos
mov
dec
xor
jmp
and
testb
faddl
mov
adc
sbb
es
fiaddl
add
cmpb
lret
rcrb
aaa
sbb
cmp
insb
bound
sti
xor
jg
paddsw
cmp
hlt
lahf
xchg
rcl
sbb
mov
xchg
outsl
mov
js
xchg
xor
cwtl
clc
pop
jle
jl
jmp
adc
sbb
std
divps
pusha
scas
push
cwtl
repz
arpl
adc
pop
js
aaa
sbbb
repz
add
xor
xor
pop
js
mov
adc
adc
cmp
jmp
dec
dec
fwait
mov
jae
mov
icebp
pshufw
shl
pop
outsl
cs
ja
or
cs
jge
or
inc
test
call
lahf
fstpl
ss
or
aad
adc
js
cmp
mov
sub
pop
arpl
jb
loop
sbb
shlb
jmp
cmpsl
cmp
mov
movsl
xchg
jno
sub
aas
or
cwtl
sbbl
add
and
mov
cmp
and
sbb
mov
sbb
cmpl
sbb
shrb
xchg
enter
add
fidivrs
fdivs
mov
inc
jne
cli
aaa
sbb
sub
push
adc
adc
push
mov
fcompl
in
cmp
sbb
lods
cmp
lds
pop
jp
ficomps
test
lcall
enter
jg
cli
daa
add
shlb
ud1
dec
enter
inc
sub
mov
movsb
mov
mov
shrl
lock
sbb
aaa
dec
cmp
scas
xor
sahf
or
cmp
push
pop
out
jge
mov
aad
insb
dec
aaa
lret
cmp
ja
push
xchg
clc
mov
in
mov
xchg
cld
pop
mov
jo,pn
sbb
mov
xorb
pop
loopne
or
sbb
add
arpl
sbb
sub
xor
jecxz
xchg
inc
aas
insl
in
add
shll
jo
fdivl
lret
push
orl
es
movsl
mov
enter
xor
int3
arpl
dec
clc
ret
add
cld
testl
or
push
clc
mov
xchg
dec
ds
jnp
hlt
push
xchg
cmp
mov
add
push
je
andb
mov
sub
test
inc
das
pusha
dec
xor
jecxz
and
cmp
loope
push
xchg
das
out
jl
fidivs
cmp
lock
sbb
mov
xchg
mov
cltd
mov
pop
jno
push
dec
inc
dec
arpl
or
mov
aas
sahf
in
sub
or
cmp
fwait
mov
push
sti
mov
mov
xlat
pop
mov
fwait
stos
not
sbb
mov
xchg
lret
pop
jo
cmp
out
jno
test
imul
cmp
testb
outsl
pusha
mov
and
push
addb
ds
loop
adc
test
mov
inc
xor
jmp
mov
jno
sti
mov
fidivrl
add
jmp
mov
movsl
cltd
pushf
popf
cmp
and
lahf
repz
dec
mov
push
test
data16
cmp
lret
incb
lahf
ret
repnz
ss
loop
in
lcall
call
xor
sbb
and
add
bound
les
add
inc
scas
adc
mov
mov
inc
out
fs
aas
lahf
scas
ljmp
sarb
outsb
adc
jo
aaa
pop
lahf
push
push
add
fidivrs
aaa
mov
ret
inc
scas
mov
xchg
dec
sub
and
or
repz
fwait
stos
lock
cmpb
lret
add
xchg
out
nop
inc
leave
lods
mov
rcll
mov
cwtl
xor
pop
shlb
fwait
aad
ds
add
mov
push
xor
sub
gs
or
cmpsb
pop
jno
dec
stos
in
add
xchg
in
push
pop
jne
mul
in
inc
jg
mov
cmpsl
mov
lea
add
pop
fmuls
mov
rorl
insl
jmp
mov
jne
aaa
and
jo
add
test
test
aas
loop
jle
les
sub
je
int
or
mov
xor
lea
xchg
rcrb
ficoml
inc
loope
add
mov
orb
sti
fisttpl
or
mov
xor
loopne
cmp
in
movsb
and
aad
push
sbb
fdivrs
adc
ret
xor
mov
mov
cmp
or
xchg
shr
mov
div
mov
xchg
outsb
sbb
add
test
fisttpl
lcall
add
js
jp
and
loope
jge
aas
movswl
adc
pop
push
pop
leave
test
dec
jne
repnz
icebp
push
adc
cli
insb
jno
dec
dec
xchg
add
call
mov
mov
daa
or
jbe
dec
dec
mov
pusha
jae
cld
ja
fidivs
js
fisttpl
pusha
enter
cwtl
imul
sub
or
pop
adcb
xchg
les
je
sahf
in
inc
nop
sbb
insl
inc
imul
xchg
in
leave
sub
push
inc
inc
or
enter
mov
mov
cmp
xchg
out
push
fwait
shl
cltd
adc
mov
sti
adc
je
or
adc
jg
cmp
jg
fdivs
sbb
out
iret
ss
jl
mov
repz
push
sbb
cmp
push
popf
fbld
mov
jl
cmp
cld
cmc
movsb
add
mov
xor
sub
mov
loopne
xchg
mov
data16
xorb
cmp
push
mov
push
gs
addr16
jecxz
loop
bound
xchg
inc
pop
cmp
mov
lea
adc
jl
mov
mov
add
inc
cmpsb
sbb
lret
add
mov
dec
out
inc
fisttpl
cmp
test
sub
fs
testl
rclb
pop
mov
int3
and
mov
xchg
sbb
sbbl
xor
cmc
jno
jae
sbb
mov
les
or
inc
gs
ret
and
ds
ds
ja
push
sub
adcb
lea
fdivs
ficompl
sti
jbe
push
sahf
push
mov
sub
test
xchg
into
mov
mov
sbb
in
test
or
cmp
cmp
fwait
push
ja
lretw
js
fistps
pop
adc
std
inc
jl
xor
ficoms
mov
scas
out
loope
pop
sbb
add
daa
insb
and
shrb
or
push
push
sub
ja
push
dec
pop
jl
jbe,pn
sar
lods
add
xor
stc
mov
cmp
repz
xchg
aas
popa
shr
push
movsl
xchg
daa
add
dec
out
push
sahf
imul
fcmovnb
sub
push
jle
mov
in
pop
fsts
mov
jno
jge
inc
and
xchg
push
clc
and
adc
xchg
in
cmp
mov
xor
test
cmpsl
and
jg
adc
dec
stos
xchg
jo
mov
sbb
sbb
mov
xchg
popf
syscall
adc
inc
sub
xor
test
fdiv
daa
clc
pusha
shr
stos
add
cmc
sbb
xchg
sub
ret
sub
jb
jb
inc
pusha
pop
mov
mov
inc
les
fs
je,pn
xor
pop
imul
adc
sub
insb
mov
push
mov
pop
addb
xor
mov
mov
sbb
mov
sbb
cld
mov
push
or
in
cs
loope
sbb
sbb
in
sub
cwtl
test
lods
ret
xor
mov
dec
add
enter
and
add
pop
stos
push
loop
jb
arpl
push
ja
pop
xchg
call
inc
mov
daa
shlb
and
push
and
fucomip
lret
sbb
daa
mov
repnz
and
xchg
sub
je
pop
xchg
mov
adc
pop
in
ds
sbb
insb
adc
imul
lret
dec
fstps
in
mov
jae
sbb
dec
sti
cli
sbb
mov
pop
cmp
xchg
sbb
xchg
divb
xchg
mov
and
outsl
xor
lret
cmp
cmp
mov
je
dec
in
jnp
and
mov
cmp
ret
int
sbb
jns
jbe
mov
mov
pop
mov
jl
lret
jg
rclb
pop
push
paddq
roll
inc
sub
adc
inc
jmp
in
sbbb
js
push
gs
mov
dec
push
call
dec
pop
push
gs
insl
xlat
call
xchg
daa
jno
jg
inc
mov
push
and
sub
outsb
stos
and
iret
les
ds
shll
aad
mov
loop
pop
gs
repz
or
push
jp
sub
out
lock
inc
imul
dec
push
andb
pop
sti
lahf
into
xlat
push
inc
adc
jmp
movl
mov
outsb
push
paddq
popf
jg
faddl
cmp
scas
loop
mov
int3
dec
lods
jnp
sub
push
pop
test
dec
bound
inc
inc
insl
sbb
add
fdivrp
int3
dec
push
or
das
push
pop
inc
add
and
decl
inc
inc
inc
xor
stc
dec
lock
push
aam
stc
ljmp
jo
outsb
int
js
mov
mov
sbb
cs
xchg
pop
push
call
movb
negl
sub
decl
jmp
push
dec
jmp
mov
mov
je
xor
gs
mov
or
jbe
fstps
pop
mov
adc
push
dec
cmpsl
push
test
adc
inc
inc
js
paddq
add
imull
es
and
scas
adc
jle
add
xor
jmp
push
adc
not
aam
and
mov
mov
lds
inc
das
fbstp
add
sub
rcrl
sub
cmp
neg
cltd
clc
fdivl
jmp
test
sbb
scas
inc
lock
test
rcrb
mov
push
int
incb
js
jno
add
test
ljmp
enter
rcrb
ds
or
jmp
inc
mov
or
push
cmp
imul
hlt
inc
nop
stos
inc
ret
add
xor
dec
adc
add
dec
jmp
cmp
inc
xchg
mov
push
inc
imul
loopne
popa
pop
push
push
inc
xor
insb
push
or
cmp
sbb
sub
ror
cs
pop
xor
adc
rclb
inc
bound
xor
sti
shufps
mov
pop
arpl
pop
int
sarl
sbb
jns
pusha
or
fidivs
xchg
pop
in
mov
or
iret
popf
int
dec
loopne
xor
lea
mov
adc
fdivrs
inc
hlt
mov
or
lea
daa
aaa
lret
insl
xchg
shlb
xor
xor
bound
push
dec
cmp
ljmp
outsb
lret
inc
push
mov
fnstsw
fcomip
mov
out
cmp
sub
ret
into
in
push
je
fcomp
push
cwtl
insl
pop
push
leave
loope
add
cmp
fidivl
add
pop
testb
jge
pop
movsl
test
aaa
mov
bound
enter
iret
inc
adc
test
xchg
xchg
pushf
jnp
or
adc
sub
outsl
insl
addr16
es
call
jp
xchg
mov
dec
mov
inc
mov
lahf
dec
push
dec
mov
ds
mov
jg
dec
inc
push
dec
add
push
sub
loopne
inc
inc
add
mov
repnz
or
mov
out
loopne
std
adc
outsb
sbb
cmp
lock
dec
inc
dec
mov
mov
loopne
xchg
enter
inc
hlt
xor
incb
xchg
mov
or
or
or
xorl
fs
cmp
jo
call
add
adc
repz
mov
inc
xor
xchg
or
mov
inc
pushl
add
sbb
jmp
stos
cmp
inc
inc
cmc
push
adc
mov
or
sbb
or
inc
add
or
decl
jge
sbb
inc
add
jmp
insb
arpl
mov
or
ds
add
add
repnz
xor
jne
shrl
xlat
inc
pushl
adc
dec
sbb
jne
aas
pop
psubsw
mov
sbb
inc
lcall
call
insb
call
mov
gs
ljmp
jns
insb
test
into
and
pop
push
pop
sbb
add
and
inc
popa
jne
je
adc
aam
jbe
inc
orl
mov
mov
std
dec
cmp
sti
lock
dec
inc
insb
dec
jo
subl
int
insb
cmp
sbb
and
xor
mov
mov
jns
out
lods
lret
mov
fdivl
sub
xor
xor
cmc
jl
xor
rorb
aam
xor
cmp
add
or
inc
fldenv
jae
leave
lock
nop
fs
mov
push
sti
pop
cld
dec
adc
add
add
add
jmp
dec
xchg
and
jb
mov
shll
dec
add
fs
sub
mov
xor
or
loopne
mov
push
sbb
cwtl
xor
fwait
sbb
mov
add
lock
push
cs
or
push
lcall
mov
inc
dec
add
push
pushl
jecxz
adc
inc
inc
cmovno
fisttpl
test
outsl
add
pop
pop
gs
push
in
push
cmpsl
mov
or
dec
jns
in
add
js
inc
lds
js
mov
mov
push
js
data16
arpl
push
inc
loopne
xor
cmp
mov
fwait
mov
push
movsb
mov
imul
jle
jne
dec
jae
inc
fbstp
aaa
clc
mov
inc
dec
insl
dec
ja
and
push
mov
call
add
fwait
or
xchg
in
push
jae
das
add
xabort
dec
enter
push
push
adc
fisubs
lock
push
mov
sahf
repz
in
xor
insl
insl
add
aad
loope
fiaddl
negl
fnstenv
jo
iret
inc
xor
inc
jmp
in
in
movsl
push
sub
push
call
push
xor
push
mov
pop
in
call
orl
imul
add
inc
loop
cmp
cmp
hlt
insb
push
lock
inc
cmpsl
in
xor
fs
pop
fsubp
or
lods
push
jo
push
gs
idivl
jnp
sbb
outsl
mov
cmp
ret
clc
sbb
sub
dec
mov
adc
pop
es
fadd
sbb
cmp
dec
inc
xchg
xchg
into
and
jb
fidivrs
xchg
jge
andl
xchg
div
es
cmc
mov
test
mov
xlat
mov
insl
pusha
jnp
xchg
add
leave
jg
mov
clc
shlb
ret
outsl
mov
and
inc
xor
js
dec
jbe
inc
add
inc
nop
out
or
add
mov
mov
xor
outsb
mov
inc
js
ss
inc
cmp
cmp
psrlw
scas
push
jg
ret
cli
aas
fisubrs
in
pop
pop
sti
scas
outsl
mov
cld
dec
pushl
sub
sbb
imulb
imul
add
call
xchg
sbb
mov
jmp
cli
jmp
shr
js
push
inc
adc
mov
add
inc
outsl
xor
js
in
movsl
or
push
push
scas
inc
imul
mov
mov
insb
mov
mov
dec
xor
insl
push
jg
add
dec
and
sbb
xorb
cmp
rcrl
rolb
inc
cmp
mov
movsb
or
mov
push
outsb
outsl
xchg
xor
imul
jg
insb
outsl
ja
push
daa
jnp
pop
cmp
xor
inc
xor
push
push
jp
push
aaa
adcb
add
or
add
inc
stc
insb
and
rol
js
shlb
mov
lret
push
jns
push
dec
jne
cli
or
pop
insb
push
mov
push
call
in
mov
dec
jb
push
mov
inc
cmp
push
pop
data16
lods
das
in
arpl
inc
dec
xor
mov
mov
adc
add
push
call
or
imul
cli
push
div
fucomip
and
push
push
jg
sub
dec
inc
dec
insb
or
inc
push
adc
repz
push
lods
outsb
add
fsubrs
imul
cld
xor
cwtl
and
test
xchg
insb
jae
icebp
insl
movsb
jae
xor
jl
or
xlat
jle
jno
xor
jae
cmp
loop
pop
dec
inc
rcrl
push
movsb
sbb
shlb
add
cld
call
inc
aaa
outsl
xor
sbb
push
sub
aam
push
bound
inc
icebp
dec
out
pop
dec
jbe
addr16
mov
mov
jmp
call
fsub
dec
sbb
dec
enter
or
shrl
clc
subb
push
int3
mov
lock
in
idiv
mov
loop
mov
insb
push
dec
xor
sub
sbb
dec
pop
mov
add
pop
fxam
out
lock
inc
movsl
push
dec
movsl
jbe
push
orb
inc
fdivrs
dec
mov
pop
xorl
sysret
mov
mov
lds
inc
mov
ficomps
dec
xor
mov
stos
mov
jmp
or
and
jp
dec
add
repnz
les
push
ret
int
jl
push
popw
in
add
lods
cld
push
add
cltd
je
dec
xor
addr16
test
insl
gs
pop
clc
ret
pop
imull
dec
cwtl
adc
dec
insl
sti
xor
jo
outsb
icebp
xor
cmp
test
out
fwait
mov
xor
jbe
aaa
insl
xor
push
push
dec
lds
int
pop
inc
bound
pop
rorb
lcall
mov
scas
or
outsl
xchg
push
bnd
mov
fwait
add
js
add
cmp
sub
xchg
arpl
dec
fcompl
ret
jmp
jmp
sbb
mov
enter
ficoml
sarl
je
sub
jb
sbb
lods
jno
mov
xchg
inc
aam
dec
push
xlat
mov
mov
xor
or
mov
inc
and
notb
and
mov
lret
jl
clc
add
mov
movsb
incb
je
int
add
outsl
add
daa
mov
add
jae
jo
rcrl
inc
stos
mov
inc
xchg
clc
idivb
clc
mov
ficomps
shr
pop
adc
dec
jmp
and
cmp
jb
pop
dec
pushl
add
sub
sub
pop
stos
loope
dec
jno
xor
pop
adc
ds
repz
jmp
sbb
add
add
adcb
je
das
mov
enter
gs
out
addr16
repnz
data16
cmpsb
and
sbb
push
or
insl
xchg
xchg
cmp
imul
adc
push
sub
jno
sbb
push
pop
sarl
cmpsb
out
mov
fldenv
jo
mov
fisubl
decl
in
jnp
jae
popa
sub
outsl
ss
xlat
cmc
push
jne
pop
scas
jns
sbb
cmp
out
call
sbb
das
fneni(8087
add
test
and
jecxz
cmp
push
cld
sbb
decl
mov
loopne
cmc
pop
enter
mov
push
sbb
into
out
loope
stc
loopne
in
decl
push
imul
cmpb
sti
ret
or
test
mov
aas
xor
dec
mov
xor
or
mov
insl
mov
dec
jo
out
das
negl
idiv
mov
pusha
test
xchg
mov
add
fistpl
push
lret
pop
mov
rolb
into
sbb
imul
lods
mov
cmpsb
push
lret
push
and
lret
xchg
jl
push
outsb
addl
sub
mov
fimuls
ljmp
push
seto
add
dec
jb
inc
das
mov
adc
sub
pop
loopne
test
test
or
and
push
or
sub
call
xchg
cmc
stc
sbb
inc
mov
mov
dec
inc
aas
inc
lcall
dec
push
mov
xor
pop
negb
cmp
scas
and
test
sub
xor
dec
push
mov
adc
repz
iret
ljmp
data16
sahf
mov
popf
daa
mov
das
fs
cmp
pop
cs
cmp
inc
adc
cmc
sub
lcall
movsb
mov
popa
and
lret
inc
xor
in
pop
pop
cmp
mov
cmp
fdivr
mov
dec
xor
push
int3
push
mov
sub
mov
in
sar
pushl
or
jnp
xor
dec
fwait
pop
sbb
ret
cwtl
mov
leave
call
imul
gs
add
or
pop
addr16
loop
jne
xchg
inc
mov
fs
loop
faddl
int3
arpl
dec
mov
into
fcmove
pop
popf
leave
pop
sbb
pusha
and
jmp
xchg
lods
iret
xchg
fldenv
push
mov
ss
testl
and
inc
sbb
dec
repz
mov
xchg
outsl
ret
cmp
cmp
sti
mov
inc
das
call
mov
mov
mov
lods
sbb
dec
xchg
jge
scas
out
lret
mov
add
jnp
sub
pushl
test
cld
or
les
mov
jmp
mov
incw
jb
xor
cld
fdivr
adc
and
add
jns
decl
mov
cmpsl
daa
xor
lods
push
call
mov
xchg
inc
sbb
mov
fdivs
outsl
inc
mov
pop
sub
frstor
out
jb
and
adc
decl
and
loope
js
imul
out
mov
rcrb
adc
push
mov
loope
mov
scas
decl
or
sub
push
push
in
aam
add
lcall
andps
push
sub
fistl
arpl
mov
call
lods
add
lea
inc
xlat
pop
call
pop
outsb
push
js
daa
ss
leave
rorl
incl
cs
push
in
xchg
subl
jecxz
adc
mov
dec
and
decl
jmp
inc
mov
pusha
jo
jnp
or
sbb
sahf
jno
repz
imul
sbb
pop
mov
mov
ljmp
sub
or
jb
xchg
inc
movsl
inc
into
cmc
jnp
insb
sub
std
out
jmp
inc
dec
cmp
int3
jge
cmp
decl
out
out
pushl
aaa
inc
imul
adc
cmp
ljmp
and
fdivr
add
jge
jle
imul
or
jmp
loope
popa
mov
mov
cmpl
push
sub
pop
xchg
adc
repz
lcall
sub
out
popf
xchg
dec
popa
sub
shll
fisubrl
pop
xor
ljmp
sub
xlat
xchg
mov
sub
pop
sub
imul
mov
outsl
xor
decl
jne
mov
sti
mov
inc
sub
shl
jge
movsl
loope
dec
cmp
dec
dec
hlt
add
fwait
lret
cmpsl
push
arpl
out
adc
pushl
test
loopne
jae
jle
mov
pop
call
xor
int3
adc
ljmp
pushl
mov
mov
xor
mov
jmp
sub
adc
in
daa
push
xor
fldpi
or
mov
push
xor
dec
test
xchg
jp
decl
loop
divb
ja
xchg
lods
xchg
lahf
lahf
cs
outsl
mov
mov
ja
cli
repz
dec
pop
sarl
sar
dec
in
mull
je
pop
dec
mov
ljmp
push
dec
insb
mov
aas
xor
call
lahf
or
cltd
clc
adc
andb
or
push
and
aam
mov
rorb
gs
std
mov
lods
adc
gs
lds
xchg
cmp
into
das
stc
scas
int
mov
aaa
jg
xor
push
push
aaa
int3
mov
cmp
cli
cmc
adc
rclb
mov
outsl
xchg
pop
shr
fdivrl
push
lods
lcall
fisubs
inc
or
lods
fwait
inc
arpl
stos
inc
cli
hlt
xor
jo
lods
aam
pop
sub
addb
mov
pop
push
jge
aad
pusha
mov
add
enter
dec
lahf
loope
test
mov
out
inc
incl
mov
decl
fs
dec
push
js
test
lahf
and
push
dec
inc
jge
decl
stos
push
jns
cld
push
add
shl
shl
xchg
arpl
sub
call
xlat
loop
sbb
insl
cmp
jle
pop
jle
sbb
push
xchg
inc
push
or
sar
push
std
inc
jp
rclb
push
out
jecxz
mov
push
jae
xlat
test
jbe
out
decl
dec
pop
push
icebp
mov
and
pushf
mov
test
clc
adc
push
push
test
push
fldcw
ret
mov
pushf
xchg
and
popf
mov
and
dec
icebp
jbe
lcall
fldcw
mov
sbb
lds
mov
pop
ljmp
notb
and
or
incl
push
mov
out
aas
mov
aas
pushf
mov
adc
sub
movsl
jmp
shr
ljmp
sub
scas
pop
filds
and
mov
jg
jle
mov
add
pop
aas
mov
sub
sbb
cmp
inc
mov
push
fs
lock
out
cmp
adc
mov
loop
fwait
sar
xchg
aas
jg
sar
mov
iret
icebp
loope
nop
mov
in
fstpt
xchg
outsl
inc
jno
jb
mov
inc
pop
mov
jmp
mov
addr16
adc
fimull
push
jns
add
sahf
addr16
mov
xchg
in
jb
sahf
xorb
lcall
cmp
scas
xchg
rcr
mov
lcall
adc
daa
rcrb
jmp
js
mov
xchg
sub
fs
mov
jg
xchg
mov
sar
pushl
clc
xchg
test
adc
push
xchg
xchg
and
aam
or
adc
mov
movsl
jl
cmpsl
dec
aas
inc
pop
ficomps
lcall
mov
xchg
sbb
mov
into
xor
mov
shll
incb
jae
out
sub
out
dec
cld
fsubr
and
dec
stos
mov
call
mov
mov
scas
pop
stos
push
inc
sbb
dec
mov
jbe
cmpsb
inc
pop
jb
jg
call
add
add
xchg
out
xchg
std
cld
jg
decl
cmp
cmp
ds
push
gs
sbb
cli
decl
insl
lods
rcr
add
sub
int3
sub
push
in
pop
movsb
jmp
decl
lret
xchg
test
and
sub
mov
ljmp
lock
sub
decb
adc
repnz
mov
cmp
pop
mov
leave
jmp
sub
pop
test
mov
call
cmpl
sbb
dec
pop
inc
ja
adc
inc
push
cmp
dec
mov
push
cli
add
sbb
cltd
lret
std
adc
adc
test
cli
outsl
xchg
jo
std
in
push
push
cmp
fldcw
shrb
sbb
nop
jle
pop
pushl
mov
in
test
fidivl
sbb
lcall
jae
rol
ds
clc
fs
cmp
inc
jns
fdiv
push
stc
mov
incl
icebp
into
rcl
mov
sub
xchg
xchg
push
cmp
xor
dec
hlt
loope
loop
fstps
jne
insl
xor
enter
pushl
cmc
dec
dec
lock
pop
pop
hlt
aam
scas
mov
cmc
das
cmpsb
test
jno
imul
xlat
out
jle
pop
cld
fistpll
aas
imul
jo
mov
cmpsl
movsl
mov
ljmp
test
pinsrw
push
mov
enter
mov
adc
cmp
decl
addb
push
cmpl
aam
xlat
dec
loop
leave
ljmp
bound
outsl
jg
loope
mov
imul
or
in
data16
mov
jg
outsl
cld
fs
cmp
sub
popa
loop
jp
stc
decl
dec
insb
add
mov
fcoms
cmp
insb
ret
lcall
lock
push
fs
out
in
leave
aaa
jnp
mov
stos
arpl
loopne
ljmp
hlt
decl
les
cmpb
jecxz
test
push
lods
or
aaa
sbb
out
frstor
pop
jnp
out
icebp
cmpsl
cmp
in
setl
lcall
sbb
dec
pop
fcmovnb
out
add
mov
inc
pop
pop
jl
mov
mov
push
incl
fsubl
pop
dec
out
sbb
fwait
nop
icebp
push
cmp
scas
xchg
cltd
mov
cld
decl
xchg
xlat
xor
lea
cmp
ljmp
jmp
mov
sbb
pop
xor
imul
test
pop
int3
adc
std
mov
mov
hlt
xchg
ficoml
mov
inc
push
pop
jbe
or
aaa
jg
push
inc
iret
lock
push
dec
push
pusha
dec
or
mov
dec
decl
std
or
cmpsb
sub
aad
add
jle
mov
push
jo
mov
cld
pop
mov
jmp
lcall
scas
push
mov
pop
sbb
js
adc
jge
push
das
icebp
incl
shlb
mov
sti
in
xor
cmpsb
leave
shlb
cmp
mov
popf
sub
aaa
pop
flds
jp
jb
lock
push
mov
inc
xchg
xor
xor
jl
les
xchg
in
push
push
mov
push
aam
decl
jbe
call
hlt
shll
sub
clc
mov
push
jge
sub
iret
lcall
outsl
mov
in
jmp
call
sub
loop
push
iret
pop
and
inc
xor
pop
mov
nop
outsb
push
mov
fcoml
pop
clc
xchg
mov
fadds
dec
cmpsb
jl
movsl
sarb
fcmovu
aad
mov
and
decl
std
add
push
fadds
cmp
pop
adc
sub
outsb
std
notb
test
mov
insl
test
shlb
push
pop
outsb
mov
hlt
jge
lret
inc
outsl
push
loop
sub
fisubl
or
cld
jmp
ja
dec
pop
pop
je
push
bound
sarl
push
dec
jae
jge
mov
ss
push
mov
lds
lahf
mov
pushf
sbb
fucomp
adc
addr16
mov
push
insb
jg
pop
pop
lock
jmp
adc
pop
xor
add
enter
xchg
dec
cmc
in
or
orl
sti
cmp
out
inc
mov
insb
lea
mov
addl
loop
scas
xchg
push
inc
cmpsb
fildll
jmp
mov
andl
mov
cld
fwait
pop
sti
inc
sub
xchg
jle
clc
inc
xchg
pop
je
push
mov
sub
std
aaa
mov
ret
int
clc
push
addr16
int3
leave
dec
ljmp
mov
lahf
mov
and
add
loopne
std
ljmp
cmp
inc
loope
mov
stos
int3
xlat
push
std
mov
and
inc
mov
clc
inc
push
stc
mov
mov
pop
call
push
fs
xchg
out
test
mov
cli
cmpsb
scas
mov
mov
pop
aaa
in
ret
scas
pop
stos
jle
jp
jmp
lret
sub
sarl
adc
add
mov
pop
pop
xor
mov
dec
xorb
push
mov
jecxz
call
lock
xchg
sbb
call
mov
cmp
aam
mov
fs
into
inc
sbb
stc
jne
jg
call
mov
xor
xlat
inc
incb
clc
or
inc
insl
scas
sti
dec
inc
aad
push
adc
enter
ss
sbb
scas
jno
and
clc
or
int
ljmp
push
clc
inc
out
mov
sbb
xor
scas
ljmp
jmp
fiadds
or
xchg
xchg
fwait
push
lcall
imul
pop
call
mov
repz
mov
jl
jecxz
xchg
cs
rdtsc
pop
adc
or
add
mov
adc
test
xchg
mov
jg
pushl
sbb
mov
mov
sbb
lahf
inc
fistpl
inc
fnstsw
ss
lods
or
xor
out
popa
lcall
cmpsl
xchg
push
push
call
lea
cld
xchg
or
push
cmpsl
iret
hlt
pop
mov
jo
fwait
sub
jmp
test
loop
jge
in
xchg
mov
aas
add
push
or
daa
jp
sub
jg
in
xor
adc
insl
mov
cltd
dec
sub
mov
inc
pop
movb
inc
in
pushl
cli
mov
pop
out
or
icebp
pop
loope
jnp
xchg
fwait
in
idivb
addl
jo
pushf
push
mov
fistpll
pop
xchg
mov
mov
sbb
lods
or
and
je
rcrl
mov
ljmp
cmp
std
repz
push
inc
mov
outsb
xchg
xchg
push
sbb
lret
cmc
outsl
hlt
add
andl
adc
mov
or
sbb
das
mov
dec
dec
jnp
lret
ljmp
ljmp
lock
fnstsw
sbb
mov
test
jmp
addr16
shll
dec
push
fmuls
pushf
xchg
int3
hlt
mov
loop
push
out
add
mov
outsl
insb
aam
lcall
imul
fisttpll
cmp
or
lds
in
lret
fs
inc
push
adc
incl
mov
push
fcmove
push
scas
push
andb
add
pop
adc
or
mov
ljmp
adcl
pop
mov
iret
jmp
or
rep
gs
sarb
outsb
decb
lock
incl
adc
mov
orl
dec
pop
pushl
sub
jge
jb
sub
out
cli
scas
inc
ja
lcall
inc
mov
insb
add
adc
pop
push
xor
das
icebp
xchg
fimuls
fadds
movsl
cmp
jmp
pop
fdivrp
lcall
add
testl
cs
xor
and
sub
xchg
sbb
rcl
ficoml
mov
jp
jle
xor
push
leave
xchg
push
lret
ds
out
aad
jmp
dec
hlt
add
scas
aam
cmp
mov
fcoms
nop
adc
and
mov
pop
insl
clc
loopne
xor
addb
add
push
push
xchg
xchg
sti
shrl
icebp
call
or
je
ja
dec
loopne
cmp
outsb
test
xchg
js
add
stos
int3
hlt
mov
incl
xchg
push
pop
push
xchg
mov
fildll
clc
das
push
push
addr16
ret
lgs
aaa
mov
lock
leave
pop
movsb
in
fwait
inc
jmp
aaa
outsl
push
loop
inc
dec
shr
arpl
orl
and
dec
mov
rorb
out
aam
les
sub
or
lea
sub
cmp
mov
mov
jnp
sti
subl
das
icebp
adc
adc
jno
shlb
dec
inc
mov
jg
cmp
out
and
mov
sub
call
cli
incl
lock
or
sub
pop
push
leave
push
pop
or
decl
data16
pop
adc
mov
pusha
aam
cmp
jb
cli
jmp
or
dec
icebp
jmp
enter
inc
imul
ficomps
clc
fisttps
aaa
adc
xchg
lahf
inc
sbb
test
jecxz
cli
mov
mov
pushl
jg
ret
jge
xor
cmp
mov
jecxz
inc
sahf
fsubrs
and
lret
xchg
sub
std
notl
int3
or
js
jl
decl
loop
or
stc
cmp
push
jge
jecxz
pushl
pop
out
or
pop
dec
ret
lea
enter
pop
dec
push
fcompl
add
xchg
mov
or
mov
cld
in
gs
movsb
push
daa
das
std
lcall
adc
dec
push
sbb
in
mov
jg
out
xchg
call
pop
pop
jge
loopne
lea
xlat
jbe
loope
decl
pop
and
or
or
cmp
inc
movsb
fstpt
iret
mov
aaa
mov
outsl
ss
push
lcall
xor
pop
mov
aad
inc
imull
xchg
or
cmpsb
sar
incl
push
les
push
movsl
xchg
test
jbe
das
push
cli
sbb
dec
jmp
cmp
lods
fsubl
sub
cmp
cmpsl
xchg
mov
out
pop
int3
bound
sbb
jmp
jmp
outsl
xor
cmp
mov
movsb
and
mov
jge
lahf
mov
push
inc
xchg
imul
jbe
mov
jecxz
pop
pop
cmpl
incl
out
cltd
pop
fstl
cmp
movsl
lea
mov
inc
mov
adc
push
or
mov
outsb
cmc
adc
inc
pusha
je
ret
pop
inc
pop
lds
clc
movsl
incb
loop
ss
pop
sbb
mov
jge
dec
or
or
xchg
inc
mov
pop
xor
out
adc
popa
popa
cmpsb
roll
cltd
jbe
movsl
mov
mov
movl
jle
data16
or
pop
cmp
mov
jg
cli
lock
mov
inc
mov
xor
icebp
sbb
movsl
xchg
arpl
outsb
mov
cmp
dec
and
outsl
call
subl
inc
repnz
jg
mov
aaa
lods
popf
adc
mov
mov
pop
ljmp
lcall
sbb
push
jb
lods
imul
icebp
rclb
inc
es
incl
shrl
inc
icebp
add
fstpl
lcall
aad
xor
pushl
and
repnz
cld
xchg
pop
scas
sbb
loop
ds
add
filds
push
sbb
xlat
mov
ret
cld
dec
lods
in
adc
dec
dec
sti
lods
cmp
jmp
fildll
cld
insl
leave
xchg
mov
and
test
fsubl
adc
incl
aam
sbb
lea
lds
cmp
jg
decl
adc
js
xlat
arpl
push
jo
shl
fcos
mov
lds
dec
add
popa
and
sub
dec
xlat
or
das
js
scas
divb
sub
dec
fstp
mov
xchg
sbb
mov
int
push
mov
mov
and
cmp
mov
add
incl
mov
lea
stos
int
cmpsb
pusha
adc
add
dec
cld
dec
out
fadd
jmp
decl
test
pop
and
dec
mov
ret
adc
add
mov
lods
pop
or
xchg
jne
mov
ret
mov
cmp
mov
iret
mov
mov
adc
cwtl
adc
in
stos
sbbl
xchg
jb
jb
sti
jb
lahf
xor
stos
mov
mov
stos
pop
push
or
es
repz
scas
push
ljmp
decb
ret
pop
cs
sub
add
aam
jbe
fdiv
adc
adc
pop
hlt
push
jbe
dec
mov
mov
out
ds
call
mov
push
sbb
fwait
arpl
push
lcall
popa
inc
xor
adc
std
fsincos
test
fbld
push
push
add
rolb
cwtl
pop
jae
jmp
ss
push
data16
dec
outsl
mov
aas
mov
pop
ret
call
hlt
stos
jg
fxch
pop
popl
stos
pop
scas
repz
aad
hlt
jb
test
sbb
inc
xor
das
hlt
das
lock
mov
scas
cmp
gs
out
clc
adc
and
imul
xchg
scas
sub
in
inc
cld
mov
pop
jmp
mov
mov
mov
sub
jmp
pop
xor
cli
push
and
test
int
sbb
jg
decl
dec
jge
sbb
add
and
inc
in
inc
sub
hlt
ds
fcoms
mov
and
cld
add
clc
mov
xchg
pop
sbb
pushl
icebp
sub
mov
cmp
ljmp
dec
mov
mov
add
andb
mov
push
lcall
jmp
mov
mov
mov
inc
mov
xchg
push
dec
jne
pop
jmp
in
xchg
mov
or
lods
jae
add
inc
cmp
pop
idiv
fdivr
fmuls
add
sub
pop
cmp
clc
ljmp
inc
frstor
add
and
popf
jno
fsubr
btsl
mov
jmp
int3
movsl
jle
add
mov
in
stos
adc
cs
addr16
test
pop
clc
in
sbb
lea
xchg
adc
lods
sar
push
dec
outsl
stos
das
hlt
das
add
sbb
lret
mov
imul
andl
flds
fisttpl
lcall
cld
and
lods
add
inc
xor
xor
shrb
negl
mull
das
out
ds
scas
pop
sahf
push
push
sub
out
sbb
lahf
sar
xor
rcll
pop
push
js
mov
jg
incl
mov
cmp
in
adc
xor
fsub
incl
xchg
shll
mov
jo
xchg
mov
in
dec
loop
sahf
das
sbb
sbb
cmp
jbe
mov
push
push
aam
data16
mov
jmp
dec
cmc
lods
jge
int3
jp
rorl
mov
sbb
jge
into
divl
lods
sahf
xor
jmp
cmp
xor
push
es
inc
call
decl
pop
push
clc
sub
mov
xor
mov
add
jp
add
and
or
jge
aaa
js
push
out
clc
add
pop
mov
pushl
lcall
ljmp
mov
imull
ljmp
dec
lahf
lahf
sub
ret
cmp
ret
xor
jo
ljmp
cmc
out
into
cmp
push
or
xlat
inc
jmp
or
addb
mov
rcll
test
and
xor
pextrw
in
jo
dec
or
clc
ljmp
sbb
std
repnz
jecxz
or
mov
inc
mov
outsl
in
or
mov
movsb
push
inc
mov
xchg
mov
std
lcall
ss
daa
sbb
inc
and
mov
ja
into
out
add
jg
xchg
pop
push
or
jl
out
cmp
int3
roll
push
leave
add
jg
jle
cmc
mov
mov
mov
jl
inc
jnp
or
in
lcall
pop
shll
aaa
or
cmpsb
and
mov
addr16
sbb
adc
mov
adc
mov
hlt
mov
add
xor
jl
add
sbb
mov
aaa
pop
mov
mov
and
jno
mov
aad
call
lock
jmp
dec
fwait
push
jmp
iret
fsubrs
lret
cld
pop
mov
pop
in
cmpsl
fwait
inc
ret
rclb
popa
pop
or
leave
mov
push
mov
jae
jbe
adc
lock
ficompl
iret
aad
decl
mov
fildll
xchg
jl
daa
jecxz
fs
int
sub
ret
rcl
clc
jg
es
jo
das
jg
lods
int
std
mov
inc
pop
ret
jg
jno
ljmp
aam
sbb
daa
mov
jg
push
stc
xchg
aaa
mov
cmp
std
xchg
enter
mov
mov
sti
aad
mov
inc
xchg
jmp
lock
adc
icebp
sub
xor
ljmp
les
std
sbb
shll
jg
ljmp
sbb
adc
sub
enter
out
pop
incl
outsl
sbb
pop
and
gs
mov
std
decl
fwait
jb
inc
jmp
push
popa
ficompl
mov
sti
sub
arpl
dec
addr16
adc
test
pushl
nop
sub
xor
test
fsub
cs
cld
ret
cltd
mov
cmp
cmp
fnstenv
sub
outsb
lock
push
xchg
cmp
jne
dec
xchg
xor
mov
insl
adc
pop
test
ljmp
rorl
pop
nop
xchg
mov
push
mov
fs
cmc
insl
ss
arpl
mov
inc
push
adc
mov
and
jns
movsb
mov
jecxz
idiv
pushl
mov
out
inc
jae
int3
out
adc
push
bound
icebp
call
call
int
loopne
dec
pop
jle
push
rol
movsl
pushf
cmp
ljmp
xorb
push
xchg
or
xchg
dec
dec
adc
push
xor
outsb
jb
xchg
xchg
scas
fisubs
decl
push
daa
add
add
mov
sbb
ds
pop
sar
cli
adc
sub
mov
jp
dec
push
inc
testb
pop
xor
inc
push
or
lret
dec
adc
xorb
loope
inc
push
es
fs
sbbb
sahf
inc
insl
mov
pop
arpl
lret
ret
cmp
call
cmp
jg
xor
nop
out
xor
mov
push
push
pop
aam
repz
mov
rorl
repnz
xchg
std
and
cmpsl
lahf
mov
push
clc
rorb
push
mov
out
adc
xor
and
jne
mov
fadds
jg
xchg
cmc
call
dec
mov
mov
hlt
adcb
fwait
iret
shlb
or
das
test
mov
shll
cld
sbb
daa
xchg
sbb
decl
ja
data16
sub
leave
sar
cwtl
lcall
aam
fnsave
ret
dec
push
in
mov
adc
fisubl
fistps
sub
gs
dec
cs
add
clc
idivb
inc
bound
sub
cmp
pop
mov
mov
cmp
xor
sub
aad
add
mov
cmc
sub
xchg
aaa
and
sub
imul
pop
jge
shll
aam
jg
inc
or
mov
jle
pop
cmc
pop
pop
pop
mov
mov
pop
call
adc
addl
out
push
outsl
and
ljmp
adc
inc
cmp
imul
pop
inc
sbb
mov
mov
imul
and
push
ljmp
bound
test
pop
mov
mov
ret
xor
mov
bound
je
pop
cmpb
push
ret
push
jne
mov
mov
in
ljmp
lcall
lcall
ficompl
add
leave
in
push
ja
jge
mov
sbb
sub
insb
dec
les
jecxz
movsl
mov
incl
lret
repz
fmuls
push
xchg
fs
std
push
sbb
sar
aaa
mov
testl
inc
fmul
fcoml
mov
adc
shlb
push
loope
or
dec
out
movsl
push
jns
test
mov
or
dec
dec
cmp
cli
fimull
je
mov
inc
call
sub
clc
pusha
adc
iret
sub
push
enter
and
lock
lcall
lock
pop
push
pop
scas
stos
xchg
call
dec
and
ds
mov
fucom
mov
and
daa
or
lea
mov
out
loopne
std
fists
scas
stc
icebp
stos
adc
enter
hlt
add
aaa
cli
ljmp
ljmp
lock
fidivs
xor
das
mov
cli
sbb
push
pop
jp
xchg
daa
into
jbe
insb
lret
mov
push
rolb
mov
adc
ja
jg
pop
imul
ror
lea
push
xor
imul
xchg
clc
decl
aam
js
push
inc
sbb
loope
pop
xor
push
sbb
adc
lock
cmpsl
shrb
sti
add
repnz
movsb
popf
inc
mov
inc
pop
clc
test
popf
daa
inc
and
gs
mov
mov
cmp
insl
jo
je
sbb
fwait
stc
mov
lods
mov
jae
push
push
leave
push
xchg
add
push
cltd
nop
push
push
loopne
fistpl
sub
or
dec
out
fidivrs
dec
stos
insl
pop
sbb
std
incb
scas
inc
das
dec
sti
push
xchg
mov
jle
add
out
inc
jmp
test
imul
stos
cmpsl
mov
loopne
add
std
mov
add
cltd
and
outsb
jns
lcall
pop
insb
mov
mov
fcom
test
in
bound
mov
push
cwtl
dec
std
or
mov
adc
int
adc
jno
pop
cli
or
pop
pop
call
daa
out
push
sub
pop
mov
shlb
loope
mov
add
fdivrl
mov
repnz
sub
lods
or
mov
loop
jbe
cmpsb
add
idivb
decl
std
decl
stc
lret
cmp
xor
popl
mov
mov
jg
cmp
and
sarb
sarl
out
xchg
mov
cmpsb
sbb
ror
xchg
cli
ljmp
mov
pop
sub
jp
or
fs
icebp
loopne
rorl
adc
pushf
push
dec
dec
sub
das
mov
dec
mov
sbb
cld
xor
xor
pushl
lcall
aad
adc
inc
add
mov
xchg
stos
daa
inc
fstl
cltd
or
mov
xor
mov
jmp
jno
ja
or
adc
add
addr16
jo
fdivp
inc
adc
xor
call
push
fdivrp
or
aas
and
xchg
xchg
pop
lcall
mov
xchg
add
imul
int
leave
push
jg
or
dec
mov
xor
pusha
jle
arpl
mov
jmp
jbe
data16
movsb
adc
out
jmp
cld
call
pop
arpl
fildl
mov
jg
rcll
bound
mov
dec
in
or
je,pt
push
or
jg
xlat
enter
sub
int3
mov
mov
mov
pushl
decb
xchg
ret
in
push
mov
faddl
jp
mov
int
gs
xchg
pop
lods
xchg
clc
in
xor
movsb
fwait
mov
mov
sbb
cs
fucomip
xor
in
lea
xor
cmc
lret
pop
rol
mov
icebp
dec
ret
jg
imul
cmp
xchg
stos
lods
aas
mov
mov
cmc
jg
mov
scas
jecxz
mov
btr
mov
aaa
jp
decl
nop
xchg
xlat
pop
hlt
sub
jge
scas
mov
jns
shrb
mov
xchg
mov
cmpsb
jmp
ror
sbb
incl
xor
jg
ds
test
mov
mov
sbb
ljmp
cld
jmp
pop
sub
jbe
fwait
pop
jne
xchg
cmp
and
mov
roll
rcrl
mov
js
cmp
mov
add
xchg
jp
cli
test
repz
inc
lret
or
xchg
and
in
andl
movsl
cmc
sub
pop
push
ja
and
subl
push
ljmp
push
hlt
sbb
movsl
call
sbbl
push
jb
add
mov
dec
sub
shr
pop
xchg
mov
add
inc
and
lock
xor
fmul
push
insl
xchg
mov
sar
cmp
insb
jb
push
jae
pop
jae
ret
loop
xchg
mul
pop
outsl
pop
push
jg
jg
xor
iret
mov
enter
addr16
pop
loopne
loopne
orl
xor
mov
negb
js
or
push
push
out
hlt
mov
imul
mov
movsbl
xchg
xor
jl
mov
lcall
aaa
rorb
adc
jbe
mov
inc
or
sbb
ret
mov
dec
jne
adc
pop
sub
subl
testb
fbld
outsb
mov
jecxz
dec
cld
mov
push
cltd
mov
pop
xor
and
lea
pop
adc
test
pop
std
jg
cmp
sub
mov
mov
jno
sbb
ljmp
cmc
mov
fcomps
add
pop
xchg
fisubrl
cmpsb
or
les
xlat
lcall
cmc
popf
fnstcw
jno
mov
icebp
iret
icebp
adc
inc
adc
test
aam
mov
sub
repnz
xchg
xchg
cmp
lock
mov
stc
mov
add
ljmp
cld
mov
pop
inc
fs
aad
lods
ror
cmp
outsl
lock
incl
cwtl
pop
sbb
pop
or
lret
sbb
jnp
adc
test
iret
add
cmp
stos
stos
sbb
fucomi
adc
movsb
lods
decl
mov
mov
test
stc
lods
push
ljmp
loopne
push
test
push
cmp
fucomip
xchg
cs
mov
fnstcw
subl
pop
clc
mov
pop
aam
and
jecxz
gs
sarb
pushl
mov
incb
in
sbb
mov
inc
inc
pushf
cmp
pop
decb
dec
adc
mov
outsb
lret
bound
lods
in
or
inc
fbld
call
sub
jg
mov
rorl
pop
add
and
lahf
ror
incl
push
cmp
mov
add
subl
xchg
cmpsb
daa
lret
repz
adc
subb
ljmp
std
sbb
add
sti
cmp
push
jns
test
or
loop
rcl
mov
loope
inc
js
shl
ja
mov
movsb
aas
xlat
stos
mov
add
mov
call
clc
adc
sbb
insl
xor
dec
jae
insl
lods
mov
rcrb
pusha
sub
jmp
sbb
fdivrp
and
iret
ds
push
pop
in
cwtl
das
leave
sbb
pop
cli
and
dec
movsb
sahf
loop
not
inc
dec
jb
fcoml
jmp
xchg
outsb
sub
or
aad
mov
testl
or
and
inc
xor
popf
ret
ljmp
fs
je
les
aaa
sub
incl
cmp
iret
inc
and
mov
rorl
test
es
inc
addr16
mov
ror
pusha
push
aas
popa
mov
sbb
loope
nop
and
pop
cmp
xor
lret
xor
mov
popa
les
insb
pushl
call
mov
adc
add
lods
inc
mov
mov
repnz
fcoms
push
jbe
bnd
pop
mov
cmp
xchg
test
stos
xchg
ja
test
mov
sub
xlat
xchg
mov
adcl
mov
cld
push
popf
ljmp
jle
push
rcrb
sar
call
xor
pop
cmpsb
push
inc
push
ret
sub
cmpsb
enter
sahf
sub
dec
sub
or
and
xor
sbb
movsl
cmpl
aad
fnstsw
xchg
fwait
aaa
sub
pop
lods
pusha
lret
fisubs
add
cmc
mov
pop
insb
mov
and
out
pop
cmpsb
and
cs
das
icebp
pop
mov
jbe
fwait
das
cmp
mov
mov
call
cli
inc
loopne
cmpl
xor
and
or
inc
repz
ljmp
add
aas
push
pop
out
xchg
dec
popa
andl
rclb
in
mov
fadds
fs
fsubl
mov
jle
cmp
test
hlt
or
sub
int3
shrb
das
hlt
mov
inc
sbb
pop
xchg
or
cmpsl
xchg
lret
adc
lahf
cld
fnstsw
call
fs
inc
lods
popa
or
aam
repz
in
daa
insl
ljmp
ljmp
mov
or
push
xchg
or
cmp
loop
jmp
ljmp
aam
sbb
repz
xlat
loope
push
arpl
jl
xchg
incl
fnstsw
or
dec
test
sahf
sbb
xor
nop
out
xchg
cli
pop
loop
mov
mov
adc
imul
lcall
into
sbb
sbb
xchg
push
bound
jmp
out
sub
cld
jg
js
movsb
inc
pop
incb
outsb
mov
mov
or
fstpt
sbb
sarl
pop
std
bound
pop
test
push
mov
lcall
loop
stc
cmpsl
cmp
sub
rorl
xor
mov
push
xchg
cmpsb
pop
jg
test
mov
mov
in
adc
nop
inc
pushl
cmp
jmp
add
lcall
andl
in
add
push
ret
push
clc
sbb
daa
sub
fists
jbe
rcrl
scas
push
pushf
mov
or
enter
or
fiaddl
aam
inc
or
jb
sahf
push
fldt
mov
adc
jnp
out
mov
add
sahf
pusha
sbb
sub
sti
pushl
in
jo
fs
iret
and
fsubl
hlt
incl
sar
mov
cwtl
mov
pop
inc
jmp
cli
push
xchg
jne
mov
imul
and
loop
jmp
shl
stc
mov
and
xchg
outsb
push
clc
lds
sbbl
push
cli
mov
jno
icebp
adc
dec
jl
movsl
sbb
call
aad
shll
test
adc
sahf
inc
out
sbb
xor
adc
adc
push
movsl
xchg
jno
movsl
ret
xor
push
scas
adc
dec
cmp
decl
fsts
and
inc
fdivrl
sub
mov
loopne
ss
dec
xor
cmp
out
pusha
inc
sbb
repz
jg
xchg
loop
jle
lods
xorl
les
push
xor
mov
mov
setb
imul
loope
or
xchg
daa
fsts
leave
ds
fldl2e
mov
push
test
pop
cld
pushl
cltd
sbb
mov
nop
add
jl
jg
fwait
sub
fsubl
repnz
jae
icebp
jp
xchg
xchg
sbb
or
jns
popa
inc
rcll
and
insb
in
xchg
decl
jp
ret
hlt
push
popa
test
test
in
rclb
sbb
dec
scas
negb
jg
in
adc
neg
or
push
stos
mov
fdiv
das
xchg
sub
or
pop
xlat
sub
int3
in
or
outsl
mov
mov
pop
pushl
mov
inc
imul
and
and
loopne
mov
jg
and
sbb
push
leave
pop
sbb
out
inc
xor
pop
xor
sbb
lock
jg
cmpsl
decl
loope
loope
in
loop
pop
leave
cmp
sbb
mov
cwtl
mov
pusha
jnp
lea
outsb
push
ljmp
push
mov
out
out
pop
imul
and
jmp
and
pusha
and
movaps
mov
mov
scas
mov
roll
mov
xor
test
push
lret
add
inc
insb
xor
xchg
les
sub
inc
stos
decl
and
sbb
add
mov
mov
jmp
ds
xor
fsubrl
push
add
xchg
sbb
lea
or
jne
in
repz
rorl
pop
ljmp
add
xchg
sbb
push
mov
mov
dec
inc
jmp
dec
push
jns
lds
es
arpl
mov
mov
pushf
dec
notb
cmp
jmp
movsb
je
fsubl
mov
mov
nop
mov
xchg
dec
cmp
daa
data16
leave
out
adc
ret
outsl
hlt
mov
sub
insb
mov
sub
lods
jmp
xchg
in
out
fstpl
jmp
into
pop
jle
or
mov
add
fucomip
cmp
in
fdivs
cmp
sbb
lods
mov
and
pushl
arpl
mov
gs
stc
aam
out
xchg
aad
mov
ds
pop
std
jmp
mov
and
mov
test
dec
idiv
lcall
pop
pop
test
imul
iret
jle
enter
push
call
icebp
push
data16
imul
add
jno
repnz
sbb
insl
scas
mov
sub
int
xchg
push
leave
imul
test
jg
jg
and
and
ret
fwait
and
stos
shlb
sub
lds
decl
push
or
mov
movsl
les
push
mov
adc
aam
jmp
sbb
adc
or
mov
fnstcw
push
inc
sbb
clc
add
das
incl
shlb
add
ret
mov
inc
mov
pop
xor
cmp
mov
or
cmpsl
jecxz
xor
mov
incl
js
add
sahf
inc
sbb
mov
jg
or
ja
cmp
aad
jno
jns
in
xor
out
insl
subb
cmp
and
cmpsb
loop
and
out
scas
add
insl
into
cmp
jg
das
hlt
idivl
mov
call
add
cld
dec
icebp
mov
and
in
push
xor
add
pop
mov
pop
insl
decl
aas
sub
sub
jnp
sbb
cs
inc
ljmp
incl
aas
pop
imull
dec
push
pop
push
sbb
or
popa
into
gs
pop
js
inc
jmp
cli
cld
insl
jg
repnz
iret
mov
pop
test
add
or
mov
lahf
test
or
cmc
fldt
scas
adc
aaa
pushl
nop
clc
dec
lret
sub
aam
mov
clc
sub
cmp
es
push
pop
lret
aad
mov
pop
jge
jg
loopne
inc
xchg
loop
mov
int
in
aaa
or
mov
mov
dec
jg
fbld
mov
or
mov
sbb
outsl
cmp
incl
decl
jnp
fdiv
sbb
fnstsw
sub
xor
test
iret
daa
and
push
cld
adc
aas
mov
loop
jmp
rol
cmp
xor
push
in
pop
inc
out
mov
dec
outsl
mov
cli
jmp
fcmovu
jmp
fldl
mov
jbe
xchg
dec
out
repz
lahf
lahf
fwait
mov
mov
dec
imul
addr16
popf
mov
gs
call
fsubr
inc
jg
cmp
jno
mov
in
or
daa
incl
flds
imul
ljmp
xchg
mov
dec
sbb
scas
jg
rorb
inc
cmp
push
aam
pop
sub
inc
insl
mov
pop
mov
adc
orb
push
ret
jmp
adc
mov
dec
out
mov
test
add
outsl
subb
das
test
mulb
scas
dec
mov
call
decl
fsubr
cld
push
cmpsl
mov
xchg
or
lcall
push
xchg
adc
jge
sti
xor
lcall
xchg
sbb
call
aam
mov
fs
dec
cmp
int3
pop
xchg
incl
insl
insl
inc
push
out
push
int3
movsb
and
lahf
in
popf
aaa
in
int
repnz
and
icebp
incl
xchg
iret
outsb
fs
sbb
cld
jae
pushl
mov
jbe
mov
fwait
lcall
arpl
ljmp
mov
mov
loopne
and
lcall
insl
and
sub
cli
pop
sti
cltd
mov
cs
and
sbb
sub
cld
mov
stc
or
rcll
jo
hlt
mov
call
jb
call
les
dec
adc
inc
or
incl
clc
and
cmp
lcall
sbb
arpl
xchg
in
adc
call
xor
cmp
subb
sbb
cmp
call
jmp
je
pop
lods
jns
pop
mov
mov
popf
test
pop
test
mov
ss
pusha
pusha
loope
enter
jmp
and
sbbl
and
dec
jge
lcall
std
add
addr16
mov
out
or
es
adc
push
out
lods
decl
insb
hlt
jmp
ja
ret
outsb
push
mov
add
lcall
stc
cmp
mov
rorb
xor
cmc
lods
daa
iret
push
inc
xchg
xchg
mov
inc
les
adc
jne
xor
loopne
decl
cmp
cltd
call
int3
ret
jbe
lcall
mov
jg
les
mov
mov
out
aaa
cli
call
idivb
cmpsl
and
leave
add
fistl
lcall
cmp
cmpsb
shl
shll
adcb
xor
aam
rolb
movsl
xor
ljmp
in
lds
dec
js
pop
cmc
push
scas
mov
aaa
jle
loopne
bound
cmp
in
jo
jmp
sbb
ffree
sti
inc
xor
ret
xor
inc
scas
sub
jns
push
cmp
xchg
push
mov
or
jg
or
movsb
ja
mov
xchg
test
aas
stc
inc
pop
mov
add
hlt
xchg
cli
incl
sub
into
inc
mov
repz
test
test
das
and
inc
call
mov
cltd
test
cli
stos
f2xm1
sbb
push
or
jg
cmp
out
outsb
je
add
dec
stc
pop
fcmovnbe
or
add
xor
idivb
mov
andl
sti
fnstsw
test
rcl
xchg
lds
adc
jg
lcall
sahf
repnz
pop
sahf
mov
dec
mov
shlb
push
lcall
icebp
adc
rol
enter
pop
call
xchg
jg
lea
stc
loope
aaa
leave
popf
mov
add
cli
jg
inc
incb
lcall
out
sub
pop
mulb
outsl
loop
dec
inc
mov
sti
icebp
xor
xchg
testb
jg
pminsw
push
repz
out
lahf
aad
sbb
push
mov
lods
ljmp
icebp
sarb
fildll
pop
xchg
lods
leave
ljmp
and
lahf
push
stos
daa
imul
dec
pop
scas
and
pushf
jl
mov
mov
push
in
es
popa
lea
sub
rcrl
sahf
mov
or
cld
dec
mov
mov
sbb
push
data16
cmpb
das
lock
mov
in
je
cld
or
mov
and
inc
loopne
lock
cli
sbb
cwtl
xor
dec
mov
shl
movsl
in
lcall
outsl
sti
mov
cmp
stos
outsl
dec
jg
aas
rolb
repnz
push
or
test
fistpll
add
gs
pop
bound
inc
mov
pop
jbe
sub
sbbl
arpl
fwait
dec
aam
jge
loope
sub
outsl
into
xor
dec
pop
cld
pop
mov
dec
push
sub
popf
movsl
push
mov
push
sbb
or
testl
lods
fists
sub
sbb
push
pop
sub
xchg
xor
frstor
and
inc
loopne
fidivrs
mov
xchg
add
jbe
add
adc
or
push
fnsave
outsb
stos
cltd
leave
mov
pop
rep
xor
decl
or
sub
xchg
stc
mov
mov
and
aam
cli
mov
test
mov
lcall
js
cwtl
jns
out
push
xlat
and
icebp
ljmp
add
and
sbb
cmp
xor
dec
rep
jg
pushl
outsb
nop
push
inc
je
ror
sbb
pop
mov
out
push
cli
pop
cmp
aad
aam
inc
mov
shl
outsl
dec
aam
das
fistps
add
cmpsl
push
imul
mov
jae
sar
ds
dec
out
je
loope
push
insl
sahf
dec
pop
dec
in
push
mov
ja
fidivs
bound
adcb
or
mov
push
jl
mov
adc
cli
jnp
iret
test
xchg
clc
add
jmp
out
sub
mov
jbe
ljmp
add
add
ret
in
out
push
mov
pushl
inc
push
movsl
jmp
call
mov
jp
adc
test
jg
dec
hlt
xchg
xorb
ja
out
outsl
jb
lahf
test
sar
hlt
push
pop
scas
jecxz
notl
je
cli
movsb
lahf
mov
fidivrs
call
inc
in
or
jp
mov
jno
add
push
jne
sbb
jne
inc
insb
lret
fdivrs
repz
sub
mov
lret
in
jp
cmpl
sub
movsb
notb
pop
pop
lock
inc
or
popf
xchg
cmp
or
in
notl
sbb
movsb
lcall
mov
xchg
idivl
pop
inc
pushf
add
push
cmp
dec
mov
jmp
je
mov
adc
sub
sahf
pop
stc
imul
or
add
js
jmp
loop
pop
rclb
mov
lcall
cmpsl
or
ror
aaa
jg
call
clc
sti
mov
int3
xor
jge
cmpb
idiv
or
movsb
jge
es
cld
push
and
pusha
inc
dec
call
jl
sbb
or
xor
pop
popf
hlt
je
sbb
rcr
inc
mov
inc
gs
addr16
popa
lcall
sbb
insl
mov
add
sub
push
cltd
std
push
sub
mov
test
jg
sar
daa
fsubl
add
cmp
sbb
pop
jns
cmpsl
sbb
mov
sbb
jle
mov
outsl
cld
pop
repz
stos
jb
cmp
inc
insb
dec
inc
scas
insb
xchg
mov
or
mov
cld
aaa
mov
loop
scas
mov
mov
roll
hlt
xchg
divb
push
dec
popf
adc
adc
ljmp
sbb
fildl
popf
sarl
ror
mov
jns
test
dec
mov
repz
aaa
cmp
sub
fistps
icebp
incl
jae
jb
adc
mov
and
hlt
decl
sbbl
pop
int3
jae
pop
ljmp
cli
pop
sbb
orb
fsubl
sti
or
test
adc
jmp
shr
push
mov
mov
decl
or
lods
inc
mov
pop
xor
adc
xchg
scas
or
cmc
add
hlt
lods
and
imull
mov
clc
or
in
loopne
xchg
movsl
xor
and
fstpl
cmp
test
add
sub
cmp
mov
sbb
call
and
mov
cmp
push
cmp
dec
fstps
add
mov
push
jge
aad
call
and
cmp
inc
add
cmp
xlat
aam
inc
bound
mov
cmc
mov
dec
insl
push
push
cld
pop
jp
mov
inc
incb
das
mov
xchg
repz
or
testb
push
lea
pop
dec
test
inc
and
mov
sti
imul
fldt
scas
cli
rcl
and
and
test
mov
cmpsl
or
pop
push
and
adc
das
fdivrs
mov
dec
jmp
fisttpl
sbb
cmp
decl
int
out
xchg
xor
adc
or
mov
lret
push
inc
rorl
inc
mov
push
daa
js
or
sarb
pop
mov
mov
aam
or
jl
call
add
inc
add
fwait
jle
or
outsl
or
int
sti
repz
jbe
aad
leave
push
xor
sbb
shr
cmp
ss
add
call
addr16
pop
dec
xchg
fwait
mov
ds
hlt
cmp
sahf
dec
mov
leave
mov
xchg
aad
mov
pushl
or
lret
lcall
gs
fs
loopne
call
xor
add
adc
dec
push
xchg
ljmp
std
ret
cli
push
dec
clc
inc
aaa
push
outsb
xor
in
rcr
loopne
subl
mov
lret
mov
insb
loop
xchg
dec
jne
cld
outsl
mov
sub
lahf
add
dec
loopne
mov
decl
push
push
aas
mov
repz
cmpsb
rcrb
ja
or
fxtract
shrl
lahf
sub
stos
or
jg
mov
cli
inc
cmp
cmp
adc
icebp
jmp
imull
lret
hlt
and
sti
mov
jb
in
xlat
pusha
jmp
fdivr
call
cli
pushl
jp
fs
adc
and
dec
adc
push
jge
ljmp
movsl
mov
adc
lcall
xchg
enter
lcall
mov
add
cmpb
shlb
ljmp
lock
jo
inc
pop
arpl
daa
mov
shl
inc
pop
jb
in
mov
jg
pusha
mov
insb
lea
push
iret
int3
lret
es
jmp
mov
cwtl
repnz
adc
dec
adc
in
dec
call
test
xchg
inc
xchg
std
lret
inc
outsl
pushl
jmp
sbb
mov
mov
mov
jecxz
loop
clc
pop
icebp
decl
stc
adc
mov
out
lret
pop
cmpsb
jb
pushf
decl
fisttpll
int
mov
inc
sbb
lahf
es
aad
jg
jnp
daa
push
pop
xor
mov
fs
or
out
out
pop
xchg
loopne
inc
mov
mov
aad
lret
push
xchg
sbb
loope
sahf
lods
decb
xchg
push
in
sbb
test
sbb
and
out
xchg
pop
pop
imul
jle
or
call
and
dec
adc
addr16
xlat
gs
mov
cmpsb
stos
setnp
stos
or
jne
stos
lock
int
fisubrl
out
push
mov
cmpsb
enter
incl
xchg
and
dec
and
jg
shll
xor
cmp
cmp
jecxz
jg
repz
int3
and
mov
divl
in
push
lahf
xlat
mov
cmpl
adc
inc
xchg
pop
jb
cs
repnz
js
lock
das
dec
mov
punpckhwd
outsl
das
std
outsl
lods
sub
repnz
lds
shll
je
sub
ljmp
ficoms
fbstp
fcomi
mov
pop
jb
jmp
fdivrl
jg
movsb
in
push
jp
lret
stos
loopne
mov
cwtl
sahf
and
mov
and
push
popf
mov
bound
sub
xchg
xchg
lock
lock
stc
mov
jecxz
cmp
or
sub
xor
decl
out
sahf
inc
or
fwait
xor
mov
fbld
mov
les
call
cmp
mov
cwtl
filds
push
cld
dec
xchg
fnstsw
mov
or
cld
jg
movsl
test
jo
lds
mov
arpl
incl
call
and
cmc
inc
sub
xor
aad
jns
outsb
xor
incl
add
or
cmpsl
xchg
mov
fistpll
xlat
mov
ljmp
pop
sbb
in
add
insb
cmpsl
and
xor
insl
lcall
ljmp
cld
inc
scas
xor
mov
loopne
sub
push
adc
mov
push
ljmp
stc
push
sub
repnz
decl
aaa
or
jne
xchg
mov
in
pop
sub
xor
cmp
jb
xchg
cli
outsl
cs
test
outsb
cwtl
push
add
jg
cli
pop
pop
lcall
lcall
jbe
repz
or
lcall
or
adc
mov
inc
pop
enter
andb
jle
rclb
pop
ljmp
push
in
push
enter
int3
fs
call
jmp
repz
addr16
mov
and
incl
in
rcl
jnp
fildl
lahf
ds
pop
fs
cld
xor
hlt
fstpt
aam
push
js
mov
jno
xlat
mov
mov
mov
clc
jae
lods
and
fstpl
dec
fbstp
xchg
jp
dec
cmc
shlb
or
pop
xchg
mov
cmpl
push
jg
ret
sbb
xchg
shlb
jmp
rcll
mov
push
or
push
incl
fsubrp
inc
cmp
add
andb
gs
jne
cld
mov
mov
cmp
aad
stc
daa
jl
aam
jmp
mov
inc
mov
jae
sbb
xchg
jae
mov
scas
xor
mov
dec
push
in
lret
or
incl
or
pop
mov
leave
movsb
or
ljmp
jp
arpl
fsincos
jo
inc
lret
cmpsl
xchg
stos
xor
fwait
mov
sti
out
and
jb
push
loop
jg
out
pushf
ljmp
movsb
lds
jb
fidivrs
pop
rclb
xchg
jo
adcl
and
std
out
xor
dec
shlb
call
inc
dec
int
add
iret
jmp
and
push
jbe
add
shlb
in
or
pop
fucom
add
sahf
sbb
sub
push
sti
xor
pusha
stos
lds
mov
icebp
call
dec
je
js
jl
cmp
fwait
aaa
mov
inc
xchg
xchg
xchg
or
mov
test
or
in
pop
adc
push
inc
cmp
ljmp
cltd
dec
in
and
xor
aad
test
lods
clc
cmp
cld
and
in
or
lcall
pop
test
insb
scas
test
imul
pop
lea
adcb
out
cli
loopne
xchg
mov
or
daa
shlb
ret
cmpsb
pop
test
sub
jmp
lahf
cmpsb
je
leave
imul
data16
out
stos
jg
shlb
mov
in
adc
push
jns
mov
push
imul
jmp
iret
hlt
xlat
je
jne
lds
lret
das
cmp
outsl
and
cld
or
dec
outsb
and
pusha
hlt
jo
imul
pop
mov
sub
fiadds
sub
mov
in
jg
mov
sbb
repz
and
jg
rolb
nop
push
inc
aas
fdivrl
mov
rcl
mov
lret
cmp
xor
outsl
xchg
loope
rcll
decl
fcomps
sub
cwtl
add
lock
ds
push
inc
dec
fistpll
jmp
dec
fcos
ljmp
jle
sbb
leave
sub
iret
fs
push
scas
addr16
mov
or
add
call
incl
sbb
and
popa
out
in
daa
cs
cmpsl
hlt
arpl
lret
xchg
push
fsin
and
lods
test
sbb
mov
loop
xor
lock
jl
test
test
pop
mov
pop
inc
dec
lret
iret
lret
scas
dec
jb
fcompl
out
in
icebp
xchg
or
lods
or
xor
cmpsb
add
and
aam
inc
rcrb
dec
pop
call
dec
popa
ret
mov
nop
fsubrl
pop
xchg
mov
lcall
cmpsl
aaa
sahf
addr16
sbb
in
xstore-rng
cmpsl
xchg
dec
xor
das
hlt
pop
mov
rclb
push
loope
pusha
loopne
lret
ret
incl
inc
addr16
jl
cs
sbb
sub
ljmp
aam
jmp
jle
dec
stc
ret
jae
aam
adc
das
jge
push
or
pop
jg
jno
sub
mov
fwait
in
in
mov
mov
sbb
jo
cmp
dec
jge
fs
lahf
outsb
dec
ds
fwait
decl
lahf
mov
cmc
push
cmp
mov
neg
push
push
push
movsl
inc
push
loope
in
in
and
mov
or
pushl
ret
jne
cmc
enter
and
mov
dec
push
cmp
push
sbb
mov
inc
sub
shr
sbbb
jmp
jg
pushf
cs
push
fimuls
or
aam
inc
adc
rorb
pop
lret
stc
mov
fsts
scas
shrb
jbe
sub
inc
leave
sbb
jno
insb
sbb
dec
test
pop
cmp
aam
fildl
ret
das
cmc
incl
and
js
pop
mov
lods
fsubr
addr16
inc
lret
xor
popa
cmp
jecxz
lcall
cli
loope
out
mov
push
les
ds
pop
xchg
adc
pop
cli
je
dec
sub
rcll
ja
sahf
jae
add
jg
pop
jns
pop
mov
ss
inc
std
idiv
lcall
pop
dec
and
mov
xchg
call
jg
leave
daa
adc
stos
loope
or
stos
mov
sub
inc
lds
hlt
dec
mov
das
hlt
jle
mov
push
pusha
mov
inc
sub
shlb
imul
cmpsb
jg
mov
rclb
gs
scas
push
ljmp
sub
push
into
mov
sub
push
into
ret
mov
out
and
add
loopne
add
in
jg
inc
mov
add
lods
jno
insl
fcomps
loopne
fs
jne
std
fisubs
rcrb
jl
scas
clc
sbb
push
mov
push
mov
call
sub
popf
pushf
sarl
cwtl
xchg
jl
lock
jmp
das
cmp
movsl
test
cmp
loop
sbb
mov
decl
sahf
pop
cmpsl
das
les
push
push
or
jg
test
mov
inc
mov
data16
lea
ljmp
mov
jne
mov
jle
cmp
fidivs
insb
loop
jmp
data16
jbe
imul
jmp
push
loopne
inc
mov
xchg
add
aaa
jp
adc
sti
sbb
pop
or
pusha
xchg
pop
xor
xchg
test
mov
add
int3
sub
inc
pop
jle
dec
jb
add
mov
aaa
mov
movsl
das
xor
mov
loopne
xchg
mov
cltd
pop
cmp
in
pop
arpl
xchg
cli
incl
adc
or
mov
mov
pop
push
inc
xor
outsl
mov
adc
add
or
loop
test
hlt
mov
aam
test
push
and
jg
fstl
push
dec
movsl
pop
aaa
call
mov
leave
insb
ljmp
add
mov
test
push
cli
pop
loope
cmp
std
inc
shl
mov
outsl
jl
movsl
mov
mov
adc
mov
xchg
in
jge
adc
inc
divb
jae
cmc
imul
jns
lods
movsl
push
sub
dec
jge
subl
jmp
gs
mov
mov
sub
fcoms
sbbl
or
leave
imul
lcall
mov
lret
ret
inc
repz
cmp
cmp
mov
adc
or
jle
stos
and
adc
cli
incl
fidivs
mov
ret
mov
cmp
jp
push
push
es
mov
mov
or
add
dec
jae
scas
or
incl
mov
in
jae
push
insb
push
scas
call
jp
lahf
jae
lock
iret
aas
iret
shrd
adc
mov
lcall
inc
adc
mov
mov
stos
out
aaa
fwait
xchg
mov
sub
adc
int3
jle
ljmp
push
xchg
cwtl
mov
adc
or
cltd
or
xor
mov
mov
sbb
idivb
movsl
xchg
adc
jnp
cld
add
add
xchg
call
test
call
mov
addr16
adc
mov
push
mov
and
call
sar
mov
shrl
or
cmp
cmpsb
mov
pop
js
arpl
lcall
hlt
or
push
xor
add
fadd
stos
push
aam
sub
pop
ja
loop
add
sub
jg
inc
shrb
lret
cmpsb
scas
leave
movb
adc
add
ljmp
incl
dec
loope
or
int3
mov
inc
aam
fsubp
ret
pop
clc
cltd
cmp
push
xor
call
mov
xchg
jle
push
and
inc
xchg
xorb
test
mov
mov
enter
andb
cmpl
pop
cmp
scas
pusha
stc
adc
cmc
mov
jo
out
scas
pop
jp
andl
shl
nop
ss
add
xchg
out
rcl
cld
incl
repz
jo
pop
mov
fcoml
dec
mov
mov
lea
xchg
inc
test
mov
in
ss
cmp
sti
outsl
loop
cmp
mov
data16
cli
sub
jns
outsb
mov
fwait
call
sarl
or
daa
dec
pusha
or
jo
das
cmc
jmp
xchg
adc
xchg
push
jg
mov
clc
add
cmp
call
call
cwtl
or
lret
aas
cs
push
cmp
mov
std
cltd
sarl
or
pop
cmp
mov
nop
jo
cmp
repnz
nop
sbb
sub
scas
inc
in
sub
subl
in
mov
pusha
sbb
pushl
pop
mov
aam
or
pushf
fs
aas
adc
aaa
jno
adc
dec
cld
aaa
mov
dec
mov
fbstp
add
jge
divb
pop
or
add
inc
hlt
xlat
adc
aad
sbb
push
je
dec
adc
call
pop
clc
clc
or
pop
int
push
lcall
and
fwait
loope
ljmp
fsts
jl
dec
sub
imul
clc
rorb
pushf
outsb
ret
mov
sahf
and
push
mov
mov
outsl
cwtl
lret
movsl
mov
xchg
dec
sub
ret
adc
jg
rcr
xchg
mov
ljmp
push
sar
sbb
push
sub
pop
lods
sub
pop
mov
sbb
mov
int3
in
push
pop
ss
push
in
pop
mov
xor
jmp
jno
ljmp
push
pusha
sahf
jmp
pushl
jmp
push
xor
std
sub
lcall
movl
aad
inc
push
jae
jmp
dec
xlat
test
sub
into
push
and
lea
das
mov
in
test
rcl
daa
jmp
fcomi
pop
icebp
add
pusha
or
decl
out
test
lea
push
aaa
iret
and
lret
or
incl
mov
jmp
clc
pop
dec
mov
pop
dec
inc
stos
mov
scas
mov
or
shll
aaa
faddl
loop
lds
sub
iret
xchg
mov
push
repnz
jmp
pusha
mov
jnp
sub
stos
pushf
ficomps
jmp
sahf
and
nop
cmp
mov
pushl
or
sbbl
and
loope
pushl
mov
pop
imul
out
cld
add
fwait
js
lret
incl
std
repz
jo
mov
sbb
mov
pop
arpl
notb
add
out
xor
das
sbb
jae
insl
push
pushf
cli
iret
into
inc
pop
test
jecxz
enter
adc
lahf
jns
fucomip
popa
push
push
mov
pushl
mov
mull
push
inc
fildll
scas
mov
divb
xchg
inc
mov
cld
xchg
push
or
fdivp
les
out
imul
jmp
or
int
bound
stos
scas
mov
xor
adc
pushl
shlb
xor
jle
inc
mov
adc
insb
mov
push
cmp
or
fistl
lahf
fdivrl
xor
jge
mov
loopne
lods
mov
sub
sbb
test
or
pusha
orl
mov
xor
push
lcall
call
ss
push
mov
clts
add
popf
jno
iret
xlat
pop
jns
out
hlt
push
mov
jno
mov
and
cs
stos
adc
hlt
in
call
pop
dec
inc
andb
jns
add
loope
mov
into
jmp
push
xchg
mov
or
dec
push
aad
in
outsl
sub
gs
jmp
lock
jg
mov
add
fidivs
push
ljmp
xor
outsb
adc
pusha
cmp
pushf
pop
cli
sbb
mov
test
cmp
xchg
fidivrl
out
lods
out
xor
or
ss
daa
lret
sub
lcall
pop
in
shll
inc
mov
mov
sbb
mov
or
mov
pop
jg
call
stos
ret
loope
or
mov
inc
lods
push
hlt
xchg
cli
pushl
xchg
icebp
adc
rcr
lcall
cli
jg
ljmp
push
pop
mov
jmp
test
pop
cmp
xchg
pop
clc
adc
pushf
ret
addl
mov
outsl
jo
fnstcw
jo
arpl
mov
pushl
daa
jl
fisubrs
jge
push
std
cli
pushl
xlat
cmpsl
es
icebp
jle
insl
mov
xor
mov
inc
xor
jmp
dec
or
decl
ljmp
cmpl
lds
mov
jmp
pop
addb
pop
mov
mov
and
mov
push
cld
incl
and
mov
mov
mov
mov
das
icebp
dec
ljmp
cmc
cli
in
sbb
pop
inc
dec
outsl
nop
movsb
repz
insb
dec
std
test
pop
int3
xor
dec
imul
stos
outsl
lock
pop
jbe
lods
pop
mov
mov
inc
fdivs
sarb
mov
lds
daa
cmp
push
ja
and
repnz
xor
dec
fst
dec
divb
aas
sub
sub
decl
lcall
or
pop
inc
dec
rcrl
sbb
pop
rcrl
cmp
decl
cwtl
mov
inc
jl
mov
add
adc
scas
andb
jecxz
add
mov
pop
sbb
cmpsb
lock
push
sbb
ljmp
dec
xor
push
pop
jmp
cmpsb
mov
and
ret
sbb
lock
mov
pop
hlt
sbb
aas
aam
in
jg
mov
outsl
std
cmp
adc
sbb
xchg
xchg
aad
xor
ret
sar
sub
out
scas
add
jne
cltd
dec
hlt
and
cli
vfrczpd
xchg
int3
mov
or
jmp
orb
lret
push
in
jmp
mov
pop
add
mov
xchg
jp
xor
jg
pop
adc
pop
fnsave
add
outsl
jp
mov
lock
fisttps
cmp
or
mov
insb
out
stos
cld
mov
ljmp
out
mov
andl
mov
cmp
sahf
pop
cmpsb
sbb
in
dec
xchg
stos
faddl
jl
lret
jnp
sub
setge
pop
mov
jg
mov
push
push
jp
rorl
xor
sub
mov
enter
js
cld
push
jmp
loop
add
xor
xchg
mov
mov
arpl
push
xlat
mov
stc
push
leave
decl
cmp
out
sbb
xorl
icebp
loope
xor
jecxz
inc
js
test
test
into
arpl
xchg
insb
and
out
addr16
add
sbbb
and
aad
ss
and
lcall
jno
jg
ss
fimull
cmpsb
add
outsb
rolb
pushf
pop
clc
pushl
dec
arpl
dec
jno,pn
stos
int3
cmp
and
gs
dec
mov
jmp
or
inc
mov
lds
scas
popa
mov
in
add
add
mov
lea
fdivr
fcmove
ret
leave
insb
stos
stos
out
inc
sub
mov
enter
ret
sti
pushf
aam
push
ss
or
sbb
not
and
pop
decl
jle
out
inc
pop
and
xor
flds
and
shl
ljmp
lcall
sub
loopne
add
xor
cs
aad
fs
int
dec
jae
mov
jo
mov
call
mov
inc
ret
test
cmpsb
mov
decl
dec
push
adc
pop
mov
stos
pop
punpckhwd
or
pushl
out
push
jmp
cmp
cmp
adc
mov
cld
fbld
jno
sub
pop
js
fstl
cli
and
jecxz
call
in
enter
ljmp
pop
movsl
sub
rcrl
dec
je
leave
pop
dec
bound
sarl
push
je
test
sahf
pop
std
push
jl
push
pushf
in
sbb
aaa
pushf
push
in
aad
nop
loopne
pop
loopne
loop
mov
ljmp
pop
adc
or
cltd
loop
js
decl
cmp
imul
mov
mov
xchg
sbb
dec
mov
ret
mov
sbb
mov
arpl
xor
insl
fdivs
push
jne
push
push
fld
fwait
pop
roll
mov
in
sub
movsb
js
arpl
std
in
pop
sarb
jmp
or
mov
outsl
inc
lret
loopne
pop
sbb
popa
mov
adc
loopne
daa
pop
xchg
sar
inc
loop
push
bound
and
push
jbe
bound
insl
and
inc
rclb
sbb
inc
incl
lods
shl
ja
inc
pop
sbb
int3
sub
frstor
and
call
sub
sahf
inc
iret
pop
inc
jmp
ret
xchg
add
xlat
test
bound
push
decl
popf
bnd
je
clc
cmp
dec
push
mov
push
sub
xor
aas
scas
rolb
push
addr16
fnsave
sub
incl
xchg
mov
lcall
ret
leave
mov
pop
inc
cmpsb
xor
jp
cmpsl
jnp
jg
mov
testl
in
ss
mov
jmp
or
pop
mov
pop
lcall
cmp
push
push
pop
mov
int3
out
pusha
lret
cmp
arpl
push
movsl
dec
mov
nop
outsl
std
call
repz
leave
test
adc
addr16
test
xchg
push
dec
add
decb
mov
lock
rcr
fisttpll
and
fbld
in
out
sub
mov
add
push
jne
mov
jl
ret
out
lret
mov
clc
lcall
jp
pop
push
shl
mov
aad
and
loopne
mov
arpl
in
push
ja
adc
negb
enter
cld
call
sub
jne
cwtl
lock
les
lods
arpl
mov
enter
das
sar
fwait
out
dec
sbb
xor
add
std
xor
int3
pop
sbb
pop
sbb
pop
sbb
lods
das
cmc
stos
aam
loope
bound
icebp
xor
cld
jmp
dec
imul
repnz
je
aam
pop
nop
test
inc
in
cs
push
mov
call
clc
mov
or
add
and
mov
ret
sbb
sbb
mov
dec
icebp
ja
insl
jecxz
jle
outsl
jecxz
mov
addb
int
cmp
mov
inc
repnz
mov
mov
mov
mov
js
das
push
aad
clc
pushl
dec
stc
repz
push
jmp
mov
push
outsb
loopne
mov
scas
ret
das
aas
jbe
pop
sub
cmp
clc
test
outsl
push
repz
mov
and
fdivrp
jmp
dec
daa
iret
or
mov
inc
cmc
mov
or
pushl
jle
adc
cmp
pop
mov
clc
test
add
xchg
sbb
je
or
imul
mov
ret
jg
cmpsb
mov
mov
pushf
daa
mov
stos
add
and
mov
out
xchg
inc
push
add
mov
les
test
ljmp
dec
add
pusha
and
sahf
sbb
call
fimull
push
js
orb
push
in
xchg
popa
aad
aam
pop
add
outsl
mov
pop
mov
es
ror
lds
push
iret
mov
fs
cmp
rcrl
add
adc
dec
xchg
add
hlt
pop
popf
pusha
sub
adc
sbb
jb
add
sbb
fsubrs
dec
or
lock
xchg
mov
dec
sbb
dec
xchg
fnstsw
ljmp
test
jmp
pop
orl
lock
sti
cmpsl
fs
testl
test
sti
pop
ljmp
ret
loope
cs
jnp
jns
mov
mov
imul
or
jl
mov
lcall
aas
sbb
cs
enter
jg
add
add
adc
out
cmp
sbb
adc
lods
ret
jecxz
add
mov
adc
or
loop
lcall
hlt
mov
jg
shll
sti
mov
outsl
inc
sub
push
cmp
sub
addr16
mov
push
loop
ss
stos
add
and
lret
xor
std
ja
call
or
cmc
stc
leave
push
arpl
aas
pop
movsl
push
inc
adc
std
outsl
aad
test
and
es
push
pop
into
insb
xchg
cs
aas
inc
hlt
aas
repz
aaa
sti
lods
not
sub
ljmp
lods
jns
sub
popa
jnp
aad
and
jnp
dec
pop
push
and
jo
jbe
outsl
std
push
sar
nop
popa
test
add
push
sub
adc
lcall
cmp
nop
jo
push
jp
loopne
or
mov
xlat
jecxz
decl
or
std
shlb
inc
js
sahf
repz
add
mov
jns
fs
aad
push
lahf
aad
das
xor
push
mov
cmp
push
ds
or
data16
test
shlb
cmp
cmpsl
shlb
notb
cli
ljmp
lock
inc
iret
pop
mov
clc
icebp
call
cmp
adc
sub
addl
pushf
xor
das
mov
pop
cwtl
fiadds
in
call
push
data16
jmp
icebp
mov
pop
stos
repz
push
dec
sub
mov
xchg
decb
mov
xchg
test
and
lods
cmp
clc
push
jmp
pop
inc
or
loopne
xchg
imul
pop
pop
jbe
pop
ja
lods
pop
je
psrad
cld
in
decl
jno
lods
into
cwtl
mov
sbb
or
fs
icebp
jg
mov
gs
mov
mov
pop
fnstsw
push
adc
push
push
sub
jmp
cmp
dec
std
pushl
mov
xor
in
shrl
push
jmp
jg
jns
das
fldt
push
ret
mov
shrb
mov
mov
mov
ret
in
jmp
popf
mov
cld
lds
mov
loopne
fimull
fcomps
xor
call
clc
pop
add
int3
xchg
test
stc
test
je
sbb
jg
dec
cmc
push
dec
das
sub
in
push
sbb
popa
xchg
mov
lret
andl
icebp
pushl
cli
push
push
shlb
jo
and
imul
int3
in
jmp
sti
das
add
mov
call
add
xchg
sub
call
jle
pushf
inc
adc
xor
dec
mov
hlt
lods
mov
xor
mov
or
sbb
loope
adc
cs
data16
inc
pushl
add
fwait
es
movsl
pusha
lods
orb
dec
pop
and
jg
hlt
sbb
dec
addr16
fidivs
call
lock
or
xor
xor
loopne
lret
enter
pushl
jb
sub
cwtl
out
fldl
pusha
adc
sbb
mov
mov
cli
ljmp
dec
int3
inc
jle
inc
jle
enter
mov
lret
aas
adc
pushl
xchg
je
int3
sbb
aam
jmp
mov
mov
mov
adc
sbb
dec
insb
mov
jno
cld
aas
aaa
ljmp
mov
mov
lds
mov
adc
stos
repnz
icebp
cwtl
add
test
std
sbb
lcall
mov
test
ja
mov
adc
mov
fsubrl
push
mov
int
mov
insb
jo
sti
aam
out
ljmp
incl
push
cmpl
pop
inc
stc
int3
jo
dec
and
mov
push
xor
xchg
repz
mov
pushf
out
and
lcall
sub
push
sahf
mov
test
xchg
arpl
xchg
mov
call
aaa
mov
xchg
sbb
test
mov
es
xchg
push
cwtl
mov
fdivs
or
push
pushl
pop
sar
mov
cwtl
in
scas
adc
sbb
xor
jg
jmp
jmp
cli
mov
xor
xorb
aam
lahf
mov
xchg
clc
decl
cmp
xlat
push
int3
cmpsl
lret
push
mov
ds
iret
sbb
mov
pop
lret
outsb
fisttpll
dec
jno
test
clc
adc
dec
daa
inc
jae
add
inc
jg
aaa
jmp
movsl
xchg
pop
cmp
jp
popf
add
adc
aad
incl
jb
dec
jmp
xor
call
dec
jg
enter
outsl
cld
mov
dec
dec
mull
adc
sub
in
sbb
dec
xor
decl
bound
mov
repz
pushf
fwait
push
aas
xor
clc
les
cmp
xorl
lcall
xlat
mov
cmp
stc
dec
sbb
xchg
mov
xor
add
sahf
jne
imul
mov
dec
xchg
lock
jl
xchg
mov
imul
pop
mov
mov
xchg
sbb
mov
jg
xor
arpl
cmpsl
pusha
pushf
or
lods
int
in
push
std
inc
in
pop
cmpsl
cmp
and
popa
lret
call
inc
add
jge
sub
clc
or
icebp
call
xor
in
mov
or
pop
aam
push
dec
jo
dec
leave
cmp
push
ljmp
leave
out
mov
leave
fs
cwtl
hlt
ret
fistps
cmc
mov
andl
add
mov
sti
enter
push
xor
push
jecxz
or
pop
adc
lock
jp
leave
mov
add
cwtl
fisubrs
lock
nop
outsl
push
mov
call
sbb
cmp
push
sub
xchg
mov
daa
imull
inc
decl
enter
or
mov
mov
xor
inc
push
into
xor
and
ljmp
inc
pop
mov
push
jmp
cmpsl
adc
xor
mov
test
fucomp
shrb
aaa
sbb
nop
sub
xor
lcall
pop
xchg
sub
js
sbbb
dec
call
mov
jno
sub
movsb
push
fildl
jg
loopne
mov
scas
adc
inc
push
pop
scas
ja
and
or
clc
test
lcall
ljmp
xor
jmp
in
insb
test
scas
test
leave
out
adc
or
ljmp
mov
enter
cmp
mov
test
jle
pop
stc
sbb
push
pop
cmp
ljmp
push
push
cltd
mov
sub
sub
cwtl
sbb
rcr
ret
cwtl
imull
std
push
adc
data16
push
testl
testb
fsubs
or
sub
pop
push
xchg
push
adc
mov
decl
lcall
pop
faddl
fs
mov
das
lcall
out
std
inc
cwtl
or
pop
xor
pop
scas
shrl
pop
dec
mov
hlt
or
or
pusha
mov
fwait
cmp
mov
xor
or
decl
lret
mov
lds
push
test
fnstsw
lds
and
ljmp
mov
pusha
movsb
lahf
or
adc
jo
fwait
mov
or
sbb
inc
or
ds
iret
dec
fsubl
stos
call
or
xchg
xor
ret
jle
out
mov
movsb
xchg
push
lock
call
inc
dec
das
lea
push
sub
pop
movsl
aam
lods
lcall
std
outsl
add
adc
jge
data16
mov
sbb
jmp
push
call
pop
push
xchg
loopne
out
in
pop
sub
cltd
lcall
fimull
push
ja
pop
out
jne
pop
fs
loopne
arpl
dec
jo
sub
out
mov
addr16
xchg
cli
mov
lea
sub
std
push
or
sub
adc
pop
imul
ss
decb
sbb
pusha
mov
stos
rol
cmp
mov
push
cld
sub
sbb
pusha
mov
dec
sub
incl
jnp
push
jno
xor
aas
inc
sti
dec
mov
jb
push
sub
pushl
lret
adc
or
dec
jno
and
sub
jmp
out
fnclex
and
cld
lcall
push
or
shl
rorb
mov
jmp
pop
or
ja
in
rcr
jnp
pop
jnp
cmp
int3
cli
sbb
ss
xlat
mov
mov
push
cmpsl
xchg
xchg
ljmp
dec
outsb
push
lahf
sbb
sbb
push
and
sahf
mov
cmp
fbstp
mov
or
jns
movsb
and
shl
movsb
test
jo
js
fucomip
mov
out
fimuls
shrl
movl
sbb
iret
mov
std
inc
dec
inc
shl
pop
cmp
movlps
loope
mov
jg
iret
jmp
aaa
or
repz
adc
mov
fcoml
sar
test
lods
mov
push
push
xor
inc
jp
mov
mov
mov
jnp
mov
shrb
sbb
mov
mov
std
and
and
ljmp
mov
loopne
mov
dec
cmc
pop
nop
movsb
ret
inc
add
xchg
mov
orb
test
mov
cld
mov
decl
call
lock
in
lods
push
inc
cmpsl
xor
mov
jb
inc
testl
mov
mov
push
pop
clc
inc
fidivrs
dec
jne
add
sbb
sti
incl
inc
xor
cld
decl
cld
outsb
pop
cmp
mov
push
je
sarl
orb
sbb
pop
mov
ss
mov
mov
xor
jg
pop
mov
adc
mov
xchg
inc
xchg
out
pop
loopne
aaa
clc
rcr
xchg
loopne
clc
in
imul
mov
push
adc
add
xlat
lods
add
decl
in
jo
cmp
ss
sbb
rolb
lods
adc
cmp
incb
jb
repnz
sbb
mov
xchg
stc
cmp
push
mov
popf
cmpsl
stos
cs
jg
clc
mov
mov
mov
movsb
push
or
push
notb
cmc
pushl
fisubl
inc
inc
add
jno,pn
cmpsl
mov
arpl
xchg
loope
or
sub
data16
in
mov
dec
inc
mov
mov
jp
leave
lea
loop
mov
sbb
stos
cmp
decl
push
dec
push
rorl
popf
pop
mov
sbb
inc
xchg
popa
ljmp
lcall
jg
in
fsubrl
lret
pop
addb
xchg
inc
icebp
xchg
dec
pop
mov
out
pop
sarb
iret
push
jno
pop
aaa
cli
dec
pop
ds
xor
fists
movsb
mov
sbb
addb
xchg
and
pop
repnz
pop
xchg
outsl
shl
daa
mov
lock
fwait
cmp
stos
pop
int3
mov
lret
test
add
ja
cmp
loope
iret
movsb
shl
ja
lock
outsb
or
adc
push
push
push
ss
add
mov
movsl
repnz
lods
inc
loop
dec
lret
sbb
xchg
ds
jmp
scas
jnp
fs
addr16
nop
adc
jb
pop
push
test
jmp
lret
add
outsl
hlt
mov
cmp
sbb
mov
or
jge
xor
mov
adc
popf
sti
mov
test
jnp
ret
loopne
xchg
add
sub
pop
test
shll
push
or
std
and
stos
xchg
mov
push
lock
jg
stc
or
xchg
popl
xchg
fidivl
ret
cld
push
xchg
mov
filds
ffree
ljmp
imul
pusha
cmp
mov
push
cmpsb
push
mov
jns
fwait
in
pop
xlat
loope
push
jmp
scas
notrack
jg
sub
mov
mov
ret
push
subb
ja
sub
filds
pop
mov
mov
test
jne
inc
or
jg
lret
cwtl
jp
dec
sti
ss
sbb
and
repnz
ljmp
icebp
bound
inc
shl
fsubl
cmc
xchg
mov
add
mov
fs
mov
xchg
add
mov
pushl
ljmp
cmp
add
sar
jecxz
xchg
sbb
data16
loope
incl
jge
xlat
into
xchg
lahf
popf
cltd
push
jmp
mov
push
sub
leave
je
outsl
cld
pushl
jg
sbb
lods
lods
lret
jbe
dec
xchg
outsl
mov
xor
or
and
and
mov
or
push
jmp
mov
add
xor
mov
dec
xchg
in
in
dec
ja
mov
into
out
jo
pop
shlb
sbb
in
mov
or
out
mov
push
lret
bound
aas
js
mov
add
cmc
fbld
ficoml
in
dec
inc
test
mov
xchg
pop
mov
pop
push
push
shlb
movsb
sbb
incl
dec
mov
cli
shr
movd
repnz
jg
mov
sub
leave
sbb
mov
pop
lods
dec
ds
jg
or
decb
les
cmp
mov
pop
jnp
scas
cmp
fsubrp
fsts
xchg
dec
xchg
pop
scas
mov
or
das
lock
xor
jnp
xchg
out
out
fdivr
jge
in
incl
ljmp
sub
stos
or
mov
gs
sub
inc
sub
and
cmp
xchg
pop
popf
mov
or
xlat
imul
movsb
mov
push
repz
add
push
decl
sub
addl
lods
gs
cmp
jae
xchg
out
adc
lods
movb
loop
sub
mov
filds
popw
orl
dec
inc
mov
pop
pusha
insb
arpl
mov
fiaddl
mov
loopne
xor
std
pop
cmpsl
les
dec
call
cli
scas
push
daa
jg
pop
insb
sbb
pop
outsb
adc
jle
notl
clc
incl
outsb
xor
push
pop
iret
icebp
rcr
lret
aad
cmpsl
loop
xchg
mov
repz
add
fisubrs
in
andl
or
sub
test
leave
mov
jmp
xchg
cs
in
outsl
icebp
push
shl
pop
xchg
push
mov
jbe
fwait
out
subl
mov
add
sbb
call
ret
inc
or
jmp
insb
mov
sub
xchg
cli
ror
cld
call
pop
int
xchg
aad
std
mov
cmpl
adc
mov
loopne
jl
add
xorl
cmp
pop
incb
pop
adc
or
cmpl
and
cli
aaa
clc
mov
imulb
mov
dec
clc
outsl
lock
xchg
stos
mov
test
aaa
mov
cmp
xlat
fidivl
cmpsb
leave
repnz
mov
or
std
mov
movsl
jecxz
or
out
mov
add
cld
ret
std
in
loope
xor
inc
inc
dec
mov
loop
std
adc
jl
rolb
or
cld
lods
out
mov
push
jl
pop
add
test
inc
dec
pop
mov
add
sub
je
xchg
mov
add
sub
pop
push
mov
sahf
xchg
jmp
cmp
jbe
fstps
mov
clc
fnstcw
mov
mov
cmp
repnz
hlt
bound
jae
sahf
dec
xchg
push
lea
pop
clc
sub
pop
pop
mov
xor
xchg
and
cs
jo
pop
ja
ss
mov
outsb
add
or
imul
xor
jg
dec
sbb
decl
xchg
pop
sub
flds
fsubr
std
or
ljmp
in
enter
jbe
cvtpi2ps
fisttpll
sub
test
inc
stos
call
mov
lret
ds
mov
nop
xchg
dec
push
xchg
sub
out
and
aad
mov
in
mov
jno
push
push
loop
std
call
hlt
dec
xchg
fcmovb
adc
dec
push
push
lret
or
lods
decl
sub
test
orl
and
push
push
aaa
clc
outsl
cmp
cmp
adc
inc
jl
jno
or
pushf
mov
push
xor
jae
xchg
pop
loop
jno
aad
pop
ror
movsb
scas
nop
not
or
xor
inc
and
lds
add
cmove
or
mov
mov
or
sar
sbb
outsl
mov
scas
imul
shrl
outsl
mov
lock
addb
mov
mov
insl
dec
mov
ljmp
mov
xor
push
cmp
in
mov
push
jae
mov
xchg
sahf
mov
ficomps
mov
lcall
and
sbb
mov
in
fcomi
adc
lds
popf
mov
in
cmpsb
std
incl
scas
dec
jnp
adc
push
leave
mov
dec
dec
cli
dec
pushl
and
cmp
sbb
mov
mov
dec
push
push
ja
mov
pusha
orl
pop
insl
stos
int
push
enter
inc
test
andl
pop
push
mov
mov
mov
pop
sbb
xchg
inc
loope
aas
push
push
mov
call
or
mov
popf
lret
fcomps
cmp
sbb
mov
cwtl
mov
fcomp
imul
lcall
scas
dec
push
adc
mov
mov
ljmp
decl
pop
mov
push
fwait
rorb
gs
add
dec
std
pop
fcompl
inc
test
pop
imul
mov
and
lea
cmp
insl
sbb
inc
and
cmp
fisttpll
rolb
mov
pop
jl
pop
sbb
aas
mov
fildl
mov
scas
lock
insb
lea
jg
xchg
movsl
jne
and
je
xor
sbb
test
aad
test
ss
call
imul
mov
xor
inc
test
mov
cli
cs
adcl
inc
sbb
shlb
mov
popf
hlt
sub
loope
test
lret
fistpl
ret
adc
test
jno
adc
lock
pushl
jecxz
inc
inc
orl
cltd
mov
push
inc
cmp
and
dec
je
inc
pop
js
lcall
rcrb
xchg
and
push
lods
enter
clc
fcomi
mov
daa
roll
add
or
repnz
imul
lock
mov
dec
mov
or
inc
mov
mov
cld
lcall
testl
ret
stos
std
stos
push
and
lods
sub
jbe
mov
lret
sub
xlat
cmovg
es
int3
xchg
imul
lods
movb
cmp
inc
cmp
aas
stc
mov
mov
sub
pop
pop
cmpsb
xchg
bound
es
sub
jmp
movsb
dec
and
lds
rcrl
adc
inc
bswap
imul
add
pop
clc
orb
testl
daa
popa
mov
mov
and
loopne
lcall
int
in
or
arpl
mov
sub
loopne
outsl
je
push
push
into
xchg
pop
jp
inc
or
mov
xor
mov
stc
xor
lds
imul
jmp
cmp
gs
push
out
jae
ficompl
jge
xor
insb
xchg
mov
jnp
out
sbb
ljmp
inc
mov
mov
aaa
movsl
hlt
movsb
pushf
and
pop
pop
jmp
mov
jo
insl
mov
jp
mov
mov
mov
xchg
cld
push
lcall
shrb
shr
aaa
inc
push
ljmp
mov
fnstenv
and
test
jl
xchg
in
insb
mov
scas
std
pop
fldl
lcall
sbbb
or
stos
aad
xchg
jmp
add
add
xchg
icebp
call
push
adc
test
mov
jmp
sbb
jg
mov
in
xchg
into
movb
movsb
push
lea
xchg
jge
or
sub
push
cmp
int3
jae
gs
gs
xor
cs
loop
ljmp
push
imul
or
add
hlt
fistpll
sahf
out
push
add
push
and
mov
ds
xchg
mull
pop
add
sub
push
cmp
ficomps
or
add
push
dec
push
cmp
push
aaa
add
pushf
push
ljmp
or
push
and
push
nop
or
or
push
cmpb
sub
mov
inc
inc
add
xor
dec
xlat
inc
fisttps
mov
jecxz
xchg
shll
add
mov
mov
add
cmp
jbe
in
push
sub
push
or
or
pop
mov
push
and
add
rcll
add
mov
mov
mov
pop
cld
mov
repnz
stos
push
push
rorl
jge
stos
xchg
mov
cmp
leave
sbb
test
test
mov
inc
in
push
push
jl
adc
mov
inc
inc
xchg
mov
adc
insl
push
jno
clc
hlt
and
inc
sbb
repnz
lret
push
cmpsl
movl
cmp
icebp
icebp
mov
sbb
fisubs
cmp
dec
scas
inc
scas
sub
adc
fldenv
jg
jno
push
fidivs
push
outsl
fistpl
xchg
call
sub
mov
push
or
dec
push
pop
je
clc
out
sahf
push
in
or
aas
or
add
das
cmp
mov
mov
pop
orb
lods
push
fnsave
add
std
fsts
cmp
fsubrs
imul
add
inc
test
mov
push
or
sarb
inc
mov
add
pop
js
fistpll
mov
es
and
cmp
mov
pusha
je
cmp
mov
loop
ret
jg
sti
push
scas
int
les
mov
enter
int
rclb
test
mov
mov
mov
lret
scas
mov
fildl
jns
shlb
fs
lcall
or
xchg
insb
std
dec
ret
ret
pop
mov
lahf
shl
das
or
push
scas
in
inc
pop
push
daa
andb
inc
aaa
out
clc
rorl
insb
mov
cmp
dec
lods
adc
icebp
sarb
and
sub
aam
inc
imul
daa
or
push
sahf
popa
sbb
xchg
scas
imul
sbb
sub
in
lods
jmp
imul
cmp
inc
call
aaa
outsl
pop
xor
cmp
adc
shrl
lret
das
aaa
and
mull
inc
aas
jmp
jg
cmpsb
imul
sub
inc
add
jle
pop
sysret
mov
push
sahf
rorb
cmp
mov
pushf
add
push
mov
cmpsl
and
mov
push
mov
jp
ret
push
das
push
or
jnp
in
mov
dec
cmpl
std
cmc
or
sbb
ss
jecxz
xchg
scas
cld
cmp
inc
mov
fists
xchg
cmpsb
mov
pop
xchg
js
orb
rorb
jbe
cmpsl
std
mov
sub
shl
xchg
push
push
lods
dec
push
hlt
lds
pop
push
mov
in
adc
mov
and
jecxz
incb
push
popf
lret
and
push
add
aaa
ret
fmull
sub
xor
inc
andl
iret
pushl
jns
call
push
flds
add
mov
jno
test
pop
mov
out
dec
ljmp
orl
add
jl
cmpsl
sub
lock
ljmp
jge
jno
in
cmp
mov
push
cmc
dec
pop
andl
repz
shlb
sahf
push
rep
cmpsb
pop
and
cs
lcall
mov
push
inc
popa
sbbb
pop
mov
lret
movsl
adc
repnz
movl
adc
loope
insl
mov
popa
jl
cmpb
mov
jno
hlt
js
in
push
fsub
lock
call
addr16
push
add
pop
push
lret
or
stc
testb
mov
push
ret
sbb
dec
test
xor
dec
mov
aam
mov
push
dec
mov
pop
push
pop
enter
aaa
aas
pop
shl
jne
loope
out
das
jecxz
and
adc
nop
sub
sub
mov
sahf
dec
push
rol
add
repz
inc
rorb
fmuls
test
add
outsb
pop
mov
inc
inc
loope
mov
sbb
jmp
push
mov
lods
aam
xor
jg
iret
push
xchg
mov
imull
adc
lock
push
jle
mov
andl
pop
pop
sbb
cmp
popf
pop
rcrl
test
push
xlat
xchg
push
cmp
xchg
jecxz
into
sbbl
xchg
call
or
lcall
xchg
rcrl
stc
mov
test
add
pusha
fwait
add
aas
iret
hlt
xor
mov
aam
and
xchg
int
call
sahf
out
outsl
mov
push
mov
xor
pop
xor
jne
call
jo
out
push
mov
scas
decl
adc
push
fsubrp
mov
jmp
in
xchg
or
fwait
mov
add
xchg
hlt
jg
lahf
sub
xor
push
mov
sti
pusha
or
jb
lods
loope
jae
jle
xorl
jno
push
inc
in
and
push
stc
aaa
stos
mov
fisttpl
push
aad
test
sub
ja
or
jge
shlb
negb
mov
dec
imul
lock
fmull
push
outsl
in
sbb
rcl
pop
cmpb
cvtps2pi
fmuls
adc
es
enter
jae
in
scas
stos
aam
call
sub
int3
aaa
imul
shrb
fcmovnb
mov
sbb
lea
scas
mov
xor
xor
loopne
loopne
push
jae,pn
aad
pop
add
lcall
lcall
sahf
sub
mov
fidivs
cld
pop
push
adc
ret
ficomps
cld
mov
add
mov
xchg
or
ljmp
adc
mov
daa
ss
pop
pop
cs
ja
mov
adc
xchg
js
cmp
mov
mov
pop
mov
fistpll
or
and
dec
pop
lods
jge
mov
mov
and
xchg
pop
jl
pop
cmpsl
jmp
rolb
push
and
out
cmp
popa
fisttpll
negb
loope
test
push
stc
pop
jmp
jl
cmp
push
push
inc
mov
fs
inc
or
pop
ret
mov
xorb
pop
jl
call
jp
mov
mov
data16
stos
pop
shrl
push
pop
mov
sbb
repz
insl
fwait
ret
mov
mov
imul
mov
dec
js
or
fildll
fistps
stos
sub
jo
jo
insl
cmp
add
or
imul
inc
pop
lahf
adcl
imul
call
push
shrl
sbb
push
inc
mov
cmp
lock
sbb
mulb
or
popf
fidivrs
cmp
imul
adc
sub
mov
mov
sti
inc
or
mov
mov
cmpb
mov
adc
iret
pusha
enter
add
or
into
xlat
xchg
aaa
incb
pop
in
cmp
sbb
fs
xchg
mov
add
mov
loope
pop
ljmp
adc
aas
pop
subl
push
mov
data16
cmc
mov
rol
inc
movaps
mov
test
jnp
subl
stc
inc
pop
mov
imul
or
pop
test
in
mov
lret
sub
into
pusha
pop
pop
jmp
cmpsb
fsubl
pusha
outsl
lock
outsl
pop
fcmovnb
in
xchg
imul
inc
mov
loopne
inc
mov
call
or
jo
rclb
pop
nop
mov
aam
push
sbb
xor
add
pop
fists
ljmp
jno
sub
sbb
sbb
adc
adc
shr
lods
mov
push
add
jne
or
js
mov
inc
and
popf
pop
test
pusha
lods
xchg
mov
loope
cld
int3
data16
mov
mov
loopne
sbb
sub
cs
outsb
test
popf
adc
fstpl
psrad
sbb
stos
sbb
ret
jns
mov
xchg
dec
sbb
inc
stos
add
and
inc
inc
cld
insl
stc
cmovbe
sbb
pop
xchg
sbb
sbb
ror
dec
mov
adc
cld
outsl
aas
dec
push
push
data16
ret
pop
lea
dec
ja
xor
add
sarb
mov
inc
test
jno
call
and
sub
jbe
test
addr16
fmull
fildl
cmp
pop
call
cmc
pop
xor
pop
xchg
mov
or
push
and
sbb
std
sub
test
subl
cwtl
xor
inc
mov
jmp
and
pop
js
adc
adc
ret
xor
jbe
adc
idivl
nop
movsb
hlt
adc
hlt
pop
stos
ja
or
add
xor
pop
gs
pop
decl
mov
and
inc
ljmp
out
sbb
pop
mov
push
sahf
cmpsl
add
mov
xor
pop
and
jecxz
jl
fcmovu
cwtl
and
inc
lcall
das
xor
pop
insl
mov
cmp
push
popa
and
xor
enter
sar
mov
inc
gs
cwtl
jl
lods
jecxz
ds
outsb
aas
call
sub
jae
push
jns
xor
jl
lahf
outsb
pop
pop
mov
jae
inc
imul
pusha
aas
sub
mov
arpl
xor
ljmp
mov
loop
xchg
adc
outsl
xchg
xchg
mov
cmpsb
pop
das
insl
pop
jg
pop
pop
cmp
mov
in
dec
repnz
leave
and
dec
adc
daa
jle
xchg
cld
popa
push
cs
fnstenv
cmp
fcmovnbe
push
add
dec
push
sbb
mov
jmp
push
inc
dec
into
stos
pop
jnp
out
mov
pusha
add
stos
push
stos
mov
cmp
testb
adcb
and
mov
mov
push
repz
sbb
fwait
mov
imul
mov
inc
pop
sub
clc
pop
dec
xchg
pop
pusha
xor
sbb
and
dec
add
insb
icebp
fwait
mov
scas
inc
cmp
mov
dec
pop
or
ja
mov
add
inc
add
sbb
sar
std
and
inc
fwait
cld
cs
lock
repnz
rorb
arpl
add
jle
pop
fcom
or
popf
pusha
lcall
push
add
adcl
scas
loopne
cmc
pop
sbbb
pusha
adc
daa
adc
jne
aaa
adcl
rep
pop
enter
dec
bound
ja
outsl
mov
ja
sub
hlt
add
cmovl
in
jns
test
dec
ret
aaa
test
lods
fcmovnb
mov
out
pop
int3
pushf
sub
mov
sub
cwtl
test
xchg
cmp
xchg
xchg
pusha
pop
aas
lock
xorl
mov
hlt
pop
cld
sti
shr
cmp
les
xor
pop
insl
cmpsl
mov
ljmp
inc
adc
sbb
inc
ss
rolb
adc
mov
sbb
cmpsb
movsb
jecxz
hlt
dec
mov
push
xchg
push
es
jg
stc
addb
and
xor
popa
loope
dec
sbb
dec
in
popa
and
jne
pop
jge
roll
jb
mov
fldt
dec
das
sub
mov
xor
pop
pop
adc
fcmovnb
xor
pop
fsubrl
push
or
cs
pop
dec
push
stc
mov
sti
mov
outsb
imul
les
add
popf
jl
mov
js
xchg
loope
inc
and
outsl
iret
push
xlat
test
imul
sti
rol
test
mov
dec
scas
fidivrs
rolb
rorb
je
outsl
pushf
mov
sti
test
fldl
ret
xlat
int
sahf
movsb
andl
jo
lret
and
jmp
aas
dec
xchg
aad
sbb
sbb
loopne
lret
cld
fildll
fisttps
test
jb
shll
sbb
cwtl
or
addr16
mov
jg
jmp
xor
add
repnz
in
insl
xor
lods
xchg
dec
loopne
js
mov
inc
test
rep
adc
mov
mov
sahf
insb
dec
mov
ja
or
dec
jbe
pop
pop
cmp
dec
icebp
sbb
cld
push
jns
loopne
lret
or
cs
sbbl
arpl
pop
push
rcrl
dec
dec
xchg
push
push
nop
xchg
mov
hlt
lods
scas
inc
xchg
dec
push
xor
and
dec
jns
xor
mov
jno
inc
fldcw
cmpsb
ja
sbb
jne
ja
mov
out
outsl
gs
or
rcr
and
mov
dec
fsubr
mov
pop
mov
aaa
scas
stos
jns
dec
xchg
pop
lcall
add
push
jmp
or
cmp
ss
and
mov
xor
add
and
sbb
sbb
in
in
in
fdivrs
flds
inc
jl
cmp
xor
sti
pusha
mov
scas
sbb
sbb
mov
cmpsl
cmc
sub
dec
adc
push
adcb
inc
adc
lock
inc
lods
out
mov
ljmp
pop
add
pop
insb
mov
test
shll
data16
sbb
loope
adc
scas
fistpll
add
sub
mov
mov
test
jg
divl
lds
add
mov
push
decb
call
out
fmul
lods
jnp
nop
or
movsl
xor
mov
fmull
xor
push
and
push
pop
je
adc
dec
xchg
cli
iret
push
mov
test
ret
jbe
push
push
sar
mov
mov
lret
mov
mov
jne
pop
stos
inc
rep
sbb
push
sbb
mov
loopne
xor
shlb
orl
outsb
mov
loope
pop
mov
jle
rcrb
fiadds
es
or
push
adc
cmp
lock
pop
xor
orb
outsb
mov
xor
cmp
js
mov
cmpsb
pop
xor
repz
mov
das
loopne
ret
ret
mov
rclb
mov
inc
and
movl
mov
stc
push
xor
push
sbb
adc
dec
popa
rorl
push
lock
jo
xor
ds
lock
outsl
pushf
das
lcall
out
adc
pusha
inc
adc
popa
dec
and
sub
ja
add
lret
pop
sub
or
sbb
adc
rolb
push
xor
xor
in
aas
aaa
lcall
cltd
jns
repnz
out
mov
stc
cmp
int
bound
cmp
jae
das
fstpt
sub
icebp
inc
mov
je
loop
sbb
imul
sub
test
mov
fsub
push
rorl
push
jmp
popa
sbb
mov
sub
mov
jbe
mov
mov
in
testb
and
out
cmp
leave
ret
popf
sub
insl
dec
jg
out
and
imull
pop
mov
adc
push
nop
movsb
and
mov
mov
push
les
pop
fcoml
xchg
xor
filds
mov
inc
cld
push
sbb
mov
xor
xchg
in
jle
sbb
stc
cwtl
stos
lret
in
aaa
mov
push
xlat
sub
fwait
idivb
jp
cmp
test
xor
jno
xor
mov
cmp
sub
dec
push
nop
and
test
fidivs
and
movsb
lea
and
xor
add
jecxz
int
les
ret
push
fidivrs
shrb
push
and
iret
inc
adc
push
fcmovb
cmpl
hlt
jg
and
sti
lds
lods
pop
push
push
inc
sub
ja
fcmovb
lods
stos
sbbl
dec
jg
mov
inc
xor
lods
sbb
jne
cld
out
mov
scas
adc
xlat
popf
jnp
clc
leave
fmul
mov
xor
je
jbe
mov
cmp
pushl
adc
mov
mov
fistl
cmp
fdivrl
sahf
pop
movsb
push
inc
or
negl
mov
xlat
and
xchg
jbe
cmpsb
repz
fcomi
mov
add
and
xchg
les
ret
push
mov
into
mov
pusha
and
in
pop
sub
and
xor
jmp
cmp
xchg
push
lock
clc
sub
adc
call
cmp
ret
and
iret
xlat
outsl
adc
adc
fdivrp
xchg
mov
arpl
and
dec
gs
int3
jb
je
fwait
jne
and
jmp
push
outsl
sbb
cld
dec
cmp
addr16
and
stc
stc
in
pop
and
out
inc
fsubrs
outsb
popf
testb
jp
arpl
js
rcll
inc
sub
jmp
xor
inc
popf
xor
mov
mov
add
arpl
push
scas
in
call
std
fucomip
mov
imul
out
inc
adc
out
lock
mov
lods
add
cmp
jno
leave
pusha
or
ret
dec
pop
or
mov
cmpsb
cmpsb
insb
mov
adc
loope
lock
add
sub
daa
mov
mov
rcll
cmp
cs
lahf
jb
fbld
adc
ds
ret
repz
jp
das
sbb
push
out
in
fbstp
es
hlt
daa
adc
sub
inc
pop
mov
or
outsl
fcomi
shrl
mov
inc
push
add
loope
add
xlat
sahf
push
in
dec
cltd
xor
fwait
sbb
dec
in
pop
insb
fcomp
xchg
test
lea
jnp
aam
add
fcoms
jb
ljmp
or
cmp
push
jge
icebp
dec
lock
les
xchg
test
pushl
xchg
cmp
inc
pop
cmpsl
push
out
stos
cmp
pop
cli
or
xchg
sub
sub
in
lahf
insb
or
out
clc
push
movb
xchg
push
jns
jcxz
mov
shlb
addl
outsl
lret
cltd
loopne
repz
push
outsl
movl
test
pop
clc
scas
imulb
shl
enter
je
mov
sbb
dec
pop
loopne
push
sti
gs
inc
in
int3
mov
fucomp
mov
andl
ljmp
jno
inc
mov
loopne
xchg
mov
mov
sbb
call
xchg
in
iret
mov
sbb
int3
imul
cli
insb
xor
mov
imul
pop
dec
mov
mov
iret
pop
inc
out
jne
das
insb
cltd
jg
in
pop
add
push
iret
daa
imul
es
cwtl
mov
inc
xchg
lock
inc
mov
jl
out
mov
orb
mov
dec
inc
outsl
sbb
and
js
into
mov
fldenv
loope
inc
lods
lea
lods
loopne
repnz
inc
rolb
xor
mov
push
int3
faddp
dec
add
gs
daa
mov
push
xlat
push
divl
pop
ljmp
mov
pop
dec
mov
mov
loopne
ret
fs
push
ret
inc
mov
stos
pop
test
inc
push
adc
lods
cmp
mov
mov
fildl
add
hlt
push
fists
repz
daa
insb
mov
in
orl
insb
int3
cltd
mov
popa
or
movsb
inc
roll
js
xor
dec
nop
repz
jge
rcr
xchg
fstl
fidivl
xchg
cmpsb
mov
pop
mov
lods
rcl
aam
add
add
je
adc
ja
pop
jbe
sbb
push
test
lods
xchg
insl
xchg
mov
sub
sbb
rorl
nop
mov
int
push
mov
and
ss
es
jl
mov
xor
mov
pop
scas
xor
ss
cld
jl
cltd
push
jl,pn
sub
sbb
std
add
pushf
or
clc
ror
test
shll
inc
sub
xor
push
mov
outsb
push
aad
in
jns
test
ja
lock
push
mov
mov
outsb
mov
pusha
sbb
nop
pop
ror
shll
sti
test
jp
mov
arpl
ja
loope
jo
mov
sti
xchg
mov
fbstp
sarb
xor
int
icebp
sbb
inc
xor
mov
test
or
push
daa
lds
sbb
pop
js
mov
es
mov
push
mov
andb
pushf
stos
decl
or
add
das
loope
les
pop
loopne
pushf
push
fs
out
sub
sbb
je
adc
shrb
push
mov
and
xor
mov
mov
stos
inc
sbbl
jp
add
fndisi(8087
sbb
call
adcl
mov
xchg
add
outsl
inc
dec
and
pop
sub
inc
add
cltd
js
pop
leave
inc
fsub
pusha
fstl
jecxz
aam
adc
call
sahf
mulb
add
shlb
cld
mov
mov
add
dec
outsb
sahf
fisttpl
sarb
pop
imul
push
lcall
std
or
sahf
cmp
push
or
subl
bound
outsl
mov
test
out
jge
data16
movsl
pop
outsl
adc
rcl
cmpsl
fwait
jp
gs
push
shlb
mov
dec
inc
xchg
subb
xchg
push
mov
int3
outsl
std
int
inc
push
cmp
xor
adc
shl
cmp
ret
mov
popa
jmp
lahf
or
lds
cmpsl
xor
negb
out
xchg
mov
fmull
jmp
movl
aaa
loopne
icebp
and
mov
cli
imul
mov
ljmp
jl
loopne
and
outsl
movsl
mov
rcr
ret
mov
or
add
aaa
push
test
add
jle
push
fdivrl
xor
iret
out
dec
out
mov
xchg
cmp
push
aaa
fcomi
pop
in
cmp
mov
mov
add
jp
pop
cmp
ret
imul
icebp
nop
fiaddl
ds
cwtl
fstps
jmp
jecxz
adc
push
mov
jmp
inc
dec
xchg
or
hlt
mov
inc
popa
mov
cmp
rcl
mov
js
pop
and
mov
in
pop
icebp
dec
dec
push
icebp
shll
push
ret
xor
jb
xchg
fstl
xor
mov
mov
xor
jo
loopne
dec
inc
imul
sub
test
mov
mov
test
pushf
sub
mov
inc
jge
inc
ja
int
mov
xchg
mov
sbb
sbb
push
add
addb
sbb
mov
dec
mov
push
stos
mov
lret
xor
cmp
pop
popf
out
clc
sub
dec
adc
or
sub
sbb
mov
dec
xchg
xor
in
ud1
pop
or
fidivl
into
or
push
sbb
or
add
add
mov
lahf
bound
cmpsl
or
data16
or
xchg
and
sbb
mov
outsl
aas
adc
push
cli
add
lret
out
xor
shrb
push
lret
cmc
and
adc
clc
cli
stc
les
mov
fstpt
sbb
in
mov
mov
or
ss
sub
test
jno
mov
mov
pop
cli
cmpsb
out
adc
fstpt
rcl
mov
or
adc
mov
add
sub
jo
cmp
jmp
aaa
xchg
rcrl
movlps
jnp
cli
jecxz
mov
in
xlat
mov
aam
int
outsb
int
cmp
and
pop
enter
loopne
adc
or
xchg
xchg
pop
add
pop
subl
pop
adc
xor
cmp
orb
xor
sbb
dec
jb
lret
or
js
push
add
stc
adc
movsb
mov
mov
or
adcb
pushf
clc
pop
adc
fcoml
pusha
loope
addr16
frstor
and
dec
mov
add
cmp
fsub
int3
or
cmp
insb
add
dec
fcoml
mov
dec
icebp
sub
pop
loopne
dec
or
push
ds
inc
sbb
test
xor
testl
les
jg
lcall
push
add
mov
jae
hlt
sub
arpl
addr16
or
xchg
add
cmpsl
aas
es
mov
aad
repz
js
add
or
fldenv
mov
pop
xlat
ss
mov
lea
sarl
or
push
rorb
adc
sbb
outsl
jl
xchg
mov
mov
icebp
add
lock
adc
fcmovnu
cmpsl
inc
adc
pop
popf
cltd
fs
push
frstor
jmp
out
mov
xor
retw
imul
xor
push
fwait
sbb
push
in
jb
int
add
into
xor
xchg
sbb
dec
jmp
cli
mul
dec
inc
icebp
mov
adc
jg
mov
jae
rol
sub
mov
leave
in
inc
dec
cmp
xor
push
xor
cmp
sbb
cmp
pop
arpl
lock
outsl
cmp
lea
popf
not
xor
and
jo
int3
mov
into
adc
cmc
mov
mov
xor
movb
xchg
jno
pop
fcomi
pop
and
or
pusha
mov
mov
and
cmc
stos
pop
popf
fs
pop
dec
add
jecxz
ljmp
insb
mov
ret
lock
mov
xlat
inc
pop
cmc
cmp
shll
jl
jo
hlt
shll
add
and
mov
inc
mov
xor
pop
rorl
ja
je
add
rep
sub
pusha
adc
sub
adc
cltd
jle
cs
getsec
xchg
filds
xor
jo
push
adc
fadds
rcl
aad
test
mov
rolb
lahf
push
adc
or
and
push
xchg
movsl
jbe
push
pop
cltd
cmp
icebp
rorb
movswl
int
sbb
in
push
or
dec
add
insb
adc
scas
insl
fistpll
dec
mov
dec
pop
jae
adc
add
cmc
pushf
pusha
or
dec
std
cltd
jle
lock
pop
dec
or
pop
sub
add
adc
or
fbld
outsl
fwait
xor
add
dec
add
mov
add
inc
cmp
mov
xor
pop
jae
aam
lock
mov
mov
pop
lahf
jae
es
js
push
jne
fidivl
movsb
mov
mov
je
fwait
dec
and
hlt
lahf
fdivr
int3
jae
adc
pop
mov
adc
int
es
scas
mov
mov
movsb
xor
cmpsb
push
fnstsw
jmp
lret
mov
out
and
cmc
shll
aaa
adc
and
add
cmpsl
js
pop
jno
add
cmp
insl
xchg
add
das
push
sub
jo
stos
sbb
inc
jmp
dec
icebp
fistps
cmp
stos
and
sbb
aam
insl
enter
rcrb
icebp
aas
or
hlt
addr16
rcrb
cmpsb
xor
lret
dec
call
adc
cld
shrb
mov
cmp
enter
xchg
fsubr
mov
mov
mov
addb
test
aaa
jg
push
in
arpl
stc
bound
mov
push
testb
in
adc
mov
lock
xchg
jae
pusha
loope
cltd
sbb
mov
pop
pop
outsl
outsl
mov
pop
cmp
js
mov
and
subl
xchg
in
push
in
icebp
out
orb
lods
or
xchg
scas
mov
xchg
in
mov
mov
pop
sbb
adc
jge
out
movd
shll
pop
hlt
fidivrl
push
sbb
add
cmpsl
or
insb
incl
cmp
pop
and
aad
aam
fstl
jo
pop
xor
sarl
add
rcl
aas
insl
sbb
inc
mov
outsb
xchg
mov
mov
ljmp
loop,pt
xor
xchg
push
pop
into
test
rorb
sbb
xor
pop
mov
or
xchg
popf
or
popf
pop
subl
ljmp
stos
push
jecxz
push
loopne
pop
cs
fdivs
adc
ret
pop
cmpsl
movsl
shll
push
pop
imul
inc
es
daa
insl
dec
push
js
es
ss
mov
lds
sti
loop
mov
inc
inc
xchg
and
xchg
loop
jp
insl
fnstsw
loope
jno
cs
xor
fcmovnbe
mov
jecxz
clc
inc
mov
xchg
inc
push
adc
into
ljmp
dec
jbe
rol
cli
outsl
out
loope
lcall
test
add
mov
xchg
mov
aas
hlt
lods
out
out
mov
loope
orl
lret
pop
mov
sti
push
inc
jns
xchg
stos
pop
shrb
out
add
lahf
sub
sub
mov
pop
lcall
dec
xchg
cmp
mov
pushf
pusha
jb
or
out
clc
sbb
jge
inc
cmp
outsl
mov
int
in
mov
dec
sbb
fidivs
pop
xor
leave
imul
mov
int3
aaa
pop
popa
cs
fbstp
inc
lret
pop
leave
pusha
inc
notb
jl
std
sbb
lock
cwtl
mov
jle
sbb
adc
repnz
rcrl
fs
mov
xor
stc
and
xchg
xchg
punpcklwd
push
fcmove
lea
aam
xor
cli
es
or
in
pop
ss
icebp
mov
int3
xchg
fisubrl
jg
cli
dec
pop
scas
dec
xor
mov
xor
xchg
pushf
aam
outsb
leave
cs
lods
pushf
mov
mov
push
addr16
inc
lahf
add
sbb
roll
or
or
scas
push
out
ss
mov
and
sarb
cmp
or
xlat
inc
xchg
loopne
pop
fistpll
and
out
int3
push
mov
pop
outsl
in
es
and
or
test
mov
imul
into
loopne
push
cmc
lea
xor
push
add
cmp
sbb
mov
test
adc
or
shll
cmpsl
int3
loopne
cmp
shrl
mov
stos
andb
cmpsl
cltd
mov
in
in
cwtl
fiadds
movsl
sbb
or
push
lods
and
shl
xchg
inc
mov
mov
sbb
or
push
ljmp
xchg
jbe
rcr
fsubrl
adcb
cmc
dec
aaa
cmpsb
xchg
fisttpl
enter
xor
imul
mov
push
xor
push
out
pop
dec
cwtl
sarb
add
sbb
ss
jmp
cmpsb
aaa
cmp
out
clc
lods
jecxz
adc
mov
aas
mov
arpl
pop
lret
movsl
in
scas
inc
sub
aaa
adc
outsl
pop
sbb
push
movsb
popa
lret
jg
aaa
fsubs
subb
mov
aaa
push
jle
lea
icebp
je
dec
popa
jbe
dec
lds
psraw
jo
aaa
mov
icebp
jl,pn
pop
ds
cld
cmp
outsb
adc
lahf
dec
pop
test
cmpsl
enter
jae
in
cmp
xchg
or
sbb
mov
adc
sub
pop
push
inc
add
mov
addb
push
ljmp
sbb
xor
stos
loop
inc
adc
sub
jnp
mov
jecxz
mov
test
mov
fbstp
imul
fwait
daa
inc
mov
mov
sub
vmread
pop
xor
hlt
sub
push
jne
mov
sahf
ljmp
xor
into
and
js
das
std
ss
dec
inc
clc
xor
test
inc
cld
rcll
fdivs
and
xchg
add
mov
inc
mov
rorl
test
sbb
ret
mov
lods
mov
lret
outsl
sbb
mov
sub
rorb
and
adc
pop
mov
or
push
mov
test
les
xchg
and
cmp
popw
add
test
or
scas
sbbb
shr
mov
lock
out
movsl
insl
sahf
push
je
push
cmpl
repz
call
jb
test
mov
data16
repz
push
into
shrl
push
andb
scas
xchg
in
adc
aaa
mov
in
insl
pushl
xlat
or
repnz
inc
xor
test
loope
jmp
dec
mov
repz
insl
loope
aad
xor
mov
add
aad
xor
push
add
loope
dec
or
pop
sbb
dec
push
jl
sbb
sahf
stos
fists
mov
int
push
daa
fcompl
mov
add
cld
fucomi
fsts
push
insb
arpl
std
scas
test
mov
ret
into
xor
or
icebp
mov
add
mov
out
jne
insb
addl
or
sbb
enter
and
inc
adc
mov
mov
out
data16
sbb
or
mov
es
mov
out
dec
cmc
mov
fstps
movsb
gs
repz
pusha
js
daa
xchg
ds
mov
add
xor
fidivs
pop
mov
sti
test
out
in
jae
add
jl
stos
popl
loop
cmp
sbb
xorb
in
adc
int
sub
imul
mov
xchg
mov
fadd
or
in
dec
cli
mov
gs
cli
pop
cli
dec
push
push
cmpsb
add
pop
cmp
push
dec
aam
or
mov
dec
mov
sar
popa
sub
faddp
jmp
inc
adc
nop
repz
popa
mov
in
sbb
cs
push
mov
jns
sbb
mov
clc
addr16
sbb
adc
aaa
es
call
cs
movsb
push
mov
lods
inc
push
loope
cmp
push
jg
dec
xchg
sub
fs
sbb
pop
mov
mov
fidivrs
mov
pop
dec
clc
mov
mov
jle
mov
jmp
andl
popl
push
cmp
fistps
mov
das
pushf
inc
push
add
ficoms
loopne
addl
xor
jno
jnp
pop
fisubrl
inc
jb
push
add
faddp
loopne
shr
xlat
pop
mov
inc
fsubrs
lds
lcall
sahf
daa
sbb
lret
xor
and
and
and
mov
push
insl
jno
pop
jae
test
and
jle
adc
add
sti
pusha
outsl
in
movsl
movzbl
sarl
loope
das
jnp
clc
lret
jg
and
lcall
mov
jo
pop
pop
adc
mov
jno
cwtl
bnd
js
aas
jle
mov
push
das
lea
cltd
bound
mov
sti
add
jle
cwtl
xchg
cmc
cmpsl
or
pushf
shl
je
pop
cli
push
push
iret
aas
cwtl
jno
and
adc
test
pop
aas
int3
push
pusha
mov
cmp
ja
fdivr
ficomps
cmp
push
aas
sbb
cmp
mov
jecxz
mov
sub
inc
inc
in
xor
sub
adc
mov
addr16
add
sbbb
imul
pop
fisttpl
aad
sti
and
mov
pop
sub
or
and
arpl
in
loopne
test
push
sahf
daa
sbb
jno,pn
add
movsb
pop
xlat
push
inc
cld
sub
cmp
mov
pop
pop
lahf
imul
test
pop
dec
roll
xor
jp
dec
pop
jecxz
jbe
jo
pop
stos
mov
add
jns
xlat
sahf
es
stc
fadds
inc
aas
gs
bound
push
pop
inc
lods
cmpsl
sbb
pop
outsl
aad
loopne
xchg
sub
ja
mov
xchg
cmp
pop
and
cmp
xor
daa
sbb
inc
lret
and
lds
pusha
lcall
ror
sbb
pop
lock
pop
sbb
sub
shrb
sub
sbb
fcmovnbe
dec
pop
aam
incb
bound
fldenv
out
stos
stos
inc
test
jns
pop
adc
pop
push
sbb
and
in
stos
xchg
pop
shl
xlat
cmp
into
inc
jg
push
fidivrs
fcompl
rcll
icebp
andl
or
pop
xor
dec
dec
insl
imul
and
fmuls
mov
xchg
adc
push
cld
dec
adc
subb
mov
inc
xchg
movsl
stos
insl
insl
bound
jne
xor
test
pop
lahf
adc
in
addr16
cmp
sbb
ds
jae
inc
fbstp
sbb
outsb
mov
fbstp
cmp
jecxz
mov
repz
adc
test
out
mov
xor
cltd
add
jmp
xchg
int3
out
sbbb
inc
inc
xchg
andb
decb
adc
insb
add
loope
mov
jns
xchg
loope
jg
dec
in
cmpl
add
aaa
mov
sarb
cld
in
aam
nop
std
mov
dec
insb
in
icebp
dec
repnz
add
dec
adc
out
lret
mov
mov
inc
repz
inc
test
das
insb
aas
xchg
xor
mov
mov
sub
adc
aad
test
push
push
adc
loope
aaa
mov
adc
sar
xlat
movl
sarb
fmuls
jg
xor
xor
mov
cld
mov
nop
lock
fisubl
das
or
pop
nop
clc
adc
sub
outsl
mov
mov
pop
xchg
mov
subps
dec
mov
jo
xchg
cmpsb
adcl
cmp
adc
call
mov
mov
push
add
and
xchg
ss
outsb
jo
mov
or
popf
rcr
mov
sub
inc
mov
jmp
outsl
pop
outsl
dec
fistl
inc
push
loope
push
push
pop
jecxz
call
xchg
gs
in
lods
dec
push
icebp
in
pop
mov
icebp
packuswb
xor
xchg
repnz
fidivrs
loop
add
loopne
jg
lret
sbb
push
popf
jae
xchg
imul
pop
psrad
add
loop
and
lds
add
fwait
mov
and
int3
sbb
sbb
add
cmp
icebp
insl
xchg
xchg
or
mov
jle
adc
les
fisubs
jle
and
push
loope
insb
inc
sub
inc
mov
ss
sbb
inc
out
pop
fucomip
inc
aad
or
mov
add
cmp
es
or
out
out
xchg
or
test
ja
push
cmpsl
shl
sti
sbb
adc
ret
lret
push
mov
xor
scas
nop
cltd
inc
adc
gs
dec
test
loope
add
inc
push
das
mov
dec
stc
jmp
aad
roll
leave
and
mov
ds
lret
and
scas
outsl
arpl
mov
int3
lcall
mov
mov
push
push
data16
mov
mov
add
out
pop
pusha
adc
movsb
xchg
movsl
xor
cld
out
in
and
push
or
aas
lahf
dec
pop
mov
leave
or
add
and
cmpsb
inc
les
stc
mov
repz
std
cmp
gs
out
jp
mov
dec
fiaddl
popa
mov
ds
movsl
shll
data16
jno
mov
dec
jb
in
push
pop
je
pop
sarb
ret
jmp
pop
and
mov
ljmp
pop
shlb
jl
aam
mov
add
rorb
adc
cltd
jl
out
mov
xor
dec
ds
xor
bound
mov
and
pop
jns
mov
paddd
jge
add
and
add
cld
mov
in
dec
out
out
loope
xchg
mov
mov
ss
loopne
scas
ret
xor
mov
adc
mov
lcall
into
adc
and
jmp
cli
or
cmp
jmp
pop
ss
lock
jne
sub
repz
push
ret
jne
inc
cs
xorl
lret
aaa
jl
jne
and
out
cmp
pop
mov
sbb
push
dec
pop
sub
out
xorl
ss
mov
jmp
out
mov
cs
out
clc
das
add
icebp
les
outsl
popa
sbb
shl
jb
push
fistpll
popa
stos
fcom
int
mov
arpl
adc
dec
loope
jl
xor
lcall
call
insb
int3
cwtl
data16
ffreep
aam
mov
pushf
sub
push
mov
and
popa
pushf
int
das
lret
negb
cmpsl
xchg
sahf
sub
adc
inc
movsl
or
pop
pop
cli
cwtl
cmp
scas
testb
jae
inc
cmp
xchg
cmp
mov
rcrl
stc
mov
loopne
push
ss
sbb
mov
push
xor
xchg
sbb
fistpll
pop
add
jp
push
or
fists
adc
xchg
jp
orb
icebp
enter
imul
inc
add
cmp
pop
add
nop
sub
mov
mov
and
add
icebp
mov
jp
pop
mov
inc
sbb
xor
push
mov
mov
int3
or
sub
mov
call
in
mov
sbb
jo
pop
xor
ja
lahf
jl
inc
or
daa
ror
dec
mov
sub
xor
je
lds
sub
pop
or
push
push
scas
and
insb
mov
in
clc
push
mov
mov
andl
fnstcw
and
cmp
xor
sbbl
arpl
push
aad
and
cmpl
ret
xchg
mov
or
outsb
xchg
adc
xchg
push
pop
sti
cld
or
cmpsb
rclb
fisubrl
push
test
shll
int3
pop
imul
mov
ret
pop
fs
shlb
xor
fs
inc
xchg
fidivrs
loopne
dec
pop
iret
mov
ljmp
inc
xchg
sti
jg
int
lahf
in
mov
pop
pop
fmull
mov
push
pop
cmpsb
pop
dec
std
dec
aam
jecxz
aas
stos
push
xorl
lea
pop
jle
int3
dec
inc
sub
dec
sti
ret
push
inc
outsl
cmc
inc
rclb
leave
lods
xchg
ds
add
je
inc
and
push
bnd
pop
push
inc
xor
dec
popl
data16
inc
push
push
mov
jg
pop
ret
jecxz
xor
inc
jmp
ret
outsl
loope
and
inc
dec
jnp
pop
pop
addr16
out
bound
ret
push
nop
nop
xor
pop
dec
lods
stc
stos
outsl
mov
mov
push
cmp
loopne
mov
add
inc
jg
sti
pop
cmp
fcoml
shl
imul
lock
add
js
stos
jne
jae
pop
out
fsubp
sbb
pop
jbe
xor
dec
data16
inc
insb
pop
ret
mov
add
mov
pop
or
xor
std
test
popa
pop
or
sub
sbb
push
or
mov
aaa
in
mov
pop
cmp
mov
adc
or
sub
cmc
inc
out
mov
das
popa
test
dec
mov
sbb
pop
dec
sbb
decl
xor
inc
int
push
mov
lds
mov
jae
imul
out
mov
sahf
sub
sub
rol
out
movsl
pop
hlt
loopne
mov
cld
add
cmpsb
mov
aad
jo
fildll
int
insb
scas
mov
and
packssdw
das
push
xor
xor
rcrl
ds
and
mov
push
mov
mov
lret
sbb
mov
dec
adc
push
imul
lods
cwtl
je
jecxz
xlat
or
pusha
test
mov
in
jg
cld
and
push
test
cmpsl
int3
dec
lods
enter
incb
push
test
push
ljmp
dec
inc
sbbb
out
mov
aas
pop
xorl
mov
sar
mov
lahf
rolb
mov
out
mov
pop
mov
dec
pop
je
jne
pop
mov
jg
ja
sbb
mov
xorl
insb
call
sbb
inc
iret
add
ds
rclb
xor
jecxz
jo
sub
push
ret
mov
cmp
in
mov
adc
pop
cli
cmp
and
pop
jg
mov
xor
stc
cmp
fwait
ljmp
test
cmp
bound
clc
std
push
cmp
addr16
dec
cmp
cmp
adc
ja
cli
daa
pop
pop
leave
pop
pushf
xor
dec
or
lock
das
insb
ffree
push
add
inc
inc
xor
addr16
mov
cltd
xor
adc
clc
negb
notb
mov
pop
in
or
pop
loop
lds
movsl
lods
lret
push
mov
or
pop
jne
movsb
daa
rclb
pop
enter
pop
push
sub
add
mov
es
rcrb
in
out
cmc
pop
ret
sar
hlt
enter
xchg
ljmp
mov
movsl
mov
lods
add
xor
or
fcmovnu
and
or
pusha
xor
add
cmp
adc
or
insb
ret
add
jo
lret
mov
jmp
pop
lock
xor
or
mov
shrb
or
adc
cwtl
leave
dec
jl
jecxz
push
out
mov
add
in
out
mov
xchg
or
in
jmp
adc
adc
int
add
lds
lea
xchg
out
xorl
shll
call
ljmp
push
ja
xchg
dec
add
out
fs
iret
sub
or
sbb
cmpb
and
push
and
sarb
pusha
lret
nop
hlt
add
filds
mov
jle
push
xlat
mov
lea
jecxz
push
cld
push
adc
jno
or
pop
nop
push
mov
xor
daa
lcall
xchg
jb
ss
push
sahf
mov
or
sbb
bswap
mov
es
outsl
jl
addb
mov
push
iret
inc
nop
lcall
dec
pop
sbb
add
insl
in
xchg
data16
mov
lds
jne
push
push
mov
xor
aaa
test
insb
or
lcall
shrb
popl
jb
sbb
es
cli
aaa
mov
les
mov
cltd
add
and
sub
scas
sub
lods
sti
es
add
adc
xchg
sbb
jbe
sbb
stos
dec
add
ljmp
xchg
aas
incl
or
cs
push
clc
xchg
xchg
ljmp
xor
add
push
sub
loop
movsl
js
inc
cmp
rol
faddl
cmp
lock
cs
jle
mull
scas
cld
gs
sbb
push
push
sub
test
and
mov
adc
es
rcrl
lock
cltd
jg
in
cmp
aas
pop
decl
push
mov
ja
fnstenv
sbbb
dec
and
jo
test
fnstenv
jnp
hlt
cmp
aaa
mov
loop
ljmp
pop
lret
cld
addr16
and
pop
sbb
dec
std
insb
nop
into
inc
ss
push
xchg
loop
pushl
test
cmp
cs
data16
arpl
jbe
fs
cmp
out
inc
mov
cmc
mov
sub
scas
ljmp
aaa
inc
xchg
and
jg
aas
cld
fadds
dec
push
ds
call
popa
cmpsl
in
stos
adc
ret
mov
sahf
and
pop
xor
daa
jge
dec
pop
sar
test
lods
xchg
lods
shrl
arpl
nop
insb
mov
lret
ret
ficoml
ljmp
xchg
dec
adc
jecxz
add
pop
stos
dec
arpl
adc
inc
sarb
jbe
adc
push
adc
pop
push
sbb
int
fwait
inc
or
in
scas
jo
pop
popf
jnp
mov
push
ss
jle,pn
dec
or
bound
push
sarl
cmp
mov
sub
mov
pop
test
pop
mov
jbe
je
dec
mov
adc
test
das
push
inc
out
xor
fidivrs
cwtl
sbb
push
jbe
loopne
sub
test
ljmp
xor
mov
add
inc
sbb
or
fiadds
dec
xor
outsb
mov
sbb
rorb
outsb
xor
or
xor
add
cwtl
jp
ljmp
add
dec
je
or
cmp
shrb
dec
std
arpl
add
dec
sub
dec
je
std
insl
or
add
mov
push
mov
idivb
lcall
or
mov
rcll
ret
std
mov
std
cmp
cmp
arpl
xor
lds
xor
loop
or
arpl
mov
loopne
out
scas
fildl
adc
les
out
aas
push
sbb
stos
xchg
jle
or
mov
int3
jbe
push
or
and
mov
sbb
insb
lods
sti
push
loope
pop
add
loopne
int3
xor
inc
sbb
movsl
fildl
xchg
test
xchg
jecxz
fadds
sub
je
inc
aas
push
pop
in
lcall
jno
mov
or
cmp
add
or
inc
test
dec
mov
fstl
rcrb
mov
mov
cld
setl
popl
cli
mov
jnp
mov
out
xor
cmp
xchg
test
add
mov
cltd
adc
fwait
mov
inc
cmp
pop
jae
adc
lea
add
enter
cld
mov
shlb
lock
jl
lea
or
into
mov
and
jae
mov
outsl
add
mov
lcall
aaa
scas
add
xchg
rcrb
iret
and
pop
js
mov
sub
jbe
xor
data16
dec
cltd
inc
test
cwtl
lds
cmp
push
std
movl
mov
dec
cli
xchg
mov
mov
cmp
out
mov
pusha
or
shlb
push
fs
xchg
cmp
push
dec
and
clc
popf
inc
push
xor
psubd
lahf
add
dec
inc
hlt
sbb
xchg
test
mov
inc
stos
inc
cmp
mov
jno
jbe
insl
cmpsl
add
repnz
sbb
inc
pop
dec
sti
ds
testb
jle
push
sub
ret
fsubp
mov
fstpt
push
add
jb
and
dec
push
daa
push
inc
mov
clc
dec
sub
lahf
mov
outsl
das
jno
mov
repnz
pop
pop
rcrl
nop
jle
lahf
roll
fnstcw
cmpsb
ret
pop
push
sbb
shlb
sysret
loope
or
cmpsb
adc
fisttps
fisttps
dec
das
or
mov
test
clc
inc
mov
adc
movsl
pop
out
inc
mov
les
loopew
dec
insl
add
cmp
inc
mov
test
out
js
arpl
mov
mov
and
pusha
lods
pusha
mov
lock
push
push
inc
loop
xchg
lcall
movb
xchg
jp
cmp
and
and
addb
cmp
out
fistl
adc
sbb
mov
es
test
aas
mov
insl
sub
mov
jg
xchg
les
mov
jns
stos
adc
outsl
in
jo
and
jle
and
inc
and
xchg
push
cmpsb
push
popa
add
jecxz
jmp
add
clc
add
rcrb
sbb
pusha
or
pop
hlt
jb
dec
fiaddl
repnz
loopne
ret
sbbb
out
cmpsl
sbb
jno
lock
push
movsl
cmp
loope
aad
insl
pop
inc
mov
xchg
mov
mov
loope
xchg
jl
ror
in
push
out
dec
out
adc
sbb
or
jae
jle
movsb
sbb
adc
fistpll
mov
std
icebp
lahf
jl
test
int
aaa
aad
cld
adc
aam
push
test
iret
pop
inc
imul
subb
dec
pop
mov
add
scas
mov
mov
cli
xor
cltd
lods
mov
push
sub
fsub
cmpb
push
clc
push
bound
mov
mov
xor
mov
jecxz
add
mov
pop
cmp
aas
push
lea
and
cmpsb
cwtl
rorl
aam
and
xchg
xchg
adc
ss
sub
mov
popa
xor
in
mov
xchg
mov
cmp
test
or
rcll
imul
xchg
out
or
adc
insb
in
mov
add
fiadds
pop
fs
push
pop
jbe
mov
xor
aad
bound
in
push
sbb
add
test
sarl
outsl
clc
sbb
movsl
mov
bound
fucomip
test
and
fwait
and
out
cld
and
filds
std
mov
pop
push
pop
add
jecxz
pop
and
mov
lods
inc
rorb
xchg
mov
test
shl
jmp
imul
into
jns
xor
sbb
push
or
jne
incl
xchg
adc
out
ljmp
sbb
shlb
cmpl
mov
ret
add
add
dec
sbbb
xor
aaa
testb
dec
or
shlb
adc
push
push
cltd
mov
imul
cmpsb
decl
js
inc
mov
in
inc
cmp
out
std
xchg
popf
bound
adc
dec
dec
mov
push
push
add
ss
insb
ficoms
imulb
mov
xor
mov
test
xchg
movsl
mov
popa
ret
pop
pop
xor
scas
arpl
lock
ret
int3
gs
push
out
std
out
js
pop
inc
dec
sub
push
std
mov
and
andl
pusha
inc
lahf
or
and
int3
jo
aam
jg
daa
and
add
je
xchg
jnp
mov
push
and
je
adc
std
insb
mov
je
pop
or
mov
cmp
mov
shl
xor
mov
mov
jg
cmp
xor
pop
ds
mov
cmc
jl
sarb
xchg
shrb
xchg
shrl
jae
cltd
ret
loopne
ds
or
dec
xor
clc
sub
arpl
test
test
call
lea
insb
jmp
cmp
sar
adcl
mov
cmp
mov
mov
insb
pop
pusha
int3
fcomps
mov
pop
imul
mov
and
rclb
icebp
les
push
insb
add
decl
push
xchg
fmull
or
lea
hlt
dec
xchg
stos
pop
bound
push
mov
test
and
mov
gs
xchg
and
mov
add
test
mov
push
inc
outsl
cld
or
sbb
stos
movsb
pop
mov
cmpsl
ret
shlb
pop
push
inc
push
outsl
fdivs
lret
jl
aaa
and
mov
xchg
mov
sub
lds
in
arpl
movsl
lret
mov
jmp
sub
pop
outsb
fistpll
pop
imul
cld
add
inc
add
insb
pop
test
mov
inc
sbb
clc
lea
lea
negb
imul
pop
shlb
out
xchg
icebp
jo
movsb
push
jo
sub
fists
std
xlat
outsl
inc
mov
leave
iret
fwait
push
jb
jnp
in
fisttpl
inc
js
jg
jecxz
push
cmc
xchg
mov
bound
aad
daa
sbb
movsl
sbb
outsl
push
in
pop
mov
dec
push
fstpt
mov
das
daa
adc
pop
pop
dec
js
pop
or
dec
aas
loope
ljmp
outsl
xor
sbb
dec
pop
jmp
jns
adc
negb
dec
int
insl
in
add
jne
outsl
mov
pop
mov
add
fs
or
dec
mov
loopne
or
adc
cmpsl
sbb
stos
loopne
call
fildl
out
jno
clc
ss
fwait
test
inc
jle
sub
sbb
or
filds
dec
pop
insl
xchg
adc
xchg
dec
mov
movsb
and
sbb
add
and
shrb
dec
ljmp
push
sbb
out
mov
aam
fisttpl
mov
nop
mov
mov
xor
ja
lret
scas
mov
aas
cli
icebp
sbb
xchg
pop
and
mov
rep
inc
test
dec
icebp
pop
lds
or
mov
lret
stos
call
scas
aad
into
sbb
push
mov
mov
lahf
pop
jg
or
xchg
mov
mov
outsb
or
dec
mov
pop
icebp
rol
sub
aas
cld
adc
nop
pop
push
aam
add
std
lret
loop
pop
push
sahf
jecxz
jbe
xor
aaa
lods
addr16
cmp
rolb
cli
inc
mov
aaa
sti
sti
dec
fnstsw
iret
pusha
pop
mov
mov
loope
test
stc
test
adc
xchg
movsl
cmpsl
cmp
popa
mov
pop
das
icebp
cwtl
pop
inc
xor
jg
sbb
push
sbb
shlb
mov
test
mov
or
cwtl
outsb
xchg
addl
es
sbbl
lock
push
andb
or
mov
pop
inc
rcrb
les
mov
bound
pop
je
mov
jo
insl
shll
stc
mov
jg
vsubss
jmp
or
subl
testb
add
or
in
mov
push
clc
jg
cmp
mov
test
in
stos
rclb
pop
mov
mov
or
mov
in
or
in
sbb
bound
lcall
movsl
mov
cmp
sarb
jle
mov
jbe
mov
ret
mov
lea
adc
fildl
mov
push
xchg
das
mov
pop
jmp
inc
fs
call
and
and
in
repz
sarl
cmp
push
and
sub
lock
imul
gs
adc
and
mov
fcmovnu
pop
or
shrb
add
pop
adc
cmpsl
and
mov
xchg
js
mov
xor
push
push
fwait
imul
xor
mov
adc
dec
jl
ljmp
pop
push
imul
stos
pusha
or
or
add
popa
mov
jb
xchg
push
fistpll
fwait
mov
pop
dec
push
adc
cmc
pop
sti
mov
lcall
jae
push
push
popf
adc
dec
fidivrl
and
clc
imul
imul
push
add
lahf
daa
fdivl
push
fwait
push
add
xchg
orl
imul
ds
or
sti
or
or
xlat
pop
pop
pop
sub
sbb
je
pop
clc
jg
or
ljmp
ljmp
sbb
scas
insl
mov
sbb
pop
pop
subb
mov
push
jge
jns
pop
addb
add
into
add
mov
add
cli
jmp
clc
mov
outsb
aaa
sbb
in
imul
incb
adc
xchg
std
fadds
cli
adc
dec
inc
pop
jge
adc
mov
pop
rcrl
pop
sub
jae
adc
jae
or
lea
cltd
test
mov
push
push
mov
cmpsl
sbb
jl
sbb
pop
mov
pop
mov
data16
inc
inc
mov
popa
mov
xor
in
mov
jne
imul
and
lock
sti
mov
bound
cli
add
cmp
or
xor
popf
pop
mov
ds
sbb
aaa
and
adc
or
fisubl
je
mov
repnz
pop
leave
and
fldl
cmpsb
enterw
outsl
sbb
es
sarb
inc
ja
cli
ret
push
pop
push
xor
ds
or
je
cmpl
cmp
cmpsb
sbb
push
xorb
jg
cld
add
pop
sbb
push
ret
stos
ja
dec
mov
pop
rorw
inc
inc
rcll
scas
pushl
add
mov
rcll
mov
sub
aad
leave
shll
icebp
sub
movsl
insl
mov
cmp
push
fidivrs
dec
stos
add
xchg
mov
xchg
push
and
clc
xor
jl
in
clc
sar
mov
jl
scas
inc
imul
mov
mov
fsubr
xchg
fsubl
add
push
dec
es
frstor
mov
sbb
push
push
sub
mov
fwait
insl
sub
sbb
or
cs
dec
icebp
mov
out
leave
mov
sub
in
push
add
sti
jns
imul
out
sbb
mov
js
push
push
mov
mov
pop
or
jnp
mov
adcb
lock
dec
addl
inc
les
js
pop
push
dec
cs
ficoml
or
call
rcl
inc
test
sub
pop
and
or
clc
dec
lods
lods
sbb
int3
add
stos
subl
bound
insl
adc
ss
dec
pop
mov
fsubrs
mov
inc
pushl
jns
xchg
ret
movsb
test
loopne
les
jp
icebp
cwtl
jno
sub
pop
lods
mov
mov
sub
scas
dec
dec
or
lahf
dec
cmc
lret
add
aad
xchg
jbe
stos
mov
cmp
xor
mov
inc
fbld
maskmovq
mull
xchg
mov
outsb
sub
dec
fs
ret
inc
clc
cmp
insl
fidivl
xor
sbb
xchg
fcomip
addl
aad
xchg
repz
cmp
push
mov
add
ja
pop
lea
add
movsl
and
sahf
mov
push
frstor
loopne
stc
xor
daa
jno
inc
pop
stos
sbb
fldt
mov
lock
je
adcb
push
int
shll
jno
jnp
call
push
mov
test
push
or
jnp
out
fdivp
ret
mov
das
into
sub
nop
jne
sbb
mov
pop
ds
mov
sub
add
sarl
pop
mov
aad
mov
inc
sbb
lods
imul
mov
cwtl
daa
and
cmp
fildll
loop
dec
arpl
and
and
push
icebp
dec
xchg
inc
push
repnz
lods
mov
add
pushf
iret
push
sbb
inc
adc
cmp
cs
and
mov
mov
inc
mov
fisubrs
es
mov
xor
inc
mov
in
fdivrl
mov
das
push
cmp
loope
lcall
and
ljmp
into
test
jne
inc
inc
and
jns
and
clc
addr16
rorl
in
fnsave
add
ss
fistps
mov
pop
and
mov
sbb
fxch
std
jmp
jbe
inc
xchg
test
push
sbb
cs
lret
adc
cmc
adc
cmc
cmp
testb
popa
push
imul
sbb
dec
add
andl
pop
ret
sarl
adc
mov
ljmp
call
pmaxub
test
xchg
orl
shl
daa
out
and
std
sub
outsb
dec
pop
loop
stos
mov
or
das
jge
cmp
mov
sbb
sub
je
lds
dec
push
ljmp
movsb
xor
cmpsb
mov
pushf
cmpsb
inc
mov
dec
mov
stos
inc
xchg
jecxz
adc
decb
je
enter
maskmovq
xor
add
sbb
hlt
idivb
xchg
xchg
mov
jno
jl
fucomip
mov
pop
pusha
adc
mov
adc
jmp
fwait
loop
cmp
outsb
outsl
mov
sub
sti
dec
dec
adc
addl
les
and
jecxz
loope
pushf
adc
jbe
xchg
xor
das
cmp
sarl
add
mov
xadd
inc
lock
clc
cmp
icebp
inc
fmull
sub
loopne
jecxz
shlb
dec
insb
sbb
mov
and
xchg
jle
ss
mov
mov
in
fldcw
into
inc
jecxz
mov
js
mov
dec
loope
mov
ret
shll
or
adc
jle
fwait
sbb
sub
in
nop
dec
and
xchg
or
pop
das
sbb
jle
inc
call
or
mov
and
in
aam
mov
mov
ffree
xor
fwait
movsb
fisubrl
out
iret
jmp
notl
mov
sti
roll
test
std
xchg
push
jmp
inc
ljmp
iret
nop
jmp
jmp
dec
repnz
mov
and
inc
lods
lahf
xor
dec
pop
fcoms
sub
mov
sub
lret
adc
jb
xchg
ss
lcall
push
insl
dec
cmp
das
in
movsl
mov
imul
lds
inc
add
dec
cmp
pop
and
mov
mov
mov
inc
es
repz
mov
rcrl
mov
cld
or
popf
mov
cmp
pop
xor
adc
outsb
outsl
out
jo
adc
ss
enter
stos
jo
push
loope
fcomps
frstor
mov
pop
dec
out
push
cmp
cmpsl
push
sbb
inc
imul
add
sahf
adc
lret
dec
arpl
mov
nop
pop
jmp
clc
scas
js
push
jno
or
into
push
lea
mov
sbb
std
data16
mov
sub
movsl
test
xor
in
repz
mov
faddl
cmpsl
jbe
add
push
das
insl
jecxz
dec
aaa
mov
jno
mov
add
xchg
mov
or
mov
leave
or
data16
das
add
xchg
out
cmpsb
mov
and
lcall
xor
cmc
push
xchg
roll
mov
xchg
dec
adc
adc
cs
outsb
inc
sbbb
les
jl
mov
scas
push
push
sub
dec
sub
xor
sbb
sub
xchg
imul
xchg
or
pop
hlt
pop
fsubl
cmp
jb
mov
add
mov
dec
stos
lea
notb
push
sbb
sbb
bswap
adc
mov
pop
shll
sub
fistpl
and
repnz
ret
nop
xor
rol
dec
dec
sub
lods
pop
mov
add
sbb
icebp
inc
push
sub
out
cli
sbb
nop
xchg
test
lds
dec
adc
loopne
jge
sub
ja
hlt
ret
mov
push
rorb
pop
test
pop
test
je
and
pusha
cmp
scas
cmp
inc
or
and
cltd
push
sbb
js
sbbb
xchg
fmull
add
sub
mov
pop
fisttpl
mov
pusha
inc
push
rclb
add
icebp
sbbl
movsl
rorb
xchg
or
mov
cmp
cvttps2pi
clc
xchg
push
mov
jmp
adc
out
fbld
leave
ja
mov
xchg
cmp
in
mov
lods
push
pop
sbb
inc
addb
in
jne
daa
jae
pop
mov
imul
js
das
outsb
outsl
testb
nop
jnp
mov
jnp
shr
or
fisubrs
or
pop
movsb
xor
dec
cmpsb
jle
loope
xlat
sahf
xchg
mov
or
in
repnz
mov
les
xchg
test
sbb
imul
js
push
inc
orb
xor
icebp
out
and
stos
mov
mov
icebp
cmp
sbb
ljmp
jp
repz
pushf
iret
xchg
pop
jecxz
sarl
pop
les
aam
and
dec
call
stos
testb
aaa
fcoms
xchg
ljmp
xchg
mov
stc
movsb
roll
fcoml
cmp
lcall
inc
ds
add
push
mov
pop
jmp
out
outsb
mov
inc
insl
add
xchg
and
jge
jle
dec
mov
mov
into
dec
sti
neg
push
pop
cmpsl
sub
fcomps
int
repnz
sub
jl
cmpb
arpl
sub
repz
insl
mov
sbb
jbe
lahf
pop
push
stc
xchg
xor
clc
xlat
jg
stc
js
xchg
mov
push
cli
loope
mov
aaa
jge
and
test
fsubrl
int3
add
mov
sbb
push
mov
mov
mov
sub
shlb
xchg
or
push
std
dec
cmp
mov
and
adc
inc
std
fsubrs
lea
sbb
lock
js
pop
inc
mov
cmpl
pop
aam
mov
xchg
mov
es
or
outsl
sarb
xor
jae
sub
test
mov
add
mov
sbb
add
and
inc
fstpl
lock
mov
arpl
or
lahf
sub
or
dec
notb
shll
aam
les
lret
iret
xchg
mov
pop
push
inc
outsl
loop
stos
xor
inc
jne
rcr
add
or
cmp
or
fists
add
adc
mov
outsl
scas
aad
push
or
cmpsb
fistl
clc
mov
lea
xor
loopne
subb
inc
mov
loope
outsl
lcall
and
addr16
pop
outsb
aam
aas
iret
js
add
mov
push
call
aas
push
clc
xlat
or
adc
into
insl
pop
fadds
mov
lods
js
inc
iret
add
je
test
lods
add
pop
lock
dec
daa
aaa
or
pop
and
mov
bound
rorl
jns
sbb
fbld
cmp
pop
sub
imul
rorl
xchg
xchg
pop
xor
mov
pop
into
xchg
insb
cld
add
call
int
test
mov
mov
std
cld
push
adc
loopne
jbe
xchg
lret
aam
mov
test
push
and
and
incl
push
add
shrl
dec
cmpsb
mov
mov
push
in
lods
jnp
cmc
jl
test
das
jge
push
lea
scas
loop
fstl
daa
xchg
xor
test
aaa
add
xor
loopne
pop
pop
xor
cmp
add
out
imul
dec
outsl
pushf
sbb
outsb
lret
fcmovne
imul
adc
xor
sbb
add
out
or
bound
mov
dec
aas
hlt
aaa
and
jo
jl
push
cld
out
popa
loope
cmp
push
or
push
jae
hlt
subl
jae
adc
test
xchg
xchg
fldcw
push
cmp
scas
aas
loopne
mov
enter
or
into
add
jle
ds
dec
mov
imul
or
or
lds
xlat
pop
sub
outsl
xor
pop
ds
jae
in
daa
adc
data16
sbb
jo
int
js
jbe
sub
xchg
dec
out
clc
incb
push
mov
mov
test
inc
pop
leave
dec
idivb
in
mov
pop
xchg
push
js
pop
mov
push
stos
mov
mov
movaps
pop
lds
stos
mov
test
les
mov
cltd
test
scas
mov
lcall
pop
fdivr
test
lret
aaa
mov
xor
repnz
lea
jne
mov
fisubrl
push
cwtl
in
jo
aaa
lock
test
mov
repnz
sub
subb
jge
hlt
cmc
nop
xor
imul
pop
stc
mov
xchg
mov
fbstp
clc
or
pop
mov
clc
scas
faddl
inc
lret
adc
inc
pushf
sub
loopne
sbb
cmc
add
sub
fdiv
mov
push
inc
outsl
mov
subb
insl
push
mov
cltd
add
pop
cmp
in
in
int
loop
cli
sbb
or
cld
ljmp
lock
rorb
fwait
je
std
xlat
jno
dec
mov
jl
xor
push
fwait
sub
and
das
sub
push
insb
imul
and
xor
mov
rorl
sbbl
mov
ss
cwtl
xchg
jno
mov
cli
mov
ljmp
aam
insb
cli
repnz
jmp
add
jmp
ss
shrl
clc
mov
mov
cld
pop
push
cmp
xor
xor
cs
inc
and
mov
outsl
xor
add
jb
xor
xchg
sub
jo
outsl
negl
xchg
pop
iret
aas
mov
aaa
xchg
ljmp
cmp
push
sbb
push
pop
test
scas
loopne
int
movsb
lea
ja
test
ja
les
xchg
pop
test
sbb
jecxz
popa
rcrb
aaa
les
sub
dec
inc
outsl
mov
lock
jmp
out
pop
mov
cwtl
ret
mov
inc
movsl
movsb
add
mov
mov
lcall
cli
add
inc
movsl
in
pop
adc
or
or
xor
cs
ss
xchg
sar
and
hlt
lock
stos
mov
pop
ret
mov
pop
jns
mov
jmp
mov
pop
icebp
cmpsb
jbe
and
lret
pusha
cmpsb
rcrb
in
stos
and
or
pop
mov
adc
stos
mov
jge
push
mov
js
inc
arpl
mov
mov
icebp
mov
testb
mov
and
or
lahf
or
mov
adc
and
lahf
lods
mov
sbb
or
xchg
shll
flds
mov
int3
push
xor
stos
mov
push
aas
call
cs
xor
idiv
add
popa
outsb
push
push
or
std
or
push
scas
loop
clc
sub
mov
xchg
test
cmpsb
sbb
test
push
xchg
dec
mov
push
inc
nop
sub
std
cmpsb
imul
movsb
cwtl
mov
mov
mov
push
pop
jb
imul
xorb
mov
jns
or
hlt
mov
out
xor
dec
inc
cmpsb
testl
mov
fprem
sub
dec
jge
insb
movsb
sub
nop
ret
insl
lret
ds
xchg
test
mov
dec
jae
lock
sbb
movsb
cmp
and
ss
icebp
sub
add
inc
mov
outsl
adc
sbb
adc
js
leave
xchg
jns
sbb
xchg
mov
stos
es
loopne
jl
sahf
loop
dec
jecxz
cmp
je
into
lods
push
ror
and
test
popa
nop
test
push
push
sub
pop
jns
adc
in
repnz
sti
cmp
pop
mov
roll
mov
fsubl
loop
add
or
sub
scas
inc
jl
jecxz
test
push
es
ds
mov
cli
sub
lcall
jmp
mov
and
pusha
xor
clc
cs
jno
push
mov
jnp
jo
xor
jmp
ficoml
aad
jmp
sbb
inc
test
test
push
mov
incb
mov
mov
mov
pop
xor
push
mov
jb
xchg
icebp
jecxz
ds
cmp
in
sub
xchg
nop
rcll
mov
add
js
push
rcrl
outsl
subb
repz
fstpt
lcall
mov
xchg
jne
mov
xchg
or
imul
iret
pop
ljmp
inc
fwait
sbb
stos
in
test
cld
es
push
push
cmc
inc
dec
push
jp
mov
xor
clc
ret
sbb
imul
inc
mov
repnz
mov
add
inc
fisttpl
push
mov
inc
mov
mov
cmc
adc
sbb
pop
js
add
jle
mov
sub
addb
test
sub
dec
mov
test
push
repnz
out
adc
adc
xor
mov
mov
repz
aaa
fcoml
mov
jo
jl
jno
fucomip
or
imul
sub
das
mov
cli
test
pop
add
inc
adc
rcll
jp
add
sti
jp
adc
fisttpl
dec
xchg
insb
cwtl
and
loope
sti
push
and
xchg
jbe
mov
mull
aam
inc
gs
adcb
dec
aad
mov
leave
divl
mov
fidivrs
add
bound
out
sbb
int
hlt
cmpsl
lret
push
fwait
or
xor
add
jmp
sbb
sub
or
xchg
stc
ret
mov
insb
pushl
mov
or
inc
dec
lahf
aam
jnp
mov
sbb
cld
rcrl
jecxz
mov
cmpb
xlat
pop
mov
jg
faddl
push
xchg
push
hlt
outsl
push
sbb
or
xchg
cli
inc
lcall
xor
jae
adc
dec
xchg
xlat
dec
ljmp
dec
pop
push
jl
cwtl
mov
push
es
add
adc
jbe
jle
mov
fldenv
sbb
psrld
sti
scas
shrb
dec
push
adc
xor
jns,pn
sbb
inc
xchg
adc
mov
adc
test
inc
mov
push
sub
jne
add
insl
nop
aaa
jbe
jecxz
sbb
call
loop
enter
js
aas
faddp
jbe
or
and
or
ret
sbbb
lret
sbb
and
dec
pop
sub
insl
std
and
jge
adc
lock
add
pop
jmp
jmp
or
stos
testb
aas
and
dec
inc
mov
jle
jle
sbb
out
fisttps
shl
in
call
fstl
mov
lret
movsl
imulb
sarb
jle
dec
adc
ffreep
repz
inc
and
je
cmp
sub
or
mov
inc
and
out
dec
or
pop
xchg
mov
loope
icebp
pop
icebp
lea
dec
ret
and
or
subl
cld
add
push
std
inc
call
add
outsb
inc
andl
fcmovnu
punpckhwd
or
dec
aad
mov
stc
filds
sti
inc
loopne
mov
pop
roll
in
xrelease
add
or
subl
jle
icebp
xor
pop
hlt
inc
mov
insb
jns
mov
and
jne
adc
cmp
inc
cld
inc
sbb
push
movsb
sub
int
xchg
clc
jl
mov
mov
sub
push
add
xchg
sub
ffreep
cmp
push
adc
cwtl
cmc
xor
push
jb
xchg
adc
mov
fists
fisttpll
mov
pop
dec
jo
xor
mov
mov
ja
icebp
mov
xchg
insl
packssdw
fldl
ljmp
xchg
sarl
js
pop
and
outsl
xchg
adcb
into
mov
or
stc
lea
mov
pop
cmp
xor
psubd
mov
fucomi
push
xor
pop
sbb
out
add
inc
mov
outsl
adc
faddl
lea
jns
ds
mov
jns
lea
mov
push
mov
xor
mov
push
inc
mov
test
or
inc
imul
pop
xchg
adc
pushl
inc
xlat
loop
or
dec
lret
pushf
out
jmp
sbb
jae
call
outsl
push
cmp
mov
jp
ljmp
ficoms
in
test
fldt
ljmp
xor
push
pop
pop
dec
lcall
movsl
rcrb
bound
xchg
and
lods
loope
jno
mov
das
xchg
fimull
popa
fmuls
in
jnp
sub
jecxz
cmp
stos
and
fs
and
loop,pt
cmp
and
iret
push
push
dec
loopne
mov
inc
insl
mov
mov
jle
xor
add
negl
mov
pop
scas
jle
jg
scas
add
cs
sahf
rolb
iret
cld
fstpt
fwait
pop
jp
es
adc
pop
pop
in
push
jle
xchg
imul
inc
into
xor
xchg
dec
lds
rorl
add
jl
dec
mov
mov
in
mov
aas
pop
or
dec
cmpsl
lods
movsb
jbe
or
or
imulb
xor
mov
push
test
fwait
push
fdivs
inc
cmpsl
sbb
or
adc
and
mov
outsl
nop
int
out
mov
mov
mov
add
mov
scas
adc
inc
faddp
push
daa
push
push
sub
sbb
push
jg
arpl
or
mov
lea
adc
in
push
or
adc
lds
xchg
imul
cld
xor
xchg
inc
ss
fsubrp
mov
fmuls
out
hlt
mov
repnz
idiv
leave
sub
ds
mov
or
fwait
mov
adc
out
rcrb
add
movsl
jae
xchg
mov
mov
lods
pop
cmp
pushf
sub
test
mov
xchg
les
xchg
leave
xchg
cmpsb
and
push
mov
adc
or
outsb
outsl
ss
mov
sbb
mov
insl
inc
out
inc
jg
inc
lret
in
mov
loope
filds
leave
shll
insl
adc
enter
jo
or
or
ljmp
mov
and
mov
fnstsw
fadds
es
pop
or
mov
test
mov
test
xchg
add
rcr
lods
sub
sub
sahf
sbb
les
jae
call
sbb
dec
inc
cmp
cmp
mov
fs
outsl
aaa
les
xchg
or
mov
jl
jmp
xorl
pop
pushf
cmc
js
cli
and
fidivrl
jb
lods
gs
iret
fisubrs
or
jo
scas
xlat
add
stos
xchg
and
inc
loope
cmc
test
pushf
mov
js
shlb
addb
bnd
hlt
arpl
xchg
fisubrl
and
ret
ret
cmpsb
les
iret
jmp
stc
mov
jb
mov
cmpsl
pop
sub
push
jo
dec
hlt
bnd
pop
and
inc
push
js
aas
aam
cmp
pop
movsl
mov
fmuls
add
cmpsl
ljmp
dec
pop
dec
or
push
sbb
jbe
mov
mov
xlat
xchg
push
xchg
loope
fidivrl
aad
mov
es
sarl
lock
sub
in
add
pop
xlat
fsts
mov
sbb
sahf
icebp
rcrl
int
mov
mov
jb
cmp
pop
int
lods
mov
popf
cli
push
sbb
decb
fmull
add
jb
and
sar
mov
dec
inc
dec
fidivl
sahf
mov
mov
mov
jle
hlt
add
and
testl
add
sti
insl
push
lock
push
adc
shll
ret
cwtl
mov
fwait
mov
cli
adc
inc
sbb
mov
dec
cwtl
ljmp
lahf
insb
loopne
das
adc
adc
sarb
in
xchg
xlat
sbb
bound
adc
gs
fisttpl
out
hlt
outsl
stos
mov
and
adc
movsl
or
push
xor
fistpl
push
fwait
clc
lock
xlat
repz
pop
mov
sub
mov
jmp
mov
and
mov
cld
shl
pop
aam
inc
or
push
cltd
mov
jne
push
int
fisttps
mov
or
clc
sbb
mov
lcall
dec
lock
mov
and
mov
cli
lahf
cs
icebp
aas
orb
daa
mov
add
mov
lds
pusha
cltd
clc
and
push
lods
sbb
out
int
pop
or
pusha
inc
sbb
mov
xchg
fldl
rcl
mov
mov
test
mov
or
inc
add
jb
add
xor
push
icebp
and
pop
call
sbb
dec
movsb
addr16
sub
ljmp
outsb
jb
and
out
push
push
dec
mov
mov
mov
cmpsl
xchg
sub
jl
inc
cmp
sub
cld
or
jbe
mov
mov
les
cmc
stos
jno
lock
movb
inc
xor
je
jne
xchg
push
ss
icebp
sbb
cmpb
cmp
outsb
icebp
xor
fdivrs
jl
mov
add
push
rclb
inc
jo
mov
shrl
fistpll
cs
sbb
and
ja
ljmp
mov
clc
mov
js
shl
std
ss
inc
dec
xor
pop
mov
mov
shl
subl
aas
rcr
inc
sbbb
out
pop
fmuls
pop
mov
pop
je
ds
psubq
cld
mov
imul
pop
scas
and
sub
and
mov
lcall
inc
jmp
jle
stos
ret
jecxz
lds
jg
mov
ret
jge
cmpsb
jo
add
push
xchg
jle
out
inc
test
hlt
push
gs
or
inc
test
das
insl
test
push
xor
mulb
xchg
mov
ret
fistl
adc
adc
or
push
into
fwait
popf
add
hlt
pop
push
clc
and
inc
adc
push
sbb
std
inc
ja
xor
jo
cmc
pop
dec
imul
rcl
or
sbb
and
and
add
jmp
mov
pushf
pop
mov
sub
bound
push
jecxz
shll
jne
in
cwtl
xorl
imul
nop
xchg
in
push
lahf
jmp
dec
fisubl
arpl
lods
mov
sahf
int3
pop
stos
aad
les
lock
pop
call
push
inc
sub
popf
js
jae
gs
cwtl
cmp
cs
xchg
dec
xor
sbb
stos
lret
sub
adc
scas
loopne
cmpsl
xchg
inc
mov
stos
mov
push
loope
andl
mov
mov
dec
aam
movsl
adc
outsl
jg
nop
fld1
je
ret
adc
mov
int
mov
mov
loop
ret
bound
pop
cmpsl
and
mov
lret
mov
es
loope
shlb
jb
pop
sti
in
mov
add
ss
clc
jge
and
lods
test
mov
sbbb
test
hlt
mov
push
mov
sti
fs
out
push
sahf
mov
jle
fidivrs
orb
xor
and
cmp
into
pop
ljmp
inc
cmpsb
mov
lcall
es
lret
scas
sbb
aam
adc
data16
pop
lods
daa
mov
push
inc
pusha
movb
les
inc
mov
push
xorl
dec
and
outsb
aaa
std
xchg
xchg
out
mov
add
imul
out
xor
les
mov
aaa
and
adc
jl
jl
push
xchg
mov
jns
dec
fdivrl
lea
aam
xchg
and
pushf
pusha
lock
jne
out
mov
mov
jecxz
mov
sub
popa
dec
cmp
pop
aaa
xlat
in
or
daa
lea
add
shlb
cmpsl
outsb
int3
data16
lea
fistpl
add
notb
std
idivb
ds
enter
fcompl
clc
ret
and
dec
xor
push
ffreep
or
cmpsl
mov
aam
xchg
out
loop
xchg
add
movb
jg
loopne
mov
sbb
lahf
mov
clc
das
lods
into
sti
inc
xchg
mov
mov
loop
sub
xchg
mov
imul
add
pop
mov
cmp
fld
arpl
mov
pushf
xchg
imull
in
outsb
adc
rcll
jg
add
repnz
push
adc
dec
or
sbb
mov
loop
jle
sub
push
push
mov
cmp
adc
sub
fldenv
jle
je
mov
push
hlt
lock
mov
inc
lret
in
call
sarb
lods
test
or
incb
mov
lahf
cmp
cmp
in
and
mov
pushw
xor
xchg
movsb
pop
gs
xchg
adc
sub
cwtl
mov
or
int
frstor
pop
dec
mov
fidivrs
sbb
js
aas
test
jae
sarl
in
and
and
ljmp
bound
loope
dec
cmp
fsubr
movsl
mov
jmp
pop
jl
adc
pop
mov
loop
lods
out
sbb
xor
outsl
sbb
cmp
cmc
lahf
jmp
xor
in
lea
add
call
dec
sbb
sbb
addl
outsb
xor
jl
mov
inc
inc
pop
insl
fcmovb
in
jns
movsl
pop
rcrb
pop
cli
xchg
xchg
mov
daa
push
jno
pop
add
sub
das
mov
mov
cmpsl
pop
test
jle
xor
jo
jl
mov
push
pslld
scas
lds
aas
popa
ljmp
popf
sbb
ret
cmp
sub
cmovb
jle
in
jns
enter
das
jl
mov
bound
idivb
mov
mov
push
ltr
jbe
arpl
sahf
dec
add
mov
imul
and
mov
xchg
gs
lods
inc
pop
aaa
xchg
clc
jo
pop
adc
xchg
test
ja
sub
inc
push
inc
push
bound
jno
icebp
lods
lods
sbb
jl
and
adc
ss
mov
outsb
push
cs
xchg
adc
add
push
js
ja
in
mov
loopne
lcall
and
fldenv
mov
shlb
dec
fcoms
loopne
dec
rolb
mov
out
mov
sub
lods
out
xchg
sbb
jne
push
pop
or
cmp
outsb
lock
cmp
and
adc
stos
dec
adc
aam
not
dec
pop
incb
mov
mov
mov
or
movsb
inc
shlb
inc
inc
add
pop
sbb
or
ret
lahf
mov
out
es
cld
and
push
pop
or
mov
outsl
jl
xchg
adc
and
js
mov
lods
mov
pop
cld
cs
mov
stos
jle
mov
mov
add
jp
dec
sbb
fsubrp
or
adc
fbstp
or
ficoms
test
adc
or
insb
add
mov
cld
inc
mulb
fdivp
mov
mov
jge
mov
pop
aas
cli
dec
or
ss
sub
push
in
adc
out
clc
fadd
mov
je
sarl
sbb
inc
orl
fistl
ret
dec
dec
adc
or
mov
xor
and
shrl
js
test
mov
and
or
mov
dec
sbb
arpl
cltd
mov
mov
pop
mov
sub
inc
jl
clc
adc
push
je
mov
jmp
fnstcw
call
loopne
cmpsb
xor
and
add
add
fisubl
lahf
add
cmp
movsl
psraw
aaa
in
adc
and
lds
sbb
or
jge
rclb
inc
nop
dec
fsubs
inc
in
mov
cmp
mov
ljmp
dec
xchg
xor
loopne
loopne
inc
xchg
fwait
mov
pop
adc
sbb
lock
and
or
mov
call
fmull
mov
gs
xchg
divl
add
xchg
nop
pop
mov
inc
jbe
mov
lret
jmp
and
loop
inc
aaa
pop
jns
inc
xchg
inc
jp
push
jg
mov
and
movsb
pop
pop
std
cmpsl
inc
les
sbbl
pop
outsb
mov
fdivs
add
test
out
jne
inc
aaa
cmp
and
movsl
out
sbbb
xchg
pop
mov
and
add
xchg
cmp
jg
in
mov
jge
decb
jno
mov
fistpl
inc
pop
mov
lods
xor
fdiv
aad
pop
jo
sub
test
rol
fisubrl
fdiv
pop
add
scas
pop
or
jmp
jg
lea
jb
jae
mov
outsl
test
jbe
mov
shrl
inc
or
adc
mov
xchg
adc
pop
adc
mov
adc
xchg
cmp
push
cs
ret
outsb
in
scas
add
cwtl
std
dec
inc
ljmp
imul
call
xchg
add
int
fistps
roll
lea
sbb
and
pop
and
clc
cld
sbb
or
mov
sub
cmp
out
cmp
sub
and
nop
leave
rol
push
cld
sbb
fs
inc
inc
push
sti
jbe
pop
jg
dec
add
les
call
adc
sbb
mov
shll
xor
cmpsl
mov
xchg
add
mov
push
test
xor
sbb
outsl
ljmp
inc
mov
pop
push
cmpl
test
mov
test
ret
pusha
jmp
push
and
cwtl
xorb
or
xor
sub
outsl
cmp
es
pop
xor
push
push
inc
jecxz
rolb
inc
hlt
inc
jecxz,pt
lock
push
or
cmp
mov
loope
mov
mov
test
pop
xorl
fnstenv
jb
inc
dec
je
mov
sbb
daa
xchg
fisubl
mov
jne
pop
and
sub
ds
mov
adc
jo
jmp
jmp
mov
cs
cmp
pusha
mov
test
or
xchg
mov
pop
xchg
scas
and
sar
aaa
rcll
push
push
loop
ret
lock
ss
pop
scas
out
aas
adc
cmpsl
ljmp
and
pushf
test
ja
mov
data16
ret
xchg
pop
aaa
faddp
sub
cmp
pusha
fs
dec
or
pop
call
insl
lret
dec
pop
adc
push
push
xchg
xchg
lea
ljmp
bound
test
movsl
dec
rolb
and
mov
lods
sub
cmc
push
sub
test
push
adc
jge
mov
clc
daa
outsl
ret
or
cmpsl
orb
sub
mov
out
es
scas
ret
cmpsb
fimuls
ja
sahf
sti
dec
xor
xor
jl
pop
sahf
jge
aas
stos
in
add
in
or
pop
sub
ja
fs
mov
xchg
cs
dec
js
push
lods
test
sub
add
outsl
xchg
push
xchg
idiv
int
pop
push
seto
insb
negl
mov
cwtl
inc
adc
push
and
dec
ja
cmpb
lcall
mov
inc
xor
sbb
jae
sub
inc
push
scas
popf
dec
test
xor
or
into
testl
out
sub
cmpsl
lods
clc
dec
mov
lahf
jbe
repz
out
js
mov
sub
xchg
pop
hlt
shlb
scas
push
call
sahf
push
js
clc
add
loope
sbbb
sahf
mov
sbb
ficomps
dec
mov
fnstenv
xchg
flds
cs
stos
outsl
popa
or
iret
fs
pop
and
ret
shl
std
pop
hlt
and
mov
dec
xor
adc
movsb
hlt
cmp
subb
jno
in
pushf
arpl
jp
shrb
mov
and
lds
fidivrl
add
nop
imul
lock
xlat
pop
or
mov
push
sub
mov
sub
push
or
dec
xchg
add
push
xor
cltd
sub
mov
fwait
andl
fidivrl
dec
fwait
mov
pop
mov
incb
pop
jnp
xor
dec
mov
xchg
insb
xorb
shrb
push
inc
and
and
aam
mov
pop
inc
push
and
jae
arpl
rol
cmpb
pop
sub
mov
mov
stos
jge
aad
mov
shrd
mov
dec
fwait
add
ljmp
jne
iret
push
psraw
add
sysexit
sahf
add
dec
inc
or
mov
mov
clc
fdivs
pop
cmp
push
jge
push
clc
add
mov
mov
pop
mov
adc
add
xorb
std
dec
cmpsb
dec
std
ret
inc
dec
jge
lock
and
mov
call
mov
mov
rcrl
dec
push
ss
fdivrs
and
imul
ja
mov
aad
mov
pop
gs
rcll
ret
mov
adc
and
pop
outsl
add
out
sbb
inc
inc
lods
mov
int
sub
add
xchg
fld1
xchg
jge
outsl
loopne
lea
adc
and
addb
outsb
mov
mov
pop
lock
repz
xlat
mov
push
sub
lahf
and
fiadds
sar
jle
mov
lods
and
push
test
mov
cld
adc
jge
loope
jbe
out
mov
xchg
loopne
movsb
push
mov
mov
loop
das
add
imul
inc
clc
xchg
popf
mov
xchg
aaa
aam
sub
ret
stos
push
int
mov
out
loop
or
pop
es
lods
sbb
xor
pop
push
dec
add
push
pop
aas
ficompl
or
push
push
cmp
jnp
fs
das
fcmovne
adc
inc
ja
dec
cld
ljmp
repnz
lods
jge
xchg
repz
icebp
ljmp
push
cmp
sub
or
aas
ret
mov
inc
rcr
mov
or
pop
xchg
mov
cmc
and
ret
jbe
or
pop
inc
ljmp
jp
sbb
sbb
mov
add
xor
sbb
and
push
cmp
ljmp
mov
mov
lods
inc
adc
out
mov
scas
aaa
dec
stc
xchg
sarb
adc
jns
pop
das
scas
popa
call
ret
rol
fcomps
jo
leave
mov
push
xchg
push
sbb
and
pop
ret
enter
jge
mov
rclb
mov
cs
fs
jg
inc
pop
pop
dec
enter
or
nop
and
jbe
jbe
mov
movsb
push
mov
sub
pop
xor
adc
test
ds
fcmovne
test
fldenv
outsb
insb
push
mov
mov
jns
scas
rclb
mov
cmpb
incb
mov
add
adc
lock
mov
mov
loopne
xchg
mov
mov
mov
clc
pop
mov
gs
movb
jg
ljmp
jg
cmp
ljmp
sbbl
jo
pusha
and
iret
je
jmp
nop
pop
fdivrp
lods
lds
mov
push
iret
pop
aas
push
or
xor
insl
and
mov
push
dec
xor
mov
or
fnstenv
je
rclb
inc
inc
mov
mov
mov
add
and
jb
in
roll
fdivrs
jo
adc
xor
scas
or
mov
mov
aam
incb
mov
xchg
push
inc
das
js
lock
sahf
in
sub
and
add
inc
jl
ret
and
les
jg
push
jbe
outsl
lock
sbb
xchg
push
fwait
pop
and
clc
inc
js
fwait
popf
arpl
ret
mov
mov
xlat
mov
mov
add
cmpsl
das
mov
push
and
lds
insl
fsts
mov
shrb
sub
data16
notl
push
sbb
hlt
jmp
les
arpl
cmp
sub
xchg
push
mov
mov
sti
daa
stos
je
mov
mov
sti
xchg
mov
dec
pop
shll
pop
popf
test
jbe
in
xor
test
shll
or
xchg
push
in
cmpsb
sbb
jb
popf
jmp
dec
in
ja
sbb
adc
rcr
les
adc
push
sbb
enter
mov
pop
insb
inc
sub
mov
pop
icebp
das
insl
xchg
cmp
and
xchg
jg
cmp
jg
rorb
stc
fcom
sbb
xchg
cmp
movl
mov
bound
out
pop
aad
cmpsl
sti
push
dec
cmp
movsl
out
jg
sbb
dec
mov
jle
outsl
fldt
mov
scas
mov
cmpsb
js
decb
dec
popa
xchg
in
pop
incl
fidivs
push
pushf
sub
lds
jp
mov
xchg
sbb
and
nop
jae
add
jo
jp
or
push
mov
jle
pushf
xchg
das
xchg
mov
xchg
mov
dec
or
sbb
or
mov
push
dec
pop
jnp
push
test
jmp
shll
sub
test
cmp
test
jmp
inc
cltd
jg
push
or
inc
imul
ja
sarb
push
jno
and
mov
or
mov
popf
shrl
pushf
mov
mov
lock
sbb
lock
mov
mov
push
not
decl
test
and
pop
or
cmp
ja
fstl
add
enter
pop
mov
clc
pop
adc
ljmp
mov
clc
lods
cmp
loope
adc
mov
jg
push
mov
sbb
icebp
ror
jle
lock
js
xor
inc
jp
cmp
dec
fnstenv
decb
call
mov
es
mov
movsb
add
hlt
or
pop
outsl
clc
or
sub
filds
add
add
jnp
sub
aam
cmpb
add
or
mov
je,pt
mov
xchg
call
jmp
mov
lret
ss
fistps
ss
xor
cltd
sbb
mov
insl
or
test
inc
pop
sbb
stos
movsl
leave
bound
fmul
paddb
inc
mov
ja
jne
xchg
jp
pop
add
xchg
ljmp
and
add
xchg
stos
pop
dec
lock
cmc
cld
daa
jnp
popa
push
jo
push
test
into
in
add
fistpll
mov
add
call
pop
push
jg
xchg
mov
outsb
dec
inc
sub
or
rorb
pop
xchg
lods
int3
pop
pop
jmp
lea
push
aam
pushl
mov
es
pop
pop
sbb
mov
push
fsubs
push
inc
pop
mov
orb
add
mov
mov
or
cld
loopne,pn
dec
cld
fsubrs
shrb
mov
das
xor
mov
ja
fistps
mov
lds
cld
into
outsl
pusha
pop
add
and
stos
cmpb
stos
jle
add
sbb
pusha
adc
faddp
repnz
imul
mov
iret
inc
mov
decl
mov
adc
stc
ffree
stc
xchg
aas
lock
repz
stc
enter
popa
pop
mov
xchg
cmpsl
pop
add
pop
clc
fbstp
mov
jge
loop
sub
int3
scas
daa
outsb
std
adc
data16
mov
andl
sub
pushf
xchg
mov
call
adc
push
mov
out
mov
adc
xlat
inc
mov
inc
add
loopne
xchg
and
jp
jb
dec
loope
mov
adc
imul
roll
arpl
scas
pop
popa
or
mov
lods
and
outsb
jecxz
push
jg
cmpsl
mov
loopne
pop
das
jle
xchg
repz
xor
xchg
into
mov
mov
daa
mov
add
fwait
xlat
test
push
jno
add
jecxz
sbb
cmp
cmp
data16
lret
nop
dec
pop
shlb
pop
mov
pushf
push
test
mov
hlt
addr16
add
leave
fnstcw
xchg
loope
xor
push
push
ljmp
push
dec
push
add
jle
les
xor
or
and
mov
jg
pop
or
mov
shrb
mov
inc
adcl
les
sub
pop
call
lock
cli
lret
xchg
inc
or
in
xchg
mov
push
adc
scas
mov
jns
inc
sbb
inc
jge
pop
push
jno
dec
push
arpl
mov
mov
je
movsb
daa
adc
ffreep
add
cmp
or
shl
jg
mov
std
cmp
faddl
add
sbb
adc
lret
sahf
inc
loope
jns
cld
mov
hlt
fiadds
inc
or
mov
mov
clc
loop
test
push
imul
xor
and
jg
cmpsl
push
lock
inc
inc
ds
incl
dec
cltd
outsl
mov
rorl
les
push
or
cwtl
pop
dec
roll
cwtl
jle
lea
aam
xlat
mov
std
das
cli
notl
dec
and
sar
shl
mov
add
mov
orl
add
or
aam
ret
in
sahf
pop
and
cli
addb
push
sbb
in
fcompl
add
out
mov
dec
and
sub
cltd
push
test
push
push
mov
shrb
jl
xchg
add
idivl
outsl
xor
jb
jne
jmp
inc
adc
les
xchg
clc
outsl
cmp
mov
hlt
out
divb
scas
repz
xchg
cmp
inc
sub
ss
add
ljmp
outsb
in
dec
loop
shrl
push
aaa
xchg
inc
inc
push
pop
les
xor
inc
loopne
insl
fs
and
js
jns
std
adc
push
push
repnz
call
push
sar
mov
int3
ljmp
in
lods
clc
mov
lcall
or
adc
fcmovb
adc
push
ja
push
out
inc
xchg
inc
pop
sar
sahf
inc
lods
xor
mov
addl
in
cs
push
loope
iret
sub
shlb
sbb
cmpsl
inc
test
stos
jg
in
fdivs
pop
mov
inc
xor
sub
cmp
aas
movl
dec
fmull
lock
shll
test
sub
sbb
imul
adc
cmp
adc
sub
mov
enter
es
addr16
loope
incb
and
daa
pop
inc
mov
jmp
hlt
sub
mov
jb
cmp
inc
out
adc
clc
pop
shll
stos
push
gs
outsb
test
jo
mov
mov
sbb
shrl
sbb
lcall
aaa
push
popf
js
das
adc
ret
roll
ljmp
nop
jb
loop
jle
inc
adc
out
pop
dec
and
jo
js
clc
pop
into
shr
pop
cmp
dec
or
pop
push
push
jb
mov
loopne
mov
aad
mov
dec
mov
gs
pop
and
sub
cli
mov
movsl
mov
subb
pop
cwtl
jl
jb
sub
fidivl
jecxz
adc
mov
js
mov
and
test
cmp
jne
call
dec
mov
idivl
iret
out
shrb
or
gs
insl
pop
je
inc
adc
xor
xor
cwtl
repnz
fldt
adc
mov
mov
cmp
jg
loop
jl
push
adc
sbb
sbb
push
cmp
adc
sbb
mov
int
pop
xchg
jl
aaa
adc
xchg
jle
mov
es
sbb
mov
or
movsb
push
jecxz
xchg
negb
test
dec
lcall
inc
je
sti
lret
inc
in
iret
and
jno
or
sub
in
int3
mov
push
jecxz
leave
iret
mov
or
jmp
test
ss
filds
dec
sti
addb
sbb
movsb
and
push
sbb
dec
jmp
arpl
jecxz
pop
cmc
mov
inc
mov
int
lea
sbb
mov
mov
mov
ljmp
insb
gs
dec
aaa
mov
mov
clc
bound
mov
or
add
inc
les
jno
mov
incb
orl
mov
pop
insl
popf
lock
xchg
jmp
lea
or
cmpsb
ficomps
inc
adc
sub
jle
adc
in
xchg
scas
insl
add
push
mov
aaa
adc
xchg
cmp
and
mov
test
sbb
insl
add
lock
mov
fwait
cmpsb
lcall
rcll
rcrl
imul
xor
pop
shrl
mov
mov
cli
test
or
orl
mov
mov
pop
xor
mov
adc
andl
push
shl
pop
stc
out
scas
mov
jnp
in
ret
mov
imul
push
dec
cltd
dec
js
inc
pop
inc
pusha
xlat
pop
shll
xchg
add
sub
mov
add
sbb
lods
arpl
inc
leave
or
mov
mov
inc
push
push
pop
scas
out
cwtl
xor
push
inc
leave
dec
push
adc
ljmp
jo
pushf
call
in
mov
outsl
aaa
add
jle
pop
mov
mov
std
lods
xchg
xchg
sbb
mov
jmp
or
or
jmp
jo
xor
push
ja
or
add
lds
lds
sti
inc
stos
mov
xor
out
out
add
xchg
ror
cmp
or
lret
sbb
ss
sbb
test
mov
mov
pop
sbb
cwtl
scas
mov
xchg
test
inc
clc
lods
cmc
fildl
subl
mov
xchg
faddl
cmp
jns
sbb
je
mov
adc
and
outsb
pop
xorb
jne
mov
and
jo
jmp
mov
enter
in
dec
ja
adc
mov
es
push
popf
hlt
bound
mov
push
inc
mov
dec
sub
mov
cmpsb
lock
cmpsl
roll
pop
or
lcall
jl
lahf
sbb
sbb
sub
push
rolb
or
lcall
js
mov
lods
mov
or
arpl
out
add
mov
jo
push
xchg
in
outsb
inc
subb
sub
int3
aaa
pop
push
lret
xor
dec
mov
or
dec
jbe
call
mov
fdivr
dec
aad
outsb
jmp
adc
and
dec
push
jns
loope
das
loope
and
testl
les
lcall
adc
outsb
addb
setl
and
out
pop
xorb
lea
pop
xor
pop
mov
lahf
inc
jp
fsts
cmc
insb
mov
sbb
out
imulb
inc
and
mov
fistps
fwait
xor
test
xchg
cmp
inc
jno
mov
sbb
jge
cmpb
inc
adc
lock
pop
xor
xchg
es
call
mov
sti
lods
mov
mov
pop
and
adc
add
aas
cli
inc
sti
sbb
inc
dec
je
sub
add
adc
out
adc
test
xchg
xchg
das
movsb
or
loopne
pop
cmp
inc
icebp
mov
jge
xor
lcall
fistps
pop
xchg
xchg
add
ret
push
fimuls
ds
rclb
dec
pop
cmp
pushf
repnz
loop
pop
xor
push
sbb
sbb
mov
subb
adc
mov
cmp
mov
int3
in
outsb
jbe
push
mov
outsl
rolb
ss
arpl
xchg
decb
jg
push
push
or
in
insl
not
pop
sbb
add
adc
mov
addl
adc
inc
xchg
int3
cmp
enter
cld
or
stc
mov
cli
int
mov
mov
or
inc
sahf
cmp
xor
fstpt
or
adc
adcl
sbb
nop
call
cmp
ds
loop
push
outsl
insb
pop
shl
push
push
sahf
pop
adcl
fwait
cmp
pop
insb
cmp
fnstsw
dec
ficoml
lret
incl
dec
ljmp
adc
xor
rolb
dec
mov
xor
test
fs
call
addl
ja
add
inc
sub
sub
xchg
pop
dec
sets
pop
insb
std
jnp
xlat
mov
sub
fcmovnb
ffreep
add
fidivs
sub
into
loopne
test
pusha
jecxz
stos
adc
cmp
xor
cld
dec
jno
xor
aad
inc
push
push
xchg
and
dec
pop
sub
inc
dec
addr16
test
les
cltd
scas
pusha
push
jecxz
push
inc
sbb
out
outsb
push
jg
push
adc
insl
inc
xchg
push
mov
shr
pop
cmc
sarb
inc
rorb
outsl
clc
nop
fsts
dec
mov
xchg
mov
and
cs
test
rcrl
or
adc
pslld
outsl
xchg
mov
cwtl
mov
outsl
bound
stos
pop
mov
and
pushf
arpl
mov
sbb
lods
jp
jge
and
hlt
xchg
inc
mov
sti
in
and
fstpl
repnz
mov
xor
rol
in
pop
stos
cmp
cmp
sarb
ss
andb
xchg
mov
sub
mov
mov
mov
cmpsl
mov
ja
inc
xor
cmpsl
cltd
cli
das
icebp
or
insb
jecxz
xchg
fstpl
push
or
xor
mov
jge
adc
pop
mov
int
mov
pop
xor
lock
lock
mov
ret
sbbl
fldl
mov
push
mov
das
sub
int3
clc
pop
and
arpl
adc
daa
loope
mov
outsl
orb
icebp
outsb
jne
dec
mov
ror
pop
cli
dec
aas
mov
push
inc
cmp
adc
and
mov
dec
je
jle
jns
fnstcw
sub
jnp
push
leave
inc
sbbb
sti
dec
and
sbb
dec
adc
fisubs
cmc
mov
loopne,pn
jno
add
sbb
push
dec
cmp
ljmp
xchg
int
mov
rcll
in
inc
insl
fsts
mov
inc
and
sahf
in
sbb
sub
sarl
mov
push
popl
divl
sub
pop
in
call
push
addl
xchg
cmpl
bound
roll
sbb
out
mov
ja
pop
jmp
rclb
push
sub
icebp
jg
mov
mov
pop
xchg
jae
adc
mov
loopne
sbb
mov
pop
sub
les
adc
inc
and
je
sub
aaa
jg
jns
xor
push
push
push
jbe
inc
imulb
stos
insl
pop
sbb
pushf
insb
mov
or
push
inc
bound
sahf
mov
add
out
inc
test
adc
adc
cld
lds
sub
adcb
es
lods
sub
or
push
pop
loopne
pop
popl
rolb
sub
xchg
loope
add
add
jmp
in
std
xchg
pop
pop
test
in
imul
or
mov
push
dec
pop
mov
cmp
sbb
cld
sub
jecxz
mov
jg
aad
imul
mov
sbbb
sub
aam
sti
popf
inc
and
xchg
jo
in
jl
sbbb
int
jg
or
in
or
mov
into
push
xchg
cmp
xchg
sbb
adc
cmc
int
imul
cmpsl
sahf
jnp
scas
mov
lea
xchg
adcb
jmp
outsl
mov
sti
push
fstpt
out
add
push
dec
data16
pop
mov
xor
sub
fdivr
outsl
push
mov
decl
sahf
mov
psubd
pop
adc
cwtl
mov
mov
fcomps
aaa
cmp
insb
and
scas
xchg
jg
pop
push
inc
cmpsb
idivl
gs
int3
mov
dec
test
fsubr
mov
and
push
insl
shrl
jecxz
gs
cmp
inc
sub
pop
add
push
stos
push
push
sbb
jg
insb
test
test
jno
sarb
out
mov
outsl
sub
outsl
adc
jnp
mov
es
mov
inc
xchg
frstor
mov
bound
fidivs
cmp
subl
mov
gs
lret
mov
pop
std
xchg
bound
or
mov
cmpsb
in
mov
xor
in
sub
push
and
push
fildl
mov
aas
add
xor
mov
sub
dec
outsl
push
mov
sbb
hlt
mov
pusha
jo
jae
test
ret
jecxz
mov
or
cltd
pop
push
je
jbe
in
mov
mov
jecxz
mov
mov
daa
sbbb
dec
std
stos
xor
push
adc
xchg
mov
mov
xor
xor
add
mulb
pop
push
dec
adc
xlat
push
mov
das
or
fsts
out
pushf
out
out
rorb
or
mov
bsr
or
dec
jge
fildll
sbb
ret
dec
cwtl
push
dec
mov
mov
movsl
push
xor
and
mov
insl
das
jns
cmpl
mov
xchg
add
fidivrs
push
or
add
mov
incb
push
xor
push
adc
sbb
push
mov
mov
lods
add
jmp
and
loopne
pop
mov
bound
ret
jl
adc
jb
popf
scas
jno
dec
or
aas
daa
or
dec
cli
test
push
or
int3
jno
jp
mov
pop
cmc
sbb
mov
push
mov
jecxz
ja
pop
js
cli
or
inc
pop
decl
push
decb
xchg
imul
mov
cmp
mov
mov
push
mov
mov
aas
jle
fldt
cmpsb
jbe,pt
in
add
popa
inc
shll
sub
add
push
sub
dec
outsb
loop
stos
lods
pop
decb
mov
dec
xchg
lret
scas
test
sar
popa
movsl
cwtl
aam
std
int
pusha
mov
leave
jg
jge
into
and
and
add
in
and
or
push
add
cwtl
lret
add
pop
adc
push
sbb
xchg
mov
xchg
jno
pop
sarl
into
push
rol
mov
adc
add
insb
rorb
bound
and
jge
test
adc
xlat
jbe
cli
outsb
rorb
cltd
fildll
mov
mov
mov
cmpsb
loopne
fs
aam
sbb
div
es
mov
data16
xchg
out
jp
jbe
imul
inc
aas
das
jno
es
mov
stos
rcll
popf
sub
shl
clc
cmp
jl
and
push
cmp
dec
jge
loop
mov
sbb
ror
mov
fcmovnb
and
mov
jmp
testb
arpl
les
shlb
inc
mov
insl
dec
adc
cmpsb
test
sbb
jno
adc
andl
push
dec
jl
jno
dec
ljmp
popa
subb
mov
je
fsubr
ss
pop
cld
mov
xchg
dec
inc
push
mov
mov
stos
std
ljmp
cmc
push
mov
repnz
pushf
dec
sbb
sub
nop
push
jg
fistpll
enter
fwait
outsl
add
andb
mov
mov
sbb
cmc
repz
scas
jbe
icebp
lea
andb
xlat
filds
mov
cld
loope
insb
push
mov
stc
inc
imul
call
and
cld
mov
jge
dec
mov
push
sbb
adc
mov
mov
sbb
std
push
mov
lock
sbb
sbb
mov
inc
fcoml
movl
push
cmpsl
jg
push
or
ljmp
adc
aas
add
or
repz
xor
cli
xor
popa
enter
repz
add
add
hlt
imul
popa
dec
je
adc
gs
movsl
cmpsb
shlb
pop
adc
ds
ss
sub
lods
mov
sbb
neg
test
pop
inc
loop
test
jbe
xor
fidivrl
or
xor
pop
mov
cmp
out
add
or
je
inc
enter
aaa
and
loopne
aas
call
cmpsb
push
mov
adc
call
xchg
scas
sti
pop
sbb
das
decl
jo
mov
jmp
or
add
and
dec
lret
jle
inc
lods
pop
inc
scas
and
dec
or
push
add
out
mov
or
cmpsb
add
hlt
mov
xor
cmpsl
jle
mov
rcrl
mov
push
aad
xor
fs
enter
push
mov
inc
cmp
je
cmp
scas
dec
jb
pop
add
notb
mov
adc
cmp
mov
xor
stc
mov
loopne
cs
movsl
pcmpeqb
or
call
ret
int
adc
xchg
sbb
jecxz
inc
xchg
rol
test
and
xchg
stc
push
notb
enter
mov
mov
mov
and
adc
pop
jns
xor
in
pop
aaa
mov
js
test
or
or
mov
sub
and
jbe
fs
xchg
or
pop
ljmp
push
mov
jecxz
lcall
rcr
xchg
add
stos
loopne
pop
adc
mov
jnp
mov
adc
mov
fbld
adc
mov
in
add
jno
subl
xchg
enter
jmp
or
jbe
add
inc
mov
sub
add
insb
xor
cmpsb
rcll
hlt
out
cld
scas
mov
inc
ds
icebp
sub
jecxz
ret
cmp
mov
cmp
outsb
movsl
jo
or
ss
out
pushf
xor
sbb
mov
cmp
in
ret
test
popf
inc
or
adc
jbe
andb
shr
das
mov
icebp
imul
aas
push
mov
sub
loop
subl
ret
orl
pop
add
mov
mov
pop
call
imul
cmpsl
sub
mov
test
cmp
adc
cwtl
incl
movsl
jg
dec
sarl
mov
cld
pop
or
adc
test
add
pop
aas
insl
cli
mov
add
jb
mov
nop
xor
test
sbb
jo
out
lcall
out
fwait
hlt
pop
or
mov
insl
mov
loop
push
fdiv
pop
clc
es
xor
iret
adc
xchg
es
mov
rclb
lea
push
pop
rcll
sub
out
cmp
out
js
hlt
in
scas
test
repz
loop
test
sub
ja
test
pushf
cmpsb
jae
subb
sar
scas
pop
clc
inc
inc
das
dec
call
add
mov
sbb
jbe
pop
sub
fadds
or
add
push
dec
mov
inc
mov
add
mov
and
loop
inc
or
icebp
dec
inc
dec
jle
mov
dec
shlb
insl
mov
mov
sub
and
pop
adc
push
pop
inc
aaa
mov
mov
ret
fldt
mov
push
adc
imul
and
mov
cmp
adc
jge
out
sbb
jle
call
and
or
xchg
popa
sub
mov
push
mov
lea
leave
inc
mov
clc
pop
rcrb
lret
add
sbb
lock
incl
dec
pop
and
fmull
insb
movsl
or
out
insb
idiv
fsubrl
mov
dec
adc
pop
in
into
sarb
sub
ret
shl
add
and
xor
rcrl
mov
mov
xor
lds
and
jmp
aad
stos
xlat
cltd
aad
iret
loopne
or
pop
int
lods
jb
pop
dec
pop
sbb
cmp
fists
mov
nop
sahf
and
jno
pop
jle
dec
aam
fldenv
mov
mov
filds
mov
xor
aas
cli
jle
into
ret
adc
inc
push
xchg
push
cmp
jmp
mov
mov
or
outsl
dec
dec
into
mov
xchg
enter
jg
xor
pop
hlt
les
aam
pop
mov
in
icebp
dec
aam
pop
test
or
popf
mov
es
test
pop
pusha
xchg
pop
js
mov
jg
add
sub
push
inc
push
out
cltd
gs
dec
push
das
fsubrl
clc
es
xor
push
in
xor
sbb
clc
jg
idiv
sub
dec
sbb
jmp
dec
or
rcrb
mov
loop
adcb
adc
popa
or
rcr
aam
adc
adc
xchg
xor
push
movsb
lods
test
hlt
xchg
fcompl
iret
cmp
les
and
pop
in
xchg
icebp
xchg
testb
jb
fucomp
mov
lret
or
sbb
mov
iret
inc
jae
inc
xor
pop
mov
push
dec
mov
sbb
data16
hlt
in
rcll
repnz
insb
aad
ret
shll
mov
scas
arpl
ret
pop
fidivrs
inc
pusha
fs
or
ljmp
cmpsb
and
mov
inc
call
adc
repz
push
sbbb
cmp
repnz
push
inc
insl
sbb
ja
adc
xchg
into
pop
inc
lret
pop
rcr
test
xor
jge
dec
or
mov
sub
scas
jno
sbb
sahf
pop
ja
es
pushf
call
jnp
scas
loop
std
xchg
add
sub
push
outsb
test
push
ret
and
push
mov
stos
repnz
fst
inc
cwtl
lods
vpunpcklbw
jg
adc
dec
mov
xor
push
decb
scas
cld
sbb
mov
cld
in
pop
dec
pop
loope
push
jns
insl
stos
pusha
test
fisubl
decl
mov
loopne
cli
fcompl
xchg
in
mov
mov
push
or
lcall
jbe
mov
sub
movsb
rcrb
jg
jmp
mov
jp
dec
ljmp
adc
pop
and
mov
ret
in
xchg
jmp
mulb
fsubrs
push
sub
dec
cmp
and
outsl
sbb
aas
les
mov
mov
add
das
adc
fdivr
push
jmp
out
sbb
repz
pop
fnstsw
xchg
popf
arpl
sbb
scas
mov
mov
xchg
out
cmp
mov
test
push
out
sbb
or
div
aaa
lock
fisttpll
add
lods
imul
mov
and
outsl
adc
pop
ljmp
in
scas
cmp
cld
cli
call
cmp
lods
xchg
pop
test
xor
scas
les
sbb
mov
jge
pushl
pop
mov
ds
mov
sub
sbb
out
nop
aaa
sub
adcb
orb
clc
xchg
test
dec
xor
push
sahf
dec
ss
or
inc
xchg
loopne
and
out
loop
fisubrs
jae
pushw
fsubs
mov
dec
sbb
mov
inc
ficompl
pop
inc
jecxz
adc
dec
add
in
add
filds
mov
in
addr16
or
dec
ljmp
fwait
lahf
and
xchg
mov
pop
cmp
ret
push
call
mov
fdivl
cmpsl
or
push
les
in
xlat
ja
mov
icebp
sbb
xorps
jl
xchg
add
sbb
divb
mov
ja
std
data16
cmpsb
insl
jne
jl
imul
orl
movsl
fwait
and
jg
pusha
insb
add
add
imul
push
cmp
das
std
sub
dec
and
jg
ret
cmp
adc
adc
mov
cwtl
int
and
pop
stc
icebp
xor
cwtl
sbb
pop
pop
push
xor
lods
cmp
mov
rcll
mov
mov
pop
xor
mov
call
xor
leave
xchg
and
xor
fidivrl
out
test
test
outsl
loope
ljmp
arpl
mov
pusha
je
int3
outsl
ja
outsl
xor
pushf
xor
or
jge
lds
cmp
push
outsb
jg
fdivrs
mov
rcl
or
pusha
andb
xchg
mov
pop
push
ja
outsl
mov
and
inc
fmull
sbbl
dec
lods
sar
cld
pop
mov
fs
cmp
ds
pop
xchg
cmp
rolb
insl
push
adc
and
and
out
fstp
pop
mov
iret
fld
loope
je
nop
mov
call
outsl
mov
cmp
mov
out
add
pop
ret
mov
hlt
ja
andb
pop
jo
adcl
mov
das
cld
cli
flds
ret
or
xchg
or
inc
jne
mov
loopne
cld
sbb
inc
cs
or
and
mov
mov
push
mov
adc
cmp
dec
loopne
xchg
aas
nop
push
mov
mov
adc
mov
mov
adc
jae
into
stos
inc
lahf
imul
push
push
add
je
mov
xchg
test
jge
mov
xor
sub
inc
sahf
push
enter
cs
inc
scas
sub
mov
add
xchg
clc
test
aam
or
and
sbb
add
fsubrl
jge
dec
mov
xor
outsl
add
mov
push
pop
roll
sub
and
lods
test
cmp
jecxz
popa
adc
xchg
xor
mov
mov
mov
jbe
push
mov
pop
cli
jne
les
mov
scas
push
sub
test
mov
stos
fstpt
and
pop
dec
mov
xchg
icebp
andb
jg
add
sbb
cmpsl
push
sbb
insl
lock
sub
or
push
pop
push
jl
gs
out
hlt
lea
and
fwait
and
fildll
repnz
clc
rcrl
cli
loop
push
jae
les
mov
mov
test
clc
enter
mov
push
mov
cmp
mov
repnz
jl
pop
filds
xchg
inc
mov
cmp
inc
imul
and
in
and
aas
mov
inc
cld
test
lret
icebp
das
dec
and
icebp
js
lods
pop
push
rcll
xchg
or
ds
push
jge
ffreep
dec
sub
cld
xor
fnsave
ss
cld
xchg
cmp
in
out
adc
pop
popa
out
lea
mov
cmp
sub
dec
push
cmpsl
sbb
or
sbb
pusha
jg
mov
mov
adc
std
sub
into
fldenv
mov
push
push
fdivrl
or
pop
cmp
arpl
subb
fildll
mov
push
aaa
and
fidivs
xor
sub
push
push
xchg
lcall
insl
inc
decb
xor
fnstcw
pushf
stos
lods
dec
push
jmp
jp
aaa
loope
add
mov
daa
lock
adc
inc
ja
mov
xor
xchg
add
jmp
nop
les
dec
gs
sub
mov
ljmp
jae
dec
in
aas
stos
iret
pop
or
lcall
jg
dec
outsl
xchg
mov
rcll
xchg
mov
les
push
pop
push
dec
aam
cmp
push
movsb
dec
mov
push
lock
xor
loope
adc
add
mov
stos
rolb
clc
dec
jns
mov
mov
iret
jp
stos
inc
in
push
fstpl
aas
pop
jb
xchg
jl
sbb
outsl
sbb
pop
out
out
mov
cmp
test
aad
sbb
xchg
addl
or
push
xor
out
xor
xor
and
sbb
int3
mov
sbb
call
inc
push
and
push
les
clc
test
fidivrs
test
cmp
fnsave
pop
or
cli
xchg
adc
dec
in
jl
mov
push
loopw
out
sbb
lods
shll
jmp
add
ret
icebp
negb
loop
sbb
jae
in
out
bound
fwait
push
xchg
cmp
out
add
fs
fadds
arpl
pop
mov
mov
ljmp
jle
jne
ss
xchg
popa
imul
xchg
push
sarb
decl
out
sarl
xchg
cwtl
cmp
lahf
incb
mov
xor
out
ljmp
hlt
sub
icebp
mov
inc
mov
std
aam
daa
add
sbb
inc
ret
ret
faddl
jle
and
mov
jne
and
gs
mov
inc
addr16
mov
bound
or
pop
addr16
add
pop
add
lods
scas
ja
jb
jo
add
scas
xchg
fsubs
sub
dec
inc
shrb
ret
pop
lret
decb
sbb
inc
cmp
imul
xchg
or
fwait
out
insl
mov
js
xlat
push
nop
fisubs
sub
stos
outsb
pushl
and
test
sti
add
rclb
ljmp
cwtl
mov
mov
sarb
xor
lcall
mov
cmpsl
enter
xor
call
mov
push
adc
push
mov
js
icebp
adcl
outsb
out
popa
inc
pop
push
call
outsl
inc
mov
adc
and
pop
pop
ret
outsl
and
mov
sbb
push
std
cmp
cli
ja
push
mov
sbb
inc
pop
ret
mov
gs
lret
insb
and
xchg
ret
xor
call
pop
rcl
push
std
mov
cltd
lcall
dec
ljmp
pop
stos
cmpsb
mov
loope
inc
adc
pushf
mov
mov
shll
ret
add
push
sub
dec
push
jge
decl
lret
mov
jae
dec
gs
nop
lea
xchg
sub
test
incb
in
dec
and
pop
pop
mov
fs
jle
bound
sbb
call
jmp
adc
ljmp
sbb
faddl
iret
popf
inc
imul
push
push
xor
adc
rcl
inc
mov
loop
adc
rcrl
adc
in
cmc
movsb
sbb
sub
push
adc
add
mov
scas
or
out
add
stos
scas
dec
add
jecxz
inc
gs
xlat
cs
cmp
inc
in
cmp
out
imul
and
lds
jnp
insl
subl
in
push
xchg
div
in
sbb
outsb
nop
and
push
xor
sbb
out
bound
push
fists
sbb
daa
dec
inc
mov
fs
repz
jbe
xchg
stos
lea
sbb
or
outsl
jo
xchg
cmp
scas
pop
xlat
pop
js
decl
aas
std
dec
mov
pop
mov
adc
nop
adc
icebp
xor
cmp
jno
jecxz
loope
pusha
lea
jle
xchg
inc
ret
inc
test
cmp
call
push
mov
add
test
xchg
or
lcall
push
mov
cmp
lahf
stos
jl
rcrl
mov
push
push
out
aaa
xchg
call
cmp
xor
pusha
mov
int
pop
push
aad
dec
jbe
cmpsb
and
fildll
mov
add
cmpxchg
push
clc
lcall
jb
pop
inc
and
push
test
xchg
inc
movsb
xor
ljmp
xor
mov
fbstp
sbb
or
adc
rcll
jb
mov
into
pop
dec
xor
and
lea
jmp
xor
fsubl
data16
icebp
shll
inc
and
ljmp
adc
add
mov
mov
xchg
das
inc
push
bound
mov
sub
std
push
loop
shl
mov
add
insl
jecxz
roll
sub
dec
pop
push
inc
stos
push
xor
ljmp
sti
xor
jae
ret
imul
ret
xchg
and
fwait
mov
push
adc
out
jnp
cld
jecxz
iret
rclb
adc
gs
js
out
outsl
dec
lret
jns
sub
or
fwait
xor
aad
mov
cvttps2pi
rcl
leave
mov
loope
popf
dec
push
pusha
jecxz
test
nopl
cmovo
sub
xor
pop
or
aam
jae
sub
and
loop
popf
test
addr16
inc
fisttpll
inc
arpl
mov
rorb
pop
movsl
mov
cmpsb
jb
adc
dec
sbb
test
fwait
mov
shlb
test
xor
stos
mov
xchg
mov
arpl
lret
mov
jno
pop
inc
ficoms
pop
sbb
lock
shlb
test
cmp
aam
pop
adc
mov
push
mov
mov
arpl
adc
inc
jle
subl
xlat
add
dec
add
mov
rclb
sarb
in
orl
cmp
adc
pushf
push
xor
mov
mov
in
js
sbb
test
add
mov
xchg
xor
scas
mov
test
adc
in
sub
lret
cwtl
add
scas
orl
push
cli
and
mov
lahf
cmpsb
jne
in
jl
or
sub
mov
addr16
pop
decl
xor
push
test
and
dec
push
das
add
fcmovb
cli
xor
add
add
roll
cs
decl
js
lret
xor
sub
fs
clc
xor
pop
shr
or
add
cmp
jl
jnp
test
pop
std
sbb
inc
mov
dec
or
mov
dec
jne
push
fistpl
mov
jo
push
jp
xchg
jecxz
jb
push
nop
or
rclb
fists
cmp
imul
cld
cltd
cmpsl
in
jne
mov
fstpl
mov
arpl
fistps
lods
lods
pop
sbb
jne
mov
mov
mov
sub
cmp
sbb
dec
mov
das
mov
push
inc
and
adc
xchg
cmp
sbb
das
or
sbb
jp
lahf
je
es
pop
or
mov
std
cs
dec
rcll
std
aaa
std
add
leave
test
jbe
mov
idiv
add
or
push
add
cmp
std
andl
outsb
inc
pop
add
mov
aad
rcr
adc
enter
leave
mov
cs
mov
adc
adc
and
adc
jo
es
push
pop
mov
aad
andl
sub
mov
push
mov
mov
movsb
testl
outsb
arpl
push
outsl
adc
xorb
push
fisttps
add
repz
mov
cmp
and
inc
jb
clc
loopne
icebp
mov
pop
cmp
outsb
in
shr
cltd
mov
aaa
dec
jg
mov
sbb
xor
in
xchg
pop
ja
jmp
cwtl
sub
jbe
fs
cmp
mov
and
pop
enter
jne
or
sbb
xchg
nop
sbb
inc
in
xlat
data16
or
xchg
das
adc
mov
out
jmp
and
jb
mov
mov
ss
mov
fnstenv
test
dec
movsb
sbb
or
in
jbe
mov
sub
std
jae
adc
sbb
adc
and
mov
mov
iret
or
nopl
fwait
sti
daa
cmp
push
jo
test
hlt
mov
outsb
mov
push
xchg
xchg
enter
dec
push
xor
dec
ret
ss
xchg
lret
jl
xor
fistpl
insb
fistps
xchg
lock
push
mov
mov
stos
mov
lea
das
push
push
fwait
sti
cmp
imul
test
ss
or
sbb
mov
repnz
jecxz
mov
mov
fldenv
add
mov
adc
inc
pop
aaa
push
cmp
xchg
outsb
hlt
ret
mov
add
ja
aaa
inc
sub
call
mov
js
popa
cwtl
loop
and
outsl
xchg
ss
add
enter
jns
fadds
sahf
add
mov
add
imul
fsubs
push
mov
test
push
std
mov
clc
mov
lds
inc
dec
pop
xchg
fwait
mov
push
adc
xor
mov
adc
in
pop
cmp
cmp
hlt
out
dec
les
insl
add
xor
add
sub
lods
and
jg
mov
daa
stc
push
mov
adc
js
inc
sbb
inc
jo
xchg
sti
cmp
jns
and
mov
push
push
in
jl
sarl
repnz
adc
sbb
fimuls
stos
pushf
add
xchg
jle
sar
or
adc
iret
or
bound
mov
adc
mov
push
push
xchg
out
mov
data16
jmp
test
jno,pt
xchg
addr16
movsl
into
push
inc
test
fmuls
push
in
cmova
xchg
fldenv
mov
mov
enter
in
xlat
and
pop
nop
andl
out
movsl
loop
mov
ds
loopne
aad
mov
pop
fwait
push
sub
mov
inc
icebp
or
lock
dec
dec
and
daa
and
pop
xchg
dec
jno
add
daa
in
xor
pop
pop
das
inc
aam
aaa
push
pop
adc
rclb
jnp
inc
lea
lret
pop
jmp
push
lcall
push
inc
push
add
add
mov
loop
jge
rolb
mov
pop
push
popl
clc
out
pop
repz
jg
pop
push
insl
xlat
pusha
dec
shl
adc
mov
pop
mov
pop
arpl
or
dec
popa
in
bound
add
push
jmp
jo
std
fisttps
mov
jae
fs
dec
orb
push
sub
xchg
sti
fmull
loopne
mov
mov
clc
popf
and
scas
scas
pop
jl
inc
imul
add
incl
xor
cmpsb
test
imul
cmpsb
inc
inc
std
in
mov
jecxz
jnp
and
sub
push
and
stos
lods
inc
xchg
fidivs
jmp
mov
or
aad
mov
in
cli
divb
sub
fidivs
shr
setns
aas
or
outsb
std
roll
subl
ss
sbb
xchg
jp
pusha
out
sub
je
dec
add
jns
mov
and
movd
pop
fsubrs
pop
pop
sbb
xor
test
js
fists
je
mov
cmpsl
insb
jg
ss
daa
add
or
or
mov
jmp
pop
sbb
stos
std
pop
xor
jno
int
mov
das
jne
inc
xchg
jno
adc
sbb
movsl
addb
jg
push
dec
or
stos
stos
insl
or
cwtl
imul
adc
jo
fildl
test
mov
or
ljmp
pop
lods
cmp
cmp
pop
cmpsb
icebp
lock
rcrb
lds
stc
pop
mov
jl
cmp
pop
xor
out
fcmovnb
aas
jno
shlb
or
mov
mov
inc
lret
pop
mov
shlb
jo
mov
lret
add
nop
or
pop
mov
fwait
xchg
or
inc
inc
out
int
sbb
pop
nop
nop
imul
pop
sub
out
filds
pop
shlb
int3
mov
or
ljmp
ljmp
and
mov
punpckldq
mov
mov
mov
xchg
mov
rdpmc
mov
mov
cwtl
inc
mov
dec
inc
incl
dec
dec
ds
loope
mov
jmp
out
subb
iret
inc
addr16
icebp
inc
pop
xor
and
adc
mov
pop
jbe,pt
enter
fidivrs
adc
ror
inc
sbb
repz
lret
push
jae
add
incl
in
dec
add
ret
sti
xchg
mov
mov
dec
je
cmp
jbe
incl
adc
into
mov
fldenv
sbb
pop
push
fsts
push
iret
ja
xor
bound
es
les
xchg
test
aad
aaa
inc
mov
sbb
outsl
mov
fmuls
pop
pop
loop
stos
pop
aaa
out
pop
stos
inc
mov
sbb
mov
imul
testb
adc
pop
outsb
xor
mov
adc
stc
pop
out
nop
int
push
xlat
or
inc
dec
outsb
ja
es
push
xorb
in
loopne
rorb
rcll
xor
shlb
push
icebp
insl
mov
imul
mov
test
ljmp
inc
xchg
inc
jmp
add
test
inc
cwtl
push
jne
aad
push
mov
insl
fldt
push
daa
outsb
cld
jg
ret
sahf
divb
mov
loope
and
push
inc
mov
loop
lock
push
adc
in
and
push
hlt
out
stos
jbe
inc
jne
or
and
jecxz
das
scas
sbb
filds
pop
enter
iret
les
imul
jb
outsl
movsb
or
sbb
push
call
add
xchg
sbb
push
lret
push
dec
cmpsb
jmp
lcall
repnz
lahf
xor
dec
aad
outsl
or
sbb
fnsetpm(287
inc
adc
jbe
sbb
rorb
movsb
aam
mov
std
adc
fidivrs
add
mov
mov
mov
add
jne
mov
sahf
cmp
mov
gs
xor
pop
movsl
lds
jp
add
cmp
loop
pushf
or
cmp
loopne
loop
and
fwait
adc
lahf
adc
sbb
sbb
fwait
mov
loop
adcb
pop
add
sub
filds
push
clc
cwtl
rolb
push
xchg
lea
sub
push
sbb
sbb
popf
pushf
inc
xchg
call
icebp
mov
inc
dec
and
pop
insb
cmp
int3
test
and
cs
sbb
add
ret
jecxz
or
lcall
stc
lea
loop
xchg
ljmp
xchg
push
xchg
fadd
shrl
in
cmc
add
in
dec
ret
xchg
dec
and
pop
pop
movl
mov
mov
in
in
ss
pop
mov
xor
cld
sar
adc
mov
jns
leave
add
sub
mov
inc
test
adc
xor
mov
aaa
lock
jo
imul
sub
xchg
push
jne
or
mov
popf
fwait
mov
mov
inc
xor
pop
and
lods
lea
jecxz
and
and
mov
and
jl
stos
push
jecxz
gs
lea
pop
inc
std
cmp
inc
repz
dec
daa
int3
fsub
test
popf
mov
xorb
dec
jmp
pop
decb
add
pushf
jmp
mov
cmp
je
inc
sbb
jbe
sub
ret
sub
xchg
mov
ljmp
leave
cmpsb
push
and
inc
jl
xor
jp
mov
scas
adcb
jp
fistps
cli
sub
loope
subb
pop
call
repz
cmc
sub
mov
je
adc
push
rorl
aad
leave
pusha
movsl
std
pusha
or
push
in
cmc
ljmp
jp
xor
add
push
movsb
push
lods
test
rorb
outsl
call
dec
les
sarb
iret
sahf
pop
sbb
fistpll
dec
mov
ret
dec
into
adc
insl
cmp
dec
fwait
ljmp
adc
adc
mov
daa
mov
mov
clc
mov
loopne
cmp
push
or
mov
ret
addr16
into
sahf
jle
outsl
and
mov
or
jle
pop
pushl
mov
in
fstl
shll
shrl
out
sbb
add
push
mov
nop
or
sbb
fistps
xchg
inc
rcrl
xchg
mov
jge
mov
fldenv
pop
mov
mov
dec
stos
stos
icebp
test
adcl
aas
and
add
xchg
shll
in
mov
pop
call
bound
push
push
adc
cwtl
push
outsl
mov
psrld
pop
mov
jmp
inc
outsl
cmp
in
out
add
push
sub
cmp
add
or
aas
adc
icebp
sub
je
mov
push
xchg
mov
jae
push
ds
xlat
ret
sbb
push
add
insl
lock
clc
mov
movsl
outsl
push
xor
and
mov
sbb
out
push
mov
and
mov
adc
or
sbb
pushf
std
ljmp
mov
arpl
mov
xchg
adc
cmpsb
sub
mov
and
sub
xchg
mov
xorl
jge
push
cld
dec
pusha
push
sub
xlat
or
sub
mov
insb
sub
mov
cmp
pusha
bound
jl
sbb
in
pusha
xchg
cmp
lcall
orl
xor
into
mov
xor
ret
add
incb
jmp
mov
adc
and
add
lret
push
adc
pop
rol
loope
jno
mov
jo
inc
cmpsl
or
add
repnz
xchg
push
push
xor
jecxz
cmpl
adc
scas
nop
aas
repz
or
in
inc
pop
add
fwait
cmp
je,pn
ss
inc
adc
mov
dec
out
clc
add
into
std
lcall
mov
out
mov
ljmp
fcompl
pop
pop
dec
push
adc
mov
add
cmc
popa
fistl
jl
inc
mov
lods
mov
ljmp
xor
fs
mov
mov
mov
out
sbb
sarb
push
xor
adc
cmp
sbb
xor
dec
inc
push
inc
push
loopne
push
outsl
cld
stos
scas
icebp
sbb
loope
inc
pop
and
jnp
aad
push
fsubl
adc
jno
cltd
dec
jmp
or
rorb
mov
cmc
add
cmp
test
fisttpl
popw
sbb
inc
push
fstps
add
xchg
and
jl
xor
mov
pop
pop
loope
sub
mov
push
pop
pop
call
insl
outsl
mov
and
je
mov
int
aaa
dec
sbb
inc
mov
or
mulb
sbb
inc
rorl
out
push
jp
adc
push
inc
mov
int3
mov
fcoms
sub
xchg
xchg
insl
mov
in
fnsave
mov
mov
pop
mov
mov
jge
dec
add
in
ret
loope
pop
sbb
test
or
in
jo
xchg
orl
ss
jno
xchg
xor
fstl
in
inc
stos
add
mov
sarl
out
mov
das
or
leave
mov
mov
pop
adc
mov
and
mov
ret
or
adc
ss
xor
ljmp
fstl
and
and
push
dec
lock
cwtl
je
xchg
dec
call
mov
sarl
sub
fildl
or
icebp
jge
xchg
xorb
test
movsl
test
push
and
mov
cvtps2pi
mov
cli
outsb
xchg
adc
xchg
sbb
js
pusha
int3
insb
lock
aaa
mov
dec
leave
and
jle
daa
xor
call
mov
dec
pusha
inc
mov
arpl
lock
adc
clc
push
mov
insl
add
and
scas
nop
decl
and
sarb
ffreep
jle
nop
jne
cmp
test
out
cmp
and
adcl
and
nop
loope
mov
into
xchg
lods
mov
mov
sub
mov
nop
mov
inc
fs
cwtl
lcall
inc
ja
sub
fcoms
lods
bound
sbb
call
pop
jg
xor
mov
cmc
add
or
out
fidivrl
ficoml
aad
mov
stos
or
inc
push
xor
ja
ja
adc
sbb
mov
dec
ret
inc
int3
mov
subb
faddl
aad
testb
js
das
jl
shl
lret
dec
push
in
call
or
and
and
fidivs
adc
jbe
jl
cmc
pop
out
jmp
ja
scas
int
jo
imul
dec
cs
mov
xchg
mov
and
xor
lock
or
enter
mov
inc
mov
pop
push
pop
movb
mov
pop
jno
add
in
mov
add
jmp
test
loop
outsb
lcall
enter
inc
pop
aaa
push
imul
jae
test
or
and
cli
in
pusha
add
scas
pop
mov
dec
jge
sti
add
outsl
lods
xchg
insw
in
mov
or
adcb
xchg
loopne
fmulp
sub
sbb
scas
sbb
add
filds
jns
rorl
and
arpl
scas
pop
dec
rcrl
mov
stos
cs
adc
mov
sub
cmp
cmp
pop
pop
mov
inc
inc
leave
movsb
data16
test
xchg
push
dec
pop
mov
nop
pushf
ljmp
cli
rcr
fcoml
lds
xor
call
push
sub
cmp
sbb
inc
xchg
mov
hlt
adc
js
jg
inc
jge
sub
mov
test
test
mov
idivl
iret
mov
mov
mov
xchg
jmp
cmp
cs
out
add
ds
mov
xor
popf
dec
icebp
lock
jl
pop
fdivl
push
je
inc
loop
cmc
and
pusha
test
jbe
std
jbe
dec
or
dec
daa
adc
jns
repz
or
and
outsl
je
mov
pop
insb
test
das
bound
mov
push
inc
adc
cld
outsl
ffree
pop
inc
popl
adc
mov
je
clc
js
scas
xchg
mov
mov
ret
push
loop
fwait
lods
fimuls
into
inc
inc
sub
cs
mov
inc
cmp
loope
and
adc
loopne
jg
inc
leave
arpl
dec
popa
adc
add
outsb
aaa
push
add
dec
stos
gs
push
insl
mov
aad
jb
xlat
ljmp
jb
lea
insb
mov
xchg
xchg
lock
add
pop
pop
push
mov
js
adc
movsb
test
jae
jg
loop
or
xor
pop
sbb
movsb
cmp
mov
test
das
xorb
and
xor
fwait
pop
sub
xchg
into
lret
dec
xchg
xchg
orb
lcall
mov
aaa
fnstsw
xchg
and
jg
lret
outsb
jg
loope
insb
sbb
dec
mov
mov
push
mov
int
clc
sbb
mov
out
add
fildl
les
jb
mov
incl
lret
jmp
mov
testl
cmp
adc
dec
rcrl
mov
add
out
cmp
pop
pop
stc
dec
lods
lret
sti
inc
xchg
jo
inc
sbbl
js
cwtl
xchg
or
add
xchg
dec
fstp
mov
push
cmp
cmp
xlat
fildll
pop
rol
xor
pop
stos
cmpsl
out
fs
xor
sbb
ss
or
fbld
mov
xchg
sti
movsl
sbb
cmpl
inc
icebp
clc
out
xchg
ret
lods
jle
dec
lret
lods
xlat
in
movsl
mov
nop
lods
xchg
int
fdiv
add
and
mov
cwtl
or
icebp
test
lret
cmp
lods
clc
addr16
mov
hlt
testl
je
or
lcall
das
sarb
or
jl
adc
shr
sbb
xchg
xchg
addl
adc
rcrb
shll
rclb
sbb
ret
xchg
insl
jl
adcl
push
enter
sbb
ret
push
sub
xchg
sub
lcall
inc
mov
dec
pop
mov
inc
push
cmpsb
mov
lret
sbb
mov
cmc
adc
add
push
movl
push
outsl
inc
pop
loopne
or
std
dec
lcall
cmp
clc
mov
dec
sbb
xor
xor
pop
test
xlat
lock
add
pusha
cltd
or
sahf
sbb
daa
mov
loop
sub
test
mov
mov
jbe
xchg
jns
clc
xchg
incl
ljmp
movsl
dec
ret
xor
and
sbb
cmp
sbb
std
pushf
jno
add
mov
movsl
lret
nop
add
or
rolb
jmp
inc
arpl
push
adcl
xchg
jns
jecxz
subb
mov
cmp
and
or
cmp
push
std
out
or
enter
xor
enter
stos
inc
decl
test
out
jbe
and
mov
shll
or
decl
cmp
mov
loop
ds
add
mov
or
ret
test
fidivs
or
mov
ljmp
repz
adc
adc
loopne
les
sub
es
fwait
ret
sbb
mov
cs
shlb
jg
stos
test
mov
roll
int3
adc
lea
cli
push
pop
mov
test
or
adc
inc
insl
jecxz
inc
mov
pop
js
movsb
into
adc
or
stos
push
arpl
xchg
pop
cli
xchg
and
xor
ficoms
std
push
rcl
lret
addr16
nop
rol
cmp
icebp
lcall
and
shl
outsl
sahf
fsubr
or
ret
fmul
add
aaa
mov
loopne
hlt
int3
fcomps
call
bound
repz
pop
and
mov
dec
lods
sub
decb
mov
sub
fisttpll
xchg
adc
xor
popa
or
jg
mov
stos
sbb
pusha
mov
loopne
inc
dec
cmp
pop
mov
cmp
or
mov
cmp
pop
adc
dec
clc
into
add
pop
movsl
hlt
cmp
out
mov
aas
and
sbb
xchg
lock
mov
ds
fs
rcll
cld
cmpl
sub
mov
js
in
fwait
pop
les
test
fstpl
xchg
jge
jmp
lcall
js
adc
adc
jnp
sbb
adc
pop
or
lcall
scas
dec
hlt
rclb
in
fs
push
pop
and
fisttps
pop
popa
xor
xchg
and
popa
or
mov
movb
out
test
mov
fs
jle
push
addr16
hlt
lods
outsb
inc
test
fcoms
pop
cmc
pop
mov
add
sbb
mov
cld
sub
jne
cld
scas
ljmp
sbb
push
mov
outsl
push
xor
push
mov
push
and
lahf
push
in
push
sbb
add
jle
sub
mov
loope
lock
dec
cmp
adc
pusha
mov
jne
push
sub
stos
pop
mov
lahf
lahf
mov
sbb
jns
add
add
or
adc
mov
mov
jbe
mov
pop
xchg
cld
lea
ret
mov
jg
push
loop
push
push
push
cmc
mov
add
add
je
mov
mov
or
push
rorl
aam
stos
dec
cmc
mov
inc
mov
pop
or
cltd
sarb
jae
push
sub
cmp
adc
lods
jbe
pusha
fisubl
call
out
call
jg
sarl
movl
sub
rorl
mov
sar
loope
es
inc
dec
pop
add
ret
rcr
sub
shlb
rorl
mov
dec
out
jg
movsl
js
addb
dec
jo
test
pop
cli
pop
adc
inc
sub
ret
push
mov
lods
push
mov
inc
outsb
or
test
outsb
jno
mov
scas
push
jne
addr16
out
movsl
cmp
inc
push
ss
xchg
adc
comiss
lret
push
push
bound
mov
sti
adc
push
leave
lock
sub
rclb
jne
notl
sub
idivb
call
add
jg
dec
cmp
dec
sub
inc
movb
mov
or
ljmp
fs
jmp
or
mov
fs
cmp
jg
mov
push
cs
pop
jp
out
push
xchg
scas
cli
outsl
mov
mov
adc
addr16
fbstp
fcompl
nop
and
xchg
movsb
fs
jnp
mov
push
dec
das
sti
xor
pop
ja
push
clc
out
adc
cmc
jne
mov
push
rol
arpl
ljmp
lock
es
push
jg
ret
add
mov
cmp
sub
or
xor
test
lods
push
push
out
pushf
inc
gs
fwait
adc
stc
je
xchg
imul
insb
into
xor
out
xor
push
enter
lahf
sbb
ficoml
add
inc
mov
mov
jmp
ret
out
xchg
push
mov
imul
cmp
stos
push
rolb
xchg
inc
and
pop
adc
aaa
clc
cmp
pop
repz
add
xchg
jb
shr
push
mov
jb
ja
push
decl
xlat
jg
ljmp
repz
cli
mov
pop
xor
pop
mov
sbb
adc
cmp
fwait
pop
in
repnz
mov
cs
shll
inc
or
rclb
jno
fwait
xor
push
or
mov
push
or
loope
loope
stos
jle
bound
or
dec
inc
lcall
adc
outsl
sbb
lds
sahf
mov
jne
aad
jbe
adc
int3
stos
and
push
mov
add
fiaddl
jne
or
dec
shr
std
jg
je
add
pop
sbb
inc
subb
test
push
loop
hlt
push
pop
jnp
cs
mov
test
je
mov
xchg
sbb
outsl
add
popfw
rol
add
adc
sti
or
ficomps
and
and
inc
das
lret
stos
jo
ret
out
int3
add
cmp
das
cld
dec
and
add
repnz
fwait
or
push
lods
call
mov
movsb
lret
aad
das
inc
or
dec
mov
jle
ljmp
jl
movsl
pop
lcall
ljmp
cmp
out
sbb
mov
stos
sub
xor
jg
divl
sbb
dec
mov
sbb
push
push
pusha
jmp
nop
rorl
and
push
xor
fs
xor
adc
ds
int3
in
lcall
insl
and
cld
aaa
and
hlt
adc
mov
adc
add
fwait
test
and
ljmp
in
jmp
ret
ret
push
mov
hlt
mov
and
and
mov
insl
add
push
sub
loope
mov
enter
add
sub
repz
daa
mov
and
lcall
in
mov
gs
push
mov
cli
xlat
jae
mov
xchg
cwtl
cli
jecxz
mov
loopne
jbe
nop
sub
outsb
iret
cmpsl
sub
cmpsl
orb
jbe
repnz
xchg
inc
add
lret
inc
paddd
loop
mov
sbb
arpl
push
sti
pop
sub
mov
push
jae
add
addb
daa
mov
mov
pop
mov
add
mov
or
int3
mov
mov
pop
shll
jg
mov
fbld
pop
or
repnz
std
sbb
cld
add
icebp
shl
pop
icebp
xor
pop
mov
mov
dec
cli
pop
cmpsl
test
xchg
aad
lods
jns
inc
pop
mov
pop
fsubr
ret
pop
xchg
mov
lret
mov
jae
mov
pusha
or
mov
or
shlb
dec
push
or
mov
sbb
or
enter
dec
mov
cmpsb
mov
test
orb
shrl
fldl
clc
incl
adc
adc
sbb
mov
loopne
outsb
fadd
ja
add
adcl
call
mov
mov
pop
jg
cmp
mov
cmp
mov
jns
jne
mov
push
insl
inc
sub
mov
or
mov
cmpb
ficoms
pop
mov
call
andb
aas
jp
xchg
cmpsb
pop
roll
jp
inc
adc
jae
cld
xor
xchg
sarb
adc
mov
lret
jp
add
inc
hlt
cmp
mov
push
mov
sub
mov
outsb
xchg
lods
rep
out
pop
add
mov
rclb
lds
ds
jg
dec
lock
inc
xlat
fwait
push
mov
dec
outsl
cld
clc
nop
xchg
lea
out
enter
shlb
dec
xor
mov
jecxz
pop
lret
rcll
sbb
push
sarb
or
push
insl
mov
lods
std
push
push
dec
sbb
push
mov
xor
lahf
adc
mov
xor
mov
cld
adc
jl
out
dec
es
test
mov
jecxz
dec
repz
cmp
push
ret
subl
cld
pmullw
popf
xor
icebp
cltd
adcb
pmaddwd
pop
enter
fisubl
mov
lods
inc
jle
popa
stos
or
ds
add
add
test
jne
jo
mov
xchg
addr16
and
cwtl
insb
mov
inc
sbb
mov
int3
xorl
pop
mov
and
loop
loop
daa
mov
push
inc
cwtl
or
dec
subb
fwait
jge
jmp
jg
and
mov
aas
sbb
and
lods
in
fistpl
call
adc
and
sbb
outsl
sar
addl
or
imul
int3
aaa
out
shrl
lds
sbb
push
and
dec
lock
orb
pop
mov
sub
popa
scas
scas
jge
mov
mov
or
es
lods
shr
xor
sub
sub
pop
mov
cli
push
sbb
jl
sbb
ljmp
jg
negb
lods
idiv
xor
lcall
int
sbb
pop
js
fnstcw
or
call
popf
stos
imul
mov
pop
mov
xlat
aas
movl
ja
and
shll
mov
mov
loop
mov
icebp
fucomip
repz
mov
notb
hlt
xchg
pop
jp
movsl
inc
mov
cmp
jmp
fnstsw
cwtl
sbb
xor
push
mov
inc
add
push
ljmp
loope
andb
inc
mov
dec
hlt
shll
xchg
clc
mov
or
sub
lock
icebp
out
or
ret
loopne
icebp
das
push
js
sub
mov
adc
in
push
or
sbb
out
mov
mov
xor
test
clc
and
sub
add
sbb
je
mov
inc
or
mov
or
or
cmp
js
inc
mov
jb
mov
and
fsubrl
cmp
xchg
pop
sbb
out
js
rclb
mov
fsts
push
dec
jb
xorl
sti
insl
mov
outsl
xchg
inc
lea
push
or
lea
pop
lahf
mov
jo
jge
cltd
repz
cltd
inc
movups
test
adc
cmp
incl
sbbl
rcrl
pop
fwait
in
cmp
adcb
add
pop
ja
in
scas
dec
fcoml
sahf
mov
fbld
dec
int
sbb
fists
inc
icebp
jg
pop
mov
dec
jns
mov
cmp
adc
lcall
ret
adc
call
push
jg
lods
std
add
xchg
jbe
mov
push
js
aad
int
ret
outsl
or
pop
fistpl
aad
std
outsl
shr
imul
add
mov
xchg
iret
int3
ret
jg
pop
adc
out
ds
xor
lock
inc
sbb
or
insl
cli
jl
xchg
lret
push
fs
ljmp
popl
jg
rorl
sub
jb
or
or
loopne
in
jmp
or
push
ret
pusha
mov
inc
dec
shrl
sbb
and
test
cld
and
and
xor
or
pop
lods
outsl
cmp
addr16
adc
jae
aad
inc
rclb
mov
add
push
or
cvtps2pd
pushl
cmp
mov
ss
dec
cmpsl
adc
sub
dec
decl
push
xchg
into
aad
push
sub
xor
std
jb
mov
mov
mov
mov
ja
in
dec
or
pop
adc
push
fimull
push
loope
pop
jnp
mov
js
or
sub
inc
mov
loop
cmpsb
inc
mov
xchg
sbb
cwtl
pop
lret
sub
mov
pop
push
ss
pop
jecxz
adc
adc
aaa
pop
jg
inc
cmp
in
pop
sbb
mov
addl
push
mov
push
fdivr
xor
js
js
sahf
out
mov
gs
sbb
inc
stos
fbld
mov
cs
cmp
jo
cmp
sbb
loopne
cli
arpl
mov
out
div
sbb
mov
and
lcall
pop
push
stos
pushf
mov
push
jne
jp
xchg
flds
fidivl
cmp
xchg
or
pop
pop
cmpsb
js
movsl
jbe
dec
enter
cltd
or
call
decl
out
ljmp
arpl
dec
mov
sbb
mov
loope
jno
sbb
clc
pop
or
in
mov
xor
lock
push
sub
nop
pop
jne
cld
call
mov
mov
jl
dec
fistpll
fsubrs
scas
pop
sahf
das
jl
pop
mov
mov
pushl
sbb
sub
andb
int
ja
add
mov
lods
loopnew
imul
xchg
jle
or
dec
mov
sbb
cld
leave
sbbl
add
xchg
dec
lret
xchg
xchg
hlt
and
mov
in
pop
fists
mov
sbb
and
cli
jge
jle
pop
pusha
cwtl
cmp
sahf
mov
pop
cli
shlb
in
jb
mov
data16
andb
xchg
lret
leave
inc
or
pushl
aad
cltd
cmpsb
call
inc
loopne
xor
adc
cmp
loope
xor
or
cmpsb
pop
inc
decl
add
ja
adc
and
pushl
movsb
jno
orb
and
push
addr16
jnp
outsb
mov
jne
lfs
popf
outsl
stos
jb
stos
adc
lcall
test
orb
cmc
pushl
lock
cmp
sarb
out
or
lea
and
decl
loopne
ret
divb
stc
ds
ret
loop
cltd
inc
or
fs
call
cli
jg
ffreep
outsl
stos
inc
dec
sub
add
shr
lcall
mov
fidivrs
shrb
sbb
or
arpl
cmpsl
adc
clc
bound
push
fwait
sbb
push
jbe
iret
add
and
add
add
adc
xorl
call
out
popa
arpl
pushf
push
fcoml
out
push
push
enter
pop
scas
xor
add
jne
push
das
lcall
push
add
xor
adc
aam
pushf
cmp
mov
cli
mov
dec
push
popa
adc
push
inc
adc
insb
jmp
mov
sarb
mov
neg
push
addb
out
imull
push
outsl
add
shll
mov
sub
leave
or
xor
and
add
insl
jg
incl
scas
mov
dec
les
sahf
add
add
stos
jecxz
pop
shl
fildll
ret
jne
push
push
mov
or
rep
in
pop
ret
hlt
sar
mov
sub
push
sub
jmp
and
mov
jae
je
jo
adc
cmp
popa
aad
outsb
sub
inc
arpl
fucom
cmp
decl
stos
adc
mov
inc
adc
clc
add
lea
repz
adc
stos
lods
xor
xchg
lock
lods
in
das
std
mov
mov
cmpsb
cmp
or
adc
in
adc
mov
int
data16
gs
loopne
mov
fucomip
mov
jb
cmp
rorl
mov
adc
pop
clc
jg
inc
inc
shlb
pop
imul
sbb
xlat
sbb
xor
sbb
dec
stos
dec
jo
pop
loopne
dec
push
out
jmp
jp
adc
jg
mov
icebp
sub
stc
hlt
test
mov
test
in
lcall
cwtl
mov
fildll
adc
or
popa
inc
lods
in
clc
push
pushf
sbb
shlb
jmp
sub
rolb
xchg
push
divb
cmp
lods
mov
cltd
mov
mov
lock
inc
jno
cmp
dec
add
or
shrl
mov
add
xchg
jmp
insl
xor
daa
andl
ret
jl
adc
fistpll
adc
inc
inc
popl
movq
jl
xchg
insb
clc
pop
cmpb
bound
cmp
lock
fs
lock
in
lcall
inc
pop
mov
and
sub
outsl
aas
nop
mov
adc
pusha
ret
mov
or
sti
cmp
jle
out
and
les
fisubrs
xchg
jmp
sub
add
and
jp
cld
adc
js
imul
mov
stos
pop
rcll
shll
add
jmp
dec
ljmp
cmp
xor
push
cmp
dec
and
xchg
cwtl
stos
subl
mov
imul
ret
aad
notb
pop
ljmp
xchg
fs
and
test
scas
icebp
rol
pop
mov
sub
xor
jb
test
std
clc
leave
loopne
outsl
hlt
jg
push
inc
push
dec
hlt
mov
jbe
in
inc
popa
and
das
pusha
clc
or
mov
sti
aam
ret
jo
add
cmpsb
adc
mov
in
sbb
outsb
pusha
pop
lahf
loope
mov
sub
jmp
inc
sbb
insb
pop
bswap
and
rorb
mov
jmp
mov
inc
mov
iret
push
or
mov
test
cs
xchg
mov
pop
popf
and
pusha
sbb
pop
nop
arpl
push
in
ss
iret
sub
mov
sbb
xchg
xchg
dec
inc
pop
jg
mov
pop
in
out
xor
out
push
xchg
loopne
cltd
andl
shrl
inc
cli
add
mov
leave
inc
mov
js
sbb
lods
fs
fadds
stc
sahf
es
dec
shr
mov
mov
inc
mov
or
mov
ret
xlat
xor
xor
adc
sub
ja
push
inc
pop
stos
fisttpl
pop
inc
mov
test
cli
cmp
sub
cs
xor
sub
or
call
std
jbe
pusha
or
or
lds
pop
sbb
loopew
lods
mov
push
inc
xor
je
int3
mov
mov
xor
js
imulb
lret
incl
cs
inc
xchg
call
std
adc
inc
mov
fxch
test
pop
das
or
mov
lret
xchg
push
mov
test
cmp
xchg
clc
andb
popf
mov
mov
aaa
pop
aas
xchg
cmp
call
mov
test
inc
popa
or
ja
mov
and
fisubl
hlt
pop
push
popf
mov
add
adc
rclb
ja
dec
jnp
push
inc
testl
call
out
stos
rol
fmul
cmpsl
and
cmc
xchg
xchg
dec
adc
imul
sbb
inc
and
add
sbb
adc
ret
dec
adc
mov
cmp
int3
add
cmc
sbb
xchg
ljmp
add
mov
add
pop
mov
jg
dec
hlt
js
lcall
and
inc
fildl
aas
loopne
call
pop
sub
sbb
mov
cmpl
add
stos
insl
pop
insl
std
mov
aas
xchg
fs
fwait
popa
rclb
mov
mov
mov
insb
jne
cmpsb
push
enter
cmp
xchg
clc
push
lock
lods
and
leave
or
aas
rcr
jmp
cmpsl
xchg
movsl
stos
dec
add
test
mov
lock
mov
test
jp
push
or
mov
xor
mov
loope
fadd
cmp
adc
pop
dec
mov
pop
loope
mov
aaa
cwtl
jnp
shll
xlat
sub
or
das
std
insl
cwtl
aas
push
mov
cmc
lret
sub
aam
fwait
pop
popa
add
popa
mov
imul
fnstsw
test
repnz
adc
adc
pop
cmc
jmp
xchg
jmp
and
push
inc
std
js
sahf
pop
xor
xor
incl
sbb
jns
mov
paddsw
mov
std
or
in
dec
sti
xor
and
aas
in
push
in
add
les
sub
mov
stc
cmp
mov
enter
nop
xchg
adc
push
sub
pop
inc
mov
jle
or
mov
pop
mov
ljmp
xchg
lret
incl
rcrb
aas
push
out
adc
icebp
push
push
sbb
cmp
addb
inc
xchg
cmpsl
mov
inc
jns
cmp
adc
outsb
xchg
xor
add
adc
mov
in
bound
outsb
or
test
jnp
push
pushl
lea
in
adc
imul
xor
or
cli
popa
dec
cmp
add
inc
test
cmp
les
push
pop
ficoml
mov
insl
mov
mov
gs
mov
mov
into
cmp
cltd
cld
out
dec
xor
xchg
jle
mov
inc
incl
cmp
aas
das
psubsb
ljmp
push
pop
push
jle
add
les
mov
and
xchg
aas
and
fcmovb
add
and
or
aaa
pop
or
mov
hlt
push
xchg
test
lea
and
inc
test
bound
mov
mov
add
cli
inc
aam
push
dec
pushf
ljmp
xchg
sub
in
mov
call
jle
mov
sbbb
int3
ljmp
mulb
or
mov
ds
inc
in
add
outsb
fsubl
xor
nop
pop
hlt
scas
or
out
and
jb
mov
inc
sarl
mov
mov
sbb
sbb
mov
les
das
aad
sahf
mov
sbb
and
in
pop
mov
pop
lea
jno
push
add
adc
cmpsb
outsb
xor
lea
push
mov
sbb
mov
jg
lcall
and
xchg
fmul
or
lahf
cs
push
pop
and
mov
jg
adc
movsl
fcoms
popa
mov
enter
xchg
xchg
scas
cmc
mov
xchg
or
lcall
xor
lods
inc
dec
insl
cmp
les
sbb
insb
pop
fcmovu
mov
aad
mov
pop
test
sub
or
mov
or
adc
dec
adc
dec
adc
adc
incl
sbb
adc
mov
rcrb
fcompl
cs
mov
pop
aad
cmp
jge
or
add
inc
mov
fwait
pop
add
addl
pusha
nop
clc
movsl
mov
cmp
aad
lock
fbstp
iret
dec
cmp
fs
mov
xor
sbb
addl
std
or
xchg
fwait
xchg
sbb
rol
enter
ret
outsl
test
pop
in
mov
jl
mov
mov
cld
and
cmp
mov
movsl
mov
ja
mov
loopne
repnz
movsl
mov
xchg
pop
cs
into
jmp
cmp
mov
outsl
popf
in
les
inc
fwait
jne
mov
push
jnp
adc
adc
fcoml
add
mov
jmp
sub
loope
jge
ror
pushl
or
lea
call
or
pusha
adc
std
mov
les
test
insl
add
decl
push
push
aaa
std
sbb
cmp
popf
fldenv
hlt
js
cmp
mov
cli
adc
je
jo
push
cltd
xchg
jns
fs
sete
hlt
pop
cli
add
push
pop
sub
sbb
jbe
fs
mov
sbb
push
sbb
sub
dec
cmp
call
leave
or
or
aad
out
mov
call
mov
pop
xchg
in
mov
xorl
jge
sbb
cltd
sarb
add
pushf
daa
je
icebp
dec
and
stc
movsb
ret
jno
clc
inc
lods
adc
insb
in
sarb
sub
xor
cmp
clc
xchg
pushf
jmp
dec
mov
pop
mov
mov
out
sub
jmp
iret
call
jbe
jmp
stos
mov
shlb
xchg
mov
and
ljmp
fisttpll
dec
push
dec
dec
filds
sarl
sar
and
mov
or
xchg
pop
add
dec
lret
push
jg
mov
enter
jge
ret
jecxz
dec
sbb
lret
fsts
jecxz
imul
add
clc
pushf
movsl
ret
push
int3
shlb
mov
pop
sbbl
inc
sbb
clc
dec
add
rcrl
xlat
xchg
call
inc
dec
popa
daa
aad
inc
fs
jmp
aaa
test
call
jp
xchg
mov
sub
loopne
arpl
outsl
je
js
push
sahf
in
loop
ss
or
sbb
std
push
aaa
jo
scas
or
inc
movsl
test
pop
ljmp
sbb
andl
mov
shlb
fdivrs
loop
pop
ret
inc
lret
sbb
fwait
add
lods
mov
xchg
mov
aas
fldenv
lods
test
test
sub
dec
and
sub
mov
xor
push
pop
mov
sub
fildl
cli
dec
test
add
cmp
dec
pop
mov
and
gs
call
jne
ret
jge
or
ljmp
cmp
movsb
lods
cmpsl
and
sub
cmp
popf
xchg
imul
jo
xchg
int3
stc
or
mov
inc
std
in
lods
incb
ja
mov
adc
sbb
mov
js
arpl
or
add
out
lds
push
pop
roll
call
add
push
data16
into
iret
dec
int3
in
xchg
push
add
sub
xchg
dec
adc
nop
cmp
or
or
test
xchg
insb
fisttps
cli
enter
adc
outsb
adc
xor
add
ljmp
test
cmp
aas
and
and
dec
and
push
sbb
or
push
push
test
orl
repz
pop
mov
sub
icebp
dec
inc
adc
adc
lret
push
in
mov
lods
jnp
cmp
jnp
and
xchg
xor
cmpsb
pop
stos
or
mov
sbb
mov
movsl
das
mov
mov
sahf
cmp
bound
xor
xchg
imul
in
xorb
jecxz
push
loope
hlt
outsl
gs
lret
xorb
xchg
call
mov
xor
add
cwtl
cmc
out
add
mov
cld
inc
cmp
pop
fsubrl
loopne
push
mov
lret
sub
xor
fdivrl
lret
sub
rcrl
pop
fstl
or
jge
pop
pop
mov
or
movsl
sub
fidivs
push
mov
pusha
jmp
inc
sbb
mov
jno
mov
sbb
hlt
jg
rcrb
mov
stos
outsb
js
clc
test
cmp
sub
xor
movsl
insl
fistl
mov
mov
push
cmc
dec
push
inc
fisttps
iret
fstpl
mov
lahf
push
mov
popa
sbb
shrb
mov
push
adc
or
dec
xchg
mov
sub
out
or
mov
and
mov
std
add
mov
fdivl
jg
es
mov
xor
cmpsb
imul
push
call
add
mov
sbb
jle
inc
xchg
out
fs
test
clc
mov
out
and
mov
jge
add
xchg
ds
xchg
xchg
pop
lods
xlat
stos
adc
jg
aam
push
cmc
adc
mov
fdivp
int3
add
or
cld
cmp
push
out
lret
loope
aad
push
inc
sbb
enter
scas
enter
ds
aas
cmc
mov
mov
test
sub
push
adc
push
push
ror
push
fidivl
pop
shrl
inc
mov
mov
ret
mov
inc
cmpsl
loope
lods
rcll
push
filds
ss
cld
ret
jns
fsubrl
rol
dec
inc
jmp
cmp
cwtl
in
dec
push
pop
xor
add
popf
int3
testb
adc
hlt
xchg
rclb
jl
test
outsl
aad
inc
cmp
push
outsl
mov
pushf
pop
or
movsb
xor
cwtl
out
and
mov
mov
clc
mov
incl
call
xchg
ja
outsb
mov
push
sub
push
jge
fistpll
mov
cmpb
and
loopne
call
test
cmpsb
fst
rolb
dec
test
sub
or
fstps
lea
call
loop
mov
outsb
sbb
movl
into
mov
xor
outsl
and
mov
sbbb
ficomps
mov
nop
lock
sbb
ljmp
enter
mov
pop
mov
lret
or
jne
in
mov
xchg
xchg
sbb
pusha
cld
jmp
aad
pop
cmp
sub
or
stos
jecxz
aaa
clc
das
jnp
and
cs
test
xchg
xlat
or
hlt
popa
pop
sbb
lcall
fsubs
jle
mov
icebp
cmp
push
mov
add
lods
lea
push
mov
stc
pop
cmc
pop
xchg
sbb
add
jns
ficoml
jbe
popf
in
mov
add
popa
addl
push
shlb
jge
loope
xor
xor
lret
iret
loop
loope
push
pop
hlt
push
imul
std
fwait
inc
adc
into
xchg
or
and
jl
add
clc
jne
mov
add
inc
fs
or
push
jmp
push
mov
cmpsl
ret
outsl
push
popl
push
push
push
xor
xor
push
loopne
pop
sbb
lods
sbb
decl
call
and
lret
fnstcw
inc
push
mov
fcomps
aad
hlt
int
dec
xchg
insb
in
pop
ficoms
add
popf
cli
jl
mov
mov
add
jbe
dec
lea
sbb
out
jne
fwait
loope
mov
mov
pushf
sbb
jge
addb
lods
je,pn
xchg
fs
call
jp
add
pop
and
insl
jbe
std
pop
int
jmp
sbbb
ljmp
sbbb
push
cmp
or
outsl
sub
mov
inc
xchg
mov
lea
insl
std
filds
ljmp
in
test
scas
cs
pop
mov
mov
call
sbb
push
stos
sbb
adc
rorb
mov
push
call
into
mov
xchg
dec
inc
stos
addr16
out
mov
into
je
sub
xchg
add
mov
sbb
adc
inc
sbb
inc
hlt
jnp
lea
loop
mov
ror
stc
lahf
add
call
adc
lret
push
icebp
aam
or
icebp
stos
jl
pop
sub
pushf
inc
lahf
out
int
lret
insl
push
int3
push
std
sbb
mul
hlt
fists
fstpl
push
jae
int3
nop
into
sbb
xchg
repz
mov
jecxz
cmc
ret
push
rcr
xor
inc
or
push
push
adc
sbb
adc
mov
add
push
mov
movl
xchg
mov
popa
adc
aad
xor
out
stos
pop
addb
dec
jmp
fwait
loopne
pop
adc
dec
data16
push
mov
or
pop
mov
sti
xor
imul
inc
push
es
mov
inc
inc
push
dec
dec
ljmp
adc
or
push
cld
pushl
fsubr
pop
mov
je
inc
mov
clc
adc
inc
push
dec
sub
inc
popa
stos
mov
sti
adc
or
mov
arpl
ret
mov
sub
fcmovbe
mov
jge
cs
mov
fdivl
mov
stos
mov
push
pop
sahf
mov
outsl
push
outsl
cs
xlat
adc
fwait
mov
dec
or
xchg
xor
cs
adc
out
or
ds
jae
in
or
in
das
and
dec
test
nop
mov
mov
pop
shl
lret
aam
mov
or
sbb
xor
mov
inc
jge
inc
add
rcrb
ja
mov
or
int3
ret
repz
ret
ss
fadds
xor
jmp
hlt
jl
loop
and
mov
sbb
xadd
gs
jno
inc
inc
pop
div
jnp,pn
xchg
mov
pop
sbbl
movsb
add
xor
daa
inc
dec
dec
push
out
sti
push
or
cli
sbb
sbb
gs
es
sbb
shll
incl
in
cmp
xchg
mov
jmp
mov
mov
sbb
addr16
ficomps
jmp
inc
pushf
in
mov
xchg
in
xor
pop
and
mov
mov
hlt
aaa
adc
sub
adcb
mov
fistpll
xchg
loopne
cwtl
aaa
mov
es
andb
arpl
int3
inc
mov
xor
lea
mov
test
mov
std
es
sub
and
loopne
enter
and
push
jb
ret
mov
aas
and
cmp
leave
frndint
mov
outsb
jl
cmp
lea
xchg
pop
clc
cmp
or
js
fdiv
mov
iret
and
mov
std
fcmovnbe
or
in
mov
out
jb
insl
call
gs
or
jg
shll
scas
push
push
xor
les
xor
jns
in
pop
or
pushf
and
push
inc
sub
out
aas
inc
movsb
pcmpgtd
dec
mull
mov
cmpsb
mov
jl
movsb
pop
enter
inc
aad
into
int
and
inc
push
cmp
loopne
cmc
pusha
dec
pop
ja
out
jmp
idiv
imulb
jbe
jle
daa
sbb
je
test
mov
mov
inc
jno
aas
xor
sbb
push
mov
push
sbb
movsl
adc
in
testb
or
cmp
push
cli
in
pusha
lret
push
bound
cmp
pushf
aad
pushl
stos
add
sbb
nop
out
rcll
and
or
and
aas
and
lds
or
jge
loope,pt
cmp
cld
pop
push
push
aad
fldl
add
dec
aad
lock
dec
lock
inc
sbb
stos
or
push
ret
mov
jl
inc
mov
faddl
bound
and
jnp
inc
mov
sub
adc
call
bound
xor
cmp
lods
icebp
pop
clc
push
bound
xor
arpl
cwtl
fcomps
mov
pop
stc
stc
jb
jg
clc
test
mov
and
dec
mov
mov
push
pop
fildll
sbb
lods
mull
sbb
push
xchg
push
dec
mov
dec
xor
lods
push
or
adc
push
mov
std
lock
std
push
cs
inc
jbe
inc
inc
les
lcall
stos
fsubrs
stos
pop
je
jns
dec
ljmp
pop
jbe
ljmp
cmp
loope
pop
stos
std
jbe
stos
xor
push
mov
loope
dec
push
pushf
add
inc
mov
add
ds
mov
mov
or
push
int3
out
adc
sahf
shrb
jmp
call
fbstp
mov
and
push
mov
sbb
sub
insb
mov
lahf
dec
pop
mov
push
stc
xor
jmp
mov
nop
negl
test
aad
adc
ljmp
mov
cmp
xor
dec
pop
pop
fwait
jp
xchg
xchg
lock
adc
jecxz
add
incl
decl
pop
or
loope
jb
cmp
rcll
dec
int3
out
mov
leave
stc
xor
mov
cmp
mov
cmpsb
mov
jmp
jmp
cwtl
js
push
sbbb
mov
inc
std
outsl
stos
push
dec
icebp
mov
pop
loope
mov
fldl
arpl
xchg
ljmp
ret
loope
xchg
bound
sub
sahf
cmp
jecxz
sbb
jbe
add
push
adcb
ljmp
je
lret
add
ret
jnp
mov
jecxz
in
jae
push
loop
mov
jg
sarb
mov
or
xchg
stos
shrl
adc
mulb
mov
sbb
fisttpll
aaa
mov
mov
mov
ds
jmp
leave
xor
nop
movsb
mov
dec
movb
mov
dec
add
mov
mov
push
push
ret
jmp
and
xor
lea
lods
es
mov
movsl
lcall
pop
push
das
cmp
sbb
inc
and
std
jmp
xchg
clc
test
pop
inc
mov
pop
or
sub
sbb
seta
lcall
aam
sbb
dec
mov
lcall
cmc
dec
je
mov
jns
into
cwtl
test
mov
dec
test
pop
sahf
mov
in
mov
pop
fimull
pop
sbb
aad
cmp
imul
outsl
and
sub
stos
sub
jno
mov
push
pop
sub
ficoml
mov
imul
outsl
mov
cwtl
js
je
sbb
daa
pop
inc
pop
ss
push
loopne
xor
cmp
cld
pop
push
mov
xchg
jle
mov
mov
arpl
adc
mov
push
inc
stos
fistpl
int
int
adc
mov
outsb
or
push
mov
ja
rcll
xchg
add
fldl
imul
out
lcall
test
cmp
into
jle
jg
add
and
sbb
dec
jge
testb
outsl
dec
ss
adc
xchg
mov
test
pop
xchg
sbb
sbbb
cmpsl
clc
dec
push
sub
add
rclb
jmp
add
mov
inc
cmp
jecxz
fsubrl
cltd
call
icebp
mov
or
cmpb
or
jbe
lods
bound
sub
xor
xlat
jp
inc
xor
mov
and
jb
in
pop
dec
icebp
call
notl
dec
cmovo
sub
arpl
adc
fsts
push
insb
jg
mov
xchg
rorb
rcll
imul
movsb
jbe
cmp
js
pushf
imul
mov
and
or
scas
aaa
arpl
loopne
jmp
sub
std
andb
adc
cltd
inc
push
cmp
xchg
sub
pop
lock
mov
sub
jle
mov
add
jp
inc
pop
xor
ss
adc
test
mov
cmpsb
adc
cs
scas
pop
clc
lahf
or
inc
cmp
bound
aad
shl
sub
xchg
and
pop
fisubs
mov
sbb
push
push
jnp
adc
inc
fstpt
test
lds
jg
cmp
mov
decb
push
lret
out
std
inc
cmp
subl
movsl
cmp
loopne
jo
shrb
int3
inc
inc
jne
aam
and
mov
je
mov
adc
lahf
mov
mov
in
or
fxch
adc
ljmp
repnz
jl
push
testl
dec
cmp
pop
sbb
aaa
test
mov
insb
mov
sbb
rcr
stos
cwtl
pop
les
sahf
mov
lret
sbb
icebp
notb
mov
dec
movsb
and
into
add
mov
lcall
popl
or
fs
xchg
jp
jnp
add
push
and
je
or
push
fucomip
xor
aas
pop
xchg
lcall
push
out
inc
out
mov
push
pop
int3
movsl
mov
mov
xchg
pop
shrb
fnsave
insl
loope
jnp
ljmp
xchg
fs
cmp
xchg
je
iret
ljmp
in
jmp
xchg
jecxz
sub
pop
dec
mov
outsl
stos
mov
pop
push
sbb
jp
lods
or
aas
sbb
movb
out
call
dec
repnz
push
ss
cmpsb
jo
add
jne
xor
xor
push
inc
sub
clc
pushl
sahf
pop
test
in
sub
cmc
fists
sub
mov
pop
mov
pushf
mov
inc
pop
clc
mov
pop
in
pop
xlat
test
rolb
call
frstor
popa
insb
insb
std
push
jb
and
inc
or
aaa
insl
ja
pop
icebp
cmp
repz
or
and
cmpl
leave
stc
fistpll
insl
out
pop
adc
or
mov
mov
mov
inc
cltd
fdiv
push
bound
mov
xchg
cmpsb
xor
xor
test
movb
pop
sub
mov
lahf
sub
mov
imulb
sti
stos
jg
xchg
xlat
cmp
adc
mov
pop
icebp
pushl
xchg
xchg
inc
sbb
and
sahf
arpl
jg
pusha
clc
inc
outsb
cmp
add
push
dec
scas
jns
movsl
lcall
xchg
std
add
cmp
ret
idiv
in
lcall
mov
in
adc
pushf
ljmp
clc
in
ds
call
rol
das
add
sub
or
inc
push
ret
xchg
addr16
pushf
lcall
jae
add
and
popa
mov
xor
mov
mov
cmc
push
jne
cmp
enter
and
inc
xchg
inc
daa
into
clc
daa
popa
negl
jno
push
push
and
cld
add
orl
pusha
pushf
inc
dec
arpl
dec
inc
das
das
scas
frstor
jle
pop
pusha
jmp
iret
xor
shr
xchg
imul
cmp
cmp
sbb
push
les
stos
jecxz
or
mov
mov
cmp
out
sub
push
jnp
inc
shrl
cld
or
es
and
daa
cmpb
push
jg
std
mov
mov
daa
mov
inc
scas
sub
mov
add
mov
inc
popf
xor
cmpsl
push
push
lret
dec
dec
rclb
cmp
stc
out
inc
cld
mov
nop
pop
sbb
lcall
mov
jle
inc
sub
xchg
mov
mov
pop
aas
outsl
mov
outsb
sahf
aas
lods
push
bound
roll
rcrl
mov
jbe
jp
les
insl
pop
orl
ret
insb
test
inc
fdivs
or
enter
nop
xchg
xorl
inc
test
jg
fistpll
jp
push
and
cmpsb
jle
mov
ret
adc
cltd
enter
les
cmp
popf
sub
jne
dec
and
xchg
adc
xor
outsb
mov
ja
pop
nop
jns
mov
or
scas
jb
xchg
lock
sub
imul
popa
in
movsl
push
pop
sub
push
inc
aaa
inc
lods
ret
pop
pop
inc
inc
js
repnz
dec
pop
jnp
adc
jnp
pop
jmp
pusha
out
stos
xor
cmpsl
push
cwtl
mov
and
sub
rolb
loop
fnstsw
lcall
jbe
push
lds
in
lcall
mov
push
shll
mov
pop
inc
int
jne
clc
adc
ds
mov
loop
adcl
je
outsb
sbbb
in
testl
dec
jg
and
lahf
pop
daa
jo
fidivl
sub
int
les
pusha
jmp
xchg
std
cld
adc
testl
outsb
push
and
jecxz
shlb
or
inc
rcr
add
lret
mov
adc
negl
pop
mov
out
mov
add
std
or
out
sub
jne
mov
xor
bound
xchg
arpl
jb
enter
clc
aaa
dec
adc
push
mov
test
ljmp
outsl
sub
into
jmp
es
and
add
dec
push
push
mov
sbb
xchg
mov
shlb
adc
jp
data16
icebp
mov
mov
push
adc
sub
mov
pop
jg
das
movsb
int3
clc
icebp
mov
add
or
js
enterw
pop
loope
jl
loope
pop
int3
pop
aad
adc
cwtl
orl
outsb
cld
rcrl
lock
add
sbb
pop
push
outsl
jbe,pn
fcomp
dec
in
sarl
inc
nop
mov
jp
test
out
lcall
xchg
jmp
inc
mov
movb
sub
adc
ds
xchg
lcall
fstpt
fcoms
lock
inc
fisubl
inc
pop
and
mov
add
fcoms
ljmp
fadds
test
xchg
lret
mov
stos
inc
ljmp
ja
cmp
imulb
fisttpl
and
je
or
cmpsb
lea
mov
ret
int
xor
pop
or
add
aad
inc
jmp
loopne
cmp
and
fistpl
sub
inc
add
bound
add
outsb
push
push
inc
add
lea
xor
popa
sbb
cmp
shll
jns
inc
jmp
xchg
xor
cmp
dec
pop
loop
or
clc
mov
out
or
mov
imul
pop
jp
jl
cmp
push
cmp
jecxz
insb
pop
arpl
scas
push
pop
push
mov
test
pop
arpl
test
stc
sub
pop
in
cltd
pop
and
xchg
xchg
sub
inc
adc
js
add
cmp
pop
outsl
adc
mov
sahf
in
lds
shrl
int
fldcw
mov
ret
incl
test
loopne
addr16
mov
adc
addl
dec
cli
push
push
mov
outsb
lock
cmp
jecxz
rorb
es
cmp
jo
jbe
fsubs
add
frstor
out
add
pushl
adc
or
mov
jl
push
dec
cmp
dec
xchg
inc
pushl
mov
sub
arpl
dec
inc
cmp
lods
mov
pusha
rclb
fimull
add
add
icebp
push
fcoms
mov
jb
and
shrl
lds
add
es
mov
sub
lods
jns
lods
sub
inc
mov
idivb
bnd
cmpsl
stos
or
push
mov
mov
pop
fsub
adc
pusha
int
adc
insb
fistpl
xchg
mov
cmp
mov
jmp
loop
and
pop
dec
lods
rcll
pop
in
pop
add
pop
xor
std
xchg
mov
dec
stos
fdivs
adc
mov
push
jecxz
popa
cltd
xchg
lods
repnz
ds
or
cli
xchg
ja
pop
or
fwait
push
xchg
jns
pusha
mov
pop
pusha
pushf
push
sub
cli
inc
fsubl
mov
jbe
add
shrb
jle
fiaddl
insl
aad
adc
pop
jno
adc
sbb
hlt
jne
hlt
call
add
and
push
mov
cmpsl
fisubrs
lahf
outsb
xchg
pop
lods
insl
test
inc
xchg
jl
outsl
sbb
filds
cmpsb
mov
cmpsl
test
sub
inc
mov
decl
cmp
lea
or
sub
loop
sbb
jnp
cmp
xchg
xchg
ss
jo
adcl
sti
aaa
test
pusha
sbb
or
ret
and
testl
aad
imulb
xchg
loope
scas
jg
xor
mov
inc
insl
jne
lea
mov
mov
aam
and
in
xchg
jmp
sbb
add
mov
aaa
push
inc
call
pop
out
aam
adc
pop
mov
mov
cmpsb
shll
clc
mov
pop
ficomps
pop
sahf
jl
push
lds
cmp
mov
adc
jg
mov
xchg
xor
mov
jmp
rcl
mov
mov
adc
jo
and
jle
xor
jg
outsb
je
js
scas
mov
mov
xlat
in
ja
leave
dec
xlat
shll
imul
clc
out
mov
adcb
add
cs
rorb
std
cmp
or
mov
repnz
add
adc
pop
and
test
push
push
push
lea
adc
mov
clc
loop
shlb
jg
xchg
int3
jg
mov
dec
lods
bound
push
scas
push
cmc
jmp
adc
ss
add
cmpsl
adc
or
sub
dec
lock
xlat
pop
pushf
dec
pop
test
push
insb
icebp
pop
fucomp
mov
daa
inc
stc
js
enter
add
cltd
jo
jle
sti
lret
fistpll
mov
or
inc
mov
cmc
test
cld
in
inc
scas
ret
stos
ljmp
cld
decl
mov
leave
adc
aad
imul
push
push
shrl
or
stc
cmp
add
stos
add
inc
les
jecxz
cmc
inc
pop
cltd
rcl
lods
sbb
movsl
call
jns
insb
mov
pop
cmc
push
shlb
dec
cmpsl
push
pop
movsl
mov
push
inc
jecxz
leave
sbb
out
sbb
loope
test
insb
or
stos
aaa
mov
dec
int3
xorb
jns
sbb
aaa
loop
inc
and
inc
xchg
addb
ds
out
dec
lret
cltd
jo
outsl
incl
jno
dec
push
outsl
lcall
mov
jg
xor
push
jmp
jecxz
xchg
xchg
cmc
mov
and
and
adc
xchg
ret
cmpsl
mov
outsl
insb
jmp
hlt
cmc
dec
add
mov
imul
mov
mov
pop
push
and
into
stos
jle
push
sbb
std
or
sub
push
add
out
sub
xchg
psubd
sub
dec
adc
test
jno
mov
insl
loope
int
pop
or
lret
mov
push
cmp
rcll
decb
inc
mov
das
inc
and
add
jbe
and
push
mov
aam
mov
enter
xchg
icebp
fcoml
sbb
pop
or
ss
out
cmpb
jo
add
mov
dec
mov
dec
adc
lds
sarb
inc
testl
test
or
js
pusha
inc
xchg
aas
jp
cwtl
fistpll
jg
dec
mov
nop
jle
cmc
insl
sub
push
push
xchg
push
cld
das
sarb
arpl
imul
sahf
and
mov
ljmp
mov
stos
xchg
call
pop
insl
ja
jge
inc
dec
mov
cmp
sbb
mov
cld
rorb
stos
xor
popa
cmovg
mov
iret
loopne
pop
fmull
ret
adc
fbld
jmp
add
sbbb
or
pop
cmp
sub
mov
movsb
imul
pop
aaa
sbb
adc
shll
fadds
outsb
mov
add
or
or
call
mov
aas
ds
mov
mov
adc
and
incl
cmc
push
cwtl
pop
jns
pop
xor
mov
pusha
imul
pusha
and
js
xor
xchg
jmp
mov
xor
jb
nop
and
ljmp
cld
lea
push
out
sub
fistl
inc
jecxz
or
lods
adc
fisttpl
sbb
hlt
loope
pop
adc
xor
lds
divb
xchg
cmp
xchg
dec
fidivs
js
les
int3
sbbb
add
in
popf
adc
xchg
dec
pop
mov
jne
and
xchg
xchg
mov
add
mov
imul
pop
sub
mov
test
rcll
xlat
ljmp
sbb
cmp
fs
inc
in
js
or
or
ja
pop
std
mov
idivl
scas
sub
daa
test
mov
mov
dec
cmp
jae
pop
cmp
cli
and
mov
jo
addb
xor
and
add
push
push
add
pushl
mov
push
in
movsb
and
sar
jmp
mov
pop
or
std
push
or
dec
jo
adc
lock
and
mov
xor
fwait
call
lods
pushf
fs
adc
mov
fsubl
test
xchg
push
mov
inc
adc
loopne
in
mov
icebp
test
inc
add
ficompl
add
mov
cmp
popl
mov
push
and
sti
push
pusha
jo
add
out
push
push
cli
push
or
addb
inc
push
lods
push
popl
sub
decl
jno
or
xchg
sbb
out
xor
decl
pop
mov
aam
repz
pop
subl
movb
movsl
pop
stos
and
mov
inc
add
push
mov
inc
xor
and
test
aad
mov
lahf
scas
inc
repz
lcall
mov
fsubrl
adc
inc
pop
fs
call
mov
clc
dec
popa
adc
rcrb
lahf
cmovb
iret
add
lcall
xlat
out
fsubr
lret
xchg
inc
in
rorb
das
xor
aam
mov
shl
pop
sub
pop
push
fcoml
ljmp
in
inc
aas
pushf
inc
and
inc
pop
je
dec
loopne
scas
or
cmc
push
jb
scas
sbb
std
add
decl
xor
inc
popa
movsl
jno
repz
stc
dec
mov
sub
fists
sbb
aad
into
mov
xor
inc
std
imul
jle
mov
mov
cmc
jne
mov
fwait
inc
adc
inc
xor
notb
out
mov
arpl
mov
and
cmpsl
xchg
adcb
mov
mov
leave
jno
test
movsl
lods
ret
or
adc
cmp
mov
sbb
push
int3
pop
out
push
dec
outsl
sbb
add
and
adcb
or
incl
sub
in
test
loop
rclb
out
adc
call
addl
add
and
pop
sbb
and
dec
inc
cmpsl
jg
fistpll
inc
fstpl
xchg
data16
aam
rcr
daa
and
push
pop
sbb
inc
and
mov
clc
outsl
icebp
sub
adc
push
xor
push
xchg
inc
rorl
das
enter
add
add
pop
hlt
xchg
and
or
loop
das
jno
inc
pop
mov
push
and
imul
dec
adc
pop
int
push
jae
call
js
pop
in
lds
sbb
in
imul
out
jecxz
sub
lock
cld
jl
jge
clc
adc
sbb
jge
fisttpl
lock
cltd
jle
adc
mov
aas
clc
filds
sub
jo
mov
cmp
fsubrs
pop
scas
ficompl
mov
cmc
push
sbb
xor
sub
shll
shll
fwait
sub
aam
sbb
inc
sbb
adc
loop
lcall
and
and
rclb
sti
movsl
mov
hlt
xchg
mov
inc
xchg
jecxz
aaa
mov
aas
adc
and
jmp
in
mov
insl
clc
jg
stos
lcall
pop
xchg
push
pop
pop
clc
adc
push
test
test
adc
inc
and
cli
idivb
inc
and
adc
dec
popa
push
pop
and
das
loope
pushf
fstpt
or
xchg
stos
xchg
sub
inc
daa
pushf
lods
decl
sahf
add
lahf
adc
mov
jmp
ljmp
xor
jbe
inc
jne
mov
push
nop
es
and
cmpsl
sbb
jne
adc
xor
mov
cltd
ret
mov
push
mov
or
iret
push
jge
cmp
call
adc
fsubr
mov
mov
jae
add
xchg
lret
cmp
outsl
pop
stos
stos
push
add
or
add
and
xor
push
and
or
xchg
dec
add
loope
inc
mov
add
push
sub
mov
jge
adc
mov
bnd
mov
mov
cld
xchg
sub
fldlg2
cmpsb
les
jne
dec
xorl
jp
mov
cmp
xchg
mov
add
push
cmc
cmpsl
add
les
xor
inc
mov
es
xor
mov
mov
aaa
push
outsl
inc
in
fidivrl
push
rcll
inc
fnstcw
mov
push
roll
adc
test
imul
repz
sub
adc
push
xor
movsb
dec
xor
test
aam
cld
cs
lcall
xchg
addr16
cmp
lds
aas
jl
lock
fs
outsl
incl
call
and
int3
mov
cmpsl
rcl
jb
bound
ljmp
add
push
cltd
inc
add
add
in
push
sti
mov
ljmp
adc
rolb
pop
test
aam
xor
in
push
inc
leave
adc
pop
decb
add
dec
cmp
cmp
mov
inc
pop
gs
mov
stos
lods
add
xor
ret
movsl
ret
adc
pop
and
pop
pop
dec
push
push
cmp
inc
lods
daa
daa
dec
je
xchg
mov
rcl
mov
sbb
xchg
xor
in
cmp
shlb
sbb
pop
cltd
icebp
inc
sbb
or
mov
jo
push
cmpsl
inc
or
insl
and
not
mov
inc
pop
lods
or
gs
mov
pop
mov
or
push
repz
inc
loope
mov
inc
popa
icebp
shr
push
cmp
imul
loope
leave
sbb
lcall
inc
je
mov
and
mov
jb,pn
mov
jle
cmp
dec
sti
fwait
das
fcmovnb
dec
ret
aas
test
inc
gs
mov
bound
call
nop
or
push
ds
fdivr
scas
idivb
and
jecxz
dec
add
ds
andb
pop
adc
xchg
xchg
push
cmp
mov
pop
scas
mov
jb
adc
in
dec
jae
jg
sbb
call
rcll
fs
xchg
iret
sub
mov
hlt
dec
add
pop
pusha
push
stc
outsl
out
sbb
xchg
sbb
cmpsb
lock
fldt
mov
sbb
inc
repnz
adc
dec
adc
mov
arpl
sar
stos
pop
cmpsl
addr16
pop
push
xchg
mov
enter
pusha
stc
or
mov
mov
out
or
adc
outsb
fisttpll
rolb
fisttpll
xor
aad
jecxz
notb
sbb
or
cld
sbb
pop
aam
call
jmp
add
sbb
call
call
push
ret
jecxz
icebp
push
sub
test
mov
clc
inc
sbb
jg
imul
push
sbb
cmp
mov
xor
push
xor
ljmp
push
xchg
sub
fisubrs
mov
out
add
sahf
test
lcall
das
inc
xor
dec
inc
pop
clc
ljmp
inc
pop
loopne
enter
adc
nop
into
es
lea
or
xchg
lock
or
test
or
out
cmc
pop
subl
add
and
test
ljmp
push
ffree
and
test
xchg
dec
std
pop
clc
pushf
data16
out
push
jo
xchg
rcl
add
insl
push
fs
stos
lcall
or
mov
dec
sub
inc
in
filds
pop
mov
fisubl
xchg
pop
ds
add
test
stos
mov
mov
mov
adc
jne
outsl
fdivr
cmpsb
xor
andb
add
mov
push
cltd
jp
clc
jbe
adc
pop
mov
xchg
cli
xor
pop
sub
and
mov
push
fldt
jno
add
mov
mov
aad
enter
push
mov
sub
std
xor
or
cmp
aaa
rorl
inc
sti
xchg
adc
add
in
enter
call
mov
mov
insl
lret
in
ret
push
sbb
leave
lret
dec
outsl
subb
inc
adc
int3
add
inc
and
cli
mov
add
popf
or
push
push
push
outsl
pop
inc
jge
lcall
xor
jb
test
cwtl
xor
lds
call
pop
jp
push
sbb
push
push
loopne
mov
adc
pop
mov
inc
mov
jmp
movsl
mov
je
test
push
mov
stc
int3
ss
das
xchg
mov
or
aaa
dec
ljmp
push
rolb
mov
outsl
ffreep
or
adc
loop
dec
adc
addr16
decb
lea
jns
call
adc
ret
cmp
sub
mov
cmp
adc
aam
mov
icebp
cmp
in
sbb
jmp
mov
js
add
in
or
push
repnz
cmpsb
in
cmp
jne,pt
push
sub
in
inc
cs
sbb
mov
and
jl
adc
test
movsb
xchg
out
scas
repnz
shlb
les
jle
push
cltd
incl
add
loope
cmpsb
mov
pop
or
or
push
adc
loope
loopne
lcall
lock
pop
out
cld
dec
mov
shlb
xchg
xchg
push
sbb
fdivr
das
rcrl
mov
fidivrs
cli
push
inc
push
clc
cmp
and
mov
mov
adc
push
loope
das
insb
push
add
pop
xor
adc
imul
mov
adc
aam
sti
ja
or
mov
ljmp
fldl
out
pop
xchg
sti
or
loop
mov
mov
loopne
aaa
fst
mov
jns
push
movsb
pop
lcall
ss
sti
pop
in
sub
mov
fdivr
or
sub
stos
mov
push
and
loope
adc
outsl
sbb
mov
scas
arpl
sub
pushl
std
jmp
lahf
pop
and
ret
jl
in
mov
jmp
cmp
push
stos
loop
add
stc
mov
xchg
fs
xchg
xchg
and
mov
mov
popa
sub
cld
pop
out
stos
popa
loope
jg
sahf
movsb
inc
cmpsb
or
mov
cmpsl
pop
xor
ret
mov
dec
adc
and
jp
mov
fistpll
mov
xchg
sarl
test
sub
mov
jne
sbb
dec
inc
mov
clc
pop
lcall
cli
ffreep
mov
sti
out
cwtl
mov
jne
and
push
pop
int
and
cmp
xor
jg
adc
adc
outsb
lock
pop
xchg
mov
gs
stos
or
cli
scas
or
sub
sub
jg
jle
jge
js
in
sbb
adc
ret
adc
mov
fidivrs
and
push
dec
in
pop
pop
loopne
aaa
mov
and
and
jg
mov
mov
add
cmp
push
cwtl
arpl
outsl
std
ja
mov
xchg
subb
jge
xchg
les
cmp
cmp
leave
orl
mov
pusha
outsb
fninit
sbb
test
pop
jmp
movsl
inc
arpl
push
aas
mov
aam
dec
jecxz
and
imul
fwait
dec
popf
sbb
movsl
sbb
inc
insl
xor
or
jg
xchg
and
and
and
aam
mov
fmull
insb
mov
jle
inc
in
incl
mov
jp
inc
incb
lahf
jge
adc
xor
fildll
xor
stc
into
xor
pop
and
aam
incl
das
loop
sbbl
aad
psraw
or
or
sbb
cli
outsl
pop
imull
xchg
sar
inc
add
cli
mov
push
fwait
cmp
stos
sbb
lock
dec
out
enter
inc
or
jg
dec
mov
sub
in
cmpsl
sub
aad
mov
push
add
stc
xor
inc
outsl
std
fucomip
decl
dec
bound
mov
xchg
mov
push
push
adcl
jmp
pop
jne
mov
add
xor
dec
pop
or
cmc
sbb
fadd
movsb
loopne
mov
movsb
cs
in
jg
test
xor
mov
adc
enter
movsl
mov
mov
insl
cmc
inc
sub
or
ja
add
test
dec
pop
xchg
push
pop
lods
lods
push
dec
mov
jb
test
xchg
xchg
in
test
inc
cmc
jg
push
outsb
mov
mov
movsl
hlt
sbb
test
jo
inc
movsl
xorb
enter
mov
ljmp
sbb
push
sub
add
test
rol
jmp
push
xchg
insb
sbb
sbb
out
cli
int3
rcl
or
shrb
in
inc
xor
ljmp
mov
pop
inc
mov
mov
dec
imul
fiaddl
xor
call
pop
sbb
inc
aad
imulb
sub
mov
xchg
xchg
push
cmp
jb
sar
push
pushl
in
sbb
call
sti
xchg
pop
addr16
and
cld
sbb
fs
rdtsc
cmp
loope
push
pop
cmp
cmp
xor
pop
and
inc
vmovlps
lods
xor
out
and
outsl
adc
add
jno
sti
jmp
call
addr16
lahf
stc
xchg
jb
add
mov
aad
in
pop
shll
scas
push
cmpsb
movsl
stos
push
aad
std
mov
xchg
cmpsb
addr16
in
xchg
rclb
inc
sahf
shll
ret
pop
sub
out
fs
sbb
incl
jb
pop
pop
bswap
push
sub
lock
loopne
je
clc
mov
dec
jo
push
or
mov
cwtl
in
mov
fucomip
in
cmp
loop
or
cmp
nop
fiadds
daa
shrl
inc
sar
mov
cli
outsl
cld
arpl
or
fbld
mov
test
insl
sar
mov
out
mov
insl
mov
popf
inc
push
imul
push
mov
pop
sub
ss
or
jle
dec
adc
mov
sub
jmp
push
jae
fldt
rcrb
xchg
dec
dec
fbld
test
cmc
aaa
xor
fmull
pop
mov
xchg
xchg
mov
ljmp
outsl
xchg
cmp
push
push
sbb
shll
dec
mov
cld
jmp
insb
sub
hlt
mov
stos
outsb
aad
pop
cmp
sbb
push
out
pop
add
cli
and
sbb
xchg
insl
mov
in
incl
subl
sbb
imul
faddp
inc
sbb
push
pop
mov
push
clc
jae
inc
add
nop
push
cld
aam
pop
call
pop
xchg
lods
pop
clc
push
bound
mov
inc
mov
andl
into
mov
mov
cmp
jns
jg
xor
sub
lea
call
test
pop
sub
test
mov
adcb
test
lcall
adc
imul
movsl
rol
jae
dec
cld
lcall
sbb
adc
xlat
nop
popf
adc
jge
jns
sub
or
test
push
cmpsl
aam
xor
and
xchg
insl
cmp
sub
ljmp
or
push
sbb
and
btc
mov
jno
in
pop
rol
xchg
mov
adc
cmp
imul
ljmp
imul
jae
dec
idiv
or
daa
or
mov
add
scas
int3
push
xchg
mov
lds
push
les
imul
pushl
cli
stc
pop
insl
pop
bound
nop
adc
loopne
push
jne
fildl
jg
rcll
inc
lea
push
xlat
or
or
into
loop
clc
push
xchg
inc
jle
adc
es
ja
push
call
fidivl
daa
ret
clc
fdivrl
add
adc
rolb
mov
and
inc
outsl
jmp
lret
decl
pop
inc
fwait
adc
mov
mov
andl
icebp
push
xchg
add
lret
sbb
lods
mov
mov
fistps
mov
dec
jbe
jns
inc
cmc
incl
fisttps
cmp
mov
sub
xchg
mov
push
pop
lock
sbb
xchg
fildl
lcall
ds
sbb
mov
data16
pop
mov
call
sbb
cld
jmp
int3
xor
xchg
jbe
push
std
sub
xor
test
and
mov
loope
xchg
ret
clc
dec
scas
sub
inc
les
add
cmpsl
mov
sarl
push
test
jle
lcall
adc
and
mov
sti
into
in
out
xorb
cld
inc
mov
jle
dec
and
pop
in
push
cmp
shrb
clc
adc
outsb
xchg
fsin
flds
push
mov
mov
outsb
cmp
mov
jle
ret
js
das
je
cltd
adc
imull
imul
call
push
cmp
not
pop
test
mov
arpl
xchg
adc
mov
mov
push
inc
ja
shll
pop
mov
jle
movlps
sahf
icebp
loopne
fldl
imul
xchg
ss
jp
orb
xchg
push
pop
cmp
adc
cmp
in
jnp
mov
cmp
push
test
out
icebp
test
cmp
adc
fistpl
adc
stos
lea
xor
pop
punpckhbw
xchg
pop
push
out
xor
bound
or
jne
stos
rep
loop
adc
sub
insb
pushf
lea
insb
shll
adc
sub
test
add
aaa
lock
std
pop
decl
sarb
push
sar
cmpsb
adc
xor
hlt
add
push
aam
xchg
push
rol
mov
out
aaa
ss
call
mov
xchg
sub
aam
imul
mov
enter
loop
dec
fisttpl
test
mov
mov
jmp
std
insl
test
loop
and
jmp
cmpsb
insb
fs
test
sbb
ret
xchg
adc
ss
pop
jne
dec
insl
sub
lret
clc
sbb
xchg
pop
lret
mov
add
add
fistpl
adc
int3
and
imul
fisubs
mov
push
sbb
xor
push
inc
ret
push
test
in
ret
jl
sub
dec
add
sub
or
enter
lods
loop,pn
push
imul
xchg
push
lcall
sub
scas
bound
stos
andl
mov
dec
adc
push
cmc
aaa
add
push
push
xor
int
movsl
test
jmp
ret
mov
mov
push
adc
out
jle
nop
dec
fwait
int3
jmp
and
inc
mov
inc
inc
xor
mov
sti
xchg
and
mov
in
mov
mov
dec
dec
inc
add
xor
out
decl
jmp
outsb
enter
cmpsb
adc
repnz
sti
fcom
pop
add
adc
dec
rclb
push
pop
push
push
push
bound
icebp
out
push
fbld
adc
push
rcll
cmpl
cmpsl
shll
xchg
decl
ja
sub
pop
and
call
decl
cld
xchg
dec
or
cwtl
adc
or
xchg
push
popf
ret
lods
ds
sub
or
and
out
fidivrs
mov
clc
in
das
inc
sub
jmp
jno
fsts
fs
sbbl
xlat
push
pop
jg
push
or
mov
imul
pop
push
std
xchg
movsl
je
mov
sbb
aaa
ficoms
dec
xchg
dec
out
in
and
mov
push
mov
cmp
loope
inc
lock
jp
imul
xor
daa
in
fdivl
loope
icebp
outsl
mov
mov
cs
adc
arpl
popa
loope
or
sbb
push
pusha
movsb
pop
mov
dec
movsl
outsl
std
call
adc
cmc
inc
outsb
out
add
sbb
dec
shlb
test
push
xor
mov
jmp
dec
jg
rorl
push
das
mov
inc
nop
imul
jge
sbb
jge
mov
adc
add
test
out
inc
mov
add
pop
mov
adc
mov
invd
das
xchg
inc
sarl
push
mov
cmp
enter
das
mov
jl
pop
roll
shrb
add
fwait
cwtl
gs
fwait
clc
jmp
adc
inc
lock
xchg
rcl
orb
push
and
insb
pop
dec
shlb
or
sbb
pushf
in
add
hlt
outsl
je
and
es
adc
mov
lods
add
sub
je
jnp
ss
mov
in
mov
sahf
fidivrl
adc
into
or
and
rolb
inc
sbb
aas
xorb
in
adc
cmc
cmpsb
andb
xchg
ds
daa
inc
js
das
cld
out
xchg
push
pop
xor
enter
loopne
jbe
adc
into
or
pusha
and
inc
mov
cld
mov
or
ror
xlat
xor
jg
repz
mov
rcrl
xchg
mov
js
xor
adc
mov
jne
cld
push
jns
cmp
jbe
xor
fists
adc
jne
cmp
pushf
dec
jg
inc
in
mov
push
je
pop
adc
lret
push
ret
mov
and
pusha
mov
mov
push
inc
mov
inc
mov
lcall
cld
mov
negb
mov
add
aad
aam
lods
rcll
mov
mov
cmp
pop
rcrl
insb
mov
mov
lock
add
pop
test
movsb
punpckldq
pop
and
inc
push
push
ret
xchg
das
lods
stc
fcmovne
mov
cmp
mov
fiaddl
stos
or
jg
mov
xor
add
adc
mov
or
xchg
xchg
negb
pop
and
sub
adc
push
adc
mov
jl
xchg
test
jl
sub
fisubs
add
movsl
pop
push
xchg
or
inc
cmp
and
xchg
in
jmp
inc
mov
faddp
inc
ret
mov
and
pop
pop
sbb
cmp
mov
or
pop
adc
or
fidivs
adc
nop
dec
sub
test
jns
xchg
test
cltd
xor
addl
mov
ret
cld
int3
add
pushf
sti
jno
arpl
push
adc
pushl
jne
sahf
xchg
push
movntps
and
add
imul
sub
inc
pop
int3
and
aaa
adc
sub
test
call
inc
or
mov
mov
mov
ret
fadds
and
cmc
mov
fstl
xor
testb
add
jns
stos
mov
jp
xchg
jp
dec
sbb
mov
dec
test
lret
cmp
pop
adc
adc
push
pop
scas
jg
mov
enter
inc
or
or
mov
push
xchg
pop
pushf
fistl
push
push
fldt
aad
or
mov
data16
sub
mov
mov
aas
ja
push
and
out
and
std
jmp
jg
aas
sbb
mov
pop
push
lcall
iret
cld
xchg
mov
dec
mov
xchg
sub
push
cmpsb
scas
stos
inc
sub
add
outsl
jb
or
stos
int
les
sbb
sub
mov
jne
mov
je
arpl
fcmovu
dec
or
sub
cmp
jecxz
aas
lods
add
mov
cltd
push
cmp
pop
hlt
jmp
lods
pop
in
lret
add
pop
ds
ljmp
pop
push
je
fcomp
ret
dec
pop
lret
ss
dec
cmp
add
sbb
inc
sub
dec
pop
outsl
jp
push
pop
add
jmp
mov
push
push
int3
and
adc
shrb
popa
dec
repnz
cmc
inc
std
adc
inc
mov
inc
cli
add
insl
int
lock
sub
push
push
add
es
das
bound
movsl
add
inc
nop
test
pop
jle
sub
popf
push
lock
add
cmp
mov
dec
cld
mov
inc
push
ss
jno
outsb
sub
pusha
and
test
stos
xor
clc
andl
out
push
mov
and
or
lods
shll
loop
xchg
cmp
das
orb
lahf
fcmove
rorl
cltd
mov
push
mov
aad
mov
xor
aaa
fcomp
hlt
das
sub
pop
roll
add
les
sbb
jmp
mov
sub
sub
lret
incl
mov
data16
xchg
pop
xor
inc
push
fucomip
mov
stc
int
stc
inc
lods
mov
movsl
dec
cmp
pusha
out
push
mov
mov
adc
lock
jno
pop
mov
push
loope
mov
jo
in
or
clc
sahf
pop
sbb
sub
push
mov
lods
sub
ljmp
xlat
or
mov
push
stos
sahf
push
jns
mov
xor
movsl
pop
mov
arpl
dec
sbb
rcll
movsl
sbb
push
shrl
repz
mov
inc
sub
jbe
std
sbb
insl
loope
nop
fisubrl
int
arpl
cmc
xor
popf
or
aad
jo
inc
pop
add
sbb
mov
pop
jo
cmp
dec
pusha
mov
negl
sti
sbb
push
out
rcr
dec
ja
pusha
call
mov
jp
cmp
ret
mov
gs
and
and
pop
mov
leave
lea
cltd
mov
sub
xor
sub
add
add
push
std
inc
loope
or
dec
mov
xchg
test
push
or
jle
cli
jne
mov
and
cmp
cld
in
out
add
ficoml
pop
sbb
je
inc
cltd
fisttpll
cmp
lock
out
popa
mov
mov
lock
int3
and
test
xlat
inc
out
jbe
ret
jo
incl
adc
mov
sub
test
lods
inc
sqrtps
pop
pop
or
and
sbb
outsl
pop
push
insb
dec
rorl
rorb
bound
pop
adcb
pusha
add
and
scas
adc
arpl
sbb
call
dec
test
rorb
out
pop
mov
shr
xor
shlb
sub
push
cli
iret
repnz
xchg
loope
jno
nop
call
sub
popf
and
inc
and
data16
pop
clc
rorb
jecxz
jg
jae
stc
jg
test
sbb
int
xor
sbb
ret
test
test
in
jno
dec
inc
cld
adc
pop
out
sub
jl
hlt
rclb
fistpl
popf
sbb
sub
jb
xchg
push
movb
fisubrl
stos
ss
jbe
or
aad
int
mov
xchg
lds
inc
cpuid
and
mov
lea
sub
test
pusha
arpl
xor
mov
cld
roll
fimuls
xchg
aad
call
mov
push
imull
test
lods
insl
adc
add
roll
test
jno
fucomp
stos
iret
cld
and
ds
cmpsl
sub
mov
pop
lahf
loopne
shrb
inc
nop
jmp
mov
les
outsb
xchg
cli
pop
int3
mov
xor
push
fdivrp
pop
outsl
cltd
ljmp
jo
std
outsl
sbb
adc
or
sbb
clc
jne
mov
cs
stc
jle
jp
gs
push
subb
or
int
in
ror
sbb
in
jl
sub
cmp
mov
ret
addl
adc
aad
fstl
and
decl
xchg
add
inc
addl
cmpsb
inc
mov
pop
dec
add
pop
push
outsb
push
push
adcl
jae
and
loop
jb
sbb
cwtl
fadds
xorl
jl
pop
cli
scas
test
adcl
push
loopne
add
xor
mov
dec
and
add
jg
mov
mov
pop
lcall
test
and
cli
inc
xchg
push
push
adc
notl
js
js
mov
and
mov
pop
mov
add
pop
ficompl
stc
pop
cmp
movsb
cmpsb
jb
fldcw
push
int
ss
aad
push
or
or
jg
xchg
and
gs
or
or
cmpsb
outsl
sub
inc
loope
or
movsb
dec
mov
xor
fildll
js
imul
movsb
add
bound
jae
fiaddl
sbb
add
loopne
sbb
mov
or
lea
push
ljmp
push
mov
jbe
ror
outsl
mov
sbb
sahf
out
arpl
push
jge
test
aas
adcb
push
xchg
inc
dec
cmpsl
xor
int
add
sbb
xor
mov
aad
and
jae
sub
mov
push
or
or
jecxz
fmuls
shr
push
andl
das
test
push
dec
sub
jae
out
rclb
pop
or
add
das
cld
sub
push
lea
push
dec
mov
sti
add
cmp
ret
addr16
xchg
imul
jecxz
orb
notl
push
push
gs
add
arpl
aaa
sub
add
mov
mov
cmp
jbe
rolb
or
xlat
dec
push
cmp
push
lds
mov
sbb
fistl
mov
sub
push
jmp
lods
pop
inc
and
or
and
shlb
mov
jb
push
ljmp
fstl
inc
outsl
dec
icebp
cmc
sub
les
jecxz
mov
cmpsb
mov
rcrl
adc
aaa
ss
std
cmpsb
sub
icebp
push
cmc
mov
jo
imul
mov
xchg
sub
sbb
or
push
xor
leave
pop
popa
xorb
fstl
jmp
inc
inc
test
jmp
jmp
cmp
int
xor
inc
pop
or
and
shrl
mov
push
sbb
sub
cmp
dec
sub
les
or
adc
add
clc
mov
and
jle
jle
jns
call
dec
rcrl
add
icebp
fisubl
sub
inc
sti
jg
ja
dec
in
xchg
or
scas
ds
sti
imul
std
cmp
out
mov
insl
das
rorl
sbb
push
push
sbb
jae
mov
inc
cli
pushl
sbb
push
jne
xor
jecxz
arpl
add
data16
mov
sbb
ja
fsubl
cli
aaa
cmp
mov
mov
mov
lock
fidivrl
push
roll
xor
sub
test
and
xchg
push
jno
test
inc
or
push
ss
fistpl
sub
mov
sti
repz
rcr
xchg
add
popa
stos
enter
inc
mov
sbb
jno
or
fdivl
test
jle
mov
outsl
xor
or
inc
movaps
push
cmp
les
jl
das
xchg
mov
xchg
call
pop
add
outsl
cmp
jmp
cmpsb
sub
int
sbb
jbe
fistl
lret
mov
inc
aam
add
test
xor
pushf
fdivs
pop
inc
lahf
ffreep
or
aam
push
dec
pop
pop
push
frstor
push
adc
pushf
mov
inc
mov
int3
jmp
push
cmp
mov
notl
repnz
add
cld
cmpsl
mov
shrb
daa
or
cmp
pop
mov
mov
outsb
sub
jne
test
sbb
mov
or
inc
jnp
stos
in
push
jo
nop
push
mov
xchg
xchg
insb
sub
jmp
adc
or
cltd
mov
mov
mov
push
dec
sbb
or
sub
cld
add
rolb
addb
push
fsubrs
insb
xchg
sbb
add
fidivs
sbb
sti
fs
aad
inc
aam
call
rolb
add
testl
sbb
filds
or
mov
fildl
pop
addr16
push
mov
ss
frstor
fimull
jecxz
jbe
dec
dec
add
incl
push
mov
and
rcrl
jecxz
outsb
inc
adc
inc
ficoms
sbb
jg
jo
inc
and
adc
loopne
jmp
les
aaa
sbb
mov
sub
jnp
inc
jae
mov
pop
pop
or
sub
cmp
add
sbb
inc
sub
std
jg
adc
adc
pop
shlb
inc
les
mov
sbb
and
fldt
cmovne
out
int3
imul
ja
fiaddl
sub
lea
xor
ja
push
pop
jle
jae
xor
xchg
pop
lds
leave
cld
mov
stos
ss
inc
inc
das
or
sbb
jl
aad
add
mov
std
aas
add
xchg
ds
add
ljmp
popa
pop
mov
add
pop
sti
sub
adc
pushf
cmp
sbb
out
imul
adc
test
adc
fcomps
cld
mov
and
add
jbe
or
test
clc
adc
sbb
mov
test
jge
test
xchg
fs
adc
mov
je
arpl
mov
insl
fistpll
mov
push
sbb
lret
mov
add
dec
push
loopne
pop
cltd
out
shrl
xor
test
shr
test
sbb
fistpl
cmpl
loop
pop
mov
stos
pop
outsl
sbb
ss
in
adc
add
add
lock
into
and
ds
jb
jmp
stos
mov
lcall
cmpsl
sbbl
mov
push
cmp
push
test
pop
mov
sbb
mov
jle
jecxz
sbb
push
mov
add
add
repnz
fildll
and
lret
sahf
pop
in
jae
mov
mulb
incl
scas
retw
xchg
pop
mov
subb
enter
aas
xor
fucom
pop
daa
adc
mov
pop
sub
pop
mov
ficoms
sbb
adc
or
icebp
cli
jno
aad
dec
jno
xlat
ja
insb
mov
pop
sub
cmp
push
in
jg
repz
mov
jg
aaa
adc
jne
pop
filds
push
stos
mov
lods
and
cli
mov
add
mov
add
xchg
lret
adc
mov
mov
lcall
sbb
jo
in
ret
mov
mov
mov
movzwl
ficoml
cltd
and
push
pop
mov
insl
push
insl
inc
lret
shlb
test
movsl
cli
mov
lods
dec
or
add
xorl
mov
andl
cmp
xor
sbb
cmp
mov
fcoml
push
push
jmp
mov
int
leave
insl
icebp
in
rolb
jp
and
or
popa
cmpb
adc
push
scas
pop
popa
fistpl
in
outsw
jne
mov
movsb
and
int
xchg
xchg
pop
imul
stos
dec
movsb
hlt
sbb
fsubrl
pop
mov
inc
push
adc
or
sub
and
mov
stos
mov
mov
push
inc
std
or
pop
iret
jne
das
xchg
repz
fstpt
sub
rcl
adc
bound
jae
cmp
push
mov
jns
add
loope
pop
mov
lds
sbb
pop
push
mov
enter
xchg
das
stc
stos
mov
mov
adc
xchg
push
enter
cmp
mov
fwait
subb
jae
cmp
pop
jmp
cmp
into
clc
loop
cmpsl
jbe
jo
xchg
and
leave
adc
outsb
bound
fwait
jmp
pop
rclb
add
insl
xchg
ss
mov
sub
mov
or
adc
push
inc
addr16
in
mov
out
bound
push
fmul
or
add
add
lds
push
test
fnstsw
mov
xor
test
mov
popf
sub
dec
or
and
call
ret
jno
movsb
sub
or
push
ret
mov
aas
orl
or
xchg
icebp
bound
das
cld
scas
imul
mov
rcrl
pop
arpl
inc
inc
xchg
jae
pop
dec
mov
inc
imull
pop
fisubs
cs
sti
jmp
pop
test
inc
mov
pop
mov
push
fcompl
enter
cld
pop
inc
leave
push
mov
fnstenv
pop
iret
adc
andb
jbe
stos
fildl
cmpsb
loop
imul
dec
xchg
fstpt
lcall
daa
fadds
add
mov
dec
sahf
sub
push
movsb
push
pop
insl
add
jb
fmul
or
inc
push
mov
test
and
shlb
pop
adc
inc
fcoml
cmp
sbb
mov
fs
add
inc
add
push
inc
dec
add
testl
ja
mov
dec
fsubr
push
pop
sub
jmp
incb
sub
repz
out
das
xchg
es
push
imull
sbb
aaa
fdiv
gs
dec
or
and
movsb
cmp
add
dec
or
or
imul
xchg
xchg
add
push
std
pop
xor
push
xor
jmp
cli
pushf
add
pop
cmp
add
jbe
inc
jns
and
ret
jle
ljmp
push
popa
fcmovnbe
and
testb
shr
repnz
jle
fs
mov
mov
xchg
sti
pushl
shrl
mov
adc
jns
shrl
rcl
mov
mov
outsb
jg
adc
inc
cmp
movl
push
insb
xorb
popa
mov
sti
sbb
repnz
cltd
dec
jecxz
inc
insl
ljmp
dec
pop
or
mov
mov
shl
in
rolb
sbb
push
fyl2x
sbb
cmpsb
add
mov
pop
adc
or
xchg
hlt
insl
inc
inc
mov
pop
xor
mov
mov
xchg
xlat
lret
dec
jl
data16
fdivrp
lods
push
push
pop
aam
out
add
pop
inc
pop
sahf
mov
pop
and
enter
inc
adc
inc
test
ljmp
in
sbb
subb
push
dec
xlat
out
jmp
mov
aas
mov
sbb
inc
mov
pop
loope
daa
out
cmp
mov
xchg
mov
sar
jbe
test
loopne
icebp
xorl
sbb
mov
sub
std
fisttpl
jmp
xor
pop
ret
sub
pop
cli
pop
mov
daa
jne
cmp
sbb
mov
jno
mov
mov
aaa
aaa
fdivrs
mov
mov
cltd
cmp
lods
arpl
jmp
out
push
xchg
incl
pop
add
rolb
rcrb
jle
fndisi(8087
roll
fisubs
hlt
xchg
cwtl
mov
clc
inc
mov
mov
iret
adc
subl
fisttpll
test
mov
mov
push
bound
pop
xchg
xor
mov
or
xor
sbb
adc
pop
sbbb
xchg
js
pop
je
rorl
loopne
push
pop
push
mov
imul
movsl
dec
insl
lcall
psrlw
mov
fildl
push
xor
decb
inc
xlat
xchg
pop
imul
push
inc
rclb
lea
fmuls
jae
icebp
add
sub
sub
cwtl
int
sarl
mov
jl
aaa
and
push
lea
ret
mov
mov
ficoms
mov
inc
mov
dec
fs
call
inc
mov
insl
punpcklbw
mov
cli
jl
pop
jmp
xorl
add
in
mov
or
int3
jnp
ds
xlat
and
xor
pop
sbb
loopne
outsb
mov
mov
and
mov
cld
add
jmp
popf
or
enter
mov
push
bound
adc
push
into
xchg
stc
test
inc
dec
leave
mov
cmc
push
incl
lahf
clc
adcl
sarb
sahf
cmp
outsl
or
xor
push
cmp
dec
cld
inc
jg
inc
shll
push
push
mov
icebp
dec
or
pop
or
add
add
ds
outsb
dec
cmp
push
push
lahf
movsl
outsb
adc
addr16
hlt
fildl
into
mov
mov
xor
sub
rcll
sub
call
popl
fldt
dec
pop
lcall
mov
add
xchg
ret
js
and
arpl
xchg
pop
xchg
in
dec
loop
sbb
iret
sahf
jno
aad
scas
enter
out
push
jmp
xchg
icebp
sbb
mov
or
inc
aam
add
and
mov
insl
dec
imul
sbb
or
add
shl
mov
inc
sti
sub
lock
mov
sub
dec
mov
and
and
inc
sbb
lret
mov
lret
scas
sbb
push
mov
mov
inc
popf
mov
ja
fimull
mov
jns
je
jecxz
fdivs
mov
mov
xchg
bound
add
push
rcrl
imul
xchg
jo
imul
jp
pop
pop
pop
push
hlt
test
daa
sbb
xchg
jnp
in
mov
leave
jne
cmp
xchg
mov
pop
or
scas
inc
mov
mov
xor
lods
sub
inc
rol
mov
add
stc
fidivs
shll
iret
fidivrl
pop
dec
pop
add
inc
aaa
pop
mov
sub
or
push
jle
push
xorl
pop
sub
fiadds
adc
mov
mov
adc
jge
mov
inc
xor
daa
cmp
lea
or
adc
mov
inc
shl
pop
jp
mov
mov
jp
jae
cs
adc
jo
dec
pusha
mov
or
and
mov
cmp
push
pop
sbb
aaa
xchg
push
and
rol
lods
pusha
dec
push
push
push
cmp
push
mov
es
in
add
push
and
and
jg
arpl
outsl
xor
add
inc
faddl
inc
sbb
sub
cmpb
xchg
pop
and
pop
js
or
test
jmp
add
adc
mov
gs
outsb
push
sarl
jecxz
movsl
and
mov
jnp
jge
sub
mov
outsb
xchg
mov
imul
outsl
aas
call
pop
mov
adc
pushf
psubusb
mov
cmp
repz
pop
or
jge
fnsave
pop
or
pop
jg
aas
cmp
outsl
xlat
jl
xor
fildll
lahf
cli
push
inc
pop
lock
aad
xor
fidivl
imul
movsb
test
mov
or
sub
outsl
fnsave
loopne
mov
aam
cmp
sar
push
hlt
shll
rolb
jg
cmpl
jmp
pop
cli
pop
bound
xor
pop
add
fucomi
lds
mov
fs
mov
push
jg
fiaddl
mov
stos
pop
test
push
clc
or
scas
stos
and
adc
inc
call
std
mov
or
shrl
inc
into
subl
push
stos
push
mov
push
push
cmc
std
mov
rolb
inc
push
fs
dec
setbe
mov
das
jbe
ja
dec
pop
aas
cmpsl
mov
enter
mov
mov
es
or
cs
out
loope
mov
pop
dec
clc
les
jae
insb
fisttps
out
and
ret
fwait
movsl
lea
outsb
sub
stc
pop
fcmovbe
mov
shrl
adc
inc
mov
jno
call
cmpsl
dec
xor
aam
rolb
and
insl
jecxz
in
push
cmp
cwtl
xchg
outsb
sbb
xchg
dec
push
and
sub
lods
mov
popa
sti
scas
mov
mov
incw
jl
lcall
add
repz
les
stos
mov
xchg
xchg
clc
ss
sub
enter
and
jb
insl
mov
mov
adc
or
in
add
ret
xor
ret
add
sub
push
test
pop
ds
lret
inc
mov
pop
enter
xchg
inc
repnz
loope
popa
repnz
xor
ret
dec
pop
and
xchg
mov
mov
push
pop
imul
or
enter
mov
inc
ficompl
dec
mov
aaa
sbb
mov
faddl
movsl
dec
popf
in
push
and
xchg
inc
mov
inc
xchg
pushl
mov
mov
int
adc
pop
fcmovnbe
addr16
xchg
in
insb
xor
mov
aad
repz
ja
es
sbb
mov
lods
mov
decl
fs
add
ljmp
ds
testl
sub
mov
push
mov
popf
and
pop
rorl
mov
rolb
popa
mov
cmp
sbb
jb
lods
xor
jecxz
push
or
jnp
mov
push
sbb
mov
or
mov
sbb
popf
mov
paddsw
outsl
mov
xor
adc
xchg
jo
mov
movsl
movsl
movb
std
out
sbb
mov
inc
fcomps
add
stos
and
mov
inc
daa
and
cwtl
adc
or
jbe
adc
mov
mov
sbb
stos
jg
aam
cmp
divl
xor
xchg
nop
inc
jo
pop
shll
or
fstp
add
clc
and
mov
loope
rclb
lret
or
fistpll
adc
sbbl
mov
and
mov
in
cmpsl
nop
sub
inc
rolb
sbb
jmp
scas
aaa
sbb
rolb
cltd
sahf
jecxz
jecxz
sti
in
or
jmp
in
movsl
or
hlt
jg
or
repz
out
add
movsb
inc
cltd
mov
sbb
sub
mov
cmc
pop
inc
stos
shlb
mov
sbb
and
jmp
jbe
adc
int3
xchg
and
sbb
loop
js
add
push
rcr
les
pop
or
jns
outsb
ror
jb
or
hlt
pusha
jmp
mov
lds
push
adc
dec
pop
outsl
scas
fisubrs
jle
pop
lods
cmp
stos
sub
bswap
pop
or
xlat
sbb
sbb
jl
imul
in
pop
test
mov
pusha
mov
ret
jmp
sbb
mov
loop
mov
or
test
pop
std
cmp
sbb
sbb
cmp
sub
sub
pushl
mov
mov
pop
push
xchg
outsl
out
cmp
dec
push
mov
rdmsr
add
jno
dec
jno
push
jge
or
cli
inc
mov
xlat
pop
leave
push
mov
pop
std
cs
xchg
adc
int3
cmp
aad
fsubrp
adcl
daa
fcmovnb
mov
andl
jo
enter
inc
adc
or
sti
jnp
mov
jno
push
fldt
push
mov
mov
sub
std
xor
or
je
push
or
jl
add
pop
pop
mov
xchg
inc
lahf
mov
xchg
pop
cs
cmpsb
jg
jg
rorl
hlt
xor
mov
pop
insb
cmp
pop
cmpsb
dec
repnz
add
lret
push
push
fistpl
repz
stos
jp
sahf
mov
scas
out
jb
or
clc
dec
stos
jp
mov
inc
jmp
lret
jge
js
test
loop
popa
jmp
xor
push
cli
ja
mov
out
ret
jns
out
inc
rcr
clc
call
push
aaa
inc
shr
call
loopne
push
adc
adc
cmp
jl
fstpl
es
jo
cmp
addl
mov
cmpl
mov
lahf
mov
inc
loop
adc
rcll
shll
fnstcw
cltd
adc
push
add
cmc
adc
sub
loope
xor
push
add
jmp
icebp
mov
jbe
sbb
enter
jne
mov
or
daa
push
lahf
pop
cmp
sbb
lods
loope
jb
pop
andl
jmp
arpl
sub
push
ss
shll
pop
mov
inc
aaa
push
mov
shl
inc
add
imul
and
and
fdiv
stos
lea
hlt
jne
ljmp
and
adc
cmp
push
add
movsl
insl
imul
push
ss
test
in
enter
cltd
push
mov
jnp
add
fisttps
lcall
bound
xchg
inc
pusha
std
pop
mov
in
xchg
orb
je
das
inc
cld
push
pop
inc
and
stos
mov
insb
and
repz
bound
mov
subl
in
jb
out
push
test
imull
sbbb
call
push
cmp
inc
mov
pop
rcr
aad
xchg
inc
and
pusha
cmp
sub
sbb
bound
sbb
inc
and
or
push
subl
fs
adc
add
jmp
mov
pop
jge
jp
and
or
test
shr
xchg
bound
leave
mov
push
sub
push
xchg
dec
lds
jbe
mov
pop
outsb
mov
sbb
jnp
mov
inc
ja
push
popa
and
mov
mov
icebp
adc
sar
mov
insb
dec
imul
fdivrl
iret
adc
sbb
adc
rolb
das
sub
mov
orb
xchg
xchg
pop
pop
xor
jne
jg
push
pop
fs
adc
leave
and
mov
push
mov
iret
sbb
mov
mov
xchg
inc
je
ss
mov
mov
pop
ror
jae
and
mov
mov
xor
lock
mov
rorb
hlt
jo
ret
in
jbe
inc
adc
dec
pop
pop
jns
and
sbb
xor
adc
add
enter
lret
jo
sbb
ds
loopne
mov
imul
mov
maxps
sbb
inc
hlt
mov
pop
push
lret
add
test
hlt
fwait
in
pop
mov
push
es
arpl
sbbb
lcall
in
dec
jo
jecxz
push
aam
push
cmc
je
pop
or
cmpsb
mov
inc
rcll
lcall
mov
insl
pushf
mov
stos
inc
cld
mov
push
test
and
xchg
cmp
or
push
mov
popa
push
psllw
mov
ds
pop
mov
imul
sbb
jno
inc
sub
lahf
mov
lret
and
adc
xchg
imulb
jno
cwtl
outsl
mov
adc
sbb
mov
mov
fidivrs
and
notb
bnd
lahf
rcr
adc
jmp
jae
adc
sbb
loopne
int3
rorl
popf
mov
mov
inc
fdivl
sub
pop
sbb
mov
setle
out
push
and
int
adc
add
pushl
xlat
sbbb
or
shll
and
in
rcll
ja
shl
pop
lods
add
fidivl
mov
inc
pop
or
loopne
loopne
iret
and
sbb
icebp
inc
pop
xchg
adc
sbbb
push
imul
test
or
incl
inc
xchg
sub
shrb
outsl
cmp
leave
inc
mov
sahf
push
or
xor
add
rorb
dec
xchg
push
cwtl
inc
pop
adc
mov
out
add
xchg
cmc
jo
jne
adc
andl
mov
dec
cwtl
arpl
shlb
mov
subb
cld
fwait
sub
in
mulb
cs
gs
pop
xchg
cmp
adc
fildl
sbb
push
inc
lods
xor
scas
push
loop
and
lods
test
mov
loopne
pop
or
push
cld
out
lods
pop
ljmp
mov
mov
pop
push
cmp
cli
mov
incl
mov
cmp
mov
xor
sbb
sbb
inc
xor
mov
and
arpl
push
call
sbb
jbe
icebp
add
stos
int3
lods
mov
sbb
insb
inc
in
xchg
xchg
fwait
cwtl
push
mov
mov
icebp
repz
push
mov
shrl
or
jb
rcrb
sub
insb
arpl
std
repnz
addl
xchg
leave
shll
adc
call
sbb
decl
sub
lea
pop
sbb
test
es
lea
inc
cmp
in
and
lods
aam
ss
mov
lods
xchg
clc
sub
movsl
fildl
pop
int
ss
mov
pop
movsl
call
cmpsl
mov
shl
dec
mov
jo
mov
aam
andb
shl
push
stos
xlat
inc
sti
xor
je
fdivs
lock
adc
mov
lds
adc
inc
fstl
sbbl
stos
adc
add
pop
or
jbe
sbb
sbb
insb
jge
loope
cltd
push
ljmp
mov
push
push
cmp
jb
mov
xchg
mov
cltd
rorl
clc
fistl
orb
or
insl
pushl
mov
jnp
dec
rcr
fisubrs
jo
cmpsl
repz
pop
test
sahf
fdivr
movsl
lea
cmp
jb
aam
inc
inc
pop
fidivrs
mov
mov
mov
mov
mov
iret
or
dec
sti
add
inc
cmpsb
mov
mov
cmc
mov
jne
insb
mov
pop
or
or
scas
daa
xchg
sarb
repnz
jle
pop
leave
test
adc
loopne
mov
subl
mov
mov
and
mov
jle
xchg
insl
test
subb
ss
mov
push
sbb
incb
dec
or
inc
out
pop
es
stc
mov
inc
das
outsb
mov
dec
push
mov
outsb
mov
adc
ficoms
daa
daa
sub
or
pop
jbe
add
insl
into
shlb
cmp
push
mov
mov
sbbl
sbb
das
pop
daa
cmovno
aaa
cmp
fidivs
mov
inc
xor
xchg
sub
mov
loop
push
jg
jo
call
push
jo
les
fcmovu
add
push
out
add
fldcw
xor
sbb
cmpsb
test
shrb
fiaddl
outsl
sbbb
insl
imul
mov
pop
and
jne
and
pop
fsub
pop
push
addr16
sbb
fiaddl
scas
xchg
and
pop
inc
hlt
inc
mov
push
imul
les
mov
stos
pop
outsb
orl
insb
movsl
xchg
rclb
sub
push
insl
test
inc
jg
or
andl
jmp
lds
je
mov
cmpb
add
cs
les
and
push
or
jl
cmc
push
test
dec
jge
mov
jecxz
jno
pop
xchg
aam
inc
andl
jbe
icebp
call
lods
jmp
mov
ret
int3
sbb
jg
rcl
add
mov
jne
enter
movsl
out
dec
std
ljmp
insb
push
ficompl
leave
cmp
add
push
jg
in
jmp
into
xor
mov
push
sti
mov
sti
lds
jae
inc
lea
mov
sbb
dec
orl
imul
icebp
outsb
or
ret
enter
and
aaa
int3
aad
inc
add
outsb
mov
mov
or
fs
xor
push
sub
xchg
sbb
jge
stos
xchg
cmc
lahf
loop
jl
cs
or
jmp
jle
sbb
lret
aaa
out
and
and
jl
push
jl
jbe
xchg
ljmp
std
out
fcmovbe
mov
mov
out
fs
adc
rcr
push
adc
sbb
jl
stc
sub
dec
in
pop
cs
pop
jns
pop
shrb
call
loope
push
push
pop
lcall
cmp
test
mov
cmp
jno
push
xchg
mov
inc
lock
imul
push
inc
sbb
jg
mov
cwtl
xor
aas
subb
jl
inc
les
mov
sahf
ret
dec
mov
push
or
pop
out
sub
loope
inc
sbb
mov
inc
and
inc
adc
push
add
and
loope
insl
ret
jmp
fwait
xor
imul
mov
outsl
sub
les
pop
sahf
sbb
fildl
inc
out
imul
subl
xchg
jg
add
or
dec
and
int3
cs
stos
cmp
dec
pop
push
adc
test
dec
pushf
cmp
inc
icebp
scas
daa
cmp
mov
fbstp
mov
aaa
fildl
mov
mov
or
iret
dec
mov
aas
xor
dec
lahf
add
ret
jle
mov
imul
pop
sub
outsl
or
push
addl
psllq
fsubrl
int
xchg
arpl
mov
xchg
jno
inc
lods
mov
push
cmp
push
pop
xor
or
adc
cs
outsb
sub
pop
in
out
cmpsl
outsl
shrb
icebp
inc
or
out
xor
in
popf
sbb
aad
xor
insl
int3
mov
test
add
lock
stos
bound
mov
dec
mov
push
push
call
addr16
loop
hlt
pop
adc
xor
mov
movsl
pop
add
mov
cmp
sti
dec
sbb
jle
sbb
imul
mov
jge
xchg
aaa
sub
or
cs
addr16
cltd
mov
je
dec
cmp
cmp
out
jg
push
adcb
insl
xor
sar
fcomps
adcl
jb
inc
mov
jge
dec
or
push
imul
dec
mov
add
add
fisttpl
test
aam
cmp
cs
push
test
jae
mov
sub
test
movsl
push
add
or
pushl
frstor
ja
sarb
icebp
xchg
dec
jnp
adc
xorb
push
xor
push
cmp
in
inc
and
je
or
mov
cltd
iret
out
sbb
popf
adc
add
cmp
xchg
std
inc
sbb
push
cwtl
int
pop
shlb
mull
insl
les
mov
cli
scas
mov
lahf
psrld
int3
repz
xchg
test
ss
adc
adc
fldt
push
or
adc
cmp
cli
das
enter
insb
imulb
pop
sub
mov
adc
fstpt
shll
pusha
push
jle
jbe
or
or
push
loope
fstp
insl
mov
adc
in
and
std
pop
mov
xor
add
je
mov
enter
dec
pop
aam
hlt
inc
arpl
jo
jge
inc
cld
insb
icebp
or
xchg
stos
jmp
scas
mov
sub
inc
push
sub
rcrl
or
lock
cmp
cmp
push
push
fdivp
xlat
int
ss
and
int
fldt
mov
loopne
iret
mov
sbb
es
and
daa
scas
xchg
cli
in
sbb
in
fiadds
dec
mov
mov
or
mov
mov
push
mov
sub
das
cmp
add
add
cmp
mov
sub
lcall
dec
stos
aas
pop
mov
xorl
xchg
or
jmp
mov
sbb
mov
lcall
adc
mov
and
test
or
add
mov
push
and
in
or
or
mov
lea
iret
adc
in
xlat
dec
cmp
mov
jg
std
fnstcw
dec
xchg
adc
push
cld
sbbl
fildl
mov
in
or
aaa
ds
ss
xor
roll
sbb
cld
rclb
jnp
sbb
aam
into
ja
scas
dec
mov
fsubrs
jae
xchg
std
outsl
sbb
aaa
aas
add
adc
ret
ror
xor
ds
mov
mov
iret
lahf
mov
mov
rorb
mov
ret
add
inc
add
pop
imul
xchg
and
sub
inc
aam
lods
or
inc
pop
out
xor
outsb
ljmp
shrl
jno
sarb
xor
into
stos
mov
add
or
fstl
push
or
fldt
mov
ret
sub
imul
mov
ret
or
push
sbb
pop
insl
testl
sbb
adc
adc
shll
inc
and
in
cld
shr
mov
mov
inc
icebp
push
xor
xor
cli
mov
push
in
xor
scas
adc
ljmpw
icebp
add
fbld
xchg
dec
sarb
nop
in
push
xor
mov
or
jo
lcall
scas
pop
repz
xchg
dec
cld
sbb
pop
sub
das
rcr
inc
call
dec
fs
mov
mov
sti
mov
ljmp
stos
mov
xchg
mov
sti
stos
sub
jmp
add
cmpsl
imul
hlt
ja
in
repz
mov
out
pop
mov
in
popf
push
inc
add
push
repnz
out
imul
fucomi
xlat
and
sahf
sti
xor
and
xor
dec
je
push
lock
cmpsb
xor
push
mov
push
pusha
call
push
adc
shll
or
int
test
mov
aam
mov
test
cltd
xchg
and
fcomps
pop
test
fldt
clc
out
into
mov
lcall
icebp
sub
mov
pop
pop
fildll
xor
mov
daa
dec
adc
cmp
in
js
pop
dec
dec
add
xorb
shll
xchg
int
mov
pushl
addl
mov
xor
mov
inc
dec
mov
push
test
scas
or
int3
jne
pop
jle
enter
push
xchg
fildll
adc
enter
sub
loop
inc
xchg
sbb
and
dec
sbb
fsubs
divl
or
insl
in
pop
jg
lea
or
std
movsb
dec
push
xor
cmpsb
std
pop
mov
in
clc
mov
cmpsb
mov
add
and
inc
pop
jge,pn
inc
pop
test
xchg
and
ret
std
and
cmpsb
stc
aad
pop
addr16
lcall
ja
addl
hlt
sub
cmp
pop
add
adc
ret
jae
loop
lcall
xor
dec
xor
fs
pop
mov
or
adc
xchg
fucom
cmc
jnp
adc
sub
insb
outsb
cmp
movsb
cmpsl
mov
repnz
mov
cmc
inc
xor
lret
daa
mov
gs
push
jmp
lock
icebp
mov
cmp
mulb
jecxz
rorl
in
dec
mov
dec
inc
cmp
std
add
xchg
test
inc
aas
lcall
out
ljmp
iret
adc
push
mov
and
sbb
pop
inc
movsl
mov
sub
out
pop
inc
sbb
sub
add
aam
ja
rcrb
dec
mov
or
out
xchg
or
mov
jno
mov
inc
sub
xor
xor
add
pop
push
movsb
loope
les
add
sbb
stc
mov
lcall
testb
jecxz
inc
into
in
and
mov
and
cmp
lods
sub
pop
mov
cwtl
pop
pop
sbb
sbb
into
scas
inc
js
cmp
lds
shlb
pop
push
add
and
enter
add
sbb
iret
aam
mov
movsb
mov
ja
mov
jno
sbb
clc
and
mov
fiadds
es
movsl
mov
sbb
push
xchg
mov
repnz
sarb
and
cld
xchg
xor
mov
mov
cmpsb
add
mov
lret
mov
movsb
xor
sbbb
mov
test
push
sahf
jb
notb
lods
pop
or
mov
addr16
sub
cli
or
push
xor
insl
addr16
js
cmp
shl
inc
insl
jae
js
shlb
pop
push
mov
lahf
and
mov
ljmp
mov
push
inc
mov
pushf
popf
push
adc
or
push
inc
jmp
jl
push
and
inc
add
iret
mov
push
fmull
repnz
xchg
jmp
push
ficompl
jl
jl
xchg
movsb
repnz
mov
pop
insl
mov
mov
or
fwait
in
aas
adc
adc
or
add
mov
push
lret
pop
or
adc
rcll
jno
cltd
dec
sbb
mov
jmp
adcb
rol
sbb
push
enter
test
or
fiadds
cmpsb
fcomps
scas
stos
loopne
out
pop
mov
or
mov
jecxz
pushf
ret
ja
lock
sbb
int3
xchg
mov
dec
or
dec
notb
xor
outsl
jne
test
fisttpl
jbe
inc
insl
pop
in
sbb
dec
popa
mov
loope
sub
cmc
imul
jmp
push
enter
addr16
es
mov
xlat
nop
inc
pop
aas
jne
mov
rorl
pushf
mov
test
adc
sub
incl
jns
push
ret
jmp
std
fists
mov
dec
dec
push
inc
mov
shlb
cmpsb
cmp
popa
jl
hlt
mov
mov
sbb
scas
mov
jg
aam
mov
mov
inc
cmp
mov
jge
sarb
xchg
sbb
jge
push
pusha
addb
roll
ret
testb
js
and
outsl
aam
jg
enter
mov
loope
gs
lea
lahf
add
and
jg
dec
mov
adc
pop
lahf
xor
adc
or
push
push
lods
xchg
xchg
fstpt
mov
call
mov
inc
fdivrp
sbb
push
ftst
pusha
sub
dec
jp
sbb
inc
mov
mov
lret
cwtl
mov
ret
addr16
aad
dec
fs
sub
ret
ss
ret
mov
hlt
aam
loopne
pop
mov
xchg
sbb
mov
jo
pop
lret
imulb
pushl
sub
and
pop
outsl
jl
xchg
stos
fcmovnbe
mov
xor
sub
orl
sbb
push
fwait
test
mov
stos
or
into
rcll
cs
sub
aaa
insl
pop
mov
adc
fildl
sbb
test
push
xchg
aas
adc
cmp
movsl
es
xor
mov
lods
in
clc
sahf
incl
lahf
in
cli
dec
out
sub
aaa
sub
and
jge
out
out
sbb
sub
and
clc
out
pop
clc
dec
add
fistpll
xor
and
inc
or
fwait
pop
cmp
sub
dec
jge
xor
neg
ret
pop
aam
pop
in
test
mov
mov
mov
push
push
mov
test
mov
push
idivl
ret
or
ret
jo
test
add
pop
cmpsb
jl
mov
shlb
loope
sub
cmp
cld
leave
repz
push
fldl
mov
mov
cld
xor
mov
xchg
imul
sub
xor
icebp
adc
mov
pop
xor
mov
sbb
mov
fists
dec
jg
call
mov
mov
adc
cltd
or
or
add
leave
aam
lds
ja
mov
jp
insl
mov
dec
rclb
sub
cmp
out
sub
and
mov
cld
out
sub
and
ret
dec
jg
gs
mov
inc
pop
dec
scas
mov
xchg
sbb
sub
leave
dec
nop
lods
mov
bound
mov
rcrb
jns
sub
fisubrs
aas
mov
clc
push
jns
fmull
adc
inc
dec
or
mov
arpl
jo
mov
loope
mov
test
lret
insb
adc
in
pop
paddb
mov
xchg
and
pavgw
test
push
mov
and
push
gs
jg
arpl
and
ficoms
jns
jns
ss
push
and
loop
test
aaa
push
ss
movw
mov
ficompl
shlb
cmp
divb
call
xchg
movsb
fcomi
repz
add
ffreep
loopne,pn
cmp
cmp
jge
je
cmc
add
sub
push
lcall
test
mov
sub
and
inc
mov
bnd
out
decl
call
jl
mov
dec
loop
cli
push
jge
cli
inc
sub
test
rcll
pop
dec
aam
or
test
pop
dec
lods
fsubrs
mov
cwtl
loope
dec
je
test
jne,pn
or
hlt
lcall
dec
dec
mov
fucomp
test
outsb
ja
sbb
iret
dec
cld
mov
fadds
pop
insb
sbb
test
pcmpgtb
add
test
pop
mov
sub
sahf
mov
fidivs
xchg
or
adc
jno
sbb
sub
rol
adc
bound
cmp
jmp
fadds
bound
and
pop
mov
bound
insb
loopne
mov
std
add
inc
pusha
test
fucomi
mov
sub
jmp
jl
outsb
in
push
lret
insl
aam
dec
xor
cs
adc
incb
cmp
clc
jle
outsl
jg
jne
cmp
rcrl
imul
cs
and
inc
xchg
adc
pop
mov
xchg
xor
push
loopne
push
das
add
iret
ret
push
dec
sub
in
mov
xchg
mov
jg
jmp
ljmp
add
and
sub
inc
lea
jno
icebp
mov
adc
lahf
aaa
out
imul
popa
jecxz
lds
cli
ss
fidivrl
sbbb
and
adc
fcmovbe
mov
xor
int
insb
pop
and
outsl
pop
fsubrs
stos
popf
pop
mov
ret
push
mov
test
inc
adc
js
cld
aaa
mov
inc
jmp
and
test
shl
sub
lahf
scas
sub
dec
and
scas
in
popl
movsb
pop
mov
dec
movsl
adc
lahf
mov
mov
sub
pop
insl
fs
out
sub
jno
pop
rcr
out
mov
inc
or
push
repnz
push
icebp
cld
repnz
push
mov
xorb
xchg
sarl
jmp
enter
lret
jb
xchg
dec
push
mov
add
adc
jb
insl
sbb
and
lods
push
add
shr
adc
sub
jecxz
mov
mov
mov
cmpb
stos
shrb
cmp
sbb
push
add
xor
sbb
sub
jns
loope
incb
or
loopne
repz
popf
lds
or
les
jae
push
inc
popa
fcmovnu
mov
aad
pop
loope
push
icebp
int3
lahf
xchg
inc
dec
mov
jo
cmp
insl
mov
mov
push
sbb
xor
xor
adc
push
scas
and
lret
fildll
aam
adc
mov
cmc
and
pop
push
mov
cld
cli
ret
cmpsl
cmp
in
into
jmp
mov
mov
inc
pop
mov
lods
mov
mov
dec
lret
inc
insb
sbb
pop
mov
mov
bsf
stc
lahf
bound
adc
push
jge
iret
inc
stos
sbb
and
sbb
xor
stos
in
insl
das
adc
jl
jne
cmpsl
or
pop
push
cmp
jl
pushf
sbb
das
ds
mov
repnz
jmp
and
and
pop
pop
aad
xchg
adc
cmpsl
in
dec
and
sar
dec
rol
rcrl
lahf
xor
jb
xchg
out
xchg
sub
add
cmpsl
and
sahf
and
or
pop
loope
dec
sbb
fldl
pop
cmp
call
xor
inc
cltd
loop
in
jg
and
mov
cmp
repz
cmp
dec
adc
push
mov
pop
or
xor
test
add
test
out
cli
test
ljmp
dec
insb
add
push
subb
or
adc
adc
add
jg
or
test
insl
ret
daa
push
mov
push
fcoml
cld
pop
fcoms
xor
loopne
aas
sub
mov
adc
mov
stos
cli
lcall
pop
sub
or
inc
xchg
adc
imul
sbb
add
lret
ret
adc
adc
lods
inc
mov
aaa
lock
clc
push
push
and
enter
jmp
push
push
jnp
xor
sub
cmpsb
jmp
out
je
leave
cmp
jg
nop
push
adc
hlt
pop
int3
cmp
inc
test
test
lcall
test
filds
negl
xor
test
sarb
loope
lea
push
mov
aaa
lcall
faddl
xchg
add
imul
sti
add
push
aad
sbb
mov
sbb
pusha
cmp
icebp
fisubrs
rcll
in
pop
sbb
and
aaa
dec
aad
inc
mov
es
fwait
insl
lea
sub
xchg
lea
jg
or
es
inc
inc
add
mov
inc
shrl
scas
fwait
dec
aad
aam
pop
push
sbb
loop
and
dec
gs
xchg
mov
ljmp
and
xor
mov
movsb
lcall
lock
adc
push
jg
movsl
push
mov
gs
add
inc
icebp
imul
mov
cmpsl
jl
jle
cmpsl
jle
sti
jae
repz
imul
mov
xor
pop
stos
rorb
mov
xor
lock
pop
in
inc
lods
es
jns
sub
push
and
rorb
sahf
bound
inc
inc
idivl
sub
xchg
call
push
mov
icebp
sub
icebp
adc
inc
test
adc
mov
fadds
cmp
inc
mov
pop
mov
push
cs
mov
fsubl
addr16
dec
push
ret
bound
mov
clc
jle
mov
and
fsubrl
ret
cld
les
jl
pop
xor
add
lods
std
inc
lea
test
push
sbb
pop
dec
and
cs
mov
in
or
scas
jnp
fmuls
int
sub
shlb
or
loope
mov
or
add
sahf
es
cld
les
outsb
sbb
lret
pushl
stc
movsb
cld
cmc
push
shll
aas
and
or
inc
or
pop
sbb
add
push
test
pop
sti
popf
or
mov
clc
push
sahf
jg
fildll
sbb
test
stc
scas
sbb
filds
push
test
sub
sub
mov
xadd
add
ror
dec
in
xor
andl
int3
jmp
sbb
shrl
hlt
dec
ss
jg
lret
adc
aas
xchg
loopne
popl
push
rclb
leave
dec
in
mov
pop
add
sbb
imul
ss
push
push
mov
fildl
je
in
out
add
out
out
outsb
inc
lds
or
in
js
shll
or
jge
ja
pusha
xor
xor
sub
fsubrs
test
cmpsb
pop
bound
cmc
aaa
push
rcr
dec
mov
int3
xchg
cld
push
jmp
fistl
mov
cmp
fidivl
hlt
std
xchg
mov
cmp
sarb
jns
inc
push
mov
xchg
jg
movsl
sub
inc
jl
ljmp
loope
test
mov
push
pop
pop
mov
push
loope
dec
pop
push
xchg
dec
mov
mov
stos
and
push
aas
incl
in
jecxz
popa
add
cwtl
jne
adc
and
jae
rcr
xlat
test
fwait
and
enter
rcll
add
cmp
fisttpl
pop
sti
adc
iret
gs
push
icebp
cwtl
xchg
push
or
fs
push
push
call
or
fnstenv
and
loope
ds
aaa
cs
push
mov
cli
pop
andb
out
mov
jecxz
sbb
cmc
sub
mov
inc
mov
jb
jecxz
dec
bound
out
xor
xor
sub
test
ljmp
or
sbb
ss
pop
dec
and
int3
in
xchg
push
push
jae
jl
cltd
insb
scas
inc
or
outsl
xchg
stos
jno
pop
xchg
aas
insb
adc
dec
mov
jb
or
xchg
or
insb
insl
mov
arpl
sub
bound
movsb
ficomps
inc
stc
sub
loopne
push
adc
insb
les
jno
add
xchg
adc
sbb
push
inc
jb
mov
pop
ficompl
lock
push
dec
sub
mov
ret
push
sar
loope
imul
push
test
inc
inc
inc
push
cmc
jg
dec
adc
mov
xor
add
pop
xchg
pushf
enter
xchg
fistps
jecxz
jns
test
inc
popf
mov
insb
jo
sub
pop
fdivs
imul
xchg
mov
enter
cmp
push
fildl
mov
push
jge
mov
addr16
and
ljmp
pop
jp
out
and
ja
call
cwtl
mov
mov
or
leave
test
lahf
sub
mov
jle
rep
inc
movsb
xor
mov
sbb
cltd
mov
push
push
pop
xchg
insb
cmp
cli
mov
mov
and
or
shrb
out
cltd
ret
jl
and
fcmovnb
jmp
ret
fcomps
jns
inc
pop
mov
xchg
adc
mov
mov
or
cld
test
cli
cli
lods
dec
inc
cli
inc
ljmp
fldenv
popf
decl
neg
dec
cld
mov
lret
lods
add
test
add
shll
jmp
lock
stos
sub
jne
stc
jecxz
insb
das
mov
adc
jp
adc
mov
or
stos
xor
call
shrl
addr16
pop
and
and
iret
jne
popf
hlt
repz
pop
das
leave
push
int3
pop
pop
mov
add
lds
jmp
mull
sbb
rolb
push
out
iret
repz
mov
mov
push
insb
pop
mov
addr16
xor
push
pop
fdivs
sub
mov
push
dec
arpl
fisttpl
in
rorl
or
push
cmpsl
ret
pushf
repz
rolb
call
xchg
jle
mov
xchg
mov
or
xor
arpl
test
push
loop
popl
inc
in
adc
rorb
push
xor
jmp
idivb
sarl
je
adc
je
pop
sbb
push
outsb
pop
mov
sub
lock
or
jb
inc
imul
sub
xchg
jecxz
mov
dec
add
pop
mov
pop
pop
xchg
std
add
xor
sub
pop
mov
les
sbbl
stc
xor
pusha
jp
push
mov
xchg
mov
rcrl
nop
jae
outsl
xchg
repnz
dec
sti
rcl
rclb
push
mov
shlb
int3
and
insl
fstps
pushf
cltd
cmp
mov
mov
inc
insl
test
aam
jns
mov
arpl
mov
cmpsb
nop
test
adc
insb
and
xor
jl
jno
cmp
cltd
inc
mov
xchg
push
and
adc
add
lcall
pop
and
shlb
aaa
and
rclb
lock
out
ret
out
push
push
addr16
nop
add
add
push
cwtl
daa
xorb
inc
test
pop
pop
gs
lods
stc
aam
lcall
dec
sti
or
sub
popl
sti
add
push
mov
std
inc
mov
stos
inc
xor
xor
fildl
adc
sub
test
imul
mov
nop
pop
std
xor
daa
mov
sub
mov
dec
adc
stc
or
nop
clc
jo
sbbb
or
or
rolb
sbb
mov
inc
aam
pop
leave
out
add
cld
imul
mov
or
mov
dec
jno
pushf
jg
adc
cs
outsb
fistl
cmp
ss
mov
jae
or
mov
fdivl
or
xrelease
outsl
testl
dec
push
cld
outsl
mov
loope
cmp
xor
inc
loope
out
or
stc
cwtl
inc
mov
push
mov
sbb
and
xchg
sub
ficompl
sahf
xchg
or
xor
lcall
mov
xchg
stos
mov
outsb
lcall
gs
mov
jbe
cmp
push
mov
ss
aad
pop
cmp
push
nop
addr16
add
mov
mov
mov
daa
pop
icebp
mov
into
ds
out
cmpsb
xchg
test
out
push
lea
mov
push
adc
cmp
fimuls
jnp
pop
js
js
push
jmp
popa
mov
test
fildl
dec
lcall
cmp
clc
ljmp
sub
cmp
add
loope
add
jns
mov
fildl
pop
mov
push
push
neg
push
imul
bound
mov
sbb
mov
sbb
mov
lea
pop
pop
push
incl
ret
in
mov
mov
testb
sbbl
push
ljmp
je
divb
push
or
out
jae
mov
adcb
jp
mov
adc
jo
loope
xor
scas
loop
enter
mov
inc
out
dec
inc
int3
into
insl
jg
push
adc
sub
imul
xlat
adc
push
lods
ss
mov
xor
outsl
cmp
mov
aas
pusha
inc
fcomp
jge
rorl
leave
adc
out
xchg
ljmp
ss
in
pop
or
gs
xchg
push
pop
xorb
daa
or
in
loop
add
fiaddl
jne
cld
mov
lea
js
sbb
push
iret
add
push
push
lea
clc
mov
mov
xor
jg
xorb
pusha
xchg
jle
cltd
mov
pop
inc
imul
cs
cmp
jo
sbb
add
push
sbb
xchg
mov
in
jp
adc
sbb
push
jmp
sbb
data16
ja
scas
push
andb
xor
add
sub
lock
mov
fidivl
js
inc
loop
jno
ret
jno
or
or
ja
inc
jecxz
or
das
aad
adc
frstor
cmp
add
add
or
pop
in
daa
in
adc
es
int
inc
sbb
xchg
icebp
inc
jb
test
mov
mov
push
mov
movsb
mov
sbb
mov
push
nop
adcl
mov
pop
mov
shrb
cs
imul
cmpb
daa
jecxz
loope
sub
outsb
adc
sar
mov
nop
or
rorl
aas
lahf
jnp
pop
in
inc
fldt
sub
js
mov
add
inc
out
jnp
dec
sub
sbb
incl
jmp
subl
lods
outsl
movsl
dec
push
adc
or
gs
pop
sti
lea
mov
ljmp
fldt
sbb
adc
mov
push
lea
add
movsb
pop
icebp
lea
xchg
leave
and
push
push
ljmp
pop
xchg
enter
xchg
out
lret
add
mov
repnz
les
and
adc
mull
inc
cmp
mov
push
aam
stos
cwtl
dec
xor
dec
or
scas
and
xor
jns
test
xor
aaa
dec
fdivl
iret
pop
or
mov
test
mov
dec
cmpsb
pop
iret
aam
and
fbld
popa
ss
pop
pop
inc
inc
sub
stc
hlt
xchg
movsb
xchg
jo
dec
adc
jnp
mov
push
cmp
test
jno
add
js
inc
jbe
xor
inc
fwait
stos
push
sub
or
inc
mov
xchg
mov
mov
mov
xor
mov
and
or
or
ss
add
xor
lock
adc
out
mov
mov
dec
stos
xchg
sub
xchg
daa
popl
movl
out
pop
push
dec
ja
push
jae
pop
rcl
adc
push
sub
or
adc
les
mov
lock
or
xchg
add
mov
decl
pusha
sbb
adc
cli
pop
arpl
mov
jno
gs
mov
clc
mov
dec
mov
jbe
test
jl,pn
push
xchg
lea
fndisi(8087
ljmp
and
and
mov
mov
outsl
fucomip
orl
push
inc
push
stos
js
rcll
cltd
leave
jne
cmp
ss
std
cmpsl
add
ror
add
pop
pop
addr16
push
cld
in
mov
setno
jns
rcl
scas
aas
xor
xchg
stos
adc
insl
out
lea
mov
nop
inc
mov
mov
or
dec
fmull
push
dec
dec
mov
jge
sti
mov
xchg
mov
jo
push
jle
or
clc
pop
imul
push
pusha
shll
or
add
bound
loopne
repz
lods
xchg
test
loopne
push
rorb
repnz
mov
pop
jmp
movsl
outsb
aas
lock
fsub
jmp
popf
or
mov
inc
or
inc
cmp
add
iret
scas
lahf
inc
mov
sub
or
jg
ret
fsubrs
aad
and
add
clc
in
adc
nop
push
test
rorb
jbe
je
xor
cmp
jle
fcomip
pop
jns
mov
jno
fdivs
movsb
mov
inc
lcall
ss
xchg
adc
sbb
add
mov
rolb
stos
add
and
mov
inc
addr16
adc
jno
cmp
jae
inc
jbe
sahf
and
push
add
jge
sub
sbb
inc
pop
mov
jg
call
ret
ja
jns
in
inc
movsb
outsb
xchg
js
fidivrl
mov
mov
movb
bound
mov
popf
mov
imul
jmp
in
inc
dec
sbb
in
dec
jg
sub
in
xor
adc
enter
pop
je
pop
xchg
pop
cmpsb
lret
cli
adcl
ss
add
into
pop
sub
insl
add
cmpsl
mov
and
insl
pop
bound
mov
adc
incl
sub
mov
mov
sbbb
nop
nop
dec
push
inc
sbb
shrl
pop
pop
and
push
mov
cmp
stos
les
js
shlb
xor
das
enter
pop
shrl
add
loope
xchg
insb
push
outsb
lock
iret
test
push
test
and
jl
pop
es
mov
jbe
icebp
sbb
das
push
outsl
movsb
mov
or
outsl
xchg
inc
and
mov
into
out
jns
adc
fisubrl
sbb
and
jle
or
outsb
js
fcoml
insl
add
repnz
and
icebp
andb
xor
push
cli
js
orb
mov
adc
sub
lock
inc
into
test
mov
jl
scas
xchg
mov
pop
mov
std
insl
daa
aam
cmp
fistpl
nop
sbb
ja
pop
inc
daa
in
mov
xlat
cmpsl
lock
jbe
xchg
jge
jae
inc
rolb
sub
mov
lock
add
mov
add
in
mov
mov
jle
outsb
into
cld
lea
xor
adc
sbb
mov
data16
pop
loope
pop
lea
adc
mov
mov
xchg
aad
push
subb
sahf
or
pop
stos
cltd
mov
movsl
cmpsl
addl
xchg
loopne
pop
fiaddl
testl
sbb
cmp
dec
cs
imul
inc
inc
das
cld
pop
gs
pushf
inc
adc
push
aas
cmp
fstps
shl
loop
test
mov
dec
fnsave
add
mov
pop
mov
lret
cltd
add
adc
xchg
push
sbb
sub
cmp
cmp
add
rcr
shlb
jbe
call
call
test
push
hlt
test
sbb
and
mov
mov
mul
sub
xchg
shlb
ljmp
insl
adc
ja
mov
icebp
pop
ret
pop
daa
mov
adc
inc
aam
sar
mov
sub
cmp
adc
mov
cmpsb
or
mov
ljmpw
icebp
mov
sbb
dec
movsb
xchg
mov
iret
cwtl
or
icebp
inc
sub
clc
xor
dec
push
add
leave
or
inc
movsb
push
pop
xchg
stos
mov
inc
in
dec
addb
sub
push
dec
fiadds
jg
dec
sbb
adc
nop
ror
jmp
inc
iret
out
inc
sub
inc
movsl
adc
dec
adc
add
popa
cld
ror
stc
hlt
mov
push
sub
gs
insb
aas
icebp
and
mov
sbb
inc
sbb
sti
je
sub
std
jns
enter
fsubrl
xor
mov
xor
dec
and
je
inc
or
shll
pop
inc
loopne
stos
lea
push
xor
std
mov
outsl
ljmp
xor
cmp
and
scas
int
lret
xchg
adc
daa
fildl
in
pop
out
std
lea
movsl
cmc
in
lods
adc
ret
js
mov
test
lods
addb
adc
loopne
mov
movsb
push
jb
aam
cmp
sub
push
xor
insl
and
and
je
ja
enter
and
mov
cli
and
cld
fbstp
mov
add
call
aas
mov
movsl
es
repz
mov
mov
push
xor
push
loop
pushl
xchg
mov
ss
cmp
stos
sub
aaa
sbb
pop
xchg
inc
sub
push
push
dec
insb
push
outsb
xchg
mov
push
js
mov
dec
cld
je
or
enter
ja
imul
ljmp
jl
add
cmp
inc
and
lret
rol
push
jno
je
push
daa
xlat
test
inc
dec
movl
add
push
jne
shr
ljmp
sbb
cwtl
ljmp
rcr
sbb
aaa
ja
aas
and
js
sbb
inc
fidivrl
fisubl
add
pop
and
mov
jg
fnsave
aas
hlt
push
leave
dec
fisttps
xchg
fistl
push
ljmp
pop
lahf
lcall
mov
inc
movsb
jge
rol
shll
dec
loopne
pop
fisttpl
rcrb
mov
pop
je
push
sub
cmc
insb
jae
mov
push
ljmp
lock
inc
push
and
jo
dec
push
cmpsl
sbb
mov
loope
call
es
sub
negl
pop
pop
push
inc
add
mov
add
aam
aam
xor
imul
pusha
xor
or
mov
lea
daa
out
in
test
mov
dec
pushf
rcl
mov
xor
nop
push
mov
scas
mov
mov
inc
bound
adc
add
sub
mov
roll
arpl
sub
clc
add
inc
dec
sub
jmp
ss
jns
dec
lcall
adcl
cmpsb
lahf
into
push
add
sti
adc
cmpsl
fimuls
xchg
sarl
mov
js
mov
ja
add
lahf
mov
cwtl
or
push
ja
mov
insb
inc
sbb
xlat
cmc
lds
cld
insl
mov
adc
adc
dec
fwait
sub
push
inc
mov
leave
sbb
repz
push
fwait
lahf
mov
leave
xchg
fdivrl
iret
push
jo
outsl
scas
nop
pop
cmp
or
jecxz
pop
idiv
inc
and
jge
sbbb
or
aam
sub
test
daa
daa
js
xchg
add
jo
daa
or
cmp
bound
mov
sbb
lahf
orb
cmp
sbb
cwtl
pushf
pusha
xchg
ljmp
ret
fdivr
jbe
pop
popf
icebp
repz
fsubrs
and
add
pop
mov
lea
orb
loopne
ficoml
das
aaa
sub
fnstcw
jbe
inc
imul
pop
mov
shlb
fnstcw
add
mov
popa
adc
aad
fcmovnb
ret
enter
shll
dec
fistl
pop
fucomi
dec
pop
movsb
adc
lock
lea
sbb
cmpsl
add
lods
push
and
mov
out
aas
cmpsl
cmpb
adcb
in
hlt
and
cmp
cs
ret
inc
fsubrl
mov
or
gs
nop
and
jecxz
inc
adcl
xchg
pop
xchg
sub
pop
rorl
inc
lock
mov
cmp
outsl
into
pop
addb
and
test
mov
inc
xor
pop
fsubrs
iret
arpl
xchg
bound
add
mov
js
fstps
fs
inc
je
jmp
fwait
inc
jae
or
je
xchg
jl
xor
push
fcmovb
lea
xchg
mov
mov
push
call
idiv
pop
inc
xchg
ds
xor
cld
xchg
adc
lods
addl
mov
mul
add
fdivp
add
popa
push
in
push
sahf
mov
and
sub
xchg
mov
shlb
arpl
pop
in
comiss
pop
add
fstpl
mov
dec
testb
adc
fwait
dec
fistl
lahf
fildl
mov
or
popf
jae
push
xchg
out
into
lea
sbb
roll
push
or
fstpt
into
xchg
jp
scas
mov
cwtl
orb
push
push
mov
xor
pop
movl
lret
loopne
mov
mov
nop
adc
inc
mov
push
popf
std
lods
jmp
dec
lods
cmpsb
mov
stos
cmp
and
cmp
loope
jo
push
or
cmpsb
aas
lcall
cld
ja
push
int3
fs
push
or
add
dec
fcmove
imulb
leave
scas
push
and
add
inc
es
push
push
pop
xor
dec
bound
test
pop
and
wbinvd
testb
mov
add
mov
fldenvs
icebp
jmp
fisttpl
into
jmp
insb
scas
jp
bound
cmp
inc
adc
les
mov
push
and
bound
jbe
push
subb
sub
ss
adc
jb
rcrb
sub
insl
mov
adc
repnz
dec
mov
dec
adc
insb
mov
aam
jg
cmp
fwait
jno
js
shr
fcmovu
or
addr16
inc
test
or
sub
sbb
push
xor
imul
in
mov
adc
add
add
divb
mov
insl
imul
jl
and
adc
sub
ficompl
sbb
icebp
insb
gs
mov
mov
aas
lret
mov
mov
std
das
push
cwtl
adc
imul
fldcw
in
bound
jl
adc
mov
les
sti
cmpsl
cmp
scas
mov
popa
ret
jmp
mov
lods
mov
lods
test
xchg
orl
xchg
test
and
sbb
ret
or
adc
sub
cmp
mov
sbb
adc
repz
fistpll
sarl
loopne
fdivs
in
and
sbb
inc
xchg
rolb
and
inc
lods
pop
push
mov
xchg
inc
arpl
cmp
push
pop
mov
aaa
ss
insl
ret
ret
hlt
outsl
xchg
or
adc
nop
loope
jle
fisttps
insl
or
loope
frstor
pop
mov
fildl
shr
cmp
sbb
adc
cltd
inc
in
icebp
outsl
push
jge
add
pop
fnstcw
repnz
ljmp
mov
insl
xor
mov
fiaddl
iret
jmp
arpl
shll
pop
push
and
subl
pusha
xchg
aad
push
xor
mov
cmp
pop
mov
and
mov
icebp
jg
mov
jne
fcomi
out
ja
sub
adc
pop
ljmp
jne
dec
dec
movsb
shll
jne
icebp
shlb
das
inc
scas
icebp
or
dec
sbb
mov
sub
inc
adc
rol
movb
dec
inc
test
lds
push
adc
mov
insb
hlt
fsubs
mov
fbstp
xchg
shlb
fs
ljmp
arpl
loope
outsl
and
mov
movsb
fisttpl
popa
mov
fdivrs
mov
push
std
dec
pop
sub
pop
jl
inc
push
fcoms
cwtl
jl
stos
add
add
mov
mov
adc
adc
jge
outsb
mov
ret
dec
sub
xor
fbstp
jmp
cmp
lcall
xor
sbb
xchg
xchg
xor
loop
mov
mov
pop
popa
into
jmp
mov
sbb
shrb
das
jns
add
add
xor
sahf
xor
mov
mov
test
sbb
leave
aad
mov
into
fiaddl
aas
jne
mov
sub
bnd
push
sbb
insl
push
mov
push
mov
imul
and
dec
hlt
push
pop
clc
inc
pop
addr16
mov
lahf
cwtl
mov
push
pop
mov
insl
fildl
or
xor
ja
fucomip
or
mov
out
into
push
popf
adc
sub
cmpsb
mov
jecxz
lret
push
clc
cmc
test
mov
ljmp
lock
lds
shl
les
rol
icebp
sub
andl
daa
daa
loop
fists
out
mov
int
pushf
stos
pop
mov
ljmp
jns
cli
daa
stos
adc
mov
mov
push
mov
pop
gs
loope
push
in
push
nop
sbb
xor
aad
xchg
fnsave
xchg
imul
push
add
jp
insb
ljmp
sub
pop
incl
lret
les
mov
pop
out
fldl
repnz
and
mov
clc
add
inc
jo
xorl
leave
aad
arpl
mov
adc
popa
lret
mov
and
out
dec
ss
mov
xchg
fstpt
aam
divb
stc
lock
stos
mov
ficompl
fs
aad
mov
add
sub
pop
mov
jmp
into
sarb
rcll
mov
pop
call
xchg
mov
sbb
mov
mov
pop
or
cmp
add
shl
adc
dec
ret
xchg
popf
out
mov
cmp
or
inc
insl
fstpt
stc
ljmp
int3
add
mov
popa
nop
mov
ja
std
fbstp
scas
dec
and
lret
xor
sbb
or
div
xchg
hlt
aas
fistl
sub
adc
and
mov
pushl
push
inc
jge
mov
lock
push
iret
cmp
adc
outsl
inc
out
xor
mov
std
xor
xor
mov
paddsb
rol
pop
and
sub
aaa
mov
push
push
je
cmp
fwait
movsb
test
jne
mov
or
int
push
rolb
pusha
jne
push
fcom
dec
xchg
jo
cltd
enter
call
adc
jmp
std
xchg
pop
jo
test
push
jp
out
and
inc
or
xor
dec
pop
cli
mov
mov
mov
push
loope
cmpsl
insl
mov
call
aam
xor
fwait
mov
pop
pop
push
cmp
jle
mov
cmp
jmp
daa
xchg
or
shrb
inc
mov
or
shlb
fistpll
xor
push
mov
pop
pushl
jle
ficoml
add
inc
ss
cmp
iret
shlb
test
sahf
ss
and
fcmovnu
stos
jnp
push
push
out
sub
fildl
sbb
nop
mov
pop
outsb
mov
or
adc
xor
xchg
inc
push
push
jmp
pop
mov
loope
in
xchg
rorb
fs
stos
in
mov
out
xor
inc
fstpt
std
ja
ret
xchg
add
pop
mov
clc
test
jge
ss
pop
hlt
xchg
aas
push
jno
sub
xor
mov
add
divl
inc
mov
pop
cmp
pushl
adc
and
push
xchg
sub
lea
jecxz
loop
fbld
loopne
mov
push
popf
inc
lds
add
add
fwait
lret
inc
sub
sub
daa
mov
cmp
push
cmpsl
mov
lret
jecxz
dec
mov
sti
lea
aam
inc
jp
fidivrl
sub
inc
jp
xor
or
sahf
and
fs
loop
and
dec
inc
subb
push
popa
popa
test
jp
and
test
rolb
dec
cmp
push
fstp
or
stc
sbb
adc
call
xchg
jg
inc
mov
lcall
xchg
and
mov
mov
sahf
push
xor
mov
mov
jecxz
test
push
inc
in
adc
sbb
loope
mov
xor
xor
shl
inc
xchg
fiaddl
fsqrt
insl
movsb
sub
lea
imul
fiadds
xchg
mov
scas
ss
jg
cld
dec
mov
jns
inc
push
lock
data16
and
rcrl
rorl
xor
fnsave
add
mov
sbb
mov
das
sub
addr16
adc
pusha
adc
fstp
sub
lock
inc
sbb
sbb
adc
lcall
push
mov
push
mov
loope
inc
xchg
adc
jbe
xor
cmpb
addb
mov
pop
repnz
shll
into
cmp
mov
or
leave
sbb
popa
imul
push
xchg
mov
mov
push
aam
dec
push
inc
psllq
lds
mov
cmc
mov
cmpsl
jbe
mov
aas
push
inc
test
mov
gs
std
mov
aad
inc
inc
ss
mov
data16
sbb
in
and
cs
xchg
xchg
sahf
stos
fistpl
or
es
lds
std
iret
pop
sub
cmp
ret
sti
mov
adcl
aad
mov
ret
daa
or
xchg
outsb
dec
dec
jb
lret
xlat
push
stc
add
pop
jge
divb
popa
sub
cmpsb
stos
jae
fsubrs
inc
jmp
and
addb
repnz
and
fstps
xor
stos
icebp
pop
pop
imul
mov
sbb
xor
mov
mov
adc
fs
add
mov
mov
loope
ret
or
ss
pop
mov
pushl
pop
scas
mov
xchg
lahf
and
loopne
jno
sub
push
divl
insb
outsl
sub
ret
inc
mov
sbb
jmp
sub
test
fisubs
ret
mov
inc
out
cmp
dec
jb
push
adc
pop
mov
jp
mov
pop
adc
cs
lods
mov
or
or
in
sub
sbb
enter
adc
shlb
mov
mov
mov
pop
fucomi
mov
jbe
inc
adc
or
out
cmp
mov
clc
fucomp
ja
push
jnp
aad
push
mov
outsl
es
inc
push
repnz
insl
shl
dec
ja
adc
jae
or
ss
xchg
mov
inc
inc
fstpt
adc
outsb
jl
fcmovnbe
jecxz
fisttpl
sbb
and
push
or
dec
sub
cmp
inc
aaa
xchg
lret
cli
mov
iret
and
add
sub
shll
jmp
xor
cmp
mov
sub
lods
mov
psrlw
arpl
push
stos
ja
icebp
inc
mov
dec
outsl
test
lods
and
in
scas
pop
mov
inc
push
push
clc
ja
and
xorl
repz
xchg
mov
in
mov
sbb
pop
adc
int
popa
jmp
fsts
pop
les
sbb
shrb
fists
jae
ret
fcomp
dec
fisubrl
rcrb
inc
insl
inc
negl
mov
scas
inc
mov
repz
lock
popa
sub
insl
inc
jo
and
in
mov
aam
fs
aam
pop
stos
std
inc
loopne
inc
mov
xor
stos
or
pop
add
mov
fnstsw
dec
pop
add
mov
push
dec
jmp
out
dec
push
jg
add
jno
mov
mov
ljmp
adc
sub
sbb
mov
daa
in
test
enter
adc
add
movsb
int3
mov
test
sti
aaa
sbb
andb
inc
push
cmpsl
out
fidivrs
add
je
daa
shr
xor
push
aaa
cmc
mov
cwtl
leave
ret
or
rep
and
pop
ss
test
ljmp
and
sti
daa
scas
js
imul
jmp
dec
fwait
adc
les
loopne
jne
in
loope
fcomi
jg
fadd
mov
jo
adc
jo
in
pop
dec
pop
pop
push
pop
movsb
inc
je
es
loope
mov
add
insl
mov
outsl
js
sub
push
leave
dec
pop
popf
push
aaa
xchg
bound
cmpsl
jmp
dec
sbb
dec
lcall
lods
aas
push
vpunpckhbw
dec
cmpsb
pop
push
inc
push
jno
mov
lcall
push
or
lds
dec
push
xor
pop
xchg
sbb
sbb
or
xchg
sbb
decl
dec
fs
xchg
pusha
ljmp
xor
sub
mov
hlt
cld
xor
sbb
je
test
lods
je
jl
xor
stos
mov
push
inc
rol
lods
add
pop
out
fidivl
jle
jne
add
fldt
repnz
dec
je
sbb
hlt
lea
cmp
sbb
decl
push
add
je
fsts
outsl
lds
popf
or
jns
int3
sahf
pop
or
pop
sbbb
and
loopne
imul
jecxz
add
xchg
sti
jg
sahf
mov
int3
and
mov
inc
mov
iret
jecxz
push
dec
mov
ficoml
pop
std
adcb
mov
das
insl
sub
push
inc
add
aad
push
loope
cld
scas
dec
cltd
enter
add
fcoml
push
sahf
movsl
and
sbb
push
and
or
outsl
pop
call
popa
test
xor
andl
outsb
mov
jb
sbb
pop
jno
sbb
and
nop
adc
sbb
cmp
push
clc
lret
add
rcr
lds
ljmp
sub
cmp
jo
sbb
sub
mov
pushf
lea
mov
sub
mov
rclb
into
mov
flds
nop
fsubrs
mov
jmp
inc
imul
or
sbb
push
das
xor
inc
fldt
push
sub
scas
lds
jg
incl
popa
stos
sti
out
stos
in
ficoml
ss
pop
in
jg
lods
sbb
xchg
mov
subb
rcll
mov
inc
je
pop
loope
fstpl
out
sbbb
fistl
pusha
and
test
sub
xchg
jae
lcall
ljmp
mov
inc
and
xchg
jno
adc
add
xor
mov
adc
cmpb
mov
orb
xor
mov
xchg
dec
cmp
sahf
fwait
jmp
mov
push
mov
sub
and
jle
xlat
push
or
ljmp
cmpsb
or
fcoml
fstpl
and
fisubl
arpl
xchg
flds
xchg
hlt
add
xchg
ficompl
jge
popl
das
scas
cmovo
vmovd
jg
push
stos
jmp
xor
mov
push
inc
shl
jnp
std
jg
pop
fs
sarl
add
and
mov
sbb
divb
enter
push
pop
icebp
or
pop
mov
mov
xor
subb
pop
mov
sbb
or
clc
pop
shrb
jg
add
sub
loope
mov
popa
dec
pop
xor
push
jg
stc
data16
mov
dec
popa
pushf
pop
xchg
push
dec
sub
dec
dec
mov
pop
mov
clc
dec
das
cmp
or
inc
jg
mov
inc
push
clc
rorl
fistpll
data16
insb
push
jl
fmuls
sub
shrb
icebp
in
pop
sub
arpl
test
in
xor
pop
mov
adc
in
mov
xchg
mov
jl
icebp
js
mov
aad
cmp
mov
pushf
cs
lcall
or
lret
aam
aad
mov
mov
push
sbb
je
pop
push
sbb
in
sub
call
rep
cmp
mov
fcomi
fildll
pusha
inc
adc
push
sbb
arpl
out
mov
pushf
ja
jb
or
mov
cmpsl
rorl
jmp
mov
sub
add
out
cmp
dec
ret
jne
mov
outsl
inc
mov
adc
and
shll
dec
mov
push
outsb
xchg
rorl
rolb
push
fmuls
test
aad
xor
icebp
ss
inc
rcr
add
cmc
mov
call
mov
push
cs
sbb
fwait
iret
loopne
mov
insl
pop
aaa
outsb
std
mov
jl
into
inc
and
push
sub
mov
or
insl
call
pushf
sbb
and
test
inc
pop
les
xor
std
dec
pop
pop
fsqrt
push
cli
outsl
mov
popa
mov
outsb
xor
sbb
int3
loope
outsb
mov
rcll
rol
jns
sbbl
mov
fs
call
sub
push
lcall
clc
push
add
lea
xchg
clc
movb
mov
pop
in
sbb
push
mov
inc
pop
mov
jecxz
inc
mov
or
dec
incl
in
cmpsb
dec
stos
loope
imulb
scas
mov
pop
cld
incl
mov
sub
iret
cmc
mov
dec
jne
push
mov
fsubrs
and
sbb
fildl
and
testl
inc
dec
cmp
jne
std
aaa
mov
test
and
adc
and
sub
mov
jno
sub
out
jle
jns
mov
enter
cmp
iret
and
out
mov
dec
dec
ficoml
mov
icebp
sbb
xchg
arpl
push
shr
xchg
add
enter
push
or
push
outsl
out
xor
add
sub
aam
pop
loop
ja
inc
scas
xor
pusha
pop
add
inc
icebp
mov
out
xor
push
std
fbld
or
sub
add
out
mov
jbe
mov
rcrl
test
or
fadds
and
inc
hlt
ret
cmpsl
inc
dec
jl
sub
cwtl
xor
mov
inc
xchg
sti
push
xchg
or
push
pop
addr16
pop
out
out
divb
push
add
bound
jecxz
cmc
mov
into
test
push
lret
mov
push
dec
cmpsl
push
xchg
mov
clc
mov
insl
aam
or
jmp
cmp
in
in
sub
out
mov
push
push
jb
adc
daa
lahf
mov
mov
test
jl
sbb
inc
shl
xor
out
mov
iret
xchg
bsr
cltd
mov
daa
xor
jle
push
sti
add
jmp
fldenv
xchg
aad
inc
jmp
fimull
mov
add
or
scas
xor
cmc
jge
pop
mov
test
fadd
pop
repnz
aas
inc
insl
sub
push
negl
insl
mov
adc
std
inc
icebp
out
add
pop
inc
xlat
or
fwait
sbb
mov
dec
ja
cmc
cld
mov
or
lahf
mov
xchg
adc
aas
js
pop
push
pop
and
pop
in
cwtl
push
dec
or
mov
cld
fldt
cld
jle
scas
mov
xchg
inc
cld
inc
add
lock
data16
push
in
or
or
imul
sti
sbb
and
push
enter
mov
pop
sub
test
repnz
push
adc
pop
or
scas
cmp
add
xor
rdpmc
aad
dec
xchg
jnp
sbb
dec
hlt
add
xor
aas
or
mov
sub
adc
adc
lret
shll
add
pop
push
adc
cmp
inc
sub
sub
cld
movsb
dec
sbb
push
sti
jo
in
xorb
sbb
cli
mov
mov
mov
outsl
leave
insl
mov
lcall
xor
das
gs
fcomip
jp
mov
movsb
and
sub
push
jb
push
stos
in
imul
xor
popf
push
sti
xchg
pop
xchg
clc
xchg
cmp
pop
ret
jne
cmp
loope
xchg
outsb
subb
and
xor
cli
mov
cmp
xchg
dec
jge
icebp
mov
out
int3
or
push
add
js
sbb
sbb
inc
lods
inc
stc
mov
movsb
sbb
push
jb
iret
idiv
pop
mov
inc
sub
xlat
sbb
sub
dec
adc
xor
outsb
cld
and
add
xor
sub
xor
xchg
adc
imul
or
bound
sbb
and
je
lea
pop
mov
nop
test
mov
les
add
xlat
inc
and
hlt
jne
addb
movsb
jo
test
sahf
mov
addb
and
cmp
fdivl
and
inc
sbb
mov
std
push
xchg
pushw
andb
pop
stos
pop
sub
mov
repz
clc
inc
stc
dec
fbstp
inc
popf
pushf
inc
dec
push
lods
xor
xor
ljmp
insb
ja
fidivrs
add
popf
or
sahf
xor
xchg
cmp
pop
ljmp
add
std
lods
add
jo
mov
arpl
mov
or
or
adc
pop
clc
nop
pslld
cld
xchg
out
fldenv
mov
std
incl
stc
sub
outsb
in
idivb
cli
stos
in
mov
cmp
stos
inc
fsubr
lods
adc
sub
rol
testb
sti
mov
cmp
sub
push
fistl
out
iret
pop
mov
pop
stc
push
pop
stc
push
or
jns
sub
lret
div
jo
cld
dec
je
jg
jae
mov
icebp
fistl
loope
insl
cmp
mov
pushf
add
sub
dec
sub
lret
lock
and
mov
popa
push
rcr
lds
cmp
hlt
das
les
sub
ljmp
testl
add
fidivrl
mov
sahf
or
jmp
jb
loope
imul
push
aas
push
and
cmp
xor
dec
call
imul
sbb
inc
jecxz
paddsw
daa
sub
dec
dec
mov
mov
jp
push
pop
js
sub
insl
sub
in
fwait
jp
clc
sub
int3
sbb
pop
call
or
pop
jle
jbe
pop
data16
dec
dec
hlt
shll
fdivr
cmp
test
jge
jmp
sbbl
bound
adc
mov
cli
xchg
stos
subl
and
pop
shll
jl
xor
jmp
divb
gs
test
cmpsb
xor
jmp
sbb
add
sub
fildl
mov
fs
push
lock
mov
push
insl
test
and
sbb
fldt
shlb
fisttpll
cmp
aas
imul
jp
icebp
mov
adc
xchg
push
cmp
mov
sbb
icebp
add
mov
pop
mov
in
cmp
cmp
imul
cmp
and
jmp
aad
lret
lods
add
inc
mov
lods
stc
fldcw
or
inc
lea
cmp
cmp
and
inc
pop
fadd
push
push
stos
or
insl
mov
or
mov
cmc
ja
xchg
rdpmc
mov
cli
call
inc
dec
pop
mov
arpl
fisubrl
push
pop
lds
gs
push
sub
insl
stc
xchg
add
cmp
sub
mov
sbb
sbb
movsl
cmp
sbb
ret
mov
and
insl
ret
lcall
jmp
aad
push
in
unpcklps
inc
les
fbstp
test
pop
jno
xchg
xchg
mov
push
loope
iret
sarb
sbb
dec
mov
or
stc
fs
dec
sbb
jp
adc
cmpb
xchg
mov
mov
frstor
push
movsl
loop
popa
pop
jns
repnz
mov
pop
ret
mov
fst
xlat
loopne
mov
ljmp
sbb
int
mov
les
shl
rcll
pop
mov
mov
add
sub
xlat
pop
mov
outsl
sbb
ror
stos
stos
and
lret
dec
in
add
in
pop
icebp
in
push
adc
mov
sub
pop
add
insl
fnstenv
sbb
out
mov
std
sbb
out
xchg
cltd
adc
mov
imul
xor
les
icebp
cli
ss
mov
in
push
push
insb
enter
add
adc
cmpsb
fsubrs
lock
lock
mov
xor
cmpsl
sub
sti
cmp
int3
adc
mov
aam
cmc
pop
es
cs
add
js
inc
mov
pop
or
cmc
outsb
addl
fnstsw
enter
pop
push
es
bound
aaa
jo
mov
in
jns
call
outsb
push
fdivs
adc
decb
insl
lahf
fadds
cltd
adc
fistpl
jae
dec
out
jo
faddl
jbe
bound
hlt
xor
mov
or
dec
idivb
add
insl
push
adc
ds
insl
imul
mov
push
and
jge
cmp
out
data16
lcall
adc
sub
pop
les
jle
sar
jp
inc
sub
fcmovnb
and
imul
out
incl
hlt
aam
and
sub
mov
jmp
cmc
cmc
sub
jle
lcall
push
cmc
shlb
xchg
arpl
inc
stos
push
test
xchg
xchg
mov
sbb
add
sti
and
je
xchg
or
push
push
xor
mov
inc
loop,pn
cwtl
popa
and
repnz
fisubl
inc
push
std
sbb
mov
and
pop
inc
insb
bound
pop
add
mov
lods
sbb
fidivl
sti
jbe
inc
icebp
out
sar
popa
fsub
nop
sub
lock
pshufw
push
fdivr
sbb
mov
cld
dec
or
arpl
dec
dec
push
push
add
mov
push
testb
lahf
xor
xchg
xor
jl
lcall
inc
fsubl
fdivs
mov
push
lcall
fldenv
in
mov
mov
into
jge
lds
ficomps
lods
sbb
mov
sbb
push
push
fisttpl
call
pop
add
mov
pop
lods
sub
in
pop
or
into
mov
int
adc
test
mov
lahf
mov
fs
rcrl
mov
mov
ss
loopne
push
int3
inc
pop
shlb
negb
xchg
insb
dec
sbb
dec
jp
or
je
in
popa
xlat
pop
xor
add
xchg
insl
jnp
or
and
aaa
movb
addl
fstp
xlat
sti
in
add
pop
dec
into
repz
xchg
lret
mov
int3
jae
inc
lea
test
cmpsb
addr16
pop
je
pop
lret
dec
rclb
in
ja
pop
sbb
jg
push
loopne
xor
test
jns
xchg
in
push
pusha
push
mov
incl
or
cmp
add
pop
dec
nop
dec
sarl
inc
jge
sub
stc
out
and
nop
push
jge
mov
mov
sub
mov
mov
and
sbb
scas
mov
and
addr16
out
xchg
push
or
pop
mov
jo
mov
aaa
jbe
ljmp
mov
sbb
adc
fcoms
sti
fnstenv
push
std
xlat
cmp
adc
gs
mov
and
jae
push
lock
das
dec
add
dec
pand
scas
inc
fistl
repnz
adc
fstpt
jb
pusha
jecxz
mov
mov
adc
fadds
pushf
and
clc
aam
repnz
test
mov
nop
adc
sbb
and
push
fcmovnu
ret
ljmp
jae
xchg
imul
into
sbb
lock
sub
lods
xchg
js
add
popa
mov
mov
ja
lret
dec
insl
jb
mov
mov
icebp
out
jbe
mov
dec
mov
xor
lds
fiadds
or
cli
or
outsb
test
mov
rclb
jnp
movsb
pop
add
sbb
dec
add
lea
adc
pop
paddusb
or
add
jl
mov
and
dec
insb
push
add
clc
jo
xchg
mov
push
pop
mov
sub
cmc
in
test
incb
jbe
stos
out
pop
cs
lods
or
mov
jnp
add
mov
arpl
test
lock
sbb
push
pop
jo
or
inc
fcmovnbe
mov
sub
push
mov
lds
call
push
js
lcall
ret
xchg
jno
ljmp
ja
call
loopne
inc
test
pop
xlat
add
aad
fcomp
xchg
je
inc
jo
ret
in
sub
xor
mov
pop
mov
pop
sbb
loopne
test
or
sahf
lods
xchg
sbb
jae
add
jbe
adc
xor
testb
ds
cmp
sbb
pop
pop
ret
stc
int
out
mov
cmp
clc
and
dec
out
or
jmp
fcomps
dec
orl
test
xor
popa
insb
in
fldt
cmp
cmc
das
mov
pop
mov
shrb
insb
or
sub
inc
pop
cmp
cli
nop
jmp
sbb
cs
cmpsl
and
and
out
jg
add
xor
rcll
dec
orl
in
es
jb
daa
push
and
sbbl
lea
lahf
pop
orl
popf
sbb
add
push
jp
cmpsl
xchg
fidivrs
mov
insl
insl
jae
mov
into
into
push
movsl
lock
pusha
cmp
clc
adc
add
jle
and
sbb
aaa
nop
leave
xchg
stos
fsubrs
fiadds
imul
out
pop
xlat
xchg
pop
adc
mov
lods
mov
in
and
sbb
fisttps
xchg
aaa
mov
fdivr
inc
fwait
xchg
jge
jmp
dec
stc
gs
xor
aam
mov
mov
jns
sub
inc
push
aaa
xorb
add
and
jb
fcomps
mov
dec
adc
test
clc
xchg
mov
aam
mov
roll
fsubrs
sbb
aam
ret
pop
aas
push
add
mov
fisubl
add
inc
rorb
std
adc
gs
mov
mov
lock
test
add
arpl
loop
cli
hlt
cltd
xor
mov
mov
sbb
lret
mov
cmp
rcl
push
scas
push
pop
jp
mov
cmpsb
pop
lds
mov
xchg
std
and
mov
inc
xlat
cs
mov
sbb
inc
sub
jg
sbb
dec
out
add
mov
insb
dec
mov
testl
jno
mov
adc
ret
jg
aam
adc
dec
and
and
dec
jmp
loope
inc
mov
jmp
pop
lea
leave
or
xor
jg
sub
xchg
adc
loopne
lcall
mov
outsl
fildl
andb
movsb
push
outsb
out
dec
mulb
jecxz
jo
mov
xchg
adc
insl
mov
insb
lock
std
or
rolb
xor
cmc
adcl
jle
aad
dec
aam
in
loopne
arpl
jns
pop
repz
adc
xchg
cmpsl
adcb
outsl
cmp
leave
gs
lea
imul
adc
jo
adc
into
mov
mov
xchg
fsubrs
xchg
lds
mov
test
mov
and
or
in
mov
shr
push
pop
scas
jo
test
jg
in
adc
or
cmpsl
sbb
xor
or
mov
mov
les
sub
push
and
xor
xchg
pop
or
jl
dec
test
cli
pop
mov
push
cld
stc
pushl
pop
out
arpl
mov
mov
push
outsb
mov
and
inc
push
cld
jecxz
jnp
push
jne
push
cmp
xchg
add
lret
dec
mov
fldt
stos
jmp
mov
pushf
or
push
add
fs
movsl
in
jmp
lock
mov
push
push
fisttps
movsl
push
inc
sbb
pop
inc
sbb
pop
inc
std
push
or
mov
fidivl
repnz
dec
adc
lock
movsl
lods
pop
sti
rorb
pand
inc
not
cs
mov
push
ss
fimuls
shl
xchg
fnsave
pop
std
mov
lret
pop
sub
add
pop
pop
mov
adc
test
imul
inc
cmp
test
mov
and
sbb
ss
mov
mov
mov
fcoml
outsb
pop
lock
push
add
aas
push
xchg
pushf
fstpt
add
fwait
sbb
insb
jl
insl
lods
jg
orb
fldcw
lock
adc
lock
js
outsl
les
pop
clc
imul
and
mov
sub
xorl
pop
push
jl
shll
jle
js
sub
stos
xlat
jl
scas
pop
inc
mov
inc
pop
dec
inc
and
jbe
aad
add
dec
mov
inc
xchg
mov
dec
daa
adc
cli
push
lahf
mov
aas
cmpsl
push
sbbb
and
jl
mov
int3
pushf
jo
aaa
mov
call
call
mov
adc
or
push
pusha
cmp
arpl
mov
adc
add
mov
leave
inc
fnsave
ret
imulb
cs
push
jl
movsl
xchg
outsb
add
inc
pop
xor
sub
psubusb
push
test
into
and
mov
push
jo
scas
fldenv
mov
inc
xchg
popf
jp
or
cld
lcall
lahf
stos
outsb
popa
mov
xorb
das
mov
cmp
sub
fistl
pop
aaa
jmp
ds
sub
xor
mov
mov
out
mov
jno
dec
mov
loop
push
adc
rol
nop
push
filds
lea
lock
jg
sub
mov
cmp
scas
imul
mov
mov
pop
pop
push
aam
mov
lock
add
ret
loop
or
aad
mov
push
faddl
jmp
xlat
loopne
sti
cmpxchg
or
inc
pop
sub
je
sbb
sahf
pop
in
call
fisubl
xchg
pop
lock
jns
mov
je
sarl
sub
loop
lock
je
jnp
mov
addr16
mov
inc
insl
and
data16
dec
jbe
cs
sbb
movsb
lods
dec
pop
repnz
aad
push
das
fldt
adc
mov
fs
push
jns
sbb
bound
fwait
pop
ljmp
and
mov
mov
out
lock
call
enter
dec
repz
popf
stc
add
aaa
pop
sub
xchg
mov
in
outsb
ja
rdpmc
mov
lods
lcall
inc
sbbl
mov
inc
mov
in
pop
pop
test
mov
fstpl
loope
stc
neg
push
push
lods
mov
mov
mov
fwait
arpl
xchg
add
daa
xor
test
pop
mov
inc
mov
loopne
imul
and
xor
sub
fs
fsubrl
pop
mov
inc
cmpsl
fisubrs
in
jmp
cltd
push
inc
and
sarb
lock
add
addl
adc
sbb
pop
pusha
mov
mov
pop
xchg
cs
add
imul
jo
mov
push
loopne
repnz
into
cwtl
xchg
mov
push
mov
imul
cli
mov
sub
jle
cmp
add
mov
jge
sbb
mov
xor
in
test
insl
mov
xorl
cmp
lea
pusha
pslld
pop
fnstcw
and
shrb
fidivrs
sti
pop
push
in
aaa
mov
sub
rcrl
add
adc
jns
dec
inc
addr16
fwait
sbb
fcomp
fisttpll
jo
cmpsl
mov
or
inc
and
dec
push
mov
sub
xor
or
jmp
into
sti
in
addr16
sub
xorl
subb
jmp
inc
adc
sahf
mov
mov
leave
push
gs
imul
mov
test
lcall
pop
outsb
lea
mov
mov
sti
or
adc
icebp
je
inc
lods
mov
dec
je
cltd
fcomps
mov
ljmp
jmp
adc
push
jb
insb
dec
pop
iret
and
subb
push
fldt
jbe
jp
push
outsb
cmp
fadd
pusha
cmpsl
aaa
je
insl
test
inc
sub
sub
sub
arpl
mov
dec
mov
aas
inc
repz
test
mov
mov
out
cmp
adc
inc
adc
repz
hlt
xchg
sub
mov
ds
sbb
out
ds
jo
test
adc
loopne
pushf
lahf
out
stos
push
xchg
fcmovbe
jmp
inc
or
mov
sbb
stc
add
adc
jmp
aam
and
xchg
mov
ficoms
jne
push
lcall
cmp
xorl
out
shr
ljmp
jnp
add
mov
cmp
adc
sti
fldt
mov
cli
xchg
pop
addl
jnp
and
jae
mov
adc
cmpsb
cmp
add
sub
insl
mov
sbb
inc
orl
mov
imul
dec
jns
xchg
in
in
lds
clc
int3
stc
adc
sti
and
insl
mov
addb
mov
movsl
xor
in
cmpsl
rol
in
outsl
insb
dec
pop
xor
cld
dec
stos
sbb
mov
add
mov
dec
shll
adc
scas
lods
insl
filds
xor
dec
dec
ret
dec
stos
jo
outsl
cmpsl
or
popa
aam
inc
mov
jg
jg
and
mov
sbb
lahf
mov
fldt
repnz
or
push
fstl
into
mov
pop
fs
test
inc
add
roll
inc
xchg
aam
adc
fcmovne
in
daa
mov
mov
ret
int3
fistl
ds
fisubrl
inc
push
or
das
insl
adc
aaa
push
test
and
push
fs
mov
sub
mov
add
sub
mov
pop
das
cmp
popa
rolb
in
pop
pop
pop
push
and
mov
mov
push
add
mov
icebp
js
outsl
mov
call
mov
sub
jo
sbb
jns
rclb
loopne
das
inc
cmp
fsts
dec
rol
mov
xor
pop
cli
push
xor
scas
addr16
xchg
out
cmp
push
lds
out
call
lods
std
push
xor
enter
push
sbbb
push
pop
mov
mov
imul
pop
es
and
shrl
dec
xchg
loop
sub
lock
fidivs
and
andl
mov
ljmp
lret
adc
push
inc
mov
sub
fistl
add
pop
test
mov
sub
or
dec
mull
outsb
insl
xor
push
add
xor
insl
jg
sbb
jns
inc
jp
lds
mov
sbb
test
dec
xchg
arpl
or
mov
cmp
lret
pop
insl
pop
cs
add
inc
mov
std
fildll
icebp
pop
insl
frstor
scas
cmp
loop
mov
lea
movsl
push
xchg
das
rcll
ffree
popa
push
push
roll
mov
mov
mov
sbb
jns
mov
dec
test
xchg
out
jo
sub
xchg
cmpsb
outsl
stc
push
jg
les
xchg
dec
sbb
or
jbe
mov
lea
sbb
orl
pop
fcompl
cld
adc
inc
pop
inc
or
icebp
shrb
fisubrl
cmp
fcmovnb
jbe
mov
fistl
pop
dec
add
mov
push
ss
mov
and
sbb
sbbl
rorl
adc
clc
pop
in
cli
inc
cmp
aaa
mov
in
inc
xor
clc
cmp
add
xchg
and
push
andb
inc
cmpb
xchg
lods
cmpsl
data16
xchg
nop
push
mov
cwtl
lds
add
je
fcomi
sbb
sbb
push
in
or
jl
bsf
jl
aad
cmp
xor
inc
in
sahf
add
mov
mov
aam
stos
add
call
push
loopne
adc
mov
mov
xchg
adc
clc
imul
mov
aaa
decb
je
les
lods
mov
arpl
lcall
add
pop
push
inc
je
jno
or
mov
and
mov
pop
xor
insb
out
push
adc
mov
or
notl
pop
outsb
push
push
sti
xor
mov
xlat
lcall
jl
jae
push
lods
add
cmp
into
xchg
imul
push
push
cmpsb
iret
inc
aaa
fmull
jge
inc
pop
cwtl
pop
in
outsb
or
push
stos
push
daa
fisubrs
mov
add
add
imul
pop
xor
mov
push
cmp
xchg
xchg
ds
and
mov
mov
add
cmpsl
in
xchg
push
xchg
xchg
ss
mov
in
je,pt
ret
sbb
pop
push
mov
mov
mov
mov
sbb
sbb
mov
push
xchg
jge
mov
aad
int3
xchg
ljmp
mov
fldenv
pop
lret
mov
outsl
pop
je
push
stc
mov
jecxz
call
jo
loop
add
lods
xor
jmp
movsl
jo
inc
sub
idivb
clc
sbb
psubusw
and
out
ljmp
mov
push
push
jae
xor
aad
sub
mov
and
cmc
dec
fcompl
push
mov
mov
add
or
loope
and
mov
adc
in
sbb
pop
pop
pop
ds
aad
iret
bound
or
mov
sahf
mov
cmpsl
call
in
ljmp
js
insb
ret
fs
aam
pop
roll
cli
dec
decl
shll
sub
mov
mov
dec
pop
rclb
fisttpl
fs
push
sbb
fcomps
sub
rcrl
cld
pop
or
xor
cvtps2pi
sti
jle
dec
dec
pop
insl
mov
and
xor
dec
in
shr
rorb
icebp
mov
mov
mov
sbb
xor
mov
xchg
ficomps
sub
rcrl
hlt
lods
sbb
mov
dec
test
js
arpl
call
and
push
xorl
pmaxub
sar
push
xchg
aam
pop
and
dec
adc
es
dec
aaa
xor
mov
xchg
mov
shll
gs
scas
mov
mov
aas
cmp
mov
rcrl
je
mov
cmp
aaa
dec
pop
and
jnp
lcall
adc
xor
icebp
filds
and
adc
mov
pop
das
ror
hlt
mov
adc
lret
test
lahf
cmc
mov
cmp
stos
mov
icebp
mov
ljmp
in
lock
loop
cmpsb
xor
jl
lret
jbe
enter
incb
call
add
out
xor
punpckhbw
out
daa
ja
movsl
and
scas
push
scas
into
insl
jne
xchg
cld
pop
sarl
in
inc
shll
stos
subl
xchg
mov
mov
hlt
lahf
inc
mov
inc
cmp
mov
movsb
hlt
push
mov
xchg
push
fists
sbb
mov
dec
out
cli
shlb
data16
or
push
shrl
in
cmp
cmp
jnp
jg
mov
dec
mov
mov
call
jb
lods
dec
xor
or
ret
aad
jnp
leave
xchg
leave
addr16
fcoml
stos
out
stc
int3
ss
cld
das
adc
mov
or
insl
test
gs
sub
inc
cmpsb
loop
sbb
leave
jge
scas
icebp
jg
xchg
fucomp
mov
cmc
and
lock
or
mov
imul
mov
mov
fwait
xchg
rorl
je
pop
ljmp
lea
int
mov
xchg
dec
adc
sbb
or
fcoms
and
movsl
imul
leave
inc
fadd
inc
test
and
push
adc
icebp
and
fsubs
call
aaa
addr16
out
inc
mov
hlt
mov
cs
andl
mov
jg
inc
adc
ret
lahf
aad
adc
sbb
adc
repz
cmpsl
pop
or
xchg
repz
dec
fisttpl
shlb
loopne
xchg
aaa
mov
lds
std
into
clc
jecxz
sti
fcmovnbe
mov
or
ljmp
stos
and
ffreep
jb
into
les
scas
ficoml
fcomip
and
mov
outsl
cs
ret
lahf
dec
pop
adc
jle
mov
push
mov
loope
shl
sahf
mov
xchg
cmc
cmp
ret
loope
ljmp
dec
out
fisttps
or
adc
lods
jae
sbb
and
inc
cmc
shrl
sti
lahf
loopne
push
mov
sbb
cltd
imul
adc
xchg
stc
jo
es
add
or
jbe
and
imul
mov
loopne
jecxz
popf
inc
rcr
rclb
adc
mov
test
insb
jbe
jne
add
push
push
insl
mov
cmp
xchg
es
inc
int
mov
mov
sub
pusha
in
dec
xor
and
mov
aaa
mov
insl
pop
fistl
iret
mov
mov
fstl
dec
fldenv
mov
or
pop
dec
xchg
lret
push
sbb
ret
fisttpll
adc
cmp
sahf
dec
pop
aam
and
jge
push
movsl
or
aad
sub
push
pop
outsl
adc
popf
pop
cmpsl
jge
jb
mov
sbb
fidivs
mov
cmpsl
clc
shlb
mov
lret
and
gs
or
and
xchg
test
insb
cmp
daa
jae
lds
mov
mov
aas
push
out
insb
xchg
mov
dec
jns
inc
in
jecxz
pop
xchg
adc
push
cwtl
int
adc
icebp
hlt
dec
fidivl
push
gs
sbb
repnz
lcall
or
arpl
dec
lock
cmp
mov
rcl
xchg
shrl
cmp
and
mov
sbb
dec
popf
mov
cltd
enter
jl
push
xchg
movsb
fsubs
xchg
jne
mov
and
xchg
ljmp
jno
inc
cmp
cmp
fwait
aaa
or
dec
jne
mov
test
cmp
or
push
mov
add
loopne
mov
push
cmp
xor
fs
icebp
shrb
xchg
dec
inc
das
rcrl
jecxz
cmp
push
pop
or
pop
push
lahf
add
mov
push
test
aaa
xor
hlt
inc
mov
sbb
lods
adc
add
repz
lret
daa
das
jo
ss
ret
pop
pop
jl,pt
cmc
adc
add
lods
adc
das
mov
insb
into
xor
xor
jae
dec
pop
sub
je
mov
cmpl
mov
cmpsb
movsl
test
loope
inc
std
loopne
sbb
roll
cmpsl
mov
cmc
pop
inc
push
shl
dec
fiaddl
imul
sbb
add
ds
push
sbb
inc
shl
sbb
xchg
and
xlat
push
cmp
scas
sti
mov
movsb
xchg
pop
stos
pop
pop
pop
push
dec
mov
sub
std
outsb
fwait
pop
sub
mov
arpl
sbb
sbb
or
push
cmpsl
adc
sbb
out
outsb
push
nop
negb
call
mov
movsl
out
jbe
bound
mov
sbb
inc
mov
test
shrl
mov
pop
jg
iret
xchg
outsl
xchg
mov
ljmp
sub
push
push
jne
mov
add
lea
aam
sub
inc
cwtl
xchg
fcmovnu
fsubs
jle
jns
sub
mov
out
inc
pop
sub
sbb
jnp
or
push
mov
cmc
aad
clc
fidivrl
fdivrs
mov
mov
sub
jp
popa
sti
std
jg
scas
xor
in
dec
jno
cs
inc
pop
inc
insb
xor
jno
inc
mov
jo
fs
xor
add
insl
fcmovbe
das
aad
js
mov
inc
pop
pop
call
xor
pop
inc
mov
outsl
and
cli
mov
lods
xlat
rorl
sbb
jmp
outsl
push
nop
cmp
scas
jl
adc
jbe
adc
mov
test
das
insl
cld
pushl
xchg
push
add
dec
nop
mov
mov
push
ja
sbb
mov
loope
xor
in
nop
xchg
insl
js
das
stos
std
and
mov
icebp
pop
jl
mov
xor
out
notb
outsl
pop
and
rolb
mov
jg
aaa
sbbb
lods
shrb
arpl
cmpsb
bound
lret
mov
daa
sti
pusha
push
or
fscale
out
fwait
sbb
int3
cltd
xchg
hlt
gs
jp
add
mov
mov
mull
movl
shll
jne
add
pop
mov
jo
subb
arpl
ljmp
lcall
adc
negb
mov
mov
icebp
xchg
or
mov
pop
add
xchg
xchg
push
subl
mov
add
lcall
ljmp
negb
cmp
cli
mov
push
aas
nop
dec
inc
daa
addr16
ljmp
cwtl
lea
adc
lods
add
inc
lahf
lret
ret
or
adc
ret
clc
xchg
pop
bound
rorl
push
insb
or
stos
gs
and
out
pop
out
lahf
cmp
shll
xor
add
pop
or
mov
pusha
nop
add
imul
imul
push
imul
jns
pop
or
imul
testl
push
gs
mov
test
push
inc
outsl
inc
jns
outsb
mov
es
je
punpckldq
jae
adc
mov
push
adc
aaa
or
add
sbb
fs
push
pop
push
outsb
dec
pop
dec
jo
outsb
sub
jne
je
inc
jns
mov
fs
push
mov
mov
popa
insb
mov
push
imul
gs
int3
rcll
insb
or
dec
mov
mov
jns
dec
outsb
inc
jb
gs
js
inc
lods
mov
in
outsb
addr16
arpl
adc
outsl
lods
insb
mov
ja
inc
imul
mov
in
push
adc
add
sub
push
adc
xor
in
xor
sbb
fldl
repnz
outsw
jge
popa
xchg
fsubp
dec
inc
dec
inc
adc
jb
outsl
fs
gs
mov
add
nop
sub
dec
popa
insl
and
mov
lods
mov
pop
pop
inc
jne
xchg
sbb
insl
jnp
test
es
pop
sub
jo
jb
push
cmp
inc
push
pop
mov
xorb
or
or
mov
adc
inc
cwtl
jae
mov
mov
test
sub
jae
xor
insb
popa
dec
dec
test
pop
insl
outsl
jbe
fimull
dec
jae
jp
bound
and
mov
fldenv
fsubrs
mov
jae
inc
jb
jae
adc
into
xorb
jne
mov
cmp
sub
jb
fs
adc
insb
data16
sbb
fucomp
js
add
push
or
add
adc
xchg
lods
popf
adc
cmp
ja
push
or
jo
mov
lods
mov
pop
sub
pusha
out
popl
clc
cli
adc
stc
das
dec
xchg
push
inc
dec
add
add
mov
xor
decl
add
add
add
and
sbb
add
mov
add
add
arpl
push
xor
cmp
add
mov
cmp
das
mov
add
inc
movsl
push
clc
push
je,pn
jae
popa
add
int
nop
add
in
fsubrs
shrb
xor
mov
xor
je
js
leave
push
xor
pop
push
and
or
nop
dec
pop
ja
fnsave
jb
mov
daa
or
shl
inc
bound
push
sbb
insb
nop
mov
lahf
dec
or
push
add
dec
push
cmp
jb
movsb
xchg
lahf
mov
cmpb
ja
sub
or
add
add
add
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
notb
sub
mov
jb
push
jl
fisubrl
jae
adc
pop
lea
or
loop
popa
sbb
ja
mov
aam
out
out
push
cmc
and
into
popa
imul
lds
idivb
pop
outsl
xchg
pop
into
int3
addl
and
pop
mov
fstl
pop
xchg
mov
fldenv
inc
test
cmc
cmc
push
mov
fsubrs
lret
sub
outsl
push
ljmp
outsl
cmp
or
jns
dec
jns
and
xchg
sbb
pop
les
ret
out
push
idivb
outsb
in
sub
jl
push
sub
in
lret
and
lgs
loope
xchg
frstor
xlat
xadd
pop
or
push
shlb
adc
pop
pop
pop
inc
ret
push
jbe
cmpsl
and
or
cmp
je
aaa
cmp
push
push
repz
mov
mov
sub
push
pop
xor
or
inc
cmc
das
cmp
lret
in
add
popf
aaa
jb
pop
stos
jecxz
cmp
cltd
jno
ss
inc
pop
add
aad
xor
cli
leave
mov
pop
push
xchg
mov
and
out
rcr
sbb
pop
ss
mov
sbb
test
and
jnp
jecxz
fidivs
or
and
loop
and
push
xlat
movsl
enter
mov
xchg
xor
arpl
clc
pusha
pop
jmp
jo
inc
repz
sub
mov
and
cmp
int
imul
mov
inc
nop
sbbl
repz
pop
xchg
xor
mov
pusha
addl
sbbl
adc
shlb
stos
or
out
mov
ret
in
lcall
pop
or
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
inc
add
pop
add
add
add
pop
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
aas
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
add
insb
add
insl
add
add
and
inc
add
outsl
add
imul
add
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
insb
add
insl
add
add
and
push
add
outsl
add
jbe
add
add
jno
outsl
add
outsl
add
js
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
sub
and
xor
xor
sub
and
xor
xor
aaa
add
and
xor
xor
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
insb
add
outsl
add
add
je
imul
add
jbe
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
insb
add
insl
add
add
and
inc
add
outsl
add
imul
add
and
xor
xor
xor
xor
sub
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
insb
add
insl
add
add
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
insb
add
insl
add
add
and
push
add
outsl
add
jbe
add
add
jno
outsl
add
outsl
add
js
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
and
xor
xor
sub
and
xor
xor
aaa
add
and
xor
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
lock
add
and
or
add
sub
add
cmp
dec
inc
add
pop
inc
add
push
inc
add
add
add
test
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
insl
gs
arpl
