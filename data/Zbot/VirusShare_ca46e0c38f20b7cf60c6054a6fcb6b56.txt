test
clc
out
mov
outsb
das
dec
mov
je
or
fdivs
jne
stos
bound
sbb
out
mov
ror
loope
loop
je
push
jecxz
sbb
cmp
fwait
or
ds
pop
frstor
imul
in
dec
and
and
cld
inc
pop
xor
cmp
or
divb
arpl
subl
adc
cwtl
bound
fists
inc
cli
xor
hlt
jo
or
mov
or
int
jbe
add
mov
jno
lret
dec
stc
or
cmc
sub
rcll
cmp
adc
pop
repnz
movsl
mov
mov
pop
nop
mov
xchg
cmpsb
cmpsb
xorl
inc
std
push
leave
mov
stc
loop
fs
fcmovnb
xor
dec
shl
jle
ficoml
xchg
fsubs
pop
lock
mov
sbb
ja
out
cmp
push
xchg
pop
arpl
xchg
jp
xchg
sti
in
iret
mov
and
and
mov
mov
sub
and
mov
mov
mov
add
and
mov
mov
call
mov
and
and
mov
mov
mov
call
mov
mov
mov
mov
sub
add
mov
mov
mov
call
mov
mov
add
and
mov
mov
mov
call
mov
call
mov
add
and
mov
mov
add
and
mov
mov
sub
add
mov
mov
call
mov
sub
sub
mov
mov
call
mov
mov
mov
mov
mov
add
sub
mov
mov
call
mov
call
mov
mov
call
mov
sub
sub
mov
mov
mov
and
add
mov
mov
add
sub
mov
mov
call
mov
call
mov
mov
add
add
mov
mov
call
mov
sub
and
mov
mov
sub
and
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
add
sub
mov
mov
mov
call
mov
call
mov
call
mov
mov
sub
and
mov
mov
call
mov
and
sub
mov
mov
call
mov
sub
and
mov
mov
mov
mov
mov
mov
call
mov
and
add
mov
mov
and
and
mov
mov
mov
call
mov
call
mov
mov
add
and
mov
mov
call
mov
mov
mov
call
mov
sub
and
mov
mov
mov
call
mov
and
add
mov
mov
and
and
mov
mov
mov
call
mov
call
mov
sub
sub
mov
mov
call
mov
mov
and
add
mov
mov
mov
call
mov
mov
add
and
mov
mov
sub
add
mov
mov
and
and
mov
mov
mov
call
mov
call
mov
add
add
mov
mov
sub
sub
mov
mov
call
mov
and
add
mov
mov
and
sub
mov
mov
and
add
mov
mov
and
add
mov
mov
call
mov
and
and
mov
mov
mov
call
mov
call
mov
mov
add
and
mov
mov
call
mov
mov
mov
and
sub
mov
mov
call
mov
call
mov
and
add
mov
mov
call
mov
call
mov
sub
and
mov
mov
mov
mov
mov
call
mov
sub
sub
mov
mov
mov
add
add
mov
mov
mov
and
add
mov
mov
and
sub
mov
mov
call
mov
add
add
mov
mov
call
mov
and
and
mov
mov
and
sub
mov
mov
and
add
mov
mov
mov
mov
and
add
mov
mov
and
and
mov
mov
call
mov
add
sub
mov
mov
call
mov
mov
and
add
mov
mov
mov
and
add
mov
mov
call
mov
mov
call
mov
add
sub
mov
mov
call
mov
add
sub
mov
mov
call
mov
mov
and
sub
mov
mov
call
mov
call
mov
call
mov
mov
mov
call
mov
sub
add
mov
mov
add
add
mov
mov
add
and
mov
mov
mov
call
mov
call
mov
and
and
mov
mov
mov
call
mov
call
mov
add
and
mov
mov
mov
add
sub
mov
mov
mov
call
mov
call
mov
call
mov
sub
sub
mov
mov
mov
mov
call
mov
and
add
mov
mov
mov
and
add
mov
mov
sub
add
mov
mov
and
add
mov
mov
call
mov
add
and
mov
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
add
add
mov
mov
call
mov
call
mov
add
add
mov
mov
sub
sub
mov
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
and
add
mov
mov
and
and
mov
mov
call
mov
mov
call
mov
call
mov
mov
and
add
mov
mov
call
mov
and
and
mov
mov
call
mov
sub
sub
mov
mov
and
and
mov
mov
sub
and
mov
mov
mov
call
mov
mov
sub
add
mov
mov
mov
add
sub
mov
mov
sub
and
mov
mov
call
mov
sub
sub
mov
mov
add
sub
mov
mov
mov
call
mov
sub
add
mov
mov
sub
and
mov
mov
add
add
mov
mov
call
mov
sub
sub
mov
mov
mov
call
mov
add
add
mov
mov
mov
sub
sub
mov
mov
call
mov
sub
add
mov
mov
mov
add
sub
mov
mov
and
and
mov
mov
and
and
mov
mov
and
add
mov
mov
call
mov
mov
mov
add
and
mov
mov
and
and
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
call
mov
sub
sub
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
add
and
mov
mov
mov
sub
sub
mov
mov
add
sub
mov
mov
call
mov
mov
sub
sub
mov
mov
mov
and
sub
mov
mov
call
mov
and
add
mov
mov
call
mov
add
add
mov
mov
call
mov
add
add
mov
mov
and
sub
mov
mov
call
mov
mov
call
mov
mov
sub
sub
mov
mov
mov
and
sub
mov
mov
call
mov
call
mov
and
sub
mov
mov
call
mov
mov
sub
add
mov
mov
mov
mov
and
and
mov
mov
call
add
dec
push
inc
push
pop
jecxz
inc
lea
dec
hlt
aas
adc
loop
adc
mov
pop
jecxz
fs
nop
and
add
sub
cld
clc
sub
out
clc
and
fists
add
mov
sbb
xor
movsb
int3
pop
add
cmpsl
inc
add
les
jo
jle
adc
push
icebp
sub
mov
mov
adc
ret
and
shrl
lock
xor
jo
sbb
cli
mov
cmp
mov
das
jne
insl
dec
outsl
or
movsb
jo
add
mov
or
dec
adc
arpl
rol
and
and
sbbb
test
jle
mull
mov
pusha
fld
mov
mov
xchg
xchg
xchg
dec
cmp
sub
sub
in
insl
sub
test
sar
jge
inc
sub
mov
and
mov
add
jns
push
cmp
enter
stc
frstor
popa
xchg
mov
les
mov
js
pop
dec
or
bound
test
or
jmp
and
jecxz
adc
xchg
repz
data16
mov
sbb
jecxz
sbb
dec
loopne
add
sbb
lock
ss
push
jo
jle
cs
pop
adc
popf
push
inc
iret
jnp
aad
cld
cmp
jp
cmp
fwait
aas
cmp
cld
loope
xor
sub
jno
out
lahf
sbb
or
xchg
mov
push
rorl
cmpl
inc
out
adc
test
inc
orl
cmp
dec
loope
jmp
nop
push
and
sbbl
fs
xchg
pop
adc
mov
fmul
pop
dec
ljmp
ss
adc
ljmp
adc
fisttps
dec
cltd
fmulp
jp
dec
push
mov
sub
add
cmc
enter
push
and
es
ljmp
pusha
jne
nop
push
gs
stos
sub
cmp
lcall
push
adc
test
stos
cmp
clc
xchg
add
movsb
jne
test
adc
add
lock
pop
mov
cltd
sub
xchg
xchg
mov
shufps
adc
lcall
mov
xchg
dec
dec
dec
lcall
testb
mov
push
out
ret
jb
mov
push
loope
push
xchg
test
and
lahf
dec
insl
mov
and
pop
leave
in
mov
stos
inc
push
movsl
inc
test
cmc
rolb
aas
addr16
out
aam
jbe
or
sub
out
and
test
shrl
iret
mov
mov
adc
and
mov
xlat
sbb
mov
sarl
mov
dec
mov
pop
dec
push
into
loopne
adc
adc
jg
ljmp
js
jmp
cmp
adc
shrl
stos
jno
dec
mov
pop
push
fs
pusha
dec
xor
or
cmp
loope
loopne
fiaddl
fcmove
push
xor
xor
add
cmp
test
fiadds
inc
and
and
ret
mov
push
ror
sub
inc
rolb
js
int
aad
cwtl
push
repnz
xor
and
pop
sub
scas
jbe
add
jmp
dec
or
lock
push
dec
jecxz
sahf
sbb
into
shl
mov
and
inc
inc
std
cmpsb
insb
push
jecxz
inc
outsl
push
xchg
outsl
popf
xor
je
repz
xor
cmp
icebp
enter
enter
test
pop
adc
test
jne
les
repz
dec
addb
imul
or
popf
fldl
pcmpeqd
test
and
mov
fcompl
mov
mov
push
jae
inc
cmp
pop
mov
or
pop
js
fwait
lds
cmc
push
push
inc
pop
loopne
inc
mov
inc
mov
push
ret
ljmp
sbb
mov
adc
test
sub
data16
mov
fildll
pop
pop
sbb
sarb
sub
mov
jle
in
xchg
cli
out
fnstsw
adc
push
mov
pop
btc
add
pop
bnd
mov
imul
data16
push
dec
pop
cwtl
mov
lret
sbb
sub
xchg
add
adc
inc
mov
in
inc
ds
int
mov
outsb
stos
mov
mov
int
pop
cmp
fwait
js
imulb
push
gs
mov
sub
sub
icebp
push
fisubs
lea
push
cmp
call
mov
inc
ss
push
mov
test
xchg
sbb
sub
les
pop
nopl
mov
andl
loope
imul
inc
fistl
push
fcoms
mov
adc
repnz
push
xor
lds
in
mov
push
js
call
mov
pop
lds
push
pushf
mov
add
in
xchg
inc
sub
lret
rcll
push
rorb
jmp
cs
jecxz
stos
jo
inc
sbb
aas
ret
xor
dec
jns
icebp
cmp
icebp
adc
imul
divl
or
leave
ja
pop
inc
pop
ficoml
cmp
adc
mov
xchg
jg
in
ljmp
repz
icebp
jo
shll
push
popa
and
addr16
test
out
in
inc
mov
pop
sub
push
mov
add
jne
inc
inc
test
adc
adc
fdivrp
shrb
std
and
jne
xchg
pop
push
dec
arpl
mov
push
fsubrs
nop
jbe
cli
mov
and
sub
mov
xchg
int3
mov
imul
pop
orb
push
push
shll
jecxz
cmpsb
divb
shll
mov
adc
jo
testl
pop
insl
mov
stos
add
jno
das
insl
push
lahf
push
fildll
bound
add
aas
arpl
loopne
jecxz
push
enter
add
mull
sbb
mov
adc
cld
out
jge
pop
and
mov
jnp
bound
int3
and
mov
and
push
xor
addb
mov
stc
fsts
fmul
xchg
int3
adc
mov
stos
push
push
mov
pop
movl
adc
out
dec
mov
bound
scas
aam
icebp
push
mov
push
and
fwait
outsb
adc
fisubrs
movsb
subb
jne
notl
push
adc
pop
xor
sbb
mov
sbb
lods
mov
cltd
test
sbb
lds
mov
adc
es
dec
cmp
push
orl
test
sbb
sub
mov
ret
xchg
movsb
insl
popa
and
cmpsb
inc
addr16
shlb
xor
lahf
sbb
jl
inc
adcl
mov
dec
dec
mov
xchg
pop
inc
rcrl
les
push
lods
mov
sub
mov
aad
rolb
pushl
cmp
dec
cmp
dec
mov
push
mov
dec
or
nop
adc
and
jno
push
inc
popf
adc
test
jno
xchg
jns
jl
icebp
mov
ret
or
and
or
jnp
or
push
jle
xchg
xlat
pop
mov
mov
or
lods
sar
push
mov
call
out
sub
sbb
fbstp
aas
sbb
jge
dec
xchg
push
lds
or
std
adc
ret
adc
inc
mov
mov
pop
pop
ds
jecxz
push
push
pop
addl
jns
jns
ficomps
sbb
dec
or
add
xor
mov
xchg
enter
inc
ds
leave
dec
add
scas
xorb
mov
adc
push
mov
in
add
shl
hlt
sbb
push
enter
js
adcb
imull
jp
je
add
cs
jnp
and
fwait
and
or
es
out
call
outsb
add
cld
addl
sub
mov
lcall
roll
je,pt
outsb
inc
or
push
pop
cltd
adc
fstl
aas
xor
adc
xchg
push
or
dec
cmp
outsl
incl
add
or
das
dec
in
fistl
xchg
push
jne
jo
and
mov
mov
repnz
add
sbb
cmp
adc
fmull
and
mov
fbld
push
sbb
sbb
popf
or
cmp
push
or
pop
mov
sub
inc
adc
cmpsb
shrl
movsl
xchg
mov
aad
in
imul
test
imul
cmp
pushf
outsl
daa
push
mov
inc
cmp
jo
cmp
sbb
dec
les
cmp
sbb
lret
fs
sub
fistps
out
inc
and
bound
push
adc
or
mov
fldenv
stc
adc
jge
mov
pop
add
mov
std
jecxz
popa
cmp
adc
inc
movsb
lods
mov
dec
sti
outsb
scas
sbb
fsubl
mov
add
jo
cmpb
push
inc
inc
push
test
xchg
int
inc
mov
push
jnp
sub
sahf
inc
push
pop
rolb
mov
add
daa
and
in
hlt
or
jle
cmp
push
adc
pushf
push
mov
push
in
and
inc
or
les
enter
adc
scas
xor
mov
test
andb
and
in
js
xchg
push
lcall
call
mov
iret
push
pop
lds
arpl
cmp
iret
xchg
leave
fstpt
icebp
push
and
inc
icebp
inc
dec
loopne
lods
and
push
lahf
adc
das
cmc
jmp
jg
dec
sbb
add
sbb
jle
push
xor
test
push
cmp
add
and
and
inc
xchg
dec
into
lods
cmpsb
into
sbb
or
sbb
mov
cmpsb
inc
dec
push
mov
sub
inc
into
loopne
cmp
and
insl
js
int
or
insb
mov
xor
push
test
sbb
and
add
leave
cmpps
adc
xor
notl
mulb
sub
xchg
pop
stc
inc
repz
shll
int
push
sbb
stos
push
outsb
stc
xor
rcrl
ret
sahf
sbb
ljmp
outsl
pop
inc
xchg
cltd
mov
ds
stc
jecxz
imul
repz
mov
std
inc
mov
call
adcb
or
hlt
dec
cmp
and
add
sbb
xor
adc
or
leave
inc
inc
loop
mov
jl
std
rorb
outsl
pop
call
and
ds
ficoml
sub
mov
ljmp
xor
xor
and
mov
adc
xchg
mov
cmpl
and
push
rclb
add
add
sub
mov
shll
sbb
in
fwait
lahf
fwait
or
std
dec
dec
pop
push
xchg
cmc
push
cmpsl
sahf
pop
fldenv
rolb
lds
pop
dec
incl
jns
sub
mov
sub
nop
fisubs
adc
sbb
inc
and
sub
or
pop
xchg
outsb
mov
xor
add
cmp
or
xrelease
xchg
lret
mov
push
and
inc
mov
scas
mov
sbb
movsl
mov
pusha
pop
fisttps
push
scas
aad
jmp
or
ljmp
rclb
push
jo
sub
inc
adc
xchg
aad
ret
add
shll
jecxz
add
sbbl
inc
sbbb
sbb
inc
fsubs
sub
jl
ljmp
push
in
jmp
imul
or
push
mov
shl
pushf
inc
das
push
rorb
fidivrs
dec
mov
das
mov
pusha
and
loopne
xchg
pop
aaa
pop
andb
jg
rcr
dec
call
add
xlat
pop
jnp
sub
sbb
or
mov
insb
test
cli
adc
mov
lods
sub
aaa
mov
mov
div
pop
loope
xor
mov
mov
inc
add
and
and
enter
adc
enter
scas
test
dec
in
dec
push
or
stc
xchg
mov
ljmp
jmp
or
xchg
out
or
icebp
inc
mov
xor
mov
xor
mov
push
fists
lret
cwtl
inc
mov
nop
and
mov
sbb
or
and
mov
inc
cmp
mov
lea
mov
xor
adc
xchg
fwait
or
pop
movsb
mov
sbb
fabs
shl
callw
inc
imulb
scas
inc
mov
sbb
lret
aad
les
xchg
imul
add
or
lds
pusha
or
add
pop
push
and
ret
lock
mov
and
iret
es
dec
fstps
add
pusha
imulb
and
scas
mov
dec
aam
xchg
push
xchg
xchg
test
pandn
stos
stos
fisttpl
rcll
adc
pusha
imul
add
sbb
add
into
pop
test
dec
cmovg
push
mov
jae
aam
sar
push
imul
pusha
inc
mov
or
dec
ret
cltd
xchg
adc
sub
mov
cmp
sahf
or
xchg
pop
xor
mov
push
fs
adc
add
push
loope
mov
dec
cmp
and
cmp
adc
pop
bound
mov
add
adc
sub
mov
ret
inc
push
and
jmp
xchg
pusha
dec
adc
popa
insl
push
push
inc
loopne
cld
mov
lcall
cmp
bnd
add
push
mov
push
mov
in
call
lahf
decb
add
ljmp
sub
cmpsb
inc
sbb
stc
add
cmp
addr16
outsb
or
mov
cmpsb
xchg
jno
mov
xor
mov
dec
notl
andb
les
fisttps
sbb
lds
nop
bound
inc
pop
and
jp
sub
sub
pop
shr
fucomip
dec
lahf
lods
inc
inc
stos
lcall
fldt
popa
push
mov
inc
add
pop
and
mov
flds
repnz
jno
or
popa
int3
jns
dec
loope
icebp
mov
into
sar
lods
add
xchg
js
shlb
jp
ljmp
shll
pop
inc
call
lods
nop
push
inc
stos
loope
rcll
sub
xchg
mov
cmp
and
jl
outsb
push
push
jno
jl
test
movsl
icebp
movsl
adc
inc
xchg
jmp
mov
sbbl
testb
add
xchg
pop
fsubrs
sub
lret
je
js
and
and
loop
and
add
loopne
sbb
cltd
addl
push
and
aad
push
shl
add
add
or
inc
cmp
call
rcrl
leave
leave
out
lds
xor
ljmp
cs
fcoms
and
incl
data16
ss
push
cmpsl
dec
xchg
aas
push
call
jb
hlt
sbb
out
xor
dec
int3
movsb
pusha
sbb
add
popa
dec
push
push
test
pcmpeqd
xchg
stos
leave
jecxz
add
test
and
test
sub
inc
cmp
cli
insb
rcrb
in
adc
out
mov
notl
and
add
xchg
inc
les
test
push
popf
and
and
jp
leave
in
outsl
dec
sub
enter
inc
sub
xchg
push
push
xchg
sub
inc
xchg
dec
push
imul
imul
in
loope
rolb
ret
arpl
arpl
adc
mov
loope
or
dec
or
jno
push
fs
inc
jo
mov
lods
hlt
add
imul
jg
in
inc
call
cmp
mov
cmpl
sub
shl
xor
mov
outsl
mov
mov
xchg
add
cmp
push
icebp
insl
adc
sub
repnz
enter
sbb
adc
xchg
test
xchg
adc
int3
and
adc
and
push
inc
pop
paddq
mov
es
in
add
cmpb
imull
in
or
int
dec
fld
in
out
dec
mov
inc
popf
insb
out
lcall
and
mov
jmp
pop
cmp
mov
adc
and
mov
popf
adc
cmp
push
pop
aas
cmp
mov
and
call
ss
and
inc
ss
mov
nop
sub
cmpb
adc
dec
jns
or
leave
and
push
dec
add
movsl
add
add
and
sub
mov
es
enter
mov
je
or
mov
pop
xor
movsl
push
in
sbb
stos
xchg
mov
cmp
inc
mov
add
ficoml
push
imul
lret
mov
and
fwait
sbb
mov
adc
roll
aam
cmp
jecxz
test
in
ds
scas
pushf
push
inc
and
popf
add
in
lahf
inc
rcrb
test
outsl
xor
sub
or
daa
adc
js
adc
lea
or
or
out
inc
dec
jno
nop
subl
ret
out
pop
push
in
pop
ret
and
shll
xchg
inc
push
aam
outsb
inc
data16
rorl
js
adc
out
jle
jmp
mov
mov
and
scas
jmp
pop
sbbb
pop
js
jb
stos
std
fistpll
mov
dec
cmpsl
ret
scas
xchg
jl
add
psadbw
mov
jne
xor
stc
repz
mov
in
lahf
mov
xor
cmp
ds
inc
movsl
lods
push
adc
xor
inc
push
jg
int3
roll
clc
les
jg
aaa
push
je
xor
pusha
stc
sti
mov
xor
inc
xor
divb
inc
mov
test
gs
test
jns
cld
clc
lea
xchg
push
inc
insb
int
dec
inc
xorb
push
js
mov
pusha
sti
and
jmp
mov
sar
sbb
xor
dec
hlt
sub
mov
dec
loope
shld
push
push
push
jmp
xchg
sbb
dec
std
cltd
or
mov
aaa
jo
sar
test
cmp
adc
push
push
inc
cwtl
lds
sbb
and
nop
push
cmc
mov
stc
inc
xchg
adc
jmp
inc
sbb
pusha
nop
sbb
sub
sbb
repnz
pop
mov
add
imulb
xlat
stos
shrl
and
push
and
jno
jae
xchg
xorb
iret
out
enter
push
cli
mov
cli
ret
lods
les
xor
cmp
dec
cmp
mov
inc
push
sbb
jecxz
dec
mov
jge
or
adc
mov
mov
test
arpl
jmp
enter
sub
and
push
test
mov
fxch
adc
mov
jne
js
inc
inc
cs
or
movsb
icebp
pop
inc
enter
mov
push
mov
inc
mov
xchg
arpl
xchg
loope
dec
scas
int
and
dec
and
jne
sarb
lcall
cli
pop
jl
jge
add
sahf
dec
mov
loopne
mov
push
filds
jbe
inc
out
mov
or
std
xchg
cmp
iret
fld
mov
call
imul
cmp
jne
scas
inc
xor
push
or
adc
inc
inc
adc
sbb
in
inc
xor
mov
bound
enter
mov
jnp
mov
insb
sub
add
adc
idiv
aaa
xchg
or
mov
popa
add
adc
xchg
add
jo
idiv
gs
popa
dec
jmp
sbb
aas
pop
mov
nop
inc
add
xchg
cs
clc
jp
pop
mov
inc
pop
aam
sub
out
repz
leave
cmp
pop
cmp
push
mov
repz
sbb
sub
inc
cmp
mov
inc
clc
xor
cwtl
mov
call
lret
enter
mov
and
jb
inc
test
push
mov
jmp
jns
xorb
xor
jp
mov
adc
outsl
cmp
nop
xor
ficoml
xor
popa
iret
lods
or
sub
outsl
push
lods
pop
dec
fsts
fsubl
leave
loop
cmp
jl
jb
sub
adc
xor
xor
rolb
stos
push
and
out
outsb
pusha
stc
hlt
bound
mov
pop
out
mov
xor
insb
loope
in
or
notb
add
cmp
cmp
pop
inc
popf
inc
dec
push
fwait
inc
xchg
or
adcb
and
pop
adc
adc
imul
cwtl
xchg
push
sbb
cmpsl
aas
xchg
fdiv
insl
inc
loop
and
add
xchg
xchg
enter
sub
int3
outsl
dec
js
imul
push
notl
fldl
lret
jo
and
xor
xor
jbe
pop
mov
rcrb
dec
jbe
fnstsw
aas
xchg
daa
mov
pop
sub
sbb
adc
movsb
fs
or
out
addr16
dec
jns
out
adc
mov
in
mov
lods
stos
adc
push
cmc
jb
ficoml
jge
adc
loopne
stc
fisttpl
aad
dec
inc
idivl
add
add
sbb
cmpsb
sbb
or
adc
pop
femms
sub
jle
fists
andl
mov
gs
push
test
addr16
inc
and
xor
mov
mov
pop
xor
popf
popf
xor
arpl
mov
ds
inc
push
loopne
push
pop
leave
int3
push
cmp
js
cmp
loopne
push
xchg
addr16
mov
inc
push
decl
mov
or
incl
test
mov
or
data16
cmp
pop
mov
inc
push
add
sbb
roll
shll
test
pushf
and
jp
sbb
and
mov
xchg
or
jl
jmp
or
mov
mov
add
out
and
and
pushf
inc
xchg
outsb
xchg
stc
pop
int
mov
inc
cld
out
jp
sbb
cmpsb
test
mov
mov
pusha
arpl
add
and
pop
inc
and
or
xchg
aas
jnp
mov
jp
test
or
notb
dec
push
pushf
pop
dec
aam
mov
mov
dec
sub
les
aas
ror
adc
jle
ljmp
repnz
test
pop
pushf
test
outsl
fsts
clc
mov
xchg
negl
xor
inc
pop
add
cld
jle
xor
ffree
and
pop
movsl
jp
rcr
mov
movsl
or
add
or
sub
xor
inc
jecxz
push
sbb
nop
push
mov
push
pop
ss
xchg
out
movsb
lock
dec
les
jmp
and
pusha
inc
inc
ljmp
mov
mov
add
push
mov
mov
xor
das
jb
leave
xchg
das
sub
or
or
push
mov
fwait
mov
inc
lahf
popa
negl
lcall
add
in
and
fs
or
xor
sahf
mov
leave
mov
xor
hlt
mov
stc
roll
add
mov
in
mov
add
add
es
std
fucomip
pcmpgtd
fsts
mov
sarb
mov
or
jl
lahf
mov
xchg
xor
mov
imul
dec
loopne
sbb
bound
sbb
testb
jl
or
pop
jle
xchg
lret
add
std
pop
enter
add
adcb
jns
mov
sahf
add
cwtl
rorl
mov
jg
ret
mov
push
popa
xor
outsl
ret
inc
mov
repnz
test
mov
mov
cmp
jns
mov
insl
loopne
sub
scas
mov
cwtl
std
fldl
pop
call
mov
xor
lock
mov
lret
fcoms
xor
push
mov
test
das
push
pop
aas
shll
pop
mov
add
push
enter
sbb
and
sahf
nop
adc
xor
xchg
test
fmull
mov
pop
jne
sbb
or
call
clc
cmp
mov
loopne
and
daa
adc
rclb
enter
cwtl
les
lahf
sbb
adc
pop
push
mov
jo
adc
xor
addr16
icebp
ljmp
mov
imul
daa
rcrl
fstl
push
aam
pop
andl
push
inc
fiaddl
push
aam
add
xor
lds
inc
lcall
dec
add
mov
cwtl
mov
push
mov
add
mov
cmp
insb
sbb
sbb
mov
hlt
jns
leave
mov
div
sbb
jno
xlat
cmp
inc
subl
or
adc
call
sub
pop
adc
cli
mov
add
or
xorb
stos
aaa
and
aad
mov
test
add
mov
cmp
out
fwait
cmp
ret
out
and
mov
subl
mov
leave
xor
lds
add
stos
sbb
pop
sub
repnz
hlt
notl
pop
pop
adc
aaa
xchg
and
ljmp
frstor
imul
cmpsl
stos
sbb
lock
jo
in
data16
lods
jns
iret
addl
ret
xor
ja
pop
insb
cmc
jo
or
xchg
rclb
movsb
add
jle
loope
push
daa
sub
fwait
or
cmp
mov
and
lock
gs
mov
and
fstpt
outsl
jae
and
xor
lcall
iret
fs
push
rcrb
aam
push
sbb
test
insb
jmp
and
add
scas
xchg
push
sbb
xor
push
cmp
loopne
mov
push
fstpl
sub
add
and
mov
xor
add
or
jb
cmpsb
enter
mov
stc
xchg
inc
jp
imul
fmuls
dec
nop
in
lea
sub
loope
mov
lahf
or
adcb
mov
test
dec
and
pop
fistpl
inc
das
popa
adc
push
pop
mov
sub
loop
xorl
clc
mov
mov
pusha
inc
jns
daa
mov
jno
mov
lahf
nop
dec
adc
push
add
xorl
cld
leave
pop
mov
xor
adc
jge
inc
imul
addr16
movsl
stc
lds
xchg
ljmp
loopne
lcall
jg
add
add
inc
jb
add
stos
sub
dec
or
mov
push
pop
dec
cmp
insb
sahf
jnp
pusha
shrb
das
fildl
or
jmp
and
mov
out
lahf
jle
sbb
mov
test
loop
repnz
mov
mov
xchg
stos
push
rcrl
decl
sbb
jnp
in
outsl
sub
push
testb
cltd
xchg
pop
pusha
insb
into
hlt
xchg
ja
loopne
xorb
adc
or
push
enter
and
mov
adc
pushf
mov
xor
clc
arpl
inc
cmpb
adc
inc
dec
adc
xor
jecxz
adc
incb
mov
inc
lods
cmc
out
jmp
push
adc
sub
cmp
mov
decl
addr16
daa
dec
jnp
xchg
xor
imul
inc
loop
daa
sahf
jno
adc
dec
and
shrl
outsl
repz
cmp
ds
jo
notl
push
incl
cmpl
add
outsb
and
mov
cmpsl
push
mov
cmp
cmpsl
pop
pop
loope
mov
inc
cmp
daa
or
es
paddusw
push
xor
das
and
adcb
aas
mov
dec
lock
popf
sbb
inc
add
orb
xor
adc
jecxz
push
mov
sub
sbb
arpl
push
clc
sbb
in
in
pop
sub
dec
inc
dec
lods
push
or
ljmp
fs
cli
dec
mov
inc
sub
enter
or
inc
ret
imul
test
popa
ret
test
push
dec
jecxz
and
divb
sahf
fldenv
shll
sbb
mov
xchg
pop
in
xchg
movsl
or
adc
or
push
loope
sbb
cmp
aad
xlat
mov
and
addl
xor
pop
add
repz
fldcw
shrl
ret
adc
cs
addb
dec
dec
cmp
rclb
sahf
icebp
sub
xchg
stos
xlat
mov
andl
push
xchg
aaa
dec
adcl
jno
test
push
out
add
mov
mov
pusha
push
das
add
in
cltd
sbb
adc
lahf
test
cmpsl
jmp
xchg
daa
fsts
mov
in
andl
repnz
inc
jo
les
adc
movsl
cmp
xor
xchg
pop
dec
and
stc
inc
sbb
cli
cltd
mov
clc
push
lret
and
subl
arpl
std
sbb
fwait
test
xchg
mov
jl
xor
fs
inc
adc
movsb
jmp
pusha
lds
or
lds
mov
sub
lods
sbb
jmp
repnz
pushf
xchg
push
pop
lret
inc
bound
js
mov
adcb
pushf
sub
fdivrl
xor
lock
add
sti
cld
lock
dec
sub
lods
fs
loop
jno
iret
mov
pop
sub
nop
loopne
push
ss
pop
and
rol
jne
pop
out
test
ds
pop
repnz
mov
arpl
pop
repnz
popf
shrl
dec
sbb
fwait
jmp
test
xor
adc
inc
dec
cmp
inc
sub
nop
imul
pop
leave
add
loope
decl
inc
jnp
add
adc
cld
stos
mov
pop
add
mov
jb
sbb
xor
mov
adc
cld
xchg
or
sbb
cmp
clc
sbb
movsl
mov
xor
lods
lods
push
and
inc
loop
xchg
ret
mov
pop
jge
adc
cwtl
push
sbb
cmp
sub
call
sub
cld
mov
xor
inc
jbe
pusha
rcr
pop
or
mov
xor
inc
inc
punpckhbw
cmpl
and
dec
push
cmp
fs
les
test
mov
xor
or
jle
test
and
sbb
adc
dec
fsubs
mov
sahf
mov
mov
cmpsb
cmp
jae
stos
adc
lret
and
push
sub
js
addr16
lret
out
test
test
pop
shrb
mov
imul
inc
fisttpl
mov
inc
das
jmp
fdivs
adc
dec
nop
or
inc
jns
mov
popa
data16
filds
les
inc
dec
adc
and
xor
cs
and
xchg
mov
mov
xchg
pushf
lret
xchg
adc
stc
sub
outsb
aas
mov
aam
mov
into
jbe
retw
mov
cs
dec
adc
xchg
cmpsl
inc
ret
dec
clc
mov
xor
cmp
aaa
clc
push
dec
sub
inc
sub
mov
inc
out
adc
or
lret
or
push
test
or
xor
push
sub
int3
or
in
idivb
gs
inc
int
repz
add
cmpsb
daa
push
push
mov
flds
popa
cmp
out
dec
stos
inc
mov
sti
mov
scas
mov
xor
and
xchg
pop
push
push
dec
cmp
les
push
pop
jmp
inc
mov
mov
js
enter
xlat
psubusb
xor
or
xor
js
xchg
cmpsl
stos
popa
les
rorb
mov
nop
mov
into
in
cmc
stos
push
adc
pop
adc
mov
cs
adc
test
adc
pop
data16
lock
jns
and
cltd
mov
adc
nop
outsb
outsb
push
and
push
sahf
jbe
cmp
leave
ret
push
fists
pop
mov
loopne
sbb
mov
nop
ja
lcall
sbb
popf
pop
sub
int
sar
nop
lret
enter
xchg
pushf
mov
or
pop
or
jo
dec
nop
xor
jae
rcrb
mov
dec
js
fnstenv
ret
arpl
xchg
and
pop
mov
icebp
pop
test
test
inc
mov
or
adc
push
xchg
in
jle
or
fwait
or
fadds
or
ljmp
push
cmp
xchg
or
fdivrs
mov
les
jae
and
ljmp
push
add
pusha
test
push
hlt
nop
fsubl
jno
or
pop
aas
mov
jge
mov
cmp
cltd
mov
decb
mov
jb
aam
mov
dec
mov
sub
orb
xchg
iret
std
sub
pop
shrl
ds
mov
clc
jl
popf
loop
xor
inc
repz
fcmovbe
add
sub
mov
inc
out
fsts
or
inc
out
mov
sub
mov
fwait
or
add
and
mov
daa
mov
mov
xor
sbb
xor
arpl
xlat
push
jecxz
xchg
mov
fistps
mov
inc
arpl
stos
js
pushf
add
and
adc
dec
fsts
and
ss
push
popf
cmpsl
mov
jp
loopne
je
push
mov
test
and
mov
pop
lret
out
jmp
mov
lea
outsl
pusha
adc
mov
adc
cmp
push
sbb
ds
out
dec
and
incb
daa
shl
mov
insb
addr16
sub
jo
mov
adc
and
pop
push
xchg
inc
mov
and
adc
call
or
and
stos
cmpsl
mov
dec
adc
inc
popf
cmpsl
add
shr
test
and
adc
mov
lods
sbb
int
or
inc
add
pop
sub
inc
mov
in
test
mov
xor
push
clc
push
mov
enter
or
dec
mov
dec
fs
adc
filds
test
lahf
adc
mov
jmp
mov
nop
mov
sub
in
into
xor
and
hlt
add
rclb
jb
nop
adc
inc
hlt
sahf
or
test
push
mov
cmp
mov
mov
and
cmp
xor
fs
js
out
push
add
sahf
mov
mov
orl
call
rolb
xchg
scas
xor
clc
xchg
inc
or
aad
inc
popl
mov
cmp
cmc
fisttpl
inc
push
sbb
and
pop
outsl
jno
movsb
int3
inc
mov
lea
mov
sbb
xchg
dec
nop
mov
and
lds
and
nop
add
test
sbb
cwtl
insb
inc
and
int3
inc
out
sub
sbb
xor
idivb
add
or
mov
lret
fnsave
jmp
pop
add
cmc
push
lret
push
pop
xchg
ljmp
lsl
and
icebp
mov
stos
popa
roll
mov
mov
dec
and
sub
lret
nop
and
lock
aad
xor
fmull
sbb
rcrl
movsb
cmp
pop
out
filds
out
dec
shrl
jae
jmp
lea
clc
cmc
roll
lock
pop
fcoms
add
cmp
fcomi
or
and
dec
push
pop
or
loope
pop
push
sbb
mov
loopne
adc
pushf
push
add
imul
mov
fdivrl
jb
rclb
out
lret
mov
enter
jnp
cld
pop
xchg
xor
xchg
dec
push
aaa
mov
push
dec
mov
and
lret
int3
jo
inc
fisttps
jo
jo
out
or
sbb
cmp
jecxz
dec
imul
addr16
fsubl
adc
adc
inc
shlb
enter
int3
dec
dec
xorb
insb
ret
xchg
ficoml
sub
cmpsl
and
mov
addr16
push
inc
xor
icebp
xchg
iret
xor
rclb
xchg
pop
daa
lahf
cbtw
dec
out
js
adc
ds
pop
push
les
push
movups
ret
mov
int
inc
push
dec
pop
or
imul
sahf
fildl
test
das
pop
cmp
push
cmp
pop
mov
dec
xchg
pop
mov
ljmp
mov
adc
or
mov
jle
int3
push
les
cmp
xor
sbb
jg
push
cld
mov
xchg
inc
and
or
mov
movsl
loope
cltd
or
adc
cltd
mov
jmp
mov
inc
add
mov
add
std
outsl
sbb
data16
mov
adcb
xor
sub
mov
ret
pop
idivb
adc
add
lock
jp
or
cmc
cmp
popf
cmc
repz
or
fs
and
mov
mov
outsb
aad
mov
sbb
inc
pop
nop
inc
sbb
pop
test
or
xchg
add
sbbb
mov
dec
iret
and
xchg
push
sbb
lcall
nop
enter
sbb
xchg
push
push
dec
lods
mov
fs
and
xor
lret
xchg
push
iret
cmp
sub
mov
xlat
ret
sahf
insl
jnp
xchg
and
lcall
mov
xorb
jnp
jg
ret
mov
dec
cmp
add
scas
rorb
and
cli
pop
mov
adc
leave
sbb
sbb
pop
or
add
xchg
pop
xor
inc
stos
mov
fnsave
xchg
dec
adc
test
sbb
gs
call
enter
jnp
or
outsb
pop
dec
iret
cmp
std
xor
insb
xor
xor
mov
test
cmp
fbstp
and
lahf
pop
fs
sub
test
das
or
je
add
jno
test
mov
dec
or
and
ss
pop
mov
loopne
in
push
dec
dec
mov
into
inc
mov
xchg
add
and
mov
sbbb
int3
out
xchg
and
xchg
dec
mov
int3
mov
push
cmp
cmp
inc
add
cmp
or
ljmp
push
lret
sub
scas
cs
loop
test
sti
sar
cltd
or
gs
enter
sbb
daa
leave
xchg
jne
arpl
lods
pop
jne
mov
sbb
sbb
xchg
inc
lods
call
int3
imul
test
notl
lret
adc
fnsave
aad
xor
imul
and
xchg
shrl
test
mov
lea
lahf
pop
xchg
shrb
and
int
dec
orl
mov
push
sub
mov
bound
inc
push
mov
pushf
fmull
into
push
pop
repz
inc
jb
lock
mov
mov
loope
adc
inc
mov
mov
fcoms
sub
and
lret
xchg
je
popf
sub
call
push
sbb
and
pop
mov
push
pop
repnz
push
icebp
dec
cmp
les
movb
faddl
mov
dec
add
xlat
test
in
insl
xchg
or
or
movsl
movb
inc
movsl
xchg
or
jp
push
mov
adcb
or
sbb
push
mov
fiaddl
dec
out
aaa
popf
js
movsb
popa
cmp
ret
sub
cwtl
jne
sarb
xchg
ljmp
fs
mov
bound
dec
je
pusha
jecxz
mov
add
push
je
lock
nop
xchg
push
and
in
pop
inc
xor
add
mov
push
addb
loopne
arpl
setg
lods
inc
xchg
out
lcall
mov
es
addr16
cmp
cld
test
or
and
or
mov
or
cmp
dec
add
xor
repz
jge
adc
mov
mov
cs
xchg
mov
cmpb
addb
fs
nop
ud1
repnz
mov
es
push
add
sbb
jp
aas
popa
es
inc
xor
xchg
jnp
xchg
add
mov
push
mov
push
test
in
xor
inc
adc
xchg
fwait
mov
sbb
push
push
mov
iret
ljmp
or
dec
adc
stc
call
jp
xor
jb
pop
xchg
pop
inc
mov
testl
and
inc
les
and
push
loope
jnp
jnp
es
lret
sbb
adc
inc
out
and
jne
adc
adc
adc
or
int3
sbb
mov
sti
shlb
pop
xlat
aam
jl
nop
insb
jecxz
push
mov
mov
and
gs
bound
pop
addl
nop
adc
and
inc
das
inc
push
nop
inc
pop
andb
popa
and
jle
mov
pop
jo
cmpb
repz
dec
and
inc
clc
dec
xor
mov
rcrb
inc
test
push
negb
loope
adcl
xchg
sub
test
cmpsb
cmp
data16
xchg
pushf
lret
add
std
out
add
pushl
mov
sahf
cmp
inc
cmp
and
ljmp
imul
mov
add
popa
sbb
scas
push
mov
hlt
add
sub
mov
xchg
xor
jl
sbb
mov
cwtl
inc
and
pop
push
in
xchg
cmp
jo
fadds
aam
lds
pop
mov
sbb
movsl
pop
cmp
std
in
or
je
rcr
dec
inc
lcall
mov
outsb
lcall
divl
jecxz
je
loopne
push
inc
mov
add
sub
xchg
lret
mov
sbb
add
sbb
sbb
add
popf
push
aam
daa
ja
sub
shrl
idivl
and
ret
push
cmp
daa
mov
pop
enter
into
adc
jl
pop
add
addl
pushf
xchg
lods
mov
jo
jp
jno
adc
movsb
sub
les
adcl
mov
rorl
adc
jle
xchg
inc
push
mov
loop
pop
push
cmp
mov
std
fnsave
jge
gs
cmc
fwait
dec
pushf
enter
mov
jns
inc
cld
stos
jne
pop
add
imul
pushf
and
jb
inc
push
adc
mov
and
add
mov
xchg
add
adc
and
jns
dec
sub
push
pop
pop
cmp
cmpsl
xlat
pusha
sbb
inc
dec
movl
je
rcrl
push
push
jle
call
or
popa
hlt
add
popf
ret
mov
repz
lods
add
sbb
sub
pop
mov
loopne
lock
sarb
fsts
xchg
or
out
clc
jno
cmc
je
pop
cmc
clc
and
loop
imul
jo
mov
mov
inc
sbb
mov
ret
sahf
inc
mov
lock
xor
jbe
aam
mov
fmuls
dec
dec
adc
ret
sbb
and
repnz
shrl
cmc
xor
xchg
cmp
adc
lret
sub
jp
popf
fdivr
out
xor
or
add
jb
jecxz
sbb
sbb
jnp
xor
scas
adc
insb
sahf
clc
aam
loopne
pcmpeqw
pop
or
test
sbb
adc
je
adc
cmpb
ljmp
aas
dec
pop
daa
pop
ja
movsb
hlt
add
es
jge
cmp
cmp
cmp
inc
xor
push
jo
jno
movsb
inc
sub
movsb
dec
adc
loop
adc
add
mov
into
push
cmp
lret
push
xchg
and
jmp
shl
punpcklbw
imul
pusha
jno
dec
call
add
push
and
sahf
jle
bound
and
stos
dec
or
cmp
dec
inc
sahf
mov
mov
jne
push
jl
orl
inc
iret
jge
push
jno
mov
sub
je
mov
inc
into
out
xchg
pushf
and
mov
dec
cmp
fdivs
mov
shrl
xchg
adc
int
cmp
jae
sbb
sbb
loope
sbb
in
push
add
les
jb
cld
call
xchg
push
add
pop
cmpsb
jl
jecxz
lret
les
addb
pop
imul
or
fisubs
xor
sub
add
mov
add
clc
daa
push
out
ds
dec
pop
and
xchg
aaa
xchg
mov
sbb
aam
roll
inc
or
cld
cmp
xor
cmp
insl
cmp
jle
rcrb
in
pop
bound
and
or
jl
xor
or
cmp
xor
sbb
or
sub
push
and
lcall
mov
inc
loopne
pop
and
dec
cmp
or
clc
add
nop
fcomps
and
adc
rcll
push
and
mov
mov
inc
push
inc
div
stos
add
xchg
mov
and
and
mov
lock
in
lds
mov
testb
stos
sub
xchg
mov
lret
pop
out
mov
lcall
xchg
iret
dec
add
in
mov
pushf
test
dec
and
cmp
pop
jmp
or
es
adcl
mov
bound
xchg
jl
das
push
jb
jl
or
int3
ficomps
jnp
jae
notl
bound
frstor
jecxz
dec
jl
fidivrl
mov
xor
sub
and
mov
fs
inc
int3
adc
clc
or
popf
pop
push
xor
lahf
jcxz
pop
pusha
lods
icebp
sbb
idivl
xchg
clc
xchg
ds
mov
shl
out
xor
lods
sub
pop
jb
loope
jb
lods
sbb
add
test
jl
lea
mov
adc
adc
mov
xorl
mov
jg
das
jge
lret
sub
fnstenv
cli
or
test
xchg
loopne
adc
sbb
xchg
insb
aad
sub
add
sbb
mov
leave
xlat
int
cmpb
mov
pop
cltd
sbb
or
das
xchg
sub
leave
adc
dec
xchg
test
or
or
ss
xchg
xchg
sbb
mov
push
and
inc
xor
daa
mov
fdivp
mov
test
test
aad
mov
and
pop
xor
andb
test
fsts
jb
bound
jge
xor
ret
outsb
xor
inc
push
xchg
push
or
inc
push
xor
push
mov
xlat
jg
pop
enter
cwtl
clc
mov
and
sahf
in
testb
out
xchg
cmpsl
sub
pop
out
cmp
add
and
adc
cmp
push
enter
inc
mov
bound
in
arpl
fsubrp
idivb
shll
add
inc
xchg
sti
in
dec
dec
and
fs
push
clc
xor
pushf
bound
adc
sub
and
dec
out
das
fimull
dec
pop
mov
add
inc
sub
cltd
sarb
insl
mov
bound
cwtl
mov
jbe
call
jecxz
adc
test
add
cmc
out
addr16
and
scas
xor
and
and
and
push
je
pop
div
xchg
stos
mov
in
lcall
dec
adc
mov
mov
cmpsl
jg
sbb
stos
sbb
and
push
pop
shrb
gs
rclb
pop
popf
decl
sbb
and
push
aam
inc
dec
or
insb
nop
fdivs
inc
and
dec
rorl
shlb
jle
sub
cmp
pop
mov
fistpl
shlb
cmp
inc
popf
shl
adc
or
jmp
adc
inc
pop
ljmp
hlt
rorl
es
clc
test
dec
jnp
addr16
mov
mov
je
or
or
mov
jne
test
sbb
push
les
int3
push
bound
fldcw
xchg
sbb
mov
outsl
popa
or
pop
lcall
test
mov
sub
imul
ror
xor
int
hlt
cmp
mov
add
pop
lcall
pop
movsb
pop
pop
sbb
or
xchg
mov
push
and
or
sysenter
jge,pn
push
xchg
sbbb
test
mov
mov
mov
int3
mov
fsubrl
loopne
pop
sub
mov
test
xchg
out
add
xor
jno
cmpsl
icebp
push
hlt
mov
jb
xor
jecxz
push
and
dec
inc
aaa
dec
popa
xchg
mov
jecxz
and
in
mov
shlb
inc
and
mov
dec
add
dec
adc
xchg
pop
pop
scas
test
xor
ja
and
adc
pop
nop
fsubp
jl
aaa
xor
adc
pop
xor
es
lds
push
nop
dec
cmp
mov
add
notl
sarb
adc
push
cs
add
sti
sbbl
loopne
loope
cli
scas
in
jl
test
or
xchg
shll
dec
pop
jbe
es
fs
xchg
adc
pusha
pop
stc
subb
inc
cmpsb
adc
mov
xchg
or
pop
cmpsb
cmp
outsb
test
adc
cmpsl
and
xor
sbb
jecxz
dec
movsl
cmp
push
sbb
adc
jne
add
jno
fsts
loope
jae
cwtl
rolb
jo
dec
lods
pusha
les
loope
inc
xchg
loope
xchg
inc
pop
int3
clc
and
negl
xor
jmp
das
pop
xor
je
loop
jne
inc
sub
bound
xchg
outsl
int
int
stc
sub
pop
and
xchg
nop
cmp
xor
addl
xchg
pop
and
out
ja
push
rolb
xchg
xor
jmp
and
cwtl
inc
clc
xchg
adc
movl
sbb
push
pop
aad
inc
or
enter
cmpsb
push
loopne
out
in
pusha
rclb
dec
inc
pop
sahf
aas
lea
inc
les
les
fimull
adc
push
xor
hlt
lock
adc
rorb
xchg
ret
add
fdivl
jecxz
adc
arpl
call
dec
lahf
psubq
cmp
jge
xor
adc
test
push
scas
call
jl
xchg
jp
int
mov
jle
cld
xchg
jne
in
test
push
and
xchg
add
pushf
in
jecxz
pushf
aad
sub
adc
lahf
rolb
push
nop
inc
dec
pop
sar
xor
std
ret
adc
test
lahf
cmp
inc
sbb
push
pusha
push
ds
or
arpl
or
jg
or
test
cmpsb
xchg
push
or
jb
andl
sub
inc
jg
mov
insb
mov
insb
aaa
adc
aam
and
aas
daa
or
pop
test
cmc
fldcw
pushl
cwtl
push
shll
std
pushf
ljmp
add
or
adc
mov
enter
xchg
xor
jb
nop
push
cmp
cmp
and
sahf
dec
enter
inc
lret
rcrb
mov
popf
stos
sub
sbbb
dec
adc
adc
test
jns
orl
xorb
add
push
inc
mov
out
jmp
add
notl
xchg
inc
es
rcll
test
and
fwait
sub
gs
adc
xchg
ret
mov
and
sbb
mov
enter
sub
shlb
sarl
stos
jno
jp
mov
push
push
adc
call
out
fcoms
gs
and
int3
nop
and
add
and
sub
mov
lods
pop
lahf
push
inc
xchg
and
mulb
stos
dec
add
cwtl
adc
xchg
sub
xchg
and
sub
lret
leave
xor
xchg
ljmp
movsb
jp
arpl
adc
fs
push
push
or
fcomip
sbb
xor
adc
add
mov
lahf
cwtl
jb
repz
mov
clts
jl
cwtl
lock
xchg
mov
adc
or
adc
adc
negl
or
or
lret
int
sub
push
imul
xor
pop
xor
xchg
les
sbb
inc
mov
ret
mov
mov
lods
xor
adc
and
mov
in
out
ds
push
imul
dec
test
push
mov
repz
or
test
shlb
and
sub
adc
aad
sarb
cld
xlat
inc
and
xchg
mov
cmc
sar
popa
test
or
inc
inc
jnp
mov
sbb
imull
stc
inc
mov
or
lds
xchg
inc
and
push
cmp
adc
ljmp
or
hlt
loopne
imul
lret
mov
icebp
xchg
fs
icebp
or
xchg
loopne
leave
scas
jl
test
inc
mov
add
shl
lcall
cmp
adc
arpl
mov
mov
adc
xchg
outsl
les
test
adc
movsb
popf
add
sahf
outsb
push
mov
orl
xchg
ret
test
rorb
inc
jmp
jb
ret
pop
mov
stc
jns
mov
xchg
ds
adc
cmp
push
mov
les
sarb
cmc
sbb
mov
mov
scas
cmp
mov
push
orb
in
divl
inc
fs
or
jp
lods
sti
mov
adc
pop
adc
enter
xchg
cmp
xchg
fadds
clc
jns
mov
es
hlt
cli
or
test
mov
and
mov
xor
add
add
cli
insb
or
push
sub
add
push
jo
or
and
cmp
aas
push
stos
int3
pop
inc
lret
jns
or
or
mov
dec
lea
cmp
pop
inc
jge
rcrb
sbb
sub
xor
cmc
lods
xor
pop
xchg
int
mov
repz
in
cmc
pop
sbb
or
imul
sarl
inc
sbb
scas
iret
push
and
xor
xchg
test
push
fdivl
add
cld
inc
orl
push
or
add
jnp
repz
mov
jle
aad
cli
mov
dec
cmp
in
inc
jo
jmp
adc
add
push
in
cmp
rclb
and
enter
sbb
in
sbb
jle
sbbb
or
aas
push
addl
mov
jge
push
lcall
jg
sub
inc
mov
insb
pop
add
inc
mov
aam
loopne
inc
mov
loopne
adc
movb
pusha
repnz
nop
mov
sbb
adcb
add
imul
jbe,pn
or
jge
xor
movsb
sbb
xor
test
mov
fildl
in
jg
sub
inc
pop
xor
push
fdiv
mov
add
sarb
and
cmp
inc
cmpsl
test
or
dec
bound
rolb
lahf
cs
push
cmpl
add
shlb
lcall
es
add
das
inc
sub
add
xchg
mov
stc
xlat
lods
rol
cmpsl
lea
es
adc
pop
adc
adc
add
insb
in
loope
das
loop
mov
stos
scas
add
push
jl
mov
pop
mov
adc
cld
adc
push
out
adc
xor
push
mov
push
repz
iret
lock
psubusw
lret
xchg
movsb
roll
shll
sahf
and
popf
ds
inc
jb
adc
pop
iret
mov
fwait
or
call
mov
pop
adc
push
std
je
lcall
xchg
xchg
jmp
mov
jle
in
mov
sbb
in
cmp
sbb
scas
adc
enter
add
adc
cmp
sbb
bound
sbb
sub
mov
xor
sub
pop
and
jecxz
incb
test
dec
fadds
pusha
int3
add
gs
and
push
add
sbb
js
loopne
loopne
ljmp
enter
sbb
sub
sti
lret
addr16
sarb
movsl
add
pop
mov
pop
setb
add
loopne
daa
mov
add
adc
dec
sub
jp
enter
ljmp
push
pop
inc
or
lret
sub
or
xor
adc
jmp
ret
cmp
sub
cwtl
and
fnstsw
clc
add
cmp
sarl
cmpsb
lcall
sub
and
add
jp
and
lret
mov
shl
mov
std
aas
mov
sbb
add
dec
adc
aas
es
pop
jno
pop
inc
cmp
fmull
adc
adc
out
xchg
fisttpll
imul
popl
xor
out
roll
aaa
frstor
add
and
adc
daa
cmp
cmp
es
out
loop
jb
lcall
adc
inc
cs
or
lods
fbld
test
xor
inc
adcb
and
adc
add
mov
pushf
mov
es
jmp
mov
add
ljmp
lcall
inc
lcall
push
sbb
out
add
mov
or
and
xchg
cmp
mov
mov
fs
xchg
push
inc
push
fsubrl
mov
add
es
dec
cmpb
inc
test
inc
push
fdivr
and
jecxz
aad
inc
out
cmp
fiaddl
cmp
cmp
xlat
and
sbb
faddl
cli
cmp
pop
inc
pop
call
cltd
mov
data16
dec
es
inc
cmp
in
sub
push
pop
jmp
push
data16
adc
mov
ret
jmp
or
aas
xchg
test
orb
inc
adc
fidivrs
fcmovu
cmp
test
jnp
test
cld
movsb
arpl
insb
jno
add
sahf
jb
fists
lcall
loopne
or
fisttpll
sub
rorb
mov
xchg
into
clc
cltd
pop
lds
xchg
and
adc
jb
fidivl
enter
jge
icebp
outsb
mov
mov
popf
add
adc
subl
loope
jl
pop
les
inc
sub
repz
out
nop
paddusw
inc
loop
add
inc
mov
inc
cmp
xchg
les
jnp
ds
xor
mov
jns
into
int3
stc
out
push
or
add
shll
inc
mov
clc
add
lods
inc
addb
xchg
xchg
loope
and
push
hlt
icebp
sti
pusha
pop
hlt
aas
dec
sub
decl
addr16
dec
in
cs
lcall
mov
aad
sbb
mov
or
inc
add
loopne
dec
inc
jne
inc
adc
sbb
jg
push
mov
adc
lret
push
std
or
jo
add
sub
sub
sbb
jmp
jle
or
adc
pop
mov
in
pushf
andb
addb
insb
dec
mov
pusha
sarl
xchg
jecxz
add
adc
aad
add
dec
cli
cmp
mov
inc
imul
adc
adcb
mov
pop
and
sub
leave
and
notl
mov
sbb
mov
mov
push
jnp
jns
fsubrs
out
mov
in
xchg
adcb
cmp
xor
push
xorb
mov
loop
jecxz
mov
adc
testb
arpl
push
mov
push
orl
sbb
dec
and
fs
push
imul
test
divb
mov
sbb
std
clc
enter
lock
shlb
bound
and
ljmp
movsb
loopne
mov
sub
jno
push
mov
xor
jno
icebp
xor
and
push
add
adc
js
sbb
push
xorb
imul
jmp
shrl
out
jmp
mov
dec
sbb
pop
out
mov
cmp
or
inc
cmpsb
dec
insb
es
push
xchg
and
jno
and
push
pop
xchg
jl
pop
pushf
sbb
push
js
mov
mov
lock
jge
aam
and
sbb
sarb
divb
or
adc
int
and
xchg
and
sbb
xchg
movsl
add
arpl
in
push
adc
add
aad
push
pop
sbb
roll
ja
mov
sub
pop
dec
das
in
sub
cltd
hlt
mov
mov
cmp
jge,pt
into
and
jge
out
adc
rolb
scas
sahf
xor
jo
inc
xor
int3
xchg
xchg
lret
xchg
jns
insb
mov
cmp
pop
mov
mov
push
dec
lods
jmp
mov
ror
mov
popl
in
push
je
cli
mov
imul
mov
jb
neg
insl
dec
sbb
sbb
and
mov
add
add
data16
lret
mov
sub
roll
push
int3
cltd
dec
jp
insb
int3
pushf
ljmpw
push
xchg
fs
nop
pop
scas
in
inc
test
or
in
adc
xlat
pop
iret
aaa
xor
lcall
test
inc
test
neg
jo
push
mov
loop
mov
in
dec
arpl
pop
and
xor
dec
and
jmp
sub
jno
sbb
inc
ret
pop
adc
aaa
add
push
add
cmp
adc
call
cli
lock
inc
cmp
ret
push
pop
lcall
cwtl
mov
inc
xchg
movsl
cwtl
push
push
fldcw
sub
adc
jp
leave
mov
push
add
repnz
or
xchg
loopne
or
ss
mov
arpl
sub
jge
xchg
xor
sub
cmc
adc
xor
push
sahf
icebp
das
jne
shrb
test
mov
dec
aas
out
jbe
in
dec
cmp
stos
shrb
mov
leave
sbb
pop
push
pop
xor
inc
push
pop
dec
test
mov
jmp
mov
inc
int3
hlt
cmp
cmp
add
pop
frstor
pusha
sub
mov
adc
int3
inc
fidivl
cmp
jecxz
outsb
jo
stos
dec
jbe
sbb
and
sbb
in
push
aad
daa
sub
shlb
or
dec
stc
pop
xor
les
jge
push
dec
pop
mov
cmp
xchg
pop
sub
cltd
push
icebp
in
xchg
loop
sub
xor
aad
sbb
push
hlt
jle
js
lods
lret
clc
and
imul
inc
inc
rcrl
push
movsl
mov
int3
insl
add
mov
sub
push
jl
dec
sti
jb
je
lahf
dec
sbb
inc
sarb
test
in
test
lcallw
andb
aas
dec
or
add
popa
nop
cld
push
or
cld
outsb
cmp
push
andl
lock
xor
icebp
jl
add
movsb
add
inc
cmc
dec
out
and
jmp
call
jecxz
sbb
in
push
jns
or
push
push
and
fbstp
sbb
mov
in
pusha
push
pop
pop
addr16
or
xlat
cmp
jne
sbb
jle
xor
jno
mov
test
inc
inc
stos
and
pop
cmp
loope
sub
lds
cli
test
xlat
jecxz
xchg
push
popf
cmp
addl
cs
adc
mov
cmp
sub
sbb
mov
jl
popf
sub
and
in
orl
jp
add
imul
aaa
mov
sub
dec
adc
out
test
shrl
stc
or
adc
sbb
repz
jecxz
pop
mov
nop
jnp
add
xchg
data16
sub
mov
cmp
and
xchg
jno
int3
test
pop
rcrb
lods
sub
jo
sub
mov
xchg
add
inc
xchg
mov
cmpsl
je
incb
clc
jb
dec
pop
enter
leave
mov
insb
jo
stc
ror
push
outsb
mul
orl
cmp
call
and
mov
sub
mov
aam
pop
daa
jbe
cmp
mov
mov
inc
mov
frstor
sbb
lahf
xor
push
mov
mov
jmp
and
jecxz
and
arpl
fdivrp
aad
ds
fsubs
pop
mov
and
lock
pop
sahf
adc
roll
lds
sub
fwait
pop
mov
push
ret
mov
cmp
cmp
xchg
fwait
pop
ret
enter
les
dec
cmp
and
inc
xor
mov
nop
dec
out
inc
push
mov
pop
jns
rcll
dec
ljmp
jl
ljmp
pop
sahf
cmc
jp
cmp
fisubrl
mov
mov
jne
scas
push
mov
std
pop
mov
rolb
in
jo
inc
aas
rolb
into
pushf
movsl
jns
xor
iret
adc
mov
mov
stos
inc
push
xor
nop
inc
fsts
daa
hlt
addb
fmull
sbb
repnz
push
adc
mov
jle
daa
je
or
iret
adcl
lods
add
jns
imul
rcl
inc
jno
mov
aas
mov
or
in
popa
inc
push
js
pop
and
lahf
adc
pop
fisubs
push
loopne
xchg
inc
js
sbb
clc
xor
pop
push
in
inc
mov
sbb
loopne
jno
add
cmpsl
fimull
sbb
arpl
mov
add
mov
mov
mov
rcl
outsl
xchg
ss
mov
push
repz
jle
fimull
sbb
pop
dec
aaa
das
sbb
fistpll
les
and
add
sub
leave
mov
lods
adc
sbb
aas
lea
sub
xchg
and
mov
bound
xrelease
sbb
cltd
shlb
cmp
cwtl
or
scas
xchg
sbb
inc
xorl
scas
adc
or
inc
jne
xor
pusha
imul
push
std
cld
pop
ds
xchg
lds
stc
lret
sub
sbb
adc
or
inc
popa
mov
adcb
hlt
xchg
inc
jecxz
pushf
and
shll
stos
push
and
pop
ds
or
sbb
xor
or
mov
push
call
xchg
cmp
pop
cmp
push
test
out
sub
pop
or
xor
sub
js
rcrl
sbb
mov
adc
jg
rol
cmp
pushl
push
out
pushf
pop
sti
fadds
mov
mov
shrb
mov
sbb
push
mov
jg
and
gs
or
mov
bound
cmp
aad
pop
cmp
push
sub
mov
or
push
sub
dec
add
stos
test
mov
cltd
add
adc
mov
mov
xchg
xchg
xlat
in
add
inc
push
ds
and
in
sbbl
cli
mov
lcall
dec
jmp
fimuls
mov
jb
jbe
pop
je
sub
mov
push
mov
cmp
mov
adc
mov
cmpsb
push
mov
dec
sub
je
pusha
add
cmp
lock
and
xlat
test
fiadds
cld
negl
mov
mov
xchg
xor
dec
add
leave
xchg
xchg
rcr
pop
sbb
jns
fldl
push
das
xor
xor
out
mov
push
pop
push
test
fstpt
xchg
sti
lods
inc
add
subb
jecxz,pn
inc
jp
sub
pushf
xor
mov
cli
rorl
or
loope
fs
mov
cltd
push
xor
inc
pop
iret
mov
out
and
mov
sbb
and
mov
mov
bound
loop
dec
dec
mov
and
pop
push
mov
jo
icebp
sub
inc
in
adc
addb
jecxz
inc
aad
data16
lcall
pop
mov
and
les
jp
xlat
xor
dec
in
test
stc
loopne
and
lea
jb
add
jbe
clc
cld
adc
sub
or
jge
cmp
sti
add
and
cmp
or
out
jbe
pop
push
aaa
inc
add
bound
cmc
sbb
test
mov
push
dec
add
cwtl
out
adc
add
mov
or
add
daa
add
shrb
xchg
inc
cmp
dec
mov
mov
xchg
setb
ficomps
xchg
adc
push
lock
push
shrb
cmp
inc
xor
and
mov
nop
fs
addb
fcoms
add
jae
pop
insl
ja
outsb
or
and
dec
filds
adc
popa
decl
xchg
repz
test
and
sub
adc
jl
and
mov
and
clc
push
cmc
xor
movsb
push
enter
data16
loopne
add
fcmovbe
add
enter
andl
xchg
addr16
cmpsb
mov
scas
mov
sbbl
lock
jmp
neg
lret
ds
out
out
cmp
loope
cs
pop
push
into
and
in
repnz
imul
mov
xchg
cmp
push
dec
leave
lods
hlt
xor
dec
push
or
dec
mov
pop
test
lret
add
xor
mov
mov
sbb
xchg
xor
aas
mov
xor
pop
pusha
clc
sbb
rcrb
push
xchg
xor
and
movsl
sbb
and
mov
test
pop
orb
push
stos
iret
shlb
clc
xor
mov
cld
add
inc
mov
or
xor
and
adc
jmp
je
xlat
in
inc
lahf
or
cmp
pop
test
adc
das
and
jo
dec
shrb
xchg
push
xchg
mov
test
rolb
js
fsubrl
xchg
add
jbe
sub
push
inc
or
sti
fimuls
sub
test
out
push
xlat
push
int
adc
xchg
pusha
test
sbb
ss
stc
add
scas
sbb
inc
and
dec
sbb
cli
jae
dec
movsb
stos
nop
mov
adc
popa
fs
aad
add
bound
icebp
mov
test
xchg
call
inc
sbb
mov
sub
aas
mov
call
in
mov
xor
leave
xchg
inc
add
mov
shl
and
mov
repnz
cmp
inc
sbb
push
je
lret
dec
mov
and
cmpsb
cwtl
jge
mov
or
mov
lcall
notb
push
push
ret
test
mov
inc
sub
out
xorb
jmp
pop
or
xchg
clc
jp
ds
in
nop
mov
mov
sbb
cmp
icebp
mov
ret
mov
and
push
outsb
in
push
or
scas
mov
xchg
jno
sbb
shll
and
pop
test
fmull
xchg
push
sub
push
dec
or
jecxz
aad
imul
jns
adc
ds
push
add
data16
dec
inc
sbb
or
shl
mov
inc
lock
cmp
xor
fists
jp
mov
mov
fists
push
pop
inc
stc
movsl
cltd
mov
dec
in
mov
sbb
xlat
mov
mov
jne
jns
inc
inc
cmp
mov
jne
sbb
mov
cmp
jns
add
mov
mov
insl
sub
mov
add
xor
cli
inc
orl
and
fwait
rcll
aaa
stos
cmp
pop
ret
inc
cmp
push
dec
jnp
push
xchg
inc
fcomps
fnstsw
xor
test
mov
pop
sbb
pop
push
xor
aad
sbb
xchg
hlt
rcl
lods
je
fs
dec
adc
jg
xor
sbb
mov
mov
sbb
adc
dec
push
inc
and
pop
adc
sub
sbb
jmp
jo
or
xchg
jl
adc
adc
gs
pushf
outsb
popa
sub
idivb
in
sub
fldenv
sbb
mov
test
popl
movsl
mov
js
out
push
pop
add
push
and
push
in
inc
push
push
mov
add
push
jne
mov
xor
std
mov
push
test
nop
push
ljmp
int3
aaa
adc
xlat
clc
jle
sub
xor
into
dec
subb
imul
loopne
mov
adc
or
inc
push
xchg
dec
xor
ds
and
es
pop
int
cmp
and
adc
notl
xor
add
and
cli
mov
test
add
add
inc
fbld
lcall
sub
xor
push
xchg
sbb
and
dec
adc
mov
cwtl
dec
sbb
ret
cwtl
xlat
pop
xchg
bound
aaa
stc
push
es
int3
into
adc
inc
ss
imul
sbb
jo
shrl
mov
mov
xchg
cmpsl
aam
dec
push
test
xor
push
xchg
lea
inc
sub
jno
push
jge
rcr
mov
lcall
mov
pop
and
jb
ret
popa
push
mov
les
addb
mov
cmp
or
movsb
fadd
xchg
dec
mov
lods
popa
nop
inc
fiadds
mov
or
mov
cs
add
jmp
shrl
mov
gs
gs
loope
sbb
lret
fstl
sub
dec
sbb
push
add
mov
icebp
mov
push
scas
seto
andl
in
adc
or
aam
enter
fisubs
sub
pop
bound
std
cmpsl
arpl
add
sbb
add
aam
or
shrl
jo
repz
push
shr
pop
lock
cs
dec
adc
mov
xchg
jbe
add
push
mov
cli
loope
mov
int3
sub
cmp
mov
xor
mov
add
cmp
push
cld
jle
dec
and
dec
aas
inc
and
xchg
cltd
cmp
mov
jbe
fisttpl
pop
and
cmpsl
iret
xor
outsb
mov
ljmp
jb
mov
push
mov
ret
js
adc
lret
mov
or
push
jge
and
rorb
cwtl
jnp
adc
mov
popl
xor
test
mov
and
add
and
jecxz
inc
test
xor
mov
pushf
les
adc
movsb
fdivl
cwtl
cmpb
and
lds
or
push
daa
imul
ja
xlat
cs
test
mov
dec
adc
jl
jno
stos
and
andb
cli
popa
push
xchg
popa
push
add
add
pop
xor
inc
mov
mov
int3
add
test
add
or
xlat
mov
xor
mov
sahf
pop
scas
lret
sbb
cltd
mov
sahf
orb
mov
loope
data16
orl
nop
sub
cmp
push
xchg
mov
xchg
cmc
test
inc
and
jge
mov
dec
clc
mov
inc
add
inc
xor
jl
subb
jne
or
insb
push
pop
leave
dec
gs
mov
and
xchg
inc
clc
add
idiv
mov
jns
inc
mov
sbb
shll
dec
adcl
test
leave
aam
mov
mov
and
sub
lock
lret
and
dec
dec
cld
test
call
mov
xchg
outsb
in
test
jmp
inc
cmp
fistps
adc
mov
sub
roll
xchg
gs
or
ljmp
xor
movsl
add
xchg
cmpl
movsb
in
pop
fidivs
sti
pop
cmpsl
dec
clc
out
xor
movsl
cmp
das
add
push
add
cmpsb
je
cwtl
and
mov
mov
sti
or
js
and
push
push
xchg
and
or
stc
pop
rorl
xor
adc
inc
fistps
or
out
scas
divl
push
mov
sbb
xor
xor
movsb
adc
xchg
ja
sub
shl
dec
xor
outsb
loop
mov
loop
push
push
out
test
push
fists
lods
add
pop
jmp
mov
into
loop
xchg
mov
test
test
push
ljmp
in
leave
adc
sbb
and
cmp
or
jle
push
and
test
push
xchg
jbe
setg
or
add
mov
fisttpll
out
repz
ja
aas
add
outsl
imul
add
jae
pop
pop
out
rcrb
stos
mov
cmp
mov
mov
inc
sub
inc
les
jmp
pop
cmp
imul
adc
mov
adc
cltd
or
xchg
sbb
out
and
add
adc
mov
neg
inc
mov
or
es
mov
inc
xchg
push
add
sbb
test
xchg
cs
mov
or
rolb
dec
sub
lea
pop
xor
cltd
repz
or
jne
adc
test
sub
lods
hlt
push
push
pop
mov
dec
jle
iret
addb
add
addr16
lea
stos
or
cmp
fadds
push
adc
shll
cmp
and
sub
and
or
rcrl
shrl
or
bound
loopne
inc
sub
jne
push
shlb
cmp
dec
fwait
repnz
adc
sub
shll
mov
enter
add
pop
imul
cmpsb
jb
add
call
add
sub
mov
and
inc
lock
repz
sbb
pop
lock
std
call
rcr
lock
ret
mov
mov
and
rcrl
scas
add
cmp
lret
and
mov
xchg
std
sub
pop
loope
jp
pop
repz
sub
movsl
lret
add
or
ljmp
aam
and
lcall
insb
repz
inc
shlb
stos
movsl
cmp
adc
mov
int
mov
add
ret
lods
adc
rorl
ljmp
push
stos
cmp
orb
pop
test
rcrb
and
adc
or
sub
test
cmpb
add
or
out
cmp
dec
adc
mov
orl
add
jne
movsl
mov
xor
xorl
jno
je
dec
cmp
iret
and
leave
pop
fists
xor
lea
xor
mov
movsl
mov
das
cmp
enter
in
sbb
pop
sti
rorl
jnp
jae
pop
icebp
es
jecxz
aam
adc
lock
mov
ja
sub
adc
mov
jge
mov
xchg
mov
mov
or
int
outsb
popa
idivl
inc
push
aas
daa
push
cvtps2pi
xchg
mov
inc
mov
pop
push
repnz
movsl
int3
xchg
sahf
mov
xor
jp
xchg
pop
xor
dec
cwtl
jl
push
ds
sub
sbb
pop
add
fdivrs
push
dec
mov
test
sahf
adc
inc
or
in
lods
or
sti
cmp
sti
jns
xchg
pop
pop
ss
mov
das
push
jg
jae
jne
mov
pusha
call
sbb
stos
mov
data16
icebp
add
fbld
add
and
adc
pop
xchg
xlat
aam
rol
xchg
call
in
and
mov
cmp
addr16
push
sub
add
fbld
dec
es
mov
sbb
in
jecxz
cltd
mov
mov
shll
fsubrs
test
add
in
lcall
loop
adc
jmp
insl
inc
pop
fistps
outsb
jge
and
int
je
enter
movl
popf
lock
and
mov
mov
aas
mov
sub
add
xor
jmp
mov
gs
aas
xor
movsl
dec
les
gs
cmc
cmp
add
push
push
cmp
push
ja
add
add
sbb
in
rcrl
or
dec
les
imul
pushf
lea
push
stos
rcrl
xchg
sub
scas
andb
roll
or
lock
mov
cmpsb
mov
push
shll
or
les
sub
jl
push
mov
fs
jb
xor
lea
loop
and
mov
rolb
xchg
pop
xor
inc
lret
pmullw
aas
xchg
jecxz
add
outsb
inc
xchg
fstpl
mov
shlb
and
clc
loopne
mov
sbbb
lea
pusha
mov
dec
or
mov
in
or
mov
xchg
mov
xchg
fistps
ss
and
test
mov
jg
adc
or
in
dec
cli
jle
sbb
outsl
insb
out
ds
mov
jno
sub
test
lahf
outsb
mov
and
jg
loopne
fdivl
push
mov
or
jae
jmp
stos
cmp
xchg
xor
sub
and
mov
xor
or
aad
inc
mov
ficomps
fldt
popa
and
or
movsb
and
gs
bound
xor
ficomps
push
ja
sub
hlt
in
fs
mov
pop
push
and
insb
nop
lcall
jle
mov
cmp
xor
mov
icebp
aad
std
repnz
aaa
shrb
in
jnp
out
adc
cmp
mov
inc
inc
add
ret
or
movsb
add
mov
cmp
or
arpl
pop
jbe
stc
nop
dec
icebp
lret
sbb
into
aaa
je
nop
jns
xor
lods
pop
sarb
inc
add
and
and
xor
or
xor
lcall
push
clc
test
lret
pcmpeqd
jne
mov
fdivrl
mov
mov
mov
shlb
add
dec
or
or
dec
inc
je
lea
xchg
xor
inc
and
and
dec
rcr
sub
xor
and
mov
shlb
xchg
cmp
scas
cmp
mov
hlt
call
add
add
adc
mov
ret
repz
jne
xchg
shr
inc
fcoml
xchg
cli
sub
aaa
cs
fnstcw
test
mov
sbb
or
dec
mov
ja
loopne
or
iret
ret
mulb
es
add
mov
lea
cmp
jl
outsl
xor
xchg
push
ror
mov
add
mov
push
xor
jns
add
jmp
into
xor
lds
push
pop
push
inc
inc
dec
xor
sbb
pop
sbb
or
inc
shrb
dec
mov
ljmp
bound
adc
xor
aam
jmp
inc
addb
nop
and
xor
cwtl
mov
dec
ljmp
jmp
and
cli
and
repz
jno
std
bswap
mov
int3
jno
cs
and
cmp
iret
cmpsb
or
or
inc
add
xchg
jnp
pusha
hlt
fs
js
sbb
xlat
and
mov
mov
bswap
rorb
cli
push
or
inc
jle
andl
daa
outsb
xchg
cmp
out
and
sub
lahf
dec
fdivrl
shll
jle
addr16
fists
fiadds
add
dec
adc
rcrl
fiadds
inc
notl
int3
dec
jbe
enter
add
iret
xchg
divb
dec
mov
jmp
and
and
and
pop
into
testl
adc
mov
aaa
adc
dec
xchg
jge
xor
jne
and
xchg
xor
rcll
loop
pop
sub
and
scas
jl
cmp
xor
jl
mov
or
ret
or
mov
cmp
mov
rorl
pop
and
lcall
add
pop
cmp
push
pop
faddl
dec
adc
mov
pop
jnp
sub
std
popa
dec
das
mov
and
fdivp
add
lds
aad
test
pop
cwtl
ret
mov
lea
das
leave
push
mov
xor
mov
cld
repnz
xlat
sbb
fwait
cmp
mov
orb
mov
xchg
gs
pusha
xor
out
call
fisttpll
xchg
leave
and
stos
add
add
pushf
leave
test
mov
daa
push
inc
inc
push
inc
or
mov
xor
shrl
fcomi
jne
popf
das
les
iret
repz
test
pop
ss
mov
sbb
pop
mov
iret
nop
hlt
push
push
mov
std
sahf
mov
sbb
bound
dec
push
pop
std
outsl
sbbb
jns
ds
adc
cmp
inc
ljmp
cmpsb
xor
and
cmp
int3
dec
jp
sub
nop
divl
std
adc
rolb
xchg
in
jae
add
jne
movsl
inc
and
ljmp
sub
iret
pop
into
or
add
fisttpll
or
adc
fsubl
subb
out
mov
ret
inc
cmp
repnz
je
adc
adc
std
inc
inc
rcr
pop
lods
push
adc
adc
icebp
lea
add
mov
sub
les
xchg
mov
xchg
fs
inc
xchg
popa
ja
jne
shlb
test
and
ljmp
push
dec
in
sbb
icebp
push
mov
repz
sahf
dec
aaa
movb
out
xlat
and
xor
adc
call
sbb
pop
sub
ficoms
add
fisttpl
out
orb
loop
push
pop
cmp
addr16
mov
push
in
xor
mov
inc
sarb
xor
cmp
imul
out
xchg
in
or
sahf
and
jp
addl
in
dec
dec
jns
aas
enter
pop
mov
push
aaa
pop
sarb
shrl
inc
pop
test
scas
ret
or
pusha
cmpsw
jbe
jb
xchg
subl
inc
jo
stos
loopne
mov
sub
jge
inc
sbb
out
mov
xlat
mov
hlt
adc
push
sbb
dec
or
int3
jns
and
aaa
adc
or
stc
lods
push
inc
or
xchg
xor
ja
dec
add
add
push
adc
fdivs
cmc
sub
scas
pop
xchg
mov
mov
inc
and
add
pop
push
out
outsb
call
adc
test
xchg
lea
jl
add
sbb
mov
enter
inc
inc
ljmp
andl
xor
lahf
mov
ds
pop
add
xor
push
dec
in
sub
xchg
jbe
cmp
xor
mov
gs
add
add
jl
and
scas
addr16
jge
lret
push
in
iret
addb
out
arpl
dec
xor
or
push
sub
or
ret
xchg
loopne
shll
dec
movsl
popf
jge
cltd
das
rclb
push
or
jmp
cmp
lret
push
shrb
xchg
int
clc
iret
repz
pop
sub
repz
mov
iret
add
arpl
int3
int3
sbb
ja
xor
sbb
sub
mov
rclb
inc
xrelease
inc
push
or
xchg
movsb
in
fwait
test
jnp
sub
leave
xchg
or
mov
pushfw
inc
aam
fistps
call
xlat
pop
sub
mov
fdivp
xor
lock
cli
clc
repnz
add
nop
shll
ret
or
ss
xor
lods
sbb
outsl
xchg
outsl
mov
add
aam
push
cwtl
jge
push
dec
hlt
add
xchg
sub
scas
push
repz
push
lods
call
add
pusha
lahf
cld
inc
ljmp
or
hlt
xchg
in
and
pusha
sub
push
dec
xchg
adc
arpl
xchg
mov
sub
fs
mov
inc
add
mov
add
add
js
das
test
push
faddl
js
inc
and
imul
mov
push
sbb
mov
or
mov
or
sub
lret
cld
sti
and
dec
es
mov
push
je
mov
fimull
ret
sbb
push
testb
cltd
cltd
out
or
test
fcomps
dec
jno
popa
and
inc
pop
push
shrd
adc
dec
test
pop
jecxz
jmp
aad
mov
xchg
and
mov
sbb
add
clc
inc
pop
cmp
push
add
or
imulb
or
sub
mov
inc
js
adc
sahf
inc
clc
pusha
pop
dec
popf
fstpt
jns
repz
push
int
js
rclb
sbb
outsb
xor
and
sbb
push
aam
mov
add
push
in
es
inc
sub
pop
jge
push
testl
stos
outsl
add
jb
fdivrs
clc
fbld
sbb
mov
ret
inc
push
scas
adc
int
repnz
std
add
pop
cltd
sub
mov
and
les
jecxz
inc
mov
push
imul
iret
adc
xchg
clc
out
adc
sub
das
notb
sbb
nop
orb
cmp
jo
mov
or
adc
scas
inc
jb
or
movsb
stos
jno
call
daa
jg
cmp
xchg
jo
xor
mov
mov
pop
jle
iret
or
dec
shll
pop
add
or
inc
jns,pn
adc
push
inc
xor
sbb
aam
adc
add
xchg
adc
cmp
popl
mov
xor
mov
roll
adc
out
test
jecxz
mov
dec
ja
jl
add
mull
or
ljmp
loope
dec
enter
xchg
leave
jb
fmul
cltd
dec
mov
sarb
ret
xchg
fnsave
int
aaa
rorb
jae
fnstcw
adcb
adc
test
fnstcw
or
scas
pop
add
jg
xchg
jle
pop
int3
inc
cmp
jae
imul
fstl
sbbl
andl
into
push
xor
or
test
mov
ds
add
push
push
rorl
shrb
dec
mov
pop
pop
mov
cmp
pusha
clc
cmp
lea
adc
add
xlat
jmp
loopne
sbb
jp
rorb
sbb
mov
incl
filds
jne
mov
pop
jno
push
scas
popa
pop
pop
xor
jl
aam
mull
loopne
xor
mov
xchg
xor
and
lahf
pop
add
addb
fst
xchg
pop
lea
push
popf
inc
xor
inc
cld
mov
lahf
in
xchg
xorb
push
dec
fsubrl
adc
dec
pushf
adc
adc
sub
mov
push
sbb
jmp
pop
adc
push
and
xchg
cmp
decl
int3
push
jecxz
lds
push
enter
lahf
flds
mov
sub
fs
aaa
mov
and
add
fsubl
or
xor
orl
push
das
stc
adc
repz
scas
sub
adc
scas
faddl
or
mov
ret
xchg
es
sub
add
cli
test
lds
add
ljmp
ljmp
add
mov
adcb
mov
xchg
das
sbb
mov
mov
adcl
shll
cmc
pushf
cmp
cli
or
faddl
mov
push
sbb
stc
jo
push
enter
js
enter
ljmp
add
and
cmpsb
pop
jp
mov
orl
mov
xor
cmp
sbb
jne
push
test
jb
push
adc
ret
sbb
push
pusha
or
fistpl
mov
icebp
cmpsl
fildll
sbb
add
sbbl
lret
loope
inc
jg,pt
pop
ds
xor
in
lods
push
test
movsl
inc
mov
or
adcl
sbb
mov
adc
rol
xor
inc
adc
outsb
or
aaa
jl
xchg
iret
mov
movsl
or
cld
lock
mov
fdivrl
inc
daa
inc
adc
adc
mov
stos
les
dec
test
sahf
lcall
jns
lret
pop
cs
add
sbb
and
cltd
sbb
insb
int3
adc
pusha
xor
pop
leave
shll
push
orl
pop
movsb
push
and
cmc
mov
sbb
cmp
jecxz
inc
and
in
jo
ret
adc
or
or
and
lea
cwtl
adc
decl
or
mov
pop
in
mov
ds
out
es
xchg
aaa
inc
and
mov
ret
inc
cld
aaa
xor
mov
xor
push
and
xchg
sub
dec
adc
cwtl
test
inc
and
mov
loopne
pusha
lock
mov
fwait
adc
insl
shlb
mov
shlb
daa
push
jp
sub
subb
lds
jmp
in
jmp
push
popf
scas
push
or
adc
xchg
fs
outsb
xchg
adc
xchg
daa
lret
jmp
lods
leave
sbb
inc
mov
cmpsl
and
outsb
push
or
inc
or
bound
cltd
sbb
int3
cmp
ds
mov
sbb
mov
push
pop
pusha
out
mov
sbb
inc
push
mov
and
xor
add
mov
clc
mov
jg
dec
in
cmp
movl
outsb
sub
push
ds
popl
aas
pusha
dec
mov
sub
ja
mov
inc
jge
in
cmpsb
push
jns
push
add
lds
loopne
and
mov
dec
rolb
jne
mov
pop
sub
jbe
lods
sub
xchg
xchg
cs
xchg
aam
adc
rorb
scas
push
arpl
rorl
jno
imul
and
jbe
sub
and
push
inc
mov
jae
rcrl
pop
adc
and
fldl
jmp
test
xor
jecxz
clc
outsl
mov
xchg
in
xor
fmuls
or
adc
ljmp
inc
cmc
pop
and
cmpsl
inc
pop
mov
sub
sti
mov
ljmp
mov
inc
imul
mov
dec
and
add
pusha
mov
out
lea
xorb
cmp
jne
les
or
sbb
sbbl
lds
add
cld
sarb
adc
fs
addr16
lock
dec
pop
cmp
mov
movl
sub
or
stos
dec
sbb
and
je
icebp
mov
jae
push
push
jl
idivl
pushf
rorl
popf
cwtl
out
test
fdivrl
test
and
xchg
rcll
push
mov
mov
sahf
cs
jnp
mov
fsubrs
rep
mov
shlb
inc
cmp
sahf
dec
ja
xchg
pushf
mov
pop
add
jo
ret
movsb
mov
jmp
xchg
scas
pop
pusha
es
roll
lret
insb
das
mov
inc
mov
push
ss
mov
pop
dec
adc
xchg
nop
test
scas
iret
test
add
inc
and
movsl
cmpsb
loope
cwtl
sbb
and
lcall
nop
in
incl
pusha
jmp
mov
or
sti
sub
loope
and
call
testb
dec
lods
aad
ljmp
and
fld
arpl
xchg
imull
or
adc
xchg
inc
cwtl
mov
xor
outsb
cmp
out
enter
pop
into
testb
dec
cld
adc
mov
ret
mov
stos
inc
mov
add
rcll
mov
scas
or
xchg
gs
and
bound
bound
push
das
dec
lock
lea
inc
andl
or
mov
jl
sbb
mov
add
dec
sub
lock
adc
mul
roll
bound
mov
hlt
jb
iret
pop
jl
mov
add
icebp
sbb
xchg
xor
out
cmp
push
sbb
call
add
cmc
jo
add
sti
inc
outsl
mov
pop
mov
daa
cs
cmp
mov
addb
jbe
sub
lods
add
xor
add
mov
pop
sub
rolb
mov
inc
and
inc
lret
and
leave
sarl
pop
add
ss
pop
in
inc
dec
adc
hlt
cwtl
mov
in
es
cld
fiaddl
mov
jne
sbb
cmc
xchg
or
xchg
adc
shlb
mov
sbb
or
sub
loopne
mov
xchg
movsb
dec
aas
lret
pushf
ret
xchg
mov
mov
cmpsb
push
ds
mov
rolb
xor
cmp
adc
push
xchg
pop
cs
addl
add
xchg
gs
push
shl
push
mov
shrl
test
pop
dec
xor
fidivrl
popa
sub
dec
daa
lods
jae
jl
xchg
jb
mov
push
test
cmp
popf
std
inc
cmp
cwtl
mov
fwait
cmp
int3
sbb
mov
ljmp
fsubs
andb
movsb
repz
pusha
hlt
xchg
outsb
jo
xor
push
sub
adc
aas
push
dec
icebp
or
jmp
mov
jl
scas
in
enter
mov
aaa
fs
fmuls
push
inc
outsl
dec
stos
js
dec
or
and
and
push
insb
lret
flds
adc
inc
add
sub
int3
aas
bound
fdivrp
cld
and
xchg
adc
mov
and
mov
cmc
adc
repz
cwtl
popa
sbb
pop
jb
aad
es
dec
repz
cltd
add
or
mov
jmp
inc
mov
sub
push
sbb
add
mov
jmp
sbb
and
inc
xchg
fs
mov
popf
ds
mov
cmpsb
ret
pusha
jl
sbb
iret
in
or
inc
push
aam
pusha
or
jbe
xchg
arpl
cli
jl
jb
mov
addr16
sbb
test
in
repz
or
dec
sbb
jbe
arpl
sahf
icebp
enter
push
jnp
cwtl
mov
sahf
pop
push
sub
nop
and
sub
pop
test
lods
dec
mov
sbb
das
hlt
dec
xchg
and
loopne
daa
mov
scas
je
jmp
test
jno
loopne
mov
repz
xor
sub
dec
adc
mov
push
in
or
les
leave
test
dec
jns
lea
or
inc
lret
jns
push
lea
lret
xchg
jp
das
insb
dec
lods
and
dec
adc
pop
inc
dec
addb
push
jecxz
scas
ds
lret
add
pop
and
sahf
xchg
cs
les
lock
rcrb
or
inc
pop
or
bound
jmp
loope
push
fidivrl
push
pop
push
ja
loop
movsb
sbbb
push
mov
push
out
jge
mov
notb
rolb
imul
addr16
adc
or
xor
fnstcw
sub
test
mov
ret
shlb
sahf
push
and
enter
call
sbb
cmpsl
pusha
ret
sub
or
pop
inc
int3
stos
stos
xor
inc
mov
shr
sub
inc
divl
mov
in
pop
dec
add
rolb
lods
bound
or
inc
inc
push
push
jns
dec
test
adcb
mov
xchg
adc
pop
movl
push
adc
leave
cmp
lds
push
push
add
mov
pop
add
loopne
jmp
inc
add
fadds
fdivr
daa
mov
int
in
outsl
sub
xchg
adc
mov
cltd
mov
ljmp
pop
enter
test
mov
mov
out
sbb
mov
subl
flds
insl
ds
inc
popa
mov
ret
push
in
cmpsb
int3
inc
mov
xor
aas
test
ret
test
ficompl
ljmp
dec
mov
adc
or
pop
sub
dec
inc
sbb
pop
push
jb
mov
stos
enter
add
xchg
mov
movsb
cvtps2pd
inc
xlat
xacquire
ret
in
ret
aam
mov
xor
sbbl
or
adc
jns
subl
mov
push
test
shlb
sti
imul
xchg
push
push
scas
imul
outsl
jne
dec
shll
lahf
xor
jns
imul
xor
add
je
cmpsb
loop
push
addl
push
dec
push
pop
out
pop
xor
shrb
addr16
shrb
cmp
push
jmp
mov
mov
jl
push
mov
stos
or
or
xchg
jmp
inc
sti
mov
popf
add
xlat
int3
into
clc
icebp
push
mov
loopne
mov
daa
cmp
mov
daa
cmp
aad
call
push
xor
clc
adc
push
push
dec
movsl
ss
and
je
leave
cltd
sar
inc
xchg
das
aas
push
jno
pushf
sub
sbb
sbb
adc
ret
push
push
sub
rcrb
add
xchg
inc
xchg
leave
das
and
adc
add
sub
xchg
punpckhwd
mov
jecxz
and
nop
xor
adc
in
lret
jp
inc
mov
pop
sub
sbb
sbb
sub
addb
xor
dec
mov
mov
and
mov
arpl
loopne
add
call
and
xchg
jns
addr16
ud2
hlt
xor
sbb
scas
cmpsb
xor
cwtl
xchg
addb
adc
mov
xor
sti
test
mov
adc
insb
enter
rcrl
fistl
jmp
shrb
cmp
adc
inc
add
pop
inc
adcb
test
hlt
push
xor
int3
jg
call
lcall
inc
dec
add
int3
add
or
shlb
xor
or
adc
inc
mov
cs
sbb
in
add
or
cwtl
loope
sbb
mov
aaa
lahf
popf
sbb
inc
and
xchg
test
rol
push
inc
inc
lret
es
inc
outsl
sbb
ret
mov
or
popa
fnstcw
adc
jo
scas
ret
xorb
int3
dec
arpl
andl
mov
aas
or
and
cwtl
ffreep
jo
pop
jge
mov
mov
repnz
mov
jmp
and
or
stc
out
and
xchg
or
shll
xor
movsb
rclb
int3
arpl
cmp
mov
xchg
xor
adc
sbb
dec
add
xor
xchg
or
jno
add
mov
or
push
movsl
add
add
jo
mulb
repz
pop
call
mov
and
adc
inc
sub
repz
xchg
and
dec
push
sub
dec
js
loop
mov
and
in
loopne
xor
cmc
push
sbb
and
inc
pop
mov
dec
and
xchg
notb
add
or
pop
adc
push
mov
inc
sub
sub
daa
test
push
push
test
adc
cmpl
mov
mov
in
push
xor
push
js
mov
data16
cmp
or
leave
mov
rcll
inc
inc
movsb
lahf
jb
and
out
add
lret
nop
daa
cmpb
leave
imul
xor
add
or
push
repz
les
and
push
cld
or
mov
mov
ljmp
inc
mov
test
mov
repz
lret
test
pop
push
ds
or
and
mov
push
subl
mov
cltd
sarl
mov
mov
fiadds
jg
jecxz
nop
es
sahf
in
les
sub
jo
or
jge
mov
mov
add
int3
jae
adc
sbb
outsl
mov
mov
lock
insb
sub
stos
aas
mov
xchg
bound
push
fldenv
fdivp
xor
mov
and
shrb
aas
aas
xchg
stc
xor
jecxz
dec
xchg
cmp
idiv
pusha
cmp
xor
sbb
stos
jbe
push
scas
sbb
jg
jge
popa
imul
push
addr16
push
stos
dec
xor
adc
inc
and
inc
or
fcos
sbb
gs
test
cwtl
xchg
pop
shlb
cmp
mov
adc
in
fisubrl
jl
sbb
iret
adc
push
leave
rcrb
enter
jbe
int
mov
inc
mov
mov
adc
sbb
test
push
dec
pop
mov
push
nop
repz
addr16
test
lahf
pusha
lea
daa
iret
gs
mov
lahf
dec
adc
adc
leave
andl
aad
ljmp
icebp
push
int3
icebp
mov
mov
clc
cmp
cmp
movsb
icebp
xorl
ficomps
clc
std
add
call
repz
lret
mov
loope
and
jecxz
clc
movsb
jecxz
daa
cmp
cmp
ror
pop
roll
push
and
icebp
pop
stc
ror
or
cmp
call
xchg
rorb
xor
jae
xor
and
jnp
cmp
loope
dec
out
jg
jl
jecxz
pop
ja
loop
xchg
jle
sahf
sbb
repz
mov
jno
shlb
jmp
ds
clc
inc
stos
xchg
inc
dec
sub
stc
push
repnz
mov
cs
int3
jle
dec
sub
mov
add
js
sub
cwtl
iret
cwtl
xchg
out
scas
xchg
lret
mov
mov
xor
pop
aaa
loopne
and
sti
rorl
pop
stos
push
andl
ds
je
hlt
xchg
xor
cwtl
inc
push
add
dec
hlt
inc
ret
xchg
fnsave
mov
xlat
outsl
rorl
adc
sahf
push
add
addl
dec
push
push
test
adc
xor
outsl
mov
inc
lds
add
xchg
pop
loop
enter
sbb
test
cltd
stc
push
xor
roll
mov
movsb
xchg
or
rcrl
bound
inc
shr
fimuls
sub
js
xor
in
test
aam
imul
jle
cmp
and
mov
xchg
inc
mov
push
pop
add
test
ret
xor
inc
aaa
test
pop
lods
xorb
repnz
sarl
lcall
mov
or
and
push
and
jp
shrb
sub
or
stos
mov
cli
sbb
push
sub
test
push
xorb
adc
and
push
mov
movsl
hlt
or
leave
repz
test
mov
inc
xor
mov
adc
mov
dec
sub
add
stos
bnd
notl
adc
int3
jl
movsl
adc
lret
or
push
xor
cwtl
roll
and
jl
mov
and
fsubl
xchg
or
dec
push
popa
xchg
mov
xchg
inc
aas
testb
rclb
push
mov
and
xor
pushf
popf
addr16
xor
cmp
pop
mov
ret
pop
data16
or
test
sbb
jns
icebp
xchg
add
lret
dec
out
lods
bound
sub
stc
sahf
jmp
or
add
pop
adcl
add
int3
mov
xlat
inc
or
sub
fadds
inc
xchg
js
sbb
pop
mov
dec
cmp
xor
data16
adc
dec
pop
sub
mov
xchg
cmpsb
das
mov
in
cmp
ds
loop
into
in
xchg
cmp
and
inc
imul
mov
push
mov
or
outsl
addl
mov
fidivrl
sbb
mov
or
adc
pop
or
push
sub
pand
insb
lods
xorb
xchg
mov
push
dec
ds
push
pop
stc
adc
adc
repnz
and
or
dec
xchg
adc
stos
inc
cli
adc
push
out
in
aam
add
mov
or
mov
adc
push
call
mov
adc
filds
rcr
push
cmp
add
rcrb
inc
or
cmpsb
loope
or
jmp
xchg
push
push
push
and
cwtl
dec
mov
in
sahf
je
jnp
andb
inc
sahf
cli
test
jl
xor
movl
adc
js
push
orl
fs
adc
les
sar
sbb
mov
cmp
or
add
shlb
or
and
adc
inc
push
adc
push
mov
arpl
das
dec
mov
es
mov
xor
inc
pop
push
mov
insl
idivb
inc
out
mov
xor
dec
and
in
ja
xor
pop
inc
add
sbb
call
lea
sub
sbb
sbb
cli
lahf
inc
mov
inc
aad
and
inc
mov
jl
les
test
adc
push
adc
mov
in
jl
dec
adc
fmuls
test
adc
push
push
popa
push
hlt
sub
sub
sub
add
shlb
leave
test
adc
add
dec
mov
test
leave
fldcw
inc
sub
test
outsl
jmp
pop
aam
push
inc
sbb
js
cmpl
cmpsb
subb
jno
dec
or
mov
or
in
jno
sbb
int
xor
data16
adc
fisttpl
js
cwtl
cmpsl
add
mov
stc
adc
add
movsl
add
dec
sbb
int3
ret
add
test
dec
aas
pop
jo
push
add
cmp
fisubl
xchg
fildll
out
bound
test
lret
jge
stc
jbe
daa
cld
add
dec
lods
push
inc
shll
push
cwtl
inc
inc
inc
xor
xchg
into
in
fimuls
movsb
dec
idivl
pop
fnstenv
aad
adc
pop
sbb
dec
jp
sub
data16
dec
inc
fadds
inc
inc
repz
leave
xor
ror
inc
lds
cmpb
xchg
sahf
test
mov
aaa
pop
and
movsl
adc
push
pop
add
cwtl
pop
pop
pop
orl
dec
ds
and
xchg
cwtl
fisubl
shll
sbb
or
sub
inc
add
jne
inc
or
cli
cltd
dec
aas
push
mov
sub
hlt
gs
sbb
lret
mov
xchg
rcl
inc
into
mov
add
pop
jbe
mov
sbb
xor
mov
pusha
movsb
lret
xchg
pop
inc
test
adc
mov
mov
jnp
cwtl
sbb
jo
pop
add
jbe
xchg
out
sbb
imul
or
ds
cmp
jg
adc
sbb
adc
mov
push
stos
outsb
pop
pop
ljmp
inc
in
push
cmp
mov
fldt
mov
mov
lea
mov
inc
adc
and
add
pop
daa
add
adc
andl
bnd
jbe
mull
popl
add
movsb
jg
xor
enter
push
stos
mov
fwait
sbb
and
jg
test
xchg
push
in
lret
push
adc
outsb
pushf
pop
inc
pusha
nop
sub
xor
cmp
or
pop
repnz
jae
imul
xchg
push
or
xor
add
push
cwtl
test
inc
pop
int
pusha
mov
pop
adc
mov
cmp
sbb
pop
mov
mov
stc
js
ja
lea
ret
sarl
popf
popa
push
mov
fmuls
cwtl
ret
jne
and
mov
xchg
push
push
cmp
mov
outsb
inc
push
pop
and
and
or
sub
lahf
fwait
cmp
stos
xchg
pop
xchg
mov
cwtl
and
inc
lods
and
inc
xchg
mov
mov
push
push
or
lea
pusha
lods
daa
inc
push
pop
pushf
push
mov
add
jns
or
mov
dec
cmpsl
ret
jp
xchg
repz
and
loopne
cmp
pop
into
add
or
lods
mov
repnz
jp
dec
inc
ljmp
in
or
cwtl
test
out
adc
dec
ds
xor
jo
jge
sti
mov
or
adc
cmc
mov
out
xorl
and
mov
push
lret
adc
mov
lods
push
arpl
inc
lods
je
fidivrs
adc
or
adc
test
sub
and
lahf
add
jo
add
cs
pop
fsubrl
push
jo
bound
xor
cltd
aad
std
les
and
adc
adc
aaa
cmc
adc
dec
imul
mov
movsl
std
or
mov
add
aaa
mov
jle
cmp
les
test
movsl
daa
or
add
mov
ret
popf
enter
mov
mov
sbb
bound
test
mov
adc
out
xchg
andb
cwtl
pop
lret
test
nop
cwtl
mov
cmp
loopne
push
or
dec
fldl
jmp
cmc
outsl
test
aam
into
sbb
mov
popa
adc
adc
andb
adc
sahf
adc
push
rcrb
divl
mov
cli
and
jge
cmp
mov
int3
inc
sti
or
jge
mov
cmp
lcall
add
sbb
mov
mov
in
mov
loopne
mov
inc
jnp
int
fmuls
inc
fidivrl
mov
int3
jb
xchg
inc
push
mov
call
mov
xor
xor
xchg
addr16
std
mul
adc
clc
push
enter
das
sub
or
jae
xlat
sbb
jle
xchg
xchg
stos
sub
test
mov
ret
inc
sub
in
adc
mov
loop
xor
inc
mov
mov
xchg
fidivrl
in
dec
sbb
xor
adc
sub
inc
aam
or
pop
cmp
roll
and
pop
sbb
test
or
or
sarb
pop
sub
or
xlat
push
and
add
daa
and
inc
andl
imul
sbb
out
inc
push
fmull
xchg
mov
fists
int3
leave
pop
xor
in
ljmp
and
cmp
cmp
insl
jne
mov
lret
dec
pop
adc
mov
adc
sbb
push
fdivr
sbb
in
inc
mov
xor
out
push
jbe
mov
imul
adc
xor
fnstenv
mov
push
mov
and
mov
push
dec
mov
cwtl
xchg
mov
lret
push
sub
and
scas
mov
mov
mov
clc
adc
sbb
shr
pop
cmp
mov
leave
and
daa
pop
inc
mov
je
mov
xor
dec
or
xlat
and
push
js
sahf
and
sub
test
addl
cmp
dec
repnz
sti
add
sbb
jnp
gs
repz
sbb
and
add
daa
pop
adc
cmpb
enter
mov
test
xchg
in
cmpsb
and
les
test
adc
hlt
adc
dec
pop
pop
aaa
pop
je
shr
adc
jmp
adc
mov
testl
mov
enter
jbe
mov
sub
sbb
popf
popf
dec
loop
sbb
push
mov
lret
jp
xchg
sbb
cs
adc
xchg
inc
nop
sub
and
pop
push
cmp
test
adc
test
inc
mov
mov
fcoms
or
pop
and
arpl
fidivrl
pusha
lret
push
stc
xchg
mov
push
pop
mov
or
or
scas
hlt
cmp
pop
pop
lock
rorb
sub
or
scas
mov
cwtl
data16
test
pop
xor
shr
ror
les
popa
lock
mov
add
add
repz
stos
sub
mov
inc
mov
jle
aas
mov
shl
lods
in
movl
jb
stos
je
xor
popf
pusha
pop
aad
and
jecxz
or
mov
add
jl
sbb
sbb
cli
ret
add
cmp
fidivl
pop
jmp
daa
dec
daa
add
pop
inc
pop
mov
out
aas
in
dec
mov
lock
scas
lock
sub
flds
jb
adc
mov
adc
sbb
xlat
lds
es
inc
scas
stos
sbb
jae
inc
sbb
outsl
mov
mov
cli
outsl
push
mov
lock
xor
nop
daa
out
push
sti
xchg
out
aad
test
arpl
cmp
clc
or
test
sub
mov
pop
push
mov
loope
ss
ja,pn
aam
and
xor
mov
mov
sub
ret
sahf
ds
decl
js
adcb
mov
cmp
dec
jl
cltd
fwait
xchg
sbb
pop
xor
sbbl
cmp
test
pop
push
das
cmc
pop
mov
sub
add
aam
or
push
fildl
and
sahf
scas
jecxz
scas
fs
adc
arpl
fisubrs
adc
xor
jo
inc
lds
and
out
lods
cld
sbb
cmp
mov
stos
jnp
sub
inc
andl
clc
inc
mov
fistpll
es
je
fs
xor
sub
mov
add
icebp
inc
cltd
imul
add
adc
mov
sahf
loopne
push
adc
rcrb
roll
jns
cwtl
add
adc
rolb
jae
fisubl
stc
sub
movsb
daa
sub
xor
jo
mov
into
or
push
and
fsubs
adc
cmpsb
mov
xchg
or
sbb
test
in
jmp
test
out
push
les
or
ja
pop
les
inc
ja
cmp
adc
mov
inc
jl
and
gs
out
push
movsb
and
sbb
ret
sbbb
movsb
mov
fildll
lret
or
adc
or
push
mov
mov
mov
orl
test
or
out
mov
fcomps
mov
sbb
mov
and
lcall
movl
sbb
setno
adc
lret
popf
jo
cmp
inc
push
divl
sbb
dec
inc
jb
jp
push
pop
push
repz
mov
and
adc
iret
adc
mov
shr
add
lcall
xchg
dec
arpl
push
jae
out
nop
xchg
nop
xor
push
aad
fistps
and
push
fwait
jnp
jecxz
test
fistpl
popf
sub
cmp
daa
and
ljmp
push
loope
test
iret
push
mov
jecxz
sahf
or
or
mov
stos
das
lods
rorl
cmpsb
add
popa
jne
rclb
sbb
cld
pop
pushf
cmc
cltd
xor
xchg
into
divl
out
aam
pop
push
or
loopne
mov
loope
arpl
mov
pop
ret
mov
jno
inc
xchg
adc
pusha
out
clc
inc
out
das
xor
fld
sbbb
push
gs
ss
mov
dec
dec
je
lea
int3
outsb
xchg
or
sub
cmp
dec
jg
xchg
mov
pop
push
sub
dec
cld
xchg
xchg
popa
orb
xchg
inc
inc
inc
sub
aad
ds
les
sub
and
mov
jnp
inc
enter
inc
iret
jnp
test
adc
into
imul
sbb
jae
ljmp
fs
fdiv
cli
pop
cmpsb
push
int3
mov
pop
dec
cmc
inc
mov
inc
jl
rcll
lock
ds
lods
psrlw
xchg
lahf
stos
loope
add
sub
fdivl
jno
out
cs
dec
add
jmp
jl
sahf
test
lods
push
roll
push
jbe
sub
push
and
mov
dec
xor
addr16
inc
repz
gs
test
and
les
xchg
fidivl
imul
mov
inc
push
jecxz
jbe
movsl
addb
shr
and
movsl
sti
loopne
loop
cwtl
push
in
pop
adcb
or
mov
add
jl
gs
or
sarl
cmp
xor
pop
xchg
stos
pop
inc
add
and
inc
xchg
addl
fs
aam
fcomi
and
jno
cmp
or
aam
sbb
and
dec
push
sub
add
imul
or
sarl
cmpsb
push
pop
cmpb
mov
call
or
sbb
inc
lret
inc
enter
fs
add
sub
ret
pop
out
mov
xchg
daa
lock
add
repz
addr16
add
push
inc
js
and
lret
push
and
dec
out
cltd
test
mov
and
add
cmc
test
lret
or
rorb
test
inc
leave
inc
or
dec
jo
mov
cmp
roll
cmc
cmp
das
push
add
jb
pusha
mov
xchg
jecxz
dec
flds
enter
jl
stos
xchg
pop
lods
jg
and
pop
and
lret
dec
loopne
pop
out
add
cmp
add
mov
add
nop
dec
adc
test
push
aam
xchg
or
stos
sub
inc
push
add
or
jae
sbb
arpl
mov
cmovno
sub
inc
jbe
add
loop
icebp
or
shll
ret
push
push
leave
dec
lock
jge
cmc
push
push
adc
inc
sub
push
sub
dec
xor
orl
nop
pop
and
mov
and
pop
jnp
add
movsb
aam
cwtl
lret
sub
push
fld
rol
pop
or
adc
xchg
mov
bound
xchg
popa
aad
dec
pop
jno
es
jp
xor
std
and
js
inc
sbb
add
jle
ss
push
cli
cs
jmp
call
bound
dec
andl
push
jg
and
dec
and
iret
lret
std
xchg
adc
push
sbb
and
pop
adc
and
sub
les
rolb
sbb
fldt
sub
das
adc
jg
dec
and
xchg
pushf
jo
jl
repz
sub
int3
and
fisttpl
lcall
fcmovu
cmp
fcomip
or
xlat
insb
je
fs
in
js
dec
push
cli
into
dec
inc
orl
cltd
lds
out
push
enter
int
pop
dec
call
inc
psubsw
xchg
mov
or
inc
mov
insl
push
cmp
aas
setge
test
jmp
add
mov
mov
mov
push
xchg
sbb
in
mov
rcll
adc
mov
hlt
mov
imul
add
std
outsb
sbb
jmp
mov
jl
lock
cwtl
pop
lahf
data16
lret
jo
mov
std
bound
pop
adc
lods
pop
aas
dec
sub
xlat
sti
in
test
and
das
setbe
xchg
cmp
sbb
lea
ret
addr16
add
push
repz
out
int
and
xor
adc
mov
add
sbb
cltd
es
sahf
xor
or
repnz
mov
icebp
data16
fnsave
jbe
cmpb
test
mov
sarl
mov
or
pop
fs
in
mov
sub
call
add
lods
add
mov
and
cwtl
dec
test
repnz
push
sbb
lods
mov
lcall
pop
and
sbb
mov
jle
int
push
sub
push
and
add
std
sub
jle
mov
xchg
fnstcw
es
inc
inc
test
adc
fadds
jecxz
cmp
icebp
mov
and
jecxz
sub
in
ret
cltd
andl
dec
xor
push
mov
fwait
sbb
and
add
stos
aad
mov
cwtl
adc
cli
xor
stc
shr
mov
std
stos
mov
sbb
mov
mov
cwtl
out
xor
out
inc
adc
adcb
adc
addr16
jne
pushf
mov
mov
mov
nop
push
cmp
mov
test
add
xchg
aam
ret
hlt
hlt
addb
shlb
jl
inc
inc
scas
movsl
jb
or
inc
mov
std
jp
les
js
mov
imul
or
xor
stos
rcll
mov
sub
lret
lods
pop
pop
mov
xchg
xor
jp
adc
in
clc
fs
adc
nop
movsb
sub
std
pushf
in
aas
ja
cmp
aam
outsb
cmc
fldenv
add
jnp
sbb
stos
out
call
lods
pop
and
scas
arpl
cmpl
xor
push
push
inc
xchg
lds
in
adc
in
adc
and
add
mov
push
sbb
jp
mov
ret
dec
pop
lret
pop
pop
adcl
pop
rep
sbb
addr16
xor
ret
push
and
mov
jmp
popa
cmpsl
push
xchg
xor
adc
das
inc
add
jecxz
add
sub
enter
cld
pop
movsb
sbb
aad
cs
xlat
test
xchg
xor
pop
mov
inc
and
inc
lea
and
ljmp
add
jle
push
sbb
fs
mov
mov
push
inc
or
int3
scas
sub
inc
std
xchg
mov
xchg
inc
xchg
pop
repz
or
testb
push
jmp
or
or
pop
std
jl
or
in
jae
jg
clc
dec
push
pushl
or
adc
push
aas
mov
fisubrl
outsl
test
cwtl
lods
push
inc
sub
or
repz
sti
addb
xor
pop
fcompl
and
lods
les
push
mov
outsl
fwait
sbb
adc
jnp
dec
mov
dec
xchg
stos
shlb
or
lds
cmpsb
xchg
xorl
push
aad
popa
mov
dec
xchg
dec
call
fmuls
ja
mov
ljmp
jns
dec
cmp
dec
pusha
imul
icebp
push
mov
cmp
xlat
in
stos
inc
jbe
pop
adc
xor
adc
add
ljmp
jne
es
ja
js
or
xchg
cmp
jno
jae
xchg
pop
das
mov
test
xchg
rorb
push
adc
data16
repz
dec
or
dec
push
stos
fs
cmp
push
negl
xor
add
xchg
push
mov
mov
mov
xchg
xor
punpckhdq
popf
sbb
cmp
push
pusha
push
fbld
dec
dec
cmp
xchg
movsb
mov
imul
sbb
adc
add
mov
mov
xor
or
mov
adc
pop
and
xor
mov
pop
add
and
and
daa
test
push
add
xchg
mov
cmp
adc
cmp
jb
je
andb
inc
xchg
test
scas
jb
pop
insb
lret
adc
jo
addr16
outsb
repz
inc
fdiv
adc
jb
leave
and
cmpsb
push
sbb
mov
xchg
cmp
or
lds
xchg
and
shrb
adc
cmpsl
and
mov
insl
push
dec
loopne
pop
inc
mov
cltd
adc
and
loopne
xchg
sbb
xchg
or
pop
fdivrl
xchg
test
pop
or
cmp
sbb
fldt
insb
xor
fsubr
push
cmpl
hlt
leave
stc
dec
jno
add
inc
cwtl
jle
mov
sub
push
rep
leave
mov
and
xchg
and
dec
arpl
popf
into
shrb
pop
or
or
xor
push
andb
andl
mov
out
inc
push
mov
fidivl
cmpsb
add
pushf
add
sub
xor
sti
in
pop
orl
iret
repnz
sub
xchg
adc
lea
add
fsub
mov
add
add
dec
add
insb
iret
mov
cli
andb
repnz
cld
mov
movsl
pusha
in
jns
test
mov
or
scas
cmpl
and
call
and
mull
mov
fcompl
cmp
adc
and
cvttps2pi
inc
and
xchg
xlat
cs
outsl
or
lcall
notb
in
movsb
fs
mov
enter
mov
rol
mov
pop
lea
mov
int3
scas
imul
push
stos
xchg
std
daa
mov
daa
sbb
ss
jl
fidivs
or
adc
inc
sub
fs
and
push
pop
inc
cli
sub
lods
icebp
loopne
call
add
int3
dec
frstor
xlat
ds
inc
and
xor
jo
dec
in
dec
popf
enter
nop
inc
ljmp
pushl
movsb
dec
sub
test
sub
inc
mov
or
push
out
repnz
out
mov
stos
sub
and
loopne
mov
and
inc
jo
inc
leave
cmp
test
mov
dec
push
pop
dec
std
xchg
mov
or
dec
pop
dec
dec
bound
mov
adcl
dec
lea
loope
cli
bound
dec
cmpsb
imul
sahf
sbb
xchg
mov
rcrb
out
cs
mov
es
outsl
imul
push
inc
sub
lock
aam
pushl
adc
inc
shlb
into
fistl
cmp
fldl
outsl
or
or
sub
in
fsqrt
out
mov
cs
jb
adc
lods
jno
jl
outsl
repz
xor
call
adc
jne
es
mov
jno
call
and
das
jmp
inc
es
xchg
scas
jmp
xchg
out
xchg
add
imul
or
outsl
cmp
fldcw
cmp
mov
pop
orl
push
xor
cmovb
jmp
inc
lahf
add
nop
jnp
cmpsl
lahf
push
mov
mov
push
ret
adc
test
jbe
test
aad
pusha
sti
pushf
loopne
jecxz
xlat
or
clc
adc
jne
push
xchg
mov
cmp
mov
lcall
clc
sbb
cli
xchg
sbb
xchg
push
xchg
in
lock
loopne
or
sbb
push
or
xchg
mov
aad
push
fldcw
neg
or
and
pop
inc
or
or
xchg
or
cli
and
rorb
sbb
xor
mov
xchg
mov
fadds
push
pop
add
pop
incl
fidivs
mov
jns
pop
sbb
pop
subb
or
sbb
cli
and
pusha
mov
les
lret
pop
cmp
xor
xchg
lods
repnz
push
dec
pop
mov
add
xrelease
sub
mov
adc
arpl
out
call
popa
cmp
pop
enter
int3
mov
jg
into
and
xor
adc
add
adc
push
jmp
cmpsb
adc
add
mov
jne
ljmp
mov
and
sub
push
loop
js
push
inc
mov
mov
aas
xchg
shll
xchg
pop
sahf
or
mov
jg
inc
xor
mov
push
mov
aaa
call
xor
push
test
or
movsl
stos
test
or
push
lods
adc
es
sub
adc
xadd
pop
loope
jno
jle
dec
xor
mov
gs
xchg
or
adc
ljmp
enter
pop
push
jle
add
movsl
hlt
add
mov
xchg
insb
jmp
pop
mov
pop
or
data16
fidivl
repnz
sub
adcl
mov
pop
push
mov
mov
test
dec
nop
jmp
mov
cwtl
adc
inc
cmp
mov
xchg
cs
sahf
rolb
divb
es
and
mov
ss
adc
addr16
mov
imul
aam
or
push
ret
outsb
incl
stc
enter
inc
mov
int3
aad
icebp
std
pop
adcl
jl
nop
dec
les
pusha
iret
cmc
dec
dec
int3
divb
xor
pop
pop
call
test
mov
add
nop
and
insb
jge
xor
je
or
adc
pop
adc
or
icebp
fldl
mov
rclb
out
add
push
pop
inc
ret
adc
inc
int3
test
sbb
add
ljmp
pop
jecxz
mov
or
inc
lcall
pop
jmp
mov
and
or
inc
mov
iret
shl
fldt
daa
fiadds
pop
jmp
xor
xchg
inc
mov
pusha
inc
mov
fs
push
inc
clc
mov
xchg
adc
sarb
adc
js
xchg
cwtl
adc
outsb
mov
int
idiv
xchg
out
and
xlat
sub
inc
test
cli
shlb
iret
arpl
fisttps
add
and
xor
sub
loop
sbb
sbb
mov
insl
insb
cmpsl
adc
out
arpl
inc
lret
inc
es
out
adc
xchg
xor
andl
in
add
push
cmpsb
sbb
push
pushf
into
orb
test
pop
movw
and
shrl
add
inc
enter
add
les
lods
lods
ds
sub
fs
cmp
lods
insl
aas
bound
fisubrs
ds
cmp
adc
xchg
aaa
test
pmovmskb
lcall
and
jmp
xchg
jl
test
dec
or
adc
leave
test
or
sub
dec
repz
sarl
xorl
nop
ljmp
xchg
inc
int3
adc
push
mov
and
and
cmp
cmpsb
repz
sahf
addr16
xor
cld
and
mov
mov
add
and
bound
dec
aam
push
and
mov
add
push
imul
sub
inc
jg
dec
jge
fcmovb
idivb
mov
aaa
inc
xchg
testb
dec
mov
rcrb
call
inc
dec
ds
xchg
dec
nop
stc
dec
mov
inc
shr
xlat
sbb
adc
pop
call
and
out
mov
nop
faddl
mov
dec
cmp
inc
nop
pop
cmp
je
mov
mov
adc
ss
pusha
mov
popa
imul
pop
push
in
adc
in
pop
lods
into
xor
push
jno
mov
jg
js
fmull
stos
mov
aad
orb
inc
push
pushf
fimull
dec
and
pop
jo
mov
loop
cmp
jecxz
push
lds
bound
pop
inc
adcl
pop
xchg
add
subl
ret
sahf
add
pop
push
or
es
lret
mov
cli
adc
nop
mov
mov
inc
cmpl
xor
dec
cmpsl
sbb
scas
pop
aas
push
aaa
add
sub
ss
dec
negl
cmpsl
or
dec
adc
out
jmp
rcrb
pop
sub
xchg
adc
or
sub
xchg
add
imul
xchg
adcb
mov
sbb
jb
and
cwtl
inc
mov
inc
pop
and
xor
mov
scas
rorl
mov
adc
lcall
lret
add
sbbb
fsubr
andb
jecxz
xchg
call
std
adc
cli
movsb
or
adc
inc
int
add
sbb
cmp
ljmp
mov
inc
sti
or
nop
out
movsl
push
mov
cli
mov
rcl
adc
es
sar
arpl
pop
dec
mov
hlt
add
loop
cmp
dec
jmp
addr16
mov
adc
call
paddb
jle
cmp
inc
mov
or
inc
loope
push
ljmp
ss
cmp
dec
pop
dec
jge
mov
pushf
mov
xor
sub
hlt
in
inc
push
xchg
pop
test
sbb
pop
ja
and
cmp
inc
xchg
jecxz
and
add
push
and
movl
and
subb
rcll
jnp
and
es
jl
nop
hlt
sbb
test
xchg
and
adc
push
imul
adc
add
cmpsl
cli
mov
inc
sbb
mov
add
in
int3
call
dec
add
dec
mov
sub
incb
in
mov
stos
jb
aam
xchg
mov
pop
or
xchg
and
in
ret
dec
call
adc
and
sbb
mov
jae
into
movsl
adc
xor
lods
dec
into
lods
or
pop
add
pop
xor
or
repnz
adc
push
outsl
pop
add
sbb
mov
pmuludq
stos
aaa
cltd
sub
pop
cmpl
lods
push
inc
adc
repnz
std
adc
orl
pop
jmp
inc
cmpsb
ds
inc
inc
or
inc
pop
dec
shll
lods
stos
pop
mov
mov
jge
fcmovne
adc
pop
mov
leave
and
cs
push
push
loop
inc
sub
mov
in
push
les
push
loop
test
pop
inc
dec
and
jg
push
lret
add
nop
arpl
je
outsl
dec
rcrb
jns
push
hlt
xchg
jecxz
inc
jecxz
addb
fsubrs
add
jo
sub
or
in
test
mov
pop
sbb
pusha
addb
and
push
mov
mov
mov
lock
push
sub
xchg
inc
adc
pop
jmp
ret
sahf
adc
in
inc
imull
iret
lea
cmpsl
inc
testb
scas
push
mov
jno
ret
xchg
pop
cmp
pop
and
add
and
das
mov
pusha
rep
pop
cwtl
sub
mov
ret
add
inc
dec
and
daa
scas
and
push
pop
add
inc
push
daa
gs
out
sbb
xchg
dec
and
sbb
cmp
es
pop
arpl
push
adc
xor
lds
icebp
fimuls
and
subb
test
test
jl
inc
pusha
arpl
or
inc
insb
inc
movsb
jo
sub
scas
pop
fmuls
fildll
sbb
je
sbb
mov
or
mov
jne
jp
fidivl
and
or
les
pusha
jo
dec
test
add
orl
fnstcw
or
mov
bound
shll
inc
pop
dec
mov
cmp
sbb
jecxz
lds
jl
adc
cmp
out
adc
inc
lock
xchg
jno
test
and
cmpsb
outsb
mov
std
dec
shl
xor
sub
mov
sbbl
out
xor
rcrb
xchg
cmp
hlt
pop
xchg
dec
jecxz
int
push
inc
into
aad
out
mov
pop
push
ret
lods
test
xchg
and
mov
subb
pop
cmp
push
dec
test
hlt
pop
ljmp
mov
inc
dec
insb
pop
dec
adc
rorl
sbb
mov
ror
xchg
mov
dec
add
or
add
sbb
dec
sbb
mov
inc
or
fs
add
test
jecxz
adc
xchg
test
fmull
sbb
jle
clc
cld
inc
outsb
aad
xchg
mov
lds
lods
adc
loop
inc
mov
mov
dec
mov
lds
xor
daa
les
sub
sub
jo
aam
movsb
adc
mov
or
testl
mov
inc
in
cmp
pushf
ret
loope
jl
out
cmp
push
jae
inc
dec
cli
cwtl
push
test
lret
inc
bound
out
aam
push
cmpb
mov
lods
roll
shrb
cld
push
push
jns
pop
dec
jne
subl
inc
jnp
ret
cld
jns
and
pop
aaa
repz
jo
mov
movsb
cld
dec
pop
arpl
ja
inc
mov
sbb
ja
fdiv
or
push
lods
sbb
jmp
add
addb
push
std
xchg
movsb
dec
xor
adc
sbb
cltd
popa
xor
push
and
icebp
icebp
loop
cld
ja
and
cli
outsb
lcall
lcall
je
and
sbb
push
movsb
push
js
int
mov
push
mov
arpl
cli
loop
and
pop
mov
and
das
and
rol
add
push
sbb
mov
xchg
int3
iret
sbb
mov
jmp
addl
fimull
adc
inc
sub
stos
popa
sbb
push
mov
xchg
lcall
mov
int
mov
sbb
mov
mov
shr
loop
lahf
popa
xor
out
xchg
dec
sbb
or
rolb
jne
sbb
ss
nop
scas
push
or
push
test
dec
aad
cmp
and
jae
imul
push
fnstenv
bound
cs
ds
jno
add
stc
repnz
mov
daa
sub
add
movsb
push
add
mov
in
js,pn
xor
push
clc
jg
inc
inc
lret
xor
or
add
paddb
jo
push
xchg
stc
ja
mov
cwtl
enter
and
push
add
mov
jecxz
rol
inc
dec
jo
add
movsb
dec
lcall
outsl
imul
xor
and
and
incb
mov
inc
pop
cmc
xlat
fcoms
pop
dec
add
imul
pop
sub
popa
jb
dec
aaa
nop
adcl
sub
in
cmp
lret
inc
and
or
add
mov
jge
adc
cmp
cs
and
lahf
clc
push
push
mov
xor
or
out
adcb
xlat
push
mov
out
jp
add
jle
sbb
adc
call
add
andb
or
jae
lock
jg
pop
and
insl
cmc
push
or
divb
ljmp
sbb
mov
mov
leave
dec
into
push
rcrb
cmp
jp
sub
ljmp
push
and
xor
aam
mov
xchg
push
stos
dec
out
xchg
jecxz
cmp
cmc
pop
xor
and
sbb
and
xchg
pushf
and
loope
dec
lea
mov
jno
sbb
mov
pop
dec
dec
inc
xchg
dec
inc
inc
push
xchg
jge
rorl
es
and
in
mov
xor
stc
ljmp
or
call
adc
out
lret
add
jnp
jo
jecxz
and
mov
mov
or
or
daa
add
mov
dec
adc
mov
out
sbb
movb
jo
ljmp
sbb
or
push
cld
movsb
jmp
jl
xor
sbbl
mov
push
cmc
aam
imul
loope
lea
adc
jmp
adc
test
les
mov
sar
inc
sahf
leave
lretw
push
mov
call
dec
or
clc
jle
xchg
adc
lret
scas
leave
jp
sbb
ret
pop
das
adc
pop
ljmp
push
cmpb
leave
addr16
cmpsl
pop
arpl
ret
jb
pop
cltd
imul
pop
or
call
jae
dec
mov
xchg
call
push
sub
cli
cmpl
sbb
pusha
sarl
mov
add
and
adc
jb
bound
pop
jnp
out
adc
inc
outsl
inc
rcrl
es
hlt
sub
push
sub
xor
lret
adc
or
dec
push
inc
inc
test
pop
les
inc
cmpb
xchg
shr
push
in
sbb
je
test
movsb
add
add
cmpsl
sbb
sub
xor
outsb
addr16
je
lea
cltd
or
push
orl
push
adc
push
add
orb
mov
cltd
push
xor
mov
fisubl
repnz
out
repz
xorb
adcb
nop
mov
pop
pop
mov
outsl
dec
pop
js
push
fcom
in
out
xor
lea
mov
cmp
out
adc
mov
dec
outsb
pop
jp
nop
mov
sub
inc
xchg
scas
xchg
or
jl
inc
insl
push
into
adc
and
sub
jae
aam
int
lret
scas
mov
cld
loopne
negl
test
aad
mov
xchg
mov
dec
mov
sbb
fimuls
addr16
or
adc
mov
inc
ja
lock
pop
fcompl
adc
inc
lcall
cli
js
xchg
adc
out
dec
push
jge
mov
lods
add
aam
or
push
int3
data16
and
iret
push
jne
or
mov
push
mov
lea
clc
push
xchg
aam
pop
jg
mov
cmp
movhps
adc
add
mov
inc
fstpl
je,pt
mov
push
adc
and
icebp
int
dec
bound
call
addb
ss
push
mov
in
pushf
pop
inc
mov
or
and
add
xchg
pushf
movsl
daa
sbb
test
and
push
test
add
or
int3
ret
mov
popa
std
and
rorb
or
popf
add
repnz
jbe
adc
cmp
inc
rclb
sbb
leave
xchg
les
xchg
add
xor
mov
pop
pop
ret
jno
imul
adc
and
push
and
inc
jecxz
loopne
jno
jp
jecxz
pop
stc
jle
sbb
mov
out
sbb
in
cmpsb
xchg
callw
cmp
repz
cmp
enter
aad
in
es
and
sbb
shlb
dec
in
sub
insb
adc
jmp
addb
sahf
push
nop
sub
inc
mov
popf
push
pcmpeqb
dec
xorb
cmp
imul
pop
inc
arpl
or
sub
sbb
jb
rcl
fadds
daa
incl
pop
and
xchg
ss
push
inc
and
push
cld
adc
xor
leave
int
add
xchg
icebp
or
mov
mov
or
adc
mov
out
pop
push
mov
adc
ja
cli
pop
jns
push
and
inc
push
push
mov
test
mov
add
bound
sbb
into
adc
les
out
scas
mov
sub
or
test
scas
test
fisttps
outsl
int
pop
push
in
or
loope
imul
ja
add
dec
lahf
jge
and
cmp
dec
mov
out
dec
mov
lock
aam
adc
mov
and
nop
leave
hlt
faddl
inc
enter
add
test
or
xchg
popf
dec
andl
movsb
repnz
fxtract
pop
pushf
adc
mov
fsubrl
lret
fnstcw
mov
test
fimull
xchg
cmpsb
inc
lcall
pop
sub
push
sub
push
xchg
or
add
mov
repz
push
sbb
call
xor
inc
mov
into
mov
xor
or
sbbb
cltd
xor
dec
and
stos
jno
jl
adc
jo
and
cli
push
ret
dec
sarl
rolb
or
xchg
and
mov
pxor
insl
dec
fisttpl
mov
or
dec
cmc
fistps
cmp
popa
dec
inc
xor
mov
add
scas
xchg
or
cli
mov
int3
inc
mov
xchg
add
cmp
shlb
cwtl
adc
loop
mov
inc
add
jp
in
enter
sub
orb
push
popa
add
mov
push
rdpmc
adc
xchg
out
or
out
ret
pusha
stos
test
jmp
movsl
xchg
push
mov
lret
adc
inc
cmpsb
or
lock
cwtl
pop
xor
call
in
int3
repnz
mov
shlb
sub
pop
mov
add
outsl
mov
pop
les
mov
pop
add
jp
cs
repnz
repnz
cmc
adc
inc
enter
dec
inc
nop
pop
out
mov
aam
mov
outsl
mov
fsub
icebp
aaa
stc
in
cmp
pop
sub
mov
push
jne
xor
jns
inc
pop
fmulp
add
subb
ss
sub
dec
pop
sbbb
mov
clc
cwtl
mov
loope
inc
repz
dec
fs
rol
lcall
mov
sbb
mov
and
mov
add
cmp
dec
inc
stos
adc
cmc
add
sahf
inc
aam
xor
mov
fwait
arpl
daa
adc
div
mov
xchg
pop
mov
scas
pop
test
andb
movsb
xchg
dec
clc
sub
addb
cmc
ret
adc
push
out
xchg
inc
and
sbb
icebp
push
popa
jae
call
pop
or
call
stc
and
or
inc
sub
sub
cmc
movsb
rcl
push
or
add
mov
jp
out
cmp
test
lahf
aas
mull
jb
mov
int3
xchg
outsb
inc
nop
fdivs
decl
les
jno
mov
int3
inc
jmp
cmp
inc
sbb
fwait
test
stc
cmp
movsb
inc
popa
ret
push
stos
and
ret
shrb
out
mov
imul
nop
pusha
ss
lahf
mov
bound
cmp
ret
mov
adc
addl
js
add
ret
mov
pop
test
pop
lcall
pop
lods
add
lds
xchg
dec
cmp
ljmp
adc
mov
push
nop
das
mov
inc
movsb
iret
and
push
ret
outsb
sub
or
jmp
inc
cmp
jnp
or
adc
jecxz
and
push
loope
and
and
js
mov
push
sbb
xor
add
insl
jl
ficoml
in
mov
xchg
out
insl
insb
fbstp
lcall
cmp
or
mov
sbb
mov
adc
mov
inc
cs
in
add
xchg
cmpsb
xor
shrb
cmpsb
cmp
mov
jnp
add
test
enter
pop
and
cmp
pop
jnp
mov
inc
dec
mov
adc
std
sbb
jecxz
daa
sbb
inc
cmp
xchg
scas
adc
pop
imul
sti
enter
mov
je
mov
rolb
cli
mov
das
in
push
push
stc
xor
scas
dec
add
sbb
aaa
and
sbb
or
or
shll
or
mov
clc
sub
add
insl
jecxz
jmp
sti
mov
mov
or
push
dec
lock
addr16
sbb
out
jmp
jle
loopne
or
addr16
or
leave
inc
xchg
bound
sub
sbb
push
inc
fcompl
add
inc
push
xchg
xor
loop
add
stc
mov
dec
ja
cmp
add
sbb
mov
add
ds
inc
int3
add
das
scas
jp
dec
in
push
jbe
cmp
xor
adc
int3
std
jo
int3
xor
scas
ret
mov
xchg
cwtl
adc
dec
adc
or
es
push
leave
stos
mov
push
inc
mov
flds
out
adc
andl
cld
insb
xchg
addr16
nop
fdivrp
xor
cmpsl
xor
adc
pusha
xchg
xchg
add
sub
dec
add
test
inc
push
push
pop
push
std
mov
pop
scas
ret
loopne
cmp
test
addb
lahf
cmpsb
xlat
arpl
inc
or
push
inc
inc
fstl
add
add
and
pop
int
out
push
push
enter
cwtl
enter
lds
aas
sub
fildll
addr16
dec
push
push
sub
sahf
or
enter
mov
arpl
xorb
leave
jge
fcomps
mov
incl
push
test
xchg
ret
cmpsl
mov
xorb
jmp
fisttpll
call
sub
inc
dec
stc
fcoml
add
lahf
mov
or
das
in
push
fisttpll
sub
dec
xor
jge
in
jge
sbb
cs
ss
in
aad
sub
stc
mov
mul
mov
and
dec
push
movl
jno
lods
mov
xorl
insl
adc
nop
mov
inc
add
stos
lods
dec
cmpsb
nop
jne
push
xor
jge
add
je
add
lret
pop
in
sub
inc
es
cmpsl
xchg
or
push
out
pop
mov
adc
or
aas
inc
or
or
call
andb
xor
stos
sub
cmc
xlat
lahf
jno
cltd
cld
dec
add
sub
inc
out
dec
dec
icebp
adc
shrb
or
out
mov
xchg
js
mov
cmp
mov
out
jl
sbb
mov
aam
mov
lret
int
repnz
aaa
or
loope
adc
mov
jmp
xor
pop
push
dec
test
popa
xor
inc
in
out
mov
inc
jae
add
adc
add
enter
iret
call
add
andl
test
and
fists
adc
icebp
daa
pop
cmp
push
or
pop
push
lret
sbb
mov
jb
jecxz
adc
and
pop
or
out
pop
sub
mov
loopne
jbe
outsl
dec
add
stos
or
dec
stos
xor
mov
push
int3
or
enter
pop
lea
stos
cmp
wrmsr
xor
cmpsb
and
add
push
or
sbb
or
sahf
dec
outsl
sub
jo
out
in
mov
adc
std
push
popf
fwait
dec
mov
movsl
sbb
xchg
lods
mov
andb
jecxz
mov
xlat
pop
in
scas
loope
fnsetpm(287
aaa
test
inc
sarl
dec
mov
imul
inc
or
les
cli
sub
jmp
mov
xor
jp
inc
xor
imul
adc
test
shl
sbb
push
pushl
sahf
fbld
mov
pop
inc
ret
fisubs
dec
xor
push
xor
adc
adc
packuswb
scas
in
nop
adc
loope
dec
arpl
xor
shll
mov
xlat
mov
testl
inc
xchg
pop
ja
cs
ret
xor
data16
loopne
stos
rorb
icebp
sbb
push
or
pop
or
je
bound
xchg
mov
sbb
addb
loopne
out
shlb
fcmovbe
xor
xchg
pushf
sub
jmp
bound
adc
pop
jge
fs
and
cmp
sub
adc
adc
cmp
scas
mov
fisubs
movsb
xorl
push
cmp
sbb
sbb
xchg
xchg
sbb
or
mov
jg
xchg
loope
push
jne
ret
daa
ja
and
dec
inc
cmc
nop
dec
sub
rolb
rcrb
test
and
jb
xor
mov
adc
ja
int3
mov
loopne
fdivp
lsl
pop
and
and
sub
and
inc
cmp
repz
out
push
dec
es
jae
and
inc
lcall
jecxz
jl
sub
test
into
and
mov
cmc
gs
in
in
jnp
xchg
sarb
or
mov
outsb
leave
pop
adc
mov
aaa
cmp
xchg
icebp
and
xor
jmp
inc
sbb
push
adc
jl
mov
pop
lea
pushf
pop
add
xchg
mov
add
fisubrs
xor
jecxz
shld
mov
mov
xchg
sahf
iret
or
jl
rcll
adc
loope
pop
icebp
loop
sbb
fdivrl
xchg
inc
stc
add
rcrl
push
sbb
es
adc
fmuls
and
jge
pop
int3
cmp
xor
cmp
mov
fisttps
jmp
jns
or
mov
jle
add
jns
and
inc
mov
outsb
xor
add
mov
fdiv
insl
xor
rclb
mov
dec
popa
pop
lret
mov
lds
sub
call
out
xchg
mov
testl
inc
mov
push
xchg
andl
arpl
sbb
adc
mov
je
stc
incl
jecxz
lret
push
out
push
xchg
xor
enter
xchg
stos
loope
aad
xor
stos
push
jbe
scas
mov
in
or
cwtl
sbb
aam
inc
add
jmp
fbld
pop
scas
lea
test
adc
and
incl
fidivrs
or
fistpl
fs
jno
cmp
cmp
popa
inc
dec
push
pusha
jne
adc
icebp
mov
fdivs
inc
cmp
mov
inc
push
lahf
loope
cmp
cmp
sbb
stc
lea
mov
es
add
sahf
bound
adc
dec
sub
push
and
mov
jns
das
lock
dec
dec
inc
into
xchg
adc
mov
inc
cmc
orl
mov
jbe
and
lods
mov
sbb
adc
xchg
arpl
lret
cmp
insl
add
and
pop
hlt
cmp
dec
lods
add
or
lods
outsl
xor
pop
loop
xchg
adc
adc
test
add
addr16
inc
inc
add
arpl
sbb
lods
sahf
fs
add
sub
adc
xor
adc
ret
pushf
xchg
fwait
lcall
mov
mov
push
sub
movsb
sbb
ljmp
adc
mov
cmp
test
int
sbb
bound
inc
lret
arpl
aad
cwtl
add
mov
mov
ror
aad
arpl
jno
add
es
mov
cwtl
xor
sbb
push
adc
out
cmp
inc
fsts
mov
sub
loopne
xorl
fs
inc
sbb
push
cmp
xor
sarb
std
add
cmp
ds
je
int
xchg
movsb
xlat
add
movsb
mov
mov
test
mov
pop
jl
or
adc
ljmp
or
inc
sarl
inc
lahf
in
les
subb
jae
xchg
and
loopne
cmp
mov
cmp
or
add
add
xchg
arpl
ja
xlat
inc
test
das
sbb
adc
cltd
and
xchg
cwtl
and
loop
jle
les
sbb
push
test
lds
push
or
ret
mov
dec
dec
xor
jecxz
loope
jno
adc
clc
inc
adc
mov
xchg
outsb
in
pop
jne
jp
and
lret
negb
inc
mov
ret
mov
push
cmp
push
xlat
jge
idiv
sub
gs
inc
mov
mov
es
push
je
push
and
inc
and
mov
fidivl
mov
je
adc
adc
sub
adc
dec
test
into
scas
or
xchg
dec
stos
or
scas
xchg
cmpsl
mov
daa
mov
arpl
or
add
jbe
add
or
sbb
add
xchg
mov
test
adc
inc
xchg
mov
sub
mov
inc
inc
add
adc
icebp
arpl
pop
mov
mov
loope
pusha
cld
pop
scas
xor
xor
mov
aad
daa
lds
ds
andl
test
repnz
leave
int3
roll
int
mov
adc
fmul
sbb
fadd
xchg
cmp
insb
outsl
outsb
fstl
and
and
or
mov
adc
or
pop
cmp
std
nop
fs
mov
outsl
jge
mov
js
mov
aam
loopne
aad
in
and
nop
adc
lock
in
mov
push
mov
xchg
in
dec
nop
setne
mov
addb
insl
mov
shl
mov
cmp
inc
push
test
inc
mov
pop
fisttpll
mov
iret
dec
xchg
cmpsl
jecxz
ljmp
inc
mov
xor
mov
into
jo
mov
in
pop
cmp
mov
push
stos
fwait
test
sub
es
clc
mov
icebp
inc
sbb
cmpb
jno
push
push
adc
push
add
mov
sbb
and
mov
orb
and
testb
cmp
dec
jb
int3
jmp
or
and
and
adc
shrb
popf
pop
add
jne
sti
sub
xchg
xor
mov
xor
dec
add
sbb
test
pusha
and
adc
lds
cwtl
arpl
imull
in
mov
dec
sub
or
jo
add
aam
mov
cmp
je
int3
xchg
pop
jns
aam
push
jae
inc
sbb
xchg
lds
xor
inc
ficomps
cmpsb
mov
jle,pt
sbb
pop
fstps
and
pushf
dec
jle
lods
fisubs
mov
cmc
mov
mov
cli
mov
inc
or
movzwl
and
cltd
into
mov
mov
jne
popf
push
test
sbb
bnd
ss
mov
jne
cmpsl
pop
xor
xorb
jne
movsb
aam
out
jge
test
and
inc
lcall
xor
jb
xchg
jbe
mov
pop
inc
fs
xchg
cmp
pop
cmpsb
nop
jno
and
jmp
adc
pop
arpl
cmp
add
pop
jl
pop
mov
ss
push
pop
dec
add
inc
push
mov
mov
inc
or
dec
orb
or
or
or
dec
pop
je
push
inc
movsl
ss
jmp
cwtl
and
dec
rol
mov
jle
and
pop
cmpsl
xor
jne
push
mov
push
out
and
push
jge
sub
or
jno
sub
clc
sbbl
test
dec
enter
movsb
push
lock
or
lock
insb
mov
xchg
mov
and
and
pusha
divl
test
iret
xchg
add
mov
inc
stos
adc
daa
stos
xchg
shr
push
cli
stos
pop
stos
subb
lea
jo
add
jnp
pop
dec
pop
inc
jp
mov
dec
mov
and
test
inc
ret
lcall
push
pop
stos
test
adcb
out
mov
xchg
add
cmpsb
and
shll
xchg
xlat
or
jb
jnp
push
stos
pusha
mov
mov
inc
out
pop
dec
lcall
sub
mov
adc
fsts
shrl
cmp
inc
stos
icebp
xchg
push
pop
cwtl
loope
jo
inc
mov
mov
pop
lmsw
insl
jl
rcrb
jno
sub
insb
fisttpl
scas
mov
fisubs
add
adc
dec
and
clc
or
pop
les
inc
xor
imul
push
pop
imul
jnp
imul
inc
hlt
dec
xchg
test
ljmp
jbe
clc
aad
mov
mov
rcr
in
or
fsubl
push
sbb
lret
add
mov
xchg
pusha
mov
push
push
mov
dec
or
or
add
adc
or
insb
jecxz
add
adc
into
dec
outsl
push
and
cs
lcall
decl
jg
mov
in
popf
mov
in
fwait
mov
mov
nop
je
aas
mov
mov
scas
test
push
jl
push
or
and
scas
mov
cwtl
xchg
jbe
nop
cmpsb
daa
movsb
and
fmull
aas
and
jg
data16
popf
lret
cli
or
push
pop
cltd
xchg
mulb
cmp
or
fs
out
testl
aad
xchg
mov
mov
lock
pushf
and
or
add
inc
and
and
pop
xchg
lock
adc
inc
add
pop
popf
mov
push
popa
adc
ret
decl
jl
jno
inc
inc
mov
pop
mov
fstpt
cmp
sub
add
sub
test
and
or
iret
popa
dec
xchg
loop
js
lods
pushf
inc
xor
sub
mov
inc
mov
add
cwtl
int3
pop
inc
inc
adc
xchg
dec
adc
adc
popf
loope
cmp
xchg
leave
rorb
int3
cli
fldcw
mov
rolb
movsb
enter
flds
adc
movsb
test
xchg
jle
mov
ss
adc
and
xchg
test
xchg
sti
adc
xchg
sahf
dec
dec
sub
adc
xchg
and
pop
pop
andl
adc
cmp
xchg
adc
jmp
mov
sub
shll
inc
pusha
or
add
adc
call
std
int
pop
in
hlt
loopne
rorl
pop
push
out
add
or
mov
mov
sub
xchg
pop
cs
cli
stc
pushf
scas
aam
loopne
push
or
cmc
in
lahf
xor
mov
sbb
cmp
cmpsl
js
xchg
mov
pop
inc
fldl
mov
pop
dec
xor
cmp
fdivrs
pop
leave
dec
enter
jge
les
pop
in
ret
cltd
mov
push
sub
cmp
inc
push
sahf
sbb
int
mov
aas
in
xchg
negb
imul
je
ret
pop
gs
je
pusha
or
mov
adc
in
or
nop
sub
or
mov
int3
adc
pop
or
and
mov
inc
or
pushf
js
push
movb
push
push
fwait
imul
js
cmp
push
cmp
adc
adc
add
sbb
inc
pusha
nop
out
mov
adc
xor
xor
add
adc
mov
mov
gs
fs
loope
in
out
lds
jb
punpcklbw
pop
les
or
mov
add
inc
fwait
push
push
push
int
leave
cwtl
mov
jb,pn
in
cmpsb
notl
cmp
sub
pop
ret
scas
inc
xor
sbb
jp
and
popa
ret
push
mov
ficoms
adc
fdivr
push
hlt
test
and
stc
adc
xchg
add
es
iret
test
or
jmp
jge
pushf
out
dec
int3
pop
les
jp
mov
or
sub
push
fsub
jne
cmp
fbstp
outsl
insb
add
lea
jmp
add
out
cld
add
and
fwait
inc
test
lret
pop
int
cmp
or
push
mov
dec
addb
ror
inc
xor
in
pop
arpl
pop
mov
jge
test
jo
adc
lcall
mov
rclb
das
into
iret
cmc
repz
movsl
or
sub
inc
cmp
pop
or
repz
or
sarb
das
ret
stos
dec
add
addb
cld
sbb
dec
pop
dec
sbb
testb
test
pop
dec
mov
dec
jns
inc
xchg
or
ret
xorl
icebp
jb
gs
and
aaa
jl
xor
aam
mov
push
mov
mov
xchg
mov
xlat
lods
and
ret
add
test
subl
xor
add
lahf
adcl
call
jl
mov
push
or
adc
sub
repnz
xor
aas
or
outsb
enter
adc
mov
addl
out
and
dec
nop
push
pop
cs
lret
mov
pushf
dec
xor
and
add
and
inc
gs
loopne
gs
or
enter
or
xchg
clc
push
xlat
xchg
add
mov
insb
or
clc
fistps
imul
or
and
lock
push
sub
pop
aaa
mov
mov
mov
sub
adc
ret
les
cmpsb
jbe
mov
pop
jns
dec
sbb
inc
mov
cmp
sub
sub
xor
sahf
es
push
sub
mov
scas
xchg
fwait
fisttpl
mov
into
ja
mov
stc
cltd
xchg
nop
xorb
add
lcall
int3
add
shrl
push
movsb
xchg
addl
xchg
and
or
dec
sbb
sub
add
cmpsl
push
ret
lods
pusha
or
adc
or
xchg
clc
xchg
cmp
sub
cmpsl
test
pushf
xchg
xor
xchg
and
clc
sbb
mov
les
adc
test
mov
popa
inc
inc
lds
mov
xchg
inc
test
jmp
mov
mov
mov
in
mov
stos
add
mov
cmp
mov
loop
add
or
or
sub
add
cmpxchg
mov
inc
mov
shl
mov
inc
inc
cmpsl
xor
lahf
jg
add
push
adc
inc
pop
insb
cltd
sbb
shr
arpl
or
xchg
adc
pop
rclb
xor
mov
inc
inc
or
pop
movsb
cmpsl
jo
add
push
pop
add
int3
out
inc
enter
jo
lds
je
add
inc
lock
inc
cwtl
jo
clc
test
daa
outsl
stc
cmp
pop
shll
inc
fisubrl
xor
mov
dec
pop
in
es
clc
orb
sub
cmpb
loope
movsb
add
jg
iret
xchg
in
popa
nop
push
aas
dec
mov
shl
mov
imul
testb
out
testb
push
loop
adc
cs
sub
sub
rolb
adc
sub
mov
xor
pop
sbb
fwait
add
call
repnz
out
cmp
cld
mov
or
clc
sbb
roll
fistpll
jle
insb
subb
orl
xor
arpl
sti
xor
jo
ret
cmp
cld
sbb
xor
sbb
cmpsb
jle
arpl
jecxz
cmp
xor
cmpsl
sbb
ds
out
push
loopne
sub
jmp
lret
inc
adc
lret
sub
inc
mov
cmp
add
or
ret
mov
xchg
inc
push
jo
lods
sub
cld
aas
loope
xchg
testl
xchg
sbb
pushf
pop
lock
data16
sbb
or
ja
dec
cmp
mov
out
or
movsb
sbb
xchg
mov
les
cmp
iret
push
cmp
adc
inc
dec
cwtl
or
test
add
loopne
push
aad
cmp
pop
mov
popa
lods
sbb
jnp
adc
mov
inc
in
ds
pushf
enter
iret
inc
cld
cmp
out
andl
inc
gs
enter
shl
and
fldt
push
or
movsl
inc
rsm
test
push
xor
or
dec
xchg
test
xor
pusha
rcll
ret
add
xchg
push
dec
push
rol
push
in
in
xor
inc
sub
movlps
test
xor
pop
sti
fisttpl
pushw
in
pop
inc
stos
add
sub
dec
jo
test
aaa
pop
cmp
adc
inc
jge
mov
sub
xorb
cmp
adc
adc
and
pushf
xchg
or
push
clc
adc
out
dec
inc
mov
popf
push
pop
stos
xchg
sub
sub
or
sbb
add
mov
dec
inc
into
xor
lea
mov
stos
jg
pop
push
xor
test
mov
les
sbb
iret
mov
jle
movsb
mov
ret
mov
cld
or
pop
mov
notl
aam
xchg
sbb
adc
mov
arpl
inc
pusha
mov
rolb
addr16
push
and
sub
and
fstp
jge
daa
dec
addr16
in
and
xchg
mov
out
jl
inc
repz
jmp
hlt
mov
jb
jmp
inc
push
inc
xchg
jp
lcall
mov
dec
fwait
pop
lcall
inc
lock
push
out
iret
dec
adc
sbb
jne
pop
xor
ljmp
rcrl
aas
sbb
insl
add
aas
or
test
xchg
push
push
jge
and
dec
pop
cld
imul
or
mov
roll
mov
cmc
out
sahf
xchg
push
jne
roll
cmp
pop
dec
fwait
push
dec
xor
ret
add
dec
cmc
mulb
stos
xor
xor
xor
pop
xor
scas
xchg
jle
loope
jl
push
outsl
loope
sbb
inc
mov
inc
or
andl
push
jo
fwait
lret
popa
bound
out
icebp
mov
movl
paddb
or
and
es
inc
add
adc
cli
sub
js
xor
cmp
test
dec
lods
insl
fldlg2
nop
adc
add
mov
cmpsb
out
cmp
jge
repnz
repnz
push
test
push
cmp
mov
or
mov
sub
fistps
push
in
cmp
test
and
das
jb
inc
popf
push
into
cmp
jb
stos
jge
jb
lret
loopne
xor
in
es
sub
sub
rcrb
cmp
jg
shrl
mov
adc
out
dec
pop
dec
and
fdivl
add
xor
mov
jb
jle
les
jns
hlt
dec
test
lret
incl
int
or
sub
clc
push
push
xor
ret
stc
xchg
pushf
xchg
push
mov
adc
sbb
mov
mov
pop
popa
inc
fs
lods
outsl
mov
adc
shlb
stc
mov
dec
push
out
lret
inc
jmp
movsb
jae
sbb
jbe
ret
inc
aam
push
cld
sub
sub
nop
mov
adc
leave
xchg
sub
scas
adc
lods
sti
xchg
dec
xchg
xor
ds
pop
xchg
test
arpl
add
loop
xchg
push
enter
mov
stos
xor
inc
clc
andb
orb
jl
push
mov
mov
in
mov
shll
cmc
rorl
xor
push
xorb
leave
js
push
push
jmp
dec
jle
xchg
jb
pop
add
fiaddl
and
push
outsb
xchg
or
jl
mov
aas
cmp
daa
or
sub
packssdw
push
add
stos
stos
fld
stos
push
ds
test
pusha
ds
daa
das
or
inc
popf
mov
or
adc
sbb
push
push
lds
enter
test
mov
mov
or
in
xchg
jbe
cwtl
es
or
cmp
lock
adc
sarb
stc
add
or
les
lods
pop
and
hlt
pusha
sbbl
ljmp
mov
adc
fmul
subl
dec
fcompl
mov
sbb
btc
cmpsl
sbb
movsl
je
sbb
xlat
sub
inc
lock
aam
adc
mov
rcrl
addl
cmp
dec
cltd
jns
xor
je
imul
dec
xchg
and
popa
popa
or
jne
test
mov
cmp
and
xor
pop
add
inc
cmpsb
fcompp
xchg
jb
mov
jno
icebp
push
imul
dec
xchg
mov
xor
testl
jo
xor
push
shlb
cmp
xchg
mov
imul
int
lock
adc
in
les
cs
cltd
mov
test
gs
mov
dec
adc
inc
xor
lods
cmpsb
add
cmpl
out
xor
cmpsl
cmp
outsb
mov
les
pop
dec
pop
pop
clc
pop
shlb
fucom
jne
push
mov
xor
push
aad
and
jae
pop
xchg
movb
pushf
mov
in
pop
push
loop
dec
xor
test
aas
mov
nop
pop
cmc
icebp
mov
xchg
cmp
outsb
dec
das
pushf
xor
les
sbb
mov
mov
jno
mov
sbb
jb
mov
jl
icebp
repnz
int3
inc
push
insl
cmc
fbstp
in
add
test
mov
daa
jl
sbb
mov
leave
push
movsl
cli
lds
mov
cmp
ret
mov
mov
mov
push
xchg
sub
ljmp
insl
jp
push
and
mov
mov
and
data16
inc
aad
mov
push
cmp
out
scas
insl
clc
das
ljmp
mov
xchg
mov
or
js
xchg
shlb
push
add
les
fwait
mov
mov
sbb
and
movsl
aaa
divl
jg
loop
shr
xchg
inc
sub
and
add
mov
add
bound
inc
and
cmp
adc
nop
adc
mov
add
daa
movsb
lods
pop
add
or
pusha
les
lds
stos
movsl
insb
jb
cld
inc
movsl
and
fcomip
ficoml
int3
jb
std
stos
jmp
adc
or
push
xchg
adc
adc
push
push
nop
add
inc
adcb
ljmp
inc
jge
pop
leave
cli
cmpsl
leave
orl
mov
clc
mov
gs
push
out
inc
xchg
hlt
xor
xor
rcrl
inc
loop
inc
cld
in
cmp
jp
push
cli
loopw
mov
rcrl
pop
cmpsb
mov
mov
pusha
or
data16
xchg
push
lret
or
mov
pop
int3
jecxz
mov
mov
in
push
lea
sub
mov
jnp
cmp
inc
pop
dec
xchg
notb
dec
mov
orb
mov
jbe
and
es
cmpsl
pop
cmp
ja
fmul
or
and
adc
rorl
push
jne
inc
lret
mov
mov
sbb
inc
in
cltd
pop
test
xor
rorl
pop
push
aam
and
outsl
mov
adc
pop
mov
leave
jo
leave
sbb
push
iret
mov
pop
loop
and
les
xchg
inc
adc
or
dec
or
iret
xlat
inc
lcall
cmp
mov
lds
jbe
add
adc
adc
push
xchg
sub
or
and
jmp
aad
lock
fcoms
inc
mov
mov
shrb
xor
inc
pusha
ljmp
sbb
in
sbb
add
jo
inc
sbb
add
inc
add
xor
or
ljmp
add
or
adc
call
pusha
mov
inc
sub
subl
push
test
orl
test
insl
stos
or
mov
ret
mov
adc
xchg
in
popa
xchg
test
dec
mov
and
jns
mov
mov
push
pop
mov
push
sahf
idivl
hlt
dec
mov
and
daa
mov
and
push
outsb
pop
mov
aas
push
clc
lock
es
dec
dec
push
aam
sbb
pop
in
xchg
mov
loopne
in
push
les
adcl
push
popf
jns
lahf
push
cld
imul
roll
lods
or
inc
sub
bound
jecxz
sbb
std
mov
es
cmc
xchg
xor
stc
popf
push
addb
out
inc
mov
fstps
sbb
mov
les
pop
xor
inc
aaa
test
jno
push
adc
in
pop
pop
shlb
lods
lods
pop
mov
sbb
xor
mov
push
loope
push
in
adc
movl
mov
cmp
adc
mul
dec
call
xor
ja
test
das
rolb
jne
sbb
movsl
data16
mov
roll
add
mov
js
es
lds
and
pop
adc
add
stos
repz
push
jl
push
insb
xor
mov
inc
shr
scas
leave
xchg
sahf
out
push
cmpsb
loop
xchg
inc
pop
inc
or
inc
rcll
add
pop
inc
out
xor
xorl
shl
lret
adc
sub
cld
mov
add
jecxz
orb
pop
call
mov
push
mov
jb
sbb
ret
jne
out
jb
add
test
add
push
shl
cmp
outsb
and
test
stc
les
and
fidivrl
lods
fdivr
mov
lret
and
jmp
sub
push
popf
adc
push
pop
rcrl
rorb
ja
ret
enter
dec
push
dec
push
out
cmpsl
and
outsb
sub
mov
repz
lret
imul
sub
mov
mov
mov
pop
pop
fsts
and
add
push
sahf
jbe
xchg
or
and
mov
push
outsb
mov
sti
aad
sbb
xchg
xor
lret
sbb
inc
mov
lds
add
lret
test
pop
outsb
xchg
sub
les
cmp
mov
mov
inc
add
inc
pop
mov
adc
jae
sbb
rcll
ret
dec
or
cmp
mov
negl
xchg
push
jle
jle
in
and
push
into
push
lcall
data16
insb
test
xor
mov
pop
les
cmp
inc
in
mov
fcomps
lahf
or
sbb
js
mov
frstor
xchg
insb
add
pop
sbb
lds
jo
nop
popa
inc
bound
push
dec
push
xchg
je
adc
sbb
sbb
fimuls
addr16
test
sub
lret
es
outsb
adc
pushf
and
negl
push
bound
xrelease
mov
mov
xorl
push
jecxz
pop
xchg
sbb
je
pop
insb
jecxz
int3
scas
fucomip
orl
roll
cmpsb
shll
inc
fsubs
push
adc
shrl
sbb
push
les
push
aas
pop
repnz
mov
add
jle
inc
inc
sub
in
movsl
pop
in
sub
es
adcl
jmp
mov
dec
fnstsw
test
sti
hlt
pop
jp
adc
sub
mov
cmp
xchg
adc
push
lea
mov
out
inc
push
jge
inc
sbb
xor
out
pushf
test
sti
xor
mov
repz
notl
ss
ret
rcll
les
xor
cpuid
xchg
mov
daa
shll
jne
sbb
je
xchg
xchg
jp
fs
pop
idivl
cld
cmp
sbb
sub
add
mov
add
mov
or
lcall
jl
mov
dec
in
fwait
subl
or
sub
push
inc
decl
push
repnz
les
cmp
add
dec
and
sub
mov
sub
incl
sub
lcall
mov
clc
nop
scas
sbb
and
pop
xchg
cmp
and
sbbl
mov
cmpl
push
add
popa
or
pop
sbbb
mov
shlb
fcoms
mov
sub
xor
inc
in
xchg
out
pop
or
data16
sbb
cwtl
rcll
adc
sbb
jecxz
and
pop
daa
xchg
xor
or
or
jp
dec
sub
xchg
mov
cmp
mov
mov
sbb
mov
or
mov
xchg
and
leave
push
mov
push
pop
je
arpl
xorb
test
imul
mov
mov
scas
mov
or
fwait
xor
nop
inc
and
out
mov
inc
das
nop
cmpsb
push
mov
pop
cmp
or
rorb
incb
test
inc
jg
orb
push
adc
sbb
xchg
mov
mov
outsb
jmp
insb
repz
xchg
inc
sbb
pop
cmpsb
mull
bound
rcll
inc
xchg
add
sub
pop
adc
add
mov
adc
test
adc
inc
daa
cld
and
cmp
fxch
sbb
rorb
clc
aaa
cwtl
sti
xchg
mov
or
and
add
cld
or
sti
pop
and
inc
mov
jno
dec
out
cmc
push
mov
dec
pop
xor
shlb
test
inc
jecxz
ljmp
test
enter
sbb
inc
push
mov
nop
push
push
stc
mov
addb
inc
pop
leave
aad
mov
jp
dec
inc
lods
sub
adc
fldt
and
orl
dec
or
cs
ror
test
loope
repz
inc
popf
adc
dec
xor
and
dec
dec
mov
pusha
aas
or
inc
stos
mov
and
cmp
js
jg
dec
es
cwtl
ret
addl
inc
or
mov
adc
inc
cmpsb
adc
rcll
cmpsl
adc
cwtl
and
sbb
je
or
mov
dec
pop
or
nop
adcb
xchg
and
push
movsb
sbb
or
mov
fwait
sahf
icebp
adc
mov
jp
inc
cmp
scas
pop
push
sub
xor
fucomp
adc
and
inc
xor
sbb
mov
movsl
dec
mov
or
mov
ret
jne
adc
sbb
push
or
add
leave
adcl
loop
gs
cmp
push
xor
inc
add
add
orl
roll
mov
popw
rorb
test
dec
mov
and
mov
pop
pushf
setle
pushf
add
cmc
jecxz
test
jp
inc
test
out
or
mov
loop
cltd
xor
sbb
dec
adc
or
test
gs
es
inc
adc
sahf
test
pop
jno
mov
decb
sub
sbb
xchg
call
cld
inc
mov
ja
xchg
subb
pop
aaa
or
rolb
xor
insb
test
in
pushf
cmp
mov
adc
push
dec
mov
stc
mov
pop
inc
adc
in
addr16
inc
dec
repz
lahf
stos
aas
sub
pause
and
adc
adc
pop
mov
xchg
stc
dec
sbb
loop
pop
push
xorl
dec
dec
test
cmp
inc
push
jne
xchg
mov
xchg
jl
leave
aas
mov
cs
pop
cs
adc
inc
xor
inc
add
decl
jns
sti
sahf
cmp
rclb
pop
push
inc
cltd
push
gs
push
pop
push
dec
or
repnz
push
push
dec
jmp
push
or
pop
push
xchg
loopew
ret
bound
addr16
add
mov
loop
rol
xchg
aaa
shll
daa
cmp
mov
mov
sbb
jb
cmp
jmp
sub
pop
movsb
cltd
mov
jo
cli
inc
orl
cmp
add
push
add
inc
cmp
jecxz
mov
sub
adc
lds
pop
push
in
decb
int3
adc
mov
cmp
push
fs
push
push
dec
popl
std
jg
dec
loopne
add
inc
enter
mov
mov
rolb
xchg
ret
dec
imul
lret
xchg
mov
jl
xchg
or
ret
ss
inc
push
enter
or
es
mov
das
push
xchg
xchg
shll
stos
inc
xor
popa
or
rcl
and
test
or
push
mov
cmp
outsl
roll
xchg
dec
sbb
pop
aaa
inc
mov
sbb
and
or
or
inc
cmp
cmp
mov
popf
pop
jae
inc
rcrb
addr16
push
sub
or
dec
lret
loope
push
xor
pop
roll
stos
inc
test
adc
inc
jo
loop
daa
pextrw
cltd
mov
std
cmp
mov
ret
mov
stos
fists
lea
pop
shr
pop
jae
sti
sub
xchg
mov
add
movsb
or
xchg
out
push
sbb
pop
fsubs
call
test
bnd
inc
or
sub
cmp
jl
sahf
xchg
mov
sahf
leave
sub
es
ret
jle
mov
imul
pop
push
push
jg
or
fcoml
jge
imul
ljmp
fsubrs
mov
inc
lahf
jo
movsb
or
mov
or
pop
dec
lret
xor
cmp
mov
pop
sub
pushf
add
adc
scas
jmp
xchg
aam
add
xor
lahf
mov
test
cmpsl
or
push
pop
gs
ret
enter
fbstp
jmp
or
lahf
adc
sub
popa
loope
lock
adc
or
xor
out
or
pop
dec
ret
cmc
adc
sub
jae
add
shlb
sbb
popa
shr
subb
aam
mov
cmpl
cmc
jl
mov
loop
push
cmp
fs
xor
mov
pop
aad
adc
xchg
dec
dec
pop
and
mov
mov
in
xchg
jecxz
mov
sub
xor
xor
and
fnstcw
loopne
mov
pop
js
enter
lock
aaa
aad
pushf
push
pop
in
test
imulb
inc
pop
test
scas
insl
push
mov
test
add
pusha
icebp
pop
je
popa
jne
es
outsb
test
bound
rolb
adc
pop
rolb
lods
cltd
ja
or
cmp
inc
pop
jb
and
push
xor
and
cmp
orb
sub
sbb
mov
pushf
push
aam
arpl
call
aas
sub
jae
push
stc
mov
inc
loopne
in
jo
inc
pop
mov
sbb
inc
mov
inc
into
stc
mov
cmp
inc
scas
ret
adc
pushw
xor
pop
xor
add
push
inc
sub
inc
adc
notb
and
pop
stc
xchg
in
add
jo
stc
lock
push
nop
outsl
stos
or
dec
cwtl
and
inc
add
pop
jbe
loopne
ds
and
outsl
stos
or
scas
xor
push
push
ds
leave
je
in
or
rcrb
jae
add
push
sbb
cltd
cli
fnsave
jp
fists
dec
jl
jbe
mov
and
lret
mov
popa
mov
lods
mov
mov
xor
mov
pop
mov
sahf
pushf
cld
sarl
mov
dec
loop
faddp
loope
push
test
or
xlat
add
arpl
roll
and
inc
out
mov
dec
pop
outsl
je
cs
dec
loopne
jmp
dec
inc
lcall
pop
loop
mov
rorl
les
push
mov
mul
test
push
hlt
testl
scas
cmpsb
pop
dec
je
and
std
mov
rorb
mov
cmp
push
dec
not
aas
jb
std
mov
inc
pusha
jb
inc
dec
cmpsl
in
jmp
cmp
mov
fisttps
xchg
lods
xor
cmp
js
pop
sub
jmp
icebp
inc
stc
jbe
out
dec
mov
inc
rolb
jecxz
inc
pop
idiv
sbb
addl
addb
aam
mov
js
and
fcoml
dec
xor
movsb
and
sti
les
dec
loope
xchg
xor
jecxz
ret
xchg
xor
loop
push
mov
mov
popl
xchg
roll
aas
fistpll
pushl
jge
das
fs
dec
adc
sbb
dec
dec
in
sbb
or
push
sbb
cld
xor
mov
xchg
in
xchg
mov
add
dec
sbb
mov
ret
in
sub
cltd
sub
adc
and
out
repz
jne
pop
movb
mov
xor
sbb
dec
jmp
or
xorps
push
xor
movb
mov
adc
aaa
lea
fldenv
mov
arpl
orb
cmp
mov
mov
xchg
xlat
aam
mov
testl
mov
sub
jb
stc
push
dec
repz
push
fcomps
inc
leave
add
popa
mov
jp
add
sub
cmpsl
pop
adc
adc
enter
xchg
xor
cwtl
int3
movsl
je
call
dec
mov
test
mov
or
push
insb
popa
loop
xor
push
push
in
mov
xchg
xor
sbb
sbb
jge
fisubs
fists
bound
and
add
and
lahf
inc
push
pop
cli
or
push
test
lcall
add
pop
inc
pop
cld
mov
movb
mov
jns
jno
xor
popa
test
xchg
add
cmpsl
xchg
ljmp
add
dec
insl
lcall
shlb
sub
hlt
rcl
aad
ret
pop
cmc
frstor
cmp
cmovo
into
les
xchg
pop
mov
pushf
cmp
and
sub
mov
pop
lahf
bound
in
dec
xchg
sub
mov
add
jmp
mov
push
test
inc
mov
test
ret
pop
cmp
bound
xor
cmp
std
insb
sub
scas
sbb
mov
mov
sahf
push
cmpsl
dec
push
fidivrs
or
fbld
adc
nop
cmp
cwtl
insl
sub
aaa
mov
call
xchg
std
popf
sub
adc
xlat
lret
cmpsb
stc
adc
jb
xchg
sub
push
inc
mov
icebp
xor
xor
sub
fmuls
cmp
mov
inc
lock
jmp
incl
adc
pop
sbbl
adc
sub
and
cmp
and
loopne
mov
adc
sbb
sub
ljmp
and
push
adc
jb
loope
and
sti
cmp
out
mov
stos
cmp
mov
repnz
pushf
addr16
jo
imul
js
add
in
xchg
or
mov
adc
aas
stc
cmpsl
rclb
adc
adc
andb
push
mov
cmp
in
incb
cli
xlat
add
popa
orb
mov
int3
and
cwtl
sub
pop
out
jns
add
lcall
cli
mov
adc
es
sbb
andl
test
xchg
in
push
push
lret
and
inc
cmp
decb
push
add
mov
mov
inc
xchg
je
mov
pop
lods
xchg
movl
dec
hlt
push
xor
add
idivb
sbb
int
adc
xchg
lret
ljmp
scas
jo
xor
sub
iret
mov
adc
inc
inc
mov
mov
int3
shl
xor
adc
push
xlat
xchg
cmp
sub
and
xchg
sti
or
adc
clc
es
shll
sub
lods
leave
movsb
ret
adc
push
dec
xchg
mov
fs
sbb
aaa
dec
mov
sahf
mov
xchg
mov
mov
sbb
dec
clc
xchg
push
test
ret
adc
in
or
and
inc
dec
dec
scas
mov
rorb
lods
call
jne
in
fs
lds
cmc
xchg
mov
xlat
test
aad
jmp
ljmp
cld
inc
cmp
adc
dec
filds
cmp
sbb
in
jl
out
cmp
enter
aaa
mov
mov
sti
popa
stos
scas
mov
jbe
iret
pop
dec
mov
es
dec
pop
out
popf
ret
mov
xchg
xor
mov
nop
jmp
mov
mov
lret
jae
daa
lcall
mov
and
cmp
xchg
sahf
mov
ljmp
and
xlat
cmp
stos
enter
inc
jae
inc
sub
cmp
cltd
repnz
add
and
loope
nop
mov
mov
in
loope
ds
inc
pop
jo
movsb
inc
mov
xchg
je
gs
jle
pop
lret
add
push
sarb
andl
mov
mov
cs
pop
xor
mov
mov
leave
mov
je
jmp
test
aad
aas
xchg
mov
stos
popf
and
adc
inc
add
cwtl
test
push
popa
inc
mov
adcl
mov
xor
xchg
sbb
cli
add
aad
or
add
sbb
cmp
in
mov
push
dec
xor
into
pop
xchg
faddp
cltd
nop
imul
add
nop
mov
iret
mov
mov
sub
outsl
add
adc
sbb
lds
fidivrs
dec
or
lret
push
fsts
out
test
loopne
push
push
mov
loope
adc
push
mov
hlt
mov
aam
cmp
pushf
lcall
popa
ficompl
mov
push
adc
mov
popf
movsb
jecxz
inc
push
pop
imul
inc
je
iret
jge
les
mov
imul
cld
add
mov
dec
into
pop
sbb
dec
push
mov
je
cmp
or
sub
dec
add
fiadds
add
sub
pusha
orb
lcall
fcoms
stos
and
xor
xor
decb
push
or
xorb
dec
lea
rolb
mov
sub
pop
xor
popa
push
inc
aas
or
je
jno
stos
idivb
mov
pushf
je
call
xchg
pop
pop
add
cmp
std
in
cltd
lods
xor
enter
sahf
inc
bound
ret
push
inc
or
push
sahf
pop
push
jo
stc
mov
inc
jl
mov
sub
push
in
or
mov
imul
out
rcrb
mov
les
pusha
mov
nop
out
leave
scas
nop
pop
mov
inc
pop
xchg
cmp
repnz
leave
inc
pop
test
cmpsb
sbb
fcompl
jp
pop
pop
lcall
dec
lret
movsl
mov
cmp
shll
dec
fists
insb
push
or
xchg
divb
subb
jns
roll
ljmp
mov
xor
mov
xchg
fcoml
aas
push
loopne
loop,pt
adc
cwtl
jne
arpl
jge
push
xchg
xor
pop
sbb
test
sub
lods
mov
adc
in
andl
push
push
add
pop
mov
ds
inc
inc
pop
jbe
rcrl
xchg
pop
in
sub
fs
fwait
xlat
mov
stos
inc
push
shlb
loop
adc
sbb
data16
inc
mov
stos
add
cltd
dec
scas
push
adc
or
mov
mov
and
dec
jb
cld
insb
repz
sbb
enter
stos
js
in
jne
rcll
push
icebp
jae
mov
push
scas
adc
pop
into
int3
dec
sbb
loop
imul
mov
lea
cld
popf
shl
enter
push
mov
push
inc
jp
pop
cmp
pusha
mov
mov
loop
jns
xchg
pop
ret
in
xor
pop
mov
push
lahf
fiaddl
lds
dec
daa
xchg
lret
int3
icebp
inc
cmp
mov
out
jne
movsb
or
cmp
or
and
mov
dec
test
push
jb
push
dec
inc
mov
outsl
push
or
jecxz
sbb
jbe
negb
sbb
outsb
adc
xor
stc
adc
loop
and
gs
xchg
int3
ret
cmp
and
or
and
test
push
inc
repnz
ret
rcll
pop
add
clc
dec
loope
inc
xor
das
xchg
test
dec
and
shll
shlb
push
pop
mov
dec
and
leave
push
addb
xchg
or
hlt
movsl
lahf
jg
inc
sub
pushf
hlt
and
int3
cmpsb
cmp
dec
add
std
cmp
shrb
aas
dec
cmp
stos
jle
fldl
jo
push
sub
testb
out
cmp
cmp
sub
sbb
pop
les
repnz
sarl
jmp
ficomps
xor
mov
movsl
loope
sarb
cmpsb
outsl
pop
cs
add
dec
daa
call
std
mov
dec
cmpsb
loope
or
negl
jb
setne
mov
dec
jns
and
and
jnp
add
inc
mov
mov
mov
in
or
and
dec
lods
cwtl
cli
test
adc
xor
cwtl
mov
and
jmp
dec
vpunpcklbw
enter
scas
push
andl
jmp
ljmp
addb
movsl
jo,pt
pushf
cltd
leave
xor
xorb
and
aam
leave
pop
gs
push
and
xchg
sub
inc
dec
and
adc
jl
xor
jl
jmp
test
cwtl
dec
pop
ret
xchg
sysexit
xchg
and
or
sbb
in
repz
movsb
nop
sbb
mov
out
pop
pop
adc
inc
mov
or
mov
xchg
icebp
lahf
or
jmp
sub
inc
cmp
sbb
ret
adc
mov
and
mov
mov
jle
lret
shll
test
pop
std
mov
inc
popf
or
call
aad
sahf
adc
sbb
mov
mov
sub
std
loopne
ret
xor
dec
adc
add
fldenv
and
fsubs
dec
push
addl
mov
inc
je
enter
mov
or
out
push
cli
and
dec
aaa
orb
sub
int
adc
inc
mov
insl
jno
pushf
imul
cmpsl
adc
jne
ljmp
inc
sbb
and
and
nop
xor
in
adc
and
jecxz
dec
jne
lcall
imul
out
or
nop
add
add
or
sti
jp
out
pusha
aad
push
fdivrp
xchg
stc
lods
rcll
mov
add
sbb
jp
or
push
sahf
mov
addb
jp
ror
pop
jne
sbb
inc
aam
adc
cmp
xor
out
int3
inc
shrl
sub
sbb
fcoms
bound
imul
xor
xchg
cmp
lret
add
dec
and
ret
cmpsb
xor
mov
loope
daa
stos
xchg
xor
ret
int
dec
sub
mov
and
sbb
push
or
lock
and
add
outsl
call
xor
scas
add
sub
adcl
call
add
test
or
repnz
add
jo
and
in
xchg
adc
mov
arpl
ret
addb
shll
add
test
enter
add
outsl
ds
add
push
popf
sub
idivl
test
rcl
ret
jge
pop
adc
into
xor
out
pop
inc
xchg
fcomps
dec
jmp
inc
and
imul
fsubs
adcl
dec
and
in
int
jne
mov
enter
adcl
push
jp
mov
mov
icebp
and
add
das
les
mov
aad
inc
jl
inc
inc
loop
mov
adc
mov
mov
jb
int3
push
inc
mov
adc
mov
push
push
daa
xchg
fwait
or
or
pushf
push
aam
sarl
push
loope
and
jecxz
jge
orl
mov
popf
cmpsb
xor
add
cmp
rorb
mov
ds
inc
loopne
lcall
sbb
mov
or
cmp
push
sub
daa
cmpsl
mov
sub
lahf
mov
cmp
sbb
fsubs
jge
orb
jge
icebp
test
lret
flds
xor
lahf
in
add
test
pop
int
inc
pop
add
fildl
addr16
adc
out
xchg
lret
bound
inc
push
in
add
fs
mov
mov
sbb
in
mov
xor
mulb
mov
les
mov
dec
rolb
stos
bnd
inc
inc
sbb
out
enter
mov
sbbl
mov
cltd
cmp
popa
cltd
mov
xchg
push
sbb
xor
inc
or
jmp
xor
mov
adc
push
mov
addb
xor
imul
push
pusha
imul
out
movsl
pop
addb
rol
inc
push
add
xor
inc
mov
or
push
inc
push
das
cmp
push
inc
scas
or
loope
mov
jecxz
sub
jmp
lcall
test
inc
out
adc
icebp
movb
test
repnz
out
bound
and
notl
push
call
andb
push
add
out
sbb
mov
test
add
xchg
xor
xor
cltd
add
jbe
or
inc
sbb
pop
mov
mov
testl
loop
inc
cmc
std
sbb
dec
loop
mov
in
test
and
loop
adc
lcall
ja
les
add
xor
int
jp
push
push
fs
jo
or
jb
andl
sub
mov
xchg
push
mov
push
nop
orb
imul
inc
aad
sarl
std
sbb
mov
in
je
adc
dec
push
adc
shr
inc
lds
dec
sbb
add
pop
dec
cmp
or
lock
mov
push
mov
add
mov
sbb
and
adc
and
fidivrl
outsb
add
adc
in
pop
lods
lock
ret
inc
int3
xor
cmp
aam
in
mov
in
add
outsb
add
sbbb
inc
sub
adc
aas
dec
add
pop
cmp
add
sbb
lods
test
or
mov
aas
outsl
loopne
cmp
sub
ljmp
loop
ret
mov
frstor
push
jmp
dec
int
mov
lahf
sbb
sbb
scas
push
pop
mov
sbb
jo
jbe
jbe
xchg
push
cmpsw
xor
and
dec
es
push
iret
mov
orb
xchg
cltd
mov
jo
lds
inc
and
fiadds
les
dec
xchg
loopne
inc
int3
dec
test
lods
addl
shlb
pop
jecxz
sub
fchs
xchg
push
sbb
pop
loopne
clc
data16
les
xchg
and
jle
mov
xor
in
add
jb
cmp
enter
mov
cmpl
ljmp
cmp
repnz
lcall
leave
insb
int3
lcall
xchg
mov
pop
in
das
mov
test
loop
scas
into
repz
ffreep
push
arpl
jno
add
ljmp
or
mov
mov
and
xor
cmp
bound
rcrb
add
cli
inc
adc
and
das
and
sub
and
test
nop
inc
hlt
jnp
mov
or
adc
shrl
hlt
nop
mov
les
sbb
mov
push
add
jmp
push
and
dec
test
fistpll
ljmp
lret
inc
push
cmp
mov
fwait
jb
jle
les
xor
xchg
push
sahf
fldt
sti
pop
stc
xchg
mov
cmpsb
in
mov
hlt
jne
inc
ja
and
mov
loop
scas
mov
aas
je
cmp
cmp
adc
loopne
ds
push
xchg
loopne
jns
addb
mov
mov
test
popa
addr16
popf
push
mov
loope
inc
call
movsb
and
sub
push
cmp
inc
je
lods
sub
push
mov
sub
fimuls
inc
xor
sbb
les
lret
mov
mov
push
mov
decl
ret
xor
mov
arpl
sar
js
jmp
in
and
cwtl
push
xor
cltd
fsubrp
push
stos
repnz
pop
inc
fdivs
test
call
aam
addr16
mov
or
aam
out
lcall
jg
dec
test
sbb
and
add
sbb
dec
jnp
jle
mov
jae
divps
push
push
orb
ljmp
pusha
adc
jle
pop
mov
sbbb
xor
mov
dec
bound
in
adc
shrb
hlt
ficompl
cmp
rclb
pop
bound
popa
das
pop
sbb
ret
or
cmp
push
mov
jg
inc
cmpsb
mov
sub
daa
push
jo
lret
shll
push
add
cmp
into
pusha
cwtl
adc
enter
adc
arpl
lods
imul
aas
jb
in
inc
adc
stos
fcmovne
hlt
or
sbb
inc
adc
imulb
dec
orl
add
sub
cmc
cmp
inc
jno
cmp
decb
cmp
dec
test
mov
sub
and
jmp
nop
cmp
in
imul
xor
out
or
push
stos
lea
adc
xor
cmp
mov
addb
mov
and
testb
pop
jp
push
mov
pop
addl
push
adc
adcl
pop
int3
mov
inc
call
lea
and
add
sbb
test
jno
or
mov
jmp
pushf
addr16
or
lret
lods
dec
pop
mov
adc
pushl
or
and
jae
ret
mov
add
push
inc
lock
imul
aad
adc
or
pushf
cmpsl
outsb
push
push
and
sbb
test
lock
nop
and
push
and
imul
imul
pop
mov
cmp
lret
jmp
push
mov
sbb
dec
fsubr
and
push
mov
push
mov
pop
enter
daa
pop
ficomps
filds
add
scas
mov
cmp
arpl
mov
mov
lds
in
cmpsb
mov
cwtl
xchg
loope
and
and
add
arpl
adc
dec
clc
cs
jmp
adc
xchg
and
jmp
jecxz
clc
mov
in
xchg
lcall
rcr
jge
xchg
sarb
xchg
repz
ljmp
mov
mov
popf
jno
adc
mov
add
push
add
jnp
push
lret
jmp
push
out
and
adc
pop
pop
cmc
xchg
sub
add
repnz
pop
mov
mov
adc
mov
insb
xor
sahf
decl
xchg
mov
push
mov
cmp
sbb
mov
shl
add
sub
add
lret
orl
shr
call
js
mov
dec
jmp
orl
loopne
subb
dec
lods
clc
pop
or
pop
cmp
test
fiadds
pop
and
inc
xchg
sbb
add
or
add
lock
inc
or
test
aaa
addr16
xchg
jp
loope
addl
mov
enter
adc
push
aam
add
sbb
mov
mov
inc
sub
fimull
and
mov
pusha
add
and
xchg
aad
xor
imulb
mov
imul
insb
out
insl
mov
or
xor
lret
ss
mov
out
xor
mov
push
or
into
jmp
dec
lea
add
sub
rorb
lret
jmp
xchg
pop
loopne
inc
cmp
repnz
data16
out
cli
dec
es
cli
cmp
insb
or
in
inc
sahf
das
push
pop
sbb
xor
mov
mov
enter
enter
gs
test
xor
push
aas
adc
aas
push
and
jge
or
hlt
loop
mov
andb
push
jno
test
add
inc
test
je
or
add
decb
subb
jbe
push
push
lods
loope
dec
adc
adcl
jg
clc
das
push
dec
mov
push
lret
daa
rcrl
movl
dec
mov
add
bound
inc
call
divl
cli
mov
jns
repnz
jg
mov
push
testb
sbb
cmc
subl
mov
sbb
call
jecxz
jecxz
adc
clc
loopne
dec
icebp
test
adc
mov
stos
movsb
or
xchg
xlat
loope
adc
lahf
and
stc
push
jp
repz
ljmp
jns
ljmp
add
jne
dec
fsubrs
int3
pop
and
cmp
cmpsl
cmp
inc
pop
sub
fmul
sub
dec
jo
inc
jno
inc
cmp
or
add
mov
shl
or
jecxz
lahf
sahf
xchg
push
add
sbb
mov
inc
sub
dec
and
xchg
jl
pop
shlb
or
jge
popf
inc
push
lcall
pop
adc
mov
push
or
pop
stc
adc
add
fmul
out
test
test
adc
sub
mov
pop
loopne
fdivp
push
cmp
sbb
push
sti
shrb
jp
orb
pop
sub
aad
pop
sbbb
mov
mov
lret
dec
jo
shl
add
adc
cmp
sahf
lods
inc
repz
jmp
jnp
insl
scas
jge
lret
add
outsl
jg
repnz
in
dec
xor
jno
bound
and
lret
je
jbe
inc
mov
push
cmc
push
or
xor
and
repnz
imulb
or
or
push
mov
test
sub
or
mov
ja
les
test
pop
cwtl
test
das
mov
stos
and
fidivs
add
cmp
mov
jb
sbbb
and
add
adc
ds
loopne
push
dec
cmc
test
nop
mov
xor
xor
mov
jle
ljmp
out
dec
loopne
mov
mov
inc
or
ret
push
std
nop
repz
pop
mov
inc
inc
mov
in
pop
cmp
mov
jp
movsb
dec
sbb
or
cmp
jne
pop
push
mov
mov
inc
jo
stc
mov
enter
int3
xor
xchg
or
shrb
adc
add
push
mov
sahf
in
mov
stos
mov
push
negl
dec
add
repz
inc
call
jecxz
addb
add
frstor
or
mov
js
inc
fdivl
popa
mov
dec
not
xchg
fistpl
loopne
jnp
dec
bound
pop
pop
push
and
aas
fwait
pop
rol
and
lds
idiv
mov
jns
xor
dec
dec
cmp
dec
push
xor
push
cmpsl
add
jmp
aaa
or
dec
add
adc
mov
mov
xchg
push
xchg
and
mov
xchg
imul
inc
movsb
adc
jecxz
inc
call
orl
aaa
sbb
xchg
shrl
stc
xchg
in
js
jmp
add
sbb
iret
inc
jo,pn
push
inc
rcrl
mov
movsb
add
lahf
fbstp
test
out
xchg
or
js,pt
jns
push
pop
lods
adc
test
call
push
push
push
fbld
push
inc
stos
das
das
rcrb
push
adc
jmp
inc
das
test
mov
mov
les
inc
jecxz
les
mov
lock
and
inc
pop
and
outsb
das
xchg
jl
mov
xorl
or
sbb
in
enter
js
sbb
dec
jg
mov
dec
mov
pop
mov
xor
cltd
movl
add
inc
add
jecxz
cmp
sarl
popa
and
xchg
xlat
push
mov
jl
jl
cmp
pop
mov
and
jl
jl
js
inc
lret
sbb
cmp
mov
icebp
iret
mov
pop
dec
cmp
mov
xlat
pop
iret
ds
xchg
js
add
mov
scas
icebp
cwtl
enter
sahf
dec
ss
sub
jnp
aam
lods
bnd
pop
xchg
jno
jge
sbb
addl
daa
insb
inc
fldl
sbb
shll
loope
cmc
xchg
mov
pop
and
xchg
std
and
push
jbe
pop
and
lds
inc
cmp
cmpsb
push
cmc
hlt
push
pusha
jmp
pop
push
ljmp
movsb
addr16
rcrl
jge
daa
leave
cmp
pop
cli
dec
add
adc
iret
outsl
pusha
dec
jb
repz
and
inc
add
scas
pushf
and
push
jb
push
cmpsl
sarb
in
inc
jo
or
push
jns
xchg
push
adc
add
inc
and
fmuls
fimuls
inc
lds
adc
das
pop
stos
and
or
ret
sbb
imul
pop
std
leave
xchg
call
add
ret
fbstp
ret
adc
repnz
fistpl
ret
out
and
js
ficompl
cmpb
and
push
xchg
decb
jno
sub
pop
addr16
pop
and
jle
mov
fs
lahf
xchg
into
xor
pushf
adc
jl
lock
push
mov
js
mov
sub
iret
inc
adc
jmp
inc
inc
out
cmp
inc
nop
push
incb
and
add
pop
dec
inc
or
sbb
add
mov
push
icebp
adc
or
adc
outsb
adc
mov
pop
xor
add
or
aam
test
mov
scas
sbb
inc
nop
test
out
sub
xchg
or
add
pop
inc
mov
inc
lcall
in
insb
sahf
sub
add
hlt
shrb
sbbb
inc
add
and
mov
je
ss
ret
in
pop
pop
push
lds
cwtl
sbb
fsubrs
xor
hlt
lcall
push
inc
test
leave
fs
and
adc
and
inc
nop
mov
scas
lea
cli
dec
popf
sub
data16
cmp
in
pop
xor
mov
jne
push
ficoml
addb
cmc
adc
inc
xchg
mov
outsb
mov
push
or
js
out
int
subb
dec
or
jns
out
mov
stc
or
pop
jg
fdivl
and
mov
cmp
adc
sti
enter
adc
adc
cmp
adc
and
sbb
pop
lods
adc
mov
mov
mov
aaa
jno
clc
cmpl
stos
call
aas
cs
mov
pop
in
pop
sub
push
dec
in
adc
xchg
pusha
repnz
cmp
hlt
xchg
and
pop
push
ds
xor
shll
cmp
stc
outsb
push
popa
jns
inc
out
push
add
lea
mov
loope
shll
outsb
sub
pop
andl
and
test
test
or
clc
sbb
out
xchg
xchg
xor
lahf
ss
xor
and
fldl
inc
xor
cltd
mov
xchg
and
xchg
jp
xchg
jb
pop
nop
and
leave
cmpl
push
cwtl
cmpsb
das
dec
and
int3
dec
and
fcmovbe
fstpt
sar
xchg
pusha
fisubrs
add
pop
or
or
mov
and
repz
ds
sbb
xor
outsl
adc
int3
jmp
push
outsb
mov
in
and
data16
nop
enter
arpl
cwtl
sbb
stc
jecxz
mov
or
inc
jp
movsb
leave
setno
and
inc
cmpsb
push
mov
in
push
adc
dec
push
xor
mov
push
adc
add
mov
mov
shl
and
mulb
add
call
out
lea
decl
sub
movsl
push
sub
in
ljmp
std
xchg
push
push
and
aas
lds
jecxz
push
inc
loopne
fwait
inc
sbb
fmuls
std
inc
or
loopne
mov
inc
clc
subb
cld
jmp
pop
xchg
mov
jnp
lret
inc
mov
or
pop
mov
in
sbb
addr16
sbb
jl
mov
popf
mov
and
stc
add
lcall
movb
inc
adcb
enter
push
xorb
or
jmp
jbe
jp
pop
adc
inc
add
xchg
js
mov
loope
test
out
mov
les
inc
pop
xchg
or
lods
daa
inc
movsb
mov
dec
lea
mov
enter
int3
jbe
dec
pop
add
add
or
pusha
stos
add
scas
sbb
mov
cmp
mov
add
loopne
arpl
inc
xchg
push
or
sbb
adc
sub
inc
int3
aad
inc
inc
cwtl
jl
clc
loopne
daa
fsts
ljmp
imul
xchg
jne
loopne
jae
popa
mov
in
rep
mov
je
lcall
icebp
bound
mull
inc
pop
mov
cli
jne
popl
addr16
aaa
fwait
ss
sti
xchg
mov
pusha
mov
mov
fldenv
test
rcr
inc
gs
and
arpl
jbe
add
je
cmp
xor
or
sbbb
pop
jecxz
addl
and
inc
add
fwait
adc
insb
je
mov
sarb
clc
ud1
into
adc
rcrb
adc
and
inc
cmp
adc
adc
inc
jbe
and
xchg
mov
sub
adc
push
push
scas
xor
sub
sbb
mov
js
cld
push
daa
call
cmp
lods
xor
jp
call
cmp
add
addl
pop
pop
push
jns
stc
and
out
push
sub
sti
out
fs
stc
lret
js
mov
sbb
ljmp
mov
addl
hlt
dec
pop
lret
js
push
jecxz
jae
and
dec
jns
xchg
mov
fistpl
dec
add
mov
push
stos
sbb
rolb
outsb
and
mov
or
and
sbb
push
jl
mov
cwtl
mov
xchg
mov
and
inc
or
mov
hlt
cmpsb
and
lods
cmpl
mov
inc
xor
mov
popf
in
add
or
into
adc
jo
sbb
test
and
lret
mov
jle
aad
inc
ret
data16
pop
xor
mov
xchg
pop
push
push
sbb
das
hlt
out
dec
push
xchg
jle
xor
xor
xchg
jnp
mov
dec
repnz
jb
adc
in
andl
mov
fildl
in
sbb
push
inc
jl
rorb
inc
fidivrl
mov
inc
dec
repnz
int3
mov
lret
and
andb
sahf
out
or
icebp
test
cwtl
pop
push
add
add
shrb
push
stos
and
retw
jo
ret
outsb
add
mov
adc
pop
or
and
xchg
jl
enter
push
pop
xchg
or
mov
repz
and
iret
xor
pop
or
outsb
frstor
sbb
in
inc
jp
push
or
and
out
sub
cwtl
icebp
or
adc
enter
sbb
jb
and
fistl
iret
fcompl
lcall
sub
loopne
nop
mov
sbb
adc
add
cmc
jg
mov
jp
out
push
sub
clc
xchg
xchg
and
cli
sbbl
int
addr16
insl
push
out
pop
cmpb
insl
jno
into
push
or
or
mov
bound
ss
push
insb
mov
mov
mov
and
into
xchg
test
mov
xor
or
cmp
ret
jle
adc
mov
cmpsl
jo
mov
adc
jbe
popa
test
incl
iret
fs
shlb
sbb
movsl
and
xor
scas
adc
mov
sbb
mov
jno
inc
push
sub
push
xor
inc
sbb
lret
leave
xor
adc
jg
sub
or
dec
dec
adc
ret
test
adc
testb
dec
push
push
es
xor
les
ror
xchg
inc
and
cltd
dec
adc
adc
fsubs
fbld
loope
imul
enter
xor
loopne
jg
daa
loop
ss
or
ss
int3
pop
xchg
xchg
nop
in
je
dec
sbb
lret
repz
shlb
pop
and
xor
lahf
xor
cmc
stc
adc
mov
pushf
xlat
aam
mul
aad
sub
push
ja
pop
mov
cmp
adc
inc
jae
and
mov
or
mov
movsb
mov
and
xor
mov
ret
add
lea
adcl
data16
orb
ds
adc
clc
jp
inc
cmpsl
test
rcll
test
mov
xchg
pusha
or
pushl
dec
leave
les
lods
and
pop
adcl
xchg
orl
push
lahf
int
fisttps
clc
hlt
mov
jbe
fcoml
push
fisttpll
mov
fcomps
je
push
push
cmp
sbb
push
sbb
movl
insl
xor
dec
push
clc
or
inc
add
dec
je
stos
xchg
in
test
dec
popf
or
adc
jns
cltd
mov
jecxz
mov
inc
push
popa
mov
add
jg
adc
aad
repnz
xchg
sbb
mov
adc
mov
push
xor
push
xor
adc
push
cwtl
push
movsl
cmp
test
sbb
dec
jo
adc
into
cmp
jg
pop
dec
push
cwtl
sbb
fadds
stos
cld
or
or
jg
dec
mov
push
push
xor
push
jg
mulb
mov
ljmp
out
push
mov
insb
int3
inc
outsb
add
mov
xor
fisttpll
xor
xor
and
xor
sub
jb
imul
mov
inc
test
test
jmp
out
sub
inc
mov
arpl
in
xchg
pop
or
int
repnz
or
outsb
add
out
pop
icebp
adc
stos
and
push
inc
popf
xor
call
or
inc
test
loop
sub
sbb
leave
stc
mov
aaa
mov
jl
push
sti
push
xlat
ror
test
test
orl
imul
inc
bound
loop
push
xor
leave
push
cmc
pushf
or
mov
lea
pusha
push
xchg
cltd
sbb
inc
and
cmp
dec
xchg
and
aas
shrl
test
adc
sub
xlat
mov
push
mov
or
push
je
imul
xchg
cmpsb
stc
in
popa
add
and
mov
or
cli
pusha
mov
pusha
test
inc
cmc
dec
pop
loope
and
and
imul
pop
push
pop
shl
xchg
cmp
repnz
inc
push
les
imull
nop
mov
gs
push
xlat
daa
pop
imul
cwtl
cmp
and
lds
imul
into
inc
jae
xor
xchg
test
jb
int
pop
lret
mov
push
ss
paddw
inc
mov
sbb
nop
lods
or
mov
stc
lods
pop
fdiv
hlt
cld
in
jbe
fists
jo
jge
sahf
popa
fnsave
xchg
push
lea
pop
push
and
jg
pop
lcall
xchg
pusha
adc
sahf
popf
les
push
nop
mov
lods
movsb
and
cmp
inc
xchg
inc
inc
mov
pop
or
sub
jge
xchg
rol
cmp
or
cwtl
add
jno
cmp
pop
ret
xor
dec
in
popa
sub
pop
test
in
dec
pop
js
pop
xchg
add
dec
jecxz
popa
push
and
fisttps
inc
mov
cmp
xchg
stc
xchg
mov
pop
lock
and
cmp
jge
push
mov
ret
jo
lret
adc
or
inc
inc
xor
or
out
lret
int3
stos
sub
cmp
out
outsl
lret
xor
adc
xchg
jmp
xchg
loop
jg
test
rorl
aaa
inc
pop
xchg
ret
popa
sbb
jmp
xchg
pop
sbb
jo
push
icebp
push
push
pop
xchg
sbb
push
xor
sub
sbb
icebp
xchg
imul
imul
je
or
out
call
cmp
dec
iret
out
mov
add
fiadds
pop
inc
sbb
ja
xor
inc
mov
hlt
and
mov
jno
jg
loopne
stc
xchg
cmp
inc
loopne
adc
out
fldl
shrb
add
mov
jbe
pusha
xchg
in
outsl
fisttpl
pop
movsl
bound
test
inc
cmpsb
xchg
mov
xor
xchg
dec
imul
aad
adc
lahf
xchg
aad
roll
dec
fimull
cmp
sti
add
pop
adc
adc
dec
inc
sbb
test
dec
and
stos
inc
push
lods
push
aam
cltd
and
icebp
pop
cmp
sub
mov
fmull
cli
jecxz
xor
mov
out
pop
mov
jb
pop
adc
divl
push
push
pop
jecxz
and
mov
jae
and
xchg
sbb
js
cld
jmp
or
inc
ds
jno
sub
mov
pop
cs
int
dec
and
inc
or
movsl
aaa
shll
cmp
push
adc
sbb
mov
call
ficompl
push
and
nop
pop
sub
jns
inc
jns
pop
scas
mov
dec
push
cld
test
pop
mov
mov
jmp
xor
rol
push
add
aam
enter
and
outsl
pop
jae
enter
cmp
roll
xchg
push
or
lret
push
dec
es
xor
push
mov
jecxz
sahf
add
adc
xor
fxch
pop
mov
cmp
sub
jge
pop
push
cmpsl
shlb
push
addb
call
xchg
inc
ljmp
lcall
fmuls
dec
outsb
and
add
and
jns
or
push
and
cmp
inc
roll
aam
adc
adc
inc
cmp
gs
lods
xchg
inc
push
xor
add
sub
add
loopne
dec
cmp
pop
cmp
sbb
loop
test
push
ljmp
out
orl
sub
dec
inc
adc
out
adc
mov
or
cmc
adc
cmp
mov
push
loop
out
mov
scas
mov
fs
sub
mov
xor
fisttps
icebp
inc
mov
push
or
cwtl
repz
adc
and
or
rcrl
mov
es
mov
mov
inc
xchg
jg
push
lock
pop
insl
push
mov
add
mov
cmp
jne
xor
inc
jmp
xor
leave
ret
push
cmp
push
and
mov
push
mov
add
mov
mov
sub
and
mov
mov
and
add
mov
pushl
pushl
push
pushl
lea
push
push
push
call
mov
leave
ret
jae
leave
add
push
mov
add
mov
mov
push
pushl
push
pushl
push
push
call
mov
mov
sub
sub
mov
mov
add
sub
mov
mov
leave
ret
leave
jmp
testb
in
add
mov
add
sub
mov
mov
mov
sub
and
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
add
mov
test
jge
mov
mov
mov
mov
mov
jmp
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmpl
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
pushl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
adc
xlat
mov
in
add
movl
mov
sub
add
mov
mov
movl
mov
mov
and
add
mov
mov
mov
sub
and
mov
movl
mov
mov
sub
and
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
add
and
mov
mov
add
and
mov
mov
mov
and
add
mov
mov
and
and
mov
mov
sub
sub
mov
mov
movl
mov
add
add
mov
mov
mov
add
add
mov
mov
and
sub
mov
mov
sub
and
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
sub
add
mov
mov
and
and
mov
mov
mov
mov
sub
and
mov
mov
add
sub
mov
mov
mov
and
add
mov
mov
add
and
mov
mov
mov
mov
sub
add
mov
mov
and
sub
mov
mov
mov
and
sub
mov
mov
mov
sub
add
mov
mov
add
and
mov
mov
pushl
mov
sub
add
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
and
and
mov
mov
mov
and
and
mov
mov
mov
add
add
mov
mov
pop
add
push
push
mov
mov
mov
and
and
mov
mov
add
sub
mov
mov
sub
and
mov
mov
mov
and
add
mov
mov
mov
mov
add
add
mov
mov
add
sub
mov
mov
and
sub
mov
mov
mov
add
add
mov
mov
pop
pop
pushl
push
push
mov
sub
and
mov
mov
and
and
mov
mov
sub
sub
mov
mov
mov
pop
pop
pop
push
push
mov
mov
and
add
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
pop
pop
pushl
push
push
mov
sub
and
mov
mov
add
sub
mov
mov
and
add
mov
mov
mov
and
add
mov
mov
and
add
mov
mov
mov
sub
and
mov
mov
mov
add
and
mov
mov
add
add
mov
mov
sub
add
mov
mov
sub
and
mov
mov
add
sub
mov
mov
mov
add
add
mov
mov
add
sub
mov
mov
mov
mov
mov
pop
pop
pop
xor
push
push
push
mov
sub
and
mov
mov
sub
add
mov
mov
mov
mov
and
add
mov
mov
sub
add
mov
mov
mov
mov
pop
pop
popl
pushl
pop
neg
sub
push
mov
mov
mov
mov
add
add
mov
mov
mov
mov
add
sub
mov
mov
mov
and
and
mov
mov
mov
sub
and
mov
mov
mov
sub
sub
mov
mov
and
sub
mov
mov
sub
and
mov
mov
sub
sub
mov
mov
sub
sub
mov
mov
mov
add
and
mov
mov
mov
mov
add
add
mov
mov
add
and
mov
mov
sub
sub
mov
mov
and
add
mov
mov
add
sub
mov
mov
add
add
mov
mov
and
add
mov
mov
and
sub
mov
mov
mov
sub
add
mov
mov
add
and
mov
mov
and
sub
mov
mov
sub
sub
mov
mov
add
add
mov
mov
mov
add
and
mov
mov
mov
popl
mov
mov
mov
sub
and
mov
mov
and
and
mov
mov
mov
and
add
mov
mov
and
and
mov
mov
mov
sub
add
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
and
and
mov
mov
add
and
mov
mov
and
add
mov
mov
sub
sub
mov
mov
sub
sub
mov
mov
add
and
mov
mov
add
and
mov
mov
and
and
mov
mov
mov
mov
mov
add
and
mov
mov
mov
sub
and
mov
mov
add
sub
mov
mov
mov
mov
and
and
mov
mov
add
and
mov
mov
sub
and
mov
mov
sub
sub
mov
mov
mov
add
and
mov
mov
mov
mov
sub
add
mov
mov
and
and
mov
mov
mov
mov
add
sub
mov
mov
add
add
mov
subl
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
add
and
mov
mov
and
add
mov
mov
sub
and
mov
mov
and
add
mov
mov
and
add
mov
mov
mov
mov
and
and
mov
mov
mov
sub
sub
mov
mov
sub
add
mov
mov
mov
add
and
mov
mov
and
sub
mov
mov
mov
add
sub
mov
mov
sub
add
mov
mov
mov
addl
jne
leave
ret
mov
jne
push
mov
add
mov
and
add
mov
mov
sub
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
leave
ret
enter
gs
add
mov
mov
mov
mov
and
sub
mov
mov
mov
add
sub
mov
push
lea
push
lea
push
call
mov
mov
and
sub
mov
mov
sub
sub
mov
mov
mov
mov
mov
sub
add
mov
mov
and
sub
mov
leave
ret
mov
lret
xchg
inc
push
mov
add
mov
mov
pushl
pop
mov
inc
sub
decl
jne
leave
ret
push
mov
add
mov
add
and
mov
mov
and
and
mov
mov
and
and
mov
mov
mov
sub
and
mov
push
push
pushl
push
push
call
mov
and
add
mov
mov
add
and
mov
mov
add
sub
mov
mov
add
and
mov
mov
sub
and
mov
mov
leave
ret
cmp
dec
cmc
push
mov
add
mov
and
and
mov
mov
mov
mov
and
and
mov
mov
mov
and
add
mov
mov
add
and
mov
mov
mov
add
mov
mov
mov
mov
add
sub
mov
mov
mov
add
and
mov
mov
sub
and
mov
mov
mov
add
mov
and
sub
mov
mov
mov
mov
and
and
mov
mov
add
mov
mov
mov
sub
and
mov
mov
mov
and
sub
mov
add
mov
mov
mov
mov
mov
sub
add
mov
mov
and
sub
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
add
mov
mov
and
and
mov
mov
and
sub
mov
mov
and
sub
mov
mov
mov
add
and
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
sub
mov
mov
and
and
mov
mov
mov
and
sub
mov
movl
mov
add
add
mov
mov
mov
sub
sub
mov
mov
and
sub
mov
movl
mov
and
add
mov
mov
add
and
mov
mov
mov
and
add
mov
mov
mov
mov
mov
and
and
mov
mov
mov
and
add
mov
add
mov
sub
and
mov
mov
mov
sub
add
mov
xor
mov
sub
sub
mov
mov
mov
sub
add
mov
mov
add
add
mov
mov
add
and
mov
mov
sub
add
mov
mov
mov
mov
mov
and
sub
mov
mov
incl
mov
add
add
mov
mov
and
mov
mov
and
and
mov
mov
mov
cmp
je
mov
mov
sub
and
mov
mov
rol
mov
mov
and
sub
mov
mov
add
and
mov
add
mov
add
sub
mov
xor
mov
mov
mov
add
add
mov
mov
jmp
push
mov
add
mov
add
sub
mov
mov
mov
and
sub
mov
mov
mov
mov
mov
cmp
jbe
mov
and
add
mov
jmp
test
jge
mov
mov
jmp
mov
cmp
jg
mov
and
add
mov
mov
mov
push
push
push
call
mov
add
add
mov
mov
add
and
mov
mov
sub
add
mov
mov
add
and
mov
leave
ret
push
jae
push
mov
add
mov
sub
sub
mov
mov
add
sub
mov
mov
and
sub
mov
mov
mov
mov
mov
sub
sub
mov
mov
push
push
lea
push
pushl
lea
push
push
call
mov
mov
sub
sub
mov
mov
sub
sub
mov
mov
leave
ret
mov
cltd
cmp
mov
add
mov
mov
add
add
mov
mov
add
sub
mov
mov
and
add
mov
mov
add
add
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
sub
add
mov
mov
mov
sub
sub
mov
leave
ret
sbb
cmpsl
mov
in
mov
mov
and
and
mov
mov
add
and
mov
mov
add
sub
mov
mov
mov
movl
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
xchg
adc
mov
add
mov
mov
sub
sub
mov
mov
mov
sub
add
mov
mov
and
sub
mov
mov
mov
sub
add
mov
mov
mov
pushl
pushl
pushl
lea
push
push
call
mov
leave
ret
dec
clc
jmp
in
add
mov
mov
mov
sub
and
mov
mov
sub
add
mov
mov
and
and
mov
mov
and
and
mov
push
call
pop
add
mov
add
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
and
mov
leave
ret
mov
in
add
mov
mov
and
and
mov
mov
mov
add
and
mov
mov
mov
push
lea
push
lea
push
call
mov
and
add
mov
mov
mov
and
and
mov
mov
mov
leave
ret
lret
mov
in
add
mov
mov
sub
sub
mov
mov
mov
and
add
mov
mov
mov
and
and
mov
mov
sub
and
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
lea
push
push
lea
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
stos
adc
sbb
push
mov
add
mov
mov
add
add
mov
mov
add
sub
mov
cmpl
jg
jmp
cmp
jg
mov
and
and
mov
jmp
mov
mov
mov
add
sub
mov
mov
mov
mov
pushl
push
lea
push
lea
push
lea
push
lea
push
call
mov
and
add
mov
mov
mov
and
and
mov
mov
mov
mov
leave
ret
mov
inc
loopne
mov
add
mov
mov
sub
and
mov
mov
mov
mov
push
push
lea
push
lea
push
push
call
mov
mov
and
sub
mov
mov
mov
add
sub
mov
leave
ret
pop
stos
popa
lret
mov
add
mov
add
and
mov
mov
add
and
mov
mov
mov
mov
and
sub
mov
mov
mov
and
add
mov
push
pushl
push
call
mov
mov
add
sub
mov
mov
mov
sub
sub
mov
mov
sub
add
mov
mov
and
add
mov
leave
ret
call
or
lock
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
pushl
pushl
call
mov
mov
add
sub
mov
mov
and
and
mov
leave
ret
jne
dec
jg
mov
add
mov
sub
add
mov
mov
add
sub
mov
push
push
push
push
push
push
push
call
mov
mov
and
sub
mov
mov
leave
ret
mov
mov
add
mov
sub
sub
mov
mov
mov
mov
mov
lea
push
push
push
call
mov
and
and
mov
mov
mov
mov
and
sub
mov
leave
ret
xor
cli
stc
mov
add
mov
mov
sub
add
mov
mov
sub
add
mov
mov
test
jbe
mov
add
add
mov
mov
mov
mov
jmp
testl
jge
jmp
testl
jge
mov
jmp
mov
mov
add
and
mov
mov
mov
push
push
push
pushl
call
mov
and
sub
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
leave
ret
cmpsl
arpl
hlt
push
mov
add
mov
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
and
sub
mov
leave
ret
repz
les
push
mov
add
mov
sub
and
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
mov
mov
mov
mov
mov
leave
ret
inc
stos
out
mov
repz
mov
add
mov
and
sub
mov
mov
mov
and
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
and
sub
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
lock
xchg
push
mov
add
mov
xor
push
mov
xor
push
mov
push
xor
push
mov
push
call
push
push
call
call
sub
mov
mov
pop
sub
push
push
push
push
pop
add
push
push
push
mov
sub
call
lea
push
lea
push
pushl
lea
push
pushl
lea
push
pushl
push
lea
push
push
call
call
pop
ret
jecxz
pop
mov
push
mov
add
mov
add
and
mov
mov
pushl
lea
push
push
call
mov
mov
mov
mov
and
add
mov
mov
sub
add
mov
mov
sub
sub
mov
leave
ret
loop
cmpsl
pop
inc
mov
in
add
mov
add
add
mov
mov
mov
mov
mov
and
add
mov
mov
mov
push
pushl
pushl
push
lea
push
call
leave
ret
cmc
cwtl
and
data16
testb
in
add
mov
add
sub
mov
mov
and
sub
mov
mov
add
and
mov
mov
push
push
pushl
push
lea
push
lea
push
call
mov
and
sub
mov
mov
mov
mov
add
add
mov
leave
ret
mov
lock
push
mov
add
mov
mov
mov
and
sub
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
add
and
mov
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
and
and
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
dec
out
adc
sub
in
mov
and
and
mov
mov
mov
mov
sub
and
mov
mov
add
sub
mov
mov
mov
sub
sub
mov
mov
add
sub
mov
mov
movl
mov
and
sub
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
and
and
mov
mov
pushl
lea
push
lea
push
lea
push
lea
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
adc
sub
bound
add
sub
jge
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
push
pop
subl
mov
mov
and
and
mov
mov
add
add
mov
sub
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
and
and
mov
mov
mov
add
and
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
subl
mov
sub
and
mov
mov
sub
sub
mov
mov
sub
sub
mov
sub
je
push
pop
subl
mov
sub
add
mov
mov
add
add
mov
mov
mov
and
sub
mov
sub
je
push
pop
subl
mov
mov
mov
sub
add
mov
sub
je
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
push
pushl
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
and
and
mov
mov
sub
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
push
lea
push
push
push
push
push
pushl
call
testl
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
test
jg
mov
mov
mov
add
sub
mov
mov
and
and
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jge
mov
add
and
mov
mov
mov
and
and
mov
mov
mov
mov
jmp
cmp
jge
mov
sub
and
mov
mov
and
and
mov
jmp
test
jbe
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
add
add
mov
mov
mov
mov
test
jg
mov
mov
mov
mov
mov
mov
jmp
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
cmpl
jbe
mov
mov
mov
jmp
test
jg
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jge
mov
add
and
mov
mov
sub
and
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jbe
mov
mov
jmp
cmpl
jg
mov
mov
jmp
mov
and
and
mov
mov
sub
and
mov
mov
leave
ret
scas
out
je
mov
add
mov
mov
mov
mov
add
sub
mov
mov
and
and
mov
mov
and
and
mov
mov
and
sub
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jge
jmp
test
jbe
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
jmp
testl
jge
mov
add
sub
mov
mov
add
and
mov
mov
mov
mov
jmp
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
iret
cmpl
add
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
add
add
mov
mov
movl
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
pushl
call
mov
mov
sub
sub
mov
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
leave
ret
jmp
mov
add
mov
add
sub
mov
mov
add
sub
mov
lea
push
lea
push
push
push
call
mov
mov
mov
mov
leave
ret
outsl
add
les
in
add
mov
add
add
mov
mov
sub
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
pushl
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
stos
lret
imul
in
add
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
pushl
lea
push
pushl
call
mov
and
sub
mov
mov
add
sub
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
lret
pop
test
int
push
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
and
add
mov
push
push
pushl
pushl
push
push
lea
push
call
call
mov
mov
add
and
mov
mov
mov
mov
add
and
mov
mov
sub
add
mov
mov
mov
leave
ret
sbb
jne
cmpsl
in
js
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
push
push
pushl
call
mov
add
sub
mov
mov
sub
and
mov
mov
leave
ret
sbb
pop
clc
and
in
add
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
push
mov
mov
test
jge
mov
jmp
test
jge
mov
mov
mov
mov
jmp
cmpl
jge
mov
add
add
mov
mov
and
sub
mov
mov
add
add
mov
mov
mov
add
add
mov
mov
add
add
mov
mov
add
add
mov
mov
cmp
jbe
mov
sub
sub
mov
mov
and
add
mov
jmp
mov
mov
and
add
mov
mov
and
and
mov
mov
add
and
mov
mov
and
add
mov
testl
jbe
mov
jmp
mov
add
and
mov
mov
add
add
mov
mov
and
add
mov
mov
mov
mov
mov
and
and
mov
testl
jge
mov
and
sub
mov
mov
mov
sub
sub
mov
jmp
test
jg
mov
sub
and
mov
mov
sub
sub
mov
mov
mov
jmp
cmp
jg
mov
mov
jmp
mov
mov
mov
mov
add
and
mov
mov
sub
sub
mov
mov
mov
test
jg
mov
mov
mov
jmp
test
jge
mov
mov
mov
jmp
mov
sub
and
mov
mov
and
sub
mov
mov
mov
and
sub
mov
mov
cmp
jg
mov
and
sub
mov
mov
and
and
mov
mov
sub
and
mov
jmp
test
jbe
mov
mov
mov
and
sub
mov
mov
sub
and
mov
jmp
mov
and
sub
mov
mov
mov
sub
and
mov
mov
and
sub
mov
mov
mov
add
and
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
and
add
mov
mov
mov
and
add
mov
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
and
sub
mov
mov
test
jg
mov
add
and
mov
mov
and
add
mov
mov
and
sub
mov
jmp
test
jge
mov
and
sub
mov
mov
and
and
mov
mov
mov
and
and
mov
mov
sub
and
mov
mov
add
and
mov
mov
and
and
mov
mov
sub
sub
mov
mov
mov
mov
add
add
mov
mov
mov
and
add
mov
pop
mov
add
and
mov
mov
mov
add
add
mov
mov
and
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
sub
sub
mov
mov
mov
and
and
mov
mov
mov
sub
add
mov
mov
mov
mov
add
add
mov
mov
mov
mov
and
sub
mov
mov
mov
mov
add
sub
mov
mov
mov
and
sub
mov
mov
sub
and
mov
mov
mov
mov
and
and
mov
mov
add
add
mov
mov
mov
mov
sub
add
mov
mov
and
add
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
add
sub
mov
mov
mov
and
and
mov
mov
sub
sub
mov
mov
add
mov
cmp
je
mov
mov
add
add
mov
mov
sub
add
mov
mov
and
and
mov
mov
mov
add
add
mov
mov
mov
add
add
mov
mov
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
and
sub
mov
mov
mov
mov
mov
and
add
mov
mov
and
and
mov
mov
sub
sub
mov
mov
and
add
mov
mov
add
add
mov
mov
sub
add
mov
mov
add
sub
mov
mov
mov
and
sub
mov
mov
sub
add
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
and
and
mov
lea
push
pushl
call
mov
sub
add
mov
mov
add
sub
mov
mov
sub
sub
mov
mov
add
and
mov
mov
sub
sub
mov
mov
add
add
mov
mov
add
sub
mov
lea
push
pushl
call
mov
and
and
mov
mov
sub
and
mov
mov
and
sub
mov
mov
and
and
mov
mov
mov
mov
mov
push
call
mov
sub
add
mov
mov
mov
and
add
mov
mov
mov
and
sub
mov
mov
push
pushl
push
call
mov
sub
sub
mov
mov
and
add
mov
mov
and
and
mov
mov
sub
add
mov
mov
mov
and
and
mov
mov
mov
add
add
mov
mov
sub
and
mov
mov
mov
mov
push
call
mov
sub
sub
mov
mov
mov
and
and
mov
mov
mov
mov
sub
add
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
push
pushl
lea
push
lea
push
lea
push
push
lea
push
lea
push
pushl
pushl
call
mov
cmp
jbe
mov
mov
mov
jmp
testl
jge
mov
add
add
mov
mov
mov
mov
jmp
testl
jge
mov
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
and
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
subl
mov
mov
and
and
mov
sub
jne
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
mov
mov
sub
sub
mov
dec
jne
call
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
call
push
push
push
call
push
push
push
push
call
push
push
push
push
call
mov
and
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
mov
mov
movl
mov
sub
and
mov
mov
mov
mov
sub
add
mov
mov
pushl
pushl
push
pushl
lea
push
call
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
cld
mov
gs
scas
and
fmuls
add
and
or
sub
mov
mov
mov
dec
mov
mov
and
sub
mov
and
mov
and
add
mov
mov
mov
add
and
mov
mov
mov
and
sub
mov
mov
mov
and
mov
mov
and
sub
mov
sub
mov
sub
and
mov
cmp
jne
mov
sub
sub
mov
mov
sub
and
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
leave
ret
fs
outsb
loopne
push
mov
add
mov
mov
add
sub
mov
mov
add
and
mov
mov
mov
add
and
mov
mov
sub
sub
mov
mov
add
add
mov
movl
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
sub
and
mov
mov
sub
and
mov
pushl
push
push
call
mov
mov
mov
mov
and
and
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
sub
adcb
add
mov
mov
and
add
mov
mov
mov
mov
movl
mov
add
add
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jg
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
jmp
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
call
mov
add
add
mov
mov
mov
mov
add
sub
mov
mov
leave
ret
sbb
inc
repnz
mov
add
mov
sub
and
mov
mov
mov
mov
and
sub
mov
test
jge
mov
mov
mov
sub
add
mov
jmp
testl
jg
jmp
test
jg
jmp
cmp
jbe
mov
mov
sub
add
mov
mov
add
and
mov
mov
add
add
mov
pushl
lea
push
push
push
pushl
call
mov
sub
sub
mov
mov
leave
ret
clc
dec
int3
outsl
push
mov
add
mov
add
sub
mov
mov
sub
sub
mov
mov
add
sub
mov
mov
add
sub
mov
mov
add
and
mov
mov
and
sub
mov
cmp
jge
mov
mov
jmp
cmp
jbe
mov
and
sub
mov
jmp
mov
cmp
jbe
jmp
cmpl
jge
mov
sub
sub
mov
mov
jmp
mov
cmp
jge
mov
add
add
mov
mov
add
and
mov
mov
mov
lea
push
lea
push
pushl
push
call
mov
add
add
mov
mov
add
add
mov
mov
sub
add
mov
leave
ret
mov
mov
add
mov
mov
and
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
mov
and
sub
mov
mov
mov
mov
sub
add
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
jge
xchg
pop
sub
add
mov
mov
and
sub
mov
mov
add
add
mov
mov
sub
sub
mov
mov
sub
sub
mov
mov
sub
sub
mov
leave
ret
js
es
mov
mov
sub
add
mov
mov
sub
sub
mov
cmp
jne
mov
add
sub
mov
mov
mov
and
and
mov
mov
and
sub
mov
mov
mov
mov
sub
and
mov
add
mov
sub
and
mov
mov
mov
sub
add
mov
mov
mov
and
add
mov
mov
and
mov
sub
add
mov
mov
and
sub
mov
mov
and
sub
mov
mov
sub
add
mov
shl
mov
mov
add
and
mov
mov
add
mov
mov
and
add
mov
mov
mov
mov
add
mov
mov
mov
sub
and
mov
mov
mov
and
sub
mov
mov
movl
mov
add
add
mov
mov
mov
mov
sub
and
mov
mov
and
and
mov
mov
and
sub
mov
mov
add
add
mov
addl
mov
mov
add
sub
mov
mov
and
sub
mov
addl
mov
decl
mov
and
sub
mov
cmpl
jne
mov
and
sub
mov
mov
add
add
mov
mov
mov
sub
and
mov
leave
ret
lret
leave
cwtl
pop
and
in
add
mov
add
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
jmp
cmp
jg
mov
mov
and
add
mov
mov
mov
jmp
test
jbe
mov
mov
jmp
testl
jbe
mov
jmp
test
jge
mov
mov
mov
mov
mov
sub
and
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
leave
ret
dec
inc
fsubs
hlt
mov
add
sub
mov
mov
mov
lea
push
pushl
push
push
call
mov
sub
sub
mov
mov
call
push
mov
add
add
mov
mov
sub
sub
mov
pop
or
je
mov
mov
sub
sub
mov
mov
and
and
mov
mov
call
push
mov
mov
pop
or
je
mov
add
sub
mov
mov
and
add
mov
mov
and
and
mov
lea
push
pushl
lea
push
lea
push
call
mov
sub
add
mov
mov
mov
mov
mov
add
and
mov
mov
mov
leave
ret
inc
jle
pop
or
push
mov
add
mov
mov
pushl
lea
push
push
call
mov
add
and
mov
mov
and
and
mov
leave
ret
cmp
in
add
mov
mov
mov
add
sub
mov
mov
sub
and
mov
mov
add
and
mov
mov
and
sub
mov
movl
mov
mov
mov
add
sub
mov
mov
lea
push
push
push
push
call
mov
mov
and
add
mov
mov
mov
mov
mov
sub
and
mov
leave
ret
sbb
cmp
push
mov
add
mov
add
sub
mov
mov
push
push
push
lea
push
lea
push
lea
push
call
mov
sub
sub
mov
mov
sub
and
mov
mov
sub
sub
mov
mov
add
and
mov
mov
mov
leave
ret
rclb
vpaddsb
leave
std
inc
add
add
add
sub
mov
mov
add
add
mov
mov
sub
add
mov
mov
mov
mov
add
add
mov
mov
add
sub
mov
mov
movl
mov
mov
mov
mov
mov
push
push
pushl
lea
push
pushl
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
out
addb
mov
add
and
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
jge
push
mov
in
add
mov
add
and
mov
mov
sub
and
mov
mov
add
and
mov
mov
sub
and
mov
cmp
jge
mov
mov
and
and
mov
mov
mov
add
and
mov
jmp
mov
cmp
jbe
jmp
cmp
jge
mov
mov
jmp
test
jbe
mov
and
add
mov
mov
add
sub
mov
mov
and
add
mov
mov
and
add
mov
mov
add
add
mov
mov
leave
ret
mov
test
inc
push
push
mov
add
mov
and
and
mov
mov
mov
mov
and
sub
mov
mov
mov
mov
mov
add
add
mov
mov
push
pop
add
push
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
push
mov
mov
mov
mov
mov
and
sub
mov
mov
mov
and
and
mov
mov
push
mov
call
mov
mov
and
sub
mov
mov
sub
add
mov
push
mov
push
mov
add
sub
mov
mov
call
mov
call
mov
sub
add
mov
mov
add
sub
mov
mov
mov
mov
mov
add
and
mov
leave
mov
ret
push
cmpsl
xor
add
mov
sub
sub
mov
mov
mov
mov
and
sub
mov
movl
mov
sub
and
mov
mov
add
sub
mov
test
jge
mov
mov
mov
add
add
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
lea
push
lea
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
and
sub
mov
leave
ret
push
push
jnp
or
push
mov
add
mov
mov
sub
sub
mov
mov
add
sub
mov
mov
mov
add
and
mov
mov
push
push
lea
push
lea
push
lea
push
push
call
add
push
ret
pop
test
pop
das
or
add
ret
mov
sbb
sti
push
mov
add
mov
mov
add
sub
mov
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
sub
sub
mov
leave
ret
adc
fwait
push
mov
add
mov
mov
add
and
mov
mov
mov
mov
and
add
mov
mov
mov
mov
add
and
mov
mov
and
add
mov
mov
and
and
mov
test
jbe
mov
jmp
test
jbe
mov
sub
and
mov
mov
jmp
test
jge
jmp
test
jg
mov
mov
mov
mov
jmp
cmp
jbe
mov
mov
jmp
mov
add
and
mov
mov
add
and
mov
push
pushl
push
push
call
mov
and
sub
mov
mov
add
add
mov
mov
add
and
mov
leave
ret
sbb
in
xchg
xchg
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
push
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
jecxz
out
jno
mov
add
mov
and
add
mov
mov
testl
jbe
mov
sub
sub
mov
mov
mov
and
add
mov
mov
jmp
cmp
jge
mov
and
and
mov
jmp
test
jg
mov
mov
sub
add
mov
mov
mov
jmp
testl
jge
mov
mov
jmp
testl
jg
mov
mov
mov
and
and
mov
mov
sub
and
mov
mov
mov
sub
add
mov
push
push
lea
push
lea
push
lea
push
call
mov
mov
and
and
mov
mov
and
add
mov
mov
add
and
mov
mov
leave
ret
jle
mov
daa
call
in
add
mov
mov
mov
mov
sub
add
mov
movl
mov
sub
sub
mov
mov
mov
sub
add
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
dec
jne
ficoml
mov
add
mov
mov
mov
add
add
mov
mov
and
sub
mov
mov
sub
add
mov
mov
mov
add
and
mov
mov
and
and
mov
test
jg
mov
jmp
testl
jge
mov
and
add
mov
mov
jmp
test
jg
mov
and
and
mov
jmp
mov
and
add
mov
mov
mov
mov
and
add
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
add
mov
mov
add
and
mov
leave
ret
ficomps
pop
and
daa
fucomip
mov
movsl
scas
push
inc
andb
adc
das
sbb
hlt
mov
push
dec
pushf
iret
cmp
dec
imul
sub
add
sbb
xchg
dec
out
or
and
mov
inc
notl
xchg
fnstcw
cltd
push
pop
or
in
test
cmp
mov
cmp
loope,pn
adc
addb
imul
mov
xchg
scas
push
push
add
incb
jb
fldl
mov
mov
jne
xchg
bound
sbb
inc
iret
and
cmp
jecxz
adc
scas
roll
mov
roll
loopne
add
inc
add
or
add
sbb
add
sub
add
cmp
add
dec
ret
pop
ret
push
add
jp
add
mov
add
movsb
ret
mov
ret
call
ret
adc
add
and
add
inc
ret
add
pop
ret
add
jb
add
test
add
mov
ret
add
int3
ret
add
faddp
add
clc
ret
add
add
add
sbb
add
les
add
add
add
add
pop
les
add
add
mov
add
pushf
les
add
add
add
add
clc
rolb
mov
rolb
je
add
or
add
jl
add
add
add
les
add
add
add
roll
into
roll
loopne
add
inc
add
or
add
sbb
add
sub
add
cmp
add
dec
ret
pop
ret
push
add
jp
add
mov
add
movsb
ret
mov
ret
call
ret
adc
add
and
add
inc
ret
add
pop
ret
add
jb
add
test
add
mov
ret
add
int3
ret
add
faddp
add
clc
ret
add
add
add
sbb
add
les
add
add
add
add
pop
les
add
add
mov
add
pushf
les
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
push
gs
gs
imul
jb
popa
je
inc
jbe
outsb
je
add
add
push
imul
jae
jne
arpl
add
add
outsb
fs
imul
jne
gs
outsl
jne
je
outsl
imul
add
arpl
add
add
je
push
popa
je
dec
popa
insl
gs
add
add
inc
popa
fs
gs
fs
je
add
add
inc
gs
gs
inc
imul
jae
popa
fs
je
imul
add
add
popa
jo
je
imul
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
xor
inc
imul
inc
gs
imul
add
inc
jae
imul
gs
push
outsl
dec
outsl
bound
push
arpl
add
inc
outsb
jne
inc
popa
je
inc
outsl
jb
popa
je
inc
js
add
add
push
gs
push
dec
outsl
arpl
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
imul
outsb
je
outsl
insb
add
add
jae
gs
push
imul
insb
gs
imul
push
popa
imul
outsb
je
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
je
jns
je
insl
push
imul
imul
jns
add
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
add
inc
insb
outsl
bound
inc
imul
inc
add
add
dec
outsl
jae
outsb
popa
insl
gs
outsl
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
imul
js
add
dec
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
add
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
inc
gs
js
je
outsl
fs
push
add
push
push
dec
dec
dec
cs
insb
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
add
add
jb
imul
inc
add
push
push
inc
push
xor
cs
insb
add
add
inc
gs
imul
outsl
arpl
add
add
imul
push
imul
jae
add
inc
fs
gs
jne
insb
imul
jbe
arpl
add
add
je
gs
popa
addr16
outsl
jae
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
outsl
outsb
je
js
dec
gs
jo
add
add
push
gs
popa
jae
inc
jb
outsl
jb
js
ja
ljmp
test
sti
inc
xor
cld
xorl
jge
repnz
sub
jno
push
into
mov
sbb
scas
mov
mov
xchg
inc
cltd
adc
fdivrs
mov
push
in
movsb
std
pushf
loopne
cmp
neg
fwait
cmp
sub
xor
mov
pop
or
dec
cld
and
xchg
in
xchg
loop
popf
or
push
xchg
outsb
jno
insb
lret
gs
sbb
jno
sti
fcoml
stos
inc
mov
xchg
dec
mov
pop
dec
daa
mov
hlt
push
and
inc
sbb
test
clc
sti
jg
adc
xchg
sti
icebp
pop
jmp
faddl
and
imul
inc
xchg
xchg
cli
pop
stc
pushl
inc
ret
or
xchg
dec
nop
cmc
lock
ja
scas
inc
scas
.byte
test
.byte
push
push
inc
push
in
lods
dec
into
mov
inc
jge
jecxz
lret
lret
mov
push
ret
adc
das
inc
jmp
mov
add
sbb
cwtl
dec
add
add
add
add
and
add
add
add
add
add
pusha
adc
gs
xor
add
add
jbe
aas
and
sub
and
fdivs
inc
or
mov
outsl
iret
inc
sub
pop
dec
mov
outsl
fs
dec
movsl
or
sub
stos
icebp
dec
pop
test
add
adc
mov
sti
mov
push
xchg
imul
inc
xor
pushf
repz
mov
or
mov
dec
jnp
or
and
jecxz
nop
xchg
pop
xor
lds
or
mov
sarb
mov
test
adc
xor
sub
jg
sbb
pop
adc
xor
and
pop
dec
push
outsb
xor
push
pop
dec
popa
ss
xor
insl
pop
dec
inc
outsl
xor
jae
jo
dec
dec
je
fs
dec
cmp
imul
add
adc
xchg
sub
inc
rorl
ficompl
and
ret
pop
add
xchg
push
movsb
in
and
mov
stos
add
add
pop
add
imul
aad
sub
out
push
xor
popf
sub
cmpsl
iret
mov
and
popa
hlt
les
aas
lret
pop
minps
loope
aaa
or
mov
dec
add
xchg
lret
iret
dec
in
jmp
test
ret
inc
lret
inc
lret
and
inc
icebp
push
push
loope
cmc
mov
rorb
ret
dec
jle
and
rcl
pop
cmp
add
jbe
pop
mov
ret
push
inc
cmp
dec
push
pop
bound
inc
inc
jo
jns
push
insb
jae
dec
jno
outsb
push
pop
cmp
je
dec
insl
push
jns
xor
dec
dec
add
xlat
loopne
pop
les
cmc
inc
adc
push
jno
sub
inc
xchg
loope
sbb
in
inc
push
sbbb
lock
sbb
cwtl
add
in
add
mov
cmp
pop
test
mov
call
pop
inc
inc
adc
cmp
sub
fbld
aam
push
cmc
test
adc
jne
stc
jge
and
xchg
sbb
ja
lret
xchg
pop
mov
push
leave
jb
and
test
cmpsb
imulb
adc
into
xchg
lods
std
fidivrs
mov
in
lds
fisttps
jbe
test
push
inc
sarb
sbb
inc
aam
and
push
lds
adc
xor
and
arpl
out
popf
ljmp
pop
xchg
fmul
push
sbb
shrl
cmc
jnp
lret
dec
mov
jno
sbb
daa
pop
push
push
rorb
and
xchg
push
mov
imul
cmp
add
aaa
and
add
test
sbb
stos
out
dec
sbb
enter
in
xchg
xchg
fidivl
test
loop
dec
adc
mov
out
inc
hlt
test
adc
fwait
mov
mov
pop
push
cmpb
mov
sbb
mov
add
in
movsb
sbb
sub
sbb
cmc
mov
clc
sub
add
adc
xor
lods
and
adc
mov
rorb
test
and
jae
cmp
inc
scas
mov
int
mov
imul
pop
jle
aad
jb
sbb
xor
frstor
jae
jge
pop
int3
outsb
in
xor
mov
jno
dec
adc
bound
adc
adc
mov
cld
mov
and
xorb
flds
jb
cmp
mov
jge,pn
push
sub
es
sbb
pop
push
mov
rol
inc
add
bound
inc
orb
out
mov
sbb
dec
inc
fimuls
mov
imul
mov
push
movsb
dec
cmp
xor
cld
cmp
xchg
pop
sub
inc
inc
jl
xchg
out
in
mov
enter
das
adcb
add
xor
cmovl
call
sub
sbb
push
pop
test
dec
adc
lcall
mov
pop
insb
icebp
test
cmpsb
jbe
jae
adc
sbb
push
loope
adc
sub
ja
mov
lds
jne
mov
lods
push
cmp
pop
shlb
cmp
cmp
mov
lock
lret
mov
pop
gs
mulb
pop
and
jns
int3
inc
add
loope
cwtl
mov
jp
sbb
cmp
das
xchg
pop
xchg
stos
aam
sti
sub
loopne
insb
cltd
mov
push
lock
cmp
xchg
je
mov
cmp
lcall
out
insb
jo
enter
rcrl
lods
xor
mov
leave
fcmovne
adc
scas
and
inc
pusha
iret
mov
xor
add
xor
sub
lods
inc
ficomps
jo
dec
sub
pop
fldt
mov
jl
sbb
inc
int
stos
or
cmpsl
xor
int3
sbb
into
test
cmpsb
mov
cmp
push
push
jge
in
sub
xor
mov
idivb
sub
ja
dec
test
mov
mov
icebp
mov
dec
cld
loop
inc
mov
enter
mov
cmp
cmp
push
in
je
es
push
jge
hlt
sbb
add
movsb
test
xchg
outsl
lds
cwtl
dec
mov
fimull
dec
and
cmp
jmp
and
rcll
lock
add
imul
push
ret
jno
pop
and
repnz
or
sti
adc
sbb
pop
gs
fsubs
mulb
cmp
mov
or
sbb
inc
in
mov
pop
stos
jp
add
jg
jno
hlt
and
lcall
adc
sbb
and
xor
jb
ds
imul
jmp
aad
les
pusha
test
push
dec
pushf
je
mov
dec
push
ja
xor
cmp
pop
inc
outsb
je
pop
inc
xor
popa
jns
jns
dec
dec
inc
imul
dec
push
dec
dec
imul
js
inc
cmp
popa
outsb
jns
pop
je
dec
push
push
ja
push
pop
xor
inc
imul
fisubl
xor
je
mov
sarl
std
sbb
and
sub
scas
xor
xorl
adc
subl
je
mov
ret
jb
aas
lret
addr16
addr16
sbb
std
popl
in
pop
sbb
aas
in
inc
int
and
xchg
inc
xchg
xchg
test
dec
xlat
les
lcall
lcall
test
sbb
stos
pop
fstps
dec
inc
bnd
in
adc
loopne,pt
rcll
adc
adc
mov
inc
xor
mov
ret
data16
aad
sub
add
add
aaa
jo
jb
je
dec
jno
inc
pop
xor
dec
xor
pop
je
xor
xor
inc
dec
inc
xor
jb
ss
jbe
gs
dec
js
insb
push
push
aaa
push
add
inc
dec
inc
fs
push
jno
inc
je
inc
imul
pop
jne
arpl
insl
push
xor
push
outsb
xor
gs
jno
jbe
push
inc
addr16
push
outsb
jno
jo
push
dec
inc
inc
ss
dec
fs
js
pop
push
xor
je
insb
aaa
inc
js
inc
push
jae
push
xor
popa
fs
outsl
outsl
jb
insb
pop
dec
jae
jno
insl
dec
pop
imul
xor
inc
jb
dec
bound
imul
inc
insl
bound
insb
push
dec
xor
inc
fs
inc
js
push
popa
inc
inc
inc
push
imul
dec
aaa
push
arpl
add
dec
xor
imul
arpl
dec
jno
xor
xor
push
imul
inc
inc
jbe
bound
inc
jne
inc
ss
push
add
dec
push
inc
pop
jne
push
dec
cmp
xor
jns
insl
insl
xor
inc
insl
xor
push
insl
data16
push
insl
dec
push
outsb
push
inc
xor
xor
push
inc
arpl
inc
push
jne
outsb
jae
arpl
pop
popa
jne
outsl
push
xor
pop
add
fsubrs
clc
fisttps
adc
mov
mov
sub
scas
cmp
dec
pushf
mov
ja
mov
jecxz
std
sbb
mov
sub
mov
rolb
sbb
inc
dec
inc
mov
add
scas
call
das
cmp
enter
sub
aam
test
pusha
xchg
xlat
and
xorb
sbb
jge
mov
add
sub
xor
jecxz
loop
adc
xor
inc
sub
mov
jbe
jbe
add
and
add
xchg
adc
scas
inc
mov
cld
mov
add
add
dec
jo
jle
mov
dec
add
scas
and
inc
dec
adc
mov
jo
gs
stos
cltd
dec
in
and
push
test
sbb
sub
push
cltd
and
adc
stc
add
jecxz
call
fimuls
inc
aam
inc
add
xchg
out
and
addr16
inc
push
xchg
add
lret
jl
push
xor
mov
rclb
adc
sbb
sbb
or
pusha
or
adc
roll
sbb
cli
rorb
lfs
xor
adc
sbb
repz
xchg
pop
or
jp
out
dec
adc
xor
xchg
inc
fwait
insl
das
push
mov
lret
das
int3
nop
mov
mov
mov
pusha
xor
push
dec
cmpsb
lds
sbb
or
dec
stc
dec
sub
sub
scas
push
fstps
mov
adc
jb
aad
std
cmp
mov
xor
and
fists
and
or
inc
outsb
xchg
gs
xchg
ja
push
pop
jp
mov
and
adc
inc
popf
repnz
xor
sub
movsl
push
int
repnz
daa
add
das
fldl
sbb
into
and
cmpsb
imul
inc
or
lods
inc
daa
sarb
mov
cmp
int3
and
push
adc
mov
loope
adc
add
testl
pushf
scas
xchg
or
or
outsl
aaa
mov
cmpsl
imul
and
mov
push
inc
ret
or
ds
flds
popl
rcrb
xor
xor
fiadds
xorb
pusha
int3
jl
loopne
add
adc
data16
xor
add
and
dec
adc
scas
shlb
dec
pop
lock
rolb
mov
sar
dec
pop
dec
pop
inc
fimuls
gs
mov
mov
ss
lods
adc
jle
and
push
sub
or
mov
and
test
cmpsl
mov
mov
clc
in
sbb
pop
pop
and
and
mov
or
cmp
push
cs
mov
adc
dec
jno
or
int
test
add
fcomps
stos
lods
scas
mov
sahf
mov
cmp
mov
add
stos
inc
xchg
and
bound
pop
mov
and
mov
push
or
mov
jle
repnz
add
push
push
rcrl
ljmp
sahf
cmc
sbb
je
inc
es
movsl
or
inc
insb
cmp
stos
fcompl
mov
add
push
dec
jo
and
push
inc
mov
mov
mov
xchg
test
ja
dec
add
cld
cld
jae
dec
xor
adc
mov
mov
leave
ror
jnp
mov
add
jae
into
popa
ret
adc
in
or
inc
sub
xchg
inc
flds
xchg
hlt
cmpsl
mov
push
out
push
jge
or
cmp
cmp
inc
sub
or
mov
aad
int
sub
push
and
push
mov
ds
jge
inc
jmp
repz
sbb
inc
testb
sbb
add
mov
leave
sbb
and
cmp
dec
das
loope
add
pusha
add
mov
push
jo
dec
int
pop
or
push
nop
add
addb
dec
pop
push
add
push
enter
mov
nop
adc
imulb
sbb
add
push
jle
leave
push
push
and
clc
cmp
push
pusha
and
inc
and
xchg
push
rorl
push
adc
cltd
jo
dec
test
push
xor
fmull
and
sub
aaa
sahf
push
xor
jbe
mov
and
adc
sarb
push
or
push
lahf
fdivs
add
xchg
mov
and
adc
cmp
stos
mov
icebp
ret
lret
xor
test
sarb
inc
cmp
addb
ret
xchg
cmp
sbb
lods
sub
gs
cmpsl
test
mov
iret
lret
pop
and
scas
nop
ret
in
and
sbb
lods
mov
cmpl
movb
add
mov
mov
mov
sbb
pop
jg
mov
and
pop
roll
and
inc
int3
push
and
mov
stos
leave
jle
and
or
inc
push
clc
hlt
xchg
sub
fs
xor
xor
test
sbb
mov
icebp
stc
and
cmpsb
jne
or
inc
int3
lods
pop
pop
int
hlt
jne
lcall
xchg
sbbb
mov
lods
push
jl
adc
mov
mov
pop
cmpsb
test
pop
pop
pop
cmc
inc
dec
test
push
and
dec
pop
jecxz
pop
or
and
dec
adcl
push
push
divl
shr
sarb
lea
gs
pop
xlat
mov
pop
in
push
les
pushf
xor
xor
inc
jno
mov
ret
mov
nop
xchg
pop
ljmp
cmp
daa
stos
insb
mov
mov
pavgb
arpl
inc
jmp
inc
sub
insl
cltd
dec
adc
inc
dec
push
inc
cmp
outsb
dec
xor
inc
xor
dec
dec
imul
add
lahf
sub
mov
cmc
inc
xchg
adc
xchg
adc
sbb
add
imul
mov
lret
lret
inc
xchg
adc
mov
and
xchg
mov
xor
sub
inc
nop
cwtl
gs
outsw
push
sbb
dec
pop
push
add
sar
fs
cmc
and
pop
push
or
xor
test
rclb
cwtl
or
repnz
or
xchg
add
cmp
inc
es
sbb
stc
pop
and
sub
leave
cwtl
enter
or
es
and
lahf
repnz
add
leave
dec
pop
aas
int3
arpl
inc
jae
dec
push
outsb
inc
pop
dec
push
imul
xor
push
imul
inc
inc
addr16
jb
inc
push
ss
dec
inc
adcb
xchg
and
adc
cmp
jp
mov
mov
pop
pop
adc
test
sbb
nop
push
out
pop
fmull
ljmp
stc
insl
incb
xor
adc
mov
mov
add
imul
pushf
and
inc
in
rcr
inc
scas
andl
out
movsb
add
sub
cmp
xchg
addr16
mov
data16
cmp
hlt
inc
sbb
pop
mov
xor
sbb
dec
and
jo
in
cli
xor
pop
data16
cmp
xchg
jae
stos
dec
mov
mov
shll
push
pop
xchg
sbb
lcall
inc
testb
pushf
jl
sub
cmp
mov
mov
sub
imul
ljmp
inc
es
mov
mov
cmpsl
mov
dec
fstl
sbb
sarl
and
ljmp
inc
mov
imul
xchg
pop
jmp
stc
iret
mov
jne
jbe
lods
mov
sub
inc
shlb
mov
and
sub
or
pop
sahf
sbb
mov
incb
pop
test
enter
mov
ret
movsb
test
cs
xlat
imul
cmp
jo
outsl
insl
jb
insl
arpl
inc
pop
dec
dec
xor
push
insl
dec
jbe
gs
inc
insb
aaa
jne
jb
dec
inc
js
dec
dec
jne
outsl
outsl
inc
dec
dec
outsb
fs
xor
pop
pop
inc
outsb
bound
push
push
dec
push
gs
inc
dec
outsl
imul
inc
push
dec
fs
inc
inc
inc
push
push
jns
mov
outsl
push
jle
pop
loop
add
push
xor
daa
or
cli
push
inc
xchg
mov
iret
ficomps
imul
stos
jl
mov
insb
or
daa
jbe
or
jl
mov
push
add
adc
es
sbb
mov
jo
leave
hlt
dec
mov
push
lods
inc
rolb
loopne
jne
stos
mov
lods
repnz
gs
cmc
mov
and
dec
outsb
jae
jns
mov
sti
sub
lcall
mov
leave
fwait
sbb
loopne
xchg
pop
mov
das
orb
into
add
inc
xor
out
mov
jns
adc
jmp
lods
rcrb
mov
mov
mov
rorb
ss
xor
std
aad
pop
inc
lods
adc
es
jno
and
insl
clc
jecxz
push
inc
mov
mov
and
dec
mov
pop
imul
dec
addr16
clc
sti
mov
pop
push
push
or
into
add
jl
inc
xchg
sub
sub
adc
inc
xor
subb
inc
push
into
gs
sbb
pusha
jp
es
cmp
pop
jl
cmp
and
cli
jmp
loopne
mov
and
movb
orb
xchg
mov
jno
pop
inc
inc
push
dec
dec
inc
popa
inc
inc
dec
xor
inc
dec
jne
ss
dec
dec
push
addr16
xor
insl
push
push
push
dec
fs
jbe
inc
js
pop
push
xor
inc
xor
jo
arpl
push
outsb
xor
xor
bound
addr16
pop
imul
dec
inc
push
push
inc
xor
push
xor
push
jns
jo
xor
dec
insb
push
dec
bound
gs
bound
push
dec
data16
push
push
jno
jne
jbe
js
xor
popa
jnp
push
dec
mov
nop
pop
dec
das
andb
adc
and
dec
je
pop
and
push
cltd
rol
bound
mov
adc
add
or
cli
pop
xchg
xor
stos
adc
sbb
test
test
sbb
or
or
sbb
lods
mov
inc
into
je
mov
shrb
repz
xor
ds
out
bound
testb
mov
add
cmpsb
or
push
push
lods
add
mov
push
xchg
cmp
rcll
pushf
daa
dec
adc
addr16
das
popa
jecxz
cmpsb
repnz
and
stos
test
pop
mov
xor
imul
xor
push
aaa
jno
insl
gs
idivl
out
test
mov
inc
push
test
push
dec
inc
fldenv
mov
adc
xchg
jle
jecxz
jae
adc
inc
mov
ljmp
outsl
add
xor
sti
jo
push
sbbb
dec
mov
popa
push
cs
adc
push
push
sarw
lret
enter
cmp
or
jb
push
cmpsl
cbtw
and
call
add
sahf
dec
and
xor
fiadds
dec
movlps
cmp
sbb
movsl
xchg
pop
or
dec
in
int3
dec
neg
push
pop
dec
xchg
pop
cli
in
nop
lods
repz
lods
xor
mov
add
inc
or
cli
aaa
push
inc
aaa
jmp
in
push
in
push
repz
jecxz
cmp
adc
jl
daa
je
cld
xchg
or
mov
shrl
lea
popa
add
imul
int
cmpsb
dec
add
int3
jecxz
inc
shlb
mov
js
xchg
outsl
push
fists
adc
and
or
pop
dec
imul
xchg
add
popf
and
pop
sub
push
jecxz
push
xor
in
and
pop
fmulp
cmp
adc
pop
add
lea
loopne
jecxz
pop
dec
fnstenv
add
pusha
ret
xchg
fadd
movsb
lock
mov
jb
jmp
ja
imul
xchg
inc
and
or
bound
sbb
std
and
add
adc
seto
cmpsb
or
mov
and
cmpl
push
cli
je
and
adc
xchg
xchg
pop
les
popa
xor
and
xchg
mov
es
test
cltd
mov
mov
mov
add
pop
mov
in
cmp
cmc
jmp
int3
lret
jecxz
sub
and
and
mov
imul
sub
ret
or
mov
cmpl
mov
orb
inc
div
xchg
pop
sub
adc
push
mov
js
xor
addl
pop
clc
fnsave
lds
gs
jno
adc
and
jecxz
test
or
or
adc
mov
popa
push
rol
aam
adc
out
push
add
push
cli
inc
daa
scas
ljmp
pusha
pshufw
pushf
dec
sbb
sub
or
pop
cmp
dec
in
insl
les
mov
mov
inc
inc
adc
cmp
cli
ljmp
add
ret
and
insb
mov
outsb
fistl
dec
xchg
sub
fcomi
jmp
cmp
pop
add
subl
or
mov
push
dec
in
lret
mov
cmp
notl
add
adc
outsl
pop
sarb
xchg
cmp
and
jnp
mov
dec
ror
aas
mov
push
lea
pop
push
ljmp
mov
lcall
mov
int3
js
pmullw
jp
sub
add
iret
pop
adc
lcall
adc
xchg
pop
shlb
or
push
movsl
adc
mov
lret
adcb
xchg
xchg
xchg
jns
mov
and
dec
or
add
jo
data16
xor
add
scas
and
outsl
loope
inc
imul
xor
cmp
dec
push
push
push
popa
insb
dec
cmp
js
dec
push
xor
xor
outsl
imul
push
dec
data16
push
push
inc
je
push
insl
inc
outsb
data16
pop
bound
pop
data16
outsb
dec
push
push
push
data16
push
push
outsl
push
push
dec
add
pop
lods
mov
xor
test
lds
les
mov
and
push
xor
xchg
add
inc
add
cmp
fistpll
add
adc
outsl
mov
movsb
jle
outsl
xor
lret
bound
lret
je
mov
bound
or
loop
and
fldl
add
jo
mov
stos
ffree
leave
add
or
mov
adc
cmp
mov
mov
cmp
icebp
faddl
cmp
xor
call
sbb
adc
jnp
mov
shrl
aas
adc
lret
sbb
xchg
mov
push
cltd
clc
sbb
inc
push
pop
lds
and
push
icebp
test
xor
xlat
fwait
mov
cmp
stos
dec
notl
pop
insb
push
in
xchg
adcl
adc
adc
and
cmpb
push
ss
push
adc
in
push
sub
in
mov
sub
daa
sub
into
add
mov
xor
stos
cltd
sbb
dec
adc
jl
xor
ret
and
xorl
dec
roll
mov
jno
or
data16
pop
nop
daa
mov
pop
adc
in
movb
sbb
cmp
cwtl
outsb
cld
inc
clc
jae
mov
mov
movsl
add
or
add
add
lea
test
xor
cwtl
dec
mov
fsubrl
xor
rclb
mov
mov
jge
ret
rolb
and
cmp
cmp
je
mov
xchg
push
or
icebp
xchg
adc
scas
mov
jle
fnstcw
mov
inc
test
rcrl
movsb
sub
jb
pop
xchg
mov
inc
add
push
ficoml
lahf
pop
inc
cld
mov
sbb
into
sbb
hlt
xor
push
mov
jnp
leave
pop
jb
jnp
mov
ljmp
cmp
adc
or
mov
add
rcrl
sub
jge
mov
or
lahf
rcrb
test
cmp
dec
popa
cmp
ss
cmp
jne
inc
dec
jb
xor
arpl
gs
bound
pop
pop
pop
jl
repnz
jo
lcall
imul
mov
sub
movsl
xor
in
and
xor
jl
es
xor
fisubrs
jp
ljmp
and
rcr
pop
inc
and
stos
sahf
data16
mov
adc
jecxz
cld
divb
push
sub
jl
add
fmul
test
repz
adc
sbb
push
inc
inc
jns
pushf
xor
out
fstpl
outsl
push
inc
sub
add
ret
adc
outsb
rcr
in
gs
xor
adc
cmp
cmp
je
lock
iret
popa
int3
aas
movsl
ja
pop
enter
je
fidivs
dec
sub
sti
fsubr
or
mov
inc
rcrb
xlat
push
xchg
in
xchg
xchg
cld
pusha
dec
dec
cwtl
mov
or
outsb
sahf
popa
aaa
cmpsl
jl
fsubrl
cmpb
xchg
cli
outsl
jo
in
push
inc
aam
ret
cwtl
stc
push
nop
jb
in
sbb
push
lods
jmp
in
je
adc
sub
mov
jne
test
and
push
or
aaa
fsubs
gs
adc
ret
jo
enter
add
clc
xor
cmp
scas
cwtl
in
push
dec
ds
mov
sti
das
lret
cli
iret
mov
xchg
mov
int
loop
cmpsl
jl
arpl
arpl
dec
push
ss
xor
inc
inc
dec
push
xor
dec
xor
aaa
xor
addr16
dec
arpl
push
je
insl
push
cmp
add
or
cli
imulb
orl
icebp
mov
dec
xchg
icebp
sub
sbb
jbe
pusha
je
adcl
pushf
das
sbb
and
xchg
out
dec
fs
nop
lds
lods
push
test
scas
sbb
aas
xchg
ss
addb
out
push
jno
pop
adcb
jae
pop
mov
std
inc
test
sbb
inc
jns
and
jl
int
ljmp
push
leave
lcall
push
and
add
xor
js
add
lret
ret
sub
xchg
mov
mov
add
push
adc
fcomip
ja
outsb
pop
dec
loope
stos
or
testl
jo
dec
loope
sbb
pop
js
push
or
sahf
movsl
arpl
adc
imul
sub
fsubs
adc
xchg
data16
xor
jno
sbb
mov
dec
push
push
mov
call
lds
dec
pop
inc
xchg
add
adc
cli
inc
rclb
jo
lret
xchg
push
jge
lds
les
add
ljmp
rclb
jno
dec
insb
xchg
sub
lds
lret
xor
add
add
sahf
icebp
mov
dec
pandn
test
mov
sbb
std
xor
sub
pop
icebp
into
fwait
xor
mov
cmp
rorl
sbb
cmp
test
cmp
cmp
ljmp
dec
cli
mov
outsl
adc
ja
dec
dec
and
rcll
enter
sbb
add
pop
or
jp
nop
mov
cmp
repnz
push
or
popl
pop
dec
fisubrl
pusha
pusha
iret
pop
addl
ret
jge
xor
xchg
inc
sub
andb
jecxz
lock
test
mov
jp
jg
bound
mov
jnp
mov
cmc
rcll
popf
es
xchg
add
jb
dec
pop
daa
xchg
ret
and
mov
mov
mov
or
negb
jno
push
cmc
stc
fstl
push
xchg
jnp
jg
dec
xor
outsb
cs
adcb
add
pop
loope
sub
and
adc
jecxz
inc
test
cmp
nop
daa
adc
or
in
cli
aam
sub
sarl
dec
je
xchg
dec
std
ret
inc
xchg
fbld
in
push
mov
inc
imul
cltd
out
cwtl
outsl
and
mov
add
mov
mov
xchg
pop
xchg
in
push
call
push
jae
dec
push
dec
dec
push
insb
cmp
add
das
lods
insl
push
xor
mov
movsl
adc
add
loop
push
mov
add
mov
pop
aad
call
popf
xlat
adcb
cld
leave
and
shlb
cmp
mov
mov
into
mov
mov
inc
sub
leave
xchg
mov
and
add
sti
xor
pop
arpl
stos
mov
xlat
dec
add
pop
add
dec
jg
add
adc
mov
and
pop
hlt
mov
mov
xorb
out
cmp
sbb
add
ret
add
sti
out
and
add
pusha
rclb
add
push
sbb
cmpsl
push
idivb
mov
sbb
xchg
inc
inc
mov
adc
nop
pop
xchg
sub
pusha
pop
loope
je
aas
add
andb
inc
lea
inc
and
scas
mov
add
rorl
mov
cmp
shl
sbb
lods
pop
mov
sub
xor
add
dec
lret
or
add
sub
in
out
rcr
lds
jae
inc
inc
push
in
out
push
jecxz
xchg
addr16
call
push
sub
das
xorl
inc
jecxz
adc
jmp
mov
mov
xor
push
pop
pushf
sbbl
mov
cmp
push
jo
xor
add
push
xor
xor
jae
dec
bound
inc
xor
imul
gs
fs
inc
and
cmpsb
xor
repnz
mov
rclb
out
sti
add
loope
adc
scas
testl
xor
and
in
xchg
rol
xchg
loopne
adc
push
ds
dec
or
ficoms
or
inc
push
mov
cmp
pop
mov
cltd
scas
push
stos
mov
cmpl
inc
dec
xchg
push
mov
imul
aas
and
inc
jmp
pop
jg
loopne
pop
rol
adc
lahf
les
mov
or
dec
add
mov
lods
add
movsl
cmc
push
xchg
in
aaa
xchg
enter
pop
pminsw
fs
rorl
lret
mov
adcl
mov
sub
pop
push
outsl
daa
mov
cmpsl
cltd
adc
and
mov
xchg
mov
inc
add
mov
lods
ret
push
in
xchg
xchg
jg
or
or
insb
adc
leave
movsb
inc
fsts
pop
cmp
xorb
add
cmc
cli
dec
stos
repnz
fisttpll
add
xor
insb
stc
aas
jo
roll
pop
and
sar
mov
inc
push
pop
icebp
xchg
in
adcb
sti
out
stos
jno
inc
shlb
ffreep
decb
fcoms
mov
sarb
and
mov
pop
ljmp
decb
mov
addb
scas
shrb
push
cmp
inc
push
inc
sbb
cltd
sbbl
adc
or
dec
dec
inc
int
mov
inc
cmp
dec
inc
jl
jb
xor
cmp
scas
test
jg
cmpsl
mov
sub
nop
jae
pop
add
mov
xor
mov
in
daa
test
ss
xlat
lds
hlt
cmp
imul
test
movl
jb
xor
inc
inc
mov
popf
pop
pop
mov
rcll
cmc
mov
sub
mov
cs
add
scas
lret
mov
xchg
adc
and
movsb
jno
fdecstp
xchg
fisubs
enter
rol
sub
fldcw
jg
and
xor
movsl
add
fcomip
xchg
xor
xor
lcall
outsb
dec
jg
lods
mov
mov
mov
clc
mov
jae
xor
pop
out
lods
std
insb
aad
cmp
adc
push
mov
mov
push
enter
pop
jmp
lds
xor
adc
xor
pop
xor
cli
call
test
xchg
call
test
adc
inc
push
dec
xor
dec
data16
dec
push
aaa
inc
inc
js
dec
inc
inc
pop
insb
push
inc
data16
dec
dec
dec
push
je
add
mov
add
fdivrs
xor
inc
sub
sub
in
pop
inc
pusha
je
addb
movsb
loop
sarb
outsb
pop
xor
cmp
inc
pusha
mov
and
push
and
add
xor
jns
dec
sbb
mov
and
nop
out
in
cwtl
xchg
test
sbb
test
adc
and
push
xchg
jb
xlat
stos
cmp
cli
out
cmp
inc
pop
data16
adc
les
rcr
sub
popf
inc
inc
sahf
mov
add
ret
sbb
cmp
xor
push
es
mov
dec
push
dec
or
repz
add
jp
inc
shll
aam
mov
lret
add
mov
out
lds
mov
add
xlat
subl
jne
std
fs
mov
mov
subl
dec
xor
adc
adc
add
sub
mov
mov
stos
aam
push
test
movsb
jmp
dec
inc
push
and
jb
add
scas
push
adc
popa
bound
lcall
xchg
xor
mov
movsb
add
enter
clc
inc
pop
and
inc
test
and
fwait
push
adc
cmp
cmpb
lret
enter
or
mov
inc
xor
pop
scas
adc
addb
dec
pop
cwtl
push
and
inc
xchg
push
dec
mov
cs
sbb
jae
pop
pop
sbb
xchg
pop
stc
dec
cmp
adc
push
add
dec
sti
and
xor
push
and
dec
icebp
sti
xor
or
add
cmc
nop
xchg
stc
xor
jbe
mov
lahf
lea
sbb
rcr
jo
fsubl
pop
and
aad
shll
or
fldenv
mov
mov
dec
xchg
scas
lds
xchg
xor
lods
inc
les
xchg
fsubs
dec
pop
inc
test
mov
lds
stos
rorb
nop
int3
push
xor
jno
popw
mov
adc
xchg
icebp
ljmp
fsubrs
test
lock
add
cld
or
push
lods
mov
or
adc
lret
enter
aam
xchg
lea
shrl
dec
push
leave
out
iret
dec
dec
adc
sbb
or
imul
push
cwtl
bound
rcll
rcrl
js
test
jno
ja
je
dec
push
mov
push
xor
xchg
out
or
test
inc
jle
sbb
push
out
sub
push
sarl
stos
mov
dec
lahf
scas
fstps
leave
test
push
or
sbb
mov
push
xchg
popf
jl
jne
dec
jae
gs
dec
pop
imul
imul
dec
push
pop
fs
bound
ss
jo
inc
jbe
insl
addr16
outsb
push
add
mov
leave
sub
repnz
stc
push
jns
sub
push
mov
pop
cld
dec
mov
mov
mov
sub
rorl
testl
push
adc
enter
lods
es
lret
cmp
mov
mov
xor
jnp
cmp
mov
andb
test
or
cwtl
add
lret
sub
arpl
popf
movsl
xchg
mov
cmpsl
sub
or
push
stos
ret
push
xor
mov
outsb
iret
dec
and
add
test
xchg
gs
data16
inc
jns
insl
push
xor
inc
dec
inc
inc
bound
outsl
dec
push
add
add
add
push
push
dec
jo
jb
xor
addr16
push
inc
imul
insb
jbe
jno
push
xor
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
fs
incl
je
mov
push
mov
rcrl
mov
mov
mov
push
and
cmp
shlb
add
ret
xchg
and
fistps
push
adc
or
add
push
add
addb
ja
push
int3
data16
or
lahf
adc
add
mov
push
push
cmp
xor
cmpsl
mov
movsl
jmp
movsb
push
and
cmp
push
push
shr
jle
and
data16
inc
mov
or
mov
sbb
mov
mov
xor
or
jno
mov
dec
jnp
in
fdecstp
aad
mov
sub
inc
mov
lds
out
lret
aam
dec
mov
fidivl
push
cmpsl
push
fistpll
ret
mov
loop
mov
xor
or
clc
insb
xchg
cmpsl
test
jb
xor
loope
xchg
inc
jbe
sub
lret
call
pop
and
fs
loope
ljmp
mov
mov
xchg
xchg
xor
and
and
je
inc
push
aas
sbb
repnz
add
adc
inc
jge
inc
icebp
dec
cmp
or
xchg
add
repnz
mov
xchg
imul
add
adc
inc
stc
push
sbb
xchg
and
or
push
and
dec
out
scas
test
sbb
mov
jnp
pushf
dec
lret
fwait
mov
lret
push
aaa
aaa
aaa
nop
cmp
lds
cmp
mov
inc
push
cmc
fstpt
cmpsb
xchg
push
bound
adc
nop
lods
pop
push
ja
test
dec
mov
jecxz
push
popl
dec
jno
rcrb
mov
out
movsl
dec
shlb
les
scas
push
rcll
inc
cmp
mov
in
rcl
inc
mov
pop
sub
shll
cmp
dec
fimuls
and
fiadds
test
pop
aad
int3
cmp
jae
ss
shr
dec
cmc
jne
add
add
push
test
xlat
addl
fsts
sub
enter
add
aam
pusha
adc
outsl
lret
push
incb
lods
adc
sub
mov
rcrl
xorl
dec
je
add
and
in
fisubrs
pop
test
pop
mov
movl
das
std
and
pop
or
sub
push
xor
pop
sbb
add
int3
int
xlat
in
push
pop
mov
in
mov
movsb
pop
mov
jg
mov
dec
xor
insl
xor
dec
jbe
xor
push
arpl
outsb
pop
inc
xor
imul
push
push
dec
inc
jae
add
outsl
cmp
jae
dec
push
outsb
jno
fs
inc
xor
popa
dec
add
insl
push
jns
dec
push
xor
je
xor
pop
dec
pop
push
je
jne
mov
pop
xchg
and
shll
pop
mov
dec
enter
inc
push
insb
push
daa
enter
inc
jp
lcall
repnz
loope
and
jp
xchg
loope
adc
inc
or
mov
adc
sub
outsl
jne
test
aad
and
push
jae
js
adc
push
icebp
lret
movsb
pop
popa
mov
scas
nop
jge
sub
jo
inc
insb
orl
and
dec
aad
push
sbb
or
inc
inc
aas
enter
adc
sub
or
or
test
or
mov
pop
and
in
pushf
cmp
insb
pop
pop
cwtl
inc
nop
push
lds
jmp
nop
add
push
sbb
xchg
push
push
test
je
adc
pop
mov
mov
xchg
rclb
das
or
repz
and
scas
or
lds
or
pop
iret
stc
adc
adc
leave
inc
xor
das
loop
orl
push
add
mov
push
adc
sbb
shl
dec
push
mov
iret
sbb
or
or
sbb
sbb
inc
adc
jb
lcall
inc
cmp
inc
mov
add
mov
push
dec
mov
mov
pop
popl
mov
scas
cmp
sbb
mov
jne
sub
clc
stos
mov
xchg
xchg
lcall
je
push
ret
jg
aaa
fmuls
mov
xadd
mov
jecxz
inc
or
xor
xor
and
push
dec
sbb
cltd
inc
jl
mov
mov
push
adc
mov
les
adc
mov
sub
out
bound
mov
pop
aaa
sub
and
or
out
push
ds
movsl
icebp
int3
sub
jns
adc
ss
lods
jb
adc
xchg
add
add
adc
fsubs
mov
adc
pushf
clc
jge
xchg
sbb
add
jmp
xchg
push
inc
aam
add
dec
xchg
pop
hlt
or
and
aas
push
in
dec
add
pop
enter
stc
inc
lock
inc
lods
inc
inc
mov
and
and
add
inc
xor
sub
hlt
push
mov
popa
cltd
xor
cmp
inc
push
popa
jge
pop
popf
pusha
pop
mov
and
faddp
in
shll
dec
lret
testl
mov
xor
icebp
ss
xor
push
lock
pop
out
mov
push
adcl
jmp
sub
cmp
pop
lret
or
dec
dec
push
inc
dec
je
dec
jae
jno
push
cmp
js
outsb
xor
dec
xor
cmp
push
xor
cmp
pop
mov
mov
push
or
mov
pop
sbb
xchg
je
icebp
cli
xor
jne
sti
insl
fscale
pusha
out
jno
lahf
xbegin
add
jle
jb
icebp
aaa
and
popa
xchg
test
pop
dec
je
and
cmp
inc
cmp
cmp
adc
inc
fiadds
xor
fimuls
rclb
mov
push
dec
pop
stc
sti
cli
pushf
sbb
xchg
push
lods
les
push
jae
std
adc
sbbb
adcb
xor
jl
inc
scas
jns
pop
icebp
dec
ds
aaa
std
mov
lahf
adc
or
inc
rdmsr
push
aaa
ss
imul
dec
xor
push
xor
inc
add
push
cmp
xor
pop
inc
insb
jg
push
test
add
ss
adc
fnstsw
shll
mov
pusha
lds
pop
ret
mov
mov
mov
mov
cmpb
iret
inc
ss
jp
ss
jecxz
mov
mov
fildll
in
lret
sub
es
mov
pop
mov
xchg
in
xchg
bound
mov
sub
enter
cmp
jnp
sub
lea
and
cmp
xlat
lock
out
fs
rolb
push
dec
add
and
in
maxps
or
add
add
dec
dec
insl
push
js
jb
ja
imul
dec
inc
push
pop
pop
dec
jae
inc
pop
jbe
js
push
push
jo
gs
push
insl
jne
mov
push
aad
decl
pop
inc
and
in
xchg
stos
pop
or
lret
or
dec
inc
jl
cmp
inc
popa
inc
cmp
dec
sbb
mov
xchg
vprotb
mov
inc
pop
pop
sbb
adc
cmc
sub
scas
nop
orb
xor
cltd
push
je
outsb
jbe
add
push
adc
xchg
out
jmp
test
test
and
xchg
mov
and
fs
nop
inc
xor
push
jmp
add
pusha
sarl
test
mov
fcomps
mov
dec
mov
lahf
inc
dec
hlt
mov
dec
ja
mov
and
fwait
lcall
dec
xchg
dec
push
popa
add
lret
shlb
fdivl
add
test
clc
sub
maxps
xchg
xor
leave
pop
sarb
sub
cmp
jne
int
mov
dec
lods
addl
mov
and
in
outsb
push
insl
sti
stos
lock
out
sahf
jl
mov
je
loope
in
add
inc
or
push
jne
pushw
jne
sbb
mov
sbb
out
and
sbb
add
jb
cmp
repnz
mov
int
xadd
jns
orb
push
sbb
icebp
sbb
or
xchg
mov
jnp
outsb
sahf
lods
mov
xlat
fs
pop
push
lret
hlt
push
add
mov
mov
mov
and
lds
inc
lods
jbe
mov
cs
dec
adc
call
inc
mov
aad
inc
bound
sarl
or
and
cmovno
imul
outsl
push
mov
cmp
adc
mov
scas
lcall
push
xor
add
lds
pop
idivl
jmp
gs
ret
cltd
loopne
sbb
jae
inc
in
inc
movsb
shrb
or
pop
mov
int
in
inc
and
or
jno
lea
push
andb
xor
insb
ds
jecxz
into
clc
lea
xchg
test
call
clc
cmp
mov
or
push
nop
test
inc
pop
inc
push
nop
orl
clc
xor
out
mov
push
jl
sbb
cs
ret
pop
cld
into
in
inc
xchg
ja
dec
ds
dec
inc
test
icebp
mov
clc
jo
ret
mov
shl
sti
pop
xor
jecxz
inc
ret
jl
clc
jo
pop
in
cltd
xchg
cmp
mov
and
dec
clc
mov
test
jecxz
stos
jecxz
cmp
jle
inc
ss
sbb
bnd
gs
dec
xlat
popa
or
nop
sub
ret
mov
daa
adc
pop
xor
shll
mov
pop
mov
scas
pushf
fistpll
or
cmp
adc
or
movsl
pop
or
les
sbb
adc
daa
dec
shr
ret
and
popa
pop
dec
fldenv
push
sbb
mov
pop
test
mov
sbb
dec
add
jecxz
js
insl
mov
into
jmp
and
inc
fisubl
pop
mov
test
mov
rorl
xchg
xor
lea
addr16
jns
mov
xchg
in
push
xor
jmp
jle
iret
mov
and
data16
ja
je
push
dec
dec
insl
push
push
dec
xor
dec
dec
je
push
jae
insl
addr16
imul
dec
dec
gs
addr16
insl
dec
je
je
dec
imul
push
add
gs
dec
pop
insb
outsl
popa
jno
arpl
jbe
push
aaa
pop
inc
push
jbe
inc
dec
jb
je
xor
dec
dec
xor
imul
outsb
imul
jbe
jo
dec
add
xor
je
inc
dec
popa
dec
jns
dec
jne
dec
je
jae
push
dec
push
push
addr16
cmp
shll
es
subl
icebp
inc
in
add
sbb
push
jbe
dec
xchg
cwtl
or
adc
outsl
imul
pop
or
imul
push
je
jbe
scas
sub
das
push
gs
pop
add
xor
movsl
inc
sbb
push
xor
iret
inc
stos
shrb
cmp
and
incb
or
xorb
les
add
je
dec
inc
inc
xchg
fidivl
lret
xchg
inc
jnp
and
arpl
add
and
inc
mov
jb
dec
das
lock
and
cmc
and
xor
es
push
loope
bound
insl
inc
imul
jbe
jbe
xor
push
data16
pop
into
scas
or
ret
aad
pop
sub
inc
rcr
jmp
adc
mov
lret
jae
movsl
add
or
out
lcall
and
push
inc
dec
push
pop
inc
roll
test
and
adc
lret
or
sub
in
pop
and
mov
pop
mov
std
pop
xchg
push
mov
sbb
sbb
cwtl
inc
pop
xor
push
call
pop
nop
adc
mov
push
inc
jb
pop
leave
out
mov
xor
pop
inc
mov
mov
mov
xchg
aaa
add
inc
jne
push
insb
fs
add
lods
mov
imul
addr16
ss
add
adc
cmovp
mov
clc
inc
lods
sub
test
testl
jl
enter
test
and
lock
dec
scas
lcall
pop
iret
or
xchg
or
data16
cltd
mov
das
xlat
fs
jecxz
or
daa
popa
jecxz
sub
jmp
xor
scas
and
fisttpll
fwait
nop
rclb
xor
push
sub
lcall
cwtl
addr16
add
gs
imul
sar
pop
orb
cltd
pusha
cltd
fmul
push
jne
out
fimuls
stos
cltd
pop
outsb
or
bound
scas
pop
stos
pop
loopne
movsl
mov
icebp
or
mov
mov
addl
loope
lock
xchg
out
dec
cmp
sbb
xchg
into
fmul
mov
cmpsb
adc
or
stc
loop
mov
stos
dec
movl
loop
xchg
xchg
popa
push
add
mov
mov
jl
fsts
movsl
loopne
out
mov
inc
dec
pop
and
xchg
popa
pop
rorb
add
inc
je
fbstp
or
fmuls
mov
cmc
sub
aam
sbb
mov
fcmove
and
push
aam
or
push
test
add
cmp
in
or
jecxz
mov
lds
pop
dec
je
aaa
dec
roll
mov
lcall
sub
xor
lret
mov
pop
mov
mov
js
dec
aad
push
dec
fmul
jmp
adc
clc
push
push
jmp
out
and
cmp
clc
orb
enter
mov
dec
test
imul
into
jl
jg
add
mov
xchg
test
and
jo
iret
xor
jno
pop
jae
data16
jge
call
cld
in
dec
outsb
test
sbb
sbb
jp
and
lods
or
sub
das
fwait
jns
insb
adc
stos
es
or
mov
mov
mov
add
sub
test
add
loop
aas
xchg
dec
dec
stc
mov
mov
out
jp
cmp
dec
mov
inc
sbbl
fisttpll
pop
and
mov
bound
inc
push
dec
add
out
arpl
scas
xchg
push
xor
mov
sub
xchg
inc
test
xchg
cli
stc
aaa
jp
mov
gs
adc
push
xchg
adc
jo
fisubrs
movsb
mov
pop
movsl
push
mov
dec
ret
ss
dec
cmp
in
adc
cmp
sub
add
jge
adc
jo
add
xchg
cmp
popa
dec
adc
ljmp
stos
xchg
jno
or
cmpsl
adc
push
cs
aad
test
cmpsl
sarb
addb
jns
mov
add
mov
push
and
sub
xchg
adc
ljmp
sbb
inc
out
mov
stos
leave
jb
add
jo
jp
mov
stos
mov
xchg
lahf
ret
mov
jle
pushf
add
nop
orl
or
dec
cmp
xor
mov
push
jmp
mull
or
sub
xor
lods
aad
call
ret
mov
out
adc
sub
sbbb
popa
xor
jo
jnp
mov
sub
inc
adcl
and
sbbb
xorb
mov
sub
mov
adc
mov
add
mov
in
mov
jo
lret
lods
mov
leave
sbb
xorb
int3
xlat
add
stos
push
push
pop
add
pusha
callw
bswap
adc
or
stos
push
inc
rclb
mov
pop
mov
pusha
mov
int
jns
pop
cltd
mov
push
lcall
push
xchg
xchg
jp
mov
xchg
mov
xorl
loopne
adc
add
xor
enter
cmpsb
push
cmp
inc
js
pop
scas
dec
jne
movsb
or
dec
lds
dec
pusha
in
xchg
mov
mov
inc
rol
mov
dec
cs
xor
loopne
inc
repz
mov
dec
jae
cmp
and
adc
xchg
lods
sbb
sub
xor
and
fmulp
xchg
mov
data16
sub
push
inc
push
call
mov
ljmp
aas
pop
or
sbb
push
gs
test
in
xor
dec
adc
cwtl
mov
add
adc
xchg
ret
push
daa
iret
and
cltd
ret
addb
add
dec
push
inc
pop
jbe
imul
inc
jns
xor
add
jg
push
movsw
mov
lods
mov
into
ljmp
mov
push
mov
adc
sahf
stc
add
push
shl
mov
dec
sub
and
lcall
test
movsl
outsl
or
or
shll
in
mov
jp
leave
fistpll
cmp
pop
iret
lods
ret
sub
insb
and
cs
lock
lret
pop
push
mov
repnz
mov
stos
jge
stos
test
inc
mov
mov
pop
push
cmp
imul
add
mov
mov
call
add
imul
enter
cmc
xchg
outsl
sbb
mov
in
test
add
adc
or
es
insl
sbb
pop
sub
shlb
or
dec
jno
xor
test
adc
sar
jle
daa
pop
pop
xor
push
sub
inc
and
adc
inc
stc
xchg
enter
push
cld
sub
xor
and
pop
add
repz
les
jne
add
pusha
xor
sbb
dec
lods
out
cmc
sub
hlt
jge
out
pop
jle
push
bound
mov
jno
popa
pop
mov
xchg
and
stos
popf
scas
dec
jp
ja
jg
adc
push
inc
pop
inc
jne
xor
addr16
xor
gs
outsb
inc
data16
insb
push
jb
pop
jno
imul
insl
cmp
push
xor
js
ss
xor
inc
add
mov
xor
sub
cs
out
xor
or
adc
xor
inc
loope
or
or
cli
mov
dec
push
out
lea
push
mov
ss
cmp
call
add
and
fisubrs
adc
dec
scas
std
cmpsl
inc
lea
test
xlat
dec
subb
lock
cmp
mov
mov
xchg
adc
add
adc
push
cmp
enter
sub
inc
pop
jg
adc
insl
add
adc
rcll
jb
loopne
sub
sbb
test
popf
not
mov
outsb
fadd
addr16
and
xlat
std
popf
loope
lahf
loop
ljmp
xchg
pushf
inc
decb
inc
pop
scas
push
mov
adc
ret
inc
pop
pop
sbb
mov
aam
jmp
shlb
dec
ret
xchg
out
sahf
wrmsr
xorb
fstl
xchg
add
push
mov
in
mov
inc
mov
imul
add
test
and
ret
ljmp
add
xchg
jl
and
enter
adc
pop
inc
or
push
aad
jp
inc
mov
jmp
and
or
pushaw
scas
jecxz
mov
mov
sbb
or
sti
dec
pop
pop
daa
inc
outsb
icebp
lods
aaa
jg
ja
xchg
and
mov
out
out
lock
pop
out
test
nop
addb
fisttps
mov
jbe
loopne
pushf
pop
cwtl
mov
or
and
mov
loopne
in
inc
xchg
enter
ret
jg
add
xor
mov
arpl
adc
icebp
mov
pop
mov
mov
xor
lock
cltd
int
fadd
arpl
mov
adcb
add
jle
push
and
pop
lods
inc
in
push
add
sbb
addl
out
jno
push
shlb
lods
or
jl
scas
je
push
mov
in
add
clc
cli
fldt
push
rol
mov
push
lea
lock
sbb
cmp
roll
mov
dec
daa
push
dec
adc
imul
test
jno
orl
cmp
pushf
inc
push
mov
mov
fcompl
addr16
jns
cmp
lcall
adc
je
ret
push
shrb
add
xor
imul
sbb
push
sbb
inc
or
inc
jne
mov
adc
inc
and
stos
or
push
push
sarb
mov
call
test
xchg
pop
mov
bound
sbb
xchg
jl
dec
adc
jge
and
pop
adc
popa
adc
and
nop
into
dec
mov
push
stc
loopne
pop
sahf
add
pop
enter
cwtl
mov
mov
addr16
jge
add
push
addl
sti
ljmp
sub
pop
pop
cmp
xchg
mov
nop
dec
aam
inc
sti
pop
cmp
xchg
push
stos
std
insb
xchg
mov
and
jmp
jp
dec
xchg
lods
mov
cmc
rolb
pop
or
daa
int3
je
push
push
push
int3
adc
dec
test
mov
imul
testb
sbb
cmp
add
adc
cld
mov
sub
data16
mov
sbb
mov
inc
popa
fdivrl
mov
repz
sbb
inc
bound
cmc
inc
pusha
xchg
cmpsl
and
add
lock
add
inc
fwait
add
push
add
clc
jne
mov
xorb
mov
lock
and
test
push
xchg
ficoml
push
xchg
cmpsb
jl
repnz
pop
and
out
fnstsw
xchg
lcall
push
mov
and
fistl
and
xchg
lahf
sub
inc
sbb
or
adc
cmp
jmp
leave
inc
nop
aad
test
jbe
out
mov
rcll
out
push
and
jns
incl
nop
mov
and
mov
xchg
xchg
inc
movsb
ds
je
int3
in
sbb
rcl
cmp
add
pmulhuw
clc
into
mov
fsubs
adc
pusha
cmp
lods
adc
add
xor
or
dec
jns
dec
jmp
mulb
jmp
ret
add
mov
arpl
or
ja
loopne
popa
fsubrl
and
xor
mov
orl
jl
jl
gs
hlt
testl
sub
cwtl
push
loopne
mov
clc
sbbb
jb
jecxz
mov
icebp
ret
scas
mov
cmpl
mov
xchg
cltd
int3
mov
pusha
stos
sbb
xor
lcall
pop
pop
pop
int3
lea
jne
xchg
jl
dec
jge
adc
mov
jl
dec
jno
cmp
mov
push
lods
sbb
add
dec
cmp
jecxz
pop
and
ret
adc
jl
outsb
push
loop
int3
mov
es
outsl
cmp
cmc
dec
jo
sub
add
add
jmp
pop
pop
xor
mov
cwtl
cmp
insb
jae
push
and
mov
pop
shrb
inc
and
sub
lret
sub
aam
jb
push
rorb
mov
pop
sahf
jge
call
aad
lds
mov
sub
inc
inc
fists
lock
push
fdivrs
cmp
add
lcall
ja
adc
mov
mov
jecxz
pop
dec
orl
sbb
pushf
push
scas
popf
xchg
jl
ljmp
ljmp
inc
mov
xchg
fsubrs
dec
aad
rcll
xor
mov
add
inc
dec
and
jecxz
dec
or
scas
fsubs
test
test
mov
dec
add
sbb
xor
inc
xlat
imul
sbb
dec
loop
push
dec
sbb
je
lods
lds
inc
fsubs
dec
gs
shl
inc
enter
mul
fwait
test
or
mov
addr16
mov
pop
jo
mov
outsb
je
or
mov
das
call
sahf
cmpsl
or
or
cltd
xchg
mov
ljmp
mov
std
mov
jmp
or
repz
mov
pop
xchg
leave
out
icebp
test
pop
stos
icebp
dec
inc
inc
and
cmpsb
into
push
inc
ret
push
mov
je
pop
dec
shlb
movsl
sub
cmp
in
pusha
and
shll
dec
das
and
rorl
imul
and
and
sub
xchg
out
xlat
divb
loop
lea
cwtl
push
or
adc
pop
or
lds
jbe
out
cmpsb
nopl
loopne
sbb
mov
test
inc
nop
out
or
cmp
incb
inc
adcb
sbb
and
daa
cmp
push
and
bound
cmp
rcrb
mov
cmp
addl
push
mov
jae
iret
mov
xchg
mov
cld
ficoms
lock
add
xchg
push
mov
jecxz
sub
popa
push
and
mov
outsl
mov
addr16
sub
cli
push
arpl
lahf
cmc
idivl
mov
arpl
addb
adc
xchg
ret
add
cmp
inc
xchg
adc
push
clc
or
pop
pop
lea
mov
sbb
sub
and
inc
cmp
in
rcl
mov
mov
lahf
and
lods
xor
inc
sarl
mov
xchg
addr16
in
xchg
mov
dec
and
sub
aas
hlt
adc
subl
sub
aam
int
shll
and
cli
push
dec
jbe
mov
push
mov
mov
out
push
hlt
cmpsb
outsb
in
xor
pop
push
xchg
xor
iret
ja
add
int
sub
lock
push
cmpsl
ret
into
sub
xor
leave
cmc
cmp
mov
out
xor
xor
push
xor
sbb
inc
fistpl
mov
dec
xchg
cli
and
sub
rol
mov
insb
outsl
ret
enter
ss
scas
cld
sar
jb
push
xchg
imul
or
inc
push
add
and
mov
bound
inc
pop
lods
loope
hlt
popa
stos
imul
adc
xchg
es
pop
dec
sub
cwtl
adc
pop
popl
lods
lea
fiadds
sub
cmp
adc
or
aad
xor
fildl
or
mov
or
fwait
in
dec
jge
sti
lds
xchg
cltd
jp
push
and
sub
push
inc
lea
and
loop
jp
adc
adc
adc
mov
insb
push
fstps
jle
test
div
loop
cmp
cli
rcrl
pop
adc
ds
inc
mov
addr16
sub
cld
out
js
pop
rcll
mov
jnp
mov
and
dec
or
in
outsb
sbb
out
add
lcall
pop
or
xor
mov
nop
sti
nop
adc
push
test
repnz
sbb
outsb
dec
inc
mov
mov
in
into
mov
jecxz
cwtl
ret
xor
dec
shll
data16
fidivrl
inc
inc
pop
cs
ret
das
fwait
mov
pusha
dec
lret
fwait
or
push
repnz
mov
xchg
or
xlat
stos
pop
clc
cld
push
jno
test
add
mov
xchg
jecxz
test
mov
ja
hlt
add
xor
push
fwait
mov
add
bound
or
sub
sbb
orb
jns
popf
icebp
scas
jae
js
xchg
insb
add
dec
cli
jo
out
aad
int
jb
mov
je
stc
mov
cmp
shrl
sbb
dec
adc
notl
shl
es
lret
enter
pop
aas
sar
sahf
scas
call
mov
adc
sub
in
adc
mov
sub
in
scas
sub
pop
add
jecxz
dec
add
jge
mov
in
leave
in
daa
mov
cltd
in
push
and
les
and
push
fidivrs
inc
in
and
and
and
mov
cmp
sub
iret
out
cmp
cmp
cli
cmpsb
cld
ret
mov
pop
mov
inc
mov
sbb
aad
mov
lret
imul
mov
add
inc
xlat
push
test
sbb
out
push
loope
cmp
test
rorb
test
in
leave
pop
xchg
fwait
dec
movsl
push
jp
mov
icebp
push
mov
inc
jg
sbb
int3
mov
mov
jmp
push
mov
testl
sbb
inc
pop
pusha
std
repnz
inc
ja
adc
shll
dec
xchg
inc
xchg
mov
es
xlat
addr16
sub
fimuls
sub
movsb
sarl
push
jbe
jmp
stos
cmp
inc
mov
arpl
mov
xchg
xchg
inc
in
mov
lcall
fstl
ficompl
mov
test
mov
or
loope
push
dec
lret
or
xor
int
xchg
je
xchg
sbb
ret
xchg
jmp
pop
xchg
add
and
dec
sahf
sti
lret
push
sbb
stos
int
pop
into
xor
sub
js
stc
popaw
add
mov
loopne
pop
out
adc
sbb
jmp
pop
jb
cwtl
jae
in
nop
xor
aam
cmp
cmp
gs
jmp
add
pop
mov
fdivrl
pop
nop
pop
xor
pop
add
push
loopne
cmp
rcrl
mov
leave
sbb
push
xor
mov
mov
inc
inc
sub
loopne
loop
into
nop
shlb
pop
add
movlps
int3
mov
push
shrl
push
aad
inc
clc
fcoml
inc
sub
pop
pushf
adc
dec
lea
test
clc
scas
sub
loop
leave
pop
jecxz
aad
sbbl
add
mov
scas
dec
inc
inc
cmp
int3
xor
xchg
insl
arpl
jle
dec
mov
dec
jecxz
popf
icebp
ljmp
jno
or
xor
or
mov
gs
rcrl
cmpsb
inc
jmp
fcomps
enter
cmp
inc
pop
pop
push
push
stc
pop
dec
dec
mov
shlb
popa
lock
movsl
test
xor
push
inc
jge
shll
add
xlat
adc
aas
mov
pop
lret
sbb
and
sbb
test
sbb
sbb
mov
out
sahf
xor
jg
jns
repz
adc
mov
adc
push
decl
or
out
imul
jo
mov
loopne
int3
lock
pop
cmp
subl
jmp
mov
push
push
call
push
jno
cld
mov
pop
dec
adc
xchg
mov
int3
dec
rclb
in
inc
jge
das
lret
enter
xor
push
mov
sbb
stc
inc
push
andb
adc
fiadds
lea
popf
or
dec
add
movsl
in
and
inc
xor
fcoml
xor
mov
jg
xchg
mov
outsb
scas
dec
jnp
ror
mov
mov
orb
jbe
leave
xchg
loope
ret
push
push
sbb
push
dec
lock
enter
and
ss
sbb
aas
js
mov
andb
ficoms
sbbb
mov
push
cmpsb
cmp
gs
mov
fldcw
sub
movsb
test
mov
xchg
imul
cmc
cld
daa
or
push
hlt
in
das
sbb
gs
or
daa
sbb
cmp
fwait
mov
jmp
inc
mov
cwtl
push
repz
stc
mov
bound
mov
lods
lods
mov
sbb
or
pop
fadds
xor
jbe
xor
pushf
cmp
mov
pop
ret
or
sbb
int3
pusha
push
jmp
aas
mov
ret
lahf
mov
sub
sub
add
and
push
mov
shl
lret
sbb
jmp
leave
dec
test
jns
xchg
dec
pusha
pmaxsw
sbb
in
jmp
jo
jg
sub
xorb
icebp
mov
dec
stc
scas
and
imul
fdivrs
pop
xchg
fistps
xchg
int3
icebp
mov
stos
scas
push
sub
lahf
lcall
push
fsubl
mov
insl
icebp
cmpsb
mov
inc
or
jb
mov
fwait
sub
icebp
lahf
insl
fcom
cmc
sub
into
jg
dec
arpl
dec
xchg
fcmovnu
inc
mov
dec
and
mov
jns
inc
out
fs
imul
or
inc
repz
dec
cmp
dec
mov
rolb
or
xchg
hlt
cmp
mov
cmp
sbb
movsl
aas
add
sbb
js
jnp
xchg
imull
fldenv
dec
mov
mov
fisttpl
fmul
adc
std
adc
sub
shlb
clc
fwait
mov
push
inc
add
xchg
lods
int3
ljmp
jg
fcomp
xor
cmp
addr16
cmp
test
andl
adc
or
cmp
cmp
pop
mov
xchg
stos
aam
in
les
and
xor
pop
xor
lock
xchg
test
fstl
mov
dec
xor
jg
add
cmpl
pop
mov
xchg
push
sub
aaa
arpl
in
test
aam
jae
std
xchg
ss
ja
rsm
stos
xor
gs
add
je
es
enter
outsl
jecxz
cmpl
cmp
lea
cwtl
adc
push
or
pusha
mov
cltd
jns
es
out
mov
rcll
and
inc
pop
and
mov
xchg
pop
leave
dec
aam
pop
push
loop
rol
dec
xor
fisubrs
mov
dec
subl
push
sar
daa
mov
scas
push
sub
test
push
insb
sub
out
jae
or
xor
push
dec
xchg
add
sub
pop
adc
in
imul
ljmp
test
into
imul
add
xor
inc
push
add
popa
js
xchg
jl
mov
test
shrb
xchg
cmp
dec
rcrb
xor
sbb
ja
jl
das
movsl
dec
xor
aad
ljmp
sbb
xchg
push
outsl
into
leave
mov
push
stos
dec
push
and
aas
popf
adc
lcall
xchg
pop
fs
jae
push
sbb
adc
imul
insb
test
in
add
mov
push
dec
andl
les
jne
insb
dec
jl
dec
and
xlat
pushf
pusha
inc
push
fsubrl
orl
xchg
rcll
dec
ret
push
mov
xchg
jno
mov
sub
mov
lds
mov
inc
push
int3
insl
shrb
popa
xchg
lcall
cmpb
and
fldt
inc
imul
test
xor
sahf
or
push
int3
sbb
mov
fcoml
into
insb
aad
into
loop
sbb
test
add
cld
lcall
bound
jns
pop
imul
jne
sub
mov
enter
mov
mov
rcll
pop
das
xor
sbb
int3
dec
jne
add
add
dec
cmp
inc
xchg
out
mov
jno
dec
xchg
dec
adc
dec
mov
mov
aaa
push
cmp
jae
xlat
push
pop
lahf
into
aam
push
test
in
out
pop
hlt
repz
cli
pop
pop
push
cmp
xchg
xchg
push
add
hlt
stos
xchg
jp
fisubrs
cmp
mulb
xchg
jb
scas
xchg
dec
scas
popf
lods
dec
xchg
test
jo
sahf
sub
add
mov
sub
bound
movsb
scas
dec
jl
les
adc
aam
ret
mov
pusha
lea
sbb
lods
ja
sbb
popa
xchg
aad
lret
lock
je
cmp
xchg
sub
jl
test
into
dec
aam
scas
dec
test
add
and
mov
xchg
cmp
jnp
repnz
xor
int
repnz
sbb
xor
xchg
lret
shl
dec
ja
lret
mov
xor
int3
mov
cmp
lds
lcall
or
out
hlt
dec
add
in
mov
add
pop
out
icebp
mov
pop
shl
jo
mov
sub
out
int
xor
or
adc
sub
hlt
popf
cmp
mov
inc
push
ret
or
shr
adc
popf
adc
jne
sub
adc
addl
cwtl
jne
out
loop
inc
cmp
fildl
cmpb
out
ret
shll
and
xor
sub
dec
rcrb
xor
aas
out
push
mov
sbb
cmp
push
and
out
add
sbb
xchg
icebp
inc
out
stos
inc
daa
inc
jmp
rclb
lock
cmp
pop
cmp
jg
orl
adc
add
popa
jg
xchg
add
xchg
jle
stc
decl
pop
jnp
ss
adc
xchg
jnp
dec
mov
inc
lcall
mov
fcmovu
test
mov
lods
dec
rolb
fnsave
lret
std
in
popa
adc
pop
push
add
fdivs
push
es
mov
pusha
add
lret
cmp
jge
testl
insb
fsubr
mov
daa
xchg
fimuls
mov
sahf
leave
cld
jb
mov
lcall
fimull
add
jbe
sahf
test
sbb
dec
pop
ljmp
sub
jecxz
push
aam
arpl
js
push
jmp
insl
out
cmp
repnz
push
loop
add
dec
fs
sti
cmp
fstpl
and
cmp
inc
xchg
push
pop
mov
les
pop
rol
inc
jno
pushf
arpl
jne
test
addb
pop
pop
mov
adc
xchg
loope
ret
dec
out
arpl
cltd
fistps
loop
jmp
xchg
pushf
sub
ficomps
divl
cmp
stos
cmp
test
cli
ja
int
inc
lahf
daa
fstpt
xchg
incl
aas
cmpsb
and
lea
popf
loop
push
je
mov
fwait
pop
jp
jbe
adc
in
inc
test
into
mov
dec
mov
xlat
pop
mov
xchg
jno
dec
push
push
pop
fidivrs
or
loope
loop
scas
pushf
cmp
into
push
jns
dec
inc
inc
mov
pop
fxch
in
dec
mov
stos
jnp
push
in
add
stos
fsin
iret
cmp
adc
sub
ds
or
inc
add
mov
pop
fisubl
or
or
jns
out
hlt
cwtl
inc
and
iret
sti
pusha
dec
clc
sub
adc
in
bnd
fistpl
aam
stos
in
mov
pop
cmp
cs
push
push
mov
iret
shlb
in
aam
outsb
or
repz
xchg
sub
iret
push
or
dec
test
fsubrl
fnstenv
cmpsb
jns
pop
inc
push
xchg
xlat
mov
sbb
out
jae
mov
fcompl
jns
int3
xor
popf
add
jl
rolb
mov
mov
mov
imul
mov
insb
out
sbb
loope
push
in
adc
sub
mov
fisttpll
loope
lock
dec
enter
pushf
gs
lods
cmp
or
mov
cwtl
test
fists
dec
icebp
je
cmp
lcall
push
enter
dec
nop
jb
test
mov
dec
mov
imul
pop
mov
push
iret
push
pop
cmp
fisttpl
rolb
cmp
xchg
je
push
incl
cli
jne
aas
cwtl
mov
xor
jb
push
lahf
imul
xchg
jecxz
ja
push
jne
icebp
push
sbb
jl
arpl
add
out
imul
call
imul
clc
out
sbb
vmovd
dec
sub
cs
popf
push
sti
test
sahf
rolb
iret
push
loope
movsb
roll
and
int3
and
in
fdivl
stos
ljmp
mov
xchg
jp
dec
mov
mov
les
push
mov
jno
xchg
lea
pop
and
fwait
mov
enter
push
outsb
lret
mov
pop
fistps
xchg
adc
xlat
mov
jb
out
test
jl
movsb
jne
ret
mov
adc
push
mov
subl
enter
mov
sub
xorb
in
jae
mov
mov
cmp
mov
ret
mov
loope
fbstp
add
add
push
adc
mov
in
rcr
aaa
push
pop
inc
mov
mov
add
sub
idivb
fiaddl
lret
fdiv
add
adc
dec
outsl
arpl
dec
fs
pop
mov
cmc
sub
sub
add
es
mov
insl
mov
outsl
arpl
repnz
mov
pop
inc
cli
jb
insb
inc
test
sub
pop
jnp
push
test
push
dec
adc
fstpl
and
jmp
loop
cltd
mov
add
cli
xchg
sbb
mov
xor
movsl
enter
mov
mov
mov
inc
scas
mov
mov
push
shll
sub
mov
mov
aam
jne
out
in
push
loope
jmp
call
ret
scas
push
mov
xor
mov
jl
dec
mov
mov
movsl
mov
and
mov
push
repz
lds
icebp
lea
jb
dec
ljmp
mov
lds
popf
scas
mov
pop
out
mov
ljmp
lods
xchg
fisubrl
std
and
mov
and
lret
ljmp
sbbl
ret
cmpsb
lret
andb
jecxz
imul
and
mov
popa
mov
push
pop
cwtl
test
push
nop
rcll
dec
push
mov
iret
imull
push
stc
and
inc
mov
or
shrb
stos
pop
and
ljmp
test
xorb
push
rol
push
inc
out
jbe
fs
jmp
cli
push
cmp
loope
adc
sbb
hlt
fistl
pushf
xor
js
inc
jge
push
xor
cmp
sub
es
mov
xchg
nop
test
mov
repnz
dec
mov
rorl
out
icebp
outsb
sub
sub
inc
cmp
lods
sbb
inc
es
xchg
out
xchg
dec
cmp
mov
addps
jmp
and
pop
xor
cmp
fs
das
sbb
es
fistl
pusha
cmpsl
sub
lret
je
pop
mov
test
outsb
imul
inc
xchg
mov
js
gs
jmp
inc
aad
mov
in
or
nop
xorl
popf
jo
fs
out
fnstsw
out
rorl
dec
and
pushf
aaa
or
mov
fsub
lds
dec
xor
cld
rclb
mov
popf
pop
push
aas
xchg
fsubrl
rcrb
xor
push
into
ss
mov
enter
dec
sbb
xlat
jge
dec
fisttps
push
sub
cld
fistpll
add
jae
cmp
inc
movb
add
shl
out
clc
ja
mov
iret
jne
push
add
mov
addr16
paddb
pop
adc
aam
and
sbb
cmp
mov
and
jb
sub
lods
mov
mov
cmp
jno
inc
xchg
and
stc
sahf
push
ds
lcall
sub
es
dec
cmp
sub
les
aad
push
adcl
jae
leave
aas
inc
jl
ljmp
lcall
sub
imul
mov
mov
leave
push
mov
mov
add
js
faddl
cmc
mov
cmpsl
outsl
mov
push
jae
mov
inc
andl
jecxz
mov
sub
int
call
mov
mov
pop
mov
xchg
jmp
loopne
pop
sbbb
xchg
inc
mov
xlat
jb
pop
sarl
sahf
cmp
push
dec
inc
lcall
pop
add
mov
mov
mov
inc
push
sti
mov
scas
dec
cmp
jnp
xor
xchg
aam
ljmp
pop
ficoml
iret
dec
into
inc
fsubl
adc
es
cli
pop
and
cmp
or
loop
pop
or
fwait
je
in
inc
fistps
sbb
mov
jecxz
in
stc
ja
jne
adc
sub
add
pop
jg
and
pop
or
shll
add
loope
push
imul
add
aad
sbb
ds
insl
mov
cmp
mov
xor
aaa
les
notb
je
repnz
xor
cmpsl
mov
or
rcrb
xor
sbb
popl
js
imul
test
mov
push
ljmp
jg
adc
icebp
les
lret
sub
add
dec
jecxz
lods
inc
jg
cmp
lret
inc
clc
in
pop
iret
sub
add
dec
jb
orb
ljmp
pusha
xchg
mov
push
in
jle
inc
inc
sub
xchg
cmp
incb
cmpsb
xchg
lods
mov
lea
cld
push
lret
ss
stos
push
int
xor
mov
iret
es
add
inc
ret
mov
leave
sti
nop
mov
mov
cld
popf
jno
rcl
inc
adc
sbb
push
xchg
or
or
scas
lret
pop
cmp
xchg
mov
jo
aas
cs
xor
xchg
stc
ror
std
fwait
icebp
jne
aad
ret
mov
jp
jae
shl
mov
or
sarl
movsl
cmpsl
xchg
sbb
jmp
bound
cmc
mov
jmp
push
xchg
add
mov
mull
jg
cmp
push
fcmovne
outsl
adc
and
cld
ficoms
push
ss
leave
cmp
aam
leave
dec
bound
push
push
testb
jl
and
and
jbe,pt
mov
cld
out
cmp
sub
imul
outsb
sbb
test
add
andb
mov
inc
sbb
push
push
jnp
movsb
xchg
jbe
jb
shrb
mov
xor
ljmp
cmpsb
add
into
xchg
jo
add
cld
pop
popf
push
cmpsb
pop
addr16
xchg
and
xchg
mov
or
mov
subl
stc
dec
out
cld
cmpsb
divb
scas
icebp
inc
out
sbb
out
mov
hlt
xor
test
fcmovne
dec
mov
jno
aas
pop
pushf
mov
in
sbb
cmp
pop
out
ror
cmp
sub
dec
ljmp
loope
in
or
push
fsubs
and
ja
adc
out
fldt
addr16
lcall
or
mov
add
in
jl
or
imul
and
sbb
repz
stc
test
sub
sub
mov
fwait
mov
add
dec
out
sahf
jns
push
lret
mov
xlat
mov
pop
mov
cltd
daa
xlat
xor
jno
icebp
push
add
add
cwtl
and
push
inc
push
aad
test
ret
cmp
mov
sub
mov
inc
mov
andl
outsl
sub
mov
les
sub
inc
push
add
fildl
push
dec
negb
movsl
or
mov
clc
dec
popl
pop
call
cmpsb
pop
dec
xchg
jb
imul
test
icebp
or
subb
jmp
popa
sub
push
out
xor
push
aam
xchg
add
push
out
movsl
dec
sub
fidivrs
dec
in
sub
cmpsb
cmp
sbb
popf
aas
push
in
shll
cli
xor
add
adc
aas
add
ret
xchg
mov
adc
mov
lret
push
fcompl
orl
add
lcall
iret
mov
cmp
add
fldcw
out
jmp
andl
repnz
cmp
icebp
xlat
sub
bound
and
jge
dec
lods
int3
xchg
sbb
push
mov
lret
push
sub
movsb
add
dec
push
add
dec
push
sub
test
fnstsw
inc
das
and
mov
loopne
insb
hlt
adc
test
jnp
xchg
daa
in
add
jo
inc
inc
mov
cmpsl
adc
push
pushf
xchg
ja
in
xchg
jb
adc
lcall
insb
inc
jl
lds
packsswb
inc
dec
loop
repz
jge
adc
xchg
pop
adc
pop
inc
inc
xor
sbb
mov
cmp
jo
cmp
das
mov
sbb
sub
imul
inc
movb
lcall
loopne
xchg
pop
cli
pop
out
sbb
xchg
rclb
pop
dec
movsb
icebp
rcr
hlt
mov
xor
mov
movsl
adc
adc
push
jle
and
out
xlat
fstpt
xchg
jl
xchg
inc
sbbl
decb
in
je
je
mov
loop
mov
fidivrs
cmpsl
lea
and
add
fimull
jns
aaa
xor
fistpl
ret
leave
mov
pop
pop
adc
push
js
and
fimuls
inc
or
pop
dec
mov
mov
leave
xchg
inc
into
inc
shl
retw
call
jg
sub
addr16
das
test
adc
inc
add
jmp
jle
mov
sarb
push
ljmp
pushf
repnz
imul
incl
out
xlat
or
je
adc
or
jo
mov
dec
xor
orl
outsb
pop
aad
sub
xor
xorl
jbe
mov
shrl
sbb
arpl
negb
clc
test
jle
sahf
ds
push
lret
pop
dec
adc
dec
popa
mov
shrb
cmpl
fsubl
dec
cmp
xlat
ss
test
pxor
insb
xor
in
loopne
hlt
cmp
fstp
mov
ljmp
dec
fnstsw
pop
sub
jmp
mov
mov
repnz
xchg
mov
popl
faddl
and
divb
push
pop
rep
adc
and
push
sub
lock
es
cmp
int3
cmp
mov
mov
lock
mov
fs
popl
push
dec
les
stc
push
adc
xchg
xor
cwtl
jo
xor
cwtl
cmp
icebp
jae
movsb
cmp
fdivl
xor
scas
mov
or
pop
lods
xor
or
pushf
pop
ja
jno
ss
lds
stc
mov
sti
push
xor
mov
inc
push
fisttps
adc
jbe
xor
xlat
shrb
bound
push
jns
lods
dec
pop
and
xchg
jne
bound
or
mov
sarl
mov
bnd
dec
sub
or
rcrb
fs
pop
pop
mov
and
enter
fists
loope
dec
stos
je
pusha
out
sar
push
inc
and
fnsave
enter
xor
lock
and
pop
sti
xor
hlt
xor
lods
cmp
movsl
adc
lret
iret
and
jae
rcrb
shl
sbb
xor
js
fstpl
shr
push
neg
xor
xor
lea
jle
cmc
vmovdqa
fst
push
ljmp
lcall
pop
push
fdivr
jne
mov
call
lods
xchg
mov
call
negb
sti
push
pop
sti
cmc
cmp
and
inc
into
sub
xor
aas
shlb
xor
xchg
shll
or
pop
aaa
orb
mov
jp
fsubrs
mov
shl
movsb
pop
data16
mov
xchg
adc
or
adc
xorb
mov
sbb
rclb
test
pop
jnp
push
add
sbb
adc
aam
test
out
push
xchg
in
inc
jae
rep
push
pop
and
out
dec
xor
gs
cmp
fsubrs
cmpsb
sbb
add
adc
or
fsubl
push
enter
les
rorb
dec
pop
imulb
int3
cmp
dec
inc
xor
sbb
xor
or
cmp
imul
incb
or
mov
mov
mov
cmp
push
aas
rcrl
lea
jl
lret
inc
out
jo
cmp
push
push
lds
les
lret
pusha
push
mov
pop
mov
xor
and
push
push
push
mov
insb
jns
rcl
cwtl
mov
mov
fisubrl
mov
add
sbb
fs
dec
mov
mov
pop
loope
mov
scas
xor
mov
jb
movsl
hlt
js
fisubl
add
sub
lahf
and
push
cld
ljmp
mov
movsb
cmpsl
shlb
and
dec
dec
ljmp
mov
popa
popa
mov
jne
mov
arpl
addr16
fnsave
pop
adc
xchg
inc
imul
cld
xor
inc
sub
dec
enter
movsb
push
cli
test
jno
scas
cmpsl
movsl
mov
nop
jg
fbstp
adc
sub
arpl
cmp
ja
stos
aam
int
push
addl
xchg
notl
xchg
lret
mov
loope
inc
or
xchg
sbb
lahf
leave
stos
and
jg
insb
ret
ret
jp
or
inc
fnstcw
add
bound
fs
lods
mov
leave
lret
test
jmp
frstor
and
loopne
nop
rclb
or
xchg
xor
dec
movsl
push
cld
fistps
xor
ljmp
cwtl
iret
cld
shll
int3
or
lret
add
sti
in
sbb
andb
sbb
cmp
cmc
fstl
outsl
mov
popf
cmp
popf
push
inc
mov
mov
fadd
mov
cmc
es
outsb
and
sarb
add
xchg
or
sbb
dec
jnp
xor
lahf
fimuls
or
cmp
outsl
and
repz
dec
inc
std
dec
out
leave
daa
adc
pusha
inc
xor
cld
subl
inc
jmp
push
pmaddwd
idivl
addb
sti
inc
out
loop
jno
aad
adc
sub
repz
xchg
xchg
push
fdivrl
pop
aad
arpl
mov
mov
out
in
push
in
int3
in
pop
popf
and
les
mov
cmp
mov
xor
arpl
scas
stos
sbb
arpl
ror
fldenv
inc
and
xchg
pop
adc
mov
call
ljmp
out
incb
insb
das
sub
mov
jg
xchg
sbb
lahf
adc
push
xchg
into
imul
or
adc
jne
add
jmp
popf
mov
xor
mov
or
lods
mov
ja
rorb
nop
outsl
movsb
push
xchg
cmp
test
xchg
insl
jno
sahf
add
push
sar
push
pop
cmpb
jmp
mov
pop
sub
aas
movsl
cmpb
sbb
mov
add
movsl
pop
pop
add
bound
scas
aas
add
pushf
sbb
add
push
inc
dec
adc
jl
mov
push
push
dec
fcomip
bound
ret
les
or
into
or
pop
mov
jb
filds
js
xor
fldt
inc
aam
popa
inc
dec
xchg
xchg
inc
roll
xchg
jle
mov
jecxz
fidivl
ret
popf
push
jae
fwait
add
pop
mov
lahf
cmp
or
push
pop
popa
add
push
in
scas
or
pop
daa
aaa
je
cmpsb
movsb
lock
add
mov
xor
jmp
ja
mov
mov
jle
xor
insb
ljmp
and
jl
fcmovnu
ret
pop
dec
int
fisttps
cld
mov
stos
push
jmp
push
mov
sub
cmp
roll
or
rclb
mov
mov
ljmp
sub
arpl
pop
into
inc
jecxz
jmp
shl
movsl
hlt
arpl
imul
mov
jecxz
scas
mov
loopne
ljmp
adc
aad
test
mov
icebp
mov
aam
inc
movb
dec
mov
ret
cmp
cs
or
jb
aaa
jle
sub
pop
push
aaa
and
filds
outsl
sub
adc
cmpsb
fdivrp
mov
add
add
aad
sub
imul
jae
push
mov
sbb
inc
push
push
push
and
faddl
jp
mov
ja
push
bound
icebp
adc
mov
inc
inc
jnp
ljmp
pop
in
mov
sub
push
inc
jle
jnp
add
add
cld
sti
cmpsl
lods
imul
sub
push
or
gs
mov
mov
shl
stos
out
jno
das
dec
cs
mov
aaa
mov
or
dec
cmp
xor
and
cmp
cs
imul
xchg
out
adc
add
ja
mov
movsb
aam
dec
xor
xor
pushf
mov
dec
loopne
loopne
js
or
add
fs
cmp
loope
pushl
mov
clc
mov
and
xchg
scas
lds
pushf
inc
insl
dec
lahf
and
and
dec
xchg
sub
pop
shll
pop
sub
pop
cltd
rcl
or
and
jmp
pop
xchg
sub
outsl
sbb
xor
cmp
sbb
mov
jo
into
inc
pop
mov
mov
xor
in
push
outsl
push
xlat
cld
repnz
push
or
dec
ljmp
jb
push
je
add
mov
popf
mov
testb
adc
push
out
lahf
lea
sbb
dec
lock
icebp
mov
ret
mov
jnp
dec
inc
inc
or
rcr
neg
sub
xchg
stos
mov
into
les
jp
pop
outsb
or
mov
cmpsb
enter
rorl
inc
mov
ret
or
inc
mov
xchg
out
sbb
inc
cmp
ds
fcmovne
xor
imul
dec
or
pop
icebp
mov
fldl
jno
aaa
aaa
fadd
dec
rcll
movsl
sbbl
xchg
loop
cld
sbb
ds
hlt
xchg
sbb
stc
mov
outsb
add
adc
stos
outsb
mov
or
adc
and
iret
not
mov
xlat
add
or
adc
das
stc
jmp
cmp
fnstenv
mov
mov
inc
add
mov
addr16
dec
addb
mov
pop
push
push
mov
mov
sarb
inc
fdivrl
adc
push
test
out
pushf
lods
pop
or
mov
pop
push
loopne
out
pop
mov
rclb
xor
push
mov
xchg
lcall
jne
shl
sub
push
xor
test
push
mov
repnz
mov
add
repnz
or
repz
inc
scas
ret
gs
or
sub
lea
lea
mov
leave
add
or
addl
jle
or
or
add
sbb
adc
inc
lret
sub
adc
inc
mov
cltd
sbb
sbb
punpckhwd
inc
es
in
push
pop
pop
out
leave
lods
or
ss
popa
test
inc
push
inc
sub
mov
xor
test
test
sbb
gs
in
pop
sbb
jmp
loope
fwait
mov
lahf
insl
xor
lea
call
xchg
int
pop
addr16
aam
in
xor
divb
loope
push
test
mov
insl
int
jmp
jecxz
ds
cmp
push
loope
stos
cmp
sbb
and
push
sahf
mov
lods
mov
outsl
lcall
scas
or
aad
mov
xorb
dec
std
adc
xor
sub
dec
and
mov
and
aad
and
xor
sbb
in
or
scas
inc
movsl
xor
call
in
jl
xor
xabort
fcompl
jle
jge
sahf
inc
push
adc
xchg
out
fcomip
jle
adc
sbb
pop
shr
dec
out
roll
popa
xchg
hlt
ret
adc
jge
movl
outsl
cmp
cli
out
stos
cmpsl
push
push
lret
ja
fnstsw
pop
mov
and
pop
or
adc
cwtl
sub
jp
fimuls
stos
mov
xor
dec
jno
stos
mov
xor
fistpll
out
xor
movsl
paddusb
je
mov
out
jbe
aas
shll
popa
add
xlat
mov
pushf
loop
add
jl
pop
xchg
sub
jbe
jle
repz
xchg
or
cmp
adc
pop
cmpsb
pop
push
inc
cmpsl
lahf
lock
or
cld
je
xor
jmp
xchg
adc
xlat
jge
movsl
adc
push
mov
adc
cmp
or
jae
pop
dec
sub
aad
or
fidivs
cmp
mov
mov
out
mov
xor
xor
cmpsl
stos
add
pop
adc
stc
stos
mov
pushf
xchg
mov
and
xorw
dec
mov
inc
cmp
fs
push
adc
jne
mov
cmpsb
jo
out
adc
and
arpl
cli
bound
push
mov
pop
mov
pushf
adc
xor
jo
xchg
test
inc
sub
dec
mov
movsl
jge
sub
xchg
fs
in
push
sbb
pop
cmp
scas
dec
inc
xor
jno
inc
adc
fmuls
jae
decb
adc
lock
fwait
adc
lea
push
fs
mov
push
daa
repnz
sbb
popf
imulb
xchg
ficompl
sbb
fadds
out
cli
cmp
enter
idivb
xchg
movsl
out
mov
dec
test
or
insl
mov
cld
or
stos
sub
popf
cs
das
mov
inc
xor
xor
scas
into
lds
jmp
gs
cmp
outsl
mov
jb
sbb
xor
in
inc
cltd
sub
fidivrs
out
hlt
and
outsl
movsb
jb
aaa
pop
add
bound
movl
push
mov
scas
xor
xor
adc
fnsave
bnd
pusha
and
int3
cmp
loop
out
pop
dec
dec
cmp
mov
subl
or
xchg
rorl
fstps
push
inc
inc
faddl
inc
or
std
push
nop
xchg
pop
pop
icebp
aas
rclb
jae
jne
sub
shll
adc
xchg
push
jge
fcoml
push
gs
or
js
std
push
lods
inc
mov
arpl
movsb
xchg
xchg
stc
dec
adc
mov
jo
pop
pop
jo
sub
push
adcb
push
cmp
pop
cli
ds
fdivrl
adc
shll
sbb
outsb
clc
pop
sbb
mov
xchg
sahf
xlat
addl
push
in
cmc
ss
xchg
adc
int
mov
fsubrp
inc
sbb
in
out
fdivrp
js
pusha
push
jbe
mov
icebp
rcr
je
push
mov
notl
lds
iret
xchg
or
fsubrl
pand
ss
mov
and
cmp
or
cmp
adc
pushf
lret
les
jbe
mov
mov
ficomps
xor
insl
mov
fsubrl
je
push
out
adc
xor
sbb
dec
jmp
add
pop
shlb
mov
inc
fs
pop
stos
lcall
xor
mov
cmpb
jne
sbb
inc
add
add
push
fnstcw
pop
negb
hlt
outsl
paddusb
in
out
adc
pop
int
dec
cmp
adcb
adc
xchg
setns
pusha
aaa
ljmp
sub
movl
sbb
ds
push
dec
xchg
push
cwtl
xor
inc
cmp
repz
add
inc
sahf
push
mov
jno
scas
cwtl
sub
add
mov
mov
into
pusha
and
lret
enter
jnp,pn
cs
sub
inc
test
wbinvd
sub
sbb
test
notl
mov
imull
daa
outsb
nop
sbb
xchg
das
xchg
or
outsb
int
mov
insl
out
dec
push
enter
adc
jmp
sbb
add
sbb
pop
sub
movsb
cmp
pop
lds
js
dec
mov
sbb
mov
aas
lock
das
mov
data16
leave
jmp
arpl
mov
loopne
or
pop
repz
in
shlb
sbb
rorl
cmpsl
inc
pop
pop
out
push
testl
movsl
lret
cli
xchg
sahf
outsb
mov
out
jbe
pop
arpl
dec
sub
push
pop
dec
or
cmpsl
popa
or
xlat
push
jne
pop
popa
imul
inc
xchg
dec
pop
xlat
daa
xchg
loopw
xorl
mov
out
adc
jne
int
enter
insb
sub
push
xchg
lret
sbbb
rcrb
test
in
xor
mov
jge
jge
data16
es
or
xchg
mov
inc
fistl
out
lret
iret
dec
fcmove
insl
leave
cmp
in
mov
dec
mov
mov
test
stc
arpl
sub
mov
movsb
sbb
jno
sbb
loopne
dec
lret
repz
mov
fs
push
adc
pop
imul
sub
mov
inc
mov
pop
ret
xor
adc
adc
xchg
loop
arpl
mulb
mov
cmp
iret
movsl
or
sbb
sub
cmp
xor
aam
sub
mov
mov
inc
push
mov
aas
in
dec
jo
cs
pop
imul
addr16
push
push
dec
xchg
push
push
pop
or
pusha
out
mov
mov
dec
les
jo
insl
dec
dec
test
testb
xchg
icebp
fwait
pop
xor
aad
push
outsb
out
ds
pop
imul
xchg
movsl
enter
adc
add
sub
int
cld
fcoms
les
mov
mov
mov
cmp
xchg
inc
fidivl
test
pop
lods
lret
mov
sub
ds
es
gs
push
icebp
in
into
fisttpl
daa
clc
hlt
jnp
pop
fstpt
or
jb
mov
or
pop
jmp
sar
movsl
cltd
inc
loope
js
xchg
in
pop
and
mov
clc
jmp
rcrb
test
pop
ljmp
in
add
sub
arpl
test
movsl
in
shr
sbbb
hlt
subb
mov
insl
scas
cmpsl
movsl
popa
shrb
xor
inc
mov
aas
shl
or
xor
daa
aas
sub
sbb
cwtl
out
loopne
or
add
add
sbb
sbb
sarb
push
jmp
stos
in
stos
mov
pop
arpl
push
popf
adc
cmp
pusha
das
enter
adc
icebp
scas
mov
pop
push
xor
jne
mov
jecxz
lods
dec
inc
iret
gs
add
jmp
cmpsb
dec
and
out
into
inc
in
xor
movhlps
sbb
add
sbb
sub
outsl
fistpl
cmc
daa
push
in
pop
fdiv
in
mov
lret
mov
aad
mov
xchg
mov
inc
sub
lock
sahf
mov
mov
sbb
jp
out
jecxz
xor
mov
or
movsb
lds
iret
fwait
inc
rcrb
imul
cmp
sbb
stos
sub
and
rolb
stc
sbb
sub
or
inc
jecxz
pop
fdivrp
movsl
ss
sub
in
pop
sahf
xchg
sbb
inc
mov
ret
dec
fcoml
pop
loopne
adcb
add
mov
jnp,pn
jge
test
adc
fidivrl
adc
dec
rolb
xchg
adc
dec
in
xchg
push
add
cli
sub
mov
xlat
add
iret
faddl
mov
push
xchg
push
push
pop
mov
dec
jbe
dec
pop
pop
jle
ret
scas
ret
ss
xchg
sub
aaa
push
xor
jae
das
out
mov
inc
lea
jae
ficoml
add
mov
lcall
fsts
shlb
rorb
stc
push
adc
push
loope
divb
cwtl
cltd
sbb
jno
stos
cmp
inc
jns
mov
adcl
mov
lods
fs
cltd
inc
and
and
rolb
push
cmp
jae
sub
sub
or
xchg
popl
shrl
xchg
sbb
mov
add
pop
fsubs
mov
xlat
fcompl
lock
push
mov
mov
mov
scas
or
push
mov
rorl
gs
jno
in
mov
stos
fs
xor
out
xchg
clc
adc
lahf
hlt
enter
inc
xchg
cmpb
sarb
push
xchg
outsl
push
ljmp
push
imulb
push
push
mov
xor
sub
cmp
aam
sbb
xor
lods
imul
sti
test
mov
mov
xchg
imul
es
xchg
or
pop
jbe
inc
add
pop
or
jb
add
movsl
mov
fdiv
popf
sti
rcrb
lahf
xlat
pusha
sbb
ja
xchg
adc
inc
xor
arpl
outsl
rep
cmp
lods
cmp
jno
pusha
mov
ret
imul
aaa
push
cltd
imul
adc
xor
xor
pushf
xchg
fimull
xchg
sahf
or
sahf
icebp
into
jae
fdivrs
dec
jb
mov
mov
mov
nop
aam
lods
int3
mov
cmp
sbb
adc
repz
xor
dec
jns
gs
push
enter
in
or
pop
or
fdivr
subb
ljmp
sub
leave
lcall
and
pop
push
sar
and
and
stc
push
cmpsl
insl
fisubrl
jmp
cmovne
and
bound
into
and
pop
cmp
sti
pop
cmp
push
sbb
int3
mov
sbb
jae
loop
inc
push
cmp
outsl
jb
jb
push
outsb
insb
pop
inc
pop
inc
ja
xor
jb
ja
popa
xor
ja
outsb
insl
insb
gs
xor
fs
inc
xor
jns
mov
mov
pop
adc
cli
cmpb
jne,pt
movsb
in
sub
test
pop
cmp
es
loope
jo
icebp
clc
test
mov
jne
cld
sahf
dec
or
add
pop
jns
cmpb
clc
icebp
sbb
dec
neg
clc
or
xchg
xchg
loopne
cmp
add
test
ss
xor
inc
loop
or
push
lock
add
lods
loop
test
imul
jae
or
and
lock
pop
jecxz
clc
scas
push
cmp
es
sub
orb
xchg
into
mov
notb
adc
mov
les
pop
inc
jp
pop
dec
cmp
pop
popa
daa
sbb
sbb
push
xor
sub
into
pop
insl
das
jecxz
jl
in
or
mov
xor
add
nop
and
xchg
cmp
or
shll
inc
xor
mov
les
mov
enter
ds
sub
mov
dec
sub
cmp
shrl
adc
outsb
and
push
add
jnp
clc
mov
cmc
jecxz
dec
cmpb
cmp
cmp
icebp
loope
popf
jecxz
rorb
into
clc
scas
fistl
pop
cmp
push
xor
inc
jb
dec
push
fs
jno
dec
xor
jne
push
inc
push
dec
jae
push
imul
push
fs
inc
dec
push
xor
xor
lods
push
rolb
je
mov
jno
je
repnz
inc
jb
sbb
out
shll
cmp
jecxz
jo
xchg
fs
mov
loope
or
pop
outsl
push
in
push
push
lahf
and
out
int3
ds
sub
mov
jl
jns
out
push
je
jecxz
xchg
jns
shlb
or
lods
inc
movaps
nop
xchg
adc
and
inc
sti
jp
lret
cmpb
adc
cmp
nop
sbb
inc
hlt
xor
lock
push
jecxz
mov
into
xor
push
mov
sbb
lret
jae
sti
xchg
sub
inc
inc
xor
inc
imul
dec
jns
inc
bound
pushw
xor
push
add
jb
add
js
inc
in
inc
mov
inc
movsl
fisubrl
and
and
js
mov
xchg
or
movsl
pop
and
or
xchg
shll
ds
adc
add
pop
jecxz
aaa
hlt
sub
sub
lds
cmp
je
sub
cltd
subl
push
cltd
pop
mov
add
shll
pop
and
aas
and
mov
push
sbb
push
lret
loope
jp
pop
scas
incl
out
gs
push
test
cmp
sti
add
test
scas
add
lret
or
sbb
sti
xchg
add
add
push
ljmp
inc
jl
mov
scas
cmp
push
cmp
xorb
xor
cmpsl
lods
mov
stos
sbb
dec
adc
enter
in
push
mov
into
xchg
push
std
popa
hlt
or
loopne
in
mov
gs
in
mov
or
cmp
fs
sub
mov
xchg
push
imul
add
adcb
js
dec
imul
sbb
aas
in
das
in
push
in
sbb
xchg
out
xor
std
jbe
flds
xchg
add
add
mov
cmp
loopne
jo
push
xor
aam
loopne
scas
in
hlt
inc
pop
add
and
push
nop
jne
pop
adc
add
and
pop
xor
dec
fxch
sbb
aas
and
dec
dec
test
or
xor
call
popf
mov
adc
lahf
sub
stos
mov
nop
pop
test
and
fcoml
jo
inc
in
jmp
sar
in
push
movsb
mov
cmp
outsl
test
bswap
bswap
adc
enter
mov
fadd
dec
jecxz
xchg
into
and
mov
imul
mov
cld
pusha
add
int
lods
sub
lds
add
inc
hlt
mov
sub
rcr
jge
aam
and
mov
and
leave
negl
out
add
outsb
xor
into
jae
pop
mov
and
xor
dec
shrb
jl
nop
cmp
pop
ret
loope
in
ds
push
dec
arpl
pusha
mov
ret
inc
jl
mov
rolb
stos
pop
pop
out
lahf
dec
add
dec
push
lea
dec
dec
sbb
mov
es
add
or
jge
out
add
cmp
leave
xchg
dec
mov
mov
jecxz
or
add
inc
sbbb
mov
rolb
and
push
shrl
adc
enter
and
cwtl
cmp
or
mov
adc
inc
ret
arpl
and
mov
pusha
and
pop
sub
xchg
cmp
xor
jecxz
fs
adc
test
push
clc
jns
or
adc
enter
mov
sbb
and
xlat
or
xor
or
mov
cmp
mov
push
sbb
popf
cmp
ret
add
push
pop
or
cs
dec
adc
mov
or
pop
and
add
xchg
push
fsqrt
inc
cmp
xchg
movsb
push
or
push
dec
push
dec
insl
push
imul
push
gs
add
fs
push
add
add
cld
or
aas
inc
sbb
add
aaa
adc
lahf
sub
inc
cwtl
xor
nop
jno
in
sbb
cmpsb
jbe
cmc
repz
push
mov
sbb
inc
jo
imul
test
or
shlb
add
popf
ss
nop
incl
clc
push
popf
sub
add
cwtl
sti
cmpsb
out
jg
inc
add
push
rcll
mov
lods
lahf
test
jne
fucomi
icebp
mov
xchg
in
mov
ret
mov
in
orl
xorl
enter
hlt
cmp
ret
jg
sbb
dec
ja
dec
bound
push
cmp
dec
dec
imul
insl
ja
dec
fs
jne
cmp
jbe
inc
xor
xor
push
inc
arpl
inc
pop
je
push
insb
jbe
push
push
add
insl
flds
sub
adc
repz
ljmp
jns,pt
add
pop
jmp
inc
in
mov
je
inc
loopne
bound
and
add
nop
dec
dec
mov
inc
loope
jb
inc
xor
mov
iret
mov
add
xor
bound
stc
mov
jo
mov
or
or
ror
test
mov
mov
mov
popa
stos
pop
fiaddl
mov
inc
xchg
mov
pushf
add
cwtl
adc
pop
mov
sti
lock
popf
jb
and
push
adc
nop
adc
dec
push
mov
lcall
outsl
dec
arpl
jo
inc
dec
insl
xor
je
bound
popa
inc
js
or
adc
cltd
adc
bound
shr
xor
loop
loopne
ret
mov
push
adc
insb
sub
lods
and
mov
int3
into
cmpsl
or
and
leave
aaa
repz
inc
cld
mov
int3
enter
or
aas
push
dec
test
mov
inc
out
std
and
or
or
jo
sbbb
enter
jle
movsl
insb
mov
jl
push
inc
icebp
mov
push
dec
mov
jae
sub
sbb
mov
adcb
lahf
pop
loopne
xchg
mov
bnd
mov
out
or
add
push
inc
push
jbe
dec
xor
jbe
dec
inc
pop
imul
xor
dec
push
inc
dec
cmp
gs
xor
arpl
dec
dec
add
addb
push
lret
mov
jmp
daa
stos
mov
jno
jle
les
xor
lea
aam
mov
insl
mov
addb
popa
bound
dec
loop
nop
pop
sbbl
shlb
inc
cmc
movsb
xor
jecxz
pop
mov
dec
andl
mov
push
adc
jno
nop
push
xor
iret
repnz
or
xorl
loop
loopne
les
cmpl
into
and
iret
dec
or
ret
adc
adc
lret
int
std
sub
xchg
add
pop
jb
jne
add
mov
sub
cs
fisubs
insl
imul
ljmp
inc
dec
bound
je
insl
jns
xor
xor
xor
xor
inc
xor
jae
jae
popa
inc
jae
addr16
add
gs
push
jg
pop
jo
cltd
cmp
cmp
jb
rolb
test
dec
movsl
pop
xchg
lds
jnp
xor
lret
test
add
jmp
pushl
jmp
das
mov
mov
cmp
jg
enter
xor
int3
mov
andb
fildl
xlat
or
or
pushw
cmp
push
sub
or
add
pop
lret
test
mov
jmp
mov
movsb
stc
testb
pop
inc
mov
lea
inc
pop
inc
ret
in
scas
ret
xor
adc
out
or
adc
test
insb
dec
gs
push
dec
dec
jbe
ja
push
jns
pop
inc
jns
add
or
push
inc
pop
inc
dec
popa
push
jae
push
dec
js
ja
xor
addr16
xor
add
dec
push
jne
dec
imul
dec
push
dec
push
dec
pop
insb
bound
xor
aaa
jno
push
imul
imul
xor
inc
xor
inc
xor
aaa
pop
ss
add
data16
inc
push
dec
insl
push
pop
inc
dec
arpl
push
xor
gs
cmp
jae
push
jns
xor
xor
push
push
inc
inc
push
dec
add
mov
jno
mov
andb
sti
mov
add
mulb
and
dec
lds
adc
pop
ret
or
mov
mov
cwtl
pop
mov
test
test
call
mov
lock
andl
mov
jbe
add
mov
add
adc
xchg
rclb
pop
jp
adc
in
enter
and
rorl
ljmp
loop
adc
cltd
and
jmp
scas
fcmovne
je
test
inc
inc
js
inc
xchg
cmp
mov
popa
push
pop
mov
aas
stos
sbb
jno
pop
mov
or
inc
add
pop
jae
inc
movsb
jbe
mov
mov
sub
jmp
adc
adc
pop
pop
in
adc
bound
lahf
adc
ret
test
xlat
arpl
pushf
ret
hlt
xor
add
push
testl
and
imul
jp
and
sbb
adc
iret
scas
and
orl
cs
dec
sub
out
iret
cmc
adc
sbb
sub
fildl
enter
pop
stos
mov
cmp
sahf
sbb
jecxz
and
call
mov
mov
cmpsb
add
inc
adc
xchg
pop
adc
fs
push
jo
scas
inc
and
and
add
adcl
in
mov
add
xlat
pop
sub
xor
pop
sbb
test
mov
jae
and
sbb
adc
pusha
mov
aad
inc
dec
mov
cwtl
sbb
push
sbb
inc
cmp
cmp
sahf
xchg
jae
aam
arpl
pushf
xchg
shr
adc
test
push
xor
lret
das
or
sbb
jmp
les
movl
or
and
in
in
aaa
and
into
subl
jmp
rcr
dec
jle
insb
test
xor
pop
jns
dec
xor
ss
inc
xor
insb
push
pop
add
push
ss
push
push
xor
dec
push
ss
sbb
mov
and
nop
mov
bound
es
mov
lods
xchg
in
mov
or
inc
pop
es
mov
or
cli
xor
jl
andb
sub
clc
jbe
inc
xchg
mov
insb
push
xor
repz
les
in
out
mov
add
jl
test
pop
fwait
sub
rcll
xor
adc
push
orb
or
mov
inc
arpl
cld
repz
test
push
cmp
add
mov
inc
jg
add
fiadds
mov
jg
icebp
xchg
imul
sbb
and
cltd
and
pop
in
mov
push
js
xor
outsb
fs
jo
jb
push
insl
inc
ja
inc
jb
gs
dec
push
jo
inc
jbe
js
xor
push
outsb
inc
jae
push
xor
add
inc
cmp
jb
pop
xor
xor
push
xor
xor
outsl
inc
add
jne
je
push
push
pop
dec
dec
gs
inc
inc
pop
jbe
xor
xor
jo
gs
imul
jo
outsb
push
xor
dec
add
das
test
arpl
xchg
push
mov
cltd
dec
fstpl
das
andl
sub
adc
enter
adc
add
cmp
xlat
jns
sbb
cmp
lea
jb
les
mov
add
jbe
ljmp
cmp
std
test
adc
call
mov
int3
test
or
dec
xchg
adc
mov
sub
jl
test
jb
add
jbe
push
jbe
outsl
cmp
push
sub
cmp
shll
pop
add
addr16
push
dec
xor
jo
arpl
push
push
dec
inc
inc
dec
jb
je
jne
push
xor
push
arpl
push
push
add
cmp
or
push
ret
xor
fnstenv
mull
pop
jb
add
mov
xchg
inc
push
mov
sarl
rcr
push
push
mov
fwait
jae
pop
je
out
cmp
orl
adc
mov
add
sub
add
mov
imul
cmove
sahf
push
test
daa
xchg
jns
cmpsl
adc
sub
sub
out
push
mov
imul
add
mov
imulb
imul
iret
mov
rcrl
sarb
inc
xchg
cwtl
cld
inc
adc
mov
inc
imul
addr16
insb
push
inc
arpl
jno
arpl
insl
fs
outsl
jne
push
push
jbe
fs
add
pop
imull
pushf
adc
pop
sarl
invd
xchg
or
out
jle
test
push
mov
push
pop
in
in
inc
inc
cmpsl
out
addr16
call
and
mov
jo
push
mov
call
repz
setne
outsb
out
ja
movsl
rclb
mov
fisubs
xchg
lock
into
mov
mov
or
cmp
pop
enter
ljmp
or
inc
mov
and
xor
sti
inc
sub
movsb
sbb
and
or
les
aaa
sub
add
mov
inc
mov
out
dec
mov
or
int3
sub
fmull
push
cmp
insl
mov
ret
mov
popf
push
add
xor
add
xlat
push
in
movsl
fnstenv
and
xor
add
pop
sub
pop
pop
lods
popa
lds
jns
push
inc
in
dec
sub
xchg
mov
pop
cmp
adc
enter
addb
nop
push
sub
pushf
pop
mov
or
mov
cwtl
dec
aad
outsl
xor
je
add
pusha
adc
mov
int3
inc
sub
pop
pop
pop
jb
mov
repz
mov
lods
xor
shll
call
xor
and
jecxz
cld
and
pop
or
adc
orb
adc
pusha
push
mov
cmp
loope
add
in
jb
inc
dec
lret
lock
xlat
lea
and
bound
mov
fiadds
sarb
sahf
mov
lea
lds
repnz
adc
cltd
xchg
push
add
cmp
adc
add
imull
add
cld
mov
cmpsl
jge
adc
xchg
fwait
cmp
mov
les
pop
iret
sbb
fcomps
push
push
add
xor
rorl
das
add
push
jmp
sbb
out
imul
inc
dec
xor
dec
inc
fs
fildl
into
xlat
mov
mov
rorb
or
lcall
sub
sbb
mov
push
ret
es
nop
mov
mov
pop
orb
dec
pushf
xor
pop
jb
xor
lahf
mov
xchg
leave
cmp
stc
das
jb
or
mov
fcmovnu
hlt
sub
cmc
or
xor
inc
mov
movsb
loopne
stos
xorb
mov
xlat
xchg
or
pop
dec
popa
or
push
and
pop
xchg
call
cmpsl
movsb
sub
mov
jmp
iret
and
shlb
orb
inc
inc
arpl
jnp
add
adc
std
or
cmp
icebp
scas
bound
movb
sarl
mov
mov
sub
cmp
into
ret
inc
mov
mov
push
cmp
jo
ror
lods
jecxz
jl
and
mulb
dec
lret
mov
jecxz
jl
vphadduwd
cmp
add
leave
shrb
fnstsw
movsb
and
popa
roll
clc
outsl
loopne
inc
xchg
imul
sbb
dec
cmp
jns
movaps
push
add
and
data16
mov
xchg
add
pop
test
leave
lret
xor
xor
or
mov
nop
cs
gs
repz
add
add
inc
sahf
and
out
jnp
sbb
and
xlat
out
and
scas
xlat
add
xchg
lret
sbb
jno
cmp
add
dec
inc
adc
out
sub
neg
and
jl
push
fwait
int3
test
xor
roll
movsl
sbb
je
or
addb
nop
jae
dec
and
pop
mov
sahf
aas
mov
pop
mov
test
adc
cmp
push
ds
mov
mov
pop
pop
pop
sbb
lcall
sub
sub
inc
bound
popa
push
ja
dec
outsb
inc
outsl
imul
je
push
jno
bound
dec
push
inc
fs
outsl
add
cltd
cmp
and
enter
test
stc
mov
pusha
xor
lods
xchg
icebp
in
cltd
dec
std
or
push
push
cmp
sahf
in
xor
cmpl
test
inc
push
pop
sub
test
sub
mov
cs
inc
sbb
pop
xchg
in
cmc
addr16
add
push
std
mov
cmp
inc
ja
adc
jnp
leave
fdivrl
xor
jle
aas
adc
dec
test
das
cmp
test
dec
jge
sbb
sbb
adc
cmp
mov
pop
test
and
sti
scas
or
cmp
or
loopne
ret
lret
pop
jo
and
scas
shl
and
out
jl
inc
mov
stos
cs
stos
and
xor
adc
call
pop
fldl
xor
xchg
lock
gs
aas
hlt
xchg
cmp
fs
jmp
inc
pushf
and
dec
and
cmp
pop
imul
pop
pop
xchg
push
mul
enter
stos
jns
hlt
cmp
sbb
loope
push
and
sbb
jg
cld
dec
adc
movsb
jb
adc
xor
sbb
mov
shl
lret
sub
popf
xchg
jmp
jne
and
test
adcb
ret
xlat
jo
xlat
or
pop
or
push
in
lcall
add
cmp
adc
jo
pop
jae
inc
fnstcw
cmc
inc
sti
and
or
ljmp
and
xlat
cltd
pop
mov
mov
aad
dec
push
xchg
cmp
add
adc
inc
mov
xlat
out
out
dec
add
add
mov
jmp
scas
jbe
jne
mov
lcall
or
adc
push
cmc
add
and
test
inc
pop
imul
push
fwait
stos
jnp
clc
mov
dec
dec
arpl
jno
push
jno
inc
inc
push
pop
inc
jb
inc
imul
lea
insl
ret
pop
cmc
ret
nop
lcall
repz
jmp
sbb
paddd
or
fnstenv
jg
incl
mov
jmp
cmc
je
jecxz
bound
shrb
xchg
test
xchg
mov
loope
add
jns
pop
test
adc
dec
aad
lcall
xor
adc
cs
sub
and
cli
mov
sbb
insl
dec
adc
stos
pusha
sbb
mov
aam
jns
repz
iret
int3
push
mov
or
push
inc
js
insl
enter
push
mov
inc
xlat
pop
leave
pop
mov
arpl
test
pop
cbtw
push
xor
pop
imul
dec
bound
push
dec
fs
insb
inc
push
jo
jae
data16
inc
push
inc
dec
fs
gs
push
outsb
dec
inc
ss
push
dec
jo
ss
jno
jae
add
ja
js
push
jo
outsl
imul
jns
jbe
push
xor
add
dec
xor
js
arpl
dec
push
popa
arpl
addr16
dec
push
inc
inc
addr16
outsb
dec
xor
jae
dec
dec
inc
dec
push
loope
push
mov
test
test
js
aas
jbe
roll
mov
xchg
xor
popf
imul
cli
mov
repz
or
jmp
in
movsl
fs
xor
dec
das
xor
cmc
test
dec
sahf
xlat
popa
inc
xchg
imul
notb
jecxz
call
xchg
cmp
jb
mov
std
adc
dec
mov
dec
inc
inc
testl
lcall
dec
movsb
pushf
and
xchg
and
add
arpl
add
test
cs
or
xchg
leave
or
push
loop
lds
and
jmp
dec
sub
dec
push
push
imul
aaa
push
dec
xor
dec
arpl
inc
arpl
xor
imul
dec
bound
add
orl
jbe
jnp
xchg
jne
push
xchg
inc
and
scas
iret
inc
loopne
fisubs
or
xor
and
je
xor
rcl
pop
and
sahf
inc
arpl
inc
jmp
pop
nop
lock
test
mov
cmpsl
jle
sahf
sub
mov
addr16
rol
inc
mov
repz
add
or
and
or
cltd
inc
inc
xchg
push
jnp
leave
or
or
sbb
jnp
pop
adc
pop
dec
addb
pop
push
xchg
daa
lds
popa
and
sub
ljmp
xchg
or
sahf
xor
sbb
inc
xchg
clc
sbb
jns
xlat
push
loopne
xchg
mov
pop
testb
push
xchg
jmp
and
je
imul
jecxz
xchg
pop
shll
xor
and
or
xor
add
push
lds
sbb
mov
push
repnz
in
leave
sbb
inc
insl
inc
sub
pop
inc
pop
and
and
ss
sub
movsl
and
std
subb
stos
inc
dec
xor
xchg
movb
xor
pusha
adcb
inc
dec
jnp
push
or
mov
test
cwtl
lahf
push
push
popf
notl
jo
push
std
pop
mov
or
cmp
in
shll
mov
and
scas
loop
push
push
mov
fmul
mov
aas
mov
pusha
insb
pop
sti
add
je
incb
cmpsb
rep
push
scas
push
xchg
add
sub
les
das
sbb
xorb
cltd
sbb
sub
jne
push
lods
pushw
lock
lret
inc
movsb
fwait
js
or
in
pop
push
mov
or
pop
roll
sub
addr16
ret
sarb
mov
adc
dec
lahf
inc
mov
adc
sub
and
daa
push
and
mov
sbb
lcall
and
sbb
push
cmp
call
fisttps
movsb
xchg
and
scas
push
sbbl
add
shlb
pushf
add
dec
aaa
scas
mov
jne
aam
xlat
in
pop
mov
scas
or
add
add
mov
lahf
inc
gs
dec
movsl
and
xchg
push
sub
xor
and
test
cmp
jle
addr16
and
add
jl
push
test
jbe
or
push
sub
je
dec
sub
shrb
and
or
data16
dec
push
imul
xchg
push
mov
jnp
mov
test
nop
ds
inc
push
icebp
xor
push
ss
jo
inc
imul
push
insb
dec
push
inc
add
add
add
adc
stos
das
out
add
and
jl
jecxz
ljmp
lods
call
jb
fadd
sub
adc
clc
in
clc
pushf
cmpsl
rolb
lea
scas
es
loop
sar
mov
jb
inc
ds
cli
sub
cmpsb
or
fadds
les
cmp
dec
add
je
adc
jl
push
jecxz
ds
jg
jg
sbb
jl
pop
push
clc
clc
nop
sbb
pop
test
iret
mov
cmpl
imull
mov
addr16
pop
icebp
inc
nop
jl
cld
pop
jne
ror
rorl
mov
pop
jmp
scas
mov
mov
mov
pop
cmpl
insl
out
movsb
cmp
popa
mov
push
xchg
bound
rorl
not
sub
pop
mov
mov
or
sub
and
lods
sbb
test
hlt
adc
dec
jne
xor
cltd
stc
aas
scas
bound
or
pop
cs
jno
rcll
pop
and
add
and
sbb
jge
dec
sub
push
cmp
cmp
jecxz
pop
sahf
push
adc
rolb
xor
mov
pop
mov
mov
cs
cmp
sahf
fs
adc
bound
fwait
push
ss
bound
inc
dec
dec
insb
jns
outsb
addr16
xor
dec
inc
gs
pop
push
pop
push
push
push
je
dec
jo
dec
add
jae
dec
inc
popa
jns
inc
dec
imul
dec
jne
insb
arpl
jne
dec
push
popa
imul
insl
js
data16
popa
push
add
mov
mov
aas
pop
inc
dec
xor
push
xchg
pop
mov
rcrl
dec
mov
in
sbb
cmp
xorb
xchg
mov
mov
and
xchg
ljmp
inc
cmp
pop
in
clc
inc
pusha
or
shrb
fs
test
push
add
xor
add
sbb
fs
push
clc
xor
fs
sbb
shll
jno
sbb
ss
out
outsb
cld
in
adc
cmpsl
sbb
pop
push
cmp
sbb
cmpsb
push
test
dec
push
adc
add
jge
test
add
test
mov
mov
rcrl
subb
add
fsubrl
pop
ss
pop
cmp
iret
xchg
pop
cmp
pop
xchg
mov
mov
add
jnp
shll
and
jl
shr
push
and
cmp
and
pushf
xchg
and
inc
xchg
push
pop
push
push
sbb
in
in
push
mov
pop
push
in
fsubs
xchg
mov
inc
test
or
data16
and
inc
das
and
daa
or
cmp
popa
adc
pop
out
and
rorl
add
xchg
lock
jl
mov
cmp
sbb
cmp
enter
jnp
dec
inc
sahf
xchg
int3
add
mov
ret
mov
jo
dec
inc
dec
dec
jb
pop
xor
push
xor
addr16
jno
dec
cmp
insb
inc
jae
js
imul
imul
imul
dec
push
xor
push
ja
push
aaa
xor
imul
adc
cmp
pop
push
lahf
jmp
cltd
xchg
mov
test
lods
or
add
sbb
and
das
xchg
adcb
or
inc
iret
sti
adc
pop
sub
clc
inc
xchg
or
mov
cmovo
xchg
mov
lds
jl
jno
sub
adc
repnz
fcoms
clc
lret
clc
sub
les
inc
popf
filds
cmc
push
or
adc
loope
cwtl
xor
pop
mov
es
hlt
xchg
pusha
sub
dec
xchg
xchg
leave
jl
loop
add
and
iret
jl
inc
ds
xchg
pop
push
dec
fisttpl
cmp
out
aas
xchg
jae
daa
testb
ss
lods
stos
call
pop
das
add
mov
or
sbb
nop
rclb
sub
push
inc
or
mov
call
cwtl
mov
jge
out
ja
shll
xor
dec
inc
pop
or
xchg
loopne
roll
lretw
adc
sahf
jmp
mov
jecxz
mov
test
sarl
xor
pop
mov
and
cmp
xchg
push
xchg
jne
aas
mov
adc
push
in
cli
mov
test
imul
test
push
aam
iret
outsl
pop
dec
jp
jmp
sub
jge
sti
gs
arpl
sti
sbb
inc
cs
aas
mov
adc
arpl
ds
sub
sbbb
sbb
inc
cmpsl
push
jae
inc
push
sbb
pusha
jecxz
xor
inc
es
aas
stos
fs
sbb
punpckhbw
fmuls
shl
jno
jne
fs
or
mov
sub
cwtl
sub
stc
mov
jae
or
cld
addr16
adc
xchg
test
lret
inc
je
cld
xchg
js
or
xchg
test
jle
fcmovnu
inc
cmp
jl
add
iret
mov
jns
lds
sti
mov
pushf
stc
dec
cld
lea
jne
xor
in
pop
push
aas
xor
or
pop
shl
jo
xor
mov
dec
jb
jge
jno
test
sarb
cmpl
adc
and
jae
pop
or
cmpsb
stc
push
adc
testl
jbe
add
loopne
test
and
mov
jl
pop
sbb
stos
lock
jl
jl
xchg
dec
dec
push
sub
mov
ja
xchg
pushaw
dec
or
in
inc
pop
cmp
test
push
mov
in
and
shlb
cmp
cmp
mov
dec
fwait
push
inc
scas
stc
inc
adc
mov
addr16
pop
rclb
cmp
cmc
cmc
cs
repnz
add
rclb
mov
les
inc
jns
lea
inc
sbb
mov
mov
notl
cmp
addb
loopne
mov
push
outsb
push
and
xchg
sub
jae
lahf
and
dec
das
int
mov
js
stos
sub
dec
and
and
popf
adc
xor
lahf
sub
mov
and
add
jo
rolb
outsb
inc
inc
sub
je
xor
nop
or
adcl
pushf
in
jmp
cmp
gs
pop
vpmacsww
fisttpll
mov
loop
repz
mov
popl
lods
insb
xor
jno
mov
inc
fs
pusha
fwait
push
cmpsb
jnp
push
pop
or
and
adc
mov
std
mov
test
xchg
dec
dec
dec
or
cmpsb
mov
out
mov
das
stos
pop
in
fs
add
lahf
push
mov
je
adc
out
xchg
out
mov
sbb
jno
cmp
inc
nop
push
jbe
popa
push
mov
aad
es
xchg
lret
or
add
jae
pop
dec
jmp
push
cmpsl
dec
rclb
xor
ja
ljmp
or
and
daa
sbb
cmc
dec
fisttps
push
jle
div
daa
add
or
enter
call
push
pop
dec
aas
popa
fs
jno
ja
jb
inc
popa
imul
dec
xor
xor
jno
inc
bound
dec
pop
fs
cmp
xor
xor
dec
add
pop
addr16
gs
jae
ss
pop
imul
inc
xor
outsb
je
dec
push
ja
jno
push
jno
jo
xor
inc
dec
cmp
xor
dec
inc
outsb
add
xchg
push
jbe,pn
mov
mov
fmull
xchg
andl
add
rcrb
daa
add
sti
imul
call
movsl
pop
fwait
dec
ds
sub
leave
xlat
add
jp
pop
ret
mov
sbbb
ds
daa
sbbb
in
popa
add
mov
and
or
mov
je
ret
jmp
mov
mov
mov
xchg
dec
mov
pop
rclb
movb
adcl
addl
lret
xlat
arpl
pop
adc
addb
insb
cmc
sbb
dec
cmp
dec
jne
dec
pop
push
addr16
push
add
mov
inc
and
addr16
sbbl
xor
inc
jp
rol
xchg
aam
inc
sbb
inc
cmp
and
adc
addr16
out
xchg
and
xor
add
dec
and
js
mov
cltd
and
jmp
andb
and
test
adcl
xor
icebp
lods
adc
adc
dec
cmp
cmp
lea
lds
lahf
movsl
out
or
cmp
mov
cld
xchg
fstl
mov
lret
fxch
jl
and
loop
ds
int3
mov
jne
mov
ljmp
sbb
cs
sbb
mov
movsl
xor
xchg
pop
mov
cmp
lret
sti
es
push
inc
mov
xchg
inc
inc
sub
fwait
call
sub
call
sbb
dec
sub
adc
je
mov
sub
mov
mov
xor
add
xchg
sub
mov
xchg
jle
cmp
in
inc
dec
stos
or
adc
cwtl
push
subl
push
test
cmpsb
adc
out
or
mov
mov
jae
movsl
es
adc
dec
test
xchg
pop
mov
pop
mov
nop
aaa
shrb
add
dec
xor
inc
ja
inc
push
jb
pop
inc
push
imul
bound
jns
push
jno
jb
jno
jb
jns
pop
push
xor
insl
stos
lods
xchg
repnz
inc
add
xchg
pop
push
out
push
xchg
test
adc
jno
dec
jne
mov
frstor
mov
inc
je
mov
stos
pop
subl
daa
scas
add
movsb
sub
orb
jecxz
xchg
out
test
mov
cld
outsl
pushf
mov
sbb
pop
sub
clc
fidivl
cmpsb
mov
inc
sub
nop
mov
mov
enter
inc
jl
jp
aaa
inc
or
pop
lods
push
addl
push
sub
sub
pushf
imul
push
nop
push
loope
imul
lret
inc
insl
clc
popa
jo
cmpsb
cmp
int
cmp
out
add
movsl
xor
inc
lds
sarb
sahf
sbbl
lods
lods
cmp
xchg
cmp
mov
inc
cli
andb
sub
pop
or
das
jecxz
inc
xor
pop
cmp
and
pop
lods
popa
aas
les
shll
sub
nop
xlat
mov
test
scas
leave
out
jmp
shll
lock
rcll
or
pushf
rcr
test
jnp
fiaddl
jo
loop
fcoml
mov
dec
das
sub
test
fwait
pop
pop
js
mov
pop
ljmp
xlat
mov
dec
fs
mov
sbb
add
mov
cltd
or
inc
adcl
add
ljmp
sub
nop
sbb
addr16
inc
push
xchg
push
sub
jle
mov
fwait
mov
into
scas
mov
aad
jo
pop
lds
ds
mov
addr16
pop
jo
adc
add
push
rcrb
aam
test
push
cmp
xchg
xchg
xchg
les
inc
lret
mov
push
inc
aaa
pushf
sbb
sub
mov
pop
sub
aad
test
aas
clc
add
or
insl
ja
dec
jne
addr16
bound
push
inc
dec
inc
dec
gs
cmp
js
dec
cmp
push
ss
push
insb
inc
ss
jae
push
push
add
in
int
lret
clc
push
xor
cmp
dec
push
or
or
mov
popf
add
mov
mov
out
ljmp
push
mov
inc
adc
fistl
cmp
les
mov
mov
xor
rorb
xchg
jne
in
cmp
fldenv
adc
out
inc
test
add
xor
out
gs
and
addr16
jb
cmp
fnstenv
inc
or
inc
int
clc
popa
cltd
xor
push
das
pop
decl
or
pop
pop
fs
and
dec
adc
aas
sbb
sub
inc
lcall
push
add
cmp
test
test
push
add
sarb
cli
dec
cmp
sahf
mov
popf
stc
inc
xlat
sub
mull
sbb
repnz
mov
pop
popf
inc
xchg
stc
dec
aas
in
pop
add
test
dec
push
in
xor
lock
cwtl
js
lcall
sub
sysenter
jno
xchg
cwtl
mov
orb
idivb
inc
cmpsl
push
lock
pop
test
pop
xchg
fmull
adc
adc
and
nop
push
mov
sub
sub
incb
mov
int3
roll
ds
push
add
icebp
or
outsb
push
jecxz
bound
adc
movsl
mov
cltd
pop
insl
mov
rcll
fnstenv
xchg
push
xchg
cmp
testb
cmpsl
adc
dec
adc
in
in
push
push
push
lds
mov
inc
icebp
pop
inc
out
mov
ficoml
inc
leave
mov
xor
cwtl
pop
adc
jno
in
push
xchg
push
xor
mov
xchg
inc
cli
mov
cmp
adc
arpl
jecxz
mov
add
shlb
in
leave
dec
loope
add
sti
mov
ljmp
je
dec
mov
icebp
push
jle
not
data16
or
push
push
inc
inc
gs
push
jae
imul
imul
add
jae
aaa
xor
dec
push
dec
inc
inc
jo
push
inc
imul
inc
dec
fs
dec
js
imul
jns
dec
dec
push
aaa
ja
add
lcall
dec
cwtl
cld
xchg
loop
inc
adc
sahf
cmp
mov
push
fstpl
mov
ljmp
xchg
pop
mov
sub
in
xor
jp
push
inc
js
cmp
ret
vunpcklpd
daa
adc
clc
inc
and
fxch
lret
xchg
sub
cwtl
adc
adc
in
test
cmp
push
or
xorb
sbb
cmp
enter
pop
test
mov
inc
add
cmp
into
nop
cmpsb
shll
jae
push
cwtl
xchg
lock
outsb
ret
inc
addb
pop
mov
push
mov
jl
mov
cwtl
sbbl
jl
sbb
test
popw
mov
sbb
xchg
shrl
cwtl
adc
int3
shll
andnps
and
inc
adc
jmp
outsb
add
lret
outsl
sub
jecxz
mov
mov
pusha
test
cmpsb
or
mov
xlat
iret
adc
popa
add
cwtl
jmp
inc
ficoml
xor
pop
xchg
sbb
or
mov
test
popf
leave
inc
inc
shlb
add
je
sub
into
dec
sub
data16
pushf
push
fcoml
dec
push
xor
push
sub
and
orl
ret
pop
jae
gs
cmp
push
xor
ss
je
inc
dec
arpl
add
or
ret
pop
xor
xor
test
add
rorl
sbb
outsb
test
dec
cltd
pop
in
fsubs
inc
push
fistpl
sbb
push
inc
push
sbb
inc
popa
test
dec
movsl
mov
dec
into
clc
xor
inc
xchg
loopne
mov
daa
es
subl
lods
inc
mov
arpl
xor
adc
movsl
fmul
sbb
std
ret
adc
mov
rclb
das
fldt
aas
add
adc
repnz
mov
mov
add
ljmp
push
loopne
std
add
or
data16
add
add
add
add
push
inc
push
fs
dec
push
arpl
inc
add
cmpsl
ljmp
aaa
popl
cld
pop
xor
jge
bound
mov
mov
push
sub
adc
movsl
pop
lds
test
cmpb
out
push
dec
pop
pop
shrb
jle
and
sub
movsb
or
or
mov
orl
outsb
inc
push
adc
popf
push
cwtl
mov
mov
push
shll
jmp
mov
push
sub
ss
xchg
xor
inc
sbb
lods
and
push
pop
loopne
push
popf
ret
insb
adc
adc
mov
mov
mov
add
mov
pop
cmp
or
pushf
jge
rorl
sbb
in
or
jb
jp
shl
les
or
push
call
ds
fwait
adcb
mov
mov
jle
pop
or
and
cmpsw
fsts
or
enter
and
push
cmpsb
roll
pop
inc
mov
sbbl
je
cld
mov
and
pop
xor
dec
inc
push
repnz
push
pop
xchg
test
sbb
movsl
fisubrl
mov
leave
xchg
mov
or
xchg
push
adc
push
in
push
subb
mov
mov
mov
outsb
dec
dec
loop
xor
pop
add
mov
inc
cld
xor
and
test
cmp
into
imul
test
sbb
test
xor
scas
add
cmpsb
inc
jle
cmp
xor
loopne
adc
cmp
push
fwait
repz
push
mov
dec
mov
push
dec
pop
enter
aad
mov
pmaddwd
xor
cwtl
les
call
xor
pop
stc
popl
jo
je
out
jecxz
cltd
inc
push
stos
push
mov
sbb
mov
dec
cld
mov
cwtl
ret
mov
push
pushf
or
pop
cmp
sub
ret
pushf
pop
push
xor
sub
jle,pt
mov
int3
fisubrs
lret
cmc
cmp
jmp
pushf
push
xchg
dec
and
jg
and
adc
lret
sub
insl
cli
ja
or
push
xchg
fcoms
inc
in
repz
jnp
and
push
push
jecxz
jns
icebp
mov
cmp
sarl
mov
lds
sub
jns
stos
ja
pop
rclb
push
pusha
mov
sbb
js
jb
add
pop
pop
data16
add
fisttps
fimull
mov
xor
mov
sbb
imul
dec
cmp
push
je
aaa
inc
push
xor
inc
dec
gs
inc
dec
gs
ss
xor
inc
xor
inc
dec
add
jecxz
jle
andb
addl
lods
aas
push
popa
dec
dec
inc
insb
and
aad
cmp
mov
add
add
pop
jae
fsubl
ret
in
pop
inc
ret
inc
cmp
or
add
hlt
xorb
sbb
pusha
pop
les
addr16
mov
add
xor
pop
push
pushf
xor
sub
push
adc
fcom
aam
mov
test
rcrb
subb
clc
push
ljmp
pop
cmpl
loop
sbb
mov
push
stc
inc
cmc
test
enter
loopne
or
push
loop
and
jo
adc
sub
dec
jns
repz
pop
inc
inc
or
movsb
xchg
pop
test
les
test
and
pop
loopne
dec
or
push
xchg
mov
lods
addl
mov
jge
je
xor
shll
push
in
scas
mov
or
test
int3
dec
dec
leave
push
dec
insb
mov
mov
test
call
push
std
sub
xor
int
mov
and
mov
or
sarl
xlat
ds
push
dec
mov
jl
loope
pop
adc
lea
repz
imul
cli
insl
dec
dec
dec
je
ss
dec
push
push
cmp
cmp
xor
je
xor
outsb
imul
xor
outsl
cmp
gs
aaa
addr16
push
dec
aaa
push
bound
inc
xor
xor
fs
data16
xor
jae
dec
jo
bound
data16
dec
imul
push
nop
xor
sub
xor
pushf
xor
pop
cltd
xorl
imul
movsl
aas
inc
test
rcll
stos
cmp
cmp
leave
iret
sub
andb
pop
scas
xchg
pop
leave
sub
lahf
clc
push
cmp
push
or
or
xor
and
js
inc
daa
adc
dec
shlb
inc
testl
xchg
xor
je
or
cmp
adc
test
cwtl
fidivrs
sub
jl
inc
inc
les
iret
icebp
notl
adc
mov
ss
mov
inc
rclb
push
xlat
mov
pop
data16
jbe
inc
inc
dec
ja
dec
cmp
inc
xor
je
arpl
dec
xor
xor
inc
jbe
popa
xchg
or
jnp
xor
aas
test
scas
test
lea
push
pop
sub
inc
push
adc
inc
rep
cs
mov
mov
add
lds
es
sbb
stos
add
push
lahf
int
movsb
ret
push
push
dec
loopne
xchg
or
and
inc
or
dec
mov
mov
push
pop
dec
lock
dec
mov
aad
ja
popf
int3
cmp
xor
and
or
cmp
and
xchg
sbb
ljmp
incl
mov
cmpb
inc
push
cwtl
dec
inc
sbb
rcrb
cmpl
adc
inc
lods
inc
test
pop
test
jecxz
js
aad
test
dec
add
dec
pop
push
pop
pop
out
imul
mov
ds
pop
repz
mov
sbb
sbb
mov
mov
out
adc
mov
aam
popa
repz
adc
sbb
xor
scas
lods
mov
xchg
lods
mov
push
dec
orl
pop
and
movsb
and
popf
pop
lret
enter
inc
or
mov
cmpsb
push
xor
pop
or
loopne
clc
out
icebp
loopne
inc
ja,pt
bound
lret
hlt
mov
mov
loopne
ss
test
or
lods
jl
enter
push
push
inc
dec
inc
dec
push
fs
xor
xor
insl
inc
popa
dec
gs
push
arpl
push
insb
xor
ss
push
push
push
js
dec
insb
dec
inc
bound
add
into
scas
aad
push
aam
adc
shl
push
push
push
arpl
in
jns
pushw
mov
out
fbld
lcall
push
movsb
add
sbb
rcrl
lock
mov
mov
push
push
sub
and
lds
xchg
test
fcmove
mov
or
test
pushl
dec
push
in
test
out
sbb
lret
push
add
or
xlat
push
mov
jns
dec
sub
inc
pop
mov
dec
mov
es
ja
xchg
out
pop
mov
push
sub
in
int
clc
lods
rorl
insb
test
bound
sub
and
mov
mov
add
mov
push
in
dec
sub
loop
lret
sub
add
dec
jmp
cmc
lret
xchg
es
mov
fists
and
adc
add
and
adc
shrd
add
xor
clc
pushf
push
not
es
xchg
popa
fwait
leave
nopl
push
lret
mov
add
dec
push
cs
inc
jne
xchg
jne
push
xchg
sbb
mov
in
push
roll
hlt
lods
push
movsb
push
inc
mov
or
jbe
setge
add
push
les
fcomps
push
shlb
mov
enter
cmp
pusha
xor
loope
inc
in
jecxz
test
push
icebp
cmp
inc
pop
leave
test
scas
cmp
xchg
push
and
cmp
sahf
fs
repnz
jb
and
data16
enter
sub
sub
mov
mov
movsl
clc
aas
and
cmp
push
dec
xchg
jp
test
xor
xor
dec
pop
and
xchg
sbb
mov
out
add
jno
jno
add
mov
insb
cmp
push
adc
dec
and
adc
cmpsb
sahf
add
mov
inc
xor
add
lret
lret
out
cmp
aas
mov
adc
das
mov
mov
std
ds
and
pop
imul
ss
call
dec
into
insb
push
push
popl
lds
push
pop
js
inc
and
jo
jg
lea
call
test
stos
mov
sti
and
jae
cmc
xor
jl
sbb
hlt
mov
mov
rclb
dec
mov
cltd
push
fisttpl
scas
jno
cmp
inc
add
inc
add
sbb
xchg
add
adc
icebp
add
mov
push
inc
xchg
testl
loop
rorl
push
inc
mov
fisubs
dec
gs
jno
push
dec
dec
dec
bound
dec
inc
bound
ja
inc
jne
inc
push
inc
inc
push
inc
xor
fs
inc
add
lea
jb,pn
les
mov
sub
mov
call
in
push
and
ds
nop
outsb
cmp
stc
pop
sub
popa
push
addr16
movsb
adc
pushf
and
scas
fsubs
adc
adc
xchg
push
jb
daa
and
shlb
xchg
jle
jecxz
scas
push
and
fwait
inc
mov
add
mov
push
pop
cmp
inc
push
bound
sbb
pop
adc
adc
jg
adc
pop
dec
js
inc
mov
fldl
jmp
cmp
sub
xchg
adc
cmp
clc
or
adc
push
and
imul
mov
movsl
add
lods
and
xlat
adc
dec
ret
cmovs
mov
cld
pop
nop
pop
or
xchg
fs
gs
clc
insl
mov
gs
sub
jp
pop
xchg
mov
movsb
cltd
out
sbb
xchg
mov
rorb
inc
mov
scas
pushf
add
adc
cmp
mov
or
add
inc
xor
lahf
rclb
xchg
mov
jle
dec
add
loope
repz
add
push
inc
lock
inc
insb
adc
push
xchg
mov
mov
ret
add
xor
xchg
or
mov
testl
cmp
cs
lds
mov
add
mov
sbb
lods
adc
push
add
mov
stos
xchg
pusha
adc
rcll
add
add
outsb
test
sbb
lock
jb
dec
push
xor
jg
pop
cli
lea
faddl
shll
aas
ds
push
popl
loop
das
mov
adc
or
andl
rol
and
push
fwait
cmp
adcb
mov
adc
pop
and
cli
sbb
inc
outsb
xchg
call
es
mov
std
xchg
inc
shl
gs
mov
mov
xor
icebp
je
inc
lods
je
xor
push
mov
dec
cmpsl
cmpb
sbb
icebp
into
icebp
lahf
jl
pop
in
push
mov
in
and
cmp
pop
clc
je
cmp
pusha
push
mov
sub
and
jl
cmp
pop
test
jo
jnp
fsubs
dec
pop
in
iret
ficoml
stc
mov
out
repnz
sbb
cmpsl
xchg
call
popa
pop
mov
sbb
rol
pop
cmp
jns
js
and
repz
xor
push
sub
or
push
fdivrs
lahf
pop
cs
shll
mov
fstpt
inc
or
pop
and
dec
leave
fiaddl
nop
jnp
mov
lcall
xor
repnz
dec
loopne
mov
sub
gs
or
cmpsl
pusha
mov
movb
sub
notb
cmc
add
push
inc
xchg
mov
inc
jbe
sub
pop
insb
push
inc
and
out
pop
shll
or
push
out
inc
sub
mov
jl
addl
dec
arpl
mov
sub
adc
pop
mov
lods
loopne
test
out
add
add
jno
xor
push
imul
xor
dec
pop
ss
bound
pop
xor
xor
bound
xor
push
imul
xor
push
push
dec
add
push
js
jne
pop
push
pop
push
cmp
jno
dec
pop
outsl
pop
dec
push
inc
jne
xor
dec
xlat
pop
repnz
or
push
mov
mov
inc
pusha
xchg
xor
cmpsb
adc
inc
push
sub
push
mov
dec
fs
mov
pop
and
add
lods
mov
lods
clc
or
pop
mov
xchg
lea
lods
bound
cmp
test
add
aas
subb
inc
jl
pushf
xchg
imul
repz
add
shlb
lret
fwait
jp
repz
fldl
ret
ss
pop
jmp
add
ds
adc
and
daa
sub
adc
xor
jo
cmpb
mov
and
mov
sbb
jnp
mov
lods
push
gs
inc
lretw
jp
inc
inc
jp
mov
xor
rclb
clc
or
lcall
mov
inc
pop
push
jo,pt
or
or
xor
pushf
arpl
inc
pop
and
popa
lea
pop
daa
or
mov
in
mov
out
adc
and
pop
ret
ds
dec
cmp
cmp
cmp
sahf
and
ficoms
rorb
sub
test
cwtl
cld
movups
inc
fistpl
sbb
add
mov
dec
pop
lods
rorb
mov
or
ljmp
cmp
outsb
push
je
inc
jae
inc
inc
push
inc
push
je
jo
cmp
inc
inc
arpl
inc
pop
dec
push
inc
jbe
dec
je
push
dec
inc
push
push
jno
add
gs
push
fs
xor
dec
jae
insb
inc
inc
inc
jns
jae
xor
push
gs
xor
dec
push
push
push
je
jb
jno
jb
dec
inc
bound
add
insb
xor
arpl
inc
push
gs
je
dec
jae
dec
dec
jae
xor
insb
add
xor
dec
jns
dec
push
data16
popa
push
insl
xor
addr16
push
outsb
push
arpl
insb
jns
dec
outsl
jbe
dec
addr16
mull
cmp
adc
sahf
sub
test
and
mov
outsl
xor
fimuls
or
push
les
orb
inc
mov
and
dec
stos
decl
xchg
mov
lea
stos
cmpsb
daa
cmp
mov
xchg
cmc
int
cmpsb
cmp
sahf
aam
xchg
adc
idivb
dec
out
sbb
and
mov
push
ret
push
and
sub
stos
xchg
pop
xlat
push
sub
mov
stos
shrl
imull
lods
jne
push
mov
lret
imul
mov
in
adc
test
in
pop
dec
rcl
push
xor
shrb
pop
insl
inc
cltd
mov
aaa
sub
or
int3
outsl
insl
into
xchg
in
dec
gs
sbb
push
icebp
dec
mov
or
repz
xchg
sbb
pop
popf
dec
ret
adc
push
and
mov
xchg
sbb
sti
push
add
push
mov
es
das
std
pop
movsl
adc
leave
ret
inc
loop
imul
orb
mov
lret
nop
mov
add
add
add
add
adcb
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
rolb
mov
add
add
add
add
add
add
add
add
incl
add
add
add
add
int3
adc
add
add
add
add
add
add
arpl
outsl
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
or
add
add
add
add
add
sub
incl
add
add
addb
push
or
xor
xor
push
add
mov
insb
incl
add
jo
push
add
add
add
push
verw
loope
add
pop
incl
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
jbe
js
push
add
aaa
add
add
js
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
popa
add
outsl
add
add
jns
jno
popa
add
add
add
and
pop
add
jne
data16
and
dec
add
imul
and
pop
add
imul
imul
je
popa
add
add
ja
popa
add
add
add
jns
jp
popa
add
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
and
push
add
jb
jns
je
jns
arpl
and
push
add
bound
jne
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
push
add
add
outsb
add
add
jae
jae
outsl
add
imul
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jne
outsb
add
push
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
imul
jp
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
