push
push
mov
push
dec
push
inc
dec
add
lea
sub
sub
inc
sub
push
mov
or
xor
or
movzwl
push
add
mov
push
movzwl
xor
push
add
add
mov
mov
mov
add
call
sub
add
mov
mov
add
jmp
push
dec
push
add
mov
sub
inc
je
add
dec
mov
mov
sub
imul
mov
inc
mov
mov
mov
lea
add
cmp
jne
or
add
inc
sub
add
lea
mov
dec
inc
lea
add
jmp
mov
push
mov
mov
add
inc
test
je
add
add
lea
sub
add
dec
add
mov
repnz
add
sub
pop
add
jmp
mov
pop
mov
add
inc
sub
and
mov
movb
mov
inc
dec
and
dec
jne
sub
pop
pop
pop
jmp
push
mov
push
mov
mov
mov
test
je
add
mov
sub
and
mov
sub
push
sub
xor
movsbl
add
mov
mov
mov
dec
je
inc
inc
xor
or
pop
mov
inc
sub
jmp
movzwl
pop
add
pop
pop
ret
ret
add
jmp
ret
mov
add
call
sub
inc
mov
mov
dec
add
add
sub
mov
or
sub
sub
sub
mov
add
dec
xor
add
mov
inc
add
dec
add
mov
add
add
inc
mov
lea
add
xor
sub
mov
mov
push
sub
push
sub
inc
mov
call
lea
add
add
add
cmp
jne
add
mov
mov
add
imul
sub
add
mov
sub
imul
add
mov
mov
add
add
sub
mov
mov
sub
imul
imul
sub
mov
sub
sub
add
mov
mov
add
sub
inc
add
mov
sub
inc
pop
ret
push
xor
xor
mov
lea
mov
dec
sub
push
add
sub
add
mov
dec
and
push
sub
push
inc
push
add
mov
push
xor
add
add
mov
call
mov
add
push
inc
add
mov
sub
mov
xor
lea
inc
mov
imul
sub
push
mov
mov
or
dec
xor
sub
mov
sub
dec
pop
dec
mov
mov
lea
test
je
add
mov
add
mov
add
push
sub
lea
push
add
jmp
push
mov
inc
sub
mov
mov
mov
push
mov
add
pop
sub
add
mov
call
mov
push
lea
add
mov
mov
mov
call
call
sub
lea
add
mov
mov
add
dec
mov
mov
mov
sub
sub
movswl
add
lea
add
sub
pop
inc
mov
call
mov
sub
push
sub
call
sub
pop
add
mov
xor
sub
add
xor
sub
add
mov
add
sub
add
pop
inc
add
pop
mov
pop
add
sub
pop
pop
pushl
push
mov
ret
push
add
push
add
mov
push
add
xor
push
xor
sub
push
lea
mov
sub
inc
push
sub
add
mov
xor
add
sub
sub
mov
inc
imul
dec
mov
mov
add
movzwl
xor
add
sub
inc
and
mov
call
lea
add
call
sub
push
movzbl
call
add
call
lea
and
sub
pop
ret
push
call
sub
add
add
mov
cmp
je
dec
add
dec
sub
mov
dec
dec
sub
sub
call
jmp
lea
dec
movzwl
sub
mov
push
mov
incl
dec
pop
xor
sub
add
mov
push
imul
sub
add
add
and
mov
mov
xor
movzbl
add
inc
add
sub
mov
and
add
add
mov
sub
mov
mov
mov
mov
imul
or
pop
dec
mov
dec
mov
movsbl
sub
nop
jne
and
mov
add
lea
sub
sub
sub
sub
mov
movswl
mov
sub
add
mov
lea
inc
add
sub
sub
mov
mov
test
jbe
dec
dec
inc
add
mov
lea
sub
push
inc
xor
add
mov
push
sub
sub
xor
add
add
pop
mov
xor
add
add
mov
add
add
movzbl
mov
add
movzwl
and
add
imul
mov
sub
mov
movzbl
inc
movsbl
mov
xor
mov
mov
mov
movzbl
sub
add
add
dec
mov
and
mov
movzbl
dec
inc
xor
xor
mov
inc
mov
pop
add
movzwl
inc
add
lea
dec
jne
add
mov
add
and
add
mov
pop
sub
pop
inc
sub
pop
mov
sub
inc
jmp
push
push
push
call
pop
pop
jmp
push
push
jmp
dec
push
add
sub
push
lea
push
inc
add
add
sub
call
mov
add
sub
xor
sub
pop
mov
pop
add
add
add
dec
add
mov
jmp
mov
pop
add
pop
jmp
push
movswl
xor
add
mov
movl
push
sub
sub
push
imul
mov
mov
push
sub
call
xor
pop
movzwl
add
pop
pop
jmp
sub
mov
mov
add
mov
xor
mov
xor
add
mov
mov
xor
sub
dec
push
add
mov
push
mov
mov
add
dec
inc
dec
add
pop
mov
pop
movsbl
imul
cmp
jne
and
push
mov
mov
mov
sub
sub
push
movsbl
mov
push
lea
xor
inc
movsbl
xor
xor
mov
xor
mov
push
movzwl
add
xor
add
mov
sub
mov
mov
sub
movzbl
add
movzwl
mov
mov
add
imul
add
inc
dec
movzbl
mov
mov
inc
sub
imul
mov
lea
inc
xor
movsbl
mov
add
add
cmp
jb
xor
sub
add
inc
dec
mov
mov
mov
dec
sub
inc
sub
dec
inc
sub
mov
mov
movzbl
xor
dec
sub
add
mov
mov
cmp
jb
movsbl
xor
xor
add
mov
lea
dec
movzwl
inc
mov
lea
inc
add
xor
dec
mov
xor
mov
pop
add
or
test
jbe
inc
mov
jmp
add
je
add
xchg
add
xchg
and
add
and
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
sub
add
add
and
add
add
add
add
add
add
data16
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
pop
and
add
add
add
add
and
add
and
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
sub
add
add
and
add
add
add
add
add
add
data16
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
pop
and
add
add
add
jb
gs
xor
cs
insb
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
cmp
fs
insb
add
inc
push
cs
dec
dec
add
gs
xor
fs
insb
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
fs
outsl
fs
add
add
imul
jae
add
push
imul
insb
insb
outsl
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
jae
popa
jb
push
inc
jb
fs
je
popa
insb
inc
add
add
push
imul
jb
imul
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
inc
imul
inc
jb
popa
je
cmp
add
inc
imul
popa
jns
inc
jb
popa
je
add
add
jne
inc
push
imul
add
inc
gs
imul
push
jo
arpl
js
add
add
popa
insb
push
outsb
insb
outsl
arpl
add
dec
inc
dec
popa
jo
je
imul
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
add
je
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
imul
gs
arpl
add
add
je
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
add
outsb
inc
imul
outsb
addr16
add
add
jb
outsb
inc
add
add
je
outsl
outsb
jae
insb
gs
imul
push
gs
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
je
je
imul
inc
add
add
je
popa
je
jbe
push
jns
je
insl
dec
outsb
outsw
add
mov
add
sbb
add
add
add
test
add
and
and
add
add
add
add
add
and
add
add
mov
add
add
add
add
and
add
add
les
add
dec
and
add
and
add
and
add
add
inc
and
add
and
add
add
add
fsubl
add
and
add
add
adc
cmp
cmp
js
sbb
arpl
adc
outsl
gs
jo
into
sar
insl
push
pushf
xchg
mov
addb
cmp
cmp
mov
sti
jbe
popf
in
jae
dec
ret
loopne
push
stos
mov
push
push
sub
femms
mov
fs
hlt
flds
call
cmp
mov
flds
sbb
mov
mov
adc
fxsave
sub
jo
mov
xor
adc
adc
cmp
cmp
dec
fnstenv
adcb
adc
cmp
cmp
mov
rcrb
ja
dec
xor
out
pop
jae
inc
jb
addb
cmp
cmp
mov
das
idivl
mov
sbb
lea
dec
jge
lods
int
adc
push
outsl
sbb
xchg
test
mov
mov
jns
addb
cmp
cmp
mov
addb
adc
cmp
cmp
jbe
std
into
xchg
adc
adc
cmp
cmp
lcall
mov
icebp
xchg
jb
adc
pushf
lcall
cltd
cmp
sub
addb
cmp
cmp
mov
add
sbb
or
adc
adc
cmp
cmp
mov
mov
lea
adc
adc
cmp
cmp
icebp
push
mov
aaa
mov
mov
cltd
ja
subl
adc
adc
cmp
cmp
mov
dec
shl
into
mov
adc
adc
cmp
cmp
scas
jecxz
fldenv
sbb
out
add
mov
lret
xchg
mov
mov
xchg
test
mov
repz
aam
mov
addb
cmp
cmp
out
addb
adc
cmp
cmp
inc
mov
faddl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
mov
jecxz
pop
mov
mov
addb
cmp
cmp
mov
cmpl
xor
outsb
cli
aad
sub
cmc
pop
mov
jmp
mov
pop
stos
sub
popf
add
outsl
std
cmp
adc
push
mov
adc
jo
add
adc
fimull
addb
cmp
cmp
mov
jge
jle
lahf
mov
addl
pop
push
sarb
jae
dec
outsl
out
fisttpl
mov
push
xor
shl
loopne
xor
push
or
sbb
sub
addb
adc
cmp
cmp
jmp
mov
popa
ss
push
mov
lds
push
cli
add
adcb
adc
cmp
cmp
mov
fidivrl
call
mov
addb
cmp
cmp
mov
popf
fsubp
sahf
aad
stos
addb
adc
cmp
cmp
ljmp
lahf
add
negb
das
dec
jmp
addb
cmp
cmp
mov
loop
push
push
addb
adc
cmp
cmp
ss
scas
mov
cmovg
jno
and
cmp
xlat
clc
add
xchg
xor
loopne
mov
jmp
push
xor
sti
mulb
and
out
lods
adc
test
mov
addb
cmp
cmp
mov
xchg
xchg
adc
adc
cmp
cmp
mov
in
ja
aaa
addb
adc
cmp
cmp
movsb
jmp
out
pop
fldcw
jo
je
addb
adc
cmp
cmp
pop
cmp
or
sbb
out
xchg
rep
pop
or
repz
addb
adc
cmp
cmp
testb
push
xchg
in
jo
cld
add
cmpsl
aas
xchg
jno
dec
lock
adc
cmp
cmp
frstor
xor
xor
sub
cltd
jge
ss
add
mov
cmp
mov
cld
addb
adc
cmp
cmp
popf
or
mov
jge
or
rcr
xchg
addb
adc
cmp
cmp
ret
sti
fidivrl
movsl
or
adc
adc
cmp
cmp
mov
je
dec
lock
cmp
pop
andl
pop
stos
insl
mov
cmp
lods
jl
pop
loopne
cld
insb
inc
mov
psubq
or
addb
cmp
cmp
mov
addb
adc
cmp
cmp
or
fcomp
inc
push
addb
adc
cmp
cmp
cli
stc
sti
notb
mov
xchg
push
mov
and
inc
dec
ljmp
sub
scas
fsubr
add
cmpsb
mov
cmpsl
nop
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
add
adc
and
jle
faddl
adc
adc
cmp
cmp
dec
scas
or
push
out
aad
sub
adc
adc
cmp
cmp
ja
iret
leave
aad
cs
lods
gs
shrl
addb
adc
cmp
cmp
jle
stos
leave
dec
inc
das
ja
push
adcb
adc
cmp
cmp
mov
sub
dec
mov
push
xor
outsl
ret
push
lods
xchg
in
shll
fistpll
sbb
insl
add
or
jge
jmp
popl
sbb
bnd
or
xor
sbb
and
addb
adc
cmp
cmp
mov
and
adcb
adc
cmp
cmp
mov
dec
add
sbb
push
cmp
pop
lret
cmp
mov
into
xchg
addb
adc
cmp
cmp
push
or
mov
addb
cmp
cmp
ret
decl
jmp
addb
cmp
cmp
mov
inc
pop
jae
into
daa
es
mov
insb
stos
fimull
dec
cmpsb
dec
call
pop
test
push
mov
dec
fstp
imul
fstpl
sub
adcb
adc
cmp
cmp
mov
pop
push
pushf
jo
mov
repz
cwtl
sbb
push
xor
push
pusha
insb
into
in
in
repnz
fisubrs
jecxz
mov
in
mov
sbb
sbb
push
sbb
inc
xchg
inc
out
xor
addb
adc
cmp
cmp
fdivrl
sbb
jnp
xor
into
jbe
aad
fiadds
fstpt
mov
jae
or
addb
cmp
cmp
mov
cmpsl
addb
adc
cmp
cmp
jecxz
fstps
lock
lret
addb
adc
cmp
cmp
pop
push
xchg
add
cmpsb
pop
loopne
std
enter
ss
inc
enter
mov
mov
addb
adc
cmp
cmp
out
pop
sbb
or
inc
cmpsb
push
or
push
sti
push
addb
adc
cmp
cmp
ja
addb
cmp
cmp
mov
lods
pop
xor
mov
push
arpl
or
jo
jbe
das
mov
rorl
sti
jecxz
mov
icebp
mov
roll
sahf
sub
sub
pop
int3
jno
mov
adc
adc
cmp
cmp
mov
fldt
adcb
adc
cmp
cmp
mov
test
rcrb
rclb
addb
adc
cmp
cmp
and
add
pop
cmpsl
leave
pop
inc
or
ds
adc
in
pop
mov
andl
sbb
adc
pop
jp
iret
or
sub
jmp
in
pop
mov
adc
adc
cmp
cmp
inc
xor
loopne
cmpsl
jmp
jg
loope
sbb
std
jne
sbb
cmp
adcb
adc
cmp
cmp
mov
fcoms
ret
dec
lahf
cmp
mov
je
mov
pop
out
adc
mov
pop
sbb
imul
addb
cmp
cmp
int3
cmpsb
or
loopne
aas
inc
xchg
mov
aam
popa
dec
jle
xor
addb
cmp
cmp
mov
xchg
jge
jle
xor
addb
adc
cmp
cmp
test
cld
lock
rolb
adc
adc
cmp
cmp
xor
sbb
addb
adc
cmp
cmp
stos
push
or
addb
adc
cmp
cmp
mov
mov
stos
addb
adc
cmp
cmp
dec
mov
addb
adc
cmp
cmp
pop
push
addb
adc
cmp
cmp
jb
iretw
or
sahf
add
push
jp
xchg
push
mov
call
xor
arpl
push
cmp
xchg
cmp
adc
adc
cmp
cmp
mov
xchg
bound
push
lods
add
in
jo
stos
jp
or
mov
pop
xor
adc
push
jg
fistpll
ljmp
or
stos
ljmp
cld
jl
outsb
jecxz
mov
adc
cli
int
sti
fidivs
lea
jmp
jnp
stc
push
aaa
dec
adc
cmp
add
or
add
addb
adc
cmp
cmp
mov
ja
and
add
xchg
stos
mov
mov
adc
adc
cmp
cmp
mov
adc
cmp
mov
lds
addr16
call
in
addb
adc
cmp
cmp
xchg
mov
xor
addb
cmp
cmp
mov
lret
addr16
pop
pop
jge
cmp
or
cmp
inc
loope
mov
pop
insb
inc
imul
mov
loope
mov
cmp
stos
xor
enter
sbb
cltd
mov
mov
das
xor
mov
repnz
dec
pop
dec
gs
frstor
xchg
stos
lods
push
call
xor
mov
addb
cmp
cmp
push
filds
adc
adc
cmp
cmp
cmpsl
fsub
pop
bound
pop
push
mov
je
cmp
cmp
rcr
mov
addb
adc
cmp
cmp
movsb
jbe
testb
addb
adc
cmp
cmp
jge
fistpl
jp
leave
addb
adc
cmp
cmp
fcoms
mov
movsb
es
or
je
addb
cmp
cmp
mov
testb
lea
outsb
cld
scas
sar
sbb
pop
lds
loope
add
popf
sub
sti
cmpsb
les
adc
adc
cmp
cmp
cmp
ret
xchg
pop
mov
xorl
jae
ret
pop
mov
sub
cmp
mov
out
jbe
or
inc
cld
and
adc
pop
sub
jno
shl
addb
adc
cmp
cmp
fists
sbb
stos
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
pusha
repz
sbb
adcb
adc
cmp
cmp
mov
push
pop
repnz
gs
cmpsl
das
out
in
stos
mov
fcomip
adc
push
out
aam
loope
in
xor
rorl
adc
adc
cmp
cmp
mov
sarb
adc
adc
cmp
cmp
mov
mov
jns
aas
and
sub
pop
push
das
test
je
fnstenv
repz
cmp
cmp
mov
sbb
adcb
adc
cmp
cmp
mov
add
mov
lock
sub
loop
subl
stos
aad
stos
sub
mov
sub
cmc
sub
adc
adc
cmp
cmp
xchg
enter
cmp
not
sahf
pop
dec
mov
and
add
clc
pop
mov
les
aas
cmp
sbb
mov
jo
roll
push
dec
addb
adc
cmp
cmp
and
shr
addb
adc
cmp
cmp
adc
push
mov
sub
sbb
mov
add
mov
hlt
test
push
cmpsl
mov
scas
jno
push
dec
bound
mov
xlat
xchg
add
jnp
faddl
or
adc
addb
adc
cmp
cmp
dec
inc
out
movsb
pop
inc
jmp
fbstp
push
in
shl
push
test
insb
push
push
outsl
xor
rcrl
adc
jmp
push
xchg
sbb
push
ficoms
rorl
pusha
ds
jecxz
inc
cmp
jl
addb
cmp
cmp
mov
xchg
sbb
addb
cmp
cmp
mov
adcl
aad
jle
sub
ja
dec
push
xchg
addb
adc
cmp
cmp
cmpl
xchg
dec
push
inc
push
cmpsl
imul
or
outsb
ficoms
dec
ja
jnp
loopne
jb
enter
pop
push
outsl
js
cmc
xchg
pop
xchg
cmovbe
cmp
out
lea
add
push
icebp
lods
pop
in
pop
in
sub
cmp
push
jb
or
fs
addb
adc
cmp
cmp
sub
cld
jl
addb
adc
cmp
cmp
add
push
mov
mov
addb
cmp
cmp
mov
pusha
addb
adc
cmp
cmp
outsb
int
and
mov
pop
jmp
orl
ret
cmc
addb
adc
cmp
cmp
fcmove
pop
pop
mov
pop
aad
stos
mov
aas
adc
xor
adcb
adc
cmp
cmp
mov
push
les
adc
adc
cmp
cmp
addb
adc
cmp
cmp
pop
push
out
mov
inc
mov
pusha
pop
xchg
mov
xchg
mov
test
adc
jno
outsl
and
addb
cmp
cmp
mov
or
xchg
out
inc
push
addb
cmp
cmp
mov
and
stos
clc
test
icebp
pop
sbb
sub
in
push
mov
adcb
adc
cmp
cmp
mov
bnd
addb
cmp
cmp
mov
in
dec
aas
cmp
dec
lahf
push
push
mov
xchg
jnp
jb
adc
adc
cmp
cmp
ficompl
cmp
push
addb
sti
mov
inc
cmp
push
xor
jge
or
push
idivb
mov
dec
pop
cmc
cs
adc
pop
xchg
out
aad
dec
pop
xor
subb
movsw
addb
adc
cmp
cmp
sti
sbb
inc
or
incb
jg
jnp
leave
outsl
add
outsl
mov
jno
leave
aas
mov
out
cli
add
test
xor
jo
xchg
ss
lods
incl
add
rolb
in
xor
hlt
adc
adc
pop
push
pop
jbe
test
xchg
mov
mov
test
sbb
xor
xchg
xor
xchg
addb
adc
cmp
cmp
fimull
mov
jns
mov
add
jae
jae
mov
loope
pop
sub
mov
test
xor
out
sbb
sub
sbb
adc
adc
cmp
cmp
arpl
push
push
cmp
rorl
or
mov
stos
enter
sub
addb
adc
cmp
cmp
inc
cld
cli
sub
enter
add
outsb
xor
cmpsl
dec
lock
pop
cli
popf
xor
xchg
mov
popa
and
addb
cmp
cmp
mov
inc
jnp
addb
cmp
cmp
mov
ja
addb
cmp
cmp
mov
mov
repnz
dec
addb
adc
cmp
cmp
dec
loopne
mov
xchg
sti
pop
mov
addb
cmp
cmp
push
nop
and
addb
adc
cmp
cmp
roll
iret
subb
loop
xchg
jne
jno
repz
ss
mov
in
stos
data16
daa
push
adcb
adc
cmp
cmp
mov
push
test
in
repz
mov
inc
and
mov
cmpsl
test
shll
lahf
out
std
addb
adc
cmp
cmp
in
sub
inc
fbstp
xchg
and
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jnp
fldcw
scas
push
int
dec
and
push
movsl
cmpsb
push
jg
xor
add
pop
and
push
lods
out
jecxz
sbb
push
in
jmp
addb
cmp
cmp
mov
call
adc
adc
cmp
cmp
mov
xchg
addb
adc
cmp
cmp
fistpll
es
lds
mov
push
jl
lods
mov
cmp
bswap
add
mov
addb
cmp
cmp
mov
fisttps
mov
scas
vsqrtpd
rcrb
mov
test
out
scas
xor
xor
jns
popf
dec
mov
shll
addb
cmp
cmp
mov
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
jle
sub
mov
in
jp
je
mov
adc
adc
cmp
cmp
js
mov
addb
cmp
cmp
addb
adc
cmp
cmp
in
aaa
addb
adc
cmp
cmp
add
inc
out
adc
movsl
les
jno
movsb
idivl
mov
jmp
push
fwait
lret
into
dec
mov
add
cmp
mov
outsl
pop
mov
addb
adc
cmp
cmp
js
loopne
popf
addr16
addb
cmp
cmp
mov
jmp
mov
mov
fmul
sahf
fisubs
mov
cmp
adcb
adc
cmp
cmp
mov
or
cmp
cmpsl
mov
adc
adc
cmp
cmp
mov
and
jge
sbb
adc
popf
dec
pop
push
test
sarb
adcb
adc
cmp
cmp
mov
adc
test
addb
cmp
cmp
inc
sub
bound
adc
adc
cmp
cmp
inc
mov
sbbb
fdivrl
in
roll
movsl
addb
adc
cmp
cmp
add
adcb
adc
cmp
cmp
mov
adc
aam
test
addb
adc
cmp
cmp
and
dec
repnz
xor
loope
shlb
clc
pop
insl
pop
arpl
enter
xor
xor
lret
push
inc
jmp
clc
je
push
mov
pop
addb
adc
cmp
cmp
push
mov
adcb
adc
cmp
cmp
mov
aam
aaa
fldl
adc
adc
cmp
cmp
xor
mov
and
pusha
ret
mov
out
test
pop
xchg
sub
adc
adc
cmp
cmp
mov
icebp
ja
in
xchg
mov
push
jmp
ret
mov
repz
pop
out
cld
xor
adc
adc
cmp
cmp
call
xlat
add
push
aad
jo
lcall
mov
into
mov
leave
int
xchg
mov
pop
addb
adc
cmp
cmp
mov
push
rorl
cmp
adc
xchg
cmp
add
scas
es
bound
xor
out
addb
cmp
cmp
mov
cmp
loop
xchg
xchg
adc
sbb
push
addb
adc
cmp
cmp
hlt
mov
add
shrb
pop
push
fisubl
int
or
cltd
xchg
js
mov
addb
adc
cmp
cmp
icebp
imul
jbe
jb
ds
adc
cmp
cmp
out
addb
cmp
cmp
mov
push
daa
xor
or
lret
jo
add
lret
sub
lods
loopne
cli
mov
addb
cmp
cmp
push
mov
adcb
adc
cmp
cmp
mov
cld
xor
cmpsb
adc
callw
add
xor
loopne
dec
addb
adc
cmp
cmp
lret
sti
mov
or
adcb
adc
cmp
cmp
mov
pop
adc
or
adc
adc
cmp
cmp
and
mov
pop
rcll
addb
adc
cmp
cmp
sub
hlt
dec
add
add
xlat
inc
into
pop
add
adc
adc
cmp
cmp
mov
aam
addb
cmp
cmp
mov
loope
in
lea
adcb
adc
cmp
cmp
mov
in
out
mov
lahf
sbb
adc
adc
cmp
cmp
mov
dec
sbb
and
pop
pop
push
jl
ret
out
jecxz
xchg
xchg
xor
push
sbb
addb
cmp
cmp
mov
sbb
ror
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
dec
incl
divb
jo
addb
adc
cmp
cmp
mov
mov
stos
cwtl
jge
lret
xor
mov
xchg
jle
xor
arpl
sbbl
xor
push
pop
sbb
inc
add
insl
enter
xchg
add
in
jo
icebp
roll
lcall
jno
jbe
insb
mov
sub
add
out
sub
pop
push
sub
and
loopne
push
xchg
fsubl
pop
mov
adcb
adc
cmp
cmp
mov
pop
out
out
pop
je
sbb
sub
inc
shr
jno
jecxz
imulb
fucom
ret
mov
addb
cmp
cmp
cmc
jnp
jne
jb
in
in
dec
mov
adcb
xor
xchg
mov
mov
ret
sub
movsb
in
das
or
addb
adc
cmp
cmp
xchg
push
imul
icebp
lret
or
adc
adc
cmp
cmp
sub
cmp
ja
and
scas
xchg
pusha
repz
outsb
ljmp
adcb
adc
cmp
cmp
mov
cli
pop
jns
cmc
cmp
cltd
and
mov
addb
adc
cmp
cmp
adc
xlat
addb
adc
cmp
cmp
lea
or
invd
insl
popa
divb
test
mov
out
or
stc
fbstp
inc
push
mov
mov
pushf
lcall
sbb
rolb
jle
sti
cmp
sbb
int3
dec
jge
or
loopne
bound
addb
adc
cmp
cmp
fsave
out
test
imul
rcl
je
lret
fnstcw
sbbb
and
mov
lods
daa
pop
jmp
dec
pop
int3
adc
cmp
pop
push
rcrl
fisttps
xchg
mov
addb
cmp
cmp
mov
sti
dec
and
sbb
and
clc
addb
adc
cmp
cmp
ret
sub
fisubs
clc
nop
scas
repz
in
add
addb
adc
cmp
cmp
mov
les
stc
mov
mov
or
sbb
test
cmp
xchg
aas
scas
roll
adc
adc
cmp
cmp
cmp
das
inc
idivl
ss
jp
call
test
pusha
mov
push
sbbl
lea
xchg
pop
stos
dec
movzbl
ds
rclb
dec
mov
push
sbb
addb
cmp
cmp
mov
or
fldt
pop
lds
mov
cmp
cmp
add
inc
addb
adc
cmp
cmp
mov
push
jb
int
xor
loop
pop
addb
adc
cmp
cmp
or
lds
mov
outsb
dec
cld
aad
cs
lea
adc
adc
cmp
cmp
outsl
loope
cmp
bound
add
dec
lods
iret
bound
stc
mov
pusha
dec
addb
adc
cmp
cmp
movsb
outsl
and
mov
add
notl
pop
clc
mov
cmc
and
cltd
sbb
fcmovnu
stos
das
dec
cs
popa
add
xchg
out
iret
jle
jno
lods
dec
jae
shlb
add
sub
stos
pop
repz
fsub
enter
clc
inc
jnp
in
adc
or
mov
scas
fstl
mov
lahf
sub
sbb
inc
fwait
addr16
int3
push
shll
pop
stos
pop
xchg
inc
sbb
jae
lock
jge
lret
jo
adc
dec
pop
shr
push
popa
pop
out
or
jo
addb
cmp
cmp
mov
lea
and
or
addb
cmp
cmp
mov
jno
adc
enter
aam
or
addb
xchg
jle
imul
addb
cmp
cmp
mov
pushf
dec
rorl
ret
addb
adc
cmp
cmp
jne
loop
out
jo
cmp
pop
iret
test
rcll
mov
or
in
test
and
scas
xchg
or
push
fsubrs
scas
or
mov
addb
cmp
cmp
mov
and
addb
cmp
cmp
xor
dec
outsb
in
jle
xchg
addb
cmp
cmp
mov
leave
incl
adc
adc
cmp
cmp
adc
add
insl
xchg
jp
addb
cmp
cmp
mov
lods
mov
push
addb
adc
cmp
cmp
faddl
into
jge
pop
mov
adc
adc
cmp
cmp
mov
dec
dec
fnsave
loope
sbb
insb
movsb
popf
push
lods
pushf
vfrczsd
cmp
jl
outsl
xchg
addb
adc
cmp
cmp
mov
dec
and
jnp
dec
or
mov
stos
xor
sbb
mov
addr16
dec
cmpsb
push
test
stos
addl
adc
cmp
cmp
mov
or
push
jns
add
xlat
jmp
sbb
subb
adcb
adc
cmp
cmp
mov
and
inc
test
fwait
test
negb
xchg
loop
mov
addb
adc
cmp
cmp
nop
or
push
pop
mov
or
addb
cmp
cmp
mov
fwait
repnz
sub
movsl
addb
adc
cmp
cmp
fstpt
je
lods
clc
addb
adc
cmp
cmp
out
mov
addb
cmp
cmp
mov
xchg
outsl
jecxz
adc
movsb
daa
jnp
in
addb
adc
cmp
cmp
aas
xchg
stc
mov
inc
xchg
xchg
xor
loopne
push
sub
out
pop
ss
push
dec
aaa
jno
addb
cmp
cmp
mov
jb
jnp
popf
addb
adc
cmp
cmp
xchg
xchg
lret
jae
jno
divl
loop
loope
out
lods
addr16
add
clc
in
repnz
test
push
or
adc
adc
cmp
cmp
ja
add
xchg
frstor
insl
add
imulb
inc
and
shl
or
adc
adc
cmp
cmp
sahf
call
mov
xor
sbb
ljmp
sub
pop
call
ror
pop
iret
scas
pop
addb
adc
cmp
cmp
addb
adc
cmp
cmp
enter
xlat
sbb
cmc
or
arpl
out
addb
cmp
cmp
mov
sub
loop
outsl
inc
fwait
adc
in
addb
mov
adc
adc
cmp
cmp
lea
in
push
popf
xor
adc
add
jnp
dec
pusha
lahf
and
jae
testl
mov
mulb
out
addb
cmp
cmp
mov
and
stc
icebp
pop
xchg
subl
arpl
pushf
ja
insl
mov
sbbl
push
cwtl
addb
adc
cmp
cmp
sub
xor
std
jl
out
aam
xor
mov
out
xor
and
addb
adc
cmp
cmp
pop
sub
into
test
jmp
add
cmp
scas
xor
push
and
inc
rep
pop
adcb
dec
dec
into
ret
xchg
addb
adc
cmp
cmp
stos
hlt
add
ret
imul
add
cmp
xchg
sahf
lds
loopne
insb
mov
testl
movsl
shrb
rclb
xlat
adc
clc
sahf
stc
xlat
addb
adc
cmp
cmp
xchg
adc
adc
cmp
cmp
lea
out
push
addb
adc
cmp
cmp
inc
or
pop
mov
addb
adc
cmp
cmp
xor
push
mov
addb
cmp
cmp
mov
xchg
mov
or
push
addb
adc
cmp
cmp
test
fsubs
stc
fiaddl
nop
imul
addb
adc
cmp
cmp
out
mov
adc
or
repz
iret
js
pushf
push
adc
scas
js
jmp
dec
mov
mov
arpl
scas
or
scas
push
cmpl
jg
jno
pop
lock
int3
fcomps
andl
adc
cmp
cmp
mov
mov
out
les
int3
das
push
cwtl
sub
out
xor
adc
adc
cmp
cmp
inc
lcall
push
inc
mov
push
xchg
add
gs
sbb
push
sub
push
sub
pop
inc
fmull
es
les
jp
dec
add
mov
cmp
mov
cwtl
outsl
addb
adc
cmp
cmp
add
aad
add
cmp
inc
mov
sub
dec
addb
adc
cmp
cmp
mov
test
aam
sbb
shr
sub
nop
or
std
push
ds
pushf
jbe
inc
repz
addb
adc
cmp
cmp
add
xor
adcb
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
inc
cli
addb
adc
cmp
cmp
push
and
push
add
mov
adc
or
ss
or
leave
pop
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
cli
fstps
rorb
push
xor
in
pushf
inc
adc
ret
cmp
cmp
loopne
sbb
cmp
mov
sub
hlt
jmp
outsl
pop
sahf
loop
push
and
scas
pushf
cmp
nop
jbe
cmp
or
stos
push
add
pop
ret
xchg
mov
pushf
adcl
aad
addb
adc
cmp
cmp
int
insl
filds
inc
cli
lds
outsb
sub
das
loop
push
pop
and
addb
cmp
cmp
mov
jl
push
and
mov
pop
loope
call
adc
adc
cmp
cmp
mov
dec
sub
dec
jo
add
push
jns
and
sbb
insl
les
les
addb
cmp
cmp
es
add
inc
mov
inc
arpl
test
cmc
mov
addb
cmp
cmp
sbb
add
test
and
mov
jmp
jmp
addb
cmp
cmp
jne
sbb
jns
jo
mov
stos
xor
push
sub
in
jecxz
shll
cmp
stc
rol
ret
or
xor
xor
pop
sbb
fcmovu
repz
push
cli
adc
in
je
out
pusha
mov
dec
lahf
jns
test
aam
xor
cmpsb
jmp
cmp
inc
dec
mov
mov
fisubrl
popa
xchg
pop
sbb
les
nop
add
cmp
addb
cmp
cmp
mov
push
rcrl
adc
addb
inc
sbb
ds
xor
arpl
lret
addb
cmp
cmp
mov
clc
enter
addb
adc
cmp
cmp
add
inc
iret
setne
mov
addb
cmp
cmp
mov
ret
flds
adc
adc
cmp
cmp
inc
mov
jl
loop
outsb
xor
cmp
xor
addb
cmp
cmp
mov
add
fwait
lret
mov
ret
stos
fnop
out
or
add
fs
mov
mov
push
inc
movsb
xor
adc
xor
in
xchg
addb
adc
cmp
cmp
inc
or
xchg
cld
testb
jne
sub
jae
push
pop
addb
adc
cmp
cmp
test
cmpsl
movsb
add
sahf
les
xor
sub
in
pop
mov
mov
cmpsb
loop
adc
push
cmc
aas
in
lahf
ficoml
cmc
cmc
out
pop
jb
inc
lahf
nopl
insl
lret
fadds
cmpsl
dec
push
dec
and
xor
adc
and
jle
cltd
std
out
cs
sbb
addb
adc
cmp
cmp
arpl
in
test
adc
daa
sub
sbb
incb
xchg
bound
mov
int3
mov
sarl
aad
arpl
fwait
jecxz
shrl
push
out
dec
addb
adc
cmp
cmp
mov
cld
addb
adc
cmp
cmp
cmp
sahf
sub
dec
rorl
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
shlb
jnp
stos
dec
fisttpll
mov
fstpl
add
inc
dec
and
adc
adc
cmp
cmp
mov
iret
dec
addb
adc
cmp
cmp
hlt
insb
mov
test
pop
cld
inc
fisttps
addb
cmp
cmp
pop
lret
addb
adc
cmp
cmp
sub
cmpsl
jnp
aam
pop
push
dec
addb
adc
cmp
cmp
jl
pusha
pop
mov
shrb
clc
or
mov
das
pop
cmp
addb
cmp
cmp
mov
sarl
mov
sub
mov
addb
cmp
cmp
mov
mov
loopne
sub
test
fs
fldcw
ljmp
add
push
adc
sarb
mov
call
xchg
cwtl
cld
add
in
jno
lods
addb
adc
cmp
cmp
fldenv
cwtl
lahf
cltd
in
arpl
idivl
xor
cmp
lea
adcb
adc
cmp
cmp
mov
icebp
fdiv
add
repz
addb
cmp
cmp
scas
mov
dec
leave
pushl
pop
pop
jmp
push
adc
push
ja
jbe
mov
cwtl
cmp
sbb
pop
or
je
repz
outsb
popa
xchg
push
addb
cmp
cmp
mov
mov
xor
sub
push
inc
jecxz
addb
cmp
cmp
mov
mov
cmp
push
adc
sbbb
inc
mov
push
fsubrs
jo
cmp
xchg
insb
dec
fcomps
jge
popf
cmpsb
cmc
dec
movsb
out
dec
int3
das
xchg
aas
add
lods
xchg
xchg
xor
iret
addb
adc
cmp
cmp
ljmp
sti
add
adc
adc
cmp
cmp
mov
daa
inc
pusha
adc
adcb
adc
cmp
cmp
mov
pop
cmpsl
andl
xchg
or
and
pop
repnz
mov
fdivl
pop
adc
in
mov
add
dec
addb
adc
cmp
cmp
leave
scas
cltd
in
and
ja
arpl
addb
adc
cmp
cmp
and
push
insl
push
or
inc
test
mov
xor
add
addb
clc
cltd
gs
cwtl
sbb
loope
inc
jbe
imul
jmp
addb
adc
cmp
cmp
lret
xchg
ja
out
mov
xchg
les
xchg
addb
adc
cmp
cmp
fidivl
sub
mov
pusha
das
cmp
sbbl
and
ljmp
jno
addb
cmp
cmp
mov
push
imul
addb
cmp
cmp
xchg
adc
addb
adc
cmp
cmp
mov
add
jl
lods
push
pmuludq
fcompl
arpl
addb
cmp
cmp
mov
jne
xchg
cmp
mov
clc
subl
addb
cmp
cmp
aad
cld
sbb
mov
and
add
dec
dec
mov
ds
sub
add
addb
cmp
cmp
mov
ret
addb
cmp
cmp
mov
sbb
je
test
and
je
xchg
sub
xor
ds
movsb
addb
adc
cmp
cmp
and
int3
aam
sti
dec
das
jmp
shrb
jnp
andb
adc
adc
cmp
cmp
adc
mov
dec
xchg
adc
int3
add
or
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
inc
add
dec
out
cmpsb
aaa
add
xor
or
addr16
fiaddl
adc
adc
cmp
cmp
movsb
aaa
mov
loope
mov
sub
adc
shrb
pop
xchg
ja
scas
fmuls
les
je
rorl
into
pop
sub
sbb
sbb
mov
push
repz
addb
cmp
cmp
jb
push
and
lahf
in
jg
jne
in
pop
stc
fildl
pop
into
fistpl
xchg
lods
cwtl
jne
arpl
les
xor
xchg
pop
movsl
pop
push
xor
pop
arpl
out
xchg
sub
fadds
cld
popa
add
lods
arpl
sbb
addb
adc
cmp
cmp
pop
sbb
imull
in
popa
popf
jno
enter
arpl
xchg
xlat
mov
mov
or
add
int3
add
out
js
fisubl
dec
maxps
es
in
xchg
push
mov
adc
adc
cmp
cmp
shl
gs
fisubs
clc
in
inc
xchg
gs
out
loope
xchg
cmp
loope
mov
push
push
sbb
push
pushf
and
inc
xor
xchg
out
in
repz
test
std
lcall
sbb
sub
fsubrl
or
js
mov
or
pop
cmpsl
loope
cmp
xchg
addb
adc
cmp
cmp
out
addb
cmp
cmp
mov
dec
mov
and
jle
push
push
aas
mov
adc
adc
cmp
cmp
mov
les
sub
mov
das
insl
arpl
adc
addb
cmp
cmp
mov
fsub
fistpl
les
pop
arpl
inc
lods
push
xor
mov
pusha
sub
fwait
lret
adc
adc
shr
adc
rolb
or
adcb
adc
cmp
cmp
mov
lods
inc
loop
inc
dec
or
bound
cmp
addb
adc
cmp
cmp
leave
adc
adcb
adc
cmp
cmp
mov
js
push
mov
fnstsw
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
cmp
pop
imul
xchg
inc
fidivl
loopne
loopne
daa
jbe
lock
pop
addb
adc
cmp
cmp
inc
lahf
addb
adc
cmp
cmp
jns
test
notl
jbe
outsb
jne
xchg
xchg
int
pop
mov
fnstcw
pushf
ud1
add
push
mov
addb
adc
cmp
cmp
pop
or
aaa
jnp
xchg
push
jmp
imul
jl
pusha
jl
addb
cmp
cmp
mov
in
addb
adc
cmp
cmp
sbb
sub
loopne
sbb
mov
mov
pop
aam
push
bound
xchg
fdiv
inc
jno
jnp
jo
addb
cmp
cmp
mov
mov
pop
mov
push
loopne
xchg
dec
in
or
cmp
daa
xchg
bound
push
nop
je
mov
out
dec
cmp
loopne
lods
shrb
into
and
add
out
addb
adc
cmp
cmp
push
fsub
inc
scas
aad
mov
orb
adc
adc
cmp
cmp
mov
inc
rclb
repz
push
sub
imul
xchg
addb
adc
cmp
cmp
cmp
adc
adc
cmp
cmp
addb
adc
cmp
cmp
outsb
insl
pop
imul
mov
add
mov
test
add
mov
addb
cmp
cmp
mov
sub
jl
iret
aam
addb
cmp
cmp
mov
pop
pop
sub
mov
adc
addb
adc
cmp
cmp
test
mov
addb
adc
cmp
cmp
mov
dec
add
addb
cmp
cmp
addb
adc
cmp
cmp
cli
jle
repz
adc
cmp
cmp
fcomip
addb
adc
cmp
cmp
mov
mov
lahf
mov
adc
cmp
adcb
adc
cmp
cmp
mov
int3
inc
pop
lea
sub
mov
adc
stos
sbb
addb
cmp
cmp
mov
adc
adc
cmp
cmp
mov
push
in
test
sub
lret
sbb
or
iret
loope
mov
ljmp
divps
cmpb
dec
addb
adc
cmp
cmp
int3
jge
imulb
jbe
mov
fisttpl
addb
cmp
cmp
push
aaa
imul
adc
adc
cmp
cmp
mov
aas
sahf
jg
mov
pop
addb
adc
cmp
cmp
andl
arpl
jge
int3
ret
xor
inc
pop
inc
inc
xor
addb
adc
cmp
cmp
addr16
mov
adc
and
movsb
sub
or
adc
adc
cmp
cmp
sub
jbe
mov
fs
mov
mulb
addb
adc
cmp
cmp
push
movsb
stc
sbb
cld
or
lods
dec
cmp
insl
addb
adc
cmp
cmp
pop
push
and
push
mov
addb
cmp
cmp
or
loopnew
add
insl
lea
inc
push
testb
ja
push
movsl
add
mov
mov
addb
cmp
cmp
mov
xorb
add
pop
js
push
mov
hlt
mov
aam
std
popa
sub
popa
push
inc
push
push
das
cli
cld
xchg
xchg
cld
adc
dec
xor
aam
push
adc
je
and
aad
or
rclb
adc
pop
aam
adc
lret
pop
xlat
outsb
dec
js
cvttps2pi
mov
push
cmpsb
xchg
jo
pop
in
sbb
addb
adc
cmp
cmp
addl
testl
adcb
adc
cmp
cmp
mov
pop
outsb
pop
dec
rcll
mov
test
pop
mov
push
jmp
xchg
shll
xchg
mov
xchg
addb
cmp
cmp
mov
fsubrp
mov
inc
call
xor
leave
addb
adc
cmp
cmp
fsub
mov
and
mov
lret
pushf
dec
ret
add
xchg
lret
add
xchg
jp
hlt
les
lret
addb
adc
cmp
cmp
rorl
ljmp
addb
cmp
cmp
out
push
stos
pushf
loopne
inc
addb
adc
cmp
cmp
sbb
das
stc
adc
cli
test
sarl
jb
or
adc
adc
cmp
cmp
mov
add
loope
inc
and
movsb
jae
addb
adc
cmp
cmp
sub
cwtl
sub
outsb
xor
sbb
jg
jge
xchg
adc
test
adcb
adc
cmp
cmp
mov
int
ljmp
addr16
lds
decb
mov
inc
pop
outsl
stos
pusha
test
stc
shrb
sbb
or
adcb
adc
cmp
cmp
mov
mov
xor
dec
and
rol
lret
jecxz
sbb
cmpsb
lods
ss
lods
jb
addb
cmp
cmp
mov
or
adc
adc
cmp
cmp
inc
inc
or
sbb
jle
xchg
push
inc
lods
les
addb
cmp
cmp
mov
cmc
inc
lods
mov
inc
mov
jns
xchg
jle
orb
cmp
jae
stc
push
dec
sbb
pop
hlt
sar
dec
repnz
aad
fisubrl
cmp
jl
mov
shrl
addb
adc
cmp
cmp
mov
push
sbb
mov
loop
fildll
cli
push
sub
iret
int3
and
addb
adc
cmp
cmp
pop
notb
dec
test
sub
inc
adc
shll
push
ds
mull
fwait
stc
int
addb
cmp
cmp
mov
loop
call
in
addb
adc
cmp
cmp
cmp
jge
xchg
movsl
jo
testb
pop
and
addb
cmp
cmp
mov
push
add
add
push
cld
dec
popf
aam
addb
cmp
cmp
mov
movsb
das
mov
test
lea
ds
icebp
sti
stos
insb
lods
inc
jbe
shrl
pushf
addb
adc
cmp
cmp
lret
pop
outsb
mov
jnp
sbb
js
xchg
and
je
mov
pop
mov
dec
mov
das
xor
pusha
sub
je
xor
mov
dec
add
adc
adc
adc
cmp
cmp
fwait
and
xlat
mov
add
aad
mov
cs
mov
int
addb
adc
cmp
cmp
jle
pop
jne
pop
adc
lret
dec
or
addb
cmp
cmp
mov
test
lret
fiaddl
adc
adc
cmp
cmp
out
add
xchg
push
pop
inc
push
fdivrl
inc
addb
adc
cmp
cmp
in
cwtl
mov
push
jnp
xlat
push
xchg
adc
sbb
adcb
adc
cmp
cmp
mov
scas
inc
in
inc
notl
mov
sbb
cmpsb
into
and
cli
stos
cmp
sbb
xchg
lahf
sahf
addb
adc
cmp
cmp
cmp
lret
xlat
test
out
mov
push
inc
add
inc
cmp
movsb
lcall
movsl
mov
jp
fcoml
xchg
popf
fldl
adc
adc
cmp
cmp
ja
xchg
cmpsl
cwtl
js
xchg
sub
lea
iret
jmp
insl
add
push
test
mov
adc
les
addb
adc
cmp
cmp
or
sahf
out
jns
movsl
or
out
jns
outsl
fcomi
rorb
mov
push
sbbl
das
jle
icebp
sub
or
lcall
xor
or
scas
jmp
dec
add
daa
pop
addb
adc
cmp
cmp
cmp
cmp
out
pop
sub
shlb
push
aaa
clc
mov
and
jp
mov
jl
pop
pushf
cmp
loope
xlat
dec
fmuls
adc
adc
cmp
cmp
mov
inc
lahf
dec
stos
addb
adc
cmp
cmp
push
push
mov
pop
ja
xchg
addb
adc
cmp
cmp
mov
mov
std
inc
loop
popf
imul
fisubl
sbb
addb
adc
cmp
cmp
push
mov
mov
fstl
xor
icebp
push
movsb
jmp
dec
mov
les
fcoml
addb
adc
cmp
cmp
pop
xor
loopne
mov
cltd
pop
jbe
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
jecxz
arpl
adc
adc
cmp
cmp
inc
jno
gs
jo
outsl
add
jns
sub
adc
addb
cmp
cmp
mov
pop
ret
jns
out
inc
loopne
adc
sbb
lea
push
push
rorb
sub
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
xor
mov
addb
cmp
cmp
mov
int3
xor
hlt
jl
jmp
test
and
mov
dec
and
adc
leave
pop
xor
mov
fistpl
adcb
adc
cmp
cmp
mov
roll
adc
adc
cmp
cmp
mov
inc
cld
sahf
stos
mov
fs
add
or
mov
inc
sub
and
call
adc
adc
cmp
cmp
mov
and
popf
mov
push
dec
in
push
int
aaa
sbb
rcrl
pop
mov
out
push
sarb
mov
enter
out
sbb
adc
and
lea
cmp
jne
mull
pushf
fdivs
cld
inc
xchg
jne
test
aam
nop
pop
insl
xor
scas
jecxz
mov
inc
add
sub
inc
lea
mov
pusha
inc
adc
fs
xor
addb
cmp
cmp
mov
fdivl
pop
callw
data16
aad
in
icebp
addb
adc
cmp
cmp
scas
stc
pushf
mov
lods
xor
es
mov
frstor
xor
arpl
mov
sbb
push
addb
adc
cmp
cmp
jbe
inc
daa
jmp
cmpsl
addb
adc
cmp
cmp
aaa
xchg
or
ljmp
xchg
cld
scas
sub
pop
jmp
fisttpll
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
jp
addb
adc
cmp
cmp
adc
hlt
sbb
orl
xchg
sbb
in
ficomps
pop
inc
in
jno
pop
dec
loop
jmp
bound
mov
iret
outsb
insl
addr16
data16
cltd
fcomi
addr16
addb
adc
cmp
cmp
imul
sbb
in
pop
lret
add
orl
adcb
adc
cmp
cmp
mov
pop
leave
cmp
pop
add
rolb
jo
lcall
push
xchg
addb
adc
cmp
cmp
jp
sub
ds
in
jne
sub
aas
ss
pusha
xchg
cmp
xor
incl
adc
adc
cmp
cmp
aam
xchg
addb
adc
cmp
cmp
cmp
and
inc
mov
sub
mov
dec
push
sbb
sbb
arpl
adc
push
xchg
dec
leave
cltd
lahf
push
popa
addb
adc
cmp
cmp
pusha
cmp
adc
addb
cmp
cmp
mov
or
xor
and
scas
inc
add
addb
adc
cmp
cmp
mov
jo
push
and
ret
outsb
lods
mov
hlt
adc
fmul
push
jo
cltd
sub
divb
icebp
fnsave
cmc
add
movnti
addb
adc
cmp
cmp
mov
js
mov
sub
dec
jmp
sbb
addb
cmp
cmp
mov
lds
addb
cmp
cmp
mov
pop
ss
ret
shlb
addb
cmp
cmp
dec
insl
add
xor
xchg
mov
divl
cmp
repnz
add
stos
cmp
mov
dec
fs
adc
cmp
cmp
ljmp
dec
xor
pop
mov
test
dec
int3
cltd
push
jl
jl
mov
adc
xor
mov
xchg
fimull
daa
std
popf
add
sbb
popa
lods
lret
mov
xchg
mov
ljmp
mov
add
xchg
nop
hlt
sub
adc
inc
push
add
lahf
daa
cmpsb
out
inc
mov
lahf
loope
test
adc
adc
cmp
cmp
mov
and
ret
shlb
sub
pop
inc
push
add
lock
in
push
int
cwtl
pop
mov
mov
test
es
pop
cmp
ljmp
repnz
pushl
and
or
add
sbb
lcall
mov
aad
call
adcb
adc
cmp
cmp
mov
mov
adc
addb
adc
cmp
cmp
out
push
lock
mov
push
fisttpl
inc
shl
mov
dec
mov
loopne
addb
adc
cmp
cmp
mov
cs
push
jl
or
inc
push
pop
into
cmp
push
jae
xchg
shl
xor
addb
cmp
cmp
mov
inc
aas
mov
aam
add
adc
adc
cmp
cmp
hlt
setle
adc
adc
cmp
cmp
mov
or
cmpsb
xchg
xchg
xlat
dec
jbe
mov
fisttpl
xor
mov
cmp
scas
clc
fsubl
cmp
inc
imul
ljmp
rolb
sub
pop
pop
test
xchg
cmpsl
pop
and
mov
das
mov
pushf
and
mov
arpl
push
inc
bound
or
movsl
inc
or
vmaxsd
adc
addb
adc
cmp
cmp
imulb
sbb
or
addb
cmp
cmp
mov
cmp
fisubrl
cwtl
or
push
addb
adc
cmp
cmp
jae
vpminub
xchg
xor
xor
ja
cmpsl
hlt
aam
push
add
scas
cmp
cmpsb
les
dec
loope
hlt
sbb
clc
scas
cld
maskmovq
sub
pop
xor
xor
add
mov
jae
mov
cmpsl
addb
adc
cmp
cmp
and
out
push
test
xor
test
ss
push
gs
xchg
movsb
aad
int3
fldl
cmpsl
mov
sti
sarl
xlat
loope
enter
or
sarl
adc
adc
cmp
cmp
mov
test
addb
adc
cmp
cmp
test
push
std
cmc
mov
fdivrs
jo
lahf
call
cmpb
clc
fs
push
jg
or
movsb
jle
test
addb
adc
cmp
cmp
cmp
adc
arpl
cmp
inc
add
inc
add
inc
sbb
pop
lret
or
mov
adcb
adc
cmp
cmp
mov
sbb
jae
lods
fs
mov
jmp
cmp
push
out
stc
jl
notb
fst
add
test
into
addb
adc
cmp
cmp
xchg
and
or
xchg
jnp
cltd
mov
lret
pop
inc
add
jo
adc
jge
addb
cmp
cmp
mov
jecxz
mov
movsb
or
lods
jns
test
std
mov
repnz
into
jo
aad
in
mov
push
daa
aas
xchg
xchg
ret
insb
cli
ljmp
addb
cmp
cmp
mov
clc
jg
push
mov
mov
jns
mov
loope
roll
imul
fidivs
jp
mov
xchg
out
jae
movsb
sub
xchg
jne
test
or
adc
adc
cmp
cmp
mov
stc
aad
ret
jp
rorb
mov
aaa
mov
xor
addb
cmp
cmp
addb
adc
cmp
cmp
xlat
out
js
stc
arpl
fwait
push
insb
add
or
xor
xor
sbb
addb
cmp
cmp
into
rcl
loope
pop
shl
das
xor
out
sti
fstpt
or
lret
jle
pop
clc
push
and
sti
dec
cwtl
jb
adc
cltd
and
cltd
mov
sahf
cwtl
orl
xor
adc
adc
cmp
cmp
mov
push
cmp
inc
adc
lods
addb
adc
cmp
cmp
xchg
jae
sbb
add
xor
mov
call
or
mov
pop
xor
addb
adc
cmp
cmp
lds
xchg
cli
mov
popf
pop
and
cld
inc
xchg
xchg
push
and
fs
and
jmp
loop
dec
es
lods
aam
outsb
lock
bound
push
rolb
notl
movsb
push
adc
and
ret
addb
cmp
cmp
xor
adc
pcmpgtb
addb
cmp
cmp
push
jecxz
dec
sbb
not
addb
adc
cmp
cmp
scas
xorl
daa
es
pushf
rcrl
xchg
ljmp
nop
adcl
adcb
adc
cmp
cmp
mov
cmpsl
negb
das
fmuls
inc
xor
adc
adc
cmp
cmp
mov
rcr
jg
mov
jecxz
mov
int
cmp
adc
sub
sbb
jmp
mov
addb
adc
cmp
cmp
push
aas
sti
arpl
sub
cmc
sbb
aam
sarb
ds
xor
mov
into
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
mov
addb
cmp
cmp
int3
push
push
aad
sub
ljmp
jno
repnz
mov
push
inc
sbb
nop
leave
clc
fwait
cmp
mov
adcb
adc
cmp
cmp
mov
and
mov
and
cld
scas
dec
lock
adc
cmp
cmp
pop
fxch
jb
jne
lods
testb
addb
cmp
cmp
into
jbe
cmpsb
sbb
mov
dec
lock
adc
cmp
cmp
sbb
mov
adcb
adc
cmp
cmp
mov
or
addb
cmp
cmp
mov
jns
addb
cmp
cmp
mov
movsl
out
add
jnp
addb
adc
cmp
cmp
rcll
xchg
addb
adc
cmp
cmp
jmp
fldcw
das
inc
and
jecxz
adc
in
or
test
es
mov
loop
addb
cmp
cmp
mov
dec
pop
std
cli
inc
xchg
es
xchg
mov
xchg
out
imul
addb
cmp
cmp
mov
dec
std
or
cli
sbb
adc
adc
cmp
cmp
mov
mov
mov
mov
loopne
dec
cmpb
pop
cmc
js
push
loopnew
dec
dec
jecxz
add
push
xor
les
mov
leave
orb
pop
pop
and
ret
xchg
addb
cmp
cmp
sub
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
out
fisttpl
scas
push
mov
das
addb
adc
cmp
cmp
mov
mov
jbe
icebp
and
adc
adc
cmp
cmp
mov
jp
inc
fdivs
mov
ror
or
adc
adc
cmp
cmp
adc
addb
cmp
cmp
mov
js
pushf
inc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
outsl
dec
arpl
mov
addb
adc
cmp
cmp
enter
cmp
sbb
pop
sub
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
xor
addb
adc
cmp
cmp
jne
clc
mov
adc
inc
arpl
int
bswap
mov
mov
outsl
lret
xor
hlt
mov
adcb
adc
cmp
cmp
mov
popa
and
outsb
lock
ss
icebp
xchg
jns
jb
add
ret
xor
outsb
mov
sub
push
sbb
xchg
into
shl
ret
sbb
jmp
cwtl
xor
test
push
dec
cmp
ljmp
cmp
leave
inc
lea
popa
jne
xchg
jmp
popa
push
mov
addb
cmp
cmp
jbe
or
and
push
repnz
or
addb
adc
cmp
cmp
icebp
pop
sar
ret
mov
xchg
and
jnp
daa
addb
adc
cmp
cmp
xor
xor
je
and
mov
ljmp
mov
push
addb
adc
cmp
cmp
jmp
ja
addb
adc
cmp
cmp
xor
jo
lds
sahf
mov
jmp
popf
add
adcb
adc
cmp
cmp
mov
sub
addb
adc
cmp
cmp
fldenv
ds
push
js
lea
rcll
jle
iret
and
adcb
adc
cmp
cmp
mov
add
mov
sti
popa
sub
nop
in
dec
test
cmp
test
fidivrl
addb
adc
cmp
cmp
inc
mov
mov
adcb
adc
cmp
cmp
mov
push
mov
scas
jge
pop
mov
dec
jne
imul
push
in
cld
cmp
mov
lahf
jg
popf
sub
dec
addb
adc
cmp
cmp
shr
mov
fwait
mov
cmp
sarb
mov
mov
or
sbb
and
xor
sbb
add
mulb
loopne
or
dec
in
cld
sbb
or
addb
cmp
cmp
cmp
scas
jnp
and
sarb
push
jb
adc
adc
cmp
cmp
dec
std
or
int3
icebp
mov
sar
addb
adc
cmp
cmp
cmpsb
inc
push
clc
pushf
fldt
mov
daa
dec
xor
mov
divl
mov
outsl
popf
ret
push
test
sub
test
inc
sub
fisttpl
pop
int
and
dec
cmp
xor
clc
testb
adc
cmp
cmp
mov
dec
out
int
jbe
bound
cmpsb
mov
adc
adc
cmp
cmp
mov
add
ja
les
addb
adc
cmp
cmp
popa
pop
jns
push
push
aam
add
sbb
scas
and
jp
fidivrl
push
hlt
enter
dec
push
mov
cmp
repnz
dec
shrl
addb
adc
cmp
cmp
gs
push
sbb
jbe
ds
mov
dec
addb
adc
cmp
cmp
leave
movsb
cli
xchg
add
pop
icebp
push
adcb
adc
cmp
cmp
mov
enter
xchg
sub
addb
adc
cmp
cmp
repnz
adcb
adc
cmp
cmp
mov
jb
mov
test
and
push
hlt
adc
mov
mov
push
loope
mov
pop
outsl
adc
add
fldl
ja
adc
adc
push
movb
adc
cmp
cmp
mov
sbb
addb
adc
cmp
cmp
into
adc
dec
and
push
xchg
fcmovnu
mov
or
sub
inc
inc
js
les
lcall
adcb
adc
cmp
cmp
mov
mov
jmp
inc
adc
add
mov
stc
aad
in
test
addb
cmp
cmp
mov
mov
gs
pop
fs
scas
cmp
adc
adc
cmp
cmp
ja
inc
adc
dec
stos
mov
addb
adc
cmp
cmp
inc
les
adc
adc
cmp
cmp
push
push
sarl
imul
adc
adc
cmp
cmp
mov
pushf
cmp
imul
pop
out
leave
rcrl
cmpsl
cmp
mov
or
pop
aam
adc
sub
adcb
adc
cmp
cmp
mov
idivl
xchg
fistpl
out
jnp
fidivrs
adcb
adc
cmp
cmp
mov
jecxz
pop
xor
and
insl
rolb
sbb
ja
pop
pop
das
mov
test
xchg
sbb
in
fldt
xchg
in
js
addb
cmp
cmp
mov
or
fidivrl
inc
scas
jmp
cmp
js
push
adcb
adc
cmp
cmp
mov
mov
sub
add
stos
ds
mov
adc
adc
cmp
cmp
mov
jp
mov
cwtl
add
push
ret
mov
pop
mov
cmp
jecxz
ljmp
hlt
or
and
xchg
inc
clc
les
fidivl
test
add
aas
imul
pushf
cmp
es
addb
adc
cmp
cmp
push
stc
out
gs
cli
jnp
xor
leave
dec
je
jecxz
mov
or
xor
xchg
icebp
jnp
das
repz
adc
addb
adc
cmp
cmp
shl
mov
dec
addb
adc
cmp
cmp
hlt
push
sahf
mov
add
xor
out
ljmp
das
in
out
adc
leave
test
sub
inc
fsubrl
inc
filds
adc
adc
cmp
cmp
cmp
xchg
and
sbb
jle
mov
sub
test
fldenv
adc
adc
cmp
cmp
mov
test
addb
cmp
cmp
addb
adc
cmp
cmp
add
push
pop
add
cmpsl
sbb
and
les
adc
adc
cmp
cmp
popa
into
and
sbbl
bound
push
jl
insb
push
shrl
push
fiadds
mov
addb
cmp
cmp
mov
sahf
pusha
sub
addb
adc
cmp
cmp
inc
sbb
sbb
dec
cld
mov
daa
mov
mov
addb
cmp
cmp
mov
dec
testb
push
inc
lds
lret
lods
dec
sbb
ror
sub
sahf
out
cwtl
out
fidivl
testb
das
add
mov
fdivrs
jge
inc
mov
sti
adc
adc
adc
cmp
cmp
mov
push
cmp
pusha
enter
test
adc
adc
cmp
cmp
xor
jb
pusha
int
or
clc
sub
enter
fistl
mov
fimull
cli
adc
push
pop
lea
into
int3
mov
addb
adc
cmp
cmp
push
dec
add
int3
adc
lods
xchg
test
or
mov
xchg
in
sub
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
jns
lds
sub
pop
out
inc
push
adcl
addb
cmp
cmp
jbe
push
push
dec
sbb
push
or
cmpl
xor
fildll
xchg
lcall
adc
adc
cmp
cmp
mov
xchg
fcompl
ljmp
addb
cmp
cmp
mov
mov
add
adc
adc
cmp
cmp
addb
adc
cmp
cmp
dec
pop
cli
orl
inc
repz
xlat
lea
icebp
inc
mov
out
push
push
in
push
sti
jecxz
sbb
add
icebp
cmp
loope
mov
pusha
pop
pop
mov
addb
cmp
cmp
mov
xchg
mov
and
or
testl
push
mov
pop
mov
adcb
adc
cmp
cmp
mov
adc
push
fsubrs
inc
sbb
mov
cmp
loope
cs
or
fldl
subl
addb
cmp
cmp
mov
in
xor
mov
addb
adc
cmp
cmp
inc
ret
pop
bound
jecxz
dec
push
ljmp
mov
negb
xor
shrb
ret
sbb
jbe
out
popa
sub
testb
movsb
jecxz
loop
popa
movsb
fnstcw
push
jns
stos
shll
pop
pop
addb
adc
cmp
cmp
loope
mov
xchg
test
adc
adc
cmp
cmp
inc
test
inc
std
sbb
aaa
into
test
arpl
dec
test
fcmovnb
addb
adc
cmp
cmp
inc
inc
je
cmp
jg
in
in
cltd
add
jns
mov
pop
packsswb
pop
xchg
es
daa
dec
jp
addb
adc
cmp
cmp
test
imul
adcb
adc
cmp
cmp
mov
push
adc
adc
cmp
cmp
mov
pop
cs
pop
cmp
jbe
ljmp
adc
mov
or
adc
adc
cmp
cmp
mov
sbb
sub
loopne
mov
imul
add
mov
adc
hlt
inc
mov
fdivrl
addr16
fucom
addb
adc
cmp
cmp
hlt
roll
adc
cmp
cmp
mov
les
dec
inc
repz
adc
adc
adc
cmp
cmp
inc
lods
addr16
mov
out
aam
xchg
mov
cmp
nop
mov
addb
cmp
cmp
mov
mov
cmpsl
jl
addb
cmp
cmp
mov
cmp
movsb
sub
mov
inc
data16
dec
lock
inc
jnp
shlb
pop
sbb
adc
adc
cmp
cmp
sbb
xchg
jns
ds
xor
addr16
mov
imul
pop
dec
xchg
fwait
adc
in
xor
cmp
add
scas
test
dec
or
pop
cmc
inc
push
adcl
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
xchg
addb
adc
cmp
cmp
pusha
scas
sbb
adc
adc
cmp
cmp
sti
push
lods
mov
fmuls
call
xor
addb
adc
cmp
cmp
lahf
or
out
and
loop
jb
pop
movsl
addr16
push
cmp
mov
mov
addb
cmp
cmp
mov
ss
add
outsl
jnp
out
add
jbe
sbb
es
out
gs
leave
mov
or
in
mov
jnp
pop
push
push
jne
xchg
in
sub
insb
aas
gs
cmp
popf
cmp
and
outsl
dec
data16
jbe
add
pushf
dec
dec
xor
fs
loopne
rorb
cmpsl
xchg
aaa
out
xchg
and
loopne
outsl
shll
inc
dec
hlt
cmc
mov
inc
js
sub
movsl
imul
jecxz
lock
popa
fstps
ljmp
adc
in
sub
fsubp
add
in
es
addb
adc
cmp
cmp
push
ss
xor
push
add
pop
and
inc
incb
roll
push
ret
int
adc
push
sbb
mov
ret
movsb
out
pushf
dec
into
imul
pop
jl
mov
mov
les
cwtl
pop
push
loope
addb
cmp
cmp
mov
movsb
dec
lret
sub
insl
cs
addb
adc
cmp
cmp
xchg
es
cmc
rcrl
sbb
adcb
adc
cmp
cmp
mov
hlt
xor
hlt
jl
mov
mov
jae
mov
adc
adc
cmp
cmp
mov
cmp
leave
sbb
test
and
aad
scas
and
repz
insl
clc
shlb
je
hlt
xor
adc
push
addb
adc
cmp
cmp
int3
bound
test
in
jp
push
sub
aam
repz
adc
cmp
cmp
adc
sbb
xchg
les
lods
shlb
aas
mov
dec
xchg
jns
clc
lcall
addb
cmp
cmp
and
mov
test
mov
mov
or
push
mov
sbb
dec
or
or
scas
lcall
adc
adc
cmp
cmp
mov
cli
scas
stos
pop
jne
addb
adc
cmp
cmp
pop
repz
addb
cmp
cmp
mov
mov
int
sahf
bound
addb
cmp
cmp
js
sub
mov
lahf
fucomip
mov
roll
mov
add
dec
inc
andb
xchg
scas
or
and
dec
movsb
dec
mov
push
std
imul
sbb
or
push
test
outsb
push
jg
inc
adc
arpl
xor
movsb
xchg
aam
lea
mov
inc
sub
and
std
iret
mov
addb
adc
cmp
cmp
cld
pop
and
pop
xchg
cmp
or
repnz
test
or
jbe
pusha
ss
xchg
fcoms
cmp
fcmovbe
jmp
nop
cli
sti
aaa
pop
mov
negb
push
repz
push
cs
jle
sub
shr
mov
lret
jmp
addb
cmp
cmp
mov
addb
adc
cmp
cmp
or
inc
lret
mov
addb
adc
cmp
cmp
ds
dec
xchg
cmc
adc
ljmp
addb
cmp
cmp
jne
cmpl
lock
xchg
ja
cmp
jae
addb
adc
cmp
cmp
mov
ret
jb
in
jns
stos
addb
adc
cmp
cmp
sti
add
jnp
addb
cmp
cmp
mov
mov
fldl
adc
adc
cmp
cmp
xlat
pop
and
cmp
fldl
adc
adc
cmp
cmp
fbstp
mov
sub
inc
enter
mov
in
xchg
pop
dec
lahf
gs
jo
cmpb
mov
cltd
js
adc
aam
mov
cli
andb
gs
inc
sub
daa
loope
dec
inc
lret
adc
sub
cmp
mov
lods
sub
addb
adc
cmp
cmp
js
data16
adc
cmp
cmp
jecxz
in
mov
sahf
inc
or
jge
push
enter
fsubrl
addb
cmp
cmp
mov
fldenv
addb
cmp
cmp
mov
adc
fistpll
aas
les
adcb
adc
cmp
cmp
mov
lea
adc
adc
cmp
cmp
mov
add
sub
inc
insl
ljmp
lods
or
leave
xchg
movsb
addb
adc
cmp
cmp
cs
insl
push
mov
into
dec
iret
mov
bndldx
adc
adc
cmp
cmp
mov
jbe
rol
les
fstl
call
popa
lret
movsb
adc
mov
std
adc
mov
and
in
cld
div
mov
pop
aam
xor
movsl
lods
popa
sub
or
cmp
lcall
add
imul
pop
in
push
jne
lcall
lret
addb
cmp
cmp
mov
sub
dec
sti
loopne
mov
test
adc
adc
cmp
cmp
add
cmp
sbb
dec
enter
push
xlat
mov
pop
sub
adc
adc
cmp
cmp
in
xchg
ja
cld
fucom
mov
xchg
inc
ljmp
pushf
icebp
addb
adc
cmp
cmp
jns
and
addb
adc
cmp
cmp
rcrl
in
imul
push
inc
in
jne
mov
pop
leave
insb
sbb
pop
pop
dec
xchg
jmp
adcb
adc
cmp
cmp
mov
fwait
insl
idivl
sbb
xlat
loopne
jmp
inc
xor
mov
adcb
adc
cmp
cmp
mov
lahf
mov
push
mov
addb
adc
cmp
cmp
divb
sbb
mov
adc
adc
cmp
cmp
jo
ja
dec
pop
inc
and
jns
ror
outsb
cmpsb
ja
cmp
adc
adc
cmp
cmp
test
clc
ds
dec
or
addb
adc
cmp
cmp
xchg
sbbl
testb
pop
lods
rclb
add
aam
sti
and
addb
cmp
cmp
mov
or
out
insl
inc
jle
stos
lret
addb
cmp
cmp
mov
mov
aad
jge
add
aaa
cli
test
gs
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
add
xor
aaa
cmp
ret
data16
mov
stos
push
xorl
addb
cmp
cmp
mov
ret
sub
inc
inc
sub
in
popf
mov
into
mov
sub
mov
xor
rcrl
fcomps
mov
adc
adc
cmp
cmp
mov
jecxz
addb
cmp
cmp
mov
mov
fstp
sub
mov
cmpl
pop
sub
insb
inc
ret
and
outsl
sub
sbb
mov
adc
lahf
mov
xchg
mov
in
in
lea
sub
scas
mov
inc
mov
cmp
test
pushf
mov
xor
aas
and
xor
adc
adc
cmp
cmp
out
loope
popf
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
jg
inc
and
lcall
adcb
adc
adc
cmp
cmp
adc
test
fnsave
mov
cli
lret
or
adcb
adc
cmp
cmp
mov
mov
push
pop
mov
pusha
popf
pop
push
dec
push
pop
sbb
fwait
adc
negl
dec
jge
sbb
scas
scas
mov
pusha
dec
mov
adcb
adc
cmp
cmp
mov
pop
rcll
loope
fbstp
push
jmp
lods
jmp
and
loope
addb
adc
cmp
cmp
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
shrb
rolb
adc
adc
cmp
cmp
out
daa
mov
sbbb
inc
mov
adcb
adc
cmp
cmp
mov
mov
addb
cmp
cmp
mov
and
or
jg
cli
test
adc
adc
cmp
cmp
and
pop
add
addb
adc
cmp
cmp
leave
mov
adc
adc
cmp
cmp
mov
cmc
addb
adc
cmp
cmp
aaa
pusha
mov
mov
int3
adc
addb
adc
cmp
cmp
push
jle
mov
in
xor
dec
pop
addb
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
repz
in
push
ljmp
fbstp
scas
rorb
add
adc
pop
inc
or
shrl
fwait
rol
xor
sbb
movsl
int3
cmp
cmp
push
sub
mov
test
int
bound
cwtl
mov
fcompl
jnp
xchg
stos
mov
das
jmp
aaa
icebp
in
mov
shll
arpl
fsubs
adc
adc
cmp
cmp
mov
pushf
cltd
clc
loopne
idivb
mov
addb
cmp
cmp
mov
jge
addb
cmp
cmp
mov
mov
cmp
sub
addb
adc
cmp
cmp
and
mov
into
ss
xchg
lea
addb
cmp
cmp
push
pusha
ret
std
addb
adc
cmp
cmp
int3
mov
xor
mov
and
addb
adc
cmp
cmp
xor
aaa
addb
adc
cmp
cmp
jle
mov
adcl
and
jo
es
adc
pop
cmp
mov
rcl
mov
scas
pop
sti
and
out
mov
or
sbb
addb
adc
cmp
cmp
outsb
negl
mov
cmp
mov
leave
lock
xlat
scas
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
stos
push
stos
jns
insl
mov
sbb
dec
jb
lea
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jb
push
sub
xor
das
in
jge
hlt
lret
pop
addb
adc
cmp
cmp
lret
addb
cmp
cmp
mov
flds
rdmsr
pop
arpl
rcr
xchg
xchg
and
adc
adc
cmp
cmp
push
xor
or
jg
dec
adc
aam
loope
inc
rorl
iret
fcomps
lret
les
imul
addb
cmp
cmp
mov
addb
adc
cmp
cmp
ja
xor
addb
cmp
cmp
mov
cmp
mov
xor
out
scas
loop
out
mov
mov
addb
adc
cmp
cmp
adc
dec
pop
fcoml
add
xchg
jo
inc
sbb
leave
cmp
push
pop
fstl
daa
cmc
inc
and
adc
adc
cmp
cmp
in
push
jge
pop
xor
addb
cmp
cmp
mov
into
dec
repnz
test
pop
ds
and
cmpsb
mov
jae
mov
jno
pop
push
mov
addb
cmp
cmp
mov
pop
int3
addb
adc
cmp
cmp
push
xor
mov
adc
lcall
dec
addb
adc
cmp
cmp
and
lods
xchg
xchg
inc
xchg
jmp
xchg
test
adc
adc
cmp
cmp
mov
jmp
inc
in
aaa
mov
adc
adc
cmp
cmp
mov
leave
shr
inc
xchg
dec
pop
pushf
and
mov
hlt
jb
shl
push
xor
lcall
push
insl
js
nop
ljmp
test
xor
jnp
fcoms
jg
dec
pop
inc
sub
sub
jg
imul
inc
mov
adc
inc
inc
ljmp
pop
mov
jp
fstl
adc
ret
xlat
mov
adc
dec
insb
int3
stc
xchg
adc
adc
cmp
cmp
addb
adc
cmp
cmp
pop
inc
stc
add
adcb
adc
cmp
cmp
mov
push
mov
cmp
cmp
icebp
pop
jmp
pusha
cld
sub
sbb
cmpsb
xchg
hlt
jg
jns
push
jbe
addb
cmp
cmp
mov
lods
dec
aas
sbb
push
fistpll
mov
andps
test
jmp
sbb
cmp
rol
add
jmp
adc
mov
fdiv
or
movsb
and
push
bound
cmp
enter
sbb
push
imul
adc
adc
cmp
cmp
fbld
push
pop
gs
lds
push
adc
movsb
cmpl
pop
ljmp
stos
or
addb
adc
cmp
cmp
mov
jns
pop
fwait
push
mov
arpl
mov
adc
adc
cmp
cmp
mov
rorl
outsl
add
xlat
mov
ror
lods
add
pop
bound
cmp
and
daa
aam
lods
fldl
pop
cld
and
fcmove
sbb
lds
addr16
loop
and
dec
xlat
addb
adc
cmp
cmp
negb
pop
add
mov
xor
enter
fistpl
ret
movsl
add
or
push
pop
pop
or
inc
cmc
cmp
push
ret
dec
sti
jae
aaa
fisubrs
inc
push
dec
cld
push
jo
cld
dec
out
roll
ret
addb
adc
cmp
cmp
adc
enter
cmp
in
ficomps
icebp
movsl
movsl
out
andb
and
push
lods
mov
addb
cmp
cmp
mov
adc
mov
xchg
pop
or
movsb
in
mov
dec
addb
adc
cmp
cmp
mov
cmp
std
sahf
out
lahf
cmp
cltd
outsl
mov
push
test
addb
cmp
cmp
mov
or
and
addb
adc
cmp
cmp
mov
int3
ror
jnp
addb
adc
cmp
cmp
cltd
mov
inc
lea
addb
cmp
cmp
push
repnz
mov
andl
pop
jmp
inc
pusha
pop
test
xchg
shlb
leave
pop
addb
adc
cmp
cmp
lods
inc
sbb
jge
push
lahf
mov
stos
enter
sbb
or
dec
sti
lock
addb
cmp
cmp
mov
scas
popa
jnp
dec
je
pop
and
roll
adc
adc
cmp
cmp
adc
iret
addb
adc
cmp
cmp
out
pop
stos
addb
adc
cmp
cmp
nop
xor
popa
jge
addb
adc
cmp
cmp
jg
movsl
mov
and
cmpsl
xchg
dec
jo
es
pop
loopne
or
adc
xor
cmp
test
sarl
jg
add
pop
cmpsl
mov
pop
ds
or
lret
sub
insb
push
xchg
mov
out
stos
sub
sahf
dec
add
sbb
mov
xor
pop
dec
xor
or
or
addb
cmp
cmp
mov
jl
mov
push
aad
sar
adc
out
mov
add
mov
fisubrs
jne
mov
addb
adc
cmp
cmp
out
test
xor
mov
mov
pop
cmc
dec
scas
push
stos
xor
inc
jns
dec
divl
jle
out
bswap
addb
adc
cmp
cmp
push
dec
addb
adc
cmp
cmp
xor
test
mov
pop
ret
sarb
lea
sbb
out
mov
jle
roll
adc
adc
cmp
cmp
leave
pop
sub
addb
cmp
cmp
mov
sahf
lcall
pop
cmp
pop
push
sub
pop
cmpsb
push
cmp
xlat
mov
in
loope
cmp
dec
das
test
into
cwtl
inc
cmpsb
rcrb
adc
cltd
jno
mov
lret
mov
dec
sbb
fdivp
cmp
andl
mov
addb
adc
cmp
cmp
adc
jb
xchg
mov
mov
mov
or
addb
adc
cmp
cmp
in
mov
cmp
adc
stos
dec
inc
outsb
fcoms
ret
scas
inc
ja
mov
pop
xor
int
jmp
outsl
jns
psubsb
mov
adcb
adc
cmp
cmp
mov
xchg
in
push
push
aas
xchg
pop
sub
imul
mov
mov
or
xchg
imul
in
mov
xchg
sub
in
frstor
daa
and
sbb
ret
lods
je
aas
test
or
cmpsl
sarl
xlat
xorl
addb
cmp
cmp
mov
cmp
jno
and
push
imul
sub
jae
or
mov
lret
adc
dec
cmp
movsl
adc
jnp
push
jnp
mov
mov
inc
adc
insb
int3
mov
fldcw
push
popa
addb
adc
cmp
cmp
jmp
popa
cmc
jmp
addb
cmp
cmp
stos
fcomip
lea
adc
adc
cmp
cmp
shrb
shrl
les
cmc
inc
outsb
addr16
pop
xor
call
cmp
ret
xchg
pop
inc
jge
stos
or
xor
in
pusha
mov
cmp
adc
cmpsl
rcl
mov
pop
pop
cwtl
sahf
jno
in
gs
fistps
or
lret
outsb
mov
jne
addb
cmp
cmp
mov
lock
inc
jle
cmpsb
mov
popa
rcr
sub
mov
lods
fsubl
push
inc
outsb
mov
addb
adc
cmp
cmp
jmp
pop
xchg
addr16
or
int
adc
fdivrs
dec
xchg
xor
adc
notl
lcall
add
cmpsl
enter
cmp
mov
out
lock
push
sarl
mov
test
mov
inc
push
lret
jo
cltd
mov
pop
mov
repz
in
mov
insl
xor
loop
jecxz
push
into
sub
shr
ret
dec
std
pop
inc
es
cmp
addb
cmp
cmp
mov
adc
addb
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
sbb
push
jp
and
loopne
addr16
inc
cltd
jo
ja
bound
out
sahf
jecxz
cmp
movsl
nop
and
mov
addb
cmp
cmp
inc
cmp
addb
adc
cmp
cmp
jp
or
mov
aaa
add
mov
lods
adc
scas
fnstsw
addb
cmp
cmp
mov
sub
popf
aam
xor
xor
out
sbb
dec
xchg
inc
aad
imul
mov
out
mov
mov
lds
jb
outsl
adc
scas
addb
adc
cmp
cmp
je
inc
jbe
cmp
sbb
aas
inc
mov
hlt
sub
rcl
addb
adc
cmp
cmp
mov
sub
addr16
add
sbb
xorl
or
ljmp
int
cmp
insb
xchg
inc
pop
test
daa
pushf
push
pusha
lcall
adc
adc
cmp
cmp
bound
adc
adc
cmp
cmp
cltd
or
ja
fmuls
xchg
pop
call
mov
js
std
je
jno
or
sbb
inc
push
inc
and
insl
repnz
arpl
adcb
adc
cmp
cmp
mov
test
movsl
mov
mov
dec
addb
adc
cmp
cmp
fwait
mov
addb
cmp
cmp
jns
addb
cmp
cmp
mov
bsf
lods
xchg
jne
addb
adc
cmp
cmp
adc
adc
adc
cmp
cmp
xchg
jp
jge
mov
ja
loopne
addb
cmp
cmp
mov
xchg
out
mov
imul
adc
adc
cmp
cmp
and
push
out
addb
adc
cmp
cmp
sub
cmp
data16
addb
adc
cmp
cmp
jle
addb
adc
cmp
cmp
clc
or
imul
mov
int3
aad
xchg
xchg
pusha
cmovl
addb
adc
cmp
cmp
xor
jne
fcmovnb
ret
addb
adc
cmp
cmp
lods
mov
add
orb
xchg
orl
lcall
push
pop
jb
mov
dec
out
js
mov
addb
cmp
cmp
mov
fildl
adc
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
mov
mov
mov
add
mov
insb
xchg
jbe
adc
adcl
nop
push
test
cld
cmp
lea
repz
adc
cmp
cmp
push
std
xchg
popf
popl
addb
cmp
cmp
icebp
je
push
xchg
lcall
pop
imul
push
outsb
lret
repz
add
sub
scas
add
dec
cli
daa
sub
jo
lret
xchg
sti
mov
or
dec
movsbl
addb
adc
cmp
cmp
jo
daa
mov
into
pop
mov
sub
loop
mov
lret
inc
in
adc
stc
and
sub
lock
out
inc
fldl
xchg
pop
mov
idivl
inc
int3
mov
xor
jmp
xor
cltd
push
dec
insb
or
ja
push
adc
addb
cmp
cmp
ret
adc
add
cmc
xchg
xchg
pop
mov
fdivs
addb
cmp
cmp
mov
in
xor
js
mov
cmp
and
inc
inc
push
ss
inc
mov
addb
cmp
cmp
mov
shl
mov
adcb
adc
cmp
cmp
mov
cld
mov
addb
adc
cmp
cmp
imul
or
dec
addb
adc
cmp
cmp
scas
mov
movsl
loopne
insb
mov
pop
lret
addb
adc
cmp
cmp
fcoml
dec
xor
jl
addb
adc
cmp
cmp
mov
jg
and
imul
int
ja
pop
test
push
mov
addb
adc
cmp
cmp
popa
stos
es
jl
addb
adc
cmp
cmp
inc
sarl
inc
inc
cmp
loop
inc
sti
xchg
lds
and
shr
dec
add
cltd
mov
addb
adc
cmp
cmp
jb
fs
or
xchg
dec
je
ss
push
mov
pushf
lahf
push
mov
in
ljmp
stos
mov
mov
orl
adcb
adc
cmp
cmp
mov
sti
jl
xor
fwait
inc
sub
cld
and
mov
jg
dec
cmp
scas
pop
adcl
xorb
cmpsb
xor
adc
adc
cmp
cmp
hlt
in
add
cmp
popa
imul
decl
mov
stos
in
les
jge
xchg
daa
addb
adc
cmp
cmp
rclb
push
cli
mov
daa
or
int
cmp
mov
ljmp
cmp
adc
adc
cmp
cmp
mov
or
aad
dec
outsb
and
clc
adc
sti
mov
mov
cmp
mov
dec
fidivrs
sub
add
mov
pop
xchg
pop
lret
addb
adc
cmp
cmp
jb
mov
mov
jge
push
add
mov
inc
mov
jo
xchg
jmp
data16
addb
adc
cmp
cmp
add
lods
addb
adc
cmp
cmp
ret
les
nop
mov
js
or
icebp
xor
addb
adc
cmp
cmp
fdivs
in
addb
adc
cmp
cmp
sub
adc
adc
cmp
cmp
cmpsl
push
addb
fwait
repnz
out
insl
cmpsb
jp
jb
addb
adc
cmp
cmp
pop
stos
mov
xor
stos
adc
addb
adc
cmp
cmp
push
sbb
mov
xchg
addb
adc
cmp
cmp
cmpsb
sbb
adc
adc
cmp
cmp
mov
mov
ret
jns
xchg
lret
sbb
stos
insb
cmpsb
iret
imul
pushl
ficompl
gs
addb
adc
cmp
cmp
mov
int3
and
test
inc
jge
inc
lret
testl
cmp
cmp
and
jmp
xor
addb
cmp
cmp
jne
add
jmp
daa
jbe
cld
aad
inc
test
test
xchg
cmpsl
dec
push
sbb
inc
arpl
addb
cmp
cmp
mov
addb
cmp
cmp
lret
addb
cmp
cmp
ds
ret
sahf
daa
dec
mov
jns
jns
addb
cmp
cmp
mov
sub
fs
aaa
aas
jb
or
mov
mov
mov
int
mov
sahf
jno
addb
adc
cmp
cmp
and
xchg
inc
rcr
addb
adc
cmp
cmp
push
and
das
addb
adc
cmp
cmp
adc
aaa
imull
pop
or
xor
dec
lods
fidivrs
jnp
and
lea
adc
testl
cmp
cmp
test
lret
mov
bound
sarl
adc
adc
cmp
cmp
mov
clc
push
addb
adc
cmp
cmp
mov
arpl
addb
cmp
cmp
mov
ljmp
lahf
les
addb
adc
cmp
cmp
dec
pop
movsb
jb
or
sub
stos
hlt
or
inc
divb
js
shll
repz
inc
repnz
push
rorl
test
push
outsb
sbb
addb
cmp
cmp
mov
xchg
outsb
sahf
or
popa
orps
addb
cmp
cmp
mov
das
pop
in
pusha
add
subl
pop
setb
adc
adc
cmp
cmp
sti
sub
adc
adc
cmp
cmp
fistpll
pop
cmp
or
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
popa
mov
mov
pop
loope
mov
lea
addb
cmp
cmp
cmp
stos
repz
pop
out
adc
fsubs
sub
dec
sbb
add
jnp
lret
shll
cld
imul
addb
adc
cmp
cmp
mov
push
lcall
adcb
adc
cmp
cmp
mov
or
jbe
in
inc
lods
ljmp
add
pushl
sub
ret
sub
add
adc
lcall
out
rolb
adc
cmp
cmp
mov
sbb
mov
mov
test
mulb
add
adcb
cs
xor
addb
adc
cmp
cmp
pop
loope
ja
pop
movsb
jle
mov
pop
jae
push
fsubp
addb
adc
cmp
cmp
es
jp
mov
inc
add
pop
dec
fcmovnu
adc
hlt
mov
aas
nop
jecxz
mov
lahf
fldt
and
push
lret
addr16
call
and
inc
shlb
adc
lods
lahf
test
pop
xchg
mov
repnz
adc
cmp
cmp
cmp
addr16
addb
adc
cmp
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
xor
mov
adcb
adc
cmp
cmp
mov
in
mov
fcmovu
sbb
cwtl
test
jo
mov
aaa
add
int3
fcmovu
xchg
and
jle
lcall
int3
lcall
adc
cmp
cmp
mov
faddl
or
imul
adc
xchg
cmp
pop
inc
dec
mov
xchg
test
mov
sub
das
add
addb
cmp
cmp
mov
pop
xor
je
mov
mov
sbb
fisubrs
inc
jbe
push
inc
out
mov
inc
fstpl
jge
lock
xchg
sub
lock
sub
testl
adcb
adc
cmp
cmp
mov
mull
popf
ret
std
in
dec
in
add
call
movsb
push
movsb
dec
dec
jge
push
and
addb
adc
cmp
cmp
fldt
push
call
addb
cmp
cmp
mov
nop
fistps
xchg
icebp
shrl
inc
mov
jae
jl
adc
lcall
sti
sbb
aas
pop
cmp
sahf
addb
adc
cmp
cmp
dec
jg
rolb
cmpsb
mov
cwtl
adc
fldl
adc
adc
cmp
cmp
and
cltd
sahf
add
add
or
mov
and
popl
adc
adc
cmp
cmp
mov
xchg
jmp
addr16
repz
sub
jns
out
sub
icebp
addb
adc
cmp
cmp
je
mov
in
mov
stc
std
xchg
xor
lret
jo
testb
adc
cmp
cmp
mov
test
inc
jmp
push
pushf
popf
roll
xor
imul
mov
cmpsb
addb
adc
cmp
cmp
outsl
sub
lock
mov
pop
add
pop
jno
push
mov
aaa
add
push
sub
lods
bound
imulb
lret
data16
adc
cmp
cmp
sbb
out
inc
add
aad
mov
mov
xchg
fs
mov
adcb
adc
cmp
cmp
mov
or
fsubs
lret
addb
adc
cmp
cmp
push
sub
sub
lret
fsub
sub
fstps
mov
xchg
push
and
addb
adc
cmp
cmp
sbb
nop
xor
repnz
icebp
sbb
stos
add
xor
mov
or
cmp
mov
or
or
std
pushf
inc
mov
enter
addb
cmp
cmp
jnp
lock
sbb
addb
adc
cmp
cmp
sub
add
mov
addb
adc
cmp
cmp
jmp
xor
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
mov
add
cmp
testl
sahf
stc
lcall
addb
cmp
cmp
mov
mov
rolb
dec
inc
xor
push
outsb
scas
movsl
push
push
dec
pop
jne
push
add
mov
outsb
addb
adc
cmp
cmp
out
lods
mov
arpl
jecxz
inc
addb
adc
cmp
cmp
push
les
mov
xor
and
ret
cmp
mov
outsl
stc
or
adc
adc
cmp
cmp
ftst
mov
xchg
outsb
and
inc
nop
lds
cwtl
sub
divb
movsb
aad
cmp
addb
cmp
cmp
mov
sub
push
lods
shlb
adc
or
xchg
add
leave
adc
out
inc
or
push
dec
dec
lock
neg
mov
adc
adc
cmp
cmp
mov
push
les
movsl
idiv
leave
jae
push
dec
out
cmpsl
pop
cmp
adcb
adc
cmp
cmp
mov
xor
inc
push
inc
or
sarb
push
lahf
iret
dec
psubusb
push
and
xor
mov
cmpl
xorb
lods
fs
out
insb
addb
adc
cmp
cmp
sbb
or
ss
push
and
add
mov
fcompl
test
cmp
int
cld
or
out
jge
sub
movsb
das
mov
sbb
addb
cmp
cmp
sbb
xchg
mov
addb
cmp
cmp
mov
xor
sbb
loope
lea
iret
add
lret
push
mov
fnstcw
addb
adc
cmp
cmp
jge
jb
adc
fs
jmp
out
inc
cld
inc
xor
addb
cmp
cmp
mov
cltd
xchg
pop
mov
adcb
adc
cmp
cmp
mov
aas
scas
cmp
fadds
adc
adc
cmp
cmp
cmp
xchg
pop
inc
jle
jmp
adc
imul
xor
mov
mov
frstor
fwait
jbe
bound
push
test
inc
pop
mov
inc
mov
mov
adcb
adc
cmp
cmp
mov
mov
movsb
mov
cmpsl
in
lret
sub
push
adc
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pop
dec
jp
sbb
adcb
adc
cmp
cmp
mov
add
mov
into
mov
aaa
insl
or
das
sbb
out
out
movsb
xor
mov
addr16
mov
lahf
mov
dec
addb
adc
cmp
cmp
or
jmp
jmp
jo
add
xchg
xchg
dec
sbb
sbb
cmpsb
addb
adc
cmp
cmp
xchg
add
adc
adc
cmp
cmp
mov
pop
shrb
mov
arpl
jo
pop
aas
add
adc
adc
cmp
cmp
lret
in
push
sub
sbb
inc
mov
sbb
faddl
addb
cmp
cmp
mov
cltd
lret
stc
xchg
fnstcw
adc
adc
cmp
cmp
mov
fistps
xor
imul
imul
cmp
addb
adc
cmp
cmp
pop
popf
pop
jbe,pn
fsts
addb
cmp
cmp
mov
pop
in
divl
scas
mov
dec
scas
or
cmp
fmuls
push
nop
out
inc
in
jbe
loop
lret
jnp
sub
xor
pop
mov
jl
std
mov
inc
into
mov
addb
cmp
cmp
mov
cmp
and
jns
inc
mov
call
adc
adc
cmp
cmp
mov
repnz
sbb
shr
addb
cmp
cmp
mov
ja
jp
addb
cmp
cmp
mov
jne
and
mov
jle
clc
mov
lcall
hlt
jecxz
xchg
repz
adc
cmp
cmp
repnz
adc
adc
cmp
cmp
mov
std
in
addb
cmp
cmp
mov
ret
cmp
sbb
mov
addb
adc
cmp
cmp
and
test
out
loope
stos
mov
mov
dec
addb
adc
cmp
cmp
and
sbb
fidivl
jno
jge
push
mov
xchg
xchg
mov
adc
adc
cmp
cmp
mov
les
sbb
adc
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
jb
addb
cmp
cmp
mov
push
push
stos
inc
orb
addb
cmp
cmp
mov
dec
test
outsl
lods
push
mov
mov
loopne
je
jno
addb
cmp
cmp
mov
jmp
sub
cmp
push
lods
jns
addb
cmp
cmp
mov
addr16
push
push
and
shll
insl
xchg
mov
repz
dec
sub
adcb
adc
cmp
cmp
mov
jnp
mov
addb
adc
cmp
cmp
jg
daa
jnp
xlat
aad
dec
stc
addb
adc
cmp
cmp
shl
lods
xchg
mov
shll
pop
lret
addb
adc
cmp
cmp
xchg
xchg
or
hlt
rol
test
loopne
sti
stos
ret
sbb
ja
dec
call
add
cmp
rorb
or
jae
inc
int3
inc
add
insl
fninit
clc
or
and
pop
jb
aaa
leave
pushf
daa
xchg
or
out
ret
xchg
jmp
adcb
adc
cmp
cmp
mov
inc
shrb
jmp
mov
push
call
mov
decb
testb
in
shr
icebp
jnp
or
inc
or
addb
adc
cmp
cmp
aam
lcall
aaa
pop
xchg
or
sub
test
mov
insb
ljmp
jae
push
fwait
push
mov
mov
xchg
jge
gs
addb
adc
cmp
cmp
cmp
mov
adc
adc
cmp
cmp
mov
call
xorl
cmp
cmp
mov
pushf
shll
adc
scas
out
jno
ds
pop
into
dec
adc
xor
mov
mov
sub
or
addb
cmp
cmp
mov
fs
sub
popf
inc
cmpsl
mov
xor
roll
aaa
jge
ljmp
ljmp
incb
and
mov
mov
lcall
addb
mov
outsb
addr16
ret
jbe
lcall
inc
and
fiadds
stc
stc
icebp
jns
aaa
cmc
mov
pop
sub
orb
sbb
push
sbb
adc
adc
cmp
cmp
push
jecxz
jmp
adc
dec
jns
mov
shlb
adc
addb
adc
cmp
cmp
shlb
call
sub
in
xor
jb
enter
cmp
and
jae
adc
outsl
outsb
div
sti
mov
jl
mov
pop
push
movsb
pop
jmp
insl
ret
and
fdivl
addl
adc
cmp
cmp
mov
add
adc
adc
cmp
cmp
out
addb
cmp
cmp
mov
icebp
pop
addb
adc
cmp
cmp
imul
addb
adc
cmp
cmp
fwait
or
sub
addb
adc
cmp
cmp
lea
lods
sti
int3
or
push
lods
shlb
mov
out
lods
movsl
sti
dec
push
mov
addb
adc
cmp
cmp
pop
imul
sbb
and
sbb
lods
sbb
and
inc
out
mov
addb
adc
cmp
cmp
call
repz
lret
test
jle
jecxz
lret
scas
add
pop
sub
push
fdiv
rcll
adcb
adc
cmp
cmp
mov
je,pn
cld
xchg
clc
xor
pop
cli
and
nop
sbb
pop
adc
addb
adc
cmp
cmp
sbb
mov
xlat
xchg
pop
add
adc
adc
cmp
cmp
roll
adc
adc
cmp
cmp
jb
sahf
adc
addb
cmp
cmp
mov
mov
adc
adc
cmp
cmp
insb
loop
int
xchg
pop
cmpsb
jns
movswl
icebp
daa
std
xor
ljmp
addr16
pop
call
push
inc
loopne
lahf
repnz
mov
aas
movsl
popf
outsb
pushf
mov
es
or
mov
test
les
inc
rclb
std
jns
push
jo
addb
cmp
cmp
mov
rcr
lods
ja
pop
xchg
loop
jl
addb
adc
cmp
cmp
cmpsl
rorl
in
pop
ret
push
mov
sub
shl
lods
orl
push
xchg
xchg
test
jle
cwtl
cli
or
test
mov
fsubr
fldt
call
add
jae
out
xchg
mov
xchg
addr16
daa
xchg
sbb
je
pop
mov
inc
add
addb
adc
cmp
cmp
push
scas
or
decb
jns
adc
pop
dec
addb
adc
cmp
cmp
pushf
mov
add
xlat
mov
lret
xor
or
push
push
jns
mov
add
adc
adc
cmp
cmp
mov
lret
jae
xlat
mov
dec
xchg
dec
sbb
adc
adc
cmp
cmp
and
pop
mov
dec
mov
adc
adc
cmp
cmp
mov
and
and
jns
sbb
adcb
adc
cmp
cmp
mov
mov
fs
daa
nop
movsl
out
out
jg
jae
addb
adc
cmp
cmp
push
sbbl
mov
into
in
addb
adc
cmp
cmp
mov
addb
cmp
cmp
sbb
iret
or
in
sbb
add
adc
adc
cmp
cmp
addb
adc
cmp
cmp
fistl
fwait
pop
pop
mov
xchg
adc
adc
cmp
cmp
ret
inc
nop
push
cmp
pop
addb
adc
cmp
cmp
mov
and
cltd
and
fstpl
adcb
adc
cmp
cmp
mov
fistpll
push
lock
dec
addb
adc
cmp
cmp
fidivs
xor
clc
repz
or
cmpsl
sti
rcll
add
lret
and
loopne
aad
stos
fcomip
inc
push
test
stos
out
addb
adc
cmp
cmp
ljmp
scas
jb
scas
addb
adc
cmp
cmp
mov
xor
and
inc
and
xlat
pop
shr
push
jmp
sub
sbb
in
push
rorl
lods
mov
es
dec
inc
roll
mov
cmc
push
and
adcb
adc
cmp
cmp
mov
cmpsl
das
int
mov
data16
push
cld
mov
xchg
mov
mov
aam
mov
fs
fadd
addb
adc
cmp
cmp
or
add
push
test
mov
in
cmp
add
sbb
and
aaa
mov
adc
adc
cmp
cmp
jecxz
scas
cli
testl
clc
call
pop
mov
test
std
addb
adc
cmp
cmp
insb
mov
pop
and
adc
adc
cmp
cmp
jbe
adc
sahf
mov
jl
popf
in
cmp
addb
cmp
cmp
loopne
test
mov
fwait
imul
into
xor
lcall
cmp
or
clc
adc
push
dec
xor
xchg
movb
adc
cmp
cmp
mov
in
inc
insb
push
lea
and
inc
pop
outsb
mov
cmp
adc
pop
mov
jb
push
clc
cwtl
addb
adc
cmp
cmp
adc
data16
fmull
fldlg2
dec
mov
pusha
sbb
mov
pop
das
cs
loope
rclb
sub
and
xchg
mov
xchg
mov
sti
and
push
in
les
jge
addr16
jge
orl
addb
cmp
cmp
mov
imul
push
imul
xchg
cld
outsl
cmp
fmulp
mov
push
pop
outsl
mov
ror
cmp
rsm
cmp
push
ljmp
stos
idivb
jle
shr
inc
sub
addb
cmp
cmp
mov
in
sar
jle
rcrl
arpl
test
inc
push
hlt
ljmp
addb
cmp
cmp
sbb
sub
mov
addb
cmp
cmp
mov
sub
add
mov
sbb
dec
cmpsb
mov
dec
mov
les
adc
adc
cmp
cmp
addl
cmpsl
mov
lods
das
fcoms
adcb
adc
cmp
cmp
mov
sti
neg
pop
or
into
pusha
push
sahf
dec
or
mov
and
loop
push
xchg
out
push
push
out
adc
pop
pop
out
jmp
mov
or
and
test
mov
aaa
fistpl
mov
mov
dec
gs
jo
add
jecxz
add
mov
pop
mov
addb
cmp
cmp
mov
mov
jbe
add
addb
adc
cmp
cmp
int3
adc
fs
in
dec
jl
push
adc
ficompl
adc
jne
aas
lods
xchg
mov
insl
push
xchg
fildl
jle
mov
fdivl
addb
cmp
cmp
mov
cmp
ljmp
adc
adc
cmp
cmp
mov
fistpll
jne
sbb
adcb
adc
cmp
cmp
mov
jne
xor
xchg
cs
fdiv
adc
jno
bound
adc
jge
pop
xchg
mov
cmp
mov
and
cmp
xchg
and
jne
or
outsb
mov
addb
cmp
cmp
scas
ds
xchg
mov
fbstp
cld
cmpsl
xor
movsl
test
addr16
fmul
rcrl
in
out
lahf
xchg
mov
mov
ja
xor
xchg
add
aad
test
dec
inc
sbb
mov
adc
add
addb
adc
cmp
cmp
mov
lret
addb
adc
cmp
cmp
add
pmulhuw
cmovnp
mov
jno
pop
inc
pop
xor
lcall
and
enter
cmp
ret
ret
int
push
arpl
lods
jnp
jle
repnz
lret
hlt
jge
ret
fnsave
stos
push
mov
cmp
or
je
addb
cmp
cmp
mov
push
mov
addb
adc
cmp
cmp
nop
aaa
pop
inc
aad
in
in
stos
daa
repz
jno
popa
and
mov
out
addb
adc
cmp
cmp
adc
aas
js
pop
xchg
adc
ljmp
sbb
das
xlat
cli
and
pop
stos
xor
mov
les
mov
jns
jle
ja
mov
add
test
mov
adc
out
push
or
test
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
loope
test
adc
cs
movsl
test
mov
out
js
addb
adc
cmp
cmp
cs
xor
popa
mov
subl
outsb
fsts
mov
nop
cmpsl
push
xor
mov
xor
ret
pop
xchg
sub
aad
push
or
dec
les
adcb
adc
cmp
cmp
mov
or
cmp
in
movsl
adc
addb
adc
cmp
cmp
in
shl
in
enter
dec
xor
ss
jecxz
mov
xor
daa
and
mov
aaa
jb,pt
insb
add
inc
push
push
adc
adc
cmp
cmp
mov
into
sub
addb
adc
cmp
cmp
aaa
shl
pusha
push
lret
nop
push
and
jb
jne
pop
cli
pushf
pop
pop
pop
and
aas
arpl
jb
and
aad
jp
ficompl
jl
mov
cwtl
cmp
int3
das
lret
popa
jbe
addb
cmp
cmp
mov
fiaddl
mov
lods
add
sub
shr
jo
cmp
mov
dec
push
fisttpll
cmpsl
rcrl
jo
pop
jecxz
aaa
pop
xchg
andb
dec
lret
addb
cmp
cmp
mov
jg,pt
mov
add
and
push
or
addb
adc
cmp
cmp
sbb
mov
js
inc
repz
iret
jp
and
aaa
out
rcrb
mov
push
sub
aas
fldl
addb
cmp
cmp
mov
mov
enter
addb
cmp
cmp
mov
int
xor
fisttps
addb
adc
cmp
cmp
add
push
mov
lcall
jo
xchg
pop
xchg
addb
adc
cmp
cmp
pop
push
and
rclb
cmp
aad
push
xor
adc
adc
cmp
cmp
lods
or
sbb
addb
cmp
cmp
mov
lds
out
addb
adc
cmp
cmp
pop
fstps
cltd
sub
dec
cmp
in
pop
addl
pop
jae
sbb
adcb
adc
cmp
cmp
mov
mov
pop
rcll
mov
sbb
xor
aad
test
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
mov
jp
dec
mov
outsl
out
in
xchg
inc
shrl
mov
leave
aaa
notb
popa
inc
sub
dec
mov
dec
insl
mov
scas
add
insl
mov
lahf
int
filds
adc
adc
cmp
cmp
xlat
sbb
push
inc
xchg
fisubs
in
pop
jl
lods
mov
addb
adc
cmp
cmp
out
out
mov
pop
out
add
add
fcoms
and
push
adc
addb
cmp
cmp
mov
pop
aas
ss
add
insb
fmul
in
addb
adc
cmp
cmp
mov
jg
out
cmp
ret
cli
inc
pop
xor
adc
adc
adc
cmp
cmp
xor
insb
and
sbb
addb
cmp
cmp
jo
push
mov
lea
addb
adc
cmp
cmp
into
rcl
adc
incl
adc
adc
cmp
cmp
das
mov
lret
add
add
push
cli
fisubl
subl
fsts
addb
adc
cmp
cmp
and
or
rcrl
addb
addb
cmp
cmp
decl
jp
sbb
daa
cmp
xchg
shlb
addb
cmp
cmp
mov
push
insl
adc
fldz
mov
jae
dec
add
pop
mov
fs
lahf
cld
fisubrs
addb
cmp
cmp
mov
data16
in
xchg
mov
adcb
adc
cmp
cmp
mov
stos
insl
insb
sbb
dec
sbb
and
hlt
ja
addb
cmp
cmp
mov
out
mov
jno
add
aam
and
add
fcomp
int
sub
sbb
push
lods
adc
jmp
icebp
xor
sub
addb
adc
cmp
cmp
addb
adc
cmp
cmp
rcr
jge
pusha
mov
push
pop
lods
push
jae
mov
addb
cmp
cmp
mov
int3
aam
icebp
jnp
fildl
mov
stc
xchg
inc
mov
loopne
inc
fnsave
int
dec
jb
addb
adc
cmp
cmp
hlt
jmp
into
addr16
roll
push
push
outsb
mov
out
add
movzbl
jns,pn
mov
pop
lcall
adc
adc
cmp
cmp
mov
jp
test
addb
adc
cmp
cmp
addr16
and
push
rcrb
pop
outsb
ret
and
addb
adc
cmp
cmp
popa
cwtl
sahf
aam
jno
addb
adc
cmp
cmp
and
js
insl
test
lds
movsb
cmp
or
adc
test
es
push
insb
addb
adc
cmp
cmp
sbb
add
ljmp
fisttpll
les
adc
adc
cmp
cmp
mov
pop
push
push
insb
inc
mov
lss
addb
adc
cmp
cmp
test
sbb
jp
inc
cmpsb
xchg
sub
add
push
cli
xchg
scas
xor
jg
es
addb
adc
cmp
cmp
xchg
int
aaa
sarb
xor
mov
addb
adc
cmp
cmp
lods
cltd
sbb
pop
nop
loop
testb
daa
clc
in
inc
or
nop
andl
addb
cmp
cmp
int
cmc
cs
nop
mov
mov
aam
dec
xchg
aam
hlt
push
xchg
sbb
fwait
push
lret
addb
cmp
cmp
jle
addb
adc
cmp
cmp
pop
lods
add
addb
cmp
cmp
in
enter
mov
addb
cmp
cmp
vpxor
outsb
and
icebp
fmull
mov
add
mov
inc
testl
rclb
pop
stos
push
mov
jg
jb
and
cmp
adcb
adc
cmp
cmp
mov
jmp
or
addb
adc
cmp
cmp
aam
push
pop
addb
adc
cmp
cmp
adc
sub
add
mov
jnp
sti
ss
xchg
ret
rcr
mov
fcmovnu
inc
sub
or
mov
aas
push
imul
mov
push
pop
lods
scas
subb
dec
xor
cmpsl
sbb
es
mov
adcb
adc
cmp
cmp
mov
xchg
and
sti
mov
mov
jecxz
test
jne
mov
movsl
dec
test
lods
call
addb
cmp
cmp
mov
and
addb
cmp
cmp
mov
mov
insb
push
and
loopne
pop
mov
fldt
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
out
jmp
mov
jns
test
pop
push
mov
adcb
adc
cmp
cmp
mov
dec
jle
sbb
addb
cmp
cmp
mov
xchg
pop
ds
and
adc
adc
cmp
cmp
mov
push
xor
cmp
add
xchg
dec
mov
lock
outsl
rcrb
addb
cmp
cmp
adc
std
mov
cmp
iret
aad
mov
and
insl
loop
mov
clc
or
adc
adc
cmp
cmp
movsb
jnp
jmp
jle
xchg
cmpsl
pop
sub
xchg
hlt
pop
jmp
xchg
mov
adcb
adc
cmp
cmp
mov
push
mov
or
xchg
sub
sahf
in
dec
add
xchg
sub
mov
cmpsl
xor
jnp
jnp
out
pop
dec
lea
dec
push
xor
add
je
adc
add
adc
adc
cmp
cmp
mov
xchg
mov
fwait
aas
test
mov
fwait
xor
or
adc
adc
adc
cmp
cmp
fnstsw
push
inc
xchg
addb
adc
cmp
cmp
int
push
fidivrs
push
aam
mov
pop
pop
roll
adcb
adc
cmp
cmp
mov
shll
cmp
mov
pop
aas
out
loopne
addb
cmp
cmp
mov
test
mov
stc
sub
cmpb
jle
xor
outsb
outsl
lahf
jmp
les
into
mov
fidivrs
ja
enter
test
into
lret
cmp
adc
adc
cmp
cmp
loope
adc
inc
stos
and
mov
and
out
cwtl
xor
lahf
out
cltd
loopne
addb
cmp
cmp
mov
imul
push
adc
daa
or
jg
movsb
mov
adcb
adc
cmp
cmp
mov
mov
pop
lret
inc
adc
into
pop
lds
negb
cmp
bound
inc
inc
xchg
inc
mov
sbb
push
repnz
lods
out
jno
addb
cmp
cmp
mov
xor
lret
fucomip
inc
repz
jae
insl
push
inc
dec
cmp
addb
cmp
cmp
ret
mov
call
addb
adc
cmp
cmp
addl
cmpsb
mov
in
movaps
addb
adc
cmp
cmp
stos
ret
mov
addb
adc
cmp
cmp
add
mov
cmp
mov
adc
adc
cmp
cmp
mov
inc
in
addb
cmp
cmp
mov
ss
mov
dec
mov
jecxz
or
pop
xor
js
adc
push
and
jl
pop
dec
rorb
sbb
add
addb
cmp
cmp
mov
push
pop
outsb
adcb
jb
std
push
shld
int
xchg
fucomi
mov
js
js
addb
cmp
cmp
mov
and
cmp
mov
inc
jnp
xchg
movsb
adc
sub
addb
adc
cmp
cmp
jo
dec
mov
les
repnz
sub
mov
addb
cmp
cmp
out
repz
cs
fcomp
in
out
push
lcall
push
enter
add
in
filds
jg
scas
and
push
andb
mov
push
lret
pop
inc
mov
mov
je
lret
xchg
lcall
xchg
ljmp
pop
std
ja
iret
mov
pop
xor
lods
jbe
rolb
inc
lahf
aam
das
or
cmp
mov
push
mov
pop
mov
lea
ret
hlt
stos
mov
cmpb
in
sub
cli
js
mov
push
push
insl
push
adc
adc
cmp
cmp
mov
pop
push
push
addb
adc
cmp
cmp
dec
fcompl
addb
cmp
cmp
test
mov
jg
push
xlat
jo
jg
addb
adc
cmp
cmp
das
jge
ja
dec
insl
pop
arpl
mov
addb
cmp
cmp
mov
jns
cltd
pushf
loopne
cmp
mov
dec
push
fwait
mov
loope
xor
fildl
cmp
js
lds
fwait
pop
mov
ss
pop
pushl
in
fstps
push
cmp
addb
adc
cmp
cmp
shlb
stc
ss
pop
lret
mov
mov
ljmp
ja
sub
xchg
cmp
adcb
adc
cmp
cmp
mov
pushf
and
cltd
idiv
je
pop
addb
adc
cmp
cmp
xor
adc
adc
cmp
cmp
mov
out
mov
icebp
xchg
or
cwtl
jg
ljmp
xor
imul
adc
cmp
cmp
mov
insb
adc
jmp
dec
sbb
mov
or
push
pop
insb
pop
sti
int3
xchg
adc
xchg
in
sub
adc
adc
cmp
cmp
arpl
sbbb
out
iret
addb
adc
cmp
cmp
adc
add
movl
jge
lods
cmp
lds
adc
adc
cmp
cmp
jne
insl
push
pop
out
jle
sti
out
jne
fs
cmpsl
xchg
dec
sub
mov
dec
jno
in
scas
cmpsl
sbb
xchg
mov
fimull
lret
cwtl
pop
nop
fadd
scas
rclb
lock
addl
cmp
cmp
fistpl
cmc
lahf
push
hlt
adc
outsb
xchg
movsb
iret
addb
adc
cmp
cmp
mov
in
pop
repz
addb
adc
cmp
cmp
cmpsl
or
iret
add
out
lea
jmp
mov
jns
cli
dec
cld
sarl
mov
mul
cmpsl
xchg
lahf
inc
pop
dec
cmpsl
test
add
fildl
adc
adc
cmp
cmp
push
or
push
lods
data16
ret
adc
push
addb
adc
cmp
cmp
jns
jg
cmpsb
jno
stc
rolb
loop
test
add
adc
adc
cmp
cmp
pop
xchg
dec
fwait
in
fdivr
cmp
dec
mov
sbb
addb
adc
cmp
cmp
out
push
mov
and
adc
adc
cmp
cmp
mov
aad
arpl
push
xlat
pop
pop
and
out
mov
cmpsb
xchg
fiadds
adc
adc
cmp
cmp
je
es
addb
int
mov
addb
cmp
cmp
inc
and
repz
outsl
dec
mov
mov
xchg
mov
cwtl
shr
shll
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
mov
aad
cmp
and
test
loop
sahf
add
addb
cmp
cmp
inc
or
adc
adc
cmp
cmp
push
cli
movb
jecxz
xbegin
insb
lea
cmp
subl
pop
xchg
in
mov
aaa
imul
cs
les
pop
pop
addb
adc
cmp
cmp
fcoml
mov
push
push
pop
jo
xlat
in
mov
shll
ret
imul
addb
cmp
cmp
push
cmp
inc
test
xor
adc
mov
cmp
inc
sbb
mov
int
pop
dec
xchg
test
adc
adc
cmp
cmp
mov
gs
mov
in
or
pop
push
or
sahf
sub
pop
mov
addb
cmp
cmp
and
addb
cmp
cmp
mov
xchg
jp
ja
sbb
adc
adc
cmp
cmp
push
sbb
push
out
push
addb
adc
cmp
cmp
leavew
mov
xchg
sub
addb
adc
cmp
cmp
pop
into
mov
jmp
xchg
inc
push
mov
stos
cmc
addb
adc
cmp
cmp
dec
aas
or
mov
adcb
adc
cmp
cmp
mov
lahf
cmpsl
jno
out
addb
cmp
cmp
mov
fadd
push
jecxz
addb
adc
cmp
cmp
test
push
mov
xlat
ret
mov
addb
cmp
cmp
mov
cwtl
xchg
leave
adc
xor
jge
adcb
and
sub
xor
je
rcl
js
inc
cltd
in
or
js
sbb
into
mov
mov
mov
xor
pop
popa
mov
push
and
std
add
leave
hlt
mov
jb
lea
adcb
adc
cmp
cmp
mov
outsb
outsl
cmp
adc
call
addb
cmp
cmp
shl
mov
data16
in
and
hlt
mov
imul
push
imul
sub
lahf
imul
addb
cmp
cmp
mov
addb
adc
cmp
cmp
inc
out
addb
adc
cmp
cmp
enter
or
cmp
mov
jp
mov
sub
movl
pop
pop
and
lcall
xor
cmp
adc
adc
cmp
cmp
cmp
mov
addb
adc
cmp
cmp
movsb
push
arpl
in
cmp
or
xlat
roll
push
addb
adc
cmp
cmp
idiv
xor
and
cltd
cwtl
arpl
push
jae
mov
addb
cmp
cmp
mov
xchg
push
jmp
jbe
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
pop
add
xchg
xchg
mov
adc
or
add
jmp
push
mov
pop
js
mov
sbb
adcb
adc
cmp
cmp
mov
lods
push
cltd
mov
in
loop
xchg
addb
cmp
cmp
mov
sarl
inc
ljmp
adc
adc
cmp
cmp
loop
mov
addb
adc
cmp
cmp
aas
push
addb
adc
cmp
cmp
loopne
inc
xchg
push
xchg
inc
enter
popf
and
addb
adc
cmp
cmp
loop
lods
andl
addb
testl
movlps
mov
jne
addb
adc
cmp
cmp
jno
jp
dec
pop
cmp
pop
dec
mov
or
stc
push
jns
inc
mov
in
add
addb
cmp
cmp
fistps
cmp
out
xor
ret
addb
adc
cmp
cmp
mov
and
cmp
xchg
push
jne
ret
fwait
pop
pop
mov
notb
push
test
push
scas
cwtl
rcl
jo
mov
loopne
fnstenv
mov
addb
adc
cmp
cmp
and
clc
negb
add
orl
imul
jecxz
and
or
xchg
addb
adc
cmp
cmp
mov
add
pop
or
add
ja
das
pop
repnz
jnp
sub
sbb
andb
jmp
mov
adc
adc
cmp
cmp
lods
jmp
mov
adc
adc
cmp
cmp
out
insl
addb
adc
cmp
cmp
or
into
mov
nop
addr16
jnp
cli
and
addb
adc
cmp
cmp
icebp
and
xchg
dec
mov
mov
lahf
out
cmp
lret
mov
jp
sbb
addb
cmp
cmp
mov
xchg
pop
in
rolb
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
outsl
xor
mov
in
in
adc
loop
pusha
add
push
mov
imul
inc
add
cmp
addb
adc
cmp
cmp
stc
add
in
and
cli
ljmp
loope
addb
adc
cmp
cmp
pop
inc
adc
xor
addb
adc
cmp
cmp
inc
sbb
in
addb
adc
cmp
cmp
mov
mov
add
cmp
pop
jle
loopne
addb
cmp
cmp
mov
xchg
sub
scas
and
or
add
push
sub
add
addb
cmp
cmp
mov
mov
fisubrs
addb
adc
cmp
cmp
dec
lret
ljmp
xchg
dec
sub
inc
sti
sbb
cmp
or
lcall
bound
jecxz
mov
cmp
aad
lea
addb
cmp
cmp
push
push
lea
xor
bound
mov
imull
enter
lods
stos
xchg
sub
mov
addl
cmp
cmp
lret
imul
adc
adc
cmp
cmp
inc
ret
out
xchg
movsl
xchg
popf
jns
adc
jne
imul
dec
sub
imul
adc
addl
adc
cmp
cmp
mov
mov
xor
push
mov
cmove
adc
push
adc
mov
addb
cmp
cmp
mov
pop
mov
adcb
adc
cmp
cmp
mov
fstps
push
aad
jmp
scas
ret
push
or
test
jb
push
xchg
xchg
cmp
in
ret
addb
adc
cmp
cmp
adc
ret
lock
test
mov
adc
adc
cmp
cmp
mov
std
and
pop
push
pop
or
adc
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
cs
cmp
cmp
xchg
mov
adc
adc
cmp
cmp
mov
fists
add
ds
sbb
adc
pusha
push
addb
adc
cmp
cmp
inc
inc
iret
mov
add
jbe
addb
adc
cmp
cmp
mov
ja
inc
push
mov
imul
inc
add
test
mov
dec
pop
cltd
adc
addb
cmp
cmp
orl
arpl
mov
hlt
xchg
rcrb
aas
push
or
fucom
jnp
fldl
or
lock
cs
in
je
cmp
or
jmp
call
xchg
jne
xlat
out
js
insb
jg
and
mov
addb
adc
cmp
cmp
idivb
stos
xor
je
mov
push
leave
in
movsb
mov
dec
lea
adc
adc
cmp
cmp
dec
mov
ret
xchg
addb
adc
cmp
cmp
add
mov
push
ficompl
mov
mov
addb
cmp
cmp
push
push
mov
lock
rorl
in
inc
aaa
xchg
sub
addb
adc
cmp
cmp
xchg
lds
aas
das
addb
adc
cmp
cmp
add
xor
mov
jo
sbb
adc
lods
test
movsl
jecxz
mov
pop
push
jmp
or
cmp
jp
adc
push
enter
xchg
dec
aam
movsb
ds
xchg
in
pusha
sti
jo
pop
push
arpl
ljmp
repnz
adc
cmp
cmp
xchg
les
push
in
inc
mov
popa
shlb
addb
adc
cmp
cmp
roll
fisubrl
in
cmpsl
inc
or
hlt
les
mov
aaa
gs
dec
or
lock
push
addb
adc
cmp
cmp
mov
stos
ljmp
ja
lret
ds
dec
inc
cmp
imul
daa
cmp
add
icebp
call
daa
je
mov
pop
pop
cwtl
mov
les
ljmp
dec
sub
inc
cmpl
push
pop
cmpsl
mov
jmp
push
or
cld
int
and
out
lea
adc
adc
adc
cmp
cmp
add
filds
mov
outsl
push
sbb
sub
or
rcr
xorl
adc
cmp
cmp
mov
scas
jbe
cmp
adcb
adc
cmp
cmp
mov
lret
ja
addb
adc
cmp
cmp
outsb
in
mov
stos
inc
sahf
jecxz
adc
cld
xor
addb
adc
cmp
cmp
xor
mov
rcll
addb
adc
cmp
cmp
mov
push
jbe
pop
pop
daa
int3
fldenv
repnz
popa
cltd
and
inc
fisubrs
addb
adc
cmp
cmp
icebp
adc
addb
adc
cmp
cmp
adc
lret
inc
push
jmp
inc
inc
mov
xchg
or
addb
cmp
cmp
mov
xchg
mov
pop
fwait
mov
into
sbb
push
mov
adcb
adc
cmp
cmp
mov
sub
sbb
dec
outsb
stos
faddl
or
adc
or
mov
cmp
int
in
push
and
inc
cmp
dec
pushf
leave
movl
or
mov
or
jp
outsl
ret
jae
xor
sub
sbb
addb
cmp
cmp
push
sub
xchg
out
das
gs
stc
dec
jl
mov
inc
test
mov
addb
cmp
cmp
pop
shrb
addl
adcb
adc
cmp
cmp
mov
xchg
sub
hlt
cwtl
jl
pusha
aam
mov
loop
adc
addb
cmp
cmp
mov
add
in
adc
or
ja
adc
xchg
leave
out
fildll
lret
arpl
addb
adc
cmp
cmp
or
pop
mov
xor
sub
sbb
lret
lock
fs
fcomps
xor
loopne
xchg
in
fcmovnbe
outsb
hlt
or
xchg
mov
mov
call
addb
cmp
cmp
mov
ds
in
adc
lock
sub
adc
adc
cmp
cmp
inc
pop
sarl
dec
xchg
repnz
addb
adc
cmp
cmp
inc
addb
adc
cmp
cmp
out
sti
addb
adc
cmp
cmp
sub
pop
fadds
call
loopne
add
mov
or
ret
data16
jo
div
push
mov
adcb
mov
jmp
push
iret
mov
mov
jbe
xchg
nop
pop
pop
addb
adc
cmp
cmp
mov
addb
mov
dec
xor
jg
into
cmpsb
test
adc
adc
cmp
cmp
mov
xchg
jo
cmp
cmpsb
cs
cmp
arpl
stos
sub
rcrl
insl
pushf
cmpsb
addb
adc
cmp
cmp
jae
push
add
movsb
int3
hlt
and
adc
call
stc
stos
lcall
rcl
push
sahf
aam
fmuls
addb
adc
cmp
cmp
and
mov
jae
and
loopne
cmp
xor
bswap
pop
push
mov
xchg
cwtl
cld
mov
idivb
jmp
jno
mov
mov
aaa
jge
addb
adc
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
pushf
add
js
xor
add
roll
out
out
in
in
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
outsl
push
mov
sahf
icebp
mov
fcmovu
pop
addb
adc
cmp
cmp
xchg
pop
lret
pop
out
call
jmp
xchg
jno
sub
popf
rolb
adcb
adc
cmp
cmp
mov
cmp
nop
mov
lcall
sbb
jnp
sbb
adc
adc
cmp
cmp
mov
xor
imul
jmp
call
enter
test
gs
testb
cwtl
fisubl
loop
data16
aad
push
pop
aam
jns
in
outsb
insl
fldenv
addb
adc
cmp
cmp
jge
andl
addb
cmp
cmp
mov
or
adc
stos
movsb
sub
les
shll
add
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
out
dec
cmp
nop
sbb
int
std
fsin
out
outsb
pop
sahf
mov
arpl
adcb
adc
cmp
cmp
mov
adc
inc
add
addb
cmp
cmp
mov
imul
addb
adc
cmp
cmp
dec
add
mov
add
mov
xchg
pop
xorb
adcb
adc
cmp
cmp
mov
dec
addl
addb
cmp
cmp
das
mov
addb
cmp
cmp
cmp
insb
mov
mov
cli
and
mov
rolb
adc
adc
cmp
cmp
ds
adc
adc
adc
cmp
cmp
or
std
jmp
xor
aaa
daa
js
addb
adc
cmp
cmp
stc
cltd
xchg
cmc
mov
mov
outsl
push
inc
cmp
jle
xchg
loope
mov
xchg
mov
mov
jno
int
dec
push
pop
xchg
lods
mov
dec
mov
pusha
pop
imul
mov
push
mov
adc
adc
cmp
cmp
mov
fnsave
roll
mov
or
lea
data16
ds
push
mov
out
mov
ss
addb
adc
cmp
cmp
pop
shl
adc
adc
adc
cmp
cmp
fwait
addb
adc
cmp
cmp
addb
adc
cmp
cmp
lret
jo
test
pop
adc
sub
addb
cmp
cmp
mov
cmp
sub
aaa
jns
jae
xor
sub
dec
add
adc
adc
cmp
cmp
mov
xchg
pop
into
jnp
scas
aam
test
adc
adc
cmp
cmp
mov
fs
fldenv
das
movsl
movb
adc
cmp
cmp
mov
cmc
addb
adc
cmp
cmp
jp
nop
mov
mov
mov
cmp
dec
lea
cmpsb
cmp
addb
adc
cmp
cmp
xchg
mov
jns
movsl
pop
and
push
mov
dec
sar
push
sbb
jl
jp
push
test
insl
int
fs
cld
outsl
mov
inc
mov
int3
fs
mov
push
push
jg
fs
mov
or
pop
lea
cli
dec
mov
fcomps
dec
xor
iret
cmp
insb
in
divl
arpl
mov
mov
adc
mov
enter
sahf
mov
inc
rorl
dec
leave
mov
rorb
cwtl
fsub
es
dec
mov
jae
clc
mov
jbe
sar
jmp
xchg
adc
mov
addb
adc
cmp
cmp
in
sti
je
imul
mov
cmp
adc
adc
cmp
cmp
mov
dec
stc
stc
add
sub
in
jb
mov
cmp
fwait
mov
sub
or
scas
js
addb
adc
cmp
cmp
inc
or
into
loopne
push
test
arpl
or
jl
inc
pop
cltd
mov
fisttpl
and
enter
addb
cmp
cmp
mov
or
push
cmp
adcb
adc
cmp
cmp
mov
mov
pop
js
cmp
jge
push
push
or
dec
in
or
mov
lods
addb
adc
cmp
cmp
out
pop
sub
aam
jmp
hlt
jmp
addb
cmp
cmp
push
lds
jno
test
dec
rorb
and
cmp
or
mov
push
inc
test
cmp
nop
repz
jae
push
pop
out
push
test
incb
sub
insl
push
pop
add
xchg
and
les
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
adc
xlat
loopne
and
aam
pop
addb
adc
cmp
cmp
pop
mov
pop
in
in
jecxz
push
jge
cmc
push
xchg
add
dec
mov
shlb
mov
addb
adc
cmp
cmp
outsb
xchg
inc
xchg
or
push
rorb
inc
jbe
jns
xchg
xchg
xchg
inc
ljmp
insl
movsb
hlt
xorl
cmp
addb
adc
cmp
cmp
out
fbstp
cmp
les
mov
pop
cmp
xchg
orl
ja
xlat
dec
add
adc
adc
cmp
cmp
repz
adc
cmp
and
mov
stos
add
shrb
nop
popa
fbld
jbe
shl
pushf
daa
mov
mov
push
loopne
cmp
mov
mov
or
in
hlt
jmp
push
or
out
out
pop
xor
mov
pop
imul
addb
cmp
cmp
mov
addb
adc
cmp
cmp
aas
cmp
jge
mov
adcb
adc
cmp
cmp
mov
mov
pop
mov
xlat
pop
movsl
mov
addb
adc
cmp
cmp
pop
pop
lods
push
lods
mov
sub
jo
cmpsb
test
mov
outsb
sbb
fstpt
test
insl
jb
movsl
push
xorl
addb
cmp
cmp
lock
cmc
mov
dec
jbe
cmp
divb
mov
add
stc
addb
adc
cmp
cmp
in
addb
adc
cmp
cmp
xchg
xor
push
repz
adc
cmp
cmp
dec
and
ss
add
je
dec
fstl
adc
cld
lods
push
mov
aam
aam
fidivrl
mov
cmp
and
adc
adc
cmp
cmp
mov
addb
adc
adc
cmp
cmp
mov
mov
in
iret
push
std
xlat
lock
int3
jp
movsb
or
idivb
popa
xchg
addb
adc
cmp
cmp
ja
bound
dec
enter
addb
cmp
cmp
cmc
jg
xorb
movsb
mov
aas
adc
sti
pop
sbb
adcb
adc
cmp
cmp
mov
push
add
adc
adc
cmp
cmp
mov
sbb
cmp
lret
addb
cmp
cmp
sub
aam
xchg
lcall
adc
cmp
cmp
mov
cmp
sbb
scas
lds
add
push
aaa
xchg
adc
adc
cmp
cmp
mov
or
pcmpeqw
cmp
adc
adc
cmp
cmp
dec
stc
jbe
dec
out
ret
addb
adc
cmp
cmp
popl
adc
adc
cmp
cmp
popl
cmpsl
push
int3
and
jmp
les
mov
jnp
shlb
jl
cmp
aas
push
shll
mov
lods
fdivr
and
inc
fdivp
xchg
dec
addr16
movsb
mov
fildl
push
out
in
addb
adc
cmp
cmp
test
test
sub
inc
std
dec
add
loope
xchg
leave
call
adc
adc
cmp
cmp
mov
pop
sbb
adc
mov
sub
int3
cmp
into
ds
iret
addb
adc
cmp
cmp
mov
push
adcl
xchg
loope
ret
xchg
jno
dec
out
inc
push
ss
out
mov
enter
stos
das
stos
dec
xor
out
out
jae
pushw
adc
insb
dec
xchg
mov
or
addb
cmp
cmp
les
cld
lret
stos
jp
jp
cmp
fistpll
aam
or
sub
popa
and
sub
daa
jl
loop
addb
cmp
cmp
mov
addb
adc
cmp
cmp
sbb
fwait
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
stc
or
dec
lods
fs
mov
addb
cmp
cmp
mov
pop
jnp
push
adc
push
popf
inc
test
push
rclb
sbbb
add
icebp
fs
idivl
adcb
adc
cmp
cmp
mov
daa
insl
pop
enter
jae
outsb
arpl
cmp
cmp
in
sbb
xchg
xchg
pop
add
pop
xchg
daa
into
imul
or
xor
sub
adc
adc
cmp
cmp
sub
leave
movsl
pop
ret
adc
inc
mov
or
jo
pop
outsb
mov
insb
mov
dec
dec
and
bound
xchg
mov
imul
and
or
rorb
ret
movsl
or
xor
popf
daa
lahf
pop
hlt
arpl
out
xor
mov
xor
xor
addb
cmp
cmp
mov
xor
adc
push
enter
addb
adc
cmp
cmp
sbb
cmp
lds
mov
xor
ljmp
adc
cmp
cmp
mov
je
mov
addb
cmp
cmp
mov
cmp
fld
xor
addb
cmp
cmp
mov
cmp
mov
add
xor
mov
mov
pop
jo
in
nop
jb
xchg
lret
jge
push
adc
xchg
rcll
rclb
sbb
mov
ljmp
mov
dec
mov
push
into
fcompl
rcrb
xchg
aaa
adcb
shl
and
stc
push
dec
jnp
pop
iret
test
das
add
cmp
rcrb
push
out
stc
shll
xchg
addb
adc
cmp
cmp
sub
addb
cmp
cmp
mov
jb
inc
addb
adc
cmp
cmp
sub
xchg
lock
std
fbstp
jge
lods
mov
bound
mov
shl
and
inc
addb
adc
cmp
cmp
in
jb
pop
sbb
cmp
addb
cmp
cmp
mov
movsb
add
insl
ja
mov
dec
cmc
add
mov
push
lods
mov
scas
sub
addb
cmp
cmp
mov
std
lahf
dec
in
sahf
adc
mov
cmp
push
test
stc
xchg
jo
arpl
and
orl
adc
inc
xor
pop
mov
push
cmc
dec
and
adc
adc
cmp
cmp
mov
jp
aaa
jp
in
push
addb
adc
cmp
cmp
in
cmp
adc
adc
cmp
cmp
sbb
push
in
clc
cmp
ljmp
push
sub
inc
xor
movsl
adc
sub
dec
sbb
insl
and
xor
sub
push
jg
mov
xchg
scas
std
aaa
icebp
es
and
test
addb
adc
cmp
cmp
xchg
cmp
jmp
mov
adc
shrb
addb
adc
cmp
cmp
clc
imul
xchg
lcall
add
cmp
cmpsb
filds
adc
adc
cmp
cmp
mov
add
addb
adc
cmp
cmp
fistpll
clc
push
and
shr
xor
jne
and
in
in
stc
dec
add
test
lret
addb
cmp
cmp
mov
stos
fs
jae
clc
jb
mov
lods
sub
js
xchg
mov
cmp
in
or
insl
jnp
mov
addb
adc
cmp
cmp
inc
mov
adc
movsb
mov
addb
cmp
cmp
mov
fwait
and
inc
hlt
lods
test
popa
nop
cltd
adc
mov
mov
xchg
adc
adc
cmp
cmp
mov
push
aam
js
sbb
sub
loopne
add
insb
pop
inc
ret
test
mov
xchg
jne
addb
adc
cmp
cmp
int3
daa
ja
push
mov
movb
dec
addb
adc
cmp
cmp
dec
psllq
adc
iret
xchg
addb
adc
cmp
cmp
fcomps
and
push
out
std
mov
addb
adc
cmp
cmp
lock
out
pop
sbb
popa
mov
movsl
adc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
iret
out
shll
imul
fstpl
lcall
adc
cmp
cmp
mov
add
xchg
mov
aad
pushf
dec
out
mov
fildl
cmc
or
shll
inc
xor
dec
arpl
sbb
lds
adc
adc
cmp
cmp
daa
fisttpl
xor
cwtl
movsl
xor
cmp
repz
sbb
test
and
xchg
ficoml
cmp
xlat
pop
mov
in
jmp
mov
mov
mov
dec
aam
dec
popa
xchg
sub
xor
addb
adc
cmp
cmp
mov
cwtl
clc
test
push
pop
dec
js
jns
jp
flds
sub
addb
cmp
cmp
mov
insl
mov
jp
push
xchg
jp
addb
adc
cmp
cmp
stos
insl
push
mov
pop
jle
sub
repz
pop
loope
rolb
pop
mov
cmp
pop
xchg
mov
out
faddp
mov
xor
jmp
dec
test
add
mov
in
cli
or
decb
aaa
push
xchg
cmp
addb
cmp
cmp
mov
sub
and
iret
iret
addb
adc
cmp
cmp
outsl
mov
mov
push
addb
cmp
cmp
mov
pushf
cli
cmp
cmpsl
addb
adc
cmp
cmp
dec
adc
pop
int
movsl
addb
adc
cmp
cmp
inc
leave
sbb
shrl
mov
xchg
sub
stc
xchg
call
or
sub
int
addb
adc
cmp
cmp
xchg
xchg
std
xor
adc
adc
cmp
cmp
jae
xlat
xor
adc
adc
cmp
cmp
addb
adc
cmp
cmp
mov
mov
jae
pop
pop
mov
inc
add
addb
adc
cmp
cmp
xor
adcb
addb
cmp
adc
adc
cmp
cmp
mov
add
addb
adc
cmp
cmp
dec
outsl
jp
loopne
addb
cmp
cmp
mov
scas
mov
shld
fbstp
push
fs
fwait
aaa
sarl
pop
test
adcb
adc
cmp
cmp
mov
ds
ret
xor
cmp
cmp
ss
scas
out
jp
nop
sbb
cmpl
push
imul
push
orb
into
mov
in
les
jb
xchg
and
jo
and
sub
xlat
and
mov
ss
adcb
adc
cmp
cmp
mov
rorl
addb
cmp
cmp
sub
ljmp
sub
jae
and
mov
sub
pop
out
push
xor
push
rcrb
jb
mov
adc
adc
cmp
cmp
mov
sbb
jne
mov
xchg
mov
xor
adc
adc
cmp
cmp
mov
mov
leave
push
jne
dec
cmp
xchg
loopne
addb
adc
cmp
cmp
xorb
xchg
stc
aam
inc
push
movsb
push
pop
xchg
iret
pop
push
dec
rorl
mov
adcb
adc
cmp
cmp
mov
shrb
fs
dec
bound
lea
and
inc
xchg
mov
adcb
adc
cmp
cmp
mov
sub
add
inc
or
mov
push
sbb
ds
iret
push
push
xchg
icebp
lock
mov
and
sar
pop
subb
jl
inc
into
addb
adc
cmp
cmp
sti
addb
adc
cmp
cmp
xchg
incl
arpl
jl
arpl
pop
sbbb
fisubl
scas
pop
push
lret
addb
adc
cmp
cmp
or
icebp
jnp
mov
dec
es
push
xchg
jae
outsl
scas
xor
cmc
fwait
addb
adc
cmp
cmp
lret
lock
ljmp
add
xchg
xor
mov
test
mov
addb
cmp
cmp
mov
lcall
sub
push
ja
aam
addb
cmp
cmp
mov
fildl
popa
xor
push
je
rolb
adc
cmp
cmp
mov
lods
test
addb
adc
cmp
cmp
flds
sarb
cld
int
ret
ret
aaa
stos
mov
mov
addb
adc
cmp
cmp
or
loopne
rorl
shll
cmp
addb
cmp
cmp
mov
cmp
cmp
addb
adc
cmp
cmp
das
lahf
cmc
inc
addr16
xchg
addb
adc
cmp
cmp
sahf
jb
std
outsl
test
addb
adc
cmp
cmp
push
xchg
stos
and
dec
push
in
cltd
int3
and
inc
ss
mov
xchg
lahf
xchg
dec
pop
negl
pop
int3
mov
mov
addb
cmp
cmp
lods
cmp
pusha
addb
adc
cmp
cmp
xor
mov
sahf
dec
fisubrl
and
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
xchg
adc
adc
cmp
cmp
mov
push
push
fwait
or
addb
cmp
cmp
xchg
push
test
pushf
loop
leave
push
das
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
arpl
addb
adc
cmp
cmp
cld
rcr
lods
push
mov
and
jno
daa
addb
adc
cmp
cmp
or
jbe
mov
andb
addb
cmp
cmp
loop
inc
xchg
adc
in
addb
cmp
cmp
mov
repnz
ss
aad
insl
sti
mov
mov
jl
mov
mov
xor
leave
xchg
fadds
jo
addb
adc
cmp
cmp
adc
cmp
mov
xor
cmpsl
mov
add
addb
adc
cmp
cmp
ja
addb
adc
cmp
cmp
jne
mul
mov
xor
inc
sub
adc
adc
cmp
cmp
mov
filds
dec
pop
sub
repnz
dec
add
shll
ss
inc
es
push
popf
sbb
jmp
cmp
nop
popa
mov
cmpsb
and
addb
cmp
cmp
mov
mov
add
jg
ds
cmp
notl
loopne
fbld
dec
arpl
scas
cld
push
cmp
push
mov
and
hlt
ret
dec
or
roll
mov
hlt
xchg
and
xor
push
cli
addb
adc
cmp
cmp
push
fmul
sbb
addb
cmp
cmp
mul
add
adc
adc
cmp
cmp
es
and
clc
pop
in
hlt
addb
adc
cmp
cmp
push
and
mov
jle
int3
inc
movb
adc
cmp
cmp
mov
jmp
or
test
xchg
xlat
xor
sub
jecxz
add
cmc
cmpsb
mov
adc
adc
cmp
cmp
mov
adc
pop
lret
mov
test
pop
test
or
rcrl
out
rol
sbb
adc
adc
cmp
cmp
xchg
mov
push
out
addb
cmp
cmp
mov
pop
adc
mov
push
inc
stos
cmpsl
mov
repz
rcrl
mov
arpl
fs
roll
loopne
sub
add
pushf
sub
mov
add
lea
xchg
pop
aas
mov
and
addb
adc
cmp
cmp
pop
outsl
dec
mov
jp
fs
push
or
sti
push
addb
adc
cmp
cmp
dec
mov
fidivs
push
inc
lea
mov
adc
xchg
dec
xor
push
pop
xor
addb
cmp
cmp
fcoml
adc
rolb
scas
addb
adc
cmp
cmp
mov
mov
push
test
mov
adc
insb
neg
mov
add
jnp
je
aam
dec
fiaddl
divb
push
imul
les
sbb
cltd
mov
and
sbb
gs
data16
dec
lret
cmpsb
adc
addb
adc
cmp
cmp
clc
push
xchg
sub
xchg
imul
cs
fsubp
dec
jmp
adc
adc
adc
cmp
cmp
test
arpl
lds
adcb
adc
cmp
cmp
mov
xor
in
std
addb
adc
cmp
cmp
jae
lea
cld
addb
adc
cmp
cmp
mov
xchg
jp
mov
shrb
xchg
into
loope
sbb
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
mov
add
sub
jno
dec
add
pop
xor
adc
adc
cmp
cmp
cmpsb
sub
adc
adc
cmp
cmp
jmp
add
adc
adc
cmp
cmp
mov
adc
scas
push
addb
cmp
cmp
mov
imul
and
mov
xchg
addb
adc
cmp
cmp
mov
iret
popa
lcall
addb
adc
cmp
cmp
adc
addb
cmp
cmp
aam
repz
cmp
jns
lcall
mov
add
inc
dec
aas
mov
adc
adc
adc
cmp
cmp
test
popa
cs
dec
jbe
pop
or
pop
push
addr16
bound
adc
adc
cmp
cmp
addb
adc
cmp
cmp
fiadds
and
pop
jno
sbbl
mov
in
test
fs
add
dec
addr16
movsl
sbb
mov
popa
std
ret
imull
fwait
mov
dec
fiadds
addb
adc
cmp
cmp
testl
rcrb
jp
loop
fucomp
idivl
addb
adc
cmp
cmp
mov
adc
adc
or
cmp
sub
adc
adc
in
addb
adc
cmp
cmp
call
addb
cmp
cmp
mov
icebp
xor
enter
pop
jmp
adc
adc
cmp
cmp
mov
xor
insl
cmpsb
outsl
push
stos
inc
addb
adc
cmp
cmp
push
sub
addb
adc
cmp
cmp
cmpsb
or
inc
dec
outsb
jns
imulb
lods
mov
pop
ds
hlt
push
inc
popa
push
addr16
rcr
mov
les
inc
int
mul
rol
xchg
cmc
push
add
insl
ljmp
pop
in
pop
sbb
adc
adc
cmp
cmp
testl
or
and
addr16
addb
adc
cmp
cmp
lahf
xchg
nop
adc
xchg
fistl
lret
leave
scas
add
sbb
sub
sub
xchg
mov
push
mov
das
addb
adc
cmp
cmp
daa
lret
fnsave
adc
addb
cmp
cmp
mov
iret
dec
cmp
lahf
addb
adc
cmp
cmp
aas
dec
fstpl
jge
xor
sarb
cmc
ljmp
adc
adc
cmp
cmp
popf
outsl
mov
loope
pop
jmp
inc
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
imul
xchg
and
dec
out
xchg
jg
mov
addb
cmp
cmp
mov
std
or
test
lock
add
pop
push
stos
push
repz
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
dec
mov
cmpl
js
scas
test
addb
adc
cmp
cmp
out
sbb
jne
out
cs
adcb
adc
cmp
cmp
mov
xchg
lahf
add
out
insl
jno
daa
pushf
movsl
adc
push
fcmovne
and
jmp
pop
fidivrl
sbb
imul
addb
cmp
cmp
mov
xor
sub
inc
jns
outsl
dec
enter
cwtl
andb
sub
adc
adc
cmp
cmp
mov
inc
jbe
mov
leave
pop
sti
xchg
inc
and
dec
sub
xchg
mov
addb
cmp
cmp
mov
push
aas
insb
cmp
shlb
adc
xchg
addr16
divl
sub
addb
adc
cmp
cmp
movsl
movsb
shrl
inc
pop
sub
xchg
cmpl
jns
mov
adc
adc
cmp
cmp
mov
pop
addb
adc
cmp
cmp
inc
dec
lea
mov
addb
adc
cmp
cmp
sbb
push
cmp
ds
mov
cmp
jp
addb
adc
cmp
cmp
cld
out
fisubs
mov
cmpsb
dec
inc
pop
xchg
jno
pop
lret
xchg
pop
inc
and
addb
adc
cmp
cmp
inc
shlb
leave
je
pop
sbb
addb
adc
cmp
cmp
cwtl
shlb
mov
rcr
dec
add
lret
loop
not
cli
gs
ror
dec
mov
fsub
fcoms
addb
cmp
cmp
shll
mov
inc
xchg
es
lods
cmp
jge
cmpb
addb
cmp
cmp
stc
movsl
ljmp
mov
xchg
iret
jg
xchg
adc
adc
cmp
cmp
lea
in
loop
jmp
dec
lock
clc
sub
dec
pop
aaa
mov
xchg
mov
addb
cmp
cmp
mov
xchg
std
or
ret
jmp
cmp
cli
jg
or
arpl
jo
fimuls
cmp
jmp
addb
cmp
cmp
mov
add
xchg
movsb
cmp
addb
cmp
cmp
mov
push
lods
dec
jns
sbb
cmc
in
mov
push
ds
jg
addb
adc
cmp
cmp
mov
ss
pop
xchg
test
adcb
adc
cmp
cmp
mov
dec
inc
xor
mov
push
stos
mov
stos
inc
xchg
sub
adc
push
lea
dec
jbe
outsl
addb
adc
cmp
cmp
inc
mov
es
in
daa
xchg
or
sbb
cmp
add
mov
adc
adc
cmp
cmp
mov
xchg
shr
mov
rorb
repnz
and
adcb
pop
test
mov
addb
cmp
cmp
es
or
mov
jmp
push
clc
addr16
sbb
xchg
loop
test
adc
adc
cmp
cmp
mov
inc
fildl
mov
addb
cmp
cmp
mov
pusha
std
addb
adc
cmp
cmp
fidivrs
sbb
int
pusha
sbb
mov
pop
sahf
fs
adc
mov
lret
pusha
xchg
ret
pop
cwtl
push
into
mov
add
push
dec
mov
adc
dec
inc
stc
lods
mov
mulb
mov
inc
orl
icebp
negl
pop
aam
mov
ss
push
movsb
or
push
xchg
mov
and
clc
and
shl
mov
addb
in
out
addb
adc
cmp
cmp
cld
mov
cmpsb
mov
into
sbb
out
push
jb
cmp
addb
adc
cmp
cmp
pop
jl
pushf
into
pop
dec
or
addb
adc
cmp
cmp
mov
popf
push
cmp
addb
cmp
cmp
mov
jnp
jmp
loop
rolb
adc
cmp
cmp
mov
jmp
pop
adc
inc
adcb
xchg
sarl
adcb
adc
cmp
cmp
mov
mov
shll
mov
loope
dec
mov
cmp
pop
addb
adc
cmp
cmp
lock
xor
lods
jne
cmpsl
cmpsl
add
jns
dec
inc
cmp
outsb
rolb
adc
adc
cmp
cmp
sbb
xlat
aam
aad
jno
out
push
jb
ljmp
fidivrl
cmp
or
inc
shlb
inc
cmp
inc
mov
cmp
dec
xor
movsb
cmp
cmpl
mov
lds
popf
xchg
adc
adc
cmp
cmp
repz
in
adc
jns
outsb
arpl
pop
sahf
pushf
rol
jo
jge
int3
or
ds
push
rcrl
pop
cli
es
mov
test
add
pop
adc
in
add
sub
addb
cmp
cmp
mov
xor
shll
fidivrl
add
adcb
adc
cmp
cmp
mov
icebp
cwtl
sar
mov
cltd
sub
aad
mov
orb
das
sub
cld
push
outsb
dec
jecxz
xchg
bnd
sbb
sbb
pop
lcall
addb
adc
cmp
cmp
or
adcb
adc
cmp
cmp
mov
pop
hlt
clc
mov
dec
mov
addb
adc
cmp
cmp
imul
sbb
scas
and
fcmovnbe
mov
addb
cmp
cmp
mov
xchg
cmc
sbb
in
dec
pop
test
and
pop
sub
cmp
addr16
mov
addb
cmp
cmp
mov
mov
dec
ss
fnstsw
mov
adc
adc
cmp
cmp
mov
shl
call
xchg
sbb
cld
arpl
insl
sub
mov
mov
addb
cmp
cmp
mov
adc
imul
loop
inc
gs
cmp
insl
addb
adc
cmp
cmp
push
movsb
xchg
mov
pushf
ficompl
mov
int
js
jne
in
push
into
mov
or
addb
adc
cmp
cmp
adc
xchg
aas
or
test
adc
jbe
inc
jmp
add
lds
adcb
dec
mov
jnp
dec
fcompl
addb
adc
cmp
cmp
jne
sub
and
shrb
sbb
adc
adc
cmp
cmp
cmp
addb
adc
cmp
cmp
dec
xchg
daa
inc
iret
addb
adc
cmp
cmp
mov
or
ret
test
cmp
adc
adc
cmp
cmp
mov
jge
enter
addb
adc
cmp
cmp
mul
stc
push
mov
jmp
icebp
lods
test
xchg
cmp
out
mov
inc
inc
dec
out
pop
rorl
bound
jo
test
cmpl
roll
lods
lret
shll
hlt
mov
sbb
cmp
mov
clc
shl
or
mov
arpl
adc
adc
cmp
cmp
in
mov
inc
xor
sbb
aaa
sti
test
or
mov
lahf
orb
dec
ss
fwait
mov
sbb
pop
shlb
adc
adc
cmp
cmp
mov
movsb
add
pop
cmpsl
out
mov
movsb
mov
loopne
lods
mov
xor
sti
xchg
add
mov
dec
mov
mov
or
mov
into
pop
jl
addb
cmp
cmp
mov
ljmp
xchg
mov
cmpsl
xchg
xor
pop
scas
and
xchg
sbb
adcb
adc
cmp
cmp
mov
es
addb
cmp
cmp
mov
addb
adc
cmp
cmp
jae
push
and
adc
adc
cmp
cmp
sahf
xor
pop
inc
addb
adc
cmp
cmp
rorl
sbb
fwait
push
push
test
jp
addr16
sahf
int
lret
push
stc
fs
test
jb
scas
adc
xchg
mov
pushf
cmp
pop
adc
and
cmc
jg
cwtl
pop
fwait
dec
incl
push
cmp
jae
std
sub
adc
adc
cmp
cmp
mov
xchg
ds
gs
mov
pop
or
mov
inc
int3
push
cmp
mov
adc
jp
push
dec
push
dec
sbb
push
test
hlt
cmp
sub
imull
addb
adc
cmp
cmp
pushf
call
addb
adc
cmp
cmp
push
das
addb
adc
cmp
cmp
aad
mov
pop
nop
andb
pop
adc
out
jecxz
and
dec
push
enter
jo
or
jecxz
test
mov
mov
addb
adc
cmp
cmp
int
jnp
in
lahf
int
aas
outsl
fwait
jno
xchg
addb
adc
cmp
cmp
lret
sub
std
or
adc
adc
cmp
cmp
mov
xor
push
iret
mov
fxch
sbb
testb
sbb
jp
popf
jae
and
cmc
outsb
sbb
es
int
cmp
addr16
inc
pop
shl
dec
adc
jmp
mov
xor
sti
test
add
aaa
mov
scas
jmp
adc
lcall
adc
cmp
cmp
mov
xor
pop
sub
sub
enter
pop
jle
lahf
add
lods
in
sub
fldln2
mov
sbb
addb
adc
cmp
cmp
pop
fnsave
fucomip
sub
repnz
subb
int
cmpsb
bound
adc
adc
cmp
cmp
pop
jecxz
mov
loopne
jg
jmp
cwtl
cli
sub
mov
jb
jle
fstpl
stc
fwait
popa
lret
lret
repz
sbb
leave
out
sti
cli
xchg
stos
addb
adc
cmp
cmp
das
xor
sahf
dec
test
mov
and
movb
adc
cmp
cmp
mov
cmp
xchg
rorb
pop
sub
pop
out
in
repz
int
cmp
into
addr16
addb
cmp
cmp
mov
push
sub
stos
iret
aaa
negb
xchg
xchg
js
inc
add
inc
jl
ret
mov
sti
nop
sti
cld
mov
fistpll
inc
xor
adc
adc
cmp
cmp
mov
pop
clc
and
mov
addb
adc
cmp
cmp
pop
popf
into
jae
das
adc
lods
or
lds
push
scas
dec
sar
cmp
int
imulb
and
addb
adc
cmp
cmp
push
mov
adc
adc
cmp
cmp
mov
push
mov
mov
mov
ljmp
shr
popf
mov
stc
int3
push
movsb
inc
or
xor
gs
sbb
xchg
adcb
adc
cmp
cmp
mov
xchg
cmovl
out
jmp
cwtl
fiadds
inc
adc
ds
jnp
cmpsl
ljmp
mov
or
xlat
sbb
jns
out
fiadds
or
fbld
sub
xor
pop
sbbb
push
rorb
push
cmpb
xor
addb
cmp
cmp
mov
fstl
ficoml
data16
add
adc
push
sub
mov
pop
push
fcmovu
mov
sbb
push
sbb
and
out
clc
rclb
dec
mov
xchg
sbb
stos
lcall
bound
popa
sub
add
rcrb
mov
js
jecxz
pushf
cld
jg
imul
and
data16
stc
dec
adc
lds
mov
push
jge
mov
arpl
ret
add
adc
dec
and
mov
xor
lcall
mov
filds
add
js
xlat
test
and
movsl
push
lret
mov
stos
dec
addb
adc
cmp
cmp
cmp
cld
jbe
mov
or
adc
adc
cmp
cmp
mov
imul
pop
dec
dec
and
xorl
adc
mov
sub
outsb
mov
arpl
or
out
out
jb
addb
adc
cmp
cmp
jnp
xlat
pop
js
sub
mov
xor
adc
fmul
mov
arpl
jb
mov
mov
addb
cmp
cmp
cmpl
addb
cmp
cmp
mov
pusha
cmc
add
scas
addl
adc
cmp
cmp
mov
lods
addb
adc
cmp
cmp
outsb
mov
addr16
jg
fcoml
or
cmp
pop
addb
adc
cmp
cmp
xchg
into
enter
ss
int3
into
and
mov
xor
inc
jmp
lcall
adc
cmp
cmp
mov
xlat
push
pop
xor
mov
mov
push
jg
clc
or
mov
inc
jo
inc
rcrl
jo
test
inc
mov
iret
bound
ret
into
shrl
xlat
mov
cli
lcall
adc
cmp
cmp
mov
fcomi
dec
inc
adc
adc
adc
cmp
cmp
mov
fdivrl
addb
adc
cmp
cmp
push
jl
pushf
sub
popf
stos
shl
das
push
das
sbb
xchg
inc
fmull
lahf
addb
adc
cmp
cmp
mov
and
mov
leave
in
fst
nop
shlb
mov
orb
dec
adc
jb
outsb
je
mov
mov
lods
and
add
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
mov
pop
shll
in
int3
ss
sbb
lcall
fst
sbb
into
push
test
aam
lds
adc
adc
cmp
cmp
ds
push
out
push
push
pop
sbb
repz
addb
cmp
cmp
pop
push
push
pop
movsl
test
mov
jne
roll
inc
and
mov
mov
adc
int
stos
loopne
addb
cmp
cmp
mov
cmpsb
dec
adc
addb
cmp
cmp
mov
lret
ja
fsubrl
addb
adc
cmp
cmp
adcb
adc
out
pop
adc
in
out
enter
addb
adc
cmp
cmp
bound
xchg
jp
adc
adc
or
xorl
adcb
adc
cmp
cmp
mov
imul
hlt
dec
pop
test
inc
movsl
cmp
jle
in
mov
push
dec
out
repz
lods
sub
mov
addb
cmp
cmp
mov
xchg
cmpsl
adc
clc
rolb
jp
faddp
jecxz
adc
jle
mov
pop
dec
repz
xchg
bt
sar
stos
xchg
xor
adc
adc
cmp
cmp
mov
inc
popf
lret
addb
cmp
cmp
mov
pop
addb
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
scas
stos
pushf
clc
cmp
popf
inc
das
cmp
sbb
cmpl
lods
sub
adc
adc
cmp
cmp
mov
mov
sbb
fisubs
jno
and
or
add
not
cmp
subb
pop
movsl
or
dec
bound
xor
ljmp
lahf
rolb
icebp
ljmp
dec
in
xchg
mov
lods
sbb
inc
call
imul
push
cmp
fsubl
inc
test
push
lret
pusha
roll
adc
cmp
cmp
mov
jle
into
fisttps
inc
jns
shlb
mov
test
xor
aad
mov
sarb
rorl
arpl
cmpsb
fs
imul
adc
adc
cmp
cmp
movsb
out
cmpsb
xchg
fcmovb
stos
add
mov
mov
and
adcb
adc
cmp
cmp
mov
dec
xchg
in
or
insl
sub
dec
mov
xor
cmpsb
lcall
addb
cmp
cmp
mov
mov
cmpsb
push
mov
sbbl
clc
addb
adc
cmp
cmp
and
inc
mov
mov
mov
dec
cli
in
dec
js
addb
adc
cmp
cmp
ret
add
stc
cmp
iret
icebp
call
hlt
fisubl
lea
in
add
sti
xchg
addb
cmp
cmp
mov
addr16
lea
xchg
imul
test
adc
push
fucomip
lret
addb
cmp
cmp
in
in
mov
push
dec
mov
addb
adc
cmp
cmp
jge
cmp
cmpsb
cmpsb
cmp
insb
or
pop
repnz
pop
cmp
inc
or
push
icebp
nop
adc
adc
outsb
ss
push
sub
jle
div
xor
cwtl
lret
addb
cmp
cmp
inc
addb
adc
cmp
cmp
movsb
xor
mov
xchg
sbb
adc
adc
cmp
cmp
in
movsl
cmp
jle
flds
adc
adc
cmp
cmp
ljmp
iret
add
mov
adc
lret
cmpsl
jbe
xor
or
test
testl
cmp
insb
cltd
push
adc
les
addb
adc
cmp
cmp
xchg
and
push
add
stos
std
sbb
addb
adc
cmp
cmp
xchg
lahf
in
jecxz
outsb
sbb
scas
and
addb
adc
cmp
cmp
lret
cmp
pop
jne
mov
mov
leave
inc
into
pop
and
mov
jae
js
addb
adc
cmp
cmp
fidivl
mov
into
xchg
dec
push
test
cmp
iret
xchg
xor
adc
int3
hlt
push
and
sub
add
fisttpll
adcb
adc
cmp
cmp
mov
jge
insl
push
aad
test
sub
cmp
vmread
sub
in
js
mov
arpl
in
cld
pop
leave
lods
jnp
fistps
lret
das
out
fsubr
rol
cli
cwtl
enter
addb
adc
cmp
cmp
incl
out
ror
add
adcb
adc
cmp
cmp
mov
cmc
cmpsl
jbe
and
popf
push
repz
adc
adc
cmp
cmp
inc
ret
xchg
sub
mov
jp
ljmp
xchg
pop
dec
jg
fisttps
in
push
ret
or
cmp
sub
jmp
addb
cmp
cmp
mov
xchg
mov
mov
cld
cwtl
mov
sub
mov
rclb
push
call
mov
mov
adc
jno
fsubrl
pop
jae
insl
rol
popl
mov
adcb
adc
cmp
cmp
mov
in
cwtl
xor
pop
lock
cmp
adc
adc
cmp
cmp
mov
push
pop
cmp
in
imull
or
roll
gs
gs
addb
adc
cmp
cmp
add
lods
scas
xor
pop
lock
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
cmp
iret
je
add
lds
leave
xorl
icebp
add
lret
dec
mov
loop
xchg
inc
les
cmpsl
sub
sbb
jno
ret
push
jae
cmpsl
ss
out
int
sbb
pop
in
cwtl
std
dec
icebp
add
fstpt
adc
adc
cmp
cmp
mov
rcrl
xchg
in
mov
test
or
popa
lds
adc
adc
cmp
cmp
rclb
leave
mov
lea
stos
stos
aad
jbe
jae
test
addb
cmp
cmp
mov
rorl
addb
adc
cmp
cmp
arpl
rclb
popa
cli
cmpl
js
xor
push
cmp
outsb
dec
mov
pop
mov
mov
or
pop
pop
push
adc
leave
push
push
sti
jbe
addb
cmp
cmp
mov
inc
addb
adc
cmp
cmp
ss
add
test
loopne
xor
dec
sbb
sbb
adc
adc
cmp
cmp
mov
repz
jae
or
dec
mov
mov
adc
addb
adc
cmp
cmp
insl
mov
addb
adc
cmp
cmp
push
out
and
mov
aad
inc
pop
int
addb
adc
cmp
cmp
or
lret
cmpsb
arpl
pop
cld
lret
aas
push
sub
insl
jns
stos
xor
jge
push
rcl
arpl
and
adc
adc
cmp
cmp
push
mov
sub
jp
cmp
sub
pop
movsl
popl
adc
adc
cmp
cmp
les
mov
xorb
adcb
adc
cmp
cmp
mov
dec
loop
xchg
mov
out
nop
cmpsb
add
addb
cmp
cmp
mov
xor
addb
cmp
cmp
icebp
ja
xchg
push
xchg
pusha
jno
dec
pop
cmc
push
and
adcb
adc
cmp
cmp
mov
lock
adc
cmp
cmp
sbb
loopne
scas
ljmp
imul
adcb
adc
cmp
cmp
mov
xor
lea
stos
cmp
sbb
jp
xchg
sti
addb
adc
cmp
cmp
shr
cmp
addb
adc
cmp
cmp
stos
mov
adcb
adc
cmp
cmp
mov
mov
xchg
cmp
inc
pop
adc
inc
cmp
push
push
push
add
fldenv
cmc
and
push
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
sub
pop
jmp
fcoml
pop
test
scas
fsubrs
inc
dec
mov
sub
imul
mov
addb
adc
cmp
cmp
sbb
adc
mov
inc
out
fidivrs
adc
sahf
jmp
out
sub
jae
psubusw
addb
cmp
cmp
mov
hlt
inc
sbb
inc
cvttps2pi
test
dec
loop
lahf
loope
addb
cmp
cmp
mov
es
lock
adc
cmp
cmp
inc
pop
push
nop
mov
pop
push
pop
sbb
xchg
pop
or
adc
adc
cmp
cmp
ror
inc
lock
rcrb
cmp
cmpsl
push
pusha
dec
addb
adc
cmp
cmp
pop
inc
in
cmpb
adc
adc
cmp
cmp
inc
jbe
adc
mov
cwtl
pop
mov
jge
pop
mov
sub
adcb
adc
cmp
cmp
mov
sbb
mov
popl
in
jae
push
or
xchg
dec
das
dec
xchg
das
js
xor
pushf
js
clc
jbe
adc
shlb
les
addb
adc
cmp
cmp
pop
pop
bound
adc
xchg
pop
mov
add
adcb
adc
cmp
cmp
mov
xor
sub
mov
aas
add
jns
mov
addb
adc
cmp
cmp
cltd
mov
shr
push
ret
aas
mov
and
sub
jo
lahf
inc
sbb
jno
iret
pusha
cmpsl
jle
cmp
hlt
or
xchg
gs
jnp
rcrb
add
adc
adc
cmp
cmp
sbb
push
ja
xor
cmpsl
orl
mov
xor
out
aad
mov
cmp
addb
adc
cmp
cmp
fidivrl
test
inc
imul
dec
pop
es
pop
jmp
dec
pop
fimull
cli
xchg
rolb
adc
cmp
cmp
mov
sbb
lock
and
dec
test
sbb
sub
adc
adc
cmp
cmp
jo
and
clc
lock
dec
out
lds
lds
push
or
imul
addb
adc
cmp
cmp
in
mov
outsb
lahf
scas
arpl
int3
fcompl
in
mov
call
out
scas
adc
cs
adc
adc
cmp
cmp
outsl
fwait
jecxz
add
jne
sub
mov
int3
mov
sarl
fstl
in
mov
pop
jge
clc
xor
addb
cmp
cmp
mov
adc
mov
jl
mov
and
loopne
push
jae
fidivrl
popa
push
jg
sti
mov
push
cmovs
mov
addb
adc
cmp
cmp
and
incb
les
adc
adc
cmp
cmp
mov
into
and
cmp
sbb
fisubrs
test
lahf
xchg
fwait
mov
sarl
into
shl
mov
mov
pop
das
outsb
sbb
roll
in
push
or
adcb
adc
cmp
cmp
mov
push
rcrb
inc
test
insb
dec
pop
or
inc
cmp
shrl
fistpll
sub
mov
addb
cmp
cmp
pop
roll
in
cld
push
mov
mov
rorb
sahf
outsl
pop
notb
adc
addb
adc
cmp
cmp
fildl
adc
adc
cmp
cmp
pop
xor
cmp
pop
xchg
push
pop
and
jl
leave
and
push
rolb
adc
adc
cmp
cmp
insb
jecxz
addb
adc
cmp
cmp
ficomps
aad
xor
inc
aad
push
sub
adcb
adc
cmp
cmp
mov
dec
pop
scas
mov
cwtl
cmp
pop
pop
sti
fistps
adc
xchg
jg
push
mov
test
sub
jmp
out
mov
mov
std
mov
fildll
push
dec
xchg
xor
xchg
fiadds
adc
adc
cmp
cmp
mov
aas
mov
iret
push
or
mov
adc
pop
ss
addb
cmp
cmp
add
push
push
call
add
rclb
mov
jecxz
and
lods
bound
insb
pop
xchg
jg
sub
cmp
pop
sub
adcb
adc
cmp
cmp
mov
pop
dec
cmp
addr16
gs
mov
xor
ret
mov
popa
andl
mov
addb
adc
cmp
cmp
outsl
xor
adc
mov
scas
dec
jp
addb
adc
cmp
cmp
stc
test
into
fbstp
addb
adc
cmp
cmp
lds
mov
addb
cmp
cmp
mov
ljmp
and
addb
adc
cmp
cmp
sub
shl
mov
and
insl
mov
xor
adcb
adc
cmp
cmp
mov
mov
dec
test
dec
rcrb
dec
addb
adc
cmp
cmp
sti
insl
sub
rol
xor
sub
cs
cmp
out
or
cmp
push
dec
in
rol
addb
adc
cmp
cmp
popf
sbb
fldt
leave
dec
add
mov
stc
push
stos
addb
adc
cmp
cmp
cltd
push
mov
sbb
sub
imul
xor
shll
cmp
insl
cmc
addb
adc
cmp
cmp
enter
pop
jp
es
mov
lcall
adc
mov
in
sbb
pusha
mov
addb
cmp
cmp
mov
test
ljmp
adc
cmp
cmp
mov
ret
mov
cmc
les
inc
movsl
les
aaa
addb
adc
cmp
cmp
test
popf
daa
mov
mov
sub
xor
pushf
dec
jp
les
ds
mov
sahf
sarb
nop
lea
addb
cmp
cmp
mov
sub
lods
das
addb
adc
cmp
cmp
adc
adc
adc
dec
cwtl
cmp
aas
nop
inc
cs
jmp
addb
cmp
cmp
mov
adc
xor
in
push
dec
add
jmp
aas
outsb
mov
mov
cld
sub
addb
adc
cmp
cmp
inc
fcmovb
sti
mov
outsl
sti
lods
mov
mov
add
xchg
mov
mov
sbb
addb
adc
cmp
cmp
jmp
push
sbb
xchg
in
dec
addb
adc
cmp
cmp
lea
push
mov
dec
pop
mov
mov
addb
cmp
cmp
mov
rcl
and
jno
push
scas
pop
in
popf
jg
repz
inc
push
fdivrl
repz
cld
cltd
inc
mov
or
repz
adc
cmp
cmp
pop
xchg
cltd
orb
pushf
imul
xchg
mov
and
adc
adc
cmp
cmp
dec
adc
xor
adc
adc
cmp
cmp
lcall
xchg
addb
adc
cmp
cmp
cmc
mov
xchg
out
repz
out
or
adcb
adc
cmp
cmp
mov
repnz
cmpsb
inc
adc
jmp
sub
or
fidivl
dec
ljmp
sub
and
or
test
lds
add
nop
test
test
imul
mov
movsb
mov
cmp
push
cmp
jle
sti
mov
xchg
andl
adc
orb
insb
sarl
adc
lods
mov
jg
jmp
fcoml
pop
xchg
test
push
jo
stos
push
out
outsb
addb
adc
cmp
cmp
enter
adcb
adc
cmp
cmp
mov
sarb
push
jnp
inc
inc
or
shll
test
test
mov
addb
adc
cmp
cmp
aad
fbstp
hlt
loope
or
addr16
data16
addb
adc
cmp
cmp
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
fldcw
je
mov
sar
jmp
addb
cmp
cmp
mov
add
in
adc
ret
add
or
or
insb
out
cmpsb
mov
ja
lods
fs
loope
mov
incb
adc
adc
cmp
cmp
sbbl
push
pop
sub
cld
arpl
fs
insl
lcall
dec
sub
and
xchg
push
xchg
cmp
and
jle
push
aad
mov
sub
in
in
mov
and
cmp
addb
cmp
cmp
addb
xchg
add
fiadds
mov
cwtl
aad
dec
sti
addb
pop
lcall
dec
addb
adc
cmp
cmp
pop
mov
inc
lret
loop
mov
in
clc
push
push
aas
loopne
addb
cmp
cmp
mov
pop
incb
js
enter
mov
addb
adc
cmp
cmp
outsb
adc
std
stos
addb
adc
cmp
cmp
in
adc
lods
xchg
inc
in
out
fistpll
int
sub
je
and
add
dec
cmp
cmc
in
jb
and
jecxz
dec
adc
out
psubd
arpl
pop
lods
and
cs
pushf
mov
fldcw
dec
xor
arpl
mov
nop
lret
addb
adc
cmp
cmp
fwait
sbb
mov
jnp
or
xlat
cmp
das
dec
pop
sbb
cmp
nop
dec
adc
insb
addb
adc
cmp
cmp
scas
mov
int
call
lods
mov
stos
insb
mov
mov
mov
pop
push
adc
in
or
adc
add
gs
fistpll
pop
ljmp
xorb
addb
cmp
cmp
stos
mov
pop
int3
iret
iret
push
hlt
movsl
addb
adc
cmp
cmp
xor
adc
adc
cmp
cmp
pushf
insb
test
rorl
sub
lods
jno
pop
repnz
out
rcrb
ss
xchg
mov
in
aaa
lret
scas
pop
xchg
pusha
sbb
dec
mov
addb
cmp
cmp
mov
leave
addb
adc
cmp
cmp
sbb
cltd
enter
cmp
daa
lret
addb
cmp
cmp
mov
jo
ret
and
dec
lods
or
repz
add
addb
adc
cmp
cmp
hlt
std
add
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sbb
inc
add
mov
ljmp
bound
scas
imul
cmpsb
mov
sub
adc
adc
cmp
cmp
jns
mulb
cmc
ret
jns
leave
shl
mov
imul
addb
cmp
cmp
mov
jne
add
addb
adc
cmp
cmp
and
movl
lea
adc
adc
cmp
cmp
mov
cmpl
mov
fmull
aam
addb
cmp
cmp
mov
pop
loopne
pop
ss
mov
ret
mov
loopne
addb
cmp
cmp
mov
pop
std
xchg
push
fdivp
mov
adc
xchg
aaa
push
sbbb
cmp
imul
xor
out
decb
and
lcall
xor
jne
adc
dec
imul
hlt
pop
insl
test
loopne
lea
push
mov
and
ja
dec
mov
jle
or
iret
sbb
cmpsl
lock
mov
and
adcb
adc
cmp
cmp
mov
sub
jo
dec
xchg
xchg
cwtl
or
mov
daa
loope
popa
imul
ret
sbb
mov
arpl
insl
ret
mov
sub
lds
fisttpl
jo
jne
mov
or
loop
mov
jno,pn
inc
pusha
cs
inc
mov
xor
adc
xchg
test
mov
add
std
adc
push
mov
push
fwait
lock
jmp
es
ret
aas
mov
into
insb
cmc
add
jl
ljmp
test
addb
cmp
cmp
mov
dec
push
sahf
outsl
xchg
insb
std
sub
inc
ret
addl
add
stos
hlt
jl
add
adc
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
push
shll
addb
adc
cmp
cmp
test
and
outsb
inc
sarb
push
addb
adc
cmp
cmp
roll
addb
cmp
cmp
addr16
ljmp
fmulp
fmuls
adc
adc
cmp
cmp
mov
or
dec
icebp
fsubrl
xchg
subl
inc
test
and
sub
fisttps
jg
aas
aam
jle
mov
inc
clc
xchg
in
jae
or
daa
pop
addb
adc
cmp
cmp
repnz
cmp
sbb
shlb
mov
sarb
sub
addb
adc
cmp
cmp
arpl
adc
adc
cmp
cmp
lcall
mov
xchg
and
cld
mov
cwtl
lahf
sbb
jae
mov
aad
push
fildll
addb
cmp
cmp
mov
mov
cmp
addb
adc
cmp
cmp
in
aas
loope
pusha
pusha
mov
loopne
cmpsb
and
mov
addb
adc
cmp
cmp
ret
pop
mov
bound
jae
xor
xor
addb
cmp
cmp
mov
sub
rolb
push
pop
insb
add
addb
adc
cmp
cmp
push
xchg
int3
addb
adc
cmp
cmp
sub
xor
rcll
adc
sahf
adcb
call
in
addb
adc
cmp
cmp
adc
lds
cmp
addb
cmp
cmp
sub
ss
test
addb
cmp
cmp
stos
cmp
xor
cmp
test
pop
addb
adc
cmp
cmp
lret
js
lahf
insl
ffree
fs
sub
ret
cmp
insl
dec
int3
popa
pushf
pop
xchg
xchg
pop
dec
sub
mov
cmp
adc
adc
cmp
cmp
mov
mov
pushf
in
or
icebp
insl
jge
paddd
dec
cmpsl
add
inc
xor
jae
mov
movsl
dec
mov
incl
sub
addb
adc
cmp
cmp
mov
inc
and
push
mov
mov
or
fdiv
jbe
and
add
into
and
jb
jne
inc
les
sbb
scas
mov
pop
sbb
rolb
addb
cmp
cmp
xchg
add
push
les
adc
adc
cmp
cmp
mov
xchg
push
sti
outsl
pusha
mov
icebp
dec
push
shll
nop
mov
pop
dec
mov
outsl
inc
mov
inc
das
lret
ja
mov
fidivs
mov
mov
test
adc
das
mov
aaa
addl
enter
addb
cmp
cmp
mov
fdivs
repz
adc
cmp
cmp
xchg
jmp
sar
xchg
xchg
dec
xor
xchg
lods
xor
inc
insb
cli
fstpt
out
mov
mov
test
mov
mov
lock
adc
adc
cmp
cmp
sbb
xchg
mov
ret
aam
inc
add
fbld
push
lods
sub
add
add
inc
addb
inc
sbb
cmp
mov
jne
lods
das
addb
adc
cmp
cmp
movsb
shl
loope
addb
cmp
cmp
mov
dec
fdivs
cmp
adcb
adc
cmp
cmp
mov
enter
icebp
mov
addb
adc
cmp
cmp
push
jae
xchg
insb
es
push
mov
push
cmp
test
sahf
or
addb
cmp
cmp
mov
mov
jo
dec
xchg
insb
jecxz
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
imul
mov
xchg
clc
jns
dec
addb
adc
cmp
cmp
jge
pop
ret
sahf
movsb
test
scas
je
loope
gs
test
xor
scas
add
lahf
fsts
out
pusha
hlt
loopne
sub
shlb
mov
addb
cmp
cmp
mov
lds
mov
and
test
addb
adc
cmp
cmp
xchg
or
aaa
pop
in
adc
dec
clc
addb
adc
cmp
cmp
int
push
testl
dec
outsb
sub
test
das
addb
adc
cmp
cmp
andb
adc
sub
addb
cmp
cmp
mov
mov
popf
cmp
imul
addb
adc
cmp
cmp
rcl
imul
sub
adc
adc
cmp
cmp
lret
je
pop
loop
pop
aad
mov
or
popf
mov
and
addb
cmp
cmp
mov
xchg
insb
jge
addb
cmp
cmp
mov
cli
sbb
imul
decb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
shll
lds
scas
adc
push
mov
jl
addb
cmp
cmp
mov
test
pop
or
sub
aad
addb
cmp
cmp
mov
jl
hlt
inc
adc
movsl
sbb
addb
adc
cmp
cmp
popf
fidivs
call
addb
cmp
cmp
mov
int
xchg
mov
mov
fsts
addb
adc
cmp
cmp
fisttpll
adcb
adc
cmp
cmp
mov
imul
int3
xchg
scas
pop
push
and
cs
xor
adc
cmp
mov
imul
addb
dec
repnz
lods
xor
push
xchg
scas
out
sub
testl
push
jmp
fcmove
sarl
or
xor
xor
lcall
xchg
lods
xor
push
mov
mov
mov
addb
adc
cmp
cmp
push
mov
pop
in
add
repnz
addb
adc
cmp
cmp
cmpsl
lods
movsl
push
add
sub
gs
add
addb
adc
cmp
cmp
xchg
jbe,pt
aaa
arpl
jo
jp
addb
adc
cmp
cmp
add
data16
adc
adc
cmp
cmp
xor
rcrl
data16
je
cmp
cmp
inc
test
xchg
sub
lahf
jb
jmp
xor
int
flds
fcoml
push
xor
mov
movsl
test
jp
inc
mov
outsl
mov
sub
jne
sbb
scas
rolb
sbb
sbb
mov
cmpsl
scas
pop
jno
int
cmp
fdivl
push
adc
mov
addb
cmp
cmp
mov
mov
enter
lock
imulb
pop
xor
addb
cmp
cmp
mov
fs
jbe
dec
sub
inc
sbb
addb
cmp
cmp
inc
add
loopne
add
das
add
xor
push
adc
jmp
test
mov
addb
adc
cmp
cmp
shr
sub
pop
ret
hlt
popf
or
fs
pop
hlt
icebp
int
ss
push
addr16
or
stos
sbb
push
popf
mov
loopne
add
rcll
stos
lods
or
mov
test
scas
adc
int
jecxz
leave
insb
xchg
pop
adc
call
mov
rolb
adc
adc
cmp
cmp
js
addb
adc
cmp
cmp
or
adcb
adc
cmp
cmp
mov
ljmp
cmc
cmp
mov
sub
js
cmp
outsl
mov
adc
adc
cmp
cmp
mov
xor
adc
adc
cmp
cmp
cwtl
es
scas
insl
mov
jge
sub
adc
adc
cmp
cmp
mov
jbe
sub
pop
mov
out
notb
and
sbb
ret
int3
jl
cs
cld
addb
adc
cmp
cmp
jns
sbb
pop
scas
aas
jg
sbb
jo
fcomi
lods
ds
fmull
jp
std
jno
shrw
ds
push
push
cmp
insl
lahf
pop
or
jo
sub
adc
adc
cmp
cmp
sub
xor
cwtl
adc
fst
pop
clc
ljmp
addb
cmp
cmp
mov
mov
push
arpl
shrl
addb
cmp
cmp
das
push
sub
add
mov
and
insb
mov
sbb
loope
push
addb
adc
cmp
cmp
lret
mov
movsb
movsl
lahf
lea
adc
cwtl
jne
cmc
dec
add
xlat
mov
or
addb
cmp
cmp
mov
mov
addb
adc
cmp
cmp
ss
mov
popa
addr16
aaa
lret
xor
adc
cmp
stos
dec
xor
xor
addb
cmp
cmp
mov
test
dec
lcall
addb
cmp
cmp
mov
call
pop
shl
or
addb
cmp
cmp
mov
add
jmp
xchg
mov
addb
cmp
cmp
loopne
cs
xor
addb
adc
cmp
cmp
addb
adc
cmp
cmp
addr16
push
rclb
adc
dec
hlt
sub
sbb
mov
pop
shlb
jno
jp
pop
ss
outsl
test
shrb
sub
int3
xor
cmp
addb
adc
cmp
cmp
js
inc
push
or
aad
cmp
les
mov
popf
popa
push
incb
iret
fidivl
push
cmpsb
jp
int3
and
adc
pushf
mov
mov
shrd
inc
stos
inc
dec
lret
ficomps
push
adc
xchg
fcmovu
div
aas
stc
fs
adc
adc
cmp
cmp
mov
and
jle
pop
mov
adc
adc
cmp
cmp
mov
cmp
xor
inc
cmpxchg
aaa
push
insb
aad
outsl
sbb
sub
mov
sahf
imul
ret
mov
sar
lock
lods
xchg
gs
insl
nop
insb
mov
fadds
addb
cmp
cmp
mov
popa
aas
insl
mov
mov
lahf
out
adc
push
jno
mov
xchg
inc
mov
scas
lahf
sbb
pop
cwtl
div
inc
addl
addb
adc
cmp
cmp
cmp
pop
mov
movd
jp
push
shlb
mov
jbe
push
add
cmp
add
stc
call
insl
ret
and
inc
or
xchg
mov
mov
arpl
add
addb
adc
cmp
cmp
xchg
xor
xor
push
push
sub
loop
inc
xor
mov
enter
addb
cmp
cmp
mov
fwait
addb
adc
cmp
cmp
addb
adc
cmp
cmp
fs
leave
mov
arpl
dec
stos
roll
mov
pop
push
sahf
mov
addb
adc
cmp
cmp
js
jo
repnz
arpl
pop
mov
cltd
icebp
fstpl
test
addb
adc
cmp
cmp
pop
adc
cmc
std
push
push
fadds
out
aaa
jg
push
add
sub
enter
cmp
orl
mov
fldt
lcall
mov
mov
cmc
ficomps
hlt
jle
int
int3
xchg
fnsave
int3
inc
adc
mov
cmp
xchg
int
popa
cmp
pop
sti
mov
addr16
push
cmc
out
addb
adc
cmp
cmp
sub
leave
les
adc
adc
cmp
cmp
pop
addb
adc
cmp
cmp
jle
das
xor
inc
and
fucomp
std
push
js
and
jo
xchg
or
pop
addb
adc
cmp
cmp
imul
pop
lock
daa
mov
addb
adc
cmp
cmp
mov
andb
cmp
mov
addr16
out
imul
sub
addb
adc
cmp
cmp
mov
out
push
mov
mov
xor
testb
vcmpsd
in
cli
mov
lods
mov
scas
setp
cmc
outsb
pushl
mov
mov
addb
adc
cmp
cmp
mov
inc
sahf
xor
fcoml
sub
iret
addb
adc
cmp
cmp
out
or
popf
inc
pop
fildll
sbb
outsl
cmpsb
mov
sub
addb
adc
cmp
cmp
subl
mov
fisubrl
and
mov
fsubrl
pop
pop
inc
pop
sub
dec
and
mov
addb
cmp
cmp
std
data16
stc
fisubrl
rorl
in
xchg
inc
inc
mov
cltd
cmp
pop
loope
aam
dec
mov
mov
hlt
out
int3
xor
shlb
jmp
lods
or
xor
push
addb
cmp
cmp
mov
test
pop
add
push
sbb
aas
xchg
inc
adc
adc
adc
cmp
cmp
mov
or
adc
adc
cmp
cmp
into
pop
and
cld
bound
adc
adc
cmp
cmp
jge
imul
fsubrs
addb
adc
cmp
cmp
jno
fcomip
jecxz
xlat
jne
fildl
cwtl
jmp
mov
sub
pop
adc
lock
cwtl
addb
adc
cmp
cmp
hlt
sbb
jo
scas
imul
imul
aaa
mov
cwtl
mov
adc
adc
cmp
cmp
add
xor
cmp
roll
iret
aas
jle
mov
addb
adc
cmp
cmp
mov
inc
and
in
je
addb
adc
cmp
cmp
fcoml
and
outsb
xchg
inc
or
mov
dec
mov
adcb
adc
cmp
cmp
mov
scas
adc
inc
jb
testb
cwtl
cmp
dec
js
sub
das
addl
adc
adc
cmp
cmp
adc
cwtl
inc
pop
mov
fisubl
arpl
fwait
inc
push
adcb
adc
cmp
cmp
mov
jns
je
ret
push
jle
scas
inc
cmp
ja
lods
sar
mov
loope
sub
int3
outsl
cmc
std
stc
sbb
aad
insb
sbb
imul
mov
dec
or
push
clc
int3
pop
mov
lahf
addb
adc
cmp
cmp
mov
lahf
clc
jbe
sbb
push
cmpsl
lds
dec
hlt
movsl
cwtl
inc
jbe
sbb
mov
adcb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
lret
int
addb
adc
cmp
cmp
outsl
inc
ret
addb
adc
cmp
cmp
lret
icebp
pop
jmp
lds
adc
adc
cmp
cmp
mov
dec
push
in
push
or
adcb
adc
cmp
cmp
mov
cli
cs
addr16
outsb
adc
int
pop
scas
lock
adc
cmp
push
addb
adc
cmp
cmp
xchg
xor
sti
cwtl
add
pop
add
mov
sub
lahf
adc
adcb
adc
cmp
cmp
mov
cli
push
adc
call
addb
adc
cmp
cmp
sbb
xor
mov
rcl
fwait
in
add
mov
inc
mov
adc
insl
lds
cmp
or
xor
sub
adc
xchg
mov
mov
ljmp
cli
jmp
sbb
addb
adc
cmp
cmp
ret
sub
push
mov
mov
cld
mov
popa
mov
sub
push
and
jecxz
jp
add
das
stos
mov
addb
adc
cmp
cmp
orb
bound
sub
mov
adcb
adc
cmp
cmp
mov
jl
xchg
cmpsl
test
lahf
inc
aas
sbb
dec
iret
cltd
jns
ds
int3
pop
or
arpl
or
stos
push
mov
mov
sbbl
or
mov
and
xor
in
mov
addb
adc
cmp
cmp
lret
inc
or
xor
ror
mov
inc
or
push
loope
pop
rcl
fcoml
rcrb
ret
or
push
or
add
addb
adc
cmp
cmp
jbe
nop
jb
adc
adc
cmp
cmp
hlt
hlt
xchg
inc
push
and
inc
call
push
rolb
mov
addb
adc
cmp
cmp
cld
movsb
js
dec
mov
push
xlat
inc
in
loope
adc
out
addb
cmp
cmp
mov
and
pop
test
cmc
imul
loope
lret
in
addb
cmp
cmp
mov
movsb
xchg
or
add
jne
cvttps2pi
xchg
imul
adc
sbb
dec
xchg
dec
addb
adc
cmp
cmp
dec
cmp
fcoms
out
call
hlt
add
addb
adc
cmp
cmp
push
xchg
fstl
mov
inc
out
jmp
shrb
les
addr16
sub
adcb
adc
cmp
cmp
mov
sub
mov
or
addb
adc
cmp
cmp
fwait
xchg
addb
adc
adc
cmp
cmp
fldl
insb
cmpsl
jbe
cmpb
jl
xor
push
in
std
push
jb
dec
sbb
jae
or
int
xchg
adc
adc
cmp
cmp
sbb
cmp
xchg
fldt
xchg
out
bound
scas
sbb
and
inc
test
and
std
or
mov
dec
lods
sub
mov
jne
jo
sub
cmp
ljmp
fcompl
mov
cmpsl
xor
and
bswap
divl
loop
leave
xchg
xchg
push
lods
adcl
addl
addb
cmp
cmp
mov
into
adc
addb
cmp
cmp
push
je
inc
cmp
or
addb
adc
cmp
cmp
cmpl
ss
xchg
cmc
aas
icebp
pop
in
gs
sub
addb
cmp
cmp
push
andb
in
sub
add
ja
xchg
lret
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
sbb
or
xchg
pop
mov
mov
addb
adc
cmp
cmp
cld
jmp
xor
addb
cmp
cmp
mov
sbb
cmc
lahf
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
imul
adc
adc
adc
cmp
cmp
sbb
subl
pop
mov
fld
cmp
sbb
pop
into
ljmp
addb
adc
cmp
cmp
outsb
add
add
dec
cld
dec
pushf
leave
jb
dec
in
es
ret
pop
lret
push
xlat
filds
pop
das
push
movsb
sti
leave
decl
adcb
adc
cmp
cmp
mov
out
scas
mov
lret
pop
xchg
aas
adc
jge
sbb
hlt
mov
adcb
adc
cmp
cmp
mov
mov
fmulp
insb
ds
push
push
or
insl
bound
imul
mov
add
add
sarl
push
arpl
addb
cmp
cmp
mov
lds
sbb
pop
popa
addb
adc
cmp
cmp
or
jle
test
xchg
loop
mov
push
test
les
pop
mov
out
fiadds
adc
adc
cmp
cmp
pop
pop
in
push
out
outsb
dec
out
push
push
mov
hlt
stos
bound
and
sbb
addb
cmp
cmp
cmp
sti
das
stos
mov
sbb
add
sbb
pop
mov
adc
adc
cmp
cmp
mov
mov
xchg
sarb
xchg
ficoml
imul
adc
adc
cmp
cmp
mov
call
ja
iret
jns
daa
xor
addb
cmp
cmp
out
xchg
xchg
outsl
and
inc
add
add
add
cmp
fimuls
inc
add
inc
add
add
mov
inc
add
add
imul
add
add
and
add
push
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
adc
add
sbb
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
adc
add
add
add
sub
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
add
or
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
or
add
inc
add
add
add
sbb
add
or
add
or
add
xor
add
cmp
add
and
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
xor
add
sbb
add
sub
add
add
add
add
add
pop
add
add
add
add
add
add
add
and
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
or
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
pop
add
add
add
adc
add
addb
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
sbb
add
or
add
xor
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
and
add
add
add
adc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
add
add
add
add
jbe
add
adc
add
sbb
add
add
add
add
add
add
add
cmp
add
sbb
add
sbb
add
and
add
add
add
or
add
or
add
xor
add
pop
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
addl
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
insl
add
add
add
adc
add
and
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
adc
add
xor
add
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
sbb
add
add
add
add
add
adc
add
and
add
scas
add
add
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
adc
add
sbb
add
or
add
adc
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
adc
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
or
add
sub
add
add
add
adc
add
or
add
or
add
jae
add
add
add
pop
add
add
add
add
add
and
add
adc
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
sub
add
and
add
add
add
sub
add
push
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
add
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
adc
add
add
add
sub
add
sbb
add
or
add
sub
add
add
add
add
add
adc
add
and
add
or
add
or
add
and
add
adc
add
add
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
push
add
add
add
add
add
add
add
adc
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
or
add
adc
add
sldt
add
add
add
add
adc
add
add
add
or
add
or
add
adc
add
or
add
xor
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sub
add
dec
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
aas
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmp
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
or
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
adc
add
pop
add
add
add
add
add
add
add
add
add
xor
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
sldt
add
add
add
add
add
add
add
add
daa
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
das
add
add
add
sbb
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
or
add
xor
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
push
add
add
add
add
add
or
add
cmp
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
and
add
add
add
add
add
push
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
adc
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
or
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
or
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
push
add
add
add
adc
add
add
add
adc
add
and
add
inc
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
or
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
sub
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
adc
add
add
add
add
add
add
add
cmp
add
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
cmp
add
push
add
add
add
pop
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
sub
add
sbb
add
sub
add
sbb
add
or
add
or
add
xor
add
pop
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
sbb
add
adc
add
add
add
add
add
add
add
xor
add
adc
add
pop
add
add
add
add
add
cmp
add
sub
add
push
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
adc
add
xor
add
sbb
add
push
add
add
add
adc
add
pop
add
add
add
add
add
sbb
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
add
or
add
test
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
inc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
sbb
add
add
add
add
inc
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
add
sub
add
or
add
add
add
or
add
or
add
add
add
sub
add
sub
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sbb
add
or
add
sbb
add
adc
add
or
add
and
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
sbb
add
and
add
or
add
add
add
adc
add
add
add
sbb
add
or
add
add
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
and
add
sub
add
or
add
adc
add
adc
add
adc
add
and
add
or
add
add
add
adc
add
or
add
adc
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
sbb
add
or
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
sub
add
or
add
and
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
and
add
sub
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
push
add
add
add
xor
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
push
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
cmp
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
xor
add
jo
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
adc
add
xor
add
sub
add
push
add
add
add
add
add
or
add
or
add
add
add
sub
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
or
add
sub
add
add
add
or
add
adc
add
cmp
add
or
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
sbb
add
sldt
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
adc
add
adc
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
cmp
add
adc
add
and
add
and
add
or
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
sub
add
or
add
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
sbb
add
adc
add
or
add
or
add
adc
add
add
add
sbb
add
sbb
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
push
add
add
add
add
add
add
add
add
add
and
add
add
add
push
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
sbb
add
or
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
sbb
add
or
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
adc
add
push
add
add
add
add
add
add
add
or
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
adc
add
push
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
cmp
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
add
sbb
add
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sub
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
add
or
add
xchg
add
add
add
dec
add
add
add
add
add
add
add
add
add
xor
add
or
add
adc
add
add
add
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
or
add
add
add
or
add
add
add
sub
add
add
add
add
add
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
sub
add
or
add
sbb
add
adc
add
or
add
add
add
sub
add
add
add
add
add
sbb
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
js
add
adc
add
aas
add
add
add
add
add
sbb
add
adc
add
pop
add
add
add
add
add
sub
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
add
add
add
aas
add
add
add
add
add
adc
add
sub
add
or
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
xor
add
adc
add
adc
add
xor
add
or
add
pop
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
popl
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
sbb
add
sub
add
sbb
add
or
add
adc
add
adc
add
pop
add
add
add
add
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sldt
add
add
add
add
add
add
adc
add
adc
add
sbb
add
and
add
sldt
add
add
add
add
add
add
inc
add
add
add
add
add
sldt
add
add
das
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
or
add
sbb
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
inc
add
add
add
adc
add
or
add
adc
add
xor
add
or
add
or
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
adc
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
and
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
adc
add
or
add
aas
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
add
sbb
add
push
add
add
add
adc
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xchg
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
or
add
add
add
sbb
add
or
add
and
add
and
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
xor
add
adc
add
push
add
add
add
sub
add
and
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
xor
add
adc
add
adc
add
add
add
add
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
or
add
and
add
push
add
add
add
sbb
add
xor
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
xor
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
adc
add
aas
add
add
add
adc
add
jo
add
xor
add
push
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
and
add
and
add
sub
add
adc
add
sldt
add
add
adc
add
adc
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
pop
add
add
add
add
add
add
add
adc
add
or
add
or
add
sbb
add
xchg
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
sub
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
adc
add
or
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
and
add
push
add
add
add
add
add
add
add
add
add
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
or
add
sub
add
sbb
add
or
add
sbb
add
add
add
add
add
adc
add
or
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
adc
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
adc
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xor
add
sbb
add
add
add
pop
add
add
add
cmp
add
add
add
adc
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
daa
add
add
add
add
add
add
add
and
add
sub
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
or
add
pop
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
adc
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
or
add
or
add
add
add
sbb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
or
add
rolb
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
dec
add
add
add
add
add
add
add
add
add
js
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
xor
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
push
add
add
add
and
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
or
add
adc
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
xor
add
or
add
cmp
add
inc
add
add
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
jle
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
add
or
add
or
add
sbb
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
add
or
add
dec
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
outsb
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
sbb
add
adc
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
cmp
cmp
adc
mov
or
or
addb
cmp
cmp
adc
mov
adc
adc
cmp
cmp
test
ficomps
stos
mov
pop
addb
adc
cmp
cmp
sbb
adc
adc
cmp
cmp
mov
addr16
fimull
or
cmp
adc
adc
cmp
cmp
call
outsb
xchg
cltd
call
adcb
adc
cmp
cmp
mov
movsl
int
sbbb
adcb
adc
cmp
cmp
mov
outsb
leave
mov
adcb
adc
cmp
cmp
mov
mov
outsb
lea
mov
mov
add
sub
lods
dec
push
addb
cmp
cmp
mov
movsb
pop
adc
and
pop
sbb
addb
cmp
cmp
mov
cli
mov
pop
pusha
pop
into
in
push
xlat
or
stos
push
lret
pop
hlt
and
adc
addb
adc
cmp
cmp
pop
push
popa
jno
rorb
subl
aas
je
sbb
in
sbb
add
fwait
dec
or
push
xchg
pop
jle
xor
enter
xchg
mov
add
mov
inc
mov
enter
and
dec
stc
mov
or
addb
adc
cmp
cmp
pop
add
repnz
or
and
pop
pushf
pop
or
push
dec
adc
and
leave
hlt
addb
adc
cmp
cmp
push
add
jne
xor
pop
ja
fcmovnb
inc
xchg
cmc
add
lock
stos
mov
xor
fcoms
out
addb
cmp
cmp
mov
dec
and
addb
adc
cmp
cmp
aam
out
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
inc
push
push
imul
out
mov
loope
mov
xor
fsts
push
mov
das
pop
mov
dec
bound
addb
cmp
cmp
mov
push
roll
adc
adc
cmp
cmp
mov
push
mov
loopne,pn
xchg
sub
push
lock
out
xor
inc
cmp
int3
jno
sbb
and
adcb
adc
cmp
cmp
mov
imul
mov
leave
mov
aad
dec
inc
and
cli
adcl
sbb
cmp
imul
dec
lea
lods
in
sbb
jmp
xchg
mov
cmp
roll
add
lea
jae
and
pop
lret
or
sbb
addb
adc
cmp
cmp
fldl
pop
insb
scas
fs
lock
jl
ss
insb
cmpsb
icebp
test
addb
adc
cmp
cmp
push
sub
jecxz
jo
push
inc
mov
cld
movsl
xor
mov
fistpll
pusha
addb
adc
cmp
cmp
push
xchg
cld
sub
or
icebp
out
or
frstor
bound
cmpsb
mov
and
pop
ret
loopne
jge
addb
adc
cmp
cmp
ds
scas
jge
or
mov
movsb
mov
daa
out
addl
cmp
cmp
or
push
push
cli
iret
ds
insl
pop
add
sub
jbe
mov
icebp
jecxz
push
sub
test
adc
bound
adc
adc
cmp
cmp
mov
lahf
cmp
or
rol
pop
mov
mov
xchg
xchg
adc
popf
xor
sbb
or
pop
cwtl
lcall
cltd
mov
outsb
lret
dec
and
movsb
sbb
pop
xor
aas
pop
mov
mov
mov
leave
jb
dec
dec
addb
adc
cmp
cmp
lret
or
ds
ja
movsb
nop
sbb
cli
mov
enter
and
jne
sbb
or
sbb
dec
out
mov
stos
add
sub
das
add
lcall
add
ret
mov
lods
mov
rolb
stos
push
cmpsb
fnsave
scas
jo
jne
jle
jmp
lods
adc
mov
lods
je
addb
cmp
cmp
mov
nop
and
fstpl
jge
into
push
pop
test
xlat
pop
mov
cltd
jnp
das
mov
adc
in
js
adc
out
push
aas
dec
fstpl
fnstcw
inc
adc
aad
jnp
jecxz
arpl
inc
sub
stos
leave
fsubrs
inc
cmp
loopne
ljmp
dec
mov
insb
addb
adc
cmp
cmp
test
cmp
sub
test
dec
jns
inc
popa
dec
push
add
cmp
adc
adc
cmp
cmp
outsl
or
and
inc
dec
xorb
mov
pop
shrl
push
rcll
adc
adc
cmp
cmp
mov
mov
and
imul
jge
popa
ljmp
cltd
sbb
outsb
test
mov
lods
push
mov
addb
cmp
cmp
in
mov
repz
cmp
neg
je
xchg
popa
pop
mov
pop
cltd
sar
adc
addb
cmp
cmp
mov
mov
push
sbb
xchg
sub
cwtl
xlat
imul
sahf
cmpl
mov
faddl
adc
adc
cmp
cmp
push
add
lahf
std
fneni(8087
add
ljmp
ret
inc
les
hlt
scas
mov
and
ja
sbb
sbb
mov
movsl
ret
addb
adc
cmp
cmp
jmp
fcmovnbe
inc
lret
cltd
sub
mov
addb
cmp
cmp
mov
mov
pop
inc
xchg
and
addb
adc
cmp
cmp
or
cmpsl
outsb
xor
push
mov
dec
pop
in
into
gs
lock
cmc
fistpll
dec
repnz
pop
xor
mov
cltd
stos
adcb
dec
inc
out
into
mov
aad
push
sub
xor
ljmp
addb
cmp
cmp
adcb
addb
cmp
cmp
push
sub
sub
mov
cld
pop
sbb
mov
pop
ja
pop
push
clc
lds
lock
sbb
adc
addb
cmp
cmp
adc
cmp
cmp
addb
adc
cmp
cmp
jecxz
push
addb
cmp
cmp
bndldx
test
pop
push
push
hlt
push
cmp
addb
adc
cmp
cmp
add
adc
adc
cmp
cmp
mov
es
dec
push
add
aad
addb
adc
cmp
cmp
cmc
out
sub
loop
sbb
movsb
addb
adc
cmp
cmp
jl
stc
jmp
adcb
adc
cmp
cmp
mov
pop
ret
gs
enter
popl
addb
adc
cmp
cmp
pop
cmpsb
ret
loopne
addb
cmp
cmp
mov
push
mov
repnz
push
push
addb
adc
cmp
cmp
and
addb
cmp
cmp
push
or
addb
adc
cmp
cmp
js
imul
addb
cmp
cmp
mov
pop
outsb
adc
and
rolb
movsb
repnz
adc
adc
cmp
cmp
mov
hlt
add
ret
shlb
test
insb
mov
pop
test
addb
adc
cmp
cmp
mov
iret
push
jge
imul
cmp
adcb
adc
cmp
cmp
mov
pop
cs
addb
adc
cmp
cmp
fimull
mov
pop
addb
adc
cmp
cmp
jbe
sub
adc
adc
cmp
cmp
inc
aas
gs
pop
pop
pushf
mov
or
fdivrp
iret
push
out
inc
pop
dec
push
bound
sbb
mov
cld
repz
sub
out
adc
addb
adc
cmp
cmp
jbe
jns
addb
adc
cmp
cmp
sbb
das
insb
pop
addb
adc
cmp
cmp
out
shll
dec
mov
cld
xlat
data16
adc
cmp
cmp
cltd
pop
scas
cmp
cs
bound
stc
ret
push
ljmp
mov
arpl
add
sub
pop
lods
adc
and
inc
xor
nop
and
push
dec
clc
aad
xchg
lock
insb
adc
mov
add
mov
mov
test
jmp
push
insb
cmc
pop
outsb
addb
adc
cmp
cmp
jg
xchg
test
pop
mov
dec
xorb
sub
jle
addb
adc
cmp
cmp
sub
jg
xchg
fcmovb
sub
in
cmp
xor
imul
adc
cmp
cmp
mov
add
push
frstor
addb
cmp
cmp
xchg
popa
mov
xchg
cmp
push
mov
lods
jecxz
jns
cs
addb
adc
cmp
cmp
je
mov
mov
lods
jp
clc
cld
imul
fs
mov
fadds
adc
adc
cmp
cmp
test
dec
mov
cmpxchg
mov
cmp
iret
cmc
enter
cmp
test
test
xchg
les
push
adc
addb
cmp
cmp
mov
sbb
mov
jnp
addb
adc
cmp
cmp
int
fs
fwait
and
or
addb
cmp
cmp
add
and
adc
call
fistpll
addb
cmp
cmp
les
sti
inc
in
mov
inc
dec
inc
movsb
mov
shl
out
xor
dec
cmp
xor
addb
adc
cmp
cmp
decb
mov
cmp
das
add
mov
out
add
mov
inc
sahf
addb
adc
cmp
cmp
inc
adc
or
addb
cmp
cmp
mov
add
daa
xchg
cmpsl
dec
xor
rcl
ret
cmp
jmp
dec
clc
insb
pop
fisubs
adc
addb
cmp
cmp
mov
push
ficoml
test
cmpl
addb
cmp
cmp
out
sbb
test
cmpb
or
inc
or
call
jb
cmp
adc
adc
cmp
cmp
dec
push
into
mov
neg
fs
in
push
inc
pop
sti
addb
adc
cmp
cmp
pushf
clc
jmp
adc
popl
adc
adc
cmp
cmp
cmc
addb
adc
cmp
cmp
mov
and
pop
ret
mov
pop
cmpl
and
mov
lcall
std
push
sbb
addb
cmp
cmp
mov
dec
sbb
aas
mov
fwait
addb
adc
cmp
cmp
mov
sbb
adc
adc
cmp
cmp
addb
adc
cmp
cmp
push
aad
aas
adc
fwait
pop
sahf
test
cmp
iret
sar
add
sbb
inc
addb
adc
cmp
cmp
cs
addb
cmp
cmp
mov
jge
stos
adc
xchg
dec
in
mov
and
pusha
mov
pop
addb
adc
cmp
cmp
sub
addb
adc
cmp
cmp
jmp
xchg
xchg
subl
mov
adcb
adc
cmp
cmp
mov
daa
addb
adc
cmp
cmp
mov
or
lods
in
insb
decb
ret
mov
addb
adc
cmp
cmp
pop
push
push
add
inc
lahf
ret
into
imul
mov
or
int3
cli
addb
adc
cmp
cmp
lcall
adc
cmp
cmp
mov
add
xchg
pushf
mov
test
mov
jmp
ljmp
faddp
insl
pop
clc
addb
adc
cmp
cmp
movsb
xchg
es
scas
or
jnp
js
addb
cmp
cmp
mov
scas
adcb
mov
adc
dec
inc
into
adc
cltd
xor
cmp
xor
and
enter
daa
addb
adc
cmp
cmp
iret
lahf
dec
out
mov
ss
nop
inc
sbb
pop
jl
dec
cmp
std
fcmove
mov
add
and
add
dec
repnz
jmp
fists
sub
divb
hlt
sbb
sahf
decb
xchg
push
sub
sub
mov
addb
loop
jle
addb
cmp
cmp
mov
movsb
enter
pop
mov
sub
addb
adc
cmp
cmp
lods
loopne
pop
xor
negl
imul
cmp
cmp
fildl
adc
adc
cmp
cmp
or
popf
jnp
movsb
add
mov
jbe
jg
scas
push
gs
rcrl
mov
pop
mov
dec
stos
loop
pop
xchg
icebp
imul
cmp
cmp
dec
test
push
roll
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
mov
sti
mov
jns
call
nop
out
cs
jmp
push
adc
adc
cmp
cmp
mov
insb
sub
movsl
jne
mov
mov
stc
xchg
dec
pop
imul
addb
adc
cmp
cmp
loopne
cmpsb
call
pop
xchg
sti
cmp
adc
aam
in
mov
int
scas
fists
push
in
call
adc
adc
cmp
cmp
mov
iret
loop
cmp
mov
sbb
addb
adc
cmp
cmp
xchg
orl
mov
add
arpl
test
cmp
imul
outsl
popa
icebp
dec
cmp
stos
loop
shl
shl
scas
cmpsb
jecxz
xor
addb
adc
cmp
cmp
mov
fdivl
aaa
xlat
popf
aad
scas
cmp
mov
out
into
mov
jmp
fdivrl
jo
xchg
mov
adc
adc
cmp
cmp
aam
add
popf
insl
fldl2t
push
enter
lods
gs
or
call
adc
adc
cmp
cmp
mov
sub
jecxz
pop
adc
fdiv
addb
adc
cmp
cmp
jbe
dec
jo
cmp
adcb
adc
cmp
cmp
mov
scas
add
sub
jnp
addb
adc
cmp
cmp
xchg
stc
lods
rcrl
popf
and
imul
fmulp
cmpsl
cld
addb
adc
cmp
cmp
mov
lea
dec
pusha
push
out
addb
adc
cmp
cmp
xchg
fwait
in
je
sarl
addb
cmp
cmp
pop
int3
and
int3
sub
xchg
add
adc
adc
cmp
cmp
mov
std
addb
adc
cmp
cmp
je
adc
out
dec
dec
notb
fsts
or
or
addb
adc
cmp
cmp
sti
inc
xor
add
or
fsubl
jbe
push
pushf
in
push
stos
add
addb
cmp
cmp
xor
or
jb
or
inc
inc
adc
xor
ljmp
dec
addb
adc
cmp
cmp
into
adc
cwtl
mov
repz
push
in
movsl
cmpsl
push
rorb
insb
pop
fbstp
in
xchg
out
movsb
sub
xlat
mov
mov
push
in
aaa
xor
addr16
fistps
cmpsb
pop
mov
cmc
xchg
jae
fldenv
cmp
sub
sub
dec
sbb
fcmovb
mov
xorl
aam
mov
adcb
adc
cmp
cmp
mov
scas
aad
addb
adc
cmp
cmp
cmpsl
and
mov
xchg
lahf
dec
mov
loop
mov
lods
mov
cmpsb
test
fwait
jnp
arpl
in
je
imul
leave
sub
and
mov
mov
inc
lea
test
cs
or
xchg
fisttpl
add
inc
aad
lock
ja
sbb
xchg
leave
movsb
and
cmp
addb
adc
cmp
cmp
outsl
xor
mov
movsl
addb
adc
cmp
cmp
adc
cli
repz
push
bound
pop
add
std
ss
mov
sub
xor
loop
push
out
scas
pop
testb
int
sub
adc
adc
cmp
cmp
enter
addb
adc
cmp
cmp
outsl
out
nop
sub
push
and
insl
or
and
addb
adc
cmp
cmp
xor
and
xchg
xchg
daa
ds
cmc
jnp
adc
and
and
pusha
addb
adc
cmp
cmp
addb
adc
cmp
cmp
les
in
fs
loope
imul
loope
or
sub
or
jp
addb
adc
cmp
cmp
aaa
addb
adc
cmp
cmp
or
cmpb
outsl
dec
movsl
push
mov
sub
std
out
lea
or
dec
inc
dec
mov
not
stc
mov
pop
jnp
rolb
dec
add
mov
mov
pop
mov
ljmp
je
das
mov
cmp
mov
pop
mov
mov
cld
push
dec
jl
dec
jnp
ret
addb
adc
cmp
cmp
inc
and
dec
sarb
addb
cmp
cmp
mov
addb
adc
cmp
cmp
neg
leave
jmp
sbb
xchg
addb
cmp
cmp
inc
or
addb
adc
cmp
cmp
mov
lods
nop
js
or
adc
mov
inc
mov
xor
into
repnz
mov
sbb
pushw
mov
int3
hlt
or
dec
pop
outsb
shrb
jne
lds
push
popf
push
shlb
mov
lahf
stos
or
repz
psubd
dec
jg
and
lret
mov
iret
xlat
cmpsl
xchg
pop
cmp
and
pop
icebp
pushl
adc
adc
cmp
cmp
mov
cmp
mov
int3
sbb
mov
addb
cmp
cmp
mov
push
leave
cwtl
sub
dec
fs
sbb
int3
mov
inc
ljmp
add
and
xlat
aaa
iret
ljmp
dec
js
sbb
ret
dec
int
push
mov
adcb
adc
cmp
cmp
mov
add
inc
mov
sub
sbb
cmpsl
out
in
xor
add
mov
sbb
adc
adc
cmp
cmp
decb
loope
sub
pop
pop
push
xor
mov
addb
adc
cmp
cmp
inc
inc
pop
push
xor
les
push
push
pop
pusha
adc
in
mov
adc
mov
adc
adc
cmp
cmp
mov
ds
outsb
rcll
lods
jns
addb
adc
cmp
cmp
sbb
push
sub
popa
pusha
inc
jmp
cs
addr16
ficoml
jl
mov
adcb
adc
cmp
cmp
mov
out
lods
mov
and
mov
loopne
mov
shr
jmp
adc
adc
cmp
cmp
mov
aad
addb
adc
cmp
cmp
add
mov
xor
stos
fldcw
dec
jbe
stos
push
es
mov
sub
cld
fidivs
in
scas
xchg
adc
push
test
adcb
adc
cmp
cmp
mov
out
addb
adc
cmp
cmp
mulb
xchg
test
nop
lods
inc
lds
repnz
jmp
xorl
mov
xchg
aas
sbb
ss
jmp
out
addb
adc
cmp
cmp
pop
shl
dec
stc
pusha
sbb
sbb
jmp
or
mov
sbb
fcmove
mov
adc
jge
int3
inc
loopne
orl
out
jp
adc
sbb
addr16
addr16
inc
mov
addb
adc
cmp
cmp
lret
jb
cmpsl
xchg
mov
sub
and
add
std
xor
rorl
dec
mov
mov
addb
cmp
cmp
sub
scas
push
rolb
adc
adc
cmp
cmp
out
mov
xchg
xchg
push
aas
push
push
jae
cmpsl
push
push
ljmp
adcb
adc
cmp
cmp
mov
shlb
dec
lcall
in
ret
mov
addb
cmp
cmp
mov
and
mov
ss
adc
cmp
pop
mov
adc
icebp
daa
mov
mov
pop
fs
cmp
sbb
push
mov
rolb
push
stos
stos
jmp
sub
in
or
fldcw
jmp
fwait
pop
mov
clc
pop
in
loop
mov
lods
dec
jo
mov
insb
sahf
add
sub
into
inc
mov
scas
pushf
mov
addb
cmp
cmp
jge
fsubrp
sub
adc
adc
cmp
cmp
lea
roll
dec
addb
adc
cmp
cmp
cmpsb
addb
adc
mov
adc
adc
cmp
cmp
arpl
outsl
cltd
in
pop
and
addb
adc
cmp
cmp
add
fidivrl
lods
rcr
inc
mov
or
mov
loope
sbb
sub
xchg
pushf
or
subl
pop
push
fdivl
xlat
out
jae
mov
xchg
cmpsb
dec
nop
mov
sbb
int3
xor
inc
cmp
into
pop
test
add
xor
lea
jg
xchg
pop
je
in
pop
into
popa
inc
push
sub
addb
adc
cmp
cmp
push
or
cwtl
xor
scas
daa
cld
iret
leave
sbbl
inc
xchg
test
cld
dec
repz
cmp
mull
xor
clc
dec
jbe
adc
mov
ret
ret
push
mov
ret
or
ffreep
or
shll
mov
addb
cmp
cmp
lock
push
addb
adc
cmp
cmp
ficomps
mov
xchg
mov
enter
notb
test
inc
faddl
xlat
clc
fcmovbe
in
mov
inc
js
push
addb
adc
cmp
cmp
clc
pop
mov
fsubrl
test
int3
hlt
rcll
addb
cmp
cmp
mov
pop
aam
addb
cmp
cmp
mov
xor
xchg
nop
lea
add
pushf
and
sub
adc
push
push
testb
aad
or
dec
sub
adc
adc
cmp
cmp
or
addb
adc
cmp
cmp
adcl
out
push
sbb
push
addb
adc
cmp
cmp
lret
jmp
pusha
out
and
jge
stc
xchg
mov
addb
cmp
cmp
mov
mov
push
addb
adc
cmp
cmp
bound
sub
ds
in
xchg
lock
xor
scas
pusha
jle
xor
sub
outsb
insb
lea
adc
adc
cmp
cmp
cmp
xor
addb
adc
cmp
cmp
mov
and
iret
negl
outsl
cmp
rolb
inc
arpl
adc
adc
cmp
cmp
sahf
rcll
rol
ficoml
xlat
pop
imul
mov
addb
cmp
cmp
mov
cmc
pop
xor
dec
int3
dec
addr16
loope
xor
jae
push
mov
testl
cmp
cmp
mov
insb
fwait
and
out
addb
cmp
cmp
mov
sti
in
inc
in
fcmovne
sub
roll
popl
movsl
fdivs
in
lock
jle
addb
cmp
cmp
mov
dec
mov
addb
cmp
cmp
mov
adc
pop
enter
loope
addb
cmp
cmp
mov
xchg
repz
push
stos
std
dec
fisubrl
pushf
mov
inc
jne
jecxz
leave
ret
sub
mov
addb
adc
cmp
cmp
rcrb
mov
lcall
adc
pop
lods
rclb
push
and
and
addb
adc
cmp
cmp
add
cmp
mov
pop
inc
push
loope
aad
loop
cwtl
sub
pop
and
clc
jecxz
dec
jecxz
imul
fucom
mov
pop
xlat
ja
or
popl
pop
cmp
sbb
sbb
addb
cmp
cmp
mov
dec
xchg
cwtl
rorl
inc
setb
mov
adc
adc
cmp
cmp
mov
pop
clc
mov
add
in
mov
pushf
fcoml
adc
xchg
cmp
dec
roll
pusha
push
addb
cmp
cmp
mov
adc
adc
cmp
cmp
mov
pop
insl
adc
cmp
gs
ret
jns
movsb
cmp
ret
out
jnp
cmc
ja
fs
jle
add
jb
dec
out
mov
mov
or
addb
adc
cmp
cmp
pop
mov
adc
out
ja
out
js
scas
scas
icebp
pop
or
stc
pop
nop
fistl
repnz
mov
mov
enter
inc
add
dec
bound
jno
std
xchg
jg
xor
arpl
into
stc
popf
xorb
addb
cmp
cmp
hlt
fiaddl
adc
adc
cmp
cmp
out
cmp
cvtps2dq
push
mov
push
loope
addb
adc
cmp
cmp
xchg
scas
or
pop
push
out
fsubl
in
loope
fnstcw
fcomp
cmc
push
adc
cli
pop
movzbl
pop
addb
adc
cmp
cmp
pop
fs
sub
out
lret
xor
outsb
les
adc
adc
cmp
cmp
cwtl
dec
int3
jne
in
cmp
and
bound
sbb
sbb
mov
out
mov
into
addb
adc
cmp
cmp
fsubl
addb
adc
cmp
cmp
xchg
repnz
mov
mov
pop
push
mov
and
adc
adc
cmp
cmp
addb
adc
cmp
cmp
mov
or
out
jle
je
sarb
mov
jecxz
roll
js
movsb
fld
addb
adc
cmp
cmp
sub
aas
flds
adc
adc
cmp
cmp
mov
push
inc
dec
jge
jns
in
das
jnp
aam
and
addb
cmp
cmp
mov
shl
mov
popf
xchg
mov
pop
jns
scas
jnp
jge
sub
mov
lea
ret
addb
adc
cmp
cmp
adcl
cmpsl
popf
or
shll
sbb
repnz
nop
or
mov
aaa
lret
out
push
push
call
addb
cmp
cmp
int3
add
movsl
je
cmp
cmc
add
adc
fs
dec
xchg
shll
je
loopne
imul
in
arpl
test
sarb
addb
adc
cmp
cmp
test
addb
cmp
cmp
mov
js
lods
insb
xchg
pop
stos
dec
adc
arpl
outsb
int3
dec
ja
sbb
mov
addr16
outsl
add
xchg
nop
xchg
addb
cmp
cmp
call
lea
popf
hlt
jb
dec
leave
hlt
mov
movsl
xor
cmc
jecxz
cmpsb
repz
jo
dec
mov
sarl
cmp
mov
jg
pop
sub
adc
adc
cmp
cmp
mov
shlb
mov
add
shr
adc
pusha
dec
addb
adc
cmp
cmp
into
push
rcrl
pop
lock
addb
adc
cmp
cmp
das
int
jnp
repz
adc
cmp
cmp
or
or
pop
lods
add
popa
fwait
xchg
lea
cltd
scas
lock
mov
mov
outsb
cltd
mov
icebp
ja
jne
inc
repnz
pop
push
movsl
out
mov
push
je
popf
rclb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
jecxz
das
xor
xchg
int
in
addb
cmp
cmp
mov
ljmp
adc
adc
cmp
cmp
mov
push
imul
adc
cmp
cmp
aaa
pop
mov
addb
cmp
cmp
test
popf
pop
inc
addb
adc
cmp
cmp
mov
mov
ret
mov
scas
repnz
mov
in
mov
movsl
bound
jnp
xchg
or
mov
leave
xor
lret
jmp
xor
xchg
push
adc
adc
adc
cmp
cmp
out
cld
lret
int3
or
fcmovu
cmp
inc
pop
pusha
pop
repz
addb
cmp
cmp
mov
in
sarl
lcall
out
imulb
addb
cmp
cmp
add
daa
xchg
addb
adc
cmp
cmp
mov
fsubl
aam
fstenv
pop
shll
inc
movsb
mov
inc
je
out
es
adcb
adc
cmp
cmp
mov
cmp
enter
lcall
addb
cmp
cmp
xchg
fstl
cld
aam
addb
cmp
cmp
mov
jge
sbb
add
js
pop
daa
icebp
and
jg
inc
mov
clc
mov
fisubrl
sahf
movb
adc
cmp
cmp
mov
jb
pop
addb
adc
cmp
cmp
ja
pusha
push
push
mov
add
in
leave
movsb
sbb
or
addb
adc
cmp
cmp
daa
test
les
xor
mov
or
in
jb
mov
add
je
xor
xorb
ja
xchg
es
lods
test
xor
inc
push
cmp
mov
addb
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
pop
addb
adc
cmp
cmp
adc
test
ret
push
les
dec
popf
and
jmp
mov
cmpsb
lcall
movsb
sub
add
rol
or
movsb
or
mov
bound
mov
out
jle
scas
ljmp
adc
fnstenv
mov
inc
mov
pop
mov
mov
addb
cmp
cmp
sbb
bound
popa
mov
cmp
mov
mov
mov
enter
jnp
orl
sbb
xlat
sti
cmp
adc
adc
cmp
cmp
sarl
xchg
push
xor
mov
lahf
popf
adc
xlat
addb
adc
cmp
cmp
es
cli
aas
fmuls
adc
cli
mov
adc
adc
cmp
cmp
mov
push
aad
add
imul
outsl
aas
loop
cltd
push
fcoms
inc
or
sub
insb
test
ret
and
scas
addb
adc
cmp
cmp
inc
sub
jmp
addb
adc
cmp
cmp
lret
xor
out
add
and
mov
inc
xchg
addb
adc
cmp
cmp
push
out
cmp
daa
jno
pop
xor
and
test
out
xorb
addb
adc
cmp
cmp
scas
adc
dec
mov
icebp
pop
fdivrl
mov
dec
addb
adc
cmp
cmp
xor
icebp
addb
adc
cmp
cmp
jl
and
pop
pop
mov
mov
mov
cmp
test
or
xor
in
mov
repz
mov
addb
adc
cmp
cmp
bound
inc
mov
xor
pop
xor
fimull
jge
roll
adc
adc
cmp
cmp
xchg
adc
push
insb
pop
mov
xchg
addb
adc
cmp
cmp
mov
test
addl
jmp
enter
addb
cmp
cmp
into
addb
adc
cmp
cmp
and
adc
cmp
jno
int
mov
jns
insb
popa
bound
frstor
adc
adc
cmp
cmp
mov
sbb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pusha
rcrb
popa
xchg
push
jg
pop
out
inc
xchg
aaa
clc
jmp
mov
mov
cmpsl
repnz
xchg
mov
lock
addb
cmp
cmp
ja
mov
addb
cmp
cmp
mov
arpl
dec
jl
lods
push
test
pop
cmpsl
ffreep
xchg
enter
inc
ja
xor
xchg
sbb
addb
adc
cmp
cmp
dec
lcall
addb
cmp
cmp
mov
test
adc
adc
cmp
cmp
mov
lods
lods
cmp
subl
jecxz
jnp
mov
lock
xor
cmpsb
jle
into
or
push
aad
sbb
jp
xor
adc
adc
cmp
cmp
push
ljmp
xchg
mov
addb
cmp
cmp
lret
lock
insl
mov
addb
adc
cmp
cmp
testl
jo
cmpl
inc
sub
cli
sub
mov
sbb
mov
test
out
sub
inc
popw
int3
sbb
test
pop
test
es
jecxz
repnz
je
sub
lods
xchg
mov
out
arpl
into
mov
and
cmp
xlat
test
leave
pop
pop
xchg
sbbb
dec
inc
mov
icebp
out
hlt
je
push
pop
testb
dec
sub
cmp
or
cs
fcoms
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xor
in
gs
inc
dec
es
sub
outsl
pop
roll
adc
mov
xchg
mov
in
push
sub
push
pop
outsb
dec
mov
aaa
fnstenv
scas
cs
aad
lods
hlt
clc
push
sbb
mov
inc
sbb
adc
adc
cmp
cmp
dec
xchg
pop
or
dec
jno
or
or
mov
or
mov
adc
adc
cmp
cmp
mov
sbb
ffreep
xchg
inc
leave
test
mov
pop
enter
clc
sub
orl
adc
cmp
cmp
mov
push
adcl
sbb
adc
adc
cmp
cmp
xor
xor
aad
leave
mov
inc
mov
mov
addb
cmp
cmp
xorl
adcb
adc
cmp
cmp
mov
adc
sbb
mov
mov
outsb
cwtl
xchg
mov
loopne
push
inc
addb
adc
cmp
cmp
cmp
test
fs
lcall
xchg
adc
adc
adc
cmp
cmp
shll
iret
jecxz
repnz
aad
ss
outsb
daa
mov
clc
push
aaa
shlb
addb
adc
cmp
cmp
pushf
test
or
jb
xorl
addb
cmp
cmp
pop
aam
into
test
add
das
cwtl
cwtl
or
addb
cmp
cmp
mov
sub
pop
dec
cmp
outsl
sub
clc
lods
outsl
pop
lock
int3
mov
push
mov
or
adc
adc
cmp
cmp
popa
insb
inc
mov
mov
add
jno
lret
cmp
outsb
sub
jne
fldl
addb
adc
cmp
cmp
push
xor
mov
call
mov
addb
cmp
cmp
mov
pusha
popa
mov
jmp
or
adcb
adc
cmp
cmp
mov
push
in
lods
int3
stos
addb
adc
cmp
cmp
jns
addb
adc
cmp
cmp
adc
mov
mov
mov
movsb
stc
or
pop
cmp
scas
clc
stc
insb
outsb
mov
lock
or
daa
sahf
addb
adc
cmp
cmp
jmp
push
mull
addb
cmp
cmp
mov
pop
lcall
push
test
imul
loopne
mov
inc
fildl
das
fwait
mov
jecxz
sti
test
js
push
xchg
cltd
out
sbb
adc
inc
mov
js
xor
dec
scas
sbb
fidivl
cmp
adc
sub
leave
sbb
pusha
rcrb
mov
outsl
ds
xor
outsb
inc
sub
sbb
inc
pop
jp
fwait
pop
movl
lret
and
dec
sub
push
xchg
pusha
xchg
xchg
std
repnz
cmpsb
mov
push
cwtl
testl
adcb
adc
cmp
cmp
mov
xorps
push
sbb
addb
cmp
cmp
mov
insl
mov
std
cmpsl
pop
popa
testl
movsb
lahf
xorb
and
filds
adc
adc
cmp
cmp
flds
sub
mov
push
dec
xchg
call
insl
xor
addb
cmp
cmp
mov
push
ss
addb
adc
cmp
cmp
cmc
lods
dec
inc
dec
aam
push
idivb
or
xchg
fwait
jg
pop
hlt
repnz
loopne
aam
iret
mov
mov
xor
push
stos
loopne
mov
movsl
adc
push
sub
mov
add
inc
pop
jge
call
addb
cmp
cmp
std
add
lret
mov
adcb
adc
cmp
cmp
mov
push
sub
jne,pt
shll
adc
adc
cmp
cmp
js
daa
loop
dec
insl
jns
fwait
push
enter
pop
ficoms
push
and
xor
mov
addb
cmp
cmp
push
ja
push
inc
repz
test
jo
and
ret
push
and
mov
addr16
and
mov
mov
loopne
test
jle
lods
fs
into
mov
imul
push
arpl
jge
or
ljmp
add
in
sub
xor
mov
mov
adcb
ret
adc
push
in
fidivrs
outsl
hlt
mov
pop
fbld
mov
cmp
dec
dec
sub
jmp
aad
addb
adc
cmp
cmp
mov
repnz
sbb
mov
xor
in
sub
addb
cmp
cmp
loop
addb
adc
cmp
cmp
fimull
clc
mov
mov
inc
pop
popf
xor
popf
std
jg
iret
imul
outsl
jbe
xor
addb
cmp
cmp
fcmove
imul
addb
cmp
cmp
leave
mov
push
js
repnz
xor
fld
push
fadds
jo
fucomi
lret
cmp
roll
sub
pop
insb
pop
sarb
leave
jae
addb
adc
cmp
cmp
int3
dec
add
mov
push
popf
aas
push
scas
imul
mov
and
out
ret
addb
adc
cmp
cmp
mov
dec
lods
loop
fwait
sbbb
clc
sub
jae
jecxz
popf
or
addr16
into
and
sbb
or
jne
push
jb
pushf
mov
jo
and
addb
adc
cmp
cmp
xor
dec
cmp
sbb
adc
dec
xchg
popf
icebp
adc
test
addb
adc
cmp
cmp
xchg
bound
arpl
sahf
addb
adc
cmp
cmp
fsubrs
call
adcb
adc
cmp
cmp
mov
cmpsl
loope
push
cmp
mov
jno
jmp
nop
addb
adc
cmp
cmp
or
nop
push
jl
imul
mov
sub
loope
jo
in
addb
adc
cmp
cmp
sbb
es
mov
push
jle
int3
ret
pop
jg
xchg
mov
adcb
adc
cmp
cmp
mov
ret
lock
dec
sbb
ret
inc
push
or
addb
adc
cmp
cmp
mov
dec
sub
ljmp
fisubl
dec
dec
sarb
push
mov
in
mov
ds
ret
fs
push
xlat
roll
xchg
addb
adc
cmp
cmp
add
je
rorb
mov
push
mov
cli
addb
adc
cmp
cmp
test
adcb
adc
cmp
cmp
mov
fwait
lods
sub
addb
adc
cmp
cmp
xchg
sub
xor
push
addb
adc
cmp
cmp
pushf
repnz
sbbb
push
call
xlat
es
insb
movsb
mov
insb
lahf
mov
adcb
adc
cmp
cmp
mov
aaa
fwait
es
popa
addb
adc
cmp
cmp
sti
mov
and
movsl
xor
roll
adc
adc
cmp
cmp
addb
adc
cmp
cmp
daa
ljmp
ljmp
test
lock
sahf
and
xchg
iret
bound
push
mov
test
testb
pop
mov
addb
cmp
cmp
xchg
mov
addl
adc
cmp
cmp
mov
or
imul
cmpsb
rcrb
daa
cli
xor
ret
mov
adc
decl
push
fld
dec
jmp
adc
adc
cmp
cmp
mov
jno
xor
push
addb
adc
cmp
cmp
add
addr16
addb
adc
cmp
cmp
jle
or
addb
cmp
cmp
mov
dec
data16
mov
pop
push
sbb
sahf
pop
sub
mov
dec
daa
dec
dec
test
mov
stc
cmp
nop
imul
in
and
adc
adc
cmp
cmp
shrd
adc
cmp
cmp
mov
lahf
jne
dec
mov
repnz
sbb
xchg
cmp
mov
sbbb
xor
push
mov
addb
cmp
cmp
mov
int3
fidivrl
xor
call
loop
sub
addb
cmp
cmp
mov
add
ja
xor
pop
mov
int3
iret
pop
lret
mov
addb
cmp
cmp
mov
es
rcll
bound
xor
adcb
adc
cmp
cmp
mov
cmp
add
sahf
lret
jp
or
jno
leave
cmc
inc
xchg
mov
sti
repz
pop
addr16
gs
inc
mov
pusha
iret
xchg
mov
push
out
aas
sub
push
mov
sbb
push
pop
xor
and
pop
mov
jge
xor
pop
cmpb
xchg
cmp
test
mov
push
fsubs
cmpsb
test
clc
int
flds
adcl
xlat
or
pop
xchg
dec
inc
test
movsl
shrl
lds
aas
inc
das
inc
int3
out
or
addb
cmp
cmp
mov
xchg
std
adc
pop
jle
pop
pop
sbb
insl
jns
addb
cmp
cmp
mov
aad
lcall
push
fnsave
rorb
mov
mov
addb
cmp
cmp
mov
mov
inc
call
addb
adc
cmp
cmp
cmp
inc
jno
sub
dec
ret
add
shl
shlb
pop
addb
adc
cmp
cmp
fcoms
pop
fdivr
leave
push
movl
rcrl
addb
cmp
cmp
aad
inc
orb
xchg
sub
adc
adc
cmp
cmp
aad
int3
push
popa
add
insl
je
mov
mov
das
fs
in
test
aam
lret
pop
shlb
addb
adc
cmp
cmp
aad
addl
adc
adc
cmp
cmp
push
lds
pop
sub
cli
xor
int
cli
cmpsl
adc
push
push
or
xor
push
sbbl
addb
adc
cmp
cmp
pushf
rorl
dec
rcrb
pop
testb
add
fidivrl
addb
cmp
cmp
mov
addb
adc
cmp
cmp
push
cltd
addb
adc
cmp
cmp
adc
push
jo
lods
lahf
fildl
aam
jns
pop
orl
pop
or
jb
mov
gs
addb
cmp
cmp
mov
out
addb
adc
cmp
cmp
inc
outsl
mov
pop
int
xchg
leave
ja
stc
xor
in
inc
push
pop
mov
push
fmul
xorl
adc
adc
cmp
cmp
sbb
push
cmp
or
adc
adc
cmp
cmp
mov
push
vmovd
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
pop
sbb
adc
adc
cmp
cmp
pop
push
jmp
ja
pop
cld
and
adc
xchg
enter
addb
adc
cmp
cmp
dec
push
mov
addb
cmp
cmp
mov
jb
sbb
xor
push
ret
and
sub
xchg
jle
addb
adc
cmp
cmp
jnp
xor
xor
ficomps
rcl
loop
jg
popf
int3
in
shrl
pop
addr16
xor
stc
cmc
daa
and
lods
std
addb
adc
cmp
cmp
dec
shlb
arpl
cltd
jg
xor
sub
jns
das
addb
adc
cmp
cmp
add
lods
mov
mov
pop
addb
adc
cmp
cmp
lods
clc
mov
or
imul
adc
pop
ljmp
adc
adc
cmp
cmp
mov
in
mov
push
xchg
sub
lcall
pop
addb
adc
cmp
cmp
mov
push
push
mov
xchg
or
addb
cmp
cmp
mov
iret
xchg
stc
jmp
adc
adc
cmp
cmp
mov
push
or
ljmp
adcb
adc
cmp
cmp
mov
sbb
cs
xchg
pushfw
ja
push
leave
jmp
addb
adc
cmp
cmp
repnz
xor
inc
inc
pop
sarb
mov
adc
adc
cmp
cmp
mov
sbb
and
xchg
jno
dec
nop
cmp
insl
bound
aad
add
xor
sti
addb
adc
cmp
cmp
addb
adc
cmp
cmp
aad
xchg
flds
sub
jnp
lods
sbb
adc
cmpsl
adc
mov
scas
aam
std
sahf
push
das
fcoms
js
mov
adcb
adc
cmp
cmp
mov
add
sahf
push
adc
adc
add
ret
insb
xlat
cmp
push
mov
roll
addb
cmp
cmp
mov
cltd
push
dec
cmp
xor
jl
adc
ret
outsb
dec
xchg
test
test
or
mov
out
addb
cmp
cmp
mov
loope
icebp
jmp
addb
cmp
cmp
mov
pushf
push
dec
addb
adc
cmp
cmp
xchg
jl
lcall
addb
adc
cmp
cmp
punpcklwd
mov
addb
cmp
cmp
xchg
mov
and
das
mov
push
hlt
adc
daa
shll
push
popf
in
xchg
inc
addr16
cmp
mov
roll
adc
adc
cmp
cmp
adcl
pusha
cli
ret
cli
stos
out
inc
scas
dec
jno
pop
lock
adc
cmp
cmp
and
xor
or
cmp
xchg
mov
mov
add
addb
adc
cmp
cmp
xor
adcb
adc
cmp
cmp
mov
adc
addb
cmp
cmp
mov
sbb
addb
cmp
cmp
jmp
mov
inc
movsl
in
pop
lds
call
scas
adcb
in
addb
cmp
cmp
mov
xchg
pusha
jnp
mov
test
mov
adc
adc
cmp
cmp
pop
inc
xchg
mov
inc
mov
popa
in
addb
cmp
cmp
mov
mov
jecxz
ret
aas
adc
adc
adcb
adc
cmp
cmp
mov
or
sbb
fs
inc
pop
js
lahf
xor
xor
lret
loopne
cs
fldcw
mov
jge
xchg
aaa
subl
sbb
mov
xchg
and
xchg
or
jg
fdivrl
rcll
adc
lods
mov
addb
cmp
cmp
add
xorb
pop
ret
xchg
jecxz
cmp
adc
adc
cmp
cmp
clc
int3
and
aam
push
je
jp
stos
addb
adc
cmp
cmp
mov
push
dec
scas
push
aam
and
movsb
or
pop
enter
movsb
push
jnp
lret
addb
cmp
cmp
idiv
cld
xchg
push
jmp
xor
xor
dec
fst
mov
std
icebp
loope
mov
xchg
addb
adc
cmp
cmp
ja
inc
stos
cltd
in
mov
les
data16
adc
cmp
cmp
lahf
add
addb
cmp
cmp
iret
in
sti
xchg
cmp
mov
shlb
sub
shlb
mov
mov
mov
cmp
jp
cmpsl
mov
cmp
adcl
adc
adc
cmp
cmp
mov
faddl
addb
adc
cmp
cmp
inc
mov
test
in
dec
stc
repz
insl
outsb
insb
jecxz
imul
repnz
xchg
and
int3
mov
aas
add
add
push
sti
sub
ret
mov
jno
dec
in
nop
addb
adc
cmp
cmp
sahf
jge
xor
jnp
addb
cmp
cmp
mov
push
lods
aas
lahf
pop
clc
addr16
aas
lock
dec
imul
mov
and
sub
mov
insl
fidivrl
out
mov
sbb
inc
stos
push
push
rolb
add
xchg
push
adc
lock
push
into
sub
jbe
fsubrl
addb
cmp
cmp
mov
addl
push
adc
sbb
addb
adc
cmp
cmp
xlat
stos
mov
addr16
nop
jno
aad
cmpsb
xchg
xor
repz
dec
dec
mov
out
mov
pop
mov
adc
adc
cmp
cmp
mov
ja
test
jl
xor
sub
jge
inc
mov
inc
and
or
notl
push
sbb
imul
adc
adc
cmp
cmp
mov
xchg
sub
cmpsl
push
loope
pop
mov
std
and
xor
es
dec
pop
inc
push
loopne
test
push
arpl
adc
adc
cmp
cmp
leave
push
jg
xor
divl
cmp
jne
addb
cmp
cmp
mov
jge
insb
addb
adc
cmp
cmp
pop
sbbb
xchg
push
addb
adc
cmp
cmp
imul
push
aad
cmp
addb
cmp
cmp
mov
bound
insb
jo
xchg
lods
xor
movsb
jp
in
jo
addb
cmp
cmp
mov
xchg
pusha
pop
lahf
addb
adc
cmp
cmp
xor
pusha
sbb
xchg
out
arpl
fwait
inc
or
jnp
mov
movl
addb
cmp
cmp
sbb
mov
inc
mov
push
addb
adc
cmp
cmp
xor
insb
lods
imul
stc
leave
stos
outsb
push
cmp
inc
outsb
addb
adc
cmp
cmp
pop
or
dec
sub
pop
lds
int3
test
sub
adcb
adc
cmp
cmp
mov
jnp
jp
push
jmp
inc
mov
lock
xor
imul
pop
jo
rcll
add
fidivl
xor
test
jmp
xor
adcb
adc
cmp
cmp
mov
lds
ja
pop
mov
push
movsb
sahf
stos
out
sahf
push
mov
loop
cmp
aaa
mov
sbb
loope
jg
xor
js
dec
rcrl
divb
dec
cltd
mov
mov
js
cmp
dec
addb
adc
cmp
cmp
cmp
inc
aam
testl
scas
or
fcomi
xchg
addb
adc
cmp
cmp
dec
mov
lret
inc
dec
push
cmp
adcb
adc
cmp
cmp
mov
int3
int3
mov
addb
cmp
cmp
mov
sbb
bnd
jno
scas
lods
xor
mov
jo
addb
cmp
cmp
mov
in
cmp
jle
addb
cmp
cmp
mov
fdiv
movsb
popf
mov
cmp
lret
pop
int
or
pop
popa
sub
imul
popf
shrl
test
int3
loop
addb
adc
cmp
cmp
iret
mov
mov
adc
adcb
adc
cmp
cmp
mov
xor
movsl
inc
sbb
jb
clc
pop
jg
aas
sbb
cs
sbb
adcb
adc
cmp
cmp
mov
mov
push
aas
pop
insl
push
ret
jbe
out
insb
dec
int
add
dec
cmpsb
testb
cmp
mov
jle
cmp
mov
or
addb
cmp
cmp
mov
xchg
rcl
sti
add
addb
xchg
fmul
popf
rcrb
movsl
cmp
outsb
faddl
jo
adcb
test
lods
pop
enter
xchg
push
jo
addb
adc
cmp
cmp
mulb
jnp
es
fistps
jbe
aaa
pusha
rcrl
adc
mov
or
into
negl
mov
lock
mov
jecxz
outsl
add
rolb
jo
dec
add
scas
adc
addb
cmp
cmp
mov
cmp
fwait
test
jbe
gs
fimuls
mov
addb
cmp
cmp
mov
pop
loope
add
in
mov
cmp
or
adc
adc
cmp
cmp
xor
push
je
inc
fidivrl
imul
mov
dec
push
pop
mov
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
and
mov
leave
xchg
pop
int
cmc
fbld
hlt
repz
movsb
push
jmp
adcb
adc
cmp
cmp
mov
add
jno
mov
adcb
adc
cmp
cmp
mov
add
adc
adc
cmp
cmp
mov
cmp
add
add
adc
adc
cmp
cmp
mov
fdivp
fdivs
dec
vmread
xor
dec
popf
push
fwait
mov
test
cmc
addb
adc
cmp
cmp
dec
jmp
cmp
sahf
cld
test
sti
clc
scas
mov
cmp
ja
rorl
fcomip
sub
add
mov
cltd
mov
xchg
xchg
shlb
lods
sbb
or
sbb
shr
mov
lret
addb
cmp
cmp
mov
aad
or
push
lret
test
addb
adc
cmp
cmp
jne
mov
call
mov
outsb
addb
adc
cmp
cmp
and
inc
sbb
les
loope
xchg
mov
nop
movsl
push
jno
les
xchg
addb
adc
cmp
cmp
bound
jo
push
sub
sub
pop
jne
mov
jo
sti
mov
xchg
lret
test
dec
fisubrs
jns
inc
mov
lcall
pop
insb
ret
lahf
loop
ret
mov
pop
cmpsl
lds
cwtl
insl
addb
adc
cmp
cmp
loop
gs
mov
filds
adc
adc
cmp
cmp
or
inc
sub
mov
scas
dec
sbb
adc
adc
cmp
cmp
add
pop
fisubrl
cltd
mulb
addb
cmp
cmp
xlat
imull
xchg
out
out
mov
xchg
fdiv
or
adc
adc
cmp
cmp
mov
lods
into
das
aad
mov
xor
sti
iret
mov
jp
cld
addr16
in
mov
cmp
gs
fdivs
mov
daa
insb
mov
addb
adc
cmp
cmp
or
and
addb
cmp
cmp
mov
cmp
fcmove
mov
sub
addb
cmp
cmp
mov
rorb
ja
test
fs
fstpt
adc
adc
cmp
cmp
mov
outsl
dec
data16
addb
adc
cmp
cmp
jle
ljmp
repnz
scas
scas
cmp
lods
mov
ret
mov
in
lods
xchg
aam
or
mov
and
adc
adc
cmp
cmp
mov
gs
mov
lea
cs
bound
adc
adc
cmp
cmp
ret
and
cli
lea
orb
addb
cmp
cmp
mov
js
or
inc
andl
fildl
rcrl
addb
adc
cmp
cmp
imul
push
icebp
pop
inc
popa
addb
adc
cmp
cmp
push
enter
data16
sahf
frstor
sbb
adc
adc
cmp
cmp
lods
xor
fildl
adc
adc
cmp
cmp
jne
xor
fisttpll
inc
inc
mov
mov
adcb
adc
cmp
cmp
mov
dec
sbb
test
dec
loope
jo
addb
cmp
cmp
mov
cmp
fcmovb
pop
mov
aas
inc
icebp
outsb
pop
mov
jb
test
pop
pop
test
jl
dec
adc
out
sub
sub
pushf
add
cmp
xor
jg
sbb
xchg
xor
and
adc
adc
cmp
cmp
adc
addb
adc
cmp
cmp
or
les
inc
cmp
cmp
addb
adc
cmp
cmp
icebp
nop
xchg
fldenv
fnstcw
arpl
in
insl
push
data16
sarl
stc
add
cmp
fcoml
sbb
mov
mov
cmpsb
leave
rolb
loop
pushf
push
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
mov
ds
mov
and
dec
lahf
xchg
das
or
addb
adc
cmp
cmp
ds
xchg
test
adcb
adc
cmp
cmp
mov
int3
mov
aas
jns
inc
adc
outsl
jne
mov
push
mov
inc
lock
adc
adc
cmp
cmp
lret
cmc
sbb
ret
push
mov
and
test
jo
mov
ljmp
xlat
add
cmpsb
mov
addb
adc
cmp
cmp
push
add
roll
leave
or
sbb
ret
fcomps
push
cmp
cmc
repz
in
fcomi
fs
addb
cmp
cmp
mov
arpl
adcb
adc
cmp
cmp
mov
mov
jmp
xor
cltd
arpl
xchg
aaa
leave
pop
shll
arpl
shrb
lods
nop
testl
popf
xor
sbb
dec
xchg
popa
mov
pop
sub
insb
xchg
sahf
inc
lret
cmp
adcb
adc
cmp
cmp
mov
ret
adc
adcb
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
icebp
mov
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
lea
dec
add
adcb
adc
cmp
cmp
mov
sub
sub
adcb
adc
cmp
cmp
mov
inc
and
mov
pop
or
push
xchg
fsubp
pop
addb
adc
cmp
cmp
test
add
jb
pop
mov
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
stos
jae
jnp
xlat
fsubrs
in
addb
adc
cmp
cmp
stos
inc
sub
xchg
outsl
pop
movsb
nop
scas
sub
dec
dec
pop
jbe
outsl
inc
cltd
pop
xchg
push
dec
and
jecxz
mov
addb
cmp
cmp
pushf
sbb
jno
jno,pn
cmpsb
lods
mov
xchg
test
addb
cmp
cmp
mov
insb
xchg
fstp
inc
add
aam
mov
enter
pop
lea
inc
scas
insb
mov
outsl
addb
adc
cmp
cmp
inc
out
scas
enter
jle
addb
adc
cmp
cmp
add
adcb
adc
cmp
cmp
mov
and
jne
addb
adc
cmp
cmp
add
adc
adc
cmp
cmp
mov
outsb
fisubrs
addb
cmp
cmp
lock
nop
xchg
addb
adc
cmp
cmp
dec
popa
mov
imul
jp
adc
into
dec
mov
addb
cmp
cmp
mov
out
push
xorl
adc
adc
cmp
cmp
mov
xor
sub
mov
jge
xlat
xor
sbb
outsl
out
xor
loopne
icebp
jne
cmc
loope
movb
adc
test
cli
ja
mov
cmc
aad
jmp
sub
test
mov
adc
addb
adc
cmp
cmp
mov
inc
std
cmpsl
hlt
call
xchg
hlt
addb
adc
cmp
cmp
and
inc
jne
pop
xor
outsl
ror
mov
xlat
test
mov
jecxz
lahf
addb
adc
cmp
cmp
jo
mov
mov
sti
ret
mov
or
mov
sti
ds
dec
sub
insl
and
dec
popl
dec
push
fdivl
aam
scas
enter
jae
cmpsl
ffree
sbb
and
addb
adc
cmp
cmp
hlt
outsl
cli
cmp
mov
jne
xchg
shlb
addb
cmp
cmp
mov
repz
out
addb
adc
cmp
cmp
ret
nop
push
addb
cmp
cmp
mov
dec
aad
mov
adcb
adc
cmp
cmp
mov
fsubr
pop
and
mov
sub
inc
scas
outsb
ss
mov
adcb
adc
cmp
cmp
mov
push
xchg
jl
xor
out
addb
cmp
cmp
mov
data16
jbe
addb
adc
cmp
cmp
xor
stos
jno
lock
add
sbb
sbb
xchg
and
and
mov
ret
mov
adc
fsub
dec
push
dec
xchg
addb
adc
cmp
cmp
add
mov
addb
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
pushl
int
test
addb
cmp
cmp
mov
aaa
cmp
dec
push
gs
jb
add
fs
addb
adc
cmp
cmp
daa
xor
out
add
adcb
adc
cmp
cmp
mov
mov
ja
je
addb
cmp
cmp
mov
push
fistl
adc
adc
cmp
cmp
mov
push
enter
push
xchg
or
fists
xor
cmc
call
mov
pop
sub
sti
dec
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
cmp
addb
cmp
cmp
xchg
adc
ret
addb
cmp
cmp
mov
jg
push
push
sub
aad
mov
les
test
push
and
js
addb
cmp
cmp
mov
cmp
mov
addb
adc
cmp
cmp
leave
mov
test
add
inc
ret
or
addb
cmp
cmp
cmpsb
dec
sbb
mov
adcb
adc
cmp
cmp
mov
stos
ret
push
dec
outsl
mov
adc
adc
cmp
cmp
mov
push
dec
arpl
in
imul
fsubr
mov
dec
repz
je
imull
and
in
jae
jecxz
daa
add
ret
jb
add
adc
adc
cmp
cmp
pop
cwtl
mov
scas
cltd
mov
and
adc
adc
cmp
cmp
scas
out
mov
mov
fistpll
push
sbb
addb
cmp
cmp
mov
or
push
arpl
adcb
adc
cmp
cmp
mov
adc
pop
sbb
adc
adc
cmp
cmp
mov
xchg
loopew
roll
cmp
push
and
in
pop
test
inc
jae
mov
mov
adc
into
push
sbb
or
addb
cmp
cmp
mov
jno
cmp
ret
jb
aad
pop
lret
cmpsl
outsb
sbb
adc
adc
cmp
cmp
push
popf
lods
outsl
adc
adc
adc
cmp
cmp
mov
shrb
dec
push
ret
jle
pop
sbb
fildll
ret
push
enter
mov
inc
fdivr
data16
mov
js
or
mov
cmp
addb
cmp
cmp
xor
jnp
push
addb
adc
cmp
cmp
mov
into
pop
mov
pop
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
adc
ret
mov
test
aas
mov
or
addb
cmp
cmp
mov
cmpsb
adc
cld
popf
into
fsubrs
int3
or
sbb
js
mov
loope
inc
addb
adc
cmp
cmp
cmpsl
inc
sub
add
arpl
mov
loope
mov
addb
cmp
cmp
mov
addb
cmp
cmp
mov
add
scas
sbb
ret
mov
add
dec
xor
arpl
cld
loop
addb
cmp
cmp
mov
adc
adc
adc
cmp
cmp
mov
sbb
pop
adc
mov
movsb
and
sarl
std
dec
fisttpll
pop
xor
stos
int
scas
or
or
mov
cli
nop
mov
inc
lcall
adc
adc
cmp
cmp
mov
push
cwtl
jle
addb
adc
cmp
cmp
sbb
push
adc
movsb
popf
repz
adc
adc
cmp
cmp
mov
std
lock
gs
or
rcll
adc
adc
adc
cmp
cmp
popf
rorb
addb
adc
cmp
cmp
add
icebp
popa
pop
xchg
jb
loope
pop
adc
adc
adc
cmp
cmp
cmp
outsl
xchg
cmp
je
leave
in
mov
or
adc
adc
cmp
cmp
push
cmp
sbb
stos
in
xchg
addb
adc
cmp
cmp
lahf
rolb
adc
cmp
cmp
mov
sbb
pop
lret
pop
xor
mov
jae
mov
jp
push
or
in
jp
nop
lods
roll
xor
cmp
lcall
mov
mov
add
sahf
decl
push
cmp
out
ja
cmp
ljmp
rep
dec
into
inc
mov
fldenv
imul
adcb
adc
cmp
cmp
mov
xor
pop
daa
shll
pop
inc
mov
pop
jo
out
jecxz
adc
movsb
insb
cli
mov
inc
mov
lods
aaa
jp
test
cli
addb
adc
cmp
cmp
cltd
inc
adc
cmp
popf
cmc
scas
dec
sbb
add
movsb
addb
adc
cmp
cmp
rcrl
sbb
loop
jb
lods
or
xor
insb
rolb
sahf
fisttpll
repz
pop
loope
mov
push
fdivrs
or
xchg
stos
out
pop
xchg
cmp
push
or
imul
adc
adc
cmp
cmp
mov
mov
addb
cmp
cmp
inc
enter
and
iret
mov
movsl
rorb
push
rcrb
insb
cld
jno
xor
dec
mov
popa
leave
fsubrs
and
xchg
imul
inc
mov
outsb
stos
adc
shl
jb
adc
adc
cmp
cmp
push
daa
addb
adc
cmp
cmp
mov
bound
addb
adc
cmp
cmp
push
lods
rcrb
push
loop
xlat
xchg
addb
adc
cmp
cmp
ret
insl
dec
mov
fs
loope
repnz
pop
mov
adc
adc
cmp
cmp
mov
xor
cmpsl
dec
xchg
cmp
addb
cmp
cmp
into
sbb
dec
cmpsb
jl
aam
repz
xchg
addb
cmp
cmp
mov
dec
loopne
add
pop
push
addb
adc
cmp
cmp
jmp
addr16
sbb
push
out
mov
xor
cwtl
sub
dec
mov
idiv
jle
adc
addb
cmp
cmp
mov
imul
jbe
cmc
sbb
or
adc
adc
cmp
cmp
addb
adc
cmp
cmp
dec
push
into
pop
rclb
xlat
cld
popf
dec
push
filds
addb
adc
cmp
cmp
mov
pop
gs
lret
push
xor
mov
inc
loopne
mov
addb
adc
cmp
cmp
out
lock
ja
xchg
popa
arpl
adc
adc
cmp
cmp
mov
hlt
hlt
shrb
pushf
aas
lods
addb
adc
cmp
cmp
ljmp
ja
aas
cs
lods
xor
add
lock
xchg
sbb
or
les
aas
data16
addb
cmp
cmp
mov
pop
das
cmp
push
aaa
adc
test
jbe
cmp
push
jecxz
fisubs
sbb
fiadds
adcb
adc
cmp
cmp
mov
xchg
dec
outsl
sbb
outsl
jge
cltd
insb
sarb
inc
mov
movsl
sar
mov
or
addb
cmp
cmp
xchg
mov
addb
cmp
cmp
mov
xlat
add
pushf
pusha
xor
pop
pop
cmp
fnstenv
in
aaa
jg
rcr
pushf
push
sbbl
push
inc
cmc
adc
loopne
mov
cmp
pop
inc
jae
test
jle
pop
fildl
adc
adc
cmp
cmp
sbb
adc
adc
cmp
cmp
or
push
test
dec
cld
addb
adc
cmp
cmp
xchg
icebp
mov
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sub
daa
adc
pop
xchg
jae
xor
xchg
ret
dec
jns
mov
jnp
lock
ffreep
shl
adc
outsl
subb
sbb
adc
adc
cmp
cmp
mov
jo
jmp
cmp
and
aam
push
mov
push
jbe
mov
ret
push
clc
addl
test
mov
pop
xchg
mov
mov
lds
xor
adc
adc
cmp
cmp
or
addb
cmp
cmp
mov
pop
jno
mov
test
adc
and
pop
push
xlat
jmp
addb
cmp
cmp
test
clc
sti
xor
or
cltd
ds
sbb
sti
ret
sbb
sbb
adc
adc
cmp
cmp
repz
mul
sbb
pop
and
xlat
pop
add
lds
mov
mov
mulb
cmp
call
push
jle
pop
ljmp
popa
mov
imul
ret
mov
loop
movsl
or
or
jle
movb
mov
and
lds
cmp
dec
in
loope
gs
pop
cmp
bound
aaa
repnz
cmc
sbb
cld
add
scas
push
adc
sbb
je
iret
jmp
addb
cmp
cmp
mov
cmpsb
popa
and
or
sbb
pusha
and
aas
pop
pop
jl
addb
cmp
cmp
mov
pop
inc
jmp
addb
adc
cmp
cmp
mov
fwait
push
adc
push
ss
ret
ficomps
cmc
fldenv
mov
insb
inc
add
lcall
lret
call
insb
popf
je
adc
sub
cmpsb
fistpl
mov
mov
popf
xor
xor
fdivrs
mov
xchg
dec
add
addb
addb
cmp
cmp
mov
insb
lea
outsb
inc
out
sub
push
mov
pop
testl
cmp
cmp
and
mov
imul
jns
test
sbb
aam
inc
les
int
xchg
lods
xchg
loop
add
mov
mov
repz
xor
mov
mov
adc
adcb
adc
cmp
cmp
mov
mov
mov
sahf
xchg
int3
adc
add
addb
adc
cmp
cmp
sbb
addb
cmp
cmp
mov
int
test
push
push
mov
stos
cmp
adc
or
sub
test
inc
int3
fistps
jle
lret
jae
scas
fucompp
and
jmp
xchg
mov
adcb
adc
cmp
cmp
mov
sub
push
les
adc
adc
cmp
cmp
and
iret
fsubs
xchg
sub
rorb
icebp
mov
pop
fimuls
and
adcb
adc
cmp
cmp
mov
fninit
and
sbb
addb
cmp
cmp
addb
adc
cmp
cmp
addr16
stc
jne
fsubp
xchg
mov
mov
fisubrs
dec
adc
adc
adc
cmp
cmp
mov
fildll
gs
aad
pop
sahf
adc
adc
adc
cmp
cmp
loop
jmp
jne
cmp
sbb
fsubs
pop
pop
sbb
adc
dec
imul
addb
adc
cmp
cmp
mov
pop
mov
mov
sub
fimull
lret
outsb
stos
lahf
sbb
mov
jle
addb
cmp
cmp
mov
pop
sub
mov
jne
orl
inc
sub
inc
mov
loopne
in
aad
test
clc
jecxz
push
aas
lea
adc
push
bound
movsb
rolb
test
fwait
sub
pop
adc
mov
addb
adc
cmp
cmp
jo
jae
ret
aad
jecxz
iret
repnz
outsb
js
mov
enter
fisttpl
cli
xor
lods
es
add
or
sub
addb
cmp
cmp
mov
xorl
xchg
in
push
xor
fsubp
sahf
cmp
add
addb
adc
cmp
cmp
sbb
jmp
add
call
and
fadds
fdivrl
nop
lods
mov
or
cmpsb
adc
call
insb
insb
rcrb
lea
mov
mov
mov
gs
movsb
mov
fisttps
cmp
sub
pop
lds
adcb
adc
cmp
cmp
mov
mov
pop
fidivl
fadd
dec
dec
cltd
mov
lahf
xchg
inc
les
and
mov
push
imul
js
in
push
outsl
fldl
addb
cmp
cmp
mov
out
fcmovnb
in
mov
addb
cmp
cmp
mov
fiaddl
faddl
orl
sbb
sub
sti
iret
inc
iret
roll
adc
adc
cmp
cmp
add
mov
mov
in
mov
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
dec
notl
or
addb
adc
cmp
cmp
insb
lret
je
jno
test
adcb
adc
cmp
cmp
mov
out
sub
mov
outsb
fimull
dec
jl
lds
jg
addr16
iret
sbb
jmp
adc
adc
cmp
cmp
mov
xor
std
inc
inc
jns
addb
cmp
cmp
mov
push
push
cmpsb
je
jbe
mov
popa
pusha
xchg
testl
cli
mov
inc
add
cmp
aas
dec
cmp
loope
push
scas
and
aaa
movsl
pop
fldl
adc
adc
cmp
cmp
imull
add
je
inc
mov
ret
pop
sti
fistpll
cmpl
mov
aas
mov
add
push
test
addb
adc
cmp
cmp
xorl
lods
fildll
mov
addb
cmp
cmp
mov
popf
pushf
outsb
ljmp
jle
pop
addb
adc
cmp
cmp
xchg
xchg
jne
pop
mov
dec
jle
jbe
adc
negl
push
inc
and
sbb
push
cmp
adc
add
adc
adc
cmp
cmp
adc
sti
pop
pushl
icebp
inc
xchg
rclb
movsb
data16
jnp
sbb
dec
push
push
jg
loope
lahf
repnz
fisubs
cmp
addb
adc
cmp
cmp
lahf
pop
outsb
dec
es
mov
pop
repnz
out
xchg
pop
lea
sub
loopne
clc
xchg
pop
add
adc
addb
cmp
cmp
mov
dec
lock
dec
lret
sub
and
adcb
adc
cmp
cmp
mov
adc
cmp
stos
or
addb
cmp
cmp
mov
subl
call
fcomip
shl
cmc
lcall
dec
pop
or
add
pop
cmc
pop
push
gs
mov
addb
adc
cmp
cmp
mov
xor
or
cld
dec
xchg
pop
lods
adc
jnp
add
xchg
pusha
xchg
cmp
stc
dec
add
push
push
mov
mov
mov
adc
adc
cmp
cmp
mov
testb
shll
orb
inc
push
inc
xor
adc
adc
cmp
cmp
ret
sbbb
add
addb
adc
cmp
cmp
dec
xchg
stc
xchg
xor
mov
push
aaa
outsb
ret
fcoms
push
nop
push
data16
cli
mov
ret
cltd
lock
push
sbb
icebp
cmp
cmp
mov
loopne
jnp
inc
ret
shr
or
adcb
adc
cmp
cmp
mov
imull
inc
adc
adc
addb
cmp
cmp
mov
addb
adc
cmp
cmp
rcrl
ret
mov
sub
mov
xchg
lds
pop
jmp
addb
cmp
cmp
mov
or
mov
leave
test
pusha
jae
cmp
adc
adc
cmp
cmp
addb
adc
cmp
cmp
push
fistl
pop
jp
int
addb
adc
cmp
cmp
xchg
adc
adc
cmp
cmp
aad
aaa
cvtps2pd
in
pop
xlat
cmp
icebp
sbb
addb
cmp
cmp
mov
ret
dec
mov
push
cmc
inc
inc
xchg
and
jne
mov
bound
arpl
push
cltd
addb
adc
cmp
cmp
sub
ficoms
dec
js
push
xchg
addb
adc
cmp
cmp
fmuls
cmp
test
jle
xchg
push
or
sbb
sub
aad
lds
pop
dec
cwtl
xor
nop
mov
loopne
or
jle
dec
or
dec
or
les
push
inc
dec
pop
sub
mov
enter
xor
add
xchg
jp
and
inc
addb
adc
cmp
cmp
fwait
xchg
in
adc
dec
andl
xor
adcb
adc
cmp
cmp
mov
ret
addb
adc
cmp
cmp
cli
add
outsl
and
xchg
movsb
dec
movsb
rclb
rcrl
push
aaa
es
fwait
lods
or
leave
jmp
lcall
cmp
rolb
adc
adc
cmp
cmp
dec
inc
mov
jle
mov
dec
aad
push
fsubl
adc
adc
cmp
cmp
mov
mov
pop
cs
imul
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
dec
push
adc
and
addb
adc
cmp
cmp
aam
daa
jne
addb
cmp
cmp
mov
jnp
popl
lds
addb
cmp
cmp
mov
addb
adc
cmp
cmp
repz
cmp
repz
addb
adc
cmp
cmp
imul
mov
mov
fildl
adc
adc
cmp
cmp
fdivl
test
cli
dec
bound
adc
adc
cmp
cmp
js
scas
outsb
in
and
pop
and
cs
jg
addb
cmp
cmp
mov
cmp
jae
mov
ds
lahf
data16
xchg
movsl
bound
jmp
or
shll
addb
adc
cmp
cmp
sti
xchg
mov
jae
sbb
shrl
shl
jg
cmpsb
and
addb
cmp
cmp
mov
addr16
adc
out
xchg
lahf
fldl2e
in
pop
jo
popf
mov
addb
adc
cmp
cmp
xchg
fisubl
lea
pop
push
jnp
push
mov
sub
cmp
or
subb
hlt
and
stos
jl
leave
jbe
nop
pop
rorb
fsubl
mov
cmpsl
into
test
push
push
inc
inc
scas
js
pop
or
decl
and
addb
cmp
cmp
mov
test
add
sbb
push
hlt
addb
adc
cmp
cmp
inc
pusha
lds
mov
loope
cltd
mov
mov
addb
cmp
cmp
sbb
bound
pop
adc
xor
addb
cmp
cmp
mov
addl
addb
cmp
cmp
inc
out
xor
pusha
pusha
push
sub
cmpsl
ds
add
gs
fwait
fs
mov
xor
cmpsl
imul
and
mov
mov
ja
or
lret
test
dec
lock
test
pushaw
mov
in
idivb
push
fidivrs
test
push
adcb
adc
cmp
cmp
mov
and
scas
aam
mov
adc
adc
adc
cmp
cmp
rorl
loope
mov
and
js
mov
jo
mov
addb
adc
cmp
cmp
ja
sub
mov
out
mov
adcb
adc
cmp
cmp
mov
arpl
cmp
or
in
dec
jne
cmp
cmp
insl
lods
sub
mov
fadds
adc
cmp
sbb
push
mov
mov
hlt
fwait
adc
push
roll
addb
adc
cmp
cmp
or
mov
mov
je
add
jbe
roll
dec
adc
mov
addb
cmp
cmp
mov
out
outsb
clc
dec
nop
iret
cwtl
cltd
jl
pusha
dec
mov
shlb
pusha
sarb
xlat
add
int
xchg
lret
dec
cs
pop
cli
mov
addb
adc
cmp
cmp
aas
jg
inc
or
sbb
pop
lret
xchg
and
adcb
adc
cmp
cmp
mov
inc
sub
add
bound
and
or
add
or
leave
pop
les
mov
in
xchg
addb
adc
cmp
cmp
xor
and
and
dec
pop
mov
lods
mov
xor
cmp
xchg
cmpsb
or
fidivs
adc
repnz
aas
sbb
js
xchg
cwtl
sbb
and
lock
addb
cmp
cmp
mov
outsb
adc
mov
mov
fdecstp
inc
sub
xor
adc
adc
cmp
cmp
xchg
cmc
imul
out
or
movsb
inc
mov
addb
cmp
cmp
mov
xchg
add
or
enter
les
hlt
test
mov
out
dec
addb
adc
cmp
cmp
shr
jae
or
cld
aaa
mov
push
addb
adc
cmp
cmp
or
or
sbb
into
and
mov
jmp
dec
nop
ds
sbb
dec
pop
daa
jne
insl
in
mov
std
stos
cmpsl
addb
adc
cmp
cmp
das
jge
bound
adc
adc
cmp
cmp
ds
push
je
xor
js
sub
ret
add
adc
adc
cmp
cmp
mov
dec
mov
dec
out
add
adcb
adc
cmp
cmp
mov
test
push
je
jnp
mov
fmuls
xchg
or
fstps
call
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jmp
pop
jmp
pmaxub
test
or
loop
in
xchg
mov
inc
mov
addb
cmp
cmp
mov
xchg
xchg
stos
mov
adc
xchg
adc
adc
cmp
cmp
mov
in
jae
pop
or
movsl
addb
adc
cmp
cmp
daa
cmp
adcb
adc
cmp
cmp
mov
adc
and
cmp
loop
jnp
subb
inc
push
mov
addb
adc
cmp
cmp
mov
int3
cmp
and
fidivrs
cmp
xchg
cmp
adc
push
xchg
mov
loopne
jne
pop
jecxz
push
push
xor
sub
cmc
push
xlat
out
fcmovbe
jl
push
and
dec
loop
repnz
scas
cmc
adc
ss
arpl
sbb
in
sahf
jne
out
mov
jno
loope
addb
adc
cmp
cmp
push
outsb
cmpb
jecxz
pop
pusha
imul
and
pop
xchg
adc
xchg
inc
sbb
xor
repz
xchg
and
push
push
enter
xor
fildl
dec
or
pusha
addb
adc
cmp
cmp
pop
jp
cmp
mov
shll
jns
fisttps
mov
sbb
inc
stos
xorb
scas
mov
std
out
ja
jne
sbb
jle
ds
mov
addb
cmp
cmp
mov
cmp
push
sub
addb
cmp
cmp
mov
enter
sbb
inc
bound
nop
sbb
mov
dec
lods
aaa
sahf
inc
cmpsb
pop
in
and
dec
mov
cmp
adc
adc
cmp
cmp
mov
icebp
iret
pusha
repz
xchg
and
loop
mov
lret
ss
cld
mov
addb
cmp
cmp
mov
add
mov
fiadds
adc
adc
cmp
cmp
popf
pushf
cld
mov
outsb
faddl
cwtl
mov
fcom
insl
adc
adcb
adc
cmp
cmp
mov
lret
cmpl
and
js
dec
ror
or
sub
fwait
mov
push
pop
jle
sahf
sub
push
push
adc
adc
add
mov
je
shrl
adcb
adc
cmp
cmp
mov
cmpsb
scas
sub
test
mov
and
jp
jno
sub
iret
jecxz
mov
sub
addb
cmp
cmp
inc
or
dec
sub
bound
mov
push
ret
jne
dec
dec
adc
adcb
adc
cmp
cmp
mov
sbb
cltd
inc
stc
jb
inc
inc
cmp
fdivrs
mov
cmpsl
stos
fists
addb
cmp
cmp
mov
xor
pop
in
pop
or
rcr
inc
cmpl
stos
popa
scas
hlt
les
aaa
out
mov
mov
pusha
cld
sahf
les
jcxz
dec
mov
rcrb
int3
mov
cmp
pop
pop
lods
stos
xor
mov
in
ret
loop
or
adc
adc
cmp
cmp
mov
es
add
sub
icebp
add
int3
xor
and
jo
fiadds
std
jle
scas
cmpsl
dec
stc
sbb
adc
adc
cmp
cmp
mov
mov
enter
lods
inc
sbb
addb
adc
cmp
cmp
and
sbb
dec
xor
in
aam
addb
adc
cmp
cmp
jbe
ficoml
repnz
jo
cld
inc
addb
adc
cmp
cmp
inc
addb
adc
cmp
cmp
add
mov
mov
divl
stos
mov
jno
sbb
addb
cmp
cmp
mov
loop
push
adc
out
fxch
andb
inc
pop
jmp
loopne
pop
adc
adc
adc
cmp
cmp
adc
xor
addb
adc
cmp
cmp
sbbl
add
rcll
loope
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
stos
add
mov
adc
adcb
adc
cmp
cmp
mov
add
adc
adc
cmp
cmp
mov
subl
adc
adc
cmp
cmp
iret
out
jmp
adc
adc
cmp
cmp
mov
sbb
mov
rorl
sub
fucom
bound
inc
lret
aad
inc
xchg
sti
push
dec
jle
or
mov
fs
xor
jl
pop
aas
xor
adc
adc
cmp
cmp
mov
mov
call
mov
rorb
cmp
pop
jnp
inc
shrb
and
jnp
jle
loope
test
push
es
or
sbb
push
or
shll
push
xor
test
int
addb
cmp
cmp
mov
sbb
and
inc
mov
addb
cmp
cmp
mov
cmc
mov
leave
adc
push
fstl
lds
or
mov
push
cmp
pop
pop
mov
dec
adc
sbb
xorl
out
mov
or
pop
leave
out
icebp
cld
jle
mov
jbe
popf
cmpsl
scas
cltd
and
addb
adc
cmp
cmp
inc
xor
and
adc
adc
cmp
cmp
das
jne
movsb
addb
adc
cmp
cmp
lcall
pop
mov
addb
cmp
cmp
sarb
mov
mov
push
mov
addb
cmp
cmp
jecxz
sbb
dec
jecxz
and
dec
aam
movsb
inc
into
push
cmp
ret
mov
xlat
out
jns
aad
pusha
push
mov
andl
jnp
lods
insl
gs
add
arpl
stos
movsl
sub
leave
mov
xchg
or
sub
popf
push
cmc
ror
jmp
adcb
adc
cmp
cmp
mov
xor
gs
inc
mov
popa
add
popa
sub
mov
jnp
or
push
aam
jle
repz
aas
fisttpll
xchg
mov
addb
adc
cmp
cmp
cmpsl
addb
adc
cmp
cmp
adc
mov
or
ret
scas
shr
xor
addb
adc
cmp
cmp
push
shlb
js
hlt
mov
lods
push
out
push
addb
cmp
cmp
mov
mov
inc
addb
adc
cmp
cmp
das
pop
pop
icebp
pop
pop
sbb
test
and
aas
cmpsb
mov
addb
cmp
cmp
mov
dec
enter
xchg
dec
scas
popa
dec
lret
cmc
shlb
jge
xchg
or
rorl
jp
push
addb
cmp
cmp
mov
and
sub
dec
je
pop
fisubrs
pop
addb
adc
cmp
cmp
icebp
popf
stos
inc
je
addb
adc
cmp
cmp
inc
sbb
addr16
test
addb
cmp
cmp
mov
out
sahf
cmc
scas
push
xlat
cmp
dec
sub
fiaddl
cmc
cltd
xchg
cmc
ja
and
xchg
test
cmpsl
sbb
xlat
push
xchg
adc
xchg
shll
sub
data16
out
push
imul
adc
adc
cmp
cmp
mov
mov
push
jp
or
mov
in
jl
xchg
adc
iret
cwtl
repz
adc
cmp
cmp
jecxz
daa
movsb
cltd
pop
inc
cltd
add
fucom
insb
pop
and
bound
addb
adc
cmp
cmp
sub
add
sahf
pop
addb
adc
cmp
cmp
cmp
addb
adc
cmp
cmp
dec
xlat
outsl
dec
mov
addb
adc
cmp
cmp
mov
jmp
xchg
aad
mov
or
outsb
jmp
addb
adc
cmp
cmp
and
stos
jbe
lods
test
movsl
test
pop
dec
inc
add
insb
xchg
sub
in
shr
pop
test
or
out
jmp
mov
addb
cmp
cmp
rep
addb
adc
cmp
cmp
add
stc
popa
mov
lock
xlat
sbb
sti
sbbl
cmpsl
outsb
mov
loope
in
movsl
jnp
pop
push
int3
cmp
addb
cmp
cmp
sbb
ja
in
and
pop
clc
shrl
addb
adc
cmp
cmp
jbe
lcall
xor
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
and
xchg
and
pop
lods
push
mov
push
fs
sahf
scas
in
xor
cmp
addb
adc
cmp
cmp
loop
dec
ret
jns
popa
push
push
clc
mov
pop
lcall
sbb
faddl
adc
adc
cmp
cmp
xchg
xchg
adc
sbb
in
jae
iret
adc
add
xchg
aas
add
xor
addb
adc
cmp
cmp
sbb
xchg
push
fisubrs
adcb
adc
cmp
cmp
mov
cwtl
testb
adc
adc
cmp
cmp
mov
gs
outsl
jno
lods
or
divb
daa
clc
pusha
xor
aas
ljmp
ret
lret
daa
jg
sbb
sbb
adc
adc
cmp
cmp
inc
pop
adc
loopne
mov
cmp
fidivrl
xchg
fstp
insb
mov
mov
sbb
or
shl
jge
inc
lret
or
arpl
scas
add
adc
adc
cmp
cmp
xor
popa
dec
add
push
int
into
inc
ds
mov
inc
dec
test
mov
adcb
adc
cmp
cmp
mov
roll
dec
xor
push
or
jae
cmp
and
push
inc
lods
icebp
push
pop
pop
xlat
mov
mov
push
cmpl
pop
imulb
mov
fdivrs
or
dec
inc
pop
out
xchg
push
enter
pop
mov
fistl
adc
scas
push
xchg
xor
jne
pusha
xor
mov
mov
aad
xchg
pop
lods
jle
icebp
imul
xor
mov
out
dec
call
popa
dec
adc
jnp
movl
aam
mov
scas
imul
insl
jno
cmp
adc
inc
addb
adc
cmp
cmp
jle
js
jb
out
inc
add
rdtsc
jb
popa
loope
gs
addb
adc
cmp
cmp
or
addb
cmp
cmp
pop
dec
mov
mov
imul
adc
cmp
cmp
sbb
outsl
out
xor
es
leave
jno
add
inc
sub
mov
mov
jmp
test
loope,pt
jp
into
push
xchg
mov
in
vsqrtpd
and
pop
jno
add
mov
scas
adc
aaa
adc
mov
mov
gs
call
xchg
and
fcoml
push
nop
addb
adc
cmp
cmp
mov
pop
mov
dec
push
addb
cmp
cmp
xor
fisubs
inc
adc
addb
adc
cmp
cmp
cmp
addb
cmp
cmp
shrb
adc
adc
cmp
cmp
test
push
mov
add
addb
cmp
cmp
mov
subl
push
jns
mov
push
push
pop
arpl
int
adc
xor
lods
sbb
pop
inc
pusha
jnp
mov
stos
loop
sub
cmpsb
mov
jno
sub
test
addb
adc
cmp
cmp
fwait
cmpl
fsubrl
push
push
mov
addb
adc
cmp
cmp
push
or
push
outsb
pop
in
movsb
lcall
dec
addb
adc
cmp
cmp
sbb
ja
lea
jecxz
fwait
test
fisubs
mov
cmpsb
mov
imul
xchg
pop
push
inc
xchg
cmpsl
shlb
gs
adc
jg
inc
add
xchg
outsb
data16
push
push
xor
push
cmp
mov
les
leave
out
addr16
xchg
inc
jmp
push
popl
adc
adc
cmp
cmp
xor
ds
dec
xor
jmp
lds
mov
ljmp
cmp
jno
xchg
push
fs
xorl
sahf
cmpsl
pop
test
addb
adc
cmp
cmp
mov
dec
das
fdiv
int
out
outsb
inc
adc
ror
or
addb
adc
cmp
cmp
or
and
daa
xor
mov
and
addb
adc
cmp
cmp
fucom
loope
int3
mov
dec
dec
mov
mov
xorb
bound
or
scas
push
push
dec
cmpsl
push
sbb
pop
pop
push
dec
or
push
push
std
shrl
mov
aad
cmc
bound
scas
outsl
addb
adc
cmp
cmp
in
inc
into
pop
sti
xchg
xchg
jns
jmp
int3
addb
adc
cmp
cmp
mov
cmpsl
std
sbb
jmp
testb
sub
dec
int3
xor
sbb
jnp,pn
xchg
aad
sub
scas
stos
pop
repz
mov
in
fsubl
addb
cmp
cmp
mov
mov
fnstcw
icebp
mov
adc
adc
cmp
cmp
mov
aad
xor
pusha
movl
cmp
cmp
cwtl
pop
push
iret
and
dec
loope
cmp
adc
cmp
dec
icebp
ds
sub
mov
loop
or
addb
cmp
cmp
mov
adc
das
or
decl
mov
test
addb
adc
cmp
cmp
push
imul
addb
adc
cmp
cmp
add
movlps
adc
adc
cmp
cmp
add
mov
cli
xor
xor
dec
iret
scas
lahf
imul
xchg
lcall
and
add
ficomps
cld
push
pop
jle
jle
inc
and
sbb
mov
lods
mov
addb
cmp
cmp
mov
mov
adc
sub
sahf
aas
daa
lret
cmc
push
ret
mov
call
dec
ds
test
add
mov
inc
cmp
mov
jo
push
sbb
or
das
or
adcb
adc
cmp
cmp
mov
pop
shlb
test
adc
adc
cmp
cmp
adc
push
jns
data16
xchg
hlt
sub
jecxz
sbb
mov
jmp
sub
mov
in
shl
mov
mov
testl
out
jl
sub
lret
addb
adc
cmp
cmp
mov
dec
push
adcb
adc
cmp
cmp
mov
adc
xchg
fs
test
pop
cs
and
addb
adc
cmp
cmp
jo
inc
cmp
mov
movb
addb
cmp
cmp
mov
xchg
mov
xor
scas
mov
add
mov
push
pop
mov
sbb
addb
adc
cmp
cmp
test
incb
adc
adc
cmp
cmp
add
push
std
jbe
inc
insb
mov
addb
adc
cmp
cmp
sub
adc
addb
adc
cmp
cmp
jl
cmc
pop
mov
xchg
add
setle
mov
xor
or
mov
mov
push
mov
pop
insb
insl
pop
xchg
jecxz
scas
addb
adc
cmp
cmp
adc
loop
mov
addb
cmp
cmp
mov
aaa
sahf
hlt
push
sarb
adc
adc
cmp
cmp
cli
dec
xchg
and
mov
dec
movsb
xchg
sub
lret
jle
inc
push
ss
push
xor
mov
push
int3
cmp
cli
popf
sub
notb
movsb
out
lods
adc
cmp
xchg
negl
dec
inc
pop
jne
fnstcw
addb
cmp
cmp
mov
pop
sbb
sbb
adc
adcb
adc
cmp
cmp
mov
cltd
adc
adcb
adc
cmp
cmp
mov
inc
mov
or
cli
mov
adcb
adc
cmp
cmp
mov
jne
sub
mov
stc
xor
pop
addb
adc
cmp
cmp
xor
je
nop
scas
adc
cmp
jge
seto
sbb
mov
xchg
sbb
addb
adc
cmp
cmp
or
dec
cmc
mov
popa
scas
push
xor
aam
inc
jmp
stos
add
dec
jmp
iret
addb
adc
cmp
cmp
push
mov
mov
addr16
out
sbb
xchg
shlb
xchg
adc
xchg
pop
cmp
adcb
adc
cmp
cmp
mov
fwait
aaa
das
insl
sbb
cmp
call
test
addb
cmp
cmp
out
jnp
dec
nop
mov
mov
addb
cmp
cmp
clc
loope,pt
test
repnz
fisubl
jl
inc
cmc
idivb
aaa
jmp
dec
cmp
push
pop
cltd
xor
adc
adc
cmp
cmp
sbb
mov
fwait
xchg
gs
mov
addb
adc
cmp
cmp
inc
lea
shll
addb
cmp
cmp
mov
addb
adc
cmp
cmp
aas
cmp
aam
scas
aaa
mov
cmp
addb
cmp
cmp
mov
ss
jp
xchg
add
xchg
pop
cmp
int
jl
fistl
or
xor
adc
adc
cmp
cmp
mov
or
jo
ljmp
stos
aaa
call
adcb
adc
cmp
cmp
mov
mov
pop
cmc
jne
lret
rsqrtps
je
insb
mov
adc
mov
cmp
adcb
adc
cmp
cmp
mov
pop
shlb
jno
daa
push
repz
inc
dec
addb
adc
cmp
cmp
xchg
fstps
pop
xor
sahf
cli
rcl
mov
jmp
aas
and
inc
out
std
pop
iret
daa
mov
addb
cmp
cmp
mov
mov
mov
out
sarl
cwtl
mov
movsb
mov
addb
cmp
cmp
mov
test
jae
imulb
addb
cmp
cmp
mov
sbb
jae
add
lods
or
addb
cmp
cmp
mov
jle
addb
adc
cmp
cmp
das
je
jl
mov
addb
cmp
cmp
mov
sbb
int3
fdivr
hlt
ret
add
and
pop
inc
and
or
jp
inc
pop
js
cmc
rcll
cmp
mov
xor
popf
push
xchg
mov
test
rcll
sbb
daa
push
xchg
mov
insb
arpl
fsubs
adc
xchg
out
addb
cmp
cmp
mov
xchg
inc
hlt
addb
adc
cmp
cmp
je
hlt
cltd
mov
mov
ja
outsl
adc
imul
fisubs
ficomps
push
jae
jno
and
outsb
sub
std
in
test
pop
push
ret
rolb
pop
outsb
pop
push
xchg
sbb
setg
addb
cmp
cmp
mov
sahf
sbb
notb
in
push
mov
aaa
inc
push
xlat
shrb
jecxz
addb
adc
cmp
cmp
addb
adc
cmp
cmp
movsl
insl
xor
xlat
adc
dec
loopne
addb
adc
cmp
cmp
fdivr
ja
or
addb
cmp
cmp
jmp
sti
inc
leave
divb
adc
adc
cmp
cmp
mov
push
dec
or
xor
xchg
cltd
push
test
add
and
lahf
mov
adc
adc
cmp
cmp
mov
sub
and
leave
mov
insl
in
enter
ret
sbb
aas
cs
fcmovbe
sub
mov
sbb
cli
xchg
fnstsw
mov
adc
xchg
mov
inc
fsubs
cmp
int
shlb
lret
insl
mov
cli
sub
in
adc
std
xchg
fnstenv
test
scas
mov
pop
adc
adc
cmp
and
pop
test
mov
cmp
sub
lock
adc
cmp
cmp
movsb
cmpsl
adc
ljmp
int
jbe
fnstcw
fucomi
rcll
addb
adc
cmp
cmp
cmp
xor
adc
jge
sub
mov
in
adc
push
sbb
dec
imul
mov
add
mov
test
adc
adc
cmp
cmp
mov
and
insb
sbb
lods
repnz
add
xor
dec
push
movsl
dec
outsb
jo
sahf
jg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sti
dec
addb
adc
cmp
cmp
push
or
fbld
ds
cmp
sbb
mov
imul
push
pushf
dec
in
inc
aam
xchg
int3
push
es
jle
dec
push
shrl
addb
cmp
cmp
rcrb
out
dec
add
shlb
dec
sbb
addb
adc
cmp
cmp
imul
and
inc
bound
jae
lods
movsl
aaa
aas
pop
test
sub
adc
adc
cmp
cmp
dec
inc
stos
insl
mov
sbb
jb
pop
lcall
sbb
bound
cltd
test
ljmp
adc
adc
cmp
cmp
push
pop
sbb
inc
mov
mov
pop
gs
into
imul
add
adc
adc
cmp
cmp
push
or
jb
fbld
and
mov
dec
in
jl
push
in
popa
cltd
arpl
mov
cmp
or
in
mov
cs
addb
adc
cmp
cmp
movsb
pop
mov
adcb
adc
cmp
cmp
mov
and
inc
mov
dec
std
lock
cmp
inc
adc
imul
add
adc
cmp
mov
mov
xchg
testb
dec
fisubs
aaa
adc
lock
jbe
cs
mov
out
arpl
pushf
aaa
nop
mov
push
mov
aam
rcrl
fdivs
mov
imul
out
fdivl
jnp
jns
sbb
addb
cmp
cmp
mov
gs
leave
fistps
orb
push
jmp
pop
inc
push
addb
adc
cmp
cmp
lret
cmp
stc
insl
and
adc
adc
cmp
cmp
pop
mov
or
addb
cmp
cmp
mov
xor
xor
jnp
addb
cmp
cmp
mov
sub
mov
data16
fcompl
mov
addb
cmp
cmp
mov
icebp
push
adc
mov
andl
adc
adc
cmp
cmp
xor
pop
push
inc
insb
sbb
addb
cmp
cmp
mov
out
jmp
jp
faddp
add
popaw
push
or
addb
adc
cmp
cmp
pusha
xor
adc
adc
cmp
cmp
sub
into
sbb
add
xor
inc
pop
in
es
mov
enter
cld
rolb
adc
adc
cmp
cmp
mov
scas
add
pop
and
lret
dec
das
outsb
xor
jmp
addb
adc
cmp
cmp
movsl
leave
jnp
cmc
xchg
cmp
dec
inc
cmp
adc
push
popa
insb
and
sbb
push
cli
lahf
addb
adc
cmp
cmp
xor
mov
xchg
addb
adc
cmp
cmp
and
je
pop
popf
popl
int
addb
cmp
cmp
mov
stc
sub
aas
call
add
rcrl
adcb
adc
cmp
cmp
mov
xchg
call
pushf
push
addb
adc
cmp
cmp
lods
adc
lods
sub
lret
cwtl
insl
inc
addb
adc
cmp
cmp
sbbl
cwtl
out
mov
pop
lock
gs
mov
sbb
arpl
movsl
jno
addr16
pop
insb
ret
mov
addb
cmp
cmp
mov
out
xchg
adc
xor
stos
lock
adc
cmp
cmp
mov
or
or
add
cmp
adc
adc
cmp
cmp
mov
mov
repz
addl
adc
cmp
cmp
mov
fnstcw
adcb
adc
cmp
cmp
mov
push
outsb
test
stos
leave
lret
bound
adc
add
jne,pt
loope
iret
js
ja
addb
cmp
cmp
mov
cmp
lea
shll
mov
pop
xor
adcb
adc
cmp
cmp
mov
mov
pop
cmpsb
xchg
mov
xchg
icebp
dec
imulb
lahf
lods
add
minps
jge
jmp
mov
scas
cmpsl
jmp
xchg
add
jp
lock
mov
faddl
pop
leave
cmpsl
outsb
mov
add
inc
rolb
js
ss
inc
sub
pop
addb
adc
cmp
cmp
addb
adc
cmp
cmp
and
enter
mov
adcb
adc
cmp
cmp
mov
and
mov
sahf
xchg
adc
xor
jb
test
ds
xchg
nop
xchg
outsl
pop
cmp
ljmp
pop
cmp
pop
sbb
lods
adc
mov
ss
mov
and
jmp
cmp
mov
xchg
adc
adc
cmp
cmp
mov
pop
addr16
fldcw
adc
xor
fnstcw
fnstenv
fwait
out
aad
mov
adc
es
ss
cmp
addb
cmp
cmp
int
pop
cwtl
sarb
dec
push
mov
jle
jmp
pushf
rorl
dec
mov
dec
add
inc
mov
dec
cmp
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
mov
scas
fstpl
pop
inc
icebp
inc
pop
loope
adc
pop
int
xsha1
cmpsb
int3
stos
pop
int
adc
addb
adc
cmp
cmp
lcall
paddq
cmp
mov
lock
loop
dec
inc
cli
stos
ljmp
ja
aad
lods
adc
dec
fcomi
lcall
adcb
adc
cmp
cmp
mov
or
mov
iret
iret
sbb
mov
adcb
adc
cmp
cmp
mov
into
pushf
int3
sbb
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xor
and
adcb
adc
cmp
cmp
mov
aad
lahf
mov
stos
pushf
push
mov
out
jg
addb
adc
cmp
cmp
mov
sub
stos
cli
add
dec
pop
daa
jg
leave
and
xchg
mov
pop
cmp
adcb
adc
cmp
cmp
mov
flds
lret
lods
aaa
and
mov
and
xchg
and
adc
adc
cmp
cmp
mov
xor
jb
scas
sbb
cltd
outsl
addb
adc
cmp
cmp
sahf
addr16
inc
or
cltd
int
addb
cmp
cmp
mov
cs
lret
addb
cmp
cmp
mov
insb
pop
js
clc
out
out
or
jmp
adcb
adc
cmp
cmp
mov
mov
movsb
frstor
dec
cli
faddp
and
push
test
sub
xchg
nop
adc
pushf
lods
fmuls
fwait
add
div
enter
pop
xor
ljmp
movsl
lock
fldl
adc
adc
cmp
cmp
jle
stos
xchg
movzwl
cmc
push
mov
pop
pop
xchg
xchg
popf
sbbb
sub
xor
in
add
loopne
jge
sbb
sbb
mov
pop
cli
addb
adc
cmp
cmp
or
test
mov
and
lea
sbb
bound
ret
int3
jmp
rol
loop
imul
mov
fnstcw
sub
mov
jne
adc
stc
icebp
pop
aaa
mov
cltd
addb
adc
cmp
cmp
lahf
fstpt
int
push
sub
fwait
shlb
add
xchg
mov
jb
cmc
jle
pushf
cli
movl
cmp
cmp
mov
pop
cmpsl
mov
push
jns
test
in
mov
dec
pop
fxch
leave
testb
mov
mov
test
inc
jg
ja
push
mov
xchg
es
jns
imul
not
movsb
add
jb
dec
inc
jno
or
out
xor
sbb
add
addb
adc
cmp
cmp
out
addb
cmp
cmp
mov
scas
pop
sub
cmc
dec
call
popf
outsb
add
stos
jp
addb
adc
cmp
cmp
and
or
dec
adc
cld
ds
or
jmp
cmpsl
lods
mov
jg
mov
pop
imul
mov
cmp
mov
dec
cli
ret
and
xchg
in
scas
in
xor
mov
sbb
bound
das
imul
cmpsb
int
mov
pop
fstpt
mov
xchg
push
mov
and
bound
daa
insl
pop
jecxz
filds
aaa
mov
mov
cmp
addb
cmp
cmp
mov
outsl
pop
push
dec
add
jle
mov
mov
adc
jl
lret
lahf
in
cmp
cmp
shll
xor
sub
add
addb
cmp
cmp
mov
addb
adc
cmp
cmp
jg
gs
addb
cmp
cmp
mov
jmp
addb
adc
cmp
cmp
std
sbb
add
insl
add
sub
addb
adc
cmp
cmp
jle
dec
cmpsl
decb
cmpsb
pop
ds
push
lea
icebp
in
lret
insb
mov
outsl
shrl
addb
cmp
cmp
mov
push
or
push
lods
mov
addb
cmp
cmp
scas
xor
ds
xor
adc
adc
cmp
cmp
mov
xchg
in
pop
addb
adc
cmp
cmp
mov
cmp
sub
sbb
cmp
pushf
dec
roll
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xor
mov
jo
sbb
mov
addb
cmp
cmp
loope
fwait
mov
loopne
cmp
test
popf
icebp
insb
lret
lock
adc
shlb
dec
or
loopne
pop
inc
cmpsb
sub
mov
adcb
adc
cmp
cmp
mov
out
inc
mov
inc
xor
dec
cwtl
lods
jecxz
fdivs
jge
push
push
cmp
push
jg
mov
dec
or
mov
push
jg
sarb
imul
jne
sub
inc
adc
jnp
popl
sub
pop
fbld
push
cli
in
push
shrb
or
push
scas
cmp
in
cmc
push
push
sub
cli
scas
cmp
addb
cmp
cmp
adc
addb
adc
cmp
cmp
das
jns
cs
lds
pop
loopne
nop
jle
popa
sbb
addb
cmp
cmp
jno
popf
jnp
xchg
adc
adc
adc
cmp
cmp
mov
push
cmp
xor
jae
insl
les
mov
mov
cs
cmp
dec
push
and
xchg
jp
scas
addr16
sub
mov
wrmsr
push
movsb
aas
nop
sbb
es
fxch
in
outsb
int3
aaa
rcrl
or
fidivl
mull
mov
popf
push
data16
cmp
inc
addb
adc
cmp
cmp
push
ds
fnstsw
add
push
cmp
adc
addb
adc
cmp
cmp
jle
addb
cmp
cmp
mov
leave
inc
leave
scas
or
iret
ja
inc
push
adc
adc
cmp
cmp
mov
aam
push
test
outsl
fildll
push
test
jle
mov
movsl
outsl
jbe
aaa
push
pushf
mov
mov
sbb
popl
adc
adc
cmp
cmp
dec
mov
addb
cmp
cmp
mov
mov
mov
adc
adc
cmp
cmp
mov
push
inc
jp
jl
arpl
addb
adc
cmp
cmp
xchg
jl
xchg
xchg
sbb
mov
test
ret
addb
cmp
cmp
mov
pop
xor
inc
xor
sub
adcb
adc
cmp
cmp
mov
mov
in
lahf
std
shlb
filds
out
inc
clc
out
dec
mov
hlt
cmp
push
xor
sbb
adc
adc
cmp
cmp
add
out
xchg
addb
cmp
cmp
fldt
push
aam
cs
fadd
out
mov
adc
adc
cmp
cmp
mov
sbb
mov
stos
push
sbb
push
xor
hlt
nop
pop
sahf
push
fnsave
addb
cmp
cmp
jae
xchg
lock
adc
cmp
cmp
mov
inc
addb
adc
cmp
cmp
mov
and
mov
fnstenv
addb
adc
cmp
cmp
into
sti
inc
shl
or
xor
addb
cmp
cmp
insl
std
mov
dec
push
imul
adcb
adc
cmp
cmp
mov
cmp
adc
cmp
stc
addb
sub
xchg
rol
pop
push
loope
or
and
dec
add
cwtl
and
adcb
adc
cmp
cmp
mov
add
cmp
or
lret
jmp
adc
mov
addb
cmp
cmp
pushl
in
ret
addb
adc
cmp
cmp
out
add
fsubp
mov
arpl
push
js
cltd
es
mov
adc
adc
cmp
cmp
mov
cli
dec
jae
mov
jge
mov
outsl
and
mov
addb
cmp
cmp
mov
mov
sbb
dec
movsl
popa
ljmp
push
mov
addb
adc
cmp
cmp
lods
jp
in
fldl
addb
cmp
cmp
mov
insb
data16
or
xchg
mov
std
push
movsb
sub
and
push
xor
mov
imul
or
mov
out
push
pushf
push
xor
ret
mov
mov
lods
xor
inc
divb
fucomip
sub
int
daa
adc
adc
adc
cmp
cmp
mov
mov
mov
in
addb
cmp
cmp
mov
jne
fdivr
mov
addb
adc
cmp
cmp
bound
addb
cmp
cmp
mov
jge
push
addb
adc
cmp
cmp
mov
cmp
inc
pop
add
shlb
enter
push
cltd
jno
outsb
pushf
mov
sub
out
cs
pop
pmaxsw
dec
lret
dec
xlat
lret
jno
int3
rcrb
dec
push
xchg
fcmovu
mov
dec
js
std
xor
addb
adc
cmp
cmp
shl
pushl
jmp
pop
or
repz
addb
adc
cmp
cmp
out
imul
pop
and
mov
test
incl
jns
icebp
adc
cmp
cwtl
addb
adc
cmp
cmp
addb
adc
cmp
cmp
add
or
addb
adc
cmp
cmp
js
cmp
out
clc
in
pushf
data16
adc
cmp
cmp
cld
mov
add
arpl
frstor
inc
push
pop
inc
jle
inc
mov
addr16
inc
cmc
xchg
xor
xchg
xchg
aas
push
mov
arpl
adc
dec
dec
mov
adc
adc
cmp
cmp
mov
scas
ljmp
inc
leave
push
mov
xchg
xchg
cli
xlat
or
fstps
mov
addb
adc
cmp
cmp
add
stos
daa
int
pop
mov
push
xchg
xor
pusha
addb
adc
cmp
cmp
pop
stos
push
iret
aas
outsl
ret
inc
addb
adc
cmp
cmp
inc
imul
out
xor
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jge
out
cs
lods
xchg
rcr
adc
dec
inc
fildll
xchg
mov
push
dec
mov
clc
hlt
sti
jns
sar
in
jecxz
call
adc
adc
cmp
cmp
mov
in
jg
xchg
xchg
mov
mov
and
insb
pop
idivb
jge
loop
jecxz
mov
daa
mov
or
pushf
push
call
adc
push
test
mov
std
loop
add
out
pop
and
sbb
sbb
adc
inc
and
lahf
fmuls
addb
cmp
cmp
mov
in
cmp
mov
pop
fldt
sub
add
aam
adc
inc
dec
mov
adc
fcoms
sub
shll
cs
cmp
call
fwait
pop
fwait
test
jg
ficompl
xchg
addb
adc
cmp
cmp
fldenv
es
adc
adc
cmp
cmp
mov
pusha
cmp
addb
adc
cmp
cmp
xor
aaa
inc
push
mov
daa
ss
in
sbbb
fmul
into
shrb
fsubrs
out
out
jl
pop
xor
in
lds
gs
push
adc
inc
sub
sub
addb
adc
cmp
cmp
stos
push
ds
pop
outsb
adc
mov
sbb
repz
cmp
sub
addb
cmp
cmp
xor
mov
test
mov
out
stos
test
jae
addb
adc
cmp
cmp
adc
rolb
shlb
adc
adc
cmp
cmp
mov
mov
mov
cwtl
push
add
addb
adc
cmp
cmp
jg
sbb
in
xchg
inc
jmp
addb
adc
cmp
cmp
mov
test
nop
pop
loop
aad
inc
addb
adc
cmp
cmp
sbb
out
lds
addb
cmp
cmp
testb
adc
jmp
jle
cmc
pop
mov
or
jp
adc
addb
cmp
cmp
push
adc
popa
inc
pop
push
jnp
xor
test
push
addb
cmp
cmp
mov
jnp
ljmp
arpl
and
adc
mov
adc
cli
ja
cmp
icebp
test
lret
je
adc
mov
das
cld
adc
mov
stc
dec
sbb
outsl
rcrl
or
xor
arpl
daa
dec
inc
shll
inc
aad
sub
sbb
mov
push
ss
cmp
out
dec
push
in
xor
mov
addb
adc
cmp
cmp
xor
fcomps
push
ret
cli
pop
adc
xor
enter
stos
cltd
mov
mov
enter
cmp
inc
ret
mov
adc
adc
cmp
cmp
mov
sub
xchg
add
mov
adc
addb
cmp
cmp
mov
sub
adc
cmp
adc
adc
cmp
cmp
mov
inc
jnp
fisubl
or
adc
pop
stc
addb
adc
cmp
cmp
data16
lret
pushf
mov
addb
cmp
cmp
mov
cmc
hlt
pop
xorb
inc
push
xor
repnz
sbb
sbb
inc
adc
jb
and
xlat
scas
sub
imul
xor
mov
adc
adc
cmp
cmp
mov
int3
xor
add
xor
pop
test
insl
in
addr16
cmp
inc
or
inc
inc
outsl
push
stos
cli
jecxz
xchg
and
mov
shlb
mov
xor
dec
sbb
dec
or
jnp
dec
mov
bound
push
shrb
mov
xchg
xor
addb
adc
cmp
cmp
fsubrs
and
addb
cmp
cmp
mov
in
ja
ret
jmp
sub
fisubl
sub
mulb
mulb
sti
ror
filds
out
test
cli
sahf
xor
call
cmp
adc
mov
cmpsb
cmp
lahf
repnz
dec
and
xor
addb
cmp
cmp
mov
out
dec
bound
iret
gs
mov
inc
mov
push
addb
adc
cmp
cmp
hlt
sbb
fisttps
addb
adc
cmp
cmp
mov
addb
cmp
cmp
sub
ja
shll
aaa
aam
addb
adc
cmp
cmp
jmp
ljmp
adc
adc
cmp
cmp
les
jns
push
dec
scas
addb
adc
cmp
cmp
testl
adc
adc
cmp
cmp
fxch
frstor
andl
addb
adc
cmp
cmp
inc
stc
dec
addb
adc
cmp
cmp
in
test
inc
sti
pop
inc
and
push
pushf
dec
fsubs
in
pop
fld1
js
in
push
addb
cmp
cmp
mov
pop
jbe
ss
push
pop
xlat
outsb
iret
jb
jnp
xlat
mov
pop
cmp
loopne
pop
fwait
mov
jmp
xor
cmpsb
pop
cmp
lcall
mov
fldenv
out
mov
or
dec
aas
push
addb
adc
cmp
cmp
cld
push
into
pop
adc
add
in
xchg
int3
xor
push
out
sahf
mov
jnp
addb
cmp
cmp
mov
adcb
push
cs
jl
mov
je
jmp
ret
addb
cmp
cmp
out
cmp
repz
pop
xchg
addb
adc
cmp
cmp
mov
jb
xchg
jne
inc
clc
mov
mov
addb
cmp
cmp
mov
push
mov
rcll
mov
addb
cmp
cmp
mov
fidivl
pusha
addb
adc
cmp
cmp
rolb
test
push
movsl
roll
adc
adc
cmp
cmp
arpl
andl
adc
sbbb
daa
pushf
mov
and
inc
test
sbb
addb
adc
cmp
cmp
adc
imul
gs
jnp
push
ret
lods
cmpsb
sub
in
shlb
out
mov
addb
adc
cmp
cmp
lods
sahf
mov
imul
cmp
cmp
movsl
push
push
adc
cltd
push
fnstenv
addb
adc
cmp
cmp
fisubl
loope
sbb
and
addb
cmp
cmp
mov
xor
adc
jmp
lds
inc
ret
pop
cmp
sbb
adc
adc
cmp
cmp
cmp
popf
jno
ret
outsl
mov
push
addb
adc
cmp
cmp
dec
popa
push
fdivs
mov
jbe
pop
popa
in
jecxz
addb
cmp
cmp
mov
leave
imul
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
and
cmpsl
imul
ja
aad
int3
mov
dec
out
ror
mov
adcb
adc
cmp
cmp
mov
outsb
pop
lret
and
fisubrl
push
mov
addb
cmp
cmp
mov
pop
divl
push
xor
ret
mov
cmpsl
fadd
fdivl
cli
push
outsb
sbb
push
pusha
lods
pop
push
sub
repz
cmpsl
pop
loopne
pop
in
and
daa
mov
addb
cmp
cmp
cmpsb
xchg
outsl
hlt
decl
sub
addb
cmp
cmp
mov
or
jecxz
addb
cmp
cmp
mov
sarl
cmpsl
adc
movb
adc
cmp
cmp
mov
jns
les
add
jmp
xchg
test
insb
arpl
cmp
sub
addb
adc
cmp
cmp
fadds
add
adc
adc
cmp
cmp
jo
xor
sbb
or
adc
adc
cmp
cmp
sbb
addb
cmp
cmp
cmc
add
add
cltd
out
sti
and
xchg
cld
sbb
movsl
adc
jno
jnp
xchg
dec
jnp
sarb
ljmp
push
cmp
cmp
mov
sbb
mov
sub
or
orl
out
push
or
and
dec
sub
ljmp
adc
jl
out
gs
repz
pushl
xchg
mov
jecxz
in
mov
test
lea
ret
flds
adc
adc
cmp
cmp
pushf
arpl
mov
fildll
test
lret
addr16
test
and
lods
stc
lods
xor
addb
cmp
cmp
mov
pop
xor
mov
dec
leave
push
data16
shr
lret
ljmp
push
or
mov
addb
cmp
cmp
push
inc
es
sub
push
shrl
pusha
addb
adc
cmp
cmp
das
push
cmp
out
dec
les
adc
adc
cmp
cmp
mov
jb
movsl
aas
cltd
jo
je
in
jae
fsubrl
fcoms
addb
cmp
cmp
mov
pop
test
mov
addb
adc
cmp
cmp
popa
dec
sahf
cmp
xadd
jno
push
pop
xchg
enter
adc
fdivrl
push
xchg
adc
xor
xchg
inc
or
pop
jge
negl
xchg
mov
lods
iret
je
mov
addb
cmp
cmp
push
jae
inc
jnp
lahf
int
xor
dec
data16
push
js
dec
push
daa
cld
inc
icebp
mov
dec
in
notb
mov
es
and
out
aaa
ret
xchg
jp
sbb
dec
pusha
jl
mov
push
dec
pushf
cmp
jecxz
je
jns
ljmp
movsl
inc
lcall
pusha
add
shl
and
data16
into
addb
adc
cmp
cmp
xchg
mov
sti
aad
push
out
ljmp
mov
ss
test
xchg
sbb
pop
dec
push
std
adc
inc
mov
xor
adc
shll
pop
push
out
js
sub
sbb
sbb
vrsqrtps
inc
jno
leave
repz
mov
cmpsb
pushf
lcall
cmpl
push
dec
pop
xchg
aas
sub
repnz
addb
adc
cmp
cmp
jle
lods
xchg
inc
dec
mov
test
pop
scas
pop
add
adc
xlat
pop
shll
repz
push
pop
mov
divb
testl
adc
cmp
cmp
push
lret
jle
into
mov
and
xor
fwait
addb
adc
cmp
cmp
pop
adc
xchg
imul
adc
adc
cmp
cmp
jns
push
repnz
dec
push
das
out
cmp
xchg
popf
sbb
push
addb
adc
cmp
cmp
xchg
test
orb
addb
cmp
cmp
mov
push
mov
cmp
and
sbb
mov
dec
mov
lret
xor
adcb
adc
cmp
cmp
mov
stos
or
addb
adc
cmp
cmp
mov
clc
testl
cmp
cmp
subb
sub
mov
loope
addb
cmp
cmp
mov
add
mov
lret
inc
addb
adc
cmp
cmp
test
sub
sub
xor
cltd
sbb
repz
xor
dec
mov
loop
test
adc
adc
cmp
cmp
mov
add
idivb
addb
cmp
cmp
addb
adc
cmp
cmp
push
fildl
lahf
push
push
adc
adcb
adc
cmp
cmp
mov
lcall
das
dec
stos
rcl
mov
addb
adc
cmp
cmp
mov
repz
hlt
add
xor
addb
adc
cmp
cmp
addl
adcb
adc
cmp
cmp
mov
fs
out
jno
in
push
addb
adc
cmp
cmp
loope
fsubrs
sub
xchg
js
or
scas
das
xor
jbe
lods
cmc
and
and
xchg
cld
popf
cmp
out
lods
push
jg
cli
xchg
mov
leave
std
xchg
sbbl
test
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
xchg
mov
addb
cmp
cmp
pop
add
and
addb
adc
adc
cmp
cmp
jo
and
inc
bound
stos
jo
sarl
stos
mov
and
test
cld
mov
pop
sub
adcb
adc
cmp
cmp
mov
and
jp
lods
test
lods
adc
mov
enter
sbb
pop
mov
dec
mov
es
mov
push
scas
xor
std
mov
lahf
nop
pop
cmp
pop
cmp
cs
lret
filds
mov
sbbl
into
xor
push
jp
pop
shlb
daa
mov
dec
mulb
addb
cmp
cmp
mov
fldenv
dec
inc
mov
pushf
jge
jecxz
mov
call
push
push
mov
fadds
bound
lret
int3
pop
cld
mov
stc
pushf
cld
stc
add
addb
cmp
cmp
push
mov
addb
cmp
cmp
sub
jns
push
mull
jae
pop
push
daa
outsb
push
icebp
push
mov
mov
xorl
mov
repnz
je
xor
scas
stc
or
sbb
call
addb
adc
cmp
cmp
lret
fcomi
jne
mov
test
or
sub
icebp
addb
adc
cmp
cmp
pop
push
data16
adc
inc
addb
adc
cmp
cmp
fcoms
push
xchg
push
enter
or
dec
sbb
adc
sbb
adc
adc
cmp
cmp
mov
push
sub
mov
mov
mov
addb
adc
cmp
cmp
cwtl
cwtl
push
repz
pop
xchg
fdivrl
mov
testl
cmp
addb
cmp
cmp
mov
push
lret
jno
addb
cmp
cmp
mov
cli
add
incl
scas
ss
addb
adc
cmp
cmp
test
inc
int
push
in
lea
addb
adc
cmp
cmp
mov
mov
addb
cmp
cmp
inc
hlt
orb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
and
movsl
cmp
addb
adc
cmp
cmp
fbld
or
mov
stc
xor
ret
loop
jge
dec
cmp
pop
fldt
decb
scas
xchg
pop
inc
imul
cmpsl
jl
sbb
das
call
add
hlt
rcrl
sti
pop
sub
xchg
sub
push
lret
icebp
dec
outsb
xor
nop
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
pop
inc
push
xor
cmpsb
jecxz
cmpb
mov
mov
es
ret
mov
in
sahf
addb
adc
cmp
cmp
push
dec
out
out
cmp
addb
adc
cmp
cmp
negb
push
int
sub
jp
push
inc
dec
mov
icebp
pop
mov
lahf
fsubrs
nop
and
add
mov
inc
sti
dec
addb
adc
cmp
cmp
ljmp
xor
jmp
adcb
adc
cmp
cmp
mov
sbb
lahf
push
lcall
aaa
ljmp
xor
scas
addb
adc
cmp
cmp
lret
xchg
sarl
sub
addb
cmp
cmp
mov
aaa
addb
adc
cmp
cmp
gs
cmp
mov
addb
cmp
cmp
mov
xor
pushf
push
push
xacquire
je
mov
cmpsl
adc
loopne
mov
ret
mov
mov
addb
cmp
cmp
mov
xor
mov
inc
mov
pop
sub
adc
ret
int3
push
jae
lcall
sti
test
clc
xor
add
mov
addb
adc
cmp
cmp
iret
or
add
and
pop
aam
addb
adc
cmp
cmp
lahf
mov
addb
cmp
cmp
mov
mov
push
inc
addb
adc
cmp
cmp
clc
xchg
cmpsl
testb
aaa
filds
adc
adc
cmp
cmp
popf
cmp
iret
mov
mov
bound
mov
mov
rorb
aas
sbb
jnp
iret
int3
lahf
shr
cmp
adcb
adc
cmp
cmp
mov
pop
rcrl
fdivp
inc
daa
cmp
cld
xchg
dec
push
addb
adc
cmp
cmp
cld
stos
outsl
out
loopne
xor
addb
adc
cmp
cmp
pop
jg
cld
push
adc
ret
xor
sub
fildll
addb
adc
cmp
cmp
test
sti
dec
cmc
mov
adcb
adc
cmp
cmp
mov
sbb
mov
mov
sub
push
cwtl
in
out
xor
ret
or
addb
cmp
cmp
mov
lret
incl
arpl
or
out
mov
fstl
addr16
mov
add
add
and
adc
adc
cmp
cmp
and
xchg
push
mov
cmovo
les
fcomp
icebp
push
mov
mov
iret
cmp
jl
mov
sbb
test
xchg
mov
frstor
adc
adc
cmp
cmp
mov
xchg
jo
xor
bound
cmp
addb
adc
cmp
cmp
mov
cmp
les
les
and
pop
cmp
cmp
adc
adc
cmp
cmp
addb
adc
cmp
cmp
insb
fimull
dec
je
or
pusha
sub
push
pop
adc
scas
xor
mov
adcb
adc
cmp
cmp
mov
xor
roll
adc
adc
cmp
cmp
test
imul
cmp
cmp
std
notb
in
mov
addb
adc
cmp
cmp
lea
mov
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
push
push
push
enter
addb
cmp
cmp
out
sbb
xchg
fwait
pop
es
pop
sbbb
test
lods
das
mov
xor
adc
adc
cmp
cmp
mov
in
ret
loope
sbb
adcb
adc
cmp
cmp
mov
jp
cld
xor
out
sub
or
rcr
pop
adc
addb
cmp
cmp
mov
repnz
lret
adc
addb
adc
cmp
cmp
sarl
adc
adc
cmp
cmp
mov
push
mov
mov
or
dec
adc
add
inc
adc
lods
shll
frstor
popf
das
cmpl
call
and
lea
addb
adc
cmp
cmp
rol
mov
addb
adc
cmp
cmp
pop
push
call
adcb
adc
cmp
cmp
mov
inc
jns
push
in
aam
call
iret
and
cmp
stos
mov
dec
cmp
stos
in
fstps
dec
pop
rcrb
adc
insb
lret
xchg
xchg
cmp
lods
lcall
adcb
adc
cmp
cmp
mov
insl
es
jecxz
jmp
lods
enter
mov
addb
adc
cmp
cmp
mov
stc
cwtl
fildl
addb
cmp
cmp
mov
add
add
adcb
adc
cmp
cmp
mov
dec
jne
pop
jl
inc
out
pusha
sub
lods
call
addb
cmp
cmp
mov
test
mov
addb
cmp
cmp
mov
push
pop
or
dec
rorb
addb
cmp
cmp
mov
aas
jne
addb
cmp
cmp
mov
stc
cmp
imul
adc
adc
cmp
cmp
mov
loopne
fildll
adc
pop
or
or
bound
adc
adc
cmp
cmp
mov
sub
push
fiaddl
addb
adc
cmp
cmp
shlb
or
cmpb
and
mov
inc
cmp
mov
rolb
adc
sbb
fiadds
lods
and
add
pop
pop
lds
sbb
xchg
xchg
popf
push
in
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jns
outsl
mov
jno
sub
ret
pop
cs
sub
pop
ljmp
jae
add
mov
jmp
adc
adc
cmp
cmp
mov
bound
addb
cmp
cmp
mov
pop
and
popf
push
in
push
lea
mov
add
pop
nop
addb
adc
cmp
cmp
insb
jecxz
xchg
push
jmp
addb
adc
cmp
cmp
jmp
das
pop
sub
cmp
fisttps
or
adc
adc
cmp
cmp
mov
addl
outsl
and
addb
cmp
cmp
adc
addb
cmp
cmp
mov
pop
xchg
adcb
adc
cmp
cmp
mov
push
cmovne
add
repz
pushl
xchg
idivl
adcb
push
pop
int3
or
call
inc
aas
movsl
xchg
comiss
inc
jmp
add
stos
imul
sub
cmp
cmp
jb
inc
test
out
mov
js
fidivrs
mov
addr16
jns
clc
out
mov
lods
mov
fisttpl
outsl
adc
addr16
mov
mov
push
pop
xchg
sbb
nop
mov
mov
addb
cmp
cmp
mov
xor
jno
cmpl
addb
cmp
cmp
mov
enter
add
insb
add
mov
scas
pop
stos
inc
mov
outsb
or
ret
into
mov
and
push
or
adcb
adc
cmp
cmp
mov
inc
xchg
xchg
dec
lea
out
push
jmp
push
or
sbb
test
pop
sbb
adc
ret
xchg
push
xor
icebp
xlat
push
addb
adc
cmp
cmp
cs
stos
mov
pushf
movsl
das
scas
addl
adcb
adc
cmp
cmp
mov
push
pop
push
and
addb
cmp
cmp
mov
aas
push
xor
push
adc
addb
cmp
cmp
mov
addb
adc
cmp
cmp
enter
xchg
cmp
pop
jg
or
addb
adc
cmp
cmp
test
lret
push
mov
dec
sbb
jae
xchg
imul
lcall
adc
adc
cmp
cmp
sub
mov
cmpsl
push
jg
addb
cmp
cmp
mov
mov
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
or
add
sub
test
jl
lods
mov
xchg
add
insb
pop
push
or
pop
xor
dec
lds
xchg
movsb
loope
xchg
sbb
cld
xchg
repz
and
xchg
dec
outsl
or
mov
push
test
cli
shlb
xchg
in
xor
jl
push
push
mov
or
lods
sbbb
fsubrs
ror
pop
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
outsb
iret
push
cmpsb
inc
cmp
sub
pop
into
cld
fistpl
jg
fcom
lods
xchg
sahf
test
stos
jmp
jle
lahf
addb
adc
cmp
cmp
lock
in
fwait
es
sub
adc
adc
cmp
cmp
jns
pop
xchg
jae
inc
mov
addb
cmp
cmp
sahf
lds
inc
aas
mov
mov
xchg
arpl
addb
adc
cmp
cmp
sbb
pop
out
nop
xor
lods
add
adc
adc
cmp
cmp
mov
sub
adc
adc
cmp
cmp
jb
into
fsubrl
dec
out
sahf
ljmp
addb
adc
cmp
cmp
cmp
inc
insb
movsb
lods
jle
push
je
pop
stc
and
xchg
test
arpl
clc
and
adc
adc
cmp
cmp
mov
cmp
insb
cmp
lds
adc
adc
cmp
cmp
pusha
aaa
test
imul
mov
and
imul
xchg
addb
adc
cmp
cmp
xchg
inc
inc
dec
data16
andl
adc
adc
cmp
cmp
mov
inc
addr16
addb
cmp
cmp
mov
fs
sbb
add
lahf
aaa
dec
ret
pushf
adc
aad
cmpsb
dec
lea
sub
cmp
cmp
lods
icebp
int3
pop
daa
xchg
xor
daa
nop
push
int3
pushf
addb
adc
cmp
cmp
pop
or
scas
mov
sbb
loope
sahf
lret
inc
jp
test
add
adc
adc
cmp
cmp
push
addb
adc
cmp
cmp
mov
cmp
mov
sub
add
cwtl
nop
pop
ds
outsb
enter
addb
cmp
cmp
lret
popa
and
jno
fcoml
adcb
cmp
call
out
leave
push
xchg
xchg
out
and
or
push
aaa
test
shlb
add
lahf
ficomps
add
aas
addb
adc
cmp
cmp
sbb
loopne
mov
iret
mov
rclb
imul
adc
cmp
mov
add
and
add
cmp
mov
adcb
adc
cmp
cmp
mov
ljmp
adc
adc
cmp
cmp
lods
add
push
pop
cs
xor
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
xchg
sub
aas
xor
addb
adc
cmp
cmp
xchg
je
xchg
jnp
out
dec
cmp
pop
nop
mov
push
test
push
popa
sub
jge
or
xor
lcall
cmpsl
jno
ss
into
and
dec
cmp
sbb
lods
lods
mov
pop
lods
fstl
fptan
cmp
addb
adc
cmp
cmp
int3
dec
add
js
aad
std
cmp
adc
push
pop
cmp
jg
addb
cmp
cmp
mov
sub
data16
das
stc
ret
addr16
scas
mov
sbb
sarl
mov
xor
in
cwtl
adc
movsw
add
cmp
inc
out
sbb
jae
inc
cmc
movsb
stos
or
and
fcomps
xchg
adc
push
addb
adc
cmp
cmp
leave
dec
mov
xchg
mov
adc
adc
cmp
cmp
push
cs
adc
std
bound
push
lods
mov
faddl
adc
adc
cmp
cmp
cmc
cmp
push
cmp
lret
pop
fbstp
xorl
jno
in
ja
add
pop
xorb
popa
fcomip
mov
sub
xchg
mov
shl
mov
cmp
inc
jne
cmp
push
in
and
movsb
add
aaa
int3
sbb
sarl
aam
dec
xor
adc
adc
cmp
cmp
sbb
adc
adc
cmp
cmp
and
pushf
or
mov
outsb
mov
nop
jae
std
out
mov
jp,pn
xor
adc
in
addb
cmp
cmp
mov
stc
ds
sbb
or
stos
mov
mov
pop
outsl
je
or
sarl
mov
push
add
andb
sbb
dec
pop
pop
push
out
scas
adc
jb
insl
outsb
mov
iret
dec
or
hlt
pop
out
iret
sbbb
fildll
mov
sub
jnp
cmp
iret
scas
cs
sub
test
inc
mov
es
add
hlt
sub
jnp
mov
cmp
xchg
xor
inc
adc
addb
adc
cmp
cmp
mov
pop
push
inc
sbb
addb
cmp
cmp
ss
jge
aas
cmp
adc
adc
cmp
cmp
mov
stc
push
loope
pushf
leave
addb
adc
cmp
cmp
adc
sub
shll
outsb
pop
xor
dec
mov
xor
addb
adc
cmp
cmp
dec
out
push
add
xchg
ja
mov
cmpsb
fdivrp
jmp
stos
push
or
inc
mov
push
scas
sbb
or
jo
push
jle
xor
adcb
adc
cmp
cmp
mov
pop
outsl
mov
addb
adc
cmp
cmp
adc
addb
cmp
cmp
mov
cmp
sbb
ja
cwtl
jne
addb
adc
cmp
cmp
insl
sub
jae
fadds
out
mov
sahf
push
addb
adc
cmp
cmp
pop
mov
sbb
addb
adc
cmp
cmp
xchg
aas
pop
scas
and
mov
loope
inc
mov
shlb
inc
cltd
leave
incb
outsb
int
test
cmp
repz
loopne
cmp
addb
adc
cmp
cmp
inc
xor
addb
cmp
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jns
pushf
jnp
pushf
push
loop
or
adc
dec
push
lret
adc
bound
mov
cmpsl
push
shrl
clc
out
inc
addb
adc
cmp
cmp
loope
mov
xor
pop
sub
mov
outsl
lahf
jne
jge
mov
mov
xor
test
hlt
push
mov
imul
je
inc
jg
leave
push
call
xchg
lock
in
adc
push
dec
aad
pop
dec
pop
sub
addb
adc
cmp
cmp
es
das
mov
addr16
insl
dec
mov
mov
adc
adc
cmp
cmp
mov
ret
push
sbb
xchg
or
adcb
adc
cmp
cmp
mov
leave
addb
adc
cmp
cmp
iret
xor
ds
mov
aad
addb
adc
cmp
cmp
dec
pop
sub
mov
ja
mov
adc
adc
cmp
cmp
mov
mov
xchg
rorb
lea
addb
adc
cmp
cmp
ret
stos
push
addb
adc
cmp
cmp
mov
inc
xor
xor
sbb
or
jno
xchg
xchg
xor
lds
stos
push
cld
adc
stos
ljmp
cmc
lods
mov
xor
xor
addb
adc
cmp
cmp
add
clc
pop
addb
adc
cmp
cmp
mov
adc
xor
jl
addb
cmp
cmp
mov
xor
mov
sbb
loope
aaa
pop
cmc
je
outsl
lock
dec
push
jp
xchg
push
lret
mov
shll
addb
cmp
cmp
mov
aam
and
clc
scas
push
icebp
mov
jmp
andb
push
and
jmp
mov
adc
adc
cmp
cmp
mov
pop
inc
ret
jns
mov
adc
adc
cmp
cmp
dec
xchg
pop
out
adc
js
testb
adc
cmp
cmp
mov
mov
add
cli
pushf
daa
js
sbbb
addb
adc
cmp
cmp
adc
movsb
mov
or
dec
ja
jge
mov
lret
addb
adc
cmp
cmp
leave
lods
lcall
mov
ds
addb
adc
cmp
cmp
xor
ret
cmp
addb
cmp
cmp
mov
addb
adc
cmp
cmp
in
push
cmp
mov
xor
ss
xor
sbb
push
lcall
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
cs
repnz
mov
repnz
mov
ds
test
call
pop
bound
adc
mov
das
cmp
adc
adc
cmp
cmp
addb
adc
cmp
cmp
cmp
jmp
subl
mov
fidivrs
mov
adc
xchg
pop
mov
addb
cmp
cmp
mov
and
mov
addb
adc
cmp
cmp
lret
inc
mov
pop
adc
jmp
int3
aaa
hlt
and
adcb
adc
cmp
cmp
mov
xchg
cwtl
xlat
popa
insb
imul
insb
cmp
inc
insb
out
dec
aaa
es
mov
ljmp
or
adc
adc
cmp
cmp
xor
cmpsb
mov
or
mov
xchg
xchg
test
inc
mov
shl
ret
or
pusha
cmp
adc
adc
cmp
cmp
mov
adc
and
adc
adc
cmp
cmp
mov
rcl
mov
fstpt
adc
pop
arpl
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
push
jl
jmp
mov
jp
aas
addb
popa
iret
inc
inc
cmpsb
lcall
adcb
adc
cmp
cmp
mov
pushf
scas
jo,pt
out
in
adc
jge
mov
mov
rcrb
xlat
mov
add
js
dec
addb
adc
cmp
cmp
jg
mov
cmp
out
mov
xchg
dec
ret
test
pop
xor
adc
adc
cmp
cmp
adc
xor
xor
adc
out
or
addb
cmp
cmp
movsb
pop
mov
push
test
loopne
popf
cmp
mov
dec
jae
cmp
movsl
mov
addb
jae
mov
out
leave
push
xchg
in
pop
ss
mov
fdivr
jns
jl
xchg
xchg
lcall
addb
cmp
cmp
out
lret
sahf
add
test
mov
cmpsl
mov
cmpsb
shll
jg
inc
xlat
notb
push
jl
aad
and
adc
cmpsl
arpl
addb
cmp
cmp
addb
adc
cmp
cmp
rcll
js
jns
pop
loop
hlt
imul
adc
adc
cmp
cmp
mov
roll
mov
inc
iret
jne
scas
fdivrl
addb
cmp
cmp
mov
leave
loope
pop
adc
xchg
add
roll
or
jae
sti
addb
adc
cmp
cmp
xchg
loope
gs
loope
and
addb
cmp
cmp
mov
dec
sub
negb
jns
pop
imul
mov
cwtl
inc
ss
jno
jmp
ljmp
ret
xchg
call
mov
loope
mul
sbb
out
and
dec
mov
or
push
xchg
aad
xchg
cmp
mov
sbb
and
sti
in
push
or
std
insb
frstor
dec
cmp
push
or
aas
addb
adc
cmp
cmp
jecxz
in
aad
xchg
adc
jge
cmpsb
sbb
addb
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
add
enter
test
adc
adc
cmp
cmp
test
xor
imul
shrl
sbb
push
mov
addb
adc
cmp
cmp
sbb
pop
ss
adc
test
xor
sar
out
and
cmpb
jmp
or
stc
test
mov
adcb
adc
cmp
cmp
mov
scas
out
insb
lahf
pop
addb
adc
cmp
cmp
jp
test
out
jns
lahf
dec
lcall
mov
add
add
mov
adc
adc
cmp
cmp
mov
dec
mov
inc
pop
jns
arpl
xchg
filds
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
xchg
popf
stos
cmove
in
pop
inc
outsl
pushf
jbe
inc
pop
mov
adc
adc
cmp
cmp
mov
in
jl
pop
ret
fstpl
push
repz
subl
shrl
movsl
aad
addl
adc
addb
cmp
cmp
addb
adc
cmp
cmp
cs
cltd
lds
jnp
inc
jo
dec
test
lock
dec
sahf
jns
jbe
out
mov
sub
adc
adc
cmp
cmp
sub
nop
addb
adc
cmp
cmp
mov
ret
jbe
xchg
inc
cmc
sub
xchg
into
in
add
mov
jge
leave
outsb
sbb
push
pop
jmp
pop
jnp
and
or
out
mov
mov
stos
test
call
addb
adc
cmp
cmp
add
adc
in
xchg
mov
das
addb
adc
cmp
cmp
fldenv
repz
lods
or
xchg
fdiv
ret
ret
pop
scas
push
adc
sbb
subl
in
test
addb
cmp
cmp
addb
adc
cmp
cmp
pop
enter
mov
das
pop
in
sub
mov
js
push
dec
ljmp
fisttps
jecxz
aas
or
jge
mov
jge
sub
mov
mov
aad
addb
cmp
cmp
mov
je
jno
push
adc
fwait
je
hlt
xlat
pop
dec
pop
mov
addb
adc
cmp
cmp
mov
cmp
rcll
push
push
jl
mov
and
and
cli
dec
addb
adc
cmp
cmp
jge
jo
nop
jb
aad
push
jae
int3
inc
addb
adc
cmp
cmp
sub
ds
sub
je
bound
adc
sub
addb
adc
cmp
cmp
cwtl
loope
std
popf
cmp
jecxz
insb
push
call
into
sub
cmpsb
ljmp
adc
adc
cmp
cmp
mov
sub
popf
fiaddl
xor
fwait
push
js
addb
cmp
cmp
mov
addb
adc
cmp
cmp
stos
out
jp
mov
insb
loope
mov
adc
adc
cmp
cmp
nop
xor
loop
mov
addb
cmp
cmp
mov
xchg
dec
push
sub
or
addb
adc
cmp
cmp
xor
add
lahf
dec
add
addb
cmp
cmp
xor
and
jo
pop
stos
mov
addb
cmp
cmp
mov
enter
lods
lahf
addb
adc
cmp
cmp
push
je
xchg
in
mov
pop
push
or
das
xor
das
cmp
stos
jnp
dec
sti
mov
scas
in
popf
push
jg
adc
xor
aam
dec
mov
lods
and
or
loope
cltd
cmp
adc
adc
cmp
cmp
mov
int3
pop
mov
cmp
adc
adc
cmp
cmp
clc
popf
gs
adc
dec
inc
fucomi
dec
loope
sti
dec
addb
adc
cmp
cmp
xor
mov
or
sub
sub
stos
dec
add
push
or
adc
sbb
cmp
ret
lret
xor
shrl
xchg
sbb
negl
adc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
sub
adcb
adc
cmp
cmp
mov
int3
adc
dec
jb
or
mov
adc
adc
cmp
cmp
lods
fisttpl
stos
or
test
adcb
adc
cmp
cmp
mov
push
mov
adc
daa
sub
and
nop
mul
lods
hlt
popa
lea
mov
scas
int
iret
daa
data16
adc
adc
cmp
cmp
rcll
sub
sbb
mov
jmp
and
iret
adc
ja
popa
ja
iret
adc
lcall
repnz
leave
das
test
or
aaa
and
mov
sbb
or
insb
dec
scas
and
das
addb
adc
cmp
cmp
dec
es
lret
es
and
or
pop
test
movb
imul
imul
adc
adc
cmp
cmp
push
mov
imulb
adc
adc
cmp
cmp
mov
dec
mov
fsubp
ret
jl
push
das
dec
sbb
adc
adc
cmp
cmp
repnz
mov
in
pop
dec
aas
sub
rolb
ud2
ja
addb
cmp
cmp
mov
std
add
stos
dec
lcall
aam
addb
cmp
cmp
mov
dec
mov
jbe
pop
arpl
incb
add
xchg
cmp
cltd
sbb
notb
mov
cmp
sub
sub
push
mov
call
mov
mov
sub
xchg
shrb
addb
adc
cmp
cmp
xor
pop
add
jle
jbe
add
ljmp
addb
adc
cmp
cmp
cmpsl
mov
movsb
sub
adcb
adc
cmp
cmp
mov
popf
addb
adc
cmp
cmp
adc
roll
mov
addb
cmp
cmp
cltd
xor
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
hlt
fidivrl
movsl
fsubs
cltd
mov
jne
dec
jns
addb
adc
cmp
cmp
cmp
ds
cmp
dec
mov
addb
adc
cmp
cmp
imull
out
test
jne
xchg
dec
in
jle
insl
push
dec
sub
addb
adc
cmp
cmp
ja
add
cmp
aas
sbb
test
addb
adc
cmp
cmp
and
ret
rep
mov
adc
out
and
std
and
int3
xchg
pop
lret
addb
cmp
cmp
stos
jns
das
xlat
cmpl
mov
out
and
mov
sub
jl
popf
jae
test
scas
push
addr16
loop
jnp
ds
lret
mov
orl
add
jl
addb
cmp
cmp
mov
mov
mov
jbe
add
mov
aaa
and
and
push
shrb
shrl
push
or
sub
fnsave
incb
dec
nop
addb
adc
cmp
cmp
jg
or
addb
adc
cmp
cmp
mov
xorl
push
test
dec
mov
je
lods
mov
lret
sbb
addb
cmp
cmp
mov
xchg
mov
push
xchg
imull
flds
inc
add
xor
sub
push
roll
adc
adc
cmp
cmp
pop
test
sub
jle
inc
and
lahf
dec
repz
fmull
addr16
subl
outsb
cs
cmp
push
loope
jecxz
mov
mov
dec
lcall
xchg
dec
fldcw
lret
addb
cmp
cmp
jecxz
add
lea
pop
cmp
addb
cmp
cmp
mov
dec
or
addb
cmp
cmp
addb
adc
cmp
cmp
sbb
mov
add
jle,pn
add
and
arpl
arpl
mov
cmp
aaa
cld
mov
sbb
push
enter
addb
adc
cmp
cmp
jg
sbb
or
and
xor
es
xchg
xchg
mov
or
adc
addb
adc
cmp
cmp
pop
and
dec
sub
imul
cmp
mov
sbb
mov
pop
push
fdiv
and
jl
jne
push
or
fbstp
inc
ret
bound
popa
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xlat
bnd
movsb
test
addb
adc
cmp
cmp
les
dec
xor
xchg
mov
push
adc
rol
aas
imul
xchg
sub
movl
adc
adc
cmp
cmp
mov
jo
mov
sub
inc
test
lods
mov
pop
push
imul
pop
arpl
adc
adc
cmp
cmp
nop
test
sahf
adc
mov
xchg
vpandn
addb
cmp
cmp
mov
mov
and
jge
push
scas
dec
in
imul
adc
cmp
cmp
mov
inc
mov
insl
aam
dec
cmp
pop
hlt
addb
adc
cmp
cmp
shll
das
sti
xchg
inc
xor
testl
sahf
xchg
fdivr
xchg
xchg
add
mov
cmpsb
stos
mov
inc
dec
inc
repnz
popa
addb
adc
cmp
cmp
dec
pop
mov
int3
fs
in
xchg
add
addb
adc
cmp
cmp
jo
mov
pop
test
sub
cmp
call
cwtl
mov
lret
jnp
xchg
add
adc
adc
cmp
cmp
push
xor
and
xor
adc
push
adcl
mov
xor
adc
adc
cmp
cmp
enter
fiadds
adc
adc
cmp
cmp
lods
lret
fstpl
addb
cmp
cmp
mov
stos
sub
xchg
out
jae
mov
jmp
movl
leave
cs
dec
mov
repnz
sbb
mov
xchg
jnp
pop
adc
sbb
dec
roll
adc
adc
cmp
cmp
in
sahf
clc
iret
xor
in
mov
adc
adcb
adc
cmp
cmp
mov
lret
adc
jecxz
jns
mov
add
jnp
addb
adc
cmp
cmp
and
rcll
leave
test
dec
mov
jnp
repnz
rolb
syscall
lock
adc
cmp
cmp
xchg
dec
fnstsw
pop
nop
pusha
or
addr16
lahf
inc
les
insl
outsb
xor
or
push
sbb
dec
lock
push
hlt
jl
decb
lcall
imul
ror
pop
and
ss
call
adcb
adc
cmp
cmp
mov
adc
cmp
addb
cmp
cmp
mov
mov
fldl
adc
adc
cmp
cmp
jno
jo
mov
cwtl
mov
inc
aaa
dec
addb
adc
cmp
cmp
adc
addb
cmp
cmp
mov
jnp
and
mov
adc
std
addb
adc
cmp
cmp
mov
pop
or
adc
mov
ret
adc
mov
xchg
fistps
scas
push
or
mov
repnz
jmp
addb
adc
cmp
cmp
cs
mov
cmpsl
stc
add
xchg
push
data16
adc
cmp
cmp
push
xlat
fmuls
push
shrb
mov
add
addb
cmp
cmp
sub
mov
push
cltd
mov
aad
sti
js
mov
push
xlat
sbb
add
adc
adc
cmp
cmp
mov
xchg
xor
das
sub
sub
ds
adc
rclb
push
or
push
aas
jecxz
push
fnstsw
test
mov
addb
cmp
cmp
js
push
std
pop
scas
cmpsb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
incl
xchg
cltd
cmpsb
mov
gs
dec
shlb
icebp
cmpsl
cmpsl
sbb
addb
adc
cmp
cmp
mov
addb
cmp
cmp
xor
or
mov
adcb
adc
cmp
cmp
mov
fists
xchg
jl
inc
sbb
icebp
popf
popa
addb
adc
cmp
cmp
or
out
dec
mov
out
add
adc
adc
cmp
cmp
aad
stos
pusha
adc
nop
aam
cmp
inc
je
out
sub
addb
adc
cmp
cmp
pop
loop
fwait
gs
jp
add
dec
icebp
pop
mov
lods
xor
xor
andl
or
insl
leave
rorl
into
mov
xor
imul
imul
push
in
lea
imul
sbbb
mov
add
adc
pop
push
gs
addb
cmp
cmp
shl
and
inc
rcll
lods
cmpsl
out
addb
cmp
cmp
mov
insb
cs
cmp
adc
leave
addb
adc
cmp
cmp
mov
sbb
mov
hlt
and
pop
addb
pop
aam
adc
outsb
sarl
lahf
dec
testl
jmp
stc
mov
dec
nop
enter
and
xlat
mov
adcb
adc
cmp
cmp
mov
fists
and
das
jbe
scas
pop
xchg
or
sub
adc
adc
cmp
cmp
pop
gs
sbb
xchg
ss
or
addb
adc
adc
cmp
cmp
fildl
adc
adc
cmp
cmp
xchg
cld
push
stc
popf
inc
inc
xor
jg
jno
loope
mov
mov
jge
addb
cmp
cmp
mov
out
sahf
enter
jae
push
mov
pop
loopne
cmc
sub
xorb
sub
push
cmp
stos
addb
adc
cmp
cmp
sub
ret
jnp
ret
stos
adc
in
out
push
movsl
xchg
sub
jns
and
sahf
clc
addb
adc
cmp
cmp
xchg
xor
adcb
adc
cmp
cmp
mov
or
adc
addb
cmp
cmp
cld
addb
adc
cmp
cmp
dec
sub
addb
cmp
cmp
mov
scas
xchg
lret
orl
gs
ficomps
addr16
stc
shl
cmc
xchg
jmp
sub
jle
cmpsl
sbb
cwtl
mov
dec
outsl
data16
xor
addb
adc
cmp
cmp
xor
push
mov
sub
cmp
jae
fstl
mov
addb
adc
cmp
cmp
dec
loopne
jbe
mov
adcb
adc
cmp
cmp
mov
cmp
adcb
adc
cmp
cmp
mov
push
mov
roll
or
fisubs
and
nop
repz
add
jb
and
pop
jg
pop
rolb
dec
sbbb
inc
mov
ficomps
stc
notb
je
jg
gs
push
and
test
scas
push
data16
movsb
es
popf
sbb
int3
jp
shl
jb
and
and
aaa
sbb
adc
mov
dec
and
mov
jg
test
addb
adc
cmp
cmp
outsb
rorl
dec
fcmovbe
jecxz
call
in
vpminsw
add
ds
adc
roll
add
add
adc
ljmp
mov
push
addb
cmp
cmp
stos
xor
ds
popf
adc
arpl
sbb
ss
rolb
push
mov
push
dec
mov
sub
addb
adc
cmp
cmp
loop
mov
jae
dec
fcos
outsb
or
adc
adc
cmp
cmp
mov
int
daa
js
in
test
imul
fbld
data16
daa
dec
dec
xor
push
pop
fwait
insb
out
addb
adc
cmp
cmp
dec
fmull
xor
pop
mov
sub
lods
push
mov
mov
icebp
push
mov
and
test
fwait
movsl
fdivrp
inc
pop
addb
adc
cmp
cmp
rorb
jle
sarb
push
int
fstl
push
daa
fwait
or
sbbl
adcb
adc
cmp
cmp
mov
ss
push
mov
pop
cwtl
aad
inc
sbb
addb
cmp
cmp
mov
movsb
xor
lret
addb
cmp
cmp
mov
out
cmc
popa
jnp
cltd
addb
adc
cmp
cmp
je
add
scas
xchg
into
sar
addl
adc
adc
cmp
cmp
mov
lcall
out
js
or
jmp
adcb
stc
mov
jecxz
cmp
jbe
mov
addb
adc
cmp
cmp
loop
and
mov
mov
jle
and
or
push
mov
push
stos
lods
ret
data16
cmp
mov
aam
aam
pop
sbb
pusha
push
lods
jne
cmpsb
xchg
iret
data16
dec
fldcw
xchg
xchg
rcrl
gs
loopne
cwtl
mov
add
xor
addb
adc
cmp
cmp
xchg
ljmp
jno
sub
add
pop
fwait
aad
xor
mov
movsl
div
adc
adcb
adc
cmp
cmp
mov
sahf
push
sarb
fwait
inc
subb
pushf
inc
mov
addb
cmp
cmp
addb
adc
cmp
cmp
enter
addb
cmp
cmp
les
cwtl
stos
push
lea
mov
repz
mov
addb
cmp
cmp
mov
pop
inc
mov
hlt
lret
push
leave
xor
daa
dec
divl
addb
adc
cmp
cmp
das
insb
popf
and
add
dec
xor
xchg
loop
repnz
mov
xor
test
in
stos
cmp
stos
push
stos
and
push
aas
test
adc
pop
or
xchg
addb
adc
cmp
cmp
fwait
repnz
stos
push
aam
dec
mov
cmp
mov
adc
popf
aas
fs
lods
es
xor
ljmp
adcb
adc
cmp
cmp
mov
orl
loopne
and
ljmp
mov
push
and
cli
in
dec
mov
out
into
mov
pop
stos
cmp
jl
std
stos
dec
ret
pop
sbbl
or
test
icebp
push
push
hlt
sahf
cmp
pop
ror
addb
adc
cmp
cmp
test
mov
push
sahf
addb
adc
cmp
cmp
inc
out
mov
addb
cmp
cmp
das
jbe
addb
adc
cmp
cmp
ljmp
pop
mov
push
insl
xchg
dec
and
jl
xchg
arpl
adcb
adc
cmp
cmp
mov
xchg
ss
jg
outsl
outsl
lods
sub
sbb
push
push
leave
add
adc
pop
mov
addb
cmp
cmp
mov
mov
xor
adc
adc
cmp
cmp
addb
adc
cmp
cmp
lea
jge
mov
mov
dec
mov
pushf
call
mov
adc
es
repz
add
in
addb
adc
cmp
cmp
inc
jbe
jg
adc
sub
adc
adc
cmp
cmp
mov
imulb
nop
mov
adc
sbb
stc
push
sub
popl
stos
dec
addl
and
scas
lcall
jle
stos
rcl
jecxz
cs
or
push
js
inc
test
adc
adc
cmp
cmp
pop
dec
cmc
fwait
stos
jbe
insb
sar
adc
setle
or
lcall
mov
mov
js
scas
jl
and
add
mov
jmp
cs
rolb
dec
xchg
pop
add
jmp
lahf
inc
jmp
dec
js
mov
shll
mov
cwtl
repz
jp
add
enter
ja
sub
out
popf
roll
add
dec
fisttps
es
fdivr
js
out
js
rcll
sub
ret
out
icebp
push
jge
and
fs
adc
addb
adc
cmp
cmp
pop
dec
dec
fadd
addb
adc
cmp
cmp
cmpsl
loop
shlb
pop
add
dec
inc
lods
jns
jae
imul
aas
mov
movsb
in
push
out
sbb
dec
ret
mov
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jmp
jle
cmp
jnp
jb
into
ss
addb
adc
cmp
cmp
fsubs
xlat
jnp
movsl
mov
mov
adc
adc
cmp
cmp
adc
and
sarb
addb
cmp
cmp
adc
je
cli
push
in
cmp
clc
sbb
jne
jg
rcrl
dec
sbb
cmp
mov
push
ja
push
mov
adc
adc
cmp
cmp
ljmp
addb
cmp
cmp
mov
ret
lea
inc
fs
subb
and
js
cmp
fdivr
out
outsb
outsl
stc
mov
cld
mov
or
jle
icebp
cltd
lds
ss
cld
pop
sub
add
dec
mov
xlat
or
cmp
addb
adc
cmp
cmp
test
adc
adc
cmp
cmp
add
pop
pop
int
addb
cmp
cmp
mov
lret
flds
adc
adc
cmp
cmp
push
subl
jnp
ret
and
jle
push
pop
gs
push
cmp
push
mov
pop
lret
and
sub
mov
das
inc
push
popf
testl
in
loop
insl
stos
js
adc
das
insl
lods
lea
mov
jb
sbbl
js
ret
imul
addb
cmp
cmp
mov
shll
addb
adc
cmp
cmp
int
mov
adc
adc
cmp
cmp
testl
push
scas
sarb
pushf
arpl
aad
out
in
mov
popa
cltd
mov
push
aaa
pop
or
sahf
popf
pop
inc
leave
sti
daa
out
inc
clc
cmpsb
cwtl
dec
data16
jno
movsb
lock
cmp
push
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
sbb
addb
cmp
cmp
scas
outsl
pushf
leave
or
cmp
pop
fucomip
push
mov
mov
sub
mov
into
pop
xchg
test
sbb
dec
mov
cmc
and
and
push
add
scas
or
inc
adc
imul
rolb
addr16
mov
mov
push
addb
adc
cmp
cmp
roll
adc
adc
cmp
cmp
dec
and
scas
aas
movb
cltd
rclw
addb
cmp
cmp
mov
inc
flds
push
daa
addr16
leave
jg
cmp
sub
into
or
sub
dec
dec
xor
data16
adc
cmp
cmp
mov
stos
xlat
adc
out
mov
js
mov
xchg
and
aad
mov
jns
mov
jecxz
cmp
xchg
and
inc
addb
adc
cmp
cmp
inc
loope
ror
mov
cld
or
or
add
incl
adcb
adc
cmp
cmp
mov
loop
incl
test
and
ja
push
lds
push
mov
std
rclb
nop
mov
adc
adc
cmp
cmp
mov
ljmp
daa
pop
test
popa
cmpsb
addb
adc
cmp
cmp
mov
loopne
add
addb
adc
cmp
cmp
cltd
mov
dec
pop
mov
scas
fs
push
call
add
jge
xchg
or
push
iret
pandn
adc
adc
cmp
cmp
mov
sarl
cmp
mov
int
sbb
cwtl
orl
adc
mov
xchg
mov
and
lea
pop
lods
inc
mov
shr
adc
or
xor
addb
cmp
cmp
jecxz
outsl
jnp
mov
in
xchg
jbe
xchg
mov
movzwl
call
pushf
sbb
in
mov
int3
sbb
adc
adc
cmp
cmp
testb
ficompl
mov
pop
mov
cmp
add
cld
addb
adc
cmp
cmp
xchg
mov
adc
fsubp
jmp
adc
adc
cmp
cmp
mov
jp
inc
jne
sub
addb
cmp
cmp
mov
addb
adc
cmp
cmp
bnd
mov
sarb
out
das
xchg
push
sub
push
loop
addb
cmp
cmp
mov
mov
mov
faddl
mov
pop
out
outsb
movd
sarb
mov
repz
testl
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
mov
jg
addb
cmp
cmp
mov
mov
mov
addb
adc
cmp
cmp
jle
shlb
hlt
dec
jno
ffreep
inc
loopne
addb
adc
cmp
cmp
sahf
scas
add
pop
mov
inc
sbb
xchg
jbe
insl
int
addb
adc
cmp
cmp
push
mov
mov
jmp
out
adc
rol
mov
cmp
pop
mov
xchg
roll
mov
jns
dec
lds
rorb
loope
orb
xchg
addb
adc
cmp
cmp
mov
sub
pop
pop
add
adc
adc
cmp
cmp
cltd
insl
int3
pop
lcall
mov
or
mov
in
and
mov
mov
cmp
add
addl
inc
lds
adc
adc
cmp
cmp
hlt
mov
mov
addb
cmp
cmp
mov
jle
leave
icebp
mov
dec
cmc
mov
pop
movsl
addb
adc
cmp
cmp
popf
pop
ss
mov
addr16
xor
inc
mov
jnp
addb
cmp
cmp
mov
sti
push
addb
cmp
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sub
mov
divl
cmpsl
scas
mov
add
repnz
and
sti
movsl
sahf
pushf
push
mov
jb
aas
mov
mov
addb
adc
cmp
cmp
fildl
sbb
scas
sti
or
cmp
int3
cmpsb
scas
xchg
cmpsb
dec
cmc
pop
or
fwait
push
jb
sahf
mov
jnp
xor
inc
mov
push
addb
adc
cmp
cmp
cltd
fistl
adc
adc
cmp
cmp
inc
test
push
jbe
add
pop
dec
subb
loopne
stos
shll
push
inc
sahf
inc
ds
ja
xchg
stos
jge
cmp
lds
aad
push
ficoml
iret
xchg
std
aad
mov
adc
sbb
ja
mov
mov
push
icebp
cmp
addb
adc
cmp
cmp
and
enter
mov
addb
cmp
cmp
mov
rolb
push
xor
jb
nop
int
dec
in
jmp
and
je
add
cli
push
xor
jbe
push
imul
imul
clc
pop
addb
adc
cmp
cmp
gs
outsb
pop
inc
cwtl
rcr
sti
or
jns
xchg
aaa
in
mov
dec
sbb
dec
add
test
cmp
cli
inc
fs
popf
ja
pushf
or
addb
cmp
cmp
push
call
adc
adc
cmp
cmp
mov
pushf
call
sbb
addb
cmp
cmp
mov
cmpsb
jle
inc
pusha
hlt
fs
lods
aas
addb
adc
cmp
cmp
adc
loopne
aad
test
bnd
push
inc
sbb
xor
out
jne
arpl
push
out
dec
inc
loopne
fildll
xchg
mov
addb
adc
cmp
cmp
fisttpll
dec
bound
xchg
cli
fcomps
xor
jecxz
popa
xchg
dec
pushf
inc
mov
fistps
gs
pop
shlb
and
xchg
mov
jmp
adcb
adc
cmp
cmp
mov
xlat
cmpsl
adc
jge
call
lea
sub
ja
add
push
aam
cmpsb
std
dec
mov
sub
mov
test
pop
leave
pop
stos
int
das
mov
push
xor
out
and
pop
es
jl
addb
adc
cmp
cmp
movsb
inc
les
dec
dec
or
mov
xor
lods
imul
rorb
addr16
mov
sti
test
jmp
jae
lods
and
inc
cmp
das
fistl
in
adc
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
add
xchg
in
hlt
push
push
dec
out
addb
adc
cmp
cmp
scas
sahf
cltd
xchg
adcl
mov
adcb
adc
cmp
cmp
mov
popf
push
out
sub
jbe
lea
and
jg
leave
lock
and
push
mov
in
and
lea
xchg
mov
int
or
aam
cmp
adc
adc
cmp
cmp
and
adc
mov
jecxz
push
cmp
rcr
pop
push
inc
jge
data16
pop
adc
out
push
div
addl
test
mov
lock
inc
add
adc
adc
cmp
cmp
push
fidivrl
mov
adc
inc
dec
add
addb
adc
cmp
cmp
ret
int
mov
inc
aam
xchg
adc
dec
dec
leave
fildl
adc
adc
cmp
cmp
and
cmp
std
repz
jne
push
shlb
test
mov
sub
rcrl
dec
pop
mov
test
or
mov
adc
adc
cmp
cmp
mov
xchg
jno
std
pushl
adc
adc
cmp
cmp
mov
mov
push
fadd
rolb
sub
sti
mov
pop
jmp
or
jg
mov
addb
cmp
cmp
mov
xchg
imul
cmpsb
jne
loope
addb
cmp
cmp
mov
addb
adc
cmp
cmp
adcl
fisubl
fcmovne
mov
cltd
and
out
push
adcb
adc
cmp
cmp
mov
stos
loope
pop
repnz
addb
cmp
cmp
mov
pusha
inc
repnz
sub
fwait
cmpsb
xor
addb
adc
cmp
cmp
push
inc
jmp
mov
adc
mov
adcb
adc
cmp
cmp
mov
sub
shrl
addb
cmp
cmp
imul
addb
adc
cmp
cmp
adc
cmc
mov
add
push
rclb
xor
es
repz
addb
cmp
cmp
mov
ds
addb
adc
cmp
cmp
jbe
cld
repz
aas
arpl
sahf
addb
adc
cmp
cmp
inc
cltd
rol
out
cmp
arpl
lock
mov
bound
loopne
daa
push
repz
repnz
sbb
mov
sbb
icebp
push
in
js
mull
int3
mov
mov
xor
popa
fnstenv
addb
cmp
cmp
pusha
insb
lock
cmp
xchg
dec
push
sbbl
and
inc
and
xchg
mov
or
cmp
pop
and
jno
xor
shr
cmp
test
or
mov
fisttpll
xlat
mov
out
rcrb
icebp
mov
dec
sbb
sti
sub
movaps
jg
pop
ja
mov
sub
adc
loope
cmp
addb
adc
cmp
cmp
mov
bound
mov
arpl
fcomps
jb
call
scas
dec
in
addb
cmp
cmp
mov
outsb
and
outsl
pop
jno
cmp
xchg
movsb
stos
stos
or
outsl
mov
cmpl
jle
addb
cmp
cmp
mov
inc
mov
test
add
push
out
mov
push
push
sub
adc
adc
cmp
cmp
mov
cli
jno
jnp
mov
out
js
pop
sti
pop
daa
ja
mov
and
mov
addb
adc
cmp
cmp
dec
daa
int3
mov
iret
loope
pop
in
dec
incb
out
das
add
clc
fbld
adcb
adc
cmp
cmp
mov
imul
mov
adc
adc
cmp
cmp
mov
popf
dec
sbb
repz
dec
in
or
aaa
arpl
dec
pop
pop
dec
mov
adc
cli
pop
repz
mov
sub
cmpl
out
in
mov
cmc
sbb
mov
bound
jo
dec
xorb
addb
adc
cmp
cmp
and
stos
stos
leave
fnsave
mov
sub
pop
push
movsl
cmp
ror
xor
mov
je
call
pop
pop
aam
push
xchg
sub
inc
filds
adc
adc
cmp
cmp
test
and
ret
inc
js
xchg
push
std
in
cmp
imul
adc
adc
cmp
cmp
mov
lret
inc
popa
test
push
push
je
leave
pusha
pop
rcll
cmp
adc
adc
cmp
cmp
mov
push
shlb
bound
addb
cmp
cmp
push
ret
stc
add
addb
cmp
cmp
mov
jnp
push
pop
push
push
or
adcb
adc
cmp
cmp
mov
stc
fbstp
push
paddusb
outsl
pushf
call
inc
jmp
mov
add
sbb
stos
lods
daa
dec
addb
adc
cmp
cmp
mov
ljmp
push
jnp
mov
addb
cmp
cmp
jae
jl
and
and
xor
xchg
add
addb
adc
cmp
cmp
dec
stos
fs
push
inc
push
push
push
mov
pop
js
addb
cmp
cmp
mov
push
adc
adc
dec
in
adc
push
sub
bound
xchg
aas
adcl
push
out
divb
out
cmp
cmp
push
nop
cmp
data16
inc
lret
mov
in
xor
and
sub
mov
lods
dec
add
cmpsl
roll
outsl
sbb
cltd
push
jne
pop
mov
addb
adc
cmp
cmp
movsb
and
ds
mov
mov
dec
push
das
mov
aas
mov
adc
fildll
xchg
clc
push
cmovs
jle
jb
cmp
xor
mov
fnstenv
shrl
adc
addb
cmp
cmp
mov
lea
sahf
push
dec
adc
movl
cmp
cmp
push
popf
sub
addb
adc
cmp
cmp
mov
push
inc
loope
sbb
ja
cmp
andl
std
pop
sbb
fldenv
jnp
lret
popf
addb
adc
cmp
cmp
arpl
push
stos
rolb
or
hlt
push
fisubl
stc
scas
sahf
ds
add
mov
adcb
adc
cmp
cmp
mov
shll
or
popf
popa
cmc
xor
addb
cmp
cmp
mov
pop
or
add
xor
mov
adc
ds
and
lods
xor
adc
and
xchg
fidivrl
sbb
addb
adc
cmp
cmp
jno
mov
mov
daa
in
pop
fwait
andb
idiv
iret
sbb
orb
inc
sub
lock
jl
loopne
addb
adc
cmp
cmp
cmpsb
stc
addb
adc
cmp
cmp
enter
loopne
sahf
cltd
mov
popa
pop
out
addb
adc
cmp
cmp
adc
icebp
scas
addb
adc
cmp
cmp
stos
leave
xchg
mov
xorb
std
mov
inc
into
mov
mov
addb
cmp
cmp
mov
push
enter
push
das
leave
shlb
shll
push
and
addb
cmp
cmp
mov
adc
xor
inc
fistpll
dec
lods
push
loop
pop
pop
pop
add
out
mov
cmpsb
inc
push
outsb
add
adcb
adc
cmp
cmp
mov
inc
xchg
adc
shl
pop
sbb
add
hlt
xor
dec
cmc
mov
leave
xorb
filds
cs
inc
mov
adcb
adc
cmp
cmp
mov
shlb
addb
cmp
cmp
mov
ds
popa
fstps
loop
addl
or
addb
adc
cmp
cmp
pop
int3
push
pop
inc
enter
popf
and
es
pop
cmpsb
test
addb
cmp
cmp
mov
and
std
loope
jge
fs
add
addb
adc
cmp
cmp
mov
pop
add
ret
addb
adc
cmp
cmp
gs
dec
dec
jo
outsb
dec
push
mov
jmp
xchg
push
es
cmc
sub
sbbb
push
add
cld
roll
cmp
nop
ja
addb
adc
cmp
cmp
or
push
sbbb
xchg
mov
enter
push
lods
mov
push
mov
addb
cmp
cmp
mov
faddl
xchg
addb
adc
cmp
cmp
in
addb
adc
cmp
cmp
insb
repnz
dec
addb
adc
cmp
cmp
idivl
or
adc
addb
cmp
cmp
mov
mov
inc
in
add
mov
sbb
dec
pop
pushf
imul
pop
xchg
sbb
jle
lds
xchg
cmp
addb
adc
cmp
cmp
xor
clc
or
shll
xor
pop
movb
sbb
mov
mov
addb
cmp
cmp
mov
push
add
inc
and
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jmp
std
rcrb
mov
addl
cmp
cmp
mov
cmpsl
mov
cli
mov
icebp
rcrb
add
adcb
adc
cmp
cmp
mov
push
fisttpll
inc
or
daa
mov
je
addb
adc
cmp
cmp
sbb
addb
adc
cmp
cmp
leave
out
inc
xor
add
lcall
adc
adc
addb
adc
cmp
cmp
push
pop
insb
prefetch
adc
adc
cmp
cmp
jno
cwtl
enter
addb
cmp
cmp
in
xchg
inc
jg
cmpsb
out
stos
add
leave
pop
pop
lret
je
test
addb
adc
cmp
cmp
imul
add
loope
inc
shlb
pop
xchg
jnp
outsb
adc
notb
jb
stos
pushf
add
out
std
mov
loopne
addb
cmp
cmp
mov
mov
and
bnd
inc
mov
mov
xlat
push
loopne
or
test
js
adc
mov
insb
push
push
mov
insl
lock
mov
addb
adc
cmp
cmp
add
xor
dec
sbb
shlb
inc
shr
arpl
inc
sbb
sub
push
sub
mov
jg
push
addb
adc
cmp
cmp
push
push
nop
addb
adc
cmp
cmp
ficompl
imul
mov
cs
out
repnz
in
addb
adc
cmp
cmp
inc
cwtl
ljmp
adc
adc
cmp
cmp
mov
mov
lahf
and
aas
inc
in
pop
mov
subl
inc
dec
mov
negb
inc
pushf
xchg
imul
scas
in
and
pop
adc
sahf
dec
cmp
addb
cmp
cmp
jg
mov
pop
adc
dec
cmpl
cltd
addb
adc
cmp
cmp
int3
mov
mov
ret
xor
out
ret
insb
insb
cmpsb
cmpsb
mov
xor
or
push
nop
mov
addb
cmp
cmp
mov
jb
nop
inc
or
or
ss
addb
adc
cmp
cmp
or
sbb
jmp
sbb
add
mov
outsl
nop
hlt
push
clc
xchg
pop
inc
add
pop
xor
mull
inc
dec
xor
sti
rcll
add
and
movsl
sub
notb
xor
adc
mov
cld
sub
xchg
jo
inc
and
mov
adc
xchg
xor
lock
lods
xor
addb
cmp
cmp
mov
cmp
cmc
or
pop
addb
adc
cmp
cmp
xor
mov
mov
xor
dec
cmp
and
xchg
out
out
sub
cmp
loopne
xchg
push
jmp
iret
cmpsb
push
test
xchg
repz
int3
fidivrs
cmpsl
inc
xor
or
push
pushf
pop
inc
or
dec
filds
adc
enter
push
repnz
das
scas
mov
xlat
push
fldcw
out
mov
sbb
mov
cmpsb
add
movsl
sub
xor
enter
add
icebp
xchg
push
sti
pop
clc
and
std
xor
aad
addr16
mov
test
dec
mov
scas
mov
imul
push
mov
pushf
adc
adc
adc
cmp
cmp
mov
cmp
xor
adc
adc
cmp
cmp
mov
jnp
addb
adc
cmp
cmp
cmc
imul
inc
mov
cmpsb
addb
adc
cmp
cmp
xchg
pop
aad
cli
les
inc
addb
adc
cmp
cmp
xor
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
push
dec
lahf
cmpsb
add
cmp
insl
js
gs
sub
adc
repz
test
shlb
dec
addb
adc
cmp
cmp
or
adc
mov
sub
dec
jne
adc
fsubrs
icebp
fcompl
out
incb
ret
leave
push
jl
push
addb
adc
cmp
cmp
inc
lret
jbe
addb
cmp
cmp
mov
pop
stos
mov
push
add
adc
adc
cmp
cmp
dec
movsl
lods
decl
mov
adc
adc
cmp
cmp
sub
loopne
cmc
pop
cli
idivb
pop
gs
outsl
les
mov
addb
adc
cmp
cmp
xchg
pop
or
cmp
pop
xchg
dec
sub
addb
adc
cmp
cmp
stos
jp
ret
addb
cmp
cmp
lea
mov
or
lcall
addb
cmp
cmp
rcrl
cwtl
inc
pop
hlt
pop
adc
cmp
xchg
sub
addb
adc
cmp
cmp
or
jmp
sbb
adc
adc
cmp
cmp
lds
leave
adc
pop
mov
and
addb
cmp
cmp
push
mov
jl
ret
loop
addb
adc
cmp
cmp
pop
sbb
addb
adc
cmp
cmp
into
lret
std
leave
and
pop
dec
andl
outsb
cmp
mov
stos
push
dec
ljmp
push
outsb
rorl
addb
cmp
cmp
mov
sub
sbb
nop
outsb
das
sub
nop
addb
adc
cmp
cmp
je
ljmp
adc
adc
cmp
cmp
fadds
adc
adc
cmp
cmp
nop
xor
adc
mov
sub
jne
inc
js
popa
and
loop
addb
adc
cmp
cmp
lock
cmp
clc
mov
test
sti
xor
dec
insl
addb
adc
cmp
cmp
push
iret
add
lock
lahf
lret
addb
cmp
cmp
mov
iret
mov
xchg
loopne
addb
cmp
cmp
mov
cmp
mov
jecxz
or
xchg
ret
addb
adc
cmp
cmp
loop
addb
adc
cmp
cmp
xchg
push
pusha
jp
xor
gs
mov
add
loope
xor
mov
addb
cmp
cmp
mov
sbb
sub
or
dec
push
and
in
xor
sti
cmp
out
pop
movsb
mov
mov
pop
clc
push
lock
mov
xchg
addb
adc
cmp
cmp
inc
fs
rcl
in
pop
or
mov
mov
lds
pop
lret
mov
fcomps
test
inc
adc
ffree
inc
and
fimuls
mov
je
mov
sub
cltd
lods
loopne
mull
push
or
push
cmc
mov
xlat
repnz
dec
xchg
jg
dec
sub
push
push
xor
nop
xchg
popf
std
lods
in
out
jge
mov
adcb
adc
cmp
cmp
mov
rolb
adc
test
lea
pop
aas
and
and
jbe
xchg
and
testl
adcb
adc
cmp
cmp
mov
outsl
popa
push
addb
adc
cmp
cmp
popf
bound
scas
fbld
jae
idivl
dec
xlat
mov
outsb
int3
aam
xchg
or
adc
insb
clc
and
lcall
cmpsl
xchg
ds
fldenv
push
jmp
jmp
adc
adc
cmp
cmp
mov
sbb
les
xor
stos
add
xor
jmp
dec
icebp
push
cmp
lret
addb
adc
cmp
cmp
lret
fsubrp
push
divl
les
adc
adc
cmp
cmp
fcmovnu
fsubr
out
pop
sub
xlat
test
lods
mov
in
addb
adc
cmp
cmp
movsl
adc
addb
cmp
cmp
mov
sti
cmp
ss
addb
adc
cmp
cmp
dec
stos
into
addb
adc
cmp
cmp
mov
sbb
mov
pusha
fiadds
addb
cmp
cmp
mov
pop
iret
adc
test
add
scas
xlat
cmp
loop
pushf
cmpl
loope
inc
adc
push
sub
jno
int3
ja
xchg
gs
mov
pop
movsb
lods
jmp
push
dec
pop
fldl
addb
cmp
cmp
lea
loope
addb
adc
cmp
cmp
ljmp
cmp
ret
jno
add
pop
lock
subb
fisubrl
out
or
mov
mov
xor
xchg
fisubrl
imul
cs
rcr
movsb
jge
push
lods
je
fimuls
dec
popa
outsb
add
or
cmpsl
adc
les
push
inc
pop
mov
jmp
pushf
test
dec
addb
adc
cmp
cmp
push
test
mov
mov
adc
adc
cmp
cmp
mov
dec
adc
insb
sub
sbb
addb
cmp
cmp
test
mov
rcrb
out
add
je
jne
imul
or
mov
lcall
inc
xchg
roll
adc
cmp
cmp
mov
or
mov
mov
std
xorl
or
cmp
movb
adc
cmp
cmp
mov
push
mov
adc
adc
cmp
cmp
mov
jg
lds
lods
pop
addb
adc
cmp
cmp
shrl
addb
adc
cmp
cmp
ds
jo
mov
xor
js
and
adc
adc
cmp
cmp
jg
dec
cmpsb
sbb
jl
andb
lret
push
dec
adc
data16
mov
in
mov
inc
ret
test
cmp
aad
stos
fs
mov
push
ljmp
push
aas
dec
mov
shrl
cs
out
out
js
pop
imul
loopne
mov
adc
adc
cmp
cmp
mov
inc
clc
inc
cli
outsb
lahf
xchg
dec
popf
in
popf
xchg
test
lcall
cs
ficompl
xor
loop
addb
cmp
cmp
mov
stos
mov
cli
push
sub
addb
adc
cmp
cmp
lds
cwtl
lock
lods
inc
xchg
shll
inc
and
addb
adc
cmp
cmp
pusha
pop
push
out
jne
pop
dec
mov
sbbl
sub
aaa
and
sahf
rcrl
inc
pop
sbb
int3
pop
aas
sub
dec
cmp
pop
xchg
das
test
pop
mov
stc
xchg
ss
out
mov
clc
pop
int3
pusha
push
scas
and
lods
jnp
jne
jne
fimull
mov
out
jns
mov
push
fiadds
adc
adc
cmp
cmp
into
mov
push
mov
cmc
xor
shrl
push
sub
pop
sub
xor
insb
ds
les
jns
cmpsl
out
fnstenv
jle
inc
aas
mov
pop
push
aad
add
push
pop
sub
cmpb
lret
fidivrl
aaa
test
mov
xor
bound
push
filds
adc
or
fists
cmp
mov
inc
mov
dec
add
adc
adc
cmp
cmp
mov
cmp
sub
adcb
adc
cmp
cmp
mov
ds
xchg
jle
mov
popa
sbb
sbb
lcall
adc
adc
cmp
cmp
mov
push
std
fcmove
xchg
cmp
dec
js
or
adc
adc
cmp
cmp
inc
pop
out
addb
adc
cmp
cmp
nop
es
mov
out
insb
rcrl
mov
mov
add
cs
xor
out
dec
add
or
das
mov
inc
push
addb
adc
cmp
cmp
inc
and
adc
adc
cmp
cmp
aam
push
divb
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
fcoms
xor
cmp
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
dec
in
mov
addb
adc
cmp
cmp
sbb
mov
xchg
std
and
xchg
outsl
in
push
jns
sbb
xacquire
addb
cmp
cmp
mov
pop
lret
ja
lahf
popf
das
fldl
adc
adc
cmp
cmp
mov
lret
xchg
ret
orb
scas
inc
sub
sub
adc
xlat
push
sbb
pop
insb
or
sub
in
test
jle
jbe
dec
or
lahf
cmc
jecxz
xor
ror
outsl
ds
mov
push
test
faddl
xorl
ja
data16
adc
adc
adc
cmp
cmp
mov
lea
addb
cmp
cmp
mov
mov
jecxz
cmp
addb
adc
cmp
cmp
and
jmp
addb
cmp
cmp
mov
adc
pop
ds
addb
adc
cmp
cmp
movsl
sub
jle
cli
jns
out
cmpsb
add
xchg
mov
xchg
sub
adc
adc
cmp
cmp
and
push
rorl
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
push
lods
nop
idiv
pop
mov
test
data16
ljmp
cmp
adc
adc
cmp
cmp
mov
test
repz
mov
add
mov
ja
mov
call
lods
mov
stos
dec
sbb
icebp
dec
stos
movsl
push
xchg
dec
stos
mov
adc
adc
cmp
cmp
mov
mov
mov
icebp
cmp
adcb
adc
cmp
cmp
mov
push
sub
aad
xchg
sbb
dec
insl
scas
cmpb
addb
adc
cmp
cmp
and
add
adc
adc
cmp
cmp
mov
xchg
mov
push
addb
cmp
cmp
repz
mov
je
hlt
jge
add
in
dec
cmpsb
and
push
iret
enter
mov
xchg
mov
xchg
addb
adc
cmp
cmp
inc
and
gs
sarl
inc
mov
adc
and
adc
adc
cmp
cmp
dec
push
fnstenv
pop
test
xchg
repnz
push
jbe
and
repnz
sub
inc
stos
xlat
mov
and
pusha
pop
sbb
cli
addr16
pop
test
adcb
adc
cmp
cmp
mov
mov
adc
loop
pop
nop
cli
mov
movsl
cmp
addb
cmp
cmp
mov
xchg
inc
jmp
pop
push
addb
adc
cmp
cmp
nop
pop
pop
push
movsb
arpl
jp
into
addb
adc
cmp
cmp
cmp
cmpsb
loop
jp
rcr
inc
mov
and
fldl
movsb
xchg
push
adc
mov
outsl
jmp
jb
das
std
sbb
rcrl
popa
push
mov
addb
cmp
cmp
mov
mov
mov
jno
inc
mov
and
cld
cmp
fs
dec
addb
adc
cmp
cmp
jmp
aad
mov
ret
in
xchg
push
cmovle
adcb
adc
cmp
cmp
mov
lods
mov
adcb
adc
cmp
cmp
mov
dec
addb
adc
cmp
cmp
pop
aam
cmpsb
mov
mov
aas
jbe
mov
sbb
xor
sarb
popf
fiaddl
insb
push
data16
mov
call
mov
cmp
fcomi
loope
aad
dec
nopl
cmp
in
fcmovne
imull
adc
gs
ficompl
xchg
inc
data16
das
enter
outsb
lcall
pop
lahf
mov
jnp
dec
stc
adcl
push
xchg
dec
push
insl
mov
clc
fdivr
loop
ret
pop
mov
push
stc
cmp
jns
jl
out
pop
fwait
rorl
ss
jae
cmp
adc
adc
cmp
cmp
mov
dec
inc
adc
xor
addb
cmp
cmp
mov
addb
cmp
cmp
mov
in
dec
sub
xchg
in
stos
inc
fsubs
cwtl
push
push
ret
ret
fistpl
sbb
push
or
cmp
jne
push
addb
adc
cmp
cmp
and
cmp
in
es
fsubrs
addb
cmp
cmp
mov
inc
dec
mov
adc
adc
cmp
cmp
mov
sub
mov
lods
xchg
sub
pop
scas
add
addb
adc
cmp
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
ret
sbb
mov
mov
mov
sub
inc
xacquire
popf
mov
aas
sbb
mov
cltd
mov
addb
cmp
cmp
enter
pushf
inc
push
lock
daa
movsb
mov
and
jle
imul
jle
addb
cmp
cmp
mov
mov
mov
pop
xlat
mov
pop
or
xor
jbe
sub
addb
cmp
cmp
mov
and
or
adcb
adc
cmp
cmp
mov
fwait
lahf
xor
adc
adc
cmp
cmp
in
mov
adc
adc
cmp
cmp
nop
addb
adc
cmp
cmp
shrb
push
add
addb
cmp
cmp
mov
out
push
sbb
cld
cmp
mov
mov
mov
dec
sub
xor
bound
push
insb
rep
and
adc
and
add
dec
sbb
cltd
out
jo
shll
jmp
icebp
stc
dec
sub
es
push
icebp
addb
adc
cmp
cmp
push
and
loope
or
inc
jge
insb
dec
jae
das
pop
sub
or
adc
adc
cmp
cmp
mov
adc
xchg
movsl
xchg
arpl
add
mov
les
daa
xor
cmp
in
adc
addb
adc
cmp
cmp
mov
xchg
repz
adc
cmp
cmp
loope
gs
cmp
fcmovb
mov
or
mov
gs
fbstp
les
insl
stos
pop
mov
addb
cmp
cmp
jns
xchg
sub
mov
addb
adc
cmp
cmp
cltd
inc
fs
xchg
mov
xor
rorl
cmpsl
mov
daa
addr16
int
ss
out
xlat
lock
scas
dec
mov
xchg
cmpsb
out
popf
loopne
or
addb
cmp
cmp
mov
sbb
insl
mov
jnp
xchg
mov
inc
xorl
and
mov
repnz
cltd
xor
loope
ficoml
cli
mov
xchg
inc
sti
bound
stos
mov
push
lcall
adc
adc
cmp
cmp
mov
out
jbe
xchg
xor
shl
clc
aas
outsb
push
add
ljmp
adc
cmp
cmp
mov
mov
addb
cmp
cmp
pushf
mov
cmp
adc
addb
cmp
cmp
mov
je
pop
idivl
push
ret
out
jbe
movsb
dec
out
push
sti
lods
cmpsl
in
addb
cmp
cmp
mov
push
test
lds
fcomps
ja,pt
addb
cmp
cmp
mov
pop
cltd
and
inc
sbb
int3
test
push
mov
rcrb
mov
add
test
adc
adc
cmp
cmp
jecxz
sarb
out
push
jb
rcrb
sahf
dec
test
adc
sub
lods
roll
addb
cmp
cmp
lods
dec
andnps
xchg
jmp
and
nop
daa
mov
jge
pop
shrb
cmp
sub
sub
scas
and
sbb
inc
xchg
dec
cmovs
jb
addr16
adc
adc
adc
cmp
cmp
insl
lcall
ljmp
fidivs
nop
jbe
js
fldl
fisubl
xchg
addb
adc
cmp
cmp
lods
addb
adc
cmp
cmp
fadds
dec
sub
addb
cmp
cmp
mov
mov
inc
lahf
frstor
rclb
mov
addb
adc
cmp
cmp
leave
call
and
das
test
stos
in
orl
adc
adc
cmp
cmp
mov
ds
insb
ja
fadd
aam
xor
jno
xchg
cmp
insl
sbb
adcb
adc
cmp
cmp
mov
les
addb
cmp
cmp
insl
cmp
fiaddl
adc
adc
cmp
cmp
movsl
insl
pop
jo
sbb
es
sub
pushf
add
adc
adc
cmp
cmp
mov
inc
inc
adc
adcb
adc
cmp
cmp
mov
lahf
mov
fldl
adcb
adc
cmp
cmp
mov
mov
xchg
and
jp
jno
pop
addb
adc
cmp
cmp
mov
fisttpll
das
sti
pop
lock
dec
push
dec
mov
adc
adc
cmp
cmp
mov
arpl
addb
cmp
cmp
aad
je
add
sbb
mov
mov
inc
sub
xor
jno
push
loope
push
xchg
outsb
enter
js
fimuls
mov
cmp
mov
ret
push
inc
mov
out
xchg
lcall
adc
adc
cmp
cmp
mov
shr
and
mov
pop
jp
pop
or
addb
cmp
cmp
push
inc
pop
add
jb
addb
cmp
cmp
mov
or
mov
mov
addb
cmp
cmp
mov
or
adcb
addb
adc
cmp
cmp
inc
jp
sub
xchg
lods
inc
jge
sub
divl
cmpsl
xchg
add
inc
fcoms
xor
dec
dec
ss
addb
adc
cmp
cmp
leave
out
mov
flds
inc
leave
xchg
imul
loope
divb
cmp
inc
cmc
push
xlat
adc
xchg
loopne
jmp
adc
addb
adc
cmp
cmp
icebp
loop
jne
mov
push
inc
jae
addb
cmp
cmp
mov
xchg
pop
mov
jnp
xor
xchg
cltd
push
pop
add
scas
sub
iret
dec
ljmp
hlt
popa
mov
add
call
push
loopne
loopne
push
data16
in
addb
cmp
cmp
mov
roll
xor
sbb
mov
in
dec
sub
jl
push
inc
sub
push
imul
push
jnp
sti
cwtl
sub
mov
jmp
pop
das
mov
mov
in
push
repnz
addb
adc
cmp
cmp
inc
cmpsb
arpl
fwait
and
gs
lcall
addb
adc
cmp
cmp
add
dec
mov
fcoms
mov
inc
mov
pushf
mov
push
mov
push
out
inc
sti
mov
mov
iret
jmp
cmpsb
addb
adc
cmp
cmp
scas
imul
loope
jbe
dec
orb
pop
lahf
sbb
sub
aaa
and
fimull
loope
jle
iret
or
xor
cmp
aaa
aad
mov
dec
jl
add
sub
int
stos
cli
fstpt
adc
adc
cmp
cmp
mov
jnp
pop
addb
adc
cmp
cmp
cmpsl
and
into
addb
adc
cmp
cmp
inc
lods
aaa
sub
jp
sbb
xor
aad
negb
into
test
add
and
cs
int3
fwait
bound
data16
push
ljmp
or
aad
loopne
lea
adc
adc
cmp
cmp
mov
sbb
enter
pusha
lret
push
dec
sub
push
jb
mov
inc
fistps
and
and
xlat
add
cld
cmp
popa
es
sti
mov
xor
dec
adc
pop
mov
and
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
loopne
adc
adc
adc
cmp
cmp
ret
jp
cmp
inc
xor
or
inc
fisubl
xchg
inc
mov
ss
scas
jge
add
sbb
and
ret
popf
movsb
xchg
sbb
sbb
xor
push
in
xchg
sbbb
inc
jne
ret
rcl
cmc
pop
mov
mov
and
inc
xor
fistpll
dec
je
clc
mov
cmc
lods
rcrb
test
or
aaa
js
cld
or
dec
and
adc
adc
cmp
cmp
push
addb
adc
cmp
cmp
iret
int
mov
insl
cmc
pushf
mov
push
testb
jo
sub
adcb
adc
cmp
cmp
mov
and
jle
jecxz
test
lahf
pusha
sbb
mov
sub
rorb
adc
adc
cmp
cmp
mov
negl
adcb
adc
cmp
cmp
mov
clc
pop
xlat
js
cmp
clc
xor
addb
adc
cmp
cmp
dec
add
sub
xchg
and
addb
cmp
cmp
aad
sub
test
sbb
jg
rolb
adc
adc
cmp
cmp
mov
stos
imul
sbb
push
inc
addb
adc
cmp
cmp
dec
fsubrs
addb
cmp
cmp
in
xor
sbb
addr16
mov
pop
xchg
xchg
mov
das
in
ret
push
xchg
cmc
pop
xchg
jle
in
test
xchg
addb
adc
cmp
cmp
or
and
addb
cmp
cmp
mov
sub
push
adc
sbb
adc
adc
cmp
cmp
push
lret
xchg
mov
mov
fs
addb
adc
cmp
cmp
push
jns
addb
cmp
cmp
mov
js
out
adc
test
or
jge
xchg
xchg
fisttpll
lahf
push
loop
addb
adc
cmp
cmp
mov
inc
shlb
shll
sbb
push
or
push
outsl
push
dec
addb
adc
cmp
cmp
cmpsb
popf
sub
in
stos
addl
cmp
cmp
icebp
subb
cmc
scas
inc
jbe
cmpsb
aaa
idiv
jmp
in
or
xorb
xchg
jle
rorb
jne
aad
adc
addb
cmp
cmp
ret
push
fldenv
addb
cmp
cmp
mov
cwtl
std
daa
addb
adc
cmp
cmp
and
inc
xchg
pushf
adc
out
mov
js
jge
mov
incl
das
sub
aaa
out
addb
adc
cmp
cmp
mov
inc
scas
push
addb
adc
cmp
cmp
aad
mov
sarl
sub
mov
adc
adc
cmp
cmp
mov
jl
into
addl
cmp
cmp
xor
addb
cmp
cmp
cwtl
add
addb
cmp
cmp
out
ret
stc
xor
sub
hlt
sbb
aas
loopne
sti
sbb
dec
scas
jl
sub
notb
lahf
mov
cld
jbe
mov
stc
cmpsl
cmpsl
jp
pandn
das
adc
add
push
mov
rolb
sub
mov
ficomps
ret
mov
mov
sbb
xchg
mov
inc
mov
cmp
push
cmp
jo
sbb
and
xorl
xor
dec
popa
daa
dec
mov
insb
cmp
mov
gs
aas
pop
xor
cwtd
divb
pop
xor
aad
fnstcw
mov
push
jns
addb
adc
cmp
cmp
cltd
and
enter
and
loope
adc
arpl
inc
enter
hlt
inc
addb
adc
cmp
cmp
xor
lea
cmpl
xchg
add
xchg
sbb
fnstenv
ds
adc
adc
cmp
cmp
mov
ret
cmpsb
push
and
insl
movsl
movsb
hlt
dec
and
add
in
mov
clc
adc
lret
sbb
sbb
pop
js
ljmp
sub
and
xchg
adc
setbe
pop
mov
repnz
cmpsb
addb
adc
cmp
cmp
int
pop
cwtl
mov
cmp
push
fwait
ja
pop
push
addb
cmp
cmp
mov
sub
mov
jg
pop
add
in
xchg
addb
adc
cmp
cmp
and
xchg
push
sti
test
mull
addb
cmp
cmp
mov
push
xor
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jne
push
push
or
arpl
mov
jne
jp
fidivs
mov
pop
ja
in
icebp
jmp
stc
xor
in
fstps
adc
shlb
adc
adc
cmp
cmp
mov
adcb
addb
adc
cmp
cmp
push
adc
sbb
and
sbb
or
gs
or
adc
adc
cmp
cmp
das
sti
cmp
adc
adc
cmp
cmp
sbb
inc
xor
fsin
or
mov
addb
adc
cmp
cmp
cltd
adc
addb
cmp
cmp
mov
pop
ja
jl
fistl
iret
cmp
adc
adc
cmp
cmp
je
aad
mov
adcb
adc
cmp
cmp
mov
fisttpll
cli
shll
cmpsl
jge
addb
cmp
cmp
mov
inc
adc
dec
sahf
mov
mov
iret
nop
xchg
sub
dec
aaa
push
fisttpll
jns
addb
adc
cmp
cmp
leave
in
jmp
mov
aaa
ss
outsl
lods
sbb
stos
pop
shrb
int
icebp
or
inc
call
mov
fcompl
std
in
bound
adc
rolb
les
loop
pusha
xor
mov
addb
cmp
cmp
mov
inc
shrl
data16
and
adc
adc
cmp
cmp
outsl
out
jle
lahf
inc
sti
push
push
mov
adc
scas
cwtl
and
push
xor
cwtl
ficoms
gs
mov
jns
push
add
sub
adc
adc
cmp
cmp
mov
mov
sbb
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
icebp
sbb
je
sub
and
fidivrl
scas
cmpl
movsb
mov
jecxz
hlt
sub
lods
arpl
pop
sub
dec
add
movzbl
addb
cmp
cmp
mov
jae
add
push
pop
daa
lret
daa
push
and
add
mov
xchg
call
adc
adc
cmp
cmp
mov
jae
int
pop
stos
ret
push
addb
cmp
cmp
mov
mov
loop
stc
adc
or
ss
xor
fdivl
sub
dec
xor
dec
addb
adc
cmp
cmp
pop
lea
cltd
fwait
inc
scas
add
and
inc
jbe
aas
or
addb
adc
cmp
cmp
or
ss
es
outsl
dec
jno
sbb
pop
and
fstpl
mov
addb
adc
cmp
cmp
sbb
fbstp
aas
cltd
fwait
push
push
scas
dec
sub
xchg
sti
push
push
push
loope
jge
loopne
addb
adc
cmp
cmp
nopl
xor
or
sbb
jle
ljmp
jge
icebp
cmp
out
test
btc
addb
adc
cmp
cmp
add
adcb
adc
cmp
cmp
mov
outsl
dec
clc
bndstx
add
lds
imul
aas
dec
dec
fldl
adc
adc
cmp
cmp
sub
push
cmp
mov
lods
ret
xchg
mov
push
cmpsb
ret
js
push
push
movsb
mov
adc
mov
jb
fstl
fmuls
cmp
fsts
lret
addb
cmp
cmp
mov
sbb
addb
adc
cmp
cmp
sbb
add
daa
aam
icebp
push
or
add
adc
adc
cmp
cmp
mov
out
and
xchg
sahf
pop
sbb
cli
sahf
in
loope
call
std
mov
sub
call
addb
stc
test
adcb
adc
cmp
cmp
mov
jae
and
xchg
dec
jmp
ljmp
insb
sbb
addb
cmp
cmp
mov
adc
mov
xchg
jnp
or
lea
adc
adc
cmp
cmp
cmp
addb
adc
cmp
cmp
stos
pop
pop
dec
dec
lock
pop
das
inc
gs
scas
ljmp
addb
cmp
cmp
mov
dec
stc
les
push
fdivl
lret
test
out
inc
sbb
addb
adc
cmp
cmp
ret
cmpsb
adc
stc
mov
adc
stc
xchg
cmp
rcrl
add
inc
inc
jno
push
insl
cmpsb
loopne
insb
and
aad
outsl
cli
rcr
sbb
in
lcall
lahf
or
test
jle
or
jmp
aas
sbb
popa
jbe
aas
xchg
pop
mov
addb
cmp
cmp
mov
aam
test
lcall
imul
sub
std
pop
sub
or
mov
pop
adc
jge
testb
mov
test
jo
lea
ret
push
in
mov
into
out
imul
bound
pop
adc
js
xor
adc
adc
cmp
cmp
mov
sbb
addb
cmp
cmp
mov
sbb
addb
cmp
cmp
mov
lods
dec
cltd
dec
push
inc
or
xor
pushf
pushf
or
aas
imul
adc
adc
cmp
cmp
mov
xchg
dec
ficompl
pusha
inc
out
addb
adc
cmp
cmp
cmpsb
push
sahf
je
push
mov
jno
mov
sub
cmp
addb
adc
cmp
cmp
jb
dec
push
test
addb
adc
cmp
cmp
mov
sub
xchg
in
into
dec
mov
push
xchg
int3
xor
add
lods
mov
adcb
adc
cmp
cmp
mov
add
xchg
xchg
add
outsb
idivl
add
cmp
addb
cmp
cmp
loope
push
cmp
shll
cmp
sub
outsb
mov
adc
adc
cmp
cmp
mov
mov
aad
mov
addb
adc
cmp
cmp
ret
inc
sub
addb
adc
cmp
cmp
mov
je
cmp
mov
mov
adc
adc
cmp
cmp
mov
pop
cmpsb
popa
scas
add
adc
adc
cmp
cmp
add
adc
mov
add
pop
and
addb
cmp
cmp
mov
pop
add
mov
inc
mov
stos
sar
int
addb
cmp
cmp
mov
jbe
bound
adc
adc
cmp
cmp
ljmp
adcb
adc
cmp
cmp
mov
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
jmp
cmp
cmp
nop
jge
xor
mov
cmp
lcall
jns
cmp
sarl
cmpsl
adc
stc
insb
dec
xchg
hlt
popf
sbb
and
bnd
xchg
adc
xchg
loope
addb
adc
cmp
cmp
sbb
sub
cmpsl
add
out
ret
loope
sbb
push
mov
scas
daa
jl
mov
adc
adc
cmp
cmp
mov
imul
jg
jne
and
jle
rcrb
cmp
or
addb
cmp
cmp
mov
stos
jns
dec
arpl
dec
movsb
xchg
mov
jmp
and
jmp
push
in
cs
xchg
dec
in
xchg
pop
sub
pop
mov
adc
mov
addb
cmp
cmp
addb
adc
cmp
cmp
cwtl
xor
mulb
insl
mov
addb
adc
cmp
cmp
lods
and
sbb
xchg
push
rclb
dec
xor
ja
mov
addb
cmp
cmp
inc
lret
jnp
jl
das
shll
aam
pop
sahf
mov
hlt
loop
dec
xchg
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
leave
sub
sub
sbbb
jecxz
out
dec
cli
cmovae
sbbb
add
outsb
pop
mov
addb
cmp
cmp
mov
mov
stos
or
dec
dec
mov
fs
addb
adc
cmp
cmp
adc
add
cld
cmpsl
addb
adc
cmp
cmp
push
je
pop
shr
fildl
adc
addb
adc
cmp
cmp
addl
adc
adc
cmp
cmp
mov
nop
jle
test
adc
adc
cmp
cmp
test
pop
std
xor
bound
sahf
mov
fwait
ret
int3
mov
lret
mov
sub
stc
push
push
or
mov
dec
les
out
mov
popf
mov
mov
push
js
sbb
adc
adc
push
idivb
mov
and
adc
adc
cmp
cmp
aad
in
sbb
cltd
mov
sub
cmp
adcb
adc
cmp
cmp
mov
mov
dec
pop
leave
scas
or
xchg
sbb
addb
cmp
cmp
mov
mov
fs
push
loope
into
inc
js
mov
push
cmp
mov
movsb
addb
adc
cmp
cmp
mov
push
mov
out
xor
and
addb
cmp
cmp
mov
popf
ljmp
mov
or
lret
pop
jg
pop
pop
dec
jae
stos
imul
ljmp
or
dec
jl
xor
nop
shl
dec
negl
mov
inc
data16
icebp
out
addb
adc
adc
cmp
cmp
jge
sub
pop
outsl
in
xor
lods
rcrb
shll
ja
lret
dec
inc
xchg
push
jmp
push
out
fisubl
lahf
xor
push
sub
jne
in
daa
pushl
ds
or
cwtd
dec
lock
adc
ucomiss
addb
adc
cmp
cmp
mov
sub
test
sub
jne
pop
pop
std
mov
adc
adc
cmp
cmp
addb
adc
cmp
cmp
out
sub
jle
xor
sub
addb
adc
cmp
cmp
mov
cld
sbb
addb
adc
cmp
cmp
lahf
inc
jae
cli
pop
cmp
jle
dec
dec
rclb
mov
or
scas
pop
mov
das
loope
mov
inc
push
xor
jnp
sti
add
adc
data16
xchg
scas
cmp
ds
mov
scas
pop
push
mov
adcb
adc
cmp
cmp
mov
test
jle
jo
inc
fisttpll
hlt
ds
push
addb
adc
cmp
cmp
fsubrl
sbb
adc
adc
cmp
cmp
stos
adc
dec
ss
add
inc
jae
iret
repnz
xor
outsl
imul
mov
adc
bound
cmp
xor
fnstenv
sbb
pop
mov
cmp
gs
dec
ds
mov
addb
adc
cmp
cmp
cmp
stos
push
sbb
push
pushf
mov
jecxz
enter
mov
sbb
nop
fldt
jle
cmp
and
dec
adc
or
push
stos
addb
adc
cmp
cmp
xor
push
repnz
addb
adc
cmp
cmp
adc
adc
adc
cmp
cmp
gs
lds
aad
xor
dec
imul
cmpsb
addb
adc
cmp
cmp
inc
and
cmpsl
das
das
push
aas
or
lods
sti
stos
xchg
test
pop
in
mov
push
test
mov
addb
adc
cmp
cmp
jge
aad
cmp
cmp
fisubrs
fidivrs
fwait
cmp
jns
fadd
ffreep
mov
adc
mov
mov
sahf
leave
aam
pop
dec
cs
push
test
fs
fisttpl
mov
int
shrb
sbb
add
push
addr16
filds
dec
fmuls
adcb
adc
cmp
cmp
mov
dec
addb
adc
cmp
cmp
inc
xchg
sbb
sahf
pop
or
mov
or
add
pusha
sub
ret
sbb
nop
push
pop
adc
lret
lret
and
adc
adc
cmp
cmp
std
push
mov
ss
lcall
lahf
arpl
repz
scas
jecxz
cmpsb
scas
addb
adc
cmp
cmp
sub
popa
js
ds
shl
das
fwait
cwtl
shrb
adc
adc
cmp
cmp
mov
mov
addb
cmp
cmp
mov
xor
lcall
pop
mov
dec
jbe
push
mov
lret
ret
addb
adc
cmp
cmp
stc
sbb
addb
cmp
cmp
mov
and
es
xchg
mov
push
pop
aas
mov
xchg
imul
nop
jmp
test
adc
adc
cmp
cmp
mov
arpl
push
adc
xchg
dec
outsb
pop
jbe
or
movb
adc
cmp
cmp
mov
shlb
addb
adc
cmp
cmp
cmpsb
mov
clc
mov
xor
test
scas
iret
mov
addb
cmp
cmp
mov
fstps
addb
cmp
cmp
push
mov
push
icebp
xor
sub
addb
cmp
cmp
mov
jge
roll
adc
cmp
cmp
mov
xor
lret
and
sub
xchg
int3
adc
adc
adc
cmp
cmp
and
xchg
inc
mov
cmp
inc
fistps
icebp
ret
mov
mov
ret
mov
mov
orb
sti
nop
setl
xor
lahf
sbb
xchg
dec
icebp
mov
jl
xor
push
out
fstpl
lock
xor
sbb
lahf
push
int3
adc
mov
cmp
jno
push
lret
push
lahf
rcrb
xchg
pop
mov
adc
adc
cmp
cmp
mov
and
mov
pop
or
rclb
adcb
adc
cmp
cmp
mov
iret
xor
pop
lret
sub
mov
push
iret
fwait
neg
push
cmp
and
and
sub
sub
pop
xor
xchg
addb
adc
cmp
cmp
mov
addb
cmp
cmp
sbb
incl
mov
ss
out
mov
test
cmp
mov
adc
mov
push
inc
addr16
pop
jno
popa
ss
push
loop
aam
iret
add
mov
pop
test
adcb
adc
cmp
cmp
mov
push
mov
or
outsb
fldcw
inc
fwait
mulb
inc
negb
imul
addb
cmp
cmp
mov
jae
addb
cmp
cmp
mov
push
add
add
dec
mov
in
addb
cmp
cmp
mov
imul
mov
xchg
sbb
xor
addb
adc
cmp
cmp
loope
scas
push
push
shl
shr
jge
rcll
jbe
push
cmc
addb
adc
cmp
cmp
xlat
mov
fldenv
cmpb
sub
call
popa
addr16
and
subl
mov
mov
adc
adc
cmp
cmp
mov
cmp
sub
into
das
std
xchg
orl
jl
andb
loopne
loop
inc
lock
lcall
test
lea
inc
mov
aas
roll
dec
mov
stc
sub
call
add
loop
aam
addb
cmp
cmp
mov
push
pop
mov
not
imul
pushf
mov
adc
adc
cmp
cmp
mov
or
mov
cld
addl
addb
adc
cmp
cmp
sahf
mov
in
lret
push
int3
fwait
jmp
cmp
test
jp
push
addb
adc
cmp
cmp
fstl
mov
jb
addb
adc
cmp
cmp
dec
call
pop
fcmove
mov
xlat
jnp
lret
sbb
adc
adc
cmp
cmp
lock
sub
mov
sub
scas
lret
arpl
fs
test
out
cmp
mov
jnp
cltd
push
subl
xor
xchg
mov
inc
xor
inc
add
enter
in
add
or
sbb
fcoml
ss
jnp
push
addb
adc
cmp
cmp
cltd
jo
call
mov
addb
adc
cmp
cmp
xchg
adc
pop
mov
loope
addb
cmp
cmp
mov
jnp
sti
push
push
dec
aam
aam
cmp
das
frstor
xlat
out
fdivs
cli
sub
mov
jge
push
mov
test
jnp
xor
mov
test
addb
cmp
cmp
mov
jle
xchg
sti
repz
ss
imul
adc
sbb
push
adc
nop
sbb
jge
mov
mov
push
cmp
mov
addr16
cmc
ss
adc
addb
cmp
cmp
mov
mov
xchg
xchg
sar
inc
adc
add
addb
adc
cmp
cmp
incl
rolb
inc
in
lods
js
or
push
mov
mov
cmp
addb
cmp
cmp
addb
adc
cmp
cmp
out
and
inc
mov
sbb
mov
mov
mov
cmp
jl
fdivl
pushl
ss
push
cli
dec
jns
or
int
pop
fmuls
dec
addb
adc
cmp
cmp
adc
cmpsb
mov
or
jmp
aad
ss
sbb
and
ds
xchg
mov
adc
in
inc
call
mov
cmpsb
sbb
mov
dec
cli
ds
scas
mov
cld
sbb
fsts
lfs
gs
lods
jl
mov
push
add
cmp
loope
pop
dec
popf
bound
sub
repnz
mov
push
addb
adc
cmp
cmp
sbb
sti
fwait
shr
in
add
test
adcb
adc
cmp
cmp
mov
ficoms
sbb
mov
push
sub
outsl
in
jnp
and
clc
lret
pusha
push
addb
adc
cmp
cmp
insb
popa
lret
shll
mov
mov
outsl
aaa
imul
das
push
adc
arpl
mov
inc
movl
cmp
cmp
dec
popa
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
mov
push
addb
adc
cmp
cmp
mov
popa
ss
cmp
addb
cmp
cmp
fwait
popf
jl
cmpsl
sub
xor
inc
sbb
fwait
pop
out
int
incl
adc
mov
adc
adc
cmp
cmp
mov
cmp
inc
jns
mov
jp
pop
fsubs
sbb
inc
addb
adc
cmp
cmp
pop
data16
mov
cmpsb
jmp
or
addb
adc
cmp
cmp
shrb
or
addb
cmp
cmp
adc
mov
fadds
adc
adc
cmp
cmp
xor
andb
movsb
and
addb
cmp
cmp
mov
add
int
addb
cmp
cmp
mov
or
addb
cmp
cmp
ret
sub
das
mov
addb
cmp
cmp
addb
adc
cmp
cmp
mov
mov
lods
sbb
shl
mov
stos
test
push
pop
add
xchg
xlat
cld
out
int3
std
xchg
mov
or
in
out
repnz
inc
scas
or
lcall
mov
push
cld
ret
push
mov
stc
sub
ret
addb
adc
cmp
cmp
cmp
insl
lock
pushf
mov
addb
adc
cmp
cmp
fs
mov
in
mov
mov
cmp
clc
fnstsw
adc
adc
cmp
cmp
mov
imul
add
addb
cmp
cmp
add
xor
movl
fmull
and
outsl
subb
mov
lods
mov
cld
cmpb
inc
test
and
out
rcrl
jb
icebp
mov
adc
adc
cmp
cmp
mov
xor
adc
adc
cmp
cmp
mov
mul
mov
lret
dec
shrl
addb
adc
cmp
cmp
orb
push
shl
or
push
and
mov
mov
addb
cmp
cmp
fstl
sbbb
cs
aam
push
insl
dec
push
and
push
shl
pop
fs
push
jne
xchg
xchg
xor
in
jbe
lea
sub
das
inc
mov
ret
or
xchg
or
addb
cmp
cmp
mov
sub
addb
adc
cmp
cmp
mov
jecxz
mov
addb
cmp
cmp
lret
sub
into
addb
adc
cmp
cmp
lahf
leave
pop
cmp
insl
arpl
rolb
inc
add
lds
pop
add
out
pop
or
mov
in
lret
jg
sub
cmc
bts
fdivp
sub
xor
addb
cmp
cmp
mov
cltd
call
fwait
repnz
and
sub
fwait
add
add
stc
xor
cmp
adc
mov
repz
dec
pop
into
jg
jl
test
addb
adc
cmp
cmp
mov
or
jge
test
or
mov
test
dec
int3
popf
add
cmpsl
scas
andb
int3
inc
fucomi
jle
sub
lods
fstl
push
in
and
enter
addb
cmp
cmp
aam
pop
leave
in
aaa
mov
stos
sub
insl
out
adc
adc
adc
cmp
cmp
test
push
push
push
cmp
fcompl
sahf
and
xor
addb
adc
cmp
cmp
outsl
xor
add
sub
adc
adc
cmp
cmp
addb
adc
cmp
cmp
shll
mov
mov
add
dec
js
stc
in
pop
lret
dec
add
addb
adc
cmp
cmp
jp
testl
in
cmp
aas
push
lcall
shrl
xchg
cmc
repz
addb
adc
cmp
cmp
std
or
les
sbb
ret
iret
inc
out
cmpsb
jl
mov
or
scas
movsb
repnz
adc
cmp
cmp
jae
pop
dec
roll
adc
cmp
cmp
mov
icebp
rcll
addb
adc
cmp
cmp
les
push
sbb
mov
dec
pop
lret
mov
in
mov
outsb
add
addb
adc
cmp
cmp
pop
dec
mov
sub
jo
push
push
cmp
test
and
jge
mov
test
and
addb
cmp
cmp
mov
ret
pop
das
mov
xor
sub
cmp
data16
dec
ljmp
addb
cmp
cmp
mov
sub
dec
addb
adc
cmp
cmp
push
cmp
lret
insl
int
mov
jo
addb
adc
cmp
cmp
pop
inc
add
addb
adc
cmp
cmp
dec
xchg
mov
ljmp
jbe
addb
cmp
cmp
mov
test
mov
cltd
mov
addb
adc
cmp
cmp
sub
cli
fisubrs
mov
sbb
stos
imul
inc
mov
dec
mov
pop
jl
lahf
and
aam
mov
adc
mov
jne
aaa
jg
inc
push
mov
inc
lahf
pop
faddl
adc
loop
push
out
or
cwtl
lds
push
addb
cmp
cmp
dec
pop
sbb
push
pop
xchg
pop
add
addb
adc
cmp
cmp
jge
jmp
addb
cmp
cmp
mov
mov
and
pop
mov
jne
jno
movsl
add
xor
pop
cmpsl
jo
adc
xor
addb
cmp
cmp
mov
mov
add
jbe
push
fstl
jae
int
sbb
mov
inc
sub
fldl
pop
aad
insb
mov
dec
movsb
addb
adc
cmp
cmp
int
mov
jmp
xlat
loope
or
jecxz
sbb
repnz
pop
ret
jl
xor
lea
adc
adc
cmp
cmp
idivl
inc
dec
push
adcb
adc
cmp
cmp
mov
adc
repz
or
rcr
imul
outsl
inc
add
sbb
inc
jae
cltd
mov
addb
adc
cmp
cmp
push
jmp
cmp
cmp
mov
adc
adc
cmp
cmp
mov
add
notb
mov
jnp
mov
test
addb
cmp
cmp
mov
ret
and
adc
pop
addb
adc
cmp
cmp
and
xchg
jp
repnz
jbe
pop
cli
vfrczss
adc
cmp
cmp
addb
adc
cmp
cmp
mov
hlt
mov
inc
fwait
add
adc
adc
cmp
cmp
cld
hlt
dec
mov
out
addb
adc
cmp
cmp
push
inc
adc
mov
mov
imul
ret
adcl
adc
adc
cmp
cmp
mov
dec
addb
adc
cmp
cmp
cmp
cmc
test
adc
adc
cmp
cmp
push
cmpb
jnp
pop
fcmove
sarl
push
dec
xor
jp
sub
cltd
cmpsl
addb
adc
cmp
cmp
xchg
test
js
cwtl
aam
imul
addb
cmp
cmp
mov
push
mov
ret
dec
mov
stos
inc
sbb
rolb
addb
adc
cmp
cmp
sarb
lret
sbb
dec
scas
sti
xor
adcb
adc
cmp
cmp
mov
and
add
and
addb
cmp
cmp
mov
fwait
push
mov
pop
xor
ret
push
mov
aam
xchg
dec
jbe
sub
addb
adc
cmp
cmp
jb
sahf
mov
addb
adc
cmp
cmp
mull
cmp
in
dec
fmulp
sbb
test
stc
aas
test
mov
imul
xchg
lods
xchg
adcb
hlt
push
jbe
xor
adc
adc
cmp
cmp
popa
fbstp
and
adc
adc
cmp
cmp
or
loope
sbbb
adc
adc
cmp
cmp
mov
xor
pop
adc
aam
sub
jle
push
mov
addb
cmp
cmp
mov
shlb
inc
cmp
or
test
ja
cmc
mov
addb
adc
cmp
cmp
xchg
add
adc
adc
cmp
cmp
push
out
out
dec
iret
push
dec
and
adc
adc
cmp
cmp
mov
scas
into
adc
jae
mov
in
in
movb
aas
jb
pop
cmp
sub
inc
pop
push
cltd
sub
arpl
mov
push
xchg
outsl
mov
sahf
ds
pop
push
repnz
jne
lahf
adc
jb
cli
mov
addb
cmp
cmp
xor
rclb
mov
lods
in
call
cmpb
dec
addb
adc
cmp
cmp
popf
xor
and
push
pusha
es
mov
jo
idivl
das
jp
and
pop
aam
clc
addb
adc
cmp
cmp
fs
js
pop
fadds
add
adc
adc
cmp
cmp
pop
int
mov
inc
loop
es
repz
cmp
in
mov
inc
je
test
dec
and
push
fldl
push
mov
mov
adc
loopne
jp
pop
stc
push
jg
cmp
dec
addb
adc
cmp
cmp
lods
mov
fs
addb
cmp
cmp
mov
fildl
adc
adc
cmp
cmp
add
addb
adc
cmp
cmp
fs
scas
pop
adc
and
xchg
fdivrs
sub
pop
rcrb
push
std
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
repnz
xor
push
cmp
cld
mov
in
iret
mov
sub
mov
loop
addb
adc
cmp
cmp
int
xor
jl
iret
addl
mov
adc
adc
cmp
cmp
push
adc
aad
enter
fldl
in
loopne
push
outsl
add
loopne
addb
adc
cmp
cmp
mov
addb
cmp
cmp
push
jecxz
movsb
sub
and
adc
add
mov
loopne
cmp
jge
ljmp
mov
mov
hlt
pop
mov
outsb
insl
sub
sub
sti
cmc
loope
sbb
mulb
mov
rorb
sahf
add
addb
cmp
cmp
mov
push
push
mov
jle
xor
mov
sub
int
sgdtl
test
add
inc
jb
cmp
loope
addb
cmp
cmp
mov
sarb
cmp
lret
inc
scas
fs
sub
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
cmp
add
dec
fsubr
add
dec
notb
addb
adc
cmp
cmp
mov
out
add
out
add
aaa
add
xor
sub
movsb
test
int
cmpsl
jl
addb
adc
cmp
cmp
and
adc
stos
push
pop
push
mov
bound
mov
mov
push
loop
xchg
push
mov
push
pop
fwait
popf
scas
adc
lds
rcrl
mov
jecxz
mov
lods
out
xlat
mov
in
lods
sbb
adc
adc
cmp
cmp
mov
sbbb
xchg
mov
sahf
outsl
addb
adc
cmp
cmp
movsl
mov
xchg
pop
hlt
jl
out
push
xor
adc
adc
cmp
cmp
mov
pop
or
dec
dec
addb
adc
cmp
cmp
push
in
or
shl
cli
ds
lods
int
lds
pinsrw
add
inc
cli
cli
sub
leave
push
sub
push
out
adc
mov
std
add
xor
cmpsb
fldcw
jle
sbb
sub
addb
cmp
cmp
mov
push
mov
test
in
push
stos
jmp
dec
or
mov
lods
xchg
shl
clc
lahf
add
pusha
movsl
lea
adc
pop
push
or
ret
mov
icebp
shl
pop
ret
xor
pop
scas
push
shr
pop
cmp
addb
cmp
cmp
mov
dec
xchg
test
imulb
stos
or
int3
mov
sub
jne
mov
xchg
pop
repnz
addb
cmp
cmp
mov
push
mov
cmp
mov
mov
hlt
sbb
xor
jno
or
adc
adc
cmp
cmp
bound
dec
cmpsb
inc
aas
and
pop
dec
cmp
mov
or
addb
cmp
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
in
sub
cmp
addb
adc
cmp
cmp
mov
sub
adcb
adc
cmp
cmp
mov
adc
adcb
adc
cmp
cmp
mov
dec
jecxz
addb
cmp
cmp
mov
jno
inc
aam
xor
or
mov
jle
sbb
mov
mov
gs
addb
cmp
cmp
mov
das
xor
jne
nop
sbbb
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
ss
into
addb
adc
cmp
cmp
jae
or
out
mov
imul
outsb
inc
mov
adc
pop
jo
jbe
adc
enter
adcb
adc
cmp
cmp
mov
jmp
jle
sbb
xchg
roll
adc
adc
cmp
cmp
mov
or
inc
inc
or
pusha
push
mov
fisttpll
xchg
mov
sar
std
mov
shll
test
int3
inc
stos
jno
mov
popa
addb
adc
cmp
cmp
and
aas
fldl
adc
adc
cmp
cmp
bound
addb
cmp
cmp
mov
xchg
push
mov
repz
mov
clc
push
fisttps
test
mov
dec
dec
fcmovbe
popa
into
inc
push
in
xor
sub
out
cmp
cwtl
fnsave
xlat
push
out
addb
adc
cmp
cmp
jbe
mov
push
xchg
jp
push
outsb
push
pop
addb
adc
cmp
cmp
ss
outsl
push
std
das
inc
dec
out
push
mov
lret
sub
adc
adc
cmp
cmp
mov
jge
xor
adc
adc
adc
cmp
cmp
ja
xchg
jp
addb
cmp
cmp
mov
repz
addb
cmp
cmp
mov
shrb
addb
adc
cmp
cmp
dec
xor
pop
adc
sbb
push
cwtl
mov
xor
adc
adc
cmp
cmp
mov
or
inc
andb
or
inc
push
aad
imul
data16
adc
cmp
cmp
add
mov
dec
aas
cmpsl
pusha
addb
adc
cmp
cmp
sahf
add
insb
addb
adc
cmp
cmp
adc
cmp
addb
adc
cmp
cmp
rolb
scas
shll
and
int3
or
mov
jo
jmp
stos
sarl
lock
adc
cmp
cmp
cltd
rorb
and
stos
jne
aaa
data16
adc
cmp
cmp
stos
mov
jnp
aam
mov
mov
mov
adcb
adc
cmp
cmp
mov
xchg
jbe
add
aad
addb
cmp
cmp
mov
cli
shll
or
faddl
loopne
mull
dec
pop
xchg
lods
cld
aam
lds
in
or
ja
or
addb
adc
cmp
cmp
sub
ljmp
xchg
orb
adc
adc
cmp
cmp
cltd
das
mov
adcb
adc
cmp
cmp
mov
outsb
clc
addb
adc
cmp
cmp
adc
jl
bswap
or
or
addb
cmp
cmp
mov
inc
mov
imul
fnstcw
pop
mov
adcb
adc
cmp
cmp
mov
jbe
movsb
pop
lret
pop
adc
and
jae
rcll
mov
roll
ret
xchg
addb
adc
cmp
cmp
dec
push
sti
pop
inc
or
and
push
das
dec
jno
mov
jbe
mov
dec
out
shl
fsubrs
bound
ljmp
mov
pop
lret
pop
popa
inc
js
pop
ret
shrb
test
adc
mov
addb
cmp
cmp
mov
mov
add
hlt
jge
jo
jg
filds
adc
adc
cmp
cmp
sahf
jmp
dec
or
divl
icebp
mov
gs
ja
xchg
jne
sbb
xlat
xor
mov
cmp
out
cli
mov
imul
fwait
sahf
or
sbb
jns
dec
xchg
xchg
inc
or
mov
ret
ficomps
call
adc
adc
cmp
cmp
mov
sarb
mov
mov
sub
in
lods
test
pushf
push
inc
outsl
ficoms
sub
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
cmp
mov
aas
sbb
adc
mov
cld
adc
adc
adc
cmp
cmp
mov
jae
or
addb
adc
cmp
cmp
clc
cmpb
dec
mov
addr16
bt
jecxz
outsb
mov
addb
adc
cmp
cmp
rcrl
cmpsb
insb
insl
int3
aam
xchg
push
in
arpl
dec
fdivl
das
sbb
cld
mov
adc
adc
cmp
cmp
cmp
addb
adc
cmp
cmp
lahf
mov
push
mov
cmp
ds
bound
addb
cmp
cmp
mov
xchg
in
pop
jnp
xor
movsb
sbb
test
js
jne
sub
in
addb
cmp
cmp
mov
addb
adc
cmp
cmp
mov
jecxz
push
pop
push
xchg
mov
push
xchg
xor
addb
adc
cmp
cmp
mov
mov
sbb
and
addb
cmp
cmp
dec
xor
inc
cli
das
addb
adc
cmp
cmp
iret
addb
adc
cmp
cmp
sbb
jp
movl
decb
mov
push
adc
mov
cwtl
outsb
xchg
xor
addb
adc
cmp
cmp
pusha
and
addb
adc
cmp
cmp
imul
jb
xchg
cs
xchg
sub
ds
fisubrl
addb
adc
cmp
cmp
nop
add
out
sbb
add
dec
mov
mov
mov
pop
mov
js
int3
int3
jbe
dec
sbb
jae
cmp
adc
adc
cmp
cmp
dec
ret
mov
pushf
xchg
dec
jmp
inc
ret
mov
sub
lds
fnstcw
mov
xor
stos
dec
cmpsl
rep
out
jo
inc
pop
and
ja
loop
add
xchg
add
push
jle
addb
adc
cmp
cmp
sub
addb
cmp
cmp
mov
enter
iret
jg
push
in
addb
adc
cmp
cmp
adc
mov
sub
add
inc
stc
in
jno
push
dec
mov
adcb
adc
cmp
cmp
mov
xchg
ss
xchg
addb
adc
cmp
cmp
repz
addb
cmp
cmp
mov
xchg
sbb
ret
mov
popa
xchg
cmp
cwtl
cmp
pop
sbb
pop
sub
push
cld
sbb
cltd
and
icebp
into
cltd
mov
jle
outsb
inc
insl
das
popf
fsubrl
adc
dec
movsb
xorb
or
add
aas
lea
or
jg
stos
and
addb
adc
cmp
cmp
addps
adc
adc
adc
cmp
cmp
movsl
jno
inc
shrl
push
push
dec
daa
ja
das
sbb
cld
and
addb
adc
cmp
cmp
pop
or
notb
jmp
mov
push
sub
and
enter
outsl
dec
cmp
mov
addb
cmp
cmp
mov
stc
push
cmp
in
aad
sti
icebp
mov
cmp
sub
sub
mov
push
in
data16
addb
cmp
cmp
mov
inc
fcoml
mov
adc
adc
cmp
cmp
mov
outsb
ljmp
adc
adc
cmp
cmp
movb
adc
cmp
cmp
mov
sbb
adc
cmp
fldl
cmpsb
mov
arpl
insl
mov
lldt
jae
push
jge,pt
pushf
fscale
jb
and
aad
bound
dec
shl
std
loop
or
and
and
fildll
addb
adc
cmp
cmp
cld
addb
adc
cmp
cmp
sbb
inc
sbb
addb
cmp
cmp
aad
adc
adc
push
nop
test
dec
xor
mov
addb
cmp
cmp
mov
xor
fs
pop
jmp
jg
aam
jae
jo
daa
or
enter
mov
add
dec
fwait
addb
adc
cmp
cmp
aam
addb
cmp
cmp
mov
call
or
jp
addb
adc
cmp
cmp
scas
out
ret
pusha
xor
in
xor
pop
stos
xor
arpl
sti
shll
push
lods
inc
xor
xchg
pop
inc
dec
aaa
dec
pusha
cmpsb
int
lea
fwait
orl
insb
les
leave
scas
add
fsubp
mov
and
push
xor
lods
adcb
fnstcw
stos
pop
inc
mov
mov
flds
or
gs
cvttps2pi
mov
inc
sbb
cmp
mov
enter
mov
inc
in
aad
push
cld
addb
adc
cmp
cmp
jns
and
shll
adc
adc
adc
cmp
cmp
jo
xchg
dec
bswap
fdivrl
xchg
push
sahf
int3
cmp
adc
adc
cmp
cmp
mov
mov
sub
cmp
adc
addb
adc
cmp
cmp
or
and
dec
insb
js
push
jo
mov
xchg
or
cltd
xchg
cmp
adc
mov
add
in
jmp
fimull
lods
mov
test
addb
adc
cmp
cmp
xchg
sub
test
jg
repnz
imul
movsb
mov
jnp
push
sbb
adc
adc
cmp
cmp
mov
xchg
emms
stos
push
jecxz
icebp
addb
adc
cmp
cmp
jp
aad
and
sbb
mov
or
cmp
cmpsb
dec
imul
je
xchg
addb
adc
cmp
cmp
xchg
fildl
xchg
cld
lcall
jmp
in
push
xchg
mov
xchg
scas
mov
test
shll
jmp
or
fldcw
push
jo
cmp
inc
addb
adc
cmp
cmp
pop
xchg
mov
push
cmp
popf
jne
in
jb
pushf
into
leave
dec
xchg
pop
out
scas
inc
fsub
add
mov
xor
addb
cmp
cmp
mov
jge
ret
and
inc
adc
repz
adc
adc
cmp
cmp
mov
pop
notl
call
push
and
mov
add
sbb
popf
into
or
repz
lcall
sbb
ja
mov
pop
mov
adcb
adc
cmp
cmp
mov
push
sub
add
cmpsb
scas
int
sub
icebp
adc
loope
lods
fisubrs
ret
rol
ficoml
aam
rorl
in
addr16
sbb
jmp
mov
cmp
add
pop
jmp
cmc
dec
int3
movsb
or
or
cltd
fs
cld
out
xlat
push
iret
push
xor
push
add
mov
mov
daa
dec
sar
xchg
dec
mov
jle
jle
loope
cmp
pushw
div
addb
adc
cmp
cmp
push
inc
out
fadds
adc
adc
cmp
cmp
push
in
add
pop
fdivrl
adc
adc
cmp
cmp
mov
ficoms
mov
mov
xor
and
test
fstl
adc
adc
out
rol
addb
cmp
cmp
mov
push
insb
loop
or
rolb
cmp
out
mov
pushf
mull
fistpll
je
out
addb
adc
cmp
cmp
dec
or
dec
ljmp
adc
nop
scas
or
mov
xchg
cli
cld
daa
or
hlt
ljmp
test
xchg
loop
fisttps
addb
cmp
cmp
std
mov
jg
jmp
xor
imul
adc
cmp
cmp
mov
test
sbb
addb
adc
cmp
cmp
mov
jmp
in
loopne
int3
fildl
add
cltd
test
addb
cmp
cmp
mov
add
lods
les
leave
xchg
jbe
inc
mov
and
pop
data16
movsl
dec
dec
sahf
test
jb
sub
inc
rclb
cld
add
inc
xchg
mov
adc
adc
cmp
cmp
mov
or
jo
and
push
outsb
fmul
outsb
adc
addb
adc
cmp
cmp
adc
adc
adc
cmp
cmp
inc
jbe
cmp
roll
lds
movsb
data16
add
addr16
cmpsl
lock
adc
cmp
cmp
add
das
or
adc
inc
sub
lods
scas
mov
add
sti
mov
jg
cmp
cmpsl
xchg
dec
xor
push
repnz
inc
scas
std
addb
adc
cmp
cmp
fistpll
pop
jo
lahf
jp
cmp
icebp
gs
ret
jmp
ja
imul
adc
adc
cmp
cmp
mov
out
int3
sbb
push
insb
stos
and
jno
dec
ds
jno
fdivrl
and
push
adc
cli
xor
cli
fbstp
cmp
mov
addb
cmp
cmp
push
and
adcb
adc
cmp
cmp
mov
icebp
mov
push
jbe
pop
addl
das
and
xorb
sub
sbb
xchg
fnstsw
addb
cmp
cmp
mov
or
jmp
inc
addb
adc
cmp
cmp
out
imul
xchg
scas
push
es
movl
in
repnz
popa
hlt
mov
popf
inc
sbb
movsb
fsub
addb
adc
cmp
cmp
movsl
inc
push
or
int3
or
pop
sbb
andb
rorl
movsb
pop
call
xor
xchg
out
cmpsl
dec
dec
addb
adc
cmp
cmp
outsb
in
lods
mov
xchg
lods
sub
and
adc
and
mov
test
addb
adc
cmp
cmp
xchg
sub
pop
add
add
jg
push
xchg
fs
xchg
out
faddl
movsl
test
pop
mov
popa
jg
push
inc
inc
pop
xchg
int3
lret
mov
mov
int3
cli
push
cmpsl
cmp
addb
adc
cmp
cmp
andl
mov
addb
cmp
cmp
mov
loope
mov
call
xor
lret
fs
adc
mov
xorb
sub
lahf
data16
inc
pushf
jg
sbb
xchg
jg
les
movsb
mov
adc
adc
cmp
cmp
mov
mov
sbbb
addb
cmp
cmp
mov
cmp
add
dec
scas
insl
jmp
cmp
sub
addb
cmp
cmp
mov
mov
in
es
imul
mov
push
add
pop
jp
mov
jno
sub
dec
mov
test
cli
push
jno
jmp
lods
push
mov
addb
cmp
cmp
imul
popa
addr16
addb
adc
cmp
cmp
rclb
xor
pop
in
lods
push
adc
jle
or
addb
adc
cmp
cmp
sub
frstor
addb
cmp
cmp
jnp
and
jmp
pusha
inc
push
jno
and
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
dec
sarl
dec
loope
filds
gs
sub
inc
jg
out
daa
and
aaa
pop
nop
faddp
mov
jmp
or
fwait
dec
ss
scas
sub
outsb
in
mov
addb
cmp
cmp
sbb
mov
xchg
pop
pop
xchg
jno
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
scas
push
xor
xchg
or
cmp
iret
cmpsb
das
mov
addb
adc
cmp
cmp
cmpsl
inc
jp
addb
cmp
cmp
mov
add
cmpsb
sub
xchg
cld
mov
test
adc
adc
cmp
cmp
mov
enter
addb
adc
cmp
cmp
test
pop
repnz
sti
test
add
cltd
mov
adc
xor
out
pop
repz
mov
data16
adc
leave
push
int3
fcmovnu
add
das
push
stos
stos
pop
addb
adc
cmp
cmp
int3
ret
xor
addb
cmp
cmp
mov
push
mov
add
and
imul
fcoml
int
insl
dec
push
pop
and
adcb
adc
cmp
cmp
mov
sahf
stc
retw
mov
repnz
and
data16
add
ret
cld
hlt
mov
outsb
adc
es
scas
int3
jle
inc
addr16
out
dec
push
test
jae
addb
cmp
cmp
mov
dec
xchg
call
xor
imul
adcb
adc
cmp
cmp
mov
pushf
movsl
neg
mov
addb
adc
cmp
cmp
rol
dec
lods
addb
adc
cmp
cmp
cmp
adc
adc
cmp
cmp
mov
sub
mov
dec
les
outsl
pop
mov
aas
lahf
sti
sbb
fdivrs
stc
adc
gs
roll
adc
cmp
cmp
mov
pop
dec
dec
mov
push
adc
adc
cmp
cmp
mov
pmulhuw
aam
jno
mov
jg
movsb
jl
cmc
add
and
and
lcall
adcb
adc
cmp
cmp
mov
mov
std
pusha
jmp
sahf
leave
fldl
xor
add
add
in
or
es
cli
push
sbb
push
or
addb
cmp
cmp
pop
addb
adc
cmp
cmp
in
aad
push
push
mov
shll
outsl
ljmp
fadds
int
jmp
pop
add
push
dec
xchg
push
mov
or
addb
cmp
cmp
jo
test
inc
mov
mov
sarb
dec
cltd
push
or
shlb
addb
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
pop
jns
addb
adc
cmp
cmp
mov
push
lret
xor
jg
fs
sbb
cmp
lret
mov
shl
addb
adc
cmp
cmp
or
dec
jb
mov
lods
push
pusha
mov
leave
aaa
add
mov
jnp
test
sub
sub
mov
ret
sbb
lret
sbb
es
into
nop
nop
enter
xor
adc
adc
cmp
cmp
sbb
ds
push
bound
mov
ret
mov
adc
adc
cmp
cmp
mov
sti
cli
inc
stos
enter
and
loop
icebp
shrb
out
xchg
push
aaa
test
mov
enter
dec
sub
inc
shld
dec
out
loopne
pushf
repz
add
adc
adc
cmp
cmp
xor
addb
cmp
cmp
or
adc
jnp
stc
push
addb
adc
cmp
cmp
push
adc
addb
cmp
cmp
mov
fcmovb
lods
test
faddp
pop
cmpsl
jmp
sub
lds
or
xor
pop
push
jecxz
movsl
movsb
movsb
imull
arpl
addb
adc
cmp
cmp
popa
pop
movsb
mov
jns
cmpsl
pop
sub
push
movsb
sub
enter
mov
lock
dec
sbb
popf
addr16
sbbb
push
inc
sti
push
xchg
into
sahf
and
testl
cmp
cmp
lods
pop
sti
addb
adc
cmp
cmp
addr16
or
jb
adc
or
sub
arpl
popf
adc
push
adc
adc
adc
cmp
cmp
push
lock
addb
cmp
cmp
mov
mov
inc
popa
shl
adc
inc
lcall
fisubs
jno
lods
shrb
addb
adc
cmp
cmp
imul
mov
inc
loope
mov
sbb
repnz
dec
fldl
adc
adc
cmp
cmp
push
sub
sbb
movsb
mov
adc
adc
cmp
cmp
bound
xchg
push
mov
cmp
fcoms
xchg
sub
xor
addb
adc
cmp
cmp
cmp
mov
and
js
addb
cmp
cmp
mov
negl
or
fldl
dec
loope
stc
stos
lret
dec
in
xchg
addr16
mov
lret
aas
ljmp
repz
sbb
ret
mov
push
mov
pop
dec
sbb
push
int3
test
loopne
addb
adc
cmp
cmp
add
cld
roll
adc
cmp
cmp
mov
mov
movsb
movsb
leave
fldcw
mov
push
nop
cmp
adcb
adc
cmp
cmp
mov
cmp
inc
aaa
imull
adc
cmpsl
add
xlat
aad
xor
push
addb
adc
cmp
cmp
cmc
popf
dec
call
push
inc
sub
xchg
mov
lahf
iret
mov
add
jp
xchg
addb
adc
cmp
cmp
mov
inc
punpcklwd
dec
sub
ffreep
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jl
pusha
mov
jmp
bound
mov
shr
test
push
mov
movl
cmp
cmp
mov
ret
xor
xor
dec
dec
adc
jp
stos
mov
push
mov
addb
adc
cmp
cmp
daa
dec
xor
addb
cmp
cmp
mov
insl
adc
addb
adc
cmp
cmp
in
in
addb
adc
cmp
cmp
repnz
adc
cmp
cmp
mov
iret
in
addb
adc
cmp
cmp
fldenv
adc
ret
in
dec
xor
cmp
mov
add
adc
adc
cmp
cmp
pushl
and
mov
addb
cmp
cmp
mov
les
push
and
pop
mov
insb
into
push
inc
mov
mov
push
pop
push
pushf
or
iret
mov
mov
cli
std
subl
sbb
ret
les
and
sub
shr
mov
int
mov
sub
adc
dec
test
int
cltd
and
xchg
mov
add
xor
sbb
addb
cmp
cmp
mov
imul
pushf
shr
dec
xchg
std
jns
add
into
xor
jns
mov
lds
adc
adc
cmp
cmp
sbb
into
gs
pop
lock
push
xor
adcb
adc
cmp
cmp
mov
jmp
stos
cld
ret
in
fdivrl
clc
aaa
xchg
stos
lcall
dec
iret
mov
sub
mov
int
int3
xchg
dec
lret
xor
sbb
lcall
not
and
xor
adc
sub
divl
aad
mov
data16
adc
cmp
cmp
popf
int
cmp
mov
sbb
jg
dec
push
pop
fdivrl
xchg
pop
into
mov
addb
cmp
cmp
mov
and
dec
mov
ja
mov
movsl
and
daa
xchg
push
sub
inc
add
add
notb
sbb
addb
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
mov
fstl
mov
movl
cmp
cmp
add
xor
addb
adc
cmp
cmp
fsubrl
mov
mov
sbbb
dec
mov
or
cmp
ret
and
pop
adc
jnp
loopne
addb
adc
cmp
cmp
adc
sub
int3
xchg
add
pop
movsl
sub
mov
sub
adc
cmp
jae
call
mov
adcb
adc
cmp
cmp
mov
daa
in
rcll
addb
cmp
cmp
mov
pop
mov
xchg
addb
adc
cmp
cmp
jne
inc
iret
shlb
and
fucomi
test
faddl
hlt
mov
std
inc
out
xchg
pushf
ds
sbb
dec
push
data16
addb
cmp
cmp
mov
mov
jne
or
jae
cmp
fs
inc
xchg
jle
inc
jle
inc
shl
addb
cmp
cmp
mov
scas
out
xchg
shll
adc
addb
cmp
cmp
push
mov
addb
cmp
cmp
mov
dec
icebp
inc
lahf
xchg
jo
mov
xchg
inc
lret
out
enter
arpl
mov
pop
xchg
inc
outsl
xchg
imul
pop
mov
push
jp,pt
mov
xor
jge
addb
cmp
cmp
mov
push
push
push
sbb
addb
push
push
xchg
xor
bound
in
dec
sahf
xchg
in
mov
mov
adc
adc
cmp
cmp
addl
out
test
shll
mov
mov
lea
cmp
mov
addb
cmp
cmp
mov
ret
sbb
stc
fdivrl
cwtl
cld
jb
aad
ds
pop
decb
inc
jae
pop
lods
dec
stos
xchg
addr16
ret
mov
and
fwait
in
dec
adc
addb
adc
cmp
cmp
call
jo
push
aas
addb
adc
cmp
cmp
fsin
hlt
xchg
pop
addb
adc
cmp
cmp
je
mov
adc
adc
cmp
cmp
mov
jmp
addb
adc
cmp
cmp
mov
imul
enter
pop
addb
adc
cmp
cmp
dec
and
push
leave
lret
xorl
out
and
addb
cmp
cmp
mov
mov
sbb
repz
scas
pusha
cs
cld
cs
addb
adc
cmp
cmp
addb
adc
cmp
cmp
fisttpll
pop
dec
addb
adc
cmp
cmp
mov
aam
je
sbb
sub
or
int3
mov
push
lea
cmpsl
cmpb
jle
xchg
inc
inc
test
pusha
push
addb
adc
cmp
cmp
and
adc
adc
cmp
cmp
mov
iret
out
ficoms
lret
push
outsl
iret
inc
fnstsw
scas
adc
scas
adc
imull
test
sub
push
dec
and
dec
data16
out
inc
and
or
addb
adc
cmp
cmp
in
addb
cmp
cmp
mov
je
mov
int3
xchg
cmp
xchg
fbld
es
dec
loop
xchg
fxch
daa
pop
xor
push
add
mov
adcb
adc
cmp
cmp
mov
push
cwtl
test
inc
pop
scas
pop
fidivrs
in
addb
cmp
cmp
mov
cmc
daa
xchg
fnstsw
adc
adc
cmp
cmp
mov
sub
pop
sbb
stos
mov
sbb
movsl
mov
jo
mov
pop
pop
push
sub
shl
pushf
pop
mov
int3
loop
mov
addb
cmp
cmp
mov
fstpl
repnz
or
jl
cmp
rcr
cmpsb
das
and
lahf
pop
jae
loopne
push
addb
cmp
cmp
mov
add
add
in
fld
sahf
dec
mov
addb
cmp
cmp
mov
rcl
jno
pusha
mov
ret
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
stos
inc
jl
addb
cmp
cmp
mov
jns
pop
push
into
xor
dec
addb
adc
cmp
cmp
andb
push
jmp
idivb
and
inc
movsb
add
or
adc
lds
out
roll
fadds
repz
stos
jg
add
std
mov
push
outsl
addb
adc
cmp
cmp
cmp
mov
clc
dec
addb
adc
cmp
cmp
push
stos
addb
adc
cmp
cmp
or
arpl
and
pop
addb
adc
cmp
cmp
add
addb
cmp
cmp
adc
ret
nop
inc
ljmp
xchg
inc
xor
push
jmp
imul
cmp
movsl
mov
rorl
mov
or
in
fdivrs
mov
adcb
adc
cmp
cmp
mov
add
paddusw
mov
addb
cmp
cmp
mov
push
xrelease
adc
adc
cmp
cmp
stos
sarl
inc
out
addb
cmp
cmp
mov
jno
xchg
cmpb
rcrl
push
jns
loope
les
xchg
push
inc
out
cmc
ss
push
stos
xor
add
out
jno
test
ja
mov
int3
scas
mov
inc
xor
mov
jmp
mov
dec
addr16
in
andl
or
in
inc
cmpl
addb
adc
cmp
cmp
push
lods
mov
mov
daa
xchg
data16
jnp
loop
mov
lods
iret
dec
fbld
mov
je
or
push
mov
in
mov
mov
adc
adc
cmp
cmp
mov
sub
or
dec
sub
xchg
scas
je
test
sahf
adc
addb
adc
cmp
cmp
inc
xchg
push
and
or
sbb
and
sbb
mov
cmp
addb
cmp
cmp
mov
aas
ss
nop
cmpb
in
addb
adc
cmp
cmp
out
cld
dec
mov
addr16
dec
movb
adc
cmp
cmp
mov
loopne
push
jmp
psubd
ret
jns
popf
cmp
xor
push
addb
adc
cmp
cmp
testb
fstpt
sbb
sub
jo
push
addb
adc
cmp
cmp
xor
filds
jae
sbb
push
addb
adc
cmp
cmp
ss
iret
xchg
lods
sbb
jbe
ret
inc
cs
shlb
pop
paddusw
aam
sbb
sub
push
testb
adc
adc
cmp
cmp
mov
jle
lods
push
adcb
adc
cmp
cmp
mov
shl
push
repz
outsl
into
push
xchg
pop
insb
xchg
or
pop
and
mov
inc
xchg
addb
cmp
cmp
mov
xchg
inc
into
test
addb
cmp
cmp
jno
addb
cmp
cmp
mov
shlb
js
call
rorb
jle
imul
pop
stc
cmpl
jecxz
inc
clc
in
add
adcb
adc
cmp
cmp
mov
push
jmp
or
in
ljmp
sbb
test
out
inc
dec
in
jo
jmp
lods
addb
adc
cmp
cmp
lcall
cmpsl
daa
fsts
jnp
fistl
xchg
bound
addb
cmp
cmp
mov
xchg
sahf
and
cld
orl
sub
mov
ficompl
push
call
shlb
and
xchg
fnstenv
and
xchg
dec
je
loop
push
addb
cmp
cmp
mov
sub
mov
int3
mov
addb
cmp
cmp
adc
adc
adc
cmp
cmp
int3
cmpsb
stos
jae
xor
subl
shr
dec
jns
lods
mov
adcb
adc
cmp
cmp
mov
xchg
xchg
ja
in
jmp
out
or
addb
adc
cmp
cmp
fcoml
addb
cmp
cmp
mov
addb
adc
cmp
cmp
sub
xor
adc
adc
cmp
cmp
mov
ljmp
sub
shrl
loop
out
xchg
nop
push
scas
mov
add
xor
jp
js
pop
jbe
aaa
cmp
das
mov
adc
adc
cmp
cmp
add
push
pop
jae
in
sbb
dec
mov
xchg
adc
addb
cmp
cmp
mov
push
sahf
sbb
sub
sbb
xor
ds
les
sub
cmpsl
popa
into
test
in
pop
pop
pop
xchg
pop
cmp
addb
cmp
cmp
mov
cli
mov
and
ljmp
clc
loope
icebp
sti
mov
dec
addb
adc
cmp
cmp
stos
push
cmpb
addb
addb
cmp
cmp
cmovbe
addb
adc
cmp
cmp
jae
lcall
out
repnz
popa
lcall
adc
adc
lods
out
sub
cmp
idivb
push
addb
adc
cmp
cmp
adc
mov
pop
or
cmp
push
pop
pop
sub
fld
xchg
cmc
arpl
xor
mov
pop
sub
or
ljmp
mov
or
xor
mov
pop
cmp
jp
pop
or
cmp
call
addb
adc
cmp
cmp
and
sbb
cmp
outsl
cmc
dec
jo
je
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
aad
addb
adc
cmp
cmp
cmp
enter
sarw
stc
add
or
out
lcall
adc
adc
cmp
cmp
mov
cld
jg,pn
addb
cmp
cmp
mov
rcll
inc
and
adc
addb
cmp
cmp
mov
cwtl
addb
adc
cmp
cmp
sbb
or
mov
icebp
mov
jle
jns
mov
stos
pop
sahf
jecxz
pushf
out
insl
cmp
pop
inc
sub
xchg
jo
outsb
mov
lcall
mov
addb
adc
cmp
cmp
cmc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
mov
or
addb
cmp
cmp
dec
test
shrb
insl
addb
adc
cmp
cmp
fdivrl
lahf
hlt
and
into
bound
adc
adc
cmp
cmp
or
addb
adc
cmp
cmp
push
aam
mov
test
mov
xchg
add
adc
addb
cmp
cmp
mov
xchg
inc
addb
adc
cmp
cmp
das
movsb
cmpsl
lea
sbb
sbbl
pop
sahf
sub
std
inc
pushf
jns
addb
cmp
cmp
mov
adc
lock
or
pop
aaa
or
pop
int
addb
cmp
cmp
mov
in
out
dec
ret
movsl
idivl
xlat
jb
test
adc
adc
cmp
cmp
mov
dec
ret
shrb
and
adc
adc
cmp
cmp
jge
loopne
lods
or
mov
sub
pop
inc
push
fcoml
ds
in
jbe
iret
pop
ja
hlt
adc
or
test
mov
xchg
in
mov
cmp
addb
cmp
cmp
mov
mov
jo
addb
cmp
cmp
mov
aas
add
adc
adc
cmp
cmp
inc
ljmp
js
cmc
cmp
adcb
adc
cmp
cmp
mov
stos
sarb
aaa
rcrb
mov
int3
ljmp
test
jnp
addb
adc
cmp
cmp
adcl
and
dec
push
or
loop
cwtl
push
mov
sub
jl
sub
push
mov
out
add
icebp
pop
add
and
xchg
out
hlt
pop
sub
rcr
stos
lahf
pop
inc
add
dec
push
push
mov
js
je
jge
pop
xorb
or
adc
adc
cmp
cmp
mov
stos
aad
and
sti
jo
addr16
inc
mov
gs
dec
mov
addb
cmp
cmp
mov
dec
rorb
bswap
aaa
pop
push
enter
adcb
adc
cmp
cmp
mov
dec
mov
sbb
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
ret
sbb
addb
adc
cmp
cmp
cmpsl
sbb
lret
mov
jecxz
dec
cmp
arpl
fldenv
or
adc
adc
cmp
cmp
fstl
mov
rcl
icebp
xor
popa
ret
xchg
push
sub
addr16
mov
adc
adc
cmp
cmp
mov
and
adc
adc
rsqrtps
mov
or
cmp
sbb
std
ret
stos
dec
add
adcb
adc
cmp
cmp
mov
dec
xchg
push
mov
adc
fnstsw
repz
adc
cmp
cmp
jmp
mov
and
addb
cmp
cmp
out
shll
jecxz
cwtl
pop
repz
adc
imul
jnp
add
call
jo
ficomps
insl
ljmp
repnz
add
fwait
mov
je
ret
add
push
mov
dec
addb
adc
cmp
cmp
data16
add
imul
cmpsb
mov
aam
int3
adc
fs
int3
scas
cmpsb
adc
push
xor
popa
sbb
jns
js
sub
insb
dec
movsl
sub
addb
cmp
cmp
sbb
adc
sbb
in
mov
inc
lock
mov
pop
pushf
push
daa
pushf
loope
adc
mov
mov
and
mov
es
pop
aad
cmpb
jl
adc
adc
cmp
cmp
mov
inc
adc
fwait
sub
sbb
mov
push
cmpsb
fdivrl
fisubrs
mov
inc
inc
rolb
mov
leave
cwtl
add
pop
jge
lahf
ja
pushf
dec
and
addb
cmp
cmp
mov
dec
leave
dec
aad
push
addb
adc
cmp
cmp
xchg
sub
push
push
push
push
in
addb
adc
cmp
cmp
enter
stos
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jno
pop
inc
int3
inc
in
scas
addb
adc
cmp
cmp
into
addb
adc
cmp
cmp
fildll
xchg
pusha
sbb
addb
adc
cmp
cmp
and
add
addb
adc
cmp
cmp
fwait
push
mov
sbb
mov
mov
outsb
push
addb
adc
cmp
cmp
pop
cmp
xor
push
add
ud1
push
mov
and
cli
push
psubd
sahf
or
xchg
andl
mov
out
mov
xor
add
addb
cmp
cmp
test
addb
adc
cmp
cmp
push
mov
scas
loopne
addb
cmp
cmp
mov
stos
xchg
rorl
adc
push
test
push
sbb
xchg
mov
cmp
mov
mov
in
addb
cmp
cmp
mov
adc
gs
jb
loope
cmpsl
jl
test
xchg
lea
xchg
mov
sbb
mov
sbb
xorb
cmc
pop
inc
test
push
sub
nop
addb
adc
cmp
cmp
mov
daa
aaa
dec
fs
pop
loope
or
xor
pop
sbb
scas
movsl
imul
adc
cmp
cmp
mov
ficoml
jne
or
jno
shll
ret
iret
or
inc
sbb
mov
addb
adc
cmp
cmp
aam
data16
add
sbb
sub
or
mov
adc
adc
cmp
cmp
xor
mov
test
test
call
dec
rol
jno
lahf
sub
rorb
out
xchg
pop
clc
jae
sbb
pushf
mov
sbb
addb
adc
cmp
cmp
icebp
mov
imul
scas
sub
adcb
adc
cmp
cmp
mov
mov
andb
call
sti
sbb
addb
adc
cmp
cmp
outsl
in
test
test
lods
or
dec
es
enter
addb
adc
cmp
cmp
in
and
mov
push
addl
das
icebp
je
fisttps
mov
mov
outsb
mov
xchg
inc
jecxz
xor
out
addr16
cmp
in
cmp
xchg
or
dec
sahf
mov
add
movl
cmc
mov
lods
jne
leave
pushf
adc
xchg
les
xchg
push
pushf
decl
addb
cmp
cmp
in
cld
sbb
mov
pop
jge
pop
inc
add
adc
adc
cmp
cmp
sahf
dec
dec
lcall
addb
cmp
cmp
mov
xor
inc
mov
out
push
push
pop
call
into
sub
sar
addb
adc
cmp
cmp
sub
cmc
cmp
mov
inc
int
jmp
in
lds
aas
addb
adc
cmp
cmp
fcmovb
xchg
cmpsl
movsb
mov
mov
jge
and
mov
push
sbb
jmp
push
into
mov
fcomps
jmp
ret
cmp
stos
aad
xchg
adc
adc
cmp
cmp
mov
sahf
and
scas
iret
sub
and
sbb
mov
pushf
mov
push
addb
adc
cmp
cmp
int
movsl
or
fdivrs
adcb
adc
cmp
cmp
mov
inc
add
inc
add
addb
adc
cmp
cmp
rolb
push
mov
fldl
std
and
pop
aas
call
cmp
mov
xchg
and
bound
mulb
xchg
adc
fwait
ds
addb
adc
cmp
cmp
popf
in
and
pop
in
jne
cmp
or
addb
cmp
cmp
mov
rol
cltd
int
stc
push
push
pop
xchg
shlb
scas
andl
adc
cmp
cmp
mov
addb
adc
cmp
cmp
add
xor
xchg
mov
adcb
adc
cmp
cmp
mov
push
cltd
popa
mov
addl
or
and
imul
push
loopne
and
and
pop
fbld
mov
inc
push
ljmp
jb
cmp
mov
adc
adc
cmp
cmp
mov
pushf
inc
adc
adcl
sbb
jo
stos
push
fisubs
dec
mov
sub
les
adc
and
addb
adc
cmp
cmp
pushf
push
enter
push
cmp
arpl
hlt
loopne
addb
adc
cmp
cmp
cld
ror
and
shll
stc
out
xchg
bound
adc
adc
cmp
cmp
sub
or
ret
fmuls
mov
pop
lods
mov
adc
adc
cmp
cmp
mov
movsl
pushf
mov
pop
jl
cmp
adc
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
mov
sbb
loopne
sbb
sbb
idivl
fldenv
shr
ljmp
jns
aaa
xchg
inc
out
addb
cmp
cmp
mov
scas
or
das
inc
add
xchg
mov
lods
ret
or
mov
mov
cltd
cmp
and
aam
pop
test
inc
ret
ret
addb
adc
cmp
cmp
hlt
jae
sub
adc
adc
cmp
cmp
inc
add
add
out
addb
adc
cmp
cmp
jecxz
mov
fiaddl
adc
adc
cmp
cmp
or
mov
andl
xchg
add
ljmp
dec
mov
addb
cmp
cmp
scas
cmp
adcb
adc
cmp
cmp
mov
dec
push
jle
rorb
push
push
pop
pop
lea
mov
addb
cmp
cmp
cmp
sub
sbb
rcrl
icebp
cmp
adc
adc
cmp
cmp
ljmp
mov
addb
cmp
cmp
sub
dec
sbb
inc
fsubl
sub
das
movsl
popa
mov
cmpsb
ficompl
hlt
pop
jmp
addb
adc
cmp
cmp
popf
dec
out
mov
lcall
adc
cmp
cmp
mov
cwtl
and
xlat
aam
mov
push
sub
xchg
sbb
jb
addb
adc
cmp
cmp
out
jae
or
mov
and
push
and
or
xor
sub
jae
shr
sbb
nop
ret
mov
push
push
lea
in
jecxz
dec
and
addb
adc
cmp
cmp
add
jns
add
ljmp
inc
sbb
in
sbb
addb
cmp
cmp
mov
xchg
insl
cs
mov
and
xchg
out
mov
mov
add
fs
addb
adc
cmp
cmp
jnp
xchg
fdivrp
pusha
faddl
adc
adc
cmp
cmp
sub
ljmp
daa
mov
jg
mov
jo
cltd
fwait
inc
mov
addb
cmp
cmp
mov
sbb
addb
adc
cmp
cmp
les
sub
addb
adc
cmp
cmp
jae
push
pop
lret
shrl
adc
loope
push
pop
mov
test
cltd
xchg
and
cmp
add
lods
shlb
popa
cli
sbb
add
pop
imul
push
icebp
std
adc
cmp
xchg
addb
adc
cmp
cmp
pop
aad
lods
addb
adc
cmp
cmp
sub
dec
mov
adc
adc
cmp
cmp
mov
sub
or
fidivl
pop
popf
inc
mov
jnp
call
xchg
xlat
shrb
cwtl
or
popa
xchg
or
idivl
push
data16
je
das
aad
addb
cmp
cmp
mov
lods
jl
dec
aam
loopne
bound
jle
sbb
scas
lcall
icebp
mov
xor
mov
jmp
std
fildl
adc
adc
cmp
cmp
jg
sub
cmp
and
addb
cmp
cmp
adc
sub
sub
imul
jl
jge
lret
push
jmp
xor
repz
and
inc
sbb
mov
fdivrl
aaa
lods
mov
mov
xchg
add
mov
addb
adc
cmp
cmp
mov
fwait
pop
or
add
sub
adc
movsl
pop
pop
ficomps
mov
xor
loope
add
addb
adc
cmp
cmp
or
or
mov
jne
fidivl
inc
mov
adc
adc
cmp
cmp
mov
stc
cs
cmpsl
dec
adc
out
pop
addb
adc
cmp
cmp
pop
cmp
add
sub
imul
or
and
dec
addb
adc
cmp
cmp
mov
cltd
and
dec
fsubp
fldl
or
jmp
cmp
pop
mov
push
inc
sbb
xlat
cmpb
mov
pop
lock
addb
cmp
cmp
mov
add
addb
cmp
cmp
mov
and
dec
addb
adc
cmp
cmp
in
adc
addb
cmp
cmp
pop
pop
xchg
test
addb
adc
cmp
cmp
fidivrs
and
jne
loop
xchg
jae
and
addb
adc
cmp
cmp
lds
out
mov
popa
testb
adc
cmp
cmp
mov
push
test
adc
adc
cmp
cmp
xor
pop
iret
lret
sbb
testl
pusha
icebp
xchg
out
loop
stos
loope
shrl
js
mov
addb
cmp
cmp
mov
push
addb
adc
cmp
cmp
dec
jno
mov
push
cmpsb
pushf
test
mov
addb
adc
cmp
cmp
and
push
repnz
cmp
jmp
lods
lret
push
add
jmp
mov
sub
daa
clc
push
inc
jg
lods
gs
lock
mov
push
mov
push
cmp
push
xorl
adc
adc
cmp
cmp
mov
xchg
jp
mov
lods
cmp
lods
or
mov
xchg
pop
pusha
sbb
movsl
pop
stos
pop
lds
addb
cmp
cmp
mov
mov
xor
fimuls
dec
xor
adc
xchg
out
inc
jg
lret
dec
fstps
jle
addb
adc
cmp
cmp
cmp
or
andb
stos
pop
leave
jno
cmc
adc
adc
adc
dec
xchg
mov
shrl
jnp
ret
std
or
sub
addb
cmp
cmp
mov
adc
jge
outsb
jae
mov
add
popa
adc
leave
inc
cld
inc
and
mov
lret
or
lock
cmpsb
addb
adc
cmp
cmp
loopne
push
rorb
push
out
jno
das
stos
adc
cwtl
add
mov
cs
dec
nop
leave
data16
xchg
push
sub
in
mov
pushl
addb
adc
cmp
cmp
ret
dec
out
lret
inc
hlt
sbb
adc
xor
cli
mov
fldt
movsl
mov
pop
jge
adc
addb
cmp
cmp
or
addb
adc
cmp
cmp
mov
ret
repnz
aaa
test
fildl
addb
cmp
cmp
mov
test
hlt
flds
test
lods
mov
aas
es
leave
cmp
repz
addb
adc
cmp
cmp
into
xor
dec
in
loopne
arpl
addb
adc
cmp
cmp
xor
ret
ss
les
inc
sahf
repnz
addl
movsl
lahf
outsb
mov
mov
addb
cmp
cmp
adc
popf
cmp
cmp
sbbb
cmc
int
xor
leave
pop
stos
mov
mov
addb
adc
cmp
cmp
dec
shll
sub
sbb
hlt
mov
scas
jp
dec
add
sub
inc
fldt
clc
js
rolb
inc
dec
jae
mov
sbb
rcr
sbb
inc
cli
mov
cltd
add
iret
push
pop
dec
out
aaa
shll
popa
addb
adc
cmp
cmp
mov
add
and
adc
push
dec
fs
daa
popa
or
and
pop
fucom
call
mov
push
out
icebp
jl
gs
jbe
xchg
cmp
and
sub
sub
mov
xor
repnz
fsubr
scas
jno
ret
clc
rolb
xor
addb
cmp
cmp
jmp
adcb
adc
cmp
cmp
mov
in
pop
icebp
dec
add
repnz
jns
das
icebp
lock
inc
insb
lock
shlb
xchg
cmc
aam
mov
aad
pop
add
sub
addb
cmp
cmp
mov
and
push
adc
loopne
cwtl
mov
sbb
rcrb
movsb
jns
push
sub
sub
shl
jno
test
adc
scas
add
aas
xor
test
adc
adc
cmp
cmp
mov
xchg
js
inc
rclb
fistps
movsl
cld
mov
dec
movaps
fldt
adc
subb
pop
shrl
xor
mov
mov
mov
das
pushf
and
add
xchg
mov
push
decl
addb
cmp
cmp
mov
daa
loopne
or
je
or
lcall
addb
cmp
cmp
jl
xor
and
and
movsb
and
or
pushf
mov
adcb
nop
push
cmp
inc
mov
and
in
aam
int
cltd
mov
addb
cmp
cmp
mov
dec
aaa
imul
sub
push
fsts
loop
cmpsb
test
pop
or
sbb
adc
adc
cmp
cmp
mov
add
das
xor
adcb
adc
cmp
cmp
mov
xchg
add
adc
adc
cmp
cmp
mov
and
notb
rorb
mov
addb
adc
cmp
cmp
jmp
lcall
adc
cmp
cmp
mov
push
add
or
lods
jle
pmaxsw
and
or
addb
cmp
cmp
mov
xchg
xor
lods
mov
sub
sub
gs
lds
ret
fmuls
mov
fisubrs
inc
movsl
sbb
push
jmp
sub
sbb
pop
sub
lea
mov
addb
adc
cmp
cmp
xor
shr
arpl
adc
mov
jb
scas
and
addb
cmp
cmp
mov
fmul
aad
and
arpl
icebp
pop
rolb
scas
ljmp
xchg
jge
xor
add
xor
cmp
out
mull
fldl
jbe
in
addb
adc
cmp
cmp
sub
icebp
sahf
and
adc
adc
cmp
cmp
mov
push
addb
adc
cmp
cmp
mov
addb
cmp
cmp
add
adc
adc
cmp
cmp
xlat
jle
jecxz
std
addb
adc
cmp
cmp
addl
faddl
adc
adc
cmp
cmp
sub
stos
push
fdivr
int3
jmp
dec
inc
vpcmpeqb
call
push
out
and
pop
sti
adc
cli
mov
mov
in
mov
sub
sub
stc
insl
aam
cmp
adc
adc
cmp
cmp
sahf
dec
subb
arpl
cwtl
fstpt
into
xchg
mov
cmp
lods
push
sbbb
push
mov
adc
adc
cmp
cmp
repnz
cmc
cld
loopne
es
into
dec
xlat
sbb
push
movsl
push
or
addb
adc
cmp
cmp
mov
stos
adc
or
xchg
inc
icebp
adc
adc
cmp
cmp
mov
lret
aaa
xchg
add
sbb
pushf
sti
push
cmp
arpl
sbb
repnz
subl
mov
add
jae
pop
insl
add
insb
jno
addb
cmp
cmp
mov
movsb
cmp
sub
or
icebp
pop
test
or
inc
cmp
or
jae
fsts
push
cmpsb
cwtl
sahf
push
xchg
scas
andb
out
bswap
inc
xchg
mov
arpl
jne
addb
cmp
cmp
mov
sub
enter
pop
sbbl
mov
test
jb
or
cwtl
lahf
jb
fiadds
push
jbe
sbb
mov
iret
dec
adc
mov
out
mov
adc
adc
cmp
cmp
out
imul
or
dec
xchg
adc
xor
inc
inc
adc
mov
pop
addb
adc
adc
cmp
cmp
or
adc
adc
cmp
cmp
mov
notb
sbb
out
pusha
fisttpl
loope
addb
cmp
cmp
mov
in
aas
sti
test
sub
repz
inc
mov
addb
cmp
cmp
mov
xor
xchg
fldenv
frstor
sbb
dec
jo
out
inc
push
test
adc
adc
cmp
cmp
mov
mul
and
into
xchg
imulb
push
xchg
xlat
movb
lret
push
add
add
dec
shll
addb
adc
cmp
cmp
popf
cmp
in
lret
js
lret
ret
fidivrl
pop
jns
mov
addb
cmp
cmp
mov
loop
dec
jne
cwtl
insl
jns
xchg
sbb
stos
hlt
addb
adc
cmp
cmp
clc
cmp
mov
add
ret
ljmp
fbstp
dec
mov
mov
sub
int
jnp
dec
jb
inc
jne
dec
inc
popa
xor
xchg
push
mov
jmp
addb
cmp
cmp
mov
imul
and
test
jns
pop
push
into
daa
jb
addb
cmp
cmp
mov
in
xor
cld
js
daa
pop
jg
inc
shr
cltd
out
jge
push
shll
out
push
pop
stos
push
dec
loopne
es
cmpsl
out
lea
dec
jno
lds
sbb
push
sbb
das
cwtl
push
adc
sbb
adc
and
inc
loop
lods
sub
pop
addb
adc
cmp
cmp
mov
and
sub
addb
adc
cmp
cmp
test
sbb
aam
pushf
pop
adc
int3
addb
adc
cmp
cmp
push
jbe
pop
mov
sahf
add
xor
adcb
adc
cmp
cmp
mov
aas
dec
rcrb
xchg
pop
addb
adc
cmp
cmp
daa
daa
pop
and
loope
pop
rcl
in
repnz
pop
addb
adc
cmp
cmp
cmpsl
lcall
rcll
iret
lret
mov
gs
cmp
addb
cmp
cmp
mov
notb
aad
sub
shlb
add
adc
adc
cmp
cmp
mov
outsb
dec
dec
mov
gs
xlat
addb
adc
cmp
cmp
add
addb
cmp
cmp
es
pushf
push
movsb
push
ret
popa
loopne
xchg
adc
lcall
scas
add
jb
and
add
adc
adc
cmp
cmp
ficomps
sahf
jns
addb
adc
cmp
cmp
dec
or
mov
lock
cld
dec
clc
mov
popa
mov
fdivrl
leave
in
mov
addb
cmp
cmp
add
xchg
popf
xchg
addb
adc
cmp
cmp
inc
cs
add
add
repnz
mov
inc
and
stos
scas
into
in
inc
fprem1
xlat
sub
xchg
push
sarb
fsubs
or
xchg
adc
adc
cmp
cmp
cmp
xchg
dec
cli
or
or
fnstenv
out
in
aam
in
addb
adc
cmp
cmp
xlat
out
shlb
das
push
sbb
shl
in
stos
jnp
mov
jle
adcb
adc
cmp
cmp
mov
adc
lretw
popa
sti
addb
adc
cmp
cmp
pop
sahf
pop
leave
and
pop
cmpsl
leave
and
mov
push
decb
pop
rolb
or
shll
or
adc
adc
cmp
cmp
mov
test
jns
in
jo
repz
not
jecxz
das
cli
cld
addb
adc
cmp
cmp
sahf
into
addr16
js
mov
int3
mov
xchg
push
sbb
mov
fidivrl
pop
ja
dec
js
sarl
jle
mov
or
pop
cmpsl
xchg
pop
mov
jge
adc
adc
adc
cmp
cmp
add
pavgw
jl
in
cmp
mov
out
xchg
mov
xor
inc
xchg
call
mov
cmpsl
in
cmp
adc
adc
cmp
cmp
mov
inc
out
mov
adcb
adc
cmp
cmp
mov
insl
xchg
pop
repz
push
notb
adc
addb
cmp
cmp
lahf
inc
mov
test
testb
fidivrs
cmp
inc
sbb
xor
inc
add
cli
aad
dec
push
ja
addb
cmp
cmp
mov
mov
jno
cli
adc
lret
jbe
in
fnstsw
clc
adc
je
jno
outsl
push
addb
adc
cmp
cmp
xchg
in
push
push
movl
jae
dec
xchg
sar
mov
jmp
addr16
cwtl
pop
fbld
out
cmpsb
sbb
mov
sbb
and
pop
aad
pop
xchg
adc
mov
sar
add
jg
andl
test
or
xchg
cmp
lret
dec
arpl
test
addb
adc
cmp
cmp
mov
stc
insb
sub
sub
sarb
ffreep
sahf
mov
jp
loopne
ret
inc
movsl
xlat
jbe
adc
xchg
ljmp
addb
cmp
cmp
dec
arpl
addb
cmp
cmp
mov
pushf
mov
jne
pop
hlt
cli
or
mov
fcmovnbe
daa
addb
adc
cmp
cmp
mov
lods
fidivrl
out
dec
es
popa
push
addb
adc
cmp
cmp
sub
jecxz
jb
xor
sbb
mov
shr
das
popf
cmp
pop
jmp
jp
mov
stos
pop
aad
bound
cli
addb
adc
cmp
cmp
dec
les
pop
inc
lea
add
or
mov
addb
adc
cmp
cmp
xchg
jne
stos
stos
mov
addb
adc
cmp
cmp
inc
aam
mov
fidivrs
inc
mul
stos
call
ret
inc
sub
sahf
pop
jle
or
sbb
mov
pop
add
fwait
shl
xor
xrelease
mov
out
mov
ficompl
int3
and
das
add
dec
daa
dec
fistpll
jl
outsl
mov
push
mov
mov
in
inc
int3
clc
test
mov
int3
sub
clc
in
rclb
xchg
stc
fbld
pop
mov
scas
mov
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
cwtl
cli
xchg
lods
xor
or
cli
xchg
cmp
addb
adc
cmp
cmp
jns
adc
sub
imul
addb
cmp
cmp
mov
jns
addb
adc
cmp
cmp
cmc
imul
scas
xor
xchg
daa
imul
je
inc
mov
add
or
sub
addb
adc
cmp
cmp
and
sub
xchg
cmp
mov
inc
xchg
into
filds
mov
out
inc
pop
xlat
inc
lahf
xorl
addb
adc
cmp
cmp
andl
mov
out
addb
adc
cmp
cmp
daa
addb
adc
cmp
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
lods
sbb
dec
xorb
mov
aam
sbb
mov
adc
adc
cmp
cmp
mov
cmp
fdiv
cmpsl
mov
mov
jp
add
and
jp
ret
pop
sbb
sbb
adc
adc
cmp
cmp
mov
dec
mov
shl
les
mov
addb
cmp
cmp
mov
je
movsb
aas
mov
in
sub
pop
mov
jg
mov
xchg
fwait
addb
adc
cmp
cmp
lret
push
fcompl
movsl
and
cltd
loopne
sub
sub
jle
sbb
sbb
add
outsl
roll
addb
cmp
cmp
addb
adc
cmp
cmp
jbe
test
enter
fsts
adcb
adc
cmp
cmp
mov
ror
addb
cmp
cmp
mov
aaa
in
push
mov
xor
shl
xlat
xchg
mov
ds
stmxcsr
push
ret
pushw
sahf
out
scas
test
inc
cmp
movsb
inc
leave
std
pop
aaa
stc
xchg
and
ljmp
addb
adc
cmp
cmp
and
dec
cmp
add
clc
inc
bound
dec
push
test
mov
push
xchg
sub
lods
in
lds
jecxz
pop
lret
scas
lods
popf
rcrb
xor
dec
push
pop
inc
outsb
out
mov
aad
push
inc
fdivl
mov
mov
jne
or
int3
mov
int
stos
inc
sbb
or
rep
addb
adc
cmp
cmp
pop
push
aam
xchg
ljmp
adc
adc
cmp
cmp
mov
imul
es
mov
mov
mov
ja
sub
insb
adc
push
add
cmp
mov
pop
addb
adc
cmp
cmp
movsbl
fcomi
xor
adc
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
cltd
and
inc
push
aad
jmp
adcb
fstpt
cmp
push
mov
dec
xchg
sbb
je
lahf
icebp
mov
addb
adc
cmp
cmp
mov
mov
cli
test
daa
cmp
mov
mov
imul
loope
addb
adc
cmp
cmp
sbb
adcb
adc
cmp
cmp
mov
ret
xorb
lcall
xchg
xchg
xchg
jp
addb
adc
cmp
cmp
sahf
or
sub
xchg
cmp
pop
insl
das
addb
adc
cmp
cmp
stos
mov
addb
cmp
cmp
mov
movsl
or
jnp
cmpsl
repz
adc
sbb
jae
adc
jbe
inc
xor
test
movsb
jne
push
imul
ds
sahf
movsl
mov
call
adc
adc
cmp
cmp
mov
mov
mov
pop
addb
adc
cmp
cmp
fcoms
xor
jne
adc
lea
mov
repnz
pop
fmulp
xchg
cmpsb
ja
fwait
push
mov
jb
ljmp
push
lds
dec
je
xchg
ds
fxam
push
dec
pushf
sbb
cmp
fadds
into
cltd
mov
mov
mov
adc
dec
in
add
outsb
addb
adc
cmp
cmp
jle
jae
aad
ret
sub
addb
adc
cmp
cmp
add
dec
shl
pop
lahf
xlat
jg
loope
addb
adc
cmp
cmp
std
mov
fldenv
out
ret
stc
addb
adc
cmp
cmp
inc
xlat
inc
cmp
add
jge
int3
bound
stc
outsl
inc
mov
mov
adcb
adc
cmp
cmp
mov
dec
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
jmp
fsubl
mov
lret
cwtl
into
xor
adc
adc
cmp
cmp
mov
push
das
xor
int
ds
addb
cmp
cmp
mov
lret
insl
sbb
jp
push
or
rcll
push
push
imul
adc
adc
cmp
cmp
mov
mov
movsl
loope
ds
dec
fs
mov
cmpb
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
fisttpl
cmp
dec
cli
shrl
jns
inc
mov
sub
lret
out
popa
mov
adc
dec
jl
ja
mov
insl
outsl
inc
cmp
and
addb
adc
cmp
cmp
out
jmp
int
jp
xor
push
fstl
je
test
add
fstpl
pushf
stos
adc
addb
cmp
cmp
mov
dec
mov
mov
sub
sbb
jge
rorl
stos
and
stos
adc
pop
insb
pop
inc
pop
fstpl
setle
decl
or
xchg
jns,pn
outsb
loopne
ja
mov
adc
adc
cmp
cmp
fistps
addb
cmp
cmp
mov
pop
xchg
or
into
lahf
cmp
mov
je
adc
cmp
cwtl
int3
out
in
ret
pop
xchg
fisubl
nop
push
cld
xchg
mov
imul
int3
outsb
clc
mov
xchg
xor
outsb
pop
addb
adc
cmp
cmp
fucom
fstpl
pop
addb
adc
cmp
cmp
sahf
or
mov
test
addb
cmp
cmp
mov
test
das
and
mov
cmp
cmp
and
pop
adc
mov
inc
push
test
je
rclb
aaa
addb
adc
cmp
cmp
addb
adc
cmp
cmp
int
sub
fidivl
xchg
out
sub
add
sub
sub
aaa
push
ljmp
xchg
ljmp
sbb
pop
repz
addb
adc
cmp
cmp
pop
pop
idiv
sbb
stos
mov
adc
adc
cmp
cmp
mov
lea
mov
in
imul
cmp
cmp
and
addb
cmp
cmp
mov
sbb
bnd
icebp
jno
rcrb
loope
fs
out
mov
lock
addb
adc
cmp
cmp
xor
dec
in
sbb
adcb
adc
cmp
cmp
mov
cmp
and
fiaddl
adc
adc
cmp
cmp
dec
addb
adc
cmp
cmp
clc
movsl
test
sbb
jg
dec
rcl
addb
adc
cmp
cmp
mov
add
jmp
in
daa
mov
fisttpl
call
addb
cmp
cmp
mov
daa
jp
fnstsw
adcb
imul
popa
push
lret
call
push
scas
mov
add
out
mov
enter
ja
jmp
addb
adc
cmp
cmp
xchg
fadd
xor
xchg
xchg
ret
std
int3
sub
jno
xorb
mov
mov
fisubs
mov
push
xchg
fldt
cmp
xlat
test
jg
and
lock
adc
cmp
cmp
push
add
enter
lds
loope
inc
mov
xor
mov
mov
lock
jl
add
pop
adcl
cwtl
pusha
xlat
dec
bound
mov
cmp
insl
xor
addb
adc
cmp
cmp
sbb
fildl
mov
testb
jg
jl
call
lret
test
mov
lock
add
mov
mov
aam
ds
ret
jge
xchg
sub
fildl
shl
dec
fstps
loop
ret
addb
adc
cmp
cmp
sbb
addb
addb
cmp
cmp
cmc
inc
addb
adc
cmp
cmp
jb
xchg
int
cli
sbb
push
xlat
mov
stc
aas
inc
push
aam
je
xchg
pop
mov
adcb
adc
cmp
cmp
mov
push
push
popf
dec
mov
les
cmp
mov
lea
loopne
fsubrs
addb
adc
cmp
cmp
es
cs
mov
jge
test
iret
pop
cli
jns
je
xlat
shll
and
addb
cmp
cmp
mov
and
fst
outsl
inc
add
clc
add
ds
fildl
inc
in
cmp
cmp
sahf
js
dec
adc
mov
andb
into
arpl
mov
inc
cmp
testb
lds
push
xor
ficoms
rcl
jmp
add
aam
mov
push
adc
addb
adc
cmp
cmp
std
mov
inc
mov
pop
adc
adc
adc
cmp
cmp
mov
mov
addb
cmp
cmp
mov
mov
out
ds
xchg
cmp
stc
cmp
xchg
je
rcrb
addr16
sub
lahf
sub
call
addb
cmp
cmp
push
pop
dec
fwait
cmp
adc
inc
addb
adc
cmp
cmp
adc
sub
cmc
xchg
push
cmp
push
addb
adc
cmp
cmp
scas
cmp
or
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
ret
test
xchg
xor
jb
push
std
pusha
call
test
push
nop
pop
iret
xchg
jae
mov
divb
loope
cmpsl
lock
dec
jl
lea
addb
cmp
cmp
mov
movsl
out
sub
pop
out
call
mov
shlb
js
dec
ja
add
negb
mov
fs
mov
mov
lcall
add
mov
sub
cmpsb
pusha
popf
pop
psllw
mov
flds
or
mov
xor
emms
stc
dec
jge
mov
fdivl
imul
stc
aam
pop
add
iret
mov
and
and
daa
cmp
leave
xchg
xchg
and
hlt
gs
loop
pop
stos
cmp
xor
shrb
ja
outsl
jns
sahf
stos
inc
and
mov
clc
and
insb
jns
jmp
xchg
pushf
lret
jo
popf
mov
adc
adc
cmp
cmp
mov
std
lods
dec
in
lret
jl
lret
adc
dec
negl
lret
mov
repz
addb
adc
cmp
cmp
stos
stos
stos
dec
hlt
hlt
xor
mov
and
idivl
mov
xchg
mov
out
test
sbb
mov
dec
inc
fs
lret
int
dec
pop
nop
mov
xor
jbe
rol
cltd
and
data16
addb
adc
cmp
cmp
mov
pop
out
rclb
sub
movsb
out
cmp
inc
jo
addb
cmp
cmp
mov
popa
mov
mov
sub
jmp
mov
adc
ret
addb
adc
cmp
cmp
push
int3
lods
push
addb
adc
cmp
cmp
cmp
aas
divl
mov
jmp
movsl
cmc
rcr
pop
pop
lea
nop
movsb
int
push
cmc
jno
movsb
mov
lcall
adc
adc
cmp
cmp
jl
ss
aad
popf
adc
adc
mov
in
jbe
or
xor
mov
jno
fisubl
out
addb
adc
cmp
cmp
pminsw
jle
xchg
sbb
pop
push
adc
adcb
adc
cmp
cmp
mov
add
jl
repnz
sub
leave
mov
and
push
addr16
and
mov
sub
xchg
mov
in
sahf
addb
adc
cmp
cmp
sbb
sbb
inc
xor
aaa
subb
push
jae
mov
in
addb
cmp
les
push
test
pop
and
jmp
addb
cmp
cmp
or
sbb
aas
xchg
gs
xor
test
adc
popf
cwtl
mov
out
loop
pop
jbe
lret
mov
mov
dec
inc
sbb
fsubrl
xorl
jge
sbb
mov
xorl
adcb
adc
cmp
cmp
mov
jns
outsl
sub
push
iret
imul
addb
adc
cmp
cmp
test
into
or
or
mov
push
repz
stc
insb
adc
xor
jno
test
mov
inc
out
scas
ljmp
jle
call
pop
out
das
or
sarl
jg
addb
adc
cmp
cmp
aas
dec
dec
les
push
dec
rclb
addb
adc
cmp
cmp
leave
into
fwait
lods
cltd
pop
stos
mov
ds
mov
outsl
sbb
xorl
pusha
xor
dec
mov
mov
mov
sub
addb
adc
cmp
cmp
mov
inc
sahf
adc
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
imul
addb
cmp
cmp
mov
dec
inc
fists
in
addb
adc
cmp
cmp
mov
out
addb
adc
cmp
cmp
mov
push
sbb
ss
movsl
sub
cli
fmuls
jl
xchg
jnp
ss
jns
dec
lds
or
mov
fildl
adc
adc
cmp
cmp
and
imul
adcl
xorl
mov
mov
je
mov
lods
test
icebp
addb
adc
cmp
cmp
inc
xchg
inc
xor
mov
pop
mov
adc
adc
cmp
cmp
mov
scas
sub
add
addb
adc
cmp
cmp
lret
aas
subb
adc
adc
cmp
cmp
push
xor
in
jbe
inc
sbb
lret
jmp
push
lret
pop
sahf
mov
dec
adc
push
sarl
gs
sub
cmpsl
xor
mov
adcb
adc
cmp
cmp
mov
notb
addb
adc
cmp
cmp
std
adc
or
aam
jl
in
push
addb
adc
cmp
cmp
ret
aas
or
xor
test
pop
sbb
shlb
bound
nop
dec
mov
push
je
pop
xor
sub
inc
xchg
xchg
movsb
out
addb
adc
cmp
cmp
sub
and
push
pop
push
fadd
aad
sub
push
test
je
xor
adc
adc
cmp
cmp
cmc
addb
adc
cmp
cmp
cmpsl
adc
test
jo
std
js
inc
or
ret
hlt
addr16
addb
adc
cmp
cmp
loop
pushf
imul
jg
cmpsl
sbb
dec
in
cmp
repz
or
sysenter
sahf
lods
cltd
test
fists
sbb
cmp
jo
fldl
addb
adc
cmp
cmp
mov
jae
repz
sbb
jg
push
std
jnp
sbb
addr16
cmpsl
into
inc
addb
adc
cmp
cmp
fbstp
cltd
mov
addb
cmp
cmp
mov
movsl
fbld
inc
sub
add
addl
addb
cmp
cmp
mov
hlt
inc
push
testb
pop
push
lea
jb
xchg
mov
addb
adc
cmp
cmp
or
int
addb
adc
cmp
cmp
jnp
dec
pop
jg
add
inc
enter
jge
xchg
sbb
out
mov
rolb
addb
cmp
cmp
mov
test
scas
out
ljmp
out
xor
mov
pop
lahf
cmpsb
clc
cmp
mov
arpl
inc
cmp
addb
adc
cmp
cmp
add
ss
dec
xchg
sub
insb
repnz
mov
jecxz
pop
pop
call
adcb
adc
cmp
cmp
mov
push
jecxz
shlb
es
lcall
jecxz
lods
addb
adc
cmp
cmp
inc
jmp
mov
movsl
adc
shlb
adc
adc
cmp
cmp
jae
lods
arpl
pusha
adc
inc
push
popf
loope
popf
pop
jecxz
outsl
or
fwait
out
inc
imul
dec
push
outsb
lods
scas
insl
xchg
das
loop
adc
ss
out
icebp
addb
adc
cmp
cmp
jmp
push
adc
jge
out
insb
sub
addb
cmp
cmp
xlat
in
out
addb
adc
cmp
cmp
das
fnstcw
push
pop
xchg
addl
addb
adc
cmp
cmp
cmpsb
leave
fs
incl
adc
adc
cmp
cmp
or
pop
mov
addb
adc
cmp
cmp
subb
and
push
pop
addb
adc
cmp
cmp
scas
sub
into
test
xor
xchg
pop
inc
ret
pop
and
subb
pop
and
addb
cmp
cmp
les
test
setns
mov
pop
cmc
rcrl
inc
jne
scas
mov
sub
int3
stos
sbb
or
xor
xchg
ret
and
dec
cmpl
push
jle
xchg
arpl
fstp
leave
insl
cwtl
adc
sub
push
dec
jo
addb
cmp
cmp
mov
mov
addb
cmp
cmp
lcall
insb
cltd
stos
and
push
les
mov
adcb
adc
cmp
cmp
mov
xor
stos
stos
sbb
clc
inc
popl
addb
adc
cmp
cmp
into
adc
lods
xchg
rorb
mov
sbb
xor
jge
lcall
subl
adc
adc
cmp
cmp
hlt
push
and
jns
in
and
rcrl
fiaddl
jno
jg
adc
fstps
les
inc
addb
adc
cmp
cmp
inc
test
dec
adc
lds
push
push
mov
lods
aas
insl
xchg
mov
xchg
cli
adc
xchg
add
xchg
roll
add
insb
and
sbb
jmp
jmp
les
and
or
push
and
addb
cmp
cmp
mov
cltd
pop
xor
addb
cmp
cmp
mov
sbb
push
subb
addb
cmp
cmp
mov
fwait
cmp
sbb
aad
mov
addb
cmp
cmp
mov
andb
outsb
outsl
push
and
xor
xlat
fldl
adc
adc
cmp
cmp
mov
arpl
lea
xor
loopne
cmp
addb
adc
cmp
cmp
xor
sbb
or
pushf
mov
adc
adc
cmp
cmp
mov
cmpsb
ret
arpl
jae
loopne
pop
inc
ss
insb
in
sbb
sarb
addb
adc
cmp
cmp
hlt
mov
dec
mov
mov
adc
adc
adc
cmp
cmp
sub
mov
addb
cmp
cmp
mov
call
xchg
outsb
loop
jecxz
jb
lcall
inc
and
mov
inc
inc
jb
sub
adc
adc
cmp
cmp
mov
xor
pop
add
arpl
fiaddl
adc
adc
cmp
cmp
test
sbb
ds
dec
aaa
or
pop
pop
sahf
push
sbb
aaa
popa
push
sarl
push
mov
lahf
mov
xlat
into
fcomps
jg
cmp
imul
sbb
pop
cmp
fidivrl
mov
mov
iret
lret
pusha
jbe
push
adc
jbe
cs
mov
adc
gs
or
lcall
adc
cmp
cmp
mov
addb
adc
cmp
cmp
adc
pushf
sbb
inc
jmp
les
dec
ja
in
jo
pop
fldl
adc
adc
cmp
cmp
inc
stos
dec
push
lahf
cmp
test
adc
adc
cmp
cmp
add
int3
daa
cmc
pop
add
push
mov
daa
mov
and
mov
je
mov
mov
addb
cmp
cmp
movsb
pop
mov
push
fidivrs
xchg
les
aad
add
inc
jbe
mov
sahf
ret
fcomps
mov
pushf
addb
adc
cmp
cmp
jne
mov
push
cmp
pop
stos
xor
clc
std
stos
pop
je
and
lds
adc
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
sub
add
addb
adc
cmp
cmp
into
jle
pop
mov
mov
sbb
cmp
dec
outsb
xor
shll
push
ret
mov
mov
shll
scas
leave
out
daa
mov
addb
cmp
cmp
mov
movsb
and
sbb
ja
cmpsb
pop
push
nop
fnsetpm(287
test
sbb
mov
inc
movsb
or
adc
adc
cmp
cmp
nop
in
push
movsl
imul
addb
cmp
cmp
dec
fneni(8087
clc
jbe
lahf
cs
hlt
mov
dec
xor
mov
ficoms
sbb
push
jnp
inc
or
addr16
jnp
mov
ret
loope
movsl
in
xchg
xor
or
xchg
shlb
leave
inc
addb
adc
cmp
cmp
jle
jg
pop
std
call
gs
shlb
mov
lret
jnp
jbe
inc
mov
shll
push
mov
pop
addb
adc
cmp
cmp
imul
dec
mov
cmp
bound
in
sbb
xor
int
mov
addb
adc
cmp
cmp
xor
adc
addb
adc
cmp
cmp
mov
xchg
fwait
dec
lods
cli
data16
adc
adc
hlt
in
ret
mov
adc
adc
cmp
cmp
mov
push
mov
mov
cmp
movhps
mov
sbb
and
adc
push
dec
mov
addb
adc
cmp
cmp
cmpb
loopne
sub
fdiv
arpl
push
notl
adcb
adc
cmp
cmp
mov
ljmp
test
rclb
arpl
inc
pop
ds
or
addb
adc
cmp
cmp
fcmovbe
gs
dec
lods
sbb
enter
push
int3
xlat
and
push
test
loopne
mov
addb
cmp
cmp
mov
inc
mov
cmp
sbb
xor
addb
cmp
cmp
sub
dec
fisubs
mov
inc
stc
cmc
mov
mov
repnz
sti
enter
adcb
adc
cmp
cmp
mov
insl
cwtl
and
fldenv
lea
test
adc
adc
cmp
cmp
adc
adc
adc
cmp
cmp
mov
jl
mov
ja
hlt
mov
inc
xor
addb
cmp
cmp
mov
mov
addb
cmp
cmp
divb
ljmp
pop
testb
mov
xor
addb
adc
cmp
cmp
jecxz
mull
scas
addb
adc
cmp
cmp
xchg
adc
adc
cmp
cmp
mov
ret
jb
mov
cmp
add
lret
cmp
out
daa
xor
xor
xor
pop
cwtl
push
leave
shll
adc
adc
cmp
cmp
mov
inc
or
xchg
xchg
or
lahf
fsts
into
mov
jg
addb
adc
cmp
cmp
adc
fs
sbb
jbe
arpl
in
lcall
and
cmp
test
ja
and
inc
popa
movsl
fcoms
xorl
adcl
xchg
idivb
or
adc
adc
cmp
cmp
pusha
jle
and
jmp
push
in
or
lods
hlt
cwtl
cmp
inc
xor
pusha
ds
mov
das
test
nop
jae
loopne
jecxz
lock
adc
adc
cmp
cmp
mov
fst
and
mov
adc
adc
cmp
cmp
inc
add
xor
mov
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
mov
inc
dec
mov
es
outsl
mov
mov
fidivl
push
add
out
xor
xor
xor
sbb
mov
out
addb
cmp
cmp
mov
jno
mov
or
mov
push
and
mov
mov
mov
aad
push
push
addb
adc
cmp
cmp
filds
or
outsl
mov
xchg
mov
xor
scas
pop
and
sti
data16
xor
pop
pushf
aad
in
cmp
mov
cli
in
mov
hlt
mov
sbb
dec
pop
pop
mov
push
dec
jmp
insb
sub
fwait
shrl
adc
cmp
cmp
mov
push
sti
mov
sti
jne
sbb
addb
adc
cmp
cmp
push
loopne
sub
pusha
cmp
lret
loop
push
or
adc
adc
cmp
cmp
add
mov
jae
insb
loopne
pop
cmp
inc
dec
pop
loopne
jecxz
jnp
pop
mov
adc
and
sbb
dec
pop
fdivrs
sub
popf
addr16
shlb
popa
shll
add
loopne
fldl
popa
inc
jmp
add
push
cmc
sbb
mov
cmc
nop
inc
iret
in
outsb
mov
icebp
mov
addb
cmp
cmp
mov
inc
std
repnz
aas
aaa
scas
mov
push
mov
pushf
les
fsubl
push
pop
ret
addb
cmp
cmp
and
into
cli
arpl
cld
adc
pusha
dec
or
adc
adc
cmp
cmp
mov
push
xchg
inc
jb
pop
ret
call
xor
arpl
adcb
adc
cmp
cmp
mov
lcall
imul
adc
cmp
cmp
mov
pop
pop
jg
xor
pop
jne
xchg
int
mov
insl
push
js
cltd
mov
pop
test
lcall
jno
sbb
push
addb
adc
cmp
cmp
jb
aad
pop
cmp
inc
xorl
les
and
ficomps
addb
cmp
cmp
lea
leave
jmp
outsl
pop
jmp
mov
iret
imul
popa
into
std
and
jecxz
add
push
mov
adc
adc
cmp
cmp
mov
xchg
in
cmp
add
adcb
adc
cmp
cmp
mov
aad
ds
mov
adc
pop
fwait
jno
pop
lcall
adc
adc
cmp
cmp
mov
stos
add
mov
xchg
jo
mov
jne
cmp
es
addb
cmp
cmp
mov
sub
fwait
mov
inc
outsb
jns
sub
movl
cmp
cmp
ja
cmp
xchg
repz
xchg
add
pop
add
lcall
addb
cmp
cmp
test
sub
popf
bound
cwtl
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
push
cmpsl
iret
sbb
push
push
hlt
pop
int
addb
cmp
cmp
mov
mov
loopne
mov
ret
scas
sarl
adc
adc
cmp
cmp
cmp
mov
push
lret
icebp
cmc
sub
adcb
adc
cmp
cmp
mov
int
mov
push
mov
test
cmp
mov
pusha
add
adc
adc
cmp
cmp
adc
mov
or
xchg
fstl
add
or
addb
adc
cmp
cmp
sahf
mov
out
and
fsubrs
out
mov
dec
scas
pop
add
sti
fs
addb
adc
cmp
cmp
jp
push
gs
push
addb
adc
cmp
cmp
daa
imul
setnp
xchg
std
scas
ds
arpl
mov
add
sub
fnstcw
ss
addb
adc
cmp
cmp
xchg
cmp
shrb
imul
sub
inc
jae
push
push
addb
adc
cmp
cmp
lret
dec
push
xor
mov
test
addb
cmp
cmp
icebp
push
and
mov
pop
addb
adc
cmp
cmp
adc
push
addb
cmp
cmp
mov
rcrb
fcom
mov
push
pop
jo
adc
add
sti
jecxz
std
sub
fcmovnbe
xchg
bound
jbe
negl
addb
adc
cmp
cmp
sbb
ret
daa
aaa
cltd
mov
imul
repnz
mov
addb
cmp
cmp
mov
mov
and
and
addb
adc
cmp
cmp
addb
adc
cmp
cmp
add
mov
lahf
addb
adc
cmp
cmp
sub
lahf
inc
in
enter
bound
adc
adc
cmp
cmp
scas
hlt
mov
sub
push
jnp
mov
in
mov
lock
addr16
mov
pushf
dec
pop
push
lods
xchg
addb
adc
cmp
cmp
dec
cs
mov
rcrl
hlt
xlat
mov
dec
hlt
mov
adc
adc
cmp
cmp
mov
jmp
inc
xchg
mov
out
inc
mov
or
push
mov
popl
stos
cmp
fwait
push
adc
subl
popa
clc
dec
movsb
mov
xor
sbb
cmp
test
or
xor
test
xor
push
xchg
mov
jo
and
lods
sbb
addb
cmp
cmp
mov
insb
aaa
ret
loopne
fsubrs
mov
mov
sub
rcrl
insl
addb
adc
cmp
cmp
add
pop
mov
cwtl
cmc
mov
mov
jge
scas
inc
fcomps
add
adc
pop
dec
addb
adc
cmp
cmp
shlb
mov
mov
shrl
addb
adc
cmp
cmp
loopne
jno
jecxz
xchg
loope
xchg
lcall
pop
addb
adc
cmp
cmp
sbb
lcall
inc
mov
addb
adc
cmp
cmp
mov
das
cmpsl
push
jecxz
bswap
mov
addb
cmp
cmp
aas
bound
dec
ss
fisttpl
jno
aad
and
outsb
iret
xchg
lret
cmp
adcb
adc
cmp
cmp
mov
hlt
xor
outsb
cmpsb
popa
es
sbb
sar
lret
pop
mov
and
adc
adc
cmp
cmp
or
sub
ret
hlt
xor
sbb
shlb
push
cmp
test
pop
mov
xor
mov
mov
adcb
adc
cmp
cmp
mov
or
add
cmpsl
aam
mov
or
cs
sbb
test
mov
mov
sub
addb
cmp
cmp
in
pop
adc
addr16
mov
ret
je
arpl
jns
add
addb
cmp
cmp
mov
push
test
std
jmp
jo
std
sbb
iret
ljmp
push
add
xchg
lcall
les
sub
or
addb
cmp
cmp
movsb
dec
addb
adc
cmp
cmp
push
pop
cmp
dec
and
pop
addb
adc
cmp
cmp
or
sbb
rorb
jle
mov
addb
adc
cmp
cmp
xor
xor
arpl
lods
and
cmc
pop
outsl
rorl
das
xlat
push
inc
mov
adc
adc
cmp
cmp
leave
pop
pop
cwtl
and
mov
sbb
mov
dec
dec
movsb
movsb
sub
stc
xor
pop
jecxz
cmp
cmp
cmp
inc
hlt
rol
in
jbe
test
test
mov
ret
lcall
xchg
push
sbb
unpcklps
xchg
cmp
mov
inc
popf
outsl
or
mov
sbb
jns
movsl
xchg
icebp
repnz
mov
ret
sub
xlat
jmp
cmp
in
jmp
in
dec
sbbb
jbe
mov
or
ret
sahf
or
sbb
std
iret
bnd
add
movsl
push
aad
mov
fs
ret
int
xchg
xchg
push
push
out
inc
push
and
fstpl
xor
fimuls
cmpsb
adc
enter
daa
add
ja
stc
mov
fwait
mov
pop
dec
addr16
sbb
addb
cmp
cmp
mov
aas
iret
imul
or
pop
popa
enter
push
adc
adc
cmp
cmp
mov
push
dec
addb
adc
cmp
cmp
fidivs
in
shlb
or
inc
sub
cmpb
test
ss
inc
test
ja
mov
xorl
incl
push
jno
addb
cmp
cmp
mov
outsl
and
test
ficompl
lret
stos
push
aad
addb
cmp
cmp
mov
outsl
mov
add
mov
inc
sarl
popa
mov
add
mov
cmp
mov
iret
mov
jg
into
fcoml
xchg
ret
and
movsb
mov
ret
addb
cmp
cmp
mov
mov
fcompl
addb
adc
cmp
cmp
adc
addb
cmp
cmp
mov
inc
outsb
cmp
push
jp
addb
adc
cmp
cmp
sarb
dec
xor
outsb
mulb
pop
int
addb
cmp
cmp
mov
pop
and
inc
jns
and
outsb
cmp
mov
mov
push
mov
mov
fisubrs
adc
add
les
stos
sbb
pop
into
imul
cmp
jns
lret
sub
iret
addb
adc
cmp
cmp
shlb
xchg
sti
addb
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
ret
mov
in
pop
inc
je
aas
call
addb
cmp
cmp
mov
mov
dec
adc
mov
inc
fdivrs
out
addb
adc
cmp
cmp
mov
addr16
adc
inc
adc
push
fidivrs
or
add
movsl
nop
xor
addb
adc
cmp
cmp
out
push
mov
xchg
test
call
fdivr
jo
cwtl
pusha
insl
dec
mov
xchg
imul
xchg
inc
dec
xchg
pop
adc
cmp
pop
push
push
adc
adcb
adc
cmp
cmp
mov
inc
mov
cld
jno
into
mov
dec
iret
scas
out
loop
mov
movq
ljmp
lahf
addb
adc
cmp
cmp
cmp
hlt
push
roll
xchg
cmp
rolb
inc
dec
lret
addb
adc
cmp
cmp
sbb
adc
adc
cmp
cmp
inc
sub
cmp
adcb
adc
cmp
cmp
mov
push
dec
loopne
jbe
fwait
clc
dec
aam
jecxz
addb
cmp
cmp
mov
popa
push
shlb
jb
xor
ljmp
adc
iret
sub
gs
cmc
push
sti
setle
jne
dec
stos
push
adc
and
cmp
addb
cmp
cmp
mov
xchg
and
add
popa
addb
adc
cmp
cmp
in
in
dec
sub
jle
ret
lahf
gs
push
and
pop
into
and
pop
rcr
cmp
mov
adcb
adc
cmp
cmp
mov
mov
cmp
push
mov
xor
jo
cmp
cltd
cwtl
jnp
add
dec
lahf
or
in
addb
adc
cmp
cmp
shll
shlb
addb
adc
cmp
cmp
or
fbstp
mov
decb
insl
jle
je
inc
push
adcl
push
addb
adc
cmp
cmp
mov
push
inc
mov
insl
test
adcb
adc
cmp
cmp
mov
adc
movsb
dec
cs
push
jmp
fdiv
imul
cmp
cmp
add
cs
out
add
dec
pop
mov
sbb
scas
into
mov
lds
sahf
outsl
aad
xor
out
aas
pushf
ret
fsts
gs
cmp
and
push
xchg
std
xchg
jne
cwtl
lret
sbb
lock
pop
sub
addb
cmp
cmp
mov
shl
insb
addl
cld
cmp
fsubrs
stos
jg
mov
addb
adc
cmp
cmp
and
cs
inc
outsb
mov
inc
lcall
out
mov
adcb
adc
cmp
cmp
mov
paddsw
adcb
adc
cmp
cmp
mov
add
cmp
xchg
addb
adc
cmp
cmp
or
and
bound
mov
mov
bound
mov
fnsave
adc
jmp
test
pop
mov
inc
sub
addb
adc
cmp
cmp
jg
leave
push
cmpsb
cmp
push
stos
insb
pop
outsl
adc
sub
mov
adcb
adc
cmp
cmp
mov
mov
add
inc
cwtl
dec
into
inc
imul
btsl
decl
sarb
adc
adc
cmp
cmp
jmp
mov
fcomi
gs
mov
test
adc
or
dec
cmp
scas
ret
push
cmpsl
add
daa
pop
mov
mov
push
mov
call
and
aas
sarb
push
mov
jno
sbb
jo
dec
stc
sub
andb
addb
cmp
cmp
mov
mov
outsl
cwtl
cmp
fdivr
ret
mov
iret
addb
adc
cmp
cmp
rcl
jns
pop
test
sub
clc
pop
add
inc
test
out
jg
xor
fwait
into
add
cld
push
addb
adc
cmp
cmp
jo
jbe
sbb
stc
cli
scas
stos
cs
mov
out
dec
push
mov
dec
and
jbe
rcrb
adc
addb
cmp
cmp
mov
lret
lret
sbbb
sbb
adc
adc
cmp
cmp
cld
dec
mov
out
jb
loopne
mov
adc
mov
xor
jle
jmp
xchg
sbb
test
pop
stc
push
jmp
jns
cld
movsb
inc
imul
jnp
cmpsb
addb
adc
cmp
cmp
jne
sbb
sti
inc
or
mov
adc
adc
cmp
cmp
mov
cmpsl
or
ret
xchg
fildl
lods
jno
push
dec
out
add
loopne
sub
xchg
or
addb
adc
cmp
cmp
lds
popf
sar
add
adcb
adc
cmp
cmp
mov
enter
adcb
adc
cmp
cmp
mov
mov
nop
cmp
sub
cmp
xchg
addb
adc
cmp
cmp
xchg
lea
push
out
cs
jbe,pt
mov
sub
les
sub
cs
repnz
cwtl
mov
and
inc
and
dec
pop
add
mov
lds
adc
adc
cmp
cmp
xor
fiaddl
jg
xor
lret
sbb
xor
outsl
jmp
push
hlt
in
lcall
jo
mov
addb
adc
cmp
cmp
mov
xlat
mov
loope
iret
ds
call
cmp
xchg
addb
adc
cmp
cmp
or
inc
fdivr
mov
inc
imul
call
enter
lret
dec
push
pop
shr
cmp
test
loopne
movl
cmp
cmp
and
test
addb
adc
cmp
cmp
hlt
mov
push
cld
jne
test
dec
loop
adc
clc
xor
lret
cmp
sti
dec
push
lock
popa
cs
adc
jb
into
dec
cmc
cli
mov
addb
cmp
cmp
out
jge
stos
jnp
pop
fistpl
loope
iret
data16
or
mov
adc
pop
nop
xor
sti
jae
xlat
and
les
jae
addb
cmp
cmp
mov
mov
movsb
xchg
mov
cltd
popaw
and
push
rcrl
movsb
lea
insl
fcmovu
nop
adc
xor
pop
and
jo
mov
and
stos
sbb
cmp
jge
adc
mov
ljmp
mov
pop
dec
jno
popf
pop
scas
jmp
fmull
jae
sub
cmpsl
movsl
addb
adc
cmp
cmp
sbb
stos
fucomi
inc
clc
stos
movsl
sub
mov
popa
push
adc
in
int
inc
push
adcb
cmp
adc
add
pop
or
imul
cmp
cmp
cmp
lcall
call
int3
rclb
xchg
jmp
add
adc
adc
cmp
cmp
cmp
outsb
aad
mov
fwait
xor
sahf
or
sbb
adc
adc
cmp
cmp
mov
aad
addb
cmp
cmp
mov
add
adcb
adc
cmp
cmp
mov
ret
sarb
dec
nop
add
je,pt
push
insl
movsb
and
jb
cmp
fnstcw
subb
mov
lret
imul
jle
lret
jmp
in
xlat
data16
addb
cmp
cmp
mov
cwtl
adc
pushf
je
andb
push
push
sbb
xchg
inc
xchg
xchg
rcll
mov
jb
mov
ret
cli
inc
imul
dec
xor
push
loop
cmp
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
ja
das
pusha
addb
adc
cmp
cmp
mov
xchg
jmp
adc
jmp
jmp
mov
adc
mov
adc
adc
cmp
cmp
pushf
ljmp
int
fcom
mov
mov
lret
mov
jge
xor
or
gs
mov
decb
inc
in
cld
jecxz
pop
cmp
mov
pop
rol
std
cli
mov
repz
inc
movsl
pusha
push
cwtl
addb
adc
cmp
cmp
mov
xor
nop
xor
push
sbb
adc
adc
cmp
cmp
daa
cmp
rcrl
jbe
outsl
xor
loopne
incl
out
dec
jae
inc
mov
test
pop
lcall
addb
cmp
cmp
cmp
mov
fdivs
xor
push
insl
mov
push
jle
pop
mov
push
scas
daa
addb
adc
cmp
cmp
jl
imul
addb
cmp
cmp
mov
pop
jo
addb
adc
cmp
cmp
jecxz
loope
and
sub
addr16
sarb
fildll
iret
mov
cmp
sbb
push
dec
aad
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
push
inc
leave
mov
or
push
cltd
pushf
int
adc
ret
inc
stos
mov
adc
adc
cmp
cmp
mov
inc
push
inc
adcb
xlat
addb
adc
cmp
cmp
add
fs
dec
aad
jbe
test
push
addb
adc
cmp
cmp
dec
lds
pop
push
adc
adc
cmp
cmp
mov
pushf
fimuls
arpl
addb
adc
cmp
cmp
dec
scas
insl
adc
lahf
mov
call
andb
addb
adc
cmp
cmp
fstps
xor
dec
push
dec
pushf
cs
addb
adc
cmp
cmp
enter
addb
cmp
cmp
mov
xchg
jle
mov
mov
movsb
jns
sbb
stos
xor
jns
mov
sti
pop
jge
loope
jge
jge,pn
icebp
jnp
sahf
mov
or
pop
les
clc
sbb
fnstcw
scas
xchg
cmp
pop
fcompl
add
scas
adc
cli
add
fldl
addr16
outsl
lret
addb
cmp
cmp
mov
xor
addb
cmp
cmp
mov
mov
sub
inc
xchg
orl
adc
adc
cmp
cmp
mov
outsb
inc
lds
clc
cmp
std
popa
mov
outsb
es
fists
addr16
jp
rolb
cmpsb
sub
push
outsl
lods
fadds
sbb
addb
adc
cmp
cmp
and
aam
stos
ret
rorb
adcb
adc
cmp
cmp
mov
imull
mov
test
addb
cmp
cmp
mov
arpl
add
inc
mov
js
addb
adc
cmp
cmp
gs
fwait
arpl
mov
mov
scas
cmp
cmp
adc
adc
cmp
cmp
mov
es
mov
xor
mov
pop
and
fldcw
fmul
fnstcw
jmp
addb
cmp
cmp
mov
cmpb
pop
push
mov
clc
inc
cmpsb
loop
push
jge
xchg
int3
add
add
inc
fistps
adc
addb
cmp
cmp
dec
pop
rclb
mov
pop
ds
add
pop
add
or
idiv
int
addb
cmp
cmp
mov
cltd
sub
insl
stos
scas
pop
xor
mov
addb
adc
cmp
cmp
cmp
xchg
lret
xchg
inc
fsub
das
fwait
enter
hlt
jmp
dec
cmpsl
and
mov
rcrl
mov
aad
fsubrs
ss
cwtl
andl
arpl
jl
call
sbb
cmp
jnp
mov
adc
fnstsw
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
or
and
shrb
iret
jno
nop
push
je
push
xchg
out
adc
fildll
push
nop
insb
jbe
cmp
and
xchg
mov
adcb
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
dec
adc
cmp
adc
adc
cmp
cmp
repnz
xor
aam
call
or
sub
enter
jo
jge
cmp
shr
and
mov
fnstcw
sbb
dec
cmp
sbb
sub
test
ja
addb
cmp
cmp
mov
mov
fcoml
mov
push
subb
and
mov
sbb
xor
ret
cltd
pop
addb
in
addb
adc
cmp
cmp
call
inc
jmp
xchg
rclb
xor
aaa
inc
mov
mov
xor
adc
adc
cmp
cmp
out
jecxz
mov
dec
cmc
cmp
adcb
adc
cmp
cmp
mov
xorl
adcb
adc
cmp
cmp
mov
aad
jmp
addb
cmp
cmp
mov
in
pop
shll
sarb
daa
push
addb
adc
cmp
cmp
cmp
lea
mov
addb
adc
cmp
cmp
pop
sahf
cmp
adc
pop
test
mov
faddl
and
mov
mov
mov
mov
test
jp
in
aam
add
adc
adc
cmp
cmp
outsl
pop
or
or
adc
jl
mov
fwait
dec
movsl
or
addb
cmp
cmp
mov
fs
pop
pop
decl
push
mov
sbb
addb
adc
cmp
cmp
jl
and
push
add
sbb
addr16
xchg
jle
pop
pop
leave
addb
adc
cmp
cmp
xor
lret
sbb
dec
push
mov
mov
jbe
add
xchg
mov
sarl
mov
push
imull
addb
adc
cmp
cmp
sbb
out
addb
adc
cmp
cmp
addb
adc
cmp
cmp
add
push
sub
sub
push
add
fisubrs
push
mov
mov
call
cmc
xchg
jo
xchg
mov
push
addb
adc
cmp
cmp
mov
cmp
jnp
in
jns
and
mov
and
pop
sbb
mov
testl
push
ds
inc
inc
mov
addb
adc
cmp
cmp
gs
mov
adc
add
mov
xchg
fst
test
call
sub
addb
cmp
cmp
mov
repnz
stos
and
and
stos
je
push
lret
enter
mov
addb
cmp
cmp
xchg
push
mov
leave
inc
mov
push
js
test
pusha
outsl
addb
adc
cmp
cmp
lret
addb
adc
cmp
cmp
dec
pop
addb
adc
cmp
cmp
leave
aam
sarb
cltd
mov
iret
push
push
xchg
push
xchg
jg
xlat
add
mov
mov
adc
adc
cmp
cmp
ret
outsl
adc
in
sbb
out
sbb
adc
xchg
xor
in
addb
cmp
cmp
mov
enter
addb
cmp
cmp
mov
jae
or
sub
adc
adc
cmp
cmp
mov
movsl
pop
pop
push
lcall
addb
cmp
cmp
mov
loopne
sub
lahf
addr16
into
dec
sbb
mov
addb
adc
cmp
cmp
adc
jmp
push
arpl
sub
fidivrs
mov
mov
mov
pop
cltd
xlat
les
cmc
lahf
add
push
shrl
xor
xor
cmpsb
mov
insl
push
aaa
mov
jno
jae
mov
addb
cmp
cmp
mov
daa
addb
adc
cmp
cmp
in
xlat
mov
dec
jbe
or
addb
cmp
cmp
mov
xor
mov
add
je
sarb
fwait
xchg
cmp
mov
mov
xor
aas
jecxz
sti
mov
inc
jo
aaa
addb
dec
bound
fcomp
into
outsb
xchg
dec
adc
and
loope
sbb
nop
dec
xchg
add
mov
jmp
icebp
mov
js
sub
xchg
sub
xlat
sub
add
fidivl
adcb
adc
cmp
cmp
mov
dec
in
xor
in
lret
push
mov
je
aas
add
mov
bound
xchg
pop
ret
repz
mov
addb
cmp
cmp
mov
cmp
cmp
adc
inc
in
test
mov
mov
addb
cmp
cmp
mov
sub
addb
adc
cmp
cmp
movsb
pop
insl
add
addb
adc
cmp
cmp
popa
addb
adc
cmp
cmp
dec
sarl
cltd
jg
call
mov
adc
push
xchg
out
pop
or
fisubrl
jp
out
rcll
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
out
arpl
scas
movb
adc
cmp
cmp
mov
call
push
xor
adcb
adc
cmp
cmp
mov
jbe
test
jnp
adc
pop
xchg
outsl
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
cltd
aas
pop
xor
sub
call
addb
cmp
cmp
imul
adc
adc
cmp
cmp
push
sbb
insb
lret
dec
jl
or
icebp
xor
mov
loop
add
xorl
adc
adc
cmp
cmp
int3
cmp
stc
mov
sahf
addb
adc
cmp
cmp
pop
xchg
je
inc
dec
addb
adc
cmp
cmp
xchg
xor
adc
adc
cmp
cmp
adc
shll
popa
inc
adc
enter
jmp
imull
inc
addb
adc
cmp
cmp
pushf
loop
mov
and
inc
push
xchg
repnz
add
out
sbb
and
pusha
into
jnp
cmpsl
dec
dec
lea
addb
adc
cmp
cmp
mull
xchg
mov
lock
es
push
sub
rolb
adc
cmp
cmp
mov
jns
mov
push
arpl
cmpsb
mov
je
gs
test
pop
mov
out
cmp
out
adc
aad
cmp
jbe
cs
ret
pop
cmp
out
inc
jno
lret
std
cmpsl
mov
jg
daa
imul
mov
push
or
mov
xchg
outsl
mov
push
scas
addb
adc
cmp
cmp
sbb
shl
xchg
or
insl
enter
cs
pop
mov
mov
xor
aas
lods
adc
push
push
shll
mov
or
adc
adc
cmp
cmp
mov
out
addb
adc
cmp
cmp
popf
xlat
stos
mov
adc
adc
cmp
cmp
addb
adc
cmp
cmp
lret
adc
mov
rorb
stos
fnstenv
outsl
add
hlt
mov
addb
cmp
cmp
mov
adc
push
bsf
ret
rolb
xchg
adc
adc
cmp
cmp
adc
sarl
imul
sarl
jbe
cmpsb
repz
aaa
icebp
enter
addb
cmp
cmp
mov
jb
or
out
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pusha
sti
loope
pop
dec
ffreep
dec
loop
sub
repz
mov
ds
test
ja
notl
xchg
jns
es
cmp
adc
adc
cmp
cmp
mov
push
adc
mov
and
das
push
pop
sbb
push
jp
fwait
add
xor
roll
addb
cmp
cmp
not
addb
adc
cmp
cmp
test
mov
into
enter
dec
scas
dec
mov
test
and
xor
sbb
mov
xchg
add
call
test
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xor
inc
aaa
adc
addb
out
js
dec
in
jg
inc
scas
test
mov
sub
jb
imul
stc
test
push
sub
addb
cmp
cmp
add
aaa
push
jns
movb
inc
test
out
cmp
adc
mov
sub
xchg
xor
sub
adcb
adc
cmp
cmp
mov
lret
jno
and
aam
sub
enter
mov
and
ficoml
mov
lret
ret
addb
adc
cmp
cmp
add
aaa
mov
nop
mov
movsb
cmpsl
int
gs
addb
cmp
cmp
mov
cmp
adcb
adc
cmp
cmp
mov
adc
in
xchg
push
call
inc
lahf
mov
inc
pusha
xchg
ret
addb
cmp
cmp
popa
popa
jbe
xor
push
pop
pushf
xchg
aad
inc
inc
mov
lods
add
adc
adc
cmp
cmp
adc
mov
scas
in
int
dec
sub
sbb
ljmp
add
jb
adc
adc
cmp
cmp
movsl
mov
out
lods
cld
movl
adc
cmp
cmp
inc
in
addb
adc
cmp
cmp
popa
add
ds
or
mov
jbe
imul
popf
ficoms
rorb
ret
and
stc
cmc
cli
lea
adc
pop
add
addb
adc
cmp
cmp
dec
xchg
cmp
jl
fnstcw
imul
adc
adc
cmp
cmp
mov
pop
mov
lret
mov
dec
xchg
and
jno
sub
out
mov
jbe
cli
jg
jp
addb
adc
cmp
cmp
in
sub
aam
cltd
dec
loop
sub
cmpsl
jb
into
daa
inc
scas
stc
adc
out
or
out
xchg
jmp
mov
inc
pop
sbb
adc
adc
cmp
cmp
and
or
addb
adc
cmp
cmp
imul
adc
int
and
inc
rolb
sbb
sub
addb
cmp
cmp
mov
push
scas
hlt
mov
addb
adc
cmp
cmp
ja
addb
adc
cmp
cmp
xor
repnz
loop
pusha
in
addr16
addb
cmp
cmp
mov
ret
addb
cmp
cmp
or
and
mov
outsl
sub
adcb
adc
cmp
cmp
mov
sub
stc
fs
movsl
loop
addb
cmp
cmp
mov
cwtl
std
addb
adc
cmp
cmp
pop
adc
mov
aad
lds
cmp
add
ffree
push
addb
adc
cmp
cmp
mov
test
jb
out
sub
scas
jle
in
push
lret
movsl
sub
push
lds
nop
adc
std
jb
sbb
adc
adc
cmp
cmp
xchg
cmp
adc
adc
cmp
cmp
mov
mov
sub
mov
pushf
stos
and
adc
adc
cmp
cmp
mov
xchg
cmp
add
pop
loope
mov
adcb
adc
cmp
cmp
mov
inc
add
adcb
adc
cmp
cmp
mov
lret
add
mov
test
pop
and
push
test
cmp
jnp
fs
xchg
adc
push
lcall
testl
cmp
cmp
and
mov
addb
adc
cmp
cmp
subl
pop
or
sar
jge
xchg
scas
push
and
pop
addb
adc
cmp
cmp
cld
push
mov
icebp
mov
jo
inc
clc
adc
lods
sbb
adc
adc
cmp
cmp
loop
lds
lcall
add
add
jns
or
pop
stos
sbb
or
mov
cmp
adcb
adc
cmp
cmp
mov
lds
dec
dec
mov
inc
xor
mov
int3
outsl
icebp
sbb
push
pop
mov
arpl
mov
pop
fwait
popf
sbb
jnp
std
and
xor
out
push
cmp
push
nop
mov
mov
mov
xor
lock
addb
cmp
cmp
mov
addb
adc
cmp
cmp
out
push
int3
inc
lret
push
and
sub
adc
bound
outsb
addb
adc
cmp
cmp
add
or
fdivrl
or
scas
andl
addb
cmp
cmp
outsl
sub
xlat
sub
icebp
push
or
adc
addr16
std
mov
sub
pusha
mov
adcb
adc
cmp
cmp
mov
jnp
pop
push
addb
cmp
cmp
mov
pusha
mov
std
mov
pop
sbb
int
and
rcr
out
sbb
adcb
adc
cmp
cmp
mov
or
mov
scas
or
dec
lss
scas
lret
out
in
ret
mov
mov
jno
mov
pop
pushf
ds
xlat
jp
pop
rolb
adc
cmp
cmp
mov
inc
in
pop
push
cmp
mov
addl
movsl
js
xlat
mov
adc
adc
cmp
cmp
dec
lret
pop
jo
call
adcb
adc
cmp
cmp
mov
sahf
push
cwtl
out
dec
movb
mov
fwait
xchg
ljmp
enter
addb
cmp
cmp
inc
movsl
cld
push
push
fcomip
data16
cmp
cmc
or
addb
adc
cmp
cmp
sbb
ljmp
pxor
push
mov
int3
shll
sub
inc
cld
out
inc
jbe
addb
adc
cmp
cmp
cmp
stos
jo
inc
jp
inc
lods
into
test
xchg
negl
fimuls
addb
adc
cmp
cmp
mov
xlat
addb
adc
cmp
cmp
mov
je
or
addb
cmp
cmp
mov
push
fsubp
dec
in
xchg
cmp
addb
cmp
cmp
mov
loope
shll
push
addr16
addb
cmp
cmp
mov
fdivs
adcb
adc
cmp
cmp
mov
aas
inc
aad
xchg
test
dec
lods
xchg
jbe
add
adc
adc
cmp
cmp
mov
mov
nop
mov
movsb
ret
out
test
pop
sbb
mov
enter
xchg
stc
mov
addb
cmp
cmp
mov
cli
push
pop
sub
addb
cmp
cmp
int
fwait
sbb
push
pop
pop
push
or
sarb
in
int3
add
outsb
cmp
jo
jge
push
ret
and
shrb
outsb
nopl
pop
xor
sub
sub
outsl
std
aad
lods
into
pop
out
addb
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
out
notb
rcl
and
jnp
sub
sbb
mov
fsubs
aas
mov
addb
adc
cmp
cmp
gs
addr16
lods
fsubr
aaa
leave
xchg
int
sub
jecxz
insl
dec
fcmovne
in
movsb
cmp
jae
cvtdq2ps
dec
jae
or
adc
adc
cmp
cmp
mov
loopne
addb
cmp
cmp
mov
xor
push
jle
addb
cmp
cmp
mov
mov
adc
jmp
mov
mov
lods
popa
push
xchg
xchg
aam
push
xor
cli
pop
jp
popf
jae
fs
sti
pop
addb
adc
cmp
cmp
mov
sti
addb
adc
cmp
cmp
cmpsl
test
mov
cld
pushf
outsb
mov
mov
sub
addb
cmp
cmp
mov
jns
notl
cwtl
mov
addb
cmp
cmp
mov
mov
sub
push
in
repz
adc
adc
cmp
cmp
and
jge
rol
inc
shlb
cmp
xchg
inc
mov
cmp
mov
adc
adc
cmp
cmp
mov
or
inc
addb
adc
cmp
cmp
fmuls
outsb
push
pusha
ficompl
addb
cmp
cmp
mov
push
mov
rcrb
addb
cmp
cmp
pop
flds
inc
out
hlt
dec
stos
repnz
loope
xor
mov
addb
cmp
cmp
sbb
orl
inc
addb
adc
cmp
cmp
loop
test
mov
popf
arpl
mov
adc
adc
cmp
cmp
mov
dec
inc
mov
addb
cmp
cmp
push
sub
cmc
cmp
mov
sub
ja
add
pop
add
jae
sub
addb
adc
cmp
cmp
in
bnd
scas
addb
adc
cmp
cmp
push
mov
out
xor
pop
cmp
sbb
jae
jecxz
mov
test
lret
aaa
jnp
sub
push
push
mov
loope
add
cwtl
data16
or
or
adcb
adc
cmp
cmp
mov
pop
icebp
movsb
shlb
lock
iret
sbb
movsl
push
sti
outsb
popa
lahf
in
testb
push
icebp
pop
xor
sub
adc
sub
or
dec
les
adc
adc
cmp
cmp
inc
call
xchg
jnp
pop
jo
and
add
dec
mov
mov
addb
cmp
cmp
mov
insb
mov
mov
out
addr16
addb
adc
cmp
cmp
divl
add
clc
popa
mov
sbb
dec
call
mov
adc
adc
cmp
cmp
lret
lahf
cwtl
cld
jb
aam
sub
push
out
and
mov
out
sbbl
add
stos
jl
icebp
mov
jbe
adc
fsts
mov
mov
adc
js
pop
test
sbb
addb
cmp
cmp
mov
iret
pop
xchg
sub
and
addb
adc
cmp
cmp
out
jecxz
adc
aam
and
in
sub
int3
stos
outsb
sub
xor
js
dec
lret
outsb
sahf
lret
or
ret
addb
adc
cmp
cmp
loopne
xchg
lcall
adc
sti
cmp
aas
adc
movl
dec
pop
lret
mov
jnp
sbb
addb
adc
cmp
cmp
or
mov
adc
fwait
in
mov
nop
lods
cmp
addb
cmp
cmp
mov
cmp
push
sbb
sbb
mov
jo
out
push
incl
addb
cmp
cmp
cltd
stc
imul
adcb
adc
cmp
cmp
mov
sub
fiaddl
fdivs
xlat
out
cmp
xlat
xchg
popa
mov
adc
and
xchg
push
cmc
scas
mov
add
jecxz
and
and
or
aam
inc
inc
out
mov
xor
cmp
bound
or
xor
adc
jo
mov
ds
cmpsl
bound
arpl
xchg
mov
jecxz
addb
cmp
cmp
mov
movb
push
mov
lahf
gs
addb
adc
cmp
cmp
cld
push
test
ret
xchg
loop
addb
adc
cmp
cmp
test
dec
xor
test
mov
addb
adc
cmp
cmp
add
or
repz
addb
adc
cmp
cmp
repz
stos
jbe
gs
addb
cmp
cmp
add
push
gs
sbb
adcb
adc
cmp
cmp
mov
cli
xor
addb
cmp
cmp
mov
xchg
addb
adc
cmp
cmp
push
rolb
or
popf
fmul
addb
adc
cmp
cmp
or
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
dec
addb
adc
cmp
cmp
mov
out
pop
inc
sbbl
mov
addb
cmp
cmp
xor
add
insb
mov
addb
adc
cmp
cmp
fimull
cmp
arpl
addb
adc
cmp
cmp
and
dec
in
dec
roll
adc
adc
cmp
cmp
push
xchg
xchg
jb
testb
xchg
sbb
cli
popf
xlat
mov
or
sub
addb
adc
cmp
cmp
inc
mov
sub
jge
xchg
sbbl
lods
sub
outsl
popa
lret
mov
addb
cmp
cmp
sub
addb
adc
cmp
cmp
and
jge
mov
mov
addb
cmp
cmp
mov
insb
xor
pusha
divl
push
scas
jg
addb
adc
cmp
cmp
xor
push
dec
addb
adc
cmp
cmp
or
jnp
or
adc
jb
add
test
pop
out
fsqrt
cmp
popf
insl
divb
mov
daa
xlat
or
adc
adc
cmp
cmp
outsl
addb
adc
cmp
cmp
shlb
fisttpl
addb
cmp
cmp
mov
sub
adc
adc
cmp
cmp
mov
outsb
dec
dec
pop
jb
mov
mov
jns
jns
inc
imul
adc
cmp
cmp
mov
pop
dec
pop
test
insb
popl
xor
push
and
iret
adc
xchg
fs
addb
adc
cmp
cmp
push
mov
pop
leave
mov
inc
dec
femms
inc
aad
mov
jne
int
out
mov
addb
adc
cmp
cmp
push
pop
aaa
lods
sbb
std
ret
sub
cmpsl
pusha
or
aaa
aam
jo
addb
adc
cmp
cmp
cmc
addl
mov
inc
movsl
or
and
leave
repz
addb
adc
cmp
cmp
adc
out
sub
ffree
sbb
addb
adc
cmp
cmp
int
mov
cmp
cld
dec
call
loopne
dec
repz
test
jns
aaa
jns
js
lock
addb
adc
cmp
cmp
stc
jns
dec
repnz
mov
orb
insl
fsubl
into
or
dec
cli
orl
cmp
cmp
mov
mov
add
addb
cmp
cmp
mov
inc
push
arpl
push
mov
mov
mov
sbb
cmpsl
cli
addb
adc
cmp
cmp
hlt
lcall
and
mov
test
inc
adc
addb
adc
cmp
cmp
cwtl
cmp
xlat
mov
addb
cmp
cmp
mov
pop
push
aad
inc
insb
test
and
imul
mov
sub
int
cld
adc
cmc
add
dec
scas
xchg
scas
sbb
pop
add
mov
and
xchg
ss
outsl
inc
pop
jne
shl
std
repz
mov
test
addl
addb
cmp
cmp
mov
out
addb
cmp
cmp
mov
add
adc
adc
cmp
cmp
mov
test
cli
pop
mov
add
adc
adc
cmp
cmp
mov
cli
jb
jmp
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
dec
icebp
repz
loopne
push
dec
es
fnsave
xchg
add
xlat
in
sbb
mov
scas
addb
adc
cmp
cmp
les
add
jl
or
adc
or
out
sbb
cltd
xlat
aas
iret
mov
inc
pop
das
mov
pop
into
scas
pop
inc
loop
sub
mov
outsb
push
cltd
mov
addb
cmp
cmp
fsubrs
hlt
mov
sub
sbb
cmp
imul
or
sub
in
ja
cmp
adc
adc
cmp
cmp
mov
mov
xor
xorb
or
in
jp
cltd
ja
cltd
xchg
mov
roll
push
shll
mov
jbe
xlat
pop
negl
addb
cmp
cmp
mov
dec
push
call
adc
adc
cmp
cmp
mov
pop
insb
sub
mov
jmp
dec
fwait
pop
jmp
lret
mov
dec
jo
and
inc
mov
ss
sahf
jns
xchg
jp
jno
dec
adc
repnz
fbld
pusha
and
mov
fmull
out
or
mov
xchg
icebp
sub
fucomi
shl
fs
addb
cmp
cmp
mov
ret
addb
cmp
cmp
in
sbb
jae
out
out
mov
and
pop
rcll
cltd
dec
stos
adc
addb
adc
cmp
cmp
push
mov
dec
inc
test
addb
adc
cmp
cmp
push
aad
xchg
xchg
sti
mov
adcb
adc
cmp
cmp
mov
pop
stos
jae
addb
cmp
cmp
mov
xor
addb
cmp
cmp
mov
sar
jge
lock
xchg
jo
push
in
addb
adc
cmp
cmp
lcall
push
jle
push
les
fistl
cs
xchg
mov
adc
pusha
pop
addb
adc
cmp
cmp
test
adc
adc
cmp
cmp
mov
popa
pusha
jge
lret
addb
adc
cmp
cmp
test
loope
popw
and
adc
jge
and
xadd
fwait
lret
fwait
ret
addb
adc
cmp
cmp
adc
aam
push
test
mov
das
mov
and
orl
inc
cwtl
addb
adc
cmp
cmp
pop
mov
xorl
dec
bound
addb
cmp
cmp
mov
popa
inc
adc
or
std
fistpll
cmp
outsb
mov
js
pop
fwait
lahf
lret
and
std
addb
adc
cmp
cmp
pushf
aam
test
xor
xchg
sbb
stos
push
dec
mov
and
sahf
mov
lret
mov
in
dec
outsl
dec
movsl
adc
pushf
out
out
mov
jmp
pop
test
cmp
or
loop
cs
fiadds
pop
and
cli
push
lods
cs
loopne
jmp
adcb
adc
cmp
cmp
mov
dec
mov
into
movsb
cmp
imul
mov
adc
adc
cmp
cmp
mov
movsl
repz
addb
adc
cmp
cmp
push
sub
cmp
jae
jle
lcall
jno
fistpll
add
mov
addb
cmp
cmp
mov
sub
nop
pop
and
addb
cmp
cmp
mov
jle
push
push
into
arpl
lods
out
repz
jns
cmc
sbb
movb
adc
cmp
cmp
mov
cld
pop
jl
add
jbe
lsl
add
or
jb
addb
adc
cmp
cmp
jns
and
out
sbb
iret
fsubs
mov
inc
in
sbb
stos
pop
pop
fistpll
push
aas
sub
pop
movsb
or
mov
push
adc
push
xchg
push
xchg
std
xor
cli
push
shlb
ss
loopne
aad
or
js
addb
cmp
cmp
mov
push
dec
enter
roll
insb
mov
pop
call
cli
or
leave
mov
push
or
mov
fcmovne
stc
adcb
jmp
daa
popa
jle
repnz
in
cld
xchg
lahf
stos
insl
addb
adc
cmp
cmp
faddl
push
push
scas
mov
jns
mov
jp
adcl
nop
addb
adc
cmp
cmp
es
inc
xor
mov
addb
adc
cmp
cmp
stos
xor
fldenv
negb
inc
movsl
shr
dec
je
addb
adc
cmp
cmp
mov
adc
mov
dec
repz
jl
cmpsb
sbb
inc
xor
pushf
notl
xor
rolb
push
jmp
gs
mov
addb
adc
cmp
cmp
aas
scas
out
cmc
jecxz
inc
pop
mov
popa
mov
jp
lret
or
pop
mov
push
test
adc
jecxz
mov
mov
adc
adc
cmp
cmp
mov
aaa
mov
adc
iret
push
jb
sbb
addb
cmp
cmp
cmpsb
test
or
imulb
sti
pop
out
mov
addb
cmp
cmp
dec
data16
in
insl
mov
aam
mov
jnp
lret
mov
addb
adc
cmp
cmp
adc
lahf
pushl
sub
dec
mov
jl
aam
jnp
push
movsl
addb
adc
cmp
cmp
dec
jge
rcl
shl
out
xor
lods
std
jp
mov
lret
js
scas
icebp
and
or
pusha
adc
xchg
mov
adcb
adc
cmp
cmp
mov
xchg
sub
imul
or
push
xchg
mov
add
decl
dec
enter
outsl
jp
adc
sbbb
out
inc
sub
and
jle
insl
xchg
cmp
pop
loope,pn
loope
push
pop
adc
sub
adc
adc
cmp
cmp
mov
and
icebp
sub
xor
addb
adc
cmp
cmp
cwtl
orl
push
in
cmp
es
cs
es
pop
imul
pop
add
lret
xchg
sub
sub
adc
adc
cmp
cmp
mov
ror
jnp
push
sub
cs
mov
mov
das
sbb
pop
mov
push
les
addb
cmp
cmp
mov
and
je
in
addb
cmp
cmp
mov
lea
or
aam
dec
movsl
rorl
adc
adc
cmp
cmp
mov
aaa
adc
jno
cmp
mov
pslld
jnp
jecxz
xchg
sub
mov
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
adc
ret
dec
scas
mov
js
and
addb
cmp
cmp
jbe
mov
test
xor
int3
pop
xor
inc
adc
jg
pop
pop
mov
scas
in
frstor
hlt
hlt
loop,pn
cmpsl
enter
sbb
leave
and
popa
hlt
clc
sbb
adcb
adc
cmp
cmp
mov
movsl
jo
addb
cmp
cmp
mov
push
repz
in
pop
insl
nop
dec
push
stc
insb
addb
adc
cmp
cmp
lods
in
push
sub
gs
xor
adcb
adc
cmp
cmp
mov
sahf
jmp
xchg
imul
lret
dec
lahf
and
or
jns
add
adcb
adc
cmp
cmp
mov
push
incl
adc
adc
cmp
cmp
or
popf
xchg
push
sub
scas
lret
xor
inc
mov
test
leave
lock
int
or
into
scas
gs
pop
loope
sbb
pop
cmp
mov
adc
adc
cmp
cmp
xor
ret
adc
outsl
aaa
mov
push
pop
fbstp
or
xchg
fs
and
cmp
jmp
shrl
push
mov
and
xchg
jb
add
mov
mov
ja
cs
inc
xchg
aam
inc
scas
rol
xchg
or
enter
or
add
ljmp
push
pushf
scas
pushf
jge
and
dec
sti
mov
addb
adc
cmp
cmp
sub
adcb
adc
cmp
cmp
mov
mov
into
jnp
or
mov
loop
pop
push
icebp
mov
addb
adc
cmp
cmp
repnz
mov
cmp
inc
cmp
addb
cmp
cmp
dec
addb
adc
cmp
cmp
ljmp
inc
xchg
push
and
pop
xchg
imul
addb
cmp
cmp
data16
test
dec
mov
addb
cmp
cmp
mov
aam
inc
push
filds
adc
adc
cmp
cmp
inc
cmp
lods
adc
and
ljmp
int3
lea
adc
adc
cmp
cmp
cltd
int
mov
js
mov
addb
cmp
cmp
insb
push
and
pop
push
cmp
cmp
ret
in
push
mov
dec
addb
adc
cmp
cmp
push
cmp
mov
lods
adc
adcb
adc
cmp
cmp
mov
and
arpl
in
or
adc
adc
cmp
cmp
std
addb
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
sahf
aas
addb
cmp
cmp
mov
ljmp
jno
cli
mov
mov
test
mov
outsb
jecxz
addb
adc
cmp
cmp
fdivrl
gs
cmp
sbbl
pushl
push
addb
adc
cmp
cmp
dec
lds
cmp
mov
addb
sub
adc
adc
cmp
cmp
mov
out
xor
pop
push
addb
adc
cmp
cmp
sub
mov
sbb
fmul
shl
and
cmp
or
adcb
adc
cmp
cmp
mov
adc
fdivrs
dec
mov
dec
popa
aad
pop
addb
adc
cmp
cmp
dec
mov
and
sbb
xor
push
sub
rcr
cld
dec
int3
addb
adc
cmp
cmp
stos
lret
pop
lcall
xchg
fisttps
sub
mov
out
mov
mov
dec
loop
lock
xchg
dec
outsb
xchg
cmp
sbb
adc
adc
cmp
cmp
mov
xor
cmp
addb
cmp
cmp
mov
sub
addb
adc
cmp
cmp
xchg
pop
push
cmc
sbb
repnz
popl
ss
addb
cmp
cmp
mov
fucomi
out
pop
adc
or
loope
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
out
ret
aad
jmp
es
cli
loop
xorl
mov
repnz
xor
in
inc
push
gs
adc
sbb
xchg
jl
xchg
call
lret
pop
fwait
inc
mov
addb
cmp
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
scas
and
pop
xor
fdivrs
movsb
fdivl
das
and
notrack
loopne
mov
in
orl
or
outsb
push
mov
addb
adc
cmp
cmp
je
sub
lods
popa
daa
addb
adc
cmp
cmp
cmpl
adc
adc
cmp
cmp
aad
int
jbe
cmp
jae
mov
repnz
mov
inc
cmp
pop
adc
cmp
fcmovu
dec
push
jns
addb
adc
cmp
cmp
or
js
inc
lds
sbb
lcall
enter
adcb
adc
cmp
cmp
mov
jg
mov
in
xor
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
test
ret
pop
add
xchg
add
cmp
xor
adc
adc
cmp
cmp
push
loopne
mov
stc
rolb
adc
adc
cmp
cmp
pop
pop
cmpl
outsb
cmc
push
out
or
add
addb
adc
cmp
cmp
mov
data16
fimull
insb
pop
and
dec
xor
loope
cmp
inc
pop
xchg
add
repnz
mov
je
int3
push
insb
xor
adc
adc
cmp
cmp
mov
adcl
stos
dec
xor
cld
jb
repnz
fisttpl
mov
aam
inc
call
iret
movb
adc
cmp
cmp
mov
sbb
arpl
inc
repz
out
js
negl
inc
push
inc
dec
sub
pop
lods
lret
fwait
and
ror
jl
loope
pop
mov
repnz
fmuls
cld
lahf
lcall
mov
movsb
add
dec
and
out
movsb
nop
xor
fwait
imulb
ret
flds
adc
adc
cmp
cmp
jb
addb
cmp
cmp
mov
adc
pop
pop
imul
adc
adc
cmp
cmp
mov
repnz
sarl
dec
and
adc
adc
cmp
cmp
mov
push
sbb
and
push
daa
cmc
ret
addb
cmp
cmp
addb
adc
cmp
cmp
adc
mov
push
gs
test
leave
mov
test
push
jns
add
sub
xchg
imul
js
outsb
dec
xor
addb
adc
cmp
cmp
aam
adc
cmp
adc
psllw
push
dec
leave
stc
sbb
addb
adc
cmp
cmp
aad
dec
insb
cmp
pop
sahf
sub
dec
sub
mov
cmp
lcall
adc
adcb
adc
cmp
cmp
mov
les
xchg
test
cmp
lret
and
cmpsl
xor
pop
fsubs
loop
inc
mov
sub
push
inc
jp
in
dec
pop
and
cmp
repnz
ret
ja
dec
push
in
addb
adc
cmp
cmp
or
scas
and
jmp
push
rol
sbb
addb
cmp
cmp
mov
mov
cwtl
mov
lods
pushf
out
addb
cmp
cmp
mov
daa
jge
lret
addb
cmp
cmp
mov
sub
out
dec
add
pop
aad
xlat
test
cmc
scas
or
jmp
pop
xor
jge
stos
iret
cmpsb
sub
and
or
into
push
sub
std
addb
adc
cmp
cmp
addb
adc
cmp
cmp
ret
dec
push
leave
jmp
fiaddl
neg
ret
movsb
and
mov
dec
inc
imul
cmp
inc
xor
cmp
adc
adc
cmp
cmp
sti
stc
push
sub
sbb
mov
jge
push
lea
and
cmp
and
dec
mov
pop
subl
addb
cmp
cmp
sub
cmp
addb
cmp
cmp
jmp
lahf
push
mov
mov
sti
sbbb
je
mul
inc
outsl
es
lret
out
ret
pusha
popf
addb
adc
cmp
cmp
lret
mov
movsb
dec
or
xchg
jno
negb
cmp
mov
cmp
xchg
mov
or
addb
adc
cmp
cmp
cmp
addb
adc
cmp
cmp
fdivr
outsb
pop
adc
fstpt
andl
adc
adc
cmp
cmp
call
ret
cmp
sbb
and
pop
push
lock
addb
adc
cmp
cmp
and
jmp
les
addb
adc
cmp
cmp
xchg
pop
sahf
shlb
shlb
jnp
mov
insb
mov
mov
mov
adc
add
lahf
in
or
adc
adc
cmp
cmp
mov
jnp
addb
cmp
cmp
mov
enter
pop
pusha
into
imul
adc
cmp
cmp
mov
scas
pop
test
and
arpl
popf
out
divb
addb
cmp
cmp
sbbl
pop
mov
rolb
cmp
jl
inc
leave
daa
dec
gs
mov
jmp
ret
inc
sarb
dec
stos
fcomps
add
movsl
jns
sbb
adcb
adc
cmp
cmp
mov
jne
aam
mov
xchg
adc
adc
cmp
cmp
adc
enter
addb
cmp
cmp
cmp
fcompl
push
and
add
pusha
inc
jecxz
sub
cmp
sar
addb
adc
cmp
cmp
ss
loopne
std
pop
ror
mov
mov
addb
cmp
cmp
call
inc
sarl
adc
adc
cmp
cmp
mov
adc
jne
fldcw
inc
sbb
pusha
idivb
test
test
addb
cmp
cmp
mov
daa
nop
push
rcrl
add
adc
js
xor
jmp
aad
roll
adc
adc
cmp
cmp
push
push
jns
popa
imul
or
and
jmp
dec
inc
sub
sub
mov
and
jbe
and
push
sbb
xchg
fnstsw
mov
fildl
adc
adc
cmp
cmp
mov
test
inc
mov
mov
scas
shlb
add
in
jecxz
out
notb
adcb
adc
cmp
cmp
mov
cmp
icebp
mov
clc
insb
mov
nop
addb
adc
cmp
cmp
mov
adc
in
int3
mov
stc
add
adc
ficoms
test
mov
sub
aas
test
sbbl
mov
xchg
filds
fsubr
adc
mov
out
xor
or
inc
fildll
loope
mov
jno
fs
lods
xor
mov
ljmp
lret
addb
cmp
cmp
mov
fs
mov
leave
xchg
adc
mov
xchg
or
shll
xchg
cs
adcb
adc
cmp
cmp
mov
lods
aad
xchg
popa
pop
out
cmp
mov
jae
and
addb
cmp
cmp
mov
incb
dec
test
movsl
dec
adc
mov
cld
movsl
mov
movsl
jb
adc
adc
cmp
cmp
mov
andl
out
mov
enter
pop
sbb
inc
mov
mov
bound
or
sbb
inc
imul
cmc
cmp
cwtl
xlat
int3
addb
adc
cmp
cmp
sbb
mov
mov
push
sbb
push
dec
aam
aaa
jb
pop
popa
add
xchg
daa
jmp
jmp
out
int3
jle
lcall
adc
aas
jecxz
cltd
lea
lret
xchg
or
fstpl
pop
push
inc
addb
adc
cmp
cmp
fidivs
jmp
insb
cmpb
jmp
fstpl
je
addb
adc
cmp
cmp
cmpsb
hlt
lea
inc
sbb
push
fadds
adc
adc
cmp
cmp
std
sbb
mov
and
adcb
adc
cmp
cmp
mov
xchg
outsb
or
test
or
add
xchg
clc
test
cwtl
and
sbb
pop
stos
pminub
push
sarl
pop
addr16
dec
mov
addb
cmp
cmp
xchg
push
mov
lret
das
call
sub
or
sbb
mov
mov
lret
mov
arpl
push
shll
xchg
ficompl
adc
addb
adc
cmp
cmp
scas
pop
or
insl
call
mov
add
lods
in
adc
xlat
or
and
jmp
inc
add
jmp
aad
fcoml
mov
test
adc
adc
cmp
cmp
lea
inc
hlt
addb
adc
cmp
cmp
dec
cmp
addb
cmp
cmp
mov
push
lahf
and
in
lahf
sub
and
repnz
popf
pushf
rcrb
cmp
test
cmp
fldcw
test
mov
ret
pop
in
jne
cltd
aaa
push
into
stc
movsl
add
add
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
arpl
xor
adc
adc
cmp
cmp
mov
pop
aas
inc
int
sbb
addb
cmp
cmp
mov
outsb
pop
shrl
movsb
cmp
js
ljmp
add
pop
mov
leave
test
xor
hlt
es
addb
cmp
cmp
dec
popa
xor
stos
jns
pop
int
int3
pop
xchg
cs
lods
pop
xor
or
loope
xor
rdpmc
cmpsb
out
or
adc
adc
cmp
cmp
mov
push
inc
xor
addb
adc
cmp
cmp
insb
nop
cs
fcoms
mov
shrb
addb
cmp
cmp
hlt
inc
in
push
jbe
xor
adc
adc
cmp
cmp
lock
pop
sbbb
and
adc
adc
cmp
cmp
mov
push
and
jbe
mov
cs
or
loopne
addb
adc
cmp
cmp
jp
mov
insb
popa
mov
cmp
addb
cmp
cmp
mov
rclb
addb
cmp
cmp
sbb
push
neg
cmpsb
imul
ret
xor
and
addb
adc
cmp
cmp
lahf
sub
dec
lds
sbb
or
movsl
jns
push
sub
xchg
arpl
or
shlb
lret
stos
xlat
nop
mov
mov
pop
cli
dec
leave
stc
or
add
xor
push
mov
dec
addb
adc
cmp
cmp
adc
sbb
xchg
jno
inc
pop
scas
jb
nop
cmp
xor
sarb
xor
popf
sub
aaa
hlt
xchg
insb
push
icebp
imul
out
stos
je
addb
adc
cmp
cmp
jnp
dec
add
imul
adc
adc
cmp
cmp
mov
and
addb
cmp
cmp
mov
sti
idivb
pop
loopne
int3
addb
adc
cmp
cmp
push
sbb
cwtl
testb
xor
ret
test
jl
push
addb
adc
cmp
cmp
cmpsl
arpl
push
adc
sbb
push
addb
cmp
cmp
mov
lods
scas
insb
jmp
inc
js
jae
mov
and
pop
lret
xor
mov
sub
outsl
sti
mov
adc
adc
adc
cmp
cmp
xor
enter
add
out
mov
addb
adc
cmp
cmp
icebp
cmpb
imul
mov
addb
adc
cmp
cmp
push
jmp
rolb
adc
cmp
cmp
mov
push
sub
mov
jle
je
divps
movsb
xchg
mov
stos
faddp
push
adc
in
push
jecxz
addb
adc
adc
cmp
cmp
out
addb
adc
cmp
cmp
sahf
inc
fld
jmp
sbb
inc
loope
add
adc
adc
cmp
cmp
lea
inc
jge
cld
xor
xor
icebp
lock
into
call
aad
shll
xchg
ret
inc
dec
or
leave
int
cmpsb
lds
push
mov
pop
lods
inc
insb
ds
adcb
adc
cmp
cmp
mov
int3
out
addb
cmp
cmp
mov
in
push
sbb
addb
adc
cmp
cmp
xchg
bound
daa
inc
addb
adc
cmp
cmp
test
addb
cmp
cmp
mov
lahf
fcompl
adc
clc
fisubrs
pop
cmp
addb
cmp
cmp
mov
pop
sub
mov
fsub
cld
cmp
roll
adc
cmp
cmp
mov
popa
fsts
adc
cli
into
sbb
fisttps
hlt
jns
inc
aaa
push
mov
aas
xchg
pop
pop
fdivp
pop
push
iret
rolb
adc
cmp
cmp
mov
fisttpl
or
push
jno
fucom
adc
movsl
test
aaa
pusha
arpl
adc
adc
cmp
cmp
repnz
aad
pushf
jecxz
inc
pop
mov
addb
cmp
cmp
ret
inc
addb
adc
cmp
cmp
pushf
inc
test
xor
mov
push
cmp
push
xchg
repz
enter
stc
ud0
mov
adc
adc
cmp
cmp
mov
jge
xor
jge
mov
repz
and
jmp
ret
aas
push
pop
jmp
adcb
adc
cmp
cmp
mov
jge
and
int
dec
das
and
movsl
pop
mov
addb
adc
cmp
cmp
and
mov
movsl
jmp
ljmp
addb
adc
cmp
cmp
pop
pop
or
or
mov
pop
xchg
sub
pop
mov
adc
adc
cmp
cmp
mov
rclb
popa
hlt
or
xchg
inc
sbb
aaa
inc
push
pushl
sbb
mov
pop
ja
inc
push
dec
mov
mov
dec
aad
ret
addb
cmp
cmp
mov
addb
adc
cmp
cmp
jge
mov
adcb
adc
cmp
cmp
mov
cmp
adc
ss
mov
imul
stc
scas
mov
sbb
imull
addb
adc
cmp
cmp
repnz
xchg
inc
addb
adc
cmp
cmp
inc
addr16
cmp
inc
bound
sub
add
dec
cmc
xchg
push
je
mov
test
lahf
jo
adc
imul
enter
cs
mov
push
call
mov
lods
in
test
in
fstpl
adc
add
int3
sti
jecxz
addb
add
or
mov
adc
iret
mov
sbb
xor
addb
cmp
cmp
mov
into
push
adc
adc
cmp
cmp
mov
push
jge
loope
fs
cli
outsb
arpl
xor
mov
dec
mov
xchg
dec
pop
mov
cmp
mov
cmp
inc
mov
notl
sbb
icebp
mov
adc
pop
adc
mov
jmp
sbb
lretw
addr16
sub
stos
addb
adc
cmp
cmp
pop
push
jp
jbe
addb
cmp
cmp
mov
adc
ret
addb
cmp
cmp
mov
dec
sbb
pop
data16
adc
cmp
cmp
pop
push
xchg
xor
gs
sbb
nop
mov
shrb
les
enter
adc
mov
xor
mov
lock
lds
test
cmpsb
stos
addb
adc
cmp
cmp
out
popf
cli
addb
adc
cmp
cmp
pusha
ss
inc
dec
iret
mov
adcb
adc
cmp
cmp
mov
ficoms
or
mov
lods
mov
jle
fs
in
sar
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
stc
aad
and
ljmp
aas
cmc
pop
mov
pusha
lahf
jae
sbb
sti
nop
mov
xor
lea
sub
addb
cmp
cmp
mov
fwait
or
jge
stos
in
xchg
aas
or
cld
sbb
jbe
pop
or
ss
addr16
addb
adc
cmp
cmp
scas
dec
pusha
cli
adc
out
sbbb
fidivrl
dec
scas
jno
rclb
and
jno
adcb
mov
cli
jno
loope
sbb
adc
adc
cmp
cmp
add
sub
addb
cmp
cmp
mov
xchg
and
jecxz
mov
pusha
jmp
repnz
mov
lret
rorb
push
pop
arpl
push
cmpsl
pop
xchg
adcb
adc
cmp
cmp
mov
pop
or
jae
aam
dec
addb
adc
cmp
cmp
xor
sbb
lods
in
jge
and
cli
pop
or
dec
stos
xlat
sub
xor
test
pop
mov
imul
addb
cmp
cmp
mov
int3
repnz
xchg
sbb
adc
adc
cmp
cmp
mov
adcl
sahf
pop
adc
stos
or
hlt
adc
dec
mov
addb
adc
cmp
cmp
scas
mov
sub
sub
int
mov
adcb
adc
cmp
cmp
mov
xor
addb
adc
cmp
cmp
dec
addb
adc
cmp
cmp
arpl
cmp
cmp
pop
sbb
iret
negl
push
insb
lcall
ss
popf
in
test
je
fstps
out
ss
nop
sub
push
adc
addb
adc
cmp
cmp
outsb
pop
lahf
cmp
and
pop
ret
push
addb
adc
cmp
cmp
pusha
sbb
mov
mov
loopne
mov
lods
lock
mov
cmpsb
rorl
pop
sub
adcb
adc
cmp
cmp
mov
push
cmp
add
adc
loope
hlt
mov
or
add
and
xchg
cmpl
addb
adc
cmp
cmp
into
push
and
push
push
out
addb
adc
cmp
cmp
or
sti
rcll
addb
adc
cmp
cmp
push
jno
mov
pop
cmp
xor
ds
loop
popa
gs
adc
jle
jns
inc
adc
lret
aaa
loopne
pop
jmp
inc
sub
xor
cmpsl
add
sbb
iret
add
call
adcb
adc
cmp
cmp
mov
mov
adcl
sbb
roll
mov
lock
push
mov
dec
ret
addr16
repz
jl
xor
inc
std
add
and
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
dec
xor
dec
push
push
je
adc
adc
adc
cmp
cmp
or
lds
addb
adc
cmp
cmp
hlt
stos
pop
lods
push
jne
shll
scas
subl
addb
cmp
cmp
jle
data16
out
inc
imul
adc
cmp
cmp
mov
inc
sqrtps
stos
and
mov
test
inc
test
popa
addb
adc
cmp
cmp
mov
fidivl
das
out
and
lock
shll
imul
movb
repnz
cli
dec
pop
xor
mov
fidivl
xchg
push
call
adc
adc
cmp
cmp
mov
fwait
enter
adc
lret
dec
sbb
shl
into
xor
adc
adc
cmp
cmp
pop
add
in
stc
jmp
and
shrl
push
dec
lods
push
arpl
sbb
loop
mov
sub
lret
dec
insb
rolb
fs
cwtl
repnz
jne
xor
adc
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
cmp
jbe
cmc
pop
cli
fsubr
adc
cmpb
adc
adc
cmp
cmp
or
addb
cmp
cmp
mov
dec
imul
jb
pop
pop
push
rcll
adc
adc
cmp
cmp
mov
mov
bnd
add
adc
adc
cmp
cmp
repnz
rcll
fdivl
jp
lock
jmp
push
addb
adc
cmp
cmp
cmp
addb
cmp
cmp
mov
xor
dec
pop
mov
ss
in
push
int
inc
mov
addb
cmp
cmp
mov
mov
mov
adc
push
mov
jmp
cli
add
faddl
addb
cmp
cmp
mov
mov
add
addb
cmp
cmp
sahf
addb
adc
cmp
cmp
jl
add
xchg
mov
insb
insb
lret
movb
jp
push
or
jg
cld
movsl
adc
das
jne
loopne
outsb
pop
mov
xchg
out
popf
fs
jmp
fmul
adcb
push
sbb
xor
sub
or
jno
sbb
aas
dec
mov
pop
sub
xor
and
addb
cmp
cmp
mov
int
cmpl
aam
or
sub
scas
fdivrs
adc
adc
cmp
cmp
mov
cmpsl
imul
sub
cltd
test
shrl
orb
addb
cmp
cmp
sar
int
fidivrs
cmpsl
mov
cld
addb
adc
cmp
cmp
pop
out
daa
mov
cmp
pop
mov
addb
cmp
cmp
std
lock
out
hlt
test
mov
pop
add
or
cmp
mov
xor
stos
add
cltd
inc
pop
test
addb
cmp
cmp
mov
call
add
movsb
das
cld
dec
sbb
lds
aas
mov
jecxz
xchg
dec
inc
sub
inc
in
and
xchg
cmp
jno
pop
push
and
arpl
push
sbb
jne
fldcw
je
mov
std
xchg
jb
bound
sbbl
outsb
lret
pop
divb
sbbb
ret
dec
dec
repz
push
cmp
add
cmp
addb
cmp
cmp
mov
jp
push
push
cld
addb
adc
cmp
cmp
push
and
aad
jp
and
scas
adc
pop
in
ss
pusha
int
aaa
inc
arpl
adc
adc
cmp
cmp
mov
arpl
stos
cld
fildll
fwait
dec
and
adc
adc
cmp
cmp
pop
addb
adc
cmp
cmp
ja
in
lahf
cmp
xor
scas
sbb
fcomip
pop
mov
mov
stc
scas
add
sbb
jmp
cmpb
pushf
mov
xchg
mov
mull
addb
cmp
cmp
add
movsl
jp
in
fwait
mov
mov
pop
sbb
daa
and
fiadds
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
cmp
jg
xchg
add
jmp
adcl
jno
dec
xchg
addb
adc
cmp
cmp
xchg
jmp
andb
cwtl
out
add
loopne
mov
inc
xchg
stos
pop
js
sbb
addb
adc
cmp
cmp
flds
adc
adc
cmp
cmp
push
or
cbtw
sub
roll
and
inc
sbbl
arpl
rep
cmp
inc
cmp
jno
and
sub
and
xor
test
orb
sbb
jge
pop
addb
adc
cmp
cmp
or
aad
in
jl
fucom
add
push
pop
in
xor
or
or
push
add
lds
shll
rcr
repz
pmaddwd
sahf
testl
cmp
cmp
shl
mov
addb
cmp
cmp
cmp
sahf
xor
subb
aam
addb
cmp
cmp
mov
mov
insb
mov
lahf
or
mov
sti
xor
adc
inc
addb
mov
push
fisubrs
iret
pop
int
xchg
fs
and
push
lret
fwait
or
cmpsb
and
cmp
lret
inc
inc
aam
xor
fildll
int
dec
inc
fiadds
adc
adc
cmp
cmp
imul
das
cmc
incl
addb
adc
cmp
cmp
pop
rolb
jmp
clc
int3
pop
push
out
nop
push
jns
add
loope
jmp
push
ret
mov
addb
cmp
cmp
mov
pop
cmp
cmp
push
inc
push
lods
cli
andl
adc
adc
cmp
cmp
mov
loope
int
rcrl
addb
cmp
cmp
mov
push
popa
addb
adc
cmp
cmp
daa
and
sbb
mov
fsubrl
mov
popf
test
subl
add
or
nop
pop
sub
jnp
addb
adc
cmp
cmp
mov
rcrl
mov
andb
stos
mov
in
imul
std
push
inc
test
test
hlt
cmp
addb
adc
cmp
cmp
iret
ljmp
adc
adc
cmp
cmp
mov
cltd
ror
test
pop
sbb
sbb
test
jle
addb
adc
cmp
cmp
mov
mov
mov
flds
and
cwtl
ds
je
rolb
xchg
loope
dec
repnz
addb
adc
cmp
cmp
lahf
mov
push
cmpl
mov
ret
addl
cmp
cmp
inc
loopne
mov
insb
icebp
xor
push
sbbl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
or
sbbb
addb
cmp
cmp
gs
xchg
pop
mov
addb
cmp
cmp
mov
push
and
lahf
add
inc
call
addb
cmp
cmp
sbb
adc
adc
cmp
cmp
mov
dec
insl
pop
pop
fdiv
push
xchg
imul
mov
pop
pop
push
movsl
push
push
addb
adc
cmp
cmp
cld
addb
adc
cmp
cmp
addb
adc
cmp
cmp
shll
addb
cmp
cmp
inc
hlt
jge
lahf
pop
repnz
inc
pushf
movsl
in
out
jl
pop
shll
out
xchg
loopne
addb
adc
cmp
cmp
push
adc
mov
or
inc
fs
pop
mov
xor
adc
pop
mov
adc
adc
cmp
cmp
mov
and
cld
push
push
xlat
fstl
adcb
adc
cmp
cmp
mov
mov
call
or
pop
outsl
dec
cmp
add
jl
inc
jmp
lods
sub
call
stc
adc
adc
adc
cmp
cmp
mov
push
ret
cld
mov
lahf
mov
adc
mov
orb
addb
adc
cmp
cmp
out
ljmp
inc
jle
jns
mov
sub
push
add
jge
in
push
mov
loop
test
addb
cmp
cmp
movsl
sbb
negl
inc
out
and
jo
addb
adc
cmp
cmp
popa
lock
adc
cmp
cmp
ficoms
fisubrs
add
incb
adc
adc
cmp
cmp
or
push
stos
ret
mov
adc
and
call
sti
notl
das
dec
mov
mov
cmpl
adcb
adc
cmp
cmp
mov
rcl
sub
jno
icebp
fcmovu
mov
addb
cmp
cmp
jno
xchg
std
pushf
imul
adc
cmp
cmp
mov
stos
ret
jnp
and
fistl
xor
addr16
add
sarb
xor
pushl
fnsave
pushf
ljmp
adcb
adc
cmp
cmp
mov
cmp
adc
mov
xchg
addb
adc
cmp
cmp
loope
xchg
lds
adc
adc
cmp
cmp
jl
mov
cmp
mov
int3
jne
scas
daa
scas
adc
in
cltd
addb
adc
cmp
cmp
je
addb
cmp
cmp
mov
addr16
adc
push
sbb
aam
push
and
cmp
jne
mov
enter
pop
jns
lods
mov
rcrb
add
js
fs
out
inc
mov
xor
subb
adc
jns
xor
jo
mov
addb
cmp
cmp
mov
inc
xor
sbb
addb
cmp
cmp
rol
mov
out
lret
jg
mov
enter
xor
bound
pop
add
rcrl
mov
sbb
jecxz
movb
adc
cmp
cmp
mov
push
scas
dec
mov
icebp
stos
addb
adc
cmp
cmp
int3
jl
out
xchg
mov
xchg
cmpsb
mov
xor
jp
jge
push
into
imul
in
das
push
mov
in
movsb
addb
adc
cmp
cmp
pop
xchg
icebp
mov
cmp
pop
or
sub
adcb
adc
cmp
cmp
mov
movsl
movsb
out
pop
call
lods
dec
stos
adc
sbb
sub
jns
addb
adc
cmp
cmp
and
xchg
lret
cld
inc
xor
cvtps2pi
addb
adc
cmp
cmp
sbb
divl
cmp
push
dec
addb
adc
cmp
cmp
idivl
lret
out
int
or
adc
adc
cmp
cmp
addl
call
mov
adcb
adc
cmp
cmp
mov
xorl
cmp
cmp
mov
add
sub
push
into
outsb
orb
jo
insl
xor
addb
cmp
cmp
mov
and
and
mov
int
mov
call
cld
dec
jmp
sbb
addb
cmp
cmp
xlat
and
stos
mov
push
add
push
or
addb
cmp
cmp
mov
addb
cmp
cmp
mov
xchg
loope
jecxz
repnz
add
fstl
mov
outsb
jb
mov
and
or
shrb
push
lods
jl
adc
jnp
insb
addb
adc
cmp
cmp
push
imul
stc
js
and
push
js
outsl
pop
lods
lods
xchg
or
jns
mov
rcrb
loop
mov
push
inc
jge
fs
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
xchg
ret
adc
addb
cmp
cmp
mov
push
cmp
mov
jge
xor
roll
aam
idiv
mov
adc
addb
cmp
cmp
mov
push
popf
adc
jae
and
push
enter
push
xchg
sub
sbb
xchg
into
fstpl
jae
mov
leave
jp
add
push
addr16
daa
mov
cmp
shrb
ret
cli
mov
mov
addb
cmp
cmp
mov
clc
popa
jns
out
mov
mov
mov
filds
addb
adc
cmp
cmp
push
jl
mov
add
stos
xor
or
out
loop
pop
push
test
add
fmull
fsub
pop
jae
imul
test
ret
pop
loope
push
addb
adc
cmp
cmp
imulb
dec
xchg
ret
nop
xor
sbb
pop
addb
adc
cmp
cmp
subl
or
cmpsl
mov
incb
sub
jno
test
mov
inc
mov
addr16
inc
ja
out
lods
jp
lret
pop
sti
cmp
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
dec
pushf
shrl
bound
adc
adc
cmp
cmp
int
mov
bound
sub
pop
pop
loop
jecxz
mov
lods
inc
add
stos
movsb
cmpl
jb
jecxz
jbe
or
std
xorb
xchg
mov
cmp
scas
pop
adc
inc
inc
mov
loope
lods
sbb
mov
addb
adc
cmp
cmp
adc
add
pop
aaa
cmp
or
mov
addb
adc
cmp
cmp
je
loope
addb
cmp
cmp
mov
movsb
fistpll
aas
ret
andb
cmpsl
mov
loop
jl
add
sti
sbb
mov
test
dec
mov
sub
mov
jnp
pushf
fdivrp
and
mov
sbb
push
jg
xor
xor
inc
aad
lret
addb
cmp
cmp
lock
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
shl
mov
pop
xor
int
lds
ror
cmp
test
and
les
pop
add
mov
jmp
cltd
inc
ficompl
test
xor
mov
pop
lcall
lods
xchg
dec
aad
outsl
sbb
test
pop
adcb
xor
adc
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
cmp
and
rclb
lret
or
ljmp
repnz
inc
lods
call
test
lock
pop
adc
outsb
and
or
test
addb
adc
cmp
cmp
xchg
push
sbb
neg
cld
addb
adc
cmp
cmp
mov
cmpsb
lods
adc
popf
addb
adc
cmp
cmp
data16
pop
xchg
pop
negl
addl
ljmp
nop
cs
or
adc
addb
adc
cmp
cmp
push
popf
int
clc
mov
sbb
adcb
adc
cmp
cmp
mov
dec
insl
pop
mov
pop
or
and
imul
bound
mov
push
stc
pop
popf
dec
sti
cmpsl
sub
dec
scas
int3
or
addb
adc
cmp
cmp
add
and
jno
inc
lcall
iret
js
clc
adc
xor
negl
xor
lcall
addb
cmp
cmp
mov
mov
daa
sub
jmp
pop
xor
sub
fistpll
mov
mov
xchg
scas
icebp
ss
aam
ds
incl
adc
adc
cmp
cmp
jmp
xchg
and
scas
nop
mov
adc
stos
jbe
ss
sbb
addb
cmp
cmp
xchg
addb
adc
cmp
cmp
cmp
sbb
xchg
sti
dec
fs
fadd
and
pop
sub
xor
pop
out
test
or
jns
addb
cmp
cmp
mov
fcmovbe
hlt
mov
inc
movsb
xor
insl
pop
or
push
and
fwait
sbb
jne
push
es
shrl
loopne
shl
loopne
add
gs
ss
inc
mov
adcb
adc
cmp
cmp
mov
cmpsl
stc
cmpsb
xor
cltd
not
cmp
in
iret
xor
mov
addb
adc
cmp
cmp
out
jae
ds
push
jo
xor
fisubrs
popa
lahf
xchg
pop
cmp
pop
fisttps
addb
adc
cmp
cmp
hlt
add
repnz
test
pop
pop
and
repnz
daa
xchg
ja
mov
push
mov
pop
lods
inc
out
sub
mov
push
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
int
pop
imul
ficompl
movsb
icebp
sub
fsubrl
icebp
ret
popa
or
adc
adc
cmp
cmp
inc
jnp
lret
cmc
mov
gs
in
inc
xchg
aam
adc
or
jmp
mov
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sub
mov
mov
inc
lahf
outsb
maskmovq
sub
dec
fdivrl
push
sub
sbb
icebp
mov
lcall
addb
cmp
cmp
addl
adc
cmp
cmp
mov
push
addb
adc
cmp
cmp
movsl
mov
mov
subl
cmp
xchg
xchg
mov
cmp
addb
cmp
cmp
mov
es
aas
or
adc
adc
cmp
cmp
mov
pushf
call
out
pop
out
jl
scas
orb
addb
cmp
cmp
mov
add
sbb
test
sub
mov
add
lods
push
add
xlat
sbb
fldl
addb
adc
cmp
cmp
mul
lret
stos
and
cmp
stc
mov
mov
data16
syscall
addr16
sti
sahf
sti
pop
or
addb
adc
cmp
cmp
fstl
repnz
scas
ret
mov
adc
mov
push
lock
fsubl
enter
adcb
adc
cmp
cmp
mov
sub
repz
movsl
into
addb
adc
cmp
cmp
add
movsb
aam
pop
addb
adc
cmp
cmp
ds
fdivrs
imul
adcb
adc
cmp
cmp
mov
stc
add
adc
add
popa
pop
sub
ljmp
sub
sub
pushf
ror
enter
add
pop
xchg
or
inc
mov
scas
cmpsl
lea
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
loope
dec
and
pop
adc
lcall
push
mov
push
mov
xor
imul
mov
jae
jecxz
xchg
xchg
arpl
mov
pusha
dec
je
rcl
pop
addb
adc
cmp
cmp
call
addb
cmp
cmp
orl
adc
mov
nop
pop
adc
xlat
adc
addb
cmp
cmp
mov
xchg
std
or
jne
addb
adc
cmp
cmp
xlat
mov
das
sarb
adc
adc
cmp
cmp
mov
and
cmpsb
stos
jo
stos
sub
mov
adcb
adc
cmp
cmp
mov
movsb
dec
addb
adc
cmp
cmp
mov
addb
cmp
cmp
cmc
sti
jnp
pop
cwtl
das
sbb
std
pop
out
lahf
cmp
cmpsb
mov
popa
mov
xchg
ret
addb
xchg
scas
sbb
mov
mov
addb
adc
cmp
cmp
or
xchg
sub
test
cmpsl
mov
addb
cmp
cmp
mov
dec
and
insl
mov
addb
adc
cmp
cmp
sub
ret
pop
aas
mov
xor
addb
cmp
cmp
mov
mov
ds
sbb
jo
push
dec
enter
addl
adc
cmp
cmp
mov
ret
scas
inc
xor
adc
adc
cmp
cmp
jns
add
mov
adcb
adc
cmp
cmp
mov
repnz
imul
dec
sub
addb
adc
cmp
cmp
icebp
mov
and
adc
mov
in
incl
addb
cmp
cmp
pop
lretw
pushf
nop
lea
fprem1
movsb
imul
imul
push
dec
inc
es
inc
scas
lcall
adc
jo
xchg
mov
add
add
sub
out
mov
mov
cmp
mov
scas
pusha
jl
andb
xchg
push
lret
adc
addb
adc
cmp
cmp
push
jo
fnstcw
mov
sub
addb
cmp
cmp
pop
inc
mov
shl
int
pop
or
repz
mov
cmpsb
jb
movd
mov
sbb
jbe
bound
adc
es
sarb
addb
cmp
cmp
mov
xor
das
in
mov
and
fwait
out
movsl
movsl
std
or
scas
popa
addl
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pusha
repnz
fcmovnbe
imul
cmp
cmp
inc
repz
addb
adc
cmp
cmp
sahf
movsb
idivb
cltd
mov
stos
or
push
orb
xchg
and
adcb
adc
cmp
cmp
mov
dec
xchg
lods
ja
stos
icebp
stc
jmp
addb
cmp
cmp
mov
lock
outsl
jl
mov
add
sbb
inc
xlat
mov
push
pop
push
xor
test
mov
jl
adc
mov
es
faddl
adc
adc
cmp
cmp
shr
xchg
ja
ret
add
div
inc
loopne
mov
cmp
jnp
adc
rolb
push
push
into
adc
icebp
fcom
inc
int3
fisttpll
dec
sbb
pop
test
addb
cmp
cmp
mov
xchg
mov
inc
pop
hlt
shrl
mov
int3
and
add
lcall
xor
cmpsb
mov
and
cli
mov
adc
into
jnp
aaa
clc
dec
cmp
addb
adc
cmp
cmp
fdiv
lods
sub
flds
fiaddl
adc
adc
cmp
cmp
test
sarb
push
ja
and
mov
clc
in
or
xor
adc
adc
cmp
cmp
mov
xlat
lods
add
sbb
mov
lret
shlb
test
test
leave
mov
dec
and
mov
fidivrs
jne
addb
cmp
cmp
mov
sub
into
into
push
lock
jl
fcomp
out
cmp
dec
push
cmp
xor
adc
adc
cmp
cmp
inc
xor
fbld
push
call
stos
aad
lods
sbb
mov
addb
adc
cmp
cmp
jb
addb
adc
cmp
cmp
mov
lret
in
push
sbb
pop
addb
adc
cmp
cmp
lret
mov
xor
fwait
in
movsb
push
cli
push
cmp
adc
adc
cmp
cmp
mov
notl
xchg
xor
mov
addb
adc
cmp
cmp
jge
nop
sahf
clc
addb
adc
cmp
cmp
push
sub
lahf
sub
adc
adc
cmp
cmp
daa
je
inc
and
cs
mov
imulb
das
xchg
movsl
cwtl
stc
popa
sbb
repz
adc
cmp
cmp
imul
adc
cmp
cmp
sub
popf
sahf
mov
addb
adc
cmp
cmp
or
xchg
enter
loop
ret
dec
add
jp
addb
cmp
cmp
mov
push
dec
addb
adc
cmp
cmp
mov
xchg
nop
jo
or
cli
sub
dec
pop
sti
and
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
loope
aas
sbb
push
mov
mov
addb
cmp
cmp
mov
test
xor
pop
mov
icebp
movsl
jo
xchg
addb
adc
cmp
cmp
lea
jnp
outsl
mov
js
pop
push
cmpsl
push
das
pop
outsl
push
add
mov
cmp
push
out
imul
adc
fstpt
pop
in
jno
aad
das
addb
adc
cmp
cmp
jecxz
cmc
xchg
pop
mov
addl
xor
popf
ret
cmpsb
push
outsb
lret
lret
push
js
sbb
push
cmp
pop
cltd
cmp
scas
or
addb
cmp
cmp
mov
test
imul
addb
adc
cmp
cmp
daa
cmp
dec
call
pop
dec
scas
push
ljmp
mov
xor
loopew
sub
pop
sub
in
or
or
sub
push
lea
jo
pop
faddl
jp
or
loop
fidivl
dec
movsl
sub
stc
push
mov
addb
cmp
cmp
addb
adc
cmp
cmp
dec
pop
and
dec
test
mov
scas
push
sub
addb
adc
cmp
cmp
nopl
enter
bound
adc
adc
cmp
cmp
mov
sbb
hlt
xor
insl
rorb
jle
shr
pusha
lretw
int
jb
jmp
stos
lea
xchg
mov
popf
mov
add
addb
adc
cmp
cmp
insb
pop
aaa
and
sbb
stos
sub
jae
dec
addb
adc
cmp
cmp
mov
push
pop
aad
jbe
cmp
loope
aad
cmp
ja
inc
and
movsl
xlat
mov
in
popa
ficompl
adc
adc
adc
cmp
cmp
vsqrtpd
aas
cmp
addb
adc
cmp
cmp
sti
xchg
jge
pop
addb
adc
cmp
cmp
mov
clc
aam
addb
cmp
cmp
mov
adc
add
inc
pop
ss
nop
cmp
popa
xor
popf
push
dec
push
addb
adc
adc
cmp
cmp
or
adc
adc
cmp
cmp
push
addb
adc
cmp
cmp
mov
js
sub
fnstcw
adcb
adc
cmp
cmp
mov
out
ret
ds
adc
adc
cmp
cmp
mov
loopne
fs
fstl
cmc
inc
cmp
aaa
stos
enter
sbb
addb
adc
cmp
cmp
lods
or
pop
lods
or
sub
cwtl
enter
je
addb
cmp
cmp
mov
pop
dec
jnp
push
lret
jg
fists
add
adc
adc
cmp
cmp
fmuls
pop
or
jbe
mov
xchg
inc
and
and
inc
fwait
mov
push
hlt
sub
xchg
mov
imul
cmp
xchg
in
lock
pop
xor
xchg
sbb
repz
dec
test
sub
xchg
inc
sub
addb
adc
cmp
cmp
movsb
lea
ret
ds
and
mul
adc
mov
das
roll
addb
adc
cmp
cmp
adc
addb
adc
cmp
cmp
aam
xlat
dec
jbe
adc
adcb
adc
cmp
cmp
mov
inc
test
mov
imul
addb
adc
cmp
cmp
or
shl
sbb
out
fnstenv
xchg
sub
imul
adc
adc
cmp
cmp
rorb
cltd
mov
adcb
adc
cmp
cmp
mov
mov
cbtw
jno
loop
sti
sbbl
cmpsl
jae
addb
cmp
cmp
mov
pop
addb
adc
cmp
cmp
mov
lods
jge
inc
and
loope
sbb
addb
cmp
cmp
mov
and
rorb
les
fdivrs
mov
jl
addb
adc
cmp
cmp
fwait
mov
int
insb
je
aad
xchg
cmp
dec
sbb
pop
fimuls
pusha
call
loopne
jne
lcall
fnstsw
shlb
push
jmp
aam
mov
push
jnp
addb
cmp
cmp
mov
scas
hlt
xchg
sbbl
and
outsb
aam
xor
xor
adc
adc
cmp
cmp
mov
mov
lahf
pop
pusha
bound
fcomip
stc
sbb
pop
pop
xor
data16
sbb
sub
frstor
pop
jo
dec
lret
sub
pop
decb
imul
adc
adc
cmp
cmp
loopne
push
cmp
push
addb
cmp
cmp
mov
movsb
testb
addb
cmp
cmp
mov
ljmp
cmp
bound
mov
xchg
addb
adc
cmp
cmp
xchg
repnz
adcb
adc
cmp
cmp
mov
jle
and
aaa
pushf
ja
cmpb
mov
xchg
mov
addl
jmp
sub
addb
cmp
cmp
adc
mov
cwtl
or
addb
cmp
cmp
mov
xchg
fisttps
dec
cmpsl
bnd
cwtl
dec
mov
test
addb
adc
cmp
cmp
mov
leave
adc
idiv
mov
leave
test
aad
push
and
jle
js
sbb
and
inc
shrb
cs
or
div
jae
adc
subb
aad
cwtl
xor
push
pop
addb
adc
cmp
cmp
pop
ds
cmp
push
adc
addb
adc
cmp
cmp
test
shlb
xor
push
ja
das
sbb
arpl
fst
push
xchg
sbb
cs
ffreep
mov
jae
gs
push
adc
mov
cld
call
lret
popf
ret
pop
mov
addb
adc
cmp
cmp
arpl
inc
inc
pop
fstpt
mov
and
gs
push
mov
fnsave
lds
jmp
loope
push
mov
jl
jl
cs
lods
ja
nop
das
add
shll
lret
popf
addb
adc
cmp
cmp
cmp
ja
data16
mov
cmp
xchg
pop
iret
pop
xchg
mov
xor
addb
adc
cmp
cmp
xor
or
addb
adc
cmp
cmp
xchg
fildll
imul
add
and
shll
xchg
sbb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
repz
loopne
push
push
mov
pop
jge
push
test
adc
adc
cmp
cmp
mov
and
cmp
shlb
mov
insl
addb
adc
cmp
cmp
fcoms
sahf
rol
addb
adc
cmp
cmp
in
mov
mov
jmp
outsl
divl
sbb
push
pop
leave
addb
adc
cmp
cmp
test
addb
adc
cmp
cmp
jle
ret
arpl
ret
mov
push
shrl
or
rolb
inc
pop
fucomip
clc
addb
adc
cmp
cmp
sarb
addb
cmp
cmp
cli
aad
test
jo
loop
push
and
cld
mov
add
jecxz
stos
push
lds
addb
adc
cmp
cmp
imul
lods
mov
mov
addb
adc
cmp
cmp
daa
fsubrl
divl
fildl
adc
adc
cmp
cmp
jmp
push
movsl
shll
popl
adc
adc
cmp
cmp
sub
lods
dec
push
in
mov
xchg
aas
loop
fcmovb
inc
pop
icebp
icebp
addb
adc
cmp
cmp
fdivrs
roll
sub
test
aaa
addb
adc
cmp
cmp
pop
hlt
and
push
mov
dec
cmp
adc
adc
cmp
cmp
mov
lock
xor
lock
inc
mov
push
mov
in
divl
daa
orl
push
fdivrs
adc
addb
adc
cmp
cmp
cmp
mov
sub
jb
aam
mov
adcb
adc
cmp
cmp
mov
ret
cli
pop
loop
sbb
addb
adc
cmp
cmp
stos
sbb
rclb
test
add
icebp
cwtl
pop
inc
adc
ds
addb
adc
cmp
cmp
adc
not
pop
sbb
addb
cmp
cmp
add
dec
loop
push
fwait
cmp
in
push
addb
cmp
cmp
mov
lcall
rolb
aas
sbb
pusha
xchg
inc
sbb
aad
les
addb
adc
cmp
cmp
hlt
ds
addb
adc
cmp
cmp
push
or
xlat
cmpsb
inc
aad
fsubrs
dec
pop
int3
std
ljmp
cmp
test
xchg
push
mov
jnp
dec
mov
push
movsbl
fnstenv
in
add
addb
adc
cmp
cmp
xlat
addb
adc
cmp
cmp
ljmp
addb
cmp
cmp
mov
inc
push
lret
stos
fxam
xor
or
jecxz
xchg
jmp
in
mov
inc
mov
stos
cli
xlat
fmull
pop
lea
ljmp
vpsubd
mov
addb
adc
cmp
cmp
lock
inc
push
test
or
ret
addb
cmp
cmp
loope
xor
pop
pushf
aam
or
xchg
lods
mov
mov
bound
jo
add
adcb
adc
cmp
cmp
mov
ret
adc
or
test
adc
stc
in
mov
addb
cmp
cmp
mov
mov
xchg
scas
dec
stos
adc
daa
mov
mov
jl
ja
jnp
pop
scas
fwait
cmp
addb
cmp
cmp
mov
pop
cmpb
or
xchg
xor
add
loopne
jns
xchg
fldt
mov
lea
sub
pop
add
into
je
addb
cmp
cmp
mov
cmp
dec
outsl
jno
push
mov
sbb
jl
dec
iret
outsl
mov
ja
cmp
addb
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
push
jae
push
xchg
xor
mov
cltd
test
lahf
cmc
and
jae
pop
dec
sub
inc
je
loope,pt
shll
addb
cmp
cmp
mov
xchg
into
push
mov
sub
sub
push
lock
icebp
add
mov
xor
adc
adc
cmp
cmp
mov
lods
jp
xchg
mov
mov
addr16
cld
or
sub
sub
sahf
fistpll
xor
jbe
push
xchg
out
inc
shl
mov
stos
xchg
mov
jl
lahf
inc
inc
adc
rclb
addb
adc
cmp
cmp
dec
mov
not
out
mov
fimull
js
pop
mov
cmp
call
pop
stos
mov
enter
aad
addb
cmp
cmp
mov
fs
mov
jno
addb
adc
cmp
cmp
fsubrl
dec
sub
xor
sbb
pop
popf
je
cmp
cmp
ds
lds
cmc
dec
cmp
mov
inc
jbe
inc
mov
addb
cmp
cmp
mov
pop
push
mov
cltd
addr16
cli
jb
in
test
ljmp
in
std
push
adcl
sbb
aas
mov
aam
sbb
in
notl
or
icebp
lahf
push
jmp
cmp
add
mov
dec
xlat
mov
add
repnz
shrl
addb
cmp
cmp
jge
fadd
sti
cmpsl
into
pop
inc
negl
hlt
push
cmp
js
cld
insb
mov
repnz
xor
bound
jbe
ss
mov
outsl
push
cmp
stc
and
addb
adc
cmp
cmp
stc
lea
imulb
inc
add
push
push
addb
adc
cmp
cmp
imul
addb
adc
cmp
cmp
and
int3
orps
fsub
add
pusha
js
movsb
addb
adc
cmp
cmp
and
jp
addb
adc
cmp
cmp
push
inc
jns
icebp
sbb
adcb
adc
cmp
cmp
mov
pusha
xchg
or
lret
mov
pop
ljmp
addb
cmp
cmp
mov
pop
mov
iret
nop
fbld
cmp
movsl
addb
adc
cmp
cmp
fwait
jb
mov
mov
addb
push
mov
mov
xor
adcb
adc
cmp
cmp
mov
test
adc
adc
or
sbb
mov
loope
out
outsb
lcall
adcb
adc
cmp
cmp
mov
fld
xchg
dec
gs
sbb
adc
adc
cmp
cmp
sahf
sub
xchg
sbb
or
or
arpl
pop
loopne
shll
pop
mov
cmpsb
xor
dec
adc
sbb
or
nop
decl
mov
xchg
mov
mov
adc
int3
pushf
aam
ret
por
mov
dec
xchg
outsb
pop
fdivp
in
loope
insl
aas
push
xor
addr16
lret
xchg
lahf
jbe
jne
cmc
and
stos
movsb
or
addb
cmp
cmp
mov
sub
lret
int3
loope
aam
loope
cmpsl
xchg
mov
addb
cmp
cmp
mov
sbb
cmp
stos
mov
in
dec
fsubrs
out
movsl
or
stc
test
xor
daa
mov
cli
or
sti
fs
pop
xchg
adc
cmpsl
jmp
addb
cmp
cmp
mov
and
in
mov
mov
xor
cmp
leave
and
sbb
addb
adc
cmp
cmp
xchg
sti
test
rorl
addb
cmp
cmp
test
call
incl
js
cs
fisttps
iret
imul
in
pop
push
dec
rorl
ja
add
fadd
test
jo
mov
sub
cld
aaa
fmul
test
addb
adc
cmp
cmp
bound
addb
cmp
cmp
in
addb
cmp
cmp
mov
out
push
je
addb
cmp
cmp
mov
addb
adc
cmp
cmp
pop
jno
movsl
mov
test
iret
and
pop
in
jp
addb
adc
cmp
cmp
adc
addb
adc
cmp
cmp
fisubl
daa
addb
adc
cmp
cmp
incl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
int3
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
sub
ret
mov
addl
fcompl
add
insl
dec
xchg
iret
add
mov
xor
addb
adc
cmp
cmp
lods
addb
adc
cmp
cmp
lock
fldenv
addb
adc
cmp
cmp
daa
out
addb
adc
cmp
cmp
fcmovne
addb
adc
cmp
cmp
addb
adc
cmp
cmp
das
aam
xchg
push
bound
test
xchg
jae
movsl
jmp
inc
xchg
outsb
das
repz
push
mov
sbb
mov
insl
pushf
pop
nop
stc
cmp
xchg
cwtl
addb
adc
cmp
cmp
and
adc
adc
cmp
cmp
mov
push
fs
sbb
hlt
jno
mov
in
sub
sbb
addb
adc
cmp
cmp
cmp
scas
xor
fiaddl
dec
adc
cmp
addb
adc
cmp
cmp
popf
dec
lret
pop
and
je
jae
stos
fcomip
rol
lcall
cli
xchg
jle
leave
sub
sub
jecxz
adc
xchg
cmc
aas
jae
stos
push
jge
movsb
daa
into
mov
cmpsb
lods
mov
xchg
fistpll
lret
mov
xchg
outsl
addb
adc
cmp
cmp
jnp
lret
aas
xchg
cmc
cmp
gs
addb
adc
cmp
cmp
xchg
js
ret
mov
pop
mov
xchg
cmc
andb
push
push
sbb
ja
outsb
sahf
add
add
data16
adc
cmp
cmp
je
addb
adc
cmp
cmp
mov
fstps
jmp
lea
repz
addb
adc
cmp
cmp
pushf
cmc
lods
sbb
sbb
andb
cmp
cmc
leave
int
rolb
pavgw
pop
ljmp
lock
shlb
push
cli
jae
sbb
addb
cmp
cmp
mov
aad
addb
cmp
cmp
mov
or
sub
mov
and
xor
lret
loop
shr
mov
mov
addb
adc
cmp
cmp
fdivrs
movsl
pop
mov
mov
adc
push
add
pop
add
les
fldl
jae
pop
addb
adc
cmp
cmp
ja
jmp
movsl
sbb
popa
negl
push
push
xor
addb
cmp
cmp
mov
sbb
fstl
int
xor
dec
aas
rol
outsl
movsl
pop
ror
push
enter
addl
stos
loopne
mov
adc
adc
cmp
cmp
mov
not
sub
mov
xchg
mov
test
pop
and
mov
fstl
addb
adc
cmp
cmp
xchg
push
or
daa
sub
stc
dec
shll
das
addb
adc
cmp
cmp
dec
inc
or
addb
cmp
cmp
mov
ret
addb
adc
cmp
cmp
div
fistl
push
ljmp
adc
cmp
cmp
mov
pop
shrl
add
iret
or
call
adc
in
or
adc
adc
cmp
cmp
xchg
aad
addb
adc
cmp
cmp
inc
mov
addb
adc
cmp
cmp
insb
mov
push
or
addb
cmp
cmp
mov
mov
jbe
cmp
adcb
adc
cmp
cmp
mov
mov
xor
inc
adc
jecxz
push
mov
shr
scas
adc
lea
hlt
test
daa
pushf
sub
add
mov
and
shll
dec
addb
adc
cmp
cmp
scas
rcl
data16
mov
push
aam
and
pop
scas
je,pn
pop
jae
jno
insb
adc
addb
cmp
cmp
mov
xor
mov
nop
push
or
adcb
adc
cmp
cmp
mov
sarb
xchg
xchg
cmp
repnz
mov
clc
iret
ljmp
adc
adc
cmp
cmp
mov
cmp
addb
cmp
cmp
mov
shll
lcall
dec
stos
notb
sbb
aaa
push
addb
adc
cmp
cmp
sarl
sub
and
dec
cmp
adcb
adc
cmp
cmp
mov
or
sbb
adc
mov
movsl
ljmp
xchg
push
cltd
cmp
inc
into
addb
hlt
rcll
push
lock
movsb
and
inc
jecxz
xchg
aam
iret
and
das
jmp
push
mov
addb
cmp
cmp
mov
aad
mov
iret
mov
sub
or
sub
addb
cmp
cmp
je
ret
mov
addb
cmp
cmp
xchg
test
add
int
roll
arpl
dec
add
loop
in
ds
bts
addb
cmp
cmp
mov
dec
and
shrb
lahf
into
dec
loope
sbb
iret
mov
pushf
mov
addb
cmp
cmp
test
addb
cmp
cmp
lret
xor
loop
mov
aad
lret
int
mov
addb
cmp
cmp
mov
jmp
cmp
rolb
das
jl
adc
mov
sahf
push
ja
nop
sbbb
pop
mov
jne
ljmp
adc
adc
cmp
cmp
mov
movsb
addb
adc
cmp
cmp
mov
mov
add
cmc
addb
adc
cmp
cmp
or
inc
ss
std
mov
daa
sub
dec
je
or
js
scas
mov
addb
cmp
cmp
mov
data16
addb
adc
cmp
cmp
lret
jns
stos
push
mov
ja
mov
push
inc
aad
pusha
push
cld
mov
fldt
fs
addb
cmp
cmp
mov
xor
inc
xlat
xchg
out
mov
mov
adc
adc
cmp
cmp
jecxz
pop
push
addb
adc
cmp
cmp
pop
lret
addb
adc
cmp
cmp
pop
jae
nop
pop
mov
xor
dec
lds
and
jb
adc
adc
cmp
cmp
fistps
addb
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
ds
hlt
addb
adc
cmp
cmp
inc
repz
mov
add
pushf
push
and
addb
adc
cmp
cmp
inc
push
add
mov
jo
ja
popa
outsb
mov
aad
les
int3
sub
adc
lea
pop
xor
inc
push
bound
inc
mov
jp
xchg
push
jnp
out
popf
ret
enter
jecxz
sub
inc
addb
adc
cmp
cmp
push
pop
addb
adc
cmp
cmp
dec
push
pop
xor
rcrl
xlat
fdivs
addb
cmp
cmp
mov
mov
orl
jo
outsl
adc
addb
stos
cs
addb
cmp
cmp
or
addb
cmp
cmp
mov
mov
xchg
and
jo
cmp
push
sahf
inc
and
int3
call
cltd
aaa
mov
sbb
mov
dec
insb
push
cmp
lds
stos
dec
rolb
adc
adc
cmp
cmp
mov
loopne
inc
mov
insl
jbe
inc
xor
jno
and
xor
arpl
pop
das
inc
out
in
loope
lret
test
mov
out
clc
cwtl
sub
call
cmpsl
addr16
out
and
mov
aaa
cltd
roll
xchg
adc
adc
cmp
cmp
lcall
xchg
push
add
sub
jl
addb
cmp
cmp
mov
mov
xor
repnz
sub
sub
or
and
hlt
sub
addb
adc
cmp
cmp
scas
sub
repz
je
lahf
lret
mov
and
adc
adc
cmp
cmp
mov
xchg
scas
push
fisubs
out
aaa
pop
addb
adc
cmp
cmp
and
iret
mov
idiv
dec
xor
adc
into
sbb
cmp
aaa
mov
add
aaa
jp
or
gs
sbb
pop
test
push
push
push
lahf
aad
in
pop
inc
pop
mov
fwait
ja
add
out
rol
popa
push
lahf
sarl
lret
cmp
xchg
inc
addb
adc
cmp
cmp
and
fwait
shll
js
xchg
cmp
mov
add
sub
xchg
addb
cmp
cmp
mov
mov
pop
mov
ficomps
jo
fnstenv
sbb
adc
loop
cmp
mov
add
fstpt
pusha
pop
movsb
mov
mov
in
and
cmpsb
push
and
sti
loope
and
add
or
pop
sti
jecxz
addb
cmp
cmp
mov
push
xchg
icebp
sub
add
jp
cli
cmc
sub
aaa
dec
jo
dec
icebp
sti
mov
lea
loop
cmpsl
test
push
cmp
addb
adc
cmp
cmp
jmp
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sub
jne
mov
mov
push
call
push
scas
int3
inc
mov
nop
cmp
or
js
frstor
inc
scas
into
fildl
adc
adc
cmp
cmp
jb
fldcw
in
fsubl
cli
add
dec
and
enter
vorps
je
xlat
xchg
pop
movsl
test
cmpsl
ljmp
cld
lret
mov
ljmp
sub
dec
dec
mov
into
inc
test
cmp
int
lods
xchg
pop
pop
out
lcall
adc
adc
cmp
cmp
adc
adc
inc
addb
adc
cmp
cmp
ljmp
lcall
pusha
jnp
adc
lods
mul
insl
add
shll
inc
std
iret
xlat
inc
pop
clc
fnstenv
flds
adc
adc
cmp
cmp
mov
mov
push
or
adc
adc
cmp
cmp
mov
xchg
outsl
sub
mov
adc
pushf
push
in
xor
inc
jb
add
cmpsl
mov
xchg
nop
xor
sbb
int3
mov
adc
inc
sub
lret
aam
mov
dec
rcll
ds
fnstenv
push
xchg
out
jbe
in
scas
xor
hlt
mov
pop
push
jno
inc
and
mov
pop
ss
fwait
repnz
ret
xor
adc
inc
and
inc
enter
clc
cmc
out
fs
push
addr16
aam
mov
addb
cmp
cmp
lock
addb
cmp
cmp
mov
imul
cmpsl
sbb
inc
jg
and
fs
mov
pop
daa
sbbl
loop
and
out
adc
sti
and
pop
sbb
pop
fwait
or
inc
inc
insb
push
push
jl
pop
xchg
sub
jne
repnz
fsts
xor
addb
cmp
cmp
mov
out
mov
sbb
jb
int3
push
testb
pop
inc
lahf
mov
jo
out
fcoms
repz
adc
adc
cmp
cmp
or
out
cmpsb
xor
sub
insb
jno
mov
add
cli
push
sub
cltd
loop
stc
xlat
xor
addb
adc
cmp
cmp
mov
push
or
out
push
addb
adc
cmp
cmp
xor
mov
aam
addb
cmp
cmp
mov
idiv
cmc
lock
jp
cmc
ror
xchg
faddl
out
inc
fldcw
es
lcall
adc
jp
inc
xor
pop
pop
xchg
gs
pop
pop
fcompl
push
lea
outsl
addb
adc
cmp
cmp
inc
fchs
mov
and
icebp
inc
fs
ss
cmp
jecxz
in
das
mov
flds
in
pop
fsubr
fnstenv
or
adc
adc
adc
cmp
cmp
repz
out
ds
push
sbb
adc
adc
cmp
cmp
mov
scas
gs
cs
ret
mov
adc
addb
adc
cmp
cmp
movsl
inc
adc
adc
adc
cmp
cmp
mov
pop
sbb
enter
repnz
test
jmp
mov
pop
xchg
test
js
cmp
insl
ljmp
fwait
xor
addb
cmp
cmp
mov
ja
jnp
and
push
mov
jg
rcrl
mov
and
cmp
adcb
adc
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
jg
pushf
adc
pop
fxam
push
jecxz
inc
sbb
call
nop
cmpb
and
xchg
shlb
fiaddl
adc
adc
cmp
cmp
fistpl
inc
mov
adc
adc
cmp
cmp
iret
rorb
lret
sbb
jne
push
clc
pop
clc
fcmovne
xchg
aas
or
lods
nop
andl
scas
mov
sahf
xchg
call
jo
out
lret
pop
addb
adc
cmp
cmp
pop
pop
cli
mov
adc
adc
cmp
cmp
adc
fsubl
lret
std
adc
xor
adc
adc
cmp
cmp
mov
fimull
call
jp
fists
jg
pop
jns
lds
sahf
add
pop
inc
dec
addb
adc
cmp
cmp
test
je
adc
adc
adc
cmp
cmp
xchg
mov
cmp
sti
pop
lea
jle
rclb
bound
mov
xchg
pop
pop
and
shr
xchg
sbb
leave
popf
sub
mov
lock
mov
movsb
push
push
jnp
and
in
in
nop
fiaddl
addb
adc
cmp
cmp
fwait
xchg
mov
cmp
and
mov
out
add
repnz
sub
cld
mov
sbb
mov
scas
dec
jecxz
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
fidivrl
movsb
addb
adc
cmp
cmp
mov
mov
push
outsb
movsl
inc
jae
mov
cmp
lods
les
stc
jg
jle
sbb
idivl
push
dec
loope
retw
fistpl
or
add
add
lds
push
add
add
add
add
add
add
sub
add
inc
add
adcb
add
pop
add
addb
add
lds
push
add
add
add
add
add
add
jo
add
lds
push
add
add
add
add
add
add
mov
add
lds
push
add
add
add
add
add
add
mov
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
adc
sub
add
push
add
and
add
inc
push
add
add
add
sub
add
inc
add
add
add
add
add
add
inc
add
adc
add
adc
add
cmpsl
movsl
xchg
adc
and
adc
add
adc
jb
adc
imul
push
bound
adc
dec
push
adc
ds
adc
adc
adc
adc
adc
push
push
adc
or
adc
add
fs
inc
xchg
xchg
add
push
push
inc
cli
dec
dec
cmp
inc
inc
xor
inc
ds
sub
cmp
es
xor
loopne
sub
sbb
sub
adc
shlb
adc
push
sbb
lahf
sbb
or
sbb
pop
jnp
push
pop
outsb
sbb
push
push
push
adc
inc
adc
adc
and
adc
adc
adc
or
adc
push
pop
adc
add
add
add
inc
cmp
les
push
repz
lock
imul
out
in
imul
call
fcmovnu
xlat
xlat
xlat
sar
rcl
lret
inc
mov
mov
mov
movsb
jmp
xchg
mov
mov
outsl
pushl
ljmp
pop
sti
pop
pop
dec
repz
push
ds
dec
dec
xor
fidivrl
ss
xor
sbb
sub
push
mov
and
cmpsb
and
or
xchg
sbb
jp
pop
pop
addr16
adc
add
cmp
adc
adc
adc
adc
or
adc
or
adc
add
sbb
add
mov
ljmp
std
cld
sti
leave
std
std
cld
lret
std
cld
sti
int
cld
sti
into
cld
cld
cli
iret
sti
sti
stc
sar
sti
cli
aam
cli
clc
sti
sti
stc
frndint
cld
cli
fdivr
sti
cli
loopne
cld
cli
loop
sti
cli
in
cld
sti
ljmp
clc
lock
stc
div
clc
clc
div
repnz
out
cli
jmp
out
call
call
sar
int3
int3
mov
mov
jmp
xchg
cmp
xchg
jo
pop
stc
bound
lock
push
aas
out
inc
das
fnstcw
cmp
xor
sbb
and
or
sbb
push
addr16
adc
push
inc
push
adc
sbb
pop
or
add
add
jecxz
fadd
lds
mov
inc
inc
inc
inc
mov
mov
cld
cld
cld
mov
cli
cli
stc
sar
test
cmc
cmc
hlt
hlt
repz
out
enter
lret
out
in
ljmp
jmp
aad
jmp
fldl2e
jmp
call
out
out
in
ljmp
repnz
div
icebp
out
sti
icebp
icebp
out
in
in
call
fstp
fdivr
rcl
leave
inc
ret
mov
lcall
mov
jns
data16
pop
pop
inc
jmp
xor
mov
adc
adc
pop
adc
add
add
loopne
sarb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
cli
cli
cli
sar
test
icebp
lock
jmp
call
lret
jecxz
loopne
fcmovbe
fstp
fcomp
fcmovu
jecxz
call
out
loop
jmp
call
sti
hlt
hlt
repnz
repnz
push
cmp
daa
adc
adc
xor
adc
add
out
out
ljmp
div
enter
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
sar
clc
ret
icebp
ret
in
in
jmp
in
jecxz
fstp
fcmove
xlat
aam
int
enter
in
div
repz
sar
push
push
cmp
and
add
sbb
add
add
div
xorl
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
cld
cli
vpsubw
clc
test
hlt
cmc
loop
sarb
repz
stos
pushl
xor
mov
adc
and
add
add
cld
sti
push
rol
fcmovu
rcr
dec
dec
dec
div
test
loope
loop
out
out
lock
div
lret
std
std
std
enter
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
cld
cld
sti
enter
enter
leave
cmc
cmc
hlt
leave
repnz
leave
repnz
enter
int
int3
enter
icebp
call
cmp
push
adc
and
ljmp
int
ret
lret
dec
dec
dec
cld
cld
cld
int
loopne
aad
xlat
fmul
rcl
fxch
lret
ret
leave
lret
lret
iret
iret
rcr
aam
loopne
loope
in
in
out
lock
div
lret
cld
cld
cld
enter
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
std
lret
cli
lret
clc
lret
test
hlt
hlt
lret
icebp
icebp
icebp
int3
repnz
enter
repz
push
jmp
adc
inc
pop
adc
daa
sbb
add
call
fcmovnu
shl
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
stc
stc
stc
int
repnz
jmp
fnstsw
aam
fcmovu
int
iret
fxch
enter
vpaddusb
ret
fmul
into
into
aam
xlat
in
in
out
out
out
into
div
test
cli
cli
lret
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
std
cld
int3
sti
sti
cli
int3
stc
clc
test
hlt
hlt
repz
hlt
hlt
int3
rcl
iret
fdiv
repnz
popa
hlt
pop
adc
dec
pop
adc
sub
adc
add
call
mov
std
std
cld
cld
iret
call
call
dec
loope
loop
fcompp
out
call
sar
stc
cli
iret
dec
dec
dec
dec
dec
dec
dec
dec
stc
stc
stc
int
icebp
icebp
iret
call
loopne
aam
xlat
int3
int
fcmove
iret
iret
fcmovb
ffree
ret
ret
fmul
iret
rcr
aam
aam
fnstsw
loopne
ljmp
iret
clc
clc
clc
into
dec
dec
dec
dec
sti
sti
cli
into
clc
clc
test
div
test
rcr
icebp
icebp
out
std
test
push
push
adc
add
repz
cltd
mov
cmpsl
push
icebp
out
aam
call
call
call
out
jmp
fmul
lret
int
leave
lret
ffreep
loopne
enter
iret
rcr
xlat
fcomp
fcmovnu
fstp
ljmp
shl
idiv
iret
dec
dec
dec
dec
dec
dec
dec
dec
cli
cli
cli
into
icebp
icebp
icebp
shr
jmp
fst
aam
aad
leave
lret
vpaddusw
mov
mov
faddp
enter
into
into
div
sar
sti
cli
sar
clc
not
stc
stc
clc
rcr
fcmovnu
lock
cli
xchg
xchg
test
sbb
push
popa
push
adc
or
add
add
cli
clc
insl
mov
in
call
call
call
call
dec
dec
call
sar
stc
stc
shr
out
lock
call
rcl
aam
iret
rcl
lret
rol
loopne
lret
int3
int3
int
fst
aam
fcmovu
fsubr
call
out
sar
stc
stc
sar
dec
dec
dec
dec
dec
dec
dec
dec
sti
sti
sti
shl
icebp
icebp
aam
out
fcmovu
fcmovnu
iret
rcl
fdiv
div
aam
std
cld
sar
stc
clc
sar
cli
stc
shl
loopne
fsubr
in
in
clc
mov
sbb
outsl
adc
adc
add
incb
mov
jecxz
call
call
call
cmc
cmc
cmc
xlat
fnstsw
loope
jmp
cmc
cmc
cli
cli
cli
aam
call
call
dec
dec
dec
dec
dec
shl
div
shl
icebp
lock
out
xlat
fcmovnu
rcl
aam
iret
rcl
faddp
loopne
vpavgb
mov
lret
fcmovnu
in
xlat
out
out
out
aad
div
aam
sar
call
call
call
call
call
std
std
cld
aam
sti
cli
aam
sti
cli
aam
out
fsubr
jmp
mov
jns
adc
jmp
rcl
enter
mov
aad
call
call
hlt
hlt
cmc
fcom
rcl
loopne
iret
shl
int3
int
loop
enter
enter
lret
int
into
iret
shl
fcmovu
jecxz
in
out
call
aad
cli
cli
sar
call
call
call
dec
dec
call
call
sar
clc
clc
aam
lock
jecxz
in
fnstsw
loopne
rcl
rcr
enter
ret
mov
loop
mov
iret
iret
fcomp
div
xlat
aad
std
cld
std
std
cld
in
in
ljmp
mov
adc
adc
adc
add
decl
xlat
fdivrs
call
fdivr
call
call
call
call
call
std
std
std
cmc
cmc
cmc
fdiv
lock
ftst
in
fcmovnu
fnstsw
fst
aam
loopne
int3
int
leave
leave
lret
lret
enter
enter
aad
fcomp
fucom
loop
fucomi
jmp
fprem1
cmc
cmc
cli
cli
cli
aad
call
call
call
call
call
call
call
call
cmc
cmc
cmc
xlat
out
out
out
in
fcmovu
fmulp
lret
lret
loope
in
in
call
std
fdivr
std
fdiv
lock
fldl2t
call
mov
xchg
adc
adc
add
jmp
out
mov
sti
cli
fcos
fcos
fcos
fldl2e
jmp
fucomp
ljmp
sti
sti
sti
fdivr
call
call
call
call
call
call
call
cmc
cmc
cmc
xlat
out
out
out
ftst
in
rcl
loopne
int3
int
leave
lret
vpavgw
vpavgw
leave
leave
jecxz
aam
loopne
aad
loopne
loop
fsubr
ljmp
cli
cli
cli
xlat
call
call
call
call
call
fdivr
fcos
fcos
std
fdecstp
cmc
hlt
in
lock
leave
pushl
and
adc
add
hlt
hlt
icebp
lea
icebp
out
fcmovu
fcmovnu
loop
lret
int3
out
lret
mov
out
int3
into
in
lret
int3
in
rcl
loop
loopne
jecxz
fsubrp
out
out
fdiv
repz
fsincos
sti
sti
fdivr
call
call
call
call
call
call
call
std
std
std
xlat
cmc
cmc
cmc
fldln2
out
out
fnsetpm(287
in
fstp
fcmovnu
loopne
rcl
loop
int3
int3
jecxz
enter
mov
enter
in
int3
int3
jecxz
aad
loope
fcmovnu
loopne
repz
stc
neg
in
loope
fstp
xlat
incl
sub
sbb
add
sti
sti
stc
arpl
in
jecxz
fdivr
fdivr
fdivr
fcos
cld
cld
fcomi
cmc
cmc
fsubr
jmp
fsubp
in
loopne
fstp
loope
rcl
jecxz
int3
int
mov
out
lret
lret
int3
int
into
iret
shl
fstp
fsubp
in
in
out
out
lock
hlt
cmc
std
fcos
call
call
call
call
call
call
frndint
cld
cld
cmc
cmc
fucomi
ljmp
xlat
xlat
jecxz
mov
fnstsw
loopne
cld
sti
fucom
in
out
loop
dec
inc
xor
pop
adc
aaa
pop
adc
and
add
add
ds
iret
ljmp
fdivrp
repz
fucomip
in
in
loope
cmc
cmc
fdivrp
std
std
fdivr
fcos
fcos
fdivr
fcos
cld
cld
fcomi
repz
fsubr
jmp
fsubp
loop
loopne
fcmovu
loop
rcl
jecxz
int3
int
vcvtdq2pd
lret
lret
out
mov
in
rcl
jecxz
loope
in
loopne
out
out
fdivp
div
std
std
fdivr
fdivrp
fdivrp
fdivrp
in
in
out
loope
dec
dec
cmp
sbb
push
and
add
add
lcall
rcl
icebp
lret
repnz
fdivrp
fsubrp
in
in
loop
lret
lret
int3
into
call
iret
rcl
out
rcl
in
loopne
jecxz
in
loop
icebp
repnz
div
std
std
fdivr
fcos
fcos
fcos
stc
stc
fdiv
hlt
hlt
fucomp
jmp
loopne
xlat
fcomp
in
into
iret
out
enter
ret
ret
call
rol
call
iret
rcl
out
fstp
in
loop
jecxz
repz
jmp
jmp
in
jmp
in
ljmp
pop
or
pop
adc
add
add
incl
aad
mov
jmp
jmp
fdivrp
sti
sti
loopne
hlt
cmc
loope
ljmp
fcmovnu
fucom
rcl
shl
leave
lret
mov
jmp
enter
rcl
out
aam
in
fstp
jecxz
out
loope
icebp
repnz
clc
clc
fdivrp
fdivr
fdivr
fdivr
fdivrp
clc
clc
fcomip
icebp
icebp
loope
out
jecxz
in
aad
out
mov
out
jmp
jmp
jmp
jmp
out
in
repnz
loope
sbb
inc
push
adc
add
call
lods
sti
sti
sti
loop
jmp
jmp
std
std
std
loope
out
lock
div
loop
std
std
loope
fdivrp
fdivrp
fdivrp
cli
cli
fcomip
repnz
jmp
fcomp
int3
int3
int
lret
jmp
ret
ljmp
shl
fcomp
fstp
fsubp
in
in
in
loop
repnz
stc
stc
loopne
fdivrp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
ljmp
push
out
sbb
push
adc
add
repnz
mov
repnz
in
jmp
jmp
sti
sti
sti
jecxz
rcl
jmp
enter
in
int3
int
ljmp
fld1
loopne
loope
jmp
icebp
icebp
jecxz
stc
stc
loope
jmp
fdivrp
fdivrp
fdivrp
fdivrp
fdivrp
jmp
stc
stc
stc
loope
lock
call
loopne
aam
aad
rcl
shr
leave
lret
vpor
mov
int
into
ljmp
xlat
jmp
jmp
repnz
jmp
jmp
jmp
jmp
in
in
jmp
div
cmc
pushl
out
pop
sbb
add
add
clc
mulb
mov
loop
jmp
jmp
jmp
jmp
jmp
cli
cli
cli
in
repnz
jmp
out
loope
out
xlat
fsubr
rcl
aam
lret
int3
int
enter
jmp
iret
shr
iret
rcl
ljmp
loop
jmp
repz
sti
sti
loope
jmp
jmp
jmp
jmp
jmp
std
std
std
loop
div
in
out
out
in
in
out
jmp
enter
rol
cli
cli
cli
out
jmp
jmp
jmp
out
in
jmp
cli
cli
stc
incl
and
pop
adc
add
add
cld
cld
inc
fcmovnu
shr
jmp
jmp
jmp
div
mul
div
mul
in
jmp
jmp
jmp
jmp
jmp
jmp
jecxz
div
in
icebp
icebp
in
out
out
call
int3
int
jmp
enter
lret
vpaddsb
into
into
jmp
iret
iret
ljmp
in
jmp
hlt
hlt
in
sti
sti
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
in
in
cld
cld
sti
std
mov
adc
adc
jmp
iret
into
repnz
into
jmp
jmp
jmp
fucomip
enter
enter
aad
fcmovu
fsubr
loop
jecxz
out
call
out
cli
cli
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
cld
cld
in
hlt
hlt
in
out
out
out
jecxz
call
rcl
shr
lret
in
ret
vshufps
out
lret
int3
int3
in
leave
lret
rcl
shr
fsubr
out
out
out
out
out
jmp
call
call
repz
cld
cld
sti
cld
xchg
nop
cmp
adc
add
decl
rcr
cld
call
call
jmp
cli
sti
sti
out
repz
call
loop
in
aad
xlat
in
lret
int3
int
leave
leave
lret
out
lret
out
leave
lret
int
iret
in
aad
xlat
jmp
fcmovnu
jmp
in
jmp
cmc
cmc
mul
cld
cld
cld
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sti
sti
sti
out
hlt
hlt
call
loopne
loope
fcmovu
rcl
shr
lret
out
icebp
repnz
jmp
ljmp
cld
sti
lcall
jno
adc
xor
jecxz
fnstsw
std
std
cld
jmp
jmp
call
div
jmp
jmp
jmp
jmp
jmp
jmp
jmp
div
mul
out
out
out
jmp
fstp
fsubrp
rcl
aad
int3
int
out
leave
lret
mov
out
int3
into
iret
out
int3
int
out
rcl
shr
fsubrp
call
out
out
jmp
out
jmp
jmp
jmp
jmp
call
ljmp
jmp
jmp
jmp
div
in
std
cli
movsl
movsb
xchg
ljmp
sub
jnp
adc
xor
in
in
call
push
div
jmp
ljmp
lock
push
xor
jo
cs
andl
cwtl
subb
lcall
fcmovnbe
leave
in
jmp
loope
sti
cli
clc
call
jmp
jmp
jmp
jmp
jmp
jmp
cli
cli
sti
call
ljmp
in
fcomp
fsubr
rcl
aam
mov
lock
enter
icebp
leave
lret
into
ror
out
rcl
aam
loopne
loope
call
icebp
icebp
in
stc
stc
stc
jmp
jmp
in
in
in
clc
clc
imul
cli
lods
stos
sahf
pushl
xor
xchg
add
hlt
hlt
icebp
jno
mov
out
in
jmp
std
jmp
bound
xor
lcall
ud0
or
jmp
push
ljmp
and
ja
cmp
mov
cli
popf
xchg
mov
xchg
repz
mov
shr
icebp
in
jmp
call
jmp
jmp
call
call
ljmp
icebp
in
out
out
fstp
fsubrp
rcl
shl
into
into
into
icebp
ret
repnz
out
out
in
out
out
cli
cli
stc
out
stc
mov
movsb
pushl
adc
stc
stc
testl
repnz
in
in
jmp
js
stc
pop
xor
sbb
arpl
sbb
arpl
sbb
bound
sbb
pop
xor
adc
pop
cmp
lcall
push
lcall
or
jmp
sbb
insl
dec
sub
jnp
ds
mov
movsb
mov
ret
mov
repnz
div
jmp
in
out
out
call
in
stc
cli
cli
jmp
jmp
ljmp
jmp
jmp
jmp
in
cld
cld
cld
out
cli
cli
cli
out
out
out
out
cld
cld
sti
lock
stc
mov
ss
adc
add
std
std
std
sub
enter
aam
idiv
in
out
in
cmpsb
xchg
jl
pop
xor
jmp
sbb
arpl
sbb
bound
sbb
addr16
and
xchg
ja
pushl
jmp
sbb
arpl
sbb
arpl
sbb
bound
sbb
pop
ss
pop
cmp
lcall
adc
pop
ss
push
xor
jmp
sbb
ljmp
out
lret
int3
int
enter
enter
leave
leave
lret
into
iret
repnz
shl
fyl2x
out
out
in
in
out
lock
cmc
cmc
out
cld
cld
cld
out
out
out
push
push
std
std
cld
icebp
stc
rol
cmp
adc
call
rcl
leave
in
leave
mov
out
out
in
mov
xor
jmp
sbb
arpl
sbb
popa
cmp
ljmp
and
jmp
jmp
sbb
bound
sbb
bound
sbb
push
je
pushl
xor
popa
cmp
jmp
sbb
arpl
sbb
bound
sbb
loop
shl
ljmp
in
std
std
std
in
div
imul
out
out
out
out
in
in
fcmovu
fcomi
aam
aad
lret
lret
int3
hlt
enter
ret
not
fcomp
repz
push
push
push
std
std
std
repnz
stc
enter
inc
aas
sub
cmp
add
add
incl
ror
ret
shll
push
out
rol
mov
jmp
sbb
arpl
sbb
pusha
cmp
ljmp
push
icebp
out
jl
aas
lcall
adc
pusha
cmp
ljmp
sub
fnop
lcall
adc
arpl
sbb
arpl
sbb
arpl
sbb
pop
cmp
call
lret
ljmp
out
repz
hlt
out
out
out
in
out
out
out
out
push
cli
cli
cli
icebp
clc
clc
clc
repnz
push
push
push
std
repz
stc
iret
into
incl
xor
in
fildll
cli
cli
stc
icebp
push
push
loope
shl
arpl
sbb
bound
sbb
pop
cmp
clc
div
jmp
xor
pushl
cmp
cld
cld
cld
cli
clc
idiv
jae
xor
pop
cmp
jmp
sbb
pop
ss
mov
in
int3
int
hlt
hlt
enter
mov
cmc
int3
int
hlt
aam
aad
loopne
loope
in
in
lock
clc
clc
repnz
push
push
push
push
push
hlt
stc
rcl
leave
decl
xor
out
out
jmp
push
icebp
out
repz
push
push
lock
jmp
pusha
cmp
jmp
sbb
pop
cmp
incl
std
std
call
lret
pop
cmp
lcall
incl
call
xor
sbb
arpl
sbb
pop
xor
idiv
out
out
out
stc
stc
stc
lock
hlt
hlt
icebp
jmp
loopne
repz
xlat
xlat
cmc
rcl
shl
enter
mov
test
hlt
push
push
push
stc
aad
int
dec
dec
aaa
mov
hlt
hlt
icebp
popa
mov
out
cmc
push
push
cld
sti
sti
bnd
cmp
jmp
sbb
pop
aaa
adc
xchg
push
cmc
repz
xor
push
xor
call
inc
mov
lcall
push
jmp
sbb
arpl
sbb
pop
xor
jmp
div
out
out
lock
clc
stc
icebp
icebp
push
push
push
push
push
push
push
div
div
icebp
icebp
icebp
cmc
hlt
push
push
push
cli
fcmovu
sar
push
dec
cmp
sbb
add
stc
stc
idivl
ret
ret
xlat
clc
push
push
push
mov
cld
pop
ss
arpl
sbb
pop
ss
mov
lcall
sub
ljmp
jmp
inc
and
popa
cmp
sbb
pop
ss
xchg
jp
sti
ljmp
test
int
mov
test
rcl
neg
mul
loop
cmc
out
out
out
cmc
repz
sti
sti
sti
cmc
push
push
push
push
push
push
cli
fcos
push
push
inc
leave
sbb
or
add
add
std
cld
and
lret
aam
lret
std
push
push
push
popf
xchg
pop
xor
jmp
sbb
pop
xor
push
in
out
in
call
mov
mov
cli
stc
idiv
incl
aaa
adc
arpl
sbb
pop
cmp
incl
push
push
push
stc
stc
stc
repz
lock
out
out
fcomip
xlat
test
int3
int3
clc
mov
stc
enter
rcl
stc
stc
cli
stc
idiv
push
push
clc
cli
jecxz
fdivrp
pop
push
inc
rcrb
pop
or
add
decl
rcl
leave
fmulp
leave
sar
push
push
push
mov
xchg
cli
pop
xor
lcall
push
jmp
fcmovbe
enter
xchg
clc
div
jmp
pop
dec
shll
mov
in
pushl
xor
lcall
push
pushl
repz
icebp
icebp
repnz
stc
stc
stc
hlt
push
push
push
push
push
push
push
sti
sti
sti
div
hlt
hlt
imul
ljmp
clc
clc
stc
sti
in
loopne
pop
pop
dec
xlat
sbb
or
add
add
fcmovbe
ret
mov
idiv
push
push
enter
pop
ss
arpl
sbb
pop
xor
call
lret
andb
call
int
jmp
shlb
cmp
jmp
sbb
insl
dec
sub
in
leave
lret
int
enter
into
iret
clc
rcl
sar
fdivp
jecxz
in
in
in
in
div
div
idiv
std
std
idiv
push
push
clc
clc
stc
cli
sti
out
loop
pusha
pop
dec
fstpl
add
add
in
mov
cli
stc
clc
idiv
push
push
fcmovbe
leave
stc
pop
cmp
lcall
push
mov
dec
shlb
in
call
mov
decl
xchg
pushl
lcall
adc
jmp
sbb
loop
aam
push
std
std
cmc
cmc
cmc
div
out
out
out
mul
in
neg
fcmovu
stc
rcl
sar
enter
vpsubd
mov
enter
lret
int3
int
hlt
hlt
hlt
cli
cli
cli
sti
std
jmp
pop
dec
loope
sbb
add
jmp
cmpb
out
clc
clc
push
in
out
clc
imul
lcall
dec
mov
inc
mov
call
add
mov
cld
cld
sti
cli
stc
incl
push
aaa
lcall
xor
jmp
sbb
pop
cmp
call
lret
sar
stc
cli
idiv
cld
cld
idiv
push
push
push
push
push
clc
clc
stc
stc
stc
stc
icebp
icebp
icebp
cli
in
in
cmc
cmc
cmc
cli
cli
sti
sti
std
ljmp
jecxz
sbb
dec
icebp
icebp
out
pop
mov
jmp
clc
clc
clc
div
clc
je
xor
pop
cmp
pop
cmp
xlat
iret
mov
sub
decl
cli
stc
idiv
jbe
lcall
adc
call
lds
jmp
sbb
pop
xor
mov
stc
lret
stc
int
iret
cli
xlat
fcomp
stc
loopne
jmp
repnz
stc
stc
stc
stc
stc
stc
cli
sti
sti
cld
cld
in
in
jmp
out
sbb
push
div
idivb
fdivr
stc
stc
clc
test
pop
xor
pop
jmp
fcmovnbe
ljmp
xor
ljmp
es
out
in
call
push
in
jmp
call
or
shll
ljmp
jmp
pop
lcall
or
sti
push
sti
sti
sti
clc
repz
clc
call
loop
cli
fcomp
rcl
sar
lret
sti
enter
cld
rcl
sar
rcl
sar
jmp
cld
cld
std
push
out
jmp
imul
and
add
sti
sti
cli
and
mov
cli
stc
stc
xchg
jle
std
pop
xor
jge
inc
push
repnz
jmp
sub
adc
leave
mov
jmp
fst
jmp
lcall
or
call
ss
pop
xor
jmp
std
std
clc
clc
clc
stc
stc
stc
cli
cli
std
std
sti
div
idiv
in
out
out
cld
jecxz
in
in
in
in
cld
cld
std
push
icebp
out
ljmp
pop
ljmp
add
decb
iret
iret
int3
ret
cli
cli
cli
movsb
jns
mov
fcmovbe
enter
cmp
push
xor
lcall
call
int3
ret
lcall
adc
pop
cmp
jb
xor
cld
cld
sti
inc
mov
lcall
or
pop
ss
xchg
jl
std
out
jmp
lret
sti
lret
int3
into
sti
aam
sti
fdivr
loop
jecxz
jmp
in
sti
cmc
cmc
idiv
cld
cld
cld
sti
sti
cld
cld
cld
push
repz
pop
out
and
adc
add
add
incl
xlat
int
enter
sti
sti
cli
mov
dec
sub
ret
mov
call
enter
loopne
dec
shll
push
aaa
push
repz
dec
mov
ud0
sbb
jns
cmp
lock
jmp
ljmp
and
incl
std
stc
stc
stc
stc
cli
repnz
call
cld
aam
cld
int3
int
cld
enter
enter
iret
std
int3
int
fcomp
fsin
in
in
push
hlt
icebp
pushl
lock
adc
add
add
cmpsl
ret
cli
cli
stc
cld
sti
sti
aam
sar
xor
push
lcall
adc
gs
push
jp
cmp
jmp
sbb
bound
xor
jns
cmp
pop
cmp
js
cmp
std
cld
sti
lret
pushl
xor
div
repz
cli
cli
cli
sti
sti
cld
cld
cli
cli
cli
cld
repz
std
ljmp
push
cmc
repz
gs
adc
add
add
in
xchg
mov
lock
cld
cld
in
fdivr
pop
aaa
adc
pop
xor
pop
aaa
adc
pop
cmp
pop
aaa
adc
pop
cmp
jmp
sbb
pop
cmp
lcall
adc
ljmp
and
stos
xchg
cmp
fxch
clc
div
ljmp
sbb
fcmovbe
sar
leave
std
int
iret
cld
rcl
sar
fcmovu
fdivr
in
out
lock
cld
div
idiv
std
std
clc
div
jns
addr16
and
adc
add
add
in
call
in
in
jmp
std
cld
stc
div
cld
mov
xchg
jl
incb
push
xor
gs
push
lcall
adc
pop
xor
lcall
or
lcall
adc
pusha
cmp
jmp
sbb
pop
xor
lcall
adc
ljmp
jmp
sbb
loop
aam
clc
clc
stc
sti
in
out
out
cld
out
out
fcomp
rcl
aam
lret
lret
int
dec
leave
lret
dec
lret
rcl
sar
fcmovnu
fdivr
out
call
clc
clc
idiv
jp
imul
repz
inc
sarl
std
std
std
cld
cld
cld
div
repnz
out
aam
sar
mov
std
test
jle
xchg
js
jle
inc
insl
dec
sub
fs
sbb
pop
aaa
adc
pop
xor
lcall
or
pop
aaa
adc
pop
ss
lret
sar
cld
cld
cld
std
std
std
clc
clc
clc
out
out
lock
out
loopne
xlat
xlat
fdivr
sti
cld
sti
stc
clc
idiv
jl
push
and
add
add
stc
clc
es
not
ror
std
std
std
std
cld
cld
cld
cld
cld
sti
sti
sti
sti
repnz
cld
loop
aam
iret
lds
std
mov
jb
jns
cmp
fs
sbb
shll
std
int3
int
fcomp
loope
ljmp
sti
sti
sti
stc
clc
idiv
jl
push
and
add
add
incl
shlb
jmp
out
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
stc
clc
cld
in
jmp
jmp
div
clc
std
jmp
in
loopne
loop
rcl
aam
iret
rcl
dec
int
dec
lret
int
rcl
aam
xlat
fdivr
out
call
stc
clc
idiv
jge
imul
and
add
stc
imull
lret
lret
mov
fcmovnbe
out
out
jmp
div
cmc
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
push
div
in
in
in
jmp
in
fcomp
rcl
sar
hlt
hlt
hlt
stc
clc
idiv
jle
imul
and
add
div
xor
mov
mov
mov
mov
call
ror
fstp
aam
call
lock
std
stc
stc
clc
std
std
std
std
std
std
std
std
std
std
std
clc
clc
idiv
jle
insb
sti
and
add
incl
div
xor
repz
in
in
call
mov
aad
lret
lret
enter
inc
shll
int3
sar
xlat
iret
jmp
loop
in
in
jmp
std
std
std
std
clc
clc
idiv
jle
insb
sti
and
add
add
decl
cld
sti
and
clc
testb
lock
mov
fmul
rcl
into
ret
out
lret
inc
shll
mov
dec
leave
mov
jmp
loopne
in
in
call
clc
div
jle
insb
std
and
adc
add
add
incl
sti
sti
cli
aaa
div
hlt
pop
out
out
ljmp
fcmovnbe
rcl
rol
in
lret
inc
shll
dec
enter
aam
jmp
loopne
out
in
jmp
cli
cli
clc
jmp
jle
add
add
incl
sbb
cld
sti
cmp
div
pop
lock
xchg
call
aam
rcl
lock
inc
shlb
dec
lret
sar
xlat
iret
jmp
out
push
repnz
cld
cld
cld
out
out
ljmp
shll
incl
cld
std
cld
aas
div
mulb
icebp
in
xchg
out
fistpll
into
ret
stc
mov
mov
ret
dec
lds
clc
div
dec
enter
lods
sahf
pusha
decl
ljmp
sti
sti
cli
push
div
hlt
jg
in
call
shl
loopne
xchg
push
incl
incb
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
addb
add
add
addb
add
add
addb
add
add
addb
add
add
addb
add
add
addb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
add
jg
incl
add
add
jg
cld
add
add
jg
push
add
add
inc
add
jg
incl
add
cld
add
add
add
add
inc
inc
add
add
and
sub
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
outsb
add
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
push
add
jbe
add
jb
jns
push
add
data16
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
push
add
jbe
add
jb
jns
push
add
data16
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
arpl
jb
insb
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsl
add
jb
insb
add
add
js
add
add
push
add
add
imul
push
add
jb
jae
imul
add
add
popa
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
xor
add
insb
add
add
push
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
push
add
jbe
add
jb
jns
push
add
data16
add
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
push
add
jbe
add
jb
jns
push
add
data16
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
