push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
call
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
je
mov
sub
jg
mov
jle
popf
pushl
pop
dec
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
or
xor
add
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
in
add
dec
and
add
and
add
and
add
add
and
add
add
add
add
add
and
add
and
add
and
add
add
shlb
add
cmp
add
movsb
and
add
add
mov
add
adc
add
add
add
sub
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
push
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
in
add
dec
and
add
and
add
and
add
add
and
add
add
add
add
add
and
add
and
add
and
add
add
shlb
add
cmp
add
movsb
and
add
add
mov
add
adc
add
add
add
sub
add
and
add
and
add
and
add
add
add
gs
jb
arpl
jae
gs
jo
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
add
fs
imul
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
insb
jae
gs
popa
insb
jne
add
add
je
jb
jbe
push
jns
gs
add
popa
je
inc
jbe
outsb
je
add
movb
gs
jne
jb
outsb
je
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
insb
jae
jb
outsb
inc
add
adc
push
gs
insl
gs
push
add
repnz
imul
jb
je
arpl
add
imul
je
imul
push
add
popf
add
gs
je
dec
jne
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
imul
bound
gs
add
rolb
dec
gs
jo
gs
jb
jns
aad
inc
gs
gs
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
dec
inc
dec
xor
cs
insb
add
push
add
jae
gs
gs
inc
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
popa
jae
outsb
imul
imul
ja
popa
jae
outsb
imul
imul
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
imul
add
jae
imul
add
insb
outsl
outsb
gs
outsb
je
jns
add
push
popa
jae
imul
add
insb
outsl
outsb
gs
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
lldt
push
gs
outsl
add
add
push
outsl
jne
je
jb
add
inc
add
push
outsl
addr16
imul
add
add
push
outsl
addr16
imul
push
inc
dec
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jge
add
jl
lods
lods
lods
add
cmpsb
push
mov
mov
mov
lret
leave
lret
int
rcl
shr
rcl
shl
ror
iret
hlt
into
int
hlt
leave
leave
repz
mov
mov
mov
lods
lods
lea
cltd
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
lret
not
rcl
cld
fcom
std
xlat
fcom
fcom
aad
aad
iret
iret
sar
int
into
aam
rcl
sar
ret
ret
mov
mov
scas
iret
movsb
movsb
movsb
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
call
rcl
aam
xlat
call
xlat
fdivr
aam
dec
int
dec
int3
int3
call
aam
dec
into
int
mov
mov
mov
std
cmpsl
test
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
pop
add
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
leave
dec
int
call
rcl
call
xlat
fdivr
fcom
call
dec
into
int3
dec
lret
int3
int
inc
mov
mov
mov
cmpsb
cmpsl
cmpsl
jmp
fwait
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
push
bound
fs
ds
sbb
sbb
sub
push
sbb
cmp
cmp
cmp
cmp
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarl
leave
dec
rcl
call
call
aad
call
rcl
dec
leave
inc
inc
ret
ret
mov
mov
scas
scas
scas
jmp
pushf
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jg
jg
jno
jb
popa
bound
dec
push
push
xchg
cmp
inc
mov
outsl
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
leave
lret
lret
enter
ret
ret
mov
mov
ljmp
mov
cltd
call
xchg
xchg
xchg
xchg
cltd
fwait
fwait
in
addl
push
push
or
add
add
add
add
add
add
add
add
add
add
add
jo
outsb
add
pop
or
jnp
xchg
mov
incb
jp
idivb
jp
jo
outsb
out
push
data16
ret
jge
jns
js
arpl
fs
inc
inc
cmp
pop
sbb
adc
adc
stos
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
incl
addb
xchg
xchg
xchg
mov
mov
cwtl
mov
jns
js
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
addb
push
cmp
ss
jle
cltd
lcall
test
stos
icebp
lods
stos
lods
sti
lods
lods
lods
lods
lods
lods
test
stos
std
movsl
movsl
movsl
std
fwait
lcall
mov
jge
js
jp
jp
jp
mov
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
lods
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
imul
xchg
xchg
leave
fwait
lcall
lcall
std
mov
decl
mov
lcall
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsl
addr16
jp
scas
cmpsb
stos
add
adc
lods
call
cltd
xchg
xchg
incl
xchg
decb
xchg
popf
pushf
popf
std
mov
mov
xchg
in
nop
nop
xchg
in
xchg
push
jne
prefetchw
add
or
es
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
mov
call
sahf
sahf
jmp
cmpsl
stos
pushl
cmpsb
scas
mov
xchg
stos
std
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cwtl
pushf
decl
mov
call
nop
xchg
xchg
xchg
popf
sahf
sahf
mov
test
movsb
movsl
mov
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jb
jne
jp
jge
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jg
mov
js
mov
cmpsb
mov
mov
mov
lods
lods
lods
mov
mov
add
mov
pop
pusha
adc
mov
jmp
mov
xchg
xchg
xchg
call
xchg
xchg
call
lcall
sahf
lahf
lahf
mov
movsb
movsb
stc
cwtl
lcall
nop
xchg
xchg
les
cltd
lcall
mov
stc
xchg
xchg
std
xchg
jb
cltd
imul
ljmp
aaa
jnp
mov
je
mov
outsl
ljmp
pcmpgtw
lods
or
stos
or
mov
jle
mov
mov
lods
pushf
mov
movsb
movsb
add
pop
pop
adc
mov
ljmp
popf
call
xchg
xchg
lcall
sahf
popf
lcall
pushf
popf
lcall
xchg
cwtl
call
xchg
xchg
call
lcall
fwait
lahf
stc
lahf
xchg
pushf
cld
pushf
xchg
xchg
imul
xchg
dec
jns
fwait
jne,pt
cltd
sub
sahf
and
lahf
sbb
movsl
push
ljmpw
adc
adc
lods
adc
scas
adc
mov
imul
adc
mov
imul
aas
cmp
cltd
scas
mov
lods
lods
scas
mov
movsl
mov
add
pop
pop
adc
mov
ljmp
popf
call
popf
lcall
movsb
movsb
jmp
mov
xchg
decl
mov
mov
xchg
xchg
js
fwait
jno
fwait
arpl
call
sub
popa
call
or
xchg
push
pop
call
add
sahf
add
push
pushl
sbb
outsl
mov
and
mov
pop
jbe
mov
xchg
scas
mov
scas
scas
mov
sahf
lahf
mov
add
pop
pop
adc
scas
mov
shlb
sahf
sahf
pushf
jmp
cmpsl
test
cmpsb
test
ljmp
test
lcall
decl
dec
outsl
decl
sub
mov
pop
incl
add
incl
add
mov
push
call
add
lcall
jmp
push
outsl
pushl
sub
mov
sub
les
jge
xor
dec
inc
mov
leave
mov
cld
scas
mov
lret
mov
add
add
add
add
lods
movsb
stos
add
adc
cmpsl
scas
ljmp
sahf
jmp
stos
test
lods
stos
lods
ljmp
mov
ljmp
mov
mov
mov
incl
or
test
push
incl
add
addl
incl
add
add
add
xchg
add
cltd
add
lahf
add
add
lods
adc
mov
ss
cmp
dec
cmp
sarl
mov
sarb
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
sahf
fwait
sahf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
decl
add
sahf
add
mov
add
lods
add
mov
jo
les
test
lret
dec
inc
call
inc
call
inc
mov
dec
xchg
fmuls
fimull
fisttpll
fistl
call
xchg
std
mov
mov
mov
mov
mov
add
add
add
inc
dec
adc
jl
sahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
call
sbb
mov
pop
decl
or
lea
push
call
add
sahf
add
mov
add
test
pusha
pushl
and
dec
dec
nop
call
push
cltd
fcoms
fsts
fcompl
ficoms
jmp
push
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsb
cmpsb
jne
sahf
mov
add
inc
inc
adc
js
lahf
lcall
mov
stos
stos
pushl
mov
mov
mov
mov
ljmp
inc
je
and
xchg
and
call
and
sbb
nop
or
nop
add
add
lcall
jmp
add
mov
gs
mov
xor
jmp
bound
jmp
gs
jecxz
cmpsl
jmp
addr16
ljmp
fildl
ret
mov
cmpsb
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
je
fwait
xchg
cltd
call
lahf
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
das
outsl
lcall
sub
xchg
push
callw
add
cltd
add
mov
add
stos
add
mov
pushw
movq
rolb
jmp
jo
jmp
jo
jmp
jo
ljmp
in
je
in
jne
out
jne
in
jae
jmp
xchg
mov
test
lcall
mov
add
add
add
jg
cmp
cmp
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
lahf
aaa
ja
mov
xor
cltd
sbb
call
add
mov
add
add
mov
popa
pushl
add
leave
sbb
fistl
jmp
js
call
jge
in
xorl
push
test
push
test
ljmp
inc
mov
test
daa
sahf
lahf
lahf
add
add
add
pusha
add
aaa
cmp
pop
pusha
push
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
rol
pushl
insl
mov
cltd
cmp
inc
jl
movsb
inc
jle
movsl
ss
fwait
sbb
add
pushf
add
add
add
scas
add
mov
gs
mov
add
iret
daa
cmp
movsl
ljmp
out
mov
push
pop
push
nop
ret
xchg
ret
push
xchg
xchg
clc
xchg
out
pop
fidivl
clc
lods
lods
stos
mov
sahf
pushf
xor
sahf
add
add
add
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
xchg
lcall
dec
jg
lods
dec
test
movsl
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
in
xchg
push
lcall
repnz
push
fwait
lret
fwait
leave
clc
sahf
lret
cld
sahf
int3
sti
popf
int3
sti
cltd
lret
push
xchg
sar
mov
dec
mov
mov
sahf
mov
popl
lcall
add
xor
or
cmp
push
dec
dec
jecxz
pusha
call
mov
mov
mov
mov
inc
inc
mov
ljmp
cmp
scas
push
xchg
movsb
sub
fwait
or
popf
add
mov
add
mov
arpl
mov
add
enter
rorl
jne
filds
out
lea
push
movsl
into
push
movsl
int3
clc
cmpsl
iret
sti
cmpsl
iret
cli
cmpsb
iret
sti
cmpsl
into
stos
sar
std
test
sar
negl
lret
dec
leave
int3
std
mov
mov
lahf
mov
xchg
add
fwait
lcall
xor
add
sub
or
inc
bound
pop
xlat
jae
jo
mov
rol
rol
mov
inc
mov
ret
pushl
push
test
scas
push
mov
scas
dec
test
mov
add
jmp
add
mov
arpl
mov
add
int
outsb
call
add
loopne
jl
in
pop
cmpsb
push
popf
leave
cli
lods
sar
sti
mov
sti
mov
sti
mov
mov
std
mov
std
mov
mov
pushl
sar
mulb
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
add
dec
dec
outsl
jo
mov
aad
fsubr
fcom
not
rcl
std
int3
into
int
lret
dec
lret
lret
inc
enter
lahf
scas
jmp
push
mov
stos
jg,pt
mov
add
lods
add
mov
arpl
mov
add
iret
add
xlat
add
filds
jne
jmp
jno
sti
lods
aad
std
mov
fcos
cld
mov
fdivr
std
mov
xlat
std
mov
fcos
mov
fdivr
stc
mov
jmp
mov
call
leave
int3
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
out
jmp
test
in
leave
fstp
fsubp
fcmovnu
fcomi
xlat
fcmovnbe
cli
fdivr
into
iret
iret
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
call
add
fildl
jbe
in
js
in
xor
sti
mov
loopne
std
ret
std
loopne
std
fdivrp
std
std
dec
std
dec
dec
sti
mov
leave
fmul
sar
mov
mov
xchg
adc
add
add
std
incl
incb
std
incb
hlt
cmc
testb
in
in
pop
in
out
in
sub
in
in
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsl
cmp
mov
add
test
add
add
les
imul
xlat
add
filds
ja
call
inc
pushf
cld
mov
in
cld
int3
loop
std
into
in
std
int3
in
dec
loop
dec
loope
dec
loope
dec
loop
std
shl
call
in
std
shl
cld
in
mov
fdivr
ret
ret
cmpsb
cmpsl
test
xchg
xchg
xchg
sbb
lcall
std
std
add
std
add
stc
testl
icebp
hlt
repnz
out
repnz
pop
in
icebp
icebp
cmp
in
in
pop
fsubp
loope
les
xchg
sti
lahf
es
mov
add
add
mov
inc
add
leave
add
roll
jb
fildl
jbe
jecxz
jns
in
movd
negl
sti
mov
shl
dec
jecxz
call
out
shl
call
in
call
call
call
jmp
fucomi
std
iret
loop
hlt
ret
in
fcos
lret
rep
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
sti
add
std
testl
hlt
div
or
aam
xor
mov
xchg
negb
add
add
lods
add
mov
add
lret
add
roll
jo
faddl
jne
out
jns
out
sbb
sti
loopne
fsubr
std
fldpi
std
fucomi
fldpi
fucomp
std
fucomp
fucomi
std
fsubrp
fucomip
std
loopne
shl
push
aad
out
fdivr
iret
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
mov
xchg
repnz
jmp
add
mov
add
int3
add
aam
jae
filds
jae
jmp
sub
shr
fsubrp
std
fucomi
fucomi
std
fucomi
call
jmp
cld
shl
cli
iret
loopne
cld
iret
loope
stc
int
push
lret
fdivr
test
lret
jmp
rcr
fcom
xlat
sti
mov
mov
lcall
add
add
add
fcom
add
leave
adc
scas
mov
lcall
add
mov
arpl
mov
add
rolb
outsl
call
add
loopne
js
jmp
ss
cld
cwtl
cli
enter
lret
cld
clc
mov
aad
repz
iret
push
mov
int3
jmp
mov
sar
call
shl
jmp
in
mov
mov
xchg
add
add
add
int3
add
mov
loopne
xor
jmp
add
mov
data16
mov
add
into
push
jo
rorb
je
ficoml
ja
loop
cmp
inc
xchg
ljmp
call
scas
enter
mov
cli
fdivl
lock
into
in
enter
into
shl
fcmovnb
out
loop
jmp
call
popf
jmp
lret
leave
push
lods
lods
lods
adc
cmpsl
test
add
ret
mov
ret
mov
lods
aam
dec
cmp
cmpsl
sbb
scas
es
mov
js
mov
inc
xchg
ret
stc
leave
fs
mov
out
mov
enter
enter
int
ror
int
aam
shlb
aam
jg
jb
gs
in
call
out
in
xor
div
mull
repnz
lock
fstp
or
mov
into
add
add
add
mov
rolb
mov
test
fwait
cmc
mov
jne
ljmp
mov
sarb
test
mov
pushf
leave
ret
enter
int3
jp
int3
shlb
rcl
push
rcl
rorb
fcom
inc
rcl
aam
aad
xlat
daa
fcomp
ficompl
fneni(8087
ficoms
fsubp
jecxz
jecxz
out
jmp
add
sti
testl
std
std
add
incb
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
ret
leave
xor
int
daa
int3
rcl
and
rcrb
rcl
aam
rcl
rorl
aam
aad
rcr
add
add
add
in
add
in
jmp
add
std
incb
mov
mov
add
ret
les
mov
mov
mov
push
rol
or
enter
enter
int
add
aad
add
fcom
add
add
fcom
add
aad
add
fsub
add
aad
add
loope
add
add
out
add
lock
add
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
mov
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
shlb
iret
shr
aad
aad
rcl
sar
into
ror
cli
int3
lret
int
lret
lret
int3
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
jg
addb
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
leave
leave
cld
into
iret
into
xlat
xlat
call
call
iret
iret
dec
into
into
dec
int3
lret
inc
mov
mov
stos
stos
stos
icebp
xchg
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
je
je
fs
inc
dec
inc
cmp
sub
sub
aaa
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
lret
int3
call
rcl
call
aam
dec
int3
int3
inc
mov
pushl
test
sahf
popf
lahf
xchg
xchg
cwtl
jmp
jo
xchg
pop
pop
pop
dec
add
add
add
add
add
add
addb
addl
aam
push
mov
push
push
push
stos
push
insl
insl
push
pop
pop
cmp
cmp
pop
jo
jno
mov
scas
pop
mov
mov
mov
mov
mov
ret
inc
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
fwait
cltd
fwait
out
addb
adc
xor
add
and
add
adc
add
pop
fwait
lcall
fwait
cwtl
cwtl
fcoml
addb
jl
jnp
js
jp
jns
jp
jnp
jp
jb
je
push
push
push
cmp
aaa
pushf
popf
sahf
mov
scas
scas
repz
scas
lods
sti
scas
scas
scas
std
test
pushf
pushf
call
xchg
call
mov
scas
jmp
lods
scas
leave
cmpsb
movsb
movsb
cltd
je
je
adc
adc
add
add
add
add
outsl
insl
insl
pop
xchg
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsb
jo
lea
cwtl
cwtl
lcall
mov
call
popf
popf
ljmp
test
std
mov
scas
mov
xlat
cmpsl
mov
addl
add
add
pop
popa
popa
or
lods
mov
cmpsl
lahf
movsl
decl
lea
call
sahf
sahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
imul
jge
subl
mov
std
xchg
mov
ljmp
jle
pushl
pop
mov
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
xchg
lcall
cwtl
fwait
fwait
fwait
fwait
fwait
popf
pushf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orb
xchg
imul
popf
dec
jnp
mov
xor
je
scas
sbb
imul
sbb
mov
mov
scas
mov
movsl
mov
add
add
add
pop
pusha
popa
or
mov
in
movsl
test
cltd
xchg
cwtl
lcall
mov
mov
decl
addl
cld
xchg
pusha
cmp
dec
jp
xchg
cmp
xchg
sub
xchg
sbb
cwtl
adc
sahf
punpcklbw
cmpsl
pop
push
pushl
sbb
mov
and
pop
nop
mov
scas
lods
xchg
sahf
sahf
lahf
adc
add
add
pop
pop
pop
or
lods
mov
stos
movsb
cmpsl
jmp
cmpsb
test
stos
test
test
decl
cmp
mov
decl
adc
or
mov
push
call
add
popf
add
test
arpl
mov
je
mov
sub
jge
xor
lret
xor
ret
test
mov
test
add
add
add
add
popa
or
movsb
stos
in
mov
cmpsb
pushl
mov
pushl
xchg
mov
decl
push
push
incl
add
decl
add
xchg
add
lahf
add
cmpsb
add
mov
insl
inc
cmp
dec
inc
mov
roll
call
inc
nop
call
popa
lahf
inc
cmpsl
mov
mov
movsl
mov
add
add
add
pusha
or
sahf
mov
ljmp
mov
pushl
mov
ljmp
push
jge
pop
popa
call
pop
pop
decl
add
xchg
add
lahf
add
cmpsb
add
scas
add
and
rorl
fstps
fistpl
fistps
jmp
pop
mov
jmp
insb
cmpsl
dec
cmpsb
mov
ret
movsl
xor
jg
add
add
dec
dec
dec
pop
jl
jp
pushf
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
jmp
sub
lcall
and
call
add
popf
add
add
mov
arpl
mov
xor
jecxz
stos
jmp
jo
ljmp
in
jno
jmp
jp
call
test
std
mov
test
addb
add
dec
dec
dec
pop
insl
insl
imul
test
fwait
cwtl
xchg
pushl
mov
mov
mov
je
lcall
cmp
popf
sub
cwtl
or
lcall
ljmp
add
ret
or
xchg
jmp
jns
jmp
test
push
mov
push
xchg
mov
test
push
cltd
cltd
fwait
add
sub
sub
push
push
dec
pop
pushw
mov
mov
mov
ret
mov
xchg
jmp
sub
lcall
ljmp
add
mov
adc
fbld
in
xchg
sar
xchg
push
cwtl
push
xchg
push
fwait
enter
lret
push
xchg
jmp
lods
mov
stos
popa
lahf
lahf
mov
add
xor
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
xchg
test
ljmp
insb
lcall
add
mov
mov
add
and
push
mov
iret
stc
test
sar
sti
stos
iret
lods
sar
cli
cmpsb
int
out
enter
ret
stos
stos
jne
pushf
sahf
or
add
add
push
dec
dec
aaa
jb
je
stos
stos
test
out
int
cmc
lret
int3
lret
lret
lret
enter
movsb
mov
stos
bound
jmp
add
mov
arpl
ret
dec
add
fiaddl
ljmp
cld
mov
std
mov
fdivr
cld
mov
xlat
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
or
rcl
dec
loopne
loope
loopne
loope
fcmovnu
ffree
fcmovnu
aam
fsubr
shll
cmpsl
sub
jmp
add
mov
add
add
or
icebp
push
mov
std
std
loop
std
enter
leave
std
enter
lret
loopne
cld
fdivr
out
mov
lret
mov
xchg
sahf
pushf
sahf
sbb
add
add
incb
std
add
ljmp
jmp
in
xor
loop
loop
lds
mov
mov
add
pushl
add
iret
add
fildl
jbe
ljmp
std
fdivrp
std
shl
shl
std
shl
std
aam
out
call
out
cld
shl
push
fdivr
fmul
sar
mov
mov
add
std
std
incb
std
add
std
pop
aam
push
mov
pop
xchg
sahf
or
ljmp
add
ret
add
rolb
jno
filds
jbe
out
pop
mov
cli
mov
std
shl
fsubr
fucompp
std
cld
xlat
out
fld1
std
aam
push
enter
rcl
sti
mov
lahf
popf
das
add
add
into
int
or
arpl
ljmp
gs
add
aam
jb
loopne
ja
in
xor
stc
int
clc
lret
cmc
vpaddd
aad
icebp
rcl
lock
out
aam
in
shl
in
shl
jecxz
fsubrp
mov
stos
das
std
incb
aad
aam
mov
jb
or
insl
inc
sbb
int
jl
cs
ficoms
in
mov
out
jecxz
lret
jmp
fnstsw
int3
leave
ffreep
sarb
jecxz
ficompl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
xchg
fidivrl
jg
rol
stos
mov
mov
ret
nop
rol
leave
jge
aam
int
aam
rorl
xlat
xlat
cmp
loopne
das
in
frstor
jecxz
lock
jmp
or
incl
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
aam
rol
adc
rcl
or
loope
or
int3
int3
add
std
incb
std
std
add
add
add
int
pinsrw
or
int3
int
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
ret
mov
mov
rol
mov
scas
scas
scas
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
enter
sar
aam
std
rcl
sar
into
iret
int
mov
mov
test
cmpsl
sarl
gs
sbb
add
add
add
add
add
add
add
add
jno
jno
push
dec
inc
das
cs
sub
and
add
add
mov
mov
cmpl
dec
int3
int3
call
rcl
dec
into
into
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
jne
test
adc
outsl
outsl
ret
popa
mov
addr16
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
cwtl
lds
jae
and
add
pop
add
add
jae
jae
popf
xchg
lcall
test
mov
test
addl
push
dec
push
inc
mov
fwait
into
movsb
mov
mov
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
sahf
cmc
cltd
lcall
push
push
push
imul
jle
mov
xchg
notl
mov
pushl
xchg
mov
test
call
stos
stos
stos
add
add
add
test
scas
cld
xchg
xchg
xchg
call
fwait
cltd
lcall
cltd
lcall
mov
loope
jbe
out
xchg
bound
std
fwait
inc
jne
cmpsb
aaa
jbe
scas
sub
jno
mov
insb
pushl
popf
lods
lock
mov
imul
int3
add
xchg
pop
scas
cmpsb
stos
test
popf
popf
lahf
jmp
mov
xchg
decl
push
js
popl
decb
arpl
xchg
adc
cwtl
or
or
pushl
and
mov
daa
jns
les
xchg
rcrl
subl
je
push
movsb
pushf
mov
cld
test
scas
scas
pushl
mov
decl
or
mov
push
decl
add
mov
adc
shlb
call
inc
mov
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsb
mov
add
imul
test
mov
scas
pushl
mov
mov
call
sbb
mov
push
call
add
add
mov
push
xchg
fstpl
loope
mov
jmp
cmpsb
call
fwait
mov
test
cmpsl
cmpsb
pop
add
add
bound
adc
sahf
pushf
fwait
cld
mov
scas
mov
mov
mov
fwait
dec
jl
fwait
xor
lcall
jmp
add
mov
addr16
xor
call
jl
out
jge
push
jge
ficompl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
arpl
jmp
add
ljmp
add
pop
insb
fimull
in
lea
push
xchg
push
xchg
clc
xchg
jmp
movsl
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
mov
xchg
ljmp
sbb
movsl
add
mov
gs
add
vmread
in
insb
scas
clc
cmpsl
iret
cli
stos
sar
cld
scas
sar
sti
scas
sar
std
scas
iret
jmp
enter
mov
ds
incl
xor
xor
scas
mov
mov
aad
mov
aad
fnop
rcl
out
lret
enter
mov
jmp
add
ret
call
add
out
xchg
clc
nop
std
mov
fdivr
cld
ret
std
ret
cld
ret
icebp
mov
ret
in
test
dec
jg
jg
add
add
lods
stos
lods
add
in
jmp
call
call
in
fisubl
movsb
daa
outsb
ljmp
add
lret
add
fldl
push
cmp
dec
in
call
in
shl
aam
call
out
cmc
fcos
aad
int3
in
scas
scas
scas
popa
cmpl
add
incb
incb
int
shrb
sahf
sbb
lods
add
mov
add
loop
jp
cmc
push
cmpsl
dec
loope
cld
aad
aad
cld
aad
std
aam
cli
shl
push
leave
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
push
jae
ficomps
cmp
insl
lods
cld
out
mov
shl
jmp
mov
shl
in
aam
call
fcmovnu
scas
les
cltd
cltd
add
rol
or
popf
stos
xchg
dec
and
shll
lret
mov
xlat
mov
lret
int
xlat
lret
rcrb
rcl
dec
in
fistpll
call
in
out
sbb
sarb
cmp
movsb
lods
arpl
stos
mov
les
ret
and
ret
int
fisttpll
int3
into
int3
or
aad
std
add
std
incb
stos
std
add
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
outsb
mov
in
push
dec
adc
icebp
jo
mov
sub
sbb
mov
mov
xchg
andb
sbb
add
mov
mov
into
add
cmp
jnp
push
sahf
xor
adc
popa
repnz
add
inc
and
sub
push
cmpsb
mov
enter
mov
lret
add
addr16
lret
out
push
pop
cmp
add
push
pop
cmp
push
mov
stos
arpl
sbb
jmp
mov
cmpsl
or
nop
das
mov
stc
rcll
jno
fldt
add
das
addb
incb
xchg
mov
jle
xchg
xor
ljmp
idivb
sub
hlt
lahf
cld
cmpsb
cmpsb
sbb
push
sub
sbbl
pop
shrb
shrl
lock
icebp
sub
mov
imul
xor
sarl
xor
insl
adc
into
scas
test
test
test
or
sub
add
clc
bound
mov
das
jmp
jle
dec
sbb
push
push
and
add
cmc
pop
imull
in
loop
repnz
in
in
sbb
test
nop
xchg
inc
arpl
call
fidivrl
aad
jns
jne
cltd
and
adc
ja
inc
mov
mov
dec
outsb
lret
aad
mov
jl
lea
sbb
xchg
repnz
cmp
jbe
xchg
test
test
mov
enter
lea
mov
inc
mov
cmp
sub
into
push
lods
sbbb
les
add
mov
jno
or
mov
jl
cld
movsb
std
xor
jmp
adc
cmp
push
jmp
and
std
mov
in
mov
jge
sub
lds
mov
cli
ja
or
xchg
insl
clc
out
incl
xor
les
js
and
stos
sub
cld
call
fcompl
adc
roll
sbbl
add
int3
adc
movsl
mov
dec
fwait
or
arpl
imul
sti
mov
pop
mov
or
ds
fildll
lea
mov
add
inc
dec
sbb
insl
mov
sbb
jb
sbb
outsb
stos
jge
pushl
mov
shrb
dec
jge
or
sahf
sub
add
test
fwait
shlb
movsb
push
sbb
fistpll
xchg
fidivrs
out
lods
lret
std
xlat
cmpsl
dec
popf
mov
xlat
das
fdivl
or
cmp
dec
add
push
jb
incl
lea
pop
fidivrl
jno
cltd
adc
es
mov
pop
jge
xor
add
lcall
pop
ret
xor
mov
jecxz
push
cltd
xchg
push
push
xor
adc
lock
push
push
adc
adc
push
adc
push
je
inc
xchg
inc
cmp
mov
cmpb
mov
and
lahf
xchg
std
das
test
pop
xchg
fidivs
cld
pop
int3
mov
daa
enter
idivb
inc
loopne
mov
jle
jecxz
fs
sub
mov
dec
out
ffreep
lahf
mov
and
fists
pop
jmp
outsb
push
insl
inc
xchg
sub
push
dec
pop
decb
mov
pop
push
jmp
lea
cltd
fwait
xchg
ror
int
xchg
jmp
rorl
add
sub
aam
into
subb
xlat
cwtl
xor
adc
into
xor
inc
pop
ljmp
add
outsb
add
in
insl
adc
hlt
sub
pop
cli
jnp
and
add
mov
out
mov
movl
cltd
mov
sub
push
lcall
das
mov
dec
mov
xchg
fnstsw
cmp
dec
pushf
pop
push
fimuls
fists
xchg
or
sbbl
inc
add
subb
dec
dec
or
mov
mov
stos
mov
jl
sub
arpl
xor
adc
jge
jge
mov
out
and
es
fnstcw
xchg
add
into
push
insl
nop
lods
push
sub
mov
notl
pop
sub
sub
icebp
pop
test
mov
lds
xlat
xchg
fadds
iret
imul
mov
pop
mov
gs
outsl
cmc
lods
xor
lock
jno
daa
jg
dec
adc
outsl
ljmp
jne
inc
cmp
addl
movsl
pop
add
stc
cmp
sbb
lods
cmpl
loop
imul
loopne
lea
pushf
jne
inc
daa
sub
xchg
iret
cmp
inc
push
insb
sbb
ljmp
mov
arpl
mov
test
dec
ret
pushf
mov
or
jl
jns
xor
jo
adcl
mov
outsl
xchg
stos
insl
imul
or
mov
sub
in
insb
shl
imul
pop
shl
out
dec
jbe
add
adc
rclb
pop
pop
jl
leave
mov
shlb
fwait
xor
cs
sub
mov
xchg
pop
cs
push
pop
repz
ficomps
pop
pop
lock
ret
std
mov
cmpsb
mov
insb
add
adc
data16
or
fldl2e
push
cmc
mov
in
aaa
adc
ljmp
adc
sub
jecxz
add
addr16
out
push
inc
rolb
test
push
cli
xchg
je
dec
sarb
mov
add
js
pop
shl
arpl
fstpt
jno
les
cmp
inc
mov
mov
out
fisubrs
rclb
xor
icebp
mov
das
xchg
push
cmpsb
sbb
pop
es
xchg
movsb
sbb
lods
cmp
mov
xchg
imul
sub
or
mov
outsl
mov
popa
or
ds
mov
pop
pop
mov
insb
shrb
aam
pop
repz
scas
inc
push
mov
iret
adc
leave
and
lds
pop
icebp
sbb
movsl
cmp
repnz
movsl
push
mov
pop
or
sub
cmp
xchg
sub
ret
scas
arpl
push
ret
xlat
mov
fisttpl
mov
ret
xchg
xchg
sub
xchg
outsb
push
pop
mov
xchg
push
mov
mov
sbbb
jmp
xor
mov
and
mov
mov
insl
pop
sub
mov
inc
loope
stos
adc
gs
das
xor
leave
gs
sbbl
xchg
mov
mov
add
sub
and
fnsave
stos
inc
mov
sti
xchg
iret
ror
pop
add
sbb
pop
inc
aaa
into
je
add
stos
xchg
push
in
lret
and
sbb
inc
fmuls
xchg
sub
mulb
ret
hlt
loopne
leave
push
sub
and
sarl
xor
ret
outsb
or
mov
stc
jge
inc
push
cmp
xor
dec
xchg
jge
lahf
xlat
and
pop
subl
lods
rorl
jb
sarb
adcb
adc
or
add
cs
hlt
mov
aas
inc
in
out
loope
ljmp
outsb
sub
out
rorl
pop
cmp
mov
pop
adc
inc
sbb
add
xor
js
mov
fcoml
adc
das
mov
popa
sti
lcall
dec
mov
xchg
mov
push
movsl
pop
cmc
hlt
mov
jl
ret
lods
dec
adc
lcall
imul
sbb
ds
add
movsl
cmp
xchg
mov
ret
sbb
pop
dec
in
aas
push
outsb
loop
mov
roll
repnz
jnp
adc
mov
fldl
cltd
push
cmp
das
and
js
enter
lret
dec
mov
shrb
add
outsb
xor
push
cmc
mov
sub
insb
arpl
lds
fisubrl
add
sbb
fcomps
sub
scas
push
call
je
out
xor
leave
pusha
imul
cmp
clc
pop
fstpl
or
xchg
insb
lods
rclb
pop
out
incb
jp
xchg
pop
aam
xorb
mov
aaa
or
jge
dec
xlat
push
ljmp
push
in
lds
pop
outsl
popa
pop
repnz
nop
sbbl
xor
shrb
add
xchg
push
sbb
push
mov
inc
daa
testl
fwait
clc
pop
lea
outsb
ja
pusha
imul
and
sbb
mov
xchg
imul
sbb
jne
lods
mov
outsb
shlb
mov
inc
push
call
in
mov
je
fstpt
aad
cltd
mov
inc
sub
mov
mov
cld
xchg
mov
mov
pop
fs
js
ljmp
movsl
cmp
lcall
mov
pop
xchg
scas
out
xchg
les
inc
mov
xor
mov
sub
pop
dec
rclb
push
sbbl
outsl
outsl
orb
add
fnstsw
int
sbb
nop
inc
mov
sub
out
jb
dec
scas
inc
cmp
push
mov
andb
pusha
pop
push
call
repnz
mov
test
lds
fwait
xor
ret
pop
sti
cmp
jbe
popf
std
xchg
lret
int
aad
insl
daa
mov
rorl
xchg
in
and
js
stos
inc
jmp
nop
push
sbb
push
fidivl
mov
cmp
xor
xor
inc
aam
and
xchg
push
mov
in
subl
xor
mov
sti
outsl
test
inc
mov
cmpb
in
adc
inc
fnsave
loopne
mov
push
es
sti
data16
push
xchg
adc
lret
js
call
mov
dec
pusha
notl
cmp
popa
pop
scas
pop
sahf
and
xor
adc
data16
mov
fists
outsb
inc
js
iret
sahf
push
data16
cmp
insl
insl
rcrl
dec
loop
mov
int
and
xchg
test
mov
pop
ds
inc
inc
xlat
aaa
xor
pop
imul
adc
xchg
dec
imul
mov
sbb
into
gs
or
add
test
mov
bound
aaa
or
cmp
in
cmp
dec
roll
popf
clc
outsb
mov
pusha
xchg
adc
repz
test
sbb
imul
adc
cmp
js
int
xchg
loopne
xchg
roll
cmp
jbe
add
xor
cmp
and
xchg
pop
hlt
or
in
xor
in
sbbl
test
cmpsl
and
in
lds
mov
xchg
vmread
adc
inc
xchg
sub
sbb
push
sub
lock
enter
inc
leave
pusha
xor
mov
in
push
out
inc
mov
cwtl
mov
push
jg
test
pop
insl
das
add
repz
cli
jae
and
iret
adc
and
inc
stc
aaa
fs
hlt
cwtl
pop
sbb
pop
push
ret
lods
inc
add
aam
lods
ja
fmuls
sbbl
xchg
dec
lahf
ss
outsl
push
and
inc
cwtl
das
cmp
aam
adc
rorb
xchg
jmp
xchg
iret
add
jae
jno
xchg
add
mov
and
mov
pop
mov
jl
clc
test
std
dec
cmp
cmp
xor
dec
imul
cmp
daa
repnz
jnp
adc
xchg
jmp
sbb
nop
daa
cmc
cmp
into
repnz
fs
lahf
loope
loopne
xor
add
or
pop
push
add
and
mov
ss
cmpsb
inc
fcmovbe
mov
mov
pushf
push
sbb
outsb
arpl
loope
jbe
stc
fmull
stc
mov
stc
cwtl
jle
mov
push
fdivl
lods
sub
xor
call
js
rol
pop
out
and
out
mov
xabort
int
imul
dec
jl
pop
lock
sub
aas
inc
das
rcrl
pop
icebp
das
ret
movsb
cmp
xlat
pop
repnz
mov
test
fistpl
xchg
sub
pusha
push
mov
adcb
mov
mov
inc
ficoms
xor
sub
or
jno
push
xchg
int3
pop
jge
test
push
lods
fisubrs
aas
push
inc
xlat
lock
repnz
xor
and
ja
movsb
fsubrs
test
movsl
shlb
jno
test
lret
mov
fcompl
stos
imul
sbbl
add
pusha
daa
xchg
xor
pop
fsts
xchg
fwait
rcr
idivb
adc
dec
sbb
scas
pusha
xchg
push
pop
scas
inc
mov
inc
gs
add
xchg
lret
dec
sbb
cltd
push
lods
mov
aas
fiaddl
data16
adc
adcb
leavew
pusha
pop
pop
lcall
inc
mov
push
ds
test
sub
or
call
xor
push
adc
scas
out
imul
jl
jmp
mov
pop
lock
and
adcb
lahf
ss
inc
fsubl
dec
pop
sahf
cmp
pop
xchg
sub
dec
loopne
outsb
enter
jg
test
sbb
xchg
adc
test
leave
pusha
pop
jmp
enter
repz
int3
or
rcr
mov
ret
mov
js
add
cmc
jne
arpl
push
xchg
cmpsl
or
mov
pushf
addr16
mov
push
popf
xor
dec
outsl
push
inc
and
arpl
add
and
xor
mov
sbb
fidivl
sbb
mov
addr16
call
mov
das
mov
mov
bnd
jle
jecxz
xor
stc
mov
and
leave
pusha
jmp
or
mov
out
popf
ss
popf
pop
repnz
das
aad
mov
ret
mov
pop
repnz
aad
aas
pop
mov
mov
pop
daa
mov
sub
nop
daa
pop
fstl
cmpsl
into
flds
lcall
and
mov
fbstp
push
add
movsl
je
fldenv
jmp
add
in
ljmp
popf
cmp
test
lock
push
call
js
xor
cli
or
das
sub
repz
sahf
cmp
sahf
ds
cmp
inc
pop
dec
loopne
inc
xlat
cmp
daa
mov
dec
fs
inc
jo
add
add
xor
push
outsb
add
and
push
jmp
mov
push
lods
push
sar
xchg
in
aaa
push
lcall
sub
jp
stos
cmp
sbb
rorl
lret
mov
cmpsl
mov
fidivrl
in
sbb
fldl
cmp
adc
clc
jmp
repz
and
jp
inc
inc
mov
ja
mov
lcall
push
in
jmp
arpl
ds
test
testl
aad
nop
daa
andl
sbb
insl
test
cltd
xor
nop
cmp
dec
out
insl
fsincos
pop
scas
in
outsl
inc
fsubl
fidivs
int
jo
out
std
xlat
xchg
mov
daa
fistl
in
in
arpl
or
cmc
mov
iret
test
das
mov
les
cmp
fnsave
mov
inc
push
jno
and
scas
inc
inc
je
jo
fs
cmp
mov
pop
aas
cmpsl
add
xchg
adc
mov
mov
xor
inc
fistl
int3
lea
dec
in
fbstp
xchg
out
pop
fcomps
mov
sub
cli
pop
lgs
rcl
lods
add
int3
push
fildll
mov
dec
int
xor
int3
mov
fsubrs
std
dec
loop
in
inc
cmp
mov
mov
mov
sbbl
out
sbb
cli
rorl
xchg
mov
ljmp
xor
xor
outsb
push
sub
lea
js
xor
and
dec
loope
gs
and
arpl
fistpll
xchg
sbb
jle
iret
subb
jbe
sub
clc
dec
cmp
sbb
or
and
jmp
dec
out
stc
imull
in
repz
out
aad
inc
frstor
inc
mov
stos
pop
xchg
mov
mov
mov
jno
sub
lret
repz
cmp
or
jno
mov
or
pop
aam
inc
xlat
dec
push
fdivrl
jmp
pusha
mov
aas
stos
pop
or
jno
mov
cltd
push
adc
jo
dec
je
stos
xor
jmp
mov
out
test
adc
pusha
scas
dec
jle
push
iret
mov
das
je
inc
inc
push
xchg
sub
scas
inc
xchg
mov
sub
arpl
push
das
push
jl
inc
inc
repnz
push
xchg
pop
pop
ja
nop
jle
adc
testl
push
xor
push
nop
pop
dec
aad
add
roll
push
lods
mov
jle
jb
push
and
inc
fsubrs
pop
pushf
xor
lea
loope
or
cs
pop
pusha
pushf
fidivl
sbb
mov
fsubs
lret
adc
call
cmp
fisttpl
ja
lea
stc
mov
ret
sub
loop
ret
add
push
dec
mov
mov
jne
mov
cmp
push
fidivl
push
aam
jno
movsl
cmp
xchg
repnz
fsubp
jle
adc
sbb
lcall
cltd
rorb
jnp
repz
cwtl
pushf
xor
call
sahf
xor
dec
mov
cs
insl
js
jp
cli
xchg
push
fwait
add
mov
les
out
and
test
popf
xor
leave
push
in
cli
mov
dec
fisttps
popa
enter
adc
nop
mov
mov
arpl
push
in
xchg
roll
shll
inc
xchg
add
scas
je
ss
cmp
cmp
sbb
out
out
shlb
push
jbe
xchg
inc
lods
js
add
xchg
adc
push
out
inc
ret
cltd
xor
das
movb
outsl
push
mov
fisubrl
push
xor
stos
inc
add
stos
and
test
scas
or
pop
xchg
xchg
sub
aam
ficomps
mov
mov
cmp
movsbl
bound
loopne
xchg
stos
pushf
xor
xchg
dec
filds
rcrl
and
in
xchg
xchg
xchg
xchg
sub
lcall
mov
mov
xchg
or
or
mov
sub
imul
mov
popf
xor
sub
jbe
fwait
enter
sahf
xor
shlb
adc
loope
mov
mov
or
adc
fsubrs
or
mov
test
orb
and
repz
fs
divl
insl
movsl
cs
mov
mov
mov
and
inc
fsts
jmp
js
xchg
dec
mov
mov
pop
push
or
ret
inc
mov
int
inc
mov
loope
pop
roll
rclb
in
andl
insb
add
pop
lock
pop
lock
aam
push
enter
in
daa
mov
pop
jns
icebp
insb
aas
jl
scas
dec
adc
popa
add
adc
out
popf
add
cmpsb
ja
clc
add
pop
push
out
pop
fidivl
in
xchg
xlat
repz
dec
loope
lret
push
jmp
mov
sub
cmpb
fisttps
mov
adcb
xlat
mov
pop
mov
out
push
or
xchg
mov
ljmp
and
pop
mov
xchg
sub
int3
arpl
mov
cmp
mov
fildll
rcl
testl
lcall
fidivrs
scas
jno
cmp
fisubs
inc
xlat
filds
into
push
add
shlb
xor
notl
fcoml
sub
pushf
je
sarl
mov
pop
icebp
imul
sbb
or
repnz
jp
push
xorb
inc
jmp
push
cmp
cltd
mov
or
int3
hlt
mov
cs
test
adcb
xchg
imul
mov
cmc
mov
xlat
jbe
call
or
mov
ret
fldenv
add
mov
sbbl
rcrb
loop
xchg
into
add
xchg
out
in
test
mov
jp
push
pop
and
dec
int3
inc
fdivrp
jo
jnp
push
ss
push
fwait
xor
rcl
into
gs
jne
ret
xor
mov
loope
lds
and
es
shrl
lods
inc
out
lahf
ss
or
fs
jns
push
stos
mov
scas
inc
fcmovu
scas
inc
and
cld
xchg
incb
mov
ret
adc
mov
stc
dec
fistpll
filds
jmp
push
ljmp
jno
push
pusha
negl
add
scas
sbbl
loop
mov
pop
xor
push
lret
bound
stos
mov
or
test
popf
dec
popf
mov
idivb
inc
rcrl
pop
mov
js
pop
insl
push
sbb
inc
sub
dec
loop
dec
scas
inc
popa
aaa
pop
scas
nop
cmpb
adc
push
mov
lods
imul
scas
pop
out
rcrb
pop
loope
mov
jle
mov
xchg
in
icebp
fcomps
push
test
cmp
das
cmp
imul
ret
cmpsb
cmp
push
dec
imul
cs
and
mov
dec
outsl
push
cmp
shlb
popa
mov
int3
arpl
pop
mov
sahf
add
lds
fstps
insl
add
nop
inc
fld
jne
mov
in
sbb
lea
int
adc
sub
ficoms
xor
cmp
stc
nop
inc
sub
rcrb
jno
cmp
xchg
es
xchg
fiadds
sub
stos
cmc
das
mov
repz
inc
fiadds
mov
cltd
xor
roll
push
bound
and
ja
pop
addr16
movsb
cmp
xor
lahf
mov
daa
in
adcl
lds
inc
xor
xor
shlb
sbb
outsl
mov
call
dec
aaa
pop
scas
cmpsl
mov
arpl
stos
ror
mov
mov
fwait
xchg
cmpsb
mov
icebp
movsb
aaa
lock
push
jmp
dec
rolb
int
inc
fstpt
lahf
push
sahf
addr16
cli
daa
pop
icebp
pop
sbb
mov
int
ja
lahf
ss
ljmp
mov
mov
lcall
ret
lret
fidivrs
popf
xor
and
xchg
test
in
movsl
cmp
push
add
subl
jbe
mov
out
test
push
pop
repnz
pop
cmp
dec
mov
jecxz
lock
jae
adc
xchg
test
sbb
repnz
es
std
pop
rclb
xchg
sub
lret
mov
inc
lods
inc
xor
add
in
clc
pop
sahf
xor
or
or
shll
pop
repz
filds
inc
fldpi
data16
arpl
adc
ret
fmull
aaa
adc
mov
adc
inc
sbb
jp
into
gs
fwait
jnp
or
inc
data16
lcall
mov
icebp
in
andl
cmp
inc
xchg
pop
mov
sub
arpl
add
repz
iret
pop
movsb
mov
sbb
test
popf
xor
out
jnp
lock
test
and
mov
push
mov
sbb
imul
add
les
xchg
in
leave
call
mov
test
lcall
mov
and
mov
fbstp
push
shrl
xchg
clc
inc
stc
xchg
sub
int3
lea
gs
xchg
dec
test
loope
sub
testl
inc
lret
cmp
sbb
dec
cmpsb
call
cmp
fldenv
sbb
addr16
xor
popf
lcall
jno
dec
dec
gs
xchg
imul
lahf
jnp
push
scas
inc
mov
mov
inc
fiaddl
or
cmp
xchg
mov
inc
cmp
sbbl
inc
cld
out
rcrl
pop
sarl
push
mov
jmp
bound
shlb
xchg
mov
cld
sub
mov
sub
fisttps
mov
cmp
ljmp
out
test
out
notrack
fidivl
sbb
sbb
loope
sbb
push
clc
filds
test
sub
es
outsb
lock
dec
sub
and
dec
les
psubsw
scas
pop
lods
inc
sarb
test
in
xchg
mov
out
push
and
dec
out
out
adc
aas
inc
adc
dec
icebp
cld
xchg
in
add
testb
inc
fcomp
nop
cmp
clc
int3
sbb
sub
and
les
lret
cwtl
fdivs
pop
lret
fldl
mov
fnsave
les
pop
mov
adc
jge
andl
scas
pop
repz
aas
mov
add
push
xchg
jl
jne
xchg
bound
lods
xor
bound
cmp
add
sbb
mov
idivl
aad
stc
es
adc
push
lds
or
adc
dec
mov
jecxz
push
or
mov
mov
cmpsb
mov
lahf
add
jb
cli
and
mov
rcl
loope
xlat
movsb
or
sub
xchg
add
pop
clc
movsb
mov
stc
sbb
xchg
insl
sbb
aam
mov
push
mov
es
xchg
jne
dec
in
xchg
jns
adc
cli
dec
mov
sbb
push
subb
imul
jo
arpl
shlb
xor
lock
xor
push
jb
and
test
inc
fidivl
add
push
js
adc
daa
push
test
xor
mov
jg
mov
xor
cmp
xchg
mov
jle
dec
dec
outsb
cwtl
pop
xchg
mov
out
or
cmpsl
movsl
jmp
scas
mov
fnstenv
int
movzbl
std
sub
add
sbb
push
fdivl
out
fsts
xchg
xor
push
add
popa
jp
inc
in
sbb
push
cmp
xchg
push
popf
jae
jmp
je
movsb
icebp
mov
mov
popf
xor
pop
outsl
push
js
xor
cmp
inc
lds
cmc
mov
cmpb
cmpsb
push
and
cwtl
xchg
inc
out
jns
and
mov
cmp
jp
cld
xchg
add
xchg
ret
adc
cmp
jmp
ret
out
rcrb
push
pop
mov
int3
add
cmpb
call
dec
push
dec
add
jl
fwait
clc
imul
push
je
sti
jp
jle
out
div
outsl
sti
data16
push
add
pusha
jo
xchg
enter
popa
pop
xchg
les
outsb
push
orb
xchg
mov
in
mov
jo
jmp
or
fldl
scas
test
mov
lods
je
std
cmp
jmp
or
add
jnp
ja
sti
negl
pop
jmp
jmp
lea
out
mov
sub
enter
jg
cld
lahf
out
hlt
test
fildll
jne
jle
pop
push
mov
or
std
xchg
xchg
mov
dec
outsl
jmp
mov
inc
xchg
fcmovne
imul
popf
in
cwtl
outsb
out
xchg
jmp
fisttps
adc
test
xchg
movsl
cwtl
incl
popf
xor
repz
test
mov
mov
mov
nop
je
xor
adc
jae
push
sarb
fs
inc
and
mov
cmp
rcrl
pop
scas
scas
jns
and
xchg
cld
xchg
jnp
andb
std
sub
std
sbb
nop
push
sbb
loopne
jp
int
add
loop
pop
sub
mov
adc
jp
mov
cmpsl
lds
shl
enter
jmp
out
xchg
and
sarb
int3
add
push
out
inc
dec
ds
and
add
xor
outsb
stos
cmpsb
lock
pop
ja
dec
roll
push
mov
popa
lret
inc
frndint
in
test
cmp
cld
add
leave
imul
pushf
stos
xchg
xchg
or
mov
nop
adc
hlt
xorl
das
bound
ljmp
cwtl
sarb
pop
mov
and
daa
mov
push
and
repnz
sub
nop
daa
test
rclb
mov
lea
mov
mov
mov
scas
repz
pop
adc
mov
pushf
sub
push
xor
ljmp
hlt
xchg
mov
xor
fmul
pop
adc
dec
mov
inc
cs
mov
lock
mov
inc
lods
inc
add
push
xor
mov
and
sub
lds
setp
movsb
pop
mov
add
inc
or
jne
call
or
sbb
ret
call
jb
push
nop
mov
xor
lds
shr
mov
lahf
test
jmp
mov
mov
popa
lret
push
mov
jnp
adc
aas
fildl
stos
dec
jl
testb
sahf
add
mov
stc
loopne
mov
pop
ror
iret
outsl
or
dec
jno
mov
pop
je
xchg
mov
fldenv
mov
inc
pushf
sub
popa
adc
pop
jmp
sub
lea
xor
pop
adc
les
mov
nop
mov
push
mov
hlt
mov
stc
jmp
mov
nop
lea
scas
mov
mov
or
adc
clc
mov
pop
loope
outsb
ret
jo
jnp
pop
ja
sbb
addr16
inc
mov
mov
pop
mov
je
and
inc
loopne
mov
mov
imul
add
add
sbb
sti
dec
jmp
lock
mov
insb
cmovnp
insb
sbb
lods
xchg
xchg
imul
mov
sub
pop
call
and
stos
test
imulb
mov
adc
rorl
push
out
jo
es
fwait
repnz
push
out
hlt
lahf
out
push
js
and
stos
inc
sti
inc
lods
cs
jmp
mov
push
pop
push
rcll
push
push
dec
cmp
pop
shll
jl
outsb
out
in
push
pop
mov
jl
fcomps
dec
lods
xor
or
jns
insb
rorb
pop
xor
lea
daa
shl
adc
xor
mov
imul
mov
icebp
out
dec
mov
mov
jp
fucomi
jle
js
xchg
xchg
aas
call
adc
pop
dec
pushf
xchg
movsb
pop
inc
add
filds
xchg
push
je
pop
ss
sbb
mov
push
jp
sbb
cmpsb
insb
add
adc
jns
sbb
pop
fs
ss
mov
sub
inc
int3
push
pop
xchg
xor
shrb
and
insb
and
jb
sub
jno
cwtl
aam
jns
lea
scas
movsb
es
add
mov
stc
lret
bound
jmp
jb
cmc
and
adc
andb
mov
sbb
mov
jg
clc
negb
dec
push
push
xchg
pop
mov
push
push
in
or
rcl
cmpsb
inc
xchg
das
es
pop
cld
sti
mov
sub
lcall
scas
jecxz
je
adc
mov
cmp
or
sub
mov
fstpl
int
dec
incl
and
jmp
xchg
cltd
subl
cmp
sbb
dec
in
adc
in
xrelease
fsubrp
sti
in
jmp
pop
sbb
out
jg
jge
xor
in
mov
inc
xchg
jbe
jl
xor
or
or
fistps
cmpsl
rcl
push
mov
add
icebp
popf
sub
push
int3
xor
cltd
and
lds
roll
push
dec
mov
mov
mov
dec
imul
js
rclb
mov
inc
repz
repz
xchg
jmp
stos
mov
push
jo
push
add
fwait
pusha
movsb
xchg
stos
mov
push
pushf
cli
and
lcall
aad
icebp
and
and
sbb
lods
xchg
cs
jle
fdivs
or
cmp
jmp
sub
std
adc
pop
in
mov
jge
lods
cmp
sub
fbstp
out
sub
bound
mov
sub
dec
bound
inc
dec
jne
and
rcrl
fwait
insb
fdivrl
cmc
in
outsl
push
push
cli
cmp
sub
dec
adc
xchg
push
xor
jp
dec
pushf
cmp
sbb
xor
aad
xchg
addl
outsb
adc
bound
js
or
xorb
mov
sub
push
test
pop
add
ret
inc
add
lahf
fldenv
add
lock
cmp
je
pusha
jnp
cltd
xor
xchg
push
jg
cwtl
das
int
mov
sbb
loop
std
insb
cmpsb
outsb
pop
out
jnp
inc
mov
or
clc
jbe
sub
dec
dec
addr16
mov
stc
push
adc
fwait
in
es
mov
cmpsb
xchg
dec
jno
inc
test
mov
lahf
sbb
repnz
sbb
int
mov
scas
mov
pop
mov
sbb
cltd
bound
jge
cmpsb
adc
xlat
pop
mov
pop
les
mov
sub
enter
cld
outsb
or
clc
popf
cmp
out
jnp
inc
int3
mov
or
cmpsl
loope
fnsave
aas
divb
xor
jae
int3
arpl
xchg
dec
xchg
push
push
loopne
outsb
outsb
andl
or
pop
xchg
sbb
stos
aad
pop
cmp
in
dec
call
cmp
shrl
pop
mov
dec
push
outsl
clc
sub
mov
sbbb
repz
sbb
dec
or
lcall
mov
push
stos
fcmovu
xor
mov
push
lods
xlat
fucom
enter
scas
in
fcomip
dec
daa
insl
es
sub
or
movsb
ret
test
loopne
xlat
pop
lods
mov
fidivl
sbb
dec
adc
scas
sarb
xor
je
or
inc
pop
out
andb
dec
loopne
fcomip
insb
ljmp
movsl
sbb
pusha
in
cs
rolb
jno
ds
add
es
xlat
cmpsl
ds
xchg
fwait
les
fildl
ds
pop
sbbl
sub
pop
xor
iret
jae
jae
popa
movsb
fdecstp
dec
fsubr
jle
lock
popa
insl
sahf
xchg
mov
pop
cmp
or
inc
ficomps
mov
movsl
icebp
cld
lea
xor
dec
pop
lods
inc
mov
mov
xchg
sub
fcompl
and
xchg
bound
popf
cmp
add
and
push
pop
push
cmp
fsts
and
cmp
push
dec
inc
loop
stos
xor
xor
pop
or
mov
and
add
cli
hlt
jo
in
fnsave
xchg
les
add
nop
imul
outsb
loopne
and
nop
fdivl
pop
push
lret
pushf
jmp
xor
mov
repz
lret
rcrl
lock
fisubrl
cmc
mov
mov
sbb
insb
jg
mov
pop
dec
mov
imul
pusha
jns
sub
nop
mov
aad
sbb
mov
and
dec
or
jmp
pop
imul
mov
inc
movsb
mov
ss
mov
out
xor
xorb
xchg
inc
mov
insl
add
fcomp
xlat
test
dec
pushl
shr
in
jne
lea
addb
mov
mov
imul
jae
test
jecxz
cltd
ror
jnp
into
outsl
mov
or
push
lahf
adc
jl
push
xchg
insb
ret
pop
jnp
lahf
lods
sub
lock
mov
jmp
mov
repnz
sti
es
sub
lahf
pop
or
shll
rorb
inc
mov
xor
andl
or
lahf
cmp
mov
lret
sti
lcall
incl
mov
loope
add
inc
fcmovu
inc
xlat
xor
std
lds
mov
and
jge
loopne
or
mov
ds
mov
sbb
push
dec
fwait
xor
subl
leave
ret
add
sti
in
xchg
shlb
popa
sbb
mov
jp
adc
test
dec
and
sbb
imul
cmp
push
clc
je
mov
fadd
cli
xchg
stc
stc
or
and
push
mov
ret
pop
push
lods
fisttpl
cmp
mov
dec
mov
mov
clc
push
js
sbb
xlat
jo
or
arpl
sub
dec
test
rol
push
div
inc
fistps
pop
lahf
cmp
data16
mov
mov
js
adc
jns
push
mov
cmc
push
insl
test
sbb
inc
xchg
and
scas
stos
sbb
dec
fsubrs
idivl
xorl
in
dec
add
aaa
mov
subb
int
push
je
push
xchg
jecxz
pop
in
into
outsb
loop
shrl
push
stc
nop
inc
jo
subb
push
xchg
pop
push
lcall
popa
rorb
fstpl
popf
outsl
lcall
push
les
jl
in
inc
notb
lret
inc
pop
into
sub
icebp
scas
lods
into
gs
pop
orb
outsb
sub
out
push
mov
lret
lret
inc
pusha
std
sahf
jmp
mov
pop
xchg
mov
cli
and
add
out
jae
push
mov
inc
pop
lock
nop
sbbb
data16
xor
enter
sti
cmp
xor
adc
test
cwtl
xchg
push
dec
pop
xchg
lods
or
push
pop
cmp
imul
push
jae
loop
daa
mov
push
data16
mov
dec
xchg
sbb
sti
loope
and
repz
xor
cs
call
mov
sub
mov
xchg
adc
lods
mov
mov
mov
pushf
sub
push
inc
fs
mov
mov
push
enter
rcrb
aas
scas
adc
and
lahf
pop
addb
stc
scas
sbb
cmp
jne
lds
testl
or
mov
stos
fld
pop
mov
jge
dec
rcrl
dec
sub
pusha
outsl
jbe
cs
movsl
pop
in
out
adc
add
push
mov
test
pop
pop
in
push
mov
inc
xchg
pop
pop
jns
jno
xor
add
add
or
pop
sbb
and
gs
call
sbb
mov
cwtl
rcrb
in
fcomps
scas
and
fwait
pop
push
jge
inc
mov
lock
jno
pop
movsb
stos
sub
bound
cmp
lods
lcall
pop
adc
dec
out
adc
out
je
xchg
sbb
gs
mov
adcl
cmpsb
mov
jne
push
cli
add
out
xchg
js
sub
ret
mov
xor
xchg
add
add
xor
jl
ret
adc
sbb
adc
inc
inc
imul
push
out
and
dec
mov
inc
mov
arpl
mov
hlt
push
mov
repnz
subl
xchg
add
rcrl
jne
mov
cmp
imul
pop
mov
gs
mov
out
dec
je
dec
les
cmc
outsl
pop
xor
mov
or
nop
add
inc
xchg
sbb
icebp
xchg
dec
addb
cwtl
adc
adc
adc
sub
cmp
inc
out
in
sbb
dec
xchg
insb
mov
dec
pop
mov
xor
adc
mov
mov
pushf
popf
js
mov
sarl
std
and
sub
cmp
fiadds
lahf
sbb
push
mov
dec
sub
add
xor
cmp
mov
and
das
push
mov
xchg
xchg
filds
inc
addl
shlb
pop
pop
popf
push
test
mov
xchg
jle
adc
add
insl
mov
push
adc
sub
push
mov
test
mov
lahf
das
push
call
mov
insl
out
mov
sub
mov
add
mov
mov
jp
stos
lahf
rcl
pusha
or
repz
movsb
ss
lds
sub
jbe
inc
pop
je
cmpl
mov
push
jecxz
sub
lods
les
stos
xor
popf
xor
add
and
sbb
cld
xchg
xchg
sbb
lds
jl
ret
sahf
out
pop
pusha
mov
hlt
orl
lret
repnz
insl
cmp
and
lahf
adc
sbb
dec
dec
cltd
loopne
mov
mov
sti
ljmp
add
add
rol
imul
mov
aad
mov
cmp
leave
imul
mov
push
inc
lods
xchg
mull
push
cmp
sbbl
pop
cmpsl
mov
pushf
mov
sbb
lods
mov
popa
jmp
lret
scas
pop
mov
cld
mov
fbld
mov
jg
and
stc
and
xor
adc
adcl
inc
nop
stos
inc
add
sbb
je
stc
jo
outsl
mov
ret
testb
push
adc
repnz
cltd
adc
test
push
call
xchg
or
pop
ds
mov
cmp
sub
jle
lret
lahf
dec
fadd
sbb
mov
jl
nop
sahf
repz
bound
push
out
mov
addps
dec
aaa
bnd
hlt
adc
aad
fistpl
cwtd
repz
and
and
pop
mov
psllq
or
sub
ret
loope
cmp
and
aam
push
rol
sub
ljmp
xchg
fidivrl
shrl
std
gs
je
cmp
add
int
test
shrl
ljmp
sub
outsl
fidivrl
and
cld
fmull
scas
sbb
daa
movsl
aaa
mov
aaa
ljmp
or
sub
test
fsubr
jne
bound
jo
xchg
inc
fists
jns
jg
push
mull
es
inc
or
jmp
rcll
das
mov
push
inc
and
jg
loop
aam
fs
cmp
adc
cmp
push
jne
push
dec
jb
sub
leave
xchg
or
daa
ret
mov
inc
fcom
repnz
jb
and
adc
push
mov
daa
movsl
xor
inc
adc
clc
les
and
scas
inc
leave
sbb
push
xor
push
pop
popf
sbb
jns
loope
out
lds
xor
pusha
fwait
call
pop
add
and
ljmp
stos
cmp
push
sub
ror
xchg
insb
inc
jmp
rcrl
in
xlat
jl
pop
xchg
pusha
jo
aam
mov
mov
lret
fisttpll
inc
fisubrl
shlb
add
push
lcall
inc
rclb
inc
lret
and
cmp
mov
mov
push
xchg
mov
shr
rcrb
lds
add
icebp
jge
adc
adc
cmc
jne
mov
scas
cmp
cmp
jg
and
rcrb
cli
lea
rcll
mov
cwtl
cltd
pop
lret
mov
sub
lods
sbb
pop
jne
cmp
jne
xchg
push
cmc
push
pop
test
lds
test
cltd
test
pop
xor
inc
push
mov
xchg
mov
movsb
inc
jne
xchg
mov
pop
and
mov
fildl
pop
push
push
fiaddl
and
jl
ljmp
mov
mov
jo
xor
mov
xor
mov
pop
out
outsb
mov
sbb
out
int3
cmp
shl
out
sahf
sub
movsb
mov
lret
test
jmp
stc
jg
lcall
cmpb
stc
xchg
xchg
stc
inc
xor
lock
fldcw
or
mov
sub
cmp
loopne
ljmp
repnz
dec
cli
sbb
fisttpll
xchg
or
fldcw
mov
icebp
andnps
and
xchg
shl
jecxz
xchg
scas
push
call
and
or
ficoms
rcr
dec
xlat
in
push
roll
dec
out
dec
xor
mov
ret
das
fiaddl
nop
mov
cmp
mov
mov
daa
movsb
mov
ret
sub
sahf
pop
out
jns
xchg
subl
xchg
daa
ljmp
bound
jge
mov
sbb
jne
push
push
jmp
out
and
nop
das
aam
pop
out
lahf
inc
fwait
ss
jecxz
inc
mov
xchg
xor
daa
sbb
push
inc
hlt
loope
popa
out
nop
aam
xchg
mov
or
cmp
fidivl
mov
push
jmp
mov
pop
hlt
sahf
mov
mov
leave
push
adc
cmc
inc
mov
or
add
pop
icebp
cmc
or
mov
jnp
das
xchg
mov
push
adc
mov
xchg
cltd
stos
mov
mov
cmp
add
imull
xor
mov
mov
mov
inc
mov
adc
dec
add
inc
shlb
xor
scas
pop
insb
fbstp
ffreep
jmp
loop
inc
and
add
enter
add
push
dec
lods
movsb
inc
push
sbb
imul
push
sbb
enter
xor
sarl
lret
and
aad
orl
xchg
sub
mov
lods
aas
dec
sbb
inc
mov
dec
xor
jmp
iret
lods
push
sbb
pushf
fidivl
dec
sbbb
fiadds
xor
xor
leave
pusha
xor
movsl
mov
roll
jbe
insl
call
or
adc
pushf
aaa
sbb
mov
xchg
cmp
loope
mov
aas
lahf
fmul
sbb
or
divb
ljmp
adc
mov
rcrb
fldpi
cld
xrelease
ss
push
xlat
jmp
fs
and
dec
mov
ja
in
dec
mov
xor
and
fistl
lods
or
pop
pusha
xchg
mov
into
xor
sbb
inc
mov
mov
jmp
xor
clc
movsl
or
adc
es
jae
xor
xchg
orl
xorl
xor
pop
in
call
pop
pop
imul
mov
loope
sti
mulb
iret
dec
mov
rcr
int
pop
cld
dec
fildll
out
cmp
dec
jle
jae
iret
data16
push
mov
mov
push
push
sbb
outsl
dec
loopne
std
cmpsl
rcr
adc
sub
push
out
ja
mov
cwtl
jne
dec
fstp
jne
jno
sarb
adc
fwait
push
and
cmp
sbb
sub
and
daa
xchg
daa
pushl
xor
in
in
add
sub
fisttpl
or
sarb
xchg
xchg
in
cmp
loopne
xchg
jne
inc
pop
cmp
enter
fwait
test
test
js
and
add
addr16
cwtl
xchg
ret
ds
fildll
xlat
shll
or
mov
idivl
or
and
jge
sub
xchg
mov
dec
lcall
adc
cltd
cmpsl
xor
aam
cmp
imul
orb
pop
dec
jle
cmp
negb
int3
loop
imul
pushf
imul
push
sub
out
and
jl
or
xchg
ds
lret
shrb
cmpsb
add
mov
rcr
test
or
js
ret
mov
dec
mov
es
pop
out
push
mov
sbb
jecxz
daa
and
cmpsl
add
filds
mov
jge
movsb
xor
mov
jo
shlb
cmc
into
push
out
test
adc
js
add
xchg
lods
les
bound
aam
lcall
inc
sti
pop
hlt
sub
inc
into
lahf
out
jno
xor
lock
nop
cmpsb
rcrb
jp
mov
push
outsb
out
lahf
jne
or
or
cmpsl
adc
and
fistl
inc
nop
push
leave
mov
mov
ficoms
push
ljmp
stos
int3
aam
add
je
mov
adc
fcomp
jno
jp
clc
adc
mov
sarb
add
sub
subl
xor
jns
xor
xchg
xchg
call
jns
dec
pop
xor
sbb
add
xchg
jecxz
cmpb
or
adc
sbb
sbb
sahf
mov
jmp
pop
mov
jge
mov
clc
addb
aas
rolb
adc
sahf
and
lods
in
cmpsl
pop
shrl
lock
dec
loopne
and
movsl
arpl
push
sahf
vmulss
mov
pop
std
mov
sbb
push
sbb
nop
push
sub
mov
pop
dec
loope
jb
sub
fnstcw
push
jge
xor
outsb
movsl
cmp
push
cld
pop
push
cmpl
jae
sub
rorl
or
sub
xlat
xchg
iret
cmpsb
inc
in
pop
and
adc
mov
dec
in
daa
jmp
jbe
imul
sbb
adcl
leave
push
push
lcall
popf
jp
push
call
push
push
jmp
dec
dec
imul
enter
sbb
fsubrp
lret
cmp
lret
inc
fadd
pop
imul
and
mov
lret
fstpl
pop
daa
mov
inc
xchg
fdivl
dec
jns
mov
mov
das
pop
pop
in
dec
hlt
dec
jnp
enter
nop
add
dec
xchg
outsb
mov
jb
xchg
daa
pushf
scas
mov
or
stc
ds
sub
insb
cmpsl
loope
jo
lds
into
jmp
rclb
fmuls
or
dec
mov
call
add
adc
xchg
fs
jecxz
and
push
jbe
sub
cwtl
xchg
test
and
incl
sub
pop
arpl
add
iret
jg
mov
in
dec
iret
rolb
push
fldl
aas
fcmovnu
out
xor
out
jecxz
push
sub
dec
fstps
bound
jae
pop
mov
dec
and
call
hlt
outsb
int
test
sbb
jbe
divl
xor
mov
into
enter
or
pop
movsl
mov
xor
je
jp
xchg
xor
test
inc
fimuls
xor
jno
cld
mov
dec
xor
or
jne
xor
fdivr
xchg
or
sbb
aad
in
mov
pop
add
and
adc
adcb
or
or
dec
roll
outsb
adc
jbe
dec
aaa
xor
fwait
push
mov
xor
xor
add
cmp
les
outsb
pop
inc
leave
mov
pop
imul
in
mov
bound
dec
loope
std
lret
push
out
fsubrs
out
andb
pop
test
jnp
in
aaa
popa
add
push
jae
adc
stc
mov
sub
cmpsl
cmp
mov
dec
inc
inc
jl
rcrl
cmc
and
mov
cmp
dec
lahf
jne
addw
lahf
xchg
je
lods
jno
or
into
bndstx
stc
push
ljmp
jno
and
ret
icebp
lods
call
mov
aaa
repnz
pop
dec
in
adc
xchg
jb
push
lods
fwait
push
xchg
sub
mov
out
dec
mov
dec
sub
and
mov
loopne
cmpsb
adc
test
mov
data16
in
mov
pop
push
movsl
xor
sub
jp
pop
imul
or
fidivrs
lds
icebp
lods
mov
daa
pushf
mov
or
pop
jg
pop
dec
in
inc
push
lahf
hlt
xchg
insb
sub
adc
jns
pop
test
outsl
hlt
jle
sbbb
cmp
push
out
xor
mov
in
loope
popa
ljmp
mov
lods
int3
mov
insl
in
in
xor
mov
adcb
mov
cmp
xchg
test
jge
popa
jno
shll
cmp
xor
repz
aaa
mov
ret
dec
ds
popa
xor
daa
cld
sub
movsb
push
js
mov
pop
inc
sub
insb
cwtl
insb
iret
dec
or
cmp
test
jecxz
mov
loope
push
xor
jno
cli
sub
xor
repz
subb
pop
mov
mov
rcr
mov
fcoml
xchg
mov
mov
sahf
push
iret
loope
ss
arpl
sahf
xor
push
lods
mov
sar
rolb
and
ficomps
inc
gs
push
mov
xlat
jnp
mov
bound
jge
mov
lods
push
adc
mov
lcall
adc
fimuls
dec
mov
pop
popl
jne
cmpsb
into
lods
loope
test
cmpl
mov
cwtl
fsubrs
dec
jge
cmc
popa
mov
sbb
je
sbb
cmp
aas
inc
int3
movsl
popa
push
lea
out
adc
cmp
cwtl
test
jp
je
dec
dec
and
mov
andnps
add
cwtl
das
test
inc
mov
in
rcl
jns
add
push
and
sbb
mov
jge
mov
mov
cld
push
pop
jbe
shl
nop
fidivrl
push
outsl
mov
or
sub
xor
pop
mov
dec
cmp
jns
mov
je
mov
ficoml
jbe
outsl
outsl
neg
or
pop
fwait
xchg
jns
jns
push
stos
sub
lods
or
in
test
inc
inc
jmp
sbb
cmp
in
add
sarb
dec
stc
add
pop
jo
and
push
lea
int
xor
mov
mov
int
pop
cmp
and
xchg
ja
mov
and
jbe
xor
imul
ficoms
xchg
pop
clc
and
fidivl
testl
pushf
mov
sbb
jle
push
push
popf
out
push
sbb
fidivrs
andb
aad
lods
push
cs
adc
adc
add
mov
push
outsl
orl
sub
insl
sub
jle
sub
sbbb
test
dec
pop
lahf
int
adc
cwtl
sbb
inc
lea
in
dec
loopne
cmp
jae
sbb
inc
lods
cmp
adc
mov
fs
data16
aaa
out
lods
push
aas
out
mov
fisubrs
inc
fnstenv
adc
jae
in
repnz
out
pop
sahf
outsl
adc
adc
pop
add
insl
mov
adc
aaa
dec
stc
bound
dec
xchg
sbb
push
popf
sbb
jne
inc
mov
dec
fcompl
ss
cmp
movsl
outsl
sbbl
iret
fnstenv
mov
lds
and
cvttps2pi
add
xor
cs
mov
ja
pop
push
int3
mov
push
enter
loope
sub
fwait
loop
decl
jo
sti
pop
cli
or
mov
xor
sub
xchg
stos
dec
insl
add
cmpsb
mov
fcomps
in
jno
xor
test
or
in
pushf
xchg
jecxz
loop
inc
mov
test
mov
cli
or
shll
add
movsb
xor
in
inc
sbb
jmp
push
cmp
outsl
or
sbb
or
pop
movsw
sbb
ds
imul
cmpsb
inc
mov
mov
in
cmc
fwait
add
jl
mov
ficompl
insb
lahf
sar
repnz
push
xor
mov
notb
std
cmpsb
sarl
aad
mov
int
pop
std
std
divb
leave
adc
push
sub
icebp
mov
and
or
mov
rcrl
xchg
mov
sbb
xchg
lds
in
sahf
insb
out
rcll
and
cmp
in
fwait
testl
jo
jb
inc
jo
add
lret
cmp
pop
bnd
xchg
cmpsl
adc
pop
lret
and
insl
push
jmp
call
jecxz
xchg
cmpsl
adcb
movsl
jno
mov
xchg
push
fs
sahf
mov
and
icebp
pushf
inc
jmp
and
xor
add
inc
lods
push
or
rcr
cmp
mov
nop
push
dec
jl
in
mov
ljmp
inc
cld
hlt
ja
jg
int
pushf
incb
and
push
scas
int3
jmp
incb
or
test
inc
pop
shll
icebp
ljmp
inc
and
loopne
pop
hlt
xchg
imul
lea
jne
jbe
nop
out
pop
xchg
xchg
sub
push
mov
fcmovu
jmp
sub
std
scas
xchg
dec
pop
push
inc
jnp
or
push
jne
fucom
ja
loope
push
xchg
lods
decb
popa
ds
jo
es
jne
mov
lods
xchg
xlat
test
add
mov
repz
xor
ds
sbb
popa
add
adc
stc
stos
int3
fists
fs
mov
jne
in
push
out
xchg
cmp
jp
jb
xchg
cmp
sahf
cmp
repnz
je
cmp
gs
push
cwtl
mov
insb
or
add
in
je
dec
aad
push
mov
xchg
insb
loopne
out
inc
adc
sahf
in
clc
iret
mov
inc
fstpt
pop
xlat
enter
pop
pop
test
xor
test
mov
xchg
daa
pop
adc
push
dec
pop
add
arpl
lret
adc
inc
in
std
mov
fstl
pop
nop
leave
push
inc
aad
push
sub
inc
cmp
out
fcomps
sub
shr
les
xor
aas
xor
test
popa
inc
ficoms
mov
stc
and
dec
mov
cmp
mov
lret
mov
lock
lods
lret
cmp
sti
scas
adc
adc
repnz
pop
push
mov
loope
xor
push
pop
inc
pop
nop
jae
mov
xor
hlt
call
or
pop
add
jl
idivl
mov
or
push
sbb
aaa
fdivrl
xor
aas
pushf
push
aad
push
pop
sub
aad
fnsave
loop
imul
add
ret
gs
lock
loop
lahf
fs
mov
sub
popf
cli
test
add
push
cli
fstp
mov
cli
or
inc
in
ret
clc
xchg
aad
test
pop
push
popf
push
scas
in
imul
leave
pushf
sbb
aas
and
pusha
add
xor
loope
adc
push
mov
jmp
scas
mov
ror
adc
outsb
adc
lahf
cmp
inc
data16
cmpl
push
sbb
mov
mov
movsl
les
pop
cmp
stos
push
jno
fnsave
call
sahf
outsl
fldt
std
mov
push
mov
and
inc
rorb
out
stc
push
sub
call
mov
rsqrtps
and
adc
push
imul
sahf
lods
mov
xchg
movsb
inc
cli
test
cs
pop
pop
aaa
or
test
xor
inc
fidivrs
and
into
enter
call
lea
sahf
xor
jno
mov
xchg
les
push
ja
sub
and
mov
inc
adc
lea
push
cli
dec
mov
sti
pop
mov
fidivs
cmpsl
dec
mov
push
xorl
leave
pusha
mov
pop
inc
mov
and
loope
and
mov
sahf
mov
pop
mov
add
scas
sbb
cwtl
stos
jne
test
lret
pop
jge
loope
leave
and
jb
mov
cli
xchg
dec
test
subb
add
mov
cs
popf
pop
mov
mov
mov
and
pop
movsl
shrb
cmpb
hlt
xchg
jg
dec
sbb
mov
mov
adc
test
sbb
stc
and
out
add
insl
nop
int3
dec
lds
repnz
shlb
adc
cmpsl
scas
and
ja
push
imul
pop
insb
xor
cmpsl
icebp
nop
adc
mov
dec
pop
push
out
xor
push
xor
lds
dec
scas
and
iret
xchg
or
icebp
into
pop
push
fwait
cmpsl
test
jmp
rolb
mov
mov
jnp
mov
loopne
pop
lock
xchg
out
lret
shl
dec
ljmp
stos
inc
rol
rep
push
inc
sub
fidivs
or
push
or
clc
loopne
sbb
loop
ss
inc
xor
js
shl
pop
push
lret
pop
lods
jg
nop
pop
mov
cltd
loop
jmp
cmp
cmp
cmp
xchg
shlb
jb
jp
add
dec
mov
sub
jno
push
sub
dec
sbb
mov
mov
mov
cmpsb
pop
aam
lods
add
mov
rclb
push
popa
push
std
mov
fsubs
fstpl
mov
mov
lods
push
stc
cmpb
ret
pop
pop
or
out
jns
add
xor
xchg
add
dec
sbb
xor
inc
mov
mov
push
xchg
bound
cmp
dec
push
mov
xor
decl
mov
cmpsb
mov
cmpsb
imul
in
fmulp
xchg
adcb
pop
arpl
sbb
cmovo
jne
shl
mull
adc
jno
pop
xor
mov
pop
cld
stc
pop
adc
xor
scas
jns
inc
push
dec
push
int
pusha
and
cmpsb
mov
sbb
add
xor
scas
pop
cmpsl
xor
xchg
dec
xlat
and
out
cmp
and
loopne
ja
lds
adc
jle
mov
lea
lret
dec
insl
lret
addr16
fldcw
xchg
mov
divl
inc
imul
push
sub
and
cltd
popf
add
js
fisubl
fwait
xchg
outsb
dec
mov
shll
jno
lahf
lret
stos
stos
in
xchg
cmpsb
testb
dec
aad
sub
repz
test
push
jae
adc
mov
cmp
cli
push
cmp
fisubrs
movl
pop
scas
repnz
aaa
mov
cli
inc
cld
movups
sbb
mov
rcl
dec
jno
aaa
jg
iret
aas
add
mov
push
mov
ret
in
and
leave
pop
lret
mov
adc
add
scas
fistl
lret
lods
inc
adc
lret
push
call
bound
mov
lahf
loope
sbb
xor
xor
and
iret
addb
inc
push
cmp
cmc
in
aaa
cwtl
das
adc
mov
push
and
pop
sub
adc
cld
jg
leave
dec
int
sub
push
jo
pop
out
cltd
xchg
mov
rcr
adcl
cmc
aad
addr16
add
mov
ds
or
data16
lds
scas
sub
loopne
push
sbb
stos
dec
cmpsl
mov
imul
adc
loopne
xchg
call
and
sub
js
cmpsb
inc
pop
ret
scas
loope
js
pop
mov
cmp
ljmp
sbb
lahf
ss
or
push
jle
mov
and
inc
mov
les
fisttpll
sub
out
insb
mov
mov
mov
or
aaa
stos
fimull
popf
xlat
sub
clc
or
xchg
dec
and
mov
xlat
jp
xor
cmp
xchg
idivl
aaa
push
and
cmpsb
cmp
mov
cmp
dec
push
es
int
lahf
pop
sub
push
xchg
cli
mov
lret
test
inc
mov
mov
stos
je
mov
popf
outsb
add
inc
das
or
les
jne
or
adc
mov
and
mov
jecxz
or
xchg
xlat
push
lods
lret
inc
popa
loop
pop
sbb
pushf
cld
xor
inc
jl
add
daa
and
std
hlt
in
sbb
movsl
int3
cltd
jp
outsb
das
cmp
decl
cld
fadds
inc
bound
lret
out
test
pushf
cmp
mov
ret
or
jg
push
in
pop
rclb
mov
cmpsl
jmp
pop
fmull
or
lock
sub
rol
imul
lret
enter
sub
sbb
sub
aam
mov
das
repnz
test
mov
adc
lahf
inc
fs
and
add
jg
pop
cmp
sub
ret
aaa
mov
push
in
sti
je
cmc
leave
cmpsl
popf
inc
fcmove
jl
popf
mov
popa
clc
fadd
js
sti
int3
mov
pop
insb
or
aam
je
cwtl
mov
jecxz
xor
xchg
sub
call
fildll
addr16
jns
fmulp
jmp
imul
aaa
fstl
jecxz
js
mov
divb
mov
out
mov
jle
cmp
daa
ja
ffreep
leave
jo
ja
outsl
xchg
movsb
andb
sub
mov
test
je
push
repnz
adc
testb
mov
leave
pusha
mov
sbb
push
cmpsl
test
call
and
int3
ficoml
iret
fs
mov
pop
mov
ja
jle
popa
jge
mov
out
ret
ss
ret
fadds
pop
jl
stos
ja
lock
es
push
xor
ja
jnp
push
xchg
je
orl
mov
cmp
clc
cmp
bound
in
jb
out
lahf
mov
pop
mov
add
scas
mov
jo
inc
ja
add
adc
pusha
addr16
push
xchg
cmpsl
ds
mov
loop
nop
orb
or
pop
xchg
nop
ret
ja
mov
ds
pop
hlt
cli
rcr
and
cmp
cmpsl
cmp
pop
jecxz
lret
jp
push
dec
pushf
push
hlt
inc
js
jns
sti
loop
les
sbb
add
push
jmp
jp
ja
mov
int
mov
shrb
inc
xchg
imul
jg
mov
ret
mov
roll
adc
lret
mov
xchg
mov
xchg
imul
sbb
push
popa
dec
xchg
inc
jnp
jae
lock
inc
push
fwait
xorb
hlt
mov
xchg
sub
ret
cmp
jns
mov
loopne
cld
pop
pop
inc
xchg
aaa
push
sbb
mov
fsts
into
adc
shrl
lcall
pop
lods
jne
dec
cltd
jge
lret
outsl
sbb
mov
imul
dec
pusha
fbstp
outsb
ret
cltd
leave
out
ret
xchg
out
sbb
xchg
stos
mov
sub
xor
rcl
call
cmp
cli
mov
mull
jge
jnp
mov
arpl
sbb
mov
pop
fs
pop
xchg
push
and
push
dec
xor
adc
outsb
out
cmp
cmp
jecxz
negb
jl
les
out
movsbl
mov
outsl
mov
fidivs
add
mov
movsb
dec
fisubrs
lock
scas
lea
mov
jne
hlt
ret
xchg
or
cmp
mov
jge
inc
add
std
mov
sub
popa
mov
add
add
pop
ds
ficoml
mov
outsl
pushf
inc
mov
inc
and
cmpl
add
lea
sahf
ja
aad
dec
push
stc
into
pop
mov
imul
scas
mov
mov
inc
into
jmp
addb
flds
vextractf32x8
or
inc
cs
stos
pop
gs
lock
or
pop
in
aam
mov
mov
add
cmp
arpl
fiadds
mov
cli
pushf
cltd
mov
ljmp
mov
aad
enter
scas
push
sbb
inc
lret
push
jle
cmp
mov
dec
scas
pop
lods
pop
jbe
js
scas
outsb
icebp
cmp
jno
dec
out
jecxz
jns
inc
ss
out
add
and
mov
add
jb
subl
pop
stc
ror
or
xor
gs
cmc
adc
rcrb
clc
pop
js
adc
out
scas
fsubs
cld
or
nop
push
and
rclb
loope
out
lret
sub
mov
push
or
jg
sahf
ja
xchg
inc
pop
fisubl
fs
push
and
inc
insb
call
movsb
sub
enter
cmp
xchg
adc
mov
fs
push
lock
andl
int3
insl
mov
aad
sbbb
inc
mov
xchg
push
add
adc
and
cmp
mov
dec
rcll
sbb
ror
cmp
test
insl
repz
scas
mov
ret
test
rcll
cmpsb
mov
ljmp
test
movsl
lret
jno
rcl
mov
push
or
pusha
jl
fwait
jbe
jne
add
pop
arpl
adc
mov
dec
cld
shlb
ret
inc
jae
in
fsubs
add
jmp
les
outsl
push
mov
mov
sub
adc
push
rcr
ljmp
test
enter
stos
and
push
inc
pop
std
mov
shr
movsl
fisubrl
push
lret
sub
popa
in
mov
sbb
mov
lds
cmp
mov
or
fisttps
add
jmp
mov
js
jno
bound
mov
and
ficompl
int
pop
cmp
daa
ret
ret
dec
mov
lds
scas
and
clc
les
scas
fwait
xor
dec
pop
in
cs
and
sub
sub
pop
mov
mov
imull
cli
push
inc
test
cltd
decb
loopne
mov
and
mov
adc
mov
movsl
jnp
daa
mov
mov
push
out
or
daa
stos
stos
inc
movsl
and
cmp
xchg
aam
pop
xor
out
js
or
sbb
shrl
sbb
add
lea
xchg
stos
int3
jg
xor
and
lea
pusha
notl
in
mov
jmp
gs
mov
sub
xor
jae
inc
inc
and
mov
add
adcb
das
iret
sub
pop
call
sub
in
inc
mov
add
loop
stc
lods
jg
push
sahf
pop
mov
popf
bound
mov
shlb
xchg
sub
movsb
mov
pop
ret
cmp
sub
loopne
stos
cmc
xchg
adc
mov
dec
lcall
in
repnz
insb
sbb
pop
outsl
push
nop
fisttpl
orb
pop
lock
xchg
fbstp
mov
or
add
jl
aas
je
adc
bound
xchg
mov
cmp
pop
mov
shll
popa
xchg
lods
and
imul
cmpsb
mov
push
push
loop
sbb
mov
out
inc
mov
add
int3
arpl
ljmp
push
popa
clc
xlat
mov
jg
pop
inc
dec
dec
in
testb
fnstenv
mov
testb
mov
sahf
jne
cmpsl
mov
bound
lret
imul
outsb
rorb
cmp
inc
jmp
out
push
sbb
leave
cmpsl
movsl
add
pop
add
dec
cmp
dec
ds
cld
lock
or
mov
in
mulb
jns
into
bound
das
adcl
push
or
jae
int3
adc
jo
pushf
cmp
adc
sub
test
cmp
mov
fldl
movsb
data16
fsubp
mov
scas
xorb
jl
cld
outsl
sbb
xor
ret
mov
adc
xchg
and
outsb
sbb
inc
divl
cmp
sbb
cwtl
pop
push
out
clc
nop
fbstp
jle
clc
or
sarb
pop
out
cmp
repz
cmp
mov
sbb
les
loopne
add
loopne
je
mov
adc
inc
ficomps
pop
push
sbb
and
rorb
pop
jne
cmpsl
xchg
lods
mov
fldcw
in
jp
out
test
dec
add
bound
push
out
in
cmp
mov
ret
ljmp
jle
stc
ja
in
daa
push
cs
hlt
fwait
push
mov
cmpsl
inc
clc
xor
ss
inc
inc
mov
xor
mov
orl
dec
and
jle
xor
lret
xchg
leave
repz
pushf
jnp
and
lahf
xor
xchg
aas
outsb
lods
adc
add
out
sarl
pop
sub
xor
inc
sbb
push
mov
icebp
iret
push
insl
jbe
hlt
mov
je
in
test
push
mov
inc
movsb
shrl
and
int
jae
bound
out
and
xchg
mov
fstpl
sub
js
gs
push
mov
iret
mov
jge
xchg
decb
xor
test
dec
stos
aas
call
mov
sbb
mov
or
ja
dec
mov
sbb
mov
rorl
shll
mov
ja
fldpi
jg
test
xlat
mov
mov
mov
or
xchg
mov
test
adc
cwtl
jp
pop
sahf
es
cmp
pop
popf
stos
enter
xor
outsl
adcl
pop
aaa
test
imul
push
ss
std
push
xchg
pop
sbb
stc
or
xchg
sub
mov
mov
in
cli
mov
and
push
scas
subl
sub
push
inc
nop
xlat
cli
roll
sub
orl
and
sbb
outsb
inc
jg
mov
cwtl
mov
inc
int
pop
out
test
aaa
insb
ret
push
bound
decb
das
test
cmpsl
fidivl
push
leave
cmpsl
jb
add
lret
pop
mov
fyl2xp1
rorl
fnstsw
cmc
sbb
fdivrl
es
pop
mov
cmovne
mov
mov
ss
into
sbb
aad
dec
cmp
das
outsb
push
les
shr
sbb
pop
dec
imul
and
add
shll
push
lods
mov
mov
xchg
aam
pushf
add
xchg
jecxz
pushf
sbbl
push
xchg
fs
mov
xor
push
add
loope
or
sub
into
nop
out
mov
cmp
stos
push
negb
or
sbb
mov
add
aam
cmpsl
daa
in
xor
xchg
out
pop
fcoml
push
mov
ret
arpl
jns
mov
adc
push
leave
jmp
adc
into
imul
popa
ds
mul
cmp
sub
stc
nop
jns
adc
stc
ret
sub
sbb
in
cmp
mov
dec
fwait
xor
xchg
jmp
mov
call
jg
sahf
add
loopne
pop
sahf
mov
cmp
aam
call
adc
dec
jge
loop
cmpsb
cmp
lret
test
pop
lock
add
sbb
pop
sar
movsb
dec
sub
dec
cmp
out
popa
clc
and
adc
add
push
repz
jle
add
mov
decl
pop
sbb
adc
sub
xchg
mov
lds
std
sbb
add
xor
jge
pop
hlt
lret
pushf
mov
jg
lret
adc
jmp
into
sbb
loop
lods
cmp
out
push
idivb
mov
or
push
dec
fisubl
imul
iret
incl
xor
nop
pop
and
xchg
sbb
stos
cld
xchg
sbb
push
mov
fs
movsl
push
mov
jmp
sarb
sahf
add
sbb
mov
iret
mov
push
and
dec
ss
ljmp
mov
incl
in
or
cmp
into
jecxz
lcall
lods
pop
mov
fwait
jmp
jo
mov
popf
sbb
int3
outsb
inc
sub
cwtl
add
jp
lahf
or
mov
xchg
sbb
or
lock
adc
insb
sub
js
dec
adc
jnp
xor
mov
rcll
test
and
scas
jmp
dec
clc
mov
lahf
idiv
sets
add
xor
int3
dec
lods
push
lods
loop
sub
jecxz
mov
xor
daa
mov
or
inc
fs
insl
and
mov
adc
negl
mov
and
or
sbb
mov
sub
clc
adc
xor
in
fwait
pop
popf
lock
lock
xor
std
jmp
lock
jae
push
push
xchg
jmp
push
inc
push
mov
test
ljmp
xor
or
inc
pop
stc
xchg
repnz
lret
xchg
sbb
adc
sub
sub
addb
sbbl
ss
nop
inc
mov
push
mov
pop
cli
and
int
sahf
incl
jnp
mov
xor
int
add
adc
les
bound
mov
jp
fnsave
popf
fwait
or
cmc
mov
adc
int3
iret
iret
xor
mov
mov
or
adc
or
sahf
iret
adc
push
je
fsubl
jb
mov
adc
xchg
cmpb
aam
xchg
fmuls
fbstp
in
es
mov
imul
movsl
hlt
jnp
cwtl
mov
xor
shlb
rorl
gs
stos
pop
cmp
lahf
stos
jmp
out
push
das
js
and
cli
movsl
mov
fsubs
je
popa
and
fs
clc
pop
fwait
pop
ja
dec
xchg
jp
ds
scas
and
jmp
or
sub
pop
dec
lds
mov
iret
xor
mov
leave
adc
into
mov
push
icebp
ljmp
ja
push
xchg
cs
pop
icebp
mov
jb
inc
push
leave
rcrl
sbb
and
cmp
sub
cmp
mov
push
and
pop
adc
pop
push
std
jl
aad
fistpll
iret
stc
adc
leave
into
xchg
mov
repz
inc
sbbl
out
lahf
lret
insl
or
mull
stc
inc
xor
add
inc
std
inc
out
lret
jae
leave
bound
clc
jmp
sub
ret
or
sub
fwait
in
sub
std
sti
fwait
xor
mov
xchg
scas
in
xor
add
popa
into
out
mov
pop
sub
int
add
mov
push
sub
mov
stos
ret
lret
cmc
lret
sbb
dec
fadds
dec
fistps
dec
out
mov
xchg
adc
lret
mov
or
sub
addr16
xor
pop
push
push
inc
jl
lods
inc
loopne
sarb
add
mov
and
and
jb
mov
mov
mov
mov
rorb
insl
sbb
or
pop
jb
loopw
insb
fiaddl
add
int
jl
addb
pop
sub
mov
xor
pushf
jecxz
es
jns
outsb
inc
inc
mov
pop
leave
insb
stos
xor
mov
hlt
outsl
pusha
addr16
pop
or
and
push
xchg
lock
std
bound
sbb
push
jmp
push
mov
dec
and
mov
mov
pop
pushf
pop
xchg
mov
sub
add
or
ss
fsubrs
jmp
mov
mov
inc
in
jp
lods
outsl
lahf
mov
loop
data16
mov
add
into
mov
jbe
adc
sub
fbld
rcll
sarb
inc
sahf
pop
stc
push
ror
cli
jmp
leave
clc
mov
xor
arpl
outsl
dec
mov
mov
je
sbb
add
mov
lds
sub
in
pop
popf
js
hlt
test
sbb
push
mov
inc
cmp
xlat
int3
arpl
xor
or
xor
mov
adc
sub
lret
dec
std
cmp
sub
loop
fs
daa
rcr
xchg
dec
fs
stc
cmp
ret
dec
aad
mov
call
stos
outsl
mov
or
rorl
xor
lods
dec
pop
sub
and
push
es
jns
ret
ret
imul
stos
sbb
lret
cmp
fldt
push
mov
test
add
repnz
data16
sbb
shl
rorl
push
mov
adc
jge
ffreep
cmpsb
scas
jne
testl
mov
mov
lock
inc
xlat
xchg
pusha
lds
pop
push
mov
int
mov
adc
jae
sub
or
fbld
popf
xor
inc
push
mov
aam
or
and
in
push
push
stc
nop
dec
gs
shlb
mov
mov
sub
outsb
add
inc
dec
adc
daa
xchg
mov
stos
adc
cwtl
pop
repnz
data16
sub
cmp
cmc
lods
jge
cs
sub
jno
rcrl
pop
lret
test
jnp
jno
push
adc
push
mov
pop
loopne
mov
outsb
jnp
inc
fnstcw
mov
lret
or
lret
enter
enter
sub
cltd
out
clc
fisubl
or
aas
pop
test
mov
nop
imul
xchg
jno
fisubs
mov
out
in
or
popf
jg
xchg
repnz
and
test
nop
rorl
mov
cs
pop
out
adc
popa
shrl
inc
cmp
and
jp
or
pop
push
call
rol
fs
clc
or
js
and
mov
fstpl
mov
push
jno
mov
hlt
xchg
mov
mov
pusha
rcrb
test
mov
xor
inc
dec
add
ficoms
int
sub
es
addl
das
add
xor
pushf
xor
daa
leave
repz
add
mov
pop
out
lods
xchg
add
repz
jl
fwait
sti
jle
shl
push
jnp
leave
inc
int3
kxorb
sub
and
mov
iret
xor
jb
loop
mov
push
add
lret
and
xchg
hlt
push
jbe
mov
mov
fistpll
dec
dec
testb
xor
js
popf
test
mov
xorb
jae
xchg
pop
mov
and
outsl
and
es
inc
test
jne
dec
sbb
pop
orl
arpl
push
movsl
loop
pop
mov
jp,pt
outsl
mov
ja,pn
cmpsb
lock
xchg
sbb
push
pop
pop
popf
xchg
je
ret
outsl
clc
mov
cmc
dec
and
test
jl
lock
arpl
incl
js
mov
loopne
cmp
pop
out
sub
insl
adc
mov
or
leave
lods
cwtl
mov
sub
xor
in
mov
ljmp
jno
sahf
popa
lahf
jbe
stos
pop
in
out
fdivr
lods
or
xchg
js
sbb
adc
fisubrs
js
inc
inc
lahf
pop
dec
mov
lods
jno
jb
loop
pop
jae
add
inc
add
mov
cmp
xchg
movsb
insl
and
mov
lret
jecxz
jae
icebp
adc
fisubrs
push
mov
int3
push
idivb
rcl
cmpsl
push
add
push
movsb
mov
jns
add
fiaddl
out
loope
mov
mov
cmp
mov
add
cltd
ds
cmc
and
push
jge
ds
cwtl
mov
pop
jne
xchg
inc
hlt
nop
and
sbb
in
sub
push
xchg
jecxz
leave
xchg
cltd
out
test
dec
jbe
jnp
cld
imul
out
inc
iret
adc
mov
xlat
aas
mov
in
adc
mov
cmp
add
gs
or
and
jmp
rolb
jb
jl
outsl
sub
orl
cmc
scas
add
arpl
jl
jg
mov
lock
aad
or
popf
pop
push
cmc
mov
mov
xor
movsl
xchg
sbb
mov
jecxz
insb
insb
fdivrl
dec
jae
push
fucomp
negl
cli
mov
cltd
mov
gs
xchg
sub
xor
lods
ror
mov
push
lods
jmp
cmc
xor
jns
push
mov
test
cmp
mov
pop
roll
adc
mov
lret
cltd
dec
push
inc
in
add
sti
je
pop
cmpsb
and
push
jno
sub
pop
imul
mov
fdivrl
jl
jmp
xor
sahf
std
aas
out
in
add
stos
mov
pop
jae
jb
inc
stos
push
xchg
idivb
out
jae
pop
cs
call
pop
cmp
lods
mov
out
lods
std
push
or
icebp
movsb
sub
dec
movsl
sub
sbb
pop
out
xor
cmp
and
mov
out
test
rol
add
std
dec
sub
cmpsl
dec
mov
and
fisubl
cmp
lock
xchg
add
movsb
lea
cmp
scas
das
cmc
and
sbb
int3
adc
dec
jnp
inc
mov
push
and
or
add
and
in
mov
ss
inc
pop
fs
xor
mov
cmp
push
mov
add
loop
arpl
int3
arpl
movsl
mov
or
idiv
lods
push
adc
sbb
xor
add
outsl
shlb
icebp
xor
sbb
js
dec
adc
stos
inc
movsb
out
stc
dec
push
sahf
mov
test
push
mov
dec
cmp
or
outsb
inc
stos
pop
rol
add
lcall
iret
pop
test
xor
adc
adc
cltd
inc
add
xchg
enter
jmp
iret
dec
out
out
adc
or
fistpll
mov
jns
aas
cmc
inc
push
imull
dec
stos
mov
xchg
add
insb
jg
push
je
adc
ret
add
loopne
lods
sbb
lret
sbbl
adc
jo
sti
stc
cmpb
pop
lcall
dec
jbe,pn
repnz
push
jo
adcl
jb
xor
fwait
outsb
adc
pop
out
sbb
shll
sbb
sub
dec
call
adc
push
xor
aaa
inc
mov
or
bsf
cmp
xor
rorb
jae
or
xchg
xchg
xchg
scas
xor
add
add
xchg
xlat
xor
enter
daa
dec
lret
lret
arpl
cs
pop
inc
enter
cwtl
add
popfw
cmpsl
xchg
in
and
inc
mov
fistps
stos
mov
xor
ljmp
mov
nop
test
inc
in
bound
mov
aam
out
mov
pop
test
adc
xchg
and
sub
pop
dec
sub
adc
nop
loopne
xchg
adc
out
imul
repnz
dec
loope
dec
dec
xchg
sbb
sbb
mov
and
popf
lahf
add
jnp
jge
xor
pushf
or
push
stc
shlb
xlat
and
sub
mov
sarb
call
xchg
jmp
pushl
movsb
and
xor
addl
rorb
sbb
cmpsb
movsb
sbb
mov
nop
mov
insl
sbb
pushl
fdivrl
jns
jno
mov
pop
in
popa
addl
stos
ret
movsb
push
xchg
inc
jne
aam
popa
or
rclb
aaa
cmc
fidivs
push
mov
fisubs
enter
mov
filds
fnsave
jmp
inc
push
pusha
lods
andb
fbld
xor
cld
dec
dec
xor
fbld
shlb
insb
in
adc
cmp
inc
outsb
vmovdqu32
loope
pop
outsl
cwtl
add
aaa
push
aaa
into
aas
jmp
lods
mov
add
scas
paddsb
ficoml
out
xor
add
xor
push
iret
push
mov
ds
push
cwtl
mov
add
cmp
lods
mov
sbb
xor
inc
cmpsb
xchg
pop
jb
out
sub
adc
arpl
push
cld
adc
int3
inc
jg
dec
mov
shrl
shrb
push
stos
aam
ljmp
stos
cmpsb
mov
cmpsb
adc
out
sbb
mov
xor
ret
ret
jmp
adc
lock
insl
cmc
push
mov
ret
arpl
lahf
cmpl
jb
cltd
cmpsb
mov
xchg
fldt
out
inc
out
dec
dec
and
mov
rorb
sub
fcompl
cmc
mov
mov
pop
push
insb
and
fldenv
sti
xchg
out
xlat
lcall
jle
jge
or
sub
scas
test
and
cmp
cmp
repz
push
or
or
orb
fists
fildl
mov
cwtl
std
xchg
cmp
ret
sub
imul
pop
jb
movsl
mov
icebp
loopne
push
push
push
and
jno
adc
cmc
test
fcompl
add
jne
jo
mov
mov
mov
inc
add
in
mov
push
push
outsl
mov
popa
push
movsl
fistl
mov
mov
test
std
xor
into
xor
mov
in
test
dec
mov
or
xchg
mov
loopne
xlat
clc
push
sub
lret
int
leave
xor
out
sub
mov
jp
sub
xor
mov
jmp
xor
rep
inc
clc
enter
pushf
into
inc
xchg
test
dec
cmpsb
xchg
int3
jg
ret
push
mov
xchg
in
lret
sbb
or
adc
and
mov
sbb
aas
fwait
xor
add
jg
push
das
pop
xchg
iret
sub
or
shrl
mov
sub
je
sub
shlb
xchg
mov
adc
loop
insl
dec
lods
shlb
out
insb
jmp
loopne
hlt
cmp
fwait
push
add
adc
adcl
or
sahf
cmp
xor
fs
popf
arpl
jnp
jp
mov
xchg
xor
bound
sbb
adc
and
sub
popa
sub
jle
cwtl
adc
mov
push
lahf
and
rclb
push
sti
mov
leave
sub
es
sbb
leave
cmp
leave
inc
ljmp
sbbl
ret
movsb
pop
fistps
xchg
mov
cwtl
push
or
mov
bound
insb
dec
xor
out
outsl
mov
scas
scas
sti
push
fiadds
lcall
and
dec
xchg
push
sbb
ror
ror
pop
add
outsb
sbb
cmpsb
in
xchg
dec
sti
or
jne
cs
and
lock
pop
mov
fidivrs
xchg
call
inc
movsb
sbb
mov
pop
daa
mov
add
test
jp
jmp
lds
shrl
out
stos
pop
jbe
adc
and
adc
sbb
xor
cmp
das
pop
mov
mov
cli
leave
das
cli
sbb
inc
jne
push
cwtl
jp
jecxz
fwait
and
xor
mov
stos
outsl
rorb
fs
pushl
in
jns
lea
inc
push
jno
sti
xchg
jl
adc
lods
xchg
into
fnsave
orl
sahf
mov
fistpll
or
insl
sbb
push
aad
push
xchg
dec
movsb
clc
fists
iret
arpl
xchg
out
in
push
std
repnz
and
sbb
cmp
push
hlt
cmp
and
iret
mov
push
push
lock
and
sti
aas
rol
mull
jbe
aad
int3
loop
and
mov
int3
stos
dec
fndisi(8087
ficompl
outsb
test
mov
push
outsl
push
pop
movsb
mov
cltd
cmp
sbb
sahf
stos
sbb
shl
jle
sti
mov
or
clc
loop,pt
push
scas
and
cli
sbb
xchg
xor
cmp
push
xchg
mov
unpcklps
push
pop
test
mov
jmp
or
mov
push
mov
dec
push
xorl
stos
scas
shrb
xchg
xor
and
push
hlt
and
fwait
shl
pop
pusha
inc
hlt
xorl
inc
inc
xchg
cld
lcall
in
movsb
xor
push
jno
icebp
pushf
cwtl
stos
int
dec
movsb
in
inc
jmp
std
or
mov
mov
cmp
xchg
in
mov
inc
pop
int
dec
push
hlt
popa
cmp
xor
fisubl
rclb
push
jbe
fildl
sbb
push
mov
xchg
roll
mov
or
mov
push
xchg
mov
fcom
in
cli
add
jge
sbb
inc
outsb
add
adc
lret
push
mov
mov
and
mov
shlb
mov
mov
and
cld
inc
xchg
int3
or
test
aad
jno
loope
lock
jmp
cmp
ja
adcl
out
loope
stos
inc
xor
jbe
mov
arpl
ficoms
mov
cli
ds
mov
pop
push
aas
sub
add
pop
pop
mov
lret
cmpsb
cmp
inc
pop
and
dec
push
mov
into
xchg
stos
aas
sub
mov
push
testb
arpl
and
cmp
dec
mov
add
js
xchg
imul
mov
pop
in
pop
xchg
jp
cmp
mov
int3
insl
or
stos
ficompl
pop
jl
dec
stos
jecxz
daa
stos
test
pop
popf
nop
mov
mov
in
and
xchg
lahf
ss
cmp
std
test
jecxz
ret
push
or
dec
ds
shrb
xchg
subl
test
clc
cmpsl
test
inc
pop
outsb
ret
hlt
nop
fwait
xor
cli
in
pop
loopne
mov
hlt
mov
das
hsubps
lret
jns
inc
je
pop
mov
cmp
and
repnz
mov
nop
mov
aad
or
push
lods
xor
movsb
push
bound
mov
js
stos
mov
arpl
jno
pop
or
stos
imul
cmp
mov
cmp
aaa
mov
fists
xchg
inc
repz
or
icebp
cli
mov
mov
and
dec
xchg
adc
push
bound
jns
enter
loope
pop
aam
push
or
imul
into
arpl
int3
lret
out
bound
aad
xchg
adc
adc
fstps
fldpi
movsb
cld
mull
lahf
mov
xor
mov
imul
pop
inc
push
cli
push
and
fucomip
out
addr16
in
sub
adc
shll
push
shll
orb
fisttps
dec
dec
push
xchg
std
push
mov
in
fists
xchg
movsb
mov
add
add
or
test
js
repz
xchg
cltd
pop
cmp
fidivrl
fwait
inc
adc
ja
xchg
cs
dec
pop
inc
shl
xchg
les
sbb
mov
jg
sbbb
rcrb
jge
cs
pop
sbb
pop
mov
bound
jb
stc
xchg
xchg
sub
sub
addr16
aad
popf
push
jno
scas
adc
inc
inc
js
stos
dec
fnstcw
int
push
je
enter
lods
roll
cwtl
mov
push
int
pop
rol
loop
mov
push
lods
xor
rclb
push
push
sbb
sbb
add
cmpsb
call
add
sbb
mov
xchg
jo
loope
lcall
dec
loopne
lea
aaa
mov
insl
ja
cltd
inc
aas
mov
sub
pop
xor
and
idiv
cmc
mov
xor
cwtl
push
push
lcall
xor
mov
jae
call
test
mov
movsl
int3
js
mov
fsubr
frstpm(287
mov
adc
shrb
or
inc
das
inc
jnp
adc
and
stos
mov
cltd
mov
cmp
ja
sarb
lret
std
push
mov
shlb
lods
popf
lods
cld
xchg
and
pop
mov
add
xor
aad
pop
mov
xor
lods
popa
push
push
jno
sub
push
test
bswap
bound
mov
pusha
in
jmp
pop
xchg
mov
stc
mov
and
xor
cwtl
push
cwtl
cmp
cwtl
and
jns
sahf
and
sub
push
mov
aas
sbb
or
and
repnz
imull
sbbl
pop
cltd
addr16
or
aaa
les
add
ret
or
sbb
xchg
cmp
daa
dec
notb
addr16
sub
or
stos
test
fisubrs
sti
xchg
fbstp
xchg
mov
popf
mov
xchg
mov
dec
int3
nop
sub
cmpsb
sbb
add
and
fsubr
jg
pop
popf
lods
mov
push
shll
ljmp
sub
out
into
and
loop
dec
in
decb
mov
ljmp
in
in
mov
rol
outsb
fsubs
les
imul
inc
inc
shlb
stos
push
dec
in
int
adc
cli
scas
call
imul
jmp
int
xor
insb
adc
cmpsl
mov
xchg
mov
rcrb
hlt
int3
push
dec
pop
je
xor
mov
add
hlt
pop
mov
add
and
mov
or
add
mov
out
push
mov
fisubs
pop
mov
cwtl
mov
adc
adc
dec
lock
int3
cmp
ds
push
jns
and
sub
pop
mov
cmp
mov
jo
xor
fimuls
xchg
jmp
ss
mov
sahf
mov
test
push
adc
lret
cmpsb
jne
test
int3
ja
or
lret
insb
adc
cmp
decl
push
dec
adc
dec
and
xlat
push
ljmp
jno
mov
ja
sbb
repz
lahf
ss
adc
cmp
ret
jg
loopne
out
out
stos
lret
pop
jnp
jge
fdivrl
cmc
push
lods
divl
xor
lret
sub
shll
lea
cli
scas
loope
fisttps
xor
dec
dec
ds
xchg
xchg
mov
push
testb
cmc
mov
aam
cli
push
popa
clc
sub
es
adc
inc
mov
sub
pop
jnp
mov
sbb
in
pop
dec
inc
inc
mov
aas
outsb
or
iret
data16
dec
int3
dec
mov
pop
cmc
outsl
mov
les
push
cmpsb
cmp
mov
iret
pop
idivl
arpl
xor
fsubs
enter
sub
sub
jecxz
out
cltd
and
cmp
xor
scas
daa
es
push
push
rorb
or
loop
adc
std
xchg
imul
sbb
lahf
in
pop
in
lret
xchg
mov
or
notl
cmp
aas
cwtl
iret
fcmovnu
cmc
shlb
mov
and
in
add
inc
ficompl
mov
pop
hlt
popa
mov
ret
pop
into
sub
jb
dec
in
adc
cmp
test
xor
cli
inc
dec
fcomi
cmp
pop
dec
leave
pop
sbb
dec
mov
dec
lods
aaa
fwait
data16
lret
iret
loopne
sbb
ja
popa
stos
jb
ja
sbb
sbb
arpl
push
mov
and
fistl
cmc
sub
fs
push
cmp
hlt
dec
les
cld
or
in
pop
das
adc
int3
lret
fsubrs
pushf
cmp
test
stos
inc
jne
cld
sub
adc
cmpsl
inc
pusha
jo
test
push
leave
je
enter
inc
jle
mov
bswap
mov
xchg
sbb
cmp
inc
or
mov
cmp
push
sbb
dec
das
mov
pusha
int3
sbb
int
mov
fs
mov
mov
js
jno
sub
rcrl
repz
gs
sbb
sub
les
shll
les
dec
push
mov
mov
std
movsb
fsubrp
es
das
cmp
dec
dec
pop
pop
lahf
cmp
mov
inc
xor
out
cli
js,pn
or
repnz
xchg
out
cld
and
jae
sub
mov
addl
into
push
sbb
std
outsb
or
outsb
sbb
sub
gs
pop
outsl
pop
lock
mov
imul
loop
and
pushf
xor
xor
push
pop
mov
inc
or
out
cld
cmc
pop
cs
stc
fwait
push
les
test
daa
mov
lret
bound
inc
pop
mov
lock
jge
stos
pop
sub
inc
add
jae
mov
repnz
test
push
test
cmp
inc
xor
and
push
or
mov
stc
rcl
xchg
cmpsb
loope
hlt
pop
hlt
and
iret
sub
pop
int3
mulb
and
sbb
idivb
cmp
icebp
aaa
mov
lcall
popf
jp
icebp
mov
add
lds
outsb
aam
dec
fsubr
dec
push
push
cmc
scas
mov
testl
pop
sub
dec
pushf
orb
sub
in
sahf
jno
sbb
inc
ja
popa
lods
insb
sbb
imul
mov
xchg
lahf
popl
mov
mov
push
lods
cli
lcall
dec
add
xchg
adc
pop
data16
jae
fsubr
inc
xchg
sub
jmp
rolb
mov
inc
fsubp
cmp
mov
mov
aam
xor
addl
and
xchg
mov
pop
mov
cltd
mov
movsb
nop
jae
ljmp
mov
js
cmp
pop
clc
dec
jg
sarl
fiaddl
xor
xor
xor
push
lahf
lret
cld
hlt
xor
inc
push
ds
xchg
scas
fsub
xor
or
mov
mov
fisubl
lahf
or
push
xor
popf
push
push
lods
inc
test
mov
lea
inc
fsubl
aam
int
push
jb
cmp
xor
loop
or
rcrb
addr16
repz
mov
mov
scas
ret
mov
mov
insl
das
fucomp
lret
and
mov
int
pop
data16
xlat
repz
test
mov
or
push
loope
sti
test
insl
dec
push
jmp
data16
divb
adcl
and
ror
nop
popa
adc
cmp
ljmp
popf
push
sub
mov
in
and
mov
stc
daa
mov
jne
loopne
or
daa
lret
xor
push
add
inc
inc
sbb
jnp
dec
lret
lea
push
cmp
nop
push
fwait
pop
roll
dec
inc
fcomip
test
hlt
xor
adc
bound
cmp
jl
xlat
shll
loopne
ja
ret
mov
fisubrs
adc
repnz
or
mov
std
jmp
cmp
loop
aam
cmpsl
jb,pt
popf
enter
aas
add
mov
pop
scas
inc
pop
and
add
lods
ljmp
jb
fisttpl
bound
add
xor
test
pop
inc
push
or
lret
outsl
lods
stos
push
lcall
ret
bound
dec
mov
pop
popa
into
add
inc
xor
xchg
es
pop
or
nop
mov
insl
pop
sub
jo
sbb
test
test
fcoms
sbb
pop
pop
xchg
loop
cmc
pop
xor
adcl
jmp
fnsave
enter
movsb
sub
sub
pop
pop
sbb
and
push
js
and
sbbb
mov
mov
mov
shl
enter
addr16
fstl
js
xchg
sbb
push
popf
fwait
xchg
cltd
push
or
push
push
out
rcrb
pop
lods
cltd
das
mov
push
mov
xchg
mov
mov
rcll
andb
das
fisttpl
xchg
jecxz
push
shrl
aad
and
lahf
mov
push
inc
out
leave
push
loope
iret
fidivrs
pop
dec
scas
sti
ds
out
jl
std
in
leave
ret
bound
aad
xor
pop
inc
pop
nop
shrl
idivb
stos
xchg
pop
pushf
sub
shr
nop
cmp
shlb
sbb
or
test
jle
add
adc
mov
lcall
shrb
gs
dec
hlt
aaa
pop
xchg
clc
cmp
push
inc
dec
aas
popa
clc
cmp
xor
push
out
push
movsl
mov
dec
ja
dec
mov
mov
loop
ret
je
ret
mov
xor
outsb
out
mov
inc
jp
inc
inc
pop
loop
xor
pop
mov
test
ret
xorl
jecxz
test
pushf
fildl
cmp
int
pop
sub
adcl
push
pop
and
ret
ss
lahf
les
sbb
lds
ds
call
imul
insb
mov
fisttpl
scas
data16
cmc
push
mov
dec
jb
jnp
enter
mov
push
dec
out
jnp
lcall
adc
push
mov
cmpsb
adc
lgs
sub
mov
xor
faddl
call
aaa
xchg
lret
xchg
sti
arpl
pop
xchg
icebp
jg
add
adc
addr16
fisttps
sub
loope
jge
xlat
or
xchg
mov
arpl
mov
xor
inc
repnz
out
push
sbb
test
outsl
aam
test
sbb
movsb
push
cmp
jecxz
sahf
adc
lock
aam
dec
ss
jp
lea
xchg
hlt
adc
mov
adc
insl
int
insb
arpl
cltd
fisttps
jno
mov
add
stos
xchg
inc
fs
int3
pop
dec
testb
inc
xor
loop
call
imul
fnstcw
xor
stc
pop
in
xchg
aad
sbb
mov
clc
in
pop
testl
fpatan
sub
add
fnstcw
loope
jp
lds
jecxz
jo
insl
ss
lahf
pop
divl
or
jge
aaa
mov
lods
inc
adc
mov
mov
fcmove
fimull
pop
pushf
cli
xlat
and
sbb
lea
cmp
data16
mov
scas
shrb
lahf
mov
insb
sub
push
jnp
enter
clc
fs
cs
xor
shr
jle
xchg
cmp
fstpt
mov
adc
jmp
mov
jnp
inc
pop
fsincos
and
inc
push
imulb
sub
mov
fistpl
add
push
xor
sub
out
mov
push
fimull
mov
mov
jp
cmp
fadds
mov
fcomps
fdivrs
xchg
outsb
jns
or
push
sbb
outsl
ret
fstpt
and
push
push
int
adc
repnz
mov
jl
xchg
sub
cmp
aas
scas
sbb
mov
out
stc
popa
div
loope
data16
xchg
adc
inc
hlt
leave
out
sub
mov
adc
sub
sbb
add
push
pop
movsl
ds
cmp
vpaddsw
jge
mov
leave
arpl
mov
sbb
xadd
xchg
pop
imul
adc
sub
or
sub
icebp
xor
push
jge
lods
dec
rolb
arpl
lock
dec
mov
push
push
and
leave
xchg
adc
or
out
add
in
add
enter
sub
dec
mov
rclb
stos
cmpsl
jp
sbb
shl
sbb
in
test
jmp
pop
xchg
ja
or
daa
shll
int3
sti
lds
aas
mov
movsb
icebp
js
and
mov
sbb
adc
aas
fdivr
add
push
sbb
iret
mov
mov
in
and
movsl
imul
mov
mov
aam
mov
test
aad
sub
mov
push
inc
xchg
or
jg
and
inc
cli
xlat
mov
pop
repnz
xchg
mov
es
or
xchg
mov
jnp
sbb
pop
cmp
movsb
es
push
ja
mov
cwtl
addr16
mov
adcl
pop
sub
mov
sbb
imul
mov
jno
and
mov
or
add
mov
fcmovbe
mov
mov
jnp
stc
pop
pop
stc
mov
lret
sti
aam
jl
in
xor
cmp
xchg
xchg
sbb
dec
push
and
xchg
adc
push
inc
dec
inc
adc
sub
xchg
inc
xor
pop
ljmp
pop
aaa
or
out
inc
imul
pop
mov
xchg
or
xchg
sbb
popf
cmp
pop
bound
lahf
dec
xchg
sti
xchg
push
imul
inc
mov
decl
ret
xor
add
jge
dec
or
xchg
cs
lahf
jl
jmp
dec
loope
scas
push
dec
adc
cwtl
pop
das
and
icebp
sbbl
push
enter
int
jmp
push
add
sub
cmp
out
enter
in
subl
fdivs
cmp
inc
push
sub
push
popf
mov
push
scas
push
jno
jne
dec
bound
in
inc
jmp
in
inc
sbb
cmp
mov
jecxz
lods
mov
sub
loopne
push
inc
incl
test
shrl
mov
cld
ror
stos
test
lods
jbe
inc
cld
ficompl
and
jns
addr16
ret
jbe
into
cld
test
hlt
jl
sbb
sbb
imul
xchg
outsb
xchg
repnz
cmpsl
sbb
pop
int
subb
inc
push
fs
add
xchg
xchg
sbb
scas
dec
mov
jecxz
and
mov
mov
fs
filds
xor
fstl
pop
xlat
sub
or
pop
mov
and
push
outsb
jmp
xor
shrl
mov
push
sub
dec
xchg
inc
mulb
push
push
add
sbb
cmp
xor
repz
aas
test
pop
cmp
fwait
inc
sahf
mov
pop
and
cmpsb
out
orl
xchg
pop
fsubr
lret
jp
sahf
pop
lods
mov
ret
sbb
mov
cmpsb
lahf
loopne
jp
push
lods
sub
sub
xor
mov
das
js
mov
push
dec
es
mov
insb
aas
adc
stc
cli
push
cmpsb
test
sbb
movsb
insb
das
push
movb
cld
cltd
in
lods
dec
mov
or
xor
shlb
mov
push
ss
mov
ljmp
es
pop
inc
mov
out
and
push
cmpsb
xor
out
scas
aaa
xchg
adcl
popf
pop
scas
roll
aam
jecxz
cld
lcall
in
leave
pop
aad
pop
pop
add
test
in
dec
fldl
rol
push
sbb
jl
test
jns
inc
xor
out
jne
inc
cmp
inc
test
je
arpl
sahf
cld
mov
mov
aad
inc
int
jno
mov
sbbl
ret
shll
add
add
inc
mov
jg
sti
cmp
jecxz
pop
push
xlat
add
sahf
sub
cli
jb
in
push
jge
pop
ret
or
cmpsb
dec
cmpsb
dec
jmp
sbb
lea
cwtl
add
leave
inc
adc
in
pop
test
and
jbe
xor
cmp
pop
fldenv
lret
mov
in
mov
mov
movsl
mov
decb
adc
cmp
data16
pop
scas
mov
mov
lcall
adc
push
outsl
mull
icebp
enter
pop
mov
sub
aam
icebp
iret
xchg
stos
sub
mov
lcall
fs
jmp
add
or
out
loope
stos
sub
outsb
repnz
sarl
jmp
imul
or
icebp
pop
sbb
sub
cltd
clc
pop
mull
and
mov
addr16
mov
jmp
cli
in
cltd
xchg
adc
or
jle
inc
mov
leave
inc
push
shrl
repz
jb
cmp
sbb
xchg
dec
out
add
pusha
mull
shlb
sbb
sub
add
test
sub
push
cmpsb
and
imul
andb
inc
add
and
jno
cld
mov
lret
or
test
in
push
out
das
mov
ljmp
loop
shl
push
push
jae
sbb
adc
js
push
aad
dec
or
push
jmp
jo
xchg
adc
fwait
and
movsb
push
pop
mov
push
aad
aaa
pop
mov
cmp
adc
adc
cmpsl
sbb
repnz
mov
push
and
enter
jecxz
adc
mov
hlt
ficomps
mov
push
shl
xor
xor
inc
xchg
andb
xchg
dec
nop
jge
mov
lds
insl
push
pop
sahf
sub
fistl
mov
mov
insl
test
mov
xor
cmp
jecxz
adc
lcall
sbb
cmp
faddp
cmp
pop
push
loopne
mov
fistpll
pusha
sbb
jmp
lret
cld
cmp
movsb
inc
fldcw
cmpsb
sbb
pop
mov
fstl
pop
adc
adc
movl
dec
jg
and
mov
xor
jb
aam
push
loope
test
loopne
jp
add
push
inc
sbb
mov
mov
int
mov
repz
mov
int
cmp
inc
ljmp
jg
or
push
sbb
or
in
mov
movsl
cwtl
inc
push
lret
lahf
sub
subl
mov
lds
mov
test
or
jnp
xchg
in
test
in
aas
scas
xlat
mov
popf
inc
out
xchg
into
adc
fldenv
sbb
jg
cmp
add
in
xchg
sbb
add
and
xor
xchg
popa
insl
in
jmp
xchg
pop
jmp
insl
or
cmp
add
dec
sbb
push
sarl
shrb
inc
stos
cmpsb
dec
shr
jg
fdiv
push
sub
pushf
divb
cli
mov
test
fcompl
dec
movsb
pop
jp
fnstcw
jg
cmpsb
mov
adc
mov
pop
fisubl
cltd
das
ficoms
add
pushf
cmp
jp
mov
and
add
imull
mov
inc
jmp
out
or
jae
jb
mov
mov
test
lods
or
jecxz
cmp
cmp
fbld
mov
fldt
jae
insb
and
cltd
call
and
enter
int
mov
and
add
out
sub
scas
xchg
pop
xorl
xchg
xchg
inc
sbb
out
jecxz
cmp
xchg
sub
push
outsl
pop
fwait
aas
test
imul
sub
into
shl
shll
sub
call
or
jns
les
into
sub
or
xor
dec
daa
cmc
into
pop
outsb
dec
cmpsb
push
jp
sub
xor
filds
in
lods
into
push
test
xor
pop
clc
and
les
aad
cmp
lock
aam
test
xor
iret
rcll
inc
lock
out
jo
pop
test
mov
fwait
and
inc
pop
call
add
sbb
dec
and
adc
mov
inc
ss
jne
jns
push
push
mov
cmpsl
lahf
add
inc
mov
testb
loop
mov
xor
loopne
sbb
push
cmc
pop
int
idivb
jl
cmc
cltd
pusha
and
pop
mov
xorl
add
icebp
repnz
dec
cmp
imul
jns
movsb
fcomps
fldt
bound
jb
popl
lahf
sub
lahf
stos
add
jno,pn
dec
icebp
cmpsl
or
addr16
sub
insl
test
sbb
inc
push
movsl
and
push
repz
jno
dec
jg
repnz
mov
add
pop
mov
popf
mov
or
mov
cmp
jno
out
out
lcall
je
xor
fs
dec
rcl
and
jp
push
ret
incl
sbb
pop
daa
stos
dec
iret
je
daa
dec
frstpm(287
idivl
sbb
clc
sub
mov
xchg
dec
int3
dec
stos
cmpsl
pop
or
mov
popl
test
dec
lcall
out
stc
fld
in
outsb
add
pop
mov
or
and
loop
and
insb
mov
mov
fistpll
cmpsl
xor
movb
cmc
sbb
pop
testl
cltd
sbb
ljmp
in
subb
leave
daa
int3
or
push
inc
or
rcll
test
xor
mov
gs
scas
dec
iret
in
test
ficomps
pop
push
mov
fs
fwait
clc
and
js
scas
imul
or
cltd
dec
test
add
mov
pushl
mov
lcall
sub
mov
fdivl
add
aad
add
mov
mov
sub
xor
scas
aas
enter
dec
shl
sahf
mov
sti
jb
mov
imul
pushf
es
sahf
gs
mov
inc
sarl
xchg
sbb
jmp
or
cmp
lcall
mov
cmp
ret
hlt
push
jl
int3
call
cld
subl
test
mov
add
out
cmp
sbb
push
mov
jns
out
pop
or
sbb
cmp
jecxz
sub
push
in
je
std
nop
insl
xchg
je
xlat
cmpsb
cmp
pop
clc
imul
fimuls
sbb
leave
sbb
sbb
pusha
cmp
push
pop
xchg
andl
fsubs
and
or
mov
push
sub
lods
sub
out
out
sahf
leave
pop
dec
fistpll
mov
fcomi
inc
mov
clc
out
movsb
repz
add
jl
inc
cmp
or
sub
repz
and
inc
icebp
lcall
cmp
jp
cld
xchg
incb
testl
xor
aas
sub
icebp
mov
cmpsb
xor
pop
push
inc
mov
xor
lea
xor
mov
arpl
pop
fsubrs
dec
cld
stos
inc
cs
jp
leave
test
sbb
cmp
into
dec
test
stos
inc
aad
aaa
pop
xor
sub
pop
xor
cmp
mov
dec
add
pop
sbb
mov
lods
inc
ret
jp
mov
iret
loope
in
mov
ljmp
call
mov
pop
and
divb
sbb
stc
pop
or
and
in
sub
in
pop
into
xlat
outsb
add
int3
sub
lock
shll
xchg
inc
mov
mov
out
jle
inc
xor
pop
outsb
lahf
loopne
dec
repnz
inc
cmp
sbb
fcomps
js
hlt
add
and
push
movl
cltd
mov
xor
sbb
ljmp
inc
adc
loopne
pop
push
sahf
add
cmc
xchg
xor
lret
jae
pop
mov
mov
sub
leave
mov
cmc
outsb
test
lds
cmpsb
lea
mov
sbb
ljmp
cmc
daa
dec
lret
mov
imul
xchg
rclb
mov
enter
jnp
inc
dec
sbb
sub
leave
aad
cmpsb
mov
pushf
call
sub
mov
mov
push
aam
mov
aaa
stc
sbb
push
outsb
fucomip
lahf
mov
iret
scas
cmp
sbb
jg
loop
leave
sbb
roll
dec
mov
mov
cmpsl
repz
cmp
js
sbb
or
xchg
mov
loopne
sbb
jge
scas
addr16
or
jg
aad
call
notb
fnstcw
roll
mov
xchg
sub
mov
push
in
pushf
lea
int3
lret
int
jp
and
fmull
jl
scas
lds
inc
add
loop
cmp
mov
arpl
iret
ljmp
pop
call
or
nop
aaa
push
cmp
aad
in
add
inc
lods
ds
popa
jno
push
inc
or
mov
jg
repz
imull
fbld
and
lahf
or
stos
adc
ja
cmc
mov
mov
imul
add
ret
or
mov
cmpsl
loope
push
fwait
stos
sub
add
jne
popa
lods
mov
sub
jg
sub
sub
pop
jne
sti
repnz
shl
adc
bound
or
jp
sbb
mov
jne
push
mov
push
cmc
fcomp
pop
lea
imul
jl
sbb
repnz
lea
xor
inc
imul
or
lods
push
cmp
sbb
mov
popa
es
loopne
stc
push
adcl
push
pop
repz
pop
mov
or
shl
adc
adc
mov
pushf
repnz
fcompl
dec
dec
sub
jbe
mov
sbb
lcall
stc
ja
lss
out
add
adc
loope
push
sahf
and
adc
jge
mov
lods
addr16
push
iret
out
sahf
xor
jns
or
xor
rcrl
rcrl
pushf
xchg
sub
xchg
cmp
divl
daa
fidivrl
add
xchg
mov
push
in
push
push
push
cmp
cmpsb
push
imul
push
jns
jbe
aad
mov
iret
xor
jmp
test
in
mov
jb
lods
mov
push
jb,pn
lds
sbb
dec
push
cli
daa
mov
adc
add
mov
popf
or
div
and
sub
imulb
insl
fcomps
add
les
xchg
jg
add
loop
xor
stos
xchg
jns
lret
mov
cs
in
shlb
pop
out
out
cmc
mov
xor
mov
cmp
xchg
out
hlt
pop
insb
add
pop
fwait
xor
mov
ss
cmc
addr16
add
xchg
add
out
mov
insb
orb
enter
ftst
push
loopne
jp
mov
add
test
lcall
lds
clc
and
and
aas
fistps
mov
pop
les
ljmp
adc
sub
out
cltd
and
daa
push
pop
xchg
mov
les
loop
js
jmp
jns
sbb
stc
pusha
and
xor
add
ss
push
ret
or
out
cmpsl
cltd
mov
pop
mov
test
mov
mov
sti
mov
incb
test
add
jbe
insl
xchg
mov
out
push
out
push
pushf
cli
push
shlb
int3
sub
xchg
stos
nop
into
mov
rol
lea
mov
mov
lods
popl
test
mov
icebp
pop
mov
mov
mov
inc
xlat
mov
int
arpl
sub
cmp
xor
cmp
mov
push
sub
nop
jp
pop
pusha
ds
hlt
sar
cltd
inc
loop
xchg
ss
movsl
push
pop
mov
shll
loope
in
dec
mov
repnz
xlat
xchg
sub
rorl
enter
dec
pop
cli
push
add
aaa
clc
xchg
std
xchg
sbb
pop
mov
and
xor
mov
mov
mov
test
imul
pop
push
inc
fnstenv
and
xor
outsb
sbb
mov
xchg
sbbb
pusha
fnsave
jb
test
addr16
hlt
out
mov
subl
lock
dec
xor
or
cmp
divb
push
test
push
insb
es
cmp
shlb
sarb
daa
imul
sub
sti
pop
jns
xchg
xchg
rcl
ret
in
daa
push
adc
add
add
cmpsb
jge
xlat
jg
stc
and
or
add
xor
cmp
push
push
cmp
jnp
int3
icebp
mov
add
das
mov
and
fimuls
adc
jae
data16
dec
dec
nop
in
lods
popf
mov
dec
pop
xchg
xlat
and
jno
sbb
stos
xchg
clc
inc
jle
jae
pop
rorb
xchg
xor
mov
aad
cwtl
lea
mov
dec
in
cmc
and
cmp
insb
fists
xlat
cmp
xorb
push
xor
shrl
dec
mov
sahf
jl
bound
ficompl
mov
mov
icebp
call
int
scas
sbb
dec
pop
mov
mov
mov
fnstsw
and
daa
mov
cltd
add
jae
jecxz
aam
fbstp
cmc
add
es
testb
cltd
xchg
insb
cltd
fists
js
mov
mov
int
inc
inc
scas
mov
xchg
insl
hlt
and
xor
mov
stc
leave
rolb
insb
cltd
cmp
sbb
jg
mov
int3
sbb
imul
mov
mov
mov
push
xchg
test
jnp
or
xchg
mov
lds
incl
hlt
add
and
hlt
adc
mov
test
mov
icebp
xchg
jmp
add
mov
scas
xchg
into
adc
sub
lahf
ret
xor
out
insl
cmp
or
mov
cmc
push
pop
cmpsl
mov
ja
jbe
bound
mov
test
push
adc
sti
pusha
subb
test
daa
mov
jecxz
stos
dec
cwtl
push
sahf
clc
jae
rcl
sbb
rclb
lret
xor
hlt
cmpsb
cld
sbb
jmp
jb
mov
sub
sbb
dec
dec
push
mov
pop
popf
or
into
jns
fwait
xchg
cmpsl
mov
pop
test
sti
mov
sub
or
push
xchg
stos
push
lret
lods
inc
std
jno
shll
cltd
xor
inc
clc
dec
cld
mov
jmp
adc
adc
inc
pop
out
out
test
or
inc
cmp
or
leave
mov
dec
out
and
xchg
outsb
add
nop
fisttpll
push
mov
js
inc
or
jp
dec
mov
shl
sub
xor
std
jo
ss
lret
push
mov
lret
add
xchg
sbb
movsl
cld
fbstp
lcall
dec
ja
std
add
out
int
test
loop
lds
push
out
cli
aas
pop
or
cmpsb
cmp
clc
loop
lcall
or
jge
mov
fs
je
jge
jecxz
mov
xchg
sub
sub
or
mov
loopne
mov
fadd
jbe
sub
jecxz
enter
xor
aad
out
mov
call
aad
rol
dec
inc
xlat
pop
bswap
out
enter
stos
aas
fidivs
add
out
aas
xchg
lret
mov
push
jb
fcoms
cwtl
das
and
mov
cmpsl
addr16
push
cs
scas
adc
fucom
repnz
pop
std
xchg
xchg
stos
int
push
mov
sbb
mov
xchg
jge
sahf
pusha
dec
inc
xlat
cmc
mov
cmpsb
arpl
js
pop
out
add
out
push
pop
repnz
or
add
or
sti
dec
pop
push
out
ja
add
xor
push
rcrl
dec
pop
repnz
inc
pop
idivl
daa
jmp
add
mov
xor
push
in
add
ss
mov
xor
inc
adc
mov
lret
pop
insb
add
inc
cmpsl
out
ljmp
mov
rorb
add
jle
in
imul
call
adc
in
lods
inc
or
xchg
jecxz
lock
add
fisubrs
sbb
xor
ja
sbb
or
test
inc
pop
cmp
mov
jge
jl
andl
add
rcr
xor
hlt
dec
insl
dec
pop
inc
cmpsl
mov
mov
mov
sbb
pop
call
and
movsl
ja
out
xor
aam
inc
pushf
or
roll
add
hlt
mov
es
mov
dec
aam
out
xchg
insl
push
xlat
call
setbe
mov
das
jb
pushf
and
out
xchg
mov
cwtl
das
push
in
test
je
dec
push
jmp
add
daa
aam
mov
and
sub
xchg
insl
bnd
aam
les
int3
sbb
cmp
cmp
stc
adc
leave
insl
sahf
or
sbb
mov
sub
xchg
push
rclb
aas
je
mov
mov
pusha
jl
bound
subb
sub
stc
xchg
js
int
cmp
enter
jp
jle
scas
scas
stos
xchg
or
mov
int
inc
xchg
sub
push
clc
mov
cmp
dec
sub
and
ret
stc
fcomps
adc
jecxz
xchg
inc
sub
lcall
push
xchg
iret
pushf
xor
mov
mov
stc
test
fdivl
roll
sti
cli
inc
test
pushf
xor
lcall
js
into
aad
lock
xor
lret
notb
iret
test
loop
mov
xchg
or
jle
mov
fistps
xchg
je
add
insl
shlb
or
in
push
mov
xor
add
test
jb
fisttps
mov
mov
push
into
ficoml
aad
je
lods
mov
fst
cwtl
sbb
andl
es
pop
gs
mov
mov
cmp
cmp
adc
gs
xor
into
lahf
es
cmp
outsl
jno
shll
inc
pusha
mov
cmpsb
cmp
lds
and
pop
js
inc
mov
loopne
xchg
cmpsl
push
in
mov
imul
mov
int3
sbb
cmpsb
dec
mov
cmc
pop
lret
insb
andb
insl
imul
fcompl
mov
and
pop
pop
cld
adc
movsb
lcall
cmovs
mov
mov
imul
fwait
js
xchg
sub
cltd
mov
fxam
cmpl
mov
jbe
pop
xlat
inc
cmp
gs
push
mov
pop
push
push
fcomp
jae
test
lret
lds
add
out
test
aaa
imul
mov
and
loopne
and
cmpsb
mov
imul
fcomip
push
test
mov
div
imul
rcrb
inc
popf
lds
mov
ret
cmp
cmpsb
jl
jmp
add
int3
pop
mov
xchg
mov
add
sbb
sahf
mov
in
mov
js
nop
stos
xchg
movlps
sub
inc
rep
repnz
inc
push
cmp
int
xor
mov
das
pop
xor
outsl
or
cmpsb
jbe
mov
or
inc
jae
mov
ficoml
push
jp
push
jo
sbb
jp
fidivrs
jns
push
cltd
cli
dec
lock
scas
dec
xor
hlt
push
xlat
push
push
outsl
aaa
cld
shll
popf
jnp
decb
imul
rol
xchg
inc
sbb
xchg
lcall
dec
and
adc
xchg
xor
out
pop
stos
sbb
sub
mov
mov
sub
cltd
jle
lret
lods
fldt
outsl
add
jne
and
aad
aas
add
lret
or
adcb
call
jne
mov
xchg
jmp
mov
sti
popa
popa
ret
pop
addb
dec
xchg
scas
and
rclb
cmpsl
ds
repnz
addr16
fs
mov
fcompl
push
scas
arpl
cmpb
jo
dec
dec
push
sbb
xchg
lret
mov
std
adc
mov
shr
clc
insl
pop
imul
mov
dec
cmp
ds
test
les
shl
das
inc
in
inc
lret
bound
push
je
test
sbb
xchg
insb
add
aam
jl
or
fldcw
pop
inc
mov
sahf
stos
inc
sti
pushf
cli
ss
loop
test
int3
mov
in
push
fwait
lock
pop
xor
lcall
jo
shrb
pusha
aaa
xor
cmp
lret
movsb
mov
cmp
jl
xchg
popa
add
mov
sbb
sbb
ljmp
push
call
je
dec
xor
std
pop
xchg
mov
out
pushf
dec
pop
gs
fidivs
sahf
add
into
aad
stos
cmc
mov
ds
ja
test
mov
std
iret
add
arpl
jmp
xchg
jl
inc
cmpsb
loope
pop
push
adc
popa
mov
xchg
mov
xlat
call
hlt
or
jmp
cli
jecxz
imul
call
dec
dec
xor
mov
push
cmp
inc
or
ljmp
pushf
les
jg
inc
sbbb
adc
stos
popf
push
aad
add
xor
cmp
pop
fyl2x
cmc
cmp
imul
jno
add
cmp
pop
stos
cmp
or
push
testb
push
int3
dec
les
inc
stos
sti
sbb
aas
arpl
pop
jae
inc
pop
popa
xchg
adc
cld
mov
subb
adc
gs
jge
or
mov
mov
sbb
decb
dec
sbb
lods
push
call
aad
lods
xchg
test
push
xor
sub
dec
out
loopne,pt
mov
daa
imul
xor
inc
mov
dec
into
pop
xchg
cmc
or
dec
xchg
imul
and
xchg
mov
sub
jne
notb
mov
adc
test
in
xor
mov
in
xchg
mov
cli
scas
mov
dec
xchg
daa
or
std
imull
dec
shll
bound
fdivs
mov
mov
pop
icebp
loopne
rolb
aam
jns
test
lcall
xchg
fcoms
mov
push
movsl
rol
pop
lahf
xchg
sub
mov
xchg
enter
xlat
mov
adc
fs
pop
frstor
in
inc
js
pushf
movsl
push
add
add
cmpsb
fucomp
xlat
daa
add
fisttpll
jb
outsl
out
loopne
or
mov
inc
or
ja
dec
test
adc
sub
loope
adc
mov
cmpsb
icebp
ja
or
int3
mov
jge
pop
hlt
mov
clc
loope
inc
out
loope
bound
dec
mov
in
jge
jnp
sbb
dec
mov
sarl
dec
add
inc
xchg
sub
jbe
mov
jl
ret
int
or
xchg
aas
or
mov
cmp
icebp
shlb
rcr
cli
pop
jbe
push
cltd
mov
cmp
xchg
mov
sti
xchg
dec
sub
dec
shrb
testb
aas
xchg
sbb
pop
jno
out
pushf
adc
jp
sahf
movsl
jl
aas
lret
inc
leave
jmp
inc
sbb
cmp
es
sahf
mov
add
xchg
test
sbb
jge
ds
sub
imul
xchg
sbb
cmp
push
imul
xor
push
enter
cli
ja
sub
ja
inc
adc
jmp
fcmovnb
xchg
push
rorl
test
bndstx
imul
dec
fst
mov
mov
ret
inc
inc
aam
inc
push
aam
int3
jecxz
mov
insl
add
ds
test
imul
cmp
imul
pop
cmp
push
cmp
je
adc
out
jp
push
insl
or
loop
and
and
or
inc
outsl
mov
cmpsl
cmp
mov
cmp
es
fisttpll
inc
mov
lret
call
rcrb
movsb
sub
add
add
test
popa
or
xor
inc
popa
adc
mov
add
fidivl
cs
movsb
cmc
nop
aad
fsubl
pop
aaa
mov
orb
pusha
cmpsl
fldenv
pop
out
fdivl
in
jg
dec
pop
or
test
mov
adc
mov
lods
sbb
test
aas
js
pop
adc
push
push
xor
int3
imul
pop
jbe
mov
cmp
and
jne
jmp
ret
stos
sbb
pop
sub
test
dec
in
jae
aas
add
pop
out
sbb
in
push
mov
xchg
test
fcmovb
cmp
stos
push
nop
or
xchg
in
adc
xor
test
scas
mov
decb
dec
cmp
jns
hlt
adc
push
fistpl
insb
lea
and
push
ljmp
jne
mov
sub
or
xchg
ss
jmp
aad
dec
and
aad
insl
jo
mov
push
mov
adc
pop
lcall
and
lret
dec
and
mov
inc
fildll
push
xchg
pop
xchg
push
mov
rorl
lcall
mov
pop
push
cmp
adc
inc
mov
push
pop
mov
xchg
lods
mov
scas
push
mov
push
mov
out
lods
testb
cmp
aaa
in
call
push
cmp
gs
inc
int3
add
shl
push
loope
push
cmp
mov
cmpsb
xchg
mov
or
inc
inc
movsb
jg
stos
sub
jp
frstor
dec
lock
dec
dec
adc
aas
push
and
dec
test
test
mov
jecxz
add
sbb
pop
out
nop
pop
mov
inc
popa
popa
and
loopne
sti
ret
add
gs
sti
mov
loopne
jno
in
std
jge
shrb
push
add
dec
mov
sub
mov
in
imul
nop
xor
gs
xlat
arpl
fadds
nop
xor
adc
sti
into
mov
movsb
mov
push
dec
add
sbb
std
je
sub
xchg
mov
std
scas
inc
dec
lret
lock
sbb
sbb
push
mov
mov
xor
or
pop
and
jmp
push
add
mov
in
data16
jne
mov
mov
mov
fists
sahf
fildl
bound
and
rcrl
ljmp
and
mov
dec
pop
adc
sub
ds
jle
jo
sbb
push
fwait
stc
pushl
inc
imul
fstl
int
mov
fiadds
xchg
adc
dec
sbb
repnz
lcall
out
fcmovnu
cwtl
adc
mov
jmp
push
mov
mov
adc
mov
or
jle
mov
or
cmc
pop
repz
fs
pop
pop
mov
jg
cltd
sbb
outsb
xchg
sub
adc
jge
lods
sub
pop
sub
xchg
bnd
sbb
divb
add
loop
dec
pop
inc
das
shrb
aaa
or
insb
les
cmp
adc
or
fcomps
cwtl
out
cltd
shll
cmp
jecxz
xchg
mov
xchg
aaa
roll
pop
shl
cmp
in
dec
mov
mov
add
movsb
aad
mov
pop
call
repnz
mov
xorb
fsts
pop
aas
mov
push
dec
mov
cmp
loope
sbb
xlat
mov
and
aaa
ljmp
lret
cld
inc
mov
mov
cmp
mov
xchg
push
mov
jg
stos
xchg
pop
and
in
fidivrs
dec
or
daa
lods
gs
push
xor
add
fsubl
pop
stc
imul
stc
push
clc
ja
aaa
xor
clc
sub
mov
mov
mov
or
mov
movsl
repz
pop
data16
or
ja
fdivl
mov
sbb
fldpi
jg
outsb
mov
scas
mov
shrb
lods
pop
sub
sti
mov
loopne
xor
dec
das
jg
pop
insl
mov
pop
xlat
sub
sbb
push
jmp
xor
or
push
sub
push
ret
lahf
pop
inc
mov
mov
fisubl
and
imul
xor
mov
andb
pop
test
adc
fisubl
xchg
inc
xchg
sub
dec
mov
ret
inc
in
ret
sbb
adc
dec
mov
mov
jns
jnp
xchg
jge
ret
xchg
add
adc
rolb
jbe
mov
cmpb
pop
mov
dec
scas
push
outsl
rcrl
outsb
push
ret
ret
sbbl
adc
xor
ja
in
test
sti
pusha
loop
mov
add
jl
gs
lods
enter
outsl
loop
pop
subb
dec
loop
ret
mov
or
adc
sub
pop
mov
insb
lret
cmpsb
inc
in
lahf
jno
push
xchg
fcoml
inc
sarl
leave
sahf
mov
mov
scas
jns
rorl
sub
mov
mov
jge
pop
lcall
fisubs
je
add
xor
sbb
sarb
or
and
movsb
popf
loopne
out
sbb
mov
inc
sub
shl
imull
imul
add
movb
popf
addr16
insl
mov
lahf
push
push
shll
adc
cmp
orl
filds
insb
adc
mov
insb
loope
lock
fisubl
push
and
cmp
aad
add
and
and
out
mov
sbb
cmpsl
ret
xchg
aaa
out
xchg
push
repnz
push
jmp
mov
add
jns
stos
popf
dec
inc
ja
mov
repnz
adc
mov
rol
xor
fistl
fnstsw
sbb
mov
jecxz
mov
repz
push
fsubl
adc
jge
in
add
sbb
mov
mov
fwait
dec
or
mov
das
ja
xchg
lock
dec
and
mov
dec
pop
push
dec
or
fisttps
js
pop
stos
mov
adc
pop
int
cmp
adc
mov
cld
in
adc
leave
shll
adc
jecxz
pop
std
scas
xchg
loopne
test
test
scas
xchg
js
mov
in
mov
cwtl
xor
push
gs
jae
cmp
fsubrs
adc
xchg
andb
push
mov
mov
cs
call
mov
rcrl
mov
sahf
in
cmp
faddl
loopne
ficomps
mov
sarl
dec
jl
icebp
inc
mov
sbb
lea
push
mov
sbb
sub
lods
jmp
xchg
mov
add
mov
mov
jle
xchg
loope
movsb
aad
ficoml
pusha
sub
jo
je,pn
fsubrs
shlb
add
add
ret
inc
fwait
pushf
es
pop
jnp
inc
and
hlt
jnp
ror
pusha
add
es
pop
lea
pop
adc
out
shll
mov
jnp
push
popf
dec
rclb
xchg
push
inc
fidivs
cmp
push
bound
jo
jnp
inc
fnsaves
iret
push
jle
sbb
lahf
xchg
icebp
mov
mov
cmp
in
stc
xlat
sbbb
dec
xchg
mov
int
adc
insb
mov
push
in
lea
and
scas
mov
push
adc
xlat
sar
and
or
mulb
outsb
int3
sub
sbb
mul
sub
xor
icebp
inc
loopne
sbb
add
callw
cmp
or
insl
mov
rolb
notl
or
jmp
mov
int3
test
nop
imul
pop
int3
mov
xchg
fldenv
sahf
insl
dec
dec
insb
mov
shl
and
rcr
das
mov
push
test
sbb
cld
jb
das
xor
xor
mov
push
mov
mull
add
add
inc
jle
out
push
test
or
xchg
pop
pop
mov
dec
mov
lea
pop
in
mov
dec
fdiv
xchg
stos
xchg
add
in
and
xchg
adc
movsb
cmp
pop
call
movsl
lods
rclb
mov
test
jge
ss
pop
out
mov
cmp
cmc
leave
dec
stos
adc
in
inc
stos
jb
aam
cwtl
not
jp
stos
out
in
cmp
cmp
lods
mov
rclb
mov
pop
ss
xor
cmp
push
setno
dec
stc
jg
hlt
and
test
pushf
movsb
loopne
lahf
and
sbb
push
mov
add
and
sub
mov
out
sti
sti
cmc
daa
es
andb
push
push
dec
mov
mov
mov
add
xchg
sub
push
push
daa
xor
xchg
xchg
ret
divb
lcall
js
scas
test
mov
mov
mov
jp
arpl
sub
out
pop
mov
add
loopne
hlt
cmp
xor
xlat
sub
pop
or
and
sbbl
rcl
sub
test
cmpsb
cmp
arpl
adc
test
leave
lock
push
rorb
in
das
cmp
mov
sbb
test
xor
inc
cmp
mov
loopne
pop
or
jp
outsl
cltd
mov
mulb
ss
sub
lahf
push
scas
inc
inc
mov
dec
out
cmp
call
sar
imul
jmp
and
xor
dec
xchg
cmc
mov
addr16
jae
das
cmp
jecxz
cmp
lds
xchg
pop
lock
sub
push
addr16
push
and
stc
dec
loopne
test
or
test
sbbl
in
sub
leave
push
ret
out
add
and
pop
jp
xor
pusha
cmp
cmp
sub
inc
popf
mov
iret
gs
popf
sbb
and
jno
xor
xchg
sub
les
mov
or
out
push
or
icebp
mov
mov
mov
sbb
cmp
pop
lock
xchg
les
lds
push
sub
cli
pusha
xor
mov
fiaddl
bound
jns
repz
jmp
jno
cmp
cmc
insl
insb
repz
out
sbb
mov
jmp
rcll
aas
push
push
sbb
adc
mov
rol
push
lods
push
dec
in
mov
pop
mov
or
mov
shl
mov
lcall
out
in
sbb
xor
movsb
arpl
push
insl
rorb
jg
leave
call
mov
lea
pop
pop
scas
mov
adc
fs
xor
pop
arpl
ds
adc
nop
daa
xor
push
stos
loop
mov
inc
sbb
sarb
cs
xchg
pusha
mov
enter
cmp
cmpxchg
lods
repnz
adc
push
dec
fdivl
add
push
push
arpl
sbbb
xor
pushf
inc
sbb
jae
hlt
xchg
sbb
sbb
cli
sarl
mov
fimuls
iret
and
inc
cli
stos
mov
mov
push
mov
mov
ljmp
xchg
jne
mov
jmp
cs
sti
or
stos
xchg
repz
and
ds
stos
orb
add
cmp
pusha
icebp
adc
push
push
fwait
stos
int
fisubl
jo
push
adc
xchg
jmp
or
cmp
lea
push
xchg
add
mov
push
ds
xor
xchg
aas
xchg
in
xchg
mov
fs
inc
cld
inc
fstl
mov
pop
sti
mov
xchg
outsb
fimuls
aas
mov
adc
gs
jmp
dec
out
out
hlt
cmp
dec
dec
adc
lcall
cmpsl
out
adc
pop
jecxz
or
fcmovu
aaa
push
or
push
pushf
loop
adc
cmp
or
iret
jecxz
aam
mov
cmp
or
add
sbb
cwtl
mov
adc
rorl
jg
jne
mov
ror
fisubl
or
lcall
push
popf
daa
or
sub
xor
jne,pn
ret
imul
adc
xor
adc
nop
jg
cmp
fstl
psadbw
push
lret
push
jl
jp
loop
xor
popa
sub
sub
jg
pop
mov
hlt
jg
push
imulb
shll
daa
out
movsl
shl
and
mov
or
jno
in
xor
sbb
lcall
dec
loop
dec
imul
scas
mov
dec
cmp
pop
cmp
cltd
call
mov
sub
inc
mov
loope
pusha
sahf
mov
mov
clc
lret
mov
cwtl
out
jle
cli
and
inc
xchg
or
xor
lcall
push
mov
push
les
test
jb
daa
inc
je
sub
pop
shl
loopnew
mov
cltd
xchg
call
pop
das
mov
lahf
idivl
push
imul
outsl
push
adc
sbb
popf
lock
in
push
insb
inc
jg
push
xor
jle
or
sub
je
dec
pusha
pushf
and
shll
mov
sahf
pushf
cmpsb
outsb
xchg
jmp
fidivs
shlb
iret
or
inc
xor
sbb
inc
in
sbb
and
int
sahf
cld
js
and
popf
jmp
pop
xchg
mov
mov
insb
out
cli
pushf
and
adc
jo
add
into
das
lds
sub
fucomp
orl
lock
dec
and
jne
lcall
push
std
fdivl
and
aaa
nop
sbb
lds
push
hlt
mov
ret
mov
add
inc
cmp
push
pop
sub
xchg
rol
imull
inc
mov
lods
loope
mov
stos
aas
xor
mov
test
int3
and
cmp
sbb
mov
ret
repnz
cmp
ds
mov
jnp
cmpsl
clc
and
movsl
adc
mov
cli
sarl
mov
adc
js
inc
push
ja
pop
icebp
cmp
out
ret
paddw
jb
push
xchg
stos
dec
fcoms
sub
scas
mov
in
idivb
adc
test
hlt
cltd
enter
pusha
pusha
fs
xor
cmp
add
out
inc
pop
jns
mov
test
cmp
sti
sarb
out
lds
inc
cmp
add
test
test
subl
notl
jle
ja
outsl
or
pop
cmpsb
aad
shl
cld
cmpsb
loopne
pop
adc
cmp
iret
leave
xchg
jbe
pop
icebp
jnp
ficomps
xor
xor
mov
repz
jge
pop
cmp
jp
cld
cmpsl
or
ret
arpl
and
ds
test
add
fistl
xor
jb
xor
scas
jne
or
mov
adcb
test
in
inc
push
push
jp
mov
cltd
das
sub
lret
in
ret
add
pop
xchg
or
jnp
test
loopne
jns
xchg
shll
and
mov
jmp
shrl
cmp
xlat
add
es
popa
aam
push
mov
stc
adc
push
xor
jmp
sbb
jns
sub
mov
xlat
dec
in
mov
xchg
jge
shlb
aaa
mov
inc
inc
stc
nop
aaa
jb
bound
sbb
out
jp
mov
jle
insl
sarl
push
fisubrl
es
xor
ret
mov
pop
cmc
iret
fistps
xor
fcomi
leave
nop
cmp
fldt
push
and
cmp
daa
cli
xchg
pop
mov
inc
xchg
add
daa
xchg
dec
data16
icebp
mov
ret
sbb
iret
mov
les
les
adc
pop
cs
popa
dec
in
leave
dec
fnstcw
xor
bound
push
push
adc
arpl
iret
adc
inc
mov
mov
cmpsb
or
in
xor
adc
pushw
xor
mov
xchg
mov
inc
mov
inc
in
lea
push
out
adc
xchg
sub
pop
repnz
je
jle
xchg
add
lock
inc
mov
int3
arpl
sub
jne
adc
xor
pop
daa
inc
dec
fidivs
dec
movsb
fmull
mov
fdivs
lret
push
insb
popa
out
shrb
sarl
lret
dec
add
mov
popf
aas
adc
or
fists
cli
push
and
inc
and
mov
dec
mov
and
aas
push
ja
adc
pop
jp
mov
pushf
lds
or
jge
cwtl
repnz
push
pop
adc
nop
out
inc
pop
test
loopne
movsl
test
add
sbb
xchg
mov
mov
int3
jbe
call
cmp
lds
pop
sahf
lcall
or
movsb
cmp
mov
sub
fcmove
imull
adc
add
lret
lock
xchg
fcoms
loope
into
enter
enter
cmp
push
jp
fnstcw
dec
scas
push
jmp
cmpsl
inc
sub
into
fdivs
add
pop
aam
xchg
inc
je
inc
jecxz
lahf
cltd
xchg
push
lcall
inc
fcompl
ljmp
and
fdivl
inc
cwtl
cltd
imul
mov
inc
ljmp
xor
push
rol
sbb
and
bound
mov
pop
cmpsb
xor
arpl
jmp
lods
lods
divb
test
xchg
pop
repnz
pop
loop
or
mov
add
je
add
out
je
pop
push
adc
jbe
push
and
je
jl
icebp
and
hlt
mulb
push
das
scas
sub
add
shl
mov
sub
shll
xor
add
inc
fs
lahf
sbb
sub
ja
mulb
mov
mov
dec
inc
setge
sbb
sub
das
adc
and
lret
bound
inc
push
fsubs
inc
pop
scas
arpl
jbe
push
int
dec
aas
or
jmp
mov
lods
mov
sbb
adc
lahf
mov
xchg
sub
dec
pop
jae
scas
lea
js
pop
ret
or
rcrl
pop
adcb
je
iret
xorl
vpunpcklwd
dec
push
orl
movsl
xlat
rcll
lahf
pop
mov
sbb
mov
pop
xor
test
fisttpl
add
mov
mull
adc
mov
cmpb
xchg
pop
imul
lds
cmp
xor
shl
jne
test
cmp
fs
dec
ja
clc
adc
lahf
repz
rorb
leave
pusha
stc
xor
xor
cwtl
xchg
pop
lret
mov
push
pop
mov
xchg
inc
es
mov
inc
fdivr
jmp
add
in
pusha
xor
cmpsl
push
imul
jo
leave
je
cltd
mov
adc
inc
inc
clc
aaa
dec
push
sbb
or
aad
lret
jp
push
jle
fisubs
pop
adc
repnz
cmp
sub
je
shlb
xchg
stos
mov
sbb
data16
pusha
cwtl
inc
push
push
xchg
std
pop
mov
mov
sbb
mov
shlb
jnp
mov
jns
add
mov
jno
lea
cld
jle
fmul
insl
sbbb
not
pop
add
sbb
mov
out
push
jns
fisubrs
mov
fs
xchg
xchg
dec
stc
mov
sti
or
into
clc
shl
push
push
data16
jg
ja
adc
xchg
and
mov
aas
jo
lods
int
icebp
arpl
add
jge
sub
stc
sahf
dec
and
scas
mov
fsubl
pusha
lret
adc
hlt
repnz
adc
gs
std
inc
or
push
mov
sub
or
ja
push
ret
xchg
or
mov
imul
out
xchg
sbbl
repnz
adc
jp
mov
or
sbb
out
imul
pushf
adc
out
shl
dec
cld
movd
and
iret
mov
out
sahf
mov
out
sub
lahf
mov
je
mov
icebp
enter
and
xor
push
pop
stos
inc
sbb
adc
xchg
popf
shrb
add
inc
in
stos
popf
mov
fcoml
bswap
aam
jb
jae
push
xchg
test
dec
and
jecxz
cmpsl
sbb
add
bound
jp
fists
mov
js
push
adcb
add
jne
stc
and
cmpsb
or
pusha
xchg
ds
inc
mov
icebp
mov
jge
pop
inc
rorb
cli
outsb
rorl
adc
inc
sbb
push
xor
das
sbb
out
test
mov
fincstp
mov
cmp
mov
xchg
sub
out
out
or
cwtl
bound
outsl
push
andl
divl
cmpb
or
mov
stos
and
add
sbb
mov
cltd
pop
sbb
hlt
stos
push
push
ljmp
sti
shlb
jns
outsb
ljmp
mov
into
xor
inc
pushf
push
arpl
inc
add
fbstp
cmp
sub
xor
jmp
mov
push
sbb
call
sbb
popf
mov
or
out
insb
lahf
adc
dec
or
mov
mov
mov
dec
movsb
cli
out
jge
xchg
mov
movsb
xchg
sbb
mov
jbe
enter
into
fs
std
xchg
ficoml
pop
sbb
cmp
cld
cmc
mov
xor
in
pop
fidivrs
dec
and
fstpt
jecxz
xchg
es
cmp
cld
lcall
and
xor
jle
ret
adc
lret
ret
out
xor
test
mov
je
add
xchg
ds
pop
ds
ss
cmp
jae
push
out
xchg
mov
test
sbb
dec
mov
or
push
iret
jae
scas
push
cmp
lcall
iret
jo
xchg
push
aam
jb
insb
fwait
test
xor
pop
stos
mov
sbb
jb
adc
insb
mov
idiv
jp
cs
xchg
loopne
cltd
aad
popf
je
pop
or
push
xchg
sarl
mov
ret
daa
lcall
inc
push
icebp
inc
push
cmpsb
and
mov
jns
fidivs
loop
xchg
repz
std
test
ss
cmp
jge
icebp
and
cs
outsb
pusha
cmc
cmpsl
cmpsb
push
data16
xchg
cwtl
pop
insl
loope
das
push
mov
mov
xchg
addb
mov
xchg
lret
cmp
xorl
cmp
daa
push
es
loope
das
test
add
inc
in
fldl
jmp
cmp
push
cmp
push
jmp
lahf
es
or
mov
int
ds
xchg
in
fstpt
adc
sub
jl
cs
in
repz
mov
inc
or
inc
test
out
fwait
sbb
or
dec
hlt
lods
stc
in
mov
sbbl
and
loop
aaa
mov
inc
mov
outsb
adc
mov
out
ja
push
mov
mov
push
mov
stc
test
push
push
adc
addr16
scas
push
xchg
js
sub
push
cmp
cld
rorl
sbb
sub
cmp
pop
je
out
sbbb
jmp
imul
add
addr16
add
scas
mov
scas
test
sub
out
shlb
dec
xor
dec
push
notb
lods
pop
dec
xchg
cld
mov
sarl
pop
jo
lahf
clc
add
daa
in
scas
notl
xorb
pop
jnp
mov
pushf
dec
clc
mov
lock
xchg
and
xchg
and
mov
ljmp
ss
cli
jl
test
lods
jp
cmpl
cmp
rol
in
mov
inc
lret
shrl
aam
ret
insb
adc
xchg
jae
out
push
loop
or
cld
cmpsb
cmp
xchg
jl
push
scas
mov
mov
dec
fwait
cmpsl
cmpsl
test
js
les
loope
inc
or
add
bound
cmp
sub
adc
sbb
add
add
add
ja
ja
ljmp
pop
mov
push
sbb
jle
outsb
into
cwtl
push
jbe
mov
out
dec
dec
stos
mov
icebp
movsl
xchg
or
loop
mov
push
jb
pop
lahf
testl
imul
add
mov
sub
sub
inc
fidivs
gs
dec
xor
inc
popf
aas
push
lret
dec
das
addr16
adc
pusha
das
arpl
lret
in
pop
es
push
adc
imul
mov
out
adc
lods
mov
sub
push
mov
adc
cmp
xchg
bound
push
xchg
notl
std
pop
push
add
arpl
dec
loope
das
clc
cmp
pushf
or
cli
cmp
fdivrs
push
lret
push
cld
xchg
mov
ret
cmpsl
in
jns
aaa
rcrb
mov
mov
rcll
icebp
adc
addb
xor
push
push
aaa
push
dec
or
push
outsb
pushf
arpl
js
cmc
push
mov
mov
and
push
push
cld
sub
or
sbb
movsl
jl
ret
fdivs
sbb
mov
inc
adc
xor
jmp
pop
sbb
insl
in
xchg
push
mov
push
push
mov
or
pop
dec
pop
insb
cmpl
mov
xchg
mov
stc
cltd
mov
push
xor
leave
fcomps
mov
stc
in
lods
jb
jge
push
movsl
decb
xor
add
add
ret
fisubs
test
sbb
mov
jl
mov
add
dec
inc
xlat
in
test
mov
xchg
mulb
adc
out
pusha
add
cld
jnp
cmp
scas
cmpsb
push
jns
inc
jno
xlat
ss
jae
fildl
test
sahf
imul
daa
push
popf
jae
jnp
sub
dec
pushf
xchg
mov
mov
mov
push
xchg
ret
arpl
cmpsl
or
xor
cld
ja
sub
adc
ds
cmp
or
push
xorl
inc
loope
shlb
repnz
and
daa
aad
ret
jle
jns
outsl
inc
xor
push
add
mov
pop
push
ret
cmpb
shrl
adcl
xchg
cmpsl
ret
repz
xchg
mov
into
mov
in
test
push
xchg
adc
pop
dec
std
xor
adc
inc
cmp
cmp
lret
push
adcl
xchg
inc
testb
push
insb
add
imul
inc
sbb
pop
repz
add
inc
mov
pushf
cli
pop
mov
mov
stos
mov
cmpsl
adc
movsl
inc
out
sbb
cmc
cmp
mov
cmp
mov
rcl
add
push
out
push
adc
dec
and
aas
loopne
out
cmpsl
adc
addr16
cmpb
xor
loop
filds
in
mov
int3
ljmp
fcoml
cmp
mov
loop
fcmovb
pop
cmpsl
mov
in
outsl
xor
mov
pop
cmpsb
lods
fidivs
lock
fisttps
fwait
jne
setge
or
lods
jge
jno
iret
adc
jne
mov
inc
scas
xor
lret
arpl
jnp
outsb
cmp
test
inc
push
or
and
jno
xor
movsb
incl
and
inc
or
sub
add
jp
add
rol
stc
cwtl
and
mov
or
lcall
fstpt
pop
jmp
push
mov
leave
mov
jae
js
stc
insl
push
fidivs
insl
int
sbb
bound
jb
inc
pop
mov
mov
fnsave
mov
out
mov
lea
adc
pop
push
out
shlb
xchg
daa
jmp
pop
mov
adc
lods
mov
mov
mov
add
jmp
sbb
pop
push
jmp
pop
pop
jno
les
lods
mov
lret
lret
das
cld
mov
add
popa
pop
ja
or
popa
fdivl
dec
daa
jl
pop
jno
mov
hlt
lcall
loopne
negl
jle
imul
cmp
test
mov
out
movb
jae
sti
xchg
pop
xor
nop
clc
outsl
jge
jmp
shll
adc
shl
xchg
std
sbb
mov
cmp
dec
push
sub
add
stos
mov
mov
sub
push
je
mov
sbb
clc
xchg
add
incl
sbb
dec
dec
mov
jnp
insb
aad
push
movaps
cmp
pop
clc
hlt
pop
adc
mov
insb
cmp
jecxz
in
add
mov
fs
sbb
bound
pop
pop
mov
sub
dec
and
dec
outsl
nop
add
dec
and
jbe
popf
stc
mov
ret
xor
add
je
inc
jecxz
jns
and
push
movsl
xchg
clc
or
adc
add
sub
pop
mov
and
stos
xchg
add
in
push
pop
fimull
mov
push
sub
add
mov
push
sub
pop
inc
cmp
add
pop
mov
and
pushl
in
adc
stos
and
xchg
sub
sub
jb
pop
test
hlt
into
pop
sub
lock
scas
xor
test
fcmovnb
cmp
mov
clc
pop
in
mov
inc
sub
add
cmpsl
sub
add
movsb
mov
fcompl
jmp
sub
sbb
jp
sub
inc
jmp
xchg
mov
add
nop
mov
inc
mov
lods
cld
shrl
lret
in
outsb
inc
test
insl
rolb
ret
jb
xchg
cmpsl
dec
and
shl
repnz
mov
mov
dec
aas
add
jmp
movsl
push
fcompl
dec
movsl
rcr
mov
push
cli
mov
push
dec
loopne
push
push
aas
adcb
arpl
std
push
and
and
lods
out
sahf
add
cmc
cmp
outsb
push
mov
or
mov
jl
test
dec
aad
dec
inc
mov
pop
dec
sub
jge
mov
aad
mov
rcrb
cmovge
add
sti
nop
aam
cwtl
cmc
sbb
aas
sub
pop
mov
xor
or
adc
movsb
xchg
pop
and
nop
pusha
fsubrl
lea
into
mov
inc
sub
dec
jge
dec
into
aad
push
js
dec
rcrb
sbb
jl
scas
inc
lcall
iret
gs
leave
lret
mov
dec
and
test
sti
pop
mov
jl
sub
leave
mov
inc
cmpl
pop
loop
xor
sub
enter
pop
mov
add
xchg
test
sarb
es
push
gs
fwait
jb
lahf
adc
nop
and
outsl
sbb
nop
push
lods
rorl
jl
xor
or
adc
loop
xchg
sub
fisubrl
pop
sbb
out
cmpl
mov
fs
sbbl
pop
in
sbb
and
mov
fwait
insl
xchg
adc
mov
lea
popf
push
mov
addr16
pop
movsl
loopne
mov
stc
mov
push
scas
pop
mov
xchg
aam
leave
mov
or
mov
jmp
cltd
or
cmpsl
out
inc
add
test
icebp
movsl
ret
jg
mov
in
aad
cwtl
es
arpl
mov
sahf
jne
insl
inc
clc
bound
imul
push
sub
or
cmp
jae
test
sahf
lds
fdivrl
xor
cmp
xchg
test
pxor
inc
inc
lcall
and
ljmp
adc
jl
mov
add
inc
loope
mov
lods
jnp
pop
test
bound
jecxz
mov
dec
in
xor
push
lock
add
cltd
notl
daa
mov
add
jo
fistl
or
ret
inc
mov
fwait
or
lods
pop
sub
inc
loopne
clc
call
dec
cmp
movsl
mov
sbb
lahf
jge
iret
lret
dec
es
mov
xchg
in
xchg
sbb
or
in
jb
loop
imul
or
fbstp
sub
loop
cmp
mov
or
sbb
add
mov
imul
dec
push
push
pop
push
push
add
cmp
adc
push
adc
jle
mov
mov
ljmp
jae
into
movl
jmp
push
push
pushf
adc
cmpsb
ja
ret
pushf
pop
and
jp
in
pop
sbb
aam
mov
mov
or
sub
mov
mov
jbe
or
adc
lcall
lret
xchg
add
hlt
out
adc
dec
ss
jo
xor
inc
adc
dec
fmull
repnz
sbb
inc
out
movsb
imul
das
xchg
mov
popl
cmpsl
push
mov
inc
xchg
xor
jno
dec
rclb
rcrl
push
xor
shrb
rorb
insl
sbb
lahf
jl
sahf
scas
or
sbb
jge
adc
fwait
sub
sahf
sub
movsl
or
xchg
pop
in
dec
mov
cli
testb
rcl
xor
in
mov
mov
jl
mov
scas
fnstsw
dec
aas
lret
xlat
push
inc
push
pushf
repnz
add
and
xchg
dec
jmp
or
mov
outsb
inc
mov
pop
outsb
mov
dec
pop
insl
mov
pop
in
sbb
mov
jl
notb
and
pop
xsha256
cmpsb
nop
mov
sub
dec
pop
out
jb
inc
or
xchg
pop
daa
xor
add
xor
mov
js
leave
mov
xchg
push
mov
ficoml
mov
add
jp
inc
and
mov
sub
flds
pop
cmp
mov
std
cmp
outsb
pop
rcl
xchg
dec
push
add
ja
mov
fldt
and
and
cmp
push
pop
fst
dec
stos
mov
outsl
cmpsl
mov
test
cmc
cli
dec
dec
mov
in
push
les
data16
cmpsb
fs
jbe
inc
test
cmp
popa
loope
sarb
sbbb
pop
dec
sbb
into
cmp
sub
pop
icebp
and
outsl
sub
add
addr16
inc
hlt
jne
fisubs
dec
add
ja
in
lds
jbe
insb
sub
push
iret
cld
inc
adc
loop
dec
mov
and
pop
sub
jo
in
repnz
push
mov
icebp
repz
call
icebp
ds
and
cmp
mov
loop
test
mov
dec
xchg
clc
stc
jns
inc
jae
add
or
add
push
mov
xor
mov
addl
pop
cmpsl
jle
scas
jo
pushf
sbb
sbb
adc
pop
sbb
out
std
mov
aam
stc
test
cltd
add
adc
and
mov
cmp
xorb
mulb
dec
insl
add
movsl
icebp
push
add
call
ljmp
xchg
lods
adc
mov
dec
mov
mov
rclb
lods
push
loopne
pop
dec
xchg
mov
negb
mov
inc
in
jns
mov
shll
pop
popa
pop
stos
and
nop
mov
inc
dec
pop
pusha
pop
mov
cld
sbb
cmpsb
sub
sub
pop
mov
sub
mov
je
cs
rcr
out
mov
addr16
xchg
mov
clc
or
js
imul
arpl
xor
fists
outsl
jmp
clc
or
sub
push
sub
pop
insb
les
adc
push
adc
mov
push
imul
add
ds
rcrb
mov
lret
les
ja
in
push
mov
and
add
ss
fisubrs
and
shrl
shrl
inc
nop
lea
idivl
scas
daa
jbe
add
cmp
mov
call
xlat
sub
inc
lods
in
lret
pop
ss
stos
xchg
mov
sub
mov
fwait
stc
sti
add
mov
dec
add
fdiv
insb
fdivp
dec
ljmp
xchg
and
push
cld
push
inc
das
jg
insb
mov
fsub
or
ja
frstor
scas
add
sub
sub
jbe
cmc
out
sbb
pop
xlat
push
ds
mov
inc
pushf
xor
rcrb
dec
add
rcll
jge
jecxz
sub
fstl
dec
ficompl
ss
rcll
ficoml
dec
cmp
std
pop
shrl
scas
subl
xchg
popa
push
lods
jl
jns
lea
cld
sbb
stc
add
push
lds
data16
js
xorl
imul
repnz
inc
repnz
nop
out
mov
add
push
adc
leave
xchg
outsl
xchg
pop
fucomip
cmp
pop
push
rcl
aam
lds
leave
mov
mov
ret
sub
or
int3
dec
cmp
adc
pusha
aaa
loopne
pop
test
and
adc
out
test
jecxz
push
or
pop
jmp
add
jmp
cmpsb
and
addr16
scas
xor
das
cmp
jl
mov
sbbb
repnz
push
fistpll
or
push
scas
cmpl
push
roll
pop
adc
pusha
scas
xchg
aas
mov
xlat
push
fwait
mov
add
rorb
popf
sahf
popa
jo
dec
xchg
lahf
popa
cmc
insb
outsl
lock
jno
mov
js
fldt
or
stos
cld
andb
sbb
pusha
cmc
test
xor
es
push
mov
lret
lock
and
sbbb
fnsave
pop
std
into
cmp
icebp
mov
ret
cmpsl
cmp
insl
leave
or
xor
xchg
ljmp
pop
mov
sti
sbb
lcall
push
xchg
xchg
test
or
sahf
fwait
inc
sub
inc
stos
dec
mov
cmp
popf
push
or
jecxz
sarb
les
stc
js
out
pop
mov
out
lret
frstor
pop
fdivrl
aaa
pop
xor
xchg
jb
fs
add
ja
sti
jbe
sbb
mov
sbb
nop
xchg
mov
lcall
cmpsb
cmpsb
les
mov
pop
loope
jle
sbb
mov
or
lock
shrl
orb
mov
jno
mov
test
in
mov
mov
test
jbe
and
inc
jne
stos
or
mov
cmp
test
imul
data16
in
mov
jg
sub
or
leave
and
popf
xchg
mov
sub
pop
lahf
pop
lea
leave
rcll
stos
pop
das
popa
and
push
mov
test
icebp
test
mov
sahf
lods
jmp
test
and
dec
mov
mov
aam
js
mov
addl
sub
lock
je
push
call
push
loop
inc
aas
out
in
ret
dec
negb
scas
jno
aad
mov
pop
sbb
or
jecxz
push
js
addb
mov
add
je
jmp
dec
pandn
mov
out
jb
cltd
mov
add
or
adc
mov
popf
cmc
cmp
push
xchg
je
pusha
cmp
pop
cwtl
cwtl
out
and
or
dec
pop
movsl
je
inc
inc
aas
inc
scas
inc
jns
fdivl
sbb
int3
mov
mov
test
and
subb
movsb
or
in
imul
shrb
loop
cmp
lock
insb
mov
sbb
fildll
cmp
inc
mov
in
and
adc
daa
inc
in
mov
bound
mov
mov
push
and
adc
out
out
pop
inc
repnz
cld
dec
std
lcall
shrl
gs
mov
loop
mov
pop
hlt
lods
movsl
mov
fimull
xchg
imul
jmp
push
leave
mov
outsl
stos
sbb
jo
mov
or
es
xor
into
bound
inc
pusha
fnsave
xor
push
pop
lods
cltd
lock
xor
jno
insb
or
mov
lahf
pop
jnp
and
arpl
cmpsl
pop
sub
mov
push
fwait
call
cld
mov
iret
lea
aas
jae
mov
dec
aaa
bound
popf
cmpsl
pop
mov
cmp
ljmp
lcall
aad
ss
loopne
sub
sbb
push
sub
dec
adcb
fstl
call
pop
inc
or
lods
rorl
inc
bound
mov
lods
sbb
xchg
jecxz
imul
add
imul
fsubl
dec
xchg
call
pop
or
jge
cmp
lcall
inc
adc
push
insb
xchg
in
repz
hlt
add
into
push
insl
or
push
mov
push
in
lock
sahf
ljmp
loopne
mov
xor
sti
push
mov
mov
push
xchg
fcomps
xor
mov
xor
rol
test
adc
ss
push
in
sbb
xchg
out
ret
shl
xor
push
movsl
cmp
push
lahf
ss
movsl
jmp
push
sar
add
mov
push
sub
jne
pop
dec
push
popa
stos
xorl
push
and
adc
fdivl
sbb
jg
hlt
stc
popf
cmp
fisubs
sbb
insb
orl
cmp
inc
adc
sbb
sbb
xchg
jo
push
xchg
sbb
mov
inc
sbb
mov
movsb
xor
mov
adc
dec
scas
mov
outsl
stos
inc
popa
push
pop
test
loopne
jo
mov
leave
pop
fdivrs
jb
push
push
dec
cmp
jge
push
repz
gs
push
repnz
js
mov
pop
mov
or
mov
clc
xor
rolb
inc
mov
mov
repnz
hlt
std
les
mov
cmp
jo
shlb
push
pop
imulb
or
adcb
mov
shll
adc
das
xor
sti
and
or
xor
test
lcall
jo
adc
in
sbb
jmp
mov
fildl
mov
into
mov
mov
jae
xchg
je
cwtl
stos
mov
adc
push
shrl
ret
insb
std
jl
movsl
lea
xor
inc
sbb
mov
sahf
lret
xchg
pop
das
sub
mov
popa
movsb
inc
push
add
fs
inc
arpl
pop
lcall
push
movsl
jb
xchg
repz
sub
sarl
inc
mov
movsb
push
insl
jmp
and
out
es
xor
addb
lods
jmp
addr16
cwtl
add
mov
jg
inc
in
ss
repz
leave
xchg
xchg
sub
vpcmpgtb
cmp
cmp
push
je
mov
mov
scas
inc
mov
cltd
dec
push
mov
pop
leave
fnstenv
lods
xchg
rcll
inc
les
jl
xchg
mov
lock
mov
fmulp
mov
mov
pop
cli
bound
mov
in
push
insl
sub
pop
mov
das
aas
jbe
popa
lcall
int3
ret
xchg
lods
add
or
es
loope
cmp
notl
repnz
jbe
push
mov
adc
mov
lret
add
cld
jne
and
add
push
and
cltd
dec
mov
clc
lret
jae
bound
mov
dec
shll
or
or
adc
xlat
pushf
cli
xchg
daa
pop
inc
mov
hlt
scas
inc
daa
ds
xchg
add
jmp
pop
xchg
sti
add
mov
sub
rcrb
sbb
movsb
addr16
pop
sahf
aaa
or
mov
loope
xchg
mov
inc
or
jb
daa
in
sub
or
jp
jl
push
mov
mov
jnp
lret
xor
pop
mov
fildll
push
xor
add
hlt
clc
jb
push
and
inc
in
dec
cld
and
fstpt
or
dec
loope
push
pop
cmp
imul
shrb
jae
xlat
fwait
jle
jbe
mov
mov
or
cmp
xor
fmull
or
jle
repnz
mov
nop
std
xchg
jne
dec
push
push
sub
adc
pop
xchg
sub
inc
mov
shlb
jns
cmpsb
clc
adcl
dec
mov
mov
and
adc
and
fs
aas
jbe
out
insb
shl
mov
stc
je
scas
cmpps
ds
jns
shlb
aas
rclb
test
cvtps2pi
jae
add
pop
ss
xchg
dec
pop
aaa
cli
push
sub
cmp
aad
sbbb
jo
mov
pop
dec
fidivs
fisubrs
dec
inc
mov
or
arpl
jo
mov
test
lret
insl
mov
dec
insl
pop
push
adc
aaa
mov
adc
div
mov
sahf
and
push
adc
push
push
add
decl
push
add
dec
cmc
inc
dec
cmp
dec
test
dec
dec
fdivr
push
push
pop
adc
mov
pop
repz
test
ret
rcrb
mov
sarb
mov
mov
mov
icebp
sbb
cwtl
pop
aam
ss
inc
push
fadd
pop
cmc
fucompp
test
adc
incl
add
je
cmpsl
cmpsl
les
sbb
sbb
mov
inc
jp
add
jmp
shll
mov
mov
fsubs
in
nop
mov
jg
aam
jmp
imul
inc
stos
mov
movsb
pop
mov
test
call
and
aaa
int
lcall
sub
pushl
mov
aaa
inc
in
fsubrp
sub
and
inc
incb
outsb
add
ja
out
xchg
push
scas
push
sti
mov
jge
add
stos
sbb
xchg
pusha
dec
sub
test
fidivrs
pop
adc
mov
jno
lret
mov
inc
push
jmp
fisubs
push
xor
das
add
popa
push
jbe
outsb
mov
cmpsl
jo
shr
mov
xor
in
cld
dec
out
mov
jmp
fwait
cwtl
pop
xchg
es
data16
mov
xchg
lds
pop
out
pop
pop
in
pop
pop
aas
pop
cmp
xor
ja
ja
stos
ds
loopne
rcrb
mov
sub
push
inc
orb
jb
sub
xchg
jle
inc
arpl
xor
xchg
stc
out
das
mov
push
std
call
ds
in
shlb
lret
loop
negl
ret
or
out
dec
pop
sbb
andb
enter
adc
jg
mov
push
add
push
inc
cltd
testb
xchg
leave
dec
fdivrl
fcmovnb
lods
mov
cmovs
mov
pushf
xor
mov
insb
negb
sbb
xchg
xchg
int3
insb
adc
dec
mov
mov
in
inc
test
pop
pop
fnsave
push
inc
popa
rolb
int3
dec
sti
mov
sub
incb
pop
and
and
mov
movsl
lods
pop
loope
test
xor
cmc
dec
jecxz
mov
outsb
popf
addr16
push
sbb
dec
jno
mov
sub
push
test
repz
iret
mov
inc
cmpsl
xchg
loopne
mulb
aaa
jbe
ret
cld
xchg
hlt
cmpsl
gs
fcoms
fxch
rcll
xchg
push
shl
repnz
aam
jns
xor
push
mov
popf
test
sub
fsubrs
lds
fidivrl
xor
push
xor
inc
pop
fsubrs
das
in
dec
xor
sbb
lock
leave
xchg
iret
flds
mov
sti
inc
push
dec
shlb
xor
add
xor
hlt
cli
ret
push
shll
ficomps
or
in
adc
aad
ja
xchg
sub
push
negb
movsb
das
xchg
add
jg
jg
add
stos
xchg
imul
les
out
cmp
fadds
pusha
fndisi(8087
ja
out
dec
cmp
rcl
xchg
addr16
lea
push
test
jnp
std
aam
push
jp
iret
cwtl
xchg
sub
mov
cmp
lock
out
push
aas
inc
sub
cmp
inc
sarl
stc
xchg
pop
lcall
sti
xchg
out
or
push
mov
sti
inc
fiaddl
cmp
xor
sbb
jp
inc
sti
leave
cmp
outsl
pusha
inc
fistl
sbb
jg
ss
inc
pop
icebp
jns
and
and
int3
shrl
mov
sub
fsubs
rol
int3
sub
pop
sbb
push
orb
cli
shrl
mov
loope
aad
int3
inc
dec
push
adc
mov
jge
xor
out
or
add
add
jns
mov
cwtl
in
pop
insb
clc
push
xchg
sub
imul
jmp
dec
sbb
push
mov
inc
mov
test
xorl
and
xor
loop
cs
frstor
into
test
cmpsl
movsb
js
leave
and
aad
es
sbb
das
sbb
ret
ret
js
and
cld
adc
sub
inc
dec
xlat
data16
dec
and
shrl
outsb
inc
sub
fcmovne
insb
daa
pop
jnp
clc
lods
jp
xchg
movsb
adc
pop
ja
sub
neg
ss
stc
adc
lds
in
and
icebp
ret
loope
repz
repz
fidivrl
call
sbbl
or
add
pop
mov
idivl
mov
xchg
out
push
aas
mov
push
sub
pushf
aaa
mov
test
mov
andb
loopne
mov
inc
push
sub
insb
xlat
adc
insl
cmpl
add
dec
ss
je
mov
dec
popf
pushf
lods
ret
jecxz
out
stc
hlt
shrb
adc
or
cmp
sti
push
shrb
xlat
outsl
xlat
and
jge
cmp
jno
out
mov
outsl
in
imul
rcrb
andb
gs
cwtl
pop
filds
add
movsl
cmp
and
pop
xor
pop
lock
jb
ja
leave
mov
xchg
leave
mov
push
lods
xchg
xlat
push
or
rorb
cmpsb
add
push
and
pop
sbb
stos
inc
sub
push
dec
in
jle
cli
mov
sub
xor
stos
fildll
mov
inc
sbb
inc
popf
push
out
shr
arpl
dec
shrl
or
lcall
push
in
push
gs
and
in
addl
xorl
jmp
push
fldcw
leave
enter
shll
push
aad
arpl
xchg
push
sub
loopne
nop
daa
and
rclb
sub
outsl
inc
out
and
add
js
inc
repnz
dec
pop
cltd
add
rcl
subb
xchg
and
lock
iret
das
loop
add
fmull
pop
divl
xor
push
cmp
push
mov
jge
loope
jg
out
push
lods
adcl
loope
test
adc
fcoml
pushf
sbb
andb
fwait
add
inc
pop
add
test
fisubrs
sub
jnp
push
dec
push
add
jecxz
push
adc
jmp
adc
rcrb
cmp
fildll
mov
mov
popf
push
lods
ljmp
dec
mov
nop
dec
ffreep
testb
add
sub
push
jl
inc
mov
mov
mov
outsl
mov
shr
fstps
mov
sub
imul
cmp
xchg
loopne
mov
cmp
xor
sbb
dec
fs
sbb
repnz
and
push
jb
dec
sub
movsb
mov
ret
les
stc
dec
dec
pop
mov
mov
dec
outsb
ja
mov
imul
jae
test
sbb
in
arpl
ja
mov
ret
jae
ret
xchg
mov
sbb
pop
movsl
cmp
stos
ret
xlat
ljmp
in
cmp
test
popa
jl
int
push
sub
popa
xchg
or
pop
imul
cmp
pusha
and
push
jne
inc
call
or
pop
sahf
dec
mov
dec
in
popa
insb
sarl
add
pop
loope
lea
mov
mov
jbe
out
in
clc
das
loope
dec
sbb
les
insl
add
daa
xchg
cmpsl
cld
or
sub
add
push
out
rclb
stc
sub
daa
sbbl
stos
adc
sti
xorb
inc
or
ss
push
cmp
adc
xor
repz
push
mov
aaa
int3
xchg
jp
loope
aad
das
adc
and
cli
cmp
push
clc
outsb
sbb
push
cwtl
mov
xchg
movntps
pop
cmp
adc
sbb
ret
sub
jle
add
fnstsw
lock
push
ret
dec
lahf
jns
ds
stos
jae
test
out
popa
clc
dec
aad
or
insb
add
push
cmp
cmp
sarl
add
rcrb
sti
fsubrp
inc
and
cmc
or
inc
fists
fucomip
inc
cmpsl
out
out
xor
in
aam
cmp
ja
mov
add
mov
scas
je
stos
push
jle
push
daa
les
dec
xorb
pop
mov
adc
outsl
in
xchg
stos
cmp
outsl
sbb
sbb
lret
inc
int
jmp
jp
icebp
lret
fsub
fldl
pop
inc
fsubl
mov
ficoms
adcl
pop
cli
and
into
lret
jo
and
sub
pop
imul
dec
cmp
shr
in
inc
mov
and
or
and
mov
outsl
aas
jl
jl
dec
dec
pop
adc
repz
cmp
dec
lods
xchg
xchg
scas
sbb
add
cwtl
shld
sub
cmp
xchg
cmc
xlat
sbb
add
test
sub
stos
xchg
adc
out
test
add
or
jmp
mov
fisttps
stc
ds
mov
mov
adc
mov
lds
xchg
aas
call
dec
adc
mov
adc
inc
inc
mov
test
or
movsb
dec
out
popfw
cmpsb
bound
dec
cmp
jae
negb
movsl
mov
push
mov
rcl
jb
inc
mull
and
push
lret
cld
out
and
int3
pop
clc
push
add
sub
mov
arpl
xor
mov
int3
mov
test
sbb
outsb
push
xchg
add
scas
adc
in
dec
negl
lret
js
xor
popa
xor
cmp
sub
xor
xlat
jle
mov
push
push
cld
roll
jb
loop
pop
add
sbb
and
filds
je
mov
loop
xor
loope
loope
mov
xchg
mov
cmp
cmc
cmp
dec
mov
es
out
add
sub
sahf
pusha
cmp
jecxz
rclb
xlat
scas
adc
fwait
ss
js
fsubrl
out
push
pop
leave
xchg
pushf
xchg
stos
nop
icebp
fdivs
nop
mov
test
pushf
pop
imul
mov
loopne
push
ret
push
mov
mov
into
fstps
mov
aam
push
add
xchg
outsb
jle
call
cmp
mov
das
subb
rclb
outsb
sbb
pop
arpl
sub
insb
adc
fbld
fwait
cmp
shrl
jno
xchg
shlb
push
notb
sub
lahf
pop
sbb
pop
sub
fwait
sbb
arpl
dec
ds
in
test
es
test
add
adc
insb
sbb
dec
es
out
mov
cli
mov
xchg
push
loopne
mov
sub
repnz
ljmp
ret
add
clc
ljmp
and
aad
incl
movsl
mov
mov
jge
pop
ljmp
mov
int3
cmp
push
call
int3
arpl
xlat
pop
insl
dec
sub
jg
sub
and
xor
movsl
sti
add
add
push
lods
jb
mov
sbb
lds
out
data16
jg
movsl
pop
sbb
dec
cltd
scas
push
out
push
adc
cmp
popf
and
sbbb
fcompl
das
jl
push
cmp
lods
cmp
xlat
cmp
pop
jp
in
imul
xchg
shl
mov
cmc
xchg
fbld
mov
xchg
xchg
mov
fiadds
mov
push
jns
repz
jo
sbb
xchg
mov
pop
std
lods
imul
lahf
stc
lds
lds
pop
pop
add
lock
lret
sti
pop
test
add
stos
fisubrs
lods
xchg
in
aas
pop
stos
mov
gs
jae
cmpsl
in
push
or
ss
mov
sbb
cli
sub
gs
out
xor
or
xchg
popf
cmpsl
leave
lret
mov
jle
popa
ljmp
sti
pop
rcrl
sbb
push
mov
sub
shr
fldl
mov
cmp
idivb
lahf
rclb
or
gs
test
cltd
in
int
push
cmpsb
hlt
mov
cli
pop
leave
in
xchg
pop
test
or
scas
pop
jcxz
scas
inc
xchg
inc
sub
test
sub
mov
out
jne
call
fwait
aaa
xchg
jle
cmpl
sbb
test
jl
push
aas
test
mov
sbb
sub
adc
fsubs
jnp
movsl
nop
insl
ss
jp
xchg
paddusw
jno
in
daa
ja
push
or
cmpsb
iret
mov
mov
scas
pushf
adc
or
iret
mov
ds
sub
sbb
adc
sbb
push
fdivrs
jmp
mov
mov
fdivrs
negl
cs
mov
and
outsb
add
mov
push
lods
pop
sub
cld
ficomps
xchg
mov
lods
ss
shlb
dec
lret
and
stc
nop
inc
cmpsl
insb
inc
fcoml
mov
sbb
jecxz
push
lea
cli
jp
lret
cmp
cwtl
adcl
xchg
shl
or
xor
jne
jl
push
jns
sub
sahf
lods
xchg
inc
mov
ljmp
orl
push
or
inc
jne
jb
lock
loopne
mov
xchg
mov
xchg
adc
mov
fsubrs
mov
inc
imul
pop
pop
lds
add
inc
shll
sbb
out
jns
xchg
das
cmc
xchg
xchg
add
ds
jmp
jo
push
cmp
pop
icebp
mov
dec
int3
adc
jne
mov
dec
or
cmpsl
fnsave
push
clc
inc
pop
pop
outsb
std
fs
push
pushf
inc
push
xor
dec
test
addl
mov
dec
or
mov
mov
mov
repnz
add
sub
sti
jl
repnz
cmp
dec
int3
pop
sbb
pop
cli
cmpsl
imul
mov
dec
pop
fs
add
xor
push
pop
cli
dec
in
mov
pslld
mov
repnz
jp
inc
je
inc
sbb
scas
mov
fucomp
dec
xor
insl
ds
ja
add
cmpsl
xor
jns
lahf
mov
out
jns
out
adc
add
or
aam
cmp
xor
aam
fisubl
push
cmp
mov
cmp
pop
jmp
adc
sbb
cwtl
gs
or
mov
xchg
fs
pop
push
inc
mov
icebp
fdivs
js
sub
cwtl
inc
xchg
xchg
sub
jmp
xor
jl
rcrb
adc
xchg
dec
in
add
xchg
fninit
cs
bound
out
and
lock
mov
sub
addr16
into
lret
jne
adc
jge
xchg
call
mov
fdivrl
add
imul
call
xchg
mov
adc
loopne
add
and
and
mov
ja
xchg
sbb
loope
test
xor
ret
cmpsb
and
xchg
adc
dec
lods
movsl
lods
jmp
lods
xchg
das
fimull
les
dec
mov
enter
sbb
ss
or
mov
cs
ret
sub
shr
sahf
sbb
push
in
pop
adc
aaa
jl
inc
stc
and
mov
and
insb
mov
cmp
pop
mov
jp
cs
test
sub
jbe
loopne
in
aaa
das
ss
comiss
pop
insl
stc
sub
or
shl
pop
dec
sbb
repz
into
jns
stc
cmpsl
mov
sbb
mov
addr16
mov
sub
cmp
inc
sub
stc
pop
cwtl
lahf
mov
imul
rcl
loope
incl
fsubp
aaa
mov
push
sahf
mov
fiaddl
xchg
xchg
ja
ss
push
mov
xor
lds
xor
mov
pop
and
ljmp
cltd
xor
cmc
mov
test
add
jp
xor
adc
jb
dec
leave
and
cmpsl
shrl
shrb
dec
jecxz
inc
or
lret
lahf
push
dec
in
ljmp
scas
nop
inc
imull
adc
mov
lods
jecxz
fcompl
in
stos
sub
filds
cmp
js,pn
fsubs
inc
mov
out
shrl
in
mov
loope
cmp
std
cmp
xchg
mov
loop
cmp
mov
mov
mov
pop
lods
add
scas
cmp
mov
push
icebp
mov
mov
pop
into
fpatan
insl
clc
cwtl
mov
cmp
sbb
mov
dec
lea
mov
nop
pushf
push
push
push
jb
cmpl
mov
ds
loop
cwtl
xchg
inc
fsubs
cltd
jp
int3
test
dec
test
inc
sub
dec
in
pop
mov
fisubrl
lea
push
xchg
lea
mov
and
fwait
push
sbb
mov
xor
loop
push
pushf
loop
popa
faddl
sub
pop
cmpsb
cmp
stos
sbb
xchg
iret
mov
mov
nop
xor
inc
mov
sub
and
cmp
pop
xor
adc
push
mov
mov
sahf
les
pop
loope
mov
cmp
mov
jmp
jg
aad
dec
imul
xchg
add
sbb
sub
or
sub
adc
jle
xor
je
jmp
aaa
andb
lcall
frstor
xor
xchg
cmpsl
mov
pop
loope
dec
mov
sub
movsb
add
cmp
cmc
and
stos
std
sub
pop
and
xor
movsb
cli
popf
sbb
cld
push
in
arpl
sbb
lret
xlat
cmp
stos
add
inc
ds
gs
arpl
pop
frstor
jo
pusha
adc
jb
mov
mov
ja
jle
icebp
sub
and
jbe
arpl
jp
jno
cltd
mov
push
mov
shrb
stos
and
add
inc
jp
mov
stc
je
mov
movsb
call
aad
stos
xchg
add
or
je
pop
push
lret
add
or
mov
imul
xchg
xchg
dec
lret
cmp
and
and
fbstp
ret
jnp
pop
pop
nop
call
cs
repz
and
xchg
xor
sub
repz
mov
rcr
int
outsl
stc
je
mov
jo
cmc
out
fisttpll
aas
xchg
mov
pop
xchg
xlat
rol
pop
add
and
nop
std
adc
cwtl
out
pop
cmpsb
dec
xor
mov
add
or
out
xchg
mov
lods
popf
aas
lret
inc
add
pop
decl
sbb
shll
daa
cmpsl
repz
mov
imul
lahf
xor
and
leave
mov
adc
cmpsb
jns
aam
pop
mov
in
sub
addr16
inc
loopne
jl
movsb
jbe
repnz
cmp
jns
lea
pop
incl
or
lahf
jl
or
ds
and
and
jns
sub
and
lds
orl
sbb
lret
mov
fs
xchg
ret
mov
push
jo
jns
mov
cltd
mov
in
xchg
in
sub
dec
jbe
jmp
push
and
clc
mov
jg
adc
lea
jge
out
jle
xchg
sahf
in
pop
fcmovu
mov
push
ret
rcrb
ret
xor
insb
inc
mov
lock
mov
imul
pop
mov
lea
sbb
imull
data16
ljmp
mov
in
mov
adc
pop
inc
jge
sbb
imul
dec
std
or
mov
int
xchg
arpl
push
lcall
mov
pop
test
movntps
rol
pop
jbe
mov
pop
fidivrl
or
cmp
repnz
push
pop
stc
lea
xchg
fwait
or
xorb
dec
or
aas
test
mov
xor
nopl
lea
xchg
ljmp
test
fldt
data16
cmc
dec
pop
add
insl
xor
jno
fdivl
dec
aas
sbb
sub
push
jnp
jae
mov
mov
mov
lret
mov
jle
jne
sarl
aaa
imul
sub
xor
sub
jns
pop
cltd
dec
std
out
in
sbb
push
lock
mov
sub
cmp
mov
insb
sub
add
pop
xchg
jo
sub
push
out
stc
cmp
in
orl
fs
loope
push
bnd
arpl
pop
mov
pop
push
andl
gs
dec
out
inc
addb
mov
mov
jnp
lret
nop
mov
lret
imul
scas
push
hlt
jno
xor
xor
mov
pop
mov
test
cmp
fdivrs
dec
out
cmpsb
pop
mov
pop
jb
or
jns
jae
xchg
add
inc
inc
pop
jbe
mov
rorl
pop
xchg
pop
cmpsb
push
ret
loop
sbb
mov
ss
mov
adc
call
in
test
sbb
aad
out
xchg
dec
dec
pop
xlat
jmp
or
mov
push
add
shrb
jno
xchg
dec
mov
rcl
shlb
loope
pop
fwait
adc
jecxz
fucomp
daa
add
loopne
outsb
sahf
data16
sub
out
xchg
fdivl
nop
call
or
lcall
and
sbb
xor
mov
xor
xchg
fistps
xchg
xor
lcall
pop
ss
arpl
jp
dec
push
loope
push
push
pop
xchg
pop
test
int3
mov
inc
lret
sub
out
xor
adc
and
cmp
add
cmp
cmp
lds
bound
xchg
aaa
inc
adc
mov
outsl
jo
arpl
shlb
hlt
shlb
test
jns
push
xchg
and
test
xchg
sub
jae
stos
push
pop
sub
cwtl
ret
xor
mov
test
push
xor
iret
inc
mov
xchg
nop
jg
pop
cs
mov
dec
or
lds
inc
push
bnd
mov
in
mov
stos
push
rcl
jno
sub
gs
ljmp
std
inc
les
add
clc
xor
mov
int
rcrb
cmpsl
push
dec
cltd
test
enter
jbe
inc
bound
adc
idivb
jae
pop
bound
jmp
or
mov
xor
or
shrl
in
pop
cmpsb
adc
jns
in
jg
mov
add
ret
sub
imul
sbb
cmc
mov
loopne
lcall
stos
imul
adc
mov
sahf
pop
cld
jmp
adc
cwtl
scas
cwtl
push
cli
in
jecxz
xor
or
adc
ja
jae
shlb
or
scas
pop
jmp
jg
push
addr16
pop
cmp
xchg
cmp
enter
or
add
push
daa
enter
mov
scas
inc
sbb
fcompl
hlt
mov
or
aaa
xchg
dec
add
mov
cmp
movsb
dec
add
cld
xchg
out
iret
loop
dec
popf
xor
mov
xchg
aaa
xchg
outsl
out
add
push
sar
dec
jno
dec
aad
mov
iret
jg
data16
gs
cmpsb
aad
sub
outsb
jg
aam
jg
jmp
js
subb
mov
mov
push
out
mov
nop
fmul
hlt
lcall
jo
xchg
in
stos
inc
push
pusha
inc
cwtl
bound
sbb
push
cmp
mov
push
shrb
lock
pop
mov
ds
xchg
pop
fmuls
lret
mov
loop
sbb
mov
xchg
push
mov
xchg
push
or
sbb
je
out
pop
in
cmp
xor
test
jl
loope
mov
jle
sub
cwtl
dec
repz
sub
loope
xchg
nop
cmp
aaa
lcall
ret
sub
addr16
fldt
cmp
daa
dec
push
out
xor
loopne
addr16
lods
cli
mov
xor
sbb
repnz
jns
and
addb
fsubrs
mulb
imul
sbbb
push
mov
push
inc
jle
inc
popa
movsb
xchg
outsb
in
mov
testb
aaa
adc
xchg
sub
cmpsb
lods
push
jge
pop
mov
dec
shr
inc
hlt
bound
outsl
orl
push
idivl
dec
loop
xchg
pop
mov
fisubrs
into
imul
test
push
lcall
push
lret
cmp
sbb
xchg
orl
pop
add
jecxz
dec
in
dec
cmp
test
mov
and
fidivs
adc
dec
jb
mov
sub
movsl
sub
mov
push
jno
or
subl
adc
ljmp
inc
out
dec
dec
stos
movsl
loope
cmp
repnz
test
ret
outsl
ss
das
out
mov
sub
jae
xlat
cmp
dec
test
jnp
lods
jmp
jb
jmp
mov
iret
addl
mov
jmp
nop
lods
icebp
fmull
or
adc
xchg
xchg
addr16
pop
popa
fiadds
ret
in
mov
sti
out
les
pop
inc
sub
test
fs
int3
ffree
pop
lcall
xchg
jge
sbb
negl
mov
jnp
sbb
xchg
mov
cs
push
pop
jb
push
scas
fmul
shll
andb
mov
adc
jo
out
jle
sbb
inc
push
sub
pop
add
call
in
inc
stc
je
mov
dec
pusha
lods
out
inc
jne
scas
xchg
int
push
fisubs
test
or
lods
ljmp
and
sub
xor
inc
dec
inc
fdivrs
push
in
and
dec
push
fadds
push
adc
outsb
outsb
dec
lret
xchg
mov
inc
in
scas
jg
dec
add
jb
pop
mov
inc
mov
jl
in
jmp
push
push
pop
push
lods
dec
inc
fldl
xchg
sub
cmpsl
mov
movsb
xchg
ljmp
pop
adc
cmpsb
inc
test
sub
inc
insl
gs
addl
xchg
add
and
sbbl
shl
sbb
hlt
dec
pushf
mov
arpl
test
cltd
and
adc
mov
popl
cs
mov
ficompl
fiadds
inc
adc
testl
insl
add
push
mov
add
loope
mov
mov
rolb
fcomi
jnp
pushl
insl
mov
jge
daa
stos
into
dec
mov
movsl
sub
jns
lea
xor
in
rcrb
movsl
shll
into
push
push
mov
push
es
sbb
add
repnz
mov
pop
test
lahf
pop
imul
stos
cltd
lcall
or
or
loop
add
lea
mov
mov
pop
jnp
mov
adcb
xchg
jnp
cmp
xlat
cltd
adcl
xchg
les
mov
and
inc
cwtl
pop
lret
xchg
enter
xchg
popl
outsl
orl
xor
addr16
nop
clc
popf
cmp
pop
loope
dec
cmp
fwait
ljmp
mov
pop
inc
pop
icebp
js
sbb
add
jno
aad
and
and
add
inc
test
out
dec
adc
cmp
pusha
sbb
adc
in
adc
std
lret
ja
sti
pusha
push
mov
movl
sarl
call
sbbb
add
fsubs
imul
or
into
pop
in
xor
and
popf
aad
ret
jle
sub
jb
in
pusha
add
ret
mov
mov
jg
xchg
mov
sub
insl
mov
int3
aas
mov
push
lds
mov
enter
add
std
in
out
dec
cld
leave
mov
pop
pop
fidivs
xchg
fs
push
je
inc
out
inc
lds
sub
add
lret
and
xchg
mov
dec
cmp
adc
into
fbstp
mov
sub
addr16
or
sti
popf
stc
xor
in
add
test
sarl
rcrl
fldl2t
jg
dec
pop
inc
jl
xor
faddl
and
icebp
inc
mov
lods
leave
cmpsb
mov
fisubs
pop
jle
ret
scas
push
or
jg
ljmp
mov
fstp
nop
lret
gs
inc
mov
mov
stc
inc
pop
hlt
cmp
mov
scas
sbb
sub
outsb
sub
pop
push
cs
adc
or
push
jg
fcmovne
cmp
inc
jg
push
out
imul
popf
adc
cwtl
lret
outsb
shll
inc
mov
sub
lock
add
repnz
add
xchg
add
xor
scas
inc
jmp
adc
dec
lods
ret
sarb
daa
mov
aad
gs
pop
pushl
das
add
fnclex
sbb
iret
gs
vfrczps
icebp
push
in
rcl
mov
push
loop
cmc
shl
mov
lahf
shrb
jns
sbb
jae
pop
shlb
fs
fwait
dec
pop
adc
out
shlb
add
jge
aas
pushf
jb
xchg
les
xchg
add
daa
mov
add
stc
clc
or
mov
int
stos
sti
and
fucomip
jae
add
push
inc
pop
cmp
inc
xchg
sub
shll
fwait
inc
repnz
aaa
mov
mov
adc
aam
xor
push
cli
and
mov
sub
imulb
pop
push
sub
cmpsb
pop
inc
bound
js
sarb
mov
sub
sub
mov
inc
cli
enter
jo
dec
std
ja
scas
and
shrb
sbb
popa
adc
movsb
pop
sub
sahf
mov
jo
fisubl
sbb
add
sbb
xorl
mov
pop
icebp
and
mov
xchg
xchg
js
mov
add
push
cld
mov
fmull
push
mov
icebp
inc
mov
dec
xchg
jb
and
adcb
and
pushf
notb
fsubrs
insl
xchg
push
flds
mov
sub
out
inc
sahf
xor
mov
dec
out
ficomps
xchg
push
mov
xchg
arpl
mov
sbbb
stc
inc
mov
xorb
or
data16
or
lea
push
pop
outsb
adc
daa
jbe
mov
scas
jae
fsts
cmp
pop
nop
pop
es
push
or
or
testl
mov
loopne
dec
or
shrb
dec
mov
inc
scas
mov
or
push
xchg
xor
add
add
jbe
pushf
jae
lea
pop
std
xor
or
ret
mov
dec
loope
mov
les
or
xor
fistpl
cmpl
pop
sahf
movsl
adcl
jl
sub
in
cmp
mov
rorl
out
loop
and
js
mov
jl
das
cmpsl
mov
push
imul
inc
scas
jno
imul
mov
xlat
movsb
add
mov
pop
pop
int3
inc
icebp
mov
or
sbb
sarb
inc
mov
out
pop
push
fcmovnbe
imul
or
cmc
mov
cmp
in
sub
cmc
fisubs
pop
pop
xor
in
sub
fcomps
sub
sub
cmp
inc
shll
cmpsl
std
mov
aam
clc
outsl
xchg
dec
cmc
xchg
les
adc
push
mov
mov
and
push
ljmp
add
sbb
fadds
aaa
jbe
call
in
movsl
or
mov
test
jb
je
faddl
fisubl
xchg
subb
cwtl
cli
cmp
xchg
adc
ret
in
test
push
fistpl
lock
test
jl
and
dec
inc
dec
clc
xchg
aas
pop
enter
inc
negl
clc
inc
fidivrl
jbe
dec
test
inc
dec
jmp
or
pusha
pop
mov
addr16
shll
testb
rcrl
jmp
fsubrs
outsl
add
and
notb
sub
cs
xchg
das
mov
xlat
jno
cli
int3
stos
dec
or
loop
sbb
adc
iret
push
stos
xor
fs
pusha
push
adc
hlt
xor
mov
sti
xchg
push
sub
cwtl
xchg
imulb
mov
enter
fisubs
adc
add
and
push
repnz
dec
js
negb
mov
adc
out
xchg
ficoms
mov
fwait
leave
into
loopne
test
push
inc
mov
add
push
fadd
clc
sahf
push
lahf
sub
push
push
movsl
cmp
push
shlb
add
out
mov
sbb
in
pop
aad
nop
inc
inc
push
ljmp
sub
mov
pop
out
es
popa
sbb
dec
cmpl
push
and
imul
fdivs
xorl
aam
cmp
in
push
sahf
dec
push
push
dec
mov
ficoms
das
add
mov
xor
shl
or
ret
repz
xchg
adc
sbb
test
cwtl
fnstenv
mov
or
inc
stos
cmp
aad
jns
loop
cmp
dec
ds
aam
in
in
scas
push
out
mov
rorl
xchg
pop
out
aaa
sarl
xchg
fmuls
sub
imul
loope
xchg
adc
cwtl
cmp
ds
movsl
push
daa
inc
popa
cmp
in
fwait
ds
test
sub
sub
jg
push
sub
cs
cmp
jge
mov
test
mov
stc
push
clc
xor
arpl
sub
jg
push
pop
repnz
lahf
test
mov
adc
mov
test
push
insl
enter
add
sub
repnz
sbbl
sub
or
sbb
out
bound
icebp
mov
xchg
int
cltd
cltd
jmp
mov
ret
insl
sbb
scas
push
mov
ret
int
or
add
adc
into
and
pushf
inc
sub
sahf
sub
rclb
mov
jbe
push
movsl
les
pop
repz
pop
out
add
es
mov
pop
mov
mov
cltd
aas
lret
adc
sub
push
lea
cmp
pop
daa
lret
aaa
pop
mov
or
test
pusha
pop
mov
push
ss
pop
xchg
jb
mov
pop
xchg
call
cmp
pop
in
sub
jle
cmp
into
sbb
pop
dec
data16
cltd
inc
push
fimull
mov
fwait
mov
je
fstpt
andb
mov
jbe
sbb
aam
mov
sbb
rol
aas
imul
iret
sub
adc
cltd
and
xor
cwtl
test
push
xchg
jp
test
mov
push
jne
lcall
sbb
mov
cmp
jnp
inc
fbstp
fldenv
fdivl
xor
icebp
adc
inc
adc
test
add
jl
dec
push
cltd
iret
fidivs
jmp
orl
or
jns
sbb
cld
pop
data16
aam
cs
das
out
add
push
das
mov
sbb
adc
fcom
fdivrs
sub
out
mov
in
jne
stc
lret
inc
lahf
mov
mov
jle
pushl
push
hlt
rorb
push
mov
jmp
pop
mov
push
cld
adc
cs
ja
sub
daa
or
push
sarl
fbstp
push
mov
or
ret
sahf
and
mov
lret
repz
js
enter
stc
inc
inc
cmp
cs
das
push
sbb
outsl
shrb
shl
mov
or
movsb
pop
jae
or
dec
mov
fldenv
popa
cwtl
stc
xchg
lods
sbb
lods
or
jle
xchg
test
inc
ret
xor
adc
push
ja
or
stc
sub
sbb
das
fistpl
popa
jl
xchg
pop
xchg
xchg
cmp
imul
pop
sub
pop
mov
jl
xchg
dec
rcrl
repz
lock
aas
sbb
adc
popf
jg
inc
leave
jl
or
pop
dec
or
jecxz
outsb
jl
mov
cmp
gs
dec
xchg
in
gs
pop
mov
fistpl
js
add
cmp
jmp
add
or
mov
fsts
jl
imul
mov
xchg
insb
inc
or
jbe
test
push
add
fadd
stc
shlb
bound
sahf
sub
pop
shlb
xor
loop
adcl
sbbb
dec
cmp
mov
cmc
jo
cmp
push
xchg
pop
out
xor
movsb
jmp
add
mov
and
mov
xchg
aaa
cli
dec
loope
imul
pop
or
mov
fs
stos
arpl
cmp
imul
or
out
aas
rcrb
lods
cmp
mov
arpl
stos
xchg
mov
test
and
cltd
subl
test
sub
ja
idivb
push
push
xchg
fbstp
cmpsl
ds
adc
mov
dec
cmp
fldl
adcl
daa
adc
dec
ss
scas
jb
inc
and
movsl
mov
xlat
pop
and
mov
shlb
pop
fwait
clc
pop
xchg
add
mov
movsb
xchg
adc
xor
inc
push
jno
pop
mov
mov
inc
and
jl
int
or
push
pop
sahf
test
movsb
jecxz
xor
bound
pushf
pop
arpl
inc
mov
popa
mov
iret
enter
lock
stc
sub
jg
xchg
mov
in
pop
out
adc
xchg
ja
frstor
adc
mov
loopne
xor
loop
add
mov
sbb
popf
pop
rol
jge
fs
jo
jae
sarb
and
push
mov
pop
movsl
xchg
xchg
sub
add
inc
fwait
mov
movsb
fdivp
adc
jae
inc
adc
clc
inc
addr16
jmp
lds
testb
orl
out
adc
pusha
sub
mov
notb
icebp
mov
xchg
cmpsb
adc
mov
push
lods
push
or
popf
je
bound
in
add
mov
fmuls
jb
xor
in
push
xchg
ja
mov
jge
loop
cld
sub
mov
decb
xchg
pop
push
mulb
fmull
pusha
mov
icebp
dec
jns
pushf
sbbb
arpl
push
xor
add
push
out
xchg
and
push
stc
pop
push
mov
mov
cmpsl
fidivl
and
leave
pop
repz
cmp
decl
mov
out
mov
sbbb
orb
clc
stc
pushl
cmp
shrb
pop
aam
int
test
scas
outsl
aas
jno
xchg
sbb
test
cmp
cli
rcrb
xchg
fdiv
mov
cmpsb
in
mov
lods
add
pushf
jns
dec
add
into
jge
loop
lret
loopne
mov
dec
fdivrp
mov
data16
imul
pop
out
or
pop
inc
addr16
es
fisubs
pop
fnsave
add
ja
sub
repz
dec
imul
mov
and
fnsave
adc
jnp
adc
add
stc
shlb
mov
or
jmp
stos
sbb
inc
lock
call
je
dec
xchg
push
gs
rcll
out
jbe
add
push
dec
add
movq
loopne
xor
scas
xchg
testb
and
inc
inc
sbb
hlt
dec
rorb
repnz
lret
xor
hlt
xor
push
xchg
xchg
and
mov
push
pop
xor
jmp
lret
shr
iret
call
dec
mov
nop
dec
cmp
xchg
mov
movsb
inc
jnp
rol
xchg
int3
mov
mov
movl
sbb
and
mov
adcl
in
push
dec
sahf
mov
mov
insb
cmp
mov
mov
dec
add
fcoms
cmp
es
lea
inc
lods
pop
dec
pop
int3
arpl
push
fstps
mov
stc
nop
or
arpl
movsb
fs
popf
insb
mov
xor
sbb
orb
adc
dec
mov
mov
pop
test
loopne
andb
xor
xchg
or
loope
jg
mov
fxch
or
sbb
pushf
ss
fistpll
push
shlb
popa
mov
arpl
sbb
lods
jo
sarb
int
xchg
std
add
push
mov
testb
sbb
and
add
push
mov
int3
cli
pop
gs
stos
jmp
mov
mov
cmc
mov
shll
repz
arpl
jmp
sbb
dec
fnstsw
mov
daa
inc
popa
stos
and
xor
pop
cwtl
test
mov
aam
insb
cmpsl
mov
and
test
cmp
fcoms
mov
cmp
out
mov
cmpsb
clc
in
ja
xchg
loop
push
adc
push
test
sub
pop
sbb
xlat
es
shrb
push
inc
cmc
cmpsl
dec
and
sub
add
inc
je
cmp
cmp
push
ja
xchg
imul
jg
pop
xchg
push
outsl
sbb
cs
xchg
pop
rcrw
adc
mov
scas
jne
jg
iret
mov
sbb
ss
int
test
clc
nop
xor
pop
je
mov
jmp
or
movsl
mov
xchg
in
aaa
xlat
sub
test
and
push
mov
sub
out
cmp
insb
cmp
jmp
popa
leave
and
lret
lcall
lds
into
scas
sbb
out
pop
ja
inc
jp
add
and
sbbl
and
sbb
inc
or
mov
popa
mov
jb
cmp
pop
pushf
cltd
sbb
fists
mov
dec
mov
xchg
jo
lods
pop
fistps
pop
hlt
fsubrl
adcb
push
mov
sbb
mov
jb
clc
pop
ljmp
dec
cltd
inc
mov
daa
test
popf
and
inc
xchg
jge
push
sti
test
sbb
dec
and
sti
inc
pop
enter
cmp
scas
sahf
xor
stos
xchg
cmp
dec
outsb
add
push
adc
jb
stos
inc
test
jl
push
sbb
fildl
dec
loope
mov
jns
lods
push
cwtl
cmp
sub
mov
mov
cmp
ds
add
jnp
jecxz
es
imulb
shll
add
or
pop
dec
pop
hlt
call
gs
clc
aaa
xchg
out
inc
xchg
pushf
test
gs
cwtl
pop
mov
jmp
dec
lret
bound
loop
push
mov
fisttpll
pop
and
lods
push
cmpl
mov
inc
aam
push
idivl
pushf
bound
aad
addl
mov
outsl
repz
out
push
test
xor
jno
jo
and
cwtl
scas
lods
inc
ss
fstpt
and
jno
push
jge
push
adc
mov
fwait
xor
jno
divb
cli
cld
xchg
sub
gs
mov
dec
scas
rep
cltd
ss
sahf
test
rolb
cs
pop
cltd
xor
cmp
movsl
stc
mov
push
push
lahf
inc
in
dec
sub
popf
and
add
jo
mov
push
loope
dec
inc
add
js
inc
ficoml
pop
sahf
mov
inc
ss
xor
imul
add
push
iret
mov
std
xchg
repz
lds
add
dec
and
mov
pop
xor
stc
xchg
mov
and
repnz
inc
ljmp
mov
lret
fistpll
or
sbb
lret
push
aas
and
inc
das
ss
into
xchg
pop
mov
jle
mov
xchg
dec
sub
in
mov
and
mov
fbstp
lods
test
push
push
cli
adc
aad
lcall
and
ss
in
mov
out
sub
pop
mov
dec
lods
rcrb
inc
push
mov
sbb
fwait
dec
mov
xchg
sbb
jle
aam
cs
fs
mov
adcb
mov
jmp
enter
idivb
push
jge
inc
adc
push
xchg
xchg
dec
insl
sbb
inc
and
dec
fnstsw
das
jl
inc
add
pop
jle
add
out
xor
mov
xchg
loope
jo
mov
push
pop
pop
imul
in
xor
bound
or
arpl
cmpsl
xchg
jl
xchg
add
dec
pop
aaa
dec
add
hlt
movsb
cmp
pop
and
jae
ds
inc
js
xchg
mov
dec
iret
push
in
inc
loopne
je
jae
lds
push
outsb
push
aam
pop
lret
inc
inc
sahf
cld
mov
xor
aas
fsubs
pop
insl
loopne
jl
sbb
xchg
sbb
int
push
call
add
dec
stos
mov
rcrl
xchg
dec
dec
sub
lret
lods
aas
sbb
loope
into
addl
sbb
xor
or
cmp
int
lret
mov
addr16
xchg
pop
ja
cmp
mov
cmp
xchg
jmp
testb
jecxz
or
jb
dec
and
insl
mov
inc
aad
ja
xor
dec
popf
mov
std
mov
push
imul
mov
jno
and
stos
sub
sub
leave
jnp
imul
pop
adc
mov
test
outsb
dec
mov
pop
pop
movsb
aam
in
xorb
pushf
cmp
mov
dec
and
cmp
lock
mulb
aad
dec
rcl
inc
js
jns
in
sub
fildl
mov
push
scas
sbb
ret
cmp
leave
insb
xor
push
call
cld
outsl
and
enter
add
or
cmp
dec
xchg
pop
jnp
mov
mov
int3
flds
dec
and
jo
mov
pop
sub
in
jbe
fidivrl
sbb
shlb
mov
push
cltd
loopne
scas
aad
inc
dec
cmp
dec
push
cli
inc
mov
mov
cwtl
in
outsb
mov
shrb
ret
push
or
into
push
leave
fdivs
or
xor
dec
lea
jae
out
in
lock
cs
xlat
shr
ret
movsb
mov
cmpsl
sub
adc
rorl
adc
jg
push
outsb
cmpsl
mov
mov
mov
jge
mov
test
push
mov
xor
call
or
scas
aam
rcrb
dec
fiaddl
jbe
js
or
pop
add
out
jb
sbb
push
push
dec
push
pop
xor
and
jnp
pop
dec
in
push
dec
cs
cmp
data16
bound
in
addb
cmp
test
jl
aas
adc
pop
stos
xchg
add
jg
jecxz
scas
jb
xchg
dec
ds
lret
lcall
dec
pusha
inc
xorb
push
daa
stos
xchg
mov
sbb
nop
mov
xchg
repnz
fisttpll
push
inc
scas
inc
and
xchg
cmpsb
cmp
cmp
ds
cltd
push
lahf
or
pop
testl
scas
cmp
adc
jge
mov
inc
cwtl
xchg
push
push
dec
push
lock
test
sbb
imul
fsubl
mov
cmp
test
scas
mov
cli
cs
cli
cmp
stos
sub
fsub
sbbl
stos
insl
mov
add
push
decb
shll
and
mov
out
es
sarb
add
adc
xchg
sbb
sar
mov
andl
nop
cmp
push
jne
popf
insl
shr
fdivrs
fstps
fisubs
xchg
and
lods
push
imul
int3
daa
mov
popf
stos
enter
lret
lahf
mov
lods
movsl
test
addl
ja
mov
cmp
sbb
mov
rcr
adc
int3
sub
lahf
xchg
xchg
sbb
out
push
cltd
fistps
xchg
sti
cmp
stc
sbb
adc
int
sbbl
stos
push
and
mov
shlb
repnz
movsl
inc
stos
fdivrs
pop
add
inc
lcall
and
or
or
sbb
enter
xchg
sti
stos
mov
mov
pop
leave
xchg
adc
jmp
rclb
and
aaa
jl
mov
sbb
adcb
stc
inc
pop
icebp
std
cmp
mov
mov
pushf
push
dec
push
mov
pop
sbb
mov
jo
dec
adc
pop
xor
aaa
insb
xchg
dec
icebp
adc
adc
out
mov
ds
int3
pop
xor
pop
xchg
insl
orl
mov
sbb
add
add
imul
fldcw
mov
adcl
jbe
and
mov
imul
arpl
pusha
mov
xlat
sahf
dec
and
lock
jl
rorl
sti
mov
ljmp
fwait
sbb
test
jl,pt
push
xchg
dec
cmp
daa
scas
adc
test
sbb
cld
xor
mov
xchg
scas
ja
jp
es
sbb
cld
xchg
pusha
or
sub
push
subb
sbb
push
jmp
sti
rclb
bswap
fdivrl
mov
and
stos
cs
pop
stos
inc
push
ficomps
mov
sub
jnp
push
sub
notl
test
out
sbb
push
mov
sub
nop
adc
cld
jb
scas
mov
mov
or
inc
fs
jl
sbb
lret
cli
dec
fwait
push
and
rclb
pop
fisttps
sbb
clc
add
mov
stc
lret
xor
lcall
push
jmp
mov
jb
ss
ret
cmp
mov
dec
xchg
add
xor
xorl
mov
sbb
insl
aam
cmp
movsl
dec
or
and
jb
pop
inc
adc
test
push
mov
inc
in
xor
dec
dec
add
ret
mov
xchg
out
inc
in
mov
cmp
lea
addr16
cwtl
es
xor
rcrb
outsl
push
jecxz
sbb
xchg
jnp
push
nop
push
insl
aad
fists
insb
cmc
or
mov
mov
test
ret
pop
test
js
loope
in
pop
push
mov
mov
pop
cmp
fisubrs
outsl
xor
fldcw
xchg
popf
subl
js
stos
fiaddl
or
sbb
lcall
and
xor
and
fisubs
xchg
clc
scas
mov
jno
sbbl
and
sahf
jno
add
xchg
mov
sub
mov
mov
xor
cltd
std
aas
outsb
push
lods
mov
outsl
adc
pop
xor
add
int
pop
or
adc
aaa
xchg
sub
js
sub
idivb
stos
jns
jbe
imul
fbstp
lret
sbb
out
push
popa
clc
dec
dec
andl
int3
aad
ret
inc
fsubr
and
cmpsl
test
cmpsb
cs
and
sub
jl,pt
dec
sub
arpl
xchg
pop
fdivp
pusha
into
pop
jbe
fisubl
lds
stc
nop
sub
popf
jo
pop
cmp
push
into
jg
mov
push
or
cmc
ja
mov
adc
xor
outsb
mov
popa
add
add
pop
outsb
movntps
loopne
flds
or
pop
jle
stc
scas
jp
xor
fisttpl
xchg
dec
adc
mov
frstor
fwait
out
mov
subb
pushf
inc
mov
addr16
sub
pop
inc
inc
adc
mov
sub
lahf
call
mov
cmp
mov
out
jae
push
movsl
mov
jg
stos
inc
loopne
stc
push
popf
sub
in
pop
into
lds
imul
pop
adc
mov
loopne
test
mov
out
ficoml
test
mov
into
inc
push
xchg
xchg
jb
lahf
push
pop
xchg
xlat
outsb
les
ja
inc
and
clc
call
xchg
inc
mov
scas
adc
ss
mov
loopne
aas
xchg
in
cmp
mov
add
mov
push
scas
inc
mov
ret
pop
int3
arpl
and
js
sub
pop
test
sub
lcall
test
pop
mov
and
mov
sbb
push
dec
sbbb
mov
xlat
jmp
pop
mov
xor
or
sar
push
jl
adc
xchg
inc
pushw
xor
fsts
sub
and
dec
test
in
rep
cli
inc
packssdw
sbb
push
jo
jle
imul
or
jns
add
test
push
mov
cmc
setg
fidivrs
leave
test
jge
pushf
stc
lea
js
and
cmpsl
cmp
sub
out
mov
inc
jmp
fs
xor
xchg
mov
ret
add
mov
shrl
ljmp
out
fildll
stos
xchg
ss
mov
cmpsb
aaa
popa
jb
add
cmp
jp
xchg
sbbb
shll
out
scas
popf
ljmp
and
xor
test
dec
mov
pop
repz
adc
adc
scas
pop
repnz
fs
ds
clc
test
scas
imul
sub
push
xor
add
jmp
xchg
mov
cs
inc
lods
enter
nop
inc
scas
mov
shrd
bound
pop
xor
popa
stc
push
push
fcompl
std
into
iret
dec
and
pop
les
cmp
gs
xchg
add
jmp
push
pop
sub
mov
nop
sbb
pop
xor
pop
jb
fcompl
leave
cltd
test
aaa
into
fidivrs
lret
data16
nop
insb
inc
iret
add
repnz
xchg
and
pop
mov
cmpsb
mov
pusha
jno
push
dec
inc
sbb
add
fimuls
jmp
stc
mov
jle
cmp
je
in
mov
pop
shlb
lds
idiv
insl
scas
push
xchg
sbb
fs
jle
jae
and
inc
sbb
add
pop
loop
fsubrs
iret
cmp
in
shll
mov
and
fsub
cmp
sbb
scas
pop
mov
sub
dec
out
je
xchg
int3
push
lret
sub
ret
call
test
jmp
and
pop
mov
sub
mov
mov
in
pop
lret
outsb
inc
pushf
mov
out
subb
dec
or
sbb
mov
jb
daa
and
movsl
pop
mov
dec
std
inc
cld
ljmp
ljmp
andl
mov
or
cwtl
mov
fs
dec
les
loopne
pop
push
lds
aaa
xlat
mov
in
cld
loope
push
cmp
add
cvtps2pi
adc
adc
lcall
sub
jecxz
jmp
in
dec
dec
mov
lods
js
shlb
cmpsb
mov
sbb
insl
sub
push
in
movsb
pop
pop
inc
adc
cmp
rcll
andl
adc
inc
jmp
or
rcl
cmc
mov
iret
pop
inc
mov
clc
inc
and
subb
inc
call
lcall
mov
lea
dec
loopne
lods
fsubs
xchg
leave
in
jae
fimuls
cltd
cmp
jae
pop
cwtl
mov
lret
ret
sub
call
dec
jge
mov
loop
or
push
pop
mov
insb
xor
call
imul
shr
mull
xchg
pop
ja
shlb
das
in
int
leave
push
mov
and
sarb
mov
inc
aas
ljmp
mov
test
add
shr
or
test
pop
push
divb
icebp
fdivrl
push
and
in
std
pop
jbe
orl
sub
lcall
fwait
mov
adc
sarb
je
jge
adc
xchg
dec
ss
jns
jg
sub
out
push
lods
add
or
xchg
negl
rcrb
add
and
daa
jle
xchg
jns
push
mov
aaa
xchg
divb
jl
sbb
ss
notl
mov
and
and
repz
jo
fucomp
lds
or
push
int
jle
andb
jg
int
faddp
sahf
jge
iret
jmp
lods
pop
add
imul
add
and
or
int3
adc
inc
add
fs
popa
imul
lcall
mov
test
inc
mov
aas
inc
or
sti
pop
pop
sahf
sbbl
out
push
in
lea
mov
ret
adc
out
or
fs
dec
xchg
jmp
test
orl
lea
aad
xchg
test
rclb
in
jns
testb
aas
inc
mov
scas
jae
mov
movsb
sti
cmp
shrb
cmpsb
push
or
inc
or
lods
sarl
shl
xor
mov
adc
gs
lahf
mov
inc
mov
fnstsw
or
cmp
in
lds
xchg
cmp
cs
dec
mov
push
inc
movsl
aad
aas
push
jo
or
fwait
je
inc
loop
iret
ljmp
in
insl
mov
lock
ja
xchg
call
test
adcb
sbb
int3
push
popf
mov
sbb
test
lds
adcl
jne
fucomp
mov
dec
mov
rcll
notb
sbb
push
lcall
das
into
adc
mov
scas
push
mov
pop
shlb
cmp
popa
in
fsubrl
cmp
lahf
mov
popf
lret
or
pop
jecxz
mov
in
sbb
lcall
pop
aad
adc
mov
adc
pop
mov
outsb
inc
adc
stc
lahf
sub
push
push
call
adc
outsl
stos
lds
daa
cli
mov
scas
mov
sbb
test
or
call
mov
push
rorl
fldenv
fstps
ss
adc
jmp
pminsw
add
clc
ja
push
mov
mov
pop
inc
cmp
pushf
xor
cmpsb
shlb
adc
loop
repnz
into
into
xchg
xor
jecxz
dec
inc
fidivrs
outsl
lock
jmp
sbb
fs
push
push
mov
lret
cmp
int
push
mov
jbe
loope
add
loopne
cmpps
pop
ss
je
bound
jno
sub
lea
and
pop
cmp
aad
in
mov
scas
insl
push
and
pop
inc
test
andb
xor
sub
aaa
jns
mov
movsb
mov
jle
push
cmpsl
aaa
sbbb
and
aas
cmp
dec
sub
flds
sub
inc
sub
sub
xlat
insl
jg
pop
sub
sti
jae
jno
mov
ret
les
push
sbb
xor
mov
or
fcoms
push
or
stc
push
fisttpl
divl
gs
stos
push
jp
cmp
and
pop
pop
aas
mov
cwtl
mov
jae
test
adc
divl
nop
pop
bound
loope
scas
pop
mov
insb
mov
inc
add
bound
loope
jge
push
out
add
pop
mov
xor
xor
add
xor
fld
sub
scas
mov
enter
lcall
and
cwtl
into
and
xchg
hlt
mov
mov
pop
enter
mov
mov
jns
int3
movsl
popf
xchg
in
dec
in
jae
out
sahf
sbb
rcrl
and
subl
out
jmp
ljmp
sub
xchg
add
sarb
mov
movsl
out
lds
pop
cmpsb
dec
mov
xor
mov
adc
scas
jmp
aad
mov
xor
push
mov
loopne
dec
mov
push
popf
fidivs
mov
sub
pushl
loopne
imul
lcall
in
popa
repz
mov
mov
lods
add
in
mov
adc
out
mov
cmp
lret
gs
inc
inc
sbb
fucomp
aaa
dec
int
repnz
loop
xchg
mov
cmp
jmp
filds
and
leave
push
mov
lret
adcb
inc
ficompl
pushf
dec
xor
ficoml
xlat
mov
mov
rcll
xor
xchg
gs
sub
enter
sbbl
mov
mov
xlat
sarl
stos
and
iret
fnsave
jbe
sbb
inc
lock
add
or
push
out
cmp
or
rcr
mov
xchg
xor
int3
xchg
ljmp
sbb
out
jne
and
push
enter
or
mov
scas
cmc
mov
xchg
mov
fcmovnb
mov
lods
sar
push
lods
loop
arpl
inc
xchg
add
mov
cli
push
test
push
add
das
fadds
xchg
stc
jg
imul
test
adc
xchg
xchg
adc
je
dec
xor
dec
pop
out
dec
inc
fwait
clc
or
mov
dec
adc
das
pop
lods
xlat
jno
push
loop
add
rcrb
fsubp
mov
dec
test
xchg
mov
aaa
push
ss
jge
aaa
push
mov
xor
out
sub
dec
inc
add
xchg
mov
dec
in
cmp
push
push
sub
js
adc
inc
adc
je
adc
test
or
xchg
mov
sub
jle
pop
out
nop
mov
sub
mov
subl
lods
ret
sub
scas
adc
jmp
add
nop
imul
test
jg
xor
ficomps
dec
xor
insb
add
lods
aaa
rorb
add
aas
iret
xchg
test
jecxz
out
cmp
pop
outsb
fwait
xor
shlb
jmp
push
add
inc
pop
es
and
mov
mov
mov
mov
cli
shr
shlb
pop
in
and
inc
outsw
rorb
add
clc
adc
enter
jno
lcall
test
test
jnp
stos
or
push
je
lret
push
xor
and
jecxz
xchg
sub
or
arpl
jmp
ds
xor
xchg
ljmp
js
add
test
hlt
movsb
add
xchg
repnz
push
out
ret
addl
jecxz
jge
sub
cmp
jecxz
sub
cmp
pop
sbb
test
shrb
pop
test
dec
mov
dec
sbb
push
or
push
xchg
imul
xor
mov
shlb
mov
push
fwait
push
or
test
shll
lahf
dec
and
mov
xor
sbb
gs
jg
int
cmc
repz
mov
mov
mov
xor
dec
cwtl
orl
out
cltd
dec
arpl
pop
pop
and
cmp
adc
push
inc
test
popa
dec
adc
sahf
inc
cmp
and
push
testb
and
xlat
cmp
xchg
loop
add
lcall
scas
outsl
add
or
sbb
iret
clc
inc
cmp
imul
movl
mov
jmp
or
es
ds
sub
jge
xchg
outsb
push
xlat
or
jle
mov
pop
jbe
fcompl
scas
dec
mov
mov
cmp
enter
mov
adc
push
int
jmp
cltd
popf
lock
jno
repz
inc
idivl
sub
fsub
ljmp
notb
cmp
mov
jecxz
divb
push
loope
pop
push
sahf
xchg
adc
dec
hlt
pushf
in
aas
stos
jge
adc
loope
les
movsl
in
add
sbb
stos
dec
xor
mov
cmp
or
and
je
sub
push
sahf
jg
in
sub
and
dec
js
jge
loope
icebp
jge
lock
add
jl
ss
bound
adc
dec
or
jg
sub
int3
dec
sbb
mov
xor
jne
sub
into
arpl
jnp
xor
jne
mov
int
pop
and
push
arpl
es
insl
jo
ret
gs
xchg
adc
movsl
push
xor
addr16
dec
inc
mov
sti
imul
push
repz
std
mov
hlt
jl
push
xchg
imul
js
fcoms
imul
jnp
out
jg
rep
insl
mov
sub
and
cltd
loopne
and
xchg
cli
adc
mov
das
cmc
outsl
or
lock
sbb
pop
or
in
std
mov
test
int3
pop
sub
sub
repnz
sar
cmpsb
imul
arpl
ja
outsl
test
lret
or
sbb
mov
mov
rolb
fwait
and
sarb
lret
call
shlb
cwtl
ror
aas
xor
inc
gs
jo
sahf
arpl
in
mov
fiadds
out
mov
in
into
xor
lods
push
fdivrs
mov
arpl
inc
mov
mov
mov
push
mov
push
jb
sti
xchg
and
push
jecxz
scas
inc
push
adc
test
mov
and
adc
mov
fidivl
pusha
fs
push
outsb
mov
dec
xor
ret
and
addr16
ret
and
clc
push
or
loope
aam
and
mov
mov
dec
dec
push
test
jle
imul
lods
add
mov
pop
push
xor
xor
popa
fdivr
fiadds
xchg
xor
out
sub
mov
nop
cmc
outsl
icebp
insb
jge
testb
in
add
mov
test
andb
sbb
shll
or
stos
int
in
or
pop
addr16
pop
add
rol
jns
adc
push
pop
les
adc
aaa
fisubl
aaa
outsl
shl
call
and
popf
fdivl
dec
and
add
push
xchg
scas
xchg
sbb
mov
sub
add
test
stos
pop
fstl
cmpsl
jb
cmp
xlat
sbb
out
pop
lahf
sbb
mov
ja
push
rolb
fnstcw
mov
ds
ljmp
flds
int
sbb
pop
mov
xchg
add
stos
push
inc
rcl
jb
or
mov
push
or
sbb
insl
inc
arpl
fnsave
pop
out
and
fidivs
lcall
clc
pusha
test
ja
neg
sahf
mov
and
loopne
test
dec
push
jecxz
sbb
popf
sub
xor
adc
dec
enter
imul
adc
mov
leave
mov
enter
icebp
loope
mov
adc
movsb
or
xchg
out
pop
jo
pop
inc
push
xchg
adc
scas
dec
aam
xor
iret
stc
adc
sbb
fdivrp
fpatan
je
stos
push
cmp
mov
and
lods
cltd
sub
pop
ljmp
daa
enter
aad
push
enter
sbb
xchg
fildl
adc
mov
sbb
cwtl
jb
mov
lock
inc
inc
inc
jae
cmp
sbb
insl
pop
xor
pop
fldl
sbb
mov
or
mov
mov
pop
dec
mov
or
mov
pop
sbb
dec
pop
test
ret
mov
insb
and
xchg
fidivl
mov
ss
or
cmp
bound
xchg
push
ret
inc
inc
push
mov
xor
lret
cs
adc
sub
daa
pop
push
fdivrs
fstpt
sub
hlt
sbb
xchg
sbb
add
mov
mov
ljmp
jb
fmuls
out
sbb
stc
adc
aaa
mov
das
sbb
ss
inc
loopne
fldl
sahf
pop
jo
lret
sbb
gs
xor
scas
lea
add
add
shlb
out
mov
fsubrs
xlat
mov
jp
mov
mov
add
xchg
insb
dec
shr
daa
aam
xor
test
insb
lahf
dec
xchg
add
rorl
pusha
nop
stos
addb
nop
and
ret
and
dec
xchg
lods
ljmp
pushf
test
mov
into
adc
push
push
add
jge
cltd
sub
sub
nop
xchg
bnd
push
lds
mov
les
fst
int3
dec
outsl
movsl
pop
sub
jne
adc
repz
ret
test
jle
fmuls
cmpsl
and
imul
push
and
sbb
mov
fstp
movsb
imul
lret
sbb
sti
pusha
sbb
push
add
es
sbb
mov
and
adc
jae
mov
pop
jmp
add
jle
lea
mov
leave
adc
push
cmp
stos
xor
push
fdivs
sarb
add
cmp
sbb
aad
ss
inc
lret
xchg
adc
data16
cmp
lock
mov
outsl
loop
jne
and
in
add
movsb
ja
ret
jae
or
mov
jno
jmp
adc
xlat
inc
sarl
xor
ja
cltd
std
inc
sbb
test
mov
mov
call
or
aas
dec
pop
notb
rcl
mov
add
sbb
xor
insb
mov
ljmp
mov
mov
ret
add
test
add
xor
fisubrl
adc
push
repz
cld
lcall
pop
mov
push
repnz
insb
pop
sahf
sbb
add
es
repz
cli
inc
enter
pop
ror
das
movb
dec
push
lods
pop
adc
int3
test
decb
enter
pop
sbb
mov
pop
cmp
js
std
sub
or
scas
sub
add
xchg
adc
out
lods
inc
sub
cltd
sbb
push
adc
and
fdiv
xor
mov
cmp
aad
pop
mov
je
stos
push
repnz
push
in
lahf
fsubs
aam
dec
iret
sbb
and
js
vpsrlw
sbb
scas
pop
xchg
mov
lds
out
dec
insl
shlb
mov
xchg
mov
mov
roll
cwtl
test
mov
inc
mov
pop
icebp
and
into
sub
add
nop
cmp
push
lods
jecxz
enter
cmp
xchg
sub
sbb
adc
je
outsb
xchg
cld
scas
call
mov
loop
clc
addl
xchg
pop
loope
cmp
rorb
add
dec
in
inc
insb
sbb
imul
orl
push
popa
mov
pop
jmp
sub
add
inc
das
aad
mov
pop
push
fnstenv
gs
sti
or
ds
imul
add
les
add
xchg
dec
addr16
imul
mov
jp
enter
lods
data16
inc
push
jge
dec
popa
test
jae
xor
mov
jb
test
loopne
xor
out
adc
inc
setg
lds
jbe
pop
jge
or
imul
rolb
out
addl
addr16
jno
test
dec
testl
xor
cmp
out
out
xchg
lods
rorl
xchg
stc
xlat
fldl
push
mov
dec
out
jg
leave
xorb
nop
sbb
outsl
or
push
sbb
lret
shrb
mov
imul
insb
adc
rorl
add
mov
cmp
clc
push
dec
lds
shrb
sub
mov
cmpsb
xor
int
sbbb
in
and
mov
or
fadds
stos
cltd
pop
mov
repz
xchg
and
lea
sbb
test
test
or
push
xor
ja
xor
andl
sbb
sub
std
lcall
cmp
xor
decb
insb
jle
or
les
cmp
mov
sub
lahf
adc
mov
imul
sub
ja
jnp
clc
hlt
mov
popa
xchg
mov
adc
xorb
stc
scas
push
jmp
popa
leave
sarb
pop
sub
or
xor
popf
das
or
and
outsb
lods
jo
fimuls
or
shlb
push
lock
xor
push
jb
loopne
xchg
fwait
push
stc
adc
mov
leave
jp
mov
lds
mov
nop
hlt
cmp
popa
scas
sbb
mov
inc
test
jb
pop
lods
cmp
in
push
pop
mov
xor
pop
adc
cli
dec
adc
repnz
call
stos
pop
mov
xor
decl
and
inc
pusha
dec
outsl
inc
sub
xor
dec
inc
mov
dec
pop
fstpl
push
xchg
lret
int
or
sbb
dec
mov
dec
push
jmp
in
xchg
je
inc
pusha
pop
jns
sti
xchg
adc
mov
ljmp
jmp
push
inc
xlat
ret
ljmp
ret
jp
popa
mov
and
push
mov
ja
inc
jnp
or
mov
lcall
loopne
xchg
movsl
mov
mov
sub
push
leave
flds
dec
inc
fldenv
or
jb
cmp
icebp
adc
sbbb
and
pop
out
sub
xchg
imul
cmp
stos
in
mov
nop
xlat
mov
push
and
adc
add
or
pop
out
out
pusha
mov
mov
add
fs
stos
in
xor
sbb
push
nop
daa
inc
push
push
subb
stc
aaa
scas
and
stos
jne
push
mov
or
mov
test
into
and
imul
aad
dec
dec
out
daa
mov
cmp
jnp
imul
fistl
jecxz
mov
lods
adc
add
loop
cwtl
lahf
or
popa
sub
scas
or
fwait
cs
mov
pop
popa
mov
push
lea
dec
xchg
pop
cmp
push
xchg
add
xor
jo
bound
xchg
mov
test
xorl
push
inc
jle
out
cmp
shlb
inc
frstor
sbb
inc
lahf
pop
dec
xor
imul
inc
loopne
sub
ss
out
jge
inc
clc
adc
mov
test
int3
sub
mov
cmp
pop
outsl
loop
lret
enter
repz
rcrl
xchg
push
loope
in
xchg
out
xchg
je
dec
roll
inc
test
dec
aad
in
cmp
lahf
lods
outsl
ds
aas
insb
jo
mov
shrb
lock
adc
jae
test
out
stc
ror
mov
mov
jle
aam
mov
pop
ret
dec
lea
andl
repnz
pop
pop
mov
inc
sub
jbe
leave
lahf
idivb
decb
jecxz
or
call
pop
out
cmpsb
sti
addr16
subl
adc
pop
mov
xor
cli
mov
dec
movsb
mov
adc
mov
add
add
loop
sti
cs
and
ja
outsb
push
add
xorb
hlt
dec
popa
cmp
lcall
fwait
cld
movsb
mov
insb
push
hlt
mov
stos
fisubrs
leave
xchg
lret
mov
fs
cmp
xchg
pop
pop
xlat
dec
sub
or
adc
sarb
es
mov
cltd
mov
jbe
jp
mov
mov
gs
stc
mov
loopne
mov
movsb
adc
pop
add
mov
push
adcl
int
sbb
jecxz
sub
fnsave
dec
fstp
hlt
push
shrl
pop
lahf
inc
in
add
or
shlb
sub
mov
dec
gs
repz
xchg
lahf
sub
ret
ds
xor
iret
subb
and
out
nop
stos
clc
test
ja
cwtl
mov
movsl
jae
out
loopne
shlb
cmp
pop
insb
inc
mov
xor
xchg
fsts
dec
jecxz
mov
lock
cmp
and
dec
pop
inc
daa
mov
stos
and
cmpsl
dec
lret
pusha
imull
loopne
add
push
outsb
adc
sbb
sahf
flds
jle
adc
cmp
stos
outsb
inc
jle
pop
xor
push
scas
hlt
mov
stos
mov
or
xlat
jmp
dec
jecxz
inc
lock
push
test
push
or
xchg
pop
mov
push
aas
out
mov
flds
jle
mov
or
sub
jl
mov
push
and
cmp
cwtl
das
sahf
jbe
int3
jle
loopne
add
sbb
cli
out
xchg
sbb
mov
cltd
jmp
aad
lock
cmp
push
cwtl
js
bound
xor
testl
xchg
cmp
pop
sub
and
les
pusha
xor
in
out
pop
jo
test
adc
js
arpl
mul
loope
cmp
andb
mov
mov
adc
gs
mov
jno
mov
xchg
jns
test
and
gs
inc
das
mov
stos
pop
cmp
sub
add
gs
mov
imul
lods
mov
push
mov
mulb
sarb
inc
adc
in
xor
test
cwtl
mov
jmp
icebp
and
adcb
cli
test
getsec
push
inc
lds
dec
loope
and
jne
shll
xchg
dec
test
shr
movsb
xchg
mov
std
hlt
jnp
sbb
call
in
jg
lds
mov
push
rolb
xchg
jne
cld
out
xchg
cmp
push
mov
inc
pusha
adc
outsl
ja
dec
dec
pop
inc
rclb
cs
ficomps
adc
jge
add
sub
outsb
jb
jmp
inc
shl
inc
out
int3
fistpl
inc
pop
mov
cmpl
xchg
push
xor
cmpl
clc
lret
jecxz
pop
adc
add
into
enter
xchg
mov
pushw
add
dec
stos
push
sub
rol
cmp
push
popa
fs
test
jno
pop
mov
insl
in
push
nop
mov
ljmp
orb
movsb
xor
in
push
aam
xchg
sbb
ljmp
adc
dec
stos
inc
leave
imul
ljmp
repnz
dec
cmp
cld
push
jne
or
dec
dec
pop
dec
cmpsb
mov
fistl
ficomps
add
fdivs
sub
mov
adc
roll
test
mov
or
push
fidivrs
loopne
rclb
sbb
test
ret
mov
mov
jbe
jp
mov
xchg
fstpl
pop
nop
sbb
xor
js
mov
jmp
cmc
dec
sbb
sahf
shl
outsb
hlt
dec
cmp
iret
mov
cld
sub
ljmp
stos
sbb
das
adc
or
add
scas
cs
js
ljmp
andl
fisubrl
mov
fcmove
jo
add
dec
pushf
jg
cmc
fcompl
inc
int3
aam
push
in
in
push
out
lret
jb
xchg
faddl
ret
fnstenv
dec
pop
aas
push
das
call
movsl
mov
das
jl
dec
leave
adc
mov
int3
adc
lret
mov
lock
adc
pop
pop
sub
push
mov
data16
repnz
pop
int
inc
cmp
cmp
sub
scas
sub
dec
pop
dec
dec
in
mov
aad
repz
adc
mov
js
inc
jmp
les
out
sbb
push
imul
pop
insb
jecxz
rcl
int
iret
push
rcr
test
or
adc
lret
fisttps
jns
bound
jmp
fucompp
xchg
test
or
scas
movsb
ljmp
lcall
inc
aas
and
ss
pop
icebp
push
and
push
in
push
dec
in
ja
cmpsb
decb
fbld
ds
sub
enter
xchg
pop
pop
mov
faddl
int3
lods
inc
rol
jle
mov
inc
fwait
pop
je
test
in
mov
lret
incl
aas
fnsave
jbe
xchg
pop
fmull
adc
mov
dec
pop
xor
mov
lods
jmp
test
cmpsl
ds
sub
lds
ret
lock
xor
xor
mov
sub
out
addr16
daa
mov
xor
andl
nop
test
int
mov
push
xor
cmc
inc
shll
push
jmp
mov
inc
loop
fwait
gs
pop
mov
inc
jmp
dec
pop
aaa
cltd
xor
repz
leave
inc
xchg
addr16
mov
or
lea
push
aas
imul
dec
cmp
cmpsl
adc
dec
fistpll
mov
mov
inc
or
into
xor
add
les
enter
cmp
aad
or
cmp
xchg
das
inc
loopne
cmp
dec
hlt
cmp
insl
mov
les
mov
stos
mov
cmp
jg
inc
addr16
out
xchg
cli
mov
adc
out
das
pop
jl
or
sbb
jnp
jo
fsubl
pop
or
in
xor
lcall
mov
rolb
sub
jmp
mov
xor
xlat
pop
add
fbstp
xor
mov
inc
jbe
mov
jae
xlat
xchg
push
and
adc
inc
es
cs
dec
sub
fs
inc
mov
mov
sub
inc
mov
pop
jecxz
shl
insl
es
cmc
push
repz
ljmp
adc
aaa
sbb
pop
cli
daa
inc
shrb
out
mov
adc
add
mov
stos
add
bound
fbstp
mov
cli
push
popf
lods
std
add
xor
testl
xor
into
and
jno
int
test
iret
xchg
fstpl
cli
lock
gs
ret
nop
stos
hlt
adc
adc
int
push
ds
cmp
sbb
negl
lahf
jmp
inc
sarl
add
push
or
test
sbb
jecxz
sub
add
ror
mov
push
outsl
xchg
mov
mov
sub
inc
xchg
dec
aaa
mov
sti
nop
jecxz
jle
push
lods
fimull
dec
out
adc
inc
shrl
ljmp
jno
pop
push
mov
movsb
mov
lret
ror
or
xor
pop
call
mov
pop
adc
in
cwtl
scas
test
jno
into
inc
cmpsl
imul
mov
jb
cmp
dec
cmp
rcl
mov
or
inc
fisubs
iret
xor
iret
cmpsb
adc
mov
jne
lret
ljmp
lret
fdivl
inc
mov
push
or
dec
out
inc
xor
lret
sahf
fstp
adc
out
mov
xor
push
bound
test
adc
sbb
cmp
and
nop
daa
fstl
xor
and
pop
out
stos
outsb
pusha
lods
jbe
push
test
cld
nop
lods
lret
fimuls
fldt
std
xchg
mov
hlt
push
test
cmpsb
les
sub
subl
lahf
loope
popa
pop
popf
xor
mov
mov
movsl
aas
dec
xchg
daa
scas
les
in
inc
sub
xchg
leave
xchg
jge
lahf
fwait
jbe
loopne
cltd
mov
std
mov
out
xor
sub
aad
sbb
and
test
fnstcw
or
mov
jbe
outsb
stc
popa
mov
inc
inc
cld
inc
and
sub
ljmp
sbb
mov
das
lahf
ret
rcr
ljmp
mov
fisubrs
mov
inc
jl
add
push
je
sti
test
shll
sub
push
pop
xchg
mov
inc
into
dec
cwtl
mov
mov
iret
data16
push
or
test
dec
add
lods
lret
adc
jecxz
lods
xor
enter
jge
mov
icebp
cmpsb
clc
mov
pop
scas
xchg
jle
push
xor
lods
push
mov
xchg
in
aas
andb
jg
mov
mov
adc
test
pop
sbb
mov
cli
mov
fadd
jl
push
out
jns
repz
xchg
dec
scas
and
fs
lret
cld
mov
push
pusha
push
mov
das
outsb
loope
cltd
les
out
push
adc
jb
int3
pop
pop
sub
daa
shl
adc
je
push
mov
fnsave
flds
popf
lea
push
jp
stc
lods
adc
sub
aam
es
stos
inc
xchg
lcall
inc
lret
cs
notl
addr16
lcall
mov
cmpl
dec
cmpsl
dec
jecxz
pop
lock
mov
mov
jp
outsl
aas
dec
cmpsl
or
pop
dec
movsb
mov
pop
jno
rcl
insl
je
mov
cld
outsl
repnz
int
push
push
mov
movsl
lds
fldcw
jno
mov
loope
stos
fdiv
fdivrl
lea
xor
dec
aam
sub
mov
xchg
pusha
and
mov
dec
cmpsb
lock
xchg
cs
hlt
dec
mov
mov
dec
outsl
cmpsl
cmpsl
nop
lods
fmul
negb
fidivl
rorl
xchg
dec
add
jo
orb
aas
mov
fnsave
sti
outsl
jl
jbe
add
jmp
lea
aas
jmp
inc
adc
sti
inc
push
lcall
dec
aam
jl
jne
mov
loopne
sahf
cmc
cmp
lcall
jno
lret
mov
cmpsl
push
leave
add
mov
in
cmp
add
add
test
and
js
add
xor
fdivrl
fisubs
dec
out
bound
xor
xlat
sbb
lods
aaa
push
cs
adc
lods
addr16
dec
imul
push
notl
das
scas
fs
lcall
in
pusha
lahf
xchg
in
inc
rcr
icebp
pushf
ret
pop
push
negl
mov
add
mov
dec
popa
cmp
pushf
dec
and
insl
clc
enter
or
out
sbb
jle
mov
dec
push
rolb
mov
js
mov
adc
xorb
xor
leave
es
mov
loop
in
mov
outsb
jl
ja
xorl
add
pop
push
je
cmp
sbb
pushf
popf
mov
adc
clc
imul
mov
or
loop
into
out
sub
fwait
push
lea
mov
jle
fcmovnu
mov
ds
ds
aad
or
hlt
inc
ljmp
mov
fsubl
leave
out
sbb
xchg
repz
xchg
jge
movl
pop
fucomp
sbb
outsb
repnz
sahf
lods
push
in
in
jmp
cli
popf
cwtl
inc
fdivrs
int3
jmp
sahf
movsl
scas
inc
shll
and
repz
stc
nop
sbb
mov
orl
or
cs
jo
gs
int3
and
pop
mov
push
add
ret
loop
jne
int3
jp
push
jge
aad
jne
dec
cmpsl
jae
xchg
pushl
lahf
int3
and
jae
sub
sbbb
stos
mov
aas
psubd
icebp
sbb
inc
test
shr
daa
test
or
cld
push
jne
push
shlb
sti
iret
inc
dec
inc
lret
and
adc
pop
dec
mov
les
scas
xor
int
loop
dec
mov
and
in
ret
std
cli
xchg
add
bndldx
push
mov
test
xchg
sub
jmp
movsb
cs
notb
mov
ret
pop
cmpsb
mov
loopne
test
mov
rclb
cmp
push
jbe
inc
aaa
lret
cwtl
lahf
jns
xor
lret
adc
and
pop
out
add
shlb
test
shl
jae
nop
mov
pop
imul
mov
in
sti
mov
into
jge
daa
dec
or
ljmp
ss
data16
out
rcrb
push
or
mov
mov
fists
loop
inc
popf
arpl
adc
into
sub
mov
jae
push
push
stos
ret
sbb
shll
xor
pop
xor
pusha
lds
pop
into
xchg
sbb
jecxz
add
lcall
repz
mov
andl
out
gs
fidivl
test
loop
pusha
adc
cmp
push
cltd
push
mov
sbb
lock
mov
jge
clc
in
lea
out
aam
cmp
insl
sbb
orb
negl
add
xor
daa
loope
jnp
in
mov
xchg
sub
fldenv
push
inc
xlat
mov
in
orl
je
loop
dec
xchg
jbe
fcoms
ret
dec
add
mov
aam
dec
push
popa
lret
dec
adc
ret
xchg
into
mov
xlat
sbb
ss
leave
cmc
cltd
xor
mov
xchg
aas
inc
mov
sub
sub
mov
pop
mov
pop
fwait
cmp
int3
lock
in
bound
stc
es
inc
sbb
pop
mov
hlt
adc
fsub
jp
cmpsl
mov
sbb
sti
mov
mov
jbe
stc
sub
hlt
out
sbb
jo
les
repnz
inc
fcompl
sbb
aas
out
jo
dec
popf
fs
add
notb
pop
gs
je
add
dec
mulb
inc
std
push
sub
or
nop
pusha
xor
fidivrs
pushf
dec
fstp
fadd
mov
add
or
movsl
mov
ret
lock
pusha
stc
jl
adc
pop
imul
fcmovu
jmp
and
ret
xchg
jno
push
es
xor
rcrl
dec
pop
pop
lret
cmp
les
dec
shl
and
adc
inc
test
inc
push
fstpt
sbb
cld
ficomps
fistl
sbb
rorl
sub
mov
cmc
inc
hlt
jo
sub
in
inc
mov
xchg
xlat
adc
dec
int
enter
adc
inc
fisubl
adc
jp
dec
cmpsb
cmp
enter
dec
insl
mov
mov
cmp
std
jecxz
in
pop
les
ret
insb
cmp
cmpsb
sub
cmpsl
mov
or
subb
lret
mov
fldt
sarl
addr16
or
mov
cs
and
enter
loope
fs
adc
outsl
adc
jo
insb
dec
dec
lds
loopne
push
and
jge
mov
jb
std
iret
ss
stc
xorl
into
cwtl
dec
and
and
mov
ss
push
inc
xchg
dec
cwtl
xor
push
ljmp
or
add
and
fidivl
ss
jle
movsb
sub
push
inc
jnp
pop
in
das
int
insl
int
rcrb
inc
sub
mov
cmc
pop
pop
add
mov
ss
and
cli
fcomps
lds
adc
iret
gs
jae
and
mov
pop
lods
xor
push
xor
call
pushf
dec
pusha
mov
jbe
mov
jno
faddp
aad
cmp
sub
and
iret
fnstsw
mov
pop
adc
xlat
test
ja
cmpsl
cmp
incb
sbb
aam
mov
fwait
aaa
sarb
xchg
scas
or
dec
push
cs
pop
add
aam
stc
push
les
imul
mov
cmp
jge
cmp
js
or
enter
jp
sub
xchg
les
cltd
sub
sahf
out
adc
mov
adc
popf
push
push
jb
ficompl
sub
mov
outsl
daa
mov
sahf
sub
iret
in
xchg
xor
and
in
push
ljmp
push
sarl
cmp
loop
mov
mov
pop
mov
stos
mov
mov
outsl
jmp
push
imul
and
pop
push
push
jnp
pop
cwtl
fiaddl
inc
jns
in
or
and
jmp
cmovae
aam
insb
jmp
dec
sub
and
insl
dec
out
aas
sbb
and
dec
jne
gs
inc
mov
pop
mov
roll
and
ficompl
or
daa
lcall
sub
pop
orl
and
dec
fucomi
dec
subl
shlb
arpl
stos
jmp
xchg
daa
mov
test
aad
test
divl
xchg
add
fimull
in
mov
in
test
fidivrs
gs
cs
addl
mov
xchg
scas
or
adc
in
ja
push
outsl
mov
lahf
jb
in
mov
out
push
adc
loopne
jbe
aam
outsb
pop
test
fmul
sbb
pusha
adc
push
imul
hlt
push
jmp
out
leave
fldlg2
and
aaa
jmp
stos
mov
dec
jno
rolb
push
inc
sbb
aam
jmp
inc
lret
mov
imul
mov
and
popf
aad
arpl
xor
lret
adc
leave
mov
mov
or
repz
gs
arpl
cmpsb
pop
adc
sbb
mov
out
es
adc
lds
pop
imul
js
mov
rclb
xchg
dec
jl
xchg
push
popa
mov
mov
mov
push
das
cmp
call
xchg
insb
jo
xor
fists
lock
rcll
jg
shl
mov
push
fwait
cli
or
out
mov
jns
inc
xchg
jle
dec
mov
mov
repz
test
sub
sarb
js
push
sahf
add
sub
out
sahf
add
mov
imul
repz
int3
call
and
jle
mov
popf
test
mov
decl
push
jg
push
test
sahf
pop
xor
push
xchg
loopne
lahf
arpl
es
je
addr16
jmp
or
ret
add
repz
shll
pop
cwtl
hlt
test
inc
cmpsb
loope,pt
out
out
xor
dec
sbb
js
sbb
popf
pop
mov
xchg
mov
and
loopne
lahf
cmp
jno
lock
jnp
jb
js
outsb
and
or
push
xchg
inc
frstor
clc
dec
cmp
xor
sti
sub
sbb
dec
daa
or
xor
inc
not
sub
stos
test
sahf
shll
sahf
scas
inc
rcrb
or
xchg
jge
dec
rep
repnz
mov
xchg
sbbb
and
xor
repz
inc
mov
cltd
xchg
or
jecxz
push
jne
or
ret
sbb
fucomip
js
xchg
in
test
sub
and
fisubs
hlt
stos
inc
mov
gs
inc
push
and
xchg
rcrb
or
push
xor
in
imul
xor
data16
dec
xchg
lea
fiadds
sahf
cmovne
shll
movsb
out
add
ja
mov
cmpsb
mov
cmp
push
xlat
mov
arpl
stos
rolb
inc
fs
bound
cmpsl
jb
int
int
notl
dec
pop
pusha
fcomps
mulb
jnp
jecxz
push
adc
shll
pop
vminss
mov
xchg
push
insl
outsb
popf
xchg
cmpsl
fisubrl
cmp
addr16
ret
mov
rol
sub
aas
xlat
loope
inc
es
data16
lret
lret
xor
mov
bound
push
mov
or
lret
test
inc
aas
in
repnz
inc
sub
xchg
pop
pop
scas
push
xor
repz
inc
mov
xlat
gs
loope
je
pop
push
scas
pop
adc
pop
jae
cmpsl
jno
out
and
dec
push
movsl
cmp
fmull
popa
mov
movb
xor
jae
mov
sar
dec
adc
lea
sbb
xchg
rcrl
sbb
and
dec
pop
aas
ret
inc
xor
cmp
fcom
rorb
sub
add
push
aaa
sub
push
ljmp
lock
imul
mov
push
aad
xor
push
pop
popf
cmp
xlat
dec
add
daa
mov
mov
jbe
mov
jb
stos
sub
cmp
xor
jl
nop
test
icebp
nop
les
or
cmp
test
jle
sahf
mov
outsb
ret
je
add
in
pop
dec
lock
adc
hlt
addr16
mov
pop
push
sahf
push
adcb
in
mov
xchg
cs
sbb
mov
mov
js
ljmp
scas
adc
cli
add
enter
inc
aas
sbb
sti
xor
roll
sbb
adc
ss
ds
mov
add
sub
sti
iret
out
leave
paddb
mov
add
mov
pop
or
mov
test
shlb
add
mov
xchg
cmc
mov
lods
aam
loop
mov
cmp
dec
cwtl
xchg
inc
xchg
daa
into
popa
test
pop
out
push
stos
sarl
and
inc
mov
adc
test
movsb
sub
mov
pop
cld
pop
dec
mov
sbb
lock
sbb
sub
out
fildl
lds
cld
insl
sub
add
inc
out
sub
icebp
fldt
std
sbb
mov
xor
adc
push
cmp
rclb
call
sub
popf
pop
repz
mov
and
lahf
imul
jmp
aaa
outsb
sub
xchg
cmp
rcrb
pop
push
xlat
ret
das
in
cmc
mov
icebp
ret
frstor
pop
movsl
stos
ja
cmp
in
les
loopne
int3
adc
xor
xchg
sbb
inc
ds
div
jecxz
adc
or
push
adc
add
pop
scas
mov
je
push
int
imul
pop
cld
inc
jae
hlt
mov
cmp
cli
call
push
lea
stos
pusha
neg
test
pop
or
adc
ss
popa
clc
outsl
jmp
arpl
std
nop
xchg
or
jae
adc
in
or
inc
xor
jge
jmp
pop
xchg
stc
xchg
hlt
cmpsb
daa
xrelease
movsb
add
adc
push
mov
jp
imul
out
subb
xchg
repz
icebp
mov
test
shrb
test
mov
out
push
add
out
pop
rcrb
pop
add
out
adc
nop
into
leave
and
sbb
ficomps
cmpsb
cmpsl
out
ss
ret
popa
lds
loop
ret
cmp
pop
lock
mov
fnstsw
cwtl
mov
jo
out
rcrl
aaa
or
addb
fs
es
addr16
xchg
sub
pop
addr16
push
mov
daa
fwait
test
cmpsl
mov
scas
ret
fwait
xchg
pusha
test
lret
iret
test
neg
xor
inc
roll
mov
fdivr
mov
mov
mov
mov
push
pusha
xor
mov
push
test
shlb
jecxz
fwait
dec
test
jmp
pop
xor
adc
lods
pusha
mov
xor
pop
aas
shll
mov
les
out
aaa
jmp
push
lock
add
push
xchg
and
orb
lea
cmp
sub
push
cmpsb
pop
lret
pushf
xor
rorl
mov
loopne
push
sbb
dec
es
out
fwait
xor
incl
mov
xchg
daa
cmpsb
sahf
lods
test
or
dec
or
sti
outsb
dec
cld
pop
icebp
or
out
je
mov
sbb
repnz
data16
adcl
lret
cmpsl
ret
inc
jle
inc
cli
lret
jg
inc
pop
fists
jle
mov
push
movsb
cs
shrl
lds
or
imul
mov
jns
mov
imul
pop
pop
push
leave
stos
cmp
and
cltd
inc
adc
sar
jb
lods
push
int3
pop
into
sbb
pop
in
mov
leave
enter
into
lods
enter
in
and
sbb
mov
shr
or
cmpsb
sub
jecxz
je
xchg
sub
sbbl
cmc
das
cmp
mov
mov
pop
add
out
jae
pop
pop
xor
bound
mov
sbb
inc
rol
in
add
mov
aas
lahf
push
insb
inc
xor
jns
mov
adc
pushf
lcall
out
ja
lret
push
popf
out
lods
mul
shlb
add
std
pop
popa
mov
addr16
jle
ss
jno
mov
jmp
sti
sti
adc
repz
enter
or
dec
fdivl
addr16
and
cs
pop
imulb
lret
enter
jne
xor
pop
call
shll
das
push
sbb
mov
mov
lahf
and
iret
push
mov
rorl
and
and
std
xchg
lea
jecxz
test
jns
cmp
mov
inc
adc
xlat
inc
add
sbb
mov
in
push
pop
roll
mov
shrb
jno
ffreep
pop
out
std
mov
aas
push
push
roll
jp
jne
shll
jbe
nop
daa
sub
iret
add
enter
or
ja
dec
daa
pop
dec
loopne
pop
mov
out
and
int3
xor
inc
cwtl
pop
clc
inc
mov
fisttpl
inc
mov
outsl
and
push
pop
mov
xchg
in
lods
sbb
cltd
fidivrs
iret
push
adc
sub
cmc
and
andb
push
or
mov
lret
fsubl
sub
inc
stos
nop
sbb
inc
jno
ds
mov
lret
clc
ja
jne
or
xor
sbb
add
mov
fcomps
add
xchg
push
incl
mov
lahf
loop
orl
aad
out
fcomp
mov
lret
cwtl
push
test
aas
push
add
lods
mov
push
lods
scas
adc
mov
int
xchg
mov
stos
sahf
outsb
xor
ret
addb
mov
push
insl
mov
ret
jge
std
pop
adc
push
mov
sub
and
inc
add
shlb
push
js
xor
cmpsl
les
dec
push
mov
std
mov
scas
stos
pop
repz
mov
andl
mov
out
jo
add
and
loopne
shl
scas
xor
jnp
inc
inc
int
dec
add
xor
adc
mov
xchg
or
adc
or
popa
sub
adc
in
roll
mov
cmp
xchg
mov
mov
jae
insb
mov
sub
inc
push
inc
das
cmp
jg
mov
and
sbb
negl
loope
cmp
in
pop
cmp
cmpsb
fs
adc
or
test
outsb
push
inc
and
push
in
push
sbbl
lods
sbb
dec
add
xchg
aaa
dec
sti
dec
fcomps
mov
mov
inc
movsb
psubsb
imul
repnz
dec
xchg
cmpsl
mov
mov
mov
add
pop
fwait
aam
rcrl
icebp
loopne
fdivs
cmp
jno
into
test
dec
pop
jae
pop
xor
pushf
cmpsb
push
daa
rcrl
outsb
ljmp
cld
fidivrl
stc
shrb
lods
mov
cld
jns
inc
scas
loop
or
das
mov
push
add
insl
cmp
pusha
push
dec
scas
mov
into
movsl
push
cmp
in
and
popf
push
jg
xor
lea
push
xchg
sub
push
xor
xlat
jb
or
adc
dec
repnz
sbb
outsl
cmp
fwait
jns
aad
adc
mov
push
ljmp
pop
out
sub
stos
aad
add
cmp
push
push
pop
stos
push
iret
pop
jp
jge
jbe
mov
pop
test
cmpsl
mov
xchg
xchg
fmul
andl
adcb
pop
mov
rcrl
ud2
sarb
mulb
ja
push
xchg
lret
popf
fcompl
add
jge
mov
cmp
lds
or
cltd
mov
add
and
xchg
stc
pop
mov
cs
test
call
or
push
sub
mov
inc
fisubrl
pop
sub
movsl
ficoms
mov
mov
pop
and
daa
push
xchg
push
mov
or
pop
dec
pop
ljmp
int3
clc
fiadds
cmovbe
jecxz
stos
jae
test
aad
and
mov
icebp
ud1
vscatterqps
mov
or
push
cltd
cli
mov
dec
cmc
or
and
push
sbb
push
shll
or
xlat
cmp
in
fadds
jb
bound
xchg
dec
and
lds
scas
fcompp
imul
pushf
in
ds
dec
or
dec
pop
sbb
adc
xchg
jno
into
sub
fdivrl
pusha
mov
mov
mov
lods
mov
pop
test
mov
cmp
and
cmc
jl
push
out
xchg
jg
lock
into
and
pop
lret
pop
hlt
adc
jno
add
xchg
xchg
and
or
mov
push
xchg
jo
adc
mov
out
lods
ret
cld
test
push
adc
icebp
stos
leave
ficompl
decl
fnstenv
cli
addl
mov
jnp
add
movsl
and
fidivs
xchg
sub
cmpsb
sti
mov
mov
call
xchg
sbb
in
pop
outsb
xor
sbb
cmpsl
ds
jmp
cmp
lahf
cwtl
rclb
je
xor
lcall
xor
mov
cmp
inc
push
sub
dec
dec
dec
xor
lods
push
fmul
add
cmp
push
add
adc
push
inc
mov
xlat
mov
divl
add
mov
or
and
lds
pop
push
pop
pop
mov
mov
pop
jge
aaa
into
inc
nop
inc
pop
dec
inc
sbb
jl
cmp
test
mov
mov
xor
iret
test
in
shll
test
scas
or
in
inc
stos
nop
stos
aad
xchg
cs
imul
fidivs
pusha
negl
pop
flds
cmpsl
outsl
repnz
mov
xchg
shl
cmp
and
test
inc
shlb
clc
sbb
pop
mov
in
lret
stos
adc
jp
and
out
pop
fs
or
sbbb
sub
pusha
xchg
clc
daa
mov
fs
adc
add
push
shrb
fnstcw
scas
mov
push
lods
mov
pop
xor
mov
mov
stc
pop
frstor
and
adc
sub
cld
and
ja
sub
out
adc
sub
and
jmp
sub
xor
sub
dec
sub
push
stos
xor
neg
cltd
sbb
aad
mov
lea
sub
push
push
and
fwait
sti
and
xchg
dec
or
neg
mov
add
lods
adc
into
pop
dec
jb
data16
push
push
insb
push
sbbl
test
ret
jp
adcl
xor
outsb
bound
add
sbb
xchg
lret
push
stc
cld
adc
dec
pop
cmp
mull
lods
push
dec
ds
jnp
jns
addl
add
call
sub
rcll
pop
adc
cmp
pop
jo
add
inc
outsb
inc
cmc
es
and
mov
and
movsl
testb
cltd
cld
out
pop
lahf
lret
and
pop
fidivrs
movsb
aas
push
add
sbb
add
arpl
and
push
sarl
lods
jl
rcrb
imul
xchg
push
ljmp
ljmp
and
jae
pop
push
mov
xor
fldcw
sahf
mov
inc
dec
sbb
jnp
or
in
pop
dec
jp
cwtl
lcall
dec
cmp
rol
and
xor
shlb
leave
jbe
mov
jmp
int3
dec
in
push
mov
push
movsl
ficomps
leave
adc
pop
addb
in
mov
push
push
push
push
xchg
out
in
mov
jne
mov
mov
ja
xor
sti
popa
lods
mov
cmp
in
sbb
les
pop
xchg
lahf
gs
cwtl
inc
inc
scas
in
dec
into
pop
mov
inc
inc
shrl
xchg
mov
xchg
stc
jp
shlb
daa
push
in
fists
cltd
and
mov
data16
enter
int3
pop
sub
test
ja
icebp
sbb
inc
setl
shl
mov
ret
bound
popf
xor
push
cmp
cmpsl
add
inc
in
mov
imul
hlt
cmpsl
rcll
mov
xchg
mov
iret
push
enter
lcall
and
fsubrs
xchg
leave
div
xchg
push
out
push
sbb
mov
movsb
sub
or
shlb
or
rcll
lret
xchg
sub
cmp
pop
push
fildll
mov
lock
adc
fsubrp
inc
test
inc
enter
rcll
cmpsb
data16
lret
loope
lods
push
mov
jne
cmp
stc
or
lods
adc
sub
mov
stc
mov
sub
cmpsb
dec
push
dec
out
scas
negb
mov
sti
push
mov
sub
frstor
xor
jbe
js
and
mov
shrl
lea
mov
dec
xor
mov
std
cmp
pusha
test
pusha
pop
adc
sub
adc
sub
xchg
enter
cmc
fst
push
jecxz
push
sbb
popf
bound
jo
gs
pop
cmp
enter
ror
filds
call
sarb
mov
inc
iret
adc
cwtl
and
jbe
dec
pop
test
shll
mov
jae
jae
jmp
mov
out
sbb
js
or
xorb
sbb
sub
xor
pop
out
push
jg
or
mov
push
fs
mov
sub
sbb
lahf
lds
ret
pop
dec
movl
push
push
or
inc
inc
pop
dec
aam
mov
pop
cmp
fstpl
jl
outsl
loop
sbb
xor
xor
xchg
inc
jmp
fiadds
sub
stos
test
in
push
lahf
jl
xchg
shll
ret
pushf
int
in
pop
sbb
inc
into
insl
aam
lods
xor
lods
mov
dec
pop
xlat
test
rorb
ret
mul
jecxz
scas
clc
fildl
fiadds
movb
pop
xchg
cmp
dec
stc
jo
push
cmp
cmc
js
arpl
adc
jbe
test
sbb
mov
repnz
cmpsb
into
and
leave
je
aas
push
xchg
lods
dec
bound
out
sbb
push
decb
inc
std
in
jo
stos
inc
lods
das
xchg
scas
xor
jl
inc
mov
inc
fcoms
call
sub
fdivs
rclb
and
jae
fistps
orl
addr16
xor
scas
mov
dec
pop
sub
cli
add
rol
and
cmp
imul
je
or
cmp
daa
jne
sbb
sub
sub
adc
ret
xchg
adc
xlat
and
cmp
adc
jl
negb
cmp
movsb
dec
xchg
jle
fwait
test
lahf
xor
jne
imull
mov
repnz
adc
sub
pop
cmp
adc
call
stos
out
les
jmp
xchg
out
jl
subl
les
mov
adc
cwtl
movd
lods
mov
sub
fwait
arpl
jns
adc
stos
outsl
scas
jae
pushf
mov
lods
sub
aas
testl
sahf
insl
pop
cmp
aad
sub
sbb
sbb
lods
repz
test
int
js
in
test
pop
jp
js
mov
dec
dec
leave
and
loopne
cmp
stos
mov
mov
out
pop
jp
fdivl
and
fucompp
cmp
movsb
arpl
adc
push
push
repz
ficoml
ret
arpl
pop
mov
call
es
adc
mov
add
inc
mov
dec
sub
mov
lods
lds
popf
and
hlt
sti
lret
icebp
push
pop
mov
lods
daa
loope
xchg
mov
add
adc
push
bound
push
push
xchg
lods
out
sbb
int
iret
sub
mov
les
or
ljmp
scas
mov
into
adc
test
add
sbb
nop
mov
rol
and
iret
dec
sbb
jbe
notb
xor
jae
xor
out
mov
jle
lds
push
xchg
cmp
pop
scas
cmpsl
sub
cwtl
inc
arpl
lcall
lock
pusha
add
pop
aaa
lock
push
xchg
jbe
inc
mov
lods
cmp
xlat
jbe
stc
mov
inc
jns
loop
ret
jle
cmp
in
xchg
sbb
pop
pop
xor
cmp
imul
cs
ror
xchg
cmc
int
and
add
xchg
mov
inc
inc
push
mov
test
fsubs
mov
cmp
adc
lahf
jecxz
shrb
add
lods
jp
hlt
test
inc
jnp
je
pop
loope
cmpsb
mov
test
add
adc
dec
shl
sti
xchg
rcll
sub
add
in
sub
aad
cmc
mov
int3
shlb
jnp
pop
lods
js
jg
mov
push
stos
roll
popf
addr16
inc
mov
push
and
xor
in
sarl
lds
pop
ljmp
jmp
mov
sbb
push
mov
jo
mov
ret
jo
stc
fwait
mov
sbb
outsb
mov
das
jnp
or
mov
dec
dec
in
std
mov
jl
add
shll
repz
cmpsl
cmp
add
dec
cwtl
roll
or
xchg
xchg
mov
mov
fwait
repz
xchg
fcmove
in
lret
cs
dec
add
jae
or
imul
mov
add
xor
cmp
sbb
dec
xchg
and
xchg
and
js
cld
outsl
ds
sbb
push
jne
cli
mov
jle
out
jne
add
mov
and
or
cmp
xor
add
mov
pop
cmp
nop
jmp
dec
jp
mov
ret
xchg
shl
pop
dec
loopne
adc
daa
aaa
pop
or
lcall
pop
mov
popa
inc
mov
sub
stos
xchg
les
mov
lret
adc
add
mov
adc
jnp
cwtl
push
adc
in
and
or
sub
leave
ja
inc
fiaddl
popa
faddl
test
xor
or
or
in
pop
mov
je
and
sti
loopne
sub
in
in
popf
loope,pt
cmp
je
lods
cmp
int3
dec
lahf
sub
xchg
inc
pop
ljmp
adc
into
popa
adc
inc
push
mov
inc
fcoml
aam
adc
cmp
push
xchg
jno
add
negb
call
adc
lods
fsubrl
int3
arpl
int3
sahf
mov
mov
icebp
enter
int
lret
jb
bound
sbb
nopl
mov
mov
xlat
xchg
pop
lcall
jbe
xchg
subl
rcl
jbe
mov
movsl
cmp
mov
pop
mov
lods
cmp
lcall
pop
mov
andl
add
xchg
cmp
jbe
fcoml
push
lea
std
pop
arpl
int
sarb
mov
push
ja
push
testb
test
xlat
insb
les
mov
mull
pop
sub
stc
inc
lock
jmp
push
mov
push
nop
mov
jne
sti
xchg
cli
adc
or
add
push
int3
jns
jmp
xor
nop
dec
incb
lock
jne
push
fnstcw
movsl
fcomps
mov
insb
mov
cmp
cli
sbb
faddl
cmpsb
cmp
shrb
rcrl
xor
or
inc
leave
int3
jg
lock
test
cmpsb
ljmp
jne
mov
pop
imul
rcl
cmp
repz
fnsave
pop
fmull
adc
bound
push
push
jbe
add
cmp
jg
stos
js
test
loopne
mov
loope
inc
out
ficoms
xor
xor
pop
xchg
out
mov
mov
and
push
jp
dec
test
mov
push
bound
test
mov
sti
or
pop
jmp
dec
ja
add
arpl
sub
arpl
ret
inc
or
xor
int
std
aad
das
imull
sahf
and
mov
push
loope
ret
sarb
mov
insb
mov
pop
arpl
pop
imul
add
insl
mov
mov
fildl
faddl
leave
jg
push
pop
andl
sbb
dec
jns
inc
js
mov
sbb
mov
push
mov
pop
or
ds
pop
je
lock
pop
sti
mov
mov
es
xchg
mov
xchg
push
lods
dec
arpl
cmp
lahf
jo
ss
xchg
push
insb
ret
clc
stos
add
fdivr
nop
int3
fisubrs
pop
std
jne
and
jno
push
in
push
xchg
hlt
lcall
outsl
add
xchg
mov
imul
movsb
mov
cmp
dec
mov
ret
repz
mov
jnp
lret
shrl
or
outsl
jbe
lock
dec
mov
mov
push
mov
or
mov
dec
js
xor
insb
fistpll
outsb
loope
adc
jnp
aaa
and
cmp
and
cmpsb
dec
and
dec
and
inc
mov
add
popa
loop
pandn
jecxz
jo
ficoml
lret
jl
or
jno
push
in
pop
xlat
dec
rcrb
sub
fildl
inc
loop
insl
add
jl
cli
mov
mov
push
add
ja
repnz
repnz
sub
jns
fwait
and
test
adc
cwtl
or
push
mov
cli
out
fisttps
faddl
sub
es
xchg
mov
fists
das
in
xor
gs
ror
mov
loope
insl
push
das
cmp
jge
adc
jo
pop
outsb
push
inc
movsb
test
call
xchg
sub
pop
test
inc
icebp
mov
jmp
sub
test
ror
mov
xor
outsl
cwtl
cmp
sbb
jle
jae
dec
mov
jge
fisubrs
into
xchg
mov
cmc
shrb
shl
cs
pop
sbb
add
or
aas
pop
stos
in
incl
in
xor
outsb
cmp
outsl
cs
or
mov
clc
inc
xor
aas
adc
js
mov
enter
in
sbb
stos
add
cmp
add
push
out
decb
jb
xchg
xchg
jne
lea
adcb
mov
insl
in
mov
loope
sbb
js
adc
sub
repz
hlt
mov
rclb
adc
cmpsb
inc
xor
sbb
jle
inc
and
push
fidivs
addr16
aaa
lret
add
and
pop
sahf
xor
adc
mov
nop
cmp
sbb
movsl
std
das
jg
sbb
jmp
out
fidivl
sbb
or
mov
mov
inc
scas
push
mov
xchg
cwtl
popf
cli
test
cmp
sub
dec
add
sti
daa
xchg
idivb
mov
cltd
icebp
sbb
cmp
in
ljmp
fstpt
mov
mov
cmp
shll
lcall
adc
into
adc
sahf
sbbl
sbb
scas
sbbb
imul
jae
adc
aad
movsl
ret
or
mov
push
aad
cmpsl
inc
add
push
push
loopne
and
lret
jne
inc
lods
mov
les
cmc
cmp
es
pop
push
adc
xor
jmp
pop
cs
pusha
jb
gs
push
add
push
pop
pop
ret
fcmovne
push
int3
call
mov
cmp
les
jae
adc
xchg
xor
out
ds
push
lcall
je
iret
pop
fidivrl
andb
mov
push
outsl
rcll
test
inc
test
inc
fisttpl
test
dec
mov
mov
lcall
and
jbe
mov
jns
add
mov
lcall
in
mov
aad
ret
bound
mov
es
das
xor
rcrl
sub
or
mov
xor
imul
repz
std
mov
out
lods
add
in
jns
inc
mov
je
mov
pop
adcb
jp
sbb
push
or
inc
pop
sub
ror
repz
push
insl
adc
adc
aaa
stos
repz
pop
das
adc
pop
cmp
inc
dec
add
adc
testb
push
lcall
jne
inc
and
fidivrs
sbb
clc
mov
xchg
out
mov
or
repz
scas
mov
cs
and
in
xlat
sbb
push
or
in
mov
sti
data16
add
popf
stc
lods
jb
fisubs
lret
mov
pop
mov
push
andb
jmp
jl
repnz
add
test
or
sti
scas
adcb
stos
in
push
fildl
mov
stos
lds
js
jbe
cs
je
data16
add
xor
outsl
inc
push
sahf
jns
xor
inc
jnp
ret
nop
mov
aaa
sub
mov
dec
cmpb
pop
rol
dec
jmp
repz
cmp
insb
sbbl
lea
xor
dec
jnp
repnz
push
mov
push
cmp
cmp
add
or
clc
sub
jp
jmp
fildl
call
fwait
cs
popf
push
fucomp
and
adc
jne
sbbl
inc
das
lret
mov
popl
in
cmp
cwtl
pop
imul
ret
cmpsb
fldcw
mov
xchg
jae
and
lahf
mov
std
shrb
push
cwtl
pushf
pop
mov
mov
sub
jmp
add
stos
shrb
mov
mov
test
push
push
movsb
shll
ds
sbb
mov
dec
add
fs
mov
cmp
cmp
pop
test
mov
movl
in
fucomp
xchg
push
add
cmp
add
testb
mov
aas
sahf
push
xchg
lods
mov
mov
iret
inc
mov
std
xor
mov
xor
mov
inc
aas
cltd
out
or
rorb
lds
out
ss
lahf
outsb
aaa
call
pop
and
push
loopne
dec
sbb
sub
daa
movsb
cmp
jecxz
mov
lahf
or
int3
cli
xchg
bound
fsubl
xor
fldt
dec
push
sbb
cltd
in
pop
lret
in
lock
jne,pn
iret
dec
fdiv
xor
fxtract
adc
pop
or
ds
sbb
dec
xchg
xor
movsb
inc
fs
inc
ds
fidivl
sbb
pop
sahf
in
cmp
sub
push
outsb
mov
xchg
mov
icebp
xchg
popa
and
jb
pop
movsb
pop
sbb
xchg
test
and
lret
out
pop
mov
popf
adc
pop
cmp
daa
sub
fdivs
ret
jmp
mov
jo
rorl
cwtl
push
mov
test
cmc
lods
cmp
sbbb
adc
jbe
fbld
cmp
rclb
sub
negb
sub
jne
adc
in
jb
mov
scas
inc
or
fucomip
add
iret
lahf
sub
or
pop
jp
decb
add
movsb
les
int
mov
ds
out
cmp
cmpsb
cmp
sub
mov
add
add
add
out
addl
add
xchg
mov
dec
orl
filds
cmp
subb
mov
imull
sbb
mov
inc
daa
fidivs
lret
aad
jno
stc
push
dec
loopne
mov
jg
adc
sub
mov
jp
lahf
or
push
ja
jp
adc
push
jno
mov
pop
cmp
arpl
xchg
addr16
push
cltd
adc
popa
cltd
mov
jg
data16
pusha
mov
adc
sbb
pop
fistpll
not
and
js
and
inc
push
inc
xchg
xchg
jp
scas
sbb
xorb
arpl
into
mov
inc
imul
arpl
test
mov
rcll
ret
shrl
fs
or
mov
ss
fsubrs
jns
mov
jo
xchg
and
push
bound
mov
icebp
mov
and
lea
mov
leave
mov
repz
inc
cmp
aad
add
or
insb
mov
mov
pop
xchg
xor
mov
ret
lods
ljmp
and
xchg
int3
push
mov
mov
aam
dec
xchg
insl
cmp
cmp
test
stos
xchg
xchg
aad
mov
mov
pop
bound
test
ds
sub
dec
sbb
lock
sahf
mov
iret
jle
shll
stc
or
push
mov
dec
scas
outsb
aam
cwtl
and
jo
push
aad
cmp
pop
insl
lahf
pop
insb
rorl
jb
cli
mov
jnp
fisubrs
ror
loop
into
stos
sarb
or
mov
testb
shlb
mov
push
jns
or
sbb
pop
daa
flds
or
adc
sahf
clc
jg
lcall
xor
dec
lods
add
icebp
int
xor
scas
dec
into
adc
into
shrl
push
in
cmpsl
ja
andl
or
inc
shrl
cltd
mov
je
testb
ljmp
mov
pop
rclb
dec
xchg
loope
cmp
ljmp
push
imul
mov
cmpsb
and
aam
stos
je
sarl
daa
cli
push
cmpsl
add
cld
nop
insl
lcall
imul
dec
dec
pop
dec
or
je
rol
test
mov
pusha
js
loopne
das
sbb
in
push
lea
mov
inc
dec
lock
sahf
ss
mov
shlb
adc
pop
push
notb
std
or
fisttps
scas
xor
mov
mov
sbb
cmc
nop
mov
cmp
loop
outsl
add
jbe
mov
push
push
sbb
mov
lods
bound
cmp
xchg
scas
ret
mov
pop
cmpsb
test
xor
mov
idivb
xchg
add
fmull
shl
enter
ret
testl
cltd
xor
ss
pusha
mov
fldl
movb
mov
out
fstl
xor
add
adc
in
test
movsb
ret
or
fs
das
fcoml
shl
adc
add
jmp
inc
mov
pop
fidivs
add
das
scas
mov
movb
mov
rcr
push
cwtl
stc
aas
mov
pop
cmp
sbb
sbb
and
gs
in
xchg
jmp
mov
hlt
call
sub
aam
cmp
insb
cmp
xchg
mov
push
pushf
lret
jg
add
incb
inc
push
pop
xchg
out
dec
add
jae
lahf
mov
push
push
lods
or
pop
iret
pop
testl
mov
xor
popa
inc
xchg
popl
icebp
mov
test
sbb
pop
and
in
mov
daa
mov
mov
mov
or
rol
cltd
jnp
dec
push
arpl
mov
push
xchg
sbb
fldenv
lcall
mov
mov
mov
push
inc
arpl
lds
jle
sub
or
in
xchg
js
cmp
fdiv
mov
push
hlt
dec
and
dec
mov
push
add
adc
sti
mov
pushf
arpl
sbb
ja
fidivl
aam
orb
movsb
sub
or
sbb
daa
inc
dec
imul
mov
nop
daa
mov
xchg
fwait
aas
mov
imul
lret
and
mov
sbb
iret
push
push
mov
pop
adc
jns
lea
ss
lods
mov
mov
outsl
adc
data16
int
mov
dec
xchg
ds
pop
pop
xor
in
ret
sub
push
or
mov
xor
lret
mov
and
test
xchg
fstpt
and
push
lods
sbb
adc
ja
mov
xlat
js
enter
out
cli
lret
pop
push
in
adc
dec
inc
xor
adc
mov
add
jl
mov
scas
pusha
mov
loope
shrb
mov
es
loopne
mov
xchg
imul
jecxz
cwtl
test
call
pop
push
dec
mov
push
xchg
mov
out
xchg
fistl
rol
xor
shl
cli
xchg
add
mov
lods
sahf
dec
jge
jle
scas
jp
push
fwait
lods
xor
out
sub
rclb
jp
lret
int3
cmp
cmp
xor
push
push
or
or
cmc
lahf
pop
pop
fs
adc
scas
jmp
add
add
sbb
jmp
movsb
push
push
icebp
sbb
push
mov
dec
jmp
xor
sub
jle
enter
sbbl
push
inc
mov
incl
cmp
xor
jns
push
pop
jbe
aas
mov
leave
and
jae
pop
mov
and
mov
loop
push
lods
pop
dec
xchg
or
fisubrs
lods
leave
xor
jb
inc
mov
sbb
xor
mov
mov
scas
adc
adc
repz
fwait
mov
data16
push
arpl
cmc
cmpb
popa
inc
push
lea
enter
scas
fistl
and
fxch
mov
add
pop
xchg
adc
pop
adc
cli
push
jecxz
lret
cwtl
inc
movsb
in
or
dec
or
mov
cmp
push
xchg
cmpb
leave
int
in
push
add
mov
push
out
sbb
dec
paddusb
inc
dec
inc
popa
jp
mov
xor
subb
inc
fmull
mov
rcrb
mov
movsb
cs
adc
dec
cmpsl
js
xorl
jecxz
in
test
cs
dec
mov
xlat
push
xchg
push
jns
sbb
xchg
cmc
and
xchg
pop
cmp
sub
aam
decl
hlt
push
inc
dec
inc
fldt
jecxz
rorb
mov
inc
or
mov
lret
xor
mov
pop
dec
dec
mov
stos
mov
inc
cltd
aad
es
and
mov
ds
testb
cmp
xchg
cld
pop
sahf
mov
imul
adc
add
arpl
sub
pushl
ret
sub
mov
pusha
jae
push
jb
xchg
out
sub
in
dec
das
aam
add
xchg
jp
and
sub
lds
daa
inc
inc
add
and
jns
shrl
clc
rolb
push
inc
std
adc
mov
dec
in
mov
insb
ja
cli
ljmp
repz
insb
pop
mov
adc
jmp
daa
popa
negl
testb
jle
pop
cli
hlt
mov
xchg
mov
inc
adc
test
push
xchg
push
push
into
std
pusha
sbb
bound
loope
aam
pop
xchg
stc
and
cmp
cmp
xchg
xchg
inc
rclb
lcall
jne
scas
push
mov
iret
test
jge
push
insl
insb
sahf
lcall
cmc
mov
push
int
icebp
sbb
leave
xor
ja
test
int3
mov
das
fdivrl
lret
cmc
sbb
shll
jnp
push
and
jnp
lods
cli
cltd
pop
dec
add
add
xlat
mov
adc
push
into
and
test
cwtl
xor
in
jge
or
lock
rclb
mov
orb
xchg
xor
jae
xchg
cld
push
or
lret
adc
dec
and
or
mov
jbe
cmp
in
test
fildl
shr
sub
mov
add
xor
cmp
push
cmp
jge
popa
fdivrl
or
iret
aas
out
lea
push
in
add
cmc
mov
xor
jno
adc
call
push
inc
or
mov
fimuls
inc
inc
xlat
jbe
push
pop
scas
sbb
mov
and
xchg
xchg
and
mov
inc
and
jp
mov
adc
cmp
jns
loope
orl
sbb
shlb
fmuls
cmc
sarl
xor
call
cmpb
add
mov
repz
lret
pop
hlt
add
push
mov
cmp
pop
fildl
das
mov
lcall
aaa
push
arpl
repz
add
aam
ficomps
push
dec
or
in
es
loop
push
iret
dec
arpl
xchg
push
sbb
popa
push
negl
ror
test
xor
sbb
movsb
or
sbb
pusha
fistl
mov
jno
outsb
inc
ja
aam
dec
push
dec
xlat
subl
sarl
pop
xchg
lret
xlat
jg
jl
pop
xchg
sub
lcall
imul
xchg
das
sub
stos
ja
fidivl
ss
cltd
pusha
lods
xor
fcoml
stos
mov
movsb
push
inc
push
fwait
mov
jp
nop
es
test
xor
jmp
mov
or
jns
addr16
in
insl
sahf
arpl
and
push
pop
and
lds
mov
jb
js
rcll
lahf
xorb
jl
push
add
js
mov
mov
es
mov
arpl
xchg
xor
mov
insl
testl
dec
loop
dec
add
in
jecxz
dec
sub
pop
imul
loope
jmp
scas
and
mov
mov
push
sub
xchg
mov
add
outsl
jns
jge
fstpl
lds
fwait
and
mov
pop
ss
adc
push
cli
rorl
push
insb
lret
outsb
clc
loope
lods
dec
pop
push
xchg
jns
outsl
cwtl
xchg
sbb
inc
dec
add
xor
fcoml
sti
or
and
movsb
sub
dec
les
mov
and
push
popf
sub
sbb
fidivs
orb
out
test
popf
xor
cmp
inc
loop
pop
mov
lea
add
inc
add
jmp
idivb
xchg
xchg
repz
scas
mov
lcall
cmpl
jmp
repnz
cmp
adc
nop
cld
mov
mov
stc
cmp
fildl
fimuls
in
data16
dec
dec
ja
mov
nop
loop
xchg
dec
movsl
jbe
mov
dec
add
pop
xchg
int3
aad
mov
xchg
push
iret
pop
in
cmp
repnz
call
dec
popa
adcl
dec
mov
xchg
pop
stos
ret
mov
dec
out
mov
push
cmp
pop
dec
jne
pop
das
or
inc
cmp
xchg
ds
outsl
mov
in
pop
pusha
cmpsb
sbb
shlb
dec
xlat
dec
loopne
in
popa
sbb
mov
mov
shlb
push
xlat
pop
pop
into
pop
jbe
jle
icebp
pop
adc
or
or
pop
mov
cmp
sub
addr16
roll
xchg
scas
cld
ror
mov
xchg
outsb
push
loopne
pushf
dec
add
aaa
cmp
xchg
dec
call
scas
jge
sbb
sahf
lret
into
aas
cmp
pushf
cmp
cwtl
fisubrs
das
cmp
movb
add
clc
mov
mov
cmp
daa
and
xchg
add
int3
les
xor
repz
jmp
xlat
cmpsb
lock
mov
xchg
pop
mov
push
nop
adc
jne
subl
pop
movsl
movsb
or
sub
arpl
aaa
shll
cmp
outsl
loop
ror
daa
add
push
mov
jecxz
pop
in
sbb
pop
cmp
adc
hlt
decl
mov
sbb
ja
fdiv
adc
sahf
lods
sub
pusha
pop
xor
add
rol
and
adc
jbe
mov
jnp
imul
mov
fs
in
mov
mov
daa
jae
pushf
pusha
loopne
subl
ret
outsl
sar
mov
incl
sub
pop
pushf
cmpsb
mov
inc
mov
inc
ret
cmp
mov
xor
or
jno
jns
mov
push
mov
cmp
in
adc
push
out
iret
repz
and
sub
mov
push
sbb
mov
xchg
into
mov
sbb
ret
pop
pop
sbb
stc
pusha
and
test
mov
mov
jmp
aaa
push
add
dec
cmp
push
ret
cmp
xor
mov
clc
sbb
xchg
lods
lret
mov
out
mov
lcall
jle
adc
lret
cmp
js
fcompl
jns
jmp
jge
sub
lret
or
fbld
xchg
fsubrl
sbb
sbb
outsb
jmp
fcoms
sub
push
push
icebp
dec
cmp
inc
mov
in
popf
jge
sbb
dec
inc
sti
movsb
imull
lret
dec
add
lea
mov
arpl
push
sub
mov
fisttpl
fisubs
lea
imul
xchg
xchg
nop
or
jb
lods
mov
dec
mov
in
arpl
aas
mov
and
xchg
add
inc
sbb
add
pushf
sbb
and
pop
pop
insl
add
leave
mov
fnstenv
test
xchg
fucomi
clc
mov
xor
es
out
testb
sub
cmp
ss
fld
inc
aaa
jbe
je
int3
dec
sarl
push
loope
jns
sarb
inc
ret
clc
jecxz
fcmovu
mov
jae
sub
mov
sub
mov
xchg
mov
cmp
rolb
insl
mov
arpl
bound
repnz
aam
jp
or
ror
repz
and
pop
or
lods
sbb
push
cmp
xor
xchg
bound
pop
add
cmpl
sub
pop
xor
inc
insb
xor
mov
push
or
pushf
jg
dec
dec
push
inc
xchg
or
mov
mov
scas
mov
negl
xor
dec
xchg
mov
testl
pop
mov
movsb
ret
es
mov
mov
movsl
pop
lcall
in
jb
repnz
mov
pop
xor
roll
cmpb
out
imul
push
sbb
mov
xlat
and
push
fwait
add
jg
and
xchg
and
mov
movsb
leave
sub
or
mov
push
leave
sbb
insb
push
mov
cmp
jmp
xchg
data16
cmp
loope
and
mov
das
icebp
mov
push
out
int3
mov
js
shr
pop
iret
jp
sahf
pop
cmp
push
in
pushf
xor
jmp
dec
xor
inc
push
jbe
pop
jae
mov
adc
adc
cmp
shrb
cmp
xor
rcll
sub
inc
mov
adc
ss
loop
jae
pusha
int
mov
xchg
aam
mov
mov
add
loope
mov
jo
sub
xlat
push
gs
and
icebp
movsl
out
xchg
jmp
add
pop
mov
inc
and
or
mov
ds
jmp
iret
xor
pop
test
jno
jne
mov
push
add
pop
mov
fnstsw
aad
in
adc
xchg
and
cmc
xchg
pop
push
and
sbb
sbb
add
mov
jl
stos
mov
incb
ret
xor
loope
sbb
call
push
rcrb
sti
imul
mov
out
jg
and
mov
add
movsl
mov
in
add
fwait
fs
std
pushf
decb
xor
jb
push
sub
cld
lcall
jbe
lds
sub
mov
lret
je
adcb
xchg
push
fmuls
sub
pop
pop
call
rolb
rcrb
mov
test
lret
cld
jmp
test
xchg
sub
popa
jg
fs
ss
jae
pushf
xor
pop
pop
inc
fmuls
cltd
ss
test
loopne
add
scas
test
cmpsb
adc
subl
dec
loop
dec
dec
mov
imul
mov
outsl
adcl
incb
lods
mov
nop
sbb
pop
push
cmp
add
out
xor
add
ljmp
cmc
mov
mov
js
dec
jno
jl
jo
fwait
shlb
adc
jno
leave
cmc
and
out
and
pop
rolb
popf
cmp
mov
lret
add
xchg
testb
xchg
mov
adc
fsubr
lcall
sbb
aaa
mov
jp
dec
add
call
in
xor
aaa
shr
inc
mov
jmp
roll
pop
insb
int
push
ja
cli
mov
cs
inc
cmp
push
out
or
lods
ret
mov
mov
lcall
loop
ret
xchg
ljmp
jns
lock
out
push
adc
data16
lcall
mov
test
jb
push
movsl
out
sub
push
xor
sub
pusha
pop
loop
lcall
movsl
int
fdivs
or
xor
pushf
daa
push
out
std
into
sbbl
pop
xchg
cmc
in
mov
sub
mov
or
xchg
pop
sahf
cltd
fdivl
out
dec
cs
adc
lds
xchg
jle
leave
xchg
and
clc
or
mov
mov
jle
or
iret
or
push
dec
out
cs
cmp
push
pop
out
cmp
cmp
xor
testl
sub
decb
jo
hlt
ljmp
dec
xor
outsb
in
repz
in
xchg
jp
adc
xor
adc
popf
dec
inc
push
movsl
jno
mov
les
in
loop
dec
pushf
jge
loop
cmp
arpl
ds
xor
sbb
push
aam
jae
repz
fsub
in
rcrl
or
das
mov
dec
sbb
push
pop
fisttps
adc
lahf
jbe
inc
xchg
dec
inc
cltd
xor
test
pop
negl
ljmp
daa
in
cmp
cmp
aad
nop
addl
imul
push
jno
lret
aas
cmp
xchg
pop
adc
or
popf
xor
push
movsl
in
dec
inc
push
icebp
sbb
push
mov
inc
fnsave
das
pop
cltd
inc
fs
sahf
pusha
test
outsb
jle
push
jnp,pt
pop
aam
lods
sub
es
in
jae
inc
cmpsb
inc
jo
cltd
cmpsl
je
iret
fnstsw
cmp
mov
inc
pop
loope
pop
ret
push
xchg
dec
lods
in
jg
push
jecxz
jno
add
test
push
jno
enter
and
fwait
sub
fcomi
sbb
and
sub
dec
rol
xchg
jne
adc
mov
aas
scas
lret
pop
mov
mov
pop
fidivl
pop
pop
dec
pop
jl
push
mov
lret
repnz
jno
push
fwait
jnp
mov
inc
mov
xlat
lods
or
sbbl
jo
popf
xchg
adc
testl
xor
faddp
out
lds
sub
pop
ja
push
test
icebp
xlat
sub
push
rorl
adc
jns
jbe
test
push
aad
test
or
mov
jp
iret
pusha
adc
fcmovb
push
stos
xchg
xor
pop
imul
pop
sub
scas
push
mov
sub
push
call
xor
scas
jns
lcall
add
push
int
ret
lret
ja
fs
cwtl
and
jb
mov
iret
pop
mov
cwtl
test
sub
xchg
mov
xchg
cmpsb
call
dec
pop
mov
sbb
insb
cmpsb
std
outsb
ss
push
pushf
mov
cli
lret
push
sub
aad
imul
nop
cmpsb
xor
movsb
lahf
lea
jle
jae
xlat
cltd
fs
jg
notl
fsubs
add
pop
loop
test
dec
or
or
iret
dec
fpatan
jl
xchg
xor
sub
fildl
adc
arpl
cltd
inc
iret
push
jo
add
stos
adc
push
add
xchg
fs
xchg
adc
mov
ret
and
cmp
adc
cmp
cmp
ljmp
add
inc
fadds
sbbb
gs
fs
sbbb
jbe
dec
mov
enter
xchg
pop
xchg
inc
sub
mov
dec
pop
xor
ror
addr16
out
mov
mov
xchg
testb
fs
push
adc
push
in
int3
dec
lods
fsubrl
ret
rorl
shrb
dec
adc
adc
in
sarb
addr16
addr16
cltd
outsb
adc
cmp
cmp
or
rorl
fidivs
loop
sub
lods
lds
inc
fiadds
jno
mov
jo
in
icebp
std
iret
sti
imull
fildl
xlat
gs
mov
inc
mov
test
aad
cmp
aam
xchg
jmp
shrb
lahf
push
scas
sbb
push
lods
scas
aas
inc
fmuls
ja
inc
scas
mov
and
fmull
jo
ficoms
ror
aas
jge
xor
rorl
adc
arpl
leave
fsubrp
cli
adc
cs
mov
std
xchg
call
mov
call
into
sbb
pop
xor
cmp
lods
jmp
jbe
in
mov
push
out
int3
jmp
dec
adc
shl
mov
and
sub
inc
in
stos
mov
jecxz
dec
inc
lods
call
adc
inc
vmovddup
loopne
cmp
jle
es
xor
pushf
scas
add
out
xchg
in
mov
loope
loop
into
out
icebp
mov
lcall
or
adc
fbld
out
jne
imul
call
test
gs
mov
sbb
jl
jo
push
nop
sub
pusha
mov
xchg
mov
cmp
mov
aad
add
jno
sbbl
sarb
popw
dec
shrb
leave
fstpt
ds
inc
ds
dec
sub
pop
sahf
out
sbb
cmp
dec
in
movntq
sbb
je
jmp
imul
inc
sbb
lods
je
jbe
inc
repnz
sti
ret
push
mov
push
fcomip
cmp
cmc
cmp
pop
jp
push
push
hlt
out
adc
enter
push
outsb
aam
mov
lods
sbb
lcall
sub
addl
ljmp
lods
jp
insb
sbbl
movd
mov
testl
clc
movsl
cmpsl
pop
sysret
scas
arpl
mov
xchg
hlt
int3
inc
roll
sub
outsl
ret
pause
mulb
or
mov
push
test
sub
lahf
dec
add
es
daa
outsb
add
dec
xor
cmp
jbe
aas
cmp
pusha
cmpsl
rclb
adc
std
jne
push
arpl
loop
inc
sub
jg
sub
fisttpll
and
push
rolb
jns
jae
pop
imul
pop
xlat
mov
lret
push
cs
inc
mov
xchg
or
adc
sub
inc
xlat
jecxz
loopne
loopne
or
jge
sub
pop
mov
movsb
pop
adc
sub
imul
push
push
jns
xor
fs
mov
mov
xchg
adc
and
aad
in
xor
aam
imul
lock
sarl
ja
sub
cmp
pop
out
inc
add
jbe
ljmp
sbb
jle
jns
sahf
mov
cmpsl
lcall
stc
push
inc
mov
jae
in
dec
shrl
repnz
dec
movsl
dec
jg
xchg
jmp
mov
xchg
das
sbb
pusha
pop
mov
mov
push
jno
cs
push
fwait
lcall
mov
std
int
xlat
das
xchg
sub
dec
mov
in
xchg
ss
pop
fwait
adc
ret
pop
je
mov
cmp
sbb
pushf
or
jae
jmp
xchg
cli
inc
clc
pop
fwait
xchg
fs
push
call
jbe
outsl
push
outsb
cwtl
inc
push
stos
or
scas
stos
jbe
or
dec
mov
and
sub
adc
cld
sub
loopne
shlb
pop
cmc
jno
mov
adc
in
mov
fildll
add
push
pushf
mov
cmp
xlat
cmp
hlt
addr16
add
mov
jno
sub
jo
add
loope
in
stos
mov
fcomp
ret
mov
jne
aad
das
outsb
cld
push
lods
xor
and
enter
cli
cs
push
test
hlt
or
mov
xor
pop
adc
and
lods
jmp
sbb
sbb
xchg
movb
rep
dec
pop
ret
sub
jne
and
sbb
dec
lock
xchg
int3
imul
jge
movsb
fucomip
dec
sub
mov
jecxz
fcompl
cmp
shrd
push
and
sarl
push
lahf
dec
rcr
xchg
mov
pop
dec
fwait
add
es
cwtl
push
or
or
ret
cmpl
jb
int
and
jge
push
inc
popf
mov
lahf
add
andb
dec
mov
stc
sub
dec
ret
cltd
sbb
cmp
pop
out
ret
push
or
mov
push
mov
pop
fnstsw
xor
int
mov
das
dec
xor
jae
outsb
int
or
aaa
pop
xlat
jmp
xor
mov
clc
out
dec
fsts
mov
cmpsb
and
repnz
jae
mov
push
mov
int
push
mov
jp
popa
mov
fnsave
inc
jg
sub
leave
jbe
inc
std
mov
into
inc
insb
aad
gs
sbbb
push
in
mov
mov
and
rclb
jl
add
repz
pop
cmp
scas
add
icebp
and
mov
xchg
in
shll
adc
push
push
loope
subb
add
cmc
sbb
push
inc
jbe
dec
dec
clc
iret
stc
fcomp
push
adc
outsb
push
jo
sub
mov
and
mov
or
stos
adcl
leave
out
and
cli
sbb
cmc
ret
sub
pop
jae
lret
aad
clc
inc
cmp
testl
mov
jb
cmp
add
jo
and
sbbl
js
jmp
es
jmp
xchg
je
sahf
lea
popf
xor
or
test
les
mov
sahf
popa
add
int3
das
jns
fidivl
into
pop
sub
mov
jbe
sub
pop
jmp
push
mov
add
sub
cmp
mov
cltd
cld
je
in
test
and
and
inc
fldcw
iret
xor
clc
jp
xchg
xchg
mov
sbb
mov
jle
movzbl
sbb
push
mov
nop
lahf
js
xchg
call
sar
jp
mov
enter
not
test
push
add
mov
sbb
outsb
mov
int
js
ficoms
pop
shrl
sti
popl
mov
cmpb
jns
jge
inc
mov
es
adc
lret
les
arpl
push
gs
out
push
cmc
stos
inc
fistpl
xchg
popa
mov
cmp
jecxz
neg
push
fs
mov
jle
and
repnz
pop
aam
push
mov
shlb
sub
cmp
push
mov
mov
int
pop
jmp
pop
imul
add
jns
fistpll
shll
inc
inc
xor
loopne
sub
adcl
mov
addr16
cmp
addb
xlat
xchg
inc
call
roll
icebp
dec
push
xor
in
fnstsw
jbe
lcall
call
dec
es
int
jle
pop
jnp
cmp
add
cmpsb
movsb
fwait
dec
loop
xlat
mov
and
push
sub
ret
in
repz
cmovle
dec
stos
inc
jg
pop
xorb
xor
push
inc
stos
and
mov
and
inc
sub
push
push
stos
ja
add
enter
jmp
hlt
adc
cli
sub
lret
mov
sbb
inc
repz
clc
and
cmp
movsb
and
lret
cs
mov
test
dec
pushf
and
decb
sahf
rorl
sbb
mov
pop
sti
out
push
divl
jmp
mov
aam
mov
jo
sti
mov
cmpsl
xor
sub
aad
dec
add
add
jne
push
flds
xchg
fs
or
loopne
js
cmp
mov
mov
xchg
movb
add
push
sar
add
ljmp
psadbw
sbb
fcmovu
jecxz
fs
sti
mov
fucompp
aas
push
popa
cmp
testb
in
outsb
pop
rcll
and
iret
es
mov
cmpsl
pop
les
int3
sub
push
dec
cmp
cmp
adc
mov
in
mov
mov
scas
dec
lds
ss
fdiv
xchg
xchg
stos
mov
or
leave
jnp
adc
fisubrl
fbstp
scas
fs
cmp
lds
arpl
pop
pushf
sarb
int3
dec
adc
test
outsl
pop
jne
mov
ja
push
aad
popf
insl
rcrl
mov
ds
int3
jmp
mov
imul
das
pop
testl
cmpsb
dec
push
sbb
xor
push
inc
push
mov
inc
sti
and
lods
cs
pop
cmp
pop
sahf
lods
lds
jbe
pop
dec
push
je
mov
mov
inc
cmpsl
mov
negl
jp
dec
lahf
inc
std
add
outsb
adc
or
cltd
divb
push
xchg
xor
add
cmpsl
xchg
mov
add
adc
dec
mov
mov
push
dec
jle
mov
pop
and
pop
andb
fidivs
ret
loope
gs
int
into
test
movsl
pushf
lods
fistps
add
inc
sub
dec
int3
arpl
mov
add
fcoml
pushf
stc
pop
mov
mov
outsl
push
push
ljmp
jno
sub
cli
pop
xchg
mov
push
mov
out
mov
push
cmc
fs
sbb
push
jb
sub
mov
xchg
and
andl
inc
int
aas
lahf
xor
aad
lret
jb
icebp
ds
je
je
lods
outsb
mov
pop
inc
aas
mov
ret
cltd
xorl
push
sub
shl
or
mov
dec
dec
lcall
xchg
enter
cmp
add
or
adc
dec
in
aaa
inc
lret
cmp
arpl
sarl
rcrl
popa
adcl
insl
aam
push
dec
adc
popa
adc
mov
mov
fs
movb
ss
lret
test
shlb
into
inc
out
sbb
adc
test
pop
inc
jne
xchg
adc
inc
mov
out
das
icebp
jnp
inc
pop
adc
cmp
mov
fisttps
xor
inc
mov
and
les
lods
cli
xchg
and
cltd
pop
mov
out
ret
imul
push
mov
in
repnz
adc
xor
gs
insb
inc
pop
xchg
jne
sub
test
or
leave
pop
dec
lret
adc
je
xor
cmpsl
sbb
lret
add
dec
pop
adc
adc
and
or
dec
cmpsb
sub
inc
loope
shll
dec
add
push
mov
xchg
mov
aad
repz
dec
add
jns
loope
mov
lds
call
pop
sarb
hlt
js
loopne
jo
out
jmp
cmp
mov
iret
push
inc
add
fildl
xchg
test
inc
call
sbb
pop
out
call
dec
cmp
loop
pop
rcrb
xchg
push
or
cmp
dec
fwait
inc
adc
loopne
insb
or
test
dec
mov
cmp
jae
mov
popa
not
push
cmc
insl
jmp
cmp
or
stc
nop
adc
mov
jecxz
aad
adc
mov
incb
add
es
mov
lahf
scas
inc
shrl
mov
dec
pop
adcl
or
adcb
lods
cmpsb
cmpsb
in
pop
pop
or
dec
test
mov
idivb
or
jl
xchg
and
insb
movsb
jnp
cmp
add
cli
mov
and
sti
clc
rol
bound
fwait
or
jmp
or
xchg
insl
les
ljmp
int3
mov
xor
leave
pusha
std
push
rcrb
out
mov
xor
movsb
fadd
pusha
jp
ds
pop
sarb
in
ds
cli
sbb
fwait
jb
push
in
test
push
cmp
std
outsl
or
mov
sbb
jns
movsb
cld
xchg
loope
sbb
cmp
jns
hlt
pushl
push
mov
push
mov
lea
test
test
xor
push
xor
pop
or
dec
pop
stos
cs
mov
gs
ror
mov
aad
loopne
gs
imul
jbe
sub
sub
pop
xchg
cmp
mov
imulb
mov
push
sub
sub
jp
lea
fildl
push
rorb
adc
dec
lcall
popa
add
fnstenv
inc
xlat
sub
xchg
push
mov
lock
pop
pop
push
mov
xchg
jo
and
pop
push
and
fdivr
loopne
sub
mov
fadd
scas
sub
jp
lds
and
insl
bound
inc
data16
in
imul
mov
mov
leave
xchg
xchg
sub
sbb
data16
movsb
push
shr
test
sbb
jmp
lock
xchg
cmp
mov
xor
push
adc
xchg
jne
cmp
xor
jp
in
outsl
imul
cmp
xor
sbb
mov
or
push
adc
and
mov
clc
out
jle
int
insl
mov
adc
inc
push
add
add
cld
push
ss
fsubl
sahf
test
sahf
and
mov
inc
insb
lods
jmp
sub
xrelease
jge
cmp
inc
jnp
jmp
out
and
mov
jo
jle
xchg
icebp
lahf
cmpsl
mov
pop
rclb
pop
popa
aaa
push
rol
repz
or
movsl
sbb
push
ss
adc
jmp
icebp
mov
xchg
xchg
dec
loop
loope
sbb
dec
mov
xor
inc
xor
xchg
test
add
cmp
dec
fildl
arpl
aas
adc
push
and
sbb
ret
fsts
dec
js
test
or
std
or
add
inc
fisttpl
inc
call
mov
push
cmp
inc
icebp
insl
aam
daa
out
push
data16
addr16
mov
dec
dec
fiaddl
popf
mov
loopne
or
dec
pop
mov
movsb
mov
stc
jge
in
bound
push
js
je
sbb
mov
push
mov
cmp
sub
dec
xchg
xor
notl
gs
mov
lds
cmp
shrb
lahf
jae
jecxz
shll
xchg
pop
repnz
loop
nop
in
leave
adc
mov
mov
mov
outsl
push
mov
sbb
out
mov
mov
pop
adc
test
in
xchg
push
mov
lret
lods
popf
stc
sub
rclb
in
pop
push
mov
push
xlat
test
xlat
sub
fldl
sbb
jge
xchg
adc
imul
mov
cwtl
in
ss
stos
int3
pop
out
cmc
subl
mov
outsb
jb
icebp
pop
aam
mov
or
ds
or
sbbl
cmp
idivb
enter
test
decl
mov
pop
ja
jne
or
ffreep
call
js
sbbl
or
mov
jl
movsl
sbb
adc
lods
ret
gs
icebp
mov
arpl
lods
mov
cmp
lcall
and
and
int3
cld
jns
stos
add
xchg
fcmovb
cwtl
cmp
sub
push
and
pop
hlt
arpl
test
enter
dec
mov
fsubrl
xor
and
loope
inc
addl
fisttpl
mov
fsub
pop
mov
cs
inc
fildl
xlat
outsb
loope
pop
ds
or
outsb
pop
inc
je
js
testb
sarl
xchg
fildll
cmc
test
inc
fiaddl
clc
xor
cwtl
andl
xchg
in
nop
fadds
mov
add
and
adc
addl
aas
and
mov
dec
testl
sub
or
mov
dec
jb
stos
and
mov
loop
aam
pop
repz
pop
cmc
cmpsl
jp
adcl
aas
nop
mov
lret
outsl
mov
xchg
and
mov
dec
push
sub
stc
lods
lods
sbb
out
clc
cmp
pushf
divb
jno
ljmp
icebp
pop
mov
out
dec
in
pop
loop
mov
mov
out
mov
xchg
or
dec
jle
jg
inc
adc
add
pop
clc
jb
xchg
cs
xchg
push
fs
scas
mov
fidivs
or
jle
xchg
aas
mov
pop
scas
adc
pop
mov
jns
sbb
fwait
adc
and
movb
notl
daa
or
cmp
mov
js
adc
inc
xchg
mov
xchg
sbb
mov
cmp
mov
lret
sub
jae
xor
mov
sti
xchg
ret
outsl
jno
or
dec
cmpsb
dec
pop
jns
in
pop
cs
setle
push
xor
lcall
inc
jnp
mov
and
pop
jnp
push
sbb
xor
outsb
mov
aam
das
sbb
aad
sbb
data16
or
and
sub
sub
add
negb
adc
push
jmp
ja
sub
mov
test
out
aaa
and
dec
lods
mov
cmp
adc
jecxz
and
sbb
adc
jne
push
cmp
gs
nop
into
cmp
jbe
lcall
lods
in
fisttpll
in
out
sbb
lods
add
loopne
xchg
aas
pop
fdivl
add
and
scas
sub
mov
sbb
dec
js
aas
stos
cs
and
push
imul
pop
mov
mov
gs
push
push
cmpb
test
ficomps
fsincos
push
push
pop
add
lods
jmp
push
movb
mov
jae
dec
dec
test
pop
fisubrl
fsubrs
imul
or
leave
mov
movsl
cld
ja
mov
out
inc
add
cmp
push
int
icebp
das
sub
scas
push
subl
cmp
dec
adc
mov
sbb
movsl
rorb
push
lods
cmc
push
mov
outsb
dec
and
outsl
dec
pop
mov
or
add
inc
sbb
sbb
add
addr16
shrb
popa
aad
fcmovnbe
ret
outsl
jb
mov
sub
daa
or
inc
mov
add
jle
jl
andb
inc
mov
fs
out
int3
mov
incl
and
jb
mov
int3
jge
jnp
cli
test
adc
dec
std
inc
xor
mov
subl
cmp
in
sub
fwait
repnz
jle
mov
pop
pop
sub
shrl
sbb
mov
mov
int3
test
in
xor
shll
sbb
pop
cwtl
xlat
pop
cltd
inc
lcall
out
out
inc
and
adc
jns
or
je
pop
int3
mov
mov
adc
xchg
inc
pop
shrb
outsl
pop
lcall
das
mov
out
mov
jg
cmp
enter
mov
dec
push
adc
adc
add
xchg
orl
cltd
and
mov
jl
and
ret
jmp
dec
ret
data16
dec
xor
xchg
arpl
xor
aam
lea
cli
inc
sldt
loope
fmuls
xchg
push
mov
std
jmp
ljmp
daa
mov
jg
icebp
dec
adc
rorl
shll
pop
jl
jns
cmp
repz
stos
mov
movsl
gs
mov
icebp
mov
sbb
or
push
insl
adc
bndstx
xor
ss
mov
pop
mov
push
cs
jmp
xor
in
lds
aad
add
ljmp
dec
add
push
in
rcll
fadd
mov
pop
cmc
mov
mov
call
sahf
cmpsl
cmpb
movsl
dec
dec
loopne
repnz
in
das
lds
dec
in
adc
imul
push
out
mov
inc
mov
out
ds
inc
xor
adc
and
aad
fdivrs
jmp
and
jecxz
out
sub
sub
in
cli
lahf
cs
rcrb
jecxz
repz
adc
cmp
loopne
cmp
out
nop
repnz
insl
int3
nop
mov
shr
enter
incl
adc
push
adc
lahf
xor
or
frstor
ret
or
dec
dec
and
mov
popa
loop
sub
inc
mov
adcb
xchg
jp
mov
sti
notb
repnz
mov
add
enter
jecxz
mov
dec
ja
cmp
lods
je
xor
stos
push
bound
push
jns
int
fidivl
jmp
mov
inc
test
fwait
test
pusha
and
cmpsl
and
stos
mov
lahf
dec
hlt
sub
and
add
lret
outsl
movsb
fs
int3
mov
xchg
xchg
and
in
mov
into
mov
js
add
sbb
mov
sti
call
and
jae
push
and
scas
sbb
sub
test
in
adc
jg
int
jno
arpl
lea
aas
movsb
outsb
jle
ss
lcall
in
fwait
je
ret
pop
or
out
cmp
jge
test
push
inc
scas
adc
or
mov
cmc
out
jmp
add
or
sbb
test
or
inc
out
xor
fs
xchg
jnp
loope
pop
pushf
mov
mov
mov
sbb
adc
add
or
xor
cli
dec
shll
mov
fs
adc
sbb
add
or
inc
add
mov
dec
cmp
dec
and
hlt
fstpt
or
mov
mov
add
test
and
es
mov
loope
cmp
or
push
cwtl
sti
push
fcomps
dec
mov
shl
pop
mov
inc
add
xchg
mov
int3
fists
xor
fadds
mov
or
cmpsl
adc
add
sub
lods
rolb
notb
mov
iret
lea
push
inc
repz
out
and
mov
inc
jbe
jbe
js
cwtl
rorl
imul
jae
pop
push
xor
and
insb
sti
mov
ss
clc
call
lds
or
sub
xchg
mov
lea
call
xchg
pop
push
mov
rorb
in
test
xor
rclb
cmp
push
jge
ds
stc
add
mov
or
push
add
dec
xchg
lcall
pop
clc
and
sbb
adc
dec
pop
popf
inc
data16
out
movsl
push
lcall
push
outsl
out
dec
clc
lahf
repnz
dec
add
out
and
cmp
push
mov
pop
fbld
pop
sarl
xchg
shlb
xchg
icebp
jnp
mov
cmpsl
addr16
ret
inc
mov
add
inc
scas
and
pop
pop
mov
push
ss
jmp
xor
and
adc
scas
cmc
es
mov
test
adc
mov
or
gs
enter
sbb
sbb
mov
mov
fisttpl
dec
subl
ficoms
stos
inc
jae
adc
mov
int3
mov
mov
outsl
enter
adc
add
es
jae
sti
xchg
enter
mov
pop
and
testb
pop
dec
adc
call
pop
dec
pushf
pusha
in
stos
iret
jbe
xlat
rclb
mov
adc
pop
fistps
lea
sbb
inc
xor
dec
stos
movsl
mov
mov
shlb
popf
aas
fdiv
lahf
stc
imul
push
jb
repnz
ret
xchg
out
in
iret
mov
xchg
xchg
test
pop
ret
shrb
push
mov
mov
sub
mulb
jo
pop
jmp
mov
fisubrs
and
jns
aaa
cmpsl
lret
add
shr
lods
pusha
adc
jg
stos
fnstenv
je
outsl
jnp
xchg
clc
mov
adc
ret
stc
push
in
dec
ds
scas
test
bound
outsb
dec
push
sub
cmc
fs
push
fadds
xchg
pop
jmp
pop
sub
fisttpll
in
sbb
xchg
les
fidivrs
pop
or
repnz
lea
sti
sub
jmp
push
sbb
cmp
inc
push
sbb
sbb
jg
lret
sbb
dec
sbb
decl
test
movsl
xchg
in
xchg
test
adc
pop
out
push
in
lods
jbe
lret
or
dec
sub
call
fwait
add
cld
jae
or
daa
jg
shll
test
add
mov
or
pop
push
mov
into
jo
jns,pn
xchg
and
xor
dec
cmp
movsb
aaa
and
lds
loope
jbe
add
cmc
in
jno
mov
loope
and
mov
aam
sub
add
loope
pop
xchg
add
lods
pop
testl
sbb
lcall
add
loope
xchg
or
sbb
pop
jns
lcall
test
mov
inc
or
iret
jle
sbb
jmp
mov
xchg
cmp
xor
iret
lret
pop
in
jg
arpl
mov
scas
mov
loopne
shrl
push
sbb
loop
dec
and
orl
jge
jle
in
js
sub
scas
ret
or
jo
sbb
nop
leave
ret
cs
push
test
repnz
mov
das
fstl
clc
jae
in
lret
inc
pop
pop
or
jg
pop
iret
mov
icebp
imul
sbb
stc
jle,pt
cmpsb
les
subl
and
out
mov
jae
fldt
xchg
in
loopne
mov
add
cmp
sub
and
dec
jne
sarb
inc
out
std
mov
fidivrs
lock
or
xor
lods
xchg
scas
into
push
mov
dec
jge
lds
outsl
cmp
mov
sub
cmp
sbb
jmp
or
cmpsb
in
nop
xchg
inc
dec
inc
js
xor
in
adc
outsb
enter
mov
push
push
xor
jecxz
out
dec
hlt
lret
dec
cmp
or
add
push
mov
pushf
pop
or
movsl
mov
sbb
aam
mov
loop
addl
mov
pop
mov
shrl
test
lods
fwait
adc
jmp
stc
cmpsb
hlt
rcrb
in
test
shll
sti
repnz
loop
add
inc
pusha
addb
ffree
iret
cli
dec
jbe
test
and
cmp
jae
iret
pop
daa
scas
test
mov
mov
xor
dec
jno
aas
add
and
shll
int
add
test
mov
jmp
imull
xlat
mov
jb
cwtl
add
mov
out
and
mov
cmpsl
in
jmp
sbb
sub
mov
dec
lahf
jge
push
test
pop
subl
jne
into
fisubrs
mov
test
in
jmp
push
inc
loopne
xor
cmp
mov
jbe
ds
dec
cwtl
inc
jnp
rcrl
loope
or
jecxz
sbb
pop
jnp
rolb
aaa
stos
aaa
jae
pusha
mov
jle
lret
hlt
insl
or
test
or
mov
xor
sarb
aam
loop
hlt
fisubs
es
imul
les
popl
outsb
cmc
sbb
push
fisubl
dec
lret
adc
sti
ud2
jae
fs
sub
pop
sbb
lea
dec
inc
xor
sub
aad
sbb
dec
pop
les
xchg
in
push
mov
fists
dec
outsb
hlt
lea
cmpsb
adc
adc
mov
push
add
xor
test
cs
mov
add
cmp
xlat
mov
neg
jecxz
enter
in
lcall
pop
test
add
stos
cmpsl
dec
in
adc
outsb
cmp
jle
jmp
add
stc
and
inc
notl
sub
gs
jb
jle
in
popf
add
dec
jbe
sub
test
das
xor
mov
cmc
sarb
pop
or
pop
jg
lods
pop
sub
push
ljmp
inc
mov
bound
in
sub
jnp
loopne
enter
cli
sbb
adc
dec
pop
lock
stos
inc
dec
lcall
je
fisubs
lods
leave
shr
mov
mov
add
jo
enter
ds
xor
fists
push
fimuls
test
jp
sub
mov
mov
jp
or
ret
add
fisubs
xor
lcall
jne
jg
cs
push
popf
fs
ja
and
xor
scas
mov
les
xchg
fs
je
mov
in
sahf
in
and
lds
pusha
or
imul
pop
bound
jae
adc
mov
or
int
push
sub
or
aas
jno
inc
data16
jns
push
mov
sub
test
lret
mov
sahf
fistps
movsl
mov
push
inc
inc
enter
xor
fsubl
aas
dec
mov
arpl
adc
mov
lret
test
jg
sub
mov
fisttps
rcll
cmp
sbb
dec
idivb
sbb
jge
mov
sbb
push
jo
icebp
push
sub
push
clc
mov
aaa
push
fbld
movsb
lock
add
cmpsb
push
inc
fistps
jae
sahf
or
dec
sbb
pop
mov
bound
xor
punpcklbw
inc
cwtl
adc
jp
dec
jecxz
mov
leave
frstor
addr16
sbb
lret
iret
push
ja
mov
or
push
mov
inc
inc
aam
lret
or
xor
repnz
arpl
lea
push
dec
dec
push
mov
add
pop
mov
mov
insl
in
leave
lock
adc
pop
push
add
pop
in
outsl
test
imul
fs
gs
popa
add
and
dec
lods
inc
jle
ffree
scas
dec
xchg
push
movsl
cmp
jns
mov
repz
push
jle
rorb
and
sbb
cmpsl
testb
jle
popa
jle
scas
dec
mov
add
adc
xor
es
enter
out
sub
or
clc
nop
or
cld
mov
xor
fcomip
push
cmpsl
sub
pushf
or
add
or
jmp
inc
push
cmp
dec
mov
xchg
hlt
iret
mov
push
push
push
xchg
aas
aas
fstpl
xor
lock
xor
xchg
mov
cwtl
movsl
aaa
or
push
add
pop
mov
lcall
lea
lret
pop
lods
outsl
mov
jle
stc
mov
dec
cmp
mov
dec
dec
jecxz
lods
cmp
sbb
cmpsl
inc
stos
icebp
out
cli
std
inc
push
loopne
pusha
add
push
lods
repz
ja
fwait
push
movsb
testl
and
or
stc
or
sbb
ss
mov
movsb
sti
mov
cmpsb
xchg
jp
data16
sbb
jge
jg
mov
outsb
mov
dec
loopne
movsl
outsb
and
dec
mov
sbb
sbb
push
cmp
mov
aam
xor
mov
sbbb
aam
imul
out
pushf
aas
jns
scas
and
fiadds
pop
adc
ja
mov
sub
popf
pop
cmp
int
in
dec
loope
loope
cs
arpl
pushf
cmp
mov
les
jno
fidivl
xchg
inc
movntq
out
jg
sbbb
lcall
and
jnp
cli
xor
or
xchg
mov
icebp
lahf
lock
mov
mov
stos
mov
xor
int
dec
pusha
adc
mov
aas
pop
mov
mov
or
cli
imul
pop
jge
pop
xchg
mov
in
or
and
pop
push
xchg
xchg
add
imul
mov
mov
sahf
dec
and
xchg
bound
and
jnp
cmp
push
dec
jecxz
icebp
push
test
ljmp
sub
xor
js
xor
lcall
push
aad
fucompp
loope
bound
add
aaa
add
mov
pusha
sub
cmpsl
adc
adc
add
mov
pusha
sub
pop
add
imul
xor
xchg
outsb
mov
pusha
aad
mov
test
inc
jecxz
and
scas
aas
xlat
repz
mov
pop
insl
cmpsb
adc
pop
xchg
add
inc
int
inc
mov
pop
jp
xchg
add
fwait
in
sbb
out
fstpl
sub
and
fildll
or
mov
orl
scas
mov
adc
jg
fsubrs
inc
lret
cld
push
imul
lahf
out
cmc
loopne
lret
cmp
push
int3
sbb
mov
inc
inc
mov
lret
je
mov
nop
push
mov
fdivrs
or
movsb
test
pop
mov
in
xchg
ja
xor
sub
lcall
stos
loope
mov
rclb
pop
dec
decb
xor
test
dec
xor
popaw
in
dec
leavew
mov
pop
sti
mov
in
mov
xchg
or
cld
pusha
push
pop
add
dec
add
lods
pop
pushf
gs
add
movsb
jmp
fsubr
call
or
popa
xor
pminub
mov
xchg
andl
and
lds
xchg
ljmp
es
and
shlb
mov
subl
rcll
cmp
lods
out
xchg
ss
leave
jae
or
ret
adc
outsb
loope
cli
js
setg
insb
add
pusha
iret
gs
mov
adc
pop
xchg
push
fwait
push
jae
cli
imul
es
fs
and
movl
xchg
push
add
sub
pop
mov
cld
pop
inc
or
pusha
jne
pop
in
das
xchg
out
int
out
cli
mov
enter
add
mov
push
lea
lcall
inc
mov
movsb
jle
das
cwtl
sbb
dec
les
aad
pop
cmp
test
pop
jl
mov
sti
adc
xor
mov
push
jo
jl
clc
lods
outsb
jle
jo
jg
ret
imul
call
jbe
mov
decb
repnz
lahf
stos
clc
loop
push
and
mov
sub
test
mov
sarb
pop
or
mov
sbb
xor
xor
inc
std
mov
stos
pop
push
mov
mov
add
adc
push
daa
daa
cmp
aad
test
mov
xchg
ljmp
es
sbb
xor
sub
push
sub
add
lahf
push
dec
fidivs
repnz
fisubrl
roll
stc
stos
shrb
sub
mov
mov
out
mov
loop
ret
les
leave
xchg
bnd
fdivl
lds
push
adc
xlat
xchg
or
lods
cmc
push
mov
outsl
xlat
xor
stos
mov
adc
popf
push
inc
jbe
mov
sub
jns
popf
ret
push
adc
and
adcb
add
sub
testb
in
add
call
sub
sbb
repz
mov
lcall
mov
adc
jb,pt
in
sahf
pop
cmc
inc
or
outsb
adc
popa
fbstp
call
add
cltd
jbe
fwait
inc
das
pop
cltd
push
inc
lds
repz
jecxz
sbb
cmp
stos
inc
adc
arpl
xchg
pop
out
sbb
jg
mov
cmp
imul
pop
inc
mov
inc
shlb
mov
fdiv
cltd
mov
push
and
leave
and
or
es
aas
lcall
push
adc
jmp
mov
in
test
out
xchg
adc
addr16
testb
addl
aad
decb
adc
es
prefetch
or
pop
add
sti
mov
aas
jo
xor
shll
fisubrs
cmc
push
jl
lahf
fs
iret
sbb
sbb
sub
movl
lock
stc
mov
shlb
cmp
data16
pop
stos
push
jae
adc
in
mov
test
sbb
repz
sahf
and
xor
sti
dec
push
cwtl
daa
cmpsl
mov
cmp
and
bound
ljmp
ljmp
shll
add
add
out
mov
std
inc
aas
insl
jbe
cltd
mov
mov
test
jo
push
cs
xchg
clc
arpl
mov
aad
cmc
and
sub
sti
sub
dec
adc
push
lods
cmovbe
push
adc
cli
pop
test
fistps
rolb
arpl
mov
imul
sbb
pop
outsl
mov
shlb
seto
xchg
mov
out
push
pop
push
jp
clc
je
jge
cltd
andb
jmp
iret
out
mov
jo
cmp
std
dec
inc
pop
popf
xorb
sbb
inc
inc
int3
jg
loope
pusha
xchg
jecxz
mov
lods
dec
sub
ja
faddl
scas
xchg
add
int
ja
movsb
clc
daa
sub
shrb
push
std
popl
imul
test
xchg
jbe
and
fcoms
inc
dec
bound
cld
pusha
jnp
cltd
mov
lret
push
out
inc
popa
shl
jbe
fwait
adc
arpl
cmpb
leave
mov
sub
ljmp
fwait
and
out
loopne
popf
sets
xor
inc
es
montmul
cmpsb
xchg
sub
or
aad
dec
mov
aam
es
hlt
push
and
xchg
faddl
fsubr
mov
adc
push
inc
pop
mov
pop
in
push
sbb
sahf
scas
rcrb
and
mov
mov
sub
orb
jp
mov
int3
es
arpl
adc
jno
jl
sbbl
movsb
jnp
xor
add
adc
lret
aad
jns
sbb
mov
cmp
xchg
sbb
dec
jecxz
jl
sbb
or
add
orb
loop
and
test
fidivs
sub
or
cltd
std
clc
mov
sbb
rcl
sub
xchg
mov
daa
and
repz
popa
add
popa
data16
cmp
pusha
sbb
dec
addl
adc
aas
lcall
dec
lret
mov
fsubrl
push
xchg
xchg
cmp
xchg
orb
outsl
push
lods
pop
add
adc
dec
fisubrs
loop
sub
jo
imul
jns
ret
addr16
mov
push
sarl
inc
mov
fisubs
xchg
stos
inc
cmpsl
sti
adc
xlat
testb
cmc
or
in
lahf
sti
sub
sub
push
jnp
popf
dec
xor
pop
mov
data16
test
mov
leave
add
mov
push
das
int3
push
push
inc
lds
cmp
jecxz
push
xchg
test
sbb
cli
adc
imul
adcb
adc
gs
and
xchg
aas
aad
inc
sub
negb
imul
xor
jbe
push
pusha
clc
aas
jns
pop
pop
pusha
jg
push
rcrl
jo
lret
adc
fcomps
pop
out
or
movsl
mov
rorl
xchg
and
fmull
sahf
push
xchg
loopne
lds
xchg
out
loopne
mov
cmc
lods
inc
fstpt
lret
xchg
dec
in
pushf
popa
xor
mov
or
lods
or
dec
push
xchg
sub
imul
mov
addps
jno
sbb
xor
jg
rcl
mov
jno
xor
pop
call
dec
inc
push
ja
xlat
loop
sub
jno
in
push
imul
mov
or
clc
addr16
shl
dec
push
pop
repz
xor
mov
pop
in
mov
sbb
mov
stc
out
inc
int3
hlt
add
pop
push
outsl
or
pmaxub
gs
xchg
and
jo
lods
dec
ficoml
aam
sbb
lcall
or
sbb
jne
lock
mov
dec
push
loope
insl
or
and
adc
push
dec
lds
shll
adc
cmp
inc
inc
inc
push
pop
inc
out
cld
outsb
adc
pop
out
mov
hlt
dec
sub
int
fbstp
dec
jecxz
mov
rcl
cmc
push
and
jg
cmpsb
inc
fdivl
inc
and
xchg
push
sbbl
xor
push
push
in
cmp
aas
sbb
adc
mov
in
lret
in
xor
rcr
je
push
jbe
loop
mov
pop
aam
lock
ljmp
fmull
sbb
cmpsl
bound
pop
push
fs
dec
clc
rorl
xchg
mov
cmp
xchg
dec
fs
sarl
pop
and
je
and
mov
mov
add
ss
fistpl
loope
adc
jmp
or
sti
pop
cld
push
outsl
addl
stos
shrb
jge
pop
hlt
jle
add
jae
cmp
aas
aad
cmp
stos
add
pop
jo
push
out
int
aaa
push
ret
mov
pop
dec
xor
or
mov
push
ret
idivb
outsb
push
cmp
push
aaa
jae
inc
dec
mov
mov
sub
inc
xlat
jg
fucomp
push
sub
sbb
pop
sub
in
call
jl
adc
daa
pop
sti
adc
pop
in
gs
mov
xchg
xchg
ljmp
and
mov
inc
imul
sbb
push
add
mov
dec
pop
mov
push
ljmp
ret
cli
inc
imul
rclb
gs
out
mov
adc
loope
outsb
sub
aam
xlat
outsb
in
sub
push
inc
clc
jae
std
fs
cs
mov
and
dec
inc
mov
pop
daa
int3
fimuls
sub
jae
xor
xor
or
jg
ja
imul
loopne
int3
imul
in
mov
sahf
aad
fisubrs
cmp
into
mov
push
inc
push
mov
jg
mov
xor
push
imull
fdivl
adc
cltd
test
or
test
testb
in
xchg
andb
push
jno
sbb
xchg
lret
push
mov
fucomi
pop
xlat
aam
outsb
sub
cltd
popa
inc
mov
mov
and
push
cmp
pop
lret
fwait
adc
adc
aam
fisttpll
sub
bndstx
dec
fwait
xor
insb
xchg
inc
lds
in
lret
cld
mov
pop
enter
pop
gs
jp
sarb
mov
jb
jmp
pop
xchg
ljmp
push
mov
mov
shlb
push
popa
mov
pusha
movsb
loop
rolb
gs
and
repnz
cmp
dec
in
lcall
mov
add
push
inc
in
rclb
stos
pop
and
add
cmp
xchg
mov
arpl
and
or
loop
inc
push
pop
sti
push
push
or
sbb
ret
or
push
xchg
jnp
mov
mov
sub
out
mov
notl
dec
hlt
and
xchg
mov
mov
lret
in
cmpl
xor
sbb
aad
or
or
xlat
add
or
push
xchg
jbe
cli
fstpl
jo
pop
or
clc
xor
jb
sbb
pop
push
or
xor
je
outsl
mov
mov
mov
call
cmp
jle
dec
push
mov
out
jbe
jmp
dec
fisttps
pop
lcall
push
cs
fnsave
adc
sbb
aam
xor
cltd
cltd
xor
push
mov
shlb
nop
les
outsb
jmp
inc
arpl
inc
xor
mov
jb
mov
jbe
xor
lea
shrl
popa
nop
mov
popa
icebp
dec
mov
ret
pusha
push
or
inc
fdivrl
adc
pushf
es
push
mov
lahf
cmp
pop
ret
sbb
pop
in
xchg
movsb
jle
loop
adcb
lock
xchg
mov
int
or
add
jecxz
jno
lds
adc
xor
jno
cmc
inc
or
adc
lods
insb
movsb
adc
mov
inc
cmp
jb
mov
mov
out
cld
pop
push
push
mov
lcall
fs
xchg
mov
popf
daa
notb
dec
cmp
lods
xchg
loop
shll
sub
add
xor
pop
outsl
jnp
push
push
xchg
push
js
xchg
pop
cmp
popf
jmp
rcrb
in
or
enter
dec
or
mov
jne
dec
cmpsl
and
mov
fistl
fnsave
mov
ret
pop
and
xorl
mov
fsub
rorb
pop
int
sub
shr
test
xchg
lods
xor
adc
and
cmpb
sub
dec
jbe
jae
mov
cmp
loop
loopne
and
sbb
movsl
cmp
xchg
imul
xlat
xchg
dec
push
lods
inc
push
mov
lea
test
add
push
test
mov
arpl
jp
jg
mov
mov
test
add
adc
sbb
sbb
cltd
xor
and
sbbl
cmp
inc
stc
rcr
adc
and
sub
stc
push
inc
xor
das
jne
inc
pop
push
xchg
dec
dec
fwait
int
or
add
jmp
decb
xorb
sbb
ret
mov
je
adc
push
cld
pop
adc
sahf
mov
pop
xor
scas
les
negb
jo
sub
jbe
rol
test
ret
jmp
aad
and
mov
in
stc
push
push
sub
jl
inc
dec
or
or
das
ret
dec
ficoms
xchg
nop
push
jb
loope
in
adcb
jae
ret
push
shr
scas
ret
pop
repnz
cld
idivb
shll
fwait
jo
push
dec
pop
add
iret
jle
dec
push
pop
cli
jge
dec
adcb
xchg
mov
cmp
pop
and
dec
int
adc
outsl
push
icebp
pop
push
pop
enter
addr16
jae
addr16
lret
cmp
add
push
out
xchg
push
jo
shll
push
icebp
adc
aas
ds
push
ficoml
pop
and
insl
push
insl
pop
lahf
jb
pop
push
mov
out
nopl
sahf
xchg
mov
mov
dec
push
add
mov
mov
scas
jns
clc
jae
adc
add
adc
mov
out
std
push
lahf
or
mov
jns
aaa
js
adc
push
movsb
sbb
push
and
inc
pushf
jae
add
pop
adc
mov
jbe,pn
or
or
cmp
rolb
out
call
push
lods
cmpsl
cmp
stc
push
les
pop
or
inc
and
dec
or
jge
enter
aam
mov
and
pushf
jno
out
fbstp
adc
xor
mov
mov
or
movsb
mov
call
test
imul
mov
mov
mov
adc
inc
popa
andb
sub
cmp
and
adc
cld
xor
push
mov
cmp
call
in
xchg
mov
mov
std
dec
or
std
mov
sub
push
lods
and
aad
adc
testl
push
cmp
cmpsb
sbb
ja
icebp
out
ret
mov
cmpl
aam
or
jg
imul
scas
iret
hlt
addr16
sbb
push
pop
decb
cmp
sub
scas
mov
adc
js
mov
jb
repnz
push
mov
push
push
jne
pop
dec
dec
adc
or
addr16
pop
push
jo
adc
sbb
aas
subb
mov
add
data16
xchg
sub
jne
mov
xchg
mov
dec
inc
pop
lcall
push
xlat
sub
mov
fcoms
add
adc
mov
mov
pop
mov
aas
push
xor
cmp
jno
stos
mov
xor
sub
lret
cld
add
test
ret
inc
std
xchg
in
mull
scas
xchg
pushf
push
dec
mov
lret
and
dec
mov
ja
rcrl
mov
cmp
adc
daa
pop
nop
xor
inc
mov
mov
jbe
out
lea
pop
sub
cltd
je
mov
ret
cwtl
dec
dec
cltd
push
shll
push
enter
out
jnp
daa
cmp
xorb
lcall
filds
lock
popf
inc
dec
mov
cld
test
push
shl
sahf
xchg
lock
icebp
icebp
std
fidivs
cmp
xchg
mov
pop
repnz
neg
sahf
sbb
lret
mov
hlt
hlt
test
jle
mov
cmp
add
imulb
aaa
sbbb
andb
aad
add
in
leave
xchg
push
xchg
sub
rcr
out
stos
mov
jmp
cmp
lock
add
xchg
xor
inc
scas
inc
js
cmp
jecxz
into
jno
fdivs
lods
add
mov
mov
ja
jg
fisubrs
mov
add
sub
push
stc
ror
xchg
jno
pop
xchg
xchg
inc
or
mov
xchg
stos
test
ficomps
jp
cld
adc
sub
cld
pop
mov
lock
es
push
xlat
pop
lcall
or
mov
add
faddl
das
pop
fstps
aaa
cmp
dec
in
subb
pop
cmp
pop
testb
cmpb
push
mov
fisubrs
cmp
xchg
or
int
mov
repz
inc
lcall
lcall
mov
pop
out
aas
loopne
jne
pusha
jbe
outsb
out
dec
xchg
inc
xchg
sub
inc
ds
mov
jecxz
push
in
ret
int3
jecxz
inc
sbb
jbe
cmp
fsts
jae
add
leave
pusha
push
cmp
xchg
js
push
lcall
enter
mov
iret
ljmp
pop
or
and
sub
add
push
dec
mov
or
push
inc
mov
xchg
pop
fists
lcall
and
mov
les
ljmp
pop
jecxz
mov
push
dec
out
test
loopne
jnp
mov
add
dec
xchg
jno
out
add
call
adc
and
stos
pop
cmpsb
and
adc
fnstcw
rorb
dec
ja
fildl
loopne
int
push
gs
mov
pushf
stos
sub
and
xor
aaa
stos
cltd
out
jecxz
and
jns
inc
dec
lret
push
in
xchg
cs
dec
in
ret
cmp
repnz
gs
inc
xlat
jb
cwtl
push
imul
lcall
movsb
add
jp
lahf
or
rcrl
and
push
push
sub
dec
outsb
popf
stos
pop
scas
jl
and
popf
fucomi
xor
lods
jmp
pop
mov
mov
pop
sbb
int3
xor
and
imul
fdivl
loope
fbld
movb
out
mov
xor
ss
sub
mov
ds
lods
jp
movb
stc
sbb
dec
dec
pop
adc
aaa
orl
aas
cmp
cmp
pop
test
pop
pop
mov
filds
mov
ror
inc
adc
addr16
jecxz
les
cmp
add
addr16
and
mov
das
cmp
xchg
lock
popa
stos
in
lods
shl
add
jae
jbe
out
mov
pop
scas
push
lahf
mov
pop
aaa
jb
scas
cmp
lds
or
cmp
cwtl
jno
sbb
in
sub
inc
adc
clc
or
jb
push
mov
lret
ds
flds
cmp
cmc
inc
xor
into
gs
in
xor
xchg
jmp
mov
xor
int
cwtl
das
fwait
in
cli
or
out
sub
push
xchg
mov
int3
fadds
daa
or
in
sub
rorl
jo
push
add
mov
mov
mov
push
in
xor
repz
mov
mov
cmp
int3
mov
jns
push
ljmp
xor
dec
cltd
push
fs
outsb
sbb
testl
fcomps
sbb
shlb
popf
jle
cmp
xchg
js
jp
aas
and
nop
mul
dec
inc
stos
inc
jne
dec
call
add
cli
out
jge
repnz
popf
mov
cmp
fnstcw
inc
bound
pop
stos
sbb
adc
stc
inc
cmp
dec
inc
out
xor
out
xor
sbb
imul
outsb
loope
test
inc
inc
pop
iret
ror
jne
stc
xor
pusha
data16
push
bound
jae
cmp
cmp
dec
inc
nop
jno
xor
xchg
or
les
push
dec
add
sub
lahf
cltd
cmpsl
adc
addr16
dec
or
mov
sub
dec
stc
popf
loop
or
xchg
inc
xor
js
push
cmc
or
mov
cmp
mov
bound
jmp
loope
call
dec
push
in
jg
repz
cltd
mov
mov
mov
jb
xor
sbb
jns
loop
mov
jnp
mov
xorb
ljmp
pop
mov
or
cmpsl
cmp
out
dec
popa
cmpl
dec
jecxz
fadds
inc
dec
push
xor
mov
movsl
xchg
fsubs
adc
jno
mov
xlat
aaa
stos
xchg
lahf
lods
inc
shll
inc
test
ds
test
and
out
mov
fwait
jbe
dec
rolb
adc
or
lcall
inc
adc
cmp
push
stos
rcrb
sbb
subb
mov
ja
xor
shlb
lret
stc
test
cs
shrb
movsb
les
movsb
pop
es
cmc
xchg
stos
mov
scas
cmpb
sub
adc
out
das
hlt
repnz
jl
in
ficoms
leave
lret
iret
mov
sbb
inc
test
mov
hlt
dec
adc
xchg
icebp
jge
dec
sahf
outsb
rorl
mov
subl
sbb
fmull
push
xchg
push
xchg
mov
add
notb
into
rcrl
lods
push
jno
lock
mov
dec
outsl
mov
sub
outsb
jle
cwtl
arpl
ljmp
ret
es
sbb
fldcw
push
int
mov
mov
lods
mov
sbb
push
je
add
inc
mov
shr
jl
sbb
xor
daa
mov
adc
bound
ljmp
aam
in
mov
icebp
dec
shlb
rolb
mov
mov
hlt
sub
ss
xorb
ss
pminub
push
xor
int
push
lcall
pop
mov
xchg
aas
xor
jmp
in
test
aaa
xchg
ljmp
xor
ds
xor
or
push
cmp
mov
pop
fimull
mov
cmpsl
dec
and
gs
push
pop
or
lods
mov
jmp
sub
jae
aaa
xlat
sub
ds
js
test
xor
push
daa
lcall
sub
iret
adc
pop
and
inc
int3
jmp
pop
insl
sbb
jbe
and
leave
lods
cwtl
std
cmpsb
outsb
push
dec
xchg
xchg
mov
scas
sbb
test
lret
testb
fdivl
add
push
hlt
mov
aaa
mov
add
pop
adc
leave
and
lret
out
roll
jns
cmp
test
rolb
inc
fimuls
mov
jae
xchg
mov
jb
icebp
ds
out
add
mov
dec
pop
jns
jp
fidivrl
in
lds
mov
pop
xchg
inc
jle
jl
es
pop
ret
les
sarl
and
lods
dec
movsl
loopne
add
daa
cmp
xor
fwait
mov
dec
push
clc
pop
out
sbb
dec
add
mov
leave
insb
test
test
je
mov
ret
stc
push
jl
lcall
aad
rcrl
adc
sbb
xor
incb
xor
push
in
testl
mov
imul
out
call
sbb
mov
mov
push
rorl
xlat
insl
or
xchg
jmp
sub
xor
or
and
adc
sbb
in
shrb
mov
push
jns
mov
sbb
push
push
inc
shll
xchg
mov
sti
xchg
jmp
jecxz
xor
jb
arpl
sub
andl
xlat
test
pop
lods
stos
lret
lock
rclb
cmpsl
add
mov
cs
testl
cmpsb
int
fists
out
or
push
movb
mov
jnp
shlb
out
aam
jo
je
mov
add
mov
cmpsb
jmp
out
or
or
inc
mov
add
pop
inc
mov
mov
sbb
notl
push
add
jg
les
fdivr
mov
sbb
and
cmp
ret
jle
fnstsw
inc
in
pop
mov
and
mov
je
out
jnp
in
sarb
add
in
orb
add
nop
test
stc
out
mov
in
xor
cmc
adc
adc
ss
jnp
imul
push
mov
jo
add
divb
mov
add
stos
shrl
adc
dec
scas
ret
arpl
icebp
adc
sbb
inc
test
push
loop
inc
int
andl
adc
xchg
jno
adc
int3
lods
and
stc
inc
stos
scas
popl
mov
gs
and
jnp
dec
cmp
test
adc
inc
inc
mov
sbb
roll
mov
jge
push
pop
iret
push
sahf
mov
xor
push
std
pop
mov
in
sbb
inc
push
jns
add
dec
dec
into
orl
sub
inc
insb
or
and
fists
test
pop
or
lcall
mov
mov
xchg
out
push
inc
cmp
test
jp
jo
dec
pop
sub
sbbb
aad
xor
aaa
in
and
push
out
adc
mov
and
lods
cmp
enter
inc
stc
xor
inc
or
push
mov
adc
push
and
shl
mov
rcll
in
sub
pop
aam
push
mov
jbe
jg
divl
outsl
or
jl
cmpl
pop
iret
mov
adc
lea
lret
push
pop
mov
xorl
movsb
inc
enter
popf
outsb
outsl
les
repz
pop
cmpsl
mov
fsts
pandn
mov
pop
sub
xor
bnd
in
inc
cmpsb
xchg
mov
xchg
mov
jbe
fadd
insl
out
leave
mov
sti
pop
ljmp
fcmovu
cli
xlat
add
push
cmp
xchg
inc
and
cld
push
sub
repz
and
cltd
std
out
add
cmpsb
inc
add
inc
outsl
out
cmc
or
xchg
lret
lret
lahf
push
dec
xor
dec
xlat
shl
pop
xlat
and
lahf
inc
shl
add
into
fdiv
xchg
push
outsb
sti
lcall
inc
fdivrs
pop
mov
xchg
mov
xchg
sahf
push
rcrl
add
push
pop
clc
adc
cltd
push
daa
mov
push
popf
stc
pop
sbb
push
push
decl
out
popa
push
jl
add
shrl
shl
shl
inc
out
in
push
push
call
mov
out
imul
mov
sbb
fldt
add
addr16
pop
jl
cmp
pop
in
jl
pmulhuw
andb
and
dec
lods
lods
push
aas
movmskps
adc
cmp
sub
xchg
pop
adc
jmp
lock
fnstenv
rcrb
out
ljmp
filds
adcb
ficomps
lcall
cli
sub
pop
mov
mov
lds
fdivl
push
pop
scas
inc
jp
lods
sbb
adc
add
hlt
jecxz
cmp
add
sub
cmp
repnz
data16
in
mov
jbe
faddl
outsb
push
jmp
aaa
pop
add
jl
rolb
into
and
outsb
in
inc
lahf
push
fwait
and
arpl
jne
inc
negb
xor
xor
xor
jecxz
cwtl
decb
das
mov
fucomp
adc
dec
inc
dec
fbstp
data16
mov
scas
mov
sbb
mov
mov
dec
and
inc
in
in
sub
cmp
fnsave
cmp
dec
sarl
out
call
je
xor
add
sbb
cmpsl
xchg
or
cs
jg
push
imul
jo
xchg
in
cwtl
push
shl
inc
sub
out
test
dec
lret
repnz
cwtl
lea
jae
sbb
push
scas
cld
sub
pop
es
shlb
pop
cmp
push
iret
shl
dec
or
cmc
pop
xchg
cmp
adc
jne
jp,pn
das
lods
xchg
add
data16
adc
mov
jecxz
ret
cs
mov
arpl
sub
mov
jae
fisubl
sbb
push
lret
inc
fadd
push
add
push
jmp
lahf
xchg
cwtl
adc
sbb
cs
test
ret
sbb
add
sbb
push
scas
and
dec
loope
jg
add
cwtl
pop
rorb
imul
imul
in
inc
and
dec
pop
add
bound
aaa
popf
stc
xchg
pop
jmp
mov
scas
push
icebp
mov
fdivl
mov
stc
dec
push
rcll
sti
dec
out
cmpsl
out
sub
pop
rcrl
adc
and
loope
pushf
xchg
xor
mov
pop
imull
pop
fsubrl
fstpt
sarb
sub
jns
arpl
pop
pusha
xor
xchg
cmp
shrb
and
or
lods
cmp
jmp
ss
cmpl
cmp
xchg
push
mov
push
pop
jecxz
push
mov
fldl2t
pusha
dec
cwtl
aaa
stos
dec
out
jle
outsb
jge
ss
or
xchg
insb
mov
push
xrelease
mov
cmp
das
or
rcll
or
loopne
icebp
push
and
int
sub
sub
dec
and
dec
pop
jae
xchg
mov
shll
xchg
sbb
lret
fs
insb
add
add
mov
popf
rorl
cmpb
lds
out
rol
daa
fstp
jmp
stc
rcrb
jecxz
pop
mov
popa
aaa
fwait
insl
sub
loope
fcoms
mov
jp
sbbl
test
in
daa
inc
inc
push
std
xchg
mov
sbb
stos
jg
fbstp
in
mov
jl
sub
mov
mov
cmpsl
ds
inc
xor
pop
ss
int
jg
pushf
inc
dec
sub
push
jbe
cmp
fistps
pop
addr16
adc
mov
xchg
push
popf
sahf
cmp
adc
push
jne
mov
mov
test
dec
xor
mov
mov
or
push
mov
cwtl
inc
mov
out
subb
push
inc
shll
int
or
fwait
jne
push
mov
jb
add
inc
int
mov
fstpt
push
insb
repnz
jns
test
fs
sbb
stos
xchg
rcrb
xor
sbb
jno
into
cmpl
pusha
dec
pop
test
out
test
xchg
dec
mov
shl
push
add
shld
inc
or
xor
xchg
mov
loope
jnp
divb
sub
out
pop
les
pop
divl
jmp
pop
cmp
addb
cmpsl
cmp
pop
subb
push
fldcw
jmp
xchg
add
test
jge
aaa
into
outsl
xchg
push
and
push
in
mov
fsubrl
adc
fnstsw
incl
xchg
pop
arpl
aam
clc
mov
pop
pop
xchg
jp
or
int
sbb
idivb
mov
out
mov
aas
cmpsb
out
pop
addr16
shrb
pop
mov
loopne
rcrl
cmpsb
mov
loopne
fmull
mov
sbb
jnp
pop
sub
sub
insb
jle
fdivl
sbb
cmp
cli
sub
js
es
icebp
push
repnz
mov
add
push
orb
fcomp
xchg
jmp
mov
cwtl
imul
inc
mov
mov
add
addr16
fs
mov
sarb
in
push
adc
inc
popa
sub
push
cltd
gs
gs
ret
cmp
pusha
clc
mov
les
mov
cmpsb
js
or
push
mov
mov
imul
sub
sub
cli
stos
cmpl
xchg
and
stos
and
jo
or
push
jnp
sti
jbe
movsl
xlat
outsb
xlat
data16
je
sbb
pushf
lods
mov
mov
lcall
push
popa
clc
pusha
xor
jge
add
inc
and
add
mov
sub
pop
popf
sub
adc
mov
add
mov
je
push
add
rol
das
xchg
mov
out
cmp
lods
or
jg
pop
aad
xchg
mov
ret
out
invd
shl
jnp
jbe
pop
subb
xor
bound
xchg
add
dec
ds
test
stc
pop
jo
jmp
cmp
cmp
add
sbb
jge
mov
scas
jns
add
stos
push
lods
adcl
int3
js
out
cmp
subl
dec
call
lea
inc
xchg
sub
adc
xchg
push
mov
mov
sbb
lea
ds
addr16
int3
arpl
and
xorb
or
xchg
mov
pop
fcmovb
jns
int
in
cli
ljmp
sahf
and
jb
mov
mov
rcrl
in
push
lcall
inc
pop
fsubrs
push
test
dec
dec
or
cld
mov
and
cmovbe
mov
adc
cmp
mov
push
xchg
or
ret
fisubs
movsb
cmp
inc
mov
mov
std
ret
test
jp
cwtl
mov
mov
inc
mov
and
fldl
inc
pop
mov
idivl
inc
ljmp
ljmp
push
js
xchg
adc
mov
clc
jb
cmp
mov
cmpsl
enter
lods
rcrb
in
subl
imul
xor
pushf
mov
lds
inc
mov
insb
shlb
xor
inc
xchg
rorb
and
xchg
inc
in
test
sub
insl
lods
repz
sbb
sbb
mov
mov
mov
mov
mov
and
sub
fcmovnb
push
data16
pop
push
mov
addb
js
cmp
pop
pop
and
ret
in
mov
inc
push
xchg
sub
dec
outsl
lds
data16
cmp
mov
les
pushf
jb
xor
push
pop
arpl
cmp
lods
mov
cmc
test
mov
rol
imul
dec
es
fs
adc
ret
shll
pop
out
out
sarl
orb
clc
mov
fnstsw
or
xor
sti
pop
das
sub
adc
add
mov
jmp
and
cmp
or
jg
pop
js
fisubrl
jbe
mov
dec
popa
clc
sbbb
and
adc
je
test
dec
cltd
cmc
std
inc
sub
push
jns
push
cli
aas
push
mov
xchg
sbb
xor
sub
mov
add
inc
in
movsl
dec
dec
pop
outsb
sbb
in
cmp
xor
ret
pop
into
gs
loopne
and
test
leave
mov
lahf
xor
xlat
rcrb
in
mov
frstor
mov
sub
inc
cltd
hlt
mov
push
mov
scas
cwtl
outsb
js
decb
test
mov
cmpsl
shr
fld
cmp
icebp
pop
popf
or
and
cmp
adc
sbb
lret
cld
popa
ror
int3
es
xor
inc
fistl
xor
cmpsl
or
imul
adc
addr16
imul
sti
in
movsl
lds
inc
or
mov
fsubrs
sbb
ja
pop
imul
xor
jmp
cld
sbb
sub
test
addb
sub
stc
test
aam
xlat
daa
push
mov
sub
dec
dec
aaa
cmp
aad
xor
insb
mov
fiadds
mov
or
lock
dec
in
icebp
call
sarb
gs
push
xchg
cmp
sub
add
push
mov
fsubl
mov
adc
lret
into
xchg
sub
rcr
mov
push
shl
or
add
je
orb
mov
sub
shrl
mov
lds
inc
jge
jecxz
imul
movsl
ja
push
lods
mov
jle
xchg
sub
mov
cld
dec
pop
cmc
add
jl
add
scas
insb
add
sbb
out
xchg
sbb
push
leave
cmp
adc
mov
push
std
push
in
or
sub
push
bound
ja
lahf
notl
jb
popf
mov
sub
daa
sub
sub
adc
jne
jl
addr16
imul
aaa
jo
sub
stos
xor
jecxz
js
sahf
xlat
and
inc
cmpsl
mov
or
aas
loope
lahf
dec
or
fwait
inc
xchg
inc
je
out
mov
xchg
ret
mov
push
icebp
pop
scas
ret
dec
pop
imulb
sub
test
decb
mov
cmp
adc
ss
cmp
lret
mov
jo
test
or
mov
and
mov
xchg
add
xor
pop
lahf
push
aas
and
shl
xlat
sub
stos
leave
dec
rcrl
jge
lock
loop
pop
cmp
add
cmp
ja
int3
addr16
cmp
movl
out
adc
cmovae
insl
add
mov
fyl2xp1
add
cmp
push
pop
lods
mov
xor
sti
or
lock
pop
cmp
mov
xor
cmp
movsl
add
pop
mov
fdivrl
and
push
sbb
xchg
mov
add
pop
inc
imul
pushf
push
filds
cld
jb
fidivrs
ss
mov
fs
jle
mov
stos
in
jg
out
inc
jl
cmpsb
mov
add
js
loopne
push
cltd
jne
mov
jge
mov
popf
sub
xchg
pop
cmp
mov
xchg
imul
pop
sahf
mov
andb
sbb
shll
pushf
dec
mov
shll
shll
mov
and
fsubrp
stos
movsb
fisubl
sbb
xchg
gs
pushf
lret
into
fmull
out
mov
add
fcmovnu
pop
xor
mov
or
stc
test
add
aam
incl
mov
aas
mov
sub
sbb
pushf
jno
and
call
or
push
or
xor
addr16
imul
cmpb
mov
push
call
es
and
in
dec
dec
mov
testl
push
jne
jb
lea
xchg
daa
push
icebp
aaa
sbb
scas
inc
stos
cmp
int
cld
pop
aam
into
lcall
xchg
sar
insl
add
fildll
mov
xchg
xchg
stos
adc
repz
mov
movsl
mov
xlat
sub
mov
mov
dec
xchg
ljmp
dec
xchg
pop
aad
dec
pop
cmp
sbb
stos
cmp
mov
push
mov
lea
movsl
add
ret
and
sbbb
push
lahf
repz
adc
jmp
push
jbe
fcmovu
mov
fsubr
push
stos
fs
xchg
xor
inc
pop
inc
dec
icebp
mov
add
dec
mov
mov
lret
dec
and
mov
or
mov
out
pop
loope
scas
ret
mov
mov
adc
stos
stos
test
mov
mov
jecxz
mov
stc
xchg
dec
adc
andb
and
fidivs
fxch
mov
jge
jbe
add
ja
inc
inc
mov
testl
insl
lahf
dec
mov
scas
fsubs
aam
aam
hlt
loop
jns
adc
in
into
out
mov
xor
lods
mov
xchg
loope
popf
adc
add
fstpt
out
repz
sub
adc
adc
sub
sub
sub
lcall
inc
in
mov
push
cltd
sub
pop
stc
and
aaa
int
in
sub
jae
lahf
mov
pop
insl
ljmp
sub
dec
icebp
daa
mov
and
cmp
mov
fadd
rcll
adc
int
mov
dec
arpl
adc
cmpl
repnz
push
mov
pop
xchg
mov
aam
test
bound
pop
mov
shl
jmp
or
push
mov
test
xchg
test
mov
adcl
outsl
or
jl
pop
jbe
or
ja
sbb
scas
leave
push
inc
push
fcoml
jbe,pt
into
adcl
sbb
mov
mov
xor
icebp
jl
mov
enter
pusha
call
push
lods
add
arpl
mov
push
mov
pop
mov
iret
adc
in
add
daa
inc
push
push
and
ret
xlat
sbb
ds
cmc
mov
cmpsb
cmp
jecxz
jp
pop
mov
jecxz
mov
cmp
inc
popf
push
or
and
les
test
pop
test
or
sbb
cmp
pop
mov
sbb
or
jge
insl
sub
stos
mov
lea
pop
fs
ret
add
sahf
inc
daa
int
adc
int
xchg
cltd
adcb
push
jecxz
sbb
push
mov
mov
fwait
jmp
xchg
and
mov
cmpb
nop
dec
movsb
mov
sbb
nop
add
fldcw
inc
mov
stos
int
mov
jo
xchg
or
fsub
sub
cmp
sub
cmpsb
imul
adc
loope
push
pop
xchg
xchg
insb
lret
stos
lea
aad
dec
adc
inc
nop
ror
and
in
int
adc
cmpb
xchg
pop
fmull
arpl
push
popa
aas
adc
adc
push
lahf
fwait
jo
and
cld
inc
lcall
test
fbstp
mov
mov
loopne
mov
mov
out
stc
adc
ds
cmp
xchg
push
dec
fildl
mov
fcmovnbe
mov
inc
fucomp
push
fildll
call
dec
add
subl
sub
pop
adc
mov
cmpsb
popa
pop
hlt
jg
out
adc
adcb
inc
clc
xchg
cmp
xchg
aas
pushf
fstpl
inc
xchg
add
cld
jns
add
cmc
push
cmp
into
les
sub
in
jmp
mov
stos
pop
hlt
mov
xor
inc
fwait
xor
in
pop
pop
mov
adc
push
push
adc
repnz
jno
cltd
jb
fs
and
stc
push
divl
fnstenv
or
push
fistpl
fidivrl
mov
hlt
sbb
add
adc
sbb
scas
push
jnp
dec
nop
test
or
sub
sub
insb
xchg
addr16
scas
test
sti
out
inc
adc
loopne
ds
sbb
shlb
dec
mov
hlt
outsl
sub
jb
pop
mov
lcall
js
call
imul
enter
repnz
ja
test
and
jmp
loop
shrb
mov
push
and
shlb
clc
daa
dec
movsl
in
sub
or
imul
hlt
push
mov
pop
xchg
leave
fxch
hlt
xchg
sub
pmaddwd
insl
repz
aad
dec
dec
and
test
sub
fxtract
pminsw
scas
push
rclb
ds
and
xor
fxch
bound
mov
and
inc
cs
mov
push
and
pop
inc
xor
loopne
loopne
mov
cmpb
pop
aaa
push
movsl
push
add
in
ret
jl
dec
xchg
or
arpl
jo
and
dec
loop
mov
cs
sub
pop
push
mulb
cltd
and
or
lods
push
mov
or
mulb
sahf
jecxz
sub
outsl
in
repz
int
jmp
scas
in
inc
push
pop
pop
xorl
mov
adc
pushf
int
int
stos
and
mov
icebp
out
test
cmc
push
lahf
add
xchg
mov
and
jnp
and
adc
testl
and
data16
jmp
in
pop
xor
test
sbb
and
xor
cmp
clc
dec
push
pop
adc
rclb
and
inc
popf
xor
jmp
fsts
out
movsb
push
cmp
jo
xchg
cmpsl
jp
loope
adc
dec
mov
jl
adc
sbb
mov
js
lret
inc
inc
cmp
inc
notb
sar
push
mov
dec
call
adc
push
jmp
push
fwait
jo
mov
jns
pop
mov
out
das
pop
jo
gs
out
push
test
leave
pusha
js
mov
xchg
dec
in
imul
xor
xchg
adc
mov
sbb
rcrb
mov
sbb
mov
mov
sub
leave
sub
shlb
repz
xchg
or
jne
pop
sub
daa
mov
and
mov
pop
lcall
idivl
jg
adc
cli
xor
sbbl
scas
ret
pop
in
and
jge
popa
jo
cltd
xor
test
shll
das
jo
add
mov
xor
mov
movsb
icebp
xsha1
cmpsb
mov
sub
dec
xchg
leave
jne
push
mov
or
mov
int3
sub
std
and
mov
dec
mov
ja
dec
into
pop
add
cwtl
push
daa
fisubrs
mov
cmc
outsb
mov
and
sub
mov
xchg
int3
jle
into
scas
in
and
out
mov
dec
in
loop
dec
std
xchg
xorl
les
notl
add
ret
mov
fidivl
cmp
ret
dec
sbb
lcall
inc
roll
int
and
xchg
repnz
cmpb
or
cmc
lods
lods
mov
xchg
imul
sbb
and
sub
pushf
xor
inc
je
push
xor
sub
cmp
das
push
out
daa
sbb
add
jns
and
mov
dec
insl
cmpsl
jmp
xor
lds
jmp
mov
add
jb
lea
jge
mov
das
add
pop
jo
xor
inc
pop
jns
stos
lds
imul
iret
dec
pop
xchg
into
daa
insb
add
adc
fincstp
flds
sbb
lods
jge
pusha
xchg
push
jmp
add
pop
test
push
sbb
arpl
int
push
fildl
inc
hlt
or
push
xor
dec
mov
les
dec
mov
jnp
xchg
sbb
mov
push
rolb
arpl
fdivl
adc
inc
sbb
jp
fucomi
push
jo
and
mov
pop
mov
ret
das
mov
jecxz
pop
aaa
test
lods
jp
lds
inc
pop
shrb
stos
arpl
dec
add
cmp
je
xchg
push
mov
mov
or
cmp
enter
push
cmp
scas
xchg
inc
dec
out
js
gs
pop
enter
adc
lods
inc
aam
xchg
stc
notl
cmp
out
rcrb
test
add
xchg
out
pop
xchg
cmp
push
and
mov
mov
daa
inc
outsl
sti
sarb
lret
movsl
xchg
das
add
mov
out
inc
cli
cld
popf
repnz
jno
frstor
and
in
jle
xor
inc
sbb
ret
fmull
pop
mov
cmp
out
pop
shll
into
push
sbb
test
lret
loope
cmc
xchg
scas
inc
lds
mov
and
adc
inc
xor
mov
dec
mov
insb
ret
xlat
popf
scas
mov
or
lods
inc
leave
mov
dec
bound
popa
xchg
addl
fs
clc
or
iret
mov
cmc
ret
mov
les
rclb
in
lahf
icebp
jbe
pop
hlt
das
push
in
pusha
adc
in
stos
mov
pop
adc
notl
xchg
adc
xchg
xlat
push
jmp
or
stos
not
lcall
xchg
xor
ljmp
mov
outsl
jmp
aam
loope
cmp
cld
daa
pop
mov
push
data16
fdivrl
pop
pusha
cs
scas
sub
in
sub
mov
push
into
push
popf
push
rcrl
and
pop
lods
gs
testl
mov
jno
jmp
xchg
cmp
ret
mov
pop
daa
cmp
mov
push
div
das
xor
push
insb
sbb
mov
repnz
mov
push
out
sub
mov
nop
or
nop
xchg
ja
scas
insb
ds
lret
and
fcomi
adc
jb
mov
jge
push
cmp
mov
je
loope
ljmp
push
or
sub
jae
loope
mov
jmp
push
stc
mov
mov
xor
xlat
cmc
jecxz
push
es
cmp
lea
cmp
inc
pushf
pop
mov
xchg
mov
lods
ljmp
pop
out
mov
pop
jg
lods
jbe
test
scas
sbb
sub
int3
dec
mov
jmp
sub
or
out
and
mov
mov
aas
jecxz
leave
jmp
out
das
cmp
add
bound
push
stos
xchg
add
sub
sahf
cltd
dec
loop
mov
push
sbb
mov
cwtl
pop
and
jmp
jp
jle
cmc
jg
push
mov
pop
loop
or
shrl
and
mov
cmp
sbb
repnz
jo
jge
hlt
jecxz
xchg
xchg
test
ret
add
out
and
jns
dec
cmp
inc
bound
fucom
cmp
mov
sbb
leave
fsubs
lcall
add
fs
mov
int3
cmpsb
and
test
in
fwait
scas
jg
orl
cmpl
or
lahf
inc
jp
mov
jle
mov
push
sbb
adc
sbb
mov
xor
lods
daa
ret
pop
jno
inc
rolb
and
xchg
xchg
sub
push
xor
adcl
add
mov
mov
decb
mov
sub
aam
fsubrs
cmp
lds
and
or
push
daa
mov
dec
pushl
shlb
mov
xchg
out
into
popf
mov
jmp
jecxz
stos
adc
inc
mov
es
or
mov
outsb
cld
jbe
pop
int
mov
sub
into
pop
fcomip
mov
jp
in
mov
imul
divb
shlb
pop
loopne
pop
push
jmp
jne
jo
imul
dec
loope
and
push
cmpsb
stos
xchg
repnz
call
fidivs
mov
mov
out
and
or
adc
push
mov
cmp
xchg
sub
dec
mov
ficoms
pop
enter
jnp
mov
pop
adc
sti
push
push
inc
idivb
lcall
cmpsb
mov
addr16
in
mov
push
test
pop
out
xchg
lock
mov
outsl
mov
sbb
xchg
mov
imul
add
add
cmp
dec
xlat
dec
sbb
ret
cmp
jno
xor
or
mov
loope
out
dec
es
adc
pop
cmpsb
fiadds
stc
daa
data16
xchg
mov
push
cmp
inc
and
mov
xchg
insb
push
iret
mov
in
sub
add
inc
xor
jne
push
jmp
dec
jb
jmp
out
add
test
inc
pop
in
data16
int
int
popf
enter
mov
and
lret
js
out
cmpsl
dec
jne
xchg
push
cli
mov
jl
dec
scas
mov
adc
aam
mulb
sbb
ds
divb
aaa
clc
and
imul
aam
push
push
test
mov
ret
mov
and
int
jns
out
cld
ds
fisubrs
cmp
add
and
lret
push
adc
jb
ss
inc
inc
xchg
xchg
and
divb
sub
jge
mov
repnz
dec
jle
jg
jnp
or
inc
jnp
xchg
cs
movl
leave
out
loopne
xchg
rolb
mov
iret
lea
ja
xchg
imul
add
or
jmp
xchg
push
xchg
jb
sbb
das
cwtl
xchg
sub
dec
gs
mov
iret
sbb
xor
lods
mov
rclb
ljmp
sbb
xor
outsb
mov
in
mov
mov
faddp
push
jp
repnz
and
mov
fldenv
or
push
pop
adc
out
add
inc
jns
lret
das
leave
fistpl
jno
mov
mov
stc
mov
ss
test
outsl
mov
mov
mov
inc
mov
fcomip
lds
lods
stc
and
inc
ror
sub
pop
iret
mov
sbb
inc
and
xchg
aad
sysret
mov
pop
das
xchg
or
or
sbb
shr
cmp
sarb
jecxz
and
cli
cmp
pop
pop
std
ret
or
cmc
fmulp
pop
sbb
jbe
mov
mov
fwait
movsl
int
decb
mov
pop
hlt
out
in
subl
push
and
pop
inc
gs
and
mov
mov
dec
and
loopne
mov
push
gs
stos
sbb
pop
cwtl
sbb
adc
aaa
addr16
mov
mov
cmp
push
mov
in
es
outsb
mov
sbb
mov
cmp
mov
and
mov
mov
in
nop
add
in
push
imul
pop
call
arpl
repz
aaa
mov
ja
dec
insb
xchg
push
lret
test
sti
cmp
lods
in
jnp
xor
xor
cmp
pop
mov
xor
scas
push
mov
lahf
leave
clc
and
cmp
jne
sarl
out
jno
lret
push
in
mov
sbb
pop
pop
sub
or
fnstcw
ret
cmc
enter
inc
cld
push
mov
test
xor
jg
dec
xchg
jno
les
or
cltd
out
lea
mov
lret
mov
ret
nop
mov
cmpsl
mov
in
mov
inc
dec
movsb
and
iret
ret
ljmp
jo
movsb
xchg
daa
lret
pop
mov
lods
and
addb
xchg
aad
leave
cltd
out
dec
jb
pop
push
in
pop
aas
repnz
ja
inc
mov
cmpsl
add
push
stos
jae
fnsave
push
aaa
ja
xor
xlat
lods
pop
push
inc
push
stos
pop
jno
push
mov
out
xchg
jbe
cmp
inc
adc
ja
dec
lock
inc
mov
daa
mov
mov
pop
lods
mov
insb
pmullw
xchg
lods
sub
xchg
xor
aas
cmp
lea
addl
das
pop
mov
mov
dec
xor
xchg
repnz
mov
scas
aad
mov
mov
fwait
adc
lock
subb
sub
lea
popa
jns
fsts
in
cli
push
cvtps2pi
mov
xchg
fwait
ret
mov
jge
ret
outsb
xchg
adc
mov
push
jb
test
loopne
push
jecxz
mov
arpl
pusha
xchg
imul
in
dec
add
sub
test
adc
cli
aam
cmpl
fnstsw
pop
xchg
jo
add
dec
push
popf
cmp
movsl
add
push
pop
jo
jbe
daa
pop
jno
xor
cli
xchg
mov
and
pushf
xchg
inc
clc
adc
pushf
dec
test
lret
rclb
mov
push
add
rorl
ss
pop
dec
push
xor
pusha
jnp
sub
enter
outsb
jno
mov
sbb
aas
mov
rol
add
add
jbe
xchg
push
mov
insl
arpl
xchg
cmp
mov
rcl
add
ds
fiaddl
add
ret
leave
mov
lods
add
xlat
cmp
andl
movsl
icebp
movsl
fwait
leave
xchg
in
or
shlb
aam
int
sbb
js
inc
dec
dec
jge
or
insb
loope
push
xchg
dec
inc
add
xchg
in
pusha
add
push
cmp
adcl
pop
aad
lea
xor
es
inc
mov
push
enter
int3
inc
or
cli
cmc
lahf
jb
call
scas
xor
lods
and
cmp
push
and
mov
lret
sti
xor
mov
js
xchg
lds
dec
xchg
das
and
stos
adcl
adc
mov
loopne
or
mov
or
test
orl
ss
out
in
lcall
sahf
ja
cmovbe
jp
cli
xchg
cwtl
pushf
frstor
in
movsl
cmp
aaa
mov
or
push
stos
push
ret
rcr
and
icebp
sbb
xchg
je
jmp
dec
stos
das
imul
test
inc
pusha
dec
movsl
inc
mov
call
sahf
in
lds
lods
mov
xor
jnp
js
mov
push
inc
into
stos
mov
push
ss
xor
mov
mov
xchg
ret
jl
imul
shl
in
into
out
push
fs
mov
cltd
cltd
cwtl
test
inc
scas
inc
stos
lcall
mov
iret
sbb
jmp
test
mov
lahf
stos
bound
fsts
loope
insl
ja
repz
dec
in
mov
outsb
movsb
xchg
insb
sub
enter
adc
jmp
aas
cmc
ss
stos
push
jne
push
or
dec
mov
shrb
pusha
leave
sub
jg
cli
or
mov
sahf
sub
sbb
and
cltd
lods
dec
xor
insl
les
mov
cli
popf
fildl
and
imul
lret
es
je
push
dec
mov
sbb
add
add
movsl
mov
testl
mov
ljmp
cmp
inc
in
outsl
pop
icebp
xor
jns
and
imul
jge
or
sub
dec
push
xchg
outsb
xor
adc
test
incb
lahf
or
mov
or
addr16
cmp
mov
mov
dec
out
ret
outsb
adc
sub
dec
popf
insl
push
sbb
lret
notb
add
lea
mov
mov
daa
rcl
sbb
inc
jmp
movsb
adc
xchg
adc
mov
and
lcall
and
sti
cli
xchg
testb
scas
mov
pop
aam
mov
mov
iret
push
out
cs
xchg
cli
out
pop
pushf
sbb
mov
mov
cwtl
mov
pop
lahf
push
lea
rcrl
insl
lock
and
into
js
bound
shll
aas
out
enter
cli
inc
add
cmpb
pop
les
sub
sbb
loop
push
sbb
xor
popf
xor
add
adc
dec
adc
std
fistpl
xchg
xchg
ss
in
mov
mov
js
and
ret
clc
outsb
xchg
adc
repnz
pop
sbb
fidivl
xlat
mov
mov
ljmp
lea
loop
cltd
sub
xor
subl
xchg
mov
loopne
or
mov
fnsave
xchg
rcr
fs
fldpi
or
out
fcmovbe
pusha
cltd
mov
dec
jle
xchg
leave
cli
xchg
std
repnz
outsl
outsl
sbb
jb
add
pop
xor
adcl
lret
fucomp
pop
je
into
movsb
dec
mov
pop
in
js
or
pop
les
adc
sbb
mov
xor
dec
or
push
xchg
cmp
mov
insl
mov
imul
adc
pop
push
fs
js
ja
pop
test
mov
test
mov
dec
mov
push
xlat
dec
jo
push
pop
xor
push
insl
cmp
xlat
sub
push
jno
test
pop
fidivl
clc
sahf
std
add
lcall
repz
rcll
cmp
mov
inc
fldl
inc
xchg
loopne
adc
push
sahf
addr16
jne
xchg
and
insb
iret
repz
mov
fs
fdivs
leave
or
push
jae
adc
jge
sub
inc
jo
add
inc
jmp
arpl
decb
pop
jg
adc
iret
mov
int3
mov
icebp
pop
xchg
mov
or
and
iret
dec
inc
bound
xchg
sub
push
sub
or
ret
mov
test
mov
mov
cld
rcrl
add
sbbl
aaa
insl
or
pop
adc
movsb
pop
jg
xlat
repz
stos
mov
pop
mov
and
rcrb
or
xchg
aam
inc
jmp
cmpsb
cmc
test
jle
and
push
or
mov
decl
cld
sub
jnp
fnstcw
sbb
das
and
insb
push
hlt
addr16
or
jne
or
fs
call
xchg
adc
scas
testl
movsb
jmp
pusha
add
mulb
adc
leave
jl
popa
scas
ljmp
hlt
sarl
mov
hlt
pop
test
jnp
bound
add
dec
enter
in
sub
pop
lods
cmp
aad
scas
inc
lcall
pop
stos
or
inc
scas
ljmp
pop
or
popf
or
push
cmp
cli
and
xor
rorl
add
popa
xchg
mov
ds
dec
mov
xchg
sub
in
iret
dec
es
lods
push
arpl
nop
mov
out
into
insb
or
ret
jns
jge
ljmp
out
aam
mov
mov
out
fsubrp
test
ja
je
mov
in
cwtl
jo
or
xor
pop
add
xchg
outsb
hlt
aaa
pop
push
jge
adc
xor
and
xchg
fimuls
pop
mov
inc
rcrb
in
addr16
pand
mov
ret
fs
push
ret
push
adc
ja
rclb
xchg
pop
repnz
ret
clc
add
test
add
xor
imul
in
aam
cmp
mov
pop
sbb
stc
add
jbe
loope
lret
push
or
xchg
and
jnp
dec
popa
mov
mov
push
testb
xor
push
xchg
aaa
stc
pop
gs
in
cmp
mov
sbb
xchg
popl
cmp
push
in
dec
jns
and
pop
xlat
orb
pop
imul
out
xchg
lods
push
and
mulps
stos
pop
cmpsl
popf
pop
pop
jns
and
add
mov
pop
jmp
pop
loop
mov
rcrb
mov
jno
pop
and
pop
xor
inc
push
mov
adc
push
adc
cmp
ss
push
scas
or
fdivrl
std
xor
pusha
cmp
ret
js
rcrb
stos
inc
cmp
scas
xchg
lahf
sbb
push
bound
mov
pop
out
pop
mov
es
test
adc
out
ret
jle
mov
inc
lcall
pop
out
sarl
fistl
push
sub
jno
cmp
jo
cmc
js
xchg
xchg
repnz
inc
or
enter
lret
mov
in
stos
fdivs
and
data16
pop
cmp
mov
lret
sub
into
mov
or
and
xchg
xor
xchg
je
sub
lock
and
push
sub
notl
lods
cs
je
dec
push
ja
mov
lea
cwtl
stos
xchg
scas
test
xor
push
lcall
jmp
stos
repz
nop
add
out
das
push
inc
add
hlt
jne,pn
cld
sub
jbe
mov
leave
and
inc
loope
in
ret
push
mov
adc
jno
mov
mov
push
jmp
nop
inc
out
out
lret
mov
xor
push
mov
add
sarb
mov
dec
add
sub
dec
cmp
mov
mov
lods
clc
jecxz
stos
inc
fidivs
int
test
push
out
adc
jne
lret
pusha
cmp
lods
outsl
mov
mov
pop
ret
fs
sarl
lret
fs
cmpsl
jle
mov
pop
xlat
push
xor
dec
clc
sbb
jl
inc
out
in
cmp
inc
jb
les
sbb
mov
cmp
fcomp
push
test
call
jno
mov
iret
rcrl
jge
mov
xor
cmp
loope
pop
push
cmp
pop
cmp
jle
xchg
pop
xor
cmp
pop
fadd
imul
scas
mov
out
movsl
andb
sub
rolb
xchg
mov
pushf
sbb
mov
pop
jp
mov
push
mov
lret
lods
add
mov
test
add
jae
mov
sbb
xor
pop
inc
sbbl
xor
sub
xor
mov
aas
call
in
lret
imul
lock
bnd
cmp
sahf
fwait
mov
aas
cltd
sub
push
stc
sar
sbb
pop
pop
mov
push
movsb
mov
sbb
pop
jl
dec
sub
xor
andb
dec
mov
pop
js
jb
inc
out
icebp
pop
inc
lret
jnp
loopne
sbb
ror
push
fisubs
mov
push
insb
mov
imul
jge
jae
iret
test
push
pop
sub
stos
inc
mov
pushf
mov
ret
rcrb
std
movsb
roll
fsubr
punpckhbw
jne
in
xorl
outsl
cmp
xchg
sub
jg
push
out
lret
scas
xchg
andl
push
xchg
jle
mov
pop
adc
pop
sbb
cmp
nop
lods
add
loopne
xchg
enter
sub
hlt
dec
cmpsb
adc
test
jp
imul
sbb
stos
and
add
adc
and
pushl
negl
sub
cmp
sub
dec
cmpsl
inc
movb
adc
sti
popa
sub
cmp
cmp
xor
cmp
pop
dec
movsb
mov
lock
dec
notb
add
loopne
cli
xchg
push
add
inc
ret
hlt
mov
pop
xchg
mov
sbb
sub
adcb
xor
jns
ds
popf
or
sbb
and
mov
rcll
jp
jmp
push
and
adc
je
dec
inc
test
shr
jbe
sub
mov
push
ret
shrl
xchg
loop
nop
jp
add
sub
pop
daa
mov
push
or
cmp
outsl
jge
mov
push
cmp
sti
outsb
scas
or
xchg
push
out
js
sub
insb
jl
sub
mov
sahf
jns
mov
out
push
in
ss
in
inc
jnp
lods
pop
arpl
xor
pop
loope
push
jmp
inc
notb
add
lods
repz
stos
xchg
sbb
adc
mov
jmp
push
inc
pop
push
mov
jb
mov
stos
mov
shlb
xchg
loop
sbb
nop
jnp
out
and
pop
cmpsb
cltd
sbb
lahf
shlb
jae
loope
mov
push
negb
pop
inc
sbb
or
out
jae
add
adc
mov
mov
push
adc
xchg
mov
pushf
xor
hlt
dec
std
test
fcmovne
xor
addr16
jmp
dec
icebp
mov
jb
repz
xchg
test
ds
fstpl
sub
and
xchg
pop
inc
push
adc
jge
loope
pop
mov
jns
dec
sti
stos
pop
xor
cltd
les
cmc
mov
fs
jmp
mov
lret
fldcw
enter
addr16
jne
aaa
ficoml
rolb
aaa
inc
and
lret
mov
jbe
sbb
addr16
xchg
jae
icebp
jmp
jb
rcl
dec
or
mov
movsl
xor
push
aaa
movsl
in
mov
push
jmp
push
arpl
fs
fisttpll
in
mov
add
xor
mov
or
nop
fldt
outsl
or
dec
popa
ja
cmpsb
std
add
cmppd
ror
outsb
jle
arpl
sbb
fsubl
ret
sbb
jbe
mov
loopne
xchg
popf
add
push
lock
andl
fsubs
add
aam
aam
aad
adc
aaa
inc
sbb
cmp
add
and
or
fldl
das
push
jae
cmp
clc
sti
inc
sub
cmp
out
fdivrl
mov
xor
lods
inc
push
push
sbb
inc
stc
lret
jmp
loopne
xlat
xchg
fimuls
adc
std
testb
push
cmp
pop
lcall
movsb
lods
rolb
jne
sbb
sbb
jno
jle
pop
pusha
mov
pushl
fmul
pop
cmp
in
ljmp
mov
aam
mov
in
push
dec
mov
sub
icebp
and
jno
xchg
icebp
mov
mov
jmp
pmaddwd
popa
adc
sbb
lcall
sbb
jo
jne
dec
sbb
add
test
cwtl
mov
xchg
push
inc
add
scas
jecxz
push
push
sbb
pushf
cli
sub
int3
sub
mov
adc
sti
stos
and
mov
sbb
pusha
ja
rcl
int3
xor
pop
in
test
movsb
pop
inc
pop
dec
imul
cld
push
stos
cmc
outsb
bound
enter
pop
lock
mov
sbb
ja
out
sub
mov
adc
cmp
mov
sbb
inc
cmpsb
cld
dec
add
loopne
add
ret
pop
and
xor
or
cwtl
stc
sub
lods
testb
loopew
adc
xor
ficomps
pusha
pop
insl
xchg
sbb
enter
subb
pop
cs
lret
sub
xchg
add
cmc
pshufw
movsl
jne
popa
cmpsl
add
xchg
scas
scas
mov
or
adc
js
icebp
es
cmp
mov
mov
shlb
xor
lcall
xor
sub
jnp
mov
insb
addb
mov
adc
push
out
sti
xchg
and
inc
and
inc
push
enter
loopne
pusha
mov
push
mov
cmp
aad
push
rcrb
pop
mov
rclb
cmp
adc
jns
dec
xor
inc
inc
sub
pop
out
sahf
xor
and
mov
mov
popa
imul
fsubp
pop
int3
mov
cli
in
pop
outsb
out
bswap
gs
jno
in
in
pop
int3
cmpl
and
sbb
fcmovbe
test
mov
or
lcall
cmpsb
cmp
fwait
les
lret
sub
unpcklps
ret
movsb
rcrb
rcll
lcall
arpl
mov
inc
and
in
into
mov
adc
mov
popa
shl
and
pop
add
jge
pop
hlt
xlat
mov
adc
jb
imul
ja
frstor
enter
cmp
dec
cmp
jp
dec
pop
rcrb
pushl
loopnew
push
ja
sbbl
or
xchg
push
shl
test
gs
pop
jno
xchg
mov
lods
cmp
adcl
or
mov
cwtl
das
leave
iret
xor
arpl
pushf
mov
jge
inc
xlat
icebp
call
out
pop
adc
ficomps
push
in
ds
bound
call
mov
inc
rcr
out
nop
push
stos
inc
or
jno
and
xchg
push
or
outsb
mov
in
mov
push
sbb
jmp
iret
mov
ret
scas
inc
lahf
cmp
jns
dec
mov
or
lcall
and
and
inc
inc
loop
rcl
cmp
pushf
add
in
fs
sahf
pop
inc
mov
repz
push
test
ja
addr16
arpl
test
fsubrs
adc
and
ljmp
mov
popf
ja
jbe
mov
and
jl
std
aas
aad
aaa
jle
adc
pop
push
popa
adc
sbb
dec
test
test
jge
incb
mov
cmp
xchg
nop
je
test
xchg
pop
stos
call
xchg
pop
or
and
jne
test
dec
lret
into
cmp
out
leave
in
xchg
dec
pop
outsb
addr16
test
add
or
sbb
jo
jno
jg
sub
inc
negb
test
ret
mov
xor
jp
int
mov
and
loop
and
jb
scas
xchg
iret
add
ja
hlt
mov
xchg
jl
push
jle
jae
test
cld
push
push
sti
leave
les
icebp
or
push
push
add
push
lret
bound
lcall
cmp
and
clc
add
les
xchg
imul
or
sbb
in
movsb
push
lret
aaa
das
mov
inc
cmp
or
stos
hlt
pop
frstor
inc
scas
stos
mov
jl
or
ds
fcmovne
mov
xchg
or
cmp
outsl
sarl
push
xchg
sbb
shll
repz
cltd
pop
mov
and
icebp
mov
push
jnp
lret
pop
in
rcl
mov
pop
stc
popf
stos
fcmove
sbb
mov
mov
mov
or
sub
insl
cli
pop
in
shlb
xor
imul
sub
cmc
sub
and
je
jne
add
fdiv
jae
fmulp
sub
lods
sahf
xor
push
dec
test
push
jne
jle
jp
clc
push
cmp
rcll
arpl
jecxz
sub
test
es
jge
lock
xor
outsl
addr16
mov
das
sbb
xchg
sub
xlat
mov
roll
rcrl
jo
push
test
stos
sahf
dec
lds
in
aad
cli
call
xchg
or
cmp
je
pop
mov
mov
xor
jp
andl
pop
shlb
dec
mov
aad
or
ds
lret
iret
mov
in
mov
fucomi
xchg
outsb
iret
jl
mov
and
icebp
inc
mov
push
ds
mov
call
scas
jp
mov
add
or
aad
cmp
mov
mov
or
pop
cltd
pop
arpl
or
clc
andb
jbe
jmp
lret
push
movsl
in
mov
push
sub
je
pop
or
xor
aas
ds
pop
std
sahf
fcomip
outsb
sbb
mov
mov
mov
mov
inc
dec
adc
pushf
inc
cmpsl
or
mov
jns
loop
pop
or
and
inc
push
add
in
inc
into
jb
sbb
test
and
in
les
pop
in
mov
push
jae
adc
xor
push
cmp
out
ret
xor
push
in
pop
push
les
clc
imul
ret
dec
jne
xor
aas
rcr
xchg
cld
loop
imul
inc
test
or
ficoml
inc
pop
cli
decb
shlw
insb
ret
adc
cmp
test
dec
lock
insb
adc
mov
test
inc
mov
jne
or
xor
or
mov
mov
adc
cmp
lds
imul
and
add
adcl
push
sub
shll
in
imul
jno
push
data16
dec
fcompl
sbb
bound
mov
bt
and
ss
jle
incb
sub
and
jb
dec
pushf
jp
shll
frstor
mov
mov
push
or
out
mov
pop
mov
scas
mov
dec
in
cmp
lds
ret
sbb
dec
inc
in
mov
arpl
inc
pop
bound
jno
pop
addl
decl
jo
test
mov
cmp
mov
je
addr16
or
push
test
sbb
cwtl
or
xor
or
dec
xchg
add
stc
jb
mov
imul
pop
sub
xchg
and
sbb
mov
addr16
fsubr
loop
in
dec
out
lods
xchg
xchg
mov
mov
outsl
movsb
push
jecxz
push
sbb
push
je
test
mov
adc
ja
dec
ss
xor
in
push
arpl
push
dec
push
out
ja
jmp
jp
mov
mov
jmp
js
je
pop
pusha
mov
adc
aaa
lock
test
inc
lret
or
jns
lret
cmpsl
sub
or
cmp
das
pushf
pop
stc
test
and
cs
or
mov
mov
jg
dec
cltd
stos
push
pop
rcrl
xchg
and
test
ret
sbb
ret
pop
in
imul
inc
mov
cmp
sahf
mov
int3
mov
stos
xchg
in
pushf
or
jmp
iret
mov
lods
lea
sbb
sub
test
popa
or
sub
test
call
aam
or
dec
popf
add
imul
mov
dec
arpl
sbbb
lret
fcmovu
out
movsb
mov
dec
movsl
jno
push
mov
mov
lods
inc
push
or
call
lea
fbstp
popf
int
loopne
into
cld
push
repnz
adc
popf
dec
push
dec
push
adcb
xor
sahf
xor
adc
clc
adc
sbb
shlb
jp
push
ret
outsb
test
pop
sub
push
add
sub
mov
jb
ss
jl
shrl
jle
jbe
mov
js
call
xchg
xor
nop
cmp
jae
shll
pop
movsb
sbb
out
adc
daa
inc
inc
fs
int3
rclb
addl
mov
add
pushf
mov
stos
repnz
in
lds
add
sub
bound
je
iret
jne
jo
jg
leave
pop
das
mov
loope
insb
jge
repz
jae
in
add
addr16
inc
outsb
mov
outsl
repnz
popf
cli
xor
xchg
fdivl
push
pusha
aaa
xchg
pop
xchg
sub
cmp
rorb
aad
testl
adc
ja
inc
pop
adc
aad
clc
mov
adcl
xchg
loop
push
xor
push
sub
push
fwait
hlt
cvttps2pi
lods
loopne
xor
jmp
push
cld
xchg
jnp
mov
jl
popa
pop
mov
mov
or
cmp
mov
aas
lcall
jns
sbbl
call
sub
jnp
cwtl
fstpl
adc
xchg
test
cmpl
ret
outsl
test
popf
stc
int
mov
lods
dec
pop
imul
std
lods
and
clc
or
push
fdivrp
mov
gs
rcll
inc
ds
aad
lock
testb
push
mov
cmp
push
popf
call
push
ljmp
int3
jl
push
hlt
addr16
popa
es
add
test
mov
pop
mov
inc
jno
mov
stos
mov
call
out
fisubs
lret
sti
inc
and
out
xor
ret
add
repz
shll
jnp
dec
mov
add
mov
in
data16
fiadds
mov
mov
sti
aad
mov
loope
jo
sbb
aas
dec
mov
outsb
mov
dec
icebp
mov
inc
es
cmp
cmp
push
xchg
add
push
mov
inc
dec
dec
jge
mov
psrlw
aad
sub
ds
inc
adcb
insb
or
stos
popa
pop
pop
hlt
mov
out
sti
xchg
and
jg
push
ret
out
pop
aad
sub
insb
dec
adc
push
mov
add
incl
rcrb
pop
xchg
ss
dec
js
pop
pop
mov
jecxz
xor
mov
jmp
push
sub
sti
fwait
lea
jle
aad
xor
jle
pop
mov
jmp
sub
les
add
sbb
lods
and
jae
push
sbbl
int
mov
in
sbb
jno
adc
inc
jle
out
dec
pop
outsl
jns
inc
fadds
mov
out
mov
xor
cmp
andl
lds
cmp
shll
mov
addb
loope
pop
sub
cmc
pop
and
in
lds
in
pop
jmp
mov
xchg
stos
lahf
adc
adc
jp
or
cmc
pop
stc
fstpt
lods
mov
push
int
cld
mov
lea
jb
ja
add
mov
inc
loop
cmp
fprem
inc
daa
cmp
push
mov
sbb
add
xchg
stc
sti
pop
pop
cwtl
into
ljmp
pop
imul
xchg
mov
xchg
sub
dec
push
sub
pop
or
fwait
jmp
jg
dec
ss
mov
sahf
addr16
mov
inc
jmp
fstl
cmp
or
mov
fwait
sub
or
mov
lds
movsl
lret
xchg
jle
inc
mov
sbb
insb
inc
xlat
pop
shrb
scas
std
es
push
jmp
leave
and
sub
lret
jno
xor
shll
push
jecxz
lret
adc
stos
fimull
pop
jecxz
xor
push
mov
push
mov
pop
fxch
into
cmp
cmp
push
sub
push
out
cld
xor
xor
cmpsb
fs
pop
and
sub
push
popf
int3
mov
stc
mov
jge
adc
or
add
mov
cmpsb
sub
hlt
or
and
jb
pop
in
jo
add
std
out
sbb
jo
and
adc
xchg
xsaves
outsb
push
lret
push
pop
repnz
rcll
mov
or
faddl
cwtl
sub
mov
ja
push
sbb
xor
push
outsl
push
sub
add
mov
lea
sbb
loop
in
aad
inc
lock
ret
xchg
cltd
xchg
out
test
jecxz
push
in
or
es
stos
dec
pop
adcb
jns
mov
movsb
cmp
pop
inc
push
fldl2t
andl
mov
and
mov
and
clc
test
icebp
push
inc
test
je
pop
jnp
lods
adc
cmp
jecxz
dec
std
xchg
jp
adc
jo
jl
pop
push
push
in
enter
popf
ja
mov
and
sbb
int3
adc
arpl
mov
adc
pop
fbstp
fwait
rcrb
mov
sbb
push
inc
xchg
jmp
mov
fsubrs
or
sti
pop
test
inc
and
rcl
xchg
mov
xlat
shlb
push
sbb
ficoml
sub
pusha
xchg
movsl
jmp
jmp
lea
shrl
les
iret
xor
lods
cld
push
fisubl
lret
and
cmp
cli
ljmp
xchg
xorl
out
cli
xlat
shlb
fsubrs
or
inc
mov
adc
jno
xchg
loope
bswap
pop
xchg
sub
lods
jmp
ret
iret
sbbl
adc
in
int3
arpl
mov
jnp
aam
test
lret
pop
sbb
mov
pusha
pop
int3
jb,pt
jmp
aam
cwtl
insl
das
xor
pusha
mov
pop
or
push
cmpsl
sbb
ljmp
sbb
ljmp
int
sbb
pop
add
mov
pusha
pop
inc
fidivrs
orb
out
lods
mov
inc
das
push
daa
faddl
fldcw
inc
enter
mulb
push
jb
outsl
or
inc
mov
mov
loopne
jo
mov
sti
pop
pop
bound
xchg
cmp
ret
push
or
inc
mov
lds
xor
popf
sub
push
lret
push
mov
mov
addl
clc
stos
ja
and
rcrb
push
test
leave
xor
repnz
sub
dec
arpl
jbe
add
mov
es
cld
ret
les
inc
dec
push
push
mov
into
bound
xchg
lds
lret
inc
mov
lds
fisubrl
jo
jge
xlat
scas
xor
sub
mov
push
stc
sahf
xor
scas
in
das
insl
int3
je
pop
cmp
outsl
mov
sbbb
ds
and
stos
add
insb
xchg
shl
ret
mov
bound
xchg
lcall
inc
adc
mov
xchg
das
dec
dec
rcrb
pop
sub
jb
ds
sub
pop
repz
xchg
adc
test
or
push
loop
push
cwtl
enter
mov
fnsave
mov
pop
imul
mull
xchg
cmp
mov
out
rol
imul
mov
mov
adc
xor
fcoml
and
lea
jbe
insl
jnp
pop
sub
add
mov
fcoms
push
imul
es
fidivrs
cs
xor
int
mov
js
mov
outsl
ret
pop
rorb
mov
sub
pop
imul
adc
sbb
jge
pop
mov
fwait
inc
inc
sbb
test
sti
hlt
dec
mov
inc
inc
mov
pop
sub
pop
leave
out
cmp
loope
mov
jmp
sbb
loop
mov
add
jne
xorl
add
lcall
sub
js
sbb
in
xchg
dec
sbb
pop
jg
clc
mov
fbstp
inc
mov
adc
mov
aas
test
in
adc
cld
stos
and
and
add
inc
ljmp
fldt
out
in
lret
into
mov
add
sub
lods
inc
jg
in
stos
ss
cmpsl
idivb
push
or
popf
inc
call
xlat
or
mov
loopne
aas
push
mov
repz
rclb
lahf
cmpsb
mov
xor
popa
add
rorl
mov
xchg
fadds
nop
xor
adc
or
and
imul
test
dec
test
or
cmp
pop
sbbl
fdiv
sub
loope
jne
setp
lods
push
sbb
lcall
mov
add
pop
mov
ret
sti
mov
aas
xchg
fcomip
push
int
orl
sub
jb
imul
clc
pop
fnsave
sbb
xchg
or
test
mov
ja
icebp
movsl
mov
sbb
mov
xchg
repz
movsb
mov
mov
jo
in
test
pop
lods
adcb
inc
dec
mov
adc
xchg
aaa
shrl
scas
add
or
insl
into
ljmp
sahf
and
and
mov
mov
xor
dec
fs
mov
fldl
mov
jl
in
jo
scas
int
mov
jbe
shlb
add
loope
lret
dec
or
cmp
mov
stos
cwtl
jb
lret
mov
test
sub
cmc
and
mov
ret
add
sub
aaa
pop
cmpsb
cmp
rorl
xchg
mov
aad
jg
fnsave
dec
or
push
in
adc
popa
inc
dec
sbb
add
adc
adc
in
pop
jne
subb
les
arpl
int
movb
mov
mov
movsb
and
jbe
pop
cmc
jo
cmp
out
mov
mov
push
in
pop
mov
push
lcall
inc
mov
ror
pop
fimull
fdivrs
rep
jns
push
lcall
push
cwtl
xchg
sub
int
call
clc
xorl
mov
xchg
loope
imul
popf
lea
xchg
jle
in
mov
cwtl
and
dec
inc
sbb
clc
jge
xor
shl
pusha
cmp
jecxz
lock
aam
rolb
jnp
add
pop
sub
adc
pop
inc
stos
jge
arpl
data16
pop
xor
sbb
aam
cmp
cmp
gs
sbb
inc
mov
mov
dec
shrb
add
andb
leave
mov
mov
mov
cltd
mov
and
out
test
lea
fdivs
outsl
lods
stc
popf
sub
shl
sub
xlat
and
push
push
jne
frstor
push
in
mov
mov
mov
jns
cmp
cmpps
lahf
pop
cmp
out
nop
sub
mov
fmuls
xchg
addr16
leave
shl
push
add
mov
lret
jmp
in
sbb
mov
jge
shr
xlat
xchg
popf
or
les
mov
xor
in
pop
test
sbb
sbb
loope,pn
mov
out
add
out
inc
clc
push
sti
push
lock
inc
push
out
push
xor
lds
mov
outsl
mov
fwait
inc
add
mov
in
lods
jo
sub
xchg
mov
icebp
or
je
repz
lea
adc
and
adc
jecxz
les
mov
cmp
inc
lret
in
ficomps
repnz
dec
imul
adc
sar
gs
data16
inc
jmp
insb
and
les
jmp
cmp
xchg
push
and
addb
leave
rcl
xor
fisubrl
lods
iret
gs
inc
insl
sahf
subb
add
lea
pop
ret
jp
mov
lods
pusha
loope
lret
inc
mov
bound
pop
xchg
lds
mov
loop
adc
lahf
mov
mov
xchg
xchg
loope
jge
and
lahf
test
out
pop
pop
lea
push
fisubs
adc
jns
pusha
xchg
and
mov
jbe
inc
cwtl
mov
sbb
dec
cmc
movsb
mov
lea
sbb
mov
xchg
add
adc
sbb
inc
shlb
mov
adc
mov
jbe
imul
push
je
sbb
mov
push
imul
pop
arpl
lea
movsb
sbb
dec
dec
rcl
mov
enter
dec
and
fcomp
pop
mov
lods
inc
scas
fsubp
push
iret
lret
mov
and
xchg
jno
adc
jecxz
inc
test
hlt
clc
sub
mov
push
push
nop
mov
jl
fsubl
test
ds
call
test
lods
ficompl
mov
pop
fmuls
mov
test
push
scas
inc
lock
mov
pop
lret
mov
push
jbe
lods
cmp
pop
mov
iret
pop
jno
lahf
call
shll
inc
and
cmp
imul
sbb
mov
or
sbb
add
js
rcl
adc
andb
loopne
inc
adc
in
lods
adc
repz
ljmp
mov
mov
xlat
push
jmp
jns
sub
out
popf
flds
outsl
in
inc
push
mov
lret
jb
jl
outsl
lahf
jns
addb
cmpsb
adc
loope
adc
imul
push
mov
pop
lahf
fldenv
es
arpl
scas
xchg
and
lahf
jno
iret
dec
mov
lret
frstor
add
mov
sbb
add
add
mov
mov
xchg
mov
adc
std
mov
jne
dec
xor
insb
aas
rol
lds
dec
jecxz
cs
out
jg
rclb
pop
mov
pusha
stos
cs
pop
push
mov
mov
jmp
testb
mov
xor
xchg
aas
les
out
cmp
mov
push
icebp
ljmp
mov
lret
push
stos
mov
stc
nop
xchg
pop
mov
out
pop
lods
outsl
inc
push
mov
nop
xor
add
loopne
cmpsl
or
jb
jg
jbe
pop
xchg
push
repz
mov
cmp
jp
push
mov
push
stos
bound
xchg
sbb
rol
mov
mov
nop
inc
dec
xor
leave
in
out
xchg
jmp
lods
test
xchg
cs
xor
out
sbb
mov
lret
mov
add
sbb
nop
cmp
data16
das
push
sbb
push
shll
xchg
sub
or
mov
sbb
sbb
imul
call
cwtl
or
pop
sub
imul
dec
pop
repnz
les
out
sti
jns
test
lret
imul
push
and
arpl
jo
xor
repz
mov
add
pushf
mov
inc
aam
mov
push
das
test
dec
fcos
ret
popf
call
mov
imul
stos
inc
add
sbb
inc
mov
cmp
mov
dec
pop
mov
add
lds
pop
leave
mov
mov
daa
mov
dec
rorl
adc
iret
push
testl
andb
adc
das
mov
fdiv
jno
int
or
adc
mov
sub
or
xor
lret
xchg
ljmp
jb
mov
xor
cmp
mov
push
sub
mov
outsb
enter
mov
mov
pushf
stos
outsb
mov
mov
cs
ljmp
and
sarb
leave
out
dec
xor
ffree
push
test
mov
mov
test
jne
mov
div
dec
ja
out
cld
push
out
sarl
sub
insl
inc
cmpsl
sahf
ret
cmpb
jge
ret
jp
or
adc
sbb
call
adc
and
or
mov
inc
mov
cmpsb
imul
mov
jl
stc
xchg
sub
or
push
jge
ds
xchg
adc
loop,pt
mov
dec
psllw
popf
push
outsl
mov
jae
arpl
jae
or
dec
cmc
xchg
mov
nop
insl
es
xchg
xchg
adc
enter
sub
scas
call
mov
test
mov
imul
addr16
fcomip
cli
mov
nop
mov
push
stc
aaa
pop
dec
add
adc
int3
cwtl
mov
lret
inc
and
js
fidivs
stos
cltd
adc
add
and
cld
push
or
lret
data16
aaa
sub
out
shrl
cs
push
sub
imul
sahf
insb
andb
popf
inc
cld
sbb
adc
outsb
pop
push
jl
push
xor
sub
shlb
xchg
enter
sub
mov
movsl
cmp
lret
add
ljmp
mov
push
in
push
outsl
cli
xchg
gs
les
loop
pop
sbbl
pop
dec
aam
pop
aad
loop
js
adc
xchg
adc
in
enter
dec
outsl
ficompl
xchg
into
and
popl
std
imul
xchg
add
sub
pop
mov
mov
jno
lods
stc
scas
rcr
aas
sbb
mov
sbb
sub
movsb
mov
sub
inc
xchg
and
xor
push
push
inc
mov
inc
pop
int3
fldenv
test
ds
mov
pop
icebp
mov
dec
aam
sbb
cwtl
sub
lods
call
sbbb
push
insl
jge
add
dec
xchg
addr16
sti
push
iret
push
rorl
sbb
add
pop
add
xchg
dec
pop
add
jb
push
jae
in
in
es
adc
cmp
mov
fsts
dec
inc
fidivrl
and
dec
pop
pop
push
fcmovu
imul
adc
and
xor
add
cmp
shl
inc
scas
out
std
jge
pop
sbbl
faddl
push
mov
cmp
cmp
movsl
sbb
aas
fwait
mov
cmpb
scas
cmp
imul
lods
rorb
fmul
push
mov
imul
jo
ret
mov
lahf
les
gs
inc
or
repz
or
popa
dec
in
call
sub
je
sub
lahf
pop
cmp
and
test
or
loop
cmp
jae
addb
dec
orb
jo
in
sbb
push
hlt
shlb
jmp
or
jae
xchg
ja
in
mov
mov
call
fs
pop
dec
push
aas
push
jns
and
jb
sahf
lods
dec
sub
pop
inc
inc
popa
xchg
and
stc
sub
dec
cwtl
fdivs
repz
push
imul
aam
push
sub
inc
adc
ret
lret
xchg
rcrb
pop
cmp
ret
xor
les
jo
dec
mov
les
insb
or
xchg
and
bnd
xor
adc
cmp
add
repz
xchg
dec
stos
shrl
sub
mov
ret
xor
jp
sbb
add
cltd
or
data16
cwtl
stos
mov
jne
xchg
gs
add
fwait
idivb
cmp
lds
jl
gs
cmp
add
push
scas
int3
loop
mov
pop
push
and
cwtl
and
xchg
xor
cmc
jbe
lods
subl
mov
inc
aas
xchg
call
stos
xlat
dec
pop
adc
dec
mov
mov
jge
jno
mov
out
cld
out
dec
stc
or
shll
or
test
test
scas
frstor
lods
shrb
jge
icebp
jecxz
cmpsl
dec
inc
pusha
jg
sbb
or
dec
scas
sub
fisttpll
jmp
fs
pop
scas
xor
xchg
push
mov
subb
in
push
scas
lods
shrb
mov
cmp
js
mov
pop
addr16
and
sti
sarb
and
mov
popa
and
stc
mov
ret
cmp
mov
addr16
clc
push
lods
sub
sub
inc
inc
shlb
xchg
lret
push
xchg
push
sub
and
inc
inc
leave
jns
cs
xor
pop
or
lret
mov
movsl
cmpsb
rclb
ficoml
jp
cmp
cmpl
jb
negl
jb
inc
mov
jle
shl
ds
and
push
jmp
lret
hlt
add
jg
sbb
rorl
jl
mov
pushf
sub
pop
dec
dec
jae
dec
aad
sbb
and
cs
neg
add
push
test
jg
and
xor
js
cmp
mov
jnp
xor
shlb
outsl
pusha
lahf
imul
nop
push
sahf
ja
shlb
pop
mov
test
daa
mov
xchg
or
fistpll
mov
mov
push
sub
ret
fbstp
xchg
out
cmpsb
sub
test
mov
add
push
mov
mov
test
sbb
and
sbb
loop
aas
adc
or
aaa
imul
mov
rcrb
stc
das
mov
subb
into
ss
das
xor
cmc
ret
mov
jb
js
cmc
scas
rorb
fstps
adc
jnp
jnp
jmp
loop
sub
and
mov
ret
pop
xchg
dec
mov
mov
shrb
inc
out
test
insl
stc
push
ja
mov
dec
adc
fldl
daa
jl
popf
mov
frstor
cmp
leave
lods
ret
out
ja
imull
shlb
mov
jns
daa
mov
rorl
fnstsw
mulb
push
ss
rep
dec
mov
lock
mov
and
imul
add
mov
dec
inc
sarb
icebp
xor
mov
jno
mov
sbb
adcb
pop
shll
push
xor
sub
sbb
cmpsb
dec
cmc
cmpsl
stos
xchg
pop
adc
fdivrs
cmp
push
out
or
cld
daa
leave
lret
aad
xchg
mov
mov
sbb
jg
out
cmp
sub
inc
lock
aaa
test
mov
add
inc
inc
pop
and
inc
push
jecxz
add
mov
inc
mov
rorl
cwtl
jp
lcall
roll
or
pop
ja
add
mov
or
mov
orb
shll
ljmp
andl
in
xor
repz
xchg
scas
cmp
inc
lock
movsb
les
or
push
jl
out
mov
or
and
add
jnp
sbb
or
hlt
ljmp
cwtl
or
sub
push
pop
jle
mov
add
cmpsb
or
pushf
cmp
dec
cmp
inc
sub
jae
adc
mov
icebp
cli
nop
adc
push
mov
pop
aaa
in
ljmpw
cmp
repnz
int
aam
push
or
roll
mov
mov
sub
push
mov
mov
je
loopne
shlb
jmp
into
test
inc
jb
add
cmp
dec
jae
aas
outsl
ss
push
xchg
mov
adc
aam
iret
add
cwtl
sub
popa
clc
mov
data16
arpl
outsl
add
add
aas
add
aas
xor
cmpl
mov
mov
rolb
push
pusha
cli
xchg
ret
aad
outsl
xor
in
sahf
adc
push
cltd
adc
xchg
repz
out
orl
sbb
mov
sub
fucomip
dec
dec
sub
push
ret
jns
sbb
mov
mov
imul
mov
xor
mov
pop
ret
icebp
mov
pop
sub
sub
rcll
xchg
push
test
in
cmpsb
pop
dec
sub
mov
mov
lea
repnz
movsl
and
mov
jg
fnsave
sub
shl
push
push
fwait
xor
stos
aam
mov
adc
ljmp
inc
xor
insl
outsl
jne
jecxz
nop
xrelease
push
mov
xor
xchg
dec
xchg
jecxz
xor
hlt
pop
inc
lock
pop
cld
loopne
or
pop
bound
popf
and
mov
cmpl
mov
adc
das
int3
fmulp
std
push
mov
loopne
repz
sub
repnz
inc
dec
insl
fldenv
jo
pop
clc
out
sti
pop
lcall
jmp
out
push
test
js
jbe
xchg
cltd
or
cld
and
sub
loopne
arpl
or
mov
dec
sub
or
repnz
imul
mov
lods
fstpt
add
push
pushf
adc
test
xchg
sub
xchg
xor
mov
clc
je
sub
mulb
ret
ss
cmc
jae
xchg
add
lds
les
test
jmp
xchg
je
pop
add
mov
mov
out
incb
rcrl
sbb
dec
mov
aaa
jmp
push
stos
mov
or
lock
xor
jo
sar
inc
mov
negl
aas
push
xchg
jo
loop
push
mov
out
mov
insl
mov
cmpsb
test
in
das
sub
xor
fnstenv
pop
dec
sti
in
mov
push
cmp
sub
outsl
mov
sbb
xchg
sub
call
das
int
jo
sub
jmp
pop
xchg
xchg
dec
sahf
ret
mov
addr16
jno
daa
fildll
ror
es
pop
movsl
repz
lods
and
mov
mov
into
dec
movsb
mov
int3
sub
xchg
imul
lahf
aaa
ljmp
pop
xlat
inc
dec
iret
jecxz
das
pop
test
xchg
pop
int3
out
icebp
fsubl
sti
lcall
les
subb
xor
test
xchg
int3
cmp
ficoml
dec
sub
loope
sarl
repz
lods
or
insl
into
gs
mov
push
sbb
push
out
add
insb
inc
jns
pop
ja
rorb
call
jnp
mov
lcall
loope
lret
sub
fistl
fisubs
mov
push
add
in
xlat
mov
aaa
jg
push
mov
cli
cmp
sub
xor
pop
push
xchg
loopne
popf
xor
and
pop
out
cmp
pop
les
mov
jne
stos
ljmp
inc
fstps
int
jns
xor
mov
xor
lock
jo
jb
xlat
test
cmp
dec
lret
imulb
pop
xchg
je
loope
sbb
insl
pop
jno
or
inc
les
andl
jl
fidivrs
jl
cltd
push
xchg
insl
int
fwait
cmpsl
sbb
shrb
mov
fwait
jg
push
cwtl
fistpl
orl
pop
in
or
xchg
sub
cmp
js
adc
inc
push
jp
loope
rorl
xor
jecxz
push
xor
movsb
cs
daa
mov
push
ljmp
lock
pushf
mov
inc
sub
loope
fldt
fiaddl
mov
jb
sbb
jle
sub
je
push
xor
imul
mov
sahf
dec
cld
int
jl
pop
dec
cli
stos
iret
in
jne
cwtl
int3
push
fmulp
fcoml
xchg
mov
cwtl
pop
sub
sub
hlt
add
cld
xor
push
jne
xor
mov
lret
les
dec
shl
loope
ljmp
push
or
xchg
dec
add
mov
sarb
loop
std
mull
int3
xor
test
push
ja
jb
and
jmp
mov
shlb
bound
jb
lods
jo
sbb
jns
std
lahf
mul
sarl
or
outsb
test
cmp
jns
xchg
mov
pop
add
fdiv
add
push
jle
push
inc
mov
aam
dec
sbb
ss
lea
imul
or
pop
addr16
hlt
rcrb
jne
mov
cmc
je
xchg
pushf
cli
clc
push
xchg
push
popf
jno
out
mov
mov
jnp
push
in
inc
test
daa
adc
stos
dec
adc
scas
jnp
add
xor
mov
mov
adc
push
fptan
lea
mov
pusha
jbe
dec
es
mov
ret
inc
shrl
push
jno
adc
lret
sarb
jno
mov
or
das
shrl
push
out
jne
imul
adc
enter
mov
cmc
dec
pop
aam
std
inc
mov
mov
push
mov
dec
push
fidivs
les
aaa
dec
pushf
pushf
adcb
stc
out
outsl
push
lahf
jmp
mov
repnz
mov
inc
cltd
sahf
and
xor
stc
push
xchg
scas
or
jae
rcrb
mov
stc
or
jg
sbb
push
into
mov
dec
lock
rcrb
jb
or
test
pop
popf
mov
xchg
test
movsb
rorl
pop
cmc
dec
inc
lret
insl
insb
incl
loopne
pop
push
sbbl
jp
adc
mov
pop
popf
inc
adc
scas
pop
call
mov
jg
mov
cmp
sbb
add
cmp
sub
sbbl
jmp
fsubrs
push
xchg
mov
push
inc
mov
dec
inc
stc
inc
inc
xchg
cmp
adc
int
outsl
cwtl
sub
nop
sbb
mov
sti
inc
xor
sub
xchg
xor
daa
mov
pop
pop
inc
pop
xchg
scas
test
mov
xchg
stc
adc
and
xchg
fxch
cltd
jge
cli
xor
push
inc
ds
ja
pop
repnz
cmpl
mov
and
jns
push
std
xchg
das
cmp
mov
push
js
sbb
sbb
cmpsl
mov
flds
inc
imul
cmp
and
add
cmp
out
imul
lahf
xor
and
mov
inc
jae
mov
sbb
repnz
mov
inc
popf
adc
cmpsl
fdivs
addl
jmp
sbbl
dec
movsl
lcall
int
dec
mov
aam
add
pushf
mov
fisubrs
inc
xor
cmp
push
add
adc
leave
inc
mov
dec
sub
cltd
lods
cmc
mov
jnp
jge
xchg
nop
loop
aam
and
out
dec
xchg
rclb
pop
xchg
cmp
repz
lods
or
sub
adc
mov
lret
fsts
xchg
pop
call
cwtl
in
ja
jmp
rcr
push
ss
jno
jmp
sub
mov
cmpsl
ss
loopne
push
and
xchg
dec
xchg
jnp
stos
outsb
mov
scas
fistpll
push
push
cmp
in
in
aaa
inc
and
jmp
xchg
daa
inc
out
jb
inc
xor
scas
lock
cmp
fwait
dec
push
or
je
cmpsb
jg
lods
mov
mov
sbb
decl
das
sahf
jno
mov
push
push
out
lret
das
push
fnstcw
mov
fisttps
and
or
call
jmp
sub
inc
sbb
frstor
js
add
mov
jmp
cmc
fs
dec
ret
sbbb
in
dec
mov
and
pop
test
inc
and
mov
rcrl
push
ret
loop
add
outsb
std
nop
mov
jp
cmp
sub
sbbl
or
fwait
inc
sti
stos
jne
movb
xor
aad
or
les
and
jb
ficoml
pop
cmp
sbbb
xor
push
out
cmpsl
addr16
cli
ret
inc
mov
cmpb
test
fs
adc
add
push
push
sahf
fstl
aam
aaa
loopne
cld
cmc
pop
cs
dec
pop
movsl
inc
inc
xlat
jae
mov
dec
ffree
jno
jecxz
mov
xchg
cmp
or
cmp
imul
jne
fwait
mov
xchg
or
add
xor
push
ljmp
lods
cmc
aam
mov
or
xor
fsubrs
scas
dec
mov
rorb
mov
rorb
lds
pop
adc
leave
fs
cmp
lods
push
gs
push
nop
jae
mov
jmp
in
test
mov
and
mov
in
dec
jl
lret
bound
jmp
pushf
movsl
sub
or
inc
pop
rcr
outsl
adc
movsl
lcall
mov
out
cmp
cltd
fdivs
jge
test
mov
add
fdivrs
in
mov
dec
pop
leave
cmc
aaa
aad
xor
adc
xor
jmp
js
les
dec
push
enter
inc
repnz
cmp
or
je
dec
rcrl
call
mov
xor
pop
xor
insl
in
in
and
cmpsl
jge
mov
fwait
bound
inc
nop
or
mov
sbb
or
cltd
outsl
sub
insb
xor
jle
cmp
gs
loop
fsubrl
sbb
jge
mov
cld
xchg
faddl
divl
in
jb
fldenv
adc
jno
dec
cs
mov
push
cmp
inc
in
sub
mov
idivl
sbb
mov
arpl
lods
mov
or
cmp
push
cmpsl
cwtl
cs
repz
and
enter
cmp
outsl
outsb
cltd
cmc
mov
mov
cmpsb
xor
push
push
jb
cmpl
inc
jle
out
pop
scas
add
lods
xor
int3
pop
lock
sarb
test
dec
or
and
or
es
mov
sub
cmp
cld
sbb
insl
rcll
cs
data16
mov
cwtl
mov
outsl
xor
jb
pop
cwtl
lcall
cmc
add
imul
scas
lahf
xchg
xor
add
subb
mov
in
pop
repnz
mov
mov
pop
push
mov
xchg
mov
enter
mov
mov
pop
jl
in
sub
call
in
sbb
sar
adc
rcll
incb
in
xlat
xor
pop
sub
sti
mov
pop
xor
dec
pushf
adc
ss
inc
add
int
sti
dec
push
add
mov
cmp
out
aas
in
pop
repnz
aam
loop
pop
mov
shlb
call
cs
xchg
adc
mov
frstor
push
adc
iret
pop
push
or
push
or
mov
int
pop
fsubrs
lods
adc
add
mov
and
xor
js
std
and
mov
inc
les
push
je
mov
lahf
ficomps
or
out
and
int
add
fcompl
mov
js
inc
fsubrl
sbb
add
cmp
xor
or
das
cmp
inc
mov
incl
mov
fldl
cmc
cmpsl
aas
fildll
in
pop
notb
xchg
mov
int
inc
ret
daa
hlt
addr16
xchg
dec
out
jecxz
xor
and
mov
outsb
jno
pop
xchg
xor
cmp
sahf
pop
mov
xchg
cmp
push
add
aam
add
imul
lods
dec
loope
inc
xor
xchg
mov
adc
fbld
xchg
adc
jae
xchg
movsl
lock
jb
or
jbe
ret
xchg
ds
insl
adcb
das
pop
cmp
neg
sub
add
push
rcrl
fildl
enter
bound
xchg
inc
jb
xchg
dec
pop
cmp
clc
and
sbb
mov
or
mov
leave
fwait
sub
stc
push
and
sahf
and
iret
jge
dec
mov
aas
xchg
adc
push
in
mov
mov
mov
repnz
daa
inc
jns
cmp
and
je
push
sbbb
sti
mov
repnz
inc
shr
out
rclb
stos
loop
pop
rcr
inc
inc
sti
add
inc
in
cltd
rorl
sti
push
test
dec
fdivr
push
fdivrs
sbb
cld
dec
pop
push
call
fwait
push
dec
lret
xor
inc
pop
cmp
flds
sub
stos
mov
pop
xor
mov
ja
mov
lret
aas
out
push
xchg
lods
xchg
mov
bound
arpl
divb
popa
outsl
jnp
sbb
pop
pop
and
jp
bound
sbb
daa
cmp
pop
cld
jmp
dec
push
cmpsl
xchg
ja
nop
mov
loope
push
cs
jbe
cmp
icebp
hlt
and
mov
and
fxch
cmp
shr
push
in
ret
sub
pusha
nop
mov
or
clc
mov
mov
jg
out
in
dec
cltd
js
push
and
repnz
xchg
arpl
mov
sub
outsb
jae
cld
ja
hlt
movsb
mov
shlb
add
into
gs
inc
loope
out
add
dec
in
inc
loop
mov
aaa
adc
and
lods
mov
mov
lock
outsl
iret
push
fldenv
lret
bound
dec
lret
test
int3
jecxz
xchg
sahf
xor
or
push
or
lret
jmpw
into
xchg
repz
mov
add
cwtl
cs
xor
fs
sub
xor
adc
iret
push
inc
pusha
cmpsl
or
sbb
aaa
ficomps
daa
cmp
insl
enter
or
or
mov
mov
insl
insb
sbb
mov
ja
out
pop
lahf
mov
pop
cmpl
mov
pop
adc
loopne
push
or
pmulhuw
inc
sahf
adc
sbb
std
push
loopne
leave
adc
sti
inc
outsb
xor
andb
ss
mov
jnp
and
pop
mov
loope
rcl
add
dec
movsl
xor
loop
shll
mov
jg
xchg
jne
jl
mov
idivb
and
ret
fdivl
adcb
scas
clc
cmp
adc
sbb
cmpsl
movsl
xchg
adc
enter
jne
cmc
andb
cmpsb
clc
sub
mull
fistps
repz
adc
fucomi
loopne
dec
add
mov
decb
lret
out
pmullw
mov
sub
leave
push
sbb
mov
pusha
xor
jecxz
sbb
repz
inc
sbb
and
xor
cmp
mov
cmpsb
pushf
xchg
mov
mov
xor
mov
and
jbe
push
xor
inc
and
mov
pop
int3
xorl
lea
inc
fwait
je
jo
jg
cli
jne
push
popa
fdivrl
mov
cmc
adc
xchg
leave
test
or
stos
mov
arpl
mov
clc
es
or
sti
mov
repz
add
mov
imul
stc
or
xchg
popa
sub
jg
push
in
jg
addr16
adc
dec
sub
inc
int3
pop
cmp
scas
dec
or
fs
adc
pop
mov
repz
cmp
mov
in
out
test
stos
in
jp
inc
add
cmp
mov
shl
int3
adc
adc
mov
inc
das
mov
xchg
cmp
out
in
or
jbe
andb
rcrb
ret
pop
jb
add
call
mov
pop
mov
and
jns
pusha
enter
inc
push
lds
jnp
mov
push
cmpb
push
ds
test
in
hlt
arpl
insb
dec
or
outsl
mov
dec
inc
and
or
lahf
mov
inc
cmp
sub
cmp
xchg
stc
inc
aas
popa
inc
jge
jb
inc
das
mov
adc
adc
fistl
pop
push
test
addl
scas
push
sbb
cmp
iret
add
push
xor
aam
xor
gs
js
fistl
mov
out
mov
pop
mov
aas
aam
xchg
punpcklbw
inc
pusha
add
stos
mov
mov
aad
adc
pop
xchg
rclb
fistps
dec
add
das
insl
push
scas
push
cmpsb
mov
lock
and
mov
negb
adc
mov
cli
or
in
and
pop
cld
int
mov
ja
mov
inc
out
fidivl
in
and
inc
ret
push
dec
lock
ret
add
xor
xlat
outsl
xchg
add
daa
test
sub
jbe
ret
push
xchg
xor
push
push
cmp
addr16
fwait
icebp
ficoml
jl
icebp
je
push
lods
adc
js
push
in
pop
dec
cltd
cmp
pop
cmp
test
movsb
xchg
fwait
pop
adc
push
and
jnp
test
adc
pop
mov
adc
incl
push
fmull
inc
and
sub
in
les
inc
arpl
mov
sahf
or
push
mov
or
jecxz
cmpsb
les
mov
out
jno
sub
push
sti
jae
lea
xrelease
jnp
inc
and
int
pop
or
inc
or
xlat
lods
test
pop
stos
dec
dec
pop
jns
sub
dec
outsl
leave
pop
fwait
dec
push
inc
in
fcoms
nop
inc
clc
adc
mov
out
aas
push
mov
add
mov
or
or
test
jo
mov
jne
xor
enter
cmp
sbb
pop
or
cmp
lods
inc
mov
and
and
aas
loopne
dec
inc
loopne
std
jae
inc
push
nop
dec
jl
arpl
sbb
ror
jns
and
pusha
fistpl
ret
jle
repz
push
lahf
add
outsl
inc
dec
cmp
sub
mov
mov
enter
and
mul
mov
xchg
add
inc
pop
das
or
push
xchg
add
mov
jne
sub
cltd
cmp
stc
mov
f2xm1
pop
insl
repz
jg
pop
leave
pop
ret
cs
arpl
dec
leave
xor
push
cmpsl
adc
mov
pop
jbe
addl
mov
push
mov
faddl
icebp
adc
sub
xor
sahf
pop
testl
xchg
aaa
into
and
sbb
rclb
dec
cwtl
sbbl
lods
mov
shll
xlat
pop
out
or
mov
mov
adc
shll
sub
xor
xchg
xlat
cmp
or
adc
jo
daa
lods
pop
stos
inc
clc
and
xlat
xchg
leave
pusha
enter
ret
mov
stos
in
inc
sbb
lcall
dec
mov
aad
and
pop
movsb
cmp
jnp
pop
xor
xlat
adc
sbb
out
test
iret
or
mov
outsb
addr16
jge
lods
and
and
test
out
xor
fimuls
dec
in
push
test
pop
insl
sahf
addb
jbe
cs
sbb
pop
das
mov
pop
imul
mov
cmp
test
mov
xchg
push
cmp
popa
xor
repz
movsl
cmp
add
aas
push
inc
into
mov
das
sbb
bound
es
jne
add
xchg
jg
or
fsubs
daa
add
ss
sarl
mov
aas
dec
ss
popf
xchg
xor
call
lea
sub
xchg
addl
and
pop
repz
mov
lods
inc
push
pop
push
cmpsl
stos
mov
mov
jo
push
cmp
test
pop
push
mov
jo
stos
fnstsw
sub
adc
dec
mov
jge
mov
je
lret
sti
cs
jg
push
ret
loop
adc
inc
test
mov
jnp
lds
dec
jecxz
call
fs
sub
out
add
xchg
or
clc
imul
adc
push
int3
jo
cmp
ljmp
jmp
ljmp
and
fldt
pushf
popa
sbbb
jns
and
push
lahf
test
or
scas
or
ret
xchg
loop
lods
xchg
sub
cli
dec
push
mov
mov
inc
repz
sti
mov
repnz
jnp
cld
lods
gs
add
adcl
andl
adc
adc
clc
mov
popl
repz
fsubl
dec
mov
clc
xchg
or
incb
xchg
xor
std
adc
fldenv
cmpsl
sbbl
and
or
ja
aad
mov
sbb
pop
xor
leave
outsl
or
mov
imul
lret
mov
mov
fsubr
leave
mov
mov
aas
ret
insb
cwtl
popf
in
pop
cmpsb
fidivl
daa
push
add
daa
jl
popa
mov
sbbb
gs
fistpl
xor
stc
jl
in
xor
je
or
scas
sub
pop
and
dec
inc
or
decl
insb
sbb
dec
test
xchg
movsl
xchg
pop
lock
js
pop
jno
mov
ljmp
inc
inc
enter
cmp
push
in
pop
xchg
icebp
pop
xchg
ja
xchg
jbe
int3
outsl
in
andl
lret
push
jae
push
js
xchg
cwtl
outsl
mov
push
notb
mov
fwait
push
ds
fsubrs
fcoml
fidivl
adc
cmpsl
outsl
cmp
jo
sti
xchg
repz
repz
push
out
cmp
testb
jge
dec
xor
pop
cmc
fld
xor
in
outsl
cmpsl
loopne
ljmp
movsl
mov
xchg
xchg
jbe
xor
ret
jnp
inc
fcoms
xchg
les
js
or
cld
xchg
adc
xor
jmp
jne
sbb
xor
sbb
fdivs
cmp
testb
pusha
sbb
or
imul
ja
out
pop
mov
mov
iret
dec
jmp
inc
fdivrs
dec
lret
ljmp
out
ja
out
ja
lcall
dec
movsl
xor
andl
dec
or
jae
fs
test
xchg
jns
and
sub
ds
push
sub
cmp
aad
lock
rclb
mov
xchg
cmp
dec
push
xlat
push
push
mov
es
pop
pop
les
pop
adc
adc
cltd
mov
mov
jl
cmc
out
imul
sbb
add
mov
mov
sbbl
jecxz
mov
in
ljmp
dec
or
mov
jp
pop
lds
pop
sbb
fsqrt
int
inc
sbb
out
fmull
lahf
leave
push
sub
xlat
xchg
js
push
stc
mov
sub
fdivrp
scas
insb
cs
mov
xlat
lret
cmp
repnz
repz
sbb
nopl
test
cmp
cli
subb
cmpl
insl
jge
nop
sbb
stos
pushf
cmp
xchg
jbe
mov
pop
les
jle
ret
push
sbb
jp
mov
xchg
shrb
mov
mov
or
mov
sub
inc
adc
fucom
jl
cmp
faddl
arpl
xchg
jo
mov
xor
push
mov
in
js
int
bound
loop
inc
into
xor
aad
mov
inc
repnz
fcoml
fnstenv
pop
push
xchg
sti
lods
jmp
imul
fnstenv
mov
push
in
jp
mov
pop
xor
jg
imul
sub
pop
scas
push
inc
xchg
divb
in
in
jb
mov
test
inc
arpl
ja
jl
test
add
push
leave
cs
jnp
lock
xchg
push
or
jle
xchg
sub
push
mov
cmp
push
pushf
leave
xor
inc
int
ret
push
mov
ret
aad
loopne
test
xchg
push
mov
jmp
nop
sbb
dec
xchg
sti
and
mov
aad
add
stos
jnp
js
stc
sub
push
or
adc
subb
das
mov
nop
inc
fnstsw
mov
pop
and
lahf
aam
sti
xchg
out
addr16
push
clc
incl
jle
xchg
mov
pusha
sbbb
cmp
push
adcl
leave
into
pop
aad
cmpsl
xchg
jl
pop
cmc
fs
add
inc
push
jl
or
pop
lods
jmp
mov
stos
sar
aam
test
dec
ret
xchg
mov
das
fidivl
push
and
das
stos
pop
jnp
sbbb
cwtl
insb
pop
rol
lret
mov
aas
jg
mov
push
int
rol
repz
jmp
scas
push
popf
lods
mov
insb
add
push
pop
rorl
nop
test
cmp
or
mov
cmpsl
or
pop
sub
cmp
push
cmpsb
lock
cmc
mov
jae
or
daa
mov
in
or
enter
fbld
xchg
arpl
scas
sub
mov
lret
sub
sub
sub
jp
je
pop
out
test
add
icebp
or
out
testl
andb
test
dec
mov
loope
jg
aam
xchg
aam
dec
pop
testl
cltd
imulb
jl
fsubrs
lret
lcall
push
jo
out
sti
int3
fsubrl
cs
int3
xor
jge
pusha
jno
jge
sub
hlt
adc
iret
popf
adc
popf
std
jge
movsl
and
out
shlb
cmp
pop
iret
daa
lea
mov
pop
add
jne
mov
dec
mov
add
xchg
test
sbb
adc
jecxz
mov
pop
aas
add
adc
es
stos
xchg
inc
lahf
add
mov
repnz
cld
sbb
test
sarb
cmpsl
enter
fdivl
into
push
cmpsb
test
data16
ljmp
call
cltd
shll
jge
adc
pop
aad
into
add
jns
cmc
inc
push
test
add
test
mov
mov
mov
or
jno
sbb
mov
or
xchg
loopne
insb
xchg
mov
cmp
icebp
mov
shlb
adc
cltd
adc
imul
aas
add
adc
push
adc
daa
cs
dec
mov
mull
addr16
sbb
jno
adc
clc
cld
out
sar
cmp
or
jecxz
jp
not
lea
and
xor
mov
stos
inc
sbb
int
jge
dec
mov
imul
dec
mov
mov
call
sbb
mov
xchg
push
dec
out
dec
add
inc
dec
mov
push
shlb
inc
add
movsb
and
sub
out
sbb
push
sub
rorl
mov
fwait
int
mov
xor
pop
dec
add
mov
pushf
ds
push
or
adcl
nop
mov
mov
pop
cmp
push
and
rol
dec
loope
push
es
call
dec
ljmp
dec
mov
movsl
push
and
jp
fucomip
push
pushf
xchg
int3
rcll
lahf
jb
dec
out
scas
std
push
fisttpll
test
shrl
bound
jp
je
jb
pop
sub
rol
out
int3
xchg
dec
in
inc
shrb
in
and
lods
out
mov
jg
and
push
jne
cmp
push
jno
and
sbb
xchg
insb
mov
mov
dec
cmpsl
test
mov
les
cmpb
pop
sbb
or
inc
imul
lock
ss
jmp
add
cli
shrb
std
push
xchg
xor
cmp
je
iret
mov
fs
sub
inc
pop
mov
loope
adcl
fdivrs
pop
je
out
shr
sbb
scas
push
fldenv
imul
nop
mov
xor
push
mov
aam
and
cmp
std
enter
xchg
inc
divb
add
mov
push
je
push
rclb
pop
mov
cs
test
mov
rcrl
jecxz
popf
and
les
push
push
mov
or
sti
cli
adc
cmp
xor
outsl
pop
popa
adc
jno
divb
in
dec
js
mov
inc
xlat
insl
imul
jle
pop
loop
dec
mov
cmp
push
push
xor
stos
xchg
test
adc
sub
jnp
imul
movsl
cld
xor
mov
sbb
cs
push
add
lods
ss
push
push
insb
ja
xchg
daa
mov
fildll
fcoms
cmp
xchg
iret
or
xchg
mov
mov
fs
rcll
out
iret
cmp
add
in
adc
add
push
cltd
fcoms
or
mov
or
dec
mov
imul
outsl
cmp
xchg
cmc
jp
push
push
or
cwtl
cmpsl
mov
in
fwait
insl
int
adc
mov
mov
or
push
xor
dec
loop
jo
pop
mov
fucomip
fcoms
addb
push
popa
pop
mov
mov
mov
sub
rcrl
ss
lock
jne
nop
mov
addr16
sahf
in
xchg
stos
in
pushf
pop
xchg
ja
cmp
push
mov
add
adc
ds
xlat
mov
mov
and
addb
add
pop
lcall
xor
push
mov
mov
xchg
mov
lcall
out
mov
nop
mov
mov
out
enter
sbb
pop
mov
addr16
bound
pop
movsb
dec
sub
mov
jl
scas
cmp
cmc
xchg
movsl
mov
or
pop
xor
adcb
cmpsb
and
add
cmp
xor
xchg
leave
push
pop
sahf
inc
push
fcmove
dec
pop
es
dec
push
adcl
xchg
jne
mov
xchg
jne
aam
jecxz
mov
into
cmp
push
outsl
es
mov
or
cmp
push
xchg
rcrb
add
insl
fisttps
mov
pop
les
das
inc
cwtl
lret
mov
sti
iret
cmp
push
pop
and
aaa
js
adc
leave
push
dec
cmpsl
xor
sbb
jbe
imul
lcall
notb
dec
or
jmp
daa
div
jmp
sti
aas
test
and
add
les
xor
js
rcrb
xchg
push
test
stc
mov
add
movsl
xor
xchg
mov
inc
sub
add
lock
dec
sub
xor
fidivl
mov
jge
ja
les
push
ret
push
lods
ljmp
popf
xor
dec
gs
out
jecxz
fidivrs
mov
xor
sbbl
inc
xchg
sbb
inc
push
or
push
daa
roll
pop
cwtl
fsubrs
insb
push
insl
xchg
out
jae
inc
xchg
push
fistl
arpl
insb
push
xor
out
jns
xchg
out
icebp
adc
bound
mulb
xchg
sub
aas
cs
or
popa
mov
pop
ljmp
cmp
push
cltd
stos
push
ljmp
ljmp
hlt
mov
or
fwait
adc
mov
jbe
push
push
jno
std
stc
mov
jecxz
loop
aas
in
punpckldq
dec
mov
stos
push
flds
aad
sub
jmp
into
test
inc
pusha
aam
push
pop
test
push
pop
pop
test
push
adcb
jge
sub
mov
mov
push
xlat
gs
incl
sbbb
in
add
inc
jge
add
push
cld
cwtl
and
sub
xchg
popf
inc
push
aas
js
cwtl
das
sub
or
adc
dec
jecxz
insl
adc
bound
mov
cld
in
cmp
xchg
enter
ret
not
sub
pushf
sub
jl
adc
scas
lds
or
cmc
ja
cmp
aaa
xor
push
negb
inc
in
add
and
hlt
mov
add
rcl
jecxz
pop
leave
push
out
xor
in
out
sbb
test
fisttpl
inc
xchg
and
jno
inc
add
inc
mov
pop
fcoms
pop
popa
clc
xor
mov
sub
pop
push
jecxz
inc
cmc
push
jno
lock
aam
jle
lods
gs
push
int3
or
jb
cwtl
push
fstpl
lods
call
stc
lds
fisttpl
lahf
cmc
lcall
sbb
sti
mov
es
xchg
xor
or
mov
xor
pop
and
decl
jp
leave
arpl
rcrl
dec
jp
inc
insb
lret
push
out
dec
or
jno
jg
xchg
mov
cmp
and
inc
inc
mov
inc
lret
or
push
jl
pop
lret
sub
gs
arpl
test
pop
xchg
jle
sub
neg
stc
mov
sub
push
aad
mov
incl
lods
dec
loopne
rclb
insb
cmc
cmp
loope
sub
cmp
jo
jle
cmp
xor
call
xchg
xchg
and
jne
dec
xchg
sbb
shlb
or
stc
popf
pop
push
iret
push
loope
jae
lahf
aas
fadd
jo
ljmp
pop
or
jb
fdivrs
mov
mov
push
je
test
sahf
xchg
neg
repz
jl
cmp
mov
add
je
fwait
insl
mov
dec
stos
mov
mov
ljmp
dec
shrb
popa
mov
sub
fldt
notb
repz
hlt
movsl
or
dec
jge
inc
test
mov
imul
test
fdivrl
ljmp
pop
inc
lock
scas
push
into
mov
jmp
adc
xchg
sbbb
xchg
aaa
lds
imul
mov
fucomi
sub
cmpb
push
jno
pop
jno
test
jbe
jle
mov
ficomps
xor
mov
pop
jp
stc
push
pop
fistpl
xor
fs
test
add
xchg
push
jl
inc
icebp
xor
or
adc
jnp
fsubrp
nop
movsl
sbbl
divb
outsl
loop
sub
pop
lods
jns
cmpb
popa
inc
xchg
js
pushf
jle
test
stos
xchg
push
shrl
addr16
lcall
lods
mov
push
xor
sbb
adc
insb
lods
gs
ds
dec
ret
pop
jnp
dec
inc
push
push
sub
imul
push
mov
mov
sbb
push
lods
pop
nop
pop
sub
mov
pop
lcall
sub
mov
dec
dec
lods
mov
push
mov
adc
ret
jae
stos
fldcw
fld
iret
push
hlt
daa
mov
mov
fmull
and
loope
cwtl
push
aas
mov
and
xor
inc
aas
dec
inc
and
sub
pop
pop
jp
pop
in
jle
dec
jo
push
push
jns
xchg
out
notb
jno
pop
cmc
andl
mov
fwait
pop
dec
push
adc
ja
mov
gs
or
push
into
mov
imul
fsubrs
cmp
push
mov
push
decb
call
pop
repz
jge
pop
pop
mov
pop
fmuls
loopne
icebp
orl
jne
dec
dec
inc
movsl
icebp
ljmp
xchg
rorb
cmp
mov
xor
or
imul
mov
call
push
and
adc
daa
es
mov
je
xchg
mov
add
es
imul
movsb
repnz
push
frstor
rorl
mov
xchg
ljmp
pushf
xchg
xchg
cmp
jle
mov
ljmp
mov
jb
insl
pand
dec
stos
gs
jo
in
xchg
pushf
das
mov
cmp
dec
in
das
repnz
cmp
hlt
jbe
mov
in
sbb
hlt
cmpsl
fidivrs
or
out
popa
in
iret
pusha
adc
clc
addr16
jne
cmp
cmpsb
sbb
fisttpll
mov
or
mov
or
inc
pop
fildll
in
ja
ficoms
jno
addr16
call
push
in
imul
sub
mov
jb
dec
jge
pusha
xor
adc
inc
push
cli
mov
jne
ljmp
mov
in
lds
or
test
sarb
xchg
add
ret
pop
das
popf
xor
out
cmpsb
sti
loope,pt
into
jp
lret
out
dec
pop
loope
jl
pop
xchg
popf
mov
dec
cmc
jno
and
adc
jae
test
out
sbb
out
outsl
mov
shrl
mov
lea
mov
jbe
adc
xchg
jae
mov
repnz
jnp
out
les
out
mov
and
in
inc
popf
lfence
and
inc
rcrl
arpl
fsubl
sub
mov
pop
das
dec
popa
divb
jge
in
pop
dec
imul
je
sub
pop
pop
cmp
push
stos
dec
divb
ret
mov
push
out
and
lcall
repz
push
adc
lret
pop
mov
xor
jns
call
ret
add
mov
or
cs
cli
pop
sbb
inc
add
inc
jae
and
rcll
mov
mov
push
subl
adc
outsl
and
xor
out
push
es
out
push
subb
xchg
pop
add
xchg
sub
pop
rorb
movsl
lods
fimuls
out
mov
scas
mov
imul
mov
stc
push
es
les
enter
pop
pop
adc
lods
xchg
sbb
pop
adc
cmpsl
dec
aaa
fs
push
inc
xor
cmc
outsb
add
or
scas
call
and
mov
rorl
push
sbb
imul
ds
clc
sbb
cmp
lret
call
imul
adc
pop
lds
inc
inc
push
repz
jmp
adc
test
jmp
rorl
pop
mov
pop
andb
aaa
decb
add
and
mov
inc
sbb
mov
mov
xor
lea
ret
push
insl
dec
add
xor
dec
or
mov
testl
xor
test
dec
aaa
mov
adc
test
ficoms
int
sub
and
lods
out
or
xchg
rorl
daa
aaa
aad
mov
fsubrs
jle
push
fnstcw
push
mov
inc
xor
addb
pushf
or
outsb
adc
lret
test
and
mov
aam
insl
cwtl
mov
outsb
sbb
xor
pop
push
adc
pop
outsb
and
cld
js
jne
mov
jbe
jl
jge
dec
push
imul
test
jnp
cld
push
or
sbb
cli
xor
jmp
outsb
vmovss
outsl
inc
clc
dec
adc
adc
mov
jmp
sbbl
nop
adcb
jmp
mov
std
and
rol
inc
jle
inc
mov
lock
dec
push
stos
mov
dec
xor
aaa
sub
es
fsts
nop
xchg
leave
fsubrp
mov
and
lahf
and
fs
fnstsw
fiadds
add
mov
mov
addl
mov
out
test
enterw
dec
in
dec
xchg
pop
cmc
mov
imul
mov
pop
sub
mov
fwait
aad
popl
std
insb
enter
mov
pop
mov
addr16
add
pop
icebp
and
fsts
cmpsb
cmp
loope
setnp
add
mov
xchg
pop
inc
lea
mull
inc
cmp
add
and
lea
outsl
cmp
and
add
fadds
inc
xchg
sbb
fdivrl
ljmp
lea
mov
adc
lock
mov
adc
insb
push
sbb
mov
rorl
dec
inc
scas
sub
push
lcall
mov
call
inc
fnstcw
mov
and
movsb
xchg
sub
icebp
lods
ljmp
xchg
add
mov
jecxz
js
dec
pop
mov
xchg
shrb
add
push
mov
jbe
ds
int
fdivrl
sbb
push
cmp
xchg
pusha
popf
int3
jns
dec
push
and
mov
mov
xor
icebp
jb
fsubrs
cli
mov
out
cli
jno
xchg
je
and
and
pop
dec
push
orl
int3
fs
lret
jae
jmp
cmp
add
sti
xor
mull
outsb
mov
mov
add
pop
dec
sbb
fwait
mov
jle
lret
xchg
jge
adc
or
cli
nop
test
xchg
sub
and
xchg
dec
jbe
imul
ja
arpl
mov
cmpl
inc
jno
fsts
cwtl
aaa
push
into
pushf
sub
fs
jbe
sbb
xchg
scas
shrl
cwtl
sbb
cmc
lcall
gs
mov
filds
sti
jae
sbb
enter
xchg
daa
inc
xchg
cmp
insl
loopne
or
fwait
int
jb
into
inc
movsl
cmp
add
in
or
or
or
push
or
jns
sbb
xchg
and
mov
xor
notb
xor
pop
adc
adc
loop
dec
in
test
fidivs
popf
xchg
pop
iret
insb
add
les
pop
adc
fistpll
xchg
test
jl
pop
fwait
lock
and
aam
das
sub
test
outsl
cmc
xor
push
jns
fs
pusha
andb
cmp
add
mov
fsubs
sbb
mov
test
inc
lret
pop
lods
loope
pop
lea
pop
push
dec
mov
push
mov
and
into
movsb
xor
mov
push
in
mov
push
adc
stos
cs
repz
fcmovnb
sbb
add
xchg
loope
ret
imul
cmpsl
pop
adc
test
dec
enter
call
dec
pop
repnz
in
out
mov
add
ret
ljmp
test
int3
sbb
ret
aad
push
dec
mov
fucomi
mulb
mov
xchg
fwait
jbe
xchg
lods
jl
jge
jmp
sub
and
adc
push
popf
inc
xor
les
xchg
mov
dec
sbb
sahf
outsl
jl
sarl
push
xchg
mov
sbb
pop
test
mov
repnz
movups
sbb
int3
nop
je
xor
loope
ja
push
sarb
loopne
push
mov
aas
cld
in
data16
sbb
cmp
xchg
out
add
pop
mov
mov
popa
loope
subb
pop
add
out
negb
mov
lods
xchg
cmpsb
dec
lcall
gs
rclb
add
inc
lods
fwait
push
pop
inc
mov
test
lcall
shrl
jl
ja
int3
fbstp
fiaddl
aad
mov
pop
and
xchg
mov
stos
fbstp
push
cmpl
mov
fidivs
pop
test
sti
xchg
adcl
mov
jno
cwtl
xchg
and
daa
push
inc
xlat
ss
cmpb
xor
das
mov
aam
xchg
add
inc
mov
inc
aas
jbe
out
or
in
sub
into
pop
or
mov
sbb
jge
movsb
cmp
push
ret
jbe
mov
iret
aad
pop
dec
out
and
mov
cld
mov
or
cmp
xor
sbb
or
sbb
dec
cld
mov
mov
aad
ret
inc
push
mov
or
lret
push
dec
push
mov
mov
add
shrl
xchg
das
into
fnstenv
push
sbb
icebp
movsl
aaa
into
push
add
test
rcrb
andb
mov
aas
jle
pop
mov
shl
push
sub
mov
mov
movsb
js,pn
shrb
les
nop
imul
in
gs
sbb
inc
cmp
sub
mov
int3
dec
push
aad
sahf
pop
xchg
bnd
outsl
call
inc
negl
xor
sbb
std
push
xchg
sbb
mov
movsb
xor
imul
jno
fisubl
add
mov
lcall
push
jmp
ret
and
orb
ret
or
ljmp
stos
push
cld
lahf
sub
stos
mov
sbb
aas
mov
adc
loope
and
cmp
nop
js
jl
push
lods
sbb
add
imul
xchg
lock
or
push
push
outsl
divb
mov
push
data16
cmp
subl
add
lea
fucomp
std
cwtl
das
das
adc
ffree
call
icebp
in
incl
mov
mov
push
js
xchg
or
lcall
and
out
clc
add
aaa
arpl
gs
xchg
and
popf
dec
int3
xchg
in
shll
std
pop
jp
rcrb
cmp
jecxz
std
adc
int
loop
adc
inc
inc
call
mov
jae
jno
xacquire
xchg
vpshlw
mov
sub
cmc
mov
lea
dec
pusha
test
sbb
add
sbb
jb
xor
scas
les
movsl
sbb
lahf
popa
cmp
pop
negl
nop
orb
lcall
push
mov
mov
movsl
in
lret
sub
outsb
rcrl
mov
arpl
or
dec
pop
pop
sub
fldl
mov
sahf
and
in
sub
dec
pop
jge
mov
aad
rorb
cmp
and
loope
push
in
mov
sbb
psllw
mov
pmaxub
movsb
lcall
add
mov
shrl
sbb
cmpsb
dec
dec
pop
cmp
jb
or
call
jecxz
inc
aas
sub
sbb
jne
arpl
les
inc
cld
dec
inc
adc
rcrl
jne
jg
das
ss
mov
in
dec
data16
mov
test
push
jmp
cwtl
pushf
popf
stc
stc
divl
jb
call
xor
in
mov
cmp
aam
imul
inc
frstor
xlat
icebp
add
inc
aaa
into
mov
inc
push
pushf
xor
repnz
mov
jnp
lock
stos
pushf
and
into
divb
cwtl
jl
jne
jg
sbb
clc
inc
insl
icebp
jo
fimull
inc
sub
dec
xor
fmulp
jb
inc
bound
dec
cmpsb
cmp
push
push
iret
jge
je
sub
ja
jno
hlt
mov
in
pusha
lahf
mov
sbb
dec
divl
cmp
loope
mov
mov
fldcw
dec
dec
push
mov
addr16
lods
fs
adc
push
cli
dec
mov
add
mov
es
ficomps
stc
inc
test
mov
stos
sub
pop
or
test
pop
lock
mov
inc
fwait
test
push
push
mov
or
push
inc
adc
fldt
push
shlb
fs
mov
mov
insl
sub
popf
pop
mov
mov
pop
jl
inc
movsl
add
imul
popf
je
pop
outsb
out
lret
sbb
xor
pushf
jno
clc
or
xchg
mov
enter
repz
sahf
and
loopw
cmp
mov
rcll
iret
xchg
dec
arpl
icebp
add
mov
jle
test
mov
rcrl
mov
push
inc
je
je
cwtl
aas
and
sbb
push
adc
dec
inc
xlat
fnstsw
adc
testl
dec
and
cltd
push
cmpsl
xchg
pop
jle
and
pop
je
jl
dec
loop
out
mov
lock
mov
xchg
out
jnp
sub
inc
mov
inc
aam
jmp
scas
xchg
cltd
mov
fidivs
pop
sub
jae
test
pop
jne
outsb
cmpsl
cmp
js
add
sbb
mov
jno
ror
gs
mov
cs
fisubs
adc
push
aad
pop
inc
inc
int3
arpl
pop
add
mov
adc
and
xor
inc
jp
xor
mov
ss
or
mov
aas
jg
iret
ss
adc
fnstenv
movsl
push
and
xchg
gs
xor
stc
les
pop
loope
in
mov
fsub
ja
cwtl
jecxz
push
push
decl
or
movsl
sub
sbb
imul
mov
daa
in
sbb
iret
add
inc
push
aas
iret
xor
fs
inc
lret
out
enter
push
and
int3
push
mov
add
jle
mov
jnp
jp
pop
mov
cltd
jnp
rcr
andb
mov
dec
cmc
stc
nop
daa
pusha
es
inc
or
clc
arpl
scas
addr16
bound
cltd
mov
bnd
push
inc
clc
xchg
pop
cs
pop
xor
or
jmp
mov
or
outsl
ljmp
cltd
cmc
test
mov
jle
fst
fcoms
jne
sbb
xlat
jmp
adc
sbb
ret
mov
sbb
daa
mov
xor
sbb
cld
movsb
mov
sbb
xchg
mov
or
in
js
inc
imul
mov
xchg
mov
pop
sbb
mov
test
inc
fnstenv
jno
sbb
and
mov
orl
aad
stc
sbb
sbb
lret
cmp
lahf
ss
imulb
mov
pop
stc
cmc
clc
ja
cmpsl
bound
mov
push
lods
adc
mov
movb
outsb
nop
mov
es
or
shrl
mov
mov
inc
jne
out
mov
int
adc
xchg
pop
mov
xor
mov
xlat
out
outsb
lea
sahf
mov
lahf
mov
dec
ljmp
dec
sbb
adc
aam
mov
imull
js
xchg
subb
pop
cmpsl
movsb
int
mov
adc
test
mov
cmc
popf
mov
push
insl
push
insl
lahf
xor
sbb
arpl
adc
mov
pop
repnz
call
movsl
mov
dec
xlat
pop
push
loope
dec
mov
push
add
cmpsl
fstpl
xor
jne
shll
arpl
adc
and
pop
lea
and
es
xor
or
test
ret
insb
popa
stos
les
xor
and
test
jns
mov
test
push
or
pop
popf
cmp
sbb
mov
cli
sub
ror
mov
mov
pop
mov
lock
clc
jecxz
pop
ret
mov
hlt
js
push
daa
cs
mov
cwtl
int
sahf
push
lods
push
std
out
inc
mov
xorb
adc
dec
adc
ret
mov
sbb
iret
push
inc
sbbb
xsavec
cltd
ret
push
sbb
sub
ja
hlt
inc
jns
fbld
pop
loope
push
mov
js
pushf
or
fiadds
fldt
test
cmc
adc
cli
sub
test
sbb
mov
inc
shrb
xchg
xor
add
aad
bnd
cmp
in
out
hlt
dec
cmp
shlb
repz
shll
orb
es
ds
or
pop
pop
imul
aam
mov
out
adc
add
movsl
xor
gs
loopne
xchg
pop
scas
test
icebp
inc
pop
out
xor
push
jae
jnp
inc
and
xchg
push
es
es
cltd
jns
inc
popa
notl
shrb
jecxz
push
jbe
jo
sbb
in
imul
mov
lods
cmp
mov
ljmp
test
add
inc
pop
jae
inc
push
cli
cmp
mov
pop
hlt
lret
test
mov
movl
lahf
ss
jl
push
dec
ljmp
jo
xor
imul
mov
movsl
cmp
mov
ja
add
jns
subb
cmc
aaa
add
enter
sub
adc
and
and
lret
pushl
mov
sub
or
fnstenv
xor
arpl
inc
adc
xor
lock
pop
notb
rcrl
cmp
addb
pop
adc
pushf
jmp
lret
xchg
mov
rcll
xor
mov
std
and
xchg
dec
mov
loopne
popf
dec
cmc
ljmp
pop
pop
bswap
xchg
dec
pop
xchg
dec
dec
loope
mov
in
fdiv
enter
jnp
pop
jge
push
xchg
dec
ret
jle
cmp
in
adc
mov
fdivrs
mov
jae
neg
fmull
mov
push
mov
and
std
mov
stos
and
into
jmp
xchg
out
fdiv
adc
loopne
adc
xchg
sub
xchg
mov
jno
xchg
mov
dec
pop
sbb
add
and
sbb
jns
mov
in
lea
in
and
pop
test
movsb
mov
pop
aad
js
fisubrs
insb
mov
lds
sbb
mov
pushf
fnstsw
push
subl
add
cbtw
mov
pop
cli
mov
inc
adcl
xchg
sub
fisubs
fsubs
jns
scas
sub
or
and
pop
mov
aaa
jne
adc
mov
sbb
add
iret
sub
dec
fs
loopne
push
dec
stos
add
movsl
pop
xor
outsb
ret
neg
xchg
pushf
pop
fnstenv
add
sbb
fisubrl
addr16
mov
test
mov
js
or
xchg
lods
dec
mov
xchg
sbb
mov
inc
stos
aas
jg
shll
cmp
add
out
stos
jle
dec
insb
jge
pop
cmp
push
popa
movsl
call
lock
inc
lods
les
push
jbe
or
xchg
mov
popa
dec
scas
pop
ss
aad
mov
mov
and
adc
gs
les
sub
push
int
pop
and
adc
push
stc
mov
add
pop
mov
pushf
lret
cmpl
sar
jae
ret
fbld
mov
cwtl
out
push
mov
cmp
jmp
outsl
sbbl
movsb
mov
outsb
push
xchg
xor
repz
xlat
push
jecxz
imul
orl
adc
stos
shlb
xchg
lret
fs
stos
repnz
in
xlat
ds
fsubr
nop
pop
mov
cld
pop
xchg
dec
dec
push
mov
mov
ds
icebp
pop
jmp
cmpsb
out
jmp
dec
push
pop
cmp
inc
daa
shll
les
dec
mov
lcall
in
cltd
add
ret
lret
jb
out
cld
adc
adc
pop
outsl
sbb
pop
xor
fmull
xor
lea
mov
stc
inc
mov
jae
scas
jmp
jne
ss
rcll
xlat
add
mov
or
lcall
pushf
std
dec
pop
mov
aas
xlat
adc
cmpb
xchg
faddl
mov
lods
repnz
add
pusha
fists
shr
dec
xor
ds
mov
cmp
mov
jl
cmp
nop
dec
pusha
cmp
mov
cmp
push
clc
sahf
dec
dec
sbb
add
ja
popa
add
out
loopne
das
dec
dec
inc
mov
mov
loopne
push
or
mov
push
xchg
in
xchg
aaa
je
sahf
in
cmp
push
sub
out
les
xor
adc
mov
je
dec
sbb
shrb
out
ret
push
loope
xor
aaa
mov
push
mov
pop
lock
scas
aad
pop
outsl
inc
jg
dec
xchg
push
and
mov
ss
jle
mov
ja
and
sarb
mov
lds
testl
dec
je
sbbl
sbb
inc
pop
mov
mov
sub
insl
fidivs
cli
lahf
or
movsb
inc
nop
sarb
push
sub
jecxz
lods
in
fimull
and
pop
mov
sbb
jp
out
outsl
daa
cmpsl
jnp
adc
negb
daa
frstor
xchg
int3
leave
xchg
mov
das
jnp
flds
pop
mov
adc
lret
bound
xor
xchg
jo
jb
xorl
lods
das
inc
and
inc
in
cmpsl
mov
jle
add
xchg
xor
and
rorb
sbb
fldenv
cmpsl
push
xor
mulb
arpl
data16
push
mov
add
push
push
adc
xchg
inc
daa
arpl
jmp
push
or
push
jb
mov
stos
mov
jle
cmp
adc
ret
xor
das
ds
inc
movb
movsl
outsb
and
sub
pushf
shlb
cltd
fs
loopne
shlb
pushf
loopne
pop
push
xorb
mov
in
jecxz
mov
popf
mov
push
sbb
inc
imul
pushf
addr16
popf
fsts
push
xlat
mov
int
inc
pop
add
mov
and
push
ss
stos
cmp
xlat
xor
pop
cmpsb
pop
not
ja
repz
call
sbbb
cli
jno
sbb
mov
out
mov
notb
shlb
out
add
inc
xchg
mov
push
or
push
push
add
movsl
mov
sti
jb
out
xchg
mov
dec
jns
pop
and
fsubrs
fnstsw
mov
and
es
test
fsts
lods
shll
pop
mov
mov
stos
test
cmp
iret
test
fpatan
popf
inc
mov
jns
mov
cmp
test
and
jg
fwait
jp
sub
test
sbb
xchg
xchg
jbe
inc
mov
andl
movd
mov
imul
mov
jae
push
sub
push
hlt
std
pop
cmp
cmp
aad
mov
push
pop
cmp
cli
and
inc
repnz
add
loopne
movsb
icebp
pop
pop
mov
inc
cltd
sub
mov
jge
cli
sahf
mov
rcrl
xchg
dec
mov
add
inc
mov
ss
loop
mov
outsb
adc
ja
test
sarl
inc
pop
loope
call
jge
enter
cmp
push
sub
sbb
in
in
mov
cli
shlb
jno
jecxz
das
mov
fidivs
adc
fsubp
mov
lods
sbb
or
clc
loope
movsb
data16
mov
popa
std
call
mov
jg
dec
dec
mov
xor
mov
cmp
mov
mov
jp
sti
and
inc
imul
test
nop
mov
ret
xchg
pop
push
dec
jmp
jl
xor
sub
int3
sbb
sbb
imul
fsubl
shll
ljmp
cli
rcrl
movsl
jp
popa
cmp
rcl
imul
repnz
outsb
inc
sbb
push
push
xlat
inc
mov
addr16
push
iret
push
jne
mov
push
jmp
and
es
sarl
aaa
sub
in
sbb
jnp
mov
xor
adc
jb
jmp
mov
movsl
nop
or
push
and
es
gs
lret
lods
dec
lahf
pop
in
imul
mov
aaa
jle
xorb
and
and
fdivr
push
in
mov
jae
or
clc
and
xor
or
in
nop
stos
popa
clc
nop
ss
jae
mov
ljmp
jae
xor
andb
dec
mov
bound
jg
nop
mov
mov
xorb
push
rorb
push
iret
mov
pop
loopne
std
lret
mov
or
mov
inc
add
pusha
push
or
mov
ret
outsl
sarb
in
and
jge
test
adc
or
es
lahf
popl
sub
loope
mov
mov
cmp
and
lods
push
fcoml
test
popa
and
repnz
data16
mov
add
or
jmp
iret
sbb
or
sub
pop
int3
fisubs
test
xor
adc
pop
test
popa
les
cmp
loop
mov
xor
mov
xchg
ret
movsl
dec
pop
repnz
popa
dec
jg
pop
cmp
testl
mov
cmpsb
inc
cmp
ss
or
cwtl
ja
add
xchg
mov
jne
addr16
rol
or
sub
loop
out
mov
or
push
mov
les
pusha
testl
loope
adc
in
mov
je
xchg
jmp
pushf
shll
inc
add
bound
jp
test
jae
mov
dec
shrb
sub
mov
jbe
data16
pop
sub
lcall
fidivrs
and
and
dec
mov
stos
pop
mov
adc
mov
adc
inc
or
sbb
out
push
imul
sub
and
das
pop
lock
mov
cmp
ss
sub
mov
push
mov
xor
fidivs
or
cld
aad
ret
jnp
pmaxsw
jo
sti
dec
cmp
add
mov
mov
jne
add
out
push
cs
fnstsw
pop
cmp
pop
inc
fmul
orb
pop
cmc
sbb
pop
sahf
iret
js
dec
lahf
push
dec
xchg
sarb
cwtl
push
push
dec
adc
mov
mov
add
jmp
and
ret
pop
std
pop
pushf
cs
xchg
lcall
mov
cmpsl
sti
cs
jmp
xchg
dec
sbb
mov
push
cmp
xchg
add
inc
popa
jns
mov
or
push
ss
pop
dec
in
bnd
stos
and
iret
sub
push
mov
xchg
mov
pop
aaa
lsl
stos
mov
mov
sti
cmpsl
or
flds
add
xor
enter
out
inc
add
iret
pop
pop
mov
pop
push
scas
mov
jno
enter
hlt
call
pop
gs
gs
and
mov
js
icebp
data16
lahf
adc
xchg
in
cmp
inc
mov
scas
fdivrs
pushl
lcall
mull
jp
jnp
mov
into
rol
and
pusha
mov
jp
adc
loope,pt
mov
add
cmp
mov
xchg
stos
jle
jmp
in
sbb
movsl
or
sbb
repnz
sub
jnp
outsl
nop
pop
adc
mov
pop
cs
pop
cmp
jbe
dec
dec
int3
jae
das
mov
int
fucomp
fsubl
push
leave
push
jb
movsb
push
popf
and
and
xor
sahf
loop
sar
ds
push
jg
add
mov
sbb
inc
popa
fcoml
and
cli
mov
sub
mov
push
xor
test
clc
xchg
xor
cmp
cltd
pusha
inc
mov
jno
fidivrl
mov
mov
call
movsl
and
xchg
xor
dec
push
xor
pop
lock
jmp
sub
cld
stos
xchg
test
inc
dec
iret
inc
inc
jbe
aam
add
cmp
pop
loop
or
push
in
aam
mov
xorl
inc
loope
subl
push
push
cli
pushl
fsubl
in
popf
mov
insl
and
push
orl
mov
add
icebp
das
inc
data16
xchg
int
mov
lea
mov
test
jb
add
std
dec
add
sbb
iret
subb
sbb
icebp
adc
je
rcr
jo
int
mov
mov
idivb
popf
fidivrs
int
xchg
in
pop
xor
clc
pop
adc
into
and
push
pop
pop
rolb
push
stc
xchg
add
in
jmp
pop
pop
testl
inc
pinsrw
vphsubdq
test
lret
fwait
jecxz
enter
imul
and
fnsave
enter
jb
jnp
popf
nop
daa
xchg
scas
in
xor
scas
mov
xor
and
inc
dec
push
repz
mov
loope
inc
ret
dec
mov
add
inc
das
mov
sbb
int
adc
xchg
je
sub
sbb
jne
arpl
pop
lcall
pop
adc
nop
mov
imul
dec
jae
cmp
cmpsb
sbb
sub
inc
mov
mov
push
pushf
aaa
inc
inc
lea
pop
das
inc
mov
clc
or
sbb
out
pop
xorl
scas
stos
push
cltd
sub
xor
or
jg
cwtl
aaa
cmp
xor
mov
test
stos
dec
push
lock
mov
aaa
dec
pusha
adc
mov
adc
ss
adc
jmp
out
add
ja
adc
pop
cmc
mov
dec
mov
mov
mov
sarb
jmp
cmp
push
xor
push
or
ret
ja
xchg
add
xchg
inc
data16
mov
out
xor
aas
rcrb
lods
sub
xchg
inc
scas
xchg
out
int
stos
push
add
aas
xchg
sti
and
movsb
ja
in
sub
fcoml
pop
jp
pop
mulb
dec
jge
cmp
inc
inc
mov
mov
mov
sti
mov
outsl
ret
adc
movsb
and
xorl
jns
lods
test
jns
and
pushw
xor
je
stos
test
mov
and
xor
jp
popf
imul
into
xchg
int3
lahf
cs
dec
mov
mov
push
ja
in
jns
pusha
pop
adc
test
out
adc
mov
inc
pop
sbb
jo
cmp
fimuls
add
andl
sub
int
outsb
imul
sub
in
fistps
add
shl
pop
push
push
insl
or
pop
hlt
std
lods
jmp
sbb
add
inc
pop
insb
jecxz
and
xchg
xorb
fsubrs
pop
lock
push
push
and
fistpl
xchg
mov
mov
test
mov
adcb
adc
cmpsl
jle
aas
je
out
jl
adc
inc
popa
andl
mov
cli
outsb
sbb
xchg
mov
insl
lcall
das
inc
scas
push
xor
inc
inc
fcoms
fidivrl
push
or
leave
lret
xchg
and
cltd
add
outsl
fcompp
mov
jno
adc
scas
mov
orl
hlt
in
sbb
mov
movsl
ds
sti
aaa
mov
loopne
lods
pushf
push
test
rcll
mov
push
cs
test
int
sbb
out
mov
into
mov
mov
rcr
in
mov
dec
mov
mov
push
shlb
roll
adc
and
add
push
in
sbb
je
pop
sbb
je
sub
sbb
es
lahf
xchg
mov
add
mov
sbb
sbb
daa
test
in
adc
inc
js
mov
sub
pop
pop
mov
mov
fisttps
mov
mov
sbb
push
rcrb
imul
dec
and
xchg
mov
mov
inc
jmp
aaa
inc
pop
jo
inc
mov
clc
push
jge
xor
adc
or
jns
in
push
lock
iret
lcall
rorl
sub
addr16
mov
ror
push
cli
xor
xchg
sahf
add
pop
shlb
mov
dec
sub
pop
mov
loop
lahf
mov
inc
in
aaa
lret
and
fwait
lret
iret
enter
bnd
lea
cmp
cli
dec
pop
dec
inc
cltd
mov
iret
inc
arpl
add
pushf
dec
mov
pop
or
sbb
push
lods
inc
ds
pop
mov
lret
das
fisubrl
dec
or
clc
mov
fstpt
mov
mov
cmp
notl
pushf
lds
lods
xchg
inc
fwait
jecxz
pop
pop
xchg
leave
test
shll
sti
mov
repz
scas
and
inc
rcrl
mov
mov
push
into
gs
jb
sbb
lahf
out
test
pop
stc
ret
ja
jbe
mov
int
or
jb
sub
into
popf
mov
add
stc
shrb
popa
inc
and
dec
lahf
cmp
mov
enter
mov
adc
mov
inc
push
mov
jle
call
stc
sub
mov
push
sahf
addr16
inc
sub
mov
adc
xchg
sti
lret
cmc
xchg
icebp
icebp
add
jns
stc
movsb
jg
pop
push
or
fs
fstl
lea
mov
ret
lock
or
add
aaa
mov
mov
rcrb
clc
jl
mov
sub
leave
fs
rorl
cmp
fsubl
push
decl
pop
ja
sub
testl
push
jmp
dec
pop
cmp
in
out
icebp
nop
iret
adcb
stos
and
or
in
and
mov
adc
lds
adc
mov
jno
rorb
jmp
imul
outsb
in
push
lock
push
lcall
cs
dec
xchg
popf
lds
inc
add
adc
push
push
jno
adc
movsb
mov
test
dec
in
add
fs
fisubrs
neg
dec
push
loop
lahf
pop
addb
inc
mov
test
and
int
pop
or
mov
xchg
fadd
int
sub
lret
loopne
outsl
popa
push
bound
shr
cmc
pop
sbb
xchg
push
sub
jle
loop
out
lcall
addr16
adc
aaa
fcoml
mov
jnp
mov
loop
hlt
les
ljmp
jmp
jp
pop
jge
jecxz
pushf
repnz
in
mov
popa
das
fisubs
cmp
fwait
mov
or
test
cld
jo
jnp
add
das
jg
or
lock
jle
cmpsb
cmp
fidivl
outsl
sub
fcmovu
lods
dec
sti
inc
sbb
js
in
ret
push
test
movsb
xchg
bound
mov
sbb
pushf
outsb
call
add
pop
notb
push
movsl
add
cld
jg
cltd
lods
mov
test
dec
add
pop
xchg
or
mov
lods
gs
push
mov
and
daa
ret
push
lret
rorb
imul
scas
cmc
fistps
js
sbb
sbb
mov
lcall
push
lods
fcmovne
pop
std
push
scas
inc
cmp
int
in
je
fldl
in
sti
mov
andb
inc
outsl
fistl
sahf
sub
add
movsb
insb
rcr
pop
lea
mov
insl
push
inc
push
push
shl
std
jbe
cmpsl
pop
adc
gs
dec
add
jmp
sbbl
mov
shlb
rorb
mov
xchg
out
das
cs
into
or
aad
jmp
fdivrs
or
add
fimuls
dec
cmp
push
mov
sbbb
inc
stos
mov
jbe
mov
and
cwtl
das
cmpsw
add
mov
sub
jl
inc
push
mov
adcb
popa
dec
andb
cmp
das
ret
aam
jp
dec
adcl
ret
repz
inc
lock
mov
or
jnp
jg
insl
jo
cltd
mov
ret
out
popf
add
cmc
and
jecxz
xor
pop
cli
or
mull
scas
cmp
cmp
mov
push
ljmp
jb
test
inc
sbb
pop
data16
inc
testb
and
lea
add
mov
sub
rclb
insb
pop
cmp
fdivs
int
clc
cmp
mov
out
push
es
or
cmp
add
in
test
dec
sub
shlb
mov
adc
xchg
js
shl
pop
stc
push
push
push
outsl
rcrb
mov
sub
push
push
lea
ret
pushf
popf
lods
daa
lcall
lret
mov
lahf
iret
cli
lret
and
cmp
sahf
dec
and
mov
enter
push
scas
js
mov
stos
sub
sbb
push
xor
ljmp
pop
js
dec
jno
xor
outsb
pop
xor
push
jb
dec
push
push
pop
loope
cmp
das
mov
cmp
int3
xchg
jae
adcb
xchg
mov
dec
push
in
add
inc
or
call
or
int
loop
pop
addr16
lods
jl
inc
les
jp
test
lcall
or
mov
xchg
loopne
gs
mov
push
mov
rcrl
mov
rolb
fwait
inc
loop
or
fcoml
mov
mov
xchg
mov
lret
and
cmpsl
es
and
aas
subl
cmpsl
lods
sbb
sbb
inc
gs
int
push
sbb
ja
sub
cmc
test
mov
and
xchg
lds
je
mov
mov
and
repnz
addr16
cmpsl
jbe
lret
cld
ret
cld
adc
ret
push
jmp
aas
ret
pop
mov
jae
iret
cmpsb
sbb
cmpsl
insl
push
adc
add
je
cmp
leave
inc
cmovb
inc
jecxz
dec
ljmp
sti
fistl
or
inc
sti
cltd
xor
into
orl
jmp
adc
dec
data16
orl
push
ficoms
add
stos
and
rcrb
jmp
jle
and
jb
inc
add
jecxz
icebp
mov
mov
movsl
rcrb
daa
test
popf
xor
lods
sbb
mulb
mov
lds
insb
pop
adcb
leave
pusha
repz
out
repz
gs
lea
pop
dec
jo
aam
cmp
roll
pop
test
sbb
mov
push
imul
push
fistps
cwtl
jae
inc
shr
addb
pop
mov
xchg
push
hlt
fwait
fwait
xor
pop
lret
filds
mov
out
xor
inc
ret
sub
adc
ljmpw
pop
mov
adc
sahf
gs
xor
jo
cmpl
pop
mov
out
movsb
mov
xor
cmc
xchg
dec
or
mov
inc
adc
int3
aaa
test
addr16
cmp
pop
sub
flds
add
test
ss
fisttpll
rcl
adc
pop
sahf
mov
pop
xor
fsubl
mov
push
pop
adc
mov
mov
dec
es
hlt
cmp
test
mov
jle
cmp
cmpsb
inc
gs
stos
xchg
fidivs
xchg
mov
jecxz
icebp
aam
lods
inc
add
xchg
lret
clc
xchg
mov
hlt
call
add
xchg
push
popf
sbb
and
popf
in
adcb
cmp
sbb
fists
sbb
into
add
xchg
xor
dec
dec
mov
pop
mov
mov
pop
icebp
repnz
push
lock
ss
adc
mov
cs
sub
in
jbe
faddl
lahf
es
pop
aam
leavew
xor
frstor
and
cmpsb
inc
bound
cld
pop
aaa
sub
sbb
inc
popf
fs
mov
or
mov
or
mov
push
or
pusha
inc
pusha
sti
inc
gs
out
add
es
test
ret
dec
into
aas
mov
push
mov
pop
cmpl
mov
cmpsl
inc
sub
popa
inc
movsb
ret
mov
cmc
sbb
in
xor
into
loopne
les
mov
fwait
sub
pop
cld
mov
movsb
shrb
pop
subb
cmp
out
push
sub
mov
subl
cmc
mov
mov
adc
sbbb
xor
ret
insb
add
push
mov
in
fprem1
mov
fadds
lods
mov
jnp
add
ljmp
stc
mov
insl
jp
or
adc
lcall
cwtl
clc
pushf
loopne
cmpsb
adc
and
push
lods
dec
sbb
mov
loopne
sahf
inc
aaa
into
je
push
or
push
inc
xchg
inc
test
setnp
and
enter
iret
sbb
and
cltd
adc
das
pop
mov
jge,pt
adc
je
add
cld
lcall
cmpsl
mov
inc
scas
inc
mov
loopne
fsubs
aaa
into
vmaxps
es
push
mov
aaa
push
aaa
dec
fmull
sbb
and
leave
and
xchg
mov
mov
shrb
stc
sar
outsl
mov
rclw
ret
xchg
and
cmp
clc
push
shll
stos
cmp
mov
adc
cmp
jbe
add
pop
insl
jecxz
push
leave
mov
jl
push
and
jg
loop
mov
enter
cmp
decb
add
push
push
popf
iret
data16
mov
in
xchg
cwtl
cmp
lds
nop
mov
in
icebp
xchg
push
lret
fwait
cld
cltd
rolb
adc
jo
cltd
mov
and
arpl
arpl
ljmp
pop
add
push
imul
sbb
fcmovnb
mov
push
out
popa
mov
hlt
popf
inc
fimull
or
push
scas
add
loopne
and
insb
test
xor
fadd
pop
into
add
insb
pop
xchg
cmp
lds
cmp
push
jbe
fbld
adc
test
ret
subl
mov
insb
inc
and
ljmp
jno
stos
mov
and
or
fldcw
lods
js
clc
dec
lahf
imul
shrl
push
inc
mov
outsb
data16
push
test
cmp
inc
test
mov
add
sub
cmpsl
stos
xchg
loope
mov
jo
cwtl
push
bndstx
add
mov
shrl
xchg
incl
repz
lea
cmc
lahf
sbb
clc
xchg
push
out
xor
mov
fldcw
lods
pop
cmpsb
mov
or
in
sub
repz
cmp
xchg
in
mov
push
aam
push
lret
clc
inc
sub
xchg
push
mov
mov
push
mov
iret
stos
fdivl
adc
xchg
lret
lods
outsl
outsl
xor
movsl
inc
test
cwtl
pop
ja
xor
xchg
pop
movsl
in
aas
cmp
js
les
stc
mov
shrb
data16
fisubrs
repnz
adc
pop
fidivl
pop
and
sbbb
sub
mov
pop
stos
repnz
mov
push
mov
mov
cltd
xor
xchg
and
push
xlat
or
ljmp
jne
inc
push
mov
popf
enter
xchg
inc
and
testl
mov
xchg
or
adc
fistpl
gs
xchg
xchg
in
xor
fcmovu
cltd
std
sbb
mov
xchg
jns
imul
lods
inc
imul
shl
sarb
mov
inc
dec
dec
adc
sub
aam
cmp
jns
cs
imul
xchg
mov
push
int
not
cmp
pop
adc
pop
out
aas
fucom
pop
mov
call
cmp
pop
fwait
add
cmp
cli
pushf
push
out
insb
xchg
adc
cs
mov
and
add
lods
jbe
mov
xor
ja
fsubrl
sub
cmc
inc
ret
fucomp
sub
loopne
stos
mov
ljmp
dec
cmp
mov
stos
loopne
fdivl
es
xchg
sahf
or
dec
out
xchg
sub
imul
lods
call
mov
fists
add
add
icebp
mov
xchg
xchg
vdivps
inc
imul
lds
jnp
cmp
sbb
pop
aaa
repz
test
sub
sbb
pusha
sbb
sub
cmp
out
lods
es
or
adc
jbe
out
push
loop
enter
out
lock
in
pop
mull
js
out
rcrb
mov
inc
mulb
int3
jno
aad
mov
fimull
sub
shr
mov
lock
lds
dec
cltd
inc
xorl
es
push
sub
or
jb
sbb
adc
sbb
addb
ja
out
fwait
int
cmp
popa
sbb
stos
or
fisttpll
popa
inc
loope
leave
mov
sbb
cmp
dec
pop
adc
dec
mov
or
rolb
dec
test
repnz
pop
out
dec
cltd
cltd
or
lds
aaa
sbb
mov
call
nop
mov
mov
ret
sub
push
ljmp
jno
movsl
mulb
or
and
or
or
dec
mov
or
pop
lret
popa
xchg
aas
mov
inc
fcomps
add
js
out
test
lds
add
cwtl
xor
fwait
lods
mov
xchg
jae
jns
add
dec
xchg
ja
imul
sarl
cmp
scas
ret
and
push
push
cmp
mov
ficoml
fwait
push
mulb
mov
addr16
sub
out
dec
aaa
dec
cmpsb
xchg
ss
mov
mov
insl
imul
into
pop
jg
icebp
aaa
push
dec
sub
ror
lea
push
lcall
cmpsb
repnz
adc
stos
fstpt
sti
and
loope
rcl
std
scas
jno
mov
mov
xor
dec
clc
xchg
xchg
lret
push
cmpsl
lods
aas
ret
push
add
inc
enter
push
cmp
pop
or
lods
and
in
out
cmc
outsb
lahf
push
pop
lahf
iret
push
in
lock
stos
xchg
push
faddl
rcrb
int
ja
mov
es
mov
xchg
push
nop
aaa
jo
add
and
jmp
cmp
sahf
and
fisttps
mov
push
mov
mov
xchg
add
imul
cmp
jge
pop
dec
je
push
lods
mov
divb
jne
mov
cmp
lods
mov
pop
jmp
fbld
or
push
sub
ret
pop
adc
fadd
outsb
pop
enter
cmp
mov
arpl
aaa
and
and
mov
dec
jne
out
add
jne
sub
js
negb
lock
cltd
mov
jo
repz
dec
ja
hlt
sub
dec
xchg
mov
dec
aam
nop
cltd
sti
xor
mov
shr
inc
in
lret
mov
and
sub
or
mov
arpl
or
mov
xchg
cmpsl
bound
pop
mov
rclb
mov
fiadds
mov
and
xor
cmp
je
xor
int
cld
push
jl
xor
pop
pop
mov
mov
lods
xchg
fwait
mov
ret
fs
sti
mov
mov
push
pop
mov
or
in
xchg
fildll
and
fcompl
imul
adc
xchg
test
mov
adc
pop
dec
push
jae
cwtl
mov
lahf
movsb
sbb
mov
cmp
out
pop
rolb
xchg
cmc
in
mov
in
out
xor
jmp
adc
js
fidivs
cwtl
loop
dec
loopne
xlat
xchg
outsl
movsb
sbbl
mov
lods
rclb
aas
xchg
lret
shlb
mov
out
rorb
lods
shll
and
xlat
inc
fbld
jmp
loope
std
adc
jb
cld
lret
sub
in
imul
aas
div
dec
lahf
repz
xor
xor
xor
mov
sti
adc
loopne
pop
inc
jne
popa
testl
loop
rorb
addb
scas
call
xchg
adc
dec
cmp
mov
int
jp
sub
aad
push
mov
setnp
push
cwtl
xchg
sub
mov
dec
daa
pusha
rcll
fisttpll
idivl
data16
dec
sub
adc
push
dec
test
jne
fdivr
inc
sti
jne
dec
xor
bound
data16
out
jp
dec
push
jbe
or
cmc
aam
out
mov
outsb
lds
jge
xor
and
aas
cmc
inc
xlat
repnz
pop
dec
lea
shll
adc
cmp
add
pop
enter
inc
jmp
push
dec
pop
rorl
cli
add
imul
std
scas
and
and
das
addr16
cltd
dec
out
cs
ss
imul
in
jbe
shr
popl
jl
jmp
out
xor
int3
xchg
rclb
mov
push
clc
popl
call
dec
adc
ljmp
aas
jb
test
in
and
push
mov
xor
mov
or
mov
jne
jne
sub
jne
push
cmp
pop
pop
lock
xor
jmp
or
or
sbb
inc
fiaddl
out
ja
cmpsl
scas
jb
inc
mov
add
jmp
test
repz
add
push
sub
mov
lret
sub
call
sti
arpl
popf
push
movsl
and
adc
jmp
mov
arpl
inc
fdivrs
xlat
cwtl
inc
or
sbb
sub
imul
mov
and
adc
loope
jmp
movsb
sbb
or
pop
jp
scas
test
inc
negb
arpl
dec
cltd
dec
pop
repnz
ljmp
jne
lods
dec
int
sub
xchg
rcrb
mov
sbb
xor
fwait
test
fildll
aam
jbe
pop
int
adc
lcall
push
or
xchg
jmp
push
imul
jge
mov
pop
mov
jne
fstcw
aad
inc
aas
mov
pushf
mov
push
jae
and
mov
cmpsb
add
mov
jne
mov
ret
ret
fcmovnu
je
insl
xchg
adc
inc
mov
cltd
std
es
testl
pop
aad
stos
cmpsl
cs
dec
repz
pop
in
xchg
cmp
shrl
dec
in
cs
add
mov
andl
sbbl
xor
add
in
popf
adc
or
mov
in
andl
in
dec
pop
sbb
scas
cmp
or
dec
jns
out
mov
xchg
movsb
adc
and
jg
out
or
xchg
test
jo
mov
mov
pop
outsl
add
mov
inc
mov
std
pop
shlb
adc
mov
jne
popa
sub
inc
push
push
pushf
aaa
mov
hlt
mov
ljmp
pop
loopne
aad
sub
movsb
xchg
ja
dec
sub
sbb
add
jg
shlb
xchg
sti
xor
push
pop
add
dec
popf
test
dec
addr16
push
inc
idivl
add
movsb
aad
loopne
cmp
xchg
xchg
add
mov
pushf
and
imul
jne
and
fnsave
test
ja
cli
ss
pop
push
add
jbe
hlt
stos
out
clc
and
stos
mov
roll
int3
scas
cmc
push
push
lahf
adc
add
idivl
out
addr16
pop
popa
lahf
out
jecxz
shr
movsb
cmp
mov
scas
lods
loop
rcrb
or
cmp
sub
dec
sbb
scas
in
push
push
testb
pop
jp
or
push
push
addr16
dec
mov
fsubl
stos
mov
or
popf
push
mov
or
mov
add
aas
adc
lahf
stos
xchg
mov
xchg
mov
sub
fdivrl
stc
push
or
jle
xor
or
mov
adc
pop
std
sub
andl
push
fbstp
push
inc
mov
aaa
cli
sbb
mov
das
or
vcmpps
insb
jecxz
ja
std
add
mov
push
int3
jg
push
test
int
or
inc
and
mov
dec
xchg
sub
push
jnp
jb
out
pusha
jmp
mov
hlt
cmp
in
push
add
or
adc
adc
mov
insl
in
jecxz
loop
rorb
cs
adc
adc
xchg
dec
stc
pop
lea
push
mov
sub
daa
push
inc
or
mov
sbb
jb
inc
cmp
xor
push
xor
stos
cmp
push
pop
aaa
push
data16
fisttpll
test
adc
adc
jns
or
mov
leave
mov
loop
addps
xchg
stos
jb
cmp
sub
jmp
cs
xor
mov
lahf
mov
rcrl
inc
xchg
dec
insb
sub
xchg
out
lods
pop
aas
ja
hlt
adc
cwtl
cwtl
pop
mov
es
test
mov
jg
mov
mov
and
adc
clc
jae
pusha
dec
flds
out
xchg
leave
sub
mov
sarb
movsb
and
xchg
push
xchg
sub
jl
pop
lret
cmp
push
clc
or
xor
stos
adc
ret
and
ret
ficompl
sub
mov
outsl
mov
cld
fwait
rcl
mov
aad
movsl
fdivl
xchg
jge
push
or
mov
cltd
fistpl
jb
ds
sub
inc
mov
xchg
xchg
cmp
xchg
adc
or
movsl
ret
push
rcll
daa
stos
adc
fnsave
jmp
mov
push
sbbl
mov
sub
sub
mov
pop
cmp
pop
sub
mov
stos
mov
idivl
shrb
jl
mov
stos
in
inc
dec
dec
testl
aam
add
or
mov
repz
jnp
add
test
push
ss
dec
mov
pop
out
inc
into
mov
jecxz
aad
push
sub
sbb
mov
push
add
loop
fmuls
sbb
jb
repnz
popf
adcb
outsl
cmp
aad
mov
adc
inc
lods
xor
inc
fldenv
cld
pop
fsubl
add
mov
js
mov
xor
shrl
ds
add
sbb
pop
inc
popf
fstps
mov
jnp
jnp
repz
adc
aad
mov
xor
out
push
hlt
jae
and
sub
movsb
shlb
sbb
lds
bound
add
shlb
mov
nop
pop
stos
add
rcrb
cmp
into
inc
push
pop
add
loop
inc
pop
imul
enter
mov
addl
push
daa
into
test
int
int3
js
cmp
push
movl
scas
out
dec
pop
sub
cltd
out
shrl
inc
cmp
jl
and
dec
mov
dec
into
jo
adc
pop
xchg
adc
add
cmp
mov
lret
jns
dec
test
sbb
cld
iret
xor
iret
popf
stos
bnd
xor
sbb
hlt
aam
adc
pop
test
jbe
fidivrs
mov
push
hlt
sub
dec
loope
std
notl
fisubs
jo
inc
xchg
cmc
rolb
repnz
sbbb
insb
lret
and
sarb
sub
filds
repnz
jnp
cmc
sub
aaa
dec
xchg
jns
fistpll
xor
pop
sub
jno
mov
jp
lods
add
dec
and
outsb
add
push
push
lea
and
and
fwait
shlb
mov
adc
es
xor
fiadds
pushf
mov
mov
fistpll
out
out
push
ss
xchg
inc
xchg
test
leave
gs
sarb
and
decb
mov
call
mov
aam
push
es
clc
pop
lret
jne
rorl
test
aam
mov
aad
dec
std
fdivl
push
sub
and
arpl
inc
aad
sub
adc
pop
xchg
fmull
and
jb
js
sbb
mov
mov
ds
fwait
insl
and
clc
mov
bound
cmc
or
repz
push
pop
das
inc
addl
jge
inc
lahf
mov
into
out
push
ss
in
xchg
aaa
jno
push
inc
push
scas
jecxz
js
jno
ss
jecxz
ds
push
jmp
pop
repz
or
jecxz
push
adc
sbb
hlt
xor
push
test
inc
mov
mov
cmp
xlat
dec
xchg
or
xchg
pop
cmpsl
bound
cwtl
fcmovne
mov
outsl
jmp
push
daa
daa
lock
or
jns
or
call
fs
cmp
pusha
mov
mov
or
enter
or
dec
pop
loope
cmpsb
mov
orl
fcmovnbe
aas
rol
repnz
out
aas
lcall
test
iret
data16
lods
inc
pop
es
xchg
fidivl
leave
xchg
mov
cmc
inc
adc
pusha
test
jns
mov
jg
ljmp
jae
pop
outsl
ljmp
jmp
shll
movsb
mov
rcrl
inc
lock
dec
stos
je
and
test
xchg
and
inc
cmpsl
sbb
xor
mov
add
xchg
mov
std
add
sbb
jb
insl
push
or
cltd
loopne
in
inc
ret
mov
push
jne
icebp
pop
jns
sbb
outsb
and
dec
ret
xor
mov
sbb
and
dec
push
data16
lods
sub
xor
xchg
jne
loope
pusha
pushf
jb
sub
lret
inc
ja
mov
or
xchg
add
fisubrl
scas
inc
xchg
jg
add
gs
mov
jle
jl
imul
repnz
sub
ja
push
insl
js
lahf
sbb
sti
xchg
in
pop
cmpsl
sahf
aas
cltd
xor
stos
inc
int
mov
dec
fisubrl
in
fscale
dec
mov
int
das
push
gs
movsb
push
js
movl
cs
pop
pusha
push
js
mov
test
dec
jg
pop
divl
mov
cmp
jne
xchg
sub
fwait
mov
xchg
mov
cmpb
xor
or
pusha
outsl
pushf
inc
arpl
mov
mov
test
decl
add
or
sbb
push
sub
pop
pop
mov
and
inc
leave
cli
sub
pop
cmp
addl
and
stos
dec
mov
sub
repnz
dec
xchg
mov
or
fbstp
cmp
test
cmp
movb
mov
add
stc
lea
jmp
mov
jle
sub
pop
jge
cltd
std
xor
mov
xor
mov
int3
pop
repnz
pop
jbe
pop
adc
inc
popf
push
ja
aam
and
mov
pusha
mov
lock
lock
pop
fistl
f2xm1
repz
cmp
mov
ret
fistl
jns
jp
xchg
push
pop
ret
or
incl
dec
inc
xchg
cmp
icebp
ljmp
lea
js
mov
sahf
xorb
lods
mov
subl
fadds
lods
xor
jle
rcrb
rcrl
loope
mov
xor
sub
push
jmp
insl
mov
gs
mov
imul
sbb
addr16
fwait
push
stos
push
sti
cs
lret
shrl
adc
jmp
int
sub
aas
xor
xor
js
dec
inc
mov
enter
std
je
mov
jno
dec
lahf
jl
daa
inc
rcrl
lahf
dec
fs
dec
test
leave
sbb
fwait
cmp
jl
fwait
xchg
cld
sbb
stc
cld
cwtl
xor
push
stc
mov
test
lahf
inc
xchg
je
addr16
sub
and
or
inc
subl
jmp
pop
xor
rclb
cwtl
addl
sbb
add
xor
push
in
sub
out
xor
pusha
ret
loop
movsb
add
out
int
div
sbb
push
adc
test
pop
fcompl
push
mov
sub
rcr
loope
adc
movsb
jns
sub
fistps
cmc
mov
pop
cmp
sbb
push
xor
and
popa
adc
pop
popf
mov
sub
pop
je
dec
and
into
inc
or
sub
outsb
mov
mov
dec
pop
adc
mulb
push
orb
movswl
ret
aad
jns
pop
jge
aaa
insl
mov
mov
and
xchg
mov
cli
rorl
scas
popa
pop
fdecstp
pop
jg
dec
pop
repz
inc
push
xchg
fisubl
decb
pop
shlb
sub
loop
icebp
dec
and
inc
jo
pop
rcr
or
cwtl
fisubrs
clc
jmp
test
leave
mov
mov
jne
lret
mov
idivl
mul
clc
sub
sbb
jg
fsts
xor
push
cmp
lods
and
fildl
sbb
insb
jno
out
lret
mov
mov
mov
jl
adc
test
cmp
cmp
jle
bound
sbb
std
out
adc
inc
js
cmp
jno
movsl
scas
jmp
pop
loopne
xor
cmp
xchg
or
push
mov
push
and
hlt
pusha
pop
dec
pop
lahf
gs
ljmp
push
inc
fstpl
mov
cmp
pop
xchg
aas
fcomi
loopne
into
push
je
jno
and
insl
or
xchg
jg
outsb
sub
sbb
decb
ss
sub
inc
sbb
divps
and
sbb
adc
cltd
ja
push
xchg
push
adc
mov
rorl
sbb
iret
mov
cwtl
inc
mov
ja
xchg
push
cwtl
je
stc
add
xlat
mov
leave
scas
pop
loop
sub
dec
add
pop
mov
lahf
dec
mov
jb
push
jb
push
sub
pop
ret
arpl
xchg
ljmp
jl
pop
sub
or
fadds
cld
add
adc
fsub
lahf
cli
bound
xchg
push
insb
or
cmpsl
or
xor
in
jge
mov
mov
je
lahf
and
jno
add
sarl
xor
mov
enter
or
sahf
push
loope
mov
lods
inc
xchg
cwtl
add
mov
lret
mov
cli
stos
mov
jecxz
cmp
shl
mov
inc
inc
push
nop
fisttpl
outsb
repz
mov
push
xchg
push
mov
push
bound
stc
sbb
movsl
xor
clc
sbb
addr16
cmp
fbstp
mov
mov
jbe
daa
ds
mov
jbe
jmp
lea
cmp
lock
jne
mov
dec
scas
lods
inc
adc
mov
mov
jg
mov
push
mov
test
jl
sub
mov
or
xlat
dec
loopne
and
sub
test
pop
inc
push
data16
lock
outsb
out
push
testl
xor
ljmp
add
and
and
sub
fs
jne
cmp
cli
in
cmpsl
sub
insl
sub
sub
dec
jge
in
nop
inc
xor
cli
pop
stos
pop
and
nop
int3
fsubr
hlt
lret
sti
and
mov
in
repnz
into
mov
sbb
sahf
mov
and
lock
dec
cmp
mov
sbb
iret
stos
cmp
fcomi
cmpsl
fs
xor
xchg
or
in
mov
jge
mulb
aaa
pop
imul
push
cmpl
scas
pop
je
inc
mov
lods
sub
push
out
cmp
push
sub
push
adc
into
nop
rcll
arpl
add
stos
notb
rolb
lock
and
inc
inc
push
xor
sbb
call
in
out
stos
andb
test
ljmp
ds
lock
ret
mov
xor
xor
insb
and
sbb
jecxz
sub
movsb
addb
mov
aam
pop
iret
les
adc
jmp
call
pop
sbb
push
std
gs
inc
mov
inc
push
pop
in
stos
dec
push
jo
push
cs
mov
and
rcl
cmp
scas
aaa
and
outsl
daa
push
fidivrs
pop
inc
sti
pop
out
call
ljmp
inc
aaa
pop
out
pushf
clc
mov
aas
or
mov
or
adc
pop
sbb
mov
push
fdivl
xor
inc
fistpll
xlat
pushf
jge
pop
pushw
and
inc
lea
xor
ds
adc
sbb
jbe
cmpsb
pop
pop
enter
add
rcrb
push
cmpsl
push
push
arpl
out
out
test
test
and
xchg
pop
pop
mov
mov
mov
jge
testl
arpl
push
stos
sub
fbstp
enter
fwait
nop
push
and
adc
into
add
adc
mov
movsb
push
cli
mov
jo
xor
bound
gs
cmpsl
cmpsb
pop
or
ret
ds
test
push
inc
sbb
dec
fists
clc
mov
mov
fmul
jb
push
sub
xor
jp
xchg
sub
mov
call
ljmp
mov
xor
xor
push
aam
lods
cld
loope
mov
popa
lea
pop
lahf
std
xchg
lret
shll
movsb
lcall
dec
out
icebp
mov
adc
pop
cmp
insb
cwtl
repz
cmp
rep
ljmp
mov
add
push
popf
repz
mov
ds
and
inc
inc
mov
ljmp
mov
lret
out
imul
filds
and
sbb
scas
lds
cmp
mov
push
pushl
and
lods
movsl
jnp
in
and
inc
out
push
dec
loop
jmp
lcall
push
call
pop
lcall
pusha
into
in
jg
dec
cmp
movsl
inc
test
xor
nop
pop
push
lods
shll
fwait
sub
test
mov
popf
jg
test
out
mov
imulb
and
test
inc
ret
jae
fisubrs
bound
jno
sbb
push
test
mov
das
test
orl
sub
out
cmp
ret
aas
call
outsb
ret
je
mov
push
mov
outsb
inc
loop
loope
fildl
xor
push
aaa
mov
add
lock
lock
adc
ret
push
ret
pop
jp
shlb
ret
cli
movl
dec
test
inc
jg
xor
shlb
adc
sbb
adc
out
pop
aas
mov
lret
sub
mov
pop
loope
or
jno
pop
mov
cmpsb
inc
push
out
fistps
gs
or
mov
jne
inc
pop
mov
add
mov
pop
xchg
mov
push
or
cmp
imul
adc
mov
xchg
lcall
in
mov
mov
fs
aam
jae
mov
rclb
dec
xor
xchg
cwtl
int3
arpl
pop
cwtl
xor
ljmp
xor
hlt
out
xor
sub
inc
inc
int3
hlt
xchg
into
fisttps
or
sahf
vpunpckhbw
or
call
push
rol
adc
inc
in
dec
repz
lahf
int
hlt
pop
sbb
cltd
xchg
fimuls
mov
stc
jp
movl
rcrb
dec
mov
fwait
or
cmp
or
mov
imull
pop
cmp
and
push
dec
lods
bound
sub
jbe
lahf
jne
inc
icebp
cmp
call
and
aam
inc
pop
test
pushf
or
lret
fdivrs
xor
aad
add
sbb
ret
jbe
mov
shr
enter
shll
add
xor
shlb
jge
and
outsl
sub
xor
jle
enter
pop
pop
imul
sbbb
dec
inc
fists
subb
insb
add
mov
call
inc
jge
jne
and
hlt
mov
test
aam
mulb
xor
pop
call
stc
add
dec
sbb
int3
leave
and
in
cmp
cmpsl
les
fisttpll
jbe
xchg
push
xlat
out
test
mov
jg
pop
mov
push
pushf
sub
mov
xchg
xor
lea
repnz
and
push
popa
inc
rol
jmp
hlt
cli
dec
js
xchg
jmp
outsl
cmp
adc
cmpsb
ja
call
pop
push
jb
mov
xor
sbbb
xor
lahf
paddusw
xor
cwtl
jo
mov
cmc
pop
cltd
test
push
movb
les
pop
adc
shll
outsl
in
push
push
cmc
fadds
jnp
arpl
xchg
pop
repz
sti
inc
dec
nop
movsb
andl
cmp
test
ljmp
adc
mov
ret
fldcw
imull
je
mov
sub
pop
pop
popa
sub
cmpsb
mov
adc
mov
les
frstor
push
insb
or
ja
xchg
mov
pop
cmpsb
inc
imul
loopne
inc
outsb
xor
addr16
lods
push
sub
mov
testb
cmp
ljmp
insl
loopne
dec
imul
insl
or
cli
mov
rcll
mov
cmp
sbb
xor
ss
jae
fwait
jae
scas
jno
gs
imul
sub
xchg
ds
adc
or
or
aas
mov
test
inc
in
jmp
into
pushf
xchg
cmp
pop
sbb
lret
addr16
add
out
dec
push
and
sub
movl
sbb
mov
mov
popa
movsl
inc
jmp
jb
dec
inc
outsb
bound
outsb
rcrl
sbb
sub
pop
icebp
rolb
inc
addl
push
sbb
and
inc
and
arpl
hlt
xor
sub
cmp
sub
cld
jae
mov
stos
das
iret
adc
adc
jmp
adc
jno
scas
mov
jg
fsubrs
adc
cmc
insl
sub
mov
cmp
jmp
add
push
pop
sbb
shrl
fcomi
adc
mov
mov
cwtl
inc
ljmp
push
bnd
xor
sahf
cs
cmp
xchg
stos
mov
pop
mov
imul
cmp
sub
pop
mov
jl
mov
pop
mov
dec
pop
jnp
pusha
xchg
push
outsl
daa
cmp
lds
xor
xor
mov
mov
or
daa
gs
test
pop
xchg
add
bound
loope
sbb
xchg
and
sub
aas
push
mov
in
std
popa
fcomp
scas
dec
or
loop
outsl
into
xchg
adc
jp
mov
jb
stos
aas
sub
sub
in
pop
rcrb
push
cmp
hlt
and
fstl
xchg
fisubl
and
movsb
dec
andb
jl
pop
scas
dec
insl
sub
shlb
arpl
add
xchg
push
mov
jne
daa
sti
aad
outsl
nop
and
push
cwtl
ja
jge
cmp
insl
sub
cmc
subb
add
lret
call
sbbb
fiaddl
adc
mov
cmpsb
shrb
inc
cmp
and
xchg
push
dec
xor
daa
shll
cmpsl
pusha
mov
xchg
jae
mov
xor
icebp
jge
setns
pop
adc
xchg
pop
cmp
mov
mov
int3
out
cltd
in
xchg
out
test
mov
lods
sbb
lahf
dec
mov
aam
pop
cmp
movsb
xchg
jmp
sbb
mov
cmp
fidivrs
in
sub
xlat
push
and
mov
cmp
mov
lea
movsb
jb
add
lret
mov
add
xor
add
mov
jg
fimull
pop
in
fcompl
sbb
shrl
out
cmpb
fwait
xor
nop
and
jg
push
jecxz
int
stos
or
xchg
int3
imull
sub
cmp
decb
in
push
cli
sub
mov
imul
gs
jo
dec
rol
ljmp
mov
and
mov
popf
mov
and
mov
testl
mov
dec
movsl
popa
xlat
dec
out
lret
dec
movsl
dec
notb
nop
out
pushf
dec
in
cmp
out
mov
jp
xchg
icebp
mov
imul
xchg
out
fisubrs
lea
sarb
push
push
fmuls
inc
mov
cltd
aaa
jbe
fisubrl
push
mov
or
repnz
and
insb
adc
add
sub
fcoms
pop
mov
dec
xchg
add
cmpps
fdivrp
sub
test
mov
sarb
ret
sub
aaa
adc
jge
push
out
test
sub
fstpt
add
xor
mov
decb
sbb
sbb
add
scas
cmpsb
mov
and
lea
sbb
jge
lock
pusha
mov
ret
push
adc
aaa
rorl
clc
arpl
lahf
in
xchg
jmp
or
mov
cmpsl
ds
jp
jg
lds
movsl
sbb
push
insb
sbb
mov
sbb
iret
data16
hlt
mov
jl
stos
outsl
sub
pushf
shlb
inc
fiaddl
lods
inc
pop
adc
or
cmp
add
push
gs
jne
mov
repnz
js
add
out
test
adc
mov
test
jl
fldcw
addr16
xchg
mov
jp
std
out
pusha
sub
dec
xor
rcrl
lds
mov
push
fisttpl
sbb
inc
scas
pop
scas
push
int3
mov
mov
dec
xchg
daa
mov
lds
stos
inc
lea
lcall
dec
in
es
xchg
addr16
fists
call
into
sbb
cltd
mov
adc
adc
rcrl
imul
dec
rclb
pop
mov
jmp
mov
add
iret
jno
jle
inc
test
aad
fxtract
mov
push
xor
and
dec
es
cmp
mov
mov
mov
stc
loop
aaa
dec
fwait
jp
push
test
inc
mov
aam
xor
pushl
sub
push
xchg
cld
xor
aaa
dec
push
add
clc
cmp
mov
fcomps
movsl
leave
or
xlat
jo
test
push
cwtl
cmp
push
pusha
stos
jno
aam
fs
popf
sub
jecxz
dec
cltd
icebp
cmp
jg
and
sbbl
out
stos
dec
adc
and
in
xor
mov
fdivs
frstpm(287
inc
aad
add
test
mov
inc
shr
ffree
sbb
gs
in
aad
and
mov
enter
lds
push
sub
filds
je
int3
mov
ljmp
fwait
cld
adc
jbe
adc
jb
dec
and
inc
rcl
adc
dec
dec
cmpsb
sbbl
rcrb
daa
mov
scas
pop
inc
mov
push
outsb
add
sbb
shl
pop
push
mov
test
int3
jns
sti
mov
lds
in
sbb
sbb
ja
sahf
mov
loop
push
in
and
cmpsb
call
cmp
outsb
adc
sbb
mov
xchg
push
pop
sub
cwtl
scas
cmp
sbb
in
mov
xchg
jno
aas
movsl
pop
xor
popa
mov
xchg
add
sub
mov
mov
mov
cmp
dec
and
repz
jecxz
mov
lret
cmp
pop
push
in
dec
jae
mulb
loope
mov
xor
insl
pop
aad
mov
sub
xchg
sub
inc
int
push
int3
popa
enter
push
int3
inc
push
es
push
aas
ljmp
xchg
mov
push
lock
jmp
cmp
les
pop
sub
jnp
pop
in
jo
aas
add
mov
mov
cmp
inc
push
stc
shrb
sbb
cmp
popa
mov
dec
jo
jg
in
cmp
data16
sarb
fisttpl
push
je
mov
lods
jge
mov
loope
mov
rorl
inc
pop
out
mov
pop
pop
clc
into
mov
loopne
jecxz
sti
cs
dec
int3
mov
arpl
loop
adc
lahf
cmp
cmp
imul
pop
mov
pop
cmpsb
std
fwait
push
dec
stos
cmp
sub
adc
jnp
xchg
hlt
jp
in
mov
fisubrs
arpl
sbb
mov
adc
or
jle
dec
mov
jo
in
mov
in
jg
mov
scas
xchg
aas
aad
or
aad
jge
lret
ja
jp
jge
and
mov
xor
xor
in
xor
xchg
or
sub
loope
clc
and
shrd
divb
sub
ret
and
int
fistps
jns
pop
test
es
addl
imul
cmc
xchg
push
iret
mov
dec
inc
dec
shll
cltd
cmpsl
mov
cmpsl
jb
adc
adc
push
je
xchg
mov
aad
sbb
adcl
jecxz
cmp
mov
mov
les
rcr
inc
inc
fstpl
push
scas
pop
adc
clc
cmp
cmp
xor
add
push
nop
pusha
or
cltd
xor
push
addr16
xlat
mov
xchg
sbb
daa
out
jae
movsl
sahf
scas
push
loopne
mov
loopne
jo
jae
stos
fnstcw
sbb
sbb
jl
jg
xor
and
loop
mov
pop
cmp
jecxz
gs
adc
push
lock
sub
pushf
dec
xor
mov
jne
rorl
sub
std
lods
divl
repnz
ror
xchg
xor
insl
dec
jecxz
popa
cmp
pop
ss
in
test
push
cmpb
shl
cmp
aaa
pop
jmp
pop
arpl
aaa
jne
push
cmpsl
dec
arpl
js
mov
aaa
add
pop
ss
aas
push
lret
fimull
sbb
arpl
xor
test
mov
mov
repnz
out
scas
pop
mov
fistpl
push
sbb
cmp
fiaddl
cld
adc
adc
jbe
adc
pop
bound
sbb
popa
xor
push
test
jo
pop
jo
ret
loopne
ds
adc
mov
mov
test
aam
mov
in
dec
push
ljmp
and
pop
jle
adc
sub
es
lret
xchg
sub
jle
push
je
pop
sub
test
fidivs
xchg
add
inc
xor
gs
outsb
xor
cs
pop
rorb
jecxz
or
loope
pop
mov
and
mov
ret
jl
or
neg
mov
stc
adc
stc
and
add
into
es
mov
in
in
pusha
lcall
mov
mov
and
xchg
mov
lds
cmp
stc
sarb
in
ss
addr16
xchg
or
mov
sti
clc
lods
loopne
push
sbb
stos
mov
popf
cmpsl
mov
aad
sbb
jo
ss
dec
inc
data16
push
in
mov
lock
call
loopne
aas
dec
mov
fildll
push
add
cmc
mov
push
js
ficoms
fucomp
dec
cmpsl
test
pop
xor
jp
lds
dec
dec
cmpsb
repnz
xchg
lcall
and
pop
dec
testl
cmp
call
sbb
add
cmp
cli
popf
lea
cmpsb
aaa
xor
push
leave
lret
inc
mov
mov
sub
loopne
dec
sub
mov
xor
inc
adc
mov
xchg
xchg
hlt
ret
out
dec
test
mov
jp
cld
aam
and
flds
ja
in
popf
jg
push
ljmp
mov
fisubs
mov
jbe
shrl
outsl
sub
iret
pop
xchg
stc
and
stc
mov
popa
test
andb
fnsave
push
mov
pushf
int
pop
cmp
movsb
sub
sarb
je
shl
scas
es
repnz
clc
lods
inc
sub
mov
gs
loope
mov
or
insb
std
pop
sbb
jb
icebp
sub
mov
push
leave
hlt
mov
adc
imul
popf
mov
sub
sub
mov
mov
lock
inc
or
cmp
mov
and
xor
arpl
repnz
push
mov
and
sub
in
stos
daa
outsb
fnstenv
mov
inc
push
dec
in
outsb
mov
pop
out
mulb
out
sar
popa
pusha
adc
lcall
cwtl
or
lds
aad
inc
mov
neg
pop
hlt
int3
xchg
outsb
das
inc
in
jnp
add
daa
cwtl
pop
xor
xchg
and
sub
in
mov
add
add
jmp
scas
pop
bts
and
pop
xchg
sbb
adc
scas
inc
push
lcall
or
and
dec
mov
mov
dec
out
pop
mov
xor
cwtl
incb
cmpsb
stc
jle
cld
jp
mov
sbb
mov
push
or
insb
push
push
movsl
adc
nop
jecxz
hlt
clc
push
leave
sub
mov
arpl
hlt
lods
and
into
outsl
inc
pop
out
das
inc
and
data16
inc
lock
std
in
mov
and
clc
popfw
mov
nop
hlt
loop
scas
adc
sbb
pop
jno
imul
out
add
or
outsb
loope
push
mov
insl
jbe
jle
and
jo
mov
stos
loop
adcb
sbb
stos
lahf
cli
inc
iret
movsb
mov
dec
jno
push
sub
mov
fdivrl
push
dec
sahf
or
inc
inc
rcrb
jne
sub
and
xchg
xorl
icebp
or
mov
cld
jmp
mov
test
ja
push
test
hlt
push
jbe
inc
push
outsl
push
inc
and
and
mov
mov
iret
stos
fstpt
lds
sar
mov
loop
call
iret
movsb
jo
fstl
mov
add
or
out
mov
push
fcomps
or
rcrb
dec
movsb
test
pop
pop
dec
xor
idivl
mov
mov
popf
ljmp
lock
dec
xchg
mov
and
xor
scas
scas
dec
jmp
popl
pop
xchg
inc
jle
mov
pop
xlat
xor
mov
ljmp
sbb
das
push
mov
jge
fs
mov
nop
sub
sub
jge
mov
dec
hlt
adc
cli
cwtl
ret
sahf
gs
fwait
jmp
movsb
in
dec
mov
loopne
shrl
pop
stos
cli
xchg
mov
test
outsl
jecxz
in
fxch
imul
divb
je
ret
mov
arpl
jg
mov
jnp
mov
loopne
gs
push
sbb
popa
mov
lret
out
addr16
sub
and
xor
test
mov
insl
ret
sub
lds
dec
lret
insb
sbb
dec
jno
sub
lcall
pusha
cmpsb
jne
inc
into
ret
sub
std
fwait
sbb
xor
adcl
push
aaa
sbb
popa
iret
jg
mov
pop
decb
push
rolb
xor
inc
and
or
adcb
rorl
xchg
jg
push
ja
xor
add
pop
xor
lea
les
test
pushf
stos
dec
mov
cmp
sbb
mov
jp
mov
cli
popa
mov
adc
rcrl
sbb
inc
pusha
fiaddl
jecxz
mov
and
test
sub
sub
mov
adc
inc
aam
cmp
jle
pop
aad
dec
mov
jbe
mov
xchg
xor
cmpl
ds
data16
dec
addb
jp
outsb
js
ss
lds
or
xor
pop
sarb
add
xchg
mov
addr16
cwtl
ljmp
shr
int
push
cmpsl
out
in
cmp
fcomi
push
mov
sbb
lret
ret
sbb
add
mov
mov
lea
dec
xchg
adc
adc
std
cltd
sub
push
push
in
inc
jl
aad
stos
inc
jmp
decl
je
and
movsl
xor
push
sbb
in
cwtl
mov
orl
scas
call
lock
pop
mov
fwait
mov
in
pusha
sbb
pop
ja
arpl
fsts
and
arpl
push
dec
mov
orl
cmc
fs
lods
xchg
in
pop
mov
pusha
scas
cmc
push
inc
cmp
or
mov
sbb
daa
outsl
repnz
loop
or
jns
or
and
add
mov
or
in
or
push
jb
mov
mov
inc
mov
or
pushf
push
int
or
sub
das
outsl
iret
lods
mov
lret
es
inc
inc
mov
inc
mov
hlt
movl
sub
test
and
ja
adc
jae
xor
or
add
inc
std
jne
xchg
lods
into
add
rcrl
fcomps
dec
xchg
popf
clc
pop
or
repz
cmp
mov
mov
ret
push
les
sub
pop
addr16
dec
mov
out
adc
xchg
jle
mov
scas
jnp
xor
cwtl
das
and
pop
fldenv
ret
into
and
out
pop
cli
xchg
aas
jge
dec
pusha
sbbb
cmc
enter
repz
sub
fmuls
dec
mov
stos
stos
mov
ss
jnp
mov
push
sub
or
repnz
sub
or
sub
xor
mov
dec
xor
ss
and
orb
jns
lods
push
push
div
xchg
pop
sub
push
fmull
scas
and
mov
stos
inc
push
scas
js
pop
in
test
cli
loope
hlt
jo
xor
sbb
mov
fbld
arpl
add
and
jb
jl
sub
mov
xchg
mulb
sbb
add
divl
pusha
outsb
mov
xorl
mov
lahf
stc
popf
pop
lcall
cmpsb
xor
adc
jg
lea
inc
je
sbb
fstpl
push
push
dec
leave
cld
push
jl
ret
mov
and
fs
push
scas
shrb
shll
cld
sub
cli
or
sub
orb
or
dec
and
les
pushf
xor
sub
xor
xor
les
test
lret
jb
xchg
fstpl
fidivl
adc
xor
mov
shll
sbb
fadd
push
in
loopne
adc
xchg
cld
jge
loope
fldenv
or
arpl
pop
fstl
test
aam
jmp
sbb
xor
jge
sbbb
les
stc
loopne
sbb
fidivrl
xor
push
sub
pushf
mov
mov
inc
jle
xchg
mov
inc
dec
push
in
mov
sbb
repz
loope
cmp
orl
popa
lret
sbb
in
push
cli
adc
and
into
mov
mov
shll
test
notl
not
xlat
and
sub
add
jb
jl
mov
xor
push
jmp
sub
mov
cmc
push
insb
daa
sti
cs
je
int3
in
jns
adc
push
inc
ja
fbstp
stos
es
xlat
push
mov
and
iret
sti
push
adc
mov
mov
stos
cmpsb
push
sub
sbb
mov
dec
push
inc
xlat
inc
jns
add
ret
sbb
sub
std
add
pop
dec
and
xor
aam
repz
jns
roll
insl
inc
mov
add
in
repz
push
pop
xor
mov
sbbb
loope
push
adc
xor
mov
cmpl
add
mov
data16
outsb
pop
pop
sbb
mov
in
jecxz
dec
cmp
mov
mov
adc
or
mov
cs
loopne
sub
fcomps
pop
shrl
sub
cltd
divb
pop
push
jp
inc
jno
les
jg
sahf
in
push
sub
mov
andl
xor
cmpsb
xor
iret
jbe
inc
loopne
clc
cld
mov
adc
fistpl
and
cwtl
cld
pop
cld
pop
jle
out
push
pop
rcrb
pop
test
pop
mov
aad
push
mov
lret
in
pop
imul
sti
es
mov
add
ljmp
daa
mov
sbb
ret
push
xchg
cs
insb
jmp
mov
pop
test
dec
jbe
sub
in
add
ret
bts
xor
push
andb
sbbl
pop
cmpsb
push
insb
mov
sub
cld
jo
inc
mov
ret
cmpb
mov
mov
mov
pusha
fdiv
cmpsb
clc
push
imul
imul
xlat
mov
cmp
outsb
xchg
lods
ficomps
and
jb
lcall
cmp
bound
bound
fists
jno
ja
cmp
loop
and
cli
lods
nop
adc
in
arpl
sahf
std
push
mov
les
push
jae
dec
gs
test
je
repz
push
fcoms
scas
xor
mov
push
pop
inc
stc
inc
mov
addr16
mov
call
clc
and
sti
mov
push
and
lods
mov
ret
add
fnsave
les
fstpt
push
xchg
xorb
mov
xlat
jg
mov
loopne
fstpt
sub
addr16
push
jbe
outsl
lods
push
addb
fcoml
dec
pop
inc
ror
ljmp
fisubl
mov
adc
stos
fisubl
in
je
pop
inc
rcrl
arpl
dec
bound
stos
and
inc
xlat
mov
clc
cwtl
mov
jno
push
push
lahf
cwtl
shll
or
jnp
push
fistl
gs
mov
jl
daa
repnz
call
mov
cwtl
mov
pop
pop
mov
push
sub
inc
mov
aaa
std
jo
xchg
dec
ret
sub
cmp
jg
je
leave
inc
jbe
test
mov
aad
jae
decb
sub
xchg
xchg
je
hlt
mov
pop
fiadds
test
nop
ja
cmpsl
xorl
mov
ret
ja
sbb
adc
lahf
or
popa
insl
fdivr
add
or
mov
or
dec
mov
push
pop
or
lea
dec
mov
cmp
xchg
icebp
dec
or
and
outsb
fidivrl
shrl
sbb
xchg
xchg
sbb
scas
mov
inc
loop
push
ss
fwait
mov
push
popa
or
mov
mov
pop
mov
inc
gs
jecxz
cwtl
dec
cmpsl
test
sbb
pop
jne
mov
aas
push
and
xchg
push
frstor
gs
into
nop
sbb
in
cmp
xchg
and
pop
cmp
call
fwait
sti
mov
fpatan
pop
xchg
decl
mov
dec
or
es
sub
mov
andl
repz
jo
adc
inc
in
cmp
dec
pop
and
ja
inc
add
mov
shl
lcall
cs
add
inc
fidivs
push
cmp
inc
xchg
sbb
inc
hlt
shlb
xchg
lret
and
pop
push
ja
adc
or
jle
shll
mov
out
cwtl
inc
cmp
and
mov
roll
and
sbb
inc
lods
in
pop
or
lcall
xor
roll
fwait
xor
fldcw
cltd
xchg
lods
push
fcoms
or
in
jmp
dec
lods
jae
push
mov
int3
mov
repnz
je
cmp
fs
rclb
adc
jmpw
das
jb
add
shrl
lret
jmp
inc
cs
add
jg
jge
in
bound
xor
push
sub
sbb
push
imul
sub
push
stos
or
or
out
inc
inc
jbe
pop
test
into
in
std
and
add
lret
pop
repz
addr16
cltd
ret
jge
hlt
adc
jmp
sbb
mov
sbb
sbb
mov
in
xor
cmpsl
out
fs
mov
mov
inc
stc
xlat
push
loope
out
into
sbb
mov
ret
cli
cmpsb
mov
clc
inc
mov
shlb
pop
outsb
cmp
xor
in
cmpsb
lahf
jns
pop
stos
xor
cld
inc
stos
loop
into
int3
test
jmp
dec
dec
inc
lret
shll
cmp
push
sub
push
xor
pop
ds
insb
sub
lock
xchg
cmpsb
fisttpll
shr
lret
insl
push
jno
loopne
push
pop
xchg
aam
daa
gs
lea
push
inc
loope
inc
jg
jbe
nop
mov
js
mov
cwtl
cmp
test
out
mov
arpl
fidivrl
mov
mov
hlt
push
jae
adc
mov
add
test
outsl
mov
mov
lcall
int
push
jae
mov
adc
dec
cmp
ret
jo
js
jne
ret
data16
popl
out
int3
test
fistps
jge
hlt
mov
dec
sub
mov
lahf
xchg
xchg
mov
or
lahf
jp
push
fmuls
xchg
out
inc
das
pop
sub
cmp
xchg
nop
xchg
xchg
mov
pop
stc
out
cs
das
cmpsl
dec
add
lods
inc
fidivrs
fdivr
cmp
imul
inc
jae
roll
push
in
add
out
push
loop
or
dec
rol
out
sub
add
dec
cmc
arpl
fsubrs
pop
idivl
in
scas
mov
lahf
gs
xchg
mov
adc
call
sbb
les
lods
xor
jae
mov
xor
leave
insl
mov
pop
hlt
mov
scas
push
movsl
sbb
jmp
out
in
sbb
icebp
mull
adc
lcall
cmc
jmp
in
xlat
jbe
cld
movsb
inc
fs
push
sbbl
cmpsl
sbb
fstps
mov
adc
cld
sbb
jg
mov
or
or
cltd
sbb
xor
inc
jb
sbb
fs
jb
es
or
adc
iret
push
sbb
jno
aas
cmp
adcl
push
mov
mov
ljmp
insb
data16
stos
fwait
xor
fnstenv
lds
int
iret
sub
imul
pop
sub
xor
repz
adc
jp
shrl
xor
insb
lea
sbb
repnz
mov
inc
les
jle
nop
mov
push
add
out
clc
in
push
mov
jno
add
aas
ret
sbb
insb
sbb
xor
mov
orl
mov
pushf
xchg
pop
sub
or
sahf
fldenv
add
shrl
xchg
jno
push
mov
sub
inc
fdivrl
bnd
sbb
popf
pop
push
mov
std
jmp
jl
popa
popl
mov
lea
cmpsb
lock
cmp
cmpsl
nop
push
in
in
push
push
jp
xor
adc
and
call
mov
dec
sbb
sbb
in
dec
cmpsb
nop
in
mov
dec
xchg
aad
cwtl
push
cmpsb
push
movsl
adc
xchg
outsl
hlt
cmpsl
dec
push
shlb
ljmp
push
sbb
xor
jb
push
mov
xchg
xchg
pop
add
jecxz
sub
lea
xor
daa
stc
addr16
fsubr
dec
pop
test
xchg
les
lock
std
xchg
enter
push
insl
sbb
call
aam
into
ret
testl
sbb
lods
sti
aas
shrb
cmp
push
decl
enter
cli
out
xor
xor
sbb
xor
pop
dec
mov
and
es
insb
adc
hlt
mov
cmp
bound
mov
and
repnz
xor
pop
into
enter
out
ds
in
repnz
cmp
pop
or
aaa
hlt
rcrl
fmull
pop
mov
sbb
sbb
mov
jae
mov
cli
dec
and
sti
mov
std
cmp
dec
jg
fisubrl
out
and
cmp
xor
addr16
lock
inc
and
or
push
in
xor
adc
shll
mov
out
test
sub
pop
out
inc
mov
jne
sti
mov
call
xor
dec
fs
ljmp
movsl
outsl
gs
jo
adc
push
loopne
ficoml
loope
in
mov
jecxz
jnp
mov
push
pop
outsl
daa
into
jl
sti
nopl
push
hlt
js
push
mov
push
inc
fidivl
sbb
fsubrp
test
loop
arpl
lcall
mov
jno
add
pushf
sub
out
push
pushf
out
sub
int3
cmc
inc
sahf
or
sub
hlt
insl
push
inc
pop
sub
jg
fcmove
ja
insb
cmp
jne
inc
ret
out
jmp
inc
inc
iret
pop
mov
push
ss
bnd
adc
cmp
ds
push
or
mov
push
lods
test
stc
jne
popa
cmpsl
sbb
sbb
fs
movsl
int3
add
mov
out
dec
cltd
mov
imul
pop
leave
lahf
ds
neg
xor
fisubs
rclb
fisubs
push
push
movsl
imul
jg
pop
or
out
jmp
sub
inc
jmp
ljmp
pop
dec
dec
pop
mov
cmc
pop
out
jg
clc
and
sbb
enter
dec
shrl
pusha
mov
insb
call
sub
cmc
fnstsw
push
scas
leave
xchg
and
inc
fcompl
enter
scas
lcall
adc
pop
xchg
sub
pop
xor
jmp
xchg
mov
lods
add
mov
cmp
popf
fnstenv
scas
add
inc
int3
adc
mov
jmp
leave
ficoml
fistpll
sbb
and
cmp
test
or
femms
mov
inc
mov
pop
jmp
pop
lret
cltd
jmp
push
push
pusha
popa
std
mov
xor
shlb
insl
jb
and
rorl
xor
sub
daa
fs
loope
jmp
xchg
jg
lahf
dec
xchg
cmp
and
stos
pop
imul
push
mov
out
cmp
dec
frstor
inc
imul
lds
ret
and
movsl
inc
xor
fs
push
jmp
inc
inc
jo
sti
loopne
xor
mov
adc
add
cmp
pop
flds
rcrb
out
popf
mov
in
or
cmp
test
xlat
sbb
pop
mov
repnz
and
bound
jnp
adc
aam
ds
mov
mov
dec
addr16
jbe
insl
lcall
xor
and
push
cmp
xchg
repnz
push
pop
inc
push
pmaxub
xchg
mov
and
in
add
dec
or
adc
mov
rcr
sub
bound
outsb
jno
cld
dec
add
or
outsb
subl
idivl
sub
bound
dec
lock
pop
push
adc
xchg
loope
mov
adc
in
icebp
dec
jge
cmp
mov
pop
jae
ret
lcall
sub
mov
fildl
add
data16
clc
ja
mov
jmp
push
sti
fnstenv
outsb
xchg
movsl
leave
cmp
inc
mov
sbb
ret
sbb
hlt
mov
mov
cmp
mov
sbb
mov
xlat
pop
arpl
mov
stc
call
xlat
sub
stc
ja
inc
popa
push
add
outsl
jecxz
and
aad
lahf
push
mov
jl
sbb
pop
lock
cmp
data16
les
faddp
out
push
ret
sbb
cmp
adcb
xor
popa
loope
int3
push
xchg
loop
and
add
scas
xor
cmpsl
in
sub
ljmp
inc
xor
in
xor
jbe
insb
sti
inc
pop
test
test
scas
jecxz
loope
rcll
add
xor
jecxz
add
stc
or
inc
js
add
out
dec
hlt
fxtract
cmp
jno
stc
imul
sbbl
lret
adc
mov
jb
add
push
sti
nop
das
sub
jb
imul
mov
lcall
mov
add
cmp
cmp
inc
dec
dec
cld
repz
mov
or
in
shr
fidivl
in
mov
push
adcl
add
or
pop
popf
add
inc
or
inc
or
inc
dec
and
mov
fwait
xor
adc
fstpl
push
in
testb
ret
loop
push
sahf
xor
mov
dec
nop
inc
inc
mov
nop
inc
shll
pop
dec
lods
jnp
inc
pushf
fcmovnu
jnp
or
inc
sbb
outsb
mov
roll
adc
les
jo
pop
push
jno
push
jmp
sti
or
jp
mov
dec
xchg
mov
ss
inc
xchg
aas
loopne
cmp
test
and
push
scas
repnz
sti
in
into
cmp
je
pop
xor
outsl
call
ds
fwait
add
pushf
mov
clc
sti
xchg
jp
shrl
add
sub
or
gs
push
das
loope,pt
sub
dec
das
adc
nop
lds
outsb
pop
sbb
test
test
aas
aad
lock
ss
iret
add
cmpsl
or
scas
inc
in
adc
or
sarb
xchg
adc
push
or
or
cltd
mov
push
push
xchg
sub
pop
sub
sub
lds
jb
dec
hlt
lret
xor
popf
hlt
sub
aas
xor
test
stos
mov
mov
movsl
movsb
add
test
cmp
mov
cmp
push
inc
imul
popf
pop
sbb
leave
adc
and
fiadds
lret
test
dec
adc
bound
popf
repz
test
dec
popa
add
insl
aad
pushf
and
dec
sti
or
jbe
push
dec
xlat
pop
pop
jnp
movb
iret
loope
mov
out
jp
test
xchg
fs
push
out
cmp
jns
shll
inc
and
fs
sbb
xchg
nop
mov
fstl
xorl
test
sti
pop
and
sbb
push
inc
subl
aad
add
mov
mov
in
or
mov
mov
popa
xchg
out
mov
leavew
add
cmpsl
outsl
adc
insl
scas
mov
inc
lds
cmp
call
cmp
mov
pop
fmull
push
adc
or
mov
rcrl
cmp
mov
xchg
test
jle
ds
xchg
repnz
lds
mov
adc
rcrl
mov
inc
fmuls
mov
jecxz
xchg
fadds
xchg
mov
mov
jmp
jg
les
push
inc
leave
pop
sub
adc
movsb
or
or
inc
mov
xor
and
mov
mov
sti
addr16
sub
shrl
mov
pop
jecxz
icebp
sub
mov
inc
mov
pop
jb
clc
test
or
ret
repz
and
subl
jl
and
xor
shll
pusha
stos
jmp
out
test
andl
lock
sarl
mov
ret
repz
fmuls
dec
cmp
scas
call
or
sub
push
insb
inc
xor
mov
lcall
mov
ja
cwtl
test
cmp
inc
negw
push
leave
push
jb
jno
pop
mov
fdivrl
out
mov
aam
adc
cmp
arpl
loopne
fs
lahf
push
push
xchg
sahf
adc
and
movsb
jmp
aaa
loope
in
push
jne
dec
out
adc
rorb
outsb
jecxz
dec
pop
insl
jnp
cmpsl
xchg
sub
xor
lock
or
fdiv
push
or
jb
lods
mov
fiadds
jbe
cmp
popf
repz
mov
mov
push
shrl
cs
jo
icebp
add
add
cmpsl
pushl
stos
lcall
ret
mov
je
popa
pop
bound
out
mov
rcll
xchg
jns
divb
jne
xor
jo
add
xchg
mov
fisubl
mov
mov
mov
and
and
imul
pop
push
mov
sub
add
add
mov
push
jmp
mov
stos
add
insb
jo
les
outsb
mov
inc
or
mov
cmc
cmp
jp
fldl
mov
jne
stos
test
sbb
subb
popl
in
xor
push
jecxz
adc
add
xchg
jmp
divb
sahf
jbe
dec
lock
daa
dec
jmp
scas
inc
mov
test
mov
sbb
and
mov
aaa
cmp
test
mov
loope
push
push
cmp
jmp
jle
and
or
jae
stos
test
scas
xchg
ret
test
mov
sbb
test
mov
add
aas
cli
lret
in
test
mov
stos
jbe
push
je
mov
loope
cmp
mov
aam
ljmp
push
add
or
adc
mov
addr16
out
cmp
pop
xchg
sub
fadd
loopne
pop
mov
shl
repz
sarb
mov
loopne
lea
pushf
clc
lods
jne
fbld
cltd
cmovle
mov
shll
add
pop
insl
sbb
or
mov
imul
mov
mov
xor
dec
xchg
negb
repnz
pop
mov
xchg
dec
repnz
loope
push
sub
inc
sub
decl
stos
mov
cltd
and
push
xchg
adc
jbe
jbe
in
hlt
je
popf
hlt
and
or
and
lods
or
je
and
loopne
mov
imul
sub
mov
lahf
pop
cld
inc
loopne
fsubrs
ja
mov
sbb
js
xchg
or
iret
xor
mov
push
add
jno
rcrl
inc
push
fcmove
iret
in
rol
inc
fldln2
test
movsb
or
js
sub
scas
xchg
ss
out
repnz
mov
aad
rol
jp
cmpsl
push
cmpsb
cmp
push
sub
inc
movb
push
subl
mov
push
mov
clc
iret
mov
mov
mov
test
adc
outsb
sbb
ret
shlb
ret
sbb
inc
pop
lahf
and
repz
cltd
std
in
dec
cmc
mov
push
sub
cmp
imul
les
fdivs
sbb
stc
or
shl
sub
div
dec
inc
push
jmp
outsb
outsb
aad
clc
jg
andb
movsb
lods
insl
int3
lock
out
dec
push
shr
js
outsl
int3
mov
adc
jmp
dec
loopne
js
mov
jae
icebp
and
cmpsb
in
xchg
dec
loopne
scas
xchg
in
fsubp
addr16
int
pop
jbe
cmp
inc
outsb
pop
outsb
add
std
out
in
pop
mov
or
mov
scas
xchg
mov
decl
lods
xchg
adcl
and
sahf
or
or
out
subb
sbb
mov
push
iret
push
or
mulb
xchg
sbb
inc
sub
jae
bt
mov
loop
cmc
push
sbb
cmp
outsb
xchg
ret
loopne
cmc
movsl
outsb
or
jl
stc
mov
mov
jne
xchg
into
xchg
call
loope
cmp
xchg
test
repnz
push
or
sub
ss
shl
test
loop
mov
sahf
fildl
loopne
int
lcall
in
pusha
jg
fidivl
lods
ja
scas
insb
inc
xchg
repz
pop
fstps
cs
sub
inc
push
stc
adc
sub
mov
sahf
popf
lret
add
jno
cmp
jns
lcall
insl
dec
inc
add
mov
xchg
int
dec
adc
das
addr16
or
lods
popa
mov
pop
jecxz
pop
pop
inc
aas
stos
and
pop
cmc
in
or
aaa
ds
cmpsb
cmp
cmp
imul
pop
notb
xchg
out
push
lods
pop
xor
scas
data16
dec
insb
loopne
mov
dec
mov
push
mov
lds
push
lods
push
outsl
popl
ret
ror
ret
mov
mov
mov
call
loope
movsl
cmp
cmp
pop
push
test
sbb
in
xchg
sti
add
sub
mov
pop
sub
pop
repz
push
push
xchg
jmp
fnstsw
push
and
dec
jne
inc
daa
or
cld
outsl
add
shr
dec
into
shr
das
mov
cltd
ss
mov
add
cltd
add
and
mov
jmp
or
mov
adc
stos
push
mov
out
fnstenv
or
add
sub
jge
dec
scas
cmc
test
test
sub
mov
add
sub
leave
pusha
loope
pusha
testl
xor
add
sbb
push
scas
aaa
lret
sbbl
mov
mov
scas
push
jbe
and
adcl
or
adc
rorl
jmp
pop
out
mov
fdivl
mov
jmp
push
scas
inc
test
in
fmul
movsb
jle
mov
mov
outsl
fsubrl
cmp
sub
rcll
push
js
sub
incb
sbb
fucomip
js
xor
movsl
dec
sub
into
mov
mov
scas
pop
sub
jle
or
xor
push
jmp
mov
shlb
add
adc
xchg
insb
lods
mov
mov
sub
pop
adc
cld
pop
push
iret
loop
imul
lret
pop
rclb
mov
mov
loopne
or
fsubrl
stos
jbe
psubb
lahf
push
adc
inc
jg
test
std
inc
cld
ljmp
cli
adc
cld
outsl
mov
push
ljmp
jno
cwtl
inc
stc
jno
nop
cmpsb
mov
adc
sbb
data16
adc
test
aas
xor
jnp
rorb
add
pusha
ret
popa
imul
lret
inc
fmul
pop
fidivl
popf
fmull
inc
out
sbb
pushf
jge
mov
xchg
pushf
lea
in
out
mov
fistpll
in
cmpsl
in
add
es
js
pop
ficomps
das
ljmp
xor
push
add
sahf
xor
ljmp
out
js
pmaxsw
adc
adcb
xchg
loope
or
xchg
add
mov
cmp
imul
mov
fwait
xchg
sahf
adc
mov
fcmovnb
push
jne
shl
xchg
fidivs
not
lods
fisubrl
test
and
les
aam
in
cltd
or
pop
cmp
loopne
mov
fsts
inc
cmpsl
jae
inc
mov
ret
outsb
lods
and
fiadds
addr16
push
mov
fs
adc
mov
pop
push
mov
push
jge
hlt
lods
fcomi
sub
dec
cmpsl
jns
sahf
xchg
insl
adc
adcl
mov
push
jmp
push
jbe
mov
std
call
cmpsb
inc
test
lahf
fs
or
xor
xchg
add
es
sub
sti
adc
ds
fisubrs
pop
sub
cmpsw
insl
sub
dec
mov
cmp
xor
push
or
sbb
mov
test
mov
fldl
cmc
gs
arpl
mov
xchg
xorl
pop
mov
sbb
arpl
jb
out
jle
xchg
int3
adc
ret
lock
xor
jne
xchg
stos
insl
es
scas
mov
cmp
aad
in
mov
cmpsb
hlt
inc
mov
dec
mov
inc
test
bound
in
add
inc
pop
mov
jo
ss
xor
inc
adcb
cltd
repnz
or
inc
scas
mov
and
push
scas
dec
mov
jge
xchg
rclb
stc
mov
je
popf
movsl
js
jg
xlat
outsl
negb
cli
rorb
add
test
in
test
fs
mov
jne
cmp
push
inc
xor
jmp
or
popa
jl
or
cmp
add
mov
lds
cmp
mov
and
dec
in
imul
or
sub
insl
xchg
sub
jle
inc
cwtl
hlt
jecxz
out
cwtl
stos
adc
daa
mov
ss
aas
imul
xchg
mov
fcmovb
fildl
dec
add
push
movsl
mov
insb
stos
jmp
mov
cmp
aaa
adc
bound
xor
mov
aad
aad
jno
or
ss
inc
and
xor
jp
push
adc
xor
lcall
or
and
out
or
sub
das
jle
into
nop
inc
xchg
jbe
les
mov
js
rorl
cmp
or
mov
xor
aaa
sbb
xor
inc
idiv
bound
lcall
and
cmp
loop
sbb
ret
pop
or
xor
ret
sub
inc
shll
js
scas
dec
fdivl
cltd
or
aam
pushl
stos
inc
sbb
insl
add
adc
jp
test
in
push
outsb
cwtl
lret
inc
popa
test
stc
push
ret
je
test
bnd
test
sbb
adc
cmpsl
pop
pop
lods
add
cmp
dec
fwait
fwait
cmp
ds
sahf
pop
inc
inc
jge
popa
lds
mov
movsb
jg
push
inc
scas
mov
pop
lea
jecxz
xchg
and
dec
xchg
je
sub
adc
in
or
outsb
in
xlat
adc
jmp
ret
cmpsb
std
cmp
outsl
xor
mov
movsb
out
pop
jnp
lret
add
xchg
testl
adc
and
lds
inc
add
std
jmp
andl
out
cmp
call
js
rcl
nop
inc
inc
mov
xor
icebp
test
pop
mov
pop
adc
push
mov
dec
dec
jecxz
std
dec
movsb
les
popf
out
mov
sub
add
mov
pop
inc
dec
mov
xor
jge
iret
cmp
stos
mov
sahf
push
cmp
stc
lea
xor
dec
xchg
or
loopne
enter
rcrl
out
in
add
lahf
mov
adc
dec
out
mov
dec
adc
cld
movsb
rorb
mov
pusha
in
and
pop
xchg
dec
or
pop
pop
scas
push
cmp
imul
sbb
jo
mov
lret
fwait
dec
bound
lcall
in
add
arpl
sbb
dec
and
jb
imul
dec
imul
inc
inc
orb
out
push
in
and
xchg
cmp
js
fldcw
pusha
add
pop
inc
jle
xchg
push
push
imul
pop
add
loope
clc
dec
xor
insb
sub
out
fdivl
lret
bound
jae
pop
fisttps
lret
inc
push
push
insl
dec
pop
cwtl
aas
xchg
mov
test
incl
stos
movsl
dec
sbb
rcrl
into
enter
pop
xor
test
sarl
push
incl
jno
xchg
ljmp
xchg
sbb
das
fwait
or
and
js
and
and
scas
testl
sub
das
aad
push
jmp
push
lea
mov
scas
fcmovne
mov
movsl
dec
pop
loopne
jp
mov
enter
xor
xchg
lret
and
test
cwtl
mov
pop
mov
sub
xor
push
add
fdivrp
mov
mov
insb
xor
pop
mov
lods
add
arpl
cli
mov
testb
mov
insl
cltd
out
dec
mov
mov
fcomip
mov
fwait
cli
out
dec
sub
mov
mov
aam
repz
testl
push
jno
les
push
jb
inc
xor
add
aaa
nop
xchg
loope
inc
sbb
sarl
mov
pop
push
inc
lea
jecxz
add
push
xor
mov
mov
decl
popf
add
fsincos
push
test
std
rcl
rorl
fwait
lea
mov
or
xor
in
fs
dec
jo
call
in
xchg
cs
nop
sub
nop
mov
jge
jae
jg
jae
shl
repnz
negb
add
bound
pop
iret
push
daa
xchg
xor
pop
add
icebp
clc
xchg
dec
test
cmp
mov
cmp
pop
aad
addl
sub
cmp
jae
popfw
sbb
push
inc
adc
pop
fmuls
inc
fidivrs
inc
and
test
pop
jb
xor
shl
out
and
and
js
or
cmp
push
ja
mov
mov
push
dec
push
or
dec
cmp
loope
into
movsl
push
movntq
inc
je
mov
repz
sub
sbb
pusha
dec
xor
jae
lahf
int3
and
jnp
cmpsl
das
cmp
das
add
mov
add
stos
adc
stos
push
lret
arpl
fdivrl
jecxz
push
out
push
sub
mov
sub
push
xor
shlb
mov
pop
mov
subl
insl
repz
pop
inc
fnstsw
arpl
test
mov
xor
imul
je
xchg
push
inc
fwait
inc
adc
fstpt
pop
aas
test
mov
mov
out
out
and
sbb
add
cmp
lea
sahf
test
dec
jl
push
ret
push
out
xor
push
xor
jecxz
scas
or
test
dec
push
sahf
js
lea
mov
test
xchg
sub
adc
daa
adc
arpl
sbb
mov
adc
inc
movsl
test
inc
adc
sarl
popf
sti
pop
mov
ret
imul
add
bound
sarl
add
arpl
in
or
push
ljmp
jle
stos
pop
and
int3
or
add
lods
xor
loopne
addr16
xchg
sub
mov
and
stos
test
lods
jmp
repz
add
arpl
xchg
adc
popf
stc
daa
shl
cmp
mov
dec
fisttpll
adc
xchg
sbb
cmpsb
pop
loop
push
imul
js
rcl
cs
lods
popa
cmc
lods
insb
or
imul
loop
and
popf
jmp
aaa
ljmp
inc
out
shlb
xlat
pop
xchg
jecxz
xchg
lcall
lock
jp
push
and
ja
mov
add
test
xchg
mov
sub
sbb
movsl
cmp
daa
xchg
aaa
push
repnz
mov
pop
xor
frstor
sub
push
roll
testl
fcomps
dec
pop
inc
jg
daa
imul
leave
stc
push
xor
inc
lret
std
mov
ficomps
mov
push
sub
repnz
or
lea
aad
cld
push
mov
popa
cmp
sbb
push
pop
jno
shlb
daa
call
pop
fistps
int3
jg
jne
int
sub
and
lods
repnz
or
sbb
and
push
divl
push
cltd
xchg
vmovsldup
fwait
cltd
std
decb
jo
test
int
pop
fcoms
adc
and
sub
insl
repnz
dec
cmc
mov
je
xchg
fcoml
add
mov
movsl
jl
in
movsb
fisubs
cld
rclb
sbb
fwait
mov
pop
add
hlt
adc
imul
cmc
lock
pop
cmpsl
jne
jno
or
stos
in
sub
pop
mov
stos
xchg
and
push
je
inc
push
fdivr
push
mov
mov
mov
adc
lret
xlat
pop
imul
sbbl
sbb
adc
cmpsb
std
ret
adc
cmpsl
sti
fwait
or
andb
adc
ljmp
out
xchg
subb
hlt
push
mov
mov
or
xchg
or
jmp
mov
push
mov
cmp
mov
scas
sub
fwait
xor
lods
rcrl
lret
les
jnp
push
ficomps
xchg
mov
dec
pop
pop
rcrl
jmp
mov
repnz
add
outsb
xchg
in
push
mov
mov
xchg
push
and
and
push
jb
enter
cmp
add
cmp
sbb
cwtl
movsl
dec
dec
ja
shll
xor
cmp
dec
push
imul
cmp
jns
add
adc
mov
dec
mov
jns
mov
subb
fdivl
insl
inc
xchg
lods
cld
add
adc
jne
pop
bswap
push
sub
in
add
repz
dec
mov
push
aas
dec
pop
xor
lea
and
xor
push
gs
or
aas
jbe
push
insl
xlat
mov
mov
sarl
enter
push
push
sbb
gs
mov
js
cli
jae
imul
xchg
loope
xchg
addr16
add
inc
mov
loope
loopne
xlat
fnstcw
push
addb
jp
adc
adc
sbb
mov
mull
dec
jp
dec
push
pop
mov
stos
fildll
xchg
or
lock
jo
lea
sub
shrl
xor
xchg
add
fmull
add
stos
xor
arpl
push
lcall
and
pop
xchg
gs
lcall
jnp
jnp
sti
lods
pop
inc
lods
and
jno
adcl
dec
in
shl
sub
sub
arpl
in
enter
outsl
daa
xor
and
in
arpl
sub
leave
mov
xchg
sub
mov
gs
inc
cmp
lcall
aaa
sbb
seto
cli
mov
imul
cmp
push
push
daa
inc
stos
jmp
stc
int
lods
dec
out
lods
lret
jae
fdivrl
jge
int3
fisubrs
and
pusha
push
add
fadd
pop
fwait
inc
pusha
ljmp
data16
mov
test
das
test
std
iret
popa
cmp
xor
inc
int3
cmp
push
jo
xor
xor
add
sahf
call
test
push
stos
xchg
adc
enter
shrb
outsl
pop
adc
inc
xor
shll
xchg
fadd
push
mov
or
js
sub
movsl
mov
dec
loop
aam
mull
les
in
pop
sub
cld
mov
repz
cmp
sbbb
or
mov
add
mov
and
add
pop
shr
decl
stos
testb
punpcklbw
notb
les
jmp
cmpsb
mov
lods
imul
movsl
fmulp
cmp
cltd
sub
mov
incb
dec
sub
fs
popa
xchg
sbb
pop
push
arpl
xchg
sbb
lret
mov
jmp
mov
mov
sub
dec
push
dec
xchg
xor
repz
scas
inc
or
mov
test
mov
inc
mov
xor
pop
aaa
loop
mov
arpl
push
ljmp
cld
ret
mov
sub
test
jnp
jbe
mov
lock
add
jge
ds
sti
mov
mov
mov
push
inc
stos
jne
mov
sbb
rol
jg
mov
dec
aas
xchg
mov
add
aad
jle
cmp
jmp
jmp
jp
bound
push
cwtl
fsubl
and
cld
push
sbb
mov
fldl
out
mov
ret
pop
mov
loope
push
xor
pop
mov
sahf
xor
xor
loopne,pt
insl
prefetch
or
das
xchg
cmp
dec
add
cmc
fdivl
leave
das
dec
into
cld
push
iret
cmp
movsl
repnz
mov
push
out
lahf
ds
mov
nop
int
push
sbb
mov
in
repnz
out
xor
testl
js
jp
adc
adc
jp
fsubr
adc
daa
push
cmp
or
pop
outsl
js
push
push
sub
repz
into
push
pop
fildl
pop
imul
mov
imul
bndstx
leave
xlat
jmp
bound
dec
cmpsb
lea
inc
enter
sbb
mov
cltd
jle
les
mov
out
cld
push
adc
cmp
aas
or
pushf
add
mov
daa
daa
mov
out
xor
mov
sbb
shll
out
cmpsb
push
insl
roll
dec
cmpsb
pop
mov
adc
mov
lea
stc
insb
jp
stos
in
stos
in
outsl
inc
lcall
jmp
je
mov
rcrb
jecxz
xchg
stc
imul
addr16
lret
cmp
insl
inc
bound
fcompl
mov
adc
in
or
filds
mov
or
mov
or
jae
dec
jmp
imul
sbb
jo
or
rcr
bnd
push
clc
jb
sub
icebp
xchg
sarb
jnp
sbb
dec
fadds
loopne
mov
adc
mov
popa
sbbl
fnstcw
cmpsb
hlt
cltd
aam
jb
mov
fisttpll
inc
adc
inc
cmpsl
test
fiaddl
xor
or
mov
out
xchg
push
pop
and
sub
push
cmc
aas
lds
push
aam
fdiv
mov
jo
or
xchg
xor
sbb
push
mov
pop
jne
adc
xlat
inc
mov
dec
cwtl
call
or
mov
push
inc
out
bound
ljmp
jmp
out
sbb
adc
outsb
cmp
jbe
adc
frstor
pop
pop
hlt
mov
rcrl
and
sbb
sub
in
cmp
push
sub
mov
dec
movsl
outsl
aaa
push
adc
lock
sbb
lret
sti
imul
jae
push
aas
addb
or
jmp
push
push
or
jp
lea
icebp
insb
les
aad
jmp
mov
xchg
sbb
ret
sub
ss
or
testl
inc
std
loopne
cmp
cltd
push
fs
mov
into
sarb
xor
mov
push
or
lret
ds
out
mov
movsb
dec
xchg
dec
call
aaa
dec
dec
sub
push
mov
jne
pop
cmp
jb
adc
adc
icebp
and
mov
adc
pop
pop
xchg
and
jnp
xor
movsl
dec
jp
push
sub
loopne
mov
popf
sub
jae
adcl
xchg
mov
cmp
sbb
pop
jge
add
stos
jne
add
add
fcoml
movsl
add
in
sub
fdivl
inc
mov
jnp
mov
pop
scas
test
jne
dec
push
clc
or
rorb
mov
int
jne
mov
and
sarl
shl
inc
pop
cmp
mov
fs
mov
lods
das
or
rcr
lock
mov
push
inc
inc
addr16
test
push
inc
or
cmp
xor
push
and
mov
in
dec
pop
scas
cmp
es
stos
movsl
push
shll
push
push
insl
cltd
mov
push
daa
and
dec
daa
sub
gs
push
or
orb
out
pop
sub
fdivs
enter
cli
enter
das
sbb
vcvtpd2psx
xchg
pop
sbb
mov
jns
xchg
adc
lcall
jge
ds
sahf
xchg
add
push
xchg
scas
adc
notl
out
adc
push
in
pop
out
outsb
or
or
or
pop
add
sub
call
xor
mov
jo
and
adc
push
mov
pop
sub
iret
lahf
dec
ds
push
ja
call
inc
nop
mov
fs
add
ja
das
xchg
cmpb
jl
data16
adc
mov
lret
std
mov
pop
jno
jb
imul
or
inc
adc
jbe
test
adc
cld
adc
aas
repnz
dec
cs
xor
das
mov
mov
add
in
mov
mulb
pop
push
push
fcmovnbe
out
sbb
mov
sub
adc
inc
mov
xor
bound
faddl
daa
iret
lock
dec
sub
stc
pop
notl
mov
add
pop
call
je
imul
int
push
sbb
pop
hlt
pop
xchg
push
inc
mov
mov
sbb
mov
xchg
out
add
or
loope
xlat
mov
popa
push
xor
fiadds
sub
js
cmp
clc
dec
testl
daa
das
add
sbb
jle
loopne
cld
sbb
pop
mov
pop
pop
dec
cmp
pop
ret
mov
pop
inc
mov
ljmp
mov
sub
cmpsb
in
xor
jle
out
push
ss
test
test
mov
arpl
xchg
popa
jl
into
xlat
cld
mov
out
push
sbb
push
cld
pop
filds
popf
sbb
int
xchg
xorb
mov
or
xchg
xchg
ja
jb
mov
cmp
aad
sbb
movsl
ret
mov
cmpsb
cmp
sbb
int3
ds
push
inc
loopne
push
in
fdiv
cmc
mov
js
and
fwait
xor
repz
int3
out
or
daa
lea
dec
push
daa
clc
jae
mov
test
arpl
sub
out
ret
mov
xor
subl
pop
xor
ror
clc
jnp
std
ds
das
xchg
add
out
sub
roll
cmc
push
pop
fwait
add
testb
xor
sbb
push
mov
std
inc
fstpl
xor
scas
lcall
sub
pop
imul
cmp
movsb
pop
lahf
shr
fnstenv
mov
insb
mov
scas
mov
mov
pop
movsb
adc
xor
jae
xchg
int
inc
inc
mov
imul
sbb
sub
ret
in
mov
int
fnstcw
popf
jo
cmp
fcomi
insb
hlt
std
inc
mov
xchg
jge
insb
dec
shr
sbb
and
pop
xor
aaa
out
xor
lret
cmp
mov
adc
mov
adc
mov
mov
and
arpl
lock
bound
mov
dec
cli
lods
inc
imul
addr16
imul
or
sub
and
sti
jg
aam
push
and
adc
lods
mov
cltd
test
stos
adc
or
fnsave
in
jbe
push
out
aaa
push
std
jo
das
arpl
jl
das
enter
or
shrb
jg
lds
enter
or
lea
mov
inc
repnz
test
push
xchg
pop
dec
xor
divl
xchg
test
sbb
mov
jnp
jns
or
fisttpl
pop
shlb
aam
imul
stos
ret
xchg
das
cmpsl
ret
add
add
or
decl
shrb
scas
sub
xchg
lods
sub
sub
pop
sub
push
mov
pop
cmpsl
pop
dec
loopne
rol
loop
insb
adc
iret
nop
bound
into
test
adc
in
test
andl
insb
mov
out
and
cmp
pop
call
int
pop
outsb
insl
mov
xor
inc
or
mov
push
daa
lods
ja
add
pop
xor
push
scas
mov
sbb
in
cs
dec
mov
addr16
inc
es
test
dec
dec
xchg
jbe
sub
add
iret
push
dec
je
pop
data16
sbb
jp
add
mov
mov
dec
neg
clc
jae
sub
add
push
test
loope
jmp
lds
and
lds
ret
adc
clc
push
inc
shll
mov
pop
sarb
dec
fucom
divb
pop
lea
fdivp
xchg
sub
lds
movsb
push
loopne
negl
jg
sbb
fcomip
in
inc
clc
xchg
loop
fwait
lock
out
sti
pushf
out
or
test
mov
mov
leave
push
repz
in
loop,pn
add
xchg
pop
dec
jge
aad
aas
sahf
pop
jae
dec
imul
das
mov
lahf
mov
xor
xlat
sbb
insl
insl
es
and
fsubrl
out
ficompl
xchg
aaa
negl
sub
cmpsl
push
js
xchg
add
daa
push
mov
cmpsb
aas
lret
jbe
hlt
popa
stos
sbb
sub
cmp
push
out
jb
daa
cwtl
add
stc
cmpsb
or
adc
xor
jl
es
push
and
in
jo
fsts
arpl
pop
mov
arpl
fstl
push
push
and
movsl
imul
mov
cmp
daa
push
mov
adc
lret
stos
sbb
push
jmp
mov
mov
cmpsl
rcr
sbb
decl
and
xlat
sbb
cs
hlt
loopnew
insl
jle
mov
test
daa
cltd
push
jge
hlt
pop
inc
mov
pop
mov
or
pop
xchg
push
sar
and
sti
test
pop
js
testl
cmp
stc
sbb
mov
ljmp
xchg
xor
paddusw
mov
sub
xchg
pop
xchg
das
mov
mov
xchg
xchg
lret
mov
jns
cld
mov
push
pop
fstpl
iret
cmpsb
cmpsl
fstps
into
sarl
and
sbb
mov
insb
pop
sub
loopne
insl
test
dec
xor
cmc
cmp
cmp
xchg
mov
push
sub
mov
sbb
jno
sub
sbb
jmp
bndstx
mov
push
sub
jae
mov
das
subb
fwait
jne
add
xchg
and
push
movsl
adc
push
addr16
sar
cmc
xor
cmpsb
fcmovbe
mov
ret
js
enter
mov
xor
sbb
push
xchg
daa
fistps
fiaddl
in
aaa
push
lock
mov
xchg
icebp
das
imul
xlat
mov
hlt
xchg
xlat
in
cmp
xchg
or
out
insl
sbb
jge
sbb
int3
lret
pop
xchg
add
push
insl
aas
pushf
insl
sbb
adc
pop
sti
ret
fbstp
mov
es
inc
ja
dec
cs
inc
rcrl
inc
sub
inc
data16
xchg
ljmp
and
idivb
push
aas
loop
scas
mov
xchg
push
adc
ljmp
and
lcall
clc
cmp
inc
pusha
scas
xchg
add
ss
add
push
pop
cmpps
fsubrp
out
gs
es
sbb
in
mov
push
add
mov
negl
adc
rcrb
xor
push
fcoms
jp
push
sub
pop
inc
ljmp
lahf
mov
fsubl
cmp
push
lcall
cwtl
pop
addr16
mov
aam
jmp
inc
jbe
jnp
ss
jo
les
push
adcl
insb
sbb
push
mov
jl
addl
repz
je
shll
pusha
call
aaa
push
stos
xchg
cs
icebp
cltd
aaa
add
mov
add
mov
arpl
mov
mov
imulb
inc
adc
jno
xor
sub
mov
xchg
pop
xchg
pop
cmp
stos
idivb
cwtl
aaa
sub
dec
pop
pop
sbb
jle
mov
fnsave
and
outsb
ljmp
inc
mov
fsubrs
je
ret
lret
xchg
idivl
incb
vpunpcklbw
nop
jbe
aad
mov
decl
pop
sub
je
mov
mov
lods
cmpsl
adc
loope
int
into
loopne
push
push
jecxz
fistpl
std
xlat
jae
dec
mov
fwait
lock
inc
test
xchg
in
int3
insb
mov
out
fadds
sub
lods
jo
pop
mov
sti
pushf
mov
sahf
jno
sbb
clc
iret
scas
fdivp
sbb
inc
int3
mov
dec
cmc
in
mov
fdivp
sbb
and
add
stos
jbe
fnstsw
jbe
mov
ljmp
xor
cmpsb
add
pushf
jmp
xchg
pop
dec
rclb
cmp
dec
out
stc
pop
push
jl
or
arpl
push
ficoml
dec
mov
out
mov
nop
mov
shll
negb
aas
jge
xchg
push
lcall
mov
nop
test
lods
loope
lock
xchg
lock
jnp
dec
xor
lahf
push
push
cmp
fucomp
push
sub
adc
push
je
pop
ret
sbb
xor
hlt
push
xchg
add
stos
dec
dec
xchg
mov
push
dec
lods
cltd
mov
mov
mov
insl
mov
push
inc
and
int3
movsl
test
ljmp
gs
mov
add
int
or
xor
push
popf
add
daa
fs
add
mov
and
test
sub
adc
push
add
xor
mov
mov
mov
cmp
xlat
cmc
adc
jne
cmp
lcall
into
mov
and
roll
lcall
popa
fdivl
pop
adc
dec
push
xlat
movsb
and
push
push
cmpsb
fidivrs
dec
loope
jo
xchg
sub
sti
fdivs
xchg
das
insl
or
jmp
fcomp
scas
add
xchg
mov
stos
lock
push
aad
insb
inc
mov
sub
push
cltd
mov
adc
addr16
mov
loopne
imul
ds
mov
mov
shl
mov
mov
adc
enter
or
sbb
jo
cmc
sub
mov
xchg
rcrl
jle
movsb
push
addb
mov
inc
loop
es
stc
xor
mov
push
cltd
mull
add
xor
mov
ficoms
lcall
jle
push
hlt
push
and
cmp
push
add
scas
ret
stc
imull
aad
lahf
addl
iret
mov
arpl
push
sbb
mov
out
xorb
xor
sarb
inc
aaa
dec
or
cs
push
jp,pt
pop
shr
cmp
pop
xor
cli
cld
int
enter
stos
fstl
sub
test
push
jg
sbb
mov
cwtl
dec
fwait
inc
popa
cmp
test
in
or
or
inc
out
sub
jge
test
scas
hlt
mov
es
mov
inc
mul
mov
dec
cs
outsl
mov
dec
cmp
cmc
daa
push
in
test
into
andl
inc
int
aaa
dec
xor
decl
push
mov
inc
push
pop
cmpsb
cmpsl
pop
mov
mov
pop
cltd
iret
xor
dec
loope
xor
cmpsb
lock
clc
xchg
pop
inc
sub
jle
xor
adc
out
xor
mov
push
scas
incl
pop
fisubrs
pop
ret
fldcw
hlt
add
lods
inc
push
lret
add
lret
mov
jmp
imul
mov
cmpb
cmp
movsb
repnz
dec
int3
push
repnz
fs
xchg
or
leave
sti
movsb
xchg
and
out
test
sub
lret
lret
outsl
xor
scas
mov
mov
hlt
cltd
push
jmp
adc
jno
in
cmp
mov
push
xor
cmc
mov
pop
je
lods
mov
sbb
and
mov
xchg
xor
xchg
pop
fiadds
nop
out
aad
aas
sbb
sbb
or
addr16
mov
test
fsubr
fiaddl
lahf
out
xor
scas
rcrl
sbb
jp
jmp
mov
add
cs
mov
mov
into
outsb
stc
push
mov
push
mov
je
js
xchg
jbe
mov
mov
push
enter
fadds
in
pop
fcomps
call
cmp
cmpsb
out
sub
mov
adc
or
mov
push
cld
cmc
pop
fstpt
dec
mov
adc
cmp
sbb
fadd
or
mov
cmp
or
mov
lock
sub
aam
cwtl
bnd
sbb
imulb
daa
lea
or
movsl
mov
jo
sbb
sub
fbld
mov
es
mov
xchg
mov
repz
add
push
nopl
jp
pop
mov
xchg
sahf
add
push
lods
aam
aam
sbb
dec
mov
repz
int
lret
pop
xor
mov
cmp
or
js
shlb
ficoml
sbb
xchg
rcrb
jno
jle
bound
dec
dec
jmp
aaa
decb
sti
fwait
inc
cltd
popf
or
out
jmp
inc
jp
icebp
inc
and
mov
jno
push
loope
ret
scas
addl
shrb
jmp
ret
mov
scas
jne
jle
les
pusha
sub
inc
push
and
ss
fs
out
cmpsb
out
push
subb
xchg
sbb
mov
and
jb
mov
shrl
or
leave
es
cmp
nop
mov
ret
push
in
mov
adc
push
xchg
cmp
rclb
cmp
pop
add
dec
pusha
pop
mov
or
in
sub
popf
mov
and
mov
ficompl
add
sti
add
dec
sbb
mov
stos
insb
sahf
mov
test
aaa
adc
sarb
mov
inc
into
and
mov
inc
mov
xor
and
cmp
push
clc
adc
es
aam
pop
outsl
jg
andl
xor
cmp
adc
inc
pop
pop
mov
and
fwait
nop
push
cmpsl
cmovae
sbb
imul
das
int3
out
adc
xor
lea
adcb
adc
inc
pop
mov
sbb
imul
shr
icebp
push
mov
pusha
mov
fisubrl
loopne
inc
lea
sub
in
out
rorl
lea
mov
call
mov
je
cmp
mov
out
loope
inc
mov
cmp
xchg
pop
inc
pop
mov
sarb
or
push
leave
aad
add
xor
dec
aam
mov
mov
xchg
cmpsl
cmp
nop
fwait
jo
out
xor
repz
sub
cmpsb
sub
jp
dec
loope
sbb
mov
out
out
mov
sbb
mov
test
pop
mov
aas
and
jno
stos
jmp
sti
popa
shll
dec
mov
lock
cld
pushf
fnstsw
mov
xor
sarb
pusha
scas
in
xor
aam
hlt
lds
mov
je
rorl
sub
call
loop
adcl
push
pop
lock
pop
cld
in
sahf
in
add
out
and
insl
aaa
repz
loope
sbbb
jecxz
mov
and
pop
add
out
dec
cmp
cmc
lock
loop
inc
test
cld
xchg
fwait
leave
int3
out
in
bnd
push
cmpsb
test
mov
mov
or
orb
jnp
push
nop
xor
dec
dec
mov
decb
xchg
iret
or
inc
sti
ljmp
xchg
pushf
dec
jns
jbe
add
pop
adc
gs
rorb
movsb
push
aaa
jle
fsubs
jns
push
mull
gs
adc
das
sbbl
mov
sbb
lock
sub
mov
cmp
cli
push
lock
jae
lret
mov
push
mov
pop
frstor
jae
dec
push
clc
sbb
mov
jle
sub
sub
loopne
add
jns
and
add
mov
pusha
mov
xchg
jg
gs
or
and
mov
pop
cmp
xchg
aaa
notb
pop
bound
push
pop
in
sahf
outsl
nop
or
flds
fldcw
aaa
sbb
mov
mov
xor
pop
mov
jb
sub
shlb
adc
scas
adc
push
mov
jmp
sbb
out
fimuls
pop
lcall
fiadds
sub
sti
in
repnz
arpl
sbb
inc
sahf
sbb
or
xchg
in
divb
xlat
sub
xor
pop
pusha
clc
jge
mov
packssdw
ljmp
push
or
mov
push
fisttps
test
repnz
mov
cmp
cmp
int3
insb
sbb
xor
add
add
jbe
ret
roll
sbb
adc
shll
xchg
xchg
mov
jle
or
ljmp
sub
push
xchg
mov
mov
mov
gs
daa
inc
push
or
addr16
aas
es
sahf
test
sub
in
and
test
push
jo
lret
imul
sbb
stos
vxorps
int3
fbstp
in
cli
push
jns
shrb
mov
ss
dec
and
mov
push
jmp
jmp
jb
lea
cmpsl
lods
es
dec
rcrb
add
lcall
and
push
test
in
fisttps
xchg
nop
ds
outsl
adc
sbbb
mov
in
cmp
push
insb
cmpsl
cld
mov
push
popf
and
loopne
sbb
mov
jmp
fdivp
lock
jbe
mov
std
xchg
stc
cld
pushf
lea
jp
pop
les
and
mov
xchg
mov
fcoml
je
shlb
inc
jmp
adc
jne
imul
sar
test
push
mov
or
lahf
addb
cmp
mov
out
cmp
rcl
mov
fistpll
mov
mov
movsb
popf
add
inc
jo
sub
imul
dec
popa
jne
sub
outsl
daa
rolw
aad
incl
push
sbb
testl
or
jns
aam
push
cltd
adc
out
cmc
mov
ret
arpl
lods
sahf
pop
mov
push
jmp
shrb
les
insb
tzmsk
nop
dec
lahf
lds
fdivl
cmp
xor
adc
inc
mov
jb
dec
shll
sub
mov
loop
stc
mov
das
push
ljmp
cwtl
cwtl
outsl
jl
stos
mov
loop
mulb
adc
sbb
jg
jae
shll
ret
outsb
mov
in
dec
push
sbb
leave
lcall
pop
pop
aam
mov
cmp
flds
or
fsubs
xchg
cmpsb
mov
mov
loope
mov
and
xor
lods
add
mov
testl
jae
js
sbb
xchg
adc
cs
add
xor
or
das
lds
or
adc
pop
jb
sub
aam
movb
jg
mov
cmc
sub
out
outsl
jbe
out
pop
ja
je
jb
jno
push
mov
xchg
push
xor
cmp
dec
ds
jbe
jo
jb
cmp
ret
jle
jp
sbbb
ljmp
mov
sub
pop
mov
aam
xchg
xor
xor
pushf
add
xor
lock
inc
adc
sub
sbbb
orl
fstl
cmc
bswap
cmpsl
push
push
or
dec
xchg
sti
adc
pop
loope
repz
xchg
add
mov
movsl
jge
push
fwait
mov
into
inc
mov
outsb
fwait
or
xchg
mov
fld
add
les
fldenv
dec
ret
scas
jb
sbbl
sbb
sbbl
push
aaa
and
and
clc
sub
push
popa
cmp
lret
jae
pop
xor
popl
popa
xor
imul
sub
bnd
mov
mov
pop
cmpsb
insl
cmc
roll
push
and
testb
or
cmpsl
xchg
fnstsw
sub
and
icebp
pushf
cli
cmp
aad
in
lret
push
cmpl
insl
jle
jp
inc
pop
inc
fwait
jb
lret
lods
cmp
and
gs
out
loope
cmp
mov
dec
scas
pop
pop
mov
fmul
lods
adcl
orb
xchg
subl
add
push
clc
lahf
pop
jo
jnp
and
or
out
call
or
rol
or
jns
lods
imul
test
or
dec
jnp
dec
pop
cmp
jecxz
repz
xlat
inc
pop
xchg
movsb
cmp
ds
in
je
aad
push
xchg
mov
sub
outsl
test
daa
leave
outsb
pop
out
out
std
je
add
pop
dec
jg
xor
ret
xor
mov
mov
jp
mov
or
mov
adc
lods
jne
ja
lahf
pop
imul
and
js
mov
clc
xlat
mov
or
xor
ret
xor
outsl
outsb
movsl
add
cltd
xchg
add
xchg
inc
push
cmpsl
sti
fisubrs
rcll
push
popf
mov
sahf
lahf
test
std
enter
pop
cld
jo
push
popf
adc
mov
mov
push
sti
mov
movsl
aas
scas
xlat
outsb
loopne
inc
sbb
sub
outsb
in
mov
inc
pop
inc
out
jge
aad
int
jne
mov
mov
pop
js
dec
xchg
or
enter
mov
gs
addr16
mov
sub
adc
mov
dec
js
in
sub
add
dec
fimull
cmp
sub
sub
pop
lock
mov
mov
jge
sarl
or
xchg
mov
push
jae
mov
add
rol
sub
push
lret
lret
sub
ja
mov
out
outsl
hlt
fdiv
cmp
mov
push
mov
or
movsb
addr16
dec
dec
mov
xor
les
jl
pop
mov
dec
lods
lret
jo
jl
aad
xor
outsl
cmp
pop
js
inc
call
adc
aad
inc
cmp
popf
lods
jb
rcrl
pop
jge
pop
or
js
push
lods
cwtl
inc
pop
lcall
in
sbb
jns
ret
jmp
and
push
xor
xchg
int
mov
clc
pusha
cmp
jge
leave
adc
std
lret
xlat
sub
xchg
cwtl
xchg
jne
std
ret
sub
call
sti
jge,pt
push
stos
lcall
or
add
mov
add
adc
inc
fistps
divb
dec
loope
xchg
lock
ss
aad
mov
dec
adc
mov
push
mov
cltd
es
push
adc
sbb
repz
scas
cmp
xlat
ljmp
insl
add
notb
int
lods
xchg
shrl
ja
in
loop
imul
and
gs
push
mov
push
add
and
and
mov
cs
or
rorb
inc
jno
sbb
pop
hlt
rcrb
cmp
mul
dec
mov
ret
stc
xchg
andb
cwtl
and
call
push
shrl
inc
cwtl
mov
int3
arpl
mov
outsl
add
fiaddl
xchg
pop
fwait
std
inc
xor
sub
mov
dec
call
fdivrl
outsb
xchg
aad
dec
out
mov
jae
int
pop
ror
imul
pusha
js
arpl
push
mov
daa
int
popa
xlat
lds
in
mov
pop
lock
lret
xlat
out
pushf
xchg
js
or
add
cltd
adc
mov
xor
mov
es
add
push
lret
jno
shlb
push
or
std
and
cmp
inc
std
and
sbb
sti
ret
xor
std
sub
lret
jns
jno
popf
push
fsubrl
testl
sub
sti
fwait
popf
jge
les
ret
ja
push
cmp
mov
adc
es
sub
fildll
dec
outsl
sbb
adc
enter
cli
mov
mov
sbb
mov
insl
sbb
fcoml
imul
subl
jbe
push
std
inc
push
add
adc
dec
mov
lods
push
cltd
hlt
add
mov
in
iret
in
iret
movl
mov
punpckldq
imul
adc
incl
cmp
addr16
sahf
shr
iret
sub
scas
add
mov
imul
inc
insl
andl
insl
xor
xor
cmp
insl
sub
cmp
scas
rolb
rclb
sub
enter
hlt
jl
mov
pop
mov
inc
jns
std
fidivrs
and
icebp
daa
daa
mov
cmp
xor
or
pop
ss
aaa
push
pushf
xchg
adc
mov
xor
push
add
inc
adc
ljmp
test
rorb
fs
sti
loopne
aaa
push
lahf
imul
pushf
shrb
xchg
mov
sbb
pop
mov
pop
pop
mov
adc
add
stos
sbb
sahf
mov
sub
inc
lds
dec
mov
sub
scas
fsubp
mov
push
sbb
mov
cmp
test
daa
gs
mov
pop
sbb
cmpsl
sti
xlat
jle
xchg
aas
daa
or
xchg
gs
or
ljmp
sbb
scas
mov
or
push
mov
loop
cltd
aad
insb
add
push
ljmp
cmovl
push
out
add
aad
test
out
pavgw
sbb
dec
dec
pusha
int
int
rol
mov
clc
aas
xchg
mov
push
pop
jmp
stos
inc
xchg
dec
lret
mov
negl
or
js
jmp
aaa
fsub
inc
lret
jnp
sub
xchg
mov
stc
mov
dec
adc
xchg
cld
mov
stos
in
das
push
mov
icebp
push
aas
hlt
xchg
js
cld
cltd
pop
sub
std
or
mov
adc
mov
xchg
outsb
and
test
xor
sahf
repz
and
push
push
hlt
inc
enter
int
mov
pop
fisttpll
bound
frstor
inc
sbb
fwait
cmpsl
daa
mov
jns
inc
js
jmp
jnp
mov
lcall
lea
lahf
stos
push
jecxz
adc
aad
in
outsl
int
outsb
fstpt
clc
inc
stos
inc
sbb
pop
ret
shl
lds
cwtl
sti
pushf
imul
and
cmp
int
xor
fadd
ret
cli
jb
push
popa
cli
scas
mov
es
or
jbe
mov
mov
mov
outsb
or
push
pop
hlt
xchg
test
push
ljmp
cmp
movsb
sbb
xor
cmp
push
sub
data16
leave
pusha
cmp
adc
mov
jl
mov
add
loopne
push
popf
in
add
xchg
mov
and
pop
mov
push
ljmp
popf
sub
js
jnp
out
push
stos
in
sbb
test
stc
jp
pop
popa
xchg
sbb
int3
dec
pop
out
xchg
dec
clc
stc
ret
xor
repz
push
push
into
sti
xchg
add
push
ret
xor
cmp
push
fwait
sbb
adc
mov
or
bound
jp
xchg
in
adc
push
cmp
aad
sti
mov
cmp
into
jno
mov
outsl
scas
or
push
pusha
cmp
pop
jle
jl
dec
cmpsb
xlat
inc
lret
sbb
dec
dec
int3
mov
sbbl
xor
pusha
xchg
xor
inc
push
xchg
mov
aam
sbb
push
push
les
in
pop
pop
mov
and
mov
push
int
test
das
mov
jle
ljmp
or
xlat
ror
sti
xor
es
inc
and
fstpl
adc
jnp
cmp
adc
outsl
cmp
icebp
mov
in
stc
pop
pop
jbe
daa
aam
cmp
xor
mov
dec
mov
mov
mov
xchg
int
addl
mulb
add
sbb
stos
adc
jbe
leave
push
movsl
ret
aas
sbb
cmpsl
ret
fsubrp
push
and
movsb
cmp
add
xchg
cwtl
ret
repnz
and
loopne
lods
cltd
lds
mov
fsubs
sub
xor
add
adc
and
ds
xchg
push
and
shlb
or
sub
lds
pop
pusha
mov
xchg
xor
pop
ja
mov
mov
push
rcrb
lds
push
dec
sub
xchg
shl
cmpb
das
adcb
and
cmc
sar
mov
mov
or
mov
js
pop
rol
aas
add
xchg
test
sub
imul
or
cmp
dec
and
dec
loopne
inc
pop
cld
loope
repnz
adc
push
cmpsb
xor
mov
sub
sbb
xor
nop
sub
jmp
ret
sub
xchg
pop
adc
xchg
cmp
mov
push
stc
cmp
xchg
call
mov
call
nop
pop
mov
outsb
add
gs
xrelease
mov
xor
movsb
cmpsl
push
popf
fsubr
mov
jmp
or
adc
testl
xor
inc
cmpsl
pop
xchg
sbb
test
jnp
js
cmp
leave
in
mov
ds
stos
push
popa
or
sbb
je
imul
mov
push
fbstp
shrl
mov
cltd
pop
pop
dec
cmp
dec
ret
lret
std
cltd
or
adc
outsb
sbb
stos
jmp
cmp
divl
mov
sbb
lea
jge
sbb
fnstenv
out
pop
in
xchg
cli
fwait
xchg
flds
cs
push
mov
mov
cmp
outsl
daa
push
out
bound
cmp
or
xchg
xchg
arpl
xlat
sbb
das
sub
or
lret
dec
cmpsl
jae
or
popf
bound
call
add
addb
nop
xchg
movl
ds
mov
jae
mov
sub
imul
lock
int
int3
add
mov
and
push
jbe
es
fidivrs
cltd
scas
mov
and
ss
aas
enter
jg
jle
lcall
std
aas
jge
mov
addr16
pop
call
mov
adc
cld
rcrl
data16
lds
ljmp
mov
rol
xlat
outsb
jl
addr16
sahf
sbb
cwtl
sbb
xchg
fstps
decl
popf
lods
stos
stos
cmp
js
pop
and
sbb
push
cmpsb
xor
cs
jne
mov
push
addr16
xchg
add
ret
jns
int3
test
mov
pop
ret
jae
icebp
sbb
xchg
jno
cmp
iret
and
push
notb
scas
mov
xchg
push
jb
mov
ret
je
mov
xchg
icebp
lcall
push
or
es
lret
adc
xchg
jo
dec
jg
lret
gs
fidivs
pusha
xchg
xor
scas
adc
test
sub
xchg
push
insl
xchg
into
pusha
outsb
sbb
lret
cmp
jno
inc
mov
lahf
inc
gs
cmp
hlt
pushf
scas
fidivs
mov
adc
pop
out
or
pop
cli
ds
dec
popa
dec
jecxz
push
dec
loope
cmp
fs
jmp
adc
int3
add
dec
cmp
ds
mov
push
cmp
fmulp
loop
cmp
inc
mov
jg
push
mov
mov
bound
movntps
jl
loopne
cwtl
popf
adc
mov
inc
cmpsl
adc
cmp
cmpsl
push
and
jo
call
push
fidivrl
aaa
push
int
pushl
sub
jecxz
mov
inc
xor
adc
push
fadds
fistps
imul
cmp
mov
adc
in
int
xor
pop
nop
pop
or
xchg
addb
pop
adc
and
and
sub
push
pushf
fnstcw
dec
pusha
outsb
mov
lock
arpl
pop
in
es
sub
push
cmpsb
cld
sub
inc
dec
mov
push
pop
add
in
sub
xchg
stos
leave
insl
pop
inc
adc
xor
xchg
arpl
mov
push
pmuludq
sub
dec
pop
jg
sti
or
cmpsl
mov
lcall
adc
jmp
add
cmp
push
call
mov
in
loop
sub
repz
out
rcrb
dec
test
imul
cmpl
iret
mulb
leave
mov
es
lahf
mov
add
xor
leave
es
das
inc
inc
adc
popf
stc
repnz
push
push
add
xchg
push
push
fwait
pop
pop
or
nop
push
lea
push
stos
push
es
add
jg
push
dec
cmp
stos
mov
xchg
sbb
sbb
rorl
cmp
scas
jns
and
in
ss
add
push
ljmp
lock
sbb
inc
dec
inc
fisttpll
lret
les
sbb
lcall
jmp
dec
out
inc
stc
inc
sbb
cmp
dec
lahf
divl
or
mov
das
js
add
mov
call
notl
pop
sub
loopne
push
arpl
or
jno
pop
in
leave
dec
sbb
into
imul
aas
scas
dec
jns
adc
pop
test
insb
pop
cmp
xchg
jge
imulb
jmp
add
push
push
in
mov
cmpb
jnp
lret
mov
sbb
mov
sub
les
jns
loop
push
pop
imul
cli
adc
cmp
daa
sbb
push
push
xor
add
and
xchg
cmpsl
ss
out
xor
push
xchg
call
mov
push
leave
jecxz
shl
jle
xchg
test
aam
fisubs
arpl
sbb
xor
imul
mov
adc
dec
dec
mov
dec
mov
or
test
inc
ret
out
pop
push
mull
ljmp
popf
jg
test
pop
xor
int3
addr16
fsubrl
push
jecxz
push
cmp
jb
out
pop
mov
push
dec
mov
jnp
sub
sub
aad
xchg
ret
jge
jb
mov
cld
adc
push
push
sub
fcoml
pop
push
rorl
mov
stos
xchg
mov
fildl
insb
dec
sbb
ja
idivl
mov
xchg
lahf
or
inc
scas
negl
idivl
aam
mov
subb
mov
jbe
lods
inc
in
je
jbe
out
push
inc
pop
xchg
dec
lock
aas
and
aas
leave
divb
push
mov
into
sub
push
fstpt
mov
xchg
stos
sbb
or
sub
daa
ret
add
sub
test
leave
fnsave
aaa
mov
adc
test
jl
enter
ss
loopne
aam
out
adc
xchg
mov
cmpsl
in
dec
test
xchg
push
sub
les
iret
loope
popa
add
sbb
mov
pop
inc
in
cltd
jnp
xorb
and
ds
add
stos
repz
call
mov
xor
jmp
test
pop
jge
sbb
lods
cmpsl
mov
into
add
aad
fisttpl
cli
mov
pop
mov
pop
popa
xor
push
shr
aas
inc
stos
jo
pop
jae
inc
jg
jns
mov
cwtl
ss
cld
mov
lcall
jno
push
push
addr16
jg
in
mov
push
out
outsb
push
pusha
mov
nop
jne
adc
mov
push
rorl
cmpl
xlat
or
cmpsb
rol
or
xchg
mov
cltd
dec
mov
ret
lods
add
inc
lret
jbe
and
xchg
adc
jne
icebp
push
ss
movb
int
das
aam
inc
and
mov
xchg
call
add
jg
repz
call
pop
les
out
inc
fs
dec
pop
sub
jmp
lea
jne
sbb
sbb
dec
jmp
test
pop
cs
push
sbb
cmp
cmpsl
ret
insb
add
repnz
lods
clc
iret
pop
imul
and
stc
outsl
repnz
push
decl
lods
fstpt
subl
mov
les
add
jo
mov
hlt
in
call
mov
out
mov
cmp
adc
dec
fsubrl
mov
add
mov
jae
pop
movsl
add
xor
sahf
scas
and
in
inc
lcall
fcoml
push
pop
sub
pop
hlt
mov
fidivrl
or
std
sahf
add
lcall
lahf
popa
add
daa
push
in
imul
lahf
cmc
cmp
int3
es
fisubrl
sbb
xchg
lahf
lea
dec
xchg
cmpb
jmp
inc
dec
mov
cmpb
xor
xor
and
insb
inc
cmpsl
sub
add
orl
fidivrl
out
dec
sbb
inc
sub
mov
mov
dec
pop
dec
je
dec
ret
hlt
insl
mov
lahf
gs
js
mov
call
lcall
and
rcl
addr16
sbb
add
lahf
sub
stos
pop
daa
mov
stc
and
or
cli
cmc
mov
shr
xorb
jo
sbb
aaa
dec
lcall
pushf
gs
mov
aam
xchg
push
mov
jo
daa
idiv
imul
xchg
ljmp
fidivrl
outsl
mov
xchg
cmp
in
cmc
dec
sub
out
ret
iret
push
mov
pop
loope
in
mov
jne
mov
fsubl
mov
hlt
movsb
jae
cld
daa
ret
jae
jg
ja
sbb
push
aas
icebp
mov
inc
push
or
xchg
int
in
es
mov
imul
jb
loope
mov
stos
mov
sbb
fs
lods
stos
enter
pop
test
sub
adc
testl
cmp
ret
adc
dec
pop
sbb
shrl
mov
xor
mov
int3
lret
sti
jns
push
movsl
mov
loop
into
xor
in
stc
mov
jp
xchg
pop
je
mov
orl
push
pushf
and
test
xor
cmpsb
mov
inc
ja
hlt
or
cld
jle
stc
inc
and
inc
push
lahf
dec
xchg
mov
shlb
cmc
arpl
ret
repz
fs
and
or
add
enter
add
mov
push
ljmp
hlt
or
arpl
pop
jg
jge
daa
xchg
pop
xchg
or
jle
xor
dec
dec
mov
mov
adc
push
insb
pushf
adcl
xlat
mov
inc
repz
fldz
adcl
ljmp
aad
cmp
inc
xchg
add
push
and
jp
fldt
jmp
cmp
lcall
and
jo
test
adc
sbb
mov
shlb
lret
loop
in
insb
jle
dec
ja,pn
mov
mov
fcmovne
ret
fbld
inc
test
js
inc
xlat
cs
jle
pop
je
lahf
nop
fmuls
ds
jmp
push
mov
cbtw
sbb
nop
push
mov
mov
push
pusha
mov
int
xor
push
daa
fs
jmp
jne
fstps
popf
pop
lret
push
mov
testl
mov
or
rorb
pusha
shrl
test
repz
mov
sbb
test
push
or
push
xor
das
adc
jnp
dec
jb
and
cmp
addr16
push
dec
cmp
mov
fistpll
inc
fdivs
pop
loope
sbb
xchg
xchg
cmp
xlat
aas
aas
adc
sbb
imul
sub
movsl
fmuls
lods
inc
test
lret
lret
cmp
outsb
push
add
dec
incb
rcrl
gs
sbb
fcomip
and
enter
in
xchg
sub
into
gs
adc
dec
shlb
add
xor
loop
adc
ljmp
cld
mov
daa
inc
shll
xor
fs
fwait
es
xchg
add
sbb
loopne
scas
shrl
test
push
adc
nop
pop
shl
les
push
ss
and
add
pop
lret
in
fsubr
stos
aam
xlat
test
cld
jmp
sbb
scas
into
insb
add
cmp
mov
fld
shll
into
daa
jbe
repz
test
add
ret
leave
dec
xchg
jae
out
cli
das
cmp
push
fwait
dec
xor
inc
inc
mov
gs
xlat
lahf
out
mov
jbe
pushf
mov
lret
pusha
aad
jns
and
arpl
loope
aaa
sub
inc
pop
add
mov
mov
pusha
push
call
mov
inc
add
sbb
dec
loop
cmp
imull
push
sub
out
mov
jmp
pusha
fucomip
mov
int3
inc
insb
imul
hlt
movb
mov
in
mov
loopne
lods
adc
es
fbld
orl
push
out
dec
mov
int
nop
mov
test
cmp
jle
mov
mov
ds
daa
fnstenv
cld
scas
addr16
div
jp
dec
testb
mov
and
cmp
insl
and
sti
sbb
rcrl
fcompl
cmp
repz
jno
shrl
repz
pop
mov
xchg
loop
mov
stos
das
addr16
pop
mov
push
xchg
add
imul
enter
les
push
outsb
xchg
sti
sbb
popf
jb
cmp
push
sarb
sub
adc
movsl
dec
pop
hlt
jle
xor
xor
adc
or
jno
aam
or
adc
outsl
aam
mov
inc
fdivl
je
jb
adc
mov
pop
xchg
sub
insl
cmp
mov
outsb
mov
sub
jno
mov
or
movsb
and
es
cwtl
pop
fnstsw
jge
xchg
fucomp
decl
inc
lds
ret
fstps
fs
push
aaa
xchg
scas
or
icebp
mov
and
xor
sahf
jl
pop
scas
mov
imul
cmp
imul
mov
and
out
pop
mov
mov
or
cltd
jae
lret
and
xchg
xlat
loopew
lret
mov
adc
shrl
sbb
lods
mov
inc
push
cmc
xchg
std
mov
jg
and
push
sub
imulb
iret
cld
or
xchg
stos
push
loopne
jnp
int
jge
sti
adc
cmp
es
xchg
negl
movsb
xor
cltd
in
enter
in
mull
outsb
sub
repnz
pop
dec
dec
sbb
sub
lahf
pushf
loope
roll
std
psubsw
repz
adc
or
xor
js
add
cmp
push
js
inc
sub
icebp
push
xchg
scas
shrl
mov
pop
pushf
stos
rcl
add
loope
shrb
aad
test
sub
es
add
arpl
mov
mov
fs
cmp
roll
test
mov
fwait
mov
xchg
push
mov
in
jnp
push
cmp
xchg
repnz
sbb
mov
lea
ret
outsl
adc
stc
adc
stc
dec
pusha
sub
pop
jbe
hlt
xor
fldenv
test
ss
bnd
jns
cs
rcr
in
es
add
ss
adc
popa
cwtl
push
add
and
mov
insl
inc
int
push
dec
dec
add
cmp
int3
lret
pop
insb
sub
mov
sbb
lods
jmp
fisubrl
dec
xchg
pop
mov
and
imul
sub
mov
clc
das
cmp
out
push
insb
xchg
lods
cmpsl
aam
pop
inc
sbb
xchg
sbb
pop
lods
cmpsl
stc
test
je
dec
mov
jo
fisubrs
inc
xchg
repz
movsb
dec
cltd
xchg
pop
cwtl
shl
push
mov
xchg
add
or
sbb
push
pop
xor
push
arpl
aad
jle
cmp
xchg
dec
dec
pushf
push
test
cltd
xor
pop
cmp
in
mov
enter
mov
cmpsb
test
fcomi
fwait
insl
mov
xor
xchg
jno
mov
inc
sbb
movsb
mov
scas
jne
popa
sub
lods
and
aas
insl
movsb
data16
stc
popf
jle
xchg
adc
mov
jb
popa
or
repz
inc
xor
dec
pop
lret
or
arpl
mov
jle
inc
insb
push
aas
lds
inc
inc
les
cmp
inc
pop
add
sbbb
sbb
cs
les
mov
mov
cmpsb
enter
pop
xlat
es
jg
push
adcb
xchg
add
and
std
in
popf
dec
and
fdivs
ret
repnz
fnop
les
pop
mov
daa
inc
mov
jle
pop
dec
jo
dec
sub
sub
pop
cmc
scas
call
lods
hlt
sahf
xor
mov
push
inc
jg
sbb
dec
sbb
repnz
out
test
das
lret
ror
sbbl
xor
lahf
repnz
lods
outsl
pop
xchg
jg
repz
mov
jecxz
shrl
mov
ja
or
rcl
jmp
add
pushf
mov
dec
rorl
sbbl
cld
orb
jmp
shll
dec
cld
mov
cmp
lods
cmpsl
cltd
test
jg
shr
jl
xor
adc
lods
pop
int3
aam
and
sub
test
push
movsl
xor
jle
sbb
and
add
dec
mov
and
ficoml
add
jne
lods
aaa
aam
add
leave
pushf
ljmp
je
les
lods
mov
and
or
jns
inc
out
shll
js
push
pop
dec
pop
pop
jns
inc
aas
iret
stos
inc
stc
cmpsl
pushf
js
sbb
shlb
or
popf
and
push
inc
sbb
cld
jae
add
xor
andb
into
int3
pop
mov
scas
inc
sbb
xchg
fimull
int
clc
dec
mov
ja
push
xchg
hlt
mov
cmp
cmp
or
pop
rcrl
jns
sub
pop
repz
mov
lds
mov
sub
dec
mul
adc
mov
dec
leave
mov
mov
mov
push
jecxz
mov
ret
mov
inc
adc
jae
scas
arpl
in
and
adc
enter
xlat
in
jmp
movaps
mov
es
mov
test
adc
cmc
lods
cmp
add
add
bnd
or
test
addr16
cltd
pop
xor
and
mov
dec
pop
insb
dec
xchg
ds
stc
shll
les
in
dec
jecxz
mov
ljmp
adc
mov
enter
push
or
dec
addr16
aad
lcall
repnz
pop
and
push
daa
add
sbb
adc
jns
and
dec
cmc
xor
sbb
push
pop
cmp
stc
push
cmp
sarl
adc
stc
out
js
xchg
or
adc
cs
aaa
push
repnz
sub
movsb
jne
enter
ljmp
decb
pop
testl
dec
filds
dec
inc
bound
mov
ret
add
inc
in
shlb
loop
repnz
dec
ja
add
enter
sar
adc
push
push
maxps
xlat
pop
mov
das
cld
scas
inc
fsts
aaa
dec
jne
mull
add
xor
int3
fisubl
mov
lahf
roll
push
rcrb
insl
lcall
mov
insl
dec
shl
adc
push
imul
xchg
and
pushf
sub
cmc
dec
adc
push
push
inc
pop
sahf
jne
and
aas
icebp
ret
pop
stos
pusha
inc
outsl
and
je
notb
pop
sbb
lock
in
pop
repnz
int3
fucomi
popa
je
xchg
movsl
push
add
jmp
sbb
push
add
lahf
arpl
inc
adc
mov
and
sub
sbb
cmp
movsb
stos
out
xor
jle
inc
fistl
xor
ss
leave
mov
dec
js
popf
scas
loop
sbb
pop
scas
iret
cmp
push
push
bound
fwait
xchg
xchg
sbb
xor
mov
les
insl
xchg
cmp
cltd
mov
shll
push
and
push
jno
mov
cmp
cwtl
sub
fsubl
mov
aam
imul
cmp
adcb
jo
mov
mov
gs
jno
sub
pop
pop
cmp
mov
adcb
push
jle
iret
add
negl
out
adc
out
mov
add
cmp
jle
cmp
mov
pusha
push
in
xchg
mov
mov
pop
cmpps
xchg
or
das
sub
inc
ret
aaa
cmp
push
leave
push
in
cli
lahf
dec
sbb
pop
aaa
xchg
enter
fsubs
mov
in
add
pop
mov
push
subl
mov
dec
stc
dec
cmpsl
dec
fisttps
xchg
mov
add
mov
pop
sub
jmp
ds
lock
pop
dec
mov
mov
add
mov
clc
fwait
or
mov
dec
sbb
push
sbb
insb
aas
xorl
imul
jl
jg
pop
mov
push
int3
shll
pop
cli
inc
cmp
or
repz
inc
pusha
xor
or
jae
jle
and
test
or
mov
push
repnz
sub
add
mov
imul
js
iret
pop
or
cli
mov
fdivs
adc
xor
adc
mov
jae
ficomps
dec
pop
sbb
cmp
js
and
pop
mov
ljmp
and
and
mov
in
int3
fs
iret
push
push
adc
sahf
mov
aaa
sbbl
mov
pop
sbb
mov
sbb
mov
pop
clc
fs
icebp
enter
sbb
imul
xchg
es
push
mov
ljmp
movsl
xchg
pop
daa
inc
leave
enter
add
enter
popf
cld
or
cmpsb
push
adc
rol
or
pop
cs
cmpsl
cwtl
repnz
in
fidivrs
stos
in
dec
dec
lahf
cmc
pop
aas
pop
inc
lahf
out
mov
mov
xchg
mov
pxor
popf
ret
imul
fadds
in
imul
xchg
sti
adc
sub
cmovge
call
shll
jp
mov
inc
cmp
push
mov
sub
cmp
andb
lods
cld
testb
leave
mov
lods
popf
call
sti
cmp
xchg
xor
push
cmc
aas
loop
cwtl
jg
cltd
push
jb
dec
lods
push
push
es
and
daa
test
pop
or
je
pop
lret
pop
xchg
sahf
andl
or
jbe
sub
sbb
inc
shll
clc
push
push
ret
adc
cwtl
sbb
decl
jo
sti
xor
jg
sub
adc
bound
jl
lcall
push
jle
dec
push
sbb
call
or
xchg
cli
gs
ficoml
addr16
stc
int3
sub
xor
and
inc
sarl
stos
daa
jne
pusha
orb
daa
dec
ja
mov
popa
sub
not
pop
mov
push
mov
frstor
pop
scas
xor
ljmp
pop
mov
mov
stc
xor
bound
mov
xorb
sub
lahf
or
decb
lods
sub
jae
dec
test
cltd
sbbl
fucomp
or
sbb
cmp
into
jmp
rcrb
xchg
sbb
data16
cld
fmuls
mov
jno
pop
stos
or
pop
cmp
in
or
test
inc
frstor
aaa
inc
and
pop
mov
stc
xor
jg
xchg
mov
roll
aaa
ja
sub
out
scas
inc
xchg
aaa
xchg
in
push
lods
ds
cli
aam
inc
inc
mov
or
divb
ret
hlt
inc
or
data16
adc
and
mov
jecxz
sub
adc
test
mov
aad
sub
mov
sbb
repnz
out
or
xchg
ds
inc
pop
repz
inc
jp
mull
mov
mov
adc
and
xor
daa
pop
lret
lock
pop
hlt
pop
xor
sbb
lock
loopne
insb
jle
add
lds
sbb
lret
and
imul
push
and
dec
fisubrl
orb
mov
cltd
mov
icebp
jae
stos
cld
push
mov
daa
shll
movsb
in
dec
rcrl
xchg
int3
mov
andl
movsb
inc
inc
or
jge
jmp
xor
mov
xor
lock
mov
xor
push
fstpt
jle
icebp
movsl
sbb
jecxz
scas
pop
ficomps
fiadds
gs
push
push
pop
or
pop
sub
sub
pop
outsb
rorb
xchg
loop
dec
lcall
mov
fwait
sub
push
sub
mov
add
lret
pop
add
aam
sbb
jle
dec
cmp
cld
fs
arpl
push
enter
mov
ss
and
or
ja
push
sbb
popf
fs
iret
les
jl
pop
lods
testl
add
sbb
fnstsw
xchg
or
ja
addr16
mov
mov
push
imul
mov
jle
inc
mov
mov
addr16
sub
push
shrb
inc
cltd
mov
mov
xchg
sub
out
int
into
gs
push
mov
push
into
cmp
or
sub
gs
jge
outsl
dec
mov
dec
cld
xchg
jle
adc
mov
mov
and
pushf
test
adc
jnp
push
addr16
adc
inc
fs
fadd
inc
cltd
test
clc
ljmp
dec
or
mov
inc
inc
scas
pop
cmp
mov
or
daa
loop
cmp
and
loopne
mov
cmp
dec
mov
test
sbb
push
int3
mov
xchg
test
enter
cmc
mov
std
insl
mov
je
push
inc
jnp
ffreep
push
fldenv
sub
cmp
xchg
out
pop
ret
dec
in
dec
es
pop
enter
dec
into
in
cli
loope
sub
and
adc
inc
popa
inc
insb
pop
fs
mov
bound
sbb
mov
into
mov
data16
adc
add
or
in
push
fcompl
jle
sub
movsl
mov
sbb
test
cmpsl
mov
mov
ret
pop
loope
pop
jecxz
shll
pushf
icebp
notl
pop
mov
out
leave
fs
adc
mov
jmp
js
push
mov
mov
xchg
jle
and
shr
xor
test
mov
push
dec
dec
jge
imul
enter
mov
jnp
bound
push
adc
inc
ja
push
jle
dec
aad
cmp
jle
sub
orl
cmp
pop
hlt
mov
shlb
adc
repnz
jns
mov
sbbl
imul
inc
fnsave
cmc
mov
imul
inc
pop
jl
add
adc
imul
cs
mov
push
lcall
push
addr16
out
ret
loope
cs
xor
push
std
cwtl
inc
bound
pop
xchg
inc
rcrl
sbb
jmp
jno
stc
pop
bnd
into
add
cmp
pop
scas
and
leave
xor
sub
add
jns
cmp
rorb
orb
sbb
ja
jo
daa
mov
out
lock
xchg
cwtl
test
mov
add
cmp
lcall
mov
add
rcrb
jp
and
jecxz
hlt
dec
mov
pop
mov
mov
jge
or
loope
xchg
xor
xchg
add
mov
inc
test
push
ljmp
insl
add
daa
pop
mov
mov
nop
cmp
test
inc
pop
jecxz
or
sub
sub
xchg
adc
push
lods
fidivl
inc
cmpsl
shrl
popl
and
popf
cmp
in
sti
jg
inc
inc
push
inc
inc
in
into
inc
cmovo
out
ja
jno
in
pusha
xor
ljmp
lock
shrb
mov
in
stc
xor
xchg
cmp
out
je
repz
and
xchg
and
enter
inc
sbb
push
repz
add
jno
add
test
add
js
std
xchg
int
nop
dec
and
xor
cwtl
das
push
jae
lret
add
cmpsl
stc
sub
or
xchg
jns
sbb
out
xor
shlb
fstps
test
in
sub
les
mov
mov
push
cmp
lea
call
stos
test
mov
hlt
push
outsl
lret
sub
ljmp
inc
push
jp
jno
notl
ds
insb
mov
loop
push
clc
jb
leave
lock
mov
add
add
xchg
dec
jbe
and
mov
rcrb
add
mov
loopne
push
fiaddl
addr16
shlb
pop
test
cli
pop
insl
xchg
sbb
pop
sub
inc
loope
sti
loopne
inc
jmp
xchg
testl
in
aaa
pop
sbb
and
pop
mov
cmp
aaa
mov
mov
aas
aad
shl
mov
stos
shrb
mov
sbb
mov
ficoms
lods
ja
sbb
cwtl
xor
leave
mov
add
lret
das
inc
push
lret
sbb
mov
sahf
xor
pop
aaa
mov
pop
insl
jb
mov
xorb
or
pop
shr
mov
loopne
or
fdivrl
test
pusha
movsl
fdivp
push
jl
jle
jne
push
mov
or
sbb
mov
add
sub
sub
push
test
in
xchg
push
jne
lret
cmc
fprem1
mov
test
mov
mov
mov
adc
pop
jo
fnstenv
xchg
insb
sbb
adc
popl
es
inc
and
pop
add
cmp
rclb
std
mov
jecxz
sub
fisttpl
loop
jo
les
lock
into
dec
cmp
sbb
ds
cltd
xor
or
cltd
scas
jle
xchg
sub
mov
mov
outsl
xchg
inc
pop
cmp
pop
push
jo
jp
adc
cmpl
xchg
xorb
push
std
das
es
sbb
xor
adc
arpl
mov
push
aad
adc
sbb
call
pop
xor
mov
cs
xor
sub
and
mov
inc
sbb
hlt
mov
dec
shrb
pop
xbegin
fucomip
push
inc
xor
clc
daa
sbb
pushf
xor
sahf
push
imul
add
push
out
mov
mov
xchg
push
add
in
mov
andl
mov
adc
mov
xlat
pop
mov
lods
jo
aad
sbb
mov
mov
mov
in
mov
int
inc
icebp
xor
xor
cwtl
inc
mov
mov
cli
call
sbb
mov
cmp
pop
xchg
push
and
cmp
shll
in
push
in
icebp
xchg
daa
outsl
dec
adc
and
cld
push
int
mov
dec
inc
ja
jg
popa
mov
cwtl
sub
je
xlat
and
into
xchg
inc
pop
and
mov
stos
aas
adc
and
pop
ret
data16
test
push
ds
adc
sahf
and
sbb
jnp
and
outsb
mov
push
daa
fwait
push
dec
scas
inc
jg
out
stc
push
aad
xchg
sub
or
icebp
adc
imul
jge
int
jmp
out
mul
sbb
add
adc
pop
loop
push
jle
imul
shrb
insl
push
pop
in
mov
stos
xchg
imul
cmp
sbb
jmp
push
test
push
pop
stc
push
lods
sub
addr16
mov
mov
fcoms
xlat
insl
pop
mov
insb
add
hlt
jbe
mov
push
xor
cmpsl
push
loopne
or
xchg
sub
es
xchg
data16
repz
lea
add
stos
mov
out
loope
sub
jmp
pop
in
rcll
ss
out
addr16
hlt
mov
repz
and
xorl
or
cs
hlt
pop
mov
add
adc
in
movsl
xchg
fildl
dec
pop
jmp
iret
ds
or
adc
daa
or
push
enter
adc
mov
inc
jnp
mov
mov
jne
cwtl
int3
jb
push
xor
lret
xchg
jb
lds
out
mov
loopne
daa
xchg
lods
sbbl
mov
hlt
fcomip
clc
ret
xchg
call
andb
pop
repz
add
scas
aas
lods
xchg
insl
fisubrl
aad
ficoml
xor
idivl
sbb
mov
dec
pop
scas
jp
push
mov
cmp
bound
inc
mov
cmp
push
in
cwtl
xchg
and
seto
aad
je
xor
jbe
push
ds
or
inc
std
add
sbb
cltd
test
loope
outsb
jle
inc
aam
fildll
mov
insl
es
js
add
scas
dec
or
mov
mov
xchg
ret
pop
mov
mov
testl
lds
repz
lahf
jnp
inc
dec
add
lods
sahf
cltd
xor
mov
jnp
lret
popf
mov
cmp
jae
in
pop
inc
fdivrl
inc
cmpl
lahf
inc
dec
pop
popf
or
jae
fldenv
popa
dec
mov
ljmp
adc
pop
loopne
leave
es
mov
aaa
sub
mov
adc
mov
adc
das
pop
fsubrs
aas
icebp
xchg
add
in
aam
fldl
add
or
sub
dec
pop
jp
mul
jp
dec
movsl
pop
in
add
cmp
mov
js
incb
mov
xor
xor
mov
cwtl
test
dec
push
mov
scas
in
stos
sbb
push
stc
jbe
sub
lods
mov
adc
sub
jnp
sub
push
pop
xchg
lret
inc
test
cmp
jg
or
or
add
aam
inc
mov
outsb
out
push
gs
loopne
popa
xor
jo
cld
cmp
rolb
cmp
mov
cmc
and
add
stos
aas
sbb
inc
in
xchg
pop
insb
inc
lock
mov
xchg
addr16
fmul
jecxz
or
scas
hlt
jnp
mov
cmpsb
xchg
sub
sbbb
mov
test
loope
fistpl
repnz
mov
jmp
mov
lods
xchg
mov
cmp
out
sti
xchg
fldl
repnz
enter
mov
clc
sbb
cs
cwtl
dec
gs
fucomip
mov
add
rolb
insl
adc
and
in
call
or
mov
pop
lret
in
xchg
data16
add
adc
ljmp
mov
idivb
ret
sub
mov
in
adcl
std
mov
fadds
adc
push
xlat
addl
dec
xor
mov
movsb
cmp
mov
add
repnz
lods
sub
jp
or
sub
xchg
imul
flds
outsb
push
jmp
cmp
jno
cmp
pop
ret
pusha
pop
mov
push
push
push
fdivrl
xchg
inc
xchg
xor
add
pusha
or
mov
fs
mov
lahf
xsha256
push
popf
and
push
test
jb
pop
xor
dec
mov
sub
sub
add
push
insl
test
jl
mov
mov
dec
pop
addr16
mov
test
jo
test
stos
sbb
cmc
or
cs
in
adc
xchg
lret
jecxz
jno
xor
leave
inc
mov
xor
push
xor
jne
ss
addr16
jb
or
lea
xorl
shrb
dec
add
xor
lods
adc
stos
xor
xchg
sub
pop
je
lcall
dec
xor
xchg
ret
mov
in
add
xchg
mov
pop
imul
xchg
xor
adc
add
mov
or
push
pop
mov
push
leave
loope
push
pop
mov
imul
xchg
sub
fistps
jle
scas
lods
xor
jge
jl
les
imul
xchg
call
insl
jg
mov
cmp
out
insl
fdivr
inc
loop
in
push
inc
push
out
addr16
mov
pop
out
add
and
dec
mov
adc
add
loope
ficoms
out
arpl
sub
xchg
jo
sbbl
adc
bound
mov
jo
out
mov
xchg
add
stc
pop
scas
mov
lret
mov
mov
sbb
lret
or
aas
dec
or
jo
pushf
sbb
mov
add
lods
mov
xor
lods
mov
les
add
cmp
mov
mov
inc
loope
shrb
add
mov
fidivs
mov
dec
and
fbstp
lock
xor
fistl
mov
sub
xor
lds
xchg
sub
stos
dec
lcall
jge
add
pop
push
fs
test
pop
imul
pushf
outsb
outsb
iret
push
inc
inc
rol
mov
mov
mov
inc
fstps
jl
fisubrs
insb
shr
gs
xchg
inc
adc
and
sti
inc
fcomps
pop
xor
jbe
repnz
mov
dec
mov
fistpl
mov
hlt
aas
stos
test
mov
test
in
mov
mov
push
aad
lods
ret
addr16
push
push
call
test
dec
aad
inc
xchg
mov
leave
add
or
adc
mov
fildl
push
xorl
add
inc
movsl
jp
iret
and
pop
lret
inc
repz
data16
jnp
pop
lods
cmpb
or
cmp
mov
sarl
aam
repnz
scas
pusha
scas
add
adc
push
fldenv
dec
leave
cli
cltd
jae
nop
xor
lods
mov
push
insl
xor
sbb
jle
cltd
jecxz
mov
push
push
fsubl
pop
addr16
sbb
mov
int
inc
mov
push
mov
shr
add
xchg
sbbl
rol
cmp
mov
dec
jb
pop
stos
pusha
add
stc
mov
enter
add
neg
out
add
xchg
sub
or
iret
popf
out
push
lods
adcl
fnstenv
mov
inc
scas
stc
xlat
int
nop
lret
or
and
mov
ret
lock
addl
or
imul
stc
fnstenv
test
mov
mov
shrl
mov
sarb
mov
pusha
or
testl
movl
adc
popa
cmp
pop
stos
xchg
shll
iret
gs
ret
inc
das
movb
dec
xchg
test
add
jg
es
add
leave
fs
idivb
inc
idiv
push
mov
les
aas
popa
jl,pn
testl
and
cmp
dec
loopne
pusha
fwait
xchg
fwait
addr16
inc
mov
jb
movsl
je
jle
into
rolb
adc
xchg
mov
dec
in
stos
addr16
xchg
inc
loopne
test
dec
mov
sbb
jne
ds
push
outsb
inc
jb
cmc
inc
sti
pop
ret
sbb
into
cmpsb
or
mov
sub
push
dec
inc
icebp
nop
mov
es
sub
sbb
movsb
pop
mov
int
pop
int
fidivl
loop
xlat
lcall
frstor
and
and
fstpl
ret
ja
cmp
xchg
sub
mov
mov
fwait
rdpmc
roll
fstpl
cmp
cmp
das
and
insb
mov
fiadds
cmpsl
push
fs
fdiv
daa
dec
std
sbbb
sbb
dec
dec
enter
lock
int3
pop
jno
cld
push
inc
xchg
out
dec
insl
fbld
outsb
out
sti
mov
fadds
popf
arpl
mov
lret
cs
xor
popa
scas
nop
pop
mov
scas
pushf
sub
loop
and
sub
or
mov
call
add
xlat
adc
aam
or
fs
sbb
add
mov
adc
or
rcll
push
mov
push
loop
xor
pop
add
gs
mov
jg
cmp
rcll
inc
fdivr
xchg
cld
dec
adc
or
loope
jae
mov
aaa
cld
insl
cmc
das
push
call
mov
loopne
pushf
icebp
call
mov
mov
aam
cmc
insl
ljmp
sti
xchg
and
xchg
lods
inc
adc
lret
mov
and
pop
jb
mov
xor
jae
lahf
test
int3
fsts
cmp
or
and
dec
jg
addb
addr16
xchg
sub
add
stos
mov
xchg
xchg
jle
add
cmp
mov
cmp
lret
mov
adc
add
scas
add
arpl
mov
mov
fdivrs
add
aas
gs
sub
int3
jecxz
lret
sbb
xchg
jb
and
add
sbb
insb
jecxz
ds
cmc
push
push
out
insl
jae
leave
call
cltd
dec
ljmp
adc
movsb
mov
lret
imul
push
in
out
jbe
lea
pop
std
dec
xor
inc
fisttpll
scas
fs
pop
movsl
add
cmp
cs
fadd
dec
sub
jl
sub
sub
imul
imul
jo
jmp
insb
jge
add
js
sbb
cld
int3
mov
push
xor
mov
aas
jge
lds
leave
push
aad
push
mov
jns
out
cmp
andb
add
loop
in
pop
mov
sub
mov
jnp
mov
clc
jne
cmc
xchg
or
dec
add
daa
cmc
xchg
ds
stos
fisubl
sbb
test
sbb
pop
and
push
jge
adc
pop
iret
fisttpl
and
lock
js
into
adc
aaa
mov
enter
mov
das
sbb
sbbb
mov
sahf
jg
mov
sub
ret
les
mov
inc
in
ficomps
xor
inc
arpl
scas
loope
xchg
in
insb
scas
test
mov
push
aam
cmp
insb
mov
push
cmp
sbb
out
into
push
out
adc
lahf
cmp
cmp
or
outsb
aad
dec
push
lcall
xor
imull
sub
pop
push
jle
xchg
and
mov
mov
pop
repz
dec
xlat
pop
rorl
mov
lret
xlat
jle
jecxz
cld
or
inc
lret
xchg
sbb
and
sbb
xchg
dec
fwait
scas
loope
pop
fwait
enter
xor
outsb
arpl
fldenv
cmc
push
leave
mov
or
les
out
xchg
xchg
out
cmp
in
movsb
jns
imulb
lret
add
out
mov
add
rorb
jb
adc
or
test
sbb
jne
mov
fsts
jnp
cmpsl
and
cmp
outsb
repnz
jecxz
add
out
add
mov
aaa
adcb
dec
pop
mov
ljmp
nop
or
inc
push
popf
sbb
mov
push
call
sbb
pop
sahf
sahf
rcrl
cld
pushf
cld
scas
sbb
mov
in
sub
mov
cmc
mov
pusha
pop
push
jmp
mov
imul
outsb
add
push
fisttps
test
inc
mov
push
pop
scas
xchg
std
test
loop
aam
mov
inc
or
nop
sub
mov
clc
or
mov
mov
ret
repnz
dec
loopne
xchg
dec
mov
mov
pop
cmp
mov
mov
pop
lock
fldcw
cwtl
ja
leave
cmp
or
out
ret
sbb
xchg
out
pop
xor
and
testb
shrb
dec
aas
mov
push
and
mov
repz
inc
test
loopne
outsl
push
scas
jae
push
cmp
cmpsb
jns
stc
and
cld
ja
clc
jo
fsub
pushf
xchg
sub
mov
loopne
mov
mov
fs
call
fwait
scas
call
and
sbb
andl
adc
cmpsl
jno
xor
xchg
push
test
ja
ficoms
lret
dec
mov
inc
dec
and
bound
sbb
clc
or
pandn
jb
subb
push
int3
mov
sub
ret
pop
mov
push
dec
push
rorb
cli
pop
shrl
ucomiss
xor
pop
and
mov
lods
rcl
sbb
std
or
in
pop
hlt
xchg
adc
push
pop
sbb
mov
mov
push
lock
push
fsubrl
ret
cmpsb
loopne
loopne
neg
sub
scas
jg
inc
push
mov
repnz
lods
pop
add
hlt
adc
xchg
mov
xchg
imul
inc
fdivs
push
out
aam
lret
xchg
jb
in
addb
movaps
and
xor
divb
mov
xor
or
ja
sti
rcrb
ds
mov
add
jo
dec
cmp
imul
ljmp
out
xor
cs
pusha
cmc
mov
xlat
hlt
dec
pop
je
sbb
adc
roll
xor
xor
sbb
test
int3
and
jp
jl
mov
jle
jecxz
aam
loop
shlb
mov
leave
dec
lcall
in
jns
xchg
loop
test
lock
lods
mov
xor
pop
push
nop
cmc
mov
mov
jo
sub
push
outsb
push
cwtl
push
push
bnd
or
cmp
mov
js
sub
or
mov
mov
jnp
sahf
pop
adc
test
mov
xchg
jecxz
add
inc
dec
xchg
inc
imul
mov
adc
jb
and
dec
cmp
mov
dec
pop
out
orl
movsl
repnz
iret
adc
adc
mov
mov
mov
push
inc
data16
lock
lods
mov
sbb
jg
cmpsb
xor
data16
test
movsb
insl
adc
icebp
jl
addr16
std
insb
into
ret
mov
adc
addr16
sbbl
sub
dec
fbld
add
out
movsb
pop
sub
aaa
mov
movsb
cmp
call
out
jns
in
pextrw
push
mov
fcomip
mov
mov
mov
adc
call
mov
or
mov
loop
ja
and
rcrb
mov
jg
mov
add
shlb
push
adc
cmpsb
out
test
repnz
lods
leave
sub
cmp
sub
dec
mov
lea
aam
mov
jae
sbbb
mov
arpl
xchg
jne
xor
out
dec
pop
jecxz
and
push
cmpsb
and
leave
xor
fsubs
fwait
cmpsl
xchg
or
mov
mov
dec
test
and
adc
orl
jne
lret
movsb
mov
movsb
jecxz
orl
mov
fsubr
dec
xchg
xchg
cs
add
ret
sub
iret
repz
mov
pop
sbb
xchg
lods
ss
scas
adc
arpl
sbb
mov
jnp
fisubl
mov
jb
mov
rolb
add
push
cmc
sub
cmp
and
inc
or
adc
repnz
inc
fs
movsb
mov
dec
or
rorl
dec
and
adc
leave
into
in
sbb
mov
lods
mov
shll
fidivs
popa
lcall
lds
imul
pop
dec
call
jg
pop
scas
mov
push
push
sbb
aad
movb
push
in
xchg
cli
or
dec
ret
outsb
mov
daa
mov
fstpt
mov
imul
imul
lahf
pop
and
repnz
std
pop
aad
jmp
push
xor
test
fimull
dec
int
pop
lds
in
and
xchg
ds
add
test
lret
dec
insl
lds
lock
mov
or
jecxz
not
push
cmp
shll
push
loop
adc
pop
xchg
jp
imul
lds
test
shlb
cs
or
imul
in
js
pop
mov
shrb
setge
inc
mov
and
mov
sub
out
lock
test
adc
stos
push
scas
repnz
test
pop
and
mov
cmp
xchg
out
arpl
sarl
push
orl
jae
insb
or
sbb
push
mov
out
inc
mov
mov
xchg
out
mov
add
out
iret
lar
push
push
xchg
push
fs
push
cs
inc
fs
test
outsb
and
out
es
sahf
dec
inc
xor
outsb
xchg
xor
mov
adc
lea
inc
adc
mov
fldenv
mov
loope
adc
inc
mov
in
std
addr16
mov
or
rcll
adc
jnp
add
int
and
push
data16
inc
adc
dec
and
pop
test
mov
sti
sbb
mov
or
mov
aam
xlat
cmc
inc
dec
or
push
call
add
addl
jmp
jo
rorb
sbb
cmp
int
jge
js
inc
pop
xor
mov
rorb
mov
xchg
lret
ds
jae
push
xor
and
pop
icebp
fnstenv
inc
lret
les
sarb
test
pop
jae
loop
cmc
andb
ja
inc
adc
je
andl
sahf
imul
popf
je
rcr
out
mov
cmp
cmp
sub
push
addr16
sbb
cmp
lahf
lret
movsl
cmp
xchg
popa
pop
repnz
mov
not
dec
mov
lcall
in
test
pop
cmp
jae
mov
daa
or
push
imul
js
inc
loope
mov
and
aad
dec
fbstp
out
inc
popa
xor
cmp
sahf
xor
mov
mov
xor
or
pusha
xor
bound
push
jbe
push
mov
mov
mov
int3
jmp
sbb
or
jno
add
sti
popf
stc
xor
in
mov
push
adc
push
pop
test
repnz
test
dec
hlt
or
and
jno
inc
pop
addr16
pop
dec
and
push
mov
jb
stos
sti
sbb
xor
sti
pop
jne
add
stc
nop
adc
jl
mov
jg
cmpsl
daa
mov
adc
icebp
cmp
lods
inc
cltd
clc
inc
dec
lea
jb
rcrb
dec
pop
dec
int3
popa
mov
jbe
cs
and
jge
lret
cld
cmp
adcl
shlb
shrl
add
mov
fiadds
int3
leave
mov
mov
push
loop
push
adc
ds
jmp
mov
ftst
in
sub
inc
push
adc
inc
into
xchg
jl
fdivrl
mov
xchg
sarb
xor
cmp
push
ret
xor
jmp
xchg
cwtl
mov
jmp
mov
add
inc
mov
aad
xor
cmp
push
add
rcrb
and
shlb
rcrl
jae
cli
and
rcr
inc
sub
sbb
add
pop
stos
mov
aas
mull
adc
or
xor
sub
int3
leave
mov
scas
mov
roll
ret
push
xlat
std
xchg
or
repnz
rorb
mov
xor
mov
xlat
lods
mov
cwtl
xor
int
push
sub
sbb
cltd
pop
lea
pop
xchg
int
dec
sub
aas
or
adc
repnz
adc
sbb
fs
cmpsl
add
test
inc
fs
inc
lea
pushf
mov
mov
inc
push
sub
xlat
jp
mov
out
and
add
pop
push
pop
mov
jae
stc
inc
sub
stos
push
ret
pusha
mov
mov
or
sub
dec
dec
out
mov
inc
pop
outsb
pop
std
xchg
cmp
sbb
shlb
gs
xchg
imulb
sub
mov
mov
sbb
add
xchg
inc
in
mov
iret
iret
in
inc
mov
jg
aad
sbb
inc
inc
jne
sahf
pushf
push
int
les
cmp
js
lcall
aas
iret
dec
movsb
clc
test
inc
pop
adc
shrb
ret
dec
fs
jns
in
jg
loopne
or
aaa
push
cltd
push
mov
mov
jle
and
les
leave
lods
repz
adc
aaa
mov
clc
xchg
mov
xor
jg
scas
shrb
int
and
sarl
mov
lock
jns
arpl
adcb
call
shl
dec
call
test
pop
mov
mov
adc
push
stos
inc
and
lods
xchg
push
enter
stos
push
pushf
xor
call
andb
xchg
insl
popa
sub
pop
test
in
cmpsb
jge
fbld
pop
subb
cmp
and
pop
pushf
cwtl
shlb
fnstenv
outsb
ja
inc
negl
imul
inc
xor
outsb
adc
mov
or
pop
lock
popf
cmpsb
fildll
cmp
xor
xchg
ja
inc
adc
pop
repnz
pop
sub
rcr
push
int3
dec
insl
test
mov
jg
xchg
cmpl
loop
mov
sbb
je
jno
xlat
fldenv
inc
jne
jne
push
lods
repnz
inc
dec
sbb
jns
movsl
xor
cltd
aas
mov
push
mov
pop
addr16
ficompl
scas
or
ss
mov
push
cmp
or
out
push
add
add
fs
scas
leave
push
setns
outsb
sub
loope
mov
or
add
popa
aas
bound
enter
jo
call
ljmp
jns
pop
shll
stos
and
mov
outsb
add
jbe
fsubs
xchg
test
pop
fiaddl
xor
and
cmp
jne
or
inc
dec
pop
cmp
out
sub
cmp
lret
sbb
fcmovnb
push
mov
loopne
sub
xchg
out
das
int
pop
add
fdivp
rcrl
dec
push
ret
outsl
fsubrs
adc
jae
pop
and
cmp
jg
fcompl
adcl
inc
movsb
in
mov
mov
filds
iret
insl
and
sub
pop
out
in
test
adc
adc
cs
pop
fmul
test
ret
in
cld
push
sbbb
in
mov
pop
fdivl
divl
jp
sub
scas
jns
inc
inc
mov
or
and
js
adc
push
insb
jo
mov
les
mov
inc
ret
jnp
sbb
int
dec
mov
out
mov
iret
test
jb
iret
sub
stos
shll
xchg
sub
push
cmpsl
ret
lret
data16
shrb
cmp
sbb
jb
cmp
lret
inc
or
rcrl
lret
dec
adc
fcomip
or
shrl
mov
mov
insb
in
in
push
out
shrb
testb
adcl
xchg
mov
xchg
sub
jle
or
lods
scas
mov
mov
jno
sbb
mov
rcll
mov
add
pusha
sbb
sarb
or
push
dec
push
or
cs
jbe
add
jge
jle
add
aaa
jmp
or
repz
xchg
or
push
add
bnd
mov
sbb
lods
jmp
jb
popf
and
pop
icebp
lods
inc
dec
out
push
push
les
cmc
ds
int
aas
lods
inc
jno
push
jmp
dec
xchg
xchg
or
jmp
inc
popf
les
mov
loop
int
imul
popf
dec
adc
xlat
cwtl
dec
pop
lea
fidivrs
lcall
xchg
in
lods
ljmp
cs
icebp
aas
add
out
or
hlt
add
gs
rolb
enter
push
inc
adc
inc
rol
dec
ds
jecxz
call
xchg
mov
movsb
sti
test
or
das
ja
hlt
imul
mov
jae
mov
bound
xorl
xchg
adc
test
in
pop
out
xor
or
data16
sbb
xor
out
test
sub
push
inc
lea
fnsave
aaa
dec
push
xchg
aam
sbb
je
inc
mov
sahf
ret
adc
pushf
sub
popf
push
jmp
mov
adcb
das
adc
jmp
loopne
add
push
mov
lahf
mov
sbb
jae
pusha
in
loopne
sbb
fwait
xor
daa
ficoml
dec
xchg
cmp
mov
addr16
lret
add
dec
mov
rclb
or
xchg
pop
push
sub
xchg
lods
out
loope
adc
xor
cltd
jns
push
mov
pushf
mov
xorl
es
repnz
das
push
lock
fisttpl
push
or
cs
xlat
adc
dec
inc
push
dec
aad
sub
je
mov
pop
ds
add
add
das
iret
and
jle
sbb
lahf
daa
ja
xchg
test
pop
sub
ror
lock
gs
mov
cmpb
pop
push
addr16
adc
popf
push
xor
ss
fs
pop
mov
fisubs
loop
lods
dec
lods
or
inc
sub
jl
push
lods
dec
xchg
insb
inc
das
sub
inc
pop
pop
int3
aas
dec
test
enter
push
roll
jae
lcall
and
adc
andb
fstpt
nop
nop
das
stos
and
clc
ss
pop
add
fadds
mov
fwait
in
xchg
cmp
mov
xchg
cmp
in
pop
es
test
cmc
movsb
cmovae
mov
jae
clc
push
or
jmp
repz
fs
pop
sub
insb
pop
xor
shll
orb
repnz
outsb
call
cmp
fisttpl
ret
fisubrl
fwait
out
add
jg
outsl
push
sub
or
pop
sub
out
jnp
jne
int3
insb
and
test
cmp
cmp
inc
dec
lock
lock
cmpsb
das
aaa
pop
test
cld
nopl
inc
cltd
mov
dec
jle
cli
push
fisubrl
pop
fucomp
ljmp
int3
push
in
lahf
mov
aaa
push
repz
imul
mov
cli
mov
or
xchg
jl
mov
les
inc
add
push
jl
push
in
xchg
fistl
lret
aas
mov
rcll
cmp
jmp
mov
and
mov
cwtl
mov
push
test
sbb
pusha
push
mov
jg
mov
fistl
inc
dec
jecxz
xor
andl
xchg
jge
jne
pop
xor
jno
adc
sbb
arpl
or
clc
insl
xor
cmpsl
pop
nop
daa
adc
ss
std
data16
jno
inc
std
int3
stos
dec
mov
into
rcr
pop
fstps
ret
mov
dec
dec
fisttpll
mov
insl
nop
loop
inc
es
test
loope
in
das
pcmpeqw
in
stc
rcr
xor
icebp
sbb
pop
daa
mov
cmc
fnstsw
push
adcb
pop
dec
test
sti
cmc
sub
mov
pop
in
shlb
pop
push
mov
xorb
sub
into
lretw
mov
cmp
inc
fcomps
or
cmp
fsubrl
mov
cs
and
pushw
out
ds
in
push
test
pop
pusha
idivl
sbb
sbb
cmp
inc
xlat
retw
or
adc
cmp
aam
dec
add
mov
or
mov
je
cmc
mov
xchg
jecxz
int
stos
mov
xchg
sbb
cmp
dec
aam
cld
or
daa
fists
cmp
mov
std
jo
sahf
gs
inc
mov
jg
imul
fnsave
or
mov
int
sub
fimull
test
mov
push
sbb
xor
xor
jge
mov
arpl
xchg
dec
xchg
ret
push
lods
sub
dec
fs
adc
and
xchg
icebp
jle
adcb
pop
xor
test
stos
les
jae
cmpsl
arpl
mov
jl
pop
mov
ljmp
and
icebp
mov
nopl
mov
in
mull
push
mov
stc
ss
jbe
mov
sar
rcl
add
cmpsl
mov
cmpb
mov
xchg
cmc
pushf
jmp
mov
outsl
add
cmpsb
xor
popa
dec
mov
push
sub
ja
sub
or
mov
popa
add
or
xor
dec
fsubrl
and
cmp
lret
pushf
and
stos
rol
pop
and
mov
mov
push
mov
fdivr
push
jp
es
fdivrl
inc
push
movsl
jbe
fwait
adc
mov
mov
adc
dec
sbb
push
das
and
fmulp
pop
out
inc
mov
dec
data16
les
xchg
adc
scas
insb
jbe
adc
fldcw
lea
out
test
testl
pop
inc
jnp
cmp
fidivs
sub
test
pop
cld
jmp
pop
xor
xor
push
ljmp
jno
push
or
das
jno
scas
cmp
push
pusha
mov
ficoml
mov
leave
mov
xor
push
adc
mov
js
xchg
push
pop
arpl
dec
aaa
rclb
add
imul
add
leave
popa
lret
adc
adc
lret
test
xchg
je
jb
or
adc
and
jle
aas
scas
inc
push
lods
js
fdivl
mov
fcompl
bound
cltd
stos
jmp
or
sbb
mov
insb
test
or
enter
cli
pop
pop
in
cmp
divb
dec
nop
into
mov
sbb
push
sbb
mov
mov
mov
mov
sub
movb
sbb
in
pushf
loopne
sbb
adc
adc
xor
aaa
ret
or
cmc
pop
gs
push
data16
fwait
cmp
test
mov
fnsave
and
add
out
mov
inc
call
or
jle
ret
mov
xlat
in
pop
cmpsb
push
inc
jae
ljmp
shll
pop
pop
sbb
enter
pop
xor
shrb
xchg
pop
mov
out
mov
rol
ja
cli
dec
xchg
jge
mov
das
or
dec
out
clc
pop
movsl
pop
xor
faddl
pushf
lret
stc
dec
testl
lea
mov
aaa
loope
pop
push
addb
pushl
sub
mov
dec
fadds
and
addr16
sbb
pop
iret
test
repnz
xchg
pop
fildll
add
and
int3
jg
mov
fadd
jae
mov
loope
mov
add
lods
ss
mov
pop
lods
lahf
add
arpl
jne
insb
shll
sub
dec
call
pshufw
out
rcrl
sbb
jbe
inc
sbb
xor
fists
mov
adc
inc
push
dec
sarb
gs
out
xchg
in
jp
cmp
imul
xchg
fadds
sub
mov
loop
movsl
cli
mov
sub
ret
stos
sub
ds
pop
test
mov
ja
xchg
adc
cmp
push
cmp
push
mov
bound
cmp
jmp
mov
mov
sub
mov
in
jge
sbb
leave
pusha
stos
mov
xchg
pop
jae
mov
push
lods
mov
out
adcb
mov
lahf
das
pop
jne
jg
pop
mov
and
push
loopne
add
adc
jae
mov
popf
jge
sbb
loopne
or
xchg
mov
mov
dec
xor
jnp
dec
stos
inc
in
jg
cmp
aad
mov
bound
jecxz
add
stos
adc
xor
loop
fdivr
pop
out
and
xor
sub
cmpsb
jo
addb
repz
jp
dec
loop
cmp
outsb
lcall
sub
enter
aas
xor
xlat
xchg
std
ret
sbb
jne
jp
movsb
stos
arpl
mov
xorl
lock
ret
and
adc
cmp
lcall
mov
pusha
mov
jno
mov
or
aaa
in
fisttpll
sbb
add
je
lods
mov
sub
dec
add
lret
adc
jmp
mov
inc
lret
cmp
int
in
insb
out
mov
adc
int
lahf
insb
inc
loope
xor
lods
add
cmpsb
cmp
int3
sbb
fiaddl
in
cmp
in
gs
push
jno
cmp
jne
out
pop
leave
mov
mov
insb
shl
mov
das
stos
mov
lea
jnp
xchg
xchg
sub
mov
dec
jecxz
adc
add
imul
pop
lock
mov
adc
inc
push
or
mov
xor
adc
lret
and
add
adc
sub
arpl
add
mov
and
js
cmp
add
xor
clc
insl
cmpsl
lods
dec
roll
pop
dec
xchg
xor
mov
jmp
rorb
addr16
mov
xchg
cmp
mov
xchg
push
ds
inc
popf
lret
sbb
sbb
and
lahf
lods
outsl
dec
sarb
loopne
fld
lret
test
or
lcall
stc
mov
mov
imull
jecxz
push
jne
out
push
cmp
sysexit
or
push
shll
orb
inc
push
or
mov
fistps
pop
test
cmpsb
and
dec
in
xor
stc
adc
push
in
pop
call
ret
pop
daa
scas
dec
aam
xchg
pop
lds
push
repnz
sbb
xor
push
lcall
inc
mov
jmp
outsl
and
aad
adc
aaa
add
and
sbb
mov
xor
mov
mov
je
dec
inc
ja
cmp
mov
loopne
xchg
lcall
mov
and
cld
push
mov
fidivrl
ror
lea
cmpsl
pushl
addw
sbb
mov
xor
mov
andb
pop
push
jmp
add
inc
fsubr
shll
pop
aaa
or
mov
cmp
xchg
dec
outsb
add
inc
or
jl
sub
jae
dec
in
sti
popa
clc
jmp
popa
or
push
loope
adc
push
mov
std
enter
cltd
movsl
mov
push
insl
mov
and
in
mov
add
and
mov
fldl
test
dec
mov
cwtl
sbb
jp
addr16
lds
xchg
sub
fdivrs
mov
leave
pushf
repnz
mov
les
add
ret
jmp
call
fldl
and
sbb
in
jnp
pusha
push
add
mov
or
mov
xor
push
and
cmp
and
adc
mov
sbb
mov
and
rorl
cmp
jecxz
add
adc
stc
xor
adc
ret
adc
pop
push
rcll
pop
fisttps
test
std
or
es
jecxz
out
dec
bound
out
in
push
jmp
cmp
mov
popl
and
mov
pop
fucomp
or
adc
sti
movsl
fidivl
pusha
pop
in
mov
shrl
or
cmpsl
and
stc
sbb
repnz
das
xor
outsl
mov
fadds
mov
rol
dec
add
sub
rcr
push
leave
pusha
test
mov
es
aam
xchg
andl
cltd
push
int3
arpl
adc
lods
sahf
fwait
or
shlb
add
cmp
push
in
mov
test
fcomps
stos
fiaddl
adc
pop
sbb
and
repz
xor
icebp
jae
rolb
cld
mov
andl
mov
shrl
inc
and
cmpsl
icebp
mov
jg
cs
scas
adc
mov
sub
push
pop
out
xchg
add
inc
mov
popl
sub
pop
fdivrl
sub
xor
add
lahf
mov
mov
mov
scas
sbb
mov
das
cmp
insl
pop
cmpl
xchg
pop
imul
dec
stc
xor
mov
lcall
inc
int3
sbb
popf
add
pop
mov
ja
fwait
or
pop
sub
pop
inc
dec
jg
adcl
adc
aas
dec
push
and
js
call
subb
imul
push
iret
and
mov
mov
dec
add
xchg
mov
out
leave
xchg
dec
pop
nop
push
fldl2e
or
or
fwait
icebp
push
addr16
mov
fidivl
cs
icebp
pop
clc
sbb
dec
sub
pop
cltd
xchg
sub
cltd
mov
mov
cs
sub
jne
into
sub
pop
dec
adc
scas
sub
xor
in
add
cmp
das
rolb
add
cld
sbb
push
leave
sbb
dec
dec
fwait
or
mov
mov
and
test
fcoms
movsl
jle
sti
scas
cmpsl
and
mov
leave
int
or
inc
xor
iret
in
sarl
add
push
xchg
cs
mov
cld
mov
mov
add
call
lea
mov
repz
jmp
aad
mov
add
lods
out
jbe
sahf
int
dec
addr16
call
or
hlt
inc
sbb
mov
mov
pop
lods
shrl
mov
aas
xchg
push
scas
sub
and
aad
call
pop
mov
int
xchg
push
out
cmp
pop
jmp
daa
fcomp
outsb
ret
adc
dec
mov
pop
mov
mov
push
dec
push
mov
shl
loope
pop
ds
mov
test
js
xor
sbb
test
faddp
fldt
cltd
xchg
stos
dec
popa
mov
shrl
test
loop
ret
push
sbb
push
add
fld
sbb
daa
jmp
mov
fistpll
shrl
andl
ret
imul
popf
mov
negl
push
or
es
fwait
cwtl
mov
aaa
imul
scas
mov
dec
sbb
xor
jg
pop
sub
lahf
gs
add
rcrl
jbe
jns
cs
cs
pop
movsb
mov
out
leave
or
and
test
push
mov
or
mov
test
pusha
scas
push
movsl
sarl
negb
sbb
ds
scas
mov
imul
push
jo
add
add
ret
sbb
mov
xor
sbb
mov
mov
imul
pop
icebp
mov
insb
jle
push
rsqrtps
jns
dec
movsb
je
mov
push
shl
xorb
cmp
mov
shll
adc
into
jecxz
inc
lods
pop
inc
sbb
xchg
aad
adc
push
lods
aad
bound
dec
fbstp
mov
pop
xor
mov
push
xlat
push
imul
sub
orb
and
add
add
jo
pop
js
pop
pusha
orb
mov
inc
pop
ja
and
shll
fbld
dec
fucomp
repz
movsl
cmp
sbb
mov
cmp
hlt
loopne
mov
lds
sahf
xor
inc
mov
bound
xsha256
cmpsb
xchg
add
or
repz
aaa
inc
mov
stos
dec
sub
call
pop
lret
outsl
dec
enter
test
dec
dec
mov
cli
xchg
sub
fbld
dec
sbb
es
add
cli
mov
pop
imul
push
adc
add
aaa
dec
mov
push
pop
sub
xchg
lock
sub
mov
mov
cmp
sbb
adc
mov
jmp
bound
jnp
dec
sbb
add
pop
stos
pop
out
icebp
pop
incb
jno
push
movsb
lcall
insb
repz
rorb
sbb
xlat
mov
add
or
loope
push
mov
popa
dec
mov
jns
mov
std
cmpsb
and
xchg
inc
aas
lcall
sbb
das
sti
lahf
ss
call
push
adcl
sbb
fldcw
inc
jmp
fnsave
fs
dec
cmp
pop
push
mov
cmp
add
cmp
push
sbb
sbb
mov
pop
rcll
in
jne
mov
ljmp
pop
mov
cli
cwtl
adc
repz
xor
sub
pusha
stos
stos
xchg
or
mov
in
dec
int
xor
mov
test
and
cwtl
mov
out
bound
sarl
fucom
inc
adc
mov
push
lods
xchg
aaa
in
add
fwait
bound
leave
sub
push
mov
mov
lds
adc
and
call
pusha
xchg
insl
sub
gs
mov
xchg
xchg
gs
mov
jnp
inc
sbb
cmpb
jb
loopne
or
push
jmp
add
lods
roll
pop
into
arpl
mov
mov
gs
cmp
icebp
cmc
sub
sbbl
aam
out
and
xor
or
dec
or
lods
inc
sub
lahf
out
add
jno
bound
shlb
jne
out
std
pop
cmp
xchg
shrb
inc
bound
lock
dec
push
aaa
sub
jmp
dec
sbb
subb
xor
jle
daa
jg
xor
das
push
clc
sahf
sbb
push
mov
jle
fnsave
pop
leave
jecxz
sbb
fadds
rclb
fnstenv
das
pop
sub
clc
fs
pop
jne
mov
cmp
xchg
loope
stos
adc
clc
xor
aam
cmpsb
flds
in
ljmp
lods
push
subl
sbb
pop
inc
xor
lea
xor
lret
push
cmp
xchg
pop
xor
popa
jle
inc
hlt
testl
test
lret
and
cmp
test
adc
lcall
data16
xor
pop
pop
test
jl
ja
jns
addr16
pop
movsl
sbb
push
int
xchg
cmp
test
out
in
inc
out
mov
push
inc
xchg
enter
enter
sbb
sub
and
lods
ja
lock
imul
repnz
loope
adcl
or
fucomp
sbb
cmc
adc
sbb
popf
pushf
sub
jmp
add
or
orl
adc
xchg
push
xor
jmp
or
xor
pop
mov
or
push
repnz
clc
rcll
push
add
cs
fdivrs
adc
sub
addb
sbb
pop
mov
imul
push
xor
inc
in
stc
ja
sub
or
in
mov
xor
ret
jnp
push
mov
mov
call
cmp
xlat
dec
xchg
arpl
lea
xchg
cs
iret
arpl
and
clc
fcoml
mov
inc
jmp
xor
aaa
mov
leave
pusha
nop
push
loopne
sbb
out
mov
aad
xor
inc
mov
mov
fidivs
ljmp
popf
cwtl
imul
add
sbb
shlb
jge
stos
clc
hlt
dec
movsl
fisttpl
mov
lds
dec
add
shl
sub
and
lret
scas
sbbb
inc
push
jp
mov
push
lea
xor
in
mov
mov
dec
clc
xor
inc
push
inc
sub
popf
and
push
lods
ret
inc
jb
mov
in
and
jns
fxch
out
std
ror
or
dec
das
mov
cltd
xchg
mov
not
jle
adc
lods
push
mov
filds
mov
loope
dec
sub
adc
std
add
call
push
sub
sub
rol
mov
ds
pop
or
cmpb
xchg
test
xchg
sub
dec
sbb
ret
pop
xchg
jecxz
or
mov
bound
mov
pop
mov
push
in
sti
or
lock
rorb
xor
fistpl
pop
jge
or
roll
test
push
fcmovnu
adc
mov
aam
push
jae
inc
add
adcb
dec
sbb
dec
pop
arpl
xor
scas
mov
jge
mov
movsl
pop
lahf
add
pop
adc
daa
jmp
or
sbb
roll
repnz
jg
js
popa
clc
pop
mov
iret
cmpsl
xchg
push
mov
mov
ljmp
call
jno
lods
outsl
adc
add
xchg
iret
pop
mov
femms
cmpl
add
insl
jp
push
sub
or
scas
inc
add
arpl
mov
mov
adc
cmpsl
fistpl
fwait
aaa
mov
or
cmp
cmp
mov
sbb
fstpt
lea
push
test
loopne
shl
testl
push
insl
insl
mov
mov
into
sbb
or
jns
loopne
cs
add
in
adc
mov
mov
sbb
add
mov
sbb
sub
and
xlat
icebp
icebp
mov
push
lods
sbb
les
xor
mov
mov
dec
jecxz
test
xchg
fisttpl
decb
lret
je
sub
ljmp
loopne
xor
dec
in
movsl
addr16
push
loop
mov
loope
sub
push
push
into
call
cltd
dec
mov
stc
jp
stos
ljmp
js
mov
jbe
icebp
push
in
sbb
jae
in
xor
xchg
pop
jno
loope
repz
sbb
mov
or
cmpl
and
lea
and
mov
xchg
xor
fldl
lsl
int
sbb
lret
lret
or
mov
cmpsl
mov
mov
xor
das
mov
pop
std
outsb
ret
cmpsl
ds
mov
movzwl
pop
cwtl
fmuls
cmp
je
pop
mov
insb
rol
sti
dec
push
sarb
cmp
inc
pusha
addb
xchg
add
xchg
test
lds
mov
sub
xchg
sbb
mov
lret
xor
ds
popa
xchg
sbb
xor
in
sub
dec
movsb
or
dec
lret
js
jnp
test
rclb
icebp
xor
sub
dec
sahf
les
sub
and
movsl
cmpxchg
xor
shlb
jmp
inc
push
and
icebp
add
push
mov
lret
jno
fs
jns
mov
cld
loopne
sbb
test
jns
int
inc
loop
aam
jmp
in
movsb
sbb
or
mov
xchg
add
xchg
notl
add
scas
shrb
fcos
and
sub
push
arpl
sub
nop
inc
push
in
push
out
ljmp
andl
lahf
mov
pop
fsubl
push
arpl
dec
in
into
pop
cmpsl
sub
lahf
dec
mov
or
data16
add
out
out
sub
sbb
pop
aaa
into
cmp
int
lret
je
mov
mov
sub
xchg
mov
sbb
sub
lahf
stos
inc
shll
xor
test
pusha
cwtl
das
mov
lods
dec
pop
aam
mov
hlt
jp
dec
dec
lret
fwait
jnp
das
xlat
enter
inc
mov
pop
jmp
mov
mov
in
and
vmwrite
jmp
or
push
lahf
out
ljmp
xor
jl
jns
cli
sbb
inc
int
pop
js
hlt
mov
xlat
rcll
and
xchg
stos
mov
lea
movsl
out
scas
mov
ret
cmpsb
xchg
in
add
shr
ret
test
sbb
cmp
in
ret
int
cmc
jg
adc
jle
dec
mov
jbe
and
xchg
ret
lcall
ret
sbb
jecxz
push
cmp
push
push
fistpl
sahf
push
mov
dec
sbb
leave
clc
iret
fcmovnu
cli
aad
cli
cmc
or
add
or
movsl
xchg
sub
add
clc
push
test
mov
cld
jnp
and
add
lahf
ss
fidivs
mov
xchg
sub
ret
js
xchg
push
ljmp
jno
xlat
mov
cmp
mov
cmp
mov
dec
mov
sub
ficompl
in
imul
pop
xchg
rcrl
pop
dec
idivb
notl
sar
sahf
lahf
cs
xchg
dec
sbb
push
daa
inc
sbb
stc
filds
sbb
xchg
idivl
dec
mov
nop
fdivrl
fdiv
insl
and
fisttpl
jb
cld
nop
movsl
lock
ds
mov
fbstp
pusha
mov
mov
mov
jp
jle
iret
data16
pushf
out
jl
xchg
mov
testb
mov
sbb
fiaddl
pop
mov
xchg
pop
lds
scas
stos
push
inc
popf
int
xchg
fisttpl
loop
rorb
lods
add
push
mov
loopne
add
adc
mov
divb
pop
movb
and
lahf
add
jecxz
cli
movsb
inc
loope
mov
fmull
rcr
jae
das
pop
rclb
js
pusha
and
fs
xchg
inc
adc
je
pop
fsubr
sub
sbb
and
lcall
xor
and
subl
shl
ret
sub
es
aad
sub
xchg
clc
push
mov
mov
pop
jmp
inc
fmull
adc
mov
in
sti
mov
into
add
into
xchg
lret
sub
mov
mov
gs
pop
mov
mov
les
mov
int
add
out
cmp
inc
dec
les
ja
outsl
xchg
sub
or
cli
stc
test
loopne
jecxz
xor
pop
in
and
mov
int
out
faddl
cmpsb
inc
js
push
movsl
sub
out
fwait
jle
outsl
outsb
cmp
cmp
mov
push
push
push
mov
mov
and
aad
int3
mov
mov
jns
cmp
gs
ljmp
in
jecxz
jl
stos
add
shlb
fstl
push
jp
lea
xor
cmp
jl
shlb
popf
xchg
pop
push
adc
int3
js
es
gs
pusha
mov
fldcw
or
lods
int
out
sub
mov
gs
jns
xchg
insl
jge
and
mov
arpl
xchg
push
mov
and
lds
sub
jmp
or
rcrl
xlat
cmc
dec
in
fbstp
sbb
xchg
mov
add
jl
nop
outsb
shll
inc
inc
andl
cmp
xor
stos
pop
aam
das
push
sbb
cwtl
out
add
adc
sub
cld
pop
hlt
dec
out
jge
sarl
lahf
sahf
jbe
mov
mov
pop
adc
push
insb
mov
add
insl
jp
cs
xchg
clc
sub
jmp
sbb
and
popf
inc
ljmp
jno
sub
lds
testl
test
lahf
mov
cltd
pop
mov
push
mov
leave
mov
movb
xor
push
testb
sarl
jbe
and
mov
mov
sbb
movsl
push
sub
test
jge
jmp
mov
cwtl
cltd
movsl
sub
mov
aad
lock
xor
sti
mov
hlt
ljmp
pop
xchg
cs
pop
mov
or
out
fimuls
stos
ds
add
das
int3
arpl
inc
es
xchg
jno
cmc
mov
out
push
loopne
cmp
stos
adc
dec
jb
mov
xchg
and
mov
mov
fildll
mov
mov
rorb
mov
fdivrs
lret
std
pop
cltd
xchg
ds
jle
clc
and
out
mov
inc
bound
ret
jno
xor
xor
adc
mov
jns
dec
mov
jbe
jns
rolb
push
enter
popa
std
gs
xchg
mov
jmp
xchg
adc
loope
in
fs
movsl
dec
and
mov
mov
mov
jo
or
cs
cmp
dec
pop
aad
jns
mov
add
pop
adc
mov
cmp
xchg
pop
test
ljmp
xor
lods
pop
fistps
cmc
jae
adc
mov
cvtps2pd
xchg
sbb
sti
or
test
bound
js
mov
std
icebp
lock
push
js
aas
lret
fwait
lock
xchg
cmpsl
mulb
inc
push
push
int3
dec
fldl
cld
push
pop
jmp
jns
jmp
push
pop
add
mov
loopne
int
mov
and
testb
or
cmp
test
mov
adc
or
test
test
stos
mov
fs
push
and
xchg
jmp
ret
pop
ret
pop
gs
repnz
push
sbb
dec
or
mov
inc
and
push
mov
shr
jl
jge
popl
test
jmp
or
mov
jns
and
add
addr16
xchg
cltd
sub
push
cs
daa
in
out
lahf
repnz
mov
add
lods
mov
out
jmp
int3
adcl
loop
adc
adc
gs
cmp
push
addl
push
lcall
mov
mov
test
ljmp
lea
sarb
rcrb
jp
arpl
incb
aaa
fimuls
and
mov
mov
or
call
cltd
pusha
iret
jae
jb
lock
xchg
push
jge
push
add
mov
mov
xchg
cmp
das
sbb
flds
jp
mov
aad
data16
xchg
test
cmp
xchg
fmul
pop
sbb
or
push
pushf
sbb
jnp
cmp
fwait
xchg
and
push
shlb
movsl
cli
cmpsl
sbb
gs
add
xorl
or
adc
cmp
test
xor
mov
ret
xchg
fs
das
das
pusha
data16
aad
out
enter
mov
mov
pop
and
lret
psrlq
and
jbe
add
cmp
mov
mov
inc
xor
pusha
out
test
aaa
or
push
adc
jb
push
xchg
mov
mov
cmp
sub
pop
sar
std
add
push
sbb
addb
inc
sub
out
mov
roll
int3
enter
data16
into
xchg
xchg
xchg
test
cmp
push
lret
push
jo
outsl
lret
adc
cld
xchg
shrb
sbb
xchg
xor
ret
in
movsl
xor
push
sub
es
inc
sbb
js
nop
and
sbb
mov
scas
jno
add
outsb
xor
push
or
push
mov
pop
fs
lea
push
outsb
and
adc
popa
or
cmp
cmp
xchg
sub
push
jmp
mov
sub
rolb
jo
test
test
xor
push
pop
in
repz
cmp
push
int
and
and
add
cmp
mov
out
ds
pop
mov
cmpsl
loope
fucomi
xor
addr16
repnz
cli
dec
out
add
es
rclb
dec
cmp
mov
imul
mov
mov
and
gs
fmull
cs
lods
popf
cmp
push
icebp
sbb
lret
inc
mov
imulb
xlat
adc
int
jb
stc
sub
dec
jp
jae
mov
pop
xor
xchg
add
stc
dec
and
push
lds
dec
ljmp
icebp
mov
sarl
and
rclb
addr16
inc
mov
and
int3
test
fmuls
or
outsb
pop
mov
int3
adc
arpl
call
lcall
pushf
jns
xchg
add
stos
lahf
or
rorl
add
inc
gs
psadbw
sub
adc
ljmp
jmp
inc
and
mov
push
scas
mov
push
fs
xchg
fs
mov
lods
dec
popf
pop
mov
adc
jno
mov
and
dec
xchg
or
es
mov
fnsave
push
aas
dec
arpl
mov
jne
movsl
cmp
frstor
or
sub
divb
test
mov
xchg
bnd
shll
sbb
and
loop
sub
inc
out
test
sub
lret
jmp
fnstcw
cmp
and
icebp
stos
ret
mov
les
cltd
dec
iret
leave
pop
mov
sbb
cmp
xor
mov
int
fimull
lds
test
adc
push
fs
mov
mov
inc
pop
faddp
push
jmp
pusha
mov
nop
jb
arpl
push
lock
stos
addl
frstor
push
ljmp
call
adc
inc
ds
sbb
loopne
xchg
jno
frstor
xchg
mov
or
mov
inc
jo
cmpsl
ds
gs
vmaxps
jg
xor
aam
push
rcll
test
mov
lret
or
fidivs
shr
int
sub
insb
push
jb
or
std
mov
les
or
loop
jecxz
sbb
pop
push
mov
jle
scas
xchg
sbb
iret
insl
jge
push
xchg
mov
xlat
inc
pop
mov
sub
mov
mov
fmul
leave
push
mov
mov
pop
insl
cmp
fnstsw
rolb
and
add
cld
inc
add
sub
dec
lds
xchg
pusha
sbb
xchg
fwait
pop
sub
mov
mov
cli
mov
out
dec
movsl
mov
lret
push
jne
and
aad
adc
std
cs
adc
add
cmp
popf
pop
xchg
test
dec
mov
cmc
addr16
bound
insb
inc
imul
stos
cmp
addr16
scas
mov
iret
xor
jb
addr16
pop
lret
add
sub
xchg
inc
pusha
mov
sub
sub
mov
mov
dec
dec
imulb
fstl
ss
sub
pop
std
add
inc
aaa
in
add
mov
pop
cltd
xor
cmpsb
adc
sbb
and
adc
je
jmp
das
outsl
sbb
cmp
pop
mov
jge
jb
out
push
roll
call
and
xlat
pop
sub
stos
cmp
xlat
xor
mov
mov
stc
add
adc
int3
mov
push
adc
aas
repz
iret
dec
nop
repnz
lcall
and
xchg
inc
mov
int
push
or
test
out
jge
aaa
sub
sbbb
pusha
adc
cmpsb
jae
mov
pusha
and
or
fstpt
bound
bound
popf
lds
outsl
js
sbb
xor
dec
cmc
and
and
xor
bound
mov
fnstsw
adc
push
inc
fs
inc
push
xor
pop
push
sbb
lods
mov
cmc
lret
push
xor
push
jo
mov
mov
popa
xor
jg
imul
push
ret
push
and
fistps
inc
loopne
mov
test
movsl
push
jecxz
or
push
cmpsl
ja
pusha
shrb
nop
push
cld
mov
into
push
test
inc
stc
and
popa
jns
sbbb
lock
mov
fdivs
push
mov
out
lea
mov
js
sbb
loop
xchg
push
and
pop
stos
inc
sub
insl
inc
pop
or
jl
shll
insb
adc
sarb
stc
and
push
paddq
and
lods
sar
js
scas
scas
rcrb
jl
or
or
mov
mov
enter
lret
sbb
xor
adc
dec
mov
cmp
cmp
sbb
adc
mov
cmp
pop
negl
inc
sbb
inc
lret
xor
cmp
ret
sub
sbb
outsl
pop
push
lods
xchg
sbb
sub
hlt
cmp
or
fiadds
push
mov
mov
dec
sbb
es
rcrl
xchg
sbb
ret
xlat
dec
cmp
andl
sub
fmull
cmpsb
xchg
les
ds
xor
cmpl
test
repnz
test
test
movl
xorb
push
xlat
iret
and
pop
mov
or
and
or
pop
stc
and
out
fsubl
and
jmp
or
mov
and
jns
adc
xlat
fsubs
cmp
adc
data16
jl
mov
lcall
pop
fadds
inc
dec
out
and
movb
testl
add
jne
addr16
add
fsubr
and
jne
nop
popf
repnz
es
cvtdq2ps
add
aaa
jbe
cmpsw
xchg
mov
cwtl
repz
and
out
arpl
aad
int3
mov
cs
xchg
sahf
lea
lahf
sub
in
xor
repz
gs
es
mov
and
mov
insl
lret
in
lods
vpaddsw
lcall
stos
add
or
jno
sbb
incl
popa
lods
in
das
mov
dec
scas
test
jl
pop
sub
sbb
subl
pop
jno
cltd
outsb
and
xchg
xchg
mov
outsl
sub
aad
repnz
lcall
fadds
nop
arpl
mov
loope
and
sbbb
pop
aas
dec
movsl
mov
mov
jmp
adc
outsb
push
out
int3
mov
jbe
dec
pop
lahf
push
stos
aas
jnp
lahf
push
ficoml
push
mul
mov
fnstsw
push
sarl
push
push
test
repnz
imul
push
call
or
jle
shrl
aad
pop
js
mov
popf
sub
cmp
adcl
scas
inc
add
stos
inc
inc
int3
lret
das
jae
xor
test
cmp
orb
popa
shr
jae
or
adc
fwait
or
add
mov
or
mov
jl
or
pop
mov
dec
add
sub
xchg
mov
add
mov
mov
cmp
int
lock
imul
pop
bound
sbb
aam
and
push
outsl
int3
hlt
adc
lea
scas
test
sbb
lods
mov
les
add
mov
and
add
stos
xchg
test
adc
dec
mov
adc
int
js
add
pop
ljmp
pop
mov
test
sub
ret
pop
mov
fucom
jl
mov
push
popf
popa
psubsb
sbbb
mov
out
xchg
aam
lods
add
fnstenv
or
cmp
lods
pop
xchg
pop
fnstenv
mov
jmp
jmp
lods
sbb
xchg
icebp
add
jno
das
push
lods
pop
les
jb
and
dec
rclb
loopne
xchg
pop
inc
ret
outsl
das
adc
and
ficomps
mov
das
out
xchg
xchg
add
jmp
xchg
cmp
xlat
call
or
into
push
js
add
aaa
mov
fs
pop
call
fidivl
mov
stc
sub
jl
in
fmull
scas
dec
and
cmp
daa
mov
inc
insl
inc
arpl
cmpsl
cmp
mov
sub
jp
ffreep
cmp
mov
inc
insl
cmp
and
ds
pusha
xchg
pop
mov
pop
pop
xor
lock
imulb
pop
data16
sbb
push
inc
out
cmc
hlt
pop
gs
or
rcrl
test
mov
arpl
fdivrl
cmpb
cmc
mov
mov
sarb
push
push
mov
xchg
cmp
push
jge
mov
jge
loopne
ja
push
sbbl
lea
add
push
pop
frstor
arpl
cmp
add
mov
psubusb
lahf
dec
sbb
aaa
dec
in
es
ret
add
add
movsl
daa
push
push
mov
hlt
mov
test
dec
adc
add
pop
stos
sbb
fimuls
test
mov
sarl
cld
pop
and
cld
sub
jg
cmp
jmp
out
xor
jbe
arpl
or
push
mov
push
aas
mov
insl
and
aas
es
mov
push
pop
outsl
mov
mov
in
aad
inc
leave
adc
push
cli
sub
shrl
cs
adc
inc
fcmovbe
lcall
xor
popa
dec
or
rep
lret
vhaddpd
mov
xorb
ror
mov
lret
pop
or
push
out
cli
add
pop
repz
enter
addr16
imul
sbb
ds
aas
fstpl
pop
outsb
lahf
adc
or
push
mov
imul
lds
or
adc
mov
inc
sbb
mov
jl
xor
xchg
sub
push
xchg
adc
fldenv
and
or
jbe
cmp
pop
test
inc
fs
lods
add
enter
lahf
rorb
inc
push
sub
cli
xor
into
sbb
or
sbbl
imul
jbe
mov
stc
popf
cmpsl
fxch
filds
or
out
push
pop
jae
in
cmpsb
jbe
xlat
dec
js
mov
lds
subl
stc
dec
mov
jg
add
mov
push
jae
xchg
imul
fstpt
mov
std
cltd
sub
lcall
je
icebp
lods
dec
sub
jp
mov
jle
dec
roll
jo
data16
jle
aas
mov
sbb
jae
pop
mov
inc
adc
pop
lea
pop
into
clc
stos
insl
xchg
pop
lret
push
icebp
pop
cmpl
orl
in
std
aas
dec
mov
xchg
adc
jp
jo
fsubr
push
movsb
mov
xchg
insl
loopne
cmp
sub
and
push
xchg
ret
scas
imul
test
ja
pop
stos
out
shlb
inc
and
xchg
xor
mov
inc
in
push
sbb
cmp
sbb
inc
fdivp
jnp
sbbb
sti
aam
mov
mov
push
out
mov
sahf
mov
adc
xchg
mov
rorl
sub
loopne
icebp
push
ljmp
pop
loop
outsl
loopne
mov
sbbl
scas
loope
push
and
cmpsb
aam
cltd
sub
and
shll
mov
cmp
dec
sbb
jp
add
fstl
pop
and
inc
sbb
inc
int
loope
imul
shll
xchg
inc
mov
imul
outsl
inc
in
rcrb
dec
mov
sbb
pusha
jp
or
cltd
bound
cmp
or
test
push
in
fnsave
in
cld
in
cs
stos
jg
das
lds
sbb
dec
dec
aam
mov
adc
mov
cli
loop
ss
jp
ds
cmpb
pop
or
xor
repnz
and
adc
dec
cltd
add
xlat
mov
xor
mov
lea
and
test
push
pop
xchg
mov
mov
icebp
mov
add
std
and
mov
rclb
push
push
and
pusha
xchg
sbb
sbb
pop
push
repnz
sbb
add
add
sub
cmpsl
ss
cltd
jp
enter
pop
jmp
scas
jno
int
cwtl
cmp
daa
out
mov
jl
es
ja
push
outsl
in
xchg
jb
data16
jp
arpl
jmp
push
insl
ficoml
clc
imul
cmc
shufps
xchg
sbb
xchg
jns
mov
insl
mov
adc
fisubl
cmp
xlat
push
jl
push
lea
pop
adc
cld
sub
and
ror
push
sbb
dec
scas
mov
sub
in
pop
out
test
out
push
cmpsb
jbe
fdivs
test
pop
loope
adcl
sti
es
out
or
jmp
dec
in
cmp
loope
xchg
cmc
mov
adc
stos
xor
or
push
adc
test
scas
add
test
dec
xor
jne
rorl
or
jl
push
jmp
mov
adc
aaa
pop
icebp
aam
mov
lcall
xchg
pop
out
test
je
imul
push
and
test
xlat
icebp
lock
mov
add
cmpsl
cmp
jbe
add
fwait
cmp
dec
call
adc
xor
mov
pop
mov
mov
cmpsb
pusha
sti
pop
or
notl
pop
add
fnstenv
mov
mov
shrb
inc
dec
out
std
jns
mov
sbb
or
add
cmp
mov
dec
lret
arpl
xor
daa
fs
pop
sbbl
pusha
test
xchg
gs
mov
mov
push
sbb
mov
imul
popf
sahf
sbb
jo
jns
aas
ja
jno
add
out
pop
aad
aas
or
jp
push
jae
xor
sub
inc
fildll
int3
mov
push
cwtl
add
cs
aam
imul
les
mov
cmp
jne
sub
push
inc
in
xchg
pushl
mov
mov
test
and
loope
das
and
push
adc
cmp
mov
stos
insl
push
repz
and
mov
imul
pop
mov
call
scas
push
in
aaa
pushf
cmp
mov
xchg
sub
push
dec
cmc
pop
insb
xchg
sub
negl
call
xor
lds
lret
shlb
xchg
sub
divl
iret
dec
sub
icebp
cmp
bound
push
jmp
or
jae
jno
int
aas
push
pop
xor
xor
jge
adc
shlb
cltd
sub
jo
and
inc
es
lcall
inc
sub
xor
push
test
int
sbb
add
adc
inc
sbb
jae
jg
stos
xchg
or
repz
mov
lahf
dec
int3
sub
and
gs
lret
mov
and
fidivrs
test
cmp
jg
cmp
sub
sar
dec
adc
jnp
or
pop
push
push
or
push
loope
inc
adc
cmpsl
fidivrs
int3
fimuls
fidivrs
cmpsl
stos
mov
sbb
mov
mov
adc
aas
pusha
jno
aaa
into
xor
push
push
pop
imul
call
clc
les
xchg
jmp
out
inc
inc
loop
lret
iret
sahf
jno
fsubrl
loope
ret
and
mov
int3
sub
jecxz
jecxz
xchg
leave
sbb
mov
dec
rorl
in
mov
push
iret
je
mov
fnsave
pop
inc
pop
mov
xchg
mov
xor
jg
fidivrl
andl
notb
testb
jle
lods
in
mov
aad
or
stos
xchg
ljmp
ljmp
test
mov
repnz
xchg
sub
jg
inc
lds
inc
lock
jo
lcall
mov
pop
inc
push
aam
jg
aam
fnstsw
subl
inc
inc
int
popf
ja
into
jbe
lcall
arpl
lods
shrl
xchg
add
cmc
pop
push
imul
cli
loopne
ljmp
cwtl
movl
fucom
jmp
add
into
fcmovne
mov
adc
cltd
lret
dec
movsl
and
rclb
sub
outsl
jb
cltd
jp
into
fcmovu
sub
add
lods
xor
test
jmp
pop
ret
shrl
push
imul
lret
or
loopne
insl
pop
xchg
pop
or
add
push
stos
or
pop
scas
andb
lds
jmp
push
xchg
sar
or
pop
fsubs
mov
xor
outsl
jl
ficoml
ljmp
add
jl
pop
mulb
popl
repnz
stc
cwtl
sub
movsl
sub
jbe
xchg
aas
push
dec
pop
jbe
notl
repz
outsb
stc
icebp
inc
cwtl
stos
sbb
adc
lret
adc
sarl
jg
icebp
inc
dec
adc
pop
sahf
fs
loopne
stos
adc
and
mov
in
pop
pop
sbb
cmp
jl
mov
aam
imul
dec
rol
cwtl
sub
pop
mov
xlat
fists
xchg
in
xchg
dec
sete
cmc
adc
adc
jb
ljmp
fcompl
subl
cld
xchg
pop
mov
jns
loop
ret
outsl
repz
mov
movsb
ja
mov
add
dec
call
adc
lods
sbb
dec
movsb
add
js
bound
test
push
sbb
or
imul
outsl
xor
divl
out
dec
jbe
in
cmp
mov
xchg
mov
mov
mov
pop
arpl
dec
aas
jp
mov
xchg
iret
fcmovnb
cmpsl
push
sbb
xchg
ficoms
lahf
scas
xlat
je
jo
mov
or
push
dec
push
sbb
add
pop
push
jmp
push
push
popf
arpl
mov
adc
push
xchg
mov
sbb
icebp
insb
fbstp
hlt
ds
lret
addr16
jp
push
jmp
stos
ja
jnp
es
pushf
inc
and
jp
mov
push
dec
ja
mov
aad
fbld
out
cli
and
cmp
loop
pop
and
jo
adc
adc
addr16
loope
arpl
xchg
adc
fimull
loopne
fsubrs
jle
mov
lret
adc
push
xor
push
xchg
xor
movsl
mov
xchg
xchg
and
push
pusha
adc
mov
and
aaa
mov
hlt
fnstsw
and
mov
jns
and
out
add
and
xchg
and
adc
in
pushf
cli
mov
pushf
add
mov
jle
rcrl
clc
mov
or
cmp
js
dec
daa
pop
into
gs
xchg
imul
shlb
xor
dec
repnz
fldt
jg
cltd
mov
sub
fcmove
mov
dec
jecxz
imul
xor
xor
adc
imul
lods
and
inc
cmp
mov
rcrb
pusha
mov
ds
stos
xchg
dec
pop
mov
lret
popa
sbb
jns
cmp
lea
lods
jp
pop
jmp
cld
jmp
sti
fwait
cwtl
mov
daa
mov
enter
loopne
ds
cmp
or
leave
cmp
push
push
cmp
xorb
add
sbb
dec
dec
lcall
inc
dec
or
mov
sbb
fcmovnu
data16
out
std
les
lods
mov
sub
hlt
mov
sub
sub
ret
dec
dec
cmc
sub
movsb
inc
and
and
cs
jge
ss
mov
clc
jg
cmp
jecxz
jbe
add
pop
push
ja
lahf
outsl
jmp
outsl
and
inc
pop
js
out
push
cmp
pushf
push
lods
push
xchg
in
repnz
mov
sub
sub
pop
lock
add
jne
out
xchg
sti
rolb
stos
xchg
sub
mov
popf
cs
adc
xchg
pop
leave
imulb
ds
and
fildl
test
adc
and
add
mov
cmpsb
aaa
and
je
rcrb
jo
adc
mov
js
xchg
mov
push
repz
adc
cmp
pop
outsb
ss
cmp
cmc
addr16
fs
inc
pusha
jbe
add
aam
lods
ljmp
call
jns
xchg
add
mov
mov
popa
jl
jle
inc
mov
fnstenv
sbb
pop
movsl
adc
aad
jecxz
add
dec
inc
imul
outsl
mov
mov
test
es
flds
in
int3
inc
push
add
push
in
das
xor
inc
push
cwtl
dec
inc
xlat
cmpb
stos
jns
test
and
adc
cld
adc
mov
pop
mov
push
outsb
sub
ja
clc
inc
xchg
xor
in
clc
adc
xlat
inc
cmpl
into
push
or
addr16
not
imul
adc
popf
jno
or
rcrl
xchg
fidivrs
int
iret
xor
test
out
call
dec
mov
inc
fisubs
dec
and
leave
xchg
sub
push
sub
hlt
mov
lock
mov
push
mov
adc
or
inc
push
adc
in
out
mov
or
xchg
pmovmskb
mov
mov
jmp
ficompl
jp
cltd
mov
sub
pop
mov
mov
inc
mov
cmc
sbb
jp
xor
mov
cwtl
sub
add
es
sub
dec
inc
pop
sbb
jg
fucomi
dec
xchg
daa
outsb
mov
cmpsb
dec
addr16
jle
lcall
ficoml
stc
push
imul
imul
or
daa
inc
test
inc
and
out
lds
ja
ds
inc
mov
sbb
lahf
dec
xchg
add
jno
or
push
sysenter
pop
je
orl
push
and
icebp
aas
out
adc
or
scas
adc
shlb
pop
push
inc
gs
mov
mov
dec
fmulp
jo
leave
addr16
adcl
cmp
lock
stos
nop
jno
mov
xchg
ljmp
pushf
and
test
jae
jb
pop
sub
fimull
jnp
mov
into
adc
inc
jne
xchg
jb
pop
push
lods
mov
and
adc
lods
addb
mov
xchg
pop
cli
lret
nopl
sti
push
int3
cmp
cli
jne
test
push
iret
shl
mov
in
std
adc
shl
pop
push
xor
push
shll
xor
jl
out
gs
add
mov
sahf
lods
push
jl
cmp
aaa
jbe
imul
out
popf
mov
fs
lods
shrl
outsl
pop
inc
repnz
or
xor
and
push
lahf
adc
es
nop
ja
scas
sub
aas
cs
inc
lcall
sub
push
dec
add
sbb
roll
push
in
cmpsb
dec
fbstp
les
sahf
add
mov
icebp
shrb
cmp
inc
subl
scas
xchg
ret
and
or
jno
fwait
out
negl
sbb
mov
cmp
out
mov
pop
cmp
cltd
dec
mov
jmp
pop
mov
loope
push
cmp
mov
movsb
icebp
fidivl
mov
mov
dec
stos
inc
rolb
fs
out
mov
push
ds
or
push
aas
push
in
push
push
loopne
nop
inc
out
jg
call
inc
fadds
inc
bound
pop
ds
jno
ret
inc
pop
mov
xlat
mov
mov
pop
in
xchg
es
stos
inc
jle
adc
pop
js
cmp
lds
mov
fsubrp
inc
jne
sub
insb
ds
pop
inc
mov
push
addb
ljmp
sub
lds
push
sbb
shr
orl
dec
and
mov
in
loop
dec
dec
rolb
jge
push
xlat
or
mov
dec
idiv
mov
inc
jl
pop
mov
mov
pop
xlat
mov
pop
adc
icebp
cs
sub
adc
or
xchg
js
movd
rorb
cmp
sub
xor
cmp
mov
loope
or
enter
stos
inc
push
xor
iret
dec
jge
repnz
das
dec
arpl
jl
rcrb
mov
push
lods
loopne
test
subb
xor
lock
pop
daa
mov
sbb
pop
test
in
imul
xchg
inc
jnp
ja
pop
cmp
hlt
xchg
shl
sub
cmp
lahf
mov
dec
sbb
pop
inc
inc
mov
out
mov
test
dec
or
sub
std
pushf
loop
test
idivb
test
inc
push
arpl
es
popf
push
dec
into
lahf
jns
push
hlt
ret
cltd
fcom
idivb
adc
test
mov
shrb
inc
es
in
xchg
in
pop
jmp
fisttps
jmp
push
addr16
add
sarb
mov
adc
cmpsb
call
jnp
mov
sub
fistl
imul
and
aad
lods
mov
loop
cmp
sahf
lret
cmc
or
jnp
es
xor
jnp
sbb
push
arpl
mov
xor
xor
mov
jl
pop
out
push
in
mov
add
jno
and
into
pop
jl
inc
fnsave
mov
pop
inc
sbb
sub
dec
jg
cmp
add
add
sub
jnp,pt
adc
jb
stos
inc
push
je
mov
push
hlt
sub
shrb
jle
dec
movsb
scas
pop
pop
cld
inc
sub
test
xchg
mov
lea
cmpsl
inc
loopne
add
inc
dec
sub
rcr
lret
inc
les
mov
sahf
and
lock
loop
cmc
in
shll
jge
daa
dec
dec
loop
dec
push
ljmp
test
pushf
mov
pop
stos
int3
jae
xchg
movsl
test
popf
stc
lret
push
xor
dec
add
dec
nop
sbb
pop
pop
scas
dec
sbb
mov
add
int
xor
fwait
ret
insb
mov
mov
pop
jb
lret
jmp
pop
fbstp
shrl
mov
and
hlt
ss
movsl
es
imul
push
mov
popl
fmulp
jg
fnstcw
mov
xor
xchg
mov
insb
fistl
lock
or
loope,pt
and
out
das
jge
xor
inc
jnp
cmpsb
inc
mov
aas
pop
jecxz
or
dec
pop
mov
sbb
call
xlat
jae
dec
xchg
andb
mov
outsb
inc
fmull
jl
dec
jns
mov
and
sub
mov
push
shlb
jge
jmp
mov
add
addb
mov
sbb
test
add
dec
insl
cld
xor
outsl
push
and
in
icebp
pushf
je
gs
pop
ror
data16
cmpsl
out
jp
in
orl
inc
adc
into
fistps
ds
jle
adc
adc
or
cmp
adc
fucomp
arpl
fbstp
std
jl
adc
inc
xchg
mov
inc
cmpsb
test
push
sbb
add
xor
cmp
movsb
mov
arpl
jle
push
test
outsl
mov
mov
imul
jae
and
sbb
push
jne
fwait
cmc
mov
lret
pop
scas
cld
in
cmpsl
ds
mov
pop
std
mov
arpl
pop
lock
and
jae
xor
dec
mov
repnz
outsl
push
xor
jp
out
hlt
mov
addl
inc
adc
enter
out
sbb
mov
sbb
jb
mov
inc
xchg
adc
xor
shlb
sbb
mov
add
pop
push
mov
xchg
mov
jge
and
add
out
sbb
dec
mov
fs
fcoml
scas
or
push
push
orb
dec
pop
or
call
jmp
pop
mov
xchg
imul
out
jp
or
and
xor
xchg
jmp
es
sahf
push
iret
enter
subl
into
mov
lds
inc
mov
pop
pop
cmp
scas
dec
aad
scas
rorb
fcoml
sbb
mov
cmp
and
inc
out
xchg
push
movsl
push
fnstenv
ljmp
jb
jo
add
jle
inc
test
inc
int3
fdivrl
xor
mov
aam
repz
mov
ljmp
jno
and
dec
jae
or
dec
dec
shrb
fwait
test
mov
in
sti
push
and
insl
inc
adc
dec
or
mov
aam
in
jge
out
stos
cmp
mov
pop
aaa
mov
mov
mov
enter
nop
call
inc
and
mov
push
mov
clc
jl
pusha
sbb
sub
movsl
dec
or
ret
popa
ljmp
or
rorl
sbb
mov
out
inc
cmc
sub
mov
jno
mov
pop
push
mov
lods
iret
mov
data16
pushf
stos
lret
bound
fyl2xp1
int3
popa
jp
sbbl
dec
dec
stc
jge
add
jb
stc
mov
jge
and
stos
mov
stc
in
dec
dec
cmp
sahf
inc
sbb
and
or
lret
es
hlt
faddl
sub
pop
lahf
push
out
xchg
rcrl
or
vpshuflw
arpl
cmp
mov
sti
dec
xchg
cs
std
xchg
into
pop
mov
rcll
mov
fs
jcxz
out
mov
aaa
jg
repnz
cmp
dec
popa
adc
gs
push
jae
mov
ja
xchg
mov
inc
or
popl
sub
mov
addr16
fcoms
loop
mov
jge
movsb
insl
dec
das
cmp
es
pop
dec
dec
fisubl
int3
insb
push
lods
pop
jb
pop
movsb
jg
bound
push
insl
add
adc
imul
sbb
jge
jb
or
jl
outsl
push
cmp
pop
inc
addr16
cmp
fldt
lret
ja
icebp
addr16
dec
stos
mov
test
adcb
call
mov
sbb
loop
shrl
pop
mov
jg
ret
inc
lods
cli
xchg
loopne
xchg
sub
add
mov
je
dec
test
fimuls
sahf
sbb
cmpsl
arpl
and
jl
lcall
push
in
stc
nop
push
ja
dec
cmpsb
or
lret
cmp
and
inc
pop
out
jbe
xchg
sub
xchg
mov
push
in
xlat
xchg
sub
xchg
mov
sbb
test
clc
mov
pop
ja
pop
cmpsb
or
adc
mov
mov
push
popf
pop
mov
clc
cmp
push
lods
pop
fs
xchg
insb
push
jmp
mov
jb
repz
sub
or
std
stos
sub
dec
xchg
sub
jp
xchg
stos
cli
xchg
sub
decb
dec
jnp
test
icebp
rol
stos
cmc
loope
movlps
xor
inc
xor
bound
cmpsl
mov
les
vpaddw
dec
pop
xchg
mov
lods
inc
hlt
lods
sbb
ficoms
into
xor
mov
testl
mov
ror
and
loope
loope
push
stos
inc
dec
aaa
adc
lods
cmpsb
mov
lods
stc
fidivl
sbb
je
pop
call
xchg
mov
ret
repz
iret
dec
out
testl
cmp
mov
pop
sbb
out
or
adc
jae
in
mov
lahf
or
jne
xor
mov
inc
jmp
nop
sbb
iret
data16
push
out
adc
cmc
sbb
scas
inc
or
adc
adc
in
sbb
lahf
or
jae
adc
mov
in
add
or
mov
loop
fistpl
out
aas
adc
add
fistpll
or
adc
pop
adc
pop
mov
ret
test
mov
dec
shlb
mov
lcall
sub
icebp
mov
mov
repz
int
mov
jno
lods
mov
aas
cltd
cld
mov
sub
cmpsl
orl
lds
imul
jb
push
out
mov
outsb
add
jae
mov
sub
mov
jae
lds
mov
call
jl
stc
cmp
sub
mov
push
jns
fidivs
scas
leave
pusha
fdivrp
fidivs
dec
fnsave
mov
dec
stc
lods
inc
sub
mov
mov
pop
cmc
sub
int
xor
loop
into
adc
push
in
cmp
xchg
cs
ljmp
mov
sub
jle
shlb
mov
mov
push
lods
lcall
xchg
add
pushf
and
insb
pop
xchg
inc
fadd
add
jne
push
sbb
pop
xchg
pop
test
lds
testl
aam
mov
jno
dec
loope
test
cli
faddl
dec
in
dec
push
in
and
mov
lret
pop
push
aam
jecxz
movsl
adc
mov
clc
loop
or
lcall
aaa
pop
xor
cltd
jne
int3
mov
push
das
xchg
jno
out
test
push
iret
xchg
sub
movb
fs
in
aam
sahf
mov
iret
pop
in
xorl
jno
mov
xchg
sub
or
jge
ja
scas
inc
add
xchg
sbb
daa
or
push
pop
hlt
dec
push
xlat
outsb
sbb
pop
push
xchg
pop
hlt
enter
dec
pop
jmp
mov
sbb
or
push
pop
hlt
dec
pusha
leave
pusha
xchg
fistpll
rorb
push
jl
dec
addr16
xchg
shll
lcall
jno
call
in
mov
xchg
push
and
out
fidivs
psubusw
test
add
jo
add
mov
pop
sub
shlb
in
imul
ljmp
fdivl
lahf
ss
pop
cmc
adc
inc
fsubrs
or
inc
outsl
outsl
push
popf
loope
mov
mov
sbb
push
inc
xchg
test
xlat
lret
bound
mov
jno
sub
add
adc
jge
test
pop
mov
std
xchg
push
ret
push
pop
pop
js
jp
cmp
xchg
push
in
pusha
sbbb
nop
adc
pop
pop
repnz
xchg
test
sub
pop
pop
push
lods
mov
call
int
daa
mov
or
pushf
sti
lahf
testb
push
mov
mov
mov
add
inc
fisttpll
fidivl
aam
mov
cltd
mov
mov
sbb
rorb
jle
inc
inc
shlb
fisubs
dec
fnsave
mov
jecxz
mov
push
movsl
lcall
ret
movsb
cmp
scas
test
fisubrs
mov
inc
enter
pusha
imul
mov
ja
xor
bound
or
outsb
mov
rclb
mov
or
or
lock
cmc
call
or
jno
cltd
pop
sbbl
lock
lods
call
or
in
bound
lds
mov
sti
loope
add
xor
bound
pop
lock
ja
das
stc
xor
push
pop
mov
dec
jnp
jle
sub
cs
fisubrs
repz
dec
pop
jbe
inc
jbe
jae
pop
jb
xchg
mov
add
in
fcoms
dec
icebp
mov
adc
mov
mov
loopne
sub
insb
popa
mov
mov
loop
add
flds
sbb
cmp
mov
mov
fistpll
adc
aas
push
pushl
sbb
fs
in
test
andl
push
clc
sub
imul
cmpsl
dec
test
cmpsb
fdivrs
iret
or
sub
outsl
pusha
push
iret
inc
test
mov
pop
notb
mov
dec
loop
ds
pop
sub
cmp
rep
negl
and
in
inc
fstpl
mov
jg
dec
setae
ds
montmul
cmpsb
push
jecxz
add
sbb
ds
mov
pop
jecxz
imul
sub
mov
sti
xchg
add
or
push
call
int
in
add
lret
scas
push
sub
pop
shll
jl
loope
stos
insb
mov
push
mov
cmp
push
aas
inc
mov
pop
xor
ja
add
cmp
inc
nop
jns
xor
cmp
orl
jg
nop
dec
mov
aam
inc
orl
pop
outsb
mov
mov
pop
rcrl
adc
call
mov
sbbb
push
push
decl
adc
mov
iret
xor
stc
daa
mov
test
sub
mov
out
sbb
mov
shlb
test
xchg
cmp
jo
mov
inc
test
inc
push
iret
pop
push
mov
repz
cmp
xor
or
imul
sahf
xor
jns
icebp
mov
ds
inc
jl
sub
cmp
sbb
dec
mov
jmp
and
ljmp
outsl
dec
lock
and
insl
out
lahf
mov
aaa
lock
jb
mov
scas
inc
inc
mov
scas
je
orb
daa
mov
add
add
or
hlt
xor
sbb
out
shlb
mov
divb
mov
loopne
dec
neg
push
loop
jge
xor
test
out
dec
mov
stos
popf
xor
cmp
fwait
cli
and
rclb
out
xchg
cmpsl
cmp
or
xor
jmp
fldl
xlat
jmp
cmpsb
inc
test
xor
bound
pop
arpl
dec
cmp
out
mov
mov
ret
pop
sarl
jno
ljmp
out
enter
loopne
push
fsubp
cmp
pop
iret
iret
push
rorl
sub
ret
cmp
cmpsb
or
cwtl
call
or
jnp
and
lock
cld
test
cld
xor
icebp
in
int
mov
leave
rcrl
test
lock
sbb
push
lahf
cmpsb
push
scas
sbb
dec
in
shrb
sub
shlb
sti
or
loopne
push
jae
movups
xor
iret
or
xor
adc
arpl
ret
cmp
dec
sarb
adc
arpl
testb
in
push
mov
lods
cmc
gs
lret
out
rcl
loopne
ret
out
sbb
adc
pop
xchg
mov
mov
fnstsw
and
mov
std
cmp
rcrb
paddsw
in
orl
pop
pusha
pop
dec
aad
sub
loopne
cmpsb
outsl
mov
aaa
mov
gs
mov
aaa
sub
cmp
js
fdivl
push
and
loopne
in
sbb
lcall
sbb
push
popf
jo
test
adc
mov
ja
popl
or
sbb
and
ja
adc
and
fs
pop
ss
mov
in
cld
stos
xor
mov
inc
mov
pop
xor
test
push
stos
test
push
or
test
mov
push
or
movsb
inc
arpl
aaa
push
push
mov
bound
call
xor
popf
incb
loopne
cmp
cmp
clc
xchg
in
frstor
inc
mov
into
dec
dec
lea
pop
jo
insb
xor
jp
xchg
pusha
mov
and
sub
ja
testl
xchg
xchg
jns
and
fs
inc
jecxz
clc
adc
fiaddl
sbb
mov
nop
cmp
and
push
pusha
lods
sub
or
test
jle
cmp
xchg
jp
lods
stc
jp
out
iret
stos
pop
out
loopne
ret
lds
sbb
out
mov
or
imul
cwtl
mov
cmpl
fidivs
xchg
push
stc
adc
and
push
add
lds
lods
fs
mov
xlat
dec
fwait
je
mov
movsb
insl
dec
das
jno
mov
sbbl
pop
rcll
push
add
out
mov
inc
adc
mov
gs
imul
push
out
loop
jnp
jb
lea
push
dec
les
jns
cmp
pop
fisttpl
mov
cld
xchg
jp
and
jnp
push
js
mov
and
mov
xchg
dec
loope
inc
bound
mov
jno
sbb
pop
sarb
in
das
loope
out
test
jmp
test
mov
in
pusha
mov
mov
or
or
shrb
mov
sbb
add
fidivl
push
xchg
dec
mov
jle
xchg
xchg
jmp
mov
pushf
stc
movsl
push
jnp
test
pushf
fiadds
loope
pop
jae
cmp
and
lcall
gs
dec
imul
jb
push
jne
icebp
cmc
ja
repnz
push
add
out
test
fidivs
sbb
ljmp
adc
das
xor
xchg
imul
inc
cmp
jge
adc
xchg
jle
arpl
inc
xor
mov
mov
popa
lock
leave
out
adc
sbb
push
add
test
divl
shlb
into
inc
jne
bt
jmp
fwait
mov
jmp
adc
push
dec
in
jo
inc
mov
mov
dec
loope
stos
sahf
xchg
ud1
in
push
mov
adc
inc
mov
cmp
sub
ret
jbe
fidivl
or
inc
mov
jp
jae
dec
in
xchg
es
adc
ljmp
repz
ret
dec
add
sahf
or
and
test
adc
in
and
and
pusha
push
out
jno
jb
sbb
cmpsl
mov
insb
shrb
enter
pop
mov
mov
dec
jo
sahf
push
insb
lret
pop
jp
pusha
inc
mov
sub
scas
test
push
or
mov
pop
ret
enterw
aam
fimull
lock
adc
add
daa
mov
rorl
jecxz,pt
fimuls
adc
or
push
push
ljmp
add
push
lcall
jbe
lods
xor
mov
leave
xchg
js
push
enter
ds
inc
mov
incb
pop
les
fwait
push
in
dec
das
dec
mov
pop
add
mov
inc
sahf
cmp
cmp
int3
jg
lods
imul
pusha
mov
int3
jb
int
inc
mov
mov
add
xchg
xchg
dec
xchg
clc
push
dec
rcrl
cmp
pushf
das
and
adc
ljmp
push
jecxz
nop
leave
mov
and
imul
xlat
pop
pop
int
movb
sbb
and
push
push
iret
outsb
jmp
sbb
cmp
mov
adc
xchg
adc
lcall
std
adc
ret
lods
sub
or
aaa
into
or
orl
push
cmp
sub
int3
add
jmp
cmpsb
or
cli
sbb
repz
in
xchg
sbb
inc
lahf
cmp
pop
lds
movsb
movsl
ficoms
test
jb
push
movsb
push
enter
sub
sub
xchg
in
out
push
loop
dec
loop
jo
mov
xchg
adc
in
mov
fldt
inc
push
adc
scas
pop
sahf
push
stc
sub
mov
insb
and
mov
pop
xchg
dec
mov
pop
andb
jg
adc
stos
dec
mov
pop
hlt
daa
leavew
gs
rolb
arpl
hlt
jo
mov
mov
leave
mov
and
cmp
jecxz
or
mov
and
xchg
adc
and
fsts
push
mov
fsubrl
dec
aad
pop
in
sub
sarb
sub
imul
dec
loopne
in
test
sub
and
jl
leave
inc
shll
inc
mov
fldenv
push
in
test
mov
into
sbb
decl
mov
xchg
xchg
pop
fwait
insl
lahf
push
std
adc
or
sahf
dec
mov
cmp
push
andb
aas
mov
push
add
test
cmp
sub
mov
out
or
and
mov
stos
aaa
jo
test
loope
push
sbb
and
int3
mov
push
add
mov
jmp
jmp
icebp
dec
imul
inc
jg
push
int3
and
aas
jmp
out
xor
or
pop
pop
add
push
xchg
dec
mov
test
sbb
xchg
cmp
pop
aad
push
ljmp
sub
ds
adc
inc
cmp
jmp
inc
ljmp
push
push
lret
arpl
jae
bound
jno
xor
push
and
xchg
or
fwait
hlt
aaa
icebp
into
lock
jecxz
lock
mov
push
call
aad
pop
int3
dec
vorps
cmc
jecxz
jbe
pop
mov
mov
xor
mov
push
in
cmp
cs
pop
gs
loop
push
sub
stos
test
adc
jo
jb
into
gs
dec
mov
cwtl
rclb
pop
mov
loope
sub
cmp
inc
fldt
int3
stc
and
sub
ja
fmull
dec
loop
xchg
mov
or
lret
movsl
insb
cmp
push
aaa
pushf
pop
sub
test
inc
lods
pushf
mov
xor
sti
push
sub
mov
sub
out
lock
jmp
aad
scas
adc
aad
mov
dec
shr
std
lds
mov
mov
sarl
sbb
lds
and
loopne
cmc
mov
fadds
mov
repz
aad
mov
aaa
fldt
or
and
std
fildl
jne
add
mov
lock
insl
imul
sbb
outsl
dec
loope
xchg
cli
ss
pop
inc
shrb
leave
push
ds
orl
fnsave
out
leave
push
xor
push
out
stc
inc
pop
adc
sbb
and
mov
sti
inc
aad
push
stos
out
pop
notl
mov
jmp
pop
out
sub
int3
stos
inc
mov
push
sti
push
mov
dec
cmpsl
jae
stc
inc
jno
pop
lret
jl
mov
xor
inc
neg
inc
ret
xor
sti
jns
popa
dec
mov
jae
pop
mov
mov
scas
pop
outsb
mov
sarb
mov
mov
loop
xor
xchg
adc
negb
ret
jle
enter
jns
xor
push
fisubs
in
pop
and
hlt
jne
sub
popa
xor
mov
adc
cltd
pushf
xchg
test
hlt
and
pop
icebp
jb
lds
lret
popa
mov
push
adc
cmp
fidivrl
pop
mov
xor
pop
sub
addr16
dec
fiaddl
mov
sbb
xorl
shl
and
pop
mov
sti
xchg
xor
mov
pushl
fsubr
sbb
lahf
mov
push
into
xchg
jl
add
pop
sub
cmc
xchg
icebp
dec
sbb
scas
je
jo
test
ret
in
jmp
mov
sbbl
xor
xor
loopne
mov
dec
addr16
out
cwtl
and
popf
incb
jb
test
jg
pop
repz
and
inc
dec
movsl
test
out
std
xor
xchg
mov
mov
xchg
dec
mov
nop
sbb
shrb
cmp
mov
inc
push
pop
and
stos
pop
test
dec
out
ss
pusha
mov
aad
sbb
enter
mov
icebp
add
jo
add
pop
cld
or
lds
adc
movsb
jb
mov
xor
ficoml
mov
flds
mov
jne
push
mov
orl
mov
pusha
cmp
push
repnz
mov
push
push
ljmp
inc
leave
xor
pop
cmp
daa
in
ss
inc
ss
cmp
icebp
push
imul
xchg
cwtl
xchg
mov
jmp
into
sbb
cmp
mov
push
jge
cwtl
lcall
enter
dec
enter
imul
in
dec
lods
andb
clc
loope
insb
lcall
outsl
add
es
inc
fadds
adc
test
sti
adc
jo
mov
sbbb
outsb
jl
push
into
pop
mov
inc
xor
mov
inc
pop
fs
inc
arpl
repz
push
cmp
imul
or
dec
add
notl
mov
repz
bound
lock
repnz
jecxz
mov
and
sbb
mov
das
dec
in
sbb
xor
push
xor
or
dec
xchg
lea
push
icebp
sub
mov
and
rorl
xchg
test
inc
inc
in
cmp
push
clc
xlat
cmp
jecxz
lds
xlat
sbb
outsl
not
xor
shlb
adc
fmulp
jne
fcomp
in
test
fiadds
mov
adc
scas
add
pop
ror
in
ret
loope
or
and
add
imull
pop
jo
pop
insb
loope,pn
push
jo
jo
loop,pn
xor
jl
cmp
dec
xlat
sbb
pop
sub
nop
jmp
dec
in
mov
dec
adc
pushf
stos
and
push
nop
cmp
pop
jge
out
ficomps
mov
sahf
pop
rcrl
mov
and
imul
repz
and
jg
and
in
stc
inc
xlat
sub
pop
dec
dec
push
cmp
xor
dec
shlb
loop
push
jo
repnz
jb
mov
pop
or
mov
insl
and
push
pop
sub
adc
dec
and
insb
jl
pushf
xor
gs
cmp
jl
shll
adc
shll
in
xchg
test
push
mov
add
lock
sarl
push
sahf
je
daa
aaa
shrl
dec
push
test
dec
cmp
loope
outsl
sahf
je
inc
cmp
xor
mov
movsl
insb
popf
mov
stos
dec
das
sub
lods
inc
mov
ficoml
lret
xor
icebp
ss
inc
leave
inc
mov
inc
clc
aaa
xor
jne
lods
inc
adc
lcall
mov
sub
inc
lds
adc
in
or
jg
sbb
lods
xchg
xor
and
test
xor
and
scas
and
mov
xchg
js
fcoms
xchg
lock
scas
inc
loope
push
jns
rorb
adc
call
push
hlt
and
lcall
data16
rorl
lcall
mov
push
and
leave
cmp
sub
dec
push
jb
xor
jns
sub
push
push
dec
adc
mov
xor
lock
xchg
adc
dec
mov
sub
push
mov
xorl
sbb
test
mov
and
mov
dec
clc
and
mov
inc
ror
or
repnz
and
sti
loopne
mov
add
add
push
mov
es
xor
dec
adc
pushf
mov
inc
lock
lea
xchg
scas
fwait
xor
imul
sbb
jmp
repnz
fwait
in
dec
xor
orl
or
jge
lret
inc
mov
das
jp
int3
cmp
repnz
push
rclb
out
test
mov
fs
mov
fadds
sarl
xchg
xor
ret
rclb
or
mov
in
sub
ret
movsl
cmp
or
push
add
loop
data16
mov
push
sub
xor
lock
and
andb
push
sub
lods
pusha
dec
jp
jp
push
cmp
or
jge,pn
xchg
mov
sarb
andb
movl
or
jae
mov
mov
xor
mov
arpl
int
dec
ret
mov
out
leave
mov
sti
xchg
or
lcall
daa
dec
nop
cmp
test
jl
xor
cmpsl
es
pushl
add
add
and
sbb
shlb
jns
repnz
mov
adc
loopne
xor
and
fsts
repnz
dec
mov
jp
fcoml
fwait
pop
shlb
subb
lods
inc
xchg
push
jmp
xchg
pop
jge
xchg
sub
lahf
loopne
adc
loop
sbb
cmc
sub
mov
sbb
outsb
add
pop
rcrb
mov
cltd
divl
iret
movsl
pop
add
icebp
pop
or
xchg
call
mov
xchg
call
jle
xor
inc
xor
jmp
xchg
mov
sbb
je
jne
call
mov
fs
dec
sub
mov
mov
inc
push
ljmp
inc
ss
aad
jno
sbb
mov
pop
push
mov
sti
sbb
inc
fstp
sti
inc
test
add
xchg
mov
inc
into
jae
push
leave
adc
fidivl
xor
mov
repz
inc
xchg
insb
ss
fs
push
jnp
adcb
into
jnp
jb
addl
jno
adc
xchg
xchg
out
pop
addr16
push
test
cwtl
mov
and
inc
inc
mov
pop
push
mov
push
cmp
dec
cli
rdmsr
leave
xchg
dec
iret
lcall
adc
call
les
loopne
push
les
orl
out
cmp
add
stos
test
nop
scas
pop
pop
nop
xchg
mov
xchg
orb
jns
sahf
inc
xchg
aam
orb
pop
push
mov
out
mov
mulb
inc
lret
out
test
and
pop
cmpsb
and
call
mov
icebp
in
mov
montmul
cmpsb
inc
out
fnstenv
lock
dec
loopne
add
dec
mov
popa
repz
and
xor
jmp
dec
adc
popa
and
scas
jb
ds
jnp
jb
insl
inc
in
movsl
cmp
dec
nop
xchg
xor
jno
mov
mov
test
inc
pop
into
pop
stos
jl
fldl
ljmp
and
push
jmp
sub
inc
ljmp
ja
mov
adc
xchg
sub
jae
imul
xchg
das
cmp
popf
pop
sub
xchg
adc
mov
jmp
mov
adc
push
xchg
pop
jno
stc
nop
adc
scas
pop
test
fmull
out
mov
out
daa
mov
xchg
stos
xchg
sub
pop
movsl
bound
push
sahf
xchg
ja
push
mov
pop
insl
ret
push
mov
cs
cmp
xor
push
or
push
cwtl
jo
cs
sub
arpl
dec
xor
aam
sbb
insl
stos
inc
sbb
cld
es
ds
xor
stc
int3
push
into
repnz
jne
int3
test
fcomip
les
into
lea
in
hlt
pop
mov
in
fildll
je
ljmp
hlt
clc
inc
roll
lcall
sbb
push
in
xor
std
add
adc
pop
mov
xor
pusha
pushf
frstor
enter
mov
cli
add
aas
sbb
divb
dec
lret
mov
and
dec
addr16
ja
dec
jnp
jo
cltd
xchg
pusha
xor
addr16
scas
mov
push
loope
mov
mov
cmp
mov
inc
ret
in
and
mov
jmp
loope
mov
cmp
scas
add
std
pop
loop
jg
mov
add
ret
mov
movsl
push
sti
icebp
fidivl
out
maskmovq
notl
stos
cmpb
sub
pushf
int
dec
fcmovnbe
pop
cmc
mov
lods
jne
hlt
xor
and
inc
test
push
jns
out
and
ds
dec
sbb
test
xchg
inc
imul
inc
push
dec
loopne
jae
add
sbb
xchg
out
cmp
fidivrs
push
sar
sub
jnp
inc
int3
and
inc
mov
xchg
cltd
xor
insb
loope,pt
imul
popf
addr16
sub
jae
mov
pop
adcb
sbb
sbb
or
xchg
xchg
cli
push
pop
sarb
fs
mov
sub
push
stos
gs
cmp
mov
out
sbb
mov
popf
jp
mov
sarl
aas
gs
lds
fists
jns
testb
xchg
pop
push
push
adc
push
xchg
sbb
cld
adc
dec
mov
jecxz
addr16
stc
test
sub
daa
push
dec
divb
jb
fstpt
dec
aaa
scas
jb
dec
loopne
pop
aaa
mov
jno
xchg
mov
and
andl
jo
mov
push
xchg
lea
sti
jg
sub
dec
popf
xor
dec
leave
pusha
andl
fnstenv
testb
jnp
and
int
inc
fmul
out
xor
pop
in
pop
negb
inc
push
call
jno
outsl
push
lds
lea
out
push
sbb
stos
inc
insb
cmp
outsb
imul
mov
push
sbb
adc
add
jae
mov
xor
push
call
xchg
dec
fwait
xor
mov
mov
cmp
pop
les
mov
fisubs
cltd
pushf
outsl
pop
pop
testb
mov
lret
loope
or
ljmp
jno
fstps
loope
cli
xchg
cs
jno
loop
cmc
mov
jg
xor
xchg
add
mov
cmp
ds
fldt
mov
ret
mov
mov
jg
daa
mov
xlat
int3
inc
fdivr
clc
fnstenv
pop
fs
and
fstps
sub
mov
lcall
cmpsl
xor
js
enter
cmp
ret
das
sahf
xor
adc
scas
jmp
rcrl
add
fisttps
mov
insl
inc
add
adc
inc
stos
in
fsubl
add
xor
xchg
out
ss
out
insl
les
push
pushf
push
lret
sahf
jne
jb
push
xlat
or
int3
and
dec
popa
test
sub
or
repz
imul
lea
lods
outsb
ss
into
pop
aam
lea
lea
and
arpl
stos
pop
push
cmovl
xchg
push
and
imul
data16
lock
fwait
cmp
notl
fs
sub
fs
pop
stos
cmp
cmp
leave
pop
incb
mov
sbb
mov
std
jb
jae
loop
sub
xlat
lds
roll
push
mov
aam
xchg
pop
cmp
adc
add
xor
mov
aam
daa
mov
mov
movsl
mov
repnz
or
gs
push
movsl
inc
and
js
cmp
and
push
jbe
sbb
rolb
cmp
js
sub
sbb
add
lcall
jg
jp
cmpxchg
lcall
je
cltd
rclb
loopne
lods
cli
or
test
mov
fadds
mov
and
xchg
cld
pop
mov
pusha
bnd
dec
repnz
push
enter
fdivrp
popfw
sbb
fisubrl
jg
xor
jge
stc
ja
hlt
adc
popa
sbb
arpl
lea
stc
insb
js
sub
rol
cmp
cs
mov
xlat
out
sarl
and
adc
negb
in
mov
sbb
push
sbb
or
jmp
ja
pop
lahf
pop
lds
stc
add
pop
push
lcall
push
push
repz
arpl
je
mov
bound
mov
sub
sbb
xor
fldenv
ja
sbb
popf
loope
fdivl
cmc
outsl
shr
and
jns
add
je
jmp
mov
jle
jle,pt
sahf
daa
sti
lock
xlat
push
fbld
popf
cmp
dec
xor
xchg
sbb
iret
out
out
sbb
mov
xchg
out
jecxz
mov
outsl
out
push
arpl
into
push
jl
in
icebp
inc
fnclex
mov
xchg
add
adcb
js
ljmp
out
test
or
stos
jl
adcb
sbb
and
mov
inc
fidivl
xorb
aad
out
xchg
push
out
push
mov
mov
mov
into
gs
mov
mov
pop
loopne
push
mov
mov
repz
in
or
mov
inc
xlat
sub
je
cmp
loopne
mov
je
stos
jmp
pop
cmc
out
mov
mov
cwtl
das
sub
sub
fdivl
loope
ret
mov
pushl
movl
mov
push
inc
push
push
bound
hlt
fdiv
xor
and
sbb
enter
mov
fstpt
rorb
lret
jns
outsl
in
test
ja
xchg
mov
out
add
lahf
cmpsl
push
fdivrl
mov
gs
mov
mov
inc
push
jns
into
stos
jl
outsl
scas
lret
clc
mov
mov
push
add
or
jl
push
pop
in
popf
cmpb
das
iret
cmpsb
sub
push
addr16
pop
std
pop
sbb
mov
lret
test
arpl
int
repnz
and
mov
pop
stc
loopne
aad
ljmp
xor
ss
pushf
and
mov
into
jno
jae
mov
xchg
add
int
push
lods
xor
push
nop
cmp
lods
arpl
orl
push
orb
sub
aas
mov
das
loopne
test
sar
fdivs
ljmp
add
pop
xchg
cmp
push
cmpsb
pusha
jmp
jae
je
mulb
xchg
jg
orl
pusha
xchg
outsb
subl
dec
or
repz
je
in
loope
xchg
jg
add
in
insl
test
aaa
push
add
push
mov
cmpsb
dec
mov
mov
push
loope
into
xchg
jg
stc
fs
insb
sub
push
jmp
orb
aad
mov
mov
dec
pop
in
sub
jno
push
jge
inc
roll
sti
popw
or
mov
dec
sbb
jb
cmp
pop
push
or
loop
mov
aad
sarb
add
mov
cmp
cmp
mov
ss
mov
dec
ja
std
fcompl
mov
mul
aas
mov
push
imulb
or
dec
push
inc
out
outsl
aam
leave
xchg
xor
cmp
sub
aad
aas
mov
fiaddl
dec
adc
jle
mov
cmp
in
sub
addr16
cmp
pop
push
xchg
faddl
pusha
out
sub
mov
loopne
pop
clc
push
stc
insb
jmp
nop
sti
pop
data16
pop
movsl
jg
fsubr
mov
xchg
inc
inc
pushf
xor
mov
mov
sbb
cmc
cmpsl
call
in
cmp
adc
pop
arpl
insb
sub
ja
mov
mov
ja
loopne
xchg
outsl
outsl
in
mov
cmpsb
mov
in
lret
bswap
mov
icebp
bound
sub
or
insl
out
mov
movsl
or
push
mov
jbe
mov
mov
jno
push
xchg
jbe
outsl
insl
out
mov
cmpsl
mov
imul
mov
int
pop
stos
lock
hlt
or
je
lock
in
sub
pop
or
int3
jmp
jl
sbb
out
stos
addr16
imulb
test
rcr
jnp
iret
mov
test
leave
shl
mov
push
pop
clc
pop
in
cmpsl
rorb
jae
movsl
push
fnstcw
adc
outsl
xchg
mov
lcall
int
inc
push
fistl
insb
out
or
das
cmp
adcb
addl
mov
mov
loop
aad
push
sarl
add
int3
js
push
push
adc
xchg
push
cmp
add
fistpll
pusha
roll
addr16
sarb
jp
cltd
dec
sarb
xchg
mov
cli
scas
ljmp
addr16
int3
jp
sbb
adc
mov
dec
cmp
sbb
movsb
fnstsw
push
dec
pop
aam
sbb
push
push
cmp
adc
cmp
adc
rcl
adc
or
sbb
push
add
dec
cmp
adc
test
jp
push
push
add
bound
sbb
inc
pop
or
adcb
adc
xchg
and
push
outsl
sub
add
stos
pop
mov
mov
mulb
sbb
daa
mov
test
lea
stc
sub
mov
outsb
out
sarb
add
pop
pop
clc
mov
scas
daa
leave
mov
sti
and
cmp
cwtl
nop
mulb
sarb
test
fidivrs
and
mov
pushf
sbb
push
loope
loope
mov
rcrb
xor
lock
sub
ds
testl
dec
adc
aam
ds
stos
loope
or
cmc
sub
cmp
outsl
jmp
arpl
add
push
lds
jmp
pop
sub
dec
data16
mov
pop
int
push
pop
add
mov
negl
popa
mov
clc
lret
aas
adc
mov
aam
or
das
mov
mov
enter
pop
add
mov
push
mov
mov
fimull
adc
or
push
ret
aad
adc
scas
ficomps
jmp
pop
add
sub
or
hlt
leave
xchg
sub
xchg
ds
inc
mov
icebp
or
sub
addr16
mov
jne
adc
sbb
lods
and
or
cmc
pop
jp
sub
enter
aad
xchg
cmp
add
int3
pop
sub
icebp
xchg
ljmp
push
cwtl
inc
pop
test
dec
adc
sbb
pop
xchg
cmp
pop
mov
pop
je
loop
test
mov
pop
stos
sarl
mov
ret
pop
push
sbb
pop
std
test
addr16
xchg
aaa
mov
scas
lret
pushf
pop
add
orb
lds
bnd
ljmp
rcrb
jmp
dec
pop
add
shll
je
movsl
sub
and
pop
movsl
mov
mov
inc
push
push
int
xchg
notl
aaa
jge
adc
fsubs
add
jg
pop
xor
sub
and
outsb
shll
mov
jbe
jmp
jp
cmp
fwait
pop
and
lret
scas
xchg
sub
xor
mov
mov
xor
push
sbb
lea
lahf
popa
enter
jl
arpl
stos
ljmp
add
sarb
adc
jo
outsb
in
out
insb
xor
mov
mov
int
not
iret
mov
out
enter
out
cld
je
jge
call
sbb
movb
jg
movsl
xor
and
cmc
repz
int
faddp
xchg
mov
rolb
sbb
xor
xor
sub
mov
rclb
leave
sbb
mov
mov
jg
mov
idiv
call
adc
mov
sar
xor
and
jnp
ja
mov
scas
push
cld
mov
aas
cmpsb
mov
mov
lods
and
ss
addr16
stos
mov
push
adc
repz
xor
and
rcll
add
into
xchg
mov
scas
popf
aas
jo
dec
adc
fistl
lds
lret
jecxz
adc
fs
leave
xlat
or
inc
mov
aad
push
mov
xor
shlb
xchg
mov
stos
jecxz
ficompl
addl
mov
mov
jge
hlt
imul
js
lds
xor
pop
add
ret
mov
fisubl
mov
pop
or
xchg
mov
pop
xor
jl
mov
inc
fsubl
popa
clc
push
xorb
orl
xor
shll
in
lock
icebp
jecxz
jge
in
lret
cmp
dec
adc
add
call
int
xchg
inc
or
rol
dec
jp
shr
dec
push
jae
int
sbb
adc
xor
and
mov
das
jns
les
mov
ret
lea
pusha
aaa
cwtl
xchg
aas
add
pop
les
rclb
inc
jb
push
pop
sarl
mov
aam
xor
cld
enter
in
xchg
aaa
fisubs
mov
movsb
jnp
stc
stc
mov
fisubrs
dec
loope
in
imul
push
add
pop
adc
inc
sub
mov
jnp
and
xchg
adc
mov
sahf
dec
mov
cmc
shld
lcall
loop
scas
dec
or
push
into
mov
stos
sub
xchg
stos
sub
xchg
movb
mov
jmp
and
sub
add
sub
fs
sahf
cmp
jo
cmp
rolb
jmp
mov
sti
dec
xor
shlb
pop
add
iret
negb
adcb
fnstsw
movsl
mov
dec
mov
outsl
repnz
sbb
pop
mull
mov
cmc
mov
scas
mov
addr16
cmp
and
shrb
in
mov
mov
jp
push
orb
popf
in
idivb
cltd
aad
adc
test
mov
dec
inc
adc
dec
mov
outsl
push
add
jge
daa
mov
arpl
pop
or
dec
lret
pop
pop
mov
and
loope
fdivrl
int3
mov
add
mov
arpl
push
inc
jg
ret
setp
mov
aad
rclb
add
je
es
ja
shlb
fwait
mov
pushw
loope
mov
push
mov
inc
pop
out
mov
push
jo
xchg
push
jo
into
lock
dec
pop
out
aam
fdivrl
push
or
pop
sbb
popa
pop
subb
and
add
xor
nop
fs
dec
or
cmpsb
adc
mov
test
jl
insb
mov
adc
jae
inc
mov
cmpsb
rolb
int3
fnsave
pop
repz
pop
push
jae
cli
mov
enter
pop
lcall
into
sarb
mov
inc
dec
bound
jmp
sti
test
jecxz
jae
call
std
out
jb
addb
adc
jp
inc
cmp
or
pop
mov
push
and
fwait
stos
cmp
jno
mov
ret
int
xlat
test
cmp
push
sbb
cmp
sub
jnp
scas
test
notl
je
pop
dec
inc
fidivrl
xchg
sub
sahf
adc
mov
stos
pop
add
cmp
pusha
sub
cmp
int3
and
push
add
mov
mov
xor
pop
pop
push
add
inc
adc
outsb
pop
rcrl
inc
loop
and
cli
xchg
jne
pop
add
orb
and
gs
in
jno
jae
push
push
jp
scas
lods
mov
into
mov
mov
sbb
popa
cmp
xor
fdivrs
or
movsl
or
mov
mov
inc
adc
lret
and
xchg
fwait
jb
push
inc
dec
or
fwait
std
push
cmp
adc
jp
outsb
ljmp
xchg
aas
outsb
pop
cmp
jbe
cmp
sub
lds
fdivrl
xorl
add
ret
sub
sbb
push
pushf
add
mov
mov
cmp
es
and
outsl
push
out
dec
out
sbb
cmp
out
stos
xor
testl
daa
sub
mov
push
cmp
sahf
mov
cmpsb
testl
out
sbb
popa
xchg
mov
shll
lods
add
daa
js
and
insb
adc
sahf
add
sbb
ret
xlat
test
rcll
cli
adc
mov
mov
cmpsl
int3
lea
dec
and
add
fstpt
pop
jno
addl
nop
fnstcw
mov
cmpsl
adc
enter
outsb
adc
loop
jae
sub
xor
xchg
xchg
lcall
stos
out
pop
sarb
xchg
dec
popa
push
shlb
jmp
ljmp
cld
pop
adc
fdivrl
dec
inc
fstpt
add
jecxz
push
mov
dec
pop
or
outsl
lcall
mov
adc
xchg
cmp
sub
sbb
call
repnz
into
in
loope
sbb
mov
test
rorb
mov
shlb
mov
dec
lea
jb
jmp
add
mov
mov
or
clc
push
mov
idivl
in
in
adc
aaa
mov
lret
movsl
inc
or
rorl
cld
orb
and
add
icebp
imul
lahf
and
and
mov
mov
cltd
stc
rcr
dec
out
movsl
sub
icebp
pusha
out
stos
sub
add
jl
jecxz
fwait
movsl
fbstp
pop
mov
mov
pop
push
mov
xchg
jl
pop
les
int
in
push
jo
call
sbb
mov
jae
lret
push
sub
mov
stos
cmp
mov
mov
mov
pop
cli
cmp
dec
or
xor
jle
mov
dec
in
and
lea
stos
xor
ss
lea
insb
hlt
cmpsb
imul
mov
jecxz
scas
fildl
loop
xchg
aaa
cmp
xor
cmp
pop
lret
fisubrl
jns
or
enter
sbb
push
popa
test
mov
dec
negl
sub
mov
addr16
cmp
dec
add
xchg
mov
sbb
outsl
loop
stos
pop
jp
loop
std
popa
mov
lods
hlt
pop
bnd
aam
in
mov
dec
inc
stos
sub
out
outsb
dec
lock
ja
imul
xchg
aas
pop
scas
sub
pop
mov
sbb
lods
sbb
jne
ja
insb
neg
gs
nop
or
aam
into
mov
jp
das
scas
xor
lds
stc
jns
lsl
pushf
inc
inc
push
sub
std
bound
out
jmp
xor
mov
mov
mov
and
inc
jl
mov
dec
pop
test
push
lret
pop
shll
cmpsb
das
xor
rolb
lcall
fwait
inc
pusha
mov
cwtl
rcl
mov
dec
adc
addl
pop
push
cld
inc
cmp
scas
mov
jo
mov
imul
sub
inc
loopne
pop
add
sbb
pop
xchg
xchg
cmp
scas
sub
xchg
mov
stc
pop
int3
xor
and
jecxz
inc
or
inc
sbb
enter
push
push
icebp
out
jne
dec
mov
jno
pop
bswap
pusha
jmp
pop
inc
push
inc
out
in
add
mov
int
cmp
cld
popa
pop
fstl
mov
repnz
int
sub
jle
leave
xchg
insb
imul
or
loope
popf
push
dec
push
pop
inc
cmp
ret
popa
lock
jg
es
dec
or
mov
ja
imul
dec
mov
test
dec
mov
addr16
movsb
stos
fnstenv
mov
loop
in
popf
cmp
frstor
mov
mov
push
in
mov
ficoml
mov
pusha
lea
xorb
pop
addr16
test
fadds
in
dec
cmp
mov
dec
push
stos
lods
inc
adc
mov
notl
push
leave
iret
mov
mov
call
cmc
mov
loop
cs
aam
push
in
in
or
mov
insl
clc
lahf
pusha
jge
sbb
sub
xor
push
std
push
jle
out
xor
and
or
add
push
movsb
xor
inc
nop
sarb
sahf
hlt
fs
adc
adc
or
dec
adc
mov
sub
mov
xor
mov
jno
jle
mov
jne
pop
mov
jmp
mov
mov
fadds
lcall
and
sbbb
jecxz
and
xchg
pop
or
cld
gs
pop
push
std
movsb
xchg
jmp
or
das
cmp
sub
mov
mov
stos
std
pop
cld
pop
out
es
std
adc
imul
xchg
push
jecxz
xor
cmp
pop
es
or
xchg
and
push
mov
cmc
xor
sbb
dec
xorl
xchg
mov
mov
pop
add
mov
add
rcll
arpl
mov
sbb
mull
mov
pop
pop
inc
adc
mov
hlt
xchg
sti
pop
data16
push
and
jbe
ljmp
mov
mov
sbb
jge
call
xchg
test
jnp
cmpsb
daa
lods
leave
mov
ret
lret
xchg
outsl
mov
mov
dec
dec
imul
mov
into
xchg
mov
dec
movsl
mov
mov
adc
rcl
xor
xchg
xchg
or
xor
mov
add
xlat
iret
call
nop
inc
repnz
and
jae
inc
ss
cmp
xchg
sbb
jmp
call
mov
sbb
jns
xchg
dec
ds
mov
scas
and
out
sub
inc
adc
fidivrs
fs
cld
ss
mov
and
iret
jg
std
arpl
cmp
shrb
aas
cltd
push
xor
jno
mov
daa
arpl
xor
xchg
stc
jg
fdivl
mov
fiaddl
nop
rcrl
xor
and
sbb
imul
and
out
mov
repz
lret
jecxz
and
pop
cmp
in
rorl
jp
pop
pushf
xchg
dec
push
jmp
cld
les
inc
decb
xchg
dec
adc
lock
ljmp
lods
push
fucomip
jae
mov
jp
jl
shll
mov
pop
jno
gs
xor
jb
icebp
jo
add
mov
scas
xor
fstps
hlt
or
ljmp
pop
xor
add
cli
cmp
loope
xor
testb
popf
lcall
iret
sub
imul
scas
mov
notl
enter
les
add
mov
mov
fs
cwtl
xor
jae
jmp
add
jnp
jp
outsl
mov
test
sahf
cmp
or
sar
fmuls
iret
mov
pop
and
jg
rclb
lret
or
push
clc
xor
and
jbe
mov
call
mov
stos
adc
inc
int
jbe
mov
push
jo
ret
ds
out
mov
adc
test
dec
cmp
and
sarb
incb
into
bound
inc
or
je
xor
mov
imul
adc
fstpl
and
or
divb
sub
fldt
add
add
lcall
or
xchg
idiv
lret
mov
test
icebp
aaa
or
and
mov
pop
int3
in
mov
movsb
pop
sbb
jge
insl
pushf
inc
adc
cmp
mov
pop
add
das
mov
push
decb
loopne
lods
loop
sbb
add
xchg
jno
or
rcll
adc
inc
xchg
aaa
out
movsl
sub
dec
adc
stos
xor
cmp
test
das
pop
add
push
in
cli
fs
test
pusha
stc
test
je
push
lock
mov
mov
mov
outsb
sahf
jmp
mov
lret
test
lock
scas
lcall
xor
outsb
and
mov
cmp
mov
std
ljmp
lcall
and
popa
lock
insb
jmp
popa
adc
sbb
cmc
fs
inc
aad
or
push
mov
pop
mov
or
les
std
pop
push
lods
sub
pop
sbb
movsl
mov
pusha
mov
adc
pop
jl
mov
xchg
mov
add
jbe
and
or
sti
xor
test
mov
mov
mov
mov
rorl
movsb
push
aam
dec
push
mov
scas
sti
mov
xor
xlat
jns
inc
bswap
insl
or
sbb
adc
pop
insl
sub
mov
mov
push
subl
mov
data16
or
pop
cli
sbb
dec
addr16
dec
or
pop
stc
cwtl
cmp
mov
mov
leave
mov
push
test
lret
gs
mov
mov
and
fcomip
pop
or
mov
aaa
cltd
jmp
pop
insl
imul
pop
jl
xor
mov
lahf
negl
mov
call
sti
rcll
lds
inc
pminsw
or
adc
sub
pop
add
xchg
mov
mov
lret
mul
adc
cli
cmp
sarl
in
fisubrs
xchg
rorb
mov
sub
mov
lock
popa
test
mov
iret
xchg
inc
adc
pop
jbe
pop
ljmp
xchg
aas
adc
sbb
stos
fmull
js
or
add
push
mov
imul
lods
or
sbbb
push
mov
jp
dec
adc
test
rcrl
daa
or
imul
jo
lret
mov
daa
mov
inc
les
mov
pusha
lock
lret
enter
mov
mov
sub
mov
sbb
jo
xchg
inc
dec
or
int
lods
fdivs
mov
dec
inc
jne
in
cwtl
jo
movsl
hlt
lret
mov
call
cmpsl
ds
orl
and
lret
pop
sahf
inc
mov
pop
ret
push
cmpsb
and
and
aaa
pop
inc
lcall
cmp
dec
xor
jg
adc
pop
add
inc
mov
xor
imul
test
rorl
mov
push
fwait
imul
aad
test
dec
aas
orps
jl
sti
pop
cmpsl
popa
roll
xchg
fidivrs
fdiv
fs
pop
loop
xor
popf
cmp
pop
dec
or
out
adcb
mov
add
aam
pop
mov
outsb
dec
lret
in
fwait
movsl
xor
cmc
dec
or
push
insl
call
pop
xlat
jns
loopne
xor
mov
fnstenv
lcall
and
inc
dec
lods
dec
adc
inc
jne
les
lret
mov
mov
sbb
pop
mov
out
dec
or
cli
roll
xchg
sub
xor
xchg
mov
mov
fwait
mov
int
xchg
shll
mov
adc
negb
dec
sub
inc
push
pushf
inc
xlat
xchg
iret
xchg
xor
sti
pop
cmp
add
dec
sub
lret
and
mov
insb
lock
push
cli
int
mov
xlat
sbb
mov
jo
les
or
mov
mov
ds
enter
pop
aad
mov
int
inc
mov
dec
mull
xchg
mov
shlb
in
sbb
xchg
jns
sahf
jns
dec
mov
fwait
cmp
aam
insb
mov
push
push
xlat
add
loopne
les
add
lods
inc
pusha
pusha
xor
xchg
icebp
lret
mov
cmpsb
lret
pop
rcrb
addl
and
mov
xor
cwtl
inc
add
ss
arpl
adc
inc
enter
mulb
je
xchg
sbb
cwtl
sbb
jp
ljmp
xor
adc
data16
cmp
std
pop
frstor
outsl
out
das
rclb
outsb
add
loop
mov
pop
sub
call
imull
push
leave
inc
jg
and
fists
out
jae
stc
fs
jo
mov
mov
sahf
inc
lods
outsl
out
xchg
mov
cli
cmc
int
mov
lock
pop
sub
loope
lods
xor
pusha
in
rclb
dec
adc
xlat
cmp
aad
mov
push
jb
pop
add
js
fsts
out
push
adc
mov
test
add
jp
sub
sarb
mov
cmp
mov
in
out
cmp
popa
and
pusha
push
jge
aaa
addl
dec
cmp
loop
sahf
fidivrs
rclb
sahf
cmp
fsts
pop
push
cld
pop
lds
push
mov
fwait
sarl
xchg
mov
addr16
call
cli
xlat
jle
push
dec
sub
les
xor
and
cmc
inc
nop
ds
push
cmp
mov
adc
adc
xchg
mov
adcb
lea
dec
push
add
jecxz
add
push
mov
dec
mov
push
std
and
cmp
cmpb
in
into
adc
shl
jl
mov
cmp
gs
lods
cs
inc
cmp
inc
insl
push
mov
dec
sub
xor
in
outsb
cmpsl
mov
xchg
inc
ds
pop
pop
cmp
mov
and
fisubrl
scas
div
xor
pop
adc
mov
mov
sub
pushf
adcl
jmp
sbb
stos
out
push
mov
ljmp
mov
jg
mov
shl
shrb
push
dec
fbstp
pop
incl
dec
adc
iret
and
push
jl
aaa
mov
out
jb
movsl
les
cmc
rorl
pop
test
mov
cmpsb
adc
mov
flds
popa
enter
jbe
push
je
add
pop
mov
insl
xor
xor
bound
movsb
jg
or
cmp
clc
mov
push
mov
ja
inc
mov
cmpsl
fdivrl
aad
call
shlb
mov
push
push
bound
and
push
int
jp
pop
xlat
jg
lea
or
mulb
push
cmc
popa
ror
cmp
jecxz
jg
and
arpl
loope
cwtl
movsl
dec
cmpxchg8b
lret
jns
lretw
xchg
repz
adc
pusha
icebp
pop
add
xlat
jge
nop
jbe
iret
lods
cld
gs
pop
imul
jmp
xor
jp
clc
bound
fnstsw
test
mov
jnp
scas
outsb
hlt
stos
mov
mov
pop
or
int3
dec
int
sbbb
divl
ss
dec
adc
sub
jmp
xor
xor
test
mov
mov
test
push
in
cwtl
aaa
pop
lcall
xchg
mov
je,pt
data16
daa
mov
les
mov
mov
pushl
and
das
stos
mov
mov
stos
daa
int3
subl
inc
loope
dec
adc
push
cmpsb
inc
repnz
movsl
mov
mov
call
icebp
insl
jmp
je
into
xchg
addr16
es
in
and
xchg
xchg
inc
push
add
lods
mov
dec
mov
push
sti
dec
movsb
sub
mov
mov
add
scas
xor
push
sub
fadds
inc
mov
stos
push
sti
cmp
jg
fisubrs
fiaddl
cmp
sub
je
cmp
jb
test
popa
inc
mov
lret
dec
fwait
outsb
call
dec
jmp
fisubl
test
mov
mov
ret
xchg
insb
lods
shr
jo
mov
or
pop
push
mov
cmpsb
xor
jmp
jle
xchg
and
scas
int3
leave
cmp
lods
mov
cmp
scas
lret
clc
sbb
mov
out
jecxz
mov
out
test
movsb
mov
xor
popa
cmpsb
or
xchg
jno
and
sbb
mov
mov
pop
mov
inc
or
cmpsl
mov
ret
sbb
jo
lods
xor
or
or
addr16
xchg
xchg
mov
mov
push
inc
push
lds
cmp
add
loop
xchg
popf
inc
popa
adc
add
adcl
mov
push
ja
pop
clc
es
push
lahf
cmp
push
mov
jp
repz
jb
adc
lods
inc
push
mov
loopne
flds
in
add
ljmp
pop
adc
mov
ret
jns
adc
pop
add
and
in
xor
jge
pop
cmp
cli
nop
cmpb
in
mov
mov
mov
scas
adcl
movsb
pop
icebp
fsubs
add
or
jbe
mov
lret
mov
mov
and
pop
test
push
or
lahf
xchg
jbe
inc
adc
insl
xchg
add
pop
mov
mov
jbe
mov
lods
sbb
mulb
inc
rclb
push
mov
push
jp
xor
fisubl
mov
or
jg
xor
sub
jnp
push
dec
pop
js
out
sbb
aas
addl
dec
in
and
xchg
pop
sti
fdivrl
cltd
push
stos
sub
jne
mov
sbb
xlat
fs
repz
jp
out
ret
stc
and
in
sub
mov
pushf
cmp
stos
gs
ds
lahf
cmp
loop
push
popf
loope
shlb
filds
cmp
movsl
jg
inc
adc
adc
shrl
and
push
psrld
jne
shlb
xchg
stc
sub
sub
inc
jne,pt
xor
and
and
pop
clc
jp
roll
fwait
pusha
or
into
mov
ds
pop
fldl
push
mov
mov
push
pop
orb
pop
lea
imul
loopne
sub
mov
in
gs
into
xchg
jns
orl
lds
mov
cmp
xchg
cbtw
inc
fcmovb
or
arpl
xor
cltd
cwtl
sbb
jmp
add
jb
sti
fs
gs
ss
mov
sahf
roll
insb
add
push
ja
adc
inc
jmp
push
fwait
inc
out
xor
and
call
mov
fcomip
mov
jae,pn
pop
mov
push
std
add
push
sub
out
gs
dec
testb
sbb
dec
mov
aad
ss
mov
popa
es
or
lods
in
inc
out
push
pop
xchg
pop
add
fstl
ss
push
xor
test
add
orl
push
inc
fisttpl
test
mov
pop
cs
mov
xor
shll
sti
xchg
es
jno
dec
sbb
jnp
aaa
into
lret
pushf
push
lods
int
push
in
sbb
aas
jae
jno
push
jmp
les
scas
inc
pop
out
and
imul
inc
insb
mov
cmpb
or
adc
daa
mov
test
mov
and
mov
arpl
pop
flds
or
sbbl
pop
jl
ss
jge
adc
add
pushf
xor
and
jb
and
push
push
jbe
nop
test
fsubrs
leave
pop
scas
cli
lret
cld
sbb
int
sbb
push
jmp
outsl
xor
mov
rcll
adc
pop
inc
gs
inc
xchg
data16
ljmp
cmpl
or
xchg
mov
mov
jecxz
inc
fidivs
add
mov
test
fildl
test
stc
fyl2xp1
mov
pop
sub
dec
sahf
xor
shlb
sti
xchg
and
inc
sbb
jp
aaa
into
lret
lods
int3
jmp
in
sbb
xor
pop
jae,pt
jo
push
jmp
ret
xchg
jo
in
inc
push
out
and
push
lods
inc
imul
popa
mov
loopne
jg
xor
mov
addl
test
mov
arpl
push
fadds
or
sbbl
pop
jnp
lods
jl
adc
add
pushf
xor
and
jb
and
nop
cmpsl
jbe
outsl
test
pop
scas
stc
leave
testb
sbb
lods
dec
insb
push
jmp
outsb
xor
lahf
mov
push
call
inc
adc
inc
fs
inc
xchg
mov
jmp
or
cmpl
bound
pop
jmp
mov
loop
inc
fidivs
add
mov
test
fildl
cmpsl
stc
fdivr
mov
pop
sub
mov
xor
shll
sti
xchg
and
fidivl
inc
sbb
jns
aaa
into
leave
lcall
sbb
xor
push
cmp
push
jmp
ret
pop
ret
jecxz
inc
adc
aaa
int
imul
jmp
mov
fisttpll
mov
adc
daa
mov
arpl
and
mov
arpl
add
daa
sbbl
pop
jp
lods
jnp
adc
dec
pushf
xor
and
jae
and
xchg
cmpsb
je
outsl
cmpsb
sbb
stc
sbb
into
dec
sbb
in
pushf
insb
xor
popf
mov
push
call
inc
adc
inc
arpl
and
call
or
test
or
bound
pop
or
mov
pop
sahf
loopne
dec
fbstp
add
mov
adcl
test
stc
mull
pop
sub
push
jge
sahf
xor
rcrb
cld
xchg
and
fidivl
inc
sbb
ja
cmp
enter
leave
jmp
xor
sbb
je
outsb
cmp
xchg
sub
jo
shl
inc
adc
mov
push
mov
cmpl
or
comiss
mov
popa
addl
mov
fs
add
inc
flds
sbbb
daa
pusha
negl
mov
adc
dec
pushf
xor
pop
fnsave
mov
xchg
movsb
jb
jo
lds
mov
notl
cmp
dec
sbb
lods
dec
imul
fwait
mov
push
jmp
inc
push
jno
inc
popa
mov
xchg
popa
es
mov
data16
lods
inc
out
out
test
pop
int3
arpl
pop
or
mov
orl
dec
fildll
add
mov
adcl
sbb
movsb
arpl
aad
mov
sbb
dec
rclb
lahf
ss
fidivs
popf
mov
xchg
and
inc
sbb
jbe
cmp
xchg
pop
scas
enter
sbb
xor
or
ljmp
jno
shl
inc
adc
es
into
gs
addr16
cmpl
or
push
sub
pop
sahf
pusha
jg
fnsave
shll
aam
fiaddl
es
clc
push
ja
aaa
test
lret
cld
lret
popf
xor
sbb
mov
xchg
mov
ret
sbb
notb
pop
scas
dec
addr16
in
cwtl
imul
ljmp
jb
aas
pop
mov
xchg
pusha
nop
daa
xchg
mov
data16
scas
inc
in
out
test
push
int
cmp
mov
mov
or
sub
dec
data16
adcb
andb
cli
aam
mov
sbb
dec
rclb
lahf
ss
fidivs
pushf
mov
xchg
and
inc
sbb
jne
cmp
lds
push
in
pop
jmp
je
imul
ljmp
jno
mov
loope
adc
into
gs
inc
data16
cmpl
or
or
cs
sahf
pop
jle
shlb
roll
add
sbbb
and
mov
push
test
lret
cld
sbb
je
sbb
sti
xchg
mov
ret
repz
clc
cmc
adc
iret
inc
push
pop
scas
inc
push
in
xchg
push
je
ljmp
sub
pop
mov
nop
pop
nop
daa
xchg
mov
data16
scas
inc
in
out
test
add
or
mov
orb
or
sub
daa
mov
jg
inc
faddl
mov
mov
sbb
inc
rclb
lahf
ss
fidivs
fwait
mov
xchg
pop
out
inc
sbb
je
cmp
les
push
in
push
call
je
push
push
ljmp
jno
mov
loopne
adc
into
gs
xorl
or
or
sub
pop
jge
iret
fs
add
inc
fiaddl
and
clc
push
jne
aaa
cmpsl
jbe
push
test
mov
xor
sbb
je
sbb
push
dec
outsb
sti
xchg
mov
rcrl
bnd
hlt
adc
iret
inc
adc
push
in
xchg
addr16
or
mov
xchg
sub
jb
cmp
pop
nop
daa
nop
mov
data16
scas
inc
jecxz
out
test
push
or
xchg
orb
or
sub
daa
mov
jle
inc
faddl
mov
mov
sbb
inc
rclb
lahf
ss
fidivs
lcall
push
out
inc
sbb
jae
cmp
ret
xchg
pop
scas
vorps
adc
aaa
je
imul
xchg
sub
mov
pandn
arpl
lods
inc
fs
xorl
or
or
sub
pop
jl
into
fs
call
inc
fiaddl
and
clc
push
je
cmp
mov
xor
sbb
jne
sbb
lahf
insl
fidivl
rcrb
icebp
sar
repnz
rolb
pop
scas
inc
fs
out
xchg
gs
or
mov
ljmp
jb
cmp
mov
mov
scas
inc
loope
out
xchg
int
xor
or
addb
or
sub
daa
mov
jge
inc
fdivrl
test
lahf
arpl
shl
mov
sbb
lahf
ss
fbstp
cwtl
mov
xchg
sbb
aas
sbb
jno
cmp
ret
scas
ret
jecxz
out
adc
xor
or
aaa
push
ljmp
jno
mov
fisttpll
bound
lods
inc
bound
lret
bound
xlat
jmp
rcrb
sahf
pop
jnp
fisubrs
gs
dec
inc
pop
test
push
and
push
jb
cmp
rclb
sahf
xor
dec
sbb
xchg
popf
imul
popf
mov
stc
nop
lock
roll
sbb
xchg
arpl
int
mov
or
out
xchg
sub
pop
jae
cmp
dec
mov
sub
scas
inc
filds
lock
add
xor
movsl
test
addl
or
sub
sub
jnp
inc
fnstsw
sbb
into
out
movsb
cmp
lock
inc
ret
inc
mov
ja
xchg
mov
xchg
sbb
fdivl
cmp
cli
xchg
outsl
cmp
rclb
out
adc
ss
xor
or
xchg
mov
fistl
addr16
cs
inc
pusha
sub
arpl
aad
addl
sub
lahf
pop
jns
fildll
lret
data16
cld
int3
inc
sbb
arpl
dec
jo
cmp
ret
rcrl
lahf
ss
push
loopne
dec
push
mov
xchg
fwait
imul
mov
mov
cmp
aas
nopl
xchg
popa
aaa
into
xchg
mov
push
in
push
in
in
xchg
sub
aaa
pop
mov
mov
sub
stos
mov
lock
dec
xor
movsl
adcl
test
mov
daa
clc
sub
jp
inc
fnstsw
xchg
int
movsb
cmp
out
sbbb
inc
ret
inc
mov
ja
xchg
mov
xchg
sbb
fdivl
cmp
mov
cmp
xchg
outsb
mov
sarl
loopne
out
adc
ss
xor
gs
jmp
xchg
mov
ficoml
addr16
sub
out
test
rorl
add
ljmp
daa
or
test
lret
sti
lret
inc
sbb
sbb
sbb
mov
sbb
ret
hlt
adc
mov
xchg
lcall
mov
mov
cmp
ds
sbb
nop
pusha
aaa
into
xchg
mov
push
jecxz
push
in
jecxz
xchg
sub
ss
mov
mov
sub
stos
mov
fdivr
lock
dec
xor
movsl
adcb
andl
mov
imull
mov
jns
inc
fnstsw
xchg
int3
in
movsb
cmp
out
sbbb
inc
ret
inc
mov
ja
xchg
mov
xchg
sbb
fdivl
cmp
insb
cmp
xchg
insl
lea
sarl
fistps
adc
ss
xor
xor
test
mov
mov
or
nop
daa
or
addr16
sub
inc
pop
jg
test
rorb
add
ljmp
or
test
es
cli
lret
sti
sbb
cli
dec
outsb
mov
sbb
rcrl
inc
adc
push
inc
addr16
xchg
cltd
fdivl
mov
cli
xchg
in
or
sarb
pop
pop
lock
pop
aaa
into
nop
mov
push
loop
push
in
loop
xchg
sub
xor
push
xchg
sub
test
lock
std
into
gs
push
push
movsl
adcl
ret
shll
dec
loope
imulb
mov
js
inc
fnstsw
xchg
lret
in
movsb
cmp
in
sbbb
inc
ret
inc
mov
ja
xchg
mov
xchg
sbb
fdivl
cmp
imul
xchg
insb
mov
sarl
ficomps
pavgb
int
xor
arpl
push
jmp
test
mov
mov
or
nop
daa
or
shlb
sub
test
rorl
add
ljmp
and
dec
fbld
enter
leave
inc
sbb
cli
dec
insl
mov
sbb
rcrb
inc
adc
xchg
cwtl
data16
mov
cli
xchg
jmp
cmp
cmp
sbb
mov
into
scas
ja
loope
push
in
loope
xchg
sub
xor
mov
xchg
sub
test
inc
lock
dec
push
movsl
orb
andl
dec
loope
cmc
sub
ja
inc
fnstsw
xchg
lret
cmp
aas
ret
aas
mov
ja
xchg
mov
xchg
pop
out
jae
cmp
push
cli
xchg
imul
scas
mov
fbstp
int
xor
bound
push
jmp
adcl
mov
or
nop
daa
or
shlb
sub
test
rorb
add
ljmp
and
lahf
push
jne
fbld
data16
clc
enter
sbb
cli
dec
insb
mov
sbb
mov
loopne
inc
adc
xchg
xchg
fdivl
mov
cli
xchg
ljmp
mov
pop
pop
lock
into
mov
push
in
loopne
xchg
sub
xor
xchg
xchg
mov
fsqrt
lock
into
gs
dec
in
addl
or
and
sub
jbe
inc
fnsave
xchg
leave
ljmp
sbb
mov
ja
xchg
mov
xchg
push
in
jae
cmp
imul
cmp
mov
fcompl
or
das
jbe
popa
xor
adcb
aad
dec
pop
nop
daa
or
shlb
sub
test
iret
or
add
ljmp
and
lahf
push
je
fbld
data16
test
test
sbb
dec
imul
popf
mov
lahf
ss
ja
adc
xchg
xchg
fdivl
mov
mov
mov
xchg
jmp
or
mov
pop
pop
lock
lea
push
in
filds
xchg
sub
xor
dec
test
sub
cmpsb
mov
fdivr
lock
cli
into
gs
push
movsl
jle
in
cmpl
ret
shlb
dec
loope
repz
jne
inc
fnsave
xchg
enter
sbb
sbbb
cmp
mov
ja
nop
mov
xchg
adc
aaa
sbb
push
mov
sarl
fistpl
or
ss
jbe,pn
pusha
das
push
jmp
adcl
push
aad
daa
pop
sub
addr16
sub
test
into
or
dec
ljmp
and
lahf
push
jae
loopne
jae
mov
test
fcomi
pop
xchg
dec
push
cmp
ret
mov
loope
inc
movsbl
arpl
xchg
xchg
fdivl
mov
mov
mov
xchg
out
cmp
cmp
sbb
mov
into
mov
in
xchg
sub
xor
dec
test
sub
scas
inc
xlat
stc
lock
stc
int
sub
movsl
jle
jmp
jle
sub
rcrb
dec
loope
repnz
mov
jne
inc
fdivl
xchg
jmp
sbbl
outsl
cmp
outsb
nop
loopne
ret
push
shl
xchg
adc
aaa
sbb
push
mov
sarl
fistpl
or
xor
or
pop
adcl
push
aam
es
sub
addr16
daa
lods
inc
pop
jnp
test
into
or
dec
jmp
ret
or
mov
les
cmc
les
push
xchg
inc
imul
out
mov
loope
inc
push
mov
xchg
xchg
popa
fdivl
mov
mov
mov
xchg
out
cmp
cmp
sbb
mov
into
mov
push
in
fdivr
xchg
sub
xor
dec
test
sub
movsb
scas
inc
clc
lock
clc
int
sub
jge
jmp
jge
sub
iret
sahf
or
and
daa
mov
je
inc
fdivl
sbb
call
sbbl
outsb
cmp
ja
mov
xchg
adc
ss
addr16
cmp
mov
ficompl
or
xor
or
pop
adcb
shll
es
lods
inc
pop
jp
test
or
dec
jmp
ret
or
mov
ret
addr16
hlt
ret
inc
fcomi
adc
arpl
inc
push
sbbl
in
mov
loope
inc
or
call
xchg
mov
mov
mov
xchg
in
cmp
aaa
push
sbb
mov
into
mov
push
test
fcomp
add
xor
xchg
pop
in
mov
out
mov
ljmp
mov
pop
dec
pop
add
js
call
push
hlt
xchg
xlat
push
adc
jle
jo
repz
sbb
shrl
mov
xchg
in
add
xor
xchg
repz
cmp
push
idiv
jno
nop
mov
mov
mov
test
std
pop
arpl
push
lock
loop
cmp
jae
lods
jns
xor
cltd
dec
loop
jns
out
addr16
sbb
es
xor
and
mov
clc
xchg
adc
sbb
jp
lcall
cmp
movsl
decl
shr
sbb
push
xchg
clc
dec
lea
outsl
hlt
mov
enter
out
sub
or
push
inc
rcll
stos
scas
push
adc
fxam
hlt
add
gs
xor
mov
in
jae
xchg
cs
jge
push
into
xor
addr16
ret
rclb
stc
xor
divb
dec
in
xchg
jg
xchg
ret
mov
dec
ljmp
jge
push
lods
ja
mov
push
dec
nop
lahf
outsb
jp
scas
mov
jnp
sti
add
mov
sarl
aam
push
cwtl
push
sub
fnstcw
insb
scas
xor
or
jl
sti
xchg
subb
pop
push
rolb
es
xchg
inc
xchg
iret
pop
mov
or
inc
stos
add
fidivl
adc
rcrl
rcll
in
mov
jecxz
lret
in
and
out
in
gs
cmp
mov
sub
outsb
sbb
add
cmc
dec
in
xor
mov
pop
popf
mov
sub
dec
cwtl
dec
push
pop
mov
ljmp
cwtl
out
arpl
repnz
insb
out
ja
jecxz
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
or
xchg
test
jb
or
in
or
sbbl
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
cmpb
lret
jecxz
xor
jg
sbb
xchg
les
sub
bound
mov
aas
jbe
sbb
pop
imul
or
mov
jo
inc
mov
dec
idivb
pushf
cmp
cmp
lahf
jecxz
mov
or
popf
mull
imul
mov
and
fnstcw
outsl
ss
fisttps
mov
outsl
adc
push
jns
lds
fcoms
mov
ds
pushf
cmpsl
or
add
sbb
cmp
dec
cwtl
loope
cmp
stc
movsb
or
sti
sbb
cwtl
iret
push
add
outsb
cmpb
inc
or
popa
leave
push
lahf
bound
mov
mov
insb
xchg
add
add
mov
adc
add
xchg
sub
daa
mov
mov
lods
addb
pushf
mov
stc
mov
into
icebp
outsl
lods
aas
aam
pop
shlb
lcall
lahf
lods
or
inc
loope
push
rorl
das
ret
inc
loope
sbb
inc
addl
aaa
sbb
jbe
jmp
xor
out
pop
push
call
xchg
cmc
sbb
addr16
sub
fdivrl
sub
push
shr
mov
lods
push
xchg
pop
cli
jbe
push
pop
rcl
add
testl
cmp
push
es
push
jo
dec
inc
je
icebp
xchg
aas
jnp
mov
repnz
dec
xor
out
sbb
jae
rolb
push
stc
sbb
inc
shr
sbb
sub
or
pop
cltd
scas
pop
xchg
jecxz
mov
outsl
inc
icebp
mov
lret
shrb
cwtl
iret
test
jle
add
sbb
faddl
xchg
dec
sbb
jmp
out
cmp
push
xchg
or
dec
aam
negl
dec
popa
sti
lahf
lcall
sub
