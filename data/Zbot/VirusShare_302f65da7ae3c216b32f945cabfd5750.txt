push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
pop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
mov
mov
pusha
call
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
jmp
ret
cld
xor
push
pop
add
mov
mov
shl
xor
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
popf
push
pushl
decl
ret
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
pushl
call
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
mov
add
push
and
add
add
cmp
add
mov
and
add
add
in
add
enter
pop
and
add
and
add
add
add
and
add
and
add
and
add
add
fsubl
add
xchg
and
add
add
add
add
bound
add
mov
and
add
add
sbb
add
cs
add
add
pop
and
add
add
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
mov
add
push
and
add
add
cmp
add
mov
and
add
add
in
add
enter
pop
and
add
and
add
add
add
and
add
and
add
and
add
add
fsubl
add
xchg
and
add
add
add
add
bound
add
mov
and
add
add
sbb
add
cs
add
add
pop
and
add
add
add
add
add
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
imul
jb
je
arpl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
gs
outsl
jbe
inc
imul
jns
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
inc
gs
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
addl
jb
popa
je
inc
imul
jns
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
call
inc
imul
bound
gs
add
movsl
add
je
gs
imul
aad
inc
imul
gs
add
je
imul
bound
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
imul
jae
push
gs
jne
jae
jb
outsl
jae
add
push
imul
js
push
add
pop
or
jae
dec
gs
popa
addr16
add
lea
inc
jb
jns
je
imul
dec
jae
imul
jae
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
jnp
push
gs
outsl
arpl
add
xchg
push
push
gs
jae
addr16
add
sbb
ja
jo
imul
pop
dec
jae
outsl
outsl
insl
gs
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
imul
jb
gs
add
jb
popa
je
inc
gs
je
jo
arpl
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
inc
push
push
dec
inc
dec
dec
cs
insb
add
add
inc
ja
insb
outsl
outsb
gs
outsb
je
jns
add
push
inc
push
dec
xor
cs
insb
add
mov
sbb
dec
cli
stos
jmp
std
xor
ret
cmc
add
xchg
jp
xchg
inc
pop
fcoms
aas
adc
int3
imul
stos
cltd
add
and
mov
mov
sub
mov
and
jno
imul
popf
jae
lods
outsl
jle
sbb
pop
xchg
cmp
mov
mov
dec
cmc
fwait
lock
in
lock
xor
out
and
rolb
lea
sahf
jl
sbb
mov
fidivl
push
jno
fyl2x
aad
dec
and
xor
push
mov
jp
dec
loop
cmc
push
cmp
pushf
insb
fsub
repnz
inc
cmp
sub
mov
xchg
add
in
loopne
jge
xor
ljmp
dec
andl
jns
add
dec
inc
cwtl
nop
movsl
adc
hlt
cmpsb
push
xor
clc
inc
mov
cmpsb
lock
add
pop
sarl
mov
rorb
and
mov
cmp
inc
pop
mov
scas
ljmp
scas
cmp
dec
and
lret
arpl
cs
cmp
andb
int3
mov
inc
fs
inc
sub
mov
xor
fmuls
lret
push
xchg
mov
or
es
pop
jns
add
sti
mov
pop
jecxz
dec
xor
les
popa
push
inc
adc
jns
add
sahf
lcall
cmp
js
jne
xlat
ficompl
out
mov
mov
es
jb
mov
test
sub
add
adc
cld
mov
dec
aas
sub
mov
les
sbb
add
push
or
inc
jbe
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jp
lods
lods
lods
add
cmpsl
cmpsb
push
mov
mov
mov
ret
ret
leave
leave
lret
int
rcl
shr
rcl
shl
ror
shl
into
int3
into
hlt
enter
leave
leave
out
in
mov
mov
lods
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
leave
not
rcl
cld
xlat
std
fcom
fcom
aad
aad
rcl
sar
int3
int3
into
aad
aad
rcl
sar
ret
std
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
scas
sbb
mov
jnp
mov
sar
mov
lret
leave
lret
dec
rcl
aad
xlat
xlat
xlat
call
xlat
xlat
call
aam
dec
into
int
int
into
call
aam
into
int3
int
mov
mov
mov
std
cmpsl
cmpsl
cmpsl
ljmp
push
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
int
call
rcl
fcom
fdivr
fcom
call
aad
dec
into
int
leave
lret
int3
int
inc
mov
mov
mov
cmpsb
test
jmp
fwait
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
push
bound
fs
sbb
das
push
or
push
xor
ss
aaa
cmp
and
adc
push
pop
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
call
ror
call
call
aad
dec
ror
dec
leave
enter
inc
ret
ret
mov
mov
scas
lods
lods
jmp
pushf
sahf
cwtl
cwtl
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jl
jle
jg
jo
jb
popa
bound
push
push
push
xchg
cmp
cmp
pop
pop
pop
stos
jo
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
dec
lret
enter
ret
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
fwait
lcall
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsb
add
pop
or
jnp
xchg
lea
incb
jl
jp
jl
outsb
outsb
jo
data16
push
je
jge
jle
jns
js
arpl
inc
inc
inc
cmp
pop
sbb
adc
adc
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
nop
incl
test
xchg
xchg
xchg
lahf
sahf
sahf
sti
mov
xchg
xchg
mov
js
jp
cs
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
mov
jg
jo
jo
je
jne
jle
jg
test
jl
addr16
cmp
es
push
jge
jle
cltd
fwait
lcall
test
icebp
stos
stos
lods
sti
lods
lods
lods
lods
lods
lods
test
test
movsb
mov
lcall
mov
js
jp
jnp
jnp
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
test
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
push
pop
push
push
prefetch
inc
inc
inc
dec
imul
xchg
leave
cltd
fistps
fwait
stc
nop
nop
xchg
std
mov
mov
xchg
mov
lea
cltd
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
sahf
sahf
std
movsl
movsl
movsb
stc
mov
xchg
xchg
in
nop
xchg
in
xchg
push
jne
or
add
or
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
xchg
std
lea
nop
call
lahf
sahf
jmp
cmpsl
lods
pushl
movsl
scas
mov
xchg
stos
std
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
lcall
xchg
decl
call
xchg
xchg
pushf
sahf
pushf
movsl
mov
stos
movsl
mov
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
bound
jno
jae
jp
jg
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
jbe
mov
movsl
mov
mov
mov
mov
movsl
mov
add
pop
pusha
adc
mov
lcall
lea
call
xchg
xchg
call
xchg
xchg
cltd
lcall
mov
movsb
movsb
std
movsb
movsb
mov
out
xchg
xchg
xchg
xchg
les
fwait
in
xchg
xchg
out
mov
nop
stc
xchg
xchg
std
xchg
je
lcall
jmp
inc
jl
mov
jnp
mov
jae
mov
outsl
ljmp
adc
stos
or
ljmp
jg
mov
mov
stos
pushf
mov
movsb
mov
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
pushf
lcall
pushf
popf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
fwait
cld
cltd
xchg
sahf
stc
sahf
fwait
mov
cld
pushf
xchg
xchg
imul
xchg
dec
jp
cltd
je,pt
cltd
sub
pushf
and
lahf
sbb
movsb
adc
ljmp
adc
lods
adc
lods
adc
lods
adc
mov
imul
adc
pushl
cmp
fwait
lods
mov
scas
lods
scas
mov
mov
mov
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
sahf
jmp
mov
mov
decl
mov
decl
jbe
cltd
jo
fwait
fs
xchg
dec
jp
xchg
cmp
insb
decl
adc
or
call
add
fwait
add
lahf
pop
pop
jmp
sbb
mov
insl
pushl
jo
mov
and
mov
and
inc
cmp
xchg
scas
mov
lods
scas
mov
mov
movsl
movsl
add
pop
pop
adc
scas
mov
mov
cwtl
popf
lcall
movsl
mov
ljmp
test
cmpsl
lcall
jg
decl
inc
jo
mov
imul
sub
mov
pop
incl
add
incl
add
lea
push
call
add
cltd
add
lahf
add
cmpsb
or
pushl
es
mov
sub
shrb
inc
sub
inc
sub
enter
enter
leave
inc
mov
scas
mov
mov
lret
movsl
dec
mov
mov
add
add
add
lods
mov
push
adc
cmpsl
scas
ljmp
popf
jmp
stos
stos
ljmp
lods
lods
pushl
scas
lods
jmp
mov
mov
arpl
test
incl
or
add
push
incl
push
decl
add
popl
push
call
add
sahf
add
movsb
add
scas
adc
mov
aaa
cmp
aaa
test
enter
leave
cmp
sarb
xchg
sarb
mov
rolb
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsb
ljmp
popf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
decl
add
pushf
add
add
add
lods
add
mov
jno
ret
dec
inc
mov
into
inc
call
inc
call
inc
nop
call
dec
xchg
call
dec
xchg
fmull
fistl
call
test
mov
mov
movsb
movsb
mov
or
add
add
add
add
inc
dec
adc
jl
movsb
popf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
outsb
decl
sbb
nop
sbb
mov
pop
decl
push
call
add
sahf
add
mov
add
test
pusha
pushl
and
call
push
cltd
fcoms
ficoml
fistl
jmp
push
sahf
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
js
lahf
fwait
sahf
jmp
sahf
cltd
lahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
pop
call
and
call
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
fwait
fistpl
fisubs
fisubs
jmp
gs
in
cmpsb
jmp
addr16
call
push
mov
int
mov
cmpsl
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
je
cltd
xchg
lcall
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
lcall
pop
call
add
cltd
add
mov
add
lods
add
mov
pushl
adc
roll
fsubl
jmp
outsb
lods
jmp
jno
jmp
jno
ljmp
in
jae
out
jbe
in
jne
in
je
jmp
mov
mov
cmpsl
cmpsl
lcall
mov
add
add
add
add
insl
js
mov
popf
pushf
lcall
mov
mov
mov
mov
mov
cmpsb
lods
lcall
xor
mov
aaa
jae
mov
sbb
call
add
sahf
add
movsb
add
stos
add
mov
popa
pushl
add
sbb
fsts
jmp
jbe
ljmp
in
xorb
lock
push
test
call
mov
inc
mov
test
daa
lahf
mov
mov
add
add
xor
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
mov
lcall
cmp
movsb
inc
jle
movsl
inc
jg
movsb
aaa
jbe
fwait
sbb
xchg
add
sahf
add
movsl
add
stos
add
scas
add
mov
fs
mov
add
shll
cmp
call
mov
icebp
sar
xchg
ret
pop
push
nop
push
xchg
xchg
stc
pop
out
nop
sar
mov
inc
clc
stos
lods
stos
mov
sahf
popf
xor
sahf
pushf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
mov
inc
ret
ret
mov
jge
lcall
dec
cmp
mov
maxps
cltd
add
mov
add
lods
add
mov
fs
mov
add
movl
mov
out
xchg
push
cltd
push
fwait
push
cltd
push
fwait
lret
fwait
enter
int3
cld
lahf
into
cli
sahf
into
sti
cltd
leave
push
xchg
sar
mov
cli
mov
mov
lahf
mov
xchg
add
add
add
ss
or
cmp
dec
jecxz
pop
call
mov
mov
mov
sar
enter
mov
lahf
jmp
push
xchg
scas
dec
xchg
movsl
sub
fwait
push
pop
lcall
add
stos
add
mov
popa
mov
add
enter
rorb
filds
in
mov
push
cmpsb
into
push
movsl
int
clc
cmpsb
into
cli
test
into
cli
cmpsl
into
std
test
sar
std
cmpsl
sar
negl
int3
dec
lret
mov
mov
lahf
lahf
sahf
dec
xchg
xchg
xchg
add
cltd
cltd
add
add
add
xor
sub
inc
inc
inc
bound
push
xlat
jne
jo
mov
sarl
mov
ret
mov
leave
leave
inc
rol
mov
cmpsl
jmp
push
mov
scas
dec
test
mov
add
jmp
add
mov
arpl
mov
add
into
add
fadds
jb
loopne
jnp
out
pop
cmpsb
push
sahf
lret
cli
scas
sar
cld
mov
cld
scas
sar
cli
mov
cld
mov
std
mov
cld
mov
std
mov
pushl
sar
mull
call
leave
int
mov
mov
sahf
sahf
mov
or
add
add
sbb
outsb
outsl
jo
cltd
cltd
lcall
fcom
jmp
fcom
not
rcl
std
int3
int
dec
lret
leave
leave
leave
dec
lret
lret
inc
leave
mov
scas
ljmp
push
mov
stos
cmp
jmp
add
add
mov
arpl
mov
add
roll
outsl
call
add
loopne
je
ljmp
cld
lods
aad
mov
fcos
std
mov
fdivr
std
mov
std
mov
xlat
mov
xlat
push
mov
call
lret
mov
mov
xchg
or
add
add
xor
add
add
pop
or
mov
pop
out
out
jecxz
out
loop
loope
fstp
fsub
fcmovu
fdiv
xlat
fcmovnbe
cli
aad
fdivr
int3
rcl
mov
imul
jmp
add
mov
arpl
mov
add
leave
add
aad
jb
fldl
jbe
in
jbe
out
xor
cld
mov
loopne
std
ret
loopne
inc
loopne
inc
fdivrp
inc
std
leave
loopne
dec
dec
loopne
inc
std
lret
cli
mov
leave
fmul
sar
mov
mov
xchg
adc
add
add
std
incl
std
incb
incb
hlt
div
or
in
in
pop
jmp
in
sub
out
out
dec
jmp
ljmp
in
in
fcmovnu
fsubr
ret
stc
lods
jno
cmpsb
cmp
mov
add
test
pop
pushl
push
dec
add
fadds
jb
fiadds
ja
jmp
inc
fwait
cld
mov
jecxz
std
int3
in
dec
out
dec
in
dec
loop
std
into
loope
dec
loop
shl
shl
call
in
shl
cld
ret
fcos
out
mov
xlat
inc
ret
cmpsb
cmpsl
cmpsb
mov
cwtl
cwtl
add
add
add
std
incl
std
incl
idiv
testb
repz
repz
push
out
icebp
lock
in
lock
cmp
in
in
pop
fsubp
loope
mov
xchg
sti
lahf
and
jmp
add
add
mov
inc
add
movl
jb
fildl
je
in
jnp
jmp
jge
negb
cli
mov
cld
shl
shl
std
shl
std
shr
std
shl
call
out
fsubr
xlat
jmp
fucomi
fucomi
cld
shl
push
ret
in
lret
repz
test
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
testl
hlt
div
or
aam
xor
mov
xchg
negb
add
test
pop
ljmp
add
ret
dec
add
roll
jno
faddl
jbe
out
ja
in
sbb
push
jbe
sti
fdivrp
cld
xlat
ljmp
fldlg2
std
fldpi
fsubr
fsubr
std
fsubr
fucomip
fucomip
fucomip
shl
push
aam
out
rcl
iret
clc
stos
lods
stos
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loope
add
enter
mov
cwtl
repnz
jmp
add
mov
add
into
add
aad
jb
loopne
je
jmp
sub
std
aam
std
fsubrp
fsubr
std
fucomi
std
fucomi
std
xlat
call
shl
cld
shl
cld
shl
clc
int
stc
int
push
ret
out
mov
fcomp
sti
mov
mov
cltd
cltd
lcall
fwait
fwait
add
xlat
aad
mov
mov
sahf
jmp
sub
add
test
pusha
pushl
inc
add
rolb
outsl
fadds
jb
loope
js
ljmp
cld
xchg
sti
lret
sti
lret
jecxz
cli
fdivrp
clc
mov
aam
hlt
mov
into
push
mov
int
jmp
mov
sar
ljmp
imul
fnclex
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
int3
add
shrb
loopne
xor
pop
ljmp
add
mov
add
into
or
rorb
jne
ficoml
js
loopne
cmp
inc
cwtl
call
mov
ljmp
std
loop
ret
cld
fisubrs
neg
mov
leave
ljmp
rcr
loopne
xlat
shl
xlat
fadd
call
out
test
in
out
popf
jmp
leave
leave
push
lods
lods
stos
adc
cmpsb
test
add
rolb
ret
mov
popf
lods
aam
dec
cmp
cmpsb
push
insb
lods
es
mov
jns
mov
dec
xchg
ret
push
mov
leave
arpl
hlt
iret
mov
sarl
rcl
mov
int
ror
lret
mov
int
mov
aam
jg
fcmovu
jb
gs
jecxz
out
out
call
cmc
cmc
sub
div
and
lock
sbb
fcmovnu
or
mov
into
add
add
add
sarl
mov
xchg
lock
sbbb
mov
cmpsb
sarb
test
mov
mov
cmpsl
enter
leave
ret
mov
leave
int
ror
shlb
rcl
push
iret
rcl
dec
aam
inc
rcl
xor
fcmovnu
daa
xlat
fstp
sbb
adc
jecxz
push
loope
in
call
repnz
add
cld
testb
std
cld
add
std
add
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
ret
inc
ret
mov
daa
int
shlb
iret
rcrb
rcl
rclb
rcl
rorl
aam
aad
aam
xlat
add
fstp
add
add
in
add
in
ljmp
std
incl
mov
mov
add
ret
ret
mov
rol
sub
mov
mov
push
rol
or
mov
add
int3
lret
add
aam
add
aam
rcl
add
xlat
add
aam
add
xlat
loope
aad
fildl
fsubp
loopne
fstp
loopne
in
out
icebp
lock
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
rol
mov
iret
iret
into
jmp
aad
cmc
rcl
sar
iret
iret
iret
cli
lret
lret
lret
stc
int3
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
aas
ds
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
into
xlat
aad
aad
aad
ror
sar
iret
int
dec
int3
lret
mov
mov
stos
stos
lods
icebp
cltd
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
je
jne
jne
data16
dec
dec
inc
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
lret
rcl
call
rcl
dec
lret
int3
inc
mov
rol
pushl
test
lahf
xchg
xchg
xchg
jmp
outsl
jo
push
push
push
dec
add
add
add
add
add
add
addb
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
sar
mov
mov
mov
ljmp
pushf
fwait
call
xchg
xchg
cltd
fwait
fwait
out
addl
adc
adc
add
add
add
add
add
pop
fwait
cltd
cltd
add
popf
xchg
cltd
fcoml
addb
jge
jge
jns
jns
jp
jp
jns
jp
je
je
push
push
push
cmp
jae
pushf
pushf
popf
mov
lods
scas
repz
scas
scas
sti
scas
scas
scas
std
test
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
cmpsb
movsb
cltd
je
je
adc
adc
add
add
add
add
insl
outsb
outsb
pop
nop
mov
sahf
lcall
mov
nop
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
jo
orl
cltd
repnz
xchg
xchg
std
lea
call
popf
ljmp
mov
mov
scas
mov
xlat
movsl
mov
jg
pop
popa
pop
or
scas
mov
cmpsb
lahf
mov
decl
lcall
sahf
lahf
sti
sahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jge
subb
nop
xchg
lock
mov
lcall
mov
mov
xchg
mov
mov
mov
mov
mov
mov
out
scas
stos
insl
stos
test
add
add
add
pop
pop
pop
or
mov
in
mov
nop
call
xchg
xchg
lcall
cwtl
cltd
fwait
popf
lcall
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
insb
test
xchg
pop
jle
sahf
dec
jl
movsl
inc
jp
lods
xor
jae
mov
insl
ljmp
sbb
mov
mov
scas
scas
jle
mov
add
add
add
popa
pop
pop
or
mov
call
sahf
popf
jmp
lahf
mov
decl
orb
xchg
jno
cld
xchg
popa
test
xchg
dec
js
xchg
cmp
xchg
sub
xchg
sbb
adc
lahf
punpcklwd
test
sbb
sbb
sbb
mov
and
rcrb
mov
scas
scas
xchg
popf
popf
popf
adc
add
add
pusha
pusha
pop
or
mov
stos
movsb
cmpsb
jmp
test
ljmp
test
lcall
pop
jnp
mov
push
mov
decl
adc
or
mov
pop
call
add
test
arpl
mov
jae
mov
sub
jge
leave
xor
lret
dec
pop
cwtl
inc
stos
mov
mov
scas
movsb
test
test
pusha
pop
pusha
or
cmpsb
test
jmp
mov
pushl
mov
jmp
jo
mov
pop
decl
or
xchg
push
decl
add
lahf
add
movsl
add
mov
insl
inc
cmp
iret
inc
mov
aam
call
inc
nop
call
bound
stc
mov
mov
movsl
movsb
movsb
daa
std
add
add
add
pop
or
popf
mov
ljmp
mov
mov
mov
mov
movsb
stos
lcall
push
popa
call
push
pop
decl
push
call
pop
jmp
add
mov
dec
nop
call
pop
fwait
ficompl
ficomps
jmp
pop
mov
fildll
dec
test
cld
mov
mov
cmpsl
stos
cmpsl
xor
add
add
dec
pop
jle
jl
popf
xchg
cwtl
jecxz
lahf
mov
pushl
mov
mov
lcall
cs
lcall
and
xchg
cvtdq2ps
xchg
add
sahf
add
test
pusha
pushl
push
addr16
xor
jmp
insb
test
jmp
jno
in
jno
jmp
jns
call
test
mov
inc
addb
add
dec
pop
insl
insl
insb
bound
lcall
mov
mov
sar
mov
jmp
cmp
cmp
popf
sub
call
add
movsb
add
lods
add
mov
fs
or
xlat
inc
xchg
jmp
jp
jmp
mov
out
test
push
mov
out
xchg
mov
test
push
lcall
add
sub
push
push
push
dec
pop
addr16
test
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
cmp
sub
lcall
ljmp
add
mov
adc
jmp
pusha
mov
push
xchg
xchg
push
cwtl
clc
cltd
enter
leave
push
xchg
jmp
stos
inc
mov
lods
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
mov
cmpsl
jmp
dec
cmp
and
lahf
add
add
mov
fs
mov
add
fldenv
cmp
jnp
push
mov
iret
cli
test
sar
std
stos
sar
cld
lods
sar
stc
cmpsb
int
out
enter
in
test
popf
pushf
or
add
add
dec
push
dec
aaa
je
jae
stos
stos
stos
ror
int
out
iret
lret
cmc
lret
sti
leave
leave
lret
leave
leave
mov
pusha
mov
stos
inc
jg
mov
add
mov
fs
add
iret
add
fiaddl
xchg
clc
xchg
cld
mov
mov
cld
mov
xlat
cld
mov
xlat
cld
mov
leave
dec
rol
scas
lods
scas
mov
add
add
add
add
pop
or
rcl
dec
loop
fsubp
fistps
fcmovnu
xlat
fsubr
shlb
test
push
pop
ljmp
add
lret
call
add
jecxz
jnp
icebp
push
mov
std
loopne
inc
loopne
std
std
enter
leave
fdivrp
std
lret
loopne
cld
out
mov
lret
divb
sahf
sahf
sbb
add
add
std
incb
incl
ljmp
in
in
in
xor
loope
loop
les
mov
mov
add
mov
fs
add
iret
add
fildl
jne
ljmp
sti
ret
fdivrp
sti
iret
out
std
shl
shl
call
out
std
out
fsubr
shl
push
fcos
fcmovne
sar
mov
mov
and
add
add
incl
std
add
cld
pop
aad
push
mov
pop
mov
sahf
or
ljmp
add
ret
add
rolb
jno
fiadds
jbe
in
pop
mov
cli
mov
std
shl
fldpi
std
fucompp
std
xlat
out
xlat
jmp
cld
cld
aad
push
fdivr
sti
mov
lahf
sahf
das
add
add
int3
int3
int
mov
arpl
ljmp
gs
add
roll
jb
loopne
js
out
xor
stc
int
cli
lret
cmc
fsin
hlt
ret
bnd
lock
sar
in
sar
in
ljmp
ljmp
test
add
add
add
aam
mov
jae
or
imul
sbb
lret
and
xlat
sub
pushf
clc
jecxz
mov
out
loop
lret
mov
lret
ror
ffreep
sarb
in
ficompl
out
out
jns
rcl
dec
mov
add
add
mov
mov
movsb
les
pop
xchg
mov
xchg
fidivrl
andb
into
mov
les
rol
lret
insl
aad
int
ror
rorb
fcomp
cmp
loopne
das
jecxz
fsubl
in
repnz
in
in
or
std
std
incb
std
incl
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
shrl
mov
pop
mov
rcl
or
loope
or
int
add
incb
std
std
add
add
add
int3
into
pextrw
or
int3
int3
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
cltd
add
rol
mov
enter
mov
mov
scas
mov
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
aad
rcl
sar
int
iret
std
mov
mov
sarl
gs
pop
pop
add
add
add
add
add
add
add
add
jae
jno
pushw
inc
inc
dec
das
cs
sub
and
add
add
mov
mov
cmpl
dec
int
call
aad
dec
int
dec
enter
mov
lcall
mov
push
add
add
add
add
je
je
test
adc
outsl
outsl
ret
popa
mov
addr16
outsb
outsl
insl
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
cltd
cltd
lds
jno
es
daa
das
add
add
add
add
jb
jb
pushf
xchg
fwait
mov
test
mov
mov
test
addl
dec
dec
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
lods
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
sahf
popf
pushf
cmc
cwtl
cwtl
cltd
in
addl
popa
popa
fs
jge
mov
nop
mov
fwait
mov
pushl
imul
stos
scas
lods
push
lods
stos
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
cltd
fwait
call
fwait
lcall
mov
loope
jne
out
xchg
fs
push
jp
pushf
inc
ja
cmpsb
ss
scas
sub
jno
mov
insb
pushl
popf
lods
lock
mov
imul
into
add
test
pop
scas
movsb
stos
test
sahf
popf
popf
jmp
movsb
call
imul
nop
inc
jae
mov
push
mov
pop
call
or
mov
outsl
pushl
and
inc
daa
jnp
lds
inc
lcall
stos
stos
stos
or
add
add
fwait
mov
cld
test
mov
pushl
xchg
decl
or
mov
push
decl
pop
jmp
adc
shll
int3
ds
iret
inc
mov
aam
mov
push
xchg
dec
lcall
mov
add
add
push
test
lahf
movsb
cld
lods
lods
scas
pushl
mov
ljmp
aaa
outsl
call
push
pusha
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsl
call
fwait
mov
test
test
pop
add
add
bound
adc
sahf
pushf
lcall
mov
mov
lcall
xor
cltd
and
xchg
push
pop
lcall
add
mov
push
jmp
jo
jmp
jp
out
jl
push
jle
ficompl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
arpl
jmp
add
pusha
pushl
outsb
fmull
in
lea
push
xchg
push
xchg
clc
xchg
jmp
movsl
inc
mov
movsb
sub
aas
aas
aas
adc
push
xchg
xchg
mov
inc
inc
mov
xchg
ljmp
sbb
movsl
add
mov
fs
add
aad
ja
jmp
lods
push
test
stc
lods
sar
cld
lods
sar
cld
lods
sar
scas
sar
ljmp
fldenv
std
add
xor
jno
jno
scas
mov
mov
aam
mov
aad
aam
out
leave
lret
mov
mov
jmp
add
ret
call
add
out
xchg
notl
fdivr
std
mov
std
ret
inc
fcos
lock
ret
test
addb
add
add
in
jmp
out
jmp
inc
loop
in
fcmovu
fldenv
mov
add
mov
add
fiadds
ja
lock
xchg
sti
mov
dec
in
std
iret
in
call
out
aad
aad
push
enter
into
in
lods
scas
scas
popa
addb
add
std
std
add
std
push
int3
int3
shrl
lahf
sbb
stos
add
mov
add
jecxz
jp
cmc
push
cmpsl
inc
loopne
cld
out
aam
cld
aam
std
aad
stc
aam
push
leave
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
scas
add
mov
or
cmp
insl
stos
cld
lock
shl
jmp
rcl
jmp
leave
aam
call
fcmovnu
scas
ret
ret
ret
push
cltd
cltd
cltd
add
rol
or
pushf
stos
xchg
dec
and
push
mov
shlb
jbe
mov
fdivrs
int3
adc
into
outsl
fmul
iret
pop
aad
in
loope
out
out
out
in
out
sbb
sarl
cmp
mov
scas
push
mov
mov
lds
rol
sbb
fstp
bswap
into
int
aad
push
incb
jg
jg
std
std
std
add
add
add
rol
std
std
add
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
repz
adc
adc
icebp
xchg
int3
sbb
lods
mov
xor
sub
iret
mov
out
xchg
call
inc
xchg
movsl
mov
iret
xchg
jnp
cmp
and
jbe
and
mov
adc
repnz
js
mov
jne
jg
or
daa
jae
imul
into
aad
das
cld
gs
pop
enter
cld
pop
inc
mov
or
int
xor
cmp
test
popf
lea
or
ja
ljmp
xor
xor
xor
add
mov
inc
sub
push
adc
xchg
dec
lcall
repz
cmp
push
sub
repnz
inc
push
lds
push
pop
cmp
cmpsb
leave
aam
dec
sbb
mov
loopne
insb
ds
test
mov
adc
and
push
add
ljmp
sbb
out
xchg
mov
dec
cli
jmp
in
bound
pusha
mov
cmp
push
lahf
xlat
mov
mov
jbe
in
add
dec
cmp
adcb
dec
jge
in
fs
jns
arpl
push
repz
dec
shl
lret
jb
pop
lock
les
movsl
into
cmpsb
movsl
daa
adc
mov
jp
aas
adc
mov
push
xor
rorl
cmpxchg8b
push
loop
push
pop
shll
sub
mov
out
in
xor
loope
mov
xor
aaa
data16
test
xchg
das
aad
sbb
mov
jno
inc
fstl
aas
xor
ret
add
jnp
add
sub
mov
xor
push
cmovae
pop
pop
xchg
inc
xchg
lds
std
mov
mov
push
fbld
lahf
insl
dec
dec
or
jbe
dec
les
sub
xchg
xchg
sub
js
out
xor
push
adc
jmp
or
enter
mov
mov
xchg
mov
addr16
mov
dec
dec
clc
add
fidivs
cltd
pop
test
jecxz
sbb
into
xor
dec
inc
out
mov
lahf
mov
sti
jne
sarb
jge
sbb
push
inc
pop
cld
negl
and
or
call
repnz
push
sub
jl
sub
scas
lea
or
mov
mov
jb
and
sbb
rolb
ret
subl
push
jb
mov
mov
push
sub
fs
in
roll
outsl
inc
pop
cmp
xchg
lcall
add
inc
ret
repz
lock
xlat
jecxz
inc
lock
es
jge
push
fwait
out
and
aam
and
cmp
out
std
xchg
shl
lods
jecxz
sub
dec
push
cmpsb
loope
and
loope
cs
add
cmc
icebp
inc
adc
jmp
dec
or
lods
jl
sbb
add
sarl
inc
xor
cmc
addr16
jl
jp
lahf
das
mov
lcall
pop
pop
inc
push
mov
sub
pop
nop
cmc
jecxz
xchg
sbb
add
outsl
xor
data16
push
loopew,pn
lods
jns
ss
mov
and
shl
sub
das
lods
orb
xor
faddl
nop
addr16
pop
clc
es
push
push
mov
stos
sub
stos
jno
fsubl
cmc
xchg
fisttpll
mov
int3
out
dec
scas
pop
or
mov
sbb
idivb
push
push
ret
dec
lcall
jp
sub
movsb
dec
inc
aad
push
addr16
sub
mov
pop
inc
inc
pop
into
jge
lock
xlat
inc
jnp
mov
mov
shlb
cmc
rcll
mov
rclb
mov
das
mov
jp
adc
jmp
jno
fdivrl
outsl
adc
test
fdivl
shrb
adc
hlt
pop
sub
int
repnz
out
daa
adc
popf
mov
sub
test
mov
les
es
insl
cltd
aaa
sarb
lret
imul
add
and
inc
or
xor
cmc
cmp
les
or
xchg
mov
and
movsl
insb
les
in
loopne
sub
pop
inc
cmp
dec
push
sub
inc
lds
pop
lods
test
mov
push
add
lahf
cs
lcall
je
dec
test
hlt
lret
cmc
and
sbb
insb
push
push
mov
inc
pusha
mov
shll
cmp
jmp
pop
out
sub
xor
add
popf
mov
inc
push
mov
xchg
cmp
mov
dec
insl
mov
jb
cmp
ljmp
jmp
leave
xlat
dec
loope
pop
aam
mov
jl
scas
movsb
xor
sub
push
push
sub
mov
daa
repnz
adc
movl
fsts
cmpsl
add
sub
clc
sub
aaa
dec
push
push
or
pop
scas
xchg
add
stc
outsl
mov
popa
inc
xchg
je
push
sbb
jne
sbbl
adc
fnsave
add
lret
mov
and
aaa
setge
mov
sub
not
cld
aas
pop
repnz
lds
mov
pop
fdivrl
xor
mov
iret
icebp
add
cld
in
pop
icebp
mov
dec
xor
xchg
inc
adc
sbb
aaa
insl
and
filds
jnp
mov
cmc
xlat
outsb
out
sub
arpl
in
sbb
repz
cmp
das
ja
adc
leave
xchg
cs
push
pop
pop
cmc
xchg
mov
movsb
cmp
xchg
push
pushf
ret
daa
sbb
pop
out
loopne
and
mov
and
jo
scas
sbb
mov
testl
rclb
aas
dec
sbb
cmp
dec
xlat
inc
pop
jns
dec
inc
push
mov
insb
dec
scas
je
xchg
jne
xchg
xchg
movsl
pop
es
xchg
xchg
repz
into
dec
mov
outsb
loopne
mov
filds
rcrb
fs
and
loopne
pop
inc
sbbb
inc
xchg
jb
mov
mov
in
mov
rcll
inc
fdivl
cmp
imul
sbb
adc
ss
xor
jmp
test
addr16
jb
psubusb
test
xor
mov
mov
sub
scas
xlat
int3
arpl
rorb
add
ljmp
jle
lahf
scas
je
sbb
enter
pop
lret
mov
mov
adc
ljmp
and
out
fwait
sti
inc
xchg
stos
fisttps
inc
mov
gs
fcomps
mov
mov
not
jl
jmp
cli
adcb
fwait
sti
mov
jb
dec
insb
mov
xor
pop
jnp
push
cmc
std
std
imul
adc
pop
cmp
jno
sub
repz
xor
push
loop
call
test
lret
sti
xchg
mov
fisubrl
aam
sub
pop
repnz
mov
jp
inc
roll
das
cltd
and
mov
in
ja
fsubrs
leave
pop
idiv
pusha
repz
mov
test
outsb
pushf
xor
sarl
mov
jo
test
testl
in
dec
test
orl
rorb
ss
shlb
repnz
xchg
movsl
data16
nop
pop
inc
dec
in
jns
ret
xor
pop
mov
cld
sti
lds
push
mov
lret
pushl
inc
inc
add
xchg
push
mov
inc
cmp
pop
push
push
dec
fildll
jl
insl
lret
cmpsb
cmp
add
stos
inc
xchg
insb
pop
cmc
xchg
mov
jp
cmp
cmp
loop
pop
adc
add
insb
in
sbbl
xor
subb
fcoml
repnz
cmpsb
jmp
mov
and
arpl
inc
fdivrs
fisubs
iret
fildll
add
out
jecxz
cmp
roll
leave
jne
fsubrs
xchg
dec
loopne
das
outsb
add
lcall
aad
rolb
popf
add
mov
xchg
cs
jge
shll
inc
mov
jne
repnz
adc
xor
rorl
jns
stos
pop
neg
inc
mov
xor
test
push
jo
inc
inc
mov
xchg
sti
pop
and
jno
repnz
xchg
mov
stos
dec
push
in
stc
and
jge
mov
jp
and
inc
das
aaa
dec
push
ljmp
and
pop
test
and
inc
jno
push
call
add
insl
add
ja
dec
xchg
mov
or
jo
push
in
cmp
ret
pop
outsl
push
dec
jmp
pop
cmc
popa
lret
add
hlt
xchg
lock
adc
add
sbb
sbb
jo
popa
clc
stos
sbb
into
inc
int3
sbb
adc
clc
shll
iret
xchg
sub
push
popf
xor
xchg
das
iret
cltd
xchg
sub
push
jo
sub
daa
sahf
xor
xor
xor
leave
pusha
adc
and
inc
mov
mov
push
jae
mov
xor
xchg
sub
pop
sbb
aaa
into
fnstenv
jno
xchg
inc
imul
cmp
ja
xrelease
sbb
push
pop
mov
pop
in
jge
subl
incb
push
push
ljmp
xchg
cmp
test
stc
inc
adc
mov
clc
dec
pop
js
jnp
inc
xlat
pop
adc
push
xor
shrl
and
xchg
cmp
sub
and
xchg
mov
xchg
mov
sub
xchg
and
dec
pop
ja
dec
call
les
mov
insb
in
orl
repnz
push
rcrl
push
movsl
pop
and
mov
cmp
pop
stos
or
test
lret
and
adc
jno
sarb
addr16
loop
sbb
enter
jne
lds
ss
sub
push
ret
pop
cmp
xchg
push
push
mov
mov
arpl
mov
dec
sub
js
pop
lock
adc
lds
mov
shll
shll
leave
add
enter
shlb
push
test
add
xor
cmp
imul
cs
mov
sar
call
stos
inc
xchg
lret
repz
mov
xchg
and
fnsave
dec
loope
jae
mov
dec
dec
sbb
pop
cmp
sahf
insl
jl
outsb
pop
xchg
add
cld
xchg
and
inc
fsts
pop
sahf
mov
xchg
cmp
mov
dec
sub
jnp
sub
pop
adc
jle
jle
cmc
outsl
loopne
cld
push
xchg
or
fbld
adc
movsb
mov
cli
es
aaa
into
jge
stc
cmp
dec
in
pop
jne
dec
loope
adc
insl
or
out
push
movsl
jo
nop
daa
adc
sahf
xor
xchg
addl
ja
imul
pop
enter
ret
jo
inc
bound
sub
pop
cmc
in
inc
fdivp
push
push
lods
xchg
and
sbb
lret
jo
lods
or
mov
mov
loopne
or
mov
mov
in
pushf
xor
pop
push
movsl
scas
cltd
jg
or
jae
mov
sahf
pop
pop
repnz
mov
movsl
cmp
push
mov
inc
mov
mov
cmp
js
aaa
push
mov
mov
icebp
mov
xlat
outsb
nop
or
mov
and
xchg
xor
push
shrl
jge
adc
inc
hlt
mov
sbb
imul
lret
bound
mov
test
out
fidivs
mov
iret
pop
mov
dec
out
scas
insb
sub
xchg
jle
into
outsl
cmp
shll
push
add
pop
sahf
xchg
dec
loop
mov
daa
scas
sbb
cmp
out
pop
mov
mov
mov
pusha
add
jnp
rorl
mov
xchg
adc
pop
jb
sahf
cmp
cmpsl
stos
xor
inc
mov
fistpll
subb
stc
in
inc
fimuls
dec
in
mov
mov
adc
sub
andb
shrl
adc
lods
inc
cli
push
mov
arpl
push
faddp
pop
add
loope
push
mov
pusha
sti
xchg
shlb
sbb
sub
mov
push
in
jns
inc
or
inc
push
sub
inc
hlt
mov
pop
sbbl
les
inc
insb
jbe
in
lea
ss
ljmp
inc
fsubs
mov
and
cmp
int3
inc
and
ss
rorb
xchg
inc
push
or
sbb
jle
pop
jo
xchg
sub
xchg
push
mov
cmpl
xchg
jl
adcb
call
cmp
arpl
dec
adc
testb
subb
inc
fisubrl
out
test
sbbb
movsl
outsb
add
das
cmp
scas
stos
ffree
pop
add
push
lods
mov
fdivp
mov
mov
lahf
ss
lock
cmpsb
cmp
or
and
fwait
pop
es
mov
insl
add
push
push
repnz
ljmp
es
inc
fiadds
pop
lock
sbb
mov
outsl
push
pop
lods
test
pop
movsl
lds
mov
lds
xor
cmc
mov
daa
imul
jns
les
add
sar
test
rcrl
mov
nop
push
loopne
and
testl
sbb
cmp
outsl
push
mov
and
xchg
jge
cmp
and
pop
ret
push
push
lock
loop
test
add
mov
jno
fs
stos
cmpb
push
je
xchg
mov
cmp
dec
movsb
dec
add
inc
outsl
sub
cmp
repz
sub
mov
test
scas
sbb
decl
add
lahf
pop
loopne
push
fwait
xor
mov
test
lret
mov
sub
clc
lds
out
xchg
fiadds
lcall
pusha
not
adc
push
lods
clc
sbb
icebp
add
lcall
mov
icebp
cmp
mov
test
lret
xchg
sub
and
xor
push
and
push
gs
loop
jbe
repnz
push
adc
outsb
dec
loop
pop
pop
lock
pop
cmp
xchg
or
loop
sub
adc
pop
mov
js
das
enter
lret
jmp
and
add
aas
xor
jo
lcall
loop
push
adc
jae
movsb
mov
push
arpl
adc
sub
inc
fdiv
dec
loope
cli
iret
data16
add
pop
jae
test
aad
loopne
lret
mov
dec
sbb
rcll
and
sub
les
push
push
add
jmp
xchg
mov
push
int3
aad
xchg
in
clc
adc
cmp
mov
divl
or
cmpsl
test
dec
in
leave
pop
repz
sbb
enter
adc
ss
stc
test
sub
adc
jb
gs
movsb
cmp
xchg
adc
insl
or
imul
dec
pop
stos
cmc
mov
testb
inc
xor
xor
xchg
adc
outsb
mov
test
add
mov
enter
xchg
push
movsl
fwait
stos
xor
sbb
or
orl
mov
imul
pop
dec
push
dec
xchg
inc
in
jne
in
les
xchg
adc
test
iret
xchg
decb
cs
enter
divb
stc
nop
arpl
xchg
dec
gs
mov
in
push
sbb
es
push
push
fisubrl
popa
pop
mov
lods
jle
xchg
push
cli
push
mov
jno
hlt
pop
push
add
fstpl
test
jnp
add
aas
xchg
xor
lods
jle
cmp
sbb
sbb
sbbb
mov
push
xchg
rorb
cli
cmp
mov
test
lret
fisttps
push
iret
fisubrl
call
in
lods
xchg
sub
sub
adc
pop
inc
dec
loopne
sbbb
sbb
ds
lods
lahf
lods
dec
out
shlb
in
sub
out
stos
psubb
mov
and
out
jbe
pusha
notl
mov
mov
rcrb
cltd
dec
ret
sbb
and
repz
outsb
in
xor
or
push
pop
int
mov
sub
mov
mov
rorb
sbb
sti
xchg
out
cmp
sbbl
mov
pop
sbb
mov
jo
adc
xchg
sbbl
iret
data16
push
mov
jecxz
jno
push
add
imul
cwtl
sub
aas
cmp
pop
fidivl
cmpl
add
lods
push
and
xorb
inc
mov
sbb
cmp
shlb
pop
cmp
aas
jo
pop
xor
sub
aas
push
mov
inc
pusha
sub
cmp
pop
lds
mov
adc
repz
test
outsl
pushf
ss
xchg
mov
out
sbb
pushf
mov
mov
add
adc
fsubl
in
push
std
xor
shll
test
inc
xlat
adc
xchg
sub
xchg
ds
inc
js
xor
shrb
and
mov
ss
test
cmpl
repz
jno
es
scas
stos
xchg
sub
orb
mov
loope
insb
mov
mov
repnz
pushf
enter
cli
jmp
mov
pusha
mov
jp
mov
fidivrl
jns
cmc
add
dec
inc
inc
leave
insb
add
fs
push
test
insb
jbe
sahf
xor
jmp
adc
lret
xchg
xchg
sub
fwait
ss
xlat
hlt
mov
xchg
int3
xchg
sbbl
xchg
pop
lock
lcall
xchg
sub
stos
inc
addr16
repnz
xor
pop
in
orl
je
cmpsl
lahf
sbb
das
in
sbb
inc
cbtw
das
pop
stos
test
in
add
imul
push
xor
xchg
lods
aas
jge
test
jl
jmp
pop
out
push
mov
push
scas
out
jo
xchg
mov
cmpsl
push
test
scas
shrb
mov
es
popf
xor
push
xchg
sub
cltd
loopne
or
sbb
sub
outsb
push
enter
lret
adc
cmp
inc
sahf
adc
xchg
cmp
fs
jmp
sbb
inc
test
xor
mov
lock
rolb
adc
or
add
sbb
push
and
inc
and
mov
testl
hlt
push
rol
mov
add
test
inc
push
jnp
hlt
push
mov
inc
or
adc
and
xlat
cmc
add
fs
call
inc
jns
imulb
pop
mov
or
pop
mov
dec
cmp
imull
mov
loopne
cmp
loope
movsb
adc
jecxz
test
add
pop
fnstenv
dec
repz
mov
push
mov
sbb
xchg
cmp
mov
mov
shrl
cmp
cld
xchg
and
cmpsl
sbb
push
stc
pop
hlt
int
lods
inc
dec
out
pop
mov
imul
mov
stos
inc
sarb
aad
pop
mov
fadds
fsubrs
bound
cmp
mov
sbbl
mov
ret
or
imul
pop
ret
in
xor
aas
add
cmp
xchg
leave
sbb
fmuls
sti
pop
cmc
les
jg
ja
pop
scas
int
jmp
lret
int3
int
push
xlat
mov
fldl
push
add
std
movsl
das
aaa
into
mov
sbb
idiv
push
in
sbb
sahf
push
lret
sub
inc
cmc
push
in
mov
push
popf
xor
or
in
js
imul
xchg
mov
fidivrs
out
cs
mov
jmp
push
lods
insb
add
jne
lret
add
inc
outsb
je
cmp
movsb
ds
lods
inc
imul
nop
mov
popa
xor
xchg
sub
xor
xchg
push
jmp
jb
jno
test
in
pop
lret
ljmp
or
faddp
xchg
sub
call
jbe
fsub
jns
cs
or
and
fdivl
js
xor
xchg
lea
xchg
add
push
insb
add
cmpsl
mov
hlt
inc
stos
inc
jae
shrl
xchg
stos
inc
adc
mov
inc
gs
pop
repnz
dec
fnstenv
mov
icebp
mov
or
scas
lret
pop
call
sarb
pop
dec
icebp
or
add
xorl
xchg
icebp
mov
mov
cmp
das
outsb
sbb
cmp
pushf
or
jae,pn
jg
xor
mov
inc
xlat
push
and
pop
jbe
cmp
test
cs
jmp
jecxz
popa
jae
push
aad
hlt
enter
dec
nop
mov
push
mov
dec
jmp
cmp
pop
mov
enter
adc
movsl
addl
xor
add
mov
inc
mov
aaa
dec
pusha
out
int
aad
adc
popf
dec
sub
pop
insl
inc
fistl
add
fdivs
imul
testl
es
leave
pop
pop
hlt
push
push
xor
dec
xchg
mov
lret
lcall
mov
jmp
leave
leave
mov
jns
adc
pop
in
cmp
and
insl
push
mov
mov
adc
pushf
xor
xor
mov
mov
push
mov
pop
rcrb
mov
ffree
sarb
les
adc
scas
sbb
leave
mov
xor
push
sbb
int
add
divl
dec
loop
out
lods
xlat
cmpsb
add
sti
enter
jo
push
xor
cmp
ds
testb
popf
dec
filds
test
es
cltd
dec
shrb
mov
fnstenv
aam
jnp
icebp
loopne
in
push
in
int3
jl
mov
xchg
mov
jmp
filds
rolb
pop
sahf
cwtl
icebp
adc
jmp
cli
mov
pop
scas
mov
ret
test
testb
or
xchg
mov
ret
js
cmc
ds
outsl
push
lea
nop
dec
loope
imul
gs
sub
rclb
stc
dec
lods
push
in
fisubrs
or
cmpsb
cmp
inc
mov
out
test
int
push
out
inc
xor
mov
push
inc
flds
xchg
addr16
outsb
add
adc
adc
test
hlt
dec
mov
sbb
xchg
pop
test
push
iret
sbb
jecxz
inc
jmp
enter
push
adc
sbb
test
loopne
xlat
aam
shrl
cmc
pop
test
or
rorb
inc
scas
xor
outsl
push
int
fcomps
xor
xchg
insl
out
in
xlat
mov
xor
daa
out
push
fisubrl
int3
cld
xchg
decb
fnstsw
xchg
adc
jge
imul
push
aas
test
dec
loope
mov
push
pusha
jnp
push
and
mov
jne
scas
push
cmp
jo
lahf
pop
shrb
inc
out
adcb
repz
leave
xor
push
push
popf
inc
fldl
fdivrs
fistl
out
sub
pop
fldt
fsubp
push
inc
mov
xlat
pop
push
gs
xor
imul
call
or
mov
test
pop
repnz
loope
je
scas
or
test
mov
jb
std
es
jo
scas
add
jg
adcb
cmp
mov
xchg
add
cltd
and
je
stc
movsl
dec
enter
and
inc
push
iret
dec
aam
push
lea
ret
aas
loop
push
mov
xchg
loopne
test
test
push
inc
mov
inc
sarb
in
addl
push
push
jmp
and
pop
je
fidivrl
lahf
ss
sub
cmp
cmp
cltd
lahf
pop
ja
data16
cltd
and
pushf
je
xor
stos
cmp
jp
push
adc
xor
pop
callw
mov
xlat
xor
rorl
es
rorb
adc
sbb
popa
dec
cmc
fwait
or
lods
pop
jno
pop
loop
popf
gs
cmp
jecxz
cltd
xor
daa
rcll
mov
sub
jmp
jg
daa
add
inc
mov
jns
imul
jp
pop
fisttpll
lock
aaa
jnp
jp
in
sub
bound
or
cwtl
das
xchg
sbb
fnstenv
mov
adc
xchg
sub
xor
inc
mov
scas
inc
xchg
outsl
xchg
add
nop
xchg
cmp
xchg
mov
cmpsl
inc
ljmp
push
lahf
inc
fwait
pop
pop
sub
cmpb
es
jne
cld
dec
in
lods
mov
ficoms
push
outsl
dec
fbstp
pop
repz
es
fld
push
mov
cmpsb
divb
loopne
in
pop
mov
add
pusha
mul
andl
mov
xor
xorb
ret
inc
clc
cli
bound
cltd
sbb
shrl
cmp
cwtl
push
xor
or
jb
xchg
in
mov
push
mov
dec
push
inc
xchg
sub
stos
inc
jl
loopne
cwtl
popf
test
sbb
mov
cwtl
sub
insl
fwait
leave
push
pushf
pop
enter
pop
pop
mov
add
inc
sahf
dec
xorb
sbb
mov
push
popa
push
ret
push
mov
sub
push
adc
or
addl
lds
jns
mull
pop
mov
in
out
sbb
mov
popf
in
mov
int
ss
fistpl
pop
or
int3
inc
cmc
test
lret
aad
jmp
xchg
rcl
sbb
loop
sbb
adc
inc
hlt
sbb
cmp
push
in
mov
ret
mov
aaa
into
pop
pop
xor
dec
popa
stos
inc
push
jno
add
arpl
mov
and
or
xor
xor
fbstp
lret
xor
sbb
cmp
shrb
or
lods
sbbb
and
push
movsl
xor
gs
cmpsb
pop
adc
push
sub
lahf
cli
fistps
mov
nop
test
fldl
or
sbb
push
es
or
jbe
sbb
inc
nop
cmp
mov
xchg
mov
into
insl
pusha
mov
add
addb
mov
shll
les
jne
cwtl
add
sbb
sbb
pop
test
or
mov
xchg
int
iretw
int3
arpl
mov
or
xchg
les
cmp
icebp
scas
popa
lret
push
cmp
cmp
into
jno
imul
pusha
lock
into
mov
push
in
pop
fs
roll
outsl
jg
dec
jle
cmc
outsb
jl
dec
cmp
pop
repnz
adc
sub
sbb
push
sti
aam
sahf
pop
test
mov
adc
xor
movsl
cmp
rcr
mov
pop
int3
repnz
jg
insb
mov
add
lea
div
loopne
aaa
jecxz
outsb
iret
cs
cmc
mov
push
mov
adc
out
pop
or
mov
or
mov
out
sub
and
mov
fisttps
adc
jl
mov
sub
adc
aas
test
xchg
push
arpl
sbb
dec
fistl
and
lock
inc
scas
adc
cld
xchg
and
cmc
sbb
mov
pop
call
inc
sti
push
dec
dec
fbstp
addr16
arpl
shrl
test
adc
inc
sbb
outsl
mov
fst
bound
aas
bound
mov
mov
cmp
icebp
addl
add
adc
sub
test
dec
les
sbb
or
cmp
ficomps
push
addr16
imul
push
push
sbb
or
dec
jae
gs
xchg
loope
outsb
add
cmp
std
jno
mov
jnp
das
mov
js
test
sub
out
repz
mov
or
add
and
add
lret
testb
cmp
add
pop
ds
mov
enter
mov
mov
inc
mov
mov
mov
fiaddl
insl
fisttpll
push
xor
outsb
test
pop
pushf
sbb
push
mov
lods
test
mov
cwtd
jae
jp
pop
pop
mov
mov
lahf
ss
or
sub
sbb
inc
outsb
mov
sbb
pop
insl
test
dec
imul
ljmp
mov
mov
push
loope
pop
adc
add
push
sub
cwtl
lret
jae
jmp
mov
cltd
cli
ficoml
iret
aam
lods
clc
cltd
lods
shr
lods
xor
faddl
in
out
jae
sar
clc
shrb
cmp
dec
push
vmovsldup
mov
adc
stc
xor
fstl
in
test
and
aam
cmp
cld
adc
sub
mov
mov
mov
lret
sbb
insb
inc
pop
xchg
push
rol
xor
sbb
shrl
pop
addr16
sbbl
repz
adc
xchg
imul
xor
xchg
push
sbb
inc
rorl
and
sbb
adc
inc
push
add
shlb
outsb
mov
les
push
push
repnz
gs
lret
ss
sti
add
xor
xor
out
popf
loop
loop
dec
jecxz
add
gs
fincstp
outsb
repz
pcmpeqb
xchg
movsl
xor
clc
imul
mov
ja
stos
push
je
notl
iret
scas
in
pop
push
shrb
pop
movsl
sub
lods
pop
and
sub
aad
mov
sahf
inc
scas
enter
mov
cwtl
call
into
addr16
nop
fistpll
adc
mov
imul
add
repz
aad
sbb
or
xorl
add
dec
mov
insb
push
fisubrs
push
sub
sub
std
clc
xor
pop
cmc
orb
fistps
pop
loop
push
dec
pop
cli
movsl
xchg
cmp
lret
pushf
mov
repnz
dec
mov
push
in
add
and
into
and
inc
mov
aaa
fcoms
mov
jae
mov
sbb
mov
lahf
jg
lahf
cmp
mov
pushf
mov
mov
fchs
cmp
adc
out
sbb
and
push
push
andl
push
sub
mov
mov
push
fcomip
lret
or
xchg
adc
xor
fisttps
mov
jno
sbb
pop
imul
fimuls
movsb
cmc
sub
pusha
je
mov
in
fisttpl
adc
xchg
iret
not
aas
pop
stos
jle
in
aas
inc
js
jle
movsb
enter
mov
push
sub
jne
adc
adc
xchg
cli
iret
inc
jl
fistps
fstl
test
push
out
das
sbbl
dec
lcall
xchg
cmpb
inc
adc
and
in
cmpsl
adc
mov
aaa
adc
pop
insl
inc
fcoml
cmp
adc
mov
push
movsl
sbb
setns
fs
adc
lods
test
xor
divl
mov
or
mov
data16
xchg
sub
xlat
call
mov
sarb
mov
repz
cmp
mov
sahf
movsb
jmp
mov
mov
outsl
jmp
popa
clc
lcall
jb
push
cltd
lods
or
cs
pop
addr16
scas
insl
pop
repz
iret
popf
fisttps
xchg
icebp
and
loope
pop
out
or
sbb
std
xor
cs
cwtl
adcb
mov
bound
subl
stos
inc
cmp
lods
mov
xchg
jnp
xor
mov
arpl
mov
push
adc
icebp
sub
pop
idivb
int
cmpsb
int3
xorl
adc
jae
xchg
xchg
pusha
mov
cmp
aam
xchg
pop
jge
mov
push
fistl
mov
shll
mov
sub
sub
stc
push
out
mov
and
sbb
jae
mov
ret
lret
movsb
jecxz
stc
cmpsl
cs
pusha
enter
dec
mov
aam
jo
mov
adc
sub
xchg
xchg
aas
aad
push
cmpsl
pop
mov
lea
shrl
cmp
adc
pushf
cmc
xchg
mov
lds
out
xchg
lods
lea
mov
inc
xor
mov
cmpsb
inc
xchg
jg
lock
lds
dec
cmpb
xchg
sub
js
or
mov
mov
xor
jle
push
xchg
ljmp
or
not
mov
rcr
mov
jp
dec
nop
mov
fdivs
adcl
iret
pop
decl
fisubl
mov
mov
mov
out
insl
hlt
jl
adc
bound
push
out
jns
push
dec
in
stos
or
dec
mov
adc
inc
lret
addr16
jmp
flds
jmp
add
push
ljmp
pop
leave
sub
inc
fildl
or
jno
out
mov
cmpsb
jbe
xchg
and
push
js
push
aaa
inc
push
adc
cmp
xchg
outsb
aaa
popl
cli
xchg
mov
push
fsubrs
bound
pushf
mov
popf
ljmp
lcall
xor
and
inc
aad
xchg
call
lods
fstps
out
cld
aaa
jecxz
psubsw
adc
push
shlb
stc
aam
jno
sub
sub
call
dec
and
inc
inc
scas
cltd
sub
lahf
rcl
mov
push
das
mov
mov
xchg
arpl
fs
in
fsubr
sarb
mov
addl
push
pop
shll
punpckhdq
xchg
xor
jp
jge
dec
fwait
mov
test
push
push
arpl
cld
mov
ja
fsub
mov
mov
mov
into
lods
cs
dec
repz
fs
push
fwait
add
dec
xchg
stc
xchg
test
sbb
rcrl
lea
ja
out
lcall
adc
sbb
add
add
addl
mov
nop
loopne
int
loope
or
mov
das
mov
popl
mov
adc
addr16
call
out
test
ss
dec
xchg
lods
pop
xor
decb
sbb
dec
stc
fwait
inc
pop
jl
sahf
cmpsl
sub
xchg
data16
orl
frstor
add
mov
lahf
xchg
pop
add
rcll
cmp
lcall
leave
and
sbb
fidivl
or
sbb
insl
add
cmp
dec
aam
ss
lods
pop
fsubs
pop
inc
loope
dec
jecxz
add
cmp
je
or
shrl
hlt
rolb
out
dec
xchg
stc
loopne
mov
pop
xor
stos
out
dec
add
inc
sub
xchg
lock
ljmp
or
test
f2xm1
stos
mov
and
or
mov
xchg
sub
and
push
sub
ss
mov
jl
jecxz
push
push
mov
pusha
add
cmpsl
aaa
fcomps
out
mov
subb
push
loop
cmpsb
ror
cwtl
xor
cltd
cmp
inc
fstl
sub
arpl
sub
dec
pop
sub
cmp
call
fstl
test
fadds
rcrl
sub
add
sub
push
rorl
lods
pop
pop
pop
pop
adc
mov
adc
push
add
iret
inc
sub
out
in
popf
test
in
add
rorb
jo
call
fistpll
push
cmp
fstpl
jle
je
jo
inc
xchg
popf
xor
xchg
fadds
and
mov
bound
jge
scas
jne
dec
cmpsb
adc
inc
shlb
enter
lods
test
cmp
sbb
das
dec
cmp
jle
es
cwtl
pop
imul
sbb
mov
mov
and
push
mov
push
out
cli
and
fidivl
iret
push
jge
mov
xor
in
jnp
imulb
jnp
pop
cmp
test
xchg
jb
fiadds
mov
push
data16
cmp
test
hlt
sarb
inc
xchg
or
and
pop
mov
icebp
push
xchg
inc
cmpl
aam
jecxz
mov
ret
movsb
jnp
push
call
push
pop
xor
aas
pop
divb
sbb
test
montmul
cmpsb
inc
scas
mov
mov
ja
xchg
ret
or
aad
das
inc
sarb
inc
cmp
jo
bound
xor
lock
xchg
or
add
xchg
mov
outsb
dec
cmp
orb
push
leave
mov
adc
pop
aas
mov
inc
fsubrp
add
xor
or
cltd
out
out
lret
mov
scas
pop
inc
mov
dec
sub
push
cmpsl
test
pop
out
push
lea
dec
fisubrs
cmp
daa
lock
push
gs
insl
std
pop
jecxz
mov
or
jnp
push
mov
add
js
out
gs
jns
push
inc
test
xchg
xorl
mov
sbb
xchg
sbb
fstps
in
ja
adc
sub
lock
xlat
call
enter
popl
out
frstor
data16
cmpsb
or
add
jl
push
stos
hlt
scas
orl
das
das
xchg
xchg
jo
add
and
jmp
push
inc
add
loope
xor
push
bound
cs
xchg
push
int3
arpl
arpl
fdiv
std
js
sub
scas
or
jp
sub
ja
fsubs
add
xlat
arpl
inc
lea
mov
mov
jno
cwtl
adc
mov
jbe
jb
inc
leave
push
pop
xchg
arpl
outsb
mov
ret
xchg
pusha
cmp
in
adc
lret
and
jno
lea
imul
jns
outsl
cmp
push
adc
ret
test
inc
and
fistpl
mov
rcrl
xchg
lock
xchg
addb
std
sti
xchg
das
ss
inc
dec
sub
jl
gs
sti
add
mov
push
push
jge
and
push
jmp
outsb
xchg
xchg
sti
xchg
lret
push
sahf
add
pop
xchg
ja
lds
dec
repnz
xor
add
std
add
sub
in
or
cmp
inc
aaa
add
mov
mov
out
sbb
leave
cld
gs
ret
xchg
mov
mov
mov
lea
inc
daa
mov
dec
cmp
mov
nop/reserved
mov
std
mov
push
adc
dec
in
xor
lret
imul
xchg
or
cmp
adc
jecxz
rcl
xor
scas
push
mov
les
and
lret
mov
and
mov
insl
aas
xchg
xchg
inc
dec
xchg
lcall
bnd
pop
adcb
sbb
stc
adc
mov
clc
rol
jbe
pop
scas
inc
push
sub
push
mov
push
out
cmp
shrl
je
xor
xchg
dec
sarl
or
xor
std
pushf
js
fstps
push
inc
shlb
xchg
xchg
enter
mov
mov
std
cmp
sbb
ret
fcmovnbe
aas
push
push
mov
out
xchg
sahf
dec
pushf
cli
outsl
push
sub
and
mov
sub
mov
or
aam
dec
in
push
mov
addl
cmp
pushf
adc
pop
dec
jns
sub
les
sub
xchg
dec
push
push
sarl
dec
sbb
cltd
imul
push
xor
enter
lcall
mov
adc
mov
in
mov
inc
aad
fs
cmpsl
arpl
push
cmp
mov
lock
sub
add
test
pop
xchg
xor
rol
cmp
nop
std
pusha
in
mov
insl
mov
out
mov
out
jne
lahf
cld
pop
mov
mov
ds
clc
movsb
cmp
mov
daa
setb
inc
add
cmp
insl
sub
insb
cltd
inc
dec
adc
xor
sub
xor
arpl
arpl
dec
cmp
andb
adc
push
cmp
jb
imul
or
sarl
ds
push
pop
inc
cmc
mov
mov
popa
cli
test
pushf
or
imul
mov
adc
test
jnp
mov
cmc
lret
cmp
inc
xchg
shll
insb
push
adc
repnz
sbb
test
pop
push
cmp
cmpsb
jecxz
outsb
xchg
cmp
mov
enter
pop
dec
stc
nop
jl
dec
xor
jmp
ss
imul
idivb
and
lcall
in
popa
pop
xchg
sub
insl
sub
inc
fwait
push
in
or
aas
mov
pop
jno
xchg
lea
icebp
mov
gs
jecxz
push
mov
fldcw
imul
fldt
jae
mov
push
cmp
jnp
daa
mov
inc
ds
or
jge
andb
push
cmp
mov
jp
xor
add
jnp
stc
and
sbb
insb
mov
push
out
enter
repnz
pop
sarl
fdivs
rcrl
add
mov
adc
xor
leave
mov
jmp
dec
ret
jo
cmc
outsl
testb
ret
mov
jmp
leave
or
pop
cmpsb
cmc
stos
ss
lcall
xchg
cs
xlat
pop
call
sbb
add
jno
push
push
movsl
push
outsb
add
bnd
in
pushf
jge
dec
jecxz
adc
push
dec
cmp
sub
shll
mulb
sarl
push
shlb
xchg
subl
or
jne
sti
cmp
dec
push
cmpsb
cs
xor
jmp
into
push
and
out
xor
or
mov
fildl
push
std
cltd
in
or
in
les
ficomps
mov
fnstcw
pushf
jb
arpl
test
setns
mov
push
sbb
inc
pop
andb
cmp
stc
mov
dec
and
push
cmc
scas
mov
mov
add
enter
xor
xchg
mov
push
dec
push
push
adc
xor
hlt
mov
js
stos
test
push
test
mov
dec
mov
xlat
mov
daa
shl
fidivrs
add
das
mov
xor
test
sub
lcall
pop
sub
sub
insb
aam
and
mov
or
outsb
lcall
xchg
xchg
fdivl
in
push
cmp
mov
repnz
push
push
ret
xchg
mov
push
push
fimuls
jns
int
test
cmp
daa
add
stos
shll
repnz
sbb
push
in
out
sar
cmpsb
je
pop
in
shlb
std
mov
adc
and
test
incb
inc
xor
das
pop
push
aas
adc
mov
cmpsl
mov
shll
add
notb
inc
icebp
pop
ret
test
lret
dec
adc
leave
pop
xchg
xchg
sub
test
ds
std
or
mov
clc
xchg
mov
mov
add
pop
xchg
jecxz
mov
cs
std
stos
subl
movd
inc
sub
sbb
rorl
add
push
pop
pushf
clc
in
dec
sub
adc
xchg
add
rcrl
ss
push
adc
add
and
sbb
cmp
mov
lock
inc
sarb
xchg
bound
lods
mov
fiaddl
les
scas
xor
fsubs
repz
test
insb
fidivrl
mov
xor
xor
sbb
int
and
loopne
ds
loopne
fpatan
rorl
lods
sub
test
lods
sbb
outsb
je
xor
aad
jl
adc
jg
add
push
pushf
fbstp
ja
ret
mov
jbe
push
adc
pop
inc
scas
mov
or
iret
int
pop
xchg
mov
ret
jns
push
outsl
dec
lcall
addb
pop
xor
in
mov
bound
push
sbbb
xor
sub
mov
sbb
push
mov
mov
sub
js
sub
sub
cld
outsl
std
imul
dec
xchg
sbb
cmp
pop
xchg
mov
les
cltd
cltd
push
mov
stos
sub
or
cmp
sbb
dec
pushf
mov
dec
data16
mov
jle
sub
jnp
pop
sub
add
lcall
and
movsl
inc
pop
loop
sarl
in
std
sub
jle
gs
mov
mov
push
js
or
lods
imul
lock
jnp
scas
jmp
mov
lret
into
mov
rcrb
xor
jne
push
arpl
xchg
lds
inc
cmpsl
stos
das
lds
shrb
pop
adcl
repnz
xchg
cmpsl
dec
movsl
test
xchg
mov
les
loope
daa
or
pop
mov
loop
scas
cmp
arpl
cs
mulb
mov
fistpll
cltd
sub
ret
mov
jecxz
lds
mov
push
adc
push
adc
jae
jmp
shr
jecxz
push
jge
in
enter
mov
xor
mov
dec
sub
sbb
arpl
add
cmp
push
and
mov
shlb
loopne
fistps
stc
pop
ljmpw
mov
and
cmp
xchg
sub
lea
mov
xor
fstl
pop
and
shl
movsb
and
mov
dec
xor
adc
jb
pop
push
cmp
insl
add
pusha
stc
and
xchg
cmp
xor
mov
enter
mov
push
testl
insb
adc
jle
outsb
jae
movsb
and
or
jno
mov
negl
cmc
iret
test
dec
sbb
imul
in
sbb
adc
cmp
loope
dec
lret
je
dec
pop
out
cmpsl
out
cltd
movsb
cmp
mov
xchg
dec
shrb
jbe
cmp
inc
insl
test
fnstenv
mov
push
fmulp
fnstenv
scas
push
jo
sub
pop
pop
nop
aas
stos
cmp
arpl
cmpsb
std
test
lods
leave
jle
movb
inc
insl
insl
loopne
lock
in
dec
add
xchg
stos
sti
test
mov
add
push
loope
dec
ds
std
in
dec
stos
mov
sbb
sti
adc
das
xchg
cmp
stc
dec
jnp
cs
stc
int
cmp
jecxz
outsb
shrb
inc
stc
clc
imul
into
inc
and
enter
push
jne
insb
mov
jle
js
push
lahf
into
shll
dec
pop
notb
xchg
movsl
ret
mov
push
repz
stos
imul
push
clc
push
int3
cld
push
call
or
popf
repnz
cmpsb
nop
jmp
lahf
sbb
inc
stos
add
scas
dec
scas
push
push
dec
iret
stos
int
repnz
mov
jb
enter
nop
and
add
test
push
mov
mov
mov
add
xor
movsb
jecxz
in
fucomi
push
loopne
movlps
mov
pop
test
cmp
pop
xlat
shll
test
and
cwtl
std
rcll
xlat
sbb
or
sbb
cwtl
mov
adc
mov
aad
std
xchg
xchg
or
out
mov
push
xchg
mov
pop
daa
rorb
cli
jg
cmpsl
imul
push
fs
mov
into
test
testl
sub
scas
and
scas
and
stc
mov
cmp
adc
push
add
xor
adc
mov
fsubr
sub
test
orl
push
push
mov
mov
mov
inc
push
jmp
mov
pop
pop
cld
add
movsl
xorb
fs
subl
sahf
hlt
data16
fsubs
add
mov
inc
pop
divb
sarb
and
cmp
loop
push
pushf
mov
sbb
dec
mov
fldl
cmp
fs
cmpsl
push
mov
pop
cmp
mov
dec
mov
pop
mov
std
push
je
mov
fmull
sarb
and
jmp
adc
xchg
lock
dec
bound
and
xchg
pop
mov
popa
push
cld
iret
fmull
shrb
jnp
pop
sbb
sbb
lods
int3
cmp
outsb
dec
mov
rcrl
mov
lods
jns
dec
add
add
inc
cmpsb
testb
stos
out
cmp
cmp
mov
out
sub
mov
je
add
lcall
test
xchg
mov
das
lds
fisttps
add
cwtl
loop
ds
sbb
and
sbb
dec
pop
sub
jnp
or
popf
dec
loopne
es
xor
aaa
incl
ljmp
adc
lea
pop
enter
lods
mov
mov
sbbb
push
clc
push
aam
lahf
mov
not
insl
sub
jmp
and
jmp
add
fs
pop
pop
repz
cli
and
xor
lods
inc
sub
loop
iret
dec
cli
jne
imul
std
gs
and
sbb
mov
cmp
cmpsl
ds
cmpsl
pop
add
mov
rolb
xor
imul
and
inc
adc
test
xchg
mov
mov
adc
pop
inc
adc
in
push
cmp
es
xor
je
shr
or
inc
incb
mov
and
cmp
jle
cmp
mov
pop
stc
repz
mov
sub
aam
jl
leave
sahf
push
popf
cmpsb
cmp
int3
mov
add
ss
pop
out
lret
mov
sub
movsl
lds
jle
imul
in
xchg
in
lcall
mov
mov
rol
addr16
inc
arpl
and
insb
fildll
add
pop
in
push
mov
lret
xchg
sti
xor
sbb
jg
sahf
pop
movsl
sbb
cmp
mov
add
mov
lahf
rolb
aas
psllw
push
and
ja
test
addr16
inc
scas
test
int
cltd
or
mov
xor
push
gs
sub
fldt
or
sub
test
push
ret
repz
std
xchg
ds
push
lods
jbe
xrelease
test
jae
adc
sbb
cltd
pusha
mov
mov
mov
dec
xchg
jo
lds
cmpsb
mov
push
enter
jge
outsb
dec
out
mov
repnz
fcmovbe
sbb
xchg
inc
stos
cmpsl
xchg
sub
inc
mov
jns
lds
pop
dec
ss
loop
sbb
xchg
mov
xor
xchg
pop
repnz
jbe
imul
out
lahf
cmpsb
fmuls
lds
ja
cmp
ret
hlt
cmp
mov
dec
jecxz
fcoml
mov
push
fs
test
test
or
or
sbb
lret
movsb
lahf
cwtl
test
ret
xchg
les
dec
jecxz
mov
aas
dec
add
shrl
add
xchg
sub
pop
std
ljmp
enter
insl
xchg
bound
stos
mov
les
xor
nop
dec
fdivl
subl
mov
inc
fdivl
jl
jl
cwtl
xor
leave
dec
cmpsl
aaa
outsl
sub
shlb
cli
loop
pop
lock
insl
sub
dec
test
jle
test
sub
mov
inc
lahf
pop
dec
mov
pop
icebp
jo
and
mov
add
adc
pop
imul
stc
mov
insb
sarl
and
dec
push
inc
sahf
lods
je
fdivrs
mov
add
ficoms
inc
inc
and
xlat
sbb
cld
je
inc
aad
popf
push
arpl
xchg
mov
xchg
fldenv
mov
in
pop
jge
mov
adc
repnz
push
jmp
mov
enter
mov
inc
or
jne
adc
mov
adc
jecxz
das
iret
std
cmp
dec
out
add
imulb
mov
loope
repnz
sbb
mov
out
adc
cmc
lds
jne
pop
mov
xchg
pusha
fcoml
scas
or
mov
imul
pop
pop
shrb
das
push
in
inc
push
sub
inc
gs
sbb
aam
cmp
movsl
xchg
mov
loopne
fists
mov
mov
mov
inc
add
sbb
scas
fmull
pop
lcall
mov
sbb
or
adc
cmp
fsubs
sbb
mov
test
hlt
sub
pop
and
mov
int3
repnz
inc
inc
aas
call
test
or
ficoms
cmpsb
pop
mov
jmp
jg
jb
jle
xor
pop
jno
adc
montmul
cmpsb
into
jno
jbe
sub
mov
jle,pn
adc
pop
mov
dec
dec
sarb
iret
add
dec
in
cmp
pop
sarb
idivl
dec
sub
sbb
or
movsb
pop
ja
xchg
add
dec
cld
inc
xor
mov
lods
and
mov
sbb
mov
or
xlat
jnp
and
loop
xor
dec
sbb
repnz
pop
clc
jmp
push
sbb
jae
inc
ss
and
push
ss
pushf
movsbl
adc
jns,pn
imul
cmc
fists
adc
fdivl
inc
data16
jno
push
fsubrs
mov
fwait
jg
stc
popa
adc
mov
gs
adc
lcall
sahf
clc
sub
ljmp
fdivs
movsl
insb
leave
orl
testb
xchg
sub
clc
dec
lock
out
cmc
or
aaa
fldenv
inc
arpl
ja,pt
xor
rol
cmc
sbb
adc
ret
mov
jle
ljmp
popa
xchg
clc
sbb
out
hlt
adc
cld
ja
cmpsb
xchg
push
dec
shrl
add
xchg
pop
fstpl
in
cmpsb
and
inc
stos
mov
push
dec
add
mov
jmp
sbbb
sub
shrl
push
lods
cmp
sbb
loopne
mov
sbb
mov
pop
ljmp
push
jmp
jmp
outsb
inc
cmp
sub
lcall
and
xchg
xchg
dec
call
test
dec
xchg
inc
test
push
mov
dec
mov
fadd
pop
mov
cmp
movsb
sti
mov
ficoms
lods
mov
ds
and
xchg
sub
jge
inc
sub
jnp
dec
jno
mov
call
mov
enter
or
out
nop
sbb
xor
data16
mov
fwait
out
cld
push
inc
pop
mov
das
xor
inc
fidivrl
push
into
gs
adc
sbb
pop
lods
pop
xchg
mov
inc
and
sbb
or
call
sar
movsl
andb
sub
lods
mov
in
in
mov
xor
dec
outsb
fsub
mov
cmp
in
int
or
cmpsb
imul
data16
in
sbb
pop
push
inc
adcl
jnp
cmpsl
push
push
aad
push
pop
je
cmpsl
loopne
pop
adc
sti
ss
mov
add
repnz
inc
enter
xor
das
fisttps
or
and
pop
andb
lods
inc
lock
or
mov
repz
sbb
mov
ret
ret
sbb
sti
or
mov
mov
mov
pop
in
std
rol
pop
add
adc
std
dec
fs
pop
xchg
insl
repz
adc
mov
jnp
into
add
ret
adc
and
enter
lret
jmp
in
subb
aaa
xchg
or
mov
es
int3
cmp
std
daa
jp
pop
mov
cvtdq2ps
or
sbb
jl
push
jbe
pop
test
xchg
icebp
inc
xchg
sub
scas
call
push
push
shrl
frstor
jnp
rcrl
xchg
popa
test
out
jle
and
imul
inc
insl
shl
insb
arpl
mov
fisubrs
mov
or
lahf
or
es
push
pop
sub
sbb
fisubs
sub
adc
insb
lret
fidivrs
add
mov
subb
test
rcrb
cld
iret
jnp
cwtl
das
pop
ficoml
cmp
int3
arpl
fsubl
xchg
pop
aad
pop
push
mov
daa
or
mov
or
sub
or
rclb
cltd
pusha
sub
mov
xchg
cld
ja
pop
mov
push
cmp
xchg
mov
inc
cld
xchg
jae
sbb
ljmp
pop
outsb
jne
daa
cmpsl
jecxz
shl
sub
jns
dec
inc
fdivrl
xlat
or
mov
mov
nop
repz
or
lahf
test
test
mov
fisubs
push
add
push
enter
daa
fs
mov
xchg
fisttps
push
xor
sbb
push
fsub
add
insl
add
shlb
ret
jae
adc
inc
data16
mov
and
sbb
jmp
popa
test
or
jbe
lret
daa
cmp
std
push
lods
push
mov
xchg
sbb
lret
jle
ds
ja
popf
push
or
push
ret
addr16
test
popa
fmull
sub
pop
push
test
in
push
clc
xchg
cmp
clc
jnp
cmp
push
pop
repnz
jb
push
test
mov
enter
stos
inc
in
loop
sbb
adc
jmp
das
mov
int3
add
jbe
xchg
cmp
pop
jg
xchg
jl
xchg
lds
aaa
lods
in
add
sti
jle
ret
jmp
outsl
pop
add
jnp
and
rcr
inc
sti
sub
push
out
sub
or
or
ja
sbb
push
gs
mov
out
dec
sub
test
pop
lods
jp
pop
nop
inc
pop
dec
jae
loopne
jecxz
arpl
mov
xchg
mov
fstp
sub
push
mov
shr
imul
fcomps
and
enter
push
add
in
xor
adc
push
push
jge
push
mov
pop
icebp
and
iret
out
push
pop
jl
jae
cmp
mov
xor
push
repz
insl
daa
outsb
nop
daa
mov
dec
std
aam
ffree
pop
negl
jecxz
dec
ja
inc
xor
stos
dec
loop
lcall
sbb
pop
dec
xlat
cmp
repnz
scas
or
mov
fistpll
jb
mov
xor
xchg
lods
mov
inc
arpl
rcrb
pop
cmp
lcall
push
push
dec
popf
out
imul
sub
ds
jecxz
mov
push
xchg
push
out
ja
xor
lds
jns
movsb
or
cmp
mov
cmp
cmp
dec
test
add
outsl
jae
shll
inc
sbb
mov
data16
dec
fists
je
shlb
loop
add
stos
std
jb
push
decb
sbb
jb
cmp
adc
mov
or
int
clts
in
ret
mov
popa
sbbl
adc
in
adc
sbb
push
cmp
popa
pop
xchg
push
lock
cmc
daa
in
test
sahf
inc
js
int3
mov
sbb
das
push
jae
or
cmp
push
lds
out
mov
pop
jae
push
dec
sahf
fstl
leave
xor
in
test
mov
inc
aam
test
sahf
jp
mov
out
mov
lret
daa
add
fsubl
jns
std
mov
roll
jno
gs
xchg
test
das
jmp
rcrb
cltd
sbbl
arpl
pop
mov
in
mov
imul
test
jle
mov
mov
aaa
into
mov
sub
adc
add
aas
add
sbb
frstor
cmc
mov
cmp
lret
pop
cmp
cmp
shl
rcrb
test
lret
divb
enter
pushf
xor
fstpl
cmp
mov
jmp
xlat
jmp
sbb
xchg
orl
and
test
xor
and
aaa
sbbb
mov
sahf
out
xchg
out
daa
mov
fldl
out
les
add
pop
mov
jmp
ljmp
jp
sbb
dec
adc
pop
aam
rcrl
pop
xor
cmp
push
pushf
xorl
pusha
jg
mov
fistl
dec
test
rcrb
sub
xor
jle
jo
inc
mov
jo
iret
int
dec
mov
mov
shrl
lods
xchg
in
shll
pop
in
inc
ficomps
jp
setl
insb
xor
outsb
ret
or
adc
mov
dec
pop
subb
xchg
adc
stc
and
xchg
dec
mov
or
sub
pushf
les
cwtl
xchg
pushf
movsl
push
xchg
add
cmp
insl
xlat
sbb
repz
aad
cld
or
xor
les
xchg
popa
aaa
xor
xlat
insb
dec
jo
mov
mov
mov
insb
sbb
int
outsl
iretw
cmp
mov
dec
pop
and
fistpl
loope
test
int3
mov
repnz
inc
or
dec
fists
data16
push
and
aad
xor
sar
out
cli
jne
mov
jle
adc
je
push
xchg
push
and
or
adc
mov
std
xorb
push
roll
sbb
dec
pop
push
xor
out
insl
mov
sahf
jg
mov
cmpsb
repz
into
cmp
les
les
add
xor
shl
test
mov
popl
mov
fstl
mov
lret
in
pusha
mov
or
mov
dec
jmp
pop
shlb
imul
pop
sbb
push
add
inc
dec
cmp
cmp
and
sbb
pop
mov
pop
pop
sbb
repz
adc
stc
dec
push
push
leave
inc
loop
xchg
jmp
jo
jns
cmp
lds
adc
mov
test
mov
push
add
out
daa
call
add
rorb
rcl
xor
stos
add
leave
cmp
insb
sub
pop
mov
pusha
jne
movlps
iret
mov
sti
inc
lds
push
test
jnp
insl
lahf
data16
sti
push
lds
xor
sub
adc
inc
push
icebp
push
fidivrs
sub
add
mov
mov
or
adc
imul
fisttpll
sahf
sub
out
shrl
aad
mov
pop
shrl
jg
and
cmpsl
push
push
adc
pop
lcall
add
pusha
mov
ja
ret
hlt
data16
and
xchg
or
pcmpeqw
add
adc
imul
xchg
sbb
sahf
stos
cmc
cmc
jge
push
repz
mov
push
movsl
lds
push
cmp
cmpl
fsubrl
mov
push
jno
ds
mov
add
cwtl
xchg
cmc
push
pop
cmp
xchg
pop
dec
ret
inc
call
adc
cltd
add
pop
test
out
scas
and
mov
lods
sti
mov
jl
int3
adc
into
jo
mov
cld
lret
adc
xor
xchg
ss
add
xor
in
fsts
push
call
out
outsl
ret
popf
jno
mov
jnp
add
adcb
sub
fsubr
pop
dec
pop
dec
mov
or
repz
repnz
push
in
pop
popf
jecxz
lods
loopne
fiaddl
rorl
test
fs
xlat
sarl
mov
or
adc
dec
cmp
lret
iret
js
add
fucomi
push
gs
pop
pushf
ss
inc
outsl
movsb
sub
mov
dec
aas
sub
fimuls
push
xor
pop
testl
fdivl
push
fdivrs
std
dec
cmc
movsl
in
push
sbb
add
shlb
stos
push
pop
call
mov
fs
sub
sbb
mov
ja
nop
int3
inc
mov
fcomi
jae
mov
leave
daa
mov
sub
daa
mov
lahf
sub
fiaddl
gs
ret
inc
adc
mov
fistps
xchg
cltd
stos
fwait
dec
jl
dec
jne
cmp
stc
lods
fcmovbe
xchg
sub
jl
mov
dec
in
fstps
mov
cwtl
stos
fcompl
push
push
sbb
mov
fists
rolb
jg
inc
shr
hlt
inc
sbb
sahf
sub
popa
cmp
bound
les
jmp
repnz
ret
arpl
jno
out
push
stc
aad
pop
sahf
xor
xchg
push
mov
mov
pusha
xor
cmpsb
inc
add
lahf
stc
and
cmp
jle
test
sbb
or
cld
push
jge
cmc
movl
icebp
ret
in
sahf
dec
pop
sti
push
daa
mov
lcall
ds
insl
add
xchg
pop
dec
cld
xchg
cmc
enter
lods
lahf
js
pop
lret
sti
cmpsl
sbb
andb
mov
push
out
outsl
mov
je
fisttps
lahf
xchg
sub
loop
out
out
sub
mov
and
push
push
int
mov
dec
pop
popa
jp
hlt
stos
stos
sbb
jbe
daa
dec
mov
scas
add
lock
xlat
sbb
xorl
es
pop
sbb
mov
adc
ljmp
add
dec
dec
popa
jg
xchg
xchg
mov
sub
sbb
pop
mov
imul
push
pop
xchg
test
push
movsb
dec
mov
xchg
mov
shl
clc
das
aam
pop
mov
addr16
sbb
lods
ret
imulb
add
mov
mov
popa
in
arpl
mov
imul
dec
mov
scas
outsl
inc
popa
stos
test
stc
adc
aam
test
adc
lods
cmp
popf
aam
push
or
pushl
int
cltd
pop
int3
jb
inc
cmpsl
fcmovnu
mov
pop
lock
push
jno
popf
dec
cld
inc
jle
cmp
xor
or
mov
movsl
pop
xor
xchg
dec
lds
sbb
xchg
sub
xor
pop
stos
inc
pop
sub
ror
mov
nop
loope
clc
and
test
cld
mov
sub
mov
cmp
ret
cltd
pop
divl
lods
rcrl
mov
enter
push
push
inc
data16
bound
push
lods
or
nop
sub
test
xlat
loope
arpl
stc
xchg
add
or
add
jns
sub
xchg
cld
in
mov
out
mov
ds
pop
nop
pop
lret
int3
mov
jle
pop
cmc
jns
mov
popf
dec
sub
std
mov
stos
in
rcrb
mov
xor
push
mov
imul
pusha
add
push
and
dec
lret
cmp
out
rolb
outsb
dec
pop
jbe
mov
adc
mov
and
insb
mov
iret
cmp
cmpsb
mulb
lret
pushf
loopne
xchg
cmp
sub
adcl
callw
xor
jle
mov
inc
xchg
sbb
arpl
push
add
ds
cs
mov
aam
mov
ja
jp
je
adc
inc
push
jle
push
test
clc
fcmovb
push
cmpsb
cmpsb
jg
xchg
nop
jecxz
inc
fwait
shrl
adc
insb
shll
add
push
push
mov
lret
loope
insl
clc
int3
push
mov
sub
icebp
insl
push
xchg
pop
cmp
inc
push
mov
pushf
int
mov
dec
test
add
sahf
ja
lock
sub
cmp
mov
fldcw
loope
test
stos
inc
sub
adc
or
sti
xor
and
pop
cmp
mov
dec
daa
outsl
addr16
pop
mov
adc
pop
sbb
sbbl
je
sbb
lods
lods
test
lock
sti
in
call
or
cs
add
jbe
fwait
test
xchg
add
dec
and
or
cs
add
in
add
stos
mov
push
frstor
xchg
pop
sbb
jle
sub
pop
out
pop
pop
repz
stos
lea
inc
xchg
sbb
dec
gs
enter
das
or
dec
ljmp
test
sets
pop
or
mov
insl
lret
mov
push
lahf
mov
lret
imul
fldl
out
or
mov
pop
fmuls
push
mov
fstps
sub
icebp
ret
xchg
dec
fsubl
js
pushf
sbb
test
scas
inc
daa
jo
shlb
push
sbb
xchg
sbb
xor
shlb
movd
pop
out
cmp
repz
out
xchg
cld
sub
out
jnp
stos
inc
outsb
outsb
inc
cltd
push
insb
imul
dec
mov
adc
cmpsb
jecxz
rcll
adc
fldt
and
mov
push
cli
roll
testl
mov
add
xchg
imul
sbb
mov
mov
lret
or
cld
adc
outsl
cwtl
mov
clc
fcomps
stos
sub
dec
fxch
cmp
xor
icebp
and
sub
das
cs
sub
push
mov
mov
cli
add
inc
add
data16
enter
out
leave
pop
cli
jns
inc
and
inc
pop
in
mov
or
outsl
adc
shrb
xor
or
out
pop
push
pop
pushf
xor
or
lret
mov
adcb
sub
and
arpl
mov
mov
add
shlb
lods
lahf
jmp
js
lods
mov
lods
push
popf
xor
push
and
mov
push
in
aaa
push
cmp
fsubr
test
jg
pop
push
xor
decb
mov
or
outsl
int3
jg
inc
idivb
out
out
inc
xor
lea
xor
mov
shrl
add
xchg
sub
jno
xchg
pop
adc
mov
push
icebp
scas
stc
mov
push
fsts
xchg
jb
mov
xchg
sbb
jmp
dec
shlb
es
inc
cmp
lret
sbb
ss
jbe
xchg
popf
lock
and
pop
push
daa
sbb
mov
jg
mov
imul
dec
jo
fs
test
lret
pop
out
pop
ss
ja
xor
stos
jmp
in
movsl
push
cli
or
dec
xchg
xchg
divl
push
sbbb
fs
sbb
cmp
jmp
pop
out
in
subl
sub
cld
mov
and
adc
mov
test
mov
stos
pop
das
pop
pop
add
inc
aam
test
jo
sub
je
jle
sbb
push
sbb
xor
repnz
push
and
push
or
test
arpl
ret
outsl
mov
je
call
rcll
scas
add
dec
bound
jne
mov
in
cmpsl
pop
ret
shr
rcr
bnd
mov
pop
dec
das
pop
loop
stos
inc
stc
fnstcw
mov
fs
out
mov
rorb
outsb
mov
dec
rol
jmp
dec
in
mov
xchg
add
cmpsb
lea
and
lret
jno
xchg
jge
adc
call
pop
mov
iret
mov
insl
mov
push
jle
shrl
cld
outsb
fnsave
bnd
movsl
sub
mov
das
mov
xchg
mov
shrb
cmp
out
push
test
or
sti
bound
push
cmpsb
xchg
cltd
call
mov
aaa
test
leave
repnz
dec
add
push
add
add
adc
in
idivb
fistpll
adc
jno
rorb
mov
sbb
out
cwtl
jb
xor
out
cli
dec
xchg
lds
xlat
andb
cmpsl
jae
mov
mov
and
stos
in
popa
xchg
lret
add
lret
lods
pushf
arpl
lock
or
and
xor
pop
mov
in
outsl
dec
mov
sub
add
push
sub
xor
lea
je
pop
in
jnp
call
xor
ja
rolb
jbe
in
cwtl
dec
sbb
sbb
and
adc
push
sub
repz
fbstp
and
std
xchg
xchg
and
cli
aam
mov
sbb
and
adc
xor
mov
rclb
push
xor
inc
fisubs
mov
fsubrp
or
outsl
cmp
out
orl
or
push
mov
mov
popa
and
lcall
jle
jno
inc
ds
push
jmp
xchg
data16
mov
push
adc
push
mov
xor
sarb
add
inc
cmpsl
lock
and
shlb
lods
rorb
push
mov
divl
push
cmpsb
je
fstenv
xchg
fs
adc
mov
cwtl
loop
pop
xor
add
jb
adc
lret
cmp
push
mov
push
mov
loopne
iret
push
je
notb
pop
mov
mov
jg
mov
notl
out
or
and
movsl
jne
mov
xor
scas
lret
add
mov
xor
xchg
into
sub
push
insb
inc
sbb
std
fsubrs
mov
mov
xchg
aaa
push
lds
cltd
scas
jae
and
ljmp
mov
pop
lds
nop
mov
lret
xchg
sub
pop
sbb
cmp
es
jno
cmpsb
xchg
lret
in
das
cmp
mov
insl
shrl
xor
hlt
adc
mov
fwait
add
jle
pop
cmp
pop
cld
sbb
mov
sub
aad
pop
int3
rorb
inc
cmp
push
push
jae
rcll
js
pop
xchg
cmpsl
mov
pusha
nop
inc
mov
jecxz
je
cwtl
cmp
mov
in
and
dec
rcll
mov
pop
loop
insl
scas
cld
inc
sub
mov
sbb
ljmp
leave
mov
mov
insl
iret
sbb
lods
push
pop
or
sbb
cmp
sub
cmp
dec
rorb
mov
sbbl
fbstp
or
inc
ret
rorb
lock
dec
aad
sub
lret
cltd
cli
xor
push
lods
jg
cmp
pop
mov
pop
push
pop
int
jle
jae
xor
push
fwait
inc
faddl
lock
push
popa
push
mov
and
test
pop
je
std
ret
jnp
cmp
lds
loope
pop
add
jne
sti
into
sbb
fmull
dec
cmp
sbb
daa
pop
jo
test
push
mov
xor
ds
jl
adc
mov
push
lods
inc
mov
lods
ja
arpl
sub
into
dec
and
mov
mov
pusha
int3
xor
dec
daa
mov
adc
inc
mov
push
push
fsubl
and
pop
mov
mov
and
add
repnz
push
push
adc
mov
fcmove
push
in
xchg
push
jmp
inc
in
pop
pop
xchg
mov
rclb
sbb
push
mov
mov
inc
lods
mov
leave
cmp
shrl
jne
xor
bound
test
xor
adc
mov
inc
xchg
out
gs
addr16
push
mov
xchg
add
aad
mov
insl
cmp
scas
inc
lcall
pop
repnz
jns
clc
bound
xchg
sub
leave
jb
enter
int3
push
fcmovu
bound
sub
dec
mov
addb
push
imul
pop
repz
es
fsubrl
sbb
or
push
lcall
in
ret
aam
sub
ret
cmp
add
es
or
cs
lea
cmp
fists
mov
xlat
mov
inc
gs
in
push
test
xor
mov
in
test
push
push
fdivl
cli
mov
leave
aad
jge
push
aas
mov
jb
cmp
into
bound
loopne
enter
loopne
xchg
sbb
or
addr16
sub
or
or
adc
push
sbb
cltd
jo
inc
sbb
mov
jecxz
mov
xchg
dec
inc
mov
sub
std
jmp
fisubrl
dec
cmc
cld
in
mov
pop
cmp
hlt
jg
push
pop
pop
sbb
ss
testl
cmp
add
filds
and
sbb
popl
cmpsb
push
popf
xchg
in
clc
call
and
pop
pop
inc
add
jge
mov
fbstp
push
push
shrb
mov
lock
adc
mov
repnz
pusha
sarl
add
in
lds
and
adc
call
pop
jo
xchg
pop
adc
arpl
icebp
mov
jo
cltd
cs
inc
xchg
xor
sarl
rcll
addl
xchg
xchg
imul
xchg
pop
xor
insl
pusha
jmp
sub
xchg
sbbl
fbld
iret
data16
push
push
mov
int3
subl
pop
mov
lock
sti
push
in
cmpsl
pop
mov
mov
sbb
aad
jns
mov
lock
pop
sub
dec
hlt
pop
inc
insl
enter
push
daa
fidivs
out
dec
or
aad
inc
arpl
ljmp
sub
push
test
mov
xor
xlat
jb
pushl
ret
test
cmp
pop
lds
ficoms
in
inc
pop
sub
mov
mov
je
push
or
movsb
sti
xchg
push
test
movsb
out
add
mov
int3
jp
shl
adc
cwtl
jp
pop
je
cmc
fldenv
out
xor
pop
cmpsb
inc
in
dec
cmp
mov
aas
lods
mov
aam
mov
xor
inc
or
cwtl
imul
mov
int3
mov
inc
mov
xor
push
lret
daa
jle
sbb
pop
mov
mov
test
andl
aas
shll
scas
inc
repz
call
xor
test
mov
add
mov
pop
cmp
insb
xor
pop
dec
lods
inc
mov
mov
cli
and
popa
push
jg
lock
in
push
adc
sbb
stos
fstps
mov
into
out
push
or
dec
int3
out
stc
loope
push
add
pop
mov
ret
shr
cld
sarb
idivl
shll
mov
or
cmp
xchg
stc
cld
movsb
cmpsb
test
loopne
dec
rcll
out
jns
pop
dec
out
jg
in
shlb
jne
aam
jg
adc
ljmp
popf
lods
notb
ss
inc
push
ljmp
ja
lods
movsb
push
repnz
xchg
loope
mov
mov
sti
insl
pusha
xorb
jae
push
mov
mov
mov
mov
lret
stc
pop
lcall
cltd
aaa
jo
pop
repnz
pop
popf
adc
stos
ror
jo
mov
repnz
out
cmp
inc
pop
mov
cmp
leave
xchg
mov
mov
xchg
fidivl
adc
mov
mov
movl
das
sahf
out
pop
mov
iret
jl
loope
lock
mov
insl
mov
int
jnp
rcrb
jno
iret
loop
mov
add
std
push
push
loop
mov
shl
sub
movsl
pop
pop
repz
andb
leave
and
outsl
pusha
fwait
jecxz
orl
fsubr
icebp
mov
or
in
adc
xchg
pop
xor
jg
iret
daa
add
xor
leave
dec
pop
incl
mov
pop
int3
imul
xor
js
imul
cli
jecxz
fmull
jecxz
outsl
push
sbb
repnz
lods
mov
inc
jbe
cltd
inc
mov
mov
push
sbb
pop
adc
adc
cltd
cmp
sub
mov
xchg
and
cld
xchg
mov
push
daa
mov
sahf
mov
or
test
cmpsl
or
jge
out
mov
fcomps
push
lods
inc
push
push
add
sub
xorb
cmp
push
mov
imul
dec
mov
pop
xchg
test
sbbb
mov
pop
nop
test
ret
cwtl
mov
scas
jg
lcall
add
pop
in
inc
fcoml
mov
adc
sub
jno
lods
cltd
addl
sbb
mov
out
xchg
and
or
mov
adc
mov
outsb
push
je
mov
test
xchg
jle
or
out
std
iret
add
sbb
push
aad
imul
push
js
inc
imul
xor
fs
mov
lahf
jne
enter
mov
push
mov
adc
sub
mov
and
js
pop
insl
add
xchg
xlat
psadbw
jl
jp
int3
fimuls
rclb
sbb
cmpsl
lahf
daa
mov
aad
mov
pop
ret
leave
aad
aam
out
lds
lock
bound
xchg
sub
jp
aam
sub
gs
push
out
dec
enter
lcall
shll
mov
into
mov
cmp
xor
loope
inc
ljmp
dec
jo
in
mov
mov
sub
scas
cmp
jg
scas
daa
jp
jmp
std
jo
or
fcoms
xlat
mov
lods
mov
lcall
lock
mov
push
iret
and
gs
loop
mov
dec
mov
je
fcmovbe
jo
sbb
add
jl
lret
out
mov
in
xorb
pop
aaa
into
mov
push
mov
push
je
push
lcall
in
push
cwtl
aas
leave
out
aas
int3
imul
in
sahf
xor
dec
sub
dec
imul
popf
imul
int3
lcall
ret
scas
xor
or
push
outsb
dec
dec
outsb
lock
fsubs
push
popf
aas
xchg
andl
arpl
movsb
dec
adc
add
sbb
push
ja
sbb
jo
daa
push
jle
imulb
push
push
mov
pop
push
jmp
inc
or
jmp
pop
cmc
rcrl
ljmp
ds
mov
adc
out
dec
cwtl
dec
aaa
fnsave
imul
pop
mov
lock
imul
jae
fdivrs
adc
and
ss
insb
and
dec
movsb
aad
xchg
stos
push
imul
out
xchg
push
ficompl
add
mov
pusha
sahf
pop
test
call
xchg
inc
jae
in
data16
and
inc
push
inc
pop
scas
xchg
bound
cmp
mov
or
cmp
movsl
mov
ljmp
push
in
add
mov
sar
ret
jge
in
ja
call
lds
inc
iret
jne
sbb
cmp
roll
fnstenv
sahf
les
aad
push
cmc
inc
dec
adcb
sub
jo
sarb
shll
loopne
outsb
sbb
stc
imulb
mov
sub
out
mov
pop
add
push
movsl
push
bound
fcoms
lahf
loop
dec
lods
jmp
jmp
rcl
mov
lock
mov
adc
cmp
mov
aam
pop
pop
mov
and
mov
mov
iret
jecxz
sub
pop
cvtpi2ps
in
jne
or
out
xor
aaa
xchg
pop
or
je
lahf
cmpsb
cmpsl
and
repz
jnp
lcall
clc
dec
mov
stos
push
stos
xchg
jns
cmpsl
sub
dec
pop
dec
fiadds
shlb
mov
xchg
jmp
shr
shll
cmp
mov
adc
xchg
iret
lds
pop
cmpsb
loop
cld
out
aas
push
cmp
sub
xor
fstps
mov
mov
sub
xchg
js
cwtl
mov
add
orl
imul
test
mov
arpl
cmpsl
pop
bound
pusha
mov
repz
xor
cmp
popf
add
push
in
insl
xchg
lahf
dec
push
cmpsb
inc
into
mov
cmp
xchg
pop
pop
ret
aad
push
pop
inc
add
add
push
mov
mov
adc
shll
mov
mov
enter
insb
int
inc
ficoms
aaa
test
aas
push
pop
mov
cwtl
sub
xchg
push
mov
loop
push
add
jge
lcall
dec
xchg
ret
pop
pop
jae
and
aaa
pop
pop
push
bound
jae
shlb
pusha
aam
scas
adc
daa
outsl
repz
adc
lret
cwtl
out
lock
fcomip
int3
aaa
adc
fildl
adc
jl
jo
add
mov
or
ret
lret
jae
xor
loopne
pop
xchg
insb
mov
mov
rcrb
cmp
loop
inc
in
adc
mov
adc
pop
sbbl
jle
xchg
xchg
add
xchg
mov
push
xchg
inc
dec
sub
adc
test
loopne
test
or
leave
dec
and
scas
andl
jecxz
in
xor
mov
lcall
adc
orb
inc
fimuls
xchg
add
stos
cmpl
push
pop
mov
in
jge
jae
test
cs
jb
pusha
inc
sbb
leave
fsts
call
push
or
in
sbb
fwait
adc
jle
lock
jns
push
dec
loopne
lcall
ss
sbb
sbb
ds
jecxz
rclb
or
adc
ss
aas
out
pushf
sarl
std
mov
dec
bound
sub
into
push
divb
xchg
cs
inc
divb
stos
pop
test
jbe
push
pop
sahf
aas
leave
imul
addr16
lcall
sbb
mov
ss
lcall
movsb
dec
or
lea
add
cmp
and
xchg
sbb
lahf
push
mov
iret
lahf
fnsave
and
or
sbb
sbb
sbb
loop
sub
mov
int
lret
aad
ljmp
push
jle
fucomip
dec
push
insl
cmp
cmp
aaa
sahf
inc
pop
popa
scas
int
int
pop
fiaddl
in
sub
xor
fwait
ss
mov
jnp
pop
aad
mov
add
fscale
ss
push
data16
in
sub
sub
or
stos
add
fcompl
icebp
mov
js
out
jle
push
call
xchg
push
dec
filds
xchg
fs
data16
stc
in
test
fwait
ret
ret
or
mov
dec
jecxz
int3
sbb
in
imul
clc
out
xchg
dec
adc
ja
fwait
fs
pushf
call
or
bound
push
ds
dec
lds
sub
in
jecxz
cmp
lea
pop
arpl
aaa
cli
push
mov
push
imul
push
sti
outsl
daa
aaa
adc
lret
xchg
pop
lock
test
loope
hlt
outsl
cmp
fistl
dec
inc
cmp
jbe
jmp
fsts
cmp
sti
dec
or
xchg
loope
xchg
adc
or
stc
dec
sbb
gs
call
push
in
jge
dec
mov
testb
xlat
stc
jnp
fsubrs
insl
das
add
imul
add
faddl
popf
imull
or
sbb
xchg
mov
cmp
cmp
push
inc
jae
mov
cmp
iret
jbe
adc
pop
js
mov
dec
loopne
pop
aad
add
fdivs
mov
shrb
pop
in
pop
jg
notb
dec
jno
les
sahf
out
jg
xchg
add
in
pop
loope
imul
cmp
in
fsubl
fdivl
mov
mov
and
mov
and
fcmovbe
daa
shrl
add
mov
xchg
test
lds
sbb
dec
mov
and
out
cmp
dec
pop
sbb
pop
aaa
out
add
pop
jne
icebp
loopne
and
push
mov
imul
jg
add
push
inc
xor
mov
mov
pop
mov
enter
xorl
aaa
idiv
adc
add
mov
data16
xchg
int3
movsl
xorl
or
js
popf
scas
out
f2xm1
lahf
mov
jp
push
out
lods
sbb
xchg
jp
cltd
sub
mov
cmp
ss
adc
add
xchg
lret
and
jg
xchg
enter
or
cmpsl
add
sbb
dec
mov
out
scas
arpl
aad
cmp
pop
andl
and
sub
adc
cmpsl
imul
cmp
sub
jle
neg
add
mov
push
out
xchg
xor
mov
cmp
fdivl
ret
pop
xchg
jae
cmp
push
cmpsb
add
adc
and
mov
movsb
pop
loope
mov
mov
insl
mov
stc
outsb
icebp
lea
jb
aam
je
out
jno
inc
or
das
pushf
sub
mov
ret
push
test
fcmovnbe
push
mov
mov
add
xchg
sbb
lcall
inc
lock
xchg
sub
mov
stc
jg
arpl
sub
sbb
mov
xchg
jle
mov
dec
gs
jns
in
mov
mov
mov
mov
jg
test
aas
mov
ficoms
inc
popf
cmpsl
jg
xorb
lock
dec
hlt
pop
inc
mov
and
adc
inc
clc
lahf
xor
dec
scas
cmp
sbb
pushf
fcoml
leave
fiadds
fldt
inc
aam
mov
push
mov
sub
mov
or
add
fistl
stos
ror
mov
mov
sbb
gs
jo
mov
data16
clc
popw
xor
xchg
xor
lcall
jge
cwtl
xor
pusha
push
add
sbb
push
mov
lret
push
sub
in
push
stos
incl
push
cmpsl
sarb
js
push
dec
test
jo
push
lods
lds
adcl
or
scas
inc
sub
int3
stc
push
lods
sub
scas
mov
std
jg
cmc
push
shlb
mov
push
lea
popa
pop
movsb
xchg
dec
fmulp
mov
jl
insl
nop
sbb
mov
fiaddl
fwait
loope
push
dec
ret
popf
ljmp
mov
push
stc
test
icebp
push
frstor
fidivrl
aam
pop
test
push
sbb
std
jnp
stos
sub
aas
push
std
fildll
lock
xchg
add
xchg
sbb
or
xor
push
mov
cs
repz
push
dec
test
mov
mov
dec
cmp
mov
mov
mov
xchg
xchg
iret
popa
jns
inc
popa
and
into
and
call
cwtl
pop
ja
outsl
push
std
jne
dec
adc
test
pop
push
cmp
rcrb
pop
mov
dec
fistpll
cmc
nop
jl
cmpsl
out
xchg
in
pushl
inc
push
push
jne
das
xchg
xor
lds
mov
pusha
sarl
cmp
leave
shrl
xchg
mov
movsl
aaa
push
gs
bt
cltd
aam
out
xchg
dec
adc
sar
inc
popa
sub
out
clc
call
cli
xchg
push
inc
adc
ds
sbb
stos
push
pop
lods
push
mov
std
sub
xor
pop
or
andl
and
hlt
icebp
in
adc
adc
test
cmp
push
pop
or
mov
cmc
adc
daa
daa
push
out
inc
xor
xchg
cmp
cmp
ja
adc
inc
sar
jge
xor
mov
iret
push
in
jp
jae
loope
les
add
inc
adc
sti
pop
in
mov
mov
pop
movsl
aaa
sahf
pop
lock
xchg
mov
mov
hlt
pop
adc
aad
mov
xor
xchg
inc
sbb
jbe
pushf
xor
and
test
sbb
jl
xchg
push
mov
std
loope
sub
ljmp
inc
shrb
aas
mov
mov
bswap
loopne
sbb
aas
insb
rcrb
jo
fdivl
addr16
add
andl
push
mov
fldenv
xchg
fwait
sbb
xlat
mov
call
stc
psubusb
das
add
jmp
ss
jg
dec
jle
dec
enter
shr
fnstenv
mov
iret
and
add
scas
jae
dec
fwait
pop
jnp
xor
imul
add
out
je
pop
into
jbe
jmp
in
int3
arpl
jb
test
sti
cmpsb
pop
jecxz
or
sub
fprem1
subb
sub
adc
xchg
mov
xor
into
xchg
push
inc
sahf
jae
es
jnp
dec
push
mov
ljmp
daa
inc
lods
dec
leave
jmp
sbb
outsl
mov
pop
dec
rcl
in
sbb
mov
stos
pop
push
jae
sub
push
out
fstpt
daa
mov
cmp
dec
adc
mov
and
bound
lds
sub
jmp
fstps
ret
sbb
ficoms
lcall
sub
mov
rorl
movsl
or
pop
cmp
aam
add
loop
mov
enter
cli
cld
or
cs
mov
insl
out
pop
fucomi
orl
xchg
mov
push
inc
mov
stos
sbb
push
ret
sub
jp
xchg
inc
rorl
incl
xor
jno
into
pop
adcl
mov
push
pop
push
xor
gs
lods
push
mov
jae
xor
xor
sbb
icebp
jg
and
insl
divl
push
push
cmp
xor
daa
mov
pop
mov
cld
stos
inc
loope
adc
push
push
out
sbb
stos
mov
scas
inc
cmp
dec
cmc
sub
dec
loopne
add
inc
movsb
jecxz
mov
add
jg
in
fisttpl
idivl
inc
aam
dec
aad
leave
mov
push
sub
mov
xchg
je
imul
xchg
push
popf
loop
inc
in
cmp
out
sub
les
xchg
dec
add
lahf
repz
enter
and
push
sarb
popa
inc
mov
insb
push
sbb
mov
xchg
mov
mov
adc
enter
pop
loope
jae
push
adc
mov
cmp
and
cld
mov
adc
pop
in
pop
jmp
lcall
int
loop
arpl
outsb
cs
mov
mov
outsb
and
adc
mov
fdivrs
pop
jle
adc
mov
fucomi
dec
cmc
xor
addr16
adc
xchg
or
or
mov
sbb
pop
or
add
cmp
sahf
outsl
sbb
cmp
subl
jge
stos
jecxz
sbb
stc
or
pop
pushf
xor
xchg
lock
dec
popf
mov
jge
repnz
dec
inc
mov
aaa
push
pop
stc
jns
push
aam
stos
in
jno
xor
push
lea
jae
inc
adc
push
mov
xchg
popf
out
daa
sub
or
pushl
inc
jb
pop
push
xor
inc
xor
aam
xchg
pop
mov
imul
adc
ja
push
mov
xchg
ja
lret
ljmp
sub
rcrb
cs
sahf
daa
mov
or
into
andl
cmp
or
dec
xchg
lock
daa
insb
cltd
xchg
stos
jae
sub
into
movsb
push
inc
cmc
ljmp
jno
imul
daa
lods
cli
push
sub
cmp
pusha
aas
adc
and
je
jecxz
adc
popf
cwtl
push
ss
sbb
inc
sti
mov
jg
insl
sub
sahf
dec
push
repnz
lret
and
fcmovne
and
es
adc
lds
mov
divb
jge
out
or
stos
cld
mov
daa
outsl
dec
xchg
add
xchg
mov
loop
adc
cmpsb
sbb
sbb
xor
std
xor
push
pushw
cltd
stos
outsl
arpl
and
jbe
xchg
xor
lret
mov
mov
xchg
push
xor
repz
xchg
outsl
xchg
mov
sbbl
out
loopne
out
insb
mov
movsb
or
bound
fsubr
stc
out
jle
or
in
add
mov
stos
sbb
add
addr16
xlat
mov
or
cmpsb
mov
nop
or
popa
data16
andl
lods
inc
xchg
mov
lret
lcall
mov
bound
xchg
stc
lods
mov
cli
sti
adcl
xor
cmp
mov
xchg
push
imul
mov
sbb
cmpsb
fidivrl
hlt
jge
sub
pusha
sar
inc
add
xchg
inc
ja
cli
mov
cmp
sbb
cmpsl
pop
jns
frstor
pop
dec
xchg
dec
push
mov
adc
mov
push
mov
lcall
shll
jle
xor
cmp
bound
sbb
movsl
or
and
mov
mov
loope
xor
dec
ja
scas
andb
jo
push
das
std
loop
inc
sub
or
xchg
imul
daa
lods
scas
je
sub
stos
jne
shl
push
add
mov
ds
flds
dec
leave
shlb
fidivrs
jecxz
stos
repz
xchg
jmp
mov
adcl
dec
lock
aad
push
push
mov
cmc
aam
mov
leave
or
xchg
mov
ror
filds
inc
fs
mov
fisttps
add
rorb
lret
leave
sub
test
jne
clc
adcb
mov
jno
repnz
sub
xchg
and
das
lods
inc
sub
pop
adc
sbb
xchg
mov
push
mov
insb
lahf
cmc
and
pop
mov
cmp
call
sarl
cmp
int
js
cltd
mov
xor
sahf
xchg
dec
mov
xchg
cld
inc
mov
cmc
inc
push
daa
rcrl
mov
and
in
jmp
sbb
inc
in
leave
sub
les
inc
xchg
pop
lock
out
test
pop
int
addb
mov
fidivrs
std
in
cmc
adc
push
mov
mov
andb
out
jle
or
xchg
test
mov
mov
int3
into
fadd
mov
mov
sbb
pop
cs
cmp
jne
mov
rcll
push
out
aaa
xor
testb
inc
fsts
cld
xchg
mov
fistps
adc
or
jge
push
mov
sarb
lret
dec
mov
inc
lods
test
fnstcw
mov
mov
fistpl
cmp
call
mov
mov
repnz
pop
in
aas
into
lock
cmc
scas
add
add
stc
and
test
cmp
ret
stos
gs
daa
into
xor
fs
xor
loope
aas
call
sub
aam
je
adc
xor
cmp
notl
dec
call
xchg
outsb
stc
scas
mov
insb
mov
stos
or
push
fisubrl
leave
sahf
mov
push
lods
in
cmp
out
outsb
test
es
rclb
test
in
xchg
mov
ljmp
int3
addb
inc
inc
push
iret
dec
iret
arpl
aad
int3
and
jecxz
sbb
movups
and
inc
dec
sbb
jl
inc
mov
pop
loope
inc
add
jns
sahf
sub
aad
dec
and
stc
fcomi
rorb
or
mov
dec
aaa
nop
mov
push
fimuls
ficomps
outsb
jle
aas
cmc
int3
cmp
push
sub
adc
popf
cs
mov
sbb
imulb
adc
movsl
dec
lea
mov
push
jmp
xor
ljmp
fs
add
mov
adc
mov
ja
inc
sbb
call
pop
dec
fwait
cmpsl
jg
mov
es
call
jb
aaa
popf
jg
int
mov
cwtl
cli
pushf
leave
hlt
addr16
adc
int3
lret
dec
test
jbe
in
js
push
sub
dec
lret
cmp
push
sub
cmp
cmpb
push
xor
pop
hlt
test
mov
sti
fwait
or
stos
fildl
mov
icebp
out
sti
and
pop
inc
ret
std
push
loope
fsubl
add
in
mov
pop
push
jo
or
cmpsl
jno
pop
fmull
and
add
ss
jnp
loopne
mov
ljmp
lret
add
cld
or
xchg
cmp
xor
jns
push
icebp
out
cmp
mov
lea
frstor
cld
push
lret
and
in
pop
sbb
xor
fs
incl
sub
jg
and
push
pop
jb
clc
mov
lret
arpl
push
lods
cmpsb
dec
test
mov
adc
call
popf
xor
mov
jmp
outsb
stc
push
jne
jmp
mov
sarl
iret
jmp
mov
adc
dec
cwtl
xor
inc
mov
pop
cltd
int
mov
pusha
lods
xchg
gs
sbb
push
dec
mov
loope
dec
in
push
shrb
into
jmp
subl
pusha
testb
je
stos
xor
sbb
xchg
sub
adc
push
push
xor
cwtl
imul
aad
mov
and
xor
test
xor
cltd
scas
mov
in
pop
hlt
pop
xchg
sub
sub
pop
sub
ss
inc
push
cmp
stos
mov
mov
pop
in
setg
mov
push
cmp
pushf
stos
shrl
mov
setg
out
sbb
or
ds
mov
les
lahf
shll
leave
xchg
hlt
and
movsb
adc
mov
cmpsb
sub
or
jbe
cwtl
stos
mov
fcoml
lcall
rcrl
mov
push
stos
push
fucomp
push
xchg
and
aaa
lds
fadd
sar
push
mov
jb
fdivs
lds
call
inc
icebp
xor
jb
mov
in
bound
jb
mov
in
aas
xchg
jb
mov
inc
in
sub
pop
jne
das
iret
jge
mov
xchg
addr16
push
push
mov
mov
subb
jno
or
cmp
sub
xorl
sub
and
sub
add
popf
mov
dec
adc
pusha
int
mov
dec
cmp
push
mov
imul
pop
in
out
sahf
iret
xchg
xchg
cmpsb
inc
inc
nop
cmp
js
and
sbb
sbb
sti
or
pop
mov
out
imul
inc
sbb
pop
out
inc
push
adc
jno
mov
xchg
sub
lods
inc
inc
xchg
sub
repz
daa
fdivrl
sub
cmp
sbb
addb
sahf
rolb
cmpsb
cmp
pop
push
xchg
adc
sub
repz
fs
dec
pop
xchg
xor
inc
addr16
mov
xor
mov
adc
dec
jns
call
or
mov
cli
adc
sub
and
xchg
sbb
or
xchg
les
mov
stos
pop
dec
pop
mov
or
fidivl
subl
dec
pop
jae
dec
push
fstpt
xor
lret
mov
outsb
lock
rcll
flds
mov
mul
out
scas
pop
dec
push
imul
dec
sub
dec
loop
jne
xorb
std
inc
test
adc
push
insb
xchg
xor
dec
and
mov
mov
sbb
outsb
mov
add
and
adc
jg
ja
cltd
insb
add
iret
daa
fadd
mov
idiv
lea
stc
jns
or
jnp
fnsave
jb
jnp
jg
push
gs
sbb
dec
scas
shll
cmpb
dec
dec
testb
jg
lea
add
ljmp
dec
pop
imul
jmp
mov
sub
mov
inc
and
cmp
and
and
jecxz
add
loopne
loope
cltd
lods
inc
dec
pop
mov
adc
enter
shrl
mov
ret
in
orl
sub
add
test
stos
sti
ss
addb
or
sbb
addr16
xchg
inc
fnsave
mov
fwait
outsb
add
inc
popf
pusha
push
lahf
leave
jmp
popf
add
or
push
std
movups
ljmp
stos
xchg
xor
inc
shll
sbb
add
xchg
imul
mov
aas
movsb
or
test
std
jg
popf
test
sbb
sahf
lock
pop
xorl
mov
ret
insb
xor
add
popfw
sub
lds
cmp
xchg
enter
jmp
add
xchg
fstpt
insb
nop
movsb
scas
and
xchg
repz
jns
ljmp
jne
xor
xchg
scas
test
cmpsb
das
push
pusha
shll
mov
xor
push
jnp
out
sahf
popf
adc
jo
sub
push
fistpll
mov
xchg
imul
push
lahf
ret
lcall
imul
sbb
pop
push
insb
rorb
stos
out
lahf
sbb
and
loopne
pop
cli
cli
cmc
mov
push
insl
inc
mov
out
fwait
sbb
xchg
add
pop
cmp
sarl
mov
adc
test
dec
mov
outsl
loop
ret
sub
clc
cmp
push
sti
lods
push
or
fucomip
inc
and
mov
sbb
je
xor
pop
insl
lret
icebp
rcrb
frstor
and
push
add
xor
add
inc
fdivp
fldpi
and
pop
inc
cmp
lds
cmp
aad
enter
cmpsl
jecxz
out
mov
push
insb
add
add
cmp
sub
xchg
jl
data16
jecxz
out
addl
sarb
ja
hlt
sub
and
testl
sahf
stos
mov
loope
loope
sub
loopne
leave
adc
lcall
cmp
lret
and
mov
cltd
aam
cli
push
rcl
insb
popa
push
and
jae
mov
repnz
test
add
push
pop
inc
lcall
cmc
and
arpl
push
pop
mov
sub
clc
lret
pop
rorb
sub
pop
jo
cmpsl
je
hlt
lea
fbstp
loope
adc
inc
stos
sarb
int
lahf
jge
lahf
pushf
add
int3
push
call
cmp
nop
or
aas
scas
sub
rcr
dec
dec
ficoms
icebp
loope
ds
add
push
xor
aam
nop
imul
jns
stos
mov
jo
incb
mov
out
xlat
fwait
shl
ret
rorb
sub
jae
cmp
xor
adc
dec
jnp
xchg
mov
and
xchg
or
loope
scas
mov
cmp
pop
subb
clc
or
loop
dec
add
cmc
movsb
mov
xchg
or
cs
xchg
cmp
pop
ficoml
loop
pop
ja
cmp
pop
mov
lods
clc
rclb
lods
xlat
std
mov
jne
lcall
and
jmp
jne
and
add
test
mov
repnz
addr16
fbld
movsl
shll
arpl
jne
xor
mov
shll
popa
andl
mov
mov
pop
mov
push
loop
push
dec
mov
test
sub
mov
shlb
and
ss
aas
lret
pop
sub
push
js
test
movsl
sar
inc
or
popf
pop
inc
mov
rcrl
mov
test
sbb
clc
dec
jno
and
inc
and
xor
mov
mov
loope
xor
fimuls
push
mov
jle
push
sub
lods
mov
xchg
insb
loopne
pop
mov
enter
pop
jno
adc
or
xchg
clc
lea
mov
adc
add
stos
fs
push
les
aad
repnz
xor
enter
xor
sub
in
insb
movsb
push
dec
xchg
inc
outsb
mov
inc
dec
pusha
out
or
stos
das
cs
adc
and
shlb
je
or
ljmp
cmc
inc
inc
push
adc
sahf
jne
dec
lahf
sbb
or
mov
dec
in
ret
rcll
scas
mov
fidivrl
pop
mov
lock
imul
xchg
mov
pop
scas
sub
lahf
imul
pop
xchg
ja
dec
daa
xchg
inc
xchg
in
cmpsl
lahf
out
stos
aas
jne
jl
pusha
fmull
add
stc
mov
fiaddl
or
out
xor
xor
cmp
or
inc
mov
pusha
pop
decl
ss
mov
jmp
call
lock
mov
aad
fisubrl
mov
jmp
or
pop
mov
addr16
xchg
and
sarl
aad
mov
xchg
sbb
mov
jl
in
in
cs
aam
sbb
and
jo
daa
add
pusha
cmp
push
fdivrs
pushf
mov
lods
imul
mov
jb
xor
es
lods
outsb
sub
orl
shrl
and
xchg
adc
or
mov
mull
cmp
lahf
inc
push
xchg
inc
adc
adcl
jae
add
mov
cmp
mov
jle
fwait
lods
into
fsubrp
lods
push
push
int3
sbb
stos
xchg
bsr
aad
push
pop
push
mov
pop
sub
or
stos
mov
ret
repz
xor
mov
inc
fldcw
int
je
in
mov
sbb
loopne
scas
in
in
inc
cmp
int
xchg
jnp
sbb
call
loopne
sub
jns
loope
add
sbb
pop
push
loope
and
call
fstpt
shl
dec
outsl
adc
sbb
jle
mov
cltd
and
rcrl
inc
insb
mov
sbb
idivl
inc
push
xlat
ret
xlat
loope
pop
jecxz
ret
sbb
mov
lcall
add
in
roll
or
icebp
mov
cs
mov
pop
dec
rcl
add
jne
lods
mov
outsl
adc
fstpl
mov
divb
rorb
add
movsl
je
pop
sub
xlat
sub
into
rep
cld
inc
test
lret
cmpsl
mov
mov
xchg
sub
fwait
sub
popf
push
lods
into
insl
or
sbb
sub
lock
nop
nop
in
lds
insb
add
push
mov
aas
xchg
mov
or
pop
in
test
cmp
cmp
imul
je
mov
xchg
and
imul
leave
movsb
repnz
dec
js
pop
and
cmp
inc
insl
jmp
mov
mov
std
and
xlat
xchg
pushf
arpl
adc
push
pushaw
push
inc
repnz
inc
pop
cs
xlat
add
mov
js
aad
xchg
cmp
sub
or
and
sub
fsts
rcll
out
jae
out
mov
iret
push
stos
push
ds
jg
loope
movmskps
pop
sahf
mov
mov
shrb
loope
dec
mov
mov
jmp
dec
in
int3
aam
gs
insb
fiaddl
fsubl
cld
lea
pop
mov
pop
dec
sub
std
xor
ficoms
pop
mov
xlat
xor
icebp
in
cmp
mov
fcomps
inc
shrl
fcmove
push
mov
mov
xor
imul
sub
call
mov
adc
push
sbb
in
in
orl
insl
or
ja
add
out
imul
jno
xchg
sbb
dec
mov
mov
jecxz
insb
stos
adc
push
addr16
lds
mov
lahf
inc
sub
or
xor
sub
flds
aad
shrb
enter
mov
shl
test
push
daa
xchg
mov
or
lods
jo
scas
jge
mov
inc
ret
adc
mov
push
push
popf
stos
or
mov
and
jns
shlb
or
cmp
sbb
stc
inc
mov
movsl
mov
pop
push
fwait
mov
dec
adc
jecxz
cli
pop
mov
and
jbe
sub
or
push
dec
sarl
repz
mov
lods
in
pop
repnz
nop
mov
adc
jnp
xorb
pop
ficoms
add
bound
xor
inc
popf
xor
cmp
pop
int
jp
cld
and
xchg
clc
lret
pop
lods
fisttpl
push
lea
je
jnp
jge
cmp
inc
cmp
hlt
nop
daa
es
mov
jo
inc
xchg
sub
and
sbb
xor
sbb
in
inc
mov
movsl
pop
aam
sbb
jne
ljmp
adc
jp
mov
lds
loopne
jecxz
and
push
scas
aas
imul
inc
push
push
jne
cmpsb
cmp
fwait
jg
loope
inc
fsts
in
stc
icebp
push
movsw
mov
js
inc
stos
sub
mov
loope
adc
leave
in
adc
shl
ficoml
push
lret
fldl
loopne
lds
out
fwait
gs
add
cmp
mov
cmp
popf
adc
ss
gs
mov
test
imul
mov
imul
subb
xor
dec
mov
push
jg
inc
pop
mov
cmp
dec
pop
scas
add
jno
sahf
loop
movsb
pop
outsb
nop
sbb
shl
or
push
adc
sbb
or
mov
shlb
xchg
bound
or
ds
cs
sub
addr16
mov
pop
das
inc
lret
stos
ja
xor
pop
inc
xor
push
inc
mov
lret
dec
cmpb
push
xchg
cs
sbb
jl
sbb
add
xor
mov
xchg
or
sub
sbb
dec
mov
data16
push
std
incl
lods
add
ss
and
push
mov
jae
stos
push
inc
arpl
push
imul
test
inc
mov
lret
mov
cwtl
pop
stc
and
cmp
inc
clc
lock
outsb
jmp
dec
inc
inc
xlat
je
je
dec
aad
and
pop
mov
dec
aad
adc
jle
dec
lcall
insl
jno
adc
aaa
scas
int
or
out
xor
mov
fwait
lods
data16
mov
arpl
pop
subl
cld
sbb
pop
pushf
sub
jle
xchg
outsl
jns
mov
add
mov
xchg
sbb
pop
push
mov
sbb
jbe
pop
pop
dec
add
add
cmp
outsl
outsb
pop
frstor
iret
jb
jae
outsl
add
lods
inc
fiadds
dec
xchg
dec
aas
push
fstpt
mov
xor
fcomp
mov
jg
push
scas
inc
loopne
sub
ret
xchg
rcrl
testl
sub
dec
into
and
pop
inc
sbbl
dec
in
aad
push
sub
mov
inc
js
call
cltd
int
dec
sar
adc
push
ret
pushf
mov
mov
cmc
out
ffreep
push
shrb
in
shlb
and
enter
psubsb
and
gs
call
pop
sub
mov
sbb
inc
out
pop
mov
or
xchg
inc
jle
pop
scas
adc
xlat
insb
aas
jae
leave
movsb
pusha
repz
xor
ss
popf
bound
roll
sbb
inc
addb
sub
ja
mov
cmpsl
jbe
mov
movsb
adc
call
mov
out
and
mov
scas
and
xchg
pcmpeqb
sbb
rol
mov
and
pop
leave
ret
pop
sti
subb
out
pop
popf
mov
shr
cmp
inc
gs
subb
mov
aad
mov
sub
lret
inc
pop
dec
and
stc
fisubrs
jp
fidivrl
hlt
xchg
mov
mov
ja
mov
pop
mov
add
insb
negl
cmpsl
mov
mov
imul
data16
nop
in
push
xchg
xorb
pop
cmc
nop
xchg
inc
stos
test
nop
popf
xchg
test
add
test
jl
cld
mov
lret
sarb
decb
iret
pop
test
sbb
gs
iret
adc
xchg
ret
push
inc
imulb
in
xor
mov
fs
fs
xchg
push
test
out
test
push
or
jl
test
mov
ret
ss
jge
aad
mov
aam
sbb
ja
adc
adc
jb
jle
lods
leave
in
sub
mov
popa
jb
mov
ja
and
sarb
das
les
scas
je
adc
dec
loop
fists
add
sbb
xchg
add
ret
cmc
orb
je
repz
pop
je
push
dec
std
es
push
add
sub
xchg
or
mov
mov
sbb
out
mov
sahf
sbb
mov
lock
adc
scas
inc
cmpsb
stc
stc
dec
aaa
adc
push
sbb
fsubs
inc
outsl
loope
mov
int3
add
mov
das
dec
call
pop
lods
xor
cwtl
popf
out
inc
mov
adc
sub
sub
lods
pop
std
jns
aam
call
or
test
push
sbb
in
push
mov
out
into
mov
ss
bound
test
mov
xchg
sub
add
and
dec
mov
cmpb
loop
aad
dec
or
inc
jmp
imul
or
popf
ss
fildl
les
mov
movb
cli
mov
call
fwait
xchg
aam
sbb
push
in
cmc
cmp
int3
fnstcw
mov
sub
mov
test
or
or
adc
xchg
ror
push
push
fdivl
and
je
roll
mov
sahf
ljmp
add
sahf
scas
push
and
pop
mov
fnstenv
std
fdivrs
or
stos
inc
push
jp
out
pop
aad
push
daa
test
mov
lret
pusha
pop
data16
cwtl
dec
mov
mov
bnd
xchg
out
int3
cwtl
aad
cmpsb
jo
jbe
adc
fldenv
sub
xor
cmp
ds
adc
push
and
into
insb
add
std
xchg
pop
jae
xor
or
in
xor
sub
mov
inc
dec
add
jns
ficomps
xchg
pop
adc
test
iret
push
mov
stc
adcb
lods
scas
sarb
xor
clc
and
xchg
ret
fildll
mov
fisubrs
pop
xchg
lret
dec
hlt
gs
ss
das
stos
adc
cmp
dec
sbb
jp
divb
fistpll
xor
cs
xor
pop
out
gs
adc
adc
lcall
test
rcr
pop
inc
mov
aaa
loop
imul
push
push
xor
lds
test
dec
loope
out
test
mov
call
int
push
negl
mov
ss
mov
fnstsw
inc
js
es
jecxz
mov
mov
xor
ficompl
xor
inc
push
mov
adc
cld
mov
inc
loope
std
jno
add
icebp
fldenv
inc
cs
out
pop
lds
leave
das
xchg
in
mov
inc
mov
xor
loope
sub
cs
push
js
pop
dec
cmp
cmpsb
sbb
dec
adc
mov
lret
cmp
popa
les
repz
jmp
sbbb
cmc
inc
xor
push
sbb
mov
dec
inc
push
aam
push
push
and
mov
and
add
lods
pop
mov
lock
dec
mov
imul
jns
and
xchg
or
add
xchg
lods
into
sub
into
cmc
clc
dec
mov
mov
lds
jge
cmp
cs
mov
sub
mov
call
imul
arpl
arpl
xchg
mov
insb
sahf
in
iret
lea
ss
sbbb
add
jbe
xchg
mov
je
mov
sub
mov
lods
enter
cmp
dec
into
sahf
dec
movsl
sub
ljmp
sti
imul
xor
aaa
stos
jnp
decb
js
adc
into
inc
jns
ja
ror
outsl
mov
clc
iret
imul
xchg
inc
mov
ljmp
icebp
adc
hlt
push
pop
ss
imul
inc
and
das
cmp
gs
mov
jle
mov
pop
push
cwtl
mov
jmp
cld
aad
das
mov
sbb
dec
push
adc
add
lea
sub
xchg
into
push
cld
xchg
cmp
shrb
dec
test
jne
ffreep
sub
mov
add
dec
loopne
sbb
adc
sub
push
call
and
shr
dec
cmp
outsb
jecxz
nop
pushf
jp
cmp
nop
lds
sub
scas
and
cmp
idivl
in
jnp
cmp
mov
ja
lea
dec
and
shlb
adc
fs
data16
jmp
xchg
inc
dec
jecxz
adc
push
je
dec
mov
inc
push
sub
in
das
shl
ja
pop
shll
mov
mov
in
popa
cli
cmp
data16
clc
pop
lods
jg
negb
jge
fs
mov
add
sub
aaa
mov
mov
scas
mov
cs
dec
add
jg
and
jne
pop
inc
fmull
and
arpl
loop
in
jns
mov
je
notl
stc
adc
pop
out
fs
push
addl
cmp
or
lahf
add
dec
in
inc
inc
in
mov
cld
lock
mov
xor
pop
aam
lcall
add
jge
ret
jp
loope
and
mov
jno
xor
jmp
cld
push
push
xor
mov
and
add
mov
mov
mov
imul
loope
mov
mov
or
mov
test
cwtl
insb
mov
rol
pop
imul
test
je
sub
or
dec
mov
cmpsb
push
fadds
adc
popa
insl
das
adc
xchg
sbb
push
pop
or
inc
flds
xor
add
pop
inc
fimull
fcoms
add
popf
xor
mov
js
lds
jecxz
icebp
movsl
imul
mov
leave
lahf
cltd
test
jl
push
jp
xor
test
inc
xchg
sub
xchg
sbb
and
push
loope
cltd
cmpsb
in
sbb
dec
ret
hlt
push
or
cmpsl
stc
scas
in
mov
ds
or
xor
mov
sbb
xor
cmp
push
cmpsb
cmp
fldenv
pop
adc
dec
xchg
push
pop
cmp
jl
xchg
pop
cmpsb
mov
push
pushf
into
fisttpll
out
mov
and
xchg
and
adc
outsb
fcoml
js
dec
ret
data16
push
mov
shrl
and
lret
lods
fcmovnbe
and
sahf
push
cmc
push
fisttpl
inc
push
dec
in
jns
outsb
loope
adc
fs
aas
fs
mov
jmp
outsl
fldt
in
fisttpll
mov
repz
or
push
xorl
out
add
mov
andl
ret
or
fsubrl
xchg
jno
ret
fstl
inc
repnz
sub
and
testl
icebp
sub
lret
or
sub
sbb
cmp
xorb
out
test
and
adc
jle
pop
aad
push
and
shll
cmp
mov
push
jmp
test
iret
loope
cmc
pop
jg
pop
sbb
cmp
dec
iret
les
push
sbb
sub
insl
arpl
int
inc
imul
mov
adc
sbb
enter
dec
mov
pop
cwtl
lods
stos
movsl
cld
dec
mov
xor
int
shrb
test
cltd
mov
fstl
inc
lcall
mov
and
filds
and
fnstenv
out
xchg
fcoms
pop
aaa
push
les
cltd
std
das
rcr
or
dec
or
dec
dec
dec
or
pop
xchg
mov
mov
test
jl
jmp
stos
lahf
cmp
test
pop
or
mov
sub
adc
outsb
inc
aad
outsb
or
lods
or
repz
dec
dec
add
mov
int3
sti
jp
jl
mov
cmp
push
mov
adc
test
stos
push
sbb
and
in
add
xchg
and
dec
and
into
sbb
jmp
add
mov
or
xlat
pop
mov
jmp
dec
ret
rep
inc
mov
xchg
sbb
or
ja
in
popa
stos
repnz
jne
mov
pop
add
int3
or
jmp
pop
xlat
outsb
inc
out
cmp
push
mov
and
andb
jecxz
pop
shl
imul
add
data16
add
push
out
subl
and
hlt
adc
sbb
aad
lret
bound
and
int3
test
cmp
pop
xor
or
push
jae
das
daa
xor
sub
orb
push
popf
sti
imul
xchg
xor
mov
pop
jo
cmp
je
push
gs
addr16
ja
lret
leave
test
and
xchg
movnti
je
repz
xchg
cmp
icebp
fistpl
push
xchg
pop
push
lods
mov
shr
and
xor
bound
pop
xor
xlat
aad
psllq
jle
repnz
jge
mov
rclb
outsl
test
in
sbb
and
lock
sar
xchg
pop
cmc
dec
pop
imul
sbb
fucomip
cmp
repz
sub
dec
ds
clc
insl
mov
mov
orl
inc
xchg
dec
hlt
pop
aaa
into
mov
and
xlat
sbb
mov
or
dec
add
orl
aad
lds
mov
in
int3
jp
xchg
addb
or
mov
adc
mov
xchg
add
cmpsl
out
loop
jg
push
cmp
out
mov
adc
into
mov
mov
xor
or
enter
jnp
mov
push
pushf
push
rclb
push
sub
jne
shl
jb
cmp
into
subl
sbbb
aaa
add
xchg
mov
mov
out
add
cs
xor
out
mov
cmp
fdivr
xchg
push
xchg
mov
lret
jb
or
push
and
mov
push
orb
arpl
popf
and
add
mov
mov
mov
mov
xchg
or
cmpsl
jnp
xor
arpl
push
xor
jae
dec
outsl
mov
gs
push
insl
icebp
adc
mov
jne
out
push
mov
push
lds
and
xchg
fs
xlat
sub
or
stos
jmp
xchg
mov
hlt
mov
jo
outsb
nop
jno
xchg
notl
ret
fcmovne
fdivrp
or
out
dec
std
and
or
mov
jb
dec
out
ds
jge
mov
jae
ds
sti
dec
xchg
test
add
mov
andb
push
dec
fs
jge
rol
test
mov
pushf
dec
shl
and
aam
ds
cmc
in
idivb
les
pushf
add
cmp
scas
mov
sub
lock
pop
mov
fwait
sub
inc
fstl
jmp
lds
testb
scas
pop
fcomi
hlt
push
adc
pop
dec
cs
bound
into
pop
pop
xchg
stos
inc
push
mov
mov
lea
test
pop
scas
inc
gs
xchg
lahf
popf
into
adc
mov
xlat
fnstcw
xchg
sbb
clc
es
adc
sbb
jbe
test
loop
mov
fstps
inc
xchg
adc
fdivs
cltd
repnz
sti
push
sahf
enter
push
call
jmp
in
cmc
xlat
ret
mov
jle
dec
dec
adc
in
ds
insl
fnstcw
cmp
adc
sbbl
push
cmp
xchg
jle
mov
and
push
test
ja
cld
xchg
or
jg
jnp
popf
mov
xchg
xor
scas
inc
cmp
addr16
rcl
repnz
mov
and
aas
out
mov
jns
sub
sbb
nop
mov
daa
inc
cltd
sbb
in
imul
lahf
jnp
dec
lods
rolb
or
xchg
cmp
cmp
mov
inc
in
pop
pop
out
mov
cmp
notl
aaa
stos
sbb
fcompl
mov
stos
cmp
sub
dec
adc
ljmp
movsb
and
push
out
and
rcrl
adc
fstpl
cwtl
xor
popf
or
sub
rcr
in
jbe
xchg
mov
pop
jno
dec
jl,pn
mov
pop
adc
sbb
cmp
cmc
pop
mov
dec
add
jle
push
sbbl
cmp
and
orb
xchg
pusha
mov
jbe
bound
add
test
test
icebp
push
icebp
mov
jmp
mov
lods
adc
inc
pusha
ljmp
lcall
sbb
in
sbb
stos
loop
icebp
lcall
roll
or
sbb
test
sbb
add
mov
fbld
repz
add
jge
mov
mov
or
pop
enter
lds
and
sub
xchg
insb
cmp
dec
pop
mov
sub
pop
jno
int
int3
incb
js
fcmovne
jge
in
out
jge
scas
mov
and
jb
xor
sub
mov
jns
fwait
sub
mov
pop
out
xor
mov
lods
scas
mov
xor
outsl
scas
bound
jecxz
xlat
pop
dec
loopne
adc
add
lods
sahf
adc
inc
cmp
stos
jne
pop
xor
push
std
pop
ja
adc
mov
sar
outsl
testl
or
inc
mov
adcl
dec
enter
push
cli
ret
cmpsl
cmp
subl
pop
in
sub
push
xor
out
aad
mov
sub
pop
out
pushf
mov
shll
bswap
je
sti
je
mov
jo
and
fsin
jb
add
aam
cmp
js
lods
popa
sub
jne
push
jns
es
push
mov
push
das
push
push
add
fldt
and
pop
stos
xchg
jnp
mov
mov
mov
lods
xchg
in
mov
mov
mov
and
xor
int
int3
xor
or
sbb
mov
fcompl
jo
ja
aam
sbb
movsb
lods
popf
test
inc
pop
pop
js
xor
adc
sub
jle
mov
jg
subb
out
mov
cli
repnz
push
hlt
cld
mov
push
push
ret
mov
fimuls
outsb
in
or
push
imul
vcmppd
fscale
aam
jnp
mov
rcrl
je
int
mov
jns
xor
inc
dec
fcmovnb
and
lods
inc
aaa
jbe
into
fidivl
jnp
jns
faddl
sbb
push
movsb
sub
adc
adc
mov
fwait
add
cmpsl
adc
or
lret
idivb
js
pop
lahf
pop
adc
jle
roll
or
add
cltd
mov
jne
jno
out
fsts
lods
aas
xchg
mov
push
loop
stc
shlb
push
scas
leave
ss
add
and
daa
cld
jle
cld
mov
cmp
xchg
mov
enter
sti
loope
dec
pop
int3
das
fsubl
leave
and
push
sahf
jl
dec
shl
faddl
lds
sbb
outsl
inc
enter
aad
mov
loopne
pop
pop
scas
push
popa
mov
flds
jecxz
cmp
loop
out
ret
mov
mull
add
xchg
dec
add
shlb
mov
into
loop
mov
mov
xor
mov
pushf
and
xor
pop
andb
sub
call
test
ja
es
arpl
out
xor
mov
fistpl
sbb
popf
fnstenv
jmp
dec
cmp
sbb
cmc
aaa
push
rcl
jl
dec
repnz
or
push
adc
or
mov
icebp
xchg
jge
xor
neg
mov
addr16
pop
jne
mov
adc
in
imul
mov
fidivrs
mov
mov
and
test
sbb
cwtl
icebp
xchg
js
cmpl
mov
test
sahf
std
xchg
add
push
mov
jp
jbe
or
pop
jmp
and
xor
dec
pop
outsb
cli
mov
into
adc
mov
cmp
adc
mov
in
fidivl
mov
push
or
dec
xlat
jbe
sbb
adc
push
jbe
out
icebp
fstl
lds
lret
incl
mov
sub
mov
mov
mov
xchg
xchg
pop
mov
inc
push
mov
dec
push
imul
out
lea
movsl
or
rorl
in
rcrl
add
cli
ficoms
and
ja
xor
std
pop
sahf
aam
inc
fadds
jns
push
push
sub
mov
icebp
sbb
shrl
ds
ret
fsub
jecxz
icebp
lea
ja
and
inc
clc
fcmove
mov
nop
nop
icebp
mov
sbb
test
insl
mov
es
lds
stos
mov
jnp
sbb
pop
pushf
insl
mov
in
jno
mov
sti
mov
testl
xor
lock
cmpsb
mov
or
xchg
rolb
xchg
xchg
jp
cmpsl
lahf
push
fildl
aaa
hlt
dec
pop
sub
dec
jp
out
pop
add
fucomi
outsl
lret
aaa
iret
push
test
adc
cmp
mov
fs
mov
cmpsl
ja
adc
ds
fucomip
lret
push
xchg
dec
pop
loop
outsb
xchg
dec
xor
test
mov
lahf
cs
sbb
push
or
fisubl
push
fmuls
lcall
mov
mov
xchg
test
daa
inc
mov
outsl
and
sub
scas
lods
pop
jne
cmp
sub
or
sub
pop
loope
test
pop
stos
lahf
insl
inc
pop
sub
inc
sahf
mov
and
loope
je
add
scas
jne
rolb
jnp
shrb
cmp
xchg
scas
lds
out
sbb
xor
repz
mov
xchg
cmc
sbbl
rep
stos
roll
jl
daa
jl
inc
xchg
repz
sti
ds
rcll
fucomip
lret
jbe
lods
mov
leave
and
jo
mov
mov
cmp
and
pop
mov
jns
and
mov
mov
popf
lods
cmp
jo
sarb
out
jnp
cld
rorl
les
lock
into
enter
or
jl
push
push
mov
inc
and
lock
xor
xchg
addl
sub
or
add
mov
xor
or
andb
mov
lahf
push
into
push
xor
sub
mov
pop
fwait
jle
jmp
popa
int3
inc
mov
jae
outsl
ret
adc
das
in
cmp
xor
fidivrl
jnp
js
mov
das
mov
sbb
nop
inc
mov
test
mov
ja
lods
inc
lret
push
mov
cld
stos
fwait
push
in
inc
jbe
arpl
lds
xchg
or
cmp
sub
dec
rorb
mov
int3
xorl
inc
cmc
or
adc
push
and
cmp
cmc
inc
jo
js
pop
mov
jo
jge
stc
lea
ret
push
leave
mov
pop
fwait
push
add
xchg
mov
or
jp
cmp
loope
setge
outsl
adc
or
cli
sbb
lret
repz
pop
loope
hlt
mov
xchg
pop
out
hlt
adc
xor
push
sub
lahf
mov
mov
shr
push
imul
or
mov
shlb
cmpsb
pusha
add
dec
in
dec
mov
vpunpcklqdq
nop
aad
mov
fistpl
jg
xor
push
mov
pop
mov
mov
adc
cs
dec
movsb
insl
mov
enter
movsb
adc
jecxz
cmp
lret
dec
insl
push
jae
jle
pop
enter
sti
in
mov
cwtl
in
test
ds
cmp
insb
cmc
mov
xor
icebp
pop
bound
inc
aad
out
lret
dec
pop
mov
sti
lret
pop
call
cmp
cli
dec
sbb
addb
push
push
cmc
jnp
mov
dec
xlat
adc
aas
adc
in
int3
push
jmp
dec
push
sbb
cmp
ja
xchg
xor
test
inc
rclb
sti
sub
les
cmc
push
aas
pop
sbb
ret
jo
pop
arpl
aam
pop
sub
lods
add
iret
sbb
jns
cmp
insb
add
into
jmp
push
mov
dec
push
sub
cwtl
outsb
inc
mov
gs
pop
mov
sub
pop
cmc
js
icebp
shlb
stc
fnstenv
jge
mov
pop
xor
pop
lock
andb
lcall
jg
test
push
push
push
ja
addl
sub
popf
jb
arpl
jp
loop
push
cmpsl
push
mov
repz
mov
stc
sub
incl
or
pop
cmp
and
sbb
aam
add
in
mov
add
jmp
icebp
movsl
xchg
mov
pop
out
clc
mov
in
sahf
out
clc
xchg
or
lahf
stos
pushf
in
ljmp
pushf
xor
mov
jno
sub
pushf
sub
sbb
cld
mov
sbb
cmp
pop
push
sahf
or
cmp
notl
pop
outsb
ljmp
mov
xchg
outsl
mov
push
pop
mov
cwtl
stos
cmp
sub
dec
dec
xchg
sbb
or
mov
gs
out
pop
popa
enter
test
sbb
test
jle
dec
mov
icebp
adc
dec
in
daa
dec
sahf
pop
jae
push
out
clc
push
push
pop
push
test
sub
call
lods
sti
mov
jns
pop
push
hlt
push
cmpl
mov
jne
mov
cmc
int3
lret
loope
mov
cwtl
push
mov
sub
push
cs
jae
mull
inc
popa
cmpsb
call
lods
xchg
and
or
inc
mov
pop
mov
and
mov
push
push
lahf
xorb
cmpsl
xchg
test
cmp
push
lock
push
and
rorb
stos
fwait
sbb
pop
inc
ror
repz
jae
mov
inc
mov
mov
cmpsl
sti
bound
movsl
xchg
cli
adc
in
sub
jg
push
bnd
pop
insb
fsubrl
pop
jno
sbb
sub
cmp
cld
adc
pusha
or
push
sub
jo
mov
movsl
aad
add
adc
pop
or
loope
sub
dec
outsb
jmp
shrl
push
sub
or
bound
mulb
sub
jg
jae
mov
cmp
add
fwait
add
fs
pop
nop
mov
mov
push
orb
movsb
inc
sub
lods
pop
test
sbb
hlt
xchg
data16
rcll
dec
dec
add
ds
cmp
pop
sub
sbb
pop
cmc
or
push
add
sub
int
mov
scas
jmp
sbbb
pop
int
mov
mov
push
mov
ret
roll
adcb
dec
mov
jecxz
arpl
imul
pushf
icebp
fists
mov
out
loop
jmp
pusha
repnz
data16
inc
push
and
add
and
jae
xchg
mov
popf
mov
mov
js
sbb
mov
loopne
pop
jns
push
movsl
test
dec
test
jl
dec
mov
mov
mov
xor
popf
clc
xchg
std
sahf
xor
inc
jne
dec
iret
je
inc
cmpsb
lock
fcomps
inc
lds
dec
mov
out
xor
xchg
pop
imul
mov
adcb
nop
das
dec
imul
push
icebp
sbb
cmp
push
pop
add
int
push
mov
mov
push
mov
and
adcl
adc
sub
push
cmp
mov
out
dec
scas
loop
dec
cld
jp
outsl
cwtl
cli
in
leave
mov
sti
std
cmp
sub
add
popa
push
mov
or
insl
push
xchg
and
push
rorl
shrl
xchg
fsubl
mov
cmp
ds
push
rcrl
cmp
fldenv
pop
aaa
into
dec
xchg
loop
adc
outsb
jne
imul
fdivs
test
scas
push
popa
test
pop
push
pop
mov
sti
leave
and
pop
xchg
mov
xchg
mov
cld
out
into
fdivp
mov
xor
in
sbb
mov
add
pmaxub
mov
mov
push
pop
inc
mov
lret
xchg
dec
mov
push
fists
adc
and
rol
mov
xchg
stos
adc
and
jmp
push
repnz
add
mov
push
mov
sbbb
sahf
test
test
arpl
mov
iret
outsb
fildll
cmp
cmp
dec
push
add
call
ja
scas
aaa
imul
or
das
xchg
mov
sub
hlt
insl
pop
xchg
sub
out
sbb
scas
push
inc
insb
add
xor
js
loopne
xor
mov
push
adc
mov
jo
sbb
jno
mov
outsb
pop
lret
push
fnstenv
idivl
sub
clc
pusha
imull
add
sub
addl
mov
mov
and
and
xorl
test
dec
fists
hlt
xor
sbbl
cmp
jg
sbbb
pop
jns
adc
pushf
push
popf
inc
cmp
and
or
arpl
stc
push
mov
or
sbb
gs
push
and
dec
fldt
icebp
in
pop
out
cs
hlt
sahf
test
push
sub
inc
sahf
lret
ret
test
insl
ret
xchg
jb
lods
sub
lds
andb
ja
shrl
inc
fidivl
pop
mov
push
lcall
fsts
call
xor
jno
loopne
mov
sarl
aaa
das
cmp
adc
mov
add
iret
notl
add
lods
mov
test
mov
jnp
cmp
fisubl
xchg
push
mov
fcmovbe
imul
in
jle
inc
mov
push
mov
mov
jp
mov
movsb
inc
aad
mov
dec
inc
lds
ja
mov
cwtl
xchg
aas
mov
gs
in
imul
loope
call
or
ds
add
or
mov
xor
mov
mov
inc
mov
mov
icebp
dec
mov
out
dec
add
mov
out
push
cli
inc
or
or
jl
adc
jbe
mov
push
movsl
xlat
pop
jno
inc
test
gs
mov
cmpsb
arpl
pusha
xchg
ret
inc
mov
jl
lret
mov
lock
sbb
leave
shrl
xlat
pop
aaa
mov
aaa
jae
pop
lods
hlt
xorl
movsl
addr16
into
inc
xor
sub
jo
int3
arpl
inc
bound
test
call
xor
xchg
or
pusha
mov
push
insb
in
out
inc
pop
sahf
repz
lret
cmp
dec
adc
dec
lcall
dec
jg
in
cmp
cmp
push
lods
or
fnsave
xchg
inc
pop
lret
add
das
jae
push
ja
stos
jne
insb
inc
enter
mov
pop
bound
adc
and
mov
ss
pop
insb
mov
fwait
sub
or
jo
lcall
int3
testl
lds
out
inc
push
and
mov
test
mov
in
push
adc
insb
add
adc
or
inc
gs
insl
push
fwait
xchg
outsl
loopne
mov
mov
sbb
out
es
push
jmp
mov
jb
push
fsubrs
add
lret
cld
loopne
jno
adc
icebp
inc
mov
add
inc
pop
add
sbb
fistpll
andb
inc
add
push
lock
push
xchg
movsb
cmp
mov
rcl
arpl
mov
dec
mov
push
out
in
test
bound
loope
bound
pop
imul
sub
dec
push
push
andb
or
and
add
je
and
stos
test
add
mov
dec
mov
cmp
xchg
sub
mov
and
push
movsb
mov
sub
sbb
nop
stos
inc
mov
cmpsl
test
ret
jmp
sub
fwait
js
pop
xchg
lret
cmp
movsl
and
cmovge
shll
ret
xor
jns
dec
data16
sbb
or
cwtl
loop
out
dec
add
aad
insl
mov
dec
adc
ds
lock
and
mov
dec
xchg
lret
subb
mov
xlat
mov
les
sbb
jmp
dec
movsl
and
scas
xor
jmp
es
ret
or
paddsb
pop
inc
fsubrs
in
jecxz
xchg
inc
fidivl
icebp
dec
ljmp
xor
insl
call
lods
addr16
mov
insl
idivb
mov
lds
jmp
imul
jmp
cmp
dec
in
pop
mov
movsl
icebp
mov
movsl
imul
aas
mov
cmc
subb
jb
stc
sub
aam
pop
jle
das
in
or
add
mov
lret
xor
js
dec
cmp
xor
pop
xchg
push
inc
adc
xchg
cs
jb
inc
jns
xchg
add
mov
push
pop
sahf
inc
sahf
sub
xlat
stos
cwtl
rcr
mov
loope
ds
mov
push
std
jmp
js
gs
xchg
in
push
popf
pusha
rorb
push
and
addb
mov
adc
xlat
xrelease
adc
movsb
mov
test
imul
or
jnp
jb
add
ja
ja
mov
jp
push
dec
mov
inc
lds
sbb
adc
std
inc
rolb
jb
mov
mov
cmp
lods
in
adc
stos
push
pop
popf
rcrl
es
inc
add
push
orl
ds
insl
negb
xor
lahf
xchg
data16
push
inc
iret
gs
mov
mov
shl
mov
adc
test
xchg
xchg
mov
fxch
in
pop
aas
mov
fsub
inc
lret
mov
inc
test
xchg
cmp
test
pop
inc
cwtl
sub
adcb
push
mov
pop
mov
scas
fnstsw
pop
outsl
push
lea
push
out
adc
mov
mov
mov
cmp
jmp
test
cmpsb
lock
popa
push
test
clc
or
pop
sbb
push
addr16
adc
jb
incl
fwait
add
out
xchg
push
pusha
jg
test
je
mull
outsb
sub
ret
iret
or
pop
cmc
in
xchg
pop
cld
pop
push
lea
icebp
xchg
in
nop
pmaxub
dec
loopne
fiadds
insb
lahf
and
push
aad
xor
push
adc
push
mov
mull
push
imul
pop
lcall
push
ror
cmc
sbb
ffree
push
cmc
push
fcmovb
xchg
lods
movsl
fisubl
mov
mov
fs
aad
xor
jp
adc
cmp
fs
push
jb
into
add
clc
enter
fcomps
data16
outsb
push
lret
sar
sub
adc
mov
add
lahf
gs
xchg
sub
les
inc
loop
loope
movsb
sub
xor
mov
and
leave
les
insb
push
inc
pop
inc
push
inc
in
loopne
cmc
adc
ret
mov
mov
ss
je
out
mov
xor
cwtl
das
sub
add
jns
xor
pop
push
fsubr
fisttps
push
jae
int3
mov
add
add
stos
sub
and
leave
jecxz
out
in
std
push
mov
mov
insb
sub
gs
add
in
push
popa
bound
mov
popa
dec
mov
fimull
mov
sub
mov
bound
jmp
in
sbb
sbb
pop
pop
pop
xor
add
iret
sti
jge
and
inc
popa
into
flds
int3
mov
sbb
arpl
inc
out
bound
cmpsb
lret
add
das
push
shll
mov
adcb
addr16
jle
dec
or
hlt
nop
pop
imul
popa
cmp
in
addr16
icebp
pop
push
push
sbb
test
cmp
mov
cld
sbb
and
jo
dec
mov
push
add
pop
sahf
or
mov
mov
xchg
xlat
xor
lea
fs
cmp
mov
notb
popa
mov
mov
lret
addb
or
cs
es
sarl
jecxz
push
mov
push
shl
andb
mov
shlb
inc
mov
dec
push
jbe
and
pop
pop
dec
loope
imul
int
movsl
cmp
lcall
push
jae
pop
out
mov
js
dec
das
pop
lea
dec
mov
popf
adc
adcb
mov
ds
dec
int
test
js
frstor
dec
rcr
pop
mov
insl
push
push
dec
xchg
sub
jp
and
push
rcrb
int3
ret
aam
lret
sub
out
sub
pop
in
mov
or
jp
xlat
lahf
leave
test
pop
lods
fstpt
shl
mov
cmp
sbb
adc
or
pop
enter
pop
loope
clc
pushl
int
mov
add
xchg
es
les
sub
dec
sahf
xor
add
jmp
push
fstl
inc
pop
ret
dec
stc
or
test
jae
mov
inc
sub
inc
fldt
lea
daa
add
push
lock
leave
ss
inc
not
fdivl
mov
inc
inc
lret
push
mov
insl
ss
cwtl
or
pop
inc
jp
mov
mov
xchg
push
dec
mov
mov
fwait
test
mov
pop
jge
in
aam
fistpll
or
insl
mov
jecxz
aaa
jecxz
aas
rorl
add
mov
popa
movsb
jae
pop
xchg
add
xor
test
lds
mov
inc
inc
inc
and
call
sbb
and
int
fwait
sti
mov
mov
mov
push
in
jbe
pop
cmp
xor
aas
jp
test
xchg
mov
nop
add
pop
repnz
es
mov
lds
fldt
popa
iret
xchg
shlb
sbb
dec
push
mov
outsb
sarl
in
adc
mov
pop
xchg
repnz
jle
outsl
test
adc
and
test
lods
movsb
mov
fisubs
je
addr16
dec
mov
subl
sbb
bound
sbb
mov
mov
mov
faddl
loop
jecxz
dec
loope
cmpsl
js
in
jmp
call
sbb
repz
push
test
cmp
testl
jmp
or
or
mov
in
pop
xchg
pusha
pop
notb
ret
sub
push
jg
jnp
jnp
ljmp
movsb
mov
aam
sub
push
or
lods
mov
filds
insb
mov
inc
xchg
fs
and
fcompl
cmp
mov
lcall
ja
xlat
adc
jbe
xchg
xor
pop
xchg
stc
xchg
nop
loop
push
je
xor
mov
xchg
sub
xchg
mov
xchg
cltd
ret
jb
mov
adc
lea
jle
jl
inc
mov
jb
add
dec
sbb
jle
es
pop
lods
out
or
add
rcrb
in
pushf
je
push
call
adc
adc
mov
std
mov
mov
ljmp
icebp
test
testl
or
sbb
mov
js
orl
and
and
pop
cld
scas
sub
loope
rcrl
adc
mov
jo
mov
mov
testb
jno
dec
gs
xchg
mov
mov
ret
cmp
dec
add
stc
aad
mov
lret
mov
inc
imul
jnp
movsb
cld
notl
fstps
cwtl
or
jbe
inc
inc
popa
adc
outsl
popa
jmp
sub
dec
ret
popf
or
cli
push
ret
shrb
fwait
jns
mov
fsubr
lock
lcall
mov
out
mov
mov
jns
stc
xorb
callw
sub
xorb
xchg
push
and
divl
inc
std
xchg
cmpsb
cmp
add
les
inc
test
push
dec
add
lock
sahf
xchg
xchg
add
add
sarl
push
sbb
in
xor
mov
jge
loope
dec
pop
imul
shrb
adc
mov
dec
loopne
lods
mov
clc
pop
cmpl
pop
xor
dec
dec
mov
jl
sbb
dec
push
add
fisubrl
xchg
mov
in
xchg
lret
in
inc
jmp
dec
and
mov
adc
adc
push
mov
ret
push
jmp
jge
jmp
cmp
lret
ret
inc
in
data16
fs
cmp
dec
pusha
or
idivl
divl
jns
xchg
pop
iret
les
jge
ret
sub
repnz
xor
lret
cld
mov
sbb
movsb
int3
popl
jmp
mov
ret
rclb
div
pop
add
enter
push
mov
icebp
jecxz
jno
enter
lods
test
das
mov
adc
xor
xchg
imul
aam
stos
out
js
arpl
stos
adc
jmp
gs
xchg
cmpsl
js
inc
stos
enter
clc
dec
repnz
add
xor
insl
loopne
loopne
pextrw
test
daa
ror
jecxz
into
std
cs
imul
mov
in
inc
add
jle
or
outsb
std
or
arpl
push
or
jg
cwtl
test
or
add
out
lret
mov
imull
xor
lahf
insl
jge
add
cmp
jmp
outsb
stos
movsl
xlat
push
push
pushf
xor
dec
rcl
out
pop
addb
xor
inc
cmp
cwtl
sti
mov
loop
push
cmp
adc
int3
xchg
popf
jbe
push
fisttpll
inc
and
xor
pusha
dec
cmp
insl
jecxz
push
inc
xchg
inc
stos
lds
mov
inc
aad
je
les
enter
subb
popl
sub
xor
sbb
or
sahf
imul
gs
pop
mov
add
rcll
mov
idiv
out
xchg
cs
call
sub
xlat
insl
cmc
jge
jae
in
nop
rcrb
cs
mov
int3
mov
fnsave
add
icebp
xchg
mov
ret
mov
mov
aad
dec
scas
xor
fs
jns,pn
add
xchg
movsb
or
int3
pusha
jl
fs
add
mov
scas
divb
mull
adc
push
les
cmc
jnp
int
int3
shlb
and
push
fcomp
cmpsl
sub
addl
iret
mov
jmp
jl
ljmp
jbe
or
ja
pop
scas
jne
cld
out
lods
mov
mov
sbb
insl
add
sbb
adc
negb
out
lahf
es
inc
pop
cld
xor
jo
or
cmpsl
mov
push
popf
lret
call
sub
sbb
rorl
mov
mov
add
dec
dec
mov
in
dec
mov
cmp
lcall
ja
push
cli
push
jl
fists
jne,pt
loop
ljmp
ja
mov
lahf
or
cli
jo
dec
mov
in
inc
add
bound
fbstp
jg
outsl
lods
imul
mov
sbb
jno
gs
scas
mov
mov
or
inc
push
jno
xchg
daa
mov
sbb
ds
pop
movsl
ret
jbe
jo
sub
cs
adc
lcall
push
nop
cmp
mov
shll
push
dec
or
mov
pusha
scas
out
xchg
mov
out
out
repz
fs
add
push
das
cmp
mov
sbb
mov
ficoml
ror
jo
inc
flds
bnd
adc
or
cmp
and
test
bnd
popa
cmp
popa
cmp
sbb
jle
sbb
lret
sti
cmc
in
adc
adc
lods
push
hlt
shl
and
mov
or
cmp
outsl
sbbl
add
lock
lea
lock
cmp
shr
adc
notb
mov
jmp
or
mov
mov
jp
adc
out
xchg
fistps
in
inc
jge
aam
loop
jecxz
mov
dec
adc
xchg
ja
les
dec
sbb
mov
dec
adc
and
arpl
inc
cld
lcall
pop
jo
add
jle
sbb
call
dec
pusha
pop
pusha
fnsetpm(287
xchg
roll
cmp
stos
or
mov
int
cmp
xlat
das
mov
dec
mov
popf
lds
leave
flds
imul
sub
push
clc
fisttpll
inc
movsl
jae
cmc
jnp
cmp
imull
jns
ror
dec
jp
rclb
imulb
lret
mov
gs
mov
mov
xor
mov
incb
pmaddwd
sub
in
dec
into
xor
mov
out
test
sbb
xchg
dec
pop
out
mov
mov
xchg
cmp
in
stos
adc
add
loopne
fsubrl
aas
ret
movsb
pusha
and
jno
inc
shlb
test
fildll
mov
cmp
add
call
or
sahf
mov
mov
pop
int
nop
jmp
pop
inc
test
xor
jl
mov
inc
pushf
outsl
or
push
incl
sbb
sti
xor
inc
addr16
aas
push
dec
fcmove
imul
gs
jge
lods
pusha
outsl
adc
fld
xor
push
js
xchg
mov
std
mov
fmuls
rol
shrb
pop
dec
mov
cmc
cmp
scas
adc
imul
add
subb
enter
loope
bound
jb
dec
fidivs
fwait
enter
pop
xchg
es
data16
aam
adc
fs
scas
hlt
and
jl
mov
dec
stos
cs
xor
imul
sub
enter
sbbb
jl
aas
popf
pop
mov
lds
push
sbb
mov
jg
xchg
aad
xchg
add
sbb
incb
inc
pushf
dec
nop
xor
xor
test
mov
adc
adc
jbe
in
mov
pop
ret
mov
stc
pusha
jb
cmpsb
daa
mov
pop
pop
xor
push
cmp
push
cld
cmp
nop
dec
test
dec
push
in
mov
jno
in
xchg
mov
insl
xchg
cmp
pop
test
xchg
in
test
cmpsb
shl
or
setge
inc
xchg
mov
fs
insl
cmc
jo
jmp
call
push
or
andl
popf
xchg
mov
incb
out
adc
xor
out
xchg
mov
inc
pop
pushf
test
movsl
jge
pop
xlat
outsb
jp
mov
adc
cmp
pop
push
sbb
es
sub
pop
dec
xchg
pop
jbe
das
add
xchg
xchg
pop
enter
jno
push
out
dec
sub
inc
mov
and
jmpw
xor
inc
int3
jg
daa
or
fcmovnbe
sbbb
aas
inc
sti
mov
mov
mov
dec
rclb
xor
mov
pusha
dec
rorb
in
testb
add
fnstenv
je
lock
ss
or
lahf
adc
add
sbb
or
pop
add
jns
int
jns
lcall
mov
or
sub
adc
into
cmp
add
jmp
scas
es
and
ss
jno
std
lods
outsl
jbe
cmp
leave
ret
stos
in
nop
mov
lock
pop
xlat
stos
ds
sahf
int
jp
fildl
and
jne
adc
ljmp
testb
mov
mov
adc
shl
orl
fdivr
jo
std
nop
push
xor
andb
rcrb
cmpsb
pop
or
test
mov
fisttpl
test
inc
rol
shr
lret
loope
test
xchg
add
scas
lods
fdivrs
shl
inc
add
lock
dec
notb
insl
mov
adc
or
dec
loope
and
movsl
cmp
stc
jns,pt
jmp
add
mov
inc
jmp
or
xchg
jo
and
js
sub
and
or
out
lds
jle
pop
jl
cmp
pop
mov
push
loop
out
hlt
cmpsb
jge
adc
dec
jnp
xorl
cwtl
decb
push
cmp
xor
movsb
mov
push
jl,pn
loope
out
movsb
add
in
paddsw
push
sub
or
scas
mov
subb
lods
mov
cmp
testl
imul
push
aad
push
ret
jle,pn
push
movsl
fnstcw
and
xchg
add
mov
push
movsl
fwait
scas
mov
inc
arpl
and
jbe
mov
loopne
adc
leave
int3
imul
xchg
mov
gs
mov
bound
sbb
sbb
and
xlat
add
fsts
cmp
sub
push
xor
or
pop
call
insb
mov
loope
shrl
das
jb
aas
outsb
loopne
push
aas
mov
cld
cmp
int3
test
jge
test
inc
lcall
addr16
jb
mov
mov
cld
stc
shr
int
xchg
fs
or
fs
mov
andl
aam
js
stos
xor
repz
int3
arpl
adc
pop
loopne
repz
pusha
push
adc
leave
pusha
test
add
repnz
notl
data16
outsb
sbb
push
out
mov
fcmovnu
movsl
pop
hlt
xchg
jge
dec
stc
mov
pop
in
out
int3
adc
shlb
sub
dec
sbb
dec
call
mov
iret
adc
pop
mov
push
adc
out
mov
popf
xor
aam
pushf
add
cs
xor
out
mov
test
jg
xor
dec
jg
adc
in
cwtl
pop
lret
sub
mov
mov
or
aad
repz
add
test
lea
mov
jecxz
fwait
lahf
movsb
decb
hlt
test
inc
ret
lds
dec
ficoms
and
push
sti
jb
cmp
decb
xor
xor
leave
cmpsl
es
mov
lret
pushf
out
add
xlat
fidivl
mov
cwtl
outsl
aam
mov
aam
testb
push
mov
add
inc
pushf
arpl
aaa
cwtl
xchg
mov
xchg
dec
mov
mov
sbb
inc
mov
mov
imulb
xchg
sub
cmp
cs
cmc
or
lret
or
fistl
and
cltd
xchg
xor
stc
mov
mov
psubusb
std
add
cld
out
jg
sbb
leave
xor
inc
push
mov
mov
or
push
jl
ljmp
lcall
jns
shl
int3
aad
mov
aas
loopne
cmc
insb
inc
lds
fdivrp
or
inc
sub
add
and
mov
ja
aaa
gs
notl
mov
mov
mov
lahf
ror
gs
pop
loop
jbe
daa
xor
xlat
mov
dec
inc
std
ds
out
cmp
inc
cltd
test
lds
jl
jae
idivl
sbb
mov
pop
lock
jle
lahf
adc
repnz
xchg
adc
lcall
into
out
jge
mov
adc
shlb
mov
jle
rorl
push
imul
add
pusha
ss
insb
xchg
dec
mov
fwait
sbb
cld
cwtl
addr16
cwtl
xchg
mov
bound
xchg
ror
push
mov
loop
push
mov
lock
clc
mov
loopne
xlat
xchg
cmp
add
mov
divb
lcall
push
mov
and
stc
adc
out
into
xchg
into
outsb
adc
mul
add
adc
inc
jbe
int3
and
cmp
rep
fsubs
int3
les
push
imul
add
inc
adc
aaa
sbb
fcomip
outsl
not
insl
sub
hlt
push
int
popa
iret
mov
push
or
and
jno
fwait
dec
loopne
cmc
and
vpackuswb
and
jecxz
inc
mov
dec
cmp
push
in
popa
xchg
fs
shlb
call
lds
fidivs
mov
and
loop
rcrl
sub
cmc
lret
or
arpl
jae
dec
out
outsl
xchg
xor
ss
sub
push
mov
enter
xchg
test
xchg
out
adc
pop
out
popf
pop
sti
imul
jo
nop
mov
add
pop
xor
add
and
in
in
out
mov
jno
insl
mov
mov
lods
cmp
sti
jb
adc
sbb
mov
je
push
imul
inc
in
imul
repnz
stc
cmp
sub
inc
test
push
cmp
ret
repnz
loop
stos
xlat
cmp
sti
mov
js
add
aas
sub
sub
mov
mov
psubb
std
cmp
adc
inc
xlat
cli
ret
fnstenv
sbb
jge
xchg
pop
iret
jp
test
icebp
mov
push
in
pop
or
cmp
popl
cli
jmp
bound
ror
lods
xchg
inc
push
shll
enter
ds
sti
cmp
data16
jg
imul
push
loop
adc
rclb
lds
mov
call
pop
mov
mulb
sahf
jmp
addr16
shlb
arpl
imul
outsl
scas
sbb
out
pop
pop
jns
or
add
cmc
in
pop
loop
aad
jl
add
aam
es
enter
pop
lock
adc
dec
mov
notb
mov
std
pop
xor
xor
push
xchg
jg
push
inc
shl
inc
daa
and
fists
or
fchs
mov
arpl
pop
cmp
pop
repz
sbb
bnd
fnstsw
jne
jge
cmp
inc
cmc
mov
jg
inc
sbb
fsts
sbb
jl
aaa
pop
lock
mov
dec
dec
cmp
shl
sub
dec
sbb
aas
nop
jg
ret
jecxz
out
sub
pop
adc
xorb
stos
jecxz
in
nop
sahf
push
data16
xchg
inc
test
lret
aad
pop
mov
movsl
add
mov
dec
lods
adc
pop
dec
stos
rcrl
icebp
insb
sub
mov
cmpsb
push
sbb
aaa
jbe
ja
nop
arpl
mov
arpl
add
lcall
leave
pop
push
xchg
movsl
push
mov
lea
iret
cmp
int3
repz
icebp
aad
adc
dec
loopne,pt
pop
test
jmp
loop
repz
xor
and
dec
xchg
mov
add
ret
insl
dec
jnp
jbe
test
jne
and
lcall
loop
push
mov
xor
lret
sub
push
std
inc
pop
cmp
cmp
mov
sbb
push
pop
jnp
nop
inc
aam
sbb
xchg
shl
cmc
sarb
inc
out
mov
adc
mov
lock
push
sub
add
sbb
into
cmp
jmp
mov
aas
or
push
sbb
mov
dec
movsl
fdiv
lret
xor
xor
cli
in
repnz
int
in
jmp
scas
dec
adc
lahf
std
mov
dec
jb
je
outsl
pusha
lock
push
sbb
lea
jle
popa
rcrl
pop
xor
cmc
adc
sbb
in
and
popf
insl
les
xor
pop
lahf
hlt
mov
mov
movsl
pop
aad
idiv
pushf
cmp
subl
adc
enter
mov
add
test
imul
push
jmp
xchg
xchg
sub
mov
loopne
imul
aaa
mov
outsb
ret
repz
push
xor
push
sar
into
imul
movsl
testl
lret
mov
push
es
xor
call
gs
mov
loopne
dec
in
fbstp
cmp
outsl
mov
pop
aaa
test
in
push
sahf
fadd
movsl
ljmp
insb
fldt
adc
dec
jg
dec
mov
cli
int3
sub
adc
fcomi
divl
leave
daa
mov
leave
dec
mov
imul
and
or
gs
mov
pop
dec
fisttps
test
scas
or
int3
lods
dec
sbb
dec
pop
inc
push
jle
addl
push
mov
jg
cld
mov
cmpb
xchg
cs
cmpsb
inc
out
inc
xchg
addr16
push
imul
hlt
imul
pop
fucomp
dec
sbb
decl
jle
aam
jnp
in
mov
dec
push
push
shll
rol
int3
lret
dec
mov
pop
pop
sub
dec
jo
jnp
test
push
sbb
orl
inc
cld
and
imul
mov
push
jge
dec
dec
insl
aas
call
mov
mov
in
inc
dec
jecxz
in
int3
mov
bound
sbbl
jb
mov
adcb
mov
sahf
sub
shlb
xchg
out
aaa
shll
in
jnp
jg
adc
xchg
mov
vandpd
or
sub
or
je
fisubs
inc
lods
call
insb
xlat
repnz
adc
mov
lods
xor
xchg
stos
mov
shr
and
cmpsb
loope
jbe
test
xor
xchg
cmpsl
fdivrl
adc
mov
cmp
stos
fs
subl
jae
jb
inc
and
push
xchg
dec
push
mov
add
mov
or
push
mov
sahf
add
xchg
xchg
pop
scas
insl
in
in
inc
sbb
subl
fistl
sub
test
and
jne
push
loopne
push
in
cmpsb
out
fsin
mov
mov
imul
test
and
movsl
dec
push
inc
pushf
lahf
jg
dec
jo
in
xchg
push
out
cmp
stos
and
fnstenv
inc
in
xor
int
ret
add
rorb
test
lods
fs
pop
or
std
mov
sahf
imul
outsb
cld
mov
insl
mov
sub
arpl
out
mov
sub
popa
adc
xchg
fdivp
xor
sbb
or
mov
mov
por
xchg
or
ret
repnz
shrb
push
mov
imulb
mov
jno
outsb
nop
outsb
adc
addr16
leave
ds
insl
rol
cltd
rcrl
push
dec
in
test
in
insb
call
xchg
adc
mov
mull
jge
push
push
ficompl
xchg
ret
test
or
aaa
pushf
mov
xor
push
pop
in
jmp
jbe
lea
mov
mov
sub
scas
rcll
lds
sbb
mov
fistpll
sub
arpl
pop
loope
and
sub
or
lahf
inc
or
stos
jle
jle
xor
loope
dec
jns
xchg
out
or
mov
movsb
mov
mov
sbb
jne
push
jge
jg
jl
xor
jle
test
sub
sub
aad
lods
xor
jle
xchg
lods
xor
pop
and
push
in
test
inc
xchg
testl
testb
jbe
pop
fs
and
sbb
push
lds
or
sbb
dec
mov
sub
adc
loopne
cmp
sub
fildl
into
gs
pop
pop
or
cs
mov
xchg
jno
pop
pop
mov
push
mulb
bound
fisubl
push
mov
mov
adc
stos
sbb
cmc
outsb
ret
and
pop
xor
adc
push
adc
dec
push
inc
das
fstpt
cltd
sbb
mov
cmp
mov
xchg
pop
lret
sti
push
pop
outsb
icebp
jmp
mov
pop
sbb
ljmp
cmp
fistps
ja
mov
cmp
in
or
push
push
fisttps
pause
xchg
and
movsb
js
sahf
pop
lret
inc
lds
mov
push
gs
push
push
cli
in
ss
mov
xchg
cmp
scas
push
rol
sbb
xor
fiaddl
mov
mov
mov
xchg
xchg
sbb
clc
call
pop
xchg
out
test
nop
push
movsb
add
adcb
adc
push
leave
int
push
push
rcll
mov
aaa
push
and
pusha
pmovmskb
xchg
xor
mov
lahf
mov
clc
pop
sahf
push
mov
stos
add
add
pop
xor
movsl
jbe
sbb
rcrb
xor
cmpsl
xor
and
xor
pop
mov
imul
test
ja
mov
xchg
and
mov
cmp
sub
iret
lret
rolb
mov
rcl
shlb
loope
xor
in
adc
pop
sub
push
leave
or
out
rep
pop
mov
daa
lcall
push
in
in
call
cmc
cmp
pushl
into
push
and
push
push
and
lds
jle
repnz
iret
mov
inc
fdivl
xchg
out
push
hlt
jmp
call
scas
lea
add
sub
testl
frstor
ljmp
loope
xchg
pop
or
push
out
mov
push
cs
xor
mov
mov
mov
bound
movsl
xchg
aas
loop
adc
les
pop
stos
jno
mov
dec
cmp
jp
xlat
xchg
and
adc
lret
add
sbb
or
fwait
add
xchg
mov
stc
jge
neg
repz
rcll
leave
cmp
out
jge
mov
pop
pop
sub
mov
fldt
cs
loopne
iret
xchg
sub
add
dec
inc
ds
jg
or
in
sbb
insl
loop
mov
cld
in
sub
sahf
jbe
push
out
inc
inc
cmp
cmp
adc
filds
jecxz
xchg
jmp
pop
pop
cmp
insl
push
outsl
push
mov
sub
add
push
imul
das
inc
dec
scas
mov
test
sbb
test
pushf
cli
pushf
adc
in
int3
sub
daa
lods
jg
out
cmpsl
aas
cmp
mov
ljmp
out
sbb
leave
pushf
pop
jl
je
jmp
mov
cmpsb
sarb
mov
xchg
push
insl
and
rcr
adc
mov
fs
mov
and
mov
push
jae
push
call
or
test
loopne
add
mov
fyl2x
pop
leave
add
js
cvtps2pi
scas
ret
sub
imulb
xchg
scas
test
lahf
sbb
dec
mov
push
push
outsl
pop
mov
inc
mov
arpl
xchg
fwait
das
lds
jbe
sbb
in
pushf
push
pop
gs
lea
leave
push
xchg
mov
xchg
mov
into
fidivl
sbb
test
shll
mov
ss
test
inc
sarb
pop
in
insl
scas
add
and
xchg
sub
hlt
mov
xor
je
in
push
jl
int
int3
in
pushf
cmc
sbb
push
out
and
mov
or
lahf
mov
sbb
aam
loopne
fidivs
aas
leave
push
jo
jb
push
inc
in
push
jns
xchg
sbb
lods
mov
jnp
mov
add
jle
cwtl
dec
cmp
pop
xchg
imul
and
loop
into
movsb
stos
outsl
jnp
jecxz
sbb
popf
imul
push
ficompl
mov
pop
fbld
inc
inc
xchg
add
dec
icebp
xchg
xlat
adc
loope
mov
testl
scas
and
add
fiadds
adc
je
and
sbb
imul
push
adc
lret
in
insl
shll
in
inc
add
jbe
sbbb
sbb
stc
mov
inc
push
xchg
xor
cmp
int3
jo
out
and
push
ss
jns
lods
outsl
hlt
in
and
andl
cmp
in
insb
les
scas
mov
cli
adc
lret
mov
jae
adc
cmp
cld
dec
test
cmp
push
add
sbb
xorl
push
jo
mov
movsl
pop
out
fsts
lods
cmpps
fs
xchg
and
es
pusha
and
or
cli
mov
daa
sub
adc
mov
leave
push
ss
cmp
in
enter
xchg
lcall
inc
fistpl
jo
sbb
cmpsl
cld
push
in
test
rolb
mov
test
push
or
roll
mov
out
stos
add
mov
cmpsb
ds
lret
lods
vpaddusw
loopne
pop
sbb
cmp
and
xchg
push
cltd
outsb
mov
and
lea
clc
cmpsl
ljmp
pop
sarl
cmp
jns
jns
fisubrs
sub
outsb
ds
fisubrs
inc
mov
pop
movsb
inc
test
mov
ret
add
push
inc
inc
sub
cltd
outsb
lret
jne
addr16
pop
clc
jl
mov
xchg
sbb
clc
jg
insl
cs
sub
leave
dec
lock
mov
js
mov
jae
rorl
dec
mov
jecxz
add
xchg
fmull
sahf
push
mov
lret
jne
or
pusha
jp
and
aad
js
cmp
loope
ds
add
inc
dec
shlb
das
aam
sub
push
popf
fimuls
scas
cmp
add
dec
sub
decb
push
addr16
imul
scas
or
push
aaa
shl
mov
dec
sub
lret
cmp
loope
cld
dec
sbb
lret
mov
sarl
mov
cmc
popa
push
and
cmp
cltd
subb
ret
clc
pop
mov
clc
test
dec
mov
cmp
lea
out
cmc
cmp
mov
imul
std
cmp
insb
pop
fucomp
test
sbb
sub
pop
lahf
pop
dec
dec
call
pop
aaa
aas
adc
xlat
outsb
cwtl
daa
mov
inc
jmp
jmp
popa
je
mov
mov
push
outsl
inc
mov
and
or
ljmp
or
cmp
ds
adcl
jns
mull
lret
cmp
push
rclb
nop
push
pop
aam
es
jl
bound
xlat
test
cmp
shl
jecxz
cmpsb
ret
inc
stos
sub
xchg
inc
xor
jle
movsl
sbb
sbb
ds
scas
ret
push
mov
xor
insl
mov
xchg
in
cmp
mov
push
lods
fimuls
sbb
cmp
jge
sbb
adc
mov
xchg
add
xchg
mov
pop
push
xorps
cld
cmpsb
loopne
add
mov
in
outsb
dec
outsl
rcrl
loop
push
dec
add
mov
jno
out
mov
cmovo
cmp
clc
xchg
lea
push
std
subb
jo
dec
and
push
sub
mov
mov
hlt
movsl
sub
movsl
push
dec
lea
in
scas
mov
mul
out
sbb
cmp
add
or
pop
pop
lods
sahf
jbe
jl
or
mov
dec
enter
jnp
sub
xor
add
push
and
xchg
jmp
ljmp
cmp
dec
jecxz
push
aad
jb
cmp
jns
lea
pop
fidivs
xor
or
push
inc
jl
xchg
mov
hlt
jbe
in
jae
xchg
xchg
out
mov
je
pop
movsl
icebp
cmp
lods
and
imul
xor
mov
loopne
add
jbe
rorl
jecxz
aas
dec
lcall
and
sub
ljmp
xchg
xchg
loopne
mov
lock
sub
inc
xchg
mov
dec
sbb
or
lea
in
sub
imul
or
add
ret
cs
xchg
sub
pop
data16
mov
sub
adc
js
inc
rclb
mov
push
lahf
sbb
jle
in
lods
sbb
imul
sbbb
sahf
outsl
movb
mov
xor
fstl
nop
push
jno
lds
negb
lret
movl
popa
imul
aaa
xchg
jne
push
add
js
inc
cli
test
mov
ja
xchg
adc
inc
xor
repnz
lahf
or
push
enter
xchg
mov
notl
xchg
sub
xchg
adc
push
popa
orl
dec
dec
das
jnp
jns
pop
jecxz
into
inc
add
mov
sub
mov
add
arpl
lock
push
ficomps
cmpsb
into
in
jecxz
xchg
out
bound
jmp
shl
into
dec
in
shr
jns
negb
adc
sub
mov
stos
movsl
aam
pushf
inc
int3
lret
js
mov
popf
std
push
out
jo
push
xchg
sahf
inc
jbe
inc
ss
jmp
dec
fmulp
jg
in
test
nop
xchg
mov
inc
mov
imul
jmp
pop
xor
or
inc
daa
jp
test
std
or
mov
xor
inc
sahf
cmpsb
or
loope
push
mov
cmpb
stos
mov
xlat
pop
lods
sub
fdivp
test
repz
mov
mov
push
dec
xor
inc
mov
jbe
out
sbb
cltd
push
dec
jne
cwtl
push
xchg
xlat
sbb
loopne
pushf
or
movsb
je
sub
notb
and
insb
fs
or
pop
outsl
pop
xchg
sti
jnp
inc
mov
inc
fdivl
adc
dec
dec
movsb
repnz
cmpsb
mov
loop
dec
loope
sub
mov
mov
sbb
pop
mov
fbstp
add
push
imul
std
lods
jmp
enter
cmp
pop
sbb
sbb
adc
stos
dec
test
mov
mov
mov
mov
stc
ret
insb
popa
mov
orb
outsb
pusha
jo
mov
mov
in
aas
dec
ljmp
and
sbb
out
push
fwait
ds
out
mov
cwtl
inc
inc
lods
jne
adc
and
addr16
dec
mov
data16
cwtl
leave
jae
bound
ljmp
popa
or
jmp
sub
lahf
xor
std
jno
iret
and
testl
repnz
pop
cld
sub
push
add
pop
popa
pop
or
out
sub
mov
arpl
mov
cmp
cmp
cmpsb
cld
adc
jp
lock
sbbb
sahf
out
push
aaa
push
push
cwtl
js
mov
out
ret
pop
fwait
or
je
dec
lds
dec
jmp
or
ret
fldcw
lahf
and
adc
cmc
bound
out
fsubrl
jmp
inc
jbe
aam
fstpt
and
data16
inc
stos
and
and
and
add
pushf
push
out
cmp
sti
ljmp
pop
adc
mov
mov
pop
xor
adc
inc
cwtl
and
jge
mov
pop
adc
pop
or
outsl
inc
fsubrs
movsl
xor
out
jns
mov
sahf
mov
mov
pop
jg
push
cmpsl
inc
hlt
cld
or
iret
mov
imul
int
imul
shll
and
std
push
inc
rcr
icebp
testl
out
push
cmp
pop
mull
dec
mov
jne
outsb
mov
movsl
mov
cmp
lret
sub
jae
cltd
fsubs
pop
in
mov
ljmp
mov
and
xchg
mov
dec
andb
cmpsl
rcll
xchg
mov
or
sbb
mov
imulb
inc
cmp
xlat
lods
test
add
sbb
sbbb
lods
jg
xchg
in
ss
arpl
sbb
lea
cmp
jg
dec
pop
and
mov
push
insb
mov
push
mov
fsub
xchg
stos
lds
testl
lahf
ljmp
mov
stos
adc
jb
inc
ficomps
fdivs
pop
push
mov
jle
hlt
push
xor
xor
adc
or
vpunpckhwd
dec
push
jbe
out
add
mov
pushf
and
mov
xor
xor
dec
out
lcall
jbe
repz
mov
mov
mov
sbb
adc
out
iret
loop
inc
inc
fdivrl
mov
mov
outsl
and
pop
out
cltd
shl
repz
icebp
insb
inc
lahf
adc
dec
leave
add
outsl
shrl
sbb
sub
sbb
jp
cmc
xchg
scas
es
pop
shr
ficoms
sub
es
aad
mov
imul
jg
insb
mov
adc
dec
push
das
sbb
jns
jg
mov
lret
mov
xor
jae
xor
ret
mov
dec
sbb
dec
mov
pop
stos
int
call
in
inc
sbb
xor
adc
mov
mov
mov
int
push
or
mov
insl
loopne
sahf
mov
andb
test
mov
cmp
loope
xchg
push
pop
enter
pop
cmp
sarb
daa
push
movsl
adc
subb
push
dec
jae
insb
jecxz
adc
inc
sbb
dec
jbe
rclb
sub
pop
frstor
add
push
rcl
sti
stos
dec
jp
lret
lods
mov
cmp
fisubl
daa
pop
cmpsl
stos
fiadds
mov
in
clc
mov
bound
popf
mov
shl
pop
add
in
mov
out
daa
out
dec
push
in
jp
insl
scas
or
sub
xlat
fwait
inc
mov
xchg
data16
mov
add
push
mov
lret
mov
mov
pop
jns
fisttpl
adc
xchg
popf
and
xlat
push
fs
and
mov
ret
in
std
movsb
dec
loop
push
test
sar
lds
jl
into
xchg
mov
xor
push
or
and
inc
pop
jae
dec
mov
addr16
not
aam
imul
xchg
inc
std
jge
das
arpl
fbld
in
adc
pop
jge
and
test
dec
inc
jmp
adc
popf
ljmp
mov
mov
fistpl
clc
fnstsw
inc
fdivr
adc
dec
pop
sbb
push
in
test
pop
pop
jecxz
jae
sti
add
cld
add
repnz
pop
les
sub
mov
dec
push
subb
mov
sub
inc
push
outsb
in
arpl
notl
xchg
imul
in
imul
packsswb
in
pop
push
mov
pop
shlb
pop
dec
pusha
aaa
lods
andb
dec
pop
or
and
mov
or
xchg
cltd
pop
mov
loop
push
nop
out
into
cmp
ja
sbb
dec
inc
aaa
mov
xchg
jnp
dec
xchg
aad
inc
dec
lret
idivb
cltd
add
daa
jmp
push
cs
inc
fldl
mov
dec
fnstsw
add
add
sbb
addl
div
lret
lahf
sbb
mov
lods
stc
jae
jb
push
pushf
popl
sarl
jno
or
mov
or
inc
push
push
or
dec
cmp
cld
dec
mov
insb
sub
sbb
pop
dec
push
mov
pop
in
pop
loopne
popa
and
xchg
cmpsb
push
in
pushf
sub
xor
pop
cmp
mov
sarl
adc
cmp
push
movsl
push
call
dec
imul
stos
lods
loopne
ret
cmp
pushf
cli
lods
fidivrs
lea
mov
sbb
pop
addr16
loop
sub
push
lcall
inc
aad
add
cltd
es
into
pop
inc
and
fdivr
test
dec
aaa
loope
sub
test
shll
pop
sbb
int3
mov
call
sbb
push
enter
je
out
repz
and
mov
xor
pop
test
push
inc
pop
ljmp
fistl
cld
cwtl
stc
out
stos
popf
daa
out
andl
push
data16
cmpsb
push
sarb
push
insl
leave
int
adc
mov
push
xchg
sub
jl
or
jb
in
sub
fidivs
or
xchg
pop
sub
mov
push
arpl
pop
sahf
sub
cmpsb
or
popf
ret
xor
into
rclb
pop
or
in
sbb
dec
xlat
xor
jmp
mov
in
add
pop
je
das
push
xchg
jno
cld
sub
into
gs
dec
js
icebp
push
jle
imul
lret
into
jbe
and
jmp
inc
lcall
shlb
or
ja
push
push
cmpsl
les
or
sbb
repz
dec
jge
insl
pop
bound
stos
lcall
jb
push
mov
fwait
test
cwtl
sbb
dec
pop
jbe
jae
loop
sub
cmpl
fdivrs
or
cwtl
mov
vcvtsd2ss
std
xchg
aaa
xchg
loope
lds
xchg
out
imul
rclb
sbb
iret
adc
bswap
cmp
jbe
lea
movsb
adc
pop
fdivr
pop
lock
xchg
push
pop
dec
and
dec
and
mov
push
popf
xchg
sbbb
fistpl
jecxz
push
fidivs
mov
mov
std
mov
cld
adc
push
movsl
cmp
dec
ds
aaa
mov
push
push
test
and
ds
push
inc
mov
cmpsb
das
out
mov
pop
xchg
in
adcl
or
cmp
inc
test
inc
mov
je
lods
xor
data16
xor
daa
push
in
mov
or
into
lahf
jbe
push
daa
push
dec
dec
mov
cmpsb
sti
mov
push
lds
incb
cmp
fisttps
inc
dec
mov
or
xor
clc
xchg
mov
ja
cmc
pop
lret
lds
jg
push
ss
ret
mov
jno
addb
subl
aad
or
add
cmpsl
out
adc
cmp
mov
ror
stc
nop
icebp
xchg
enter
mov
sti
aaa
lret
jmp
add
xlat
mov
outsb
out
imul
iret
lcall
mov
mov
xchg
jg
push
xchg
xchg
sub
ja
inc
dec
mov
add
cmp
and
pop
jnp
add
adc
subl
insb
inc
mov
fdivrl
fwait
ljmp
and
dec
push
std
test
dec
enter
xor
mov
js
or
and
test
nopl
mov
jge
stc
cmp
sub
imul
add
push
adc
inc
sbb
sub
push
leave
loope
jb
xor
cmp
pop
cs
test
cmp
cmp
and
sti
xchg
imul
sbb
xlat
cmp
mov
xchg
and
pop
adc
pop
jns
adcb
sbb
bound
mov
in
andb
or
pop
in
loope
jmp
xor
ss
idiv
mov
push
and
jbe
dec
add
xor
adc
sbb
jmp
xchg
pushf
jno
les
fists
repz
scas
fsub
in
rcl
mov
jge
cmp
and
xchg
mov
imul
and
or
in
pop
bound
mov
mov
out
xchg
or
out
xlat
or
mov
inc
pop
lahf
push
enter
or
cmp
cltd
data16
sub
xchg
lret
in
sub
xlat
hlt
xor
push
mov
lds
xor
xor
jnp
xchg
scas
inc
push
or
xchg
shl
push
rorl
push
add
jecxz
mov
out
rcrb
je
outsb
das
loop
cmp
mov
cmp
pop
push
rorb
dec
fnstcw
negl
mov
add
xchg
mov
dec
jmp
xor
sbb
faddl
add
loop
dec
pusha
xchg
out
mov
or
imul
enter
and
fisubl
subb
mov
mov
mov
std
push
mov
or
sbb
push
jae
jo
mov
pop
imul
pop
bound
mov
andb
fstpt
mov
push
je
andl
or
mov
push
mov
or
fldenv
call
mov
test
jmp
push
jnp
dec
sbb
std
adc
psadbw
push
jnp
sub
xor
and
and
ficoms
add
arpl
in
fs
loope
cltd
test
repz
popf
or
jbe
mov
adc
cmpsl
out
adc
imul
sahf
jmp
iret
dec
or
add
sahf
adc
cltd
hlt
dec
cmp
negb
jne
sub
push
loope
hlt
mov
insb
fidivl
mov
mov
sbb
xchg
dec
and
in
test
lret
xchg
repz
rorl
repnz
dec
mov
adcb
testl
test
lcall
jo
aad
enter
xor
pop
push
cli
adc
ret
adc
pop
dec
xor
push
rcll
outsl
ljmp
outsb
sub
fsubrs
inc
loop
or
shrl
mov
inc
aaa
mov
jge
pop
stos
mov
in
test
sub
push
jmp
fcmovbe
jmp
sub
pop
lods
outsl
sarb
jecxz
ret
in
mov
sbb
daa
mov
inc
lods
add
pop
add
mov
ret
adc
sahf
sub
sub
les
enter
hlt
sub
out
repz
xor
shr
lahf
pop
push
shll
mov
roll
movb
stos
mov
and
dec
inc
aad
jg
mov
test
sub
pushf
jg
xchg
xchg
outsb
test
loop
cmc
mov
sub
push
add
lcall
jae
sar
loope
add
iret
jo
insl
in
and
mov
mov
or
scas
scas
sarb
jmp
mov
mov
sbbl
clc
adc
pop
sbb
sub
cmp
into
data16
out
gs
mov
loopne
mov
cmp
imul
mov
in
dec
lods
sbb
mov
dec
lods
or
xor
add
xchg
je
imul
add
add
mov
sub
xchg
sub
stos
outsl
inc
mov
sub
rol
pop
stc
loop
sbb
xor
call
lods
lds
adc
sti
xor
xor
jmp
mov
in
fcompl
sti
ret
iret
pop
mov
js
push
call
mov
aaa
xor
adc
xor
rsqrtps
repz
adc
stos
mov
jbe
cmp
das
xor
pop
popf
jp
adc
ficoml
pop
sbb
movsb
and
push
scas
xchg
imul
lea
sbb
pop
add
scas
push
aam
push
adc
mov
outsb
and
or
popf
adc
jb
sbb
jl
inc
mov
insb
xchg
mov
pushf
xchg
inc
xchg
lods
adc
jl
shll
cmpsl
out
pop
pop
inc
xchg
fs
icebp
jge
dec
sbb
mov
mov
call
jb
inc
jg
ja
mov
hlt
jne
cwtl
jnp
cmp
jae
mov
pop
adc
and
adc
sub
xchg
dec
jl
imulb
sbb
and
ret
loope
imul
xchg
and
sahf
push
and
mulb
jmp
push
cs
movsl
cmp
cmp
jb
or
sub
mov
shlb
imul
mov
sbb
mov
push
in
sub
push
add
negl
push
out
inc
lret
mov
push
pop
mov
mov
mov
sbb
cmp
dec
mov
push
fldt
test
imul
pop
and
cmp
inc
mov
mov
cltd
xor
ljmp
loop
lahf
xchg
lcall
sbb
aad
out
lea
pop
adc
inc
leave
cmp
imul
mov
jle
inc
mov
pop
data16
add
push
adc
push
mov
or
pop
mov
push
iret
inc
loopne
xchg
add
lret
or
bound
pop
mov
xchg
decb
pop
in
mov
je
out
adc
or
adc
xchg
out
mov
xchg
stos
mov
enter
xor
les
rcll
test
cmpsl
stos
jbe
jnp
sub
fiaddl
inc
fs
in
call
mov
sti
or
sbbl
mov
adc
xchg
mov
mov
dec
ljmp
call
cmp
test
jl
jbe
mov
les
xor
dec
ret
aad
dec
push
es
jns
mov
xor
outsb
jnp
mov
imul
pop
or
and
mov
adc
inc
scas
aas
add
xor
mov
std
daa
push
ss
sub
ja
and
cmp
arpl
adc
dec
inc
aad
pop
mov
adc
leave
test
lods
inc
int3
popf
aad
rolb
push
fldenv
lret
andl
sub
xchg
out
mov
push
aad
push
cmpsb
aas
dec
xor
aad
mov
inc
cmc
xlat
loop
jp
or
stos
pusha
jle
mov
ss
repnz
popf
and
push
cmc
lea
addr16
cli
adc
mov
sbb
mov
xor
in
inc
push
push
insb
cmp
lahf
lea
xchg
xchg
inc
or
jmp
out
flds
in
xor
jg
lret
mov
or
pop
ficoml
push
aaa
imul
vmovhlps
or
push
cs
movsl
icebp
pop
aam
add
push
popf
cmp
and
je
gs
xchg
jo
and
xchg
xor
adc
inc
dec
fwait
push
lcall
xlat
loop
pop
adc
push
inc
insl
mov
inc
adc
fwait
ljmp
test
lahf
call
loop
jo
pop
ss
int
sbb
cmp
push
scas
mov
aaa
std
inc
lcall
loopne
or
sbb
repnz
mov
inc
loope
add
imul
repnz
push
dec
sub
inc
pop
outsb
sub
scas
inc
push
mov
jp
jae
aam
arpl
inc
mov
dec
andl
sub
inc
mov
incl
jae
outsb
fists
xchg
insb
std
mov
xchg
add
loopne
xchg
es
pushf
addr16
sbb
dec
sbb
lret
ds
dec
rolb
fdivrs
aam
fst
push
cmp
ret
outsl
sarl
pop
adc
cmpsb
rcrl
mov
out
add
xor
lods
mov
shlb
mov
jg
out
scas
loope
push
ficoml
sub
hlt
dec
push
inc
out
dec
pop
pop
ret
hlt
arpl
mov
pushf
scas
lret
in
int
in
insl
testb
pop
aaa
pop
mov
enter
jge
loop
mov
push
mov
in
mov
adc
dec
jae
jmp
sub
mov
push
sbb
test
push
out
ljmp
jo
sahf
jno
jno
into
pop
test
pusha
loop
mov
add
mov
add
jp
push
jae
lcall
nop
add
or
rorb
mov
inc
sbb
sub
mov
mov
mov
fdivl
js
rclb
or
push
add
push
push
push
adc
jp
or
scas
mov
popf
or
jg
int
popa
sbb
dec
and
in
mov
scas
xchg
sub
adc
adc
xor
pop
inc
inc
fmulp
call
and
std
imul
mov
push
mov
mov
lock
fwait
icebp
push
adc
cli
xor
mov
push
cmpsb
jl
adc
pop
aam
imul
cmpsb
jl
fadds
fcomip
in
xor
divb
push
fcomp
xchg
pop
stc
sbb
pop
cmp
mov
js
inc
mov
in
js
and
pop
lea
inc
mov
daa
jnp
adc
arpl
cs
mov
mov
push
xchg
xchg
push
add
dec
int3
movsb
sbb
mov
and
jecxz
sti
cmp
jmp
adc
sbb
mov
adc
inc
lods
ja
addr16
cltd
shll
int
daa
jle
cmpsl
ds
dec
mov
xchg
fadd
pop
ss
jecxz
loope
adc
mov
pushf
fisubrs
mov
jb
cwtl
mov
mov
jp
mov
mov
pusha
adc
mov
cmpsb
imul
mov
mov
mov
loope
push
or
ret
mov
out
mov
pusha
repz
rclb
or
xor
xchg
mov
push
imul
jb
jno
and
xchg
jle
xchg
xchg
stos
popf
push
push
in
fs
jnp
test
xchg
repz
mov
insb
loopne
or
sahf
arpl
sti
movsl
loop
out
scas
ret
shlb
dec
mov
cmpl
popa
dec
mov
xchg
int
inc
mov
push
jg
push
call
shlb
jmp
jle
aad
aas
pop
adc
xchg
sub
mov
scas
arpl
aad
xor
or
shlb
fstps
or
popa
sbb
sti
push
dec
dec
or
inc
mov
into
fcoms
push
push
imul
out
xlat
push
mov
sub
jbe
lds
pop
jb
and
adc
out
es
mov
inc
push
cmp
iret
xchg
out
xor
aas
iret
mov
loop
in
adc
adc
test
push
dec
ss
jo
ror
inc
mov
mov
sub
rorl
adc
test
repnz
and
lock
jb
clc
xor
repnz
ret
pop
and
fcompl
xchg
outsb
add
pop
dec
mov
clc
cmc
in
fxch
sub
pop
xchg
cmp
lcall
dec
adc
xchg
cs
xchg
cmpsl
aam
fdivrs
insl
rcll
mov
in
movsl
fldenv
pop
pop
cmpl
sbb
jmp
xchg
mov
dec
addr16
aas
jnp
mov
cld
lds
push
cld
pop
xor
mov
jns
mov
outsl
outsl
sti
gs
call
test
aam
mov
popf
push
imul
jae
imul
int
fdivl
std
std
jg
fs
push
fstps
cmpsb
frstor
mov
enter
or
or
mov
ds
xor
jns
mov
hlt
rclb
lret
hlt
push
cmpsb
fistpll
ret
add
fnstsw
cs
bound
push
xor
ss
cwtl
into
arpl
loopne
in
push
rorl
pop
dec
and
in
pop
mulps
sub
push
es
sub
inc
inc
sbb
daa
dec
movsb
jb
pop
outsl
call
cs
inc
jne
inc
add
jmp
or
xchg
ljmp
or
ja
lea
pop
stc
test
push
aaa
int
cld
jno
sub
rcrl
sarl
dec
ljmp
adc
clc
test
pop
cmp
movsb
cmp
jne
lcall
cmpsb
sahf
rcr
test
mov
test
adc
andb
addr16
popf
mov
test
xchg
sub
shrl
mov
xlat
test
lds
sbb
lret
movsl
mov
xchg
lods
daa
pop
lret
aaa
into
cli
loope
test
sbb
cmp
sbb
shll
and
pop
in
and
or
cs
out
jnp
add
loop
jecxz
add
sub
loope,pt
into
cwtl
push
mov
or
xor
jge
push
faddl
and
pop
mov
lcall
jne
mov
aad
inc
outsl
xor
nop
orl
xor
iret
arpl
leave
int
shlb
mov
leave
cmp
adc
imul
mov
mov
jns
repz
sti
jecxz
aad
jmp
insl
push
pop
xchg
mov
xor
ret
clc
jae
movsw
fisttpll
mov
ds
push
cmp
test
pop
mov
lcall
cmpsl
xor
xchg
aam
stos
push
jp
stos
pop
jbe
jecxz
into
push
jle
mov
mov
mov
and
int3
pop
mov
into
addr16
add
jb
pushf
mov
mov
dec
jnp
xor
addl
cmp
insb
jle
addl
push
loopne
add
push
push
out
and
std
or
addr16
shl
decb
ljmp
shrl
repz
jmp
or
lea
gs
sbb
dec
push
inc
dec
das
les
sbb
push
popf
daa
mov
jo
cmp
int3
jns
jge
adc
iret
sbb
inc
pusha
lock
inc
fxch
pop
lret
gs
popa
into
into
lcall
test
push
cmpsl
je
dec
pop
sbb
adc
jmp
xor
cmp
call
scas
xchg
and
push
shll
mov
mov
xor
mov
ret
imul
stc
fisubl
dec
pop
adc
and
outsb
das
xor
sub
lahf
div
xor
add
xchg
sbbl
scas
mov
xchg
push
sbb
mov
push
stc
adc
data16
lret
push
cmp
dec
fnstsw
sub
ret
sbb
push
mov
ret
add
mov
dec
pop
jb
es
mov
xchg
out
cld
add
mov
jmp
lea
sbb
adc
mov
sub
cmpsb
das
adc
adc
pop
xor
rcrl
push
pop
test
jbe
mov
or
dec
repnz
neg
adc
sub
xor
fisttps
sub
sub
mov
pop
bound
mov
ss
lods
inc
xchg
gs
lods
mov
dec
jp
jp
push
or
and
and
xchg
cmp
ja
imul
mov
sbb
lcall
leave
xchg
movsbl
cmpsb
jb
pusha
sub
xchg
sub
cmc
inc
shl
popa
repnz
mov
adcb
inc
enter
loop
int3
arpl
add
nop
daa
push
pop
daa
adc
mov
jg
pop
mov
daa
adc
scas
call
xor
fistpl
lsl
test
xor
and
push
imul
popa
nop
inc
fwait
dec
ror
ret
fs
call
aas
jg
mov
mov
lds
out
and
out
xchg
sahf
imulb
xor
sub
mov
cmpsl
cmp
ficomps
pop
icebp
rol
mov
icebp
dec
gs
loop
in
mov
lock
pop
rclb
dec
imul
ret
enter
pop
js
stos
push
stos
clc
or
pop
mov
cmp
in
sbb
sbb
add
xchg
inc
mov
xchg
pop
fiaddl
test
cmp
add
xor
adc
es
cmpsl
cmpsl
lcall
mov
pop
pop
clc
ja
mov
sub
mov
mov
inc
sbbl
enter
xor
sub
bound
or
enter
xor
xor
les
test
pop
icebp
std
repz
mov
push
shlb
xchg
pop
lock
mov
cli
fiadds
lret
cwtl
push
in
and
aas
rcrl
pop
add
sbb
cmpsl
ljmp
adc
es
cmpb
sub
cmpsb
lock
and
das
adcb
mul
or
pusha
push
mov
leave
cmp
je
loop
xor
adc
mov
fdivs
pop
sbb
jno
mov
xchg
ficompl
jle
in
jle
cmpsb
xchg
add
fwait
in
or
in
mov
sti
jmp
xchg
sbb
xor
ss
xlat
insl
xor
and
and
push
dec
and
fs
shlb
icebp
and
data16
push
and
xchg
dec
xchg
in
jmp
cmc
mov
mov
stc
iret
lds
popa
mov
dec
lock
lock
or
rcr
addr16
mov
pop
inc
push
flds
icebp
test
filds
jno
ljmp
push
mov
or
in
xchg
cmp
loop
jns
dec
jne
cmp
lea
jl
add
shrl
scas
push
les
mov
addr16
lea
and
push
idivl
nop
les
adc
pusha
cltd
push
push
jno
loope
mov
sbb
pop
fsubr
cmp
cmp
mov
pushf
fdivr
shrb
mov
sbb
ja
and
push
aad
les
aaa
notb
xor
xchg
cld
mov
sarl
mov
das
loopne
test
dec
out
ljmp
add
jbe
mov
pop
xchg
inc
aad
clc
mov
mov
frstor
sar
jl
push
cli
adc
xchg
mov
mov
ret
call
lds
jno
pop
rcr
pop
test
pop
lock
mov
push
xchg
pop
js
int
xchg
ja
imul
jne
lods
adcb
xor
cwtl
sub
lret
pop
js
dec
add
adc
mov
cld
cs
add
xchg
pop
test
fwait
or
shlb
test
pop
notb
dec
lods
es
out
enter
rcr
popa
add
imul
repnz
stos
fdivs
push
jno
xor
pop
movsl
mov
mov
inc
mov
jae
xor
mov
jl
dec
out
xchg
dec
mov
dec
mov
or
cmp
or
repnz
mov
or
dec
jae
ja
jo
cmc
cs
fidivl
rorb
mov
or
jp
mov
jg
mov
mov
lret
repnz
jne
lods
xlat
jg
dec
cmp
dec
push
idivl
xchg
addb
or
xor
cltd
cld
push
mov
stc
fisubrl
jp
cmp
pop
xchg
jle
adc
cld
push
mov
iret
in
lea
inc
testl
pusha
jecxz
cmp
sbb
popf
pop
lcall
mov
data16
pusha
add
push
jmp
insl
sbb
out
pushf
cli
inc
xchg
mov
aaa
repnz
jecxz
jmp
pop
inc
scas
in
pusha
xor
addr16
pop
push
sbb
xchg
scas
mov
sbb
or
jno
repnz
sub
jns
xchg
sub
ficomps
push
pop
scas
addl
ja
inc
fucomp
inc
outsb
fidivl
jns
push
stos
add
and
mov
and
pop
sbb
mov
ficoml
fisttpll
repz
mov
sbb
mov
shrb
xor
lcall
jmp
sub
pop
ret
fstps
iret
xor
jae
repnz
inc
hlt
aas
dec
jns
jg
sbb
mov
push
clc
cmp
pushf
lods
jmp
jae
pop
imul
cwtl
pushf
pop
in
push
in
pop
ds
and
pinsrw
adcb
lods
dec
mov
push
push
sub
mov
fimuls
adc
addr16
xchg
pop
sub
mov
sub
in
mov
cmp
push
lods
mov
ret
outsb
test
mov
loope
lret
push
in
xchg
mov
ret
sbb
imul
dec
jg
mov
jb
rcr
ss
xor
adc
mov
popa
mov
xlat
fidivl
sbb
mov
testl
in
lcall
cld
stos
push
in
jae
add
lret
ds
mov
dec
sbb
fs
cmp
dec
pop
sub
or
xor
in
cmpsb
jnp
fs
sbbb
stos
pop
push
push
push
ret
xchg
popa
jecxz
xchg
cmp
jnp
inc
sbbb
mov
push
lret
ja
mov
ficomps
aaa
ret
repz
scas
mov
mov
ja
int3
rcrb
dec
loop
push
push
add
jo
mov
jl
fidivrs
mov
jp
and
test
or
repz
lock
les
notb
test
xchg
sbb
scas
pop
outsl
testl
sbb
pop
lahf
je
js
pop
dec
mov
nop
sub
dec
mov
mov
push
sub
fdivl
aas
push
mov
fsts
das
inc
mov
cmc
or
dec
loope
mov
icebp
dec
pop
mov
iret
mov
lret
int3
dec
adc
cmc
in
push
enter
jl
nop
clc
and
or
cs
sahf
push
mov
xor
cltd
cld
cmp
sub
dec
aas
fwait
pop
fwait
xor
test
mov
inc
mov
loopne
xchg
pop
add
aaa
xor
pop
xor
out
mov
sbbl
fisubs
xchg
ficoms
adc
les
aam
dec
mov
add
cmpb
pop
div
xchg
add
jle
sbb
cmp
cmp
mov
enter
cli
cmp
ss
inc
fdivl
pop
fidivs
add
lea
mov
mov
xchg
sbb
pop
call
add
sahf
sub
and
push
cld
adc
sub
clc
cmpsl
ja
xor
jae
cmp
repz
iret
fisubrs
push
js
inc
mov
jo
lret
ds
sbb
aaa
inc
cmp
lods
lods
cmp
and
das
mov
push
xor
bound
xor
push
repnz
cmpsb
add
mov
xlat
mov
insl
pop
jnp
int
mov
xchg
outsb
mov
icebp
or
cmp
push
jecxz
xor
daa
mov
into
adc
pop
add
sbb
adc
sarb
add
mov
or
inc
es
outsl
or
scas
mov
or
test
addr16
in
xor
pop
or
xchg
push
sbb
adc
pop
dec
into
pop
insl
roll
mov
push
push
or
inc
and
push
in
xchg
adc
ds
inc
or
cs
sub
je
cmp
and
jp
outsb
sarb
xchg
mov
xchg
mov
jno
stos
nop
push
je
test
or
push
rep
test
nop
ljmp
imul
push
pop
mov
in
rcll
mov
icebp
loop
scas
xorl
jo
scas
add
loopne
jp
aaa
mov
clc
int
mov
xchg
fsts
push
jnp
repnz
jp
loope
dec
fldt
sub
mov
arpl
push
jge
fisubrs
stc
xchg
jge
mov
fs
dec
stos
add
out
push
and
push
xor
pusha
orb
adc
test
push
xor
stos
repz
fimull
mov
outsb
and
and
test
cwtl
out
rclb
mov
test
in
lcall
jo
iret
mov
mov
sub
xchg
cmp
cmpsb
or
loopne
sbb
push
fbstp
scas
hlt
xor
scas
cld
xchg
loope
mov
jecxz
dec
loop
ret
or
xchg
lock
dec
jae
das
dec
jl
or
pop
push
push
inc
push
ljmp
inc
add
lcall
mov
in
xchg
xchg
sbb
add
xor
outsl
push
mov
push
fisubl
push
fnsave
scas
ss
sub
cli
daa
pop
mov
xchg
icebp
stos
addb
and
sbb
fadds
mov
notl
xor
mov
sub
jno
xor
int3
insb
push
stos
or
push
hlt
sub
xchg
rcrb
repz
loope
mov
xchg
out
inc
inc
js
test
jl
fcmovnu
jbe
mov
sbbb
pop
repnz
mov
out
and
mov
mov
push
aad
mov
xchg
jle
movsl
lahf
push
loop
add
add
fcomi
and
insl
nop
loop
enter
pop
jb
mov
mov
bound
insl
dec
dec
cmpsl
jo
lods
aaa
dec
loopne
outsb
push
test
cmp
xor
add
call
rol
outsl
inc
lret
xchg
adc
and
jns
adc
or
fnstenv
ret
stos
int
push
popa
jge
rorb
push
cmc
ja
adc
cwtl
jl
lret
mov
inc
lret
scas
inc
std
fisubrs
out
int3
sub
adc
sbb
fcomip
jns
sub
es
es
pop
push
inc
xor
loope
stos
mov
add
xor
jmp
jmp
dec
mov
stos
mov
pop
jp
mov
xchg
add
sbb
sub
add
movsb
clc
adc
dec
sti
fwait
call
or
mov
push
test
lods
int3
sbb
inc
push
stos
or
mov
fs
in
and
mov
adcb
push
fucomi
mov
pop
jns
mov
xor
fcoms
mov
pop
les
and
jne
hlt
mov
and
push
and
add
and
adc
push
hlt
jnp
adc
jg
xchg
mov
inc
inc
inc
das
push
popa
addr16
enter
imul
lcall
xchg
stc
dec
add
lods
xchg
sbb
addr16
mov
xchg
sub
pushf
dec
sub
movsb
es
xor
test
mov
mov
adc
jle
cmc
jge
mov
dec
cli
ljmp
ss
pop
cltd
mov
add
adc
xchg
xchg
nop
fwait
lcall
nopl
fldt
push
mov
fmulp
adcl
rcpps
sub
stos
filds
movsb
cmpsl
jecxz
fistps
int3
dec
addr16
push
inc
pop
xchg
sti
mov
lods
inc
mov
pop
lret
adc
sbb
dec
xor
stos
int
notrack
mov
ret
xchg
push
push
mov
js
sbb
gs
xchg
xor
lock
icebp
jge
adc
addr16
lods
daa
mov
and
andb
pop
arpl
aam
inc
push
push
xchg
rcl
cmp
xor
les
jo
mull
xchg
mov
mov
or
shrl
mov
pop
xor
daa
xor
mov
fwait
dec
scas
fdivrs
lock
addl
push
cmp
lock
xlat
fcomp
jae
pushf
and
sbb
jle
inc
rclb
lds
je
fwait
xor
sub
js
inc
lret
jns
push
fdivrl
mov
mov
pop
cli
dec
repz
cld
fstpl
in
pop
jae
and
push
and
jge
jo
roll
sbbb
push
outsl
fcompl
out
pop
enter
frstor
mov
mov
les
notb
decb
sarl
add
stc
jg
push
pop
fldenv
xchg
xchg
aas
cltd
rcrb
jl
call
cmc
shll
sub
mov
or
cs
les
ficomps
dec
jno
inc
lods
daa
jg
sbbb
xchg
fstpt
add
testb
wbinvd
mov
jnp
xor
out
jo
dec
movsl
imul
or
int
cld
imul
out
add
push
insl
movsl
fistpll
das
outsb
adc
out
out
push
mov
addr16
xlat
pop
mov
xchg
xchg
sub
outsb
xchg
addr16
jae
popa
imul
sub
xor
pop
lahf
pop
fwait
icebp
mov
dec
cmp
and
popf
adc
sbb
xor
cmp
dec
xchg
sub
lea
pop
sbb
fcomps
cmp
xor
jnp
xchg
mov
adc
push
xor
popf
push
adc
mov
or
mov
fistpll
mov
add
fldl
sub
jl
and
mov
aad
stos
rorb
repz
sbb
adc
sbb
sbb
xchg
andl
sbb
clc
dec
jbe
movsl
sbb
adc
outsb
inc
inc
in
sti
mov
cs
in
mov
fldcw
or
fdivl
aaa
data16
repz
jp
sub
mov
sub
stos
jo
xor
lcall
movsb
cld
push
out
xchg
das
xchg
xor
jno
cmp
mov
sub
dec
xchg
jp
repnz
sahf
mov
movsl
jno
call
cmp
dec
push
stos
jmp
ret
sbb
or
or
jnp
negl
ret
lahf
sub
mov
daa
out
insb
jg
inc
sub
js
jle
add
mov
mov
sbb
mov
xchg
sub
fldl2t
dec
std
sub
shrl
js
cmp
dec
pop
out
outsb
push
movsb
addr16
jno
xchg
inc
aas
mov
ficomps
push
fnsave
mov
sbb
into
fwait
xor
push
lods
inc
mov
lods
call
loopne
stos
cmc
mov
leave
push
xor
fld
rclb
fcmove
sbb
mov
pop
dec
xchg
jne
mov
loopne
sbb
inc
test
inc
stc
aam
scas
mov
loopne
dec
push
das
adcl
mov
fldl2t
cmp
pop
sub
testb
jge
mov
xchg
lcall
jnp
mov
in
dec
push
xlat
jne
loop
cli
aad
mov
fidivrs
push
test
mov
inc
cmpsl
lds
xchg
insl
xchg
fs
mov
fisubs
nop
lock
cmp
clc
xor
iret
stc
or
ret
in
lret
jge
add
in
and
repz
add
mov
dec
adc
roll
fisttpll
outsl
in
mov
jmp
and
pop
push
sub
pop
add
pop
loopne
adc
ret
hlt
dec
or
leave
xchg
sub
jb
inc
fs
lock
mov
scas
out
mov
fnsave
fdivr
sub
dec
pop
cmc
jle
mov
sbb
rclb
in
xchg
add
and
mov
jo
xchg
adc
dec
pop
mov
sbbb
dec
jg
andl
aad
movsl
sub
jb
imul
sbb
lcall
lcall
push
sub
test
es
out
mov
pop
inc
sub
js
jbe
enter
inc
das
test
das
sub
push
sbbl
out
popa
outsb
aad
inc
imul
push
movsb
lea
cmp
out
clc
out
sub
mov
shll
test
cmp
out
xchg
lret
dec
addr16
mov
loopne
xchg
dec
in
mov
lods
inc
xchg
mov
mov
dec
jg
mov
xchg
pusha
out
push
xchg
fdivrl
fisubrl
into
and
sbb
or
push
call
imul
lock
cmp
xchg
scas
cmpsb
stc
outsl
inc
push
test
scas
test
subl
repnz
mov
jb
imul
lods
mov
inc
sbbb
lock
aaa
xchg
pop
in
aad
sub
or
les
push
lods
dec
cmp
fs
int3
pop
daa
aam
int
xor
imul
lock
push
ret
fwait
test
xchg
push
std
ret
hlt
fidivs
or
jg
out
and
leave
inc
cwtl
jae
es
xor
and
adc
xor
pop
fldcw
sub
cmpsl
mov
xor
outsb
mov
leave
icebp
or
test
inc
sbbl
ja
sbb
or
nop
lods
jmp
pop
loop
cmp
mov
xor
push
call
push
ljmp
push
iret
sub
mov
and
inc
ficoml
mov
fmulp
in
in
and
or
or
cli
jne
jle
sbb
mov
loop
adc
std
xor
cs
sahf
mov
or
stos
iret
jo
nop
mov
dec
pop
scas
sbbb
push
dec
mov
into
enter
mov
je
enter
rorb
and
mov
adc
sub
dec
inc
leave
loop
and
movsl
mov
mov
jns
in
dec
adc
sbb
aas
lods
in
adc
and
cmpsb
sahf
push
sbb
ljmp
shrl
leave
out
enter
push
inc
mov
inc
ljmp
nop
dec
mov
arpl
mov
sub
sbb
push
ja
adc
cwtl
mov
mov
inc
shl
std
andl
cmp
jg
mov
cmc
cmp
lods
mov
dec
mov
and
adc
mov
call
sub
fadd
in
std
mov
sahf
testb
stos
scas
or
add
rclb
fwait
xchg
testb
insl
pop
ret
movsl
push
jmp
aam
adc
movsl
in
dec
add
sbbb
pop
dec
pop
pusha
call
add
popf
iret
jno
es
fdivrl
push
in
fldt
mov
pop
mov
mov
mov
call
pop
aad
cmp
pop
sub
dec
loop
mov
imul
or
aaa
mov
mov
push
mov
pop
popl
mov
loopne
or
dec
xor
mov
loop
and
mov
hlt
cwtl
cmp
cwtl
pop
icebp
enter
lret
sbb
adc
push
lea
pop
xlat
shlb
mov
adc
or
cmp
nop
mov
mov
stos
xchg
sub
cld
jle,pn
mov
xlat
movsl
psubw
adc
xor
xor
lret
dec
add
or
es
insb
test
mov
push
stos
lahf
fs
into
test
sahf
sbb
jge
mov
or
nop
daa
push
push
daa
cli
jo
fwait
cs
xchg
call
or
inc
dec
cmp
add
repnz
out
pop
leave
dec
lock
jne
cli
scas
xchg
daa
inc
out
xor
sbb
roll
mov
outsl
sub
sbb
mov
dec
cmpsb
aam
mov
inc
rorl
mov
and
popf
fwait
es
mov
orl
pop
push
jae
or
adc
lods
cltd
inc
stos
jbe
jmp
fidivl
jae
jns
cld
scas
inc
mov
xchg
push
jnp
push
push
xor
pushf
push
or
adc
sbb
cltd
fwait
cli
ds
xchg
push
xchg
in
hlt
daa
imul
dec
mov
repz
mov
push
cltd
mov
and
pop
dec
sub
fwait
test
xchg
lret
adcl
lahf
rol
cld
out
add
jo
cld
cmpsb
imul
inc
cld
ds
jnp
inc
lods
imul
jns
rcrl
imul
pop
inc
cli
in
mov
adc
and
or
dec
dec
pop
pop
lret
mov
inc
cmp
cmp
inc
pop
rcrb
in
gs
pop
mov
lret
xchg
fcoms
repz
xor
mov
adc
nop
movsb
cmp
ljmp
mov
add
fdivl
arpl
lcall
mov
leave
es
inc
and
dec
in
roll
repz
cltd
outsb
adc
jmp
mul
out
pop
fwait
pop
mov
jbe
inc
jbe
xor
std
xchg
lock
push
rcll
mov
lods
js
mull
enter
repnz
push
sub
xor
into
jne
jb
and
arpl
lods
mov
inc
fsubrp
inc
insb
sarl
cwtl
movsb
dec
pop
add
in
test
adc
loopne
pushf
add
test
mov
test
xchg
dec
inc
fsubs
repnz
push
aas
fidivs
rorb
adc
jl
xchg
movsl
stos
xor
cmc
cmc
dec
sbb
es
shll
dec
int3
adcl
jge
lea
jecxz
mov
or
cmpsl
roll
adc
jno
or
es
inc
lea
jb
or
xor
xor
mov
or
xchg
sbb
xchg
cwtl
mov
aam
adc
cmp
sti
mov
or
sbb
cld
insl
mov
xor
enter
lea
into
mov
add
mov
and
push
lock
shll
sahf
sbb
out
push
mov
jno
push
mov
jae
mov
mov
sub
into
mov
sar
xor
xchg
xchg
add
cmp
sub
lods
ljmp
scas
out
jnp
sub
mov
popa
repz
sbb
or
out
js
add
sub
jb
testl
jge
leave
fcmovnu
mov
add
popl
ret
orl
rcrb
inc
sbb
loop
sbbl
mov
fsubr
dec
mov
repz
popa
clc
cmp
xlat
jg
or
jns
pop
stos
mov
or
push
pusha
pop
mov
jae
mov
xchg
adc
inc
cmp
xchg
mov
movsb
cmp
xchg
ret
xor
mov
ljmp
out
push
aas
sbb
mov
add
add
mov
sub
inc
adc
inc
pop
jne
mov
jno
lcall
or
jge
adc
cmpsl
loope
and
dec
and
mov
push
jns
and
mov
sub
pop
pop
cmp
incb
addr16
fucomi
pusha
mov
push
cli
jne
jmp
fstl
cld
addb
mov
pushf
sti
pop
cmpl
je
popf
movsl
pop
out
push
xor
pusha
stos
mov
pop
imul
clc
insb
cmp
push
outsb
sub
inc
adc
std
jp
int
sbb
sbbb
push
sti
rorb
cmc
mov
test
aad
stc
xchg
fidivrl
mov
sti
push
popf
xor
in
aas
mov
mov
push
js
data16
jo
or
out
push
mov
mov
fnsave
push
int3
jge
sbb
mov
aas
sti
fwait
lcall
xchg
pop
xor
push
cmpsb
insb
incb
fildl
loopne
push
sbb
inc
push
fistps
loopne
aas
insl
mov
andl
inc
or
popl
sbb
xor
jle
pop
movsl
mov
in
mov
cmp
xor
xchg
xchg
fistpl
and
inc
es
test
cmp
pop
cmp
lahf
xorl
insl
cli
push
lcall
loope
push
jae
cmpsl
mov
push
or
out
rorb
ret
in
mov
sbb
popa
sub
stos
into
sub
xchg
pop
cmc
push
push
jge
mov
xlat
test
test
pop
mulb
xor
fistpll
mov
out
and
scas
movsl
xchg
mov
cltd
das
and
mov
imul
scas
push
cmpl
dec
fstpt
pop
imul
inc
repnz
int3
out
pop
and
xlat
push
inc
push
or
sub
and
mov
dec
in
ja
ret
cmp
daa
inc
int
mov
or
sub
inc
sarl
loopne
adc
adc
sub
sub
jno
or
or
fdiv
jbe,pt
add
sub
pop
scas
mov
inc
dec
mov
push
cmp
mov
cli
dec
inc
fldl
or
rcll
add
inc
mov
test
cmp
stos
hlt
xchg
jo
pop
out
sbb
jbe
pop
jbe
popl
xchg
dec
xor
cmc
repnz
pop
lock
das
pushf
sub
xchg
je,pn
xor
fstpl
mov
mov
jg
sbb
jno
add
mov
es
fs
jnp
inc
xor
ffreep
cmp
ja
mov
hlt
xchg
push
sahf
and
push
jmp
cmp
movntq
sub
ja
adc
shll
and
hlt
out
and
popf
adc
stc
loope
test
add
cmpsb
es
cmc
xor
mull
lea
lods
lcall
ja
aas
push
jno
lods
and
shrl
pop
inc
imull
mov
iret
loop
jnp
lock
jmp
or
fdivl
or
xchg
pushf
into
fdivrs
out
mov
push
mov
mov
or
into
les
mov
dec
xlat
stc
out
lcall
adcb
sub
or
sbb
dec
mov
mov
insb
inc
push
lds
and
test
pop
or
enter
enter
daa
pop
insl
shld
mov
out
and
cmp
push
cmp
xlat
jo
andb
shrb
repnz
mov
repnz
cmp
pop
sub
sbb
or
sub
int3
sti
inc
xor
sbb
pop
fucomp
xor
stos
stc
outsl
popf
mov
into
lahf
inc
xchg
shr
and
adc
mov
loopne
enter
fsubs
cli
scas
out
mov
imul
insb
mov
loop
jne
or
pop
rcrl
sti
dec
imul
sub
pop
mov
incl
in
push
xlat
cmp
in
xor
xchg
call
mov
push
jb
shr
pushl
xor
add
enter
inc
in
and
in
mov
lock
shl
cmp
dec
fidivrl
sbb
mov
inc
xorl
stos
cmpb
xorl
xchg
dec
bound
outsb
sbb
mov
lods
fld
jae
repz
push
stos
ss
ss
dec
or
aas
jl
ljmp
in
dec
add
push
repnz
je
mov
aas
lods
out
xchg
inc
xchg
inc
mov
jae
movsb
cmpsl
sqrtps
mov
jmp
push
pop
cmp
stos
stos
cmpsl
inc
xchg
cmpl
in
xor
mov
call
daa
pop
fadd
sbb
xor
int3
xchg
inc
xchg
leave
cmc
sbbb
rcrl
mov
xchg
inc
cmp
sbb
sti
outsb
loopew
mov
sbbb
test
ss
jbe
sub
cmp
sbb
xchg
or
rcll
push
add
or
repnz
cmc
inc
adc
jns
addb
repnz
xchg
mov
loop
add
fnstcw
std
cmp
or
push
sbb
stc
adc
dec
jno
cs
pushf
das
push
xchg
xor
adc
fdivs
adc
imul
andl
pop
fisttps
push
loope
mov
icebp
pop
call
mov
dec
mull
mov
mov
dec
pop
or
lock
ret
jmp
mov
loop
sub
gs
aam
mov
push
push
push
addl
test
aas
push
cmp
mov
cltd
aaa
pop
lret
arpl
outsb
add
es
arpl
push
loop
jb
mov
loop
rol
fldl
and
sti
bound
dec
aam
pop
mov
xchg
or
mov
aam
stos
dec
in
out
mov
ret
adc
and
xor
sahf
sbb
mov
sub
call
xor
mov
push
test
jle
out
lea
push
mov
inc
aaa
shl
push
push
mov
jns
dec
and
clc
sub
push
sbb
mov
cmpsl
or
ret
fisubl
pop
call
mov
daa
loope
xor
push
add
pop
push
sub
mov
and
mov
pushf
out
and
adc
push
ljmp
notb
cmc
mov
jae
testb
dec
call
fdiv
and
add
sar
adc
pop
repz
jmp
mov
push
push
push
imul
pop
push
inc
xlat
pusha
push
and
jge
aas
aam
jmp
outsb
fs
cld
mov
pop
jge
and
push
aad
mov
sti
adc
and
jne
loop
cwtl
xor
inc
lret
stc
cmp
icebp
xchg
stos
cmp
popa
sti
dec
xchg
cs
ficomps
jl
repz
in
cmp
shlb
xlat
pop
repnz
mov
cmp
adc
lock
cmp
cmpsl
scas
ljmp
pusha
jp
js
test
into
aaa
push
mov
fstpt
sbb
mov
testl
sub
pushf
inc
gs
sub
daa
jnp
sbb
outsl
or
aad
shr
sub
pop
xor
push
sbb
dec
iret
add
dec
iret
or
lret
in
test
add
add
cmpsb
sbb
bound
lea
das
in
in
jnp
ret
add
in
jecxz
mov
sub
sub
mov
jae
mov
adc
arpl
mov
nop
movsl
or
enter
pop
and
roll
inc
shl
aaa
out
cmpsl
nop
add
scas
nop
fbstp
stc
mov
out
push
mov
push
push
inc
fnstsw
inc
sbb
cmpsb
inc
cmp
cltd
pusha
insl
mov
es
cmp
gs
int
fistpll
sbb
add
xchg
dec
lock
dec
cmp
jbe
xchg
mov
cltd
push
jb
loop
xchg
dec
lods
and
out
outsl
outsb
mov
pop
jno
fadd
push
or
fimuls
jge
push
jno
mov
or
in
pop
repnz
inc
mov
pop
jae
cs
pusha
dec
cmp
out
inc
scas
cmp
clc
xor
sub
and
push
les
sbb
ret
cmp
jo
dec
bndstx
adcl
jmp
stos
inc
mov
flds
xchg
pop
bndldx
aad
jle
mov
fcomps
inc
mov
cmc
rcl
adc
aad
cli
gs
mov
cmp
xor
mov
outsb
test
pop
iret
sub
mov
mov
mov
adc
and
les
xor
add
push
cmp
pop
loop
xor
out
pop
out
sar
pop
loopne
imulb
mov
cltd
add
sbb
movsl
mov
andl
mov
sbb
imul
bound
cmp
aad
jbe
fistpl
xchg
js
xchg
mov
rcrl
xchg
pop
ret
pop
cmp
pop
mov
add
out
push
es
test
dec
jge
xchg
mov
cmpsb
jb
pop
lea
or
xchg
aaa
mov
jb
xchg
cmpsl
orl
lea
aas
adc
mov
jecxz
orl
push
push
mov
iret
pop
fwait
and
jmp
fldcw
mov
popl
or
cli
pushf
loopne
jl
adc
out
mov
push
adc
cli
mov
imul
testl
push
lcall
cltd
je
pop
ja
add
mov
inc
loope
add
mov
ds
sub
rcll
ljmp
xchg
push
mov
mov
xor
jl
scas
xchg
in
sub
stos
jge
add
add
sbbl
add
push
into
repz
hlt
xchg
add
pop
jg
out
sub
inc
xchg
jmp
or
cmp
lds
dec
fisttps
daa
or
shll
sbb
xchg
jle
fwait
xchg
sbb
ss
outsl
subb
loop
sahf
sub
mov
popf
mov
dec
ficoms
hlt
test
int
inc
sub
jg
pop
decb
dec
insl
adc
out
cmp
aaa
pop
lcall
daa
cwtl
mov
frstor
ja
fwait
test
leave
mov
pop
adc
aas
add
push
rcll
xor
dec
fbld
mov
mov
loop
mov
stos
sub
enter
jg
mov
mov
repz
mov
mov
je
jmp
fwait
pop
insl
in
add
stc
add
cs
stos
cmpb
loop
xor
movsb
stos
ficompl
andl
cmp
xchg
daa
mov
jne
rcll
sahf
xor
in
and
push
sub
out
cmp
mov
mov
mov
popf
mov
into
insb
mov
test
jae
movsl
ret
sahf
jge
add
loopne
sub
lcall
jl
jns
out
sbbl
addl
xor
inc
aam
repz
lret
mov
push
mov
mov
into
or
push
mov
hlt
mov
test
pop
mov
mov
out
idiv
cmp
movsl
and
lret
out
cmp
inc
mov
or
repnz
aaa
stos
push
sbb
or
les
jecxz
flds
xor
jmp
call
in
ds
jnp
popa
cs
lcall
push
out
dec
cmp
adc
frstor
adc
lods
test
xor
push
jg
push
adc
cmpsl
mov
inc
shrb
mov
sub
add
jbe
xor
jmp
jp
outsb
subb
add
popf
loopne
rol
adc
ss
xchg
test
mov
mov
jle
jg
test
or
nop
inc
mov
pushf
int
cmp
cmpsb
sahf
jo
push
pop
lods
pmaddwd
push
ja
inc
flds
dec
mov
adc
lahf
lds
andb
loop
adc
mov
or
movsb
lcall
mov
pop
mov
xchg
pusha
js
or
cmp
shr
scas
fnstsw
push
ret
cld
push
dec
shll
push
pop
sub
add
scas
icebp
aaa
dec
je
push
xor
out
cld
dec
xchg
arpl
gs
out
mov
add
into
or
inc
mov
jg
inc
cld
push
mov
add
lea
fiaddl
loop
cltd
gs
cmp
jne
cmpsb
sub
dec
jecxz
in
inc
sbb
loopne
vpandn
dec
sbb
leave
cmp
jae
mov
insl
sbb
mov
mov
mov
stc
add
inc
inc
mov
js
sbb
jb
jmp
add
das
out
clc
and
jge
and
jge,pt
mov
dec
jae
dec
xor
fstpl
sbbl
and
mov
cmp
fstps
adc
cli
xchg
shl
cmpsl
sbb
sbb
pushf
cmp
adc
dec
or
std
cli
mov
push
cwtl
iret
mov
or
mov
or
hlt
popf
mov
stos
leave
mov
inc
cmp
add
sahf
cmp
in
or
sub
sub
xchg
mov
cmc
dec
hlt
stos
cmp
push
cmc
repz
in
ljmp
scas
fxch
pop
and
mov
xchg
mov
mov
pop
test
lcall
push
mov
sahf
arpl
fdivr
xor
aad
out
orl
aam
pusha
sarl
daa
mov
jge
or
sarb
cltd
ja
mov
mov
outsl
jns
into
sub
mov
sbb
sarb
mov
sub
inc
mov
push
mov
enter
jle
movsb
lock
and
clc
enter
xchg
dec
ffreep
xchg
sub
lret
js
jmp
push
or
fnstenv
imul
pop
in
xchg
cmp
jge
dec
scas
mov
lods
mov
push
outsl
aaa
mov
ret
ret
testb
adc
push
sbb
mulb
movsl
sbb
push
inc
lret
dec
cmp
seta
jb
cmp
adc
cwtl
cs
pop
sub
fiaddl
mov
xor
add
xor
xchg
cmp
bound
jo
pop
pcmpgtb
push
mov
cmp
dec
mov
mov
fstps
jecxz
dec
cmpsl
ds
lods
out
mov
jg,pt
out
mov
outsl
sub
loopne
cli
or
pop
inc
popa
mov
aad
cli
mov
inc
fisubrs
fucomp
fwait
and
loopne
sbb
mov
inc
sti
sub
cwtl
cwtl
outsb
call
mov
outsl
ret
shrl
jmp
fidivrl
cmp
addr16
sbbl
xchg
mov
fadds
or
int
shrl
les
dec
jne
xor
call
sbb
adc
test
mov
fsts
movsb
cs
mov
pop
sub
enter
mov
mov
pop
shll
jl
divb
xor
push
testb
lods
inc
fmull
mov
cmc
mov
inc
jl
inc
cmp
xchg
and
lret
inc
test
push
call
cmp
jnp
nop
mov
xchg
add
mov
out
loope
pop
jp
roll
fadd
jnp
and
push
stos
lods
je
xchg
cmpsl
push
xchg
inc
out
test
and
jl
and
jle
adc
adc
popa
mov
adc
aas
adc
int
out
pop
jb
pop
mov
sub
inc
mov
jmp
lea
lcall
adc
lea
cwtl
sub
sbb
dec
jns
in
arpl
movb
fstps
insl
insl
out
mov
scas
call
test
sbb
insb
addr16
fcmovnb
fprem1
or
pop
cmp
sub
movsl
cmp
rcrb
push
lods
aas
pop
cmp
mov
lods
and
ret
pop
sbb
inc
inc
test
push
jg
mov
add
stos
jle
mov
sbb
scas
xlat
cmpsl
fidivs
cld
inc
dec
jmp
mov
cmp
ljmp
call
pop
popa
repz
stos
imull
xor
insl
aas
fcompl
inc
shrl
mov
push
and
push
adc
cmp
push
cmp
popa
inc
pusha
or
or
fyl2xp1
adc
xchg
daa
push
or
out
mov
cmpsl
out
jecxz
mov
sub
lret
cmp
daa
scas
sbb
icebp
add
and
xor
push
negb
cltd
xor
hlt
stc
mov
xchg
daa
cwtl
nop
pop
in
ret
out
mov
sub
mov
xor
out
xor
dec
jg
sub
xchg
pop
dec
push
xchg
sti
ja
bound
push
and
jmp
sub
mov
lods
insb
push
inc
inc
jmp
mov
mov
imul
cld
sbbb
adc
ja
mov
mov
fs
jne
out
mov
xor
lcall
stos
gs
rorl
mov
or
and
fwait
xor
pushf
push
movsl
or
xor
pushf
negl
ljmp
and
xor
xor
inc
mov
orl
lcall
fcomip
sbb
popa
cmp
dec
test
mov
push
and
in
test
fildll
pop
outsl
mov
fidivl
or
out
lret
in
js
sub
adc
ret
jp
add
es
dec
das
pcmpgtw
mov
and
repnz
sub
push
aam
testb
lds
pushf
aaa
pop
cld
mov
mov
jmp
or
pusha
jg
mov
mov
bound
mov
add
imul
aad
lahf
add
cmp
sub
jno
out
push
lcall
test
adc
cmp
into
mov
imul
popl
rclb
xor
dec
movsl
and
sub
subb
add
cld
cld
mov
in
xchg
test
daa
and
cmp
pop
movsb
cmp
data16
sub
mov
mov
fisubl
adc
sub
popa
mov
mov
orb
mov
pop
or
aad
pop
pop
inc
xchg
out
test
pop
lret
cmc
out
out
les
hlt
nop
jae
loopne
data16
inc
outsb
and
and
push
push
test
pushf
jbe
in
insl
xchg
pop
into
repz
scas
inc
mov
mov
fs
cwtl
xchg
mov
adc
lret
pop
jge
idivl
test
stc
inc
push
xchg
out
inc
pushf
cmp
jae
test
loopne
xchg
arpl
test
leave
dec
mov
sbb
fidivrs
sbb
or
mov
pop
out
lret
out
push
hlt
sub
or
adc
scas
roll
cvttps2pi
inc
cltd
push
sti
mov
mov
das
inc
adc
adcb
out
xchg
pop
mov
cmp
lock
pushf
sbb
not
lea
xchg
cmp
mov
push
push
ror
ret
sub
pop
stc
popa
cs
cs
push
sbbb
into
dec
mov
int3
jle
ficomps
sbb
mov
lods
leave
int3
fisubl
icebp
mov
mov
dec
mov
add
fcmovnb
push
mov
leave
test
push
sarl
pushf
jnp
mov
cmp
cmpsl
and
repz
iret
imul
adc
outsl
add
ss
fwait
adc
shll
icebp
dec
popf
gs
mov
jbe
scas
cmpsl
xchg
and
cmp
jns
repnz
shlb
add
leave
in
rol
lea
ds
push
add
dec
js
mov
xor
mov
cli
test
or
jns
mov
xchg
pop
ficoms
pop
dec
and
call
add
jp
sahf
adc
rcrl
icebp
xchg
mov
jle
mov
and
xchg
leave
cmp
pop
call
insb
xor
mov
enter
std
mov
je
mov
fmuls
mov
jecxz
inc
dec
aaa
pop
lods
cltd
push
pop
orl
imull
in
popa
pop
data16
nop
jp
aad
ds
out
dec
stos
jne
out
popf
mov
or
pop
or
repnz
lcall
aam
or
jb
test
rcr
and
call
mov
call
mov
insb
mov
rcl
sub
sub
popl
loop
pop
cltd
clc
test
cltd
je
lcall
clc
ret
shl
adc
lret
adc
mov
jnp
xchg
sub
mov
lds
popa
ret
or
addb
fsubrs
cmpsb
pop
std
mov
push
jno
in
jnp
mov
push
je
imul
hlt
imul
lcall
adc
inc
dec
pop
jae
cltd
xor
leave
mov
mov
test
dec
lods
jg
loopne
pop
cmp
jecxz
adc
daa
inc
sbb
cld
imul
jno
dec
push
xor
lds
repz
push
testl
pop
dec
and
push
nop
inc
ret
in
js
xor
dec
dec
sub
push
fdivr
outsl
push
or
arpl
xor
pushf
lea
jg
mov
ret
ss
jne
xor
mov
cld
adc
pop
xchg
mov
jae
aas
dec
bound
into
popf
addr16
sbb
lret
sbb
cs
cmp
pop
xchg
mov
or
stos
pop
insl
dec
dec
les
dec
dec
cmp
jbe
inc
mov
push
ret
push
orb
xchg
inc
push
cwtl
jg
movsl
push
clc
cmp
push
mov
icebp
mov
mov
mov
mov
xor
xchg
js
out
test
push
mov
sbb
std
popf
pop
arpl
pop
mov
mov
aas
jge
repz
xchg
lods
inc
movsb
push
jecxz
dec
cmp
jecxz
push
les
clc
push
jl
and
mov
inc
fwait
xor
xor
lcall
out
inc
jecxz
xlat
js
aas
and
aaa
cmc
dec
std
in
mulb
lret
mov
push
jge
fistpll
dec
xor
imul
dec
ret
sbb
sarb
jge
jl
stos
inc
cmpsl
ja
mov
push
inc
js
add
dec
pop
sub
lret
mov
sub
xor
ret
loopne
mov
daa
mov
adc
out
jbe
out
add
xor
ret
in
sub
popf
loopne
mov
sahf
jno
arpl
adcb
cwtl
xchg
lret
rcrb
jo
jb
movsb
or
out
adc
inc
mov
lock
mov
test
dec
cmc
test
orb
in
mov
jno
push
cltd
and
mov
test
lods
ret
repz
out
movsl
negb
push
mov
and
push
push
cltd
hlt
add
test
pop
cmp
cli
jne
pop
popf
scas
lea
fisubl
jp
das
push
fiadds
lea
enter
or
sub
out
cmp
push
inc
or
shll
push
xchg
mov
ret
jo
sbbb
out
out
sbb
cmp
imul
jl
mov
rolb
xchg
jns
ljmp
xchg
pop
test
andl
cmp
xchg
scas
fwait
mov
fmull
mov
mov
mov
mov
cmpxchg
sbb
push
dec
push
push
inc
sub
fisubrs
jg
inc
inc
push
push
pop
cmc
dec
clc
mov
sbbl
push
fwait
test
jge
jns
xchg
dec
cltd
cmpsl
lret
cli
loop
test
in
pop
dec
in
call
mov
pop
jns
jae
cli
rclb
push
lcall
push
jmp
or
add
in
xorl
in
dec
arpl
test
sub
pop
std
dec
xor
subb
sbb
imul
in
xchg
xchg
xor
mov
stc
push
sub
adc
mov
icebp
jmp
xchg
leave
loope
and
add
out
fcmovnb
into
pop
mov
loop
aam
xchg
push
psubusw
mov
mov
addr16
sub
xor
push
or
arpl
mov
lock
movsb
add
push
push
insb
jb
sbb
mov
xor
pop
jmp
and
adc
cmp
add
mov
mov
scas
popa
jbe
test
sahf
mov
mov
pop
nop/reserved
out
xchg
sub
cwtl
and
mov
or
inc
or
fwait
ret
add
loop
and
and
lret
leave
int
ljmp
fucompp
sti
push
xchg
aam
mov
ds
sahf
jo
loope
jle
xor
pop
inc
inc
adc
cwtl
lea
mov
add
dec
cmpsb
out
push
and
ja
sti
inc
test
hlt
addr16
js
inc
push
repz
xchg
push
loopne
mov
xlat
xor
add
clc
mulps
idivb
mov
into
popf
lods
aaa
jns
push
xorl
dec
enter
nop
pop
inc
cs
jmp
sub
hlt
mov
dec
fists
mov
sbb
pushl
inc
dec
jp
mov
xor
pop
gs
test
out
xchg
enter
out
sti
add
sub
ror
fs
call
inc
dec
rcrb
dec
add
pop
inc
cltd
dec
cwtl
xor
popw
sub
sbb
xchg
mov
lea
int3
sti
js
adc
nop
push
dec
xchg
call
lock
cmp
in
xor
jg
loopne
pusha
adc
jle
test
or
sub
fdivl
adc
cmp
out
fildl
add
jb
shrb
loopne
in
lcall
mov
xor
fbstp
or
loop
mov
aam
add
mov
ljmp
cmpsl
jp
fwait
aad
xchg
in
stos
cmpb
lret
addl
into
or
inc
lods
aas
gs
out
inc
aas
int
dec
popa
jnp
mov
push
push
sub
mov
and
mov
pop
adc
jbe
jp
dec
cld
fldl2e
xor
push
cmpsb
xor
sahf
add
popa
lock
shll
inc
les
xchg
je
pop
into
sub
lock
sub
je
sub
scas
aad
nop
addr16
inc
in
aam
test
xchg
jne
xor
ret
outsb
inc
mov
out
ds
inc
mov
cmp
cmp
adc
pop
cmp
and
pop
push
in
idivb
push
and
shr
clc
repz
pop
ret
jecxz
lods
dec
mov
push
icebp
xor
sub
out
iret
sub
sub
mov
push
xor
jge
in
and
and
sub
aad
std
fsubs
std
pmuludq
sbb
mov
cmp
sarb
mov
lret
jo
movsl
pop
sbb
add
xchg
sub
ja
pushf
repnz
add
aaa
in
movsl
pushf
cwtl
xchg
mov
pop
scas
inc
jmp
sbb
mov
fwait
popf
sti
popf
xor
jle
cltd
mov
and
sbb
jg
inc
sahf
repz
hlt
sbb
clc
and
andl
sub
shlb
jecxz
lahf
dec
push
lock
push
jmp
push
pop
ljmp
ljmp
jmp
test
mov
or
push
sbb
mov
and
clc
adc
dec
add
mov
pop
and
sub
mov
ret
outsl
sbb
push
repz
xor
test
in
jno
or
sti
orl
push
adc
jno
and
out
push
inc
mov
dec
pop
call
push
cmpsl
jle
sub
out
sbb
add
popa
adc
cmpsl
jecxz
xchg
aas
mov
jno
push
sub
xchg
xchg
pop
mov
pop
push
add
in
jb
lock
xchg
test
lret
jge
pop
xchg
sbb
push
jbe
mov
mov
loope
adc
pop
cmp
jnp
push
mov
cwtl
mov
jns
dec
xchg
push
mov
ret
addr16
imul
dec
pop
shr
mov
scas
add
scas
pop
rolb
mov
jo
daa
sbbb
push
ljmp
jno
dec
mov
adc
sti
xchg
clc
scas
loop
adc
push
lea
cld
int
stos
fwait
ss
iret
inc
pop
lret
adc
mov
loopne
xor
sbbl
loopne
jp
or
xchg
xchg
add
cmpsb
cld
pop
xor
loop
xor
aad
push
divl
leave
sub
inc
mov
push
aaa
pushf
jo
repnz
xchg
add
negb
jae
js
xchg
pop
adc
jp
sahf
es
adc
mov
sti
adc
adc
popf
push
jae
test
int3
dec
sub
cmc
call
jne
icebp
ss
jl
pushf
sub
int
insl
sub
jge
mov
les
xchg
stc
in
test
sbb
enter
fnstsw
mov
sbb
pop
inc
xor
in
call
push
cmpsb
outsl
daa
mov
inc
dec
jne
xor
in
inc
js
in
jecxz
rcrb
cmc
aad
aas
imul
js
in
jmp
inc
adc
insb
or
mov
dec
mov
and
popa
and
xchg
add
cmp
jle
dec
dec
adc
insl
loope
mov
js
inc
inc
pop
adc
sub
inc
ret
fisttps
cmpsb
cld
dec
cmp
cli
jmp
fbstp
mov
xor
lret
in
stc
imul
mov
popf
call
cmpsl
cmpsl
xchg
mov
pushf
jns
leave
shlb
mov
sbb
xchg
out
clc
mov
jne
mov
stos
psubsw
or
dec
orl
sub
dec
sub
push
daa
or
adc
outsl
xor
jnp
lds
loop
cli
xchg
pop
mov
sbb
add
hlt
pop
add
shrl
dec
sub
mov
jne
push
lahf
mov
test
xor
insb
dec
inc
adc
mov
movsb
jg
xchg
adc
inc
in
jbe,pn
popa
mov
outsb
sub
test
cmp
inc
jo
sbbl
fsubs
sub
xchg
mov
jmp
rclb
add
xor
pop
lds
cli
fldcw
and
jns
int3
insl
mov
jns
mull
fcompl
mov
and
in
outsl
ljmp
sti
dec
push
mov
mov
mov
cmp
mov
inc
pop
push
adc
pop
lea
int3
shrb
out
lock
imul
iret
mov
inc
lds
mov
gs
imul
cld
inc
push
mov
adc
insb
jo
or
push
test
sbb
rcll
sbb
stos
pop
lock
mov
loop
popf
or
iret
mov
xchg
in
imul
add
call
add
jae
dec
and
cmp
outsl
xchg
adc
rol
xor
notb
cmp
dec
lret
push
out
cmpsl
aaa
mov
data16
pop
cmp
ss
dec
in
ds
ss
sbbl
ds
es
clc
xchg
lds
pop
inc
aas
pop
fcomip
xor
cmpsb
add
xchg
jmp
aam
insb
cli
cld
jecxz
mov
popf
xor
push
add
inc
and
mov
xchg
pop
test
imul
cs
xchg
lahf
arpl
push
push
and
sarl
out
iret
mov
inc
scas
pop
pop
scas
imul
int
mov
xlat
dec
mov
dec
fsubrs
xchg
cld
loopne
loop
pop
test
xchg
pop
add
jnp
and
push
andl
xchg
movsb
insl
aam
roll
ret
loopne
mov
fcmove
inc
add
cli
push
and
cld
cmp
pop
mov
lods
add
pop
add
cmp
and
lret
mov
xlat
bound
pop
les
xlat
sar
fsub
push
cmc
sub
pop
adc
xor
dec
scas
xchg
dec
add
addr16
pop
stc
push
cmp
out
sahf
pusha
test
insl
ficoms
repnz
xchg
cltd
or
xor
mov
lret
adc
dec
hlt
lods
mov
inc
adc
sti
pop
lcall
shr
xor
pop
out
cmp
jbe
add
loopne
jne
or
ja
test
inc
gs
pop
mov
test
fbld
xchg
mov
movb
test
daa
pop
lret
fcmovnb
repz
jnp
dec
dec
xor
pop
ss
wbinvd
or
lret
sub
jne
mov
ret
xor
mov
out
mov
xlat
test
jae
pop
lcall
dec
mov
js
jl
call
fbld
icebp
jo
mov
cld
stos
iret
fcmovnb
pop
or
cmp
lcall
sub
lret
xor
ja
bound
iret
lock
xor
lcall
ret
xor
or
lods
mov
pushf
jmp
out
cmp
push
jge
jge
das
dec
popf
mov
dec
insb
repnz
mov
movsb
mov
cmp
movl
pop
sahf
or
gs
enter
repz
and
mov
outsl
add
lods
dec
pop
cld
xor
mov
int3
repz
sub
mov
adcl
and
movsl
adc
mov
das
mov
lods
movsl
adc
int
das
outsl
jle
and
insb
ljmp
test
jnp
push
ja
sub
push
sbb
test
leave
movaps
pop
adc
mov
xchg
and
pusha
fistpll
movsl
lods
add
sbb
dec
add
jge
out
jb
jl
aas
scas
sbb
loope
mov
xor
dec
sbb
shrb
mov
stos
shrb
push
pop
shlb
loopne
mov
pop
jns
fbld
into
dec
jg
mov
xchg
inc
rclb
loop
xor
bound
dec
mov
cmp
test
dec
cli
xchg
xchg
js
xchg
mov
into
popa
js
test
push
inc
mov
lds
movb
jl
loopne
fmull
int
lods
cmpsb
xchg
push
jae
fildll
sub
jg
insb
sbbb
mov
push
in
xchg
cli
out
leave
pop
in
in
lods
icebp
rcrl
mov
test
jne
repz
fadds
push
bound
cmpsl
cmp
sbb
cmp
push
fdivrs
int
pop
icebp
ret
mov
jno
mov
popa
mov
ljmp
push
push
cltd
mov
xor
movsb
mov
repz
dec
and
call
mov
iret
aad
out
icebp
push
cld
push
adc
jne
mov
xorl
add
repnz
xor
mov
loopne
push
fcomps
mov
sbb
aam
repnz
std
sbb
xchg
pop
adc
sub
xor
dec
lea
sbb
xchg
loop
lea
and
xor
inc
aaa
xlat
aad
and
fcomi
pop
adcb
ret
xlat
and
sti
dec
and
cs
dec
mov
std
arpl
xchg
push
mov
fsts
jp
pop
cld
lods
inc
stos
je
cmc
movsl
lret
leave
in
mov
stos
lds
xchg
popf
inc
rcrl
or
ds
mov
add
xor
scas
xchg
cmp
clc
andl
fists
addr16
mov
test
or
mov
out
mov
ss
xchg
xor
sbbb
adc
loopne
insb
fwait
repnz
gs
xchg
push
pusha
pop
push
sahf
pop
sub
and
ret
add
outsb
scas
or
jecxz
sub
or
jp
bound
ficoms
cld
push
out
sbb
jns
sub
and
add
cmp
mov
int
aam
insl
or
mov
push
sub
xchg
test
sub
out
sahf
fdivr
xor
cmp
arpl
outsb
in
outsb
push
pop
aaa
jmp
mov
sbb
fsts
rcr
nop
test
add
mov
push
hlt
jns
jne
and
xchg
xchg
stos
cmp
dec
pop
movsb
daa
gs
xchg
push
push
push
rorb
jno
movsl
sbb
xchg
movsl
and
loop
stos
or
sub
or
jbe
sub
inc
enter
push
inc
pop
xchg
or
add
movsl
jge
sub
pop
jge
pop
movsl
mov
dec
jge
ret
dec
lods
bound
lds
lcall
and
push
test
lahf
jne
xchg
pop
xor
mov
aam
jno
xor
cs
push
adc
mov
loopne
ficompl
jno
cmc
inc
dec
gs
cmpsb
ret
xchg
sub
push
movsl
adc
jb
fisubrs
mov
shrb
loopnew
and
sbb
lods
sub
dec
xchg
in
cmova
and
shll
cmpsb
lsl
and
lahf
lcall
xchg
pop
sti
jge
out
inc
fnstenv
pop
jmp
out
push
push
push
es
jne
inc
cmpsl
push
jmp
clc
repz
and
inc
adc
flds
add
ss
pop
pop
mov
cmc
mov
push
and
idiv
push
mov
sbbl
sub
pusha
mov
pop
and
popa
pop
mov
and
xlat
daa
hlt
xchg
lock
or
imul
mov
jle
into
das
icebp
dec
aaa
or
enter
adc
inc
insb
cmpsl
ficomps
xor
cmp
mov
sub
xorl
jo
mov
orb
dec
fcomp
or
cmp
addl
ja
fimull
outsb
cwtl
push
aad
cmpsl
scas
sbb
enter
pop
push
cwtl
add
jge
mov
dec
jno
cmp
call
ret
pop
jnp
dec
imul
xor
cli
in
dec
ret
push
xchg
sti
push
lahf
push
repnz
in
out
ja
add
xchg
cld
pop
pop
pop
xor
pushf
outsl
stc
pop
cmp
mov
inc
in
stc
jns
rcll
push
lods
xor
or
andb
push
pop
pushf
clc
addb
mov
je
inc
fcoml
jne
xchg
dec
out
sahf
xchg
sub
pop
hlt
cmp
and
mov
jae
pusha
loop
sti
cli
cmpsl
sub
in
add
or
cs
es
dec
pop
inc
dec
out
aas
loop
cmc
xor
je
out
jge
cs
xchg
pop
dec
lods
pop
mov
jmp
xchg
sbb
and
in
jo
pusha
out
ss
inc
add
inc
scas
sub
sbb
scas
add
leave
lock
and
pop
leave
cmp
xchg
adc
shrb
or
push
sub
and
jecxz
fstpt
push
xchg
je
fldcw
push
add
or
movsl
jecxz
ss
push
inc
stos
xor
sbb
add
aas
leave
imul
sub
adc
iret
inc
dec
mov
fsubs
cwtl
mov
inc
push
adc
xor
orl
cmpsb
pop
cmp
fcompl
arpl
jns
xor
scas
pop
std
sub
lahf
lret
jno
cmpsl
push
mov
mov
mov
shll
push
push
adcb
adc
mov
xor
sahf
pop
inc
cmc
rcll
lock
jp
decb
jo
dec
test
mov
test
lret
out
xchg
mov
inc
or
push
test
fsubr
in
adc
sbb
das
je
pop
lret
jnp
setp
inc
adc
stc
mov
cmpsb
sbb
ja
addr16
pusha
mov
xchg
gs
xchg
mov
sbbb
mov
inc
mov
mov
adc
sub
sub
mov
repz
shrb
or
iret
sbb
lahf
movb
mov
mov
sbb
mov
mov
mov
mov
pushf
jns
cmp
imul
popf
in
add
or
out
stos
daa
data16
push
inc
outsb
in
pop
pop
jl
inc
mov
adc
and
stc
adc
pop
bound
sub
cmp
fisubrs
mov
push
std
movsb
or
es
or
sub
ss
fadds
fsubs
scas
dec
or
int3
cmp
popa
rorl
icebp
notb
jnp
pushf
mov
in
add
lcall
jbe
jl
dec
loopne
jns
fs
mov
fsubrl
cmc
adc
shrb
cmp
pop
and
lods
ljmp
pop
popf
cmp
rorb
addl
jle
jge
pop
mov
mov
sbb
js
sbb
fisttpll
fidivrl
inc
lret
sub
xchg
lods
popf
mov
aad
popf
inc
pop
out
mov
popf
cli
add
jle
cwtl
push
rclb
imul
addr16
ljmp
xor
es
cmp
fs
cmp
fldenv
mov
fidivs
jg
shrl
lds
leave
test
xor
add
and
inc
dec
inc
add
cmp
pusha
pusha
or
pop
cmp
mov
insb
call
insl
icebp
lcall
aam
dec
repnz
mov
mov
nop
ss
or
test
fisttpll
push
in
sbb
insb
call
jne
add
jno
push
clc
or
aam
pop
mov
shrb
mov
dec
jle
xor
ss
xlat
cmc
dec
xchg
cmp
rorb
in
sub
lret
das
pop
call
mov
repnz
ficoml
add
int
call
int3
adc
mov
into
and
inc
fbld
ret
cmc
xor
mov
cwtl
xchg
out
insl
mov
xor
popf
jmp
sub
cmp
pop
sbb
lods
ret
int
jp
icebp
mov
pushf
sbb
outsl
out
out
inc
or
shll
xor
les
test
jb
sub
scas
cli
or
mov
sbb
cmpsb
jno
int
mov
iret
sub
std
and
insb
push
mov
mov
sti
repz
xchg
adc
or
stos
inc
jne
pop
xor
fdivrs
cmp
daa
lret
and
int
in
fwait
sti
stos
adc
fst
repnz
mov
xchg
fcmove
lock
orb
sbb
lcall
and
mov
xchg
adc
nop
daa
pop
mov
mov
sbb
imul
daa
lcall
xor
in
leave
cmpsl
ror
or
and
adc
mov
pop
lea
stos
jne
ret
xchg
mov
mov
fldenv
cmp
movsb
insb
js
mov
mov
sbb
pop
sbb
xchg
pop
inc
arpl
int3
fidivs
mov
or
popf
aaa
push
xlat
and
mov
movsb
lret
dec
mov
movsb
pop
insl
pop
ror
movsl
stos
insl
pusha
push
mov
or
xor
dec
add
shll
lods
push
repz
call
in
xor
jae
xlat
push
cmp
loope
imul
jb
jnp
lea
fnsave
in
mov
lods
mov
fxch
cmp
inc
cmpsb
popa
and
push
mov
addr16
arpl
cmpsb
mov
data16
dec
nop
insb
shr
leave
fstps
and
mov
int
dec
xor
sub
cmp
testb
scas
add
lds
xor
mov
jp
outsl
rolb
mov
into
int
push
push
fdivrl
aad
outsb
dec
adc
mov
mov
mov
dec
ret
push
cmpl
mov
jg
or
fisttpll
jmp
out
dec
jmp
jp
out
lahf
adc
pop
and
push
mov
ds
add
icebp
in
dec
jecxz
fwait
das
mov
and
push
inc
stos
addb
or
push
outsl
sub
xor
sub
sti
sub
mov
and
and
dec
push
jo
sbb
aas
mov
xchg
adcb
loope
or
int
pop
xchg
jl
mov
icebp
xchg
and
pushf
jmp
xor
jg
and
push
add
mov
jo
or
push
jp
in
out
test
add
xlat
repz
jecxz
mov
fsubrl
shl
int
test
leave
fprem
ret
outsb
xor
shrb
xor
cmp
sbb
icebp
sbb
mov
adc
adc
push
ljmp
xor
in
sbb
and
movsl
inc
jo
mov
mov
jg
cmp
outsb
int3
mov
pushf
mov
add
push
pop
mov
inc
adcb
insb
mov
ljmp
std
push
frstor
imul
inc
pusha
fistpl
fistpl
push
ss
dec
or
or
lret
bound
fsubr
stc
or
sub
pop
movsl
jne
pushf
xor
in
dec
popa
push
jae
sarl
cmc
inc
dec
dec
dec
dec
mov
aad
rcl
lea
and
testl
inc
cmc
mov
fdivrp
push
jb
lret
pop
orb
mov
int3
mov
dec
dec
test
sbb
outsb
inc
cmp
cmpsb
dec
cmp
inc
inc
and
sti
inc
cltd
mov
mov
mov
xchg
adc
inc
bound
pop
clc
testb
ss
mov
xchg
add
sbb
test
push
stos
rolb
push
rol
push
insl
mov
mov
dec
dec
dec
out
pop
add
mov
add
mov
dec
lock
ret
sbb
dec
xchg
and
out
push
enter
and
cmp
fs
xchg
mov
cmp
test
or
fnsave
mov
faddl
cmpsb
lock
test
daa
jbe
cmp
imul
add
dec
jecxz
jmp
push
sub
dec
xlat
loop
mov
push
loopne
jo
stos
push
cmpsb
call
cmp
mov
mov
cli
out
mov
sbb
rol
adc
jmp
xchg
cwtl
lcall
mov
les
and
addl
nop
cltd
in
in
mov
and
pop
lahf
inc
imul
adc
adc
fisubl
pop
inc
dec
mov
je
pop
push
mov
jle
sub
sbb
jp
popf
aas
out
jno
mov
in
jmp
pop
outsl
and
mov
xlat
jnp
mov
sahf
ja
sahf
mov
fcomps
jne
pop
stos
fadds
inc
xchg
pop
inc
mov
add
fcomi
xor
idivl
ss
dec
ret
daa
scas
in
aad
sub
les
clc
orb
rol
adc
lea
xor
xchg
inc
xor
xlat
addr16
sub
mov
lret
sbbl
jmp
fst
mov
pop
xlat
push
out
outsl
pop
stos
dec
sub
imul
and
dec
add
lods
xor
sub
and
push
mov
stos
sub
mov
test
push
push
mov
movsb
clc
dec
and
xchg
lcall
push
cld
es
mov
lock
outsb
pop
movsb
fisubrs
or
mov
xchg
mov
cmpsl
mov
in
jle
cwtl
and
in
pop
lret
add
cmp
neg
dec
in
cmpl
das
lock
and
sahf
mov
xchg
pop
data16
mov
xor
cmp
add
and
lods
lahf
mov
fpatan
mov
lods
pop
mov
repz
lret
mov
cwtl
das
pop
and
addl
std
ret
aaa
data16
cltd
and
lahf
mov
inc
lahf
pop
scas
int3
movsb
mov
jecxz
test
test
lcall
shlb
data16
mov
shrb
outsb
sub
add
ja
and
push
fnstcw
test
jo
ret
cltd
mov
in
xchg
sub
mov
std
jns
sub
inc
cmpsl
mov
gs
push
mulb
xor
out
cmp
clc
out
icebp
dec
mov
mov
fcoms
sub
mov
lret
or
mov
fwait
into
or
out
sbbl
je
mov
das
adc
jo
inc
int3
mov
push
pop
mov
popa
push
ja
jae
mov
loop
adc
sub
push
sahf
xchg
mov
lea
mov
xor
push
imul
cmpsl
aam
cld
popa
and
or
ret
outsb
rorb
shll
out
ds
lds
insb
addl
add
mov
dec
addl
push
shrb
or
adc
mov
popa
xchg
ret
hlt
mov
sbb
daa
cmpsb
cmp
jo,pt
fcmove
push
mov
dec
lret
adc
jb
mov
inc
dec
rolb
jge
mov
popa
imul
test
mov
inc
dec
out
mov
lea
xchg
les
push
aam
testb
add
stos
jmp
testl
idivb
es
psrlq
cmpsb
cmp
enter
pop
inc
ret
mov
lret
inc
jecxz
js
xlat
pop
rorb
sti
movsl
push
push
lahf
out
sub
dec
aad
pop
fucomi
int
dec
jno
cmp
out
mov
call
scas
sub
lahf
inc
imul
dec
mov
and
repz
scas
sbb
jg
xor
inc
sbb
in
clc
lret
lock
test
push
sbb
fisubrl
fiadds
jle
ja
mov
add
int
adc
lea
test
je
icebp
mov
fdivrp
xchg
mov
pop
daa
lods
inc
xor
sbbl
and
mov
xor
int
pop
rcll
inc
in
pop
loope
or
cs
xlat
cmp
test
mov
sub
enter
xor
fcoml
aad
jle
pxor
shl
enter
lds
ds
ljmp
out
add
mov
test
mov
out
enter
push
inc
mov
jne
rcrl
lret
jp
pop
ljmp
outsb
iret
jp
push
and
not
jno
shrb
pop
xchg
pop
xor
cmp
sbb
cltd
jmp
and
pusha
pop
dec
loope
es
test
mov
push
mov
adcb
scas
inc
jb
pop
inc
orb
jnp
in
jmp
cmpl
nop
pop
and
les
push
outsb
xor
xor
cld
ss
les
push
or
mov
mov
adc
shrb
rcrb
lods
adc
es
sub
or
clc
rolb
decb
addr16
cmpsl
divl
das
add
mov
adc
testb
insl
or
pop
addl
popf
mov
nop
push
in
push
ds
iret
cmp
test
scas
mov
jmp
test
inc
insl
clc
frstor
sbb
mov
adc
insb
jmp
test
jp
idivb
jb
sbb
mov
jecxz
xchg
inc
dec
pop
adc
lcall
lds
sub
rorb
push
repz
mov
icebp
adc
inc
adc
jl
xorb
outsb
insb
add
int3
in
cmpsl
sbb
adcl
pop
xor
jle
roll
insl
add
and
jmp
mov
out
push
mov
cmpsb
cmp
xchg
lods
les
test
sub
cmp
dec
in
inc
es
sub
inc
loopne
or
in
test
or
sbb
and
mov
div
sub
cmp
arpl
hlt
mov
cmp
pop
fstps
inc
pop
mov
loopne
jle
adc
sub
jecxz
add
mov
out
xchg
dec
and
inc
addr16
mov
mov
dec
int
pop
mov
push
fisttpl
fcmovne
xor
loopne
pop
inc
stc
ljmp
ror
rolb
sub
xor
xchg
cmpsb
mov
pop
or
fs
pop
dec
notl
jne
pop
inc
pop
and
negl
lds
push
jo
jmp
mov
lcall
ljmp
adc
xchg
jne
jge
jecxz
dec
lcall
xchg
outsl
bound
movsb
cmpsl
enter
adc
sbbl
sbb
imul
xchg
inc
pop
mov
adc
sub
cs
loop
or
call
fmull
cld
sub
sub
cmc
rcl
jb
lods
inc
sbb
xor
jmp
cld
sbb
js
stos
push
fidivrs
lea
sbb
mov
push
out
loop,pt
lcall
jo
jb
in
mov
bound
push
push
inc
mov
popa
ljmp
clc
cs
lret
push
lretw
dec
enter
mov
iret
pop
aas
clc
inc
or
test
fldl
pop
sbb
push
mov
inc
mov
dec
inc
stc
pushf
sub
arpl
leave
es
xor
inc
or
sti
pop
icebp
cli
orb
cmp
jae
mov
cld
push
lret
lods
jmp
pop
jmp
call
mov
inc
lret
aad
fwait
mov
adc
aam
pop
aam
mov
sbb
pop
les
rcll
or
inc
fwait
out
sub
std
add
ja
inc
movsb
test
mov
sbb
mov
mov
stc
clc
es
in
or
dec
repnz
inc
push
sub
popa
jnp
or
lds
cli
pushf
pop
std
inc
cmp
stos
push
imul
sub
imul
fwait
gs
dec
mov
popa
bound
adc
mov
mov
loopne
mov
aaa
dec
inc
sbb
bound
inc
dec
xor
adc
inc
and
adc
pusha
push
mov
pop
stos
test
jg
xor
movsb
les
xor
shll
dec
mov
sbb
aam
sbbl
aam
cwtl
xor
icebp
stc
push
lods
add
cli
dec
cmp
jp
xchg
pop
loope
mov
sub
call
mov
push
jo
cmpsl
loop
inc
fsubs
nop
mov
sti
pop
gs
leave
jbe
jb
push
and
and
aas
lret
push
dec
cmp
into
xor
shl
jne
cmpsl
movsl
xchg
pop
aam
and
dec
cmpsl
out
movsb
bound
jbe
fisttpl
mov
xchg
cli
mov
cltd
stos
sub
adc
cwtl
lock
adc
push
inc
scas
aas
rclb
ljmp
jmp
mov
inc
cmp
ljmp
xlat
mov
xor
mov
movsl
xchg
aas
mov
lods
adc
pop
cmc
mov
push
add
inc
mov
adc
mov
das
mov
cltd
sub
call
shrl
add
pop
sbb
into
popf
xchg
push
ror
and
fildl
and
repz
mov
shlb
xchg
dec
cmp
fsubp
mov
gs
aad
inc
scas
pop
movsl
pop
push
sub
and
das
dec
sti
test
divb
sbb
cmp
mov
shrb
rcrb
xor
fsubs
cwtl
sub
std
sub
das
jnp
jno
push
dec
add
out
cwtl
pop
jecxz
mov
add
imul
inc
mov
andl
and
mov
lea
xchg
sub
in
adcl
arpl
pop
loop
dec
inc
add
sbb
push
mov
sub
stc
or
out
lahf
xchg
dec
cmc
mov
rcr
pop
push
fsubr
enter
or
sbb
xor
inc
cli
insl
test
push
lds
push
cltd
and
test
jl
adc
ljmp
in
jl
and
sbb
out
xchg
cmp
inc
push
pop
cwtl
add
sub
xor
inc
inc
jo
stc
insl
fdivl
lahf
sbb
xchg
rcll
hlt
lret
sti
jns
xlat
shll
pop
cmc
iret
lds
repz
push
cs
mov
ja
or
sub
shl
aas
ds
jno
inc
push
adc
adc
or
into
pop
cli
mov
push
loop
arpl
or
push
jge
mov
outsb
lds
movsb
dec
rcl
xchg
push
cmpsb
aas
push
fdivs
sub
popl
dec
mov
int3
xor
xchg
push
in
pop
inc
cli
fs
out
andb
mov
lret
push
or
test
insl
sbb
add
xchg
es
xchg
and
ss
xchg
in
outsl
push
insl
cmp
jne
mov
pop
ret
lret
repnz
out
mov
adc
mov
mov
outsb
sbb
out
imul
xchg
xor
add
and
push
mov
hlt
mov
push
cld
dec
add
cwtl
das
rcrl
lods
mov
push
sub
add
test
clc
mov
pusha
mov
push
sub
mov
aas
into
das
sahf
arpl
push
lahf
shlb
pop
jge
int
mov
adc
mov
dec
leave
movsl
xchg
push
push
mov
test
mov
and
int3
jg
mov
inc
mov
pushf
dec
aam
dec
imul
mov
daa
inc
xlat
movsb
clc
and
xor
or
or
sbb
mov
cmp
dec
jmp
mov
adc
pop
repz
pop
lahf
test
push
test
inc
cwtl
fs
cmp
xchg
mov
sub
pop
sub
push
loope
jmp
lret
loopne
imul
mov
notb
lods
jne
lcall
add
enter
xchg
rcrb
out
sbb
dec
stc
outsl
dec
adcb
adc
test
xchg
inc
xchg
stos
dec
jmp
stos
pop
jl
mov
xor
xchg
lcall
popa
gs
xchg
addb
mov
mov
dec
inc
stos
int
and
imul
movsl
xchg
mov
icebp
inc
enter
cmp
cmpsl
and
loope
into
out
mov
loop
jle
cmp
shll
aam
mov
cmp
pop
movsb
cmp
psubsb
adc
push
cld
cmp
jl
dec
xchg
insl
add
mov
ficompl
fistpll
mov
out
push
jns
nop
mov
or
lock
inc
sub
gs
sahf
imull
mov
lea
scas
jb
fdivrl
stos
xor
and
xor
sub
cld
js
das
inc
outsb
in
inc
or
adc
hlt
sbb
xor
gs
int
mov
xor
int
ss
cmp
xor
mov
and
or
push
sarb
ret
cltd
xor
pop
or
mov
mov
sub
jg
sbb
cltd
divl
and
in
gs
jmp
leave
xchg
mov
imul
xor
mov
mov
pop
mov
scas
xchg
and
daa
lret
inc
fldl2e
into
adc
popa
xchg
fcmove
ret
cmp
int3
jb,pn
cmp
cld
shrl
mov
or
mov
pop
movsl
jmp
cltd
sub
cld
push
cmc
or
add
inc
int
and
push
inc
fsubrs
xchg
sbb
aas
scas
or
sbbl
scas
pop
lea
dec
stos
xchg
scas
mov
and
std
xchg
dec
dec
xchg
arpl
mov
popa
sub
in
and
movsb
ss
icebp
rcrb
dec
and
enter
xchg
in
cmp
addr16
mov
jg
cmp
push
fsubp
fnstenv
aaa
std
jno,pn
push
mov
mov
shl
lods
movsl
ret
xor
inc
inc
jle
fiaddl
pop
mov
mov
fadds
or
subl
sbb
push
outsb
mov
inc
call
cmp
mov
scas
pushf
sti
pop
test
loop
dec
orl
loope
out
sub
add
lret
rep
jo
mov
jbe
mov
mov
add
push
repz
adc
xchg
in
inc
icebp
inc
sti
xor
out
das
shrb
or
lea
repnz
pop
adc
push
jle
sub
fnstenv
arpl
push
sbb
pop
shrl
add
out
jbe
mov
leave
or
dec
into
fstpl
xchg
push
mov
dec
cmp
mov
fwait
xchg
mov
mov
pushf
mov
cmp
shlb
mov
mov
stc
sub
shl
jb
fs
inc
out
fldl
xor
pop
add
pop
into
cmc
adc
inc
fcmovb
jp
jecxz
hlt
enter
testb
ljmp
cmp
out
or
ljmp
and
aad
lods
ljmp
vpshuflw
daa
sarl
mov
int3
mov
inc
cmpsl
push
pushf
adc
dec
or
pop
mov
adc
push
cs
arpl
jnp
sbb
inc
jbe
js
inc
aad
lds
ja
xchg
pop
mov
lds
sahf
mov
dec
pop
add
xchg
sti
cmp
inc
data16
jg
mov
mov
hlt
movsl
outsb
dec
cmp
fcomi
out
dec
dec
in
push
lcall
xlat
movsb
or
sub
cmp
cmp
xchg
sti
test
repz
mov
cmpsb
sub
pop
mov
push
mov
fwait
gs
or
xchg
bound
ja
xchg
xor
mov
xchg
xorb
cmp
push
and
fldl
and
std
test
adcl
xor
and
and
cmp
mov
js
xchg
pop
dec
into
les
movsl
cmc
xchg
mov
scas
es
xor
sub
add
movsl
aas
pop
sbb
adc
pminub
or
mov
jmp
shld
loopne
lret
ret
xor
sbb
iret
sbb
lret
shll
call
xlat
mov
js
lahf
mov
insl
sub
xchg
sub
xchg
in
scas
cwtl
add
xchg
and
xchg
push
shl
lds
lcall
andb
orb
add
movsl
icebp
inc
push
jo
shr
dec
imul
mov
leave
xchg
nop
mov
push
add
cmpps
add
popf
pop
sub
scas
outsb
sub
mov
movsl
in
dec
scas
insb
jle
imul
xchg
dec
dec
xlat
jno
or
cs
mulb
xor
shll
cmp
fsincos
fisttpll
movsl
adc
out
data16
xor
push
data16
mov
dec
arpl
in
or
daa
in
xchg
dec
push
mov
mov
jbe,pn
dec
xor
sbb
mov
gs
test
lahf
ss
and
push
shl
imul
daa
mov
jae
frstor
ffree
test
inc
fcompl
or
lds
cmp
xchg
cmc
dec
mov
mov
in
clc
rcrl
inc
aam
dec
es
sbb
clc
sbb
mov
push
jp
jecxz
push
mov
mov
outsl
loop
aaa
fcompl
sub
stos
enter
int3
push
ja
into
fs
mov
ret
fldcw
ds
xor
push
inc
aas
push
out
xor
pop
inc
push
lcall
or
data16
sti
and
jl
adc
pop
in
mov
aam
pop
add
inc
popf
cmp
mov
adc
outsl
lret
mov
cmpsl
aad
cmp
leave
xchg
jl
lods
scas
jb
dec
clc
dec
divl
loope
push
dec
pop
ljmp
jb
dec
faddp
jle
lock
icebp
mov
pop
push
lea
test
movsb
sub
nop
sub
int
inc
add
add
cmpsb
and
data16
data16
dec
dec
out
dec
cmp
or
xchg
lret
out
pop
bound
xchg
ja
push
test
mov
pop
pop
xor
or
mov
or
mov
aas
mov
or
dec
cli
cld
adc
add
lea
and
xchg
jle
mov
icebp
ret
rorl
popa
adc
mov
sbb
ljmp
call
inc
lods
sahf
xor
mov
filds
cmp
xor
mov
adc
cmp
push
jmp
mov
jo
sbb
stos
xchg
push
outsl
jle
fsubrl
inc
xor
repnz
inc
mov
adc
mov
dec
lahf
dec
int
pop
add
push
xchg
sub
xchg
pop
mov
inc
dec
fildll
out
adc
pop
push
pop
test
push
aas
decb
jno
mov
pusha
mov
mov
push
into
enter
jmp
data16
inc
adc
gs
push
mov
daa
jns
push
cmpb
pop
push
mov
mov
or
mulb
je
pop
repnz
mov
xor
cmp
sub
xor
push
jno
call
mov
sbb
popf
das
mov
aam
xchg
leave
outsb
sub
cmc
sbb
add
push
insl
add
mov
push
cmpsb
xor
out
adcl
mov
pushf
data16
jge
sti
pop
push
jne
pop
sahf
inc
test
test
test
or
sub
daa
loop
sbb
negb
nop
addr16
xchg
cmp
andl
imul
pop
and
aam
insl
in
adc
sti
mov
or
xlat
mov
leave
adc
adc
mov
int3
xchg
or
push
jno
jbe
fmuls
stos
imul
shll
cmpb
push
adc
mov
xchg
push
add
or
outsb
mov
testl
add
mov
mov
fadd
mov
pop
inc
fimuls
sbb
jo
ljmp
call
mov
mov
jl
xor
and
xchg
jb
and
dec
daa
cmp
fldl
test
daa
stos
loope
fstpl
mov
popa
cmp
push
jbe
pop
lret
jecxz
and
or
cltd
mov
or
jecxz
dec
mov
add
rclb
jns
clc
jnp
pop
js
add
jle
inc
mov
mov
xchg
inc
fwait
data16
xchg
icebp
mov
mov
out
hlt
push
dec
pushf
aad
js
mov
fsubs
and
xchg
test
mov
cs
jnp
inc
push
pop
or
fildl
pop
fisubrs
xchg
mov
cmp
addr16
cmp
ret
jno
movsl
sbb
sbb
push
lret
cmpsl
or
pop
dec
sbb
and
dec
mov
adc
lea
mov
lret
push
icebp
sbb
inc
int3
js
sbb
scas
ret
inc
inc
cmpsb
cmp
push
shl
lock
aaa
xor
in
sub
push
mov
mov
cmp
mov
icebp
dec
inc
pop
ljmp
push
jnp
idivl
mov
cmpsl
mov
add
cmp
dec
mov
add
mov
gs
pop
mov
xchg
jbe
fists
fwait
xor
jae
adc
mov
orb
jae
hlt
xchg
mov
stc
inc
sub
xchg
aaa
mov
cmpsb
mov
jnp
dec
out
cld
lcall
xchg
sub
inc
xor
jb
jl
cs
xor
push
mov
mov
or
jae
call
addl
cltd
mov
fwait
jb
int
mov
cltd
stos
or
push
mov
nop
inc
insl
inc
fisubs
out
jb
inc
gs
lods
lahf
outsl
push
lock
xchg
jbe
and
jae
pop
scas
stc
imul
mov
loop
mov
cmp
outsb
test
mov
adc
in
imul
xchg
mov
pop
jno
sub
xchg
xchg
mov
xor
add
and
inc
sbb
mov
lods
fstp
xor
cld
aaa
or
xchg
mov
test
pop
nop
popf
push
push
stc
hlt
arpl
pop
rclb
dec
ret
fbstp
data16
out
rcrb
lahf
jns
lods
stos
mov
push
push
lcall
mov
icebp
sbb
rcl
loope
jo
in
jmp
mov
mov
cmpsl
dec
sub
popf
jo
gs
inc
and
cs
stos
lods
btr
sbb
push
jle
in
sahf
push
insl
fsts
fmull
xchg
mov
jo
mov
cmpb
sub
inc
and
cmpsl
addb
cmp
sub
in
xchg
call
loopne
mov
jns
frstor
das
push
fidivl
adc
jbe
popa
out
rolb
sbb
mov
fwait
jg
movsl
add
xor
clc
and
pop
cwtl
pop
pop
imul
mov
xlat
sbb
fs
repz
xchg
or
jg
xchg
mov
sbb
jge
movsl
dec
dec
pusha
imulb
cld
sub
mov
mov
pop
inc
inc
out
leave
inc
jne
je
cmp
rcll
movsb
inc
incb
jg
cmp
lock
inc
and
cmpsb
add
sarl
push
or
subb
addl
dec
popa
cli
jle
mov
mov
mov
test
jl
stos
or
sub
xchg
mov
cld
pop
add
dec
sub
aad
imul
insb
andb
nop
mov
testl
and
add
cld
lcall
in
add
push
dec
dec
std
xchg
sub
aas
fimull
mov
sti
les
push
mov
fisubrs
cmpsl
and
ret
and
cmp
iret
fldenv
in
in
gs
int3
inc
cmp
mov
dec
add
jnp
ret
pop
sub
pop
call
mov
hlt
and
inc
test
pop
aam
cmp
pusha
ss
cmpsb
mov
daa
int
scas
inc
aad
repnz
into
mov
or
arpl
fidivl
push
jg
xor
xlat
fnstenv
or
das
xchg
aaa
or
fsts
xchg
aam
data16
jle
inc
fidivl
shlb
cs
or
sbb
xorl
sbb
cmpsl
mov
jae
loopne
pop
xchg
push
shl
aas
mov
inc
fucomp
rorb
aas
push
dec
cmp
push
adc
push
ret
push
and
lret
fsts
mov
xchg
push
lods
pop
mov
push
push
popf
out
xlat
icebp
add
sbbl
dec
ds
cmp
dec
dec
notl
mov
cmp
xchg
imul
js
and
rcrl
pop
xchg
lcall
push
or
rclb
aam
push
sub
test
push
xlat
pop
push
lods
aas
pop
aam
mov
jno
xchg
add
ja
xchg
and
push
insl
lret
mov
mov
pushf
push
mov
xor
lock
mov
ss
adc
xchg
adc
mov
call
jb
mov
push
ss
dec
in
jmp
pop
scas
pop
mov
xor
dec
xlat
push
popa
test
test
daa
pop
sub
lods
add
out
in
pop
divb
push
or
and
push
xor
imul
test
push
leave
pusha
dec
add
fdivrl
jg
das
push
xchg
adc
jnp
loop
mov
sbb
in
and
arpl
mov
ret
push
mov
mov
dec
jmp
pop
cmp
ds
dec
roll
inc
scas
insb
mov
scas
mov
decl
mov
cmpsb
outsb
mov
or
ret
mov
pop
pop
lcall
hlt
adc
xchg
sub
inc
mov
or
jo
xor
mov
cli
sti
cmp
es
lods
fisttpl
cmp
jb
sub
mov
inc
stos
cmp
xchg
stc
add
subl
fs
add
sahf
and
mov
mov
push
cli
testl
push
andb
fcomps
repnz
mov
daa
outsb
jge
ds
push
sub
fistpl
fidivrs
or
fwait
pop
adc
pop
jmp
loope
mov
stc
sub
mov
enter
movsb
xchg
les
loope
xor
sub
dec
mov
sti
scas
inc
data16
mov
rcrb
imul
dec
movsb
ret
sub
push
decb
jl
adcl
or
and
leave
dec
in
orb
jne
insb
shr
mov
fwait
loopne
dec
shrb
dec
cmp
lock
js
fistl
mov
mov
jmp
or
mov
insb
out
popf
outsb
pusha
sbbl
add
push
loope
adc
icebp
cmpsl
out
sub
jae
imul
mov
and
add
xchg
arpl
push
cld
movsl
push
aam
mov
xchg
inc
add
es
xor
call
ljmp
push
cmpsb
mov
mov
add
int3
mov
xchg
incb
lods
jo
fwait
sbb
fnsave
decb
lods
sub
fcompl
mov
inc
mov
in
sahf
or
je
imul
lock
out
cmp
outsl
push
cmp
shll
mov
xchg
add
xorl
leave
mov
jl
bound
mov
xor
xchg
mov
fcmovne
adc
outsb
mov
xor
cld
std
jo
cs
pushf
pop
filds
mov
sbb
push
push
dec
lret
mov
mov
addl
sbbl
mov
sahf
and
sbb
pop
sbb
aam
insl
xlat
icebp
lret
or
xlat
sahf
nop
xchg
sub
outsb
add
push
movsl
xchg
out
pop
hlt
scas
adc
inc
push
divl
lods
movsb
push
lea
cmc
xrelease
outsb
adc
arpl
into
addr16
lods
out
scas
fildl
mov
and
mov
inc
cmp
push
push
fwait
or
fadd
pop
ffreep
mov
aad
adc
pop
icebp
sarb
js
aas
sarb
xor
xlat
les
adc
adcb
mov
sbb
sbb
repz
pop
scas
jg
mov
loopne
rcrl
aaa
and
cli
icebp
test
jmp
test
or
adc
jb
push
insl
sbb
xchg
xor
push
dec
cltd
fucomip
xor
dec
stos
mov
lcall
clc
data16
sbb
lahf
addr16
dec
popf
jmp
ret
xor
lea
jmp
insl
and
mov
je
cmp
xchg
in
mov
inc
mov
mov
lock
call
pop
and
sbb
mov
push
imul
mov
push
repnz
sbbb
stos
out
ds
movsb
xlat
mov
into
lods
xchg
add
lock
in
sti
push
and
and
ss
dec
pop
xor
nop
fwait
bound
mov
iret
push
mov
pop
out
xchg
add
xchg
jecxz
inc
stc
popf
aaa
loopne
dec
fcmovnu
in
sub
ds
mov
jp
stos
into
mov
mov
cld
mov
or
sub
daa
std
je
fwait
pop
or
mov
jbe
adc
rclb
dec
es
jnp
fsubr
int
sahf
orb
cmp
mov
fnstenv
xlat
clc
scas
dec
adc
scas
call
scas
pushf
sarl
scas
dec
push
and
fistpl
into
movsl
insl
jne
mov
mov
loopne
mov
push
sti
xor
or
imul
shl
loopne
fs
or
cmp
in
pop
addr16
repz
add
jg
and
mov
repz
data16
sub
stos
ss
jge
jo
inc
sahf
add
mov
or
clc
push
enter
aaa
xchg
sti
in
insb
pop
mov
stos
out
sbbb
add
std
cmc
je
ret
scas
leave
mov
mov
jmp
bsr
jge
cmp
sbb
jo
dec
pop
aaa
jne
leave
out
cmpsb
inc
inc
mov
fnstenv
mov
jo
sahf
sub
or
stc
push
out
repnz
lret
or
adc
testl
lods
xchg
xor
enter
dec
pop
dec
fcompl
stos
fiadds
add
repnz
sbb
sub
insb
lahf
stos
outsb
ja
xor
in
stos
push
dec
pop
lods
icebp
clc
adc
fcmovnbe
divps
sub
pop
mov
mov
sar
sbb
adc
sub
adc
jmp
out
mov
lcall
pusha
or
inc
push
sub
dec
dec
aas
subb
jmp
jle
jnp
mov
pop
jo
xchg
test
inc
jg
mulb
jae
sub
xor
bound
sub
mov
jbe
push
ja
mov
es
lods
xchg
sub
scas
fucomp
push
mov
mov
mov
add
jo
adc
loope
sub
jne
xor
aad
imulb
xor
mov
int3
add
xor
push
push
dec
out
push
cmp
sahf
imul
ret
add
mov
inc
arpl
icebp
cmpl
fisttpl
outsb
lds
inc
sbb
rclb
dec
or
scas
out
cli
fcomi
cmp
jecxz
inc
stc
xor
adc
jle
fidivs
lret
mov
lea
sub
mov
or
push
cmpsl
dec
insb
scas
popf
jo
dec
dec
add
leave
nop
test
lds
out
mov
adc
mov
jb
daa
test
pop
mov
pop
xor
lret
inc
outsl
pop
xor
gs
adc
les
xor
jl
push
mov
adc
sub
xchg
insb
mov
sti
loop
fldl2e
or
dec
cmc
dec
hlt
pop
mov
sbbl
mov
negb
popa
dec
sbb
bound
scas
jno
mov
stos
jl
cmp
jne
mov
or
push
loope
shrb
mov
pop
ret
pop
jmp
or
lods
sbb
xor
enter
cmpsb
mov
pushf
divb
nop
cmp
cwtl
push
mov
or
jno
int3
pop
ljmp
fsubs
out
cwtl
cs
push
jmp
xchg
lahf
jo
pop
mov
fwait
xor
out
and
mov
sti
ret
cmpsl
and
addb
and
dec
adcb
scas
mov
sti
dec
mul
mov
sbb
fidivs
es
out
test
test
inc
push
mov
cs
add
outsl
add
scas
jno
jg
iret
cmp
fdivrl
lea
fstps
lret
xor
inc
inc
outsb
push
mov
and
mov
ret
jmp
in
ret
stc
mov
push
dec
ret
hlt
xchg
clc
and
add
sahf
push
dec
ret
fisubrl
and
iret
add
int
iret
mov
test
cmp
xchg
mov
into
sti
dec
jg
stc
push
test
adcl
mov
les
mov
pop
fildll
pop
mov
xchg
sub
and
mov
add
sub
pop
rcl
inc
mov
hlt
pop
das
dec
push
out
cld
xorl
xor
aad
js
daa
ds
push
push
xor
mov
lods
popa
mov
xchg
int
jbe
cmp
mov
outsl
sbb
cwtl
shr
enter
push
ljmp
outsl
pusha
fidivl
jl
sbb
add
or
and
hlt
add
in
jb
mov
call
inc
push
jmp
xchg
popf
repz
jnp
pop
out
and
inc
inc
xchg
sbb
jae
adc
adc
ja
push
out
xorb
rolb
add
ja
setae
rcrl
xor
js
xchg
add
fsubl
jge
cmp
icebp
insb
fcmovne
lods
fmuls
inc
stos
xlat
ja
push
fisubrl
inc
aaa
inc
fsubrs
xchg
ja
dec
stos
imul
inc
fistpl
enter
mov
stos
mov
and
int3
pop
orl
push
mov
or
push
sti
cmp
int3
sti
nop
test
inc
sti
divl
lret
mov
push
jne
es
cmp
xorb
insl
sahf
out
xchg
adc
dec
fbld
lea
jbe
bound
pop
hlt
cmpsb
test
xor
or
lods
xchg
inc
aaa
mov
sbb
pop
addr16
fst
inc
jnp
int
arpl
movsl
inc
adc
lahf
mov
push
jl
shlb
shl
mov
iret
outsb
loopne
outsb
pop
add
jb
xor
mov
fists
adc
mov
das
call
or
jg
jmp
xor
mov
loop
clc
inc
fldt
cmp
jge
and
sub
daa
int
or
mov
subb
mov
add
xchg
mov
test
mov
inc
sbb
mov
nop
push
aam
stc
pop
push
mov
mov
pop
arpl
inc
js
fstpt
fisubl
or
orl
jp
jnp
sbb
jno
mov
adc
popa
push
add
rolb
lahf
test
shl
lds
mov
jno
adc
jo,pn
ds
mov
pushf
lods
sbb
loopne
fnstcw
aad
jg
inc
es
insb
scas
cmp
jg
lods
outsl
jns
xchg
sahf
mov
test
and
fcoms
and
in
fsubs
adc
mov
cltd
stos
inc
sbb
loop
cmp
dec
jo
push
mov
push
jbe
fnstenv
lret
mov
dec
jp
pop
cmpsb
les
loopne
test
movsb
aaa
addb
cld
mov
in
rcrl
repz
pop
or
mov
fxtract
aaa
bound
mov
push
lret
clc
ret
dec
pop
xor
ljmp
adc
int3
and
stos
inc
xchg
out
pop
sarb
loop
mov
roll
dec
std
cmpsl
popf
lcall
aad
push
mov
dec
fbstp
lods
xchg
mov
xchg
xor
std
push
jne
push
jno
decl
xor
cmp
cld
bound
mov
or
mov
fisubl
mov
sbb
outsb
scas
in
or
lcall
ror
icebp
stos
es
jae
inc
pop
mov
xor
test
inc
ss
imul
mov
dec
dec
xor
test
push
jmp
push
mov
jb
popa
in
out
pop
jae
jmp
subb
out
push
out
mov
push
in
test
push
mov
std
aas
aam
dec
adc
daa
cmp
pop
sbb
stos
pusha
out
pop
imul
rorb
sbb
mov
imul
inc
xlat
addr16
jno
mov
xchg
sub
mov
mov
out
xchg
test
mov
insb
sahf
fsts
into
bound
sub
or
mov
xchg
or
out
imul
push
arpl
ret
in
pop
mov
push
mov
mov
lods
push
pop
pop
dec
outsb
mov
in
jns
sub
jb
out
mov
and
clc
xor
into
aad
push
add
rol
ret
sbb
or
dec
ljmp
xchg
mov
in
shl
mov
xchg
xchg
rcrl
into
push
jmp
push
push
push
jo
xchg
push
cltd
das
xor
leave
inc
mov
clc
or
push
adcl
and
aaa
addr16
lea
movswl
lock
das
loope
inc
xor
xchg
mov
ficompl
adc
fbld
scas
ljmp
movsl
adc
out
shll
push
mov
cmp
push
mov
sbb
dec
repnz
in
jg
fmuls
popa
test
mov
iret
cmpb
mov
fmull
fcmovu
dec
adc
lahf
hlt
pop
dec
or
into
cmp
aad
or
inc
rcl
test
jle
dec
cmp
jl
int
lods
xchg
scas
aam
adc
aad
aaa
hlt
inc
out
loop
in
jge
mov
push
std
pop
xor
out
gs
cs
int3
jo
arpl
adc
mov
clc
cltd
xchg
iret
xchg
push
and
xorl
lds
pushf
clc
or
ror
cmp
pushf
mov
push
push
ljmp
inc
mov
inc
mov
das
in
fidivs
xchg
inc
js
add
xchg
or
test
loope
mov
cmp
std
xor
inc
inc
or
inc
xorb
ss
fwait
dec
movsl
jp
adc
arpl
jb
outsl
mov
sahf
lds
daa
rcll
clc
pop
outsl
sub
lock
xor
popl
loopnew
jne
push
popf
fsubl
push
addr16
add
roll
cwtl
std
je
adc
lahf
jp
pop
sub
dec
pop
icebp
jp
xchg
pop
push
movsl
jl
gs
ljmp
out
popa
adc
test
mov
mov
or
outsb
testb
popf
push
fucomp
in
xchg
ljmp
fisubs
mov
mov
jecxz
aam
or
add
andl
sbbl
push
and
int
loop
leave
sub
push
fdiv
mov
mov
adc
shll
push
cmp
xchg
cmp
loope
mov
push
or
dec
adc
out
fwait
mov
adc
mov
mov
sub
std
leave
test
push
cmpsb
jmp
test
ficoml
mov
loop
out
pop
shll
imul
std
xchg
imul
and
sbb
dec
fidivs
sarl
dec
js
aaa
mov
dec
inc
fimull
mov
or
sti
xor
fisubrs
pop
in
and
outsl
jcxz
adc
mov
pop
repnz
pop
cmp
lock
sub
orl
fsub
jnp
inc
xchg
ss
repnz
addr16
std
orb
lret
mov
test
in
test
add
mov
mov
dec
addb
aad
xlat
add
outsl
js
and
fs
ss
sti
jmp
mov
fdivrl
pop
sahf
add
das
loopne
pushf
scas
inc
inc
clc
sahf
lock
outsl
mov
jae
outsl
imulb
scas
dec
je
shll
push
or
outsl
movsl
mov
xchg
call
movsb
fnstenv
stos
aaa
stc
jecxz
setge
aaa
jns
mov
cwtl
fistl
xor
or
lock
and
jb
lahf
push
aam
decb
cmpsb
push
aam
or
jno
fistps
push
xor
xlat
cwtl
push
dec
mov
mov
popf
dec
dec
xchg
xchg
add
repz
mul
mov
sbb
frstor
hlt
lods
sub
jnp
xor
clc
xlat
call
cmpsb
les
leave
mov
mov
adc
out
aaa
dec
stos
fdivrs
addb
pop
aaa
and
mov
popa
add
rolb
ljmp
aaa
hlt
sub
adc
sbbl
imul
aaa
sbb
inc
mov
test
add
jbe
or
dec
xchg
push
jbe
cmp
pop
pop
test
fnstsw
dec
pop
imul
aad
jg
in
mov
das
addr16
cmp
les
les
cmpsb
push
inc
sbbl
xor
xchg
stc
ds
sbb
add
inc
mov
fnsave
pushf
js
cmp
xchg
divb
rcrb
int3
into
ret
jle
arpl
mov
mov
cmpsb
mov
mov
lcall
lds
push
mov
aas
xchg
bound
dec
mov
fs
pop
fidivrl
incl
push
outsb
jne
push
scas
sbb
xor
mull
dec
mov
gs
out
rcrl
aam
test
mov
rclb
xchg
loope
dec
sbb
movsl
add
mov
xchg
jle
incb
mov
jno
push
sub
shrl
aam
mov
lea
cmp
loopne
adc
hlt
add
fdivl
add
mov
popa
mov
mov
add
jge
push
out
xor
xchg
sarb
subl
cwtl
repz
test
lret
ds
mov
out
fsubr
xchg
in
lods
sub
sub
leave
mov
rol
and
jne
add
mov
xor
jbe
mov
and
push
and
lods
cmpb
lods
inc
sub
and
sahf
sbb
pop
test
sbb
xor
repz
cmpsl
cwtl
data16
jle
loopne
jp
sub
mov
insl
xor
xlat
ret
cli
sub
mov
fistps
push
mov
xchg
jne
inc
mov
push
inc
pop
mov
lcall
es
fisubrs
addr16
stos
jb
adc
or
pop
cs
enter
hlt
sub
jmp
sub
mov
rorl
push
jmp
mov
mov
cmpsb
xchg
pop
dec
dec
inc
fnstcw
push
or
inc
pop
or
add
icebp
push
sub
test
lret
enter
test
push
fisubs
outsl
jae
pop
mov
test
out
test
pop
andb
jbe
out
lds
movsl
ljmp
push
pusha
cltd
add
mov
icebp
int
out
lahf
int
push
mov
lahf
leave
aas
mov
adc
lret
xchg
jno
sbb
testl
and
pop
xor
push
clc
insl
mov
mov
mov
add
repz
pop
cmp
out
into
std
arpl
mov
or
push
sub
icebp
push
mov
cmp
pop
addr16
hlt
lds
push
aam
add
outsb
filds
pop
lret
aam
stos
mov
mov
repz
xchg
cmp
xchg
dec
aas
pop
int3
push
pop
push
add
mov
lods
and
pop
in
push
mov
in
jnp
arpl
int
mov
fs
rcll
add
jnp
shlb
dec
push
and
add
lods
test
arpl
mov
cltd
es
mov
xchg
nop
inc
adc
cld
xchg
sbbl
xchg
pop
xchg
cmp
movsl
aaa
cmc
cld
idivb
fcoml
mov
mov
dec
cmp
lahf
xor
repnz
dec
shll
lret
lock
fists
sbb
popf
je
sub
int3
shrl
cld
pop
mov
push
stc
and
push
sub
fldl
iret
jl
movsb
out
xor
int
mov
pop
or
inc
pop
cmp
das
push
lret
and
mov
push
xor
mov
fbld
mov
inc
mov
pop
jae
mov
sbb
rcll
sbb
mov
dec
test
insl
push
mov
mov
shlb
xchg
cmp
dec
jnp
loopne
mov
pop
pushf
push
xor
mov
repnz
lahf
out
fstps
jns
test
cmp
xor
xchg
inc
mov
ret
stos
push
fnstsw
insb
push
add
in
jp
push
out
stos
dec
push
jns
test
push
fadds
data16
daa
push
sbb
iret
add
push
sub
lods
bound
in
mov
sub
mov
pop
in
jns
push
pop
pop
call
aas
stc
rep
out
aad
shrl
xchg
mov
mov
push
test
or
jp
jecxz
and
sbbl
push
sub
out
cld
mov
mov
dec
loop
bound
push
mov
push
jae
cmp
adc
pop
or
pop
inc
into
mov
andl
lods
divl
outsl
or
jle
nop
xor
jle
movsb
cmp
push
cltd
mov
mov
test
pop
or
mov
aaa
xchg
pop
imul
push
xor
addb
faddp
lds
sbb
aad
es
pop
xor
dec
lods
xchg
ja
js
out
and
mov
in
inc
dec
inc
sub
or
add
hlt
push
sbb
shrb
lock
sub
mov
test
lret
ret
test
pop
test
into
inc
mov
int3
pop
in
cld
inc
loope
lea
adc
outsb
clc
insl
xor
enter
mov
or
mov
mov
ret
outsl
call
in
pushl
xchg
xchg
adc
cmp
push
sbb
push
notb
jmp
adc
adc
jno
mov
and
movsl
ljmp
mov
les
cmp
push
int3
xor
js
jmp
mov
stos
fldl
add
or
inc
push
stos
orl
dec
mov
sbb
testb
or
mov
ja
ds
and
pop
or
add
push
cmc
cld
pop
mov
lea
pusha
xchg
ljmp
dec
pushf
jecxz
adc
test
pop
and
mov
push
cmp
mov
mov
mov
pusha
out
stos
fldenv
into
xor
push
jne
mov
cmpsb
mov
popa
lds
jg
jge
pop
cwtl
cmova
je
pop
out
inc
popa
mov
aad
ds
in
sbb
arpl
add
cmpsb
cmp
cmp
push
jmp
es
push
or
je
and
and
test
mov
adc
and
dec
push
add
push
or
das
pop
dec
sub
mov
ljmp
sub
addl
sub
cli
push
data16
jnp
mov
daa
stc
pop
sbb
rorb
cmc
jns
es
fwait
pop
mov
in
dec
shl
dec
fs
mov
aaa
bound
ds
insl
jo
loopne
cmp
mov
ret
mov
and
push
sub
aam
push
dec
arpl
mov
in
push
sub
or
orb
dec
and
int3
xchg
idivb
rol
xchg
out
and
or
or
or
jns
cmpsl
fucomp
mov
out
shlb
xchg
dec
cmp
jge
cmc
or
nop
mov
loop
repnz
mov
pop
and
push
push
or
mov
add
fnsave
cmp
out
ud0
in
popf
mov
scas
push
mov
fwait
mov
arpl
js
lret
adc
and
cmpsb
push
mov
out
add
shr
sti
cwtl
shrb
xchg
sub
leave
in
das
jecxz
ss
lcall
je
shll
into
sub
lea
movsb
imul
xchg
std
xor
mov
mov
mov
shll
orb
jl
mov
and
dec
sbb
jne
data16
push
or
nop
es
cmp
aas
add
inc
pop
stos
std
outsl
and
out
mov
test
mov
jmp
cmc
xchg
add
jb,pt
push
in
aas
push
ljmp
dec
repz
lods
aam
daa
out
adc
mov
and
outsb
imul
sbb
ljmp
cmpsb
je
mull
aam
adc
mov
mov
xchg
mov
out
loope
sti
imul
stos
shlb
mov
and
push
mov
push
andb
aam
dec
xchg
dec
mov
bound
fst
dec
mov
dec
and
dec
fstps
inc
es
mov
xchg
mov
das
inc
mov
dec
mov
in
inc
inc
loopne
cwtl
mov
dec
lcall
lds
pop
lods
pop
and
andb
jnp
adc
ja
mov
xor
xor
push
mov
frstor
sahf
xlat
jmp
neg
mov
es
jl
test
shrb
in
orb
jnp
inc
aad
pushf
test
sub
fimull
sub
jmp
sub
jg
shll
cmp
adc
sub
mov
inc
inc
add
mov
cmp
mov
cmp
mov
xchg
cs
ret
repz
nop
lock
dec
inc
jo
add
dec
mov
sub
outsb
mov
loope
adc
int
insb
xchg
leave
popa
cld
outsl
cmc
insl
jmp
popf
mov
setl
mov
rolb
in
adc
xor
pop
lret
push
dec
jmp
push
scas
daa
push
inc
test
sub
xor
scas
insl
mov
push
aad
fwait
dec
lods
movsb
add
stc
xor
pop
shl
xchg
pop
out
test
pop
or
jmp
divl
add
and
dec
push
into
push
outsb
xorl
cmc
or
icebp
subl
in
rcrb
adc
sbb
loop
pop
ret
jp
mov
lds
testb
add
adc
inc
enter
xchg
das
push
lcall
push
out
std
jbe
stos
shl
pop
sbb
push
mov
inc
fcmovbe
sub
pusha
or
cmc
mov
popf
add
test
mov
fiadds
xor
in
dec
inc
mov
repnz
out
xchg
repz
ret
dec
arpl
mov
fdivrl
pushfw
test
xchg
xor
fsubrl
inc
adcl
leave
bound
pop
pop
mov
insb
sarl
jecxz
sti
clc
jbe
fcoml
inc
pop
lock
mov
vpunpckhwd
iret
icebp
stos
mov
outsb
sub
mov
idivb
insb
pop
cmp
xchg
inc
pop
xor
pop
repz
dec
aaa
notl
jp
mov
sub
xor
sbb
test
orb
mov
mov
rolb
je
sub
fs
adc
push
and
mov
ret
out
push
lods
out
fwait
das
xchg
xlat
ss
mov
fsubs
out
in
xchg
xchg
inc
or
popf
inc
sbb
xchg
push
hlt
clc
and
out
lea
cmp
mov
mov
mov
mov
xchg
imull
jno
shll
ret
sbb
jg
dec
mov
push
mov
cmc
push
out
add
testb
jmp
aam
sahf
jne
mov
jns
aas
cwtl
xchg
mov
xchg
xor
out
popf
test
movsl
cmp
test
xor
cmp
das
inc
mov
pop
xor
mov
inc
stc
popa
and
mov
mov
add
xlat
gs
mov
xlat
pop
loopne
addr16
test
jl
lcall
pop
je
out
jns
clc
mov
xor
lea
adc
mov
lods
jp
movsb
sbb
inc
add
adc
and
mov
sub
popf
dec
dec
in
jmp
lret
jo
popa
scas
movsb
sarl
pushw
pop
mov
or
in
or
sbb
push
and
pop
xlat
fprem1
mov
stc
xchg
movsb
jge
or
shll
mov
sbb
lock
cmp
data16
pop
inc
sahf
orb
shll
and
outsb
or
out
jae
stos
jge
inc
je
xor
lods
jmp
sub
sub
ret
sbb
mul
mov
mov
xchg
xchg
or
sub
pop
mov
sbb
cwtl
gs
cmp
dec
stos
lock
and
lahf
mov
inc
in
test
jmp
jne
or
inc
add
adcl
pop
iret
xchg
in
test
or
pop
sbb
xchg
pop
ret
aad
loopne
pop
pop
dec
or
or
cmp
testl
push
or
out
inc
enter
dec
js
and
adc
cwtl
sbb
sti
dec
orb
repnz
in
stos
jl
pop
jbe
popf
fsubr
mov
popa
sub
sub
dec
adc
push
inc
test
aam
inc
mov
fisubs
dec
dec
or
lea
cld
in
pop
mov
xor
adc
cltd
test
ja
mov
test
mov
movsl
imul
loope
push
and
push
xchg
add
adc
stos
xor
or
cld
incb
pop
xor
aas
aam
sbb
add
leave
dec
fisubl
jle
jle
lcall
clc
mov
push
adcb
rolb
cli
sub
invd
icebp
jl
lock
push
scas
push
push
std
inc
dec
dec
out
mov
push
scas
repz
sbb
insb
popf
ret
mov
add
add
jae
push
in
sub
jae
cmp
popa
mov
cmp
lea
and
jg
test
sbb
push
dec
mov
fs
lea
nop
jecxz
dec
dec
and
sbbl
jecxz
add
loope
shlb
iret
sbb
popf
pop
mov
jle
add
dec
xchg
add
add
std
mov
jmp
push
lods
dec
faddl
and
mov
inc
fldt
mov
push
std
xor
scas
xchg
jo
movsl
loop
addl
jmp
xor
xchg
pop
lods
dec
cwtl
mov
scas
add
fsubp
mov
pop
mov
stc
test
cmpb
jmp
mov
xor
pop
add
push
jne
out
xchg
cmpsl
into
inc
xchg
push
in
in
adc
fstpl
push
lahf
mov
leave
scas
push
sahf
cmp
inc
jp
dec
dec
mov
arpl
or
movsl
dec
or
inc
inc
stos
inc
std
adc
sahf
fisttps
push
repz
sbb
dec
lds
js
dec
iret
leave
dec
int
dec
divb
jb
cmpsb
inc
xlat
adc
stc
cwtl
push
mov
fldl
pop
nop
mov
clc
xor
jae
pop
add
or
sarl
in
mov
sub
bound
clc
xchg
jns
mov
ss
outsl
cs
push
test
outsl
push
xchg
sbb
xor
cmc
jmp
out
mov
fcoml
push
jbe
out
sub
lahf
jo
shll
sti
icebp
orb
cmp
aad
mov
dec
pusha
into
sti
test
es
aam
sbb
add
jne
ljmp
mov
mov
andb
mov
jb
inc
sub
dec
pop
push
add
aas
cmp
pop
mov
ficomps
inc
std
cmp
loopne
pop
xlat
sub
into
loope
mov
js
dec
mov
xchg
sbb
cltd
push
mov
mov
ja
add
bound
into
cmp
fs
adc
mov
sub
mov
sti
cmp
sub
dec
pop
addl
sarb
sub
cmp
cmp
imul
decb
lods
mov
clc
xor
dec
rcll
dec
fildll
icebp
sbb
mov
ss
xchg
xchg
in
nop
cmpsb
adc
mov
movsb
push
fsubrs
inc
lahf
mov
xchg
cs
cmp
lods
clc
dec
add
dec
push
inc
scas
out
mov
adc
jp
mov
rorb
sbb
or
dec
lds
cmpb
out
fisttps
cmpsb
adc
lods
add
repz
stos
ds
fnstsw
jns
out
ja
and
mov
xchg
inc
fildl
loope
mov
gs
xor
mov
add
cmp
arpl
sbb
fwait
jge
js
jle
xchg
add
push
lret
pop
mov
push
orl
aam
pop
dec
loop
add
push
xor
jecxz
dec
mov
jne
jno
push
cmpsb
lock
xor
sub
pop
insb
scas
leave
repnz
sbb
jno
insl
ja
xchg
adc
sbb
pop
xor
jp
nop
dec
in
sbb
outsb
pop
aaa
adc
mov
or
inc
out
enter
mov
xchg
pusha
popa
or
dec
iret
mov
push
dec
aam
xchg
pop
dec
mov
gs
cmp
mov
adc
dec
mov
push
pop
stos
cmpsb
push
shl
in
subl
pop
pop
jbe
push
out
lret
jne
dec
add
mov
shrl
outsl
out
xchg
mov
dec
sub
inc
push
jnp
mov
lock
js
ja
pop
out
push
sbb
jg
cld
jne
insb
mov
nop
fbstp
jo
inc
xchg
push
and
xchg
pushf
xchg
add
and
popf
stc
test
jecxz
cwtl
arpl
mov
in
mov
sti
jne
push
and
cmc
fisubrs
ds
sar
mov
jns
cs
popa
ds
sub
mov
mov
dec
sbb
mov
das
cmp
int3
shrb
in
popf
push
xor
imul
sti
jbe
out
sar
aaa
or
adc
pop
lret
fnstenv
cmp
addw
xchg
std
mov
incb
addr16
mov
imulb
or
scas
inc
in
rcll
dec
or
xchg
sub
into
xor
sbb
shrb
push
lock
je
pop
imul
lock
jns
inc
mov
rclb
or
jle
int
sub
lods
xchg
frndint
outsl
iret
mov
add
pop
cs
loopne
jl
loope
lods
sub
add
dec
les
mov
jle
subl
into
movsb
out
jb
loopne
popa
orl
xchg
pushf
out
popa
jecxz
enter
pop
mov
aam
inc
out
gs
cwtl
inc
aad
and
rorl
mov
std
call
mov
sahf
cs
jbe
in
inc
iret
xorb
or
inc
jge
add
loope
xlat
and
dec
xor
hlt
mov
inc
jo
ja
adc
add
jnp
fdivl
xorl
pop
cmpsb
in
xchg
add
arpl
pop
xor
pop
dec
sahf
orb
sub
outsl
jmp
jo
pop
push
stos
mov
stos
sub
out
jns
add
sub
xchg
scas
daa
xor
or
mov
pop
call
shr
loop
inc
bound
add
inc
and
sbb
adc
xor
hlt
xor
pop
jbe
push
mov
mov
jb
xchg
add
jecxz
xchg
lea
je
sub
icebp
sti
ret
in
push
push
push
lods
or
push
testb
xchg
ss
out
lds
sti
aad
insl
lret
xchg
mov
outsl
dec
lods
mov
lock
punpckhdq
jb
ret
xchg
outsb
int3
decl
pop
inc
cmp
gs
lret
and
xchg
stos
mov
cs
push
je
inc
jns
and
psadbw
and
push
in
mov
cwtl
repz
data16
loopne
add
out
test
repz
icebp
sbb
mov
push
add
inc
rcrb
enter
dec
xchg
dec
push
xchg
lcall
jo
cltd
xchg
adc
inc
notl
mov
data16
mov
dec
adc
subb
jge
sub
call
xchg
adc
ds
test
mov
mov
arpl
rorb
xorl
cmp
inc
xchg
daa
xor
add
test
mov
lock
pop
icebp
cli
or
pop
mov
dec
push
aas
inc
jnp
rolb
jmp
push
xor
shlb
outsl
push
and
jbe
sbb
lds
movsb
int3
mov
pop
les
stos
mov
push
stos
add
imul
jmp
xor
adc
fs
mov
pop
cmp
mov
mov
dec
mov
repz
mov
push
arpl
push
addl
mov
push
jns
xchg
hlt
xchg
add
test
arpl
lahf
lret
je
or
push
or
out
fdivrs
xor
cwtl
mov
and
lock
repz
dec
and
and
add
ret
pop
shll
pusha
test
and
mov
je
sub
movhps
lcall
dec
or
push
add
in
leave
repnz
adc
and
aas
pop
push
lods
std
adc
lea
mov
jb
insb
mov
imul
insb
add
stos
rorl
sbb
or
ficoms
mov
loope
scas
jp
xor
out
test
mov
in
das
dec
sub
mov
loope
dec
out
jb
outsb
loope
out
and
lahf
push
fbld
into
fwait
jns
imul
push
cltd
inc
je
enter
fdivp
jae
sub
inc
xchg
shll
mov
movsb
cmc
mov
or
js
push
js
les
inc
push
lods
stc
je
adc
test
movsb
sub
mov
sub
fists
iret
imul
and
mov
mov
jno
cmc
lret
hlt
or
dec
aaa
mov
pop
pop
andb
loop
addr16
pop
mov
adc
out
push
dec
dec
inc
mov
out
fisttpll
sbb
dec
jmp
xor
mov
pop
pop
fisubrl
cmp
cmp
add
add
push
popf
mov
mov
xchg
mov
repnz
ficomps
sbb
or
arpl
sub
sahf
call
andl
mov
ljmp
in
rclb
mov
loop
xchg
sti
sub
xchg
sub
push
sub
jle
jne
dec
push
cmp
dec
dec
pop
aas
dec
nop
sub
jno
inc
sub
mov
andl
sub
repnz
ffreep
xlat
xchg
xor
cmpsb
fidivrs
add
call
stos
gs
xor
sahf
jge
cmc
faddl
lret
and
or
loop
jae
adc
mov
insb
dec
dec
imul
stc
ljmp
aad
jb
les
mov
lock
popa
mov
xchg
jle
and
xchg
sub
sbbl
mov
lret
in
cmpl
sub
into
and
mov
push
sub
lret
stc
data16
sbb
out
sbb
xor
cli
cmp
sub
popl
loopne
test
popa
dec
test
xor
xchg
mov
or
jmp
inc
inc
mov
sbb
adc
sbb
pop
sbb
add
mov
jecxz
mov
jb
dec
adc
or
je
pop
pop
sbb
arpl
cmp
xchg
push
in
fistpl
movsb
mov
sub
int3
lret
addr16
mov
mov
int3
pinsrw
divb
jge
sahf
rcrb
out
push
xor
pop
pop
fs
dec
clc
push
mov
scas
dec
lods
lds
xlat
mov
mov
and
inc
mov
push
mov
adc
adc
mov
xor
nop
cmp
fmul
xor
pop
stos
test
sarb
enter
int3
lret
stc
movsb
inc
push
jne
and
insb
insl
cltd
adcl
push
add
imul
test
push
cmp
leave
mov
lcall
fwait
dec
dec
xchg
xchg
jo
mov
cmp
aam
incl
cmp
insl
jno
in
pop
cltd
std
sub
lods
in
mov
js
cmp
mov
mov
xchg
mov
adc
aad
cs
insl
les
jmp
jo
loope
out
sbb
xor
shlb
inc
les
pop
jnp
movsl
xlat
outsb
push
int
orl
adc
push
es
lret
sub
lods
pop
repnz
ret
cmc
pop
mov
in
fadd
loop
push
mov
cmp
mov
mov
sbb
push
sbb
add
mov
xor
pusha
icebp
add
sbb
lods
lods
inc
cmp
jae
gs
sahf
int3
sbb
cmp
pop
cmp
or
xor
repnz
addr16
inc
fwait
jne
pusha
negl
mov
jle
lods
xchg
mov
leave
and
sbb
xor
std
push
cmp
ja
cmc
fidivrl
inc
xchg
aaa
lds
out
movsb
mov
jbe
push
test
mulb
lds
sahf
pusha
testl
jle
bound
dec
mov
cli
sub
insb
and
jecxz
xrelease
pop
sub
clc
cwtl
jp
push
sbb
cli
cmp
pop
jl
popf
jne
push
mov
add
insb
adc
pop
test
or
xorb
int3
mov
ds
add
mov
loopne
pop
adc
imul
cmp
insl
lods
jae
les
pop
addr16
dec
mov
adc
sub
mov
ret
xchg
lea
out
xchg
jne
add
lahf
stos
inc
jg
cmp
sbb
cmp
loope
rorb
sub
test
sub
jnp
enter
xchg
push
jle
mov
xor
adc
ret
mov
cmp
es
mov
pop
xchg
or
inc
loop
rcll
loope
insb
adc
movsl
jae
jge
add
adc
cwtl
fwait
repnz
xchg
and
fldt
dec
cld
in
mov
pusha
add
rcrl
add
adc
cmc
insl
scas
es
daa
mov
dec
mov
test
leave
in
mov
xchg
push
adc
xchg
pop
iret
jae
jl
cmc
mov
mov
mov
xchg
jecxz
xor
sub
push
aas
cmp
jns
mov
cmp
stos
jmp
xchg
pop
out
clc
jl
fisubs
mov
cmp
and
cmp
mov
push
out
mov
mov
jmp
aaa
jno
aaa
insb
nop
jnp
sub
out
dec
cmp
jbe
sahf
loop
ja
jmp
xchg
shrb
mov
or
roll
popa
pop
xchg
sbb
mov
insb
or
arpl
test
sahf
pop
push
xor
pop
jbe
in
repnz
cwtl
inc
mov
xor
sub
inc
cli
pop
imul
js
push
aas
dec
cli
in
les
sbb
stos
sarb
loop,pn
xor
adc
cmp
lods
add
and
loop
or
scas
mov
gs
stos
xchg
mov
gs
sbb
pop
test
aam
mov
sbb
mov
lds
fists
cmc
inc
fdivs
or
ficoms
inc
test
out
cmp
dec
stos
cmp
sti
cmp
popf
inc
dec
dec
push
xchg
push
push
out
xor
or
mov
divb
cltd
in
rol
xchg
and
and
cmp
xor
mov
cmpsl
fldl
cmpsl
pop
inc
cltd
inc
repnz
mov
and
add
scas
orb
cwtl
mov
or
jmp
mov
pop
out
dec
xchg
shlb
pushl
push
inc
lds
mov
push
adcl
test
mov
and
add
fcoms
sub
jo
ds
sbb
inc
popf
es
movsb
inc
cmc
inc
sbb
popa
pop
insb
push
pop
cltd
jae
decl
mov
jae
mov
xor
les
mov
rorb
pop
imul
mov
pop
xor
notl
mov
arpl
pushf
sbb
shr
pop
sti
es
xchg
dec
rol
imul
int
daa
mov
sbb
mov
push
pop
sub
xchg
dec
aam
add
sbb
ja
out
or
insb
mov
jns
test
jo
inc
inc
in
lods
inc
out
mov
dec
and
xchg
daa
fimuls
in
jbe
inc
sahf
aad
push
int
int
pop
xchg
inc
dec
mov
mov
xchg
xchg
dec
sub
decl
aad
mov
imul
mov
fwait
lret
aad
lock
xor
vpsllw
jecxz
xchg
cs
enter
es
and
inc
push
call
stos
enter
cmp
das
jg
cmp
shr
jb
jae
pop
repnz
xchg
call
or
add
insl
sub
aas
add
jecxz
clc
and
sbb
jb,pt
mov
scas
sbb
jno
rolb
xor
and
jle
xor
mov
divl
inc
bound
mov
lock
mov
push
push
dec
push
mov
jne
and
or
push
cltd
xor
sub
lret
data16
pop
push
push
movl
inc
mov
sbb
jne
xchg
dec
lcall
jge
dec
dec
fsubrs
insl
dec
js
and
loope
jae
sbb
mov
sar
mov
dec
jnp
or
arpl
mov
std
jecxz
mov
int3
icebp
test
cmp
xchg
sarb
cld
imul
sub
stos
insl
scas
je
push
sub
stos
cwtl
xor
mov
test
out
xlat
xor
push
scas
and
sub
inc
lret
xor
popa
cmp
mov
fildl
add
mov
shlb
outsb
sbb
jns
pop
dec
mov
sub
mov
ret
frstor
inc
arpl
in
lea
mov
js
add
out
xchg
out
repz
shrl
inc
add
add
add
cmp
pop
mov
mov
mov
ret
cmpsb
mov
je
mov
inc
push
arpl
lds
call
and
add
adc
loope
nop
lret
cmp
bound
ret
cmc
cmp
aaa
sbb
push
xor
jg
add
testl
mov
mov
adc
out
pop
mov
inc
lahf
shl
shr
pop
mov
mov
add
movsl
jp
sub
scas
pop
cmc
inc
dec
mov
mov
cmpsb
les
pushf
mov
hlt
push
mov
jno
scas
jp
loope
mov
inc
push
loopne
sub
cld
aaa
jecxz
pop
je
mov
sub
mov
cmpsl
inc
rcll
dec
neg
aad
sti
jecxz
dec
pop
xchg
mov
sbb
mov
xchg
test
popa
xor
sub
jmp
xor
in
cmp
leave
pop
std
daa
stos
inc
test
jge
ds
mov
sbb
sbb
and
add
test
lea
enter
jmp
repnz
in
lods
outsl
cli
cs
pop
sub
lret
lods
mov
lret
or
sub
sbb
lret
xlat
or
mov
into
fsubp
lods
mov
pop
add
andl
pushf
or
xchg
xchg
rolb
repnz
pusha
or
or
pop
sbb
xchg
ret
push
adc
movsb
pop
flds
or
xor
cmpl
mov
scas
ret
inc
pop
je
mov
je
xchg
cltd
negl
dec
sub
push
adc
xchg
stos
and
jb
dec
jge
mov
sub
lods
outsl
sub
sub
arpl
cmp
mov
out
xchg
push
insl
stos
adc
clc
and
or
test
jbe
adcb
xchg
mov
ret
lahf
aad
mov
push
push
add
adc
pop
lock
adc
mov
xchg
das
cmp
xchg
jge
movsb
dec
mov
jl
dec
lcall
fistpll
cmpsb
lret
mov
and
xchg
fdivs
mov
jbe
stc
sub
pop
add
mov
fmulp
iret
jb
inc
out
andl
sbbl
mov
ja
shr
mov
ficomps
mov
repz
out
jns
int
xchg
stos
jecxz
into
jne
cli
das
xor
mov
out
add
mov
loop
jecxz
lcall
jecxz
cmp
aad
or
xor
notl
jle
and
nop
and
add
cmp
movsb
movb
mov
cwtl
jecxz
xor
lahf
sahf
test
fwait
aas
mov
dec
pop
shrb
fbstp
test
xchg
data16
js
incb
jge
inc
stos
fs
out
loopne
int3
adc
stc
push
push
aaa
hlt
xor
adc
movsb
mov
mov
jne
cmp
pop
mov
nop
mov
mov
idivl
out
xchg
lret
shll
push
pop
aam
mov
sbb
dec
pushf
push
lock
inc
xor
insl
cltd
sti
sti
es
cmp
mov
cmp
adc
fimuls
prefetch
push
mov
xor
cmpl
cmp
push
and
dec
gs
popa
xlat
xor
pop
imul
pop
cmp
pop
movsl
cmp
push
xchg
call
pop
push
mov
std
inc
test
test
jl
out
mov
fnstsw
sub
std
mov
lock
pusha
xchg
out
inc
popa
add
lds
and
xlat
mov
mov
dec
shlb
mov
sub
push
push
xor
movsl
and
sub
aaa
mov
lods
call
out
push
and
xchg
pop
lcall
cmp
push
es
mov
fdivrl
xlat
mov
hlt
jl
adc
cld
loop
jb
cmp
inc
dec
cmp
jno
fistpl
das
adc
inc
stc
pop
testb
js
mov
outsb
scas
and
pop
sub
mov
lock
fcompl
enter
loopne
icebp
sahf
jle
rclb
aad
inc
adc
mov
inc
adc
cmpsb
push
iret
loop
jne
lds
dec
aad
xchg
ss
stc
cmpsl
js
in
cld
or
nop
push
ds
outsl
shl
mov
leave
test
pop
cmc
pop
nop
xchg
adc
ss
out
dec
out
dec
or
jp
lahf
pop
ja
fs
aad
psadbw
loopne
stos
lds
sub
mov
xchg
pop
stos
es
daa
push
dec
jno
mov
lods
es
adc
mov
lock
and
xchg
cmpsb
pusha
cmp
out
scas
xchg
icebp
dec
mov
lock
push
das
outsb
iret
pusha
pop
lcall
das
fidivl
scas
jge
push
push
mov
out
test
push
jecxz
cld
and
fs
clc
lret
in
hlt
icebp
sbb
stos
add
mov
dec
sbb
leave
sahf
stos
ja
push
rolb
add
or
stc
fstpl
sub
out
jmp
push
jno
dec
push
inc
mov
pop
loope
outsb
inc
mov
xor
pop
inc
cmpsl
mov
push
out
or
xchg
js
ror
jge
mov
pop
xor
scas
shlb
rcr
lds
icebp
shrb
mov
mov
iret
xchg
xchg
mov
ljmp
es
add
pusha
or
in
or
push
xor
ljmp
sbb
nop
sub
mov
push
push
fwait
and
test
adc
testl
fdivl
and
pop
dec
popf
push
mov
std
lret
ljmp
pop
jne
dec
hlt
sub
lds
inc
sbb
xchg
je
stc
push
xchg
pushf
push
jnp
dec
dec
sbb
cmp
mov
ret
call
std
add
xor
jbe
jge
inc
flds
testb
adc
add
push
dec
and
pushf
dec
push
stc
xlat
stc
inc
cli
out
xchg
jns
test
mov
fs
xchg
jg
test
mov
sbb
movsl
sbb
repz
push
mov
pop
inc
negl
xchg
dec
pop
adc
aad
push
sbb
xchg
dec
mov
sbbb
fnsave
add
xchg
inc
push
call
ror
push
inc
push
xchg
dec
inc
jmp
fistl
imul
lds
jno
add
jbe
xor
sbb
jl
ss
inc
inc
rorb
jge
add
daa
inc
mov
push
and
push
dec
jle
inc
loopne
lods
xchg
mov
gs
mov
pop
movsb
xchg
int3
add
std
nop
mov
shl
mov
xor
sahf
xchg
add
dec
sub
ret
je
add
mov
test
out
xchg
cmc
mov
movsb
dec
jl
add
jge
js
push
ljmp
jmp
sbb
and
mov
mov
inc
add
ljmp
rol
pop
or
scas
dec
cltd
inc
lret
fimuls
pusha
or
mov
jg
in
sub
xor
push
mov
lds
pop
outsl
pusha
out
jno
pop
pop
cmc
lahf
mulb
adc
popa
push
pushf
nopl
cmp
sbb
rclb
pusha
cwtl
pop
sti
xchg
dec
xchg
and
xor
iret
fistps
shrl
xchg
push
outsb
dec
shr
orb
or
mov
es
shrl
aad
dec
ss
out
cli
cmp
imull
or
or
dec
cld
loopne
sub
sub
cmc
sarb
sti
sbb
dec
out
mov
cmp
sbb
aaa
adc
lahf
into
and
mov
xor
test
loope
mov
inc
pop
outsl
sub
jo
mov
sub
in
cmp
ss
sbb
jp
jo
aas
and
jno
dec
bound
add
iret
lds
fmuls
cltd
in
stos
inc
and
test
out
adc
jmp
and
adc
in
push
leave
insl
idivl
mov
loop
pop
jno
ret
jge
mov
imul
bnd
xchg
and
movsb
out
into
aam
arpl
cmc
cmp
inc
mov
pop
sahf
mov
sbb
je
not
add
or
hlt
aas
popf
and
inc
lahf
dec
inc
cmpsl
cmp
jo
pop
cmc
dec
pop
dec
ja
push
fistpll
gs
fcoms
or
fs
ja
dec
pop
xor
adcl
xchg
or
arpl
nop
adc
in
jl
push
pop
in
clc
or
push
stc
jp
sbb
test
stos
xchg
lods
inc
enter
jne
dec
xchg
add
jne
jns
in
push
ffree
out
xchg
sbb
lock
push
test
loopne
in
insb
jle
mov
inc
fildll
fwait
int3
adc
xchg
pop
cmpsb
mov
mov
sbb
hlt
cmp
out
cld
sub
xor
les
mov
gs
pop
idiv
sub
or
adc
repnz
mov
adc
jmp
cmp
sbb
test
lret
es
mov
jb
pop
data16
xorb
in
pop
clc
in
insb
int3
pushf
mov
sbb
cld
dec
jmp
xchg
jp
hlt
add
or
loopne
roll
lret
dec
ds
mov
add
mov
es
jle
sbb
dec
cmc
nop
mov
push
jge
inc
cmc
shll
fisubl
lahf
mov
add
xchg
jge
adc
imul
dec
icebp
js
sbb
push
jge
mov
jno
ss
ret
inc
mov
ljmp
outsb
cmp
mov
dec
out
add
cmp
jo
ficoms
or
add
std
imul
sub
xchg
adc
lods
sub
xor
int3
sub
arpl
mov
add
outsb
aam
adcb
inc
xlat
add
push
pop
fcoml
cmpsl
out
loope
into
fsubl
xchg
sub
adc
push
stos
js
jb
add
adc
scas
stc
nop
loopne
rorl
mov
sbb
in
int3
pop
sahf
mov
cli
and
and
movsb
mov
dec
push
inc
pop
sbbl
fnstenv
jb
sbb
push
xchg
mov
outsb
xor
outsl
inc
fcmovne
adc
rorb
mov
and
lea
gs
pusha
mov
push
push
push
ljmp
insb
adc
adc
sub
mov
out
mov
lahf
filds
add
mov
cmp
add
mov
cli
mov
jae
test
push
popa
mov
sub
mov
loop
cwtl
push
push
cmp
jg
lahf
mov
nop
and
xor
add
adc
mov
fisubl
cmp
ja
lea
add
lret
sbb
fdivl
icebp
fs
add
mov
push
mov
cld
jae
lods
loop
dec
adc
or
or
mov
sbb
popa
sub
xchg
nop
mov
and
adc
mov
dec
fnop
jmp
loope
jge
xchg
mov
pop
add
push
sbb
cmp
and
jns
mov
movsb
push
push
adc
jmp
jecxz
mov
pop
popa
clc
dec
mov
aas
push
mov
cmpsb
push
pop
mov
testb
push
jle
cmc
fidivs
inc
sbb
adc
inc
push
mov
push
imul
add
dec
ja
lds
mov
out
dec
push
inc
aaa
stc
outsl
sub
lock
jp
in
lcall
xor
fidivrl
mov
nop
xchg
inc
push
inc
mov
mov
push
adc
jb
mov
sarb
aaa
add
adc
jb
fsubrs
subl
sub
test
jmp
sbbl
sub
push
push
insl
addr16
cwtl
nop
scas
jg
imul
sub
sbb
aam
xchg
inc
idivb
loop
pushf
bnd
pop
cmp
dec
mov
adc
in
dec
xchg
mov
shll
shll
mov
sbb
or
scas
sub
adc
inc
sbb
popa
xchg
xchg
sub
cmpsl
lods
std
push
cmp
sub
jns
ret
mov
push
fsubrl
or
add
push
into
sbb
sbb
test
rclb
stos
jl
lahf
in
dec
clc
popl
sub
mov
loope
lahf
pop
ret
xchg
mov
rol
jno
repz
lea
into
andl
arpl
pop
ss
pusha
and
lret
popa
mov
fucomi
cmp
iret
cmpsb
cmp
dec
scas
shll
imul
sub
testb
rcrl
pop
cmpl
mov
pop
fwait
ss
mov
es
dec
fwait
inc
test
xchg
pop
sbb
and
sbb
scas
mov
mov
mov
mov
fsts
mov
lret
mov
int
cmp
mov
inc
in
xor
inc
inc
subl
push
jl
mov
and
mov
fwait
scas
std
outsb
jp
mov
cli
loop
dec
mov
dec
clc
adc
and
jp
mov
les
test
push
xor
cmc
jg
out
movsl
cld
cmpsl
xor
lret
pushf
fs
push
les
nop
in
add
out
xchg
outsl
sbb
or
mov
or
or
pop
addr16
pop
outsb
and
sarl
mov
arpl
test
jno
mov
insl
ja
leave
lret
mov
jnp
enter
insb
test
dec
fmull
out
shrb
popf
dec
shrl
cmp
inc
dec
xor
mov
loopne
pop
fwait
jnp
js
lods
mov
in
xor
inc
stc
test
xor
int3
loopne
imul
inc
stos
loope
add
sar
jo
dec
out
push
fdivr
sub
insl
mov
inc
or
filds
lret
push
orb
cmc
xchg
shlb
lods
scas
push
loope
inc
cs
or
jne
shrl
mov
rcrl
add
mov
frstor
scas
lret
add
xor
int
ficoml
cmp
movsl
sbb
mov
inc
and
or
cmp
push
or
or
mov
popa
sub
nop
icebp
out
inc
inc
pushf
adc
popf
sbb
aad
xor
pop
mov
adc
lods
adc
fsubrp
push
sub
out
push
push
or
mov
inc
movsb
jno
sub
in
or
xor
sbb
test
add
inc
testl
popa
mov
inc
mov
inc
jecxz
ja
push
mov
divb
shlb
cmp
cmp
push
pop
test
mov
fadd
sub
icebp
mov
and
sbb
xchg
shlb
test
jle
fdivrl
add
sub
cltd
gs
sub
shl
divl
sub
ss
lods
mov
mov
dec
xchg
ss
movsl
loope
xlat
fidivrl
sub
push
and
xor
sbbb
add
jmpw
into
push
ret
jg
xor
dec
loope
xor
pop
inc
adc
jns
lea
stos
cmp
test
test
jle
into
clc
inc
add
test
ds
es
pushf
pop
das
pminsw
sahf
jne
pop
jb
stos
lret
adcl
sbb
das
adc
add
loopne
mov
mov
std
xchg
mov
das
stos
dec
dec
into
adcb
arpl
jb
nop
loopne
mov
cmp
inc
int
out
push
das
cwtl
jns
sbb
sub
push
and
rclb
mov
lret
dec
inc
cmp
push
jmp
push
bound
pop
xor
push
loop
in
pop
xor
inc
jl
push
imul
jne
outsb
cmpsb
imul
mov
mov
fldenv
mov
outsl
std
loop
jno
pop
loop
cs
lods
or
dec
xchg
int
dec
mov
fsubs
adc
mov
mov
fidivl
ss
push
stos
clc
or
mov
sub
cmc
sub
jge
pop
jmp
pop
pop
push
outsb
jmp
sti
ficoms
jge
jnp
or
stos
adc
mov
and
arpl
jl
test
dec
jbe
mov
cli
cmpb
mov
pop
xchg
xor
adc
push
icebp
shl
jbe
subb
or
push
mov
mov
cmp
push
inc
fsubrl
adc
loopne
xor
mov
call
pop
lods
daa
jb
jmp
or
aaa
push
cs
adc
pop
mov
stc
sahf
or
call
pop
mov
pop
and
aad
add
les
adc
xlat
pop
cmp
negl
js
cli
leave
pop
fsubs
push
inc
cmpsb
stc
out
xlat
mov
add
sahf
mov
and
inc
std
push
mov
mov
ret
shl
cmp
repz
or
jo
inc
xchg
imul
daa
xchg
daa
icebp
popf
stos
or
adc
js
add
push
push
aas
in
jg
in
aad
test
lret
inc
das
mov
xchg
sub
pop
repnz
add
andb
pop
iret
movsl
mov
lret
dec
push
mov
aam
push
fwait
mov
dec
repz
test
inc
das
jae
dec
dec
cmp
push
movsb
push
in
dec
sbb
add
sti
cmp
les
and
add
es
out
or
cmp
cmp
jbe
mov
lea
ja
add
mov
stos
inc
sub
cmp
sahf
leave
pusha
rcr
mov
jle
mov
mov
mov
arpl
sbbl
test
cmp
mov
or
lret
shll
lret
lcall
mov
mov
orl
xchg
out
cmp
cwtl
jmp
setb
ja
js
push
lahf
cld
in
iret
push
push
es
cmp
inc
dec
or
dec
and
inc
mov
jg
inc
mov
lahf
pop
push
nop
cmc
push
in
outsb
mov
sti
adc
or
mov
das
sub
outsl
adcb
jbe
xchg
aas
mov
pop
addr16
sbb
mov
push
add
adc
pop
sbb
cmpsb
dec
sbbb
mov
lods
inc
push
mov
das
push
lret
xchg
frstor
sub
cmpsb
scas
dec
pop
hlt
dec
lods
cltd
out
jne
jnp
enter
pusha
call
xchg
add
adc
ror
test
mov
shl
loop
aas
pop
sub
adc
inc
movsl
or
and
dec
dec
add
pop
ret
or
ljmp
ljmp
rcr
xchg
nop
lock
lods
and
int
lods
jo
add
dec
stos
mov
inc
or
test
dec
imul
iret
dec
dec
cmpsl
movsl
lock
cmp
add
xchg
lahf
aam
mov
jnp
outsl
and
lea
insb
dec
mov
into
mov
iret
mov
push
push
shll
sub
bound
mov
sub
leave
sub
push
push
cmpsl
fbld
sbb
scas
loop
enter
sbb
xor
mov
jbe
call
andb
add
fcomps
jl
scas
adc
inc
pop
mov
jmp
fidivs
mov
leave
mov
aad
xor
mov
inc
xorb
xor
arpl
cmpsl
cld
outsl
loop
dec
sarl
shr
fcmovb
mov
or
mov
mov
cmpsb
leave
xchg
in
stos
xchg
pop
mov
fisubs
fwait
lret
add
sub
xchg
sar
lcall
in
call
inc
or
arpl
xchg
test
cltd
mov
repz
rorb
lret
lahf
pop
cmc
adc
adcb
sub
in
xor
out
sbb
xor
push
cmpsb
pop
mov
cs
mov
sbb
adc
jne
pop
cmpsl
cmc
shll
add
scas
inc
stos
arpl
mov
bound
sbb
cmp
mov
ret
jb
push
sbb
iret
jno
cmpsl
leave
add
aad
das
fsubrl
mov
or
mov
aas
push
xchg
sub
sbb
mov
sub
movsb
pushf
lcall
and
rcr
pop
insw
mov
insb
xchg
dec
or
dec
arpl
inc
and
pop
xchg
inc
arpl
inc
aas
out
imul
ja
xchg
cmp
xor
cld
sub
or
mov
cmp
aaa
jnp
in
imul
ja
dec
pop
cmc
andb
fimuls
call
ret
lahf
jb
pop
xchg
and
sti
icebp
mov
mov
xor
xor
mov
fnstenv
push
xlat
js
xchg
inc
ret
lcall
mov
test
push
add
and
add
roll
sub
in
ja
jno
aas
outsb
jbe
fildl
xor
inc
and
stc
int
out
xor
fnstenv
push
mov
pusha
adc
push
es
sub
aaa
movsb
jl
jmp
pusha
dec
mov
pop
loope
gs
pushf
gs
xor
mov
inc
or
or
adc
lret
ja
mov
std
xchg
addl
xor
jmp
jnp
pop
dec
sbb
jb
pop
scas
fwait
xchg
cmc
repnz
mov
sbb
arpl
jp
in
jbe
mov
out
and
fs
jmp
adc
in
out
add
mov
mov
xlat
cmpl
in
add
dec
mov
jne
in
cmp
add
scas
sub
hlt
mov
push
dec
addr16
lea
xchg
or
lret
popa
mov
inc
push
or
aaa
leave
pop
dec
adc
pop
mov
js
and
outsb
sahf
ss
ret
or
mov
mov
pop
cmp
into
movsb
aam
syscall
repz
mov
sahf
rcrl
mov
pop
add
fnsave
ret
xchg
push
xor
enter
cltd
subb
sbb
push
leave
and
or
dec
mov
outsb
push
mov
xorb
xchg
lcall
stos
scas
xor
popf
insb
mov
sbb
mov
adc
hlt
fwait
push
inc
shlb
and
stc
add
dec
repnz
jp
dec
fldt
mov
mov
add
adc
enter
push
icebp
pushl
cld
sub
dec
ficoms
mov
cmp
sahf
push
data16
sbb
arpl
daa
rcll
outsb
adc
push
add
mov
fstpl
into
inc
xchg
and
xor
stos
inc
shll
inc
mov
arpl
push
and
mov
fstpt
mov
pop
cmc
add
pop
dec
fucomi
subl
or
sub
mov
jns
pop
jbe
cmpsl
push
repz
xchg
sub
decb
cmpsb
pop
xchg
insb
iret
mov
test
and
aad
imul
cli
mov
xchg
mov
cmp
xchg
dec
imul
ljmp
outsb
or
inc
movsl
jle
xor
movsl
fisubrs
mov
add
out
in
jge
lret
test
adc
pop
mov
mov
mov
pop
stos
cmp
dec
fcmovne
mov
lods
hlt
xchg
or
fs
inc
add
arpl
xchg
setnp
sub
mov
sbb
sti
pusha
insb
sub
sub
jmp
rcl
adc
cmp
xchg
jno,pn
push
dec
pop
std
push
in
add
jns
daa
imul
nop
loopne
shll
inc
sbb
ja
call
pop
shr
out
add
mov
or
mov
test
lods
pop
or
and
cs
xchg
xchg
lcall
shl
mov
push
mov
or
aad
adc
cmp
sbb
cmp
push
scas
pop
push
or
sub
loope
nop
adc
pop
jg
xlat
mov
sub
jae
dec
aad
jmp
ljmp
pop
movb
imull
inc
fsubl
test
jle
pop
test
dec
flds
dec
fistl
mov
stc
pop
rcrb
add
jle
inc
cmp
and
frstor
rcl
fcomip
adc
fstpt
pop
out
mov
call
pushf
scas
ret
xchg
cmp
fidivs
nop
das
movsb
inc
popa
mov
mov
insl
inc
cwtl
aaa
dec
and
arpl
or
shrl
daa
adcl
dec
xchg
jmp
into
gs
fdivrl
jne
or
inc
jl
mov
push
or
es
or
pop
cmp
fs
fcoml
sub
cmp
cmp
pop
gs
and
mov
fidivl
repnz
sti
popf
adc
test
mov
test
fwait
lock
mov
aas
push
loope
mov
mov
sahf
fldl
data16
jl
mov
inc
inc
jnp
dec
dec
mov
aaa
int
movsb
mov
push
icebp
cs
loope
push
mov
add
cld
mov
leave
pop
idiv
push
cwtl
test
push
lds
push
and
test
push
push
aas
rol
and
daa
int3
mov
repnz
jb
jmp
and
push
xchg
xchg
push
outsl
leave
cmc
data16
testl
aas
lcall
pop
es
sub
popa
jnp
inc
cmp
jge
aas
xchg
sti
mov
add
dec
and
inc
nop
dec
xor
pop
loop
push
mov
aam
ljmp
sbb
and
jge
popa
xor
pop
mov
mov
pusha
xchg
xchg
into
addl
cmp
cmp
scas
roll
repnz
stos
cs
into
enter
fcmovbe
and
jo
outsl
push
cmpsb
jo
dec
sahf
inc
xchg
sub
dec
ret
dec
and
in
sub
or
mov
inc
cmp
dec
xchg
mov
sub
push
loope
add
aaa
mov
adcb
lret
cmp
or
ficoml
rorl
xor
sahf
popa
clc
shlb
jg
out
mov
out
inc
jge
je
insl
lahf
dec
jno
inc
rcl
roll
das
jns
xchg
jae
pop
sub
and
jl
call
dec
and
inc
xchg
pop
outsb
xchg
ja
in
imul
lcall
sbb
in
lcall
imul
mov
js
mov
loop
inc
scas
and
mov
and
jecxz
jg
or
dec
dec
mov
iret
jp
pop
dec
movsb
pop
subl
add
push
popa
adcb
fidivl
push
xlat
adc
cltd
jb
jge
orb
nop
pop
sbb
pop
push
lock
std
push
mov
jmp
xor
lret
add
push
ljmp
cmc
mov
or
into
arpl
mov
inc
cmp
lcall
test
sbb
and
and
popa
cmp
cltd
jmp
or
xchg
cmc
fidivs
mov
jge
xchg
movsb
jecxz
shl
mov
loop
ds
add
pop
jae
push
fwait
notb
fmull
sbb
aas
sbb
inc
daa
hlt
xchg
lcall
pop
xchg
dec
pop
sub
pop
sub
dec
aad
notl
sti
add
xor
imul
fdecstp
mov
xor
std
or
and
cmpsb
sarb
imul
out
add
cmp
cmp
push
div
jae
mov
int
push
jg
and
insl
mov
sub
adc
push
fisubs
jo
xchg
sub
out
sub
xchg
dec
pop
mov
mov
in
push
jg
lret
cmpsb
push
rclb
popf
push
xor
lods
out
ficoms
pop
sbb
inc
loopne
push
or
jae
je
pop
shld
sub
jg
dec
pop
cmc
jl
adc
and
add
mov
adc
xor
jle
call
aam
mov
loope
in
pop
push
and
test
jo
pop
push
cmp
jb
jne
shl
xchg
mulb
adc
jnp
mov
test
ret
sbb
movsb
fwait
icebp
shrb
lds
push
xor
xchg
mov
xchg
call
adc
out
lock
push
mull
lods
cs
sbb
add
clc
xchg
push
xor
dec
pop
dec
jns
ljmp
mov
xchg
xor
xchg
repnz
icebp
adc
mov
cmp
dec
push
movsb
ja
fstl
cmp
inc
in
repnz
aaa
sbb
mov
adc
imull
in
movsb
hlt
pop
cmp
lds
lcall
and
pop
jno
push
int
sahf
cmc
mulb
andl
lds
lret
mov
mov
lahf
bound
pushf
jg
add
xlat
or
jp
jmp
add
insl
rol
or
popf
and
jmp
rcl
mov
inc
cmpsb
push
mov
push
add
mov
xchg
xor
adc
aam
jg
xchg
insl
pushw
cmp
cmpsl
jle
mov
push
leave
sub
mov
hlt
pop
pop
mov
daa
rcll
mov
jne
sbb
dec
jg
jp
jg
lock
xor
ss
nop
inc
repnz
js
lcall
xor
popa
sbbb
jno
add
fildl
inc
outsl
jnp
daa
dec
loop
jno
cmpsb
int
shrb
push
or
and
pop
mov
push
orb
pop
or
repz
or
push
popf
bound
xor
shlb
push
popf
jo
int3
jg
sbb
mov
sbb
mov
aad
sbb
push
jbe
push
xor
inc
pop
andl
pop
movsb
out
iret
insb
mov
dec
or
lahf
and
mov
or
push
std
cltd
fisubs
jle
mov
test
cltd
test
mov
jnp
incl
adc
out
mov
xchg
sbb
sbbb
shlb
cmp
clc
sbb
adc
xchg
jne
sti
cmpsb
mov
aas
jnp
mov
aad
mov
inc
out
push
fidivrs
sub
sbb
loope
decb
mov
std
xlat
clc
and
loope
sbb
mov
xor
aam
fildll
cli
sbb
xlat
jno,pn
push
mov
loopne
cmp
sub
push
xor
fwait
inc
inc
test
sahf
jne
xlat
ss
ret
decb
daa
lcall
cmp
mov
push
add
pop
sbb
dec
push
das
sahf
mov
cmpsl
lds
rcrb
add
mov
outsb
mov
jmp
push
push
push
mov
ja
ss
sbb
pushf
dec
cltd
mov
fstpl
add
xor
inc
es
fldl
shll
test
xor
jb
pop
pushf
add
je
fstps
mov
iret
fstpl
es
fisttps
mov
cmp
adc
xor
and
xchg
adc
xchg
push
xor
fstpl
pop
push
xchg
cmp
or
lods
inc
sub
int
add
mov
pop
imul
cwtl
pushf
add
aas
je
dec
sub
cmp
dec
iret
dec
repz
mul
mov
ret
sbb
sub
test
or
cmp
aad
test
mov
add
out
mov
call
xor
push
lods
inc
cltd
fists
mov
mov
adcb
nop
daa
fwait
xchg
push
pop
imul
add
fs
inc
inc
outsl
loopne
ficoml
je
xlat
mov
jge
mov
or
jge
ret
sub
push
fcomps
push
adcb
xor
xor
arpl
push
pop
push
fsubr
cmp
fs
dec
jnp
cmp
fs
xchg
iret
pushf
stc
or
jmp
orl
fidivrl
or
and
mov
or
sub
mov
in
mov
loope
aam
in
mov
push
fadds
sub
jle
ljmp
push
add
pop
lahf
sub
in
mov
jns
mov
push
jp
push
ljmp
pop
mov
add
out
pop
adc
nop
stos
insl
test
aad
xchg
das
ljmp
and
mov
arpl
and
push
mov
mov
es
loope
std
out
pusha
andb
fstl
xor
push
push
jl
test
sbb
mov
scas
out
movsl
sahf
pop
dec
lods
shl
add
push
mov
sarl
jmp
fstpt
and
lds
ljmp
inc
mov
gs
fidivrs
mov
add
aas
insb
pop
cmp
mov
pop
pop
mov
lea
inc
adc
ljmp
loope
or
dec
cmp
jne
sbb
mov
fdiv
std
leave
out
push
pop
mov
jecxz
xor
mov
hlt
out
jle
sbb
push
jne
pop
jl
scas
inc
jl
movb
fbld
and
mov
add
or
xchg
push
mov
in
arpl
andnps
pop
xchg
xchg
sarb
popf
adc
inc
or
lea
push
dec
add
aad
shrl
and
stc
lods
fisubs
mov
in
ror
mov
pop
dec
jbe
pop
int
push
xchg
gs
inc
psllq
sub
pop
rcrb
mov
add
inc
adcl
or
push
xchg
adc
gs
add
xchg
aaa
push
adc
adc
idivl
scas
imul
and
xor
das
imul
out
ret
outsb
xor
in
popf
lods
mov
dec
cmp
xorb
test
outsb
pop
dec
call
fwait
loop
cwtl
mov
loope
mov
sub
mov
fbstp
cld
dec
test
cmp
mov
out
xor
fidivrl
cmp
mov
std
xor
push
ss
insb
xchg
loopne
and
call
mov
pop
or
test
nop
cmp
push
icebp
imull
mov
add
aas
pop
or
repnz
popf
fidivl
incb
test
or
lock
stos
add
popa
jno
fdivr
loope
or
mov
lcall
sarb
addr16
fsubrs
adc
dec
lods
inc
jg
and
mov
lret
shl
pop
jo
mov
mov
fucomp
in
mov
ret
mov
push
adc
inc
into
outsb
fldl2t
lahf
out
sub
mov
daa
or
cmp
push
test
cmp
movsl
cmp
push
jno
filds
lcall
xor
orl
repnz
mov
inc
jmp
pop
fnsave
cwtl
sbb
insb
cmp
xchg
mov
sbb
jae
int3
jns
jb
sub
int
jle
inc
pusha
dec
cmpsb
xchg
push
lahf
jp
lea
sbb
shlb
enter
mov
ja
pop
nop
xchg
out
jo
je
xor
stos
arpl
cld
dec
xchg
inc
icebp
mov
outsl
pop
ds
xchg
nop
adc
mov
xor
xchg
movsb
mov
adc
add
mov
fdivr
nop
push
xchg
mov
call
cmp
jb
nop
sub
xor
insl
scas
and
sti
mov
cmpl
push
push
std
loop
xchg
pop
repnz
push
cltd
cmpsb
mov
cmpsb
testl
jb
xor
popf
push
sub
xlat
mov
arpl
addb
mov
adc
fsubs
shlb
pop
lods
sub
fxtract
mov
add
pop
jno
lods
xchg
adc
add
aam
pop
data16
loope
xchg
ljmp
xor
fs
xchg
jbe
cmp
shll
iret
mov
xchg
jge
pop
lahf
jp
fnstsw
or
bound
lahf
mov
inc
jo
iret
frstor
xchg
push
and
xor
or
out
adcb
mov
lret
jne
pop
sahf
popa
push
mov
nop
jns
mov
lret
inc
fiaddl
jo
mov
ljmp
imulb
mov
es
fmuls
and
push
push
xchg
in
mov
pop
sub
rcll
lret
or
dec
push
call
and
push
movsl
out
insl
cmc
ss
mov
prefetcht0
ds
sbb
xchg
arpl
sahf
sbb
dec
mov
xchg
mov
mull
add
mov
inc
arpl
outsl
xchg
lods
cmp
ljmp
in
push
xchg
gs
scas
fwait
sar
fwait
pop
fwait
pop
push
icebp
inc
lahf
mov
pop
sahf
mov
sbb
in
lret
sti
lcall
sbb
leave
enter
insl
in
sbb
dec
jbe
pop
mov
push
shr
cmp
inc
aas
add
mov
adc
cmp
leave
insb
xorb
xor
fidivs
js
aas
mov
dec
push
jmp
cmp
inc
xchg
pop
inc
cwtl
mov
cmc
push
cmpsl
sar
or
scas
push
or
mov
loop
aam
cli
mov
xlat
jne
or
cwtl
test
daa
jg
inc
test
fcoml
scas
or
stc
lods
inc
sub
mov
push
lahf
lret
arpl
or
jg
sub
adc
mov
push
adc
xor
rcrb
xlat
push
jnp
out
sub
sarl
sbbl
mov
pop
cmc
pop
in
in
std
leave
jnp
xchg
aas
xor
mov
and
lret
inc
mov
frstor
push
fidivrs
lret
mov
push
cmc
lods
les
xor
xchg
adc
fcompp
push
add
stc
mov
mov
test
xchg
xchg
xor
sbb
outsb
dec
insb
cli
pop
cmp
mull
movsb
int3
xchg
cmp
std
push
add
pop
fnsave
or
cmpsb
scas
sti
flds
cltd
jae
cltd
push
mov
out
dec
nop
lcall
push
jbe
test
ljmp
nop
ss
pushf
lahf
notl
rorb
aas
or
cmc
mov
mov
dec
pop
subl
enter
data16
iret
je
and
xchg
lods
mov
xchg
mov
out
test
out
mov
fsubp
unpcklps
repnz
add
test
loope
pushf
fimuls
inc
push
mov
sub
push
adc
dec
inc
out
mov
push
inc
push
stc
mov
xor
inc
push
iret
fcomps
push
pop
movsl
adcl
lods
pop
cmp
icebp
lahf
je
repnz
mov
push
rcr
ljmp
pop
int
dec
or
sub
leave
loope
rcl
out
mov
std
jmp
sbb
ret
inc
stc
and
mov
jle
or
push
xor
cmpsb
out
lret
inc
push
push
xchg
cmp
aam
fldenv
inc
enter
jo
inc
clc
lods
inc
push
jns
xchg
or
popf
inc
or
jg
and
mov
add
xor
pslld
inc
pop
cmp
xor
dec
add
or
cmp
jge
test
stc
push
int3
jecxz
xchg
mov
adcl
cmpsl
xchg
add
pop
xchg
sub
in
mov
xor
and
push
xchg
sub
pop
cwtl
mov
xchg
mov
sbb
inc
mov
xchg
shlb
inc
pop
mov
inc
cmp
cmc
xchg
imul
das
mov
daa
cmp
nop
enter
xchg
pop
imul
add
cmc
imul
and
aam
add
mov
push
jmp
aaa
lahf
daa
gs
add
and
cmpsl
fiaddl
out
cmp
lods
addr16
cmp
aam
gs
sbb
pusha
popl
mov
push
insl
adc
mov
inc
ret
sub
push
loopne
mov
push
jmp
movsb
mov
stc
jecxz
sub
lret
imul
jmp
cmp
icebp
sub
in
sahf
mov
mov
adc
dec
fsts
jno
les
inc
inc
add
jno
stos
in
sub
or
pop
jnp
xchg
pop
cli
cmp
sbb
sbbl
or
lahf
divb
adc
outsl
sbb
sbb
cmp
addr16
add
int3
fdivrl
cmp
out
lods
sbb
nop
nop
jb
fistpl
mov
js
imul
imul
lcall
inc
sub
nop
out
repnz
sub
xchg
xchg
add
mov
jl
mov
xor
mov
in
mov
push
mov
fidivl
mov
scas
scas
into
fcoms
out
pop
jp
xor
enter
jmp
mov
fnsave
sub
dec
in
or
adc
test
push
push
cmp
int3
lret
ja
sbb
xchg
pushf
lahf
call
roll
popa
mov
ror
pop
mov
xor
into
jl
pop
or
bound
cmp
dec
jmp
xor
sbb
leave
pop
aas
jp
and
xor
lcall
mov
push
mov
mov
jo
movsb
in
mov
mov
repnz
int3
xorb
mov
mov
mov
in
int
mov
adc
outsb
movsl
cltd
xchg
dec
testb
out
adc
rorl
test
stc
les
andb
iret
lods
pop
mov
xchg
out
lds
jl
xchg
negl
dec
in
cmp
cmc
push
xchg
sub
xchg
loop
sub
scas
ror
jp
into
cwtl
lcall
cmpsl
jl
testl
xchg
inc
inc
movsb
pop
repz
mov
shrb
fs
sub
dec
pop
mov
enter
aaa
std
xchg
mov
mov
add
cmpsl
jle
mov
push
fsubrs
enter
loope
add
lods
mov
pop
test
dec
cli
and
adc
dec
pop
push
xor
dec
in
adc
data16
adc
clc
sub
test
and
std
les
push
mov
xor
xchg
ja
sahf
push
add
aaa
mov
push
sahf
clc
aas
xrelease
hlt
lea
cmpsl
mov
jbe
test
js
pop
jle
add
push
out
sub
icebp
shll
pop
fstpt
adc
cld
pop
jmp
ret
sub
in
xor
xchg
mov
dec
sahf
lock
movsb
fisubrs
into
fcmovnb
sub
out
push
jbe
xor
ss
icebp
pop
add
dec
cltd
push
repnz
sub
add
xor
inc
mov
pop
sub
mov
inc
popa
mov
mov
es
aam
mov
xchg
add
js
test
push
lret
pop
and
xor
pop
repnz
call
pop
jge
xor
imul
addr16
shlb
xchg
and
out
inc
lahf
insb
and
ror
jo
das
sbb
shlb
mov
clc
addr16
in
adcl
movsl
cld
adc
mov
cmp
mov
pushf
jb
ljmp
fistps
mov
push
jecxz
mov
fimuls
in
popf
testl
popa
inc
loop
jns
push
jmp
shlb
push
mov
mov
test
stc
and
jb
ds
xchg
dec
add
pop
in
xor
sub
shrl
lret
pop
sbb
orps
jp
inc
mov
faddp
js
sub
lock
or
lahf
mov
or
repz
cmp
incl
mov
jle
mov
jl
test
gs
xor
addb
mov
stos
ret
lods
push
jmp
cmp
cmp
ret
push
setno
sub
pop
enter
clc
cmp
daa
data16
rcl
rorb
adc
push
stc
pop
push
mov
addr16
ret
pop
push
xchg
fs
sbb
pusha
xor
test
sub
andl
cmp
mov
cmpsl
adc
pop
insl
rolb
loop
pop
repnz
arpl
shrl
repnz
xor
push
cmp
cwtl
insb
sbb
sahf
mov
xor
cmp
out
push
adc
inc
fcompl
jnp
out
repz
loopne
ss
cltd
add
loope
pop
call
icebp
pop
jbe
addr16
fwait
int3
int
jge
add
dec
dec
dec
push
arpl
push
in
dec
movsb
sbb
push
xor
pushf
xor
scas
shll
popl
xchg
pop
outsb
add
mov
into
aam
inc
pop
imul
je
fs
pop
or
and
lds
fisubl
inc
test
cwtl
das
int
pop
repnz
jp
loopne
adc
add
add
jnp
cltd
mov
sbb
stos
push
cltd
jo
lret
popa
int3
jno
and
mov
fnstenv
out
add
pusha
sti
repz
std
dec
stos
inc
jle
iret
xchg
add
jne
mov
or
jns
fstl
fnstenv
jle
sub
loop
cli
idivl
add
cmp
jge
stos
cmpsl
outsl
jb
int3
lcall
cmp
xchg
and
shrl
push
fwait
outsl
in
pop
push
sbb
into
mov
jecxz
cmp
add
xor
int3
popa
lds
jg
push
test
jns
in
push
add
out
push
jo
out
and
testl
addr16
cmp
sub
ror
fisttpll
test
jb
jae
lods
sbb
pop
sbb
jno
inc
lds
xchg
clc
or
sti
fidivrs
out
popa
pop
scas
inc
xchg
sbb
int
gs
fs
enter
ja
inc
dec
imul
out
insb
sub
xchg
mov
push
ret
cmpsb
jnp
jg
sub
mov
or
outsl
jns
mov
push
shlb
cwtl
lods
in
leave
negb
jno
orb
aaa
aaa
hlt
adc
xchg
mov
jns
mov
add
mov
add
insl
mov
jnp
xchg
imul
mov
faddl
add
stos
jp
loope
or
xor
jo
insb
data16
cwtl
or
popf
sarb
cmp
lods
aam
fiadds
call
add
push
mull
mov
into
jge
mov
out
dec
in
push
fildll
les
inc
test
cmpsl
aaa
addr16
loope
pop
push
mov
data16
lods
mov
aad
xchg
int
jbe
stos
cmpsl
cmp
cmc
testb
idivl
push
dec
mov
sbb
dec
shr
je
imul
into
out
or
dec
jo
test
dec
mov
jge
dec
dec
lods
and
cmp
insl
gs
pop
test
shll
push
nop
mov
fsubrp
sbbb
lret
or
jge
dec
mov
into
aad
add
test
movsl
outsb
ret
mov
rol
or
xchg
clc
fldenv
ret
fldl
pop
or
es
out
push
push
into
push
lea
sub
mul
sub
es
cmc
cmp
mov
ret
push
sub
aaa
push
xchg
mov
es
sbb
and
cs
inc
cmp
repz
pop
push
jno
and
jae
sbb
mov
cli
push
jge
mov
in
xrelease
fbstp
fwait
lahf
mov
push
popf
movsb
aam
pop
stos
cli
inc
sub
mov
in
stos
xor
xor
push
mov
rorl
fdivl
pop
mov
add
xchg
aaa
dec
fldcw
lods
popa
xchg
into
xor
jl
adc
inc
push
xchg
sub
xor
xchg
sub
lds
mov
xor
imul
and
mov
rsqrtps
push
dec
movsl
inc
negl
in
fcomps
xchg
mov
pop
shl
and
loopne
pop
jae
push
ss
pop
imul
push
jo
mov
into
int3
mov
gs
mov
adc
jne
sub
push
or
xor
clc
mov
inc
xchg
sahf
in
shrl
mov
mov
xor
inc
and
popa
add
jbe
and
lcall
ss
insb
adc
jns
push
push
cmp
shrd
mov
das
pop
ret
test
mov
lock
enter
seta
inc
aas
mov
mov
lods
lret
aas
push
loopne
sbb
xor
xor
push
sbb
xchg
mov
push
mov
add
ret
enter
hlt
cs
jbe
mov
idivb
sbb
ja
push
cwtl
pop
jg
inc
addr16
inc
mov
rcr
mov
mov
pop
popa
out
dec
mov
imul
je
ficoms
xchg
add
pop
mov
repnz
test
fwait
cmc
pop
les
dec
push
and
sbb
test
jns
mov
cld
in
mov
rep
jne
pop
testb
mov
adc
stc
lock
cmp
in
pop
mov
xor
pop
test
pop
or
adc
cmp
push
jmp
hlt
cmp
dec
popa
fldcw
outsl
dec
dec
mov
cmpsb
or
std
sbbl
push
fbstp
or
push
aad
mov
mov
and
fcoml
out
ja
popf
sub
jns
add
fcomp
and
push
pusha
clc
rcll
jg
in
mov
data16
sbb
xchg
dec
add
mov
ja
push
mov
das
sbb
dec
pop
cli
pushf
inc
scas
jne
and
inc
xchg
gs
and
mov
mov
clc
es
lahf
popf
or
imul
inc
xchg
mov
push
cmp
fnstenv
sub
scas
dec
bound
push
mov
mov
je
nop
push
fdivs
sti
ds
scas
call
movsb
push
jecxz
xor
in
xchg
mov
in
push
movsb
xchg
or
mov
pop
jo
xchg
mov
xchg
in
add
mov
ljmp
pushf
sub
inc
push
das
pop
and
push
push
inc
xchg
bound
push
mov
mov
pop
push
dec
cmp
push
jp
pop
popf
ja
xor
and
sti
adc
sub
in
mov
scas
or
dec
adc
cmpsb
les
inc
fidivrs
cs
gs
rcrl
add
pop
cmp
test
cmp
adc
xor
inc
or
jb
arpl
popl
mov
xchg
cmc
imul
and
out
dec
dec
add
daa
and
ds
xchg
outsb
sub
push
iret
jecxz
inc
lcall
dec
subl
imul
test
push
repz
adc
pusha
shlb
enter
adc
mov
sbb
stos
adc
int
scas
and
fwait
push
sbb
cli
adc
push
insb
das
stos
push
out
inc
les
inc
lcall
outsl
xor
out
push
divb
push
xchg
add
ljmp
mov
pop
add
and
lds
lret
jmp
arpl
addr16
sub
mov
sub
jae
lods
adcb
inc
lcall
inc
fcompl
outsb
test
fsubr
mov
aam
arpl
pop
add
pop
sub
and
js
cwtl
pop
subb
sbb
sarb
out
jg
push
mov
rcl
gs
jb
in
pop
mov
cs
je
jecxz
mov
stc
mov
push
call
cld
cmc
repnz
pop
mov
sub
push
sub
aad
les
mov
cmp
xor
fs
fnsave
mov
cmp
cmc
push
test
clc
nop
jl
mov
mov
xor
imul
mov
inc
push
pminub
stc
inc
pop
xor
pusha
mov
arpl
shll
repz
mov
adc
icebp
out
add
lret
sbb
and
rcrb
xor
bound
mov
fld
and
out
iret
stos
cmp
mov
test
mov
mov
imul
popa
xor
subb
sbb
aaa
xchg
inc
imul
xchg
adc
xchg
std
cmpsb
arpl
loopne
push
inc
out
test
and
adc
inc
inc
test
jb
push
test
ret
add
pop
addl
add
mov
in
dec
loop
in
clc
icebp
mov
adcb
mov
mov
sub
mov
idivl
jo
mov
sbb
xchg
push
push
mov
inc
dec
stos
call
into
and
pop
stos
jg
bound
test
call
adc
aas
adc
sbb
out
fwait
jo
inc
sub
xchg
clc
push
inc
repz
sti
fdivs
sbb
in
inc
sbb
mov
and
das
adc
rol
jl
out
gs
mov
subl
aas
cmp
pop
je
cmpsb
sahf
stos
cwtl
jno
sahf
sub
push
push
dec
fdivs
mov
in
inc
testb
and
sbb
sbb
stos
jg
push
js
test
push
pop
arpl
mov
mov
jno
fcomps
push
cmp
dec
mov
fisubrl
dec
out
shrl
adc
mov
daa
scas
test
cmp
loopne
fwait
outsb
ret
push
addr16
ret
popf
cmp
es
outsb
lods
and
rorl
test
insb
fidivs
nop
out
in
push
loop
popl
lret
les
inc
jl
jge
xor
testl
mov
sub
in
inc
loope
add
inc
lahf
jb
ret
sub
sbb
repz
xchg
dec
insb
jmp
cmp
cltd
ficoml
lods
mov
mov
movups
push
mov
push
into
lahf
addb
add
push
aad
xor
and
mov
lahf
jb
mov
clc
push
mov
cmp
scas
pop
mov
or
daa
jne
lods
xchg
js
out
negl
ret
push
into
testb
dec
lahf
and
pop
es
lods
push
scas
subl
fildll
pop
mov
mov
xchg
mov
cs
repz
jae
and
jp
icebp
daa
dec
movsb
xor
push
stos
jge,pn
add
loope
pop
idivb
arpl
cmp
hlt
ljmp
ret
sbb
xor
mov
int3
inc
mov
push
test
inc
fisubrl
pushf
or
or
mov
out
nop
imul
cltd
outsl
call
mov
mov
sbb
daa
cld
and
sbbl
jo
lods
pop
fucomip
mov
imul
mov
xchg
fbstp
pop
jo
jne
mov
cmc
ret
add
xchg
repz
and
inc
push
mov
jae
lcall
inc
mov
cmp
push
xor
sub
jae
jne
mov
jge
in
insb
inc
ficoml
xor
push
mov
pop
xor
fistl
leave
mov
sti
mov
out
leave
cmp
and
add
shrl
lret
mov
cmp
in
dec
mov
repnz
xor
stos
ja
mov
or
push
push
jg
xchg
imul
push
xorl
cmc
ss
xchg
xor
add
lods
push
or
ja
movsb
cmp
je
ficoms
ret
jle
stc
gs
sub
dec
roll
decl
cmp
inc
stc
iret
shrb
jo
push
iret
insb
loop
pop
clc
sbb
fimuls
loop
ret
arpl
mov
and
shl
js
mov
iret
pop
cmp
dec
leave
in
lods
ss
aas
inc
cltd
mov
cltd
or
lret
andl
pop
dec
pop
inc
shrb
mov
sub
sbb
bound
mov
fisttps
sub
mull
pushf
dec
pop
inc
pop
pop
icebp
lea
add
push
xchg
mov
xor
arpl
aam
daa
inc
cmp
cmp
aaa
adc
cmpsl
push
adc
fldcw
pop
test
dec
into
pop
lret
or
imul
aam
sti
stos
xorl
cmp
ret
ja
inc
sbb
cwtl
push
or
push
pusha
fildl
fcmove
adc
push
dec
loope
out
push
pop
xchg
sbb
and
outsb
ret
shl
push
je
in
in
adc
aas
jae
lods
dec
adc
cmc
je
jle
pop
repnz
dec
jle
jge
push
je
jnp
call
ljmp
test
or
sbb
xorb
insb
push
sbb
test
fwait
xor
jg
and
out
int
and
add
lds
enter
bound
and
pop
xorb
dec
daa
shlb
cwtl
sbb
or
in
pop
mov
cmp
or
mov
sbb
loope
cmp
push
insl
push
das
inc
add
xchg
push
adc
jb
xchg
xor
pop
mov
fcomps
jl
daa
mov
scas
inc
leave
push
or
dec
mov
or
cltd
xlat
andl
mov
jge
bound
mov
mov
inc
inc
xlat
fmul
daa
add
leave
sub
std
xor
or
jnp
dec
loopne
jbe
inc
jae
mov
fwait
mov
push
pop
xlat
loop
mov
out
inc
gs
cs
pandn
sbb
js
es
inc
jno
xchg
dec
xor
xorl
sub
mov
fiaddl
sub
mov
push
repnz
lods
addr16
push
call
scas
pop
or
add
es
data16
movsl
cmp
cli
push
inc
xor
call
cmp
shll
mov
outsb
xchg
pop
adc
sbbl
call
or
stc
je
es
in
push
jnp
or
insb
add
sarl
ds
inc
gs
or
jb
adc
jbe
mov
divl
test
sub
pop
lds
fidivs
pop
add
lahf
out
sbbb
mov
daa
xchg
jp
adc
xorl
cli
xchg
lea
xor
jle
test
jl
sub
xchg
cli
std
subb
adc
fstpl
cs
sub
push
inc
push
test
data16
inc
adc
jae
gs
out
pop
hlt
push
or
mov
push
pop
repz
sub
cmc
adc
xchg
mov
pop
inc
out
jle
andb
adc
adc
inc
mov
arpl
cltd
adc
aad
xor
mov
aam
adc
in
stc
test
sub
imul
xchg
adc
or
sub
out
lods
pop
insb
add
stos
pop
add
mov
mov
dec
mov
dec
outsb
xlat
mov
lods
adcb
stos
jne
stos
mov
outsl
fbld
and
outsl
stc
idiv
sbb
mov
test
shl
and
adc
cmpl
mov
and
dec
jp
sbb
xlat
jecxz
stc
cltd
movsb
es
data16
push
bound
rcll
xlat
pop
ror
jbe
cmpsl
ret
test
mov
pushf
insl
les
sbb
iret
lds
pop
pop
sbb
mov
dec
icebp
sub
test
xor
inc
pop
pusha
fwait
mov
call
sub
mov
lret
fs
outsl
push
les
sarl
popf
pusha
xchg
addr16
xor
into
pop
iret
fsubr
data16
sub
in
daa
mov
test
int
leave
test
das
imul
testl
addr16
add
mov
adc
fwait
out
daa
les
push
mov
dec
jmp
adcb
sbb
out
or
inc
les
out
or
jp
pusha
lods
pop
adc
movsl
add
les
mul
subb
lret
mov
and
daa
jmp
bound
mov
or
pop
mov
lahf
mov
cld
mov
cs
lock
andl
lock
leave
mov
mov
incl
mov
dec
bound
lahf
cmpsb
add
int3
int3
lcall
pop
shlb
or
lods
mov
stos
mov
pop
sub
add
insb
in
push
adc
mov
hlt
ret
test
rcrl
xor
cmp
mov
sbb
mov
jge
test
std
pop
xchg
movsl
xlat
movsb
cmp
jcxz
cmp
idivb
jecxz
and
xchg
push
add
inc
loope
mov
sub
leave
fldcw
xchg
and
dec
lock
pop
ds
xchg
fstl
enter
cld
xchg
mov
rcrl
jo
aas
push
sbb
fildll
mov
mov
dec
addr16
cmp
sarb
mov
in
xor
add
es
pop
push
mov
xchg
xor
pop
lret
ficompl
xchg
out
cmp
xchg
int
cltd
divb
sub
push
dec
adc
je
push
push
jl
mov
jbe
and
lea
sahf
cltd
test
dec
and
jo
dec
loope
adc
pop
sti
pop
jne
add
pusha
push
sbb
cmpsb
scas
mov
jge
shrl
fdivl
lahf
std
add
mov
fld
dec
push
fdiv
sbb
in
test
out
inc
adc
repz
rcll
outsb
sub
stos
stos
rcr
mov
cmp
inc
enter
jge
or
cmp
and
cmp
fisubrs
push
test
out
cmpsl
repz
cltd
xchg
sbb
cmp
popf
aad
into
jae
push
push
sbb
push
test
jb
mov
xchg
scas
imul
or
rorb
shl
std
add
rorb
pop
out
or
popa
jae
inc
fdivrs
test
fwait
pop
cmpsl
lds
call
outsb
bound
mov
mov
in
std
imul
mov
and
loop
fildll
jle
ffree
jno
or
xchg
adc
mov
cmp
fcoms
sti
cmp
fs
or
je
xchg
adcl
sbb
lahf
ss
lcall
mov
ja
xsavec
add
cmp
shr
adc
sbbl
movsb
and
mov
test
es
ja
cwtl
sub
cwtl
dec
mov
jns
cltd
stos
movups
pop
adc
icebp
inc
aam
inc
mov
pop
mov
lahf
inc
inc
jl
cli
into
fwait
sub
int3
int
scas
inc
mov
xchg
or
and
pop
jmp
loopne
imul
lret
inc
cmovb
insb
test
sub
in
jne
pop
pop
ds
sarb
push
dec
fs
add
shll
xor
lcall
arpl
mov
jbe
jbe
repnz
and
jl
sbb
xchg
jb
sub
jle
sub
std
cltd
pop
fwait
push
daa
and
mov
movsb
shrb
adc
xchg
push
mov
push
xchg
pop
js
movsl
lds
xor
and
jmp
push
jmp
xchg
imul
lds
jecxz
xchg
leave
push
shll
aam
cmp
mov
movsl
pop
out
in
lds
push
imul
pop
aas
push
loope
inc
stos
cli
mov
aam
adc
sub
push
test
fsubl
addb
fisubrs
imul
sbbb
hlt
lret
les
jp
mov
pop
outsl
bound
testl
pop
pop
mov
jle
sub
xor
xchg
push
int
rorl
andb
push
fwait
mov
push
enter
dec
in
mov
and
icebp
pusha
cs
sub
sbb
mov
lea
lock
push
and
push
pop
jp
sbb
push
test
fnstcw
sub
movsb
mov
lret
cli
mul
call
xor
arpl
mov
andl
jns
mov
fbstp
lret
jmp
pop
loop
fstpl
arpl
pop
idivb
or
pop
sub
pop
addb
mov
mov
mov
clc
inc
mov
loope
inc
cwtl
pop
imul
inc
movsb
lods
cmc
lock
notl
xor
aaa
hlt
adc
es
dec
scas
xorl
jo
sbb
mov
stos
cmp
add
inc
mov
enter
or
mov
dec
and
push
jb
sahf
sub
stc
dec
pop
push
mov
insl
jle
cmc
sub
push
fstpt
pop
into
imul
cmp
add
das
pop
mov
xchg
in
ljmp
repnz
mov
fmul
stc
mov
jmp
jg
daa
push
push
lahf
mov
frstor
aad
dec
add
sbb
add
lods
gs
push
movsl
add
and
addr16
pop
rorb
aad
mov
mov
lea
xlat
adc
movsl
shrb
mov
xchg
adc
mov
lret
fimuls
sbb
jmp
mov
and
push
push
mov
push
cli
sub
in
mov
xchg
outsb
cmp
pop
in
flds
jmp
inc
fisubl
cwtl
mov
leave
jbe
push
sub
jp
jns
mov
aam
mov
push
js
mov
mov
fsts
or
or
sti
lcall
cmp
inc
in
inc
inc
pop
hlt
icebp
hlt
lret
hlt
adc
les
test
stos
out
add
clc
inc
sbb
inc
clc
iret
cmpsl
pop
jnp
test
scas
cmpsl
adc
adc
outsb
pop
or
sub
aad
into
mov
mov
rorl
iret
negl
in
scas
movl
push
jmp
cwtl
cmp
insb
dec
hlt
enter
es
sar
jg
loope
mov
stos
in
jl
push
push
out
push
cld
xchg
add
sbb
sbb
je
mov
repnz
out
add
xchg
push
loope
push
adc
fsts
test
notl
inc
sub
adc
leave
jg
add
inc
cltd
mov
loopne
pop
pop
lds
lods
add
or
push
add
incl
out
push
jmp
jo
inc
mov
test
push
leave
in
pop
pop
jmp
into
xor
cltd
sbb
fldcw
cmp
xchg
or
popf
sti
jp
int
cmp
out
scas
ficomps
dec
movsb
cmp
sbb
pop
push
xor
push
and
sub
dec
sub
dec
loop
or
pop
stos
call
sahf
mov
enter
mov
cwtl
mov
jl
test
das
fisttpll
pop
imull
mov
mov
ja
lret
ja
mov
shlb
push
or
dec
cwtl
mov
enter
jne
popf
mov
mov
jl
sbb
jle
push
or
cmp
loope
imul
loop
loope
sub
test
mov
addb
lock
imul
aaa
pop
dec
loop
push
test
movsb
cmc
repnz
add
lods
jg
pop
nop
or
shll
es
data16
popa
ljmp
inc
and
imul
iret
outsl
lds
push
mov
dec
xlat
sbbb
push
push
das
adc
hlt
or
jnp
inc
pop
mov
push
enter
push
in
ret
inc
imul
in
adc
mov
js
jo
pop
sbb
dec
adc
push
or
nop
push
inc
decb
mov
mov
push
push
mov
mov
clc
popf
outsl
sub
adc
xor
adc
orb
ds
mov
in
jmp
sub
push
nop
lock
xor
rclb
inc
arpl
mov
xchg
lcall
popf
sub
orb
stos
adc
mov
stos
fucomp
shrl
adc
push
into
lahf
cmp
test
call
sub
mov
mov
mov
bound
mov
add
xor
repnz
sbb
push
cmp
loope
rcr
xchg
mov
push
inc
mull
cmp
sub
pop
outsl
call
arpl
sti
stos
and
das
sbb
or
bound
repnz
sub
or
adc
inc
sbb
inc
xor
xchg
push
or
and
push
jecxz
add
icebp
cmpsl
icebp
in
jb
jae
or
inc
aad
jae
xchg
outsb
fistps
in
std
aaa
in
les
adc
shll
daa
inc
dec
jle
roll
cmp
data16
and
xchg
std
arpl
xor
jns
test
hlt
adc
sub
sbb
mov
push
cmp
inc
push
cltd
xchg
insb
push
cmp
loop
in
sub
negl
mov
lret
aad
xchg
dec
sbb
lret
mov
pop
mov
push
cmp
xchg
popa
jns
sub
inc
pushf
stos
push
je
inc
add
jne
cmpsb
ret
jbe
mov
mov
lret
fs
je
testl
lods
inc
sbb
jb
adc
or
int3
dec
arpl
into
or
das
outsl
adc
dec
and
fsubs
xor
popa
push
add
jmp
xchg
fldt
inc
pop
cmc
mov
movups
push
fwait
jle
pop
jns
cmp
loope
xchg
aam
fimuls
je
adc
cmp
add
in
jno
cmp
jo
dec
add
jbe
sbbl
push
aad
cmc
push
xchg
dec
xor
cmp
sbb
in
mov
mov
pop
or
cltd
mov
xor
insb
push
clc
popa
mov
sub
shl
mov
pop
aas
shlb
loope
sub
mov
ljmp
les
and
rclb
scas
add
push
sbbb
inc
jecxz
addr16
rcl
cld
mov
insb
mov
movsb
repnz
sbb
std
mov
in
jecxz
inc
push
mov
aad
push
sbb
mov
scas
fcoml
mov
jbe
xor
enter
mov
jg
repnz
cmp
ja
pop
ja
into
inc
mov
sbbb
in
scas
rcrl
xchg
adc
dec
lahf
testl
imul
fnstsw
mov
adc
jmp
push
dec
idivb
ffree
fistps
mov
jl
dec
mov
cmp
push
ret
out
std
xchg
mov
aaa
sub
or
cmp
stos
into
lea
fdivp
stos
enter
repz
mov
shll
dec
addb
cmp
pop
sub
enter
pop
into
test
out
lret
inc
idivl
jne
pushf
lcall
push
cs
repz
cmc
int3
cmc
repnz
enter
pop
sti
inc
clc
jae
xchg
loope
leave
adc
ja
mov
lds
xor
jp
repz
aas
lret
lods
dec
outsl
inc
fisubs
dec
gs
fstpl
inc
in
sbbl
cld
or
jecxz
daa
mov
push
inc
enter
adcb
sbb
pop
adc
and
das
mov
ja
cmp
hlt
add
lock
icebp
sbb
fdivr
mov
das
mov
nop
mov
sub
fidivrl
lea
aam
and
lret
push
push
adc
mov
cmp
dec
add
xor
sbb
out
jp
and
xchg
pop
xor
mov
sub
jno
inc
mov
push
sti
pop
mov
mov
and
scas
dec
push
jb
leave
mov
stc
sti
test
xor
jae
mov
mov
ljmp
imul
mov
fucomi
jno
cmc
cmp
arpl
cmp
mov
aaa
dec
loop
sub
das
ficomps
add
int3
xorl
xchg
cmp
mov
imul
jg
pusha
movsl
push
push
adc
in
adc
pop
xor
fisubs
pop
imul
test
add
arpl
mov
pop
lea
cmp
xchg
adc
ret
outsb
push
add
decl
insb
js
mov
mov
mov
aam
clc
cmpsl
lret
jnp
popa
xchg
inc
outsl
test
dec
je
jmp
cmp
inc
outsl
or
je
push
push
out
mov
jnp
mov
push
or
std
mov
xor
push
rorl
inc
pop
jbe
aad
nop
jae
mov
vpand
and
push
mov
add
mov
mov
inc
lret
scas
cmp
test
scas
imul
adc
push
and
sbb
dec
inc
pushf
push
lods
cltd
push
stos
inc
add
inc
cs
mov
mov
imul
test
stos
daa
test
cld
popa
mov
xor
lret
pusha
lock
out
dec
or
xor
sub
cwtl
aad
xchg
lret
xor
xlat
mov
push
out
sub
call
add
std
mov
mov
lahf
es
mov
inc
adc
fbstp
adc
lea
aam
data16
jge
in
jns
jp
data16
cwtl
sbbl
jnp
test
popf
jo
cmp
test
add
ljmp
jae
mov
or
xlat
dec
inc
lcall
and
cmp
dec
dec
je
cmc
movsl
in
push
jo
scas
jl
mov
movb
popf
mov
jge
mov
pop
in
sbb
inc
arpl
xor
out
jb
addr16
mov
pop
popa
imul
aaa
jp
dec
lods
pop
loope
jns
mov
jle
pop
cs
cmp
or
sahf
in
pop
mov
mov
int3
test
inc
scas
fs
mov
mov
sbb
jb
lcall
xchg
xor
push
popf
push
sbb
push
shll
pop
stos
xchg
adc
pop
mov
push
je
test
scas
sbb
out
ss
add
js
out
push
adc
js
ffree
stos
es
push
mov
mov
out
aam
iret
pop
popf
sbb
ret
mov
adc
sbb
add
lea
inc
divl
push
je
and
mov
jns
divb
pop
sub
and
push
sahf
mov
add
mov
push
mov
adc
aaa
iret
push
jb
call
push
out
push
sub
fisttpl
sbb
xchg
fnsave
loope
mov
out
imul
gs
outsl
lea
xchg
jns
int3
inc
sbb
jecxz
call
cwtl
movsb
jmp
and
mov
movsl
mov
fidivrs
test
mov
popa
add
pop
mov
xor
or
in
cmp
dec
and
and
or
and
jle
dec
loop
lahf
cmp
push
ja
dec
cmp
mov
lret
dec
stos
push
push
js
movsb
icebp
push
popa
fisttps
adc
mov
jb
loop
outsl
mov
fdivr
ror
ds
rcl
fisubrs
daa
xor
sahf
mov
xor
pop
sar
into
test
sbb
call
out
rcrb
dec
mov
xchg
xchg
sbb
dec
sbb
pop
mov
inc
lock
cmp
mov
inc
lret
ss
pusha
mov
lcall
ret
out
enter
mov
add
loop
mov
xchg
flds
lcall
in
dec
mov
adc
pminub
loopne
les
fcomip
mov
mov
imul
in
xchg
push
call
loope
sub
roll
fstpl
test
adc
adcb
pop
mov
xchg
fsubrp
lret
adc
iret
sbb
loope
and
pop
dec
mov
pushf
jo
pop
lcall
les
mov
fnstenv
out
xchg
int3
push
in
and
stc
fldt
mov
insb
pushl
sbb
and
pop
scas
sbb
test
inc
out
xor
add
mov
je
fidivrl
mov
lods
dec
pop
test
hlt
fldenv
das
pop
adc
jnp
aas
xor
and
out
das
stos
jmp
mov
lahf
out
pop
lock
jecxz
fstp
cmp
ljmp
mov
push
fwait
out
insb
xchg
mov
inc
mov
sub
sbb
stc
mov
add
and
mov
dec
xchg
fisubrs
stc
outsb
cmp
pop
jae
push
jmp
mov
sub
nop
adc
pop
fnstsw
xchg
pop
mov
push
fsub
mov
cld
or
sbb
cs
call
add
xchg
or
dec
popf
add
fimuls
sub
and
push
pop
ss
lods
xchg
sub
sbb
icebp
aas
push
inc
sub
xchg
push
in
das
jl
and
stc
push
mov
or
leave
or
cmp
sub
int3
mov
ss
test
jle
sub
imul
scas
and
mov
fsubrs
insb
imul
or
lret
stos
and
int3
sub
pop
stos
inc
mov
fisubs
test
call
pop
mov
sub
cld
inc
cmpsl
divl
idivl
add
scas
mov
addr16
jne
pop
adc
sahf
xor
jb
lahf
jecxz
fs
xchg
push
or
push
push
imul
sub
mov
outsb
icebp
inc
arpl
div
cmp
mov
dec
shlb
sub
dec
adc
dec
sbb
jns
jl
sbb
mov
dec
jl
aam
jge
sub
insb
das
mov
bound
mov
cmp
jbe
fildll
or
mov
mov
imul
cmp
dec
lods
add
aad
notl
fdivr
push
addl
icebp
mov
sti
push
rorl
ret
lret
pop
and
int3
xchg
ds
xchg
jo
or
dec
nop
inc
fs
outsb
jno
inc
hlt
leave
outsb
and
ss
adc
sub
xor
negl
add
inc
pop
testb
xchg
stc
js
cltd
xchg
xor
mov
sbb
in
push
test
mov
jl
push
sub
push
bound
add
rol
hlt
fnsave
xchg
scas
and
js
cmp
xchg
or
cwtl
jge
addr16
push
jno
mov
push
mov
jle
cmp
or
jmp
mov
enter
or
sahf
test
or
sahf
pusha
pop
lret
ja
int3
pushf
scas
std
pop
cld
push
inc
cli
jno
sbb
push
scas
or
inc
xor
test
pop
lods
lret
add
adc
loop
xor
inc
fidivl
enter
jp
pop
fstpt
aas
xor
sbb
in
rcrl
aam
rol
sbb
loope
and
mov
stos
sbb
js
stc
lock
ss
inc
inc
xlat
pop
ljmp
sub
or
enter
pop
push
push
inc
call
pop
xor
nop
shrl
pushf
test
pop
sbb
jno
pop
ds
out
into
hlt
jl
shr
and
call
dec
insl
sbb
mov
scas
sbb
inc
mov
or
sub
and
jae
mov
push
test
ss
cli
or
rcl
jnp
or
fimuls
les
pop
jae
arpl
icebp
je
add
fnstsw
gs
dec
shll
cmp
mov
jae
mov
cld
xchg
int3
lea
daa
mov
aam
lods
inc
and
push
aaa
and
jae
dec
sbbl
fdivp
fadds
cmpsb
and
mov
mull
dec
pop
sbb
test
es
adc
call
jno
pop
inc
arpl
lods
movsb
in
inc
push
cmpsl
loop
push
and
lret
mov
popf
mov
lahf
outsb
add
out
adc
aaa
shl
je
filds
or
movsl
push
or
mov
sti
mov
mov
pop
out
push
iret
add
mov
fldcw
xlat
mov
ja
sbb
push
xchg
insl
nopl
jge
xchg
test
test
enter
lahf
fistpl
xchg
mov
hlt
xchg
sub
pop
push
je
cmp
sub
dec
push
roll
mov
pop
sub
sub
push
fs
pop
stc
or
sub
jbe
push
cltd
xchg
sub
outsl
mov
mov
or
cmp
das
cmp
test
push
scas
jp
cld
push
fcmovnbe
mov
or
enter
sbbb
push
loop
jg
mov
cmp
loope
ja
jnp
icebp
mov
movsb
cmp
ljmp
and
aam
outsb
insl
enter
sub
rclb
dec
hlt
push
imul
daa
mov
cmp
add
mov
aam
xchg
adc
imul
mov
push
into
push
sub
xchg
add
adc
mov
pusha
outsb
aaa
sbb
shlb
inc
mov
outsl
loop
sbb
dec
imul
sub
pop
lcall
ja
stc
pusha
sahf
push
add
sbb
push
sbb
mov
xchg
scas
js
loope
es
aas
add
and
imul
ljmp
je
int
aam
mov
push
xor
push
mov
ja
cli
jne
sbb
push
and
inc
jae
loopne
jb
aas
add
clc
mov
icebp
fbstp
ficompl
adc
daa
enter
mov
pop
cltd
or
mov
cmp
jle
and
rcll
pop
inc
popf
ret
scas
loopne
pop
hlt
sub
xchg
dec
jnp
dec
push
sub
shlb
and
lods
std
jo
test
out
adc
and
pop
ret
xchg
dec
mov
push
xor
add
xchg
sub
arpl
xchg
loope
push
pop
ror
mov
ja
movsb
sbb
inc
mov
jmp
mov
pop
mov
adc
cwtl
pushl
sub
ss
hlt
adc
and
sbb
and
cld
and
cmp
jmp
jge
stos
jp
sub
test
pusha
add
out
fstpl
cmc
pop
inc
andb
daa
mov
inc
enter
dec
sbb
jge
ret
cmpsl
cmp
add
and
jae
rcrb
jbe
push
inc
mov
call
in
mov
push
lcall
loop
inc
pop
rcl
add
and
jge
push
fsubr
jo
aam
cmp
mov
jl
scas
cmp
sbb
mov
pop
lret
addl
add
inc
sub
inc
fbld
popf
out
popa
and
fists
test
data16
xchg
jmp
fwait
mov
arpl
mov
out
insl
add
add
cmp
and
jge
mov
add
mov
iret
adc
mov
es
gs
aaa
jbe
rcrl
sub
out
inc
gs
mov
js
mov
mov
dec
push
jb
shlb
adc
pushf
inc
inc
jbe
mov
inc
ss
inc
sub
ja
sub
insl
pop
and
hlt
mov
xor
stos
xchg
fstl
pop
adc
cmp
xorb
mov
mov
call
sbb
lahf
jb
cmp
dec
and
shr
lds
mov
pop
inc
lods
cmp
rorl
push
sbb
lcall
fadds
data16
sbbl
bound
fidivs
jecxz
cli
mov
shl
cltd
mov
lret
and
mov
daa
xchg
fsts
imul
repnz
pop
push
add
daa
outsl
loope
stos
inc
xchg
mov
jns
cmp
push
pop
mov
sarb
lret
gs
xchg
stos
jne
mov
in
cmp
rclb
or
clc
xor
mov
cld
inc
mov
fists
repnz
inc
sub
dec
aaa
pusha
dec
enter
cld
fsubr
negl
mov
adc
lret
in
pop
jle
test
cmp
test
movsb
or
mov
ds
in
add
movsl
cmpsl
cmp
mov
les
pop
aad
int
es
mov
popf
call
dec
and
push
mov
lock
mov
xor
sbb
xchg
mov
dec
in
fs
testl
mov
inc
dec
insl
jg
or
xchg
jo
pop
sub
cmp
mov
outsl
fistps
outsl
mov
cmp
mov
icebp
inc
int
repz
imul
sub
ljmp
out
xor
test
mov
enter
jbe
in
mov
imulb
pop
rolb
cli
adc
inc
aaa
or
jmp
repz
mov
mov
push
outsl
cwtl
sub
mov
iret
dec
sbb
pcmpgtd
cmp
lock
sbb
jp
and
js
and
fldt
adc
dec
into
and
mov
icebp
movsb
and
notb
inc
jns
mov
push
lods
enter
imul
lret
lahf
sbb
xor
lret
bound
mov
sbb
jecxz
rcl
xor
fcomip
mov
daa
mov
std
xor
cwtl
xor
add
push
fcmovbe
push
fwait
stos
push
mov
sub
scas
push
lods
jg
mov
adc
inc
dec
dec
out
test
or
xor
push
out
mov
jl
xor
popf
test
xchg
in
mov
dec
cmpsb
addr16
mov
inc
push
xor
and
es
mov
jle
pop
push
jbe
je
in
repz
mov
lret
out
sbb
lret
enter
outsl
fs
mov
sbb
mov
xchg
jb
xchg
fcomps
subb
out
jb
cltd
scas
test
fstl
cmp
je
fmull
cwtl
nop
lods
push
inc
sub
pop
mov
mov
ljmp
push
and
sub
dec
repnz
mov
jmp
subl
fsubrs
xchg
jge
mov
rorb
xchg
sahf
out
jnp
inc
sahf
notl
les
out
cmpsb
jmp
mov
mov
cs
rorb
xchg
repnz
es
adc
in
fmull
lcall
sbb
test
mov
pop
xchg
push
lahf
mov
inc
fldenv
inc
add
add
test
push
inc
data16
insl
mov
pop
hlt
lahf
pop
pusha
push
mov
out
cmp
mov
clc
mov
stos
fnstenv
out
xchg
sbb
push
in
lock
aad
loop
xlat
inc
and
ljmp
adc
push
xor
jo
cmpsb
ror
es
lds
std
inc
adc
pop
dec
jmp
and
repz
aas
insl
sub
adc
mov
inc
sub
stc
or
push
test
mov
jmp
lret
rcrb
and
cltd
jmp
into
cs
dec
xlat
inc
aas
mov
pop
sbb
mov
or
jg
mov
or
add
mov
into
push
stos
hlt
aad
jns
inc
pop
pop
adc
cltd
stos
dec
pop
and
mov
pop
jmp
int3
mov
icebp
pushf
js
inc
and
scas
fdivs
fldcw
mov
test
xor
xchg
std
jns
lds
pop
shrl
mov
xor
insl
mov
test
mov
iret
inc
xlat
add
pop
out
outsb
jecxz
mov
cmc
or
fists
aam
sbb
aas
or
arpl
mov
mov
sti
imul
in
lret
int
ds
sbb
add
loope
pop
lea
push
cs
in
ljmp
push
jmp
xchg
xor
call
aas
or
repnz
jge
mov
inc
push
xor
pop
mov
ljmp
jb
and
sub
es
cwtl
or
imul
adc
ss
jae
adc
cmovns
sub
pop
push
adc
int3
shrl
or
xchg
hlt
mov
mov
cmp
cmpsb
cmp
pop
int3
fnsave
popf
icebp
shrl
or
jp
jg
fisttps
push
pop
push
xor
jmp
xor
sti
xchg
adcl
inc
lods
sbb
inc
mov
push
jbe
movsl
push
mov
mov
jae
popa
iret
cmp
and
xchg
sub
or
dec
movsb
mov
loope
lds
pextrw
add
cmpb
pop
outsb
jnp
loope
xor
cmc
mov
xchg
movsb
addr16
jno
jns
faddp
push
and
add
push
sub
pop
and
test
in
xor
rcrl
aaa
lea
loop
jmp
rcrl
mov
nop
js
pop
cld
orl
jle
in
fldenv
fs
xchg
adcl
mov
inc
mov
arpl
cmpsb
iret
push
mov
pop
and
jl
ds
or
inc
or
fildll
cmc
push
int
adc
mov
sbb
and
repnz
test
popa
or
das
xor
popf
and
loop
sbb
or
lahf
or
mov
jg
mov
cld
cmp
xor
mov
sti
stos
jg
stos
in
push
adc
cld
aad
pop
dec
dec
jge
shl
lret
ja
inc
pop
clc
fnstenv
int3
sub
jns
mov
pop
cli
or
inc
into
ja
jg
std
adc
test
iret
inc
aas
enter
or
dec
lahf
sub
dec
xchg
cmp
xor
iret
push
add
mov
or
mov
addr16
xor
sbbb
inc
mov
jne
push
into
adc
daa
xchg
xor
sbb
cmc
shlb
jl
movsb
or
ja
repnz
iret
pop
cmc
gs
test
inc
shll
shlb
or
sub
cmpl
movsl
sbb
mov
xchg
add
adc
xchg
imul
pop
divb
loopne
xchg
cmp
cmp
cmp
int
dec
pop
out
jl
mov
sbb
xchg
pop
pop
fxch
xchg
pop
sub
jmp
aam
mov
mov
and
inc
add
inc
push
out
out
arpl
dec
mov
inc
leave
and
cmpsb
ret
push
sub
or
rcrl
cmc
mov
mov
fildl
popf
dec
push
iret
pop
js
xor
sti
sub
subl
lods
bound
push
loopne
push
mov
mov
addr16
cmp
lods
dec
and
movsl
cmp
add
loop
jmp
ret
shr
sahf
adc
data16
pop
push
jle
and
xchg
out
stos
cwtl
mov
mov
add
mov
mov
insl
jge
outsl
mov
xchg
dec
push
je
cs
lret
sarl
dec
outsl
jge
out
mov
xlat
outsb
push
shll
pop
outsb
jbe
ret
jg
hlt
ror
adc
mov
pushl
clc
dec
iret
int
add
stos
pop
cld
adc
lret
xor
inc
push
dec
push
in
das
stc
and
ds
enter
shr
xchg
mov
inc
out
push
icebp
lock
aas
cs
push
mov
outsl
imul
jecxz
inc
or
pop
sbb
popf
and
push
ret
in
arpl
jl
sbb
xor
mov
nop
ljmp
inc
into
into
inc
adc
addr16
dec
repz
cmp
mov
cli
and
outsl
ss
lods
push
xchg
add
or
stc
nop
rclb
movsb
fistps
insl
or
outsl
push
stos
mov
lahf
test
ret
test
lret
xchg
into
pop
cwtl
cmp
sub
push
gs
inc
cmpsl
mov
cli
push
jo
shll
in
pop
int3
roll
sub
fbld
sub
inc
das
das
pusha
popa
call
cmp
fnstsw
xchg
test
fcmovnb
sub
xchg
adc
pop
test
leave
sbb
in
mov
sti
fiaddl
mov
fnsave
adc
inc
push
mov
adc
xor
cmpsb
cld
adc
rcrl
insb
ret
mov
and
xchg
outsl
dec
dec
mov
inc
and
mov
aas
mov
movl
or
insb
dec
sub
dec
adc
mov
loop
sbb
lds
testb
mov
mov
or
mov
cli
push
mov
nop
xchg
imul
pushf
mov
scas
jg
out
xchg
pop
and
lods
inc
push
ss
ljmp
pop
in
push
scas
add
ss
cmpsb
cmc
mov
out
and
int
gs
ds
adc
int3
pop
push
scas
xchg
gs
orl
fisubrl
orb
and
lahf
or
add
and
rorb
or
movsl
jnp
or
dec
ja
insl
and
sub
xchg
mov
ret
mov
mov
fld
or
testl
daa
test
push
mov
movsl
xor
in
and
imul
loopne
xchg
push
addl
popa
clc
mov
xchg
pop
arpl
lods
scas
add
and
imul
and
pop
push
sub
cmpsl
lds
mov
push
jl
mulb
sbb
ss
dec
leave
out
adc
ret
pop
mov
imul
hlt
bound
xchg
mov
int
pop
stos
stc
and
stc
lea
cmp
in
push
fwait
mov
and
lds
push
xlat
popa
loope
rolb
lcall
test
js
dec
je
jp
rorb
test
sti
nop
stos
movsl
stos
xlat
lret
sbb
cwtl
sub
jg
mov
cld
pusha
ss
shrb
sti
stc
stos
jae
leave
mov
or
outsl
push
movsl
ljmp
ret
sub
sbb
pop
push
and
sub
aaa
cs
pop
pop
pop
repz
and
repz
addr16
nop
adc
lahf
mov
sbb
js
sub
push
mov
or
mov
stos
call
aas
add
je
mov
aam
and
xchg
lods
addb
and
mov
xor
mov
cmp
jmp
mov
inc
jnp
in
shll
push
jo
in
mov
push
das
sti
fwait
mov
rol
pop
mov
cli
jnp
ds
std
cmp
test
outsb
or
jne
lahf
dec
iret
jg
xchg
jne
and
cltd
sbb
sbb
loope
sbb
cmp
das
xchg
mov
add
xor
and
test
and
push
cltd
mov
add
xlat
out
inc
cmp
loop
pop
movsl
mov
loop
mov
popa
adc
insb
mov
pop
xor
lret
dec
cmp
daa
movsb
jg
std
lods
rcrb
mov
push
dec
mov
xor
in
push
ret
shl
int3
adc
daa
or
mov
jle
push
push
sbbl
mov
test
pop
movsl
xor
sub
pop
dec
lds
bound
je
pop
cmp
cmp
mov
out
inc
orb
mov
jo
push
mov
jb
pop
cmpsb
lods
aas
xchg
sub
int
in
fimuls
aad
test
jnp
stc
repz
jbe
mov
xchg
mov
pop
fwait
xor
das
shrb
lret
scas
scas
test
fdivrl
xchg
xchg
lds
addb
into
pop
orb
xchg
push
xchg
push
rcrl
inc
bound
fildll
xor
mov
daa
pop
mov
out
repnz
dec
insb
jp
sahf
insl
sub
fbstp
add
iret
cs
fdivl
mov
or
sub
dec
mov
mov
adc
jmp
adc
jo
dec
syscall
sbb
inc
pushaw
test
mov
push
imul
sub
aam
mov
out
or
xchg
add
push
lahf
test
mov
int
jmp
bound
mov
add
push
dec
inc
jle
xor
mov
cmpsl
repz
adc
push
test
mov
push
inc
cld
add
call
popa
fiaddl
mov
iret
loope
mov
test
add
test
divl
xor
sub
inc
jo
fistl
lcall
cld
fdivrs
push
lret
sub
cli
into
sub
incl
jp
loop
jmp
jns
push
xor
loopne
cmpsb
addr16
push
cmpsl
mov
xor
dec
pushf
in
lods
inc
inc
inc
rcrl
push
jb
dec
sub
andb
insl
cmp
push
repz
or
lea
cltd
push
test
xor
xchg
sahf
xlat
outsb
es
and
mov
mov
and
pop
push
push
repz
jo
mov
xor
pop
push
inc
cltd
rorl
sbb
inc
and
pop
push
mov
ja
in
jo
cld
cmpsl
xchg
cs
dec
or
mov
pop
push
fucomip
xchg
adc
out
xor
js
push
lret
psubusb
pop
adc
fistpll
fstl
dec
and
mov
jp
cmp
xchg
test
sbb
push
incb
stos
daa
and
jb
repnz
out
popf
push
jb
jb
dec
sub
call
clc
adc
insb
xor
test
sti
insb
test
iret
add
lea
cmp
push
and
fwait
aas
lret
ja
mov
test
or
cmp
data16
imul
adc
clc
int
mov
adc
dec
add
iret
fdivl
or
ret
stos
aas
mov
fimull
inc
mov
and
into
outsb
push
nop
push
popa
mov
shll
loopne
in
jae
cmpsl
cmp
mov
imul
out
fwait
sbb
sub
mov
xor
mov
enter
daa
adc
push
mov
sbb
and
adc
movsb
pop
popf
xor
fdiv
pop
dec
inc
icebp
adc
sbb
lret
mov
or
sarl
sub
lcall
lcall
inc
jp
imul
mov
and
add
addr16
ret
dec
jecxz
or
mov
adc
popa
jmp
pop
pop
add
loope
mov
mov
daa
clc
mov
add
xor
out
test
pop
mov
or
popf
push
out
rorb
int3
arpl
pop
mov
xchg
mov
sub
and
pop
dec
pop
jmp
insl
lods
ja
mov
inc
ret
aam
test
cmp
xor
push
into
pop
push
and
lahf
addr16
ret
out
imul
push
and
clc
movsl
inc
jge
pop
stos
daa
mov
xchg
add
jns
addr16
popf
arpl
stos
pushf
repz
sbb
fdivrs
rorl
inc
and
test
filds
cmp
mov
mov
and
sbb
mov
inc
mov
jne
cmp
push
mov
pop
xlat
arpl
pop
ret
lret
pop
sub
ret
das
mov
adc
stos
jmp
stos
add
xchg
movsl
adc
int3
lret
repz
call
das
or
fsubl
or
outsl
adc
add
das
xchg
mov
adc
inc
push
dec
pop
jno
lret
sub
mov
sub
sbb
add
loopne
or
inc
dec
movsl
jl
popf
cltd
pop
push
jle
cltd
mov
out
ja
and
cmpsb
stos
out
cld
das
enter
int
mov
and
mov
pop
adcl
jecxz
int3
xorb
fcmovu
popf
arpl
pop
mov
mov
xor
mov
movsb
push
jnp
jb
jmp
andb
mov
leavew
xchg
outsb
loope
sub
mov
es
push
cli
sbb
push
cltd
or
fs
cli
int3
in
and
sub
cwtl
push
jle
or
test
orl
aam
leave
lret
push
lock
pushf
imul
idivl
adc
xchg
sub
jno
cmpsl
xchg
jecxz
sbb
outsl
add
dec
and
mov
dec
jno
mov
jbe
cmpsl
std
dec
mov
push
xor
std
or
std
or
addb
inc
mov
loope
inc
inc
push
imul
icebp
push
xchg
or
outsb
mov
repz
mov
ja
sbb
pop
sub
nop
repz
dec
scas
jbe
fistps
ja
out
ja
mov
sbb
add
daa
xchg
out
sti
hlt
xchg
sti
adc
loopne
pop
out
sub
iret
fstl
notb
lret
movsb
movb
xor
ljmp
mov
jae
movsl
xor
test
inc
lods
imul
fdivr
bound
xor
push
jmp
xor
cld
aad
pop
pop
adc
jne
xchg
add
mov
adc
jo
iret
mov
movsl
ljmp
sbb
not
enter
divl
mov
ret
rcll
mov
adc
sub
mov
cmp
lahf
inc
add
push
rclb
xchg
mov
in
std
sub
inc
pusha
pop
rorb
cmc
ljmp
aaa
sbb
pop
add
ja
ret
out
adc
mov
imul
cld
pshufw
jl
pop
dec
jo
movsb
repnz
dec
pushf
and
int3
mov
xchg
or
mov
lcall
je
push
jb
lods
cmp
sub
lds
sti
jns
adc
sbb
ret
jbe
inc
push
sbb
inc
jl
add
fs
jb
ficompl
mov
cmp
mov
mov
add
subb
cld
dec
push
adc
sub
andl
xor
mov
fstpl
mov
mov
pop
movsbl
cmc
out
loopne
sub
inc
rcl
sbb
cmpsb
sub
inc
push
int3
cmp
fistpl
xchg
repnz
fimull
fmull
push
stos
mov
sbb
cmp
mov
repnz
notb
mov
out
and
loope
ja
std
or
es
subl
push
mov
insb
sub
divb
push
jecxz
cmpsl
sbb
and
jb
out
dec
pusha
push
sub
adc
movsb
mov
and
cwtl
cmc
add
insb
int3
fs
bound
inc
out
sbb
add
out
push
ja
cmp
mov
movsl
push
xchg
xor
add
dec
js
or
rclb
mov
in
lret
inc
xor
inc
shrb
js
cs
lea
lret
movsl
push
jne
xor
shlb
sarb
push
adc
sub
dec
sub
xchg
jns
adc
mov
mov
inc
loopne
lds
ja
jns
fldt
scas
jbe
pop
push
cmc
inc
sbb
add
fiadds
in
mov
call
cmpsb
repnz
clc
fstpl
xchg
aad
das
div
sbb
pop
enter
mov
mov
pop
sti
adc
inc
lret
cs
jne
or
mov
movd
out
sbb
cmp
and
cmp
ss
andb
pop
inc
cmp
dec
add
mov
adc
sub
pop
jmp
andb
cmp
sbb
jnp
mov
or
arpl
mov
fstl
sahf
in
cmpsl
cmp
push
inc
pop
adc
inc
daa
popa
sbbl
sub
cmp
pusha
add
sbb
sbb
mov
push
push
sar
mov
loop
push
loopne
aad
dec
xor
nop
sbb
hlt
in
lahf
ss
and
fnstenv
and
test
xlat
pop
fdivrl
in
lds
scas
and
mov
rorl
cmpsb
add
sub
adc
shl
ja
dec
mov
sbb
loopne
cmp
push
out
dec
fcmovb
clc
clc
push
sub
jnp
jae
scas
sub
andl
mov
aaa
clc
int3
sub
clc
push
mov
cli
divl
stos
aam
jmp
add
test
mov
movsb
xchg
fwait
mov
mov
pop
sub
push
push
inc
subb
dec
dec
mov
out
out
mov
mov
pop
out
pop
xlat
mov
aad
addl
std
xchg
mov
cwtl
aas
and
push
add
or
cmp
xchg
or
inc
cli
fnstenv
outsl
dec
fiadds
adc
push
outsb
clc
rcl
sub
jo
iret
ja
aam
lock
incl
jbe
mov
cltd
dec
pop
sarl
shr
jne
icebp
dec
fsts
cltd
jno
js
and
push
fbld
mov
popa
hlt
xor
icebp
je
mov
scas
rorb
imul
aad
mov
repz
or
mov
push
test
cmc
in
iret
sub
push
cltd
pop
and
dec
and
fwait
mov
sbb
cmpl
push
repnz
sub
out
icebp
push
sti
fcom
out
mov
aam
test
stos
jb
pushw
push
xchg
or
or
icebp
bound
pushl
lods
in
shlb
sarb
fistl
push
mov
out
ret
sub
cmp
imul
pop
xor
inc
mov
add
int3
arpl
movb
stos
aad
pop
mov
cld
add
sub
inc
xchg
adcl
adc
ret
xchg
cmp
das
add
inc
xchg
icebp
inc
mov
mov
push
xor
jmp
fnstenv
dec
push
cmp
adc
fnstcw
repz
enter
adc
cs
js
pop
stc
dec
cmp
ljmp
clc
ret
pop
ljmp
jo
sub
mov
stos
sti
pop
das
shrl
icebp
jle
and
add
repnz
push
mov
call
stos
jge
jnp
scas
cmp
cmpl
push
loop
mov
idivl
in
les
jae
jge
addr16
cs
call
cmp
jbe
push
pop
out
pop
pop
push
xchg
adc
xor
rcrb
and
aad
lret
gs
js
stos
mov
push
outsl
rcr
jb
or
aad
sahf
jge
mov
loopne
cwtl
in
out
inc
lea
adc
xchg
and
sti
jp
pop
test
adc
sub
subb
adc
push
int
and
push
fnstenv
mov
add
imul
cwtl
loop
mov
mov
fists
sub
pushf
stc
popf
cli
aas
pop
mov
pop
adc
and
mov
inc
sub
sub
addr16
adc
aam
lock
xor
hlt
xchg
xchg
hlt
mov
rorl
nop
mov
test
sub
imul
cmp
mov
rcll
incb
xchg
xor
sbb
sahf
in
movsl
icebp
jmp
xchg
scas
and
or
and
sub
lock
jge
mov
cs
mov
add
dec
push
jmp
push
adc
sub
mov
jno
insl
mov
push
sbb
mov
mov
add
mov
je
int
popa
js
test
jb
mov
sbb
mov
pop
sbb
add
sub
xor
shlb
push
inc
les
lahf
negb
test
cmp
popa
and
cmp
pop
loope
std
sub
stos
rorb
loopne
pop
ret
jo
enter
push
movsb
dec
sub
mov
or
lds
pop
cmp
aaa
out
push
mov
pop
sub
pusha
add
push
cmp
mov
lods
push
inc
adc
bound
push
out
inc
adc
popa
mov
jnp
mov
dec
fwait
push
imul
push
popf
xor
loopne
insl
imul
pop
sbb
mov
jno
inc
rcrb
aam
jmp
nop
sbb
data16
fs
xchg
jno
adc
sbbl
mov
pop
mov
pop
xchg
xor
addr16
sbb
add
mov
movsb
dec
jo
in
push
mov
xchg
jbe
ja
push
xlat
cwtl
out
lea
daa
fwait
add
and
fwait
lret
or
decb
outsl
xchg
gs
dec
pop
sti
xchg
fucomp
cmc
sbb
insl
sbb
mov
mov
les
push
sahf
xchg
mov
pop
in
outsl
push
outsb
fbstp
ds
les
movsl
rcrl
jecxz
mov
mov
or
sti
int3
fiaddl
mov
dec
ds
popl
push
pushf
ljmp
sbb
test
idivb
cmc
sbbl
lods
push
fsubs
loope
je
jno
insl
xchg
xchg
insb
adc
sub
shll
daa
shlb
mov
cmc
sub
cs
sub
dec
sbb
test
cmp
mov
loopne
adc
xor
movsl
repnz
cld
inc
hlt
movsl
int3
xchg
add
nop
in
testb
inc
gs
xlat
lock
mov
inc
mov
es
inc
pop
je,pn
cmpsl
inc
push
cmp
enter
push
xchg
cmp
xchg
adc
mov
sub
push
stos
or
hlt
rol
repnz
sbb
mov
mov
xchg
xchg
jno
adc
or
xchg
pop
add
xor
shrb
inc
adc
fiaddl
or
or
inc
frstor
pop
fdivl
icebp
jae
loope
stos
mov
jp
jg
rclb
push
bound
test
mov
xchg
imul
add
movw
pop
je
push
sbb
nop
pop
ret
fnstcw
push
in
movsb
outsb
stos
das
fwait
hlt
jae
call
xchg
sub
aas
outsb
sti
scas
out
jecxz
mov
inc
cmp
and
or
movsb
outsl
testb
ljmp
mov
dec
orb
rcll
jnp
mov
xor
pop
lock
out
add
cld
out
data16
mov
lods
pop
cmp
ljmp
jbe
jl
or
xor
sub
add
lahf
data16
inc
add
pop
inc
adc
clc
mov
fyl2x
pop
add
or
push
jo
aad
jecxz
fs
mov
mov
push
add
aaa
xlat
lds
push
addb
jbe
mov
pushf
pusha
fistpl
mov
xchg
js
xchg
imul
mov
movsb
daa
out
outsb
jle
imul
bound
sbb
and
mov
std
mov
outsl
subb
mov
mov
shrb
push
cs
scas
inc
mov
push
mov
sbb
sbb
mov
push
xchg
std
cli
shrb
and
sbb
mov
add
sbb
adc
jae
cmp
pop
scas
add
lods
mov
cmp
outsl
xchg
scas
mov
adc
lret
add
inc
fmul
and
dec
sahf
loope
rclb
sub
push
sbbl
inc
clc
sahf
jmp
inc
pushf
pop
jns
add
test
mov
int3
idiv
and
inc
aas
ds
mov
pop
pop
add
inc
test
and
stos
inc
test
sbb
jmp
pop
bound
sarl
dec
leave
inc
dec
shrb
and
dec
adc
mov
and
roll
cmpsb
pop
push
mov
pop
scas
pop
or
test
xchg
xor
lret
cld
lock
add
dec
sti
lret
jo
sub
lret
pop
mov
dec
in
pop
outsl
lcall
or
mov
push
call
shlb
mov
nop
cmc
inc
fstpt
pop
stc
mov
enterw
pop
xor
aas
jbe
insb
std
ds
push
aaa
jbe
call
jle
pusha
mov
movsw
adc
out
inc
and
and
jae
lods
fisubs
out
push
mov
pushf
jg
jo
cmpl
scas
xor
fimuls
test
iret
jne
enter
mov
sbb
insb
int
pop
enter
imul
inc
cmp
xor
jmp
in
out
xor
adc
das
lret
std
lods
lock
inc
and
negb
xchg
push
adc
xchg
es
or
mov
shrl
push
add
sub
scas
cwtl
jno
inc
xchg
sub
mov
mov
lea
add
stos
lock
icebp
inc
push
push
mov
cmp
cmc
ss
mov
or
mov
push
xchg
les
cmp
push
pop
mov
and
lret
pop
scas
and
int
mov
adc
mov
outsb
out
cmp
sub
xchg
decl
nop
aaa
pusha
xor
fbld
aad
or
mov
jbe
push
push
and
mov
xchg
cwtl
out
lret
add
adc
lahf
pop
cmp
cwtl
push
lock
inc
aas
bnd
push
or
or
or
mov
out
sub
outsb
scas
jnp
and
sahf
cmp
mov
js
sbb
jno
sahf
subb
outsl
xchg
leave
shl
not
rcrb
sub
in
std
bnd
pop
mov
in
inc
pop
aam
cmp
stc
jmp
sub
inc
fldcw
inc
fcoml
inc
das
mov
dec
inc
sarl
ja
sbb
inc
adc
xor
pop
movsl
xor
fisubrs
cs
stos
test
push
or
xor
sub
mov
rorb
in
mov
mov
push
mov
xor
stos
push
inc
pusha
or
xchg
fmuls
jge
bound
ja
ja
mov
subb
lock
in
enter
insb
sub
mov
cmp
and
and
sbb
push
inc
adc
outsl
jns
lahf
cmp
inc
ret
pop
sbb
mov
les
xchg
xchg
mov
movsb
into
add
sub
xchg
jecxz
dec
lcall
stc
xor
cld
test
repnz
addr16
mov
mov
or
movsl
or
adc
cmp
sbb
inc
xor
fs
cmp
xchg
jbe
dec
jmp
lea
dec
adc
out
adc
sbb
pop
xchg
imul
xor
mov
sub
cmpsl
int3
cmp
in
rcrb
test
pop
movsb
stos
inc
or
xchg
pusha
mov
xchg
mov
push
jg
aad
and
sub
jno
nop
jmp
loop
clc
test
ret
pop
and
dec
mov
add
dec
sti
dec
mov
xchg
lods
inc
adc
mov
popa
jmp
fsubrl
add
das
adc
add
ljmp
fs
fsubrl
xchg
push
sti
iret
sahf
jno
adcb
push
enter
pop
lods
stc
cmpsb
ret
dec
dec
sub
repnz
pop
clc
arpl
in
dec
pop
idivb
js
push
pop
lods
test
fistpl
mov
sub
push
jp
addb
pushf
push
fistps
mov
xchg
xchg
stos
lahf
or
pop
lea
std
iret
jnp
xor
imul
invd
mov
jecxz
daa
stos
mov
mov
fadds
xchg
adcl
xchg
sbb
popf
or
insb
clc
repz
outsl
push
sbb
xor
loopne
mov
or
add
andb
mov
nop
loop
fxtract
addb
jne
enter
xlat
sbb
xchg
sub
cmp
call
sbb
lret
push
daa
push
jnp
call
pop
push
push
mov
mov
xor
mov
lods
repnz
or
add
cmp
out
popf
hlt
test
movsb
loopne
ffree
or
fs
sub
repnz
outsb
inc
ljmp
mov
rcrl
add
cmp
mov
loopne
or
es
adc
test
jo
shlb
bound
push
fistps
push
dec
push
jb
adc
data16
and
dec
dec
fbld
and
dec
add
mov
test
mov
cli
sbb
mov
adc
lds
aam
add
or
jge
and
movsb
lea
sub
or
mov
je
push
insb
add
xchg
sti
mov
pop
or
ret
mov
cmp
inc
in
rorb
mov
lret
loopne
jo
and
xchg
call
xor
sbb
dec
pop
aam
out
sub
out
scas
sbb
xor
and
out
xchg
popa
cmp
push
lock
out
dec
dec
adc
pop
dec
inc
into
sahf
cmpsb
push
cmp
xor
icebp
mov
push
jb
xchg
aaa
push
sbb
insl
adc
lds
mov
mov
pop
imul
lea
pop
mov
sbbl
lds
sbb
fsubrs
ja
xor
xor
push
testl
dec
inc
into
fmul
cltd
mov
xchg
outsl
fwait
xor
ffreep
dec
or
cmp
add
addb
inc
dec
push
or
lret
insl
sbb
xchg
jge
and
stos
out
cmp
push
daa
hlt
pushf
movsb
dec
ljmp
test
out
xchg
xchg
sub
push
jge
repz
decl
mov
xor
push
inc
pop
inc
mov
cmp
xchg
repz
sahf
hlt
addr16
dec
pop
stos
ficoml
in
cmp
std
push
ss
jle
lret
mov
lods
negb
add
cmp
shlb
in
mov
cmp
cmp
js
iret
cs
xor
rcrb
mov
cltd
jo
pop
ljmp
int
cmp
push
dec
arpl
jbe
and
adc
and
add
mov
movsb
mov
jo
movsl
cmpsb
outsb
shll
aam
ss
jp
test
push
loope
es
das
push
mov
jp
nop
es
mov
push
jmp
xor
les
jns
out
and
dec
cmp
sub
ret
gs
pop
add
xor
test
mov
adcl
mov
fistps
push
pop
adc
lods
mov
and
outsb
test
sub
cmp
add
repz
xchg
lods
inc
pop
lcall
in
scas
dec
inc
or
xor
push
push
insl
mov
jmp
jle
imull
pushf
test
xchg
fidivl
and
repz
inc
in
lock
lods
sub
jp
mov
mov
jmp
adc
mov
iret
pop
pop
scas
mov
sbb
mov
iret
mov
divb
clc
loope
pop
hlt
addr16
push
leave
imul
adc
cmpsl
and
test
sahf
lods
imul
mov
out
mov
icebp
mov
outsl
orb
or
push
int
out
inc
fsubrs
add
shr
movsb
test
cmp
xchg
mov
into
cmpsl
inc
mov
or
or
scas
call
inc
push
xchg
sbb
dec
or
mov
jne
mov
addb
push
mov
inc
sti
xor
mov
push
pop
in
or
popa
jae
data16
cltd
test
push
test
lcall
imul
repz
and
pop
scas
ret
inc
fcomp
bound
jns
push
lret
je
cmpsl
movsl
daa
xlat
cltd
ror
cs
std
repnz
xor
mov
adc
shl
jno
mov
mov
cmp
test
pushf
cli
sub
enter
sub
daa
pop
sahf
and
jo
cmc
sarb
pusha
dec
int3
sbb
aam
add
push
xor
xchg
scas
jb
mov
and
into
fnsave
push
mov
or
movsl
mov
mov
adc
jne
adcb
push
out
pop
xchg
jbe
scas
jnp
cmp
sahf
bound
aad
inc
int3
or
cmc
hlt
and
fimuls
sub
addr16
and
mov
movb
push
xchg
das
icebp
add
bound
push
mov
or
push
mov
dec
cs
shll
or
lret
call
xor
iret
das
shll
sub
lods
enter
or
insb
bound
cld
and
inc
jbe
shr
aad
in
dec
loope
sub
mov
xchg
xchg
fdivs
sub
push
out
insl
iret
mov
icebp
mov
aad
sbb
jecxz
cmp
testb
sub
lret
les
add
nop
ffreep
aas
adc
sub
mov
lds
ror
subl
push
in
aaa
xchg
jl
mov
jecxz
imul
push
mov
ljmp
in
loope
and
and
test
jns
icebp
add
cmp
push
pushf
pop
pop
dec
jne
loope
push
mov
arpl
cmp
xlat
or
adc
push
mov
xchg
mov
out
xchg
adc
leave
mov
cltd
sub
push
lret
xchg
pushf
das
mov
sti
and
fwait
mov
stos
pop
shlb
or
mov
insb
xchg
rcrb
jo
ljmp
mov
negl
jp
gs
popf
and
sti
sub
loopne
aad
mov
divl
jg
adc
xor
pop
icebp
add
mov
jle
xchg
addr16
xor
subl
es
fildll
jle
jno
inc
adc
cmpsb
dec
hlt
adc
dec
fadd
fwait
in
iret
movl
aad
outsb
ffree
insl
mov
arpl
jo
nop
jne
mov
dec
mov
cli
inc
jmp
popa
mov
or
sahf
xchg
jo
scas
mov
inc
shlb
inc
cmp
push
dec
lahf
arpl
sub
adc
add
sbb
cmc
popa
ret
fstl
add
jbe
cmp
cmp
inc
jge
xchg
movsb
sub
mov
dec
repz
and
lcall
movsl
inc
pop
shll
sub
rorl
andl
es
or
pop
xlat
jnp
sub
push
jns
mov
mov
into
or
or
adc
andl
and
add
lahf
fisubrl
lds
leave
sub
mov
arpl
add
xchg
and
ja
popa
das
push
js
pop
push
call
adc
dec
leave
pushf
xor
cmpl
inc
adc
pop
mov
xor
push
cmp
cld
je
pop
dec
lea
fsubr
cmp
scas
adc
leave
mov
jp
xor
push
stos
xchg
js
lods
test
mov
push
std
or
jl
shr
cmpb
stc
mov
inc
jg
push
jno
jae
into
push
jecxz
mov
shrl
and
das
ss
outsl
notb
in
mov
or
mov
push
test
xor
xchg
jmp
jecxz
in
jae
lret
sbb
xchg
jmp
xor
jnp
sub
push
inc
inc
je
out
fcompl
inc
lock
mov
adc
lahf
push
popf
pop
fwait
xor
cmp
xchg
mov
cmp
inc
fistpl
pop
pop
in
loop
lahf
pusha
mov
jae
lret
or
cmp
in
mov
xchg
loop
xchg
addr16
add
stos
hlt
cltd
mov
lret
xor
rcrb
ret
cmp
mov
xchg
mov
mov
ret
xchg
out
adc
jmp
or
cmp
or
outsb
scas
and
jb
jl
loop
in
mov
cmpsb
insl
cmovns
lods
mov
and
adc
and
push
push
fidivrl
inc
or
dec
daa
cmp
clc
pusha
bnd
stc
jp
jmp
jmp
sub
dec
pop
int
in
outsb
scas
pop
cs
sti
and
icebp
xchg
add
inc
or
jbe
leave
arpl
popa
cs
add
cmp
fcoms
mov
jb
jmp
test
push
or
dec
gs
int3
jg
js
sub
or
mov
aam
sbb
and
adc
sbb
mov
divb
movsb
sub
jb
or
lock
scas
fildl
out
and
or
std
sub
popf
movsb
sub
push
hlt
xchg
add
mov
incb
or
add
jge
sbb
xchg
enter
jns
lods
test
add
mov
lods
in
sub
jne
rol
jp
xor
int
add
jne
mov
add
xchg
mov
cwtl
movsl
vminpd
cmpsb
dec
popa
mov
cmp
adc
push
enter
mov
inc
sarb
inc
fs
icebp
push
insl
sbb
cmp
push
add
mov
xchg
dec
fdivrs
mov
mov
fdivl
xlat
std
dec
les
ret
lret
sbb
mov
jge
xchg
mov
out
mov
cmpsb
xor
imul
push
mov
xor
push
pop
fsubrp
cltd
xchg
mov
ss
pushf
aas
repnz
test
out
popf
cli
das
nop
daa
popa
sbb
pop
jno
xor
sub
sarb
pop
cmp
mov
cwtl
pop
mov
sahf
pop
daa
sbb
icebp
push
or
mov
js
jmp
pop
ja
das
ficoms
test
pop
repz
leave
dec
sahf
push
inc
jmp
jmp
ss
fwait
push
xor
adc
fsubrl
push
jmp
add
jb
sub
in
push
fyl2xp1
xchg
fldl
mov
dec
push
pop
mov
scas
cmp
clc
js
dec
pop
mov
stos
fs
mov
aad
test
int
dec
insl
pop
fdivp
mov
lahf
shrl
cmp
fistps
mov
mov
mov
mov
pop
lods
scas
pusha
ja
fildl
stos
pop
outsb
pusha
cmp
lds
in
add
push
and
test
test
fimuls
sub
loop
sbb
jl
cmp
ret
call
adc
fdivl
hlt
pop
mov
adc
cmp
inc
fcoms
mov
cmp
mov
cmp
sbb
xchg
adc
inc
mov
sbb
mov
cld
dec
mov
jb
jne
loope
cmpb
iret
fs
xlat
mov
aad
int3
xor
dec
inc
lret
adc
frstor
sbb
or
jne
rcrl
stos
add
mov
xchg
mov
lods
rolb
adc
jp
fldt
lods
push
test
and
cmpsb
or
loopne
aam
xchg
cmp
sbbl
test
mov
aaa
fisttpll
inc
jmp
cmc
fwait
inc
jne
jb
shrb
push
or
imulb
cmc
out
repnz
sahf
lods
ret
jl
inc
push
loopne
sbb
and
iret
inc
jl
jle
push
std
into
pop
push
call
pop
jge
fisubrl
xor
stc
mov
push
leave
lock
pop
sbb
pushf
xor
sti
arpl
gs
push
adc
test
vpaddusw
add
rorb
xchg
lret
cmp
jb
ljmp
int
inc
push
jmp
xor
popa
in
pop
lcall
mov
sarl
lock
jecxz
arpl
test
mov
mov
enter
into
jmp
out
and
xchg
jnp
inc
and
rcl
cmp
icebp
jecxz
rorl
mov
pop
ret
stc
push
in
hlt
push
xor
aas
jmp
jecxz
iret
dec
pop
das
mov
cmc
mov
fsubrp
cmpsb
mov
imul
shrb
rolb
mov
xchg
clc
xorl
sbb
mov
outsb
mov
sbb
sbb
xchg
nop
xchg
mov
adcb
std
rcrb
cmp
jle
xor
test
cmc
pop
or
and
insb
mov
mov
data16
lret
jg
adc
mov
scas
out
inc
pop
loopne
icebp
fidivs
insl
subb
jne
add
movb
xchg
mov
pop
pop
jmp
pop
scas
sbb
arpl
dec
adc
orl
in
flds
push
movsl
pop
es
mov
fdivrs
lods
cmpsl
ret
pop
cltd
or
fisttps
les
fdivl
mov
lods
jl
in
std
and
leave
lcall
mov
dec
xor
jl
add
adc
daa
repnz
push
and
xchg
negl
mov
lods
popf
push
mov
sbbb
call
test
xchg
mov
pop
notb
cltd
sub
lahf
xor
push
mov
mov
pusha
into
incl
enter
mov
cmp
int
dec
jnp
mov
aad
sub
push
mov
es
cmpsb
repnz
mov
movsb
or
mov
sub
sub
fidivrl
int3
xchg
sbb
dec
push
mov
inc
imul
aaa
mov
cmp
xlat
sbb
mov
jge
pop
push
mov
mov
movsl
mov
ret
pop
push
pop
cmp
fsubp
stc
and
adc
xchg
inc
fidivs
pop
add
xor
outsl
ret
inc
sbb
pop
push
jne
shll
insb
fsubl
dec
dec
mov
dec
and
frstor
inc
xchg
dec
add
sub
dec
pop
push
mov
xor
ja
add
dec
and
inc
sbb
dec
or
arpl
js
or
nop
outsl
lcall
addl
pop
and
pop
xor
aaa
jno
push
xlat
sbb
xchg
and
imul
repnz
mov
adc
ljmp
inc
in
jbe
ss
loope
mov
gs
lcall
jg
in
mov
mov
mov
outsl
mov
pop
call
dec
lock
inc
dec
daa
mov
jecxz
js
sub
mov
mov
sbb
pop
testb
sahf
scas
rclb
lea
orb
ret
push
popf
out
dec
adc
sbb
sbb
addr16
aaa
fldl2t
push
popf
push
and
mov
loop
test
add
insb
cmpsb
cmp
ds
shrl
jo
add
lret
push
add
add
adc
jns
fs
sbb
cmp
lahf
push
lods
shrb
shlb
inc
pop
push
cs
daa
cmpps
insb
xchg
imul
cltd
roll
stc
jno
sti
xor
int
faddl
je
push
mov
xor
loopne
pop
popf
cld
clc
push
or
fistl
imul
or
xlat
repz
pop
les
jno
jbe
xor
xchg
mov
inc
and
xor
aas
dec
daa
bound
subb
or
pop
dec
and
cltd
xchg
xor
xchg
mov
jp
sub
mov
enter
lea
in
sbb
add
imulb
mov
pusha
sub
clc
add
pop
adc
mov
inc
mull
add
jmp
jb
jnp
push
sahf
lods
ficoms
ljmp
in
cmpsb
ds
mov
movsl
cmp
xlat
stos
pop
sahf
fdivr
pop
cmp
sub
inc
repnz
lock
push
push
ud0
lret
xchg
mov
lea
mov
inc
jp
ds
and
lahf
pusha
fisttpl
jmp
leave
adc
rol
jae
dec
test
lods
rcrl
adc
xchg
daa
inc
push
sub
add
fs
js
sahf
and
add
cmpsl
in
adc
mov
pop
and
adc
adc
mov
fdivp
clc
xchg
cmp
idivl
scas
dec
sbb
movsb
sub
pushf
es
lahf
stos
and
out
jmp
xchg
jae
push
mov
push
out
fcmove
mov
loopne
jae
sti
pop
inc
xor
inc
xchg
push
sub
dec
xor
nop
leave
adc
out
movsb
sbb
mov
fdivl
sub
in
pushf
daa
popa
mov
test
outsb
mov
fcomi
mov
mov
in
sub
jmp
push
pop
sub
mov
sub
shll
jo
pushf
dec
add
div
inc
cs
dec
pop
mov
aad
and
stos
inc
inc
xchg
les
das
push
inc
ret
shlb
inc
fistpl
ret
stc
hlt
pushf
cltd
xor
jge
testb
in
pop
mov
push
jae
dec
sub
sub
iret
enter
mov
lock
and
and
stos
pop
mov
xor
fdivl
subl
xor
mov
mov
movsl
add
sbb
adc
mov
pop
or
int
cwtl
adc
xlat
ret
and
addr16
lcall
inc
fsub
xor
cmp
adc
cmp
push
sub
movsl
movsl
sbb
mov
out
imul
cmp
addr16
outsb
ret
pop
mov
mov
dec
mov
arpl
mov
repnz
cmp
mov
sbb
movsb
shll
sbb
inc
push
lods
cmp
add
hlt
push
mov
sbb
fildll
jb
sub
mov
jmp
inc
cmpsb
into
and
push
push
repnz
adc
jno
pushf
stos
lret
aam
or
dec
sbb
clc
sbb
fimull
xchg
dec
mov
fmull
or
and
mov
aas
push
jecxz
push
cmp
adcl
push
or
scas
inc
pop
push
push
lds
int
mov
pop
mov
rclb
fwait
mov
pop
arpl
inc
cmp
pop
mov
enter
xchg
sbb
or
mov
outsl
aad
xchg
call
and
aad
sbb
pop
add
mov
pop
insl
addb
gs
push
xchg
insb
cmp
cli
int3
xor
jns
xchg
pop
loopne
push
scas
out
lds
addl
and
or
stos
jle
or
and
imul
cmp
stc
add
sub
sub
rcr
cmp
das
movsl
pop
mov
adc
cmp
test
lcall
into
adc
xor
hlt
mov
mov
test
mov
dec
iret
data16
mov
jp
ja
xor
xor
aad
push
lret
out
repnz
icebp
call
adc
iret
mov
stos
nop
lea
stc
je
mull
pop
stc
add
roll
aam
xchg
movsl
push
je
shrl
sbb
ret
mov
push
lret
es
aam
jno
dec
loop
sti
shl
inc
inc
pop
jl
sbb
sbbb
mov
popf
inc
xor
or
jl
and
fists
pop
cmc
jge
scas
nop
rorl
dec
imul
add
xor
mov
out
in
mov
repnz
mov
mov
add
xlat
cmp
cmp
add
aas
sbb
int
pusha
aas
push
movsl
movsl
pop
adc
push
popf
sub
scas
int
loopne
xor
sahf
mov
jnp
cmp
sbb
and
movsl
dec
lods
inc
inc
mov
mov
test
jnp
push
stos
mov
push
push
pop
cld
xchg
in
data16
sbb
push
jae
inc
stc
testb
je
lret
stos
dec
iret
fwait
xchg
call
dec
add
dec
push
movb
cmp
gs
xchg
push
xor
movsb
mov
ss
js
sub
xchg
test
add
cli
jne
push
adc
push
pop
mov
movsb
jmp
add
nop
cmpsl
das
or
sbb
in
cltd
imul
or
sbbb
in
mov
and
adc
push
pop
fxch
pop
jae
cli
inc
pop
sbb
movsl
mov
cmc
loope
cmpsl
push
sbb
add
cmp
xchg
adc
cmp
aaa
out
lcall
out
int3
testl
sbb
jbe
test
pop
jo
int3
push
jne
cld
xor
popa
pop
inc
in
lea
jle
jae
inc
lahf
xchg
push
cltd
lods
imull
xchg
and
dec
xor
fsubrp
dec
pop
push
loop
mov
xor
cwtl
sbb
xor
jae
sbb
push
shlb
cmp
out
adc
cmp
jns
jecxz
cli
jne
mov
jo
ficoml
in
fidivs
inc
inc
or
pop
orl
ret
repnz
out
pop
inc
out
pop
ds
xor
xchg
js
jb
test
sub
pop
ja
in
movsb
dec
xchg
adc
push
shl
add
add
add
inc
cmpsb
fdivrl
inc
bound
aad
int
pop
fs
mov
test
lret
leave
scas
mov
leave
cs
mov
ljmp
ret
test
jne
pop
cmp
dec
cwtl
push
pop
mov
out
mov
addr16
mov
mov
nop
pop
ret
scas
add
loope
push
addl
add
gs
add
sbb
pop
jne
pop
popa
stos
mov
xchg
jge
sub
notl
push
and
push
xor
scas
xchg
dec
loop
or
push
add
test
mov
pop
pushf
fiaddl
cmp
out
imul
mov
or
lret
testl
popf
lods
mov
mov
scas
insl
xor
mov
mov
dec
fistps
xor
mov
inc
dec
lcall
or
mov
bound
repnz
adc
xor
jl
inc
mov
std
or
ss
or
loop
icebp
and
dec
adc
push
sbb
xor
xor
scas
cmp
mov
insl
mov
pusha
hlt
xor
imul
mov
or
scas
nop
pop
push
mov
xlat
outsb
xor
and
cmc
insl
lret
mov
dec
sbb
mov
jecxz
not
and
and
jnp
imul
lahf
sbb
xchg
fbstp
xor
xor
inc
das
mov
xor
lock
pop
in
sarl
xchg
mov
insl
test
pop
mov
not
shrb
int3
pushf
cli
ret
cltd
push
lahf
clc
xchg
into
rcrb
and
cmpsb
mov
adc
or
fldenv
mov
mov
pop
mov
jg
repnz
loope
inc
pop
pop
out
jmp
sub
daa
xchg
xchg
jno
dec
mov
es
icebp
les
negb
jo
dec
pop
popf
daa
fidivs
jnp
or
fucomp
mov
xor
xchg
fiaddl
mov
pop
lods
das
fnstcw
pusha
jo
jle
cmpb
scas
add
xchg
std
dec
sbb
test
sub
xchg
or
lock
jmp
sti
outsb
out
sahf
mov
xchg
inc
fldcw
adc
sub
pusha
and
ret
js
fnsave
xchg
outsl
and
xchg
out
mov
mov
loopne
xchg
cmc
decl
push
ja
in
mov
out
mov
pop
cmp
pop
jecxz
xchg
sub
and
popl
mov
sub
popf
stos
jge
stc
dec
pop
mov
push
mov
add
je
dec
sarl
push
inc
dec
sbb
adc
and
ja
push
xor
sub
ficompl
stc
mov
pop
add
dec
dec
add
fstps
adc
pop
xlat
insl
jo
cltd
icebp
cmp
idivl
xchg
icebp
mov
xor
lcall
out
push
loop
test
xor
stos
ret
and
or
inc
icebp
adc
xorl
test
ret
xor
jbe
sub
insl
pop
push
in
add
xchg
mov
mov
sbbl
lret
sti
mov
arpl
out
mov
push
add
cwtl
inc
inc
orl
dec
in
adc
int3
pushf
pop
stos
or
pop
lock
jb
iret
sub
insl
sbb
les
cli
mov
mov
jle
test
mov
adc
jg
inc
bound
sbb
cwtl
jle
test
xchg
add
aas
fsub
xor
scas
mov
loope
fwait
add
mov
repnz
iret
daa
cmc
test
mov
pop
loop
add
push
jbe
andl
sbb
sub
outsl
adc
jp
xchg
mov
fsub
xor
mov
jle
shl
sbb
mov
xchg
cpuid
stc
mov
int
mov
push
inc
pop
jnp
pop
shlb
pop
loopne
pop
inc
arpl
iret
mov
sub
lret
orb
sub
aad
shrb
jg
lods
shrl
dec
dec
jecxz
sbb
and
pop
out
test
or
cmpsl
js
call
sub
sub
xorb
push
out
inc
roll
and
sub
cmp
sub
leave
cmpsb
scas
mov
and
test
cmp
dec
pop
mov
add
addl
add
cli
ror
sarb
dec
add
jb
xor
dec
bound
adc
adc
jl
fistps
daa
mov
insb
sub
jge
lret
scas
ret
bound
adc
call
inc
fiaddl
into
pusha
inc
mov
push
cs
dec
in
xor
sub
mov
ss
mov
sub
icebp
cmp
xchg
bound
inc
cmp
std
and
rcrb
rorl
push
inc
push
mov
cmp
lret
jae
notl
scas
lcall
pop
add
sarl
and
jns
sub
insl
dec
push
shll
stos
push
sub
divb
jo
push
cmp
outsb
adc
pusha
xchg
mov
push
bound
popa
outsb
xchg
cs
mov
pop
das
and
out
dec
cwtl
loop
pop
jbe
sarb
jecxz
add
cmp
mov
cmp
int
aad
mov
push
idivl
and
mov
std
jge
pop
inc
fucomip
shl
insl
scas
and
mov
inc
fiaddl
popa
into
xchg
test
int
insb
pop
daa
mov
mov
fcmovnbe
pop
push
fcmovnb
pop
int
ret
ja
cs
bound
je
mulb
sub
mov
movsb
inc
leave
mov
filds
daa
das
sub
in
divb
andl
lret
nop
or
out
je
pop
leave
fcomp
adc
outsb
sbb
iret
subb
lock
loop,pn
sbb
push
clc
test
xchg
or
movsb
popa
stos
dec
loop
add
imul
xchg
arpl
xchg
bound
insl
push
push
inc
hlt
sbb
in
adcb
enter
pop
int
mov
gs
cmc
add
inc
xor
clc
fdivs
out
mov
inc
lahf
ss
pop
mov
dec
pop
dec
add
inc
mov
lock
sub
cmp
movsl
and
popf
into
mov
in
shll
inc
dec
int3
fadds
adc
pop
xchg
pop
or
push
or
outsb
pop
repz
sub
push
add
lds
pop
pusha
cltd
std
iret
mov
lea
inc
sbb
cmp
jecxz
imul
pop
es
xlat
cwtl
jbe
fsubl
cmp
outsb
int
shlb
data16
push
cmp
fwait
xchg
add
mov
inc
mov
pop
mov
xor
int3
pop
loop
dec
fsubrl
push
mov
popf
sbb
or
xlat
fildll
sub
mov
and
cltd
ds
sbb
adc
mov
popf
push
cmp
enter
pop
xlat
dec
imull
hlt
sbb
ds
insl
jmp
xor
out
mov
and
ss
mov
and
add
xorb
fwait
pusha
xchg
dec
cmpsb
out
dec
and
iret
fnsave
sbb
out
push
jo
int3
leave
enter
mov
lea
fldcw
shrb
bound
rcrl
push
mov
call
nop
jl
mov
mov
cs
lret
xchg
loope
rcrl
movsb
push
pop
cmc
cmp
std
movsl
repz
aas
lret
or
rcl
addr16
in
mov
mov
cmp
inc
add
and
jne
and
xchg
insl
in
shlb
hlt
inc
ljmp
scas
test
sub
ret
add
and
nop
aas
popl
pop
and
sbb
cmp
js
jl
repz
push
xchg
scas
out
push
xor
fstps
repnz
in
imul
fnsave
mov
mov
mov
aaa
movb
shrl
fcmove
pop
push
cmp
sbb
mov
fbstp
movsb
jnp
add
jp
xchg
lods
xor
orl
push
out
sub
inc
adc
in
or
and
xor
outsl
push
shll
ror
pop
mov
dec
xchg
nop
push
xchg
cmpb
enter
cld
xchg
shlb
insb
pop
push
mov
jl
inc
gs
pop
and
punpckhbw
pop
cmpb
sub
jge
idivb
pop
adc
cmp
jnp
cmpsl
pop
lock
push
inc
std
or
test
ret
sub
in
inc
or
rorb
js
push
mov
popf
mov
bswap
mov
adc
incb
mov
clc
test
rcll
pop
xlat
xchg
flds
movsl
inc
iret
loope
leave
int
ret
outsl
or
jnp
adcl
pop
mov
xchg
test
out
push
push
push
fdivr
inc
ret
lock
push
push
inc
addb
mov
fildl
das
hlt
mov
inc
leave
cmp
pop
push
mov
mov
loope
and
std
xchg
es
mov
jbe
sti
cmpsl
loope
mov
jns
push
inc
loope
sahf
adc
sub
pop
cmp
push
xchg
ljmp
es
pop
popa
or
lret
and
scas
inc
fildl
cmp
or
jge
test
fcmove
int3
sbb
scas
fnsave
inc
sahf
sub
int3
fnclex
xor
lods
inc
push
and
pop
adc
movsb
cmp
in
js
push
lcall
cmpsb
out
jo
mov
cmc
loope
rcrl
ljmp
inc
xor
lock
inc
leave
dec
push
mov
and
adc
adc
push
xor
push
cwtl
xchg
sarl
pop
pushf
cmp
inc
sbb
sahf
mov
or
loopne
xor
loopne
ret
sub
mov
imul
push
insb
jmp
cmpsb
dec
pop
jmp
xchg
add
aaa
daa
jae
fstpt
fs
xor
out
sbb
jo
inc
mov
inc
sahf
subb
jns
aas
mov
push
mov
js
lds
mov
outsb
jecxz
fwait
loopne
push
es
sub
stos
fstl
add
iret
std
and
pop
mov
lock
popa
adc
mov
imul
push
or
mov
aad
cmpl
jg
dec
pusha
cmpsl
mov
xor
and
inc
insb
popf
mov
repnz
mov
or
fisttps
adc
mov
mov
in
pop
sbbl
adc
mov
xor
jnp
pop
add
and
push
dec
dec
add
jo
addr16
cmpsl
xchg
dec
or
leave
or
pop
aad
pop
out
mov
popa
loopne
jle
push
out
dec
les
adc
jg
xchg
sbb
loope
push
add
xchg
mov
mov
adc
loope
add
test
call
or
addr16
and
xchg
pop
lahf
push
fdivrp
cmpsb
lock
push
fs
stos
pop
adc
mov
lcall
es
add
mov
fldcw
dec
mov
out
xor
js
test
mov
inc
stos
cltd
data16
add
adc
loopne
mov
int3
inc
cli
pusha
aaa
mov
scas
inc
icebp
leave
jae
or
movsl
adc
adc
push
and
mov
pop
cmp
dec
aaa
pop
jp
imull
loop
mov
or
jbe
xchg
mov
stos
rol
test
and
dec
pop
jecxz
pop
nop
mov
test
dec
cld
mov
adcl
adc
out
adc
mov
cwtl
aaa
push
pop
out
mov
out
mov
pop
jne
xchg
xlat
pushf
aam
sbb
add
mov
mov
dec
out
inc
mov
dec
leave
shlb
dec
sbb
inc
mov
out
and
andl
pop
mov
out
popf
inc
fisttpl
xchg
imul
stos
mov
andb
pop
nop
mov
xchg
and
jmp
shlb
sbb
icebp
int3
arpl
and
arpl
jmp
and
mov
or
fisubrs
rcrb
sbb
cwtl
outsl
mov
mov
in
mov
dec
mov
pop
cmp
cmp
movsb
pushf
out
mov
sub
cmp
mov
lods
cmp
xchg
jp
fidivl
xchg
addl
sbb
inc
out
xchg
enter
cmp
outsl
ret
aam
and
mov
into
je
test
inc
or
fisubl
shrl
in
bound
rcl
cld
popa
aam
imul
imul
stos
pop
leave
out
xchg
aam
xor
aad
ljmp
imul
icebp
jb
leave
xchg
fwait
hlt
xchg
mov
xchg
sub
sbb
mov
cmp
push
int
jns
pop
mov
mov
insl
add
ret
mov
jge
dec
xchg
push
in
pushf
mov
jl
scas
xchg
andl
inc
movl
aas
mov
iret
in
in
clc
sub
fs
fistpll
mov
rclb
add
jnp
das
repnz
xchg
scas
inc
lods
add
pop
cli
mov
and
jl
cli
orl
xchg
mov
shrb
fwait
push
push
jbe
imul
mov
scas
lods
pusha
call
lods
inc
adc
stos
bound
ret
xchg
das
or
popf
push
scas
mov
cltd
xor
xor
shrl
cmp
mov
add
xor
aas
push
lock
fsubrs
fsubrs
add
call
push
adc
int3
inc
xor
or
xchg
loopne
movsb
cmp
pop
mov
fbld
jne
adc
or
dec
jo
mov
add
add
jbe
adc
les
inc
adc
das
repnz
jne
sbb
jo
adc
push
jae
cmp
pop
lret
call
lcall
ret
in
arpl
ljmp
xchg
jl
dec
fdivl
fisubrl
mov
loope
repnz
push
shrl
in
lods
xchg
inc
push
pop
and
in
in
mov
ja
cmp
dec
pushf
add
pusha
xlat
pop
mov
xor
push
aas
sub
out
push
shrb
sbb
loop
mov
or
mov
pop
daa
in
xor
sahf
push
mov
fwait
sub
cmpsl
in
clc
fsubr
sub
das
add
push
adc
pop
lea
sub
mov
stc
xchg
sbb
adc
lahf
sbb
xchg
sub
xor
mov
or
shlb
pop
in
notb
jp
mov
sbb
and
pop
push
cmp
mov
enter
cmp
push
dec
rcll
xor
insb
je
arpl
lock
cmp
jo
out
hlt
xchg
lods
mov
std
push
daa
test
gs
adc
and
mov
lea
push
sahf
je
xchg
pop
scas
push
lcall
push
daa
mov
sub
dec
push
mov
cmp
aas
cmc
xchg
sub
push
mov
xor
add
addr16
call
testb
out
inc
stos
fsubrp
out
stc
inc
jmp
movsl
inc
in
nop
sahf
lods
cmp
mov
mov
cmp
pop
shr
pop
cmpsb
mov
scas
xchg
adc
mov
lahf
pop
test
jnp
adc
mov
lods
or
loopne
dec
sarb
xchg
stos
cs
in
cwtl
pop
into
mov
arpl
cmp
xor
iret
sub
in
fwait
xor
es
daa
xchg
push
sbbb
jl
addr16
xchg
jecxz
repz
loopne
clc
enter
cltd
arpl
loopne
pushf
push
lcall
mov
ficompl
imul
movb
mov
sub
sub
stos
lea
test
and
stc
cmp
xor
insb
jne
arpl
mov
outsb
pop
cmp
daa
popa
xor
shll
jecxz
mov
sahf
dec
xchg
xchg
pop
stc
aas
push
push
sub
xchg
add
ss
inc
or
xchg
aaa
mov
sub
rcrl
inc
negl
add
jno
jb
mov
jae
jbe
testl
repz
jmp
mov
int
lret
ja
dec
sbb
sar
or
push
dec
dec
decl
mov
add
loope
cs
fcomps
loopne
in
in
xchg
mov
add
jnp
xchg
in
add
push
mov
aad
stos
sbb
popa
xor
je
fs
mov
mov
xchg
jb
sti
push
mov
lock
mov
pop
jl
dec
mov
std
adc
push
pop
lcall
lds
dec
and
insb
roll
les
loope
push
inc
fstps
dec
sub
mov
insb
or
mov
rol
push
icebp
addl
xor
jne
or
jne
pop
ljmp
mov
lahf
or
lcall
push
stc
dec
push
push
jno
inc
lea
aam
stos
jo
cltd
jne
addl
inc
mov
mov
jbe
data16
pop
mov
jg
das
dec
ret
push
int
inc
rorb
mov
int
cwtl
sub
jno
out
cs
mov
push
or
fsts
popa
movsb
cmp
das
fdiv
or
ret
lahf
xchg
stc
mov
sbb
or
into
imul
and
lods
pop
shr
inc
mov
ds
xor
adc
lret
mov
lods
subb
sub
je
shrb
lahf
push
dec
push
mov
test
jb
out
xchg
or
lret
test
adc
ror
push
or
jp
add
mov
xchg
mov
mov
movsb
mov
mov
sub
push
inc
pop
or
or
or
lea
inc
dec
pop
repz
mov
or
jp
jg
sub
sbbb
sbb
dec
cmp
call
adcb
dec
and
out
add
lock
je
xor
jns
imull
lret
mov
jge
out
xor
jmp
adc
mov
cmpsb
xlat
xchg
add
cmc
mov
push
fadd
xor
or
jmp
jge
adc
into
mov
js
xchg
sub
mov
push
sti
cmp
lcall
xchg
call
repnz
push
push
or
push
sahf
jle
sbb
sub
ficomps
pop
lret
fcmovb
jnp
insb
fildll
cli
idivb
pop
jbe
inc
test
es
sbb
in
jmp
leave
pop
iret
mov
inc
stc
jno
adc
ret
push
mov
push
or
inc
sbb
jl
dec
xor
jge
dec
in
pop
dec
cmp
jno,pt
xchg
xchg
stos
mov
sti
mov
out
pop
out
out
jnp
cwtl
lret
dec
aaa
ss
xor
xchg
sub
fidivrs
std
out
add
and
cmp
and
ljmp
mov
mov
test
rcr
mov
mov
in
mov
and
xchg
sub
dec
jmp
out
adc
ss
push
dec
mov
inc
mov
or
and
dec
aas
insb
add
xchg
addr16
aad
inc
lret
cmp
mov
cmc
xor
cmpsb
lahf
sti
inc
test
jns
dec
mov
jno
daa
xchg
out
push
adc
scas
pop
jns
fs
adc
mov
stc
fisttpll
xor
ds
cmp
outsb
sti
mov
in
notb
pop
or
in
sub
inc
loopne
imul
pushf
js
xchg
test
jle
test
sub
shl
jno
subb
scas
mov
mov
test
or
stos
xchg
pop
cmp
mov
sub
test
or
pop
jg
mov
and
xchg
dec
push
pop
sub
js
mov
sbb
mov
xor
gs
cmp
int3
bound
dec
iret
in
pop
lock
std
cmc
push
xor
ja
fimull
xor
push
adc
jmp
daa
sarl
or
adc
cmp
ss
jl
ret
lods
imul
iret
jne
lahf
scas
inc
mov
fldcw
nop
sbb
scas
inc
push
adc
mov
aam
mov
lds
stos
dec
hlt
stos
push
fwait
repnz
cmp
xor
test
sub
cmp
cmpb
repnz
add
dec
addr16
out
add
arpl
imul
sbb
inc
mov
xchg
fs
inc
jne
iret
movsl
fisubl
mov
xchg
cmp
rcl
add
mov
aas
rol
jmp
xchg
mov
mov
jbe
movsb
mov
mov
stos
sub
insl
add
pop
xor
movsl
lret
sbb
or
mov
pop
pop
imul
popf
ds
repnz
push
rcrl
mov
das
rorl
adc
and
jmp
sbb
push
adc
and
je
outsl
cltd
xor
cwtl
push
fsubr
add
arpl
ja
jecxz
inc
dec
repz
cld
inc
addr16
jno
sahf
fs
jle
and
mov
rcl
mov
cmp
inc
movups
hlt
movsl
scas
pop
and
fsubrs
loope
and
pop
popa
push
pop
inc
enter
fstps
mov
sti
adc
lret
and
leave
jo
mov
stc
inc
into
andl
mov
pop
jbe
sbb
insl
call
int
jg
lods
std
xchg
fists
cwtl
cs
mov
sub
icebp
xor
mov
push
xchg
xchg
mov
xchg
pop
outsl
push
nop
mov
rol
push
lcall
bound
mov
jb
adc
lahf
lds
jae
mov
es
in
outsb
mov
pop
fbld
push
les
mov
add
inc
ss
mov
or
lea
mov
fistl
xor
cmp
fdivp
mov
fstl
or
inc
dec
stc
cwtl
jnp
sbb
stos
xor
xor
sub
sbb
fimuls
add
xlat
shll
dec
stos
roll
xorl
and
mov
cmp
dec
pop
jae
xchg
inc
int
pop
xchg
mov
dec
dec
and
pop
adc
aaa
out
out
pop
pop
and
xlat
std
jbe
mov
xor
sbb
icebp
dec
mov
inc
push
jb
mov
enter
add
mov
insl
stos
loopne
fisttpll
movq
push
lods
push
js
mov
or
xor
cmc
das
fisubs
mov
xor
or
popf
mov
popa
fwait
xor
or
je
xlat
cmp
dec
jecxz
sahf
xchg
push
sar
push
aaa
jmp
pop
movsb
popa
sarb
mov
rcrl
fs
pop
out
ret
lds
mov
test
jmp
jecxz
xchg
pop
movsl
or
push
out
or
fimuls
sub
sbb
mov
adc
hlt
and
imul
and
or
mov
jg
subb
push
cmp
pop
sub
jae
pop
push
nop
in
sbb
clc
cmpsb
lock
imul
out
inc
popf
dec
or
cmp
inc
aas
adcb
loopne
sti
out
in
and
in
adc
rcll
xor
xorl
cmp
or
cltd
or
dec
pop
arpl
stos
inc
mov
or
sub
test
addr16
aad
inc
inc
gs
jecxz
and
push
mov
or
xor
push
xlat
fs
es
pusha
dec
xchg
push
scas
xlat
pop
or
dec
loop
lds
jecxz
sbb
or
outsb
enter
cmp
mov
mov
ret
sub
mov
pop
jmp
sub
ficoms
jmp
dec
jg
jle
add
fstpl
insb
lea
repnz
out
mov
xchg
jns
mov
mov
add
imul
out
adc
xchg
lods
inc
ss
jmp
dec
ds
xor
mov
movnti
jns
xchg
pop
and
cld
shll
jae
repnz
das
mov
lret
jnp
xchg
stos
adc
arpl
dec
gs
data16
lret
sti
jle
popa
clc
mov
jmp
push
fstpl
jmp
int3
jo
push
lea
mov
in
pop
loope
pop
push
repz
mov
cmp
idivb
in
mov
pop
inc
jo
push
int
in
xor
mov
xchg
xchg
jl
cltd
jecxz
pop
inc
xchg
aaa
mov
ja,pn
xchg
adcl
mov
leave
and
jmp
mov
loop
push
xchg
dec
mov
enter
clc
sahf
pop
push
push
dec
or
and
jmp
sti
xor
popf
gs
int
mov
or
es
hlt
mov
dec
add
xchg
push
mov
fcomp
fwait
testl
jbe
pop
push
sbb
cmp
lock
into
arpl
cmpsl
adc
sub
jno
popa
sub
cmp
and
mov
pop
ds
mov
shrb
push
loop
sub
xlat
repz
sti
xchg
ror
mov
jno
pop
testb
cmp
icebp
test
pop
xchg
movsl
call
scas
xchg
and
int
push
out
enter
or
bound
ja
jl
sbb
sbb
adc
push
pop
push
jno
or
or
jb
mov
andb
fs
into
test
mov
sahf
push
clc
push
mov
mov
cmp
push
setg
nop
xor
inc
push
pop
add
sti
jp
pop
lahf
stos
inc
ret
pop
jbe
jnp
jge
push
scas
fstpl
mov
es
mov
mov
aad
sbb
clc
xor
enter
pop
jmp
inc
xlat
push
jg
loope
negb
daa
push
in
pop
inc
lret
jl
jb
add
push
inc
and
inc
arpl
jmp
xchg
push
pop
mov
adc
or
lea
jle
int
sbb
mov
and
iret
mov
pop
add
repnz
mov
sub
xchg
inc
xor
mov
in
repz
test
clc
cmp
or
ds
repnz
cmp
repz
inc
mov
hlt
mov
imul
adcb
push
popa
shrb
ss
lock
push
scas
and
jle
ret
test
adc
fbstp
arpl
xor
add
cltd
data16
jp
iret
dec
fsubl
dec
lock
movsb
xor
imul
or
in
jbe
out
aas
stc
loop
cmp
adc
out
push
test
add
jmp
cs
or
jo
jmp
xlat
adc
push
jl
sbb
pop
sbb
mov
jae
stos
sub
fisubrs
push
aaa
dec
aad
clc
sbb
movsl
lcall
stos
fcoml
mov
fs
iret
pop
call
or
int
int3
arpl
loop
std
or
push
aad
push
mov
pusha
mov
or
rclb
mov
pusha
cld
lret
sub
pop
loope
dec
xchg
sti
fs
outsb
sbb
outsl
ja
loop
fcoms
xchg
cmp
push
dec
stc
or
jo
xor
rcll
push
jmp
bound
push
out
aam
adc
jae
repz
js
sahf
pop
mov
cld
or
scas
cli
jge
jno
setae
lahf
pop
mov
pop
ljmp
push
push
cmpsb
push
jg
xchg
lds
pop
aas
sub
jecxz
outsl
mov
mov
in
out
push
lea
jle
cmp
inc
xchg
pop
es
movsl
dec
lds
pop
imul
mov
xchg
test
pop
shl
xchg
mov
fistl
decl
cmp
int
aad
push
xor
sar
je
mov
cmp
in
jg
rorb
mov
cmp
cli
dec
orb
fnstenv
ljmp
dec
inc
inc
rcr
leave
in
cli
and
cltd
imul
xchg
cmp
mov
fldcw
popf
addb
lret
push
in
gs
xchg
adcl
in
sub
sbb
sbb
data16
sub
testb
clc
pop
xor
lret
and
mov
jge
cmp
jbe
sub
das
jecxz
add
test
arpl
mov
inc
inc
sub
mov
addr16
es
and
dec
aam
pop
stc
cmpsl
ds
adc
push
pop
lock
fldl2t
clc
cmp
fldl
in
push
push
mov
loopne
add
movsl
orl
stc
sub
sahf
xchg
inc
push
lock
stc
aaa
out
ss
inc
adc
jne
daa
or
and
mov
sub
outsb
sarb
sbb
jge
mov
cli
adc
stos
std
dec
nop
mov
adc
pop
inc
sbb
int
orb
dec
out
jb
lea
cmp
aad
rolb
pop
dec
test
adc
xchg
mov
cmp
jle
sbb
dec
mov
scas
pop
sahf
jmp
int
adc
lods
push
pop
out
ds
scas
push
je
imul
scas
and
fstpt
lcall
xchg
aas
mov
into
mov
cld
and
and
cmp
imul
jl
push
daa
mov
aas
mov
push
dec
aaa
pop
dec
xor
or
jecxz
xor
adc
sti
mov
scas
mov
pop
xor
lods
mov
call
push
mov
mov
fisttpll
mov
fs
inc
push
xchg
adc
push
movsb
sbb
pushf
add
out
mov
mov
js
lcall
ficompl
jle
fstpt
pop
xchg
add
xchg
fisubrl
fistpll
inc
outsb
cmpsb
jnp
add
dec
dec
scas
inc
pusha
fmul
movsl
icebp
iret
dec
lods
sbb
out
xchg
test
dec
clc
pop
cmp
aam
sub
dec
cld
xchg
cmp
sbb
pop
stos
mov
cltd
mov
inc
adc
cmp
nop
cmp
pop
sub
stc
pop
inc
xor
lahf
cmp
rolb
mov
lods
lea
sbb
push
sti
adc
insl
dec
data16
int
ja
or
sahf
mov
mov
sbbb
inc
popa
push
sub
ja
repz
call
sub
je
inc
jle
lret
fwait
xor
push
cmpsl
outsl
adcb
nop
mov
xor
in
push
dec
pushf
cs
shlb
pop
inc
das
adc
mov
and
jg
inc
leave
mov
xorl
repnz
insl
je
pop
push
xchg
sub
inc
mov
mov
push
mov
into
or
imul
cltd
mov
mov
enter
push
sbb
pop
mov
xor
rclb
dec
or
jl
cmp
mov
push
xchg
scas
and
out
mov
sbb
mov
lcall
xor
and
jmp
rclb
inc
push
adc
cmp
xchg
mov
notl
es
or
xor
sbb
mov
jo
ret
mov
adc
cmpsl
cmp
and
push
fistps
inc
push
imul
push
mov
pushw
sub
lds
mov
push
cmpsb
jp
ror
mov
jo
popa
icebp
shl
xlat
xchg
rcrb
shll
shl
push
inc
mov
or
lretw
and
push
mov
popa
fcomps
mov
loopne
push
inc
movsl
lret
fdivr
xchg
fldt
push
add
sub
inc
or
stc
pop
cmc
adc
dec
scas
out
fninit
dec
cmpsb
fwait
lods
cmpsl
adc
xchg
cmp
cmpsl
and
push
nop
bound
insb
out
or
int3
hlt
aad
leave
mov
dec
out
sub
xor
inc
stos
int
lret
jne
pop
cmpsl
ds
ret
int3
dec
jmp
push
add
mov
sub
daa
stc
stos
mov
lea
jge
mov
pop
test
jmp
insb
js
xor
repnz
pop
les
add
sbb
dec
mov
fistpl
fst
push
sarb
xchg
lret
cld
repnz
pop
jae
adc
cmp
sub
js
add
test
cmpsl
jnp
or
inc
enter
dec
jmp
loop
mov
out
fcom
cmc
rcr
fidivrl
icebp
popa
int
pop
xor
add
in
adcl
std
ror
xchg
mov
xchg
push
mov
cld
sbbl
push
movsb
imul
xchg
mov
sbb
cs
mov
pop
adc
dec
push
adc
xchg
repz
insb
pop
dec
sbb
mov
inc
push
push
sahf
jbe
aad
lret
mov
out
jnp
fnstsw
sbb
mov
inc
cli
xchg
push
sbbb
mov
in
popa
dec
pop
lahf
out
sub
sub
push
push
push
sbb
scas
aam
lods
icebp
mov
push
mov
hlt
mov
aam
data16
iret
enter
push
frstor
mov
or
pushf
fiaddl
jl
adc
pop
movups
dec
imul
dec
dec
fidivl
ret
pop
decb
sub
addr16
push
or
pop
lea
pop
mov
inc
mov
mov
mov
lret
bound
xchg
jmp
pop
fisubrs
cmp
fisubrl
cs
scas
xor
sub
cmpl
scas
in
dec
fwait
and
loopne
sub
pop
xchg
shlb
sbb
outsl
nop
sbb
mov
push
mov
sbb
xchg
ds
mov
or
ret
mov
pop
out
rolb
out
mov
insb
ret
fs
outsl
mov
add
mov
pop
dec
cwtl
cmp
lds
mov
or
test
aam
mov
sbb
mov
lahf
pop
loopne
cwtl
xchg
add
dec
hlt
pop
subl
xor
jnp
incl
in
push
out
ret
sbb
loop
push
xchg
mov
xor
imul
sbb
or
and
jae
popf
inc
sbb
jge
das
fistps
pop
jg
cmp
jnp
and
sub
adc
xor
mov
jbe
test
inc
lods
xchg
popa
push
mov
addb
ds
data16
popf
push
push
or
sub
ret
test
jb
int
loop
inc
fldcw
gs
push
pushf
int
push
mov
out
and
insl
sbb
sahf
pop
shrl
out
mov
incb
push
cmpb
xchg
pop
inc
cmp
pop
aam
xchg
cli
pop
dec
sub
jne
push
nop
gs
popf
sbb
inc
mov
ret
xchg
xchg
jl
ret
in
dec
rorb
ret
lahf
push
ret
jb
and
call
adc
int
ja
in
xchg
and
mov
cmpsl
sub
stos
or
sahf
jmp
or
adc
mov
aaa
pop
adc
das
add
adc
dec
xor
test
adc
xchg
sbbb
mov
fidivl
in
mov
sub
cmpsb
push
lods
popf
lods
or
cmp
fildl
cltd
sbb
push
sub
nop
les
pop
je
xor
repnz
xlat
push
sub
jg
xchg
scas
sub
cmc
cmp
js
jbe
xlat
ds
pop
push
repnz
lods
mov
movsb
cmp
ret
aaa
std
push
pop
aaa
das
mov
fisttpll
sub
xchg
daa
rorb
sbb
ss
lods
dec
sub
repz
lods
mov
adc
aad
scas
lahf
add
xchg
cmp
outsl
test
imul
cltd
jae
cli
test
or
ljmp
sbb
sbb
stos
scas
jle
outsl
fst
push
int
and
mov
push
sub
cltd
cwtl
cmpsb
notl
cmpsb
push
xlat
jl
lcall
sbb
add
xlat
jmp
pop
xchg
fs
gs
mov
and
push
xor
adc
xchg
outsl
push
mul
mov
sub
fidivs
pop
pop
mov
mov
inc
shrb
mov
outsb
pushf
addr16
jmp
mov
lods
ljmp
jnp
sbb
data16
cmpsl
js
out
xchg
jno
scas
outsb
test
mov
cmp
push
cld
or
test
pop
or
test
xchg
add
jno
pop
sahf
les
push
sbb
mov
add
xchg
icebp
or
lcall
sub
call
jmp
movsl
hlt
out
mov
ljmp
rclb
stos
dec
xor
repz
pop
les
negl
pop
and
enter
sub
lds
xchg
fistps
mov
inc
sahf
inc
xchg
mov
mov
negl
lret
bound
jns
xchg
jmp
jbe
add
stc
mov
lds
add
out
rolb
adc
int
js
mov
fbld
mov
rorb
lret
in
push
mov
scas
cld
dec
push
pop
loop
pusha
test
mov
pusha
adc
sbb
cs
aam
mov
dec
jns
imul
repz
cs
cld
jl
scas
xchg
xor
pop
and
cmp
int3
or
push
fdivr
ss
in
arpl
rcrl
sarb
nop
je
xchg
fwait
pushl
js
adc
xchg
scas
int3
or
pop
iret
sbb
pop
ss
mov
fnstenv
push
push
shld
push
pop
aas
inc
and
roll
mov
popa
outsb
scas
mov
cmc
dec
je
push
sub
mov
pop
daa
cmp
int
shrl
adc
dec
pusha
faddp
cwtl
test
ret
int
cmp
test
inc
lods
xchg
inc
xchg
pop
adc
fimull
in
mov
movsl
inc
push
push
push
out
sub
sbb
sbb
xor
std
movd
popf
lods
sub
pop
add
jne
aad
cmp
mov
xchg
orb
push
and
ds
lret
pop
pop
pop
mov
push
insl
orb
jnp
sub
cmp
repnz
mov
xorl
or
je
inc
stos
fdivrs
add
popf
mov
adc
xchg
fdivrl
dec
enter
aas
lods
cli
in
xor
cltd
xor
push
and
inc
aad
push
pop
and
cmpsb
push
stos
inc
dec
scas
std
xchg
in
fcomps
movsl
mov
ficoms
xchg
mov
jns
je
cmpsb
ret
fcoml
je
in
jg
lods
or
fiadds
mov
sub
imul
cli
pop
in
pop
es
gs
out
add
inc
aam
cmovg
mov
pop
sub
add
inc
aas
testb
movsl
jns
adc
push
and
xchg
adc
mov
in
notb
pop
out
inc
negl
icebp
add
fistl
xor
out
bound
in
adcb
or
jo
lea
jge
cltd
sbb
pop
sbb
je
sbb
scas
jno
xor
aam
inc
mov
les
push
sub
clc
mov
into
sbb
mov
adc
mov
push
jo
inc
and
fnstenv
jne
jnp
inc
popf
dec
jl
dec
ljmp
lock
jnp
ficomps
cmp
inc
daa
push
or
sbb
jp
bound
pop
les
sarb
mov
pop
xchg
jle
mulb
sub
les
pop
mov
into
xlat
jmp
and
ds
ret
xchg
pop
mov
out
sub
sbb
jg
ljmp
lods
adc
test
leave
mov
adc
test
xchg
xchg
fwait
inc
imul
fsubrl
cmp
adc
out
jecxz
xor
xchg
sub
in
aaa
push
bound
pop
pop
je
cmpsl
movsl
ret
fsubs
test
or
push
ds
in
popf
stc
into
cmp
cld
jo
jle
pusha
ss
inc
fdiv
pusha
push
in
inc
push
in
in
jns
hlt
leave
pusha
ljmp
jle
push
mov
popf
mov
sbbl
or
repz
mov
imul
xchg
lds
inc
mov
imul
jbe
sub
lcall
push
adc
outsb
adc
fs
ds
pusha
mov
sub
pop
xor
dec
loop
mov
out
pop
aad
or
add
jne
cmp
push
inc
mov
mov
mov
xchg
stos
insl
add
or
ds
push
sbb
lods
sbb
insl
mov
scas
imul
xor
outsb
in
pop
adc
lods
inc
push
hlt
and
add
sub
add
add
in
test
sbb
test
imul
sbb
cwtl
sti
in
mov
push
pop
fwait
mov
mov
icebp
inc
movb
cmp
lret
add
shlb
add
rcll
aas
pop
push
push
into
dec
push
cltd
fdiv
test
out
pop
and
pop
push
incl
data16
xchg
mov
inc
xchg
inc
pop
lcall
cmp
pop
jle
and
xchg
mov
stc
ret
dec
sub
loope
shr
test
imul
fisttpll
add
jge
hlt
pop
pop
xchg
add
mov
sbb
xor
mov
push
or
add
add
jge
stos
cltd
test
fwait
adc
gs
je
cld
mov
pop
mov
xchg
sub
hlt
adc
jb
pop
and
cmp
int
cs
pop
sub
inc
dec
mov
pop
xchg
jl
jnp
mov
jg
sahf
sbb
mov
pop
scas
addr16
addb
pop
mov
push
xchg
add
mov
lea
js
pop
ret
repnz
jno
dec
in
stos
dec
sbb
movsb
cmpsl
push
fldl
inc
push
das
xchg
or
clc
and
mov
jo
hlt
stos
lcall
pusha
mov
pop
pop
bound
xchg
lret
and
pop
sub
vcvtsd2si
xor
add
insb
lods
add
bound
fs
add
cli
mov
mov
cmp
adc
loope
imul
dec
pop
pop
mov
int
std
xor
sub
enter
es
mov
mov
mov
xor
push
xchg
sub
cmp
jne,pn
sub
pop
dec
and
loop
xor
enter
push
sbb
dec
adc
push
push
mov
call
ret
sub
test
push
mov
pop
repnz
sti
xchg
sub
lea
and
and
in
scas
fadds
dec
mov
inc
cmpsl
jecxz
fmuls
push
shr
push
mov
jecxz
in
xchg
cli
push
out
rorl
mov
icebp
push
cmp
xchg
inc
jp
lods
pop
jmp
jg
cmc
adc
and
std
xchg
call
or
cmp
mov
ret
jg
jle
dec
mov
cmp
xor
mov
or
out
xchg
and
icebp
lahf
rcrb
repz
jp
repz
mov
push
dec
cmp
cs
shrb
int3
fcmovnb
nop
pop
mov
fiaddl
adc
je
jb
cltd
and
aaa
push
mov
and
jbe
mov
fnsave
add
popl
jns
push
mov
dec
fnstsw
fwait
pop
push
hlt
out
fnstenv
cli
and
fucom
out
jne
test
mov
fnstsw
mov
sub
xor
mov
dec
stos
in
shll
cmp
and
icebp
dec
pop
test
stos
loopne
aas
and
pop
add
mov
fld
outsb
or
out
xchg
jp
inc
and
lock
xchg
clc
add
sbb
movsl
mov
push
and
ljmp
sarb
daa
js
and
cmp
frstor
into
push
xor
outsl
and
inc
mov
sbb
jno
pusha
pusha
add
mov
pop
mov
lds
cmpsb
cmp
inc
adc
jns
add
test
bound
mov
pushf
mov
andl
push
leave
int
mov
xchg
hlt
or
mov
inc
ret
dec
add
int
mov
andb
cs
repnz
icebp
ljmp
ss
fisttpll
incl
nop
and
popf
pop
add
testb
daa
popf
push
xchg
testb
xchg
push
test
pop
repz
jp
enter
ss
test
xor
daa
int3
lea
clc
lods
add
push
sbb
sbb
rcr
icebp
inc
fs
sub
push
push
mov
jns
movsb
mov
fimull
sbb
mov
lret
imul
dec
fwait
gs
in
mov
sbb
xchg
fcmovu
xchg
gs
je
fsubrl
cmp
dec
data16
shl
mov
pop
jecxz
rorb
mov
and
std
ffreep
ja
xchg
jnp
add
push
inc
mov
xor
adc
lods
cmp
lds
mov
movsl
cmp
adc
rolb
jmp
adc
pop
cwtl
pop
jg
jl
and
orb
push
xor
bound
or
xchg
sbb
scas
or
and
es
xchg
int
loop
jge
sub
cwtl
sbb
pop
add
mov
mov
sbb
int3
shll
jecxz
inc
stc
enter
cmp
out
sbb
fs
xor
and
addr16
jne
adc
dec
inc
fldt
xchg
bnd
pop
dec
sub
cmp
test
sub
aad
cmp
rorl
daa
lods
inc
dec
scas
inc
jl
lret
out
jo
fnstsw
gs
push
xchg
dec
popf
popa
or
push
inc
fwait
cmp
xor
roll
lock
mov
in
rorl
sub
in
mov
stos
inc
das
add
out
sbb
test
fxtract
xchg
adc
mov
je
in
push
ret
jb
xor
fisubs
out
popa
dec
adc
and
mov
cltd
pop
lcall
icebp
adc
sbb
add
add
test
mov
test
leave
pop
dec
mov
xlat
adc
cmpsb
pop
mov
lods
ljmp
and
data16
in
cmp
sub
scas
mov
xor
into
ljmp
mov
sbb
in
clc
loop
and
inc
dec
pop
je
jl
mov
xchg
in
aam
jno
jp
xor
stc
mov
add
jo
popf
insb
mov
sub
xchg
ja
mov
xchg
sbb
mov
cmpsl
xchg
xchg
ret
mov
jno
in
iret
fnstenv
cmpsb
clc
lret
mov
cld
nop
jno
cwtl
lods
mov
mov
cmc
rol
xor
cli
dec
pushf
pop
ret
aad
lea
es
loopne
out
xchg
mov
xor
stos
inc
inc
dec
add
or
sub
shll
xor
clc
fnstenv
sub
mov
sub
pop
and
dec
xorb
fsts
and
mov
mov
push
add
inc
and
jo
jbe
or
mov
xchg
test
pop
outsb
gs
push
lret
test
mov
mov
rcrl
jns
sbbb
push
outsl
mov
add
pop
mov
rcl
shlb
adcb
sub
sub
xchg
insb
and
lods
std
jg
das
pop
int
inc
aaa
popf
xor
out
in
cli
mov
jbe
rcll
test
test
shlb
push
mov
cld
jg
hlt
movl
xchg
outsl
test
ljmp
pop
pop
lret
mov
icebp
hlt
cwtl
stos
jbe
adc
lock
clc
sarb
sarl
iret
add
push
sbb
and
les
out
in
xchg
push
pop
das
cmp
cwtl
dec
cmpsl
cltd
mov
out
and
jg
stc
mov
insb
nop
out
jno
js
cmp
xchg
sub
push
push
sub
cwtl
mov
cs
or
cwtl
pop
fs
cmp
out
popa
xchg
ss
jg
mov
fdivrl
adc
cli
mov
jbe
inc
adc
sub
cld
add
imul
loopne
push
adc
cmpsl
jecxz
xor
mov
or
in
cltd
or
clc
iret
and
or
inc
popa
adc
test
xchg
stos
push
push
out
mov
jae
clc
lods
push
adc
int
push
loop
sub
popf
lods
ret
dec
fdivs
insb
xor
xchg
les
insb
push
jmp
int3
in
stos
lret
jo
sbb
lcall
pop
arpl
mov
fs
jno
scas
std
inc
xchg
push
adc
jo
loop
fucomp
and
ja
into
inc
xor
mov
dec
and
cmp
or
and
addr16
inc
mov
fwait
dec
pop
jae
rorb
mov
fs
jne
stos
xchg
xchg
lahf
xor
in
ss
test
insb
jle
incl
out
sahf
dec
dec
cli
xchg
adc
in
les
cmp
mov
push
je
sub
popa
aas
mov
out
mov
adc
stos
lret
je
in
pop
daa
pop
ja
pop
test
add
add
lds
pop
mov
fnstcw
cmp
adcl
arpl
sub
jl
push
inc
cmpb
ljmp
add
daa
clc
movsl
pop
xchg
in
xor
xor
mov
test
ja
jmp
and
lock
loope
mov
imul
cmc
fisttpl
xchg
clc
fidivs
lret
xchg
jp
dec
into
cmp
mov
fildl
dec
inc
ret
lock
lcall
leave
mov
xchg
insb
mov
push
insb
mov
in
cmp
jg
inc
cmp
jge
icebp
mov
loope
sub
jns
fcompl
rorb
inc
pop
cs
add
pop
es
xchg
xchg
cmp
lock
xchg
scas
jns
cmp
xor
sbb
insb
test
shr
push
mov
mov
push
mov
frstor
jp
stc
adc
pop
pop
cmpsl
add
dec
mov
sub
add
push
and
push
jae
lret
movsb
hlt
jl
in
push
inc
dec
addb
insl
aas
inc
cmpsl
jo
and
mov
clc
ss
das
mov
pop
push
jle
cmp
xchg
inc
fcmovb
inc
cmpsl
lock
mov
pop
js
inc
ljmp
mov
cmp
cmp
sti
add
scas
clc
xlat
ja
jo
shll
mov
insl
in
or
mov
insl
add
push
sbb
in
adc
mov
adc
add
push
cwtl
or
dec
xor
pop
adc
mov
jge
xor
inc
dec
in
fsts
insb
sarl
stos
loope
cli
imul
sbb
push
mov
push
sbb
cmp
aad
lret
push
jg
pop
jae
mov
ds
and
sbb
testl
aaa
aad
es
push
push
je
mov
or
xchg
cld
xchg
sub
and
fs
ljmp
shll
pop
repz
popl
nopl
neg
push
cmp
call
lea
inc
and
mov
int
lods
xchg
adc
fs
sti
lahf
inc
sub
mov
xchg
cmp
jno
mov
pop
lahf
push
mov
scas
inc
xchg
and
fimull
add
xor
and
lods
test
pop
into
lahf
jp
jno
push
and
in
cmpsb
rclb
jle
jl
popa
push
adc
faddp
out
mov
sti
xchg
mov
sbb
imul
pop
nop
jno
in
mov
adc
fldt
pop
sbb
pop
lock
mov
ja
mov
outsl
add
pop
orb
cmc
push
sub
bound
xchg
imul
gs
sti
inc
mov
jecxz
inc
push
push
sahf
xor
sbb
in
push
cld
sub
dec
dec
imul
cmpsb
add
inc
fdivr
idivl
imul
out
loopne
push
mov
xchg
push
rcrb
test
xlat
popf
cmpsl
out
inc
xor
adc
cltd
or
fiadds
cld
test
lret
stos
cmp
test
test
aad
or
mov
test
test
jae
xor
bound
cli
xchg
inc
mov
scas
jl
cwtl
mov
dec
ss
push
mov
aam
xor
stc
sbbl
push
sbb
jo
sub
scas
inc
shlb
lea
cmp
cli
add
shll
cmp
test
adc
ret
pop
test
loope
pusha
push
fs
cmp
rcrb
jecxz
pavgb
mov
sbb
repnz
jo
insb
mov
push
ret
ret
fnstsw
adc
and
into
enter
hlt
fbstp
and
inc
dec
mov
aad
and
sub
pop
jle
push
call
enter
dec
in
iret
mov
ret
inc
shl
inc
in
xchg
sbb
sti
test
and
cmc
xor
push
mov
popa
cmp
or
insl
ja
or
xor
fneni(8087
or
inc
lahf
in
sti
jno
and
cmc
stc
nop
out
add
std
dec
pushf
cli
jg
jns
jae
adc
xor
mov
outsb
and
in
mov
cmp
jae
repnz
mov
fwait
push
xchg
dec
lret
ss
std
outsl
push
mov
adc
addr16
xor
mov
scas
mov
pop
push
jb
and
push
fs
mov
jg
cmpb
lods
inc
dec
pop
ret
loop
subl
lods
sbb
sbb
mov
outsl
jg
cmp
adc
aas
inc
pop
in
cmpsb
cmp
inc
int
push
jmp
fnstenv
pop
andb
into
testl
addb
inc
aam
lods
add
push
ljmp
pushf
lods
mov
inc
iret
call
cwtl
xor
jb
mov
mov
std
xchg
movlps
sbb
mov
hlt
push
jo
shr
ja
fisubs
adc
dec
int3
xchg
imul
jo
xchg
sbb
je
scas
jno
std
jnp
or
cmc
mov
jo
iret
out
pop
sahf
mov
mov
dec
sbb
pushf
insb
push
out
xchg
push
cmpsb
ret
daa
mov
in
in
sub
pop
push
inc
popa
jnp
leave
and
movsl
stos
test
pop
ret
sub
add
gs
sub
push
adc
int
sub
outsl
scas
xchg
lods
outsl
orl
in
int3
mov
adc
in
dec
cmp
push
jecxz
bound
sar
aad
dec
ljmp
aad
jno
jae
sbb
xlat
in
std
adc
sub
jae
clc
adc
dec
scas
mov
shl
mov
sbb
cwtl
mov
lret
lock
imul
incb
mov
addr16
or
loope
addr16
adc
mov
mov
mov
ret
mov
inc
test
lret
push
jne
addr16
jbe
js
xor
int3
pusha
xchg
pop
xchg
mov
inc
stos
xchg
and
pop
sbb
xor
enter
sbb
inc
adc
imul
les
leave
dec
in
sbb
fwait
xor
mov
test
pop
pop
cmp
mov
xor
lahf
aad
cmp
xor
dec
fwait
scas
dec
mov
mov
push
outsb
jge
jg
ret
lds
jp
and
ss
xor
dec
push
hlt
imul
or
adc
call
sub
mov
int
add
mov
shll
jo
fmulp
lea
movsb
push
inc
test
les
fdivl
adc
outsb
push
int3
adc
mov
jle
lea
sbb
inc
call
cmp
bound
int
out
xchg
dec
int3
fldenv
push
loopne
daa
pop
dec
xchg
stc
shrl
push
mov
rcrb
add
xchg
scas
inc
xchg
adc
xchg
sahf
push
inc
inc
jbe
jmp
cwtl
push
inc
xor
lret
scas
cmp
push
sbb
ret
ret
pop
jle,pt
rol
mov
sbb
sbb
ds
sarl
pop
aaa
xchg
mov
int3
test
dec
cmp
into
xor
fucomp
or
adc
cmp
ljmp
pop
cmpsb
popf
xor
xor
loop
scas
inc
add
inc
pop
fistps
lds
repz
jno
push
jle
inc
int3
testl
push
neg
ret
movsb
lds
mov
inc
push
cwtl
push
jmp
movsl
mov
je
jns
pop
stos
inc
enter
cmpsb
cmp
inc
pop
mov
fsubrs
cmc
into
cld
inc
mov
cmp
cmp
sbb
pushf
test
xchg
push
or
sub
lods
insl
mov
lret
mov
int
arpl
addl
xor
xchg
lahf
jnp
nop
jb
and
xor
lret
incb
pop
orb
jb
shrb
inc
fucomip
dec
sbb
rorb
mov
dec
ds
sbb
pushf
scas
ret
jmp
mov
pop
mov
in
or
mov
out
jle
or
subl
lock
repz
iret
push
test
pop
mov
jae
xor
out
outsl
sbb
das
cmp
insl
jnp
jno
fwait
sub
push
jmp
ja
int
xorb
mov
dec
jb
mov
jb
movsl
mov
mov
xchg
xchg
or
into
sub
repz
cmp
pop
ds
pop
or
test
out
lods
push
fisttps
aam
xor
push
jno
hlt
lret
rcr
bound
aad
stc
mov
clc
insb
leave
jl
in
pop
sbb
jmp
jle
stos
add
mov
jl
les
das
cmp
adc
xlat
inc
movsb
push
sub
mov
jno
mov
mov
adc
iret
sub
mov
add
sub
daa
std
pop
jae
out
xor
enter
notl
fidivrl
sbb
xor
mov
in
pop
xchg
add
mov
test
push
inc
addr16
imul
dec
in
subl
sbb
dec
fbld
xchg
xchg
sub
push
insb
jge
mov
adc
es
dec
dec
loop
xor
pusha
decl
or
ficomps
xor
add
insb
adc
or
push
mov
dec
jae
test
xchg
pop
lahf
das
mov
gs
stos
and
lahf
pusha
lret
mov
sbb
lds
jmp
fisubs
xchg
js
pop
push
fwait
popf
pop
mov
sbb
jle
lret
inc
dec
loopne
inc
jmp
mov
and
sub
adc
fdivl
mov
add
andl
xor
or
call
mov
pop
add
jnp
cmp
cld
imul
xchg
fldenv
dec
pop
mov
dec
sub
pop
pusha
divb
sub
sbb
push
mov
xchg
bound
loop
faddl
addr16
jno
jbe
test
cmp
lahf
repz
cmp
push
nop
cltd
adc
dec
jp
xor
cmp
out
inc
add
dec
adc
inc
iret
int
cltd
loope
inc
fmulp
pop
mov
inc
insl
aam
mov
cmpsb
sub
lret
adc
not
insl
sub
js
mov
hlt
mov
cwtl
push
out
in
adc
cmp
insl
pop
out
popa
and
pop
stos
in
sub
je
lock
fiadds
xchg
insl
or
test
mov
stos
xchg
mov
lods
mov
dec
aad
pop
out
cld
pusha
movsb
pop
mov
inc
inc
mov
add
mov
mov
mov
sub
int3
nop
stos
hlt
stos
jo
fstl
adc
fisttps
cli
ret
aad
mov
dec
sbb
inc
mov
out
test
cmc
rorl
mov
cmp
push
iret
jl
sbb
ljmp
stc
shlb
cmc
sub
loop
inc
pop
cld
das
adc
adc
repnz
xor
add
push
cmp
scas
test
push
mov
xor
dec
lds
or
sbb
lds
std
pop
cmp
idivl
lahf
xor
push
cmpsb
or
mov
push
leave
loopne
data16
test
jnp
push
sub
inc
push
aas
jmp
dec
or
jno
sub
and
push
sbb
xor
pop
jns
adc
xchg
cmp
jbe
rclb
mov
int
or
movsb
sbb
stos
aam
push
push
out
and
push
fidivrs
fiadds
stos
andl
stos
pop
and
clc
ds
cmc
fs
and
xor
dec
pusha
popf
test
lea
dec
or
and
push
jnp
mov
lods
icebp
inc
jne
inc
inc
sbb
sahf
clc
push
movl
push
andl
in
insl
add
sbb
mov
mov
and
inc
std
or
sbb
lods
push
mov
ficompl
cmp
cld
xchg
popa
cmpsl
iret
xchg
xor
dec
lock
cmpsb
jge
xlat
pop
sbb
dec
int
dec
or
lds
aam
pushf
dec
cltd
jle
pop
mov
dec
dec
sub
and
pop
cmp
inc
jo
push
jmp
xchg
adc
or
push
sub
test
lret
push
cmp
sbb
jo
and
mov
leave
cmpsb
ss
xor
adc
in
stos
mov
cmc
stos
sar
xor
mov
in
jno
in
sub
push
add
repnz
or
mov
jge
in
and
loope
xor
loop
loope
jmp
and
cld
loopne
xchg
ja
xchg
popa
fucomip
add
ffreep
jecxz
dec
sbb
sbbl
and
mov
mov
fldt
push
xor
xlat
mov
pop
cli
pop
repnz
imul
insl
lcall
lret
jo
add
jnp
sbb
fdivs
mov
mov
mov
cmp
cmp
mov
push
in
jae
push
addb
pop
out
cmp
cmp
and
rcll
adc
adc
movsl
mov
lret
sub
rolb
dec
ds
into
das
mov
subl
push
in
adc
inc
in
stos
jmp
jp
nop
and
inc
jge
test
out
sahf
fadd
adc
test
inc
out
icebp
inc
lea
xor
data16
test
fisubrs
int3
xchg
push
cmp
aam
inc
xlat
mov
lds
push
xchg
add
mov
popf
hlt
mov
test
rcl
lea
neg
in
daa
or
pop
test
in
jle
arpl
inc
inc
shlb
xchg
cmp
les
adc
rcr
jo
mov
pop
stos
sub
cs
movsl
sub
pusha
popf
sarb
xlat
imul
xchg
sub
imul
mov
mov
sub
lcall
cltd
mov
mov
push
xor
rolb
push
inc
xor
pop
popf
gs
mov
sub
xor
ja
jbe
dec
pop
or
and
fmull
push
gs
sbb
cwtl
test
mov
pop
pop
cli
into
jecxz
pop
jno
fldl
cli
roll
fdiv
push
mov
push
cmpsb
rcrb
pop
pop
mov
call
aad
movsl
sbb
dec
and
pop
lods
lods
mov
pop
outsl
jns
test
pop
stos
jle
aas
ret
fld
pop
filds
inc
jae
or
bnd
arpl
inc
pop
rcrl
into
lret
pop
movb
dec
in
fidivrs
mov
shlb
or
hlt
push
fistpll
cmp
lds
negl
mov
bound
testb
add
test
jbe
andl
inc
fs
jo
mov
rcr
mov
inc
push
push
mov
lock
repz
sub
xchg
mov
add
sti
addl
js
loopne
in
out
push
int3
out
test
mov
mov
or
xchg
sbb
inc
sub
ficoml
jmp
or
test
dec
fsubl
xchg
inc
pusha
das
fucom
sbb
mov
jnp
dec
cmp
dec
push
and
fldcw
pop
inc
push
rorb
sti
shl
imul
jp
push
mov
pop
mov
movsl
xor
repnz
cltd
aas
loopne
mov
push
pop
aas
push
je
mov
adc
arpl
sbb
jae
jae
outsb
mov
mov
movsl
cmp
cld
packsswb
dec
stc
sub
sbb
or
jae
dec
push
sbb
mov
addr16
jns
cmp
test
cmpsl
pop
xlat
sbb
or
jmp
xchg
inc
jecxz
lcall
ds
lock
sarl
pop
dec
push
push
xchg
stos
cli
mov
mov
jno
lret
fldcw
lds
push
imul
adc
and
cmp
int3
mov
iret
incb
xor
sahf
inc
mov
std
bsr
inc
arpl
jmp
scas
ret
xchg
test
jo
cltd
out
mov
out
cmpsb
in
addr16
movsb
xor
in
inc
das
sbb
fcompl
xchg
adc
pop
inc
shlb
es
xor
mov
aaa
mov
popf
mov
insl
jle
jae
clc
test
mov
arpl
jns
mov
push
lcall
sub
mov
sub
xlat
jns
inc
insl
jne
outsl
aaa
jmp
pop
push
out
mov
fsubr
popa
shlb
daa
aaa
xchg
push
inc
mov
into
cmp
pusha
or
mov
jecxz
lods
std
pushf
popa
loopne
mov
pop
push
es
jp
mov
jbe
jnp
adc
jle
mov
jmp
pop
divl
pop
push
addr16
or
jnp
sbb
jb
ficoms
dec
das
pushf
adc
icebp
cmp
mov
imul
imul
popf
gs
xchg
or
sbb
ret
int3
pop
cmp
aas
add
aam
outsl
mov
pop
mov
daa
sub
lea
mov
pop
ds
sar
rcll
push
pop
sarl
mov
iret
and
and
sti
andl
xchg
push
mov
je
stos
push
jle
jne
les
popa
mov
sbb
or
cld
xchg
add
jno
sti
outsb
lahf
lods
lods
into
and
aas
dec
cwtl
das
jp
fdivs
mov
dec
xor
or
clc
ret
mov
and
mov
lea
lret
fwait
rolb
jb
lahf
push
pop
out
and
mov
movsb
jbe
mov
int
xor
mov
push
push
shll
and
push
dec
adc
jle
fisubrs
inc
sarl
out
pop
cmp
orb
cli
aas
mov
test
in
xchg
xor
push
xchg
ljmp
jo
subb
pop
xchg
jne
jbe
out
push
mov
push
pop
mov
cmp
inc
and
mov
insb
stc
mov
or
fsubr
xchg
sbbb
sub
es
add
lcall
inc
dec
and
push
sub
inc
fsubs
shlb
dec
fsubrs
xchg
out
sti
xchg
adc
loope
fdivrs
mov
arpl
in
scas
jne
add
aad
sub
jne
cmp
lret
nop
sbb
add
jbe
in
mov
xchg
test
dec
lahf
loopne
out
xchg
ljmp
jne
xor
cmp
repz
arpl
cmpsb
cmp
sub
lds
fwait
push
push
gs
mov
mov
dec
cmp
xor
test
add
outsb
fwait
and
pop
mov
sub
and
pop
xchg
in
test
xor
push
rcl
imul
mov
les
sbb
popa
sbbb
push
loop
inc
lret
dec
std
mov
sarl
ret
jno
out
jecxz
loopne
stc
add
stos
out
xlat
push
inc
aaa
into
jb
out
jge
aad
frstor
mov
fs
jae
add
add
and
daa
fstps
lods
les
adc
jle
jmp
jecxz
repnz
mov
stc
sub
adc
popf
popa
xor
sbb
jbe
insl
stos
pop
scas
or
push
push
insl
xlat
aas
movsb
xchg
push
add
mov
mov
in
jne
leave
push
repnz
ficoml
scas
in
ret
test
push
adc
jbe
or
sbb
in
mov
shr
cs
daa
pusha
pmulhuw
push
shr
lea
sub
or
mov
push
or
insl
jl
sbb
add
cs
dec
dec
loop
push
lret
out
es
out
rcrl
push
lea
jns
xchg
add
pop
sub
aad
adc
dec
mov
cmpsb
cmp
cmp
je
pop
dec
adc
inc
pop
cmpsb
out
vxorps
pop
xchg
scas
mov
mov
cs
xorb
xor
insl
inc
movsl
cmp
mov
dec
es
or
fsubrs
adc
scas
push
mov
fmul
test
pop
xor
dec
loopne
in
mull
repnz
repnz
xor
sahf
push
addr16
push
dec
inc
loopne
insl
stc
xchg
cmp
dec
hlt
or
adc
out
shrl
and
xchg
sub
fwait
cwtl
es
rclb
mov
data16
fnstenv
mov
xor
mov
push
ljmp
lock
pop
imul
lahf
pop
ss
sub
iret
xchg
add
cmpl
pop
mov
adc
arpl
sub
mov
lock
fiadds
cmp
je
jb
in
xor
adc
cmp
clc
jge
or
pop
lea
sahf
or
enter
js
out
adc
pushf
ss
xchg
mov
ret
adc
jp
int
or
lea
pop
xlat
xorb
les
jns
jl
pop
outsl
ret
sbb
pop
insl
loopne
popa
dec
sti
scas
fisttps
xchg
adc
stos
int
inc
aam
out
xor
xchg
add
sub
into
cmp
loope
test
imul
push
lret
add
out
add
xchg
leave
test
mov
dec
ljmp
in
pusha
cmc
inc
push
das
push
cmc
mov
xor
mov
pop
pop
cld
outsl
mov
cmp
out
fiaddl
mov
aas
loop
das
mov
cmp
imul
jnp
movsb
add
jmp
cmp
dec
jg
arpl
les
add
lahf
mov
push
lcall
push
or
push
xchg
out
add
fdivs
fisttpl
stos
push
jg
dec
pop
xchg
push
rorb
inc
pop
xor
push
add
lahf
jne
mov
or
rcll
rolb
sbb
arpl
fsubrp
pusha
imul
es
push
scas
inc
test
inc
aas
or
mov
hlt
cmc
std
xchg
in
loop
jne
cs
inc
push
lods
ss
push
push
stc
xchg
jge
inc
out
fists
mov
jmp
mov
je
jns
sbb
dec
sub
sub
vaddps
adc
push
fwait
outsb
das
aaa
fwait
mov
pop
rol
sarl
mov
shlb
jne
cmp
dec
lock
or
or
sub
mov
lock
jnp
lea
dec
aas
jg
out
int
aad
push
lea
cld
dec
lds
enter
fisubl
in
mov
mov
loop
mov
sti
or
ss
stc
inc
idivb
shlb
or
mov
andb
xchg
popa
push
pop
lock
outsb
adc
pop
jno
daa
and
stos
pop
popf
adc
xor
cmp
dec
clc
mov
outsl
xlat
std
xchg
fstpt
insl
dec
jns
jo
insl
clc
xchg
mov
pop
jp
adc
push
sarl
push
inc
cmpsb
jnp,pt
pop
insl
adc
jae
es
and
jno
mov
inc
mov
in
popl
popf
not
dec
mov
xor
leave
push
cmp
sahf
push
std
repz
pushf
sub
xor
pop
jl
fldl
dec
in
lock
push
jns
fs
inc
sbb
dec
jo
fsub
xchg
out
or
sbb
sub
lea
ret
lods
js
xchg
insl
cmp
jecxz
ds
cmp
and
mov
call
mov
mov
cltd
push
lock
sbb
inc
sbb
testb
test
lds
sbb
mov
push
mov
aas
add
xlat
xor
js
pop
pop
call
and
gs
jmp
stos
imull
add
andb
xor
ja
adc
incl
in
call
jecxz
mov
mov
es
and
mov
clc
lea
adc
fdivrl
lahf
arpl
mov
in
jp
lret
or
int
in
lods
push
loop
cmp
jb
sti
add
xor
imul
ds
mov
cmp
jecxz
test
test
hlt
mov
xchg
sub
pop
sbb
insl
sub
sbb
xchg
mov
dec
fucompp
and
in
mov
das
inc
mov
push
bound
xchg
dec
or
mov
xlat
subl
cmp
aad
enter
jo
lods
inc
push
and
lret
pop
lret
mov
in
popa
arpl
inc
mov
mov
pop
or
loope
adc
clc
adc
fnstenv
xchg
cmp
or
xor
mov
ja
pop
mov
xchg
test
adc
rolb
outsl
mov
mov
push
fdivl
mov
js
mov
sub
pop
repnz
cltd
lret
jo
push
in
mov
cmp
enter
pop
mov
add
xchg
mov
dec
pop
pop
call
daa
mov
mov
or
rcl
jne
in
lods
sahf
in
iret
or
mov
ljmp
shll
xlat
xchg
push
or
sub
movsl
cli
or
outsb
push
sbb
inc
push
pop
push
cmc
push
aaa
bound
adc
fbld
test
cld
lock
jnp
idivl
dec
prefetch
jns
dec
fmull
jg
test
add
daa
outsb
mov
sub
dec
scas
sbb
cld
push
mov
imul
jbe
lss
inc
jge
xchg
xor
lea
or
jns
and
mov
mov
xor
test
or
into
pop
dec
scas
dec
dec
test
cmp
insl
shlb
dec
push
cmpsb
icebp
push
bswap
lret
xchg
fdivrs
inc
fs
cmpsl
stos
mov
ja
iret
loopne
pop
adc
dec
fdivl
aam
jb
xchg
out
lods
inc
cld
and
push
xchg
sub
lret
pushf
lea
ss
sub
push
jp
add
sbb
ror
je
push
xchg
lahf
stos
lea
mov
stos
imul
iret
add
mov
inc
cmpsl
testl
imul
push
lods
jmp
push
xor
dec
imul
daa
out
test
dec
push
mov
xchg
jge
and
adc
jecxz
fsts
xor
push
repnz
sub
stos
push
mov
sbb
inc
push
pop
lods
mov
xlat
ret
cs
xor
les
popf
sbb
sbb
int3
mov
xlat
out
pop
sbb
pop
inc
xchg
push
push
fsubrl
pop
mov
pop
xor
insl
mov
inc
lahf
rclb
sub
les
dec
dec
fdivr
xor
pop
dec
arpl
in
scas
and
mov
icebp
and
mov
xor
xchg
cmpsl
sar
cwtl
outsl
es
xchg
out
mov
test
jae
sahf
pop
xchg
add
je
in
imul
xchg
mov
test
jg
int3
in
xchg
mov
mov
scas
fcomip
adc
js
insl
push
mov
pop
xor
jmp
sti
jp
push
mov
insb
test
cmpsl
mov
mov
into
mov
aam
dec
leave
and
rcrl
in
js
cwtl
shlb
pop
popa
jbe
scas
adc
icebp
dec
inc
dec
inc
sub
cmp
arpl
sbb
jp
and
pushf
shll
pop
cmp
jbe
es
out
mov
aam
into
loop
lcall
js
mov
fs
inc
push
mov
inc
xor
sahf
xlat
add
mov
pop
aas
push
shrl
das
mov
cmp
inc
and
enter
rolb
mov
mov
int
and
pop
jae
cld
xor
mov
fsubrl
and
std
sub
lods
fs
sub
or
cwtl
repnz
out
sbb
scas
xchg
movsb
dec
add
mov
jecxz
xor
sbb
sarl
adc
xchg
jge
popf
aas
mov
mov
adc
insb
movsl
or
aam
push
test
scas
lret
das
jbe
inc
jo
enter
jmp
enter
pushf
ds
aam
gs
inc
add
cmpsb
ficomps
sub
xor
das
or
xor
mov
iret
or
jne
daa
arpl
lock
inc
aam
ja
adc
lcall
ret
cmp
cwtl
dec
jb
jp
fstpl
cmp
jb
pop
testb
rorl
mov
mov
loopne
sbb
lds
clc
push
mov
cli
popa
jne
xchg
lea
repnz
pop
stos
es
push
repz
ss
sbb
lret
dec
mov
rcll
and
in
pop
scas
inc
cltd
ja
clc
xchg
add
lahf
xor
es
in
cli
add
sti
mov
call
insl
xor
hlt
cmpsb
sbb
mov
cmp
pop
pusha
lods
nop
mov
sub
sub
xchg
scas
clc
scas
fidivl
adc
pcmpgtd
sub
xchg
push
insl
push
sub
orb
pop
xchg
imul
jmp
or
popa
push
es
mov
push
push
out
adc
push
sbb
push
inc
cwtl
jb
lock
test
scas
pop
imul
mov
enter
ret
fnstenv
cmp
mov
adc
mov
pop
push
sub
fdivp
mov
ljmp
scas
or
int
and
jge
add
inc
out
imul
movsb
int3
cmp
pop
ljmp
inc
inc
mov
mov
insb
or
mov
fmulp
adc
inc
std
and
mov
cmp
mov
aad
or
hlt
js
mov
jnp
add
leave
pop
mov
jg
pop
mov
jmp
out
movsb
mov
aad
aad
xchg
adc
js
push
cmc
addl
loope
sbb
inc
cltd
cmpsl
push
pop
imul
pop
fdivl
push
pushf
mov
cld
in
sub
movsb
xchg
imul
addr16
xchg
orl
movsl
sbb
inc
inc
xchg
mov
and
mov
mov
aaa
sub
inc
stos
mov
dec
movsl
mov
mov
pusha
imul
out
or
jo
push
jle
mov
dec
adc
popa
js
sti
pop
mov
push
sahf
mov
repnz
xchg
cmp
xchg
mov
pop
xchg
mov
and
push
outsl
xchg
js
les
pop
icebp
cmpsb
and
cmp
fimull
bnd
add
lahf
cmp
pusha
jecxz
loope
pop
lret
cmpsb
clts
testl
addb
insb
shll
or
inc
push
or
add
inc
fisttpl
xchg
cmpsl
in
es
ss
inc
sbb
insl
push
cmp
dec
imul
das
cs
ja
movb
mov
orl
jnp
stos
mov
ret
jae
outsb
lahf
iret
push
mov
insb
jg
pop
cmp
or
roll
outsl
lods
fst
and
ljmp
jmp
add
xor
mov
and
cmp
jmp
sbb
push
xor
fnsave
and
jl
mov
ret
xrelease
cmp
popa
cmp
lahf
dec
in
lahf
sub
or
mov
adc
push
pop
cmovno
lods
loope
fildl
mov
sub
xchg
scas
push
pop
lods
ret
jns
xchg
lcall
stc
rol
and
cwtl
bound
xchg
add
mov
or
insb
pusha
sti
popf
xor
mov
cmp
lock
xlat
xor
sub
mov
push
and
imul
mov
rol
push
xor
pop
rcrb
andb
dec
dec
es
dec
in
mov
in
sub
in
std
mov
shll
data16
lret
insb
jle
push
test
and
push
popa
insb
add
and
out
ret
clc
mov
mov
test
dec
pop
jmp
loope
mov
fdivrl
push
outsl
mov
popf
xor
and
mov
scas
cmp
mov
push
lods
ja
insl
xor
sub
lret
inc
cli
pusha
fcmovnu
or
add
push
daa
inc
pop
std
stos
test
scas
int
aaa
mov
mov
ret
fildl
into
pusha
mov
xchg
dec
bound
cli
mov
test
xor
shl
inc
mov
dec
dec
das
rorl
inc
xor
dec
repnz
idiv
setp
inc
and
pop
je
gs
mov
fdivs
subb
mov
leave
or
pop
xor
imul
sbb
repz
aam
stos
aaa
xor
push
adc
mov
ss
xor
fstpl
and
adc
or
pop
jae
cmp
sbb
adc
and
pop
out
mov
add
loope
mov
jge
add
fcompl
hlt
dec
pop
lods
adc
icebp
or
shll
dec
mov
inc
rol
in
loope
sbb
xchg
and
mov
pop
das
js
mov
mov
inc
push
stos
pop
ja
out
xor
jg
aas
in
pop
adc
push
orl
add
fdivrl
or
shrl
aaa
mov
ja
push
stos
adc
leave
leave
fcomip
sbb
lret
push
mov
addl
shl
sti
xchg
xor
add
cmp
inc
ds
imul
ja
or
pop
sti
ljmp
std
outsb
pop
mov
pop
fnstcw
adc
aas
mov
add
lahf
pop
stos
dec
aaa
fsubrs
popf
stc
pop
dec
inc
int3
push
pop
add
scas
test
jns
jno
mov
pop
mov
lods
sbb
sbb
mov
loopne
cmpsl
dec
movsl
inc
pop
addr16
dec
movsl
cs
in
push
mov
mov
jo
adc
sbb
mov
imul
cwtl
lea
mov
dec
loope
push
pop
in
push
push
clc
sahf
sub
pop
sbb
insl
in
aas
cmp
scas
cs
jge
int3
xor
sbb
and
movsl
shl
adc
pop
sti
sub
and
pop
and
sbbl
ljmp
mov
xchg
push
push
in
mov
scas
mov
je
lcall
or
adc
ss
xor
into
add
cmp
jae
sarl
sub
jg
or
add
dec
pop
push
pop
push
jmp
fisubrl
jae
icebp
pushf
popa
clc
or
adc
add
repz
in
outsl
lahf
mov
ljmp
popf
fidivl
out
enter
mov
ja
mov
sbb
sti
lods
outsl
repnz
jge
xchg
in
xorl
or
imul
xor
sub
ret
mov
popf
in
add
pop
daa
mov
mov
cmc
js
sub
pop
notb
cmc
add
cmp
lods
cmp
push
popf
or
test
or
or
cmp
fdivrl
shl
sbbb
cmpsl
or
mov
sahf
clc
add
dec
xchg
gs
lds
mov
jbe
mov
mov
mov
jb
aam
add
rorb
jmp
sbb
fld
mov
sbb
or
shll
lds
xor
push
stos
xchg
mov
int3
cmp
jle
out
inc
and
xchg
xor
mov
test
mov
lea
rclb
push
push
cwtl
pop
mov
inc
or
or
in
gs
out
jo
pop
aad
aas
dec
cmp
dec
xchg
outsb
testb
inc
popf
add
adc
dec
fiaddl
push
fidivrl
jne
test
aam
dec
and
int
sub
ljmp
mov
std
lock
and
xorb
cmp
loop
pop
sbb
lea
lock
dec
jbe
jg
push
mov
dec
lcall
bound
lahf
jno
or
xchg
jl
dec
addr16
dec
pop
sub
pop
lahf
mov
push
outsl
loop
lds
jns
xchg
pop
test
in
cmpsb
mov
mov
xchg
fmull
loopne
ret
jecxz
stc
in
mov
fisubrl
incl
sub
sub
iret
mov
inc
popa
ret
push
mov
insl
loopne
dec
mov
dec
xchg
stos
shll
sub
inc
xlat
push
cmpps
add
mov
scas
out
mov
lahf
divl
repz
jl
ljmp
test
addr16
push
enter
jns
jne
mov
inc
nop
daa
xor
dec
loope
or
sub
lods
xchg
pushf
xor
jg
fwait
outsb
adc
add
mov
xchg
pop
out
add
adc
adc
mov
xchg
xchg
sub
fs
pop
adc
or
aam
add
mov
xchg
mov
insb
rcrl
push
lods
xorb
decl
jmp
out
and
scas
xchg
cmp
mov
adc
hlt
sub
pushf
ds
stc
lods
mov
imulb
jge
test
jae
dec
arpl
sbbl
sub
test
add
xor
out
andl
scas
xor
push
out
adc
addl
dec
loopne
jl
movsl
outsl
adc
cltd
cmpl
push
out
sbb
mov
es
adc
sub
dec
rcrb
add
push
add
jp
inc
lock
out
testl
add
inc
xchg
push
clc
jl
jg
mov
mov
push
jecxz
mov
loop
or
xchg
nop
cmp
orl
lods
sub
jle
mov
adc
test
jnp
out
xchg
mov
je
mov
lods
sti
test
adc
sbb
and
lcall
push
pop
mov
mov
cmpsl
mulb
ja
sbb
hlt
xlat
pop
pushf
in
das
cmc
inc
mov
test
mov
or
dec
jae
push
pop
insl
repz
adcb
fcmovb
cli
jbe
jnp
ds
jp
sub
loope
jne
das
test
bound
aam
or
fisttpl
sahf
sub
test
std
xor
add
sahf
fnstenv
and
aam
push
mov
insb
sbb
mov
mov
gs
add
es
pop
mov
or
pop
push
daa
add
fistl
inc
mov
mov
stos
call
cwtl
int
push
in
les
inc
push
adc
mov
in
sbb
pop
out
aas
lds
mov
cs
imul
out
and
pop
push
fistpll
fmull
in
sub
gs
loop
xchg
sub
dec
loopne
fnsave
lret
add
push
mov
into
and
stc
lahf
ss
jmp
add
pop
add
aad
lds
sbb
inc
jno
xor
cs
pop
pushf
test
lea
or
cli
jne
jno
pusha
lret
hlt
mov
bound
lds
in
dec
inc
pop
xor
jecxz
mov
loop
call
xchg
xor
mov
pusha
icebp
add
gs
cmp
jg
mov
jge
add
add
nop
mov
out
jl
sbb
xchg
adc
jg
imul
and
arpl
loop
xor
mov
call
ljmp
xchg
or
aad
divl
pop
sbb
adc
lcall
ja
jge
cmp
sbb
std
lret
insl
pushf
repz
push
mov
inc
repnz
daa
movsb
arpl
push
or
sahf
adc
ret
sub
insb
rorl
gs
scas
notl
sarb
inc
hlt
movsb
dec
add
adc
sub
pop
repnz
scas
xchg
mov
push
sbb
lcall
scas
inc
jl
movsl
repnz
push
mov
dec
ljmp
test
es
flds
xchg
xor
packssdw
lods
pop
movsb
push
fdivrp
enter
gs
stos
inc
loopne
adc
fidivs
mov
adc
fwait
push
frstor
test
gs
out
lret
loop
movntps
and
insl
push
sbb
packsswb
aaa
mov
sub
and
pop
or
xor
push
rcll
pusha
pop
and
cmp
adc
jo
push
push
fisubl
push
inc
cmp
jb
cmpsb
in
popf
xchg
inc
fbstp
test
mov
rcll
ljmp
push
imul
out
mov
stos
mov
in
add
push
jbe
test
add
dec
loope
loope
cmc
cmp
pop
icebp
out
dec
mov
cmpsb
inc
inc
mov
test
pusha
jmp
test
cmpsb
lods
out
adc
mov
push
pop
mov
pop
testl
sar
loop
sbb
cmpsb
mov
iret
pop
clc
scas
addr16
push
cmp
les
jmp
hlt
xchg
insb
dec
loopne
sahf
cld
inc
cli
mov
mov
and
notb
scas
stc
mov
xlat
pop
daa
test
inc
fstl
mov
and
add
and
fwait
cs
hlt
fmull
or
push
testl
and
loopne
lds
cmp
jg
and
or
mov
adcb
or
lcall
jns
pop
cs
cmp
es
repz
stos
mov
pop
sub
fsts
test
cmp
cmp
xor
push
in
aaa
inc
jno
js
test
sub
xchg
pop
cmp
sbb
dec
push
out
and
popf
sub
int3
pusha
mov
nop
jo
mov
enter
pushf
test
lret
bnd
mov
fbstp
ret
call
into
pop
nop
or
outsl
or
js
aaa
mov
aaa
loopne
dec
test
mov
pop
shr
mov
imull
sub
mov
cli
and
dec
jnp
popl
jl
push
inc
pop
call
adc
out
inc
xchg
insb
inc
sarb
lods
lods
popf
jmp
mov
add
cltd
inc
mov
or
test
jge
in
or
push
mov
fdivp
xor
add
inc
mov
ds
das
cmp
cmpsl
jb
xor
xor
movsb
fwait
jle
outsl
out
test
popf
loope
mov
int3
fsubs
xchg
push
jno
sbb
mov
jge
cmpsb
lock
adc
mov
fs
out
inc
mov
aas
xchg
mov
cmpsb
inc
sbb
orb
push
out
push
sub
in
lret
xlat
sbb
pop
or
mov
loope
sbb
jge
mov
fcmovnu
xor
add
arpl
jbe
out
sub
bound
jno
repnz
mov
push
fnstenv
popa
fcoml
loop
push
dec
sti
mov
sbb
push
pop
scas
mov
or
enter
mov
jmp
shrl
mov
cs
push
nop
dec
push
sbb
lock
loopne
stc
cmp
mov
int3
shlb
iret
ss
cmp
pusha
rcll
inc
je
jmp
enter
call
movsb
mov
mov
or
out
mov
aam
imulb
ds
out
and
std
mov
mov
xchg
jo
leave
popf
xchg
sbb
or
lea
insb
add
es
inc
dec
xchg
ds
enter
test
mov
add
nop
sahf
je
nop
les
mov
sbb
arpl
xlat
sbb
movsb
sub
push
aad
inc
cmp
repnz
ret
mov
stos
jg
cs
mov
arpl
push
int
daa
cmp
sti
dec
mov
and
xchg
cltd
lds
mov
int
jmp
inc
xchg
sbb
jne
sub
sbb
jecxz
lea
xchg
adc
adc
xchg
mov
in
push
jo
scas
sbb
mov
lods
ljmp
fs
xor
cmpsb
add
les
mov
mov
pop
push
mov
sbb
add
ss
cwtl
mov
push
in
test
xchg
mov
sbb
hlt
adc
out
adc
lea
inc
repz
mov
xchg
pop
fcoms
sub
lret
push
jb
outsl
movsb
jne
xor
inc
push
mov
aam
ficompl
fucomip
popf
test
xchg
adc
les
ljmp
stos
ljmp
inc
push
mov
je
dec
rorb
adc
ret
fimuls
stos
fsubrs
addr16
cmp
repz
ds
cmp
and
mov
mov
jmp
aas
sbb
pop
lret
fbstp
or
push
mov
adc
pop
add
adc
inc
popf
cmpsl
negb
push
inc
leave
mov
xlat
push
or
popa
add
gs
sub
push
nop
out
das
call
test
add
inc
mov
pusha
dec
jecxz
stos
ds
imul
add
add
mov
out
or
or
ljmp
or
sub
addr16
cltd
mov
cmp
add
repz
in
or
loopne
and
jge
mov
aad
cmp
jnp
sbb
mov
les
sbb
mov
mov
in
adc
fnsave
repz
jne
sti
xchg
lds
sbb
lea
outsb
inc
mov
lds
mov
mov
mov
jb
into
cmp
sbb
cmp
pop
pop
popa
xchg
bound
rcrb
mov
popf
xchg
mov
sbb
iret
lock
adc
sbb
jmp
adcl
lock
mov
cmp
pop
icebp
or
testb
outsl
mov
push
sbb
xor
pop
pushf
adc
inc
mov
push
fnstcw
pushf
jge
rcrb
addr16
in
jno
rcrb
and
mov
and
and
add
lods
js
fistps
xlat
xchg
dec
rcl
mov
shll
loopne
out
test
test
addr16
out
or
cmpsl
cli
mov
popa
and
lret
mov
hlt
loop
aam
mov
ret
dec
jne
inc
xorl
sbb
ds
pop
out
lret
pop
rolb
gs
lock
icebp
dec
xchg
ljmp
push
xor
push
push
xlat
sub
enter
in
sbb
push
dec
ret
dec
xchg
es
sub
adc
pop
push
sub
push
pop
jne
add
inc
lcall
dec
jne
mov
mov
es
or
lods
jae
les
xor
mov
cmpsb
xchg
jg
fnstsw
add
add
das
push
mov
lods
jmp
fdivl
cmp
test
or
cmp
les
jmp
or
push
lcall
jne
jmp
push
jmp
ret
sbb
fwait
mov
lods
cld
mov
loopne
adc
mov
xchg
and
bound
xor
adc
outsb
aad
dec
int3
jo
mov
movsl
xchg
dec
data16
xor
add
clc
xor
pop
xlat
out
jle
sub
pop
movl
leave
das
push
lods
inc
cmpsl
dec
test
mov
push
mov
outsl
ret
inc
lds
sub
outsl
mov
test
mov
cmp
aad
lods
push
jno
pop
sti
inc
cmpsl
fstpl
std
adc
push
daa
repz
fldt
scas
jb
sahf
sub
cmc
xor
ja
jmp
push
icebp
lcall
jo
adc
mov
aaa
fnstenv
fdiv
mov
stos
cs
aad
mov
jle
lcall
jns
rorl
scas
push
addr16
adc
mov
ret
pusha
and
mov
incl
hlt
inc
adc
loopne
jmp
push
je
push
jb
cmp
mov
lret
leave
push
nopl
xchg
jp
lods
jg
ljmp
in
push
xor
jae
lock
ret
outsb
scas
sbb
sbb
rep
pminub
xchg
push
adc
jl
mulb
scas
xor
xlat
mov
dec
adc
jge
jecxz
inc
lods
ficomps
fdivrs
std
add
inc
mov
mov
cltd
sub
jmp
lret
mov
lock
les
xchg
jle
ficomps
cmp
xor
fcmovb
insb
pop
or
movsl
xor
ljmp
xor
jecxz
insl
sahf
pop
leave
add
fstpl
push
or
aaa
fisttpl
mov
inc
cld
outsl
xor
fnsave
rolb
test
mov
out
sub
cmp
lods
pop
cmp
ja
lret
aam
fistps
sbb
bound
and
icebp
mov
push
andl
push
jo
xor
push
hlt
pop
fistpl
dec
pop
add
rorl
loop
shrb
adc
cmpsb
je
sub
sar
in
je
adc
push
add
imul
imul
adc
bound
gs
push
loope
and
mov
inc
ds
test
das
aad
fisubrs
add
into
lods
inc
jne
add
xchg
lret
xor
pop
dec
repz
push
cmpsl
imul
pop
mov
in
xor
jge
cmc
into
data16
push
pop
push
into
xchg
movsb
aaa
bound
jge
out
sub
inc
test
push
pop
test
xchg
xor
lea
mov
lods
std
add
scas
inc
pop
cltd
or
imul
ss
dec
cmc
fnop
adc
shr
sbb
cmpsl
test
mov
push
mov
mov
fwait
add
lock
xor
les
jl
pop
add
mov
and
icebp
push
fisubrs
add
push
mov
xchg
inc
ret
mov
imul
mov
or
cmp
cli
push
test
fadds
and
xor
xchg
jo
lods
pop
sbb
mov
or
mov
rcrl
mov
adc
mov
out
cmp
xchg
dec
popf
in
mov
jae
mov
stos
cmp
sub
lahf
sti
mov
daa
or
inc
stos
cmpsl
mov
sbb
adc
add
jb
or
stc
jb
in
out
push
jo
les
push
and
leave
test
pushf
cli
push
aam
outsl
and
jnp
pop
out
and
loop
std
push
and
mov
sbb
icebp
mov
fs
mov
add
push
in
mov
repz
adc
scas
ds
and
testb
mov
call
xor
adc
or
gs
ds
imul
ret
mov
lcall
adc
fcomps
xor
rclb
pop
xchg
repz
inc
inc
add
mov
fisubs
das
aad
das
mov
xor
jecxz
mov
inc
and
inc
lcall
cmp
sbb
scas
outsl
adcb
insb
pop
in
sahf
xor
add
gs
mov
jle
test
out
jne
sahf
mov
inc
pop
mov
leave
loop
push
jb
das
rcrl
scas
push
mov
icebp
jo
aaa
push
cmp
sahf
outsb
rcrb
jo
loope
xchg
out
add
push
jb
sarb
mov
cltd
mov
push
sbb
fwait
jae
push
push
lods
jb
cmp
or
cmp
ret
sbb
pusha
test
rcrb
xlat
push
and
push
mov
js
test
mov
pop
mov
xor
cltd
movsl
call
in
inc
adc
ror
cmp
push
stos
nop
call
ficompl
test
out
leave
pusha
mov
out
cs
inc
test
ja
pop
test
std
and
and
adcl
shll
pop
jb
test
std
and
sbbb
mull
mov
mov
movsb
mov
jo
rorl
mov
cmp
pop
fidivrl
xchg
nop
jp
stos
cmpsb
fldcw
mov
mov
or
add
popf
push
lea
cmp
jb
mov
xchg
dec
jecxz
dec
push
mov
xlat
cmp
mov
mov
dec
int3
arpl
stos
data16
xchg
icebp
imul
cltd
fwait
pop
dec
loopne
cmp
popa
aam
dec
push
inc
and
adc
hlt
lcall
pop
das
repz
push
mov
inc
in
add
inc
pop
movsl
dec
xor
jbe
jp
push
data16
pop
and
jae
shl
stos
cmp
and
cmp
add
pop
repz
mov
mov
pop
lahf
and
and
outsl
loop
xor
cmpsl
mov
subl
jns
sub
inc
out
mov
out
mov
jns
pop
insb
mov
push
push
iret
scas
outsb
sbb
sub
jae
mov
push
and
out
mov
rcrb
sbb
adc
repnz
pop
popf
xchg
aad
sarl
fbld
mov
pop
mov
push
inc
pop
popf
or
data16
leave
sub
mov
rcll
sub
cmc
dec
xchg
sbb
aam
addl
xchg
ficompl
ja
mov
push
jne
or
gs
sub
cmovg
inc
jecxz
sbb
flds
mov
ss
xor
sub
frstor
loope
sub
out
sub
dec
jne
lods
adc
inc
push
and
bound
jle
pop
test
adc
das
andb
sbb
jb
cmp
pop
icebp
ret
hlt
push
jno
add
cmp
lds
cmp
fmuls
in
aaa
ljmp
xchg
xor
jo
mov
xchg
bound
mov
inc
gs
ret
lock
push
int
mov
cmp
lds
pop
ss
insl
mov
dec
mov
or
cmp
mov
lods
inc
add
rclb
lret
test
xchg
sbb
stos
data16
xchg
and
xor
gs
inc
xor
daa
lods
dec
xor
add
xlat
mov
int
cmc
ljmp
adc
mov
rcrl
imul
xchg
jmp
mov
loope
mov
pusha
and
rclb
loopne
arpl
cld
cmp
int
pop
pop
adc
dec
add
xchg
lcall
pop
jmp
cmc
mov
icebp
jmp
movsb
loopne
ss
push
std
push
outsb
sbb
push
and
jp
adc
jl
xor
out
cwtl
andb
mov
loop
loopne
icebp
loop
fcom
imul
pop
imul
jge
cld
mov
fcomip
pop
add
pop
or
loop
and
stos
or
cs
loop
es
adc
rorb
cs
cli
add
leave
add
or
jae
push
push
lahf
sub
mov
imul
xchg
in
imull
insb
jns
jge
cmpsl
sbb
lret
mov
or
test
outsl
call
push
call
add
jo
and
leave
loope
imul
movsl
sub
sub
jle
imul
inc
push
inc
sbb
lcall
cmp
push
bound
sbb
or
inc
fisubl
push
fsubrp
or
mov
mov
mov
cmpb
shl
xchg
pop
cmp
repnz
in
orl
lcall
and
or
pop
push
hlt
cmc
fs
out
mov
add
add
push
shlb
cwtl
loope
hlt
and
shrb
push
adc
dec
gs
push
in
inc
xchg
and
adc
xor
mov
gs
int3
out
add
jl
lods
xor
dec
xor
jmp
sbbb
pop
sub
pop
cmp
outsl
dec
sub
mov
xchg
imul
incl
xchg
repnz
lcall
movaps
mov
push
pop
ja
xor
test
mov
push
movsl
xchg
pusha
xor
nop
shrl
sbb
call
inc
ret
out
dec
xchg
ret
outsb
test
test
xchg
xor
cmp
pop
lods
pushf
mov
cmp
negl
or
xor
fbstp
jmp
xor
nop
int3
push
jns
rorl
pop
icebp
incl
mull
jle
rcl
dec
xchg
or
stos
xlat
mov
cwtl
push
ret
mov
flds
xor
into
aad
cmp
fbstp
sub
push
jae
test
or
pop
lods
es
push
stc
sub
adc
ja
leave
or
mov
push
xchg
pop
stos
xchg
pop
fwait
push
jl,pn
scas
mov
test
lods
pop
imul
push
push
sub
and
filds
cmp
or
adc
jge
pop
and
fs
hlt
imul
sbb
xchg
inc
and
test
decl
dec
push
pop
lods
inc
push
faddl
mov
insb
mov
lcall
sbb
adc
aaa
ret
orb
imul
xchg
xor
enter
xchg
pop
movb
mov
subl
add
push
insb
mov
lods
jb
mov
pushf
cmc
dec
loop
cwtl
cmp
add
xchg
sub
repnz
mov
mov
scas
cmp
adc
jbe
lcall
in
cmp
insb
mov
jl
jae
cld
jno
mull
ret
push
xchg
jnp
pusha
mov
movsl
cmp
jmp
ja
jmp
lods
orl
sub
mov
dec
adcl
int
or
lds
sub
int
cltd
and
adc
add
outsl
pop
nop
pop
dec
mov
cmpsb
push
push
lea
or
lea
mov
adcb
imul
xor
mov
ret
ds
mov
lret
icebp
mov
xchg
push
popf
lods
mov
pop
cmpsl
xchg
outsl
jge
add
in
ret
pop
in
inc
xchg
jle
js
mov
out
xchg
lret
and
test
imul
push
jno
mov
shll
ret
loope
lahf
shll
leave
adc
xor
pusha
stos
xor
std
fmul
xchg
push
push
jo
daa
cmc
dec
aas
jle
daa
lretw
inc
lds
cs
xlat
mov
je
sbb
fmulp
and
mov
js
mov
pop
pop
icebp
mov
cmc
xlat
mov
or
cmpsb
push
stos
or
js
leave
jae
cltd
shrb
xchg
inc
out
push
in
jae
lahf
imul
loope
mov
or
shll
ret
jmp
daa
outsl
fcomip
jg
pop
dec
inc
scas
ret
sub
out
hlt
inc
cmp
daa
sbb
fldl
inc
fs
js
mov
out
test
leave
fxch
mov
iret
nop
daa
shll
hlt
nop
mov
stos
and
flds
mov
jne
cmp
mov
sarl
and
mov
xor
ja
and
xchg
jns
sti
mov
imul
fldt
repnz
jne
shlb
adc
ret
ja
mov
rclb
pop
sahf
cmp
popf
aam
clc
xchg
jl
mov
mov
adc
mov
in
scas
cmp
push
jmp
inc
inc
arpl
daa
outsl
iret
lods
adc
mov
loopne
fmull
neg
pop
aaa
push
sbb
adc
imul
imul
sbb
pop
ja
dec
jns
pop
ja
ss
shlb
jne
je
mov
aaa
aas
jne
out
xchg
lods
mov
sub
push
lea
sub
sub
icebp
jnp
cmpsb
repnz
xlat
inc
mov
jbe
scas
mov
xor
ss
and
jecxz
or
cli
pushf
gs
sub
add
scas
jg
stos
jmp
addr16
xchg
jmp
xlat
cmp
pop
clc
sbb
mov
lahf
sub
add
dec
cmp
mov
aam
adcl
das
sbb
loop
insl
pop
subl
outsb
cmp
jne
sub
insl
sahf
xchg
insl
mov
ljmp
mov
jle
imulb
mov
orl
mov
xchg
mov
repz
scas
mov
aam
mov
jmp
jnp
or
mov
push
jne
mov
mov
fnstenvs
arpl
jp
addr16
shl
lods
mov
cvtps2pi
and
xor
inc
sbb
xlat
jmp
fisttpl
scas
mov
stc
nop
leave
shll
mov
flds
jns
je
or
aas
dec
shr
dec
cmp
lret
mov
out
adc
pop
stos
or
mov
dec
cmpsl
sbb
popf
pop
jge
jmp
out
xor
add
out
sbb
insl
jbe
xor
and
inc
loope
push
scas
sbb
insl
mov
push
inc
pop
pop
lea
jp
sbb
push
out
mov
repz
mov
popf
addr16
xchg
jecxz
sbb
hlt
dec
fcoms
icebp
sbb
jg
mov
or
or
pop
test
xlat
xor
dec
into
int3
sub
push
cs
hlt
mov
inc
and
push
and
lcall
sub
addb
or
xor
xchg
ljmp
jns
or
jae
aaa
test
push
sbb
cmpsb
pusha
je
test
les
into
sub
jmp
loop
js
and
call
loope
or
mov
inc
mov
aas
jmp
xchg
cmpl
pusha
es
inc
scas
push
aas
iret
lock
xchg
mov
test
mov
mov
lcall
fstps
mov
out
ds
mov
inc
jne
add
xchg
test
adc
daa
sub
push
icebp
xchg
or
js
jl
jno
sahf
pop
ret
mov
push
aad
scas
iret
mov
mov
inc
popf
adc
pop
xcrypt-ctr
cmpsl
pop
xchg
xlat
orl
sbb
cwtl
ljmp
ja
sub
mov
std
jle
and
icebp
xor
or
dec
and
inc
movsl
jo
fld
pop
pushf
xor
push
cli
data16
mov
adc
xor
into
cmp
hlt
fstps
out
cmpsl
into
mov
pop
jo
movsl
sarb
push
idivl
xchg
inc
testb
adc
inc
stc
jp
lods
insl
insb
jle
int
inc
jmp
aaa
aas
movb
pusha
fmulp
in
xorb
mov
outsb
cmpsl
bound
xchg
enter
jle
mov
ds
jecxz
pusha
ret
sub
in
xchg
mov
fwait
pop
lds
sub
scas
mov
sbb
inc
pop
xlat
rorl
pop
lahf
and
jnp
ret
lods
sub
and
aam
lret
jg
jnp
cmp
outsl
cmp
out
aaa
cltd
fidivs
and
rcr
push
xor
mov
or
lods
mov
jmp
in
aas
int3
fsubrp
add
aas
fs
mov
jns
imul
das
dec
loopne
sbb
add
movsb
xchg
lea
mov
mov
xchg
sbb
adc
pop
lret
mov
out
outsb
add
loope
movsb
fwait
xchg
mov
pop
pop
roll
jbe
sub
pop
lock
jp
out
xor
mov
lods
fildll
mov
sbb
cltd
push
mov
mov
test
push
jno
fwait
cld
or
sbb
push
lods
mov
rorl
pop
mov
inc
es
jecxz
out
insb
jle
sub
stc
lret
sbb
shl
lahf
push
pusha
jns
rcl
pop
add
dec
pushf
mov
jne
lret
jno
loope
inc
mov
pop
rclb
or
push
mov
cltd
movsl
and
push
jbe
jbe
and
pop
out
push
cmpsb
call
or
add
push
stc
nop
mov
test
cwtl
pop
sub
aaa
rep
inc
loopne
or
out
xchg
shl
xchg
loope
pop
sbb
pushf
or
divl
mov
pop
imul
pop
dec
cmp
pop
test
sub
stos
repnz
adc
aaa
addr16
cwtd
cwtl
int3
jo
nop
fdivl
lods
jnp
pop
or
lahf
mov
nop
push
sub
push
cmp
adc
fistps
ss
cld
orl
jle
outsl
or
mov
fstps
push
mov
inc
fldt
mov
push
movsb
cli
push
lahf
mov
jp
pop
adc
sub
loopne
add
sub
stos
jne
mov
test
pop
lret
rol
test
cmc
imul
repnz
add
ds
xlat
lea
dec
mov
mov
add
aad
call
es
pop
push
jecxz
sub
es
rclb
inc
xor
and
add
push
test
sub
xchg
inc
pop
fsubr
inc
push
data16
fidivrl
arpl
adc
adc
ljmp
xor
arpl
jle
xchg
stos
ljmp
out
enter
mov
test
ret
pushl
adc
add
jecxz
bound
pushl
push
stos
adc
or
ljmp
push
out
hlt
jbe
aad
mov
push
jne
leave
and
jae
aam
ds
scas
cmp
pop
lahf
inc
loop
fidivs
xor
loope
notl
loopne
sbb
jge
dec
and
daa
pop
add
shrl
adc
mov
loopne
mov
adc
pop
fldt
adc
enter
subb
mov
test
fsubrs
test
out
push
enter
mov
orl
jp
pop
xchg
loope
in
imul
sbb
jmp
inc
notb
xor
or
int3
icebp
mov
hlt
jmp
subl
xor
fsubrp
cmp
out
pop
ljmp
inc
ja
call
dec
loop
aaa
dec
cs
imul
xchg
mov
fnstsw
xlat
movsl
sbb
fwait
sahf
xor
shrl
add
scas
lahf
cs
movsl
js
jecxz
cmpl
mov
test
xchg
fsubs
daa
lret
lahf
sub
nop
adc
insl
push
in
add
xlat
adc
fsubrl
mov
xor
rol
dec
cmp
hlt
lret
fs
sti
xor
and
lret
outsl
cmp
dec
loope
ds
in
test
push
or
jnp
lods
and
push
popf
das
inc
test
jno
cs
stos
dec
add
in
jbe
pop
lds
js
add
sbb
pop
cli
push
mov
stc
and
leave
in
decl
test
loopne
or
sub
ds
ffreep
ret
inc
stc
sub
sub
push
mov
push
out
ficoms
mov
in
pop
pop
bound
mov
movsl
mov
pop
stc
lea
pop
xchg
cli
test
sbb
js
xchg
or
icebp
inc
aas
jne
pop
lods
and
mov
out
addr16
sub
sub
push
xlat
orl
enter
mov
cmp
popf
lods
push
addr16
add
add
je
out
psraw
fwait
ret
inc
and
push
lock
sub
jb
mov
mov
hlt
cmp
jnp
out
andl
das
jae
pop
insl
adc
mov
add
icebp
mov
add
or
loope
mov
in
inc
out
sarb
pop
add
sbb
iret
xchg
pop
mov
push
sahf
xor
loop
mov
inc
imul
or
cmp
mov
pop
jecxz
test
out
jbe
xchg
fcoms
adc
and
cmpsb
push
mov
outsl
add
sbb
or
jae
dec
mov
std
cli
jg
cmp
pusha
pop
sbb
xor
xor
pop
push
sub
sbb
jne
aas
fs
and
stc
and
mov
and
xchg
push
mov
aas
divl
pushf
inc
scas
popa
jbe
sahf
jb
cwtl
sbb
jge
shll
stos
mov
mov
mov
mov
test
loope
inc
ret
mov
andb
repnz
sub
sbb
aad
dec
mov
and
cld
cli
pushf
ss
jns
mov
jns
pop
add
push
jne
insl
and
pop
scas
inc
repz
cld
lea
push
lret
lret
stos
jb
das
in
fnstenv
shlb
cli
add
jae
cli
push
pop
das
add
jmp
std
test
scas
pop
push
or
pop
pop
sub
popa
dec
cli
daa
pop
dec
or
xor
or
fidivl
jbe
cwtl
aaa
sbb
mov
popa
cmp
cs
divl
cmc
enter
mov
daa
or
jmp
pop
mov
jbe
mov
into
imul
js
xchg
test
xchg
push
jl
fs
repz
push
and
lahf
out
adc
mov
xchg
stos
es
push
aam
jae
xchg
xor
mov
inc
dec
repz
sub
inc
vbroadcasti32x4
ja
dec
cs
mov
cmp
inc
fsubrl
xchg
pop
ret
dec
fdivs
outsb
pop
scas
mov
notl
cmp
repnz
fnstenv
mov
jns
stos
notl
pop
pusha
or
mov
lret
rcl
xor
pop
in
fildll
add
pop
dec
jmp
repnz
ds
out
inc
cmp
mov
mov
outsb
inc
sub
popf
pushf
iret
pop
or
out
cmp
lcall
mov
les
fildl
aaa
mov
jg
nop
mov
xchg
and
mov
icebp
mov
aam
push
into
sub
jb
outsb
sbb
repz
push
lahf
push
mov
out
cmp
mov
push
insb
xchg
jne
adc
ja
or
outsb
xchg
call
pop
mov
cmp
in
mov
add
inc
into
gs
sahf
push
cwtl
int
in
test
movsb
pop
hlt
jecxz
mov
sub
scas
jns
dec
cvtps2pd
sbb
push
mov
ds
mov
cmpsb
inc
xor
lods
scas
out
jge
repz
dec
xchg
lock
sahf
sub
sub
mov
adc
imul
push
imul
add
rorb
cld
xchg
xor
xor
push
andb
inc
xchg
or
insb
lcall
and
andl
and
shrb
jae
push
xor
test
mov
sub
ss
jmp
dec
inc
xchg
mov
sbb
jns
or
or
fidivrs
inc
cmp
cmc
cmp
fmul
into
mov
pop
mov
les
cmp
ja
push
push
cmp
inc
push
sti
leave
push
stos
sbb
scas
enter
out
jmp
or
rcrl
stc
mov
test
test
loop
pusha
mov
shll
xchg
push
imul
push
cmc
mov
ret
fcoml
mov
stos
cmc
popf
xor
fs
sub
push
mov
add
ljmp
cmp
dec
loop
sarb
mov
adc
imul
notb
data16
hlt
sbb
insb
xor
das
push
xorb
add
mov
push
lods
mov
or
or
fsubrs
negl
imul
enter
repnz
sti
lret
outsb
addb
and
or
jns
sahf
and
call
push
out
subl
out
bound
xor
pop
ljmp
xchg
cmp
push
das
mov
adc
mov
in
cwtl
inc
mov
or
insl
ja
inc
sar
lock
sub
mov
cmpsb
add
mov
incl
cmp
mov
dec
mov
rcl
mov
mov
mov
shrl
sbb
sub
sarb
int
div
adc
fmulp
sbbb
ds
bound
sub
mov
shrb
add
std
push
out
les
adc
imul
mov
xchg
push
xchg
rol
mov
adc
out
fstpt
push
into
push
cmpsl
inc
inc
scas
ja
imull
push
pushf
or
test
xlat
cmp
testl
rcl
cmc
push
jo
push
xchg
inc
mov
fidivrs
sarb
sub
addr16
lock
sub
imul
lret
mov
out
in
daa
lcall
inc
mov
xor
into
test
jns
adc
jae
dec
xor
jbe
and
push
jge
mov
sarl
mov
les
sahf
fnsave
fcomi
stc
aaa
out
imul
push
sub
loopne
hlt
cmc
out
int3
xchg
push
pop
pop
popa
insl
xchg
insb
movsl
out
sahf
lea
movsb
pop
xchg
cmc
inc
dec
and
push
cmpsb
cmp
adc
mov
testl
cld
jg
stc
mov
push
sub
and
jns
mov
cmc
arpl
scas
and
je
or
rorb
cltd
test
mov
mov
insb
pop
jnp
imul
repnz
xchg
cwtl
insb
or
cmp
pop
out
cmp
pop
jle
xchg
mov
push
sub
xor
dec
pop
outsb
insl
cmp
scas
and
lock
sbb
push
movsl
test
cwtl
das
cmpsb
sub
rolb
shl
out
aam
loopne
into
test
sbb
jl
xchg
add
jle
mov
add
das
push
insl
xor
inc
rol
jmp
inc
lret
sub
inc
aad
jno
es
or
movsb
push
or
cmp
nop
dec
mov
jmp
out
mov
add
xor
sub
rcrl
cs
arpl
data16
in
xchg
inc
jnp
clc
jns
popf
or
mov
in
xchg
and
jle
xchg
stc
and
mov
push
push
movsl
sbbb
dec
mov
loope
insb
adc
stos
and
ret
lock
pop
mov
mov
mov
mov
jmp
xchg
pop
imul
sub
int3
adc
fidivl
adc
push
or
fistpll
in
dec
test
mov
mov
mov
dec
les
addl
xchg
mov
jbe
inc
test
cmp
xor
loopne
push
pop
pusha
or
push
jle
call
add
int
shrb
sub
incb
mov
pop
imul
shlb
and
push
xchg
push
mov
loop
inc
push
les
mov
andb
cli
adc
data16
fdiv
mov
ucomiss
mov
loope
je
aaa
ss
lcall
pop
pushf
jge
aad
add
inc
int3
cmpsb
or
jo
inc
rorl
sub
sbb
test
out
dec
fists
mov
fildll
ja
cmpsl
mov
and
push
inc
out
fnsave
shr
ja
cltd
mov
bound
loopne
cld
mov
jge
mov
add
divl
inc
sub
and
mov
cli
mov
insl
cmpsb
pusha
xchg
mov
icebp
sbb
inc
inc
jns
mov
std
jg
cltd
js
in
dec
sbb
lea
outsb
repz
cmp
push
adc
loopne
fiadds
lcall
dec
pop
inc
xchg
xor
lods
xor
scas
lods
sti
jle
sub
lcall
push
cmp
fwait
cmp
shr
sbb
pop
add
sub
xchg
aam
ljmp
inc
fdivrl
pop
sbb
pop
push
jmp
mov
mov
in
sub
rcr
leave
cmp
nop
rcl
sub
and
sahf
mov
shrb
addr16
push
test
xor
sub
pop
stos
inc
push
cmc
sbb
and
mov
and
push
xor
aam
notb
jmp
cltd
fcomi
push
into
dec
adc
jb
xchg
lods
inc
dec
mov
nop
lret
adc
cmp
sbb
jp
ja
jge
xchg
iret
push
movsl
add
cmpsb
dec
jecxz
push
lds
in
jg
test
inc
insb
sbb
cltd
or
enter
jp
pop
jo
scas
dec
in
aaa
pop
jo
out
cli
mov
imul
add
mov
mov
mov
mov
and
cmp
cmpsb
jg
pop
mov
adc
jecxz
movzwl
add
xor
push
and
or
dec
cmp
xchg
cmp
mov
sbb
jne
ja
test
hlt
push
add
jl
lret
icebp
cmpsb
mov
jb
mov
out
test
ret
pop
dec
pop
mov
and
fidivs
js
sub
fdiv
cmp
mov
pop
mov
jg
sbb
jp
je
sbb
stos
adc
push
aaa
mov
mov
mov
rclb
inc
push
xchg
xchg
sbb
in
call
enter
stc
cltd
test
out
das
pop
mov
into
outsl
jnp
out
sbb
adc
inc
add
in
mov
movsl
adc
add
inc
movsl
daa
sub
add
pop
inc
in
sbb
lock
sbb
mov
push
push
fldenv
pushf
test
ljmp
fimuls
sbb
or
cmpsl
jno
adc
mov
ss
mov
inc
mov
ret
dec
pop
and
test
and
or
and
mov
int
lods
out
iret
xchg
jbe
lcall
cmc
pushl
hlt
inc
add
jmp
adcb
inc
mov
cltd
pop
inc
mov
jge
inc
fwait
lcall
jno
inc
push
jle
push
loope
stos
xor
int3
sbb
xchg
testb
daa
lahf
cmpsl
or
or
ds
repnz
sub
sub
pop
inc
lock
cwtl
popf
mov
pop
out
shrb
out
pop
shrb
les
subl
stos
mov
aas
dec
xlat
lcall
add
in
mov
pop
or
gs
mov
test
fwait
stos
add
jae
inc
aad
push
lahf
mov
roll
push
pop
out
rclb
add
inc
fcmovu
jl
inc
leave
and
popa
inc
mov
dec
sarb
jo
inc
jecxz
mov
sub
jbe
movsb
mov
pop
sahf
testb
sahf
idiv
aas
fwait
lock
bsf
out
arpl
sbbb
shrb
add
call
mov
mov
std
push
rol
cmp
das
insl
aam
ret
sub
adc
jg
int
jns
and
cli
push
aas
sbb
cmp
cmp
xlat
int
inc
sarb
fs
aad
pusha
cmp
lret
repz
pusha
pop
dec
fwait
loope
or
nop
jmp
loopne
push
mov
mov
xor
pop
stos
pushf
test
push
insb
push
sub
xor
push
scas
loop
loope
nop
arpl
test
pop
loopne
outsb
mov
push
leave
jbe
cmp
les
or
das
jae
jno
sbb
sub
andb
push
sub
jge
add
rclb
jle
adc
lods
add
lret
mov
ja
sbb
scas
stc
mov
push
ror
fildl
lods
jnp
jbe
sbb
or
out
test
fsubrl
xchg
xchg
sub
or
in
fs
push
lods
inc
cmp
lret
xlat
rorb
enter
and
daa
fwait
xor
jle
dec
ja
add
and
add
cwtl
cmp
and
pop
xchg
and
inc
fdivrs
test
inc
in
jg
mov
xor
mov
shrb
daa
lods
adc
sbb
scas
cmp
es
outsl
or
cli
xchg
repnz
es
jecxz
test
xchg
add
dec
mov
jecxz
ror
in
std
dec
scas
movb
ret
aas
inc
mov
movsb
and
sbb
jnp
push
or
mov
scas
fidivrl
mov
xchg
mov
push
push
add
xor
ja
nop
out
ret
add
stc
insb
dec
inc
cs
add
das
shll
rdpmc
test
pop
xor
pop
sub
xor
sub
addr16
pop
cmp
push
sbb
mov
cli
dec
loopne
enter
dec
stos
inc
jne
in
pop
pushf
mov
and
lret
xor
push
sub
sub
jno
test
testl
cmpsl
inc
xchg
sub
inc
notb
scas
mov
fsubs
cli
push
ds
adc
jne
shlb
out
sub
jg
sbb
fisttpl
cs
imul
inc
dec
dec
dec
mov
xchg
stos
lret
pop
cmp
scas
pushf
cmpsl
mov
icebp
xchg
subb
adc
mov
jb
pushf
sub
rol
dec
pop
sti
pop
ss
xchg
sub
sbb
dec
jle
cmp
sti
mov
or
cmp
es
jecxz
pop
add
and
and
and
inc
cmpsl
out
inc
add
jb
stc
cmc
adc
dec
les
cmpsl
mov
xor
lret
icebp
xchg
mul
mov
lahf
out
mov
push
stc
pop
sahf
pop
cmp
mov
imul
xchg
dec
mov
mov
loop
jo
stc
sbb
divl
stc
mov
fimuls
mov
adc
inc
les
insl
jp
loope
lahf
mov
or
jne
add
bound
arpl
gs
hlt
stos
outsl
push
aam
dec
roll
cwtl
mov
fsubs
popf
push
xchg
jl
adc
jl
sub
dec
xlat
sub
popa
jge
push
xchg
rcl
fnstcw
sub
add
xor
mov
push
xchg
out
popf
jae
aaa
mov
mov
xor
cs
sub
sbb
and
push
dec
cmp
arpl
and
jnp
jae
out
mov
xchg
mov
mov
incl
test
pop
shrb
sub
and
imul
imul
sbb
adc
ret
negb
push
and
scas
add
rol
jnp
stc
jle
cmp
or
leave
add
pop
icebp
icebp
cmp
mov
cmpsl
inc
bound
inc
cwtl
mov
leave
pop
xor
inc
push
or
inc
fsubs
jge
movb
xchg
xor
mov
ds
outsb
jl
jo
arpl
add
jne
push
stos
xchg
inc
and
lret
in
push
or
cli
out
cmp
fsubr
clc
andl
bound
xchg
rcrb
fldcw
aad
mov
mov
filds
and
pop
mov
cmp
mov
mov
out
lahf
jae
or
out
sbb
dec
cmpb
inc
arpl
addr16
and
cmp
cmp
sub
jmp
daa
lcall
ja
and
fisubrs
lahf
inc
push
mov
mov
add
adc
xchg
inc
pusha
dec
mov
ss
pop
xchg
mov
xlat
pop
fnsave
cmpsl
lods
adc
test
into
clc
aad
xlat
clc
nop
idiv
sbb
push
add
stos
xor
pop
pop
sbb
out
jp
mov
push
push
xor
push
popf
cmp
add
cs
adc
les
inc
cltd
std
jb
rol
mov
push
outsl
loopne
pop
hlt
or
sbb
sub
pop
pop
andb
daa
outsl
dec
fbld
xor
jl
add
xchg
lods
mov
jb
jb
xor
mov
imul
pop
cmp
and
aam
push
xor
fsubrp
pop
xor
loopne
das
std
cmp
pop
mov
mov
imul
mov
aaa
sbb
dec
shrb
sub
mov
jnp
out
aam
pop
or
sbb
fwait
aas
and
jl
mov
decl
sti
xor
in
xchg
jmp
mov
data16
and
int
int3
cmp
mov
into
out
sbb
mov
cmpsl
mov
and
loope
mov
jl
lret
lods
xchg
and
or
cmp
fcomip
and
inc
mov
mov
imul
hlt
jmp
push
mov
shlb
jo,pt
aam
sub
imul
imul
cmp
stc
into
sahf
pop
lret
lret
out
lods
mov
test
sbb
push
xchg
test
cmp
push
popf
sbb
mov
decb
cmpsl
xchg
adc
xchg
lcall
das
cltd
dec
add
jp
shrl
ret
gs
pushf
scas
jb
mov
rorl
ja
jecxz
popf
mov
lock
xchg
mov
fisubl
sbb
sti
inc
pusha
pop
sbb
cmp
cwtl
inc
outsb
cwtl
mov
hlt
xor
adcl
cmp
mov
jmp
push
dec
push
iret
mov
mov
sub
aam
loopne
out
sbb
inc
pusha
cmpl
mov
popf
dec
imul
rep
xchg
sub
cltd
and
aam
gs
cmpsl
adc
xor
xchg
gs
dec
movsl
fnstcw
test
sub
sbb
push
imul
mov
sub
lea
xchg
scas
ds
jl
mov
fdivrl
aam
pop
adc
push
xor
aas
and
mov
inc
push
les
mov
cld
cmp
add
lds
inc
inc
subl
sbb
cli
cmp
mov
fucom
lods
push
idivb
pusha
ss
mov
in
leave
add
jp
je
cli
xchg
fdivrs
jp
mov
out
jge
add
mov
mov
xchg
scas
das
push
xor
and
bound
inc
dec
leave
ret
ja
xor
test
xchg
or
addr16
in
sub
sahf
ss
out
shl
cmpsb
pop
das
sub
clc
loopne
adc
mov
sbb
lea
ds
mov
enter
cmp
into
cmp
lds
jl
in
sbb
lock
adc
add
cmp
repz
xchg
or
shll
mov
and
mov
sbb
outsb
add
enter
fisubrl
pop
aaa
lds
sbb
dec
arpl
adc
sbbl
rcll
mov
push
jmp
dec
xchg
jo
pushf
jo
or
push
in
xor
jmp
cmp
push
leave
pop
fldt
rclb
ss
gs
xor
mov
and
int
mov
jg
add
cmp
add
inc
aam
jmp
sub
nop
sub
add
jecxz
andl
andb
lods
mov
add
clc
pop
jl
fstps
adc
cmpsl
jne
dec
loope
stos
fucomip
test
cmpsl
cld
mov
ret
pusha
jp
sub
dec
push
pop
sub
out
adc
test
repz
add
sub
enter
jl
pop
addb
aad
test
leave
push
push
nop
daa
outsb
jno
adc
andl
mov
xor
enter
sti
scas
ljmp
stos
shl
mov
lock
dec
stos
sub
dec
xor
in
adcl
rcll
cmpsl
cmp
cmpsb
ja
shll
mov
mov
and
loop
shl
out
js
fisubs
lea
dec
sysenter
lahf
pop
push
pop
insb
aad
orb
mov
cmpsb
cmp
push
ja
movsb
test
subl
addr16
leave
lret
cmp
cmp
cmp
les
add
cmp
movsb
std
gs
leave
xchg
and
ja
pop
jmp
pop
and
cmp
loopne
adc
or
push
rol
pop
gs
adc
jle
jne
cmp
int
add
jo
fsubl
lahf
pop
movsl
shlb
popf
repz
mov
xlat
mov
mov
push
sarl
mov
loopne
mov
or
pop
adc
sahf
mov
adc
inc
popf
jmp
ljmp
push
push
sbb
xlat
jge
leave
inc
inc
and
cmc
or
or
cli
cmp
inc
lods
push
dec
rcrb
pop
out
enter
or
movsl
push
dec
pop
aas
dec
dec
sub
fidivl
mov
jnp
cmp
cltd
cmpsb
hlt
xchg
and
stos
sub
mov
loopne
mov
test
push
hlt
std
cmpsl
es
add
mov
imul
ds
push
push
loope
push
adc
dec
sbbl
and
xchg
xchg
insl
add
testb
test
sti
test
int3
stos
data16
push
sbb
lret
rcrl
mov
ja
lea
and
mov
scas
call
popf
in
sahf
or
adc
sub
mov
lahf
stos
mov
mov
das
jg
mov
mov
rol
lret
add
cmp
nop
pop
jo
aas
jnp
adc
sub
and
sbb
aad
adc
inc
and
jbe
hlt
sbb
nop
test
sbb
lds
and
fwait
mov
inc
cmp
or
and
ja
call
sub
fninit
mov
cmp
cmp
test
fisubs
jmp
enter
push
scas
sbb
test
lret
push
repnz
and
xor
arpl
mov
jl
cmpsb
lret
jne
add
cld
mov
movsl
pop
mov
loopne
sbb
jg
rorl
lods
test
stos
mov
cs
out
pop
add
add
inc
lcall
dec
stc
subl
or
or
xchg
xchg
in
xchg
mov
jns
jle
sub
push
jne
push
add
shrl
dec
mov
ds
jne
cmp
xchg
add
es
sbb
loop
jmp
dec
mov
fisubs
jo
gs
out
mov
test
or
or
mov
out
icebp
sub
inc
andb
jns
inc
push
je
add
mov
lods
outsl
rolb
into
and
push
jbe
sbb
push
xlat
xor
out
xor
in
adc
pop
mov
xchg
jnp
in
dec
dec
clc
pop
test
pop
dec
and
xchg
mov
mov
mov
push
roll
cltd
add
sbb
pop
sub
addr16
into
in
je
inc
jmp
mov
sbb
xlat
and
pop
dec
mov
cli
jmp
outsb
xchg
jp
pop
cmp
dec
push
push
roll
aas
dec
sub
in
mov
or
mov
fildll
add
loope
sbb
mov
ret
mov
lds
gs
sbb
push
inc
push
push
sbb
mov
mov
ja
cmp
pushf
pusha
andb
mov
cmp
notb
lcall
xchg
inc
inc
inc
mov
jle
push
mov
test
jl
lods
xor
out
push
insb
movsl
push
push
dec
mov
gs
push
outsb
xor
jg
mov
jnp
pop
cmp
lahf
mov
xorb
jge
gs
sahf
add
mov
or
lahf
cmp
loop
or
mov
jmp
push
rorb
and
pop
or
adc
add
adcl
mov
pop
push
sub
pop
mov
bound
xor
mov
sub
jne
fstpt
sub
pop
cmp
mov
repz
adc
jg
cmp
mov
mov
gs
and
pusha
fs
cwtl
jbe
add
xchg
mov
testl
lret
xchg
adc
sub
add
add
adc
adc
std
cli
jp
mov
sbb
jne
iret
loopne
sbb
cld
jae
nop
cmp
or
push
push
sahf
and
mov
js
push
inc
ficomps
mov
hlt
aam
je
ljmp
xor
mov
mov
shrb
dec
sbb
int
insl
xchg
movsl
int
mov
xor
mov
push
fwait
daa
cmp
push
add
ret
add
pop
push
repz
test
pop
cmp
mov
push
jle
fs
push
js
xchg
jmp
ret
mov
nop
daa
pop
scas
adc
pop
stc
add
pop
mov
jge
mov
jle
in
xchg
imul
dec
imul
sti
cmpsl
xchg
in
sub
aas
out
adc
push
out
push
repnz
mov
loope
cmp
xchg
pusha
fnclex
aam
mov
fadds
and
xchg
dec
movsl
lret
xchg
sub
test
out
cmp
loopne
pop
in
std
js
imul
dec
out
es
aas
jge
mov
stos
cmpb
mov
push
jo
sub
imul
mov
enter
dec
aam
pusha
fwait
or
adc
scas
out
xor
mov
je
imull
outsb
out
mov
pop
imul
inc
mov
ja
lods
ljmp
inc
jo
movsb
xchg
inc
lea
aas
scas
lret
adc
xor
pop
ret
inc
sub
stos
std
stos
testb
ss
dec
movsb
pushl
cld
fmuls
cmp
xchg
loope
adc
jle
jl
pop
xchg
pop
icebp
lds
fld
sub
dec
push
popa
fmulp
fildll
mov
scas
aad
insl
adc
push
iret
dec
xchg
or
pop
xchg
jle
dec
popa
jg
rolb
test
mov
jp
push
ss
dec
add
fbstp
test
bound
lods
fidivs
add
jnp
mov
mov
stos
xchg
fwait
int3
mov
adc
inc
mov
mov
push
pushf
imul
sub
xor
dec
add
dec
xor
je
test
xchg
dec
call
and
orb
and
or
mov
inc
roll
lock
popf
fcomps
repnz
and
popf
or
mov
or
clc
dec
stos
jmp
and
call
stc
out
push
xor
int
mov
std
adc
pop
in
popf
es
pop
test
test
daa
inc
sbb
fadds
and
ficomps
jg
cli
andl
push
pushf
mov
mov
mov
mov
adc
loope
outsl
cli
push
je
cmp
mov
push
dec
int
adc
or
add
outsb
in
pop
xchg
int
adc
jno
xorb
pop
cmp
ds
fidivl
insb
mov
ror
dec
cmpsl
enter
add
xor
call
testb
or
out
inc
cmc
leave
mov
idivl
in
popl
iret
jge
sbb
inc
bound
lds
cmc
mov
insl
lds
push
ljmp
or
iret
gs
cmp
psllq
sarl
inc
mov
fildl
sbb
dec
in
out
div
repnz
loop
rorb
mov
test
insl
xchg
mov
xor
enter
cmp
adc
sbbb
hlt
sub
dec
mov
bound
cmp
sti
and
ds
outsl
push
or
cmp
jo
insl
sahf
aam
dec
pop
cmpsl
lahf
orl
push
hlt
xchg
inc
insl
xor
inc
daa
mov
stos
jne
xchg
push
int3
sahf
jne
cwtl
or
sbb
jl
mov
jge
pop
ret
jle
jecxz
pop
leave
jbe
mov
adc
add
xchg
and
cld
mov
dec
mov
mov
mov
test
into
mov
pop
shl
outsb
ret
dec
ret
add
jbe
fcoms
paddq
movsl
rcll
pop
enter
add
dec
pop
xchg
daa
xchg
add
dec
rolb
inc
popa
xor
sub
pop
mov
sahf
jmp
adc
inc
int3
push
adc
mov
push
or
bound
xchg
dec
mov
xchg
add
leave
xchg
dec
icebp
adc
cmc
test
pop
nop
sbb
push
notl
test
xchg
in
mov
mov
fistpll
jecxz
jg
or
arpl
insl
adc
pusha
bound
leave
mov
decb
mov
dec
lods
mov
es
and
mov
fwait
and
test
jb
jg
std
imul
aam
mov
add
out
cmp
add
scas
out
xchg
lret
push
pushf
xchg
sbb
clc
test
ja
jmp
stos
sbb
pusha
and
xchg
xor
xchg
outsl
jge
mov
rcrb
lret
int
shl
icebp
test
mov
pop
cmc
push
stos
mov
repnz
push
or
mov
add
nop
cmpl
lds
jle
push
mov
jg
xor
fstl
mov
ret
cmc
xor
fisubrl
adc
stos
ds
std
jnp
pop
movsl
jae
mov
adc
or
clc
out
loopne
sub
cld
inc
sub
test
add
add
xchg
xor
inc
push
inc
sbb
mov
rorl
adc
xor
pop
dec
add
mov
xchg
sub
jo
bound
sbb
or
sub
shl
cltd
cmpsb
cmp
and
ret
fmulp
add
xor
pop
inc
xchg
mov
add
ja
pop
xlat
rcll
jo
inc
inc
lods
inc
jbe
je
xchg
xor
xchg
hlt
push
inc
jb
pop
fbld
cmp
pusha
or
cmp
out
or
jnp
popf
clc
jg
sub
mov
and
cmp
dec
cli
inc
dec
push
pop
xor
pushf
test
fisttpl
sbb
mov
iret
add
mov
add
outsl
loop
nop
dec
gs
lds
ret
add
pop
das
xchg
xchg
aad
pop
jmp
jbe
jmp
and
sub
lds
or
adc
mov
push
sub
rcl
jl
xor
and
ret
sub
in
cmp
fs
enter
int3
insl
push
je
arpl
adc
std
cmp
jg
scas
out
rcrb
cwtl
pop
sub
test
inc
dec
pop
lcall
ret
sub
je
fldenv
mov
sbb
clc
into
mov
arpl
test
sbb
mov
int3
xchg
or
dec
mov
sahf
scas
and
sub
inc
fisubrs
jae
xorb
loop
lahf
negl
xchg
std
and
xor
cmp
lock
ror
pusha
jno
mov
enter
cwtl
gs
xchg
add
and
pop
arpl
data16
adc
cmp
fdivrl
pop
scas
cs
or
push
adc
sub
xor
push
icebp
add
or
test
jge
test
mov
or
fcom
jno
sbb
data16
pop
in
in
jg
cwtl
mov
loope
jmp
cmc
cmp
std
into
xor
sti
lds
pop
fcompl
xor
lods
and
fsubr
dec
mov
sbb
inc
test
push
addb
popw
mov
pop
cltd
and
cwtl
faddl
negl
jp
pop
jg
xor
inc
les
mov
push
and
ljmp
pop
cld
jg
sbb
jp
imul
fldl
mov
push
cltd
inc
sbbb
hlt
push
leave
pop
into
in
and
push
test
aad
xor
repz
decl
stc
sbb
enter
jo
mov
and
pushf
outsl
int3
cld
jecxz
fdivp
sarb
xor
scas
jp
add
stos
test
adc
jb
jo
pop
out
sti
ret
outsl
jge
stos
sti
icebp
mov
fwait
pop
cli
ss
pop
sbb
push
je
mov
jge
pop
xchg
inc
dec
mov
inc
mov
sahf
jno
inc
adc
addr16
jnp
adc
jecxz
fdivrs
pop
sti
push
cmpsb
pop
sbb
dec
cltd
jmp
std
mov
fnstsw
popa
imul
jmp
dec
cmpsl
push
push
push
mov
popa
mov
mov
aad
rcl
cmp
mov
lahf
testl
sbb
add
sbb
test
popa
jecxz
pop
dec
mov
daa
inc
movsl
sbb
into
add
leave
mov
cmpsw
jae
mov
push
lcall
cwtl
stos
addr16
xchg
xchg
fs
int3
aaa
repz
mov
fistps
imulb
movsb
mov
pop
lock
scas
fimuls
sub
shl
inc
fdivr
jo
mov
or
push
dec
aas
or
sbb
jb
rolb
adc
jp
push
dec
mov
aaa
or
inc
repz
push
xchg
pop
test
push
test
in
pushf
ja
cmpsb
ds
loopne
jns
lret
pop
push
repnz
or
push
mov
xchg
cmp
jno
popa
push
inc
lcall
mov
sub
arpl
addl
mov
dec
sub
pop
outsb
mov
aas
sub
imull
daa
lret
xchg
sbb
das
mov
out
xlat
out
xor
sbb
out
jge
test
push
out
inc
sbb
clc
test
pop
dec
fwait
add
das
mov
loopne
std
cmc
in
aas
ret
push
push
xchg
pusha
popa
fsts
lcall
in
adc
mov
dec
push
xor
pusha
sbbb
lret
dec
sahf
pop
jecxz
test
aad
loope
xchg
pop
pusha
movb
cmp
cmp
pop
insl
mov
push
repnz
mov
adc
adc
arpl
push
mov
popa
pop
hlt
xchg
cwtl
cmp
leave
mov
cmpsb
es
icebp
sbb
js
popf
fsubp
pop
faddl
popf
stc
xchg
and
lea
pop
mov
popa
dec
mov
movsl
imul
insb
jmp
sbb
ja
mov
jno
cmp
loope
sbb
out
sbb
mov
shrl
and
mov
rcrb
xchg
mov
sbb
sub
stos
insb
adc
add
into
cmpsb
bswap
jo
sbb
lods
mov
sti
test
xchg
mov
push
push
cs
inc
pop
cmpsb
push
scas
ja
cmp
outsl
or
pop
divl
aas
aaa
sub
insl
iret
xchg
lahf
push
pop
push
rorb
lea
in
xlat
mov
push
mov
adcl
movq
popa
lea
cltd
lahf
aaa
jo
add
or
shll
loop
and
cmpxchg
test
add
sub
cs
insl
mov
fs
movsl
and
cmp
jecxz
aas
sbb
dec
push
movsl
inc
jb
fadds
xchg
inc
enter
sar
out
pop
je
and
xchg
cli
xorl
fs
stc
andb
pop
shll
mov
or
jae
fsubrs
insb
jno
jno
shlb
mov
gs
fdivrs
xchg
filds
inc
in
jne
mov
in
lds
cmpsl
fisttps
fmull
xchg
mov
fwait
adc
pop
dec
dec
push
call
cmp
cmp
ljmp
and
les
xchg
cmpsb
lock
test
and
shll
add
adc
lcall
in
das
adc
gs
or
adcb
add
jbe
sub
mov
sahf
xorb
adc
pop
and
inc
lds
int3
fcomp
shlb
mov
adc
sahf
stc
pop
test
call
shll
data16
pop
mov
aad
cmp
xchg
or
push
mov
xchg
outsl
pushf
xor
jmp
jmp
movsl
and
mov
and
xlat
pop
push
jmp
xor
out
fs
cmp
ljmp
mov
int3
cltd
cmpsb
fisubs
xor
cli
mov
imul
mov
add
pushf
repnz
out
testl
popf
popa
loop
mov
in
and
jae
lret
lds
lods
jmp
fcmovnbe
jmp
xor
popf
icebp
xchg
inc
push
and
aaa
add
lods
fs
push
inc
fldenv
lahf
lret
xorb
stos
es
and
jp
xchg
ret
data16
in
and
jo
test
outsl
inc
scas
adc
xchg
imul
vpcmpgtb
out
sbb
clc
push
mov
imul
test
testb
sub
jp
push
mov
testl
add
jl
sbb
cmp
jb
shr
ss
xchg
or
pop
mov
sbb
mov
call
cmp
jg
dec
stos
jbe
adcl
mov
addr16
push
fdivrl
add
jle
addl
js
sbb
xor
mov
sti
aas
pop
popf
cmp
push
test
xor
insl
sbb
out
push
push
inc
ror
loope
and
test
add
xchg
push
enter
jge
js
inc
dec
pop
into
cmp
push
sbb
rol
adc
jg
mov
and
ss
xlat
sub
fbstp
fidivrl
loopne
fcoml
sub
sub
repz
dec
out
movsl
xchg
and
je
scas
sbb
lds
ds
mov
outsb
add
mov
mov
jne
pop
mov
out
std
sub
add
addr16
mov
mov
mov
scas
lock
bound
pop
cmc
jo
pop
int
cs
aaa
hlt
push
cwtl
mov
pop
ss
mov
shrb
loope
gs
sbb
add
jmp
bound
push
xchg
jp
jne
xor
adc
xchg
push
movsl
xor
pop
sub
fcoms
mov
jbe
ds
aad
popf
push
xlat
notl
sub
dec
xor
inc
icebp
push
xchg
lods
fnsave
aam
out
hlt
push
and
dec
imul
clc
push
or
lock
cmc
insl
test
cmc
jb
test
xor
mov
lahf
adc
push
ret
mov
push
jecxz
fsubrl
fwait
adc
adc
adc
inc
xor
scas
jae
push
subb
adc
leave
jecxz
or
std
mov
int
jbe
pop
mov
shrb
xchg
lods
cwtl
inc
xchg
jo
mov
pop
andl
mov
bound
push
nop
sbb
movsl
call
or
sub
or
and
ror
pop
pop
jnp
fmul
sbbl
sbb
ds
mov
or
xor
adcb
fmuls
mov
cli
push
repz
and
adc
mov
fldl2e
rdtsc
xor
adc
nop
or
pusha
pop
sub
mov
add
sub
jns
cld
jg
cmp
cld
sub
push
xchg
mov
test
enter
adc
dec
lret
icebp
mov
cmp
mov
lods
sbbl
out
int
stos
sbb
add
adc
negl
push
sbb
push
test
iret
icebp
and
scas
push
push
push
scas
cmp
inc
imul
lock
push
sti
pop
fs
mov
popa
in
mov
cmp
add
pop
fisubrs
aam
push
adcb
adcb
mov
icebp
push
mov
call
push
jns
dec
xchg
aam
lahf
in
std
nop
pop
das
rolb
scas
stc
pop
sub
lret
inc
cmp
xchg
sahf
push
jge
clc
lods
jmp
push
sbb
adc
jmp
push
adc
aad
imul
pop
repz
fs
sbbb
xchg
movzbl
fldenv
mov
mov
test
icebp
aas
pushw
mov
jmp
insb
popf
xchg
cmp
inc
jecxz
and
lock
loopne
test
mov
xor
cmp
inc
xor
xor
fmulp
xchg
push
mov
neg
mov
cmpsb
insl
jne
pop
ret
negl
addr16
inc
in
sub
loopne
cld
add
lahf
arpl
les
ss
xchg
in
inc
adc
je
mov
rorb
mov
cmc
or
inc
mov
in
sub
aad
rcrb
ret
stc
cmp
cmpsl
xchg
xchg
dec
pop
dec
outsb
mov
movsb
xlat
icebp
and
and
movzwl
add
out
jne
sub
pop
iret
or
jle
and
jmp
sbb
sbb
inc
es
in
add
mov
jle
pop
lret
and
fldt
jae
fsts
cmc
ror
adc
or
lcall
daa
mov
lods
loopne
jno
dec
movsl
jbe
sub
mov
imul
lahf
dec
popl
cld
cmp
test
cmpsb
mov
jnp
ror
cmpsb
test
icebp
mov
add
stos
cmpsl
inc
pop
in
adc
pop
lds
movl
mov
cmp
xchg
rcll
std
fdivs
mov
xchg
add
pop
addr16
sub
mov
and
pop
xor
orl
mov
pop
sub
dec
lock
fdivl
adc
repnz
adc
xchg
test
enterw
mov
mov
mov
ret
rep
dec
and
js
lds
xor
pop
xchg
cmp
mov
hlt
int
in
int3
icebp
pop
or
out
add
inc
and
pusha
and
in
push
lods
rcll
fildll
data16
jno
mov
mov
lods
add
and
testl
cmp
std
jne
fcomps
cmp
cmp
divb
pop
xor
pop
and
mov
mov
jecxz
push
fwait
sbb
ljmp
lds
and
mov
fisubrs
sahf
push
popf
jbe
push
call
push
cmpsb
in
mov
xchg
or
sar
gs
test
pop
xor
shlb
popa
fdivl
cmp
repnz
pop
shl
or
lea
add
hlt
rclb
rol
mov
outsl
mov
jp
mov
and
adc
jne
fdivl
or
loope
push
mul
xor
incb
xchg
fstpt
sbb
xchg
lahf
fs
sbb
adc
pop
scas
jne
push
sub
hlt
fidivrl
in
mov
pop
sahf
in
aam
int3
add
ret
loop
dec
aas
dec
pop
jno
shll
scas
push
mov
stc
lahf
mov
pop
jno
and
sahf
lcall
sub
out
cmp
movsl
sub
push
push
ljmpw
ss
je
ja
repnz
pop
cmpsb
hlt
les
xlat
popf
xchg
xor
testb
mov
cwtl
or
insl
mov
cmpsl
jbe
callw
repz
out
adcl
stc
aas
call
loopne
sub
or
das
mov
adc
adc
and
jge
xchg
lea
mov
or
call
jmp
les
push
in
sub
add
stc
add
and
in
inc
pop
jns
mov
or
into
and
xchg
mov
jb
dec
lret
or
filds
cli
arpl
xlat
mov
dec
pop
jmp
arpl
hlt
mov
xchg
icebp
cmp
xchg
mov
stos
mulb
or
inc
pop
push
iret
cli
or
inc
sub
sarl
sbb
dec
add
imul
lds
add
xor
popa
add
pop
cmp
pop
icebp
in
insb
xchg
insb
js
les
pop
add
xor
fxam
popa
andl
push
pop
cmp
dec
fstpt
ret
lods
leave
jecxz
cmpsl
sbb
mov
cli
pushf
sahf
xchg
enter
fcompl
daa
mov
and
mov
inc
mov
mov
sbb
movsl
inc
fst
out
and
mov
sbb
jl
ds
push
aad
scas
mov
dec
xor
push
mov
mov
pop
aaa
cltd
insl
sbb
jnp
xor
xcrypt-ctr
cmpsl
pop
add
push
dec
xchg
pop
in
divb
loop
stos
push
push
inc
lret
int
std
test
mov
mov
stos
fwait
scas
lcall
or
mov
mov
lss
int
jmp
and
mov
dec
or
push
jne
sub
fisubs
ljmp
jmp
inc
and
iret
lret
aam
push
jp
mov
mov
or
lret
push
push
mov
inc
push
mov
mov
xchg
dec
sbb
outsb
fsubrs
push
test
mov
xor
into
gs
loopne
adcl
stos
add
std
and
sahf
test
ljmp
mov
cwtl
sti
je
fsubr
ret
cmpb
inc
adc
cwtl
lahf
in
mov
out
and
mov
xchg
jne
cmpsb
cmpsb
testl
xor
sub
sub
aam
or
pop
mov
and
test
out
cmp
xchg
insb
inc
stos
insb
loope
icebp
sub
fdivrl
test
push
je
js
imul
sbb
sahf
cmp
and
rcrl
mov
jp
push
inc
and
inc
stos
dec
leave
int
dec
mov
adc
mov
adc
test
test
sbb
test
push
mov
loope
repz
stos
sbb
mov
lods
push
movsl
inc
dec
repz
ja
sub
test
sub
movsl
mov
sti
adc
push
hlt
xchg
mov
fs
push
ja
jb
lret
fwait
insl
add
xchg
inc
cltd
push
pop
jmp
xor
js
jge
xchg
mov
pushl
jae
and
lahf
push
cmpsl
adc
lds
subl
cmp
pop
mov
push
ja
ret
fidivl
lcall
fdivr
fsub
sub
pop
jno
push
pop
mov
lods
xchg
xor
push
rcr
mov
std
ljmp
dec
push
aaa
adc
sub
mov
bound
jb
lock
xchg
jbe
sbb
into
lcall
movsl
jne
dec
iret
pop
jo
push
adc
add
sbb
push
outsb
vpmacssdql
adc
outsb
or
lahf
inc
cwtl
das
xor
inc
push
out
lods
cmp
pop
jmp
clc
sub
out
iret
mov
inc
dec
adc
dec
ja
inc
push
push
cmc
int3
xor
test
dec
fiadds
fnstsw
test
mov
add
jne
fbld
out
cmpsl
lds
in
iret
pop
pop
push
gs
sbb
jmp
pusha
ret
ror
push
iret
mov
jl
mov
xchg
and
out
dec
imul
ja
leave
pop
data16
leave
mov
ficoms
cld
shlb
push
repnz
mov
mov
mov
xchg
push
cltd
out
fcomp
pop
and
sbb
jg
jmp
shrl
popa
mov
sbb
out
lock
aam
xchg
cmc
adc
orl
movl
push
jbe
lods
int3
arpl
loope
xor
shlb
imul
je
arpl
cmp
into
xlat
outsb
add
mov
insb
add
shrb
loop
out
lcall
add
rorb
rcll
push
jle
jge
mov
mov
out
pop
rorl
repz
sbb
and
pop
jl
mov
repnz
fs
fstl
pop
repz
pop
loope
jae
adc
subb
and
jae
inc
fdivrl
xor
add
dec
arpl
cmp
stos
or
add
and
sub
rclb
jne
std
addr16
cwtl
xchg
outsb
cmpsb
cmp
gs
popa
cmp
sbb
jle
lret
daa
xchg
push
scas
inc
popa
cmp
mov
jne
outsb
adc
pop
and
movsb
test
shll
or
jne
dec
mov
inc
push
or
push
mov
ret
xchg
out
sbb
jecxz
jnp
xchg
ds
insl
cmp
fsubr
cmp
xchg
mov
push
pop
lods
cmpb
aad
mov
dec
dec
dec
push
pop
dec
pop
jno
mov
jbe
mov
lock
xor
jmp
into
sbb
jl
iret
sub
add
push
lcall
mov
pop
sbb
mov
jnp
adc
loop
data16
test
sahf
lret
cmp
int3
xlat
outsb
shll
jne
push
push
xchg
jle
mov
adc
cmpsl
pop
cltd
mov
push
xor
lahf
push
gs
xor
jae
retw
xchg
in
jno
fidivl
aam
jp
and
xchg
loope
gs
andl
sbb
test
mov
jno
mov
dec
or
idivb
clc
shl
into
xor
pop
and
shlb
or
xchg
xor
lea
decl
notl
push
push
cmpsb
dec
xor
shrl
sbb
ljmp
iret
adc
hlt
lret
mov
icebp
inc
inc
push
std
xchg
add
iret
mov
sbb
mov
xor
sbb
push
lds
int3
pop
inc
enter
adc
mov
arpl
aad
js
jae
daa
mov
jb
mov
or
je
mov
dec
sbb
sbb
sbb
sub
jno
lds
xchg
mov
clc
add
sbb
iret
stc
cmp
inc
xor
dec
popa
dec
lretw
xor
jno
inc
fwait
xor
or
hlt
xchg
cmp
adcb
leavew
xchg
adc
lods
stc
cmpsb
mov
scas
outsl
add
mov
fldenv
rcl
pusha
mov
lods
les
mov
leave
pop
dec
adc
push
jnp
add
push
aaa
mov
pop
cmp
ds
adc
icebp
push
or
out
aam
inc
sub
dec
test
pop
pop
dec
xor
loopne
push
xchg
xorb
imul
xor
addr16
pop
fbstp
in
test
inc
bound
pop
inc
sbb
call
mov
les
int
sub
dec
mov
push
adc
dec
dec
loop
adc
inc
pop
push
icebp
push
fmul
leave
sub
mov
sbb
mov
jecxz
xor
cmp
imul
xchg
add
sbb
xchg
push
jmp
fidivl
and
ret
cld
mov
cmc
sub
dec
sbb
add
daa
pop
out
repnz
xor
dec
dec
sub
call
fcmovne
out
in
dec
ret
lock
add
push
push
arpl
sub
xor
out
cmpsl
inc
fists
scas
add
es
jl
fsubrp
mov
scas
aas
and
rep
out
stos
inc
and
das
lds
fldz
pop
push
sub
xor
adc
sub
out
xchg
xchg
nop
test
xorb
jns
sub
dec
push
idivb
xor
adc
rcrl
xor
fadds
mov
fsubrp
or
xor
cwtl
xor
push
jbe
sti
cmp
push
adc
hlt
push
lock
dec
je
xchg
bound
in
cs
jno
mov
ret
rcrl
leave
loope
xor
movsl
lock
lods
mov
jmp
and
leave
rcl
jo
fildll
mov
pop
shrl
clc
clc
xchg
push
xor
add
push
mov
cmp
xor
xchg
mov
hlt
jae
or
pop
sbb
cmpb
cmpsl
xor
shlb
pop
faddl
xchg
mov
fcmovnb
cmp
mov
cmp
push
testl
inc
ss
lods
fsts
and
lods
stos
mov
lret
pop
call
dec
and
sub
jp
push
jbe
xor
imull
outsl
mov
mov
movsb
sbb
lret
jl
push
out
iret
push
sub
sub
or
cli
movl
mov
inc
rolb
les
mov
xchg
call
inc
pop
ja
jne
jle
inc
adc
mov
xor
sahf
icebp
cmp
and
or
jl
jb
add
stos
rcrb
jmp
addr16
out
addr16
xchg
and
adc
push
hlt
sub
idivb
adc
out
sbb
jo
adc
imul
cmp
jecxz
stc
cmp
sbb
test
out
mov
setnp
inc
ret
imulb
stos
test
mov
insb
shlb
pop
shll
mov
xor
add
mov
or
dec
sbb
int
pop
push
jmp
pop
sti
jle
sub
xchg
aam
mov
inc
add
ljmp
or
shl
dec
test
cld
inc
pop
es
imul
insb
stc
pop
cmp
push
mov
push
test
dec
xchg
jg
fdiv
sahf
fsubl
or
es
pop
ror
add
jnp
vmovhps
ss
test
pusha
xchg
mov
xchg
xchg
add
push
repnz
lcall
and
inc
insb
xchg
sbb
leave
pusha
push
aas
divb
jo
out
mov
pop
sahf
jb
push
pushf
jg
outsl
adc
jmp
stc
leave
in
insl
push
out
sahf
dec
cwtl
sub
mulb
mov
stc
in
inc
popa
arpl
mov
cmpb
jg
imul
push
lock
push
xor
testl
pop
dec
mov
dec
shr
ljmp
push
stc
in
lret
add
jl
sub
adcb
mov
fwait
ss
or
loop
adc
addr16
adc
dec
sub
lods
xchg
aad
shll
out
pushf
stc
andb
pop
outsl
push
rclb
jnp
aaa
pop
push
fs
xchg
adc
outsl
ljmp
imul
movsb
mov
pop
mov
and
jae
stc
pushf
mov
shlb
mov
add
pop
loop
pop
popa
xchg
clc
push
pop
dec
dec
cmpsl
clc
jle
sarl
mov
jae
cmp
or
and
int3
arpl
inc
popa
repz
outsl
inc
or
jae
test
scas
cmc
sbbl
add
aas
je
dec
test
insl
inc
push
and
xchg
jle
jl
jbe
cmc
mov
and
pop
sbb
mov
sub
loopne
ljmp
mov
adc
div
xchg
mov
mov
in
mov
in
aas
mov
popf
and
push
ljmp
jne
loope
pop
mov
mov
cmp
push
dec
adc
or
popa
inc
out
cmp
roll
pop
stc
sbb
dec
sbb
mov
imul
push
aad
adc
decb
lock
xchg
repnz
stos
in
mov
mov
rorl
xchg
push
icebp
mov
mov
mov
int
stos
mov
loope
insl
adc
inc
in
lods
hlt
add
xorl
xor
fistl
cs
push
je
shlb
xchg
sbb
out
dec
call
repz
jp
insb
and
loop
jb
out
lret
pop
dec
mov
stc
rclb
xchg
adc
test
add
mov
mov
insb
movsb
push
call
mov
bound
jle
pusha
aas
inc
pop
arpl
in
data16
mov
mulb
rclb
std
lea
subb
out
cltd
in
outsb
ret
je
xchg
dec
rcl
ss
jae,pn
mov
lods
pop
sub
andb
into
sahf
loopne
aam
outsb
mov
push
mov
jmp
stos
repz
js
cmp
fldt
dec
jo
fs
ficomps
jp
jmp
lock
lret
fstpl
xchg
mov
aas
push
mull
pop
sahf
add
mov
ss
call
popa
push
sub
rolb
push
push
xchg
adc
mov
mov
insl
sub
push
pop
call
push
sbb
jp
mov
jg
and
loopne
lea
fsubrs
mov
inc
jbe
jge
popa
xor
mov
pop
popf
sub
sub
add
aad
je
lods
fimuls
gs
mov
clc
sahf
pop
insl
fnstsw
popf
add
addr16
mov
ljmp
test
xchg
sub
mov
sub
mov
ja
cmp
dec
xlat
leave
repnz
sbb
lock
movsl
xchg
sbb
cmp
add
out
mov
jo
jle
aad
dec
sbb
in
lret
jle
jb
inc
fidivrl
jle
add
leave
push
js
iret
add
push
in
pop
fstpt
add
xchg
mov
mov
loop
test
dec
out
jo
sbb
push
mov
mov
cld
xor
mov
jp
movsb
jl
sub
not
insb
or
test
shll
call
mov
std
pop
shrl
cltd
aad
push
mov
pop
in
push
cltd
and
xor
xchg
cmp
clc
add
fnstcw
push
adcb
add
add
xlat
outsl
rorb
ja
or
xchg
stos
or
and
daa
mov
subl
cltd
test
test
testl
cwtl
stos
xchg
pop
pop
dec
leave
aas
adcl
xchg
test
lods
test
test
icebp
js
sbb
xchg
sub
sbbl
aam
mov
mov
jmp
mov
test
inc
js
in
insb
subb
jp,pt
sbb
jl
and
scas
fidivs
shrb
sbb
lock
mov
sbb
dec
pop
stos
test
mov
adcb
jnp
xor
mov
lcall
inc
or
or
xchg
push
outsl
dec
add
sub
push
mov
sub
fsub
adc
cmpsl
in
in
sahf
inc
lea
xchg
scas
add
jp
inc
in
or
sub
sbb
push
cli
lret
mov
or
stos
adc
or
mov
dec
push
into
jne
cmpsb
movsb
and
push
mov
fbld
xchg
icebp
mov
cmpsb
sub
adc
out
pop
jbe
cmp
icebp
push
cmp
subb
xor
jbe
inc
sub
rcr
gs
fwait
pop
cs
mov
mov
jns
shll
jbe
inc
test
pusha
leave
sub
es
or
loopne
pop
pop
das
or
das
loop
fwait
xchg
push
add
insb
pop
or
fs
adc
mov
bound
adc
test
loope
test
pop
jg
push
adc
push
lods
es
xchg
mov
movsb
hlt
arpl
mov
lea
mov
scas
cmp
pop
inc
jmp
cmpsb
push
add
add
scas
push
stos
xchg
xchg
jmp
cltd
sarb
in
sub
mov
pop
mov
popa
clc
movsb
int
popa
add
lods
or
les
jb
mov
pop
cwtl
stos
xlat
sahf
mov
or
xchg
inc
lcall
and
ss
mov
xchg
out
sar
les
xor
roll
cmp
sub
shll
std
inc
sbb
adc
push
cltd
je
push
rcll
sbb
ret
inc
leave
or
pusha
out
jl
or
push
dec
xchg
cmpsb
push
and
mov
add
jo
inc
loop
mov
sub
dec
dec
fisubs
je
movsl
inc
push
adc
push
stc
adc
sub
xor
in
rcrb
ds
lods
aaa
jns
out
int3
xchg
cmc
orb
jge
and
or
lret
add
std
cmc
nop
je
out
out
xchg
sbb
mov
scas
inc
lods
sar
out
dec
lahf
ss
movsl
hlt
inc
fdivl
jne
in
sub
and
mov
imul
jb
cmpl
mov
sbb
jae
cwtl
das
inc
lock
cli
mov
add
lahf
mov
out
mov
in
mov
ret
sbb
or
add
sbb
pop
xor
sti
lcall
pop
pop
mov
pushl
or
dec
inc
inc
mov
in
aas
arpl
fstpl
or
sahf
jb
mov
in
insb
cmp
xor
repnz
pop
sub
cmp
aad
es
pop
lahf
jbe
fdivp
mov
push
outsb
jae
cmp
xor
xchg
xchg
push
dec
imul
pop
xchg
add
sar
repnz
pusha
hlt
mov
dec
test
insb
sbb
dec
fnstenv
clc
xchg
cmp
xchg
pop
push
imul
and
mov
mov
mov
jbe
sbb
jecxz
add
mov
inc
xor
gs
out
hlt
les
push
adc
jle
or
pop
stos
mov
sub
jne
ret
popf
sti
inc
add
bound
addr16
pop
push
sub
cli
es
jne
sbb
arpl
dec
or
rorb
push
xchg
test
push
sbb
pop
lock
cwtl
shl
mov
fidivrs
dec
mov
mov
stc
adc
in
in
mov
lret
bnd
call
test
mov
adc
sub
xchg
loop
mov
inc
shrb
imul
mov
in
push
jne
xor
xchg
lret
sbb
enter
das
out
popa
mov
stos
loop
stos
inc
js
je
xor
push
xchg
sub
stc
mov
xlat
les
cmc
test
and
ret
inc
rorl
fdivl
inc
sub
loop
or
push
mov
sbb
in
jmp
stc
dec
movsb
mov
xchg
jb
int
mov
mov
fiadds
xchg
cli
xchg
rcrb
loop
in
mov
repnz
sbb
rorl
lret
xlat
hlt
iret
mov
mov
push
lahf
daa
popf
movsb
adc
sbb
ja
mov
xchg
mov
fmuls
stos
push
sub
enter
jne
out
dec
cmc
fucomi
cld
cmp
sti
stc
ret
outsl
shll
jae
sbb
xor
lds
cwtl
dec
dec
xchg
add
mov
mov
mov
pop
fwait
jbe
loope
xor
cltd
dec
inc
es
xchg
jno
lods
aam
lret
nop
lds
pop
xor
cmp
inc
filds
cwtl
inc
rolb
fucomp
xchg
in
pop
fs
inc
fldcw
inc
out
mov
jo
mov
idivl
mov
repnz
rcrl
add
inc
pusha
ss
push
lock
inc
loopne
push
dec
aaa
popa
fists
mov
mov
lods
and
pop
lods
mov
test
pop
rcl
mov
pusha
add
or
lock
inc
loopne
xchg
xchg
shlw
and
add
xor
pop
das
jle,pt
dec
das
pop
loop
dec
lds
or
adc
mov
ds
pop
outsl
add
xor
xchg
pop
scas
enter
das
adc
enter
bnd
push
call
repz
mov
sbb
jo
push
notl
insb
sbbl
inc
adc
mov
lea
push
out
lods
jmp
pushl
shll
xchg
hlt
iret
inc
cmp
mov
mov
sbb
cmp
insb
add
jp
xchg
in
push
addb
aas
and
push
int
sarb
pop
cli
add
cmp
dec
pop
cmp
stc
and
cmpsb
or
mov
jle
and
add
jg
push
nop
dec
lret
adc
dec
ja
and
jecxz
loop
or
cltd
sub
insl
jg
or
inc
add
dec
pop
adc
call
rcl
sub
push
ljmp
es
jo
push
xchg
inc
push
or
popa
xorl
and
add
cmpsb
xchg
movsb
out
mov
cmpsl
cmp
mov
mov
and
js
push
int3
cltd
adc
clc
xchg
cmp
popf
lods
stc
aad
xchg
push
jo
adc
push
movsl
por
pop
xchg
cmp
in
insb
xchg
or
mov
push
push
fdivl
push
push
and
cltd
dec
popf
inc
pop
mov
fdivrs
dec
cmp
sub
and
dec
ja
mov
dec
in
mov
leave
add
mov
mov
cmpsb
rcrl
xorl
push
into
xchg
xchg
add
dec
xchg
xor
pop
in
lock
mov
pop
jb
sub
cld
pop
jl
pop
cmpsb
dec
outsb
add
mov
mov
pop
popa
pop
sub
cmp
cmpsb
push
leave
pop
lcall
js
rclb
imul
dec
and
ljmp
ret
or
aaa
xchg
xchg
les
push
or
and
sbb
fpatan
push
cmp
sti
inc
dec
sbb
pop
cmp
push
pop
mov
mov
and
mov
jbe
addr16
cmp
hlt
xor
jl
loop
cmpsb
push
stc
jle
sub
subb
pop
sub
fcomps
or
and
jp
and
sbb
dec
dec
inc
pop
lock
lret
in
int3
xor
insl
data16
xor
xchg
mov
mov
pop
push
fidivrs
outsb
das
adc
fsubl
mov
dec
and
mov
xor
or
sub
and
add
jle
mov
mov
sub
sbb
ficomps
cmp
ror
xor
mov
cmp
pop
outsb
or
cmc
mov
movsl
mov
fucom
jo
fwait
dec
rolb
sbb
or
scas
mov
inc
push
pop
repnz
push
xor
cltd
add
inc
mov
adc
jmp
scas
add
inc
push
xor
lea
pop
loop
addl
dec
movsl
out
sbb
sub
push
lds
ss
out
lea
add
dec
fimull
pop
xchg
push
fcoms
dec
hlt
xchg
pop
test
fiadds
cli
mov
or
iret
outsb
out
cmp
add
je
popf
idivl
aam
or
fs
xchg
cs
outsb
mov
js
inc
mov
xor
test
enter
lock
mov
adc
mov
add
xor
or
jg
xor
cwtl
sub
lcall
inc
repnz
mov
in
push
cmpsl
push
sbb
lock
add
incb
push
mov
xchg
and
lret
loope
clc
or
lods
jp
addr16
mov
rclb
in
nop
fldt
xchg
sbb
mov
cmc
mov
test
sti
dec
cmp
jmp
xor
adc
xor
jbe
sarb
mov
sbb
add
bound
clc
push
inc
fiadds
movups
mov
rorb
stc
mov
test
jmp
sub
iret
movsb
fists
sub
jge
sbb
push
ds
icebp
mov
addr16
or
jnp
lods
scas
mov
sub
pushf
pop
sti
repz
ret
cmp
fildll
enter
pop
cli
cmp
xchg
dec
scas
adcl
scas
fidivrl
push
stos
cmc
shll
xchg
add
loope
rolb
and
jno
cs
mov
push
sub
test
scas
xchg
ficoms
ss
decl
xor
out
add
add
pop
jae
sub
xor
sub
mov
inc
pop
add
mov
pop
and
shr
jns
and
jne
cltd
mov
jne
shlb
lret
push
jne
dec
dec
cmp
frstor
mov
ss
bound
pop
enter
cmpl
shrl
push
fsubrp
and
fld
daa
lock
fwait
jo
lock
stc
repnz
add
sbbl
cmp
clc
in
jb
bound
enter
ficoms
and
out
jne
and
test
mov
push
mov
call
sbb
in
xchg
pop
adc
out
xor
bound
fidivs
xor
out
inc
loop
enter
inc
inc
cmpb
cld
xchg
loope
test
mov
jge
mov
js
adc
or
jmp
fstpl
jle
add
cli
pop
jo
jo
mov
fwait
adcb
dec
or
jae
and
das
stos
stos
jmp
dec
push
divl
mov
add
loope
or
pslld
adc
sub
xchg
mov
mov
jo
popf
movsl
dec
fwait
scas
jle
in
lods
mov
dec
loop
ds
test
dec
imul
add
hlt
mov
jmp
dec
mov
cmp
test
sub
in
or
mov
fidivrl
push
mov
or
movsl
in
xor
in
sub
mov
jmp
mov
jle
scas
sti
fwait
xorl
add
icebp
pop
mov
in
jns
cld
and
sti
mov
stos
adc
sub
add
addb
sub
repz
sbbb
lret
adc
dec
xchg
inc
add
ret
sbb
mov
adc
cmp
sub
jecxz
mov
cs
loope
push
ja,pn
pop
cmp
jl
or
pushf
dec
cmp
mov
and
adc
inc
lcall
in
test
sbb
fnstsw
js
int
insl
lods
mov
xor
test
cmovs
mov
push
mov
mov
je
fdivl
inc
gs
dec
jmp
dec
dec
sahf
jecxz
rcrb
mov
jnp
or
and
mov
jmp
inc
and
loope
mov
xor
push
shl
stos
nop
cli
fucomi
ss
fdivrl
mov
lahf
sbb
and
jmp
rclb
movsl
fnstcw
xchg
das
mov
inc
iret
cmp
push
sub
dec
xor
and
roll
inc
xor
inc
in
inc
xchg
iret
mov
sub
mov
pop
lcall
xor
femms
sbb
test
clc
outsb
cmp
mov
adc
and
or
inc
sbb
sbb
inc
bound
pop
dec
inc
outsb
movsl
and
notl
test
js
inc
stos
movsl
inc
rorb
mov
pop
je
add
imull
cmp
or
adc
mov
nop
mov
mov
outsl
cmp
fs
sbb
and
fistl
call
dec
jnp
scas
inc
fbstp
sbb
mov
pop
sbb
pop
jle
push
lods
insb
add
or
inc
mov
jb
jne
outsb
jle
bound
lock
pop
cmp
movsl
imul
dec
insl
mov
test
dec
sbb
fidivrl
mov
mov
fimuls
arpl
jg
aaa
ret
sbb
jecxz
or
inc
cmp
incb
rcrl
xchg
mov
into
push
cltd
dec
es
outsl
jp
pop
dec
sti
pop
mov
xorl
aam
inc
or
xlat
icebp
mov
add
mov
mov
popf
cmp
scas
loope
lcall
ret
out
jge
mov
dec
or
jge
lea
add
fadds
and
enter
stos
mov
cmp
mov
loope
les
push
push
das
inc
nop
pushl
and
or
mov
lods
inc
out
cld
dec
loop
bswap
dec
dec
pop
cmp
mov
icebp
xchg
pop
sub
int
mov
or
fsts
pop
jge
int
mov
pop
gs
or
cmc
bswap
fnstenv
mov
dec
fisubs
lock
xchg
cwtl
or
xlat
gs
push
mov
push
aad
mov
sbb
pop
cmp
lds
inc
dec
icebp
mov
ljmp
jae
xchg
inc
nop
mov
sub
movsb
inc
mov
out
sahf
lahf
ss
in
mov
mov
sub
arpl
test
lea
mov
inc
lahf
shll
iretw
xchg
enter
mov
test
jbe
mov
adc
inc
dec
test
popa
add
push
mov
push
inc
mov
dec
movsl
push
decb
pusha
add
loope
cmc
adc
fildll
adc
adc
push
xor
inc
mov
sahf
sub
xlat
repz
xor
daa
cld
mov
pusha
mov
lret
pop
jne
out
mov
in
cmp
sbb
ds
out
xlat
sub
sar
jbe
lcall
pop
test
aad
shlb
xrelease
call
sub
sbb
add
fmuls
ss
test
out
push
daa
add
icebp
cld
xor
adc
lcall
and
imul
jecxz
fcomps
sub
inc
xchg
push
fiadds
fucomi
pop
neg
ja
add
notl
ret
adc
pop
push
pop
mov
jbe
jne
in
inc
fstps
imul
outsb
xor
daa
and
pop
xchg
add
dec
push
aad
das
jp
cmp
sub
dec
sbb
add
xorb
daa
icebp
jae
int
aam
pop
inc
loop
dec
cmp
and
pop
cmc
cmp
cmp
icebp
mov
pop
aam
add
adc
xlat
insl
cs
inc
sbb
inc
pop
jne
mov
jl
ja
stos
loope
add
xor
in
pop
push
dec
rolb
data16
fcoms
out
test
ret
aas
or
jl
nop
daa
lret
sahf
xlat
outsb
mov
inc
pop
lods
repz
xchg
mov
mov
jmp
notl
scas
xor
movsl
fbld
aad
in
fsubp
arpl
mov
xchg
mov
lret
jb
xor
dec
inc
adc
ja
jmp
iret
aam
xor
scas
stc
mov
jmp
es
xor
pop
sub
inc
jp
negl
add
mov
outsb
inc
fs
and
aad
mov
imul
gs
imul
push
adc
jbe
leave
outsl
or
aaa
inc
sub
adc
add
adcl
ret
aam
loopne
xor
or
cmpsl
or
pop
and
push
cld
mov
sub
js
or
add
sbb
imul
push
adc
jbe
lret
xchg
pop
mov
aas
pop
gs
fstl
push
and
cltd
in
repz
sub
inc
aam
fbstp
imul
int
jb
mov
inc
data16
jno
stos
xchg
fucomp
pop
or
inc
inc
pop
jbe
mov
mull
push
push
push
dec
data16
std
enter
mov
gs
adc
movlps
mov
jg
mov
pop
mov
int
rcrl
jb
pop
movsl
jbe
push
jp
icebp
cmp
ret
callw
dec
dec
inc
aas
dec
fnstsw
loop
dec
addb
cmpsb
lock
pop
scas
mov
dec
fstpt
mov
mov
mov
imul
pop
jne
or
lret
lret
fs
daa
mov
sbb
das
jp
icebp
pushf
popa
dec
inc
mov
jge
jno
lds
push
jmp
push
daa
add
lods
out
ja
mov
cmp
xchg
jg
inc
or
jae
popf
movsb
fwait
shlb
in
mov
xchg
int
dec
icebp
cmp
inc
fidivs
push
adc
les
push
mov
pop
add
push
push
cmc
mov
movsb
jp
dec
pop
shrb
sub
lret
inc
add
repnz
fists
stc
sbb
inc
mov
jb
ret
fcomip
fwait
jecxz
into
mov
mov
push
stc
jp
cli
xchg
jmp
dec
dec
sbb
lahf
pop
sub
das
add
sbb
loop
mov
pop
mov
mov
ret
jmp
push
call
shlb
fdivs
movsl
jo
aam
testl
sub
push
iret
push
cmp
or
and
inc
mov
mov
cmp
test
addb
jbe
adcb
add
addl
icebp
cmpsl
lods
jo
sbb
jo
mov
js
adc
jmp
mull
adc
push
push
or
test
push
xchg
sbb
or
shrb
jp
pusha
das
dec
dec
scas
fnstsw
mov
mov
inc
mov
daa
inc
fwait
test
pop
mov
lcall
jp
inc
lods
movsl
xor
xchg
push
xor
vpunpcklqdq
outsl
in
nop
dec
ret
mov
aas
sbb
aas
stc
jno
ret
pop
jmp
add
pop
sub
call
inc
mov
dec
pop
out
jno
inc
pushf
scas
jno
les
mov
pop
xchg
sub
push
cmp
iret
sub
jbe
iret
pop
add
jbe
sub
add
frstor
xchg
in
jecxz
insb
jl
sarl
shl
adc
add
into
fs
push
mov
leave
mov
aas
adc
lds
adc
dec
clc
xchg
aam
jmp
out
or
cwtl
or
pop
sahf
sbb
outsb
sbb
jno
bound
std
xchg
loope
and
cmp
cwtl
repnz
sbb
mov
jecxz
clc
orb
leave
out
mov
mov
aad
or
icebp
insb
popf
fadds
ror
ret
xlat
pop
push
sbb
or
jno
mov
jl
fs
addb
icebp
jb
sub
fwait
xor
xor
adc
les
popf
jo
decb
cmp
lea
xor
pop
xchg
inc
add
sub
add
jbe
mov
inc
xchg
cmp
xor
or
mov
jnp
pop
xor
xor
xor
xor
ss
fwait
mov
jl
leave
stos
lock
sbb
and
imul
adc
xor
mov
pop
in
cmp
push
out
jle
and
pusha
xchg
aas
fwait
inc
stos
cmp
push
mov
cld
insb
cmp
shlb
add
sub
inc
lahf
lcall
pop
ret
cmpsb
ret
je
aas
ljmp
add
and
push
adc
dec
and
ja
lret
popa
sbb
enter
pop
cmpsb
pop
das
call
les
or
push
or
inc
inc
dec
jp
mov
pop
mov
das
es
call
pop
std
outsl
push
popf
jb
inc
rorb
data16
xor
data16
inc
ficoms
jmp
mov
fisubrs
loope
inc
leave
ljmp
and
nop
or
adc
fucomip
mov
adc
xchg
inc
lock
adc
loope
int
in
mov
fs
stos
mov
mov
sarl
ret
jae
mov
das
movsb
mov
shl
xor
and
jg
adc
cmp
jns
data16
test
xchg
icebp
pop
lods
sbb
cmp
js,pt
inc
pop
push
sub
push
rolb
sti
insl
enter
lahf
lods
mov
call
ja
push
pusha
jmp
sbb
clc
loope
sub
pop
lret
test
mov
daa
push
jmp
aaa
movsl
lret
stc
std
ret
hlt
outsb
nop
jnp
mov
lcall
push
pusha
shlb
out
hlt
dec
stc
mov
movsb
pop
cmp
cmpb
xlat
jmp
mov
xchg
repnz
xor
aam
decb
dec
fimull
jg
mov
pop
outsl
shll
pop
jo
pop
ss
dec
mov
pop
mov
adc
jecxz
cld
std
or
lahf
sub
fldcw
mov
inc
mov
arpl
xor
lds
sub
insb
in
adc
jbe
jge
js
push
ljmp
out
inc
or
add
les
and
iret
mov
ja
jmp
push
sahf
bndmov
xor
or
xchg
mov
sub
add
outsb
cmc
lods
sub
push
iret
xchg
inc
shll
inc
fmulp
xchg
lret
lds
lods
rcrl
mov
jle
push
aas
cmp
in
lock
push
repz
or
mov
out
pop
mov
jg
dec
loop
push
jns
mov
call
dec
addr16
popa
pop
xor
dec
cmp
pushf
dec
es
bound
lods
push
lock
and
mov
jmp
or
pop
adc
sub
mov
pop
adc
jmp
and
and
xor
movsl
mov
xchg
mov
pop
sbb
sbb
gs
stos
ljmp
mov
es
clc
fdivl
mov
add
mov
rolb
and
lea
xchg
loopne
mov
xor
fsubrl
pop
sbb
subb
shlb
push
pop
mov
fs
fisttpll
cwtl
lock
xchg
and
mov
push
pop
sarb
ret
adc
hlt
push
inc
call
cmp
pop
fbld
lret
std
pop
add
push
push
inc
adc
insb
data16
xor
ret
repz
xchg
test
xchg
sbb
repz
lcall
xor
dec
cmp
dec
mov
push
mov
dec
push
jp
cltd
ds
aaa
vaddsd
inc
inc
or
sub
or
inc
push
or
dec
aaa
cmp
hlt
xchg
sbb
lds
lret
jo
xor
push
ljmp
cmpsl
and
sti
push
cmp
xlat
aaa
add
xor
imul
js
xchg
fs
int
xor
pop
lahf
sbb
cltd
pop
jne
jb
in
fsubl
aad
jns
sarb
mov
out
dec
shll
pop
popa
idivl
in
inc
mov
cmp
std
mov
mov
jns
sub
flds
xchg
call
mov
xchg
data16
mov
andl
pop
idivb
jmp
xor
int
dec
iret
and
jle
lret
jg
push
cmpsl
mov
cmp
cmp
mov
cmpsb
add
jmp
divl
test
stc
outsb
mov
insl
mov
cmp
add
jg
ds
mov
les
jg
pop
call
cmp
gs
pop
jo,pn
cltd
add
and
andl
and
pop
out
xchg
mov
mov
add
push
inc
xlat
aas
lcall
rorb
and
dec
movsb
jecxz
enter
outsb
xor
xchg
inc
mov
push
dec
and
daa
in
test
fs
push
jp
mov
mov
mov
sbb
pop
aas
arpl
jne
js
push
enter
and
xchg
mov
inc
jnp
mov
movsl
stos
mov
push
cwtl
mov
ret
sbbb
fst
cmp
add
jns
xlat
test
inc
inc
pusha
sbbb
xchg
cmpl
nop
pop
nop
cmc
add
repz
push
ja
fucom
shrl
jne
xor
loope
repnz
sbb
mov
dec
sub
dec
shll
and
cltd
add
je
aas
cmpsb
addl
lahf
cmp
shrb
popf
fbld
or
dec
mov
pop
out
aas
test
and
mov
xchg
data16
popa
adc
cmp
mov
and
pop
imul
inc
in
jg
adc
mov
xor
nop
testl
mov
aas
sub
xor
pop
in
or
sbb
out
inc
and
mov
ret
outsb
lods
mov
mov
pop
cmp
push
mov
and
mov
push
sub
lods
inc
pop
or
outsb
jmp
movsl
mov
fiaddl
int
jmp
aaa
push
sbb
fimull
movsl
mov
daa
xor
sub
xchg
mov
or
cmc
jg
aas
mov
loop
pop
in
add
lea
andb
in
int3
lahf
test
mov
mov
sbb
iret
jle
call
add
or
ja
sarb
imul
test
jp
or
nop
mov
jbe
movsb
pop
idivb
add
imul
shrl
add
or
movsl
insl
cmc
fsubs
ret
sub
test
pop
pop
popf
dec
mov
jcxz
ja
comiss
stos
es
ret
repz
lret
lret
inc
mov
mov
dec
popa
add
movsb
dec
sbb
sub
mov
call
je
test
ret
out
xchg
sub
push
shll
push
mov
imul
jmp
mov
fucom
int3
mov
push
notl
push
in
xor
stos
jmp
adc
pop
mov
test
hlt
push
lret
adc
sbb
inc
cmpsl
jo
or
in
outsl
lds
inc
vcvtsi2sdl
pop
test
nop
outsl
imul
inc
ljmp
jbe
xorl
pop
ret
fstl
notl
rcr
xchg
arpl
pop
push
popf
or
call
mov
cmpsl
fwait
or
jge
ret
scas
mov
pop
mov
cmp
fdivrs
jo
icebp
mov
idivb
mov
add
iret
add
xorb
pop
adc
pop
mov
dec
jg
pop
mov
xchg
mov
stos
loop
add
or
loop
add
js
iret
and
push
add
scas
out
test
sbb
mov
xor
push
xor
and
in
mov
xor
cmp
int
inc
pop
test
pop
lret
in
mov
push
mov
nop
lea
adc
lret
mov
ds
cmp
push
push
sbb
js
dec
jl
popa
movsl
arpl
mov
cs
mov
sbb
je
stos
hlt
cmp
push
jb
adc
fildl
dec
sbb
lods
stos
pop
lods
push
imulb
lock
sub
enter
es
call
sub
push
sbb
lods
xchg
les
sub
test
inc
popf
jae
sarb
jge
xlat
push
cmp
and
pop
aad
dec
jnp
mov
imul
cmpl
sub
movsl
pusha
fmull
outsl
js
push
loopne
imul
test
mov
in
js
test
and
mov
pop
cltd
jae
inc
jnp
xchg
jecxz
jae
fyl2x
sbb
adc
clc
sub
aaa
push
xchg
adc
or
test
xor
add
clc
jg
movsb
cmpsl
mov
xchg
into
jecxz
inc
ret
jb
cltd
mov
xchg
adc
ret
test
jp
ret
stos
div
stos
push
sbbl
and
jae
popf
sbb
xor
ds
outsl
push
jl
mov
pop
das
in
in
dec
lds
clc
add
mov
and
in
loope
adc
inc
xor
out
sti
push
push
cmp
cmovno
sub
stos
inc
sti
xchg
or
repnz
lock
and
add
inc
shr
stos
sub
cmp
mov
mov
mov
call
mov
jp
fs
int3
pop
stos
pop
xor
push
jmp
sbb
push
and
jl
sarb
repnz
in
adcl
or
sbb
adc
mov
fistpll
imul
jnp
adc
shl
add
xchg
mull
mov
nop
clc
mulb
lods
ljmp
lds
iret
push
out
outsb
int
or
cmc
pop
sbb
stc
adc
dec
sbb
lds
rol
lret
mov
sub
pop
mov
stc
ljmp
dec
pop
and
adc
loope
push
es
mov
out
popa
pop
mov
shl
sub
ds
cmp
pop
test
mulb
das
or
fwait
sub
push
out
inc
loop
test
mov
dec
mov
or
test
fists
int
cmp
sub
inc
mov
sbb
dec
cwtl
dec
sbb
imul
je
das
ljmp
cwtl
mov
pop
sbb
mov
mov
iret
sbb
loop
enter
pop
pop
fdivs
jmp
xchg
mov
fcomps
sbb
pop
andl
cli
mov
sbb
std
cli
pop
lahf
mov
ret
cmp
insl
inc
lcall
jne
lret
cld
pop
dec
fcompl
mov
inc
cld
ljmp
rolb
push
push
mov
inc
jecxz
loopne
sub
mov
ja
cld
push
adcb
push
push
test
xor
orb
mov
pusha
dec
xor
jns
call
pop
leave
popf
sub
int
jbe
stc
daa
dec
xchg
xchg
mov
fs
lods
fidivl
sbb
pop
xchg
pop
jbe
out
add
stos
call
jp
jae
ds
sbb
out
push
andl
pop
and
aad
add
xchg
pop
fstp
movaps
push
pop
add
jp
pop
pop
add
aaa
into
imul
in
cmp
imul
iret
jae
sub
cmp
bound
fwait
rclb
inc
mov
push
sub
test
pop
lahf
ss
xchg
mov
lahf
ss
lret
inc
inc
push
mov
jmp
mov
jmp
mov
scas
test
sbb
aad
xchg
xchg
inc
outsb
inc
decb
mov
sbb
jne
adc
jmp
nop
ss
enter
dec
jg
push
or
mov
popa
movsl
adc
xor
rol
loope
cmp
add
push
fidivl
jle
in
add
sarl
jo
jmp
add
xchg
iret
js
adc
ja
and
pop
fs
lock
mov
filds
ljmp
mov
jg
lods
add
repnz
inc
push
add
sbb
imul
mov
sub
sub
pop
adc
cmp
bound
pusha
pop
mov
hlt
dec
or
sbb
or
mov
jb
mov
and
adc
movsl
xor
test
sub
sbbl
mov
leave
jmp
dec
leave
pushf
mov
push
xor
pop
movsb
add
test
fdivs
pop
sbb
addb
arpl
xlat
ljmp
es
push
xchg
insl
pop
sub
add
hlt
out
test
js
popa
fisttpll
xor
sub
arpl
mov
xchg
inc
cmp
lea
mov
cmp
cmp
cmp
repnz
js
sub
dec
mov
movsl
adc
inc
aam
mov
xor
xchg
daa
sbb
fwait
popa
aad
mov
popl
or
ret
push
cltd
test
fisubs
mov
xchg
and
rcrb
test
xor
sbb
loop
fisubrl
lods
mov
xchg
cs
and
cmpsb
loope
bound
ror
push
mov
push
push
jne
fadd
insb
dec
cmp
rcll
pushf
in
loopne
sub
insl
ret
xor
mov
jne
push
xor
dec
pushf
push
aaa
mov
sub
pop
pop
lock
fisubrl
mov
aad
imul
mov
mov
ja
cmp
repnz
or
nop
xchg
pop
dec
add
rcl
adc
clc
mov
pop
jg
xchg
and
push
add
inc
ds
xchg
test
lcall
jae
andb
mov
sahf
push
mov
fldcw
test
dec
fstcw
fucomip
mov
push
movsl
and
fdiv
jno
xchg
enter
enter
and
sub
sub
sbb
or
jo
sub
cmp
imul
mov
ss
pop
inc
xchg
add
aas
push
andb
adc
sahf
push
xor
add
mulb
scas
lahf
xlat
orb
jl
aas
nop
sub
xlat
scas
rorl
mov
clc
sub
jle
sbb
fwait
cmpsl
sbb
pop
mov
les
jg
mov
jnp
loop
cmp
and
cmpsb
dec
mov
jbe
or
dec
fbld
rorb
xchg
int
mov
ljmp
xor
dec
push
lods
rorb
shr
jmp
sbb
nop
jne
ret
cld
xchg
xor
dec
mov
inc
and
aad
mov
pusha
pop
lods
sbb
adc
shll
cmp
mov
ja
jg
xchg
mov
out
add
pop
and
mov
xchg
sbb
adc
jb
jnp
rep
in
stc
xchg
inc
dec
sbb
push
sarl
and
sub
dec
add
data16
bound
in
adc
mov
test
push
fildl
popf
add
stos
bound
add
mov
iret
fucomi
xlat
mov
push
pop
sbb
sahf
in
and
popa
movsl
adc
cmpsb
test
out
subl
push
jne
adc
out
cltd
outsb
xchg
ljmp
and
cmpsb
imul
dec
pop
sbb
jg
repnz
sub
jl
xor
cmp
xor
ret
stos
shl
cmpsb
leave
pop
pusha
sbb
ret
shll
dec
shl
jns
dec
cltd
pop
mov
lret
sbb
sbb
xor
mov
daa
and
std
push
loop
or
inc
cltd
sub
shrb
int3
leavew
fsts
rclb
iret
mov
fsubl
fs
repnz
adc
lds
pop
loop
addr16
pop
and
fstps
icebp
xchg
and
and
test
mov
sahf
jne
dec
das
mov
loop
jbe
mov
arpl
dec
cld
inc
ja
outsl
out
pop
push
or
sub
loopne
cs
dec
lcall
sub
inc
mov
jae
mov
inc
xchg
in
push
sub
sbb
ja
repz
mov
ljmp
fs
lret
sbb
movsl
push
call
xor
aaa
cmp
pop
push
sbb
daa
enter
mov
insb
aam
and
cmc
aam
arpl
mov
out
cmp
cmp
adc
or
ss
push
stos
xlat
push
push
movsl
test
sbb
insl
sahf
push
add
and
mov
pop
inc
sbb
add
xor
das
mov
pcmpeqd
push
popf
xor
sbb
out
push
repnz
xchg
adc
fs
xchg
test
add
pop
lock
and
pop
lock
enter
enter
sub
ret
adc
rolb
jb
jl
insb
loop
dec
rol
push
jne,pt
out
xor
mov
mov
push
fmull
in
and
push
pop
jecxz
ljmp
xor
dec
cmp
jp
les
adc
xchg
mov
cmp
or
mov
bnd
lods
cmpl
ljmp
das
mov
push
jo
loope
in
jp
pop
sub
imul
inc
stos
mov
dec
mov
in
out
mov
mov
iret
loop
sub
into
xchg
sbb
sbb
inc
mov
jno
shlb
lret
movsl
mov
sbb
pop
andb
pop
imul
sub
nop
int3
xchg
std
or
jmp
int3
pop
lea
popf
pop
in
sub
dec
int
jle
fnstenv
cwtl
lahf
jmp
sbb
in
out
push
out
adc
jbe
add
sbb
cmpsl
ljmp
cmp
adc
mov
shr
incb
loopne
pop
xchg
inc
aas
push
xorl
cltd
xor
xchg
or
out
add
or
cltd
and
xchg
cmp
mov
or
data16
daa
adc
sub
add
mov
sub
push
push
insl
nop
mov
out
cmp
and
inc
mov
in
adc
xchg
inc
js
jle
arpl
leave
dec
jmp
sub
cmpsl
out
xchg
jmp
aad
pop
jecxz
out
adc
fwait
mov
je
shlb
or
adc
xorb
sbb
cwtl
pop
filds
mov
jecxz
ret
add
lahf
gs
sub
push
cltd
inc
push
or
insb
and
out
jle
ja
icebp
test
dec
icebp
pushf
lret
adc
add
sti
call
push
movsb
and
cmc
adc
or
mov
in
or
or
xchg
add
or
loop
jne
test
add
push
rclb
stos
inc
into
adc
mov
test
aam
cmp
mov
rorl
gs
xor
inc
and
cmpsb
push
pop
push
decb
popa
adc
insb
leave
popf
sub
mov
out
inc
clc
adc
inc
fld
aam
fisubrl
dec
push
popa
inc
fs
xor
in
mov
out
or
mov
fnstsw
lret
je
dec
rolw
test
jbe
ss
addr16
pushf
mov
xchg
out
xor
stos
dec
xlat
pushf
arpl
xlat
mov
ret
repz
test
jp
lret
adc
push
leave
aad
dec
mov
leave
xchg
ss
jne
mov
jae
imul
adc
or
in
shl
sub
sub
jae
imul
mov
mov
mov
fsts
in
dec
fwait
dec
in
divb
push
sbb
pop
xchg
inc
fsubl
test
ja
fidivs
adc
aam
cmp
sub
push
ret
pop
loopne
adc
fadds
adc
push
cwtl
repz
andl
jp
cmpsb
mov
iret
test
andb
insl
aam
mov
pop
out
ret
bound
xchg
jnp
mov
in
dec
xchg
mov
int3
cmp
adc
insl
sub
xor
mov
sub
push
jae
faddl
mov
adc
cmp
in
sub
fstl
sub
inc
pop
movsb
xchg
add
pop
stos
or
icebp
jp
jp
push
pushf
js
inc
xor
scas
in
insl
add
int
cmp
pop
in
add
repnz
fldt
mov
jbe
and
jg
lods
das
xor
mov
out
jle
negl
mov
xchg
jge
rolb
lret
mov
sti
into
push
dec
xchg
inc
sti
sub
mov
dec
pushf
xor
arpl
add
cmp
fldcw
fabs
ja
pop
addr16
in
adc
je
std
insl
mul
imul
inc
add
jmp
ss
lds
pushf
movsl
cltd
sbb
mulb
mov
mov
into
xor
push
mov
jg
mov
in
mov
adc
daa
outsl
loop
leave
es
fidivrs
bound
subl
adc
data16
pop
cmp
inc
in
dec
out
and
scas
sub
sbb
shlb
jge
dec
ja
cmp
rcrb
stos
lds
inc
pop
fimull
pop
cmp
sub
lret
lods
sub
sub
adcl
inc
lret
sub
mov
jp
pop
pop
outsb
cmp
dec
fiaddl
shrl
lods
ret
ret
into
out
int
stc
lods
ja
inc
aaa
jae
jbe
mov
imul
call
inc
cmpsl
outsl
jnp
cmp
cmpsl
push
mov
mov
cmpsl
popf
rcrb
call
outsl
cltd
xor
sbb
out
push
cmp
or
lods
test
popa
mov
int
add
imul
pop
or
xor
fsts
add
cmp
std
jno
call
idivl
cwtl
das
loop
mov
dec
mov
push
repnz
out
push
pop
scas
jno
xor
push
lock
out
and
sub
inc
jne
lea
shll
cs
inc
jg
pop
sub
aad
cmpsb
cli
sbb
inc
dec
sbb
pinsrw
dec
or
gs
sarb
gs
jnp
jnp
jnp
mov
xor
adc
js
je
subb
push
aas
xchg
icebp
adcb
pop
outsl
les
sub
in
jge
and
mov
ljmp
sub
scas
ljmp
sub
fnstenv
out
daa
stos
mulb
lods
int3
cmpsb
cmp
mov
adc
test
daa
cmp
sub
int
inc
ret
subl
loopne
xlat
outsb
stc
xchg
jge
jmp
and
cmp
sub
aam
lods
inc
or
lcall
mov
dec
in
pop
in
add
mov
pop
add
push
add
repz
cmc
mov
je
mov
inc
enter
cmp
mov
sub
adc
addr16
sbb
cmp
in
mov
stc
nop
inc
mov
jecxz
xchg
mov
rcrb
cmp
sahf
mov
sti
enter
xchg
fidivrl
fcoml
sub
xor
stc
xlat
das
push
jb
clc
sbbl
or
fidivl
jmp
add
js
les
pop
ljmp
or
or
adc
inc
pop
and
lret
pop
xchg
repnz
mov
add
and
xchg
bswap
loopne
aas
jae
xor
adc
data16
mov
mov
dec
jmp
sub
addr16
push
dec
xor
pop
dec
cmp
jecxz
xchg
add
sub
test
fcmovnb
ficomps
outsb
inc
jne
ja
pop
imul
lods
mov
out
dec
mov
lods
push
push
xor
and
mov
lock
mov
push
idivl
sub
jo
and
dec
sti
sbb
hlt
cmpsb
mov
dec
xchg
jmp
inc
shlb
fbld
stos
leave
pusha
clc
jnp
sub
pop
or
aad
lods
mov
pop
xor
lret
or
mov
ficomps
mov
daa
out
scas
dec
stc
sub
push
gs
dec
dec
inc
mov
pushf
out
mov
jbe
mov
sub
pop
adc
xchg
insl
mov
fstp
inc
mov
out
cmc
cmp
pop
pop
ret
adc
or
dec
mov
mov
xchg
push
outsl
inc
add
es
cmp
inc
lods
decb
ret
pop
insb
mov
sub
aad
or
cpuid
rcrl
lock
ljmp
popa
dec
xor
roll
sub
test
lock
aaa
push
ljmp
scas
out
or
pusha
sti
std
inc
arpl
mov
inc
push
int3
pusha
inc
lea
push
stos
shrb
jp
ss
addb
xchg
pop
push
sub
ds
cli
xchg
sub
adc
sbb
jae
lds
pop
lcall
xlat
lret
push
cwtl
mov
push
or
and
jae
test
popa
xchg
push
int3
ljmp
push
cmp
jo
das
out
xor
adcb
or
stos
sub
out
sahf
ret
pop
push
cld
popa
aaa
sti
push
lock
xchg
add
sbb
inc
in
sub
mov
in
bound
xlat
xchg
inc
ds
fcompl
inc
ret
sbb
iret
dec
cwtl
insb
stc
lock
cli
gs
pop
lret
pop
push
test
jp
repnz
fcmovbe
jbe
adc
cmp
and
dec
mov
or
outsl
shrb
imul
fmull
test
jle
fwait
lcall
and
mov
cmpsb
mov
cwtl
aas
inc
daa
idiv
pusha
pop
cmpsl
rcrb
stos
cmp
adc
fidivs
ja
insl
add
xor
data16
inc
push
in
shrl
insl
mov
dec
fdivrs
pop
hlt
push
push
push
fisubl
scas
aas
add
sub
popl
psraw
push
sahf
or
fwait
pushf
pusha
inc
sub
pop
mov
clc
lret
fildll
mov
inc
mov
cmp
or
popa
add
fsubrs
pop
mov
aam
xorl
mov
mov
popa
clc
sbb
inc
insb
ror
ffreep
lods
sbb
push
in
mov
adc
xchg
lret
pusha
rcll
pushf
xor
mov
fs
ret
iret
adc
inc
fmull
xchg
into
inc
cs
fdiv
xor
inc
sbb
pop
mov
sbb
imul
mov
jns
push
shlb
fsub
pop
cmp
inc
outsb
std
xor
dec
jb
pop
andl
stos
stc
mov
outsb
sbb
xlat
xor
xchg
add
jno
or
ret
fxsave
push
scas
movsl
cmp
roll
add
popa
adc
cli
push
popf
push
dec
mov
sbb
mov
aad
decl
pop
stc
fs
pusha
sahf
push
decb
test
push
decl
inc
push
sarb
jmp
lcall
mov
decl
and
data16
push
and
cwtl
pop
call
lods
ljmp
andb
dec
in
mov
imul
lret
inc
inc
pusha
addl
pop
imul
mov
pop
inc
inc
jne
lds
push
stos
cmp
testl
scas
add
shrb
mov
cmp
imul
mov
in
push
repz
mov
dec
and
in
mov
ja
xchg
addr16
push
enter
lods
push
in
fisttps
pop
rolb
je
push
dec
popa
xor
repz
stos
test
mov
mov
pop
or
xchg
add
push
aaa
pusha
push
mov
in
clc
push
sbbb
jg
and
fsubrl
mov
lret
int3
out
dec
pop
push
enter
popf
or
push
or
jb
cmp
out
pusha
bound
lods
xchg
mov
mov
and
imulb
dec
enter
andb
push
lahf
mov
jo
cmp
sar
cwtl
andl
adc
sub
popf
shl
lcall
pop
mov
nop
xchg
mov
pop
mov
ja
cmp
inc
lods
pop
jge
aaa
jb
adc
add
add
bound
xchg
and
jo
int3
xchg
jmp
stos
nop
jne
or
out
sub
sbb
pushl
imul
mov
rorl
and
outsb
pop
lea
mov
fsubr
xchg
dec
loopne
lahf
mov
loopne
pop
adc
and
fnstsw
inc
test
and
lcall
test
repz
clc
mov
adc
das
jmp
mov
jl
or
pop
shr
sbb
mov
sbb
sarl
or
cs
pusha
lahf
nop
mov
dec
outsb
ret
xchg
pop
xchg
adc
inc
rorb
cmp
aas
mov
insb
add
xchg
sub
dec
xchg
imul
nop
int3
sub
pop
dec
fs
jo
add
mov
cmp
imul
lock
div
dec
scas
inc
or
jl
xchg
sub
lea
sarl
out
loope
cmp
pop
icebp
nop
call
notb
dec
iret
or
call
cltd
outsb
ss
lock
xchg
ljmp
xor
imul
lret
repz
in
imul
jmp
xchg
add
pop
neg
js
or
ret
push
mov
iret
cmpsb
in
mov
sub
pop
and
adc
jecxz
sub
lock
imul
sbb
mov
sbb
fldl
add
adc
cli
dec
in
js
insl
and
iret
and
or
add
fcmovnb
popa
sub
lar
sub
xor
mov
in
shll
fcomi
push
inc
je
jns
mov
insl
jae
fidivl
xchg
mov
lds
clc
cmpsb
pusha
out
pop
sbb
fbstp
lock
sub
aaa
jl
call
or
xchg
imull
outsb
add
push
jb
stos
jns
je
adc
rol
pop
ret
mov
mov
in
adc
fwait
rcrl
mov
sub
mov
retw
ss
sti
xor
cmpsl
sub
mov
imul
idivl
dec
enter
sub
shl
mov
pop
repnz
push
inc
xor
in
cmp
nop
mov
mov
xchg
mov
adc
jne
sbb
inc
and
push
xchg
daa
cmpsl
xchg
in
mov
pop
ret
xor
add
nop
xchg
pop
bnd
mov
sarl
clc
mov
imul
repnz
test
sbb
push
ja
in
and
fcmovnu
lods
and
incl
into
mov
push
pop
jae
sbb
sbb
sbb
push
jnp
mov
call
mov
jle
je
sbb
iret
loop
add
cmp
dec
rclb
push
jl
das
push
xchg
xchg
add
add
aad
dec
inc
insb
sar
bound
add
cltd
jno
sub
mov
jno
mov
or
xchg
push
out
push
cmp
push
and
or
icebp
lea
jecxz
aaa
aam
add
insb
iret
roll
lea
addr16
add
dec
add
mov
jmp
shr
imul
dec
fisubrs
stc
add
js
rolb
movsb
pop
mov
cmpsl
cmp
lock
std
mov
add
jmp
cmpsl
and
lret
jne
jb
or
stc
nop
jmp
mov
daa
mov
rol
xchg
jecxz
imul
ret
sbbl
jmp
imul
xor
xchg
test
pushl
mov
adc
fnstcw
xchg
adc
pushf
pusha
add
mov
push
jae
xchg
xor
adc
inc
add
and
jl
shrb
mov
cltd
lods
shll
cmp
mov
or
sbb
sti
roll
call
lock
cli
xchg
jle
mov
or
jge
ja
imul
cmc
ret
repnz
xor
adc
pop
jbe
mov
packsswb
add
sub
test
adc
adc
add
xor
cltd
clc
mov
ret
mov
sti
sahf
xchg
xor
mov
mov
into
pusha
xor
andb
les
in
bound
ss
mov
inc
test
inc
dec
fdivrl
adc
jae
mov
fcoms
jne,pn
xor
fsubl
addr16
add
inc
cmp
cmpl
mov
add
test
gs
xchg
or
ljmp
jmp
inc
scas
cld
cli
cli
arpl
pop
cmp
pop
lock
aas
lret
enter
sub
popf
fld
pushf
sub
or
and
sub
dec
outsb
add
fstl
dec
dec
jl
and
pop
inc
addr16
or
pop
fbld
inc
data16
and
ret
cmp
sarl
out
push
cltd
pop
in
lret
leave
stc
jmp
mov
fistps
push
jge
mov
in
mov
pop
test
dec
mov
cmp
add
es
jmp
mov
movsb
cmp
mov
adc
imul
pusha
out
cmc
and
int
mov
cli
into
and
sub
lcall
int
inc
mov
movsb
mov
daa
jmp
sbb
xchg
in
inc
icebp
fisttpll
sbb
sbb
and
cli
mov
neg
ret
pop
or
aam
jp
pop
icebp
lahf
mov
pushl
imul
daa
mov
mov
mov
mov
inc
arpl
js
aaa
ljmp
adc
movsb
xor
emms
push
inc
testb
sbb
lahf
mov
add
orb
imul
aad
pop
cmp
mov
shrb
pusha
int3
test
insb
push
sub
pop
jne
mov
and
aas
es
outsb
insl
ljmp
popa
roll
xor
jnp
pop
lods
push
cmp
cli
in
inc
into
or
jp
arpl
mov
lods
out
in
mov
mov
inc
push
jl
mov
mov
repnz
das
cmp
push
xlat
out
aas
mov
faddp
mov
pushf
lret
and
lcall
add
or
aaa
pop
or
in
jb
push
sbb
xchg
add
mov
mov
jno
jmp
mov
roll
dec
dec
sbb
hlt
inc
pushf
pop
inc
xor
jle
cmpsb
cmp
adc
cmp
or
push
test
adc
push
test
pop
inc
push
sub
call
mov
stos
mov
jne
lcall
inc
loop
and
fsts
je
lahf
jmp
lods
pop
and
int3
and
into
sub
or
popa
jns
or
ficoms
xchg
in
stos
pushf
or
test
fcomp
mov
movsl
lods
decl
faddp
sbb
xlat
lret
pop
in
push
sbb
lahf
xor
mov
mov
pop
test
cmp
fiaddl
mov
mov
in
add
adcb
outsl
xor
sbb
aas
xchg
sub
push
hlt
cmpb
add
inc
jmp
xor
mov
icebp
cmc
pusha
shr
push
pop
jns
dec
cmp
test
sub
movsl
or
cs
aad
in
in
cmpsb
fnsave
inc
popf
mov
or
insl
mov
scas
mov
or
sti
or
sbb
mov
jbe
decb
push
cwtl
iret
xor
inc
inc
faddl
push
arpl
sub
inc
fstl
fidivrs
aad
cmp
inc
shl
ja
mov
vpxor
int3
xchg
jb
jmp
sbb
xor
testl
jle
mov
inc
pop
push
xor
mov
insb
cmp
aad
jb
or
cmp
stc
or
dec
aaa
push
cmp
mov
dec
pop
cmpsl
dec
mov
sbb
stc
les
nop
ss
fnstcw
aad
mov
xchg
aas
jmp
cmp
add
xor
xchg
rcrl
bound
in
sbbl
adc
test
pop
insb
jecxz
jmp
jp
sub
mov
push
xchg
adc
ffree
xchg
sub
mov
or
shr
nop
sub
ss
in
sarb
xor
fwait
inc
clc
add
mov
data16
ret
lret
into
push
add
mov
cmp
std
in
pop
or
movsb
mov
fldt
mov
orb
clc
insb
lds
push
fbld
mov
mov
fbstp
jmp
push
imul
jecxz
repz
int
cmpb
jo
jbe
inc
xlat
jl
mov
jb
lods
add
adc
sbb
sbbl
pop
add
fildl
cld
out
ljmp
mov
dec
mov
int
cmp
mov
adc
xor
sbb
sbb
jo
stc
leave
sub
push
int3
pop
out
lock
xchg
mov
cld
iret
mov
jle
push
rcrl
imul
add
xchg
jne
lods
in
add
mov
adc
adc
out
xchg
jle
std
enter
sbb
sbb
mov
mov
pop
shll
ror
lods
call
adc
pop
xor
push
and
inc
add
xchg
rclb
jle
cmp
lcall
inc
loope
fstl
fwait
jg
mov
pushf
pop
out
je
andl
adc
dec
cmp
jbe
cltd
cld
mov
decb
jecxz
mov
cli
lahf
addr16
inc
cs
int
dec
cmovle
sahf
mov
xchg
in
movsb
les
int3
cmpsb
cmp
cmp
out
pop
jecxz
adc
xor
xor
and
pop
mov
xor
inc
jae
sub
pop
data16
mov
inc
sahf
insb
push
and
lea
and
cmp
adc
loopne
addr16
mov
cmp
sbb
nop
aam
lds
mov
clc
cs
mov
sbb
mov
push
add
in
in
icebp
popa
adc
into
popf
mov
xor
push
es
ss
inc
cmp
fimuls
lcall
loop
int3
les
cmpl
push
icebp
movhps
lea
into
das
mov
out
fsubrs
imul
xor
push
ret
jecxz
pop
mov
rol
or
or
jno
mov
add
loopne
lods
and
jp
repnz
xchg
mov
or
mov
push
jb,pt
call
dec
rcrl
xor
lods
cmpsl
dec
test
fwait
push
mov
shll
and
xor
fisubrs
inc
add
cs
inc
xchg
pushf
ja
sbb
jb
xor
xchg
aad
shl
dec
mul
mov
test
push
loopne
enter
or
dec
out
rcrb
sti
sti
sbb
mov
fdivr
mov
jo
mov
sbb
mov
pop
mov
jecxz
mov
xor
jns
mov
cmp
movsl
jns
sbbb
pushf
fadd
pop
cmc
jns
jae
push
loop
test
cli
mov
xchg
or
lds
push
push
outsl
sub
sarl
mov
xor
push
pop
iret
sahf
add
fwait
stos
pop
ljmp
lock
add
and
sahf
fstps
in
sub
in
rcll
shl
pop
or
mov
aas
out
hlt
dec
sbb
std
notl
jg
xchg
sub
fnstcw
cli
inc
and
dec
sub
jge
mov
iret
nop
dec
pop
inc
cmp
jo
stos
orb
insb
cmp
or
pop
push
add
enter
sbb
mov
shrl
adc
lea
add
cltd
out
push
fs
ja
jae
jmp
mov
stos
repnz
or
adc
and
xor
cltd
out
aam
gs
mov
stos
and
xchg
cmc
xor
and
enter
es
push
lahf
sbb
sbb
lcall
adc
cld
loope
xor
pop
stos
mov
sbb
testl
xor
fcmovb
inc
pushf
pop
lock
shrl
jmp
dec
jno
aam
xor
jle
dec
hlt
ret
push
push
or
jnp
xchg
mov
daa
mov
cmc
sub
mov
fildl
scas
mov
push
xor
leave
leave
mov
mov
push
push
dec
enter
ret
outsb
aaa
and
loopne
divl
push
mov
movsb
ja
fldt
and
into
dec
daa
sbb
fwait
pushf
xor
cmp
ja
mov
mov
outsb
cld
gs
sub
rolb
mov
fdivrs
fisubrl
jbe
xor
notl
fisubrs
int
or
lret
or
mov
daa
out
scas
pop
push
loope
in
add
fdiv
dec
stos
add
jne
add
xlat
arpl
stos
mov
sub
xchg
cmp
fwait
cmpsl
and
jno
inc
aas
popf
fs
and
pavgb
jne
fnstenv
sub
pop
or
movsl
insb
out
jo
and
xchg
sub
loop
dec
insb
xchg
stos
mov
or
ret
push
hlt
mov
adc
xchg
js
repz
push
mov
mov
dec
popf
addr16
mov
push
mov
push
jns
inc
mov
in
daa
mov
enter
mov
push
mov
sub
in
outsl
push
push
into
leave
or
popa
lea
rcrb
mov
lods
push
pop
fnstcw
mov
push
mov
xchg
push
sbb
mov
cmpsb
cwtl
push
mul
imul
nop
mov
testl
jnp
inc
fnstsw
fbld
add
ret
pop
enter
sub
pop
mov
fwait
hlt
push
into
jp
pushf
aas
jge
sub
xor
xchg
push
dec
jnp
jg
cmpsb
push
cli
pushf
dec
xor
push
xchg
scas
inc
and
inc
pusha
outsl
pop
push
cwtl
imulb
xor
dec
sbb
loopne
ret
xchg
sub
shl
push
jp
push
xor
loopne
mov
addr16
push
xor
cmp
mov
push
pop
outsb
sub
into
dec
inc
ja
pop
cmc
loopne
cmpsb
cmp
push
orl
jg
fdivrs
aad
test
push
ja
dec
data16
xchg
mov
adc
add
adc
pop
cmc
sub
aam
lods
enter
add
sbb
mov
cmp
ljmp
dec
fbld
and
sub
pop
push
mov
and
sub
push
xchg
sub
into
in
cli
sbb
push
add
fbstp
mov
inc
and
xchg
fwait
cmc
clc
adc
adc
hlt
pop
jl
inc
sub
and
mov
sbb
shlb
cltd
and
mov
push
mov
movsb
lea
imul
push
test
pop
scas
fistpll
ss
mov
aad
pop
and
or
stc
loope
adc
addr16
int3
mov
test
movsb
dec
repnz
das
cmp
jbe
and
add
inc
jnp
shrl
mov
lods
mov
shlb
mov
dec
mov
stc
popa
dec
cmp
sbb
or
push
xor
call
jg
push
mov
cmpsb
jle
mov
lcall
or
mov
add
pop
pop
push
pushf
test
add
fwait
push
cs
sbb
cmp
sub
dec
sub
scas
xchg
jl
dec
int3
or
inc
cmp
jp
fstps
popf
lods
sub
and
and
sub
bnd
push
cmp
ds
jecxz
ljmp
fdivrs
sbbb
outsl
and
sbb
out
arpl
in
lods
in
loop
fsubrs
mov
xor
subb
addb
cli
std
insl
ds
push
mov
test
add
stos
mov
and
data16
js
fadds
or
aam
add
lods
ja
fisubs
fdivs
sub
jbe
in
les
dec
bound
and
sub
gs
popf
inc
mov
pop
pop
test
mov
iret
dec
cmp
dec
sbb
cld
adc
inc
pop
fidivrs
stos
scas
add
inc
inc
adc
test
cmpsl
xchg
lods
pop
inc
xlat
movsb
stc
jns
mov
jge
add
mov
mov
or
pop
mov
jp
stc
jp
or
push
sti
repz
in
xchg
jns
mov
test
lcall
adc
ret
shrb
test
fst
mov
or
pop
sar
xor
rclb
mov
int3
inc
push
movsl
xor
mov
movsb
popf
pop
xchg
sub
or
sti
mov
in
mov
push
inc
in
push
push
int3
orl
dec
sub
add
mov
je
mov
adc
test
xor
pop
lret
nop
and
dec
push
icebp
fs
lods
addr16
mov
adc
out
xchg
enter
mov
imul
scas
rolb
bound
lods
std
mov
push
cmpsb
lock
hlt
pop
loop
ja
lcall
nop
stos
xchg
or
notb
jecxz
test
test
loop
push
pop
dec
jbe
mov
jmp
jmp
lds
imul
push
and
shlb
mov
pop
cmp
pop
loope
lods
or
sahf
sbb
and
ds
lock
das
ret
jns
fldt
xor
rorb
mov
or
pop
jle
scas
leave
ret
iret
lahf
push
mov
ret
sti
xlat
adc
push
pop
lds
add
fucomip
loopne
mov
inc
push
rcrl
sti
jp
push
insb
xchg
adc
fwait
pop
cld
rolb
jbe
jl
arpl
loop
jns
dec
xlat
lods
loop
add
ljmp
inc
call
leave
call
addr16
jge
sbb
int3
movsb
xor
dec
sub
pop
cmpsb
mov
jp
xchg
mov
sbb
xchg
arpl
imulb
cmp
mov
xor
xor
lock
cmc
inc
sub
sahf
jmp
sbb
inc
and
xor
mov
aad
outsl
or
ja
xor
pop
pop
xchg
rcrb
ljmp
out
xchg
mov
or
jae
sub
lret
mov
mov
jecxz
imul
add
add
out
call
popa
mov
jg
xchg
mov
inc
fmull
or
call
icebp
mov
sbbb
popf
push
sub
push
int3
mov
mov
and
mov
inc
inc
xlat
test
mov
pop
sbb
inc
and
inc
pop
sub
xchg
imul
lds
loopne
cmp
jge
jmp
cmp
mov
aaa
ror
jns
in
out
pop
cmp
hlt
dec
lea
adc
loopne
adc
xchg
out
xchg
or
jp
push
cwtl
es
shll
lds
repnz
sub
add
cmpsb
test
xchg
cs
fwait
js
or
loope
jle
lds
pusha
lahf
or
pop
ja
movd
roll
add
aad
loope
sahf
clc
inc
jae
mov
cld
push
adc
loop,pt
addr16
adc
or
cs
jae
gs
xor
xor
clc
lock
mov
sub
leave
adc
loope
sub
arpl
xor
pop
gs
es
js
out
scas
lock
or
mov
loopne
cmc
or
cmp
push
sahf
mov
or
aam
ret
icebp
test
lods
fdivrl
fimuls
fstl
add
popf
repz
cwtl
sub
test
pusha
mov
xchg
push
push
lock
cmp
in
ja
xchg
adc
sbb
loope
aad
orb
xchg
aad
lods
push
cmp
pop
xlat
outsb
xchg
cmc
mov
outsb
adc
and
fdivrs
inc
and
mov
or
or
frstor
sub
es
push
ds
dec
loopne
and
lahf
and
and
fsub
insb
cmp
out
cmp
push
leave
adc
jbe
loopne
rcr
mov
loop
filds
ud0
inc
push
icebp
or
ljmp
lret
cmpl
cmpsl
inc
ds
dec
xlat
lahf
pop
cmp
sti
out
pushf
adc
inc
lahf
out
adc
cmp
mov
xor
pop
nop
sub
js
cmpsl
ds
cmc
fdivrs
inc
in
mov
sbb
pop
sub
pop
sbb
subb
inc
pop
jecxz
gs
enter
mov
xor
ret
repz
test
lahf
sub
shlb
std
cwtl
pop
leave
pusha
xchg
cmp
cmp
inc
nop
sbb
inc
ds
notl
pusha
cmpsl
ds
out
icebp
xchg
pop
cmovg
xlat
jmp
jne
ret
mov
mov
push
or
xchg
xor
pop
jbe
push
test
clc
sahf
mov
imul
mov
enter
arpl
cmp
mov
mov
pushf
scas
inc
into
mov
xchg
shrb
outsb
adc
mov
pop
xor
scas
arpl
jae
sub
mov
push
mov
ds
hlt
pop
hlt
dec
xchg
je
or
ror
outsl
inc
aad
cli
mov
dec
sub
orb
fstpt
rorb
xchg
ret
adc
repnz
inc
shll
jnp
push
fs
out
aam
cltd
cld
mov
loope
cmp
push
jge
xor
ds
dec
in
lds
out
cmp
mov
pop
lret
jnp
sub
xchg
inc
test
cmp
jecxz
enter
xlat
jecxz
lret
xchg
jecxz
dec
sbb
dec
fiaddl
mov
popa
cmp
cltd
sub
out
fs
inc
push
loopne
mov
les
es
aam
std
cmp
jne
sub
xchg
pop
out
mov
imul
repnz
mov
jo
stc
cmp
push
fs
lea
adc
dec
or
enter
lahf
pusha
and
mov
repz
outsb
inc
xchg
cltd
out
xchg
fwait
mov
mov
addr16
ljmp
add
xchg
fwait
xchg
imul
jbe
dec
fists
and
and
xor
jg
add
clc
sahf
mov
jp
pop
popf
jg
xor
out
adc
cwtl
sbb
or
xchg
mov
cmp
mov
cmp
xor
ss
lret
xor
xchg
mov
loope
enter
sub
test
jg
mov
xor
sbb
xchg
scas
and
cwtl
arpl
mov
mov
adc
sbb
xor
es
xor
xchg
sub
in
inc
xor
pop
ds
fcompl
inc
pop
push
or
sbb
insb
mov
iret
push
fwait
in
xor
add
and
xchg
fiaddl
test
into
pop
imul
imull
cli
mov
ja
xor
sbb
mov
ret
adc
bound
cwtl
pop
mov
out
fisttps
inc
movsb
cmpsl
test
fadd
arpl
push
je
dec
jg
loope
sub
into
les
daa
out
test
mov
jecxz
pushf
test
mov
ljmp
sub
adc
stc
pop
xor
inc
ret
cmp
aad
aad
sub
mov
in
je
xchg
mov
sbb
mov
push
movzbl
mov
movsb
xor
mov
fisubl
test
sbbl
outsl
stos
mov
stc
mov
xchg
xchg
ret
int
imul
sub
mov
push
inc
or
rcrb
add
bound
rorb
pop
push
add
js
fstpl
sub
cmp
jecxz
jmp
inc
push
shl
jae
sub
cmp
xor
pop
xchg
sub
dec
rol
arpl
pop
sbb
xchg
leave
dec
pop
loope
add
leave
jp
movsl
xchg
inc
and
pop
push
inc
xchg
mov
cmp
out
pop
and
jecxz
xchg
leave
loopne
cli
mov
xor
movsl
cmp
test
push
scas
push
daa
rorl
aaa
scas
dec
roll
add
pop
mov
jbe
aaa
cmp
mov
stc
aad
and
repz
cmp
xchg
popa
dec
clc
or
sbb
push
lret
out
test
leave
sbb
hlt
in
xor
cs
and
aad
and
scas
inc
pop
mov
int
and
xor
mov
icebp
xchg
mov
ficompl
sub
dec
dec
or
out
notl
adc
enter
std
dec
jb
aaa
push
ja
pop
lret
stos
scas
inc
fdivl
loopne
pop
stc
push
mov
fld
ds
std
mov
sbb
bound
jg
and
push
push
add
pop
test
xorl
imul
cwtl
mov
mov
jne
cli
mov
and
jno
mov
sahf
pop
pop
mov
ja
scas
lods
mov
loopne
popa
fwait
dec
add
inc
adc
lock
into
insb
xchg
pop
pop
mov
lret
cmp
icebp
enter
xchg
sub
cmp
xchg
dec
lds
and
inc
addr16
out
adcl
sbbl
pop
mov
or
add
inc
enter
push
test
mov
hlt
in
cs
fdivl
pop
fmul
mov
ja
adc
cmp
ja
fldcw
dec
repz
add
lods
jo
jp
mov
xchg
add
js
and
iret
and
in
jecxz
xchg
les
xchg
dec
or
or
andb
mov
mov
cmp
pop
xchg
xchg
and
lods
ret
imul
cmp
in
cmc
aam
jg
or
mov
fbstp
js
and
add
and
shlb
aas
pop
pop
aad
jle
aas
sbb
push
hlt
push
dec
loop
add
push
nop
ficompl
xor
ret
and
dec
mov
or
mov
adc
stc
rclb
cwtl
cmp
movsb
lds
arpl
imul
push
or
loope
mov
push
sub
sbb
xor
stos
push
icebp
test
pop
pop
xor
int3
adc
mov
repz
pop
sbb
roll
add
push
out
hlt
and
shll
scas
or
aad
add
mov
adc
sub
lock
or
jb
ja
aad
out
add
pop
das
roll
test
mov
ret
dec
mov
mov
mov
insl
mov
frstor
test
mov
movsl
and
lea
cmp
cld
inc
cmp
and
push
aaa
aad
aam
and
mov
push
ljmp
subb
adc
lret
push
or
dec
shll
mov
pop
mov
js
push
imul
mov
push
shll
call
and
xor
pop
xor
mov
int3
push
push
adc
adc
cmpsl
insl
sub
mov
adc
test
push
dec
fsubr
lret
mov
es
sarl
and
xor
clc
sbb
loopne
nop
scas
or
pop
gs
inc
fstps
pusha
push
adc
add
sbb
into
mov
fcompl
xchg
cmp
xchg
add
divl
subb
jo
mov
cld
push
stos
adc
cmp
shrb
dec
iret
jecxz
out
jno
rcll
pop
repnz
xor
mov
shll
orb
cmp
clc
dec
dec
and
adc
enter
adc
stos
ret
sbb
nop
test
cmp
jp
sahf
loope
fwait
cli
adcb
dec
lock
lret
add
gs
adc
dec
push
andl
lock
lods
mov
adc
dec
pop
mov
jo
xor
aam
lock
xchg
xor
test
enter
pop
das
fs
adc
fimull
jg
pop
xor
aad
xor
fnclex
inc
frstor
iret
fs
stos
aam
or
mov
fmull
aam
popa
clc
popa
cmc
dec
adc
mov
dec
mov
dec
cmp
inc
pop
outsb
cmp
cmp
inc
in
jns
push
pmaddwd
mov
jecxz
aad
jp
addr16
add
punpckhdq
mov
jge
ja
insl
push
and
aad
popa
mov
shl
in
lahf
push
fwait
int
mov
pop
jns
inc
mov
mov
xchg
fs
cmp
push
pushf
fistpl
sbb
shrb
mov
inc
push
loopne
mov
addl
sub
lret
fdiv
xchg
push
in
and
ret
fldenv
nop
test
inc
pop
sub
pop
sub
fsubrs
fldenv
mov
idivb
mov
cmp
insl
pop
mov
sbb
stc
lcall
mov
shlb
sbb
rorb
push
je
test
aas
mov
sbb
xchg
push
rol
sub
ja
lea
addr16
bound
mov
dec
icebp
inc
stos
xchg
mov
inc
pop
or
testb
mov
xlat
xor
movsl
pushf
subl
test
mov
subb
ja
ss
mov
jmp
hlt
cmp
jne
xchg
cmp
decl
mov
sbb
or
gs
lods
icebp
adc
aam
jo
jmp
jae
xchg
call
pop
mov
int3
fisubs
mov
je
jge
sbb
xchg
in
popw
jo
mov
pop
pop
sbb
stc
aad
sub
mov
ret
mov
lds
fiaddl
sbb
ja
ds
cwtl
sub
jp
and
jmp
cmpsb
mov
mov
ds
jbe
aam
pusha
mov
ljmp
mov
fsubrp
inc
jbe
nop
jbe
out
addr16
xchg
lds
repnz
mov
subb
std
jmp
inc
out
xor
fucomp
mov
sbb
pop
imul
adc
jbe
and
in
cwtl
repnz
push
fnstenv
aam
lahf
cmp
sbb
fidivs
push
cmp
sbb
test
sub
cmp
inc
pusha
divl
xchg
insl
loopne
stos
nop
mov
out
sbb
inc
leave
ljmp
pop
mov
sbbb
and
sbb
jne
push
test
insl
mov
fcmove
cmp
popa
xchg
insl
push
cmp
add
jmp
in
testl
test
lds
dec
shrb
mov
ret
ret
push
jge
cmp
jo
xchg
js
out
js
sub
or
jle
lock
pop
rcl
pop
add
sub
lcall
fwait
jp
xchg
push
xor
cwtl
pop
ficoml
xchg
cmpsb
in
mov
cmpl
idivb
jne
out
stos
ret
mov
movsb
add
scas
aaa
or
or
imul
repz
sbbl
ja
cmc
xchg
and
mov
cmp
std
add
xor
test
pushf
or
and
ss
cltd
inc
dec
shr
dec
xacquire
pusha
into
cmpsl
jns
fdivl
fs
and
mov
ret
das
and
cmp
in
loopne
cltd
fdivs
mov
xchg
cmp
cmp
sahf
repnz
bswap
fwait
cli
and
cmpl
xor
out
jno
xor
imul
scas
enter
stos
popa
inc
in
or
jbe
pop
fiaddl
push
decb
sarl
std
addb
stos
clc
lahf
xor
lret
subl
push
mov
push
jle
jb
ja
cs
push
iret
inc
test
lahf
mov
mov
add
sbb
mov
push
cld
xor
xor
mov
outsl
jp
loope
mov
pusha
xchg
xchg
adc
sarb
test
ret
je
sub
and
sbb
sbb
leave
dec
jb
std
cmp
addl
and
addb
jbe
and
or
mov
mov
push
fidivs
ss
imul
xor
loope
cld
push
out
xchg
sub
jne
sahf
ljmp
jmp
out
loop
in
dec
aam
mov
in
movsb
push
cmpl
mov
dec
mov
fadds
push
pop
insb
mov
or
rcrl
sbb
adc
sub
repz
mov
fisttps
roll
mov
cli
or
or
daa
into
mov
imul
stos
inc
icebp
test
cltd
rorl
push
fsubrp
fs
int
data16
outsl
and
fsubr
in
jge
nop
bound
and
fsubrs
jnp
jo
adc
stos
mov
xor
inc
pop
mov
aam
cmp
xor
sarl
cmp
jp
or
stc
nop
pop
sbb
loope
lcall
loopne
jo
cmp
pop
test
push
fisttpll
xor
jne
mov
stos
dec
xor
jbe
loopne
xchg
outsl
shrl
sbb
mov
out
data16
push
std
push
push
mov
fs
mov
mov
dec
pop
cmp
jg
sub
push
aam
gs
xchg
jbe
mov
fidivrs
ret
adc
mov
sbb
inc
xor
insl
or
adc
pop
mov
mov
pop
loop
insb
lods
sub
mov
sbb
push
pop
in
mov
mov
adc
or
inc
mov
insl
mov
dec
addr16
popa
push
movsl
xchg
sbb
mov
cmp
add
cmp
sub
imul
jae
imul
popf
iret
lret
inc
sub
lcall
mov
push
out
ljmp
adcl
mov
xchg
inc
bound
rcr
mov
xor
pop
jecxz
into
mov
scas
pop
adc
in
out
mov
adcb
pop
cmp
mov
xlat
xchg
fadds
mov
dec
mov
inc
pop
in
push
jge
shlb
sbb
dec
jecxz
cmc
xchg
pop
in
adc
or
push
aas
dec
add
sbb
add
jl
cmc
xchg
pop
scas
pop
roll
rorl
lea
imul
cmp
inc
sbb
icebp
inc
push
inc
sub
lods
fidivs
imul
mov
dec
fnstcw
inc
psraw
pop
pusha
out
pop
movsb
cmp
cmp
cmp
xor
pop
out
cmp
cmpsb
scas
scas
jmp
xchg
fsubrp
sahf
push
enter
test
mov
dec
imul
outsl
mov
gs
cli
movl
dec
repz
mov
out
adc
jb
dec
fcmovnb
cwtl
jae
cmc
int
or
cmp
pop
sahf
imul
mov
aam
outsb
xchg
mov
fdivrl
int3
out
pop
dec
repz
xchg
movsb
jecxz
sti
daa
outsl
mov
insl
or
or
jl
xlat
or
pop
loope
icebp
sahf
test
clc
sbb
gs
fldlg2
mov
fcoml
das
xchg
mov
jb
rorl
sbb
fisttpl
lret
cwtl
das
or
sarl
pop
pop
out
xchg
stos
cld
test
xchg
ficompl
mov
sti
add
scas
and
in
mov
pusha
addl
cs
imul
or
cmp
enter
pop
ss
insb
jb
mov
imul
subl
xchg
sub
repz
lods
sub
pop
dec
gs
sub
sub
dec
out
mov
into
xlat
stos
cmc
ja
daa
loope
mov
ret
jnp
cmp
call
cld
insl
add
or
and
cmp
sar
mov
xchg
pop
subb
bnd
and
das
mov
cmp
cli
dec
pop
cmp
repz
inc
adc
jbe
adc
stos
xchg
add
hlt
popa
xor
ret
int3
fsubrs
xor
lahf
jle
mov
inc
pop
leave
jb
outsl
xor
mov
dec
cld
jg
cmp
xlat
imul
push
mov
stos
loop
mov
out
push
xchg
pop
in
addl
or
pop
xor
pop
mov
cmp
xor
sub
xor
push
mov
decb
push
add
pop
xor
dec
imul
loopne
cmc
out
or
jbe
inc
cmpl
dec
lods
leave
pusha
sbb
mov
push
shrb
push
pop
fcoml
cmc
cmove
jne
lret
not
outsb
pop
call
add
decb
jmp
jmp
sbb
fidivs
xlat
xlat
jb
mov
in
cmc
enter
mov
shr
es
outsb
ret
lock
fcoms
popf
jge
mov
adc
lret
enter
loope
dec
lret
lods
test
fiadds
aad
inc
mov
jb
xor
movsb
dec
repnz
insl
mov
sbb
jns
jp
sti
xchg
rorl
push
inc
mov
pop
jg
icebp
mov
jg
loop
insl
sbb
cld
les
jae
cmc
shrb
push
pusha
cmp
or
mov
and
ror
or
or
jno
sub
lods
scas
cli
xchg
pop
cs
cmp
push
loop
add
inc
push
test
and
aaa
dec
lods
push
sub
xchg
jl
fsubrs
and
cmpsb
jnp
shlb
adc
shlb
in
int
inc
sub
add
pop
mov
push
pop
arpl
ret
pop
or
adcb
xchg
imul
cs
aas
enter
inc
xchg
adc
and
pop
fwait
test
and
jbe
xor
pop
ss
sbb
movsb
dec
sti
ret
jb
shll
sub
dec
mov
out
mov
sbb
cmp
push
sbb
outsb
xchg
insb
mov
sbb
xlat
mov
fisttpll
pop
in
lods
fisubrl
mov
ja
and
cmp
xlat
aad
add
sub
or
dec
cmc
in
pop
icebp
sub
jge
xor
outsb
cmp
lods
clc
fsubr
jl
push
xor
cltd
and
mov
std
xchg
ss
cmp
pop
sbb
sahf
idivb
push
cli
ss
leave
divl
cmpsb
pop
mov
fsubs
pop
loope
fdivs
mov
icebp
jbe
pop
test
test
and
test
push
mov
xor
jge
push
push
imul
xor
jno
dec
pop
into
mov
cmpsb
cmp
aad
sub
ret
cmp
mov
xorl
lret
popa
sti
xor
push
ljmp
push
dec
pop
xchg
xchg
das
push
in
mov
jnp
into
add
mov
les
lret
les
fldenv
jecxz
xor
inc
add
fstpl
and
xchg
mov
outsb
xchg
inc
scas
fwait
push
pop
stos
xor
and
push
inc
sub
int3
repnz
cmp
fcompl
push
dec
je
cmp
pushf
jo
mov
pusha
mov
push
mov
sub
mov
shl
pop
insl
adc
lds
sbbb
jecxz
hlt
icebp
xchg
add
es
loopne
adc
add
push
inc
xorl
pop
inc
mov
arpl
lret
cld
push
js
es
fsubr
stos
rolb
out
sarl
sub
mov
loope
fisttps
cs
leave
es
clc
xor
xchg
inc
jmp
std
or
or
push
xchg
mov
cmp
sub
sub
fsubs
cmpsb
cmpsb
test
outsb
inc
mov
fmull
loope
mov
fistl
sub
test
je
mov
cmp
or
jecxz
int
arpl
push
push
enter
fdivl
or
cli
mov
imul
flds
pushf
shlb
rorl
insl
push
jb
and
aas
movsl
xorl
dec
adc
shl
cs
cli
mov
fdivl
push
imul
lahf
dec
es
or
pop
scas
jne
arpl
ljmp
addl
cltd
data16
dec
sub
outsl
shll
sbb
mov
iret
lret
dec
adc
jns
mov
dec
inc
push
repnz
or
inc
cmp
dec
fistps
jmp
pop
pop
mov
movsb
push
mov
test
sti
push
xor
pop
add
mov
movsl
out
test
test
sbb
stc
nop
aad
jo
mov
adc
mov
dec
mov
mov
imul
fiadds
outsl
out
pop
lock
std
add
sbb
in
out
xor
outsl
decl
rcrb
sbb
cmpsl
mov
aaa
xchg
sub
push
adc
jmp
or
out
adc
push
popf
ljmp
or
adc
stos
push
setae
out
std
or
and
adc
rcrl
adc
jge
xor
aas
adcb
adc
xor
sti
addr16
add
mov
imul
in
dec
test
hlt
mov
test
fildl
mov
bnd
gs
out
or
lock
xor
push
inc
std
pop
push
xchg
pop
inc
pop
dec
push
xor
dec
shrl
out
iret
ret
sub
sbb
cmp
pop
ror
je
pop
sub
test
dec
in
sbb
int
cmp
lods
repnz
push
sbb
shrl
xor
out
sbb
sbb
xor
movsb
sti
fwait
jno
pop
adc
inc
stos
cli
xor
gs
sbb
lret
sbb
test
xor
ljmp
adc
dec
fnstenv
inc
sti
enter
cltd
xor
sahf
lds
pop
xor
xchg
adc
sbb
daa
or
xor
lea
adc
scas
sbb
add
add
shll
pop
pop
ds
mov
fsubs
leave
cmp
call
mov
imul
add
xor
jg
xor
jb
adc
fisttpll
pop
jl
xchg
mov
mov
cli
shr
in
clc
mov
adc
into
adc
push
out
lods
mov
mov
sub
cmp
jae
add
mov
push
xchg
out
add
jo
mov
push
dec
mov
jb
jae
or
mov
or
sub
add
aaa
test
ljmp
das
in
inc
lcall
xor
xor
mov
cmpsl
mov
adc
mov
jmp
inc
pusha
fwait
mov
aas
sahf
ja
mov
stos
jns
aaa
push
stc
insl
pop
insl
jg
mov
push
test
mov
xor
inc
mov
ror
and
mov
rclb
daa
iret
std
cmp
int
rcrb
cli
push
xor
rol
inc
popa
clc
aas
add
addr16
xchg
repnz
adc
dec
xchg
das
das
shrb
jecxz
add
movups
cmpsl
aas
or
orb
dec
push
or
data16
pop
mov
stc
push
sti
gs
dec
adc
clc
or
adc
rorb
aaa
sbb
push
out
pushf
lss
cmp
pop
stos
xor
or
into
test
cmp
fstl
inc
jo
fs
fwait
mov
adc
push
cli
out
scas
push
loope
in
sti
xlat
aad
or
pop
push
xchg
repz
into
lds
es
fucomp
and
push
fisubl
mov
out
ss
xchg
bound
sub
jp
loope
xchg
dec
pop
cwtl
pop
insb
cli
xchg
mov
push
cld
aam
in
out
sti
mov
das
movsl
xor
jbe
jp
loope
add
inc
andb
and
loopne
push
jne
push
push
negl
xor
or
loop
xor
leave
pusha
loopne
dec
jecxz
mov
jle
imul
jae
pop
movsl
out
mov
stc
cmp
push
mov
jecxz
insl
repnz
sar
repz
arpl
repz
and
lahf
leave
int3
arpl
shl
rep
and
pop
dec
int3
arpl
repz
movsl
and
push
mov
and
or
data16
push
repz
push
and
fildl
rclb
xor
jl
out
js
push
test
pop
and
mov
xchg
incb
ds
add
sbb
sub
rorl
lret
mov
add
imul
rol
cmp
insb
imul
or
push
push
icebp
or
pushf
jb
ds
mov
adc
mov
pop
jns
or
inc
xchg
mov
add
test
inc
cmp
adcl
mov
push
adc
rol
jecxz
mov
cmp
cli
mov
cmp
mov
xchg
and
push
cld
lret
mov
in
xchg
and
dec
loope
mov
push
or
andb
jne
imul
popf
xchg
inc
add
adc
cmp
and
cmpsb
jno
ret
push
add
fdivl
or
cmp
xchg
movsl
cmp
aam
scas
enter
push
lret
dec
js
inc
pusha
addl
mov
testl
or
popa
mov
imulb
lret
adc
jmp
dec
xor
adc
xchg
repz
mov
adc
fdivs
lcall
cld
rolb
pop
mov
es
cmc
push
mov
jl
daa
out
inc
mov
mov
mov
in
rcrb
sub
add
cmc
shlb
mov
add
test
mull
lods
negl
out
ffree
repz
mov
ret
sbbb
div
sbb
jle
xchg
fnstenv
lds
or
pop
inc
rolb
push
push
jb
sub
rcrl
mov
mov
in
inc
insb
xchg
xchg
divb
cmpl
stos
lods
cmp
mov
hlt
sub
mov
adc
mov
xchg
push
fnstcw
aas
and
pusha
les
jecxz
je
dec
icebp
loopne
int3
add
jae
lods
dec
in
fcoml
insl
cs
inc
aas
aad
mov
hlt
sbb
shll
mov
xchg
mov
ret
or
push
int
popa
sub
pop
push
xchg
hlt
cmp
fistpll
adc
push
sub
xchg
sbb
inc
imul
pop
in
mov
and
mov
mov
xchg
and
mov
arpl
sahf
or
pushf
cmp
pop
stos
jp
pop
cmp
jg
in
in
jnp
imul
sarl
pushf
xor
sahf
lock
mov
mov
xchg
in
or
add
cmp
movsl
xor
js
cltd
test
xchg
cs
lret
into
dec
jp
mov
loop
hlt
mov
ljmp
jmp
je,pn
loope
jno
sahf
push
add
les
mov
cmp
sbb
xor
mov
sti
adc
enter
jl
pop
rclb
and
call
jge
and
xchg
jecxz
adc
cmpsb
jae
fnstenv
scas
jo
mov
jmp
pop
dec
aam
mov
mov
repz
mov
or
jge
xchg
movsb
mov
sbb
int3
daa
cmc
xchg
das
xchg
repnz
mov
movsb
lret
mul
or
pop
inc
dec
lock
xchg
faddp
hlt
mov
add
test
add
add
xchg
mov
std
and
rcl
xor
sub
add
xor
lock
frstor
xor
or
sahf
lods
es
add
cmp
inc
fdivrl
pop
jle
xchg
out
pusha
stos
cmp
xchg
das
cmp
jae
xor
pop
lret
pop
mov
stc
mov
ffreep
adc
jb
adc
aad
and
dec
pop
je
or
out
mov
shr
je
shrb
lahf
cmc
shll
push
xchg
test
pusha
xchg
test
dec
movsb
or
mov
jg
divl
pop
mov
into
mov
jne
or
out
add
dec
xor
outsb
fcompl
or
dec
test
adc
movsb
outsb
cmpsl
mov
jb
add
int3
daa
lods
cmp
cmp
mov
jnp
jne
sahf
xchg
outsb
in
push
mov
xchg
out
sbbl
jae
lods
test
jno
inc
lea
jbe
add
xchg
lds
fsubrs
inc
scas
jnp
inc
push
xor
mov
adc
push
jg
push
and
in
sbb
ds
push
les
in
sbb
inc
movsl
jge
subl
loop
push
fwait
mov
jne
fs
cmp
and
lods
inc
mov
hlt
xchg
mov
mov
in
xchg
mov
jg
fidivrs
cmpsl
pop
cmp
cmpsb
rcr
xchg
icebp
test
xchg
int
into
aam
mov
test
mov
or
sub
or
sub
jg
xor
cmpsb
les
shl
xchg
aaa
mov
ret
stc
or
roll
cld
lahf
cmp
aad
out
cmp
or
cli
fwait
push
rol
scas
leave
insb
add
sub
pop
sahf
mov
mov
aam
loop
sbb
jmp
loope
jmp
fdivl
or
fwait
mov
mov
xchg
out
es
mov
fisubrs
mov
popa
adc
pop
ds
in
lret
aad
fnstsw
sub
mov
cmp
mov
mov
lret
xchg
dec
int
rolb
pushf
ds
pusha
cmp
lret
push
pop
cmp
fs
push
jno
dec
fldl
arpl
jae
fsubs
dec
add
pusha
js
fwait
sub
jg
and
loope
int3
lahf
and
cmp
xchg
jg
mov
fcmovne
aas
js
inc
loop
or
cmp
jge
scas
xchg
jmp
jg
sbb
stos
popf
xor
sarb
xchg
or
cmpsl
sti
jmp
fstpl
repnz
mov
mov
outsl
pop
jmp
or
fdiv
jecxz
dec
and
xchg
adc
add
popa
mov
out
mov
mov
lret
scas
add
xchg
ret
call
adc
rolb
cmpsl
ja
pop
roll
sub
in
lds
dec
shll
sarb
dec
adc
push
notb
mov
iret
stc
ficomps
fcompl
xrelease
inc
popf
cmp
orb
test
xchg
imul
lret
mov
fsubl
aaa
or
vcvtss2si
insb
pusha
loopne
outsl
adc
jecxz
imul
jl
cwtl
jnp
cmp
adc
in
lods
or
push
cwtl
ljmp
and
inc
adc
push
add
add
mov
ret
aaa
mov
aad
dec
push
pusha
push
fsts
sarl
sub
inc
fmuls
rcll
rcr
sbbl
cmpsb
pop
nop
adc
pop
sub
movl
mov
iret
jl
in
cmp
out
ss
or
push
push
mov
je
fistps
into
pop
sahf
jge
push
insb
mov
mov
dec
xor
je
mov
pop
mov
mov
jae
sub
out
das
test
push
push
repnz
lret
mov
push
add
sbb
xchg
jge
push
scas
dec
or
jl
xchg
sub
lahf
pop
push
or
mov
out
fdivl
xlat
add
mov
mov
int
shl
out
mov
movsb
mov
sbb
stc
loopne
jge
int3
push
cmp
adcl
mov
cmp
sbb
clc
frstor
sbb
mov
xchg
adc
inc
ficomps
mov
aam
xor
test
jo
pop
push
or
jb
and
out
sahf
ret
dec
add
aaa
rcr
aam
imul
cmp
sbbl
dec
xor
xor
and
xor
xor
shlb
adc
lods
inc
sub
cwtl
jmp
mov
adc
or
and
mov
roll
mov
inc
cmp
xor
mov
inc
pop
imul
repnz
sub
inc
push
daa
push
vmread
stos
xor
scas
dec
test
lods
cltd
mov
jo
mov
sub
lock
jo
aam
jg
shl
jb
mov
jp
sub
daa
sub
cmp
int
icebp
pop
orb
sahf
js
xchg
or
addr16
sbb
clc
popl
movsb
push
sahf
inc
loop
outsb
and
pushf
movsl
pop
pusha
jge
jp
lods
mov
lock
in
jb
fwait
cmpsb
or
test
jae
sub
mov
xchg
jmp
lds
adcb
jnp
or
cmp
insb
js
out
mov
addr16
dec
mov
inc
iret
push
das
mov
xor
insb
mov
pop
mov
add
sub
xchg
das
enter
sbb
and
xlat
fnsave
fnstsw
mov
iret
into
pop
fcoms
add
ljmp
jb
xchg
loope
or
xor
std
ljmp
jbe
enter
clc
inc
mov
cli
ss
xchg
cs
stos
dec
adc
lahf
inc
push
jno
dec
sub
loop
add
enter
cmp
and
push
pop
test
sbb
sbbb
mov
mov
add
push
frstor
dec
ffreep
xchg
xchg
imul
or
dec
push
popf
jge
pusha
mov
rcrb
sub
flds
aaa
mov
xor
jmp
pop
jg
mov
jle
ss
mov
and
loop
sbb
mov
dec
sbb
sub
or
sub
scas
scas
mov
ficompl
mov
push
sbb
addr16
xchg
test
ficoms
out
jb
cmpsl
cmp
inc
insl
out
fmulp
lods
out
sub
cs
inc
lock
pop
push
adc
cmp
push
pop
outsb
int3
mov
movsb
sbb
mov
movsl
add
mov
dec
fpatan
inc
mov
mov
dec
in
inc
xchg
adc
lods
aas
popf
andb
call
in
test
loopne
stos
mov
mov
stc
int3
sbb
repnz
outsl
cmp
aad
lds
inc
movsb
mov
iret
imul
xchg
mov
lock
bound
jg
dec
in
adc
sub
imul
hlt
sarb
pop
mov
jnp
push
pop
pop
mov
fbstp
sbb
sub
outsl
test
mov
push
pop
sbb
cltd
test
xor
jmp
icebp
xchg
lea
inc
dec
ja
std
or
mov
jns
adc
shll
sbb
add
or
fildll
cmp
pop
movsb
scas
jns
fdiv
mov
xor
aad
and
je
lahf
jbe
xorl
dec
stc
mov
inc
mov
jne
js
outsb
imul
bound
cmpsl
ret
mov
testb
sub
mov
sub
addb
sub
mov
jne
hlt
cmpsb
jp
pop
mov
out
lahf
xchg
pusha
sbb
in
call
push
test
out
push
outsb
add
sbb
push
insb
add
add
adc
scas
dec
fimuls
mov
mov
filds
addr16
test
cmp
or
cmp
mov
cltd
das
popa
sbb
hlt
mov
cmc
inc
insb
clc
or
inc
dec
dec
ljmp
test
inc
fbstp
fmul
repnz
cmpsb
lock
add
cltd
pop
sub
cs
inc
ss
add
loopne
dec
stc
popa
icebp
sbb
sub
mov
push
insb
push
test
dec
iret
mov
pop
push
xchg
sub
mov
pop
dec
mov
leave
je
xchg
cmpsb
mov
fcomp
add
cwtl
loopne
dec
and
int3
ja
mov
inc
test
xor
and
xchg
fcoms
inc
or
cmc
ficompl
fwait
mov
inc
cmp
fdivrl
rcr
ljmp
orl
js
mov
mov
call
ds
fdivrs
pusha
fs
fs
cmp
lock
mov
mov
mov
lret
pop
ffreep
icebp
dec
call
mov
mov
xchg
push
cltd
and
leave
adc
sbbb
push
jb
daa
addr16
inc
rorl
mov
cmp
sbb
xchg
add
mov
ficoms
add
or
ror
mov
dec
and
btr
imull
fdivrs
sarl
stos
cmc
xor
mov
pop
push
je
pop
ret
push
enter
inc
inc
xor
cli
fidivrs
int
dec
pop
lds
cmp
fisubs
add
lret
ss
std
and
pop
and
jne
mov
sbb
test
movb
mov
lds
pop
pop
mov
lds
lahf
pop
stc
arpl
sbb
test
repz
xchg
int3
lock
stos
jge
les
dec
dec
pop
dec
and
fsubs
lds
dec
jmp
lret
lds
repz
outsl
sub
and
mov
cs
lods
icebp
pop
jno
outsb
sub
cltd
enter
jnp
jbe
pop
mov
hlt
push
jae,pn
nop
add
notb
inc
inc
shll
jae
add
xchg
repz
cmp
push
jg
mov
cld
sbb
movsl
test
je
outsb
inc
dec
in
mov
gs
mov
movsl
lea
out
xor
arpl
scas
cmp
and
mov
xchg
enter
push
add
jne
sbb
fdivp
insb
das
mov
scas
sbbl
mov
loope
xor
sub
shll
in
outsl
mov
sarl
out
dec
dec
inc
xchg
into
adc
mov
pushf
repz
repnz
and
mov
push
notb
adc
imul
call
jns
push
xor
and
inc
dec
inc
inc
push
fbld
pop
jg
popa
fnstsw
sarb
adc
mov
outsl
scas
inc
arpl
push
daa
jge
dec
loopne
jg
mov
mov
push
pusha
xor
outsb
cmp
sbb
and
popa
stos
sar
inc
xor
inc
push
add
das
or
sbb
and
repz
inc
dec
mov
pop
sub
mov
xor
cltd
mov
test
lahf
mov
mov
lahf
add
pop
mov
jge
mov
nop
push
ss
sbb
adc
sbbl
outsl
add
gs
fs
lock
add
or
xchg
or
and
jns
and
sbb
out
xchg
cmpsb
les
pop
jmp
mov
inc
cwtl
mov
call
or
jg
sahf
scas
jmp
cwtd
xchg
lock
and
xchg
push
inc
outsb
cli
rcl
mov
lods
sub
adc
sbb
sbb
xor
jmp
adc
into
inc
ljmp
pusha
fs
insl
push
inc
push
pop
jecxz
stos
adc
mov
outsl
out
rcrl
xchg
repz
jl
js
out
xchg
mov
aas
sbb
dec
adc
xchg
xorl
into
push
cmp
push
test
daa
inc
adc
shll
mov
xchg
push
inc
iret
xor
cmp
add
push
out
stos
xchg
je
test
ret
xlat
outsb
in
pop
add
cmp
cmc
adc
jp
ret
sarl
mov
fnsave
hlt
enter
enter
xlat
loopne
adc
or
adc
pop
leave
and
sbb
ret
and
pushf
cli
icebp
adc
jb
dec
mov
pop
rcrl
int
cli
cmp
out
cmp
mov
repz
push
vpminub
mov
aas
fldcw
fucom
ret
cmp
pop
fs
sub
ja
pop
movsb
xchg
stos
je
mov
rolb
in
mov
stos
jae
push
and
xchg
xor
or
orb
cmp
popa
mov
sbb
das
mov
lock
xor
dec
cmp
cmpsb
out
pop
dec
push
pusha
mov
push
push
fucomi
jmp
cmp
daa
lret
sub
cmp
pop
lods
sahf
xor
cmp
pop
xor
js
aam
loope
mov
gs
jne
ret
jge
push
pop
mov
insl
shlb
adc
cs
mov
sub
rcrb
cmp
orl
loopne
mov
jecxz
daa
out
sbb
push
outsl
sub
adc
out
jns
iret
outsb
add
in
mov
inc
fdivs
push
pop
out
mov
repz
scas
push
sbb
sub
pop
cli
or
or
cmp
negb
sub
add
jns
repz
movsb
sbb
pusha
subb
movsl
out
in
dec
mov
scas
aaa
insl
clc
xchg
jb
adc
fcmove
leave
adc
add
and
test
xor
jne
rolb
xchg
stos
jae
xchg
mov
mov
mov
and
pop
and
pinsrw
inc
mov
sub
sbb
sub
mov
xor
sbb
mov
sub
inc
sbb
std
or
pop
sub
sbb
test
and
push
pop
jl
mov
jmp
mov
dec
leave
aad
pop
rol
and
sbb
andb
imul
jecxz
inc
dec
shlb
inc
cbtw
jge
mov
add
mov
xchg
in
ljmp
cmpl
xor
xor
jb
push
ss
ljmp
or
fwait
mov
xlat
outsb
mov
out
xchg
jo
outsb
or
pop
repz
lahf
test
mov
ret
repz
push
jae
xchg
mov
cmpsl
ret
push
cmpsl
mov
add
jne
cmpsb
sub
dec
dec
push
fcmovnb
xchg
push
dec
call
lcall
mov
mov
mov
cmp
sahf
jnp
pop
mov
dec
sahf
lock
testl
sub
pop
push
lret
fwait
je
clc
movsl
add
sbb
hlt
jo
aaa
cmpsl
push
cli
test
mov
adc
insb
daa
shll
pop
insl
andl
outsl
daa
mov
outsb
vshufps
popa
sbb
addr16
test
movsb
out
pop
lds
iret
cmp
hlt
rcrb
adc
test
mov
stos
and
mov
mov
sub
stos
notb
fwait
pop
insb
test
ficompl
xor
jp
jno
and
push
addr16
mov
xchg
adc
mov
dec
sbb
nop
negb
cmp
add
push
mov
push
jae
xlat
inc
adc
mov
cwtl
int3
inc
cmp
movsb
stc
inc
loop
add
push
mov
mov
jge
daa
pop
in
fnstcw
inc
sti
imul
aaa
movsl
in
push
dec
mov
pop
jne
dec
dec
pusha
add
or
adc
add
xchg
mov
xor
cwtl
push
xor
insb
and
or
xchg
xor
shrb
lcall
pop
repnz
stos
mov
scas
inc
mov
in
int3
sbb
jmp
addr16
xor
push
pop
daa
hlt
or
sbb
pop
jb
pop
pop
insl
cmp
gs
fmuls
mov
sarb
icebp
xchg
lahf
movsb
orl
movsb
and
int
add
movsb
aas
push
adc
xor
lret
mov
cmc
loope
lret
dec
out
dec
and
sub
sub
aas
rcrb
mov
fnsave
sub
sbb
aas
push
decb
sahf
pop
pushf
xchg
sbb
and
push
insb
sub
inc
pop
xor
imul
adc
outsl
inc
hlt
cld
mov
mov
jp
xchg
cmp
sti
or
mov
dec
nop
inc
mov
aad
xor
enter
sub
jge
mov
add
xchg
adcb
mov
cmpsb
dec
into
and
sbb
mov
dec
fidivl
sbb
pusha
or
ret
and
je
push
movsl
adc
sub
jbe
in
mov
std
or
dec
movsb
jle
mov
rolb
in
xchg
clc
and
or
push
je
jnp
nop
insb
jmp
sti
pop
jg
adc
int
add
frstor
xor
add
push
and
sub
in
stc
mov
je
into
pop
xchg
mov
xor
into
push
lahf
filds
fildl
popf
test
xlat
inc
ret
jecxz
sub
or
cwtl
out
xchg
std
outsl
lahf
dec
dec
jecxz
stos
ret
pop
loopne
xchg
loopne
inc
mov
xchg
mov
nop
test
arpl
dec
rcrb
inc
out
sub
incl
out
dec
dec
fnsave
dec
and
inc
int3
out
ja
gs
sbb
dec
xchg
iret
fildl
xchg
sbb
call
sbb
cmp
outsl
ljmp
andl
sahf
imul
aam
fistl
fmull
dec
icebp
xchg
lcall
mov
orl
or
add
js
lock
inc
dec
cwtl
and
fidivl
sbb
push
cmc
inc
in
lock
jecxz
push
data16
lods
sbb
jbe
pop
cwtl
into
push
gs
aas
sub
mov
adc
cmpsl
loope
mov
ja
xchg
in
or
popf
ds
not
stos
inc
mov
push
jmp
mov
insb
mov
dec
iret
cld
xor
push
inc
mov
rclb
int3
lret
pop
scas
xor
xlat
outsb
loopne
ss
and
push
inc
or
fsubrs
jge
lods
insl
or
xor
loop
aas
aad
adc
rcl
push
jmp
repz
pushf
xor
setne
nop
add
iret
inc
shlb
outsl
mov
mov
jg
shrb
lods
inc
jno
lret
xchg
lret
lret
sahf
fisubs
adc
stos
into
pushf
cli
bound
add
or
lahf
inc
xchg
sub
jle
xor
shll
ret
pop
outsb
mov
pop
std
adc
bound
imul
xor
cmc
mov
enter
or
xchg
jnp
lret
push
mov
scas
xchg
ss
cmp
xchg
or
clc
clc
sbb
mov
push
ds
out
cmc
sbb
fisttpll
xchg
sub
movsl
cmp
pop
mov
cmp
sarl
inc
ret
insb
cwtl
das
sahf
push
loopne
fiaddl
sub
mov
ret
inc
dec
outsb
xchg
jb
or
shlb
cmc
mov
daa
ljmp
in
lds
pop
jne
adc
mov
pushf
xor
xorb
or
lcall
and
xchg
pop
test
in
ds
and
nop
sahf
aas
into
mov
push
das
jbe
loop
push
enter
lahf
sbb
pop
aas
pop
xlat
outsb
mov
cmp
fimuls
pop
repnz
ja
adc
push
lods
cli
scas
xchg
loope,pn
insl
add
cs
xchg
pusha
pop
mov
mov
call
repz
add
inc
pushf
pop
mov
data16
xchg
std
pop
hlt
das
mov
jnp
xor
mov
aad
mov
lea
call
loopne
outsl
push
loope
adc
popf
inc
sti
sub
and
cltd
dec
sub
push
out
mov
jp
and
mov
or
inc
fsubs
mov
fsubrl
inc
fsubrs
jg
xorl
mov
sub
into
fsubrs
arpl
das
adc
push
out
mov
data16
mov
mov
mov
sub
xlat
outsb
and
dec
movsl
inc
mov
js
call
call
or
jb
push
dec
jb
jle
icebp
mov
lahf
nop
daa
rcrl
adc
and
lds
xchg
mov
ret
insb
xchg
sub
jg
scas
add
ret
mov
jl
dec
mov
jle
xor
pop
out
cltd
lock
lcall
sub
mull
and
incl
in
cmc
push
out
test
jge
outsb
add
daa
test
movsl
mov
fs
fistps
test
mov
fs
cwtl
imulb
add
mov
fs
sub
cmc
into
gs
sarl
inc
stc
je
xor
inc
xchg
and
xchg
out
mov
mov
cmp
ss
add
call
mov
aam
adc
scas
push
in
fsubl
call
stos
sub
dec
mov
adc
add
xor
xlat
and
mov
clc
dec
in
ret
repz
jnp
and
das
ret
mov
out
das
and
cmc
das
ret
ljmp
and
dec
xor
or
icebp
in
adc
pop
or
cmp
lock
jmp
cmp
xor
mov
ds
mov
sbb
insb
add
hlt
cmp
ljmp
imul
and
hlt
jmp
add
and
imul
lock
in
lea
and
popf
xor
les
test
das
das
push
jmp
sti
jg
sub
add
xor
mov
pop
loop
sub
lret
test
cli
pop
pop
lock
in
hlt
sbb
inc
fnstsw
in
cmp
and
fdivl
dec
sbb
jg
dec
fbld
stos
xchg
les
dec
testb
stos
xor
loop
sub
mov
lods
xchg
sub
in
subl
in
mov
insl
sub
adc
xor
add
call
sbb
les
clc
out
arpl
sbb
adc
xchg
inc
mov
movsl
loope
pop
cmc
add
sbb
dec
mov
and
imul
insb
add
mov
add
je
outsl
push
cmp
jmp
sbb
outsl
jge
dec
in
test
dec
filds
dec
push
decb
xchg
sub
fldcw
incl
xchg
loop
mov
stos
repz
sbbb
and
std
pop
xchg
push
popf
leave
sti
push
stc
xchg
pop
popa
xchg
fs
lds
mov
pop
mov
in
shrl
inc
pop
or
scas
inc
data16
push
shrl
cmpsb
cmp
dec
inc
testl
js
or
xor
call
ds
add
arpl
aam
scas
fnstenv
stos
push
in
ficoml
sbb
cmpsl
test
adc
daa
std
mov
sub
jbe
stos
inc
jp
xlat
outsb
les
xor
arpl
cmp
insl
inc
call
mov
loopne
sbb
pop
push
in
mov
stc
inc
xchg
mov
pop
xchg
pop
pop
repnz
jge
enter
adc
mov
inc
xchg
cmc
mov
faddl
lcall
lcall
loope
mov
pusha
lret
bound
mov
mov
push
scas
inc
cmp
les
imul
inc
mov
movsb
push
bound
cmpsl
dec
mov
mov
loope
stos
adc
imul
aas
aad
sub
loop
mov
pop
or
dec
repnz
push
sbb
testb
out
mov
mov
or
cmp
cli
jecxz
out
sbb
add
adc
xor
mov
and
jp
sub
push
in
and
inc
inc
fstpt
mov
jne
insb
add
xchg
test
mov
jmp
pusha
divl
xchg
sub
cmp
rorl
jmp
or
mov
pop
mov
insb
lods
fimuls
movsl
bswap
repz
xor
push
arpl
mov
xchg
xlat
or
or
push
push
sub
or
imul
mov
les
icebp
and
int
adc
cmpsb
inc
js
cmp
int3
add
mov
hlt
loop
mov
or
js
jp
push
jl
mov
adc
out
sbb
pop
jb
jo
sahf
mov
ret
mull
pop
jbe
imull
sub
sahf
dec
aad
jnp
mov
into
adc
inc
out
test
sbb
cmp
addr16
cltd
xor
xchg
je
ret
cvttps2pi
cmp
sbb
sbb
cmp
push
jecxz
jo
ret
or
scas
cmp
pop
pop
lea
mov
outsb
test
push
aam
test
pop
and
mov
popf
xor
cmpsl
cmp
aad
inc
fmull
xchg
inc
fadd
cmpsl
lcall
idivl
add
inc
fdivrl
cmp
jns
jg
sbb
in
and
and
stos
jge
xchg
int
and
cltd
xor
fsub
sub
xor
and
add
popa
mov
faddl
call
lods
jbe
jg
jecxz
mov
sar
rorb
fwait
mov
lock
and
xor
in
ss
xchg
mov
iret
push
test
call
movsl
jge
shl
out
xchg
pop
xchg
cmpsl
int3
cmp
adc
pop
inc
mov
dec
sti
data16
jle
mov
xchg
push
outsb
mov
mov
jbe
adc
sub
insb
cmp
mov
orb
fwait
insl
mov
jae
rorl
push
mov
gs
pop
roll
sbb
jne
aaa
leave
push
xchg
in
das
xor
lock
jmp
and
je
arpl
popa
pop
lidtl
stos
jbe
divb
dec
xchg
jl
push
dec
fildl
aaa
pusha
pushf
je
lods
pop
dec
and
push
cmp
aad
or
pop
outsb
call
mov
adc
mov
xor
into
fiadds
jno
jae
scas
stos
jo
popa
imulb
aas
cmpsl
mov
fstps
stos
data16
push
cld
xchg
cwtl
ja
pop
lds
xchg
movsl
insl
sub
aas
sbb
jge
popf
pushl
movsl
loopw
jo
jecxz
or
daa
enter
jbe
fwait
cmpsl
hlt
sub
in
mov
call
out
scas
adc
mov
jmp
jl
add
add
into
add
orb
icebp
jmp
jo
push
cmpsl
pop
test
jae
into
cmp
xor
test
sti
sub
rcrl
sbb
xchg
dec
adc
les
inc
push
lret
pop
pop
mov
hlt
pop
and
cmp
cmp
dec
inc
insb
push
adc
stos
jo
add
xor
cmpsb
cmp
addr16
mov
xor
inc
cmpb
popa
adc
lret
jbe
in
stc
xor
in
jno
test
mulb
mov
xchg
and
pop
stos
sub
das
icebp
fmuls
push
mov
je
movsl
add
sahf
in
jecxz
mov
cmp
jge
or
popf
sub
adc
or
and
cmc
leave
inc
fcomps
jno
mov
jecxz
mov
jmp
mov
sahf
scas
pop
sar
add
movsb
mov
push
mov
loopne
pop
lock
cmpb
cmp
pop
loop
mov
fistps
shrl
imul
notl
add
loop
jg
cmp
or
jbe
sub
pop
cmp
xor
repz
pusha
adc
pop
sti
and
mov
cmp
pushf
lahf
lea
xchg
lds
mov
mov
sub
mov
xchg
push
jo
insl
mov
sub
inc
jne
jae
fmuls
xchg
or
push
das
lods
orb
jae
inc
inc
jbe
bound
bound
aaa
fmull
scas
arpl
repnz
pushf
scas
pop
inc
int3
push
jmp
les
fstps
push
fldl
mov
out
xor
and
jns
fisttpll
popf
jg
adc
xchg
pop
cmc
sub
dec
dec
dec
push
pop
pop
ret
cmp
pop
roll
cmp
loope
or
cwtl
jle
cmpsl
mov
push
or
popf
cmp
sub
add
rclb
pop
fists
sbb
and
in
jb
dec
dec
mov
lods
jne
mov
or
mov
in
testb
popf
in
subl
xchg
cltd
xchg
in
mov
jmp
dec
loop
pop
pop
shlb
aad
roll
fbld
lods
popa
lock
testb
in
je
mov
push
jae
je
jno
jmp
scas
xor
cmc
lea
adc
mov
sbbb
ljmp
das
fnstenv
jnp
les
cmp
sub
in
aad
mov
aad
cltd
aam
jecxz
mov
jl
cmpb
mov
es
fcompl
push
jecxz
ja
in
lods
leave
pusha
fisubrs
adc
cmp
in
sbb
xchg
or
sub
psubd
clc
push
out
mov
smsw
mov
sbb
lods
rcll
xor
pop
mov
adc
sub
jl
leave
pusha
stos
sub
sub
and
pop
jbe
rorl
cmp
xchg
insb
sti
mov
testb
pusha
sub
pushf
test
mov
mov
xchg
es
int
inc
es
insb
inc
mov
jnp
pop
rcrl
cmp
add
and
in
test
inc
pushf
xchg
dec
rcl
inc
jne
les
fsubrl
and
add
je
into
xchg
mov
xor
mov
cmpsl
ret
push
in
hlt
hlt
pop
adc
pop
dec
xchg
in
das
fistl
sub
xchg
aam
std
into
adc
mov
movl
inc
fidivs
push
iret
loope
data16
fcmovb
inc
int3
fdivrp
jne
iret
int
mov
fldcw
loopne
mov
aad
mov
out
lret
xchg
scas
inc
jmp
outsl
movsl
cmpsb
mov
ljmp
cs
xor
push
jge
sbb
sbb
jl
cmp
aas
decl
inc
fnsave
pop
or
inc
ret
pop
inc
fcmovnbe
dec
into
gs
mov
test
jb
hlt
xchg
cs
or
inc
mov
aaa
test
xchg
jnp
shl
jl
inc
add
mov
pushl
js
jb
sub
dec
les
std
loope
sub
xor
cmp
or
push
mov
dec
sub
pop
pop
xlat
and
jecxz
mov
jp
sbb
cmp
imul
inc
sbbb
test
icebp
mov
in
jp
or
jp
data16
inc
mov
push
dec
xor
jo
movsl
cmp
xchg
test
testb
aad
xchg
mov
push
adc
dec
gs
jl
cli
and
cltd
jnp
cli
mov
dec
pop
mov
ret
aaa
jns
inc
or
sub
inc
je
mov
popa
movsb
cmp
xchg
jb
inc
loope
sahf
roll
lret
inc
cltd
cld
sub
sbb
int3
xchg
cs
mov
aas
ret
imul
inc
cmp
push
mov
in
test
aaa
into
or
jle
mov
rolb
adc
js
mov
insl
adc
bound
adc
ja
cmp
and
sbb
notb
es
or
sub
into
push
lea
xchg
in
scas
or
pop
cli
test
push
add
mov
lret
addl
sub
mov
jmp
xor
fidivs
jns
push
jo
out
and
inc
cmpsl
pop
push
inc
in
sarb
int
ljmp
stos
sub
dec
aam
lcallw
testb
les
mov
ret
jmp
rorl
int3
fdivrs
shr
test
fldt
aam
cmpsl
mov
rol
cmp
pusha
pop
loope
xchg
xor
push
mov
jmp
pushf
imulb
dec
or
cltd
lea
test
pop
icebp
cmp
roll
mov
clc
std
push
int
and
or
pop
repnz
insl
cmpsb
jbe
cmp
fnstsw
dec
mov
aas
stos
inc
mov
inc
mov
jle
push
je
or
xor
cmp
push
add
inc
mov
xchg
pushf
cmp
xor
xor
imul
push
or
test
xor
mov
and
adc
inc
cmp
mov
cmp
das
jno
jb
jecxz
sub
dec
mov
adc
push
lret
mov
divb
aam
pop
and
xchg
and
jns
sbb
mov
ljmp
or
movsl
sahf
les
or
ljmp
out
adc
adc
jecxz
in
in
and
pop
mov
xchg
inc
jae
in
movsb
aaa
xchg
nop
jmp
jp
add
outsb
add
es
int
mov
ds
adc
xor
mov
dec
pop
rep
push
dec
push
lock
fdiv
push
lods
pop
imul
aaa
sub
in
cmp
aam
cltd
dec
pop
mov
sbb
popa
clc
je
into
inc
loope
xor
rcrb
lock
and
jle
mov
pusha
pushf
push
ror
aaa
in
outsl
mov
ficompl
shlb
sbb
lret
fldt
in
xchg
ret
mov
imul
test
shl
jno
sbb
xchg
cmp
imul
and
fildll
orb
pop
rcrl
sub
sbb
das
fsubs
and
pop
setbe
dec
sbb
mov
dec
sbb
pop
out
gs
mov
sbb
movsb
pop
cltd
xor
es
adc
pop
punpckhdq
push
push
push
jmp
dec
sub
jmp
dec
adc
in
or
pop
mov
adc
scas
shlb
loop
pop
adc
gs
das
aaa
ja
jg
push
and
mov
jbe
stc
cmpsl
sub
sub
xlat
clc
sub
mov
push
movsl
push
push
in
daa
and
mov
out
mov
lea
sub
mov
cli
inc
sbbl
stos
std
aam
into
call
fsts
xchg
ret
push
fildl
int
aad
add
mov
out
xchg
roll
mov
mov
ljmp
jbe
and
out
cld
sub
sub
push
pop
adc
incl
xor
cs
dec
loope
pop
mov
jmp
dec
and
dec
jl
stc
nop
push
cmp
int
sbb
subl
sub
fistpl
aaa
mov
icebp
sbb
cwtl
mov
ret
out
filds
lcall
xchg
xor
daa
xchg
adc
jae
mov
popa
add
xchg
test
nop
mov
pushf
adc
sub
or
jecxz
jb
outsb
mov
ds
daa
mov
sti
push
stos
scas
jns
push
inc
into
data16
mov
les
in
pop
push
push
hlt
pop
dec
push
dec
pop
and
pusha
pop
mov
sub
test
mov
int3
inc
push
xchg
inc
push
xor
inc
pop
jge
add
add
test
dec
sub
and
inc
das
pop
icebp
pmaddwd
pop
incl
push
popf
repnz
cmp
pop
adc
adc
ljmp
arpl
sub
jae
out
movb
inc
ficoms
popa
into
inc
inc
test
pop
ljmp
mov
mov
mov
dec
in
mov
push
and
lods
inc
sarb
xchg
pop
repz
mov
aad
xor
loope
and
ret
fnstcw
test
inc
scas
sahf
mov
pop
gs
cmpsl
pop
aam
ss
push
decb
xchg
add
clc
push
mov
lock
icebp
lods
iret
lds
int
xchg
jmp
mov
xchg
or
lahf
ss
sub
cld
es
mull
xor
cmc
push
in
push
cmp
xor
dec
cld
xor
mov
into
push
outsl
divb
addr16
repz
jae
xor
loop
adc
shlb
and
sub
out
pop
outsb
fdivs
cmp
mov
dec
cli
fwait
int3
xor
sti
outsb
xlat
dec
pop
mov
test
shrb
std
shl
dec
lcall
addb
lds
jbe
int3
sarb
rclb
clc
mov
cmp
cmp
sbb
sub
jecxz
dec
ret
shll
inc
fcmovnb
mov
mov
dec
mov
stc
mov
mov
mov
repz
insb
add
fwait
test
lock
sbb
mov
lock
jl
cmp
add
js
pop
aam
dec
or
push
push
sub
gs
sbb
jnp
icebp
xchg
sbb
popf
fwait
aaa
or
inc
leave
cltd
mov
xor
or
loop
sahf
leave
bound
out
mov
adc
sub
mov
loope
push
xor
aaa
pop
pcmpeqw
push
loop
cmpb
jl
sbb
stc
mov
push
jmp
pop
push
push
cmpsb
scas
inc
mov
in
push
nop
mov
pop
lret
rorl
adcb
leave
inc
int
pop
xchg
int3
jnp
mov
les
enter
add
bound
and
popf
pushf
icebp
mov
adc
mov
xchg
adc
mov
add
dec
jecxz
and
cmp
adc
repz
xorl
cli
and
or
sub
jp
dec
sub
jl
dec
pop
mov
out
les
jg
sub
mov
sbb
inc
adcl
and
inc
or
shrl
sub
mov
stc
mov
loop
aad
subl
lret
das
lods
mov
inc
mov
pop
ret
pop
shl
xchg
adc
and
or
imul
fsubrs
loop
jecxz
scas
cmp
enter
sbb
mov
or
rcl
cltd
mov
cld
xor
hlt
jle
mov
cld
sub
jecxz
cli
adc
lret
inc
cs
enter
jbe
or
cwtl
insb
movsb
cmp
daa
fnsave
cmp
or
andl
adc
scas
iret
cli
cmp
mov
out
push
pop
int3
fbstp
into
fsubr
xlat
cmp
call
cmp
mov
leave
push
enter
inc
shlb
push
mov
out
xor
sti
lret
out
push
dec
add
push
lds
cmp
mov
inc
clc
outsb
fdivs
sbb
pop
popf
std
stos
inc
out
adc
and
out
xor
dec
pop
add
mov
lods
imul
adc
adc
jae
int
sbb
rorb
repnz
mov
mov
sub
xchg
xchg
shrl
pop
shll
subl
dec
out
insl
repnz
cmp
xor
daa
cmp
lret
pop
divl
pusha
out
xchg
lds
clc
xor
int
mov
add
rol
movsb
push
fdivl
addb
xchg
adc
js
xchg
xor
ja
pop
out
adc
push
dec
ss
mov
dec
rcll
repnz
rcrl
clc
dec
fmull
lret
dec
sbb
call
rep
jecxz
movsl
pusha
sbb
es
mov
jne
test
subl
add
sub
sub
add
push
dec
lea
sbb
cmp
dec
loope
push
aam
xor
pop
mov
jns
pop
dec
aad
in
mov
mov
inc
sbb
add
pusha
divl
cs
fwait
push
jno
push
out
fmuls
pusha
into
ja
mov
call
scas
mov
inc
jl
lcall
jnp
pop
mov
or
pop
frstor
popa
nop
cld
xor
xor
pusha
xchg
fimull
mov
and
xchg
scas
jae
nop
fcoml
xchg
dec
xlat
jnp
xor
addr16
stos
pop
sub
stos
pop
mov
adc
mov
addr16
fsubrs
test
mov
jne
aam
adc
add
dec
test
call
into
gs
add
sti
repz
mov
rclb
out
xor
sbb
sbb
add
mov
testl
ds
out
pop
imul
sahf
sub
es
pop
inc
sbb
push
dec
or
dec
push
jmp
gs
add
cmp
dec
cmpb
xor
push
adc
xchg
push
inc
push
add
js
jno
jmp
adc
adc
lods
xor
and
mov
aaa
in
mov
adc
push
or
mov
ret
xchg
mov
mov
fiadds
shl
mov
add
fcomps
adc
xchg
stc
add
les
jp
dec
shll
fcmovb
push
xchg
push
les
clc
test
adc
shlb
mov
push
in
cmp
repnz
adc
mov
hlt
sub
push
arpl
aas
mov
jo
ds
pop
lcall
mov
mov
dec
aam
aam
mov
mov
repnz
movl
add
ficompl
sbb
rorb
push
sbb
fldt
push
out
cmp
sub
or
ficoml
cltd
pop
stc
sbb
mov
clc
pop
lock
mov
fsubs
mov
dec
push
ljmp
imul
gs
pop
fs
jge
mov
out
push
leave
mov
incl
push
jne
shll
pop
dec
and
cmpsl
pop
sti
sub
adc
aas
pop
or
sub
jmp
int
lods
inc
nop
out
mov
test
pop
hlt
sub
data16
push
jle
mov
cmp
jp
inc
rclb
pop
pop
inc
cmp
inc
orb
mov
fstpl
adc
sub
outsl
pop
sahf
mov
adc
xchg
hlt
data16
ret
fcoml
icebp
jne
into
xchg
faddp
pop
faddl
mov
jmp
adc
fiadds
mov
add
daa
mov
test
mov
popf
mov
push
sbb
nop
pop
cwtl
xchg
scas
bound
sbb
xor
xor
or
movsb
or
ds
testl
in
and
sub
xchg
xchg
adc
insl
lahf
pop
hlt
or
test
mov
pop
or
cmc
xor
fs
mov
mov
arpl
mov
jno
mov
mov
cmpb
mov
movsl
mov
add
push
test
and
inc
lea
js
lahf
and
icebp
lods
or
adc
pop
xchg
jp
mov
daa
clc
cmp
or
cltd
bound
adc
inc
test
lret
lock
adc
fs
aas
call
inc
xor
adc
popa
jne
inc
lock
rcll
test
ret
fisttpll
idivb
les
mov
mov
xor
dec
mov
xchg
lret
bound
xorl
dec
jb
inc
movsb
sub
push
xchg
lds
call
mov
mov
loop
pop
dec
mov
dec
dec
into
push
dec
out
test
pop
inc
les
movl
push
lods
pop
dec
dec
jnp
mov
ss
sti
sub
jne
test
sarb
aaa
cmp
xchg
jo
test
leave
or
test
push
int
data16
jns
cmp
mov
ds
cmpsl
enter
cmp
dec
loopne
pop
movsb
imul
adc
xor
xchg
mov
rcrl
pop
shrb
ds
clc
sub
mov
hlt
push
pop
ret
and
imull
add
xchg
adc
mov
cli
xor
sbbl
out
xor
inc
xor
cltd
dec
push
dec
mov
inc
push
pop
mov
push
cmp
shlb
shl
in
sub
dec
mov
das
sbb
push
mov
push
dec
sbb
mov
call
mov
fmull
fbstp
xchg
dec
int
add
sbb
cs
sub
jne
jmp
shll
popf
fiadds
mov
outsl
xor
push
mov
mov
std
das
cs
cmpl
dec
mov
push
and
jle
xchg
xchg
imul
scas
jl
dec
lahf
cmpsb
popf
andb
push
shlb
inc
enter
cmp
movsb
pop
mov
mov
aam
es
jl
inc
fdivrs
mov
sar
out
adc
inc
fsubr
xchg
and
adc
jb
in
mov
pusha
aam
add
cmpl
cmp
sarl
addr16
dec
adc
dec
cltd
inc
dec
jecxz
mov
inc
fcmovbe
lahf
les
and
mov
jo
ljmp
jbe
test
rorl
fstl
je
sub
mov
sub
cwtl
sahf
cmpsb
lds
cli
jae
jb
jne
shll
clc
push
and
cmp
and
sbb
outsl
jne
std
das
pusha
xchg
xchg
jl
push
push
pop
pop
cmp
or
xor
sub
cs
arpl
flds
out
xchg
mov
push
rcll
mov
lcall
pop
fadds
cwtl
adc
xchg
cmp
cli
aas
add
loopne
sub
adc
psrlq
ds
icebp
pop
nop
and
lods
loop
fcoms
iret
xchg
sub
data16
mov
ficompl
xchg
sub
xsha1
cmpsb
dec
adc
mov
sub
mov
adc
inc
js
enter
pop
cwtl
lret
sti
mov
outsb
add
outsl
mov
popa
popf
xor
push
inc
or
popa
xchg
inc
ffree
subb
movsb
xor
adc
aaa
push
jmp
pop
mov
mov
sbb
dec
xchg
pop
scas
ret
out
popf
jecxz
adc
jne
icebp
xor
leave
and
ffreep
pop
adc
stos
dec
jp
add
int
pop
mov
out
out
test
fidivrs
mov
cmpsl
dec
xor
or
call
sbb
cmpsb
push
dec
pop
cmc
jl
inc
fsubrl
test
iret
mov
andb
mov
loopne
sarb
dec
and
xor
and
push
stos
jbe
jp
jb
jo
roll
cwtl
add
testl
sbb
jle
dec
lods
les
jo
repz
jbe
cmc
cmpsl
gs
enter
xor
insb
bound
pop
adc
repz
int3
std
xor
cs
shrl
mov
cmp
pop
shll
ret
arpl
insb
cld
and
xchg
xchg
xor
sbb
ret
fmull
stc
jg
jle
icebp
push
stos
andb
mov
inc
fsts
ret
adc
aam
pop
pusha
mov
insl
xor
lcall
stc
cmp
inc
and
ret
jle
es
add
mov
mov
aas
pushf
outsl
dec
jg
mov
popf
pop
lret
es
mov
loopne
push
mov
sub
rclb
and
mov
fs
pop
lods
jo
jno
insb
imul
rorl
and
lods
xor
or
mov
mov
pop
inc
sub
cs
dec
xchg
iret
sub
fdivr
ds
stos
loopne,pn
idivl
fs
push
shll
rclb
jne
mov
push
loopne
movsl
aad
jp
mov
cmp
mov
hlt
sbb
int3
mov
inc
or
stos
lods
cwtl
xchg
shll
out
jno
dec
xchg
mov
push
adc
push
mov
repnz
or
push
jg
data16
ror
or
jbe
inc
iret
mov
incb
clc
lret
out
push
in
xor
push
or
cwtl
into
cwtl
adc
cmc
sub
and
jb
mov
or
in
imul
mov
mov
dec
pop
push
mov
cli
pushf
hlt
pop
fldenv
adc
les
or
test
mov
mov
fimuls
cmp
mov
sub
fs
lds
testl
jg
mov
push
dec
xor
add
mov
xchg
push
push
inc
adc
leave
fistps
mov
aas
shl
fwait
imul
jge
jnp
fists
lea
rcl
jmp
push
pop
jbe
call
insb
lds
xchg
push
movsl
sbb
mov
inc
pop
ficomps
or
push
lds
push
xor
movsb
dec
mov
jp
mov
loop
jnp
in
xchg
lret
sub
xor
cli
xchg
repnz
test
test
lods
inc
push
leave
in
or
add
sti
xchg
pop
lock
out
jns
lock
call
push
insl
add
or
insl
jle
call
xchg
lret
mov
mov
dec
inc
movsl
cmp
lock
mov
fmuls
mov
cmc
push
mov
rolb
xlat
outsb
lock
push
sbb
xor
sub
into
pop
idivb
pusha
gs
push
enter
push
mov
xor
pop
and
mov
repz
popa
clc
fistpl
je
lahf
ss
out
cld
fcomps
pusha
push
xchg
sub
jb
jle
sbb
pushf
push
outsb
fdivrl
pusha
mov
jmp
push
cmp
inc
shrl
pushf
loop
cmp
rolb
icebp
jg
stos
repnz
mov
pop
cld
daa
roll
xchg
jmp
clc
mov
test
ret
push
stc
fbstp
mov
js
leave
pop
cld
cmpsb
xchg
jge
mov
clc
ror
fsubl
xchg
sub
arpl
xchg
icebp
scas
fadds
repz
dec
dec
adc
cmp
cs
xchg
test
dec
adc
popf
inc
jl
fs
outsb
addr16
add
insl
mov
stos
inc
pop
js
orl
jp
xchg
jnp
enter
call
pop
push
cmp
mov
ss
sub
bound
fldcw
jbe
xor
xchg
inc
mov
mov
lods
push
divl
repnz
andl
lahf
shl
outsb
add
loop
adc
dec
fidivrl
leave
lds
jnp
jb
fwait
push
outsl
sbb
fidivrl
dec
addb
out
dec
jp
mov
stos
das
dec
movsb
xchg
aaa
jp
push
notl
sarl
mov
pop
dec
setne
enter
js
lahf
and
mov
pop
add
fidivs
cltd
jae
sbb
pminub
jns
pushf
jae
mov
mov
xor
clc
out
xor
in
aas
mov
fcoms
lock
lea
sub
movb
leave
xchg
andl
sbb
lret
inc
and
test
lcall
mov
dec
add
xchg
jmp
lcall
gs
movsb
lahf
inc
cli
daa
or
mov
mov
cmpl
movsl
inc
outsb
scas
xor
cwtl
inc
mov
fistpll
stos
ret
jae
jns
loopne
mov
mov
and
and
jno
cmpsb
aaa
xchg
cmp
jns
ljmp
stos
mov
cs
mov
jno
jl
adc
mov
mov
jp
and
mov
stos
jnp
mov
sbb
fdivrs
inc
mov
lcall
sahf
cmp
push
nopl
int3
in
pop
xor
cmp
pop
mov
mov
or
mov
dec
addr16
xor
dec
push
pop
das
ds
fmull
push
or
push
push
add
push
push
mov
shl
stc
push
cmp
push
add
pop
aaa
adcb
mov
nop
aam
add
pusha
jb
inc
adc
rcl
xchg
roll
leave
sete
adc
clc
rorl
jno
std
or
lea
jmp
fdivrs
es
add
int
nop
xchg
inc
out
pop
cli
icebp
popa
in
push
dec
or
clc
mov
into
fcom
sbb
rolb
les
xchg
inc
mov
push
add
scas
jno
fwait
push
inc
adc
shll
lea
mov
test
dec
mov
mov
mov
cs
aaa
leave
mov
leave
mov
ja
das
sahf
xchg
xor
shlb
scas
rep
cld
and
ja
loope
les
test
mov
fdivs
mov
in
adc
dec
cmp
je
icebp
adc
hlt
pusha
sub
arpl
adc
sbb
lock
fdivrs
out
pop
clc
sub
imul
mov
pop
cld
cs
add
jecxz
stc
test
jle
call
jns
push
mov
cld
ss
pop
jg
nop
das
arpl
mov
clc
cmpsl
fnstcw
out
push
and
cmp
test
clc
pop
hlt
lahf
aas
xchg
cld
in
cltd
cmp
ret
jle
push
add
mov
movsl
roll
jne
rclb
roll
push
sbb
testl
sti
loope
sbb
and
ret
mov
rclb
into
stos
cs
dec
inc
adc
not
mov
mov
inc
out
dec
movd
xchg
xchg
pushf
aaa
sbb
and
ja
cmp
mov
cmpsb
push
rcl
or
gs
or
add
aad
gs
repz
nop
in
inc
adc
movsl
add
jecxz
mov
jb
adc
iret
aad
gs
jno
sti
pop
adc
xchg
dec
push
enter
popf
dec
hlt
mov
mov
jp
inc
or
jns
mov
or
rorl
mov
pop
and
and
gs
mov
invd
outsb
sbb
rcrl
stc
mov
pushf
inc
sbb
cmpsb
js
mov
imulb
lahf
ja
roll
pop
dec
adc
test
sbb
std
arpl
xlat
outsb
idivb
pop
jg
fnstcw
jo
mov
push
inc
or
jne
adcl
jmp
add
popa
out
push
sti
add
sub
push
inc
or
jmp
negb
pushf
xchg
cmp
xor
jmp
xchg
das
mov
or
jl
jge
dec
jecxz
aas
movsb
pop
repnz
les
mov
mov
rcr
sbb
jecxz
jbe
cmp
jno
mov
sub
push
push
sti
and
mov
push
int3
aad
inc
or
lock
in
outsl
inc
or
jmp
ljmp
movsl
sub
fcmovnb
mov
pcmpeqb
fs
or
jno
lds
filds
and
loopne
aaa
mov
sub
shr
cmp
sub
fwait
inc
push
cmp
sub
mov
stos
ss
cmovne
xor
xchg
pop
movsl
mov
mov
sub
lods
das
scas
ds
jb
mov
pop
add
cwtl
inc
or
aam
ljmp
movsl
sub
mov
mov
add
adc
pop
add
sub
repz
add
test
push
in
rolb
mov
out
sub
sbbb
fmul
xchg
sbbl
dec
mov
mov
insl
iret
xchg
mov
fistl
fnstsw
add
push
fistpll
xchg
mov
movsl
jns
push
pop
xchg
inc
pop
mov
pop
fs
jns
mov
imul
mov
lods
cs
stos
imul
xchg
addr16
inc
and
inc
adc
jp
sub
mov
xchg
sub
out
imul
or
mov
mull
pop
cltd
cmp
aad
call
and
aas
mov
fcoml
outsb
inc
sbb
fdivl
out
or
js
scas
lcall
std
rclb
inc
push
leave
xchg
sbb
loope
ja
and
cmpsl
push
dec
sub
les
les
jle
mov
add
mov
sub
jno
test
outsl
fidivrl
mov
aas
xchg
leave
repz
lret
outsb
call
ficoml
jnp
push
pop
repnz
insl
add
xchg
sbb
es
cs
aaa
std
fs
cs
xor
jmp
or
mov
cmp
sub
cmp
shlb
xchg
cmp
loope
movsb
test
fs
mov
ficoml
outsl
icebp
stos
xchg
aas
je
mov
sub
and
sbb
sbb
jae
cmc
stos
outsb
push
lea
jno
and
sti
xchg
stc
sbb
in
dec
sbb
insl
sahf
xchg
jle
mov
add
mov
inc
add
pop
or
stos
repnz
pop
shll
push
in
into
push
xorl
and
mov
notb
inc
inc
in
sub
cmp
test
repnz
fstpl
scas
push
and
out
adc
inc
xor
jge
pop
add
jo
or
lds
mov
add
pop
mov
pop
imul
shlb
ret
xchg
add
adc
lock
xor
imul
dec
adc
push
jle
js
enter
xchg
xchg
cmp
fbstp
lock
mov
push
inc
cwtl
mov
jnp
movsl
sub
push
mov
cs
bound
sub
mov
aad
pop
mov
test
ljmp
mov
test
sub
push
cld
lret
lea
jno
roll
cmpsb
sbb
mov
pop
mov
and
and
out
cmp
and
pop
rclb
leave
lock
arpl
outsb
dec
fdivrs
jae
cmp
mov
sub
incb
inc
adc
lods
sub
stos
enter
or
cli
loopne,pn
imul
lret
mov
or
lods
sub
sti
pop
repnz
mov
push
dec
mov
ja
lret
mov
stos
negb
dec
lret
xchg
outsb
in
push
mov
mov
jecxz
lods
data16
xchg
cltd
ss
rol
mov
jle
cmp
or
mov
leave
iret
sbb
pop
push
sbb
mov
lods
xlat
ja
fdivrs
adc
push
mov
addr16
cmpsl
and
dec
add
xchg
xlat
test
push
add
das
jp
push
pop
es
mov
mov
scas
sub
mov
push
push
aas
fcmovnbe
cmp
jecxz
scas
adc
jae
pop
pop
xchg
inc
sub
adcl
cltd
xor
xchg
mov
les
jae
fadds
dec
mov
stos
daa
lods
push
xchg
addr16
xchg
xchg
jne
jle
movb
das
bound
lods
cmp
add
pop
fnstsw
sub
repnz
and
and
test
mov
xchg
bndldx
sahf
push
adcb
sbb
cli
dec
pusha
hlt
call
jb
and
xchg
aas
jle
enter
xor
mov
jecxz
jle
sub
cmpsl
lahf
jne
imul
cmp
mov
mov
xorl
push
adc
inc
jp
cmc
popa
xchg
cmpsb
sub
ja
ret
pop
mov
popf
imul
lret
mov
scas
test
sub
xchg
push
mov
int3
sti
pop
add
mov
shlb
dec
push
les
adc
push
repz
push
push
xchg
inc
inc
adc
mov
sbb
ror
clc
popl
adc
test
inc
data16
and
and
outsb
push
xor
bound
shll
test
std
popa
and
call
mov
and
mov
mov
imul
into
fsubrp
insl
mov
ret
hlt
arpl
push
out
bnd
aad
lret
outsl
inc
or
sbb
repnz
adc
push
arpl
test
daa
mov
fldl
add
stc
adc
inc
and
repz
pop
xor
adcb
and
jae
and
cmp
jo
in
cld
pop
out
out
jb
outsl
jmp
mov
xchg
inc
mov
jae
fildll
push
add
jnp
fbstp
aam
xchg
aas
sahf
or
jne
shrl
test
aaa
and
and
loopne
cmp
out
cmp
pop
mov
cli
pop
shlb
cs
push
js
inc
addr16
cltd
bound
mov
lods
jae
fs
xchg
cmp
int
pop
mov
mov
or
sbb
fwait
je
filds
and
push
mov
xor
pop
jmp
xchg
add
xchg
jg
stos
and
clc
push
adc
adc
xchg
xor
stos
or
mov
stos
mov
mov
add
and
fdivrl
repz
pop
or
lret
sbb
push
lahf
mov
cmpsb
dec
pop
push
inc
jb
push
xchg
adc
outsb
pop
add
loop
into
pop
mov
pop
int
sub
adc
repz
cmp
out
pop
clc
jno
ss
divl
mov
fildl
stos
jne
cmp
and
jne
cli
lods
inc
sub
dec
stos
xor
les
flds
xchg
cmp
xchg
repz
in
lods
xor
lock
push
xchg
test
xorl
movsb
imul
mov
xlat
cmp
xor
pop
clc
jmp
xchg
inc
ja
fistpll
jo
lret
std
and
lret
int
out
std
pop
sub
mov
sub
mov
pushf
hlt
sub
insb
mov
jb
xchg
mov
imul
cmp
xchg
cmp
iret
int
mov
addr16
fistpll
xor
popf
orl
lcall
cwtl
or
int
add
sarl
add
fnsave
fwait
xor
fwait
sbb
movsb
sub
push
sti
pop
stos
inc
scas
sub
adc
jp
jae
in
push
outsb
push
xchg
sub
dec
mov
popa
cwtl
rcrl
shlb
out
je
test
xor
mov
sub
aas
outsl
repnz
dec
mov
mov
add
inc
adc
pop
or
jmp
repz
pop
xor
xor
push
add
pop
pop
lock
insb
mov
sahf
push
stos
xor
repz
pop
insb
mov
inc
xchg
cmp
je
mov
inc
paddq
lret
scas
mov
fiadds
sbb
dec
inc
cmp
out
push
pop
mov
js
clc
fnstcw
movsb
stc
sarl
mov
jp
movsb
mov
add
mov
jbe
je
push
testl
push
lods
xor
test
cmpsb
js
or
in
add
lcall
push
aam
dec
push
fisttpll
xchg
xor
popa
cltd
mov
hlt
rcrb
es
cmpsb
xor
enter
cmp
in
pushf
mov
iret
lods
out
test
lock
push
jl
sbb
mov
pop
lret
jmp
fiadds
dec
je
dec
mov
mov
push
cltd
xor
cmp
rol
xchg
cmp
or
inc
mov
scas
xor
mov
cmpsl
mov
xor
loope
outsl
pushf
cmpsb
cmp
push
jp
orb
inc
daa
cwtl
sahf
cmp
sbb
mov
cmp
sbb
inc
mov
mov
xor
dec
adc
mov
ss
ja
adc
ljmp
mov
fsubr
add
sub
int
xor
inc
or
mov
lahf
inc
dec
lcall
cmp
cmp
test
mov
out
lods
in
std
imul
out
loop
sar
std
xchg
sub
dec
mov
adc
adc
mov
add
lods
inc
cli
lock
out
adc
dec
out
mov
lcall
xlat
les
sti
add
inc
out
jnp
and
dec
adc
repz
adc
pop
rcll
lea
sub
and
jecxz
adc
dec
cmc
fistpll
xchg
jp
repz
xchg
in
or
mov
mov
xchg
xor
das
fistpll
sub
fldt
mov
mov
in
mov
xlat
gs
xchg
or
cmp
sbbl
pop
and
ret
fmuls
out
test
fistl
aam
adc
sahf
jne,pn
jno
xchg
cmc
addr16
inc
dec
out
dec
or
das
aaa
pop
cld
shll
pop
jge
sbb
icebp
adc
mov
popa
jno
inc
dec
ds
jae
dec
xchg
icebp
mov
or
out
fstpl
into
pusha
ljmp
pop
add
and
jo
scas
xor
mov
cwtl
jl
mull
gs
dec
mov
fidivrl
es
push
mov
push
into
inc
cs
dec
clc
lahf
mov
and
mulb
aas
cmp
outsb
loop
cli
mov
dec
or
repnz
lock
ficompl
or
inc
xlat
cli
fdivrl
rorl
pop
es
loop
xchg
cmp
fisubrs
mov
aad
push
sbb
dec
mov
dec
ds
ret
sbb
or
mov
rcrb
push
daa
pop
and
sub
mov
scas
cli
nop
fidivrs
sbb
adc
mulb
or
sub
lds
or
std
sbb
dec
pop
add
push
mov
sarl
faddl
lods
aad
hlt
jb
sarb
fadds
test
ret
mov
pop
add
jg
push
out
xor
mov
dec
or
cmp
push
nop
es
ljmp
js
pop
jb
icebp
jp
je
cmp
cwtl
pop
and
stc
xchg
push
dec
and
ret
pop
adc
ss
push
sub
test
fwait
sbb
movsb
imul
xor
inc
jno
leave
inc
es
add
mov
mov
add
mov
pusha
lock
ret
jp
out
sbb
shr
mov
clc
mov
fwait
sbb
inc
fsubrs
and
xor
test
jb
xchg
mov
mov
scas
dec
fwait
mov
dec
fwait
scas
xor
enter
inc
mov
mov
sbb
mov
dec
or
sbbl
mov
jge
lret
mov
fdivl
ret
lods
sbbl
adc
ds
sub
aad
pop
xchg
sbb
or
lahf
sbb
push
dec
mov
lea
dec
adc
ret
xchg
adc
pushf
xor
icebp
push
add
aam
repz
adc
push
or
xchg
xor
and
bound
adc
lret
adc
popa
ljmp
in
lea
daa
stos
cmp
and
dec
jecxz
rcl
lahf
daa
stos
add
and
add
pop
add
push
int3
xchg
int3
mov
lret
enter
jmp
pop
add
enter
leave
loope
mov
mov
ss
hlt
push
or
xchg
mov
dec
sbb
popf
ret
test
and
sarb
cmp
int3
add
mov
test
inc
push
sbb
mov
testb
and
push
cmc
fcoms
int3
push
ds
cmp
push
jle
ss
stc
arpl
aam
sub
jecxz
dec
js
das
test
pushf
inc
loop
dec
adc
idivb
and
cmp
imul
in
mov
gs
push
adcl
ja
mov
cmpsl
sub
push
in
jno
mov
jg
cmpsl
xor
push
xacquire
outsl
call
iret
addb
movaps
xor
jmp
js
in
les
xor
mov
push
nop
aaa
arpl
adc
stos
mov
orl
int3
xchg
mov
stos
xor
and
mov
add
xchg
cmp
pop
mov
mov
jmp
xor
roll
jp
test
fmuls
mov
lods
outsb
in
xor
dec
or
xchg
in
lea
lret
stos
inc
sti
pop
stos
inc
xchg
sbb
push
mov
push
add
scas
and
loopne
mov
cmp
inc
fldenv
pop
ljmp
push
sbb
sub
sub
ss
mov
and
and
sbb
fwait
inc
mov
sub
shr
push
shl
pop
test
mov
test
aam
out
mov
call
add
ljmp
push
clc
and
iret
imul
cli
cmpsl
jge
movsl
gs
or
je
out
pop
inc
in
pop
mov
movsl
adc
xchg
cmp
inc
dec
movd
jp
jp
gs
xor
fs
xchg
js
add
in
adcl
movl
in
inc
push
sub
sub
das
scas
jle
add
cwtl
addr16
stc
pop
ret
test
pop
add
jo
scas
pop
dec
or
cmp
mov
and
imul
inc
das
dec
xor
ret
stc
pop
sbb
inc
inc
adc
adc
sbb
insl
jmp
inc
cltd
aaa
jg
jne
pop
rorl
fildl
fnsetpm(287
jnp
mov
jp
filds
sbb
les
int3
xchg
or
loope
pop
pop
add
dec
inc
out
je
cltd
jecxz
mov
mov
in
pop
mov
aaa
imul
mov
out
sub
test
ds
outsb
and
adc
pop
lcall
push
out
in
inc
nop
test
sahf
iret
mov
mov
push
fsubrl
sbb
cli
lahf
and
jae
xor
lods
lahf
ss
jmp
jno
mov
pop
cli
and
pop
loop
mov
mov
pusha
outsl
lret
jbe
xchg
pusha
popa
pop
add
mov
mov
inc
mov
leave
xchg
in
icebp
pop
push
rep
out
jp
hlt
cmp
mov
jb
stos
lods
inc
adc
mov
jne
movsb
lcall
pop
fiadds
push
jnp
scas
aad
imul
cmp
fistpll
push
aam
outsb
orl
fsin
fs
sub
imul
or
sub
inc
or
test
inc
int3
jns
dec
movsb
loopne
push
xchg
mov
mov
pop
push
lahf
sbbl
xor
shll
stc
fs
or
mov
push
inc
ss
mov
in
adc
pop
int3
daa
test
push
inc
or
add
fwait
imul
insl
push
mov
push
xchg
mov
xor
rorb
enter
test
xchg
pop
lret
test
mov
mov
lock
inc
mov
es
das
sbb
pop
stc
iret
inc
out
in
adc
xor
je
xor
fs
sub
mov
dec
adc
push
cmp
jae
pusha
in
ljmp
mov
jge
call
icebp
not
jp
in
movsl
movb
mov
stos
jmp
jp
and
mov
pushf
inc
push
mov
test
inc
mov
xor
aad
ret
es
gs
cmp
or
sub
push
lret
les
sti
xchg
jmp
lret
rcll
stc
pop
xchg
mov
cs
dec
xlat
outsb
xor
aam
and
mov
loop
xchg
push
popf
testb
mov
scas
cs
clc
pop
pop
aas
jg
pushf
inc
mov
paddsb
stc
hlt
popf
xchg
sub
lret
pop
pop
push
imul
lcall
orb
cmp
xchg
xchg
in
in
callw
lahf
aas
mov
arpl
pop
adcb
inc
insl
mov
icebp
popf
in
imul
pusha
mov
cmpsl
cmp
sbb
xchg
inc
sub
jns
sub
sub
movsl
in
xchg
cmp
negb
pop
sbb
les
clc
in
jecxz
lret
or
pusha
inc
jae
pcmpeqw
cmpsl
repnz
add
xor
lock
cwtl
sub
int
cli
xchg
int3
sbb
imul
xor
jg
mov
fwait
inc
inc
test
call
cmpsb
xor
and
ds
sub
fnstsw
es
pop
mov
mov
or
adc
push
add
hlt
nop
inc
popa
inc
adcb
mov
pop
notl
dec
into
xchg
lret
leave
loope
push
lret
pop
out
push
or
data16
ficoml
mov
lods
xor
test
pop
popa
sub
add
test
add
pop
push
orl
ficoml
pushf
std
pop
jb
xor
mov
sub
inc
adc
push
jbe
imul
hlt
adc
cmp
sti
jp
lds
out
push
adc
scas
xor
sbb
xor
xchg
stc
fs
aaa
lcall
cmp
fwait
cmp
orb
out
nop
icebp
pop
ss
xor
add
rolb
pop
pop
repnz
iret
test
lcall
xor
lahf
xchg
push
shr
lds
pop
add
sub
insb
out
dec
adc
notb
mov
adc
inc
sbb
or
fildl
or
cmp
fcmovnu
adc
jbe
or
xor
int3
imul
addr16
xchg
shrb
xchg
sbb
insl
push
rcrl
cwtl
xor
dec
into
das
insl
out
adc
jbe
sub
cmpsl
loopne
xchg
lret
scas
pop
sbb
sbb
adc
push
fldcw
lret
or
jge
in
push
arpl
enter
hlt
loopne
dec
out
add
fnsave
lods
xor
mov
fimull
inc
or
adc
test
movsb
sub
roll
sub
lods
shll
out
jno
gs
mov
mov
mov
cmp
into
sub
xor
in
fstps
or
mov
jbe
xlat
icebp
pop
sbb
inc
mov
into
xor
xor
test
aaa
jbe
aam
pushf
ds
adc
in
and
aad
iret
mov
push
adc
movsb
add
pushf
ds
pop
add
out
xchg
gs
stos
imulb
dec
xorb
gs
addb
jge
mov
mov
imul
pop
adc
out
pop
xorl
xchg
mov
loop
js
in
sub
enter
xchg
adc
std
pop
push
enter
pop
int
movsb
inc
rolb
mov
cmp
ljmp
adc
add
jmp
adc
pop
add
fsubl
lahf
jnp
test
or
dec
adc
clc
sti
push
add
lcall
inc
cmpsl
xor
in
lea
xchg
loope
rcrl
jle
or
lcall
sbb
ljmp
push
je
push
jecxz
test
xchg
aas
cltd
dec
and
ljmp
add
dec
or
mov
sub
adc
add
pop
roll
jnp
ds
sub
dec
or
mov
test
xchg
popf
out
push
iret
dec
adc
pop
enter
or
push
cmp
jbe
push
push
stc
add
xchg
ds
negl
jecxz
scas
cmpl
mov
movsb
shl
mov
xlat
add
stos
addl
test
test
mov
dec
adc
or
jae
rorb
push
add
ficomps
jne
push
xchg
ds
inc
or
pusha
pop
add
sub
dec
adc
leave
xorb
mov
jo
rcr
dec
out
or
xchg
repz
sub
enter
pop
out
outsl
adc
xchg
sub
inc
mov
mov
jmp
jp
pop
orb
pusha
out
cmp
adcl
inc
adc
or
sbb
pop
push
fistpll
jmp
sub
push
push
add
imul
imul
addr16
xchg
aas
push
faddl
pop
jp
loope
push
imul
sbb
mov
sbbb
fildl
scas
sub
add
cmp
inc
int
jl
fwait
jnp
mov
rolb
dec
test
jb
imul
pop
mov
cmp
popa
push
lds
sti
mov
daa
stos
jae
add
pop
push
sarl
dec
jmp
repz
out
fiadds
mov
and
sub
fs
add
mov
jp
loopne
adcl
pusha
divl
cmpsb
push
mov
in
fsubs
xchg
inc
add
mov
fiaddl
aas
enter
pusha
and
mov
cmpsl
push
add
mov
add
imul
dec
popf
mov
jmp
sub
add
push
test
les
enter
sub
nop
pop
push
in
loopne
orb
les
jbe
incb
fidivrl
mov
cwtl
addl
sub
fwait
inc
cmpl
imul
adc
xchg
jmp
ret
lea
mov
addr16
jmp
sti
pop
in
lret
jo
sbb
sub
mov
or
ss
divb
scas
jmp
scas
testl
jg
or
push
popf
sahf
popa
or
dec
ret
push
out
pop
push
ljmp
fadds
leave
push
fs
lcall
lds
and
push
clc
enter
clc
push
popf
inc
xchg
out
inc
or
pop
fldcw
mov
fdivl
les
outsl
add
and
pop
hlt
divl
dec
mov
mov
insb
sub
adc
push
mov
imul
cltd
sbb
shll
fcompl
sub
gs
sbb
lods
jo
fldenv
mov
cmpsl
push
push
rcll
iret
ds
lock
test
jmp
jecxz
mov
imul
xchg
stc
rclb
fcmovb
xchg
xchg
and
mov
dec
dec
cs
iret
xchg
je
jp
pop
aam
rclb
jnp
cmp
add
clts
popa
or
mov
movsl
dec
or
mov
cmp
sahf
lea
addr16
inc
mov
es
stc
stos
int3
mov
scas
ds
clc
clc
dec
or
mov
inc
fiaddl
aam
lret
or
popa
clc
push
sub
adc
mov
push
bswap
daa
loope
mov
insb
std
pusha
imull
into
and
test
sub
dec
mov
cmp
and
lret
bound
dec
loop
xchg
loope
adc
orb
and
pushf
sbb
jl
shrb
jle
jle
ss
adc
sar
sbbl
fmull
inc
mov
ja
fs
inc
cwtl
test
xchg
push
push
sti
cli
bound
scas
movsl
sub
jns
out
inc
push
pop
clc
add
orb
pop
cmp
adc
test
mov
repnz
gs
aaa
mov
bound
mov
sbb
mov
repz
jl
call
negl
inc
imul
into
sti
sarb
sbb
outsl
mov
xchg
jnp
fisttpll
pop
add
pop
clc
gs
cmp
mov
sub
int3
out
ds
gs
mov
sbb
lock
jnp
xchg
sub
in
mov
scas
add
call
stc
insl
cmc
lret
push
mov
stos
mov
cmpsb
jnp
out
add
xor
addr16
inc
sub
adc
mov
inc
and
aaa
jl
sub
ss
xor
xor
and
jnp
dec
insb
mul
aas
cs
cmc
cltd
inc
aaa
pop
fbstp
and
std
xchg
loope
pop
icebp
test
sbb
xor
js
sti
push
cmp
test
cs
cmpsb
pop
out
xlat
outsl
mov
mov
ret
shrl
dec
xchg
sub
repnz
mov
shrb
cmpsl
lcall
out
test
dec
in
xchg
or
enter
xchg
jmp
mov
out
dec
fildll
aas
cmp
pop
mov
test
adc
mov
lcall
and
or
cld
xchg
pop
clc
pop
hlt
sub
mov
dec
jnp
jl
cmp
add
push
in
push
icebp
mov
and
or
leave
xchg
sub
xchg
repz
sbb
dec
dec
ljmp
mov
ret
in
test
mov
mov
loopne
add
imul
and
dec
fucomip
xchg
ds
pop
or
sbb
sub
jp
mov
cmp
jg
cwtl
mov
ret
rcrl
mov
pop
loopne
mov
cmp
xchg
fbstp
repnz
add
adc
push
cmp
sbbl
das
dec
movsb
pop
lock
mov
lahf
divb
sub
aam
repz
xchg
sub
adc
mov
mov
into
adc
shrl
mov
out
xchg
in
xchg
or
add
mov
and
cmp
push
test
mov
fldl
jl
xor
lcall
and
or
xchg
pop
negb
daa
jle
mov
dec
jnp
jp
cmp
add
out
push
out
mov
and
or
inc
aad
je
xchg
sub
xchg
repz
sbb
test
outsl
shlb
cmp
imul
test
mov
mov
fisubrs
adc
ret
mov
arpl
cmpsl
ds
push
pop
or
sbb
pop
mov
cmp
jge
cwtl
scas
add
pop
mov
pop
loope
mov
cmp
xchg
fidivs
repnz
lcall
adc
push
cmp
sbbb
das
dec
mov
mov
sahf
cmc
ja
daa
rcl
repnz
xchg
sub
adc
mov
mov
int
adc
and
out
xchg
dec
in
xchg
or
add
mov
and
cmp
imul
mov
faddl
jl
das
mov
lcall
and
or
std
xchg
pop
cmc
pop
hlt
es
mov
inc
jnp
jns
cmp
add
push
out
push
out
mov
and
cmpsb
inc
aad
jae
xchg
sub
xchg
repz
sbb
test
outsb
shlb
cmp
push
out
test
mov
mov
packuswb
ret
mov
bound
cmpsl
ds
push
pop
or
sbb
pop
mov
cmp
jl
cwtl
lods
add
pop
ss
pop
mov
push
loope
mov
ds
stos
call
mov
lds
testl
xor
pop
lock
dec
popf
repz
and
inc
xchg
sub
adc
mov
dec
lret
adc
push
mov
out
xchg
dec
out
xchg
or
add
in
ret
mov
loop
dec
loopne
add
mov
fiaddl
jge
sub
add
cs
mov
push
mov
std
xchg
pop
hlt
pop
cmc
and
inc
jl
js
cmp
cltd
lcall
in
mov
or
jno
xchg
sub
xchg
hlt
mov
sbb
test
sahf
aaa
xor
push
mov
mov
fldt
gs
xchg
mov
pusha
mov
loope
subl
pop
push
pop
xchg
daa
in
pop
mov
cmp
jp
cltd
stos
add
pop
xor
push
loop
mov
aas
dec
test
pop
hlt
mov
ret
jnp
cmc
dec
cmp
jle
lcall
imul
insl
out
inc
xchg
sub
inc
xchg
mov
leave
arpl
stos
xchg
ljmp
out
lock
push
out
nop
push
movsl
rcrl
mov
sub
adc
dec
loope
add
pushl
fadds
jle
sub
sub
ret
dec
and
add
inc
fcom
and
pop
mulb
jns
mov
inc
jge
jbe
cmp
cld
xchg
fwait
xor
sbb
mov
push
mov
ret
xchg
sub
nop
cmc
mov
push
mov
dec
jecxz
stos
adc
shrb
xor
lock
xchg
mov
fldcw
or
les
dec
loop
jg
inc
mov
push
cmp
pop
add
mov
lea
cmpsb
cmp
test
lret
sti
push
jecxz
xchg
xlat
dec
cmpsl
add
lahf
stc
pop
mov
sarl
cmp
xor
pop
repnz
addr16
adc
mov
xchg
je,pn
testb
popa
adc
xchg
call
xor
in
icebp
mov
push
call
mov
loopne
les
lods
lea
xor
arpl
stos
inc
xor
leave
pusha
test
xchg
or
movsl
cmp
stc
add
pop
mov
and
add
inc
fmul
and
pop
mulb
jns
mov
inc
jge
je
cmp
cld
xchg
fwait
xor
sbb
mov
cpuid
cmp
outsb
insl
ret
xchg
sub
rclb
dec
dec
loope
stos
adc
push
xor
enter
mov
test
mov
adc
or
lds
dec
jecxz
jge
inc
scas
pop
imul
rol
pop
add
and
scas
cmpsl
loopne,pt
add
xor
and
xchg
inc
xlat
dec
cmpsl
add
popf
stc
and
icebp
dec
ds
adc
repz
gs
adc
mov
cwtl
das
je
testb
pop
adc
nop
call
xor
jecxz
repnz
push
call
mov
loopne
lds
stos
lea
xor
std
stos
inc
das
test
mov
leave
pusha
sbb
pop
or
cmp
sub
pop
mov
and
add
inc
fmul
and
pop
negb
js
mov
inc
jge
jb
cmp
sti
xchg
fwait
xor
sbb
repnz
out
push
sbb
adc
ret
hlt
mov
mov
fists
stos
adc
imul
repnz
orl
movups
pop
bound
xchg
sub
in
jnp
inc
lods
push
insb
add
into
pop
add
and
test
fbstp
movsl
add
pop
xor
and
test
inc
xlat
dec
cmpsb
add
fwait
clc
and
out
dec
aas
jnp
fwait
xor
pop
hlt
int
mov
adc
mov
outsb
jmp
or
lea
mov
pop
adc
mov
aad
sbb
repz
call
mov
fildll
adc
dec
in
sti
stos
inc
sub
dec
leave
pusha
adc
and
mov
cmpsl
ds
cmc
add
pop
mov
and
add
add
sbb
jge,pt
jo
cmp
xor
sbb
in
push
push
outsb
jp
mov
rcrl
mov
fstl
stos
push
push
xor
pusha
mov
dec
out
push
adc
add
mov
pop
mov
in
jns
inc
stos
add
pop
pop
mov
mov
out
push
stos
test
fwait
mov
lds
mov
adcl
fmuls
add
lcall
adc
dec
aas
jns
pushf
xor
pop
hlt
lret
bound
adc
mov
outsl
call
or
mov
xchg
mov
les
in
insb
pop
scas
xor
loopne
repz
push
jmp
mov
push
cmpsl
mov
pusha
cli
lods
inc
sub
imul
dec
lret
aad
and
mov
cmpsl
ds
hlt
push
popf
and
inc
and
ja
jecxz
add
add
sbb
pop
mov
cmp
cmp
xor
sbb
jecxz
push
adc
fsubrs
mov
testb
fcoml
or
cs
pop
mov
push
out
or
test
add
xor
nop
and
dec
in
js
inc
stos
add
xor
push
mov
mov
out
push
test
add
pop
les
mov
adcl
add
cltd
hlt
and
in
inc
aas
ja
popf
xor
cwtl
pop
hlt
leave
popa
mov
adc
cltd
xor
clc
cmp
push
lods
mov
aad
adc
repz
push
ljmp
jno
test
das
or
fsubrs
lods
inc
sub
lret
bound
mov
add
cmpsl
ds
repz
sahf
and
lds
and
jp
xchg
inc
fcmove
and
cltd
push
jmp
and
insl
lds
aad
mov
hlt
dec
loope
push
adc
adc
cltd
xor
xchg
mov
ficoml
insl
xchg
sub
lret
hlt
mov
jle
call
cmp
outsl
push
add
enter
and
scas
dec
out
jbe
inc
test
outsb
add
sti
push
mov
xchg
jg
cmpsl
stos
inc
fldcw
popf
mov
ret
repz
out
jg
inc
fiaddl
add
shll
clc
xchg
repnz
jmp
inc
xlat
jne
sahf
xor
pop
mov
adc
mov
jno
cmp
nop
cmp
pop
scas
mov
insl
adc
mov
push
ljmp
jno
sbb
or
in
imull
add
rorb
adc
test
push
icebp
pop
sahf
and
pop
stos
inc
and
jnp
xchg
inc
fcmovb
pop
add
sbb
mov
imul
cmc
mov
cmc
inc
fistpll
adc
mov
testl
or
outsb
xchg
sub
lret
cmc
mov
jl
call
cmp
outsl
push
add
lea
lea
scas
push
out
je
inc
cmpsb
add
xor
leave
pusha
stc
push
lea
cmpsb
stos
inc
fsubrs
popf
sahf
stc
leave
pusha
sub
and
icebp
dec
out
jle
inc
fiaddl
add
clc
xchg
icebp
and
jmp
or
test
mov
adc
mov
jno
cmp
nop
lea
scas
mov
xlat
outsb
adc
cmc
mov
push
ljmp
jno
sbb
enter
es
dec
out
cmc
lods
inc
daa
jle
add
dec
lret
bound
mov
add
inc
push
out
pop
sahf
and
pop
stos
inc
and
jl
xchg
inc
fcmovb
push
add
dec
in
clc
push
jno
mov
imul
popf
xor
adc
mov
adc
xor
jo
mov
testl
pop
fsubrs
sub
lret
testb
or
push
pop
xor
mov
mov
fnsave
inc
movsb
outsl
push
xor
lret
push
lea
sbb
orb
inc
insb
pop
sahf
popf
test
mov
jl
inc
fildl
add
stc
xchg
out
and
call
or
test
mov
adc
mov
jb
cmp
xchg
xor
push
sbb
adc
cmc
mov
push
jmp
test
stos
mov
jb
jg
xor
or
dec
out
hlt
scas
inc
es
add
inc
int3
arpl
mov
add
test
lahf
pop
jbe
pop
test
es
sti
xchg
inc
fcmovnb
sbb
fwait
dec
in
stc
adc
adcb
roll
mov
testb
push
data16
cwtl
das
fidivl
mov
clc
mov
mov
lods
push
pusha
fsubrs
daa
xor
pop
mov
in
push
jmp
aaa
lret
jo
std
pop
xor
mov
es
stos
push
call
mov
testl
orl
or
daa
mov
out
jp
inc
faddl
add
cli
xchg
in
and
out
inc
fdivs
mov
test
mov
adc
scas
fdivl
ss
xor
sti
xchg
xor
mov
mov
outsb
push
test
into
fldcw
cmc
mov
push
in
sub
jae
jle
xor
push
mov
dec
out
repz
inc
and
inc
int
js
mov
lcall
stos
inc
push
in
or
cmpsb
ds
mov
stc
nop
inc
fadd
sbb
cli
adc
mov
mov
lock
testl
jle
xchg
sub
pushf
xor
cmp
mov
mov
scas
add
fnstenv
and
testl
xor
push
xor
xchg
daa
dec
test
jmp
mov
ret
int3
arpl
dec
mov
dec
mov
or
and
inc
call
fnstsw
cltd
push
popf
lret
sti
xchg
jmp
mov
in
inc
fldcw
mov
test
loope
adc
fbstp
xor
cld
xchg
xor
sbb
or
cmp
xlat
sub
push
in
sub
je
jl
xor
add
xchg
sub
and
mov
and
add
jbe
mov
std
xchg
in
or
stos
inc
push
ljmp
movsb
cmp
mov
testl
fs
adc
mov
fs
mov
clc
inc
fdivrs
push
xchg
sub
jae
mov
xor
jle
xchg
mov
mov
scas
add
mov
ss
scas
clc
loope
push
jmp
add
scas
xor
jb
stc
push
xor
sub
ljmp
jno
sub
int
repz
es
in
addl
inc
shlb
mov
and
jmp
fidivrs
pop
gs
sbb
inc
fisubrl
cmp
lea
mov
fistpll
adc
popf
xor
cld
xchg
xor
sbb
or
mov
push
in
daa
adcb
jp
xor
add
call
and
push
test
lret
cld
xchg
in
add
lods
inc
dec
call
lret
cmp
mov
testb
dec
fisubs
push
mov
bound
aaa
mov
stc
aas
mov
pop
xchg
sub
jae
mov
xor
scas
pop
mov
scas
add
jb
and
int
scas
stc
nop
loopne
push
jmp
add
scas
xor
jb
notl
int
sbb
jmp
imul
sub
nop
daa
jl
in
addl
iret
or
and
ljmp
xchg
or
call
sbbl
cmp
add
stc
mov
fiadds
jne
xor
xchg
test
sbb
jno
mov
clc
pop
hlt
push
in
and
inc
je
js
xor
add
push
jmp
pop
jbe
pop
test
into
gs
mov
lds
mov
mov
ret
jmp
fnstsw
fsubl
imul
sbb
inc
fucomi
andl
push
push
pusha
sbbl
pop
mov
ss
cli
xchg
lods
push
mov
scas
pop
fdivl
pop
aaa
into
push
lods
cli
xchg
fidivs
in
mov
les
notb
int
pop
xchg
sub
push
jmp
push
inc
pushf
cmc
jb
daa
mov
nop
daa
jp
in
test
scas
inc
int
or
and
ljmp
xchg
or
mov
es
loopne
inc
fldt
mov
stc
mov
faddl
jbe
das
sahf
xor
sub
dec
sbb
or
clc
pop
repz
out
and
push
lods
scas
inc
jne
ja
xor
add
push
jmp
push
je
pop
cmpsb
aas
iret
data16
mov
les
lods
inc
dec
in
mov
mov
shr
xrelease
mov
or
es
pop
mov
mov
cli
cmp
mov
sbb
mov
ss
sti
xchg
stos
add
push
ss
sbb
mov
cmp
dec
stos
cli
xchg
fdivl
or
shrl
inc
inc
int
in
hlt
push
cwtl
adc
cmp
or
cwtl
sbb
movl
xchg
addr16
mov
leave
or
ret
jmp
sarl
sbb
or
lods
outsl
out
pop
cld
jmp
arpl
aas
imul
test
push
js
loopne
or
add
xchg
xlat
out
add
nop
aam
fstps
dec
jnp
add
dec
add
fnstcw
xchg
sbb
mov
or
scas
xor
mov
push
popa
and
adc
mov
ret
dec
dec
and
xor
std
mov
andl
sub
cmp
jae
mov
es
xchg
rolb
mov
jmp
xchg
lods
xor
data16
dec
push
xor
jge
jnp
xor
dec
mov
cmp
lods
pop
adc
sub
lods
xor
sub
ror
aaa
imul
inc
aad
loop
lcall
push
repnz
orb
push
mov
mov
push
lcall
movsb
jecxz
mov
movsl
xor
scas
pop
into
jo
cmp
jnp
addl
lods
jg
lahf
lahf
ret
fiadds
sahf
sub
push
arpl
daa
adc
int
pushf
pop
jbe
mov
push
mov
test
or
or
dec
or
and
add
adc
imull
cmp
sarb
push
outsl
out
or
les
push
push
and
sub
add
pop
loop
jns
xchg
push
adc
ficomps
adc
or
push
dec
pop
shrb
xchg
add
jmp
jne
mov
push
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
push
mov
scas
mov
pop
popf
dec
push
sub
mov
sub
or
rcrb
mov
iret
jb
lret
mov
pop
cmp
sbb
call
xchg
outsl
jnp
sub
shrl
mov
mov
out
adc
adc
popf
in
into
out
sbb
ret
stos
fsubl
shlb
jnp
pop
fiaddl
and
inc
sahf
lret
pop
sbb
dec
cmp
mov
inc
inc
sub
push
add
xor
xor
and
dec
mov
in
shll
dec
adc
pop
sbb
jmp
insb
push
or
ds
inc
or
cmp
int3
inc
inc
jo
sub
xchg
imul
addr16
jae
pop
inc
out
sti
mov
xchg
clc
jns
loope
mov
pop
stc
test
xchg
mov
mov
ja
push
enter
aaa
jle
pop
leave
enter
sub
cmp
and
sub
sub
into
xor
dec
fistpl
xor
aad
mov
inc
push
pop
stos
jg
add
test
std
pop
mov
cld
nop
push
fldt
leave
push
outsl
out
mov
shlb
cmp
mov
jl
ljmp
and
pop
sub
pop
pop
pushw
cmp
leave
jmp
daa
es
push
repz
nopl
ljmp
jae
mov
push
jb
pop
mull
out
in
lret
mov
mov
xchg
pop
sti
lret
cli
add
in
and
sti
add
and
sbb
pop
mov
lcall
dec
hlt
stos
push
xchg
mov
dec
hlt
dec
mov
inc
cmp
jbe
pop
test
sbbl
pop
adc
insl
clc
xor
mov
jmp
into
jecxz
es
xor
sahf
xchg
cmp
ljmp
adc
jns
adc
popf
mov
xchg
cli
pop
js
add
mov
add
imul
xchg
or
push
cmc
jae
lods
outsl
ret
loopne,pt
cld
jnp
and
das
and
imul
inc
push
in
dec
mov
xor
push
pop
mov
aaa
in
dec
mov
outsl
cmp
ret
iret
icebp
xor
jno
movsb
cmp
mov
xor
mov
jmp
mov
fcoms
push
repz
xor
repz
mov
sub
cmp
mov
xchg
outsb
jo
rclb
mov
and
out
aaa
sbb
out
push
add
sub
scas
shll
sti
das
dec
rolb
jae
push
cmp
stos
decl
mov
dec
loop
jp
std
int3
test
mov
lods
repz
shl
or
xchg
xchg
mov
jae
or
jae
in
std
sbb
jne
addr16
call
daa
in
das
mov
jbe
jecxz
push
fistpll
lds
cmp
imul
or
cld
mov
mov
sub
fsts
push
mov
out
cli
mov
add
mov
rcrb
pop
mov
popa
dec
je
pusha
rcl
mov
aas
lahf
dec
mov
dec
mov
jne
mov
dec
mov
shlb
xor
icebp
adc
out
cmp
xchg
fistpll
and
iret
cmpsl
sarb
pop
test
xchg
cmp
rol
sub
divl
pop
mov
dec
lock
movsb
cltd
sub
aaa
sub
inc
sbb
pop
xor
jae
call
aas
sub
rcrb
sbb
inc
lahf
in
cmp
xchg
xchg
mov
sbb
cld
js
ja
pushf
movsl
outsb
mov
sbb
xchg
in
inc
inc
cmpsl
mov
push
xchg
xor
inc
mov
or
daa
mov
shr
jo
arpl
imul
mul
and
stmxcsr
pop
cltd
icebp
pop
sbb
push
sbb
add
jecxz
add
cli
bound
pop
mov
js
icebp
push
lcall
dec
stc
inc
arpl
out
jae
sbb
inc
sar
jns
sbb
ds
dec
push
pop
mov
pop
cmp
pop
push
add
std
shll
out
add
add
rcll
test
out
mov
mov
pop
mov
mov
sbb
int
mov
fidivrl
test
sub
pop
test
xor
pop
pop
push
push
out
cld
mov
pop
dec
add
mov
repnz
repnz
mov
cmp
outsb
out
addr16
loope
push
int3
mov
js
jae
out
insl
jmp
push
mov
icebp
repz
mov
fucom
ret
scas
mov
ret
push
lcall
iret
ljmp
dec
push
sbb
jae
ds
push
sbb
stos
andl
add
fdivrl
add
mov
out
lds
cld
add
scas
repnz
dec
aam
repz
fistpl
jge
and
test
jmp
in
adc
in
cld
ret
cmovg
mov
add
mov
insl
repz
xchg
pmuludq
clc
inc
call
loope
out
mov
test
loope
pusha
fwait
cmp
xchg
int3
sub
out
mov
xor
sub
sbb
inc
fists
outsl
nop
push
mov
pop
lock
mov
mov
push
mov
aaa
mov
cmp
aaa
adc
lcall
iret
xor
test
int3
mov
stos
cmp
push
cld
jne
adc
out
push
sbb
pop
cmc
jns
cmp
divl
movl
int3
adc
movsb
jg
out
mov
loop
jb
imul
add
test
fcompl
and
stc
fcomps
mov
outsb
xor
std
out
int3
lock
leave
into
mov
out
rclb
shr
insb
and
xchg
outsb
and
xchg
jo
scas
mov
jb
scas
sahf
arpl
lea
jg
sahf
test
aaa
inc
pop
lods
cmpsb
xchg
inc
pop
or
adc
mov
inc
icebp
shll
pop
xor
test
cmp
das
jbe
daa
