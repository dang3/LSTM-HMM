decl
div
clc
test
ja
bound
je
jge
cwtl
test
add
pop
pop
pop
ret
and
pop
imul
in
negb
ret
add
adc
or
push
sub
adc
adc
jge
mov
jbe
or
cltd
inc
and
mov
or
adc
inc
adc
or
call
or
inc
adc
adc
adc
and
fcomi
fidivl
and
dec
sbb
adc
outsb
dec
or
add
adc
pop
cmp
or
adc
inc
and
add
insl
mov
adc
and
ss
and
mov
mov
inc
roll
add
addl
mov
subl
dec
jecxz
cwtl
mov
adc
in
jo
pop
orl
and
xchg
test
and
data16
cltd
push
cli
mov
adc
sub
fsubrs
jb
lock
int
or
inc
cwtl
and
jbe
or
in
in
or
imul
mov
test
shlb
aaa
ljmp
xchg
xchg
ficoml
ficompl
xor
adc
dec
add
sahf
fs
and
adc
sbb
stos
test
add
adc
add
test
ret
out
jg
mov
inc
and
adc
and
inc
adc
mov
mov
adc
add
and
inc
inc
and
mov
out
add
nop
cmp
or
and
std
out
adc
add
js
and
or
inc
nop
jnp
fidivrs
and
and
or
and
inc
add
nop
add
jbe
mov
xor
push
adc
add
or
data16
test
data16
sahf
pop
rcrl
inc
and
pop
or
cs
and
es
or
jmp
and
inc
dec
lods
and
pop
and
test
and
and
hlt
mov
adc
sbb
or
cmp
inc
adc
inc
sbb
lods
mov
sbb
inc
dec
inc
mov
insb
pop
je
add
and
mov
scas
xor
add
mov
insb
inc
out
and
rcrb
or
mov
lock
adc
dec
mov
loope
or
les
sub
pop
sub
add
loop
adc
xor
or
sbb
cltd
or
int3
ljmp
ret
ret
call
jb
stos
into
lods
push
pop
and
inc
or
dec
inc
inc
and
cmp
or
sbbl
and
push
pop
cmp
add
and
pusha
in
fwait
ret
mov
and
clc
fs
test
nop
lret
add
or
push
mov
in
ror
pop
out
inc
rorb
shlb
mov
and
into
cmpsb
and
xchg
rorl
add
xor
push
dec
test
addb
pop
rorb
outsb
or
mov
xor
or
out
sbb
xor
add
neg
sti
stc
xor
and
not
add
jmp
not
and
mov
mov
add
flds
sub
int
jmp
cli
adc
or
dec
sti
not
inc
sub
neg
xor
inc
sub
jmp
mov
mov
inc
or
mov
adc
sbb
ret
testb
jb
movsl
mov
repnz
adc
mov
or
mov
icebp
mov
inc
mov
jnp
aas
xlat
sbb
cmp
insb
iret
fldenv
lret
aam
ja
fimuls
insb
lock
cmp
int
jo
fs
lahf
pop
or
mov
add
dec
setle
mov
out
sbb
mov
lret
cltd
outsl
lahf
mov
mov
test
adc
fnsave
xor
stos
jmp
push
and
pusha
cmpb
daa
xor
sti
and
ficomps
sbb
fcomp
or
dec
inc
cmp
lahf
addl
incb
jne
ret
push
mov
add
movl
fs
mov
icebp
xor
rorb
mov
dec
sbb
inc
cmp
push
loopne
enter
fbld
adc
fmul
xchg
add
outsl
dec
orb
add
inc
fstps
ret
jns
or
push
int
mov
push
or
pop
xchg
sbb
add
or
mov
jle
or
mov
xor
mov
outsb
jbe
jae
sub
jecxz
or
sbb
rcrb
jnp
in
dec
fs
xchg
dec
add
sbb
fdivr
cmp
xlat
mov
push
divl
cmp
ret
mov
test
sar
adc
inc
adc
cmpl
pushl
add
mov
hlt
inc
push
hlt
in
cmp
pop
mov
adc
jp
in
pushf
lahf
dec
in
adc
lds
or
inc
inc
mov
and
pand
xchg
popa
xchg
std
xlat
loopne
js
shlb
fdiv
in
ja
emms
or
sub
mov
popa
sqrtps
xor
or
xchg
insl
dec
add
inc
push
dec
cmp
pop
lods
fsts
sar
shlb
push
shll
mov
out
xor
push
cmp
xchg
sbb
inc
and
xchg
add
sbb
and
dec
mov
sub
mov
test
ret
pop
add
mov
sti
mov
in
int
ret
sbb
or
roll
shlb
push
outsb
adc
fcoml
dec
mov
roll
mov
rorb
mov
jnp
hlt
add
push
clc
add
push
lock
call
data16
sbb
and
mov
adc
add
mov
mov
cmp
xchg
mov
rorb
add
fsubrl
mov
pusha
sub
fcomps
out
and
add
subl
xchg
leave
ret
out
dec
xorl
mov
loope
sub
push
pop
call
jg
pop
addl
pop
lcall
lcall
movsl
add
in
jns
repz
fsubrl
xchg
aam
pop
ss
cmp
call
sbb
add
outsl
push
mov
rorl
lret
pop
sbb
sarb
mov
xor
ficoml
and
jg
lock
push
es
xchg
dec
xor
xchg
mov
cmpsb
int3
inc
mov
adc
popa
setno
outsl
add
int3
xchg
pusha
rcll
cmp
fmulp
sbb
cmp
sbb
pop
cmc
push
sbb
add
mov
cmpsl
pop
gs
pop
add
outsl
loope
pop
fstpl
aas
adc
stos
les
je
or
sbb
int3
sub
je
cmp
movsb
outsb
js
push
jp
in
add
int3
inc
nop
mov
add
pop
sarb
sub
inc
jp
ret
or
add
cmpl
pop
or
scas
or
and
outsb
imul
std
sbb
lahf
scas
mov
call
or
out
enter
sub
rclb
aad
jecxz
enter
movsl
neg
inc
sbb
nop
imul
cwtl
fwait
or
and
test
push
adc
add
loope
jnp
mov
fwait
test
mov
pushf
filds
or
clc
in
and
sahf
cmp
cmp
sub
fldl
loope
pusha
aam
or
add
shlw
std
cmpsl
sub
roll
or
and
add
add
mov
and
adc
or
push
adc
xchg
pop
mul
dec
adcl
mov
adc
fnsave
lock
in
add
jne
incb
ret
jo
cmp
cld
mov
add
push
add
xor
cld
sub
pop
lock
fisttps
cs
cmpsb
mov
arpl
cmp
rcl
sbb
push
jmp
neg
mov
lcall
add
mov
dec
xor
setle
xor
or
inc
xchg
fwait
iret
add
dec
mov
das
mov
mov
jmp
push
jle
scas
adc
jo
add
rolb
dec
fwait
out
loope
push
enter
loopne
pop
pop
push
mov
jb
fwait
inc
add
fdivrl
fmuls
popa
daa
mov
lock
sahf
add
dec
pop
sbb
or
repnz
or
mov
inc
jl
pop
rcl
and
add
sbb
and
ds
push
stos
xchg
pop
loope
fs
and
pop
fbld
in
sbb
add
xor
mov
int3
test
jmp
jl
pop
lcall
jp
pop
fwait
xchg
sub
les
dec
andb
rorl
jg
jne
and
pop
enter
push
and
xor
mov
clc
ret
push
les
pop
fldl
in
test
sbbl
out
mov
lcall
hlt
mov
or
lods
ror
pop
sbb
in
mulb
loopne
pop
push
adc
iret
lret
dec
xchg
jns
fildll
mov
cmpsb
adc
dec
mov
sbb
adc
repnz
fdivl
jae
les
dec
push
mov
dec
adcb
pop
pop
test
sub
ret
cmp
mov
pop
int3
not
and
int
lcall
push
adc
adc
pop
push
or
icebp
pop
add
not
ja
cwtl
pslld
nop
loop
daa
mov
sub
into
xchg
js
test
out
sbb
popf
or
jl
jle
mov
bnd
movsb
sbb
aam
add
and
jecxz
adc
call
ret
pop
insb
ret
mov
aad
xor
or
pop
xor
pop
cwtl
addr16
andb
aam
jecxz
inc
mov
enter
xor
in
into
in
enter
inc
clc
pop
sbb
push
roll
inc
adc
add
lock
enter
in
or
xor
cmp
mov
out
mov
jg
cmpsl
mov
push
in
sub
outsb
addb
pmaxub
dec
aad
mov
xchg
or
fbld
pop
cmp
pop
dec
cld
rorb
mov
stc
sbbl
loope
and
sbb
pop
ds
mov
out
pop
sbb
add
fldenv
jns
sub
and
cli
xor
cmp
repz
loopne
jge
enter
loopne
in
pop
hlt
inc
mov
mov
test
and
jo
dec
sub
and
push
out
add
add
xor
jne
dec
sbbl
and
jl
xchg
icebp
mov
test
push
pushf
out
rcl
cmpsb
adc
inc
dec
test
cmpb
shl
push
loop
xchg
inc
cmp
loopne
out
add
xor
sbb
add
push
outsb
int3
les
ss
mov
mov
mov
lds
or
leave
loopne
and
pop
pop
dec
int3
sbb
dec
mov
mov
push
add
filds
mov
aam
mov
call
mov
pop
cmpsl
inc
jecxz
decl
pop
into
mov
sarb
sarl
cmp
dec
mov
es
sub
add
lahf
js
fldenv
dec
add
stos
jmp
cmpsl
cmp
mov
rcrb
faddp
jb
stos
xchg
shl
mov
pop
and
sbb
int
inc
std
xchg
and
pop
xchg
push
xor
mov
out
rcrl
xlat
xchg
aam
fadds
pop
das
mov
out
loopne
jle
or
loopne
adc
cmp
ror
out
sub
sti
aaa
sub
sub
cs
cld
mov
and
mov
and
xchg
pop
mov
lea
push
cltd
in
movsl
enter
push
xchg
lods
and
jp
add
sti
sbb
add
pop
xchg
xorl
pop
xchg
push
pusha
dec
cmp
mov
dec
jae
fnsave
rcrb
add
sub
fldenv
hlt
jno
lret
mov
jae
jge
movl
in
sbb
jmp
cmpl
push
pop
xchg
add
add
and
jg
adc
repz
xor
fwait
mov
sub
adc
icebp
push
sbb
cmp
or
adc
mov
daa
push
lea
xor
push
or
loop
xchg
addr16
gs
test
int3
mov
adc
mov
inc
test
mov
lahf
pusha
adc
sub
inc
aam
push
jg
mov
and
add
adcl
xor
sahf
mov
popf
jmp
push
pusha
sbb
sub
adc
mov
and
push
stc
cmpsl
cli
xlat
sbb
ljmp
mov
adc
dec
xchg
fldenv
in
test
pop
clc
clc
sub
sbb
dec
int3
hlt
das
test
popf
xchg
cmp
out
mov
adc
cmp
dec
mov
push
loope
xor
cld
add
and
push
mov
enter
out
adc
incl
push
les
sbb
mov
std
data16
ret
mov
adc
inc
mov
lea
push
mov
mov
jbe
push
call
inc
clc
insb
lock
push
les
sbb
scas
inc
xor
sbb
aam
les
xchg
shrb
scas
xchg
fistpl
or
loopne
hlt
mov
mov
jo
mov
nop
inc
xor
lea
fcompl
ds
loope
cmpsb
call
jp
push
mov
and
or
lret
xor
in
not
jae
loopne
pop
stos
rolb
and
ficoml
test
inc
or
psraw
mov
shlb
pop
repnz
pop
fldl
test
test
cmovo
mov
mov
mov
loopne
xlat
pop
mov
cmp
sbb
ljmp
inc
aam
mov
sahf
cmp
pop
mov
push
dec
xchg
hlt
repz
push
xor
xor
daa
push
shr
or
inc
aam
mov
sbb
out
setns
push
dec
sbb
pop
mov
xor
inc
aam
mov
inc
mov
les
jno
mov
loopne
repz
or
addl
je
add
inc
adc
xchg
add
cld
imul
add
not
dec
jge
ljmp
adc
and
or
mov
orl
mov
dec
inc
in
add
loope
div
outsb
jae
mov
add
fists
add
add
inc
inc
fdivrs
test
adc
xor
mov
xchg
sbb
jg
dec
and
sub
dec
sbb
clc
xchg
enter
sbb
bnd
or
call
and
jb
subb
dec
fiadds
dec
adc
pop
sbb
addr16
mov
fwait
dec
push
mov
hlt
add
scas
xlat
call
mov
scas
push
inc
neg
lret
and
sbb
fmull
or
popf
call
mov
arpl
add
adc
je
or
push
in
fsubrp
dec
push
imul
xor
cmc
adc
cmp
hlt
inc
mov
cmp
push
mov
ficompl
mov
mov
pop
out
add
je
mov
fdivs
in
push
and
arpl
mov
mov
or
rorb
push
ret
js
and
mov
ja
jne
roll
filds
sbb
add
loope
into
fsubl
mov
mov
test
adc
jge
jne
xor
sbb
inc
movsb
push
fimuls
dec
lea
loope
or
dec
cmpl
cmp
dec
xor
mov
insl
cmp
loopne
test
pop
lahf
sbbb
ja
push
push
cmpb
cltd
mov
sbb
dec
pusha
popa
xlat
cs
shlb
jb
ljmp
or
xchg
test
pop
imul
stc
and
test
push
add
pop
das
inc
icebp
xchg
add
out
cli
mov
and
repnz
add
icebp
adc
sbb
mov
out
cld
out
push
pop
das
add
lods
mov
pop
xorb
pop
sub
add
leave
icebp
add
aaa
mov
notl
dec
xchg
push
add
pop
stc
push
test
push
jge
pop
pop
pop
sub
fidivl
repz
mov
mov
jg
add
sti
mov
or
test
sbb
xchg
pop
push
sti
fists
addl
flds
int
shr
shlb
adc
cmp
fiadds
repz
rcrb
and
jl
cs
sub
cmp
jl
test
popa
imul
or
insl
add
lods
jo
pop
in
cs
in
xor
cmc
adc
ret
test
and
outsb
sbb
or
mov
inc
imul
push
mov
or
nop
sub
xor
push
xor
daa
adc
dec
das
sarl
shl
jmp
pop
xorps
adc
pop
push
pop
rcrl
add
sti
loopne
aas
das
test
cmovge
testl
fcompl
idiv
iret
and
mov
repz
sub
inc
popl
call
out
fisttps
es
push
repnz
out
sbb
mov
sbb
jmp
dec
in
dec
mov
add
push
dec
mov
lret
xchg
dec
loopne
cld
popa
inc
jmp
add
cmp
movl
pop
or
inc
xlat
orb
mov
dec
cmp
xor
fwait
gs
xor
add
out
testb
cld
or
mov
sti
push
lcall
and
dec
iret
sub
stos
adc
andb
imul
pop
jnp
dec
mov
adc
xchg
nop
add
mov
pusha
popa
pop
jmp
popf
jns
loopne
sub
add
fiadds
hlt
mov
mov
movsl
push
push
gs
jo,pt
pop
xchg
cli
lahf
aas
mov
dec
cltd
mov
std
jmp
sbb
jns
loope
and
inc
add
ret
jl
mov
sbb
imul
xchg
xlat
pushf
pop
insl
push
ss
inc
out
test
sbb
cmc
inc
jg
xor
xchg
ja
test
mov
mov
mov
shl
pop
xchg
adc
sub
pop
popf
or
push
mov
cmpsl
add
int
adc
outsb
xlat
idivb
or
dec
fcmovnu
cmc
add
sbb
jg
and
rcll
jge
ljmp
adc
cmpsl
ret
divl
or
hlt
add
aaa
fisubs
jg
dec
mov
adc
jae
lret
add
xor
mov
callw
fdiv
sub
mov
cmp
push
sub
leave
jge
mov
std
push
mov
adc
push
jg
inc
mov
fcmovnb
stc
je
test
testb
pop
push
or
cmp
hlt
push
lock
jmp
imul
sub
adc
loopne
or
rorb
sahf
xor
int3
mov
movsl
xor
inc
xlat
mov
cltd
inc
cld
fcomp
push
lahf
inc
push
lock
dec
inc
xlat
mov
sbb
hlt
in
dec
shlb
cld
dec
fidivs
jnp
mov
icebp
mov
sub
jb
add
lea
test
lock
js
or
push
jle
push
and
adc
jo
sub
dec
shl
add
mov
adc
cmpl
notl
dec
pusha
fisttps
roll
sub
loop
sub
addr16
sbb
faddl
push
push
mov
inc
rcll
adc
ds
inc
adc
jns
hlt
shll
or
push
jmp
jle
out
clc
daa
cmp
sbb
dec
push
jl
sahf
mov
roll
clts
scas
bnd
push
inc
or
ret
adc
fnstsw
es
cld
cwtl
push
adc
adc
xchg
push
add
cmp
xor
jae
xchg
aad
scas
mov
mov
out
mov
mov
pop
xorl
fsubl
imul
or
loopne
cs
in
mov
pop
jecxz
mov
xchg
dec
jmp
test
push
or
pop
or
jne
leave
mov
clc
add
dec
test
not
adc
out
cmp
cmp
jl
add
addr16
mov
and
pop
enter
inc
fists
sub
add
add
ss
enter
mov
add
adc
cwtl
icebp
mov
data16
xchg
test
xlat
call
mov
xor
jge
js
dec
sbb
popf
cmpsl
cs
das
sub
jo
add
jp
sti
xor
lock
push
or
xor
mov
testb
test
jno
adc
call
and
pop
push
xchg
call
push
sbb
pslld
xchg
add
dec
loopne
popf
stos
idiv
mov
inc
push
fsubs
xorl
movsb
addl
jb
stc
dec
inc
rcr
dec
mov
jp
movsb
and
outsb
aas
dec
stos
xlat
jae
xchg
clc
subl
div
sub
pop
xchg
push
pop
jmp
out
in
jge
cwtl
inc
ja
mov
pop
mov
fimuls
shrl
cmp
icebp
adc
push
and
pop
adc
dec
mov
jno
and
lret
sbb
lock
and
mov
pop
adc
mov
pop
stos
sbb
sbb
add
sub
pop
dec
icebp
bound
lcall
rorl
sub
loopne
ljmp
faddp
pop
sub
add
inc
mov
pop
pop
sbb
arpl
xchg
push
clc
jb
cmp
lret
cmp
test
and
jecxz
xorl
sbb
and
inc
ret
std
jle
test
jns
inc
xchg
inc
mov
movsb
add
ret
mov
aad
popa
xor
ret
sbb
push
jmp
sub
cmc
mov
inc
mov
repz
dec
push
add
test
sbb
sbbl
lock
fists
inc
mov
daa
sti
push
or
fbld
mov
sub
mov
fnstcw
adc
mov
int3
xchg
push
movl
call
jg
les
clc
sbb
cmp
cltd
das
add
mov
mov
aaa
cmp
andl
fs
repz
mov
test
fwait
mov
jbe
jo
adc
and
xor
add
xor
mov
xlat
movsl
out
ret
xchg
xor
out
jmp
xor
pop
jmp
push
jle
mov
inc
dec
pushf
or
push
loopne
adc
loopne
jns
in
testl
push
jecxz
xor
add
mov
adc
insl
in
std
sbb
inc
pop
adc
dec
neg
sub
cld
add
ljmp
inc
dec
ljmp
mov
add
push
mov
gs
addb
in
add
pop
xchg
cvttps2pi
adc
rdtsc
subl
pop
jnp
les
out
gs
or
and
xor
mov
adc
add
out
test
out
cltd
and
xchg
leave
add
lret
xchg
add
lock
out
dec
cmpsw
pop
lods
sub
orl
and
xchg
rol
fstpt
lods
pop
sub
clc
add
adc
rcrb
sbb
dec
lret
cmp
loopne
cmpsb
xor
pop
dec
mov
adc
jmp
dec
or
dec
push
test
jae
or
add
adc
xchg
inc
mov
sbb
sub
push
xor
jno
jmp
aas
sbb
adc
daa
popa
dec
lods
jp
enter
ficoms
inc
add
pusha
scas
mov
jmp
cmc
jbe
adc
cmp
adc
je
jne
sub
adc
je
add
xchg
clc
add
jmp
loope
pop
fnsave
mov
incb
sub
dec
jge
je
pop
add
orl
mov
addb
gs
pusha
jmp
pop
mov
push
sti
cld
sbb
mov
sub
cmp
adc
push
pop
jmp
cld
test
adcb
push
lea
adc
mov
xor
inc
jecxz
sbb
push
pushf
adc
push
jecxz
cwtl
jecxz
jno
stos
push
adc
mov
push
imul
push
stos
repnz
int3
leave
or
sbb
pusha
out
loopne
int
lret
lret
or
clc
sub
out
dec
xor
idiv
loop
adc
mov
adc
lcall
clc
push
push
lea
push
call
hlt
pop
cmp
das
hlt
cld
xchg
xor
lds
fcmovb
ret
dec
and
jo
scas
and
adc
pushf
rcrb
ljmp
cmpb
rorb
sbb
jg
and
fsubp
call
js
jg
inc
xor
sub
jmp
pavgb
scas
loop
dec
xor
pop
je
pop
je
repnz
addr16
loop
add
dec
outsb
xchg
std
adc
es
and
jmp
jecxz
movsb
aas
push
notb
sub
popf
cwtl
pop
sbb
sub
xor
test
xchg
idiv
adc
dec
push
dec
push
outsb
add
jecxz
cmp
add
jne
pop
fidivl
pop
xchg
call
inc
pushf
mov
pop
jno
retw
push
imul
cmp
outsl
int
add
add
scas
lods
cmp
test
jg
imul
adc
push
rclb
inc
clc
out
sbb
xor
rcrb
cltd
sbb
sbb
loop
clc
ss
popf
lock
push
push
daa
out
in
adc
xor
loope
sub
aad
loope
add
pop
daa
xor
adc
std
jle
push
or
cli
scas
stc
loop
loopne
or
adc
sbb
cmpl
loop
loopne
cmp
xor
inc
inc
sub
insl
fldt
add
inc
add
pop
fs
xor
or
sbb
and
add
aam
sbb
rorb
pusha
lock
add
pop
rorl
clc
lea
js
mov
js
adc
cmp
outsl
data16
add
and
out
mov
lret
sub
mov
xor
add
loopne
test
jne
jae
xorb
pop
insl
das
add
mov
shl
add
call
adc
jbe
ret
in
stos
push
or
cmp
pushf
pop
inc
jl
inc
dec
inc
insb
xor
sub
outsl
insl
pop
sub
xor
test
mov
loopne
out
dec
cmp
mov
or
xchg
int3
dec
repz
adc
popf
clc
adc
fadds
dec
js
cmp
shlb
arpl
push
pop
jo
in
fisttpl
jne
dec
add
or
and
pop
or
je
xchg
test
jno
inc
movsl
xor
inc
sbb
in
andb
in
push
cmpl
dec
repnz
xchg
sbb
inc
or
inc
and
int3
and
outsb
pop
mov
ficomps
jge
push
or
je
jg
shrb
int3
adc
out
lahf
jp
rcl
jbe
xchg
test
shlb
cmp
cmp
enter
leave
pusha
dec
mov
or
add
lods
stc
or
ret
pop
pop
fmuls
mov
and
adc
test
test
negl
call
ror
cmp
push
jp
push
mov
lret
cld
ss
sahf
push
fdivs
ret
clc
sbb
and
pop
pop
das
mov
lcall
add
loope
xor
jo
mov
push
dec
lods
mov
and
into
lret
jp
ret
int3
inc
inc
rolb
lds
xchg
mov
es
cs
xor
push
cld
lds
cli
or
int3
in
outsl
fs
cmp
add
push
mov
push
shl
enter
cmpsl
jo
push
cld
push
mov
sbb
neg
int
mov
lods
pop
mov
shlb
cmpsl
mov
jg
pop
in
bound
stos
sbb
cmp
ret
mov
mov
pop
les
xchg
popf
mov
lret
or
adc
cmp
outsb
shll
add
iret
mov
int3
inc
movsl
minps
adc
out
idiv
call
sbb
or
test
fisubrl
add
inc
dec
push
movsl
jg
mov
inc
fdivrs
push
sub
jg
mov
in
dec
decl
cmp
inc
inc
add
push
lea
dec
imul
mov
dec
test
jne
ret
sub
add
dec
pop
cmp
and
jp
ret
xor
ljmp
mov
sbb
jmp
mov
adc
or
inc
imulb
ss
stos
and
sahf
mov
in
pop
test
xchg
fwait
mov
fcompl
negl
addl
cmpsb
xchg
adc
scas
add
lahf
loopne
cli
iret
dec
adc
sub
lcall
jl
xor
movsl
jg
jp
lea
mov
stos
fwait
jne
mov
push
shrb
xor
push
mov
mov
cmp
push
lods
clc
insb
xor
pop
das
and
inc
int3
pushl
fnsave
xor
pop
mov
lea
xchg
fdiv
and
loop
ljmp
xlat
xchg
and
or
xor
jno
dec
cltd
insl
insl
mov
inc
xor
bound
xchg
popf
cmp
adc
stos
and
scas
sbb
jmp
push
xchg
cmp
or
pop
or
jecxz
pop
loope
sub
mov
push
adc
jne
sbb
inc
shrl
pop
cmp
and
daa
add
push
loope
cmpb
rcr
movsl
outsb
movsl
mov
and
arpl
repnz
jp
xor
or
cmp
adc
mov
jne
in
enter
out
cmp
and
adc
cmp
inc
stos
push
repz
and
in
fs
xor
fucom
mov
sub
imulb
iret
push
sbb
push
xlat
mov
and
enter
mov
add
and
and
adcb
fnstsw
nop
pop
je
addb
xchg
adc
sbb
testb
jnp
out
fs
cmp
loop
mov
xor
and
in
ja
cmp
lcall
insb
in
movnti
and
mov
dec
iret
insl
pop
out
test
cli
xchg
js
repnz
call
mov
add
repnz
adc
aad
jns
lea
push
push
push
mov
xlat
sbb
icebp
pop
test
insl
faddl
mov
push
pop
fsubr
and
and
lret
notb
mov
cwtl
in
shrb
pop
adc
adc
jns
sbb
ret
push
adc
push
out
inc
push
inc
maskmovq
mull
mov
loop
daa
dec
mov
dec
es
add
clc
loopne
pop
sbb
testl
add
cli
adc
test
frstor
data16
add
not
pushl
shll
mov
mov
mov
inc
sar
cld
es
and
mov
add
and
sub
inc
dec
ja
inc
aas
addb
adc
popa
cs
fadd
fnstcw
push
aas
out
or
adc
inc
xor
and
lret
add
test
ss
and
call
xchg
movsl
pop
add
mov
mov
mov
je
hlt
jo
rcll
dec
pop
aam
loope
ljmp
sub
out
pop
jl
push
pop
xchg
in
testb
cld
push
iret
cmpsb
aam
sbb
movsl
sub
cltd
add
movsl
sbb
sub
outsl
outsl
pop
fs
pusha
lods
out
push
cmp
out
sbb
test
jno
loope
icebp
adc
pop
sbb
inc
push
aad
fcoms
push
add
xchg
mov
add
dec
lret
sbb
add
adc
mov
cmp
inc
mov
mov
and
gs
in
rcrl
leave
mov
pushf
and
adc
jecxz
dec
pushf
mov
dec
xor
add
lea
jecxz
movsl
dec
jnp
lods
imul
dec
or
fistpl
and
movsl
int3
mov
addl
call
or
pop
or
mov
push
dec
dec
insl
aam
xchg
scas
mov
xor
and
add
and
lcall
pushl
roll
sub
xor
cwtl
loope
enter
lret
test
mov
repnz
inc
rcll
das
push
jne
sub
nop
fdivr
sar
test
outsl
dec
adc
insl
lock
scas
in
test
in
sub
add
and
ss
jno
sub
add
testb
push
adc
push
jo
in
xor
and
jp
mov
ljmp
push
inc
sti
flds
stos
imul
add
call
lods
mov
jns
sub
push
sub
inc
pop
hlt
xor
in
adc
and
push
rolb
sti
clc
xchg
xchg
lea
pop
dec
loopne
pusha
dec
xor
enter
daa
jecxz
pop
pusha
insl
loopne
and
sub
addr16
imul
js
clc
in
sbb
dec
add
fstpl
jns
stos
push
push
xor
shr
js
hlt
mov
sub
not
fadd
fldcw
aas
cmc
fwait
mov
repnz
shl
aas
xchg
cmp
test
fnstsw
fcoml
mov
dec
test
andl
aaa
jle
in
lret
ret
popa
dec
dec
daa
inc
sub
add
dec
and
push
pop
push
pop
ja
lock
fwait
loope
mov
dec
lock
or
xchg
add
dec
adcb
out
or
mov
inc
in
sarl
add
sbb
pop
push
fiadds
mov
and
mov
adc
pop
insl
js
movl
adc
enter
push
mov
inc
dec
pop
sub
dec
jmp
aam
std
mov
adc
xchg
inc
sbb
pop
rorl
pop
out
mov
pusha
adc
mov
xor
jno
fidivl
fcoms
mov
dec
add
pop
ficoms
call
push
inc
inc
inc
sub
pop
fmull
lods
jnp
fcomi
sub
ret
dec
pusha
xbegin
dec
jb
je
cmp
lds
jns
cmp
xchg
push
lcall
push
inc
pop
rorb
divb
pop
and
in
rcrl
cmpl
dec
inc
cwtl
adc
cs
inc
rcrb
pop
push
sarl
adc
jp
add
test
cli
mov
sub
popf
test
dec
pushf
rorb
adc
xor
sub
push
clc
push
cwtl
pop
xor
into
loopne
sbb
inc
sub
dec
pop
pop
jp
and
out
push
mov
adc
lea
mov
in
loopne
js
cmpsb
jl
mov
inc
movsb
pop
mov
cmp
xchg
out
push
pop
pusha
loop
push
add
rol
movsl
jecxz
pop
nop
ret
out
dec
adc
sbb
add
ja
pop
lods
adcb
or
jo
and
movb
sub
xchg
out
divl
fiadds
fbld
add
sub
icebp
cld
call
mov
loop
mov
aam
fldcw
mov
xorb
push
inc
in
daa
add
add
cli
sub
push
dec
imulb
jno
add
jecxz
add
cli
xor
fmuls
fmuls
mov
in
in
rcll
fxch
repz
andb
ret
pop
mov
ljmp
or
cmp
add
jno
aaa
add
jbe
outsl
adc
add
ds
aaa
sbb
push
add
mov
pop
fmul
add
test
sub
adc
sbb
test
aam
add
sbb
inc
je
or
test
jp
and
sbb
data16
push
nop
push
shl
aas
cwtl
sbb
pop
mov
push
add
or
sbb
cmp
or
xlat
mov
dec
add
sbb
shrb
inc
dec
inc
jge
inc
cli
jnp
repz
xlat
inc
sub
cmp
imul
pop
into
adc
in
adc
push
aam
or
ret
pminsw
mov
fistpl
push
pusha
adc
lods
sbb
xchg
pop
mov
arpl
or
push
or
jecxz
lds
dec
mov
xor
jmp
fwait
pusha
dec
insb
xor
mov
lcall
xchg
repnz
bnd
inc
insb
sbbl
cli
and
stos
int3
sub
jge
sbbb
pop
insl
push
push
inc
nop
int3
mov
popf
mov
add
imul
dec
mov
movsl
into
xchg
inc
xor
jne
push
fcoml
dec
xor
xor
mov
call
xor
sub
je
imul
mov
mov
sbb
mov
aam
pop
insl
and
leave
mov
pop
fimuls
dec
dec
add
adcb
xchg
scas
add
dec
mov
fisttpl
js
mov
jb
or
jmp
dec
pop
jl
sbb
sar
call
cld
jl
loope
int
inc
and
hlt
out
add
push
mov
imul
push
add
push
adc
mov
jecxz
inc
mov
call
jge
neg
bswap
jl
jp
cmpl
jo
mov
pop
fiadds
jle
jge
push
test
scas
iret
sub
push
ljmp
rcl
rcr
xor
add
xor
jle
das
sub
xchg
filds
call
ljmp
xchg
test
add
mov
lret
jbe
adc
sub
sbb
add
mov
cmp
jmp
insl
mov
inc
mov
dec
sahf
call
lods
or
movsl
add
xlat
mov
rolb
or
pushf
or
movups
dec
mov
ljmp
or
cmpb
sbb
mov
test
mov
or
add
call
or
les
insb
and
aam
inc
sub
sub
sbb
or
cmpl
inc
scas
lock
mov
xor
outsb
arpl
mov
xlat
xchg
add
or
xor
fsubs
push
ss
add
into
enter
js
push
sub
ficoml
mov
pusha
fsub
clc
loopne
add
adc
xor
inc
inc
mov
push
or
mov
pop
cmp
xor
or
fdivrl
loop
mov
ss
push
hlt
pop
insl
jo
out
xor
inc
sbb
cmp
jae
jne
and
add
or
inc
adc
adc
sahf
dec
push
cwtl
aam
adcb
dec
cmp
in
jge
jb
sbb
loop
pusha
popf
rcl
mov
add
popf
sbb
and
lods
hlt
mov
adc
xlat
cli
push
aam
mov
int
ss
call
in
mov
cmpsl
jne
out
add
push
jb
cmc
push
cli
xor
sti
mov
pop
adc
gs
mov
adc
cmp
sub
loopne
cmp
lcall
xchg
cmpsb
xor
fwait
sbb
sub
mov
lods
test
inc
loope
daa
xchg
xchg
loope
les
add
jmp
pop
adc
out
add
mov
dec
xor
pop
jns
incb
jne
xchg
cmp
add
adc
inc
add
inc
jmp
adc
cmp
mov
sbb
je
dec
or
push
add
adc
iret
int3
scas
mov
fdivr
fidivs
sub
cmp
add
mov
cmpsb
add
push
pop
pop
mov
xchg
lds
mov
inc
mov
and
add
mov
inc
inc
sti
dec
xor
addr16
sub
fidivl
dec
pop
arpl
adc
sbb
mov
fiaddl
push
ljmp
ja
cmc
fisubs
out
in
add
in
leave
in
enter
mov
push
cmp
fadds
lds
and
xor
jb
mov
cmp
ljmp
cld
pop
dec
sbb
and
in
test
jnp
xor
sbb
dec
leave
pop
imul
or
pusha
aam
sbbb
enter
pop
jg
and
enter
mov
sub
aam
inc
insb
jp
cmp
jl
mov
mov
mov
addb
mov
sbb
adc
ret
ss
js
cli
add
movb
jg
lret
inc
pop
stos
sti
adc
sahf
cld
inc
xor
xchg
mov
mov
mov
inc
or
pop
mov
popa
pop
sbb
add
adc
movsb
add
xor
bnd
into
pop
sbb
cltd
pop
cmpsl
xchg
sahf
call
xor
inc
shll
cld
out
test
add
jg
enter
fisttpl
jg
outsl
cmp
mov
pop
adc
mov
sub
loopne
stos
lahf
or
mov
fdiv
add
pop
fsubrp
aaa
mov
aam
or
cli
popa
cmp
pop
idivl
ret
cmpsb
scas
pop
divl
sub
xchg
sti
push
lea
push
mov
aam
jge
rorl
sarl
dec
outsl
sbb
pusha
shll
int3
in
mov
loope
icebp
cli
cmpsl
mov
enter
add
sub
push
pop
sub
pusha
loope
loop
mov
xor
pop
sbb
xchg
pop
mov
sbb
sub
andb
lds
es
and
fld
cld
or
sbb
dec
add
outsb
adc
push
sbb
daa
nop
xchg
cli
adc
xchg
je
cmp
cmp
daa
mov
jb
jo
lcall
in
add
loop
jle
xchg
inc
pop
mov
pusha
cmpsl
icebp
jmp
adc
daa
jge
jb
insb
or
fdivrl
shlb
fildl
xorl
inc
pop
lret
inc
jle
jo
imul
test
mov
rol
std
mov
lds
push
lods
dec
out
int
dec
xorl
test
xor
add
mov
mov
xor
in
lds
dec
inc
xchg
stos
roll
or
outsb
sub
mov
xor
xlat
sub
dec
sbb
out
sbb
sbb
xchg
fadd
or
push
lods
lds
xorb
fbld
or
push
in
or
je
or
ret
jle
clc
xor
pop
fidivl
sbbb
adc
sub
xchg
aaa
icebp
push
lret
dec
bound
or
adc
outsb
jle
or
stos
call
jbe
aad
xchg
je
ds
ror
sub
shll
add
loope
shlb
pop
xor
shll
add
inc
add
mov
fdiv
add
loope
dec
xor
jge
aas
push
add
je
sarb
mov
pop
pusha
call
jle
mov
movsb
ret
mov
mov
aas
xor
insb
addb
mov
jo
and
daa
ja
cli
inc
sub
mov
sahf
aas
das
mov
xor
loopne
filds
dec
in
sahf
in
pop
inc
and
jle
push
pop
push
add
mov
xlat
mov
pop
test
repnz
push
sbb
add
mov
pop
jge
bound
fwait
loopne
add
dec
clc
ret
popf
fcmovne
xchg
jp
mov
adc
add
dec
cmp
lods
nopl
cmp
push
stos
pop
pop
movsl
test
fs
std
xchg
xchg
test
cmpsb
push
enter
sarl
fld
xor
inc
sbb
dec
mov
push
pop
xor
push
cmp
call
mov
add
and
js
pop
lock
lahf
xor
lods
mov
stos
hlt
and
and
xchg
pusha
or
push
adc
add
mov
adc
or
sub
jmp
cmp
xor
or
sub
faddl
int
dec
jecxz
ficoml
pop
lea
jg
fisttps
into
xchg
jecxz
jle
pop
sub
loop
mov
sarl
jae
lcall
faddl
lret
rcll
sbb
icebp
in
aam
adc
das
movsb
seta
jecxz
mov
push
cmp
sub
sbb
lea
movsl
push
ret
jne
fldcw
sahf
sbb
mov
and
sbb
adc
fdiv
sbb
push
mov
out
cld
and
xchg
jmp
lds
adc
lea
jl
pop
nop
adc
cmp
stc
and
jb
adcl
ljmp
int
cltd
popa
and
add
sbb
int3
mov
sub
cmp
sbb
sbb
mov
sbb
push
push
push
push
push
mov
add
in
mov
xlat
addb
fldenv
fwait
jno
lret
or
inc
hlt
ja
clc
or
in
push
addr16
push
ror
cwtl
or
pop
sbb
mov
cmp
repz
jg
faddl
dec
and
adc
mov
adc
adc
add
and
jge
and
jle
popa
xor
sub
enter
addl
mov
mov
push
xchg
or
pop
cmc
sbb
mov
push
out
sbbb
mov
mov
mov
lcall
in
inc
sub
lret
xorl
xor
aam
push
sub
adc
jne
add
xchg
and
xor
cli
add
adc
sub
aas
mov
jne
and
nop
xchg
add
int3
lock
aas
or
paddq
jne
fdivrs
dec
xchg
or
into
outsl
sarl
das
cwtl
or
mov
gs
aam
pop
ljmp
mov
lock
loope
movsl
je
jp
cmp
sub
in
push
cmp
xor
jle
sbb
test
and
jl
mov
dec
push
fadds
lea
cmp
adc
ret
lret
fwait
mov
arpl
aas
in
gs
and
add
in
divb
add
loop
ja
or
jbe
jge
add
ret
push
jge
div
shll
push
cwtl
and
dec
sar
or
loope
add
mov
rclb
test
push
popa
and
pop
xor
adc
icebp
jae
imul
mov
or
or
repz
jl
mov
mov
xor
test
inc
mov
inc
jo
out
sbb
and
inc
stos
jle
jmp
sbb
mov
in
lock
iret
ja
add
shlb
xor
pop
mov
clc
hlt
jle
xchg
mov
fucom
or
adc
push
lock
lock
adcb
ret
jl
leave
ret
repz
lret
cmpsl
xlat
inc
dec
dec
push
les
push
push
jmp
js
pop
pop
aas
into
aaa
and
or
ljmp
sub
imul
cmp
adc
mov
inc
inc
jmp
mov
add
pop
imul
bound
push
jge
jmp
insl
push
out
ja
mov
test
lret
push
jne
pop
movsb
adc
loope
dec
adc
add
out
and
xor
add
xchg
push
jmp
sbb
dec
or
sbb
clc
scas
sub
lret
sub
and
pop
in
or
sbb
xor
daa
mov
or
add
push
or
inc
sbb
lds
pushf
mov
mov
inc
movsl
fs
inc
cmp
cli
sarl
pop
vrcpss
insb
jecxz
add
pop
or
xchg
cmp
pop
xchg
pop
dec
inc
adc
outsb
pop
jmp
add
add
test
jp
inc
pop
mov
sub
dec
les
in
adc
xchg
clc
aam
push
pushf
jbe
mov
mov
pop
mov
mov
inc
in
jo
and
sbb
add
push
mov
add
push
sbb
sub
add
adc
pop
into
ss
stos
adc
cmp
outsl
stos
sub
pop
sbb
adc
dec
rcll
pop
jno
or
pushf
dec
fadds
jno
add
loop
adc
or
sub
lea
sbb
lds
add
ret
xchg
sarb
pop
inc
jmp
fsubrp
add
push
sub
sub
fidivl
sub
pusha
xor
popf
mov
adc
adc
lock
sub
popf
mov
sbb
inc
mov
adc
movsl
in
xchg
popf
mov
ja
lods
xchg
jnp
shl
nop
mov
mov
lea
popa
or
loopne
lea
push
push
push
scas
mov
psubq
jl
pop
outsl
sub
into
lahf
jno
ljmp
push
inc
incl
cmp
push
in
and
cmp
out
push
pop
xchg
stc
out
add
sarl
roll
or
lds
jl
movsl
push
push
pop
sbb
sub
jg
ljmp
dec
mov
orl
aam
jecxz
inc
pusha
es
shrb
xor
hlt
sbb
sbb
fadds
lods
shlb
lcall
xchg
mov
sub
add
jmp
jns
gs
or
scas
jo
loop
jge
mov
jg
test
mov
xor
pusha
pushf
pop
bound
fsubp
sbb
insl
sub
inc
dec
fsubs
pop
fsubrs
lahf
and
fistps
xchg
cmp
push
pop
loop
push
inc
xchg
or
push
faddl
add
cltd
popf
add
mov
sbb
inc
rorl
add
add
dec
add
xchg
fwait
popf
flds
push
ret
add
adc
add
cmp
adc
aam
loopne
imul
and
push
dec
jo
repnz
adc
lcall
adc
aas
adc
nop
add
sbb
or
mov
jne
cmp
mov
loope
insb
xchg
scas
mov
mov
fwait
scas
inc
test
push
int
loop
or
xchg
cli
insb
es
leave
pop
cmc
lods
mov
aad
fistl
adc
xlat
or
dec
call
jl
xchg
cmc
add
mov
xor
aaa
nop
sbb
pop
or
mov
shll
mov
lcall
nop
inc
imul
mov
mov
aam
add
jo
push
cmp
or
mov
loop
inc
mov
xchg
adc
push
loop
shl
mov
das
adc
push
lds
inc
mov
mov
push
das
loopne
xchg
cwtl
loopne
or
or
daa
ds
aas
sbb
pop
aam
je
pop
sahf
in
sbb
scas
push
lock
inc
call
popa
mov
push
xchg
pop
rcr
add
aad
andb
push
lea
pop
outsb
fistps
aas
mov
int3
adc
dec
add
adc
mov
xor
inc
fadd
mov
loopne
aam
cmp
pop
das
sub
xchg
in
adc
lock
cli
je
ret
jns
test
mov
mov
inc
inc
mov
add
push
call
add
adc
pcmpeqb
pushf
rcrb
str
icebp
mov
jns
jne
icebp
pop
push
les
mov
pmulhuw
cmpsb
dec
xor
adc
mov
dec
div
hlt
push
outsb
cmpsl
xor
in
test
sbb
add
movsb
jg
mov
add
mov
fsubrs
add
hlt
mov
jp
loopne
inc
scas
jmp
test
ret
pop
jno
std
adc
jno
fidivs
nop
jbe
or
mov
loop
inc
sbb
sbb
fisubs
jbe
mov
nop
mov
push
pop
outsl
mov
adc
rcl
xor
xchg
jne
adc
movl
dec
pop
lock
push
jmp
mov
daa
xchg
add
lea
hlt
add
std
dec
mov
push
es
cmp
loopne
call
xor
cld
pop
add
cmp
fsubs
lock
icebp
outsb
and
popa
mov
out
loopne
adc
rolb
xchg
in
dec
xor
dec
test
add
inc
mov
add
ss
push
pop
mov
xor
jl
rcl
movsl
add
js
js
addr16
popl
aam
xchg
cmp
add
repnz
or
add
or
xlat
daa
add
mov
xchg
and
stos
push
orb
xor
push
pop
mov
movsb
sub
arpl
hlt
psubusb
inc
imull
jo
jle
or
jo
das
jbe
push
sbb
out
ja
fcom
test
cwtl
mov
xor
repnz
into
or
pop
bound
clc
dec
push
lret
sbb
sub
cmp
push
enter
cmpsb
outsl
add
xor
shld
dec
push
bnd
leave
cs
push
cmpsl
add
call
cld
mov
hlt
mov
pusha
jno,pt
imul
push
ljmp
inc
mov
push
sbb
lods
test
xchg
sbb
rcrb
push
icebp
or
dec
out
imul
out
adc
shlb
clc
mov
cld
xlat
xor
mov
vmread
pop
dec
xchg
test
shll
mov
sbb
mov
mov
popa
fs
les
jmp
rolb
sub
jo
adc
add
ljmp
push
inc
movaps
int3
daa
xchg
shlb
jne
inc
push
imul
jo
lock
push
outsl
push
sti
into
data16
add
iret
fsubrl
mov
pop
mov
inc
sub
or
sub
lds
add
lock
mov
out
sbb
push
and
test
gs
mov
cmp
mov
repnz
pop
call
and
add
shlb
cwtl
lret
ja
loopne
dec
movsl
nop
xchg
popf
lock
adc
shll
addb
inc
inc
or
dec
mov
aam
or
dec
sbbl
or
add
sarb
test
push
hlt
test
gs
es
add
fsubrs
and
repz
xchg
sbb
lcall
das
xchg
push
out
stos
push
xchg
scas
push
loop
push
pop
sub
mov
dec
jecxz
or
roll
pusha
or
dec
hlt
pop
adc
hlt
xor
jle
sub
mov
js
pushf
pcmpeqb
cmc
ficompl
mov
out
mov
pop
xchg
push
push
jno
push
andb
loop
rorl
and
jmp
mov
or
fnstenv
lods
inc
les
mov
cmc
sbb
and
ljmp
mov
lds
ss
xchg
push
cmp
shlb
stos
fistps
rorl
aad
mov
pop
jo
addr16
mov
adcb
xchg
mov
adc
and
inc
add
movl
add
jle
aas
or
fistpll
movl
out
sbbb
in
add
lcall
inc
or
les
call
and
cmp
jge
ljmp
pop
lea
push
movsb
dec
fsubs
jp
outsb
adc
insb
fwait
mov
and
inc
adc
fdivl
out
fldt
add
cld
jo
icebp
or
or
xchg
xor
addl
int3
dec
mov
add
outsb
sbb
int
adcb
adcl
imul
jno
icebp
test
in
and
pop
es
inc
cwtl
jbe
sub
rclb
movsl
or
push
lahf
fisubrl
movsb
call
fisubl
dec
and
sub
mov
add
or
loop
or
mov
mov
stos
stos
lcall
addr16
cld
iret
push
shrl
xor
cmc
ss
xlat
sahf
cmp
cld
xchg
cmp
sbb
inc
aaa
rcr
imul
xor
mov
jmp
push
lock
adc
les
fldt
jg
add
jmp
fs
outsl
daa
loope
push
adc
roll
mov
stos
and
jmp
or
jno
bound
pop
cmp
in
mov
aaa
sub
mov
sub
imull
inc
xchg
lret
test
mov
cwtl
cld
add
pop
dec
cs
xchg
repnz
ljmp
dec
jne
add
jmp
dec
xor
loopne
addb
data16
arpl
dec
mov
or
mov
fprem1
test
adcb
xchg
push
mov
scas
jg
mov
sbb
loope
js
dec
ss
jl
inc
sbb
push
push
add
mov
add
std
add
or
cmp
orl
rclb
cmp
fmuls
or
fwait
adc
dec
push
fsubl
rclb
popa
scas
jno
mov
cmp
sbb
push
hlt
orl
nop
xlat
loope
jmp
pop
aas
test
xor
xlat
div
clc
repz
jo
add
ret
adc
pop
lea
arpl
jmp
xor
clc
das
jp
ja
sub
aaa
inc
cmc
mov
xchg
enter
jb
xchg
adc
mov
jae
daa
hlt
fdivrp
xor
inc
loope
mov
loope
mov
inc
test
push
mov
mov
lret
inc
loopne
mov
inc
loop
cmp
inc
adc
xorb
pop
or
clc
adc
call
cld
and
jg
lds
adc
jmp
jne
divl
pop
int3
test
movsl
dec
mov
jp
das
cmp
sbb
dec
lea
jns
imulb
lock
ds
ja
andl
inc
outsl
pop
adc
sbb
mov
clc
mov
loopne
jp
cmp
adc
or
mov
cmpsb
xchg
mov
repnz
maxps
js
dec
cld
push
push
xchg
adc
add
or
call
xchg
xorl
mov
or
ficompl
sub
les
mov
push
mov
in
jno
and
jg
lcall
mov
add
popf
stc
sbb
xchg
adc
inc
add
cmp
mov
divb
movl
daa
je
mov
push
push
fidivs
in
in
je
out
push
out
aad
xor
mov
mov
or
inc
pushf
ljmp
ss
aad
insl
adc
jne
mov
inc
and
fadd
cmp
popa
mov
test
mov
inc
lods
mov
mov
add
leave
adc
je
pop
xor
mov
jno
mov
or
xchg
shrb
ficompl
push
sbb
adc
adc
fsub
loop
movsb
xchg
push
jmp
sub
xor
sub
fs
xchg
add
fildl
adc
movsl
dec
push
ss
sub
jo
daa
jecxz
push
push
push
and
xor
test
mov
xchg
mov
xchg
test
loopne
and
adc
ljmp
das
incl
mov
cmc
jmp
add
pop
ja
dec
les
jnp
add
enter
xor
adc
js
mov
orb
sbb
lock
xchg
loopne
mov
push
stos
add
popf
mov
adc
jle
dec
popa
test
mov
sub
mov
pusha
push
fwait
mov
in
cmc
cs
lds
fimull
add
test
xor
fidivrs
lock
jmp
or
or
rorb
mov
ret
cmpsb
fdivl
movsb
xchg
shrb
push
or
xor
or
xchg
sbb
dec
loope
lock
daa
cmp
ja
mov
xor
ficoms
in
cmpsb
jl
push
and
xor
jb
lret
sbb
andl
mov
sub
ret
mov
push
and
or
cmc
lahf
aam
loop
jb
addr16
xchg
sbb
jno
js
addb
fsubl
fistpll
add
adc
jmp
xchg
pop
pusha
and
dec
jae
add
push
aas
and
sub
orb
pop
jge
adc
sbb
outsl
sbb
xor
aaa
ret
popf
in
ficompl
mov
pop
outsb
jae
xor
sbb
imul
pop
fs
cmp
rolb
and
jnp
call
add
push
shlb
mov
aam
push
cmp
mov
loope,pt
mov
sub
pop
add
sbb
cmp
mov
popa
pop
sub
out
xchg
mov
cmp
in
hlt
pusha
rol
push
inc
jne
inc
push
push
mov
sbb
in
mov
inc
xchg
dec
jmp
sbb
push
cli
sbb
xor
leave
sti
or
dec
sbb
les
push
xor
cltd
add
inc
inc
sub
mov
inc
or
adc
sbb
scas
and
rcr
xchg
mov
adc
mov
inc
mov
fwait
jp
std
sub
lret
jae
mov
mov
dec
push
and
incb
inc
pop
push
add
mov
addr16
addb
subb
mov
stos
xor
rol
xor
mov
outsb
jae
or
mov
dec
mov
daa
jp
sbb
adc
fidivl
lods
shrl
js
push
xchg
insb
ficoms
daa
je
imul
sbb
sub
outsl
jecxz
adc
stos
stos
into
or
xchg
sbb
xchg
jle
movnti
or
shll
loopne
xchg
pushf
pop
pop
xlat
sarl
mov
data16
add
cmp
cli
xchg
dec
outsl
push
enter
das
cli
inc
scas
fwait
and
in
inc
push
ret
mov
pop
call
sub
out
ss
enter
lret
hlt
mov
push
mov
mov
icebp
inc
cmp
pop
movb
xor
push
aam
xchg
jecxz
inc
dec
mov
inc
ljmp
and
sub
mov
daa
ret
sarl
mov
mov
cltd
push
cmp
push
daa
cwtl
aam
jne
fcoml
mov
loope
insl
sub
push
jg
dec
xor
sbb
or
dec
or
sbb
mov
add
and
imul
inc
cmpsb
jg
bound
inc
push
imul
mov
and
pop
dec
mov
rclb
repz
daa
xor
mov
push
add
add
push
icebp
inc
sbb
mov
dec
jns
or
test
cmp
and
push
pop
insb
std
mov
das
loopne
and
jmp
push
push
or
cltd
xlat
fsubs
jns
jecxz
pusha
xchg
xor
or
xor
jp
xor
cmp
addb
add
inc
and
xchg
xchg
fmuls
xor
add
sub
cmpl
dec
loopne
loopne
mov
xlat
fimull
aad
mov
repz
es
lds
adc
cmp
cmp
nop
mov
popa
in
and
ret
mov
add
rcl
mov
mov
fsincos
inc
jp
dec
push
jl
jmp
sub
xchg
sarb
and
or
lea
daa
jo
mov
enter
shl
pusha
lret
xchg
ret
add
add
jmp
sbb
fidivl
xor
scas
cmpsb
fstpt
jl
and
add
add
mull
mov
dec
inc
sbb
in
js
lds
and
mov
xchg
fisubl
push
ss
and
insl
mov
mov
sub
xchg
mov
fcmovnbe
sub
cmp
xor
fistpll
or
mov
sbb
lock
shlb
mov
mov
mov
xor
jo
mov
or
mov
loopne
sub
addr16
pop
in
jmp
inc
mov
fst
jecxz
sysret
inc
stos
xchg
popa
div
or
dec
repz
mov
ret
xchg
loope
sub
pusha
or
out
lea
decl
and
jp
das
adc
mov
ret
mov
into
jmp
je
lret
xor
shlb
popa
add
popa
out
hlt
and
outsb
push
cld
or
push
dec
add
cmp
sub
pop
or
pop
and
addb
xor
in
sub
jnp
push
cwtl
mov
pusha
push
orl
ret
dec
sbb
dec
add
push
cmpsl
sub
mov
or
push
lahf
addr16
xor
imul
sbb
push
mov
mov
cmp
xor
fimull
addl
scas
insl
mov
stc
xchg
lock
je
stos
jg
mov
or
dec
test
add
aas
loopne
gs
and
pushf
inc
testl
or
out
rclb
icebp
jnp
xchg
dec
xchg
in
lock
jmp
arpl
ret
inc
jbe
mov
stos
inc
push
sbb
sub
pop
pop
jne
out
cmp
roll
cmp
dec
pop
fsubr
sub
jb
xchg
fistpl
adc
jmp
test
jne
idivb
or
lock
mov
lds
in
adc
shlb
fcoms
test
faddl
jmp
rcrb
ljmp
mov
das
iret
push
shr
add
icebp
inc
or
cmpsl
movsb
cmp
inc
stos
pop
cltd
loopne
dec
or
xchg
add
inc
jl
push
cltd
push
xor
int
mov
pop
sbb
push
mov
push
jae
jbe
fidivs
lods
daa
sub
mov
and
aam
mov
iret
and
push
pop
out
pop
jnp
jnp
cmp
cli
test
adc
inc
prefetchnta
mov
push
or
ret
pop
mov
and
sbb
dec
sub
mov
xchg
sti
pusha
in
push
and
cmp
sub
jnp
enter
movsb
test
inc
jae
pop
test
fidivs
movsl
sarb
int3
icebp
arpl
stc
mov
rcl
sub
call
jecxz
xadd
sar
push
lea
xor
xlat
add
push
mov
sbb
cmp
mov
int3
and
xor
pop
push
cmp
or
jno
inc
sbb
jmp
mulb
daa
nop
rcll
and
enter
mov
mov
sti
cmc
movsb
popl
push
orb
xor
fadds
xor
sbb
orps
or
sbb
lods
fcomp
mov
and
shl
inc
ret
lods
iret
or
lret
leave
adc
mov
jecxz
mov
inc
add
and
clc
ret
sub
add
std
dec
xchg
sbb
adc
xchg
mov
inc
jbe
and
lods
andl
add
sbb
loop
rorb
in
and
shl
push
xor
or
xlat
add
outsb
and
cs
cmp
add
mov
outsl
xchg
call
xorb
out
ds
test
sub
repnz
mov
das
lds
mov
push
jae
jno
faddl
popa
cwtl
xchg
in
mov
iret
hlt
mov
mov
inc
mov
or
add
xor
adc
cmp
in
stos
xor
dec
js
add
push
out
sub
mov
inc
add
in
out
pop
pop
sahf
xor
mov
shlb
addb
cmp
aam
xlat
icebp
les
mov
ficomps
ljmp
sub
jbe
or
mov
xor
movl
outsl
add
xchg
sbb
or
mov
mov
addr16
inc
insl
ret
ror
shlb
arpl
into
sti
movsb
addl
js
cmpl
pop
rolb
or
mov
ret
enter
sbb
lds
dec
xchg
pavgw
sbb
push
cmpsb
rolb
or
lret
cmpsb
adc
repnz
lret
hlt
inc
divb
lret
mov
sti
es
jle,pn
imul
or
call
inc
sbb
loope
sub
fistps
jg
sub
test
ja
in
je
xor
imul
js
push
in
loope,pt
ret
sub
out
push
or
push
js
push
add
jp
icebp
adc
into
pop
jecxz
imul
pop
insl
mov
popf
jbe
lds
sahf
mov
adc
test
jg
aas
jbe
and
sbb
pop
int3
sbb
loop
push
scas
subb
dec
sub
icebp
test
and
push
pop
add
jle
js
sub
push
rol
jecxz
inc
mov
dec
add
add
add
adcb
inc
test
ja
jae
add
dec
mov
lock
mov
out
out
or
jmp
nopl
and
add
pusha
add
jno
xor
js
xor
stos
sarb
and
cmpsl
jmp
add
push
xchg
xchg
mov
cmp
jae
in
jo
or
or
sub
add
adc
daa
jb
in
andl
add
push
sbb
inc
sbb
mov
daa
mov
lods
mov
push
mov
push
add
add
call
xlat
ja
mov
xor
mov
lods
inc
cwtl
je
pop
rorb
popa
push
mov
enter
loope
mov
jns
or
test
mov
ret
adc
or
sbb
lods
mov
xchg
or
jecxz
sbb
enter
daa
inc
or
icebp
int3
push
add
jmp
sub
mov
rcll
sbb
arpl
sbb
mov
ljmp
sbb
ret
test
lret
adc
xlat
add
rcrb
fmuls
add
dec
mov
and
xchg
cmovg
sarb
fbstp
pop
shlb
fidivs
cltd
pavgw
mov
mov
out
sub
bswap
cs
xor
add
mov
sbb
mov
jle
pop
xchg
push
add
add
sub
repz
clc
xchg
addb
notb
or
loope
jo
int3
mov
xchg
imul
inc
movl
sbb
mov
ret
popa
test
mov
rol
pushf
add
rcrb
push
mov
or
or
jb
loopne
pop
sub
stc
mov
jo
ljmp
or
push
jmp
loope
inc
mov
dec
out
incb
in
gs
or
push
jns
pop
test
dec
and
mov
adc
add
movsb
jb
xchg
jae
pusha
jno
mov
pop
sub
lret
rcrb
push
adc
jmp
stos
push
xor
jg
add
push
adc
mov
or
cmp
push
xchg
jae
jnp
test
shr
cli
cwtl
jo
sbb
pop
test
cmp
adc
dec
cmp
pop
sub
adc
and
adc
pop
mov
xor
mov
notb
in
pushf
aaa
enter
pop
add
mov
test
jb
cmp
outsb
jl
jae
jecxz
daa
adc
insb
mov
xor
jbe
xchg
push
scas
test
adc
cmc
in
xchg
arpl
or
test
jle
inc
out
pop
sbb
push
xor
loopne
adc
mov
repz
rcll
add
dec
push
pop
cmp
cmpsl
push
push
test
lock
ret
jo
in
sub
call
push
loopne
and
sub
push
ret
add
mov
aam
in
orb
arpl
jne
mov
clc
sub
pusha
out
movsb
dec
sub
push
aaa
arpl
cmp
les
dec
sbb
inc
sbb
out
push
dec
add
pop
jl
jge
xlat
pop
lock
xorb
js
std
shl
adc
pop
dec
xor
adc
dec
clc
movsb
in
stos
and
loope
in
xor
jae
dec
iret
lock
jecxz
data16
cmp
loope
call
and
test
inc
imulb
pop
pop
cmp
out
andl
adc
push
ret
or
lods
add
inc
push
or
pop
fcmovb
add
pop
xchg
sbb
lcall
and
call
sub
jmp
mov
mov
and
in
inc
test
mov
cmp
lret
in
sarb
jo
or
pop
mov
mov
das
loop
fwait
push
lock
cmp
push
sub
dec
lret
shll
adc
xor
and
out
shlb
movsl
xor
dec
push
jne
hlt
inc
jo
push
or
arpl
insb
sbb
decl
por
pop
xor
je
outsb
adc
add
adc
mov
insl
loop
and
pop
lods
cmp
and
adc
xor
pop
sub
inc
inc
rcrl
xchg
mov
dec
sbb
xlat
loopne
jnp
lock
xchg
adc
or
andb
mov
addl
incl
add
inc
fsubs
ljmp
cmpsl
dec
and
aaa
loopne
inc
divl
sub
out
push
arpl
mov
pop
jb
andl
mov
add
mov
mov
mov
sub
jle
test
jbe
push
jge
pop
mov
jbe
ret
sub
test
out
xchg
and
cmp
cmp
shlb
push
jo
cmp
rcl
mov
sub
lods
mov
jmp
or
jae
fisubs
xor
adc
dec
jecxz
imul
add
popf
or
and
pop
fcom
adc
bound
loope
sbb
js
insb
push
add
stos
xor
jecxz
cmpsb
lods
lahf
sub
test
rclb
mov
shlb
loopne
xchg
adc
enter
cmpsl
add
sbb
pop
dec
loope
sub
inc
mov
adcl
jg
sbb
pop
adc
jp
and
in
daa
mov
sub
push
in
pop
jmp
clc
test
jae
cmp
mov
movl
int
lret
int
push
ja
shll
adc
sub
subl
test
sub
mov
jbe
outsl
clc
xchg
and
mov
add
addb
xchg
jae
rcrl
mov
int
out
inc
aas
sub
sbb
push
inc
scas
pop
popa
dec
or
sarb
pop
subb
in
loopne
addb
mov
scas
nop
mov
rcll
mov
adc
mov
sub
or
loopne
fbld
mov
cmp
ja
mov
or
push
mov
cmp
jne
aas
out
nop
push
and
sub
and
add
nop
adc
out
nop
ror
fdivs
or
out
rolb
out
push
jne
jo
xchg
sti
ss
jg
dec
aas
lret
xchg
xor
adc
jp
pusha
dec
mov
mov
xor
add
pop
mov
xor
mov
lret
pop
mov
ret
lea
mov
rcrb
inc
popf
sub
or
push
mov
jne
fadd
sbb
pop
push
rorb
add
mov
scas
sub
fldenv
inc
push
imul
push
js
mov
pushf
mov
pop
jle
push
loopne
jb
cmp
cmp
jne
test
add
pop
mov
in
call
jnp
xor
pop
and
add
sbb
ds
testb
inc
inc
push
aaa
adc
sbb
out
fiaddl
cmp
cmp
subb
jmp
push
sub
cltd
mov
movsb
pop
arpl
pop
ret
ljmp
lock
xchg
cmpsl
loopne
mov
jb
hlt
clc
roll
data16
adc
repnz
cmp
aas
jo
pop
fdiv
sub
adc
fidivs
sub
add
and
or
icebp
dec
orb
test
ja
sbb
add
fstpt
loopne
push
or
pop
das
aas
adc
dec
add
and
icebp
test
jb
hlt
hlt
fisttpl
add
or
mov
push
pop
adc
push
push
imul
scas
inc
stos
mov
test
lret
ljmp
filds
loopne
ud0
xor
jae
andb
lret
pop
pop
add
testl
xor
rcll
mov
jb
mov
cmp
pop
sbbb
or
and
mov
jo
mov
shl
add
dec
dec
sbb
push
ja
icebp
mov
fnstenv
in
hlt
test
loopne
arpl
adc
test
and
mov
inc
and
and
rcrl
pushl
and
xor
lock
je
push
call
inc
int3
inc
rolb
inc
pop
inc
cmp
les
sbb
mov
inc
fdiv
sbb
inc
test
bound
fadds
mov
sbbb
adc
incl
pusha
xor
rorb
orl
mov
call
mov
jb
and
cmc
rol
clc
loop
nop
call
adc
cs
mov
mov
inc
pop
ret
push
shrb
adc
inc
add
cld
mov
ret
movsb
scas
jecxz
sbb
out
or
loope
lock
pop
sub
hlt
ja
push
or
adcb
xor
push
or
mov
test
dec
js
and
pop
sub
add
movb
push
mov
pop
fsubr
call
and
test
pop
xchg
xchg
adc
lock
mov
add
mov
ljmp
xchg
loop
jge
test
js
sbb
aad
and
cmp
ds
jmp
adcl
pop
rol
mov
in
and
lock
push
hlt
mov
outsb
pusha
jl
jg
sti
hlt
rclb
test
dec
mov
notl
in
dec
bound
nop
add
ret
and
jnp
sub
add
sub
sbb
cs
pop
stos
pop
pop
jne
xchg
xor
ficomps
pop
adc
adc
mov
xchg
add
sarl
xchg
add
sub
sub
insl
xchg
xacquire
sub
dec
out
test
and
dec
aad
push
lea
in
mov
jmp
sbb
cld
push
inc
add
ja
mov
add
call
push
fwait
std
adc
add
sar
stos
or
cli
and
xor
outsl
fcmove
je
push
mov
inc
and
sub
inc
jno
gs
add
sbb
arpl
ret
inc
inc
lcall
add
loope
popa
nop
or
add
adc
loope
sbb
sub
sbb
addl
mov
mov
jmp
sbb
inc
sbb
aaa
fs
add
mov
push
jecxz
rclb
hlt
cmp
and
jb
pop
inc
call
insb
nop
push
ljmp
push
stos
mov
add
inc
add
mov
pop
icebp
cmp
push
xlat
xchg
ds
pusha
pop
cltd
or
inc
cmpb
push
aad
xor
pusha
push
push
outsl
cmp
mov
adc
sub
adc
scas
arpl
in
sar
daa
mov
xchg
sbb
test
arpl
loopne
adc
addb
xor
jno
loope
add
cmp
or
dec
mov
outsl
sbb
sub
test
sti
xor
jmp
xchg
lock
adc
pop
pop
or
mov
sbb
cmp
icebp
loop
jle
out
jo
sbb
xor
orb
push
mov
xchg
pop
sbb
fisubrs
ret
adc
cmc
scas
sarl
fimuls
add
icebp
pop
das
rcl
push
dec
xor
outsb
pusha
pop
aad
push
mov
das
push
mov
or
ficompl
lock
lret
xchg
js
push
add
sbb
jo
imul
loopne
inc
ja
daa
int
adc
int
sbb
lret
add
sbb
add
roll
nop
popa
lock
xchg
xchg
mov
pop
ret
ret
lds
push
dec
dec
inc
hlt
push
mul
add
fiadds
lea
ret
clc
mov
pop
cld
add
push
hlt
add
cmp
inc
adc
addl
je,pt
mov
xchg
or
ret
addr16
aas
sbb
xor
push
inc
lock
lock
or
sub
arpl
addl
add
jbe
push
loopne
pop
push
jno
sub
sbb
add
or
add
mull
ljmp
cmpl
adc
and
adc
lret
fistpll
add
push
mov
mov
inc
clc
xchg
or
icebp
test
jb
pushf
mov
subl
stos
sub
outsb
push
sub
or
adc
xor
xchg
mov
mov
sub
xchg
ja
inc
jle
sbb
mov
decl
stos
mov
out
xchg
mov
push
xor
cmpsb
sarl
ja
cmpsl
xchg
call
loope
lock
rcl
dec
jno
movsl
jmpw
add
daa
rcr
jbe
cwtl
idivb
imul
xchg
cmc
xchg
dec
in
loopne
xlat
popa
xchg
sbb
shll
stos
xchg
lock
ret
mov
xlat
inc
das
dec
add
mov
imul
in
or
mov
out
sbb
dec
sarl
nop
shlb
xchg
frstor
filds
ret
xchg
lock
push
popl
or
add
dec
add
das
je
mov
outsb
icebp
hlt
add
inc
ret
sbb
mov
test
pop
push
ja
and
xchg
mov
pause
push
jecxz
cmp
jae
mov
pushf
sub
mov
mov
add
sbb
call
sbbb
sbb
mov
ret
inc
mov
outsb
adcb
int3
or
and
pop
pop
imul
pop
mov
mov
mov
sub
push
adc
sti
adc
sub
add
add
or
fisttps
add
adc
fdivs
lret
mov
sub
push
mov
cmp
add
dec
push
pop
rcll
inc
inc
inc
sub
scas
fiadds
dec
enter
fcmovnb
loope
or
fidivl
shrl
in
inc
mov
add
call
jno
mov
xor
cmpb
add
and
lods
or
inc
std
fldenv
push
xchg
and
jmp
mov
mov
mov
or
das
xchg
adc
cmp
push
add
xor
and
adc
sbb
loop
xadd
sarl
out
pop
or
mov
fwait
dec
mov
fnstcw
sub
mov
xchg
add
imul
xchg
mov
mov
mov
mov
mov
adc
or
insb
mov
jmp
lea
sub
lock
or
shlb
cmpsb
xor
adc
or
iret
daa
add
mov
cltd
xor
dec
xchg
jns
sbb
leave
ret
loopne
cltd
push
add
pop
icebp
sbb
out
mov
cmpb
das
insb
lret
or
les
scas
pop
fsubp
jo
and
daa
icebp
or
mov
filds
pop
pop
das
sbb
icebp
xor
xorb
jns
push
push
xor
push
ss
mov
jle
add
insl
jl
out
in
jmp
addr16
js
push
adc
sub
xchg
jp
sub
sbb
xor
cmp
test
cmp
sub
out
jns
in
add
mov
rorb
sbb
pop
add
or
test
push
add
lret
cmp
xchg
sbb
dec
and
pusha
lods
mov
sbb
into
add
rorb
sbb
jecxz
xor
rcrl
cmc
mov
jmp
add
xor
add
pop
xor
push
out
add
push
xchg
test
or
shlb
inc
sub
inc
or
jo
jo
loope
les
test
or
cmp
pop
sarl
dec
adc
inc
ljmp
clc
mov
inc
cmp
dec
pop
inc
jo
test
push
sub
or
xor
addr16
and
addl
xchg
loope
mov
cmpsb
jo
push
test
jg
push
or
scas
lock
dec
pop
adc
add
pushw
add
sbb
mov
fmull
lret
daa
sbb
dec
inc
orl
mov
hlt
in
inc
fwait
dec
mov
mov
adc
jo
sub
push
mov
push
inc
dec
ljmp
add
push
int
fmull
sub
push
dec
hlt
push
nop
lock
sahf
aad
adc
mov
stos
cmpsl
push
jb
jge
mov
aam
jne
sub
mov
out
sti
in
pop
jo
in
push
inc
cmpsb
pop
in
daa
adc
stos
dec
daa
cmpsl
mov
or
mov
dec
and
fsubrl
cmc
add
sbb
mov
sub
dec
test
std
mov
loope
popf
pop
dec
pop
pushl
xchg
cvtdq2ps
or
mov
mov
dec
inc
hlt
and
mov
pmaxub
dec
push
lret
testl
inc
popf
sbb
inc
orb
xchg
xchg
scas
or
sub
pop
push
movl
xchg
xor
jmp
xchg
test
mov
popa
fistps
mov
mov
lcall
fs
stc
das
enter
pop
xor
push
jne
aaa
add
stos
xchg
inc
addb
std
push
sbb
std
stos
daa
pop
loope
jo
jmp
add
shrl
xchg
rcrb
xchg
cmp
or
xor
xchg
sbb
sbb
testb
pop
or
cmp
aad
inc
push
or
sub
mov
push
xchg
mov
dec
stos
lods
adc
adc
and
sub
in
xchg
pop
xorl
jmp
or
nop
int
push
xor
mov
dec
xor
add
out
in
mov
sub
adc
add
adc
push
cmp
sbb
xchg
push
cmp
add
lret
ret
adc
add
sbb
test
rorb
push
mov
lock
int3
mov
fiaddl
enter
sahf
ljmp
lock
shrb
dec
dec
inc
pop
rcr
and
pusha
inc
pop
add
ret
fists
jle
mov
adc
sbb
jge
jl
outsb
divb
out
and
dec
adc
or
cmp
insl
cmp
xor
enter
jmp
sbb
jecxz
mov
sub
sarl
or
lock
sub
mov
mov
aad
and
sbb
sub
push
test
sbb
and
push
ret
stos
out
test
repnz
jmp
push
icebp
shrl
es
dec
pop
jmp
xor
lea
mov
cmp
sbb
mov
das
jle
xor
add
xor
ret
enter
pop
mov
sbb
jnp,pn
rorl
andl
int3
dec
sahf
and
cmp
inc
jge
mov
push
lcall
or
jb
scas
sbb
add
ret
sbb
pushf
or
sbb
lret
jl
or
push
in
jg
xlat
xor
loop
push
xchg
sbb
lcall
xchg
mov
aad
out
cld
dec
dec
cmp
jmp
mov
and
mov
and
add
inc
push
dec
test
lock
stos
fcom
fisubs
add
adc
imul
mov
clc
test
dec
sbb
out
pop
mov
and
pop
inc
stos
mov
sbb
xor
shrb
and
rclb
das
imul
into
aas
in
dec
mov
inc
push
imul
mov
lods
adc
push
gs
in
addl
pusha
loopne
add
push
rolb
pusha
pop
xor
fdivrl
xchg
hlt
ja
clc
hlt
xchg
out
add
mov
loopne
pop
and
std
add
lcall
cli
sbb
jnp
loopne
jbe
pop
addr16
pop
mov
xchg
shrb
movsl
clc
dec
inc
xor
clc
xor
loopne
ja
sbb
mov
loopne
ret
insb
es
dec
cmp
fsub
sbbb
jg
shll
add
loop
cli
jno
aas
add
cmp
arpl
or
fcmovnbe
dec
shrb
pop
enter
xchg
test
add
xchg
dec
loopne
loop
push
in
inc
xor
mov
dec
adc
push
mov
cmp
sub
fnstsw
sbb
cwtl
sub
or
sbb
lods
movsl
push
clc
cmp
rcll
push
inc
sti
xchg
movl
icebp
test
and
and
add
rclb
dec
negb
pop
sbb
push
sbb
mov
loopne
pop
cld
fidivrl
ds
dec
mov
inc
push
mov
jmp
mov
xor
and
push
lds
mov
cmp
and
sub
fs
adc
jge
cmp
mov
lret
loope
and
mov
or
jns
mov
mov
pop
aam
adc
mov
push
shlb
aam
xchg
add
mov
popa
aas
insb
fistps
ljmp
jbe
xchg
inc
jne
add
dec
inc
sub
pop
or
dec
mov
out
sbb
fbstp
and
sbb
and
jmp
outsl
cwtl
jecxz
push
stc
cltd
push
shr
mov
stos
test
jecxz
xchg
aaa
sbb
add
jbe
inc
inc
push
call
out
or
aad
add
mov
xor
div
scas
je
sbb
jae
jo
int
jae
imul
mov
pusha
test
in
xor
sti
fdivrs
sti
ret
inc
mov
jb
pushf
minps
add
mov
pop
xchg
push
jne
sbb
ret
ficomps
in
cmp
outsb
ret
sub
mov
jae
stos
in
shl
fs
xlat
call
sbbb
or
mov
idivb
cld
scas
test
push
lock
out
jle
dec
lret
js
fadd
cld
jp
jp
cld
outsl
inc
add
and
mov
subb
jns
adc
sbbb
shll
cmp
aas
push
scas
out
mov
hlt
xor
jns
test
nop
push
cmc
mov
hlt
int
into
sarb
sub
add
int
pusha
or
xor
shl
xor
in
cld
mov
popa
sbb
push
jg
xchg
jne
add
jmp
aaa
pop
pusha
dec
les
adc
pusha
fs
imul
fwait
aam
push
addr16
or
call
aaa
dec
or
push
and
cli
mov
movsl
sub
push
dec
inc
add
loope
rcl
je
sub
sbbl
in
push
ret
bound
in
gs
hlt
sub
or
sub
pop
shrb
ss
sub
or
jo
movsb
or
ret
cld
mov
sbb
dec
or
add
adc
xchg
jg
mov
mov
mov
or
lahf
aam
jle
test
aad
mov
sub
in
push
cld
aas
mov
in
mov
in
adc
or
xor
or
add
and
cmpsl
movsb
xchg
shlb
add
stc
loop
andb
cmp
popf
and
jmp
stos
add
outsb
les
xor
or
shll
lret
test
cli
dec
add
or
rclb
aaa
adc
mov
xchg
subb
xchg
or
or
and
mov
push
cltd
sub
add
adc
pop
jno
jle
jno
ficoms
add
outsl
add
clc
jmp
clc
test
dec
add
mov
lret
aam
mov
pushf
jmp
loope
fistl
mov
sbb
das
stos
mov
mov
lock
push
or
nop
xchg
rclb
add
sahf
dec
sbb
cld
jnp
test
mov
shr
push
aam
xchg
in
pop
loopne
ljmp
popa
ret
xor
lock
mov
dec
add
add
push
test
subb
jnp
push
xor
mov
mov
in
add
xchg
xchg
mov
and
mov
xor
out
push
jmp
int3
call
or
sbbb
pop
jo
add
or
aaa
cmp
sub
dec
rclb
mov
incb
jmp
int
pusha
adc
add
add
idivl
xchg
sti
inc
in
or
mov
inc
lock
jmp
loopne
ljmp
adc
xchg
sub
scas
cmp
dec
push
popa
jae
daa
scas
mov
repnz
movd
xchg
add
fisttpll
lods
lock
mov
loopne
mov
push
push
dec
dec
sbb
mov
repz
xchg
xor
pop
and
mov
test
pop
cs
pop
mov
notl
andb
or
inc
or
cld
add
xchg
ljmp
add
xlat
or
je
push
or
and
movsl
cltd
je
mov
les
lods
push
dec
fisubs
lds
add
out
mov
fdivrs
and
push
into
in
xchg
xchg
dec
add
rorl
sarb
ss
fiadds
addl
icebp
add
or
fwait
and
subl
jo
lea
sub
scas
sbb
into
fs
push
pushf
sbb
stos
add
xchg
push
mov
enter
inc
lds
and
pusha
sub
loopne
pop
cmpsl
pop
sub
mov
jns
adc
rcrl
ret
xchg
inc
or
sbb
jns
and
mov
outsb
or
lret
fdecstp
mov
adc
mov
sub
sarb
pop
xor
aad
xchg
rcrb
ret
orb
or
mov
shlb
push
push
pop
add
fs
jb
pop
push
cmp
jp
repz
inc
pop
adc
pop
fxch
lcall
inc
mov
dec
daa
jmp
fistpll
or
mov
lret
pop
and
lret
and
sbb
add
cld
sbb
call
pop
sbb
ss
sbb
mov
add
movb
cld
mov
repnz
xchg
inc
add
mov
add
dec
mov
or
lret
rol
adc
push
push
push
rclb
sbb
std
adc
out
and
je
rorb
enter
add
mov
adc
sub
push
sbb
fstpl
push
sub
clc
or
push
shrb
pop
lods
movlps
cmp
sarb
add
out
das
or
outsb
lds
push
push
cld
icebp
lret
movsl
jne
cmp
dec
stos
mov
test
xlat
stc
mov
dec
or
add
mov
inc
jmp
or
movsl
add
jae
sbb
xor
sbb
fstpl
sbb
stc
add
add
sbb
push
clc
mov
xchg
or
xchg
mov
mov
sbb
jp
out
movsb
mov
fbstp
or
stos
icebp
jecxz
and
or
or
jg
loop
bound
mov
adc
aas
fs
or
das
push
movsl
adc
pop
lods
cmp
push
add
jo
movsl
inc
push
xchg
int3
insb
sbb
inc
adc
pushf
or
js
rolb
fists
xor
int3
sub
ja
push
xchg
pop
push
dec
cmp
push
xchg
pop
push
std
fiaddl
ds
test
enter
sbb
xchg
or
and
mov
test
and
rorb
pop
pop
clc
mov
or
push
stc
xor
xchg
enter
or
js
cmc
or
enter
dec
pop
cmp
push
orb
mov
sbb
std
dec
or
jno
jmp
push
pop
out
jmp
in
movsl
dec
xchg
loopne
clc
out
add
add
push
and
inc
xor
pop
test
mov
pop
mov
sub
out
mov
mov
adcb
adc
mov
jg
mov
dec
and
ds
sbb
pop
sbb
in
test
mov
mov
dec
jl
call
mov
adc
arpl
and
xor
adc
and
aaa
inc
js
xchg
out
adc
rolb
and
sub
cmpsb
xchg
pop
mov
inc
cmp
lods
mov
mov
fdivp
inc
cli
add
and
xchg
in
repnz
inc
inc
jp
in
or
xorb
lods
push
dec
cmp
xchg
push
cld
ds
insl
mov
pop
mov
ret
aaa
fs
rcll
mov
in
xchg
mov
adc
cli
mov
cmpsb
sbb
loope
int
xchg
rcl
mov
ss
or
cmc
mov
and
movsb
xchg
sub
mov
loopne
or
jmp
mov
icebp
mov
mov
mov
inc
shrl
js
dec
pop
push
jbe
pop
add
inc
add
daa
clc
aas
int3
adc
adc
push
adc
add
and
iret
add
lahf
mov
push
add
mov
jl
das
popf
xor
pop
xor
sbb
jge
and
pop
ret
fisubrl
xchg
ret
jne
fnsave
call
adc
or
movsl
cmpb
sub
ljmp
int3
fwait
ss
inc
xchg
int3
test
fstl
add
pop
adc
inc
add
dec
js
call
pop
stos
test
fwait
xor
adc
movsl
sub
cmpsl
iret
fisubs
shrb
imul
sti
mov
jle
out
xor
add
add
adc
fsubrs
call
cmp
fwait
sub
mov
inc
xchg
popl
or
xchg
gs
push
out
mov
sub
jge
shrb
mov
add
incl
les
test
sub
arpl
call
mov
push
fcoms
fisubl
mov
push
dec
pusha
repnz
lock
iret
pop
in
mov
xchg
cli
push
cs
add
es
push
mov
fildl
pop
dec
cmp
push
je
cmpsb
mov
xchg
ljmp
loop
scas
adc
sub
dec
dec
cmp
dec
imul
push
ljmp
mov
adc
dec
mov
jmp
xchg
sbbb
in
push
insb
jmp
pop
adc
dec
inc
xchg
adc
fstpt
dec
fisubrl
lods
or
xor
pop
rorb
mov
popa
add
add
mov
xor
movsl
jbe
pop
jmp
repnz
ss
mov
push
call
sbb
scas
xlat
mov
movsb
xor
xor
push
mov
sub
call
push
shlb
push
ror
jg
sub
xor
inc
jmp
or
jne
testl
and
mov
mov
loopne
loopne
mov
mov
sbb
imul
rol
ret
xor
add
fstps
push
addr16
or
cmp
xorb
jge
cwtl
cmp
adc
mov
sbb
test
fldt
mov
dec
je
dec
lea
scas
out
sub
cltd
pop
push
jmp
cli
and
and
push
cwtl
inc
adc
orb
dec
hlt
pop
sbb
inc
dec
rolb
jne
pusha
xor
loopne
fmulp
pop
inc
sub
xor
inc
push
cmpsb
dec
or
addr16
jmp
hlt
popa
out
fmull
add
cli
sbb
cmp
pop
aas
xor
and
xchg
push
pop
add
push
loope
add
pop
or
scas
or
cmp
mov
sub
pushf
mov
and
mov
ljmp
lock
inc
js
pop
dec
push
stos
jne
leave
pop
les
pop
movsb
popa
dec
rcr
sub
pop
xor
xchg
aam
mov
mov
rcrb
scas
sub
push
fstpl
jge
lods
mov
mov
jge
pushf
jo
mov
into
inc
enter
add
pop
call
jg
aam
push
push
test
push
std
jb
fistps
jbe
sub
adc
stos
inc
lods
mov
add
arpl
jg
rolb
aaa
js
hlt
jo
inc
push
fimuls
scas
jmp
imul
sub
xchg
push
dec
fmull
and
dec
adc
dec
jp
shl
subb
add
dec
add
ror
adc
jmp
aam
xchg
lock
sub
or
lods
pop
jmp
int
leave
dec
cmpsl
and
pop
mov
fists
and
push
pop
adcb
push
call
daa
push
jp
adc
mov
push
sub
push
fdivl
sti
dec
pop
icebp
adc
mov
mov
inc
sbb
xchg
pusha
subl
push
sub
lock
jo
mov
xor
pop
adcb
lds
mov
push
test
adc
xchg
adc
rcrb
clc
inc
and
add
xchg
insl
stos
or
xlat
cmpsl
fidivl
sub
sbb
cmpsl
and
push
das
pop
lret
or
mov
mov
ljmp
sub
cld
or
mov
test
sub
sbb
mov
add
in
lods
or
lds
or
in
and
pop
xchg
and
and
inc
icebp
jge
loop
jnp
movsb
push
ret
testl
ja
lcall
loope
sub
pop
pop
out
mov
or
adc
sbb
mov
push
add
mov
shr
xor
xor
inc
rcrl
ja
icebp
rclb
pop
xchg
mov
inc
shlb
cld
dec
or
pop
ret
aas
rol
add
fcoms
cld
aad
mov
xor
sbb
lret
shrb
into
nop
dec
loopne
xor
adc
inc
dec
cmpsl
daa
out
push
jp
cmpsl
fmuls
in
pop
dec
push
adc
dec
pop
push
xor
cmp
mov
fcomps
leave
add
push
add
inc
adc
out
xor
pushf
push
cld
lea
cld
push
adc
fs
mov
adc
es
push
loope
pop
and
mov
adc
pop
or
das
jecxz
je
dec
mov
arpl
add
add
imul
cli
inc
sub
fnstenv
sub
mov
mov
lock
lea
adc
sub
add
pop
ljmp
adc
xchg
jp
or
mov
sbb
mov
pop
push
add
push
push
cli
sub
add
repnz
ret
jmp
loop
imul
dec
sub
rcrb
aad
sbbl
push
stc
jecxz
inc
loopne
stc
or
mov
dec
sub
sarb
and
aaa
sub
cmp
repz
addr16
inc
dec
js
std
ljmp
inc
psraw
jmp
addb
frstor
mov
pop
cltd
dec
stos
popa
cmp
sbb
adc
rol
xor
cmp
mov
aaa
sbb
icebp
data16
mov
or
lods
and
push
jbe
pushf
test
pop
cmp
mov
push
orl
fcoml
pop
mov
xor
insl
mov
shlb
push
xchg
aad
mov
push
jne
addb
dec
movsb
xchg
fimuls
adc
push
int3
inc
les
cmp
lds
inc
outsb
adc
mov
shlb
adc
sub
test
xor
sbb
lods
pusha
inc
mov
cltd
cmp
imul
pop
pop
or
adc
adc
sbb
flds
inc
push
adc
and
push
mov
jge
pop
and
lcall
add
pusha
push
notb
fisubl
test
xor
gs
insb
jg
fistps
loopne
std
ret
cmpl
add
rorl
dec
xchg
add
sbb
and
aas
adc
cli
push
iret
maskmovq
idivl
sbb
in
add
jl
or
jno
ss
mov
push
arpl
outsl
test
mov
mov
sbb
imul
pop
mov
fdivs
aaa
adc
arpl
popa
cmc
add
pop
insb
and
mov
sub
fisubl
fmull
insb
bound
mov
addl
add
pop
aas
loopne
jbe
add
fisttps
out
js
xor
in
xor
pop
pop
inc
mov
dec
inc
push
add
xor
loope
pop
jnp
daa
mov
add
adc
or
aam
push
sbb
mov
jne
sub
xor
movsl
pop
sbb
lods
cli
mov
pop
sbb
jb
jp
jns
loopne
sub
sbb
das
sbb
cmp
dec
add
push
cmpsb
mov
popa
test
cwtl
es
movb
xor
mov
mov
sahf
or
xchg
cs
adc
inc
arpl
sub
aaa
fstl
or
clc
lret
leave
dec
or
mov
mov
mov
dec
and
rcrl
and
outsb
aad
call
enter
or
lret
cmp
shll
ljmp
and
cmpsb
add
fwait
cld
xor
testl
push
mov
mov
imul
push
inc
push
jo
int3
dec
flds
ljmp
xlat
fsubs
lock
pop
dec
divl
push
xor
loopne
xchg
ljmp
clc
shrb
shll
xor
aaa
faddl
jbe
das
es
sbb
popf
push
test
adc
js
cmp
sbb
repz
shl
test
sbb
aad
mov
and
sbb
fwait
dec
sub
inc
adc
push
xor
ja
or
add
clc
jns
pop
push
icebp
sub
incl
jmp
sbb
cltd
ja
movsl
jg
iret
out
inc
or
add
jp
and
mov
xor
xchg
xor
es
fwait
mov
out
pop
or
loopne
add
js
push
mov
in
mov
mov
dec
pop
sbb
mov
sarl
push
pop
mov
es
call
jmp
imul
mov
jo
ss
adc
xchg
std
or
sub
add
out
adc
dec
leave
pusha
dec
arpl
add
sti
add
aad
pop
fcoms
bound
imul
xchg
mov
nop
pop
cli
dec
xor
push
mov
rolb
sub
lds
sub
xor
inc
adc
sbb
adc
push
inc
fisttpl
dec
inc
fs
pop
outsl
cwtl
sub
fdivrs
sbb
aad
fwait
sahf
fcompl
ds
lods
out
in
sarl
fadd
in
adc
add
mov
mov
lods
test
pop
shll
inc
movsb
imul
loopne
mov
and
and
fsubs
or
in
pop
rcrl
arpl
aam
je
icebp
or
test
les
sbb
mov
ss
dec
ret
cmp
enter
test
mov
xchg
dec
mov
jae
ffree
mov
ret
xchg
fcomi
inc
ret
int
or
scas
mov
insl
or
and
dec
sub
xor
xchg
sbb
push
pusha
hlt
add
fiaddl
inc
mov
sahf
orb
sbb
pusha
push
jmp
rcrl
adc
lret
sub
xor
xchg
push
aaa
cmp
pop
xor
push
mov
mov
mov
in
cmpsl
inc
add
daa
mov
add
add
or
in
cwtl
xor
or
icebp
rclb
hlt
es
inc
adc
fadd
push
jo
push
sub
out
lock
or
inc
ficompl
mov
in
and
shrb
push
ror
push
jmp
loopne
jg
jno,pt
aaa
ret
jne
and
push
loope
push
add
pop
fldcw
sub
shrb
cli
enter
int
or
pop
stos
xor
cmp
xor
add
fs
iret
pop
pop
popa
push
int3
cmp
dec
outsl
push
decb
and
and
jmp
push
and
divb
fadd
add
pusha
ret
jmp
add
in
mov
jae
or
shll
add
mov
shrb
pop
or
ja
add
inc
sbb
popa
cli
mov
or
lock
and
and
lock
add
mov
ffree
imul
pop
je
jge
jb
dec
das
in
aad
rclb
push
cmpsl
jmp
mov
mov
add
xchg
push
dec
push
adc
loop
in
mov
ret
ja
aam
push
or
jmp
nop
sbb
fadds
popa
adcl
mov
xor
sahf
insl
mov
push
push
sub
adcb
popa
sub
add
stos
or
imul
or
loope
push
pop
dec
aaa
pusha
mov
jl
rorl
test
inc
ret
mov
mov
hlt
xchg
popa
and
sahf
pop
lds
clc
in
mov
dec
cld
jmp
sahf
into
inc
sti
sbb
adc
in
push
adc
and
cld
mov
sbb
loope
sub
inc
and
scas
mov
push
dec
arpl
sub
pop
clc
xchg
out
ud2
mov
add
not
xor
in
sub
dec
outsl
sbb
dec
mov
outsb
jmp
lods
adc
push
subb
ljmp
sarb
mov
mov
iret
dec
sarb
shl
xchg
fstl
test
sahf
mov
mov
ret
mov
ds
jnp
or
stos
inc
sar
test
xor
jmp
adc
fdivp
aas
popa
ja
lcall
or
inc
push
dec
and
inc
xchg
ja
jmp
popf
cmp
into
and
nop
cli
add
movb
add
cld
insb
push
jbe
and
cmpsl
add
xchg
cmp
fwait
dec
roll
ret
push
mov
mov
sbb
inc
aas
test
mov
adc
gs
push
xchg
fadds
sub
fmuls
dec
xor
pop
pop
and
jnp
nop
loop
and
xor
shr
cmp
enter
lods
ja
fldt
sub
push
fadds
jno
pop
paddsb
js
or
rorl
mov
arpl
fidivs
lods
or
test
mov
scas
jnp
mov
xchg
rorb
sub
add
add
aam
adcb
dec
mov
dec
xor
insl
sbb
or
fiaddl
decl
outsb
cmp
fisubrs
jmp
or
cld
dec
popa
add
jecxz
stos
movb
dec
dec
mov
arpl
shl
aam
clc
int
or
cmp
cmp
stos
xchg
shll
lret
cmpl
or
jle
stc
push
and
insb
cld
daa
push
jns
out
es
jge
insb
mov
inc
adc
or
jmp
pop
xchg
sbb
bound
adc
lea
push
dec
gs
call
repz
dec
jl
lahf
jecxz
test
in
mov
addr16
out
add
push
icebp
shrl
mov
adc
xor
sbb
add
out
mov
cli
adc
push
or
cmp
sub
dec
inc
mov
arpl
push
inc
aam
call
pop
sub
inc
shlb
inc
mov
inc
bound
inc
or
inc
push
xlat
pop
mov
and
mov
inc
pop
inc
mov
sub
cmp
roll
xor
addr16
xchg
imul
idivl
xchg
add
jecxz
add
add
ret
jns
add
fdivs
push
aaa
mov
sub
xchg
xor
mov
jno
lret
in
adcl
lds
inc
cmp
je,pn
pop
inc
in
adc
daa
dec
sbb
insl
fadds
lods
add
xorl
and
or
call
lea
cmp
or
adc
xchg
stos
iret
and
inc
outsl
cmp
jo
mov
add
mov
outsb
fnsave
push
and
or
test
or
cmp
sbb
add
mov
fbld
loop
mov
mov
push
orl
arpl
in
inc
pushf
jmp
or
loop
push
pop
push
and
scas
aad
mov
gs
xorl
or
jbe
xor
and
and
pop
cwtl
in
iret
xor
or
mov
push
scas
mov
btc
out
push
jmp
sbb
sub
mov
jns
xor
and
add
hlt
fcmovb
addb
andl
fs
sarl
out
push
mov
or
cmp
pushf
shrb
into
ljmp
inc
incl
sarb
add
add
clc
into
mov
or
pop
test
fmull
scas
cmp
sahf
jnp
sti
out
inc
nop
inc
lret
mov
mov
add
and
mov
xchg
jge
adc
pop
jo
inc
movsb
xchg
mov
or
insb
cmp
fstpt
je
inc
testl
test
sub
pop
outsb
add
dec
jo
sbbl
aaa
inc
icebp
scas
je
shrl
push
inc
daa
or
in
addr16
mov
dec
rcrl
sbb
sbb
add
add
xor
inc
xorl
xor
lea
movsl
pop
scas
or
sahf
jecxz
sbb
fsubl
into
lretw
add
iret
lret
xchg
sub
adc
out
xor
imul
call
lcall
jbe
jae
and
outsl
lea
sbb
cmc
repz
add
imul
loopne
out
jo
jge
push
rolb
lds
or
bound
fldt
add
push
sbb
enter
aaa
pusha
cmc
jg
sub
clc
cwtl
jno
mov
pop
jnp
cld
add
or
sub
test
fwait
cmc
pushf
push
push
call
out
jp
dec
out
nop
int3
outsl
xchg
add
and
add
xchg
mov
xchg
ss
pop
sbb
jge
notl
pop
fdivl
test
jae
sbb
and
repz
cltd
test
add
add
lods
add
hlt
push
dec
ret
fdivs
xor
sub
cmp
cmp
sarl
clc
xor
lahf
hlt
iret
repnz
xchg
dec
aaa
mov
outsb
adc
add
outsb
sti
rcrb
dec
loop
dec
lret
and
inc
sub
call
cmp
push
xor
ss
adcl
xor
ret
scas
pop
bound
out
and
mov
sahf
into
inc
mov
xor
add
jns
xor
loope
dec
jno
int3
xor
aam
roll
fxtract
mov
or
hlt
cwtl
roll
pop
adc
ret
dec
pop
push
movsl
mov
add
jecxz
or
adc
fistps
dec
inc
mov
adc
xchg
pop
mov
lret
in
cmp
xchg
mov
push
mov
push
mov
or
mov
jmp
repnz
test
les
mov
stos
mov
loope
ret
mov
xchg
jg
sbb
pop
ret
push
push
sub
and
or
mov
adc
add
vshufps
jg
jmp
cmp
xor
dec
ret
mov
xor
arpl
movsl
imul
or
add
pop
ret
daa
xchg
adc
and
fs
cltd
pusha
in
jmp
adc
push
cmp
adc
adc
xchg
pop
dec
cmc
xor
fists
ss
mov
enter
loope
xchg
mov
xor
and
dec
cmp
lret
dec
adc
ret
jecxz
xchg
test
into
pop
test
mov
xchg
add
inc
stos
and
lcall
sbbb
or
fdivrs
add
xor
popf
es
dec
mov
dec
xor
sub
in
xchg
add
push
xor
rol
dec
mov
and
add
or
adcb
sahf
pop
push
les
inc
lret
clc
add
adc
dec
jae
enter
push
cs
loope
xor
into
pop
inc
je
inc
jmp
test
or
push
loopne
out
test
xchg
xor
sub
ja
loope
cld
lods
xorb
and
sbb
jo
jae
andl
lea
mull
cmp
or
inc
xor
push
or
jg
xor
lcall
mov
and
cmpsb
push
imul
lods
or
mov
lcall
incl
jb
mov
adc
popa
mov
push
shr
test
ja
xchg
add
push
add
test
xor
sub
movups
cld
jmp
test
je
sbb
jle
lea
cmpsl
ja
clc
icebp
xchg
cmpsl
or
in
lea
mov
mov
inc
push
mov
or
jp
mov
fmuls
filds
dec
inc
loopne
jo
adc
mov
aaa
ds
xchg
clc
in
or
dec
es
mov
outsb
add
push
add
xor
je
adc
ret
shlb
imul
inc
call
ds
inc
cmp
jbe
inc
dec
sti
sub
test
cli
daa
lds
pop
sbb
insb
or
roll
and
mov
and
fists
push
sbb
out
fisubl
cmp
pushw
pop
sbbb
xchg
fucomi
hlt
dec
in
pop
jmp
loopne
xchg
jno
xor
and
lcall
sbb
or
and
inc
adc
call
fstpt
fwait
daa
aad
mov
cmp
jg
xchg
jge
imul
add
cmp
mov
popa
add
inc
adc
xor
xor
or
inc
lret
fadd
movsl
jge
bound
cmp
mov
mov
sub
jnp
divl
jmp
adc
pop
or
push
into
inc
or
popa
and
lock
sbb
sbb
stos
hlt
mov
mov
mov
rorl
pop
sbb
push
pop
lret
dec
cmp
push
lret
or
add
pop
loopne
xchg
les
cwtl
push
adc
jl
push
dec
inc
pusha
xor
movsl
hlt
xchg
mov
mov
fdivs
movsl
rclb
mov
lock
mov
pop
sbb
adc
add
dec
loope
xchg
cmp
fsubp
push
mov
enter
loope
insb
sub
stos
shrl
daa
xor
push
add
jbe
sbb
add
inc
or
add
mov
mov
test
in
xor
and
hlt
rcll
hlt
add
sbb
sti
psrlw
sub
jl
mov
jecxz
aaa
and
adc
aad
lahf
inc
xor
cwtl
decb
dec
sub
aaa
insl
es
daa
outsb
cld
ret
repnz
xchg
rclb
scas
ret
jmp
dec
in
pop
pop
inc
loop
jmp
hlt
pop
pushf
es
mov
aaa
sbb
push
in
lahf
adc
sub
jp
bound
and
out
cmpb
pop
sub
std
arpl
cmp
ss
pusha
pushf
adc
or
insl
repz
into
adcb
aas
in
dec
fcomps
ss
inc
out
mov
call
rorb
xor
add
ss
stos
sti
cli
sbb
or
roll
fisubrs
push
cmp
xor
sub
idivb
popa
add
pop
stos
push
mov
mov
nop
cmp
jle
dec
iret
addl
js
xor
sub
test
fistps
mov
mov
in
mov
rcrb
push
push
sbb
jbe
mov
adc
lock
xchg
lahf
icebp
push
add
call
mov
add
pop
loopne
inc
sbb
xor
cmp
xchg
pop
sarb
movb
cld
push
loope
cltd
stos
adc
and
jb
mov
les
dec
xchg
out
test
jmp
data16
out
inc
xchg
cmc
das
loopne
adc
sar
fisubl
ud2
mov
pop
in
push
cwtl
push
lret
inc
mov
call
and
and
xor
lret
fwait
aam
mov
xchg
pop
push
sub
xchg
add
or
sbb
cmc
push
adc
pop
icebp
mov
inc
mov
decl
andl
leave
adc
push
sbb
push
xchg
sub
push
sbb
mov
or
xor
mov
mov
and
xchg
nop
dec
lea
sbb
inc
aaa
xor
inc
xorb
int3
hlt
pop
cmp
fucomip
xchg
cmp
and
jnp
and
xorb
and
dec
in
adcl
jle
adc
push
rolb
bound
pop
loopne
xor
adc
inc
jg
cmpsl
test
dec
sub
push
cli
cli
adc
loopne
sbb
cmp
cs
fimuls
add
les
mov
adc
inc
rcrl
roll
xchg
ds
jmp
add
mov
movsl
outsl
mov
mov
dec
sub
sub
or
push
sub
mov
xlat
ret
mov
shl
jecxz
inc
clc
outsb
adc
and
pop
inc
movsl
adc
in
stc
xlat
out
add
inc
pop
add
push
clc
cltd
mov
andb
adc
sub
nop
cltd
mov
dec
push
push
fadds
daa
cmp
add
xor
test
sub
stos
pop
lahf
mov
cli
test
cmp
pop
cmp
mov
add
jae
scas
or
sbb
cmp
mov
cld
cld
pop
mov
sti
fdivrl
adc
adc
or
add
divb
leave
adc
mov
cmp
sti
in
dec
add
jo
push
xor
shrb
inc
in
mov
jmp
jno
sbb
pop
shlb
inc
out
dec
sbb
inc
pop
add
add
sbb
lret
fisubrl
sahf
mov
push
jne
xchg
cmc
mov
decl
mov
and
icebp
shr
enter
dec
imul
mov
hlt
mov
cmpsl
ja
mov
or
fldl
xor
jo
fdivrs
xor
cltd
dec
push
add
xlat
jp
aaa
xchg
or
mov
lock
addl
adc
scas
dec
inc
or
ficompl
dec
push
loop
push
fiaddl
imulb
push
sbbb
and
aad
jno
mov
adc
and
lods
mov
jb
xchg
sbb
shll
aad
stc
lods
aas
lods
shll
lods
loope
fistps
aam
sti
out
push
xchg
dec
sbb
mov
lock
js
cmp
or
iret
add
jg
imul
pop
fistps
ret
lock
cli
and
ficoms
aaa
movsl
sbb
add
sub
sbb
ret
push
mov
orb
and
fnstsw
sub
xor
pop
xchg
or
pop
xor
bound
sbb
daa
sbb
push
xchg
add
outsb
push
test
xchg
mov
rclb
orl
push
inc
lods
lret
fldt
mov
in
arpl
jo
mov
sbb
mov
nop
imul
popf
push
outsl
mov
shl
inc
pop
test
or
or
adc
xchg
stos
inc
sbb
or
icebp
add
movsl
shlb
add
inc
sub
push
jmp
lcall
ret
push
aaa
pop
mov
pop
push
push
jae
shll
pusha
or
fcompl
dec
cmpsb
push
push
sbbb
test
loopne
xlat
or
mov
imul
mov
in
xor
jnp
add
stc
pop
loope
push
fcom
pushf
bound
xchg
aam
dec
mov
in
lods
js
test
cs
sub
dec
dec
mov
dec
loop
enter
mov
add
ret
xlat
pop
out
les
adc
mov
xorb
test
add
lds
inc
ja
clc
or
mov
mov
cmpsb
shrb
decb
jl
iret
lods
dec
sub
movb
mov
les
hlt
sub
inc
imul
out
ret
in
push
or
adc
popf
add
pop
push
test
or
or
dec
insl
icebp
adc
ret
fbstp
dec
popf
pop
movsl
fidivrs
add
inc
repnz
and
jmp
bound
addb
pop
add
shrl
jnp
add
aam
pop
mov
leave
in
push
push
insb
repnz
push
into
dec
addr16
adc
dec
push
orb
out
pop
sbb
clc
or
addb
loop
lods
fcmovbe
push
test
sar
fwait
enter
add
inc
cwtl
jg
inc
inc
stc
dec
stos
rorl
push
stos
add
clc
adc
jmp
imul
mov
jmp
addr16
xchg
mov
imul
adc
stos
dec
shll
hlt
in
in
sahf
push
push
adc
mov
repz
mov
call
and
iret
ljmp
arpl
or
mov
icebp
aas
adc
mov
enter
pop
mov
sbb
test
and
shll
hlt
cmp
jns
sbb
negb
mov
jmp
and
add
mov
dec
sbb
inc
jne
mov
ja
scas
cltd
mov
icebp
sub
push
lock
cmp
push
les
mov
inc
sti
vcvtdq2ps
or
sbb
mov
arpl
or
push
imul
mov
fistl
aam
jmp
adc
add
lock
xchg
js
les
add
or
sub
loope
data16
mov
adc
adc
nop
loope
dec
xor
mov
add
inc
xorl
incb
jb
jmp
hlt
cmpsl
or
mov
pop
inc
dec
or
hlt
sub
rcr
or
inc
mov
and
mov
add
cmp
movsb
xor
push
inc
add
test
icebp
push
inc
loopne
dec
xchg
pop
cmp
cltd
pop
xor
add
mov
call
mov
mov
es
sbbl
mov
lahf
rcll
rorb
push
adc
jge
iret
or
or
or
gs
jbe
mov
fisubs
adc
adc
cltd
rcrb
in
bound
dec
sbb
add
jo
pusha
jno
xchg
mov
pop
ret
stc
ret
add
out
insl
push
dec
fnstcw
fwait
nop
mov
mov
mov
mov
push
mov
imul
push
pushf
test
mov
negl
rclb
mov
outsl
add
scas
rcrl
sbb
inc
push
and
mov
jns
and
mov
shrb
shrl
jae
pop
stos
fildl
stc
enter
inc
inc
pop
jl
or
int
dec
sub
dec
fadds
fcoms
push
movsb
sbb
int3
inc
fadds
test
or
fmul
int3
xchg
add
and
inc
pop
test
or
roll
ss
fsubrs
mov
lods
mov
mov
jmp
pop
pop
add
rcl
fildll
stc
jo
popa
inc
mov
loopne
jno
fadds
mov
mov
inc
lds
lahf
ds
test
adc
adc
arpl
cld
out
inc
popa
scas
mov
roll
add
rcr
or
das
test
icebp
add
sub
shlb
sti
lock
ds
add
xor
or
int3
add
loope
cs
mov
pop
add
jmp
cmp
add
adcb
cltd
add
push
jmp
testb
lahf
mov
push
push
xor
fiadds
push
mov
or
cld
adc
push
dec
loope
shlb
add
ret
ret
clc
loopne
es
dec
add
dec
lock
inc
fmuls
clc
adc
shl
sub
incl
jmp
mov
hlt
xchg
push
or
dec
or
scas
lods
iret
imul
outsl
enter
sub
xchg
sbb
inc
rolb
repz
push
pop
test
mov
and
hlt
adcb
add
call
or
das
rcrb
not
inc
call
dec
adc
lods
add
and
mov
cmc
movsb
loope
call
andb
orb
fbld
and
fisttpl
mov
xor
loopne
loope
jl
sub
adc
mov
add
test
inc
pushf
xor
dec
sbb
andl
xchg
fbstp
add
mov
or
inc
mov
add
into
pusha
or
dec
lods
xchg
xchg
adc
jns
inc
enter
fsts
sbb
pop
loope
add
repz
pop
xor
dec
cmp
in
and
mov
idiv
adc
xor
add
adc
adc
xor
ds
or
xchg
add
movsl
lock
pop
cmovp
push
sbb
xchg
mov
into
ret
dec
or
add
xor
push
outsl
loop
fwait
xlat
adc
rol
imul
fsubs
push
cmp
adc
inc
xchg
cwtl
jo
jle
push
out
mov
mov
mov
insl
insl
inc
cmc
push
jno
sbbb
ljmp
adc
inc
or
mov
push
addb
dec
rolb
xchg
sarb
fdivs
clc
imul
push
data16
loopne
inc
or
add
ss
insb
sbb
add
xor
inc
xchg
inc
mov
jno
shlb
xor
or
push
adc
pusha
inc
mov
pop
ret
xchg
push
fwait
inc
xlat
add
pop
or
stos
fsubl
cld
sub
mov
es
cmp
cltd
repnz
cmp
adc
xor
and
mov
inc
sub
jne
adc
and
jmp
mov
mov
mov
ficomps
pusha
imul
subb
testb
add
mov
xor
aaa
xchg
sbb
mov
and
out
loop
clc
punpcklbw
add
cmovbe
add
call
dec
cmp
fadds
mov
and
jecxz
push
sbb
popa
stc
aas
mov
jg
lods
sbbb
sbb
adc
cmpsb
inc
xchg
lock
out
popa
add
lods
call
mov
mov
adc
add
push
aad
cwtl
fmull
jnp
adc
pushf
xchg
loope
or
sti
jo
xor
dec
add
sti
test
mov
mov
sub
adc
xchg
add
mov
adc
inc
rcrb
sbb
dec
paddd
inc
sti
loopne
pusha
pop
sub
add
std
fsts
mov
jl
lea
icebp
frstor
push
or
loope
subb
movsb
mov
rolb
fisubrs
aam
lea
or
pop
icebp
mov
xorl
pop
pop
jmp
repz
xchg
xchg
das
mov
mov
adc
ret
sti
clc
add
lock
add
sub
mov
mull
inc
imul
rcll
sbb
sarb
jo
aaa
mov
ja
xchg
in
jp
sub
lea
test
ja
mov
loope
pop
jge
idiv
dec
bswap
or
cmpsl
xchg
shlb
push
jae
fs
fsts
clc
and
les
push
je
and
adc
shlb
push
je
mov
or
leave
jle
shrl
std
mov
mov
cmc
int3
mov
addl
test
popf
add
fcompl
addl
sub
sbb
mov
rolb
int3
mov
cmp
ja
fwait
and
insb
sbb
loopne
pop
sub
mov
add
mov
push
jmp
imul
xchg
enter
mov
out
cmp
push
pop
adc
mov
daa
add
or
inc
roll
push
or
call
movsb
xchg
mov
gs
sbb
mov
mov
push
in
add
push
negl
and
test
sbb
xchg
push
loop
fistpl
stos
inc
stc
mov
ja
mov
fsub
out
out
adc
jno
jmp
jnp
ja
cmc
fmull
xchg
inc
lcall
out
and
dec
rcrl
lock
fcoml
adc
iret
mov
iret
ljmp
add
cltd
inc
scas
mov
mov
push
cmp
cmpsl
mov
lock
aaa
and
adc
pop
fisttpll
dec
mov
aad
jo
adc
mov
inc
jg
shrb
fildl
icebp
xor
int
std
jo
lods
inc
mov
dec
roll
add
jg
repz
in
nop
sbb
stos
mov
sbb
add
pop
or
mov
pop
gs
add
nop
sub
add
jl
dec
jmp
or
addr16
xchg
or
xchg
loope
ss
sbb
ret
and
shlb
inc
jns
mov
lods
jmp
fs
adc
xor
sbb
js
dec
pop
jecxz
hlt
shr
push
std
out
add
adc
and
jmpw
mov
std
lahf
movb
xor
sbb
sub
sbb
subb
notl
pop
stos
hlt
xor
jg
mov
add
sti
xor
xchg
out
daa
or
sbb
sbb
dec
jge
push
cli
or
ror
mov
adc
pop
mov
shrl
dec
mov
js
rorb
hlt
dec
sbb
stc
mov
stc
pop
or
imul
call
adc
push
pushf
lock
int3
iret
call
push
cmpb
lods
jb
or
mov
repz
lret
mov
jge
outsl
fisttps
adc
or
add
dec
cmp
jne
xchg
lret
aaa
push
test
ss
mov
xchg
pop
cs
jecxz
sbb
jbe
mov
pop
mov
imul
dec
cmc
ffreep
add
dec
rol
loope
popf
or
sahf
repnz
adc
push
je
nop
sti
mov
jg
xlat
scas
mov
imul
pop
pusha
imul
mov
sbb
sub
decb
stos
xor
sub
jae
fwait
call
or
insb
jo
jnp
pusha
inc
cld
mov
mov
shll
addb
lea
in
ja
shll
pop
imul
sub
lods
pop
and
mov
out
jae
or
mov
inc
es
daa
add
mov
or
popf
pusha
xlat
add
jno
sarl
jbe
sub
arpl
mov
inc
sti
or
mov
and
mov
iret
inc
or
cmp
pop
adc
dec
mov
or
cli
dec
and
add
xchg
sbb
sbb
jmp
scas
out
jmp
push
sbb
ja
cmp
test
mov
mov
xchg
add
adc
xchg
fisttpl
mov
add
or
out
add
pop
mov
cmc
jmp
xorl
add
dec
jmp
xlat
iret
mov
sbb
bound
inc
pop
mov
mov
pop
lcall
ret
inc
pop
mov
mov
jmp
inc
sbb
lods
cmp
and
sub
cli
xchg
push
add
xchg
push
add
or
lock
pop
rolb
jl
loopne
cmp
ds
or
mov
dec
div
notl
outsl
enter
pop
xor
mov
scas
incb
int3
sbb
xor
push
lods
pop
movsl
inc
and
xchg
nop
hlt
and
mov
dec
adc
not
inc
add
sbb
outsl
out
stc
mov
mov
rcrb
xchg
mov
shrb
nop
icebp
loopne
clc
mov
or
daa
pop
inc
dec
inc
or
xchg
or
bnd
scas
adc
pop
inc
dec
add
push
add
or
cli
or
jne
xchg
jb
xor
decb
popa
xchg
or
xchg
movsb
xchg
mov
mov
hlt
int
mov
pusha
and
icebp
roll
mov
out
pusha
sub
lcall
sbb
jo
dec
inc
shlb
mov
das
push
das
in
sarb
sub
push
or
dec
add
dec
sbb
lea
push
imul
jp
pop
imul
dec
pop
mov
stos
xor
push
inc
dec
cmpsl
adc
arpl
fsubl
add
add
arpl
adc
mov
or
cmp
popf
into
push
aaa
push
and
adc
aaa
mov
fwait
test
dec
mov
and
loope
out
rcrb
arpl
pop
push
mov
dec
lea
add
arpl
decb
sub
dec
cltd
dec
sub
rclb
das
pop
pop
xlat
jmp
outsb
pop
jge
lea
outsb
cmpsb
push
jno
out
movsl
or
aam
mov
das
repz
mov
fsubrl
dec
insl
imul
movsl
iret
sub
dec
pop
data16
add
lea
push
nop
movsl
ds
lahf
add
xchg
popf
push
fldl
in
push
push
lock
ja
lods
test
imul
or
xor
insb
cmp
arpl
mov
add
daa
adc
xchg
gs
mov
or
arpl
out
enter
add
dec
inc
adc
add
fcmovnbe
shll
pop
xchg
stos
lret
mov
jmp
cmp
dec
stos
fdivl
adc
sbb
sub
xchg
pop
repz
xor
inc
sub
sub
icebp
ret
or
jmp
movl
mov
not
cs
inc
popa
je
icebp
adc
adc
adcl
push
cmpsb
idiv
insl
xchg
js
fsubrs
mov
add
int3
rorb
sbb
jo
push
pop
roll
loope
add
loop
out
fisubs
loop
pop
clc
lret
lock
cli
lods
push
cld
pop
cli
bnd
in
movsb
pop
ljmp
adc
insb
cwtl
popa
sbb
xchg
push
jb
push
add
cwtl
sub
inc
addb
and
pop
push
and
and
sbb
mov
stos
lahf
inc
mov
movsl
dec
in
sub
aaa
sbb
mov
orl
sbb
nop
adc
mov
fisttps
inc
push
cmp
jb
jmp
and
lahf
and
fsubrp
add
jo
mov
or
pusha
stc
lock
xchg
push
dec
stos
jp
add
pusha
push
ror
mov
out
mov
clc
add
xchg
xor
adc
icebp
mov
clc
pop
fstps
cmp
mov
pop
fwait
mov
loope
rcrb
push
sahf
and
popa
sub
push
mov
sbb
dec
shrl
add
pusha
repnz
test
insb
cmp
rcl
sbb
sbb
push
cmpsl
in
cltd
push
or
dec
or
lahf
in
jmp
mov
les
or
aad
add
add
in
add
jae
jecxz
and
test
inc
cmp
cltd
lods
xor
jne
adc
mov
sub
xor
pop
in
ss
push
xchg
inc
rorb
aam
shlb
pop
push
lock
and
idivb
stos
in
cmp
popa
aaa
bound
jns
ljmp
sbb
push
inc
clc
inc
xchg
andl
xchg
xchg
adc
and
movsl
add
pop
lock
aam
cmp
sbb
or
fisubs
repz
in
pop
inc
and
cli
mov
xor
stos
dec
add
aam
in
loope
jecxz
push
sahf
sub
pusha
add
mov
add
push
cltd
add
xchg
loopne
sub
clc
lods
addl
push
cwtl
insl
jge
inc
xchg
mov
add
xchg
xchg
adc
pop
xchg
pop
les
aad
shlb
or
add
test
ja
mov
add
test
and
pop
and
sub
push
mov
dec
add
pop
cmp
xor
adc
les
cmp
popf
stc
sbb
pop
cld
repz
adc
addr16
outsl
xor
or
loopne
ss
in
jp
jb
sub
jecxz
dec
mov
cli
push
inc
in
mov
xchg
push
xchg
push
adc
mov
mov
mov
syscall
pushf
test
xchg
shlb
imul
int
stos
sub
shl
movb
jno
ss
test
jns
xchg
mov
icebp
rcrb
das
aam
add
mov
pop
inc
icebp
jnp
aam
test
negb
xchg
pusha
cld
cld
add
mov
add
pop
push
pop
inc
add
notl
jp
subb
loope
sbb
xlat
adc
adc
adc
add
or
adcb
xorl
xchg
shl
push
movsb
repz
push
sti
and
jne
or
aam
add
cmp
lret
jl
sub
nop
sub
jp
loop
xor
lock
jecxz
bound
dec
or
mov
jne
push
add
dec
iret
stos
pop
mov
nop
add
push
sbb
movsb
fsub
test
inc
gs
clc
clc
and
xor
stc
mov
movsl
jno
adc
sbbl
push
jge
stc
adc
jmp
xchg
nop
inc
test
iret
sub
divl
add
add
or
rorb
enter
pushf
repz
cmpsb
sbb
mov
aam
adc
fdivs
call
call
or
dec
inc
xlat
xchg
push
sbb
and
das
inc
out
cld
sbb
pusha
stos
loopne
mov
sub
add
inc
and
ret
mov
adcb
fiaddl
adc
xor
and
or
and
or
lods
jno
jle
inc
and
add
test
push
jno
pop
ljmp
and
nop
and
arpl
in
cmpl
dec
or
jae
sub
sbbb
cs
sub
mov
push
and
sbb
addl
cltd
dec
cmp
aad
in
popa
loopne
mov
popa
movsl
dec
imul
cmpsb
mov
loope
and
push
or
pop
xchg
cmp
pusha
inc
push
subl
imul
imul
scas
mov
loope
outsl
xor
stos
mov
loopne
nop
mov
and
iret
hlt
mov
or
out
mov
fidivl
pusha
pusha
mov
mov
mov
sbb
lea
adc
out
cmp
inc
dec
xor
add
mov
bound
jecxz
push
mov
stos
add
add
pop
or
movsb
and
ficoml
daa
shlb
cltd
inc
add
test
clc
dec
pop
ret
push
insb
mov
lock
scas
push
ds
outsb
jbe
adc
call
or
jge
xor
mov
es
test
scas
daa
xorl
jmp
or
add
pop
mov
pusha
mov
cltd
out
push
jp
call
dec
adc
shr
push
movsb
mov
imul
push
sahf
add
enter
sub
pop
and
mov
add
inc
xor
sbb
xor
dec
mov
push
sbb
sbb
sbb
pop
and
cmp
hlt
movsl
in
scas
lods
sahf
stc
push
popfw
push
ja
fsubl
hlt
add
stos
xchg
cmpsb
lcall
ret
gs
mov
and
ret
push
push
inc
sbb
nop
mov
pusha
add
add
repz
mov
lods
jae
pop
pop
xlat
xchg
mov
mov
xchg
mov
push
popa
shrb
adc
adc
jo
mov
jp
mov
xor
push
subb
lods
cmc
jno
jnp
rcr
jnp
adc
and
mov
or
push
push
mov
and
sbb
test
mov
pop
dec
add
xchg
call
dec
push
call
jne
das
dec
and
and
lahf
adc
xchg
test
adc
sbb
test
ljmp
stos
icebp
mov
loope
inc
lret
inc
push
test
pop
and
fcmovb
shr
leave
push
dec
sub
divb
shlb
add
push
inc
cmpb
jb
mov
and
push
loop
xor
aad
ret
xchg
shrb
frstor
test
add
add
adc
add
mov
data16
mov
jl,pt
addr16
sub
mov
rcrl
mov
in
js
js
push
fwait
jne
jno
jl
and
clc
int3
cmp
in
test
cmp
jmp
imul
gs
jecxz
sti
loope
add
adc
pop
dec
jge
sbb
aam
jecxz
cmp
jmp
or
pop
sbbb
xchg
mov
insb
cmp
push
sbb
sub
bound
cmp
addb
push
loop
das
cmp
jp
rolb
jmp
outsb
ljmp
mov
or
jb
adc
xchg
mov
adcb
les
mov
je
and
inc
cs
es
ja
stos
push
shll
jg
mov
ret
les
push
js
cmc
or
sub
pushf
xor
dec
xor
xor
mov
and
jl
mov
outsb
jp
adc
adc
mov
and
cmp
jmp
aad
cld
ja
mov
into
insl
pop
movsl
movsb
mov
daa
aas
or
stc
lds
int
adc
fsts
cmp
je
lret
movsl
mov
not
enter
icebp
test
push
ret
into
push
cmp
sbb
std
mov
ret
add
jne
pushf
addb
repnz
into
clc
add
add
ljmp
nop
mov
lea
aam
add
add
and
icebp
fnop
jl,pn
pusha
push
jno
jb
sarb
inc
and
push
mov
lods
lea
cmpsb
insb
add
fstp
and
pop
xlat
rcll
jns
fisubrs
sbb
daa
in
les
popa
cld
and
sbb
adc
lea
cmp
cmp
adc
adc
adcl
adc
pop
ljmp
jo
cmpsl
add
sub
ret
cltd
js
xor
dec
mov
add
outsb
arpl
into
call
cld
sub
data16
dec
inc
push
push
inc
clc
inc
out
faddl
mov
mov
cmp
push
inc
ja
scas
push
call
mov
sub
movsl
mov
xor
mov
mov
xchg
iret
inc
lds
xor
cwtl
dec
arpl
dec
cs
outsl
sub
or
stos
cmp
mov
xor
inc
cmovnp
fisubl
out
pop
sbb
cmpsb
add
fs
cld
cmp
add
insb
into
jmp
adc
pop
int3
or
mov
in
ret
adc
popf
jle
in
and
adc
mov
mov
lcall
pop
out
mov
ret
out
add
and
dec
mov
mov
cmpsb
jo
mov
fisubrl
push
dec
sub
inc
and
or
pop
in
cmp
add
std
nop
fisubrl
or
adc
inc
adc
push
mov
and
sub
dec
pop
push
cmpsb
mov
insl
pop
fiaddl
std
or
cmp
xor
out
mov
and
inc
cmp
push
push
jo
lock
or
add
push
movsl
sub
ds
lret
lods
out
cld
push
inc
testb
cmp
or
fldl2e
or
dec
sub
idiv
push
push
adc
or
mov
sub
sbb
push
jmp
mov
push
push
je
loop
add
divl
adc
and
test
and
adc
nop
add
push
and
ss
and
or
test
nop
inc
push
inc
and
inc
pop
fwait
std
pop
mov
adc
xchg
and
nop
add
and
inc
mov
lcall
and
cmpsb
mov
cmp
sub
and
xchg
and
add
mov
adc
xchg
inc
aam
mov
shrb
push
mov
data16
adc
add
xor
add
adc
mov
mov
fiadds
push
adc
jnp
ficompl
adc
jp
scas
mov
xor
test
mov
dec
test
add
mov
lcall
pusha
loopne
or
add
ret
or
inc
mov
and
rorb
loopne
sbb
scas
add
test
push
push
sar
adc
jp
push
test
or
imul
mov
inc
cs
shlb
push
sbb
inc
and
int3
insb
outsb
dec
rorb
int
xchg
inc
cmp
adc
push
jp
inc
push
push
test
or
sahf
lods
and
dec
and
dec
out
into
add
lcall
dec
stos
stos
sub
add
sub
dec
jl
inc
mov
mov
inc
outsb
loope
mov
stos
mov
or
adc
jne
mov
sub
add
mov
push
xorl
or
sahf
int3
int3
shr
or
xchg
sub
shlb
cs
add
inc
and
shlb
imul
xor
inc
mov
push
bound
mulb
test
and
scas
cmpb
shll
push
and
outsb
dec
mov
lret
rorl
push
and
push
sbb
push
xchg
push
sub
push
or
clc
aam
add
cwtl
pushf
mov
ljmp
and
sbbb
cltd
bound
push
and
adc
jbe
in
mov
ds
hlt
xchg
and
xor
push
cmp
adc
push
add
out
call
cmpsl
cmp
push
jo
insb
or
add
add
jecxz
add
in
inc
divl
imul
add
cmp
int3
cs
and
cmp
add
jnp
lcall
push
push
add
or
stos
xchg
mov
mov
add
std
mov
pushf
add
cmp
push
add
rorl
add
push
add
jg
mov
mov
add
sbbl
cmpsb
movb
bound
adc
add
std
incl
and
push
movsl
jmp
lds
sbb
mov
decl
fbstp
inc
push
test
out
xchg
pusha
enter
movsb
pop
xchg
leave
fwait
jnp
ss
lea
or
add
lock
mov
ljmp
adc
daa
pop
fcmove
mov
sbb
jno
cmpsl
jl
clc
aas
push
js
fidivs
xor
incl
loope
clc
sbb
mov
jge
jle,pn
pop
negb
shr
inc
mov
xchg
test
mov
sub
movsl
ds
mov
jg
incb
cmp
add
xchg
lahf
jle
cwtl
fs
roll
sub
loope
fildl
sbb
mov
fwait
into
push
hlt
push
lret
test
test
call
in
jecxz
push
sbb
mov
addr16
pop
call
push
push
shll
jl
loop
clc
fcompl
xor
add
test
push
ljmp
ret
dec
cmp
mov
dec
mov
jmp
mov
jp
xchg
jbe
or
xor
jne
popa
std
mov
push
xchg
enter
inc
in
mov
movl
jae
lock
fists
xchg
int3
iret
mov
push
mov
add
or
add
fidivrl
in
add
in
imul
push
or
mov
andl
jbe
lods
jo
cmpsb
add
add
push
xor
clc
int
xchg
cltd
popa
das
call
mov
jg
out
mov
stos
test
test
add
push
iret
pop
adc
mov
mull
inc
clc
inc
dec
icebp
push
and
ficompl
out
push
push
add
nop
mov
adc
mov
jle
ljmp
insl
sub
sbb
jne
dec
inc
or
pop
idiv
shll
rclb
xchg
inc
xor
pop
pop
pop
das
leave
pop
push
call
sti
movsb
xorb
or
out
cmp
movsl
or
mov
cmpsl
icebp
dec
mov
idiv
and
cli
pop
push
repnz
pop
cmpb
testb
inc
lock
cmp
aaa
adc
add
dec
sbb
sti
bound
shlb
push
mov
adc
stos
pop
sbb
inc
xor
outsl
fidivl
pop
cltd
pop
out
pop
add
ljmp
cmp
xchg
js
mov
sub
int3
sub
pop
rcrl
xchg
mov
pusha
push
ljmp
nop
adc
xchg
fldcw
nop
add
cltd
pop
loopne
add
inc
xor
insl
clc
stc
cmpsl
mov
nop
or
jecxz
jp
dec
int
jg
push
xchg
xor
jmp
add
les
mov
clc
iret
mov
ret
int3
aam
shlb
inc
sbb
decb
push
sub
dec
add
dec
and
pop
outsb
mov
outsl
clc
decl
mov
adc
dec
sub
cmp
pop
mov
aas
js
add
jne
lock
imul
pop
mov
or
mov
add
add
int
push
jne
imul
test
pop
jge
test
je
out
adc
dec
fcomip
mov
mov
leave
or
mov
sbb
adc
add
sub
pop
jp
push
add
push
sub
ljmp
mov
jnp
aam
lea
cmpl
mov
inc
cwtl
jnp
in
pop
insb
lea
cmpsb
xlat
aaa
jns
loope
out
lcall
sub
jg
sub
shll
pop
cld
rcrl
je
cmp
inc
push
mov
xor
mov
and
add
dec
rorb
outsb
lcall
cmp
fs
pop
pop
push
push
loopne
jnp
add
jmp
sti
bound
and
dec
inc
mov
dec
add
int
push
and
in
jg
add
jg
bound
cmp
ss
stc
dec
or
pop
xor
lret
push
sbb
inc
das
cli
sbb
aas
or
add
lcall
inc
out
clc
inc
pop
add
xor
shlb
xor
addb
out
cld
decb
xchg
popa
jne
scas
cld
leave
mov
je
sbb
rcrb
cmp
lahf
or
mov
inc
mov
mov
jge
sti
pop
int
dec
sar
pop
mov
shlb
cmp
outsl
lock
fs
mov
sub
or
pusha
mov
es
push
mov
aaa
jge
adc
mov
enter
and
cs
pop
or
orl
lret
dec
mov
adc
ljmp
icebp
inc
popf
cwtl
or
mov
push
movsl
hlt
sbb
push
cltd
loope
lcall
addr16
int
push
pusha
cmp
xchg
add
clc
in
pop
xlat
push
add
incl
fcoms
dec
ds
xchg
and
movaps
and
inc
call
fs
xchg
push
xchg
pop
inc
fs
fstpl
ret
mov
xor
mov
xorb
add
jae
add
mov
cld
fwait
decb
mov
push
and
mov
es
scas
loope
push
dec
or
sahf
push
insb
sub
add
cs
xchg
outsb
xlat
mov
xlat
fsubp
in
add
mov
or
mov
ljmp
stc
push
fcmovnu
pushl
mov
int3
ret
add
add
push
mov
or
pop
test
fdiv
loope
and
lods
xchg
leave
push
dec
or
shll
push
cmp
inc
ds
cmp
dec
push
incl
ret
sbb
xchg
loop,pt
cmp
add
add
xor
cwtl
add
mov
inc
pop
jge
outsl
ljmp
mov
or
jmp
les
or
pand
js
add
inc
sub
inc
cmpb
ja
cld
and
or
sub
mov
loopne
cmpsl
aaa
lods
sub
cmpb
insl
sbb
cmp
add
mov
dec
shlb
arpl
xchg
in
popf
leave
cmp
and
add
imul
pop
mov
call
add
xchg
xchg
lret
add
and
push
mov
jge
add
mov
mov
mov
pusha
out
inc
repnz
sbb
pusha
aad
int3
pop
mov
sub
stos
mov
sti
imul
call
pop
pop
fs
in
jg
sti
mov
cmp
push
aaa
jne
sub
test
ss
daa
or
or
cwtl
inc
push
sbbl
add
xchg
test
push
mov
stc
jp
es
jle
cmc
mov
mov
lcall
add
jbe
jno
adc
mov
shlb
push
xor
je
sub
add
pop
inc
arpl
call
jg
sbb
call
or
pusha
clc
push
out
cmp
pushw
insb
lods
xchg
xor
or
adc
lahf
add
jo
repnz
adc
pushl
pusha
scas
dec
adc
and
mov
inc
fs
add
sar
call
imul
gs
test
out
testl
stos
mov
and
pop
xor
sub
jl
lock
push
or
adc
and
and
jmp
pop
test
xchg
js
adcl
xor
fs
add
loopne
cmp
testb
pop
stc
outsl
mov
data16
jle
sahf
sub
pop
iret
dec
mov
cmp
sub
sub
cmpsl
rol
push
xor
in
pop
push
rorb
insb
inc
lods
jmp
lea
sub
stos
dec
fdivrl
aad
nop
sbb
scas
ss
out
or
data16
and
jnp
hlt
repz
ljmp
mov
mov
mov
clc
cmp
adc
lods
xor
rcll
fwait
in
cmp
in
pusha
or
outsl
fidivrs
dec
dec
push
jo
popw
mov
int
adc
fcmovb
mov
in
fwait
or
sbbl
lds
jle
jmp
scas
das
std
mov
adc
pushf
push
loopne
arpl
mov
add
test
ljmp
dec
into
push
adc
shl
lret
cmc
mov
mov
push
lods
mov
out
xchg
test
push
cmp
push
mov
fisubl
push
add
or
xchg
and
loope
lds
add
ljmp
or
orb
cld
lods
cli
push
je
fadds
jnp
mov
and
mov
adc
idivl
cmp
in
idivb
mov
add
xor
es
hlt
add
sbb
emms
fsubl
xorb
mov
je
lods
dec
or
repnz
mov
daa
rcrb
mov
inc
dec
lea
fmull
jle,pn
jl
rol
push
repnz
cmc
loop
sbb
mov
and
dec
bound
shl
and
pushl
push
mov
and
or
cmp
push
push
and
popa
xlat
fdiv
mov
pusha
mov
rorb
cmp
inc
or
ss
sub
mov
sbb
push
arpl
mov
mov
in
addl
jmp
sbb
aam
into
sub
sub
push
add
sub
daa
adc
pushf
test
scas
jp
sbb
add
mov
pop
adc
cmp
or
adc
jg
sub
call
or
add
mov
cs
cmpsb
arpl
xlat
outsl
repnz
lds
add
call
rclb
cs
push
insl
mov
in
fldl
adc
loop
add
lcall
sahf
mov
fsubrl
sub
loop
xor
mov
pop
push
add
dec
cmpsl
lds
cld
mov
jg
adc
and
xor
pop
jg
sbb
push
push
inc
xchg
mov
ret
jp
adc
xchg
out
jg
shll
int
imul
dec
adc
fiaddl
and
push
cld
test
fs
push
ljmp
pop
cmp
mov
xchg
jb
aas
cld
add
fcmove
faddl
cli
add
push
jle
fistps
shlb
inc
or
pop
test
cmp
cmp
pop
mov
mov
cli
or
mov
lds
sbb
cmp
in
pop
mov
imul
cmp
dec
clc
push
loope
xor
inc
and
dec
mov
loopne
sbb
inc
sbb
mov
in
in
dec
push
mov
mov
ret
xchg
add
push
sarb
testb
fdivrs
or
mov
dec
sub
lock
repnz
or
add
les
mov
jmp
cli
inc
test
cmp
cli
add
jge
dec
ljmp
mov
add
decl
test
clc
jle
fmul
or
jmp
push
ljmp
lcall
int3
mov
or
adc
or
stos
inc
and
shl
loopne
pop
lock
mov
shl
rolb
jb
iret
rorl
jb
pushf
in
and
clc
mov
scas
cmp
mov
jne
call
daa
jle
or
fadds
mov
shrb
sub
aaa
movsb
add
test
push
leave
insb
aam
xchg
or
sbb
and
mov
test
insb
mov
lds
cld
sbb
shl
mov
xor
push
jecxz
lret
cmpl
jne
mov
jecxz
push
stos
sahf
stos
jmp
add
clc
xor
sbb
stos
push
add
or
hlt
gs
fbld
aas
mov
pop
xchg
cmp
xchg
cwtl
adc
lahf
stos
inc
or
es
repnz
inc
hlt
loopne
add
xlat
add
test
jl
cwtl
pop
dec
outsb
push
clc
popa
add
clc
push
mov
xchg
sahf
aas
loop
cltd
les
jno
mov
and
test
gs
ljmp
pop
xlat
pop
jmp
cmp
xor
cli
pushf
jp
inc
stos
or
pop
xor
pop
incl
cmpsb
mov
adc
or
sub
mov
sub
pushf
nop
jp
jl
add
int
push
push
push
xlat
insb
imul
daa
subl
mov
lea
popf
cmp
ficoml
sbb
decl
mov
les
dec
dec
and
xchg
jae
jle
cmp
mov
icebp
xor
ds
pop
test
jg
add
and
in
sti
fcomip
or
stos
sbb
add
or
test
inc
pushl
rolb
idivb
or
popf
push
into
ljmp
in
dec
push
outsb
mov
es
jne
mov
shrl
xchg
pusha
xor
adc
lret
jbe
pop
jmp
inc
clc
inc
add
push
es
xor
std
das
dec
mov
rcrl
fs
xchg
pop
cld
adc
pushf
imul
mov
jno
pusha
push
iret
aas
push
push
inc
addr16
lret
mov
jecxz
call
call
cwtl
repnz
ret
lods
ljmp
push
cmp
test
jmp
xorb
mov
mov
outsl
inc
lods
fldcw
and
sub
insl
sub
bound
loope
out
arpl
insb
mov
ja
and
lods
or
cli
out
mov
insl
loopne
and
fwait
enter
mov
incl
ja
mov
rorl
mov
and
fstpl
jne
cltd
jecxz
sbb
or
xor
pause
pop
mov
outsb
pop
adc
lods
rcll
adc
aad
sbb
ljmp
add
arpl
xor
dec
push
aaa
clc
sub
mov
xor
loope
orl
and
popa
enter
cli
sub
andl
cs
lahf
add
add
cld
lcall
outsl
add
xchg
add
notb
adc
iret
notb
pusha
adc
ljmp
mov
pushl
sbb
jbe
aaa
in
cli
test
xchg
or
ss
add
aas
jbe
add
add
cmp
jno
xor
jmp
and
pop
add
adc
or
loope
push
jo
xchg
jp
add
scas
add
add
decl
jl
sub
rorb
inc
cmp
xchg
xor
jns
outsb
lahf
mov
pop
add
jae
lret
popa
mov
jle
cmp
add
incl
sbb
jle
or
jmp
inc
inc
adc
ficoml
pop
dec
sbb
test
aas
fwait
pop
mov
mov
or
dec
or
or
outsl
push
xor
push
mov
imul
inc
sbb
call
call
es
test
cmpsb
and
std
enter
fdivp
mov
or
repz
or
out
add
sub
mov
mov
movsb
push
cld
das
push
jp
add
adc
add
ficoms
mov
int3
sbb
inc
cmpl
clc
push
jno
loop
shl
and
dec
cmp
loope
cld
fbstp
mov
inc
inc
mov
push
es
pusha
in
or
mov
test
loope
push
std
mov
jo
push
or
rclb
and
in
and
test
out
cwtl
pop
xor
pusha
add
lds
fadds
jle
decl
mov
push
or
pushf
sahf
xchg
add
scas
clc
and
das
in
jg
ret
push
jmp
cli
pop
inc
pop
xchg
xchg
add
fstl
loopne
and
lock
incl
and
aam
pushf
mov
lret
out
pop
orb
sbb
out
adc
cmp
bound
ret
jl
jecxz
jns
mov
std
test
add
push
and
stos
add
or
dec
sarl
jae
shll
inc
add
lods
add
cmp
jg
icebp
mov
ret
add
lea
loope
mov
jmp
jne
mov
add
mov
dec
pop
mov
pop
add
dec
cld
scas
mov
inc
xor
pop
adc
sahf
mov
push
rcll
add
or
ds
in
mov
insb
adc
pop
xlat
nop
pop
adc
lds
xchg
rolb
sbb
scas
outsl
xor
decl
call
add
pop
movsb
leave
jbe
mov
pop
mov
out
inc
aaa
sub
insb
adc
movsb
cmp
push
mov
sub
inc
ret
stos
rolb
dec
jb
das
xor
pushl
lock
mov
pop
sbb
cli
jne
and
push
stc
cmpsb
mov
adc
push
sbb
or
out
int3
aam
mov
xor
jp
add
jg
stos
jle
jne
clc
leave
push
xor
scas
xor
xchg
fadds
mov
mov
outsb
or
daa
clc
test
jle
popf
pop
xchg
adc
jge
mov
ja
std
jp
cld
aaa
decl
mov
in
xor
add
mov
cwtl
ffreep
xlat
inc
push
mov
pop
and
jg
lret
inc
mov
in
xchg
enter
add
cmp
lods
divl
idiv
call
stos
push
mov
add
or
les
xchg
lcall
loop
mov
ds
adc
cmp
cld
cmpsl
stc
mov
sbb
fstpl
fmull
pop
out
ds
xchg
adc
mov
inc
push
sub
xlat
mov
xor
xor
pop
out
push
cli
or
xchg
mov
shll
sub
ret
mov
xchg
lret
cli
inc
xchg
aad
sbb
push
pop
movsl
add
cmpb
push
jl
mov
stos
dec
pop
xchg
push
shrl
adc
lds
push
jmp
cld
mov
xor
or
sbb
mov
add
sbb
adcb
negb
subl
out
in
xchg
in
fiadds
insb
and
call
mov
add
cltd
mov
mov
es
sub
mov
stos
fsubs
mov
jae
lds
fisttps
adc
or
xchg
xor
xchg
daa
imul
popa
push
arpl
inc
jmp
adc
jne
sbb
mov
aam
sub
mov
mov
dec
loop
int
divl
adc
push
loop
addr16
in
and
mov
pop
adc
and
lretw
sub
sub
adc
and
and
es
push
mov
popf
fsubr
jle
incb
add
std
fdivrl
mov
cwtl
add
je
add
mov
sbb
inc
out
push
cwtl
imul
insb
and
inc
inc
jo
fidivl
add
ja
pop
enter
out
pop
push
push
push
xor
push
push
jp
stos
scas
shlb
inc
aas
bound
outsb
fcomp
jle
mov
xchg
fs
mov
xor
add
pop
fimull
dec
clc
mov
mov
mov
imul
xor
lods
hlt
test
into
or
js
lcall
push
push
or
dec
cmpsb
aaa
cld
ja
fdivs
fs
into
in
adc
or
mov
mov
push
in
ret
jge
dec
js
cltd
push
lea
mov
sub
mov
and
test
shrb
pop
push
mov
mov
adc
ret
push
cld
int
outsb
jl
cmp
xchg
subb
push
incl
jae
dec
mov
jbe
push
adc
and
push
sub
xor
mov
dec
in
adc
pop
adc
int
jge
sbb
push
jne
add
sub
jg
jg
push
push
mov
add
and
xchg
repnz
clc
pop
loop
or
sbb
add
mov
pop
es
cmpsl
dec
push
popf
negb
mov
dec
jns
call
roll
inc
fstl
enter
or
mov
mov
xor
mov
outsl
xor
call
es
push
inc
rolb
daa
push
xchg
inc
jecxz
stc
xchg
es
sub
repnz
cmpsb
clc
mov
rclb
mov
lahf
jnp
out
shlb
sbb
std
sahf
lods
fwait
and
call
mov
pusha
hlt
sub
cwtl
mov
xchg
mov
cmp
popa
mov
mov
push
movsb
mov
mov
pop
inc
je
inc
aaa
push
jge
mov
xor
add
jnp
fmull
call
lds
mov
dec
clc
loopne
mov
jge
xor
xchg
insl
cmpsb
ret
xor
mov
cmp
adc
cs
ljmp
repnz
rclb
mov
mov
add
cwtl
mov
shrb
cli
and
bound
or
mov
mov
inc
testl
js
fidivs
cs
mov
jl
fldenv
xchg
popf
push
insl
inc
insb
mov
repnz
pop
std
sbb
pushl
stc
dec
and
inc
add
mov
fnsave
mov
clc
cmp
sbb
or
inc
jecxz
push
mov
lods
es
cs
loope
ds
and
mov
in
cmp
js
or
pop
cld
or
add
sub
imul
test
jg
imul
xchg
sub
and
popa
jg
lea
divb
iret
sahf
emms
pop
push
inc
cmp
add
bound
adc
movsb
shrb
iret
sbb
sub
xchg
mov
mov
adcb
sbbl
and
lahf
imul
ret
fdivrl
add
lcall
pop
jge
leave
jb
adc
and
xchg
xchg
mov
shll
aaa
clc
and
je
cmc
incl
mov
push
out
and
push
pop
fs
scas
and
movsl
inc
ja
mov
dec
je
sub
xor
inc
or
iret
insb
mov
sub
in
and
aam
insb
sub
pop
into
addr16
fists
mov
jnp
mov
jne
adc
out
stos
xchg
pusha
add
mov
mov
add
hlt
push
iret
jmp
dec
call
push
call
aas
ljmp
aas
shlb
out
sub
xchg
bound
mov
or
push
fs
pushl
out
add
ss
and
mov
lcall
fsts
and
add
fcomip
add
lods
lahf
cltd
or
xor
insl
mov
insl
and
sbb
lfs
nop
dec
sti
ret
pushl
clc
inc
fcomp
insb
ret
cwtl
pusha
test
test
push
or
mov
xor
sub
and
pop
add
in
aad
jmp
add
inc
jg
add
js
leave
iret
jp
arpl
les
sub
outsb
add
incl
jmp
jo
cmp
dec
mov
test
iret
cld
mov
adc
jge
std
add
mov
cld
inc
cmp
repz
sub
mov
inc
loopne
adcb
mov
or
outsl
sbb
sbb
aaa
ret
inc
mov
sbb
push
call
xchg
incb
fdivrl
out
jb
rep
mov
loopne
jne
fwait
test
shll
add
outsl
pop
adc
fwait
or
pusha
add
pop
add
or
push
hlt
das
push
rolb
sub
add
into
incl
sbb
and
mov
scas
pop
push
pop
jne
jae
jmp
rorb
sub
inc
sbb
pop
add
mov
ss
inc
fisubrs
xchg
nop
ret
cmp
notb
cld
pop
divb
push
mov
mov
fdivp
in
adc
push
test
shlb
cmp
clc
aam
push
int3
inc
cld
xchg
mov
xchg
shrb
ljmp
jg
mov
inc
add
scas
xor
mov
out
je
push
push
aam
inc
mov
clc
loope
inc
or
inc
cmp
push
lret
sub
addl
jp
jecxz
ljmp
push
out
in
sub
add
dec
scas
lods
movl
imul
inc
jg
xor
pop
enter
dec
scas
add
mov
ja
cli
fcmovbe
mov
repnz
pop
adc
push
test
pushl
fsubs
dec
sarb
pop
cmp
xchg
xchg
fs
mov
xlat
xor
push
sub
sbb
outsl
cmp
pop
push
push
test
mov
adc
andl
jmp
pop
frstor
mov
fdivrl
mov
addr16
dec
lods
mov
cli
ret
pop
pop
mov
dec
xor
lahf
add
ret
sbb
sub
dec
sub
mov
loop
mov
mov
mov
pusha
pop
movsl
xchg
sbb
incl
jp
imul
xor
mov
and
sbb
test
ljmp
loope
mov
xchg
jp
ss
pop
daa
jp
mov
adc
jnp
jb
dec
ljmp
sti
sbb
inc
test
inc
pop
stc
dec
inc
push
in
add
pushf
pop
jns
es
cmp
or
loop
cwtl
mov
mov
das
es
jne
mov
filds
mov
popf
imul
je
xor
mov
mov
data16
pop
out
outsb
loope
push
lods
call
in
pop
push
pusha
shl
or
adc
fnstsw
pop
mov
mov
adc
mov
ret
mov
repz
pop
sub
xchg
aam
decl
and
cwtl
push
sub
js
inc
sbbb
cli
loopne
rcrl
pop
loopne
or
lods
mov
add
insb
mov
push
das
je
int3
and
in
fbld
fwait
and
data16
inc
cmp
xchg
xor
shrl
jle
sub
xor
in
and
fistl
je
popa
adc
dec
jge
test
dec
jg
pop
sbb
add
clc
fsubrl
es
stc
add
jb
push
inc
push
in
push
add
lock
int3
add
int3
pop
leave
stos
mov
outsb
adc
cwtl
sub
sbb
xchg
outsl
lahf
cmp
add
xchg
push
sbb
shr
cmpb
jno
decb
negl
add
imul
or
pop
sbb
lods
lock
repnz
xchg
or
arpl
xor
roll
jne
fldenv
pushf
faddl
into
jmp
aam
clc
mov
sbb
push
and
push
push
cmp
xor
mov
mov
and
mov
aaa
and
cltd
jne
nop
inc
cltd
mov
cmpsl
sbb
hlt
mov
cmp
jl
mov
push
movsb
push
mov
jg
jp
add
xchg
fnstsw
inc
jne
das
leave
xor
aaa
and
add
fildll
and
sbb
adc
pop
adc
mov
dec
push
or
das
adc
push
fcomip
decb
xchg
cmp
and
and
cmp
push
fwait
sbb
mov
lahf
bnd
mov
add
aaa
pop
dec
movsl
bnd
cld
jns
imul
and
lds
into
fcomip
adc
std
adc
clc
add
loop
mov
negb
inc
add
inc
rcrb
fimuls
jbe
or
stos
mov
inc
and
push
fsubrp
xchg
jmp
std
sub
sub
push
ret
mov
mov
push
add
add
sub
ds
int3
outsl
idivl
scas
out
cmpsl
mov
mov
push
arpl
cmp
mov
sub
repnz
mov
or
dec
in
push
pop
gs
sbb
cbtw
out
loope
mov
rolb
mov
int3
cs
add
dec
rol
sub
mov
jecxz
daa
daa
movsl
enter
jg
lock
divl
in
mov
ds
icebp
and
xor
mov
push
and
fcmovbe
and
hlt
int3
mov
add
loopne
xchg
lea
fdivl
mov
mov
out
push
outsb
xchg
inc
pop
fdivr
add
movb
pusha
ja
lods
in
test
insl
lock
or
jns
pop
mov
xchg
xor
jl
pop
xchg
je
movsb
jae
sub
movsl
fisubs
or
in
xor
sahf
aad
cmp
adc
arpl
sbb
mov
and
in
cwtl
daa
or
clc
pop
push
mov
shrl
jp
xor
call
je
dec
je
push
es
lock
divb
sbb
data16
sbb
mov
hlt
xor
push
call
and
mov
lahf
pop
push
nop
mov
dec
add
pop
mov
loope
sbbl
in
ja
inc
je
xor
cli
mov
enter
mov
xor
ret
jecxz
pop
fdiv
movl
lcall
out
dec
jmp
pop
xor
push
push
arpl
fisttps
inc
and
out
rcr
pop
ret
mov
scas
sub
mov
pop
sarb
lock
and
inc
and
jo
gs
add
test
js
inc
hlt
test
or
or
rorl
scas
mov
fbld
push
test
push
xchg
or
loopne
sub
cmp
add
cmp
cmp
cltd
or
push
out
and
imul
push
lock
jg
xor
push
xor
stc
enter
jbe
clc
mov
jb
pop
cmp
sbb
or
jmp
jecxz
and
ror
pop
inc
xchg
imull
test
push
stc
push
clc
sbb
inc
fs
add
ret
jl
cmp
rclb
mov
adc
sbb
xor
ljmp
pop
jbe
jp
imul
or
pop
and
inc
mov
leave
sub
test
je
ret
jl
cmp
cmp
inc
add
sbb
stc
stc
xchg
test
push
sub
inc
jbe
les
adcl
push
mov
clc
jecxz
int
or
int3
addr16
inc
test
mov
push
add
cs
rorb
adc
test
jg
ds
cmpsb
mov
add
sbb
repnz
inc
loopne
dec
jmp
testb
repnz
xor
fimuls
sarb
add
popf
push
shl
sbbb
add
in
shl
dec
push
pop
cmpb
imulb
movl
lcall
out
sgdtl
xor
cmp
sub
mov
pop
xor
push
dec
gs
xchg
adc
xchg
cmpsl
cmpl
sub
inc
mov
jp
or
loop
aaa
push
ret
pop
ljmp
dec
fcomps
push
ss
insb
lcall
and
daa
cwtl
add
push
mov
shrl
in
bound
divb
test
jbe
dec
mov
sti
movsb
or
push
mov
xor
mov
push
pop
sub
inc
jne
test
push
or
incl
ret
jge
xchg
js
jb
loop
int
add
cmc
dec
call
or
jbe
jno
inc
pop
je
dec
push
arpl
pop
mov
bnd
movsl
rcl
pop
cli
adcb
or
xor
lds
movsb
xlat
mov
cmp
pop
xchg
xor
cs
push
mov
repz
ds
ljmp
sbb
rcll
mov
xchg
push
add
sbb
add
inc
adc
cmpsl
cmp
cmpsb
pop
addb
cwtl
adc
xchg
inc
repnz
xchg
cmp
rclb
pop
mov
xchg
adc
fists
ficoml
xor
inc
xor
mov
pop
adc
add
jo
dec
or
push
pop
ljmp
adc
loopne
adc
mov
or
in
inc
push
xor
fcomip
test
xor
adc
cmp
loop
test
incb
mov
jb
push
pop
mov
fbstp
or
das
lret
pop
es
add
flds
das
clc
call
orb
std
push
mov
dec
fcoms
add
movsb
inc
mov
lahf
sub
add
jne
rcrb
and
inc
xchg
mov
push
or
jo
xor
jl
sub
pop
icebp
fwait
xor
and
jnp
or
inc
mov
add
mov
xchg
cwtl
insb
inc
mov
popf
add
xchg
sar
add
into
bts
or
inc
aas
idivb
js
pop
mov
pop
push
sub
xor
dec
pop
popa
or
pop
nop
mov
jns
dec
push
cs
adc
out
in
dec
dec
sub
ret
cmp
push
shl
jno
dec
in
pop
lods
loopne
pop
fsubrs
push
adc
ljmp
movb
icebp
lcall
lds
lret
xor
jl
fwait
inc
movsb
stos
jp
je
sub
cmpsb
popa
insb
and
sbb
mov
xchg
sbbb
inc
outsl
mov
pop
sbb
loopne
xchg
or
xchg
mov
sbb
sbb
or
insb
hlt
rorl
jecxz
xchg
pop
je
mov
xor
aas
outsb
inc
aaa
xor
sub
dec
popf
pop
dec
mov
cmpsb
es
je
adc
enter
fisttpll
push
ficompl
repnz
sub
int
enter
fildl
je
dec
jg
jae
mov
cmp
push
mov
mov
inc
into
and
and
adc
stos
mov
bound
push
and
cwtl
add
aaa
fsubr
xchg
adc
test
test
shll
dec
in
pop
mov
pop
cltd
mov
lcall
xchg
fdivrs
decl
jl
lea
sub
mov
jb
cltd
add
jnp
jmp
adc
aam
popa
push
push
dec
adc
movsb
mov
mov
mov
decl
scas
clc
pop
std
data16
mov
and
loopne
call
or
roll
in
mov
js
clc
inc
pop
hlt
das
add
cmp
filds
sub
insl
lock
mov
sbb
sub
pop
xchg
test
in
inc
jne
sub
outsl
add
jnp
std
sub
std
es
pop
repnz
sbb
subl
aam
xor
mov
cmpsl
push
pop
jb
cmove
mov
cmpsb
lahf
div
shrl
stc
sbb
in
or
loop
addl
and
jg
xchg
fbstp
lods
rorb
jo
push
cmpsb
push
inc
int3
mov
dec
jp
jmp
mov
addb
mov
mov
xorl
clc
xchg
mov
mov
or
xchg
adc
call
xchg
movb
mov
jmp
ljmp
std
adc
ljmp
jno
push
lods
in
mov
in
shl
lcall
int
out
aad
mov
ss
xorb
and
rol
sub
push
aaa
imul
ss
lock
incl
dec
jl
jno
aaa
or
push
sub
pop
lds
mov
fprem
xorb
dec
push
lea
fwait
push
dec
sub
pop
je
push
or
fiaddl
aad
mov
and
or
es
mov
scas
mov
mov
pop
icebp
inc
jne
into
jbe
pusha
push
loopne
mov
aas
inc
cltd
mov
push
adc
clc
mov
xchg
cmp
pop
adc
test
sahf
adcb
dec
rcrb
mov
scas
mov
arpl
jg
and
mov
pop
sti
mov
push
pushf
add
push
std
or
out
pop
ds
adc
sub
aad
dec
mov
int3
not
xchg
add
mov
push
adc
mov
mov
fcoml
lods
nop
in
xchg
outsl
jg
icebp
out
test
pop
icebp
xchg
imul
inc
or
pop
or
int3
nop
inc
pop
call
mov
sub
inc
jo
cld
pushf
jp
cmp
sbbl
cld
mov
sub
inc
sub
add
sahf
jecxz
scas
xchg
int
inc
jae
fiadds
pushf
into
loop
jns
mov
outsb
add
addr16
call
out
xor
insb
add
jb
cmpsl
sbb
sub
add
fadds
sub
nop
das
jg
inc
fbld
iret
shrb
xlat
adc
adc
hlt
mov
jg
push
mov
repnz
cld
orl
fistl
jmp
add
sub
add
enter
pop
cwtl
dec
lea
jecxz
mov
push
in
aas
repnz
cmp
pop
cld
mov
lahf
push
xchg
push
bound
dec
ja
hlt
sbbl
mov
test
dec
sub
mov
lea
pop
pop
xor
int
xor
cmpsl
ss
enter
mov
scas
or
int3
mov
rol
mov
jg
outsl
es
or
and
loopne
pusha
or
sub
mov
daa
repz
dec
popl
inc
ljmp
jmp
and
dec
lock
jno
sub
add
cli
sbb
xchg
sbb
fisttpll
insb
mov
dec
add
and
scas
clc
lock
cmpl
xchg
inc
cltd
push
test
sub
fistpll
pushf
inc
add
xor
int
insl
xor
pop
icebp
pop
loopne
mov
push
adc
ss
pop
add
cmp
arpl
and
out
sbb
pop
lock
xlat
dec
sub
jmp
xchg
inc
dec
push
push
rclb
test
out
cli
call
mov
adc
enter
pop
add
add
aad
decb
push
mov
jge
inc
jnp
ds
std
stos
mov
insl
dec
inc
push
rorb
cmpb
push
cmp
subb
mov
dec
push
cmc
mov
or
push
mov
push
cmpsb
movsb
insb
stos
rol
out
add
or
ficompl
inc
cli
add
or
push
jns
mov
add
jae
add
or
jo
inc
cmp
fisttpl
jno
inc
dec
push
add
clc
sub
add
sar
xchg
adc
pop
mov
cli
mov
pushf
add
sub
mov
mov
sahf
cs
pop
out
movsb
aaa
push
mov
mov
add
cli
mov
pushf
dec
imul
push
in
jae
xchg
loopne
cmpsl
es
sub
lock
repz
in
popf
xchg
add
bound
stos
shrl
pop
scas
mov
shrb
push
add
add
add
mov
divb
lods
dec
jecxz
pop
xchg
jo
cmp
add
lock
pop
hlt
cmp
je
inc
notl
or
mov
add
add
lea
pop
or
sti
stc
xchg
cmpl
adc
jp
mov
push
dec
and
xchg
pop
jnp
dec
into
mov
repnz
call
jg
insb
add
adc
dec
or
xchg
add
ret
lcall
bound
repz
inc
xor
mov
cmpsb
aad
mov
nop
mov
push
mov
pop
fmul
xor
aam
jle
jmp
inc
mov
ficoml
sub
jl
xchg
mov
subl
ret
int3
js
jb
lods
test
or
cmp
fbld
cmp
ljmp
decb
insl
add
call
ss
in
mov
and
bound
lahf
mov
push
jb
popf
incl
add
loope
mov
test
and
sub
cld
scas
ja
cwtl
out
int3
inc
andb
ret
sbb
lcall
cmp
and
jo
adc
iret
adc
sbb
cmp
sbb
into
loopne
out
movsl
and
jg
sub
movsb
add
popa
and
cwtl
leave
int3
andb
pop
ficompl
add
loop
gs
cmp
adc
push
clc
sub
xor
xor
incb
mov
dec
lea
popf
jmp
cmc
inc
ss
inc
sub
ja
adc
lea
and
stos
pushf
mov
sbb
fs
pop
clc
nop
lods
decl
sbbl
mov
aam
es
sbbb
idiv
push
jne
fs
in
decl
in
mov
dec
push
pop
ret
aam
pop
dec
insb
int3
and
cs
add
mov
sub
adc
push
mov
mov
fsubl
add
dec
cmc
gs
cmc
jg
es
test
rcrb
leave
lods
sbb
cmpsl
lock
ljmp
cld
sbb
cli
jmp
jb
adc
mov
ljmp
incl
es
cli
outsl
add
testl
inc
and
test
inc
jmp
sub
xor
xchg
jge
test
ror
hlt
xchg
push
fs
inc
dec
lods
cli
inc
fdivs
add
lahf
in
push
push
out
scas
and
xlat
pop
or
add
sub
push
lcall
std
lret
push
sbb
and
add
jp
push
sub
imul
inc
cmp
sbb
js
lret
mov
stos
outsb
push
lcall
mov
pusha
das
xor
lock
in
and
loop
or
adc
arpl
jo
scas
add
inc
repnz
jge
ror
insb
mov
xor
sub
cltd
popf
pusha
sub
lock
cld
mov
popf
addr16
ret
lods
rol
loop
ret
insl
pop
or
cmp
cmp
sahf
adc
mov
jnp
ja
roll
or
sub
incl
ficoms
pushf
lods
pusha
pop
test
imul
jl
cli
ret
adc
pop
and
mov
pop
imul
or
push
sbb
add
dec
arpl
fimuls
ret
and
mov
add
js
mov
dec
cli
ss
aam
mov
jnp
pop
sub
dec
or
xchg
fsubs
pop
add
popa
scas
outsl
dec
out
fsubrl
lret
popa
and
stos
fstpt
sub
xor
adc
lret
test
add
cmp
adc
enter
sbb
test
les
and
dec
addb
push
add
stos
aad
add
xchg
cld
sbb
mov
and
jmp
fists
pop
data16
arpl
and
xchg
hlt
insb
rcl
stc
jg
mov
lock
inc
push
es
adc
push
fdivrl
cli
rorb
cmc
dec
fcompl
mov
adc
xor
loopne,pn
jmp
scas
xchg
out
xchg
test
test
jp
mov
inc
inc
adc
popf
pop
pop
adc
jo
add
orl
out
aaa
test
mov
das
lds
mov
xchg
mov
or
mov
inc
cs
push
add
je
cwtl
loop
adc
push
jge
jl
incl
ljmp
fdivrp
fs
aas
xor
mov
sub
dec
add
add
int3
int
std
pushf
cmc
jns
dec
jle
mov
mov
adc
test
cmpsb
cmp
jecxz
jb
movb
test
cmp
inc
mov
add
or
xor
mov
inc
xor
mov
lods
aaa
cmp
test
push
daa
cmp
jp
incl
leave
cmp
aam
inc
sub
dec
cmp
sub
dec
idiv
add
pop
cmp
fiadds
insb
pusha
adc
incl
hlt
and
test
mov
sbb
and
push
cmp
in
jl
dec
push
out
clc
lcall
add
es
xchg
xor
stc
xchg
movsb
sbb
mov
sbb
xor
jb
clc
out
incl
inc
mov
xchg
cmp
int3
sbb
adc
incb
sbb
inc
lock
mov
mov
loope
lds
ja
dec
fwait
nop
add
or
adc
jno
inc
imul
je
jg
aas
std
push
and
mov
sbb
xor
cmp
test
push
add
mov
inc
cmp
sbbl
jmp
push
mov
cld
jo
and
push
sub
outsb
xchg
xchg
ret
decl
pop
js
xchg
push
lret
hlt
adc
push
movsl
mov
les
push
lea
mov
ret
dec
or
adc
or
sub
inc
mov
rcrb
outsb
xor
adc
jbe
clc
incl
incl
rclb
and
push
push
mov
and
cmp
call
cld
sar
mov
jb
sub
shl
repnz
jne
push
insb
incl
insb
lods
or
ret
cmc
jl
xchg
jmp
imul
testb
fistpll
mov
call
es
ljmp
mov
push
and
push
push
xchg
push
dec
nop
ret
pushl
enter
xlat
out
loopne
push
shrb
sub
or
xor
or
pusha
jo
icebp
jmp
pusha
cli
addb
movsb
lahf
imul
cwtl
sbb
pop
cmc
incl
out
sub
loope
add
insl
dec
pop
cmp
cld
incl
outsl
push
xor
adc
sbb
lds
inc
inc
sbb
push
pop
mov
cld
xchg
jne
push
xchg
ret
pushf
push
faddp
mov
dec
hlt
sub
hlt
push
xor
sub
jae
push
or
enter
call
adc
cmp
es
or
adc
std
test
stos
mov
fadds
xor
push
add
es
push
loop
push
dec
ret
mov
decl
movsl
mov
stc
rorl
clc
pop
mov
inc
jg
test
xor
scas
out
shll
cli
jns
out
das
inc
inc
and
jmp
or
addr16
add
std
jl
push
in
xchg
adc
mov
sbb
xchg
xor
ret
stos
negb
add
mov
cmpsb
scas
ja
mov
mov
pop
and
stc
pushf
lahf
add
push
adc
adc
and
test
popf
iret
or
pop
and
xor
jns
sub
lods
loop
repnz
xchg
inc
loopne
mov
jns
cli
mov
cmp
jno
jg
mov
mov
enter
stc
aas
repnz
ja
jecxz
arpl
repz
or
pop
pop
sbb
xor
add
sub
sub
pop
mov
and
mov
clc
sub
sbb
and
dec
stos
add
cmpsb
cwtl
stos
ljmp
std
xchg
xor
sbb
pop
add
lods
lock
mov
cmp
dec
lock
sarl
add
stos
std
mov
pop
adc
pop
and
in
add
push
xchg
in
sbb
mov
inc
mov
aam
add
std
or
je
jp
je
inc
lds
clc
or
sub
call
mov
push
xor
push
jl
out
clc
jmp
jo
cmp
pop
cmp
inc
add
fwait
decl
sti
push
rol
icebp
add
or
fisttpll
pop
subb
lock
std
cmc
and
inc
inc
mov
cmpb
loope
or
add
pop
test
ret
or
das
cli
stos
adc
sub
xchg
out
jle
mov
fs
pushl
std
add
push
push
sub
orb
sbb
pop
outsb
sub
jp
mov
mov
mov
decl
and
push
mov
and
aad
addr16
fisubs
scas
fwait
icebp
outsl
push
inc
dec
rorb
fadds
sar
fbld
cmp
orl
mov
in
inc
hlt
out
aam
jg
mov
int3
fs
mov
and
shlb
push
pop
add
mov
push
push
add
daa
mov
out
sub
loope
cs
add
jmp
push
cmp
aam
leave
adc
rcr
shrb
js
popa
cmp
fdivrs
add
pop
icebp
jg
test
push
rcrl
lcall
jl
sahf
stos
xchg
aad
in
das
add
fdivrl
and
icebp
mov
repnz
clc
inc
rorb
dec
loope
loope
rorb
lret
push
pop
adc
mov
cmp
test
insb
mov
js,pn
dec
ds
ljmp
fimuls
sti
lods
cli
mov
cltd
adc
push
add
xor
pop
adc
js
aas
jnp
jl
loop
add
scas
jne
pop
jae
and
or
inc
int
adc
cld
inc
add
jnp
loopne
inc
inc
cmp
in
lds
cltd
out
scas
mov
repz
decl
inc
ja
bound
jmp
inc
in
xchg
adc
sub
dec
in
scas
sub
cmpsb
adc
xor
jmp
out
mov
fs
dec
jge
stos
jl
inc
fildl
cmp
push
jmp
test
add
ja
loopne
lds
cwtl
jecxz
sbb
insl
outsl
movsb
repnz
jno
push
mov
inc
fistl
adc
ds
or
add
inc
add
shll
xchg
pop
pushf
cwtl
jg
mov
rol
fists
add
xor
shl
mov
rcrb
push
pop
loop
sub
test
in
jae
addr16
rcrb
ficomps
mov
movsb
adc
pusha
out
mov
pop
sbb
jmp
fsubs
mov
aas
aam
mov
jp
scas
outsl
stc
nop
adc
imul
push
mov
or
dec
in
ss
or
loop
mov
repnz
fsubr
pop
icebp
movsl
js
cwtl
and
or
mov
sub
sub
clc
outsl
sbb
mov
icebp
cmp
je
imul
sti
call
and
sub
pusha
scas
loop
jecxz
pop
mov
jecxz
add
xlat
cmp
jle
mov
sbb
inc
push
add
sbb
lea
fadds
xchg
fwait
push
lods
xchg
jg
incb
push
lods
mov
jo
jbe
loopne
sahf
jp
clc
mov
jno
dec
into
or
stos
test
das
ret
cld
dec
push
pop
inc
ljmp
xchg
xchg
pop
lahf
icebp
pop
insl
lds
std
aaa
rorl
mov
pop
or
cmp
add
das
mov
pop
and
mov
add
out
xchg
sbb
jecxz
push
mov
call
ds
loope
xor
push
scas
sbb
repnz
adc
in
aas
push
sub
and
imul
int
dec
mov
fistps
sbb
popa
int3
ds
ljmp
sarl
and
and
or
rcll
out
fistpl
mov
shll
cli
rcrb
add
daa
rcrb
mov
movsb
adc
mov
xchg
test
xlat
mov
outsb
mov
imul
sahf
bswap
and
std
loope
jmp
shrl
es
loope
jl
cmpb
dec
pop
xorl
into
jb
sub
mov
ret
inc
cmpl
and
insl
push
popl
mov
mov
mov
adc
and
int3
pop
outsl
cli
adc
add
imul
fnstenv
jge
mov
push
sub
add
or
das
ss
sub
andb
call
push
fisubrs
std
lods
add
nop
movsb
addr16
sbb
push
mov
hlt
mov
cli
test
pop
rorb
cld
call
xor
stos
in
cmp
xor
add
cmp
xchg
cmpsl
sbb
sub
cmp
or
aaa
xor
stos
sub
inc
adc
push
sbb
jnp
mov
aaa
dec
addb
add
cmp
adc
insb
orb
cmp
cli
pop
or
hlt
add
je
xchg
rcll
adc
pop
imul
mov
pusha
mov
loop
popf
jbe
mov
adc
jbe
mov
adc
add
mov
es
stos
sahf
adc
movsl
lods
clc
das
sbb
lea
mov
nop
add
pop
mov
into
icebp
add
loope
das
pop
daa
mov
jmp
arpl
pop
popa
mov
jo
or
aam
jo
adc
fnsave
sbb
jg
out
xchg
xchg
dec
adc
dec
lret
mov
es
les
stos
movsb
jp
and
ljmp
and
lods
ds
mov
lods
sub
lcall
xchg
dec
push
jp
xchg
jge
xor
pushl
inc
xchg
dec
repz
lock
cmp
mov
dec
fnstcw
add
int3
dec
fildll
cmp
xchg
mul
jg
push
push
mov
int
gs
inc
clc
fildl
jb
jle
dec
into
js
aam
sbb
adc
or
loopne
adc
jg
push
into
mov
or
push
or
cmp
aas
and
fucomp
in
mov
inc
iret
pop
or
incl
std
sub
or
cmc
faddl
lahf
scas
mov
add
add
or
je
shll
jp
fcomi
pop
loopne
ss
nop
push
push
stc
dec
hlt
xchg
movsb
and
clc
mov
incl
aas
or
add
test
push
mov
add
lock
cmp
in
jo
jecxz
sub
aas
rcl
scas
mov
out
sub
sub
repnz
jno
nop
xor
adc
xchg
bound
test
jbe
rcr
outsl
out
cltd
jl
call
imul
pusha
mull
sub
push
in
cmpsl
inc
sbb
das
dec
clc
mov
xchg
sbb
lcall
and
ss
inc
push
xor
cmp
lock
je
and
out
iret
std
inc
outsl
incb
jo
insb
mov
or
inc
test
lret
and
pop
hlt
mov
xchg
cmpl
xorb
test
add
adc
call
clc
shl
inc
popa
sub
sbb
jb
mov
cmc
xchg
mov
add
mov
inc
mov
decl
lock
and
cmpsb
add
icebp
decl
insl
inc
movsb
pop
adc
mov
ror
loop
mov
xor
out
push
cmp
mov
mov
stos
push
inc
push
mov
daa
sbb
mov
ret
test
mov
gs
add
xor
mov
roll
imull
iret
mov
ret
js
out
divl
cltd
mov
push
outsl
lods
jg
or
lcall
adc
jg
cmp
fldt
mov
or
dec
mov
mov
insb
push
enter
inc
jp
gs
xor
jp
cmc
outsl
mov
aam
mov
adc
adc
mov
ret
inc
jg
push
cld
popa
mov
outsb
mov
call
mov
pushl
inc
imul
test
xchg
inc
add
mov
jecxz
in
pop
push
cmp
xor
fiaddl
push
and
xchg
inc
aam
xchg
cmp
push
or
lea
adc
sub
inc
sti
add
inc
jmp
icebp
xor
arpl
aam
sub
fbld
push
add
lods
sahf
lock
pop
or
test
pop
or
aam
pop
call
clc
mov
mov
pushf
dec
loop
cli
and
loope
mov
ret
jmp
jl
loopne
repz
dec
xchg
push
push
int
movsl
xor
sub
push
push
sub
pushf
lret
cmp
daa
sahf
adc
test
pop
loopne
mov
or
je
outsb
jb
test
ret
inc
xchg
shlb
cwtl
mov
jne
push
into
push
fcmovu
scas
cmpsl
jbe
or
push
inc
pop
jno
jle
cmp
add
stc
pop
cmc
ja
mov
mov
xor
scas
jle
or
jo
push
clc
fwait
cs
imul
mov
pop
sbb
test
daa
insb
movsb
std
or
fprem
mov
push
xchg
jae
sbb
hlt
sub
in
dec
sub
dec
and
ret
js
ds
mov
shll
inc
outsl
mov
jmp
xor
stos
clc
inc
test
stos
adc
bound
pop
aaa
test
push
loopne
jno
jbe
or
sub
add
push
addr16
arpl
lods
cli
call
nop
push
es
add
sbb
inc
leave
xchg
insl
jp
sarb
cmc
and
push
xchg
bound
push
pop
inc
pop
add
js
call
call
lods
cmpsb
lcall
dec
inc
inc
dec
mov
xlat
jo
mov
aam
into
outsb
cwtl
mov
mov
mov
data16
dec
icebp
jg
mov
add
lcall
push
mov
mov
xchg
dec
mov
add
push
xchg
aaa
lcall
repnz
push
adc
clc
insb
shlb
pop
mov
push
mov
and
and
cmpsb
mov
sbb
sbb
pop
insb
pop
test
push
jbe
mov
aad
sbb
ficompl
mov
cmp
jns
int3
mov
sahf
add
or
outsb
aam
mov
adc
adc
pop
push
adc
enter
je
loope
and
and
inc
cwtl
adc
icebp
dec
js
xor
dec
add
insb
stos
mov
lock
loope
mov
dec
and
add
mov
sbb
xchg
adc
push
xchg
or
icebp
or
fdivrs
ja
fsubp
vcvttps2dq
push
cli
xchg
bound
loopne
les
xor
mov
push
in
sub
movsb
cmc
pop
push
in
add
xor
dec
or
adc
incl
scas
jl
sbb
xor
cmp
xchg
das
mov
jo
in
fbstp
sahf
mov
imul
loop
ret
and
lret
mov
test
mov
cs
push
cmp
addr16
mov
jo
stc
inc
xchg
icebp
lea
xor
lock
push
mov
mov
rol
push
or
mov
dec
aaa
jl
pusha
and
cltd
rcrb
lcall
inc
mov
aam
jecxz
push
adc
dec
pushf
cmp
push
in
adc
int3
and
mov
pop
test
push
cli
daa
xchg
inc
fstpt
sbb
jno
xor
lcall
sub
push
sbb
pusha
jl
push
sub
adc
add
cld
and
xor
xchg
jle
jo
sbb
xor
into
and
mov
push
data16
sub
mov
clc
mov
pushl
inc
fsts
clc
adc
sub
cld
cmpsb
daa
push
push
mov
sub
sbb
add
popf
lahf
push
gs
jae
stos
subl
ret
js
ljmp
cmpb
mov
xchg
mov
out
clc
ret
stos
pop
shlb
pop
cs
loop
pop
push
jbe
sub
fidivs
sbb
and
mov
jle
loop
ljmp
test
mov
out
adc
and
cwtl
add
out
fimull
es
icebp
cld
dec
aad
aas
xchg
aas
dec
fs
sub
inc
ret
in
dec
stos
adc
fildll
jne
addl
out
jle
lods
movsl
jg
lds
jns
or
std
ljmp
push
sub
sub
or
mov
pop
sub
ret
sbb
xchg
pop
adc
mov
je
pusha
call
or
mov
in
jbe
sub
ljmp
xchg
pop
jbe
adc
roll
push
in
xchg
mov
add
incl
loop
fadd
iret
lret
inc
lret
sbb
cmpsb
fs
ret
mov
popa
into
hlt
test
jmp
xor
or
lock
push
push
pushf
sub
jns
xchg
cs
mov
loopne
jnp
jns
push
jecxz
pushl
std
movsb
shlb
add
push
dec
or
pop
cmpsb
mov
xchg
sti
cwtl
pop
rcll
ja
cltd
push
adc
dec
in
flds
jl
and
pop
cli
push
inc
add
xchg
cmpsb
or
mov
rclb
sbb
in
mov
nop
les
add
dec
mov
imul
sub
and
add
pop
xor
cmp
adc
mov
or
ja
loope
add
push
cmc
or
cmc
mov
pop
lcall
and
xchg
mov
outsb
aas
popf
or
mov
and
jl
je
int3
add
cs
mov
sbb
sbb
popl
test
sub
or
call
sbb
pusha
push
xchg
imul
mov
push
sbb
out
lods
aaa
jg
mov
inc
dec
push
mov
push
jg
xor
aam
js
call
cli
mov
sarb
ret
cmp
dec
rcrb
call
gs
xchg
in
fdivs
push
add
pop
dec
sbb
loopne
lcall
loopne
jb
dec
cmp
orb
hlt
aam
rolb
out
adc
fcomip
roll
mov
mov
daa
sbb
dec
cmp
pop
fcoms
fcoms
test
stc
mov
call
decl
sbb
mov
push
inc
cmpsb
shlb
lret
aaa
xor
lret
and
lds
decl
sub
xor
mov
xchg
loopne
popa
xchg
sbb
jle
dec
and
loopne
aaa
jne
inc
sarl
xchg
mov
mov
or
mov
pop
ret
jb
cmpsb
aam
div
xor
mov
mov
push
loope
inc
push
jae
sbb
add
add
lret
iret
add
and
push
mov
dec
in
sub
mov
movsb
dec
scas
imul
int
jg
mov
jo
lahf
cmpl
rorb
and
lcall
imul
mov
divl
and
adc
mov
shrb
jg
jg
xor
mov
mov
inc
or
leave
mov
icebp
pop
stos
cli
or
loope
pop
mov
dec
daa
xchg
fdivr
dec
jg
sbb
or
testb
ffree
ljmp
mov
push
jo
daa
jp
add
std
pusha
sbb
mov
jne
test
and
scas
add
jno
mov
adc
jp
orl
pop
sarl
pop
rolb
jne
pusha
jp
add
call
clc
mov
cmpb
xchg
imul
test
sbb
sub
add
mov
or
out
adc
cmp
xorb
inc
into
xor
lret
lds
sar
or
int3
icebp
pop
pop
js
loopne
js
sub
fisttpl
push
xchg
sar
sub
inc
out
cmp
mov
popa
clc
jo
jb
andb
loope
add
push
incl
xlat
inc
adc
sbb
mov
cmpb
pop
bound
decb
test
clc
and
lods
adc
aaa
adc
jnp
adc
pop
cld
call
xor
or
cmp
jb
mov
inc
sub
mov
lcall
das
sub
sbb
mov
jg
sbb
adc
ret
inc
push
int3
mov
push
xchg
xor
mov
xchg
cmc
lods
jo
sbb
insl
sti
and
ja
cld
out
stos
test
adc
call
cltd
shlb
pop
out
jge
aaa
pop
pop
ret
sub
jb
xlat
jl
mov
sbb
shll
inc
and
push
sbbb
mov
jmp
data16
push
jg
adc
inc
mov
pop
adc
call
cmp
sub
and
adc
pushl
fisubrs
imul
and
cmp
sbb
pop
fidivrs
pop
aaa
or
mov
inc
mov
aad
dec
mov
cli
push
scas
js
lods
arpl
mov
ss
hlt
lret
xor
push
push
jl
xor
pusha
ds
mov
iret
and
xor
aas
inc
in
scas
loopne
clc
mov
repnz
pushf
hlt
or
cmp
pusha
test
ficompl
clc
mov
pushl
sbb
stc
imul
push
lock
xor
icebp
inc
cmp
stos
add
into
imul
push
mov
cmp
add
loope
ficoms
cs
mov
sub
push
out
jp
sub
mov
in
inc
push
pop
lods
inc
dec
mov
aas
fildll
and
dec
xor
fbld
add
data16
pop
aam
push
inc
out
mov
sbb
sbb
or
out
imul
sbb
jmp
or
cli
out
les
in
add
prefetch
or
decl
into
stc
mov
insl
test
add
xchg
dec
xchg
mov
out
movsl
out
sbb
push
sbb
or
xor
cld
aas
rolb
popa
adc
jmp
je
adc
add
std
pop
incl
fmul
sub
icebp
ficomps
mov
pop
test
adc
mov
or
or
dec
test
lcall
inc
filds
js
shlb
pop
adc
cld
fisttpl
insb
cld
mov
mov
mov
hlt
add
fcoms
jp
dec
xor
ja
jg
idivl
imul
call
in
ja
cmp
mov
mov
jnp
call
dec
adc
or
out
sub
iret
sahf
jae
dec
xor
jno
out
test
cmc
sbb
dec
or
pop
mov
aaa
xchg
push
icebp
jle
inc
pop
into
icebp
xchg
and
xchg
adc
loope
push
daa
ljmp
or
jne
ret
cwtl
sub
pop
pop
mov
push
adc
lret
rcll
es
mov
xlat
aam
mov
jbe
adc
shlb
or
cmp
mov
and
pop
test
addl
xor
pushf
fwait
jg
adc
push
shlb
cmc
cltd
call
xchg
pop
je
mov
mov
cmp
fwait
sbb
mov
lret
mov
pop
jp
aam
call
ja
and
stos
jg
mov
dec
xchg
int3
outsl
pop
test
cmp
xor
int
das
xchg
jnp
mov
mov
mov
adc
je
jne
adc
pusha
or
inc
cmpsl
pop
mov
mov
and
das
xchg
push
add
xor
subb
mov
adcb
dec
or
pop
std
jge
dec
add
and
or
divb
jmp
inc
inc
js
mov
jmp
adc
push
ljmp
sbb
psubsb
pusha
xor
sub
daa
push
jl
push
and
stos
inc
fs
ljmp
mov
add
jp
inc
lcall
push
sahf
loopne
and
add
add
mov
pusha
pusha
dec
jmp
jbe
dec
loope
lock
add
cmp
stos
push
mov
idivb
mov
ret
stc
sbbb
outsl
and
popa
sbb
fisubl
adc
and
scas
cs
pop
imul
sub
repz
dec
adc
adc
stos
mov
pop
inc
stos
aam
idiv
ljmp
popf
cmp
cmp
add
push
mov
mov
inc
pop
fs
das
mov
repz
sbb
push
jecxz
xor
leave
int3
nop
add
xor
or
ds
mov
jmp
inc
mov
cmp
cli
inc
hlt
movsb
out
sbb
dec
fsubr
in
in
and
test
xor
jmp
call
mov
pushf
mov
push
inc
into
fbld
cmp
dec
scas
jge
cbtw
inc
pop
cli
and
push
cld
push
mov
push
and
stos
sbb
or
pusha
add
inc
into
jnp
pop
lret
xchg
test
push
cld
incl
add
add
cli
movsl
mov
push
inc
xor
add
mov
pop
xlat
adcl
rcl
insb
shl
xchg
or
xorl
and
ljmp
sub
loop
xor
pop
pop
gs
cmpsb
or
adc
pop
jmp
lea
out
test
loopne
lock
sub
iret
les
jge
imul
add
incl
js
push
std
in
xchg
jmp
popa
clc
cli
hlt
mov
push
out
insb
mov
sub
adc
hlt
outsl
cli
in
or
test
nop
stos
shll
mov
fistpl
fwait
lcall
testb
add
aas
jbe
cs
cs
movsl
sahf
mov
cmpl
cld
jo
jb
test
and
push
shl
call
mov
add
ljmp
int
sub
inc
fimull
xor
sbb
xor
repz
add
push
decl
sar
mov
lods
cld
lock
mov
bound
adc
or
mov
out
xor
loopne
cmp
stos
movsl
leave
xor
inc
sti
fstpl
mov
pop
std
out
adc
inc
adc
stc
adc
loope
incl
fs
lods
sub
cmp
sbb
clc
sbb
jb
push
jne
cmp
stos
cmp
dec
cmc
and
pop
and
pop
xchg
lods
adc
add
mov
add
enter
cmp
pop
clc
cmpsb
or
lods
mov
jecxz
mov
nop
mov
ja
test
outsl
clc
scas
mov
sbb
jns
loope
std
ja
rclb
test
inc
inc
xchg
pop
xor
or
jo
or
and
mov
sbb
push
test
movsb
incl
xor
cmp
mov
sub
insb
enter
mov
mov
dec
push
fisttps
add
int
or
add
jl
cmpb
dec
or
jne
push
ret
ljmp
insl
xchg
insb
loop
int
mov
ss
into
add
sub
aaa
loopne
push
cwtl
inc
ds
mov
dec
pop
das
or
aaa
rolb
xor
out
mov
lret
sbb
pop
sub
inc
push
aad
enter
das
lcall
dec
rorb
mov
add
add
outsl
sbb
lock
push
push
jnp
lock
and
stos
mov
sahf
aad
shlb
aaa
in
dec
pop
data16
ljmp
jmp
push
sub
jmp
sbb
cltd
push
ffree
mov
pushf
inc
sbb
xchg
push
xchg
sbb
xchg
faddl
dec
dec
add
pminub
int3
out
xchg
inc
ja
dec
pop
pop
jl
push
sbb
add
add
xor
clc
aaa
inc
in
mov
out
pop
mov
add
mov
mov
jl
pop
fwait
xor
adc
and
sti
psubd
cmc
sbb
andb
inc
je
xchg
rolb
jnp
lea
add
jp
add
test
sub
ret
or
jmp
jle
add
pop
divb
mov
add
pushf
insb
daa
sbb
icebp
mov
stos
sub
adc
add
lret
loopne
cld
sbb
pop
out
xor
dec
sbb
sub
aad
icebp
stos
jl
in
push
pusha
xor
pavgw
rcr
rcrl
insl
jbe
push
xor
lahf
mov
mov
adc
mov
push
sbb
mov
ljmp
ds
or
push
sub
add
popa
mov
mov
pop
icebp
fbstp
jecxz
aas
neg
mov
fucomip
sub
add
mov
andl
es
scas
or
push
es
insl
pusha
and
es
ljmp
shrb
xchg
ret
xor
sbbb
or
jmp
cld
or
cwtl
js
fnstcw
stc
pop
loope
shrb
mov
rclb
push
pushl
mov
clc
ss
push
mov
push
mov
repnz
cli
inc
cmp
fwait
decl
cld
and
rcl
aas
imul
loope
mov
pop
push
sti
xlat
mov
cmp
sub
jmp
push
add
inc
adcb
into
in
lods
aam
jg
lods
lods
sub
mov
jo
jbe
xchg
dec
pop
cmpsl
sahf
stos
out
mov
sbb
dec
xor
push
add
cmp
ret
mov
or
das
sub
ja
mov
jge
and
adc
leave
inc
adc
cld
out
push
call
mov
cmp
rclb
cwtl
and
jecxz
cmpsl
aaa
movsb
scas
and
addb
and
push
dec
push
push
dec
adc
dec
jecxz
mov
movsl
cmpsb
pop
loopne
dec
and
fidivrl
cmpb
inc
lds
adc
cmc
cmp
or
out
inc
jo
sbb
or
cmp
push
gs
stc
jp
test
mov
or
pushf
add
ret
inc
add
out
pop
mov
fisttps
addr16
inc
ficompl
sbbl
push
test
orl
xchg
xchg
clc
push
ds
test
mov
pop
adc
cmp
sbb
loopne
int3
add
test
std
sub
mov
push
jg
jge
std
xor
sbb
int3
push
inc
call
out
add
xchg
adc
mov
sub
inc
pop
or
and
sbb
inc
es
icebp
and
lods
and
fistpll
pop
inc
or
andb
mov
sbb
push
icebp
mov
pop
lock
into
and
inc
aas
and
inc
mov
cmp
and
cmc
loop
shl
pusha
add
push
ret
popf
int
or
push
inc
ret
mov
imul
rcr
loopne
test
fld1
adc
inc
push
or
sahf
or
leave
shlb
xor
mov
sbb
cmp
mov
xchg
cli
jecxz
sbb
xchg
in
xchg
daa
jle
adc
in
ja
adc
push
clts
pop
push
mov
dec
pop
js
ss
adc
mov
ret
lock
mov
add
enter
cmp
push
push
incl
add
jl
and
pusha
cli
sbb
push
into
add
inc
mov
xor
icebp
in
pop
adc
movsb
sub
flds
aam
sub
mov
mov
mov
movsl
mov
imul
daa
or
xchg
sub
lock
jle
push
mov
addl
jbe
jmp
pop
ja
inc
in
and
push
pop
out
cmpsl
push
insb
jp
das
inc
les
lds
jle
imul
movsl
inc
or
popa
xlat
xorl
dec
insb
and
jp
mov
or
les
cmp
xlat
or
inc
fiadds
pop
loopne
sbb
js
add
loope
add
mov
push
mov
push
jle
enter
jmp
mov
dec
ljmp
pop
push
xchg
inc
push
add
shlb
push
lea
jb
mov
push
test
xchg
cmp
pop
cwtl
push
cmc
jo
and
xchg
pop
fdiv
ret
dec
insb
dec
gs
out
dec
adc
mov
push
push
add
sbb
loope
adc
xor
sbb
jbe
cmp
mov
adc
sub
pushf
dec
cld
daa
pop
and
mov
es
mov
xchg
mov
dec
int3
jbe
xchg
push
ds
lret
inc
add
mov
jo
push
aam
movsl
test
movsb
mov
loopne
mov
push
inc
fcmovnb
dec
das
inc
ret
imul
mov
adc
cli
popa
scas
hlt
incl
adc
adc
jbe
mov
sub
jp
jmp
addb
push
add
sbb
xchg
decl
mov
loop
out
pop
aaa
pop
and
addr16
mov
or
test
fs
icebp
sahf
fildll
es
xchg
sbb
iret
inc
cmp
cmpb
es
mov
jmp
lods
bound
ds
fs
insb
inc
stos
cmp
sbb
add
scas
lahf
lock
or
adc
push
jmp
rorl
subl
sub
adc
push
rcr
pop
fcmovbe
loope
clc
sarb
into
or
inc
shl
pop
cld
in
icebp
and
dec
iret
adc
mov
push
cld
lcall
fs
ds
inc
leave
call
out
repnz
sub
mov
ret
out
cmc
ljmp
sbb
add
add
mov
aam
pop
stc
pop
jmp
out
enter
enter
std
inc
sar
ja
loope
jmp
adc
ds
mov
ljmp
adc
clc
pop
xchg
or
jecxz
push
stos
mov
in
jno
and
sti
cld
arpl
test
pop
rorl
dec
add
fldt
subb
dec
ss
push
xchg
mov
jmp
aam
adc
push
push
pop
subb
mov
or
subb
mov
movsb
xor
xchg
test
clc
mov
movsl
sub
rcrl
jb
xor
or
mov
div
loop
mov
mov
fwait
out
mov
sbb
push
mov
loopne
lock
push
lods
mov
hlt
nop
adc
shll
add
adc
fs
daa
scas
cli
stos
addr16
push
dec
jne
cld
xchg
loopne
lahf
cmp
push
sbb
and
lcall
inc
and
shr
sub
cld
jg
add
adc
cmp
jo
cld
add
mov
add
sbb
shrb
add
inc
lret
sbb
cmp
mov
scas
je
xor
in
inc
and
insb
std
add
jl
mul
loopne
pop
adc
and
add
test
ljmp
lcall
jbe
outsl
mov
and
push
dec
clc
mov
add
fwait
and
loopne
dec
adc
in
sub
jb
pop
das
lods
fxch
cmpsl
in
loope
aam
pop
cmp
sbb
inc
mov
repnz
insl
repz
ljmp
cs
rolb
mov
sbb
jns
imul
sub
and
mov
add
loop
jle
inc
scas
or
int
xlat
xchg
pop
nop
add
faddl
hlt
adc
mov
cmp
dec
shrl
xor
aas
addl
cld
shrb
pop
popl
dec
pop
sbbb
sbb
add
pop
and
std
clc
jg
mov
ret
inc
hlt
mov
popf
add
movsl
lahf
add
in
aas
sarb
or
lcall
aas
xchg
or
aaa
pop
mov
fs
adc
sbb
outsl
mov
mov
fs
lea
test
cmp
sub
cld
loope
or
xchg
scas
adc
mov
push
adc
out
in
fcompl
sahf
test
inc
test
mov
sar
ret
mov
xor
and
push
inc
inc
adc
mov
pop
push
pop
cmc
call
dec
sub
dec
push
xlat
pushf
sub
jae
out
sbb
mov
fwait
fistps
outsb
es
lock
lcall
repnz
aas
not
lea
stos
shll
mov
and
mov
fcoms
dec
ret
xchg
ds
jle
jmp
loopne
aas
mov
xchg
push
test
popf
add
xchg
sub
shrd
pop
js
mov
pop
idivl
xor
pop
xor
sarl
xor
ss
daa
push
inc
imul
imul
cld
shr
add
stc
and
xlat
xor
adc
adc
push
cwtl
mov
aad
or
and
mov
popf
and
pop
mov
and
pop
inc
fcomip
sub
inc
mov
push
inc
shl
jl
jg
ret
inc
jg
icebp
add
jge
mov
mov
in
cmc
roll
adc
inc
mov
clc
jne
inc
rolb
mov
cmp
lret
clc
mov
xchg
ficoml
sbb
and
inc
mov
jne
sbb
call
dec
mov
aad
loopne
leave
mov
adc
cmp
xor
push
je
mov
mov
test
adc
cmp
mov
scas
inc
add
cli
insb
cli
inc
std
sub
fs
sbb
dec
fdiv
or
adc
loopne
cmp
nop
xor
adc
iret
outsl
add
cmp
pop
or
scas
cld
inc
pop
xorl
aas
or
popf
cli
ljmp
fs
jmp
mov
mov
sbb
jb
test
pop
test
rorb
dec
idiv
push
cld
call
and
push
loope
call
testb
push
cmp
push
int3
lock
xlat
aas
mov
pop
das
jp
inc
inc
push
jge
loope
and
shrb
rorb
shrb
mov
outsb
cli
cmp
mov
mov
mov
aaa
mov
mov
call
das
and
decl
movsl
or
gs
decl
lock
xor
cmpsb
lret
mov
mov
fsubl
xchg
mov
mov
xor
lods
pushf
sbb
pop
dec
into
mov
pop
ljmp
or
and
mov
cmp
mov
xchg
sbb
and
and
lret
push
je
mov
and
ljmp
jb
sub
and
loop
ja
lahf
inc
in
jg
pop
inc
sbb
aas
imul
cmp
sbbb
or
inc
cmpsb
insb
push
pushf
fmul
test
cmp
gs
mov
jge
push
pop
movsl
inc
rcrb
into
add
lret
call
or
mov
and
cmp
ljmp
mov
pop
lods
jo
sbb
push
in
mov
sub
gs
dec
call
fcomi
or
ret
cmp
add
push
inc
add
xchg
aas
lods
icebp
adc
test
stc
jg
std
rolb
adc
sbb
out
sub
xor
mov
sub
jg
test
push
push
test
xchg
mov
jl
arpl
call
ljmp
test
add
inc
rorb
jo
orl
mov
inc
pop
or
pop
jmp
and
mov
loopne
jl
push
and
out
adc
popa
fistl
in
adc
andb
idivl
jmp
lret
stos
and
adc
dec
dec
xchg
fildl
loopne
sbb
mov
das
subb
gs
das
push
dec
jbe
rcrl
cli
movsb
pop
xor
sbb
dec
jo
add
sub
mov
sarb
test
ljmp
pop
push
or
cmp
mov
jno
cmp
popa
sub
loopne
rcrb
mov
fdivl
cli
fwait
adc
mov
pushl
lcall
mov
das
scas
adc
hlt
inc
inc
mov
cld
outsl
aaa
cwtl
jmp
mov
das
push
push
bound
jl
rolb
jns
inc
data16
decl
sbb
lods
cmp
shrb
mov
stos
push
mov
test
sbb
mov
mov
daa
testb
mov
pushl
push
jo
add
fisubrl
cmpsl
xchg
and
xchg
xor
mov
filds
sti
and
push
jmp
test
add
lock
dec
mov
adc
lock
sub
out
jp
adc
add
in
lcall
or
add
add
jnp
mov
mov
add
dec
jae
in
jae
clc
pop
mov
sbb
icebp
cmp
fisttps
add
in
and
add
movsb
lds
push
in
mov
push
mov
fsubrs
add
aas
mov
cwtl
jne
and
insl
pop
addb
xchg
ror
or
shr
cmpsb
and
push
sub
shr
incl
mov
mov
cwtl
add
add
jg
incb
lret
dec
xor
jl
xorl
mov
out
mov
mov
mov
mov
addr16
mov
repnz
or
es
cld
outsl
sub
or
mov
bound
mov
xor
cs
pop
adc
pop
mov
push
cld
mov
adc
aaa
int
dec
sarl
add
xchg
sbb
aaa
pushl
cld
mov
add
cli
xchg
xor
adcl
xchg
fs
push
sbb
xor
scas
xor
push
ret
sub
inc
xchg
fs
nop
je
mov
pop
or
fldenv
fdivrs
movsb
jne
mov
das
stos
push
rolb
sbbb
nop
das
clc
jg
add
icebp
imul
mov
xchg
sbb
out
rcr
sar
inc
xor
and
mov
ficoml
xor
test
imulb
mov
inc
cmp
in
dec
jne
mov
push
fldt
xchg
in
push
xchg
and
push
or
sbb
or
icebp
out
add
inc
jp
fnstcw
lret
sti
iret
mov
incb
cltd
fisttps
pop
test
lods
dec
and
lret
hlt
jo
out
data16
jp
pop
mov
inc
fsubrl
orb
jg
sub
xchg
add
inc
xchg
ds
fisubs
imul
clc
inc
pop
int
mov
dec
scas
pop
test
xchg
inc
outsl
push
scas
rcl
xor
xchg
pop
cmpsl
sub
dec
dec
mov
add
fcomps
das
dec
mov
daa
imul
add
iret
pop
inc
repnz
test
push
and
ljmp
jo
cmp
cli
push
int
pop
xchg
lods
xlat
mov
sti
jae
arpl
test
pop
adc
xorb
pop
pop
jns
pop
popa
dec
xor
adc
xor
jno
or
or
mov
out
pop
dec
shl
dec
sbb
jno
aaa
shlb
scas
push
pop
icebp
aas
js
push
mov
testb
or
adc
ljmp
and
aam
in
cld
cmp
fbld
insb
popf
mov
stos
mov
daa
ret
insb
lock
jbe
rorb
or
add
mov
inc
sbb
mov
xor
jge
pop
adc
icebp
xor
mov
or
test
rol
xor
sar
jbe
dec
add
popa
jno
push
icebp
out
adc
test
adc
jbe
xchg
xlat
arpl
add
pop
lods
sub
into
xlat
nop
mov
sub
sbb
fisttps
sbb
mov
outsl
mov
cld
loop
aas
push
inc
adc
cmc
aas
ret
hlt
add
cmp
adc
jg
jg
into
mov
xor
inc
cmc
or
mulb
or
jbe
outsb
push
xchg
xchg
std
leave
dec
int
js
inc
xor
dec
loop
pop
insl
es
sahf
pop
xchg
leave
cmpsb
test
jbe
cld
sbb
js
adc
clc
scas
xor
scas
push
pop
mov
adc
aam
subb
jle
inc
aaa
stos
cld
repnz
lcall
cmp
xchg
xor
adc
mov
add
aas
adc
push
cmp
ljmp
push
mov
and
mov
mov
int3
test
outsl
pop
fsubl
lods
pop
in
inc
push
push
jmp
incl
push
xor
pop
jb
dec
cmp
cmpsb
daa
ja
jp
aas
les
subl
insb
rorl
clc
mov
aaa
jg
nop
dec
pop
movsb
call
loopne
orl
xor
nop
arpl
pop
aad
mov
daa
lea
shll
inc
roll
sub
ret
jb
ds
cmp
jp
es
mov
inc
call
repz
inc
cli
sbb
lcall
inc
and
push
fs
mov
push
call
icebp
popa
out
pop
sahf
and
loope
loopne
icebp
xchg
jbe
lcall
mov
adc
out
mov
sbbb
lcall
xor
xor
out
push
je
loop
fdivs
std
add
in
pop
mov
imul
fwait
sahf
scas
jg
hlt
pop
xchg
sahf
daa
sub
push
xchg
sbb
ja
inc
jbe
in
mov
add
cs
and
sarb
rorl
dec
dec
cmp
push
or
jns
incb
add
les
nop
mov
push
cmpsl
arpl
sbb
pop
out
filds
cltd
mov
cld
add
push
sbb
call
incl
push
push
cmp
out
jmp
mov
roll
test
inc
xor
divl
mov
fcomp
dec
jle
leave
mov
fstpt
push
jl
mov
in
push
push
aaa
inc
outsl
adc
leave
lea
out
sbb
sbb
jp
adcb
add
aaa
add
mov
incl
sub
shll
push
xchg
xchg
pusha
clc
popa
push
or
js
push
loopne
ficoms
inc
hlt
dec
lret
mov
add
cmp
mov
xor
mov
inc
int
xor
push
repnz
mov
orl
fsubrs
add
sbb
outsb
xor
mov
call
sub
mov
incl
or
or
cld
ret
outsl
pop
loopne
scas
or
xchg
paddw
push
pop
or
nop
ja
test
mov
ror
fidivrl
push
inc
push
sahf
loopne
loope
mov
push
mov
lahf
mov
jne
fsubrs
mov
out
inc
aad
out
cli
iret
cmpsb
or
outsl
divb
mov
add
and
jnp
add
adc
ret
pop
xor
repnz
dec
fnstcw
mov
xor
aaa
push
xor
or
and
sbb
and
popa
testb
fsubl
cmpsb
cmp
pop
xchg
xor
push
jle
aam
testb
pop
out
pop
les
cli
rolb
pop
insb
mov
dec
mov
lods
push
lods
stos
ljmp
lcall
and
js
hlt
mov
sub
imul
cs
mov
movsl
rorb
jno
das
stos
dec
mov
dec
in
xchg
clc
pop
es
pop
mov
arpl
jmp
ss
aad
dec
nop
jb
std
mov
add
and
in
dec
in
mov
jb
int3
shll
add
sbb
mov
sbb
mov
add
sub
aam
decl
lods
icebp
ret
sbb
dec
xor
andl
inc
and
and
xor
ljmp
add
add
pop
xchg
sub
push
cmp
aam
adc
int
loopne
pop
dec
inc
mov
mov
pop
jo
dec
lock
mov
enter
rolb
fadds
gs
imul
test
incl
sub
ss
sbb
and
ret
xor
cmp
in
lahf
lods
inc
push
push
pop
mov
push
sub
add
les
jno
cmp
sahf
add
mov
add
outsb
lcall
cmp
and
pusha
jmp
cmp
dec
adc
sbb
scas
icebp
and
test
inc
jne
adc
out
out
xchg
maskmovq
testl
jecxz
add
mov
inc
dec
add
sbb
dec
xor
lea
cmp
inc
sahf
adc
aas
call
adc
test
decl
push
push
lret
cmp
sub
cmp
push
cld
jg
popf
inc
push
loope
leave
mov
in
bound
incl
mov
je
add
dec
xor
jg
fsubrs
pop
cmp
mov
popf
rorb
mov
roll
pop
push
or
pop
add
cmc
mov
and
stos
in
fists
jmp
or
sub
cmp
pop
add
call
fdivp
or
lock
dec
jo
out
cmp
es
and
ficomps
add
repz
and
xor
icebp
jg
and
rcrb
sbb
insl
loop
inc
std
mov
stos
add
incl
sti
sbb
push
in
in
mov
sub
cmp
data16
sub
idivb
rcrb
rcll
or
cli
inc
push
xor
mov
das
js
mov
stc
inc
sub
inc
dec
fidivs
and
cld
cwtl
les
adc
or
jns
test
add
and
test
jmp
cmpb
add
or
adc
add
jecxz
cmp
stos
xchg
jmp
push
clc
sub
inc
pusha
icebp
cld
test
jmp
lock
imul
push
push
adc
add
mov
and
xchg
ds
test
scas
loop
or
adc
cmp
mov
xor
jmp
sub
lods
push
sbb
add
adcb
push
fwait
cmp
enter
cltd
mov
addl
icebp
jmp
inc
xorb
xchg
fmull
push
insb
mov
ficoml
shlb
push
scas
adc
ret
cmpsl
pop
mov
dec
or
add
mov
repz
mov
mov
ret
mov
push
mov
orb
pop
push
je
lret
std
sub
inc
push
fwait
ss
loope
int3
hlt
fisttpll
mov
push
inc
adc
dec
or
push
data16
pop
inc
es
dec
cmpsl
daa
sub
data16
adc
fwait
int
dec
dec
pop
mov
dec
pop
loope
call
ja
int
or
fwait
mov
ret
fsts
into
je
in
pop
clc
push
gs
addl
sbb
jmp
sbb
push
push
pop
push
in
xchg
sbb
sub
cmp
xor
aam
outsl
lds
jo
out
loopne
add
jp
pop
pop
mov
imul
mov
call
fwait
dec
lods
pop
jo
nop
shl
push
cli
loopne
add
out
pop
lahf
pop
incl
jle
sub
push
sub
push
push
imul
in
cmovl
pop
push
mov
mov
xchg
adc
cmc
push
into
or
test
jg
pop
pop
xor
or
cmp
push
mov
or
fnstsw
cmp
lods
inc
jmp
jg
lods
adc
jp
pushf
push
add
cli
stos
add
dec
sahf
loopnew
fs
pop
jecxz
sub
push
sub
loopne
data16
popa
xchg
add
data16
cld
lcall
divl
jecxz
fsts
xchg
jno
pop
jns
lock
iret
mov
or
pop
rorb
mov
repnz
aad
clc
test
out
adcl
mov
in
dec
hlt
stos
data16
and
ljmp
adc
mov
mov
int
and
dec
out
and
sahf
mov
cltd
jo
iret
cmc
jmp
add
cmp
xchg
and
repnz
sbb
xchg
pop
std
call
xorb
jns
add
mov
test
out
loopne
xchg
add
popf
popf
aam
sarb
push
sbb
jns
sarb
pop
ds
mov
test
cwtl
mov
or
xor
or
mov
bound
sahf
add
push
or
mov
call
xor
or
std
jl
cmpsl
clc
mov
jno
je
and
jecxz
cli
dec
lods
sub
movsl
hlt
sbb
push
adc
outsb
insl
mov
pop
lret
mov
dec
in
jnp
mov
icebp
inc
cmp
js
or
ret
adc
mov
mov
outsb
mov
dec
jp
sti
push
xchg
inc
hlt
mov
mov
pop
and
pop
out
xchg
and
inc
aam
mov
sar
incl
xchg
mov
popa
or
pushf
sahf
push
add
cld
add
add
icebp
xlat
mov
ja
es
loope
lds
jmp
jl
movsb
cli
dec
cld
xor
inc
xchg
sub
mov
mov
jg
jnp
jno
scas
add
pop
dec
sbb
inc
or
sub
in
int3
aas
clc
or
dec
cmp
mov
inc
js
in
daa
fs
incb
into
xchg
fimull
pop
insl
popa
xchg
stos
jmp
xchg
cwtl
mov
mov
ljmp
ret
les
imul
adc
mov
mov
rorb
hlt
cmp
addr16
and
push
rcll
or
xchg
or
mov
mov
pop
mov
sub
scas
lods
cmp
stos
pushf
pop
pop
lret
push
dec
hlt
filds
adc
xor
lcall
dec
int3
cli
adc
int3
push
push
inc
stos
popf
push
sbbb
loope
pushf
sti
incl
cld
push
adc
fsts
xchg
pop
or
test
adc
or
add
mov
lcall
bound
mov
mov
aaa
cld
ret
fcoml
xor
cmp
add
cli
mov
and
or
pop
cld
ja
orb
xor
cmc
inc
jg
mov
mov
gs
add
xor
cld
add
dec
add
or
cmp
test
mov
mov
add
jmp
lret
mov
movsb
inc
cwtl
int
add
sar
mov
xlat
push
pop
inc
xchg
add
mov
cwtl
push
push
dec
mov
pushf
inc
scas
popf
pop
add
sbb
push
push
enter
shrb
hlt
js
shlb
mov
es
jmp
hlt
cmpsb
lds
cmpsb
mov
enter
push
mov
or
neg
lock
mov
adc
test
lahf
jo
xor
and
sbb
xor
jo
lcall
cld
inc
sub
sbb
cltd
mov
inc
or
les
add
ljmp
test
mov
scas
fcom
and
roll
and
hlt
jo
nop
adc
xor
inc
rclb
xor
jle
lcall
and
push
add
jmp
daa
js
int
fdivrp
lcall
jle
push
aaa
xor
scas
sti
sahf
insb
in
push
out
mov
das
pop
mov
aaa
std
call
outsb
jbe
ljmp
add
incl
or
enter
std
inc
jnp
sbbl
add
lock
push
mov
insb
push
ret
mov
sti
pop
jo
jmp
jge
jle
loop
and
adc
into
or
sub
fcomip
fwait
pushf
or
and
popf
mov
adc
or
jne
add
push
adc
xchg
jo
jae
mov
mov
push
fs
icebp
scas
and
je
mov
dec
push
cmp
jo
inc
mov
jle
fildl
push
fwait
inc
add
push
roll
and
sbb
cmpsl
je
and
sbb
les
jns
add
xchg
js
pushl
sarb
outsb
mov
lods
add
testl
push
ret
mov
loop
sahf
mov
ret
ss
push
scas
mov
cmp
jb
sarb
mov
ret
jo
jmp
loop
add
add
fimuls
les
es
lods
pushf
push
pop
push
inc
mov
push
pop
or
test
or
fnstenv
mov
sbb
pop
xchg
inc
push
cld
scas
fbstp
jl
adc
jle
jae
sbb
mov
add
push
mov
cmp
mov
sbb
loope,pn
lock
cli
or
lret
lret
cli
js
push
pop
push
xchg
push
inc
mov
add
sbb
cwtl
jno
movsb
dec
xchg
jle
lock
es
and
mov
outsl
adc
and
push
enter
inc
jne
rolb
sbb
and
adc
mov
cli
outsl
rorb
add
jne
sbb
ret
mov
les
test
adc
cmp
bound
sbb
jp
jecxz
or
push
leave
dec
dec
dec
shlb
cmc
ja
lds
lret
jae
fldenv
dec
insb
push
popf
add
xchg
and
mov
jne
add
and
es
addr16
inc
out
or
in
dec
pop
ljmp
mov
decl
jo
push
in
lds
xchg
call
out
insb
mov
add
mov
xchg
fidivrs
out
sbb
bound
mov
in
imul
mov
aam
pushl
inc
push
xor
jmp
aad
shlb
mov
xor
stc
jg
cmp
mov
adc
xor
lret
adc
mov
jmp
pop
lea
add
fwait
jo
or
movsl
mov
inc
fisubrl
mov
lahf
or
dec
fcomi
in
fsubrl
or
push
and
ja
int3
xchg
jne
ret
or
les
jmp
adc
sbb
lcall
jmp
stos
mov
push
adc
arpl
enter
inc
cld
pop
cmpsb
fldt
cmpsl
aaa
jg
jl
test
fcomps
loop
mov
mov
pop
ljmp
dec
int
inc
or
sub
mov
rolb
or
xchg
xorb
lock
add
sub
sbb
imul
movnti
mov
rol
lds
push
mov
cltd
sahf
add
and
push
dec
insl
iret
ret
add
scas
or
imul
testb
add
add
push
aaa
and
ret
mov
cmp
push
push
add
jno
xlat
or
fisttps
loopne
mov
stos
enter
adc
orps
mov
push
mov
dec
jmp
or
ret
inc
mov
inc
das
mov
add
popa
push
mov
cmp
pop
adcb
sub
cmp
fsubl
outsl
mov
add
stos
cmp
xchg
mov
sbb
add
mov
hlt
or
stos
jmp
insb
mov
xor
fcmovne
fiadds
or
pop
int
mov
insl
pop
pop
jbe
pop
dec
outsb
fstpt
in
pushf
ret
mov
and
push
push
test
cld
mov
fildll
jo
fstpt
mov
adc
or
adc
call
cli
cmpsl
icebp
decl
add
data16
dec
mov
in
and
out
cwtl
push
loop
cmpsl
push
xchg
cmc
iret
andb
jge
hlt
push
subb
push
or
mov
repz
dec
ficompl
adc
pop
inc
xor
lret
add
mov
cmp
add
xchg
push
scas
adc
imul
mov
dec
and
jle
int
leave
outsl
sub
in
adc
clc
xor
push
scas
mov
enter
sub
cmp
push
mov
jl
or
inc
push
test
call
inc
pop
adc
jle
push
dec
inc
movsb
mov
sub
adc
movsb
les
xor
outsl
push
cmpsb
push
mov
ljmp
cli
sub
rcll
mov
xchg
and
mov
add
ljmp
adc
jnp
xchg
sub
push
push
stos
in
clc
pushf
shll
xor
fnsave
dec
xorb
cmc
insl
jbe
sbb
xor
iret
cld
pop
sbb
incl
outsl
or
rorb
pop
jle
inc
add
xchg
cmc
add
decl
das
call
les
push
roll
adc
lret
pop
xchg
sub
pushf
in
pop
jnp
mov
add
lods
inc
adc
xor
mov
lahf
jnp
push
rolb
xchg
clc
lock
lcall
xchg
sub
and
pusha
out
add
inc
mov
sub
sti
aas
std
shl
mov
or
clc
jg
xchg
push
inc
loopne
add
sub
adc
daa
xor
les
sbb
adc
cmpsl
add
xchg
and
add
push
push
sti
mov
popa
adc
mov
decl
push
xchg
sub
loope
lods
imul
mov
and
scas
pop
rolb
sub
mov
mov
xchg
aas
es
lcall
outsl
push
cmp
jecxz
lret
add
or
dec
cmp
lods
incl
aad
addr16
xchg
xchg
dec
jns
fcomip
pop
pusha
pusha
insl
inc
add
call
cmp
mov
test
gs
xchg
clc
push
xor
add
cmp
cli
and
sbb
fld
inc
icebp
insb
dec
xchg
xor
jb
pop
mov
sar
jg
jb
push
mov
cmp
fnstenv
test
cli
xor
rclb
ret
dec
and
or
loopne
in
or
leave
cmc
push
rcll
jp
fucomip
mov
mov
and
mov
mov
fistps
add
sub
push
mov
adc
mov
push
hlt
mov
pop
aam
or
adc
cld
inc
ret
mov
jmp
xchg
lret
fdivl
sub
and
jmp
cs
cmp
out
addr16
cmp
or
add
clc
mov
rcrl
lahf
sub
icebp
push
and
sub
cli
testb
add
dec
arpl
dec
in
aas
out
lods
add
xchg
or
lds
jmp
mov
mov
mov
pop
cli
pop
repnz
ret
sbb
mov
add
pop
lcall
insl
and
nop
cmpb
push
sarb
fidivrl
cli
sub
or
sub
lock
call
mov
cmp
add
or
cmp
es
dec
mov
cwtl
mov
lcall
stos
sub
cmp
jnp,pn
outsl
incl
pop
xorb
add
pushf
mov
arpl
insb
pop
fistps
jb
jmp
or
aas
sub
neg
push
iret
add
inc
data16
add
cltd
xchg
dec
and
lea
add
in
lea
xchg
nop
lock
add
lods
ret
insl
and
sub
dec
cs
aaa
jne
fistpll
dec
jns
loop
add
ret
dec
push
loope
fsubs
sbb
clc
cwtl
mov
adc
xchg
mov
pop
jg
mov
sub
or
xchg
or
lret
hlt
das
add
roll
and
or
adc
hlt
clc
sub
pop
sahf
adc
or
decb
and
aad
or
test
mov
or
idivl
jge
pop
adc
sbb
jp
sub
ds
or
mov
fcmovnb
dec
je
out
pop
mov
scas
mov
add
stos
mov
mov
incl
frstor
in
inc
rolb
inc
mov
nop
loope
mov
in
xor
in
divl
or
xor
fwait
icebp
mov
orb
cs
nop
and
repnz
das
sbb
loopne
sbb
adc
inc
pop
xor
jo
lock
or
jecxz
lods
and
jl
fildll
sub
stos
mov
inc
lods
cltd
add
inc
mov
adc
jg
imul
or
nop
sbb
lcall
pop
adc
add
mov
js
js
cld
cmc
data16
sbb
hlt
mov
xor
out
adc
orb
nop
out
decl
xor
test
and
mov
dec
mov
mov
add
sbb
nop
lock
sub
mov
decl
jmp
dec
jb
test
mov
ss
sbb
std
les
test
popf
adc
icebp
sub
icebp
mov
mov
mov
push
jnp
xchg
cwtl
shrb
add
shll
mov
adc
outsl
push
lcall
jmp
scas
add
jb
mov
inc
adc
cmp
mov
push
sbb
xor
movsl
call
sbb
iret
or
lret
cmpsl
and
or
cmpsl
mov
in
or
lods
decl
fidivs
fs
mov
pop
sbb
out
push
insb
sarl
mov
push
push
inc
dec
mov
orl
mov
xchg
adc
mov
inc
outsb
mov
xchg
add
inc
and
movsb
repz
arpl
mov
fwait
add
jmp
insl
leave
mov
adc
idivl
mov
sub
int3
loop
mov
cmp
mov
shrl
mov
jl
lods
add
hlt
ja
cld
cwtl
sbb
add
xor
xor
or
aas
stos
cli
test
push
mov
shrl
ja
dec
pop
cmc
icebp
testb
sbb
dec
xor
das
xor
sbb
add
jbe
sbb
shll
xor
cmp
push
cld
add
xor
xor
dec
mov
push
dec
loopne
fwait
cmpsb
loopne
dec
cmp
cmp
adc
add
shll
lods
mov
ror
and
add
or
and
cwtl
mov
lds
jg
ss
push
jmp
dec
add
je
incl
loope
adc
outsl
ss
lods
push
stos
testb
inc
or
je
xor
or
mov
test
mov
cmpsb
incl
js
push
push
call
nop
cli
xor
push
daa
loopne
sbbb
and
push
adc
aam
out
adc
fldenv
enter
ret
fwait
jp
outsl
xchg
adcb
aaa
mov
decb
jl
xor
shl
les
aad
xorb
movsl
xor
sub
add
and
cmp
incl
and
xchg
jb
jo
or
sbb
mov
inc
pushf
xor
test
movsl
push
sub
cld
fwait
lods
fsubrl
xlat
push
push
outsl
ja
stc
movsb
repz
xor
cmp
test
pop
das
jmp
cmpsl
call
xchg
insb
sahf
movsb
out
jp
dec
outsb
test
pushf
sar
xchg
mov
jg
fwait
lahf
xor
xchg
loopne
push
ret
and
orb
pop
or
insl
add
fadd
test
and
jecxz
rorb
clc
jl
imul
sbb
pop
lcall
gs
das
jo
pop
stos
popa
dec
in
pop
dec
aam
dec
and
dec
jl
es
jecxz
mov
or
adc
pushf
fld
xor
in
sti
inc
jns
sbb
add
pop
clc
xchg
in
jl
aam
icebp
fst
pop
or
push
stos
jl
fsubl
cmp
xchg
pop
fisttpll
fcomip
pop
cmp
adc
test
jl
int
xchg
mov
out
add
dec
cmp
rolb
andnps
cmc
adc
adc
and
clc
fcmovnu
and
inc
add
insb
clc
shlb
mov
call
xchg
scas
and
dec
add
xor
lock
pusha
jns
int
jmp
add
lcall
ljmp
popf
movsl
das
lret
fidivrl
add
leave
sti
cwtl
add
call
inc
sarb
test
js
cmpsl
jl
jns
ud0
mov
leave
mov
into
jno
mov
inc
in
xor
jl
les
aaa
pop
out
ds
mov
mov
out
sar
pop
loopne
pop
faddl
inc
fbstp
pop
mov
or
js
ja
mov
adc
enter
push
les
cmp
sbb
scas
dec
pop
xchg
push
cld
call
push
sbb
cs
rorl
imul
push
loope
and
or
mov
inc
push
xorl
out
std
add
jmp
sbb
das
pushf
dec
imul
stc
mov
dec
adc
mov
repnz
sar
inc
mov
xchg
add
mov
or
pop
pop
push
xor
fcomip
hlt
and
mov
mov
add
push
or
ss
xchg
xchg
push
fwait
adc
jno
add
push
sbb
nop
lretw
pusha
loopne
ficompl
push
cmp
or
and
mov
dec
out
xchg
mov
pop
pop
pop
adc
ficoml
or
aaa
jmp
mov
or
mov
sbb
js
mov
mov
stos
clc
mov
mov
sbb
sub
sbb
pop
inc
popa
clc
cmp
cmp
loop
ss
clc
repnz
adc
lock
or
push
testb
xchg
inc
shll
inc
cmp
shrb
scas
adc
hlt
inc
int
in
or
mov
sbbb
push
push
mov
leave
pop
icebp
mov
bound
adc
xlat
xchg
loop
aad
and
adc
js
repnz
pushf
and
cli
adc
movsb
iret
jns
pop
add
and
add
xchg
mov
dec
push
sub
ljmp
ds
adc
icebp
je
pop
std
fwait
cmp
dec
pop
mov
sbb
mov
or
cld
std
push
std
push
scas
dec
fiaddl
scas
mov
or
pop
jle
sbb
notl
cmpsb
in
gs
das
xor
decb
cwtl
adc
jo
movsb
rolb
add
mov
es
jg
mov
dec
cs
adc
mov
fstp
lret
xor
ss
mov
call
aam
pop
scas
cli
ret
call
add
jle
ret
repnz
fstl
je
movsb
lea
ljmp
xor
fsubrp
and
lcall
push
push
dec
mov
dec
add
loop
sbb
stc
add
add
std
and
lock
jg
js
fucomip
mov
push
popa
sbb
aam
into
inc
mov
mov
sbb
ljmp
mov
daa
sub
jmp
dec
jne
rcrl
in
aas
adc
out
addb
mov
sbb
shlb
push
lahf
jle
add
les
pop
xchg
and
addl
pop
fs
enter
dec
clc
xchg
aam
jl
mov
stos
clc
pop
test
sbb
pusha
stos
jecxz
push
jno
fistpl
xor
ljmp
fidivrl
push
mov
mov
xchg
fsubl
faddp
dec
mov
pop
jmp
out
clc
fimuls
push
jecxz
lret
pop
insb
adc
sbb
mov
aas
ret
pop
js
test
cli
or
jo
outsb
cmp
inc
mov
pusha
lret
inc
popf
sbb
or
pushl
or
aaa
cltd
and
dec
xchg
orl
iret
mov
jbe
scas
out
fists
subl
jmp
rcl
push
rolb
pop
and
mov
add
cs
imull
jmp
xor
push
mov
movsb
outsl
pusha
xchg
popf
push
fs
inc
mov
nop
pop
dec
jmp
push
sub
add
push
std
ficoml
mov
add
ljmp
push
pop
pop
scas
and
mov
clc
add
mov
dec
cmc
cli
aas
inc
fldenv
push
pop
cmp
lret
dec
insb
lock
pop
mov
aam
jo
sub
sbb
cmc
jg
push
pop
ficomps
jno
movsl
xor
ljmp
push
sub
mov
mov
mov
mov
outsl
xchg
aaa
adc
sub
xchg
cmp
jl
xor
in
lock
or
jle
mov
mov
ret
mov
mov
icebp
push
mov
jnp
shrl
mov
cmpsb
mov
inc
aad
sbb
scas
jecxz
testb
popa
xchg
loopne
stos
inc
es
mov
or
adc
sub
mov
jg
pop
hlt
aad
mov
xchg
movsl
add
mov
out
shll
push
pusha
je
nop
jg
ljmp
push
jp
push
push
fidivrs
add
jmp
lods
cwtl
lods
in
mov
cmp
xchg
out
les
cmp
call
rclb
inc
xchg
test
enter
pop
mov
pop
std
test
ret
add
sub
mov
imul
sbb
adc
aad
js
jno
stc
push
rcrl
jge
pop
push
incl
xchg
enter
scas
pop
mov
push
xchg
jp
daa
pop
mov
adc
xchg
loopne
and
or
ljmp
jp
mov
cld
mov
movsb
mov
in
adc
je
sub
aam
fs
push
lcall
mov
cmp
dec
jmp
out
fstpl
jb
sar
mov
inc
add
or
mov
sub
jle
jl
cltd
jmp
or
stos
inc
dec
pusha
or
add
push
mov
popf
pop
movsb
test
mov
push
push
testb
mov
mov
pushf
sub
pop
loope
fcmovu
or
test
mov
loope
jecxz
xor
call
lcall
cmp
fisttpl
adc
push
pop
cmp
xchg
jb
sub
test
xorb
add
adc
decl
std
and
dec
mov
je
jp
sub
adc
lret
cmp
incl
xor
repz
scas
mov
int
lret
test
js
arpl
ja
or
scas
adc
repnz
sbb
fwait
cmpb
rorb
mov
fmuls
aam
hlt
inc
in
pushl
push
enter
fstl
sarl
mov
scas
decl
mov
lcall
jne
lods
push
ret
pop
adc
gs
fs
jg
stos
in
jae
add
xchg
jo
mov
mov
add
mov
sub
inc
mov
clc
mov
das
arpl
adc
add
mov
frstor
jle
cli
mov
ljmp
dec
lcall
xchg
rcll
lcall
testl
jle
jo
stos
or
rcrl
enter
mov
call
xor
outsb
sti
test
subl
jmp
push
pop
add
fisubrl
ret
adc
js
jo
sub
mov
call
decb
fimull
mov
inc
pop
dec
mov
sarl
aaa
cld
pushl
add
mov
scas
pop
push
inc
jl
nop
scas
mov
cli
push
test
jo
push
mov
outsl
xor
mov
or
fs
imul
lret
xor
ja
add
fiadds
sub
add
mov
out
pop
icebp
inc
loop
sbb
push
mov
in
adc
and
jns
aaa
cld
outsl
mov
jle
push
push
outsb
push
jl
cwtl
cmpsb
pop
mov
adc
je
test
cmpsb
stc
fidivrl
push
xchg
dec
inc
sub
mov
vmsave
jo
and
add
scas
out
arpl
mov
mov
push
pop
in
push
call
inc
mov
jg
fbld
cwtl
cld
icebp
cmp
imul
push
insb
dec
clc
jmp
inc
pop
fsubl
mov
loopne
mov
pop
xor
jp
mov
add
sbb
data16
jmp
mov
cli
xchg
add
and
repnz
mov
xlat
push
inc
sbb
pop
jmp
xchg
mov
daa
xchg
xchg
mov
outsl
mov
out
out
xchg
in
lret
mov
pop
xor
pop
addb
mov
push
xchg
lret
mov
mov
inc
add
pop
movsl
mov
lcall
mov
sub
sbb
and
and
stos
push
pop
in
or
and
js
out
insl
sbb
jge
pusha
call
jno
push
cmp
or
mov
push
cld
pop
loopne
xor
cld
pusha
inc
ss
sub
mov
jmp
jbe
ds
stos
mov
xor
cmp
inc
fdivrl
inc
add
adcl
push
push
imul
or
pop
popa
loop
adc
int3
ss
out
mov
sbb
or
adcl
fs
ljmp
mov
jg
int3
test
jb
jns
xor
mov
enter
adc
lret
fs
add
movsb
stos
outsb
rolb
repnz
rcl
or
call
iret
push
jmp
les
pop
je
test
sub
clc
iret
push
push
mov
jb
enter
sub
jp
mov
dec
shr
or
add
cli
mov
or
cmpsl
and
pop
cmp
and
inc
enter
add
jmp
incl
add
daa
jns
in
mov
adc
test
hlt
mov
jg
add
xchg
push
decb
push
lods
and
xchg
cld
dec
loopne
add
pop
cld
test
scas
fidivrl
push
sub
xchg
sub
movsb
jb
sub
cmp
arpl
scas
mov
mov
in
in
mov
outsb
sub
push
add
mov
dec
cli
cmpb
rol
xor
inc
hlt
fcomi
dec
mov
adc
dec
xchg
fwait
mov
ret
in
testb
sahf
and
add
sub
loopne
movsl
fwait
lock
push
or
add
fstl
or
fsub
add
add
paddsw
les
sbb
movsl
inc
lock
fbstp
inc
cmp
or
sbb
rclb
repz
movsb
push
cld
lcall
adc
jmp
cwtl
xchg
cmp
add
jg
pop
mov
dec
cmpsb
shrb
adc
cmc
mov
sti
mov
or
je
push
std
incl
pop
rsqrtps
or
ror
imul
mov
and
aaa
cld
dec
loop
sbb
es
ljmp
aaa
adc
mov
hlt
icebp
add
fldenv
mov
dec
mov
and
out
or
js
ds
jl
nop
clc
or
cmp
adc
mov
push
xchg
je
mov
push
icebp
hlt
incl
call
jb
movswl
or
movb
sub
lods
movsl
pusha
popa
mov
sar
push
push
mov
cwtl
js
ja
xchg
and
or
push
fldt
ljmp
ss
mov
out
adc
cmc
jg
loopne
daa
xor
rorl
adc
test
mov
outsl
call
mov
in
shll
xor
sbb
inc
fiaddl
sub
dec
inc
ljmp
mov
jae
outsl
cmp
das
xor
sub
dec
icebp
adc
cmpsl
mov
in
lcall
movsb
mov
lods
repnz
lret
push
push
cld
xor
pop
sub
lret
clc
fcoml
mov
jmp
test
xchg
add
pop
loope
pop
pop
pop
mov
inc
rorl
xchg
inc
lret
cli
fsubrl
mov
inc
pop
aam
insl
adc
jge
push
add
stos
sub
outsb
mov
jnp
dec
mov
jg
mov
xchg
cmp
movsl
mov
xchg
push
addb
imul
xchg
mov
cltd
fcmove
cmpsl
sbb
pusha
inc
xor
in
mov
mov
sahf
xor
jmp
das
test
mov
insb
lea
mov
jmp
push
in
push
ret
or
fldl
rol
rorl
fisttps
cli
pop
cmpsb
push
adc
jecxz
imul
pop
dec
add
bound
add
and
loopne
pushl
or
add
and
jnp
je
push
fisttps
jle
mov
add
add
popf
pop
insl
mov
add
or
push
mov
lds
pusha
or
pop
dec
test
fcomps
sar
xchg
mov
js
sub
mov
xlat
test
and
adc
repnz
out
mov
hlt
fbstp
xor
sub
je
cltd
imul
jmp
mov
add
jnp
lahf
dec
adc
or
and
mov
js
jecxz
enter
stos
stc
mov
push
xor
clc
dec
enter
push
ljmp
ss
sbb
push
scas
iret
fs
push
add
ja
pop
push
pop
fsubs
sub
xor
mov
cli
mov
test
test
jle
add
orb
mov
aaa
das
jbe
aaa
cld
pop
mov
lock
sbb
mov
repnz
scas
pop
mulb
lods
sti
fwait
cld
and
add
dec
aaa
hlt
dec
daa
or
mov
add
sbb
or
push
lock
push
sub
jge
dec
mov
add
xchg
xchg
ds
mov
stos
jo
loope
or
sahf
inc
sbb
aad
mov
shl
jb
or
shrb
dec
mov
pop
push
jns
cld
mov
or
sub
ret
cmpl
fs
loopne
pop
cmp
inc
push
rcrb
xor
inc
xchg
xor
mov
pop
xchg
push
pusha
fadd
fcomps
icebp
imul
lea
fsubl
xchg
gs
outsb
cmp
sbb
ljmp
int3
cli
loop
pop
jmp
xchg
jge
and
push
decb
lahf
ss
mov
je
addr16
mov
jecxz
add
enter
lock
stos
jb
in
outsb
ljmp
shll
ljmp
cmpsl
gs
mov
pop
clc
aam
sbb
xor
push
ja
push
sub
mov
sub
clc
push
jbe
push
movsb
or
push
fidivl
jnp
or
jne
scas
jle
subb
dec
movups
out
out
out
lcall
je
fisubrs
dec
cmp
dec
das
add
aaa
lods
mov
pop
pop
cld
jmp
dec
jl
pop
rol
jg
int3
mov
inc
add
dec
jne
insb
xchg
popf
fbld
mov
mov
lds
shlb
mov
divl
lock
pop
xor
cmp
inc
stos
pusha
push
std
adc
lock
jne
test
fisttpl
shlb
jmp
jecxz
cmp
pop
hlt
mov
dec
cmp
pushf
or
push
adc
push
lret
push
and
mov
mov
ljmp
push
adc
jmp
repnz
lds
add
ds
cmpl
jne
mov
dec
test
fiaddl
push
int3
ret
mov
aad
ds
dec
test
xchg
fisubrl
stos
push
or
scas
outsl
or
testb
test
mov
leave
and
rol
rcrb
lods
call
ljmp
or
push
adc
mov
push
and
mov
lret
outsb
daa
pushl
jmp
mov
add
sbb
sarl
xchg
rolb
or
icebp
lock
add
add
dec
mov
faddl
in
inc
mov
dec
mov
in
dec
decl
sub
insl
sub
push
test
add
or
imul
mov
jle
mov
jp
insb
xor
mov
fsubl
repnz
scas
sbb
xor
test
pushl
mov
lcall
mov
dec
notl
sarb
fdivrp
mov
or
cmovae
or
cli
ds
adc
xchg
mov
push
aaa
and
les
xchg
in
fisttpl
xchg
sub
push
push
in
sbb
ljmp
xchg
insb
mov
push
mov
out
clc
push
add
xchg
in
pushf
or
sbb
lds
pop
fnstenv
push
push
jbe
sahf
jl
xor
mov
imul
adc
sub
fldenv
call
popa
xchg
add
sbb
add
mov
cmc
loope
xchg
sub
in
aad
pop
inc
rclb
cmpb
popa
adc
lret
xchg
jae
mov
movsb
and
mov
add
out
ficompl
fs
add
push
scas
mov
mov
jne
cmpsb
lock
or
stos
push
add
jne
add
and
adc
mov
mov
inc
cmp
jg
mov
xchg
jl
cs
adc
arpl
lods
std
mov
push
repnz
mov
push
adc
fadd
sbb
push
mov
cmp
lahf
scas
cmpsb
pop
push
sub
lods
mov
cmpl
or
call
or
mov
in
mov
xlat
aam
xor
insb
iret
sarl
out
xlat
out
bound
sar
sarl
push
xchg
clc
add
stos
push
push
inc
and
or
dec
call
gs
fnstenv
sbb
outsb
ljmp
adc
adc
cmc
incl
sub
sbb
xor
fwait
sub
ret
cmc
pop
std
mov
cs
lret
dec
mov
mov
mov
rolb
mov
ljmp
mov
test
and
push
mov
outsb
lret
mov
inc
dec
mov
dec
je
mov
lahf
inc
enter
pop
add
mov
add
fstps
ret
ljmp
loopne
test
push
loop
dec
adc
pop
mov
xor
lret
lock
push
pop
pop
into
mov
movsl
sub
mov
push
ret
jbe
jb
inc
mov
es
xor
rcr
ret
pop
ljmp
or
hlt
dec
mov
xor
dec
fdivp
add
mov
adc
pop
hlt
xor
xor
or
adc
xchg
or
incl
and
push
add
cmp
add
scas
mov
aas
jo
fdiv
jbe
cmpsb
mov
imul
push
imul
inc
mov
sub
mov
cmp
jb
and
mov
inc
push
mov
repz
mov
nop
jne
adc
pop
adc
in
mov
jmp
js
inc
pop
jmp
fsubr
push
xor
pop
dec
lea
inc
insl
and
lcall
mov
adc
adc
int3
add
push
test
test
shll
rclb
jne
cwtl
jbe
scas
dec
sbb
adc
or
stos
add
outsb
or
cltd
xor
pop
icebp
adc
call
cmp
jne
cmp
adc
xor
jge
test
sub
lret
pop
mov
stos
jecxz
dec
inc
stc
xor
or
xor
aaa
lods
loopne
jle
movsb
call
out
aad
cltd
inc
adc
fnstcw
cmp
mov
test
push
imul
popa
push
pusha
sbb
popf
outsl
into
hlt
jg
stos
dec
and
out
xchg
test
pop
iret
push
orl
pop
jge
ljmp
mov
hlt
shlb
fisubrl
push
push
sub
stos
cmc
rcr
inc
xchg
inc
mov
mov
or
clc
xchg
lds
je
hlt
inc
andl
lret
cmp
aad
cli
or
jmp
xchg
or
clc
fcomip
fisttpll
and
les
ljmp
and
dec
and
mov
sbb
sbb
js
push
lods
jl
pop
sbb
inc
in
jg
scas
mov
stos
mov
push
mov
call
pop
mov
or
sahf
loop
mov
stos
mov
clc
ja
sarl
cmc
xor
out
jne
outsb
or
sub
sbb
push
pop
pushl
add
add
cmp
aaa
jl
sbbb
data16
test
push
mov
hlt
int
filds
and
mov
or
dec
mov
sbb
imull
push
pop
movsb
mov
fisubrl
inc
movaps
mov
cmp
cmp
pusha
repnz
add
mov
cmp
pushf
mov
pop
adcb
dec
push
jo
add
repnz
popa
loopne
and
bound
je
xchg
jmp
mov
xor
aam
xor
xor
add
dec
mov
sbb
inc
and
and
push
jl
mov
test
inc
retw
out
fistps
clc
pop
inc
or
xor
mov
push
and
adc
pushf
pop
cmp
push
mov
imul
or
cmp
inc
lahf
inc
mov
mov
sahf
or
loop
test
sub
adc
adc
daa
or
adc
cmp
jnp
hlt
pop
ss
jmp
mov
jb,pn
movl
outsl
fbstp
lahf
mov
sarb
pusha
jns
or
add
testb
push
in
dec
add
add
loope
fidivs
fisubl
mov
stos
sub
adc
mov
xchg
inc
push
cmc
jo
inc
mov
push
sbbb
mov
nop
xchg
jmp
icebp
iret
bound
daa
fsubl
and
divb
fs
fsubrs
jbe
mov
and
push
movsb
sub
dec
mov
enter
push
cmp
int3
mov
jge
out
sub
lods
mov
fldcw
inc
inc
inc
pop
fcoms
loop
dec
ret
loop
cld
decl
add
and
push
imulb
lcall
ljmp
adc
push
loop
jb
mov
leave
ficompl
xor
pop
pop
push
je
insb
mov
inc
inc
jns
pop
movsb
js
xchg
in
inc
mov
test
fbld
gs
roll
popf
add
test
rorl
and
lcall
adc
cmp
xor
mov
pusha
filds
outsb
mov
mov
scas
aaa
jae
add
ficomps
or
ss
sti
jg
cmp
aam
ret
jo
pop
les
fs
push
stc
sbb
lods
cwtl
add
arpl
fistpll
inc
test
dec
adc
pop
push
enter
sbb
or
test
ret
leave
sarl
pusha
inc
dec
pushl
pop
std
out
inc
and
pop
ds
push
dec
jl
jmp
mov
or
cmpsl
mov
cmp
inc
mov
push
lcall
xchg
pushl
in
and
jbe
test
in
addb
in
dec
push
lock
mov
add
cmpsl
nop
mov
xorl
pop
inc
hlt
scas
ja
mov
sub
sbb
and
ljmp
push
adcb
cwtl
repz
sbb
mov
inc
pusha
or
jl
push
lock
sarl
mov
cmp
leave
mov
push
sbb
mov
jo
mov
inc
pop
jnp
mov
jmp
scas
cmp
xor
mov
adc
sbb
dec
inc
jle
xchg
mov
cwtl
icebp
mov
pop
xchg
push
test
sub
mov
jp
mov
aaa
xchg
mov
lret
sbb
repz
testb
mov
rolb
fs
jbe
add
xchg
sub
xor
mov
sbbb
lcall
aaa
or
dec
add
mov
sub
adc
mov
sbb
std
lret
inc
adc
out
outsb
add
mov
or
aas
out
js
ficomps
cli
push
adc
jl
mov
in
inc
inc
int3
add
fiadds
mov
ret
cmp
ljmp
jns
pop
add
test
popa
push
or
gs
cld
adc
dec
stos
lods
inc
enter
cmpb
mov
js
mov
insb
aaa
adc
push
push
jne
es
sub
xchg
inc
jecxz
into
pushf
shrb
and
push
mov
add
jo
hlt
add
imul
xor
mov
hlt
or
icebp
jmp
insb
fnstsw
jecxz
cmp
lret
xor
push
inc
fbld
and
pusha
cli
gs
cli
mov
mov
xor
mov
xchg
dec
cmpsb
inc
out
inc
fbstp
push
mov
push
or
subb
cmpsb
mov
cwtl
cmpsl
add
ljmp
dec
outsb
cld
cmpsb
jae
data16
inc
bound
sub
hlt
pop
adc
jp
dec
adc
mov
jge
dec
dec
and
mov
inc
jb
push
rcrb
sbb
push
mov
xor
mov
or
xor
lcall
int
jl
cmp
or
mov
mov
adc
xor
js
mov
lods
sbb
sbb
ss
scas
in
mov
repnz
mov
and
push
fisttpll
sub
movsl
loopne
add
add
xchg
mov
inc
sub
loopne
pop
in
es
mov
mov
in
jb
je
mov
filds
inc
divb
fs
lcall
je
movsl
addb
lcall
addl
push
addl
or
in
ret
mov
mov
and
xchg
loopne
jne
mov
push
cmpl
cmc
or
xchg
jge
add
inc
icebp
xlat
cmp
adc
sbb
inc
outsb
xchg
pop
xor
mov
mov
pop
xchg
mov
cmp
daa
mov
pop
inc
push
add
add
fdivs
movsl
test
dec
loopne
sbb
push
ss
lock
or
inc
adc
out
stc
out
sbb
fwait
in
xor
cmc
lods
pushf
test
cmc
cli
lret
and
je
or
cmp
pop
dec
inc
pop
das
iret
push
mov
cli
push
iret
and
lods
mov
pop
inc
lds
icebp
pop
mov
lea
jg
and
sub
aam
adc
mov
js
mov
mov
adc
stc
xor
xor
stc
mov
and
out
dec
or
lcall
cmc
scas
cmp
push
mov
add
and
out
mov
adc
sbb
je
enter
xchg
test
mov
add
add
aam
pop
jp
sbb
adc
decl
test
mov
aam
mov
mov
fimuls
in
pusha
hlt
test
jecxz
jb
rorb
sbb
adc
sub
stos
stos
mov
push
add
sbb
ret
jle
pop
mov
mov
or
scas
sbb
push
cmp
sbb
lcall
pop
or
rolb
sbb
sub
cld
jle
push
inc
pop
dec
imul
gs
mov
sbb
push
mov
jns
add
mov
mov
or
dec
cmp
xlat
and
lret
dec
adc
push
fs
cmc
jecxz
clc
hlt
lods
mov
aaa
add
sub
cld
pop
mov
adc
scas
addr16
add
sbb
or
sbb
pushl
mov
ficoml
adc
rorl
xor
add
std
jle,pt
inc
fcomps
scas
loopne
cltd
filds
mov
sbb
rcr
mov
daa
xchg
sub
icebp
xchg
vxorps
stc
stos
in
mov
sub
dec
jnp
add
in
mov
dec
and
inc
xchg
mov
mov
or
rdmsr
mov
sti
jb
jp
mov
dec
enter
scas
fdiv
push
inc
ret
idiv
imul
andl
popf
loope
cmpsl
xor
ss
loopne
das
mov
pop
js
js
mov
lods
scas
and
pop
fistpl
loope
push
cwtl
imul
out
add
add
rorl
pop
sbb
add
or
push
mov
inc
inc
in
outsb
insb
out
adc
adc
mov
insb
daa
bound
or
jge
out
inc
fdiv
jg
and
and
pusha
pop
xor
mov
sub
daa
jae
jp
mov
adc
lahf
fwait
push
shlb
rcl
call
add
cld
das
dec
lea
loop
sub
pop
push
fdiv
jmp
rcrl
push
ds
lea
stos
clc
cmp
decl
mov
ss
pop
jnp
cmp
push
jp
subb
push
cld
and
jg
jo
jp
dec
mov
ds
shr
ret
fidivs
add
sbb
pop
xor
xchg
adc
jg
inc
clc
dec
in
stc
and
inc
es
ds
clc
pushf
xor
mov
cld
test
xor
inc
or
cmp
repz
pop
sub
ret
fwait
mov
sub
orb
lea
push
push
mov
das
test
repz
test
adc
iret
push
stos
nop
jg
mov
fidivrs
push
mov
push
mov
rolb
hlt
jl
push
cld
scas
ret
jae
sar
adc
jmp
sarb
pop
jo
orb
add
sbb
test
bound
cmpsl
mov
notb
aam
mov
mov
jmp
push
movsl
dec
outsl
mov
les
shrl
adc
clc
pop
lods
ficoms
jmp
xchg
ret
jl
jp
pop
test
push
sub
mov
jb
test
imul
jecxz
jp
scas
shrl
pop
in
leave
out
add
push
dec
pop
lods
rcrb
xor
cld
clc
mov
out
mov
cmp
push
push
data16
cmp
push
andl
stos
xchg
add
out
fdivs
cld
jg
fs
xor
ret
add
pop
iret
adc
cmp
sub
popf
cmp
cmp
fs
and
ja
call
rcll
clc
popf
adc
and
test
and
and
enter
fcoml
ja
movsb
nop
clc
push
push
fsubrs
lcall
inc
ja
mov
lcall
pop
cmp
xchg
and
iret
cli
ucomiss
int
mov
push
pushl
sbb
outsl
xchg
and
pop
mov
sub
cli
push
adc
fdivrs
mov
idivb
cmp
lret
xchg
sub
outsb
mov
adc
inc
stos
dec
lods
push
cld
std
cmp
cmpsl
imul
mov
imul
mov
out
decl
cld
call
xchg
push
push
xchg
push
js
lret
sbb
movsl
lods
les
insb
std
out
mov
mov
shl
idiv
sbb
pushf
leave
aas
xor
xchg
lds
sub
or
cli
or
loopne
mov
fs
daa
iret
aas
cmpsb
movsb
addl
mov
stos
jge
or
leave
cli
ljmp
push
je
mov
sub
xor
cwtl
pop
popa
into
jmp
dec
pop
add
ds
ljmp
adc
ficoml
testb
sbb
mov
aam
pop
decl
pushf
mov
adc
xchg
or
and
mov
jmp
xchg
mov
fwait
icebp
aam
jg
sub
and
mov
mov
ret
test
add
and
or
mov
push
call
or
les
popa
inc
clc
nop
lret
add
push
mov
dec
cli
loop
addl
fs
subl
pop
cmc
push
jg
and
inc
ret
dec
cs
dec
cld
outsl
xor
sub
pop
movsb
xchg
fists
inc
mov
inc
adcl
dec
pop
cli
pop
add
dec
fstpl
jp
add
jecxz
pusha
jmp
or
sub
lock
lret
jmp
sbb
push
outsb
or
jge
popa
pop
adc
lods
mov
mov
or
mov
adc
lds
fcomps
lcall
cmp
ss
adc
pop
jl
shll
jle
sbb
out
int
add
lock
pusha
jle
add
xlat
test
jg
xchg
push
inc
jo
mov
mov
gs
add
mov
dec
inc
ljmp
mov
sbb
sbb
mov
and
sub
add
fs
in
cmp
outsb
jb
jecxz
add
call
pop
adc
mov
dec
loope
hlt
sahf
pop
mov
jbe
sub
push
jmp
fdiv
cmc
mov
mov
outsl
mov
mov
pusha
popa
sbb
adc
pop
clc
sub
dec
ss
std
sbb
adcb
cli
sti
ja
add
ja
ret
roll
xchg
xchg
ret
jp
pop
push
stc
jle
cld
adc
cli
and
mov
nop
add
push
xlat
push
rcl
jae
cwtl
mov
xchg
outsl
fs
sbb
and
in
add
mov
xlat
xchg
push
mov
pushf
sbb
xchg
push
add
mov
mov
clc
pop
icebp
add
es
addr16
es
mov
sti
inc
fidivrs
adc
sti
cmc
incl
mov
add
fldl
call
add
adc
out
mov
adc
aam
das
lret
jle
jne
mov
mov
nop
pop
xor
and
ljmp
jg
jecxz
xchg
or
or
pop
lock
out
mov
cmp
add
hlt
test
lea
push
sarl
es
push
lret
inc
or
test
mov
sub
jle
sbb
daa
xchg
or
sub
inc
mov
mov
aad
in
nop
orl
dec
ljmp
cmpsb
fdivrl
push
cli
add
mov
xchg
cwtl
repz
push
nop
push
push
popa
inc
mov
mov
sbb
and
je
call
fst
inc
lock
and
adc
jecxz
sbb
xlat
mov
push
scas
jb
pop
xchg
jno
mov
ret
lods
sbb
cmp
push
jp
movsb
std
das
clc
xchg
push
inc
aas
ljmp
jnp
aaa
adc
data16
jge
rcrb
xor
mov
shll
ds
stos
adc
fistl
movsl
nop
imul
loopne
add
icebp
xchg
test
pop
push
jno
iret
pop
adc
lock
mov
sbb
mov
sbb
adc
aam
push
pop
hlt
loopne
les
push
into
push
jg
je
insl
adc
test
mov
inc
pop
jmp
inc
cmp
stc
negl
pop
mov
sbb
mov
push
out
divl
jmp
decb
xchg
cs
mov
or
nop
sub
enter
test
sub
pushf
mov
and
add
jo
movsb
pop
lock
push
add
outsl
mov
jno
bound
in
mov
call
ss
cwtl
cli
mov
pushf
xchg
mulb
cmc
sbb
xor
cld
inc
jg
fdivr
fists
xchg
mov
sbb
jb
mov
push
dec
mov
and
push
and
and
rclb
jnp
sub
mov
aaa
pop
gs
mov
inc
das
cli
mov
inc
jl
dec
orl
sbb
push
and
sub
sahf
sub
fwait
xor
mov
add
sbb
insb
movsl
add
scas
outsb
sahf
push
mov
push
pop
mov
pop
xchg
icebp
pop
pop
push
test
fildll
inc
jbe
nop
mov
mov
fwait
or
and
movsl
cld
nop
pop
inc
pop
cli
add
cmpsb
data16
ret
arpl
lods
cld
add
adc
push
sbb
rolb
loopne
sub
mov
mov
shll
clc
add
add
cmp
cmp
cs
xchg
adc
pop
or
jne
stos
xor
loopne
sbb
xor
movsb
insl
clc
idivb
xchg
adc
aad
xchg
loope
xchg
test
jno
call
inc
adcb
cwtl
lahf
ds
inc
bound
mov
out
gs
dec
mov
repz
jg
aas
or
ret
into
mov
stos
cli
out
outsb
sbb
xor
scas
push
out
xchg
roll
inc
movsl
add
pusha
adc
ja
mov
ret
std
add
xor
repnz
inc
jp
sub
arpl
loop
mov
or
pop
ret
cmpsb
std
pushf
xor
cmc
add
cs
dec
lea
cmc
out
test
scas
notb
mov
pop
daa
rcll
pop
pop
mov
inc
scas
pushf
lret
and
shlb
pop
inc
idiv
push
rcrb
adc
sub
add
push
movsl
lock
push
rorl
push
or
clc
xor
ss
push
in
int3
or
push
clc
or
shl
push
lcall
dec
mov
divl
xchg
mov
in
mov
repnz
cmpsl
lods
scas
mov
ds
push
pop
pop
add
insl
fmuls
sarl
mov
lods
xor
pop
out
xchg
push
je
push
call
js
xchg
mov
jg
loope
shlb
es
pop
shll
aas
repz
and
fwait
mov
sub
push
inc
jge
testl
and
fs
xchg
ds
nop
add
push
addb
test
sub
dec
or
and
fisubl
int3
mov
pop
ret
and
mov
jo
xor
cmp
addr16
xchg
fidivs
test
adc
add
les
out
popl
lds
dec
popa
adc
fstpt
push
jl
js
pop
or
movsl
xor
mov
inc
cmp
ss
inc
pop
shl
cmp
push
mov
mov
inc
hlt
and
sub
or
lea
lret
sbbl
rolb
mov
icebp
cmpsb
adc
mul
and
lahf
mov
mov
fdivrs
and
dec
icebp
pop
adc
jecxz
adc
xor
sarl
out
and
xor
push
push
mov
mov
das
pop
insb
jl
imul
jg
gs
push
xchg
xor
test
inc
dec
jb
nop
fldcw
mov
test
loop
xchg
call
sub
clc
cli
sti
and
or
icebp
imul
fisubrl
loopne,pt
or
adc
pop
pop
xor
jno
fmuls
inc
bndldx
ret
cli
add
xor
sbb
test
scas
xchg
pop
adc
ljmp
sub
daa
test
ret
add
andl
add
jecxz
mov
popa
add
mov
loopne
jmp
and
push
pop
cmpl
pop
pop
rolb
cmp
jo
dec
push
test
inc
fdivrp
call
shrl
mov
fdivr
sub
les
jge
outsb
mov
es
sahf
add
aad
xor
adc
xor
mov
pop
out
push
gs
lea
lcall
sahf
dec
cwtl
lcall
inc
out
aam
sbb
inc
mov
vpcmpgtd
jb
push
inc
filds
je
inc
jo
cwtl
jg
bound
sahf
jg
add
out
pushf
pop
mov
jne
or
call
stc
and
dec
aaa
cmp
scas
xchg
push
add
cmpsb
les
int
testb
enter
es
jo
cwtl
and
fnstsw
mov
pushl
int
bound
xor
and
jo
cmp
push
imul
cmp
mov
mov
push
test
cmp
test
fisttpl
lds
orl
push
dec
and
jge
sarb
sbb
incl
push
es
jo
mov
sarl
je
pusha
jl
jb
sbb
mov
inc
leave
jg
push
test
adc
ret
test
add
mov
pop
push
pop
std
jo
sub
mov
or
out
rcrl
adc
and
stc
sbb
or
mov
inc
mov
add
add
add
pop
mov
inc
fwait
stos
mov
shrb
ffreep
test
repnz
dec
cmp
push
push
lock
mov
cmc
outsl
sar
lcall
je
xchg
xchg
sub
repz
in
sbb
into
scas
nop
icebp
jmp
or
push
popf
mov
or
enter
decl
mov
stos
push
adc
or
xchg
jbe
xor
test
aad
int3
push
jle
jg
xchg
sbb
outsb
inc
in
icebp
cli
jmp
push
ret
cmp
push
shrb
stc
les
mov
hlt
mov
dec
out
fxam
xor
fsubrs
mov
outsb
jge
mov
test
hlt
ljmp
popa
cmp
jg
push
sub
push
les
push
and
movb
mov
lods
das
ficoml
cwtl
dec
test
in
cli
lock
stos
add
dec
jbe
and
insl
orb
aad
mov
add
adc
sahf
movsb
pusha
insl
lahf
add
add
movsb
dec
pop
movsb
adc
sti
pop
cmpsb
dec
dec
jo
lock
movsb
xchg
cs
je
and
mov
jbe
dec
xor
lock
xchg
icebp
inc
adc
xchg
roll
inc
subl
inc
and
lock
sub
sar
xor
xor
cld
add
mov
sub
push
xchg
inc
adc
outsl
mov
inc
push
shlb
out
fdivl
popa
inc
lret
push
inc
outsb
popf
insb
lcall
cwtl
xor
lcall
dec
jle
out
mov
es
aaa
push
je
divb
stos
xchg
pop
mov
inc
adc
dec
jbe
pop
roll
aas
outsl
pushf
add
nop
in
roll
popf
push
push
int
das
fcoms
sbb
int3
xchg
sbb
add
loopne
pop
mov
cmpb
dec
cmp
mov
in
popf
cs
ljmp
inc
loope
dec
sub
mov
inc
or
push
sbbl
jmp
adcb
inc
mov
sub
xchg
inc
push
mov
mov
subb
push
xchg
jg
cmc
incl
push
das
push
mov
push
pop
cmp
mov
es
dec
mov
mov
inc
aad
roll
push
inc
enter
and
and
adc
jecxz
dec
cmp
lods
insl
mov
fdivs
in
cs
fdivrs
push
dec
sub
subl
inc
jb
cmpsb
or
mov
and
inc
inc
mov
lret
leave
cmpsb
ret
lea
mov
push
in
mov
dec
or
jle
mov
adc
aaa
loope
arpl
sahf
mov
cmp
dec
or
neg
cmp
xor
push
shlb
inc
push
les
pop
add
ficoml
jp
mov
call
push
shr
fs
sti
push
inc
nopl
mov
mov
lock
call
aas
cmp
pop
inc
mov
add
in
add
and
into
sub
decl
sub
xor
add
mov
clc
aaa
add
ret
or
xor
mov
cmp
mov
icebp
sub
out
hlt
inc
nop
adc
pop
pushl
mov
push
and
push
sbb
pop
call
call
inc
mov
mov
mov
pop
cmc
ljmp
idiv
fisttps
and
addr16
movsb
les
mov
rolb
jg
and
add
scas
jecxz
stc
daa
xor
sub
jg
fsin
cmp
in
mov
push
lcall
jbe
or
push
dec
or
adc
in
std
inc
std
not
push
insb
push
nop
movsl
pop
icebp
leave
fs
lcall
mov
sub
movsl
dec
mov
ficompl
and
cltd
inc
adc
incl
adc
in
dec
jno
mov
call
pop
std
push
mov
pop
mov
aas
outsb
in
test
shl
insb
dec
lods
cli
mov
dec
add
cwtl
sbb
mov
loope
outsl
pop
imul
push
mov
add
mov
cmp
lods
cmp
push
jmp
pop
jg
clc
xchg
cltd
nop
cwtl
xor
rorb
cwtl
sub
ficoml
add
ret
push
mov
stos
out
jmp
jnp
pop
loopne
ret
add
push
sbb
push
popa
or
test
movsb
neg
hlt
call
push
sub
mov
mov
and
xchg
stc
testb
pushl
mov
fadd
enter
mov
adc
fstpl
mov
add
sbb
inc
imul
cmpsl
mov
xchg
fcmovu
mov
loopne
pushf
push
jo
push
ret
jg
rolb
data16
or
fwait
incb
jl
call
sarb
jns
inc
dec
ds
clc
jg
or
cmp
inc
mov
pop
jmp
dec
insb
xchg
fdivrl
sbbl
sub
lods
jnp
add
push
inc
pop
push
fisubrs
stc
jmp
aas
jge
cld
cli
xchg
nop
push
sbb
pop
ds
mov
or
ja
ret
fdiv
or
push
jne
mov
scas
bound
lods
call
cli
outsb
scas
pop
hlt
stos
dec
loop
xor
mov
lret
xchg
ds
dec
mov
pushl
mov
fnsaves
or
in
lds
lock
mov
and
sbb
ret
fcompl
addl
call
lret
sbb
jp
xorl
mov
mov
mov
xor
and
push
xor
enter
push
jns
std
addr16
push
mov
add
outsl
outsb
lods
sbb
cmovne
sbbl
mov
mov
adc
int3
adc
das
pop
loopne
or
or
lds
or
rol
in
push
shlb
outsb
jp
mov
in
mov
sub
pop
popa
sub
int
aad
or
mov
leave
xchg
fisttps
movsb
lock
popa
rolb
clc
jg
xchg
xor
mov
pushf
or
cld
or
sbb
mov
aaa
pop
sub
in
push
lea
inc
imul
jmp
scas
mov
or
cmp
flds
pop
dec
aaa
and
imul
or
lea
call
sar
pop
addb
je
out
jns
add
jno
inc
xchg
sbb
int3
insb
push
mov
adc
jo
bound
dec
js
fs
pop
ds
add
adc
scas
mov
cmpb
mov
lret
cmp
lcall
or
add
ret
icebp
rolb
fmull
pop
push
cmpsb
std
add
or
add
std
ret
testb
je
insl
test
cmovp
mov
or
xor
sub
or
popa
fmull
jae
outsb
dec
pop
mov
and
dec
push
add
push
ret
lcall
lods
push
cmc
bound
outsb
icebp
sbb
mov
mov
cmp
mov
scas
cli
dec
and
mov
adc
das
mov
mov
inc
movsb
mov
mov
adc
std
jle
jmp
es
icebp
jnp
inc
sbb
add
dec
movsb
xchg
pop
push
dec
outsb
adc
push
add
push
and
out
scas
cmp
sub
addb
nop
cmp
adc
aas
shrb
stc
mov
je
scas
add
clc
icebp
add
shrl
adc
inc
std
xchg
mov
add
sbb
pop
loop
cs
jno
xor
cltd
fidivs
push
sbb
pop
cmc
cld
mov
jle
sbb
arpl
ret
fnstcw
push
push
ja
popf
stos
add
xchg
dec
decl
mov
loop
mov
lock
mov
out
movhlps
inc
mov
jle
nop
clc
and
repnz
xor
shrl
test
and
mov
push
out
les
stos
sbb
or
cmc
pop
sub
xor
lods
shrb
andl
addr16
pop
pop
mov
xchg
cmpsb
movlhps
aaa
xor
lret
mov
ret
and
push
aad
push
loopne
mov
add
add
inc
inc
or
rol
and
pop
inc
add
sbb
mov
jecxz
nop
and
and
jl
or
dec
add
jb
orb
xchg
pusha
inc
ss
jmp
dec
sub
icebp
add
jle
sbb
test
xchg
mov
pusha
mov
fmuls
xchg
push
add
mov
movb
pop
stc
nop
mov
insb
push
insb
pop
scas
lock
add
data16
in
scas
jb
das
cli
or
sbb
mov
pop
mov
inc
rcll
pushf
rcr
in
xor
jge
pop
or
cmc
pop
cmp
das
xor
mov
imul
scas
dec
adc
int3
push
lds
cld
aas
dec
or
or
jecxz
xor
add
test
les
out
inc
mov
rol
flds
push
testl
test
loope
dec
mov
push
jo
xorb
outsb
test
jl
lock
es
lcall
les
push
mov
jnp
std
aas
cli
jg
inc
lea
arpl
sub
sbb
mov
or
push
dec
lret
push
or
aaa
push
rorb
cld
test
adc
test
ds
cmpsl
fisttpl
and
xorl
mov
je
ss
inc
nop
in
mov
push
and
fiaddl
sbbb
sbbl
xchg
xor
sahf
mov
mov
jle
aaa
jecxz
mov
mulb
ljmp
std
inc
scas
jg
sbb
loope
dec
adc
pop
cmc
adc
cmp
arpl
arpl
dec
jbe
or
or
das
popl
fucom
pop
add
dec
lahf
adc
jle
push
pop
jecxz
inc
mov
or
out
rol
loop
test
jns
adc
jge
shlb
xchg
and
sti
in
or
cmp
pushl
in
shll
out
inc
mov
add
add
cmp
ljmp
iret
stos
cmp
mov
and
pushl
and
sub
pushf
ljmp
orl
add
sub
jle
mov
fdivs
xor
les
unpcklps
lock
in
push
shl
std
fbld
cmc
jp
adc
adc
jg
cmp
cmpsl
outsl
pushf
and
stos
pop
les
xlat
stos
lods
sti
fbld
mov
cmp
lcall
xorl
push
aam
inc
insb
negb
ret
jge
adc
jecxz
cs
ret
shlb
sbb
push
sbb
popa
mov
or
and
inc
sub
mov
jge
dec
and
pop
nop
call
add
std
push
fildll
mov
ja
fdiv
dec
out
mov
sarl
adc
lods
cwtl
mov
mov
push
fs
jb
pusha
sbb
cld
cmpsb
in
mov
jo
push
jmp
loopne
shrb
inc
or
xor
sub
cltd
sbb
cs
test
push
je
and
lock
adc
inc
or
decl
stos
mov
or
inc
sub
inc
push
mov
mov
dec
xchg
insl
push
dec
push
sti
cmpsb
mov
mov
cwtl
dec
dec
or
adc
xchg
data16
mov
mov
mov
mov
mov
shlb
xorb
in
jg
loope
shlb
leave
push
data16
call
dec
jns
or
ljmp
aam
movsb
dec
sbb
push
jo
mov
dec
xor
add
or
fisttpl
insl
adc
les
add
cltd
addr16
jmp
xchg
rolb
test
mov
fists
outsb
or
sub
mov
out
jecxz
mov
push
mov
sub
cs
push
data16
push
push
fsubrl
cli
rcr
test
push
pop
inc
loop
push
jle
cmp
call
incl
cld
cmp
cmp
cmp
cmpsb
and
inc
push
xor
pop
hlt
loope
imul
lods
popa
adc
push
frstor
add
pop
lds
sbb
test
fbld
inc
jp
in
add
lock
out
lcall
cmpsl
hlt
das
jle
test
and
mov
ss
stos
xchg
inc
clc
orb
cmpsl
add
clc
dec
inc
repnz
mov
sub
js
mov
push
inc
mov
adc
or
lret
or
pushf
jl
mov
push
insl
and
aaa
cmpl
ret
clc
mov
mov
aam
je
subb
adc
mov
adc
pop
jp
loopne
pop
push
je
adc
daa
pusha
pop
arpl
and
cmp
pusha
mov
lret
jmp
xchg
insl
bound
rolb
lock
mov
mov
outsb
call
hlt
cmp
cld
lods
inc
lds
pop
pop
xchg
inc
cwtl
xchg
push
jno
mov
push
push
sub
jno
and
sbbb
lcall
out
leave
dec
pop
fldz
push
aas
add
inc
push
stc
sbbb
test
outsb
das
mov
loope
xlat
cltd
sbb
ret
inc
std
imul
xor
data16
jp
and
pusha
es
lret
cmp
pushl
hlt
cld
loop
cmp
or
out
sbb
xor
dec
add
jl
test
jno
std
aaa
or
ja
out
jmp
lods
sarb
es
mov
test
js
iret
and
in
fimuls
out
pop
sub
push
inc
pop
dec
sbbb
ljmp
push
sbb
fcom
icebp
pop
sub
sbb
sub
or
xchg
gs
mov
or
loopne
push
push
lret
dec
cltd
ret
je
test
adc
sub
icebp
ljmp
mov
push
xor
jo
inc
pop
int3
pop
int
sub
mov
jge
out
lock
adcl
dec
mov
adc
outsl
xchg
lock
xchg
fcmovb
call
mov
xor
loope
decl
adc
fcomps
andb
movsb
stos
movnti
sarb
mov
lcall
sub
in
mov
ss
cmp
or
pushl
xchg
jb
int3
adc
jne
scas
insb
push
movsb
notl
mov
cmp
lds
push
lret
js
xchg
outsb
xor
movzbl
jae
push
popf
add
xchg
xchg
sub
push
loopne
popf
dec
in
cwtl
cld
jp
xchg
loope
ss
add
movsl
push
mov
call
fisttps
je
popf
outsb
adc
adc
pop
icebp
leave
repz
rcll
rcll
jb
cld
dec
mov
cmp
push
push
jbe
pop
sbb
dec
mov
or
pushf
movsb
adc
hlt
adc
lcall
push
mov
cmpsl
js
sub
jne
lds
hlt
popa
and
add
jb
cmp
lods
movsb
loope
aas
pop
lods
cmc
add
subl
aad
pop
rorb
cmp
mov
call
shr
cli
and
add
dec
loope
std
add
sbb
pop
aad
adc
mov
mov
mov
pushaw
popa
inc
inc
sti
mov
lock
not
pushl
popa
ret
push
and
popa
rcl
mov
lods
clc
shr
negb
mov
mov
imul
pop
aas
sub
adcb
xchg
mov
or
xorb
aaa
clc
loope
add
loop
adc
pop
ljmp
jae
adc
clc
call
and
cmp
sub
cmpsl
in
pop
push
mov
dec
pusha
add
cltd
subl
and
mov
add
xchg
or
sbb
or
mov
add
cmpsl
dec
push
outsl
mov
jl
add
mov
rorl
inc
clc
mov
xchg
jmp
jns
push
loopne
jmp
roll
mov
and
pusha
mov
push
scas
pop
and
and
lock
and
gs
or
or
into
pop
adc
nop
int
ret
leave
xor
movsb
jecxz
mov
repnz
lcall
mov
mov
out
int
scas
jne
push
add
push
dec
or
clts
std
loope
int
stos
pop
mov
push
xor
in
adc
adc
stc
and
adc
stos
sbb
test
sbb
dec
xor
movsl
lcall
shrb
lret
jbe
adc
mov
je
movd
sbb
cmovnp
sbb
es
addb
mov
mov
xchg
movsb
pusha
cmp
or
xlat
enter
mov
mov
pop
or
aad
shrb
pop
jmp
fs
mov
cmp
adc
nop
fsubs
mov
and
pusha
dec
pusha
leave
ljmp
test
mov
rol
cmp
mov
pushf
int3
jp
xor
loopne
pop
or
pop
push
adc
aam
aad
mov
cmpsb
sbb
cmp
bound
cmc
mov
lods
mov
sbb
xchg
fcmovu
or
test
ror
cmp
add
xchg
push
or
es
cmp
mov
dec
lret
repnz
xor
mov
and
push
add
data16
or
mov
shll
cmc
sub
push
cmp
cli
aaa
push
xor
fildll
cmp
outsl
mov
outsb
cmp
inc
xor
outsb
cld
repz
sti
push
pop
add
lock
xchg
pop
rcrl
shlb
xor
fsubp
mov
lcall
cmp
adc
fwait
adc
test
add
sbb
leave
stos
sbb
push
pusha
dec
icebp
jnp
call
mov
cmp
push
mov
das
ret
mov
ret
in
jl
clc
sub
fldt
iret
orb
or
xor
cmp
mov
add
icebp
add
adc
andb
sub
lock
sbb
fst
xor
imul
jl
dec
jl
cmpsl
jg
dec
mov
cwtl
ret
ss
roll
or
popf
xor
inc
enter
test
pop
cltd
jne
xor
mov
xchg
lcall
jp
adc
mov
mov
ljmp
cmp
pushf
stc
mov
pop
std
inc
insb
xchg
nop
nop
and
cmp
in
shll
daa
js
aad
adc
lahf
cli
mov
pop
add
mov
rolb
repz
sub
push
sub
cmpsb
push
pop
sub
pop
jg
test
xor
sbbb
rorb
imul
je
xchg
xchg
fbld
sbb
repnz
or
mov
clc
pop
inc
sahf
ljmp
mov
test
gs
fnstcw
sbb
cmp
pop
inc
and
add
xor
push
mov
push
dec
cmpsb
mov
icebp
cmovge
inc
std
iret
adc
sbb
clc
lahf
scas
mov
loope
dec
or
push
xchg
fucom
shll
outsl
push
cmp
into
daa
fs
inc
mov
and
fiaddl
scas
ficoml
fwait
bound
push
repnz
lods
add
dec
push
dec
xchg
je
cmpb
push
aas
cmpsl
add
adc
adc
out
int
mov
mov
push
enter
fisubs
idiv
decl
dec
adc
add
cmp
test
or
stos
sub
push
sar
dec
cli
decl
push
nop
or
pop
mov
inc
sarl
sarl
addr16
lcall
cmpb
mov
sub
inc
adc
xor
rcrb
fildll
jecxz
movb
mov
fs
inc
xchg
in
ljmp
cmpsl
cltd
inc
xchg
clc
icebp
push
mov
push
mov
loope
outsb
bound
inc
jo
out
xor
mov
hlt
imul
mov
or
aam
icebp
dec
loop
pop
arpl
sbb
sbb
call
pop
mov
xchg
repz
push
or
bound
cmpsl
pop
adc
inc
hlt
mov
or
add
outsl
lcall
mov
xor
add
inc
dec
cmp
cwtl
or
adc
popa
push
cmp
xor
lods
pop
pop
insb
cmp
mov
subps
scas
sbb
or
jb
mov
aaa
pusha
adc
vmread
fadds
push
pushl
adc
add
inc
gs
xlat
aam
popa
jg
mov
incl
ret
fisubs
adc
push
mov
xor
in
into
xor
arpl
push
mov
aas
stc
mov
push
cwtl
shll
cli
xchg
xchg
mull
leave
cmpsb
loop
repz
add
pushf
pop
jmp
subb
out
iret
data16
pop
test
push
negl
mov
sbb
pop
push
outsl
lret
mov
cli
shlb
jae
je
fwait
enter
or
lods
hlt
in
inc
popf
or
popa
dec
inc
jmp
or
sarl
loop
idiv
mov
xor
out
or
xor
xchg
lret
push
addb
dec
stos
sbbl
pop
sbb
mov
push
mov
clc
fdivrl
add
lret
je
ljmp
sbb
mov
sub
pop
and
and
jg
aam
push
enter
into
pextrw
xchg
ja
add
and
int
shll
mov
xchg
mov
test
sub
xchg
pop
dec
sub
dec
xchg
sti
ja
call
sbb
jl
fimuls
xchg
sbb
stos
jl
js
in
incl
aad
pop
dec
stos
fdivs
pop
mov
jne
adc
adc
cmp
sbb
decb
dec
sahf
ret
add
popa
add
mov
cmp
cltd
addr16
and
lea
jae
mov
pop
ret
ljmp
mov
loopne
adc
jle
es
cmp
jnp
mov
loope
stc
sub
inc
test
scas
adc
std
or
lods
jecxz
mov
loopne
decl
and
stos
pop
push
sbb
rolb
daa
hlt
jge
cmp
enter
inc
insl
clc
mov
mov
jmp
jg
pop
out
insl
in
orl
xchg
cmpsl
sbb
notb
jo
sar
push
bound
mov
sbb
rolb
dec
cltd
in
out
cmc
jne
mov
adc
add
pop
cmp
or
mov
in
add
and
and
mov
push
inc
ljmp
mov
cmp
cmpb
xor
add
out
jp
xor
fcmovb
pop
sub
pop
js
and
call
loope
xor
ret
add
scas
jno
sahf
inc
jo
add
fnstenv
inc
lods
call
xor
pushf
inc
and
ficomps
push
fmuls
push
dec
jl
jg
sarb
jge
jo
out
or
and
enter
mov
push
lods
ror
.byte
stos
decl
div
clc
test
ja
bound
je
jge
cwtl
test
add
pop
pop
pop
ret
and
pop
imul
in
negb
ret
add
adc
or
push
sub
adc
adc
jge
mov
jbe
or
cltd
inc
and
mov
or
adc
inc
adc
or
call
or
inc
adc
adc
adc
and
fcomi
fidivl
and
dec
sbb
adc
outsb
dec
or
add
adc
pop
cmp
or
adc
inc
and
add
insl
mov
adc
and
ss
and
mov
mov
inc
roll
add
addl
mov
subl
dec
jecxz
cwtl
mov
adc
in
jo
pop
orl
and
xchg
test
and
data16
cltd
push
cli
mov
adc
sub
fsubrs
jb
lock
int
or
inc
cwtl
and
jbe
or
in
in
or
imul
mov
test
shlb
aaa
ljmp
xchg
xchg
ficoml
ficompl
xor
adc
dec
add
sahf
fs
and
adc
sbb
stos
test
add
adc
add
test
ret
out
jg
mov
inc
and
adc
and
inc
adc
mov
mov
adc
add
and
inc
inc
and
mov
out
add
nop
cmp
or
and
std
out
adc
add
js
and
or
inc
nop
jnp
fidivrs
and
and
or
and
inc
add
nop
add
jbe
mov
xor
push
adc
add
or
data16
test
data16
sahf
pop
rcrl
inc
and
pop
or
cs
and
es
or
jmp
and
inc
dec
lods
and
pop
and
test
and
and
hlt
mov
adc
sbb
or
cmp
inc
adc
inc
sbb
lods
mov
sbb
inc
dec
inc
mov
insb
pop
je
add
and
mov
scas
xor
add
mov
insb
inc
out
and
rcrb
or
mov
lock
adc
dec
mov
loope
or
les
sub
pop
sub
add
loop
adc
xor
or
sbb
cltd
or
int3
ljmp
ret
ret
call
jb
stos
into
lods
push
pop
and
inc
or
dec
inc
inc
and
cmp
or
sbbl
and
push
pop
cmp
add
and
pusha
in
fwait
ret
mov
and
clc
fs
test
nop
lret
add
or
push
mov
in
ror
pop
out
inc
rorb
shlb
mov
and
into
cmpsb
and
xchg
rorl
add
xor
push
dec
test
addb
pop
rorb
outsb
or
mov
xor
or
out
sbb
xor
add
neg
sti
stc
xor
and
not
add
jmp
not
and
mov
mov
add
flds
sub
int
jmp
cli
adc
or
dec
sti
not
inc
sub
neg
xor
inc
sub
jmp
mov
mov
inc
or
mov
adc
sbb
ret
testb
jb
movsl
mov
repnz
adc
mov
or
mov
icebp
mov
inc
mov
jnp
aas
xlat
sbb
cmp
insb
iret
fldenv
lret
aam
ja
fimuls
insb
lock
cmp
int
jo
fs
lahf
pop
or
mov
add
dec
setle
mov
out
sbb
mov
lret
cltd
outsl
lahf
mov
mov
test
adc
fnsave
xor
stos
jmp
push
and
pusha
cmpb
daa
xor
sti
and
ficomps
sbb
fcomp
or
dec
inc
cmp
lahf
addl
incb
jne
ret
push
mov
add
movl
fs
mov
icebp
xor
rorb
mov
dec
sbb
inc
cmp
push
loopne
enter
fbld
adc
fmul
xchg
add
outsl
dec
orb
add
inc
fstps
ret
jns
or
push
int
mov
push
or
pop
xchg
sbb
add
or
mov
jle
or
mov
xor
mov
outsb
jbe
jae
sub
jecxz
or
sbb
rcrb
jnp
in
dec
fs
xchg
dec
add
sbb
fdivr
cmp
xlat
mov
push
divl
cmp
ret
mov
test
sar
adc
inc
adc
cmpl
pushl
add
mov
hlt
inc
push
hlt
in
cmp
pop
mov
adc
jp
in
pushf
lahf
dec
in
adc
lds
or
inc
inc
mov
and
pand
xchg
popa
xchg
std
xlat
loopne
js
shlb
fdiv
in
ja
emms
or
sub
mov
popa
sqrtps
xor
or
xchg
insl
dec
add
inc
push
dec
cmp
pop
lods
fsts
sar
shlb
push
shll
mov
out
xor
push
cmp
xchg
sbb
inc
and
xchg
add
sbb
and
dec
mov
sub
mov
test
ret
pop
add
mov
sti
mov
in
int
ret
sbb
or
roll
shlb
push
outsb
adc
fcoml
dec
mov
roll
mov
rorb
mov
jnp
hlt
add
push
clc
add
push
lock
call
data16
sbb
and
mov
adc
add
mov
mov
cmp
xchg
mov
rorb
add
fsubrl
mov
pusha
sub
fcomps
out
and
add
subl
xchg
leave
ret
out
dec
xorl
mov
loope
sub
push
pop
call
jg
pop
addl
pop
lcall
lcall
movsl
add
in
jns
repz
fsubrl
xchg
aam
pop
ss
cmp
call
sbb
add
outsl
push
mov
rorl
lret
pop
sbb
sarb
mov
xor
ficoml
and
jg
lock
push
es
xchg
dec
xor
xchg
mov
cmpsb
int3
inc
mov
adc
popa
setno
outsl
add
int3
xchg
pusha
rcll
cmp
fmulp
sbb
cmp
sbb
pop
cmc
push
sbb
add
mov
cmpsl
pop
gs
pop
add
outsl
loope
pop
fstpl
aas
adc
stos
les
je
or
sbb
int3
sub
je
cmp
movsb
outsb
js
push
jp
in
add
int3
inc
nop
mov
add
pop
sarb
sub
inc
jp
ret
or
add
cmpl
pop
or
scas
or
and
outsb
imul
std
sbb
lahf
scas
mov
call
or
out
enter
sub
rclb
aad
jecxz
enter
movsl
neg
inc
sbb
nop
imul
cwtl
fwait
or
and
test
push
adc
add
loope
jnp
mov
fwait
test
mov
pushf
filds
or
clc
in
and
sahf
cmp
cmp
sub
fldl
loope
pusha
aam
or
add
shlw
std
cmpsl
sub
roll
or
and
add
add
mov
and
adc
or
push
adc
xchg
pop
mul
dec
adcl
mov
adc
fnsave
lock
in
add
jne
incb
ret
jo
cmp
cld
mov
add
push
add
xor
cld
sub
pop
lock
fisttps
cs
cmpsb
mov
arpl
cmp
rcl
sbb
push
jmp
neg
mov
lcall
add
mov
dec
xor
setle
xor
or
inc
xchg
fwait
iret
add
dec
mov
das
mov
mov
jmp
push
jle
scas
adc
jo
add
rolb
dec
fwait
out
loope
push
enter
loopne
pop
pop
push
mov
jb
fwait
inc
add
fdivrl
fmuls
popa
daa
mov
lock
sahf
add
dec
pop
sbb
or
repnz
or
mov
inc
jl
pop
rcl
and
add
sbb
and
ds
push
stos
xchg
pop
loope
fs
and
pop
fbld
in
sbb
add
xor
mov
int3
test
jmp
jl
pop
lcall
jp
pop
fwait
xchg
sub
les
dec
andb
rorl
jg
jne
and
pop
enter
push
and
xor
mov
clc
ret
push
les
pop
fldl
in
test
sbbl
out
mov
lcall
hlt
mov
or
lods
ror
pop
sbb
in
mulb
loopne
pop
push
adc
iret
lret
dec
xchg
jns
fildll
mov
cmpsb
adc
dec
mov
sbb
adc
repnz
fdivl
jae
les
dec
push
mov
dec
adcb
pop
pop
test
sub
ret
cmp
mov
pop
int3
not
and
int
lcall
push
adc
adc
pop
push
or
icebp
pop
add
not
ja
cwtl
pslld
nop
loop
daa
mov
sub
into
xchg
js
test
out
sbb
popf
or
jl
jle
mov
bnd
movsb
sbb
aam
add
and
jecxz
adc
call
ret
pop
insb
ret
mov
aad
xor
or
pop
xor
pop
cwtl
addr16
andb
aam
jecxz
inc
mov
enter
xor
in
into
in
enter
inc
clc
pop
sbb
push
roll
inc
adc
add
lock
enter
in
or
xor
cmp
mov
out
mov
jg
cmpsl
mov
push
in
sub
outsb
addb
pmaxub
dec
aad
mov
xchg
or
fbld
pop
cmp
pop
dec
cld
rorb
mov
stc
sbbl
loope
and
sbb
pop
ds
mov
out
pop
sbb
add
fldenv
jns
sub
and
cli
xor
cmp
repz
loopne
jge
enter
loopne
in
pop
hlt
inc
mov
mov
test
and
jo
dec
sub
and
push
out
add
add
xor
jne
dec
sbbl
and
jl
xchg
icebp
mov
test
push
pushf
out
rcl
cmpsb
adc
inc
dec
test
cmpb
shl
push
loop
xchg
inc
cmp
loopne
out
add
xor
sbb
add
push
outsb
int3
les
ss
mov
mov
mov
lds
or
leave
loopne
and
pop
pop
dec
int3
sbb
dec
mov
mov
push
add
filds
mov
aam
mov
call
mov
pop
cmpsl
inc
jecxz
decl
pop
into
mov
sarb
sarl
cmp
dec
mov
es
sub
add
lahf
js
fldenv
dec
add
stos
jmp
cmpsl
cmp
mov
rcrb
faddp
jb
stos
xchg
shl
mov
pop
and
sbb
int
inc
std
xchg
and
pop
xchg
push
xor
mov
out
rcrl
xlat
xchg
aam
fadds
pop
das
mov
out
loopne
jle
or
loopne
adc
cmp
ror
out
sub
sti
aaa
sub
sub
cs
cld
mov
and
mov
and
xchg
pop
mov
lea
push
cltd
in
movsl
enter
push
xchg
lods
and
jp
add
sti
sbb
add
pop
xchg
xorl
pop
xchg
push
pusha
dec
cmp
mov
dec
jae
fnsave
rcrb
add
sub
fldenv
hlt
jno
lret
mov
jae
jge
movl
in
sbb
jmp
cmpl
push
pop
xchg
add
add
and
jg
adc
repz
xor
fwait
mov
sub
adc
icebp
push
sbb
cmp
or
adc
mov
daa
push
lea
xor
push
or
loop
xchg
addr16
gs
test
int3
mov
adc
mov
inc
test
mov
lahf
pusha
adc
sub
inc
aam
push
jg
mov
and
add
adcl
xor
sahf
mov
popf
jmp
push
pusha
sbb
sub
adc
mov
and
push
stc
cmpsl
cli
xlat
sbb
ljmp
mov
adc
dec
xchg
fldenv
in
test
pop
clc
clc
sub
sbb
dec
int3
hlt
das
test
popf
xchg
cmp
out
mov
adc
cmp
dec
mov
push
loope
xor
cld
add
and
push
mov
enter
out
adc
incl
push
les
sbb
mov
std
data16
ret
mov
adc
inc
mov
lea
push
mov
mov
jbe
push
call
inc
clc
insb
lock
push
les
sbb
scas
inc
xor
sbb
aam
les
xchg
shrb
scas
xchg
fistpl
or
loopne
hlt
mov
mov
jo
mov
nop
inc
xor
lea
fcompl
ds
loope
cmpsb
call
jp
push
mov
and
or
lret
xor
in
not
jae
loopne
pop
stos
rolb
and
ficoml
test
inc
or
psraw
mov
shlb
pop
repnz
pop
fldl
test
test
cmovo
mov
mov
mov
loopne
xlat
pop
mov
cmp
sbb
ljmp
inc
aam
mov
sahf
cmp
pop
mov
push
dec
xchg
hlt
repz
push
xor
xor
daa
push
shr
or
inc
aam
mov
sbb
out
setns
push
dec
sbb
pop
mov
xor
inc
aam
mov
inc
mov
les
jno
mov
loopne
repz
or
addl
je
add
inc
adc
xchg
add
cld
imul
add
not
dec
jge
ljmp
adc
and
or
mov
orl
mov
dec
inc
in
add
loope
div
outsb
jae
mov
add
fists
add
add
inc
inc
fdivrs
test
adc
xor
mov
xchg
sbb
jg
dec
and
sub
dec
sbb
clc
xchg
enter
sbb
bnd
or
call
and
jb
subb
dec
fiadds
dec
adc
pop
sbb
addr16
mov
fwait
dec
push
mov
hlt
add
scas
xlat
call
mov
scas
push
inc
neg
lret
and
sbb
fmull
or
popf
call
mov
arpl
add
adc
je
or
push
in
fsubrp
dec
push
imul
xor
cmc
adc
cmp
hlt
inc
mov
cmp
push
mov
ficompl
mov
mov
pop
out
add
je
mov
fdivs
in
push
and
arpl
mov
mov
or
rorb
push
ret
js
and
mov
ja
jne
roll
filds
sbb
add
loope
into
fsubl
mov
mov
test
adc
jge
jne
xor
sbb
inc
movsb
push
fimuls
dec
lea
loope
or
dec
cmpl
cmp
dec
xor
mov
insl
cmp
loopne
test
pop
lahf
sbbb
ja
push
push
cmpb
cltd
mov
sbb
dec
pusha
popa
xlat
cs
shlb
jb
ljmp
or
xchg
test
pop
imul
stc
and
test
push
add
pop
das
inc
icebp
xchg
add
out
cli
mov
and
repnz
add
icebp
adc
sbb
mov
out
cld
out
push
pop
das
add
lods
mov
pop
xorb
pop
sub
add
leave
icebp
add
aaa
mov
notl
dec
xchg
push
add
pop
stc
push
test
push
jge
pop
pop
pop
sub
fidivl
repz
mov
mov
jg
add
sti
mov
or
test
sbb
xchg
pop
push
sti
fists
addl
flds
int
shr
shlb
adc
cmp
fiadds
repz
rcrb
and
jl
cs
sub
cmp
jl
test
popa
imul
or
insl
add
lods
jo
pop
in
cs
in
xor
cmc
adc
ret
test
and
outsb
sbb
or
mov
inc
imul
push
mov
or
nop
sub
xor
push
xor
daa
adc
dec
das
sarl
shl
jmp
pop
xorps
adc
pop
push
pop
rcrl
add
sti
loopne
aas
das
test
cmovge
testl
fcompl
idiv
iret
and
mov
repz
sub
inc
popl
call
out
fisttps
es
push
repnz
out
sbb
mov
sbb
jmp
dec
in
dec
mov
add
push
dec
mov
lret
xchg
dec
loopne
cld
popa
inc
jmp
add
cmp
movl
pop
or
inc
xlat
orb
mov
dec
cmp
xor
fwait
gs
xor
add
out
testb
cld
or
mov
sti
push
lcall
and
dec
iret
sub
stos
adc
andb
imul
pop
jnp
dec
mov
adc
xchg
nop
add
mov
pusha
popa
pop
jmp
popf
jns
loopne
sub
add
fiadds
hlt
mov
mov
movsl
push
push
gs
jo,pt
pop
xchg
cli
lahf
aas
mov
dec
cltd
mov
std
jmp
sbb
jns
loope
and
inc
add
ret
jl
mov
sbb
imul
xchg
xlat
pushf
pop
insl
push
ss
inc
out
test
sbb
cmc
inc
jg
xor
xchg
ja
test
mov
mov
mov
shl
pop
xchg
adc
sub
pop
popf
or
push
mov
cmpsl
add
int
adc
outsb
xlat
idivb
or
dec
fcmovnu
cmc
add
sbb
jg
and
rcll
jge
ljmp
adc
cmpsl
ret
divl
or
hlt
add
aaa
fisubs
jg
dec
mov
adc
jae
lret
add
xor
mov
callw
fdiv
sub
mov
cmp
push
sub
leave
jge
mov
std
push
mov
adc
push
jg
inc
mov
fcmovnb
stc
je
test
testb
pop
push
or
cmp
hlt
push
lock
jmp
imul
sub
adc
loopne
or
rorb
sahf
xor
int3
mov
movsl
xor
inc
xlat
mov
cltd
inc
cld
fcomp
push
lahf
inc
push
lock
dec
inc
xlat
mov
sbb
hlt
in
dec
shlb
cld
dec
fidivs
jnp
mov
icebp
mov
sub
jb
add
lea
test
lock
js
or
push
jle
push
and
adc
jo
sub
dec
shl
add
mov
adc
cmpl
notl
dec
pusha
fisttps
roll
sub
loop
sub
addr16
sbb
faddl
push
push
mov
inc
rcll
adc
ds
inc
adc
jns
hlt
shll
or
push
jmp
jle
out
clc
daa
cmp
sbb
dec
push
jl
sahf
mov
roll
clts
scas
bnd
push
inc
or
ret
adc
fnstsw
es
cld
cwtl
push
adc
adc
xchg
push
add
cmp
xor
jae
xchg
aad
scas
mov
mov
out
mov
mov
pop
xorl
fsubl
imul
or
loopne
cs
in
mov
pop
jecxz
mov
xchg
dec
jmp
test
push
or
pop
or
jne
leave
mov
clc
add
dec
test
not
adc
out
cmp
cmp
jl
add
addr16
mov
and
pop
enter
inc
fists
sub
add
add
ss
enter
mov
add
adc
cwtl
icebp
mov
data16
xchg
test
xlat
call
mov
xor
jge
js
dec
sbb
popf
cmpsl
cs
das
sub
jo
add
jp
sti
xor
lock
push
or
xor
mov
testb
test
jno
adc
call
and
pop
push
xchg
call
push
sbb
pslld
xchg
add
dec
loopne
popf
stos
idiv
mov
inc
push
fsubs
xorl
movsb
addl
jb
stc
dec
inc
rcr
dec
mov
jp
movsb
and
outsb
aas
dec
stos
xlat
jae
xchg
clc
subl
div
sub
pop
xchg
push
pop
jmp
out
in
jge
cwtl
inc
ja
mov
pop
mov
fimuls
shrl
cmp
icebp
adc
push
and
pop
adc
dec
mov
jno
and
lret
sbb
lock
and
mov
pop
adc
mov
pop
stos
sbb
sbb
add
sub
pop
dec
icebp
bound
lcall
rorl
sub
loopne
ljmp
faddp
pop
sub
add
inc
mov
pop
pop
sbb
arpl
xchg
push
clc
jb
cmp
lret
cmp
test
and
jecxz
xorl
sbb
and
inc
ret
std
jle
test
jns
inc
xchg
inc
mov
movsb
add
ret
mov
aad
popa
xor
ret
sbb
push
jmp
sub
cmc
mov
inc
mov
repz
dec
push
add
test
sbb
sbbl
lock
fists
inc
mov
daa
sti
push
or
fbld
mov
sub
mov
fnstcw
adc
mov
int3
xchg
push
movl
call
jg
les
clc
sbb
cmp
cltd
das
add
mov
mov
aaa
cmp
andl
fs
repz
mov
test
fwait
mov
jbe
jo
adc
and
xor
add
xor
mov
xlat
movsl
out
ret
xchg
xor
out
jmp
xor
pop
jmp
push
jle
mov
inc
dec
pushf
or
push
loopne
adc
loopne
jns
in
testl
push
jecxz
xor
add
mov
adc
insl
in
std
sbb
inc
pop
adc
dec
neg
sub
cld
add
ljmp
inc
dec
ljmp
mov
add
push
mov
gs
addb
in
add
pop
xchg
cvttps2pi
adc
rdtsc
subl
pop
jnp
les
out
gs
or
and
xor
mov
adc
add
out
test
out
cltd
and
xchg
leave
add
lret
xchg
add
lock
out
dec
cmpsw
pop
lods
sub
orl
and
xchg
rol
fstpt
lods
pop
sub
clc
add
adc
rcrb
sbb
dec
lret
cmp
loopne
cmpsb
xor
pop
dec
mov
adc
jmp
dec
or
dec
push
test
jae
or
add
adc
xchg
inc
mov
sbb
sub
push
xor
jno
jmp
aas
sbb
adc
daa
popa
dec
lods
jp
enter
ficoms
inc
add
pusha
scas
mov
jmp
cmc
jbe
adc
cmp
adc
je
jne
sub
adc
je
add
xchg
clc
add
jmp
loope
pop
fnsave
mov
incb
sub
dec
jge
je
pop
add
orl
mov
addb
gs
pusha
jmp
pop
mov
push
sti
cld
sbb
mov
sub
cmp
adc
push
pop
jmp
cld
test
adcb
push
lea
adc
mov
xor
inc
jecxz
sbb
push
pushf
adc
push
jecxz
cwtl
jecxz
jno
stos
push
adc
mov
push
imul
push
stos
repnz
int3
leave
or
sbb
pusha
out
loopne
int
lret
lret
or
clc
sub
out
dec
xor
idiv
loop
adc
mov
adc
lcall
clc
push
push
lea
push
call
hlt
pop
cmp
das
hlt
cld
xchg
xor
lds
fcmovb
ret
dec
and
jo
scas
and
adc
pushf
rcrb
ljmp
cmpb
rorb
sbb
jg
and
fsubp
call
js
jg
inc
xor
sub
jmp
pavgb
scas
loop
dec
xor
pop
je
pop
je
repnz
addr16
loop
add
dec
outsb
xchg
std
adc
es
and
jmp
jecxz
movsb
aas
push
notb
sub
popf
cwtl
pop
sbb
sub
xor
test
xchg
idiv
adc
dec
push
dec
push
outsb
add
jecxz
cmp
add
jne
pop
fidivl
pop
xchg
call
inc
pushf
mov
pop
jno
retw
push
imul
cmp
outsl
int
add
add
scas
lods
cmp
test
jg
imul
adc
push
rclb
inc
clc
out
sbb
xor
rcrb
cltd
sbb
sbb
loop
clc
ss
popf
lock
push
push
daa
out
in
adc
xor
loope
sub
aad
loope
add
pop
daa
xor
adc
std
jle
push
or
cli
scas
stc
loop
loopne
or
adc
sbb
cmpl
loop
loopne
cmp
xor
inc
inc
sub
insl
fldt
add
inc
add
pop
fs
xor
or
sbb
and
add
aam
sbb
rorb
pusha
lock
add
pop
rorl
clc
lea
js
mov
js
adc
cmp
outsl
data16
add
and
out
mov
lret
sub
mov
xor
add
loopne
test
jne
jae
xorb
pop
insl
das
add
mov
shl
add
call
adc
jbe
ret
in
stos
push
or
cmp
pushf
pop
inc
jl
inc
dec
inc
insb
xor
sub
outsl
insl
pop
sub
xor
test
mov
loopne
out
dec
cmp
mov
or
xchg
int3
dec
repz
adc
popf
clc
adc
fadds
dec
js
cmp
shlb
arpl
push
pop
jo
in
fisttpl
jne
dec
add
or
and
pop
or
je
xchg
test
jno
inc
movsl
xor
inc
sbb
in
andb
in
push
cmpl
dec
repnz
xchg
sbb
inc
or
inc
and
int3
and
outsb
pop
mov
ficomps
jge
push
or
je
jg
shrb
int3
adc
out
lahf
jp
rcl
jbe
xchg
test
shlb
cmp
cmp
enter
leave
pusha
dec
mov
or
add
lods
stc
or
ret
pop
pop
fmuls
mov
and
adc
test
test
negl
call
ror
cmp
push
jp
push
mov
lret
cld
ss
sahf
push
fdivs
ret
clc
sbb
and
pop
pop
das
mov
lcall
add
loope
xor
jo
mov
push
dec
lods
mov
and
into
lret
jp
ret
int3
inc
inc
rolb
lds
xchg
mov
es
cs
xor
push
cld
lds
cli
or
int3
in
outsl
fs
cmp
add
push
mov
push
shl
enter
cmpsl
jo
push
cld
push
mov
sbb
neg
int
mov
lods
pop
mov
shlb
cmpsl
mov
jg
pop
in
bound
stos
sbb
cmp
ret
mov
mov
pop
les
xchg
popf
mov
lret
or
adc
cmp
outsb
shll
add
iret
mov
int3
inc
movsl
minps
adc
out
idiv
call
sbb
or
test
fisubrl
add
inc
dec
push
movsl
jg
mov
inc
fdivrs
push
sub
jg
mov
in
dec
decl
cmp
inc
inc
add
push
lea
dec
imul
mov
dec
test
jne
ret
sub
add
dec
pop
cmp
and
jp
ret
xor
ljmp
mov
sbb
jmp
mov
adc
or
inc
imulb
ss
stos
and
sahf
mov
in
pop
test
xchg
fwait
mov
fcompl
negl
addl
cmpsb
xchg
adc
scas
add
lahf
loopne
cli
iret
dec
adc
sub
lcall
jl
xor
movsl
jg
jp
lea
mov
stos
fwait
jne
mov
push
shrb
xor
push
mov
mov
cmp
push
lods
clc
insb
xor
pop
das
and
inc
int3
pushl
fnsave
xor
pop
mov
lea
xchg
fdiv
and
loop
ljmp
xlat
xchg
and
or
xor
jno
dec
cltd
insl
insl
mov
inc
xor
bound
xchg
popf
cmp
adc
stos
and
scas
sbb
jmp
push
xchg
cmp
or
pop
or
jecxz
pop
loope
sub
mov
push
adc
jne
sbb
inc
shrl
pop
cmp
and
daa
add
push
loope
cmpb
rcr
movsl
outsb
movsl
mov
and
arpl
repnz
jp
xor
or
cmp
adc
mov
jne
in
enter
out
cmp
and
adc
cmp
inc
stos
push
repz
and
in
fs
xor
fucom
mov
sub
imulb
iret
push
sbb
push
xlat
mov
and
enter
mov
add
and
and
adcb
fnstsw
nop
pop
je
addb
xchg
adc
sbb
testb
jnp
out
fs
cmp
loop
mov
xor
and
in
ja
cmp
lcall
insb
in
movnti
and
mov
dec
iret
insl
pop
out
test
cli
xchg
js
repnz
call
mov
add
repnz
adc
aad
jns
lea
push
push
push
mov
xlat
sbb
icebp
pop
test
insl
faddl
mov
push
pop
fsubr
and
and
lret
notb
mov
cwtl
in
shrb
pop
adc
adc
jns
sbb
ret
push
adc
push
out
inc
push
inc
maskmovq
mull
mov
loop
daa
dec
mov
dec
es
add
clc
loopne
pop
sbb
testl
add
cli
adc
test
frstor
data16
add
not
pushl
shll
mov
mov
mov
inc
sar
cld
es
and
mov
add
and
sub
inc
dec
ja
inc
aas
addb
adc
popa
cs
fadd
fnstcw
push
aas
out
or
adc
inc
xor
and
lret
add
test
ss
and
call
xchg
movsl
pop
add
mov
mov
mov
je
hlt
jo
rcll
dec
pop
aam
loope
ljmp
sub
out
pop
jl
push
pop
xchg
in
testb
cld
push
iret
cmpsb
aam
sbb
movsl
sub
cltd
add
movsl
sbb
sub
outsl
outsl
pop
fs
pusha
lods
out
push
cmp
out
sbb
test
jno
loope
icebp
adc
pop
sbb
inc
push
aad
fcoms
push
add
xchg
mov
add
dec
lret
sbb
add
adc
mov
cmp
inc
mov
mov
and
gs
in
rcrl
leave
mov
pushf
and
adc
jecxz
dec
pushf
mov
dec
xor
add
lea
jecxz
movsl
dec
jnp
lods
imul
dec
or
fistpl
and
movsl
int3
mov
addl
call
or
pop
or
mov
push
dec
dec
insl
aam
xchg
scas
mov
xor
and
add
and
lcall
pushl
roll
sub
xor
cwtl
loope
enter
lret
test
mov
repnz
inc
rcll
das
push
jne
sub
nop
fdivr
sar
test
outsl
dec
adc
insl
lock
scas
in
test
in
sub
add
and
ss
jno
sub
add
testb
push
adc
push
jo
in
xor
and
jp
mov
ljmp
push
inc
sti
flds
stos
imul
add
call
lods
mov
jns
sub
push
sub
inc
pop
hlt
xor
in
adc
and
push
rolb
sti
clc
xchg
xchg
lea
pop
dec
loopne
pusha
dec
xor
enter
daa
jecxz
pop
pusha
insl
loopne
and
sub
addr16
imul
js
clc
in
sbb
dec
add
fstpl
jns
stos
push
push
xor
shr
js
hlt
mov
sub
not
fadd
fldcw
aas
cmc
fwait
mov
repnz
shl
aas
xchg
cmp
test
fnstsw
fcoml
mov
dec
test
andl
aaa
jle
in
lret
ret
popa
dec
dec
daa
inc
sub
add
dec
and
push
pop
push
pop
ja
lock
fwait
loope
mov
dec
lock
or
xchg
add
dec
adcb
out
or
mov
inc
in
sarl
add
sbb
pop
push
fiadds
mov
and
mov
adc
pop
insl
js
movl
adc
enter
push
mov
inc
dec
pop
sub
dec
jmp
aam
std
mov
adc
xchg
inc
sbb
pop
rorl
pop
out
mov
pusha
adc
mov
xor
jno
fidivl
fcoms
mov
dec
add
pop
ficoms
call
push
inc
inc
inc
sub
pop
fmull
lods
jnp
fcomi
sub
ret
dec
pusha
xbegin
dec
jb
je
cmp
lds
jns
cmp
xchg
push
lcall
push
inc
pop
rorb
divb
pop
and
in
rcrl
cmpl
dec
inc
cwtl
adc
cs
inc
rcrb
pop
push
sarl
adc
jp
add
test
cli
mov
sub
popf
test
dec
pushf
rorb
adc
xor
sub
push
clc
push
cwtl
pop
xor
into
loopne
sbb
inc
sub
dec
pop
pop
jp
and
out
push
mov
adc
lea
mov
in
loopne
js
cmpsb
jl
mov
inc
movsb
pop
mov
cmp
xchg
out
push
pop
pusha
loop
push
add
rol
movsl
jecxz
pop
nop
ret
out
dec
adc
sbb
add
ja
pop
lods
adcb
or
jo
and
movb
sub
xchg
out
divl
fiadds
fbld
add
sub
icebp
cld
call
mov
loop
mov
aam
fldcw
mov
xorb
push
inc
in
daa
add
add
cli
sub
push
dec
imulb
jno
add
jecxz
add
cli
xor
fmuls
fmuls
mov
in
in
rcll
fxch
repz
andb
ret
pop
mov
ljmp
or
cmp
add
jno
aaa
add
jbe
outsl
adc
add
ds
aaa
sbb
push
add
mov
pop
fmul
add
test
sub
adc
sbb
test
aam
add
sbb
inc
je
or
test
jp
and
sbb
data16
push
nop
push
shl
aas
cwtl
sbb
pop
mov
push
add
or
sbb
cmp
or
xlat
mov
dec
add
sbb
shrb
inc
dec
inc
jge
inc
cli
jnp
repz
xlat
inc
sub
cmp
imul
pop
into
adc
in
adc
push
aam
or
ret
pminsw
mov
fistpl
push
pusha
adc
lods
sbb
xchg
pop
mov
arpl
or
push
or
jecxz
lds
dec
mov
xor
jmp
fwait
pusha
dec
insb
xor
mov
lcall
xchg
repnz
bnd
inc
insb
sbbl
cli
and
stos
int3
sub
jge
sbbb
pop
insl
push
push
inc
nop
int3
mov
popf
mov
add
imul
dec
mov
movsl
into
xchg
inc
xor
jne
push
fcoml
dec
xor
xor
mov
call
xor
sub
je
imul
mov
mov
sbb
mov
aam
pop
insl
and
leave
mov
pop
fimuls
dec
dec
add
adcb
xchg
scas
add
dec
mov
fisttpl
js
mov
jb
or
jmp
dec
pop
jl
sbb
sar
call
cld
jl
loope
int
inc
and
hlt
out
add
push
mov
imul
push
add
push
adc
mov
jecxz
inc
mov
call
jge
neg
bswap
jl
jp
cmpl
jo
mov
pop
fiadds
jle
jge
push
test
scas
iret
sub
push
ljmp
rcl
rcr
xor
add
xor
jle
das
sub
xchg
filds
call
ljmp
xchg
test
add
mov
lret
jbe
adc
sub
sbb
add
mov
cmp
jmp
insl
mov
inc
mov
dec
sahf
call
lods
or
movsl
add
xlat
mov
rolb
or
pushf
or
movups
dec
mov
ljmp
or
cmpb
sbb
mov
test
mov
or
add
call
or
les
insb
and
aam
inc
sub
sub
sbb
or
cmpl
inc
scas
lock
mov
xor
outsb
arpl
mov
xlat
xchg
add
or
xor
fsubs
push
ss
add
into
enter
js
push
sub
ficoml
mov
pusha
fsub
clc
loopne
add
adc
xor
inc
inc
mov
push
or
mov
pop
cmp
xor
or
fdivrl
loop
mov
ss
push
hlt
pop
insl
jo
out
xor
inc
sbb
cmp
jae
jne
and
add
or
inc
adc
adc
sahf
dec
push
cwtl
aam
adcb
dec
cmp
in
jge
jb
sbb
loop
pusha
popf
rcl
mov
add
popf
sbb
and
lods
hlt
mov
adc
xlat
cli
push
aam
mov
int
ss
call
in
mov
cmpsl
jne
out
add
push
jb
cmc
push
cli
xor
sti
mov
pop
adc
gs
mov
adc
cmp
sub
loopne
cmp
lcall
xchg
cmpsb
xor
fwait
sbb
sub
mov
lods
test
inc
loope
daa
xchg
xchg
loope
les
add
jmp
pop
adc
out
add
mov
dec
xor
pop
jns
incb
jne
xchg
cmp
add
adc
inc
add
inc
jmp
adc
cmp
mov
sbb
je
dec
or
push
add
adc
iret
int3
scas
mov
fdivr
fidivs
sub
cmp
add
mov
cmpsb
add
push
pop
pop
mov
xchg
lds
mov
inc
mov
and
add
mov
inc
inc
sti
dec
xor
addr16
sub
fidivl
dec
pop
arpl
adc
sbb
mov
fiaddl
push
ljmp
ja
cmc
fisubs
out
in
add
in
leave
in
enter
mov
push
cmp
fadds
lds
and
xor
jb
mov
cmp
ljmp
cld
pop
dec
sbb
and
in
test
jnp
xor
sbb
dec
leave
pop
imul
or
pusha
aam
sbbb
enter
pop
jg
and
enter
mov
sub
aam
inc
insb
jp
cmp
jl
mov
mov
mov
addb
mov
sbb
adc
ret
ss
js
cli
add
movb
jg
lret
inc
pop
stos
sti
adc
sahf
cld
inc
xor
xchg
mov
mov
mov
inc
or
pop
mov
popa
pop
sbb
add
adc
movsb
add
xor
bnd
into
pop
sbb
cltd
pop
cmpsl
xchg
sahf
call
xor
inc
shll
cld
out
test
add
jg
enter
fisttpl
jg
outsl
cmp
mov
pop
adc
mov
sub
loopne
stos
lahf
or
mov
fdiv
add
pop
fsubrp
aaa
mov
aam
or
cli
popa
cmp
pop
idivl
ret
cmpsb
scas
pop
divl
sub
xchg
sti
push
lea
push
mov
aam
jge
rorl
sarl
dec
outsl
sbb
pusha
shll
int3
in
mov
loope
icebp
cli
cmpsl
mov
enter
add
sub
push
pop
sub
pusha
loope
loop
mov
xor
pop
sbb
xchg
pop
mov
sbb
sub
andb
lds
es
and
fld
cld
or
sbb
dec
add
outsb
adc
push
sbb
daa
nop
xchg
cli
adc
xchg
je
cmp
cmp
daa
mov
jb
jo
lcall
in
add
loop
jle
xchg
inc
pop
mov
pusha
cmpsl
icebp
jmp
adc
daa
jge
jb
insb
or
fdivrl
shlb
fildl
xorl
inc
pop
lret
inc
jle
jo
imul
test
mov
rol
std
mov
lds
push
lods
dec
out
int
dec
xorl
test
xor
add
mov
mov
xor
in
lds
dec
inc
xchg
stos
roll
or
outsb
sub
mov
xor
xlat
sub
dec
sbb
out
sbb
sbb
xchg
fadd
or
push
lods
lds
xorb
fbld
or
push
in
or
je
or
ret
jle
clc
xor
pop
fidivl
sbbb
adc
sub
xchg
aaa
icebp
push
lret
dec
bound
or
adc
outsb
jle
or
stos
call
jbe
aad
xchg
je
ds
ror
sub
shll
add
loope
shlb
pop
xor
shll
add
inc
add
mov
fdiv
add
loope
dec
xor
jge
aas
push
add
je
sarb
mov
pop
pusha
call
jle
mov
movsb
ret
mov
mov
aas
xor
insb
addb
mov
jo
and
daa
ja
cli
inc
sub
mov
sahf
aas
das
mov
xor
loopne
filds
dec
in
sahf
in
pop
inc
and
jle
push
pop
push
add
mov
xlat
mov
pop
test
repnz
push
sbb
add
mov
pop
jge
bound
fwait
loopne
add
dec
clc
ret
popf
fcmovne
xchg
jp
mov
adc
add
dec
cmp
lods
nopl
cmp
push
stos
pop
pop
movsl
test
fs
std
xchg
xchg
test
cmpsb
push
enter
sarl
fld
xor
inc
sbb
dec
mov
push
pop
xor
push
cmp
call
mov
add
and
js
pop
lock
lahf
xor
lods
mov
stos
hlt
and
and
xchg
pusha
or
push
adc
add
mov
adc
or
sub
jmp
cmp
xor
or
sub
faddl
int
dec
jecxz
ficoml
pop
lea
jg
fisttps
into
xchg
jecxz
jle
pop
sub
loop
mov
sarl
jae
lcall
faddl
lret
rcll
sbb
icebp
in
aam
adc
das
movsb
seta
jecxz
mov
push
cmp
sub
sbb
lea
movsl
push
ret
jne
fldcw
sahf
sbb
mov
and
sbb
adc
fdiv
sbb
push
mov
out
cld
and
xchg
jmp
lds
adc
lea
jl
pop
nop
adc
cmp
stc
and
jb
adcl
ljmp
int
cltd
popa
and
add
sbb
int3
mov
sub
cmp
sbb
sbb
mov
sbb
push
push
push
push
push
mov
add
in
mov
xlat
addb
fldenv
fwait
jno
lret
or
inc
hlt
ja
clc
or
in
push
addr16
push
ror
cwtl
or
pop
sbb
mov
cmp
repz
jg
faddl
dec
and
adc
mov
adc
adc
add
and
jge
and
jle
popa
xor
sub
enter
addl
mov
mov
push
xchg
or
pop
cmc
sbb
mov
push
out
sbbb
mov
mov
mov
lcall
in
inc
sub
lret
xorl
xor
aam
push
sub
adc
jne
add
xchg
and
xor
cli
add
adc
sub
aas
mov
jne
and
nop
xchg
add
int3
lock
aas
or
paddq
jne
fdivrs
dec
xchg
or
into
outsl
sarl
das
cwtl
or
mov
gs
aam
pop
ljmp
mov
lock
loope
movsl
je
jp
cmp
sub
in
push
cmp
xor
jle
sbb
test
and
jl
mov
dec
push
fadds
lea
cmp
adc
ret
lret
fwait
mov
arpl
aas
in
gs
and
add
in
divb
add
loop
ja
or
jbe
jge
add
ret
push
jge
div
shll
push
cwtl
and
dec
sar
or
loope
add
mov
rclb
test
push
popa
and
pop
xor
adc
icebp
jae
imul
mov
or
or
repz
jl
mov
mov
xor
test
inc
mov
inc
jo
out
sbb
and
inc
stos
jle
jmp
sbb
mov
in
lock
iret
ja
add
shlb
xor
pop
mov
clc
hlt
jle
xchg
mov
fucom
or
adc
push
lock
lock
adcb
ret
jl
leave
ret
repz
lret
cmpsl
xlat
inc
dec
dec
push
les
push
push
jmp
js
pop
pop
aas
into
aaa
and
or
ljmp
sub
imul
cmp
adc
mov
inc
inc
jmp
mov
add
pop
imul
bound
push
jge
jmp
insl
push
out
ja
mov
test
lret
push
jne
pop
movsb
adc
loope
dec
adc
add
out
and
xor
add
xchg
push
jmp
sbb
dec
or
sbb
clc
scas
sub
lret
sub
and
pop
in
or
sbb
xor
daa
mov
or
add
push
or
inc
sbb
lds
pushf
mov
mov
inc
movsl
fs
inc
cmp
cli
sarl
pop
vrcpss
insb
jecxz
add
pop
or
xchg
cmp
pop
xchg
pop
dec
inc
adc
outsb
pop
jmp
add
add
test
jp
inc
pop
mov
sub
dec
les
in
adc
xchg
clc
aam
push
pushf
jbe
mov
mov
pop
mov
mov
inc
in
jo
and
sbb
add
push
mov
add
push
sbb
sub
add
adc
pop
into
ss
stos
adc
cmp
outsl
stos
sub
pop
sbb
adc
dec
rcll
pop
jno
or
pushf
dec
fadds
jno
add
loop
adc
or
sub
lea
sbb
lds
add
ret
xchg
sarb
pop
inc
jmp
fsubrp
add
push
sub
sub
fidivl
sub
pusha
xor
popf
mov
adc
adc
lock
sub
popf
mov
sbb
inc
mov
adc
movsl
in
xchg
popf
mov
ja
lods
xchg
jnp
shl
nop
mov
mov
lea
popa
or
loopne
lea
push
push
push
scas
mov
psubq
jl
pop
outsl
sub
into
lahf
jno
ljmp
push
inc
incl
cmp
push
in
and
cmp
out
push
pop
xchg
stc
out
add
sarl
roll
or
lds
jl
movsl
push
push
pop
sbb
sub
jg
ljmp
dec
mov
orl
aam
jecxz
inc
pusha
es
shrb
xor
hlt
sbb
sbb
fadds
lods
shlb
lcall
xchg
mov
sub
add
jmp
jns
gs
or
scas
jo
loop
jge
mov
jg
test
mov
xor
pusha
pushf
pop
bound
fsubp
sbb
insl
sub
inc
dec
fsubs
pop
fsubrs
lahf
and
fistps
xchg
cmp
push
pop
loop
push
inc
xchg
or
push
faddl
add
cltd
popf
add
mov
sbb
inc
rorl
add
add
dec
add
xchg
fwait
popf
flds
push
ret
add
adc
add
cmp
adc
aam
loopne
imul
and
push
dec
jo
repnz
adc
lcall
adc
aas
adc
nop
add
sbb
or
mov
jne
cmp
mov
loope
insb
xchg
scas
mov
mov
fwait
scas
inc
test
push
int
loop
or
xchg
cli
insb
es
leave
pop
cmc
lods
mov
aad
fistl
adc
xlat
or
dec
call
jl
xchg
cmc
add
mov
xor
aaa
nop
sbb
pop
or
mov
shll
mov
lcall
nop
inc
imul
mov
mov
aam
add
jo
push
cmp
or
mov
loop
inc
mov
xchg
adc
push
loop
shl
mov
das
adc
push
lds
inc
mov
mov
push
das
loopne
xchg
cwtl
loopne
or
or
daa
ds
aas
sbb
pop
aam
je
pop
sahf
in
sbb
scas
push
lock
inc
call
popa
mov
push
xchg
pop
rcr
add
aad
andb
push
lea
pop
outsb
fistps
aas
mov
int3
adc
dec
add
adc
mov
xor
inc
fadd
mov
loopne
aam
cmp
pop
das
sub
xchg
in
adc
lock
cli
je
ret
jns
test
mov
mov
inc
inc
mov
add
push
call
add
adc
pcmpeqb
pushf
rcrb
str
icebp
mov
jns
jne
icebp
pop
push
les
mov
pmulhuw
cmpsb
dec
xor
adc
mov
dec
div
hlt
push
outsb
cmpsl
xor
in
test
sbb
add
movsb
jg
mov
add
mov
fsubrs
add
hlt
mov
jp
loopne
inc
scas
jmp
test
ret
pop
jno
std
adc
jno
fidivs
nop
jbe
or
mov
loop
inc
sbb
sbb
fisubs
jbe
mov
nop
mov
push
pop
outsl
mov
adc
rcl
xor
xchg
jne
adc
movl
dec
pop
lock
push
jmp
mov
daa
xchg
add
lea
hlt
add
std
dec
mov
push
es
cmp
loopne
call
xor
cld
pop
add
cmp
fsubs
lock
icebp
outsb
and
popa
mov
out
loopne
adc
rolb
xchg
in
dec
xor
dec
test
add
inc
mov
add
ss
push
pop
mov
xor
jl
rcl
movsl
add
js
js
addr16
popl
aam
xchg
cmp
add
repnz
or
add
or
xlat
daa
add
mov
xchg
and
stos
push
orb
xor
push
pop
mov
movsb
sub
arpl
hlt
psubusb
inc
imull
jo
jle
or
jo
das
jbe
push
sbb
out
ja
fcom
test
cwtl
mov
xor
repnz
into
or
pop
bound
clc
dec
push
lret
sbb
sub
cmp
push
enter
cmpsb
outsl
add
xor
shld
dec
push
bnd
leave
cs
push
cmpsl
add
call
cld
mov
hlt
mov
pusha
jno,pt
imul
push
ljmp
inc
mov
push
sbb
lods
test
xchg
sbb
rcrb
push
icebp
or
dec
out
imul
out
adc
shlb
clc
mov
cld
xlat
xor
mov
vmread
pop
dec
xchg
test
shll
mov
sbb
mov
mov
popa
fs
les
jmp
rolb
sub
jo
adc
add
ljmp
push
inc
movaps
int3
daa
xchg
shlb
jne
inc
push
imul
jo
lock
push
outsl
push
sti
into
data16
add
iret
fsubrl
mov
pop
mov
inc
sub
or
sub
lds
add
lock
mov
out
sbb
push
and
test
gs
mov
cmp
mov
repnz
pop
call
and
add
shlb
cwtl
lret
ja
loopne
dec
movsl
nop
xchg
popf
lock
adc
shll
addb
inc
inc
or
dec
mov
aam
or
dec
sbbl
or
add
sarb
test
push
hlt
test
gs
es
add
fsubrs
and
repz
xchg
sbb
lcall
das
xchg
push
out
stos
push
xchg
scas
push
loop
push
pop
sub
mov
dec
jecxz
or
roll
pusha
or
dec
hlt
pop
adc
hlt
xor
jle
sub
mov
js
pushf
pcmpeqb
cmc
ficompl
mov
out
mov
pop
xchg
push
push
jno
push
andb
loop
rorl
and
jmp
mov
or
fnstenv
lods
inc
les
mov
cmc
sbb
and
ljmp
mov
lds
ss
xchg
push
cmp
shlb
stos
fistps
rorl
aad
mov
pop
jo
addr16
mov
adcb
xchg
mov
adc
and
inc
add
movl
add
jle
aas
or
fistpll
movl
out
sbbb
in
add
lcall
inc
or
les
call
and
cmp
jge
ljmp
pop
lea
push
movsb
dec
fsubs
jp
outsb
adc
insb
fwait
mov
and
inc
adc
fdivl
out
fldt
add
cld
jo
icebp
or
or
xchg
xor
addl
int3
dec
mov
add
outsb
sbb
int
adcb
adcl
imul
jno
icebp
test
in
and
pop
es
inc
cwtl
jbe
sub
rclb
movsl
or
push
lahf
fisubrl
movsb
call
fisubl
dec
and
sub
mov
add
or
loop
or
mov
mov
stos
stos
lcall
addr16
cld
iret
push
shrl
xor
cmc
ss
xlat
sahf
cmp
cld
xchg
cmp
sbb
inc
aaa
rcr
imul
xor
mov
jmp
push
lock
adc
les
fldt
jg
add
jmp
fs
outsl
daa
loope
push
adc
roll
mov
stos
and
jmp
or
jno
bound
pop
cmp
in
mov
aaa
sub
mov
sub
imull
inc
xchg
lret
test
mov
cwtl
cld
add
pop
dec
cs
xchg
repnz
ljmp
dec
jne
add
jmp
dec
xor
loopne
addb
data16
arpl
dec
mov
or
mov
fprem1
test
adcb
xchg
push
mov
scas
jg
mov
sbb
loope
js
dec
ss
jl
inc
sbb
push
push
add
mov
add
std
add
or
cmp
orl
rclb
cmp
fmuls
or
fwait
adc
dec
push
fsubl
rclb
popa
scas
jno
mov
cmp
sbb
push
hlt
orl
nop
xlat
loope
jmp
pop
aas
test
xor
xlat
div
clc
repz
jo
add
ret
adc
pop
lea
arpl
jmp
xor
clc
das
jp
ja
sub
aaa
inc
cmc
mov
xchg
enter
jb
xchg
adc
mov
jae
daa
hlt
fdivrp
xor
inc
loope
mov
loope
mov
inc
test
push
mov
mov
lret
inc
loopne
mov
inc
loop
cmp
inc
adc
xorb
pop
or
clc
adc
call
cld
and
jg
lds
adc
jmp
jne
divl
pop
int3
test
movsl
dec
mov
jp
das
cmp
sbb
dec
lea
jns
imulb
lock
ds
ja
andl
inc
outsl
pop
adc
sbb
mov
clc
mov
loopne
jp
cmp
adc
or
mov
cmpsb
xchg
mov
repnz
maxps
js
dec
cld
push
push
xchg
adc
add
or
call
xchg
xorl
mov
or
ficompl
sub
les
mov
push
mov
in
jno
and
jg
lcall
mov
add
popf
stc
sbb
xchg
adc
inc
add
cmp
mov
divb
movl
daa
je
mov
push
push
fidivs
in
in
je
out
push
out
aad
xor
mov
mov
or
inc
pushf
ljmp
ss
aad
insl
adc
jne
mov
inc
and
fadd
cmp
popa
mov
test
mov
inc
lods
mov
mov
add
leave
adc
je
pop
xor
mov
jno
mov
or
xchg
shrb
ficompl
push
sbb
adc
adc
fsub
loop
movsb
xchg
push
jmp
sub
xor
sub
fs
xchg
add
fildl
adc
movsl
dec
push
ss
sub
jo
daa
jecxz
push
push
push
and
xor
test
mov
xchg
mov
xchg
test
loopne
and
adc
ljmp
das
incl
mov
cmc
jmp
add
pop
ja
dec
les
jnp
add
enter
xor
adc
js
mov
orb
sbb
lock
xchg
loopne
mov
push
stos
add
popf
mov
adc
jle
dec
popa
test
mov
sub
mov
pusha
push
fwait
mov
in
cmc
cs
lds
fimull
add
test
xor
fidivrs
lock
jmp
or
or
rorb
mov
ret
cmpsb
fdivl
movsb
xchg
shrb
push
or
xor
or
xchg
sbb
dec
loope
lock
daa
cmp
ja
mov
xor
ficoms
in
cmpsb
jl
push
and
xor
jb
lret
sbb
andl
mov
sub
ret
mov
push
and
or
cmc
lahf
aam
loop
jb
addr16
xchg
sbb
jno
js
addb
fsubl
fistpll
add
adc
jmp
xchg
pop
pusha
and
dec
jae
add
push
aas
and
sub
orb
pop
jge
adc
sbb
outsl
sbb
xor
aaa
ret
popf
in
ficompl
mov
pop
outsb
jae
xor
sbb
imul
pop
fs
cmp
rolb
and
jnp
call
add
push
shlb
mov
aam
push
cmp
mov
loope,pt
mov
sub
pop
add
sbb
cmp
mov
popa
pop
sub
out
xchg
mov
cmp
in
hlt
pusha
rol
push
inc
jne
inc
push
push
mov
sbb
in
mov
inc
xchg
dec
jmp
sbb
push
cli
sbb
xor
leave
sti
or
dec
sbb
les
push
xor
cltd
add
inc
inc
sub
mov
inc
or
adc
sbb
scas
and
rcr
xchg
mov
adc
mov
inc
mov
fwait
jp
std
sub
lret
jae
mov
mov
dec
push
and
incb
inc
pop
push
add
mov
addr16
addb
subb
mov
stos
xor
rol
xor
mov
outsb
jae
or
mov
dec
mov
daa
jp
sbb
adc
fidivl
lods
shrl
js
push
xchg
insb
ficoms
daa
je
imul
sbb
sub
outsl
jecxz
adc
stos
stos
into
or
xchg
sbb
xchg
jle
movnti
or
shll
loopne
xchg
pushf
pop
pop
xlat
sarl
mov
data16
add
cmp
cli
xchg
dec
outsl
push
enter
das
cli
inc
scas
fwait
and
in
inc
push
ret
mov
pop
call
sub
out
ss
enter
lret
hlt
mov
push
mov
mov
icebp
inc
cmp
pop
movb
xor
push
aam
xchg
jecxz
inc
dec
mov
inc
ljmp
and
sub
mov
daa
ret
sarl
mov
mov
cltd
push
cmp
push
daa
cwtl
aam
jne
fcoml
mov
loope
insl
sub
push
jg
dec
xor
sbb
or
dec
or
sbb
mov
add
and
imul
inc
cmpsb
jg
bound
inc
push
imul
mov
and
pop
dec
mov
rclb
repz
daa
xor
mov
push
add
add
push
icebp
inc
sbb
mov
dec
jns
or
test
cmp
and
push
pop
insb
std
mov
das
loopne
and
jmp
push
push
or
cltd
xlat
fsubs
jns
jecxz
pusha
xchg
xor
or
xor
jp
xor
cmp
addb
add
inc
and
xchg
xchg
fmuls
xor
add
sub
cmpl
dec
loopne
loopne
mov
xlat
fimull
aad
mov
repz
es
lds
adc
cmp
cmp
nop
mov
popa
in
and
ret
mov
add
rcl
mov
mov
fsincos
inc
jp
dec
push
jl
jmp
sub
xchg
sarb
and
or
lea
daa
jo
mov
enter
shl
pusha
lret
xchg
ret
add
add
jmp
sbb
fidivl
xor
scas
cmpsb
fstpt
jl
and
add
add
mull
mov
dec
inc
sbb
in
js
lds
and
mov
xchg
fisubl
push
ss
and
insl
mov
mov
sub
xchg
mov
fcmovnbe
sub
cmp
xor
fistpll
or
mov
sbb
lock
shlb
mov
mov
mov
xor
jo
mov
or
mov
loopne
sub
addr16
pop
in
jmp
inc
mov
fst
jecxz
sysret
inc
stos
xchg
popa
div
or
dec
repz
mov
ret
xchg
loope
sub
pusha
or
out
lea
decl
and
jp
das
adc
mov
ret
mov
into
jmp
je
lret
xor
shlb
popa
add
popa
out
hlt
and
outsb
push
cld
or
push
dec
add
cmp
sub
pop
or
pop
and
addb
xor
in
sub
jnp
push
cwtl
mov
pusha
push
orl
ret
dec
sbb
dec
add
push
cmpsl
sub
mov
or
push
lahf
addr16
xor
imul
sbb
push
mov
mov
cmp
xor
fimull
addl
scas
insl
mov
stc
xchg
lock
je
stos
jg
mov
or
dec
test
add
aas
loopne
gs
and
pushf
inc
testl
or
out
rclb
icebp
jnp
xchg
dec
xchg
in
lock
jmp
arpl
ret
inc
jbe
mov
stos
inc
push
sbb
sub
pop
pop
jne
out
cmp
roll
cmp
dec
pop
fsubr
sub
jb
xchg
fistpl
adc
jmp
test
jne
idivb
or
lock
mov
lds
in
adc
shlb
fcoms
test
faddl
jmp
rcrb
ljmp
mov
das
iret
push
shr
add
icebp
inc
or
cmpsl
movsb
cmp
inc
stos
pop
cltd
loopne
dec
or
xchg
add
inc
jl
push
cltd
push
xor
int
mov
pop
sbb
push
mov
push
jae
jbe
fidivs
lods
daa
sub
mov
and
aam
mov
iret
and
push
pop
out
pop
jnp
jnp
cmp
cli
test
adc
inc
prefetchnta
mov
push
or
ret
pop
mov
and
sbb
dec
sub
mov
xchg
sti
pusha
in
push
and
cmp
sub
jnp
enter
movsb
test
inc
jae
pop
test
fidivs
movsl
sarb
int3
icebp
arpl
stc
mov
rcl
sub
call
jecxz
xadd
sar
push
lea
xor
xlat
add
push
mov
sbb
cmp
mov
int3
and
xor
pop
push
cmp
or
jno
inc
sbb
jmp
mulb
daa
nop
rcll
and
enter
mov
mov
sti
cmc
movsb
popl
push
orb
xor
fadds
xor
sbb
orps
or
sbb
lods
fcomp
mov
and
shl
inc
ret
lods
iret
or
lret
leave
adc
mov
jecxz
mov
inc
add
and
clc
ret
sub
add
std
dec
xchg
sbb
adc
xchg
mov
inc
jbe
and
lods
andl
add
sbb
loop
rorb
in
and
shl
push
xor
or
xlat
add
outsb
and
cs
cmp
add
mov
outsl
xchg
call
xorb
out
ds
test
sub
repnz
mov
das
lds
mov
push
jae
jno
faddl
popa
cwtl
xchg
in
mov
iret
hlt
mov
mov
inc
mov
or
add
xor
adc
cmp
in
stos
xor
dec
js
add
push
out
sub
mov
inc
add
in
out
pop
pop
sahf
xor
mov
shlb
addb
cmp
aam
xlat
icebp
les
mov
ficomps
ljmp
sub
jbe
or
mov
xor
movl
outsl
add
xchg
sbb
or
mov
mov
addr16
inc
insl
ret
ror
shlb
arpl
into
sti
movsb
addl
js
cmpl
pop
rolb
or
mov
ret
enter
sbb
lds
dec
xchg
pavgw
sbb
push
cmpsb
rolb
or
lret
cmpsb
adc
repnz
lret
hlt
inc
divb
lret
mov
sti
es
jle,pn
imul
or
call
inc
sbb
loope
sub
fistps
jg
sub
test
ja
in
je
xor
imul
js
push
in
loope,pt
ret
sub
out
push
or
push
js
push
add
jp
icebp
adc
into
pop
jecxz
imul
pop
insl
mov
popf
jbe
lds
sahf
mov
adc
test
jg
aas
jbe
and
sbb
pop
int3
sbb
loop
push
scas
subb
dec
sub
icebp
test
and
push
pop
add
jle
js
sub
push
rol
jecxz
inc
mov
dec
add
add
add
adcb
inc
test
ja
jae
add
dec
mov
lock
mov
out
out
or
jmp
nopl
and
add
pusha
add
jno
xor
js
xor
stos
sarb
and
cmpsl
jmp
add
push
xchg
xchg
mov
cmp
jae
in
jo
or
or
sub
add
adc
daa
jb
in
andl
add
push
sbb
inc
sbb
mov
daa
mov
lods
mov
push
mov
push
add
add
call
xlat
ja
mov
xor
mov
lods
inc
cwtl
je
pop
rorb
popa
push
mov
enter
loope
mov
jns
or
test
mov
ret
adc
or
sbb
lods
mov
xchg
or
jecxz
sbb
enter
daa
inc
or
icebp
int3
push
add
jmp
sub
mov
rcll
sbb
arpl
sbb
mov
ljmp
sbb
ret
test
lret
adc
xlat
add
rcrb
fmuls
add
dec
mov
and
xchg
cmovg
sarb
fbstp
pop
shlb
fidivs
cltd
pavgw
mov
mov
out
sub
bswap
cs
xor
add
mov
sbb
mov
jle
pop
xchg
push
add
add
sub
repz
clc
xchg
addb
notb
or
loope
jo
int3
mov
xchg
imul
inc
movl
sbb
mov
ret
popa
test
mov
rol
pushf
add
rcrb
push
mov
or
or
jb
loopne
pop
sub
stc
mov
jo
ljmp
or
push
jmp
loope
inc
mov
dec
out
incb
in
gs
or
push
jns
pop
test
dec
and
mov
adc
add
movsb
jb
xchg
jae
pusha
jno
mov
pop
sub
lret
rcrb
push
adc
jmp
stos
push
xor
jg
add
push
adc
mov
or
cmp
push
xchg
jae
jnp
test
shr
cli
cwtl
jo
sbb
pop
test
cmp
adc
dec
cmp
pop
sub
adc
and
adc
pop
mov
xor
mov
notb
in
pushf
aaa
enter
pop
add
mov
test
jb
cmp
outsb
jl
jae
jecxz
daa
adc
insb
mov
xor
jbe
xchg
push
scas
test
adc
cmc
in
xchg
arpl
or
test
jle
inc
out
pop
sbb
push
xor
loopne
adc
mov
repz
rcll
add
dec
push
pop
cmp
cmpsl
push
push
test
lock
ret
jo
in
sub
call
push
loopne
and
sub
push
ret
add
mov
aam
in
orb
arpl
jne
mov
clc
sub
pusha
out
movsb
dec
sub
push
aaa
arpl
cmp
les
dec
sbb
inc
sbb
out
push
dec
add
pop
jl
jge
xlat
pop
lock
xorb
js
std
shl
adc
pop
dec
xor
adc
dec
clc
movsb
in
stos
and
loope
in
xor
jae
dec
iret
lock
jecxz
data16
cmp
loope
call
and
test
inc
imulb
pop
pop
cmp
out
andl
adc
push
ret
or
lods
add
inc
push
or
pop
fcmovb
add
pop
xchg
sbb
lcall
and
call
sub
jmp
mov
mov
and
in
inc
test
mov
cmp
lret
in
sarb
jo
or
pop
mov
mov
das
loop
fwait
push
lock
cmp
push
sub
dec
lret
shll
adc
xor
and
out
shlb
movsl
xor
dec
push
jne
hlt
inc
jo
push
or
arpl
insb
sbb
decl
por
pop
xor
je
outsb
adc
add
adc
mov
insl
loop
and
pop
lods
cmp
and
adc
xor
pop
sub
inc
inc
rcrl
xchg
mov
dec
sbb
xlat
loopne
jnp
lock
xchg
adc
or
andb
mov
addl
incl
add
inc
fsubs
ljmp
cmpsl
dec
and
aaa
loopne
inc
divl
sub
out
push
arpl
mov
pop
jb
andl
mov
add
mov
mov
mov
sub
jle
test
jbe
push
jge
pop
mov
jbe
ret
sub
test
out
xchg
and
cmp
cmp
shlb
push
jo
cmp
rcl
mov
sub
lods
mov
jmp
or
jae
fisubs
xor
adc
dec
jecxz
imul
add
popf
or
and
pop
fcom
adc
bound
loope
sbb
js
insb
push
add
stos
xor
jecxz
cmpsb
lods
lahf
sub
test
rclb
mov
shlb
loopne
xchg
adc
enter
cmpsl
add
sbb
pop
dec
loope
sub
inc
mov
adcl
jg
sbb
pop
adc
jp
and
in
daa
mov
sub
push
in
pop
jmp
clc
test
jae
cmp
mov
movl
int
lret
int
push
ja
shll
adc
sub
subl
test
sub
mov
jbe
outsl
clc
xchg
and
mov
add
addb
xchg
jae
rcrl
mov
int
out
inc
aas
sub
sbb
push
inc
scas
pop
popa
dec
or
sarb
pop
subb
in
loopne
addb
mov
scas
nop
mov
rcll
mov
adc
mov
sub
or
loopne
fbld
mov
cmp
ja
mov
or
push
mov
cmp
jne
aas
out
nop
push
and
sub
and
add
nop
adc
out
nop
ror
fdivs
or
out
rolb
out
push
jne
jo
xchg
sti
ss
jg
dec
aas
lret
xchg
xor
adc
jp
pusha
dec
mov
mov
xor
add
pop
mov
xor
mov
lret
pop
mov
ret
lea
mov
rcrb
inc
popf
sub
or
push
mov
jne
fadd
sbb
pop
push
rorb
add
mov
scas
sub
fldenv
inc
push
imul
push
js
mov
pushf
mov
pop
jle
push
loopne
jb
cmp
cmp
jne
test
add
pop
mov
in
call
jnp
xor
pop
and
add
sbb
ds
testb
inc
inc
push
aaa
adc
sbb
out
fiaddl
cmp
cmp
subb
jmp
push
sub
cltd
mov
movsb
pop
arpl
pop
ret
ljmp
lock
xchg
cmpsl
loopne
mov
jb
hlt
clc
roll
data16
adc
repnz
cmp
aas
jo
pop
fdiv
sub
adc
fidivs
sub
add
and
or
icebp
dec
orb
test
ja
sbb
add
fstpt
loopne
push
or
pop
das
aas
adc
dec
add
and
icebp
test
jb
hlt
hlt
fisttpl
add
or
mov
push
pop
adc
push
push
imul
scas
inc
stos
mov
test
lret
ljmp
filds
loopne
ud0
xor
jae
andb
lret
pop
pop
add
testl
xor
rcll
mov
jb
mov
cmp
pop
sbbb
or
and
mov
jo
mov
shl
add
dec
dec
sbb
push
ja
icebp
mov
fnstenv
in
hlt
test
loopne
arpl
adc
test
and
mov
inc
and
and
rcrl
pushl
and
xor
lock
je
push
call
inc
int3
inc
rolb
inc
pop
inc
cmp
les
sbb
mov
inc
fdiv
sbb
inc
test
bound
fadds
mov
sbbb
adc
incl
pusha
xor
rorb
orl
mov
call
mov
jb
and
cmc
rol
clc
loop
nop
call
adc
cs
mov
mov
inc
pop
ret
push
shrb
adc
inc
add
cld
mov
ret
movsb
scas
jecxz
sbb
out
or
loope
lock
pop
sub
hlt
ja
push
or
adcb
xor
push
or
mov
test
dec
js
and
pop
sub
add
movb
push
mov
pop
fsubr
call
and
test
pop
xchg
xchg
adc
lock
mov
add
mov
ljmp
xchg
loop
jge
test
js
sbb
aad
and
cmp
ds
jmp
adcl
pop
rol
mov
in
and
lock
push
hlt
mov
outsb
pusha
jl
jg
sti
hlt
rclb
test
dec
mov
notl
in
dec
bound
nop
add
ret
and
jnp
sub
add
sub
sbb
cs
pop
stos
pop
pop
jne
xchg
xor
ficomps
pop
adc
adc
mov
xchg
add
sarl
xchg
add
sub
sub
insl
xchg
xacquire
sub
dec
out
test
and
dec
aad
push
lea
in
mov
jmp
sbb
cld
push
inc
add
ja
mov
add
call
push
fwait
std
adc
add
sar
stos
or
cli
and
xor
outsl
fcmove
je
push
mov
inc
and
sub
inc
jno
gs
add
sbb
arpl
ret
inc
inc
lcall
add
loope
popa
nop
or
add
adc
loope
sbb
sub
sbb
addl
mov
mov
jmp
sbb
inc
sbb
aaa
fs
add
mov
push
jecxz
rclb
hlt
cmp
and
jb
pop
inc
call
insb
nop
push
ljmp
push
stos
mov
add
inc
add
mov
pop
icebp
cmp
push
xlat
xchg
ds
pusha
pop
cltd
or
inc
cmpb
push
aad
xor
pusha
push
push
outsl
cmp
mov
adc
sub
adc
scas
arpl
in
sar
daa
mov
xchg
sbb
test
arpl
loopne
adc
addb
xor
jno
loope
add
cmp
or
dec
mov
outsl
sbb
sub
test
sti
xor
jmp
xchg
lock
adc
pop
pop
or
mov
sbb
cmp
icebp
loop
jle
out
jo
sbb
xor
orb
push
mov
xchg
pop
sbb
fisubrs
ret
adc
cmc
scas
sarl
fimuls
add
icebp
pop
das
rcl
push
dec
xor
outsb
pusha
pop
aad
push
mov
das
push
mov
or
ficompl
lock
lret
xchg
js
push
add
sbb
jo
imul
loopne
inc
ja
daa
int
adc
int
sbb
lret
add
sbb
add
roll
nop
popa
lock
xchg
xchg
mov
pop
ret
ret
lds
push
dec
dec
inc
hlt
push
mul
add
fiadds
lea
ret
clc
mov
pop
cld
add
push
hlt
add
cmp
inc
adc
addl
je,pt
mov
xchg
or
ret
addr16
aas
sbb
xor
push
inc
lock
lock
or
sub
arpl
addl
add
jbe
push
loopne
pop
push
jno
sub
sbb
add
or
add
mull
ljmp
cmpl
adc
and
adc
lret
fistpll
add
push
mov
mov
inc
clc
xchg
or
icebp
test
jb
pushf
mov
subl
stos
sub
outsb
push
sub
or
adc
xor
xchg
mov
mov
sub
xchg
ja
inc
jle
sbb
mov
decl
stos
mov
out
xchg
mov
push
xor
cmpsb
sarl
ja
cmpsl
xchg
call
loope
lock
rcl
dec
jno
movsl
jmpw
add
daa
rcr
jbe
cwtl
idivb
imul
xchg
cmc
xchg
dec
in
loopne
xlat
popa
xchg
sbb
shll
stos
xchg
lock
ret
mov
xlat
inc
das
dec
add
mov
imul
in
or
mov
out
sbb
dec
sarl
nop
shlb
xchg
frstor
filds
ret
xchg
lock
push
popl
or
add
dec
add
das
je
mov
outsb
icebp
hlt
add
inc
ret
sbb
mov
test
pop
push
ja
and
xchg
mov
pause
push
jecxz
cmp
jae
mov
pushf
sub
mov
mov
add
sbb
call
sbbb
sbb
mov
ret
inc
mov
outsb
adcb
int3
or
and
pop
pop
imul
pop
mov
mov
mov
sub
push
adc
sti
adc
sub
add
add
or
fisttps
add
adc
fdivs
lret
mov
sub
push
mov
cmp
add
dec
push
pop
rcll
inc
inc
inc
sub
scas
fiadds
dec
enter
fcmovnb
loope
or
fidivl
shrl
in
inc
mov
add
call
jno
mov
xor
cmpb
add
and
lods
or
inc
std
fldenv
push
xchg
and
jmp
mov
mov
mov
or
das
xchg
adc
cmp
push
add
xor
and
adc
sbb
loop
xadd
sarl
out
pop
or
mov
fwait
dec
mov
fnstcw
sub
mov
xchg
add
imul
xchg
mov
mov
mov
mov
mov
adc
or
insb
mov
jmp
lea
sub
lock
or
shlb
cmpsb
xor
adc
or
iret
daa
add
mov
cltd
xor
dec
xchg
jns
sbb
leave
ret
loopne
cltd
push
add
pop
icebp
sbb
out
mov
cmpb
das
insb
lret
or
les
scas
pop
fsubp
jo
and
daa
icebp
or
mov
filds
pop
pop
das
sbb
icebp
xor
xorb
jns
push
push
xor
push
ss
mov
jle
add
insl
jl
out
in
jmp
addr16
js
push
adc
sub
xchg
jp
sub
sbb
xor
cmp
test
cmp
sub
out
jns
in
add
mov
rorb
sbb
pop
add
or
test
push
add
lret
cmp
xchg
sbb
dec
and
pusha
lods
mov
sbb
into
add
rorb
sbb
jecxz
xor
rcrl
cmc
mov
jmp
add
xor
add
pop
xor
push
out
add
push
xchg
test
or
shlb
inc
sub
inc
or
jo
jo
loope
les
test
or
cmp
pop
sarl
dec
adc
inc
ljmp
clc
mov
inc
cmp
dec
pop
inc
jo
test
push
sub
or
xor
addr16
and
addl
xchg
loope
mov
cmpsb
jo
push
test
jg
push
or
scas
lock
dec
pop
adc
add
pushw
add
sbb
mov
fmull
lret
daa
sbb
dec
inc
orl
mov
hlt
in
inc
fwait
dec
mov
mov
adc
jo
sub
push
mov
push
inc
dec
ljmp
add
push
int
fmull
sub
push
dec
hlt
push
nop
lock
sahf
aad
adc
mov
stos
cmpsl
push
jb
jge
mov
aam
jne
sub
mov
out
sti
in
pop
jo
in
push
inc
cmpsb
pop
in
daa
adc
stos
dec
daa
cmpsl
mov
or
mov
dec
and
fsubrl
cmc
add
sbb
mov
sub
dec
test
std
mov
loope
popf
pop
dec
pop
pushl
xchg
cvtdq2ps
or
mov
mov
dec
inc
hlt
and
mov
pmaxub
dec
push
lret
testl
inc
popf
sbb
inc
orb
xchg
xchg
scas
or
sub
pop
push
movl
xchg
xor
jmp
xchg
test
mov
popa
fistps
mov
mov
lcall
fs
stc
das
enter
pop
xor
push
jne
aaa
add
stos
xchg
inc
addb
std
push
sbb
std
stos
daa
pop
loope
jo
jmp
add
shrl
xchg
rcrb
xchg
cmp
or
xor
xchg
sbb
sbb
testb
pop
or
cmp
aad
inc
push
or
sub
mov
push
xchg
mov
dec
stos
lods
adc
adc
and
sub
in
xchg
pop
xorl
jmp
or
nop
int
push
xor
mov
dec
xor
add
out
in
mov
sub
adc
add
adc
push
cmp
sbb
xchg
push
cmp
add
lret
ret
adc
add
sbb
test
rorb
push
mov
lock
int3
mov
fiaddl
enter
sahf
ljmp
lock
shrb
dec
dec
inc
pop
rcr
and
pusha
inc
pop
add
ret
fists
jle
mov
adc
sbb
jge
jl
outsb
divb
out
and
dec
adc
or
cmp
insl
cmp
xor
enter
jmp
sbb
jecxz
mov
sub
sarl
or
lock
sub
mov
mov
aad
and
sbb
sub
push
test
sbb
and
push
ret
stos
out
test
repnz
jmp
push
icebp
shrl
es
dec
pop
jmp
xor
lea
mov
cmp
sbb
mov
das
jle
xor
add
xor
ret
enter
pop
mov
sbb
jnp,pn
rorl
andl
int3
dec
sahf
and
cmp
inc
jge
mov
push
lcall
or
jb
scas
sbb
add
ret
sbb
pushf
or
sbb
lret
jl
or
push
in
jg
xlat
xor
loop
push
xchg
sbb
lcall
xchg
mov
aad
out
cld
dec
dec
cmp
jmp
mov
and
mov
and
add
inc
push
dec
test
lock
stos
fcom
fisubs
add
adc
imul
mov
clc
test
dec
sbb
out
pop
mov
and
pop
inc
stos
mov
sbb
xor
shrb
and
rclb
das
imul
into
aas
in
dec
mov
inc
push
imul
mov
lods
adc
push
gs
in
addl
pusha
loopne
add
push
rolb
pusha
pop
xor
fdivrl
xchg
hlt
ja
clc
hlt
xchg
out
add
mov
loopne
pop
and
std
add
lcall
cli
sbb
jnp
loopne
jbe
pop
addr16
pop
mov
xchg
shrb
movsl
clc
dec
inc
xor
clc
xor
loopne
ja
sbb
mov
loopne
ret
insb
es
dec
cmp
fsub
sbbb
jg
shll
add
loop
cli
jno
aas
add
cmp
arpl
or
fcmovnbe
dec
shrb
pop
enter
xchg
test
add
xchg
dec
loopne
loop
push
in
inc
xor
mov
dec
adc
push
mov
cmp
sub
fnstsw
sbb
cwtl
sub
or
sbb
lods
movsl
push
clc
cmp
rcll
push
inc
sti
xchg
movl
icebp
test
and
and
add
rclb
dec
negb
pop
sbb
push
sbb
mov
loopne
pop
cld
fidivrl
ds
dec
mov
inc
push
mov
jmp
mov
xor
and
push
lds
mov
cmp
and
sub
fs
adc
jge
cmp
mov
lret
loope
and
mov
or
jns
mov
mov
pop
aam
adc
mov
push
shlb
aam
xchg
add
mov
popa
aas
insb
fistps
ljmp
jbe
xchg
inc
jne
add
dec
inc
sub
pop
or
dec
mov
out
sbb
fbstp
and
sbb
and
jmp
outsl
cwtl
jecxz
push
stc
cltd
push
shr
mov
stos
test
jecxz
xchg
aaa
sbb
add
jbe
inc
inc
push
call
out
or
aad
add
mov
xor
div
scas
je
sbb
jae
jo
int
jae
imul
mov
pusha
test
in
xor
sti
fdivrs
sti
ret
inc
mov
jb
pushf
minps
add
mov
pop
xchg
push
jne
sbb
ret
ficomps
in
cmp
outsb
ret
sub
mov
jae
stos
in
shl
fs
xlat
call
sbbb
or
mov
idivb
cld
scas
test
push
lock
out
jle
dec
lret
js
fadd
cld
jp
jp
cld
outsl
inc
add
and
mov
subb
jns
adc
sbbb
shll
cmp
aas
push
scas
out
mov
hlt
xor
jns
test
nop
push
cmc
mov
hlt
int
into
sarb
sub
add
int
pusha
or
xor
shl
xor
in
cld
mov
popa
sbb
push
jg
xchg
jne
add
jmp
aaa
pop
pusha
dec
les
adc
pusha
fs
imul
fwait
aam
push
addr16
or
call
aaa
dec
or
push
and
cli
mov
movsl
sub
push
dec
inc
add
loope
rcl
je
sub
sbbl
in
push
ret
bound
in
gs
hlt
sub
or
sub
pop
shrb
ss
sub
or
jo
movsb
or
ret
cld
mov
sbb
dec
or
add
adc
xchg
jg
mov
mov
mov
or
lahf
aam
jle
test
aad
mov
sub
in
push
cld
aas
mov
in
mov
in
adc
or
xor
or
add
and
cmpsl
movsb
xchg
shlb
add
stc
loop
andb
cmp
popf
and
jmp
stos
add
outsb
les
xor
or
shll
lret
test
cli
dec
add
or
rclb
aaa
adc
mov
xchg
subb
xchg
or
or
and
mov
push
cltd
sub
add
adc
pop
jno
jle
jno
ficoms
add
outsl
add
clc
jmp
clc
test
dec
add
mov
lret
aam
mov
pushf
jmp
loope
fistl
mov
sbb
das
stos
mov
mov
lock
push
or
nop
xchg
rclb
add
sahf
dec
sbb
cld
jnp
test
mov
shr
push
aam
xchg
in
pop
loopne
ljmp
popa
ret
xor
lock
mov
dec
add
add
push
test
subb
jnp
push
xor
mov
mov
in
add
xchg
xchg
mov
and
mov
xor
out
push
jmp
int3
call
or
sbbb
pop
jo
add
or
aaa
cmp
sub
dec
rclb
mov
incb
jmp
int
pusha
adc
add
add
idivl
xchg
sti
inc
in
or
mov
inc
lock
jmp
loopne
ljmp
adc
xchg
sub
scas
cmp
dec
push
popa
jae
daa
scas
mov
repnz
movd
xchg
add
fisttpll
lods
lock
mov
loopne
mov
push
push
dec
dec
sbb
mov
repz
xchg
xor
pop
and
mov
test
pop
cs
pop
mov
notl
andb
or
inc
or
cld
add
xchg
ljmp
add
xlat
or
je
push
or
and
movsl
cltd
je
mov
les
lods
push
dec
fisubs
lds
add
out
mov
fdivrs
and
push
into
in
xchg
xchg
dec
add
rorl
sarb
ss
fiadds
addl
icebp
add
or
fwait
and
subl
jo
lea
sub
scas
sbb
into
fs
push
pushf
sbb
stos
add
xchg
push
mov
enter
inc
lds
and
pusha
sub
loopne
pop
cmpsl
pop
sub
mov
jns
adc
rcrl
ret
xchg
inc
or
sbb
jns
and
mov
outsb
or
lret
fdecstp
mov
adc
mov
sub
sarb
pop
xor
aad
xchg
rcrb
ret
orb
or
mov
shlb
push
push
pop
add
fs
jb
pop
push
cmp
jp
repz
inc
pop
adc
pop
fxch
lcall
inc
mov
dec
daa
jmp
fistpll
or
mov
lret
pop
and
lret
and
sbb
add
cld
sbb
call
pop
sbb
ss
sbb
mov
add
movb
cld
mov
repnz
xchg
inc
add
mov
add
dec
mov
or
lret
rol
adc
push
push
push
rclb
sbb
std
adc
out
and
je
rorb
enter
add
mov
adc
sub
push
sbb
fstpl
push
sub
clc
or
push
shrb
pop
lods
movlps
cmp
sarb
add
out
das
or
outsb
lds
push
push
cld
icebp
lret
movsl
jne
cmp
dec
stos
mov
test
xlat
stc
mov
dec
or
add
mov
inc
jmp
or
movsl
add
jae
sbb
xor
sbb
fstpl
sbb
stc
add
add
sbb
push
clc
mov
xchg
or
xchg
mov
mov
sbb
jp
out
movsb
mov
fbstp
or
stos
icebp
jecxz
and
or
or
jg
loop
bound
mov
adc
aas
fs
or
das
push
movsl
adc
pop
lods
cmp
push
add
jo
movsl
inc
push
xchg
int3
insb
sbb
inc
adc
pushf
or
js
rolb
fists
xor
int3
sub
ja
push
xchg
pop
push
dec
cmp
push
xchg
pop
push
std
fiaddl
ds
test
enter
sbb
xchg
or
and
mov
test
and
rorb
pop
pop
clc
mov
or
push
stc
xor
xchg
enter
or
js
cmc
or
enter
dec
pop
cmp
push
orb
mov
sbb
std
dec
or
jno
jmp
push
pop
out
jmp
in
movsl
dec
xchg
loopne
clc
out
add
add
push
and
inc
xor
pop
test
mov
pop
mov
sub
out
mov
mov
adcb
adc
mov
jg
mov
dec
and
ds
sbb
pop
sbb
in
test
mov
mov
dec
jl
call
mov
adc
arpl
and
xor
adc
and
aaa
inc
js
xchg
out
adc
rolb
and
sub
cmpsb
xchg
pop
mov
inc
cmp
lods
mov
mov
fdivp
inc
cli
add
and
xchg
in
repnz
inc
inc
jp
in
or
xorb
lods
push
dec
cmp
xchg
push
cld
ds
insl
mov
pop
mov
ret
aaa
fs
rcll
mov
in
xchg
mov
adc
cli
mov
cmpsb
sbb
loope
int
xchg
rcl
mov
ss
or
cmc
mov
and
movsb
xchg
sub
mov
loopne
or
jmp
mov
icebp
mov
mov
mov
inc
shrl
js
dec
pop
push
jbe
pop
add
inc
add
daa
clc
aas
int3
adc
adc
push
adc
add
and
iret
add
lahf
mov
push
add
mov
jl
das
popf
xor
pop
xor
sbb
jge
and
pop
ret
fisubrl
xchg
ret
jne
fnsave
call
adc
or
movsl
cmpb
sub
ljmp
int3
fwait
ss
inc
xchg
int3
test
fstl
add
pop
adc
inc
add
dec
js
call
pop
stos
test
fwait
xor
adc
movsl
sub
cmpsl
iret
fisubs
shrb
imul
sti
mov
jle
out
xor
add
add
adc
fsubrs
call
cmp
fwait
sub
mov
inc
xchg
popl
or
xchg
gs
push
out
mov
sub
jge
shrb
mov
add
incl
les
test
sub
arpl
call
mov
push
fcoms
fisubl
mov
push
dec
pusha
repnz
lock
iret
pop
in
mov
xchg
cli
push
cs
add
es
push
mov
fildl
pop
dec
cmp
push
je
cmpsb
mov
xchg
ljmp
loop
scas
adc
sub
dec
dec
cmp
dec
imul
push
ljmp
mov
adc
dec
mov
jmp
xchg
sbbb
in
push
insb
jmp
pop
adc
dec
inc
xchg
adc
fstpt
dec
fisubrl
lods
or
xor
pop
rorb
mov
popa
add
add
mov
xor
movsl
jbe
pop
jmp
repnz
ss
mov
push
call
sbb
scas
xlat
mov
movsb
xor
xor
push
mov
sub
call
push
shlb
push
ror
jg
sub
xor
inc
jmp
or
jne
testl
and
mov
mov
loopne
loopne
mov
mov
sbb
imul
rol
ret
xor
add
fstps
push
addr16
or
cmp
xorb
jge
cwtl
cmp
adc
mov
sbb
test
fldt
mov
dec
je
dec
lea
scas
out
sub
cltd
pop
push
jmp
cli
and
and
push
cwtl
inc
adc
orb
dec
hlt
pop
sbb
inc
dec
rolb
jne
pusha
xor
loopne
fmulp
pop
inc
sub
xor
inc
push
cmpsb
dec
or
addr16
jmp
hlt
popa
out
fmull
add
cli
sbb
cmp
pop
aas
xor
and
xchg
push
pop
add
push
loope
add
pop
or
scas
or
cmp
mov
sub
pushf
mov
and
mov
ljmp
lock
inc
js
pop
dec
push
stos
jne
leave
pop
les
pop
movsb
popa
dec
rcr
sub
pop
xor
xchg
aam
mov
mov
rcrb
scas
sub
push
fstpl
jge
lods
mov
mov
jge
pushf
jo
mov
into
inc
enter
add
pop
call
jg
aam
push
push
test
push
std
jb
fistps
jbe
sub
adc
stos
inc
lods
mov
add
arpl
jg
rolb
aaa
js
hlt
jo
inc
push
fimuls
scas
jmp
imul
sub
xchg
push
dec
fmull
and
dec
adc
dec
jp
shl
subb
add
dec
add
ror
adc
jmp
aam
xchg
lock
sub
or
lods
pop
jmp
int
leave
dec
cmpsl
and
pop
mov
fists
and
push
pop
adcb
push
call
daa
push
jp
adc
mov
push
sub
push
fdivl
sti
dec
pop
icebp
adc
mov
mov
inc
sbb
xchg
pusha
subl
push
sub
lock
jo
mov
xor
pop
adcb
lds
mov
push
test
adc
xchg
adc
rcrb
clc
inc
and
add
xchg
insl
stos
or
xlat
cmpsl
fidivl
sub
sbb
cmpsl
and
push
das
pop
lret
or
mov
mov
ljmp
sub
cld
or
mov
test
sub
sbb
mov
add
in
lods
or
lds
or
in
and
pop
xchg
and
and
inc
icebp
jge
loop
jnp
movsb
push
ret
testl
ja
lcall
loope
sub
pop
pop
out
mov
or
adc
sbb
mov
push
add
mov
shr
xor
xor
inc
rcrl
ja
icebp
rclb
pop
xchg
mov
inc
shlb
cld
dec
or
pop
ret
aas
rol
add
fcoms
cld
aad
mov
xor
sbb
lret
shrb
into
nop
dec
loopne
xor
adc
inc
dec
cmpsl
daa
out
push
jp
cmpsl
fmuls
in
pop
dec
push
adc
dec
pop
push
xor
cmp
mov
fcomps
leave
add
push
add
inc
adc
out
xor
pushf
push
cld
lea
cld
push
adc
fs
mov
adc
es
push
loope
pop
and
mov
adc
pop
or
das
jecxz
je
dec
mov
arpl
add
add
imul
cli
inc
sub
fnstenv
sub
mov
mov
lock
lea
adc
sub
add
pop
ljmp
adc
xchg
jp
or
mov
sbb
mov
pop
push
add
push
push
cli
sub
add
repnz
ret
jmp
loop
imul
dec
sub
rcrb
aad
sbbl
push
stc
jecxz
inc
loopne
stc
or
mov
dec
sub
sarb
and
aaa
sub
cmp
repz
addr16
inc
dec
js
std
ljmp
inc
psraw
jmp
addb
frstor
mov
pop
cltd
dec
stos
popa
cmp
sbb
adc
rol
xor
cmp
mov
aaa
sbb
icebp
data16
mov
or
lods
and
push
jbe
pushf
test
pop
cmp
mov
push
orl
fcoml
pop
mov
xor
insl
mov
shlb
push
xchg
aad
mov
push
jne
addb
dec
movsb
xchg
fimuls
adc
push
int3
inc
les
cmp
lds
inc
outsb
adc
mov
shlb
adc
sub
test
xor
sbb
lods
pusha
inc
mov
cltd
cmp
imul
pop
pop
or
adc
adc
sbb
flds
inc
push
adc
and
push
mov
jge
pop
and
lcall
add
pusha
push
notb
fisubl
test
xor
gs
insb
jg
fistps
loopne
std
ret
cmpl
add
rorl
dec
xchg
add
sbb
and
aas
adc
cli
push
iret
maskmovq
idivl
sbb
in
add
jl
or
jno
ss
mov
push
arpl
outsl
test
mov
mov
sbb
imul
pop
mov
fdivs
aaa
adc
arpl
popa
cmc
add
pop
insb
and
mov
sub
fisubl
fmull
insb
bound
mov
addl
add
pop
aas
loopne
jbe
add
fisttps
out
js
xor
in
xor
pop
pop
inc
mov
dec
inc
push
add
xor
loope
pop
jnp
daa
mov
add
adc
or
aam
push
sbb
mov
jne
sub
xor
movsl
pop
sbb
lods
cli
mov
pop
sbb
jb
jp
jns
loopne
sub
sbb
das
sbb
cmp
dec
add
push
cmpsb
mov
popa
test
cwtl
es
movb
xor
mov
mov
sahf
or
xchg
cs
adc
inc
arpl
sub
aaa
fstl
or
clc
lret
leave
dec
or
mov
mov
mov
dec
and
rcrl
and
outsb
aad
call
enter
or
lret
cmp
shll
ljmp
and
cmpsb
add
fwait
cld
xor
testl
push
mov
mov
imul
push
inc
push
jo
int3
dec
flds
ljmp
xlat
fsubs
lock
pop
dec
divl
push
xor
loopne
xchg
ljmp
clc
shrb
shll
xor
aaa
faddl
jbe
das
es
sbb
popf
push
test
adc
js
cmp
sbb
repz
shl
test
sbb
aad
mov
and
sbb
fwait
dec
sub
inc
adc
push
xor
ja
or
add
clc
jns
pop
push
icebp
sub
incl
jmp
sbb
cltd
ja
movsl
jg
iret
out
inc
or
add
jp
and
mov
xor
xchg
xor
es
fwait
mov
out
pop
or
loopne
add
js
push
mov
in
mov
mov
dec
pop
sbb
mov
sarl
push
pop
mov
es
call
jmp
imul
mov
jo
ss
adc
xchg
std
or
sub
add
out
adc
dec
leave
pusha
dec
arpl
add
sti
add
aad
pop
fcoms
bound
imul
xchg
mov
nop
pop
cli
dec
xor
push
mov
rolb
sub
lds
sub
xor
inc
adc
sbb
adc
push
inc
fisttpl
dec
inc
fs
pop
outsl
cwtl
sub
fdivrs
sbb
aad
fwait
sahf
fcompl
ds
lods
out
in
sarl
fadd
in
adc
add
mov
mov
lods
test
pop
shll
inc
movsb
imul
loopne
mov
and
and
fsubs
or
in
pop
rcrl
arpl
aam
je
icebp
or
test
les
sbb
mov
ss
dec
ret
cmp
enter
test
mov
xchg
dec
mov
jae
ffree
mov
ret
xchg
fcomi
inc
ret
int
or
scas
mov
insl
or
and
dec
sub
xor
xchg
sbb
push
pusha
hlt
add
fiaddl
inc
mov
sahf
orb
sbb
pusha
push
jmp
rcrl
adc
lret
sub
xor
xchg
push
aaa
cmp
pop
xor
push
mov
mov
mov
in
cmpsl
inc
add
daa
mov
add
add
or
in
cwtl
xor
or
icebp
rclb
hlt
es
inc
adc
fadd
push
jo
push
sub
out
lock
or
inc
ficompl
mov
in
and
shrb
push
ror
push
jmp
loopne
jg
jno,pt
aaa
ret
jne
and
push
loope
push
add
pop
fldcw
sub
shrb
cli
enter
int
or
pop
stos
xor
cmp
xor
add
fs
iret
pop
pop
popa
push
int3
cmp
dec
outsl
push
decb
and
and
jmp
push
and
divb
fadd
add
pusha
ret
jmp
add
in
mov
jae
or
shll
add
mov
shrb
pop
or
ja
add
inc
sbb
popa
cli
mov
or
lock
and
and
lock
add
mov
ffree
imul
pop
je
jge
jb
dec
das
in
aad
rclb
push
cmpsl
jmp
mov
mov
add
xchg
push
dec
push
adc
loop
in
mov
ret
ja
aam
push
or
jmp
nop
sbb
fadds
popa
adcl
mov
xor
sahf
insl
mov
push
push
sub
adcb
popa
sub
add
stos
or
imul
or
loope
push
pop
dec
aaa
pusha
mov
jl
rorl
test
inc
ret
mov
mov
hlt
xchg
popa
and
sahf
pop
lds
clc
in
mov
dec
cld
jmp
sahf
into
inc
sti
sbb
adc
in
push
adc
and
cld
mov
sbb
loope
sub
inc
and
scas
mov
push
dec
arpl
sub
pop
clc
xchg
out
ud2
mov
add
not
xor
in
sub
dec
outsl
sbb
dec
mov
outsb
jmp
lods
adc
push
subb
ljmp
sarb
mov
mov
iret
dec
sarb
shl
xchg
fstl
test
sahf
mov
mov
ret
mov
ds
jnp
or
stos
inc
sar
test
xor
jmp
adc
fdivp
aas
popa
ja
lcall
or
inc
push
dec
and
inc
xchg
ja
jmp
popf
cmp
into
and
nop
cli
add
movb
add
cld
insb
push
jbe
and
cmpsl
add
xchg
cmp
fwait
dec
roll
ret
push
mov
mov
sbb
inc
aas
test
mov
adc
gs
push
xchg
fadds
sub
fmuls
dec
xor
pop
pop
and
jnp
nop
loop
and
xor
shr
cmp
enter
lods
ja
fldt
sub
push
fadds
jno
pop
paddsb
js
or
rorl
mov
arpl
fidivs
lods
or
test
mov
scas
jnp
mov
xchg
rorb
sub
add
add
aam
adcb
dec
mov
dec
xor
insl
sbb
or
fiaddl
decl
outsb
cmp
fisubrs
jmp
or
cld
dec
popa
add
jecxz
stos
movb
dec
dec
mov
arpl
shl
aam
clc
int
or
cmp
cmp
stos
xchg
shll
lret
cmpl
or
jle
stc
push
and
insb
cld
daa
push
jns
out
es
jge
insb
mov
inc
adc
or
jmp
pop
xchg
sbb
bound
adc
lea
push
dec
gs
call
repz
dec
jl
lahf
jecxz
test
in
mov
addr16
out
add
push
icebp
shrl
mov
adc
xor
sbb
add
out
mov
cli
adc
push
or
cmp
sub
dec
inc
mov
arpl
push
inc
aam
call
pop
sub
inc
shlb
inc
mov
inc
bound
inc
or
inc
push
xlat
pop
mov
and
mov
inc
pop
inc
mov
sub
cmp
roll
xor
addr16
xchg
imul
idivl
xchg
add
jecxz
add
add
ret
jns
add
fdivs
push
aaa
mov
sub
xchg
xor
mov
jno
lret
in
adcl
lds
inc
cmp
je,pn
pop
inc
in
adc
daa
dec
sbb
insl
fadds
lods
add
xorl
and
or
call
lea
cmp
or
adc
xchg
stos
iret
and
inc
outsl
cmp
jo
mov
add
mov
outsb
fnsave
push
and
or
test
or
cmp
sbb
add
mov
fbld
loop
mov
mov
push
orl
arpl
in
inc
pushf
jmp
or
loop
push
pop
push
and
scas
aad
mov
gs
xorl
or
jbe
xor
and
and
pop
cwtl
in
iret
xor
or
mov
push
scas
mov
btc
out
push
jmp
sbb
sub
mov
jns
xor
and
add
hlt
fcmovb
addb
andl
fs
sarl
out
push
mov
or
cmp
pushf
shrb
into
ljmp
inc
incl
sarb
add
add
clc
into
mov
or
pop
test
fmull
scas
cmp
sahf
jnp
sti
out
inc
nop
inc
lret
mov
mov
add
and
mov
xchg
jge
adc
pop
jo
inc
movsb
xchg
mov
or
insb
cmp
fstpt
je
inc
testl
test
sub
pop
outsb
add
dec
jo
sbbl
aaa
inc
icebp
scas
je
shrl
push
inc
daa
or
in
addr16
mov
dec
rcrl
sbb
sbb
add
add
xor
inc
xorl
xor
lea
movsl
pop
scas
or
sahf
jecxz
sbb
fsubl
into
lretw
add
iret
lret
xchg
sub
adc
out
xor
imul
call
lcall
jbe
jae
and
outsl
lea
sbb
cmc
repz
add
imul
loopne
out
jo
jge
push
rolb
lds
or
bound
fldt
add
push
sbb
enter
aaa
pusha
cmc
jg
sub
clc
cwtl
jno
mov
pop
jnp
cld
add
or
sub
test
fwait
cmc
pushf
push
push
call
out
jp
dec
out
nop
int3
outsl
xchg
add
and
add
xchg
mov
xchg
ss
pop
sbb
jge
notl
pop
fdivl
test
jae
sbb
and
repz
cltd
test
add
add
lods
add
hlt
push
dec
ret
fdivs
xor
sub
cmp
cmp
sarl
clc
xor
lahf
hlt
iret
repnz
xchg
dec
aaa
mov
outsb
adc
add
outsb
sti
rcrb
dec
loop
dec
lret
and
inc
sub
call
cmp
push
xor
ss
adcl
xor
ret
scas
pop
bound
out
and
mov
sahf
into
inc
mov
xor
add
jns
xor
loope
dec
jno
int3
xor
aam
roll
fxtract
mov
or
hlt
cwtl
roll
pop
adc
ret
dec
pop
push
movsl
mov
add
jecxz
or
adc
fistps
dec
inc
mov
adc
xchg
pop
mov
lret
in
cmp
xchg
mov
push
mov
push
mov
or
mov
jmp
repnz
test
les
mov
stos
mov
loope
ret
mov
xchg
jg
sbb
pop
ret
push
push
sub
and
or
mov
adc
add
vshufps
jg
jmp
cmp
xor
dec
ret
mov
xor
arpl
movsl
imul
or
add
pop
ret
daa
xchg
adc
and
fs
cltd
pusha
in
jmp
adc
push
cmp
adc
adc
xchg
pop
dec
cmc
xor
fists
ss
mov
enter
loope
xchg
mov
xor
and
dec
cmp
lret
dec
adc
ret
jecxz
xchg
test
into
pop
test
mov
xchg
add
inc
stos
and
lcall
sbbb
or
fdivrs
add
xor
popf
es
dec
mov
dec
xor
sub
in
xchg
add
push
xor
rol
dec
mov
and
add
or
adcb
sahf
pop
push
les
inc
lret
clc
add
adc
dec
jae
enter
push
cs
loope
xor
into
pop
inc
je
inc
jmp
test
or
push
loopne
out
test
xchg
xor
sub
ja
loope
cld
lods
xorb
and
sbb
jo
jae
andl
lea
mull
cmp
or
inc
xor
push
or
jg
xor
lcall
mov
and
cmpsb
push
imul
lods
or
mov
lcall
incl
jb
mov
adc
popa
mov
push
shr
test
ja
xchg
add
push
add
test
xor
sub
movups
cld
jmp
test
je
sbb
jle
lea
cmpsl
ja
clc
icebp
xchg
cmpsl
or
in
lea
mov
mov
inc
push
mov
or
jp
mov
fmuls
filds
dec
inc
loopne
jo
adc
mov
aaa
ds
xchg
clc
in
or
dec
es
mov
outsb
add
push
add
xor
je
adc
ret
shlb
imul
inc
call
ds
inc
cmp
jbe
inc
dec
sti
sub
test
cli
daa
lds
pop
sbb
insb
or
roll
and
mov
and
fists
push
sbb
out
fisubl
cmp
pushw
pop
sbbb
xchg
fucomi
hlt
dec
in
pop
jmp
loopne
xchg
jno
xor
and
lcall
sbb
or
and
inc
adc
call
fstpt
fwait
daa
aad
mov
cmp
jg
xchg
jge
imul
add
cmp
mov
popa
add
inc
adc
xor
xor
or
inc
lret
fadd
movsl
jge
bound
cmp
mov
mov
sub
jnp
divl
jmp
adc
pop
or
push
into
inc
or
popa
and
lock
sbb
sbb
stos
hlt
mov
mov
mov
rorl
pop
sbb
push
pop
lret
dec
cmp
push
lret
or
add
pop
loopne
xchg
les
cwtl
push
adc
jl
push
dec
inc
pusha
xor
movsl
hlt
xchg
mov
mov
fdivs
movsl
rclb
mov
lock
mov
pop
sbb
adc
add
dec
loope
xchg
cmp
fsubp
push
mov
enter
loope
insb
sub
stos
shrl
daa
xor
push
add
jbe
sbb
add
inc
or
add
mov
mov
test
in
xor
and
hlt
rcll
hlt
add
sbb
sti
psrlw
sub
jl
mov
jecxz
aaa
and
adc
aad
lahf
inc
xor
cwtl
decb
dec
sub
aaa
insl
es
daa
outsb
cld
ret
repnz
xchg
rclb
scas
ret
jmp
dec
in
pop
pop
inc
loop
jmp
hlt
pop
pushf
es
mov
aaa
sbb
push
in
lahf
adc
sub
jp
bound
and
out
cmpb
pop
sub
std
arpl
cmp
ss
pusha
pushf
adc
or
insl
repz
into
adcb
aas
in
dec
fcomps
ss
inc
out
mov
call
rorb
xor
add
ss
stos
sti
cli
sbb
or
roll
fisubrs
push
cmp
xor
sub
idivb
popa
add
pop
stos
push
mov
mov
nop
cmp
jle
dec
iret
addl
js
xor
sub
test
fistps
mov
mov
in
mov
rcrb
push
push
sbb
jbe
mov
adc
lock
xchg
lahf
icebp
push
add
call
mov
add
pop
loopne
inc
sbb
xor
cmp
xchg
pop
sarb
movb
cld
push
loope
cltd
stos
adc
and
jb
mov
les
dec
xchg
out
test
jmp
data16
out
inc
xchg
cmc
das
loopne
adc
sar
fisubl
ud2
mov
pop
in
push
cwtl
push
lret
inc
mov
call
and
and
xor
lret
fwait
aam
mov
xchg
pop
push
sub
xchg
add
or
sbb
cmc
push
adc
pop
icebp
mov
inc
mov
decl
andl
leave
adc
push
sbb
push
xchg
sub
push
sbb
mov
or
xor
mov
mov
and
xchg
nop
dec
lea
sbb
inc
aaa
xor
inc
xorb
int3
hlt
pop
cmp
fucomip
xchg
cmp
and
jnp
and
xorb
and
dec
in
adcl
jle
adc
push
rolb
bound
pop
loopne
xor
adc
inc
jg
cmpsl
test
dec
sub
push
cli
cli
adc
loopne
sbb
cmp
cs
fimuls
add
les
mov
adc
inc
rcrl
roll
xchg
ds
jmp
add
mov
movsl
outsl
mov
mov
dec
sub
sub
or
push
sub
mov
xlat
ret
mov
shl
jecxz
inc
clc
outsb
adc
and
pop
inc
movsl
adc
in
stc
xlat
out
add
inc
pop
add
push
clc
cltd
mov
andb
adc
sub
nop
cltd
mov
dec
push
push
fadds
daa
cmp
add
xor
test
sub
stos
pop
lahf
mov
cli
test
cmp
pop
cmp
mov
add
jae
scas
or
sbb
cmp
mov
cld
cld
pop
mov
sti
fdivrl
adc
adc
or
add
divb
leave
adc
mov
cmp
sti
in
dec
add
jo
push
xor
shrb
inc
in
mov
jmp
jno
sbb
pop
shlb
inc
out
dec
sbb
inc
pop
add
add
sbb
lret
fisubrl
sahf
mov
push
jne
xchg
cmc
mov
decl
mov
and
icebp
shr
enter
dec
imul
mov
hlt
mov
cmpsl
ja
mov
or
fldl
xor
jo
fdivrs
xor
cltd
dec
push
add
xlat
jp
aaa
xchg
or
mov
lock
addl
adc
scas
dec
inc
or
ficompl
dec
push
loop
push
fiaddl
imulb
push
sbbb
and
aad
jno
mov
adc
and
lods
mov
jb
xchg
sbb
shll
aad
stc
lods
aas
lods
shll
lods
loope
fistps
aam
sti
out
push
xchg
dec
sbb
mov
lock
js
cmp
or
iret
add
jg
imul
pop
fistps
ret
lock
cli
and
ficoms
aaa
movsl
sbb
add
sub
sbb
ret
push
mov
orb
and
fnstsw
sub
xor
pop
xchg
or
pop
xor
bound
sbb
daa
sbb
push
xchg
add
outsb
push
test
xchg
mov
rclb
orl
push
inc
lods
lret
fldt
mov
in
arpl
jo
mov
sbb
mov
nop
imul
popf
push
outsl
mov
shl
inc
pop
test
or
or
adc
xchg
stos
inc
sbb
or
icebp
add
movsl
shlb
add
inc
sub
push
jmp
lcall
ret
push
aaa
pop
mov
pop
push
push
jae
shll
pusha
or
fcompl
dec
cmpsb
push
push
sbbb
test
loopne
xlat
or
mov
imul
mov
in
xor
jnp
add
stc
pop
loope
push
fcom
pushf
bound
xchg
aam
dec
mov
in
lods
js
test
cs
sub
dec
dec
mov
dec
loop
enter
mov
add
ret
xlat
pop
out
les
adc
mov
xorb
test
add
lds
inc
ja
clc
or
mov
mov
cmpsb
shrb
decb
jl
iret
lods
dec
sub
movb
mov
les
hlt
sub
inc
imul
out
ret
in
push
or
adc
popf
add
pop
push
test
or
or
dec
insl
icebp
adc
ret
fbstp
dec
popf
pop
movsl
fidivrs
add
inc
repnz
and
jmp
bound
addb
pop
add
shrl
jnp
add
aam
pop
mov
leave
in
push
push
insb
repnz
push
into
dec
addr16
adc
dec
push
orb
out
pop
sbb
clc
or
addb
loop
lods
fcmovbe
push
test
sar
fwait
enter
add
inc
cwtl
jg
inc
inc
stc
dec
stos
rorl
push
stos
add
clc
adc
jmp
imul
mov
jmp
addr16
xchg
mov
imul
adc
stos
dec
shll
hlt
in
in
sahf
push
push
adc
mov
repz
mov
call
and
iret
ljmp
arpl
or
mov
icebp
aas
adc
mov
enter
pop
mov
sbb
test
and
shll
hlt
cmp
jns
sbb
negb
mov
jmp
and
add
mov
dec
sbb
inc
jne
mov
ja
scas
cltd
mov
icebp
sub
push
lock
cmp
push
les
mov
inc
sti
vcvtdq2ps
or
sbb
mov
arpl
or
push
imul
mov
fistl
aam
jmp
adc
add
lock
xchg
js
les
add
or
sub
loope
data16
mov
adc
adc
nop
loope
dec
xor
mov
add
inc
xorl
incb
jb
jmp
hlt
cmpsl
or
mov
pop
inc
dec
or
hlt
sub
rcr
or
inc
mov
and
mov
add
cmp
movsb
xor
push
inc
add
test
icebp
push
inc
loopne
dec
xchg
pop
cmp
cltd
pop
xor
add
mov
call
mov
mov
es
sbbl
mov
lahf
rcll
rorb
push
adc
jge
iret
or
or
or
gs
jbe
mov
fisubs
adc
adc
cltd
rcrb
in
bound
dec
sbb
add
jo
pusha
jno
xchg
mov
pop
ret
stc
ret
add
out
insl
push
dec
fnstcw
fwait
nop
mov
mov
mov
mov
push
mov
imul
push
pushf
test
mov
negl
rclb
mov
outsl
add
scas
rcrl
sbb
inc
push
and
mov
jns
and
mov
shrb
shrl
jae
pop
stos
fildl
stc
enter
inc
inc
pop
jl
or
int
dec
sub
dec
fadds
fcoms
push
movsb
sbb
int3
inc
fadds
test
or
fmul
int3
xchg
add
and
inc
pop
test
or
roll
ss
fsubrs
mov
lods
mov
mov
jmp
pop
pop
add
rcl
fildll
stc
jo
popa
inc
mov
loopne
jno
fadds
mov
mov
inc
lds
lahf
ds
test
adc
adc
arpl
cld
out
inc
popa
scas
mov
roll
add
rcr
or
das
test
icebp
add
sub
shlb
sti
lock
ds
add
xor
or
int3
add
loope
cs
mov
pop
add
jmp
cmp
add
adcb
cltd
add
push
jmp
testb
lahf
mov
push
push
xor
fiadds
push
mov
or
cld
adc
push
dec
loope
shlb
add
ret
ret
clc
loopne
es
dec
add
dec
lock
inc
fmuls
clc
adc
shl
sub
incl
jmp
mov
hlt
xchg
push
or
dec
or
scas
lods
iret
imul
outsl
enter
sub
xchg
sbb
inc
rolb
repz
push
pop
test
mov
and
hlt
adcb
add
call
or
das
rcrb
not
inc
call
dec
adc
lods
add
and
mov
cmc
movsb
loope
call
andb
orb
fbld
and
fisttpl
mov
xor
loopne
loope
jl
sub
adc
mov
add
test
inc
pushf
xor
dec
sbb
andl
xchg
fbstp
add
mov
or
inc
mov
add
into
pusha
or
dec
lods
xchg
xchg
adc
jns
inc
enter
fsts
sbb
pop
loope
add
repz
pop
xor
dec
cmp
in
and
mov
idiv
adc
xor
add
adc
adc
xor
ds
or
xchg
add
movsl
lock
pop
cmovp
push
sbb
xchg
mov
into
ret
dec
or
add
xor
push
outsl
loop
fwait
xlat
adc
rol
imul
fsubs
push
cmp
adc
inc
xchg
cwtl
jo
jle
push
out
mov
mov
mov
insl
insl
inc
cmc
push
jno
sbbb
ljmp
adc
inc
or
mov
push
addb
dec
rolb
xchg
sarb
fdivs
clc
imul
push
data16
loopne
inc
or
add
ss
insb
sbb
add
xor
inc
xchg
inc
mov
jno
shlb
xor
or
push
adc
pusha
inc
mov
pop
ret
xchg
push
fwait
inc
xlat
add
pop
or
stos
fsubl
cld
sub
mov
es
cmp
cltd
repnz
cmp
adc
xor
and
mov
inc
sub
jne
adc
and
jmp
mov
mov
mov
ficomps
pusha
imul
subb
testb
add
mov
xor
aaa
xchg
sbb
mov
and
out
loop
clc
punpcklbw
add
cmovbe
add
call
dec
cmp
fadds
mov
and
jecxz
push
sbb
popa
stc
aas
mov
jg
lods
sbbb
sbb
adc
cmpsb
inc
xchg
lock
out
popa
add
lods
call
mov
mov
adc
add
push
aad
cwtl
fmull
jnp
adc
pushf
xchg
loope
or
sti
jo
xor
dec
add
sti
test
mov
mov
sub
adc
xchg
add
mov
adc
inc
rcrb
sbb
dec
paddd
inc
sti
loopne
pusha
pop
sub
add
std
fsts
mov
jl
lea
icebp
frstor
push
or
loope
subb
movsb
mov
rolb
fisubrs
aam
lea
or
pop
icebp
mov
xorl
pop
pop
jmp
repz
xchg
xchg
das
mov
mov
adc
ret
sti
clc
add
lock
add
sub
mov
mull
inc
imul
rcll
sbb
sarb
jo
aaa
mov
ja
xchg
in
jp
sub
lea
test
ja
mov
loope
pop
jge
idiv
dec
bswap
or
cmpsl
xchg
shlb
push
jae
fs
fsts
clc
and
les
push
je
and
adc
shlb
push
je
mov
or
leave
jle
shrl
std
mov
mov
cmc
int3
mov
addl
test
popf
add
fcompl
addl
sub
sbb
mov
rolb
int3
mov
cmp
ja
fwait
and
insb
sbb
loopne
pop
sub
mov
add
mov
push
jmp
imul
xchg
enter
mov
out
cmp
push
pop
adc
mov
daa
add
or
inc
roll
push
or
call
movsb
xchg
mov
gs
sbb
mov
mov
push
in
add
push
negl
and
test
sbb
xchg
push
loop
fistpl
stos
inc
stc
mov
ja
mov
fsub
out
out
adc
jno
jmp
jnp
ja
cmc
fmull
xchg
inc
lcall
out
and
dec
rcrl
lock
fcoml
adc
iret
mov
iret
ljmp
add
cltd
inc
scas
mov
mov
push
cmp
cmpsl
mov
lock
aaa
and
adc
pop
fisttpll
dec
mov
aad
jo
adc
mov
inc
jg
shrb
fildl
icebp
xor
int
std
jo
lods
inc
mov
dec
roll
add
jg
repz
in
nop
sbb
stos
mov
sbb
add
pop
or
mov
pop
gs
add
nop
sub
add
jl
dec
jmp
or
addr16
xchg
or
xchg
loope
ss
sbb
ret
and
shlb
inc
jns
mov
lods
jmp
fs
adc
xor
sbb
js
dec
pop
jecxz
hlt
shr
push
std
out
add
adc
and
jmpw
mov
std
lahf
movb
xor
sbb
sub
sbb
subb
notl
pop
stos
hlt
xor
jg
mov
add
sti
xor
xchg
out
daa
or
sbb
sbb
dec
jge
push
cli
or
ror
mov
adc
pop
mov
shrl
dec
mov
js
rorb
hlt
dec
sbb
stc
mov
stc
pop
or
imul
call
adc
push
pushf
lock
int3
iret
call
push
cmpb
lods
jb
or
mov
repz
lret
mov
jge
outsl
fisttps
adc
or
add
dec
cmp
jne
xchg
lret
aaa
push
test
ss
mov
xchg
pop
cs
jecxz
sbb
jbe
mov
pop
mov
imul
dec
cmc
ffreep
add
dec
rol
loope
popf
or
sahf
repnz
adc
push
je
nop
sti
mov
jg
xlat
scas
mov
imul
pop
pusha
imul
mov
sbb
sub
decb
stos
xor
sub
jae
fwait
call
or
insb
jo
jnp
pusha
inc
cld
mov
mov
shll
addb
lea
in
ja
shll
pop
imul
sub
lods
pop
and
mov
out
jae
or
mov
inc
es
daa
add
mov
or
popf
pusha
xlat
add
jno
sarl
jbe
sub
arpl
mov
inc
sti
or
mov
and
mov
iret
inc
or
cmp
pop
adc
dec
mov
or
cli
dec
and
add
xchg
sbb
sbb
jmp
scas
out
jmp
push
sbb
ja
cmp
test
mov
mov
xchg
add
adc
xchg
fisttpl
mov
add
or
out
add
pop
mov
cmc
jmp
xorl
add
dec
jmp
xlat
iret
mov
sbb
bound
inc
pop
mov
mov
pop
lcall
ret
inc
pop
mov
mov
jmp
inc
sbb
lods
cmp
and
sub
cli
xchg
push
add
xchg
push
add
or
lock
pop
rolb
jl
loopne
cmp
ds
or
mov
dec
div
notl
outsl
enter
pop
xor
mov
scas
incb
int3
sbb
xor
push
lods
pop
movsl
inc
and
xchg
nop
hlt
and
mov
dec
adc
not
inc
add
sbb
outsl
out
stc
mov
mov
rcrb
xchg
mov
shrb
nop
icebp
loopne
clc
mov
or
daa
pop
inc
dec
inc
or
xchg
or
bnd
scas
adc
pop
inc
dec
add
push
add
or
cli
or
jne
xchg
jb
xor
decb
popa
xchg
or
xchg
movsb
xchg
mov
mov
hlt
int
mov
pusha
and
icebp
roll
mov
out
pusha
sub
lcall
sbb
jo
dec
inc
shlb
mov
das
push
das
in
sarb
sub
push
or
dec
add
dec
sbb
lea
push
imul
jp
pop
imul
dec
pop
mov
stos
xor
push
inc
dec
cmpsl
adc
arpl
fsubl
add
add
arpl
adc
mov
or
cmp
popf
into
push
aaa
push
and
adc
aaa
mov
fwait
test
dec
mov
and
loope
out
rcrb
arpl
pop
push
mov
dec
lea
add
arpl
decb
sub
dec
cltd
dec
sub
rclb
das
pop
pop
xlat
jmp
outsb
pop
jge
lea
outsb
cmpsb
push
jno
out
movsl
or
aam
mov
das
repz
mov
fsubrl
dec
insl
imul
movsl
iret
sub
dec
pop
data16
add
lea
push
nop
movsl
ds
lahf
add
xchg
popf
push
fldl
in
push
push
lock
ja
lods
test
imul
or
xor
insb
cmp
arpl
mov
add
daa
adc
xchg
gs
mov
or
arpl
out
enter
add
dec
inc
adc
add
fcmovnbe
shll
pop
xchg
stos
lret
mov
jmp
cmp
dec
stos
fdivl
adc
sbb
sub
xchg
pop
repz
xor
inc
sub
sub
icebp
ret
or
jmp
movl
mov
not
cs
inc
popa
je
icebp
adc
adc
adcl
push
cmpsb
idiv
insl
xchg
js
fsubrs
mov
add
int3
rorb
sbb
jo
push
pop
roll
loope
add
loop
out
fisubs
loop
pop
clc
lret
lock
cli
lods
push
cld
pop
cli
bnd
in
movsb
pop
ljmp
adc
insb
cwtl
popa
sbb
xchg
push
jb
push
add
cwtl
sub
inc
addb
and
pop
push
and
and
sbb
mov
stos
lahf
inc
mov
movsl
dec
in
sub
aaa
sbb
mov
orl
sbb
nop
adc
mov
fisttps
inc
push
cmp
jb
jmp
and
lahf
and
fsubrp
add
jo
mov
or
pusha
stc
lock
xchg
push
dec
stos
jp
add
pusha
push
ror
mov
out
mov
clc
add
xchg
xor
adc
icebp
mov
clc
pop
fstps
cmp
mov
pop
fwait
mov
loope
rcrb
push
sahf
and
popa
sub
push
mov
sbb
dec
shrl
add
pusha
repnz
test
insb
cmp
rcl
sbb
sbb
push
cmpsl
in
cltd
push
or
dec
or
lahf
in
jmp
mov
les
or
aad
add
add
in
add
jae
jecxz
and
test
inc
cmp
cltd
lods
xor
jne
adc
mov
sub
xor
pop
in
ss
push
xchg
inc
rorb
aam
shlb
pop
push
lock
and
idivb
stos
in
cmp
popa
aaa
bound
jns
ljmp
sbb
push
inc
clc
inc
xchg
andl
xchg
xchg
adc
and
movsl
add
pop
lock
aam
cmp
sbb
or
fisubs
repz
in
pop
inc
and
cli
mov
xor
stos
dec
add
aam
in
loope
jecxz
push
sahf
sub
pusha
add
mov
add
push
cltd
add
xchg
loopne
sub
clc
lods
addl
push
cwtl
insl
jge
inc
xchg
mov
add
xchg
xchg
adc
pop
xchg
pop
les
aad
shlb
or
add
test
ja
mov
add
test
and
pop
and
sub
push
mov
dec
add
pop
cmp
xor
adc
les
cmp
popf
stc
sbb
pop
cld
repz
adc
addr16
outsl
xor
or
loopne
ss
in
jp
jb
sub
jecxz
dec
mov
cli
push
inc
in
mov
xchg
push
xchg
push
adc
mov
mov
mov
syscall
pushf
test
xchg
shlb
imul
int
stos
sub
shl
movb
jno
ss
test
jns
xchg
mov
icebp
rcrb
das
aam
add
mov
pop
inc
icebp
jnp
aam
test
negb
xchg
pusha
cld
cld
add
mov
add
pop
push
pop
inc
add
notl
jp
subb
loope
sbb
xlat
adc
adc
adc
add
or
adcb
xorl
xchg
shl
push
movsb
repz
push
sti
and
jne
or
aam
add
cmp
lret
jl
sub
nop
sub
jp
loop
xor
lock
jecxz
bound
dec
or
mov
jne
push
add
dec
iret
stos
pop
mov
nop
add
push
sbb
movsb
fsub
test
inc
gs
clc
clc
and
xor
stc
mov
movsl
jno
adc
sbbl
push
jge
stc
adc
jmp
xchg
nop
inc
test
iret
sub
divl
add
add
or
rorb
enter
pushf
repz
cmpsb
sbb
mov
aam
adc
fdivs
call
call
or
dec
inc
xlat
xchg
push
sbb
and
das
inc
out
cld
sbb
pusha
stos
loopne
mov
sub
add
inc
and
ret
mov
adcb
fiaddl
adc
xor
and
or
and
or
lods
jno
jle
inc
and
add
test
push
jno
pop
ljmp
and
nop
and
arpl
in
cmpl
dec
or
jae
sub
sbbb
cs
sub
mov
push
and
sbb
addl
cltd
dec
cmp
aad
in
popa
loopne
mov
popa
movsl
dec
imul
cmpsb
mov
loope
and
push
or
pop
xchg
cmp
pusha
inc
push
subl
imul
imul
scas
mov
loope
outsl
xor
stos
mov
loopne
nop
mov
and
iret
hlt
mov
or
out
mov
fidivl
pusha
pusha
mov
mov
mov
sbb
lea
adc
out
cmp
inc
dec
xor
add
mov
bound
jecxz
push
mov
stos
add
add
pop
or
movsb
and
ficoml
daa
shlb
cltd
inc
add
test
clc
dec
pop
ret
push
insb
mov
lock
scas
push
ds
outsb
jbe
adc
call
or
jge
xor
mov
es
test
scas
daa
xorl
jmp
or
add
pop
mov
pusha
mov
cltd
out
push
jp
call
dec
adc
shr
push
movsb
mov
imul
push
sahf
add
enter
sub
pop
and
mov
add
inc
xor
sbb
xor
dec
mov
push
sbb
sbb
sbb
pop
and
cmp
hlt
movsl
in
scas
lods
sahf
stc
push
popfw
push
ja
fsubl
hlt
add
stos
xchg
cmpsb
lcall
ret
gs
mov
and
ret
push
push
inc
sbb
nop
mov
pusha
add
add
repz
mov
lods
jae
pop
pop
xlat
xchg
mov
mov
xchg
mov
push
popa
shrb
adc
adc
jo
mov
jp
mov
xor
push
subb
lods
cmc
jno
jnp
rcr
jnp
adc
and
mov
or
push
push
mov
and
sbb
test
mov
pop
dec
add
xchg
call
dec
push
call
jne
das
dec
and
and
lahf
adc
xchg
test
adc
sbb
test
ljmp
stos
icebp
mov
loope
inc
lret
inc
push
test
pop
and
fcmovb
shr
leave
push
dec
sub
divb
shlb
add
push
inc
cmpb
jb
mov
and
push
loop
xor
aad
ret
xchg
shrb
frstor
test
add
add
adc
add
mov
data16
mov
jl,pt
addr16
sub
mov
rcrl
mov
in
js
js
push
fwait
jne
jno
jl
and
clc
int3
cmp
in
test
cmp
jmp
imul
gs
jecxz
sti
loope
add
adc
pop
dec
jge
sbb
aam
jecxz
cmp
jmp
or
pop
sbbb
xchg
mov
insb
cmp
push
sbb
sub
bound
cmp
addb
push
loop
das
cmp
jp
rolb
jmp
outsb
ljmp
mov
or
jb
adc
xchg
mov
adcb
les
mov
je
and
inc
cs
es
ja
stos
push
shll
jg
mov
ret
les
push
js
cmc
or
sub
pushf
xor
dec
xor
xor
mov
and
jl
mov
outsb
jp
adc
adc
mov
and
cmp
jmp
aad
cld
ja
mov
into
insl
pop
movsl
movsb
mov
daa
aas
or
stc
lds
int
adc
fsts
cmp
je
lret
movsl
mov
not
enter
icebp
test
push
ret
into
push
cmp
sbb
std
mov
ret
add
jne
pushf
addb
repnz
into
clc
add
add
ljmp
nop
mov
lea
aam
add
add
and
icebp
fnop
jl,pn
pusha
push
jno
jb
sarb
inc
and
push
mov
lods
lea
cmpsb
insb
add
fstp
and
pop
xlat
rcll
jns
fisubrs
sbb
daa
in
les
popa
cld
and
sbb
adc
lea
cmp
cmp
adc
adc
adcl
adc
pop
ljmp
jo
cmpsl
add
sub
ret
cltd
js
xor
dec
mov
add
outsb
arpl
into
call
cld
sub
data16
dec
inc
push
push
inc
clc
inc
out
faddl
mov
mov
cmp
push
inc
ja
scas
push
call
mov
sub
movsl
mov
xor
mov
mov
xchg
iret
inc
lds
xor
cwtl
dec
arpl
dec
cs
outsl
sub
or
stos
cmp
mov
xor
inc
cmovnp
fisubl
out
pop
sbb
cmpsb
add
fs
cld
cmp
add
insb
into
jmp
adc
pop
int3
or
mov
in
ret
adc
popf
jle
in
and
adc
mov
mov
lcall
pop
out
mov
ret
out
add
and
dec
mov
mov
cmpsb
jo
mov
fisubrl
push
dec
sub
inc
and
or
pop
in
cmp
add
std
nop
fisubrl
or
adc
inc
adc
push
mov
and
sub
dec
pop
push
cmpsb
mov
insl
pop
fiaddl
std
or
cmp
xor
out
mov
and
inc
cmp
push
push
jo
lock
or
add
push
movsl
sub
ds
lret
lods
out
cld
push
inc
testb
cmp
or
fldl2e
or
dec
sub
idiv
push
push
adc
or
mov
sub
sbb
push
jmp
mov
push
push
je
loop
add
divl
adc
and
test
and
adc
nop
add
push
and
ss
and
or
test
nop
inc
push
inc
and
inc
pop
fwait
std
pop
mov
adc
xchg
and
nop
add
and
inc
mov
lcall
and
cmpsb
mov
cmp
sub
and
xchg
and
add
mov
adc
xchg
inc
aam
mov
shrb
push
mov
data16
adc
add
xor
add
adc
mov
mov
fiadds
push
adc
jnp
ficompl
adc
jp
scas
mov
xor
test
mov
dec
test
add
mov
lcall
pusha
loopne
or
add
ret
or
inc
mov
and
rorb
loopne
sbb
scas
add
test
push
push
sar
adc
jp
push
test
or
imul
mov
inc
cs
shlb
push
sbb
inc
and
int3
insb
outsb
dec
rorb
int
xchg
inc
cmp
adc
push
jp
inc
push
push
test
or
sahf
lods
and
dec
and
dec
out
into
add
lcall
dec
stos
stos
sub
add
sub
dec
jl
inc
mov
mov
inc
outsb
loope
mov
stos
mov
or
adc
jne
mov
sub
add
mov
push
xorl
or
sahf
int3
int3
shr
or
xchg
sub
shlb
cs
add
inc
and
shlb
imul
xor
inc
mov
push
bound
mulb
test
and
scas
cmpb
shll
push
and
outsb
dec
mov
lret
rorl
push
and
push
sbb
push
xchg
push
sub
push
or
clc
aam
add
cwtl
pushf
mov
ljmp
and
sbbb
cltd
bound
push
and
adc
jbe
in
mov
ds
hlt
xchg
and
xor
push
cmp
adc
push
add
out
call
cmpsl
cmp
push
jo
insb
or
add
add
jecxz
add
in
inc
divl
imul
add
cmp
int3
cs
and
cmp
add
jnp
lcall
push
push
add
or
stos
xchg
mov
mov
add
std
mov
pushf
add
cmp
push
add
rorl
add
push
add
jg
mov
mov
add
sbbl
cmpsb
movb
bound
adc
add
std
incl
and
push
movsl
jmp
lds
sbb
mov
decl
fbstp
inc
push
test
out
xchg
pusha
enter
movsb
pop
xchg
leave
fwait
jnp
ss
lea
or
add
lock
mov
ljmp
adc
daa
pop
fcmove
mov
sbb
jno
cmpsl
jl
clc
aas
push
js
fidivs
xor
incl
loope
clc
sbb
mov
jge
jle,pn
pop
negb
shr
inc
mov
xchg
test
mov
sub
movsl
ds
mov
jg
incb
cmp
add
xchg
lahf
jle
cwtl
fs
roll
sub
loope
fildl
sbb
mov
fwait
into
push
hlt
push
lret
test
test
call
in
jecxz
push
sbb
mov
addr16
pop
call
push
push
shll
jl
loop
clc
fcompl
xor
add
test
push
ljmp
ret
dec
cmp
mov
dec
mov
jmp
mov
jp
xchg
jbe
or
xor
jne
popa
std
mov
push
xchg
enter
inc
in
mov
movl
jae
lock
fists
xchg
int3
iret
mov
push
mov
add
or
add
fidivrl
in
add
in
imul
push
or
mov
andl
jbe
lods
jo
cmpsb
add
add
push
xor
clc
int
xchg
cltd
popa
das
call
mov
jg
out
mov
stos
test
test
add
push
iret
pop
adc
mov
mull
inc
clc
inc
dec
icebp
push
and
ficompl
out
push
push
add
nop
mov
adc
mov
jle
ljmp
insl
sub
sbb
jne
dec
inc
or
pop
idiv
shll
rclb
xchg
inc
xor
pop
pop
pop
das
leave
pop
push
call
sti
movsb
xorb
or
out
cmp
movsl
or
mov
cmpsl
icebp
dec
mov
idiv
and
cli
pop
push
repnz
pop
cmpb
testb
inc
lock
cmp
aaa
adc
add
dec
sbb
sti
bound
shlb
push
mov
adc
stos
pop
sbb
inc
xor
outsl
fidivl
pop
cltd
pop
out
pop
add
ljmp
cmp
xchg
js
mov
sub
int3
sub
pop
rcrl
xchg
mov
pusha
push
ljmp
nop
adc
xchg
fldcw
nop
add
cltd
pop
loopne
add
inc
xor
insl
clc
stc
cmpsl
mov
nop
or
jecxz
jp
dec
int
jg
push
xchg
xor
jmp
add
les
mov
clc
iret
mov
ret
int3
aam
shlb
inc
sbb
decb
push
sub
dec
add
dec
and
pop
outsb
mov
outsl
clc
decl
mov
adc
dec
sub
cmp
pop
mov
aas
js
add
jne
lock
imul
pop
mov
or
mov
add
add
int
push
jne
imul
test
pop
jge
test
je
out
adc
dec
fcomip
mov
mov
leave
or
mov
sbb
adc
add
sub
pop
jp
push
add
push
sub
ljmp
mov
jnp
aam
lea
cmpl
mov
inc
cwtl
jnp
in
pop
insb
lea
cmpsb
xlat
aaa
jns
loope
out
lcall
sub
jg
sub
shll
pop
cld
rcrl
je
cmp
inc
push
mov
xor
mov
and
add
dec
rorb
outsb
lcall
cmp
fs
pop
pop
push
push
loopne
jnp
add
jmp
sti
bound
and
dec
inc
mov
dec
add
int
push
and
in
jg
add
jg
bound
cmp
ss
stc
dec
or
pop
xor
lret
push
sbb
inc
das
cli
sbb
aas
or
add
lcall
inc
out
clc
inc
pop
add
xor
shlb
xor
addb
out
cld
decb
xchg
popa
jne
scas
cld
leave
mov
je
sbb
rcrb
cmp
lahf
or
mov
inc
mov
mov
jge
sti
pop
int
dec
sar
pop
mov
shlb
cmp
outsl
lock
fs
mov
sub
or
pusha
mov
es
push
mov
aaa
jge
adc
mov
enter
and
cs
pop
or
orl
lret
dec
mov
adc
ljmp
icebp
inc
popf
cwtl
or
mov
push
movsl
hlt
sbb
push
cltd
loope
lcall
addr16
int
push
pusha
cmp
xchg
add
clc
in
pop
xlat
push
add
incl
fcoms
dec
ds
xchg
and
movaps
and
inc
call
fs
xchg
push
xchg
pop
inc
fs
fstpl
ret
mov
xor
mov
xorb
add
jae
add
mov
cld
fwait
decb
mov
push
and
mov
es
scas
loope
push
dec
or
sahf
push
insb
sub
add
cs
xchg
outsb
xlat
mov
xlat
fsubp
in
add
mov
or
mov
ljmp
stc
push
fcmovnu
pushl
mov
int3
ret
add
add
push
mov
or
pop
test
fdiv
loope
and
lods
xchg
leave
push
dec
or
shll
push
cmp
inc
ds
cmp
dec
push
incl
ret
sbb
xchg
loop,pt
cmp
add
add
xor
cwtl
add
mov
inc
pop
jge
outsl
ljmp
mov
or
jmp
les
or
pand
js
add
inc
sub
inc
cmpb
ja
cld
and
or
sub
mov
loopne
cmpsl
aaa
lods
sub
cmpb
insl
sbb
cmp
add
mov
dec
shlb
arpl
xchg
in
popf
leave
cmp
and
add
imul
pop
mov
call
add
xchg
xchg
lret
add
and
push
mov
jge
add
mov
mov
mov
pusha
out
inc
repnz
sbb
pusha
aad
int3
pop
mov
sub
stos
mov
sti
imul
call
pop
pop
fs
in
jg
sti
mov
cmp
push
aaa
jne
sub
test
ss
daa
or
or
cwtl
inc
push
sbbl
add
xchg
test
push
mov
stc
jp
es
jle
cmc
mov
mov
lcall
add
jbe
jno
adc
mov
shlb
push
xor
je
sub
add
pop
inc
arpl
call
jg
sbb
call
or
pusha
clc
push
out
cmp
pushw
insb
lods
xchg
xor
or
adc
lahf
add
jo
repnz
adc
pushl
pusha
scas
dec
adc
and
mov
inc
fs
add
sar
call
imul
gs
test
out
testl
stos
mov
and
pop
xor
sub
jl
lock
push
or
adc
and
and
jmp
pop
test
xchg
js
adcl
xor
fs
add
loopne
cmp
testb
pop
stc
outsl
mov
data16
jle
sahf
sub
pop
iret
dec
mov
cmp
sub
sub
cmpsl
rol
push
xor
in
pop
push
rorb
insb
inc
lods
jmp
lea
sub
stos
dec
fdivrl
aad
nop
sbb
scas
ss
out
or
data16
and
jnp
hlt
repz
ljmp
mov
mov
mov
clc
cmp
adc
lods
xor
rcll
fwait
in
cmp
in
pusha
or
outsl
fidivrs
dec
dec
push
jo
popw
mov
int
adc
fcmovb
mov
in
fwait
or
sbbl
lds
jle
jmp
scas
das
std
mov
adc
pushf
push
loopne
arpl
mov
add
test
ljmp
dec
into
push
adc
shl
lret
cmc
mov
mov
push
lods
mov
out
xchg
test
push
cmp
push
mov
fisubl
push
add
or
xchg
and
loope
lds
add
ljmp
or
orb
cld
lods
cli
push
je
fadds
jnp
mov
and
mov
adc
idivl
cmp
in
idivb
mov
add
xor
es
hlt
add
sbb
emms
fsubl
xorb
mov
je
lods
dec
or
repnz
mov
daa
rcrb
mov
inc
dec
lea
fmull
jle,pn
jl
rol
push
repnz
cmc
loop
sbb
mov
and
dec
bound
shl
and
pushl
push
mov
and
or
cmp
push
push
and
popa
xlat
fdiv
mov
pusha
mov
rorb
cmp
inc
or
ss
sub
mov
sbb
push
arpl
mov
mov
in
addl
jmp
sbb
aam
into
sub
sub
push
add
sub
daa
adc
pushf
test
scas
jp
sbb
add
mov
pop
adc
cmp
or
adc
jg
sub
call
or
add
mov
cs
cmpsb
arpl
xlat
outsl
repnz
lds
add
call
rclb
cs
push
insl
mov
in
fldl
adc
loop
add
lcall
sahf
mov
fsubrl
sub
loop
xor
mov
pop
push
add
dec
cmpsl
lds
cld
mov
jg
adc
and
xor
pop
jg
sbb
push
push
inc
xchg
mov
ret
jp
adc
xchg
out
jg
shll
int
imul
dec
adc
fiaddl
and
push
cld
test
fs
push
ljmp
pop
cmp
mov
xchg
jb
aas
cld
add
fcmove
faddl
cli
add
push
jle
fistps
shlb
inc
or
pop
test
cmp
cmp
pop
mov
mov
cli
or
mov
lds
sbb
cmp
in
pop
mov
imul
cmp
dec
clc
push
loope
xor
inc
and
dec
mov
loopne
sbb
inc
sbb
mov
in
in
dec
push
mov
mov
ret
xchg
add
push
sarb
testb
fdivrs
or
mov
dec
sub
lock
repnz
or
add
les
mov
jmp
cli
inc
test
cmp
cli
add
jge
dec
ljmp
mov
add
decl
test
clc
jle
fmul
or
jmp
push
ljmp
lcall
int3
mov
or
adc
or
stos
inc
and
shl
loopne
pop
lock
mov
shl
rolb
jb
iret
rorl
jb
pushf
in
and
clc
mov
scas
cmp
mov
jne
call
daa
jle
or
fadds
mov
shrb
sub
aaa
movsb
add
test
push
leave
insb
aam
xchg
or
sbb
and
mov
test
insb
mov
lds
cld
sbb
shl
mov
xor
push
jecxz
lret
cmpl
jne
mov
jecxz
push
stos
sahf
stos
jmp
add
clc
xor
sbb
stos
push
add
or
hlt
gs
fbld
aas
mov
pop
xchg
cmp
xchg
cwtl
adc
lahf
stos
inc
or
es
repnz
inc
hlt
loopne
add
xlat
add
test
jl
cwtl
pop
dec
outsb
push
clc
popa
add
clc
push
mov
xchg
sahf
aas
loop
cltd
les
jno
mov
and
test
gs
ljmp
pop
xlat
pop
jmp
cmp
xor
cli
pushf
jp
inc
stos
or
pop
xor
pop
incl
cmpsb
mov
adc
or
sub
mov
sub
pushf
nop
jp
jl
add
int
push
push
push
xlat
insb
imul
daa
subl
mov
lea
popf
cmp
ficoml
sbb
decl
mov
les
dec
dec
and
xchg
jae
jle
cmp
mov
icebp
xor
ds
pop
test
jg
add
and
in
sti
fcomip
or
stos
sbb
add
or
test
inc
pushl
rolb
idivb
or
popf
push
into
ljmp
in
dec
push
outsb
mov
es
jne
mov
shrl
xchg
pusha
xor
adc
lret
jbe
pop
jmp
inc
clc
inc
add
push
es
xor
std
das
dec
mov
rcrl
fs
xchg
pop
cld
adc
pushf
imul
mov
jno
pusha
push
iret
aas
push
push
inc
addr16
lret
mov
jecxz
call
call
cwtl
repnz
ret
lods
ljmp
push
cmp
test
jmp
xorb
mov
mov
outsl
inc
lods
fldcw
and
sub
insl
sub
bound
loope
out
arpl
insb
mov
ja
and
lods
or
cli
out
mov
insl
loopne
and
fwait
enter
mov
incl
ja
mov
rorl
mov
and
fstpl
jne
cltd
jecxz
sbb
or
xor
pause
pop
mov
outsb
pop
adc
lods
rcll
adc
aad
sbb
ljmp
add
arpl
xor
dec
push
aaa
clc
sub
mov
xor
loope
orl
and
popa
enter
cli
sub
andl
cs
lahf
add
add
cld
lcall
outsl
add
xchg
add
notb
adc
iret
notb
pusha
adc
ljmp
mov
pushl
sbb
jbe
aaa
in
cli
test
xchg
or
ss
add
aas
jbe
add
add
cmp
jno
xor
jmp
and
pop
add
adc
or
loope
push
jo
xchg
jp
add
scas
add
add
decl
jl
sub
rorb
inc
cmp
xchg
xor
jns
outsb
lahf
mov
pop
add
jae
lret
popa
mov
jle
cmp
add
incl
sbb
jle
or
jmp
inc
inc
adc
ficoml
pop
dec
sbb
test
aas
fwait
pop
mov
mov
or
dec
or
or
outsl
push
xor
push
mov
imul
inc
sbb
call
call
es
test
cmpsb
and
std
enter
fdivp
mov
or
repz
or
out
add
sub
mov
mov
movsb
push
cld
das
push
jp
add
adc
add
ficoms
mov
int3
sbb
inc
cmpl
clc
push
jno
loop
shl
and
dec
cmp
loope
cld
fbstp
mov
inc
inc
mov
push
es
pusha
in
or
mov
test
loope
push
std
mov
jo
push
or
rclb
and
in
and
test
out
cwtl
pop
xor
pusha
add
lds
fadds
jle
decl
mov
push
or
pushf
sahf
xchg
add
scas
clc
and
das
in
jg
ret
push
jmp
cli
pop
inc
pop
xchg
xchg
add
fstl
loopne
and
lock
incl
and
aam
pushf
mov
lret
out
pop
orb
sbb
out
adc
cmp
bound
ret
jl
jecxz
jns
mov
std
test
add
push
and
stos
add
or
dec
sarl
jae
shll
inc
add
lods
add
cmp
jg
icebp
mov
ret
add
lea
loope
mov
jmp
jne
mov
add
mov
dec
pop
mov
pop
add
dec
cld
scas
mov
inc
xor
pop
adc
sahf
mov
push
rcll
add
or
ds
in
mov
insb
adc
pop
xlat
nop
pop
adc
lds
xchg
rolb
sbb
scas
outsl
xor
decl
call
add
pop
movsb
leave
jbe
mov
pop
mov
out
inc
aaa
sub
insb
adc
movsb
cmp
push
mov
sub
inc
ret
stos
rolb
dec
jb
das
xor
pushl
lock
mov
pop
sbb
cli
jne
and
push
stc
cmpsb
mov
adc
push
sbb
or
out
int3
aam
mov
xor
jp
add
jg
stos
jle
jne
clc
leave
push
xor
scas
xor
xchg
fadds
mov
mov
outsb
or
daa
clc
test
jle
popf
pop
xchg
adc
jge
mov
ja
std
jp
cld
aaa
decl
mov
in
xor
add
mov
cwtl
ffreep
xlat
inc
push
mov
pop
and
jg
lret
inc
mov
in
xchg
enter
add
cmp
lods
divl
idiv
call
stos
push
mov
add
or
les
xchg
lcall
loop
mov
ds
adc
cmp
cld
cmpsl
stc
mov
sbb
fstpl
fmull
pop
out
ds
xchg
adc
mov
inc
push
sub
xlat
mov
xor
xor
pop
out
push
cli
or
xchg
mov
shll
sub
ret
mov
xchg
lret
cli
inc
xchg
aad
sbb
push
pop
movsl
add
cmpb
push
jl
mov
stos
dec
pop
xchg
push
shrl
adc
lds
push
jmp
cld
mov
xor
or
sbb
mov
add
sbb
adcb
negb
subl
out
in
xchg
in
fiadds
insb
and
call
mov
add
cltd
mov
mov
es
sub
mov
stos
fsubs
mov
jae
lds
fisttps
adc
or
xchg
xor
xchg
daa
imul
popa
push
arpl
inc
jmp
adc
jne
sbb
mov
aam
sub
mov
mov
dec
loop
int
divl
adc
push
loop
addr16
in
and
mov
pop
adc
and
lretw
sub
sub
adc
and
and
es
push
mov
popf
fsubr
jle
incb
add
std
fdivrl
mov
cwtl
add
je
add
mov
sbb
inc
out
push
cwtl
imul
insb
and
inc
inc
jo
fidivl
add
ja
pop
enter
out
pop
push
push
push
xor
push
push
jp
stos
scas
shlb
inc
aas
bound
outsb
fcomp
jle
mov
xchg
fs
mov
xor
add
pop
fimull
dec
clc
mov
mov
mov
imul
xor
lods
hlt
test
into
or
js
lcall
push
push
or
dec
cmpsb
aaa
cld
ja
fdivs
fs
into
in
adc
or
mov
mov
push
in
ret
jge
dec
js
cltd
push
lea
mov
sub
mov
and
test
shrb
pop
push
mov
mov
adc
ret
push
cld
int
outsb
jl
cmp
xchg
subb
push
incl
jae
dec
mov
jbe
push
adc
and
push
sub
xor
mov
dec
in
adc
pop
adc
int
jge
sbb
push
jne
add
sub
jg
jg
push
push
mov
add
and
xchg
repnz
clc
pop
loop
or
sbb
add
mov
pop
es
cmpsl
dec
push
popf
negb
mov
dec
jns
call
roll
inc
fstl
enter
or
mov
mov
xor
mov
outsl
xor
call
es
push
inc
rolb
daa
push
xchg
inc
jecxz
stc
xchg
es
sub
repnz
cmpsb
clc
mov
rclb
mov
lahf
jnp
out
shlb
sbb
std
sahf
lods
fwait
and
call
mov
pusha
hlt
sub
cwtl
mov
xchg
mov
cmp
popa
mov
mov
push
movsb
mov
mov
pop
inc
je
inc
aaa
push
jge
mov
xor
add
jnp
fmull
call
lds
mov
dec
clc
loopne
mov
jge
xor
xchg
insl
cmpsb
ret
xor
mov
cmp
adc
cs
ljmp
repnz
rclb
mov
mov
add
cwtl
mov
shrb
cli
and
bound
or
mov
mov
inc
testl
js
fidivs
cs
mov
jl
fldenv
xchg
popf
push
insl
inc
insb
mov
repnz
pop
std
sbb
pushl
stc
dec
and
inc
add
mov
fnsave
mov
clc
cmp
sbb
or
inc
jecxz
push
mov
lods
es
cs
loope
ds
and
mov
in
cmp
js
or
pop
cld
or
add
sub
imul
test
jg
imul
xchg
sub
and
popa
jg
lea
divb
iret
sahf
emms
pop
push
inc
cmp
add
bound
adc
movsb
shrb
iret
sbb
sub
xchg
mov
mov
adcb
sbbl
and
lahf
imul
ret
fdivrl
add
lcall
pop
jge
leave
jb
adc
and
xchg
xchg
mov
shll
aaa
clc
and
je
cmc
incl
mov
push
out
and
push
pop
fs
scas
and
movsl
inc
ja
mov
dec
je
sub
xor
inc
or
iret
insb
mov
sub
in
and
aam
insb
sub
pop
into
addr16
fists
mov
jnp
mov
jne
adc
out
stos
xchg
pusha
add
mov
mov
add
hlt
push
iret
jmp
dec
call
push
call
aas
ljmp
aas
shlb
out
sub
xchg
bound
mov
or
push
fs
pushl
out
add
ss
and
mov
lcall
fsts
and
add
fcomip
add
lods
lahf
cltd
or
xor
insl
mov
insl
and
sbb
lfs
nop
dec
sti
ret
pushl
clc
inc
fcomp
insb
ret
cwtl
pusha
test
test
push
or
mov
xor
sub
and
pop
add
in
aad
jmp
add
inc
jg
add
js
leave
iret
jp
arpl
les
sub
outsb
add
incl
jmp
jo
cmp
dec
mov
test
iret
cld
mov
adc
jge
std
add
mov
cld
inc
cmp
repz
sub
mov
inc
loopne
adcb
mov
or
outsl
sbb
sbb
aaa
ret
inc
mov
sbb
push
call
xchg
incb
fdivrl
out
jb
rep
mov
loopne
jne
fwait
test
shll
add
outsl
pop
adc
fwait
or
pusha
add
pop
add
or
push
hlt
das
push
rolb
sub
add
into
incl
sbb
and
mov
scas
pop
push
pop
jne
jae
jmp
rorb
sub
inc
sbb
pop
add
mov
ss
inc
fisubrs
xchg
nop
ret
cmp
notb
cld
pop
divb
push
mov
mov
fdivp
in
adc
push
test
shlb
cmp
clc
aam
push
int3
inc
cld
xchg
mov
xchg
shrb
ljmp
jg
mov
inc
add
scas
xor
mov
out
je
push
push
aam
inc
mov
clc
loope
inc
or
inc
cmp
push
lret
sub
addl
jp
jecxz
ljmp
push
out
in
sub
add
dec
scas
lods
movl
imul
inc
jg
xor
pop
enter
dec
scas
add
mov
ja
cli
fcmovbe
mov
repnz
pop
adc
push
test
pushl
fsubs
dec
sarb
pop
cmp
xchg
xchg
fs
mov
xlat
xor
push
sub
sbb
outsl
cmp
pop
push
push
test
mov
adc
andl
jmp
pop
frstor
mov
fdivrl
mov
addr16
dec
lods
mov
cli
ret
pop
pop
mov
dec
xor
lahf
add
ret
sbb
sub
dec
sub
mov
loop
mov
mov
mov
pusha
pop
movsl
xchg
sbb
incl
jp
imul
xor
mov
and
sbb
test
ljmp
loope
mov
xchg
jp
ss
pop
daa
jp
mov
adc
jnp
jb
dec
ljmp
sti
sbb
inc
test
inc
pop
stc
dec
inc
push
in
add
pushf
pop
jns
es
cmp
or
loop
cwtl
mov
mov
das
es
jne
mov
filds
mov
popf
imul
je
xor
mov
mov
data16
pop
out
outsb
loope
push
lods
call
in
pop
push
pusha
shl
or
adc
fnstsw
pop
mov
mov
adc
mov
ret
mov
repz
pop
sub
xchg
aam
decl
and
cwtl
push
sub
js
inc
sbbb
cli
loopne
rcrl
pop
loopne
or
lods
mov
add
insb
mov
push
das
je
int3
and
in
fbld
fwait
and
data16
inc
cmp
xchg
xor
shrl
jle
sub
xor
in
and
fistl
je
popa
adc
dec
jge
test
dec
jg
pop
sbb
add
clc
fsubrl
es
stc
add
jb
push
inc
push
in
push
add
lock
int3
add
int3
pop
leave
stos
mov
outsb
adc
cwtl
sub
sbb
xchg
outsl
lahf
cmp
add
xchg
push
sbb
shr
cmpb
jno
decb
negl
add
imul
or
pop
sbb
lods
lock
repnz
xchg
or
arpl
xor
roll
jne
fldenv
pushf
faddl
into
jmp
aam
clc
mov
sbb
push
and
push
push
cmp
xor
mov
mov
and
mov
aaa
and
cltd
jne
nop
inc
cltd
mov
cmpsl
sbb
hlt
mov
cmp
jl
mov
push
movsb
push
mov
jg
jp
add
xchg
fnstsw
inc
jne
das
leave
xor
aaa
and
add
fildll
and
sbb
adc
pop
adc
mov
dec
push
or
das
adc
push
fcomip
decb
xchg
cmp
and
and
cmp
push
fwait
sbb
mov
lahf
bnd
mov
add
aaa
pop
dec
movsl
bnd
cld
jns
imul
and
lds
into
fcomip
adc
std
adc
clc
add
loop
mov
negb
inc
add
inc
rcrb
fimuls
jbe
or
stos
mov
inc
and
push
fsubrp
xchg
jmp
std
sub
sub
push
ret
mov
mov
push
add
add
sub
ds
int3
outsl
idivl
scas
out
cmpsl
mov
mov
push
arpl
cmp
mov
sub
repnz
mov
or
dec
in
push
pop
gs
sbb
cbtw
out
loope
mov
rolb
mov
int3
cs
add
dec
rol
sub
mov
jecxz
daa
daa
movsl
enter
jg
lock
divl
in
mov
ds
icebp
and
xor
mov
push
and
fcmovbe
and
hlt
int3
mov
add
loopne
xchg
lea
fdivl
mov
mov
out
push
outsb
xchg
inc
pop
fdivr
add
movb
pusha
ja
lods
in
test
insl
lock
or
jns
pop
mov
xchg
xor
jl
pop
xchg
je
movsb
jae
sub
movsl
fisubs
or
in
xor
sahf
aad
cmp
adc
arpl
sbb
mov
and
in
cwtl
daa
or
clc
pop
push
mov
shrl
jp
xor
call
je
dec
je
push
es
lock
divb
sbb
data16
sbb
mov
hlt
xor
push
call
and
mov
lahf
pop
push
nop
mov
dec
add
pop
mov
loope
sbbl
in
ja
inc
je
xor
cli
mov
enter
mov
xor
ret
jecxz
pop
fdiv
movl
lcall
out
dec
jmp
pop
xor
push
push
arpl
fisttps
inc
and
out
rcr
pop
ret
mov
scas
sub
mov
pop
sarb
lock
and
inc
and
jo
gs
add
test
js
inc
hlt
test
or
or
rorl
scas
mov
fbld
push
test
push
xchg
or
loopne
sub
cmp
add
cmp
cmp
cltd
or
push
out
and
imul
push
lock
jg
xor
push
xor
stc
enter
jbe
clc
mov
jb
pop
cmp
sbb
or
jmp
jecxz
and
ror
pop
inc
xchg
imull
test
push
stc
push
clc
sbb
inc
fs
add
ret
jl
cmp
rclb
mov
adc
sbb
xor
ljmp
pop
jbe
jp
imul
or
pop
and
inc
mov
leave
sub
test
je
ret
jl
cmp
cmp
inc
add
sbb
stc
stc
xchg
test
push
sub
inc
jbe
les
adcl
push
mov
clc
jecxz
int
or
int3
addr16
inc
test
mov
push
add
cs
rorb
adc
test
jg
ds
cmpsb
mov
add
sbb
repnz
inc
loopne
dec
jmp
testb
repnz
xor
fimuls
sarb
add
popf
push
shl
sbbb
add
in
shl
dec
push
pop
cmpb
imulb
movl
lcall
out
sgdtl
xor
cmp
sub
mov
pop
xor
push
dec
gs
xchg
adc
xchg
cmpsl
cmpl
sub
inc
mov
jp
or
loop
aaa
push
ret
pop
ljmp
dec
fcomps
push
ss
insb
lcall
and
daa
cwtl
add
push
mov
shrl
in
bound
divb
test
jbe
dec
mov
sti
movsb
or
push
mov
xor
mov
push
pop
sub
inc
jne
test
push
or
incl
ret
jge
xchg
js
jb
loop
int
add
cmc
dec
call
or
jbe
jno
inc
pop
je
dec
push
arpl
pop
mov
bnd
movsl
rcl
pop
cli
adcb
or
xor
lds
movsb
xlat
mov
cmp
pop
xchg
xor
cs
push
mov
repz
ds
ljmp
sbb
rcll
mov
xchg
push
add
sbb
add
inc
adc
cmpsl
cmp
cmpsb
pop
addb
cwtl
adc
xchg
inc
repnz
xchg
cmp
rclb
pop
mov
xchg
adc
fists
ficoml
xor
inc
xor
mov
pop
adc
add
jo
dec
or
push
pop
ljmp
adc
loopne
adc
mov
or
in
inc
push
xor
fcomip
test
xor
adc
cmp
loop
test
incb
mov
jb
push
pop
mov
fbstp
or
das
lret
pop
es
add
flds
das
clc
call
orb
std
push
mov
dec
fcoms
add
movsb
inc
mov
lahf
sub
add
jne
rcrb
and
inc
xchg
mov
push
or
jo
xor
jl
sub
pop
icebp
fwait
xor
and
jnp
or
inc
mov
add
mov
xchg
cwtl
insb
inc
mov
popf
add
xchg
sar
add
into
bts
or
inc
aas
idivb
js
pop
mov
pop
push
sub
xor
dec
pop
popa
or
pop
nop
mov
jns
dec
push
cs
adc
out
in
dec
dec
sub
ret
cmp
push
shl
jno
dec
in
pop
lods
loopne
pop
fsubrs
push
adc
ljmp
movb
icebp
lcall
lds
lret
xor
jl
fwait
inc
movsb
stos
jp
je
sub
cmpsb
popa
insb
and
sbb
mov
xchg
sbbb
inc
outsl
mov
pop
sbb
loopne
xchg
or
xchg
mov
sbb
sbb
or
insb
hlt
rorl
jecxz
xchg
pop
je
mov
xor
aas
outsb
inc
aaa
xor
sub
dec
popf
pop
dec
mov
cmpsb
es
je
adc
enter
fisttpll
push
ficompl
repnz
sub
int
enter
fildl
je
dec
jg
jae
mov
cmp
push
mov
mov
inc
into
and
and
adc
stos
mov
bound
push
and
cwtl
add
aaa
fsubr
xchg
adc
test
test
shll
dec
in
pop
mov
pop
cltd
mov
lcall
xchg
fdivrs
decl
jl
lea
sub
mov
jb
cltd
add
jnp
jmp
adc
aam
popa
push
push
dec
adc
movsb
mov
mov
mov
decl
scas
clc
pop
std
data16
mov
and
loopne
call
or
roll
in
mov
js
clc
inc
pop
hlt
das
add
cmp
filds
sub
insl
lock
mov
sbb
sub
pop
xchg
test
in
inc
jne
sub
outsl
add
jnp
std
sub
std
es
pop
repnz
sbb
subl
aam
xor
mov
cmpsl
push
pop
jb
cmove
mov
cmpsb
lahf
div
shrl
stc
sbb
in
or
loop
addl
and
jg
xchg
fbstp
lods
rorb
jo
push
cmpsb
push
inc
int3
mov
dec
jp
jmp
mov
addb
mov
mov
xorl
clc
xchg
mov
mov
or
xchg
adc
call
xchg
movb
mov
jmp
ljmp
std
adc
ljmp
jno
push
lods
in
mov
in
shl
lcall
int
out
aad
mov
ss
xorb
and
rol
sub
push
aaa
imul
ss
lock
incl
dec
jl
jno
aaa
or
push
sub
pop
lds
mov
fprem
xorb
dec
push
lea
fwait
push
dec
sub
pop
je
push
or
fiaddl
aad
mov
and
or
es
mov
scas
mov
mov
pop
icebp
inc
jne
into
jbe
pusha
push
loopne
mov
aas
inc
cltd
mov
push
adc
clc
mov
xchg
cmp
pop
adc
test
sahf
adcb
dec
rcrb
mov
scas
mov
arpl
jg
and
mov
pop
sti
mov
push
pushf
add
push
std
or
out
pop
ds
adc
sub
aad
dec
mov
int3
not
xchg
add
mov
push
adc
mov
mov
fcoml
lods
nop
in
xchg
outsl
jg
icebp
out
test
pop
icebp
xchg
imul
inc
or
pop
or
int3
nop
inc
pop
call
mov
sub
inc
jo
cld
pushf
jp
cmp
sbbl
cld
mov
sub
inc
sub
add
sahf
jecxz
scas
xchg
int
inc
jae
fiadds
pushf
into
loop
jns
mov
outsb
add
addr16
call
out
xor
insb
add
jb
cmpsl
sbb
sub
add
fadds
sub
nop
das
jg
inc
fbld
iret
shrb
xlat
adc
adc
hlt
mov
jg
push
mov
repnz
cld
orl
fistl
jmp
add
sub
add
enter
pop
cwtl
dec
lea
jecxz
mov
push
in
aas
repnz
cmp
pop
cld
mov
lahf
push
xchg
push
bound
dec
ja
hlt
sbbl
mov
test
dec
sub
mov
lea
pop
pop
xor
int
xor
cmpsl
ss
enter
mov
scas
or
int3
mov
rol
mov
jg
outsl
es
or
and
loopne
pusha
or
sub
mov
daa
repz
dec
popl
inc
ljmp
jmp
and
dec
lock
jno
sub
add
cli
sbb
xchg
sbb
fisttpll
insb
mov
dec
add
and
scas
clc
lock
cmpl
xchg
inc
cltd
push
test
sub
fistpll
pushf
inc
add
xor
int
insl
xor
pop
icebp
pop
loopne
mov
push
adc
ss
pop
add
cmp
arpl
and
out
sbb
pop
lock
xlat
dec
sub
jmp
xchg
inc
dec
push
push
rclb
test
out
cli
call
mov
adc
enter
pop
add
add
aad
decb
push
mov
jge
inc
jnp
ds
std
stos
mov
insl
dec
inc
push
rorb
cmpb
push
cmp
subb
mov
dec
push
cmc
mov
or
push
mov
push
cmpsb
movsb
insb
stos
rol
out
add
or
ficompl
inc
cli
add
or
push
jns
mov
add
jae
add
or
jo
inc
cmp
fisttpl
jno
inc
dec
push
add
clc
sub
add
sar
xchg
adc
pop
mov
cli
mov
pushf
add
sub
mov
mov
sahf
cs
pop
out
movsb
aaa
push
mov
mov
add
cli
mov
pushf
dec
imul
push
in
jae
xchg
loopne
cmpsl
es
sub
lock
repz
in
popf
xchg
add
bound
stos
shrl
pop
scas
mov
shrb
push
add
add
add
mov
divb
lods
dec
jecxz
pop
xchg
jo
cmp
add
lock
pop
hlt
cmp
je
inc
notl
or
mov
add
add
lea
pop
or
sti
stc
xchg
cmpl
adc
jp
mov
push
dec
and
xchg
pop
jnp
dec
into
mov
repnz
call
jg
insb
add
adc
dec
or
xchg
add
ret
lcall
bound
repz
inc
xor
mov
cmpsb
aad
mov
nop
mov
push
mov
pop
fmul
xor
aam
jle
jmp
inc
mov
ficoml
sub
jl
xchg
mov
subl
ret
int3
js
jb
lods
test
or
cmp
fbld
cmp
ljmp
decb
insl
add
call
ss
in
mov
and
bound
lahf
mov
push
jb
popf
incl
add
loope
mov
test
and
sub
cld
scas
ja
cwtl
out
int3
inc
andb
ret
sbb
lcall
cmp
and
jo
adc
iret
adc
sbb
cmp
sbb
into
loopne
out
movsl
and
jg
sub
movsb
add
popa
and
cwtl
leave
int3
andb
pop
ficompl
add
loop
gs
cmp
adc
push
clc
sub
xor
xor
incb
mov
dec
lea
popf
jmp
cmc
inc
ss
inc
sub
ja
adc
lea
and
stos
pushf
mov
sbb
fs
pop
clc
nop
lods
decl
sbbl
mov
aam
es
sbbb
idiv
push
jne
fs
in
decl
in
mov
dec
push
pop
ret
aam
pop
dec
insb
int3
and
cs
add
mov
sub
adc
push
mov
mov
fsubl
add
dec
cmc
gs
cmc
jg
es
test
rcrb
leave
lods
sbb
cmpsl
lock
ljmp
cld
sbb
cli
jmp
jb
adc
mov
ljmp
incl
es
cli
outsl
add
testl
inc
and
test
inc
jmp
sub
xor
xchg
jge
test
ror
hlt
xchg
push
fs
inc
dec
lods
cli
inc
fdivs
add
lahf
in
push
push
out
scas
and
xlat
pop
or
add
sub
push
lcall
std
lret
push
sbb
and
add
jp
push
sub
imul
inc
cmp
sbb
js
lret
mov
stos
outsb
push
lcall
mov
pusha
das
xor
lock
in
and
loop
or
adc
arpl
jo
scas
add
inc
repnz
jge
ror
insb
mov
xor
sub
cltd
popf
pusha
sub
lock
cld
mov
popf
addr16
ret
lods
rol
loop
ret
insl
pop
or
cmp
cmp
sahf
adc
mov
jnp
ja
roll
or
sub
incl
ficoms
pushf
lods
pusha
pop
test
imul
jl
cli
ret
adc
pop
and
mov
pop
imul
or
push
sbb
add
dec
arpl
fimuls
ret
and
mov
add
js
mov
dec
cli
ss
aam
mov
jnp
pop
sub
dec
or
xchg
fsubs
pop
add
popa
scas
outsl
dec
out
fsubrl
lret
popa
and
stos
fstpt
sub
xor
adc
lret
test
add
cmp
adc
enter
sbb
test
les
and
dec
addb
push
add
stos
aad
add
xchg
cld
sbb
mov
and
jmp
fists
pop
data16
arpl
and
xchg
hlt
insb
rcl
stc
jg
mov
lock
inc
push
es
adc
push
fdivrl
cli
rorb
cmc
dec
fcompl
mov
adc
xor
loopne,pn
jmp
scas
xchg
out
xchg
test
test
jp
mov
inc
inc
adc
popf
pop
pop
adc
jo
add
orl
out
aaa
test
mov
das
lds
mov
xchg
mov
or
mov
inc
cs
push
add
je
cwtl
loop
adc
push
jge
jl
incl
ljmp
fdivrp
fs
aas
xor
mov
sub
dec
add
add
int3
int
std
pushf
cmc
jns
dec
jle
mov
mov
adc
test
cmpsb
cmp
jecxz
jb
movb
test
cmp
inc
mov
add
or
xor
mov
inc
xor
mov
lods
aaa
cmp
test
push
daa
cmp
jp
incl
leave
cmp
aam
inc
sub
dec
cmp
sub
dec
idiv
add
pop
cmp
fiadds
insb
pusha
adc
incl
hlt
and
test
mov
sbb
and
push
cmp
in
jl
dec
push
out
clc
lcall
add
es
xchg
xor
stc
xchg
movsb
sbb
mov
sbb
xor
jb
clc
out
incl
inc
mov
xchg
cmp
int3
sbb
adc
incb
sbb
inc
lock
mov
mov
loope
lds
ja
dec
fwait
nop
add
or
adc
jno
inc
imul
je
jg
aas
std
push
and
mov
sbb
xor
cmp
test
push
add
mov
inc
cmp
sbbl
jmp
push
mov
cld
jo
and
push
sub
outsb
xchg
xchg
ret
decl
pop
js
xchg
push
lret
hlt
adc
push
movsl
mov
les
push
lea
mov
ret
dec
or
adc
or
sub
inc
mov
rcrb
outsb
xor
adc
jbe
clc
incl
incl
rclb
and
push
push
mov
and
cmp
call
cld
sar
mov
jb
sub
shl
repnz
jne
push
insb
incl
insb
lods
or
ret
cmc
jl
xchg
jmp
imul
testb
fistpll
mov
call
es
ljmp
mov
push
and
push
push
xchg
push
dec
nop
ret
pushl
enter
xlat
out
loopne
push
shrb
sub
or
xor
or
pusha
jo
icebp
jmp
pusha
cli
addb
movsb
lahf
imul
cwtl
sbb
pop
cmc
incl
out
sub
loope
add
insl
dec
pop
cmp
cld
incl
outsl
push
xor
adc
sbb
lds
inc
inc
sbb
push
pop
mov
cld
xchg
jne
push
xchg
ret
pushf
push
faddp
mov
dec
hlt
sub
hlt
push
xor
sub
jae
push
or
enter
call
adc
cmp
es
or
adc
std
test
stos
mov
fadds
xor
push
add
es
push
loop
push
dec
ret
mov
decl
movsl
mov
stc
rorl
clc
pop
mov
inc
jg
test
xor
scas
out
shll
cli
jns
out
das
inc
inc
and
jmp
or
addr16
add
std
jl
push
in
xchg
adc
mov
sbb
xchg
xor
ret
stos
negb
add
mov
cmpsb
scas
ja
mov
mov
pop
and
stc
pushf
lahf
add
push
adc
adc
and
test
popf
iret
or
pop
and
xor
jns
sub
lods
loop
repnz
xchg
inc
loopne
mov
jns
cli
mov
cmp
jno
jg
mov
mov
enter
stc
aas
repnz
ja
jecxz
arpl
repz
or
pop
pop
sbb
xor
add
sub
sub
pop
mov
and
mov
clc
sub
sbb
and
dec
stos
add
cmpsb
cwtl
stos
ljmp
std
xchg
xor
sbb
pop
add
lods
lock
mov
cmp
dec
lock
sarl
add
stos
std
mov
pop
adc
pop
and
in
add
push
xchg
in
sbb
mov
inc
mov
aam
add
std
or
je
jp
je
inc
lds
clc
or
sub
call
mov
push
xor
push
jl
out
clc
jmp
jo
cmp
pop
cmp
inc
add
fwait
decl
sti
push
rol
icebp
add
or
fisttpll
pop
subb
lock
std
cmc
and
inc
inc
mov
cmpb
loope
or
add
pop
test
ret
or
das
cli
stos
adc
sub
xchg
out
jle
mov
fs
pushl
std
add
push
push
sub
orb
sbb
pop
outsb
sub
jp
mov
mov
mov
decl
and
push
mov
and
aad
addr16
fisubs
scas
fwait
icebp
outsl
push
inc
dec
rorb
fadds
sar
fbld
cmp
orl
mov
in
inc
hlt
out
aam
jg
mov
int3
fs
mov
and
shlb
push
pop
add
mov
push
push
add
daa
mov
out
sub
loope
cs
add
jmp
push
cmp
aam
leave
adc
rcr
shrb
js
popa
cmp
fdivrs
add
pop
icebp
jg
test
push
rcrl
lcall
jl
sahf
stos
xchg
aad
in
das
add
fdivrl
and
icebp
mov
repnz
clc
inc
rorb
dec
loope
loope
rorb
lret
push
pop
adc
mov
cmp
test
insb
mov
js,pn
dec
ds
ljmp
fimuls
sti
lods
cli
mov
cltd
adc
push
add
xor
pop
adc
js
aas
jnp
jl
loop
add
scas
jne
pop
jae
and
or
inc
int
adc
cld
inc
add
jnp
loopne
inc
inc
cmp
in
lds
cltd
out
scas
mov
repz
decl
inc
ja
bound
jmp
inc
in
xchg
adc
sub
dec
in
scas
sub
cmpsb
adc
xor
jmp
out
mov
fs
dec
jge
stos
jl
inc
fildl
cmp
push
jmp
test
add
ja
loopne
lds
cwtl
jecxz
sbb
insl
outsl
movsb
repnz
jno
push
mov
inc
fistl
adc
ds
or
add
inc
add
shll
xchg
pop
pushf
cwtl
jg
mov
rol
fists
add
xor
shl
mov
rcrb
push
pop
loop
sub
test
in
jae
addr16
rcrb
ficomps
mov
movsb
adc
pusha
out
mov
pop
sbb
jmp
fsubs
mov
aas
aam
mov
jp
scas
outsl
stc
nop
adc
imul
push
mov
or
dec
in
ss
or
loop
mov
repnz
fsubr
pop
icebp
movsl
js
cwtl
and
or
mov
sub
sub
clc
outsl
sbb
mov
icebp
cmp
je
imul
sti
call
and
sub
pusha
scas
loop
jecxz
pop
mov
jecxz
add
xlat
cmp
jle
mov
sbb
inc
push
add
sbb
lea
fadds
xchg
fwait
push
lods
xchg
jg
incb
push
lods
mov
jo
jbe
loopne
sahf
jp
clc
mov
jno
dec
into
or
stos
test
das
ret
cld
dec
push
pop
inc
ljmp
xchg
xchg
pop
lahf
icebp
pop
insl
lds
std
aaa
rorl
mov
pop
or
cmp
add
das
mov
pop
and
mov
add
out
xchg
sbb
jecxz
push
mov
call
ds
loope
xor
push
scas
sbb
repnz
adc
in
aas
push
sub
and
imul
int
dec
mov
fistps
sbb
popa
int3
ds
ljmp
sarl
and
and
or
rcll
out
fistpl
mov
shll
cli
rcrb
add
daa
rcrb
mov
movsb
adc
mov
xchg
test
xlat
mov
outsb
mov
imul
sahf
bswap
and
std
loope
jmp
shrl
es
loope
jl
cmpb
dec
pop
xorl
into
jb
sub
mov
ret
inc
cmpl
and
insl
push
popl
mov
mov
mov
adc
and
int3
pop
outsl
cli
adc
add
imul
fnstenv
jge
mov
push
sub
add
or
das
ss
sub
andb
call
push
fisubrs
std
lods
add
nop
movsb
addr16
sbb
push
mov
hlt
mov
cli
test
pop
rorb
cld
call
xor
stos
in
cmp
xor
add
cmp
xchg
cmpsl
sbb
sub
cmp
or
aaa
xor
stos
sub
inc
adc
push
sbb
jnp
mov
aaa
dec
addb
add
cmp
adc
insb
orb
cmp
cli
pop
or
hlt
add
je
xchg
rcll
adc
pop
imul
mov
pusha
mov
loop
popf
jbe
mov
adc
jbe
mov
adc
add
mov
es
stos
sahf
adc
movsl
lods
clc
das
sbb
lea
mov
nop
add
pop
mov
into
icebp
add
loope
das
pop
daa
mov
jmp
arpl
pop
popa
mov
jo
or
aam
jo
adc
fnsave
sbb
jg
out
xchg
xchg
dec
adc
dec
lret
mov
es
les
stos
movsb
jp
and
ljmp
and
lods
ds
mov
lods
sub
lcall
xchg
dec
push
jp
xchg
jge
xor
pushl
inc
xchg
dec
repz
lock
cmp
mov
dec
fnstcw
add
int3
dec
fildll
cmp
xchg
mul
jg
push
push
mov
int
gs
inc
clc
fildl
jb
jle
dec
into
js
aam
sbb
adc
or
loopne
adc
jg
push
into
mov
or
push
or
cmp
aas
and
fucomp
in
mov
inc
iret
pop
or
incl
std
sub
or
cmc
faddl
lahf
scas
mov
add
add
or
je
shll
jp
fcomi
pop
loopne
ss
nop
push
push
stc
dec
hlt
xchg
movsb
and
clc
mov
incl
aas
or
add
test
push
mov
add
lock
cmp
in
jo
jecxz
sub
aas
rcl
scas
mov
out
sub
sub
repnz
jno
nop
xor
adc
xchg
bound
test
jbe
rcr
outsl
out
cltd
jl
call
imul
pusha
mull
sub
push
in
cmpsl
inc
sbb
das
dec
clc
mov
xchg
sbb
lcall
and
ss
inc
push
xor
cmp
lock
je
and
out
iret
std
inc
outsl
incb
jo
insb
mov
or
inc
test
lret
and
pop
hlt
mov
xchg
cmpl
xorb
test
add
adc
call
clc
shl
inc
popa
sub
sbb
jb
mov
cmc
xchg
mov
add
mov
inc
mov
decl
lock
and
cmpsb
add
icebp
decl
insl
inc
movsb
pop
adc
mov
ror
loop
mov
xor
out
push
cmp
mov
mov
stos
push
inc
push
mov
daa
sbb
mov
ret
test
mov
gs
add
xor
mov
roll
imull
iret
mov
ret
js
out
divl
cltd
mov
push
outsl
lods
jg
or
lcall
adc
jg
cmp
fldt
mov
or
dec
mov
mov
insb
push
enter
inc
jp
gs
xor
jp
cmc
outsl
mov
aam
mov
adc
adc
mov
ret
inc
jg
push
cld
popa
mov
outsb
mov
call
mov
pushl
inc
imul
test
xchg
inc
add
mov
jecxz
in
pop
push
cmp
xor
fiaddl
push
and
xchg
inc
aam
xchg
cmp
push
or
lea
adc
sub
inc
sti
add
inc
jmp
icebp
xor
arpl
aam
sub
fbld
push
add
lods
sahf
lock
pop
or
test
pop
or
aam
pop
call
clc
mov
mov
pushf
dec
loop
cli
and
loope
mov
ret
jmp
jl
loopne
repz
dec
xchg
push
push
int
movsl
xor
sub
push
push
sub
pushf
lret
cmp
daa
sahf
adc
test
pop
loopne
mov
or
je
outsb
jb
test
ret
inc
xchg
shlb
cwtl
mov
jne
push
into
push
fcmovu
scas
cmpsl
jbe
or
push
inc
pop
jno
jle
cmp
add
stc
pop
cmc
ja
mov
mov
xor
scas
jle
or
jo
push
clc
fwait
cs
imul
mov
pop
sbb
test
daa
insb
movsb
std
or
fprem
mov
push
xchg
jae
sbb
hlt
sub
in
dec
sub
dec
and
ret
js
ds
mov
shll
inc
outsl
mov
jmp
xor
stos
clc
inc
test
stos
adc
bound
pop
aaa
test
push
loopne
jno
jbe
or
sub
add
push
addr16
arpl
lods
cli
call
nop
push
es
add
sbb
inc
leave
xchg
insl
jp
sarb
cmc
and
push
xchg
bound
push
pop
inc
pop
add
js
call
call
lods
cmpsb
lcall
dec
inc
inc
dec
mov
xlat
jo
mov
aam
into
outsb
cwtl
mov
mov
mov
data16
dec
icebp
jg
mov
add
lcall
push
mov
mov
xchg
dec
mov
add
push
xchg
aaa
lcall
repnz
push
adc
clc
insb
shlb
pop
mov
push
mov
and
and
cmpsb
mov
sbb
sbb
pop
insb
pop
test
push
jbe
mov
aad
sbb
ficompl
mov
cmp
jns
int3
mov
sahf
add
or
outsb
aam
mov
adc
adc
pop
push
adc
enter
je
loope
and
and
inc
cwtl
adc
icebp
dec
js
xor
dec
add
insb
stos
mov
lock
loope
mov
dec
and
add
mov
sbb
xchg
adc
push
xchg
or
icebp
or
fdivrs
ja
fsubp
vcvttps2dq
push
cli
xchg
bound
loopne
les
xor
mov
push
in
sub
movsb
cmc
pop
push
in
add
xor
dec
or
adc
incl
scas
jl
sbb
xor
cmp
xchg
das
mov
jo
in
fbstp
sahf
mov
imul
loop
ret
and
lret
mov
test
mov
cs
push
cmp
addr16
mov
jo
stc
inc
xchg
icebp
lea
xor
lock
push
mov
mov
rol
push
or
mov
dec
aaa
jl
pusha
and
cltd
rcrb
lcall
inc
mov
aam
jecxz
push
adc
dec
pushf
cmp
push
in
adc
int3
and
mov
pop
test
push
cli
daa
xchg
inc
fstpt
sbb
jno
xor
lcall
sub
push
sbb
pusha
jl
push
sub
adc
add
cld
and
xor
xchg
jle
jo
sbb
xor
into
and
mov
push
data16
sub
mov
clc
mov
pushl
inc
fsts
clc
adc
sub
cld
cmpsb
daa
push
push
mov
sub
sbb
add
popf
lahf
push
gs
jae
stos
subl
ret
js
ljmp
cmpb
mov
xchg
mov
out
clc
ret
stos
pop
shlb
pop
cs
loop
pop
push
jbe
sub
fidivs
sbb
and
mov
jle
loop
ljmp
test
mov
out
adc
and
cwtl
add
out
fimull
es
icebp
cld
dec
aad
aas
xchg
aas
dec
fs
sub
inc
ret
in
dec
stos
adc
fildll
jne
addl
out
jle
lods
movsl
jg
lds
jns
or
std
ljmp
push
sub
sub
or
mov
pop
sub
ret
sbb
xchg
pop
adc
mov
je
pusha
call
or
mov
in
jbe
sub
ljmp
xchg
pop
jbe
adc
roll
push
in
xchg
mov
add
incl
loop
fadd
iret
lret
inc
lret
sbb
cmpsb
fs
ret
mov
popa
into
hlt
test
jmp
xor
or
lock
push
push
pushf
sub
jns
xchg
cs
mov
loopne
jnp
jns
push
jecxz
pushl
std
movsb
shlb
add
push
dec
or
pop
cmpsb
mov
xchg
sti
cwtl
pop
rcll
ja
cltd
push
adc
dec
in
flds
jl
and
pop
cli
push
inc
add
xchg
cmpsb
or
mov
rclb
sbb
in
mov
nop
les
add
dec
mov
imul
sub
and
add
pop
xor
cmp
adc
mov
or
ja
loope
add
push
cmc
or
cmc
mov
pop
lcall
and
xchg
mov
outsb
aas
popf
or
mov
and
jl
je
int3
add
cs
mov
sbb
sbb
popl
test
sub
or
call
sbb
pusha
push
xchg
imul
mov
push
sbb
out
lods
aaa
jg
mov
inc
dec
push
mov
push
jg
xor
aam
js
call
cli
mov
sarb
ret
cmp
dec
rcrb
call
gs
xchg
in
fdivs
push
add
pop
dec
sbb
loopne
lcall
loopne
jb
dec
cmp
orb
hlt
aam
rolb
out
adc
fcomip
roll
mov
mov
daa
sbb
dec
cmp
pop
fcoms
fcoms
test
stc
mov
call
decl
sbb
mov
push
inc
cmpsb
shlb
lret
aaa
xor
lret
and
lds
decl
sub
xor
mov
xchg
loopne
popa
xchg
sbb
jle
dec
and
loopne
aaa
jne
inc
sarl
xchg
mov
mov
or
mov
pop
ret
jb
cmpsb
aam
div
xor
mov
mov
push
loope
inc
push
jae
sbb
add
add
lret
iret
add
and
push
mov
dec
in
sub
mov
movsb
dec
scas
imul
int
jg
mov
jo
lahf
cmpl
rorb
and
lcall
imul
mov
divl
and
adc
mov
shrb
jg
jg
xor
mov
mov
inc
or
leave
mov
icebp
pop
stos
cli
or
loope
pop
mov
dec
daa
xchg
fdivr
dec
jg
sbb
or
testb
ffree
ljmp
mov
push
jo
daa
jp
add
std
pusha
sbb
mov
jne
test
and
scas
add
jno
mov
adc
jp
orl
pop
sarl
pop
rolb
jne
pusha
jp
add
call
clc
mov
cmpb
xchg
imul
test
sbb
sub
add
mov
or
out
adc
cmp
xorb
inc
into
xor
lret
lds
sar
or
int3
icebp
pop
pop
js
loopne
js
sub
fisttpl
push
xchg
sar
sub
inc
out
cmp
mov
popa
clc
jo
jb
andb
loope
add
push
incl
xlat
inc
adc
sbb
mov
cmpb
pop
bound
decb
test
clc
and
lods
adc
aaa
adc
jnp
adc
pop
cld
call
xor
or
cmp
jb
mov
inc
sub
mov
lcall
das
sub
sbb
mov
jg
sbb
adc
ret
inc
push
int3
mov
push
xchg
xor
mov
xchg
cmc
lods
jo
sbb
insl
sti
and
ja
cld
out
stos
test
adc
call
cltd
shlb
pop
out
jge
aaa
pop
pop
ret
sub
jb
xlat
jl
mov
sbb
shll
inc
and
push
sbbb
mov
jmp
data16
push
jg
adc
inc
mov
pop
adc
call
cmp
sub
and
adc
pushl
fisubrs
imul
and
cmp
sbb
pop
fidivrs
pop
aaa
or
mov
inc
mov
aad
dec
mov
cli
push
scas
js
lods
arpl
mov
ss
hlt
lret
xor
push
push
jl
xor
pusha
ds
mov
iret
and
xor
aas
inc
in
scas
loopne
clc
mov
repnz
pushf
hlt
or
cmp
pusha
test
ficompl
clc
mov
pushl
sbb
stc
imul
push
lock
xor
icebp
inc
cmp
stos
add
into
imul
push
mov
cmp
add
loope
ficoms
cs
mov
sub
push
out
jp
sub
mov
in
inc
push
pop
lods
inc
dec
mov
aas
fildll
and
dec
xor
fbld
add
data16
pop
aam
push
inc
out
mov
sbb
sbb
or
out
imul
sbb
jmp
or
cli
out
les
in
add
prefetch
or
decl
into
stc
mov
insl
test
add
xchg
dec
xchg
mov
out
movsl
out
sbb
push
sbb
or
xor
cld
aas
rolb
popa
adc
jmp
je
adc
add
std
pop
incl
fmul
sub
icebp
ficomps
mov
pop
test
adc
mov
or
or
dec
test
lcall
inc
filds
js
shlb
pop
adc
cld
fisttpl
insb
cld
mov
mov
mov
hlt
add
fcoms
jp
dec
xor
ja
jg
idivl
imul
call
in
ja
cmp
mov
mov
jnp
call
dec
adc
or
out
sub
iret
sahf
jae
dec
xor
jno
out
test
cmc
sbb
dec
or
pop
mov
aaa
xchg
push
icebp
jle
inc
pop
into
icebp
xchg
and
xchg
adc
loope
push
daa
ljmp
or
jne
ret
cwtl
sub
pop
pop
mov
push
adc
lret
rcll
es
mov
xlat
aam
mov
jbe
adc
shlb
or
cmp
mov
and
pop
test
addl
xor
pushf
fwait
jg
adc
push
shlb
cmc
cltd
call
xchg
pop
je
mov
mov
cmp
fwait
sbb
mov
lret
mov
pop
jp
aam
call
ja
and
stos
jg
mov
dec
xchg
int3
outsl
pop
test
cmp
xor
int
das
xchg
jnp
mov
mov
mov
adc
je
jne
adc
pusha
or
inc
cmpsl
pop
mov
mov
and
das
xchg
push
add
xor
subb
mov
adcb
dec
or
pop
std
jge
dec
add
and
or
divb
jmp
inc
inc
js
mov
jmp
adc
push
ljmp
sbb
psubsb
pusha
xor
sub
daa
push
jl
push
and
stos
inc
fs
ljmp
mov
add
jp
inc
lcall
push
sahf
loopne
and
add
add
mov
pusha
pusha
dec
jmp
jbe
dec
loope
lock
add
cmp
stos
push
mov
idivb
mov
ret
stc
sbbb
outsl
and
popa
sbb
fisubl
adc
and
scas
cs
pop
imul
sub
repz
dec
adc
adc
stos
mov
pop
inc
stos
aam
idiv
ljmp
popf
cmp
cmp
add
push
mov
mov
inc
pop
fs
das
mov
repz
sbb
push
jecxz
xor
leave
int3
nop
add
xor
or
ds
mov
jmp
inc
mov
cmp
cli
inc
hlt
movsb
out
sbb
dec
fsubr
in
in
and
test
xor
jmp
call
mov
pushf
mov
push
inc
into
fbld
cmp
dec
scas
jge
cbtw
inc
pop
cli
and
push
cld
push
mov
push
and
stos
sbb
or
pusha
add
inc
into
jnp
pop
lret
xchg
test
push
cld
incl
add
add
cli
movsl
mov
push
inc
xor
add
mov
pop
xlat
adcl
rcl
insb
shl
xchg
or
xorl
and
ljmp
sub
loop
xor
pop
pop
gs
cmpsb
or
adc
pop
jmp
lea
out
test
loopne
lock
sub
iret
les
jge
imul
add
incl
js
push
std
in
xchg
jmp
popa
clc
cli
hlt
mov
push
out
insb
mov
sub
adc
hlt
outsl
cli
in
or
test
nop
stos
shll
mov
fistpl
fwait
lcall
testb
add
aas
jbe
cs
cs
movsl
sahf
mov
cmpl
cld
jo
jb
test
and
push
shl
call
mov
add
ljmp
int
sub
inc
fimull
xor
sbb
xor
repz
add
push
decl
sar
mov
lods
cld
lock
mov
bound
adc
or
mov
out
xor
loopne
cmp
stos
movsl
leave
xor
inc
sti
fstpl
mov
pop
std
out
adc
inc
adc
stc
adc
loope
incl
fs
lods
sub
cmp
sbb
clc
sbb
jb
push
jne
cmp
stos
cmp
dec
cmc
and
pop
and
pop
xchg
lods
adc
add
mov
add
enter
cmp
pop
clc
cmpsb
or
lods
mov
jecxz
mov
nop
mov
ja
test
outsl
clc
scas
mov
sbb
jns
loope
std
ja
rclb
test
inc
inc
xchg
pop
xor
or
jo
or
and
mov
sbb
push
test
movsb
incl
xor
cmp
mov
sub
insb
enter
mov
mov
dec
push
fisttps
add
int
or
add
jl
cmpb
dec
or
jne
push
ret
ljmp
insl
xchg
insb
loop
int
mov
ss
into
add
sub
aaa
loopne
push
cwtl
inc
ds
mov
dec
pop
das
or
aaa
rolb
xor
out
mov
lret
sbb
pop
sub
inc
push
aad
enter
das
lcall
dec
rorb
mov
add
add
outsl
sbb
lock
push
push
jnp
lock
and
stos
mov
sahf
aad
shlb
aaa
in
dec
pop
data16
ljmp
jmp
push
sub
jmp
sbb
cltd
push
ffree
mov
pushf
inc
sbb
xchg
push
xchg
sbb
xchg
faddl
dec
dec
add
pminub
int3
out
xchg
inc
ja
dec
pop
pop
jl
push
sbb
add
add
xor
clc
aaa
inc
in
mov
out
pop
mov
add
mov
mov
jl
pop
fwait
xor
adc
and
sti
psubd
cmc
sbb
andb
inc
je
xchg
rolb
jnp
lea
add
jp
add
test
sub
ret
or
jmp
jle
add
pop
divb
mov
add
pushf
insb
daa
sbb
icebp
mov
stos
sub
adc
add
lret
loopne
cld
sbb
pop
out
xor
dec
sbb
sub
aad
icebp
stos
jl
in
push
pusha
xor
pavgw
rcr
rcrl
insl
jbe
push
xor
lahf
mov
mov
adc
mov
push
sbb
mov
ljmp
ds
or
push
sub
add
popa
mov
mov
pop
icebp
fbstp
jecxz
aas
neg
mov
fucomip
sub
add
mov
andl
es
scas
or
push
es
insl
pusha
and
es
ljmp
shrb
xchg
ret
xor
sbbb
or
jmp
cld
or
cwtl
js
fnstcw
stc
pop
loope
shrb
mov
rclb
push
pushl
mov
clc
ss
push
mov
push
mov
repnz
cli
inc
cmp
fwait
decl
cld
and
rcl
aas
imul
loope
mov
pop
push
sti
xlat
mov
cmp
sub
jmp
push
add
inc
adcb
into
in
lods
aam
jg
lods
lods
sub
mov
jo
jbe
xchg
dec
pop
cmpsl
sahf
stos
out
mov
sbb
dec
xor
push
add
cmp
ret
mov
or
das
sub
ja
mov
jge
and
adc
leave
inc
adc
cld
out
push
call
mov
cmp
rclb
cwtl
and
jecxz
cmpsl
aaa
movsb
scas
and
addb
and
push
dec
push
push
dec
adc
dec
jecxz
mov
movsl
cmpsb
pop
loopne
dec
and
fidivrl
cmpb
inc
lds
adc
cmc
cmp
or
out
inc
jo
sbb
or
cmp
push
gs
stc
jp
test
mov
or
pushf
add
ret
inc
add
out
pop
mov
fisttps
addr16
inc
ficompl
sbbl
push
test
orl
xchg
xchg
clc
push
ds
test
mov
pop
adc
cmp
sbb
loopne
int3
add
test
std
sub
mov
push
jg
jge
std
xor
sbb
int3
push
inc
call
out
add
xchg
adc
mov
sub
inc
pop
or
and
sbb
inc
es
icebp
and
lods
and
fistpll
pop
inc
or
andb
mov
sbb
push
icebp
mov
pop
lock
into
and
inc
aas
and
inc
mov
cmp
and
cmc
loop
shl
pusha
add
push
ret
popf
int
or
push
inc
ret
mov
imul
rcr
loopne
test
fld1
adc
inc
push
or
sahf
or
leave
shlb
xor
mov
sbb
cmp
mov
xchg
cli
jecxz
sbb
xchg
in
xchg
daa
jle
adc
in
ja
adc
push
clts
pop
push
mov
dec
pop
js
ss
adc
mov
ret
lock
mov
add
enter
cmp
push
push
incl
add
jl
and
pusha
cli
sbb
push
into
add
inc
mov
xor
icebp
in
pop
adc
movsb
sub
flds
aam
sub
mov
mov
mov
movsl
mov
imul
daa
or
xchg
sub
lock
jle
push
mov
addl
jbe
jmp
pop
ja
inc
in
and
push
pop
out
cmpsl
push
insb
jp
das
inc
les
lds
jle
imul
movsl
inc
or
popa
xlat
xorl
dec
insb
and
jp
mov
or
les
cmp
xlat
or
inc
fiadds
pop
loopne
sbb
js
add
loope
add
mov
push
mov
push
jle
enter
jmp
mov
dec
ljmp
pop
push
xchg
inc
push
add
shlb
push
lea
jb
mov
push
test
xchg
cmp
pop
cwtl
push
cmc
jo
and
xchg
pop
fdiv
ret
dec
insb
dec
gs
out
dec
adc
mov
push
push
add
sbb
loope
adc
xor
sbb
jbe
cmp
mov
adc
sub
pushf
dec
cld
daa
pop
and
mov
es
mov
xchg
mov
dec
int3
jbe
xchg
push
ds
lret
inc
add
mov
jo
push
aam
movsl
test
movsb
mov
loopne
mov
push
inc
fcmovnb
dec
das
inc
ret
imul
mov
adc
cli
popa
scas
hlt
incl
adc
adc
jbe
mov
sub
jp
jmp
addb
push
add
sbb
xchg
decl
mov
loop
out
pop
aaa
pop
and
addr16
mov
or
test
fs
icebp
sahf
fildll
es
xchg
sbb
iret
inc
cmp
cmpb
es
mov
jmp
lods
bound
ds
fs
insb
inc
stos
cmp
sbb
add
scas
lahf
lock
or
adc
push
jmp
rorl
subl
sub
adc
push
rcr
pop
fcmovbe
loope
clc
sarb
into
or
inc
shl
pop
cld
in
icebp
and
dec
iret
adc
mov
push
cld
lcall
fs
ds
inc
leave
call
out
repnz
sub
mov
ret
out
cmc
ljmp
sbb
add
add
mov
aam
pop
stc
pop
jmp
out
enter
enter
std
inc
sar
ja
loope
jmp
adc
ds
mov
ljmp
adc
clc
pop
xchg
or
jecxz
push
stos
mov
in
jno
and
sti
cld
arpl
test
pop
rorl
dec
add
fldt
subb
dec
ss
push
xchg
mov
jmp
aam
adc
push
push
pop
subb
mov
or
subb
mov
movsb
xor
xchg
test
clc
mov
movsl
sub
rcrl
jb
xor
or
mov
div
loop
mov
mov
fwait
out
mov
sbb
push
mov
loopne
lock
push
lods
mov
hlt
nop
adc
shll
add
adc
fs
daa
scas
cli
stos
addr16
push
dec
jne
cld
xchg
loopne
lahf
cmp
push
sbb
and
lcall
inc
and
shr
sub
cld
jg
add
adc
cmp
jo
cld
add
mov
add
sbb
shrb
add
inc
lret
sbb
cmp
mov
scas
je
xor
in
inc
and
insb
std
add
jl
mul
loopne
pop
adc
and
add
test
ljmp
lcall
jbe
outsl
mov
and
push
dec
clc
mov
add
fwait
and
loopne
dec
adc
in
sub
jb
pop
das
lods
fxch
cmpsl
in
loope
aam
pop
cmp
sbb
inc
mov
repnz
insl
repz
ljmp
cs
rolb
mov
sbb
jns
imul
sub
and
mov
add
loop
jle
inc
scas
or
int
xlat
xchg
pop
nop
add
faddl
hlt
adc
mov
cmp
dec
shrl
xor
aas
addl
cld
shrb
pop
popl
dec
pop
sbbb
sbb
add
pop
and
std
clc
jg
mov
ret
inc
hlt
mov
popf
add
movsl
lahf
add
in
aas
sarb
or
lcall
aas
xchg
or
aaa
pop
mov
fs
adc
sbb
outsl
mov
mov
fs
lea
test
cmp
sub
cld
loope
or
xchg
scas
adc
mov
push
adc
out
in
fcompl
sahf
test
inc
test
mov
sar
ret
mov
xor
and
push
inc
inc
adc
mov
pop
push
pop
cmc
call
dec
sub
dec
push
xlat
pushf
sub
jae
out
sbb
mov
fwait
fistps
outsb
es
lock
lcall
repnz
aas
not
lea
stos
shll
mov
and
mov
fcoms
dec
ret
xchg
ds
jle
jmp
loopne
aas
mov
xchg
push
test
popf
add
xchg
sub
shrd
pop
js
mov
pop
idivl
xor
pop
xor
sarl
xor
ss
daa
push
inc
imul
imul
cld
shr
add
stc
and
xlat
xor
adc
adc
push
cwtl
mov
aad
or
and
mov
popf
and
pop
mov
and
pop
inc
fcomip
sub
inc
mov
push
inc
shl
jl
jg
ret
inc
jg
icebp
add
jge
mov
mov
in
cmc
roll
adc
inc
mov
clc
jne
inc
rolb
mov
cmp
lret
clc
mov
xchg
ficoml
sbb
and
inc
mov
jne
sbb
call
dec
mov
aad
loopne
leave
mov
adc
cmp
xor
push
je
mov
mov
test
adc
cmp
mov
scas
inc
add
cli
insb
cli
inc
std
sub
fs
sbb
dec
fdiv
or
adc
loopne
cmp
nop
xor
adc
iret
outsl
add
cmp
pop
or
scas
cld
inc
pop
xorl
aas
or
popf
cli
ljmp
fs
jmp
mov
mov
sbb
jb
test
pop
test
rorb
dec
idiv
push
cld
call
and
push
loope
call
testb
push
cmp
push
int3
lock
xlat
aas
mov
pop
das
jp
inc
inc
push
jge
loope
and
shrb
rorb
shrb
mov
outsb
cli
cmp
mov
mov
mov
aaa
mov
mov
call
das
and
decl
movsl
or
gs
decl
lock
xor
cmpsb
lret
mov
mov
fsubl
xchg
mov
mov
xor
lods
pushf
sbb
pop
dec
into
mov
pop
ljmp
or
and
mov
cmp
mov
xchg
sbb
and
and
lret
push
je
mov
and
ljmp
jb
sub
and
loop
ja
lahf
inc
in
jg
pop
inc
sbb
aas
imul
cmp
sbbb
or
inc
cmpsb
insb
push
pushf
fmul
test
cmp
gs
mov
jge
push
pop
movsl
inc
rcrb
into
add
lret
call
or
mov
and
cmp
ljmp
mov
pop
lods
jo
sbb
push
in
mov
sub
gs
dec
call
fcomi
or
ret
cmp
add
push
inc
add
xchg
aas
lods
icebp
adc
test
stc
jg
std
rolb
adc
sbb
out
sub
xor
mov
sub
jg
test
push
push
test
xchg
mov
jl
arpl
call
ljmp
test
add
inc
rorb
jo
orl
mov
inc
pop
or
pop
jmp
and
mov
loopne
jl
push
and
out
adc
popa
fistl
in
adc
andb
idivl
jmp
lret
stos
and
adc
dec
dec
xchg
fildl
loopne
sbb
mov
das
subb
gs
das
push
dec
jbe
rcrl
cli
movsb
pop
xor
sbb
dec
jo
add
sub
mov
sarb
test
ljmp
pop
push
or
cmp
mov
jno
cmp
popa
sub
loopne
rcrb
mov
fdivl
cli
fwait
adc
mov
pushl
lcall
mov
das
scas
adc
hlt
inc
inc
mov
cld
outsl
aaa
cwtl
jmp
mov
das
push
push
bound
jl
rolb
jns
inc
data16
decl
sbb
lods
cmp
shrb
mov
stos
push
mov
test
sbb
mov
mov
daa
testb
mov
pushl
push
jo
add
fisubrl
cmpsl
xchg
and
xchg
xor
mov
filds
sti
and
push
jmp
test
add
lock
dec
mov
adc
lock
sub
out
jp
adc
add
in
lcall
or
add
add
jnp
mov
mov
add
dec
jae
in
jae
clc
pop
mov
sbb
icebp
cmp
fisttps
add
in
and
add
movsb
lds
push
in
mov
push
mov
fsubrs
add
aas
mov
cwtl
jne
and
insl
pop
addb
xchg
ror
or
shr
cmpsb
and
push
sub
shr
incl
mov
mov
cwtl
add
add
jg
incb
lret
dec
xor
jl
xorl
mov
out
mov
mov
mov
mov
addr16
mov
repnz
or
es
cld
outsl
sub
or
mov
bound
mov
xor
cs
pop
adc
pop
mov
push
cld
mov
adc
aaa
int
dec
sarl
add
xchg
sbb
aaa
pushl
cld
mov
add
cli
xchg
xor
adcl
xchg
fs
push
sbb
xor
scas
xor
push
ret
sub
inc
xchg
fs
nop
je
mov
pop
or
fldenv
fdivrs
movsb
jne
mov
das
stos
push
rolb
sbbb
nop
das
clc
jg
add
icebp
imul
mov
xchg
sbb
out
rcr
sar
inc
xor
and
mov
ficoml
xor
test
imulb
mov
inc
cmp
in
dec
jne
mov
push
fldt
xchg
in
push
xchg
and
push
or
sbb
or
icebp
out
add
inc
jp
fnstcw
lret
sti
iret
mov
incb
cltd
fisttps
pop
test
lods
dec
and
lret
hlt
jo
out
data16
jp
pop
mov
inc
fsubrl
orb
jg
sub
xchg
add
inc
xchg
ds
fisubs
imul
clc
inc
pop
int
mov
dec
scas
pop
test
xchg
inc
outsl
push
scas
rcl
xor
xchg
pop
cmpsl
sub
dec
dec
mov
add
fcomps
das
dec
mov
daa
imul
add
iret
pop
inc
repnz
test
push
and
ljmp
jo
cmp
cli
push
int
pop
xchg
lods
xlat
mov
sti
jae
arpl
test
pop
adc
xorb
pop
pop
jns
pop
popa
dec
xor
adc
xor
jno
or
or
mov
out
pop
dec
shl
dec
sbb
jno
aaa
shlb
scas
push
pop
icebp
aas
js
push
mov
testb
or
adc
ljmp
and
aam
in
cld
cmp
fbld
insb
popf
mov
stos
mov
daa
ret
insb
lock
jbe
rorb
or
add
mov
inc
sbb
mov
xor
jge
pop
adc
icebp
xor
mov
or
test
rol
xor
sar
jbe
dec
add
popa
jno
push
icebp
out
adc
test
adc
jbe
xchg
xlat
arpl
add
pop
lods
sub
into
xlat
nop
mov
sub
sbb
fisttps
sbb
mov
outsl
mov
cld
loop
aas
push
inc
adc
cmc
aas
ret
hlt
add
cmp
adc
jg
jg
into
mov
xor
inc
cmc
or
mulb
or
jbe
outsb
push
xchg
xchg
std
leave
dec
int
js
inc
xor
dec
loop
pop
insl
es
sahf
pop
xchg
leave
cmpsb
test
jbe
cld
sbb
js
adc
clc
scas
xor
scas
push
pop
mov
adc
aam
subb
jle
inc
aaa
stos
cld
repnz
lcall
cmp
xchg
xor
adc
mov
add
aas
adc
push
cmp
ljmp
push
mov
and
mov
mov
int3
test
outsl
pop
fsubl
lods
pop
in
inc
push
push
jmp
incl
push
xor
pop
jb
dec
cmp
cmpsb
daa
ja
jp
aas
les
subl
insb
rorl
clc
mov
aaa
jg
nop
dec
pop
movsb
call
loopne
orl
xor
nop
arpl
pop
aad
mov
daa
lea
shll
inc
roll
sub
ret
jb
ds
cmp
jp
es
mov
inc
call
repz
inc
cli
sbb
lcall
inc
and
push
fs
mov
push
call
icebp
popa
out
pop
sahf
and
loope
loopne
icebp
xchg
jbe
lcall
mov
adc
out
mov
sbbb
lcall
xor
xor
out
push
je
loop
fdivs
std
add
in
pop
mov
imul
fwait
sahf
scas
jg
hlt
pop
xchg
sahf
daa
sub
push
xchg
sbb
ja
inc
jbe
in
mov
add
cs
and
sarb
rorl
dec
dec
cmp
push
or
jns
incb
add
les
nop
mov
push
cmpsl
arpl
sbb
pop
out
filds
cltd
mov
cld
add
push
sbb
call
incl
push
push
cmp
out
jmp
mov
roll
test
inc
xor
divl
mov
fcomp
dec
jle
leave
mov
fstpt
push
jl
mov
in
push
push
aaa
inc
outsl
adc
leave
lea
out
sbb
sbb
jp
adcb
add
aaa
add
mov
incl
sub
shll
push
xchg
xchg
pusha
clc
popa
push
or
js
push
loopne
ficoms
inc
hlt
dec
lret
mov
add
cmp
mov
xor
mov
inc
int
xor
push
repnz
mov
orl
fsubrs
add
sbb
outsb
xor
mov
call
sub
mov
incl
or
or
cld
ret
outsl
pop
loopne
scas
or
xchg
paddw
push
pop
or
nop
ja
test
mov
ror
fidivrl
push
inc
push
sahf
loopne
loope
mov
push
mov
lahf
mov
jne
fsubrs
mov
out
inc
aad
out
cli
iret
cmpsb
or
outsl
divb
mov
add
and
jnp
add
adc
ret
pop
xor
repnz
dec
fnstcw
mov
xor
aaa
push
xor
or
and
sbb
and
popa
testb
fsubl
cmpsb
cmp
pop
xchg
xor
push
jle
aam
testb
pop
out
pop
les
cli
rolb
pop
insb
mov
dec
mov
lods
push
lods
stos
ljmp
lcall
and
js
hlt
mov
sub
imul
cs
mov
movsl
rorb
jno
das
stos
dec
mov
dec
in
xchg
clc
pop
es
pop
mov
arpl
jmp
ss
aad
dec
nop
jb
std
mov
add
and
in
dec
in
mov
jb
int3
shll
add
sbb
mov
sbb
mov
add
sub
aam
decl
lods
icebp
ret
sbb
dec
xor
andl
inc
and
and
xor
ljmp
add
add
pop
xchg
sub
push
cmp
aam
adc
int
loopne
pop
dec
inc
mov
mov
pop
jo
dec
lock
mov
enter
rolb
fadds
gs
imul
test
incl
sub
ss
sbb
and
ret
xor
cmp
in
lahf
lods
inc
push
push
pop
mov
push
sub
add
les
jno
cmp
sahf
add
mov
add
outsb
lcall
cmp
and
pusha
jmp
cmp
dec
adc
sbb
scas
icebp
and
test
inc
jne
adc
out
out
xchg
maskmovq
testl
jecxz
add
mov
inc
dec
add
sbb
dec
xor
lea
cmp
inc
sahf
adc
aas
call
adc
test
decl
push
push
lret
cmp
sub
cmp
push
cld
jg
popf
inc
push
loope
leave
mov
in
bound
incl
mov
je
add
dec
xor
jg
fsubrs
pop
cmp
mov
popf
rorb
mov
roll
pop
push
or
pop
add
cmc
mov
and
stos
in
fists
jmp
or
sub
cmp
pop
add
call
fdivp
or
lock
dec
jo
out
cmp
es
and
ficomps
add
repz
and
xor
icebp
jg
and
rcrb
sbb
insl
loop
inc
std
mov
stos
add
incl
sti
sbb
push
in
in
mov
sub
cmp
data16
sub
idivb
rcrb
rcll
or
cli
inc
push
xor
mov
das
js
mov
stc
inc
sub
inc
dec
fidivs
and
cld
cwtl
les
adc
or
jns
test
add
and
test
jmp
cmpb
add
or
adc
add
jecxz
cmp
stos
xchg
jmp
push
clc
sub
inc
pusha
icebp
cld
test
jmp
lock
imul
push
push
adc
add
mov
and
xchg
ds
test
scas
loop
or
adc
cmp
mov
xor
jmp
sub
lods
push
sbb
add
adcb
push
fwait
cmp
enter
cltd
mov
addl
icebp
jmp
inc
xorb
xchg
fmull
push
insb
mov
ficoml
shlb
push
scas
adc
ret
cmpsl
pop
mov
dec
or
add
mov
repz
mov
mov
ret
mov
push
mov
orb
pop
push
je
lret
std
sub
inc
push
fwait
ss
loope
int3
hlt
fisttpll
mov
push
inc
adc
dec
or
push
data16
pop
inc
es
dec
cmpsl
daa
sub
data16
adc
fwait
int
dec
dec
pop
mov
dec
pop
loope
call
ja
int
or
fwait
mov
ret
fsts
into
je
in
pop
clc
push
gs
addl
sbb
jmp
sbb
push
push
pop
push
in
xchg
sbb
sub
cmp
xor
aam
outsl
lds
jo
out
loopne
add
jp
pop
pop
mov
imul
mov
call
fwait
dec
lods
pop
jo
nop
shl
push
cli
loopne
add
out
pop
lahf
pop
incl
jle
sub
push
sub
push
push
imul
in
cmovl
pop
push
mov
mov
xchg
adc
cmc
push
into
or
test
jg
pop
pop
xor
or
cmp
push
mov
or
fnstsw
cmp
lods
inc
jmp
jg
lods
adc
jp
pushf
push
add
cli
stos
add
dec
sahf
loopnew
fs
pop
jecxz
sub
push
sub
loopne
data16
popa
xchg
add
data16
cld
lcall
divl
jecxz
fsts
xchg
jno
pop
jns
lock
iret
mov
or
pop
rorb
mov
repnz
aad
clc
test
out
adcl
mov
in
dec
hlt
stos
data16
and
ljmp
adc
mov
mov
int
and
dec
out
and
sahf
mov
cltd
jo
iret
cmc
jmp
add
cmp
xchg
and
repnz
sbb
xchg
pop
std
call
xorb
jns
add
mov
test
out
loopne
xchg
add
popf
popf
aam
sarb
push
sbb
jns
sarb
pop
ds
mov
test
cwtl
mov
or
xor
or
mov
bound
sahf
add
push
or
mov
call
xor
or
std
jl
cmpsl
clc
mov
jno
je
and
jecxz
cli
dec
lods
sub
movsl
hlt
sbb
push
adc
outsb
insl
mov
pop
lret
mov
dec
in
jnp
mov
icebp
inc
cmp
js
or
ret
adc
mov
mov
outsb
mov
dec
jp
sti
push
xchg
inc
hlt
mov
mov
pop
and
pop
out
xchg
and
inc
aam
mov
sar
incl
xchg
mov
popa
or
pushf
sahf
push
add
cld
add
add
icebp
xlat
mov
ja
es
loope
lds
jmp
jl
movsb
cli
dec
cld
xor
inc
xchg
sub
mov
mov
jg
jnp
jno
scas
add
pop
dec
sbb
inc
or
sub
in
int3
aas
clc
or
dec
cmp
mov
inc
js
in
daa
fs
incb
into
xchg
fimull
pop
insl
popa
xchg
stos
jmp
xchg
cwtl
mov
mov
ljmp
ret
les
imul
adc
mov
mov
rorb
hlt
cmp
addr16
and
push
rcll
or
xchg
or
mov
mov
pop
mov
sub
scas
lods
cmp
stos
pushf
pop
pop
lret
push
dec
hlt
filds
adc
xor
lcall
dec
int3
cli
adc
int3
push
push
inc
stos
popf
push
sbbb
loope
pushf
sti
incl
cld
push
adc
fsts
xchg
pop
or
test
adc
or
add
mov
lcall
bound
mov
mov
aaa
cld
ret
fcoml
xor
cmp
add
cli
mov
and
or
pop
cld
ja
orb
xor
cmc
inc
jg
mov
mov
gs
add
xor
cld
add
dec
add
or
cmp
test
mov
mov
add
jmp
lret
mov
movsb
inc
cwtl
int
add
sar
mov
xlat
push
pop
inc
xchg
add
mov
cwtl
push
push
dec
mov
pushf
inc
scas
popf
pop
add
sbb
push
push
enter
shrb
hlt
js
shlb
mov
es
jmp
hlt
cmpsb
lds
cmpsb
mov
enter
push
mov
or
neg
lock
mov
adc
test
lahf
jo
xor
and
sbb
xor
jo
lcall
cld
inc
sub
sbb
cltd
mov
inc
or
les
add
ljmp
test
mov
scas
fcom
and
roll
and
hlt
jo
nop
adc
xor
inc
rclb
xor
jle
lcall
and
push
add
jmp
daa
js
int
fdivrp
lcall
jle
push
aaa
xor
scas
sti
sahf
insb
in
push
out
mov
das
pop
mov
aaa
std
call
outsb
jbe
ljmp
add
incl
or
enter
std
inc
jnp
sbbl
add
lock
push
mov
insb
push
ret
mov
sti
pop
jo
jmp
jge
jle
loop
and
adc
into
or
sub
fcomip
fwait
pushf
or
and
popf
mov
adc
or
jne
add
push
adc
xchg
jo
jae
mov
mov
push
fs
icebp
scas
and
je
mov
dec
push
cmp
jo
inc
mov
jle
fildl
push
fwait
inc
add
push
roll
and
sbb
cmpsl
je
and
sbb
les
jns
add
xchg
js
pushl
sarb
outsb
mov
lods
add
testl
push
ret
mov
loop
sahf
mov
ret
ss
push
scas
mov
cmp
jb
sarb
mov
ret
jo
jmp
loop
add
add
fimuls
les
es
lods
pushf
push
pop
push
inc
mov
push
pop
or
test
or
fnstenv
mov
sbb
pop
xchg
inc
push
cld
scas
fbstp
jl
adc
jle
jae
sbb
mov
add
push
mov
cmp
mov
sbb
loope,pn
lock
cli
or
lret
lret
cli
js
push
pop
push
xchg
push
inc
mov
add
sbb
cwtl
jno
movsb
dec
xchg
jle
lock
es
and
mov
outsl
adc
and
push
enter
inc
jne
rolb
sbb
and
adc
mov
cli
outsl
rorb
add
jne
sbb
ret
mov
les
test
adc
cmp
bound
sbb
jp
jecxz
or
push
leave
dec
dec
dec
shlb
cmc
ja
lds
lret
jae
fldenv
dec
insb
push
popf
add
xchg
and
mov
jne
add
and
es
addr16
inc
out
or
in
dec
pop
ljmp
mov
decl
jo
push
in
lds
xchg
call
out
insb
mov
add
mov
xchg
fidivrs
out
sbb
bound
mov
in
imul
mov
aam
pushl
inc
push
xor
jmp
aad
shlb
mov
xor
stc
jg
cmp
mov
adc
xor
lret
adc
mov
jmp
pop
lea
add
fwait
jo
or
movsl
mov
inc
fisubrl
mov
lahf
or
dec
fcomi
in
fsubrl
or
push
and
ja
int3
xchg
jne
ret
or
les
jmp
adc
sbb
lcall
jmp
stos
mov
push
adc
arpl
enter
inc
cld
pop
cmpsb
fldt
cmpsl
aaa
jg
jl
test
fcomps
loop
mov
mov
pop
ljmp
dec
int
inc
or
sub
mov
rolb
or
xchg
xorb
lock
add
sub
sbb
imul
movnti
mov
rol
lds
push
mov
cltd
sahf
add
and
push
dec
insl
iret
ret
add
scas
or
imul
testb
add
add
push
aaa
and
ret
mov
cmp
push
push
add
jno
xlat
or
fisttps
loopne
mov
stos
enter
adc
orps
mov
push
mov
dec
jmp
or
ret
inc
mov
inc
das
mov
add
popa
push
mov
cmp
pop
adcb
sub
cmp
fsubl
outsl
mov
add
stos
cmp
xchg
mov
sbb
add
mov
hlt
or
stos
jmp
insb
mov
xor
fcmovne
fiadds
or
pop
int
mov
insl
pop
pop
jbe
pop
dec
outsb
fstpt
in
pushf
ret
mov
and
push
push
test
cld
mov
fildll
jo
fstpt
mov
adc
or
adc
call
cli
cmpsl
icebp
decl
add
data16
dec
mov
in
and
out
cwtl
push
loop
cmpsl
push
xchg
cmc
iret
andb
jge
hlt
push
subb
push
or
mov
repz
dec
ficompl
adc
pop
inc
xor
lret
add
mov
cmp
add
xchg
push
scas
adc
imul
mov
dec
and
jle
int
leave
outsl
sub
in
adc
clc
xor
push
scas
mov
enter
sub
cmp
push
mov
jl
or
inc
push
test
call
inc
pop
adc
jle
push
dec
inc
movsb
mov
sub
adc
movsb
les
xor
outsl
push
cmpsb
push
mov
ljmp
cli
sub
rcll
mov
xchg
and
mov
add
ljmp
adc
jnp
xchg
sub
push
push
stos
in
clc
pushf
shll
xor
fnsave
dec
xorb
cmc
insl
jbe
sbb
xor
iret
cld
pop
sbb
incl
outsl
or
rorb
pop
jle
inc
add
xchg
cmc
add
decl
das
call
les
push
roll
adc
lret
pop
xchg
sub
pushf
in
pop
jnp
mov
add
lods
inc
adc
xor
mov
lahf
jnp
push
rolb
xchg
clc
lock
lcall
xchg
sub
and
pusha
out
add
inc
mov
sub
sti
aas
std
shl
mov
or
clc
jg
xchg
push
inc
loopne
add
sub
adc
daa
xor
les
sbb
adc
cmpsl
add
xchg
and
add
push
push
sti
mov
popa
adc
mov
decl
push
xchg
sub
loope
lods
imul
mov
and
scas
pop
rolb
sub
mov
mov
xchg
aas
es
lcall
outsl
push
cmp
jecxz
lret
add
or
dec
cmp
lods
incl
aad
addr16
xchg
xchg
dec
jns
fcomip
pop
pusha
pusha
insl
inc
add
call
cmp
mov
test
gs
xchg
clc
push
xor
add
cmp
cli
and
sbb
fld
inc
icebp
insb
dec
xchg
xor
jb
pop
mov
sar
jg
jb
push
mov
cmp
fnstenv
test
cli
xor
rclb
ret
dec
and
or
loopne
in
or
leave
cmc
push
rcll
jp
fucomip
mov
mov
and
mov
mov
fistps
add
sub
push
mov
adc
mov
push
hlt
mov
pop
aam
or
adc
cld
inc
ret
mov
jmp
xchg
lret
fdivl
sub
and
jmp
cs
cmp
out
addr16
cmp
or
add
clc
mov
rcrl
lahf
sub
icebp
push
and
sub
cli
testb
add
dec
arpl
dec
in
aas
out
lods
add
xchg
or
lds
jmp
mov
mov
mov
pop
cli
pop
repnz
ret
sbb
mov
add
pop
lcall
insl
and
nop
cmpb
push
sarb
fidivrl
cli
sub
or
sub
lock
call
mov
cmp
add
or
cmp
es
dec
mov
cwtl
mov
lcall
stos
sub
cmp
jnp,pn
outsl
incl
pop
xorb
add
pushf
mov
arpl
insb
pop
fistps
jb
jmp
or
aas
sub
neg
push
iret
add
inc
data16
add
cltd
xchg
dec
and
lea
add
in
lea
xchg
nop
lock
add
lods
ret
insl
and
sub
dec
cs
aaa
jne
fistpll
dec
jns
loop
add
ret
dec
push
loope
fsubs
sbb
clc
cwtl
mov
adc
xchg
mov
pop
jg
mov
sub
or
xchg
or
lret
hlt
das
add
roll
and
or
adc
hlt
clc
sub
pop
sahf
adc
or
decb
and
aad
or
test
mov
or
idivl
jge
pop
adc
sbb
jp
sub
ds
or
mov
fcmovnb
dec
je
out
pop
mov
scas
mov
add
stos
mov
mov
incl
frstor
in
inc
rolb
inc
mov
nop
loope
mov
in
xor
in
divl
or
xor
fwait
icebp
mov
orb
cs
nop
and
repnz
das
sbb
loopne
sbb
adc
inc
pop
xor
jo
lock
or
jecxz
lods
and
jl
fildll
sub
stos
mov
inc
lods
cltd
add
inc
mov
adc
jg
imul
or
nop
sbb
lcall
pop
adc
add
mov
js
js
cld
cmc
data16
sbb
hlt
mov
xor
out
adc
orb
nop
out
decl
xor
test
and
mov
dec
mov
mov
add
sbb
nop
lock
sub
mov
decl
jmp
dec
jb
test
mov
ss
sbb
std
les
test
popf
adc
icebp
sub
icebp
mov
mov
mov
push
jnp
xchg
cwtl
shrb
add
shll
mov
adc
outsl
push
lcall
jmp
scas
add
jb
mov
inc
adc
cmp
mov
push
sbb
xor
movsl
call
sbb
iret
or
lret
cmpsl
and
or
cmpsl
mov
in
or
lods
decl
fidivs
fs
mov
pop
sbb
out
push
insb
sarl
mov
push
push
inc
dec
mov
orl
mov
xchg
adc
mov
inc
outsb
mov
xchg
add
inc
and
movsb
repz
arpl
mov
fwait
add
jmp
insl
leave
mov
adc
idivl
mov
sub
int3
loop
mov
cmp
mov
shrl
mov
jl
lods
add
hlt
ja
cld
cwtl
sbb
add
xor
xor
or
aas
stos
cli
test
push
mov
shrl
ja
dec
pop
cmc
icebp
testb
sbb
dec
xor
das
xor
sbb
add
jbe
sbb
shll
xor
cmp
push
cld
add
xor
xor
dec
mov
push
dec
loopne
fwait
cmpsb
loopne
dec
cmp
cmp
adc
add
shll
lods
mov
ror
and
add
or
and
cwtl
mov
lds
jg
ss
push
jmp
dec
add
je
incl
loope
adc
outsl
ss
lods
push
stos
testb
inc
or
je
xor
or
mov
test
mov
cmpsb
incl
js
push
push
call
nop
cli
xor
push
daa
loopne
sbbb
and
push
adc
aam
out
adc
fldenv
enter
ret
fwait
jp
outsl
xchg
adcb
aaa
mov
decb
jl
xor
shl
les
aad
xorb
movsl
xor
sub
add
and
cmp
incl
and
xchg
jb
jo
or
sbb
mov
inc
pushf
xor
test
movsl
push
sub
cld
fwait
lods
fsubrl
xlat
push
push
outsl
ja
stc
movsb
repz
xor
cmp
test
pop
das
jmp
cmpsl
call
xchg
insb
sahf
movsb
out
jp
dec
outsb
test
pushf
sar
xchg
mov
jg
fwait
lahf
xor
xchg
loopne
push
ret
and
orb
pop
or
insl
add
fadd
test
and
jecxz
rorb
clc
jl
imul
sbb
pop
lcall
gs
das
jo
pop
stos
popa
dec
in
pop
dec
aam
dec
and
dec
jl
es
jecxz
mov
or
adc
pushf
fld
xor
in
sti
inc
jns
sbb
add
pop
clc
xchg
in
jl
aam
icebp
fst
pop
or
push
stos
jl
fsubl
cmp
xchg
pop
fisttpll
fcomip
pop
cmp
adc
test
jl
int
xchg
mov
out
add
dec
cmp
rolb
andnps
cmc
adc
adc
and
clc
fcmovnu
and
inc
add
insb
clc
shlb
mov
call
xchg
scas
and
dec
add
xor
lock
pusha
jns
int
jmp
add
lcall
ljmp
popf
movsl
das
lret
fidivrl
add
leave
sti
cwtl
add
call
inc
sarb
test
js
cmpsl
jl
jns
ud0
mov
leave
mov
into
jno
mov
inc
in
xor
jl
les
aaa
pop
out
ds
mov
mov
out
sar
pop
loopne
pop
faddl
inc
fbstp
pop
mov
or
js
ja
mov
adc
enter
push
les
cmp
sbb
scas
dec
pop
xchg
push
cld
call
push
sbb
cs
rorl
imul
push
loope
and
or
mov
inc
push
xorl
out
std
add
jmp
sbb
das
pushf
dec
imul
stc
mov
dec
adc
mov
repnz
sar
inc
mov
xchg
add
mov
or
pop
pop
push
xor
fcomip
hlt
and
mov
mov
add
push
or
ss
xchg
xchg
push
fwait
adc
jno
add
push
sbb
nop
lretw
pusha
loopne
ficompl
push
cmp
or
and
mov
dec
out
xchg
mov
pop
pop
pop
adc
ficoml
or
aaa
jmp
mov
or
mov
sbb
js
mov
mov
stos
clc
mov
mov
sbb
sub
sbb
pop
inc
popa
clc
cmp
cmp
loop
ss
clc
repnz
adc
lock
or
push
testb
xchg
inc
shll
inc
cmp
shrb
scas
adc
hlt
inc
int
in
or
mov
sbbb
push
push
mov
leave
pop
icebp
mov
bound
adc
xlat
xchg
loop
aad
and
adc
js
repnz
pushf
and
cli
adc
movsb
iret
jns
pop
add
and
add
xchg
mov
dec
push
sub
ljmp
ds
adc
icebp
je
pop
std
fwait
cmp
dec
pop
mov
sbb
mov
or
cld
std
push
std
push
scas
dec
fiaddl
scas
mov
or
pop
jle
sbb
notl
cmpsb
in
gs
das
xor
decb
cwtl
adc
jo
movsb
rolb
add
mov
es
jg
mov
dec
cs
adc
mov
fstp
lret
xor
ss
mov
call
aam
pop
scas
cli
ret
call
add
jle
ret
repnz
fstl
je
movsb
lea
ljmp
xor
fsubrp
and
lcall
push
push
dec
mov
dec
add
loop
sbb
stc
add
add
std
and
lock
jg
js
fucomip
mov
push
popa
sbb
aam
into
inc
mov
mov
sbb
ljmp
mov
daa
sub
jmp
dec
jne
rcrl
in
aas
adc
out
addb
mov
sbb
shlb
push
lahf
jle
add
les
pop
xchg
and
addl
pop
fs
enter
dec
clc
xchg
aam
jl
mov
stos
clc
pop
test
sbb
pusha
stos
jecxz
push
jno
fistpl
xor
ljmp
fidivrl
push
mov
mov
xchg
fsubl
faddp
dec
mov
pop
jmp
out
clc
fimuls
push
jecxz
lret
pop
insb
adc
sbb
mov
aas
ret
pop
js
test
cli
or
jo
outsb
cmp
inc
mov
pusha
lret
inc
popf
sbb
or
pushl
or
aaa
cltd
and
dec
xchg
orl
iret
mov
jbe
scas
out
fists
subl
jmp
rcl
push
rolb
pop
and
mov
add
cs
imull
jmp
xor
push
mov
movsb
outsl
pusha
xchg
popf
push
fs
inc
mov
nop
pop
dec
jmp
push
sub
add
push
std
ficoml
mov
add
ljmp
push
pop
pop
scas
and
mov
clc
add
mov
dec
cmc
cli
aas
inc
fldenv
push
pop
cmp
lret
dec
insb
lock
pop
mov
aam
jo
sub
sbb
cmc
jg
push
pop
ficomps
jno
movsl
xor
ljmp
push
sub
mov
mov
mov
mov
outsl
xchg
aaa
adc
sub
xchg
cmp
jl
xor
in
lock
or
jle
mov
mov
ret
mov
mov
icebp
push
mov
jnp
shrl
mov
cmpsb
mov
inc
aad
sbb
scas
jecxz
testb
popa
xchg
loopne
stos
inc
es
mov
or
adc
sub
mov
jg
pop
hlt
aad
mov
xchg
movsl
add
mov
out
shll
push
pusha
je
nop
jg
ljmp
push
jp
push
push
fidivrs
add
jmp
lods
cwtl
lods
in
mov
cmp
xchg
out
les
cmp
call
rclb
inc
xchg
test
enter
pop
mov
pop
std
test
ret
add
sub
mov
imul
sbb
adc
aad
js
jno
stc
push
rcrl
jge
pop
push
incl
xchg
enter
scas
pop
mov
push
xchg
jp
daa
pop
mov
adc
xchg
loopne
and
or
ljmp
jp
mov
cld
mov
movsb
mov
in
adc
je
sub
aam
fs
push
lcall
mov
cmp
dec
jmp
out
fstpl
jb
sar
mov
inc
add
or
mov
sub
jle
jl
cltd
jmp
or
stos
inc
dec
pusha
or
add
push
mov
popf
pop
movsb
test
mov
push
push
testb
mov
mov
pushf
sub
pop
loope
fcmovu
or
test
mov
loope
jecxz
xor
call
lcall
cmp
fisttpl
adc
push
pop
cmp
xchg
jb
sub
test
xorb
add
adc
decl
std
and
dec
mov
je
jp
sub
adc
lret
cmp
incl
xor
repz
scas
mov
int
lret
test
js
arpl
ja
or
scas
adc
repnz
sbb
fwait
cmpb
rorb
mov
fmuls
aam
hlt
inc
in
pushl
push
enter
fstl
sarl
mov
scas
decl
mov
lcall
jne
lods
push
ret
pop
adc
gs
fs
jg
stos
in
jae
add
xchg
jo
mov
mov
add
mov
sub
inc
mov
clc
mov
das
arpl
adc
add
mov
frstor
jle
cli
mov
ljmp
dec
lcall
xchg
rcll
lcall
testl
jle
jo
stos
or
rcrl
enter
mov
call
xor
outsb
sti
test
subl
jmp
push
pop
add
fisubrl
ret
adc
js
jo
sub
mov
call
decb
fimull
mov
inc
pop
dec
mov
sarl
aaa
cld
pushl
add
mov
scas
pop
push
inc
jl
nop
scas
mov
cli
push
test
jo
push
mov
outsl
xor
mov
or
fs
imul
lret
xor
ja
add
fiadds
sub
add
mov
out
pop
icebp
inc
loop
sbb
push
mov
in
adc
and
jns
aaa
cld
outsl
mov
jle
push
push
outsb
push
jl
cwtl
cmpsb
pop
mov
adc
je
test
cmpsb
stc
fidivrl
push
xchg
dec
inc
sub
mov
vmsave
jo
and
add
scas
out
arpl
mov
mov
push
pop
in
push
call
inc
mov
jg
fbld
cwtl
cld
icebp
cmp
imul
push
insb
dec
clc
jmp
inc
pop
fsubl
mov
loopne
mov
pop
xor
jp
mov
add
sbb
data16
jmp
mov
cli
xchg
add
and
repnz
mov
xlat
push
inc
sbb
pop
jmp
xchg
mov
daa
xchg
xchg
mov
outsl
mov
out
out
xchg
in
lret
mov
pop
xor
pop
addb
mov
push
xchg
lret
mov
mov
inc
add
pop
movsl
mov
lcall
mov
sub
sbb
and
and
stos
push
pop
in
or
and
js
out
insl
sbb
jge
pusha
call
jno
push
cmp
or
mov
push
cld
pop
loopne
xor
cld
pusha
inc
ss
sub
mov
jmp
jbe
ds
stos
mov
xor
cmp
inc
fdivrl
inc
add
adcl
push
push
imul
or
pop
popa
loop
adc
int3
ss
out
mov
sbb
or
adcl
fs
ljmp
mov
jg
int3
test
jb
jns
xor
mov
enter
adc
lret
fs
add
movsb
stos
outsb
rolb
repnz
rcl
or
call
iret
push
jmp
les
pop
je
test
sub
clc
iret
push
push
mov
jb
enter
sub
jp
mov
dec
shr
or
add
cli
mov
or
cmpsl
and
pop
cmp
and
inc
enter
add
jmp
incl
add
daa
jns
in
mov
adc
test
hlt
mov
jg
add
xchg
push
decb
push
lods
and
xchg
cld
dec
loopne
add
pop
cld
test
scas
fidivrl
push
sub
xchg
sub
movsb
jb
sub
cmp
arpl
scas
mov
mov
in
in
mov
outsb
sub
push
add
mov
dec
cli
cmpb
rol
xor
inc
hlt
fcomi
dec
mov
adc
dec
xchg
fwait
mov
ret
in
testb
sahf
and
add
sub
loopne
movsl
fwait
lock
push
or
add
fstl
or
fsub
add
add
paddsw
les
sbb
movsl
inc
lock
fbstp
inc
cmp
or
sbb
rclb
repz
movsb
push
cld
lcall
adc
jmp
cwtl
xchg
cmp
add
jg
pop
mov
dec
cmpsb
shrb
adc
cmc
mov
sti
mov
or
je
push
std
incl
pop
rsqrtps
or
ror
imul
mov
and
aaa
cld
dec
loop
sbb
es
ljmp
aaa
adc
mov
hlt
icebp
add
fldenv
mov
dec
mov
and
out
or
js
ds
jl
nop
clc
or
cmp
adc
mov
push
xchg
je
mov
push
icebp
hlt
incl
call
jb
movswl
or
movb
sub
lods
movsl
pusha
popa
mov
sar
push
push
mov
cwtl
js
ja
xchg
and
or
push
fldt
ljmp
ss
mov
out
adc
cmc
jg
loopne
daa
xor
rorl
adc
test
mov
outsl
call
mov
in
shll
xor
sbb
inc
fiaddl
sub
dec
inc
ljmp
mov
jae
outsl
cmp
das
xor
sub
dec
icebp
adc
cmpsl
mov
in
lcall
movsb
mov
lods
repnz
lret
push
push
cld
xor
pop
sub
lret
clc
fcoml
mov
jmp
test
xchg
add
pop
loope
pop
pop
pop
mov
inc
rorl
xchg
inc
lret
cli
fsubrl
mov
inc
pop
aam
insl
adc
jge
push
add
stos
sub
outsb
mov
jnp
dec
mov
jg
mov
xchg
cmp
movsl
mov
xchg
push
addb
imul
xchg
mov
cltd
fcmove
cmpsl
sbb
pusha
inc
xor
in
mov
mov
sahf
xor
jmp
das
test
mov
insb
lea
mov
jmp
push
in
push
ret
or
fldl
rol
rorl
fisttps
cli
pop
cmpsb
push
adc
jecxz
imul
pop
dec
add
bound
add
and
loopne
pushl
or
add
and
jnp
je
push
fisttps
jle
mov
add
add
popf
pop
insl
mov
add
or
push
mov
lds
pusha
or
pop
dec
test
fcomps
sar
xchg
mov
js
sub
mov
xlat
test
and
adc
repnz
out
mov
hlt
fbstp
xor
sub
je
cltd
imul
jmp
mov
add
jnp
lahf
dec
adc
or
and
mov
js
jecxz
enter
stos
stc
mov
push
xor
clc
dec
enter
push
ljmp
ss
sbb
push
scas
iret
fs
push
add
ja
pop
push
pop
fsubs
sub
xor
mov
cli
mov
test
test
jle
add
orb
mov
aaa
das
jbe
aaa
cld
pop
mov
lock
sbb
mov
repnz
scas
pop
mulb
lods
sti
fwait
cld
and
add
dec
aaa
hlt
dec
daa
or
mov
add
sbb
or
push
lock
push
sub
jge
dec
mov
add
xchg
xchg
ds
mov
stos
jo
loope
or
sahf
inc
sbb
aad
mov
shl
jb
or
shrb
dec
mov
pop
push
jns
cld
mov
or
sub
ret
cmpl
fs
loopne
pop
cmp
inc
push
rcrb
xor
inc
xchg
xor
mov
pop
xchg
push
pusha
fadd
fcomps
icebp
imul
lea
fsubl
xchg
gs
outsb
cmp
sbb
ljmp
int3
cli
loop
pop
jmp
xchg
jge
and
push
decb
lahf
ss
mov
je
addr16
mov
jecxz
add
enter
lock
stos
jb
in
outsb
ljmp
shll
ljmp
cmpsl
gs
mov
pop
clc
aam
sbb
xor
push
ja
push
sub
mov
sub
clc
push
jbe
push
movsb
or
push
fidivl
jnp
or
jne
scas
jle
subb
dec
movups
out
out
out
lcall
je
fisubrs
dec
cmp
dec
das
add
aaa
lods
mov
pop
pop
cld
jmp
dec
jl
pop
rol
jg
int3
mov
inc
add
dec
jne
insb
xchg
popf
fbld
mov
mov
lds
shlb
mov
divl
lock
pop
xor
cmp
inc
stos
pusha
push
std
adc
lock
jne
test
fisttpl
shlb
jmp
jecxz
cmp
pop
hlt
mov
dec
cmp
pushf
or
push
adc
push
lret
push
and
mov
mov
ljmp
push
adc
jmp
repnz
lds
add
ds
cmpl
jne
mov
dec
test
fiaddl
push
int3
ret
mov
aad
ds
dec
test
xchg
fisubrl
stos
push
or
scas
outsl
or
testb
test
mov
leave
and
rol
rcrb
lods
call
ljmp
or
push
adc
mov
push
and
mov
lret
outsb
daa
pushl
jmp
mov
add
sbb
sarl
xchg
rolb
or
icebp
lock
add
add
dec
mov
faddl
in
inc
mov
dec
mov
in
dec
decl
sub
insl
sub
push
test
add
or
imul
mov
jle
mov
jp
insb
xor
mov
fsubl
repnz
scas
sbb
xor
test
pushl
mov
lcall
mov
dec
notl
sarb
fdivrp
mov
or
cmovae
or
cli
ds
adc
xchg
mov
push
aaa
and
les
xchg
in
fisttpl
xchg
sub
push
push
in
sbb
ljmp
xchg
insb
mov
push
mov
out
clc
push
add
xchg
in
pushf
or
sbb
lds
pop
fnstenv
push
push
jbe
sahf
jl
xor
mov
imul
adc
sub
fldenv
call
popa
xchg
add
sbb
add
mov
cmc
loope
xchg
sub
in
aad
pop
inc
rclb
cmpb
popa
adc
lret
xchg
jae
mov
movsb
and
mov
add
out
ficompl
fs
add
push
scas
mov
mov
jne
cmpsb
lock
or
stos
push
add
jne
add
and
adc
mov
mov
inc
cmp
jg
mov
xchg
jl
cs
adc
arpl
lods
std
mov
push
repnz
mov
push
adc
fadd
sbb
push
mov
cmp
lahf
scas
cmpsb
pop
push
sub
lods
mov
cmpl
or
call
or
mov
in
mov
xlat
aam
xor
insb
iret
sarl
out
xlat
out
bound
sar
sarl
push
xchg
clc
add
stos
push
push
inc
and
or
dec
call
gs
fnstenv
sbb
outsb
ljmp
adc
adc
cmc
incl
sub
sbb
xor
fwait
sub
ret
cmc
pop
std
mov
cs
lret
dec
mov
mov
mov
rolb
mov
ljmp
mov
test
and
push
mov
outsb
lret
mov
inc
dec
mov
dec
je
mov
lahf
inc
enter
pop
add
mov
add
fstps
ret
ljmp
loopne
test
push
loop
dec
adc
pop
mov
xor
lret
lock
push
pop
pop
into
mov
movsl
sub
mov
push
ret
jbe
jb
inc
mov
es
xor
rcr
ret
pop
ljmp
or
hlt
dec
mov
xor
dec
fdivp
add
mov
adc
pop
hlt
xor
xor
or
adc
xchg
or
incl
and
push
add
cmp
add
scas
mov
aas
jo
fdiv
jbe
cmpsb
mov
imul
push
imul
inc
mov
sub
mov
cmp
jb
and
mov
inc
push
mov
repz
mov
nop
jne
adc
pop
adc
in
mov
jmp
js
inc
pop
jmp
fsubr
push
xor
pop
dec
lea
inc
insl
and
lcall
mov
adc
adc
int3
add
push
test
test
shll
rclb
jne
cwtl
jbe
scas
dec
sbb
adc
or
stos
add
outsb
or
cltd
xor
pop
icebp
adc
call
cmp
jne
cmp
adc
xor
jge
test
sub
lret
pop
mov
stos
jecxz
dec
inc
stc
xor
or
xor
aaa
lods
loopne
jle
movsb
call
out
aad
cltd
inc
adc
fnstcw
cmp
mov
test
push
imul
popa
push
pusha
sbb
popf
outsl
into
hlt
jg
stos
dec
and
out
xchg
test
pop
iret
push
orl
pop
jge
ljmp
mov
hlt
shlb
fisubrl
push
push
sub
stos
cmc
rcr
inc
xchg
inc
mov
mov
or
clc
xchg
lds
je
hlt
inc
andl
lret
cmp
aad
cli
or
jmp
xchg
or
clc
fcomip
fisttpll
and
les
ljmp
and
dec
and
mov
sbb
sbb
js
push
lods
jl
pop
sbb
inc
in
jg
scas
mov
stos
mov
push
mov
call
pop
mov
or
sahf
loop
mov
stos
mov
clc
ja
sarl
cmc
xor
out
jne
outsb
or
sub
sbb
push
pop
pushl
add
add
cmp
aaa
jl
sbbb
data16
test
push
mov
hlt
int
filds
and
mov
or
dec
mov
sbb
imull
push
pop
movsb
mov
fisubrl
inc
movaps
mov
cmp
cmp
pusha
repnz
add
mov
cmp
pushf
mov
pop
adcb
dec
push
jo
add
repnz
popa
loopne
and
bound
je
xchg
jmp
mov
xor
aam
xor
xor
add
dec
mov
sbb
inc
and
and
push
jl
mov
test
inc
retw
out
fistps
clc
pop
inc
or
xor
mov
push
and
adc
pushf
pop
cmp
push
mov
imul
or
cmp
inc
lahf
inc
mov
mov
sahf
or
loop
test
sub
adc
adc
daa
or
adc
cmp
jnp
hlt
pop
ss
jmp
mov
jb,pn
movl
outsl
fbstp
lahf
mov
sarb
pusha
jns
or
add
testb
push
in
dec
add
add
loope
fidivs
fisubl
mov
stos
sub
adc
mov
xchg
inc
push
cmc
jo
inc
mov
push
sbbb
mov
nop
xchg
jmp
icebp
iret
bound
daa
fsubl
and
divb
fs
fsubrs
jbe
mov
and
push
movsb
sub
dec
mov
enter
push
cmp
int3
mov
jge
out
sub
lods
mov
fldcw
inc
inc
inc
pop
fcoms
loop
dec
ret
loop
cld
decl
add
and
push
imulb
lcall
ljmp
adc
push
loop
jb
mov
leave
ficompl
xor
pop
pop
push
je
insb
mov
inc
inc
jns
pop
movsb
js
xchg
in
inc
mov
test
fbld
gs
roll
popf
add
test
rorl
and
lcall
adc
cmp
xor
mov
pusha
filds
outsb
mov
mov
scas
aaa
jae
add
ficomps
or
ss
sti
jg
cmp
aam
ret
jo
pop
les
fs
push
stc
sbb
lods
cwtl
add
arpl
fistpll
inc
test
dec
adc
pop
push
enter
sbb
or
test
ret
leave
sarl
pusha
inc
dec
pushl
pop
std
out
inc
and
pop
ds
push
dec
jl
jmp
mov
or
cmpsl
mov
cmp
inc
mov
push
lcall
xchg
pushl
in
and
jbe
test
in
addb
in
dec
push
lock
mov
add
cmpsl
nop
mov
xorl
pop
inc
hlt
scas
ja
mov
sub
sbb
and
ljmp
push
adcb
cwtl
repz
sbb
mov
inc
pusha
or
jl
push
lock
sarl
mov
cmp
leave
mov
push
sbb
mov
jo
mov
inc
pop
jnp
mov
jmp
scas
cmp
xor
mov
adc
sbb
dec
inc
jle
xchg
mov
cwtl
icebp
mov
pop
xchg
push
test
sub
mov
jp
mov
aaa
xchg
mov
lret
sbb
repz
testb
mov
rolb
fs
jbe
add
xchg
sub
xor
mov
sbbb
lcall
aaa
or
dec
add
mov
sub
adc
mov
sbb
std
lret
inc
adc
out
outsb
add
mov
or
aas
out
js
ficomps
cli
push
adc
jl
mov
in
inc
inc
int3
add
fiadds
mov
ret
cmp
ljmp
jns
pop
add
test
popa
push
or
gs
cld
adc
dec
stos
lods
inc
enter
cmpb
mov
js
mov
insb
aaa
adc
push
push
jne
es
sub
xchg
inc
jecxz
into
pushf
shrb
and
push
mov
add
jo
hlt
add
imul
xor
mov
hlt
or
icebp
jmp
insb
fnstsw
jecxz
cmp
lret
xor
push
inc
fbld
and
pusha
cli
gs
cli
mov
mov
xor
mov
xchg
dec
cmpsb
inc
out
inc
fbstp
push
mov
push
or
subb
cmpsb
mov
cwtl
cmpsl
add
ljmp
dec
outsb
cld
cmpsb
jae
data16
inc
bound
sub
hlt
pop
adc
jp
dec
adc
mov
jge
dec
dec
and
mov
inc
jb
push
rcrb
sbb
push
mov
xor
mov
or
xor
lcall
int
jl
cmp
or
mov
mov
adc
xor
js
mov
lods
sbb
sbb
ss
scas
in
mov
repnz
mov
and
push
fisttpll
sub
movsl
loopne
add
add
xchg
mov
inc
sub
loopne
pop
in
es
mov
mov
in
jb
je
mov
filds
inc
divb
fs
lcall
je
movsl
addb
lcall
addl
push
addl
or
in
ret
mov
mov
and
xchg
loopne
jne
mov
push
cmpl
cmc
or
xchg
jge
add
inc
icebp
xlat
cmp
adc
sbb
inc
outsb
xchg
pop
xor
mov
mov
pop
xchg
mov
cmp
daa
mov
pop
inc
push
add
add
fdivs
movsl
test
dec
loopne
sbb
push
ss
lock
or
inc
adc
out
stc
out
sbb
fwait
in
xor
cmc
lods
pushf
test
cmc
cli
lret
and
je
or
cmp
pop
dec
inc
pop
das
iret
push
mov
cli
push
iret
and
lods
mov
pop
inc
lds
icebp
pop
mov
lea
jg
and
sub
aam
adc
mov
js
mov
mov
adc
stc
xor
xor
stc
mov
and
out
dec
or
lcall
cmc
scas
cmp
push
mov
add
and
out
mov
adc
sbb
je
enter
xchg
test
mov
add
add
aam
pop
jp
sbb
adc
decl
test
mov
aam
mov
mov
fimuls
in
pusha
hlt
test
jecxz
jb
rorb
sbb
adc
sub
stos
stos
mov
push
add
sbb
ret
jle
pop
mov
mov
or
scas
sbb
push
cmp
sbb
lcall
pop
or
rolb
sbb
sub
cld
jle
push
inc
pop
dec
imul
gs
mov
sbb
push
mov
jns
add
mov
mov
or
dec
cmp
xlat
and
lret
dec
adc
push
fs
cmc
jecxz
clc
hlt
lods
mov
aaa
add
sub
cld
pop
mov
adc
scas
addr16
add
sbb
or
sbb
pushl
mov
ficoml
adc
rorl
xor
add
std
jle,pt
inc
fcomps
scas
loopne
cltd
filds
mov
sbb
rcr
mov
daa
xchg
sub
icebp
xchg
vxorps
stc
stos
in
mov
sub
dec
jnp
add
in
mov
dec
and
inc
xchg
mov
mov
or
rdmsr
mov
sti
jb
jp
mov
dec
enter
scas
fdiv
push
inc
ret
idiv
imul
andl
popf
loope
cmpsl
xor
ss
loopne
das
mov
pop
js
js
mov
lods
scas
and
pop
fistpl
loope
push
cwtl
imul
out
add
add
rorl
pop
sbb
add
or
push
mov
inc
inc
in
outsb
insb
out
adc
adc
mov
insb
daa
bound
or
jge
out
inc
fdiv
jg
and
and
pusha
pop
xor
mov
sub
daa
jae
jp
mov
adc
lahf
fwait
push
shlb
rcl
call
add
cld
das
dec
lea
loop
sub
pop
push
fdiv
jmp
rcrl
push
ds
lea
stos
clc
cmp
decl
mov
ss
pop
jnp
cmp
push
jp
subb
push
cld
and
jg
jo
jp
dec
mov
ds
shr
ret
fidivs
add
sbb
pop
xor
xchg
adc
jg
inc
clc
dec
in
stc
and
inc
es
ds
clc
pushf
xor
mov
cld
test
xor
inc
or
cmp
repz
pop
sub
ret
fwait
mov
sub
orb
lea
push
push
mov
das
test
repz
test
adc
iret
push
stos
nop
jg
mov
fidivrs
push
mov
push
mov
rolb
hlt
jl
push
cld
scas
ret
jae
sar
adc
jmp
sarb
pop
jo
orb
add
sbb
test
bound
cmpsl
mov
notb
aam
mov
mov
jmp
push
movsl
dec
outsl
mov
les
shrl
adc
clc
pop
lods
ficoms
jmp
xchg
ret
jl
jp
pop
test
push
sub
mov
jb
test
imul
jecxz
jp
scas
shrl
pop
in
leave
out
add
push
dec
pop
lods
rcrb
xor
cld
clc
mov
out
mov
cmp
push
push
data16
cmp
push
andl
stos
xchg
add
out
fdivs
cld
jg
fs
xor
ret
add
pop
iret
adc
cmp
sub
popf
cmp
cmp
fs
and
ja
call
rcll
clc
popf
adc
and
test
and
and
enter
fcoml
ja
movsb
nop
clc
push
push
fsubrs
lcall
inc
ja
mov
lcall
pop
cmp
xchg
and
iret
cli
ucomiss
int
mov
push
pushl
sbb
outsl
xchg
and
pop
mov
sub
cli
push
adc
fdivrs
mov
idivb
cmp
lret
xchg
sub
outsb
mov
adc
inc
stos
dec
lods
push
cld
std
cmp
cmpsl
imul
mov
imul
mov
out
decl
cld
call
xchg
push
push
xchg
push
js
lret
sbb
movsl
lods
les
insb
std
out
mov
mov
shl
idiv
sbb
pushf
leave
aas
xor
xchg
lds
sub
or
cli
or
loopne
mov
fs
daa
iret
aas
cmpsb
movsb
addl
mov
stos
jge
or
leave
cli
ljmp
push
je
mov
sub
xor
cwtl
pop
popa
into
jmp
dec
pop
add
ds
ljmp
adc
ficoml
testb
sbb
mov
aam
pop
decl
pushf
mov
adc
xchg
or
and
mov
jmp
xchg
mov
fwait
icebp
aam
jg
sub
and
mov
mov
ret
test
add
and
or
mov
push
call
or
les
popa
inc
clc
nop
lret
add
push
mov
dec
cli
loop
addl
fs
subl
pop
cmc
push
jg
and
inc
ret
dec
cs
dec
cld
outsl
xor
sub
pop
movsb
xchg
fists
inc
mov
inc
adcl
dec
pop
cli
pop
add
dec
fstpl
jp
add
jecxz
pusha
jmp
or
sub
lock
lret
jmp
sbb
push
outsb
or
jge
popa
pop
adc
lods
mov
mov
or
mov
adc
lds
fcomps
lcall
cmp
ss
adc
pop
jl
shll
jle
sbb
out
int
add
lock
pusha
jle
add
xlat
test
jg
xchg
push
inc
jo
mov
mov
gs
add
mov
dec
inc
ljmp
mov
sbb
sbb
mov
and
sub
add
fs
in
cmp
outsb
jb
jecxz
add
call
pop
adc
mov
dec
loope
hlt
sahf
pop
mov
jbe
sub
push
jmp
fdiv
cmc
mov
mov
outsl
mov
mov
pusha
popa
sbb
adc
pop
clc
sub
dec
ss
std
sbb
adcb
cli
sti
ja
add
ja
ret
roll
xchg
xchg
ret
jp
pop
push
stc
jle
cld
adc
cli
and
mov
nop
add
push
xlat
push
rcl
jae
cwtl
mov
xchg
outsl
fs
sbb
and
in
add
mov
xlat
xchg
push
mov
pushf
sbb
xchg
push
add
mov
mov
clc
pop
icebp
add
es
addr16
es
mov
sti
inc
fidivrs
adc
sti
cmc
incl
mov
add
fldl
call
add
adc
out
mov
adc
aam
das
lret
jle
jne
mov
mov
nop
pop
xor
and
ljmp
jg
jecxz
xchg
or
or
pop
lock
out
mov
cmp
add
hlt
test
lea
push
sarl
es
push
lret
inc
or
test
mov
sub
jle
sbb
daa
xchg
or
sub
inc
mov
mov
aad
in
nop
orl
dec
ljmp
cmpsb
fdivrl
push
cli
add
mov
xchg
cwtl
repz
push
nop
push
push
popa
inc
mov
mov
sbb
and
je
call
fst
inc
lock
and
adc
jecxz
sbb
xlat
mov
push
scas
jb
pop
xchg
jno
mov
ret
lods
sbb
cmp
push
jp
movsb
std
das
clc
xchg
push
inc
aas
ljmp
jnp
aaa
adc
data16
jge
rcrb
xor
mov
shll
ds
stos
adc
fistl
movsl
nop
imul
loopne
add
icebp
xchg
test
pop
push
jno
iret
pop
adc
lock
mov
sbb
mov
sbb
adc
aam
push
pop
hlt
loopne
les
push
into
push
jg
je
insl
adc
test
mov
inc
pop
jmp
inc
cmp
stc
negl
pop
mov
sbb
mov
push
out
divl
jmp
decb
xchg
cs
mov
or
nop
sub
enter
test
sub
pushf
mov
and
add
jo
movsb
pop
lock
push
add
outsl
mov
jno
bound
in
mov
call
ss
cwtl
cli
mov
pushf
xchg
mulb
cmc
sbb
xor
cld
inc
jg
fdivr
fists
xchg
mov
sbb
jb
mov
push
dec
mov
and
push
and
and
rclb
jnp
sub
mov
aaa
pop
gs
mov
inc
das
cli
mov
inc
jl
dec
orl
sbb
push
and
sub
sahf
sub
fwait
xor
mov
add
sbb
insb
movsl
add
scas
outsb
sahf
push
mov
push
pop
mov
pop
xchg
icebp
pop
pop
push
test
fildll
inc
jbe
nop
mov
mov
fwait
or
and
movsl
cld
nop
pop
inc
pop
cli
add
cmpsb
data16
ret
arpl
lods
cld
add
adc
push
sbb
rolb
loopne
sub
mov
mov
shll
clc
add
add
cmp
cmp
cs
xchg
adc
pop
or
jne
stos
xor
loopne
sbb
xor
movsb
insl
clc
idivb
xchg
adc
aad
xchg
loope
xchg
test
jno
call
inc
adcb
cwtl
lahf
ds
inc
bound
mov
out
gs
dec
mov
repz
jg
aas
or
ret
into
mov
stos
cli
out
outsb
sbb
xor
scas
push
out
xchg
roll
inc
movsl
add
pusha
adc
ja
mov
ret
std
add
xor
repnz
inc
jp
sub
arpl
loop
mov
or
pop
ret
cmpsb
std
pushf
xor
cmc
add
cs
dec
lea
cmc
out
test
scas
notb
mov
pop
daa
rcll
pop
pop
mov
inc
scas
pushf
lret
and
shlb
pop
inc
idiv
push
rcrb
adc
sub
add
push
movsl
lock
push
rorl
push
or
clc
xor
ss
push
in
int3
or
push
clc
or
shl
push
lcall
dec
mov
divl
xchg
mov
in
mov
repnz
cmpsl
lods
scas
mov
ds
push
pop
pop
add
insl
fmuls
sarl
mov
lods
xor
pop
out
xchg
push
je
push
call
js
xchg
mov
jg
loope
shlb
es
pop
shll
aas
repz
and
fwait
mov
sub
push
inc
jge
testl
and
fs
xchg
ds
nop
add
push
addb
test
sub
dec
or
and
fisubl
int3
mov
pop
ret
and
mov
jo
xor
cmp
addr16
xchg
fidivs
test
adc
add
les
out
popl
lds
dec
popa
adc
fstpt
push
jl
js
pop
or
movsl
xor
mov
inc
cmp
ss
inc
pop
shl
cmp
push
mov
mov
inc
hlt
and
sub
or
lea
lret
sbbl
rolb
mov
icebp
cmpsb
adc
mul
and
lahf
mov
mov
fdivrs
and
dec
icebp
pop
adc
jecxz
adc
xor
sarl
out
and
xor
push
push
mov
mov
das
pop
insb
jl
imul
jg
gs
push
xchg
xor
test
inc
dec
jb
nop
fldcw
mov
test
loop
xchg
call
sub
clc
cli
sti
and
or
icebp
imul
fisubrl
loopne,pt
or
adc
pop
pop
xor
jno
fmuls
inc
bndldx
ret
cli
add
xor
sbb
test
scas
xchg
pop
adc
ljmp
sub
daa
test
ret
add
andl
add
jecxz
mov
popa
add
mov
loopne
jmp
and
push
pop
cmpl
pop
pop
rolb
cmp
jo
dec
push
test
inc
fdivrp
call
shrl
mov
fdivr
sub
les
jge
outsb
mov
es
sahf
add
aad
xor
adc
xor
mov
pop
out
push
gs
lea
lcall
sahf
dec
cwtl
lcall
inc
out
aam
sbb
inc
mov
vpcmpgtd
jb
push
inc
filds
je
inc
jo
cwtl
jg
bound
sahf
jg
add
out
pushf
pop
mov
jne
or
call
stc
and
dec
aaa
cmp
scas
xchg
push
add
cmpsb
les
int
testb
enter
es
jo
cwtl
and
fnstsw
mov
pushl
int
bound
xor
and
jo
cmp
push
imul
cmp
mov
mov
push
test
cmp
test
fisttpl
lds
orl
push
dec
and
jge
sarb
sbb
incl
push
es
jo
mov
sarl
je
pusha
jl
jb
sbb
mov
inc
leave
jg
push
test
adc
ret
test
add
mov
pop
push
pop
std
jo
sub
mov
or
out
rcrl
adc
and
stc
sbb
or
mov
inc
mov
add
add
add
pop
mov
inc
fwait
stos
mov
shrb
ffreep
test
repnz
dec
cmp
push
push
lock
mov
cmc
outsl
sar
lcall
je
xchg
xchg
sub
repz
in
sbb
into
scas
nop
icebp
jmp
or
push
popf
mov
or
enter
decl
mov
stos
push
adc
or
xchg
jbe
xor
test
aad
int3
push
jle
jg
xchg
sbb
outsb
inc
in
icebp
cli
jmp
push
ret
cmp
push
shrb
stc
les
mov
hlt
mov
dec
out
fxam
xor
fsubrs
mov
outsb
jge
mov
test
hlt
ljmp
popa
cmp
jg
push
sub
push
les
push
and
movb
mov
lods
das
ficoml
cwtl
dec
test
in
cli
lock
stos
add
dec
jbe
and
insl
orb
aad
mov
add
adc
sahf
movsb
pusha
insl
lahf
add
add
movsb
dec
pop
movsb
adc
sti
pop
cmpsb
dec
dec
jo
lock
movsb
xchg
cs
je
and
mov
jbe
dec
xor
lock
xchg
icebp
inc
adc
xchg
roll
inc
subl
inc
and
lock
sub
sar
xor
xor
cld
add
mov
sub
push
xchg
inc
adc
outsl
mov
inc
push
shlb
out
fdivl
popa
inc
lret
push
inc
outsb
popf
insb
lcall
cwtl
xor
lcall
dec
jle
out
mov
es
aaa
push
je
divb
stos
xchg
pop
mov
inc
adc
dec
jbe
pop
roll
aas
outsl
pushf
add
nop
in
roll
popf
push
push
int
das
fcoms
sbb
int3
xchg
sbb
add
loopne
pop
mov
cmpb
dec
cmp
mov
in
popf
cs
ljmp
inc
loope
dec
sub
mov
inc
or
push
sbbl
jmp
adcb
inc
mov
sub
xchg
inc
push
mov
mov
subb
push
xchg
jg
cmc
incl
push
das
push
mov
push
pop
cmp
mov
es
dec
mov
mov
inc
aad
roll
push
inc
enter
and
and
adc
jecxz
dec
cmp
lods
insl
mov
fdivs
in
cs
fdivrs
push
dec
sub
subl
inc
jb
cmpsb
or
mov
and
inc
inc
mov
lret
leave
cmpsb
ret
lea
mov
push
in
mov
dec
or
jle
mov
adc
aaa
loope
arpl
sahf
mov
cmp
dec
or
neg
cmp
xor
push
shlb
inc
push
les
pop
add
ficoml
jp
mov
call
push
shr
fs
sti
push
inc
nopl
mov
mov
lock
call
aas
cmp
pop
inc
mov
add
in
add
and
into
sub
decl
sub
xor
add
mov
clc
aaa
add
ret
or
xor
mov
cmp
mov
icebp
sub
out
hlt
inc
nop
adc
pop
pushl
mov
push
and
push
sbb
pop
call
call
inc
mov
mov
mov
pop
cmc
ljmp
idiv
fisttps
and
addr16
movsb
les
mov
rolb
jg
and
add
scas
jecxz
stc
daa
xor
sub
jg
fsin
cmp
in
mov
push
lcall
jbe
or
push
dec
or
adc
in
std
inc
std
not
push
insb
push
nop
movsl
pop
icebp
leave
fs
lcall
mov
sub
movsl
dec
mov
ficompl
and
cltd
inc
adc
incl
adc
in
dec
jno
mov
call
pop
std
push
mov
pop
mov
aas
outsb
in
test
shl
insb
dec
lods
cli
mov
dec
add
cwtl
sbb
mov
loope
outsl
pop
imul
push
mov
add
mov
cmp
lods
cmp
push
jmp
pop
jg
clc
xchg
cltd
nop
cwtl
xor
rorb
cwtl
sub
ficoml
add
ret
push
mov
stos
out
jmp
jnp
pop
loopne
ret
add
push
sbb
push
popa
or
test
movsb
neg
hlt
call
push
sub
mov
mov
and
xchg
stc
testb
pushl
mov
fadd
enter
mov
adc
fstpl
mov
add
sbb
inc
imul
cmpsl
mov
xchg
fcmovu
mov
loopne
pushf
push
jo
push
ret
jg
rolb
data16
or
fwait
incb
jl
call
sarb
jns
inc
dec
ds
clc
jg
or
cmp
inc
mov
pop
jmp
dec
insb
xchg
fdivrl
sbbl
sub
lods
jnp
add
push
inc
pop
push
fisubrs
stc
jmp
aas
jge
cld
cli
xchg
nop
push
sbb
pop
ds
mov
or
ja
ret
fdiv
or
push
jne
mov
scas
bound
lods
call
cli
outsb
scas
pop
hlt
stos
dec
loop
xor
mov
lret
xchg
ds
dec
mov
pushl
mov
fnsaves
or
in
lds
lock
mov
and
sbb
ret
fcompl
addl
call
lret
sbb
jp
xorl
mov
mov
mov
xor
and
push
xor
enter
push
jns
std
addr16
push
mov
add
outsl
outsb
lods
sbb
cmovne
sbbl
mov
mov
adc
int3
adc
das
pop
loopne
or
or
lds
or
rol
in
push
shlb
outsb
jp
mov
in
mov
sub
pop
popa
sub
int
aad
or
mov
leave
xchg
fisttps
movsb
lock
popa
rolb
clc
jg
xchg
xor
mov
pushf
or
cld
or
sbb
mov
aaa
pop
sub
in
push
lea
inc
imul
jmp
scas
mov
or
cmp
flds
pop
dec
aaa
and
imul
or
lea
call
sar
pop
addb
je
out
jns
add
jno
inc
xchg
sbb
int3
insb
push
mov
adc
jo
bound
dec
js
fs
pop
ds
add
adc
scas
mov
cmpb
mov
lret
cmp
lcall
or
add
ret
icebp
rolb
fmull
pop
push
cmpsb
std
add
or
add
std
ret
testb
je
insl
test
cmovp
mov
or
xor
sub
or
popa
fmull
jae
outsb
dec
pop
mov
and
dec
push
add
push
ret
lcall
lods
push
cmc
bound
outsb
icebp
sbb
mov
mov
cmp
mov
scas
cli
dec
and
mov
adc
das
mov
mov
inc
movsb
mov
mov
adc
std
jle
jmp
es
icebp
jnp
inc
sbb
add
dec
movsb
xchg
pop
push
dec
outsb
adc
push
add
push
and
out
scas
cmp
sub
addb
nop
cmp
adc
aas
shrb
stc
mov
je
scas
add
clc
icebp
add
shrl
adc
inc
std
xchg
mov
add
sbb
pop
loop
cs
jno
xor
cltd
fidivs
push
sbb
pop
cmc
cld
mov
jle
sbb
arpl
ret
fnstcw
push
push
ja
popf
stos
add
xchg
dec
decl
mov
loop
mov
lock
mov
out
movhlps
inc
mov
jle
nop
clc
and
repnz
xor
shrl
test
and
mov
push
out
les
stos
sbb
or
cmc
pop
sub
xor
lods
shrb
andl
addr16
pop
pop
mov
xchg
cmpsb
movlhps
aaa
xor
lret
mov
ret
and
push
aad
push
loopne
mov
add
add
inc
inc
or
rol
and
pop
inc
add
sbb
mov
jecxz
nop
and
and
jl
or
dec
add
jb
orb
xchg
pusha
inc
ss
jmp
dec
sub
icebp
add
jle
sbb
test
xchg
mov
pusha
mov
fmuls
xchg
push
add
mov
movb
pop
stc
nop
mov
insb
push
insb
pop
scas
lock
add
data16
in
scas
jb
das
cli
or
sbb
mov
pop
mov
inc
rcll
pushf
rcr
in
xor
jge
pop
or
cmc
pop
cmp
das
xor
mov
imul
scas
dec
adc
int3
push
lds
cld
aas
dec
or
or
jecxz
xor
add
test
les
out
inc
mov
rol
flds
push
testl
test
loope
dec
mov
push
jo
xorb
outsb
test
jl
lock
es
lcall
les
push
mov
jnp
std
aas
cli
jg
inc
lea
arpl
sub
sbb
mov
or
push
dec
lret
push
or
aaa
push
rorb
cld
test
adc
test
ds
cmpsl
fisttpl
and
xorl
mov
je
ss
inc
nop
in
mov
push
and
fiaddl
sbbb
sbbl
xchg
xor
sahf
mov
mov
jle
aaa
jecxz
mov
mulb
ljmp
std
inc
scas
jg
sbb
loope
dec
adc
pop
cmc
adc
cmp
arpl
arpl
dec
jbe
or
or
das
popl
fucom
pop
add
dec
lahf
adc
jle
push
pop
jecxz
inc
mov
or
out
rol
loop
test
jns
adc
jge
shlb
xchg
and
sti
in
or
cmp
pushl
in
shll
out
inc
mov
add
add
cmp
ljmp
iret
stos
cmp
mov
and
pushl
and
sub
pushf
ljmp
orl
add
sub
jle
mov
fdivs
xor
les
unpcklps
lock
in
push
shl
std
fbld
cmc
jp
adc
adc
jg
cmp
cmpsl
outsl
pushf
and
stos
pop
les
xlat
stos
lods
sti
fbld
mov
cmp
lcall
xorl
push
aam
inc
insb
negb
ret
jge
adc
jecxz
cs
ret
shlb
sbb
push
sbb
popa
mov
or
and
inc
sub
mov
jge
dec
and
pop
nop
call
add
std
push
fildll
mov
ja
fdiv
dec
out
mov
sarl
adc
lods
cwtl
mov
mov
push
fs
jb
pusha
sbb
cld
cmpsb
in
mov
jo
push
jmp
loopne
shrb
inc
or
xor
sub
cltd
sbb
cs
test
push
je
and
lock
adc
inc
or
decl
stos
mov
or
inc
sub
inc
push
mov
mov
dec
xchg
insl
push
dec
push
sti
cmpsb
mov
mov
cwtl
dec
dec
or
adc
xchg
data16
mov
mov
mov
mov
mov
shlb
xorb
in
jg
loope
shlb
leave
push
data16
call
dec
jns
or
ljmp
aam
movsb
dec
sbb
push
jo
mov
dec
xor
add
or
fisttpl
insl
adc
les
add
cltd
addr16
jmp
xchg
rolb
test
mov
fists
outsb
or
sub
mov
out
jecxz
mov
push
mov
sub
cs
push
data16
push
push
fsubrl
cli
rcr
test
push
pop
inc
loop
push
jle
cmp
call
incl
cld
cmp
cmp
cmp
cmpsb
and
inc
push
xor
pop
hlt
loope
imul
lods
popa
adc
push
frstor
add
pop
lds
sbb
test
fbld
inc
jp
in
add
lock
out
lcall
cmpsl
hlt
das
jle
test
and
mov
ss
stos
xchg
inc
clc
orb
cmpsl
add
clc
dec
inc
repnz
mov
sub
js
mov
push
inc
mov
adc
or
lret
or
pushf
jl
mov
push
insl
and
aaa
cmpl
ret
clc
mov
mov
aam
je
subb
adc
mov
adc
pop
jp
loopne
pop
push
je
adc
daa
pusha
pop
arpl
and
cmp
pusha
mov
lret
jmp
xchg
insl
bound
rolb
lock
mov
mov
outsb
call
hlt
cmp
cld
lods
inc
lds
pop
pop
xchg
inc
cwtl
xchg
push
jno
mov
push
push
sub
jno
and
sbbb
lcall
out
leave
dec
pop
fldz
push
aas
add
inc
push
stc
sbbb
test
outsb
das
mov
loope
xlat
cltd
sbb
ret
inc
std
imul
xor
data16
jp
and
pusha
es
lret
cmp
pushl
hlt
cld
loop
cmp
or
out
sbb
xor
dec
add
jl
test
jno
std
aaa
or
ja
out
jmp
lods
sarb
es
mov
test
js
iret
and
in
fimuls
out
pop
sub
push
inc
pop
dec
sbbb
ljmp
push
sbb
fcom
icebp
pop
sub
sbb
sub
or
xchg
gs
mov
or
loopne
push
push
lret
dec
cltd
ret
je
test
adc
sub
icebp
ljmp
mov
push
xor
jo
inc
pop
int3
pop
int
sub
mov
jge
out
lock
adcl
dec
mov
adc
outsl
xchg
lock
xchg
fcmovb
call
mov
xor
loope
decl
adc
fcomps
andb
movsb
stos
movnti
sarb
mov
lcall
sub
in
mov
ss
cmp
or
pushl
xchg
jb
int3
adc
jne
scas
insb
push
movsb
notl
mov
cmp
lds
push
lret
js
xchg
outsb
xor
movzbl
jae
push
popf
add
xchg
xchg
sub
push
loopne
popf
dec
in
cwtl
cld
jp
xchg
loope
ss
add
movsl
push
mov
call
fisttps
je
popf
outsb
adc
adc
pop
icebp
leave
repz
rcll
rcll
jb
cld
dec
mov
cmp
push
push
jbe
pop
sbb
dec
mov
or
pushf
movsb
adc
hlt
adc
lcall
push
mov
cmpsl
js
sub
jne
lds
hlt
popa
and
add
jb
cmp
lods
movsb
loope
aas
pop
lods
cmc
add
subl
aad
pop
rorb
cmp
mov
call
shr
cli
and
add
dec
loope
std
add
sbb
pop
aad
adc
mov
mov
mov
pushaw
popa
inc
inc
sti
mov
lock
not
pushl
popa
ret
push
and
popa
rcl
mov
lods
clc
shr
negb
mov
mov
imul
pop
aas
sub
adcb
xchg
mov
or
xorb
aaa
clc
loope
add
loop
adc
pop
ljmp
jae
adc
clc
call
and
cmp
sub
cmpsl
in
pop
push
mov
dec
pusha
add
cltd
subl
and
mov
add
xchg
or
sbb
or
mov
add
cmpsl
dec
push
outsl
mov
jl
add
mov
rorl
inc
clc
mov
xchg
jmp
jns
push
loopne
jmp
roll
mov
and
pusha
mov
push
scas
pop
and
and
lock
and
gs
or
or
into
pop
adc
nop
int
ret
leave
xor
movsb
jecxz
mov
repnz
lcall
mov
mov
out
int
scas
jne
push
add
push
dec
or
clts
std
loope
int
stos
pop
mov
push
xor
in
adc
adc
stc
and
adc
stos
sbb
test
sbb
dec
xor
movsl
lcall
shrb
lret
jbe
adc
mov
je
movd
sbb
cmovnp
sbb
es
addb
mov
mov
xchg
movsb
pusha
cmp
or
xlat
enter
mov
mov
pop
or
aad
shrb
pop
jmp
fs
mov
cmp
adc
nop
fsubs
mov
and
pusha
dec
pusha
leave
ljmp
test
mov
rol
cmp
mov
pushf
int3
jp
xor
loopne
pop
or
pop
push
adc
aam
aad
mov
cmpsb
sbb
cmp
bound
cmc
mov
lods
mov
sbb
xchg
fcmovu
or
test
ror
cmp
add
xchg
push
or
es
cmp
mov
dec
lret
repnz
xor
mov
and
push
add
data16
or
mov
shll
cmc
sub
push
cmp
cli
aaa
push
xor
fildll
cmp
outsl
mov
outsb
cmp
inc
xor
outsb
cld
repz
sti
push
pop
add
lock
xchg
pop
rcrl
shlb
xor
fsubp
mov
lcall
cmp
adc
fwait
adc
test
add
sbb
leave
stos
sbb
push
pusha
dec
icebp
jnp
call
mov
cmp
push
mov
das
ret
mov
ret
in
jl
clc
sub
fldt
iret
orb
or
xor
cmp
mov
add
icebp
add
adc
andb
sub
lock
sbb
fst
xor
imul
jl
dec
jl
cmpsl
jg
dec
mov
cwtl
ret
ss
roll
or
popf
xor
inc
enter
test
pop
cltd
jne
xor
mov
xchg
lcall
jp
adc
mov
mov
ljmp
cmp
pushf
stc
mov
pop
std
inc
insb
xchg
nop
nop
and
cmp
in
shll
daa
js
aad
adc
lahf
cli
mov
pop
add
mov
rolb
repz
sub
push
sub
cmpsb
push
pop
sub
pop
jg
test
xor
sbbb
rorb
imul
je
xchg
xchg
fbld
sbb
repnz
or
mov
clc
pop
inc
sahf
ljmp
mov
test
gs
fnstcw
sbb
cmp
pop
inc
and
add
xor
push
mov
push
dec
cmpsb
mov
icebp
cmovge
inc
std
iret
adc
sbb
clc
lahf
scas
mov
loope
dec
or
push
xchg
fucom
shll
outsl
push
cmp
into
daa
fs
inc
mov
and
fiaddl
scas
ficoml
fwait
bound
push
repnz
lods
add
dec
push
dec
xchg
je
cmpb
push
aas
cmpsl
add
adc
adc
out
int
mov
mov
push
enter
fisubs
idiv
decl
dec
adc
add
cmp
test
or
stos
sub
push
sar
dec
cli
decl
push
nop
or
pop
mov
inc
sarl
sarl
addr16
lcall
cmpb
mov
sub
inc
adc
xor
rcrb
fildll
jecxz
movb
mov
fs
inc
xchg
in
ljmp
cmpsl
cltd
inc
xchg
clc
icebp
push
mov
push
mov
loope
outsb
bound
inc
jo
out
xor
mov
hlt
imul
mov
or
aam
icebp
dec
loop
pop
arpl
sbb
sbb
call
pop
mov
xchg
repz
push
or
bound
cmpsl
pop
adc
inc
hlt
mov
or
add
outsl
lcall
mov
xor
add
inc
dec
cmp
cwtl
or
adc
popa
push
cmp
xor
lods
pop
pop
insb
cmp
mov
subps
scas
sbb
or
jb
mov
aaa
pusha
adc
vmread
fadds
push
pushl
adc
add
inc
gs
xlat
aam
popa
jg
mov
incl
ret
fisubs
adc
push
mov
xor
in
into
xor
arpl
push
mov
aas
stc
mov
push
cwtl
shll
cli
xchg
xchg
mull
leave
cmpsb
loop
repz
add
pushf
pop
jmp
subb
out
iret
data16
pop
test
push
negl
mov
sbb
pop
push
outsl
lret
mov
cli
shlb
jae
je
fwait
enter
or
lods
hlt
in
inc
popf
or
popa
dec
inc
jmp
or
sarl
loop
idiv
mov
xor
out
or
xor
xchg
lret
push
addb
dec
stos
sbbl
pop
sbb
mov
push
mov
clc
fdivrl
add
lret
je
ljmp
sbb
mov
sub
pop
and
and
jg
aam
push
enter
into
pextrw
xchg
ja
add
and
int
shll
mov
xchg
mov
test
sub
xchg
pop
dec
sub
dec
xchg
sti
ja
call
sbb
jl
fimuls
xchg
sbb
stos
jl
js
in
incl
aad
pop
dec
stos
fdivs
pop
mov
jne
adc
adc
cmp
sbb
decb
dec
sahf
ret
add
popa
add
mov
cmp
cltd
addr16
and
lea
jae
mov
pop
ret
ljmp
mov
loopne
adc
jle
es
cmp
jnp
mov
loope
stc
sub
inc
test
scas
adc
std
or
lods
jecxz
mov
loopne
decl
and
stos
pop
push
sbb
rolb
daa
hlt
jge
cmp
enter
inc
insl
clc
mov
mov
jmp
jg
pop
out
insl
in
orl
xchg
cmpsl
sbb
notb
jo
sar
push
bound
mov
sbb
rolb
dec
cltd
in
out
cmc
jne
mov
adc
add
pop
cmp
or
mov
in
add
and
and
mov
push
inc
ljmp
mov
cmp
cmpb
xor
add
out
jp
xor
fcmovb
pop
sub
pop
js
and
call
loope
xor
ret
add
scas
jno
sahf
inc
jo
add
fnstenv
inc
lods
call
xor
pushf
inc
and
ficomps
push
fmuls
push
dec
jl
jg
sarb
jge
jo
out
or
and
enter
mov
push
lods
ror
or
je
rclb
scas
add
popa
sbb
les
repnz
aaa
dec
sub
jp
adc
mov
lahf
add
repz
mov
out
orl
xor
loope
aam
cmp
aas
inc
mov
decl
imul
mov
das
cs
rolb
cmpsb
inc
incb
test
pushf
adc
xor
cmc
mov
and
inc
fadds
adc
xchg
lcall
movsb
int3
shll
sub
inc
or
pop
push
cmp
push
dec
icebp
ljmp
aad
je
sbb
std
or
pop
or
test
bound
loope
add
jl
das
xor
dec
add
lret
sbb
jmp
dec
cld
jnp
inc
mov
pop
int3
fimull
ljmp
sbb
and
rorb
inc
fwait
js
std
inc
je
pusha
lea
dec
adc
ja
and
dec
xor
inc
or
mov
es
testl
in
push
cltd
jo
and
adc
xor
jmp
jg
xor
mov
pushf
add
inc
inc
lret
pusha
jg
out
frndint
add
dec
repz
add
adc
xchg
inc
pusha
and
fdivs
xor
mov
jns
fsubl
adc
or
jge
fsubrs
add
pop
pop
orb
add
push
dec
sbb
mov
and
ret
repz
sbb
cmp
and
jg
inc
adc
movsb
sub
push
pop
dec
sub
dec
clc
jmp
dec
or
or
sub
ds
outsl
fdiv
int
xchg
jbe
ss
jns
add
pop
cld
jg
pop
incl
sub
or
into
push
mov
out
add
out
je
jp
mov
fs
jnp
inc
adc
cmp
hlt
call
sahf
mov
inc
loop
out
xor
mov
fisttps
xchg
mov
fnstcw
cld
push
xchg
ret
imul
jecxz
lds
lock
dec
inc
inc
cmp
cli
inc
shl
incl
add
mov
pop
adc
xlat
xchg
rorl
mov
jmp
int
fwait
mov
mov
lods
aam
xchg
arpl
dec
loopne
adc
sar
fistpl
bound
addr16
mov
sbb
cmp
stos
pop
xor
cmp
jnp
pop
jecxz
mov
mov
ficoms
sbb
ret
dec
pop
aad
jge
mov
movsl
pushl
cmp
jle
out
loopne
aam
push
sbb
add
iret
iret
cs
stos
fcomps
inc
or
aam
mov
xlat
cmpsb
or
loop
repz
sbb
jg
push
ds
pop
imul
mov
idiv
pop
or
mov
jecxz
push
cmp
mov
pop
cmp
cmpsl
icebp
das
incb
add
mov
inc
push
add
movsb
xor
fcomip
aaa
cld
fcomps
and
and
lods
push
push
jecxz
sbbl
jmp
cmpb
int
jle
mov
mov
dec
mov
mov
mov
lods
or
out
jp
mov
sarl
rcrb
icebp
jg
or
popa
loopne
sbb
loop
pop
push
sub
psubusb
aaa
mov
cmp
filds
sbb
xchg
aad
mov
stos
sub
cwtl
ret
mov
arpl
sbb
daa
cli
mov
rcrb
scas
mov
jmp
push
and
cld
js
push
bound
stos
push
loopne
add
push
xchg
adc
sti
mov
and
or
lret
push
sbb
adc
jle
or
call
or
outsb
mov
hlt
cld
mov
adc
add
mov
mov
clc
pushf
subb
mov
mov
mov
loop
add
sbb
adc
add
or
jae
lods
lret
push
repnz
cld
ret
pop
inc
shl
sbb
scas
dec
jbe
adc
push
clc
jle
lcall
jecxz
arpl
lcall
insb
inc
stos
cmpsb
mov
or
hlt
add
xchg
cmc
fbld
roll
jl
mov
clc
roll
sbb
mov
pushf
dec
aaa
test
or
xchg
lcall
cli
push
fwait
out
jmp
test
js
mov
push
add
pop
push
and
addl
mov
add
and
inc
mov
adc
lock
sbb
adc
inc
sbb
pop
pop
fists
fs
pop
push
test
sbb
jg
push
sub
pop
cwtl
xchg
pusha
loope
add
xor
mov
addb
pop
cmpsb
dec
or
je
clc
jg
pop
lods
clc
mov
ret
bound
adc
xchg
rcl
je
cmp
pop
rorl
outsl
mov
mov
cmp
jp
sbb
cmpsb
das
clc
mov
into
rcrl
inc
xor
cmp
push
int3
jmp
inc
sub
and
std
jg
shlb
mov
inc
push
mov
popf
nop
xchg
mov
decl
dec
or
pop
imul
sub
pop
push
add
sbb
pop
lcall
loop
decl
or
xor
jmp
test
dec
fiaddl
jno
dec
or
sbbb
add
outsl
xor
nop
cmp
xchg
test
test
mov
hlt
fbstp
inc
jle
push
pop
ftst
xlat
sbbl
and
fsubr
int
and
pop
ret
fistpl
xchg
adcb
shlb
mov
push
roll
std
dec
pusha
lea
jbe
int
fisubl
into
inc
sbb
dec
adc
clc
sub
int3
sbb
jns
popl
adc
clc
pusha
inc
ret
in
jl
or
push
sbb
add
ret
daa
or
jmp
ljmp
xor
xor
jp
rcl
outsl
push
xor
cltd
test
cld
jg
push
int3
inc
dec
inc
inc
popl
jo
lret
mov
xor
addl
mov
jecxz
jecxz
pop
ret
dec
mov
push
fstl
mov
loopne
inc
aaa
ljmp
xchg
pop
xchg
sar
cmp
rep
mov
or
jle
shll
push
jo
pop
adcb
mov
shl
inc
loopne
fsubrl
negb
sbb
and
gs
jns
xlat
mov
adc
mov
lahf
push
test
stos
jno
mov
pushf
add
mov
cs
sub
sbb
xchg
xor
push
sarl
cld
shl
incb
repz
call
call
jg
ljmp
xchg
add
cmp
mov
test
sub
rorb
xchg
mov
jl
or
add
scas
push
nop
push
pop
inc
je
or
clc
add
jg
xor
pop
icebp
or
jns
pop
sarb
push
mov
insl
pop
xchg
aaa
mov
loopne
mov
imul
push
cmpsb
in
ljmp
bound
ret
push
push
lret
outsl
jb
and
xchg
fstl
call
inc
sub
test
out
decl
push
ret
hlt
jno
pop
cmp
sub
or
lock
mov
cmp
loopne
test
jl
sarb
adc
loop
jno
aaa
std
mov
js
add
and
mov
insb
push
sahf
popa
jge
pop
int3
or
in
dec
or
les
fbstp
jbe
bound
in
filds
fstl
jb
aad
repz
in
mov
adc
mov
pusha
or
mov
push
mov
dec
leave
mov
pop
push
cld
xchg
subb
std
sub
je
stc
loop
sbb
pop
rcl
sub
fmuls
dec
ds
and
loopne
inc
and
push
xor
xchg
mov
xchg
orb
and
add
push
imul
mov
popa
or
stos
lods
ror
test
inc
jl
or
call
out
xchg
inc
sbb
sub
mov
sub
cli
push
cmp
nop
js
dec
xchg
mov
add
fcoml
and
mov
decl
push
shll
or
cmc
fcompl
dec
sbb
or
cmp
sub
repnz
push
pop
add
or
dec
shll
or
dec
cmp
dec
jp
popa
nop
inc
pop
cld
and
jmp
mov
cmp
mov
xorl
loopne
or
push
push
inc
les
repnz
stos
xor
movsb
jecxz
sti
push
jg
push
cmc
inc
or
inc
or
cli
add
js
pop
pop
mov
enter
push
jp
shll
xchg
clc
stc
sub
jecxz
sbb
push
aaa
add
push
imul
decb
or
fiaddl
std
pop
shrl
mov
enter
imul
shl
pop
push
mov
push
pop
adc
inc
outsl
pop
std
mov
xor
dec
call
pop
repnz
xor
ss
inc
dec
aad
aad
jb
scas
or
cmp
test
pop
jmp
out
shrl
sbb
add
jg
imul
xchg
mov
jg
adc
outsb
les
push
pop
lock
or
and
lret
test
and
sbbb
loopne
nop
pop
cli
stc
dec
mov
insl
push
bound
mov
pop
add
lcall
pop
sti
addr16
mov
pop
pop
pop
call
xor
jge
call
les
fdivl
mov
or
mov
cmp
mov
inc
loop
mov
xchg
mov
std
inc
cld
pop
mov
je
xor
mov
fwait
int3
mov
push
mov
or
jecxz
add
std
pop
or
js
jp
dec
out
pop
jae
test
and
mov
and
mov
jp
or
dec
mov
inc
pop
hlt
popf
xchg
std
xchg
push
adc
pop
ret
sbb
dec
and
negl
lret
insl
insl
add
cmpsb
mov
incl
mov
mov
and
mov
or
or
jg
test
es
and
stc
pop
push
add
pushf
iret
inc
xchg
jmp
cli
into
jbe
decl
cmc
out
fldt
test
cld
iret
xchg
test
dec
sbb
incl
add
mov
jmp
jb
lock
loop
or
ds
dec
popa
xchg
fbstp
rcr
push
pusha
jae
lock
clc
roll
dec
mov
fimuls
dec
and
mov
and
ret
mov
push
push
aas
loop
lods
mov
insb
add
cwtl
cli
jecxz
mov
xchg
fwait
cmp
outsb
cld
aas
out
shrb
test
xor
xchg
movsb
mov
scas
dec
repz
mov
nop
clc
adc
xor
std
popf
clc
outsl
hlt
and
std
adc
popa
lmsw
sub
mov
push
daa
ret
sbb
inc
add
repz
add
cli
inc
xchg
add
pop
fldl
pop
add
dec
outsl
sub
inc
addl
adc
add
jge
enter
test
stc
add
jg
push
or
mov
xchg
ljmp
push
icebp
mov
lahf
and
ljmp
cmp
stc
outsb
and
sti
dec
aas
mov
push
out
mov
cmp
sbb
mov
mov
andl
les
push
rclb
das
xor
repnz
add
mov
push
je
xchg
shll
push
loop
and
pop
ret
les
adcl
test
cld
fbstp
mov
cmpsb
js
shll
add
les
das
addr16
lcall
push
les
xchg
js
jnp
pop
push
jae
jg
insl
push
mov
mov
sti
jmp
add
inc
test
cmp
mov
push
cltd
mov
xchg
aaa
clc
out
outsl
dec
shr
cltd
xchg
shll
adc
xor
and
aad
call
and
inc
stos
jo
mov
adc
push
cld
pop
addr16
aaa
xchg
mov
in
push
push
lret
xchg
and
sbb
in
dec
inc
out
sbb
jmp
stc
negl
pop
push
add
out
cmp
ja
pop
push
jle
xor
cmp
adc
mov
push
orl
icebp
sbb
mov
pop
cld
out
and
loopne
adc
mov
dec
cmp
pop
out
push
pop
bound
sub
enter
pushl
aad
cmp
fstpt
adc
jecxz
adc
adc
push
cmp
loopne
adc
push
mov
loope
jge
loope
out
ljmp
and
pusha
pop
adc
xor
cmpsb
and
or
outsl
incl
clc
in
sahf
enter
iret
cmpsb
pop
mov
jmp
adc
and
rcrl
dec
outsb
jne
and
mov
mov
or
hlt
stos
clc
adc
mov
cs
sub
dec
push
pushf
cmpsb
push
push
lock
sub
int3
rorl
or
xrstor
fsts
add
sbb
push
pop
cmp
and
push
loopne
and
les
push
inc
into
into
push
push
arpl
out
add
jbe
lcall
pushl
call
sbb
dec
pop
inc
mov
inc
pop
add
sar
and
push
and
int3
cld
cmp
inc
mov
cltd
in
movsb
test
shrb
add
out
mov
pop
add
fldt
je
xor
mov
adc
add
ret
hlt
xor
loopne
jp
lahf
mov
mov
or
int
cli
jnp
cmp
push
mov
dec
mov
loopne
inc
fcmovbe
sub
and
bound
das
ss
int
and
rcrl
popf
nop
popf
sbb
aam
add
loopne
jmp
inc
inc
push
enter
or
or
inc
add
mov
inc
pusha
jl
cmp
leave
dec
dec
add
cmp
sub
xchg
sbb
or
dec
mov
push
mov
addr16
add
xor
decl
xchg
inc
clc
jecxz
rcrl
call
pop
pusha
sub
push
pop
sub
jb
cmpsb
gs
divb
popf
jmp
test
aas
ljmp
xor
in
pop
jns
call
or
iret
dec
pop
hlt
fbld
cmp
fwait
ret
out
frstor
adc
addr16
mov
cld
es
lahf
dec
sub
cmpb
mov
aam
and
xchg
xor
cli
lret
mov
clc
push
add
jbe
out
fstl
pusha
aam
call
adcb
dec
xor
ss
inc
ss
cmp
sahf
xchg
inc
lock
js
aas
addb
sub
cmpsb
push
pop
data16
sub
mov
jo
add
fsubs
xor
ret
adcl
push
ljmp
xchg
vphaddbd
ja
sub
xchg
movl
in
fstps
loope
nop
dec
stos
ret
xchg
pop
mov
das
xchg
mov
add
scas
mov
adc
mov
mov
data16
loopne
jbe
push
adc
add
dec
pop
movsl
lcall
sub
cmp
sbb
sub
adc
ljmp
adc
movsb
pop
push
jle
ficomps
inc
das
pop
aad
inc
repnz
dec
or
lock
das
cmp
decb
insl
loop
out
or
dec
out
out
cmp
in
push
loope
xor
pop
xchg
sbbb
fnsave
or
jge
xchg
ss
in
mov
cld
mov
mov
cwtl
mov
xchg
cmp
fucomi
cli
dec
shrb
popf
es
mov
push
insl
cmp
pop
lock
add
jle
mov
jp
add
clc
xchg
adc
inc
outsl
mov
lret
mov
or
and
enter
sub
incl
pop
out
sub
push
pop
xor
push
cmp
push
push
mov
ds
or
cltd
add
ljmp
cld
pop
xchg
inc
pop
mov
pusha
add
lret
scas
mov
push
or
mov
mov
cmpsb
cmpsl
leave
pusha
punpckldq
mov
clc
fcmovnu
adc
sub
jbe
fbstp
call
dec
mov
jp
cmp
inc
std
addb
xchg
lock
insb
js
inc
aaa
rclb
pop
repnz
dec
scas
push
data16
ljmp
mov
lds
js
out
or
xchg
test
inc
sbb
int3
push
push
inc
sahf
push
lods
pop
pusha
add
xchg
movsb
pop
dec
in
jae
ljmp
dec
add
and
lret
roll
mov
test
test
sbb
fistps
push
fcoml
call
jg
mov
fcompl
cs
cmp
enter
xchg
arpl
lahf
push
push
outsb
and
or
cld
out
push
or
dec
add
and
es
inc
js
jo
push
sub
stos
imul
dec
mov
incl
cld
fwait
jl
fidivrs
dec
cmp
and
inc
icebp
mov
icebp
lock
subl
push
and
adc
insl
imul
lock
aad
push
popa
mov
pop
xor
sbb
outsb
es
mov
leave
test
mov
rorb
lds
mov
clc
call
pop
pop
jb
adc
xchg
outsb
cmp
add
and
aas
mov
pop
push
leave
lds
movsb
es
jg
add
xchg
inc
mov
mov
or
mov
jb
int3
add
adcl
mov
ss
add
mov
pushl
in
xor
mov
or
clc
inc
clc
sbb
dec
sbb
jp
pop
sarb
movsb
in
push
lods
rolb
mov
data16
out
adc
jp
out
mov
int
rolb
ret
and
aas
or
cld
push
jno
add
je
inc
jns
jg
cmc
add
je
pop
sbb
dec
cmpxchg
xor
pusha
shll
ret
test
ss
lahf
movsl
sub
lahf
xchg
in
push
push
scas
mov
neg
fnsave
add
outsb
loopne
adc
in
test
xchg
ljmp
rcrl
movsb
js
mov
or
dec
cmp
int
xchg
xchg
pop
jnp
adc
add
addl
sbb
ds
jp
mov
jnp
ljmp
popf
mov
jno
mov
add
in
pop
out
mov
mov
sti
sahf
mov
or
dec
add
pop
cli
aas
xchg
xlat
ds
test
cli
dec
ds
sbb
es
bound
inc
insb
push
pop
and
xchg
push
in
mov
adc
or
cli
sti
xchg
addr16
js
clflush
adc
in
pop
xchg
jmp
jbe
sub
jl
add
sub
xchg
and
mov
and
adc
dec
pop
loopne
std
pop
shl
lea
popa
adc
das
push
outsb
shlb
rorb
lcall
hlt
pop
dec
inc
aas
cltd
cmp
scas
pop
push
loope
fs
adc
mov
mov
ljmp
nop
dec
cltd
inc
sbb
aaa
insl
mov
cld
push
push
jmp
xor
pop
xlat
inc
add
add
pop
push
mov
inc
jb
inc
inc
aam
or
cmc
outsl
ljmp
mov
in
movsb
or
jo
pushl
lock
cli
cltd
add
jecxz
add
loop
push
shrb
cs
adc
pop
add
dec
ljmp
enter
std
push
fwait
and
aas
sti
movsb
pop
bound
ljmp
dec
sarb
pusha
mov
test
lock
sub
xchg
push
lds
movsb
mov
or
push
cli
and
fistpll
mov
xor
dec
in
stc
xorl
cmc
lahf
mov
enter
out
paddb
mov
or
xor
jg
mov
ja
mov
add
fbld
leave
cmc
inc
movsl
addr16
test
sub
add
inc
push
sub
sbb
rorb
loope
push
lods
or
nop
lods
inc
mov
and
in
arpl
adcb
shlb
mov
mov
push
fwait
popf
ret
arpl
lcall
and
or
and
push
aaa
or
adc
loop
push
mov
cmp
push
les
rorl
and
ret
mov
in
pop
clc
lcall
push
psubd
popf
or
adc
or
in
xor
mov
je
aaa
clc
enter
mov
dec
scas
dec
or
push
pop
dec
mov
out
mov
sub
mov
shll
dec
pop
cmc
push
jo
loope
jg
loope
or
out
mov
dec
xorb
mov
incl
loopne
insl
lock
lcall
les
mov
js
sbb
dec
inc
rcrl
test
or
clc
xor
enter
push
ret
jg
add
jbe
sub
mov
xor
push
incl
lcall
ljmp
inc
arpl
lret
test
xchg
mov
inc
loope
sar
dec
adcb
mov
in
dec
aas
add
jbe
jmp
fidivrs
aaa
pop
leave
and
in
daa
loope
mov
movsb
adc
xlat
dec
loope
adc
or
inc
lcall
in
sub
pop
mov
jmp
xchg
testb
aaa
mov
sti
and
inc
push
jmp
call
adc
cld
mov
mov
and
pushf
cmp
jbe
xchg
ret
push
js
push
add
mov
fidivrs
lcall
jnp
jmp
aam
shlb
xor
adc
clc
add
popa
inc
mov
or
mov
push
cmp
adc
cmp
out
pop
call
incl
jle
cmc
adc
or
addr16
hlt
icebp
mov
mov
clc
cmp
cmp
movsb
lea
leave
fs
cmp
lock
ret
popa
sbb
sbb
pop
clc
fcomi
jnp
mov
js
jbe
inc
lods
pop
inc
ljmp
adc
sub
xor
in
or
jecxz
push
inc
or
insl
mov
adc
rcrb
popa
loop
lock
pushl
jecxz
add
sub
mov
or
add
mov
decb
incb
testb
iret
adc
rep
fsubs
clc
lock
pop
dec
jecxz
jp
lcall
and
xchg
out
lret
or
or
sbb
xor
stmxcsr
add
xor
or
cmp
push
adc
xlat
jg
pushl
icebp
dec
xor
and
push
push
je
test
pushf
push
sar
inc
add
cmp
fcompl
xchg
imul
divps
push
js
fcomip
cmc
dec
sbb
mov
push
mov
or
movlps
jp
jmp
out
pop
sbb
push
push
cs
inc
xchg
std
mov
call
or
movsb
push
stc
fwait
mov
jg
mov
cltd
cmpl
cmp
aam
adc
out
push
or
adc
mov
loop
push
sub
popf
inc
fisttpl
cmpsl
mov
fmuls
mov
xchg
mov
xorb
clc
sbb
dec
or
or
xor
adc
dec
mov
pop
inc
sbb
std
xchg
sbb
mov
sub
inc
mov
subb
add
fildll
pop
sbb
sub
int
faddl
xchg
inc
xor
aas
dec
mov
inc
adc
pop
lret
inc
push
inc
js
sbb
mov
cmp
mov
push
pushf
je
mov
pop
and
push
cmpsb
fistps
adc
xchg
cltd
hlt
in
push
push
push
fiaddl
mov
or
es
adcb
add
jl
nop
jnp
fs
dec
sarl
rorl
mov
outsl
fidivrl
mul
test
push
or
aas
outsb
lcall
shrb
lret
mov
inc
pop
mov
push
jns
popl
nop
movsb
or
dec
mov
jg
or
cmpb
add
orl
sub
adc
and
insb
rclb
inc
add
les
and
jbe
je
es
pop
adc
enter
cli
mov
add
inc
pop
push
bound
fisttps
les
loope
enter
lcall
pop
cmp
in
fcomp
pop
repz
idivb
cmp
sub
pop
add
hlt
aaa
dec
xor
sub
repnz
jns
insb
jo
rcr
jns
or
cs
inc
jl
decl
imul
aam
pop
and
inc
push
cmp
cmc
mov
jl
pusha
mov
aam
mov
jb
clc
or
fmull
aad
pop
add
ret
jmp
pop
mov
adc
pop
scas
and
adc
xor
pop
sub
sub
jge
iret
inc
mov
sarb
loope
add
add
push
mov
mov
jnp
hlt
or
mov
mov
jg
in
mov
fimull
mov
dec
js
mov
jecxz
fstps
fbld
xor
xchg
pusha
mov
inc
mov
sbb
jo
sub
int3
popf
roll
stos
dec
cmp
add
rorl
pop
loop
jo
loopne
mov
or
jb
ljmp
ljmp
subl
mov
and
rcll
push
push
int3
mov
mov
scas
xor
pop
add
jle
pop
add
add
data16
xor
push
out
call
imul
pop
sbb
mov
rol
push
mov
push
movsb
rorl
dec
out
pusha
mov
in
popa
and
repnz
outsl
push
divl
stos
inc
adc
mov
mov
loop
ja
add
lea
mov
mull
gs
ror
cmp
lock
clc
sbb
add
sub
jecxz
test
sub
xor
xor
sbb
in
fdiv
cmpsl
adc
jno
in
fstl
mov
dec
cmp
xchg
lcall
adc
imul
cmp
ss
addb
es
pop
xchg
or
adc
outsb
xor
sub
cs
imul
call
push
lret
pop
fcmovbe
push
dec
cmp
xchg
add
nop
bound
jle
cmp
loop
dec
cld
pop
ret
pop
cli
pop
data16
es
fldt
test
outsl
jbe
jb
mov
adc
decl
jp
ds
dec
ds
cltd
or
aam
jp
push
movsl
add
mov
lret
mov
ret
xchg
xchg
xchg
push
insw
or
fcomip
dec
mov
dec
add
mov
or
mov
enter
mov
mov
shll
popf
dec
inc
jge
fidivrs
iret
xchg
rcl
test
jbe
lods
xchg
bound
sbb
pop
adc
std
sub
sub
sub
out
fwait
lds
lock
imul
inc
xor
jp
jg
les
pop
call
jg
ljmp
sbb
and
or
fisttps
pushf
pop
cld
jo
or
les
pop
push
mov
pop
inc
mov
shl
in
cmp
push
sbb
cli
pop
ss
xchg
adc
cwtl
cmp
cmc
idivb
call
xor
popf
push
fiaddl
ret
xor
dec
mov
icebp
outsl
test
repnz
popf
cs
sarb
enter
arpl
xor
scas
lret
fstpl
nop
arpl
mov
pop
test
lods
les
and
push
test
and
cmp
inc
data16
ficomps
or
adc
out
and
push
pop
pushf
popa
shlb
sbb
push
sub
dec
cmc
and
jae
loop
mov
add
cs
loop
and
repnz
test
movb
lods
cmp
das
xor
je
jg
push
out
rcrb
inc
scas
cmp
cli
push
add
inc
inc
lcall
sbb
das
mov
sub
mov
lock
inc
ljmp
add
lret
cmpsl
or
scas
pop
lret
jbe
dec
jecxz
adc
rorb
fisttpl
ret
cmp
mov
mov
fincstp
inc
pop
jmp
ret
subb
inc
or
jo
lock
xor
loopne
fcoms
insb
sub
in
sbb
es
mov
mov
push
ds
fsub
fists
add
icebp
in
movlps
jo
cli
stc
or
and
andl
push
xor
ja
adc
push
ss
lret
cmp
cmp
add
subb
cmp
push
inc
daa
dec
cs
inc
adc
xor
dec
dec
loop
adc
or
push
dec
push
cmp
add
mov
das
adc
inc
xor
test
inc
ljmp
iret
or
aaa
cwtl
or
mov
xor
xchg
roll
fwait
mov
xorl
cli
ret
sub
lds
out
jge
add
fs
pusha
pop
mov
repnz
fsubl
xchg
inc
dec
cwtl
ljmp
cld
jmp
call
movsb
arpl
in
in
mov
dec
mov
ds
hlt
and
lock
fcomps
mov
adc
sti
inc
jo
or
sbb
push
and
pop
mov
sub
xor
add
mov
lds
xor
mov
aam
adc
rorb
imul
push
jo
and
cmp
cmpsb
push
adc
or
sbb
orb
push
pop
nop
movsb
jno
shl
push
and
sub
jecxz
scas
js
or
notb
jno
push
icebp
aad
jmp
or
das
mov
inc
js
mov
jge
cwtl
mov
and
iret
inc
xor
cld
pop
dec
jbe
subl
andb
icebp
mov
and
ljmp
jmp
movsl
scas
xchg
ror
mov
xorb
mov
imulb
test
dec
ficoml
mov
ss
ljmp
addr16
outsb
ret
fildll
arpl
or
sbbl
pop
pushf
cld
jl
mov
cmp
jge
sbb
jl
ss
popa
into
xchg
mov
sbb
push
roll
outsb
lcall
xchg
sub
icebp
sbb
push
or
adc
hlt
add
xchg
and
lahf
inc
xchg
xchg
sub
xor
sbb
xchg
and
xor
jp
add
gs
xchg
jl
and
push
sbb
adc
pushl
jbe
mov
cwtl
js
outsl
add
push
fbld
push
mov
push
sub
and
add
dec
in
mov
shr
in
lock
test
xlat
add
pop
icebp
aam
or
pop
aad
decb
pop
sub
pop
mov
pop
icebp
sub
inc
sbb
lahf
push
add
jecxz
fcompl
hlt
sub
push
inc
mov
mov
pop
jg
sahf
mov
sbb
test
add
add
dec
adc
int
sbb
sbb
xchg
mov
bound
cmpsb
jle
ret
dec
or
adcl
pushl
loope
fdivl
shrb
mov
mov
inc
add
fistl
mov
xor
nop
add
rorl
sub
test
adc
adc
ja
dec
je
ss
xchg
dec
jo
aad
cs
cmp
sbb
int3
mov
mov
clc
inc
mov
and
pop
lea
into
dec
movsl
adc
pusha
repnz
int
je
outsl
adc
imul
popf
andb
cmpb
movsb
or
inc
sbb
and
cmp
xchg
xor
mov
push
in
scas
push
bound
push
test
adc
pmullw
cld
cmc
out
js
das
fdivrl
xchg
mov
repz
fcomp
fwait
inc
mov
jno
rorb
pop
jl
cmp
jg
outsl
mov
push
xor
jp
or
shll
xlat
ds
or
ret
fmul
mov
push
rorl
or
sbb
shrb
stos
ret
xchg
or
mov
and
loop
xchg
iret
mov
xchg
loopne
adc
scas
negl
mov
je
out
mov
jmp
adc
test
mov
and
push
pushl
mov
inc
bound
mov
pop
bsf
call
decl
lds
adc
push
push
sbb
cmpb
adc
xor
inc
mov
dec
data16
dec
mov
mov
mov
mov
fcoms
rclb
mov
call
pusha
dec
js
sbb
call
dec
jecxz
jb
aaa
push
dec
xchg
mov
test
insb
clc
jno
push
mov
sbb
pop
lock
ljmp
scas
mov
test
jg
mov
xchg
ss
cmp
adc
add
xchg
leave
hlt
mov
jle
xor
sub
xor
lds
ret
push
jb
mov
lock
icebp
decl
ja
js
mov
push
roll
mov
cld
loope
or
mov
and
and
add
cmp
add
icebp
ffreep
sub
add
cmp
fs
xchg
sub
pop
adc
ds
mov
repz
push
sbb
stos
cmpsb
pop
enter
mov
mov
mov
incl
aas
xor
dec
or
clc
push
test
cmpl
dec
je
mov
jo
pop
addl
call
mov
sub
rorb
add
xchg
mov
pushf
rorl
hlt
out
inc
xor
loope
test
sbb
and
lock
fisubrs
push
daa
andb
lahf
outsb
enter
orb
cmp
pop
rcl
cmp
add
sub
popf
stos
and
push
incb
xchg
sahf
sub
mov
mov
push
test
add
jbe
dec
loop
dec
inc
sub
fistps
sub
popf
push
mov
mov
lret
pop
test
xchg
js
pop
test
dec
data16
sbb
mov
cmp
addb
or
popa
add
aam
sub
add
loopne
adc
jbe
hlt
jae
dec
iret
xchg
out
adc
sub
add
ffreep
cmp
sti
mov
xchg
mov
movsl
xlat
xor
imul
leave
incl
iret
and
mov
and
inc
stc
enter
in
push
sub
iret
or
in
jg
pop
dec
jmp
cmp
adc
incl
ds
xchg
mov
mov
mov
and
insb
xchg
jg
sub
roll
and
mov
and
ret
jbe
stos
aam
cmp
dec
popa
movsb
testb
inc
mov
dec
adc
cs
add
xor
movsb
dec
adc
or
inc
and
aas
test
cmp
imul
xor
mov
cld
sbb
mov
xchg
xlat
data16
jg
pop
jl
sbb
ljmp
popa
mov
fadds
fs
iret
shl
aas
fsubs
ret
sti
or
dec
inc
jmp
scas
mov
mov
icebp
int
iret
add
dec
incl
in
sbb
lock
xchg
jmp
xchg
icebp
repnz
adcb
sub
push
mov
addr16
inc
js
adc
add
mov
dec
pusha
fisubs
ja
imull
mov
jp
sbb
roll
cmp
mov
pushl
or
adc
push
lea
inc
jb
lcall
clc
inc
push
rolb
ficompl
inc
mov
addr16
ljmp
sub
xchg
js
mov
bound
push
int3
add
imulb
xorb
call
sahf
inc
xor
arpl
arpl
out
dec
aad
cs
ror
xor
data16
adc
cmp
dec
cli
sub
sbb
mov
imulb
dec
rolb
pop
xchg
ret
mov
jg
lods
je
add
or
loop
pusha
ja
or
decl
pusha
dec
andl
inc
push
test
mov
mov
leave
aad
xor
idiv
fwait
jg
jle
cwtl
in
shlb
and
inc
adc
lea
scas
popf
xchg
dec
push
loopne
pop
pop
aaa
rcl
movsb
adc
fbstp
mov
push
aaa
pusha
inc
cwtl
les
add
jmp
sub
xchg
push
rclb
dec
loop
sbb
lds
jle
mov
xchg
fwait
sub
mov
inc
and
mov
call
sbb
inc
in
sbb
sub
add
lret
sbb
or
sbb
cmp
movsb
aad
add
daa
dec
mov
or
mov
sbb
scas
sub
mov
in
jg
in
imul
mov
and
mov
mov
cmp
push
sub
into
divb
mov
cmc
mov
call
icebp
jno
clc
ss
pop
adc
push
mov
out
add
pop
pusha
jge
fadds
lock
ss
sahf
out
pop
rcr
jno
mov
sub
push
scas
jnp
nop
rclb
lret
mov
decl
push
jmp
pushf
arpl
or
push
iret
rcrl
loopne
or
loop
mov
adc
dec
xchg
adc
and
add
cmp
add
fildll
xchg
xor
mov
adc
or
cmp
mov
cmpsb
adc
call
outsl
mov
pop
sub
dec
inc
pop
add
icebp
fiaddl
inc
lea
lcall
cmp
add
arpl
push
sub
mov
bound
je
and
cmpsb
into
jecxz
clc
cmpsl
dec
jecxz
in
mov
or
inc
mov
out
shlb
cmp
push
jmp
in
call
xchg
jne
loop
jbe
scas
shlb
es
lahf
xchg
xorb
jmp
cli
incl
adc
jne
xor
jae
out
mov
mov
push
add
xchg
fistps
sub
stc
pop
roll
imul
out
jno
pop
out
insb
icebp
pop
add
pop
sbb
cld
cs
add
adc
add
push
xor
loop
mov
je
mov
mov
lock
es
mov
pop
sti
lcall
cmp
dec
mov
repnz
ss
test
pop
or
aam
jg
fimuls
popf
pusha
and
pop
add
movsb
lds
outsl
ret
inc
loop
push
inc
lock
pop
mov
orb
and
in
xchg
idiv
lret
ljmp
xchg
in
ljmp
ret
mov
adcl
fbld
sub
sbb
adc
shlb
xlat
pop
xchg
cli
add
sti
pop
ljmp
sub
popa
cld
adc
cmpsl
or
loopne
dec
rclb
pop
test
jg
and
xchg
dec
pop
add
fwait
ja
jns
in
cld
test
push
mov
test
setp
fwait
mov
mov
and
push
adc
pop
sti
sbb
enter
icebp
lahf
leave
shlb
rorb
xchg
fisttpl
mov
in
outsl
movsb
pop
test
inc
add
adc
pop
addr16
push
test
jno
shll
pop
add
into
pop
inc
outsb
xor
jb
lods
lret
push
mov
sbb
fs
shr
dec
cs
adc
or
pop
add
xchg
addr16
mov
ss
mov
dec
xchg
icebp
mov
inc
lock
sub
insl
icebp
mov
fwait
dec
out
subb
adc
pop
mov
dec
add
cmp
jg
mov
lods
sbb
jecxz
or
nop
push
push
sti
sbbl
stos
push
xor
cmp
jns
repz
mov
jns
mov
jmp
adcl
stos
and
outsl
cmc
cmpsb
sbb
and
cli
sbb
clc
hlt
outsl
jl
adc
adc
loope
sub
inc
xor
cmp
loopne
and
sub
subl
loope
jle
mov
and
clc
xor
pop
xchg
jg
add
xor
push
mov
cld
mov
mov
push
je
or
mov
jle
pop
and
outsb
cli
fwait
pusha
mov
std
dec
ficompl
cli
xor
adc
es
cmp
or
das
inc
cmp
cli
bound
movsb
or
mov
outsl
rorb
repz
dec
aad
xchg
les
dec
nop
jmp
fmuls
nop
int3
xchg
lea
add
sbb
adc
std
lahf
imul
pop
add
inc
or
je
filds
mov
pop
cmp
decb
jle
fistl
pop
lods
push
xor
mov
jle
into
cld
outsl
repnz
cwtl
shr
add
xor
sbb
int3
jno
cmpsb
rcrb
and
jmp
dec
in
mov
incl
cld
movmskps
add
mov
jne
negl
inc
subb
mov
inc
or
scas
sub
add
in
push
cmp
mov
test
iret
or
mov
push
mov
fbstp
cli
push
mov
sbb
pop
int3
ss
sbb
popa
das
movb
enter
mov
fdivl
mov
loop
inc
cmc
and
jns
sbb
adc
push
test
jmp
loopne
pop
in
mov
add
ds
test
jmp
add
lret
stos
sbb
jg
and
dec
jno
mov
cs
xchg
adc
out
pushf
mov
mov
push
add
xor
loope
mov
push
out
and
mov
xor
dec
addr16
cli
mov
add
clc
mov
mov
vpsllq
aad
shll
scas
call
repnz
xchg
sub
mov
add
in
inc
roll
jecxz
pop
call
push
or
add
pop
sbb
or
push
outsb
cmovno
into
cmpsl
popf
inc
bound
dec
jae
sbb
into
pop
fsubrl
mov
jmp
pusha
shrb
push
cli
mov
sbb
in
inc
or
lcall
cs
sbb
mov
add
jnp
xor
dec
push
push
or
icebp
xchg
ret
push
xor
callw
lock
stos
lea
jmp
pushf
xor
xor
call
mov
repnz
jl
mov
jecxz
mov
je
nop
inc
lea
add
incl
xor
ret
mov
ljmp
inc
add
pop
add
jl
xor
adc
sub
movsb
mov
inc
sti
add
or
loope
imull
lcall
jo
fidivl
and
sarl
ljmp
je
scas
mov
cmp
call
sub
dec
mov
popa
or
and
data16
in
mov
sahf
out
add
xor
arpl
jo
add
andb
push
inc
insb
sub
adc
jb
jno
hlt
imul
add
jbe
push
ret
inc
ret
jns,pt
mov
mov
push
nop
lock
add
dec
addl
pop
cli
adc
scas
pop
inc
aad
jbe
or
mov
add
xlat
clc
mov
pop
inc
adc
cwtl
insl
pop
inc
repnz
call
push
pop
sahf
pop
inc
jecxz
or
aad
xor
in
adc
sbb
jb
cmp
jle
and
xor
aam
cmp
mov
fbstp
es
imul
or
into
ret
mov
sahf
loopne
mov
mov
add
inc
nop
iret
jecxz
mov
mov
and
lock
xchg
push
jl
std
adc
rcrl
std
inc
and
jbe
mov
cmp
xchg
jmp
cmp
inc
lcall
mov
push
sbb
jbe
lods
aad
xor
or
lcall
and
sahf
sub
daa
cmc
and
fimull
int3
inc
pop
and
mov
dec
dec
dec
icebp
jg
jg
sarb
push
sbb
mov
inc
xor
insl
rclb
cli
cmp
lcall
mov
movsb
adc
out
jl
mov
lods
add
out
mov
ret
ror
pushf
xor
in
pop
mov
data16
js
fnstsw
sbb
add
or
sbb
sub
cld
push
dec
sbb
gs
in
mov
jb
pop
push
addb
xchg
sub
pushf
xor
lods
imul
adc
gs
mov
mov
mov
mov
adc
rclb
mov
inc
out
dec
test
sub
xchg
mov
cmovae
push
nop
sub
inc
adc
incl
aad
xor
movsb
dec
lods
mov
inc
lcall
cmp
shlb
dec
xor
mov
repz
pop
xchg
mov
push
andb
dec
jmp
call
pusha
push
sahf
push
test
nop
push
sarl
dec
push
fwait
ds
stos
lret
icebp
or
fdiv
pop
or
pop
or
dec
enter
inc
mov
dec
dec
dec
call
ffree
push
test
pushf
or
jg
test
adc
loope
add
sub
adc
adc
sarb
pop
out
enter
dec
mov
mov
push
mov
add
jle
and
fildll
sub
dec
push
or
mov
adcb
lods
sub
mov
xchg
out
jp
sti
jno
fs
aam
into
add
mov
jle,pt
dec
xlat
mov
ja
loop
in
or
js
push
loop
cmc
in
cmp
sub
rcll
loop
inc
fildl
push
cltd
and
cmp
and
xor
hlt
sub
and
or
test
popa
in
fiaddl
mov
js
mov
push
ret
cli
lea
pop
xchg
lret
pop
test
push
inc
pop
aad
rclb
dec
jg
inc
hlt
fwait
in
movsb
xchg
xor
cli
pop
fdivr
add
sbb
incb
rcrl
push
das
out
scas
test
mov
je
add
bound
ret
out
xchg
sahf
movsb
sbb
xor
cmp
in
incb
aas
sbb
fsub
mov
dec
push
jb
rcll
scas
push
fisubl
mov
loope
adc
clc
jno
pop
mov
cmp
cs
mov
ja
inc
sahf
out
fs
xor
das
mov
adc
xor
enter
or
sbb
inc
gs
mov
nop
mov
loope
sbb
fdivr
int3
add
add
ds
xchg
movsb
hlt
dec
loope
lea
add
push
ret
jo
mov
sahf
push
or
ficompl
or
gs
xchg
in
test
mov
sub
scas
rolb
add
cmp
nop
cmpb
loop
jge
mov
mov
jns
mov
int3
jno
jno
inc
sar
orb
adc
xchg
loop
icebp
or
cmp
clc
mov
ret
cmp
mov
ja
popa
or
mov
fildll
aam
pop
sbb
pop
sub
sbb
pop
inc
rclb
sbb
pop
pop
lods
shlb
cmp
sbb
cmp
ljmp
or
ljmp
xchg
js
lahf
mov
xor
add
cmpsb
jne
cwtl
shlb
shr
xchg
loopne
mov
icebp
mov
bound
loop
loopne
cmpsl
mov
ret
movb
dec
in
out
nopl
lcall
mov
lds
push
int3
test
push
inc
inc
cmpsb
sub
adc
in
ret
sub
pop
es
scas
inc
mov
jmp
pop
xorl
add
dec
int3
push
pop
pop
iret
lock
and
cld
inc
push
outsl
rolb
es
adc
stos
daa
jbe
xor
add
call
clc
addr16
mov
popf
xchg
cmp
mov
dec
aad
aas
sbb
mov
lock
jbe
add
lret
xchg
xchg
mov
pop
and
pop
stc
adc
dec
ror
fisubrl
add
mov
decl
je
inc
dec
pop
cmp
inc
flds
adc
mov
loopne
rorb
push
mov
push
and
cli
adc
xor
loop
mov
dec
repnz
fcoml
pop
push
mov
gs
cli
sbb
out
movsb
sbb
js
push
cwtl
mov
ss
mov
stos
aad
repnz
incl
xor
adc
or
andb
mov
pop
xor
clc
dec
sti
clc
cmp
mov
ljmp
or
sti
jg
aad
das
inc
adc
incl
adc
fs
movsl
jge
sbb
rcrl
fisubrs
in
cltd
mov
dec
inc
xchg
cmp
incl
xchg
sbb
fisttpl
sbb
jb
ljmp
nop
jecxz
and
inc
pushf
and
adc
cmc
adcl
mov
data16
xor
adc
xlat
push
mov
and
mov
push
decb
jp
pop
imul
es
lds
inc
loopne
mov
adc
outsb
or
pop
imulb
push
popf
push
add
je
cld
and
adc
pop
inc
sbb
adc
loopne
xor
mov
cmp
add
shlb
add
repz
xchg
push
push
mov
xchg
mov
and
push
cwtl
cs
push
sar
push
inc
push
push
push
mov
push
data16
pop
inc
cli
or
nop
fwait
inc
pop
adc
div
inc
sub
inc
sbb
dec
into
mov
inc
jne
pop
repnz
std
push
add
mov
scas
rolb
aad
aaa
adc
pop
or
subb
xlat
ja
hlt
ljmp
inc
and
xchg
and
je
pop
jns
add
loope
cmc
popf
mov
aam
cld
jg
addr16
jg
sbb
add
adc
dec
add
stos
cmp
icebp
movsb
stos
ret
or
movq
inc
cmp
cmp
mov
rcrb
lret
je
pop
dec
or
pop
imul
aam
shrb
xchg
sbb
ds
dec
popl
cld
fcmove
xchg
push
jno
inc
daa
sbb
mov
mov
mov
mov
adc
or
push
call
std
add
into
inc
dec
mov
cltd
sub
push
dec
loop
jnp
push
mov
dec
mov
dec
xchg
xlat
add
dec
dec
test
nopl
fstpt
mov
xor
enter
cmp
enter
fadds
and
add
jg
sub
jnp
mov
mov
or
jecxz
inc
fs
lock
push
pop
xor
call
or
mov
dec
mov
fstl
jo
xchg
pusha
shlb
adc
out
mov
test
mov
add
and
lcall
cld
fists
inc
or
pushf
nop
dec
add
mov
and
sar
cli
and
or
mov
rcrl
sbb
dec
pushf
jecxz
addb
jg
jecxz
adc
jecxz
sbb
jge
mov
jg
sbb
pop
sbb
jg
add
test
aam
xor
imul
cmp
mov
lock
dec
addr16
in
pop
dec
mov
scas
adc
cmp
popf
ret
mov
add
outsb
sbb
aaa
xor
subl
pop
mov
sarl
jmp
ficoms
xor
sbb
mov
fiaddl
pop
push
jl
inc
outsl
adc
pop
lock
mov
pop
jo
fistps
in
pop
add
int
rorb
mov
xchg
cs
and
cmp
push
adc
xchg
mov
add
push
push
or
test
stos
and
mov
push
std
ja
dec
or
mov
add
out
bound
dec
adc
rol
aad
push
pop
cld
dec
mov
aam
cmc
notb
sub
dec
push
xor
cli
cmp
mov
mov
adc
subb
hlt
pop
fstpl
xchg
adc
sbb
or
mov
lahf
rol
ret
sub
dec
mov
int3
dec
aas
push
jl
mov
out
adc
in
daa
pop
mov
adc
sub
sbb
scas
and
sub
cmp
push
and
sub
inc
mov
pop
jo
mov
or
dec
xor
nop
inc
dec
dec
js
jb
loopne
pop
rcr
out
sahf
je
lea
fwait
jecxz
lock
sub
push
mov
and
add
xor
jp
fsubrl
push
inc
sahf
xchg
lcall
and
mov
mov
insb
aas
or
xor
dec
inc
imul
repnz
ret
jmp
pop
insb
cmpsl
add
lods
adcb
add
sbb
or
pop
call
xchg
in
inc
jle
in
pushw
data16
xchg
out
loopne
mov
lret
icebp
out
clc
xchg
mov
fisubs
pop
popa
add
xchg
jl
loope
mov
sub
addr16
fmuls
incl
dec
lret
ja
push
lcallw
dec
xchg
xchg
mov
mov
mov
aas
notl
pop
cltd
loop
das
insl
add
pusha
jmp
jno
clc
stos
fdivp
lcall
dec
cs
jo
inc
out
xchg
dec
xchg
cmp
mov
mov
hlt
bound
add
mov
add
inc
lods
mov
clc
test
subb
bound
popa
mov
clc
pop
add
cmp
aaa
icebp
pop
stos
jb
in
or
repnz
ljmp
lock
adc
jbe
cmp
lcall
aas
adc
fdivl
popl
mov
out
xchg
fwait
inc
dec
in
je
jg
or
adcb
cmpsb
jmp
or
addr16
popa
or
enter
test
push
lock
pop
call
repz
or
ret
pop
popf
add
and
add
lahf
and
sbbb
mov
mov
ljmp
sub
andb
dec
ret
push
inc
mov
dec
inc
cmp
add
mov
add
or
pop
jmp
out
es
push
or
cli
pusha
add
ljmp
sbb
fwait
mov
pop
sti
xchg
sub
pop
int3
xor
pusha
into
pop
ficompl
jg
and
mov
mov
push
pushf
and
test
mov
mov
data16
stos
sub
fs
stos
sub
nop
std
add
les
popf
mov
inc
sti
xchg
jle
lods
adc
loop
call
scas
adc
in
push
sbb
inc
push
movsl
sub
or
clc
in
lea
cmpsb
in
inc
pop
ss
lret
fnstsw
mov
dec
push
outsb
or
std
outsl
mov
aas
js
inc
mov
insb
or
out
lret
jg
mov
fadds
mov
in
mov
xor
mov
jecxz
or
sbb
and
fimuls
pop
xchg
or
add
mov
xchg
cli
fdiv
or
and
cmpsb
int3
nop
ljmp
mov
int3
js
mov
cmp
sbbl
lods
push
push
mov
mov
add
filds
inc
xchg
mov
mov
sarl
stc
add
clc
orb
jno
xchg
out
ss
es
fdivr
dec
dec
sbb
test
inc
and
cwtl
enter
mov
xchg
rcl
ss
dec
stos
add
loop
inc
aaa
lock
out
sti
scas
sbb
sbb
stos
or
mov
xchg
movsl
sbb
pop
jb
jl
call
push
mov
clc
mov
mov
int
push
sbb
data16
into
data16
ljmp
movsb
rolb
inc
out
ficoms
push
sub
cltd
popa
call
and
jmp
jp
inc
dec
std
adc
dec
sub
push
cmp
cmp
aaa
mov
sub
roll
int3
repnz
pushw
cs
or
cli
decl
and
movsl
inc
push
daa
push
out
inc
idivb
adc
std
sub
xchg
stos
in
jbe
adc
push
emms
jg
stos
mov
mov
sarb
push
mov
je,pn
mov
jle
push
mov
scas
insb
inc
test
cwtl
jne
add
int
fldl
mov
adc
test
test
dec
pop
sub
adc
cmp
fnsave
or
xchg
lea
inc
mov
xor
adcb
add
dec
inc
cmp
int3
mov
into
test
xor
nop
pop
push
cmp
xor
jnp
les
aaa
dec
fcoms
push
lret
mov
and
pop
pushf
mov
inc
cmp
pop
dec
dec
inc
mov
daa
push
mov
mov
mov
mov
push
js
sub
jbe
pop
xchg
jno
jnp
or
sub
mov
or
jb
popa
add
sub
mov
lret
pusha
cs
mov
mov
cmp
add
loop
ljmp
sbb
add
ja
and
cltd
or
jecxz
or
shrb
mov
mov
push
mov
mov
jno
inc
je
adc
ficompl
jecxz
pusha
and
in
pop
jo
cmpsl
cmpsl
and
aad
sub
sbb
test
cld
add
ds
sub
sar
mov
pop
cmp
adc
hlt
inc
jns
fdivr
pop
add
adc
into
pop
sbb
sbb
dec
or
push
or
push
and
adc
pop
movsb
nop
jno
add
fsubl
repz
xlat
call
dec
inc
sub
jnp
add
xor
jg
push
push
or
ss
mov
jp
testb
push
jns
out
xchg
movsl
lcall
fisubrl
push
jmp
pop
ljmp
cltd
xor
inc
jo
enter
test
sub
incl
mov
enter
ljmp
jns
clc
jb
sahf
add
ss
cmc
addl
push
cmc
ja
ja
mov
jns
loop
jb
mov
cld
push
mov
ret
lock
xchg
xchg
mov
pop
or
inc
cltd
add
cmp
ret
adc
loopne
mov
add
xor
cmp
cmc
jb
in
or
pop
rclb
dec
and
std
jg
xchg
mov
push
lds
fidivs
sub
andl
xchg
push
push
nop
lcall
scas
jle
jle
das
clc
das
pop
sbb
jbe
cld
add
insb
push
scas
xchg
push
sbb
push
shrl
dec
xchg
sub
das
and
adc
sbb
fwait
pop
xchg
rorb
faddl
pop
data16
movsb
jno
add
add
cmp
out
out
bound
pop
icebp
decl
decl
lds
add
popa
mov
mov
xchg
pop
jg
cli
mov
push
jae
clc
decl
aas
inc
nop
aad
xor
add
add
cld
push
add
pushf
es
and
repz
subb
into
fidivl
insb
pop
cltd
add
sbb
push
imul
push
mov
mov
jge
incl
popf
out
test
das
sub
gs
xor
adc
push
jns
pop
sbb
mov
jp
popf
sbbb
inc
mov
pop
andb
es
mov
xor
push
inc
push
jecxz
push
xor
pop
pusha
jo
decl
inc
jmp
sub
arpl
data16
xchg
push
call
mov
fisttpl
push
and
jmp
outsb
pop
push
cmp
inc
pusha
mov
dec
jne
loop
xor
clc
sahf
ret
sub
mov
sub
jne
or
das
fcomps
jg
loope
jmp
stos
jecxz
xchg
xchg
lods
push
push
cld
fbstp
loopne
push
ljmp
jb
jmp
adc
hlt
jnp
mov
xchg
adc
add
jns
mov
sub
adc
jecxz
sbb
inc
push
adc
xchg
mov
cmpsl
lock
ret
and
iret
cs
pop
sub
push
lods
push
cmp
push
lock
insb
aam
xor
aas
adc
sbb
mov
xorb
aaa
and
and
xchg
adc
mov
or
xor
cld
jg
ds
sbb
mov
fs
cmp
or
add
mov
or
cmpsb
push
dec
stos
loop
roll
add
dec
and
inc
adc
mov
push
sub
mov
in
push
and
push
push
data16
icebp
sbb
fisubrs
pop
ret
and
sbb
pop
jle
xchg
xor
and
nop
clc
adc
xor
push
int3
xor
pop
ret
cld
iret
incl
notl
subb
icebp
xchg
xor
add
pop
into
jl
or
add
les
imul
adc
add
adc
push
inc
call
or
add
or
or
xor
mov
fimuls
or
les
pop
inc
sbb
sub
sub
test
dec
rolb
sub
aam
fisubrs
sbb
loop
jle
push
js
cmc
andb
inc
les
jl
mov
not
push
xchg
lods
imul
hlt
outsl
sbbb
mov
add
and
adc
push
add
pop
or
add
cli
jg
add
add
in
or
stos
fadd
enter
gs
jno
es
scas
push
xchg
pop
xor
hlt
cltd
mov
xor
pop
sti
fs
and
fsqrt
mov
arpl
popa
cli
fdivs
dec
adc
adc
xorl
je
xchg
jle
xchg
das
xor
sub
popf
pop
xchg
cmp
and
repz
mov
push
insb
jecxz
aas
or
fcmove
in
orb
clc
fstpt
jo
aaa
inc
repnz
xchg
test
sar
cld
adc
mov
cwtl
and
sub
sti
add
sbb
arpl
mov
cltd
mov
mov
lahf
mov
outsl
cmp
in
xor
pushf
js
dec
push
mov
jb
jp
pop
mov
cmp
sub
jg
pusha
add
fmull
loop
clc
sbb
push
test
repz
mov
pop
test
fwait
loopne
add
push
loopne
sbb
ficomps
daa
ror
ret
je
hlt
add
cltd
pop
push
push
mov
sub
push
and
xor
out
xor
pop
xchg
mov
jae
inc
mov
xlat
ljmp
das
mov
add
cld
ds
mov
jp
leave
clc
jg
mov
jnp
in
popa
or
add
js
in
mov
std
faddl
insb
rcll
mov
sbb
mov
jo
and
jno
pop
scas
stos
push
mov
fdivrp
call
and
inc
mov
loope
sarb
or
mov
aaa
scas
mov
jp
insb
ds
add
xchg
xchg
mov
cli
add
and
xchg
mov
shlb
push
scas
pop
andb
adc
movb
and
mov
loopne
cld
dec
testl
push
and
mov
imul
mov
insb
sub
pop
cmc
mov
inc
out
xlat
xchg
add
sarb
lea
and
sbb
pop
in
mov
push
cld
cmp
mov
xchg
xlat
test
mov
cmp
cs
or
adc
adc
std
stos
xor
ss
cmpsb
cmpsb
bound
cwtl
mov
jo
sub
xchg
pop
adcb
cld
fists
mov
adc
cmp
xor
call
add
loop
sbb
sub
loopne
fs
mov
xor
mov
sbb
movsl
pop
sub
icebp
inc
xor
popf
mov
inc
in
add
push
add
es
mov
add
mov
dec
dec
push
rcll
int3
out
push
dec
jl
inc
mov
into
fwait
and
mov
fildll
mov
xchg
push
test
in
fidivrl
lcall
test
jg
mov
subl
xor
push
and
dec
ljmp
push
stc
fisttpl
xor
sbb
sbb
ja
ret
mov
pop
cmpsb
mov
or
clc
decl
jle
faddl
jge
into
rolb
imul
ds
mov
sti
jp
test
lcall
mov
gs
lret
iret
mov
stc
clc
dec
ja
aam
sbb
and
addr16
les
jg
push
and
inc
out
sti
nop
adc
lods
push
clc
lret
lret
mov
lods
dec
jg
push
inc
les
inc
adc
add
arpl
sarb
or
cld
das
sub
popa
add
out
inc
mov
adc
jmp
cs
and
shlb
sbb
jecxz
shlb
outsl
ja
xchg
sbb
add
jl
jo
dec
sbb
jne
mov
ss
mov
movsb
movsb
push
repnz
fwait
in
std
push
out
mov
mov
push
add
pop
push
pusha
nop
pop
jo
mov
aaa
sbb
pop
cmp
repz
pusha
mov
call
icebp
sub
cli
dec
mul
push
add
mov
xchg
and
add
fisttpll
sarb
dec
push
insb
xchg
dec
xchg
fadds
mov
mov
pusha
movsl
movsl
xorb
in
jb
loop
loope
out
jp
mov
jae
add
jecxz
or
mov
push
das
js
clc
outsl
loop
out
aad
call
sbb
pop
rorb
pushf
fmul
ret
stos
add
mov
mov
inc
pop
sub
push
xchg
sub
cmp
sbb
icebp
test
mov
cld
aam
fcoml
push
ss
stos
pop
jl
int3
pop
fs
and
dec
shrb
cmp
icebp
cli
mov
sbb
jne
mov
pop
pop
mov
into
cmp
movsl
xchg
cld
jle
rcrb
rcrb
insl
enter
aam
jecxz
add
add
mov
nop
movhps
or
inc
xchg
and
ds
incl
fldt
pop
rol
inc
add
cmp
xchg
mov
cld
mov
or
fcoms
xchg
push
sbb
std
sbb
aaa
or
stos
mov
ret
loop
stc
and
mov
inc
sub
shlb
pop
inc
sbb
inc
pop
adc
mov
mov
cmp
push
mov
out
mov
lea
aas
test
mov
or
pop
mov
test
scas
fsubrs
ret
inc
cld
pushl
xchg
dec
inc
enter
adc
insl
inc
incb
push
bound
gs
mov
xchg
pop
and
ret
fld1
andb
jl
push
xor
push
inc
push
lods
push
jg
sbb
inc
aad
test
es
or
outsl
loopne
or
aas
mov
rcrl
jmp
idiv
xchg
in
xchg
adc
ja
xor
ljmp
decl
sbb
cmpb
dec
loop
adc
outsb
call
popf
dec
daa
sbb
jle
jle
adc
and
adc
jnp
cmpb
jne
std
add
mov
add
add
pop
jo
dec
jg
lea
cwtl
xor
jle
daa
sub
fldt
js
sbb
cmp
out
mov
inc
adc
incl
out
mov
jo
push
dec
and
les
cs
fwait
xor
and
sbb
insb
dec
push
xor
jmp
dec
fadds
insl
and
add
xor
or
adcb
push
jecxz,pt
lahf
clc
jg
scas
fdivs
mov
fwait
xor
lock
mov
int3
or
or
xchg
mov
mov
push
sti
push
stos
fisubrl
lahf
mov
mov
fisttpl
sub
jl
pop
and
hlt
add
ret
push
call
cs
cmp
nop
into
outsl
shl
add
shrl
out
pushf
mov
enter
mov
push
inc
pop
cmpsb
sahf
imul
sbb
rorb
fxch
jecxz
add
inc
inc
lock
std
cli
adc
add
daa
cmp
sbb
sbb
sbb
push
std
mov
push
cmp
sbb
out
cli
ljmp
ss
xchg
sbb
lret
sub
dec
push
mov
mov
stos
dec
cmpsl
or
out
cli
cmp
in
pop
push
clc
stos
sub
hlt
icebp
push
push
or
push
mov
outsl
mov
and
dec
adcb
jbe
testb
cli
add
dec
xor
test
fucomp
add
pusha
lock
out
enter
in
xor
fisttpl
or
and
popf
cmp
pushf
ret
pop
ljmp
push
sahf
sub
pop
or
adc
call
mov
addb
bound
test
sbb
push
cmp
fcomps
inc
cld
cmp
sbb
add
pusha
andl
js
lahf
mov
daa
jae
sub
cmp
mov
add
lret
xlat
xor
or
mov
mov
test
sar
out
cli
xlat
push
add
flds
mov
outsl
cwtl
sub
mov
addl
rclb
sbb
cwtl
es
inc
jbe
stc
cli
lock
xor
imul
lret
cmp
test
cmpsl
pop
mov
call
loop
push
shll
mov
iret
dec
jecxz
call
loopne
sarl
fs
fnstcw
sub
sbbb
cmc
mov
aam
ret
loope
sub
or
sub
and
push
cmp
insl
ret
jbe
push
mov
adc
into
iret
and
loop
sbb
sub
mov
out
decl
rcrb
inc
mov
pusha
mov
add
repnz
push
ror
fadds
xchg
mov
ret
incl
lock
cwtl
xor
cmp
push
out
insb
adc
bswap
add
jb
jmp
mov
pop
push
pop
mov
dec
jo
pusha
cwtl
sbb
aad
clc
rorb
and
add
movsb
push
mov
xchg
inc
mov
mov
inc
ficoms
lea
jbe
xor
in
cmp
movsl
or
mov
sbb
test
imul
inc
jp
dec
sti
mov
popa
or
or
dec
pop
cmp
lods
sub
iret
arpl
insb
test
je
in
fcomps
es
fimuls
add
ljmp
mov
dec
adc
adc
adc
insl
or
mov
push
mov
stos
adc
insb
xor
push
dec
sbb
gs
loop
sbb
jle
sub
mov
mov
inc
add
adc
or
lahf
rol
lahf
add
push
lods
cmp
test
inc
adc
or
adc
sub
adc
fiadds
cmpsl
mov
jmp
les
add
mov
push
adcb
addr16
ljmp
cmpl
push
out
or
push
sbb
movl
sbb
push
push
adc
cvtps2pd
xlat
test
test
mov
and
cmp
popa
das
pop
fists
pop
subb
pusha
jmp
inc
xor
test
mov
xor
rcrb
sub
adc
add
xchg
adc
mov
add
cmpb
fidivl
andb
xchg
out
jp
jae
nop
pushf
leave
lret
xchg
popa
sub
pushf
inc
frstor
mov
roll
sbb
sub
mov
fiadds
or
sub
jle
loopne
out
cli
add
dec
sub
xlat
inc
adc
jns
int3
cmp
adc
mov
int
inc
jne
mov
jl
outsl
fiadds
lods
in
fmull
pop
add
and
outsb
clc
lock
addl
or
pop
loop
inc
cwtl
mov
fadds
jmp
das
cmp
cmpsb
lods
adc
dec
mov
shl
inc
add
cmp
add
out
sub
mov
mov
std
dec
cmp
lock
dec
or
cmp
and
adc
lret
jle
add
or
je
vmread
cmp
cwtl
aas
pop
mov
flds
cmp
loope
loop
pusha
jnp
clc
mov
inc
scas
cmp
inc
lock
testb
sbb
loop
aas
xor
fiaddl
ret
call
popf
ss
jmp
jmp
pop
mov
bound
dec
pop
test
rolb
pop
mov
clc
outsl
jl
jge
jae
loop
pop
movsb
testb
xlat
enter
loope
fcmovb
xchg
push
cs
lcall
mov
scas
pop
cmpl
mov
fwait
cli
mov
scas
test
and
cmp
test
lret
inc
out
dec
xor
dec
xor
mov
and
sar
pop
or
xchg
and
mov
jbe
rcrl
repnz
or
mul
adc
cli
jg
mov
fs
jp
or
out
sub
inc
cs
inc
ja
ja
test
rorb
lods
pop
inc
and
and
mov
mov
mov
pushf
test
lock
cmp
lahf
test
xchg
jg
or
cmp
lods
fsubrl
pop
out
mov
scas
lods
jb
push
ficoms
xor
and
pusha
nop
orl
ja
and
insb
sub
add
pop
call
cmp
call
jno
cs
cmp
addr16
and
sub
jmp
adc
movsl
les
icebp
out
in
or
int
jne
mov
stos
cli
dec
jnp
xchg
mov
cmp
pop
mov
loop
sub
leave
adc
pop
pop
scas
ja
dec
repnz
aad
int3
ja
incl
xlat
loop
movsb
xor
cmpsb
and
mov
incb
aad
mov
sbb
cltd
inc
loopne
daa
adc
scas
test
pop
repnz
pop
mov
lret
lods
lcall
test
mov
jae
clc
push
fcoml
pusha
push
insl
test
inc
stc
std
sub
les
icebp
add
outsb
adc
movsb
or
nop
mov
jecxz
clc
pop
and
rorl
sub
mov
fimull
add
daa
je
stos
imul
jo
insb
push
push
lods
jo
xor
aad
pop
rcrb
sar
aaa
xor
pop
out
mov
cwtl
in
push
leave
pop
xchg
mov
mov
jg
cmp
and
add
scas
nop
inc
adc
sbb
fsubl
cli
stc
sbb
int3
les
pop
sbb
dec
data16
inc
push
pushl
cmpsb
mov
xchg
xchg
mov
or
stc
mov
cmp
and
rolb
aad
mov
cmpsb
or
clc
dec
out
hlt
adc
loopne
mov
stc
dec
int3
add
sbbl
inc
ficoms
adc
sahf
cmpsl
jge
cmp
adc
pushf
xchg
mov
inc
ja
scas
or
inc
aaa
sub
roll
aaa
mov
je
mov
sub
iret
aam
inc
xor
pop
aad
and
inc
addl
scas
je
jg
test
cld
in
adc
lods
push
add
jmp
ds
leave
mov
lret
xchg
mov
sub
pop
decl
add
jb
push
adc
sbb
xchg
inc
sahf
dec
inc
mov
and
addl
adc
inc
bsr
clc
mov
pop
mov
add
ljmp
pop
xchg
pop
mov
insl
fnsave
pop
loopne
mov
lock
mov
mov
mov
add
out
decl
sbb
mov
mov
sub
mov
push
cli
scas
fstpt
fcmovbe
add
inc
lods
shlb
out
mov
cmp
notl
adc
rcrb
inc
or
cld
mov
std
andb
jp
imul
call
xchg
xchg
push
or
imul
lods
jmp
inc
cs
aaa
movsb
dec
sbb
pop
mov
mov
pop
or
push
xorb
xchg
pop
cmpsb
sbb
add
mov
jmp
loop
nop
clc
inc
nop
sti
or
inc
jg
decb
lret
shr
xchg
xchg
mov
outsb
inc
xor
and
cmc
fstpl
xchg
mov
sub
pop
mov
push
lahf
xorb
jg
repz
lahf
xchg
mov
push
pop
inc
lahf
xor
mov
cld
pop
push
int3
xchg
pop
mov
xchg
mov
mov
pushf
ret
add
mov
es
mov
inc
dec
orl
pop
test
add
mov
les
ret
ljmp
inc
or
ret
outsl
mov
mov
js
cs
mov
pop
add
repnz
clc
inc
loopne
cmp
or
std
out
sub
sub
mov
cmp
jbe
mov
movl
movsl
inc
inc
lret
icebp
frstor
and
decl
popf
dec
add
aas
mov
jle
imul
fs
leave
push
push
clc
mov
ja
sub
mov
sub
pop
inc
mov
mov
daa
orl
fisttpl
test
dec
dec
jg
mov
jb
mov
xchg
ss
cli
icebp
or
dec
mov
aaa
add
xchg
and
test
or
inc
enter
push
lahf
out
jecxz
data16
ljmp
jg
ret
push
mov
stos
cmp
imulb
ss
push
call
xorb
in
jl
jle
icebp
sbb
imul
test
xor
pusha
dec
and
and
mov
testb
mov
sbb
add
not
inc
inc
inc
jge
mov
cmp
xchg
es
cld
pushl
or
xchg
inc
scas
sbb
cld
sbb
pop
pusha
xlat
rorl
mov
imul
es
or
bound
mov
xor
mov
pop
xchg
mov
ret
jno
mov
lods
xchg
xchg
and
dec
and
mov
call
inc
cmp
xor
in
mov
push
and
mov
xor
ret
xor
lds
lcall
mov
ds
shrl
jns
add
pop
je
xor
rolb
mov
mov
fsubs
sarl
outsb
pushf
sub
sub
adc
and
push
push
push
call
cld
push
cmp
add
mov
andl
jnp
std
fisttpl
lds
out
in
sbb
inc
cmp
mov
add
pop
fnstsw
cs
ja
or
shrl
push
inc
mov
stos
mov
pusha
loope
mov
addr16
clc
mov
mov
mov
clc
popl
and
mov
dec
pop
cld
jg
test
xchg
jbe
or
dec
and
xchg
push
push
loope
xor
idiv
addl
jmp
mov
pop
nop
mov
insb
outsb
mov
add
std
pop
hlt
roll
fnstcw
cmp
push
xor
mov
movsl
mov
pusha
sub
adc
int
aad
jle
sub
fisubl
push
in
mov
imul
clc
xor
bound
incb
in
jo
jl
sub
sbb
pop
xchg
in
xchg
aam
xor
push
push
cmp
mov
add
cmp
out
int
add
iret
icebp
fwait
lcall
add
cltd
pop
cwtl
xchg
xchg
xlat
jo
mov
push
mov
xor
pop
adc
mov
add
mov
cli
cwtl
mov
pop
mov
and
fdiv
dec
and
sub
fucomip
in
push
insb
mov
add
sub
roll
mov
mov
or
mov
sbb
xchg
mov
pop
test
dec
rcr
mov
jp
mov
jmp
cpuid
popa
or
jne
sub
fsubl
xchg
sub
rcrb
push
push
pushl
mov
rorl
test
pop
pop
dec
popf
cli
sbb
insl
aad
mov
mov
mov
nop
sbb
fnstcw
xchg
push
adc
xchg
pusha
adc
lcall
jl
test
je
jmp
scas
call
mov
sbb
adc
mov
scas
ret
mov
mov
pop
repz
clc
xor
lret
cwtl
adc
es
xor
aaa
cmc
pop
das
enter
aaa
fwait
mov
lret
add
cld
aaa
into
inc
movsl
cmp
xchg
mov
jb
negl
mov
jle
or
adc
mov
inc
fbld
cmp
ja
in
mov
cmp
or
or
lds
mov
xchg
or
adc
ja
adc
insb
imul
pusha
roll
dec
adcl
jo
cmp
adc
sbb
adc
dec
sbb
cmc
dec
leave
or
and
or
lret
xchg
cli
popa
xor
test
aad
or
outsb
dec
and
mov
sub
mov
sar
std
mov
pop
pop
inc
rolb
add
pusha
stos
shl
sub
sbbb
push
in
inc
mov
shrb
cmp
push
cwtl
dec
into
mov
out
dec
xchg
rcl
and
in
cmc
adc
cmp
cld
nop
movl
mov
mov
inc
out
mov
push
into
cmp
lock
push
push
pop
mov
mov
jg
mov
inc
adc
lds
add
aas
mov
ljmp
je
add
and
jmp
jbe
in
add
add
mov
mov
lods
push
and
push
clc
or
aam
scas
mov
aaa
std
pop
nop
mov
lahf
push
ds
inc
dec
cs
push
stc
push
mov
loope
pushl
xchg
xchg
sub
mov
scas
lret
xchg
sbb
pop
movsb
fsubr
jbe
jecxz
loopne
imul
xchg
shll
stos
jns
jno
mov
adc
and
incw
push
addb
aam
jno
mov
inc
sub
gs
loop
pushf
in
add
push
adcb
lods
stos
add
les
mov
in
pop
lahf
addr16
incl
cmc
pop
int3
lods
imul
adc
jmp
filds
icebp
ud0
jecxz
xor
push
mov
gs
or
or
cmp
xchg
add
cmp
cs
sub
dec
hlt
notb
data16
add
and
inc
inc
jl
shr
movsb
fstps
sbb
lods
cmp
inc
loopne
add
adc
push
pop
lock
inc
scas
add
or
popa
je
mov
sub
dec
fisubl
idiv
add
inc
pop
call
mov
repz
imul
pop
sub
pop
cld
xchg
mov
push
inc
or
xor
and
fistpll
dec
lahf
adc
xchg
shlb
fisttps
and
fisttpl
sbb
mov
xchg
push
lods
movsl
aam
test
and
rcr
cwtl
inc
sbb
fsts
mov
test
addb
add
popf
js
je
bound
inc
sbb
shr
inc
pusha
mov
jmp
popf
or
aam
mov
pop
out
inc
sbb
inc
or
mov
out
and
jnp
jnp
push
mov
punpckldq
push
or
or
je
add
movsb
es
jge
lahf
pusha
enter
push
sahf
adc
jle
pop
or
stos
js
rol
fcoml
or
shlb
or
test
shl
pop
mov
shlb
daa
arpl
add
and
shll
repnz
xchg
jae
or
add
movsb
icebp
sub
push
push
inc
lret
js
movsb
mov
stos
dec
shl
sub
rorl
dec
cmp
cld
jecxz
mov
sbb
cmp
push
adc
in
sub
std
scas
mov
xchg
ret
sahf
sub
inc
xchg
mov
in
cwtl
xchg
cltd
test
pusha
pop
repz
inc
xor
leave
xor
sbb
sbb
cs
or
data16
sub
push
mov
push
sub
mov
jne
jg
xadd
ja
mov
or
cld
das
clc
and
xchg
mov
iret
clc
mov
aam
pushf
and
sarb
push
fnsave
ret
cmp
pop
rolb
mov
adc
and
clc
add
out
mov
inc
jmp
leave
add
pushf
jae
into
cwtl
mov
testb
pop
adc
je
mov
jg
and
add
ss
pusha
xor
jg
popa
repnz
popa
adc
inc
cmp
pop
mov
pushl
jbe
mov
sti
bound
lods
add
pop
sbb
dec
fsubs
cmc
loopne
mov
rclb
and
scas
pushl
inc
jg
cmc
cmp
movsb
neg
push
out
pop
gs
jb
mov
jge
nop
sub
cli
push
enter
lret
mov
mov
arpl
in
mov
cmp
and
cld
adc
xchg
shlb
dec
fsts
imul
and
call
dec
add
mov
pop
mov
mov
mov
mov
or
es
cwtl
or
mov
lods
adc
ljmp
xor
scas
xor
mov
loope
xchg
pop
xchg
cmpsl
mov
jge
cmp
xor
fwait
mov
cs
inc
pop
xchg
in
mov
int
jle
xchg
push
fldenv
add
cmp
add
jmp
or
pop
jp
cld
outsl
clc
mov
inc
mov
ja
dec
adc
sbb
mov
jo
pop
lock
enter
adc
adc
in
call
inc
sbb
sub
in
bound
xor
xchg
movl
scas
cmp
loop
call
mov
pop
push
fwait
xor
enter
sub
ljmp
loopne
movsl
test
lods
jo
mov
sub
add
sbb
or
lcall
test
cmp
repz
aas
xchg
or
push
lods
jmp
gs
and
call
lods
and
je
mov
jmp
data16
mov
inc
mov
mov
iret
or
call
stc
bnd
sbb
bound
imul
outsb
pop
cli
push
ds
jge
and
add
jecxz
cmp
push
adc
mov
loopne
and
out
mov
mov
fmul
leave
shr
mov
jg
insl
adcb
fmul
dec
pop
stos
mov
pop
cmc
das
cmpsl
cmp
adc
cmc
adc
daa
out
xor
and
pop
in
std
sahf
shrb
jg
inc
jg
push
aam
xchg
mov
mov
mov
call
ret
in
xor
mov
popa
stos
loopne
inc
js
hlt
mov
or
jo
call
cmp
test
nop
jbe
ljmp
roll
jns
fcompl
push
mov
add
shll
inc
cmp
or
push
and
ss
cwtl
cmp
bound
es
adc
incl
cmp
sub
test
cmpsb
ljmp
pop
mov
lds
fnsave
test
ret
scas
ss
xor
nop
or
mov
fildll
fsub
push
scas
cmpb
dec
adc
call
push
pushf
out
cs
out
dec
mov
push
add
cld
ret
push
sbb
test
dec
sahf
popf
enter
cmpsl
mov
test
dec
dec
in
outsl
cmp
and
in
mov
xchg
aam
jmp
or
cld
lcall
imul
dec
cs
daa
clc
inc
rcrl
xor
or
std
or
aas
out
in
imul
ljmp
repnz
or
jg
cmpsl
xchg
push
xor
imul
mov
add
jb
push
mov
jl
mulb
call
dec
adc
or
lea
and
call
jg
xchg
pushf
iret
pop
fwait
outsl
hlt
aaa
fidivs
mov
out
inc
clc
add
out
jo
or
xchg
inc
inc
push
dec
xchg
shll
add
mov
push
shll
cli
mov
subb
sbb
push
xlat
pop
mov
insb
cmpsb
or
inc
push
jbe
adcb
movsb
lret
lds
pop
lock
cmp
add
push
rcrb
pop
sub
sbb
mov
sbb
js
sub
jmp
mov
mov
out
cltd
pop
fidivrs
lret
cmpb
inc
bswap
push
movsb
sti
sahf
repz
push
or
xlat
test
mov
inc
int3
fnsave
xchg
jl
test
shrl
push
cmc
or
daa
inc
and
pusha
pop
clc
clc
or
mov
das
movsb
lcall
test
mov
sub
ret
sarb
xor
aaa
add
arpl
jnp
jb
rclb
shrl
xchg
je
dec
dec
inc
inc
mov
mov
mov
pop
dec
aas
dec
mov
int3
sbb
mov
inc
iret
push
addr16
das
mov
and
cli
and
xor
add
idiv
xor
cld
pop
lock
shl
cwtl
adc
cmp
cwtl
push
hlt
rcrb
loope
rcr
and
cmp
lret
add
push
mov
in
jge
cmp
pop
adc
or
jle
insb
outsb
pop
mov
pop
or
push
pop
dec
sbb
outsl
or
lods
loope
out
sbb
or
sub
stos
push
adc
xchg
sbb
mov
or
or
movsb
lcall
xor
jmp
in
or
orl
hlt
test
add
xchg
pop
test
test
sbb
inc
adc
pop
pop
dec
xchg
push
insb
xchg
in
mov
dec
loopne
mov
and
inc
stos
mov
jg
cmpsb
mov
or
divb
jge
rcrb
cmp
adc
xchg
flds
push
and
push
cli
aas
cmp
sarb
ja
dec
nop
dec
add
cld
pop
cld
repnz
rcrl
add
ja
sub
or
ljmp
mov
bound
dec
and
sbb
test
fs
orb
and
push
jmp
jbe
sbb
lods
pop
push
loope
incb
push
loopne
mov
subl
inc
sub
sti
ja
decl
jp
out
scas
mov
xor
mov
idiv
inc
out
loopne
lret
mov
cmpsb
mov
push
repnz
lret
cli
cld
int
loopne
mov
in
inc
mov
adc
cmpsl
repz
aas
inc
mov
nop
add
dec
xchg
jb
or
mov
jg
jge
outsl
xchg
js
push
nop
cld
or
xor
ret
add
inc
fwait
pop
jecxz
push
ret
pop
mov
repz
call
mov
add
cld
xorb
adc
push
outsl
mov
shl
xchg
xchg
dec
out
add
pop
movsb
xor
pop
xchg
enter
cld
xchg
pusha
enter
jg
xchg
aad
mov
push
fimull
sub
lock
pop
sub
out
jbe
and
or
cmpsl
dec
push
dec
and
aaa
sbb
stos
ficoms
lcall
cmp
mov
pushl
rolb
add
lock
push
jo
push
loopne
dec
mov
push
xor
add
jbe
jg
mov
daa
pop
xchg
jae
pop
out
ljmp
cmp
loop
clc
add
pushf
sti
mov
jg
adc
xor
dec
pop
cld
pop
mov
inc
aas
addr16
je
in
repnz
cwtl
dec
stos
mov
pop
fcomip
push
mov
sbb
out
sub
push
clc
add
xchg
in
mov
loopne
rcrb
mov
push
cli
cmpl
jecxz
mov
inc
imul
jge
dec
xlat
lock
inc
sub
adc
jbe
pop
les
push
push
enter
mov
or
or
pop
mov
lods
icebp
sub
inc
lock
loope
loopne
int3
imul
dec
pop
xchg
testl
xor
or
adc
scas
mov
xchg
sarb
es
cmpsl
mov
jmp
es
xorb
jecxz
cli
mov
loope
adcb
ret
lock
inc
in
ror
inc
loop
jnp
decb
scas
add
scas
jecxz
rcl
mov
mov
je
cmp
adc
mov
mov
xor
cmp
mov
fldl
movsb
xor
sbbb
test
int3
or
sbb
mov
int
push
les
jmp
lds
fs
adc
mov
rorb
adc
add
xchg
loopne
xor
mov
push
testl
add
mov
mov
sbb
sti
ja
jecxz
and
call
add
fsubrs
adc
and
incl
inc
enter
lock
fs
mov
movsb
mov
or
movsl
das
add
std
popf
dec
inc
mov
scas
insb
mov
jecxz
lret
popl
sub
pop
inc
pop
dec
out
hlt
cltd
pop
push
out
bound
pop
mov
pop
pop
add
and
push
and
mulb
mov
xchg
mov
mov
mov
mov
stos
adc
jb
mov
subl
fcomps
ss
cmpsl
stos
loope
adc
and
call
and
stc
sbb
or
mov
pop
push
mov
hlt
insl
dec
inc
pusha
gs
or
and
loop
subb
test
pop
or
je
jg
sub
les
push
arpl
mov
lock
xchg
incl
sbb
out
and
ret
add
fcomip
int3
sbb
and
sbb
daa
popa
xor
mov
pop
in
jbe
popf
cli
pop
xchg
jbe
mov
jl
lahf
xor
push
aad
sub
lods
leave
mov
add
mov
push
jg
movb
fsts
sar
sub
jb
sbb
xchg
add
inc
pop
and
cld
mov
pop
sbb
out
movsl
add
jg
jns
mov
and
loope
je
ret
fmul
xchg
or
test
in
jg
lock
sbb
xor
and
sbb
shll
shll
daa
cmc
pop
mov
insl
cs
mov
cltd
add
test
pop
rclb
mov
jno
and
mov
xor
add
mov
scas
loopne
jg
lcall
xlat
pop
or
sbb
std
inc
or
fldcw
add
jge
icebp
fcompl
loop
iret
test
daa
mov
inc
cld
mov
mov
jge
cmp
aas
sub
mov
decl
popa
shll
dec
ja
xchg
add
enter
in
clc
pop
mov
int
adc
jo
jg
loopne
mov
and
adc
mov
fwait
iret
xchg
and
push
sub
mov
mov
pop
or
sub
invd
sbb
hlt
push
dec
sbb
mov
adc
lahf
mov
push
out
lods
mov
arpl
outsl
jp
test
fdiv
pop
mov
jl
neg
fs
outsl
jne
add
adc
scas
and
stos
jne
call
ds
jmp
inc
xchg
adc
sbb
icebp
pop
jg
xlat
fbstp
jnp
je
lods
loopne
or
pop
fdivl
leave
std
cmpb
or
push
aam
mov
xchg
movsb
or
lock
pusha
push
cmc
xchg
push
sbb
inc
xchg
pop
adc
int
jno
imul
add
dec
ljmp
dec
cmp
dec
push
mov
aad
mov
jmp
add
push
test
add
sbb
jbe
jp
mov
std
mov
and
leave
mov
sub
mov
mov
sbb
lods
int
call
jecxz
mov
pop
sti
ficoml
xor
pusha
and
pop
lock
mov
outsl
aam
rorl
clc
add
stos
lcall
xchg
fisttpl
sub
movsb
pop
xchg
xor
sub
add
jg
pop
test
xchg
aam
sbb
lret
and
out
fists
push
add
jmp
es
xor
add
daa
sbb
aas
mov
bound
mov
lcall
loope
call
fcoml
in
subl
sbb
cmp
test
sbb
inc
pop
lods
jg
dec
mov
xchg
dec
pop
sar
in
mov
test
add
cltd
push
add
pushf
sbb
or
das
js
cmpsb
subb
inc
ljmp
ret
or
bnd
or
call
js
add
add
sbb
xor
adc
outsl
cli
pop
sbb
clc
and
sbb
xchg
ret
decl
xchg
gs
dec
nop
mov
cltd
cmpsl
inc
pop
test
mov
pop
cli
aaa
mov
in
aam
mov
cmp
ljmp
xchg
shrb
mov
mov
stos
incl
mov
sub
sub
dec
jge
pushl
clc
push
inc
add
lret
je
out
add
ret
clc
inc
pop
pop
xchg
dec
xchg
inc
push
mov
ret
decb
out
addr16
mov
rcr
push
int
xchg
add
nop
loope
test
arpl
loopne
xlat
pop
mov
out
ficompl
push
shlb
pop
jbe
out
or
pop
inc
fdiv
xchg
mov
cmpsl
pop
sbb
lcall
push
out
popa
adc
gs
mov
ret
xor
xlat
pop
xchg
adc
adc
aas
mov
jne
js
cmp
jno
imul
js
test
pop
pusha
push
jp
aad
popa
frstor
jg
lret
push
mov
addb
ret
cmc
or
jno
xchg
out
xchg
cmp
pop
mov
add
dec
insl
xchg
jle
ljmp
add
sub
andl
xor
out
fisttpl
push
and
sub
in
inc
fisttpl
cld
aad
add
jb
and
xchg
test
mov
stos
in
es
lret
sub
push
ljmp
std
or
adc
or
aas
push
dec
adc
rolb
mov
enter
outsb
clc
js
cmp
push
loopne
js
xor
jne
inc
ds
mov
leave
adc
push
addr16
or
in
iret
jg
xchg
xor
xchg
and
xor
mov
sub
or
jg
mov
pusha
repz
mov
stos
adc
push
mov
loop
scas
adc
rcrl
mov
push
loope
inc
inc
jecxz
aad
out
jecxz
push
aas
out
clc
stos
loop
pop
add
sub
adc
inc
mov
xchg
cld
xor
wrmsr
lcall
add
jp
inc
sub
and
cmpb
cld
xor
cmp
es
ljmp
adc
dec
add
xchg
mov
fdivr
jg
xchg
scas
popf
add
push
jmp
vpcmpeqd
cld
lret
cmp
xor
in
test
xchg
add
lcall
movsb
adc
jae
adc
inc
lods
xchg
push
xor
push
mov
ret
pop
clc
call
sub
imul
mov
push
pop
or
mov
cwtl
adc
xor
dec
adc
jl
cs
mov
pop
sbb
cmp
xchg
arpl
adc
sbb
mov
fs
int3
or
stos
push
gs
xchg
push
mov
ret
sbb
push
lds
or
dec
pusha
test
jne
or
gs
faddl
jo
xchg
sbb
jmp
lock
push
mov
push
incb
call
xor
xor
cmp
inc
scas
xchg
test
mov
cli
mov
jg
xchg
or
out
insl
pushf
inc
sub
rol
or
pop
cmp
iret
or
movb
inc
jge
or
jge
out
es
fildll
dec
xchg
out
daa
addr16
sahf
scas
add
and
mov
push
sbb
mov
ficompl
mov
aaa
mov
rcrb
jns
push
inc
sub
and
repnz
fdiv
popf
fdivrp
sub
mov
mov
insb
sbb
std
outsl
cmpsb
push
hlt
cmp
outsl
push
sub
aam
rcr
push
push
test
xor
shlb
jg
sub
jle
adc
movsl
cmp
jg
lret
hlt
call
out
mov
ja
mov
xorb
dec
pop
les
jg
push
faddl
test
insb
add
mov
xchg
cmp
lahf
ss
movsb
scas
mov
scas
ss
inc
sbb
aaa
inc
pop
pop
in
fisubs
fsubs
imul
fdivrl
cmc
add
sbb
mov
jp
mov
imul
sbb
in
pop
cmp
xchg
or
xor
pop
sub
add
out
out
outsl
and
cwtl
inc
mov
add
loope
dec
xor
test
push
mov
ss
push
pop
jle
jo
add
and
test
adc
sbb
pop
clc
xor
pop
ret
mov
stos
addb
or
or
iret
adc
lret
inc
xchg
jne
movsb
pop
rcrl
ljmp
stos
scas
cmp
xchg
and
adc
push
jo
push
call
incl
cmp
xorb
ljmp
or
or
add
mov
jg
imul
pop
mov
mov
jg
mov
mov
jnp
mov
xor
mov
jbe
mov
add
rorl
mov
xchg
jle
jecxz
xlat
in
cmp
pusha
mov
js
cmp
imulb
sbb
add
lret
mov
mov
test
xchg
rolb
inc
and
or
sub
adc
in
sbb
mov
jl
lahf
dec
push
ret
nop
jb
les
mov
pop
mov
sub
cmp
push
jae
push
loopne
push
xor
push
in
fisubs
mov
push
mov
sbb
push
cltd
jns
ljmp
mov
mov
or
dec
adc
push
fmuls
jmp
xlat
dec
adc
ljmp
hlt
jnp
orb
adc
outsb
mov
cmc
and
push
sbb
sub
push
mov
or
pop
xor
xor
jmp
push
cld
out
mov
jg
cli
pop
push
push
insl
push
and
mov
in
fisttpl
push
ja
dec
std
and
sub
xchg
add
mov
lock
pop
sub
enter
es
imul
push
data16
mov
jb
push
pop
mov
fimuls
repnz
xlat
stc
mov
cmp
orl
pop
sub
test
std
outsl
sbbb
mov
lods
jmp
loop
and
mov
cmp
add
jmp
jns
roll
sub
mov
scas
icebp
cmp
sbb
cmp
push
add
decl
test
lret
push
mov
inc
ljmp
mov
sub
adc
lahf
sub
jmp
pop
jp
add
xor
dec
jp
pop
mov
jnp
push
shrb
fs
and
add
repnz
cld
inc
mov
pusha
or
es
aam
dec
lahf
cmp
sbb
sbb
push
ds
in
or
enter
mov
pop
test
adc
sahf
xchg
in
stos
xchg
push
push
fs
push
cmpsb
out
cwtl
push
mov
popa
adc
xchg
mov
lds
jg
adc
cmpsb
out
pop
loop
fistl
stos
or
andb
cmp
xchg
dec
sbb
popf
ret
fildll
sbb
push
les
inc
cmp
or
in
bound
dec
pop
xchg
aaa
cld
add
xchg
nop
fnstsw
inc
mov
push
mov
iret
mov
loop
add
shll
jbe
adc
scas
push
mov
pop
fistpll
dec
fldl
add
add
dec
ds
loopne
pop
xor
sbb
pop
cmpsl
insb
ds
into
inc
lock
lcall
adc
xor
inc
mov
push
add
inc
pop
xchg
or
pop
pop
repnz
sbb
mov
dec
adc
fsub
or
mov
test
cmpsb
je
dec
mov
or
je
sti
xchg
hlt
dec
mov
rol
dec
fnsave
iret
or
sbb
dec
pop
pop
xchg
lods
add
outsl
or
pop
add
insl
inc
dec
dec
push
xor
xchg
sbb
clc
enter
cmpsb
aaa
cld
dec
inc
js
xchg
add
mov
rcll
dec
arpl
outsb
mov
outsb
dec
cmp
sbb
outsb
jl,pt
cli
fwait
dec
fsqrt
inc
sub
xchg
enter
jg
lods
cld
or
xchg
jbe
sbb
adc
sub
cmp
pop
pop
fidivrl
add
sub
add
cmp
in
out
pop
les
pop
flds
int3
fcomps
pop
inc
pushf
imul
nop
or
sub
mov
pusha
int
addb
sbb
std
jg
ja
pop
sbb
cmp
or
cmc
jne
cli
pop
pushl
pop
xor
pop
fs
xchg
arpl
xor
mov
lock
rorb
push
in
inc
mov
xorb
popa
inc
sbb
pop
push
in
fcoml
dec
test
cmc
cltd
and
data16
bound
inc
rol
sbb
and
xor
add
scas
sbb
jl
push
js
rorb
xchg
mov
ja
je
dec
push
xchg
add
jp
mov
cwtl
js
decl
mov
push
je
or
decl
mov
dec
fs
jae
or
out
ret
incb
xchg
and
push
addr16
lods
bound
scas
inc
mov
aas
cld
ret
add
test
pop
shr
add
xchg
add
cmpsb
rorl
adc
pusha
sbb
xor
mov
push
cmp
mov
dec
jge
jle
pusha
in
sub
out
sub
in
inc
fcmove
aas
jg
inc
insl
orl
cmp
jg
cmc
cltd
out
sahf
fmull
aam
sarl
lds
pop
lcall
iret
inc
push
xor
add
shll
jge
repnz
push
dec
or
xchg
xor
push
rolb
mov
xor
cmp
jns
jae
fistps
xchg
and
imul
loope
mov
pop
jl
aad
push
adc
adc
enter
test
clc
dec
add
out
pop
es
and
out
es
dec
and
stc
add
sub
out
mov
lods
mov
incl
mov
jbe
inc
lret
jge
enter
mov
fdivr
inc
sbb
jmp
pop
mov
inc
call
fadds
gs
cli
and
push
or
adc
out
fldcw
in
out
add
repz
mov
in
rorb
cs
test
das
sar
imul
lcall
dec
push
add
sbbb
into
addr16
incl
adc
mov
lret
inc
xchg
dec
aas
ljmp
test
ret
add
xchg
popa
push
scas
mov
adcl
push
pop
xor
jp
jmp
nop
dec
add
clc
int3
inc
outsb
xchg
and
shlb
ss
pusha
roll
sbb
mov
std
mov
out
sub
mov
jbe
imul
cmp
dec
xchg
add
cmp
outsb
test
push
lods
rorl
jmp
aam
push
aam
ljmp
or
and
fcomps
mov
mov
add
das
clc
xchg
inc
aad
lods
xor
pushf
xor
pop
clc
movsl
fadds
sarb
adc
push
push
xchg
js
int3
sbb
mov
inc
mov
sbb
fcoml
mov
int
imul
fs
pop
imul
jnp
xorb
arpl
ret
adc
lcall
push
mov
pop
aad
int3
jnp
and
pop
imul
and
or
mov
out
int3
cmp
mov
xor
push
test
sbb
and
mov
mov
or
fidivl
decl
mov
cmp
dec
rcr
je
les
mov
lcall
xchg
nop
pop
hlt
iret
fildll
scas
lret
rcrb
sub
in
pop
lahf
lcall
and
push
and
xchg
jl
in
jg
adc
pop
mov
jg
jno
cmp
dec
mov
ljmp
sbb
push
pop
in
mov
cmp
and
ja
lcall
popa
push
add
test
adc
pop
call
jo
xor
sbb
pop
enter
out
sbb
push
in
jmp
loop
pop
pop
add
inc
sbb
xor
push
adc
mov
dec
loopne
adc
push
cmp
xchg
lret
mov
jmp
add
cmc
cs
inc
mov
push
add
xchg
mov
fdivrs
dec
add
pop
push
sti
pop
loope
aaa
js
sar
and
dec
add
incl
and
inc
xor
inc
cmp
pushf
ret
xchg
cli
jle
xchg
loope
jns
outsl
fcoms
pop
hlt
add
pop
movmskps
cltd
push
inc
jnp
jmp
pop
call
xlat
cmpsb
loope
jp
rorl
punpckhbw
mov
loope
out
int3
sub
pop
cmp
xchg
movb
movsb
add
mov
les
mov
or
lret
les
incb
jb
cld
in
push
xlat
in
pop
or
mov
add
xchg
inc
push
outsb
mov
fwait
icebp
pop
sbb
pop
or
pop
jae
out
ret
out
test
mov
mov
xor
push
push
mov
out
jge
mov
and
mov
scas
push
dec
xchg
push
and
pop
lret
mov
xchg
mov
mov
test
pop
call
mov
dec
mov
lcall
add
negb
scas
push
imul
fwait
xchg
out
inc
frstor
adc
shl
in
mov
inc
sbb
cld
cmpsb
and
ret
pop
mov
dec
fldcw
loopne
popa
cli
cmp
add
pusha
pop
inc
test
es
test
push
pushf
and
lea
rol
pop
dec
jnp
repz
out
add
pushf
aas
add
dec
jo
test
cli
mov
cmp
push
mov
mov
ja
clc
dec
xor
lods
pop
jmp
fidivrs
sbb
inc
outsl
mov
enter
ljmp
data16
loop
pop
sbb
add
rorl
xor
cli
inc
inc
pop
push
lods
dec
jle
and
dec
aaa
sar
jge
shll
add
add
xor
sub
sub
add
adc
lret
add
or
neg
pop
add
mov
dec
cmp
sahf
add
ds
sub
push
rorb
int3
push
repz
out
cmp
or
mov
out
jb
repnz
add
mov
test
pop
sbb
pop
lds
sbb
adc
and
cmp
adc
jg
add
adc
and
test
dec
cmp
aam
push
push
sbb
add
add
iret
sub
movsl
negb
roll
jecxz
fimuls
push
loop
cltd
ljmp
ja
inc
xchg
sahf
stos
mov
cmp
rorl
aaa
jl
or
or
inc
nop
mov
sbb
sbb
pop
loope
jmp
into
fdivrs
adc
mov
push
enter
rcrl
fdivrl
or
push
inc
jle
inc
push
ret
ja
aad
dec
lods
lret
lret
sub
mov
call
hlt
gs
add
or
fcomip
sbb
jl
dec
or
lret
add
in
ds
dec
call
add
stc
std
pushf
mov
mov
pushf
inc
add
sub
mov
push
pop
pusha
int
les
dec
and
fs
decl
in
iret
mov
pushf
and
andl
and
jbe
jg
cwtl
or
add
add
or
add
sti
lcall
mov
repnz
repz
call
cli
lret
call
lret
pop
or
cmpsb
fwait
cli
clc
push
cmpsb
es
mov
mov
mov
fsubl
push
mov
clc
insb
loopne
enter
mov
ljmp
pop
adc
dec
movsb
es
mov
push
xchg
push
outsl
clc
add
movsl
mov
mov
inc
mov
inc
xchg
bound
and
adc
ja
jg
addb
je
out
shrb
outsl
mov
inc
mov
mov
out
scas
xor
movsl
add
mov
popf
jp
xor
fldl
nop
scas
std
fbstp
les
jae
push
sbb
or
mov
scas
sar
cs
mov
cmc
and
cwtl
mov
test
scas
adc
mov
push
sti
adc
cld
inc
cmp
sbb
or
dec
out
push
sbb
push
fisttpl
cmp
mov
and
sub
xchg
mov
cli
adc
cld
outsl
mov
lret
test
inc
stos
les
pop
jne
push
in
lcall
xchg
and
stc
ljmp
sub
lods
or
mov
test
clc
pop
add
pusha
orl
mov
inc
push
mov
mov
add
sbb
and
push
mov
cmp
mov
xchg
mov
mov
setns
sbb
and
clc
push
in
cmp
cmpsb
pushf
in
std
push
fs
rorb
or
adc
ret
sbb
into
pushl
push
cld
aam
shll
shll
stos
jg
inc
pushf
clc
bound
push
hlt
or
xor
js
mov
jnp
imul
mov
sub
bound
jg
xor
test
inc
cld
decl
outsb
xchg
pop
or
push
xor
imul
jle
pusha
rol
pusha
scas
sti
cmpsl
out
call
sub
nop
adc
adc
fadd
xchg
push
pop
inc
and
lock
fiaddl
or
daa
je
incb
dec
mov
jmp
aaa
movsb
mov
sbb
push
and
jae
dec
lods
xorb
nop
and
test
pop
fiaddl
push
dec
js
call
lock
push
movsl
jg
add
xchg
pushf
test
dec
push
cli
mov
enter
enter
cmp
jo
out
daa
into
ljmp
pop
cs
ss
inc
push
mov
outsl
es
orb
lock
fdivl
push
pop
das
cmpsb
icebp
icebp
or
add
sub
insb
or
or
dec
scas
push
test
and
stc
dec
in
subps
or
mov
imul
mov
push
xor
mov
mov
shlb
scas
repnz
sbb
out
push
imull
push
inc
popf
and
jp
dec
sar
mov
in
inc
sbb
fiaddl
adc
pushl
adc
adc
jo
pop
clc
popf
int3
js
cli
decl
inc
inc
clc
push
loopne
ficoms
push
cmp
adc
incl
mov
adc
rolb
lret
inc
test
int3
pop
stos
gs
mov
fs
les
mov
push
out
adc
xlat
fucomip
inc
add
inc
mov
sub
mov
pop
or
stos
adc
fwait
jo
pop
ds
out
daa
orl
cld
mov
icebp
cli
fnstenv
push
jmp
mov
mov
and
pop
sub
dec
repz
fistps
xchg
xor
mov
out
and
dec
bound
fs
mov
cli
test
decl
js
cmp
out
and
jb
inc
or
add
xor
xchg
cmpsl
lahf
xchg
and
inc
fucom
push
clc
mov
cmpsb
aas
mov
test
mov
xor
push
fistpll
imul
mov
pop
lods
sub
mov
hlt
dec
lds
pop
and
mov
movsb
push
mov
adc
push
aam
jle
ffreep
out
pop
imul
pop
fisttps
call
mul
test
sahf
inc
aad
ret
repz
add
push
cmc
sbb
je
xchg
cltd
cmp
xchg
add
lea
sub
dec
sbb
lods
or
sbb
inc
adc
sbb
ss
push
aam
stos
call
mov
pop
add
shlb
jno
fwait
xchg
add
sbb
int
mov
pop
push
add
enter
xor
cld
mulb
sub
mov
call
inc
jb
ret
adc
xchg
inc
adc
push
mov
add
add
sbbl
push
jle
mov
ja
dec
jecxz
loopne
push
push
nop
xchg
daa
xchg
inc
mov
jg
jg
push
cmp
push
mov
das
insb
xchg
mov
xlat
pusha
mov
test
inc
xlat
bound
mov
adc
push
inc
int
ljmp
lods
cmpsl
cmp
xchg
addr16
or
adc
add
sbb
inc
add
stc
cld
movb
lds
int
jl
pop
mov
cmp
xor
pop
adc
shlb
push
or
aas
push
int3
mov
and
dec
pop
mov
addr16
in
dec
mov
mov
cwtl
mov
or
xor
rcll
std
or
jmp
mov
scas
or
fcmovnu
cmp
add
sbb
std
mov
mov
outsl
cli
aaa
add
add
in
popa
sub
call
out
jle
cld
inc
rcll
pop
loopne
hlt
add
dec
call
hlt
pop
add
cmp
mov
mov
xchg
leave
sbbb
sbbb
pop
or
call
cs
fistpl
push
jae
repnz
mov
mov
cli
lock
in
fisttpll
cmpsb
sub
mov
mov
xor
and
ret
loopne
in
sub
mov
popa
and
addl
and
gs
fsubs
fisubrl
push
sti
movsl
jno
add
ds
cmp
incb
add
pushl
xchg
adc
sub
enter
cwtl
add
or
ljmp
inc
jbe
adc
call
mov
inc
adc
inc
jle
cmp
or
mov
jo
mov
jecxz
into
lods
lea
out
stos
xor
mov
into
ss
and
aaa
mov
lcall
dec
push
mov
popa
sub
mov
out
inc
adc
fwait
push
add
andl
hlt
aaa
jle
jae
and
mov
repnz
dec
pop
pop
adc
cmp
push
loop
std
xchg
sub
and
push
sub
imul
add
icebp
lret
imulb
incl
sbb
rcrb
or
cmpsl
push
mov
into
mov
fsubs
xchg
clc
and
mov
aas
ss
cmpl
inc
push
pop
xor
or
dec
or
sbb
cld
into
outsb
jnp
inc
push
xchg
sbb
mov
pop
hlt
jmp
test
pop
data16
adc
mov
xchg
mov
popf
xchg
sbb
repnz
rorb
leave
push
outsb
inc
sbb
inc
fdivs
push
or
jae
jo
sub
jae
mov
adc
mov
fucomp
inc
and
push
test
sub
iret
mov
sbb
add
or
pop
xchg
pop
std
mov
enter
decl
pop
outsb
adc
jb
pop
inc
out
push
js
xor
enter
adc
addb
into
xlat
mov
mov
je
sti
imul
addr16
clc
and
inc
in
or
push
aad
xor
cli
shrb
inc
jns
xor
push
subb
stos
mov
call
jne
push
push
stos
ret
sub
nop
mov
int3
jns
mov
incl
xchg
pop
mov
enter
mov
pop
outsl
jle
je
jg
orb
add
jle
mov
addb
add
or
pushl
fucomip
movsb
jbe
test
push
push
decl
fs
nop
and
fsubl
lods
mov
addr16
dec
add
push
clc
jmp
or
push
data16
subb
adc
dec
movlps
leave
inc
iret
ja
call
lea
mov
mov
inc
sbb
loope
or
mov
sar
lock
fsubs
sub
jnp
mov
jecxz
lods
rclb
mov
popa
add
jbe
sbb
and
inc
mov
scas
adc
add
pushf
ja
ljmp
imul
les
push
sbbl
xchg
mov
pop
add
jp
inc
push
scas
pusha
and
dec
fcmovne
inc
sbb
cs
add
mov
pop
adc
xor
dec
mov
mov
lea
dec
mov
daa
cld
cs
aaa
sbb
and
out
ret
push
std
jmp
cmp
adc
jge
pop
test
jg
add
sub
std
jne
fwait
or
dec
push
push
call
rorl
or
ret
fsubrs
pushf
fcmovnbe
jne
push
pusha
sti
mov
dec
cltd
and
mov
lock
and
js
in
add
push
cmp
ss
xorb
pushf
pop
mov
decl
mov
jns
cmp
out
add
mov
push
and
addl
adc
sub
dec
jecxz
test
ffree
jmp
jmp
cmp
enter
pop
rcr
xor
sbb
fisttps
jl
lret
shrl
add
or
stos
push
js
add
test
les
cmp
xlat
sbb
jl
add
adc
mov
add
in
ss
test
pushf
jle
aas
incb
and
inc
pop
outsl
pop
inc
pushf
push
je
add
sbbl
or
sbb
mov
outsb
mov
iret
dec
pop
popa
je
adc
mov
jb
push
inc
mov
sbb
push
lock
xlat
testl
mov
adc
rcll
lcall
adc
jle
add
jecxz
mov
and
orb
sub
loopne
xchg
lea
mov
jp
sbb
and
jg
nop
es
inc
repz
jns
fidivrs
rcl
push
jl
or
stos
cmp
inc
clc
adc
outsb
std
cmpsb
stos
lods
aam
enter
movb
pushl
jecxz
scas
inc
push
aam
jge
pusha
dec
inc
into
movsl
sub
cmc
leave
pop
xor
mov
mov
push
mov
dec
and
mov
dec
lods
push
in
mov
rcl
cs
cmp
inc
jb
cmp
cmpsb
mov
repz
std
jns
mov
sub
das
ret
inc
xchg
mov
movsl
xchg
and
inc
dec
push
push
pusha
push
pop
mov
pop
decl
mov
push
jnp
jb
push
addb
xor
push
es
in
ljmp
nop
adc
sub
xchg
lea
hlt
inc
mov
cld
inc
js
dec
scas
add
jo
cmp
xchg
inc
stos
jl
jb
aas
xchg
jns
pusha
adc
or
shlb
or
add
cmc
movsl
ljmp
rclb
shlb
xchg
lods
call
loopne
add
mov
outsl
pop
dec
rclb
push
push
dec
mov
or
mov
ss
fadds
sub
add
mov
pop
pop
scas
jb
xor
xchg
push
jp
jmp
repz
cltd
cwtl
xchg
sarb
add
sar
lock
insl
sbb
pushl
mov
ja
int3
push
cld
das
clc
add
in
cmp
sub
pop
add
scas
pop
cmp
mov
movsb
inc
pop
rolb
mov
leave
sub
and
jbe
inc
cmc
lods
xchg
inc
xlat
xchg
call
int3
xlat
daa
lds
add
enter
jl
lahf
add
xor
push
mull
cmc
es
sahf
pop
mov
mov
cli
or
cs
repz
out
cmp
add
scas
sub
outsl
jmp
cmp
test
xor
jg
add
add
sbb
lock
dec
or
jecxz
cmp
add
test
ss
cli
scas
sarl
roll
int
pop
adc
jl
add
jg
push
add
lret
mov
incl
dec
add
loopne
add
jl
mov
lock
inc
dec
call
push
sbb
cmpsl
fsubrl
test
push
fsts
mov
std
loop
mov
xor
sbb
and
jp
shrb
bound
sub
fsub
test
xchg
ret
out
or
decb
lock
pop
clc
call
inc
nop
push
xchg
xor
jg
outsl
xor
add
pop
mov
adc
add
mov
dec
dec
xchg
mov
test
mov
outsl
mov
jmp
mov
cmp
xchg
push
sub
xor
ret
jg
or
and
xor
js
loope
insl
bound
xchg
lds
out
cli
dec
adc
or
pop
add
push
add
add
xlat
or
dec
jmp
gs
adc
add
adc
jg
jb
or
xchg
add
mov
lds
sub
scas
cmpl
add
push
shll
pop
lods
lock
movsb
loope
test
fucomi
or
fucomi
fisubl
fs
cmp
in
icebp
sbb
or
hlt
add
outsb
cmc
push
cltd
popa
xchg
icebp
pushl
mov
or
adc
push
aas
shr
clc
lods
push
mov
ret
adc
stc
test
jge
inc
adc
out
mov
xchg
xor
jbe
incb
pop
call
adc
pop
sbb
and
jecxz
cmp
imul
push
push
jno
sahf
jl
cmp
xor
ljmp
xchg
mulb
imul
and
sti
sbb
out
push
add
das
and
clc
jns
add
or
mov
or
add
xor
xchg
lret
icebp
pop
les
test
inc
xchg
data16
fwait
push
fisubs
jl
jb,pt
cmp
and
and
fwait
jae
cmp
loopne
rorb
xchg
inc
push
test
adc
mov
mov
ret
cmc
push
mov
dec
call
fistl
mov
push
push
test
dec
loop
popf
mov
jl
pushf
dec
sbb
jecxz
out
pop
cwtl
sbb
pop
or
aaa
sbb
inc
xchg
add
pinsrw
add
adc
aad
xor
jle
jg
cmp
inc
clc
pop
into
push
pop
mov
into
repnz
std
lcall
mov
adc
lds
adcb
pop
scas
jecxz
clc
filds
arpl
icebp
inc
fs
add
pop
icebp
pop
aad
neg
dec
cli
movsb
inc
and
test
cmp
lret
and
push
mov
inc
mov
pop
or
pop
mov
and
xor
sahf
xor
jg
pop
push
js
test
or
dec
push
jl
mov
jmp
pushf
insb
mov
decl
xlat
sahf
scas
jno
hlt
sub
fsubrl
pop
inc
fists
hlt
pop
jp
pop
and
or
popa
adc
mov
cmp
aas
mov
mov
repnz
add
imul
scas
rorb
add
je
sub
adc
cmp
jnp
addb
push
mov
pusha
rorl
scas
stos
xchg
cmpsb
mov
pop
fcoms
xor
jge
pop
cld
loop
inc
add
hlt
sbb
adc
mov
push
dec
mov
popa
pop
fwait
xor
das
inc
sar
mov
xor
fiadds
mov
lods
inc
mov
mov
movb
fcmovnbe
cmpsb
and
push
adc
mov
mov
int
shrl
int
add
xchg
or
push
lds
shll
or
call
jp
stc
push
fisubrs
js
jbe
notl
lock
or
mov
pop
cmc
enter
cmp
pop
cli
fisubl
dec
mov
mov
or
je
mov
addl
movsl
cmc
or
lahf
jo
je
add
lds
ljmp
mov
clc
pop
jecxz
cmp
add
bound
es
and
push
and
and
xor
add
jbe
sarb
pop
mov
jns
jb
inc
cmp
sbb
adc
into
cltd
and
stos
pop
pop
dec
push
fs
icebp
je
adc
stos
and
pushf
sub
pusha
adc
jl
xchg
stos
and
js
dec
sub
or
pop
sub
jns
lods
call
inc
sbb
stos
fs
sahf
sbb
lcall
add
icebp
or
lahf
mov
and
adc
popa
jnp
bound
pop
lds
test
pop
arpl
lret
xchg
gs
lock
jle
int3
or
cmp
call
fidivs
push
pop
inc
pusha
push
xor
call
mov
xor
decl
cmp
fmull
aas
mov
mov
rcll
add
pop
inc
pushl
sub
cmp
hlt
pop
mov
popa
aaa
push
inc
xchg
lods
cli
or
xchg
andl
jg
and
pop
push
push
pusha
clc
lret
repnz
xor
aas
fnstsw
cmp
movsb
in
ljmp
mov
shr
push
mov
es
pop
lret
cmp
fdivp
mov
mov
aas
lock
mov
dec
xorl
and
cmp
outsl
les
xchg
sub
push
lahf
popa
in
jecxz
fistpll
mov
out
out
mov
movsl
xlat
pushl
test
lods
or
fs
enter
push
pop
or
inc
fwait
dec
push
mov
xchg
jmp
movsl
aad
lahf
sahf
or
sub
pop
fs
cs
das
int3
and
es
fsubs
icebp
push
mov
test
adc
xchg
mov
ja
inc
pop
push
push
xchg
push
or
loope
int3
data16
and
adc
nop
xchg
pop
aad
popf
hlt
cmp
incl
add
xor
imul
xchg
out
pop
bound
cmp
jp
xchg
js
loopne
pop
jl
pushl
push
fldlg2
pop
mov
loope
add
jecxz
and
loopne
push
xor
xchg
dec
sub
call
fidivrl
ja
and
jbe
mov
and
mov
jg
jg
or
push
call
push
adc
outsl
add
jmp
sub
push
jnp
mov
and
mov
push
and
xchg
or
inc
inc
jmp
xlat
sbb
dec
xor
inc
adc
subl
sbb
add
mov
jbe
jns
adc
scas
jle
outsb
loope
mov
dec
iret
es
decl
cmpsb
and
cs
fsubs
push
in
mov
push
ljmp
or
push
aad
push
add
mov
dec
fnstcw
fimuls
imul
inc
fucomp
add
jns
mov
pop
xor
cmpsb
pop
lcall
sub
or
stos
les
pop
cmp
fucom
movsb
movsl
dec
into
not
loop
dec
leave
adcb
xor
divl
jle
sbb
xchg
jmp
cmpsl
mov
cli
mov
push
cmp
mov
push
mov
add
jo
inc
inc
cmp
rcrb
mov
and
jmp
mov
push
inc
mov
out
arpl
stos
jbe
jg
dec
inc
cmp
lcall
sub
inc
inc
mov
imul
xor
xchg
loopne
bound
incl
sarb
or
in
lret
or
into
mov
dec
mov
clc
mov
imul
call
mov
int
push
or
bound
inc
push
cwtl
jae
loope
cmp
mov
push
pop
sbb
mov
fs
mov
pop
pusha
out
lcall
lods
mov
outsb
cmove
push
pusha
lcall
call
jb
adc
popa
push
sbb
xlat
test
das
sub
dec
or
ja
add
sbb
push
pushf
xor
dec
inc
or
data16
in
add
aam
push
mov
push
sbbl
dec
adc
or
pop
jne
arpl
adc
testl
fistps
lea
mov
std
jnp
push
stos
lahf
push
and
pop
or
pop
jg
and
fdivrl
mov
sbb
sbbb
loop
add
lcall
push
cmpsb
pop
insb
jnp
or
rcrl
adc
rolb
sarl
ror
inc
aad
dec
dec
xchg
cld
push
inc
cs
call
sub
mov
jo
pop
mov
xchg
xor
pop
pop
sbb
jmp
mov
decl
in
shlb
out
jbe
testb
sbb
ficompl
testb
mov
xor
push
lock
lret
das
push
std
fsubrs
loopne
xchg
out
xchg
fistps
inc
insb
cmpb
add
outsl
push
and
or
pop
cmp
ljmp
mov
and
or
xchg
popa
mov
mov
subl
mov
push
lcall
fmull
imul
mov
adc
mov
icebp
jmp
test
fldl
xchg
in
dec
xchg
adc
call
push
les
filds
or
stos
lret
sub
fdivrs
out
fwait
pop
repz
inc
fcoml
daa
mov
pushl
jg
jecxz
dec
shl
rep
dec
pop
pop
sbb
call
cltd
repnz
call
cmovp
ljmp
lods
jle
jle
sub
inc
sbb
dec
cltd
lock
in
mov
aas
xor
loope
ljmp
sub
xchg
js
iret
dec
or
outsb
dec
pushf
lds
xlat
test
test
fcos
decl
ss
shlb
in
in
cld
pop
mov
or
das
and
inc
out
mov
das
pop
lret
mov
pop
or
cld
jmp
hlt
jne
loope
lods
xor
mov
je
jbe,pt
jno
jns
inc
inc
dec
mov
jmp
pop
mov
loope
ret
jb
and
ja
xchg
dec
scas
mov
jle
lods
dec
cmp
dec
push
push
mov
stos
insl
mov
jno
sti
pop
cmpsl
andl
fsubs
dec
sub
xchg
pushl
inc
cmc
adc
lahf
cmpsl
idivl
cli
push
inc
rcrb
sar
push
jl
imul
data16
leave
mov
jae
cwtl
loopne
add
push
adc
cld
fsubrs
push
adc
insl
and
daa
or
push
mov
scas
std
das
in
mov
cmp
outsb
fsubr
push
inc
xor
sub
ljmp
ficompl
into
or
fidivl
push
mov
dec
int3
mov
cmpsl
xor
jae
call
flds
sub
scas
int
cltd
sub
and
outsb
adc
cmc
push
adc
call
stos
lret
xchg
cltd
fisubrl
rclb
outsl
lods
ret
mov
jo
imul
cmc
loope
jmp
jo
ljmp
or
dec
jno
ss
ret
std
std
push
insb
sbb
and
mov
test
adc
stc
jle
dec
nop
loope
adc
movsl
cmp
cmpsl
scas
ljmp
bound
push
loop
out
shl
das
pop
mov
mov
call
fcompl
stc
and
dec
insl
push
xor
cmp
mov
mov
cmc
jo
lcall
ja
call
cmp
or
mov
out
push
xchg
daa
dec
mov
adc
popl
jg
adc
call
fnstenv
lcall
cwtl
inc
pop
cmovs
pop
call
test
mov
cmp
imul
push
clc
inc
js
cltd
add
jmp
jno
nop
imul
and
in
shrl
lods
adc
sub
imul
sbb
pushl
push
lods
cmp
hlt
cld
ljmp
push
addr16
adcl
scas
push
xchg
pop
lcall
movsb
sub
or
test
mov
jo
loope
es
dec
decl
jbe
movsb
dec
stc
adc
pop
stc
loop
test
outsb
xchg
lods
jbe
jns
sbb
mov
call
lcall
pop
leave
enter
imul
cmp
inc
iret
dec
stos
xchg
jmp
pop
test
sti
adc
mov
ret
add
mov
addl
add
dec
inc
dec
xchg
scas
scas
mov
fbld
sbb
mov
pandn
ljmp
inc
inc
out
cld
jns
into
mov
jns
xor
xchg
nop
ljmp
ss
mov
or
pusha
fmuls
sub
sub
call
inc
testl
sbb
test
and
hlt
cmp
mov
stc
push
imul
inc
dec
in
jp
add
movsl
push
add
into
xabort
sahf
les
inc
add
add
ss
loopne
mov
jp
pop
cmp
call
cmp
dec
and
mov
adc
ljmp
pop
mov
dec
add
aaa
incl
xchg
stos
xor
clc
into
sbb
loop
mov
inc
cmp
hlt
ljmp
sti
add
jmp
lea
mov
mov
into
sub
mov
mov
lcall
pusha
stos
sub
or
fbld
popa
sbb
nop
fstpt
leave
popf
push
je
mov
movsl
cmp
mov
dec
mov
push
dec
mov
push
arpl
call
dec
push
add
mull
mov
jno
mov
sbb
or
sbb
fcomip
mov
mov
xchg
pop
loopne
cmp
pushl
ret
cli
int
jne
lret
repnz
repnz
sub
cli
jp
push
mov
cmp
push
in
lahf
pop
add
mov
xchg
out
fimull
push
push
outsl
adc
lcall
cmpsb
mov
sbb
xchg
incl
mov
add
or
fnsave
fstl
jbe
jmp
inc
insl
add
cmpb
jne
imul
fdivl
sbb
call
sub
xor
push
or
out
push
inc
jmp
xchg
jg
and
jnp
decl
test
sbb
inc
push
notl
out
imul
mov
aaa
iret
xor
sbb
dec
fwait
test
pushl
adc
daa
sbb
int3
faddl
mov
xchg
xchg
push
pop
test
js
jae
push
dec
sub
and
mov
jmp
std
ffree
fcompl
sub
add
std
hlt
call
jo
js
sbb
xchg
sub
jb
and
ss
repnz
xor
clc
and
ret
mov
pop
mov
into
or
into
adc
adc
dec
les
mov
fwait
mov
mov
fnstsw
adc
dec
mov
addl
sbb
push
lock
lcall
dec
movsb
cs
mov
sub
sub
mov
lods
addr16
out
lcall
push
repz
mov
pop
je
adc
orl
mov
pop
dec
sar
pop
in
lahf
jl
imul
ljmp
sub
jns
test
xchg
shlb
ret
ret
enter
les
pop
lret
int3
sbb
push
int
int
daa
jge
fnstsw
xchg
pop
leave
cli
decl
cld
or
mov
out
sbbb
pusha
fsubl
pop
fsubr
inc
or
mov
mov
cmpsb
jnp
bound
in
arpl
incl
outsl
lea
fwait
or
or
adc
xchg
pop
push
insl
dec
inc
pop
pop
adc
xchg
nop
clc
movsb
btc
cmp
stc
add
js
jl
int
pop
and
call
test
ret
fadds
outsb
aaa
repz
nop
dec
out
and
mov
mov
lret
jae
outsl
or
pop
or
fcomip
jg
pop
popa
out
or
sbb
xchg
adcb
std
jmp
ljmp
outsl
mov
repnz
push
push
push
scas
outsl
int3
pop
mov
je
mov
call
jecxz
xor
fistpl
out
cmp
mov
cmc
ds
mov
decl
add
sub
pop
xchg
jge
dec
mov
jl
aaa
bound
scas
sbb
and
in
cld
dec
push
imulb
mov
mov
out
jl
fcomip
mov
in
fdivrp
xchg
and
xor
cwtl
fisttpll
dec
mov
sti
gs
jmp
in
dec
lds
imul
mov
icebp
mov
sub
addr16
fwait
jge
fs
std
dec
cld
mov
adc
sub
mov
xchg
mov
std
jge
xor
mov
pop
sub
mov
mov
in
stos
aam
loop
mov
das
clc
push
incl
mov
push
mov
inc
cmp
fistpl
push
adc
mov
lret
lahf
out
fisubrs
push
mov
xorl
push
lcall
aam
adc
test
sub
mov
and
stos
daa
je
icebp
xor
xchg
test
loopne
mov
inc
push
lcall
cmpsb
mov
xor
in
and
cwtl
and
mov
pushf
mov
mov
pushl
inc
addps
je
inc
dec
mov
stos
int
cmp
jmp
mov
cmpb
into
and
ss
pop
cmc
iret
push
lret
arpl
mov
cli
pushl
rol
push
mov
inc
adc
adc
in
cmpsb
adcl
xor
lcall
rorl
mov
add
in
mov
test
push
addr16
dec
shrl
cmp
sbb
out
int3
fs
mov
dec
je
jmp
mov
fcoms
es
ret
incb
loop
je
addr16
mov
ljmp
nop
outsb
push
fprem1
adc
push
cmp
jl
ret
insb
mov
jecxz
and
jo
push
mov
sub
es
inc
hlt
inc
pop
mov
cld
inc
std
out
mov
cltd
mov
incl
jnp
pop
xchg
idivl
mov
jae
adc
jl
cld
dec
sbb
inc
cmp
lret
mov
shl
ja
dec
mov
mov
enter
pop
out
pop
fimull
fdivrs
mov
xchg
les
pusha
xor
jg
jmp
ficomps
pop
add
ret
mov
adc
das
fisttpl
idiv
js
jae
xor
jo
lds
test
sub
rolb
pushf
das
fisubrs
icebp
inc
lock
or
pusha
xchg
xchg
test
mov
pop
pushf
mov
inc
jmp
loope
lcall
inc
mov
mov
adcb
iret
add
enter
decl
inc
xchg
ja
jb
mov
xor
xchg
sbb
hlt
call
lret
dec
inc
sub
fldt
mov
cmp
jns
ljmp
rcr
or
mov
ficoms
icebp
mov
fwait
cmp
mov
sbb
sub
add
pop
mov
xchg
sti
sti
in
sbb
fisttps
cmp
aad
int3
mov
fimull
fcomps
aas
push
push
xchg
pop
cld
test
inc
jg
aaa
lret
pop
inc
xor
inc
call
loopne
and
inc
icebp
call
mov
loop
inc
and
outsl
push
cmp
ret
cwtl
xchg
xchg
mov
inc
dec
add
das
adc
loop
jecxz
mov
dec
es
scas
cwtl
jbe
jb
push
cmpb
fsub
test
xor
and
aas
add
cmp
mov
repz
addl
movsb
shlb
push
and
xchg
mov
lahf
aam
mov
call
push
mov
pop
push
and
dec
sbb
ds
mov
fs
pop
pop
and
jbe
hlt
daa
add
pushl
mov
pop
push
sti
mov
pop
stc
sbb
xchg
and
xchg
sbb
mov
decl
mov
iret
nop
sbb
mov
and
xor
mov
sar
jle
pop
andl
lea
xchg
pop
movsl
pop
out
clc
mov
lock
popf
mov
jg
mov
dec
ret
out
inc
jnp
add
aas
fsubs
sub
cli
lret
cmp
ret
js
push
xchg
lret
push
adc
sbb
mov
scas
scas
cli
jg
dec
add
cli
or
sti
sub
xlat
mov
mov
filds
shld
stc
and
popa
rcr
sbb
or
mov
adcl
push
adc
sbb
rcrl
jbe
pushl
add
sbb
nop
jmp
xor
mov
rcll
jb
sbb
push
call
fisttps
test
jecxz
xchg
clc
xchg
ret
or
or
loopne
outsl
fcmove
popf
sub
in
sbb
out
mov
jg
jmp
ret
cs
movsl
ljmp
jg
out
mov
test
test
enter
push
xchg
fwait
or
hlt
ljmp
decl
lret
shrl
hlt
into
xchg
mov
or
icebp
sub
mov
sti
or
outsb
xchg
int3
jbe
jbe
xor
decl
aam
daa
and
iret
jb
lahf
pop
mov
int
sbb
pop
add
inc
shr
sub
ljmp
test
jne
inc
push
sti
sbb
lcall
jg
ficompl
and
push
nop
mov
pop
aas
cli
mov
jg
enter
push
mov
testl
iret
mov
in
cmp
es
jmp
pop
inc
mov
pushf
imull
adc
cltd
push
pop
mov
sbb
and
shll
sub
dec
aaa
std
mov
cmpsb
xor
pop
in
aad
mov
sub
shll
call
pop
cmp
push
popf
push
aas
int3
clc
mov
push
mov
mov
xchg
sbb
mov
sbb
stos
addb
sub
ljmp
ret
xchg
mov
mov
and
rolb
rcl
cmp
popl
fisttps
sbb
into
int
fbld
cltd
mulb
push
xor
sub
mov
and
jg
mov
add
repnz
iret
pop
or
xor
in
cwtl
dec
xchg
leave
or
incl
outsb
push
popf
int3
mov
lret
std
mov
adc
inc
or
fildl
shrl
decl
xor
pop
mov
adc
jge
nop
mov
inc
cmp
pop
push
js
cmpsb
sar
call
cld
jl
adc
sbb
xchg
push
xchg
sub
repz
enter
sbb
cmp
inc
mov
pop
push
in
ret
incl
scas
jo
cltd
jl
or
or
arpl
mov
adc
sub
div
outsb
loopne
jns
fprem
ror
imul
pop
xor
std
add
jmp
inc
test
or
xor
test
in
test
arpl
es
push
cmp
jg
sbb
outsl
cmpsl
cli
mov
and
test
sbb
bnd
lahf
arpl
cld
mov
je
and
nop
push
mov
in
aad
das
arpl
shll
pushl
ret
cs
push
inc
outsb
in
add
pop
sbb
outsl
cwtl
mov
daa
xchg
xor
dec
jmp
sbb
push
xchg
scas
sarl
push
sbb
sar
aaa
cld
ja
in
filds
or
outsb
in
addr16
add
dec
mov
cmc
scas
xchg
outsl
xor
jmp
inc
pop
iret
ss
jns
pop
cmp
fadds
cmc
jg
loope
xor
stos
enter
mov
inc
std
mov
ljmp
sbb
sbb
movsb
out
int
adc
insb
mov
clc
imul
repz
push
mov
xor
in
mov
in
adc
push
dec
sti
and
lcall
jmp
push
dec
push
adc
mov
cmc
push
pop
cmp
rolw
aad
mov
cs
and
mov
cmpsl
mov
cmp
push
pop
inc
scas
cmp
sbb
cmp
pop
aaa
jo
jge
clc
mov
cmc
cmpsb
cmpsb
test
sub
pop
mov
adc
jg
pushl
aam
imull
flds
mov
jae
sti
aas
cltd
adc
pushl
clc
fbstp
lds
out
pop
cmpsb
add
shrl
decl
fsin
aad
mov
cwtl
sub
enter
sbb
xchg
adc
movsl
out
shlb
pushl
out
call
pop
je
fcomps
sti
pop
hlt
in
psllw
inc
push
pop
xchg
lds
faddl
jmp
jle
xchg
mov
std
decl
iret
jmp
arpl
test
push
jno
or
pusha
aad
decl
daa
cs
jo
jnp
loopne
mov
sub
std
faddl
or
mov
jg
jge
test
push
mov
pushf
dec
mov
roll
jne
bound
rol
pop
xlat
or
add
jle
loopne
les
jns
rol
push
mov
decb
arpl
jne
jnp
jns
orl
fdivrs
mulb
mov
or
inc
inc
ljmp
dec
repz
aas
negb
adc
or
xchg
mov
clc
sbb
outsl
insb
push
push
or
xchg
pop
mov
cmc
and
mov
fdivr
ljmp
stos
or
lret
movsl
ljmp
int3
int
mov
xor
and
call
imul
or
sahf
add
std
shrb
cmc
sbb
call
mov
pop
int3
dec
stos
sbb
mov
and
dec
jmp
pusha
or
push
mov
dec
sar
ljmp
ja
mov
xor
pop
add
ror
and
inc
das
leave
jecxz
ffree
pop
sbb
lcall
popf
mov
dec
pop
arpl
jne
pop
mov
shl
aad
xchg
pusha
dec
pushf
xor
xlat
dec
fwait
cld
mov
cwtl
or
dec
lock
and
jnp
js
out
push
jp
lock
insb
shl
call
mov
dec
xchg
movsb
jb
mov
mov
clc
insb
adc
push
std
call
imul
jnp
lods
lock
aam
icebp
inc
into
mov
loopne
call
test
or
push
pop
mov
out
sbb
jmp
das
xchg
int3
pushl
sub
and
or
jge
cld
out
fst
mov
loope
in
xor
sub
jmp
inc
cmp
push
std
jno
js
lahf
xor
aad
inc
sub
in
pop
in
ljmp
push
mov
jo
xor
outsb
xor
adc
insb
jns
out
test
in
ret
xor
dec
loope
in
push
jb
sub
xorb
or
rcr
sbb
imul
inc
out
and
in
je
jg
mov
mov
pushf
dec
aas
mov
xchg
dec
mov
rorl
jno
lock
pusha
in
pop
and
xor
push
or
or
outsb
and
mov
xor
decl
enter
test
jbe
adc
push
and
push
in
or
or
ret
add
jnp
fs
jg
xchg
mov
cmp
repz
mov
lea
pop
scas
mov
jmp
mov
aaa
xchg
or
add
shl
or
xchg
mov
std
mov
loop
aaa
scas
push
mov
mov
xor
jge
fstps
push
xor
push
xchg
dec
add
lret
sbb
js
jle
mov
es
ret
mov
loop
popa
fcomip
mov
scas
int3
mov
test
mov
jecxz
dec
dec
sbb
and
incl
jg
scas
mov
and
in
inc
cmpsl
cwtl
ja
mov
call
mov
xchg
adc
loop
fdivrl
adc
dec
xor
mov
pusha
inc
jmp
inc
push
int3
sbb
clc
push
pop
pop
mov
iret
cmp
xchg
xlat
mov
ljmp
testb
fcmovb
add
inc
sti
ja
pop
push
loope
sbb
mov
scas
hlt
popf
push
std
enter
test
mov
xor
pop
add
js
dec
pop
dec
lcall
cmp
inc
inc
mov
sub
negl
jecxz
push
push
popf
push
pop
pusha
sbb
incl
test
pop
cmp
mov
mov
out
out
sbb
clc
pushl
aam
push
pushf
jg
xchg
add
shlb
push
cmp
inc
cmpsb
int
fldenv
ljmp
jbe
popf
test
xor
bound
inc
ret
in
jns
sub
sub
insb
jle
cmc
push
push
insb
scas
scas
pop
repz
xchg
mov
adc
pop
decl
mov
jmp
mov
jnp
pop
movl
in
mov
incl
ss
rcrb
xor
push
inc
adc
xor
cmp
mov
or
pushl
cmpsb
cmpsl
mov
lahf
js
leave
or
scas
cmpsl
fimuls
jg
addb
mov
jb
out
adc
pusha
xlat
pushf
inc
jl
xor
popf
cli
movsb
pushl
rorl
rcrl
xchg
mov
fidivrl
les
xor
aaa
push
jnp
jmp
jb
xor
std
jg
mov
jbe
cmp
pushf
ljmp
push
sahf
pop
and
ret
or
call
or
mov
loop
out
and
lahf
call
xor
incl
test
icebp
stos
sahf
pusha
jge
or
dec
outsl
in
mov
xlat
stos
sti
shrl
pushl
hlt
xchg
xor
and
adc
adcb
add
xchg
sub
jmp
loop
lock
test
mov
je
dec
cmp
mov
outsl
mov
mov
lods
dec
add
mov
or
and
aad
insb
movsl
outsl
mov
out
lret
mov
lcall
loop
adc
das
in
or
aam
mov
call
and
pop
mov
adc
sbb
call
std
cmpsb
jp
pop
out
jp
cmc
sub
sbb
in
adc
fisubs
ret
je
outsl
pop
dec
scas
pop
cmpsb
inc
push
mov
rorb
into
loopne
xchg
cwtl
add
outsl
adc
mov
lcall
nop
ja
pop
daa
pusha
sbb
scas
xchg
cld
cmp
in
ss
lds
jl
push
stos
ljmp
sbb
hlt
movsb
xor
cld
rorb
mov
ds
imul
incl
jno
pop
inc
xor
pusha
adc
lea
xchg
stc
int
lahf
nop
popa
adc
adc
ret
xor
cli
call
cld
xchg
lea
inc
insl
loop
test
aaa
xor
cmp
loopne
dec
push
in
cmp
fsts
outsl
addr16
movsb
sbb
ret
add
sti
andb
mov
jl
inc
out
mov
or
decl
sbb
pusha
pop
jae
mov
dec
fwait
or
testl
dec
push
jp
std
into
aad
cmp
mov
shll
dec
into
lret
cmp
adc
sub
in
or
decl
mov
mov
sbb
testl
bound
aaa
dec
sbb
jl
movsl
mov
cmp
aas
inc
scas
insl
shlb
aam
xchg
mov
dec
fwait
pop
mov
mov
adc
push
sub
pop
subb
loopne
pop
inc
xorl
int
jg
pushl
sar
jecxz
push
push
in
adc
nop
sub
sbb
daa
cltd
jmp
mov
xorb
mov
repz
out
rcrb
ret
test
mov
test
cmp
sub
pop
fisubl
cmpsl
lock
inc
enter
xchg
mov
or
push
add
lret
pop
movsl
and
adc
dec
xchg
pop
in
cmpsb
insb
sub
add
mov
add
outsb
ljmp
mov
in
sahf
testl
pop
or
les
and
jae
sub
dec
xor
adc
lahf
jne
fdivl
push
lods
mov
add
mov
jmp
adcl
jmp
in
into
imul
bts
pushl
mov
es
repnz
xorl
call
push
mov
xchg
idivl
xor
lods
arpl
add
scas
jle
cmp
adc
out
bound
xchg
add
jae
sarb
cmpsl
andb
and
shl
loop
fdivrp
fdivl
sar
and
adc
clc
enter
xchg
lods
jb
pop
adc
nop
pop
pushf
lods
daa
or
outsb
xor
shll
mov
sub
pushf
je
mov
push
inc
jns
pop
movsl
sbb
ljmp
sti
sub
jl
addr16
sahf
dec
pmuludq
sbb
rcrb
jmp
jg
pusha
and
mov
not
dec
aaa
fidivrl
cli
xchg
add
lret
push
push
jnp
sahf
xor
add
dec
incb
cmp
clc
or
popa
sbb
fucomip
push
lret
loope
xchg
stos
ret
mov
nop
pop
in
clc
mov
pop
ja
fstl
jecxz
int
incl
pusha
dec
int3
pop
addb
les
shll
or
enter
push
subb
inc
lcall
mov
cmpsb
push
aas
inc
push
jmp
out
push
cli
call
call
cmp
ret
inc
stc
pop
push
add
pop
lock
lcall
std
push
xchg
sahf
inc
ficoms
jbe
cmp
push
outsb
sub
les
mov
or
loop
stos
std
lcall
cld
sbb
sbb
pop
xchg
dec
sar
imul
rorb
lcall
pop
int3
mov
dec
push
mov
shlb
cmp
inc
hlt
or
decl
scas
inc
sub
call
cli
mov
call
out
mov
mov
jno
std
sbb
inc
xchg
and
add
mov
mov
jo
pop
cmp
xchg
cwtl
fmulp
lods
adc
mov
mov
clc
std
add
call
push
push
lods
xchg
pop
push
push
sub
pop
test
mov
lcall
add
fadd
into
xchg
mov
mov
cmp
pushf
pop
pushf
lea
dec
jno
aas
or
iret
inc
lcall
push
xchg
push
push
mov
ud2
insl
mov
cmp
dec
adc
inc
inc
decl
lods
push
or
jb
add
pop
mov
jmp
es
incl
loop
or
mov
xor
cs
sbb
mov
cmpsb
cmc
adc
push
xor
mov
mov
int
xchg
sbb
push
aaa
or
aaa
pop
jo
and
inc
fnsaves
std
jmp
ss
xor
leave
push
cmp
push
out
mov
les
out
jp
loopne
movsl
loopne
hlt
stos
mov
cmp
loop
mov
or
sub
movsb
fistpl
sbb
push
dec
aam
ret
scas
pushl
test
hlt
pop
cwtl
rclb
pop
mov
adc
sahf
xor
cmpsb
incl
mov
ss
repnz
fstp
rcll
cmp
or
push
popa
fidivrs
dec
das
and
mov
filds
std
mov
lahf
cmpsb
pop
sbb
push
pusha
insb
pop
je
jecxz
in
jg
adc
into
or
cmp
out
fcoml
cmp
test
xchg
jl
fistpl
sbb
fs
adc
out
pop
pop
lcall
out
pushl
call
adc
popf
imulb
jp
and
xchg
xchg
dec
ljmp
mov
js
into
pop
fldenv
xchg
sti
sbb
and
decl
fsubr
arpl
cmc
jnp
pop
push
push
mov
int3
sub
sub
mov
dec
imul
data16
shl
mov
xchg
jle
int
rorb
pop
cmp
call
add
mov
or
int3
mov
andl
movsl
adcl
pop
mov
inc
pop
mov
sbb
sbb
add
lods
add
lcall
cmp
mov
mov
xchg
test
cmc
into
mov
outsl
call
lret
mov
cli
call
mov
pop
xor
or
sub
cmp
fdivs
push
mov
mov
pop
mov
xor
xchg
insl
rcrb
jge
mov
lock
lods
mov
mov
rcr
iret
imul
or
inc
adc
sti
dec
mov
jmp
inc
fsts
pop
into
movsb
lret
pop
jo
jns
daa
or
lcall
mov
clc
add
movsl
cli
pusha
dec
ss
cmc
mov
mov
lock
jnp
lods
inc
stos
ljmp
xchg
dec
mov
fstpl
cmpsl
or
clc
fs
lcall
or
addl
call
cmp
adc
cmpsb
sti
push
aaa
and
cmc
mov
int3
out
push
int
jmp
fcomip
stc
dec
rcrb
jb
dec
pop
insb
stos
pop
push
xlat
out
dec
push
notb
dec
fsubrl
incl
pop
mov
push
push
push
inc
popf
shrl
sbb
inc
popf
outsb
and
sar
int
inc
pop
popf
push
jo
and
dec
push
cltd
jo
scas
mov
lcall
dec
addl
int3
and
stc
out
and
dec
adc
and
adc
mov
mov
mov
cmpsl
jb
in
and
push
lret
iret
out
add
repnz
lcall
pushf
enter
jbe
lcall
andl
imul
jle
jmp
push
je
xor
call
jecxz
arpl
pop
sub
test
cmp
jmp
pop
lahf
outsb
imul
xor
jb
cmpsb
jmp
push
mov
jge
lcall
jnp
js
jl
mov
mov
dec
mov
mov
cmp
xor
lcall
dec
jo
aaa
addr16
jns
mov
pop
in
jecxz
movsb
int3
push
xchg
mov
push
cli
decl
push
pop
inc
je
add
loop
test
sbb
cmp
test
dec
testl
out
mov
sub
nop
jge
push
add
mov
mov
mov
and
cltd
pushl
push
mov
jno
xchg
shrl
and
push
testl
flds
cmp
imul
push
jmp
stos
jg
in
adc
out
and
sbb
push
popa
pusha
add
xchg
or
mov
aaa
adcb
movups
jle
push
imul
or
mov
and
push
jle
mov
pop
and
pop
sub
sahf
icebp
inc
xor
sbbl
lods
out
fisubs
fcomi
fs
enter
cmc
dec
mov
shl
jnp
lret
and
adc
incl
dec
pushf
fwait
inc
loope
pop
shll
ja
adc
stc
cmc
inc
stos
movsb
pop
and
fstp
and
out
clc
xor
test
inc
in
fwait
loope
int
mov
push
ljmp
cmc
incl
jns
or
les
dec
fstl
sbb
or
in
lret
ud0
decl
testb
push
daa
push
imull
mov
dec
xchg
mov
lret
call
cmp
loop
dec
dec
icebp
sahf
and
imul
add
xchg
ret
jmp
enter
jmp
sub
and
jle
aaa
fs
cs
repz
icebp
mov
mov
lock
xchg
jle
mov
out
pop
push
jecxz
out
mov
sbbb
in
dec
and
mov
jp
mov
clc
out
test
outsl
cltd
add
xchg
testl
insb
jg
adc
ret
jmp
test
lcall
inc
mov
cmp
ljmp
or
push
xchg
cwtl
in
add
cmpb
fidivs
aad
jmp
jmp
rorb
fsubl
or
in
outsb
loopne
cmp
sti
xchg
sub
dec
fisubrl
ja
leave
outsl
mov
jns
cld
cmp
or
jo
push
pop
daa
data16
cmc
das
xor
mov
and
sbb
call
popa
lcall
adc
pop
ret
mov
xor
adc
movsb
jmp
fsub
movsb
ljmp
adc
in
and
std
ljmp
cmpb
enter
add
inc
shll
cmp
test
int3
or
xor
out
pusha
test
and
das
call
dec
cld
or
ljmp
jns
cli
xlat
test
in
dec
lahf
sub
jecxz
jp
rcrl
dec
push
cmc
xor
popl
daa
push
cld
mov
shr
push
test
stc
inc
enter
test
data16
lcall
es
enter
pop
mov
leave
stc
ret
push
mov
jl
hlt
jmp
fldenv
xlat
ret
bound
repz
lcall
pushf
or
pop
xchg
movsl
push
inc
imul
xchg
aaa
jns
cli
lahf
add
lret
decl
sbb
pop
in
xchg
mov
cld
mov
adc
jmp
mov
pop
in
mov
mov
xor
rolb
push
sub
jg
into
cli
shufps
mov
mov
cmpsl
xchg
addr16
jno
test
data16
sbb
divb
jg
mov
push
shl
hlt
xor
mov
insb
pop
stos
mov
icebp
sub
incl
cmp
adcb
or
jbe
jne
push
pushl
xor
xchg
aas
mov
mov
clc
adc
mov
mov
xchg
call
stos
mov
imul
adc
sbbl
or
xor
movl
or
shll
sub
outsb
xlat
das
or
jmp
push
aaa
aam
pusha
xchg
jmp
shlb
mov
leave
ret
mov
push
lahf
dec
neg
out
jp
stos
mov
pop
ficomps
mov
lock
stos
aad
jbe
scas
xchg
cmp
cmp
jnp
aam
push
ljmp
pushl
scas
jp
push
mov
call
addr16
jo
fld
push
mov
call
nop
lods
arpl
jle
fs
in
jno
orl
das
sbb
sti
ljmp
in
xor
fdivl
sbb
xchg
adc
mov
sbb
sub
cmp
lcall
mov
stc
dec
sub
fs
push
adc
push
push
repnz
cmp
pushl
or
sbb
xor
data16
push
sub
dec
push
stos
out
mov
push
insb
cmpsb
incl
dec
insb
ds
daa
es
pusha
xchg
scas
fimuls
inc
cmp
and
jg
arpl
inc
scas
leave
into
stc
pop
mov
mov
mov
test
fmul
ljmp
pop
nopl
mov
test
jmp
dec
nop
inc
aas
and
lret
ljmp
and
mov
adc
mov
pop
les
mov
sbb
sub
mov
adc
popf
psrlw
or
push
call
ja
orb
dec
subb
mov
or
and
mov
adc
jae
fnsave
pushl
addl
xchg
mov
mov
mov
aad
stc
fwait
adc
pushl
inc
xchg
pop
std
xchg
aaa
lret
xor
int3
jnp
jo
xchg
xor
loop
sbb
jge
mov
sbb
ds
adc
push
fiadds
test
add
pop
int
lret
stc
loopne
fldl
out
jne
mov
and
scas
pop
pop
packsswb
popf
cmp
mov
pop
cmp
push
imulb
cli
nop
movsl
mov
mov
cmp
mov
das
mov
xchg
push
mov
jp
incl
dec
insb
jp
hlt
jo
addr16
hlt
mov
popa
adc
mov
nop
xor
cwtl
sahf
mov
clc
mulb
jns
mov
cli
mov
or
pop
xchg
adcl
jp
pop
mov
in
push
mov
sub
sbb
xor
std
mov
jg
je
into
hlt
and
mov
in
dec
jmp
loopne
xchg
jae
inc
cld
xchg
mulb
dec
add
mov
in
pop
filds
push
fs
fs
xchg
push
add
icebp
ret
test
outsl
insl
call
cmp
sub
jp
jnp
addb
scas
mov
ljmp
movsb
addr16
ret
gs
ljmp
fcompl
divl
xchg
mov
lcall
lds
push
sub
push
push
iret
inc
lret
test
cmpsl
sub
not
ud0
ja
in
mov
mov
or
sub
loope
inc
in
push
and
call
add
push
pop
xchg
iret
int3
cmp
out
pusha
nop
jns
xchg
cli
dec
fwait
sub
or
cmp
mov
lcall
mov
fimull
ljmp
mov
jns
pop
xchg
mov
insl
call
push
imul
jp
sub
jmp
and
dec
lds
mov
pushf
mov
icebp
movsl
jge
call
movb
std
jg
xchg
enter
andl
nop
sti
dec
sub
inc
adc
lcall
pop
add
ljmp
ljmp
ljmp
mov
mov
inc
pusha
jmp
jae
xor
pop
sahf
std
dec
leave
fnstsw
xchg
lret
fsubrl
repnz
mov
test
jbe
jnp
dec
js
js
call
int
lcall
mov
and
xchg
adc
cld
sub
jp
jno
decl
mov
aaa
lds
nop
cld
push
mov
out
sbb
mov
ja
sub
jg
das
or
jbe
cltd
mov
mov
xor
xacquire
adc
fcomip
jmp
push
scas
jns
mov
pushf
jge
std
int
fcomps
cli
cmp
in
int3
mov
or
mov
lea
inc
fs
cld
fisttps
and
cmp
mov
jmp
call
push
orb
mov
xor
jl
sbb
pop
push
jl
loop
dec
shlb
xor
sub
add
test
xchg
cmpsb
xchg
popa
gs
out
xchg
ficomps
or
sahf
sub
scas
push
jno
adcb
ljmp
decl
scas
cwtl
bnd
enter
inc
xor
mov
sub
lods
cmp
leave
mov
in
and
dec
xchg
pusha
int
push
incl
daa
lahf
lahf
or
outsb
sahf
push
sbb
cmp
into
jecxz
out
sahf
xor
and
test
fsubp
pop
ds
jne
mov
xchg
xchg
inc
push
in
andb
jge
daa
in
stc
rcrl
cmpsl
rorb
movsb
cmpsb
mov
or
push
cld
bound
jo
lods
lcall
or
mov
push
mov
mov
test
in
das
mov
adcl
sbb
aaa
movsbl
jecxz
jae
dec
popf
js
test
cmp
lcall
adc
fcomi
mov
jmp
enter
stc
stc
and
push
add
repnz
bound
pop
mov
push
mov
inc
xchg
mov
leave
sbb
add
ret
je
jmp
or
inc
std
out
fdivrs
les
mov
pushf
xchg
cmp
jmp
cmp
or
loopne
cmp
inc
clc
jmp
data16
sahf
inc
cmp
cltd
fmuls
jp
jle
mov
jns
and
lea
mov
add
mov
ficomps
cld
in
push
dec
andb
mov
sbb
inc
imul
imul
fnsave
sarl
aam
dec
mov
xchg
mov
addr16
push
sbb
incl
dec
push
pop
sbb
inc
add
inc
ffree
xlat
xchg
insb
sbb
bound
int3
push
mov
ljmp
call
xor
outsl
movsl
push
pop
add
ljmp
cmp
dec
lret
sbb
mov
adc
lcall
inc
les
hlt
pushl
jne
xlat
leave
mov
movsl
xchg
pop
add
cmp
or
mov
and
xchg
lods
mov
les
inc
and
into
add
jno
sbb
and
data16
adc
jg
jmp
js
fldenv
pop
mov
xor
int3
push
call
xor
sbb
xchg
mov
sub
sti
adc
inc
insb
dec
cltd
dec
jns
jbe
push
frstor
add
cmp
sbb
frstor
pop
cmp
and
aas
mov
adc
imul
ljmp
pop
cwtl
cmpsb
push
inc
movntq
out
push
add
ljmp
sub
out
in
cmpsl
mov
jle
jmp
cmovge
cli
xchg
add
mov
mov
jmp
lods
inc
adc
xchg
pop
fldt
or
and
pop
test
mov
incb
push
sbb
add
dec
push
shl
cmp
pop
aas
loop
lods
das
jns
xlat
xor
or
sub
mov
adc
sub
in
js
movb
mov
pushl
ret
push
cld
dec
inc
jno
mov
aaa
sub
inc
lret
popf
aaa
mov
loope
incl
mov
add
loopne
and
stc
inc
fcomps
mov
fstl
ljmp
cli
call
aas
pop
subl
pop
sbb
mov
imul
loopne
jmp
push
arpl
mov
outsb
jmp
jno
sbb
pop
call
hlt
int3
loop
inc
sbb
jle
cmp
push
sti
push
lahf
movsl
mov
lcall
push
mov
test
mov
mov
push
sbb
insl
mov
ja
inc
ljmp
cmp
adc
sbb
xor
xor
jg
push
rcl
scas
call
dec
cmp
mov
cs
jmp
std
mov
add
test
push
scas
in
sar
mov
into
mov
cmp
repnz
mov
jg
test
jnp
notl
sub
mov
dec
jle
idivb
push
xchg
orl
jmp
sbb
imul
inc
push
xor
ds
pop
scas
mov
pop
incl
icebp
rorb
aaa
push
incl
test
std
sbb
stos
aad
ljmp
inc
cmp
xor
fisubl
pop
pop
icebp
mov
mov
pop
adc
inc
incl
lret
lcall
dec
cmp
imul
mov
dec
std
mov
data16
fcompl
pop
pushl
mov
push
and
iret
call
add
jnp
sub
rcll
mov
jmp
outsl
xor
pop
push
pop
xor
xor
mov
pop
xchg
aaa
mov
push
bound
stc
outsb
mov
repz
jmp
xor
bound
sbb
sub
xor
in
stos
xor
mov
sub
add
bound
jmp
adc
xchg
sahf
imul
mov
adc
pop
loopne
aam
pop
and
dec
movsb
fisubrs
mov
dec
gs
add
call
insb
repz
xor
push
je
andb
in
mov
mov
adc
pop
roll
mov
xchg
cmpsl
ja
cli
pushl
call
inc
xor
pop
mov
push
outsl
xchg
xor
xor
xor
jmp
loopne
mov
inc
ret
pop
pop
outsl
in
xor
add
cwtl
ds
imul
ljmp
cmpl
andb
pusha
fwait
cmovbe
xor
in
mov
fistps
icebp
in
fucomip
jb
and
push
sahf
icebp
pop
cmp
xlat
cmp
or
mov
incl
ljmp
cmc
sbb
loop
cmp
mov
cld
ds
sub
jp
lcall
push
lahf
jo
imul
loopne
imul
ss
xor
mov
adc
nop
cltd
mov
and
out
sahf
sbb
jp
sbb
jo,pn
lcall
push
and
jno
lret
xor
mov
mov
cmpsb
call
in
mov
cli
out
xor
dec
outsb
js
out
roll
es
decl
xchg
fsubr
pop
mov
sub
push
movsb
xchg
ficompl
mulb
push
sti
into
cmp
fs
lods
arpl
push
push
jno
int3
adc
outsl
js
pop
imul
incl
iret
xor
push
test
xor
hlt
jno
mov
out
sub
cli
dec
cltd
enter
push
add
jle
clc
pop
cmp
add
stos
and
call
sub
push
ss
mov
das
dec
ljmp
test
cmp
pushl
and
and
jno
dec
movsl
fsts
jl
out
jmp
fiaddl
shrb
jmp
dec
xor
inc
call
adc
lods
in
jo
fldenv
lret
out
and
stc
pusha
cli
fidivrs
mov
mov
cmpsb
xchg
sbb
call
imull
jle
xor
out
sbb
sbb
pusha
cs
mov
insb
ret
xchg
lock
sub
call
outsl
or
pusha
cmp
adc
pop
and
adc
jecxz
into
push
mov
lds
les
cli
mov
inc
jecxz
jmp
ror
movsl
fwait
adc
jp
mov
ljmp
clc
jbe
jp
add
nop
call
sub
push
pop
decl
js
add
in
aas
imul
fnsave
add
incl
lods
stos
cmp
fmulp
xchg
mov
aaa
insl
dec
fsubl
push
push
add
xor
mov
in
mov
jg,pn
jo
stos
jecxz
xor
fs
in
mov
out
mov
sbb
and
pusha
mov
and
push
add
mov
lret
insl
test
pop
dec
xchg
fs
enter
jge
ds
cmp
lcall
insb
dec
pop
sti
cmp
xor
push
insb
dec
scas
sbb
pop
dec
iret
stc
inc
imul
stc
aas
loop
push
inc
inc
and
dec
inc
insl
pop
fisubl
popf
pop
lods
inc
or
xor
decl
repnz
dec
jbe
pusha
sub
call
pushf
dec
xlat
pushf
outsb
in
jo
jg
push
jecxz
int
imulb
test
pop
mov
mov
add
cmp
clc
sub
xchg
xchg
xchg
and
push
fsubs
inc
fs
pushl
std
cwtl
dec
mov
fsubl
lea
repnz
stos
stos
lcall
aas
jbe
push
iret
std
jecxz
shrb
repnz
sar
test
cmc
loope
decl
lret
mov
es
js
jae
cmc
xor
lods
sub
arpl
ljmp
inc
or
add
sub
mov
push
in
inc
mov
ljmp
aas
dec
sbb
enter
pop
adc
xor
inc
push
pushf
xchg
dec
xchg
xchg
mov
cmp
fisttpll
push
and
cltd
mov
mov
pop
adc
jp
das
cli
fisttpl
les
hlt
xchg
stos
test
sub
cwtl
push
push
ljmp
ljmp
or
push
rorl
jg
lcall
xor
lret
in
dec
lock
fimull
and
sarl
mov
test
icebp
inc
dec
adc
and
popa
sub
push
lock
jne
test
mov
divb
jbe
aad
mov
mov
sub
lcall
ljmp
xchg
mov
shlb
dec
aam
mov
mov
adc
inc
sub
aas
add
jae
lea
sub
mov
inc
sub
popl
mov
clc
decl
sbb
sub
pop
addb
mov
pop
out
ljmp
xor
ret
add
rolb
or
push
xchg
decl
jg
mov
insl
jecxz
push
adc
imull
xchg
xor
arpl
loopne
add
fcom
adc
push
or
cmpsb
cmpsb
xor
adc
sahf
negb
incl
lcall
mov
lea
rol
call
cltd
out
dec
fcomip
in
add
fsts
inc
jbe
in
add
xchg
inc
inc
repz
push
fcmovne
lock
pop
cld
sbb
pusha
sub
cmp
fidivrs
push
adc
add
enter
incl
cmc
imul
mov
xchg
pop
pop
jno
xchg
mov
out
fisttps
inc
ljmp
test
mov
fcmovb
fwait
or
cmp
cld
cwtl
mov
out
aam
mov
sub
push
mov
mov
sbb
mov
pop
hlt
jns
sub
cmp
shll
fwait
pop
lea
cmpsb
adc
cmp
sub
pop
mov
pushl
rcrl
icebp
xchg
xor
repz
out
lock
mov
inc
mov
out
les
outsl
rcl
xor
mov
xor
data16
xchg
inc
sbb
cmc
cs
enter
push
mov
popf
dec
cmpsb
xchg
add
cs
mov
push
cmpsb
xor
stos
and
jg
xchg
outsl
push
sbb
xchg
call
dec
or
cmp
incb
adc
add
mov
or
lret
sarl
lcall
pop
mov
call
sbb
std
xchg
sub
jb
add
pop
cld
cmp
pushl
lods
idivl
mov
insl
jnp
push
loope
fidivrs
dec
mov
pop
jp
cmp
stc
fbld
lret
and
aam
rol
sahf
dec
sbb
xchg
add
adc
cmp
call
cmpsb
push
push
adc
lahf
inc
push
jno
jne
jle,pt
mov
push
in
repz
xchg
popf
mov
decb
mov
inc
cmp
cmp
jecxz
mov
jnp
iret
filds
cmpsl
outsb
ja
and
sbbl
cmp
mov
fbstp
cmc
cmpsb
in
nop
inc
xchg
ds
mov
or
test
cmp
call
sub
pushf
jcxz
loop
sti
je,pt
in
cwtl
aad
push
enter
dec
das
repnz
or
mov
incl
add
inc
outsb
ficoms
pusha
push
out
push
cld
sbb
mov
fsubl
fstpt
fstl
add
divl
clc
test
das
push
loope
cmp
mov
testb
xchg
mov
nop
rcrl
add
jle
pushf
sbb
cmpsl
js
adc
hlt
sar
jne
or
push
cwtl
xchg
jmp
ljmp
pop
or
aaa
movsl
fiaddl
iret
adc
and
js
in
jmp
addr16
inc
sti
pop
call
test
sub
dec
or
sub
dec
sahf
popf
ret
in
cmp
add
filds
int3
mov
sbb
pop
sbb
xor
call
cld
push
push
xchg
and
pop
das
mov
xchg
int
pop
lahf
xchg
enter
decl
ljmp
sbb
cmc
mov
cmp
mov
test
jmp
push
inc
mov
inc
ret
out
in
lea
imulb
jb
jno
ljmp
dec
fld
mov
mov
cltd
mov
test
sbb
xor
lret
scas
scas
xor
jo
lahf
fsubrl
or
ljmp
aam
outsb
fwait
push
and
iret
fisubs
add
jb
dec
repz
lret
cmp
incl
pop
bound
aaa
shll
popa
lret
rcl
cmpsb
fldenv
lods
xchg
fsubrp
stc
rclb
call
mov
nop
inc
xor
mov
sbb
pop
testl
mov
lds
sarb
roll
and
jmp
aaa
sub
jmp
xchg
adc
sbb
cmp
incl
xor
mov
adc
mov
mov
and
int3
sub
pop
push
or
mov
jbe
inc
test
jno
insl
pop
add
and
push
frstor
out
inc
adc
hlt
jl
sub
xchg
sub
outsl
xchg
je
and
fistpll
fstl
mov
jmp
movsl
xchg
cmp
rcrb
push
aaa
dec
pop
std
jns
imul
push
fcomps
nop
inc
adc
imulb
push
xchg
test
sbb
or
fwait
xor
cmc
xadd
dec
push
sub
icebp
stc
mov
adc
push
incl
lahf
stc
and
ret
mov
leave
pusha
adc
cltd
cwtl
inc
test
test
dec
call
fucom
ret
mov
inc
stos
dec
sbb
pop
imul
pop
or
iret
stos
lahf
and
dec
and
ljmp
popa
sbb
push
pop
popf
or
cmpl
cmc
andl
jmp
xchg
aad
push
pop
push
pop
mov
out
std
ss
xor
aam
push
cld
or
std
stc
sub
scas
mov
add
and
pusha
je
jl
fstl
cmp
sti
jp
shlb
sub
cmpsl
sub
mov
pop
push
cmc
fcomip
scas
push
lock
out
dec
jl
cltd
pusha
mov
icebp
jmp
xchg
popf
xchg
jmp
sti
xchg
inc
mov
or
lea
push
push
lock
sbb
lcall
or
sbb
mov
lods
inc
xchg
dec
divl
aad
les
jg
lcall
dec
xchg
xchg
pop
clc
mov
push
ss
mov
enter
or
cmc
cmp
adc
sti
in
movsb
out
mov
and
aam
pop
mov
push
ljmp
push
nop
sbb
xchg
bound
sbb
sub
mov
ljmp
sub
out
xchg
xor
or
pop
pop
enter
xchg
and
shrb
hlt
cmp
inc
adc
add
and
mov
outsb
stc
shlb
xchg
lret
jg
or
xchg
daa
mov
jg
cmpsb
cmp
inc
pop
and
std
sbb
incl
ds
stos
lods
cmp
xchg
fcoms
iret
fadd
movsl
int
sar
std
mov
ret
fildl
lcall
cmp
sub
pop
xchg
inc
ret
stos
ret
enter
ss
lods
sub
andl
cmc
jmp
frstpm(287
sub
mov
sahf
jl
jl
rorl
add
clc
sbb
test
jmp
mov
mov
gs
inc
xchg
add
xchg
sbb
mov
call
and
dec
xchg
mov
mov
sub
scas
cld
xor
pop
stos
fdivrp
pop
cmc
lcall
sbb
aas
inc
or
xchg
mov
mov
adc
incl
inc
int
jmp
ret
adc
xchg
jp,pt
mov
dec
and
fs
cmp
push
repnz
or
incl
sub
mov
adc
out
sub
daa
dec
pop
mov
sbb
lds
outsl
push
hlt
call
push
jl
int
hlt
cmp
sbb
inc
call
roll
ljmp
mov
decl
hlt
jbe
imul
xchg
cmp
or
das
popa
je
or
loopne
or
mov
pop
cmpsb
inc
cmpsl
decl
mov
jmp
inc
loop
mov
mov
insb
cli
pushl
xchg
jnp
ret
jecxz
sub
aas
or
or
ret
call
dec
in
fisubrs
push
add
pop
mov
mov
sub
xchg
xchg
mov
xor
ljmp
cli
jnp
push
test
lods
sub
fs
push
adc
lahf
addb
inc
mov
inc
cmp
ficoms
xor
sbb
inc
leave
and
add
add
pop
adc
mov
push
sbb
xchg
outsb
add
or
mov
shrl
call
mov
jno
push
mov
cld
mov
xor
pop
sub
push
sbb
ljmp
aas
jb
hlt
push
push
push
std
adc
cmp
movsl
fisttpll
sbb
ljmp
mov
mov
in
xchg
mov
and
add
adc
cmp
xchg
ror
repnz
mov
lcall
xchg
incl
imul
jg
stos
std
dec
fdivrl
push
and
mov
jo
adc
mov
sbb
out
sbb
icebp
cmc
pop
jle
call
lahf
mov
jbe
ljmp
cmp
jecxz
dec
cmp
fimull
dec
ja
and
fmul
ret
sbb
jno
xchg
xchg
es
mov
push
push
lea
mov
in
incl
hlt
or
dec
es
pop
ds
mov
fnstenv
into
fdivrs
lcall
xchg
ljmp
ss
adc
jno
jne
mov
xchg
xchg
adc
pushl
xchg
inc
inc
mov
je
pop
rcrl
cmpsb
mov
and
out
loope
fnsave
and
repnz
mov
enter
lock
repnz
loope
in
lea
push
clc
call
scas
jo
pop
xor
pop
stc
push
das
pop
rcll
mov
ljmp
fcmovb
mov
enter
out
fstpl
les
mov
cmpl
jns
cwtl
insb
mov
cwtl
imul
or
test
xchg
push
xchg
in
mov
scas
mov
mov
in
mov
push
lret
dec
xchg
jnp
sub
xor
decb
jmp
ret
xor
and
aam
cltd
xor
mov
sbb
sbb
cmp
outsb
mov
leave
push
cmp
mov
fwait
mov
pop
in
cmpsb
xor
fldcw
or
sbb
inc
pop
jb
jg
lods
popf
mov
rcll
sub
xor
inc
mov
imull
mov
and
int3
cld
mov
mov
mov
xor
arpl
sbbb
ret
call
in
dec
sarl
cli
adc
jnp
adc
mov
ficoml
lods
lcall
xchg
inc
sbb
xlat
rcrb
ss
mov
cli
fisttpll
test
loop
jg
arpl
adc
rcr
cmp
decl
cs
lea
popa
mov
or
jne
mov
test
mov
push
jecxz
fidivl
jmp
scas
aad
imul
pop
jo
movb
inc
inc
stc
mov
push
and
lods
fcomps
bound
push
sbb
shlb
incl
jp
jg
clc
andl
stos
je
adcl
add
ds
mov
inc
pop
pushf
mov
sahf
fisttpl
test
push
add
mov
bnd
loope
adc
mov
add
lret
les
dec
adc
ret
add
pop
xchg
pop
clc
insb
insl
mov
push
mov
ds
or
gs
faddl
push
add
add
cmc
ret
and
add
cmp
xlat
add
adc
movsb
pusha
xchg
xchg
or
xor
and
pushf
por
or
pop
add
insl
and
lods
sti
xor
sub
jg
sub
pop
sbb
cs
imul
adc
sbbb
idiv
icebp
xor
push
stos
adc
dec
mov
and
loopne
xchg
cs
les
or
push
push
jmp
stos
dec
mov
dec
mov
sub
pop
ljmp
xor
or
xor
mov
add
ds
mov
add
outsb
leave
pop
mov
mov
stc
stc
clc
sub
pop
and
add
lods
xchg
push
push
ljmp
xor
cmpb
push
cmp
inc
sub
les
add
sbb
fisttps
cmp
and
int3
mov
addl
call
popa
adc
fs
inc
pop
mov
jle
js,pn
rcll
fs
dec
loop
inc
cwtl
imul
neg
shrl
add
push
stc
push
cwtl
jmp
mov
js
movsb
clc
mov
push
adc
hlt
jge
pop
fucomp
lcall
push
cmp
sub
or
mov
decl
aas
sahf
add
cmp
jle
les
out
mov
popf
add
mov
out
mov
jg
fs
push
std
mov
add
add
mov
bound
ss
push
add
lret
scas
xchg
or
jp
mov
jle
sbb
or
ss
fildll
add
lds
mov
hlt
push
insl
and
push
lock
pop
mov
stos
loopne
mov
xchg
or
aam
cmp
dec
shlb
lret
mov
pop
addl
movups
hlt
mov
mov
out
out
adc
jg
sub
ret
leave
ljmp
adc
std
dec
mov
jmp
mov
jbe
lret
enter
push
into
test
xor
cld
outsl
ljmp
sbb
stos
push
adc
cmp
mov
and
xchg
int3
lret
call
xor
inc
out
dec
and
ljmp
push
xor
cmpb
mov
cmp
pushf
jmp
mov
add
and
pusha
and
cmc
pop
or
fcmovbe
das
rcl
jp
hlt
je
pushf
mov
mov
decl
addb
sbb
mov
adc
mov
add
sbb
ret
and
incl
cwtl
add
lcall
inc
mov
lret
mov
idiv
ljmp
adc
test
insl
sbbb
cwtl
jnp
sbb
push
dec
stos
std
sbb
and
sub
mov
enter
mov
jns
mov
jecxz
mov
add
lcall
popa
add
push
adc
and
inc
xchg
push
adc
adc
or
push
sub
lock
jbe
ja
cmpsb
mov
jp
jns
cmpb
xchg
and
cmc
mov
mov
fs
mov
faddl
stc
mov
loopne
push
and
cmpsb
mov
pusha
test
push
add
add
test
movsb
push
and
sarb
lcall
or
or
lods
mov
and
sbb
fcompl
inc
push
jle
or
stos
and
cmp
popa
fmuls
mov
or
cld
mov
cmp
add
mov
js
test
jbe
jmp
jno
mov
push
repnz
jns
inc
pop
xor
mov
jge
inc
sub
fwait
or
add
lods
inc
cmp
enter
inc
cmp
xor
loop
adc
pop
or
shll
rorb
movsb
decb
ret
mov
xor
fs
mov
cmp
outsl
mov
mov
and
xchg
cmpsl
add
rorb
lock
popf
or
xor
sub
dec
xor
jmp
cmpsb
les
xchg
pop
sbb
jg
stos
or
call
jle
lret
or
mov
mov
add
fsubs
rorl
les
jg
mov
push
dec
add
loop
cli
sbbl
cwtl
dec
and
outsl
mov
and
andb
cli
imul
push
push
pop
ss
enter
lcall
sar
mov
xchg
xchg
leave
mov
fadd
aam
popw
ret
mov
mov
fiadds
inc
push
incl
push
call
ljmp
into
fsts
hlt
push
sub
and
dec
orb
mov
cs
ret
sub
mov
jb
loopne
pop
sbb
push
rcr
lcall
mov
repnz
mov
ljmp
icebp
imul
inc
rcrb
jnp
mov
notrack
dec
dec
aas
sbb
jg
push
ret
sahf
es
jbe
sarb
out
cwtl
pushf
or
ja
sbb
pop
mov
repz
in
ret
repnz
cmp
pop
lds
ret
cmp
sbb
cmpsb
dec
xor
fcoms
mov
int3
gs
add
in
cltd
sbb
pushf
xchg
mov
push
xor
pop
adc
cmpb
lret
xor
out
pop
adc
aam
mov
scas
adc
scas
adc
dec
cmp
in
pop
fadd
scas
fildl
cmc
adc
call
mov
cli
out
clc
cmpsl
movsl
or
test
mov
stos
in
shlb
pushf
stos
les
testb
mov
cmpsb
test
xchg
xchg
adc
mov
mov
sbb
subb
mov
mov
push
sub
pop
aad
jo
push
pop
xor
mov
inc
push
out
lods
sbbl
in
and
sysenter
cmpsb
dec
les
xorl
xlat
mov
mov
adc
inc
xor
nop
cmp
scas
cli
push
jg
test
push
cmp
mov
push
test
or
icebp
scas
push
into
and
xchg
in
lock
inc
out
mov
sbb
push
and
int3
test
xor
jle
or
or
sub
scas
xchg
gs
push
shl
pusha
inc
aas
ljmp
repz
decl
sbb
sbbb
imul
sti
dec
and
jecxz
mov
nop
adcl
sbb
mov
mov
and
lret
sub
mov
pop
sub
or
sub
cmp
adc
fdivrs
mov
push
das
cli
pop
aam
aad
test
sub
jle
mov
push
std
dec
jmp
test
lds
insb
lahf
xchg
clc
sarl
mov
in
adc
les
movsb
int
adc
fisubrl
enter
jecxz
cmpl
pop
mov
test
jl
mov
add
hlt
push
adc
push
sub
aad
jg
lods
test
inc
sub
je
call
loopne
daa
adc
imulb
jne
adc
mov
out
testl
sbb
add
aad
ljmp
fdivr
cld
outsl
js
mov
xchg
testb
mov
sub
ljmp
mov
add
nop
stos
andl
adc
mov
cmp
or
sub
push
inc
cld
mov
pop
addl
and
fildll
add
xor
sbb
stc
out
nop
sbb
call
xchg
mov
clc
and
sub
pushf
inc
sub
ss
scas
adc
add
loop
stos
inc
iret
lret
incl
outsl
ds
inc
xchg
icebp
push
out
sbb
dec
cld
add
pop
into
sti
iret
cmp
cmp
sub
pop
sbb
jbe
scas
add
cld
fwait
pop
std
imul
and
add
xchg
pop
inc
lds
pop
shlb
cmp
enter
ljmp
repnz
dec
popa
jb
jnp
sbb
test
inc
and
and
and
mov
and
dec
add
and
push
xor
test
and
dec
fimull
mov
pop
mov
data16
pop
lock
mov
add
cmpsb
lods
sbb
inc
jb
outsl
jg
out
dec
add
inc
inc
push
movsl
stc
scas
imul
idivl
xchg
lea
xor
or
fiadds
mov
and
bound
aaa
and
or
inc
pushl
movsl
dec
xchg
out
ja
add
sbb
lock
pop
movsl
cmp
mov
fidivl
sub
jmp
leave
sahf
int3
mov
adc
jne
cmp
fwait
std
pop
dec
mov
les
push
pushf
fsub
inc
addb
out
scas
xchg
rclb
xchg
lods
pop
sub
push
and
outsl
sbb
ss
mov
mov
sahf
cld
scas
sbb
push
and
stc
mov
insl
mov
insb
push
mov
fwait
adc
lock
pop
push
mov
mov
dec
scas
mov
ret
lcall
test
out
inc
pop
cli
pusha
enter
jmp
cld
ljmp
jne
imul
xchg
ds
or
pop
stos
push
xor
or
stos
xchg
and
sub
and
rorb
push
mov
cmpl
dec
inc
test
insl
leave
cmc
mov
sub
xchg
xchg
roll
and
lock
adc
sub
and
sbb
fisttpll
ss
sbb
mov
xchg
sbbb
sub
aaa
loope
incb
jmp
in
lret
or
xchg
js
mov
addl
scas
ficomps
stos
mov
fbstp
shlb
jecxz
aas
mov
jno
adc
lret
push
ljmp
jne
mov
adcl
fisttpl
pop
sbb
pusha
add
cltd
pop
sbb
and
mov
mov
or
push
popa
jnp
pop
sar
outsl
jbe
inc
roll
and
dec
mov
mov
and
pop
mov
push
push
add
mov
or
mov
add
push
inc
rcll
pop
call
in
push
mov
inc
addb
insb
push
jge
repz
mov
enter
call
ret
imull
andb
xor
out
test
icebp
sbb
lcall
fists
fwait
mov
pop
jge
and
call
icebp
test
sub
in
dec
mov
es
fwait
addb
jo
out
add
cmp
test
jbe
aas
movsb
into
call
add
ss
pushl
pop
aad
loop
add
pop
sbb
call
add
adc
and
pusha
jmp
subb
lret
insb
popa
mov
lret
xchg
jmp
push
push
imul
inc
sub
add
sarb
jo
clc
out
inc
shrl
call
gs
mov
mov
arpl
popf
sub
or
inc
insl
adc
adcl
push
adc
mov
lods
jmp
cmp
mov
aas
das
test
fcmovbe
clc
loopne
outsl
pop
cli
xchg
insb
lret
lods
dec
mov
and
rol
or
jb
pop
lea
dec
inc
add
int
push
sub
pop
test
sub
iret
sbb
push
clc
inc
push
ret
push
ret
sti
fistps
ljmp
xorb
and
pop
pop
fwait
mov
out
mov
iret
sbb
js
inc
add
bound
add
movsb
pop
imul
mov
add
pop
dec
fwait
mov
movsb
dec
push
mov
call
stos
or
mov
enter
test
std
fildl
add
dec
xor
mov
cmp
push
xor
call
push
inc
sub
stos
xchg
mov
pop
cltd
es
add
jno
shl
cmpsb
flds
in
rcrl
cli
push
ljmp
pop
dec
mov
pop
mov
roll
lret
cmp
pop
enter
sbb
ret
or
pop
stos
inc
les
inc
xchg
jo
jnp
fcomps
mov
int3
mov
xor
adc
arpl
mov
repnz
dec
mov
incl
dec
dec
sbbl
arpl
insl
jp
les
mov
dec
out
lock
jno
adc
ljmp
and
mov
pop
add
or
mov
popa
cmp
fistpll
jo
inc
inc
test
data16
neg
push
mov
test
mov
or
pop
fsubl
popf
test
lods
mov
mov
push
inc
clc
or
xchg
sti
cs
rcll
push
faddl
mov
lea
lock
jg
adc
in
mov
pop
test
dec
sahf
test
outsb
orb
call
sub
push
xchg
adc
dec
ret
xchg
push
in
rcl
push
jp
insb
fsubr
lods
ljmp
call
cmpsl
std
adcb
lock
imul
mov
xchg
sahf
push
pop
dec
inc
add
jo
adc
divl
jp
mov
xor
lcall
das
pop
and
fnstenv
lods
ss
jecxz
or
jmp
stos
sahf
gs
inc
addr16
mov
ja
cli
sbb
lcall
or
add
dec
pop
in
pop
cwtl
xchg
mov
mov
xchg
dec
out
pop
mov
cmp
in
das
xor
mov
sub
adc
cld
jecxz
mov
in
andb
shlb
and
or
add
mov
ret
or
xchg
adc
sbb
fistpll
mov
mov
lcall
inc
cmp
idivb
xor
lods
dec
pop
dec
scas
pop
mov
shlb
fldcw
rol
lcall
loop
sbb
adc
xor
or
sbb
loope
test
sbb
mov
je
sbb
jg
ss
xor
mov
cmpb
cmc
or
xlat
cmp
inc
mov
and
test
mov
shl
sarb
repz
sbb
mov
add
and
sub
or
pusha
sbb
hlt
cmpb
outsl
jle
roll
dec
sub
in
idiv
xchg
jmp
adc
daa
mov
pop
mov
dec
add
shrl
adc
nop
and
and
and
jg
testb
mov
add
dec
filds
stc
sub
inc
lahf
cmpsl
pop
icebp
pop
push
popa
sahf
test
adc
pop
push
lock
inc
lea
mov
movsb
or
sbb
imul
pop
adc
xchg
sub
fcomip
outsl
push
addr16
pop
push
fld
sbbl
mov
divb
dec
cmpsl
cmp
mov
and
lods
mov
outsb
adc
stc
mov
and
xchg
mov
or
lock
push
mov
pushl
mov
and
cmpsb
add
jb
shlb
push
adc
add
ljmp
lock
js
cwtl
cmpsl
jmp
mov
rclb
fistps
nop
nop
xorb
ja
inc
and
mov
lcall
outsl
or
loope
les
xorb
push
nop
rolb
rcr
movsl
cmc
sbb
incb
sti
jl
pop
mov
mov
adc
dec
push
aaa
jmp
jl
mov
mov
jg
jne
ret
pop
inc
cli
dec
xor
lret
aas
pop
jns
les
and
or
data16
cwtl
pop
sbb
repz
mov
mov
fcomps
test
and
adc
aam
aam
and
adc
sbb
mov
clc
or
es
adc
fistps
push
and
push
mov
dec
loop
ljmp
inc
inc
push
mov
mov
inc
inc
test
sbb
xchg
lock
dec
addb
mov
aas
faddl
faddl
mov
mov
mov
push
lcall
add
or
pop
and
xchg
js
xchg
mov
add
test
ljmp
pop
mov
stos
shlb
cmp
adc
subb
adc
sub
dec
lock
adc
cmpsl
add
sub
fmull
insl
push
xchg
push
clc
push
cld
fists
sub
mov
push
leave
dec
cmp
push
adc
psraw
jle
insb
push
lea
mov
jg
pop
fs
xor
pushl
and
and
es
lcall
jb
jmp
inc
mov
ror
sub
pop
fidivrs
mov
mov
aam
lods
clc
pop
inc
lods
cld
sub
in
lcall
pop
xlat
and
cwtl
or
mov
jg
std
in
call
add
adc
or
sahf
mov
push
movsl
xor
pop
cmp
dec
dec
sbb
fxch
cmpl
mov
xor
fs
pusha
xor
out
mov
inc
js
incb
jb
mov
sub
cmp
push
xchg
fimuls
sbb
lods
rolb
incl
pop
jns
sub
and
cmpsb
and
sbb
sbb
fwait
push
adc
bound
mov
inc
movsb
jge
movsb
jecxz
stos
pop
ljmp
cmp
ret
xchg
mov
adc
sbb
add
inc
loopne
outsl
push
xchg
add
xor
fs
add
or
push
jns
gs
movsb
adc
cmpsb
lods
loop
pop
mov
sbb
lds
push
add
and
mov
mov
arpl
stc
sub
or
and
sub
mov
xchg
jne
adc
int3
cld
call
ja
insl
xor
add
add
data16
scas
cmp
jl
push
test
inc
cmp
push
add
incb
std
fdivr
cmp
xchg
and
add
call
jl
je
ljmp
push
les
cmp
mov
inc
mov
mov
push
inc
mov
mov
out
xchg
or
xchg
xlat
aad
incl
nop
roll
mov
inc
fdivp
push
cmp
push
mov
and
out
xorb
loope
shrb
add
in
mov
push
in
call
mov
push
jge
mov
incl
cld
cwtl
xchg
xchg
mov
push
cmp
push
mov
shl
ltr
cmp
shl
push
scas
adc
scas
mov
xchg
jae
stc
in
rorb
loope
jl
psraw
aad
jmp
push
jl
mov
das
pushl
and
aaa
or
in
scas
sbb
mov
or
arpl
cld
aas
inc
lods
mov
xchg
or
fmull
lea
mov
add
xchg
test
adc
and
sub
mov
aaa
inc
call
push
pop
lcall
insb
in
or
jle
shlb
add
sarb
inc
ljmp
xor
loope
insb
test
xchg
xor
sub
mov
jg
mov
pusha
xor
incl
xor
pop
test
jne
sbb
mov
daa
clc
js
fs
ss
test
add
pop
inc
mov
jg
push
dec
adc
inc
xchg
scas
into
xlat
cmp
int3
aam
popa
mov
push
ucomiss
cmp
pop
mov
mov
out
out
pop
jo
mov
adc
inc
mov
outsl
and
dec
mov
mov
loop
sbb
sbb
add
std
nop
std
rcrb
negb
mov
decl
xchg
sahf
fstps
icebp
mov
mov
and
push
mov
dec
ror
and
shll
je
dec
mov
lret
xchg
in
cli
rcll
mov
cli
mov
repnz
fisubrl
or
adc
mov
inc
mov
rol
nop
lcall
call
repz
dec
pop
sbb
jl
push
jne
and
int
cmc
mov
push
jecxz
cmp
mov
ffreep
outsl
andl
dec
dec
mov
insl
mov
adcb
jbe
out
das
mov
mov
xor
aas
xor
or
add
mulb
mov
xor
mov
sti
lahf
popa
test
mov
jle
sub
ljmp
mulb
ljmp
iret
ss
movsl
jp
pop
pop
jnp
xchg
inc
add
mov
rcll
leave
or
call
js
idivb
outsb
cmp
sahf
shlb
xchg
mov
shrb
sub
out
jmp
mov
pushf
test
fdivrs
roll
es
in
mov
lods
mov
sbb
sti
mov
cmpsl
insb
dec
inc
in
xchg
or
xchg
mov
int3
jg
movl
loopne
fcomi
mov
dec
mov
jmp
mov
add
aaa
mov
das
fdivr
jg
incl
aam
outsl
popf
call
pop
or
mov
lahf
push
outsl
inc
add
sub
and
jp
imul
xor
pop
adc
and
fsubrl
add
xchg
push
push
mov
pop
cli
mov
mov
sahf
push
mov
hlt
popf
testb
shrl
xchg
ljmp
ljmp
lock
fwait
mov
sahf
adc
sub
adc
arpl
pop
jle
incl
jg
push
idivb
adc
out
mov
clc
out
and
cmp
repnz
jp
xchg
lcall
cmp
add
loopne
mov
test
fsubrl
sub
fcomps
imul
icebp
cmp
subl
test
pop
test
imul
mov
push
scas
enter
ljmp
cltd
jl
insl
aaa
in
xor
addr16
dec
jmp
jg
fwait
call
roll
ficoms
adc
movsl
and
hlt
stos
or
out
xchg
aad
xchg
sbb
stc
sub
in
cmpsb
cmp
sbbb
mov
dec
xor
push
sbb
incl
adc
fldl
inc
std
and
roll
decb
fdiv
call
xchg
xor
jo
out
xor
es
lahf
dec
lea
cmp
or
stos
jg
mov
int3
mov
pop
cli
dec
aad
mov
pop
int3
imulb
clc
test
push
dec
mov
js
scas
adc
test
aas
in
jmp
xor
cli
int3
ja
mov
sbb
test
in
xchg
jne
xchg
test
sub
mov
pop
clc
aaa
push
and
iret
jmp
sbb
cld
in
std
iret
push
scas
rcl
mov
sbbl
push
insb
and
mov
movsb
bnd
aam
scas
test
pop
stos
push
cmp
scas
andb
lods
imul
jo
adc
adc
imul
ljmp
pop
cmovs
and
mov
mov
xor
xchg
pop
jmp
jl
mov
adc
inc
lcall
test
sbb
dec
cmp
cld
cmpsb
pushl
mov
mov
inc
test
movsb
clc
inc
std
ljmp
xchg
or
or
add
out
inc
push
push
add
loop
shlb
mov
shlb
cmp
pop
jmp
cmp
call
cmp
mov
sub
add
cwtl
fisttps
or
dec
cltd
mov
xchg
push
adc
jo
push
pushf
add
push
pop
pusha
daa
jl
loope
pop
js
push
xchg
xchg
push
add
mov
or
push
ds
fidivl
or
fildll
lret
pop
clc
cwtl
popa
inc
mov
scas
aam
sarb
out
push
pop
aad
cld
scas
jo
mov
jb
sub
insl
push
ja
cli
out
adc
bound
sahf
mov
sbb
mov
adc
adc
push
cli
loopne
mov
sti
push
pop
xor
icebp
cmp
loope
xchg
mov
div
sub
out
negb
or
out
bound
lret
in
mov
daa
adc
pop
sti
in
mov
pusha
ljmp
loopne
mov
arpl
push
les
decl
adc
push
iret
xchg
fcmove
fs
and
and
decl
cld
daa
push
jo
in
or
jno
std
cmp
pop
cwtl
out
push
das
sarb
fdivl
iret
push
lods
nop
orb
mov
adc
call
mov
or
cmp
test
lods
sub
decl
leave
xchg
push
cmc
mov
rcrb
adc
add
sbb
mov
outsb
sub
bound
push
loopne
sbb
test
mov
inc
or
jbe
jg
mov
mov
mov
lret
rcrb
mov
cmp
sub
repnz
jne
push
adc
push
xchg
je
mov
sbb
mov
data16
push
cmc
mov
dec
shrl
add
sub
in
push
pop
fwait
pop
fdivrl
cmpsl
mov
inc
lock
test
or
mov
adc
cli
mov
les
out
push
mov
sub
stos
pop
orb
push
lret
cmp
xor
jge
lds
idivb
add
in
ja
clc
sbb
popa
sub
mov
xchg
xor
in
fwait
push
jmp
sub
addb
push
movsb
add
push
mov
jbe
push
cmp
sbb
sub
fmuls
adc
out
sbb
dec
ret
mov
jecxz
loopne
or
pop
lret
add
xor
add
js
sbb
hlt
or
mov
mov
sti
ds
sub
xor
bound
das
add
pop
or
xchg
mov
pop
into
sub
jo
jbe
inc
test
nop
nop
lret
les
add
in
pusha
xchg
xchg
and
dec
das
cmp
mov
or
ret
and
sub
aam
dec
cld
int
sub
fnstsw
repnz
scas
sub
add
sbb
cmp
sbb
jno
mov
dec
out
addb
xor
and
sahf
clc
mov
andl
mov
stc
pop
cld
decl
ret
aam
mov
add
push
test
mov
leave
or
sub
test
and
cmpsb
rol
lods
adc
aaa
imul
into
push
aam
lds
add
rolb
add
xor
push
std
jecxz
incl
jge
nop
dec
cmp
adcb
leave
shrl
push
jmp
adc
add
and
sub
xor
mov
pop
rcl
hlt
xor
fistpll
jb
dec
xor
cld
ljmp
mov
xor
test
sbb
aaa
sub
jns
out
add
outsb
adc
mov
and
popa
roll
cwtl
mov
fnstsw
fidivs
mov
adc
adc
push
outsb
inc
push
add
pop
jmp
shll
push
pop
mov
jmp
bound
dec
xchg
mov
jnp
pop
sub
sbb
mov
push
mov
movsl
cld
pop
icebp
shl
adc
pop
call
shlb
mov
scas
and
xchg
fwait
fs
hlt
lea
jle
dec
inc
inc
inc
popa
hlt
jmp
add
sub
add
add
mov
rorb
cli
sbb
test
je
add
addr16
xor
lahf
push
insb
push
push
orb
cmp
mov
cs
lcall
or
pop
lcall
lret
std
add
xchg
sub
sbb
test
mov
mov
add
cmpsb
xchg
inc
adc
and
jl
inc
inc
cmpsl
outsb
lods
add
inc
ljmp
daa
dec
adc
jnp
adc
xchg
pusha
cmp
inc
cmp
sbb
adc
xchg
cmp
inc
arpl
data16
ja
mov
inc
fs
cmp
scas
test
mov
cmc
mov
clc
and
pop
lcall
mov
adc
dec
xchg
sub
inc
xlat
push
shlb
incl
add
xchg
push
adc
mov
popa
lock
mov
jg
xchg
loopne
xor
jg
xorl
aam
inc
int3
insl
cmpsb
xor
add
out
sub
repnz
add
sbb
mov
sbbl
jg
mov
pushl
bound
nop
sub
loope
test
add
or
inc
clc
adc
test
hlt
call
cmp
mov
daa
aaa
mov
test
or
push
dec
push
mov
dec
sub
mov
mov
imul
ljmp
and
and
mov
mov
filds
or
mov
test
cmp
jmp
jmp
sti
mov
jg
aas
push
fldt
mov
pop
insl
shrl
adc
mov
pop
cli
cmc
cmc
les
dec
add
cmp
add
mov
xor
jle
sbb
adc
xchg
ret
pusha
lahf
ja
push
cs
inc
adc
xchg
or
cld
and
test
inc
out
xor
xchg
inc
push
add
test
push
or
rcl
inc
add
outsl
xchg
loopne
lods
sti
sub
mov
cmp
fildl
add
ret
push
push
dec
and
inc
lcall
lock
shl
xchg
inc
fdivrl
cmpsl
rcll
iret
adc
arpl
xchg
fisubl
mov
mov
inc
fcomi
sub
mov
or
push
in
add
out
incl
sbb
or
lods
mov
xor
inc
pop
add
dec
fcoml
hlt
out
shr
sub
je
mov
lods
insl
fistpll
cld
pop
mov
shl
push
leave
dec
inc
mov
adc
mov
inc
pop
fwait
icebp
push
rcl
jne
pop
test
add
mov
sarl
or
neg
adc
cwtl
clc
mov
add
rolb
movsb
cmc
ret
sub
or
les
arpl
in
test
push
clc
stc
push
loopne
daa
mov
int
test
push
ret
aaa
stos
sti
aas
clc
mov
mov
inc
xchg
pop
mov
push
icebp
cs
push
add
clc
fbld
xor
cmc
xlat
movsl
ljmp
inc
add
test
nop
pop
and
mov
cmp
decl
roll
adc
js
fs
cmpl
cmpsl
orb
rcr
imul
negb
xchg
fstpl
mov
pop
call
jmp
andb
add
fcmovbe
and
mov
in
adc
and
cwtl
jns,pt
inc
xchg
faddp
inc
mov
xor
fdivr
mov
cmp
decl
xor
lds
je
and
icebp
inc
sbb
aas
cmovl
in
ja
jmp
test
call
decl
std
gs
pop
inc
rolb
push
mov
or
inc
xor
ret
xor
jg
lock
mov
push
jl
dec
cmp
loope
fnsave
jg
in
jns
popf
inc
stos
shll
into
ret
ret
mov
dec
push
pop
mov
pop
add
mov
inc
jnp
fbstp
cmp
sbb
loope
loope
inc
pop
in
push
push
adc
jbe
xor
adc
stc
testl
rcll
outsl
data16
push
aas
popf
pushl
push
and
leave
mov
pop
jnp
and
fs
or
orb
mov
mov
jecxz
aas
sub
pop
xchg
xor
mov
mov
push
cmp
mov
push
and
cmc
hlt
imul
push
sub
xchg
xor
push
rclb
aad
dec
mov
sar
lret
scas
xchg
xchg
mov
cmp
push
hlt
and
pop
jne
jb
mov
jle
jmp
xor
and
jno
xchg
push
xor
enter
jg
ret
test
dec
and
lods
push
adc
jg
add
mov
nop
add
inc
scas
or
pop
or
xor
insb
jnp
or
dec
das
ret
lock
adc
jecxz
pop
sbb
xor
sub
insl
cli
insb
ret
and
sbb
jge
xor
ret
jbe
imulb
and
xor
aaa
or
les
xlat
aaa
in
cld
call
test
cwtl
ds
andb
mov
xchg
add
mov
pop
std
xchg
cld
dec
mov
push
inc
adc
popa
stos
xchg
sub
add
fdiv
pop
mov
mov
mov
in
add
loop
dec
xchg
xchg
add
js
jae
nop
mov
and
mov
adc
es
cmp
lock
pushf
or
ficompl
add
adc
jg
pop
decl
jp
push
pop
mov
cwtl
lret
fdivrl
add
call
out
popa
cmpsl
cmc
xchg
sub
mov
jo
xor
loop
sub
mov
sub
ljmp
lock
mov
pushf
push
or
fistpl
push
mov
into
jb
out
adc
fmuls
subb
xchg
adc
push
hlt
sub
cmp
jg
shr
adc
ret
hlt
push
orb
jecxz
cmp
jo
sub
pop
lea
dec
xor
in
aam
sub
or
mov
mov
daa
and
xchg
ret
dec
adc
mov
fwait
xchg
ss
movl
jno
add
in
arpl
rcrb
lret
push
inc
jecxz
mov
sbb
test
sub
aaa
sub
inc
dec
push
subb
sbb
xchg
stc
stc
adc
mov
loopne
xor
loopne
push
out
mov
ljmp
shr
and
sar
add
xorb
cmp
xor
rclb
and
fld1
jo
xlat
sub
int3
pop
call
stos
or
add
js
push
test
aaa
push
cld
jecxz
lea
xchg
rcrb
rclb
test
lcall
xchg
imul
clc
xor
out
orb
add
adc
or
cmp
and
pusha
lods
stc
jbe
or
les
nop
loopne
pop
cmpsl
push
sahf
movsb
inc
jge
add
fldl
sbb
inc
and
inc
jp
mov
jg
mov
xchg
ds
fildl
or
jp
jns
clc
xlat
pop
clc
outsb
stos
push
in
xor
hlt
inc
mov
sbb
inc
inc
jl
jecxz
nop
push
jmp
int3
js
inc
ja
stos
nop
jne
inc
push
adc
cmpb
or
sbbb
pusha
inc
mov
jne
mov
enter
push
push
fiadds
unpcklps
or
das
jb
push
adc
cld
xchg
loopne
fistl
add
fisttps
inc
in
adc
cli
std
mov
jno
clc
pushl
std
out
jns
inc
xlat
cmp
push
dec
lcall
cwtl
and
push
adc
in
jecxz
clc
mov
pop
insl
adc
cwtl
pop
xor
cmpsl
movl
and
lar
es
add
or
mov
xor
jp
mov
jle
mov
lretw
adcb
cld
inc
push
cmp
lds
xchg
popf
mov
pop
and
jbe
or
or
jae
stos
fbstp
arpl
gs
dec
xchg
adc
add
mov
outsl
shrb
xor
xacquire
pop
jl
outsb
sub
cltd
xor
and
cmpsb
int3
pop
pop
adc
adc
or
dec
ss
ss
ficoms
sbb
mov
jmp
pop
push
xchg
xchg
push
add
stc
xchg
movsb
add
push
sbb
jg
pop
add
pop
mov
pop
cli
lods
mov
sub
cwtl
ljmp
call
inc
fwait
call
aas
push
sahf
xor
int3
xchg
fists
and
cltd
cli
push
jb
push
pop
mov
popl
cs
push
dec
jle
xor
int3
arpl
mov
clc
jge
icebp
sub
or
or
movsb
call
je
out
add
out
popf
pop
test
xchg
cmp
cld
pop
nop
adc
push
dec
push
rorl
pop
push
shrl
incl
cmp
in
push
push
pop
ljmp
pop
mov
nop
sbb
fbld
lahf
sub
gs
inc
inc
fdivs
jae
sub
cli
daa
arpl
push
dec
and
mov
sbb
cmp
push
mov
imul
or
fsub
movsb
push
aas
cmp
mov
out
sbb
addl
mov
in
ror
lods
jl
or
andnps
inc
sbb
cmp
bnd
dec
mov
std
push
mov
sti
dec
not
cmp
xorb
lods
xchg
fidivl
rolb
mov
adc
sub
xchg
fcompl
imul
sbb
and
cmp
stos
sub
mov
and
and
or
cmp
je
cmc
aam
adc
adcb
ret
aaa
movsb
outsl
add
sbb
push
sub
sub
sbb
add
cmp
add
out
adc
mov
aaa
lcall
negb
and
jo
add
xor
fstl
fidivrs
mov
add
ljmp
ret
cmc
adc
lock
idivb
mov
inc
outsl
fiaddl
sarb
out
mov
ds
cld
ret
or
outsl
daa
jl
loopne
cmc
mov
or
data16
adc
inc
jne
adc
call
popf
and
mov
sarl
jecxz
sub
and
call
pushl
pop
imul
mov
int
and
cmc
arpl
xchg
fcmovnb
add
aas
inc
ret
xchg
push
dec
scas
add
lea
and
negb
inc
jp
mov
xchg
xchg
xchg
sub
xor
ret
mov
inc
xor
fidivrs
mov
cmpsb
sarb
stos
inc
aaa
jge
jl
loop
fwait
ds
ret
mov
ljmp
and
fsubrl
inc
test
faddl
mov
xor
mov
mov
das
or
mov
adc
cmp
test
jle
mov
into
or
clc
imul
stos
imulb
adc
and
fwait
out
shll
cltd
pop
push
sar
hlt
xchg
loopne
add
inc
stos
sub
xor
lock
ret
shlb
push
iret
adc
adc
jecxz
mov
repz
jb
lcall
movsl
mov
push
dec
pushf
popf
xchg
fcompl
dec
and
sbb
adcb
fwait
loopne
es
lock
or
jne
cmc
mov
dec
call
mov
xchg
mov
pusha
gs
das
xchg
mov
fsubrs
ss
popa
aas
out
bound
jg
and
addb
lock
add
repnz
and
scas
cli
decl
dec
xor
test
das
iret
into
lods
xlat
sbb
movsb
stos
xchg
push
adcl
mov
es
mov
orb
enter
lcall
sbb
fidivrl
hlt
push
inc
xor
pop
lods
mov
xchg
jmp
jns
pusha
std
inc
pop
testl
add
sub
mov
into
push
mov
out
sub
xor
out
insl
or
mov
out
jnp
std
dec
pop
sbb
bound
fisubl
sub
pop
xchg
pop
negb
sete
fildll
roll
add
pop
pop
icebp
xchg
fists
pop
mov
mov
ret
push
fsubrl
dec
or
pop
dec
je
rolb
pop
dec
xchg
push
mov
cmp
sub
adc
sbb
adc
jle
and
je
xor
xchg
add
inc
mov
nop
es
decl
cmp
xchg
mov
fmull
mov
push
mov
inc
xchg
std
outsl
jno
es
jmp
or
pop
sbb
dec
icebp
stc
cmpsl
mov
xchg
insl
loop
jl
out
jl
sub
daa
sub
adc
add
subb
lret
and
mov
xchg
dec
ret
jbe
stc
mov
mov
cmpb
pop
in
dec
in
ljmp
imul
sbb
fcomip
push
sub
cwtl
mov
ret
hlt
insl
ret
call
xchg
jl
or
and
adc
call
data16
lock
add
clc
outsl
mov
outsb
out
pusha
jnp
iret
popa
rcrl
pop
mov
mov
or
pushl
insb
add
jno
popl
insb
jo
insb
jmp
mov
cmp
cmp
pop
inc
int
fdivs
js
cwtl
adc
stos
mov
cld
out
int3
inc
push
loope
idiv
insb
push
js
call
add
or
or
dec
aaa
cld
pop
inc
shll
nop
test
adc
popa
and
in
xchg
cmpsb
cmp
mov
dec
dec
lcall
nop
jmp
add
ljmp
shl
inc
loop
adc
mov
or
mov
imul
cli
cmp
shrb
cmp
in
mov
xchg
mov
adc
or
mov
js
xchg
repnz
pop
pop
sub
outsb
mov
shrb
mov
sbb
and
mov
sub
add
enter
popa
dec
in
fimuls
cmpsb
fstp
mov
or
mov
arpl
mov
icebp
ljmp
lods
call
jle
cltd
fldenv
ret
aas
xor
push
test
and
add
inc
loopne
mov
adcl
cld
and
mov
cld
out
cli
cmpsb
jp
repz
subl
xor
sub
ja
ljmp
jne
xor
pusha
inc
mov
push
sub
bound
push
jecxz
dec
xor
jp
jl
iret
aaa
adc
lds
daa
inc
mov
and
out
clc
dec
enter
mov
cwtl
sti
mov
mov
clc
imul
filds
mov
les
je
fsts
push
sbb
clc
rcrb
push
arpl
outsb
clc
stc
mov
mov
aas
es
and
add
sarb
fsub
scas
es
inc
add
repz
lea
sub
sbb
ljmp
jg
or
int
xor
sub
and
aas
inc
fistps
mov
dec
ljmp
sub
pop
ret
cmp
scas
xlat
insb
es
and
lahf
mov
nop
fbld
add
and
addr16
ja
mov
and
lret
adc
mov
and
xor
scas
inc
nop
mov
mov
decl
add
fcoms
or
ret
mov
add
sub
dec
leave
call
sub
dec
sbb
imul
sub
lods
pop
pushl
jp
sbb
iret
test
push
or
adc
xor
add
lds
in
sar
rolb
in
orl
pop
cwtl
enter
bound
sub
lock
cli
fstpt
icebp
or
out
scas
and
push
incb
and
mov
inc
or
call
mov
cmp
xchg
xchg
test
outsl
add
leave
xchg
mov
inc
fs
sub
adc
arpl
stos
pop
ds
adc
fwait
shlb
sbb
pmulhuw
decl
je,pn
movsb
movsl
push
mov
pushf
andl
inc
data16
xchg
lods
ja
out
add
pop
in
cmpsb
jmp
jg
repnz
out
mov
push
sub
or
xchg
mov
pop
pop
dec
push
movsl
inc
adc
push
lcall
cmp
ja
loop
shl
jo
inc
icebp
mov
std
and
push
mov
dec
inc
getsec
push
test
popf
jmp
ljmp
inc
js
insb
and
je
inc
icebp
in
mov
mov
mov
addl
movsl
addr16
cmp
lcall
cmpsb
and
ret
sub
js
inc
rorl
and
je
pop
pop
dec
xlat
fcmovnb
outsl
test
sbb
and
loopne
mov
mov
clc
sarb
sub
inc
adc
inc
jg
add
sbb
mov
pushf
sarl
sub
out
das
xchg
das
lea
mov
loopne
stos
pop
push
stos
xor
or
aam
mov
inc
and
jo
dec
out
mov
inc
mov
jb
xor
xor
cmp
push
jb
sbb
xor
sub
inc
pop
jmp
outsb
jne
pop
popa
cmp
lock
push
outsb
mulb
ret
daa
push
xchg
das
xor
adc
roll
push
pop
add
xor
jnp
pop
push
sub
and
and
push
inc
std
lcall
nop
ljmp
or
mov
cmp
pushl
lock
adc
cli
cltd
aas
out
adc
in
sbb
add
inc
xchg
inc
call
fdivr
push
outsl
lret
adc
push
xchg
jmp
lcall
or
andb
xor
inc
mov
cmp
decl
push
ja
dec
inc
out
or
icebp
fbld
loopne
xchg
ds
fcos
loopne
jge
or
cmp
jae
xchg
into
jg
icebp
and
clc
and
out
cld
jg
sub
int
fnstcw
vrcpss
inc
bnd
or
mov
push
out
hlt
sbb
lahf
jp
jecxz
xor
sbb
mov
cld
loop
xor
int3
imul
xor
sbb
das
rorl
ret
push
cmc
or
sar
ljmp
or
test
pop
les
pop
faddl
js
daa
nop
lcall
add
inc
push
ljmp
rclb
mov
xchg
lahf
mov
add
cmp
mov
jnp
sbb
mov
adc
iret
push
mov
data16
cmpsb
decl
inc
dec
in
cmp
jecxz
dec
and
pop
insb
add
jmp
shl
loop
int
arpl
mov
sub
jl
sbb
scas
cmpsb
lcall
mov
pop
xchg
decl
lcall
fdivl
mov
xchg
sbb
pop
and
stc
repz
sbb
jg
call
cmc
pop
add
pop
repnz
sbb
popf
movsl
ljmp
xchg
pop
lret
stos
add
xorb
add
in
jmp
pop
push
sbb
xorb
sahf
enter
hlt
stos
hlt
scas
dec
and
add
dec
aam
aam
jae
sbb
incl
lret
ret
aas
mov
arpl
push
and
push
cmp
into
inc
jo
addr16
mov
lret
jno
aaa
mov
pop
les
inc
sub
int
cmc
add
mov
fadd
adc
loope
test
xchg
outsb
ret
into
int
outsl
out
aas
ljmp
jle
add
jg
mov
jo
test
sahf
sub
mov
mov
jg
aaa
push
popa
mov
push
or
hlt
andl
or
ret
pop
mov
movsl
int
or
jbe
nop
jge
icebp
jnp
dec
aad
ljmp
incl
clc
cs
notl
ljmp
fbld
mov
dec
cmp
adc
jl
fwait
stos
lock
cmp
adcb
movsl
decl
pop
xor
fnstsw
divl
xchg
rcrb
lea
add
hlt
pop
mov
push
inc
popa
out
or
in
fsubr
data16
scas
lods
repnz
and
sub
cmpsl
popa
adc
push
aaa
addr16
push
or
inc
bound
rcrl
add
cmp
out
dec
add
pushl
push
fists
cmpsb
xor
or
dec
and
js
lods
or
or
mov
lock
aad
push
in
xor
nop
inc
jmp
pop
sub
adc
push
inc
push
stos
out
mov
imul
jae
dec
aaa
out
movsb
pop
xchg
in
add
push
sti
dec
sub
push
push
lods
clc
add
sub
add
or
mov
cmp
xchg
mov
mov
push
add
inc
or
fdivrl
daa
aaa
dec
ljmp
push
je
nop
int3
and
mov
mov
out
and
sub
mov
iret
fstl
imul
xor
lods
js
mov
dec
clc
or
inc
or
rorb
mov
loope
inc
push
cmp
incl
test
dec
dec
or
lcall
sub
testb
mov
in
in
sbb
pop
mov
pushf
mov
or
test
lock
in
push
test
mov
push
mov
mov
xchg
movl
push
int
fsubrp
add
sarb
or
jnp
mov
cmc
incl
cmp
pop
fmull
les
mov
idivl
mov
jl
push
push
cmp
xchg
adc
dec
mov
dec
add
push
dec
cmpsl
ror
or
test
movsb
jecxz
sub
data16
mov
std
int
out
into
mov
add
jb
in
add
dec
nop
or
adc
popa
imul
arpl
movsb
iret
aas
clc
pop
ret
in
mov
and
inc
scas
clc
xor
sub
es
or
popa
in
shlb
daa
xor
cmp
outsb
mov
repnz
out
push
adc
fisttpl
jl
stos
lcall
push
in
add
icebp
inc
fildll
xchg
mov
sub
ss
shl
jg
jp
orb
hlt
pop
adc
jle
mov
in
sub
into
and
test
xchg
and
mov
push
inc
lret
xor
or
mov
cld
xchg
test
pusha
lods
cltd
ret
test
pop
popa
loope
icebp
sti
inc
inc
add
xchg
rcrb
addr16
jg
shlb
shlb
xor
sar
push
imul
push
hlt
test
mov
pop
sub
ljmp
xchg
add
jns
xchg
fiadds
mov
adc
or
and
mov
fbld
xor
popa
and
das
dec
fildll
push
js
add
gs
jp
push
cmpsb
pop
pop
jo
sti
test
jne
fsub
insl
xchg
jecxz
mov
xor
shlb
inc
xchg
dec
sub
aas
or
out
cmp
sub
add
mov
add
loop
push
push
movsl
mov
sbb
lock
jmp
mov
add
lods
sbb
fistpll
cld
pop
and
aaa
push
push
mov
rcrb
hlt
pop
test
dec
mov
mov
or
es
gs
mov
insl
lds
ss
shll
shrb
clc
cwtl
rorb
test
dec
mov
inc
clc
sbb
fs
cmp
or
push
faddl
sbb
repz
loope,pt
jp
call
sub
mov
push
jge
idivl
ret
lcall
out
scas
xor
push
or
cmpsb
clc
scas
xorl
les
dec
jmp
adc
jae
sbb
loop
mov
scas
fiaddl
imulb
aas
les
and
lahf
dec
add
cld
mov
hlt
jno
jl
mov
ret
inc
decl
jle
mov
sub
push
in
aas
ret
daa
sbb
nop
out
jb
and
sub
mov
incl
cld
sbb
es
and
lods
sahf
or
std
xchg
lods
cwtl
mov
ja
sbb
arpl
mov
xchg
das
push
inc
sbb
cmc
inc
mov
psubb
xor
mov
mov
mov
incl
nop
jmp
outsl
mov
mov
mov
daa
push
inc
jecxz
adc
dec
dec
push
pop
dec
cmp
jecxz
enter
push
or
push
jae
cmpsb
in
stos
int3
xlat
pushf
jne
mov
test
std
sbb
in
dec
xchg
mov
scas
jp
cmp
into
fsubs
mov
bnd
and
int
pop
call
les
jo
xor
pop
xlat
pusha
or
mov
sar
ss
je
int3
aam
jbe
adc
insb
inc
xchg
xchg
xlat
pop
fbld
jns
push
test
push
call
shll
push
inc
aad
push
movsl
stos
sbb
cli
sub
mov
mov
rclb
sarb
pop
push
les
call
mov
daa
ret
pop
and
adc
enter
cld
in
sbb
loop
jge
out
mov
dec
inc
inc
xchg
out
pop
lods
jge
xchg
or
das
aaa
fidivrl
add
or
sbb
xchg
xchg
cwtl
ja
pop
inc
imul
popa
cmp
adc
loop
cmpsb
js
and
dec
cli
push
les
aaa
call
add
cmp
imull
icebp
adc
es
adc
add
lcall
sete
andl
fstps
lea
mov
sbb
adc
fistpl
mov
add
jo
frndint
fidivrs
mov
and
sub
xor
inc
push
inc
or
arpl
cmpsb
repnz
movsl
and
add
aam
pop
rclb
hlt
fdivr
or
mov
popa
xor
adc
je
loop
lret
test
nop
out
es
out
mov
mov
mov
inc
nop
dec
testb
inc
shlb
hlt
push
sar
lcall
jl
negl
sub
dec
adc
and
into
test
push
mov
sub
sub
adc
cmp
sub
jb
pop
scas
push
dec
push
mov
dec
ficoms
adc
push
aam
test
add
cmp
sub
aaa
sub
pop
add
push
pusha
mov
mov
cmp
out
rol
addr16
jno
and
sub
adc
xchg
andb
popf
fdivs
xchg
xchg
mov
test
les
add
inc
cmpsb
sub
inc
push
push
fildll
imul
inc
and
sub
jl
jno
xchg
cmp
repz
or
aaa
insb
xor
add
sub
incl
in
inc
and
gs
aam
xor
adc
jg
dec
lock
lret
push
cmpsl
ret
jp
scas
xor
cmp
xchg
xchg
test
mov
push
stos
insl
mov
jnp
repz
scas
incl
icebp
ljmp
cli
mov
test
xor
adc
mov
insb
insb
stc
aam
shll
add
sbb
push
dec
and
jl
enter
push
cmp
mov
or
ret
push
shrb
cmp
ret
lea
xchg
adcl
jo
movsl
jg
pop
popa
sub
mov
cmp
sbb
decl
add
jge
movb
add
jp
daa
in
test
call
sub
in
adc
push
outsb
mov
test
and
stos
sub
push
mov
add
adc
call
dec
inc
and
roll
push
ret
data16
test
cwtl
pusha
cmc
mov
dec
outsb
mov
mov
lcall
test
shrb
cmpb
adc
dec
ffreep
lods
push
mov
dec
push
push
mov
inc
test
xchg
push
shrb
sbb
add
sub
sbb
or
sbb
push
add
cld
mov
xchg
adc
cmp
je
sbb
or
fld1
and
adc
xor
mov
inc
mov
pop
mov
fdiv
scas
outsl
mov
cmp
inc
add
insb
inc
stc
sub
and
mov
outsb
in
cmpsb
mov
inc
dec
mov
jae
je
push
mov
notrack
sbb
inc
test
loop
mov
ret
sub
mov
pop
ret
sahf
sahf
and
insb
int3
push
mov
and
mov
or
daa
and
mov
enter
mov
int3
das
sub
sub
sub
mov
push
outsl
pop
and
sbb
mov
test
or
lock
cmp
jg
mov
outsb
pusha
sbb
jle
dec
mov
js
add
test
out
jmp
cs
mov
cwtl
stos
clc
push
clc
iret
cld
sbb
loop
sahf
dec
sub
jb
and
icebp
outsl
les
push
sub
mov
push
jle
inc
imul
pusha
sub
add
jecxz
add
mov
test
push
lret
pop
sub
adc
call
or
mov
pop
cmpsb
pop
mov
ljmp
xchg
xchg
sbb
jb
lock
mov
test
mov
bound
sub
xchg
ret
adc
push
push
pop
or
es
add
scas
jbe
data16
add
loope
jecxz
sub
hlt
repnz
sbb
cmpsb
loop
inc
lds
sahf
ret
inc
gs
addr16
movsl
sti
sbb
subb
xor
mov
mulb
add
fidivrl
sbb
pop
shrl
add
cmp
clc
jg
lcall
mov
xor
fdivl
mov
add
shrl
popf
adc
cmpl
jg
nop
cmp
add
pop
lods
sub
fwait
fs
mov
mov
outsb
test
pop
je
std
push
push
stos
push
shrb
cmp
sbb
pop
xchg
andb
inc
adc
bound
int
cmp
jp,pt
aad
xchg
test
pop
adcb
dec
cld
cwtl
add
cld
inc
inc
cld
fbstp
into
or
inc
pop
cmp
ret
add
xor
xchg
mov
fldcw
and
add
ljmp
and
pusha
jne
xlat
xchg
lock
push
mov
xchg
dec
or
jo
mov
cmc
cmpsl
jne
xchg
adc
sbb
repz
cmp
mov
or
dec
sbb
cmp
fisubs
aas
nop
add
clc
jg
imul
push
outsb
adc
call
or
das
push
ljmp
add
popa
dec
imul
xchg
cmc
aad
add
punpcklwd
data16
or
stos
mov
jecxz
push
or
ret
hlt
fbld
movsb
inc
adc
xor
xchg
lret
lods
push
ficoms
nop
in
aad
cli
adc
ss
imul
xorb
or
lea
xchg
add
jecxz
sbb
ljmp
pusha
js
stos
mov
sub
cmp
and
dec
sub
jge
add
and
or
lret
mov
sub
cld
cmc
push
rclb
pop
pop
popf
xorl
ds
lcall
inc
cmp
ja
imul
test
loopne
xor
sbb
pop
xorb
je
jbe
cmpsl
dec
mov
push
cmp
xor
cs
or
jb
jno
lods
xchg
stc
outsl
js
fildll
pop
add
aad
out
adc
cmpb
lock
or
mov
xchg
rorl
jge
jbe
cs
or
test
push
xchg
jo
inc
inc
xchg
je
pop
dec
lcall
and
push
stc
pop
cmc
sbb
push
xor
call
ljmp
push
lock
add
iret
push
dec
mov
or
es
mov
push
dec
scas
dec
call
mov
add
add
pop
pop
add
and
aas
mov
roll
js
mov
lock
cli
lods
cli
sarb
jbe
push
fwait
es
mov
mov
pop
out
xor
xchg
mov
dec
es
pop
lock
push
sub
xchg
mov
or
push
insb
pop
pusha
dec
push
add
pusha
push
adc
scas
sub
and
or
out
cli
js
pop
mov
dec
or
add
xchg
insl
pop
out
cmpsl
test
mov
add
xchg
add
adc
add
xlat
xlat
aaa
adc
xchg
mov
fistl
jle
jecxz
push
movsb
push
cmp
test
sub
adc
mov
decb
xor
jno
fwait
inc
repz
jnp
mov
fistpll
pop
push
enter
mov
mov
jp
repnz
jnp
or
fs
jo
xor
lret
xchg
add
and
test
test
xchg
cmpsb
jb
xchg
fimuls
add
xor
jb
test
mov
push
stos
push
lock
js
jbe
imul
aad
gs
hlt
test
and
stos
sahf
pop
cld
jecxz
std
inc
clc
add
mov
decb
scas
mov
mov
pushl
sbb
adc
sub
push
mov
out
mov
push
sbb
clc
nop
aam
and
mov
insb
adc
ljmp
and
mov
xchg
inc
push
or
jae
add
cmp
mov
cmp
mov
daa
push
mov
pop
out
mov
loop
and
jae
add
adc
je
fisttpll
ljmp
sahf
cs
push
cmp
mov
nop
test
movsb
incb
or
mov
push
es
mov
mov
dec
lcall
ret
cmp
rolb
movsl
mov
dec
mov
jg
xor
fadd
out
pop
icebp
jg
cld
movsb
pop
dec
add
mov
inc
push
dec
jp
jbe
rorb
cwtl
jmp
inc
adc
outsl
mov
mov
and
into
ficoms
movsl
add
jo
pop
nop
sbb
mov
fsubl
pop
addr16
outsb
lods
mov
pop
rolb
push
clc
aaa
or
sub
push
fcmovu
inc
jo
sub
fs
js
subb
inc
cmc
pop
test
push
data16
or
out
xor
sbb
call
sub
dec
inc
xchg
xlat
sub
imul
idivb
add
movsl
push
push
mov
mov
sbb
mov
arpl
sbb
int3
cwtl
mov
mov
and
jns
addr16
or
sbb
scas
aad
mov
mov
add
shll
adc
incl
icebp
int3
inc
loopne
or
jle
lret
and
sbb
push
in
test
xor
cmp
imul
and
inc
xchg
insl
loopne
xor
jae
loope
and
and
add
mov
test
and
incl
jne
cwtl
ss
je
and
int
push
test
or
fildll
pop
push
sbb
decl
inc
hlt
cli
xchg
inc
pop
jne
xor
add
dec
andb
out
xor
clc
mov
dec
mov
mov
lods
movsb
aas
jbe
sub
test
mov
ret
pop
lret
rcr
dec
lods
outsb
movsb
repnz
std
loope
or
mov
jo
push
call
je
mov
xor
lods
xchg
push
xor
fnstsw
es
test
mov
mov
inc
jg
pop
add
into
mov
xorb
adc
scas
nop
cmc
decl
add
imul
adc
sarl
test
sbb
jbe
int
lock
gs
rclb
nop
and
cli
mov
pushf
cltd
js
pop
adc
lahf
lcall
jo
cmp
push
clc
das
adc
decl
mov
and
push
push
loopne
inc
mov
jge
in
pop
or
push
fnstenv
loop
add
jo
mov
push
fmuls
sub
daa
movsb
popf
mov
xor
call
leave
cmpsb
into
inc
xor
fadds
pop
rcl
xor
mov
ljmp
dec
iret
decl
mov
xchg
pop
loop
mov
nop
mov
lcall
test
or
pop
cld
addr16
ficoms
xchg
push
mov
dec
adc
lahf
sti
loope
loopne
insb
sti
inc
or
xlat
pushf
mov
inc
push
mov
jg
sub
icebp
into
inc
ret
pop
jno
jge
inc
and
sbb
cld
fbld
mov
es
test
mov
lret
sbb
or
add
mov
jl
mov
cmpsb
push
sbb
xor
decl
jo
sbb
cmp
sahf
dec
add
push
xor
fs
dec
fiadds
call
and
arpl
dec
mov
mov
loope
cwtl
repz
xchg
mov
jno
or
mov
sbb
pushf
je
inc
push
jnp
fcmovbe
ss
movsb
cli
fwait
ja
xor
test
and
mov
fcoml
mov
ret
popa
mov
je
scas
dec
xchg
scas
aaa
cmp
cli
jecxz
and
jmp
cmpsb
jecxz
hlt
sbb
jo
adc
pushf
and
pop
mov
dec
pop
jge
ret
inc
aam
pop
inc
and
aaa
lcall
jmp
add
push
fisubrs
lock
jp
mov
inc
mov
dec
femms
cltd
out
adc
lret
cmpsb
fs
sbb
cmp
inc
jb
fmull
mov
add
cmpb
lret
xor
or
or
or
nop
outsl
loop
xchg
inc
mov
pop
jl
out
xor
mov
add
add
test
mov
sbb
mov
divl
je
lea
mov
es
dec
cli
push
cmp
dec
out
inc
popa
lock
dec
xorb
jecxz
rorl
or
rcrb
popf
nop
pop
les
pop
addl
nop
mov
sbb
mov
ss
fbstp
filds
jp
jmp
mov
rclb
divl
inc
xchg
push
popf
cmp
lcall
data16
and
into
sarl
daa
or
xor
movsb
test
jmp
sub
or
mov
pop
data16
and
test
daa
stos
push
push
test
jl
mov
add
in
popa
pop
pop
xlat
push
cld
pushl
pop
mov
lcall
sub
loop
cmpsb
jne
push
inc
jbe
jno
add
adc
cmp
or
test
notb
sbb
sub
ss
mov
loop
fs
or
lahf
push
xor
sbb
jbe
and
fcomip
adc
iret
mov
inc
inc
xor
xor
or
pop
movsl
or
add
aas
dec
pop
cmpsb
mov
cltd
out
movsb
add
add
jg
push
mov
dec
or
xchg
pop
push
ret
lret
iret
mov
int3
loopne
fdivr
loope
jno
mov
hlt
or
adc
clc
mov
fldt
shrb
cmp
daa
fidivrs
pop
inc
int3
pop
cld
or
aam
xor
gs
test
lahf
inc
je
xchg
repnz
rolb
mov
xor
pusha
lds
push
cs
push
mov
add
decl
rol
faddl
andb
or
pop
popa
mov
fdivs
in
loope
pop
jg
std
and
repnz
test
into
sbb
xchg
push
fistpl
outsb
jp
xchg
mov
out
rclb
mov
pop
or
insb
pusha
push
lcall
jg
aad
bound
fsubrl
pop
and
mov
xchg
mov
and
loop
push
mov
push
and
or
les
dec
cmp
ds
mov
dec
and
enter
pop
inc
loope
jb
lcall
call
nop
cwtl
mov
in
and
pop
or
push
adc
or
add
xorl
sbb
jbe
test
push
ljmp
inc
lock
inc
cmpsl
push
mov
movsbl
and
mov
das
loope
into
or
sbb
dec
lcall
pushf
aad
lret
push
adc
dec
jb
sub
mov
inc
sahf
push
sbb
mov
or
gs
sbb
adc
jmp
stos
cmp
dec
inc
jbe
lods
pop
xlat
lcall
lods
iret
xchg
fisubs
dec
cwtl
std
mov
mov
pop
and
mov
dec
push
pop
cmp
cld
out
cli
das
sub
xor
or
cmp
fsubrl
sbb
cmp
push
scas
ljmp
in
lea
call
js
ss
scas
cli
arpl
clc
jp
movsl
or
dec
push
cli
mov
cs
bound
pop
lods
dec
xchg
call
jle
aaa
in
add
xchg
or
popa
add
jmp
mov
cli
stos
xchg
pop
into
pop
add
fiadds
lods
stc
bound
lahf
into
dec
shr
adc
outsl
mov
mov
add
nop
jecxz
out
ljmp
mov
sbb
in
popa
sbb
movsl
mov
mov
repz
mov
popa
lods
mov
push
dec
int3
aaa
add
pop
jg
dec
adc
mov
inc
aas
push
fnstsw
fidivrl
adc
incl
movsb
push
mov
bound
xor
add
ret
adc
fmulp
adc
or
mov
xchg
pop
lods
mov
add
or
pop
pop
and
cmp
push
jno
mov
ds
das
inc
lcall
jp
sbb
mov
sub
dec
jne
add
std
es
fwait
sbb
mov
lret
xorb
je
cld
sbb
repz
or
sbb
lods
lods
dec
xchg
loop
cmc
and
jb
add
das
xor
add
mov
int3
xor
sbbb
or
push
cmpsb
mov
fadds
mov
mov
xor
mov
xor
push
pusha
xor
insl
jp
fsub
stc
push
dec
call
inc
cltd
push
xchg
push
rcr
and
ret
icebp
pop
loopne
push
lret
ja
jmp
adc
rclb
pop
shrb
push
fistpll
jle
push
cmp
jo
inc
mov
cmpsl
or
stos
jmp
cli
sub
jo
dec
push
fists
rcrb
loopne
ret
xchg
pop
insb
push
cmpb
sub
out
fadd
mov
cmpsl
pop
movsl
test
cli
or
add
in
sub
or
xor
lcall
jmp
xor
ficomps
data16
mov
jl
push
add
xor
jb
out
imul
mov
mov
jecxz
cld
push
xchg
rorb
jmp
mov
mov
add
dec
adc
push
loope
sbb
push
es
sub
call
mov
push
ret
adc
inc
test
sbb
clc
pusha
inc
add
call
cli
aaa
sar
fiadds
mov
xchg
mov
es
fisttpll
mov
mov
xchg
in
jp
in
lods
bound
clc
xorb
pop
ss
push
ja
add
fisttps
or
scas
push
jecxz
call
es
mov
push
sbb
cli
movl
lods
les
cmpsb
mov
xchg
xor
jl
add
and
push
call
mov
cmpsb
into
in
adc
mov
xchg
jbe
jbe
jbe
mov
fistps
test
sbb
inc
ret
lods
iret
and
mov
fisubrl
shr
jnp
mov
inc
and
cld
mov
push
insb
xor
mov
cltd
hlt
xchg
stc
jle
mov
push
stos
pusha
sbb
pop
dec
add
insb
sbb
lea
inc
dec
pop
mov
add
shll
sbb
jle
cwtl
sbb
cltd
inc
xorl
pop
inc
outsb
inc
mov
lcall
imul
xchg
ret
push
mov
xor
nop
mov
loope
cmp
ret
movl
xchg
std
mov
loopne
xor
ficoml
sbb
inc
repz
jle
lahf
and
and
mov
push
aam
fnsave
mov
hlt
pop
push
test
mov
pushl
inc
mov
shl
sahf
mov
jp
adc
jmp
incl
ror
mov
jmp
jb
mov
stos
adc
add
int3
mov
ret
popa
pop
shrb
icebp
sub
xchg
loope
pop
std
adc
pop
jg
scas
lret
jb
std
in
xor
push
adc
mov
dec
jb
xchg
adc
adc
rolb
mov
add
add
and
and
mov
js
testl
pop
out
dec
cmpsl
pop
mov
push
xlat
cmpsb
add
adc
cmp
xor
jg
cmpsb
scas
ficompl
lret
pop
dec
lea
push
insl
cmp
dec
flds
int
popf
inc
mov
mov
shrl
sbb
mov
push
imul
cmpsl
loop
outsl
mov
dec
in
inc
shr
mov
stc
jbe
push
out
cwtl
psubsb
gs
mov
movsl
lcall
xchg
add
and
in
pop
pop
call
jle
xor
xlat
ss
mov
and
cs
ret
and
inc
call
inc
loop
push
mov
hlt
xchg
dec
add
fbstp
mov
lcall
dec
inc
ret
in
enter
shrl
pop
loopne
cmc
fistl
movsb
add
rolb
sahf
pop
movsb
nop
std
call
fcoms
push
pushf
jo
xchg
and
jo
ss
fisttpl
xor
cld
aad
ljmp
ljmp
add
fiadds
xor
pop
sbb
outsb
mov
inc
cld
xor
push
js
data16
fistpl
xor
add
ret
jnp
xor
cmc
das
add
roll
ret
jno
xchg
mov
outsb
pusha
mov
add
cmp
sub
imul
sarb
repnz
scas
shll
imul
ret
push
jmp
out
out
lret
cli
mov
rorb
jg
jno
add
push
sbb
addr16
add
outsl
push
mov
sub
call
insb
insl
fucomip
ror
push
popa
mov
dec
mov
jne,pn
rcr
scas
ljmp
jbe
push
test
btr
addr16
add
pop
cmp
ja
jb
mov
and
push
lcall
xor
jge
lret
xchg
das
dec
adc
mov
and
loop
movsb
enter
push
nop
inc
and
ja
inc
xlat
or
mov
and
outsb
cli
incl
pop
pop
in
and
and
call
jle
frstor
add
mov
jg
mov
cmp
push
pop
add
outsb
fmull
decb
sbb
test
std
rcll
mov
and
jg
push
push
pop
add
xchg
insl
sub
xchg
and
test
testb
cwtl
cmp
arpl
xchg
jb
jg
rcrl
loopne
dec
decl
cli
cmp
lret
leave
in
pop
mov
adc
icebp
inc
sub
xchg
ja
out
decl
add
test
and
jmp
test
sbb
cld
push
lods
xorb
das
icebp
pop
call
add
popf
push
pop
ss
cwtl
mov
mov
inc
push
lds
pop
outsl
dec
xor
out
ffreep
aas
cmpsb
cmp
outsb
clc
mov
clc
add
inc
pop
sbb
movb
dec
movsl
decl
leave
pop
add
jne
cmp
mov
mov
inc
je
pop
aas
test
adc
jo
into
imull
mov
and
loop
sar
jg
sbb
flds
subb
lahf
dec
mov
pushl
add
pop
hlt
in
xor
sahf
or
or
xor
jp
adc
pushf
cmp
cld
and
xor
push
sub
lcall
fsubl
movq
or
inc
jne
lcall
int
es
dec
lahf
imul
loop
mov
add
xor
mov
cmp
les
pushf
cbtw
pop
pop
and
and
das
push
cmp
stos
mov
nop
jne
div
or
mov
sub
std
dec
xor
jl
das
mov
mov
pop
and
pop
mul
mov
cmc
sbb
inc
sbb
add
add
dec
jb
fwait
in
pushf
or
outsb
rcll
sbb
lds
je
mov
pop
cmp
call
mov
adc
xor
mov
enter
and
call
xchg
aas
mov
sti
insl
mov
add
xchg
push
pop
dec
pop
popf
xchg
sbb
jle
fstps
nop
mov
dec
add
xor
into
dec
in
fisttpl
push
test
push
push
popf
mul
dec
lea
cltd
xor
jmp
mov
aam
jg
jle
or
push
adc
pop
mov
hlt
mov
xorl
sub
pop
in
das
cmpsb
lret
jp
mov
ss
xchg
clc
sub
clc
call
and
jg
mov
les
sbb
stos
repnz
lret
dec
add
fcomip
jbe
test
lcall
sti
out
inc
sub
repnz
icebp
mov
mov
loop
add
or
cmp
push
ljmp
or
sbb
repz
push
sbb
xchg
popa
outsb
jp
inc
pop
hlt
in
xchg
in
mov
pop
add
pop
pop
or
cmp
std
sub
pushf
adcb
pusha
push
inc
dec
ljmp
ds
mov
xchg
mov
push
faddp
in
push
xchg
btr
aam
sarl
mov
add
sub
jl
test
clc
xchg
xchg
adc
stos
add
jns
jb
cmp
or
xor
mov
inc
mov
subl
lock
xchg
cmc
lock
mov
cmc
jns
push
or
sub
inc
mov
jae
scas
sbb
fcomps
xchg
jno
cmpsb
mov
sarb
sbb
or
call
adc
pop
push
fcompl
adc
dec
xchg
mov
push
xor
mov
xchg
movsb
jmp
addr16
outsb
cli
mov
mov
jmp
insb
or
lea
pop
and
shll
scas
pushl
ss
aas
nop
movb
insb
std
pop
jp
popfw
pushf
push
std
aaa
sbb
mov
xchg
and
sub
shll
and
adc
add
xchg
add
out
lods
mov
jmp
sbb
inc
aaa
or
shrb
mov
pop
mov
fisubl
adc
stos
add
loope
clc
push
dec
jecxz
push
xchg
mov
dec
out
addl
pop
dec
fdivrl
pop
adc
xor
bound
je
sbb
std
jmp
nop
pop
cmp
jne
clc
xchg
push
dec
cli
cmp
cs
js
add
mov
data16
fisttps
xchg
sub
scas
ficoml
cmc
call
adc
int3
add
ja
pop
adc
mov
call
mov
iret
repnz
pop
fwait
mov
in
pusha
jge
sbb
cli
mov
push
mov
stc
xor
testl
ret
jmp
cli
lcall
and
mov
push
fbld
mov
cwtl
xchg
adc
out
les
sahf
int
aad
aam
outsl
mov
loope
inc
bound
ljmp
pushl
xchg
ret
cwtl
into
mov
add
test
repz
pop
dec
push
mov
cmp
data16
loope
sbb
cmp
mov
rcrl
test
inc
mov
into
mull
stos
add
inc
dec
inc
sbb
and
std
and
inc
leave
jno
inc
cmp
cmp
inc
jo
mov
and
sub
pop
ret
es
mov
dec
cs
daa
rcrb
in
insb
cli
aam
mov
add
inc
scas
nop
cli
cli
test
or
into
add
fisttpl
movsb
bound
xor
dec
and
sbb
mov
out
and
shrb
cmp
incl
or
mov
xor
cmc
dec
sbb
dec
jecxz
movsb
fwait
loope
movsb
add
dec
ss
add
lds
lcall
jne
add
jl
sbb
add
in
test
jg
loope
pop
push
add
jle
addr16
in
cmp
les
push
push
hlt
pushl
dec
cmp
dec
aam
mov
cmp
imul
fwait
push
rclb
add
or
push
imul
outsb
rorl
and
add
das
aam
rclb
adc
scas
sbb
push
mov
rcl
and
rcrb
mov
inc
stos
push
js
data16
ss
pusha
jl
sub
jns
lods
incl
popw
xchg
sbb
and
fildl
rclb
cld
pop
fs
mov
lahf
push
iret
push
cld
and
dec
and
popa
pop
mov
lret
and
push
loopne
jo
les
add
lcall
jl
lcall
cwtl
sti
or
and
loope
je
fxtract
sti
add
mov
jbe
adc
mov
lret
mov
clc
das
orb
and
lcall
idiv
sbb
stos
xor
nop
push
mov
sbb
cmp
data16
fstpl
shr
or
dec
sbb
hlt
test
mulb
add
mov
insl
inc
jg
inc
pusha
adc
loop
sub
daa
add
nop
js
xchg
call
scas
aaa
xor
test
imul
nop
push
ret
mov
xor
or
mov
clc
cmp
hlt
mov
scas
addr16
jmp
add
or
mov
std
lock
add
loope
dec
std
add
inc
dec
js,pn
cmp
lds
jo
sbb
movl
es
xor
inc
pushl
std
arpl
enter
push
clc
stos
mov
out
ja
and
loop
xchg
shl
fdivrl
movsb
jl
aad
test
jle
xchg
cli
sub
mov
inc
clc
xor
sub
scas
mov
mov
cmpsb
and
loop
adc
leave
aam
mov
inc
add
xchg
mov
loope
or
cld
and
pop
imul
lahf
sbb
push
lahf
leave
jb
mov
sbb
idiv
std
fisttps
inc
les
add
inc
rclb
loope
pusha
jge
jno
inc
imul
push
dec
push
sub
mov
dec
lcall
dec
push
incb
mov
adc
icebp
pusha
ret
mov
ljmp
fucomp
cmp
mov
sbb
push
loop
sbb
push
out
das
xchg
xchg
repz
test
push
sahf
outsb
push
ds
ljmp
cmp
and
push
xor
pop
pop
cmpsb
jbe
bnd
cli
push
add
mov
add
stc
icebp
call
hlt
mov
adcb
mov
fldl
aad
add
cmp
or
jmp
jmp
or
push
arpl
jecxz
push
add
clc
std
sbb
popa
dec
into
add
test
mov
pop
push
sbbb
sar
sub
bound
add
mov
cld
mov
cmp
shll
cmp
bnd
mov
add
in
out
cld
sub
push
sbb
adc
shl
hlt
mov
in
cmp
inc
in
add
xchg
jg
inc
push
in
js
mov
xlat
mov
or
lahf
stos
clc
lds
out
arpl
sub
jno
fistpl
jge
or
inc
xchg
cmpb
mov
out
jge
sbb
cmp
ds
clc
scas
ds
lahf
mov
icebp
or
enter
aam
xor
lcall
out
sub
and
call
test
pushl
mov
pop
add
lds
int
rcrl
fistl
sub
loopne
enter
inc
cmc
decl
mov
xor
rclb
cltd
jg
sub
jge
shl
push
cmp
sbb
cmp
dec
bound
orb
push
loop
imul
popf
push
loopne
cli
jl
arpl
mov
jp
or
shlb
push
push
pop
jge
jns
inc
fwait
push
and
adc
scas
aam
test
test
adc
scas
jle
cmpb
ret
mov
mov
mov
aaa
and
rcr
and
xchg
scas
xor
cmp
int3
shl
scas
or
add
pop
loope
cwtl
push
insl
sahf
dec
add
in
mov
xor
daa
jmp
cwtl
repz
sub
jo
rorl
sub
xor
xor
rcrb
loope
push
jl
rclb
jl
adc
out
mov
sub
jg
push
mov
sbb
aam
insl
clc
ds
adc
add
mov
add
cmc
mov
push
ret
dec
push
push
cmp
jbe
shll
sbb
icebp
push
sub
leave
decl
inc
inc
mov
and
test
dec
cmp
ret
mov
pop
dec
aas
fs
loope
icebp
pushf
lea
movsl
movsl
call
mov
add
push
roll
js
aas
sub
mov
pop
add
jl
pushl
mov
sub
sarb
cwtl
xor
and
dec
sub
int3
mov
inc
rcl
movsb
push
add
dec
and
pop
movsb
mov
pop
pop
pop
push
jl
clc
rcll
shll
mov
daa
add
xor
mov
fbld
fdivr
sbb
or
mov
fcmovnu
fidivrs
pop
xor
push
push
jle
enter
loop
ficoml
fs
mov
je
sub
lock
xlat
push
outsb
sub
mov
mov
and
xor
mov
jp
push
xor
jmp
dec
and
mov
adc
sub
cmp
jb
or
xor
mov
loop
movsl
outsl
mov
into
mov
in
mov
inc
mov
cmp
lahf
or
cwtl
jne
test
or
hlt
movsb
decb
jno
test
sub
aam
lods
mov
push
cld
or
adc
rcll
jmp
or
pusha
call
xchg
inc
xchg
pop
or
stos
dec
jb
push
inc
btrl
loopne
xchg
negb
in
repnz
in
jbe
dec
mov
repz
sarb
xchg
imulb
loope
clc
push
cmp
push
push
fcmovbe
mov
subb
in
fsubl
aaa
cwtl
aad
jmp
mov
mov
and
imul
popa
and
gs
js
pop
daa
fisttps
mov
ret
pusha
cld
mov
xchg
cmp
rorb
push
inc
loopne
test
push
mov
push
lods
push
int
add
sub
push
mov
nop
xchg
lock
jl
sbb
mov
roll
dec
jb
sbb
mov
hlt
pushf
push
mov
inc
push
scas
shll
push
cmpsb
mov
xchg
pop
inc
xorl
lock
jno
in
popl
popa
and
aaa
or
jae
sbb
dec
aas
scas
imul
mov
mov
push
aam
push
clc
sbb
arpl
loope
fs
adc
fbstp
pop
pop
leave
dec
push
cmpsl
sub
stos
mov
jle
mov
mov
push
cmp
adc
loopne
pop
xchg
idivb
adc
mov
int3
adc
nop
ds
mov
call
add
cmp
jno
out
inc
xor
stc
scas
insb
and
movb
bound
pop
mov
jecxz
sbb
add
sbb
loope
pushf
test
in
cmp
cld
insb
push
mov
decl
add
shll
dec
push
lock
aam
pop
sub
movsl
pop
mov
sbb
shl
mov
add
mov
cwtl
lods
push
mov
pop
scas
cmpsb
mov
pop
pop
out
push
notl
mov
inc
cli
or
bound
jp
pop
xor
cmp
mov
add
xor
xchg
aad
cld
and
rcrb
adcb
negb
negb
pop
mov
ljmp
test
shrb
or
cli
enter
mov
aaa
pop
push
sti
xchg
ja
enter
and
icebp
js
sahf
adc
push
or
mov
imul
sbb
cmp
or
dec
clc
cmpsb
xchg
add
adc
mov
inc
mov
test
inc
jecxz
addl
fwait
stos
sbb
mov
inc
jae
loopne
scas
clc
pop
out
cmp
test
divb
rclb
cmp
jmp
jne
gs
push
sbb
mov
filds
fbstp
xchg
inc
subl
xor
lods
cmp
je
hlt
lea
std
movsl
cmpsl
and
mov
dec
pop
xorb
pushf
pop
mov
popa
jg
pop
scas
or
ss
sbb
pushf
sbb
pop
jg
adc
fbstp
int
jp
movsl
push
sahf
add
xlat
add
xchg
pushf
mov
loope
lahf
mov
mov
or
and
sarl
jbe
mov
add
jmp
push
sub
cmpsl
add
rorb
jl
and
xor
aas
sub
cltd
ret
mov
bound
or
pop
inc
cmp
sbb
push
xchg
lock
fcomp
mov
mulb
jae
mov
je
xor
mov
mov
xor
or
clc
cwtl
out
es
ret
lcall
insl
mov
out
jnp
mov
add
fcmovbe
xchg
mov
dec
loopne
scas
mov
call
fucom
xor
subb
data16
push
sub
jmp
dec
lea
cltd
sbb
jno
push
add
dec
dec
lea
andb
jne
cld
pop
lcall
xlat
adc
inc
jno
xor
loop
inc
sub
scas
mov
push
cmpsb
loopne
mov
jmp
sbb
cwtl
and
loop
mov
xor
addb
cltd
imul
pop
or
mov
lock
sub
lcall
adc
lds
jbe
pop
mov
outsl
outsb
or
aam
jle
jp
pop
fldl
fmul
fwait
and
pop
dec
or
outsl
and
negb
popf
inc
mov
pop
add
add
or
jbe
scas
ljmp
cmp
or
and
lods
adc
mov
push
call
ret
mov
add
dec
mov
repnz
std
sarl
call
inc
lods
xchg
and
push
and
xchg
add
inc
imul
push
mov
or
test
add
cli
mov
jb
ficompl
xchg
stos
call
cmpsb
mov
xor
or
les
scas
xchg
xor
hlt
stos
mov
xor
or
ret
pop
addb
xor
mov
cmp
ror
mov
mov
subl
and
mov
stos
pop
cmpsl
int3
hlt
pop
pusha
sarb
push
xchg
inc
movsb
sbb
ja
sub
push
mov
dec
fwait
in
ja
movsl
popa
xchg
mov
push
repz
cltd
loop
mov
fisubs
and
jg
inc
popf
sbb
movsb
pop
mov
mov
push
and
or
les
mov
jnp
cs
adc
clc
or
js
mov
mov
js
call
rcrl
or
loop,pn
push
adc
jnp
shrb
popf
jl
inc
ss
test
cmpb
jmp
outsl
sbb
jg
add
orb
push
test
push
shr
xchg
push
in
loop
ja
add
lahf
in
imull
aas
imull
outsb
clc
decl
dec
arpl
push
lcall
imul
or
cli
mov
add
movsb
sbb
aas
jg
addb
lret
xor
jo
enter
inc
fisubl
push
pusha
hlt
aas
leave
push
cmpsb
sub
loopne
pop
je
test
data16
jo
ljmp
shrb
mov
cmp
jle
loopne
push
xchg
sub
inc
jb
cs
ds
aaa
mov
lret
shrb
repz
sub
fmulp
xchg
fistl
sbb
add
mov
mov
or
jbe
clc
nop
mov
or
cmp
scas
bound
out
adc
add
bound
das
cli
mov
iret
cmpb
repz
lods
push
lret
xchg
xor
in
incl
add
jl
adc
mov
cld
push
fistpl
pusha
inc
sbb
incl
xchg
inc
mov
imul
hlt
adc
xchg
scas
aas
xor
clc
or
sbb
insb
lock
and
ret
lock
idiv
mov
jp
xchg
adc
mov
sbb
clc
or
adc
es
xchg
sti
rcl
call
jno
hlt
cmp
or
or
xchg
in
das
ret
xor
ret
or
sub
movb
icebp
fadds
inc
mov
fidivrl
cmpsb
mov
decl
sarl
pushf
mov
xor
xchg
clc
jg
sbb
pop
cmp
xchg
inc
loopne
outsl
lods
mov
jb
out
scas
andb
decl
shl
mov
mov
test
jle
xor
add
out
pop
mov
mov
cld
lock
inc
pop
push
adcb
cli
xor
clc
pop
call
adc
jl
cwtl
xor
jecxz
push
mov
mov
cmp
jp
or
hlt
ret
cmp
imul
pop
mov
cmp
lock
mov
jae
xor
dec
icebp
or
rcrl
cwtl
aam
mov
cli
push
mov
push
and
pusha
faddl
and
push
bound
cmp
and
xchg
nop
push
push
dec
jg
incb
adc
mov
int
inc
stos
sbb
leave
inc
sub
sub
adc
rcrb
and
mov
adc
mov
rclb
sbb
adc
aam
xor
or
aas
mov
sub
call
xchg
mov
cmp
mov
add
mov
lods
icebp
addr16
or
or
cltd
shrb
decb
popf
cmp
int3
lcall
mov
decl
daa
jmp
dec
sbb
jle
scas
in
mov
dec
cmp
xor
ss
sbbl
sub
ret
adc
testb
sbb
dec
mov
hlt
aas
xor
mov
and
rol
mov
cmp
pop
mov
mov
ja
es
icebp
lea
jb
cmovbe
push
push
outsb
mov
xor
subb
push
xor
mov
mov
and
cmpsl
ret
jmp
sub
sbb
push
push
ja
dec
push
into
jb
mov
aam
clc
dec
cmp
lods
aad
enter
divb
shr
or
push
mov
sbb
mov
sbb
or
sbb
cmp
xor
mov
cli
shll
xor
loopne
cmpl
in
add
test
mov
aam
lock
ss
jp
push
aad
adc
sub
mov
xchg
lea
cmpsb
movsb
es
ja
add
mov
clc
out
lahf
or
into
dec
loopne
pop
cli
lods
incl
pop
pop
add
test
jnp
clc
push
sahf
rolb
out
lret
lcall
test
xchg
popf
push
or
cld
sar
fistpll
cmp
push
cmp
fs
test
add
or
lahf
push
ret
dec
adc
mov
imul
inc
xchg
or
push
popa
mov
push
xor
sbb
cs
mov
cli
clc
add
popa
push
pushf
mov
cmpsl
mov
movsb
lods
dec
dec
pop
es
xor
pop
gs
xorb
xchg
mov
sbb
inc
pushf
adcl
call
cmpb
pop
xchg
lds
mov
nop
xchg
inc
mov
mov
int
mov
mov
mov
push
xchg
call
and
fwait
icebp
je
cwtl
mov
pop
cltd
or
add
std
sub
stos
lret
psubw
push
or
sahf
bound
cmpsb
test
cs
xchg
xchg
and
xchg
cld
popa
adc
pop
or
xchg
andb
mov
add
es
sbb
pop
decl
jns
mov
add
add
mov
fsubrs
mov
lret
or
lods
mov
push
jmp
hlt
xchg
pop
rorb
jge
mov
fbld
and
inc
out
jmp
or
lock
jno
call
mov
inc
cmpsl
sub
dec
incl
ret
sbb
push
fstl
adc
out
mov
jle
shr
jno
jmp
mov
fiaddl
jg
lahf
push
mov
inc
rcrl
out
pop
outsl
pop
rcr
dec
enter
dec
loopne
loope
push
aam
jp
add
jnp
push
xchg
push
andb
xorb
push
or
jnp
loopne
or
xchg
mov
adc
cmpsl
mov
ret
sbb
dec
xchg
test
dec
cmpsl
fisubrl
pop
shll
imul
xchg
stos
jge
dec
inc
sar
scas
sbb
push
int3
addl
lods
cmp
aas
jb
ja
or
ljmp
data16
xor
adc
loop
pop
das
clc
mov
jb
mov
lret
cmpsb
ljmp
mov
push
pop
or
rclb
rolb
push
sbb
rcrb
fldl
pop
pop
adc
xor
mov
push
std
add
sbb
cmp
xor
dec
pushf
ds
inc
push
stos
push
dec
divb
push
jle
dec
jecxz
mov
test
jne
iret
rolb
push
xchg
fstpt
ror
mov
mov
adc
scas
mov
lcall
cmp
push
cmc
mov
mov
insb
pop
push
adc
lret
pop
sub
nop
mov
lods
or
cli
inc
or
mov
lahf
cmp
mov
hlt
ja
adc
in
js
inc
addr16
cwtl
pop
shlb
aam
dec
lahf
fiaddl
aaa
pop
push
in
dec
mov
mov
jbe
and
shlb
in
mov
dec
sarb
xor
push
clc
mov
cmp
dec
cli
and
cld
hlt
jno
cwtl
clc
add
jbe
mov
dec
rcrb
mov
insl
inc
aad
inc
ret
rorb
sbb
jbe
je
adcl
jg
mov
test
mov
mov
and
icebp
outsl
cli
jmp
cld
add
ds
sar
fcomp
lret
push
mov
jg
incl
out
mov
mov
mov
mov
pop
cli
shll
ficomps
cmpsl
xchg
cmpsb
es
test
out
mov
mov
negb
imull
inc
in
sub
adc
pop
nop
cli
daa
dec
sahf
and
addr16
mov
or
lods
cli
mov
cmpsl
loopne
sti
xchg
add
cmp
rcrb
dec
loopne
jg
mov
pop
es
push
mov
or
dec
outsl
mov
or
push
arpl
clc
ja
sbb
and
and
adc
mov
and
pop
adc
pushf
aad
iret
mov
je
mov
cli
rcll
pushl
pop
adc
ja
mov
inc
roll
inc
adc
jb
push
outsl
add
sub
in
dec
das
xor
mov
mov
addl
js
add
out
clc
je
mov
sub
aaa
pop
shlb
orb
out
inc
movsl
sub
into
mov
sub
jge
sub
add
gs
pop
mov
add
inc
push
jg
out
and
in
out
test
nop
push
icebp
add
jo
clc
mov
lods
jb
std
push
mov
lcall
push
xor
adc
jb
cmp
cld
es
push
jmp
xchg
lret
repz
ljmp
adc
adcb
into
and
push
jg
aaa
std
or
push
sarb
and
jmp
rcrb
daa
mov
lock
outsb
dec
inc
mov
adc
inc
sub
inc
add
enter
push
pop
inc
std
cltd
rolb
cmp
pop
pop
jne
clc
sub
add
xor
xrelease
inc
imul
push
fimull
jae
mov
sbbl
sbb
mov
andl
inc
dec
pusha
stos
adc
incl
clc
or
pop
lea
push
jmp
fisubrs
stos
lods
sti
or
loope
inc
jnp
hlt
sub
and
lock
cwtl
dec
mov
mov
into
and
call
int3
test
fiadds
repz
enter
and
sahf
and
xchg
or
add
nop
rcrb
adc
and
lahf
or
nop
xchg
stos
aaa
jnp
xchg
psubusb
add
add
add
test
sbb
test
add
push
std
xor
imul
movb
mov
lock
fdivrp
jae
fidivs
and
rcll
mov
rcll
pop
jg
lock
adc
inc
jno
inc
aad
push
or
or
mov
inc
int
pop
inc
or
in
ja
add
paddd
shrb
cmpsb
testb
dec
mov
out
xor
div
inc
inc
push
mov
test
inc
mov
jp
outsb
xchg
dec
push
sub
jns
mov
sub
and
rol
adc
das
mov
mov
repnz
decl
mov
xor
inc
add
jno
and
xor
es
jle
xchg
shl
sbb
test
popfw
add
adc
cmp
cli
dec
sarb
jmp
mov
and
xlat
test
repnz
xchg
scas
js
inc
mov
and
or
pop
dec
imul
lods
jecxz
movsl
stc
and
or
inc
test
dec
mov
inc
jb
adcl
fidivrl
xor
xchg
cmp
test
iret
cmp
or
nop
cmp
fstpt
call
or
xor
push
and
addb
jg
shlb
mov
popa
ret
stc
aad
xchg
jg
and
sub
in
or
out
push
shlb
insl
xor
rcl
adc
int3
dec
inc
cmpsb
das
rorb
jecxz
aam
sti
sbb
xor
arpl
xchg
push
imul
cltd
push
sbb
xor
aas
movsl
pop
into
stos
insw
lea
xchg
stos
cmp
push
loopne
cmp
outsb
cli
insl
jl
mov
cmp
cmp
je
mov
and
sbb
fsubrp
data16
test
fistpl
xor
es
ja
stos
inc
and
mov
push
or
iret
and
fcmovb
enter
lcall
lret
out
push
shl
imul
dec
out
push
mov
incl
xchg
test
xchg
rolb
lcall
test
test
loop
dec
or
sub
or
pop
rolb
sti
in
add
imul
sbb
push
push
cli
cmp
adc
insl
mov
cmp
mov
rcl
in
xor
dec
push
sahf
or
mov
adc
pop
mov
inc
shr
xchg
and
mov
data16
cmp
dec
cli
test
adcl
out
mov
push
fistl
out
add
ljmp
nop
cmpsl
xchg
cmp
dec
ficoms
scas
popa
pop
mov
fistps
dec
xchg
addr16
scas
and
sbb
addr16
ret
add
inc
mov
adc
inc
and
adc
js
or
dec
ss
add
xor
fidivrs
sbbl
stos
or
mov
cmc
or
mov
roll
mov
adc
aam
mov
jecxz
arpl
push
push
add
movsl
xlat
pop
cmp
inc
xchg
sarb
cmpsl
jg
fsubp
rcr
es
pop
rorb
sbb
ds
test
mov
cmp
test
adc
nop
and
fists
and
inc
add
sbb
cltd
rorb
test
and
push
add
pop
divb
inc
add
inc
cli
nop
mov
test
mov
push
jbe
adc
adc
adc
and
shrb
adc
or
nop
adc
and
and
adc
mov
or
cld
adc
dec
inc
adc
and
inc
xchg
out
nop
inc
test
or
push
nop
inc
push
addb
ljmp
in
mov
jbe
and
and
imul
pop
adc
add
add
sub
push
ficompl
clc
or
jo
inc
or
inc
data16
and
sub
and
sbb
inc
add
mov
int3
add
pusha
inc
and
adc
xor
or
cwtl
nop
mov
pusha
jbe
and
pop
int3
push
xorl
and
adc
adc
ss
and
add
adc
add
es
sub
adc
mov
and
int3
push
push
adc
mov
or
and
inc
add
push
je
xor
xor
xor
cwtl
je
sbb
cs
or
adc
dec
adc
mov
fabs
fstp
or
add
or
mov
and
or
push
mov
mov
imul
push
and
mov
push
and
scas
cltd
adc
mov
adc
push
dec
mov
xchg
push
adc
data16
sbb
sbb
test
or
adc
sbbl
mov
or
cmp
jl
dec
inc
push
add
enter
int3
adc
pusha
push
xor
test
xor
xor
int3
and
adc
inc
mov
or
sbb
sbb
pushw
and
or
inc
mov
test
or
jae
insb
fs
sbb
inc
shll
cwtl
nop
inc
pusha
push
push
or
movb
fcoms
inc
enter
adc
inc
ds
inc
test
lret
mov
jbe
adc
inc
and
int3
add
add
rolb
push
or
ss
xchg
adcb
or
addl
mov
jbe
adc
push
faddl
xor
pop
addb
inc
into
cwtl
cmpsb
sub
add
mov
addb
adc
ret
popa
or
jle
or
ds
js
shrb
push
or
mov
loope
nop
add
ss
pusha
jo
push
ljmp
insb
addb
mov
cli
andb
jbe
popf
push
add
push
insl
shrb
or
cmp
addr16
enter
add
adc
jl
dec
insl
push
dec
sbb
hlt
mov
jb
inc
jnp
cmp
xor
and
dec
add
insb
nop
jp
ret
dec
insl
adcb
push
pop
inc
popa
jo
sarb
enter
mov
mov
jmp
xchg
adc
or
inc
mov
in
popa
data16
add
sbb
popa
or
add
adc
pusha
cmpsb
xor
add
pop
cwtl
ret
fsubrs
cmp
cwtl
lret
sahf
lock
cmp
inc
fsubl
xchg
push
cmp
push
test
push
mov
adc
dec
nop
xchg
jns
fsub
into
dec
sbb
inc
inc
es
fdivp
faddl
pusha
popa
repnz
loop
jbe
cli
mov
repnz
lcall
lock
repnz
test
jmp
add
mov
pop
movsb
test
cltd
loop
pop
fisubrl
enter
data16
dec
std
insb
inc
in
imulb
inc
xor
cmpl
cld
cli
mov
cld
or
in
adc
add
into
insb
enter
add
in
and
dec
xchg
rolb
cmp
inc
push
mov
dec
mov
dec
pusha
xchg
push
cmp
dec
fs
add
sub
xor
or
fdivr
jp
sarb
or
xor
pop
mov
popa
adc
addb
andb
or
pusha
insb
pop
sub
xor
aam
push
jbe
adc
cmp
int3
push
or
mov
ror
test
lock
imul
bound
in
hlt
mov
mov
and
adc
sub
cmp
push
icebp
cli
test
mov
test
not
push
and
daa
aaa
cmp
xchg
inc
adc
leave
dec
pusha
in
fcmove
nop
dec
test
sbb
pushf
mov
fcomps
loopne
sbb
sbb
inc
cmp
add
inc
push
or
pop
adc
out
and
call
orl
mov
mov
shll
sarb
sub
andb
sar
mov
adc
popa
adc
or
xor
adc
add
pushf
add
out
int3
inc
out
inc
nop
mov
sub
loope
orb
gs
popf
mov
mov
scas
mov
mov
and
push
stos
adc
push
or
jp
outsb
fs
dec
ss
push
pushf
in
lock
loop
daa
mov
mov
pushf
mov
push
sub
jo
xor
rorl
int3
xor
cmp
addb
jmp
out
xchg
ds
push
data16
mov
cmp
add
cmp
rorb
and
and
fsub
rclb
or
push
or
cmp
cli
andb
in
push
cs
sbb
repz
sub
repnz
movsb
in
pusha
lea
push
push
in
inc
dec
pop
xchg
sub
bound
fisubs
jg
push
inc
lods
test
insb
pop
int3
and
xor
xchg
inc
sub
jle
nop
sbb
and
nop
cmp
fcoms
repnz
loope
adc
add
xchg
mov
movsl
iret
outsb
mov
sub
adc
inc
or
adc
xchg
inc
inc
in
xor
test
jle
ds
and
pushf
mov
mov
sbb
add
fs
xor
or
lods
pop
inc
and
mov
cmp
pop
loop
push
mov
fdivp
fsubl
and
or
aam
dec
dec
xor
cs
or
nop
inc
out
or
push
rclb
adc
sbb
and
notb
add
sub
or
sub
stos
sbb
aam
inc
xor
xor
or
cltd
adc
and
nop
xchg
mov
mov
xchg
mov
es
and
shl
mov
mov
adc
mov
xchg
cltd
dec
addr16
sahf
mov
mov
mov
loopne
xor
xchg
mov
lock
cmp
nop
cwtl
dec
out
push
add
loop
push
mov
push
push
xor
aam
jo
mov
ret
dec
and
sub
imul
and
mov
lret
mov
dec
and
and
andb
inc
push
testb
and
push
lds
cli
adc
and
xor
xor
push
in
pop
xor
inc
mov
hlt
test
and
add
or
sbb
addb
je
or
aaa
push
lcallw
addl
cmp
cmp
mov
xchg
and
push
mov
push
push
adc
bound
add
push
out
adcb
mov
or
jbe
mov
lret
and
mov
add
pop
inc
and
mov
inc
popa
stos
js
pop
fcmovbe
dec
int
adc
push
and
xchg
push
data16
or
je
and
into
test
xchg
push
ret
dec
mov
pop
or
and
jge
add
sbb
inc
loopne
insl
and
out
xor
nop
outsb
inc
ljmp
cmp
dec
sub
cs
lds
lock
popf
lcall
ficoml
mov
scas
mov
enter
enter
and
add
mov
test
add
in
shrb
test
fsub
fsubs
xchg
adc
jp
and
cwtd
sbb
and
xchg
push
add
jnp
les
or
call
sbb
mov
dec
xor
bound
jp
mov
cmpsb
loope
xchg
sub
sbb
pop
lds
add
adc
push
xorb
sarb
pop
mov
mov
pop
js
cmp
push
pusha
inc
sbb
and
push
push
xchg
push
add
ljmp
push
pop
cmp
push
jle
outsb
jo
cs
dec
cmp
cli
data16
or
jmp
je
loop
sahf
sub
xchg
push
dec
test
sbb
jo
cli
and
inc
lock
ret
inc
int
ficoms
adc
shll
sub
rorb
dec
adcb
in
jo
mov
xchg
testb
fmul
outsb
adc
mov
cld
fisubs
xchg
dec
pop
sbb
test
lock
pop
cltd
sub
push
mov
ljmp
dec
add
add
or
lret
adc
pop
mov
push
or
hlt
sbb
lcall
xchg
cwtl
notb
dec
out
xor
xchg
cmpsb
out
push
loopne
imul
stos
cld
add
int3
je
loopne
lcall
pusha
dec
call
mov
sbb
and
data16
inc
daa
jae
ds
test
add
rorb
loopne
sbbb
mov
shlb
ljmp
mov
cmpsb
imul
add
out
rcll
adc
add
sbb
mov
daa
add
cmp
jae
push
jne
js
jp
int
out
jge
add
dec
push
dec
add
pusha
add
addb
insb
ss
inc
test
inc
mov
dec
fwait
int
mov
dec
xchg
dec
xchg
dec
xchg
dec
cltd
dec
mov
insb
ss
push
sahf
push
mov
fwait
int
cmpsb
push
test
stos
pop
lods
pop
mov
data16
insb
mov
mov
mov
ss
int
bound
gs
push
int3
imul
je
ja
add
jp
mov
cmpsl
xor
sub
int
shll
push
test
xchg
mov
insb
xchg
mov
lea
lea
ss
int
nop
pop
xchg
pop
xchg
pop
xchg
pop
pushf
or
dec
imul
movsl
mov
data16
mov
mov
scas
mov
mov
test
into
lea
or
sub
sub
or
jle
insl
mov
ss
aam
push
or
fcmovne
insl
mov
outsb
or
gs
addr16
push
ss
imul
insl
aam
insl
sti
pop
mov
jo
xlat
jno
jecxz
jb
out
je
out
inc
push
repnz
call
in
aam
div
out
add
call
out
jmp
add
in
fdivr
bnd
hlt
js
cld
hlt
shrl
mov
push
testl
stos
lcall
mov
retw
mov
mov
int3
mov
sarl
mov
xchg
xchg
outsb
addr16
mov
cmpsb
cli
lods
sti
mov
fwait
int
mov
ret
fcmovnb
faddp
add
jecxz
out
push
out
es
shr
pop
cs
fcomps
les
sub
stc
int3
add
lock
add
repnz
add
cmc
filds
mov
repnz
neg
loope
cli
cli
jecxz
cld
in
test
jmp
push
call
ja
add
or
daa
es
stos
add
xor
sbb
sbb
push
adc
popf
insb
jg
pop
je
js
add
xchg
jp
jne
pop
add
les
ja
add
sub
pop
adc
scas
mov
and
pop
add
mov
pop
maxps
lea
xor
and
push
or
dec
dec
xor
add
add
or
push
dec
pop
dec
xor
insl
adc
pop
or
mov
aad
xor
subl
or
jg
insl
enter
push
pop
pop
aas
push
mov
pop
sbb
pop
push
aas
out
loope
push
aad
dec
lcall
xor
xchg
aas
ljmp
nop
or
inc
in
sbbb
js
jo
imul
adc
pop
and
add
fists
push
mov
cltd
mov
mov
jb
jae
pop
push
push
push
push
arpl
paddsw
lea
add
pop
xchg
popa
cmp
push
mov
jb
fcmovbe
jge
and
sbb
and
pop
pop
mov
bound
aaa
negl
dec
push
daa
add
or
dec
jae
add
popf
jne
sbb
jb
stc
scas
pop
sub
sbb
pop
jb
or
repnz
pusha
daa
inc
pop
sub
sbb
outsl
das
fcomps
push
ja
inc
pop
sub
ficomps
mov
pop
inc
fnclex
rcrl
sbb
sbb
pop
fisubrl
xorl
mov
pop
sub
jg
ja
cmp
pop
outsw
mov
test
pop
sbb
push
inc
inc
aas
outsl
jnp
jle
pusha
cmp
aas
ljmp
adc
push
ja
ds
mov
popf
ja
pop
cmp
pop
jg
ja
push
push
pop
aas
popf
shll
cmp
pop
insb
lret
pop
mov
cwtl
lcall
sbb
mov
xchg
xchg
cltd
fwait
pushf
sahf
daa
je
lcall
mov
dec
adc
adc
addb
xorb
insl
insb
imul
addr16
push
inc
pop
cmp
mov
arpl
pop
push
inc
es
cmp
add
pusha
pop
pop
push
aas
add
lcall
pop
pop
pop
dec
cmp
stos
and
pop
pop
pop
pop
dec
xor
jb
xchg
xor
repz
dec
or
or
pop
or
sub
jg
pop
sbb
pop
aaa
add
aas
add
and
adc
inc
add
jmp
call
sub
adc
cs
add
aaa
push
add
cmp
enter
pop
add
cmp
jg
sbb
push
outsb
insl
jg
pop
push
and
add
inc
popa
add
ja
dec
jle
mov
pushf
es
mov
add
push
inc
and
push
dec
jns
imul
pop
push
jbe
jge
jns
enter
outsb
mov
dec
test
push
addb
mov
pop
nop
jbe
mov
add
pop
xchg
daa
pop
xchg
add
pop
xchg
add
push
arpl
sub
fwait
xchg
push
xchg
push
push
outsb
lcall
jno
std
outsl
call
add
jns
xor
add
jp
ss
add
cmpsb
mov
stc
test
inc
jno
js
inc
jge
or
mov
mov
add
mov
jg
mov
sbbb
neg
dec
mov
push
mov
inc
xorl
jg
lea
add
mov
xchg
rolb
dec
xchg
lds
cld
pushl
add
add
roll
pop
stos
aam
push
stos
fldl
cmpsl
les
cmpsb
outsl
in
pop
fsubl
lret
into
mov
add
ficoml
mov
push
loopne
decl
pushl
add
add
in
push
filds
jno
in
add
mulb
incl
outsb
leave
repnz
repz
push
ja
incl
sbb
fdivs
xchg
test
inc
rolb
push
xchg
xchg
push
nop
cltd
push
sbb
push
xchg
xchg
push
xchg
xchg
les
popf
cwtl
es
cltd
std
mov
fs
test
xchg
lcall
pushf
outsl
mov
mov
cmpsb
lahf
test
add
mov
mov
outsl
cmp
add
push
stos
test
stos
cmpsl
push
mov
lods
scas
add
lods
cmpsb
add
scas
out
mov
mov
mov
or
mov
push
enter
ss
sbb
fmulp
mov
iret
mov
insl
out
push
sarl
lret
mov
iret
mov
lods
mov
lods
jbe
sahf
lret
outsb
mov
push
push
rol
iret
ret
scas
jle
std
lds
int
mov
fcmovb
fcmovne
mov
rol
jg
dec
pusha
push
int
rolb
aam
add
fstpt
fiadds
sbb
xchg
push
out
imul
xchg
sahf
cli
mov
lahf
out
mov
lret
lret
fcomi
insl
int3
leave
out
enter
int
fmul
push
ror
lret
rcr
int
outsl
es
push
aam
add
fcmovu
xlat
rcll
flds
fnstsw
push
in
outsb
out
roll
fstpt
loop
int3
cs
push
insb
push
jmp
mov
fstl
pop
jbe
fnsetpm(287
fstl
add
fstp
add
loope
add
loop
in
push
jle
jns
jecxz
in
jmp
loop
add
jecxz
push
push
hlt
mov
stc
out
imul
aad
in
icebp
ss
sahf
cs
out
push
repnz
cmp
jbe
push
fdiv
std
add
jnp
out
add
in
in
in
jecxz
loop
out
ljmp
push
div
es
mov
call
or
imul
cli
out
push
idiv
push
mov
repnz
cld
hlt
dec
push
nop
xchg
xchg
or
rol
xchg
ficoms
fwait
popf
fstl
xchg
xchg
xchg
add
adc
xchg
xchg
ss
push
imul
xchg
mov
add
pushf
cltd
sub
and
add
add
adc
fsts
mov
call
fcom
xlat
jecxz
jecxz
fcomp
sub
fnstcw
rcl
fcom
nop
add
push
jbe
scas
test
push
test
rcl
shrb
outsl
mulb
rcll
xor
scas
test
xlat
sbb
add
fwait
test
lret
sub
jnp
notw
scas
rorb
xchg
imul
xlat
add
outsb
jbe
lahf
scas
fdivrs
jbe
sar
jne
mov
pop
scas
pushf
jge
imul
jge
negl
outsl
jge
scas
ret
sub
into
das
sub
std
ljmp
sub
pop
sub
or
aas
outsb
jl
sarb
insl
out
repz
mov
pop
int
or
or
sbb
xchg
adc
add
aas
ret
sub
push
sub
cwtl
std
lods
mov
or
ljmp
push
and
aaa
cmp
xor
sbb
mov
test
std
lahf
scas
shlb
pop
je
lods
std
stos
cmpb
pop
sti
inc
clc
adc
cs
rcrb
push
cmp
cmp
pop
subb
pop
call
adc
sti
incb
sbb
popa
pop
push
or
lahf
jo
in
decb
ucomiss
push
pop
sbb
push
sub
fs
sti
in
sti
mov
mov
ds
stos
stos
sub
mov
jmp
pop
sti
jmp
mov
pop
sbb
sbb
dec
pop
pop
jae
repnz
jmp
pop
pop
pop
addr16
inc
cmp
dec
pop
ljmp
dec
adc
cwtl
loope
adc
sbb
cmp
push
add
xor
sub
cmp
hlt
shrb
inc
sub
xor
xor
sub
stos
std
pop
mov
dec
push
daa
mov
mov
ret
ljmp
popf
out
imul
in
loope
in
rcrl
ret
xor
stc
std
in
decb
sub
lods
lret
and
loop
pop
jmp
shlb
mov
pop
std
lahf
fidivl
jecxz
shrl
mov
ror
movsb
pop
mov
stos
stos
mov
lds
shrd
data16
mov
jge
xor
add
addr16
aad
ja
cltd
sub
aaa
mov
loope
mov
fucomi
mov
or
rol
out
mov
icebp
out
mov
std
addr16
lds
icebp
jecxz
sarb
or
inc
mov
jmp
les
push
int
mov
enter
jecxz
mov
out
add
mov
mov
cs
out
cmc
out
sub
push
insb
pop
mov
out
into
lds
les
push
jl
jmp
aad
out
or
outsb
pusha
jnp
addr16
push
jmp
mov
ret
vpunpckhbw
mov
iret
mov
adc
sub
gs
imulb
mov
shll
sti
ffreep
popa
pop
aam
test
cmpl
mov
in
xor
pop
adc
fs
mov
push
fistps
jno
inc
jb
movsl
fucom
out
mov
cmc
pop
sti
mov
push
movsb
mov
mov
jae
push
push
inc
jae
ret
fwait
pop
in
mov
stos
testb
fcomip
clc
push
icebp
lock
movsb
andl
ja
push
sub
push
insl
ja
mov
lret
test
idivb
mov
sbb
sub
push
xor
js
mov
mov
and
enter
clc
mov
jo
in
sbb
or
pop
inc
ljmp
addb
mov
insb
filds
mov
xchg
dec
push
icebp
pop
addl
pusha
mov
xchg
fstpt
mov
mulb
scas
push
lret
movb
push
or
or
cmp
mov
js
sbb
push
adc
leave
pop
stc
clc
stc
mov
mov
cli
sbb
arpl
push
mov
cmc
jbe
js
pusha
push
push
add
cmp
push
mov
adc
stc
in
xlat
adc
sub
mov
mov
inc
mov
sbb
xor
adc
sbb
fucomip
mov
push
mov
stc
insb
or
not
mov
stc
mov
mov
aaa
clc
repnz
clc
cld
iret
fidivs
or
add
fistpll
dec
pop
sub
aas
ja
je
mov
std
es
sbb
lock
leave
movb
in
out
sahf
jnp
aas
int
push
add
xlat
fucomip
and
les
sub
in
push
push
dec
and
add
std
cmp
stc
mov
sub
mov
push
das
cmp
push
and
mov
mov
or
out
fiadds
das
or
and
inc
insl
pop
ja
adc
adc
xor
mov
adc
mov
adc
cld
std
ret
pop
jne
shrl
adc
pop
mov
add
lcall
enter
dec
and
push
push
or
add
mov
orb
rcrb
notb
rolb
and
add
jae
add
adc
pop
clc
sub
pop
cwtl
pop
jns
pop
push
jne
in
adc
syscall
sub
inc
les
les
push
dec
inc
les
add
shrl
or
sub
das
outsl
fnstenv
add
sub
add
and
xchg
mov
outsl
add
adc
das
scas
test
add
inc
aam
pop
inc
lcall
inc
popl
dec
xor
pop
popl
add
mov
jae
pop
inc
and
inc
fs
and
pop
inc
test
xchg
loop
mov
ud0
fisubs
adc
cmp
cmp
jle
dec
push
dec
add
pop
add
pop
cmp
in
add
ljmp
mov
add
into
ror
pslld
cmpsw
xchg
or
dec
push
xor
mov
dec
add
mov
lret
mov
repnz
push
mov
rcrl
push
negb
mov
mov
sub
adc
fcmovb
out
fdiv
and
add
stc
and
pop
das
ss
xor
push
cmpsl
add
movsl
adc
xor
pusha
add
or
pushw
inc
add
fistps
push
jbe
fildl
inc
shlb
mov
mov
push
add
cld
inc
add
sbb
fdivr
add
or
add
inc
mov
jns
arpl
add
addr16
push
or
jo
jo
ja
inc
out
or
or
xchg
mov
add
out
lock
lgs
add
iret
out
lock
iret
repnz
fucomp
xlat
and
subb
add
pop
push
in
cmp
cmp
lock
pusha
aas
fstp
out
ret
dec
push
or
or
inc
add
jle
pop
test
aaa
xor
cmp
jb
add
mov
sti
inc
sub
or
dec
mov
stc
and
in
or
lds
dec
inc
add
out
pop
mov
dec
movsl
decl
mov
sub
mov
push
dec
push
push
inc
mov
int
sub
dec
dec
pop
mov
pusha
add
movq
fwait
loop
jno
outsl
and
push
adc
pandn
lds
nop
fcomp
pop
shll
bound
mov
fistpll
in
mov
in
in
loopne
push
aad
jl
in
mov
mov
das
lret
xor
int3
mov
push
loopne
add
jnp
stos
mov
add
das
repnz
dec
int
test
push
fisttpll
fildll
test
daa
adc
cmp
push
inc
in
data16
sahf
push
xor
dec
pop
das
xor
push
sub
inc
lcall
xor
cs
cmp
mov
cmp
cmp
xor
pop
aas
pushl
pop
xor
in
insb
sti
inc
push
push
add
cmp
push
xor
mov
pop
aas
pop
mov
add
xor
add
pop
or
or
xor
out
jae
je
sar
mov
or
push
add
pop
arpl
or
insb
pop
mov
adc
adc
fs
push
jae
xchg
cmpsb
je
pushw
sbb
and
test
sub
sub
xor
xor
cmp
cmp
dec
jnp
les
inc
aam
jl
dec
pushl
add
incl
mov
test
and
xchg
add
movsb
shl
incl
xor
mov
ds
add
aad
pushw
cwtl
pusha
jecxz
add
mov
push
xchg
mov
push
lods
movsb
test
cmpsb
cltd
add
mov
aam
aaa
push
push
ret
add
rcr
aam
mov
inc
fsubp
fisubrs
sub
sahf
in
in
repz
repz
lea
xchg
subl
push
push
dec
xor
dec
dec
push
push
pop
outsb
jmp
dec
xor
adc
pusha
inc
dec
dec
dec
push
mov
outsw
sti
pushfw
add
inc
pop
push
dec
pusha
inc
bound
jmp
sbb
and
es
sub
xor
fstps
popa
push
sbb
sbb
mov
out
and
xor
xor
mov
mov
sbb
sbb
pop
pop
push
es
out
ja
dec
dec
pop
sbb
and
xchg
fldcw
das
popa
inc
pop
pop
sbb
into
and
pop
popa
pop
add
in
or
shll
sub
sbb
rcrl
or
into
popa
add
inc
pusha
add
or
inc
popa
lds
fldl
dec
popa
pop
roll
inc
rorl
add
shlb
sub
rcrb
and
adc
fs
pusha
push
dec
pop
xchg
sbb
and
fs
mov
and
pop
in
inc
sbb
shlb
pusha
and
cmp
push
rorb
xlat
push
arpl
and
dec
imul
shll
shrb
dec
inc
inc
pop
push
popa
repnz
pop
and
inc
inc
aas
adc
push
pop
fstps
popa
lods
les
fimuls
pop
dec
push
dec
pop
pusha
ret
test
push
pop
dec
and
fnsave
pop
add
les
push
jnp
add
pop
adc
or
fistpl
dec
mov
push
pop
pop
popa
push
or
sbb
sbb
sbb
sbb
lods
repnz
sbb
inc
pop
push
pop
js
dec
jg
or
pop
and
sbb
sbb
cli
push
pop
pusha
add
ds
cs
inc
lock
or
insl
pusha
add
fistps
push
adc
cmp
adc
or
sbb
or
mov
jnp
add
xor
je
stc
popa
dec
test
int
push
addr16
dec
pop
in
insl
popa
push
pop
sub
push
add
pusha
sbb
pop
fisubrl
adc
xor
mov
adc
add
cmp
sub
aaa
add
add
mov
insb
mov
jo
js
xor
int
int
cmp
jae
add
dec
jnp
add
das
add
add
mov
outsb
add
aas
add
sbb
push
xor
add
sbb
xor
jae
sub
jbe
jg
testb
add
add
push
add
push
ds
add
add
push
insl
add
pusha
and
add
dec
dec
test
dec
xchg
pop
pop
or
cmpsb
inc
insb
push
dec
jb
dec
cmpsb
fnstsw
mov
push
dec
adc
add
jbe
push
jae,pn
rorl
pop
jle
add
push
push
jbe
inc
fistl
cld
push
fmull
dec
add
dec
xchg
add
fidivs
out
incl
add
outsb
add
out
addr16
pop
imul
add
add
add
xchg
notl
cld
xchg
push
lea
pop
add
push
add
mov
push
cmp
sbb
mov
sbb
movsl
dec
sub
insl
push
mov
ss
cmp
mov
dec
loop
aaa
cld
mov
pop
add
pop
rcrb
push
and
lret
popa
mov
xchg
push
shrb
ljmp
mov
pop
xchg
add
push
add
jae
push
outsb
dec
iret
jae
jp
push
insl
or
jl
addr16
jp
adc
push
cmp
pop
mov
jnp
push
bound
push
add
ja
outsb
jge
push
mov
mov
decl
orl
mov
mov
jae
mov
andl
push
test
outsl
fcoms
out
in
jne
in
xchg
push
icebp
xchg
outsl
fildl
xchg
add
add
test
add
or
mov
addl
adcb
lods
lock
sbb
lahf
add
fs
xor
add
push
insb
fwait
call
add
js
push
push
jb
outsb
jns
mov
mov
dec
dec
jle
mov
pop
nop
out
mov
mov
arpl
je
mov
jb
cld
movsl
notb
xchg
add
mov
test
lds
add
int3
mov
mov
and
lcall
mov
into
mov
mov
shll
mov
pop
test
lds
xchg
pop
push
jg
sahf
push
pop
add
push
test
and
sub
filds
xor
aam
xchg
fiadds
push
xor
inc
stos
push
pop
mov
or
mov
leave
pop
enter
add
loop
pop
int
es
imul
je
aad
inc
pusha
shr
push
ljmp
add
mov
or
cmpsb
inc
mov
lcall
xchg
mov
mov
adc
movsl
data16
add
xor
in
xchg
sti
mov
mov
icebp
popf
push
rep
push
shll
mov
jle
enter
enter
into
add
out
sti
fildll
xor
movsb
flds
aad
jmp
mov
mov
push
shll
es
pop
movsl
out
lret
fcmovu
into
fcom
add
mov
jmp
push
fneni(8087
fbld
jmp
fiaddl
ss
repnz
cs
in
aaa
add
add
sti
cld
add
jl
jnp
jns
pusha
push
jmp
aaa
std
push
dec
dec
dec
inc
inc
xchg
inc
dec
push
pop
bound
pop
push
dec
inc
inc
inc
push
sti
aaa
std
mov
jle
jg
popa
pusha
push
dec
dec
dec
inc
inc
pop
repz
pop
inc
or
arpl
and
jg
dec
inc
add
add
aaa
xor
ror
mov
add
add
fs
pop
ja
pop
dec
dec
inc
inc
push
or
cmpsb
scas
lret
sub
push
aaa
mov
fs
dec
fisttps
popa
or
sti
adc
scas
into
scas
pop
dec
cmp
inc
dec
pop
pop
outsl
into
cmp
pop
sub
push
in
sub
xor
cmp
divb
cmpxchg
lds
sub
sub
or
xchg
mov
dec
pop
sysenter
inc
imul
mov
mov
nop
nop
pop
or
aaa
pop
mov
mov
jg
call
pop
jo
aas
xchg
or
sub
paddsw
mov
lea
roll
movw
lods
pop
lret
push
in
mov
std
fwait
mov
rcrb
cmp
add
lods
mov
das
in
pop
adc
cld
repnz
pop
in
lcall
sbb
xchg
mov
sub
mov
adc
add
rcl
pop
idiv
div
fdivl
sti
fcmovnu
loop
add
mov
sbb
call
aam
mov
mov
cmc
cld
cmc
test
outsb
das
xor
pop
dec
loop
int
test
adc
fistps
pusha
rcl
xor
mov
in
hlt
sti
out
fidivl
and
outsl
scas
loop
xchg
mov
adc
out
rol
push
ss
jmp
cmp
mov
lret
mov
or
in
arpl
jmp
xchg
pop
mov
mov
dec
and
test
idiv
mov
repnz
cltd
xchg
pop
pusha
mov
sar
iret
jle
pop
sbb
andl
loope
repz
stc
ljmp
cld
rolb
mov
pushl
and
sbb
in
loop
fdivl
pop
inc
cmovge
les
mov
push
and
loope
addr16
adc
out
mov
cwtl
sbb
add
xorl
pop
pop
cmp
addr16
pop
cmp
xchg
cmp
pop
mov
addl
cmp
aaa
stc
lcall
mov
dec
and
addl
bound
inc
push
xchg
add
ficomps
sbbl
pop
mov
pop
pop
mov
in
or
mov
adc
pop
es
sub
lret
xchg
mov
pop
pop
push
xlat
and
stc
xor
and
pop
mov
add
roll
pop
adc
mov
cltd
jg
movsb
popa
inc
xor
divb
pop
pop
pop
pop
insl
pop
insl
outsl
neg
movsl
mov
cld
popa
pop
dec
sub
lcall
sbb
add
das
inc
sbb
push
or
iret
push
pop
adc
ljmp
mov
mov
popa
adc
das
or
mov
adc
add
fnstcw
cmpsb
push
push
push
add
push
filds
or
add
add
push
jno
sub
scas
or
test
jno
mov
ja
push
pop
ja
int3
test
pop
lret
std
xor
mov
mov
out
mov
lret
cltd
cltd
test
add
mov
mov
pop
pushf
jne
pushf
pop
leave
inc
mov
dec
gs
cmpsl
adcl
xchg
mov
sahf
xchg
lods
test
mov
lret
daa
mov
xlat
xor
pop
int3
mov
lods
int3
sbb
add
inc
ja
adc
in
sub
lret
add
adc
unpcklps
sub
jmp
add
inc
dec
add
dec
dec
add
cmp
dec
xchg
inc
ret
xchg
and
popa
push
push
add
mov
mov
out
repz
mov
insl
ss
pushw
mov
es
mov
data16
xor
ds
mov
add
flds
pop
mov
fiadds
inc
mov
ljmp
dec
rorb
loop
pop
out
push
shl
push
ret
insl
pop
pop
les
out
dec
icebp
push
dec
fldcw
repnz
repz
hlt
pop
cmc
pop
neg
repz
movb
cld
add
es
push
cld
add
imul
insl
jle
outsb
lret
jb
jbe
push
jo
push
pop
mov
into
jo
push
jae
jne
ja
jne
insl
sub
push
jns
jle
push
js
push
jp
es
insb
mov
jge
jg
jg
fldcw
popa
testl
stc
outsb
cli
mov
sti
ja
xchg
lea
nop
ja
cld
incl
xchg
js
add
insb
dec
add
addb
stc
mov
pushf
fwait
incl
xchg
xchg
cltd
cltd
add
xchg
add
mov
test
xchg
add
push
mov
xchg
add
xchg
fwait
push
insb
incl
mov
pushf
mov
int
or
in
insl
or
mov
push
iret
push
sar
test
push
test
int
mov
push
xchg
xchg
mov
mov
mov
ss
rorl
pop
mov
pop
xchg
rolb
xchg
aad
xchg
xlat
xchg
push
xchg
xlat
mov
fldt
fcoms
ss
fcomps
cltd
int3
add
push
data16
push
mov
xchg
lcall
sahf
into
sub
jge
aam
cmpsb
aad
cmpsb
pop
jge
sti
mov
movsw
cmpsl
fcoml
cmpsb
stos
lods
dec
mov
pop
movsl
scas
fwait
int
dec
xchg
loop
mov
mov
mov
ss
mov
hlt
ret
int3
lds
xlat
int
out
imul
add
call
int3
ret
cmp
rcrl
inc
into
fcmovbe
mov
push
fnstsw
shr
fdivrp
lret
repnz
in
in
push
es
push
fistps
or
cmc
clc
add
push
stc
add
add
fadds
add
add
movsb
jb
pop
jno
bound
add
mov
mov
lret
pop
add
add
sbb
mov
out
popa
pop
mov
int
xchg
xchg
xchg
xchg
xchg
mov
stos
lods
lods
mov
mov
orb
or
xor
xor
aaa
cmp
cmp
jne
orb
incl
dec
jbe
js
jl
xorb
sbb
cltd
popf
popf
xchg
mov
addr16
inc
fwait
add
cmpsl
test
mov
mov
mov
scas
pop
ret
inc
fwait
inc
inc
dec
dec
dec
dec
jae
jns
jge
or
xchg
mov
idivb
xchg
mov
ds
fnsave
hlt
inc
xchg
pushf
fcom
fidivs
add
popa
test
sahf
mov
add
pop
imul
fisttpl
fwait
cmp
andl
lret
lret
lret
outsb
imul
fisttpl
dec
aas
popa
jg
mov
pop
mov
aas
mov
and
fwait
ss
popa
jge
xchg
outsl
pop
mov
leave
lret
insl
push
sar
sti
jnp
test
pop
push
outsb
or
daa
divb
cmpb
add
data16
or
cltd
notb
cmp
popa
ja
jle
add
cld
aaa
xchg
sbb
arpl
dec
in
repz
jae
mov
mov
imul
push
out
les
fwait
pop
pop
popa
pusha
pusha
push
pop
jo
in
cmp
js
mov
mov
xor
fs
cmp
aas
dec
fwait
jbe
mov
pop
fnstenv
add
pop
das
xchg
mov
popa
pop
xor
popa
inc
fwait
dec
daa
xchg
bound
int3
mov
add
aam
inc
fwait
dec
daa
xchg
pop
add
pop
call
pop
rol
lret
inc
fwait
dec
es
pop
cvttps2pi
pop
ret
movsl
or
pop
push
or
or
pop
fldt
cmpb
pop
push
call
xor
inc
fwait
inc
and
push
pop
mov
pop
add
scas
popa
insb
add
mov
push
shld
or
adc
adc
add
add
sub
sub
dec
push
push
push
push
adcb
push
addl
add
or
imul
push
mov
jg
mov
mov
call
out
sbb
pop
enter
lods
repnz
xlat
shlb
add
dec
ds
pushw
push
in
mov
dec
xchg
push
xchg
and
pslld
mov
outsb
jns
xor
xor
cmp
jo
addr16
and
addl
pop
loopne
xchg
and
aam
arpl
addr16
in
add
push
xor
fimuls
cld
add
sub
jo
push
aas
mov
jmp
adc
jae
add
je
ja
sar
mov
scas
sbb
pop
push
arpl
and
push
sahf
xor
xor
data16
iret
jae
int
call
add
adc
adc
add
and
and
and
xor
xor
sub
xor
sub
and
xor
inc
cmp
rcrb
push
push
dec
push
sub
inc
cmp
push
sub
push
fs
push
mov
fnstcw
inc
sub
push
inc
xor
fidivl
push
ss
push
and
push
xor
lods
insl
data16
adc
push
sbb
xor
inc
push
sbb
int
jnp
push
add
or
or
mov
and
inc
push
and
inc
add
and
cltd
out
ss
push
push
xor
or
or
ds
mov
fs
fidivl
arpl
and
inc
and
in
pop
add
pop
sbb
push
adc
cmp
push
stc
push
je
push
adc
jbe
mov
fnsave
sahf
add
cs
push
push
jl
pop
adc
cmpb
xor
mov
xchg
fs
jae
and
and
lock
xor
jae
or
mov
mov
mov
mov
sbb
push
test
or
lahf
aas
stos
xchg
ds
xchg
add
pushf
add
sahf
push
mov
fisubs
add
add
insl
add
scas
es
jnp
jno
lods
add
scas
push
mov
pop
mov
add
mov
mov
inc
xchg
int
or
push
push
mov
lcall
push
pop
outsb
adc
push
fs
push
fcmovbe
outsb
pop
imul
outsb
lcall
addl
mov
movb
add
add
xchg
in
push
mov
mov
push
and
cs
jecxz
jns
lret
mov
sub
repz
mov
xchg
out
and
stc
movsb
sti
cmpsl
pushl
fstpt
hlt
push
xor
inc
mov
movsl
mov
inc
mov
fs
cmpsl
xchg
lock
outsl
inc
mov
xchg
add
mov
add
mov
dec
cs
lret
fxch
lds
loop
roll
call
out
jns
mov
in
cld
cmc
out
div
push
sti
repz
inc
cwtl
add
call
add
mov
add
push
leave
xorl
mov
inc
lds
mov
popa
pop
sti
xchg
cmpl
fiaddl
popa
ret
add
mov
jnp
xor
pusha
add
ret
sbb
mov
inc
cmpb
lahf
test
sarl
mov
add
lahf
jbe
pop
popa
mov
test
jg
mov
add
popa
pusha
adc
adc
out
push
inc
adc
fwait
cltd
mov
movhps
stc
add
out
add
popa
jns
lahf
sahf
fwait
mov
or
lahf
xchg
repnz
cmpsl
mov
mov
lahf
out
inc
lcall
xor
ret
loopne
inc
sub
out
test
pusha
mov
nop
pop
mov
dec
dec
pusha
mov
shll
movsl
movsb
mov
mov
pusha
add
outsb
in
call
and
cs
pop
or
movsl
bound
es
push
push
and
mov
mov
pop
pop
pusha
add
sbb
dec
lahf
test
jo
and
test
popa
test
dec
xor
call
scas
cltd
sub
push
push
lahf
mov
or
sbbb
out
inc
pusha
push
mov
out
xchg
lahf
fwait
fwait
push
or
xor
dec
lahf
pop
lahf
ret
mov
push
inc
fs
adcl
pop
xor
inc
scas
mov
scas
mov
fucomi
jl
inc
inc
insl
mov
jge
push
push
mov
xchg
idivl
lcall
mov
mov
data16
jbe
jo
insl
addr16
aas
in
fdivrp
test
push
pop
pusha
pop
xchg
xchg
mov
outsb
stos
scas
add
push
stc
jl
pushf
mov
adc
lea
je
in
popa
gs
pop
dec
mov
addb
pop
sti
or
lods
fs
insl
push
pop
pop
pop
push
cwtl
fistpl
sbbb
pop
popa
add
aas
imul
fs
mov
mov
pop
js
lahf
pushf
jl
aas
cmp
add
scas
mov
std
pop
std
scas
test
cwtl
test
mov
test
sbb
cmp
imull
enter
test
pushf
pop
addl
dec
aas
cmp
mov
jle
scas
mov
mov
loope
in
popf
pop
ja
pop
nop
pusha
inc
pop
add
xchg
cmpsl
movsb
je
add
jge
dec
bound
cmp
pop
bound
pop
pushf
add
in
inc
pop
pop
fstpt
cmp
arpl
adc
mov
push
pop
cmp
pop
mov
emms
add
pop
inc
pop
mov
push
aaa
or
push
pusha
inc
or
cmp
or
lahf
cltd
cmp
xor
subb
sub
icebp
roll
pop
pop
add
out
add
jbe
sbb
fwait
sbb
add
add
cmp
sub
xor
xor
cmp
sub
xor
inc
dec
xor
dec
dec
aaa
add
cmp
dec
push
mov
add
pop
add
dec
pop
add
inc
push
add
dec
pop
add
push
pop
add
in
mov
push
push
gs
push
insl
ss
jbe
and
scas
push
insb
add
push
jle
pop
inc
xor
pop
push
inc
add
and
mov
push
lcall
push
add
pop
pop
pop
add
adc
pop
ljmp
add
dec
sub
xchg
lea
pop
add
push
popa
outsw
bound
in
push
outsb
add
pop
mov
jno
fidivs
add
jge
fs
pushw
addl
shrl
jo
push
jns
add
jl
roll
mov
mov
movsl
scas
mov
adc
dec
shlb
scas
push
cli
mov
into
xlat
mul
add
sbb
hlt
stc
setnp
sarb
push
cwtl
cwtl
addb
mov
mov
popf
xchg
add
add
lods
cltd
jg
dec
mov
add
cmpsl
mov
test
push
xchg
stos
out
fcmovne
outsl
push
xchg
lods
mov
fwait
lods
xchg
lods
mov
cltd
mov
mov
mov
aaa
xchg
mov
push
mov
ss
sahf
mov
adc
push
mov
mov
add
mov
push
push
mov
mov
fbld
mov
lret
int
mov
lret
lds
jo
mov
es
into
xchg
mov
push
stos
lds
lret
rolb
scas
into
push
test
outsl
fwait
insl
iret
aad
iret
fcmovnbe
fimull
rcr
add
div
fadds
mov
fcoml
fiadds
mov
cs
fldt
add
cmpsl
loope
xlat
loope
in
outsl
mov
mov
ljmp
push
fabs
push
in
fnstsw
push
fimull
mov
fldl
mov
mov
outsb
push
mov
call
loope
lcall
loop
in
out
data16
or
sti
out
cli
pop
out
data16
lcall
in
hlt
add
mov
stc
call
push
mov
clc
push
jmp
in
std
add
inc
mov
push
mov
enter
add
ss
fstpl
insl
or
jecxz
ret
in
push
in
insl
insl
mov
mov
out
dec
jmp
call
out
in
cmc
add
jmp
add
jmp
into
in
ss
jmp
mov
mov
lret
int
shr
lds
push
in
stc
mov
push
dec
clc
push
in
arpl
movlhps
out
shr
mov
sbb
icebp
icebp
push
idivb
js
ret
hlt
sti
push
rcll
cmc
jbe
out
int
hlt
int
lret
int
into
lret
stc
ds
aam
cli
cmp
cmp
add
rcl
push
hlt
ds
push
out
fptan
push
inc
in
in
in
jg
int
and
sub
sbb
push
cmp
sar
outsb
push
pop
in
dec
sbb
mulb
push
add
push
pop
pop
or
or
or
cmp
cmp
mov
fcmove
xchg
push
andl
cmpsb
stos
loopne
bound
cmp
shlb
ljmp
push
mov
fsub
jmp
aas
mov
pop
and
cmp
outsl
pop
cmp
push
sti
scas
pop
add
mov
into
jmp
fstps
std
inc
mov
jle
in
xlat
pop
sar
add
push
sbb
inc
dec
dec
mov
aas
sbb
add
mulb
pop
test
dec
inc
inc
sbb
popf
mov
sub
pop
ja
iret
loope
jg
add
adc
push
sub
clts
add
add
dec
mov
push
adc
sub
or
sbb
add
shl
loope
pop
pop
dec
push
sbb
push
shl
out
fistpll
pop
sbb
lock
adc
sub
cmp
jno
cs
adc
aad
xchg
mov
jle
aad
enter
cld
ficompl
sbb
or
mul
aas
add
fstpl
lock
adc
sub
sub
adc
add
pop
in
add
insl
sahf
fdivp
out
lahf
add
jnp
sbb
fists
std
das
and
inc
inc
push
inc
inc
push
push
jg
lods
mov
popf
sbb
push
inc
bound
test
push
popa
fs
fcmovu
int3
sbb
clc
idiv
mov
jg
pop
or
sub
out
jmp
mov
insb
lahf
cld
idiv
fidivrs
filds
aas
jp
in
sti
cli
cli
sti
hlt
pusha
xor
pop
xor
scas
jmp
sbb
lock
hlt
cmc
fdivr
fistps
je
je
add
mov
fs
sti
call
hlt
hlt
loop
dec
xor
rorb
pop
add
mov
fsubr
out
xlat
sbb
sbbb
or
jg
or
and
mov
lret
pushf
lcall
xchg
subb
arpl
pop
mov
pusha
fdivr
fidivrl
icebp
loopne
iret
fiadds
cmp
and
incl
ljmp
fucomi
jmp
repnz
aad
inc
xor
aaa
push
xor
mov
scas
mov
fadd
in
loope
outsb
mov
test
imul
xor
pop
mov
divb
fsub
jmp
icebp
hlt
xor
out
push
inc
jnp
mov
out
mov
inc
mov
div
out
out
xor
mov
mov
mov
jmp
icebp
lock
in
xor
lods
scas
mov
das
fsub
in
loope
repnz
jecxz
shlb
pop
mov
iret
sti
mov
add
repnz
xor
pop
nop
fcmovbe
inc
add
pop
lea
and
aad
jecxz
pandn
jg
rclb
sbb
sbb
add
push
pop
pop
mov
push
and
sbb
add
sub
or
repz
sub
add
sub
das
sub
xor
jge,pn
outsb
dec
xor
loop
sub
add
xor
xor
cmpsl
push
xor
add
xor
cmp
cmp
xor
add
xor
push
xor
mov
add
inc
xor
cmp
ljmp
imul
push
dec
dec
add
add
add
insl
add
mov
pop
outsl
jns
jae
add
push
imul
add
jnp
popa
ja
mov
addr16
jns
mov
add
js
js
jle
jns
notl
xchg
mov
movsb
mov
add
bound
jnp
mov
sahf
test
add
js
ja
outsb
jns
popf
outsb
fcompl
and
lea
or
xchg
add
mov
adcl
lcall
mov
mov
mov
pop
sahf
test
add
mov
fildl
cmpsb
push
movsl
cmpsl
movsb
test
outsb
int
push
movsl
stos
cmpsl
lods
push
test
xor
in
test
stos
add
scas
stos
stos
push
scas
mov
fisubl
lods
scas
mov
mov
scas
mov
mov
mov
mov
mov
int3
data16
mov
add
mov
mov
jg
insb
fstpt
push
mov
mov
mov
imul
push
mov
mov
ret
mov
sub
roll
ror
icebp
mov
test
aam
mov
out
push
ret
lcall
fnstcw
mov
enter
leave
pop
leave
lret
dec
add
dec
int3
lret
into
push
ds
jne
scas
into
rorl
rcl
iret
pop
push
shlb
xor
mov
roll
rcl
aam
aad
mov
xor
xlat
aad
aam
leave
mov
push
fsts
fcom
xlat
ss
mov
cmpsb
rcr
fadds
pop
fistl
pop
ja
lea
push
push
push
xchg
fnsave
pushw
fcomp
outsl
fcmovu
fiaddl
fstp
push
adc
fstp
sarl
push
fimuls
ficomps
fidivs
repz
fimuls
loopne
fiaddl
push
xchg
ja
popf
fiaddl
fmull
dec
push
fsubp
lcall
jecxz
in
loope
in
fistl
xchg
int
lret
push
sti
sti
fwait
iret
jmp
add
sti
loope
loope
loop
loope
in
out
out
insl
inc
sti
filds
out
in
out
call
mov
jmp
int
jmp
cs
mov
dec
push
in
jmp
jmp
in
jmp
in
lea
out
in
outsb
lock
ljmp
sub
push
div
cmc
add
out
out
cmpsb
push
stc
repz
hlt
push
push
push
cmc
sti
clc
add
std
cli
add
movsb
ss
cld
stc
pop
nop
mov
pop
add
sbbl
pusha
push
popa
mov
mov
movsl
lods
mov
mov
mov
xor
mov
lods
stos
lods
lahf
stos
test
popaw
pop
sub
lds
mov
mov
cld
mov
mov
js
ret
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
sti
jg
dec
mov
sub
add
mov
inc
inc
inc
in
mov
mov
in
es
mov
mov
mov
or
test
cmp
mov
cld
mov
fldt
sub
mov
stos
pop
push
in
lcall
stos
inc
ret
mov
lds
mov
mov
mov
mov
mov
mov
push
lods
mov
es
mov
mov
pop
fadds
inc
jle
mov
mov
jnp
push
aaa
push
cmp
add
es
mov
fidivs
pop
jbe
sbb
lods
mov
xchg
shrl
popa
in
mov
in
mov
popf
jl
jbe
mov
mov
ret
mov
sbb
jae
popa
add
xor
mov
ret
ja
ret
mov
roll
aaa
shll
les
add
jecxz
mov
mov
insb
addl
xchg
ret
and
ret
add
sub
ljmp
int3
or
inc
mov
jb
fiaddl
add
mov
rorl
mov
jns
pop
lahf
icebp
into
push
push
je
les
add
in
pusha
inc
shll
inc
mov
out
push
dec
mov
mov
mov
cmp
mov
lds
in
lcall
jp
mov
idivb
push
pusha
fadd
jg
mov
mov
or
in
outsb
mov
dec
mov
test
mov
jle
jns
mov
ret
xchg
adc
loopne
inc
aas
mov
and
aaa
in
leave
sarb
arpl
hlt
sbb
inc
fidivrl
mov
pop
inc
xchg
cli
adc
push
ret
cmp
adc
mov
stc
mov
mov
mov
add
cmp
mov
adc
xchg
or
mov
pop
shr
push
repz
call
xlat
xlat
jecxz
loop
in
aad
aad
fcomp
cmpl
js
mov
xor
cli
push
pop
push
sti
jmp
out
in
jmp
jmp
call
or
clc
jmp
lock
stc
loope
pushl
cmpb
repz
icebp
lret
xchg
xchg
mov
pop
pop
pop
nop
ljmp
jno
jae
insb
bound
pop
imul
loopne
lcall
out
icebp
mov
repz
jae
xor
daa
pop
cmpb
inc
sbb
dec
jg
pandn
decl
aam
mov
fs
sub
dec
das
add
adc
incl
arpl
outsl
dec
add
add
push
cmpsl
cmpsb
out
pop
lock
filds
insb
mov
jnp
add
dec
lcall
ss
orb
outsl
mov
mov
in
hlt
std
lret
push
mov
into
mov
or
pop
dec
incl
jmp
and
mov
push
mov
fistpl
and
xor
xor
aas
sub
adc
xchg
rcl
shl
repnz
mov
or
push
adc
add
and
or
bound
add
push
in
bound
mov
mov
mov
xor
stc
mov
pop
shlb
add
ret
pop
jge
xchg
scas
push
inc
add
into
push
sarl
dec
cmp
mov
add
or
push
inc
pop
pop
testb
lret
lahf
jg
push
and
cli
test
pop
add
inc
or
in
in
enter
adc
imul
inc
add
and
pusha
mov
sbb
add
mov
jle
or
into
loop
insl
cltd
cmp
or
push
add
jo
push
dec
pop
loop
add
imulb
xchg
scas
push
pop
dec
les
sbb
push
mov
dec
ret
popa
mov
mov
push
sahf
fcmovu
cmp
scas
xor
inc
pop
in
inc
add
mov
mov
decl
dec
push
arpl
inc
mov
lds
xchg
mov
pop
inc
mov
jbe
add
cltd
arpl
cmpsb
stc
push
and
add
xor
xor
subb
xor
push
sbb
idivl
es
push
push
fs
push
divb
push
inc
push
cmpl
in
stc
xor
orl
mov
repz
mov
push
outsl
push
arpl
mov
mov
dec
shl
jae
call
pop
inc
jns
in
imul
adc
inc
fdivrp
data16
inc
mov
mov
xchg
stos
xchg
add
lret
push
lods
mov
sub
movsb
mov
ret
mov
int
rol
lret
aam
ret
int3
and
aam
fcmovnu
cmpsl
test
in
jecxz
lret
lcall
fildll
repz
push
hlt
pop
hlt
sti
sub
ja
mov
dec
and
and
add
pop
les
cmp
stos
in
push
inc
dec
fwait
bound
pop
dec
pop
add
add
push
dec
inc
sub
pop
push
inc
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
fdivrs
push
push
popa
ds
lods
mov
cmp
inc
push
push
popa
inc
dec
sbb
push
adc
test
sbb
add
sbb
pop
or
or
pop
jmp
xor
cmp
int
cmp
inc
inc
inc
daa
sub
sub
pop
or
cmp
ss
push
or
xchg
xor
fildl
push
sub
mov
or
dec
pop
cmp
pop
enter
xor
xor
dec
sub
sbb
push
xor
mov
andl
sbb
mull
push
pop
xor
inc
dec
dec
or
adc
pop
cmp
dec
and
adc
sub
inc
mov
adc
pop
xchg
inc
mov
and
cmp
sbb
push
add
or
movsl
or
inc
sbb
test
out
or
mov
pop
inc
lcall
mov
dec
pop
inc
sbb
adc
fistps
dec
dec
push
and
add
mov
pop
push
push
adc
or
pop
pop
xor
sbb
push
and
shl
add
pop
push
push
and
shlb
or
mov
subl
mov
pop
mov
pop
pop
push
pop
push
pop
roll
xor
or
mov
xor
lea
push
cmp
xchg
mov
inc
inc
fbstp
mov
rolb
loopne
lahf
mov
out
cltd
or
ds
aas
mov
pop
pop
push
jbe
mov
fcmovne
outsl
push
mov
sti
xor
fildll
repz
divl
xchg
pop
pop
push
aas
xor
push
mov
add
ds
aad
push
aas
mov
mov
mov
push
push
cld
bound
push
or
xchg
jmp
vmread
xor
adc
xor
mov
xchg
mov
dec
mov
add
cltd
adc
inc
mov
jmp
mov
ficomps
mov
imul
mov
cs
sti
or
mov
or
jmp
or
add
sub
sbb
mov
add
mov
sbbl
pop
in
and
add
sub
sbb
add
rcrb
dec
out
sbb
dec
fdivl
and
add
sub
xor
and
fwait
outsl
cmp
shlb
jnp
xor
add
inc
cmp
jg
mov
dec
add
add
insl
push
add
jb
dec
add
dec
add
jl,pn
sti
pop
inc
notl
push
pop
push
push
sbb
outsl
call
xchg
pop
pop
jl
inc
dec
outsl
push
push
push
dec
pop
push
dec
pop
aaa
or
mov
push
out
pushw
pop
outsb
pop
imul
pop
or
inc
js
pop
jo
xchg
sar
sub
add
popa
pop
and
sbb
in
outsl
jne
jg
jnp
loope
xchg
push
aaa
lea
adc
mov
test
push
add
push
mov
or
subb
xor
ss
mov
imul
aaa
push
jb
mov
imul
add
outsl
call
mov
jbe
cmpsb
xchg
addr16
jg
pop
js
xchg
addr16
add
pop
sbb
call
outsl
das
xchg
inc
jg
aas
aaa
xchg
rolb
cltd
ret
sbb
nop
push
xor
sbb
mov
add
into
add
jge
test
dec
lods
push
push
cmpsb
mov
mov
popa
lods
es
mov
ret
outsl
or
inc
outsb
rcr
ret
fisubs
ret
jmp
push
in
push
out
cmpsb
stc
pop
movb
lret
in
jnp
in
int
pop
outsb
test
cmpsb
test
xchg
mov
mov
mov
cmpsl
jle
outsb
cmp
roll
lds
les
fdivrs
jg
cmpsb
mov
jbe
fptan
add
dec
mov
test
push
test
outsl
add
loopne
les
pushf
out
add
sbb
test
incb
lods
jle
in
test
out
lods
icebp
push
repz
cmpsb
fiadds
subl
mov
fmulp
cld
outsb
aam
push
call
jl
lahf
cmpb
fistps
sbb
push
aad
add
ffreep
incb
xchg
xchg
nop
iret
lock
stc
and
in
pop
repnz
stc
std
cwtl
stos
movsl
xchg
shl
and
push
add
popa
stc
cld
incl
std
cltd
pop
jae
sbb
aaa
pop
pop
pusha
add
stc
jbe
jle
stc
add
fwait
decl
mov
pop
jnp
insb
popa
repz
add
jg
sarl
out
roll
popa
roll
test
cltd
xchg
ror
lods
into
cmc
and
int
shlb
addb
push
push
int3
mov
or
movsl
lcall
sbb
shll
mov
stos
test
out
inc
punpcklwd
lahf
lods
mov
pushf
punpcklwd
movsb
sbb
lods
xchg
xor
xchg
push
xchg
call
pop
dec
stos
gs
lcall
rcrl
push
arpl
nop
pop
or
lahf
mov
mov
imul
mov
test
sahf
jg
sub
sub
sub
sub
sub
dec
sub
and
mov
sbb
cltd
lods
pop
jo
add
ljmp
ja
pusha
arpl
lahf
ja
cmpl
xchg
push
test
call
add
aad
jl
sbb
cmp
lods
rcrl
lds
lods
lahf
stc
pop
jno
stc
loope
ja
inc
pusha
push
add
xor
lahf
jbe
daa
iret
xlat
jl
test
add
rcl
stc
out
xor
pusha
ss
test
inc
ret
lahf
add
mov
jl
fbstp
jbe
push
mov
lret
int3
int3
out
loop
in
in
in
call
lret
popa
jns
push
fisubrs
xor
jnp
popa
push
shrb
fucomi
in
out
in
jmp
mov
dec
jne
jp
xchg
push
pop
pop
fidivrl
pop
pusha
push
les
call
jmp
mov
fstpt
mov
xor
pusha
std
inc
out
pop
pop
pop
jmp
in
pop
pop
dec
dec
dec
pop
ja
frstor
out
lahf
dec
lods
pop
add
fucomi
ljmp
jecxz
jmp
push
xlat
movsb
dec
fld
mov
inc
jle
je
pusha
inc
xchg
jbe
cmpb
pop
int3
pop
ljmp
mov
pop
mov
addl
jp
fcmovnb
scas
xor
mov
or
pop
pop
es
pop
mov
outsb
dec
aas
cmp
pop
pop
jecxz
xchg
pop
std
insl
mov
in
idiv
hlt
pop
pop
loopne
daa
dec
addl
popa
jg
pusha
inc
pop
loop
hlt
div
add
pop
pop
std
pop
mov
in
not
inc
inc
dec
test
mov
pusha
pop
push
add
out
call
outsl
push
inc
addb
add
andb
or
push
and
out
pop
leave
ficompl
xor
cmp
js
mov
jbe
pop
daa
rcr
mov
xor
pop
add
jg
dec
in
inc
inc
push
pop
and
xor
loopne
fisubl
sub
and
or
xor
cmp
adc
mov
sub
adc
and
inc
push
dec
xchg
movsb
cld
and
push
add
inc
inc
enter
pop
add
orl
and
or
lcall
sub
adc
add
or
adc
add
adc
decl
inc
add
or
adc
and
cwtl
inc
inc
addl
dec
ret
call
and
adc
add
and
es
lods
pop
sub
inc
or
movsb
or
inc
xor
cmp
icebp
popf
mov
dec
and
adc
bound
and
sbb
or
inc
add
adc
inc
dec
xor
adc
sub
mulb
sarb
andl
push
pop
jg
adc
adc
adc
and
sub
das
fdivrs
adc
jb
xor
add
incb
mov
jl
or
xchg
inc
and
push
xor
inc
inc
adc
les
and
add
and
addb
inc
push
adc
adc
bound
adc
and
xchg
rcrl
inc
xor
inc
loopne
or
dec
push
and
xor
xor
pop
imul
add
addb
or
lods
push
and
adc
je
fisubs
mov
sbb
cwtl
nop
xchg
popa
push
outsb
push
xor
cwtl
clc
or
push
dec
and
or
pusha
or
pop
adc
xor
clc
inc
fcoml
adc
inc
or
insb
add
dec
and
fwait
shlb
mov
push
addb
insb
sub
sbb
adc
or
cmp
inc
cmp
les
add
jbe,pt
add
fwait
adc
pop
add
sub
mov
or
ss
xchg
mov
mov
mov
sub
jo
test
or
inc
adc
add
and
adc
xor
into
and
nop
nop
sub
adc
int
push
dec
negb
cmp
xlat
push
add
pop
jne
testl
negb
push
add
es
pop
add
insl
sti
stos
push
xlat
jg
add
pop
jge
flds
pop
push
ja
aaa
jg
push
jbe
pop
fcomip
add
pop
xlat
roll
aad
outsl
movsl
mov
jle
pop
xchg
std
push
push
add
xchg
cmp
jle
push
add
jno
jg
test
xchg
ja
ja
push
xchg
scas
fistps
iret
jle
dec
out
cs
jg
ja
ja
jle
push
idivb
pop
es
int3
adc
pushw
pusha
ds
jg
in
mov
neg
es
idiv
xchg
fld
push
outsl
cmp
es
ds
fbstp
insb
fsubrs
pop
push
xlat
jle
xlat
div
pop
mov
insb
push
jle
out
idivl
push
cs
sti
push
sbb
es
not
pop
jbe
fldl
fwait
insl
push
decl
push
jnp
push
inc
jbe
jne
rclb
scas
out
in
push
fwait
ja
aam
fdivp
pop
jbe
mov
pop
pushf
in
fldl
push
push
xlat
jbe
push
jae
jg
dec
xor
xchg
pop
pop
fists
jg
lahf
lods
adc
jg
notb
ss
idiv
in
outsb
mov
outsb
pop
mov
ret
mov
pop
div
jbe
jle
xchg
fidivs
and
dec
pusha
ss
push
push
das
andl
jg
mov
pop
xlat
fdecstp
push
jle
jnp
andl
push
dec
pop
mov
orl
idivb
adc
push
mov
xlat
fidivrs
outsb
cld
cld
idivb
scas
xchg
aad
jg
add
jbe
push
insl
jno
jge
push
push
inc
ffreep
mov
stc
push
lcall
shr
repz
pop
cmpsb
pop
pop
into
mov
jbe
pop
dec
idiv
push
pop
sti
shrl
negl
cmpsb
pop
fbstp
in
xchg
pop
es
jno
repz
mov
push
sbbl
pop
jnp
pop
fidivs
cmpsb
xor
mov
dec
pushl
pop
pop
roll
out
push
pop
jae
ss
xlat
scas
filds
in
inc
rep
fidivrs
push
push
mov
jle
xor
mov
movsb
cmc
mov
cmp
shlb
outsb
xlat
maxps
cmp
mov
xchg
push
jg
fldl
fdivp
rcll
pop
jle,pn
mov
ja
icebp
dec
push
jle
outsl
sub
jg,pt
fdivp
scas
iret
fcmovnb
dec
rcrb
outsb
pop
jle
mov
outsb
inc
push
fisubs
jbe
push
cmp
fists
cs
xchg
pop
incl
shl
fistpll
mull
idiv
sbb
mov
dec
aad
mov
pop
xlat
push
loopne
ds
ja,pn
jne
cmp
pop
in
stc
into
pop
mov
push
jae
jle
jbe
push
out
js
mov
mov
push
pop
ds
push
testl
jbe
jo
pop
aad
cmpsb
adc
out
aam
outsl
cli
mov
bound
mov
xor
popa
or
push
add
inc
aas
dec
cmp
lfs
push
push
adc
out
aas
subl
dec
add
mov
sar
out
sti
clc
scas
mov
mov
orl
not
lock
rclb
adc
xchg
int3
pop
in
in
dec
push
jmp
stc
xchg
pop
mov
jg
ljmp
mov
jne
je
jmp
add
leave
adc
ljmp
cld
xchg
mov
push
xchg
xchg
unpckhps
sbb
lods
mov
pushl
sbb
lea
sti
mov
mov
repz
out
cmp
test
or
decl
cwtl
xchg
xorl
mov
push
addr16
aad
add
dec
adc
jmp
sti
sbb
mov
mov
add
scas
fs
into
sbb
enter
mov
ja
stos
out
cli
decl
fisttpl
test
jnp
lcall
mov
jmp
pop
push
pop
daa
cwtl
sbb
movsb
aas
bound
dec
jno
sub
or
call
lcall
or
outsb
rolb
sub
loope
imul
cld
cmp
ljmp
andl
out
rclb
and
add
jl
mov
jnp
sub
jl
ljmp
push
mov
adc
mov
ret
stos
mov
sub
addr16
jmp
add
dec
mov
sub
sub
mov
cmp
or
call
test
cmp
lods
fwait
test
mov
xchg
sbbb
inc
jge
ds
cwtl
xlat
call
loopne
test
dec
lods
xchg
xchg
std
shll
jo
idivb
icebp
jle
stc
push
sub
jb
fidivrs
and
hlt
rcll
sarl
out
stos
inc
cs
outsl
adc
insb
stos
ds
jmp
xchg
mov
sbb
jle
pusha
cmpsl
sahf
lret
push
inc
pop
lods
xchg
gs
out
into
lea
mov
or
jno
cmp
lods
mov
loope
xor
lret
cmp
cld
mov
xchg
xchg
pop
nop
gs
mov
dec
mov
pop
outsb
pop
leave
fldenv
out
dec
lret
pop
outsb
decb
fs
mov
inc
mov
and
jg
fwait
push
mov
mov
repnz
leave
jne
inc
pop
sub
test
imul
leave
leave
out
pushf
incl
imul
in
push
das
mov
int3
call
cs
sub
cmpb
movsl
xchg
outsl
cmp
jg
xchg
ficompl
dec
xchg
or
add
push
lods
outsb
movsb
sbb
leave
mov
decl
outsb
outsl
dec
push
xchg
fwait
inc
and
cmp
repz
arpl
nop
mov
or
and
pop
mov
jg
ds
mov
into
cmpsl
fbld
sub
inc
cmp
sub
call
push
and
inc
outsl
cmp
jp
push
cmpsb
or
js
lahf
movsb
mov
iret
fnstcw
mov
lcall
push
jbe
fs
jle
mov
js
stos
jg
jns
jne
mov
push
jbe
dec
mov
imul
lcall
adc
incl
out
loope
xor
fidivl
shll
sub
pop
sarl
push
lret
out
add
lcall
incl
ds
or
mov
movsl
inc
shll
ljmp
adc
cmp
iret
lods
cmp
adc
lea
lret
jne
jl
adc
ret
inc
arpl
push
ljmp
dec
xor
jne
mov
inc
inc
sbb
movsl
pop
sahf
incb
and
dec
jge
jp
mov
sub
lea
aaa
nop
inc
dec
dec
shlb
lock
inc
adc
daa
push
inc
arpl
leave
push
push
jnp
xchg
mov
fwait
out
and
mov
jg
inc
lock
pushf
fcomp
ret
and
int
mov
jne
sub
xchg
nop
or
mov
push
mov
sbb
xchg
loope
mov
or
push
in
sbb
cmpsl
adc
movsl
idivb
int
inc
ljmp
pop
mov
sbb
test
jl
pop
fstpt
scas
mov
std
pop
iret
stc
hlt
mov
leave
pop
inc
push
fwait
clc
mov
xor
jg
incl
in
or
inc
and
sbb
adc
fnstsw
cmp
jno
jg
mov
jl
mov
jg
imul
ds
sbb
mov
mov
fnstsw
negb
in
repnz
mov
add
jg
cwtl
js
xchg
in
hlt
jecxz
ffree
xchg
dec
adc
jg
icebp
in
js
pop
or
mov
pop
fucomi
rep
adc
sahf
inc
push
xchg
loopne
sub
inc
add
sub
lods
clc
rclb
lds
add
cs
and
jg
push
add
ljmp
jmp
jl
fcom
push
mov
fildll
sbb
sbb
sarl
js
test
mov
std
pop
and
mov
push
adc
and
lea
mov
inc
test
icebp
mov
rorb
adc
push
leave
inc
insb
pop
rclb
fldcw
fsubrs
sbb
popa
push
mov
or
and
and
in
pop
imul
inc
inc
dec
cmp
add
mov
xor
int3
pop
cmpsb
and
or
push
dec
add
mov
mov
push
nop
ret
inc
pop
pop
cli
xor
cmp
and
adc
and
fstps
mov
pusha
inc
dec
sub
and
sarl
rcl
lock
fs
test
xchg
push
test
adc
mov
mov
push
leave
xchg
xor
inc
scas
mov
jo
cwtl
insl
xor
and
mov
adc
adc
fcoms
add
lret
xchg
adc
xor
cmpsb
test
repnz
xor
pop
mov
adc
nop
adc
jb
fsubs
xor
adc
cmp
lret
roll
mov
rorb
ficoml
adc
out
xchg
andl
fadds
mov
inc
int
cmpsb
jno
ss
cmp
mov
cmc
or
cmp
mov
xor
sub
movsb
and
xor
nop
stos
inc
call
fimuls
cmpsb
adc
adc
mov
data16
adc
movsb
js
and
mov
insl
pop
xor
cmp
mov
adc
or
push
add
mov
dec
inc
add
inc
and
jle
adc
rol
cmp
inc
lcall
dec
push
xchg
icebp
pusha
das
and
and
or
div
sub
fidivrs
pop
cwtl
outsb
fs
nop
xor
xor
add
push
pop
push
call
sub
ret
xor
test
or
adc
cli
push
add
scas
push
pusha
data16
roll
and
mov
or
dec
xor
jb
rorb
sbbl
rol
fsubrs
shlb
push
or
into
xchg
dec
inc
push
push
dec
pusha
mov
xor
mov
mov
fdivl
inc
pop
xchg
adc
adc
cmp
stc
cmp
pusha
cmpsl
out
bound
cltd
pusha
sub
xor
lcall
adc
or
lock
cs
cmp
push
push
add
outsb
pusha
xor
outsb
and
dec
dec
and
xor
inc
or
out
push
ret
jnp
in
xchg
mov
adc
sub
or
sbbl
and
fsub
push
mov
clc
into
int3
in
aam
adc
pushf
cmp
push
cmp
les
and
pusha
ret
xchg
pop
dec
mov
ss
cwtl
lret
or
and
es
xor
or
mov
lods
mov
hlt
imul
push
nop
inc
into
push
and
cld
adc
sub
pusha
mov
jno
lcall
jb
pop
inc
mov
shl
test
xor
mov
push
xchg
scas
fldenv
mov
scas
or
cmp
sub
lds
js
enter
push
jbe
lea
cmp
cltd
xchg
xchg
mov
dec
ljmp
jbe
leave
fs
inc
insb
fdiv
rcll
dec
scas
inc
rcl
adc
out
loopne
cwtl
and
pop
mov
mov
mov
lods
sub
cmp
sbb
inc
ds
add
push
push
rclb
push
ss
popa
jl
pop
lods
xlat
ret
insb
aad
and
adc
ss
xor
fcoms
push
mov
adc
lods
inc
add
fisubrs
pushf
jo
pop
and
add
mov
push
mov
mov
pop
ljmp
data16
push
pop
xor
inc
mov
sbb
nop
xchg
scas
inc
test
mov
xor
shlb
and
and
fsub
negb
cltd
push
movsb
mov
sbb
ror
add
push
mov
pushf
xchg
lret
add
push
xchg
lea
fs
or
xor
sub
addl
fcoms
add
sbb
mov
nop
leave
xchg
hlt
mov
add
inc
push
test
pop
sub
out
adc
popa
cmp
shlb
addb
insb
pushf
or
rclb
add
outsb
lcall
fdivs
adc
rolb
pop
mov
cwtl
adcb
sbb
in
xchg
sub
push
xor
push
push
inc
mov
adc
lea
jp
cld
mov
sub
mov
sbb
out
sbb
sbb
aam
xor
mov
mov
out
add
sbb
push
xor
ret
movsb
js
js
mov
orl
add
data16
push
repnz
mov
add
fsubl
xlat
sub
xor
pop
outsb
loop
jle
xor
jne
jae
ret
shll
push
add
adcl
test
int3
inc
pop
mov
mov
push
int3
loop
stos
roll
stos
mov
fiaddl
xor
xor
loop
or
and
roll
dec
popl
out
bound
xor
cmp
scas
pop
insb
mov
inc
insb
stos
pusha
mov
mov
hlt
add
cwtl
insl
pushf
inc
xorb
add
or
mov
cwtl
pusha
addb
adc
push
insb
mov
insl
jecxz
je
inc
ret
or
ror
ret
aam
pop
cltd
cmp
mov
loop
dec
push
test
lea
xor
dec
xchg
rolb
push
loopne
shlb
pop
push
cwtl
or
mov
pop
push
jp
into
inc
test
sbb
js
mov
sub
bound
stos
popf
mov
push
add
cwtl
dec
test
rorb
into
sahf
push
shlb
xor
jae
push
sbb
int3
and
movsl
push
and
mov
popa
dec
push
ss
sbb
sbb
stos
es
or
jl
mov
clc
nop
stos
in
xchg
test
sbb
add
sub
mov
fistpl
int3
hlt
mov
int3
shlb
iret
cmp
pusha
es
dec
stc
push
hlt
push
adc
push
push
out
nop
movsb
adc
sbb
pop
adc
je
fadd
lods
and
ror
mov
add
call
jae
out
mov
xor
push
push
nop
addb
pop
rcrb
mov
test
push
out
cwtl
stos
mov
cmp
add
inc
fldenv
or
ret
es
add
repnz
and
mov
ss
negb
xor
sub
add
sbb
push
add
push
ret
push
xor
out
sbb
cmp
and
sbb
sbb
inc
and
test
lock
mov
or
add
inc
les
jne
mov
testb
add
or
dec
adc
sahf
jb,pt
add
adc
sub
and
xchg
out
add
or
aam
sbb
popa
gs
popa
clc
cmp
adc
sarb
xor
add
xchg
mov
or
push
in
pop
nop
adc
push
and
rolb
orl
mov
cwtl
fmuls
add
or
outsl
hlt
mov
pop
sbb
sahf
hlt
movsl
sbbb
add
ss
ror
leave
test
or
add
ret
push
sarl
mov
or
jo
inc
arpl
es
mov
or
cmp
or
lret
rol
jb
xchg
insb
arpl
push
xor
push
cmp
mov
sub
mov
or
mov
mov
and
je
xor
sahf
out
mov
push
arpl
js
insl
fisubs
in
ficompl
xchg
lret
cs
adc
cmp
cmpsb
mov
out
lock
cwtl
adc
inc
pushf
js
rclb
inc
jbe
leave
pop
xlat
xor
inc
push
pop
insb
loopne
adc
dec
and
or
mov
pushf
pusha
add
insb
cwtl
inc
inc
test
mov
adc
sahf
je
inc
mov
in
sbb
xchg
xor
push
mov
popf
popf
sbb
jb
adc
xor
mov
cmp
loope
addr16
pop
int3
mov
add
cs
cmp
inc
test
lret
xchg
ret
add
ret
test
inc
adc
adc
mov
add
or
adc
or
mov
mov
inc
lods
dec
scas
clc
pop
popf
or
jb
call
mov
je
add
cmp
jl
repnz
push
pop
jnp
sbb
sub
aaa
in
push
dec
cmp
addb
sbb
adc
pop
sub
cmp
test
jno
jbe
cli
cmp
mov
sub
mov
faddl
or
lcall
test
inc
cmpsl
mov
or
incb
adc
push
adc
inc
sbb
pcmpgtb
fwait
ljmp
lcall
ljmp
cwtl
add
subb
int3
add
dec
jno
loope
fiadds
sbb
cmp
enter
xchg
or
and
sbb
pushf
xor
test
mov
jle
es
dec
jecxz
mov
adc
add
cmp
adc
sbb
mov
mov
dec
mov
adc
xor
test
dec
cmp
subb
sbb
fcmovbe
ds
inc
pushf
dec
push
sbb
and
es
and
bound
push
adc
jo
cmc
push
inc
cmpsb
lret
add
pop
sub
jbe
in
cmp
loope
cmp
popa
pop
cmpsl
mov
add
test
or
cmp
xchg
mov
cld
stos
inc
xlat
rorb
idiv
adc
or
cmpb
sar
hlt
out
rolb
adc
sub
imul
fsubrl
or
sub
push
in
inc
dec
pop
xor
or
js
sub
jo
int3
adc
loopne
and
loopne
push
jo
ror
test
pop
xchg
cmp
push
test
sbb
sbb
inc
aam
dec
pop
jne
mov
cld
add
pop
inc
ret
out
push
pop
sbb
and
adc
xchg
push
xlat
cmp
or
cmp
pusha
int
in
add
mov
xor
mov
call
adc
int3
push
adc
int3
es
mov
adc
push
mov
sub
or
pop
sub
popf
rorb
es
nop
pop
or
dec
and
mov
mov
add
fadd
push
inc
test
jmp
and
sbb
pop
sarb
pop
mov
test
shlb
xchg
push
push
adc
sbb
add
mov
add
mov
gs
add
test
push
pusha
or
rol
int3
push
sub
and
sub
lea
sub
cmpsb
and
jl
out
mov
mov
daa
and
mov
lret
add
push
add
call
fcoms
sbb
adc
push
mov
pusha
mov
and
pushf
enter
lea
jmp
add
ret
rorb
pop
outsb
pushf
adc
mov
ror
and
icebp
subb
sub
push
mov
les
hlt
inc
sbb
dec
ficoms
add
inc
test
jae
ljmp
cmp
inc
popa
outsb
arpl
inc
push
in
gs
or
popa
imul
push
gs
gs
xor
gs
outsl
fs
fisubl
inc
or
inc
js
je
jb
push
jae
sbb
popa
inc
outsl
jb
imul
cmpsb
std
cltd
mov
inc
jne
jb
outsb
dec
insb
xchg
jb
insl
jo
jmp
jnp
cmp
pop
js
push
test
fwait
loopne
outsb
add
insl
cmp
cmpsb
jae
rcr
jne
inc
ja
mov
inc
lock
insl
scas
xor
popa
and
jb
inc
shrl
jo
outsb
outsw
push
jg
cmpsl
pusha
fistpl
mov
inc
shrb
insl
insl
inc
insb
or
gs
repnz
cmp
cmp
inc
push
gs
in
xor
push
repnz
pop
mov
mov
insb
bnd
jae,pn
in
cltd
frstor
jl
sbb
pushf
inc
xchg
pop
sbbb
mov
adc
bound
inc
push
movsb
mov
xchg
push
dec
movsl
loopne
jno
dec
xor
mov
mov
and
daa
jmp
sbb
pop
add
add
mov
add
movsl
add
add
lcall
fs
push
dec
adc
adc
into
dec
mov
adc
fs
fs
jb,pn
popa
je
dec
add
sub
add
push
push
pop
add
pop
or
inc
ret
jl
lds
mov
pop
fstpl
and
call
add
xchg
out
mov
fisttpll
inc
add
fidivrs
xchg
popf
push
inc
inc
cmpb
push
dec
out
fcom
lahf
shr
or
add
nop
add
leave
repz
or
push
loopne
lcall
jb
addr16
mov
mov
mov
imul
sbb
dec
xchg
test
cmpsb
mov
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
pusha
add
sbbb
add
mov
add
add
add
addb
push
add
add
add
add
cmp
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
xor
add
or
add
xor
add
pop
add
xor
add
addb
xor
add
test
add
rolb
add
clc
add
xor
add
and
add
dec
add
sub
add
jo
add
cwtl
add
sub
add
rolb
sub
add
call
add
add
add
sub
add
cmp
addb
add
or
add
add
add
cmc
add
call
add
add
add
add
add
add
add
sub
add
or
add
add
xor
add
or
add
push
add
mov
add
or
add
adc
mov
add
or
add
add
add
adc
mov
add
or
add
add
add
add
call
add
add
add
add
add
add
push
add
call
add
add
add
add
add
and
add
mov
add
or
add
add
test
add
call
add
add
add
add
xor
add
or
add
add
add
aaa
add
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
mov
add
or
add
add
clc
dec
add
call
add
add
add
add
pop
add
call
add
add
add
add
gs
rolb
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
or
add
add
add
jae
add
add
add
add
add
add
nop
je
add
or
add
add
add
add
add
add
add
add
or
add
in
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
add
cmp
add
add
add
clc
add
addb
add
or
add
add
add
enter
js
add
fadds
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jb
je
push
add
jae
jae
and
push
add
push
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
and
inc
add
add
add
imul
add
bound
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
add
arpl
imul
add
popa
add
jae
and
push
add
add
jo
and
dec
add
outsl
add
and
xor
xor
xor
xor
sub
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
js
add
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jb
popa
add
add
add
jbe
add
and
inc
add
outsb
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
dec
call
add
test
add
push
add
add
call
add
sahf
call
add
mov
call
add
call
add
add
call
add
or
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
fs
xor
cs
insb
add
jb
imul
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
jb
imul
inc
