ficomps
gs
mov
in
int3
js
loop
rclb
into
push
movsb
xor
into
or
pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
shlb
mov
pusha
call
add
clc
xchg
mov
xor
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
mov
mov
mov
sub
push
pop
push
pop
cmp
je
add
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
jmp
mov
pop
ret
add
sub
dec
xchg
shll
std
and
gs
notb
xchg
sub
aaa
xchg
in
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
and
dec
test
loope
arpl
mov
daa
ja
clc
pop
mov
pop
xor
or
mov
ds
in
push
pop
xchg
cmp
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
jecxz
sbb
mov
ljmp
mov
and
adcl
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
push
stc
rorb
add
or
je
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
out
adc
aam
push
jg
imul
cs
mov
test
dec
repnz
lods
mov
mov
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
cmp
out
xor
cld
je
adc
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
inc
xor
add
dec
mov
int
pop
fisubrs
bound
and
mov
popf
fidivs
dec
xchg
and
popa
mov
mov
cmp
push
ret
cmp
test
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
xchg
aad
subl
jno
pop
pop
mov
mov
lock
xchg
inc
sti
subb
std
inc
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
.byte
.byte
call
and
add
and
add
and
add
and
add
add
add
add
fsubs
add
mov
add
cwtl
and
add
and
add
add
aam
add
push
and
add
and
add
add
xchg
and
add
and
add
add
add
and
add
add
add
and
add
and
add
and
add
add
jp
add
push
and
add
and
add
and
add
add
add
add
mov
add
lcall
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
and
add
add
shlb
add
and
add
and
add
add
add
add
fsubs
add
mov
add
cwtl
and
add
and
add
add
aam
add
push
and
add
and
add
add
xchg
and
add
and
add
add
add
and
add
add
add
and
add
and
add
and
add
add
jp
add
push
and
add
and
add
and
add
add
add
add
mov
add
lcall
add
and
add
add
add
add
je
imul
bound
gs
add
inc
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
inc
outsl
jo
inc
imul
jae
jb
outsb
push
add
sbb
gs
outsl
outsb
jae
insb
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
inc
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jb
jbe
push
jns
gs
add
add
popa
jo
imul
inc
gs
gs
inc
je
insl
add
sbb
gs
outsl
outsb
jae
insb
gs
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
gs
dec
add
arpl
inc
add
icebp
add
imul
jb
je
arpl
add
push
add
fs
je
insl
inc
add
add
fs
imul
add
fwait
add
je
jbe
outsb
je
add
add
popa
jo
gs
jb
jns
add
inc
gs
outsl
imul
jbe
jae
add
add
gs
outsl
outsb
jae
insb
gs
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
inc
push
push
push
dec
push
cs
insb
add
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
inc
add
push
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
lods
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jnp
jnp
lods
lods
lods
add
test
push
mov
mov
mov
ret
ret
lret
int3
into
int
rcl
shr
rcl
shl
ror
shl
int3
int
hlt
leave
leave
repz
in
mov
mov
stos
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
not
rcl
cld
fcomp
std
xlat
fcom
fcomp
fdivr
aam
rcl
iret
dec
int
aam
aam
iret
ror
inc
ret
mov
mov
scas
iret
movsl
mov
mov
das
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
mov
dec
lret
lret
call
ror
aam
aad
xlat
call
fcomp
call
aam
dec
int
dec
int
call
aad
int
int3
inc
mov
mov
ljmp
test
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int3
int
rcl
sar
fcomp
call
xlat
call
aam
dec
into
int3
dec
leave
lret
int
inc
mov
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
imul
bound
fs
cmp
sbb
sub
sbb
xor
cmp
aaa
cmp
cmp
and
and
pop
push
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
enter
ror
call
aam
aam
aam
iret
rcl
dec
leave
leave
inc
vcmpsd
mov
mov
ljmp
mov
pushf
xchg
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jge
jg
jo
jo
arpl
mov
cmp
inc
mov
outsb
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
leave
leave
dec
leave
inc
ret
ret
mov
mov
lods
scas
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
fwait
fwait
in
addb
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
jp
nop
lea
incb
jl
jp
jl
outsb
jo
out
push
push
ret
jg
js
jns
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
lcall
nop
incl
addb
xchg
xchg
sahf
mov
mov
mov
jp
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
mov
addl
mov
xchg
jle
jo
jb
jae
je
jle
jle
test
jnp
push
cmp
ss
es
jge
jle
cltd
cltd
lcall
test
icebp
lods
lods
lods
sti
stos
lods
lods
stos
lods
lods
test
movsl
movsb
std
fwait
cltd
fwait
xchg
xchg
xchg
decl
jg
jns
jns
jl
jnp
mov
xchg
movsb
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
push
push
or
inc
inc
dec
imul
xchg
xchg
leave
lcall
out
cltd
fwait
fwait
stc
nop
nop
std
mov
decl
mov
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
lods
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
xchg
sahf
popf
sahf
std
movsl
mov
mov
in
xchg
xchg
in
xchg
jne
femms
dec
add
add
or
inc
daa
sub
dec
dec
data16
jno
mov
xchg
rclb
xchg
std
mov
nop
call
sahf
mov
ljmp
test
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
les
lcall
mov
call
nop
xchg
xchg
xchg
xchg
popf
pushf
popf
movsb
mov
test
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jno
je
jp
jge
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
ja
mov
movsb
mov
mov
mov
stos
lods
stos
mov
movsb
add
pop
pop
adc
mov
jmp
mov
call
xchg
xchg
call
xchg
xchg
lcall
sahf
mov
movsl
std
mov
lcall
nop
nop
xchg
les
cltd
in
xchg
cwtl
out
lea
nop
stc
xchg
xchg
std
xchg
jae
fwait
push
cmp
dec
jle
lods
inc
jge
mov
jns
mov
je
mov
insl
ljmp
pcmpgtd
stos
or
ljmp
jle
mov
mov
stos
pushf
movsl
movsb
movsl
and
add
add
pop
pop
adc
mov
lcall
xchg
xchg
call
lcall
lahf
sahf
lahf
lcall
lcall
xchg
xchg
xchg
decb
xchg
xchg
xchg
xchg
cltd
cld
xchg
xchg
popf
stc
mov
xchg
popf
cld
popf
xchg
xchg
insb
mov
xchg
pop
jle
cwtl
dec
jp
fwait
cmp
lcall
lahf
pop
jmp
adc
test
ljmp
packuswb
scas
adc
mov
imul
adc
pushl
aas
cmp
mov
scas
scas
scas
movsl
movsl
movsl
sub
movsb
mov
add
add
add
mov
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
lahf
jmp
movsl
movsl
jmp
xchg
xchg
decl
mov
decl
js
fwait
jb
lcall
call
cs
decl
pop
decl
add
call
add
mov
adc
ljmp
outsb
pushl
sbb
je
mov
and
shlb
mov
xchg
lods
mov
scas
scas
mov
mov
movsl
movsl
add
pop
pop
adc
scas
mov
shll
lcall
movsb
movsl
ljmp
test
ljmp
cmpsl
cmpsl
lcall
jg
decl
inc
jno
mov
imul
mov
pop
incl
add
incl
add
mov
push
decl
add
cltd
add
sahf
add
or
mov
outsb
pushl
sub
mov
sub
sub
jg
das
cmp
enter
enter
mov
mov
lret
mov
add
add
add
add
lods
mov
push
adc
test
ljmp
popf
jmp
test
ljmp
lods
lods
pushl
lods
lods
jmp
mov
mov
popa
incl
or
xchg
push
incl
push
incl
push
incl
add
xchg
add
xchg
add
fwait
add
mov
add
scas
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
mov
mov
incl
adc
xchg
push
incl
or
xchg
push
decl
push
call
pop
jmp
add
stos
add
jb
ret
dec
inc
mov
int
call
inc
call
dec
nop
fmuls
fmuls
fimull
fmull
ficoml
call
test
std
mov
mov
movsl
movsl
movsl
arpl
mov
add
add
add
cltd
xchg
cltd
add
inc
adc
jnp
mov
test
sahf
ljmp
mov
pushl
mov
pushl
mov
mov
movsl
mov
decl
popa
call
adc
decl
or
mov
push
call
add
popf
add
mov
add
test
pop
pushl
and
dec
dec
call
push
cltd
call
push
lcall
push
pushf
fistps
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
test
jne
sahf
mov
add
inc
inc
adc
ja
sahf
cltd
lahf
jmp
lahf
fwait
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
xchg
and
xchg
and
sbb
xchg
or
call
add
lcall
jmp
add
mov
fs
mov
xor
fisubs
fbld
jmp
data16
in
cmpsl
call
push
ljmp
fildl
ret
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
aas
adc
jp
xchg
cwtl
call
lahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
pop
call
add
lcall
ljmp
add
mov
pushw
adc
roll
jmp
jo
jmp
jo
call
je
in
jae
in
jae
out
jbe
out
jne
out
jae
jmp
mov
mov
cmpsb
cmpsb
lcall
mov
add
add
add
jg
cmp
insl
outsb
js
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
xor
lahf
cmp
sahf
cmp
sahf
xor
lcall
call
add
add
test
pop
pushl
add
mov
sbb
fistl
jmp
js
call
jg
in
xorb
repnz
hlt
xchg
push
cmpb
mov
inc
mov
stos
cmpsl
popf
pushf
popf
daa
mov
mov
add
arpl
add
cmp
pop
pop
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
insl
mov
lcall
jmp
ss
cltd
sbb
xchg
add
popf
add
movsl
add
add
scas
add
mov
fs
mov
add
shlb
cmp
movsb
ljmp
out
lea
push
nop
sar
nop
sar
xchg
xchg
ret
push
xchg
push
ret
mov
inc
ret
clc
lods
lods
test
xor
pushf
sahf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
nop
mov
mov
mov
mov
mov
sar
ret
ret
ret
mov
mov
jle
lcall
cmp
dec
cmp
xor
lcall
jmp
add
lods
add
mov
arpl
mov
add
enter
xlat
xor
mov
in
xchg
push
fwait
push
cltd
push
fwait
push
pushf
leave
push
lcall
cld
sahf
int
cld
popf
into
cli
lcall
fidivrs
enter
mov
sahf
mov
popl
fwait
fwait
fwait
add
add
add
xor
or
cmp
dec
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
mov
inc
inc
mov
ljmp
dec
jg
stos
dec
xchg
scas
dec
xchg
movsl
sub
fwait
or
sahf
add
add
add
mov
popa
mov
add
movl
je
loopne
xchg
in
mov
push
cmpsb
into
push
cmpsb
into
stc
test
sti
test
into
sti
test
sar
std
stos
sar
test
push
sahf
jmp
mov
int3
std
mov
mov
mov
xchg
xchg
add
cltd
fwait
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
jae
jb
mov
sarb
mov
ret
ret
inc
mov
mov
ret
xchg
cmpsl
jmp
push
mov
scas
dec
xchg
mov
add
movsb
add
add
mov
fs
mov
add
int
outsl
fadds
jae
loopne
jge
out
pop
cmpsl
push
popf
lret
scas
sar
sti
mov
cli
mov
sti
scas
sar
std
mov
cld
mov
std
mov
mov
mov
cld
mov
push
movsb
jmp
mov
call
leave
int
mov
mov
mov
xchg
xchg
or
add
add
xor
add
sbb
dec
outsb
outsl
outsb
mov
aad
fsubr
aam
fdiv
iret
rcl
std
lret
dec
lret
lret
dec
lret
lret
inc
enter
scas
ljmp
push
mov
lods
cmp
arpl
mov
add
mov
mov
add
roll
jo
add
fiadds
jae
call
jae
cli
lods
aam
cld
mov
mov
fcos
mov
xlat
cld
mov
fdivr
mov
fdivr
divl
call
lret
mov
sahf
mov
or
add
add
xor
add
add
pop
or
leave
movl
ljmp
loope
jecxz
fstp
fucom
fdiv
xlat
fcmovu
cli
aad
fdivr
int3
ror
mov
push
cmp
sub
mov
add
mov
popa
mov
add
leave
add
add
fldl
jne
in
js
in
das
xchg
clc
mov
sti
mov
inc
loope
inc
loopne
inc
fdivrp
std
fdivrp
std
leave
fdivrp
dec
dec
loopne
std
enter
leave
cld
mov
enter
into
mov
mov
xchg
adc
add
add
std
add
std
std
add
incl
repz
or
in
jmp
in
in
out
sub
out
in
dec
jmp
ljmp
in
in
fcmovnu
fucomp
ret
mov
xchg
cmpsb
cmp
mov
add
test
add
mov
add
int3
add
add
add
call
inc
fwait
sti
mov
loop
std
lret
std
into
in
dec
jecxz
dec
in
dec
loop
std
into
loope
shl
dec
jecxz
shl
call
in
cli
in
mov
xlat
inc
ret
ret
out
cmpsb
test
mov
xchg
xchg
add
add
add
std
add
std
incl
div
clc
add
repnz
hlt
icebp
push
in
lock
pop
out
lock
out
in
pop
fsubp
loop
les
xchg
sti
mov
add
pop
ljmp
add
roll
dec
add
add
fiaddl
jne
jecxz
jp
in
push
pop
stos
cld
mov
cld
iret
out
shl
std
shl
std
shr
shl
std
out
xlat
out
out
std
std
fldl2e
fldl2e
cld
shl
push
ret
jecxz
fcos
lret
rep
test
xchg
and
xchg
cwtl
add
std
sti
add
cld
stc
add
sti
stc
add
div
or
shlb
sarl
negb
add
add
scas
add
mov
add
lret
call
add
faddl
jne
out
js
in
sbb
clc
jne
sti
ret
loopne
std
fsubr
fucompp
std
fldpi
fldl2t
std
fucomi
std
fsubr
fucomi
fucomi
fsubrp
std
fsubrp
jmp
in
aam
push
ret
out
fdivr
rcl
sar
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
mov
loope
add
mov
cltd
repnz
pop
lcall
jmp
add
mov
add
into
add
aad
jno
fiadds
jne
call
sub
cld
aam
std
fcomip
fucomi
fldl2e
std
xlat
call
cld
aam
sti
iret
loope
cld
shl
push
int
clc
int
push
ret
aad
out
mov
xlat
xlat
sti
mov
mov
lcall
add
add
add
aad
rol
adc
scas
xchg
jmp
add
mov
arpl
mov
add
roll
outsb
call
add
add
jmp
ss
cld
xchg
cld
lret
cld
lret
cli
stc
rcr
idivl
sar
repnz
into
out
mov
lret
jmp
ror
jmp
shl
jmp
in
mov
mov
xchg
add
add
add
int3
lret
add
shrl
loopne
ss
mov
add
mov
addr16
mov
add
into
pop
jno
rorb
ficoml
jns
loopne
cmp
dec
xchg
jmp
scas
int3
jmp
mov
std
loop
mov
cli
fdivl
lock
int
fmul
iret
iret
aad
loopne
fadd
out
loope
jmp
call
popf
call
leave
leave
push
lods
stos
stos
adc
cmpsl
cmpsb
test
mov
ret
rolb
ret
mov
popf
stos
aam
dec
cmp
test
insb
scas
es
mov
js
mov
inc
test
les
stc
lret
test
mov
out
mov
enter
leave
lret
int3
rcl
lret
mov
int
mov
fcom
aad
fcmovu
gs
jecxz
out
out
call
div
sub
div
and
icebp
lock
fstp
or
mov
int3
add
add
add
rolb
mov
les
insb
lock
jne
ljmp
mov
sarb
mov
ret
mov
cmpsl
mov
enter
lret
jp
int3
shlb
iret
iret
push
iret
rcl
dec
aad
xlat
inc
rcr
xor
fcmovu
daa
fistpl
fchs
fstl
fucom
jecxz
loope
in
out
ljmp
cld
testl
incl
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
rcll
lds
enter
into
lret
daa
lret
ror
and
aam
sbb
rclb
rcl
rorl
aam
push
aam
xlat
add
fcmovnu
add
add
in
add
in
ljmp
incb
mov
mov
add
ret
ret
les
mov
mov
mov
push
rol
or
enter
leave
movl
lret
add
fcom
add
xlat
aad
aad
aad
aad
add
fsub
add
aam
add
loopne
add
add
in
add
lock
incb
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
shr
aam
shl
aam
sar
into
iret
into
cli
int3
int
stc
int3
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
jg
inc
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
ror
sar
xlat
call
call
ror
dec
iret
iret
dec
int3
lret
mov
mov
icebp
cltd
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
je
je
fs
inc
dec
dec
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
sar
lret
int3
lret
mov
pushl
test
popf
popf
sahf
cwtl
xchg
xchg
jmp
jo
xchg
pop
push
pop
dec
add
add
add
add
add
add
jg
addl
addl
aam
imul
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
fstpt
mov
ret
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
cltd
lcall
xchg
cwtl
fcoml
addl
jmp
jns
sarb
jns
jns
jns
jae
jb
push
push
push
cmp
jne
sahf
sahf
pushf
mov
scas
lods
rep
lods
scas
sti
scas
scas
lods
std
test
cmpsl
std
sahf
popf
pushf
call
test
call
mov
scas
jmp
scas
scas
leave
cmpsb
movsl
movsl
cltd
je
jb
adc
adc
add
add
add
add
outsb
outsl
insl
pop
xchg
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cwtl
lcall
mov
call
pushf
lahf
ljmp
test
mov
mov
mov
xlat
cmpsb
movsb
movsl
pop
jg
addl
add
add
pop
pusha
popa
or
scas
mov
movsl
mov
mov
mov
call
popf
lahf
sti
sahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
insl
insl
outsl
xchg
subl
xchg
mov
ljmp
jle
pushl
pop
mov
mov
jnp
mov
scas
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
nop
call
xchg
lcall
cwtl
lcall
sahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orb
xchg
push
cld
xchg
pop
jg
pushf
dec
jnp
movsl
inc
jp
scas
ss
mov
jb
mov
outsb
ljmp
sbb
mov
lods
mov
scas
scas
scas
jle
movsl
mov
add
add
add
popa
or
mov
in
movsb
cmpsl
lcall
popf
sahf
jmp
mov
xchg
decl
orl
xchg
jno
cld
cwtl
pusha
cmp
dec
jp
nop
cmp
nop
sub
xchg
sbb
cwtl
maxps
mov
push
imul
mov
insb
pushl
pop
jae
mov
pop
xchg
mov
scas
lods
xchg
popf
lahf
lahf
adc
add
add
popa
popa
pusha
or
lods
mov
stos
mov
mov
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
popf
add
test
arpl
mov
jae
mov
das
jle
lds
jle
enter
lret
dec
pop
cwtl
inc
stos
mov
mov
mov
test
test
add
add
add
popa
or
movsb
test
cmpsl
mov
test
mov
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
test
push
decl
add
xchg
add
lahf
add
add
mov
insl
inc
cmp
into
inc
mov
aam
call
inc
nop
fiaddl
call
bound
stc
mov
mov
movsl
movsb
movsl
daa
std
std
add
add
add
pusha
or
popf
mov
ljmp
mov
mov
mov
stos
lcall
sbb
popa
decl
or
decl
add
sahf
add
add
scas
add
mov
dec
xchg
call
push
lcall
pop
sahf
jmp
pop
mov
fildll
int3
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jp
fwait
cwtl
cwtl
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
call
add
sahf
add
add
scas
add
mov
addr16
xor
jmp
insl
test
jmp
jb
in
jno
jmp
jns
call
test
std
mov
cmpsl
cmpsl
inc
jg
addl
dec
dec
pop
outsl
outsb
imul
xchg
cltd
lcall
mov
mov
mov
jmp
je
lahf
cmp
sahf
sub
call
add
mov
add
mov
gs
or
xchg
jmp
jns
jmp
mov
in
test
push
xchg
push
mov
mov
cmpsb
test
fwait
lcall
sub
sub
push
push
dec
pop
imul
test
mov
mov
mov
sarb
mov
xchg
test
cmp
sub
fwait
or
mov
add
mov
fs
mov
adc
fbld
in
nop
sar
xchg
ret
push
cltd
cltd
stc
lcall
notl
inc
mov
lods
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
ret
ret
inc
pushl
push
mov
lods
dec
cmp
pop
push
sahf
add
test
add
add
lret
add
fisubl
cmp
jnp
push
movsb
int3
clc
test
iret
sti
stos
sar
sti
stos
sar
stos
sar
stc
cmpsl
int3
jmp
mov
inc
rol
stos
stos
stos
jne
pushf
popf
or
add
add
dec
push
dec
aaa
jb
je
test
int3
int
lret
into
lret
cmc
lret
int3
int3
sti
leave
leave
enter
leave
mov
popa
ljmp
ljmp
add
add
int
outsb
fildl
xchg
push
xchg
std
mov
mov
xlat
cld
mov
mov
sar
ljmp
repz
scas
scas
mov
add
add
add
add
pop
or
aad
dec
loope
loop
fsubp
fistps
fcom
out
mov
gs
test
je
movsb
or
scas
add
mov
add
xlat
add
in
jl
repnz
mov
cld
inc
loop
inc
std
leave
fdivrp
dec
loopne
dec
loope
cld
out
mov
leave
divb
popf
sahf
sbb
add
add
incl
std
incl
jmp
or
in
in
sbb
in
jmp
call
out
xchg
mov
mov
mov
add
mov
fs
add
int
outsl
fildl
jne
call
outsb
mov
sti
ret
cld
shl
call
out
std
shl
call
in
xlat
out
std
out
cld
aam
push
xlat
fcmovne
sar
mov
mov
add
std
incl
std
incl
std
incb
aam
aam
mov
pop
mov
popf
or
test
pop
pushl
add
roll
jo
fiadds
jbe
out
pop
mov
stc
mov
shl
fucompp
cld
xlat
jmp
cld
xlat
out
fsub
std
shl
push
enter
rcl
sti
mov
lahf
sahf
das
add
add
int3
int3
int3
or
fs
lahf
adc
add
mov
add
add
loop
jns
out
xor
sti
int3
loop
cli
lret
cmc
repz
icebp
rcl
lock
aam
in
aad
in
shl
ljmp
ljmp
stos
das
std
add
add
add
aad
push
mov
jb
or
imul
pop
jno
int3
and
sub
lcall
mov
out
loop
leave
jmp
fdivrl
lret
sarl
in
fcompl
in
call
rorb
mov
add
stos
lods
lods
add
xchg
movsl
les
mov
mov
fidivrl
andb
int3
lahf
mov
shlb
jge
ror
iret
pop
rcl
iret
dec
xlat
cmp
loopne
das
in
frstor
loop
repnz
in
in
or
std
incl
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
mov
rclb
rol
adc
rcl
or
loope
or
int3
int
lods
lods
stos
add
incb
std
incb
fwait
lcall
mov
or
int3
int3
int
lods
stos
stos
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
mov
ret
ret
ret
mov
scas
insb
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
enter
sar
aad
aad
rcl
sar
iret
into
int
mov
stc
mov
mov
sarl
sbb
push
add
add
add
add
add
add
add
add
jno
jno
data16
dec
inc
das
cs
sub
and
add
add
mov
mov
cmpl
dec
into
int
aam
aad
into
into
iret
inc
mov
ljmp
sahf
mov
mov
add
add
add
add
jae
jne
test
adc
outsb
outsl
ret
arpl
outsb
outsb
insl
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
xchg
xchg
lds
jb
es
es
add
add
add
add
jb
jb
fwait
xchg
pushf
mov
xchg
mov
xchg
test
test
push
push
push
dec
inc
mov
fwait
into
mov
mov
xchg
decb
mov
pushf
pushf
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
test
mov
mov
xchg
xchg
xchg
cld
sahf
popf
pushf
cmc
cwtl
cltd
cltd
in
test
push
imul
jge
lea
xchg
testl
mov
mov
jb
mov
mov
test
lods
stos
add
add
add
test
test
xchg
xchg
xchg
call
lcall
cwtl
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
nop
arpl
std
lcall
ljmp
and
mov
outsb
pushl
sahf
lods
lock
mov
imul
into
add
xchg
pop
scas
cmpsb
lods
test
sahf
popf
lahf
jmp
movsb
call
jl
lea
nop
inc
je
mov
imul
xchg
adc
cwtl
or
mov
push
outsl
mov
and
jns
les
test
mov
mov
subl
jae
push
movsb
pushf
mov
cld
test
scas
scas
ljmp
mov
decl
or
xchg
push
decl
add
mov
adc
shll
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
push
xchg
xchg
test
lahf
movsl
cld
lods
lods
scas
pushl
mov
mov
call
pop
pop
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pop
movsl
jmp
cmpsw
call
lcall
cmpsb
cmpsl
cmpsb
pop
add
add
popa
arpl
mov
lcall
mov
mov
lcall
xor
cwtl
and
xchg
or
mov
add
mov
dec
xor
jmp
jp
out
jl
push
jle
fstps
mov
and
add
add
adc
push
cmp
mov
mov
rol
mov
bound
jmp
add
ljmp
add
ret
fimull
in
mov
push
xchg
xchg
push
xchg
enter
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
vcmpsd
ljmp
pop
push
pushl
push
aam
ja
ljmp
cli
stos
sar
cld
lods
sar
cld
scas
sar
cld
scas
sar
jmp
leave
inc
mov
movsl
ds
std
add
outsl
inc
scas
mov
mov
aam
mov
aam
rcl
out
leave
lret
mov
mov
jmp
add
les
imul
add
out
test
clc
nop
ret
std
mov
cld
ret
std
ret
std
ret
lock
ret
cmpsl
test
add
add
add
in
in
or
out
call
outsb
fldenv
movsl
and
pusha
mov
add
fiadds
jne
lock
dec
out
dec
in
shl
call
in
call
out
test
call
int3
in
scas
scas
scas
popa
addl
add
std
std
add
std
std
push
int
shrl
lahf
sbb
lods
add
mov
add
jecxz
js
repz
cmpsb
cld
loop
aad
cld
out
cld
aad
std
aam
sti
shl
push
leave
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
push
iret
or
fstpl
cmp
insb
lods
cld
out
mov
shl
call
rcl
call
lret
rcl
jmp
scas
cltd
lcall
sarl
xchg
and
shll
js
mov
xlat
mov
lret
adc
int
fxch
rcrb
rcl
dec
in
loope
call
in
out
sbb
sarl
cmp
movsb
lods
arpl
stos
mov
les
les
ret
sbb
bswap
into
into
or
aam
push
incl
cmpl
add
add
add
mov
incl
std
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
jae
pop
das
jp
mov
xchg
pop
jmp
sub
and
jb
xor
sarb
jg
jle
dec
cmp
jbe
jnp
ss
pop
testb
mov
movsb
or
popa
jg
repz
aam
lcall
addr16
dec
sub
repz
pop
sahf
jg
cli
jno
xor
movsl
inc
pop
mov
jmp
in
rclb
vmovaps
cwtl
pop
popa
or
icebp
jg
mov
popa
outsb
shrb
jno
in
lahf
mov
jle
sub
sbb
dec
aad
xchg
mov
pop
aas
insb
pop
arpl
pop
movsb
dec
xchg
mov
xchg
lods
mov
push
movsb
incl
and
dec
pop
cmp
enter
jae
inc
mov
dec
add
jae
add
dec
rclb
or
push
pop
fdivrl
mov
dec
aas
sarb
xchg
fdivr
pop
mov
cs
addr16
movsl
xchg
movsl
xor
inc
cmp
cmp
adc
or
sbb
add
or
lcall
popaw
pop
cld
sub
and
push
shll
add
dec
dec
or
mov
jno
adc
mov
mov
add
xchg
mov
dec
xchg
add
stc
xchg
or
xor
jmp
ficoms
iret
cs
pop
ljmp
xor
outsl
lds
push
cmc
into
clc
cwtl
sbb
bswap
pop
aaa
or
pushf
xchg
sbb
das
push
sub
mov
shll
jmp
jl
insb
inc
xchg
cwtl
mov
cmpl
xor
fsub
jb
lea
mov
pop
mov
outsb
sbb
sub
call
push
gs
add
jge
dec
add
cmpsl
sub
fadd
ss
test
xor
xor
push
pop
out
sub
and
into
sti
pop
aam
push
push
hlt
or
loope
in
or
pop
scas
cs
stos
and
inc
imul
inc
into
jp
js
in
call
adc
push
jge
lods
outsb
outsb
mov
jg
dec
mov
cmp
roll
outsb
std
inc
lds
jg
dec
scas
call
lea
ljmp
int
adc
fwait
mov
xorb
shlb
mov
adc
cmp
repnz
mov
sub
sub
xchg
pop
add
xlat
push
scas
int
or
pop
int
mov
and
and
enter
loope
inc
sbb
das
jmp
fs
jl
mov
test
punpckhdq
dec
add
xchg
push
fwait
pop
add
in
push
xor
sub
mov
cmp
sbb
dec
jl
xor
sbb
stos
push
pop
xchg
cmp
inc
xor
xor
movb
cmp
sarl
mov
lds
xor
add
iret
inc
daa
stos
sbb
movsl
sub
pop
in
outsl
or
pop
adc
insb
push
inc
or
mov
loopne
push
jmp
push
loope
push
movsl
hlt
sbb
inc
push
leave
dec
xchg
jp
or
jge
mov
mov
test
out
mov
xor
xorb
and
jmp
or
push
or
icebp
fwait
inc
sbb
xchg
inc
addb
ja
and
sub
dec
sbb
lcall
mov
insb
cmp
stc
dec
adc
pushf
fwait
xchg
cmp
int3
push
mov
je
adc
test
es
cmp
sbb
xlat
loopne
outsb
loope
pusha
call
fcmovb
aaa
into
dec
pusha
sub
fisubl
mov
lods
cmpsl
pop
popa
sarl
cmp
jo
test
xchg
xor
sbb
shrb
add
xchg
cmp
jmp
out
adc
stos
mov
mov
lods
mov
add
mov
imul
push
aad
fistps
lret
orb
jnp
and
jo
ret
pushf
xor
push
aad
jnp
stos
inc
filds
ficomps
lods
pop
int3
inc
aad
inc
pop
mov
imul
mov
push
push
pop
jg
add
add
mov
cmp
loope
mov
stc
repnz
movsb
mov
sub
inc
shll
mov
in
cmp
sbb
mov
test
add
in
cltd
in
push
dec
lahf
jecxz
cmpsb
les
sbb
cmpsl
icebp
mov
mov
lods
xchg
ret
popa
and
or
jb
mov
rcr
inc
fimull
xchg
xor
daa
pop
in
pop
inc
mov
sub
mov
jnp
std
movsb
sbb
inc
mov
xchg
adc
movsb
sub
dec
lods
mov
mov
add
dec
mov
xor
inc
sbb
pop
dec
add
push
mov
cmp
paddd
cmp
imul
push
stc
dec
mov
push
movsl
mov
hlt
pop
mov
outsl
pop
or
mov
test
out
push
pop
in
cli
out
sub
pop
cmp
test
and
add
int3
cmp
xchg
mov
and
and
mov
and
fadds
filds
inc
jmp
jne
stos
stos
test
lahf
jo
ja
idivl
pop
mov
inc
inc
addr16
pop
mov
test
lahf
xor
insl
xlat
mov
mov
fldl
outsb
gs
lahf
das
stc
pusha
rolb
mov
mov
xor
lret
push
pop
jmp
inc
sbb
ds
pusha
jo
shrb
xchg
out
les
lock
add
movsl
movsl
insb
and
popf
sub
idivl
dec
loop
adc
inc
push
add
xchg
je
outsl
push
mov
fisttps
push
sbb
stos
inc
gs
jno
xchg
pusha
mov
ja
pop
clc
xchg
jns
xchg
stos
mov
lods
jecxz
sbb
std
add
int3
xor
push
push
imul
mov
mov
inc
fdivl
cltd
cmp
lret
xchg
leave
jmp
out
sbb
sbb
add
std
sub
or
push
hlt
mov
es
sub
inc
cmpsl
jns,pt
mov
std
lcall
adc
insb
fmull
ret
push
and
mov
inc
fidivl
xchg
cmp
enter
leave
jmp
push
sbbl
pop
sbbb
xchg
popf
xor
lods
mov
push
push
add
int3
cmp
pop
cmc
sbbb
mov
icebp
mov
negb
cmpsl
xor
push
scas
inc
mov
arpl
out
repz
ljmp
push
or
mov
int
cwtl
jne
pop
daa
mov
int
jb
cltd
xor
nop
sti
adc
cmp
and
sub
enter
ds
into
mov
sbbb
jb
shrl
mov
int
incl
push
sbb
loop
xchg
sarb
fstps
or
or
pop
bound
mov
mov
inc
frstpm(287
shll
cli
cmp
push
mov
xchg
lret
sti
mov
ret
dec
push
outsl
dec
loope
movsl
stc
nop
xlat
shrl
clc
pop
scas
sub
push
inc
dec
xor
cmp
pushf
push
ljmp
jno
and
loop
inc
inc
es
add
mov
mov
out
bound
push
ds
cmp
test
cmc
mov
ret
je
aas
fistl
push
out
sub
dec
jb
adcl
pop
sbb
stos
aas
es
xor
ret
pop
jnp
mov
je
jecxz
insl
adc
std
nop
and
testb
nop
adc
call
dec
loop
cmp
push
insl
add
insb
add
xchg
mov
in
mov
cmp
lods
inc
push
mov
gs
fldln2
test
or
mov
sub
mov
mov
push
in
xlat
out
mov
and
dec
movsl
cmp
rcl
repz
mov
jg
scas
fbstp
addr16
xchg
cltd
add
xchg
xor
inc
fldl
sub
fwait
popa
enter
loop
xor
pop
testb
mov
imul
cmpsb
sahf
insb
add
cmpsb
adcb
push
jmp
inc
dec
shrl
xchg
jl
or
pusha
vpshlw
lods
adcb
and
std
xchg
push
mov
inc
ljmp
xor
jae
pop
dec
jg
inc
inc
inc
mov
pop
pop
xor
inc
stc
es
xor
cmpb
inc
pushf
cmc
mov
or
das
mov
shrl
mov
arpl
cmp
push
sub
inc
stc
dec
loop
fs
ficoms
call
scas
fidivrs
adc
push
lods
add
fwait
xor
mov
pop
jp
pop
lods
mov
bound
push
jns
rorb
gs
mov
mov
mov
es
rcrl
cmp
adc
cmp
les
sub
pop
test
gs
inc
mov
in
and
aad
push
cltd
cmp
pop
inc
add
xor
popf
sbb
add
fsubl
je
inc
stos
push
inc
stc
je
xchg
adc
and
or
popa
lahf
out
push
daa
loope
movsl
jl
push
out
push
lods
pop
sub
ret
inc
fnsave
pop
out
stos
xchg
push
out
int3
sbbl
push
and
sub
mov
movsl
mov
stos
adc
pop
push
ljmp
mov
sbb
lret
mov
jp
adc
xorb
lods
sbb
xchg
push
pop
imul
mov
les
loope
sahf
xor
jle
in
test
inc
fsts
cs
icebp
pushf
xor
test
psrlw
out
xor
nop
adc
iret
pop
mov
scas
or
sub
call
pop
stos
dec
out
cmp
jge
sub
insb
sahf
pop
out
and
and
je
push
call
idivl
cmp
sbbl
cmp
clc
ret
pop
cmc
fistpl
es
or
push
cmc
mov
aaa
into
movsl
stos
and
rcrb
cld
test
lret
sbb
jmp
adc
pop
jnp
add
inc
ror
ficomps
orl
xor
lods
inc
and
lret
bound
lock
jmp
enter
ret
mov
outsl
pop
repnz
pop
in
test
xchg
sub
insb
pop
testb
imul
into
inc
mov
movsl
cmp
adcb
mov
xor
mov
xchg
sbb
in
movsb
cmp
add
mov
sub
cmc
mov
mov
jne
dec
dec
icebp
mov
lock
push
insl
add
pop
outsl
push
mov
ret
and
mov
adcb
js
enter
mov
add
and
dec
inc
ss
jo
adc
mov
into
pop
repz
leave
pop
std
sarb
xchg
push
cmc
rcl
push
aam
out
or
les
imul
jae
and
xchg
sbb
test
cwtl
test
lret
nop
jbe
iret
rclb
jae
in
cmc
sub
repz
dec
add
xchg
divb
adc
xchg
xchg
and
insl
jne
lds
mov
nop
cmpsl
mov
fistpll
in
add
inc
stos
cmp
and
push
das
adc
mov
push
std
xchg
push
test
mov
jbe
aam
xlat
jge
mov
inc
xlat
aas
xlat
jmp
or
rclb
int
cmp
dec
in
cmp
sti
jne
dec
out
jne
pop
inc
lds
rcrl
lds
out
or
dec
jecxz
sub
add
mov
mov
lahf
ss
jmp
push
push
lods
cmp
cmp
lret
pop
dec
in
in
daa
mov
out
adc
out
cmp
xchg
or
cmp
sub
dec
mov
push
mov
imul
mov
movsb
and
cmp
pop
movsb
cmp
and
sub
outsl
sbb
or
or
mov
imulb
xchg
pop
pop
test
dec
jge
jmp
push
xchg
cmp
mov
addr16
mov
sti
inc
mov
loope
push
shr
mov
inc
mov
add
es
outsb
test
xchg
cwtl
mov
orl
ds
shrl
push
jb
push
fdivs
mov
ljmp
cmp
cmp
stos
hlt
push
out
mov
daa
mov
cltd
or
das
enter
and
or
rcrl
cmp
out
lcall
movsl
dec
mov
inc
addr16
lock
pop
dec
adc
lods
cmpsl
imul
inc
push
sbb
push
cmc
inc
fmulp
aaa
jge
test
inc
fdivr
movsl
in
test
and
int
out
enter
jmp
push
cltd
fwait
jae
fistpll
push
call
flds
ret
mov
out
pop
scas
inc
pop
mov
adc
lods
fbstp
sub
sbb
lea
mov
xchg
jg
inc
outsl
adc
das
fbstp
add
xchg
xor
push
into
test
jmp
fwait
or
jno
std
cs
pushaw
out
out
and
sub
xor
lret
mov
das
in
lds
enter
jne
icebp
fsubrl
adc
movsb
dec
dec
out
cmpl
lahf
lahf
pop
pushf
into
mov
testl
mov
cld
es
enter
daa
mov
cld
in
rcr
mov
fldenv
rcrl
outsl
xchg
les
or
pop
cmc
rcrl
pop
mov
xchg
add
xchg
mov
leave
cmp
mov
pop
int
push
inc
xchg
aaa
repnz
loop
or
repz
in
xchg
stos
inc
add
cmpsb
sti
xchg
push
or
nop
into
ret
pop
fidivs
mov
add
pushf
xor
mov
jnp
or
daa
mov
and
and
adc
ljmp
push
sahf
adc
sahf
cmpl
dec
inc
mov
mov
loopne
adc
add
nop
daa
loopne
lea
mov
std
int3
inc
push
adc
mov
fldt
rcr
sbb
sub
dec
dec
pop
out
pusha
in
cmp
mov
or
or
sub
xorb
mov
pop
sub
dec
in
xchg
cmp
sub
mov
dec
inc
fdivrl
rorl
inc
fsubl
insl
inc
fstpt
pop
cmp
jo
inc
xlat
pop
xchg
inc
fistl
ss
stc
ja
inc
xlat
adc
xor
int3
mov
ss
inc
imul
sub
movb
in
je
icebp
sub
scas
jge
add
iret
leave
push
jmp
aas
mov
cmc
mov
mov
or
adc
xchg
mov
lds
fbstp
in
jo
incl
pop
sahf
push
mov
and
sbbl
mov
xchg
subl
repnz
and
stc
cwtl
outsl
fdivl
mov
in
imul
jmp
mov
cltd
das
andl
adc
aas
pop
hlt
mov
popa
clc
stc
aas
mov
movsl
xchg
fnsave
add
mov
jge
xchg
test
fwait
xor
std
cltd
xor
lret
pop
rcrl
mov
lods
mov
sti
pop
mov
fwait
pop
adcb
mov
mov
xchg
shl
jle
mov
inc
stc
add
inc
mov
mov
rcl
lds
cmpsl
ds
and
aam
mov
fisttpl
jmp
pusha
imul
add
das
lock
and
into
fildl
mov
xchg
and
and
xor
test
jecxz
pop
cltd
xor
push
or
xor
cmp
mov
inc
jae
jb
add
loop
mov
daa
fidivrl
sbb
adc
jne
addr16
mov
ror
pusha
test
mov
mov
inc
rclb
jge
jnp
movsl
xor
test
pushf
test
sub
cwtl
das
iret
push
test
lds
negb
sbb
mov
sub
push
pop
jb
jb
fistps
scas
adc
stc
xor
mov
push
lret
dec
fadds
lods
in
ja
mov
cltd
jns
repz
leave
aas
xor
in
cmp
je
dec
cmp
vprotb
pop
cmpsl
imul
shrl
cltd
xchg
fmul
call
sahf
sub
rcll
mov
cwtl
in
subl
pop
cmc
ds
adc
sbb
push
scas
push
rcll
out
push
inc
scas
outsl
push
mov
sbb
ljmp
mov
les
sub
jo
xor
push
pop
scas
inc
lahf
dec
mov
pop
aam
mov
insl
push
scas
lods
adc
xchg
mov
inc
push
fildl
mov
lods
push
xchg
jg
sti
or
lret
add
cmp
in
test
insb
add
shrb
mov
or
lock
mov
jp
int
cltd
xchg
loope
stc
cli
xlat
outsb
sub
aad
mov
stos
mov
xchg
xor
cwtl
jb
sahf
xchg
xor
mov
mov
scas
xor
cmp
movsb
mov
mov
sahf
push
xor
scas
pop
add
jp
out
dec
mov
pop
adc
mov
and
push
mov
fcmove
jno
sbb
aas
xchg
jno,pn
pop
add
push
in
jbe
ret
loop
add
cmp
cmp
inc
clc
jo
jns
sub
mov
inc
test
push
sub
dec
pop
mov
pop
xsha1
cmpsb
mov
lahf
popf
mov
add
filds
adc
mov
inc
jne
jge
ffreep
adc
lahf
jmp
lea
xchg
lret
cld
mov
pop
aam
les
cmp
xor
nop
and
fsubs
mov
cmpl
je
jns
test
push
cmc
add
mov
daa
dec
mov
cmp
movsb
fsts
mov
jno
aam
mov
sub
mov
jl
push
dec
push
movsb
jo
mov
test
cmc
test
ja
mov
mov
mul
icebp
mov
fsts
sahf
fdivl
aaa
pusha
jb
inc
pop
mov
xchg
xchg
adc
pop
push
mov
add
sbb
test
int
and
cmc
mov
xchg
mov
ja
jmp
mov
lret
xchg
ret
push
imul
adc
cmp
in
lcall
mov
and
adc
or
xchg
pop
pop
pop
cmc
xor
not
cmp
cmpsb
loop
adc
push
out
and
and
and
outsb
xchg
repnz
imul
mov
outsl
sbb
mov
ljmp
loopne
mov
out
sbb
nop
call
jbe
xchg
add
cld
add
push
cmp
loope
or
std
adc
mov
nop
push
in
movsl
int3
sub
test
cmpsb
and
lret
and
mov
cmp
enter
mov
cmp
cmpsl
cmp
orb
test
mov
rcl
mov
push
ljmp
xorb
jns
inc
movsl
stos
push
stc
mov
pop
aad
aam
cmp
ret
inc
in
fs
mov
mov
rcll
mov
vmwrite
jb
push
mov
subb
push
in
xor
jb
in
jl
fisttpll
cmp
cld
xchg
mov
test
notb
gs
mov
jae
xor
stos
out
jo
dec
jle
cmp
xchg
inc
inc
adc
mov
hlt
jno
sub
jle
add
nop
push
stc
nop
push
je
jle
push
sahf
rol
jle
jbe
test
dec
push
pop
js
cmc
pop
repz
inc
ret
cmpsl
movl
sub
jae
fs
int
add
xchg
or
fwait
push
lret
cmp
in
lods
test
mov
jae
daa
test
test
cs
mov
dec
sbb
ljmp
fs
in
out
sbb
test
jmp
popa
mov
cmp
sub
ds
sub
add
int3
call
cmpsb
lret
rorl
sahf
nop
pop
rolb
es
xchg
mov
rclb
mov
mov
cmp
pop
nop
jge
mov
pop
out
test
push
out
fstpl
into
cmp
cltd
pop
jge
cmpl
in
xchg
dec
repnz
je
cmp
mov
loop
addr16
sub
fildl
jnp
stos
adc
mov
jge
sbb
dec
in
pop
popa
loope
cmp
push
add
addl
or
cmp
push
jnp
jnp
mov
or
in
jbe
xor
cwtl
push
loop
ret
stos
andl
mov
adc
xchg
sbb
aam
jnp
test
mov
aam
push
scas
aaa
or
xor
sub
fdivrl
rol
inc
adc
adc
sti
jns
icebp
cmp
and
xchg
repz
mull
aad
jnp
xchg
mov
and
cmp
pop
mov
dec
addr16
ljmp
aaa
test
dec
mov
mov
jge
aad
sti
xchg
dec
xor
and
pusha
idiv
jne
fldl2t
push
stos
iret
repnz
into
jg
adc
ds
sbb
fbld
movups
push
adc
inc
nop
or
ja
sub
divb
andl
cld
imull
call
imul
dec
cmc
mov
jno
adc
outsl
je
icebp
cmp
inc
shlb
decb
test
jns
mov
pop
and
cmc
push
push
cmp
cmp
cmp
mov
loope
dec
in
add
and
inc
out
push
mov
jle
jp
scas
push
push
dec
and
xor
mov
fstl
cwtl
fs
xchg
lcall
outsb
insl
loop
adc
pop
push
cmp
xor
test
out
push
push
mov
dec
fwait
std
clc
gs
or
movsl
push
and
add
adc
sbb
aas
addr16
repz
and
xor
cwtl
out
fs
in
fwait
sbb
cli
xchg
imul
scas
test
cli
test
sbb
test
iret
out
mov
mov
out
dec
loop
pop
stos
aaa
xor
mov
xchg
or
fwait
xor
aad
vpcomub
in
inc
or
orl
sbb
cmpsw
mov
shll
xor
jmp
jmp
mov
sahf
das
push
mov
ret
loop
out
mov
pop
xchg
nop
scas
out
push
call
nop
dec
mov
int
decl
jns
add
inc
cmc
mov
clc
ja
sbb
push
mov
mov
lea
ljmp
jle
mov
cltd
or
add
bound
ret
lahf
pop
cld
xchg
mov
call
mov
das
sbb
aaa
mov
inc
push
cmpsb
cwtl
mov
mov
cmpsb
pop
push
into
add
sbb
xor
ja
test
fildl
add
es
lahf
cli
fidivl
ret
xsha256
cmpsb
nop
into
jne
push
xchg
hlt
mov
rclb
jae
mov
orb
sub
fcmovbe
cmp
mov
out
push
jecxz
punpcklwd
repnz
push
loop
and
push
mov
mov
cmp
ret
mov
imul
stos
jno
divl
or
mov
xchg
sbbl
icebp
mov
inc
pop
xchg
loopne
in
xorl
jns
fwait
leave
lret
pushf
adc
xchg
and
cmpsl
icebp
inc
mov
repnz
cmpsb
cmp
or
pop
mov
sub
out
push
mov
fbstp
les
xor
mov
pop
inc
sarb
outsl
les
push
outsb
mov
ficoms
dec
add
add
es
jno
cmp
pusha
repz
add
call
aas
or
mov
xchg
add
and
jp
mov
cmpsb
ds
cmp
xor
lahf
sti
loopne
xchg
mov
iret
cld
push
sub
sti
ret
xlat
lret
xchg
shrl
pop
inc
bound
imul
push
ret
hlt
jae
rcrw
xchg
in
inc
and
adc
push
call
sbbl
pop
or
dec
not
adc
pop
cmp
dec
int3
aam
out
insb
mov
inc
faddl
arpl
lahf
cmp
loop
jecxz
sub
mov
cli
jge
add
imulb
mov
rcrb
subb
jns
cwtl
and
pop
mov
mov
fnstenv
jle
push
lcall
adc
xchg
mov
into
es
or
data16
or
and
xlat
loop
popf
sbb
fnstenv
pop
iret
mov
lret
je
mov
xchg
and
mov
int
jbe
or
and
inc
push
inc
mov
rcrl
sbbb
add
fcmovnbe
mov
mov
xlat
pop
out
or
pop
jg
push
fnsave
or
mov
mov
fisttpll
fnstenv
lret
pushf
sub
pop
repz
test
pushf
inc
jl
lea
mov
out
mov
mov
and
dec
stos
and
mov
lock
cltd
xor
lret
xor
enter
cltd
in
and
popa
leave
push
push
repnz
mov
loop
and
push
jmp
mov
out
stc
sbb
and
jmp
mov
jo
jne
ficoml
popa
jae
dec
push
add
or
std
std
mov
out
std
dec
rol
dec
loopne
mov
inc
cmc
jbe
xchg
sub
push
push
popf
test
mov
int
push
mov
mov
dec
cmpsl
enter
mov
into
push
rcrb
mov
cmpsl
sarb
xchg
popf
lret
jp
add
out
push
data16
movsb
push
jbe
fdivl
mov
int
loopne
dec
pop
ror
mov
jge
ljmp
int
inc
or
push
push
stos
mov
aad
repnz
push
fisubrs
cld
test
arpl
mov
rcll
call
jl
jg
inc
pushf
mov
das
movsb
mov
scas
jmp
or
jno
mov
or
xchg
mov
cmp
ljmp
fsubr
mov
fmull
hlt
test
sbb
dec
js
mov
mov
add
ficomps
cltd
mov
mov
cltd
jge
rcl
xchg
in
add
mov
or
mov
test
xchg
test
pop
cmpsl
vpunpcklqdq
lods
sbb
inc
je
sbb
scas
and
loopne
mov
ds
rcrl
arpl
scas
scas
mov
mov
and
pop
sbb
sbb
or
loope
cmp
adc
aam
cmp
imul
xchg
inc
push
or
mov
xchg
inc
nop
inc
jecxz
test
push
lcall
push
scas
push
mov
enter
aas
dec
ret
push
adc
or
sbb
pop
sahf
loop
fistpl
jl
jae
dec
push
fdiv
mov
and
cs
jae
jp
jg
inc
cld
xor
in
jle
sub
out
push
push
repz
sub
les
pop
scas
dec
xchg
out
inc
fdivl
es
sub
lds
mov
pop
fbld
rclb
scas
add
imul
xchg
aad
cwtl
dec
fs
sub
fdivrs
push
shl
std
stc
jbe
popf
jnp
or
in
scas
cmp
cmp
out
fildl
xlat
das
mov
aaa
and
push
imul
adc
xchg
sub
fstpt
daa
push
rorb
movsl
adc
divl
je
cmp
std
mov
xchg
adc
gs
pop
add
adc
adc
dec
sbb
adc
cld
add
fwait
outsb
or
jne
sub
call
js
outsl
and
scas
ja
dec
mov
mov
ror
pop
js,pt
and
sbb
mov
cmpsb
cmp
fwait
stc
test
aas
nop
push
push
xchg
lock
sub
mov
push
cmp
ss
sbb
lcall
jle
mov
cld
stos
bound
mov
sbb
jno
mull
push
lds
jge
cltd
xor
loopne
insb
outsb
add
xchg
xchg
add
mov
ds
mov
sub
addr16
sbb
xchg
mov
push
mov
lea
fdivrs
push
fisttps
push
jnp
pop
pop
rclb
push
addr16
dec
addr16
inc
fsubr
cmp
mov
jno
dec
jg
jl
repz
push
cwtl
sti
int
stos
es
pop
int
loopne
push
nop
test
cmc
fisttpll
enter
aaa
jge
xor
movb
jae
adc
iret
push
xchg
test
add
lds
mov
inc
shrb
sarl
cld
iret
push
lcall
dec
pushf
insb
dec
jno
dec
dec
and
push
xchg
scas
push
out
sbb
scas
mov
outsl
adc
mov
sub
fwait
in
out
sarl
push
lods
hlt
in
sub
cmp
sti
enter
xor
or
stos
inc
mov
add
mov
loop
int
inc
rcl
outsb
mov
fldt
pushf
add
pop
xor
mov
and
sar
repnz
stos
jnp
fisubl
or
xchg
jno
aaa
into
xchg
xchg
sbb
push
out
clc
fldcw
les
in
sbb
jmp
or
adc
xorps
sub
xlat
outsb
xchg
daa
repnz
test
pop
mov
sahf
outsb
clc
cli
mov
sub
rcrl
test
dec
and
xor
cld
push
leave
insl
sahf
insl
pusha
mov
hlt
push
pop
ret
call
popa
outsl
shll
nop
fistl
lcall
jg
mov
lret
pop
xor
nop
in
push
test
out
mov
adc
mov
pop
lret
push
cmc
pop
cmc
es
sub
jbe,pn
cli
inc
and
adc
sbb
cmp
subb
jle
and
mov
pop
pop
push
cmp
aas
push
scas
pop
bound
cmp
mov
jge
jno
inc
cmp
shll
xlat
outsb
mov
loopne
add
stc
dec
sbb
pop
bnd
sarb
mov
fnsetpm(287
jnp
loopne
ljmp
push
movsl
pop
lock
xchg
in
movsl
cmp
and
push
cwtl
adc
repz
add
stos
or
push
out
mov
pop
cmc
rorb
push
adc
pop
xchg
ja
movsb
cmp
fsubrs
add
mov
shrb
xchg
pop
out
add
fwait
xor
dec
xchg
cmp
pop
cmc
fucomp
sbbb
ljmp
xor
sub
lcall
add
xchg
icebp
push
leave
xchg
mov
fisubs
xchg
mov
enter
fmul
in
push
lock
xor
jmp
lds
or
push
shlb
or
mov
out
lods
pop
sbb
mov
add
lock
sub
jg
xor
es
xor
sbbl
lret
fisttpl
mov
xlat
and
push
clc
adc
ret
xor
enter
pusha
loopne
xor
jb
pusha
movsb
xor
leave
or
out
lds
mov
loope
fwait
jmp
daa
stc
pop
xor
mov
lds
mov
push
shlb
sub
nop
sub
cmp
xchg
cmp
push
outsb
add
adc
out
dec
xor
rorb
push
outsb
sub
lahf
push
lea
mov
pop
sub
test
cmp
dec
out
test
push
es
inc
jg
mov
test
sub
xor
xor
push
mov
cmp
inc
fldt
in
cltd
mov
aad
mov
pop
repnz
mov
mov
xorb
mov
xchg
cld
unpcklps
jae
jb
jns
and
xlat
testl
xchg
sub
xchg
cmp
add
insl
cltd
sahf
fidivl
push
dec
leave
pusha
inc
adc
mov
das
pop
jno
test
lret
jbe
in
dec
divl
mov
inc
fimull
ljmp
pop
insb
add
pop
cmp
mov
add
rclb
pusha
roll
call
mov
push
ret
in
inc
push
lcall
xor
xchg
push
js
add
movsb
cld
or
mov
push
out
ret
inc
je
idivb
mov
inc
pop
in
lds
xchg
sbb
ret
ds
pop
inc
flds
adc
cmp
xchg
aad
pushf
negl
cld
sahf
push
xlat
jg
test
aad
fdivr
inc
sbb
stos
push
cmp
std
push
sbb
xchg
dec
sahf
adc
scas
xchg
jl
and
push
add
dec
lret
into
stos
inc
add
xchg
sub
push
popf
and
inc
cmpsl
inc
and
jne
int
cli
xchg
inc
fld
sbb
orl
negl
outsl
or
insb
shrl
repnz
inc
loopne
push
adc
cld
push
and
cmpsb
jbe
and
mov
cmpsl
lea
iret
fdivrs
xor
movsl
lret
push
dec
in
notb
xchg
out
loop
div
nop
jecxz
test
in
imul
cmp
xchg
outsb
xor
push
fwait
push
cmpsb
lret
jge
in
sub
jnp
mov
cmp
stos
push
sbb
lret
dec
pop
cmp
mov
dec
and
mov
sbb
ss
jo
push
xchg
sub
push
shlb
push
gs
fnstenv
pop
mov
sub
xchg
sub
push
inc
sbb
xor
xor
pop
dec
add
xchg
push
mov
pop
les
movsl
mov
bound
jmp
jge
dec
repnz
not
xor
adc
sbb
movsb
mov
rcr
insl
enter
jbe
add
inc
xor
test
loope
push
adc
jns
filds
inc
xor
cwtl
das
xor
mov
push
mov
imul
fisttpll
jge
xor
push
pop
cmc
cltd
push
jle
in
enter
or
enter
loop
xchg
ss
cs
mov
fcompl
mov
mov
fsin
xchg
or
sbb
ficoml
mov
sarl
adc
fsub
xchg
push
into
mov
mov
sub
dec
push
orb
push
aam
add
sub
rcrb
sub
dec
fs
pop
mov
dec
fstps
bswap
ljmp
jg
xchg
sbb
lds
mov
fdiv
lods
inc
sub
dec
lret
fs
rcll
mov
std
repz
vcvtss2si
pop
fistpl
push
std
repnz
cmpsl
jb
inc
sub
jmp
mov
in
mov
sub
pop
lock
and
cmp
cmpsb
push
in
test
dec
int
or
sub
xchg
add
inc
xchg
ds
push
pop
ret
inc
sbbb
rcrb
imul
or
xor
dec
fcmovu
ss
loope
dec
out
fldl
push
jo
int
add
push
movsb
dec
jecxz
and
push
test
data16
arpl
test
sub
push
pop
sub
xor
push
mov
outsb
addr16
ds
stos
inc
dec
popf
scas
mov
shl
cwtl
dec
lods
pop
add
xchg
push
xorl
mov
jae
test
adc
push
push
push
loop
ljmp
ljmp
jno
in
rolb
and
or
sarl
cmc
into
cmpsl
add
les
mov
cmp
adc
mov
mov
das
jg
pop
cmp
push
inc
mov
and
mov
inc
jmp
dec
jbe
insb
mov
xchg
das
jmp
daa
pusha
pushf
aas
loop
add
outsb
mov
jno
mov
addr16
sub
and
mov
data16
xchg
jmp
lahf
ss
push
out
or
arpl
adc
mov
mov
or
and
cli
dec
push
sbb
sbb
sub
mov
xor
or
movl
dec
mov
or
ret
pop
ret
in
pusha
ljmp
mov
test
inc
call
adc
mov
addb
fwait
xchg
test
rcrb
jno
ss
xchg
xchg
movsl
std
mov
mov
mov
pop
je
sbb
fs
mov
shrb
mov
into
mov
and
insl
mov
jnp
js
repz
fs
aad
cmp
inc
push
pop
inc
jns
cs
fistl
rclb
mov
popf
roll
and
push
sub
adc
testb
adc
and
loope
sub
push
sahf
or
dec
jl
sub
cltd
std
test
mov
movsl
data16
or
ds
jno
cs
ss
jbe
mov
jge
fadds
aad
leave
in
in
sbb
ficompl
in
out
dec
neg
or
jmp
push
iret
push
jmp
sbb
pop
push
daa
mov
xchg
icebp
jne
and
aaa
push
mov
mov
push
cmp
in
mov
popa
ds
cld
add
cs
cmp
loope
or
add
xor
or
sub
hlt
ds
xor
dec
xchg
sbb
push
cmp
in
in
sbb
mov
out
xor
dec
out
mov
adc
dec
push
je
xchg
sub
add
pop
push
sub
leave
jge
scas
in
testb
sub
push
movsl
pop
movsb
ljmp
les
scas
cmp
data16
sbb
or
repnz
sub
push
pop
mov
pushw
add
adc
js
xchg
fmul
xlat
mov
pop
push
test
ljmp
pop
cmp
sub
fucomp
xor
es
cli
test
sub
pusha
or
pop
testl
scas
adc
mov
fildl
aaa
dec
or
xchg
jns
cmp
pop
movsl
or
pop
cld
dec
in
enter
pop
aaa
into
nop
jle
and
push
lods
cmp
inc
mov
cmp
push
and
jge
jbe,pn
push
inc
push
cwtl
js
out
cmpsl
sti
cs
inc
outsb
push
cmp
dec
arpl
movsl
jae
sbb
xchg
fsubs
push
lock
in
call
in
xchg
lret
cld
hlt
daa
lret
push
or
rol
jbe
imul
sub
cmp
es
mov
pop
mov
nop
lods
cltd
push
in
out
dec
shr
jb
cmp
or
dec
ror
dec
inc
in
push
pop
inc
sti
fwait
ljmp
outsl
push
pusha
orl
sub
fldl
out
fnstsw
mov
xor
repz
adc
lcall
sbb
and
cwtl
sti
mov
add
jle
mov
popf
lahf
arpl
adc
cli
xchg
jecxz
mov
in
add
mov
or
shr
out
mov
cmp
lea
and
push
sub
popa
adcl
out
sarl
mov
push
movl
clc
adc
aam
mov
inc
out
int3
adc
mov
insb
lea
xchg
cwtl
cmpsb
stos
sub
or
sti
es
and
sub
imul
or
add
movsb
jnp
push
daa
lods
xor
repz
pop
cmp
dec
and
outsl
xorl
or
test
inc
add
orb
add
dec
test
xchg
mov
les
cs
std
jle
xor
pop
cmc
and
cwtl
jne
inc
jl
cld
cld
add
sub
mov
jae
push
mov
mov
lret
mov
repz
test
int
enter
sbb
insb
dec
and
mov
das
push
lods
aad
adc
mov
fsubrp
stc
pop
shlb
jbe
ja
aas
out
test
stc
and
or
dec
adc
dec
dec
sub
pop
jne
shrl
xchg
cmpsb
dec
pushf
jb
cmpsl
sub
ss
andl
xchg
and
loope
xchg
xchg
ljmp
insl
cmp
jbe
sub
lea
cmp
mov
lods
inc
insb
out
int3
and
mov
mov
fidivrl
sbbb
iret
and
mov
popa
or
push
aaa
pop
mov
sub
pop
mov
shr
std
push
lcall
cmp
push
popf
loope
xchg
jl
cmp
in
xor
mov
pop
sbb
pushf
dec
sbb
cmpl
mov
add
push
jno
pop
leave
roll
lds
fistps
xor
data16
push
mov
push
cmpl
xor
mov
adc
adc
into
fs
and
and
les
or
mov
into
mov
sti
inc
mov
cmpb
inc
cmc
mov
pushf
sub
jl
out
mov
sub
test
ja
cmp
cli
rcr
fsubrp
pop
adc
pop
pop
cmc
popa
rcl
pushf
sub
popf
das
cmpl
inc
xlat
xchg
in
pusha
aas
jnp
ljmp
mov
repz
pop
test
cmp
pop
nop
xor
xchg
imul
pop
movsl
cs
scas
pop
lods
mov
fiadds
xchg
mov
repnz
xor
mov
add
jbe
xor
icebp
jp
hlt
das
mov
insl
rorl
xor
ss
mov
test
push
leave
pop
cmpsb
jmp
pop
imul
ficompl
sub
aaa
mov
push
and
xchg
pop
lret
lret
mulb
bnd
dec
push
mov
dec
dec
bnd
dec
cmp
fs
and
mov
out
push
aad
cmp
std
push
flds
dec
cmpsb
mov
jmp
xor
xor
shrl
sarb
out
cmp
or
xor
outsl
leave
mov
aam
lds
stos
or
mov
xor
ret
cmp
fildl
outsb
stc
cmp
jb
std
pop
add
stos
aad
and
mov
and
mov
fiaddl
pop
out
and
gs
sahf
sbb
dec
adc
sub
aam
mov
sarl
push
dec
out
aad
and
iret
scas
ffree
ret
jno
repz
mov
or
cmp
cli
xchg
sbb
push
aaa
ret
pop
mov
lds
or
or
pop
movb
cld
jmp
std
dec
mov
xchg
ja
test
js
jl
stos
sti
test
mov
push
ljmp
ds
jns
cld
mov
add
aam
arpl
adc
ljmp
sar
jbe
std
andl
mov
fmuls
push
in
or
sti
inc
pop
lcall
ja
cmp
nop
mov
clc
xchg
sarb
jmp
lret
ret
lock
ficompl
testl
rolb
insb
out
push
sarl
enter
call
popa
add
jp
fsubrl
xchg
fs
pop
mov
cwtl
je
and
arpl
subb
cs
sar
je
mov
inc
in
mov
sub
push
pop
dec
jg
lcall
mov
popf
scas
jno
outsl
cmp
roll
xchg
jbe
pop
mov
xchg
mov
pop
fnstcw
add
sub
adc
in
pop
loop
dec
adc
pop
push
in
mov
cmp
ja
in
sbbb
sbb
jns
cmp
push
fiadds
in
pop
test
sub
cmpsb
mov
mov
and
int
push
imul
push
cli
lds
push
mov
ret
mov
push
aam
lock
push
pop
popa
add
sbb
rcrl
bound
fisttpll
mov
repnz
or
xlat
inc
arpl
xor
icebp
out
xor
arpl
mov
ljmp
inc
cmp
cmpl
packuswb
or
xchg
cs
xchg
shrb
sbb
mov
imul
push
push
popf
lods
xor
enter
and
xchg
iret
jmp
add
xor
pop
rcl
stc
fldcw
xchg
popa
sahf
sahf
dec
add
jge
sub
mov
jae
lret
popf
jmp
data16
mov
stos
inc
cmp
push
xor
or
and
pusha
cmp
sub
cmc
lret
jne
in
sbbl
out
mov
jnp
cmp
cmp
pop
and
bnd
int3
mov
dec
jecxz
and
outsb
and
adc
push
mov
inc
stos
pop
jmp
mov
mov
or
frstor
js
lahf
cmpsl
pop
inc
xor
lret
inc
inc
ror
inc
fsubrl
call
pop
outsb
push
lods
aaa
lret
pop
cmp
dec
and
mov
dec
inc
repnz
mov
push
adc
ficompl
push
mov
jge
inc
push
add
and
loope
sub
push
ret
push
push
fnstenv
out
xchg
cltd
daa
test
ret
shl
roll
sub
push
inc
mov
pop
in
or
frstor
xorl
mov
shll
movsl
lock
es
push
loop
out
pop
jge
in
add
jge
arpl
popl
or
adc
mov
xchg
mov
mov
push
inc
and
enter
mov
clc
push
jbe
out
xchg
popf
mov
push
mov
fwait
data16
rcl
in
xchg
push
and
in
scas
jmp
rcrb
rcll
test
push
cmpsb
xchg
lods
nop
adc
mov
leave
dec
sbb
sbb
sub
xor
fisubrs
das
jb
ror
mov
inc
lods
sti
push
jl
sbb
hlt
cmp
dec
loop
loope
sub
fsubp
jp
setle
movb
mov
repnz
in
mov
test
sbb
jp
cmp
adc
mov
or
mov
fwait
call
cltd
mul
mov
pop
sbb
jno
cmp
jo
outsl
mov
cmp
mov
fisttpl
or
and
fdivs
pusha
lahf
sbb
lea
add
out
dec
out
rcrl
pop
mov
cmp
das
ja
cmp
adc
cltd
ljmp
aad
mov
pushf
outsl
adc
and
xor
in
lret
fistpll
shrb
jle
push
nop
call
or
push
push
ss
or
cmc
xor
ret
add
push
dec
mov
fsubrl
mov
mov
mov
sbb
push
dec
cmp
and
pop
pop
dec
and
inc
aam
loopne
js
lahf
add
popf
mov
repz
and
mov
jne
jp
leave
lods
sub
dec
push
dec
jp
movsb
jnp
mov
jae,pt
cmp
loopne
rorb
dec
loop
sbbl
shrl
push
dec
pop
outsl
enter
add
aas
add
xchg
jns
push
fisubs
or
jns
xlat
dec
mov
jp
or
in
cmpsb
xchg
sub
or
sub
jecxz
xlat
push
push
pop
or
cmpsl
mov
fiaddl
cmp
xor
sub
push
xor
dec
or
mov
call
fisttps
push
jnp
and
fbstp
inc
push
dec
stos
arpl
imul
xchg
jl
ss
jae
clc
lods
stos
push
in
fcmovne
fsubs
sbb
call
xchg
add
xor
shr
aaa
dec
fcoml
arpl
mov
sub
mov
push
lock
loop
shll
sbbw
pop
push
scas
sbb
or
popa
or
pusha
fsubl
inc
rcrb
js
jne
iret
pusha
sbb
sbb
lret
sarl
pop
mov
loopne
mov
cltd
push
push
ret
dec
scas
and
or
jo
movsb
jp
aaa
outsl
popa
inc
mov
sbb
pop
repz
pop
mov
fldcw
bound
jg
push
xor
pusha
fwait
push
cmp
out
icebp
push
popa
sbb
adc
add
imul
das
fisubrs
xchg
negb
loopne
xchg
xchg
inc
js
loopne
mov
xchg
call
movsb
push
cmc
out
icebp
jnp
fdivrs
jb
out
flds
add
and
mov
mov
pusha
bound
mov
sarb
daa
jo
fsts
insl
adc
bound
fstl
adc
int3
push
jnp
pop
push
in
mov
xchg
pop
jp
in
std
push
mov
std
sbb
or
push
or
pop
fscale
loopne
pop
fidivl
sbb
add
mov
push
cmpsl
jg
xchg
cmp
pop
and
sbb
lds
cmp
pusha
shrl
add
pop
push
aad
les
idivb
dec
fstpt
cmp
lds
pop
cmp
lods
mov
sub
cmp
ret
cmc
xor
inc
ret
movsb
xchg
andl
int
arpl
cmp
cwtl
sbb
daa
stc
pop
test
and
lods
aam
ds
in
leave
popf
xor
push
mov
adc
cld
add
jbe
xor
inc
cli
fcmovnu
int3
enter
cmp
jo
or
addr16
rcrb
testl
dec
out
inc
or
out
lcall
dec
sub
mov
xchg
sub
movsl
jmp
stos
ficoms
or
sbb
and
cmp
sub
mov
jae
cs
push
jl
cmp
xor
pop
lods
dec
jle
adc
test
jne
scas
pop
inc
mov
in
sbb
loope
mov
andb
pop
insl
outsb
mov
rclb
fsubl
jl
stos
jne
pop
adcl
xchg
test
mov
add
pop
kxnorb
mov
js
or
add
sbb
test
test
mov
loop,pn
cmp
pop
pushf
outsl
pop
mov
in
mov
shlb
and
cwtl
xor
ret
dec
mov
in
mov
adc
addb
pop
sbb
packuswb
mov
add
mov
call
and
lock
push
nop
dec
cmp
ljmp
cmpb
movsl
pop
popa
les
jecxz
mov
mov
mov
lret
xlat
rcl
stc
mov
push
jno
inc
pop
out
js
in
push
push
adc
in
push
mov
sbb
xchg
dec
lret
cmpsb
aam
dec
and
test
ret
hlt
add
call
push
fsubrs
and
int
and
iret
or
push
in
test
add
in
jne
fs
mov
and
cmpsl
enter
stos
arpl
push
cmp
push
add
icebp
jnp
push
test
mov
cmp
mov
lods
rcll
jno
jae
stos
movsb
fldl2e
cli
mov
inc
fstps
pusha
imul
roll
lea
jns
sahf
pop
cld
lds
ss
jl
or
decl
stos
or
xchg
and
xor
loopne
lcall
lods
jle
mov
jb
sahf
xchg
push
or
test
push
imul
pushl
lock
rcrb
jp
xor
or
pusha
add
mov
push
aam
lea
cmp
pop
add
sbb
dec
sbb
fs
mov
rcrb
aaa
and
stos
repnz
jecxz
sbb
ror
adc
sub
out
xchg
scas
xchg
push
jo
xchg
lret
mov
out
pop
lds
jp
loop
lret
inc
mov
fadds
out
pop
add
js
mov
jnp
push
jle
mov
xor
xchg
cwtl
int
add
aam
and
add
subb
fwait
test
test
data16
mov
jns
push
jg
imul
pop
inc
dec
add
lods
aas
mov
lods
aas
lods
faddl
and
xchg
push
cmp
lods
test
cmp
sbb
adc
or
sbb
pop
mov
cmp
inc
and
xor
or
fsubl
xor
out
fnsave
aad
inc
dec
call
aad
fdivl
movsb
arpl
ret
or
jo
or
xor
popa
pop
test
sbb
lret
popa
xor
push
ljmp
mov
loop
dec
hlt
dec
sbb
cltd
pop
push
adc
stc
aas
imul
aad
xorb
jnp
sarl
push
imul
mov
mov
push
dec
xchg
les
lds
dec
dec
pop
movsb
pop
adc
sub
mov
jae
jae
out
sbbl
mov
xchg
enter
fpatan
lods
push
into
fcoml
xchg
adc
xchg
fsubrs
scas
fnsave
dec
decb
in
std
xor
sbb
mov
xor
sbb
lret
cmpsl
sbb
fbld
pushf
pop
xchg
add
test
mov
in
mov
in
mov
dec
movsl
inc
lds
sahf
rcrl
pop
sarl
pushf
push
lret
adc
cmp
sbb
adc
push
add
daa
imul
xor
jp
mov
xlat
xor
incb
fs
cmpsl
push
add
xor
ss
mov
movsl
andl
dec
popa
dec
shl
stc
adc
mov
shrl
jecxz
hlt
aad
es
push
cmc
in
jo
sub
inc
or
mov
inc
lods
or
lret
addb
rcll
arpl
rclb
mov
fsub
dec
fldcw
xor
push
pop
jnp
mov
loope
jmp
mov
mov
bound
jo
loopne
mov
call
inc
inc
gs
add
ja
ficompl
xchg
adc
jns
jge
ljmp
jae
pop
movsb
bswap
xchg
push
jl
mov
sti
icebp
sbb
mov
dec
pop
pop
movsb
mov
loop
push
cld
stos
outsb
add
shlb
jne
ss
test
faddp
xchg
stos
cmp
pop
fidivrs
stos
add
shl
dec
xchg
jmp
outsl
ret
adc
cmp
xor
pop
sahf
adc
aas
inc
call
jg
inc
xchg
push
mov
push
mov
rcr
mov
pop
cmc
jle
addr16
fisttps
adc
add
sub
out
mov
test
call
nop
sub
sahf
inc
cs
xor
and
arpl
jmp
lret
dec
repz
lds
mov
and
or
sub
shrb
popf
sub
dec
xor
xchg
xchg
dec
out
cmpps
hlt
mov
sbb
popa
test
mov
bound
cmp
mov
cmp
jecxz
mov
addr16
fldcw
xor
repnz
js
je
lret
fnsave
popf
imul
dec
dec
mov
subb
lods
adc
and
in
cli
xchg
fcompl
mov
popa
js
cmpsl
dec
and
nop
data16
sti
fisttps
rclb
inc
push
add
mov
push
inc
inc
dec
dec
mov
movsl
xchg
loop
lahf
xor
js
mov
lods
fcoml
test
aas
pop
sbb
mov
rclb
loop
mov
xor
ss
imul
stos
gs
aam
fisttps
xor
adc
sti
test
out
test
mov
jmp
dec
xchg
push
cld
xchg
mov
sbb
or
inc
leave
leave
insl
mov
inc
int3
xor
shll
jp
push
in
and
inc
adcb
inc
das
and
leave
cmp
and
out
aam
pop
sbb
jg
dec
pop
repz
dec
lds
jp
sbb
ljmp
xor
lods
popa
adc
ja
sub
push
push
and
mov
dec
push
jbe
inc
repnz
rcr
je
jbe
nop
push
push
push
push
add
scas
xor
in
push
xchg
pop
call
lods
ds
imul
call
shrl
cltd
js
and
js
out
imul
in
xchg
call
lds
into
pop
sub
cmp
jg
cmp
dec
mov
popf
add
test
imul
clc
inc
fnstcw
loopne
jns
mov
jne
pop
addl
rorl
xor
mov
add
inc
push
pusha
and
fsts
adc
pop
test
leave
mov
jno
mov
shlb
xchg
lret
je
ret
push
mov
lahf
xor
subb
push
gs
gs
push
add
or
push
or
pop
popf
xchg
repz
and
std
setne
pop
xor
fnstcw
icebp
loopne
pop
adc
ja
push
aad
pop
mov
xchg
pop
movl
mov
nop
sbb
dec
test
pop
push
scas
rolb
fiadds
mov
jl
stos
in
sub
ret
rolb
push
push
sub
xchg
insb
popf
loop
loopne
pop
and
and
pop
popa
and
push
push
sbb
icebp
pop
jb
mov
clc
stc
inc
int
sbb
int
stc
xor
cltd
and
push
push
outsl
and
sbb
data16
fldcw
leave
fbstp
jbe
movsb
fs
push
xchg
int
dec
xor
paddsb
fsubrs
cmc
pcmpgtd
lret
clc
jbe
sub
xor
add
xchg
bound
cmp
cltd
mov
mov
pop
or
pushf
lods
sbb
dec
cwtl
mov
sarb
inc
push
rcr
hlt
dec
repnz
jg
sbb
outsb
clc
cmc
imul
pushf
test
mov
jnp
sub
sti
fwait
inc
cli
and
dec
add
jmp
mov
sbb
add
gs
jns
clc
pop
mov
fwait
mov
adcb
mov
and
mov
lret
repz
or
cmp
nop
movsl
jo
out
shl
dec
mov
sub
xor
xchg
inc
lods
push
push
xor
sub
rclb
mov
loop
loope
mov
push
or
pop
fdivrs
fdivrs
fisubl
or
sbbl
jl
sbb
loopne
pop
xor
ljmp
lret
jmp
dec
pop
xchg
pop
ds
pushf
aam
xor
xlat
lea
aad
mov
out
sub
dec
or
mov
mov
adc
shl
add
repnz
xchg
stc
div
mov
mov
mov
cmp
lods
pop
scas
mov
std
loop
and
mov
or
into
mov
sub
or
mov
fistpll
into
scas
add
mov
pop
and
iret
mov
daa
leave
pop
and
movsb
roll
in
test
cltd
adc
aas
jbe
or
cs
pop
adc
lcall
fsubrs
ror
push
dec
pmaxsw
fstpt
adc
orb
bound
mov
loop
aas
xorl
stc
pop
dec
movsb
and
je
push
push
and
adc
shr
push
add
sbb
ret
xchg
icebp
inc
and
mov
outsl
sub
insb
das
sub
leave
pop
sub
adcb
sbb
inc
adc
data16
cli
pop
sbb
add
xor
jmp
fbstp
and
test
data16
push
jmp
adc
inc
or
imul
dec
movsb
ja
xor
mov
mov
jns
sahf
in
incb
out
cltd
sti
insl
loopne
cmp
or
sbb
xchg
push
pop
imul
sbb
outsb
call
test
lcall
adc
or
push
std
cltd
ja
mov
ja
mov
xor
pop
mov
and
rolb
sub
loop
test
aas
ljmp
jne
xchg
sub
adc
sahf
jns
adc
push
test
mov
mov
je
push
insb
jg
jle
adc
sub
enter
xchg
jmp
dec
fstps
lods
mov
scas
add
cmp
loopne
mov
out
cmp
outsb
addl
push
sub
int
fwait
add
cwtl
mov
repz
fs
movsb
jo
xchg
jmp
push
push
push
mov
push
jmp
sbb
mov
pop
test
and
xorl
call
xor
dec
out
mov
rep
inc
jno
mov
dec
push
adc
pop
aad
fists
adc
fwait
adc
sub
cmp
fcmovb
or
adcl
fists
clc
lds
push
push
sbb
mov
xchg
fbld
divb
cld
stos
iret
adc
mov
test
je
mov
xchg
fsubl
loopne
pop
sbb
dec
push
push
call
das
mov
mov
ljmp
inc
in
dec
fs
ret
imul
cmp
out
or
adcb
mov
mov
aad
dec
jge
pop
adc
ror
push
nop
inc
jns
mov
jae
sti
aaa
imul
lock
push
rolb
imul
psrad
pop
pushf
mov
addr16
scas
add
mov
cmp
adc
dec
push
sub
cmpb
stos
xchg
adc
pop
xor
dec
ja
std
mov
cli
cld
shrl
dec
arpl
sti
cmc
inc
fildll
push
ljmp
jno
xor
mov
call
lea
cmp
xor
and
sarl
imul
lea
cmp
and
ja
rcrl
push
sub
call
mov
push
ljmp
or
xchg
adc
js
fwait
stos
and
aaa
or
jg
cld
cs
or
subl
pop
roll
add
inc
and
mov
insl
orl
adc
push
or
dec
sarb
arpl
dec
sub
and
jo
and
cltd
inc
stos
xchg
push
mov
cli
cld
sub
or
push
ds
mov
push
cmp
mov
pop
adc
push
or
bound
icebp
movsl
repz
mov
adc
cmc
scas
inc
daa
daa
cli
xorb
pop
sahf
xchg
and
negb
jns
mov
pop
dec
push
div
sub
enter
imul
repnz
xchg
jecxz
loop
lea
mov
pop
pop
jb
inc
repz
testb
daa
bound
aam
or
mov
mov
out
les
xlat
ret
in
dec
pop
jecxz
lock
sbb
test
enter
pminsw
addr16
testl
pushf
push
or
shrl
push
pop
shlb
lcall
dec
mov
les
or
mov
jbe
dec
imull
inc
add
dec
outsb
cmpl
aam
mov
dec
sarb
lea
out
scas
push
js
inc
sbb
mov
cltd
push
movsb
adc
push
mov
mov
cltd
push
sbb
inc
imul
xlat
adc
adc
push
mov
fucomp
je
dec
das
cmp
xor
popa
repnz
xorb
or
lods
fisubrs
push
leave
dec
stos
push
mov
cmp
sub
ret
sbb
call
cmp
add
jbe
lods
mov
int3
jne
mov
or
lea
jae
push
xlat
cmp
ficoms
jne
ja
sbb
push
lret
lock
xchg
movsb
test
and
sbb
dec
imul
mov
popf
pop
repnz
pop
movsb
pop
jns
xor
lock
push
int
mov
std
sbb
xlat
sub
aas
pusha
jg
sbb
ret
and
in
inc
int
call
mov
sbb
cld
nop
inc
dec
pop
mov
aas
push
repz
movsl
sahf
push
pop
mov
hlt
and
xchg
xchg
xlat
inc
jnp
test
out
call
rcr
jmp
mov
cmpsl
aam
pop
ljmp
stos
push
mov
xor
cmp
in
pushf
outsl
cwtl
das
jecxz
loopne
shlb
push
sub
dec
pop
aas
xchg
daa
stc
mov
movsb
pop
stos
pusha
cmp
rolb
and
insl
inc
pavgw
inc
inc
icebp
sbb
aad
pushf
fmulp
iret
scas
fmull
gs
xlat
call
aas
cmpsl
cmp
adc
movsb
xchg
icebp
out
out
outsb
lret
outsl
scas
in
jle
iret
dec
fsubrs
mov
daa
push
movsl
xchg
mov
stc
ret
in
test
or
sahf
lret
jb
outsb
lods
les
jae
mov
cmp
ret
push
push
lret
sub
dec
mov
popf
jns
data16
or
jns
sub
dec
inc
push
adc
rcll
jae
mov
pop
dec
cmp
stc
and
push
add
sbb
jne
mov
or
adc
les
roll
movl
incb
xchg
lods
loopne
xchg
push
addr16
mov
fdivrs
sti
xchg
xor
out
pop
in
push
mov
out
sti
push
sarb
sbb
push
enter
inc
lods
subb
jne
inc
pop
add
cmpl
mov
out
jnp
sbb
call
jo
mov
pop
cmp
icebp
inc
mov
dec
xchg
and
incb
je
sbb
sub
fs
call
mov
inc
jno
insl
popf
fldcw
repz
xor
mov
xor
adc
push
test
lods
jle
lahf
arpl
sub
popa
mov
daa
xchg
mov
cmp
test
repz
in
daa
pop
add
and
inc
int3
iret
fcmovnu
imul
mov
cld
in
xor
xchg
sub
jnp
lahf
and
mov
mov
jl
push
test
repnz
test
and
andl
mov
dec
dec
shll
pop
pop
out
in
and
pop
outsb
push
mov
add
iret
xchg
test
mov
dec
test
leave
hlt
sub
mov
and
ficoml
ljmp
xlat
outsb
sti
movsb
cltd
pop
jecxz
mov
js
mov
cwtl
mov
cwtl
aas
std
sbbb
cmp
les
leave
add
pop
mov
popa
pop
cmc
sub
adc
sub
mov
dec
and
xor
mov
push
mov
loop
fiadds
data16
insl
cltd
mov
hlt
shr
xchg
xor
jmp
and
pop
and
dec
pop
imul
mov
jl
je
sahf
popl
xor
sbb
iret
shll
movsl
and
push
add
sbb
jb
mov
adc
sub
scas
push
hlt
scas
ss
loope
fildl
and
fildll
popa
aaa
pop
xchg
data16
loop
cld
outsb
pop
fdivr
lods
inc
hlt
inc
fsubl
in
movsb
mov
cmp
lds
inc
sbb
dec
shll
addb
jo
and
mov
into
mov
push
inc
loope
push
rcrl
or
jb
pop
jmp
sbb
dec
lods
test
scas
arpl
testb
push
and
daa
shl
inc
or
xchg
lret
adc
stos
push
mov
into
dec
lcall
mov
pushf
cli
repz
and
cmp
mov
out
call
push
push
inc
inc
mov
push
movsl
mov
fnstcw
cmp
adc
push
inc
mov
pop
sub
mov
pop
mov
mov
cmp
inc
sar
insb
fsubs
fsubl
les
mov
cld
stc
jmp
mov
ja
fstp
arpl
in
add
sub
cmp
cmp
jns
ficoml
jnp
int3
cmp
ja
rcrl
icebp
and
mov
cmpsb
adc
fxtract
sbbb
pop
inc
fidivl
cld
cmpsl
into
fdivrs
push
inc
stos
jmp
hlt
cs
test
sbb
push
cmp
movsb
iret
sbb
sbb
xchg
jbe
xchg
fs
sub
pushf
mov
dec
xchg
mov
inc
pop
stos
cwtl
pop
imul
cltd
mov
lret
xchg
les
out
test
xor
and
cmp
into
mov
sbb
jo
out
push
xor
lds
xchg
adcb
sub
aas
jecxz
adc
dec
loop
mov
imul
stos
ds
outsb
in
int3
lods
jmp
cmpsb
loope
ret
push
in
addr16
cmp
mov
cmp
lods
int3
pop
or
pop
dec
xor
xchg
sarb
push
and
xchg
rcr
and
aad
arpl
test
ja
repnz
ds
or
adc
stc
xlat
mov
lret
bound
out
or
sub
jne
bnd
sbb
push
insb
add
xor
out
test
dec
cmp
add
adc
push
jmp
xchg
dec
push
xchg
mulb
dec
or
cmp
sub
mov
test
sub
iret
fldenv
inc
fidivs
mov
dec
jno
pop
xchg
dec
xor
neg
popa
add
cmp
mov
jle
fnstsw
and
fnstsw
mov
stos
push
shll
xor
or
sub
inc
push
xchg
sbb
mov
addl
dec
xor
dec
lock
mov
ret
outsl
movsl
lret
mov
adc
sub
dec
shl
shrb
and
subb
add
mov
popf
btr
and
sarl
mov
loopne
rcll
lds
xchg
or
lret
test
shll
jno
mov
enter
js
lds
shrl
adc
add
rcll
ss
lret
bound
loop
dec
mov
xor
pop
ret
or
mov
int3
movsb
insb
mov
lahf
cmpsl
jmp
xor
popf
sub
add
jmp
scas
mov
sbb
cmp
mov
sub
sub
pop
mov
shll
cmp
xor
out
mov
add
sub
jae
lods
xchg
loope
incl
mov
inc
out
cwtl
mov
pop
adc
loop
aas
std
pop
mov
iret
fstps
stos
call
or
dec
pop
xorl
and
fimull
mov
or
in
push
xor
mov
mov
sbb
lds
mov
test
push
popa
cmp
and
repnz
call
sub
pop
and
cwtl
mov
push
sub
push
scas
cmpb
repnz
mov
add
popa
js
ds
cmc
inc
out
push
push
cmp
add
push
aaa
xor
mov
xchg
out
sbb
mov
sbb
in
fsubrl
push
jae
xchg
jp
jo
fidivl
push
sub
pop
imul
add
add
pop
pop
push
xchg
mov
icebp
rorl
fcomp
adcl
mov
pop
ss
mov
pop
faddl
and
inc
mov
sbb
dec
mov
push
adc
ret
xlat
hlt
hlt
rorb
adc
inc
imul
sbb
out
pop
sahf
pop
adc
jo
in
lea
or
or
jmp
or
hlt
cmp
cmpb
push
fimull
sbbl
popf
mov
jle
xor
pushf
xlat
sbb
leave
xchg
xchg
mov
cs
cli
pop
or
xor
in
test
ja
inc
aam
adc
sub
scas
imul
lods
lock
adc
xchg
out
cli
inc
in
lret
add
or
mov
mov
imulb
push
sub
sub
aaa
rcrb
adc
imul
and
lahf
sbb
xchg
cmp
pop
iret
add
hlt
imul
pop
cmp
js
fiaddl
mov
or
pop
push
insb
test
cmpsb
dec
hlt
or
mov
shrb
sahf
cmp
pop
push
push
mov
mov
loop
xor
inc
lods
aas
pop
pop
sub
xor
fwait
mov
mov
xchg
add
mov
pop
sbb
scas
and
dec
loope
inc
fcoms
testb
pop
cmc
pop
test
mov
imul
lea
push
xor
shrb
je
pop
or
mov
push
scas
pop
lods
clc
xchg
fdivrs
mov
cmp
inc
testb
test
jmp
out
jo
pop
lea
push
inc
mov
pushf
cmpsb
bound
adc
call
mov
sub
mov
lds
rcrb
icebp
adc
sahf
xchg
cmp
mov
dec
notb
jmp
sar
xor
xchg
adc
cmp
pushf
xor
sbb
in
sub
jbe
mov
adc
call
pop
mov
cmpsb
pop
lahf
ss
xchg
jno
or
jae
pop
mov
inc
cmc
mov
outsl
in
push
lcall
cs
jo
ljmp
outsl
cmp
outsb
outsb
nop
add
jg
dec
mov
xchg
rcll
jo
mov
les
xor
arpl
je
daa
dec
call
scas
test
and
movsb
shlb
or
out
add
jbe
rcl
cmp
mov
dec
ret
add
mov
fnsave
xor
aad
inc
fidivl
shlb
jmp
or
mov
mov
ret
cmp
mov
sub
popa
aas
popf
adc
ljmp
sbb
cmovle
add
cmpsb
stc
ds
pop
jp
lret
xchg
icebp
or
sbb
idivb
mov
lret
cmc
xchg
xor
sahf
test
xchg
daa
sbbl
sbb
les
mov
sub
adcb
mov
and
and
fldt
inc
xlat
cmpb
cmpsl
int3
arpl
hlt
adc
nop
jmp
mov
push
and
arpl
subb
mov
jnp
or
lods
insl
inc
adc
pop
or
add
cmpsb
mov
mov
lret
jb
std
mov
imul
push
scas
mov
push
movsb
aaa
test
mov
xchg
pop
cwtl
sub
push
scas
mov
mov
dec
inc
sbb
cmpsb
in
aas
sbb
test
jl
out
cmp
jmp
ret
jnp
aaa
fs
jmp
sub
sbb
lods
fwait
pop
icebp
or
mov
scas
push
add
push
call
inc
arpl
fwait
xchg
push
lds
cltd
clc
or
push
in
sbb
adc
cmpb
or
icebp
fnstsw
imul
xchg
dec
jg
fnstenv
loope
and
lea
push
popa
popa
jno
sub
int
cld
jmp
dec
push
in
jecxz
and
cmp
mov
iret
jg
test
xor
inc
popf
or
sbb
jl
and
popa
mov
repnz
xchg
sbb
sub
imul
ret
imul
mov
sbb
push
cmp
jno
or
fisttpll
testb
in
add
push
insb
das
test
rcrb
jae
fbstp
sarl
dec
sarb
mov
loope
and
sbb
pop
cld
jb,pn
cmpsb
xor
mov
fisttpll
xor
cmp
xchg
lock
mov
test
lret
in
lea
push
outsb
inc
mov
xor
xor
dec
adc
insl
sti
cmp
jmp
pop
andb
sarb
adc
lock
insl
sbbb
sub
repz
fisubs
xchg
gs
inc
loop
je
mov
push
adc
jae
xchg
xor
aaa
into
cmp
lret
pop
push
outsl
mov
xchg
sub
jb
int
mov
pushf
or
outsb
ja
mov
mov
cmc
mov
mov
ljmp
cmc
jp
mov
mov
sbbb
ret
enter
lahf
sub
jbe
jo
das
pop
aas
xchg
xchg
sub
repz
aaa
fsts
pop
inc
jmp
push
loope
adcl
int3
jg
rorb
icebp
stos
push
out
or
xor
daa
jl
jae
fdivs
test
xlat
mov
cmp
pmaxub
jb
out
test
xor
imul
fcomps
pop
out
pop
addr16
xor
fs
test
ds
or
mov
into
fisubrl
xor
mov
loope
sarb
mov
push
jl
and
andb
cmp
sub
mov
xlat
push
lds
fcmovne
test
rcrb
clc
cltd
or
popa
hlt
mov
je
adc
popa
in
lock
ret
je
or
daa
sbb
dec
pop
cmc
inc
push
in
stc
pop
out
adc
xor
fucomp
fidivl
cmp
daa
mov
cs
rcrl
psrlw
inc
jecxz
push
cmp
pop
mov
dec
cwtl
pop
cmpsl
leave
inc
cld
cmpsl
icebp
sub
leave
mov
bswap
arpl
int3
ja
mov
sbbl
lcall
pop
pop
mov
mov
ljmp
repnz
inc
fdivrl
push
loope
iret
add
add
inc
es
ret
dec
add
jl
push
inc
fldenv
fcompl
dec
movsb
dec
mov
int
shrl
aaa
add
mov
jge
xchg
mov
fs
and
jmp
in
sbb
sub
lahf
add
lock
cmpsb
les
aam
pop
push
jno
lea
loop
xchg
rcrl
add
imul
cmp
flds
and
in
gs
push
clc
nop
sbb
push
lds
imul
mov
sbb
test
into
mov
push
out
lcall
pop
add
jbe
std
stos
loopne
cli
pop
lock
sub
mov
fidivs
push
push
faddl
mov
test
sub
sarb
pop
scas
inc
nop
inc
adc
cs
push
xchg
mov
shll
xchg
loop
jbe
mov
xor
idivb
sub
inc
sbb
dec
add
xchg
lea
repnz
push
fdivp
or
or
mov
xchg
into
mov
or
dec
sti
mov
les
fidivl
in
test
xchg
sub
mov
outsb
and
xchg
insl
ds
jmp
adc
and
stos
xor
dec
pop
mov
push
add
hlt
in
pushf
adc
push
mov
adc
mov
mov
in
push
inc
addb
and
inc
jae
dec
das
mov
mov
jae
das
popf
cld
inc
jbe
push
cs
jg
push
test
push
xor
jle
fnstenv
aad
dec
and
and
sahf
and
mov
jb
fsubs
sub
xchg
pop
and
pop
push
lahf
in
add
mov
stc
sbb
sbb
lahf
cmc
nop
in
mov
xor
daa
loop
out
pop
pop
insb
popa
lock
add
xchg
bound
and
inc
mov
push
aam
mov
test
loope
sub
inc
pop
hlt
jae
jecxz
jecxz
push
das
repnz
mov
sub
and
ret
cmc
push
pop
dec
inc
mov
mov
add
divb
rcrb
data16
push
mov
xchg
and
jle
sti
call
ret
mov
pop
or
xor
and
push
mov
jns
mov
aad
sarb
pop
scas
dec
fldt
repz
std
out
mov
mov
and
lcall
arpl
sbb
mov
fsubrs
mov
popf
mov
add
insb
dec
or
dec
aad
gs
xchg
dec
ja
lods
rorl
je
lahf
out
ja
andb
inc
repnz
jecxz
pop
jecxz
adc
in
xlat
xchg
outsb
mov
int
jmp
jo
repnz
ljmp
pushf
dec
push
sub
out
out
sbb
les
pop
xor
sbb
cltd
pop
mov
aas
adc
das
push
pop
push
mov
stc
lea
movsl
pusha
es
and
mov
add
jmp
or
cmp
call
in
in
in
push
inc
mov
pushl
movsb
inc
fsubl
fstl
loopne
add
sbb
sbb
orb
mov
push
call
in
inc
shl
mov
or
lahf
push
add
data16
push
inc
xchg
and
std
pop
sbb
mov
mov
xor
xchg
dec
test
scas
sub
cmp
lods
inc
adc
mov
mov
ss
ss
enter
dec
stos
fdivrs
push
push
cwtl
xor
pushf
xor
enter
mov
mov
adc
rol
clc
inc
lcall
and
mov
popa
xor
adc
add
add
xlat
icebp
sub
adc
clc
jecxz
sar
das
jne
iret
inc
mov
or
addr16
dec
xchg
ret
out
imul
xchg
vpaddb
xor
stos
mov
nop
movsl
cwtl
jns
dec
push
mov
xchg
fadds
dec
out
lods
in
xchg
cmp
sbb
pusha
test
pusha
sti
push
mov
iret
inc
fisubs
mov
fucomp
mov
mov
jne
pop
in
into
jb
cmp
push
mov
cmp
mov
mov
in
dec
ficoms
jne
cmpb
pusha
mov
mov
cwtl
shl
push
rolb
sub
pop
mov
test
mov
pop
loope
xchg
mov
js
ret
cmp
push
lods
mov
inc
mov
or
and
mov
add
dec
sahf
mov
and
push
xor
mov
sbb
pop
stos
xor
adc
mov
dec
cltd
movsb
mov
xchg
dec
ljmp
mov
movsl
cli
js
push
in
sub
les
or
scas
jns
or
mov
aam
sahf
nop
lcall
popa
aad
dec
sbb
sub
push
out
mov
mov
movsl
and
mov
ds
pop
fldcw
lahf
pop
inc
ror
out
fwait
pushl
and
cmpb
mov
mov
aad
rolb
sti
pop
inc
or
rcr
dec
mov
test
shlb
sti
les
lret
and
mov
mov
jns
scas
mov
sbbb
fxch
lret
rcrl
xor
add
xor
dec
imul
sti
jmp
in
dec
fidivrl
ffreep
mov
ja
andb
dec
jne
sub
sar
cli
dec
lds
cwtl
mov
mov
adc
loop
xor
jmp
dec
in
or
jle
pop
insb
scas
xchg
and
ja
mov
pop
hlt
cmp
cld
test
sbb
leave
mov
mov
xor
or
push
sbb
loopne
mov
push
ret
scas
ret
pop
sti
arpl
or
pop
and
jg
les
cld
pop
das
stos
jne
ds
loope
loop
pop
hlt
movsb
cmp
mov
xchg
xchg
push
fstpt
ljmp
jmp
push
mov
or
add
jmp
iret
mov
cmp
leave
inc
jne
jp
mov
add
int3
std
inc
push
stos
sub
fcmovnu
ret
clc
in
mov
in
mov
mov
mov
push
add
or
cmpb
in
clc
push
aaa
xor
fiaddl
mov
sti
test
dec
insl
adc
loope
add
movsb
into
addl
stos
and
loopne
or
sub
sbbb
cmp
inc
out
js
dec
pop
ljmp
outsb
ss
fistpl
test
pop
or
push
lods
xor
test
pop
scas
ljmp
mov
inc
push
cmp
addr16
fs
mov
push
ret
jmp
sub
fcoms
sarl
sbb
pop
neg
sarb
aaa
pop
imul
cwtl
xor
sbb
inc
cmp
cld
pusha
pop
lods
mov
or
dec
shlb
lcall
xsavec
mov
jecxz
mov
sub
sub
inc
fs
shll
data16
test
aad
out
inc
jle
daa
aaa
cmpsb
push
sub
adc
xor
bound
int3
mov
in
cmp
stos
jne
sahf
or
out
add
cmp
pop
rcll
ret
fs
in
aaa
test
pushf
lahf
imul
sbb
mov
cwtl
repnz
cltd
shrb
jmp
xor
ss
aam
lock
add
xchg
cmp
push
jo
dec
mov
xor
inc
xlat
push
pop
jmp
maxps
inc
xchg
imulb
out
jge
mov
fiaddl
popf
outsb
pop
ficompl
leave
xchg
mov
push
pop
into
mov
xchg
inc
jecxz
and
in
pusha
leave
std
jns
arpl
jbe
mov
out
dec
adc
jnp
push
or
das
fstpt
cmp
nop
dec
inc
pop
lcall
push
and
fbld
ds
or
adc
andl
sti
lahf
insb
js
xchg
xor
and
jecxz
icebp
loope
out
lods
ja
shrl
insl
mov
mov
sbb
pop
ljmp
and
sbb
arpl
push
or
push
xchg
mov
push
pop
stc
iret
call
xchg
gs
gs
and
test
push
inc
pushf
dec
inc
scas
mov
sarb
pop
stos
stos
mov
xchg
fists
sub
mov
jno
repnz
ficomps
loopne
cld
sahf
dec
lods
das
fldcw
cmp
mov
inc
push
xchg
js
clc
stos
je
mov
repnz
push
or
mov
or
mov
fwait
repnz
enter
xor
add
cmc
jge
mov
xchg
sahf
jnp
xchg
mov
or
add
outsb
jnp
sbb
adcl
inc
add
xchg
cmp
and
aaa
imul
inc
mov
out
cmp
lcall
cwtl
test
sbb
ljmp
mov
movl
push
dec
in
cld
in
xor
add
jl
sub
test
popf
pop
and
jg
push
inc
scas
nop
lcall
std
xchg
incl
mov
dec
inc
test
mov
repz
adc
mov
sub
sub
ret
outsl
cld
pop
ret
test
pop
add
and
fldcw
jno
negb
cmpsb
dec
enter
ljmp
mov
or
push
je
cmpsb
mov
inc
and
xchg
mov
shr
mov
divl
enter
dec
fimuls
out
mov
in
aaa
dec
pushf
rcrb
sbbb
mov
adc
out
icebp
pop
mov
sub
sarl
iret
sbb
int3
loop
adc
mov
or
pop
imul
call
inc
aam
cmp
aam
mov
and
lret
in
shrl
sbb
fs
sbb
push
push
mov
andb
aam
fidivl
in
xchg
dec
mov
sbb
add
inc
ret
mov
add
movsb
mov
push
mov
dec
leave
shrb
push
push
jmp
mov
cmp
outsl
xchg
cmp
rcrl
or
push
xor
stos
lock
and
out
cld
dec
int3
mov
adc
push
lods
test
aas
lds
dec
cmp
into
push
xchg
sub
push
sbb
xor
pop
cmpsb
shrl
ret
pop
xor
stc
xchg
cmp
test
ret
rclb
pop
adc
aam
out
push
fistps
xor
xchg
ret
jp
and
mov
push
je
push
jns
mov
hlt
xchg
add
adc
cmp
outsl
mov
push
test
enter
push
repnz
xor
addr16
les
mov
ret
sbb
pop
test
imul
jns
inc
stos
sub
pushf
dec
cmp
shlb
pop
call
bswap
aas
aad
loope
xchg
adc
mov
addr16
push
aaa
repz
lcall
cmp
inc
sbb
mov
mov
or
mov
add
outsl
cwtl
xor
jae
jne
mov
xor
push
aad
movsl
xlat
repz
sahf
clc
insl
xor
xchg
add
adc
push
into
add
mov
xchg
xor
inc
cld
call
fiaddl
call
and
ja
lea
sar
push
movsb
lret
dec
mov
mov
aam
inc
or
lds
je
mov
hlt
and
sarl
push
add
insb
mov
push
js
or
fbstp
mov
cmpsl
mov
mov
dec
add
bnd
push
push
testl
aam
cli
jae
bswap
loopne
dec
adc
lcall
ja
gs
in
in
dec
push
xor
add
pop
xor
push
fistps
dec
jae
cmp
loop
rorl
jae
add
ljmp
mov
fisubrs
or
xchg
fbstp
dec
xlat
lcall
mov
jo
inc
push
cmp
xchg
ss
sbb
dec
xchg
loop
stos
outsb
adcl
test
and
mov
dec
jecxz
mov
mov
mov
mov
add
add
sub
mov
mov
dec
mov
fcmovnbe
imul
cmc
lock
mov
dec
dec
lcall
inc
bound
leave
jge
push
daa
iret
loop
jb
jp
jns
cmp
lahf
adc
ret
out
test
in
or
or
mov
mov
lahf
sub
inc
pop
in
sub
add
jns
mov
push
mov
jnp
sbb
mov
or
lods
data16
aad
repz
std
testb
sub
and
popf
test
push
fidivrl
and
or
test
mov
cmp
and
cmpsl
push
inc
cltd
push
mov
or
cs
popa
notl
stos
cli
inc
mov
stc
sbb
mov
push
addr16
adc
mov
mov
sub
lret
das
call
out
loop
pushf
inc
pop
lods
ja
in
and
rcl
shl
jo
pop
sub
test
or
nop
cmpsl
jo
data16
fwait
xor
fbstp
clc
stos
jne
sub
fidivrs
xor
push
or
mov
inc
push
adc
and
inc
and
mov
mov
jmp
ret
icebp
loopne
xchg
ja
js
jge
mov
inc
mov
mov
xchg
iret
fcomi
xlat
mov
repz
lods
or
xor
pop
iret
fsubr
icebp
mov
mov
adc
fmull
sti
mov
sbb
int
gs
mov
pop
adc
sub
bound
iret
loope
push
std
in
cs
subb
test
xchg
or
xchg
stos
aam
sub
mov
cwtl
jo
out
repz
or
push
das
gs
and
push
add
push
mov
jl
pop
sub
in
int
shrb
sub
and
icebp
or
push
jg
test
mov
out
hlt
sub
sbb
push
arpl
inc
jge
mov
jecxz
jbe
decl
or
je
std
dec
loopne
icebp
pop
in
ret
adc
pop
sarb
daa
fisttpll
sub
mov
xchg
cmp
icebp
movsl
and
push
mov
push
icebp
mov
sar
ds
loope
divl
pop
test
stc
aas
test
adc
test
dec
cmpsl
imul
iret
sub
fidivrs
pop
lock
jecxz
mov
testl
fdivp
test
in
dec
push
cli
xchg
adc
ss
fidivrl
sub
rorb
push
stc
scas
pop
repnz
mov
pop
movsb
mov
jecxz
dec
inc
and
outsb
push
call
push
insl
outsl
jns
push
repnz
ja
stos
and
lods
adc
bound
add
push
lcall
or
out
cld
mov
in
sbb
push
xlat
insb
xchg
mov
cmp
mov
in
xor
push
outsl
push
cmp
sub
push
or
push
mov
lds
loop
jge
pop
mov
repnz
lcall
stc
pop
in
mov
outsb
arpl
loop
nop
test
mov
movsl
aad
mov
fstpt
test
inc
cmpsl
push
push
mov
aas
cmp
mov
aam
ret
roll
mov
rorl
sub
repz
cmp
dec
andb
jns
addr16
cli
pop
repnz
jp
push
jns
xchg
fdivrl
repnz
pop
or
leave
jecxz
imul
pop
xchg
stos
mov
icebp
pop
mov
mov
sbb
mov
or
add
arpl
inc
and
call
shll
push
cs
pop
jb
mov
mov
mov
sub
mov
xor
or
ds
mov
pusha
idiv
insl
cmpsb
push
sbb
dec
cmp
pusha
xor
lret
pop
mov
icebp
push
pop
dec
xor
add
cltd
call
sbb
sahf
mov
sub
mov
sbb
je
adc
sarb
xor
je
and
test
adc
inc
mov
cltd
pop
or
into
ljmp
into
adcl
les
sbb
and
xchg
ss
test
outsb
mov
shlb
xor
mov
testb
mov
mov
xor
fsubr
mov
jg
fldt
sbb
int
pop
call
sbb
or
mov
popf
xor
mov
mov
xchg
or
push
push
dec
incb
jp
mov
pusha
dec
add
insb
add
pop
mov
hlt
sub
add
loope
cli
pushf
sub
add
xor
call
mov
or
std
hlt
pop
mov
dec
stos
push
out
mov
loop
cli
pusha
dec
inc
push
or
xchg
pop
jmp
fisubrl
icebp
popa
cmp
and
fcompl
adc
imulb
pop
outsb
mov
insb
out
lcall
notl
mov
xchg
dec
sahf
dec
inc
cmp
mov
fadds
popa
adc
cmc
and
cmp
jp
pop
scas
inc
xchg
sbb
push
lods
inc
mov
cmp
adc
addb
dec
mov
loopne
outsl
push
loop
inc
cmpsl
mov
lea
mov
cs
adc
push
mov
and
mov
jmp
pop
jnp
jl
loope
and
mov
cli
xchg
mov
lods
std
jg
ljmp
or
jo
inc
subw
pop
leave
and
pop
or
rorl
mov
jg
sbb
enter
cmpsl
pop
div
int3
fildl
mull
inc
imul
dec
mov
push
xchg
or
scas
inc
pop
mov
scas
jae
xlat
loop
adc
and
sub
enter
add
into
mov
out
jno
sbb
test
sahf
out
jae
add
popa
pushf
xor
sarb
xor
dec
sub
inc
dec
sub
mov
and
cmp
jb
test
out
cmp
nop
rclb
pop
loope
scas
shrb
pop
jp
bound
lret
scas
mov
scas
inc
cmp
pop
lret
test
xor
or
cli
push
pop
std
adc
mov
arpl
jns
mov
dec
ret
jae
push
mov
xadd
les
jl
adc
and
jge
mov
or
push
bound
iret
pop
das
adc
add
and
imul
cmpsb
cmp
xor
jo
movsb
or
sahf
xlat
test
rcl
call
out
sbb
adc
loop
adcl
insl
and
sbb
repnz
jo
adc
frstor
add
and
out
xor
push
push
or
fiaddl
fisubrl
aas
rcll
mov
pop
and
adc
bound
sub
aas
xchg
inc
lods
sarb
jns
test
xor
mov
dec
cmpb
dec
inc
push
mov
enter
cwtl
stos
and
gs
lock
and
rorl
leave
pop
mov
cmp
dec
adc
mov
leave
fcomip
lea
add
sbb
es
lods
inc
stos
loop
sar
mov
xchg
mov
dec
mov
adc
push
dec
shrl
xor
mov
mov
mov
stc
sub
adc
add
mov
sub
cmp
cmp
sbb
inc
dec
push
cmp
lret
jae
dec
shlb
push
icebp
push
dec
push
and
push
cmpsl
sbb
cmpsl
mov
or
jg
imul
fldt
xor
es
push
mov
add
jle
int3
aaa
int3
xlat
mov
sbb
sbb
push
cmp
mov
mov
push
dec
cmp
sbb
and
popf
push
cld
nop
and
add
inc
push
dec
test
push
in
jecxz
mov
cmc
cmp
fsubp
movsb
inc
aad
dec
or
adcl
adc
dec
enter
in
xor
dec
jns
jae
andl
xchg
jle
cmp
mov
aaa
shll
pusha
jecxz
add
and
dec
int
test
sub
xchg
fidivl
lret
shl
push
xor
pop
rcr
loope
dec
dec
sbb
addr16
xor
ja
inc
rorl
and
rorb
inc
jb
lretw
push
adcb
ret
ss
imull
dec
or
sub
xchg
dec
call
out
test
mov
mov
push
pushf
test
aam
scas
mov
push
mov
test
repz
push
inc
cmp
add
mov
imul
call
movsl
sbb
in
testb
das
adc
cltd
xchg
jg
jbe
jp
sbb
ljmp
xchg
and
cld
shll
sbb
add
rcrl
inc
scas
pop
cs
and
sub
js
mov
mov
dec
push
dec
push
leave
or
es
aaa
push
clc
and
sub
mov
or
test
stc
aaa
mov
inc
jns
inc
jmp
xchg
cli
cs
shrl
mov
pop
or
fnsave
subb
lcall
sub
lret
lret
decb
cmp
push
push
inc
dec
or
mov
add
leave
sbb
fwait
cmp
mov
dec
loope
push
es
mov
jae
xlat
fsubr
xchg
clc
adc
loopne
out
ffree
test
xchg
mov
sbb
pop
add
adc
loopne
dec
add
mov
adc
or
imul
in
push
mov
inc
call
mov
and
xor
pusha
xor
add
das
xor
test
lds
in
inc
stos
sub
inc
or
xchg
lods
and
sbb
push
mov
cwtl
outsl
rcr
enter
imulb
clc
jo
roll
ds
or
pop
sub
or
sti
jbe
testb
mov
push
sbb
and
push
push
pop
xor
nop
mov
and
push
cmpb
mov
mov
jmp
ss
sahf
hlt
dec
push
jbe
sbb
out
xor
scas
pop
xchg
push
je
or
add
lea
inc
jl
hlt
inc
xor
pop
and
xor
cmpl
fadd
test
jno
mov
cmp
or
pop
push
push
or
dec
lods
inc
jnp
rorb
loope
mov
mov
mov
shl
fldt
shlb
mov
je
add
rcl
jne
jecxz
jne
mov
test
aad
icebp
mov
adc
mov
sub
jb
xchg
xor
lock
and
mov
idivb
mov
mov
sbb
and
push
loop
lcall
add
mov
movsl
lahf
pop
jo
insl
lods
test
hlt
addr16
fcompl
sahf
and
mov
mov
mov
jns
loopne
inc
int
cmp
scas
stos
push
ljmp
pop
hlt
es
lds
pop
push
les
push
iret
xor
add
xchg
cmc
icebp
adc
out
stc
clc
scas
stos
insl
add
orb
and
cltd
inc
pop
jbe
xchg
out
mov
push
aas
mov
cli
cmp
cmp
cmp
dec
jnp
roll
fwait
lods
fmul
and
pop
mov
sahf
xchg
fnstcw
add
jl
jo
mov
or
gs
mov
xchg
dec
add
out
inc
rclb
mov
pop
sub
shrl
subb
negb
dec
inc
sbb
movsb
and
xchg
movsl
iret
and
adc
in
ja
test
mov
ds
adc
popf
pop
insl
fnsave
loopne
popa
pushf
movsl
cmp
and
push
push
int
pop
mov
add
pop
add
mov
dec
ss
dec
jle
lret
jno,pn
or
dec
xchg
jo
repz
jo
mov
movsl
sbb
cmp
jnp
add
or
int3
arpl
sbb
pop
cmp
shll
movsb
jns
repnz
enter
push
mov
adc
or
mov
push
pop
pop
mov
add
adc
add
mov
mov
cmp
adc
xchg
dec
aad
test
test
arpl
sbb
xchg
aaa
cmp
es
mov
ja
repnz
inc
and
add
cwtl
mov
xchg
lds
push
in
int
je
push
adc
mov
xchg
sub
cmp
jg
adc
lret
push
in
sbb
mov
xor
or
in
lcall
inc
inc
pop
dec
pop
jge
add
sbb
adc
ljmp
push
mov
js
pop
cs
mov
push
enter
inc
test
lret
out
sti
cmpb
pop
outsl
lret
nop
fbstp
pop
imul
inc
xchg
add
jnp
inc
push
mov
aaa
fs
jae
inc
or
mov
mov
and
aaa
mov
and
xor
and
adc
lods
mov
and
push
mov
clc
xor
cmc
repnz
push
jg
push
clc
loop
sbb
popf
mov
sub
pop
sahf
arpl
iret
lret
sbb
ss
fstl
fldcw
sbb
mov
lods
add
fldenv
jecxz
outsl
inc
inc
mov
dec
pop
mov
or
icebp
aas
or
daa
xchg
ss
test
mov
sbb
adc
sti
insb
or
orb
pop
jno
mov
out
xchg
cmp
mov
scas
ljmp
hlt
xor
inc
cmpsb
pop
inc
mov
sbb
addb
pop
cmc
out
push
lret
rol
aad
pop
jg
es
lds
mov
std
pop
fwait
mov
popa
scas
scas
bound
mov
and
xchg
add
sub
fsubr
xor
fs
mov
dec
fmull
aaa
imul
repnz
pop
pop
fwait
or
push
cmpsb
or
mov
pop
xchg
repz
pop
and
cs
rol
cltd
xchg
mov
and
jae
or
xor
leave
insb
or
inc
push
mov
jb
xchg
cmpsb
icebp
mov
aad
jae
aas
outsb
rcrb
pop
dec
js
jl
cmp
testb
movsl
inc
out
inc
in
cmp
mov
fst
xchg
scas
mov
pop
lret
gs
das
addl
cmp
icebp
jnp
and
mov
sub
sahf
or
stc
jge
mov
or
aas
mov
rclb
dec
jns
scas
push
adc
sub
jl
call
outsb
in
daa
dec
mov
stos
and
lods
dec
stc
data16
pop
xchg
jbe
shrl
outsl
jg
pop
in
or
lret
cltd
mov
sbb
jns
pop
sub
pop
cltd
sbb
xor
cmp
sti
shrb
iret
pop
repnz
dec
mov
aam
or
jns
test
enter
lcall
mov
sub
in
orb
shlb
fbstp
ljmp
lods
jne
sub
stos
sbb
cs
xchg
push
or
scas
movsb
imul
mov
loopne
mov
lock
cmp
xchg
add
idivb
test
mov
dec
mov
fcomps
es
push
jbe
lret
mov
xchg
and
js
lock
mov
inc
push
lods
jb
push
leave
mov
adc
xor
push
ljmp
call
xor
add
push
push
int
inc
incl
jnp
fwait
cmp
int
sub
popa
ljmp
mov
and
cltd
adc
mov
in
in
mov
xor
jns
inc
gs
cmpsl
push
mov
push
sub
pop
cld
cmp
push
jle
dec
pop
or
shrl
mov
xor
cmpsl
lds
sub
and
sub
mov
scas
pop
add
mov
xor
cmpsb
pop
das
cmp
and
pop
add
mov
or
iret
push
mov
inc
mov
les
or
cmp
xor
mov
add
in
jae
cwtl
int3
test
dec
mov
inc
pusha
stc
in
push
adc
jge
shlb
sub
pop
std
lret
jnp
out
into
push
and
jmp
mov
inc
mov
rorl
lahf
push
jns
out
ficomps
jecxz
incl
fcmovne
ss
ss
mov
inc
inc
data16
and
mov
stos
inc
xchg
adc
enter
fldl
xorb
into
mov
and
and
icebp
push
scas
add
push
addb
loope
xchg
pushf
cmp
or
pop
jmp
xlat
push
dec
and
mov
stc
pop
mov
sbb
pop
pop
insl
fiadds
adc
sbb
stos
mov
push
inc
jge
jns
js
test
dec
loope
push
lea
iret
or
fbld
mov
call
cmp
xor
sub
mov
jo
inc
mov
and
mov
mov
dec
mov
jle
adc
dec
stc
mov
in
stc
pop
in
into
ss
or
repnz
xor
in
in
test
data16
or
fldt
cmp
dec
lret
mov
push
rcl
loopne
cmp
pop
mov
pushf
xchg
push
imulb
and
mov
mov
jo
xchg
mov
xchg
shl
repnz
xchg
daa
aaa
cmc
mov
mov
xchg
notb
movsl
je
cli
cwtl
lods
pop
or
addr16
inc
cs
xor
jbe
adc
arpl
push
scas
inc
mov
icebp
dec
cltd
out
lret
fnstenv
inc
or
jbe
fwait
and
rcl
shlb
xchg
cltd
int3
sub
call
inc
les
or
into
iret
dec
loope
lock
mov
fstl
push
pop
in
std
mov
outsl
jns
lret
xor
sbb
les
mov
and
testb
push
nop
jl
out
je
pop
pop
std
jl
cld
cmpsl
mov
int3
add
std
dec
loop
fwait
lcall
daa
lods
cmp
fbstp
pop
das
add
xor
insl
xorb
mov
les
fs
adc
pushf
divb
mov
mov
fistps
push
clc
pop
shrl
gs
jle
psllw
lea
inc
sti
out
and
add
inc
jbe
inc
push
aas
mov
ffreep
jb
jl
jge
mov
adc
push
push
push
cmpsb
jmp
or
mov
push
insl
inc
negl
incl
xor
xor
adc
clc
push
push
mov
into
je
fwait
nop
lock
stos
rcrb
jns
rcll
scas
test
daa
mov
cltd
cmp
inc
lea
out
lret
dec
divb
shr
inc
add
aaa
fimuls
fcomi
lods
fldt
xchg
outsl
push
or
fdivl
pop
adc
push
push
pop
mov
xor
lret
loop
in
in
dec
or
mov
ror
aad
es
adc
loope
xor
movsl
adc
inc
stc
popa
mov
mov
bound
sarb
push
loope
dec
loop
add
mov
jnp
push
add
cmpsb
jb
mov
xor
fcoms
jno
pop
mov
mov
xchg
xchg
loopne
sbb
daa
gs
mov
ret
arpl
jecxz
add
add
mov
xchg
dec
mov
sub
sub
dec
rcrl
cmp
jg
aam
lea
lret
jne
and
mov
iret
jp
jno
arpl
es
fstl
xchg
mov
pop
cmp
push
sbb
pop
icebp
pop
xor
mov
cmc
js
daa
repz
inc
stos
inc
imul
add
add
dec
push
adc
mov
or
pop
push
push
lret
popa
jne
jbe
icebp
xchg
call
dec
cmp
scas
mov
adc
shrb
mov
cmpsl
add
inc
mov
sbb
pop
aas
adc
xchg
xorl
sti
sub
inc
insb
fbstp
mov
dec
or
dec
pop
fldcw
loopne
adc
ret
loope
lods
push
sub
ficoms
xchg
bnd
adc
ret
add
jecxz
cld
aam
out
subb
in
jp
lods
push
scas
cmpl
or
bound
pop
out
lcall
enter
filds
pusha
iret
xchg
clc
into
mov
cmp
stc
addb
repnz
mov
cmpsb
aad
adc
in
arpl
out
lods
loope
sahf
cmp
inc
lahf
jnp
push
jbe
pusha
psrad
jmp
adc
sbbl
add
insl
rclb
or
sub
insl
dec
cmpsb
jl,pt
es
inc
push
ret
jecxz
sbb
or
ss
test
vpaddusw
lahf
lods
movsl
push
pop
dec
rorl
xchg
cmp
xor
lea
adcl
and
jmp
lods
cmc
imul
mov
and
decb
fldl
pop
inc
les
sub
sbb
sti
push
and
in
stc
or
sub
pop
jo
or
data16
lods
sub
inc
imul
test
mov
jmp
or
std
fldenv
cmpsb
inc
mov
dec
pop
in
xor
cmp
sbbb
xchg
ror
dec
hlt
xchg
test
and
sbb
pop
out
mov
fidivl
or
mov
inc
mov
fisubrs
movsb
sahf
add
and
sbb
or
test
cmp
push
jo
xchg
adc
inc
mov
jne
inc
or
jb
push
sub
out
repz
cmp
inc
loop
rcl
jno
sti
call
or
push
mov
jnp
hlt
sahf
xor
xchg
mov
xlat
push
mov
js
sbbl
mov
sub
sub
repnz
push
adc
into
jle
mov
addr16
aam
outsl
add
mov
mov
push
ljmp
ret
or
in
sahf
lods
inc
shll
out
and
lret
bound
clc
mov
movb
and
jl
ljmp
jno
in
push
incl
rol
cs
pop
daa
cmpsb
mov
bnd
adc
cmc
adc
and
bound
or
in
lods
test
add
sahf
adc
mov
dec
inc
lea
xchg
in
mov
mov
enter
repnz
adc
loopne
and
in
pop
pop
cld
add
cs
inc
nop
push
ss
call
and
enter
inc
dec
push
cwtl
fcomip
or
stos
and
cmp
mov
ss
sbb
es
pop
icebp
cs
sahf
addl
sub
into
mov
sub
fmull
or
rcrl
leave
sahf
scas
add
xchg
inc
jno
add
ja
sahf
push
push
xor
incl
or
out
or
sti
and
in
xor
fwait
test
scas
outsl
je
subl
sub
push
fimull
mov
fwait
xor
or
out
popa
cmp
aad
add
icebp
mov
pop
mov
pop
dec
cwtl
pop
stos
clc
inc
push
pop
inc
sahf
add
out
lds
dec
inc
sub
inc
aaa
xchg
mull
out
fstpl
in
popf
sbb
jecxz
insl
mov
cmpsb
and
hlt
jp
sub
cmpl
andb
icebp
gs
stos
fwait
sbb
pop
xchg
cmp
mov
xor
xchg
std
insl
rol
pop
ss
bswap
lds
push
loop
lods
dec
int
lds
cmp
sbb
iret
and
push
in
add
iret
inc
or
outsb
inc
fdivs
imul
out
inc
enter
adc
sbb
xor
dec
mov
cmpsl
in
mov
adc
push
mov
fstpl
push
cli
dec
mov
add
jbe
mov
loop
scas
int3
jg
mov
loop
push
loopne
cmp
jl
dec
loop
sahf
pop
aaa
dec
jbe
xchg
es
nop
xchg
inc
sbb
adc
jg
mov
ret
lret
lret
sub
jmp
rcrb
dec
push
push
sbb
shll
mov
lds
pop
dec
jecxz
or
dec
stos
xor
inc
mov
stos
dec
js
xor
cmpsl
shlb
push
xchg
lds
movsb
loop
aas
loopne
scas
inc
pop
nop
leave
jne
sbb
mov
lret
stos
cmp
out
mov
iret
mov
arpl
pusha
sti
mov
jecxz
mov
sub
adc
adc
pop
data16
sti
punpckhdq
lds
testl
cmp
fldlg2
xchg
daa
inc
mov
fwait
cs
push
inc
mov
loope
popf
jecxz
ss
int
les
in
and
mov
loop
stc
icebp
pop
inc
add
inc
cwtl
test
int
jae
jle
inc
jecxz
test
mov
mov
movsl
mov
fadds
lret
lahf
mov
pop
dec
fcomi
insb
jl
fsubp
bound
shl
jae
and
leave
mov
mov
cs
inc
lcall
push
call
add
jle
cmp
cmp
sbb
add
pusha
pop
push
insb
push
sbb
scas
movsb
cmp
sub
inc
faddl
sub
das
push
bound
xchg
fstp
push
xor
stc
test
scas
inc
inc
lds
fstpl
mov
mov
mov
adc
std
mov
mov
pop
jge
dec
call
fiaddl
nop
inc
mov
shrl
hlt
adc
push
insl
push
pop
jae
cmp
mov
xchg
and
movsl
xor
mov
enter
xchg
js
inc
sub
jge,pt
aad
sbb
mov
testb
inc
sub
enter
mov
or
das
pop
cmp
push
pop
jne
push
ret
shrb
xor
jl
mov
dec
mov
insb
ss
mov
cltd
sbbb
push
cmc
mov
cli
mov
orl
mov
ret
loope
sbb
in
cwtl
fidivrl
adc
or
fists
fstpt
pop
gs
fadds
mov
add
push
pop
lods
movsb
out
bound
push
jmp
push
cmp
test
add
fs
cmpsl
push
subl
mov
cmp
xchg
pop
mov
jg
jmp
xchg
dec
setle
adc
bnd
jo
cmp
sbb
mov
mov
pusha
cmp
rclb
push
add
fmull
aad
push
in
test
out
nop
sub
pop
lret
pop
pusha
scas
adc
xchg
pop
das
inc
out
jl
popf
xor
sbb
lods
dec
ja
ss
int3
xchg
xchg
sbb
repz
xchg
inc
jne
mov
sahf
xor
pop
test
sarl
lret
std
push
inc
popa
aas
stos
les
aam
cmp
fldl
and
jns
fidivl
mov
pop
cmp
mov
xchg
pusha
xchg
movsl
cs
scas
ret
fbld
mov
shrl
jae
lahf
hlt
push
cli
dec
lods
mov
jmp
jb
orl
add
movsb
push
jbe
rclb
sub
mov
pop
jo
pop
xchg
mov
dec
fs
outsl
aas
fs
les
imulb
fisubl
lahf
adc
or
mov
adc
fwait
jl
inc
mov
add
out
pop
adc
dec
mov
xor
js
incb
mov
jmp
xorl
data16
jno
xor
lds
mov
icebp
insb
leave
mov
out
sar
repnz
aaa
in
sub
ljmp
arpl
sarl
daa
mov
cmp
sbb
inc
push
and
jmp
pop
pop
pop
lret
xchg
fists
pop
outsb
mov
mov
xor
rcll
hlt
adc
sbb
lret
bound
jecxz
movsl
sub
xor
mov
inc
xchg
push
or
dec
and
sub
das
dec
ds
jg
scas
push
or
or
sub
fwait
mov
inc
mov
fisttpl
insl
loopne
shll
sub
mov
dec
fcompl
and
push
rcll
enter
hlt
addb
and
sbb
leave
icebp
mov
lds
jo
xor
in
bound
es
icebp
dec
mov
sub
mov
leave
mov
clc
jmp
and
add
mov
aas
mov
out
jnp
iret
or
jbe
stos
inc
test
sbb
shrb
and
subl
inc
fmull
mov
bound
lods
ret
pushf
dec
jmp
and
mov
adc
cs
jge
into
push
cmp
or
cmp
sub
repnz
cmp
adc
dec
scas
jle
popa
ss
in
or
push
mov
cmp
out
sbbb
push
daa
mov
pop
xchg
inc
loope
jp
xor
cwtl
in
dec
push
and
lods
insb
push
shl
cltd
test
out
pop
sti
adc
adc
ds
outsl
jo
pop
cmp
imul
mov
mov
pushl
jnp
dec
jecxz
addr16
mov
std
add
pop
leave
addr16
jmp
add
imul
clc
popl
lods
cld
mov
adc
fwait
test
or
rcrl
inc
rcll
adc
add
mov
iret
fwait
pop
mov
inc
pop
shrb
mov
mov
xchg
mov
xchg
pop
adc
fsubl
popa
xchg
sub
xchg
ja
mov
pop
and
ret
mov
fs
add
push
pop
push
and
cmp
movl
and
jne
pop
cmp
or
pop
xor
push
inc
ror
push
mov
jp
adcl
scas
stc
fcomps
mov
dec
stc
cmpb
mov
test
adc
fsubl
mov
popa
pop
les
lahf
mov
adc
add
loop
enter
in
fnstsw
sahf
inc
cltd
int3
mov
sbb
push
scas
add
xchg
mov
aad
xor
pop
add
push
ljmp
loop
ja
hlt
inc
sbb
inc
mov
scas
aaa
lods
rolb
jge
pop
insb
mov
jae
or
shrb
pop
xchg
test
xchg
sbb
and
sbb
icebp
jl
adc
jne,pn
xchg
cmpsl
dec
pop
adc
sbb
sti
enter
je
call
clc
pop
sbb
xor
sub
flds
cltd
mov
arpl
out
fidivrs
nop
add
xor
mov
out
cmp
stos
jge
push
lret
shl
add
inc
int
dec
stos
popa
fdivr
jecxz
inc
dec
xchg
aas
lds
mov
or
test
cmpsb
je
fcomps
pop
inc
ljmp
sbb
push
sbb
stc
fimull
xchg
cmp
pop
movsb
js
adc
dec
add
into
mov
jne
lret
xchg
cld
stos
loope
fmul
cltd
add
lret
xlat
rol
into
xor
hlt
gs
aam
lret
popa
mov
xor
xchg
push
xchg
sbb
movsb
mov
test
lahf
fmull
pop
dec
xlat
dec
jecxz
mov
add
push
add
aam
je
xchg
jno
or
mov
mov
pusha
es
addr16
aam
xrstor
push
push
sbb
vpavgb
mov
adc
cmpsb
fbstp
mov
repz
mov
mov
inc
shrl
pop
test
int
out
bound
mov
push
popf
jo
call
inc
fwait
jbe
test
outsl
inc
add
test
arpl
enter
mov
loopne
outsl
out
dec
cs
mov
jl
sub
add
pop
mov
cmp
int
mov
push
ret
dec
mov
cltd
push
mov
and
xchg
adc
sub
fbld
sbb
into
addl
and
test
xchg
mov
or
xchg
outsl
dec
add
adc
leave
mov
movsb
mov
mov
or
out
adc
add
lods
cmp
pop
inc
inc
enter
mov
push
and
lock
inc
popf
in
push
out
lret
adc
sbb
mov
shl
out
fidivrl
sbbb
mov
es
les
and
push
cmp
je
pushf
pop
imul
cmp
jno
out
iret
mov
push
or
jmp
push
fisubrs
cld
inc
ret
fistl
xor
ljmp
push
or
test
andb
ja
sbb
sub
xchg
dec
jo
int3
jo
inc
cmc
mov
dec
fstpt
sub
dec
lea
xor
lods
data16
dec
lcall
push
std
mov
cs
or
push
fcomps
jae
aaa
and
ja
push
mov
mov
cmp
cli
test
in
mov
push
push
mov
in
in
inc
xchg
add
inc
ss
mov
adc
push
xor
js
mov
jle
xlat
xchg
lcall
xor
aas
push
cmp
cwtl
adc
xlat
jle
popa
lcall
xchg
and
aas
dec
cmp
xor
xchg
pop
lds
pop
inc
aam
inc
inc
popa
xchg
sbb
and
xchg
fnstcw
and
cmp
inc
pop
daa
sbb
fs
mov
mov
bnd
into
fs
imul
cmp
insl
sub
adc
jge
and
inc
or
mov
nop
xchg
adc
rcll
ja
inc
cmpsl
inc
inc
inc
xchg
cwtl
pop
mov
or
test
jl
cmp
mov
lcall
cmpsb
push
mov
xchg
aaa
mov
jmp
outsb
add
mul
sub
push
movsl
xchg
push
xchg
xorb
fstpt
sbb
in
das
and
cmp
push
dec
fcoml
lahf
stos
in
mov
inc
add
add
jno
mov
jg
fisubrl
cmp
in
ret
insl
lret
lds
shlb
xchg
sbb
push
ficoml
lahf
push
pop
mov
adc
mov
lahf
dec
xchg
mov
add
or
lahf
jae
cmp
dec
mov
scas
mov
cmp
outsb
iret
out
data16
into
outsl
loop
adc
cmp
scas
pop
jmp
push
cs
mov
addr16
fstpl
pop
out
repnz
lcall
sub
cwtl
sarl
test
in
xor
popa
mov
ljmp
and
ljmp
lahf
inc
xlat
leave
xor
mov
ljmp
fiadds
leave
repnz
fildl
notl
in
rolb
int
icebp
adc
xchg
pusha
mov
fistl
scas
xor
pop
push
inc
lea
mov
or
pop
cmp
lcall
jl
mull
lods
xchg
xchg
jb
ss
xor
aaa
test
andb
push
and
rcrb
je
hlt
push
call
cmp
xchg
shlb
inc
out
cmp
cltd
xchg
shrb
bound
sub
adc
xlat
lcall
sub
pop
movsb
aas
andb
add
int3
xchg
mov
das
out
lea
popf
mov
mov
dec
out
sub
mov
and
popa
out
xor
fbstp
ja
xor
je
push
stos
or
rolb
push
sub
notb
adc
adc
ss
and
inc
push
pop
inc
inc
add
sti
xor
daa
and
fistl
aam
adc
or
mov
sub
cmpsl
imul
enter
fnstenvs
insb
out
xor
in
movsb
jne
notl
push
popf
add
iret
xchg
cltd
xor
or
sbb
inc
push
add
and
adc
push
inc
inc
add
daa
into
mov
pop
repnz
dec
sub
cmp
adc
mov
lahf
pop
test
repz
jp
fwait
outsl
bound
lret
mov
mov
mov
js
xchg
loopne
sub
xchg
mov
cmpsl
cmp
adc
pop
mov
shrl
jb
or
mov
outsb
nop
mov
shll
test
outsl
clc
mov
test
bound
pop
and
and
jno
fcoml
ss
mov
inc
dec
pop
lock
dec
loop
fwait
iret
and
imul
pop
mov
pop
push
in
xchg
dec
push
stos
pushf
xlat
leave
pusha
or
xor
sub
sbb
roll
adc
mov
fs
inc
pop
mov
fisubl
outsl
push
iret
scas
dec
popf
lret
pop
int
push
inc
or
cmpsl
inc
stc
add
mov
xlat
es
jae
inc
inc
push
loopne
push
push
add
ljmp
mov
outsl
ficoml
push
mov
lcall
in
pop
pop
das
cmp
pop
inc
dec
in
xchg
xor
ja
bound
pop
mov
push
lcall
test
dec
xor
lock
fistl
push
sbb
popf
pop
mov
xor
aaa
add
mov
ja
int
and
das
in
cmp
cmpsb
cmp
push
pop
mov
jb
mov
mov
cli
push
pop
jle
mov
inc
out
and
xchg
fs
xchg
inc
push
push
repnz
sub
pop
jp
in
sbb
xor
out
dec
add
or
imul
movsl
jnp
or
inc
or
rcrb
shll
scas
sbb
sub
fisubrl
add
add
repz
ljmp
call
mov
or
cmp
loope
lock
dec
inc
sub
out
ja
pop
test
in
push
ret
xchg
adc
out
loope
cmp
mov
rclb
ljmp
arpl
jg
cmp
lret
lods
push
xchg
sub
jmp
inc
add
aam
pop
dec
loop
mov
mov
xlat
imul
sbb
xchg
mov
ds
mov
xorb
cld
ficoms
gs
lcall
subb
stos
fisubrs
xor
and
cmp
inc
cltd
xor
mov
dec
inc
loop
mov
cltd
mov
fnstcw
pop
push
scas
iret
jmp
pop
mov
inc
ficompl
lret
push
add
test
fucomip
mov
lret
mov
ljmp
in
icebp
lods
adcb
adc
out
les
ds
mov
mov
fistps
jae
je
fucomip
int
push
push
jg
cmp
cmp
lret
ftst
dec
or
fbld
xchg
sahf
out
dec
sub
adc
push
jge
or
xor
sub
test
inc
sub
fstl
mov
jne
or
ficompl
fdivl
push
arpl
mov
adc
lods
push
add
sbb
inc
lods
call
dec
lcall
mov
pusha
in
jmp
cmp
ret
cmc
jbe
sbb
int
xchg
mov
lcall
iret
imul
out
lock
sbb
push
xchg
out
hlt
sbb
jl
int3
adc
push
dec
inc
xor
out
and
fistl
outsb
mov
fistl
lret
adcl
jbe
jmp
ja
cmp
or
popa
dec
scas
fnstenv
outsl
pushf
mov
loopne
xor
incb
fiadds
dec
mov
jns
adc
cs
mov
outsb
lods
mov
mov
ret
sub
sbb
adc
sub
sbb
dec
sbb
notb
hlt
mov
sbb
out
adc
lds
dec
loop
loope
mov
cmpsl
fidivs
add
mov
cmp
lods
adcb
sub
cltd
dec
cwtl
das
jp
ss
and
inc
aam
test
mov
jge
sub
pop
in
stc
stos
mov
add
and
mov
or
inc
jecxz
loopne
gs
adc
xchg
lods
ds
call
sub
movsb
xchg
pop
and
jb
test
popa
push
fnstsw
inc
ret
outsl
fs
es
test
and
sub
pop
xor
mov
movsl
sbb
in
mov
dec
je
jg
mov
and
scas
cs
or
mov
and
pop
mov
or
hlt
jae
adc
jg
int
int
lock
rcl
and
or
mov
cmp
inc
sbb
js
mov
mov
xor
mov
fists
lea
shrl
pop
repnz
push
shl
aaa
cmp
and
xor
or
pop
xchg
pop
pusha
stos
imul
test
pop
fstpt
jecxz
adcl
repnz
hlt
cltd
xor
cmpsb
jno
into
mov
sub
vmwrite
push
jecxz
inc
retw
pop
pop
dec
inc
lret
sar
lahf
insb
inc
dec
lds
dec
push
add
mov
cli
xchg
ss
inc
xchg
push
je
ficoms
inc
aam
lds
pop
dec
mov
enter
jecxz
mov
mov
fists
cmpsl
pop
mov
xor
mov
mov
enter
notb
arpl
mov
adcb
stos
adc
shr
adc
pusha
mov
xor
test
loopne
xlat
roll
or
popf
adc
les
mov
push
and
pop
mov
addr16
mov
cmp
pop
ret
inc
or
loopne
adc
sahf
stos
mov
mov
add
xchg
pop
cmpsb
ljmp
dec
in
insb
cmpsl
popf
out
rorl
roll
test
pusha
hlt
cwtl
sub
lods
inc
push
mov
mov
mov
jne
sub
pop
and
add
xchg
mov
xchg
outsb
jle
mov
mov
sahf
pushf
fidivs
jbe
ja
cmp
add
js
push
xchg
lds
sti
xchg
cli
push
lret
pop
xchg
dec
icebp
std
imul
jnp
fimull
xchg
jbe
sub
pop
add
call
or
cwtl
mov
xchg
sub
mov
lret
push
cwtl
inc
rorb
add
xorb
cmp
xor
fisttpl
in
xchg
jae
xchg
xor
fisubs
add
sbb
mov
push
je
mov
adc
int
jl
dec
push
and
nop
movsl
jle
jle
sbb
mov
add
fldenv
mov
mov
sbb
pop
pop
inc
dec
add
repz
out
into
loope
mov
jb
cmc
test
es
jle
in
jg
jecxz
or
mov
dec
dec
jle
add
lahf
inc
in
aaa
mov
add
dec
pop
sahf
fcompl
push
fbstp
mov
dec
cmp
add
pop
in
or
cmc
psubw
adcl
mov
pusha
mov
aad
jbe
dec
int3
add
jecxz
mov
testb
sbb
or
mov
jg
pop
movsl
lret
lret
mov
dec
popf
popa
pop
cmp
cmpl
ss
push
mov
xlat
or
inc
popa
stos
sub
push
fnstenv
inc
dec
stos
cltd
cmpsl
jnp
dec
push
cld
mov
xchg
out
add
cmp
mov
and
mov
lret
pop
jmp
push
ss
mov
dec
out
xchg
xor
xlat
sbb
jne
arpl
mov
mov
xchg
lea
or
inc
loope
aas
xchg
in
sub
testl
mov
jge
shl
hlt
mov
lds
sbb
adc
sbb
sub
popf
addr16
mov
push
gs
add
aam
cwtl
jle
jb
fadds
out
mov
or
cmp
pop
fldenv
mov
push
lods
adc
adc
enter
scas
xlat
negb
cld
or
rorl
and
ds
dec
pop
xchg
cmp
sub
lahf
adc
sbb
out
popa
push
int
and
mov
jmp
test
jnp
mov
pop
or
pushf
xchg
push
stos
mov
sbb
subl
cmp
cmpsb
cmc
int
lret
in
pop
hlt
outsl
dec
push
movsb
inc
push
xor
cmpl
sub
cld
cmp
and
cmp
cmc
call
mov
pop
out
mov
mov
out
mov
flds
mov
xchg
out
jb
push
cmp
adc
addl
or
enter
insb
mov
rcrl
mov
das
and
mov
inc
mov
ret
lret
pusha
cmc
in
movsb
daa
in
lahf
out
loope
xor
pop
lds
pop
jns
xor
daa
mov
cmp
mov
stos
xchg
xlat
lods
inc
enter
xchg
scas
push
xor
mov
lcall
fmuls
dec
bound
xlat
jbe
std
cmp
daa
out
test
mov
js
aaa
fisubrl
xchg
loope
out
mov
jle
repnz
in
ljmp
dec
or
arpl
pop
scas
add
popf
jg
cmpsl
xor
add
stos
xchg
add
cld
adc
pushf
sbb
iret
out
adc
jbe
cwtl
lds
movsb
in
ds
pop
inc
push
in
push
mov
out
add
cmp
fbstp
dec
inc
mov
jne
insb
cmp
icebp
lahf
js
rcrb
sub
mov
repnz
inc
insb
mov
movsl
cmp
pop
mov
push
push
push
nop
xor
cld
mov
stos
sub
inc
hlt
adc
xchg
ds
fmul
icebp
fsubrs
cmp
outsb
clc
divl
jne
bound
mov
in
in
jle
add
xchg
jge
jnp
dec
xchg
push
test
aam
fcompl
jno
in
pop
sub
insb
pop
repnz
packssdw
mov
or
shrb
ss
cmp
inc
fdivrs
pop
outsb
js
loop
mov
pop
adc
mov
data16
je
ret
push
xchg
jmp
js
js
sbbb
mov
add
jo
xor
mov
andl
js
sarb
mov
data16
sub
fwait
fwait
jge
jmp
out
std
push
shll
les
sub
adc
sbb
dec
test
inc
mov
push
out
nop
push
lahf
lods
dec
add
adc
pop
movsb
push
xor
push
enter
adc
mov
loopne
das
xchg
mov
mov
pop
mov
fisubrl
aad
adc
push
test
punpckhwd
mov
inc
jecxz
fstpt
sub
pop
inc
inc
fnsave
hlt
addr16
sbb
push
scas
cli
push
add
xor
int
aaa
dec
out
mov
shl
adc
adc
fsubp
addr16
and
shlb
jp
pop
sbb
call
jmp
sub
pushf
jecxz
push
lcall
and
add
inc
dec
in
or
mov
bound
push
loope
cmp
mov
xor
fsubrl
mov
mov
aad
aam
inc
scas
adc
pop
xor
outsb
jns
cmpsb
ret
pop
jge
jmp
bound
push
inc
xor
test
pop
adc
popa
sub
lret
loop
jne
mulb
inc
push
arpl
mov
rclb
sbbl
into
fisubrs
inc
loope
popf
or
mov
test
mov
xchg
mov
push
dec
mov
sub
and
les
sbb
test
push
ret
sbb
mov
adc
xor
subb
xchg
repnz
mov
shll
jb
in
jmp
test
dec
dec
pop
push
aam
xchg
pusha
cld
das
das
fildll
pop
and
in
dec
push
sbb
mov
xchg
add
jnp
adc
or
repnz
mov
push
and
jmp
in
enter
jecxz
test
js
call
movsl
popa
jmp
cmp
cmp
or
in
popf
add
pop
bswap
xchg
jnp
inc
xor
in
inc
mov
leave
push
std
pop
sbbb
lahf
fisubs
fdivrl
adc
fmull
aad
test
mov
into
scas
cli
lea
mov
adc
jnp
xor
dec
shrl
xchg
inc
adc
scas
cltd
xor
jg
xchg
lea
cmpsb
sbb
push
ds
push
mov
fistpl
add
arpl
jbe
or
imul
cmpsb
cmp
push
cmp
rolb
pushf
push
mov
sbb
jp
sub
aad
push
aas
dec
ss
rcrb
test
cmp
push
xchg
ds
ret
sbb
movsl
ret
dec
sbb
sub
mov
or
insb
sbb
jecxz
xchg
repz
in
in
xchg
ret
xorl
fs
xor
xor
add
adc
mov
shlb
adc
ljmp
xor
pop
imul
daa
rcrb
push
test
jle
push
mov
test
push
loop
cmp
jecxz
sbb
ficoml
mov
int3
mov
cmp
iret
dec
in
in
xlat
sahf
imul
jp
jle
in
shll
add
rcll
xlat
push
es
lock
ret
cmc
push
test
mov
ficompl
or
inc
sbb
push
sbb
test
ret
mov
insl
punpcklbw
xor
pop
fadd
in
cmp
pop
dec
xor
jp
repz
loope
stc
push
faddl
les
sub
shll
mov
rcr
push
mov
lahf
cli
movsl
jns
int3
das
add
clc
or
repnz
pop
stos
loop
inc
in
ret
les
ret
aam
stc
ljmp
dec
push
dec
dec
imul
scas
jo
mov
sbb
in
mov
mov
cmc
je
xlat
pop
mov
fadds
gs
cld
mov
jge
and
subl
stos
add
jle
pusha
jnp
call
and
cs
sbb
adc
mov
jmp
test
mov
and
insl
add
out
push
aad
test
jbe
xor
addr16
mov
push
mov
aam
push
and
in
mov
cmpsb
cmp
mov
cwtl
ffreep
arpl
repnz
fcoms
mov
shlb
push
xchg
call
mov
imul
pop
mov
nop
js
mov
scas
push
push
cmpsl
ret
out
xrelease
mov
xor
mov
mov
xor
aas
aad
int3
in
add
pop
mov
and
cmp
dec
push
inc
insl
repz
in
push
lods
push
pop
aas
mov
mov
push
leave
int
cmp
mov
push
nop
dec
dec
fbld
xor
lcall
cs
imul
cltd
xchg
xchg
arpl
inc
test
inc
cmp
mov
xor
push
ficomps
push
popa
inc
into
pop
aaa
or
mov
out
push
mov
lcall
adc
mov
icebp
hlt
pop
leave
loopne
aam
ja
scas
es
add
shll
mov
movsl
loop
xchg
sub
pop
jo
shl
jg
xor
xchg
in
dec
idivl
lret
xchg
lahf
xlat
das
ret
pop
push
fildll
mov
aaa
leave
test
jae
fidivs
mov
pop
cmp
in
loop
xchg
mov
add
test
sub
int
jg
xor
mov
in
andl
ret
mov
arpl
les
repnz
repnz
inc
lods
ficomps
or
jbe
or
jne
jmp
imul
cltd
or
daa
popf
lods
sti
adc
xor
cmpl
sarb
repnz
mov
fnsave
mov
push
sbb
pop
loopne
addl
gs
into
mov
into
push
fcmovne
mov
mov
jb
mov
fxch
lods
mov
xorl
xchg
rcrb
adc
add
imul
pop
push
push
mov
rcrl
rorb
or
jp
sub
jo
jno
les
scas
orb
pop
insl
jo
pop
cmp
xchg
sti
movb
rorl
pop
loop
cmp
mov
gs
jns
stos
neg
das
das
or
xor
movsb
dec
xchg
inc
aaa
or
addr16
sbb
je
sub
out
add
int3
xor
and
sahf
out
pusha
stos
pusha
cmp
sahf
add
enter
cmpl
add
leave
and
push
cmp
aad
cs
sbb
and
call
dec
cmp
clc
sub
mov
fdivrp
adcb
xchg
addr16
adc
in
inc
arpl
sbb
out
test
sub
cmpsb
pop
xor
fldpi
sub
push
stc
jl
test
pop
mov
lds
int3
and
cmp
inc
sti
lret
lods
pop
push
rcrl
cmp
or
jb
movsb
daa
ja
inc
icebp
in
andps
xchg
jo
mov
aaa
push
mov
lock
ljmp
orb
inc
push
nop
mov
mov
or
scas
lea
and
cltd
into
jbe
add
sbb
xor
xor
lds
aad
inc
or
jl
mov
mov
dec
xchg
xchg
out
rcr
lahf
lods
lock
or
div
jo
into
and
dec
enter
cmp
pop
loopne
in
stos
call
repz
jmp
or
mov
cltd
cmp
loope
jbe
jl
mov
int
pop
sti
push
push
mov
xor
clc
push
jmp
or
pop
pop
rclb
pop
mov
mov
enter
pop
int
ljmp
sbb
das
jl
mov
in
add
lods
sbbl
xchg
sub
jl
lret
addr16
cltd
xor
fwait
popf
scas
sahf
dec
mov
push
mov
dec
jns
dec
lret
stos
int3
fcoms
and
fwait
push
insl
pop
mov
mov
cmp
jbe
dec
cmp
or
cwtl
cld
xor
sbb
mov
pop
pop
js
scas
xor
add
adc
icebp
addr16
jne
fucomp
iret
xchg
sahf
or
fidivrs
mov
mov
ds
lock
lret
mov
outsl
ret
xor
pop
adc
in
cld
xchg
push
or
scas
dec
mov
push
sbb
xor
std
jmp
or
jae
xchg
jns
xchg
pop
sahf
lret
jae
xchg
mov
bound
mov
sub
push
mov
inc
out
and
iret
mov
subl
sub
mov
insl
adc
sbb
test
mov
pop
test
mov
fsubrs
jno
or
cld
pop
sahf
cmp
and
mov
addr16
mov
push
incl
jecxz
notb
js
dec
inc
sti
aaa
jns
cmpsb
cld
add
mov
dec
sub
inc
dec
lahf
jge
cwtl
and
addl
aas
aad
in
popa
faddl
fiaddl
xlat
sub
gs
jge
es
clc
aad
outsl
pusha
sub
popa
xor
jg
scas
mov
ss
sbbl
push
cmpsb
ret
and
inc
nop
or
rcll
and
fs
test
icebp
loop
andl
mov
and
popf
and
shll
test
mov
or
clc
rcrl
je
enter
dec
mov
pop
and
insl
mov
ret
add
and
dec
rorb
xor
pop
cltd
shrb
jnp
jl
xchg
ret
dec
pop
mov
sbb
and
lock
jns
incl
scas
in
mov
sti
fcomps
fadd
stos
and
out
xor
cmc
push
pop
pop
adc
movsl
cmp
inc
jmp
mov
mov
adc
push
daa
cmpsb
cmp
mov
repnz
cmp
test
cld
push
repz
popf
pop
int
js
fwait
cmp
pop
bound
dec
mov
rcll
xorb
xchg
pop
add
jge
repz
xor
pop
mov
ret
shll
mov
movsl
repnz
out
fcmovu
cmp
push
jge
mov
lock
lret
mov
cli
mov
bound
add
divl
dec
xchg
ret
rcrl
jg
jle
mov
pop
sub
xchg
mov
cmp
add
adc
inc
cli
repz
sub
xchg
movsb
cmp
sub
out
cmc
outsl
cmc
mov
ljmp
dec
aas
mov
jno
and
les
xchg
jnp
loopne
xor
sbb
push
jnp
aaa
out
xchg
dec
pop
shlb
add
add
aas
jne
fsubrl
xchg
jg
inc
dec
and
std
push
push
test
jae
sub
std
sbb
mov
and
jae
jmp
iret
shll
imul
jns
inc
sub
dec
mov
lock
dec
sbb
das
jns
and
cltd
and
xchg
ss
pop
fisubrs
and
jp
push
push
mov
lcall
sahf
jno
mull
adc
add
mov
adc
fistl
add
lret
xchg
adc
adc
test
mov
sub
leave
and
push
rol
cmp
pop
mov
in
inc
rolb
arpl
pop
sahf
mov
ficoms
pop
int
add
mov
inc
imul
lcall
mov
hlt
shl
sbb
inc
or
in
test
dec
aaa
imul
xchg
add
imul
bnd
inc
push
lock
fnsave
mov
fisttps
push
xor
and
iret
sub
mov
xchg
and
push
movsl
cmp
ret
jle
aam
lds
loope
lock
sbb
inc
mov
mov
or
add
icebp
or
lods
aas
mov
adc
jne
lock
loop
dec
iret
lcall
mov
movsb
xchg
cmpsb
xor
std
mov
aaa
call
mov
inc
dec
adc
es
sub
mov
leave
cmp
test
mov
lret
lock
mov
icebp
mov
xor
add
inc
dec
adc
movsl
xor
movsl
sbbb
in
movsb
mov
mov
gs
jae
cmpsl
mov
lds
fsubs
mov
mov
xor
mov
dec
divb
push
cltd
cmc
fmull
sti
sub
pop
fcompl
jo
enter
add
ljmp
jp
loopne
sub
push
mov
push
fsubl
xchg
mov
dec
cmpsl
cld
ss
sub
cmp
orl
mov
sarb
xchg
adc
decl
or
xchg
xchg
cmp
dec
rcrb
out
mov
loope
mov
addb
js
shr
ret
adc
ficoms
mov
pop
in
jge
data16
or
inc
dec
aam
xchg
mov
test
aam
xor
xchg
ret
jae
jecxz
adc
repz
xor
push
push
mov
or
inc
ret
adc
popf
mov
into
or
xchg
enter
sbb
popa
push
outsl
hlt
imul
nop
hlt
clc
stos
repz
int3
jae
test
lcall
adc
push
shrb
dec
jmp
mov
ret
cmp
jbe
push
stos
mov
push
daa
je
xchg
decl
sahf
jmp
into
pushf
scas
repz
jno
icebp
or
aad
adc
nop
nop
jecxz
adc
test
cmpsb
js
mov
shl
xlat
jmp
sbb
stos
add
in
pop
fsubrl
popa
test
add
xor
rcrl
popf
mov
testl
movsb
ficoml
inc
dec
je
jbe,pn
push
out
cs
aaa
icebp
cmc
cmp
xchg
sub
arpl
sbb
decl
and
jnp
adcb
je
xchg
dec
pop
sbb
stos
addr16
insb
adc
fwait
inc
sti
pop
imul
push
jg
icebp
cmp
lret
jo
push
xchg
in
dec
mov
insl
icebp
call
scas
cmp
popf
cmp
lods
cmp
sbb
mov
sbb
push
idivb
jae
das
jge
add
mov
sbb
ja
pop
fildll
scas
mov
iret
xchg
cmp
cs
adc
std
dec
dec
cmc
mov
and
push
ljmp
movsl
fistpll
mov
jmp
push
scas
cmp
mov
sti
pop
pop
push
outsl
push
out
pop
cmp
xor
ss
addr16
jl
ud1
jle
movsl
lcall
mov
dec
jmp
ss
adc
mov
mov
xchg
sti
loop
ficomps
js
add
mov
aam
jbe
es
mov
js
shl
jns
dec
loopne
lcall
jne
mov
rol
push
jge
push
xchg
arpl
dec
and
popa
out
pop
les
testb
ljmp
or
mov
dec
xor
pushf
add
out
jle
pop
dec
jp
andb
nop
loope
scas
cltd
hlt
out
je
sub
nop
mov
outsl
jns
dec
nop
inc
adc
lahf
jnp
insb
inc
pop
or
pop
and
adc
xor
push
in
pop
pop
das
cmp
cmp
orb
stos
cmp
inc
ss
jle
adc
movsl
xchg
popf
lods
call
test
lret
pop
in
fs
addr16
inc
out
pop
out
outsl
daa
jle
adc
dec
jg
test
daa
fistps
lret
pop
lret
or
mov
popf
fstl
je
cmpl
cli
aam
mov
push
lcall
insb
add
outsb
jle
mov
addb
inc
inc
sar
cli
pop
and
shll
test
fs
movsl
mov
rolb
cltd
mov
iret
mov
push
or
gs
xor
jne
push
lock
and
into
les
jg
mov
mov
in
stos
inc
jl
repz
jns
mov
leave
xchg
xor
cli
mov
push
jl
fcmove
or
mov
push
dec
and
dec
xlat
mov
test
or
sahf
and
enter
push
push
in
inc
in
sti
in
mov
sub
data16
mov
or
push
mov
movsb
push
lcall
and
push
scas
les
xchg
adc
js
add
pop
mov
pop
mov
cmpsb
cmp
push
jle
mov
sbb
repnz
ds
sub
mov
and
sbb
adc
movsb
sbb
jl
pop
sahf
sbb
or
dec
shrl
dec
leave
jae
adcb
mov
lods
outsb
out
and
cld
dec
stos
aaa
jo
hlt
lea
lds
pop
mov
inc
add
inc
dec
stos
jmp
insb
fidivs
movsl
mov
insb
mov
rol
mov
fs
int3
add
int3
lret
and
push
test
xor
or
xchg
pop
pop
inc
ja
in
pop
mov
out
mov
rclb
inc
rolb
mov
into
xchg
jge
out
pop
out
or
hlt
dec
subb
in
in
add
mov
fpatan
sub
testl
xchg
dec
dec
cmp
pusha
sbb
test
lods
and
mov
gs
dec
testl
scas
mov
xor
xorl
jl
bound
jnp
mov
and
ljmp
push
in
outsb
jle
xchg
pop
jmp
fstps
and
mov
mov
outsb
lds
adc
aad
fisubs
sahf
pusha
jbe
or
rol
jbe
loope
ja
push
scas
jno
in
push
lcall
or
inc
push
push
mov
fisubrs
xor
fstp
fmuls
stos
pop
jno
mov
and
outsl
test
stos
jp
iret
movsl
add
test
dec
sbb
out
arpl
inc
push
adcl
nop
mov
jp
jae
insb
movsl
outsb
loope
or
sbb
out
dec
mov
shll
xchg
rorb
jp
es
mov
add
jo
add
xchg
jns
out
mov
repz
aaa
sarl
jns
stos
push
pop
ficompl
jno
test
test
push
lods
xor
fidivrs
jne
stos
in
fstl
in
or
push
pop
add
jp
shlb
arpl
cmp
jle
test
outsl
leave
xor
push
fcoms
aas
lret
jg
push
cli
pop
sti
mov
mov
push
or
pop
mov
mov
dec
rcl
aaa
sbb
pop
subb
push
sbb
and
adc
lret
mov
xor
cmp
test
cmp
mov
outsb
or
add
mov
sub
mov
sub
scas
sahf
minps
sarb
push
sarb
les
cli
mov
mov
push
pushf
dec
ficomps
add
mov
mov
ds
mov
inc
xchg
out
in
fimull
mov
jmp
lret
mov
enter
push
jmp
inc
push
inc
leave
mov
lock
pop
ret
push
in
test
pop
add
out
test
testb
ret
addl
je
jecxz
fistpll
add
sahf
cmp
outsb
fcmovnu
jb
insb
aaa
clc
popf
sub
push
mov
cli
dec
xor
pushf
mov
loopne
insl
adc
cmp
xor
rcrl
dec
ret
pushf
popa
jp
push
ljmp
call
xorl
or
daa
sub
sub
inc
bound
and
popa
xor
adcl
cmp
inc
outsb
sbb
xchg
push
lcall
inc
int
addb
mov
cs
inc
inc
push
mov
fmuls
fs
lods
sub
or
insl
test
sbb
adc
cli
inc
data16
or
mov
icebp
adc
nop
dec
pop
mov
mov
and
mov
push
int3
outsl
fs
out
mov
subb
fsubrs
push
lods
jl
pop
idiv
mov
out
insl
add
test
jno
xchg
stos
pop
pop
dec
add
jp
push
or
cmpsl
fdivrl
sub
pop
cli
in
lock
loope
lret
lahf
fsubrl
sti
fwait
and
addr16
bound
testb
mov
dec
push
hlt
fwait
mov
jnp
mov
jbe
mov
imul
sbb
test
nop
mov
fsubs
enter
pusha
cmc
push
sbb
dec
test
sti
aam
movl
les
xor
cmp
out
push
leave
sti
mov
xchg
in
pusha
cltd
pop
icebp
int3
mov
push
icebp
adc
enter
loope
sub
cltd
sbb
faddl
mov
insl
data16
mov
hlt
mov
inc
int
bound
pop
inc
jne
mov
jg
lret
fsubs
push
add
in
std
dec
jns
std
jb
cli
mov
sarl
test
mov
ds
sub
sbb
enter
cmp
test
inc
ja
lods
pop
dec
sbb
mov
loope
icebp
xchg
sub
dec
inc
push
or
dec
xchg
xchg
cmp
xlat
int3
jo
jb
icebp
rclb
inc
cmpsl
aas
fstpt
inc
les
out
nop
xchg
cmpsb
insb
sbb
xlat
adcl
dec
scas
int3
inc
sub
push
dec
dec
dec
rorb
shlb
cmc
push
sub
mov
stos
and
test
std
mov
pop
sbbb
popf
ja
mov
cmc
scas
mov
mov
loop
dec
les
and
sub
jne
and
sti
das
stos
insl
jo
es
sub
and
sub
scas
jno
and
fidivrl
dec
xchg
arpl
movsl
lahf
push
cmp
movsb
mov
and
mov
in
mov
and
pop
mov
icebp
dec
xchg
mov
and
leave
cmp
cld
fdivrl
mov
jecxz
scas
lds
neg
cltd
testb
imul
dec
cmp
lret
jae
popf
mov
and
stc
and
push
push
xor
roll
stos
sub
or
dec
dec
push
pop
repnz
das
enter
sub
je
adc
xchg
mov
pop
outsb
fst
dec
and
clc
lods
dec
cmp
push
call
stc
loop
inc
lcall
iret
sub
push
mov
inc
into
sbbl
sub
jo
mov
cmp
fidivs
jge
ret
and
rcrb
dec
pop
daa
scas
test
testl
scas
adc
sbb
fwait
test
in
dec
pop
and
add
inc
es
imulb
fidivl
insb
cmp
jns
subl
popf
subl
push
imul
push
sbb
ret
jmp
push
or
ss
test
rcrb
lock
jg
pcmpgtb
jl
cli
pop
out
faddl
mov
xor
aaa
fisubl
sub
lret
adc
mov
xor
das
ret
add
push
icebp
data16
sub
push
dec
lcall
sub
mov
gs
daa
mov
in
inc
jecxz
xor
popa
dec
dec
sti
aam
mov
sub
jns
js
xor
push
rcrl
mov
iret
subb
xchg
cmpl
cmp
int3
jb
iret
imul
jnp
pop
and
jne
pop
adc
shlb
dec
stos
cmp
sub
aam
xchg
add
mov
mov
pop
call
gs
xchg
push
in
aad
and
sti
sub
push
push
dec
imul
nop
mov
scas
rolb
jbe
lods
pop
xchg
sub
cmp
repz
pop
dec
into
pop
push
sarb
mov
shll
jmp
movsb
or
mov
inc
int3
lcall
outsl
daa
movsl
in
sbb
cmp
add
and
cmpsl
add
push
or
push
cld
outsl
popa
cmp
push
ret
push
cmp
sbb
mov
roll
mov
rclb
fisttps
fwait
dec
pop
cmpsb
inc
insl
scas
in
pop
mov
xchg
call
xlat
cmp
pop
fbld
jb
fldenv
jbe
mov
dec
rorb
test
push
push
mov
mov
nop
sub
dec
mov
or
sub
ljmp
aaa
sbb
cmp
inc
inc
inc
fucomi
push
out
jbe
pop
adc
mov
pop
sti
stos
inc
or
pop
pop
pop
out
add
std
aam
sbb
les
loopne
jb
mov
mov
sbb
dec
int3
repz
xor
mov
jle
sub
add
popf
push
jg
cmpsl
and
jb
mov
jecxz
push
inc
adc
dec
push
std
or
sub
xchg
mov
out
xchg
addr16
pop
jp
xor
push
adc
rorb
mov
push
mov
push
lea
sbb
mov
dec
cmp
mov
pop
imul
lret
leave
jb
push
inc
push
call
cmpsb
push
call
jnp
mov
mov
cli
xchg
addr16
dec
repz
lret
or
sbb
adc
cmp
mov
mov
lea
adc
sub
inc
in
icebp
and
mov
and
lods
push
push
push
arpl
mov
mov
jmp
es
cmpsl
mov
mov
adc
jge
pushf
push
and
cwtl
mov
adc
mov
shll
out
call
mov
insl
outsl
cmp
xchg
mov
xchg
xchg
pop
fwait
cmpsb
jp
cwtl
inc
out
jae
cmpnltps
mov
loope
daa
pop
push
sub
hlt
shlb
js
call
jecxz
gs
imul
or
arpl
xchg
xchg
jae
pop
mov
mov
std
rcrl
add
cmp
xchg
add
xchg
jb
xor
out
aaa
cmp
pop
out
aad
mov
pop
repz
mov
imul
dec
jg
cmc
cmpsl
rclb
cmp
ljmp
xor
xorb
lea
sub
es
dec
stos
inc
jge
movsb
cmp
enter
add
inc
sub
out
push
mov
or
jb
mov
mov
filds
sbb
push
aas
adc
shll
push
push
leave
lcall
jle
test
imul
movsb
mov
std
cmp
cmp
cmp
add
jmp
fs
inc
dec
int
sahf
das
add
push
jg
jns
aaa
rcr
jecxz
inc
adc
into
subl
or
test
inc
daa
or
pop
fbstp
add
xor
push
fwait
push
add
sbb
vpsraw
push
outsl
push
pop
inc
xchg
das
cmp
cmc
pop
push
xchg
fwait
and
mov
sti
mov
jb
adc
lea
and
fistl
in
mov
shl
ret
lcall
or
cmp
fcmove
mov
mov
adc
lock
das
cmp
inc
ds
jg
sbb
sbb
sbb
jnp
fimull
push
inc
add
xchg
rorl
mov
lock
js
cmp
int
insb
push
xchg
lods
mov
imul
push
cmp
arpl
sti
mov
add
fstpt
adc
xor
push
int3
and
cmp
and
mov
xchg
mov
in
cmp
aad
pop
add
test
bound
repz
sahf
stos
jb
sub
mov
lar
jl
or
pop
adc
mov
xor
add
dec
xchg
mov
loop
stos
and
decb
mov
mov
pop
jg
sti
or
cmp
rcrb
dec
mov
cli
cwtl
movsl
in
imul
sbb
lret
mov
push
std
add
mov
ret
cmc
xchg
mov
sti
xor
adc
mov
movsl
mov
ficoms
dec
mov
je
sub
ret
aad
sbb
filds
andb
pop
testb
call
sub
xchg
call
inc
movsl
jb
sti
lret
jp
jb
dec
jg
fwait
cmp
nop
dec
xchg
shrl
pop
and
insb
lret
mov
scas
inc
dec
mov
imul
inc
pop
pop
rolb
inc
xchg
pop
push
testb
and
outsl
push
jbe
jle
adc
and
sahf
loop
cmpsl
xor
push
pop
jg
ret
leave
inc
pop
add
cmp
push
pusha
cmc
outsl
inc
aas
cmp
inc
insl
cmp
pop
fmuls
loope
js
cmp
lods
dec
sub
sub
and
cmp
and
add
roll
cmp
add
lret
xlat
adcl
jnp
out
and
stos
xchg
loope
inc
daa
hlt
lea
push
add
fcmovnb
or
out
dec
dec
fucomip
dec
shll
std
mov
repz
sub
inc
jno
cs
jl
fsubrp
outsb
sub
gs
sub
xor
push
pop
xlat
jp
xlat
ret
aad
fs
sub
test
into
mov
andb
cld
hlt
push
jl
xorl
popa
aam
lods
or
loopne
insl
lods
hlt
xchg
sbb
push
mov
pop
mov
jns
mov
ljmp
mov
int3
stos
insl
shrl
push
pop
pushf
repz
mov
xor
add
pop
popa
daa
jg
stc
test
ret
pop
mov
xlat
mov
hlt
mov
popa
jmp
loopne
cmp
cli
es
xchg
cmp
notl
nop
popf
or
pop
int3
cli
repz
lods
and
fistpll
xor
inc
cli
pop
ss
arpl
les
test
fnsave
mov
orl
das
mov
cmp
jg
in
shrb
sbb
mov
cld
outsl
sti
add
or
out
or
jge
pop
outsl
dec
mov
dec
pop
shl
outsb
adc
enter
jecxz
or
cmp
out
add
cltd
xor
add
out
in
pop
or
pop
mov
xchg
imul
jo
out
push
adcb
pmullw
and
mov
jle
das
and
popf
xor
jg
gs
lahf
out
out
stos
or
push
mov
movsb
cmp
shl
mov
test
push
je
xsha256
cmpsb
push
cwtl
cmc
mov
cmpl
scas
mov
data16
cwtl
push
lahf
adc
dec
outsb
dec
pop
shl
pop
scas
adc
repz
call
inc
or
and
cmp
call
cmp
adc
inc
sarb
mov
shrb
cwtl
cmpsl
inc
mov
and
ljmp
jb
jnp
mov
pusha
int3
pop
scas
scas
add
jne
cmp
push
jecxz
fdivl
add
xchg
mov
int3
rolb
xchg
daa
mov
fldt
push
mov
pop
call
cld
movsl
add
cwtl
enter
lret
push
inc
jb
sub
mov
lahf
js
mov
cmpsb
mov
jne
int3
xchg
test
daa
flds
jle
aaa
cmp
scas
cld
mov
lret
orb
ds
mov
sub
mov
cs
lods
aas
xor
pop
mov
cmp
sbb
pop
mov
or
xlat
and
bswap
pop
add
pop
xor
call
mov
mov
sti
leave
and
in
or
or
out
inc
and
int3
out
mov
and
inc
xlat
test
pop
loopne
pop
push
lahf
jge
shlb
add
push
cmc
pop
hlt
and
or
mov
mov
sarb
xlat
into
in
shrb
push
fbld
insl
add
mov
int
scas
into
cmp
lods
stos
add
in
test
and
nop
xor
sub
in
dec
arpl
pop
lods
jnp
push
ret
jno
xchg
xchg
xchg
ret
psadbw
clc
jo
lahf
mov
ret
and
xchg
cld
test
cs
add
rorl
dec
test
lret
lcall
sti
mov
xchg
jge
lds
mov
cmp
cli
push
lods
sub
lock
mov
loopne
push
dec
cmp
jle
adc
and
xchg
fsubrs
aas
ljmp
lahf
jmp
xor
xor
into
sub
inc
addl
loop
mov
sub
std
sub
insb
repnz
test
cmp
jns
xchg
ljmp
clc
mov
xor
cltd
add
or
shll
adc
dec
aad
out
loopne
ret
sahf
daa
cmp
mov
bound
repnz
mov
mov
aaa
aad
xor
popf
cmp
adc
stos
sbb
adc
sub
xchg
in
jo
into
pop
icebp
adc
and
jbe
add
daa
test
cwtl
xchg
mov
gs
fnsave
lret
push
inc
push
sbb
xor
in
xor
inc
imul
xchg
cwtl
in
mov
push
add
pop
pop
and
mov
add
cltd
mov
and
jae
jge
sub
lock
ss
fprem1
push
scas
mov
fisubrs
pop
mov
je
push
xchg
lods
sbb
pop
xor
ret
lcall
jne
sub
movsl
xor
push
mov
push
sti
leave
mov
mov
ret
test
mov
lretw
mov
xor
xor
inc
in
insl
ja
mov
add
mov
inc
nop
stos
xor
xor
adc
dec
jecxz
xchg
xchg
xor
insb
out
inc
adc
dec
mov
xchg
cmp
dec
push
adc
aas
xchg
das
out
xchg
rep
das
femms
idiv
xor
addb
fimull
pushf
loope
ficomps
cwtl
out
jnp
mov
into
in
push
or
jle
mov
repnz
int
add
push
pop
cld
popf
fists
push
jl
ret
shr
xchg
xor
xorl
sbb
dec
test
dec
sbb
cmp
shrb
mov
inc
push
mov
mov
in
ss
adc
iret
test
fs
stos
mov
dec
cmpsl
dec
roll
push
in
push
es
mov
hlt
ljmp
pop
or
mov
pop
mov
jae
ret
pop
js
jg
neg
lret
push
popf
je
xor
xor
mov
mov
stos
sub
mov
cld
add
dec
loop
pop
scas
aas
dec
or
pop
cmp
lcall
popa
addl
inc
dec
sarl
jl
rcrl
push
int3
push
xchg
xchg
lcall
mov
addb
imulb
cwtl
inc
mov
scas
cmp
test
lahf
jae
insb
cmp
lret
cmpsb
or
lods
pop
shll
xchg
stc
scas
jp
js
cmp
shr
xor
sbb
iret
sub
xchg
dec
in
pop
xor
int
insl
sarb
testl
adc
xor
adc
int
lcall
outsb
int
cmpsb
sahf
sti
aas
cmp
pop
addr16
hlt
in
dec
sub
mov
rol
inc
fs
pushf
cmpsl
lcall
jo
and
sub
adcb
ss
xor
aas
leave
int3
mov
es
and
leave
sbbl
mov
jns
or
xchg
divl
pop
push
pop
lea
jmp
xor
ss
inc
xchg
xor
mov
repz
aam
cld
sti
les
and
jecxz
clc
sahf
push
and
int
ret
push
mov
and
inc
pop
jp
jns
into
stos
outsb
xor
jnp
into
sbb
mov
push
mov
jne
inc
les
das
inc
fisubl
ja
jae
adc
arpl
inc
je
lods
push
cmp
pushf
scas
pop
dec
push
jg
adc
inc
test
hlt
lcall
add
jae
pop
mov
jp
mov
es
aam
jb
jl
inc
push
adc
sbb
fwait
jbe
cmp
dec
sub
xor
insl
nop
adcl
cwtl
or
and
cmp
leave
ficompl
js
lahf
and
int3
enter
xchg
sti
pop
cmp
mov
add
add
and
cmp
std
outsl
sbb
mov
out
negb
fsubs
mov
insb
cmp
aaa
in
gs
pop
rorb
push
pusha
movsl
and
lods
fnstenv
out
sbb
add
sub
mov
stc
scas
inc
and
fistl
ds
lcall
dec
loopne
add
jmp
push
cmp
push
inc
data16
dec
scas
dec
leave
test
scas
sub
popa
fcompl
lock
dec
stos
xchg
clc
insb
mov
sub
test
dec
push
mov
mov
ret
dec
pop
lds
cmp
xor
lods
jo
mov
repnz
xor
in
sbb
test
repnz
xorb
xchg
sub
add
jbe
subl
je
pop
push
fstpt
lods
shlb
push
jno
push
mov
lds
dec
xlat
mov
je
loope
in
dec
aad
add
xor
and
sbb
adc
call
or
and
pushf
mov
lea
imul
mov
pop
mov
dec
cmp
lcall
mov
lret
mov
and
push
push
jnp
adc
sub
adc
xchg
mov
popf
mov
leave
insb
sbb
fs
xchg
xchg
and
test
adc
mov
inc
aaa
cs
inc
and
aaa
push
fwait
mov
adc
inc
iret
push
test
push
push
int
rorb
loop
pop
adc
push
adc
imul
das
cmpsl
cltd
xor
pop
adc
cmpsl
shrl
lea
outsb
dec
gs
inc
adc
js
sbb
test
into
in
jg
sbb
mov
mov
sarb
fsubrs
jge
xlat
adc
or
add
push
jbe
push
jecxz
pop
xchg
add
stc
dec
cltd
mov
jecxz
das
mov
dec
pop
and
or
mov
out
mov
enter
rcll
and
push
cltd
aaa
pop
adc
cmpsl
lock
pop
cmp
cmp
push
nop
dec
inc
push
test
loope
xchg
sub
test
xor
test
mov
xor
or
mov
adc
or
mov
sti
jbe
pop
inc
push
jo
push
jnp
fcoms
das
repz
cmp
push
aaa
push
gs
rolb
cwtl
push
pop
loope
movsb
sub
push
mov
or
scas
pop
cmp
outsb
pop
push
shrl
or
sub
or
popf
scas
mov
xchg
aas
mov
pop
fildl
fwait
jl
push
sub
pop
test
or
dec
fnstcw
cmc
dec
dec
xlat
out
cli
daa
adc
cmp
xchg
bound
lahf
outsb
pop
and
sub
fldl
push
sti
cmpsb
ja
inc
js
xchg
lock
sbb
push
into
mov
cld
dec
jnp
hlt
mov
je
into
in
arpl
out
jne
imul
dec
arpl
inc
push
sbb
pop
sahf
cmp
test
lcall
lds
in
popa
add
sbb
push
jo
int3
dec
pop
push
leave
ret
fists
inc
movsl
ret
xchg
push
xor
subb
mov
mov
leave
mov
je
mov
xor
mov
cld
push
jmp
nop
mov
adc
dec
andl
test
fstpt
xor
stos
jmp
or
push
mov
and
or
orl
pop
pushl
sub
movsl
lock
push
add
jl
pop
push
sbb
mov
fwait
add
lds
pop
lds
sub
lea
jnp
jmp
push
cmpsl
sahf
cltd
xor
rclb
pop
test
jns
add
mov
cwtl
negl
arpl
shll
add
add
leave
sahf
xorb
sbb
sbb
shlb
daa
sub
adc
sub
pusha
out
cmpsl
cmp
mov
fsub
mov
adc
divb
fcomp
xchg
xor
jno
cmp
mov
cmp
jmp
je
dec
andl
dec
lods
cmp
jecxz
lret
cmpsb
pop
jecxz
in
mov
jmp
mov
pop
out
in
out
lock
aaa
not
ror
xor
roll
jns
inc
mov
push
mov
pusha
dec
or
outsl
xlat
push
cmpsb
popl
or
xchg
xchg
mov
stos
jecxz
pop
adc
push
push
xchg
sbb
sbb
cld
push
jne
cmp
dec
dec
add
pushf
push
std
dec
mov
jae
mov
push
fsts
mov
xor
fldcw
rcll
xor
inc
or
lods
jbe
or
push
insl
push
add
pop
mov
and
cmp
cs
mov
mov
sbb
rol
pop
mov
and
jns
mov
daa
test
xlat
dec
adc
cmp
loope
sarl
push
aad
lock
xchg
data16
cmpsl
clc
cmp
dec
mov
cli
outsb
inc
data16
movsl
imul
and
mov
lahf
mov
add
xor
aad
icebp
sahf
cld
push
mov
jle
xor
call
mov
adc
repnz
decl
ficoml
fists
shlb
leave
das
inc
adc
data16
sub
pop
cs
idiv
rorb
mov
jo
and
mov
add
pop
cmpsb
sub
fs
pop
stos
add
inc
decb
or
xchg
mov
loop
ja
enter
mov
orb
or
mov
imul
dec
mov
pop
and
mov
jbe
test
jae
stc
insb
mov
pop
ljmp
test
in
sbb
jle
mov
loope
dec
jmp
inc
test
inc
push
lock
insb
out
out
mov
push
les
cmp
lods
out
cltd
cmc
dec
inc
jmp
repz
cmp
or
leave
jle
pop
int
cmp
push
movsb
cmp
xchg
dec
fnstenv
jns
jae
rcll
jns
or
js
mov
mov
and
cwtl
lock
stos
adc
or
shr
cmpsl
decb
stos
mov
mov
test
or
or
dec
dec
lahf
icebp
in
sbb
xchg
ret
cmpsb
mov
shll
scas
dec
fisubrl
or
dec
in
xor
std
mov
aad
lds
out
mov
pop
dec
and
lret
mov
jnp
sbb
push
mov
cmpsl
movsl
cmp
js
push
mov
inc
pop
scas
push
push
pop
and
adc
and
and
addr16
into
rclb
push
mov
mov
cmpsb
out
pusha
push
dec
adc
cmp
mov
pop
shll
fiadds
fnsave
in
ja
sbb
dec
cltd
es
adc
into
repnz
jns
cmp
cmc
add
fldcw
hlt
test
mov
rol
pushf
pop
xor
dec
and
mov
add
push
addr16
xchg
mov
pop
jns
jmp
or
sbbb
cmpsb
mov
mulb
mov
test
pop
or
aaa
dec
icebp
adc
pop
dec
js
lcall
xor
lea
sub
xchg
add
cwtl
add
mov
in
pushf
loope
adc
fists
scas
or
shlb
aam
sbbb
lret
mov
xchg
mov
imul
sti
cld
cmc
insb
mov
scas
inc
xchg
or
insl
push
inc
adc
inc
push
push
push
xor
ret
outsl
outsl
push
or
or
pop
lods
in
in
mov
mov
or
cs
add
icebp
sbb
dec
in
inc
adcb
inc
cmp
insl
popf
xor
stos
test
adc
push
daa
jno
jle
cmp
jg
jae
in
popl
popf
add
aas
test
xchg
les
test
jbe
and
lret
mov
cmpl
data16
ret
sub
hlt
stos
aam
lock
xchg
out
iret
aad
sahf
adc
push
cwtl
jbe
shll
lret
pop
add
fcomps
sbb
loop
ret
test
lods
cmp
mov
push
push
popf
jnp
pop
push
enter
fs
bound
lods
or
imul
mov
pop
popa
mov
xchg
xor
sahf
xor
and
fldenv
fwait
jbe
and
ja
dec
std
int
jp
adc
in
sbb
and
and
xchg
mov
cmc
leave
inc
in
mov
in
mov
jmp
repnz
data16
popl
fimuls
mov
loopne
outsb
push
jns
out
jp
mov
mov
fiaddl
inc
xor
adc
ja
sar
jbe
je
mov
popa
jmp
pop
and
stc
icebp
inc
xchg
push
add
lods
or
ret
xor
sub
adcb
pushf
inc
out
xor
out
push
idivb
push
and
in
jecxz
icebp
movsl
cmp
pop
pop
dec
aaa
fnstcw
push
lods
mov
lods
insb
ja
lds
call
and
negb
xchg
sub
pop
dec
sbb
mov
pop
nop
imul
mov
aam
in
add
mov
xor
loopne
scas
push
or
out
mov
push
repnz
lods
push
enter
xchg
mov
push
outsb
jecxz
lds
xchg
xor
cmc
mov
leave
std
sub
inc
in
cmp
sbb
mov
jnp
mov
pop
xchg
testl
outsb
add
push
cmp
inc
popf
push
push
push
fidivrl
ret
lods
iret
fimull
bound
cmpsb
test
pop
aaa
or
ja
mov
xor
jecxz
cmp
or
jl
ja
mov
jmp
add
jae
dec
pop
cmpl
enter
mov
pop
mov
lds
sbb
jb
mov
push
movsb
pop
mov
mov
cld
mov
fdivl
into
das
jge
popa
scas
sbb
in
pushf
scas
xchg
fwait
cmpsl
add
imul
outsb
enter
cmpsb
pop
je
cli
outsl
jnp
loop
pop
push
inc
aas
mov
je
imul
add
adc
movsb
lea
test
test
cmp
xchg
cmpsl
mov
testb
adc
cmpsb
mov
xchg
daa
xchg
sbbl
lret
clc
imul
jle
cmp
xchg
lcall
stos
sbb
dec
ss
sub
xchg
adc
fiadds
mov
lahf
push
cmp
and
hlt
jo
jo
mov
rcrb
xlat
ud1
sbb
xchg
jne
fwait
jp
movsb
lea
shll
test
jo
cmp
out
sahf
push
xchg
mov
lds
dec
lahf
int3
rorl
mov
lock
push
dec
out
add
add
pop
inc
ja
cltd
cmpsl
cmp
div
adc
adc
test
mov
sub
mov
pop
stos
inc
dec
andl
lods
adc
fisubrs
frstor
rep
das
js
and
dec
aam
inc
repz
mov
and
fsubs
mov
or
pusha
adc
push
adc
pop
push
jle
mov
popf
fs
mov
and
xor
pop
mov
in
clc
imul
dec
pop
ds
mov
into
push
pop
xchg
mov
push
add
mov
inc
icebp
iret
mov
subl
shll
xchg
dec
fbstp
mov
cld
and
js
cld
js
push
test
add
out
jge
sahf
xchg
push
push
mov
and
push
inc
pop
lock
pop
xchg
xchg
lahf
push
loope
scas
std
rorl
push
pop
out
sbb
xchg
in
mov
dec
xlat
aam
jo
cwtl
cmc
pop
inc
mov
dec
dec
inc
dec
xor
jge
cmp
jne
push
sbb
arpl
mov
in
cltd
inc
pop
lret
or
mov
adc
and
mov
mov
cs
mov
adc
xor
test
adc
sub
mov
sub
sti
adc
adc
sub
jno
js
repz
ret
scas
push
inc
and
cld
or
sahf
lea
and
scas
gs
push
hlt
mov
or
and
jno
outsl
xchg
mov
push
ljmp
inc
mov
adc
adc
push
push
pop
pop
ljmp
add
sub
fiaddl
sub
shl
arpl
jle
mov
xchg
in
es
mov
sbb
fdivrl
and
or
jl
aaa
mov
xorb
push
testb
cmp
jae
lahf
jo
sub
jp
adc
xlat
and
adc
andl
stc
inc
stos
mov
js
clc
mov
add
mov
ds
in
jo
add
das
xor
cwtd
pop
sub
cltd
xchg
mov
xor
bound
lcall
cwtl
cmp
cwtl
mov
std
mov
loopne
out
adc
mov
dec
add
das
shlb
mov
popf
stc
fsubrl
xor
pop
int
xchg
ds
push
scas
ljmp
or
inc
and
xchg
outsb
adc
ss
movsb
in
pop
insl
push
push
orl
fistpll
mov
shrl
fimull
rcrl
inc
mov
insb
arpl
or
push
cmp
cwtl
sub
cmpsb
clc
ljmp
call
pop
and
fcoms
sarb
sub
push
popl
fisubl
sti
pop
imul
into
mov
leave
out
jae
test
lods
jbe
sbb
cmp
pop
xchg
pusha
push
jp
inc
pop
mov
mov
pop
xor
popa
jne
mov
in
push
xchg
ja
out
mov
jg
mov
fimuls
mov
xor
dec
es
inc
cld
fcmovnu
shrb
fnstsw
fmuls
sarl
leave
or
es
ljmp
jno,pt
pop
repz
pop
outsl
ds
jp
pop
insb
cmp
pop
shlb
fstps
pop
loop
pop
test
pop
mov
lcall
pop
les
int3
fisttpll
lcall
and
sub
test
cmp
pop
lcall
cmp
sub
lds
popa
clc
sbb
ret
movsb
mov
repnz
js
xchg
lcall
cs
pop
notl
push
lods
inc
xor
xor
and
dec
pop
aad
dec
js
pop
stos
push
inc
lahf
pushl
mov
shrb
lret
aad
imul
dec
test
jmp
aad
or
pop
mov
movsb
mov
pushf
push
inc
fidivl
mov
mov
incl
mov
fdivrl
sbb
mov
je
jae
outsb
xchg
xor
roll
sahf
dec
xor
leave
push
mov
xor
lret
pop
loop
insb
daa
mov
fldenv
adc
add
xchg
xor
popa
pusha
inc
insb
sub
loopne
pop
adc
cli
aas
hlt
xor
cmp
shrb
addr16
addr16
cwtl
inc
sub
inc
or
cli
or
push
popf
xor
pop
xchg
popf
sbb
in
aam
pop
pop
lea
ret
or
ljmp
pop
pop
pop
pop
dec
sub
sub
insb
xchg
dec
in
dec
gs
add
add
jnp
jo
mov
fcoms
mov
adc
pop
mov
sub
cmp
mov
stc
in
test
enter
adc
ds
fcompl
mov
add
imul
add
cli
ss
das
aad
stos
dec
push
in
push
mov
loopne
aaa
call
mov
dec
loopw,pt
out
or
jnp
sbb
or
ret
mov
pop
pop
imul
fwait
movsl
lds
insb
repnz
push
dec
jp
cmp
out
loopne
fisttpl
lods
inc
jns
call
pop
pop
cmpsb
inc
pop
clc
mov
movsb
jae
xor
or
mov
dec
outsl
add
icebp
sub
arpl
cltd
mov
or
jb
arpl
arpl
popa
or
sbb
jp
push
js
loopne
jl
xlat
outsb
or
jb
pop
sahf
cmp
iret
jl
push
cmp
adc
mov
jo
test
clc
iret
mov
mov
repnz
pop
pop
addr16
lods
das
cmc
lret
pop
adc
insl
pop
mov
or
adc
aad
dec
enter
or
sahf
cmp
insb
pushf
mov
inc
cmp
es
inc
mov
imul
xchg
insb
jp
push
mov
pop
sub
rcrl
dec
pop
imul
push
mov
stc
sbbl
dec
add
imul
mov
sti
cmovnp
stc
jns
popa
and
cmp
cmp
sti
std
push
rcrl
lcall
xchg
in
push
scas
mov
sub
jns
xchg
sub
aaa
mov
call
test
shlb
movsl
mov
add
jne
xor
push
outsl
ljmp
pop
pop
mov
nop
sbb
in
inc
cltd
sub
out
sbb
pop
repnz
aaa
loopne
imul
push
loop
or
and
lret
addr16
pop
not
sub
inc
cmp
ss
cmc
test
adc
inc
mov
jg
mov
das
pop
ret
push
add
rclb
lods
sbb
adc
inc
int3
pop
pop
mov
int3
loop
cmp
test
sub
outsl
xchg
clc
dec
mov
push
ja
cld
xchg
push
cwtl
fsubrp
mov
add
roll
jbe
sbb
jge
mov
icebp
mov
stos
jl
js
xor
dec
fwait
jo
incb
scas
sbbb
or
idiv
stos
mov
mov
mov
mov
cmp
imul
clc
sub
fs
std
jb
test
xchg
cs
pop
mov
mov
clc
inc
mov
bound
mov
loop
or
aaa
stc
aas
or
negb
cs
pop
xor
sahf
popa
andb
sbb
push
sbbb
mov
add
in
adc
aas
in
sbb
pop
fistpll
jne
pop
push
fisttpll
aaa
cltd
fmull
dec
lods
and
or
stos
and
lret
lret
lahf
in
inc
ds
inc
push
shrl
push
jmp
dec
jmp
jmp
jae
inc
movsb
pop
fs
sbb
bound
fisubl
and
lods
pop
xchg
and
mov
ret
push
and
cltd
test
push
rolb
mov
addr16
add
xor
mov
add
push
pop
out
push
mov
push
push
fcomps
les
js
or
imul
loope
xlat
fdivs
repz
xor
daa
arpl
push
inc
and
adc
inc
imul
aam
jp
cmc
jecxz
adc
mov
movsb
shlb
scas
test
lret
push
fwait
scas
sub
mov
push
outsl
push
jl
aad
and
sbb
inc
movsb
xchg
dec
sub
mulb
xor
xchg
xlat
jo
mov
clc
and
sub
jb
cmc
and
pop
push
dec
fwait
sti
dec
jl
xchg
lcall
sub
adc
dec
fdivs
rcrb
insb
dec
jmp
jmp
mov
shl
out
cmc
out
pop
xlat
test
jnp
cmp
fwait
dec
add
and
xorl
push
mov
iret
xchg
stos
push
mov
daa
push
test
jb
shll
test
sub
or
xchg
add
jmp
jp
mov
iret
pop
jp
std
pop
adc
das
xor
fwait
push
or
mov
inc
aas
sbb
xor
out
movsb
mov
xchg
or
lret
adc
cmp
leave
push
sub
jno
int
lret
push
or
or
xchg
or
fdivl
shrb
inc
pop
push
xchg
je
xlat
add
xchg
jnp
mov
mov
cmpsl
sbb
ror
inc
sahf
fldenv
callw
lret
test
outsb
aad
sbb
nop
fbld
lods
jno
fistpll
addb
sbb
jle
jl
dec
movsl
fwait
add
lock
cwtl
das
add
ja
stos
popa
sub
xor
aas
dec
push
jb
sub
lea
pop
cmp
int
adc
jmp
or
cmp
imul
jp
dec
andl
xchg
pusha
ss
mov
dec
gs
andb
outsl
imull
idivl
xor
scas
movsb
nop
les
int
jo
jecxz
aad
cld
xchg
push
idivb
movsl
sub
adc
inc
fwait
jne
mov
pop
jmp
push
ss
xor
jge
sbb
pop
into
xchg
cmp
in
adc
sbb
gs
lret
in
ds
cld
jg
or
push
shrb
and
cltd
pop
or
mov
pushf
xor
packuswb
or
fisubl
in
std
jns
ffree
push
mov
pop
pushf
pop
xor
mov
sahf
cmpsl
sub
test
jno
pushf
psrlq
or
xchg
loopne
insb
jae
insl
lcall
test
je
ret
popa
jecxz
push
in
push
ret
mov
and
lods
pop
cmc
push
mov
push
cld
std
pop
mov
jnp
fwait
shlb
add
loopne
sbb
xchg
out
test
gs
dec
in
push
fcmovu
pop
sub
adc
inc
js
sarl
mulb
xchg
xor
fs
sub
inc
fwait
popf
inc
jmp
inc
popf
cmpsl
add
cmc
fidivl
push
xchg
je
xchg
or
test
ret
ljmp
ja
hlt
xchg
add
add
adc
popa
pop
cmp
and
sahf
loop
dec
mov
ds
jne
popf
push
mov
cmpsb
cld
adc
cmp
lcall
test
xchg
adc
push
mov
bound
pop
xor
lock
scas
call
add
sahf
gs
scas
jns
pop
sub
cltd
in
stos
or
lock
outsl
inc
push
je
and
rclb
scas
cmp
mov
lret
jnp
sub
xchg
mov
pop
inc
fcmovbe
inc
test
leave
test
out
adc
jne
sysexit
ljmp
imul
fadd
sub
addr16
inc
xchg
ds
scas
data16
xchg
int3
jmp
jp
cwtl
dec
lods
push
es
xor
arpl
outsb
jno
mov
mov
sbb
jnp
je
mov
cmc
pop
push
out
cli
testl
imul
fwait
push
lock
lret
jne
cmp
test
sbb
xor
roll
push
xchg
jg
fwait
in
jle
ljmp
xor
xor
cld
inc
cmp
pushf
inc
dec
push
not
jmp
cmp
lcall
sbb
aam
movsb
jmp
cmc
pop
fwait
mov
cmc
push
lods
mov
mul
or
xchg
pop
mov
addr16
push
inc
sub
mov
dec
outsl
out
dec
aam
push
shrl
xor
fdivrl
mov
mov
out
das
fisubrs
dec
cmpsb
decb
mov
inc
pushf
sbb
mov
or
xor
push
imul
xor
xor
loopne
push
mov
lds
cli
cmp
sub
out
mov
inc
lret
and
popa
cmp
adc
int3
or
repnz
push
or
mov
pusha
or
jecxz
andb
rorl
les
push
aas
out
cmp
rclb
fstl
add
cli
ja
lret
movsb
mov
arpl
jo
add
pop
xor
xor
aad
jl
bound
sti
hlt
or
dec
test
lcall
add
pop
lahf
test
clc
sub
pop
or
sbb
jne
lret
jp
hlt
popa
ja
lret
cmc
aad
mov
in
aam
jmp
sbb
mov
int
inc
shl
cltd
sbb
mov
fldenv
fidivrs
mov
push
outsl
jns
add
cmp
sbb
rcll
mov
xchg
iret
stc
xor
push
or
xchg
cmp
cs
cmp
cmp
stos
and
fldt
aaa
cmp
xor
jle
inc
call
or
mov
iret
push
push
and
mov
fmull
mov
cmpl
dec
test
imul
jnp
pop
push
push
js
addr16
mov
jo
jmp
pop
stos
jb
inc
movsb
int3
loope
cli
xchg
and
xchg
add
push
sbb
mov
sub
xchg
gs
mov
pusha
sahf
lcall
test
cmpsb
xor
xor
fcmovnbe
clc
inc
popl
sahf
or
out
jbe
push
push
shrl
sub
xor
imul
into
xchg
stos
jno
mov
je
jbe
mov
sub
mov
or
xchg
sub
dec
mov
jg
in
jl
dec
orl
sub
pop
popa
push
push
cmp
sti
mov
scas
dec
fnsave
enter
jmp
pop
inc
pop
scas
jno
pop
mov
xabort
xchg
add
jp
push
fstl
mov
pop
sahf
mov
cld
jne
mov
sub
dec
mov
jg
or
repz
das
push
stos
fdiv
sbb
lock
push
scas
std
mov
mov
mov
sbb
push
ss
dec
movsb
std
sbb
add
pop
dec
test
aam
cmpsb
imul
aam
push
aas
xchg
pop
or
xor
xor
xor
test
or
fs
in
xor
push
loopne
shl
mov
xor
jne
cwtl
das
push
pop
add
mov
add
fisubrl
imul
xlat
mov
lods
stos
push
cltd
sub
jp
dec
xor
lret
mov
ret
aad
sbb
dec
pop
lods
in
xor
icebp
xor
test
pop
add
jle
add
lret
in
add
sbb
dec
xchg
sarb
pop
ret
ret
dec
loop
shufps
in
js
xchg
pop
dec
jmp
jp
add
scas
xor
icebp
mov
jle
cmp
add
stos
lds
ds
ret
pop
repnz
jnp
lds
in
sbb
mov
sbb
test
hlt
push
shlb
movsb
leave
in
fbld
push
jns
jae
xor
lods
push
pusha
out
push
outsb
fldl
clc
jae
outsl
into
push
stos
add
mov
outsl
hlt
pop
cwtl
jg
sub
mov
mov
push
xchg
cli
fistl
inc
sbb
inc
mov
repz
dec
jecxz
adc
enter
pop
sbb
mov
cmp
dec
sub
and
add
and
jle
lret
xorb
pop
cmc
push
push
stos
dec
adc
sub
movsl
pop
repz
pusha
jbe
pop
and
rcrb
loope
outsl
cmpsb
cmc
or
ja
mov
rcrb
int
inc
mov
rcr
xor
in
out
dec
outsl
push
dec
jmp
pop
dec
cmpsb
add
inc
pusha
jnp
or
fs
xchg
jno
lods
sahf
lret
sti
mov
enter
loope
fsts
lahf
and
call
addr16
arpl
inc
call
cli
imul
xchg
repnz
sbb
fs
pushf
push
inc
cwtl
or
dec
inc
stos
lahf
or
scas
frstor
xchg
inc
mov
and
pop
add
in
inc
dec
sub
cmpsl
subb
pushf
mov
cmp
fdivp
test
adc
addr16
cmp
push
out
enter
mov
aad
call
sahf
jnp
add
negl
sub
shlb
mov
test
fadds
jecxz
in
into
fcmovb
mov
or
cmpl
cmc
ja
rolb
clc
adc
stos
mov
mov
insb
push
fists
add
js
jbe
push
add
and
iret
push
insb
jge
out
cld
scas
sahf
repz
inc
ja
pusha
scas
push
shrl
dec
clc
or
outsb
mov
daa
js
mov
insl
xchg
mov
insb
add
rolb
sub
stos
push
xchg
pop
mov
adc
inc
jmp
clc
adc
sub
xchg
insl
dec
rcr
ss
insl
aad
or
xor
sub
mov
js
sti
adc
shl
xchg
cmp
out
fidivl
nop
cmp
mov
loopne
inc
pop
pop
dec
pop
test
pop
idivb
frstor
pusha
ss
mov
mov
mov
adc
mov
jmp
cli
inc
hlt
and
arpl
pop
repz
adc
sahf
mov
xchg
sbb
pop
out
push
test
jge
mov
out
jle
aaa
lcall
paddd
stos
push
sbb
mov
push
stos
dec
dec
jne
ror
pop
sub
adc
pop
inc
dec
push
push
leave
push
cmpsb
cmp
call
cmp
dec
and
dec
cmp
mov
rcr
mov
xor
fsts
adc
sub
scas
push
jb
insl
adc
iret
pusha
insl
orb
mov
push
in
xchg
ror
ss
lock
mov
mov
pop
leave
pop
ja
inc
dec
int
cmpsb
jge
sbb
jge
sub
xchg
mov
push
mov
mov
ss
push
dec
cmp
xchg
jg
aam
shlb
stos
nop
std
fsubl
fnstcw
push
adc
call
fnsave
mov
adc
or
inc
outsl
aas
test
test
and
call
stos
inc
aam
scas
inc
pop
popl
aad
outsb
adc
and
adc
clc
insb
arpl
ss
das
insl
das
mov
rcrb
imul
cmpsb
jne
mov
lods
arpl
jecxz
jbe
fwait
insb
xchg
outsl
sar
pause
sbb
push
cmpsb
ret
lods
add
rorl
loop
aas
mov
pop
inc
imul
or
daa
sub
adc
mov
push
lods
lock
or
adc
mov
mov
push
loope,pt
dec
push
lea
jns
js
icebp
push
xlat
sarl
cwtl
scas
add
push
mov
cld
or
jbe
pop
push
xlat
cmpsl
cmpsb
out
out
icebp
sbb
arpl
scas
sbb
push
addr16
xchg
mov
xchg
ret
popf
xor
rorl
shrb
mov
push
test
cmp
inc
dec
out
hlt
fnstenv
push
mov
mov
idivl
or
sbb
jo
add
in
and
nop
icebp
mov
pop
lods
jmp
sahf
inc
inc
jecxz
andb
add
shll
inc
shl
jle
cmpl
out
sbb
and
fdivrl
cmp
test
adc
jmp
rorb
adcl
push
jge
out
sub
iret
shl
cmp
mov
add
xor
pop
push
mov
stos
and
adc
mov
sub
xchg
sub
insb
fists
and
lcall
mov
dec
mov
pop
mov
mov
dec
cmp
push
mov
push
test
sbb
aas
shlb
mov
pusha
enter
ss
lret
in
das
inc
or
and
sbb
in
test
add
test
pop
lock
js
cmp
incb
ja
dec
cwtl
jae
es
push
add
std
mov
iret
pusha
bound
call
pushf
or
cld
outsl
mov
cmpsb
les
shrl
fists
push
add
sbb
int
cld
stos
xchg
negb
sub
jb
add
lods
lret
lock
push
fdivrl
es
outsb
mov
cmpw
insl
push
loop
xchg
inc
dec
push
mov
lds
addl
pop
insb
add
push
outsb
lds
mov
ljmp
sti
push
xchg
pop
js
and
mov
push
daa
mov
fsubp
and
sub
loop
pushf
xlat
aam
arpl
test
push
mov
enter
add
add
mov
jno
mov
movsb
jle
inc
lods
jbe
mov
jae
test
in
jp
lret
add
push
cmp
stc
and
jecxz
sub
add
adcb
sub
sub
in
jnp
xor
cmpsb
adc
mov
ret
icebp
mov
int3
popf
xor
jge
and
mov
faddp
insb
sub
clc
cmp
sbb
add
sub
icebp
stos
xlat
push
mov
and
outsb
shl
cli
cmpsb
popf
jg
pusha
cmpb
fdivrs
mov
sbb
adc
cmp
inc
mov
adc
sbb
sub
mov
push
inc
shll
enter
add
and
imul
add
adc
inc
and
fstl
jae
pmulhw
clc
jae
mov
inc
xor
inc
sbb
jmp
add
jmp
leave
dec
dec
sub
mov
addb
and
andb
jg
push
lret
mov
jecxz
bound
notb
ror
mov
es
idiv
xchg
into
popa
fstpl
dec
sbb
push
push
jl
dec
ljmp
inc
pop
lahf
pop
sub
push
test
in
test
out
lahf
dec
mov
jmp
mov
push
xchg
mov
fldln2
mull
aam
icebp
sub
cmp
push
and
pop
fdivl
jmp
rorb
xorb
and
mov
dec
lock
push
rcrl
aaa
and
je
cmp
mov
pop
mov
jecxz
jnp
test
in
pushf
jecxz
das
addr16
push
pop
sbb
jae
xchg
pop
mov
out
inc
inc
xchg
into
gs
adc
or
pop
lds
lea
xor
outsb
das
filds
clc
sbbl
or
dec
xor
mov
aam
sub
jb
in
nop
jmp
mov
xor
sbb
mov
push
mov
gs
and
test
inc
add
xchg
mov
push
std
repnz
test
addl
das
loop
add
pop
aad
icebp
movb
ret
pop
jge
inc
out
mov
push
lds
lret
dec
dec
or
dec
mov
adc
sahf
jne
cwtl
sti
push
add
enter
icebp
pop
dec
jecxz
testb
lahf
sub
pop
add
sub
insb
sub
fcmove
mov
aaa
mov
fadd
inc
mov
xchg
imul
es
insl
dec
jne
or
xlat
repnz
push
cli
and
dec
fucom
mov
sub
add
test
pop
jo
mov
adc
inc
insl
call
inc
clc
cwtl
xor
sub
outsl
daa
lcall
or
mov
aas
sbb
jmp
mov
test
leave
xor
xchg
ret
outsl
mov
cmpsl
out
popf
inc
notl
dec
mov
lret
pop
ret
push
and
mov
stc
test
adc
mov
inc
arpl
or
pop
cmp
jb
sbb
out
sbb
jbe
add
add
pop
loop
pop
loopne
add
push
push
jbe
test
and
lcall
push
pop
mov
dec
mov
and
shrl
leave
pop
cmc
in
scas
pusha
jp
dec
dec
mov
lcall
xchg
cmp
js
mov
sti
xchg
mov
sbb
add
pop
xor
pop
sub
dec
popa
jnp
sbb
adc
sbbl
scas
pop
ret
pop
stos
jge
adc
enter
sbb
in
or
sub
or
mov
cmp
xchg
icebp
push
out
and
pop
mulb
enter
add
cmp
adc
inc
jae
xchg
out
ljmp
movl
cs
fidivs
lret
push
sbb
xor
jns
xchg
sub
mov
lea
or
es
add
adc
sub
fidivl
imul
ss
mov
dec
mov
loop
shll
jns
repz
jg
dec
inc
shll
jg
pop
mov
or
xor
or
push
pop
mov
arpl
and
in
ffree
dec
sub
icebp
mov
dec
push
js
jae
cmc
adc
mov
or
cmpsl
stos
xchg
loopne
bound
std
xchg
fcompl
xchg
sahf
lcall
rorb
inc
std
stc
imul
insl
arpl
mov
dec
or
enter
and
dec
loopne
popf
sub
adcb
mov
cmp
adc
mov
mov
clc
or
cmp
dec
mov
ds
in
dec
cmp
pop
adcb
push
popa
popa
cli
xchg
add
loope
in
add
cmp
imul
jnp
jmp
jle
add
scas
movsl
cli
stos
jo
mov
cmpb
or
xchg
mov
inc
xchg
jae
cltd
dec
arpl
in
mov
popf
movsl
sbb
mov
push
out
dec
dec
repnz
and
test
ja
pushf
pop
mov
mov
sbb
inc
test
test
scas
in
xlat
clc
js
cmpsl
mov
outsb
xchg
shll
fisubrl
adcb
cmpsb
lcall
xchg
or
sbb
pop
pop
mov
adc
mov
into
arpl
jmp
fsubrl
mov
and
jle
in
loop
popa
enter
cltd
hlt
dec
int3
fimuls
push
inc
pop
lcall
arpl
xchg
js
mov
popf
add
cmp
out
pop
pop
mov
clc
in
mov
dec
mov
mov
push
aas
es
aaa
mov
test
mov
xchg
lods
sub
fs
mov
xor
cmp
xor
xlat
ljmp
stos
jns
ss
lods
cmp
cmc
fisubs
das
insl
sar
pop
nop
pop
enter
cmp
gs
in
imul
fnstcw
ds
jno
and
add
xchg
movsl
mov
rclb
push
cmc
mov
pop
push
sahf
mov
fldenv
sahf
mov
sbb
sbbb
adc
cli
jl
fimull
cs
iret
rcl
js
dec
jbe
sub
lds
andl
insl
pusha
or
pop
xor
bound
dec
jecxz
std
fildl
push
mov
gs
incl
add
fistl
subb
inc
out
dec
das
push
int3
lcall
xor
aam
xlat
add
jmp
push
adc
enter
cmp
and
daa
fsts
push
addr16
sub
orl
mov
shlb
arpl
sarl
aas
dec
jbe
les
sub
adc
mov
or
mov
shrl
movsb
insl
lds
xchg
jno
xlat
and
inc
sub
cmpsb
out
flds
inc
clc
jnp
rcr
or
or
repnz
sbb
call
mov
or
adc
inc
out
in
jp
mov
ss
inc
push
sti
mov
movsb
mov
ret
or
decl
mov
mov
repnz
cmpsb
popa
jg
jle
push
adc
or
dec
push
mov
mov
inc
in
ret
adc
sbb
out
popa
nop
mov
add
jecxz
dec
mov
cvtdq2ps
adc
pusha
sbb
push
lahf
add
lds
daa
inc
push
cwtl
rol
dec
xchg
mov
dec
pop
or
cld
pop
inc
inc
add
imul
xor
adc
pushf
lods
jo
arpl
ja
mov
xor
ja
push
cmp
or
loopne
xor
iret
arpl
push
mov
push
fnsave
pop
lea
pop
rorl
and
dec
ja
xchg
add
daa
pop
jecxz
std
cmp
sbb
daa
adc
mov
stc
movsb
frstor
mov
test
incb
mov
sarb
shrl
ret
outsb
loopne
xchg
movsb
cmc
or
arpl
push
add
into
pusha
and
mov
pop
mov
or
aas
out
pop
pop
add
push
pusha
fidivrl
sbb
mov
ljmp
jnp
daa
pushf
pop
xor
pop
mov
mov
ficoms
add
pop
mov
bound
leave
push
dec
shrl
imull
test
in
adc
aam
movl
call
iret
and
sub
pusha
cmp
loope
leave
dec
lret
push
adcb
fisubl
lea
jg
outsl
jbe
stos
inc
fiadds
dec
pop
mov
mov
pop
mov
xchg
and
out
ret
cmp
jecxz
jne
mov
icebp
cmp
xor
pop
push
rsqrtps
cmpsl
test
or
cltd
push
inc
inc
inc
arpl
lret
xchg
push
sbb
or
jg
aaa
jecxz
jbe
mov
push
outsl
adc
scas
cld
and
pcmpeqd
stos
inc
subb
dec
mov
js
xchg
ds
addr16
jle
sbb
dec
push
std
sbb
std
repnz
fnstcw
adc
mov
add
repz
rol
aas
shlb
insl
inc
fisubs
push
inc
notl
call
loope
sar
jne
xor
or
incl
cmpsb
pop
int
inc
popf
repz
int
lods
cmp
adcl
mov
in
scas
sbbb
cmp
or
lea
xchg
js
arpl
test
sti
lret
ljmp
and
xchg
cltd
mov
sti
cmp
stos
mov
daa
sub
sti
and
pop
push
arpl
sub
in
test
xchg
xchg
xchg
xor
sahf
outsb
jl
ds
pop
inc
mov
ret
in
xchg
or
sub
push
adc
or
add
pop
jnp
shl
xor
and
push
mov
or
decl
push
or
jecxz
push
imul
mov
push
insb
into
mov
pusha
xor
popf
pusha
cmpsl
dec
aam
and
mov
insb
inc
and
mov
daa
xchg
mov
cmp
iret
add
inc
leave
in
mov
xor
test
cmp
jmp
dec
out
dec
xor
in
in
xor
imul
inc
pusha
lcall
mov
add
test
lds
std
subb
pop
mov
arpl
js
push
cmp
mov
icebp
pop
mov
xchg
cmp
cwtl
outsl
bound
add
fdivrs
mov
dec
xchg
sbb
pop
sbb
loopne
cltd
cmp
fidivl
lods
in
aaa
pop
mov
stos
inc
in
fidivrl
jmp
or
sahf
or
inc
pop
lds
and
xchg
pop
insb
leave
xlat
cmp
xchg
add
mov
or
pop
cmpsl
adc
in
and
xchg
std
subl
out
xor
mov
icebp
cmp
xor
mov
in
pcmpgtd
test
mov
stc
in
rcl
pusha
inc
shlb
jnp
test
scas
inc
sub
push
or
adc
cwtl
push
ss
int3
pop
rclb
loope
enter
pop
divl
jmp
insl
sbb
adc
pop
and
mov
clc
ret
ret
test
pop
out
push
sub
das
sbb
mov
out
iret
in
and
push
or
adc
sbb
out
cld
pop
pop
ljmp
in
mov
mov
outsl
test
sub
mov
jbe
cmpsb
int3
add
mov
addr16
shlb
ficomps
xor
mov
out
outsl
lock
mov
insb
sub
in
pop
inc
call
addr16
and
daa
shlb
inc
movsb
xchg
sub
loop
mov
addr16
fildll
inc
scas
xchg
push
inc
add
bound
insb
sub
mov
mov
clc
adc
loope
dec
jbe
dec
fmulp
jecxz
adc
andl
test
jecxz
divb
frstor
jg
flds
insl
std
fucomi
orl
xor
dec
add
dec
aam
sbb
or
mov
add
add
add
push
xor
inc
push
rolb
popf
add
pop
sub
inc
dec
mov
imul
lahf
lret
xchg
adc
push
push
out
stc
and
popf
dec
add
popf
push
sbb
ficoms
mov
jge
fidivrl
out
xchg
sahf
mov
test
mov
xor
dec
and
sahf
cmp
pop
cmp
sbb
mov
test
outsb
movsl
js
js
or
jecxz
nop
stos
es
popf
push
mov
xchg
sub
aad
xor
out
int3
pop
pop
inc
sti
pop
or
jle
jbe
test
in
out
mov
adc
daa
shll
mov
add
ret
fisttps
lret
sbb
das
cltd
cmp
pinsrw
addl
pop
mov
in
push
mov
adc
push
shrl
test
xor
add
xor
xchg
dec
adc
scas
cmc
adc
mulb
mov
in
xor
and
pop
scas
jae
and
lea
push
fidivrl
add
dec
add
rolb
xor
xor
jge
mov
sti
push
rorl
mov
adc
js
movsb
arpl
lea
out
les
push
adc
jno
pop
xor
and
pop
pop
pop
out
ss
fisttpll
and
push
push
and
dec
sub
dec
add
pop
mov
add
std
xchg
pusha
in
jns
orb
scas
in
loop
mov
popf
push
cli
sbb
es
xchg
jl
xor
dec
out
das
xchg
adc
nop
add
in
cmc
mov
ljmp
sbb
pop
and
in
fsts
push
push
push
mov
xchg
mov
mov
mov
lds
inc
sbb
inc
push
cmp
mov
lret
and
addr16
push
popf
jo
mov
outsb
loope
std
cltd
push
mov
or
das
mov
sbb
sahf
clc
dec
add
mov
jg
pop
popa
dec
inc
lock
outsl
ret
fcoms
out
ficoml
adcl
add
xor
add
testl
cs
inc
cld
lcall
jne
pop
loopne
push
enter
bound
scas
mov
jge
imul
mov
mov
xor
push
sahf
cltd
fs
dec
dec
xchg
jmp
imul
mov
xchg
ja
add
mov
jmp
sub
or
cmp
test
scas
clc
imul
jb
outsl
nop
sub
mov
xor
dec
cmp
aas
rcr
sbb
lret
ror
inc
int3
mov
jle
ljmp
movsl
insl
pop
lret
popa
push
addr16
in
mov
shl
shrl
aad
xchg
push
sbb
cmpsl
mov
pop
cwtl
or
std
inc
add
xchg
je
arpl
dec
cmpsb
jle
fistpll
rcrb
cmp
stc
pop
call
xchg
ret
pop
push
lea
sub
fxch
mov
cmp
iret
loope
bswap
fmulp
shlb
cmp
icebp
jg
pop
pop
add
scas
jle
pop
les
bound
outsb
adc
jmp
xlat
sbbl
jg
pop
xchg
mov
in
adc
lock
mov
cld
inc
outsb
out
iret
aas
pop
xor
pop
subb
xchg
push
movsl
out
in
or
xor
fiaddl
inc
xlat
xor
push
cmc
sub
repz
outsl
pop
jnp
jecxz
pop
mov
pusha
fmul
push
xor
and
ds
fsts
xchg
add
aas
fs
fldt
les
jo
and
mov
sub
xchg
sbb
push
or
add
push
or
sahf
psubusw
repnz
stos
jmp
fidivl
sub
repz
dec
call
sarb
nop
jb
imul
outsb
add
addb
sub
rorb
dec
mov
aad
jmp
fdivrs
mov
add
xor
shrb
out
jo
in
pop
out
pop
inc
mov
in
mov
adc
test
loop
in
int
pop
cmp
add
loope
push
jne
mov
add
xor
dec
lods
push
mov
stc
shll
rcl
mov
arpl
push
test
fidivrl
int3
testb
mov
add
shlb
xor
fstp
mov
push
bound
xorb
lret
out
xor
lcall
push
pop
inc
mov
mov
aad
sbbb
inc
mov
sbb
mov
pop
mov
rcll
dec
sbb
mov
xor
stc
push
dec
ret
push
sbbb
sub
mov
adc
sub
imul
cld
or
xchg
stos
scas
mov
push
ret
pop
push
mov
je
jnp
mov
lea
pop
adcb
dec
mov
imul
dec
fs
lahf
or
pop
jmp
jl
sahf
cmp
and
push
mov
test
mov
stos
aaa
jbe
jo
fistl
sub
in
jl
push
sub
adc
and
sbbl
in
repnz
arpl
dec
addr16
jg
ds
mov
cli
or
mov
push
shr
mov
push
jmp
or
rol
sub
cmpsl
sub
xlat
or
int3
arpl
dec
push
mov
mov
jno
lcall
mul
notl
sbb
jp
movsl
stos
sbb
je
lock
shll
leave
xor
dec
cmp
shrl
add
jmp
push
sbb
das
sti
jecxz
xlat
mov
out
faddp
push
mov
mov
sub
sti
pop
mov
push
push
push
xchg
addr16
mov
shlb
lods
rclb
xor
lcall
fidivl
cli
subl
pop
jnp
mov
stc
and
xchg
mov
cltd
mov
pop
ljmp
push
cli
pop
movsb
mov
sbb
mov
inc
add
iret
loop
fldcw
repnz
inc
call
xlat
dec
xlat
cmp
push
sbb
mov
jno
push
daa
xchg
jecxz
inc
dec
scas
aas
stc
jo
sub
pop
pop
xor
jno
cmpsl
xorl
rep
lds
aaa
mov
push
in
ljmp
les
sarl
js
pop
adc
xor
outsb
add
popa
sbb
push
adc
fimuls
loop
push
sbb
xor
fcoms
aaa
cmp
jl
fs
xchg
dec
jg
dec
mov
daa
mov
xor
arpl
icebp
enter
movsb
pop
and
imul
out
xor
cld
test
cs
and
adc
lods
pop
inc
arpl
test
jg
cmc
out
push
lods
adc
xor
sti
adc
aam
cs
daa
mov
jb
lock
cmpsl
mov
add
fsubrs
je
xchg
push
push
lret
aaa
pusha
cmp
mov
sub
dec
call
and
test
fcomps
add
add
add
in
push
push
fmuls
sub
fldenv
shrl
cmpsl
clc
iret
push
fildll
sahf
push
cmc
cli
xchg
and
js
jns
imul
xor
fprem1
mov
out
add
lock
fnsave
adc
fistpll
xor
mov
mov
cmp
rol
ss
fcmovnb
cmpsl
mov
inc
repnz
pop
icebp
sub
xor
fwait
adc
lods
jp
iret
inc
lods
adc
lods
addr16
push
jecxz
sub
push
stos
scas
jmp
iret
mov
into
inc
or
jge
in
pushf
mov
movsb
adc
mov
je
mov
sar
jb
inc
xchg
cmp
int
outsl
roll
pop
fdivrs
add
sub
pusha
ljmp
and
sbb
stos
lahf
data16
sbb
mov
pop
xor
scas
jb
jmp
out
sbb
ds
mov
sub
jp
bound
nop
aaa
jae
cmp
jno
dec
xchg
mov
xor
into
dec
ja
sub
cmp
mov
ss
cmp
cwtl
xor
and
in
dec
testl
enter
push
push
fwait
push
lcall
mov
mov
cltd
cltd
push
imul
sbb
cmpsb
mov
adc
lods
cltd
lret
test
aas
arpl
std
or
cmp
mov
cmpsl
pusha
cmp
stc
push
cmp
jo
int
or
call
out
out
jae
sub
popa
divb
and
pop
jge
sahf
imul
repz
call
cmp
popf
sub
xchg
lds
test
imul
inc
scas
cmp
xchg
testl
les
sub
push
sbb
outsb
add
adc
cmp
aam
mov
or
xor
pop
ds
test
jno
repz
and
int
popa
stc
popa
or
in
or
jp
mov
nop
xchg
sub
adcl
mov
aam
adc
inc
in
mov
sbb
aaa
dec
xor
inc
loopw
adc
jns
xchg
addr16
ljmp
push
insb
xor
push
adc
dec
repnz
or
stos
fldenv
out
inc
fstpt
add
mov
shlb
add
scas
je
cmp
jae
ret
fidivl
js
xor
inc
pop
ret
jecxz
adc
out
sub
pop
aaa
jle
inc
loopne
sub
and
jbe
pop
inc
in
ret
sti
test
out
ljmp
jmp
pusha
adc
roll
fists
insl
cmpsl
out
add
mov
push
rcrb
jnp
lret
adc
pop
imul
fbld
xor
adc
push
push
es
jnp
jge
fldenv
sbb
jae
aam
pop
cmpsb
or
add
cltd
std
inc
in
imul
call
pop
sahf
mov
or
ss
mov
jg
jecxz
pop
icebp
iret
mov
jne
mov
out
cmpsl
imul
jns
xorl
pop
mov
clc
es
mov
dec
mov
test
sbbb
int
jae
popa
jae
inc
cwtl
push
fldt
push
lahf
adcb
push
sbb
loop
into
xchg
jnp
dec
gs
xchg
xor
jp
add
inc
jnp
mov
mov
xchg
add
loop
aaa
cmp
mov
and
sub
or
or
push
sbb
lahf
and
xchg
cltd
xor
or
popf
mov
push
sbb
outsb
jnp
pop
loope
lods
data16
popf
jno
fwait
xchg
add
mov
jmp
sbb
lcall
insl
rclb
adc
cmc
jge
add
mov
inc
adc
lock
mov
sbb
loope
mov
xor
xor
pop
rclb
mov
pop
test
and
mov
lods
aaa
mov
enter
pcmpgtb
fisubrs
mov
cmp
fsubr
push
pop
aam
dec
outsl
jo
dec
lods
stc
test
sbb
daa
dec
xchg
mov
mov
cli
push
cmp
adc
pop
cmp
imul
js
bound
mov
pushf
sbb
mov
lret
fwait
test
test
rcll
sarb
fisubrl
mov
movsl
out
cmc
movd
pop
ds
aad
shl
push
pop
fs
xchg
jle
mov
mov
shlb
dec
hlt
shrb
jle
repnz
daa
add
test
and
xchg
inc
repz
add
dec
imul
cmc
rcl
cltd
push
lret
hlt
ret
jne
xchg
sub
push
pop
in
imul
xchg
inc
cltd
and
mov
out
sbb
rcrl
sbb
fistpl
insl
cmp
jg
push
inc
jno
pop
pop
jb
cmp
sub
aam
lret
iret
adc
jb
out
shl
inc
xor
sbbl
and
pop
repnz
mov
aam
push
or
fdivrl
mov
push
inc
addr16
je
mov
adc
pop
adc
inc
mov
test
and
adc
subl
ss
outsl
cld
jecxz
and
sub
stc
inc
add
jp
sahf
les
lea
xor
or
adc
add
out
inc
cwtl
lods
ret
outsb
insb
xor
jbe
inc
add
mov
das
mov
call
cli
jg
decl
pop
cmpsb
add
imul
cmp
movl
push
jmp
jns
jo
mov
hlt
cwtl
cmpl
cs
pop
xchg
push
jmp
outsl
ja
in
das
std
rcll
mov
mov
cmp
cmp
lcall
and
inc
pop
mov
fnstsw
mov
test
or
hlt
fwait
or
shll
out
outsl
mov
ficomps
push
ss
xlat
cmpsl
push
xor
fcomps
rep
rorb
adc
pop
sub
pusha
movsb
pushf
cli
fsts
inc
por
cmpl
adcl
test
sahf
push
xor
enter
scas
pop
and
shlb
mov
nop
xchg
pop
lret
add
pop
scas
sbbl
rcr
shl
add
int3
push
sbb
enter
mov
jge
fsubrs
test
clc
push
call
push
fimuls
dec
dec
cmp
adc
dec
aas
lds
aad
sub
and
xor
ret
and
leave
test
mov
add
shll
inc
lods
add
adc
int
mov
inc
jne
jbe
in
xchg
push
sar
test
jg
rorl
xchg
jmp
repnz
repz
gs
out
out
test
les
test
mov
add
pop
lods
jnp
test
popf
lods
mov
ficomps
mov
hlt
mov
fidivrl
jo
pop
mov
lcall
add
mov
add
mov
push
add
es
adc
push
mov
xchg
daa
sarb
pcmpgtw
xchg
adc
fbstp
jp
adc
adc
add
notl
cmpsl
xchg
addb
mov
arpl
add
xchg
das
xchg
sub
idivb
and
mov
jb
call
cmp
adcb
fbstp
push
jb
mov
push
mov
aad
in
add
jno
mov
cmpb
cmp
xor
xchg
or
cwtl
aas
pop
int
int3
fistpl
outsl
push
addr16
pusha
xchg
cmp
shlb
dec
jmp
push
ljmp
inc
mov
push
aaa
leave
ss
js
mov
sbb
inc
push
jmp
mov
jmp
stos
fwait
sub
lret
adc
mov
jmp
sbb
dec
xchg
and
dec
cmp
jnp
jne
jle
shl
ret
js
inc
outsl
mov
ret
add
mov
add
dec
fdivl
pop
push
add
push
pop
cmpl
xor
dec
mov
mov
lret
xlat
xchg
out
shrl
cwtl
mov
mov
lock
shrl
inc
ljmp
mov
inc
xchg
ficomps
mov
xchg
decl
insl
adc
arpl
sti
mov
inc
and
iret
adc
enter
cld
inc
imul
fdivl
sub
adc
xchg
push
gs
jo
popa
sbb
xchg
outsl
mov
scas
cmpsl
stc
lods
movsl
sub
pop
repz
hlt
aas
imul
push
call
mov
loope
shll
pop
ljmp
jle
or
push
int3
sub
shrl
dec
pop
sub
push
mov
sbb
cmp
and
jnp
dec
rorb
jge
xchg
aad
push
mov
pop
je
add
and
jge
add
ret
test
stc
dec
mov
adc
add
addr16
fmulp
pop
cmpb
pop
out
scas
dec
or
mov
sarl
je
dec
into
call
xchg
pop
lock
xchg
adc
fs
incl
lret
in
insb
insb
fcompl
loop
mov
jno
mov
dec
push
mov
dec
imul
inc
les
insb
inc
loopne
div
mov
mov
jp
mov
orb
shlb
fistl
or
jns
hlt
cmpsl
jne
inc
sbb
int
mov
or
dec
jne
outsl
notb
dec
in
push
cli
pusha
jg
pop
call
daa
xor
clc
dec
mov
or
lods
pop
push
mov
subl
pop
cmpsl
xchg
push
ljmp
mov
sub
icebp
pop
mov
pop
scas
pop
push
push
fdivr
xor
call
out
out
cmc
mov
adc
pop
dec
and
loope
fcoms
fldl
mov
push
sarl
scas
adc
cwtl
ret
cmp
push
and
jo
test
mov
push
xchg
mov
loop
rol
pop
or
in
mov
cmpsl
ds
in
or
ss
dec
jecxz
pop
jne
sub
pop
push
jecxz
lock
mov
leave
sbb
and
sbb
dec
fistps
js
mov
lock
enter
dec
or
test
jno
jl
sti
in
shr
adc
scas
inc
lods
adc
push
mov
sar
xchg
daa
andnps
cmp
push
out
xchg
and
push
movsl
add
imul
inc
mov
push
je
mov
movsb
adc
pop
ljmp
test
add
mov
aad
imul
gs
pop
shlb
pusha
inc
adc
cli
xor
xchg
lcall
inc
xlat
sub
fldcw
push
cli
stc
or
fisubrl
cwtl
shlb
movl
jge
jecxz
imul
sbb
dec
xchg
imul
mov
bound
xchg
out
imul
lea
add
jl
sub
or
repnz
pop
mov
pushf
jmp
leave
pusha
orl
out
pop
adc
int3
sub
dec
push
sbb
fistl
jl
sahf
mov
xor
mov
xlat
ficoml
mov
cltd
xor
or
adc
cmp
or
or
sarl
dec
push
mov
mov
inc
lock
xchg
fs
jno
mov
in
test
lahf
sub
or
aaa
add
scas
orl
mov
dec
jecxz
pop
pop
cmp
sub
push
sub
lcall
cmp
jp
sub
insl
cwtl
jbe
add
roll
sub
movsb
sub
xchg
inc
fcomps
in
insl
in
pop
add
fstp
inc
pop
fwait
incb
lret
sub
push
push
xor
push
jns
push
lods
fiadds
js
or
mov
push
int3
arpl
mov
pop
loope
test
mov
movsb
or
out
sub
lods
mov
push
orl
ret
insb
adc
ja
fdivrl
inc
cwtl
gs
inc
andb
sub
dec
push
mov
xor
mov
push
push
movsl
fbld
ret
mov
shlb
pop
dec
pop
lock
xchg
int3
shlb
out
dec
add
sub
pop
mov
mov
popf
repz
lret
cmp
xor
jmp
add
mov
pop
sbbb
lea
js
push
push
pop
mov
xor
and
and
adc
xchg
cwtl
lods
les
cltd
test
test
je
cmp
jp
arpl
lods
pushf
push
or
or
imul
ficomps
xchg
or
sbb
loope
inc
outsb
dec
loope
jae
in
loop
inc
inc
fcmovnu
je
test
xor
sbb
inc
dec
sarb
int
icebp
jl
outsl
scas
nop
imul
testb
dec
outsb
sbb
pop
outsl
roll
sub
sub
mov
jge
mov
insl
jmp
rolb
xor
or
mov
and
or
cmpsl
jnp
add
jno
je
jl
lahf
stos
push
icebp
lock
aas
mov
fbstp
ficoms
sahf
dec
not
test
sbb
add
cmp
jp,pn
push
movsl
popa
cmp
lods
ljmp
inc
fisttpl
stos
inc
xor
mov
add
dec
fstl
pushf
xor
das
cs
and
data16
pop
shll
push
jne
xchg
imul
mov
mov
stos
cmpsl
inc
and
shll
cltd
into
jo
jl
lock
stos
mov
sub
in
cmp
add
and
cltd
or
adc
jp
std
in
or
std
or
call
xor
mov
fcmove
mov
cli
cmp
adc
sbb
mov
fcmovnbe
mov
pop
cld
hlt
mov
push
sub
lret
mov
add
nop
adc
adc
jae
add
inc
into
mov
and
and
addr16
imul
rcll
aaa
inc
xor
mov
cmpl
testb
mov
inc
in
insl
jns
push
cmp
clc
dec
mov
ret
cmp
testb
cmp
add
aam
mov
pop
xorb
xchg
inc
pushf
jg,pn
pusha
cld
push
insl
push
aaa
mov
movb
mov
in
aaa
pop
std
xchg
sub
mov
xorb
sub
fstl
xchg
imul
mull
mov
jno
push
jb
ljmp
orl
inc
adc
pop
ret
arpl
jns
cs
lods
repz
sub
add
pop
xchg
push
xchg
dec
ja
jno
arpl
jns
add
push
xor
mov
adc
sub
mov
ljmp
xchg
cmpsl
add
addr16
inc
or
inc
cmpsb
lock
xor
pop
push
push
pop
cmp
xor
mov
pop
sub
cmpsl
pop
sub
sti
aam
lds
inc
dec
pop
mov
pop
mov
xchg
notl
repnz
lock
pop
cmc
dec
std
pop
push
mov
jb
jmp
dec
test
push
test
scas
push
adc
cs
shll
add
inc
sti
mov
ret
hlt
icebp
add
movsl
fistpl
cs
jo
and
mov
adc
sub
scas
sbb
mov
aad
mov
jns
xchg
imul
mov
scas
test
xchg
dec
loopne
push
stos
dec
push
fisttpll
and
out
scas
xchg
cmpl
scas
push
dec
int
sub
sahf
xor
cmp
popa
cltd
sti
push
or
ror
mov
jo
pop
data16
iret
loop
push
lods
mov
insl
cmp
iret
call
or
ljmp
jno
push
fsubr
test
stos
or
lods
add
inc
adc
adc
arpl
xchg
xchg
adc
les
cld
lahf
add
in
aas
mov
outsb
push
xor
push
ret
push
repnz
aam
pop
and
mov
sub
jbe
clc
mov
mov
cli
sub
xor
lcall
sub
ret
xchg
push
jmp
jle
cmp
or
cmp
cmpb
adc
dec
imul
aam
cmpsb
sub
jno
nop
js
inc
mov
dec
call
mov
xlat
mov
ficompl
gs
mov
ret
inc
mov
sbb
adc
pop
ret
mov
push
jb
mov
push
dec
jg
or
push
mov
sbbb
push
in
or
das
nop
das
cmp
pop
add
lods
cmp
dec
mov
mov
inc
xor
cmpsl
mov
bound
inc
push
or
or
mov
lock
or
mov
fmuls
sub
leave
push
add
jmp
movsl
inc
push
jmp
stos
stc
popf
sub
jo
or
mov
jno
pop
jns
imul
mov
les
mov
pop
dec
add
pop
fst
sub
shrb
jmp
xor
jbe
sbb
mov
dec
fildll
divl
xchg
shrb
dec
fwait
jbe
push
jnp
stc
jo
sahf
xor
pop
jecxz
inc
ljmp
mov
dec
test
popa
cwtl
mov
push
jno
lock
mov
xchg
testb
or
jb
push
shl
bound
xor
aad
mov
jmp
and
pop
sbb
outsb
pop
mov
aad
test
pop
outsb
mov
test
xchg
mov
fldcw
iret
andb
cli
bound
xor
pop
pop
add
or
insb
adc
or
mov
lret
enter
and
push
jbe
inc
push
sbb
pusha
mov
xor
das
adc
sbb
gs
arpl
fldl
sbb
cmp
mov
push
repnz
jmp
leave
in
inc
pop
adc
adc
mov
repz
mov
xchg
jo
cltd
fs
pop
pop
mov
ljmp
sub
out
pop
xor
push
lcall
jne
jl
xchg
pusha
cmc
push
adc
and
fsubr
mov
std
xchg
lret
sub
divb
sti
stc
into
dec
mov
sahf
psadbw
pop
div
imul
nop
lods
arpl
add
sub
sub
jecxz
pop
jno
push
jmp
pop
add
out
popa
cwtl
test
int3
sbb
or
cmpsl
sbb
xchg
inc
inc
sbb
je
lahf
cmp
aaa
add
mov
jecxz
pop
pop
xrelease
ja
xchg
outsl
into
push
pushf
divl
fildl
mov
push
jbe
lcall
mov
insl
inc
and
cmp
daa
enter
cmpsl
aas
ficoml
sbb
ss
sbb
adc
xor
cmpb
das
ljmp
push
in
fisubrs
jae
ss
lcall
xor
pusha
pusha
adc
xor
in
add
xchg
mov
xchg
xchg
cmp
push
xor
int
jo
sub
xchg
cs
in
lcall
jl
cmpsl
add
push
cmc
mov
stc
lods
and
xchg
in
clc
inc
pop
xchg
ss
jns
fs
cmp
jmp
jnp
sbb
adc
es
mov
out
insl
push
add
mov
cmc
adc
int3
movsl
cmp
mov
mov
aas
ljmp
mov
cli
push
imul
lea
icebp
mov
out
stos
ds
test
cmp
cmp
les
nop
outsl
add
enter
jmp
cltd
sbb
cwtl
xlat
mov
dec
cmp
pop
imul
pop
add
or
push
decl
xchg
cmp
cmp
and
dec
add
jno
push
js
cmpl
gs
cli
ja
std
inc
and
xchg
push
jge
testl
lock
push
jmp
sbb
add
push
mov
jns
pushf
outsl
cmp
dec
shl
imul
xchg
int
xor
es
push
ds
ja
jno
cmp
dec
aad
movb
cmc
mov
or
pusha
cmc
mov
xor
dec
cmp
cld
dec
sbb
push
push
repnz
test
lea
lret
xchg
dec
ror
push
shlb
xor
jmp
mov
mov
fsubrl
test
jg
iret
mov
repz
aaa
movsl
mov
fistl
sti
xchg
dec
pop
cmp
adc
cmp
test
dec
adcb
mov
mov
clc
jmp
lds
jne
popa
xor
lret
fs
out
rcll
pop
add
stos
sub
push
fldl
inc
cwtl
jb
cli
mov
test
lahf
dec
bnd
sbb
mov
cmpsb
out
fwait
push
cltd
int3
xchg
in
adc
je
jnp
mov
test
pop
test
dec
inc
std
incl
setnp
arpl
insl
iret
mov
jb
and
pop
mov
sahf
inc
adc
std
mov
push
call
int3
add
repz
ss
aad
lret
sbb
int
sti
ja
insb
fbld
and
push
inc
into
jl
ss
jecxz
inc
ret
hlt
je
shll
lahf
fnstenv
inc
cld
notl
mov
call
fucom
sbb
gs
push
fwait
test
xor
sub
lock
outsb
mov
push
xor
xor
cmp
cmp
mov
xor
jl
cmpsb
lods
stos
pop
addps
les
cmp
sbb
out
dec
mov
pop
ss
cmp
add
mov
dec
aam
cmpsb
cmp
sub
sub
es
pop
xor
mov
lods
mov
and
stos
ja
fstl
xchg
pusha
xchg
int
test
dec
mov
addr16
lock
mov
aad
inc
sbb
mov
lea
adc
out
daa
mov
add
sbbl
loope
adc
mov
pop
test
jmp
insl
add
iret
push
pop
jbe
jbe
stc
push
add
adc
dec
andl
push
rclb
inc
xchg
loop
rol
or
pusha
repz
push
flds
inc
push
cs
mov
clc
dec
fdivp
imull
pop
call
mov
adc
or
mov
jmp
icebp
testl
sbb
insb
dec
mov
mov
pop
cli
cmp
gs
ret
sub
cmp
add
adc
in
inc
bt
inc
jle
mov
xchg
rolb
cmp
out
jnp
icebp
stos
xlat
dec
das
mov
jns
and
sub
cld
or
out
push
sbb
fsubr
or
cmp
call
mov
jns
sub
jecxz
nop
inc
and
xor
test
test
mov
xchg
icebp
add
pop
test
rol
inc
data16
pop
adc
cmp
pop
lcall
testb
dec
xchg
clc
pop
scas
inc
jg
fs
loopne
mov
sub
loope
xchg
in
xchg
lds
subb
adc
sbb
mov
in
cmp
hlt
lods
es
mov
rol
popf
push
loope
jae
sub
adc
fidivs
and
push
popf
rcrb
sbbb
push
mov
mov
mov
cmp
cmp
imul
rcrb
movb
rclb
mov
leave
popa
mov
pop
call
xor
shrl
inc
inc
jecxz
add
scas
add
lods
add
in
mov
rcrb
arpl
cmp
test
sarb
mov
jbe
mov
mov
jl
mov
mov
inc
adc
mov
orl
pop
adc
repz
xor
push
mov
clc
test
loopne
mov
imul
imul
loop
jge
xor
xchg
xchg
fbld
bound
dec
sub
mov
mov
sbbb
inc
loope
xor
js
and
push
test
adc
jne
xor
dec
push
rcl
divl
push
and
call
dec
add
mov
mov
scas
mov
test
jecxz
adc
xor
lret
sbb
sub
jle
into
lods
dec
sbb
jge
bound
adc
mov
mov
mov
nop
sub
sahf
cmp
lcall
ss
push
xor
sti
xchg
pop
cmp
jae
mov
clc
mov
out
xlat
adc
sub
cmp
jl
pop
inc
inc
in
daa
repz
scas
inc
mulb
int3
arpl
in
jmp
mov
mov
aad
sub
sub
out
aad
and
dec
idiv
repz
sbb
stos
xlat
fbstp
jge
mov
pop
aam
bound
cmc
popf
int
popf
xor
ret
add
stos
inc
aas
xor
out
cmp
add
insl
in
or
imul
popf
adc
sbb
mov
jne
pop
mov
sub
pop
pop
mov
adc
inc
xchg
adc
insl
pop
aas
pop
jno
stc
inc
mov
pusha
into
es
das
pop
jno
insl
mov
xor
ljmp
push
xor
cmp
or
mov
sbb
sbb
imul
jl
jno
ret
inc
pushf
mov
cmp
sarb
mov
pop
and
add
cltd
mov
and
sub
xchg
repnz
mov
mov
jg
into
jecxz
jns
jnp
mov
js
das
pop
out
stc
and
jl
jno
mov
gs
shr
test
mov
ljmp
xchg
mov
out
cmpsl
xchg
cld
add
in
fucomip
push
pop
sbb
xor
test
out
icebp
lock
fnstenv
cltd
sti
and
in
jle
jnp
into
test
sbb
cwtl
add
adc
adc
cli
push
xor
outsl
inc
rorl
subb
lahf
mov
stc
test
fwait
testl
pusha
jne
xchg
fwait
push
sub
push
aaa
inc
xor
jb
or
fcmovb
pop
adcb
xor
sub
aaa
push
inc
cmp
mov
xchg
pop
scas
roll
divb
js
out
cld
lcall
sub
je
inc
cwtl
fsubrs
sbb
mov
pop
enter
stos
xor
push
gs
xchg
shll
xchg
sar
lods
inc
cwtl
xchg
add
push
or
mov
stos
test
or
testl
adc
sarb
cmpb
dec
dec
call
push
aad
xchg
jge
fisubrl
mov
nop
xchg
pop
popf
push
add
dec
xchg
fisubrs
push
push
fidivs
jbe
xbegin
addr16
xchg
jmp
cmp
inc
push
sub
add
sbb
mov
sbb
pushf
fdivl
nop
push
mov
shll
mov
adcl
addr16
pushf
clc
pop
mov
xchg
cmp
call
jg
cmp
fmuls
dec
imul
lret
push
imul
xor
rolb
jns
xchg
inc
ljmp
mov
int
aad
jo
push
rcrb
insl
jne
xlat
mov
addr16
mov
mov
inc
pop
call
rcrl
inc
sbb
jbe
xor
cmp
js
in
or
jle
insb
out
jo
sbbb
inc
and
fwait
jbe
ret
push
fists
lret
xor
scas
xor
dec
push
inc
inc
push
jle
imul
jbe
scas
push
xchg
dec
out
xchg
popa
mov
cmpl
fs
mov
stc
stos
or
inc
jle
in
fcoms
iret
mov
and
ret
mov
mov
ds
jecxz
movsl
dec
mov
inc
or
mov
push
xor
icebp
data16
int
mov
jge
xor
or
dec
xchg
or
in
sub
add
cwtl
arpl
cmp
enter
sub
das
mov
mov
stos
test
pop
jo
fsubs
outsl
dec
arpl
mov
sbb
imul
movsb
sbb
jecxz
cmp
loopw,pn
jle
jnp
xor
add
push
xor
and
xchg
sarl
jmp
dec
pushf
pop
in
data16
xchg
imul
adc
jle
loop
cmpsb
icebp
cmpsl
mov
add
or
aam
mov
inc
xor
dec
sbbl
xchg
loope
jmp
xor
clc
and
imul
icebp
xchg
mov
dec
sub
dec
jecxz
add
test
aad
push
out
dec
or
sub
inc
push
xchg
icebp
pop
icebp
add
js
pop
mov
pop
pop
mov
and
mov
daa
scas
test
pop
sbb
call
jno
out
outsl
xor
cltd
xchg
testb
aad
mov
pop
ret
shll
ljmp
addr16
in
mov
jbe
jae
mov
dec
notb
jge
jnp
jb
in
pop
xlat
addb
call
daa
cmc
insb
jg
mov
mov
pop
shl
and
outsl
xor
daa
lods
and
mov
imul
push
std
xchg
repnz
inc
adc
push
fstpt
push
push
xor
cmp
insl
add
pop
mov
pop
cld
mov
lret
bound
movsb
hlt
je
gs
lock
in
jbe
popf
mov
stc
cmp
inc
fsubrs
fcompl
je
sti
shlb
lahf
pop
in
ret
imulb
aas
hlt
icebp
mov
les
xchg
cli
mov
push
sub
add
mov
out
or
mov
stc
push
fldl
test
mov
cmc
jns
rclb
fadds
rcrl
loop
andb
dec
es
or
jno
in
push
xchg
add
loopne
scas
mov
repz
repnz
cmp
xchg
inc
je
adcl
sub
push
mov
adc
scas
repnz
das
add
sbb
push
imul
mov
mov
xchg
je
popa
faddl
stos
dec
xlat
xchg
repz
repz
push
ja
out
inc
push
xchg
shrb
push
nop
stos
mov
mov
sbb
loope
xchg
jp
out
add
testl
fs
insb
push
mov
mov
jecxz
cmp
ja
addr16
add
jne
and
pop
push
xor
imul
cmp
cmp
pop
sbb
rol
sbb
dec
dec
fdivl
jnp
and
cmp
xor
and
sti
ds
or
out
iret
xchg
in
mov
iret
call
push
mov
movsl
xchg
test
inc
inc
mov
cli
push
jno
pop
cld
mulb
add
fwait
pusha
scas
and
std
sahf
jb
xchg
and
lcall
adc
inc
add
xor
fidivl
out
sbb
sbb
dec
push
push
push
and
arpl
adc
lock
in
stc
flds
fidivs
jns
mov
pop
jno
in
pop
fwait
pushf
sarl
mov
pop
mov
stos
xor
mov
mov
fcmovnb
xor
scas
add
push
js
push
lea
addr16
push
mov
mov
jae
daa
sub
mov
cmpsb
mov
lcall
push
cmpsb
icebp
cmp
imul
mov
inc
xor
stc
imul
ret
sub
mov
enter
xchg
sti
inc
or
inc
fdivrl
fcmovnb
ja
rcrb
imul
xchg
pop
adc
mov
cld
and
test
or
popa
jg
jo
andb
fstps
sub
lret
mov
push
mov
dec
jecxz
hlt
outsl
push
xchg
leave
popa
mov
sub
jg
gs
icebp
pop
rcr
xor
js
test
or
aad
jp
loop
mov
lods
sub
sub
cli
xor
sub
xchg
scas
and
jg
in
add
in
iret
mov
jnp
jnp
mov
dec
cmp
or
pop
movsb
insl
pop
and
sbb
loopne
push
ljmp
out
in
int3
mov
mov
jp
daa
in
mov
loop
sbb
push
xchg
or
push
xor
pop
stos
lret
xor
sbb
loopne
add
push
adc
and
mov
repnz
out
sub
adc
pop
das
inc
add
lret
mov
sarb
pop
in
push
insl
adc
pusha
fdivrl
dec
jmp
sub
xchg
inc
lret
cmc
mov
inc
adc
inc
aaa
rcrl
fldt
rorl
cmc
popf
xor
xor
inc
adc
xchg
cmp
mov
jb
push
dec
filds
call
cli
push
adc
clc
pop
movsb
inc
jge
mov
aad
mov
jo
outsb
xchg
call
out
pop
sti
mov
repnz
aam
mov
push
js
sbb
outsb
clc
dec
jo
inc
xchg
insl
aad
scas
xlat
popf
jg
lods
dec
or
mov
and
enter
adc
mov
movsb
adc
test
pop
jmp
push
int
insl
jnp
and
or
jle
les
es
add
mov
sub
lock
mov
jecxz
seta
inc
out
in
test
lock
push
ret
fnsave
sbbb
lcall
sub
shrb
mov
cmpsl
sub
fs
mov
xor
jmp
fists
stos
sahf
js
push
jge
fs
lods
adc
jle
adc
in
lock
jns
xor
mov
push
in
xchg
stos
cmp
jmp
fucom
sub
jmp
outsb
clc
or
jg
inc
adc
jge
mov
and
adcb
subl
leave
inc
inc
cli
pushf
loopne
aam
test
push
mov
into
add
js
shrb
pop
push
sub
outsl
jns
mov
sub
mov
cmp
jmp
test
or
shrb
jge
sti
xchg
sbbl
aam
lock
mov
xchg
cwtl
mov
subl
stos
mov
dec
nop
test
jge
ds
jg
dec
add
inc
pop
push
inc
aas
bound
mov
cmc
nop
inc
xlat
ret
gs
pop
cmp
out
jmp
stos
imul
or
xorb
icebp
sahf
fdivl
xchg
push
imul
add
loope
scas
gs
xchg
addr16
cld
cmpsl
jle
insl
mov
arpl
xchg
in
test
nop
jno
jp
cmp
rcl
sub
test
mov
bound
jne
test
leave
push
cmp
fdivp
fs
and
mov
aad
and
mov
mov
out
test
out
insl
adcb
xor
nop
cmpsb
lock
xchg
sub
cld
push
test
fldcw
mov
jge
pop
xor
mov
jbe
push
lds
cmpsl
stos
add
sub
and
out
add
xchg
jmp
fwait
in
test
lds
jg
mov
inc
call
and
fwait
jnp
cld
arpl
or
jns
roll
das
jle
mov
pushl
pop
inc
loopne
and
dec
push
rcr
xor
fwait
adc
mov
lahf
jae
lahf
test
mov
push
pusha
xchg
mov
pop
adc
jns
scas
and
ja
andl
lahf
jns
adc
mov
nop
adc
filds
loop
roll
fsubrp
imul
or
hlt
dec
daa
lret
push
fdecstp
push
dec
jmp
ret
fsts
je
sub
jae
out
les
push
sbb
out
inc
and
adc
leave
dec
mov
dec
cld
jns
jnp
fwait
push
or
dec
add
divb
add
sti
and
xlat
add
xchg
jne
inc
mov
popf
mov
sub
test
push
cwtl
ljmp
mov
sub
xchg
scas
fsubr
enter
xor
fidivs
imul
in
cmpb
loop
sbb
mov
pop
jl
test
xchg
mov
leave
push
jmp
lahf
aas
outsl
repnz
cld
inc
mov
mov
xchg
add
mov
pop
cmp
mov
test
jbe
lcall
jae
pop
in
xchg
sub
dec
mov
jl
arpl
cwtl
pop
push
push
aaa
les
stos
movsl
cmp
fildll
aad
inc
sahf
pop
jp
cld
stos
jg
out
mov
push
mov
add
mov
sbb
js
inc
popa
nop
dec
pop
jmp
lcall
xchg
add
xchg
popf
je
jecxz
sub
lret
sub
xchg
sub
sbb
mov
jb
adc
mov
xchg
mov
aad
popa
repz
add
fdivrs
sahf
std
and
jg
mov
push
and
jp
pop
jo
outsb
clc
sbb
aam
lahf
aam
daa
mov
pop
scas
mov
xchg
adc
add
cmp
push
xchg
jb
mov
xchg
or
aam
push
cs
loope
xor
dec
push
insl
in
movl
mov
loopne
pop
shr
push
fsubl
sbb
and
mov
add
adc
cmp
jns
xchg
mov
xchg
out
repz
mov
mov
test
mov
mov
pop
call
cmp
rolb
and
mov
dec
pop
loope
lret
out
insb
lds
add
cmp
mov
fcmovne
xor
stos
jmp
sub
fidivrl
js
movsl
test
ja
in
push
test
push
repnz
imul
xor
test
push
mov
pop
sbb
pop
dec
jns
mov
inc
scas
add
mov
cwtl
inc
insl
mov
int
push
or
fiaddl
fidivl
test
mov
sbb
jo
in
push
mov
nop
dec
pop
mov
dec
pop
and
pop
jmp
sub
cmp
lods
lods
cmp
cmp
sbb
jge
imul
aaa
bound
ret
cs
daa
mov
pushf
sub
cmpsl
int
cmc
insb
scas
stos
mov
and
ljmp
dec
cld
outsl
push
push
fisubrl
cli
xchg
and
sub
ret
push
xor
lea
mov
aas
xchg
dec
in
stos
push
add
lcall
jae
bound
pusha
cmp
mov
pop
std
sbb
push
das
mov
mov
punpcklbw
inc
test
nop
ror
pusha
pop
pop
test
jae
mov
pop
mov
pop
jmp
and
in
pushf
xor
sbb
gs
jp
pop
cmpsl
xchg
sbb
pop
push
mov
and
jmp
xchg
inc
fs
push
stos
hlt
into
loope
bound
jae
repz
mov
imul
cmp
arpl
inc
jnp
out
sub
loopne
mull
nop
lds
xlat
pop
pop
insl
es
inc
jecxz
cmpb
cmp
xchg
sub
xchg
push
mov
inc
mov
xor
jae
jb
imul
dec
add
repnz
mov
dec
cmp
inc
cmp
jmp
dec
ficomps
jno
xor
jle
dec
das
fwait
mov
xor
cli
in
pop
push
aam
mov
sub
loop
cmc
pop
decb
outsb
pusha
xchg
sub
je
mov
adc
aas
sub
lds
ret
xchg
sub
repnz
and
inc
mov
xor
rcrl
jle
push
sbb
or
sub
ror
mov
add
adc
pop
push
insl
shl
sahf
js
arpl
cld
jno
mov
sbbl
jl
mov
out
lret
negb
xchg
xchg
sbb
popa
dec
sarb
iret
xchg
popa
and
and
inc
loopne
or
sarl
jns
cmc
pop
lret
jno
xchg
cmpsb
jns
hlt
clc
or
and
jecxz
rcrl
cmp
or
push
or
mov
adc
cli
push
pop
vpshufhw
pop
icebp
add
cmpsl
js
int3
imul
mov
dec
mov
cmp
sahf
fidivs
mov
insl
scas
repz
pop
dec
lds
dec
sub
xchg
push
daa
inc
into
out
add
mov
sub
inc
jecxz
sbb
in
pusha
fcmovbe
nop
imul
mov
mov
in
pop
imul
call
outsl
movsb
adcl
fiadds
xor
popa
push
adcb
pusha
jb
or
pop
sbb
jns
xor
cmpsl
in
or
push
lahf
gs
and
mov
orb
inc
fsubl
mov
jg
add
fs
adc
std
lds
jb
xchg
scas
inc
xchg
sub
push
sub
xchg
xor
add
jbe
push
test
dec
cmpsl
pop
mov
mov
imul
arpl
and
iret
in
inc
cmp
into
pop
cmp
mov
push
clc
lods
jg
ja
sub
loop
gs
fucomi
mov
mov
jo
pushf
adcb
loope
mov
or
sub
fiaddl
test
sti
pop
imul
sub
arpl
inc
lds
icebp
xchg
push
cmc
inc
jo
dec
test
enter
jae
inc
movsb
dec
xor
add
xlat
repz
and
data16
rcll
mov
repz
cmpsl
cmpsb
inc
adc
enter
push
int3
lret
dec
add
aad
rorb
push
scas
inc
test
inc
bound
addr16
movsl
dec
lret
and
cld
pushf
adc
dec
stc
lret
xlat
sub
pop
mov
out
mov
das
cmp
loopne
mov
test
jmp
adc
lcall
das
scas
test
mov
push
mov
cld
jg
mov
cmp
lret
jl
icebp
out
jmp
and
push
xchg
loopne
cltd
jo
lea
mov
inc
pop
repnz
movsl
inc
pop
pop
hlt
or
inc
mov
mov
fucom
and
movsl
cmp
fildl
push
jl
rclb
mov
lcall
test
aam
sub
insl
pop
ja
push
cs
mov
ljmp
test
cmpsl
xchg
fsubrs
sbb
pop
ret
mov
stc
jl
aas
int
add
xor
daa
xchg
push
pusha
lods
mov
mov
and
daa
or
lods
aad
pop
pop
add
xchg
outsl
lcall
cmp
pop
enter
and
cmpsb
sub
or
cwtl
mov
arpl
or
jge
outsb
sub
and
and
pushf
lret
icebp
test
sbb
ljmp
jno
sbb
sbb
jns
test
push
out
and
les
mov
call
outsb
jae
cmpsl
aas
sahf
dec
fdivrl
test
fstpt
aas
xor
int3
sbb
pop
xchg
adc
mov
jge
pop
push
add
sbb
cmp
loop
mov
jp
clc
jb
loope
test
sbb
sub
jp
js
adc
int
mov
in
inc
enter
in
adc
or
push
mov
and
push
out
dec
dec
add
hlt
mov
stc
in
rcrl
inc
or
adc
dec
jecxz
sbb
xchg
add
lods
xchg
fwait
sub
icebp
and
pusha
iret
push
andl
xor
subl
add
inc
fisubs
sub
in
xor
sbb
xchg
test
notl
fcompl
mov
cmc
push
in
adc
inc
hlt
and
in
ret
sbb
jb
seta
scas
sbbl
ret
lock
ja
lret
pop
in
test
in
pop
je
nop
mov
add
arpl
mov
and
sti
mov
out
cmpsl
imul
cmp
insb
lret
test
add
sub
lods
enter
test
sbb
lods
mov
test
in
fists
xor
dec
dec
add
push
hlt
into
jge
lahf
mov
decb
jae
sbb
and
jnp
adcb
mov
xchg
xlat
jno
pop
or
mov
sub
cmpsl
gs
adc
pop
mov
push
cmpl
adc
outsb
popa
push
repnz
add
sub
test
cmpsl
fdivrl
lret
dec
pop
pop
testb
sub
xchg
movsl
fcmove
adc
mov
dec
loop
xor
stc
test
jecxz
sub
or
sti
adc
xor
sub
cmpps
in
mov
ffree
pop
nopl
outsb
fcoml
push
nop
inc
fcmovb
xor
add
dec
adc
adcl
adcb
stc
mov
pop
sbbl
mov
jne
xchg
push
icebp
cmp
test
jbe
ret
jne
loope
stos
stos
es
imul
sahf
inc
lods
pop
adcl
dec
lret
and
dec
adc
ss
cli
jg
stos
sub
mov
dec
dec
xor
xlat
insb
xchg
xor
dec
jge
jl
or
pop
inc
and
push
icebp
xor
push
pop
pop
testb
cld
xchg
jle
or
mov
mov
ret
stos
push
xor
mov
cli
push
std
xchg
dec
imul
sbb
scas
enter
ds
in
insl
lahf
dec
fldl
fwait
push
cltd
int3
repnz
je
in
jns
xchg
lret
push
xchg
mov
fwait
xor
or
dec
adc
mov
dec
stc
xor
mov
or
lds
dec
dec
dec
jecxz
je
mov
fnstsw
loope
adc
jbe
xorl
mov
push
jae
ffreep
call
pop
frstor
pop
jb
testb
add
fs
addr16
les
mov
repnz
sub
or
scas
inc
sti
cmp
or
in
sbb
ds
add
scas
inc
xor
or
xor
ljmp
mov
mov
ret
sub
test
push
jmp
lret
pop
jo
or
lcall
nop
in
jnp
lcall
insl
add
mov
jbe
insl
rcl
stos
cmp
rdtsc
enter
mov
rorl
add
sbbb
movsb
testb
call
mov
icebp
mov
imul
inc
into
mov
shlb
mov
or
popa
pop
imul
lahf
testl
sub
add
xor
ljmp
cmp
jns
add
and
sub
adc
and
je
scas
and
stos
inc
and
xchg
push
cmp
imul
rorl
jno
cmp
dec
sbb
jbe
cmp
fcmovnb
push
sbb
loop
add
add
cmp
adc
ss
mov
or
fcomps
mov
add
add
fsubrs
cli
and
push
insb
sub
mov
scas
or
push
fisubrl
ss
or
xchg
or
ret
outsb
outsb
lock
mov
and
ss
adc
clc
dec
dec
cmp
cmp
push
or
pop
fcoml
sbb
pop
incb
in
movb
mov
lds
dec
nop
cmc
mov
es
pop
das
jb
pop
sub
ss
test
int3
in
stc
jge
sub
or
std
add
sti
out
inc
adc
xchg
push
xor
jae
and
xchg
dec
add
cmp
je
dec
adcb
imul
fistpll
fiadds
push
adc
jl
rolb
lahf
aas
add
add
mov
shrl
lret
ret
dec
push
call
sbb
shlb
pop
xchg
fiaddl
idiv
jb
pop
jns
or
push
mov
and
pop
dec
gs
cmp
lods
loop
fisttps
int3
sarl
gs
insl
js
mov
or
aam
movups
jl
pop
movsb
mov
aad
and
add
pop
push
mov
pop
repz
rcl
lds
mov
jecxz
push
sbb
xchg
add
lcall
iret
scas
rorb
aam
push
imul
sub
js
dec
xchg
pop
out
pop
pop
xor
jne
cmp
lods
dec
out
mov
je
sbb
pop
xchg
sbb
jle
sbbb
cmp
push
loope
adc
sub
popa
scas
sbb
mov
jnp
sub
andl
iret
test
xchg
shll
cmp
or
cmpsb
jns
lahf
out
add
ds
or
mov
sbb
mov
shlb
push
cmp
push
fnstenv
data16
pop
add
testl
or
aam
dec
cmpl
add
xchg
xchg
adc
shlb
mov
adc
imul
aaa
movsl
lahf
dec
das
test
jp
andl
sbb
mov
inc
add
mov
addr16
xor
repnz
cmp
in
loop
cmp
mov
xchg
scas
mov
inc
stos
cmpb
mov
dec
jmp
add
mov
xorl
mov
test
pop
fiaddl
pop
repnz
cmpb
inc
jns
jb
out
dec
add
jbe
sbb
or
push
pop
int
leave
int
ljmp
sbb
jge
and
cwtl
cmp
and
bound
std
xchg
jno
fimull
insb
sbb
leave
push
aad
or
xchg
dec
adc
cs
rolb
aas
push
sbb
pop
push
add
mov
mov
and
sub
dec
shlb
imul
mov
sbb
in
sub
mov
in
es
cli
pop
and
push
in
sub
mov
mov
fnsave
lret
push
inc
fistl
out
pushf
rcll
mov
incb
xor
cmp
subb
pop
addb
sub
inc
xchg
push
cltd
inc
inc
jb
sbb
fcompl
daa
jno
push
inc
or
dec
jl
aad
lret
dec
pusha
and
pushf
lods
jmp
push
mov
jecxz
jb
adc
jge
mov
pop
and
cld
lcall
in
pop
aas
pop
inc
fadd
push
push
and
in
sti
ljmp
pop
dec
rclb
outsl
dec
es
add
dec
push
mov
iret
orb
addr16
insb
sarb
pop
ja
lcall
lcall
push
dec
mov
mov
outsb
jno
push
mov
mov
js
daa
mov
lock
mov
test
stos
or
sub
popa
pop
roll
aaa
fwait
sbb
adc
dec
cmp
in
sahf
dec
cmp
insl
sub
sub
fidivs
jle
jo
jne
popa
nop
lret
and
inc
int3
add
add
push
in
dec
sbb
jno
ja
jne
ret
push
or
mov
out
mov
dec
lcall
add
pusha
xchg
xchg
test
dec
lcall
xchg
shlb
jb
sbbb
pop
sbb
xchg
leave
and
imul
and
inc
movsl
inc
push
lods
scas
inc
fcmovb
dec
loop
push
int3
sub
iret
int
add
data16
pop
in
loope
test
lret
jg
loope
fisubl
mov
dec
push
sub
xlat
aad
cmc
outsl
clc
dec
aam
mov
das
insl
jne
xchg
push
xchg
push
inc
inc
pop
jge
lahf
push
aad
mov
cld
xchg
pop
cmp
sbb
dec
mov
out
orl
pushl
inc
fnop
mov
fs
pop
adc
jae
push
jl
xor
mov
mov
add
jmp
xchg
sub
repz
add
movsb
inc
sbb
sbb
shrl
jb
sbbb
nop
and
pop
loop
mov
adc
jo
in
cmp
imul
push
and
sti
push
lods
sub
push
inc
mov
pop
inc
push
andb
xor
sbb
push
push
push
mov
test
das
adc
mov
cmpsb
imul
insb
pop
add
int
cmp
repnz
lods
adc
js
scas
jnp
mov
faddl
scas
inc
shrl
xchg
call
in
fmuls
lods
or
js
in
add
mov
dec
and
idivb
xchg
pop
int3
fimuls
xchg
pushf
xor
push
call
add
xchg
xchg
push
push
sahf
in
pop
xchg
add
push
add
mov
xor
jp
inc
imul
inc
adc
ljmp
mov
inc
fs
sahf
scas
adc
mov
aad
adc
adc
scas
push
icebp
mov
jmp
add
cli
std
pusha
loopne
jge
addb
movsl
jl
mov
mov
mov
or
test
mov
incb
fs
xchg
inc
sbb
cmp
lods
inc
cmp
mov
and
popa
xor
push
addr16
inc
ret
dec
jae
inc
aas
sahf
xchg
rol
pushf
mov
and
cmp
sub
out
add
out
add
jae
sbb
xchg
jmp
sbb
push
ja
mov
fisubrl
orl
fidivs
lret
xchg
pop
imul
in
cmp
dec
add
rcl
xchg
jns
notl
mov
pop
imul
xor
in
xchg
xchg
push
inc
pushf
mov
mov
xor
sbb
and
cmp
std
mov
repnz
xchg
add
push
out
dec
test
sbb
subb
gs
mov
xor
ljmp
xor
es
inc
dec
stos
xchg
js
ds
mov
lret
adc
adc
push
sbb
sbb
fxch
inc
insb
xor
jno
fiadds
pop
push
push
sbb
stos
inc
push
cmp
jae
clc
push
test
insb
stc
je
clc
jg
sub
mov
out
in
sbb
pop
xor
cli
jg
fs
gs
inc
aam
dec
and
mov
outsb
push
mov
movups
mov
shll
mov
cli
or
loope
dec
xor
mov
ret
cmc
fwait
stos
and
pop
addl
sub
out
ja
jnp
pop
in
xor
mov
add
arpl
sbb
lcall
jl
push
push
sbb
hlt
sub
movsb
pop
xchg
cmp
push
outsb
mov
std
jl
int
nop
inc
pusha
mov
cmpsl
clc
inc
fisubrl
enter
rcrb
jne
call
or
push
sub
lcall
mov
pop
xchg
inc
loop
out
mov
cmp
out
out
rorl
les
shll
sub
out
mov
push
loope
aam
push
in
fdiv
xchg
in
push
fdivl
mov
inc
iret
adc
popl
orl
push
pushf
dec
adc
push
sti
adc
xchg
sub
imul
pushf
dec
mov
bound
aam
dec
dec
pop
inc
lcall
mov
jnp
arpl
pop
or
adc
sti
popa
jp
fsubrs
pop
lcall
and
and
sub
in
dec
and
inc
mov
xor
inc
fsub
pop
addr16
or
and
cld
and
or
and
adc
mov
stos
testb
shlb
iret
adc
fisttps
add
outsb
mov
push
or
or
fdivrs
loop
xchg
fadds
add
mov
or
lret
movsb
mov
add
int3
sbb
adc
jg
testl
loopne
add
jge
xlat
cltd
mov
lods
aaa
push
lcall
xchg
call
xchg
sbb
xchg
sub
fnstenv
cmp
inc
js
hlt
out
ds
and
or
xchg
int
ja
and
dec
jmp
rorb
mov
mov
push
int
jnp
sti
bound
mov
dec
daa
leave
out
push
call
rorb
push
inc
or
inc
lds
xor
bound
int
fsin
or
or
lea
cli
or
jg
push
insl
gs
iret
mov
mov
test
add
in
push
loopne
inc
xchg
add
mulb
pusha
jmp
les
or
mov
fisubrs
sahf
cmp
es
pop
gs
xchg
xchg
aas
dec
bnd
ss
iret
xor
push
repnz
dec
xor
jne
xchg
enter
js
icebp
sbb
cli
inc
das
imul
gs
mov
inc
pushw
decb
cwtl
outsl
test
lret
lcall
popf
cmp
ss
fdiv
xchg
push
jge
adc
mov
pop
outsl
out
sbb
insb
mul
jnp
or
sbb
outsl
aad
pop
and
mov
sbb
mov
push
in
and
orb
loope
pop
loope
adc
sub
push
adc
add
in
pop
leave
xlat
inc
ljmp
test
lret
testb
in
mov
xchg
sub
repz
adc
push
loop
ja
jmp
xchg
in
rolb
dec
adc
inc
pop
outsl
addb
dec
push
inc
out
cs
leave
cmp
cmp
or
pop
shll
sarl
add
hlt
mov
lock
std
adc
aas
imul
add
cmpsb
adc
idiv
fdivs
outsb
xchg
cmp
lods
movsb
pop
data16
lods
mov
push
and
repnz
cmp
in
cmovnp
adc
gs
fucomi
adc
and
lea
xchg
ds
jo
in
pop
addr16
or
dec
jo
lods
mov
xor
or
jmp
push
xor
cld
and
stc
sub
inc
jne
dec
aas
cmp
mov
xor
jg
sti
std
out
mov
inc
jo
xchg
fs
mov
sarl
mov
lcall
fists
dec
push
dec
xor
aaa
outsl
popf
cmpsl
sbbb
push
mov
fs
ss
push
dec
adcb
and
xor
push
test
and
inc
cmpb
repz
adc
loopne
push
jle
add
out
scas
or
sti
sbb
shl
xor
decb
push
cmp
mov
mov
loop
stc
test
xor
outsl
cli
dec
pop
lds
daa
jle
push
pushf
shlb
cmpsb
cmc
test
into
add
cmp
movsb
dec
cmp
dec
mov
push
ljmp
test
jno
test
xor
mov
push
shl
dec
sbb
mov
outsb
out
push
test
pop
test
sbb
subb
mov
lret
sti
test
scas
jae
das
fbstp
test
loope
outsl
roll
mov
mov
stos
int3
in
aad
mov
push
xchg
mov
jmp
insl
fcomps
cmp
pop
movsb
rorb
sbb
sbb
jne
lret
popf
shlb
adc
push
sbb
ljmp
pop
xor
dec
sbb
dec
fidivrl
nop
shll
sti
xchg
shl
push
sbb
adc
lcall
fcompl
push
pop
push
sbb
lcall
dec
push
push
or
dec
and
lcall
aam
push
lahf
dec
sbb
lcall
dec
adc
lds
lret
xchg
iret
xchg
adc
mov
nop
push
mov
or
jo
mov
cmpsl
js
push
mov
jbe
je
or
adc
into
xor
push
and
sub
dec
sbb
mov
inc
rorl
mov
mov
ja
jnp
test
pusha
or
lcall
out
test
jmp
adc
cs
pushf
cwtl
daa
cmp
scas
inc
mov
dec
add
es
aad
popf
sub
jnp
in
push
mov
popf
dec
and
in
inc
pop
mov
adc
cmp
lods
cmp
aas
repnz
adc
jmp
mov
and
mov
stos
cmp
cwtl
out
jmp
into
pop
adc
push
fildll
xchg
addr16
mov
pop
ljmp
lods
ret
outsl
mov
shll
ja
mov
xchg
addl
cmp
or
decb
imul
lods
add
scas
jb
sbb
cld
push
lods
xor
jecxz
rorl
pushf
adc
or
popa
es
fwait
xor
cli
pop
adc
aas
mov
aas
test
orl
mov
xor
icebp
fcmovu
jne
adc
push
mov
pop
mov
stc
push
xor
in
inc
icebp
notl
lods
sub
outsl
lret
jno
jmp
mov
in
inc
sti
cltd
int
fwait
mov
xchg
out
or
adc
add
cwtl
pop
mull
and
cmc
mov
add
mov
cmp
fildll
cmp
jo
gs
ret
fwait
dec
add
sub
cltd
test
into
cld
repnz
pop
push
mov
clc
ret
lock
push
stos
pushf
scas
sbb
call
mov
aad
fs
ret
or
and
pop
xor
outsb
or
sub
xchg
insl
je
adc
fidivs
stos
insl
dec
push
ficoms
movsb
push
insb
jl
lds
xchg
ss
dec
cmpsb
or
mov
push
aam
les
call
ret
xor
add
sbb
pop
dec
mov
sbb
iret
mov
xchg
cmpl
ret
mov
ja
xchg
xor
and
cmp
mov
test
fxtract
xor
mov
push
out
rolb
xchg
push
inc
push
mov
ret
popf
xor
and
in
xor
out
test
inc
mov
idivb
pop
out
jge
and
int
xchg
gs
test
test
popw
sarb
mov
inc
out
stos
add
cmpsl
inc
inc
pop
pop
movsb
add
cmp
int
ret
test
inc
mov
jne
std
and
xor
cmpsl
inc
das
add
clc
lods
js
sbb
lcall
and
pop
sahf
xor
and
mov
push
je
push
jge
lods
sub
push
pop
pop
xchg
mov
dec
fnstsw
cmp
mov
gs
rolb
jbe
inc
mov
xchg
push
mov
mov
dec
adc
aad
push
pop
adc
or
and
push
test
jnp
pop
lods
sub
or
ss
pop
cltd
lods
push
dec
push
lods
jns
pminub
mov
or
and
sahf
loopne
adc
lcall
leave
repz
dec
fisttpll
data16
cmp
fstps
sarl
aas
stos
cmp
ljmp
sahf
pop
dec
or
and
sti
rcrb
out
xchg
xor
push
xchg
subl
cmp
je
ja
xchg
js
mov
mov
add
mov
lcall
mov
aad
aas
add
mov
les
xchg
push
sbb
pop
jecxz
andb
push
cmp
mov
pop
ret
loope
imul
out
mov
mov
push
adc
xchg
mov
inc
xor
enter
pop
data16
xchg
jl
xchg
jns
dec
sbb
fs
lret
xchg
push
shlb
mov
push
mov
jb
jg
and
sub
mov
xlat
rclb
fsubl
stc
add
mov
testl
cmpsl
ja
xchg
rorl
imul
cltd
daa
pop
aam
mov
out
sub
shlb
xchg
loope
adc
lea
jle
or
loopne
mov
clc
call
in
sbb
testl
fwait
outsb
push
inc
push
xor
xchg
fcom
jle
idivb
arpl
mov
loop
pop
xor
fcmovu
and
dec
add
xor
jo
mov
sub
sbb
lods
sub
mov
loop
stos
out
and
sbbl
or
lahf
mov
sub
sbb
sti
scas
imul
fidivs
insb
xlat
inc
inc
in
adc
mov
fcomip
ficomps
int3
lcall
out
dec
jo
into
xchg
push
add
push
cmc
and
imul
add
sbb
mov
gs
sbb
push
mov
hlt
sahf
jae
jecxz
add
stos
stc
push
loopne
clc
out
in
cmp
aas
dec
lcall
insb
adc
in
dec
mov
mov
lahf
cmpsb
push
add
or
push
in
push
sbb
cmp
dec
cmp
sub
push
fwait
ss
cmp
inc
xchg
jg
mov
addr16
loop
inc
fs
mov
mov
or
dec
movsl
mov
mov
push
pop
punpcklbw
jno
xchg
mov
pop
int3
push
inc
sbb
mov
sub
jle
into
pop
mov
ret
cmc
pushf
movsl
in
test
adc
fbld
test
add
mov
push
ja
mov
xor
xor
push
and
es
cmp
pop
cmpsl
pop
sbb
jmp
jne
pop
or
stos
adc
or
imul
cli
push
cmpsl
mov
mov
out
test
bound
shll
pop
test
and
sbb
subl
negl
out
xor
xor
adc
lea
dec
in
mov
mov
cmpsb
mov
xlat
dec
ds
jle
adc
jns
mov
scas
cmp
cmp
lods
adc
imul
xorb
daa
cld
pusha
sub
sub
repz
loope
jb
pop
mov
loope
scas
inc
js
fbld
and
adc
sbb
pop
lods
lock
dec
sub
out
xorb
inc
push
int3
and
fsub
adc
xor
sub
iret
loope
mulb
daa
xchg
lods
push
jecxz
add
mov
fisubrs
mov
mov
push
dec
mov
lahf
icebp
addr16
in
je
fwait
push
or
mov
les
ja
sbb
or
adc
out
xchg
sbb
mov
scas
je
lcall
xor
or
xchg
and
ds
mov
mov
push
fmull
cwtl
ljmp
push
test
jb
xchg
mov
cmp
rcrb
addr16
hlt
dec
mov
jb
adc
or
daa
mov
outsl
push
sbb
idivl
cmpsb
xlat
ljmp
push
movsl
inc
mov
cmp
cmpsl
into
hlt
pop
aad
sub
cmp
sub
cmp
xchg
adc
push
mov
xchg
movsb
repnz
or
popa
sub
jns
pop
cs
je
sub
dec
cli
jl
sbb
stos
mov
and
ret
xor
ds
ja
cmp
push
add
ljmp
scas
xor
lret
bound
data16
jmp
daa
nop
pop
xchg
mov
mov
and
aas
push
nop
and
out
test
push
push
jo
inc
add
mov
fmuls
int3
sub
divl
es
out
mov
or
pop
loope
dec
scas
xor
aaa
inc
addb
outsb
shl
js
xchg
sub
xchg
mov
inc
sbb
sbbb
lcall
test
shlb
jo
clc
leave
inc
sub
pop
cmp
pop
mov
xor
xchg
adc
jb
xor
lods
outsl
sti
xor
cs
push
popf
ret
leave
data16
and
aad
rclb
rcrl
jne
mov
cltd
stc
es
sbb
push
rcrl
mov
into
jo
pusha
int
or
test
push
inc
or
rorb
sbb
and
inc
pushf
cs
jnp
cmp
js
push
xchg
aam
push
mov
and
shlb
xor
cli
std
pop
or
xchg
xchg
shlb
lods
pop
xchg
sbbb
in
es
into
bound
lahf
test
jo
push
fwait
bound
cmp
mov
pop
mov
mov
or
cmp
jnp
or
dec
imulb
and
sahf
into
push
call
or
xchg
lahf
ja
mov
or
and
orl
inc
outsl
pop
int3
fidivrs
int
aaa
pop
fnstenv
in
test
stc
mov
lods
jg
sub
push
push
lahf
scas
lods
inc
sbb
or
mov
daa
jle
aam
push
sbb
xchg
sti
jbe
xor
adc
dec
xchg
in
test
imul
mov
cmp
pop
xchg
xchg
pop
in
dec
lods
and
push
xor
mov
sbb
popf
xor
jecxz
and
or
lods
jne
push
sub
xlat
inc
inc
mov
push
jmp
test
movsb
dec
jb
mov
fcom
roll
xchg
cs
sub
mov
xor
fwait
xor
mov
sub
cmp
and
mov
xchg
sub
dec
out
and
xor
or
fcomi
lea
mov
xchg
sbb
adc
aaa
jmp
notb
add
pushf
outsl
dec
pop
outsl
addb
cwtl
inc
mov
xor
xchg
adcb
inc
cmp
jb
dec
mov
sub
add
sbb
dec
mov
sub
mov
or
xchg
mov
addr16
sbb
pop
push
push
loope
mov
push
xor
mov
xchg
pop
inc
push
jbe
js
subb
mov
sbb
jle
out
cmpsl
aam
adcl
popa
sbb
xchg
inc
xchg
push
dec
or
in
cwtl
add
shlb
test
mov
inc
sub
dec
inc
sub
push
sahf
shl
or
push
ja
xchg
es
sbb
and
xor
pusha
inc
popa
mov
push
int
inc
jnp
fistpll
sbb
in
push
out
les
xchg
jmp
xor
in
arpl
jp
xor
rcll
pop
pop
stc
pop
inc
cmp
and
lds
dec
enter
rcrl
enter
in
repnz
and
mov
movsb
jp
ljmp
popa
xchg
add
push
fldl
popa
fstps
mov
inc
mov
mov
jle
int3
arpl
mov
ljmp
call
mov
jmp
inc
lock
repnz
sahf
gs
cs
mov
rcrb
sar
repnz
push
push
lahf
xlat
or
pop
mov
fwait
push
popa
sub
xor
sbb
pop
jmp
stos
mov
inc
fistpl
sbb
stc
cmp
cmp
into
in
stc
push
adc
xlat
sbb
jno
jp
xchg
scas
add
inc
testl
push
sahf
jge
shlb
popf
cwtl
movb
mov
jo
ficomps
shrl
mov
push
inc
sbb
aam
cmp
jnp
into
or
mov
into
gs
dec
fsqrt
leave
in
cmp
in
push
mov
mov
push
clc
xlat
shr
lock
inc
imul
ds
xchg
testl
dec
in
gs
mov
lea
testl
push
lea
cli
lods
pop
imull
in
mov
fucomp
popa
popf
mov
popa
mov
loopne
inc
mov
ror
repnz
mov
pusha
push
xchg
sub
popf
jl
test
mov
inc
mov
mov
xor
movsl
mov
xchg
stc
add
stc
xchg
push
lea
xor
scas
pop
ret
adc
jo
adc
push
mov
xchg
xlat
sarb
mov
jle
inc
mov
and
push
sysenter
fwait
js
mov
and
mov
lock
or
hlt
mov
cmp
pop
addr16
pusha
lcall
sahf
movsb
nop
lods
dec
movsb
outsl
sbb
rcl
leave
cmp
jno
pop
loop
fwait
sahf
mov
shr
jle
mov
movsl
or
or
sbb
and
add
inc
int
ljmp
lods
sbb
in
test
adc
xor
and
leave
inc
lods
shrb
mov
or
in
cmp
nop
rclb
push
lea
sbb
xor
cmp
jo
mov
data16
sub
test
ret
cmpsb
inc
jle
cmp
add
jo
push
shl
out
and
cmpsb
xchg
mov
scas
divl
mov
xor
adc
xchg
test
inc
pop
lock
sahf
push
or
dec
mov
or
hlt
mov
push
fsubr
stc
or
push
roll
xor
cmp
enter
sbb
js
nop
stos
mov
inc
fnstenv
subl
loopne
loop
sbb
aas
mov
jo
xlat
mov
jns
mov
inc
add
xor
jge
xchg
mov
jge
add
pop
stos
outsb
dec
inc
sub
inc
inc
int
aam
and
push
mov
enter
arpl
pop
enter
fwait
sbb
test
cmc
popa
lret
addr16
jg
shrb
out
cmp
jecxz
add
inc
xlat
inc
sub
shlb
cs
aam
cmc
mov
mov
js
cmp
mov
or
lods
mov
jmp
scas
rcr
and
push
jg
insl
leave
leave
pop
sub
nop
mov
cmp
sub
or
arpl
jo
adc
repnz
lds
std
dec
mov
aam
rcll
insl
dec
xchg
sub
imul
pop
cmp
leave
or
imul
cmpsl
push
push
scas
xor
lcall
jecxz
out
mov
movsl
mov
aas
addb
mov
rcrl
addr16
cmp
gs
test
jecxz
hlt
adc
bound
and
shll
mov
fisttpl
cltd
rorb
incb
or
mov
cwtl
das
bnd
call
stc
scas
push
cld
push
shll
es
xchg
lods
mov
push
jbe
repnz
mov
cltd
pop
es
lcall
push
or
out
push
adc
icebp
enter
andb
sub
or
in
cmp
mov
fisubrl
data16
dec
and
or
and
aaa
int
loope
jg
push
pop
fcoms
scas
push
nop
push
sahf
sub
mov
popa
mov
adc
adcb
movsb
out
mov
add
xor
push
mov
in
arpl
sbb
frstor
cltd
ret
jns
inc
jns
adc
lcall
pop
mov
ret
sarl
jl
inc
out
inc
fwait
mov
leave
pusha
out
add
roll
fmulp
push
pop
jbe
jmp
cld
xchg
mov
fdivr
cmp
sbb
pop
aas
loope
xor
jmp
mov
push
jmp
test
xor
inc
fiadds
insl
fcoml
es
aam
aad
mov
fs
lret
xchg
lahf
mov
addr16
rcrb
in
push
ljmp
jae
jl
jecxz
xor
bound
fisubl
lret
sub
lock
clc
inc
outsl
cltd
lock
notb
cmp
shl
aaa
test
mov
out
add
or
in
ds
icebp
scas
dec
in
jno
and
insb
sti
repz
add
or
cmp
xlat
in
orl
inc
cwtl
sbb
test
xor
jmp
jbe
js
xchg
test
push
ret
sbbb
cmp
and
or
jo
aam
jnp
movsb
sub
inc
dec
outsb
cltd
pop
bound
pusha
jecxz
pop
mov
mov
mov
sub
adc
pop
mov
sub
xor
mov
inc
xchg
jnp
lea
cwtl
mov
fistpl
sub
push
xor
or
stos
sti
je
jae
pusha
mov
or
sarb
test
cmp
orl
imul
aad
and
test
push
fisttpl
cmpsb
ss
fcoms
sbb
lahf
testl
loop
xor
xchg
cmp
jle
fcoml
jg
inc
mov
push
add
test
push
sbb
out
ret
sahf
pop
lahf
dec
pop
dec
mov
es
lret
add
es
inc
aas
mov
jg
fstpt
insb
adc
pop
cmp
dec
loope
cmc
mov
ss
clc
outsl
mov
aaa
xchg
xchg
sbb
lret
repz
cmp
sub
sbb
xchg
call
insl
cmc
incl
xchg
push
pop
arpl
cmpb
xchg
insl
test
in
mov
aas
or
fsubs
xchg
mov
mov
shrl
in
lds
insl
pop
ss
enter
jb
cmpsl
jecxz
shl
test
cmp
outsl
lds
push
push
bound
jecxz
add
mov
cmp
fnstenv
cmc
imul
das
mov
pusha
rcrl
and
xchg
sahf
inc
jne
inc
jg
push
lcall
inc
scas
push
jns
popa
fnsave
mov
mov
and
or
jnp
cmovl
ss
and
lret
sbb
mov
dec
xchg
xchg
mov
lea
dec
lret
dec
popa
int
mov
mov
insl
sahf
adc
data16
xchg
scas
push
inc
loope
mov
loop
loop
lcall
push
ss
mov
lods
mov
inc
sbbb
scas
decl
lcall
push
stc
cmpsb
add
xor
mov
or
mov
nop
sbb
dec
lret
sbb
outsl
jnp
mov
int
or
pop
fistpl
enter
push
aaa
into
aas
sarl
or
push
sub
sub
flds
sub
bnd
push
lods
mov
aaa
fidivl
xor
pop
fiaddl
sahf
xchg
jns
repz
sub
rcrb
mov
mov
gs
xchg
js
pop
mov
mov
stc
mov
or
push
inc
lret
aas
dec
loop
push
movsw
dec
stc
jns
sub
rol
pusha
sbbl
in
sarl
xlat
loope
lds
lcall
aaa
or
sub
out
cli
lock
cmp
adc
xchg
push
push
xor
xchg
bnd
roll
fdivr
xor
push
cltd
ljmp
sbb
inc
add
ret
call
mov
aad
inc
pop
sbbl
dec
loop
jmp
daa
call
add
jns
sbb
cmp
mov
divl
xchg
sbb
lret
sbb
fsubl
fsubs
ret
jmp
add
jbe
outsl
insb
push
and
fdiv
mov
jnp
in
mov
pushf
fucomi
pop
js
mov
pop
repnz
mov
call
dec
jno
cmp
or
push
call
leave
je
push
add
mov
addr16
add
inc
or
pop
mov
pop
mov
and
push
jbe
xor
jne
mov
cmovge
push
fstpt
fldl
pop
iret
cs
xor
rcrb
mov
loop
push
pop
das
dec
shlb
push
jl
and
jbe
sub
push
mov
inc
xchg
add
add
rorb
xchg
jl
addr16
stos
fcoms
jno
mov
test
jo
test
out
adc
leave
rclb
stos
inc
and
dec
movsl
mov
loope
sbb
or
pushf
or
xchg
and
sub
jno
adc
test
jae
mov
int3
xchg
popa
adc
sub
xchg
lock
push
sub
ss
sbb
rclb
aam
je
sub
and
cltd
adc
data16
fimull
push
lret
cmc
jbe
dec
dec
les
pop
sub
lret
jp
push
mov
fs
sub
sub
std
nop
das
das
mov
call
lret
dec
arpl
cmp
inc
mov
in
aad
push
movsl
add
add
lcall
clc
or
mov
cmp
jmp
jne
fldl
xchg
scas
call
fistpll
outsb
mov
or
fisttps
push
lods
push
push
and
xlat
and
xchg
aam
in
xor
sahf
notl
pop
and
das
out
loop
sarb
adc
scas
inc
pop
pop
mov
loope
sub
adc
lret
push
outsb
cmpsl
ljmp
cli
clc
mov
mov
push
loopne
sub
xorl
test
lds
mov
out
fstp
jne
push
and
xor
aad
or
adc
jecxz
movsl
dec
push
insl
test
cmp
push
dec
xor
xor
mov
test
or
mov
mov
xor
dec
sbb
or
pop
in
mov
sbbb
pop
xchg
leave
fucomi
add
mov
cld
inc
xor
stc
sbb
loop
mov
mov
cli
xor
addr16
push
inc
mov
push
fsubl
lock
scas
hlt
repnz
movsl
test
lods
xchg
into
mov
cmp
aad
shrl
cmp
pop
or
pop
mov
sub
fnstsw
js
pop
stos
out
cld
mov
pop
mov
sarl
cld
fmull
in
cli
ficoml
imul
mov
lock
sub
sbbl
mov
divb
lret
xor
cmc
aad
mov
xlat
in
lds
jb
pop
in
dec
notb
mov
ret
inc
xchg
xor
jl
aaa
mov
cmp
cli
jmp
push
mov
out
scas
scas
and
pushf
xor
ljmp
jne
xchg
stos
inc
and
pop
push
fdivr
xor
sbb
add
pusha
pusha
test
jg
lahf
scas
xor
lock
push
stos
jns
fnstsw
sbb
jmp
xor
rorb
fists
dec
push
in
mov
dec
rep
gs
call
outsl
shl
mov
mov
fsts
inc
aaa
out
jb
out
pop
fisubrs
fidivrl
adcb
int3
cltd
sub
mov
test
xor
leave
jne
fidivrs
int3
loop
jmp
and
sub
repnz
mov
and
popa
adc
aad
mov
fldcw
stos
test
ja
in
pop
sbb
mov
and
ljmp
lods
inc
fisttpll
dec
fldt
adc
mov
dec
push
jbe
subb
es
fs
and
pop
data16
push
mov
testl
jns
inc
xchg
push
mov
aas
rorb
into
jno
in
arpl
cmp
mov
jae
repz
mov
push
pop
mov
jo
stos
push
insl
shrl
and
test
ja
stos
sarb
xchg
mov
cmp
lock
push
inc
scas
cmp
cwtl
jecxz
xor
jo
lahf
mov
sbbl
adcl
pop
mov
xlat
and
or
outsl
jmp
dec
cmpsb
movsb
das
cmp
cs
sub
aas
sub
and
adc
inc
push
xor
rcrl
orb
js
fbstp
mov
mov
test
sbb
nopl
cmp
mov
repnz
mov
push
mov
inc
push
loopne
push
lret
and
repz
inc
jbe
pop
ljmp
cmc
jbe
push
mov
xchg
jnp
sbb
daa
sub
pop
mov
js
popf
lds
fsubr
mov
push
ret
mov
add
fwait
jae
das
stos
out
pop
sarb
xor
inc
mov
test
or
ss
mov
sub
jo
outsl
andl
loope
xchg
pushf
dec
push
mov
dec
sbb
cmp
pusha
outsb
iret
xchg
jmp
dec
sahf
jecxz
and
out
test
add
inc
pop
mov
lret
std
cwtl
rcrb
xor
mov
imul
insl
xor
lods
shrb
jbe
xchg
inc
xchg
mov
push
adc
ret
xchg
stos
daa
push
dec
arpl
adc
pop
and
sahf
test
test
andl
cmp
lcall
pop
mov
xchg
dec
sub
mov
out
shrl
jecxz
sub
insl
inc
push
jo
sti
shlb
jns
fcmovnb
pop
pop
mov
jp
das
loopne
fcmovne
shrb
lods
add
adc
out
popf
cld
data16
and
std
sbb
push
mov
xor
add
xorb
mov
xchg
cli
xchg
pop
adc
outsl
cld
call
ret
jmp
loope
dec
sbb
xor
shrb
dec
arpl
int
iret
icebp
mov
inc
push
pop
mov
xor
sti
loop
add
orb
or
sub
mov
fwait
in
push
inc
inc
pusha
pop
sub
lock
xchg
sub
data16
dec
dec
and
rdmsr
aad
ret
mov
aaa
decb
vlddqu
int
aad
hlt
adc
inc
lods
and
mov
divl
sahf
fistpll
jnp
inc
das
addr16
in
out
cli
push
fwait
out
into
cmpsb
lock
xchg
lods
or
xchg
daa
cmp
f2xm1
lret
lds
fidivl
xor
in
mov
adc
daa
loop
push
xor
cltd
or
mov
inc
and
jae
mov
cmp
mov
jne
mov
sub
and
adc
or
rclb
jge
dec
pop
out
mov
mull
outsb
jle
jae
sbb
out
shl
js
dec
das
jo
lcall
or
test
and
and
js
test
xor
inc
push
jne
arpl
sub
push
sub
sub
subl
inc
insl
jge
fistl
add
or
aas
jb
inc
inc
loopne
dec
popa
fcoms
fmull
mov
inc
mov
test
jmp
sarb
inc
insb
decb
pushf
adc
jns
int3
jo
fsub
loope
out
pop
adc
lea
sar
popf
adcb
sub
int3
int
sbb
jl
push
ja
in
xor
les
cmp
mov
pop
enter
pop
arpl
jnp
test
mov
pop
mov
pop
nop
ljmp
adc
adc
or
testb
lea
mov
mov
mov
mov
push
jmp
sbb
push
jg
cmp
push
add
pop
int
cmp
xchg
pop
xchg
dec
mov
xchg
mov
out
leave
movsb
les
out
xchg
pop
test
mov
dec
dec
jg
inc
popf
sub
loop
jmp
and
lcall
xchg
js
dec
loop
mov
jecxz
subl
dec
loope
addr16
inc
cltd
xchg
jae,pt
ss
push
sbb
jno
adc
mov
sbb
mov
pop
jne
push
stc
iret
xchg
lea
mov
das
and
xlat
dec
or
pop
mov
fs
mov
into
jno
add
mov
out
jge
dec
call
inc
das
pusha
divps
jg
cs
rcll
push
pop
mov
and
jnp
insb
in
js
lcall
lock
lret
mov
std
pop
negl
adc
les
fcoms
cmpsl
or
sub
stos
inc
sbb
ja
aaa
add
insb
jb
enter
shlb
xchg
in
mov
in
addr16
fs
pop
push
mov
sbb
and
shrl
inc
mov
stc
ds
fidivs
negl
pop
lock
pop
inc
dec
inc
fistl
or
adc
push
insl
xor
push
ja
test
mov
xchg
cltd
inc
es
mov
out
movsl
movsl
xchg
lods
sar
mov
add
dec
cmp
sub
leave
fwait
ja
push
inc
or
sub
add
and
and
xchg
in
xor
pop
sbb
mov
mov
ret
xchg
jnp
ds
imul
or
push
pop
insb
fdivl
dec
repz
mov
cmp
and
push
jb
lock
sti
shll
mov
dec
sub
sarl
in
cmp
fidivrl
aam
add
in
imul
inc
test
nop
sub
or
dec
pop
bound
jns
xor
inc
hlt
in
mov
pushf
roll
pusha
pop
movsb
mov
mov
mov
mov
ret
jle
pop
push
int
xor
lcall
lcall
mov
fistl
or
in
cmp
cwtl
mov
cmp
std
fisttps
ljmp
pusha
data16
es
pop
fsubs
sub
js
loopne
pop
mov
and
push
adc
push
mov
pop
add
sbb
std
movsb
pop
mov
stos
cmp
jecxz
adc
rorb
jae
adc
mov
hlt
stos
pushf
pop
sub
ror
imul
in
pop
mov
sbb
pop
mov
int3
stos
aaa
ret
ucomiss
add
aad
cwtl
test
sub
mov
xor
pop
lods
repz
dec
mov
and
push
lods
lcall
mov
mov
enter
xchg
lock
mov
push
mov
and
imul
sub
scas
push
or
jnp
push
sub
and
sbb
fcomi
andb
je
mov
inc
pop
scas
js
mov
shrb
dec
cmp
scas
fidivl
mov
mov
xor
lock
aam
iret
mov
das
jmp
xorb
xchg
sub
sub
mov
cmp
jb
add
inc
clc
pusha
or
push
xchg
and
fldcw
push
lahf
jmp
rclb
cmp
aam
pushf
scas
add
sbb
and
pop
jmp
into
shr
rclb
sbbb
lret
outsb
iret
sbb
lret
xlat
xchg
dec
sbb
rcrb
aaa
jne
add
dec
ss
dec
call
dec
sbbl
addr16
out
and
dec
negl
je
pop
xor
cwtl
dec
ret
xor
test
pushf
inc
sahf
or
shrl
das
xor
fsubr
jle
mov
test
mov
sub
dec
inc
out
repnz
imul
lds
mov
dec
imul
pop
mov
int
xor
inc
cmpsl
push
jmp
dec
mov
std
pop
or
and
cltd
add
pop
pop
pop
dec
xchg
dec
mov
popf
mov
jmp
ret
jbe
outsl
cmpsl
lahf
shl
jae
pop
cmp
and
pop
mov
out
jae
sub
imul
jo
cltd
outsb
outsb
add
jmp
push
call
fcmovnbe
jb
in
orl
shl
je
daa
cmc
in
daa
mov
fisubrs
jo
loopne
test
test
pop
out
pusha
stos
rclb
je
adc
or
sbb
fisttps
loope
xchg
scas
call
aas
loope
je
mov
fiadds
xor
xor
sub
cli
mov
or
add
pop
lods
sub
lcall
lret
aad
bound
xchg
adc
cmpb
pop
push
dec
pop
sbb
clc
stos
mov
mov
push
je
mov
mov
inc
push
jns
shlb
pop
xor
aad
insl
shll
movsl
hlt
pop
test
bound
icebp
sbb
inc
sbb
sub
add
arpl
adc
repnz
in
ja
repz
flds
repz
hlt
data16
mov
repz
push
xor
xor
jno
fucomp
sbb
jo
dec
ret
flds
pop
adcb
mov
mov
push
adc
mov
cltd
jnp
mov
in
add
call
mov
xchg
or
pop
stc
jne
sarl
jne
push
dec
loop
insb
dec
fists
mov
aas
iret
add
es
inc
subb
loopne
or
out
inc
push
shrl
shrb
ja
bound
dec
sbb
cmp
fistpl
loopne
mov
inc
sbb
push
sbb
movsb
cmp
jne
clc
or
mov
rorl
inc
loopne
mov
xchg
bound
adc
outsl
push
or
jbe
stos
out
lods
lret
inc
jl
ss
cmp
xchg
or
or
mov
call
push
fxtract
sub
mov
jle
xchg
popf
dec
pop
outsl
jl
or
popf
shlb
mov
add
xor
adcl
add
mov
mov
decb
push
lahf
sbb
mov
sbb
jecxz
xor
or
push
push
out
push
dec
ja
shll
mov
insl
mov
psrlw
fcompl
jmp
push
cmpsl
repz
test
js
push
loopne
mov
js
aaa
pop
xchg
sub
sub
pop
cmpsb
jge
cmpb
scas
out
xor
roll
adc
sti
dec
in
xor
jecxz
and
push
out
push
push
std
push
push
push
xlat
loope
jo
xchg
les
xchg
push
jmp
aad
jmp
dec
mov
je
adc
mov
mov
cmp
outsb
or
inc
mov
nop
mov
popa
testb
mov
xchg
or
mov
fnsave
xor
imul
jp
gs
pop
ljmp
pop
dec
and
or
ret
enter
and
jo
pop
inc
adc
je
aaa
xor
out
ds
xchg
adc
jne
mov
jnp
fnsave
push
sbbl
mov
std
addr16
bound
add
xorl
mov
pop
push
daa
dec
mov
lcall
sub
mov
insl
das
aad
cmc
push
outsl
daa
pop
roll
cmpsl
mov
jo
mov
cmpsl
ret
das
mov
mov
mov
lock
push
mov
icebp
xchg
and
mov
mov
dec
cs
push
imul
pop
sub
mov
jle
fsubrl
loop
mov
test
gs
cs
push
or
push
mov
fcmovnbe
outsl
push
lret
cld
add
cli
xor
push
sbbl
jp
mov
xor
scas
mov
call
int3
pop
sahf
jb
out
ret
dec
pusha
scas
sub
xchg
add
int3
popf
in
jp
mov
mov
mov
std
pop
mov
popa
push
inc
sub
add
stc
ja
adc
ficoml
mov
sti
and
adc
subb
and
jbe
jp
insl
lods
in
add
rolb
mov
jge
movsl
adc
sahf
rcrl
add
push
pop
cmp
pop
add
push
jg
decb
dec
inc
scas
and
mov
popf
test
fxch
shlb
mov
xchg
mov
nop
mov
or
adc
push
insb
mov
xchg
aam
nop
push
shlb
dec
cmp
fstl
dec
lods
mov
scas
adc
jbe
pop
fcmovnu
popf
add
or
das
adc
cmc
sub
cmp
mov
orl
adc
test
inc
lahf
jbe
shll
fwait
push
mov
inc
in
dec
cltd
jns
cmp
fistl
and
adc
xchg
sbb
jle
add
ret
pop
mov
cmp
or
mov
mov
sub
pop
sub
adc
mov
sub
sarb
lret
inc
imul
mov
sahf
stos
outsb
pop
cltd
cmpsb
and
xlat
int
jmp
xor
sub
popf
adc
jns
bound
jp
ss
addr16
jp
imul
add
jno
rcl
and
push
scas
es
and
mov
dec
cld
popf
mov
or
lods
jmp
push
cmp
dec
bound
mov
rcrb
in
cmp
cmp
lods
ret
dec
xor
dec
scas
xchg
insb
push
bound
pop
mov
xchg
lret
enter
popa
dec
dec
ja
imul
loop
inc
add
enter
lret
pop
arpl
sbb
mov
mov
lahf
push
cli
mov
push
fsubrl
xorl
jnp
mov
cmp
ja
adc
dec
out
cld
jecxz
xor
fnstcw
pop
icebp
push
cs
imul
jge
xor
inc
cmp
jns
xchg
push
cld
add
dec
std
pop
mov
icebp
pop
scas
push
xor
test
adc
fdiv
mov
xor
cmpl
push
les
fistpll
movsl
push
dec
mov
xchg
lcall
mov
sbb
inc
mov
imul
sbb
add
inc
push
adc
add
fldl
fadds
dec
scas
and
roll
scas
mov
incb
sub
inc
in
decl
xchg
orb
and
and
or
push
fbld
mov
out
inc
fcomps
xor
test
out
add
ret
cltd
push
test
mov
and
rcl
ds
mov
ss
and
pop
lods
pop
repnz
pop
push
aaa
into
sbb
lds
mov
and
mov
mov
out
add
in
test
jb
repnz
jne
into
into
addl
mov
ret
push
pop
adc
jmp
xchg
nop
add
arpl
jb
dec
sti
lret
pop
fnstenv
jae
test
ljmp
mov
push
fnstenv
roll
insb
jo
aaa
ss
cmp
ljmp
fisubs
mov
jle
fstl
scas
aaa
into
loopne
or
bound
fadds
lds
mov
test
mov
daa
xchg
ret
push
pop
jmp
pushf
push
outsl
std
repz
pop
xor
stos
lds
scas
int3
arpl
pop
clc
iret
lcall
mov
imul
ds
jbe
cmp
bound
lret
and
xor
testb
adc
divl
add
addl
jmp
xchg
push
adc
inc
stc
nop
mov
or
inc
push
bound
int3
pop
in
jne
mov
jns
sbb
xchg
sub
dec
pop
mov
nop
imul
cmp
cltd
call
or
jbe
sub
or
cmp
cmpsb
sub
in
or
addl
jne
pop
mov
jge
and
sbb
jbe
into
or
add
aad
sbb
popa
cld
aaa
fisubrl
pop
test
bt
jge
das
insb
shll
or
iret
xor
test
xchg
popfw
daa
inc
add
popa
mov
std
sub
fisubrl
ret
inc
fdiv
dec
mov
imul
xlat
mov
add
sub
inc
test
mov
bound
xlat
lret
ljmp
xchg
or
rep
data16
inc
movsb
cmp
mov
and
cmp
ds
cmc
std
cmp
inc
push
push
imul
nop
xor
enter
mov
dec
xchg
xchg
shrb
mov
imul
mov
push
outsl
popf
mov
push
sbb
nop
loope
push
add
jmp
jl
xchg
xchg
scas
cmp
inc
xchg
les
repz
mov
mov
adc
int3
mov
sbbl
insb
ret
and
iret
dec
repz
lret
cmp
fists
adcl
fwait
push
mov
mov
xchg
test
ds
mov
adc
stc
mov
out
push
xchg
inc
jmp
and
stos
mov
loopne
fsubl
scas
sub
sti
fwait
sbb
dec
icebp
arpl
adc
aas
dec
sub
mov
mov
out
mov
je
into
jl
push
stos
out
push
pushf
cld
pop
push
lds
pop
mov
and
mov
gs
lahf
cmp
les
add
xor
cmp
cmp
ret
push
aaa
test
inc
call
push
cs
cmp
imul
dec
iret
mov
mov
push
fwait
xor
popf
stc
icebp
insb
xchg
ficoms
sub
mov
pusha
data16
arpl
ds
es
insb
jne
xchg
cmpsl
aad
pop
jecxz
hlt
cmp
fwait
mov
in
push
mov
std
or
pop
enter
dec
repnz
mov
pusha
aaa
xor
sub
cltd
dec
xchg
or
dec
push
aam
outsb
loope
xorb
cmpb
or
shlb
dec
cmpsb
loop
xchg
loope
adc
adc
push
pop
sbb
stc
int
lcall
sub
cmc
sbb
and
mov
push
push
fists
jns
leave
mov
repz
es
add
rclb
int3
and
fwait
int3
ja
outsl
fistps
into
test
inc
pop
mov
popa
cmp
ja
ret
xchg
repz
or
push
lcall
push
mov
cltd
sbb
dec
fwait
cmp
mov
jno
shrb
lahf
xchg
cmpsl
imul
pop
mov
jo
xchg
sub
jl
mov
and
enter
mov
pop
jecxz
fsts
push
push
mov
js
jo
rcrl
lea
test
or
pop
fsubrs
aam
pop
and
idivb
cld
jg
or
outsb
loope
pusha
jno
aas
mov
xor
cmp
xor
add
dec
mov
shll
jo
cmpsl
cmp
add
je
cli
lea
subl
imul
icebp
cmovno
fcmove
iret
mov
scas
mov
sbb
movsl
cmpl
cmp
cli
cmp
mov
in
fmull
xchg
inc
fistpll
sti
or
outsb
mov
sub
mov
scas
sarb
pop
adc
sti
mov
cmp
sub
lock
cmpsb
cmp
test
inc
popa
jg
push
xorl
iret
fcmovnbe
ret
pop
negb
sub
enter
lea
push
jmp
sub
enter
mov
mov
cmp
lea
mov
mov
imul
or
cmp
aad
xchg
fcmovnu
enter
adc
imul
call
pop
imul
add
adc
outsb
cmpsl
rorl
push
xor
mov
jns,pn
sbb
fisubs
fisttpl
cmp
cld
popf
repnz
mov
out
insl
loopne
mov
mov
enter
andl
notb
xor
inc
xchg
add
push
fsts
test
mov
fdivp
push
scas
mov
pop
leave
rclb
int
adc
rorb
pop
cmp
jl
jb
stos
pop
lock
cmpl
mov
xlat
dec
pop
mov
lahf
movsb
mov
stos
lds
stc
adc
xor
lret
inc
aad
inc
and
lcall
xchg
mov
and
mov
jnp
adc
mov
jne
lcall
and
mov
test
lods
add
sbb
int3
xor
gs
pop
hlt
mov
add
inc
xor
jp
test
arpl
fs
pop
ss
or
xor
arpl
sub
test
mov
push
mov
xchg
leave
pop
or
loopne
sub
lret
cli
inc
dec
test
int3
jecxz
xchg
xchg
inc
sahf
cmc
repnz
or
test
leave
and
lcall
cmp
es
and
push
enter
jmp
aas
mov
xor
lods
xor
jg
nop
loopew
gs
bound
fdivrl
popf
pop
inc
or
pop
mov
pop
fst
mov
mov
fmul
push
repnz
inc
arpl
fcoml
test
fdivl
xor
inc
xchg
fcoml
jecxz
scas
jl
lods
into
clc
mov
stc
inc
mov
lock
mov
xor
cli
cmpsb
and
sub
mov
pop
ds
mov
adc
jge
xor
cmc
jl
sbb
jno
mov
loop
mov
jge
dec
xor
js
insb
into
fistpl
fisubl
ds
pop
icebp
adc
xchg
and
rcl
xchg
cld
cld
inc
fninit
push
inc
insb
jno
je
popf
fistl
rcl
adc
fildll
jo
sub
inc
jmp
sbb
mov
xchg
loop
leave
pushf
or
inc
push
sub
add
repz
in
shlb
dec
dec
arpl
adcl
add
mov
sbb
sub
gs
dec
gs
std
lods
or
xor
adc
int3
pop
xchg
add
rol
repnz
jecxz
add
or
test
mov
push
xchg
mov
icebp
cld
imul
dec
in
icebp
pop
fidivl
notb
mov
jge
mov
jne
ret
cmp
lea
xor
xchg
mov
dec
xchg
add
das
pop
push
stos
jg
ds
pop
sbb
jle
imul
sbb
pushf
or
nop
dec
icebp
rorl
inc
jbe
arpl
xchg
fiadds
xor
mov
cmp
jnp
cmp
inc
fdivrp
pop
sub
out
fdivl
dec
enter
popa
jmp
jge
mov
dec
pop
dec
push
inc
call
test
ljmp
jmp
aas
lea
mov
mov
cmp
inc
movsb
jecxz
outsb
sbb
jg
mov
adcb
fstps
jno
push
adc
sub
dec
and
push
xchg
call
arpl
fnstsw
lock
adc
ss
pop
or
push
jl
in
pop
cmp
mov
in
xor
loopne
popf
mov
jge
jl
les
test
aaa
fcmovbe
inc
outsb
loope
jle
hlt
outsl
ljmp
nop
sahf
aam
cmpsl
xor
mov
push
xchg
push
mov
sahf
or
cli
and
je
add
sbb
andl
pop
movsl
pop
ret
jecxz
pushf
insb
insl
mov
mov
aad
inc
icebp
adc
inc
mov
pop
adc
movsb
test
rorb
lret
jge
out
inc
pop
dec
push
nop
push
mov
testl
jp
into
sub
or
jl
dec
test
mov
or
and
rorl
mov
push
push
in
push
inc
mov
cltd
dec
loopne
lahf
mov
mov
popf
push
cmp
or
pop
push
pushf
and
icebp
aam
and
add
loopne
cmp
js
mov
xor
movsl
lds
inc
fcom
add
pop
and
pop
inc
xlat
pop
lret
and
insb
int3
pop
fsubr
dec
test
dec
fbld
std
jp
sbb
cltd
inc
push
xchg
push
es
dec
sahf
xor
scas
push
aam
lsl
xchg
adc
cld
adcl
xor
enter
es
jmp
cmp
push
cld
cmp
jb
test
mov
lock
cmpsl
cmp
jge
leave
ret
popf
fsubrl
or
lea
mov
sbb
cs
inc
mov
pop
leave
pusha
mov
and
aam
insb
idivl
mov
sub
mov
xor
jmp
mov
or
xchg
and
iret
or
bound
movsl
add
out
addr16
inc
andb
mov
mov
cmc
mov
xchg
aas
push
cs
cmpsb
in
test
movsb
xchg
sahf
std
data16
push
imul
or
dec
icebp
xchg
out
cmp
xor
idiv
sub
std
jecxz
ljmp
outsl
loopne
rcl
pop
adc
negl
ss
sub
xor
ror
add
aaa
outsl
in
sbb
xchg
lret
adc
inc
popa
aas
xchg
imulb
pushf
pop
outsb
push
jno
cmp
xchg
je
push
cmpsl
roll
in
decb
mov
xor
mov
pop
repnz
sbb
mov
mov
jns
popa
xor
mov
mov
fidivrs
jae
aad
repz
iret
loop
sbb
lret
xchg
add
sti
cmpsb
cmc
test
or
sbb
xchg
pusha
xchg
sahf
sub
inc
push
pop
or
add
je
sahf
jno
orl
xor
bound
ret
adc
xchg
cmp
not
mov
dec
adc
cmpsl
sbb
add
mov
fisubrl
mov
sbb
push
push
mov
fdivl
mov
scas
test
lds
pop
sbb
out
pop
xor
add
rcrl
xlat
mov
fwait
jl
ficoml
cld
dec
fld
cmp
shlb
inc
xor
jo
loope
push
ror
jg
jae
mov
scas
inc
fcoms
add
push
lods
out
or
xor
ret
insb
push
sub
and
mov
add
inc
fs
inc
add
add
push
icebp
test
lods
jg
mov
loop
repnz
cs
add
jo
jae
sub
adc
and
and
push
and
or
lock
and
pop
dec
add
lods
push
push
pusha
fisttpl
fistpl
pop
push
in
popa
andl
xchg
mov
adc
stos
cmp
push
ljmp
enter
bound
adc
mov
int
scas
je
shrl
sbb
andb
or
andb
cmp
lods
mov
inc
sahf
bound
mov
push
add
js
sub
rcrb
int3
mov
push
insl
iret
pop
loope
pop
jge
push
xchg
dec
arpl
mov
mov
in
jecxz
cmp
and
and
addr16
add
push
mov
jns
cmpsb
push
mov
push
mov
jmp
iret
mov
pop
xchg
or
or
push
or
fbstp
loopne
push
push
fimuls
mov
movsl
icebp
and
test
cmpl
push
inc
nop
push
das
add
bnd
test
imul
jl
inc
push
insb
add
add
dec
mov
rcrb
lods
push
lods
add
xchg
mov
jns
sub
cmp
pop
cmp
pop
push
xor
fdiv
std
sahf
lods
sbb
addr16
add
sbb
add
lret
sub
hlt
cmp
or
mov
movsl
ficoml
push
in
inc
pop
call
out
and
ja
push
push
iret
mov
xchg
xchg
mov
inc
lret
jp
bound
in
adc
enter
and
push
test
inc
cmpsb
and
jbe
sti
push
jmp
and
outsl
pop
ja
push
in
ret
repz
movsl
stc
or
dec
add
stos
or
ret
jae
jnp,pn
loop
xor
cmp
inc
test
enter
cmp
or
lds
insb
andb
roll
dec
adc
pop
mov
push
jle
cmpsb
cmp
mov
inc
or
fbld
adc
lahf
adc
push
sbb
and
mov
inc
xor
data16
pop
imul
decl
insb
ret
mov
dec
dec
dec
out
repz
sbb
cmp
cli
mov
or
and
dec
xor
sub
out
or
push
inc
or
outsb
mov
int
or
xorb
clc
xchg
fistps
pop
adc
pop
pop
xchg
mov
xchg
sub
fidivs
js
iret
pop
std
lea
cmpsb
mov
sets
ljmp
int
xchg
jle
sub
push
dec
jge
int
pop
sbb
mov
out
stos
add
push
xor
shrl
inc
loope
fmulp
stos
incl
sbb
fwait
shrb
jns
jns
loope
dec
add
cmc
nop
icebp
mov
adc
out
orl
test
xor
xchg
or
lahf
push
or
sub
cmp
int3
push
mov
add
cmp
xchg
push
je
push
sahf
xor
in
in
inc
jmp
xchg
pop
in
out
icebp
ss
xchg
and
cltd
cmp
nop
or
or
dec
nop
mov
fldt
add
fbstp
jo
out
test
loopne
mov
es
data16
rcll
rcl
lcall
cltd
inc
adc
push
fwait
push
into
data16
jnp
daa
lods
push
out
popa
jl
scas
jbe
mov
and
test
mov
pop
or
xchg
cmp
shll
adc
addr16
incl
xor
pop
ss
arpl
mov
stc
mov
xor
xor
fisttpll
shl
test
or
ss
mov
rcl
arpl
fldcw
sti
fiadds
mov
jl
xor
adc
mov
jbe
int
in
jae
and
dec
mov
mov
push
pushf
pop
mov
repz
adc
shl
sub
inc
pop
imul
inc
mov
pop
and
dec
lahf
push
ret
push
popf
hlt
es
cltd
adc
mov
ficoml
mov
pop
addl
and
jns
iret
pop
mov
int
cmp
loop
adc
test
hlt
lret
rcrb
sub
mov
push
andl
in
xor
jg
jmp
aas
xchg
and
imul
jb
push
repz
outsb
rcrl
fidivl
insb
pop
sbb
xchg
or
dec
aaa
fimuls
std
or
test
push
inc
int
inc
pop
loopne
mov
in
test
mov
std
push
in
and
adc
loop
mov
cmp
or
jo
gs
mov
adc
xor
xor
arpl
in
dec
inc
ret
inc
out
out
adc
in
cmp
xor
clc
xchg
dec
cmp
or
and
int
fs
and
rorb
xchg
cwtl
pop
mov
sub
xchg
sub
lcall
push
popa
aam
icebp
add
cmpsl
mov
push
adc
dec
mov
mov
cmp
push
pop
outsl
or
ds
mov
pop
cmp
aas
mov
add
sbb
sub
mov
sbb
test
inc
sbb
movsb
jmp
dec
xorb
mov
xchg
popa
gs
int
inc
pop
ret
pop
andl
jns
xchg
cmp
or
insl
dec
adc
into
jb
push
scas
inc
es
mov
out
int
fwait
imul
xor
or
mov
hlt
push
pop
sar
gs
insl
scas
push
cmpsl
sbb
repz
fstpl
sbb
enter
sub
push
jne
outsl
mov
lods
pop
mov
inc
lods
rcll
xor
mov
jno
add
sbb
gs
inc
sbb
stos
sahf
ss
out
jno
dec
rorb
xor
stos
icebp
inc
loopne
sbb
jbe
push
addr16
leave
or
or
dec
ficoms
mov
orb
or
outsb
sub
dec
lret
leave
add
and
and
in
push
and
in
clc
movsb
repnz
pusha
sub
push
aas
rcrb
push
jbe
fimull
out
xchg
pop
test
mov
mov
aas
dec
add
or
inc
push
jno
cltd
jl
stc
and
sbb
nop
jl
lock
cltd
xchg
dec
jle
dec
lock
pop
imul
js
mov
push
cmp
dec
or
lods
cmp
sbb
scas
vpmovusqb
ret
adc
ret
pusha
sub
mov
ficomps
cmpsl
xchg
test
dec
cmp
sbb
dec
push
fwait
pop
or
xor
mov
popa
test
mov
nop
dec
cmc
mov
mov
pop
fisttpll
andl
repnz
or
outsb
adc
cmc
sub
adc
xlat
test
dec
bound
push
ja
subl
jo
dec
or
pop
push
xchg
sahf
mov
xchg
sub
sahf
sub
jecxz
push
adc
cmp
int
nop
inc
and
pop
stc
aaa
ja
ljmp
outsl
repnz
cmp
adc
fstl
push
push
sub
loopne
mov
inc
test
inc
sub
fbld
pop
lock
push
push
mov
pop
cmc
adc
push
sbb
mov
xor
aad
fcmovnb
mov
sbb
leave
mov
ja
adc
mov
outsl
call
in
push
jbe
jno
shrl
sbb
cs
push
and
or
cld
pop
jo
test
xchg
into
adc
mov
aad
jg
adc
push
mov
mov
cmc
pushf
and
ss
test
pop
repnz
push
test
xor
push
int
cmpsb
cmp
popa
mov
pop
xor
or
arpl
cs
ljmp
xor
jmp
mov
jbe
or
add
jmp
xchg
aas
dec
cmp
mov
lds
ret
mov
xchg
mov
push
push
lahf
push
pop
pop
mov
jg
mov
jmp
cmp
fimuls
pusha
push
jl
mov
and
inc
sarb
jnp
jbe
popa
jl
cmpl
out
mov
mov
cmp
and
jns
cmp
shl
shlb
xchg
sub
cmpsb
xchg
sub
lods
and
xchg
inc
cmp
inc
jmp
and
inc
out
xor
jmp
mov
pushf
cmp
lods
xchg
adc
ss
pop
push
mov
cmp
lret
int3
fadd
es
icebp
cmp
out
js
std
xor
cmc
or
pusha
jl
sub
mov
sub
daa
mov
cmp
mov
pop
inc
decb
mov
sarl
jl
pusha
shrl
negl
jno
pslld
dec
jb
les
clc
mov
ljmp
jns
mov
jb
insl
repnz
imul
fadds
and
ficoms
pushf
fucomp
stc
inc
or
pusha
pop
mov
insl
out
hlt
sub
das
les
xorb
mov
fnstsw
cwtl
cli
dec
push
push
repz
sbb
lods
ljmp
mov
xchg
stos
lea
sbb
rcrb
mov
cs
pop
cmp
add
pop
arpl
mov
out
shll
aas
stos
cmp
fld
push
or
jae
or
cmpsb
xchg
out
imul
lcall
stos
fisubs
push
pop
popf
xor
add
scas
repnz
cmp
outsl
and
push
fists
clc
mov
in
out
xchg
pushf
iret
push
mov
jns
test
cli
push
fistpl
pop
push
testb
movb
dec
in
jno
xchg
cmp
popa
imul
cmp
je
sub
sub
add
xorb
iret
movsb
push
lcall
push
sarb
add
pop
fisubs
andl
sahf
inc
lcall
daa
cmp
mov
xlat
xor
mov
push
dec
push
adc
jg
add
cmpsb
dec
in
xor
or
mov
hlt
sub
pusha
sar
lahf
jmp
addl
leave
sbb
push
lods
push
mov
jns
rcrl
shl
mov
push
xor
xchg
hlt
insb
aas
adc
les
mov
sub
push
repnz
in
rorl
subl
fucomip
jb
pop
rolb
cmp
clc
fcmovnb
movsb
and
shll
dec
aad
sti
ret
out
add
push
cmpsb
or
pusha
fldcw
lret
dec
mov
fdivr
int
pop
outsl
ss
push
in
test
fsincos
fwait
or
or
clc
and
iret
out
leave
dec
ret
leave
int3
out
and
call
or
pushf
daa
call
call
mov
rcrl
pop
scas
and
out
dec
mov
roll
mov
pop
jmp
mov
dec
hlt
push
imulb
adc
insl
add
sbb
scas
push
aad
pusha
sbbl
add
out
add
ret
and
jb
pusha
cwtl
push
inc
mov
mov
xorb
mov
bound
or
mov
int
inc
jnp
xor
pop
jbe
push
adc
or
xchg
das
xchg
rcr
nop
or
mov
fistpl
fsubs
les
ss
pusha
notl
pop
shlb
mov
jmp
cmp
mov
push
xchg
aaa
ret
sub
aad
mov
fsubl
jge
out
enter
testl
fmuls
sbb
scas
ret
push
push
js
fistpl
sarl
or
jl
xchg
cmp
loopne
lods
fsubrs
loop
lret
xor
mov
pop
mov
ds
or
fisubrl
pop
dec
pop
sub
inc
dec
cwtl
pop
mov
sub
jo
je
xchg
xchg
sbb
cltd
shl
mov
jmp
dec
outsl
dec
hlt
mov
pop
and
out
mov
fwait
pop
imul
jb
xchg
sbb
mov
push
cmp
cltd
or
cmp
xor
add
dec
addr16
out
sar
aam
jp
pop
filds
cmpsl
loope
mov
mov
jbe
xor
xor
jbe
lds
not
push
xor
shll
mov
jbe
stos
xor
scas
inc
push
inc
out
mov
fdivp
lock
jle
and
jl
cli
mov
sub
testb
lods
movsb
jmp
mov
add
jb
mov
daa
mov
or
fsubrl
inc
arpl
or
xchg
sub
xchg
and
shlb
js
outsb
jge
jge
push
pop
mov
jmp
aaa
dec
arpl
push
lods
cmpsl
xchg
cmp
loope
idiv
dec
add
jae
jmp
add
repnz
sbb
adc
lds
aaa
add
dec
or
mov
ret
mov
adcl
fstpt
jbe
mov
mov
or
pop
pop
lcall
cwtl
in
and
mov
divl
ret
pop
adc
gs
mov
add
clc
cmp
mov
or
lds
jl
lods
inc
jns
sub
ljmp
inc
leave
fstpl
xor
cmc
movsl
fwait
mov
cwtl
add
data16
jns
std
sbb
lret
xor
fs
inc
add
sbb
and
mov
fildll
ljmp
andl
daa
cmpsl
cmp
clc
out
popf
fstps
push
insb
mov
xor
jmp
and
cmp
in
sub
push
xor
adc
jae
push
hlt
loope,pt
vxorps
out
sbb
jns
rcrl
jnp
hlt
sub
jle
lods
and
jne
push
mov
int
inc
pop
in
mov
inc
cmp
inc
xor
pop
push
js
jl
ja
repz
adc
out
jmp
iret
in
outsb
lds
or
pop
add
adc
push
push
sbb
adc
mov
imul
push
movsl
fwait
call
cmpsb
addr16
loope
jp
dec
dec
xor
call
mov
sbb
pop
cltd
sub
pop
mov
add
leave
mov
es
inc
cmpsl
mov
push
jmp
adc
add
das
nop
insl
mov
lahf
mov
out
cmp
pushf
fldenv
mov
decl
jmp
or
aas
xchg
mov
in
sbb
adc
push
hlt
pop
mov
dec
pop
pop
out
push
sahf
out
aam
repz
xchg
in
test
adc
stos
pop
xor
sbb
sti
adc
push
or
mov
shrb
pop
mov
cvtps2pd
inc
pop
and
movsb
add
cwtl
adc
sub
mov
js
mov
mov
xchg
add
xchg
pop
leave
add
cmp
jecxz
adc
push
mov
push
hlt
ja
inc
cmp
add
clc
lcall
test
mov
loopne
inc
bound
mov
dec
loopne
push
shll
bnd
pusha
loop
push
hlt
jns
std
cmp
inc
in
push
xchg
ja
xor
push
rol
das
mov
sahf
sti
jp
bound
pop
xchg
add
or
sbb
xchg
or
mov
xchg
rclb
cltd
je
cli
cmpsb
cmp
shrl
fnsave
mov
int3
arpl
and
cmp
jbe
out
movsl
das
aas
loop
inc
lahf
pusha
ja
jge
mov
jb
push
cs
sub
jns
outsl
mov
dec
aaa
fisubl
mov
xchg
push
lret
mov
jg
jnp
inc
mov
push
jmp
lods
dec
loop
incb
lods
or
sti
pop
lahf
xor
and
mov
insl
cmp
xor
fcompl
sahf
jecxz
in
shlb
cmp
into
cmpsb
lods
arpl
xchg
mov
xlat
lret
imul
add
dec
push
test
mov
fsubrp
jle
enter
je
pop
sub
lret
xlat
pop
add
repz
dec
pop
fisttpll
dec
mov
dec
into
popa
roll
dec
pop
testl
mov
push
sub
adc
das
sarl
inc
pusha
xchg
xchg
movsl
popa
mov
xchg
lock
mov
push
addr16
jg
inc
out
fs
imul
cltd
lock
xor
xor
les
cmp
hlt
adc
xchg
jmp
cs
and
or
mov
aam
ds
shl
jnp
fcompl
rorl
xchg
lea
aad
out
push
lahf
pop
mov
icebp
dec
out
xchg
clc
push
les
add
outsl
cwtl
cltd
jl
cld
das
jg
mov
imull
nop
ret
pop
mov
adc
jae
pushf
xor
xchg
fsub
push
mov
xchg
insl
outsb
inc
data16
es
xchg
das
mov
push
ret
flds
jg
dec
mov
xchg
mov
dec
mov
fbld
mov
sbb
sub
sub
push
push
or
shll
adc
add
adc
cmp
mov
dec
xchg
movswl
adc
ss
out
push
insl
iret
inc
xor
hlt
mov
cld
adc
mov
shrb
mov
stc
roll
pop
hlt
stc
adc
sub
mov
insl
add
fsubrs
sub
inc
aas
fsubrs
dec
aad
cld
popa
add
dec
xchg
add
mov
loope
inc
pop
jmp
jle
hlt
lds
xlat
adcb
cmc
push
push
popf
sbb
ljmp
mov
xchg
or
and
xchg
sarb
mov
std
incb
jmp
xchg
repnz
xor
push
adc
push
inc
je
sti
icebp
fcmovnb
pop
or
sub
lea
cld
js
pop
jecxz
fsubrs
add
insb
cmpsl
jle
mov
test
les
mov
cmp
shll
push
stc
jle
insl
int
ljmp
pushf
pop
mov
insl
or
sub
sub
dec
push
xor
push
add
fsubr
sti
xchg
fstpt
sub
and
faddl
inc
push
jb
orl
xchg
jbe
popf
mov
shlb
adc
repnz
ss
inc
ljmp
push
insl
sub
jge
sbb
add
cltd
adc
jg
in
jbe
push
push
dec
aaa
subb
dec
mov
sub
or
fs
jp
cwtl
icebp
ret
sbb
jge
jns
mov
push
xor
xor
fnstsw
push
iret
rep
jle
sbb
sbb
out
pop
icebp
jp
movsb
hlt
xchg
dec
ja
dec
ret
or
ret
cmp
mov
shrb
mov
icebp
nop
xchg
sub
mov
dec
outsl
sbb
cltd
xchg
push
repz
jmp
mov
dec
pop
xchg
sbb
lds
push
mov
insb
push
cmp
inc
jp
data16
shll
js
hlt
ret
sub
jmp
dec
in
mov
ljmp
lcall
adcb
cmp
xchg
mov
xchg
jle
push
imul
xor
outsl
and
inc
sub
jae
xor
mov
inc
loopne
or
xor
jle
xlat
test
pop
pusha
mov
pop
jle
cwtl
stos
xchg
push
test
lods
xchg
sub
ret
mov
icebp
push
das
or
fistl
outsb
shll
inc
cmpsb
cmpl
dec
test
pop
or
outsl
cmp
cs
mov
repnz
push
test
mov
push
xchg
sub
mov
sahf
ja
lods
filds
mov
add
mov
mov
nop
or
cmp
pop
loop
push
adc
or
xchg
cmp
lods
fsubl
arpl
sbb
xor
das
mov
or
pop
xor
xor
xchg
push
lret
mov
pop
jp
and
sahf
or
nop
out
jg
nop
stos
sbbl
push
and
cmp
mov
shlb
jne
mov
sbb
inc
dec
sti
enter
push
xor
xor
testb
and
push
pop
xor
into
inc
fdivrl
test
push
adc
arpl
cmc
insb
xor
arpl
lret
mov
mov
test
mov
stos
xor
movsl
in
jge
push
mov
test
push
cmp
push
mov
leave
loopne
inc
pop
push
xlat
and
push
aad
fadds
es
mov
arpl
dec
push
xor
shll
jge
jns
lock
lods
clc
into
push
rcll
fucomp
xor
out
lock
stc
push
xor
pushf
scas
movsl
push
adc
adc
jle
xchg
pushf
sbb
jp
lods
fstl
out
push
test
and
dec
pop
mov
dec
in
icebp
mov
lret
out
insb
fwait
and
and
xchg
iret
scas
inc
hlt
xchg
ret
in
mov
xor
popf
fs
xchg
push
or
mov
dec
cmp
jb
sub
jbe
inc
sar
adc
icebp
mov
rorb
or
mov
xchg
test
add
xchg
out
call
or
sub
rol
pop
and
cld
push
and
lock
push
push
repnz
or
shlb
and
fimull
arpl
mov
test
hlt
and
sti
xchg
mov
add
xchg
jmp
sbb
fsubr
or
sbb
sub
xlat
in
lret
inc
mov
jbe
imulb
or
xor
fildl
dec
dec
add
xor
pop
aas
fxch
xor
pop
jns
lods
sti
xchg
push
out
xchg
or
sub
mov
mov
cltd
mov
inc
xor
cmp
aas
imul
push
negl
aas
add
xor
popw
dec
idivb
out
icebp
inc
sub
hlt
pop
push
mov
inc
fiadds
scas
mov
dec
inc
sbb
and
pusha
add
int
xchg
fldenv
je
ja
shlb
ja
lret
mov
fdivrl
sbb
adc
adc
or
add
aam
xor
mov
rolb
call
shl
bound
push
cmpsl
or
pushf
std
mov
xor
sahf
leave
mov
cmc
push
add
loop
cmp
sbb
mov
xor
xchg
mov
test
pop
sbb
add
jge
jl
out
jnp
ret
cmpsb
sbb
clc
sbb
popa
rcrb
scas
mov
bound
aas
mov
pop
add
push
pop
inc
inc
cld
mov
cmp
js
or
xchg
arpl
ffreep
or
fstpl
push
add
insb
mov
outsl
dec
std
xchg
mov
ficompl
xchg
jno
mov
clc
sti
int3
cs
cmp
mov
pop
imul
pop
mov
ret
outsb
xchg
shl
inc
cli
pop
inc
imul
and
decb
loopne
xor
push
jle
xor
xchg
das
sub
sub
jns
jecxz
test
bound
ret
in
test
inc
pushf
jb
xchg
sbb
hlt
dec
cmp
fwait
add
jp
pop
jns
mov
daa
or
xchg
or
dec
jmp
jb
pop
dec
notb
addr16
jne
js
xor
fwait
xchg
cltd
loop
mov
ja
mov
in
push
jne
and
cs
pushf
cmp
out
jge
sub
cmp
enter
push
xorl
mov
es
push
mov
ds
outsl
pop
outsb
sub
or
mov
in
jge
das
addr16
mov
sub
icebp
mov
adc
adc
sbb
inc
rol
repnz
cltd
cmpsl
jmp
stos
mov
or
mov
xchg
push
sbb
lret
popf
pop
and
jae
mov
sbb
repnz
add
mov
hlt
mov
mov
repnz
push
or
dec
leave
xor
and
mov
std
sub
aad
adc
pop
sbb
mov
fstl
sub
push
and
rcrb
rolb
or
in
cmp
adc
mov
loop
out
ret
sahf
adc
jbe
mov
arpl
insb
mov
into
into
lods
mov
inc
inc
addr16
in
loopne
adc
dec
xor
addb
xchg
cmc
lret
loopne
jnp
fidivs
mov
int3
pop
cltd
popl
mov
out
cwtl
cmc
push
mov
fs
in
mov
push
aaa
insb
sub
sahf
jne
mov
jns
sub
dec
roll
repz
mov
cltd
jmp
mov
mov
pusha
ljmp
ficoml
mov
outsb
sbbb
add
les
xor
jbe
pushl
stos
jle
lret
push
loop
add
and
push
fidivl
mov
ss
mov
cmp
xchg
add
ljmp
push
outsl
jp
xchg
mov
call
rolb
adc
mov
lea
int
nop
pop
jle
sub
xor
scas
inc
jns
fbstp
ret
xor
pop
cmp
ds
insl
xor
out
int3
and
inc
inc
nop
sbb
sbb
insb
sti
ficoms
nop
mov
mov
add
adc
out
mov
in
cmc
dec
or
xchg
dec
aam
mov
stos
pop
inc
scas
adc
mov
roll
inc
push
aaa
scas
dec
scas
popf
fidivs
dec
mov
ja
push
les
rcrb
popf
lods
shrb
int3
addr16
mov
mov
movsb
cmpsb
mov
xorb
mull
cmpsl
ds
xchg
cli
push
mov
lds
xchg
mov
mov
mov
adc
mov
or
rcll
pop
mov
inc
int
nop
dec
ljmp
cs
das
inc
cld
mov
pop
inc
aam
movsb
cmp
mov
mov
add
push
pop
mov
add
xor
test
cmp
insb
scas
sbb
pop
adc
imul
push
pop
rcl
out
mov
sbb
mov
push
out
lret
jecxz
adc
sbb
add
stc
imul
into
movmskps
xchg
out
dec
mov
out
or
xor
fadd
or
adc
pop
enter
inc
xor
add
gs
lods
cmpsl
pop
call
fcmovnu
cmc
repnz
cmpsl
add
pop
movsb
enter
imul
jno
push
gs
mov
mov
loopne
loope
fs
cltd
jno
cmpsb
stc
enter
pcmpgtb
xchg
fbstp
xchg
or
pop
mov
jle
xor
lds
testb
add
xor
xchg
xlat
dec
push
mov
pop
jp
xchg
jb
leave
mov
push
jmp
jb
jo
xor
lds
jecxz
enter
sti
aas
add
jne
adc
mov
ret
fwait
mov
xchg
insb
adc
int
mov
pusha
push
test
or
data16
cld
pusha
jno
iret
cwtl
and
jmp
fwait
push
aad
xchg
jl
cld
lods
cmc
or
mov
int3
sahf
andl
les
dec
jecxz
iret
pop
sahf
ror
inc
les
or
or
mov
mov
fistps
pop
jns
or
push
sti
xchg
add
aaa
xor
jmp
fdivl
outsl
jl
push
jno
mov
inc
xchg
push
loopne
rclb
jns
add
fstpt
add
inc
scas
xchg
and
mov
pop
and
lret
mov
shll
ljmp
pop
sbb
int
iret
cmc
mov
in
icebp
sub
xchg
repnz
in
in
xor
daa
nop
push
pop
xor
pop
mov
sahf
push
jnp
push
js
and
add
aad
ja
mov
mov
imul
sub
sub
dec
pop
cmp
mov
hlt
or
out
popa
clc
mov
imul
outsl
mov
cli
imul
xor
pop
popf
cmpsl
sarl
or
push
jns
sbbb
add
xchg
hlt
cltd
inc
or
in
mov
je
fldt
inc
sub
add
idivb
push
insb
stc
mov
cld
xlat
and
aad
std
fbstp
pop
xchg
aam
aad
int3
cmp
ret
cmc
outsl
push
push
jmp
ret
pop
sar
rol
stos
dec
pop
sbb
mov
es
cld
mov
xor
push
add
xorb
aaa
mov
ja
scas
pop
sub
lods
xchg
mov
inc
add
xchg
mov
sbb
js
into
adc
popa
or
fdivrs
or
outsb
mov
aam
ret
add
jno
dec
adc
mov
xchg
pusha
pop
push
mov
std
sbb
cltd
xor
mov
add
lret
in
mov
popf
xor
push
add
cmp
pop
push
repz
and
js
xor
insl
xchg
nop
push
in
dec
enter
lcall
jo
lret
orl
push
test
mov
ret
dec
dec
std
arpl
mov
jle
shlb
inc
push
scas
out
stos
dec
pop
xchg
mov
or
jge
shrl
cltd
enter
dec
xor
icebp
lcall
in
pushf
push
cmpsb
imul
adc
mov
add
faddp
jb
push
lret
movsb
fs
aam
fucomp
jae
mov
aam
xor
movsb
iret
push
xchg
push
inc
sub
int3
or
in
out
fdivrs
mov
cmp
into
movsl
cltd
fidivrs
xchg
push
jne
xchg
and
std
pop
imul
push
and
loopne
aad
call
xor
push
arpl
jp
lret
stos
int
sahf
push
rorb
pushf
imul
jno
inc
loop
incb
sub
outsb
pop
cmpsb
dec
add
sbb
jne
pushf
sub
push
nop
les
mov
rorl
call
mov
scas
inc
jg
push
jb
in
stos
push
scas
add
int3
bound
mov
jbe
mov
gs
pop
xor
int3
jecxz
push
fists
shl
mov
xchg
pop
hlt
idivl
add
sbb
xchg
mov
fcmove
addr16
adc
jo
fsubp
movaps
out
jo
add
sbb
cmpsb
test
or
pusha
leave
insl
mov
adcl
int3
insb
jae
sub
and
mov
fs
lcall
fcoms
cmc
jp
fiadds
mov
incl
in
in
shlb
mov
dec
sti
in
add
pop
xor
ljmp
pusha
cmc
mov
sub
inc
xchg
dec
fistpl
cmp
add
or
flds
sbb
mov
pop
in
addr16
test
lods
cmp
movsb
inc
repz
xor
adc
jns
jae
mov
in
decl
je
iret
loopne
adc
mov
push
jge
clc
ja
pop
adc
stc
int
in
test
pop
sbb
jle
inc
lahf
add
or
or
sub
fwait
iret
mov
or
leave
movsl
in
adcb
aas
lcall
pop
push
push
sub
test
mov
fwait
cmp
dec
lret
mov
adc
cmp
push
call
push
add
mov
fs
in
push
addr16
data16
test
iret
dec
push
cld
jl
fildll
sbb
or
xor
les
lret
in
xchg
dec
xor
jge
and
and
addr16
push
popf
div
out
outsb
enter
cmp
jg
push
xor
xor
push
add
jg
arpl
mov
clc
aas
scas
xchg
adc
and
adc
cmp
push
fidivs
jo
out
mov
aaa
sub
xor
movsl
pushf
xchg
cs
jnp
jmp
dec
lret
cld
imul
cmpsb
jecxz
cli
daa
jnp
jle
mov
or
inc
mov
loop
add
adc
lods
addr16
and
push
xor
rorb
ljmp
repnz
push
push
lcall
and
inc
out
cld
inc
dec
xchg
xor
xchg
mov
or
enter
loopne
je
inc
dec
add
loopne
xor
test
push
fists
sub
dec
mov
dec
fstps
in
sbb
push
mov
add
lret
and
es
sar
int
lret
dec
in
pushf
cmp
shr
xor
dec
decb
push
stc
pop
rorl
in
sbb
add
pop
inc
dec
jb
fiadds
pop
cmp
dec
adc
or
mov
sub
mov
cmp
mov
and
push
insb
cmp
mov
dec
mov
pop
rcrb
sbbl
pop
add
add
pop
xor
cmpb
aam
mov
jmp
ds
call
or
add
jo
popa
jne
int
lea
test
neg
sub
pop
xchg
adc
and
cld
or
das
in
dec
es
xchg
or
les
hlt
or
push
cmp
shl
push
inc
cmp
int
movsl
mov
jmp
in
jle
ds
fildll
cmpsl
pop
cwtl
add
pop
sahf
dec
loope
popa
je
lods
mov
outsb
jno
and
xor
dec
decb
ss
pusha
inc
add
jl
subl
xchg
les
repnz
jp
mov
leave
and
daa
mov
pop
in
jge
adc
out
mov
mov
adc
pop
xchg
ret
ljmp
out
dec
pusha
jb
pop
cmp
mov
gs
pop
scas
or
lock
xchg
adc
enter
push
jp
dec
lods
ret
fsubs
pop
or
adcb
or
sahf
or
fldenv
into
loopne
mov
shl
jl
adc
fwait
test
add
je
fisttps
and
jle
lcall
sahf
push
xor
hlt
shlb
out
push
lahf
xor
mov
fidivs
mov
push
addr16
loope
sar
cld
mov
lahf
push
add
jecxz
xlat
aad
jo
dec
popa
data16
sarl
sbb
pop
pop
in
xchg
shrb
ror
pop
sbb
cmp
and
mov
fdivp
mov
and
aaa
mov
sbb
mov
or
dec
mov
dec
sarb
jns
das
sbb
mov
push
inc
xchg
aaa
ljmp
add
xchg
movsb
cmp
lea
xlat
xchg
int3
ss
movsl
inc
in
rorb
xor
mov
push
popf
rolb
xor
jae
add
adc
inc
cmp
jo
sbb
in
push
enter
cmp
shl
xor
mov
jge
mov
jnp
lahf
cmp
sub
jmp
mov
iret
out
aaa
sbb
xchg
or
mov
loope
sbbb
and
xchg
xlat
into
sbb
mov
fdivl
stos
pop
jo
fwait
cli
daa
loop
push
in
stc
fdivl
and
adc
ret
popa
sbb
int
pop
mov
push
and
inc
int
shlb
pop
lock
dec
mov
or
xchg
mov
mov
sbb
jb
xor
loopne
call
adc
lcall
pop
xor
cs
sub
bound
adc
fwait
mov
in
or
push
loop
push
sbb
int
ja
dec
mov
in
scas
pop
fcoml
inc
xchg
loopne
shr
in
or
lock
adc
lds
cmp
mov
jle
lret
fnstenv
loope
fs
inc
mov
sbb
gs
or
add
mov
push
mov
scas
test
ret
mov
xor
and
ljmp
push
mov
pop
in
add
les
jno
and
push
xchg
daa
fistpll
fucomp
inc
out
add
pushf
outsl
scas
push
nop
lahf
mov
mov
cmpb
sub
stc
insl
or
inc
test
pop
sbb
jmp
dec
lcall
frstor
add
popf
xorb
daa
xor
mov
push
sti
les
sub
repnz
testb
shrl
cmp
mov
sub
or
pop
push
jno
add
push
stos
and
or
dec
loopne
jnp
xchg
sub
aad
dec
push
mov
in
inc
pushf
mov
or
adc
outsl
nop
sub
test
xor
fnsave
inc
lret
xchg
push
shlb
cmpsl
sbb
add
mov
lahf
add
mov
stos
sbb
shlb
lods
mov
sahf
mov
mov
icebp
fwait
inc
fists
jae
lds
xchg
pop
out
ljmp
mov
stos
cmc
sub
xor
and
jne
sub
or
dec
push
aam
js
or
fcom
xchg
sub
mov
push
out
sbb
ds
cltd
cmp
push
in
push
test
test
test
xchg
filds
jmp
mov
mov
pop
ljmp
daa
or
push
lahf
ss
jae
inc
xor
mov
xor
xchg
pop
test
leave
rorl
xchg
arpl
jnp
dec
mov
pushf
push
int
mov
arpl
dec
iret
aam
outsl
adc
enter
xlat
outsb
jg
dec
bound
mov
sub
pop
les
add
iret
repnz
gs
int3
rorl
dec
rorl
incl
pop
mov
mov
cmp
sub
pop
cmc
pop
popl
lret
bound
fsubrp
push
adc
lock
es
or
xchg
xchg
pop
test
mov
fs
pop
push
fcomps
and
dec
dec
mov
stos
sbb
dec
jg,pt
adc
cli
pop
sbbb
iret
cmc
inc
sbb
mov
cmp
mov
insl
inc
add
pusha
test
mov
test
pop
rorb
fbstp
mov
cli
xchg
imul
scas
out
sahf
and
jae
mov
sbb
enter
insl
mov
xor
popf
leave
inc
sub
push
push
mov
dec
in
lock
inc
fstp
sbb
dec
std
fs
cs
xor
mov
mov
mov
addps
jle
stos
add
jmp
mov
xor
dec
iret
cmp
pop
jo
jno
jns
ficompl
mov
lahf
out
ljmp
fbstp
xor
jmp
lret
xlat
xor
aas
scas
mov
mov
fisubl
adc
lods
lods
fnstenv
xchg
insl
mov
shll
sbb
mov
push
mov
fisubl
adc
les
pushf
xor
and
xor
fdivl
mov
add
push
push
dec
push
inc
jge
fsubrs
xchg
xlat
cmp
mov
cmp
or
adc
rcrl
jl
js
clc
cmpl
jae
mov
test
stos
aas
ret
fidivrs
es
imul
cmp
sub
imulb
fdivl
fnstsw
rcll
lahf
sbb
lock
dec
cmp
jge
in
fs
pop
aas
lret
outsb
sbb
sub
aad
lds
sub
aas
sbb
and
mov
cmpsl
lea
xchg
sbb
pop
fisubrl
ja
out
jecxz
jmp
push
jecxz
pop
orl
ljmp
in
cmpsl
imul
repnz
mov
ffree
pop
pop
ret
jns
mov
je
mov
cld
xchg
pop
and
jnp
jns
jp
pop
inc
fsubs
push
test
sbbl
adc
cmp
icebp
mov
mov
mov
dec
xchg
ffree
jge
test
ret
or
mov
mov
stos
sbb
add
mov
cmp
adcl
pop
inc
sub
es
xor
sub
out
sub
jb
xor
xchg
arpl
pop
mov
imul
aam
test
repnz
lds
dec
ret
test
mov
add
add
jns
cmp
add
xchg
adc
in
shll
negb
cmp
pushf
lea
fwait
inc
inc
pop
jle
ja
ret
sbb
adc
dec
int3
cmpsb
shll
in
inc
setae
iret
mov
jle
sub
push
ficoml
sub
jecxz
pop
hlt
pop
or
push
out
imul
pop
xor
mulb
fwait
or
mov
imul
les
insl
mov
push
test
inc
cld
pop
popa
xor
xlat
aas
jne
and
ret
outsb
lods
push
xor
jmp
xor
aas
xor
xchg
aam
and
shr
cli
pusha
inc
fninit
jo
int3
xor
js
clc
sahf
hlt
dec
jl
stc
pop
xor
xchg
test
inc
push
div
adc
pushf
lds
addl
add
cmpsb
mov
shr
scas
iret
pop
clc
xor
bound
in
sbbb
out
sti
es
xor
xchg
ret
adc
mov
lds
xchg
push
ljmp
fs
lods
adc
fbstp
leave
mov
loopne
rcll
push
mov
push
push
mov
in
test
dec
mov
add
fst
cmp
shll
sbb
sbb
jne
aam
mov
add
mov
dec
jle
and
push
xor
out
fiaddl
mov
jno
sub
into
xchg
outsb
add
cmp
sub
inc
popf
dec
outsl
daa
mov
mov
ja,pt
mov
sub
dec
jb
hlt
lock
icebp
jo
dec
dec
or
sbb
add
pop
call
jg
jno
incl
jbe
pop
test
jmp
pop
and
sub
dec
inc
pop
js
sbb
out
push
rcrl
sbbl
add
cmp
insb
inc
or
xlat
jne
out
sbb
dec
in
add
loop
jns
popa
out
std
dec
mov
fimuls
movsb
mov
shll
ficompl
jp
rorb
mov
ret
jb
or
adc
adc
push
push
adc
jp
sbb
scas
es
mov
lods
push
jp
test
jle
mov
ja
xor
push
inc
fldcw
sbb
call
repnz
push
popl
ss
clc
and
fdivs
aam
jbe
fsubrs
notl
adc
shl
test
cmpsb
test
mov
not
clc
fisubrs
mov
lods
outsl
pop
mov
sbb
repnz
aam
hlt
xchg
les
sub
and
dec
cmp
cmp
mov
fs
insl
rcr
adc
cmp
js
lods
repz
popa
cmp
mov
and
and
jmp
fimull
js
add
andl
mov
mov
inc
push
fnsave
xor
ja
push
and
push
cmp
add
jl
fs
fdivp
dec
inc
incb
pop
mov
scas
push
adc
das
xor
mov
div
lods
mov
mov
sbb
sahf
cltd
xor
shrb
lods
sub
sti
pop
mov
xchg
pop
mov
mov
das
clc
xchg
jg
fcmovne
stos
dec
sbb
push
mov
cwtl
stos
mov
adc
sbb
aas
rcrb
aam
in
inc
or
add
fabs
pop
insb
daa
aad
and
push
cld
push
inc
test
ficompl
fwait
cli
fistpll
and
movsb
adc
pop
es
dec
fstps
dec
fwait
movsl
cmp
rcrb
adc
inc
int3
and
dec
dec
push
dec
repz
or
dec
cmp
add
mov
movsl
pop
imul
pop
jmp
sub
fs
xlat
mov
xor
hlt
ret
pop
add
cmp
xorb
jno
mov
iret
es
fisttpll
shrl
jnp
jae
gs
int3
outsl
adc
js
mov
or
stc
ss
xchg
xor
inc
icebp
out
push
mov
sbb
add
addl
test
inc
sbb
mov
jno
inc
or
xchg
cmp
add
jns
cwtl
ret
jmp
in
movsl
adc
jb
jg
scas
pop
jp
je
cmp
adc
pop
xchg
or
mov
push
sbb
inc
popf
pop
mov
arpl
and
pop
loope
and
bound
fwait
xchg
andl
adc
jbe
cmp
outsb
gs
jp
es
pop
cld
int3
int
jae
lock
shlb
jbe
xchg
test
pop
sbb
xchg
cmp
popa
mov
mov
pop
xlat
outsb
mov
icebp
cmc
mov
jmp
lock
and
and
xchg
jmp
dec
sub
pop
das
push
insl
loop
outsb
pop
stc
test
scas
dec
cmpsb
push
gs
addr16
or
mov
pop
ficoml
mov
sti
push
sub
sub
xchg
mov
lahf
not
fucomp
pusha
lret
jl
jae
mov
fidivs
sbb
mov
sbb
and
mov
stos
ret
xchg
scas
pop
and
repnz
inc
inc
add
icebp
dec
xchg
or
mov
shl
pop
fxtract
lods
push
add
pop
pop
or
std
js
mov
outsl
cltd
push
icebp
inc
enter
xchg
pop
repz
aas
scas
xorl
add
subb
cmp
adc
add
std
xchg
jge
mov
add
add
cmp
lods
ret
clc
dec
jecxz
lret
je
jb
push
call
ret
pop
dec
mov
mov
mov
adc
pushf
xchg
lods
outsl
inc
and
inc
push
dec
rorb
addr16
mov
test
ja
roll
fwait
mov
sbb
dec
fbld
data16
std
sub
add
xchg
test
adc
nop
mov
lcall
sub
cmp
jae
dec
xchg
mov
and
lock
out
adc
mov
cs
leave
int
inc
jle
ljmp
shlb
fnstenv
movsl
cli
pusha
and
xchg
sbb
addr16
cmp
jno
jae
mov
test
scas
mov
out
jae
jecxz
jns
pushf
cmp
mov
dec
hlt
mov
fdivrl
inc
push
sub
inc
lahf
push
repnz
inc
in
push
xlat
js
in
xor
jbe
jmp
sbb
test
stos
push
mov
xor
sbbb
bound
pop
jmp
xchg
je
push
pop
mov
lret
push
idivb
cmp
or
xorb
arpl
add
jg
scas
inc
push
jne
dec
pop
rorb
dec
cmp
pop
cmpsb
rorb
and
adc
popf
dec
int
jb
fs
nop
dec
adcb
test
out
icebp
mov
mov
adc
daa
and
push
sbb
jge
cmpsb
sbb
lahf
jnp
or
and
fnsetpm(287
jecxz
addr16
fisubrs
ret
or
add
jecxz
aaa
addl
xchg
outsb
mov
adc
jns
sbb
mov
push
adc
outsl
pop
call
mov
sbb
lods
iret
mov
xor
mov
jns
stc
fwait
xchg
xlat
mov
xor
mov
scas
and
jg
les
outsb
mov
and
out
push
popf
imul
int3
stc
sarl
movsl
xchg
fbstp
sub
int3
stos
xrelease
and
cli
daa
xchg
mov
outsb
jg
pop
xor
daa
addr16
in
das
movsl
xchg
mov
mov
sar
mov
or
loop
xchg
dec
mov
cmp
fwait
mov
shrl
out
cltd
mov
ljmp
testb
dec
lea
sub
cmpb
adc
dec
pop
mov
data16
adc
outsl
jae
dec
sbb
loope
mov
andl
pop
jns
lods
outsl
das
fwait
mov
sbb
mov
mov
mov
and
lcall
aam
adc
dec
cmp
push
test
pop
xchg
popa
mov
pushf
popa
fmull
aaa
inc
push
cli
add
gs
jp
or
dec
cld
js
leave
and
mov
mov
push
aas
mov
add
test
mov
xor
es
in
jg
mov
dec
lods
pop
push
ds
shrb
in
jp
push
jecxz
js
nop
mov
fstp
pushf
test
dec
icebp
bndstx
neg
stos
sub
aaa
orb
jae
lret
lods
mov
jp
adc
testl
cmpsb
mov
mov
sbb
sub
jne
push
stos
sbbl
add
mov
sub
xchg
xor
test
mov
insb
mov
push
shl
inc
in
out
pop
popa
scas
xchg
test
call
idivb
sar
fwait
add
dec
mov
rorl
sub
repz
fnstenv
cmpsb
xchg
in
cs
dec
and
jnp
inc
imul
mov
out
lds
mov
add
fldl
inc
idiv
dec
test
rorb
pop
jle
ss
lahf
movsb
adc
jns
out
movb
mov
push
adc
push
pop
ficompl
push
cmp
cltd
xor
iret
cmpsb
lods
mov
mov
mov
iret
popa
lods
lds
inc
cltd
shlb
enter
adcl
ja
push
fs
jle
mov
or
xor
cmp
sbb
xchg
jge
push
inc
adc
lds
ss
out
mov
xor
cmp
test
out
jg
mov
arpl
nop
idivb
or
scas
jp
dec
sub
loope
das
mov
lcall
or
cmc
pop
xor
fucomp
pop
nop
stos
nop
repz
adc
dec
dec
outsb
int
or
jecxz
xor
xchg
dec
cmc
movsb
push
and
ror
add
mov
out
cmp
gs
lret
push
mov
adc
lds
xchg
mov
test
inc
push
xchg
loop
pop
loop
inc
adc
mov
mov
adc
lcall
push
jge
adc
or
xchg
lahf
and
jae
and
and
mov
pop
icebp
dec
fld
lea
jmp
push
sbb
mov
cmp
inc
pop
outsl
sub
fsubrs
inc
and
jl
sbb
sub
je
jmp
and
ljmp
mov
imul
xor
mov
mov
push
mov
fists
mov
test
enter
nop
stos
out
scas
jle
or
or
rsqrtps
movsl
jne
or
adcl
mov
dec
outsb
pop
inc
mov
mov
push
mov
add
das
scas
shrl
push
loopne
je
outsl
sub
dec
pop
add
outsl
std
jmp
pop
mov
pusha
hlt
clc
mov
or
or
sub
jl
dec
pop
ret
aad
mov
ljmp
jmp
dec
shl
inc
lcall
loop
shrl
test
jge
lcall
es
mov
cmp
inc
sbb
add
jne
and
cmp
fdivs
data16
sbb
call
not
outsl
xor
dec
into
mov
add
cmp
lret
xchg
sbb
pop
insl
enter
xorb
jae
mov
xlat
adc
scas
sbb
sahf
fcom
jb
xchg
loop
fldl
mov
fstps
fucomi
sahf
sub
xor
adc
mov
ror
and
adc
push
or
inc
lret
cmp
push
repnz
adc
jns
mov
adcb
pop
lcall
dec
out
jns
scas
and
insl
shl
mov
mov
or
sub
pop
cmpsl
mov
and
clc
daa
xor
les
aad
pop
push
sahf
sub
mov
loope
mov
jmp
dec
pop
dec
push
mov
call
popa
mov
mov
inc
fcoms
pop
mov
xorl
inc
jb
push
test
push
ljmp
addl
cmc
dec
dec
shlb
pop
pop
decl
mov
xor
les
adc
cmp
popf
fcoml
mov
das
nop
add
int3
lret
mov
insb
xchg
mov
clc
mov
xor
lret
int
sbb
pushf
xchg
inc
adc
add
xor
inc
call
lock
jbe
adc
push
movb
xor
add
test
lret
ret
dec
out
xchg
jb
cli
stos
enter
nop
je
out
cmp
inc
add
jge
mov
and
orl
lret
es
inc
jae
push
jb
mov
incl
mov
je
jmp
test
divb
mov
jns
iret
leave
mov
lock
fsts
sti
dec
insl
jne
sub
int
dec
adc
xor
adc
pushf
shrl
mov
jl
push
out
xchg
jmp
outsb
mov
xchg
xlat
inc
mov
testb
xchg
mov
inc
xor
or
ja
fdivs
xor
subb
mov
jb
cld
sub
cmc
add
int3
mov
inc
stos
cld
push
andl
bound
cmpsl
std
cmc
aaa
fcomps
xchg
sbb
dec
test
call
icebp
ss
das
dec
lock
rcrl
das
or
and
bound
lret
std
pop
jg
or
sbb
xchg
lds
mov
aaa
sti
and
mov
inc
sbb
in
out
repnz
jmp
pop
mov
add
cltd
test
xor
add
add
adc
xlat
nop
jb
idivl
jno
dec
outsl
push
call
pop
jg
jg
insl
lahf
cmp
pop
xor
lods
push
pop
and
and
fldenv
mov
popf
fildll
aas
pushf
bound
push
fnstenv
mov
js
aaa
sti
push
mov
fbstp
xor
es
bound
test
xchg
cmp
adc
sub
inc
mov
test
xlat
insl
rolb
sbb
in
jp
aaa
pop
repz
aam
mov
sbb
out
pop
lahf
fidivrs
out
inc
cmp
data16
or
pop
dec
xchg
cmp
mov
cmp
popa
jae
jbe
cmp
int
fiadds
push
fmulp
int
aad
add
shrl
pop
jmp
inc
les
sti
xorps
repnz
fmuls
sbb
test
cs
cmc
imul
popa
push
adc
out
sbbb
sub
or
pop
sbb
pushf
aaa
jmp
fdivrl
les
pop
and
push
loopne
sub
cmp
sbb
sub
push
test
fstl
sbb
mov
and
outsl
pop
icebp
pop
cmpsb
insb
jb
test
inc
adc
mov
sarb
jp
inc
push
test
imul
iretw
fldt
gs
daa
xor
adc
jno
fbstp
mov
icebp
jbe
and
mov
popf
xor
pop
or
outsl
jbe
and
decb
repz
sub
push
mov
cmc
ret
sub
aad
dec
lea
mov
sbbb
sbb
shr
test
mov
imul
int3
adc
mov
sbb
mov
adc
fs
ja
add
xchg
mov
mov
or
ret
pop
adc
mov
pop
push
push
cs
insb
or
dec
loope
mov
movsl
mov
mov
ret
jnp
in
cmp
test
enter
popf
call
inc
push
loope
out
imul
rclb
lds
pop
call
sti
xlat
outsl
subl
iret
inc
sub
add
dec
iret
jnp
push
iret
pop
push
sub
or
sbbb
pop
xchg
xchg
test
mov
mov
outsl
mov
in
lods
dec
lret
clc
or
repnz
jge
inc
pop
ret
pop
enter
push
fistpl
mov
push
mov
dec
pop
fsubrl
add
pop
xchg
xor
subb
pop
sub
stos
xor
sub
arpl
jno
inc
push
inc
pusha
xor
xor
stos
inc
imul
loopne
mov
std
add
movsl
or
das
jg
divl
pop
sbb
add
mov
jecxz
outsl
xchg
insl
sbb
cmp
lret
mov
pop
push
loope
loopne
sbb
jns
test
mov
stos
mov
test
pop
paddusb
out
inc
cli
sub
or
inc
inc
outsl
pop
in
ja
add
sbbl
mov
sub
popa
dec
pop
hlt
sub
sbbb
or
push
dec
sbb
or
fnstenv
pushf
ljmp
fldcw
sub
repnz
shrl
mov
and
xchg
xchg
pop
std
jo
cmp
pop
sbb
imul
mov
cli
cs
cmp
cmp
and
mov
pslld
or
mov
cs
cmpsl
mov
fdivr
ret
sbb
daa
leave
or
movsl
push
loopne
aam
xor
rorl
pop
ficoms
push
clc
sub
xchg
xor
popf
mov
dec
in
add
mov
cli
inc
mov
nop
shrb
xchg
rolb
xor
in
js
sub
je
jp
fsubl
movsb
repnz
inc
pushf
jbe
out
std
xchg
dec
pop
test
outsl
dec
scas
adc
fnstenv
daa
out
jp
repnz
mov
pop
push
lock
nop
jnp
rclb
frstor
mov
mov
xchg
out
jp
sub
mov
dec
lock
cmpsb
jp
nop
cmpsb
arpl
adc
arpl
loope
inc
push
addr16
xchg
mov
or
aam
jo
cld
addr16
cltd
mov
mov
and
or
push
jmp
or
sar
cli
push
movsl
cmp
cli
add
cwtl
or
adc
push
outsl
inc
adc
lds
cmp
std
inc
push
sub
sub
pop
mov
adc
mov
push
pushf
and
ret
js
push
test
cmp
adc
sar
inc
imul
dec
inc
or
fwait
insb
push
mov
jae
pushf
ja
mov
xchg
mov
pusha
sti
cmc
push
sub
je
pop
in
mov
negb
int
std
into
leave
loope
push
or
adc
scas
mov
insl
test
sbb
fisubrs
nop
mov
arpl
rcl
mov
inc
in
and
jae
imul
std
pop
arpl
mov
gs
adc
fucomi
push
push
sub
dec
js
cs
insb
or
into
lret
and
xchg
push
mov
fiaddl
fst
adcb
pusha
sub
push
or
sbb
push
and
movsb
dec
je
cmp
mov
push
imul
jg
push
out
out
fdivr
into
mov
scas
aam
push
je
in
xchg
sub
loope
inc
cmp
mov
dec
in
xchg
inc
ljmp
push
cmp
lahf
jecxz
and
test
daa
xchg
movsl
out
test
xor
and
in
adc
out
jle
add
js
mov
ljmp
pusha
xchg
mov
pop
push
popf
ret
push
cmp
and
movsb
push
in
inc
push
in
sbb
je
jmp
xchg
inc
inc
xchg
and
fnstsw
lret
mov
shrl
cmp
shrl
xor
mov
je
push
lock
scas
xchg
xchg
rolb
es
push
xor
cmp
call
cmp
push
aaa
pop
outsb
or
sub
sub
dec
adc
dec
adc
jae
subb
aam
cltd
or
sbb
lcall
lret
leave
mov
adc
push
aas
xchg
outsb
add
dec
mov
out
ret
in
jecxz
jbe
mov
xchg
xor
dec
jns
je
push
pop
cmp
lahf
xlat
adc
lret
aam
sbb
cmp
cmp
lock
les
sbb
sti
loop
and
shll
scas
add
fbld
sub
pop
in
rorb
dec
mov
push
add
push
jecxz
or
shlb
sub
sub
fimull
add
adc
pushf
repz
repnz
sub
lcall
movsl
out
cltd
ja
rclb
sbb
int3
mov
or
cmpsl
sub
std
cmp
lahf
into
jae
jle
push
fsub
lahf
daa
inc
shll
add
or
pusha
push
inc
adc
pop
sbb
pop
adc
adc
js
das
cmp
cmp
dec
out
xor
call
mov
loopne
or
call
dec
push
or
or
es
into
jp
repz
or
sbb
adc
cmp
cmp
imul
xor
mov
inc
cli
mov
xchg
lret
xchg
push
popf
out
jae
adc
cld
pop
jae
xchg
std
mov
or
push
xor
mov
movsl
fimuls
stos
clc
je
sub
xchg
xor
xlat
adc
lea
jl
xchg
and
mov
dec
lcall
fidivrl
sti
es
add
cmpsl
xchg
adc
jge
pop
xchg
orl
adc
roll
dec
pop
out
lcall
fdivl
push
inc
xor
negl
add
mov
stos
orl
in
sub
clc
insl
xor
mov
inc
or
aad
pop
pop
js
icebp
rcrb
fstpt
iret
scas
pushf
push
jns
lahf
mov
or
sub
jle
pop
mov
test
lods
mov
divb
ret
lock
repz
lds
mov
cmc
mov
je
pushf
js
popf
jo
scas
mov
enter
sub
out
int3
arpl
and
mov
cwtl
movsb
jle
test
outsb
add
sbb
push
sbb
inc
sub
mov
in
mov
dec
push
cld
or
xchg
movsl
stc
dec
mul
outsl
xchg
cwtl
call
sbb
and
xchg
or
gs
mov
hlt
es
xchg
sub
notl
sti
pushf
cmc
inc
mov
adc
adc
cmp
xor
insb
add
fisttpl
mov
gs
jbe
push
and
out
inc
sbb
mov
mov
test
xchg
fcmovnbe
lea
stc
fsubr
sub
mov
jbe
ss
aad
xor
mov
pusha
fisttps
push
jno
xor
lea
fsubrl
data16
push
test
test
push
mov
repnz
jle
jne
jne
fbstp
in
push
and
jle
and
dec
es
lods
mov
or
std
int
inc
push
cmp
lods
cmp
adcb
push
dec
mov
faddp
imul
mov
stos
ds
dec
pop
mov
mov
push
push
or
xor
aam
fsubrs
test
cmpsl
aaa
mov
movsb
fs
mov
arpl
pusha
arpl
or
lret
sbbb
and
push
pop
add
cmp
mov
sbb
jle
scas
mov
sub
push
pop
loop
adc
add
ds
out
popa
xchg
sbb
jo
jmp
inc
jne
pop
in
adc
dec
pop
jle
mov
fwait
dec
aaa
int
adc
hlt
sub
push
cmp
rcrb
fneni(8087
mov
popa
mov
mov
out
add
or
adc
cmpsb
push
jae
add
jno
mov
insl
les
ljmp
inc
ljmp
sub
nop
jne
pop
jg
jb
and
int3
int3
popf
incl
test
shl
lods
push
iret
fildll
jns
jb
fmulp
fwait
dec
lock
xchg
push
mov
adc
mov
pop
fidivrl
push
and
cmpsb
xchg
std
std
shrl
les
clc
sbb
pop
in
test
aad
pop
in
jg
js
or
push
sbb
call
and
arpl
test
jo
out
lahf
add
lret
repnz
lods
push
mov
mov
mov
or
cltd
andl
ljmp
fisttps
cwtl
test
pop
push
adc
adcb
insl
test
jns
pop
lock
lret
jp
inc
lods
sub
int
sbbb
inc
xchg
adc
mov
pop
js
sub
mov
pop
sti
cmpsl
aam
mov
out
rclb
mov
sub
jmp
addr16
mov
inc
mov
add
mov
adc
repz
pop
mov
mov
bound
shl
outsb
and
movl
pop
dec
cmc
pop
dec
clc
cmpsb
call
or
mov
xlat
sub
xor
mov
mov
leave
mov
ret
and
out
sbb
pop
loopne
cmp
ljmp
dec
pop
cmc
inc
jnp
insb
inc
jbe
loope
test
pop
jmp
dec
jmp
or
movsl
xchg
push
aas
lock
out
sub
mov
mov
addr16
fldcw
jle
xor
fs
inc
or
andb
lret
jnp
popa
jp
in
xchg
fdivrl
test
add
fisubrs
out
test
js
jmp
xchg
pop
jne
sub
inc
addb
stc
imul
push
cmp
mov
sarb
adc
mov
mov
or
xor
mov
xor
shrl
cmp
clc
cmp
pop
sahf
dec
pop
mov
cmpsb
mov
je
cmp
movsb
mov
or
notb
cmp
nop
aam
inc
cltd
inc
gs
addr16
ret
pop
repz
inc
sub
xor
clc
jns
xchg
mov
out
ret
or
gs
jmp
pop
xor
dec
pop
cmpsb
add
push
dec
mov
and
jp
lods
idivl
and
sbb
adc
fildll
outsl
call
xor
inc
pushf
xor
stos
inc
cli
adc
xchg
mov
xchg
out
sub
call
or
fidivs
into
cmpl
push
lahf
push
lods
mov
cmp
imul
dec
mov
mov
jne
and
and
adc
cltd
xor
xchg
pop
mov
loope
pusha
xchg
xchg
scas
enter
notb
je
pop
ret
imul
imul
sub
int3
cltd
std
int
xchg
idivb
push
push
outsb
test
ss
jcxz
mov
or
in
cmpsb
fidivrs
in
jle
loopne
jecxz
rolb
add
and
movsb
cmpl
int3
cmc
add
popf
sub
push
inc
and
std
adc
lods
test
jno
push
and
xchg
jge
sahf
or
cwtl
pop
adc
lcall
push
nop
outsl
test
mov
inc
adc
inc
and
xchg
lods
cltd
xchg
call
push
mov
out
xor
out
iret
aaa
mov
jmp
dec
stc
mov
fwait
pop
xor
push
out
call
or
pushf
fs
lea
adc
pushf
roll
sub
test
push
dec
lea
aad
aas
repnz
sti
or
and
xor
cwtl
pop
mov
add
loop
push
fwait
stos
xchg
ljmp
popa
push
dec
das
cmpsb
dec
jno
xor
outsb
dec
mov
rcrl
fwait
adc
sbb
and
data16
mov
fs
pusha
jb
insb
jle
ja
mov
xor
jnp
xchg
mov
lods
jns
mov
loopne
and
repnz
cmp
xor
daa
push
leave
pop
adc
jp
sbb
mov
push
jb
add
iret
jae
imul
stos
cmc
ljmp
js
and
sbb
lcall
lock
add
aam
and
mov
mov
dec
and
push
adc
lret
pop
imul
pushf
and
pop
je
dec
jmp
dec
push
jbe
cmp
or
push
cmc
fwait
data16
xchg
outsb
push
push
nop
mov
cld
inc
cmpsl
data16
and
inc
jno
dec
movsl
int3
xchg
mov
hlt
or
mull
sub
pop
sub
xor
adc
sub
cmp
lods
fisubs
sbb
xchg
mov
adc
pop
xchg
push
mov
sti
mov
mov
lods
xchg
aam
adc
xchg
cmp
fldt
aam
fdivl
out
mov
jno
sub
jo
add
orl
mov
pop
das
mov
mov
subl
fdivr
and
arpl
loop
jae
and
push
jo
push
xor
push
loopne
sbb
xchg
cmp
push
cmc
sub
mov
fistpl
mov
out
pop
cmovle
mov
out
sahf
outsb
jmp
incl
adc
and
add
stc
xchg
sbb
mov
enter
ss
pop
stos
dec
push
push
jmp
ret
push
mov
jne
or
push
xlat
repz
cs
jle
test
fcomps
add
call
leave
fwait
mov
scas
ja
loopne
in
pop
aad
mov
cmovp
mov
ja
xor
dec
dec
scas
and
cmp
movsl
and
arpl
ljmp
or
jnp
aad
aad
lods
dec
or
mov
mov
xchg
sub
hlt
mov
mov
lcall
data16
test
dec
sub
cmpsl
sarl
insl
sub
enter
xchg
pop
adc
xchg
sbb
xor
jbe
xor
dec
iret
jecxz
push
mov
ficompl
sbb
insl
mov
rcrb
xchg
lret
pop
ret
imul
inc
jge,pt
adc
push
cld
adcb
jb
movsb
pop
xchg
out
push
lods
mov
mov
mov
mov
xchg
sbb
jae
fdivl
xor
test
popf
cmpsl
sbb
insb
roll
outsb
fcomip
lahf
or
lret
cwtl
or
sbbl
push
mov
in
inc
cmpsl
rol
pop
icebp
xchg
or
mov
js
jmp
xchg
aad
repnz
mov
jae
xchg
mov
xchg
stos
sub
cwtl
nop
dec
pop
mov
sbb
into
pop
jbe
mov
mov
sbb
and
sbb
xchg
mov
sti
push
xchg
sti
popa
clc
sub
mov
cmpsb
in
xchg
lcall
in
inc
leave
sub
cli
push
arpl
cmovg
scas
fmuls
jle
mov
jae
jle
and
pop
push
lock
nop
inc
pop
cs
fcomip
lret
clc
pop
xor
push
xchg
das
and
mov
js
mov
push
fildll
movsl
icebp
js
add
out
stos
arpl
fistl
cld
cmpsl
sar
icebp
add
xchg
xor
mov
cld
ficompl
push
push
cmp
mov
mov
inc
pop
pop
aam
enter
sbb
scas
dec
out
mov
fs
fstl
data16
fnstenv
bound
bound
jns
dec
test
pop
jae
into
mov
dec
bound
mov
aad
lods
orb
pop
and
dec
mov
dec
dec
adc
pop
adc
jg
mov
pop
fsubs
cmp
mov
in
push
lret
data16
mov
stos
ds
inc
inc
insl
ja
cmpsb
mov
xorb
test
inc
outsl
inc
xlat
jno
enter
and
xor
pop
leave
sti
in
push
sbb
inc
and
inc
int
outsl
jp
pop
and
cmp
or
push
movsl
in
sub
faddl
jp
xor
cmpsl
popl
adc
xor
pop
out
imul
or
lret
jbe
shrb
add
fcmovnbe
rorl
lods
fbstp
and
mov
aam
pop
ret
pop
into
in
fimull
xchg
mov
sub
cli
pusha
cmpb
mov
cmpsl
fs
divl
sub
push
aaa
push
outsb
or
pop
aas
lret
je
fistpll
xchg
xlat
jmp
xchg
inc
enter
pop
gs
cli
pop
int
lock
addr16
cmp
mov
pop
outsl
sub
xlat
inc
mov
mov
cltd
jle
inc
push
and
lock
mov
pop
outsb
sub
dec
stos
idivb
sub
out
pop
shlb
sub
push
call
negb
jl
or
notl
adc
jecxz
insl
pop
lea
into
cmpps
and
sbb
inc
jg
fnsave
dec
test
fdivrp
xchg
dec
test
sbb
xorb
and
negb
fstpt
pop
imulb
sti
cmpb
inc
fmulp
pop
and
fisubl
or
add
cs
push
loope
xchg
xchg
push
mov
aam
lock
add
xchg
add
int3
iret
and
fcomi
stc
add
out
push
aad
scas
push
imul
adc
cmpsl
xchg
and
imul
jg
ficoml
bound
sub
push
push
nop
adc
sar
jbe
popa
outsb
xchg
jge
cld
pop
in
movsl
inc
icebp
lea
movntq
mov
or
push
push
dec
ret
repnz
fcomps
pop
pop
mov
mov
lahf
aad
ret
in
jb
and
mov
jbe
xchg
pop
daa
mov
xchg
xchg
pushf
scas
cmc
mov
ret
pop
cmp
pop
dec
jo
sahf
jp
add
repnz
push
xchg
cmp
dec
popf
add
pop
imul
arpl
in
fwait
in
and
mov
scas
stc
enter
or
test
lret
movl
sub
hlt
xor
imul
adc
cltd
cmc
icebp
mov
and
outsl
lret
cmc
test
dec
and
outsb
mov
stos
push
out
sub
call
adc
das
orb
insl
aad
jb
add
add
pusha
mov
xchg
and
and
lods
inc
out
xchg
cltd
cli
dec
jmp
mov
mov
xlat
and
mov
cltd
iret
out
stos
scas
dec
or
mov
std
add
or
pop
push
xor
add
inc
shll
or
mov
scas
adc
addr16
lret
and
and
data16
rcll
pop
xor
int
jecxz
out
pop
inc
jp
push
sarb
mov
aam
sbb
ret
and
ds
icebp
rcl
imul
xor
push
lods
xchg
xchg
mov
push
sbb
fsub
cmp
cmpsl
mov
les
cld
mov
jne
out
iret
pop
cmp
cmp
test
pop
test
repz
cli
inc
arpl
push
out
jno
filds
sbb
add
arpl
cmp
fistpll
mov
test
push
es
pop
scas
into
aam
aam
shr
ss
jbe
das
scas
and
and
sbb
jno
repz
bound
adc
jmp
lahf
inc
cmp
sub
jg
mov
sub
rcrl
push
addr16
in
popa
in
rcll
sbbb
sub
fmul
jmp
sti
push
ljmp
inc
bound
bound
mov
mov
bound
push
rolb
in
test
in
sub
nop
jne
lret
push
cmp
add
xor
aaa
and
fsub
jnp
fwait
sbb
inc
dec
mov
jle
int
pop
fsubrl
aam
xlat
repz
popa
lcall
xchg
out
scas
sti
lods
and
push
std
or
xchg
cmp
lcall
cmp
test
pop
add
mov
insb
xchg
push
mov
push
mov
xchg
lret
push
jne
ds
leave
jle
xor
push
ret
hlt
outsb
jne
xchg
cmpsl
jnp
pop
mov
lret
xor
in
aas
fistl
sbb
jb
mov
push
push
dec
lock
int3
push
or
mov
pop
xor
dec
push
add
push
cmc
lea
addb
fisubrs
aas
dec
movsb
mov
adc
call
repz
inc
clc
sbb
addb
push
movsb
lea
in
adc
inc
xchg
rolb
stos
sbb
mov
orb
cli
sub
cmpsl
dec
lods
lea
lret
xor
outsl
mov
ljmp
call
add
test
iret
pop
xchg
sbb
aam
ja
pop
jmp
sti
loop
insl
jae
adc
inc
mov
add
sub
xchg
pushf
test
jb
cmpb
lret
add
sbb
repz
adc
icebp
cmpsb
cmp
leave
pop
inc
loope
mov
icebp
insb
jg
push
cmp
jae
and
mov
jae
sub
stc
inc
dec
jmp
cmp
ss
jno
stos
repz
ficompl
scas
cs
sarb
fnstenv
add
ja
fcmovne
pop
xor
push
dec
rcr
xchg
leave
out
cmpsb
lcall
clc
data16
lahf
stos
push
arpl
lahf
mov
add
mov
jno
mov
dec
imul
xor
push
pop
push
cmc
leave
js
ficomps
call
lods
cmpsb
pop
loop
sti
in
out
lahf
dec
cwtl
inc
clc
sub
mov
insl
xor
jb
scas
mov
in
cmc
aam
out
mov
popf
jl
loope
cmp
push
or
in
fsts
cmp
sbb
jecxz
push
inc
les
mov
popa
ret
xchg
inc
in
mov
stc
push
pop
mov
jge
and
adc
ret
pushf
cmp
ret
popf
xchg
and
mov
mov
jmp
pop
xor
push
jmp
or
and
int3
outsl
add
push
jg
cs
mov
jnp
repz
lret
dec
pop
dec
pop
or
pop
mov
add
das
sti
es
rclb
insl
rcl
popl
cli
jge
test
lds
xchg
sub
cmp
jecxz
pop
xor
cmp
pop
mov
xor
mov
adc
sbb
cmp
lea
fsubr
mov
fidivs
les
cs
loope
shlb
arpl
in
rorl
enterw
xor
add
xlat
xchg
in
fcompl
js
mov
in
int3
adc
inc
inc
jmp
arpl
iret
imul
jecxz
xchg
movsl
ret
in
pop
aam
push
into
pop
xor
inc
cmp
and
push
lea
inc
mov
jge
nop
xchg
fidivs
jae
lods
sub
int3
jg
adc
ljmp
ljmp
fisubrl
cmp
adc
es
fadd
js
vunpckhpd
loopne
mov
pop
cmpsb
fidivrs
out
cmp
ja
mov
sbbl
pop
or
sub
mov
pop
sahf
push
xchg
inc
adc
into
cmp
xor
sub
mov
repnz
scas
push
push
pop
test
lds
imul
rorb
inc
sbb
mov
cmp
arpl
lock
loope
jmp
mov
jbe
test
mov
add
clc
cmp
pop
mov
shl
push
or
mov
fbstp
ret
jmp
jl
cmp
shll
fidivrs
cmp
imul
pop
inc
dec
jo
jb
pusha
mov
flds
sub
into
xchg
xchg
das
pop
orb
pop
mov
or
cltd
xchg
pop
mov
outsl
pop
mov
add
adc
mov
xlat
push
outsl
lret
daa
and
jl
std
sbb
mov
jecxz
push
push
loop
cmpsb
xor
outsl
das
dec
xchg
loop
lea
inc
aad
movsb
jecxz
icebp
cltd
adc
bnd
pop
outsb
in
adc
mov
jnp
rclb
int
out
or
mov
cmp
adc
mov
push
mov
int
mov
mov
negl
outsb
hlt
cmp
mov
push
call
xor
outsl
mov
push
xchg
push
dec
outsl
fsubs
jg
cld
mov
mov
cmp
xor
roll
or
dec
std
pop
movsb
data16
dec
shrl
xor
mov
push
xchg
imul
jmp
stos
and
stos
mov
cmp
dec
pusha
fldt
rcll
jecxz
or
adc
mov
pushf
orb
es
push
or
or
sbb
push
idiv
sbb
push
jno
jns
mov
std
sub
pop
add
push
sbb
push
mov
pushf
hlt
xchg
mov
pushf
mov
push
cmc
sbb
shll
divl
imulb
frstor
mov
imul
fiadds
fsubl
sbbb
cmpsl
mov
inc
lret
push
enter
sbb
mov
cltd
fwait
mov
fs
mov
push
sub
mov
outsl
inc
and
data16
dec
mov
or
and
xor
test
pushf
mov
mov
mov
jmp
into
mov
or
push
jmp
adc
push
mov
cwtl
sbb
in
xchg
cmpb
cmp
sbb
xchg
mov
cmp
pop
enter
andb
add
stos
gs
adc
xor
xor
xchg
adc
inc
or
repnz
fnsave
push
push
test
int
or
out
shll
jb
mov
leave
mov
jne
jne
icebp
sub
and
hlt
movsb
jmp
pop
repz
imul
pop
imul
aaa
xchg
fisttpl
loope
stc
nop
lds
jg
rcrl
jle
sbb
push
push
loopne
mov
ja
pop
mov
out
aad
and
sahf
fnstsw
lret
xlat
pusha
fmuls
pushf
test
aas
rcr
hlt
or
sbb
ja
icebp
cmp
mov
jl
dec
mov
xor
xor
out
xchg
pop
push
leave
xchg
xchg
cmp
pop
sbb
or
mov
dec
pop
call
add
pop
cmp
sub
fisubs
gs
in
adc
sbb
xchg
and
and
lret
inc
aaa
incl
sahf
push
adc
lret
into
push
fisttpll
inc
xchg
xor
fs
rorb
out
dec
push
dec
dec
ret
test
or
loope
jae
push
mov
ljmp
mov
into
mov
sub
push
es
or
sarl
pop
cltd
xor
sub
dec
sbb
cmp
mul
je
pushf
pop
mov
test
iret
sub
fwait
aaa
int
mov
leave
in
cs
xor
sbb
mov
pop
insl
sbb
mov
fldl
cwtl
xor
bound
push
pop
and
ffreep
test
pop
imul
stos
pushf
and
mov
adc
sbb
iret
sbb
mov
dec
bound
or
in
xchg
adc
out
ret
sub
add
arpl
inc
dec
test
push
xlat
bnd
and
nop
push
xchg
add
lret
xchg
pop
sub
in
outsl
daa
dec
jg
lods
ljmp
pop
lds
mov
mul
mov
in
pop
sbb
jbe
jp
das
test
adc
dec
add
outsl
pushf
adc
call
lret
mov
packsswb
lods
adc
sub
aas
push
sub
or
loopne
andb
mov
fucomip
xor
mov
xchg
push
cmp
pushf
and
scas
cwtl
mov
fldl
pusha
mov
sub
mov
fcoms
add
mov
fmull
add
icebp
pop
add
push
xchg
add
add
jno
mov
iret
xor
ja
divb
add
repnz
xor
out
pop
filds
jmp
xor
dec
imul
sar
pop
in
jo,pn
push
cmpsb
jge
or
add
enter
lods
dec
pop
cmp
push
jno
decb
daa
mov
dec
pop
jbe
lea
mov
jge
mov
mov
sbb
stos
aas
adc
stc
and
sub
lods
mov
test
jno
mov
imul
je
les
es
ficomps
jg
pop
std
sub
outsl
inc
inc
test
pop
testl
movsb
dec
xchg
std
pop
popf
push
sahf
cmc
inc
cmp
mov
jb
ja
hlt
ret
insb
mov
dec
sbb
sbb
adc
mov
bswap
mov
mov
push
insb
std
sub
andl
aaa
ret
lods
pusha
sbb
mov
subb
mov
into
mov
movl
inc
ljmp
inc
fmul
addr16
jecxz
push
bndstx
es
jle
lock
test
cli
insl
addb
mov
leave
fildl
adc
and
inc
xchg
mov
inc
adc
cltd
add
and
lea
pop
lret
lret
sbb
loop
inc
pop
sbbb
dec
faddl
push
inc
leave
sub
sbb
cmp
add
leave
shrb
push
jp
mov
mov
out
xchg
jle
mov
push
cmc
pop
cltd
cmp
lret
int
mov
cmc
pushf
xor
xor
jo
lcall
data16
shrb
ret
movsb
mov
fcoml
jns
frstor
loop
scas
rorl
mov
push
cmc
mov
test
mov
dec
nop
aas
addr16
mov
hlt
shll
inc
cld
mov
dec
jae
dec
jb
imul
sahf
imul
mov
sbb
inc
mov
lods
jnp
xlat
imul
movsb
gs
push
inc
push
mov
call
mov
dec
sbb
jg
daa
int
mov
out
xchg
adc
inc
stc
cmpsb
cmp
adc
inc
test
ss
jo
cmp
stos
jge
sahf
cmp
push
sub
pop
add
insb
or
pusha
inc
clc
and
rcrl
scas
mov
pop
mov
mov
cltd
xchg
daa
out
or
lret
lods
push
sub
or
shrb
pop
and
add
mov
inc
ret
sbb
hlt
jle
leave
xchg
adc
fiaddl
inc
jbe
jo
sub
in
bound
jl
and
out
push
mov
jno
aas
push
call
rcll
and
pop
sbbb
aaa
addl
sbb
xor
cwtl
or
dec
sub
adc
mov
jae
cld
adc
loopne
sbb
xchg
mov
xchg
outsl
leave
cmp
pop
cmc
pop
imul
push
mov
hlt
xor
and
lods
jns
test
dec
dec
loope
mov
adc
add
mov
push
in
idivl
pushf
mov
std
loope
pop
jecxz
sbb
fadds
xchg
mov
and
push
or
clc
sub
push
jp
cmp
lods
rclb
mov
push
pop
push
inc
mov
into
rcr
mov
dec
fcmovnb
pop
or
push
sbb
loopne
cmpsl
mov
mov
sbb
or
xor
adc
sbb
sahf
lods
xor
mov
arpl
clc
iret
push
data16
push
lret
mov
std
cli
cmp
mov
loop
pushf
pop
pop
or
mov
lret
cmpl
cmpsl
shll
lcall
jbe
jnp
adcb
mov
cmpsl
adc
and
arpl
xor
imul
mov
or
lea
outsb
andb
add
mov
dec
xchg
jmp
inc
jnp
mov
xchg
inc
push
dec
jecxz
inc
dec
aam
movb
jl
sbb
test
aad
xor
mov
loopne
pop
inc
pop
mov
add
mov
pop
aas
ret
mov
cmp
aaa
loope
or
jg
push
test
sahf
mov
ret
fdivp
xchg
add
xor
pop
inc
fdiv
adc
sti
fucomip
jo
add
movsl
xor
pop
push
jmp
rcrb
into
fcmove
xchg
push
repnz
push
xor
cmpsl
xchg
mov
bound
sub
cltd
sub
mov
call
es
fists
out
lea
imul
inc
insl
nop
mull
dec
divb
push
push
adc
icebp
jne
inc
dec
xor
push
shr
fsubr
bound
fdivl
mov
imul
cmpsl
addr16
push
dec
xor
fwait
call
xchg
in
ljmp
loop
fxch
int
repnz
out
push
inc
inc
mov
inc
push
add
fs
pushf
mov
stos
ds
mov
orl
lcall
cmpsb
out
les
push
push
push
movsl
mov
pop
xor
mov
inc
adc
mov
add
outsl
ljmp
lods
fldl2t
iret
jo
jbe
lods
inc
gs
mov
setns
aas
xchg
in
mov
mov
aas
and
nop
xor
into
mov
fmull
gs
pushf
mov
stos
outsl
mov
leave
dec
lcall
pop
jb
enter
cmp
or
ljmp
and
adc
jmp
jo
fsubrl
inc
and
jae
cld
jmp
imul
mov
and
mov
xchg
shll
mov
shll
ds
sti
icebp
mov
add
cmp
sti
cmp
and
dec
in
push
xlat
lods
test
addb
and
pop
les
sbb
or
ljmp
pop
mov
cli
popf
cli
add
fsubrs
lock
and
ja
inc
xlat
xor
add
leave
stos
lock
mov
loopne
std
cmc
add
xor
out
xor
mov
test
push
pop
xor
rclb
pushl
ret
sub
scas
repnz
xlat
rcrl
or
or
lahf
lods
das
nop
push
cltd
adc
xor
sub
lods
fcmovnb
flds
xor
aam
push
push
jo
add
xor
and
pop
dec
aas
mov
sbb
ret
into
fnstsw
sbb
ficomps
movsb
inc
and
sbb
push
int
sbb
xor
add
fcoms
pop
push
or
xlat
mov
test
adc
add
mov
and
cli
push
dec
and
and
mov
push
mov
hlt
movsl
cmp
mov
outsl
mov
mov
clc
cmp
test
out
mov
int
pop
scas
aas
out
aad
cmp
sub
out
sbb
mov
loopne
xchg
stos
sub
hlt
fidivl
loop
out
pusha
sahf
into
dec
mov
ret
jmp
dec
mov
xlat
xorl
lods
in
pop
stos
push
xor
and
adc
scas
xor
push
pop
lret
out
cmp
popa
sahf
or
mov
scas
add
data16
push
out
pusha
pop
push
pop
sbbl
mov
cmp
out
jp
in
dec
pop
push
mov
es
arpl
sub
and
aas
loop
lock
lods
dec
dec
rcll
mov
filds
rol
lret
jg
lds
nop
and
sub
nop
push
dec
adc
movb
dec
mov
cld
push
push
mov
jns
xchg
insb
add
cmp
adc
dec
fyl2xp1
xchg
jecxz
enter
sbb
pusha
sti
push
in
test
inc
or
clc
sub
pop
sbb
xorl
sub
rol
jnp
test
popf
push
inc
lds
je
xorb
jmp
mov
lds
inc
hlt
sub
fistps
adc
jle
aam
dec
pop
data16
xchg
mov
fs
cltd
push
xchg
fbstp
xchg
mov
sbb
jmp
pop
into
int3
push
ljmp
pop
sahf
add
and
sbb
fiadds
neg
fbstp
dec
pop
mov
push
je
rcrl
js
mov
popf
mov
data16
push
cmp
adc
mov
inc
push
aas
cmpsb
xchg
sub
pusha
push
fldl
xor
jg
adc
sbb
sub
pop
pop
push
mov
xor
adc
cmp
jl
pop
and
bound
or
mov
jl
shll
int3
dec
stc
fs
mov
cmp
jno
cmp
mov
push
xchg
pop
faddl
sar
jbe
mov
mov
dec
loope,pn
pop
adc
hlt
fistpll
add
pop
fsubrs
inc
gs
mov
xlat
adc
repnz
cmpxchg
push
mov
shrb
push
aas
in
das
and
mov
movsb
shl
addb
in
aaa
or
lods
dec
in
push
dec
out
and
jmp
popf
lods
int
pop
cmp
addr16
mov
sbb
popa
aas
out
add
lock
pop
fadds
fildl
mov
movsl
ja
jo
push
int3
lret
aaa
jl
pop
inc
in
and
lock
jle
xorb
xchg
add
jl
sbb
dec
jne
in
out
loopne
inc
shr
ljmp
shll
push
push
xlat
mov
cmp
pop
hlt
dec
cmpsl
testl
out
shll
outsl
xchg
stos
mov
adc
js
jecxz
orl
or
jbe
cmp
cmp
cld
mov
mov
in
subb
subb
lret
aaa
dec
dec
xchg
pop
pop
jg
push
mov
or
bound
ficoml
lods
lret
and
loopne
scas
pop
cmp
pop
movsb
iret
mov
mov
or
xor
scas
aad
jnp
mov
fistl
xchg
mov
or
adc
fs
cmpsb
pushf
push
lcall
push
jno
test
int
adc
ja
mov
divb
fcompl
fwait
add
loop
gs
cld
and
add
outsb
push
pop
jg
mov
pop
mov
lahf
xchg
pop
int
into
lret
pop
movsb
mov
data16
int3
loope
shrb
rol
leave
lds
sub
mov
in
sub
dec
stos
fdivrp
push
daa
mov
jp
je
int
add
push
pop
inc
cmp
mov
push
cmp
fildl
bound
or
push
movsl
xor
test
fistps
xchg
popf
xor
addl
js
int3
inc
aad
andl
xor
mov
call
push
pop
pop
dec
ret
pop
sbb
adc
imul
cs
jb
xchg
pop
in
test
jg
adc
jg
adc
fistps
int3
or
cmp
data16
js
inc
loopne
rcrb
mov
cltd
and
aas
cli
cmp
test
cmp
addr16
mov
lahf
xor
or
ret
movsb
xchg
leave
sub
insb
sbb
mov
movsl
pop
lds
shrl
xor
imul
cmp
addr16
test
bound
cmpsl
sub
iret
cmp
fmul
push
or
addr16
jae
cli
inc
mov
dec
dec
push
dec
add
fbld
fwait
xor
sub
repz
push
jmp
movsl
cmp
and
addr16
ret
fistpll
adc
mov
dec
loopne
push
xchg
mov
mov
dec
cs
xlat
loope
fmuls
sbb
inc
orl
ret
cmc
pop
dec
in
je
aaa
cmp
imul
inc
gs
cmp
ud1
dec
dec
lods
dec
cmpsb
mov
jecxz
push
and
inc
in
jmp
sbb
inc
mov
mov
sbb
mov
lahf
decl
mov
scas
ljmp
aas
shr
nop
das
dec
iret
mov
ret
or
jp
pop
daa
mov
fucomip
repnz
inc
cmpb
fbld
or
imul
adc
inc
jecxz
ret
lock
mov
out
sbb
cmpb
and
int3
and
jp
cltd
out
stos
in
ljmp
mov
xchg
add
mov
loop
in
push
insb
divl
and
xchg
adc
in
pusha
repnz
adc
leave
imulb
ffree
outsl
fisttpl
in
sbb
out
pop
xor
ret
sbb
mov
mov
aas
dec
sahf
sbb
jbe
mov
xchg
sahf
imul
aam
fsubrl
mov
imul
cmp
mov
in
rolb
pop
cmp
pop
aas
xchg
pushf
dec
push
fisubrs
cltd
test
pusha
iret
xchg
and
stos
inc
insl
fwait
xor
pop
mov
push
cmpsl
mov
cmpsl
mov
mov
jp
xchg
lods
iret
test
rorb
ret
js
dec
mov
fwait
push
xor
fisubs
jp
ret
adcb
inc
adc
nop
push
dec
and
adc
fstps
and
adc
in
scas
lcall
mull
imul
mulb
and
mov
mov
xor
add
lds
inc
stos
add
mov
xchg
inc
jl
jp
stos
sbb
aad
push
das
add
adcl
insb
repnz
shrl
test
push
leave
jnp
icebp
and
push
subb
push
xchg
ret
out
test
mov
push
in
repnz
rcrl
inc
cld
jnp
fucomp
rcll
je
xor
sub
add
jge
ret
out
xchg
sbb
icebp
cwtl
das
and
xor
xlat
dec
pop
icebp
jns
mov
lahf
add
imul
out
shl
jg
outsb
add
jne
mov
pop
adc
add
lahf
add
mov
inc
add
xchg
xor
pop
cmc
jns
sbb
or
cmc
mov
push
in
jecxz
add
in
mov
jle
or
outsb
int
pushf
lea
cwtl
adc
je
and
push
aad
aaa
jae
xor
int3
cmpsl
inc
fst
rcrb
xor
xchg
xor
aaa
cmc
dec
lock
and
mov
daa
mov
ljmp
and
loop
aad
repz
mov
ds
mov
cmp
cs
iret
and
inc
sbb
xchg
rcrb
mov
mov
xchg
cmp
mov
fldcw
test
pusha
ret
mov
jge
and
outsb
sub
stos
pop
loop
pop
push
push
add
mov
or
mov
in
mov
push
cmp
dec
pop
fwait
jbe
dec
xchg
loopne
cmp
adc
orl
inc
shl
vpavgw
dec
aad
movsl
push
sub
arpl
ja
stc
xchg
mov
adc
mov
nop
imul
sbb
ret
jl
cmp
fs
mov
jmp
sbb
shl
mov
mov
sub
fwait
xchg
push
dec
dec
cmp
jbe
pop
fsubs
bound
push
fnstenv
adc
xchg
pushf
inc
inc
fstpt
jmp
mov
aad
push
je
mulb
or
mov
mov
pop
int3
cmp
sub
xchg
cmp
xchg
add
es
xor
dec
dec
pop
dec
mov
fdivp
cmpsb
fnstenv
sub
imulb
lcall
imull
int
or
xchg
popa
ret
and
fidivs
jmp
data16
push
outsl
int3
dec
push
jp
pop
xor
and
jb
mov
adc
mull
clc
cmpsl
repnz
test
cmpb
cmp
psrlq
daa
jp
stos
add
jns
das
pop
mov
xchg
std
inc
ljmp
jb
scas
xchg
out
mov
xlat
push
sub
add
fldt
mov
ficoml
sbb
jmp
sub
or
shll
fwait
push
adc
cmpsl
sbb
cs
pushf
xchg
in
add
lock
inc
jg
js
mov
jp
fidivs
insl
push
mov
imul
push
shll
sub
pop
sbb
imul
jb
push
stos
inc
loopne
and
mov
int
and
aas
outsb
sti
popa
xor
clc
push
mov
pop
jmp
mov
jo
mov
pop
xchg
dec
mov
fnstenv
gs
data16
in
das
loopne
mov
cmpsl
inc
sarb
xor
adc
jp
cmp
loop
out
out
dec
xchg
xchg
data16
jbe
push
cld
int3
test
test
imul
pusha
dec
stos
lret
aad
sahf
or
jecxz
xor
subb
pop
push
pop
lock
or
cli
and
mov
add
jl
aas
out
pop
ret
add
div
mov
xchg
push
jae
sub
js
addr16
cltd
dec
loopne
cs
pushf
adc
aam
xor
sahf
inc
stc
test
pop
mov
dec
xchg
imul
mov
dec
sbb
ds
fnstcw
push
iret
lret
or
gs
push
xor
icebp
ds
push
cmp
jmp
loope
xor
les
fisubrl
rorl
cs
pop
lds
in
cltd
and
bound
sarb
jg
inc
mov
pop
adc
and
sbb
inc
mov
mov
outsl
mov
and
dec
inc
jg
mov
aaa
repz
xchg
dec
jecxz
add
inc
test
push
mov
aaa
aad
jecxz
inc
add
mov
inc
cmpsl
and
mov
pop
cmp
ljmp
and
push
mov
mov
jle
pop
jg
movsl
iret
add
call
filds
add
xor
add
xchg
and
xor
xchg
mov
jns
adc
mov
decb
and
ret
daa
aaa
test
lret
mov
mov
push
rcrl
test
aaa
mov
sub
push
jo
jl
sub
imul
outsl
jmp
insb
xchg
fists
xchg
dec
cmp
adc
add
push
jae
mov
sbb
enter
and
dec
out
rclb
sbb
fs
sbbb
imul
cmpl
and
mov
cs
test
xchg
scas
xor
sub
mov
add
xor
popa
loope
sub
mov
cmp
mov
testl
into
add
adc
jp
stc
test
inc
subb
addb
and
test
mov
xor
fst
push
xor
inc
das
mov
pop
jo
movsb
lahf
sub
push
in
fwait
jge
mov
jb
lret
lock
stos
shlb
push
es
mov
arpl
inc
bound
mov
xor
adc
movsl
inc
xor
push
inc
and
jl
add
push
cs
push
jo
jns
outsb
xchg
cmpl
inc
fildll
mov
dec
iret
icebp
xchg
out
in
cmp
ret
iret
cwtl
cwtl
and
sti
ret
sahf
test
sbbb
jb
aad
test
scas
inc
popa
lock
cmc
lods
mov
int3
pop
outsl
jmp
or
cli
loop
es
test
lret
dec
pop
insb
cld
pop
insl
lock
jge
inc
mov
xchg
xchg
inc
pusha
enter
sbb
xchg
or
xchg
stos
imul
mov
mov
inc
lds
call
sbb
repnz
mov
mov
mov
insb
adc
inc
arpl
insb
in
cltd
stc
sahf
aad
inc
pop
xchg
and
dec
inc
mov
cmp
orb
mov
fwait
ss
aaa
jns
mov
jle
cld
scas
cld
cmp
les
dec
push
aad
das
mov
or
inc
cmp
arpl
mov
outsb
mov
loope
push
mov
jmp
fs
fmuls
mov
out
push
mov
lret
test
int3
cmp
inc
mov
xchg
fisttpll
jecxz
test
das
sbbb
test
sub
inc
pop
daa
icebp
adc
lret
into
pop
js
mov
xchg
mov
icebp
data16
pop
cwtl
das
repnz
inc
leave
or
xchg
inc
rcll
fstps
fisubs
rcrl
mov
std
and
and
push
in
cwtl
jmp
or
push
ja
hlt
sub
addb
mov
ret
cmpb
cmpsb
movsb
dec
aad
mov
gs
shrl
mov
andl
adc
mov
jne
out
pushf
xchg
fs
xlat
jo
lock
scas
sbb
push
xchg
in
arpl
inc
push
pusha
js
test
inc
jnp
call
sbbl
sub
push
or
add
sbb
jae
stos
and
pop
movsb
xlat
ljmp
mov
arpl
test
leave
mov
hlt
and
pop
sarl
fbstp
decb
mov
out
shl
push
or
aaa
fistpll
dec
cwtl
dec
rolb
push
adc
mov
mov
cltd
add
int
cmp
adc
and
fsubr
je
enter
sub
jg
aas
aad
xor
addr16
dec
cs
cli
adc
and
imul
test
das
add
and
xchg
les
cmp
outsl
push
dec
ss
push
pop
ror
dec
std
movsb
repnz
iret
shrl
in
inc
push
aas
mov
jle
into
inc
mov
push
cli
xchg
xlat
inc
fistl
rcrb
jg
outsb
or
add
nop
dec
pop
in
or
out
add
xor
pop
inc
add
imul
icebp
fs
sbb
push
push
fmulp
shrl
or
aad
push
add
div
mov
leave
repz
cmp
adc
dec
gs
sbb
lcall
in
sbb
scas
out
lods
subl
or
fs
lret
inc
sub
jb
push
into
and
or
inc
jmp
cmp
and
adc
test
ss
jbe
ret
inc
cwtl
and
inc
dec
lret
adc
add
into
icebp
dec
ja
or
nop
xor
ljmp
push
pop
lret
je
outsb
ret
jp
out
test
fildl
jns
push
inc
out
lds
sti
test
inc
mov
dec
and
push
adcl
mov
cld
ret
clc
xor
sub
out
adc
push
ret
xchg
les
mov
or
stos
ja
xor
inc
gs
daa
ret
jno
push
mov
sbb
pop
rclb
jl
lret
lods
sbb
and
mov
mov
adc
cwtl
sti
cmp
mov
fsubrs
movsl
cmc
xchg
sbb
xchg
imul
cwtl
or
sub
cmpsb
jne
push
pop
loopne
ds
mov
insl
lock
mov
cltd
sub
mov
sbb
test
sub
ret
push
jb
mov
pop
ja
movsb
xchg
lds
div
ds
int
xor
adc
and
scas
arpl
xchg
sub
cmp
dec
xchg
data16
stc
push
orb
aaa
into
push
xor
lcall
and
xchg
out
pop
mov
fldcw
and
fimull
cmpsb
jne
aad
lods
mov
mov
and
ja
fdivrl
mov
orl
clc
dec
xor
sbb
pop
outsl
pop
pop
out
dec
pop
idivb
addb
xchg
mov
imull
fisttps
test
repz
cmpsl
int3
fs
mov
add
aas
mov
mov
cmp
jle
dec
xchg
cmp
add
push
in
pop
repnz
add
xchg
out
out
dec
add
jecxz
insl
add
pop
inc
jmp
aam
jmp
rorb
testb
sahf
push
stos
in
repz
lock
xor
dec
enter
in
in
pop
sub
pop
cwtl
xchg
adc
pop
adc
movb
dec
call
sbb
or
aaa
lock
xchg
cmp
enter
jae
stos
mov
jmp
loopne
xchg
xchg
aaa
ret
in
push
sbb
inc
xchg
sbb
and
push
xchg
add
pop
fnstsw
sti
pop
xchg
xlat
jne
sbb
iret
sbb
ds
lahf
call
jo
cmp
cli
pop
lds
sub
out
inc
cmpsb
sub
popf
loopne
sbb
lret
fs
subl
cmp
ja
xchg
mov
sbb
shl
dec
mov
lcall
jmp
and
pop
pop
lahf
divb
or
adc
cmc
push
mov
pop
pop
cmp
mov
fsubrs
mov
nop
pop
insb
in
sti
cmp
pop
or
xor
push
jmp
mov
jae
cmp
inc
dec
sub
stos
mov
fnsave
dec
adcb
push
inc
and
sar
fsubr
sbb
outsb
xor
inc
cmp
push
xor
dec
pop
ret
push
pop
ficomps
jecxz
mov
scas
enter
arpl
sub
aas
sub
xor
fwait
xchg
std
arpl
data16
cmpsb
mov
fsubrp
push
xor
out
ja
cld
push
cld
mov
add
xchg
xchg
inc
sub
lock
es
xchg
cs
pop
mov
jo
dec
jmp
in
pop
xor
cmpsb
push
inc
xchg
pop
test
in
fs
or
adcb
jno
cmp
pop
cmpsl
mov
xchg
mov
pop
dec
mov
lds
call
mov
pop
mov
flds
mov
push
jg
or
data16
jne
mov
mov
subl
push
sti
push
imul
pop
inc
dec
push
fisubl
or
stc
cld
adc
mov
sbb
jp
popa
inc
stc
inc
pop
rorb
cmp
sbb
mov
addl
mov
imul
leave
mov
icebp
add
std
pop
mull
testb
hlt
in
xor
add
mov
mov
gs
dec
rcrl
jno
icebp
mov
imul
icebp
add
cmpsb
add
mov
add
scas
aam
push
xor
scas
gs
test
jle
dec
ljmp
inc
out
inc
xchg
scas
or
aam
add
test
xchg
fildl
bound
jmp
cmp
mov
inc
jbe
in
mov
push
popf
push
or
jnp
sub
cmp
ret
ret
out
addr16
icebp
pop
jb
imul
sbb
pop
inc
jbe
dec
pushf
leave
popa
clc
neg
mov
rol
or
mov
mov
ljmp
add
out
adc
bound
xlat
in
hlt
dec
inc
or
fisubrl
or
mov
add
stos
fdivrl
add
sbb
jecxz
push
fisttps
lods
gs
cmp
stos
add
inc
xchg
fisubs
fisubs
pop
push
cs
adc
ljmp
jnp
shrd
xor
cld
or
mov
pop
add
in
fs
push
popf
lods
inc
movsl
cmp
out
mov
testb
mov
data16
daa
sub
inc
mov
in
negl
insl
push
adc
inc
cmc
lahf
cmc
jmp
jmp
xchg
sbbl
rorb
mov
push
cmpsb
ss
jae
sub
sti
stos
dec
test
push
dec
movsl
stos
jae
sbb
pop
fnstenv
push
sbb
adc
and
fimull
mov
pop
loopne
fbstp
sub
bnd
mov
dec
xor
or
scas
enter
jno
std
push
xor
xor
or
mov
mov
mov
push
aaa
push
inc
push
sub
push
xlat
inc
in
cmpsl
jne
adc
aad
mov
or
in
rclb
add
out
cmpsl
inc
pop
push
stos
pop
fcmovu
sub
mov
out
sbbb
or
mov
ficoms
xchg
arpl
call
fucom
jecxz
lds
xchg
loop
add
les
xor
pop
mov
inc
xchg
out
cli
rcrl
xchg
mov
iret
je
jmp
mov
stc
mov
or
lds
pop
mov
rcl
jno
mov
jl
push
inc
inc
daa
hlt
jl
movsl
lods
adc
imul
mov
xchg
aam
push
mov
bnd
mov
push
push
daa
mov
cmp
inc
mov
inc
jle
ret
jecxz
mov
mov
inc
sbb
fadd
movsl
sbb
cmc
packsswb
scas
xchg
rorl
test
sub
sarl
dec
jbe
push
rep
push
aam
xchg
std
sbb
xorb
jb
mov
or
outsb
adc
dec
mulb
idiv
inc
mov
xchg
scas
and
inc
int
lret
out
mov
fwait
push
incb
xor
xchg
adc
outsb
xchg
aas
repnz
adc
rorb
icebp
sub
loope
das
jp
popa
dec
jp
mov
push
inc
in
push
stos
mov
cwtl
cmp
mov
add
mov
mov
dec
sub
lret
cmp
lds
dec
je
fnsave
lods
xor
dec
aas
sahf
jmp
rcrb
pop
or
enter
scas
fwait
mov
jnp
jl
pop
mov
mov
sbb
adc
mov
cmpsl
dec
pop
icebp
jnp
lret
push
and
js
fwait
adc
and
jno
bnd
xor
jle
inc
xlat
js
mov
lods
push
inc
popf
pop
mov
mov
inc
or
push
ds
push
jne
mov
sub
sub
xchg
xor
xchg
in
push
push
aaa
or
fs
add
pusha
jg
sar
xor
fnsave
das
cmp
mov
sub
js
nopl
cmp
arpl
sub
pushf
or
daa
out
adc
mov
std
lock
xchg
pop
mov
jnp
mov
sub
pop
hlt
jno
aaa
sub
in
dec
dec
inc
fimull
cs
clc
pop
les
mov
clc
lds
xchg
arpl
stos
aad
loopne
sarb
inc
xor
xchg
sbb
push
dec
add
and
and
mov
cmpsl
ret
mov
icebp
mov
mov
push
pop
jecxz
cmp
push
or
sub
je
aam
add
pop
bound
rcrb
lea
pop
lea
or
daa
cmp
test
test
cld
fidivs
in
mov
arpl
loopne
fsubs
cli
cmp
cmp
ret
sub
push
xor
pop
jno
jno
mov
jle
std
mov
int3
mov
add
notb
mov
xchg
jl
scas
ja
pushf
ficompl
hlt
sub
addb
aaa
push
fimuls
jp
xor
sub
push
mov
xchg
int
sahf
popf
xorl
loopne
loope
and
mov
hlt
in
repz
bound
lea
aaa
push
in
call
or
xor
and
push
inc
popf
jno
cwtl
push
aaa
adc
inc
mov
fsubl
fwait
sti
push
dec
jb
insl
out
push
sahf
call
or
inc
mov
jae
push
enter
mov
out
loope
mov
scas
into
mov
pop
lock
and
xor
repnz
ds
adc
bound
mov
xchg
lahf
jmp
lds
cmovl
mov
sbb
je
or
mov
pop
in
sbb
cmp
lods
mov
dec
sbbl
mov
ds
cltd
stos
push
inc
lret
mov
add
adc
stc
mov
inc
leave
stos
push
mov
in
sbb
push
add
outsb
adc
mov
leave
sbb
or
outsb
pusha
aaa
sbb
sub
pusha
pop
arpl
lods
or
or
dec
or
sbb
xchg
les
mov
jo
lahf
push
or
fs
pop
mov
mov
push
push
popw
loop
jne
and
xchg
cmp
cmc
inc
int
inc
cmp
ds
test
jp
xor
jp
stos
or
dec
push
mov
inc
pushf
dec
cmp
fidivrl
xor
mov
add
lret
and
mov
cmp
mov
stos
mov
popf
push
or
divb
sub
js
sbb
fstps
mov
jae
insl
stos
seto
fidivs
aaa
inc
xchg
sbb
mov
adc
mov
sub
inc
xor
adc
pop
mov
jge
xor
fstl
mov
and
or
dec
aaa
cld
hlt
fildl
mov
fistps
mov
ret
inc
xchg
jns
jns
aam
es
ss
jg
push
cltd
jle
imul
in
push
lods
pop
shrb
pop
ret
pop
ret
dec
sub
dec
pop
aad
pusha
push
mov
data16
or
pop
cmp
test
lds
pop
repz
in
iret
mov
out
cwtl
cmp
cmc
mov
lods
add
or
mov
mov
push
pusha
loope
jmp
std
push
stos
lcall
fs
cmp
jb
pop
jb
inc
fdivs
insl
aaa
stos
push
pop
dec
inc
add
pop
das
mov
xchg
and
shlb
stos
and
adc
xchg
pop
add
jmp
aam
adc
test
sub
out
lods
mov
or
lds
adc
in
xorl
ds
pop
mov
xor
lock
fnstcw
dec
ja,pt
dec
xor
ja
lcall
rcll
je
push
in
pop
into
xchg
push
insl
adc
jge
xchg
mov
mov
out
lret
out
movl
mov
cltd
test
fldcw
enter
vpsrlw
lods
and
loop
hlt
sbb
repnz
std
dec
int
cmc
arpl
mov
cltd
gs
pusha
ja
and
cmpsb
addr16
movsb
test
xor
dec
pop
ja
sub
and
test
divb
les
mov
scas
jno
pop
lock
shr
inc
fnstenv
outsl
dec
fidivrs
sub
imul
fs
pop
inc
xor
cmp
fsubrs
shll
in
in
cwtl
lods
fsub
and
pop
gs
clc
shrl
xor
xchg
sbb
jne
sub
sub
jge
fwait
bound
dec
popa
aas
ret
dec
out
jmp
insl
jge
testb
sub
sbb
in
and
adc
test
aaa
mov
pop
or
insl
stc
jg
xchg
aas
andb
mov
test
addr16
daa
pusha
push
cmp
ret
xor
lahf
or
dec
mov
dec
bound
repnz
xor
loope
push
dec
lods
mov
iret
xor
lahf
ret
scas
push
inc
xor
fldt
jb
add
sub
outsb
xchg
jo
pushf
push
addr16
test
jmp
or
sub
or
dec
icebp
and
and
xor
scas
sbb
cmc
xchg
jl
pop
mov
dec
in
sub
dec
mov
js
dec
sbb
call
test
mov
sbbb
idivl
and
rcr
mov
mov
push
popf
lret
cli
test
lea
loopne
cmpsb
les
adc
dec
inc
pavgb
cmp
or
popf
pop
data16
inc
bound
xor
je
lods
or
inc
push
push
arpl
loopne
fadds
mov
rcrb
xchg
loopne
adc
or
pop
cmp
or
cmc
cwtl
mov
jl
mov
iret
xchg
and
subb
fildll
sub
adc
shll
sub
and
push
jp
push
and
pushf
ret
lcall
adc
aad
stos
imul
daa
or
pop
cmp
iret
popf
lahf
and
int3
mov
push
mov
or
inc
xchg
push
mov
mov
aaa
push
dec
filds
data16
pop
inc
ljmp
push
push
jmp
lret
jns
jb
pop
and
daa
stos
mov
scas
mov
ss
mov
and
sub
lea
dec
arpl
push
into
pop
ret
and
shrb
lcall
xor
gs
wrmsr
aas
mov
cs
fcompl
aas
push
cmpsb
je
pop
movsb
les
jl
repz
mov
lahf
adc
dec
jnp
subb
dec
loop
sbb
ja
jb
js
sub
out
pop
inc
add
movsl
sahf
xor
fadd
mov
dec
andl
sbb
inc
outsl
xor
pusha
xchg
nop
mov
xchg
ds
mov
data16
rcl
jno
cmpsb
xchg
out
mov
jge
movsl
pusha
les
xlat
outsb
pop
repnz
je
cmc
pop
pop
hlt
mov
push
add
icebp
daa
and
xchg
scas
js
jno
adc
cmc
dec
xchg
shrl
repnz
jne
cmp
shl
jecxz
into
cltd
sbb
addr16
scas
jb
mov
dec
stos
aas
fsubrl
testb
scas
xlat
cmp
mov
out
inc
mov
cmpsl
or
sti
cli
sti
scas
pop
inc
xchg
out
notl
stos
cmp
lcall
and
xchg
mov
xor
data16
sbb
cli
lods
dec
pusha
aad
xchg
sub
jg
fucomi
sub
test
rorl
fistps
jge
jno
pop
push
sub
repz
aas
stos
adc
rolb
xchg
adc
pop
cmp
jg
cmc
inc
lds
jmp
jb
test
mov
lods
sti
cmp
jno
dec
out
cmpl
xchg
ret
sbb
pop
rclb
xchg
sbb
rcll
pop
sahf
add
adc
stos
test
xorb
lret
pop
insl
bound
cmp
pop
out
std
aaa
pop
dec
sbb
inc
xchg
jge
xchg
scas
mov
dec
fs
or
mov
shrb
scas
cld
adc
push
ja
add
mov
sub
xchg
insl
cmc
mov
daa
pop
xor
jmp
lods
cmp
add
cli
out
sub
mov
sub
inc
dec
scas
sub
xor
pop
jno
jge
mov
push
outsl
push
test
adc
sub
pop
mov
sub
sbb
daa
aad
or
pop
push
pop
push
mov
lds
mov
js
cmpsl
repnz
out
hlt
ds
ret
cmc
fistl
inc
bound
inc
fidivrl
add
cmpsb
push
loopne
dec
adc
push
mov
or
sbb
fcmovnbe
mov
or
stos
call
mov
dec
es
lret
dec
addb
mov
test
inc
pop
bnd
xchg
in
outsb
mov
xchg
push
jg
xlat
mov
imul
in
cmp
push
aad
push
pcmpgtw
sub
pop
mov
inc
enter
aam
lcall
add
ljmp
jno
stos
mov
or
sub
xchg
jle
pop
mov
ja
or
mov
jnp
rorl
inc
push
mov
mov
mov
lcall
mov
icebp
movsl
pop
inc
lock
lret
out
and
adc
sarb
mov
adc
inc
das
enter
add
sahf
out
pop
jb
rclb
cmpsb
in
or
popf
stc
cmp
push
ljmp
mov
and
push
dec
pop
movb
adc
xchg
push
fidivs
cmp
js
jns
icebp
dec
dec
fsubs
or
call
cmp
ss
dec
shl
push
lea
and
sarb
notl
cmp
add
pop
out
std
test
mov
imul
leave
mov
lahf
xor
sarb
mov
data16
and
out
ljmp
adc
inc
sbb
out
stc
or
std
lcall
mov
jl
es
xor
cmp
xor
xor
mov
iret
and
add
insb
xor
imull
out
repz
dec
filds
cwtl
iretw
jno
ljmp
dec
xor
fsubs
aas
out
push
dec
testb
push
xchg
xchg
cmc
iret
in
xchg
jl
push
mov
in
jns
pop
fsubs
jae
ret
movsb
leave
rcrb
push
push
pop
adc
inc
scas
adc
xor
push
jmp
mov
xchg
sti
jle
sbb
dec
faddl
fnstenv
push
pusha
cli
sbb
dec
or
sbb
sbb
inc
or
repnz
shll
outsb
push
jg
mov
adc
pop
fimuls
fimuls
add
addb
je
filds
jle
scas
mov
mov
mov
shll
xchg
dec
outsb
inc
mov
int
out
aam
int
lea
inc
mov
fwait
ss
or
pop
inc
iret
push
popa
clc
xor
dec
jecxz
push
adc
test
xor
fs
shll
shl
fists
jge
pop
lds
mov
or
iret
lret
fcomip
adc
inc
jno,pt
jae
mov
sarb
xchg
mov
sahf
xor
fdivr
inc
movsb
mov
fdivs
or
lds
cltd
dec
cwtl
add
inc
inc
mov
cli
mov
lds
ret
cmc
xchg
jecxz
mov
cwtl
sub
pop
fimull
and
inc
mov
and
int3
or
sahf
jp
in
shl
adc
adc
aas
inc
mov
dec
mov
push
insl
shlb
sub
xchg
scas
lods
push
push
sbb
mov
pop
shlb
lret
lret
mov
outsl
daa
fcmovu
inc
ret
push
mov
push
loop
mov
or
lock
cmpsl
divb
xchg
push
movsb
aas
stos
sbb
jl
inc
popf
scas
fwait
push
lods
in
dec
adc
pop
fldcw
test
enter
popa
or
push
cli
or
mov
cli
roll
push
out
dec
pop
add
pop
add
in
sbb
imul
inc
push
mov
jb
sbb
jb
lret
push
rol
xchg
aam
xchg
scas
cmp
inc
outsl
shrb
out
inc
mov
ja
into
mov
arpl
test
fld
lcall
adc
fidivs
xor
inc
mov
push
aas
inc
test
inc
and
cmp
fmull
movsl
cmp
pop
sub
dec
ret
and
sub
jnp
cmp
or
push
addl
cmp
ds
movsb
pop
dec
cmp
push
mov
jp
fisubs
in
xchg
inc
shlb
mov
pop
sti
fldl
incl
sti
pop
mov
fsubrl
stc
arpl
js
mov
stos
test
cmpsl
cmc
inc
aaa
roll
jecxz
popf
hlt
add
repz
loop
sbb
ret
xlat
pusha
sub
xchg
push
mov
imul
sub
adc
out
jbe
push
and
rcr
mov
xchg
dec
pop
daa
fldl
sahf
push
frstor
cmpb
pop
xor
cwtl
out
xchg
pop
mov
xor
inc
mov
dec
adc
ss
je
sbb
out
mov
imul
clc
xchg
add
xorb
add
sbb
popf
pop
aad
aam
dec
mov
icebp
sub
fwait
lret
ret
in
shrl
mov
mov
inc
push
outsb
cmp
push
cmp
xor
sbb
sub
insl
loope
lahf
or
xor
into
loope
sti
clc
or
jo
mov
mov
cli
pusha
dec
loope
jmp
push
in
push
xchg
test
cmpsb
fbld
sub
cli
push
pop
pusha
das
pop
jae
loopne
sbb
lret
bnd
mov
sub
adcb
push
inc
in
in
add
push
push
push
mov
je
gs
in
sbb
sahf
sub
ja
in
test
loopne
and
fbstp
sub
nop
rclb
imul
fcmove
sub
mov
and
xor
daa
leave
mov
adc
pop
insb
xchg
mov
mov
mov
sbb
adc
jns
inc
int
std
xchg
add
push
pop
cmp
ja
mov
arpl
fdivp
cmp
cmpsl
outsl
daa
sub
ds
pop
cmp
fcompl
loopne
test
loopne
mov
sbb
push
xchg
xor
fists
add
sub
les
fs
imul
mov
sbb
movsb
mov
xchg
fsubl
add
rcll
pop
fidivrl
mov
mov
shl
add
inc
icebp
sub
adc
fsts
sbb
cmpsl
mov
push
leave
sbb
loop
jge
imul
ja
mov
mov
popf
xchg
lret
xor
dec
imul
add
push
pop
xchg
sub
mov
loope
test
xor
push
icebp
movsl
xor
jae
xchg
aaa
fsts
adc
sbb
rcrb
push
dec
test
js
jnp
data16
xor
iret
fnstenv
add
add
sbb
inc
mov
adc
notl
jno
cmp
xchg
addr16
hlt
mov
lds
insb
push
inc
fwait
movsl
testb
inc
nop
push
test
notb
inc
insb
mov
fisttps
and
jne
inc
mov
fwait
push
outsl
incl
and
mov
cmp
popf
cmp
in
arpl
sub
add
hlt
cwtl
pop
and
ds
xchg
setp
outsl
aas
push
cwtl
jge
popl
addb
vmovupd
dec
mov
arpl
mov
mov
cld
add
pop
in
jle
pushf
sub
data16
and
xor
pop
lods
popa
mov
fcmovu
loope
mov
mov
dec
mov
lods
inc
fistpll
loopne
mov
push
ljmp
mov
cmpsl
pop
loop
int
fnsave
rolb
out
orl
out
inc
cmp
xorb
cmp
or
std
sbb
es
mulb
mov
adc
cmp
ret
div
in
add
sub
mov
fwait
mov
lock
movl
adc
test
into
cmp
outsb
push
icebp
iret
or
das
adc
ret
pop
rcr
and
bound
xor
jo
adc
dec
cmp
jne
cwtl
rorb
mov
out
test
dec
pop
scas
mov
jecxz
and
dec
popa
mov
or
loop
cmp
std
jecxz
imul
and
jb
mov
xchg
imul
sub
fsubrs
cmp
sub
jg
cld
push
fidivs
lret
mov
mov
ret
xchg
jmp
inc
es
ja
aas
mov
add
sahf
jb
ljmp
aam
cmpordps
outsl
adc
pop
test
dec
loopne
or
mov
out
and
clc
stc
sbb
add
add
inc
xchg
lahf
imul
or
out
cmc
mov
push
mov
sub
xchg
xor
sbb
sub
in
movsb
and
push
lahf
add
out
xchg
ljmp
dec
sub
xlat
iret
jl
out
daa
adc
ficompl
mov
divl
push
ja
fs
add
pop
dec
pop
jmp
out
mov
push
cmpsb
ja
sub
inc
mov
sbb
gs
add
aaa
xchg
pop
imul
imul
fnstcw
mov
rorl
xchg
aas
inc
xor
insb
push
mov
lods
pop
enter
and
push
mov
andb
push
fdivrl
jbe
insb
fistpll
movsl
lret
lcall
jbe
inc
mov
loopne
pop
xchg
sahf
movsl
push
sbb
inc
ret
push
inc
das
cli
and
push
scas
add
jb
negl
dec
nop
inc
movsb
dec
popa
lds
shlb
lds
inc
mov
mov
pop
shll
loopne
jnp
jl
out
mov
xchg
push
adc
or
pop
pop
xor
lret
push
pusha
fcmove
sbb
cwtl
sbb
aas
xor
mov
cwtl
les
jb
sti
inc
mov
outsl
push
cmp
ds
sub
fsub
and
out
lods
adc
outsl
mov
pop
xor
stos
mov
cmp
fldl2t
addr16
inc
filds
int
xchg
bound
int
sbb
in
push
push
jae
stc
or
rcl
xor
rcrb
push
repnz
mov
and
jmp
test
sub
or
cwtl
out
cld
push
pop
jb
bt
insl
xchg
int3
mov
pop
hlt
addr16
and
inc
adc
addl
jp
pop
in
int3
pop
dec
jge
fucomip
out
aad
jmp
orl
scas
push
push
jbe
jb
lret
cwtl
mov
icebp
out
in
or
inc
xor
sub
jmp
les
neg
push
data16
fildl
and
fcompl
fistpl
lret
sbb
inc
sarl
sbb
jg
or
into
pop
negl
fsub
aam
ret
dec
xchg
cs
xchg
push
mov
out
mov
and
int
imul
mov
or
sbb
insl
loopne
mov
es
mov
mov
add
inc
loop
jns
fwait
or
shrl
dec
jmp
test
out
stos
mov
or
insl
add
dec
add
fcomp
mov
outsl
inc
in
in
cmpsb
insb
cmp
popf
stos
jne
cmp
mov
mov
insb
imul
sbbl
add
es
fstl
gs
int
or
mov
stos
in
fdivrl
add
test
aaa
into
out
popf
nop
mov
outsl
add
cmpsl
push
jne
loope
aad
stos
add
sti
mov
mov
es
add
xchg
jmp
pop
loopne
ss
cmp
push
lea
cmp
mov
fisubrl
or
repnz
mov
push
dec
dec
loopne
insb
sub
and
ss
inc
sti
lock
inc
sti
jno
shrb
aas
push
dec
lea
push
movsb
aad
in
je
in
cmpb
outsl
xchg
pop
fdivr
shl
xchg
inc
push
or
gs
add
into
cmp
ror
mov
push
insl
mov
insl
daa
or
gs
mov
cmc
insl
sbb
jecxz
jp
or
dec
sbb
mov
adc
xchg
and
xchg
aad
fistpl
repnz
or
fcompl
add
call
lcall
inc
int3
lret
test
ret
mov
mov
mov
xor
roll
mov
push
push
pop
cmp
cwtl
push
mov
out
daa
mov
repnz
orb
sub
shll
xor
rorl
mov
pop
mov
mov
arpl
inc
loope
mov
and
aad
sub
push
cmpsb
imull
add
imul
out
dec
iret
dec
cmpsl
jb,pt
or
leave
dec
test
sub
outsb
iret
repnz
neg
sub
ja
dec
inc
cltd
subl
cwtl
movsb
and
int3
lret
lcall
xchg
mov
repnz
iret
add
xchg
es
fwait
xor
adc
xorl
rorl
add
pusha
or
das
xor
fucomp
rcrb
push
mov
ja
sbb
and
pop
fsubrs
xchg
sub
pop
xor
sub
dec
jno
andl
loopne
jle
or
popa
into
dec
adc
test
jl
or
jns
insb
leave
jns
pusha
int
sahf
xchg
sbb
xchg
int
sub
mov
and
push
and
xchg
mov
jg
outsl
lods
in
call
rorb
idivl
subl
mov
dec
fs
mov
or
sarb
sub
inc
lcall
fsubl
lds
divl
or
mov
and
push
test
add
cmc
pop
pusha
popl
shlb
dec
std
pushf
scas
lock
aas
and
jo
cli
aas
mov
push
jle
mov
mov
dec
in
in
mov
imul
and
push
mov
sub
add
nop
push
imul
sti
mov
cmp
imul
cmp
je
push
jae
mov
pop
lret
and
arpl
jecxz
jp
dec
adc
jne
add
int3
lret
mov
xchg
dec
mov
mov
roll
jo
hlt
add
mov
jl
pusha
aas
and
rcrb
cltd
jmp
mov
icebp
pop
sub
pop
sub
mov
jnp
pop
adc
jg
outsl
sahf
cli
sub
jns
leave
popa
dec
push
leave
push
test
pusha
cmpsb
xor
inc
xchg
jns
jle
add
cmpsb
add
fsubs
cmp
mov
gs
and
mov
daa
mov
dec
pop
dec
in
ss
or
lods
push
sub
lret
dec
pop
movsl
aam
sub
jnp
jl
and
jg
xchg
out
fsubrs
out
sub
orl
pop
ret
mov
test
js
test
xor
sahf
push
cs
das
bound
scas
sub
stos
or
inc
xchg
xchg
jno
sbb
cmp
mov
in
and
add
in
xchg
psubusb
inc
test
add
jbe
pop
lea
or
int3
jmp
out
aas
and
or
mov
cltd
loop
leave
dec
lock
es
sbb
dec
xor
in
mov
popa
sub
mov
xor
scas
incl
xor
sbb
dec
push
pop
jmp
jle,pt
mov
jge
xor
in
mov
adc
dec
jecxz
xor
aaa
pop
push
xor
inc
data16
jnp
add
jae
pop
xor
xor
hlt
or
add
sub
setae
sbb
jl
in
jo
insb
jg
shl
xchg
mov
bswap
sub
jl
dec
scas
lret
inc
out
test
in
add
inc
stos
mov
adc
inc
push
daa
movsb
repnz
and
push
or
cmp
addb
imul
add
fiadds
add
jecxz
fs
fisubl
xchg
lret
cmpsl
ds
sbb
jno
push
dec
adc
hlt
jecxz
fs
arpl
inc
mov
incl
in
jae
cli
push
fldl
popa
inc
iret
ss
jle
dec
cmpsl
in
and
sub
addr16
xor
dec
shrl
adc
sub
fldenv
mov
ret
xchg
sub
fldenv
or
mov
mov
test
jo
push
jmp
or
jb
pop
inc
sub
cmc
fwait
push
and
pusha
push
jl
jl
dec
fs
sbb
mov
cmp
ret
lcall
xor
iret
jg
dec
push
adc
xlat
mov
pop
or
mov
xor
cmp
das
les
leave
int
scas
jle
in
stos
pop
imul
pop
out
inc
sahf
das
pop
inc
xor
std
les
clc
stos
jmp
mov
es
pop
das
push
xchg
popf
xor
jns
sbb
mov
push
lea
int3
and
add
ss
pop
push
fmull
call
mov
bound
scas
push
fnstenv
jge
mov
rclb
jmp
dec
icebp
je
popf
int
nop
xchg
sti
out
adc
jmp
jge
mov
pop
jo
rolb
xor
pop
std
push
ds
mov
xchg
fbstp
data16
pop
pop
dec
popf
push
std
clc
loope
sub
fs
push
dec
xchg
adc
and
repnz
dec
pop
xor
scas
mov
gs
cs
mov
ja
add
pop
lea
sbb
int3
cmpsl
mov
cmc
inc
push
mov
push
int3
and
in
fsubrs
pop
inc
pop
xchg
jne
sbb
dec
incl
hlt
adc
inc
cwtl
push
xchg
iret
push
das
mov
xchg
and
test
mov
adc
test
cmc
or
loope
jl
sub
test
pop
mov
std
faddl
sbb
sub
sub
inc
lods
sub
push
sbbl
into
mov
pop
push
lret
and
bound
js
cmp
adc
mov
pushf
bound
push
push
cmpsb
das
push
and
sqrtps
push
cmc
popf
mov
inc
jb
bound
cs
lods
push
mov
cmp
lds
mov
sub
fwait
pop
mov
fmuls
daa
in
cmp
mov
testl
and
xor
fadd
ret
jo
pop
scas
jmp
pushf
sub
ljmp
mov
mov
dec
out
mov
cmp
stos
sarb
rorb
sub
hlt
push
pusha
or
add
mov
shlb
sarl
rep
mov
movsl
jl
or
movsb
adc
jnp
add
add
mov
repz
dec
je
mov
inc
and
add
ret
pushf
and
out
ja
inc
pop
fdivrl
dec
notb
fwait
xchg
fsubrl
push
loopne
adcl
adc
jle
jbe
cmpsb
insl
add
rolb
fdivrs
pop
ret
repz
sub
out
insb
sahf
inc
sub
jne
adc
sbb
dec
mov
xchg
xchg
pushf
rcrl
fnstcw
jne
lods
das
repnz
push
adc
xchg
arpl
inc
and
xchg
addb
fidivrs
sbb
pop
xchg
mov
cmp
push
std
push
popa
xor
push
fldl
aaa
push
popf
and
xchg
dec
pop
mov
add
jns
or
rolb
pop
xlat
iret
in
test
jge
sub
or
sub
sahf
cmc
jnp
loop
and
or
pop
pop
nop
dec
pop
or
repnz
jg
add
jmp
loop
mov
and
iret
add
fldt
scas
js
out
dec
pop
dec
mov
jb
cltd
xor
push
sbb
xor
fs
loopne
addl
inc
xor
jb
fwait
arpl
xchg
jmp
mov
sbb
rcrb
xchg
sub
adc
aaa
aaa
mov
mov
cwtl
pushl
xchg
mov
rolb
popa
pop
fwait
in
push
xchg
cmp
inc
cmc
mov
sub
pop
xor
rcrl
shll
add
mov
mov
movsb
xorl
testb
mov
cwtl
idivb
addr16
test
pop
daa
or
fwait
mov
movsl
lret
stos
mov
ds
js
and
mov
sbb
test
push
mov
add
xor
pop
inc
push
xchg
and
js
icebp
xlat
sub
add
les
inc
add
xor
cmpsb
mov
in
sbb
and
mov
jbe
bound
jbe
and
pushf
fs
loop
push
movsl
push
scas
inc
aad
lahf
add
int3
sub
mov
and
fdivl
andb
subb
mov
lret
xor
sub
inc
enter
mov
pushf
add
add
mov
xor
xchg
imul
pop
cwtl
dec
cld
add
sub
xor
mov
pusha
incb
add
cmc
cmp
mov
or
cmp
jns
lret
jb
shl
test
hlt
jle
aad
pop
mov
adc
into
fldcw
sbb
es
pop
ret
mov
pop
and
cmc
inc
popf
test
lock
mov
and
gs
jmp
popa
or
data16
in
jne
fdiv
int3
or
xor
or
sbb
and
pop
xchg
xor
sarl
aad
lahf
clc
cmp
in
in
pusha
pop
nop
or
xor
lcall
mov
cmp
popf
stc
imul
movsb
mov
or
mov
enter
sub
jmp
push
pop
xor
aad
ljmp
xor
scas
jecxz
test
cmp
add
dec
push
pop
pop
movsb
fsubr
and
sahf
stos
idivl
sahf
and
ds
imul
popa
imul
pop
jl
sbb
mov
and
lds
addps
subb
xor
xchg
xchg
inc
adc
aaa
or
add
jb
and
je
adc
mov
ljmp
repnz
add
add
lret
mov
mov
xchg
mov
mov
pop
mov
int3
fdivs
inc
push
fildll
pushl
call
push
nop
nop
cmpsb
lock
aad
or
scas
cmp
idiv
pop
mov
push
sub
mov
test
cmp
movsb
lret
insb
add
inc
pop
jmp
mov
ljmp
popf
mov
xchg
mov
out
ljmp
push
int
mov
rorb
sbb
xor
jne
out
fwait
add
push
aas
fs
enter
cld
lods
jo
ljmp
and
cmc
push
mov
imul
mov
and
fs
jae
cmp
js
dec
inc
mov
arpl
mov
pop
stc
add
js
mov
xchg
mov
xchg
shll
jle
pop
ljmp
jle
popa
dec
and
xchg
loope
or
cmp
insl
pop
xchg
xor
stos
mov
aam
jnp
add
jae
arpl
mov
or
cmp
cmpl
push
lea
loop
xchg
xchg
aas
js
mov
pop
lret
int3
pop
push
rorl
ficompl
mov
lods
test
jmp
mov
jbe
inc
test
cmp
jae
negb
xor
jo
and
sub
xor
fwait
les
loopne
inc
out
cmpsb
push
lahf
push
xlat
inc
and
mov
loope
push
adc
push
dec
and
xchg
jmp
decb
mov
enter
mov
jmp
and
lahf
fnstcw
jle
ss
jno
aaa
add
cli
sbbb
jnp
andl
out
jmp
pusha
out
fsts
mov
mov
dec
fadd
test
test
mov
test
cmp
mov
mov
mov
sub
xchg
fcoms
movsl
andb
mov
in
fadds
in
ret
je
adc
or
sub
fs
jnp
jmp
aas
in
outsb
mov
jecxz
adc
xor
and
loopne
out
mov
arpl
xor
aad
ss
add
addr16
pusha
adc
nop
test
out
in
jns
inc
mov
lahf
inc
sbb
xchg
cwtl
jmp
ds
leave
inc
repnz
lea
outsl
mov
ret
xchg
jns
jecxz
movsb
sub
add
lods
mov
mov
or
push
sub
jecxz
fisttpl
leave
cmp
jae
xor
test
xchg
fisubl
adc
int3
mov
and
xchg
int
fsin
mov
lods
mov
mov
daa
mov
add
rcr
sbbl
add
sub
push
jg
inc
push
insl
or
lds
and
insl
jg
or
test
jbe
pop
mov
sub
daa
cmp
divb
or
jecxz
jno
lock
arpl
mov
push
in
sbb
arpl
aad
xchg
sub
sub
push
mov
lock
cmpsl
loop
adc
js
jns
imul
pop
cmp
cmpsb
or
push
pop
jp
mov
mov
fcoms
idivb
scas
insl
push
in
mov
mov
jl
jbe
lods
cmp
add
jp
aad
stc
fwait
iret
jecxz
scas
leave
adc
xchg
fwait
xor
xchg
stos
lcall
popf
enter
repz
imul
mov
sub
mov
inc
aas
inc
les
xchg
dec
xor
rclb
ds
jl
es
in
push
dec
subl
mov
mov
orb
mov
adc
or
and
cld
sarb
fisubl
add
add
loopne
mov
pop
push
testb
adc
fldenv
inc
lret
loopne
jno
repnz
fldt
lcall
repnz
cltd
jo
fidivrl
outsb
xor
dec
and
daa
daa
and
jl
xor
add
jle
decb
mov
in
pop
sub
repnz
fsub
hlt
clc
in
push
xchg
xlat
inc
push
mov
push
mov
ficompl
cmpsb
inc
rcr
mov
and
shl
xchg
mov
adc
cmp
lret
cmp
repz
stos
xchg
mov
pop
loop
add
in
jl
xor
jne
xchg
push
cmpsb
pop
int3
adc
or
jns
cmp
and
xor
stos
rcll
jg
and
inc
cld
push
inc
and
sbb
cs
or
pop
inc
sub
je
in
mov
jne
xor
dec
add
xor
in
rcll
or
arpl
mov
lods
scas
insl
arpl
fs
and
int3
enter
mov
test
add
popf
add
repnz
icebp
adc
mov
fucomi
test
xchg
icebp
test
cld
mov
arpl
outsl
popa
cmp
pop
push
stos
xor
int3
addb
mov
movsl
sbb
mov
in
adc
mov
add
gs
mov
add
stos
sbb
into
push
jbe
out
mov
imul
cmp
xchg
jb
dec
shr
push
mov
stc
push
pop
jno
iret
push
ja
mov
sbb
cmc
jg
dec
mov
outsb
cmpsb
push
jl
mov
or
mov
cmp
fs
cmp
mov
sbbb
and
xor
mov
xor
mov
and
push
xchg
out
pop
orl
pop
and
roll
sub
stos
push
xor
fidivs
push
inc
pop
add
and
es
in
adcl
push
cmp
cli
dec
scas
aam
subl
xchg
stos
or
loope
add
jbe
pop
loope
inc
xchg
xor
and
add
dec
lret
addb
jb
ja
movsb
ret
sub
std
in
jne
cs
push
xchg
loopne
enter
data16
fiaddl
mov
mov
and
jl
lea
dec
mov
jl
sub
movsb
push
cwtl
lods
xlat
dec
jb
or
orb
leave
or
mov
cmp
subb
pop
pop
xor
mulb
push
sarb
xor
ja
cmp
pop
mov
jns
push
ret
or
das
and
jno
fwait
xchg
inc
mov
mov
push
jmp
popf
push
dec
fwait
into
xchg
scas
or
dec
loop
xor
pop
addr16
mov
mov
aam
les
or
inc
xor
pusha
pop
lea
stos
mov
jb
mov
mov
fidivrl
decl
loopne
xchg
testl
out
jo
inc
sbb
in
mov
lret
int
sub
mov
jge
ret
jb
jmp
or
aam
imulb
or
add
jge
xor
mov
pop
es
xchg
sbb
adc
scas
out
js
fisubrs
mov
mov
jge
fdivrl
out
pop
hlt
mov
push
insl
add
push
je
fnsave
pop
mov
mov
add
xorl
and
mov
lcall
jmp
and
jle
pop
jg
lcall
mov
inc
sbb
xor
cmp
repz
clc
subl
inc
push
sbb
dec
xor
test
cmp
sti
sbb
mov
jne
pop
ss
sub
insl
jle
pop
and
js
bound
cltd
frstor
sub
adc
shl
lock
movsl
add
imul
sub
mov
lahf
xor
decl
pusha
cs
add
jo
int
js
pusha
popa
mov
and
loopne
pop
popf
fsubl
adc
add
or
pop
mov
in
dec
cs
adc
out
and
mov
aaa
add
sbb
mov
mov
sbb
cmp
jp
daa
out
push
mov
das
add
mov
adc
scas
ret
sbbl
fcompl
loop
and
orl
inc
andl
pushf
pusha
bound
lahf
sbbb
mov
testl
push
popf
mov
fnstcw
mov
and
movsb
xchg
lcall
mov
cli
insb
mov
jge
addl
cmp
cmp
pop
jbe
stc
push
inc
add
fwait
inc
and
push
pop
addr16
mov
xchg
jmp
and
fisubrl
or
jge
or
jmp
adc
das
xor
sti
adc
cmp
add
and
sbb
dec
pop
mov
mov
divl
shll
sahf
pop
shll
adc
rcrl
adc
dec
pop
mov
das
fdivs
mov
add
popf
jbe
lret
sbb
lcall
rcrb
xor
mov
mov
adc
cs
cli
and
aaa
jl
add
cmp
popf
mov
sbb
dec
shrb
popa
adc
pusha
cltd
outsl
insl
movsb
std
nop
nop
pusha
lock
inc
dec
pop
pop
push
mov
pop
cmovg
xchg
shrb
add
in
movsb
fsubrl
mov
fcomi
xchg
or
jle
cmp
mov
int
and
cs
add
push
leave
xchg
and
sbb
aaa
loope
xor
jmp
arpl
fldt
mov
les
mov
mov
cld
loopne
and
push
dec
push
movsb
cmp
leave
es
out
add
jecxz
sbb
movsb
outsl
sbb
pop
sub
pop
jb
add
or
loop
scas
adc
cmp
ja
push
mov
test
mov
mov
adc
xchg
imul
fs
and
mov
xor
cmp
stc
out
xchg
stos
mov
dec
mov
cmp
leave
leave
sbb
and
dec
ret
inc
ficoml
movl
sbb
stos
sbb
push
jle
sub
bnd
and
mov
dec
shlb
pop
movsb
aam
jmp
shl
and
and
jg
leave
ljmp
mov
cmpsb
jno
or
cli
push
and
push
clc
popl
es
xor
jns
sbb
add
jne
mov
xor
sbb
push
mov
shrl
mov
dec
inc
dec
jmp
sti
aaa
into
lods
outsb
lcall
int
in
jle
jo
jge
jae
leave
jmp
sub
pop
push
or
or
fwait
push
cmc
pavgw
in
pop
call
cmp
push
pushf
sahf
popa
sub
out
mov
mov
pop
out
pop
fisttpll
xlat
mull
movsb
cmp
push
jae
pop
imul
jno
mov
adc
or
mov
pop
mov
mov
outsl
lahf
push
push
clc
mov
lret
mov
pushf
enter
fdivs
popf
inc
push
mov
cld
cmc
xorb
jns
mov
mov
jle
inc
scas
sbb
call
inc
or
lods
push
add
test
scas
loop
inc
push
dec
pop
adc
fldenv
xor
or
push
lea
cmp
sbb
sahf
sbb
lods
es
pusha
pop
leave
mov
adc
sbb
subb
imul
lock
lret
idiv
mov
adc
sarl
pop
sbb
fwait
insb
add
out
arpl
mov
push
push
lds
mov
pop
push
mov
les
mov
lret
push
out
fldcw
in
pop
jmp
adc
cli
xor
fnstcw
and
jle
in
popa
aam
cmp
test
xor
out
lock
cmpb
sahf
xchg
dec
adc
mov
test
add
pusha
and
xchg
jno
mov
sub
lahf
push
sbb
imul
add
xorb
jnp
imul
adc
jg
dec
xor
sub
xchg
in
jle
pmuludq
mov
inc
jp
icebp
and
testb
push
enter
and
push
test
ud1
xchg
mov
icebp
xchg
pop
scas
xor
and
sub
sbb
in
mov
shlb
mov
sub
add
sub
popf
push
out
inc
jb
stc
xor
insl
inc
xchg
lea
xchg
mov
dec
pop
and
inc
inc
dec
sbb
cmovns
dec
mov
stc
mov
loope
mov
outsl
pop
addr16
cmp
ss
lea
arpl
outsl
testl
in
dec
int3
pop
push
enter
pop
mov
fsubrs
jnp
enter
lods
jb
das
aas
jne
sub
adc
mov
pop
dec
adc
leave
sub
mov
fidivs
in
sub
lods
mov
xchg
pushf
dec
or
mov
or
sbb
sti
xchg
inc
mull
sbb
jge
dec
scas
ret
or
in
mov
jge
pop
pop
ss
pop
testl
imul
fwait
push
push
sarl
add
sub
inc
dec
mov
mov
mov
fnstcw
cmovge
subl
mov
in
pushf
pusha
xchg
sbb
scas
mov
mov
cwtl
clc
mov
mov
rol
std
into
std
xchg
or
ljmp
add
and
push
insl
pushf
jecxz
cmp
or
mov
testb
mov
data16
pushf
and
testb
jp
test
arpl
dec
sbb
push
lahf
flds
push
mov
std
and
cmpsb
sub
adc
cmp
call
push
push
xchg
lcall
xchg
mov
sbb
or
mov
pusha
mov
int3
jl
jnp
push
iret
xchg
testl
push
dec
xchg
test
inc
sub
imul
int
inc
sub
cmpl
pop
pop
adc
roll
xor
into
movsb
mov
mov
fldt
sbb
mov
outsb
outsb
ret
sub
js
sbb
mov
mov
test
stc
adc
gs
add
test
repz
add
lods
cmovle
xchg
js
xor
insl
xchg
pop
sub
mov
insl
and
cltd
and
cli
call
push
mov
cltd
xor
fistpl
outsl
adc
mov
push
mov
cs
push
push
cmp
jp
pushf
adcl
sbb
mov
pop
mov
in
dec
cmp
cmpsb
mov
mov
push
or
ds
enter
mov
sub
sbb
sarb
insl
push
subb
ss
sub
imul
and
call
ficompl
pusha
lock
ret
push
shrl
jecxz
xor
sub
aad
fdivp
jns
push
or
mov
cmp
mov
push
mov
cmp
jbe
adc
pop
dec
out
push
add
sbb
mov
mov
shr
scas
rcll
cs
lods
ljmp
jmp
adc
mov
pop
mov
adc
insl
add
xchg
cmp
mov
lret
push
lods
repz
popa
ror
fsubr
add
mov
lds
cmc
mov
inc
and
xchg
xor
fdivs
or
push
jns
sub
pushf
outsl
loope
loopne
insl
pop
imul
cmpsb
lea
das
or
push
adc
repnz
cmc
xchg
sbb
lret
or
cmp
add
les
pop
lret
ret
repnz
pusha
pop
arpl
icebp
mov
shl
or
push
sarb
cmc
sub
addr16
pop
inc
inc
ss
xchg
xor
and
or
iret
xor
gs
add
cltd
dec
popa
pop
sub
outsb
sbb
sbb
and
jnp
and
lcall
push
fstpt
adc
aam
or
pop
js
lods
test
xchg
inc
ja
repnz
sub
sbb
inc
test
dec
inc
mov
cmp
add
enter
insb
test
xor
push
push
cmpsl
pop
jmp
shrb
push
out
imulb
xor
je
insl
test
mov
cwtl
dec
mov
stc
jecxz
mov
pop
mov
pop
in
sub
mov
and
add
sbb
outsl
push
jle
lret
es
mov
sbb
push
pop
loop
push
das
test
pop
mov
cmpsb
mov
lods
adc
and
into
fs
push
inc
ss
sbb
sbbb
sbb
sbbb
or
out
push
mov
into
sbb
add
jg
sbb
xchg
push
in
or
xchg
pusha
dec
dec
in
inc
stos
jb
das
cmp
rcrb
sub
mov
xchg
dec
popa
mov
cli
and
or
xchg
bound
rolb
aam
rcl
fidivrs
out
mov
in
test
lret
cli
das
data16
push
pushf
lods
lock
call
push
test
inc
lret
xor
test
push
out
adc
rcrb
cld
lods
push
jo
xchg
dec
push
daa
inc
jbe
mov
shlb
add
scas
gs
push
adc
clc
cltd
mov
or
cmp
push
lods
hlt
dec
int3
lret
xor
sahf
inc
fimull
mov
fdivrs
outsl
jmp
rol
loopne
or
hlt
ds
jae
pop
out
movsl
mov
inc
xor
iret
cli
push
movsb
push
xlat
jbe
or
sti
dec
inc
std
cltd
jae
inc
sahf
dec
pushf
outsl
jle
sbb
sbb
std
mov
into
jg
arpl
sbbb
xchg
pushf
xor
sub
nopl
push
push
std
fxch
mov
enter
es
mov
loopne
xchg
mov
or
ja
cli
rorl
pop
jl
insl
enter
pop
xchg
mov
xlat
jns
xor
push
lret
outsl
mov
lret
mov
cmp
or
mov
outsl
and
addb
jae
mov
or
clc
dec
push
into
pop
fmuls
test
ret
push
mov
cli
mov
jecxz
pop
lods
call
sub
dec
mov
inc
popf
xchg
and
aas
mov
iret
add
or
dec
cli
test
dec
dec
pop
stc
popa
leave
imul
lods
out
xlat
outsl
jae
adc
aam
testl
dec
dec
fsub
cld
inc
dec
xchg
inc
icebp
insb
xor
cmp
or
add
sbb
mov
negb
sbb
pop
sbb
mov
inc
xchg
add
jge
enter
pushf
loope
sub
xchg
das
shrb
lahf
rcrl
rorl
pusha
xor
aaa
cmp
lret
cmp
loop,pn
dec
loope
inc
xor
jmp
push
das
inc
xchg
xchg
dec
outsb
lods
ret
lahf
push
movsb
xchg
mov
push
jmp
xor
arpl
adc
jnp
push
test
xchg
mov
xchg
icebp
or
cmp
movsl
repnz
inc
clc
sahf
xchg
inc
jecxz
xchg
xchg
mov
pop
sbb
push
jg
cmp
fdivl
mov
xchg
pushf
leave
push
daa
mov
stos
inc
jb
xor
sahf
ret
xor
mov
and
pop
mov
movsl
mov
xchg
gs
test
adc
xchg
xor
mov
scas
loop
cmp
xor
popa
loope
stc
inc
aas
shlb
mov
bound
shrb
les
adc
mov
sbb
or
fwait
jg
and
les
inc
push
adc
mov
cs
in
sahf
notb
lods
lock
or
add
fdivrl
mov
lds
push
push
push
mov
cs
int3
adc
frstor
popf
inc
pop
lds
or
sub
and
ret
push
imul
xchg
in
andl
cmp
xor
mov
xchg
pop
xchg
lods
rorl
fisubrs
cmc
loope
daa
lock
out
jns
cmp
jge
pop
std
pop
push
dec
pop
push
sbb
outsb
shll
xor
add
pushf
inc
and
jns
inc
aas
add
insl
in
fdivrs
cmpsl
and
or
adc
fucomp
ret
pop
jo
mov
sub
sub
add
inc
xchg
push
hlt
jmp
or
mov
imul
mov
adc
mov
and
mov
jg
adc
xor
cld
fwait
sbb
xchg
inc
or
bnd
stos
subb
mov
fdivl
sbb
and
mov
add
mov
loop
std
orl
roll
scas
cmp
repnz
popf
mov
push
lock
fldenv
mov
fsubr
repnz
pop
sbb
jl
into
fstpl
inc
pushf
cltd
sbb
add
push
or
mov
test
rcl
lret
out
pop
lret
lock
xchg
pushf
sub
add
aas
cli
and
jnp
jl
dec
pop
xchg
sbb
and
insb
mull
imul
and
adc
ss
adc
nop
stos
dec
into
sub
cwtl
pop
pop
xchg
addr16
adc
or
push
pop
in
fwait
repz
stos
addr16
sbb
je
lret
pop
xor
xchg
stos
sbb
push
cltd
cmp
pop
jbe
jns
cltd
push
stc
jno
xchg
mov
out
ljmp
jecxz
scas
nop
lods
mov
cltd
cwtl
cs
pop
or
inc
sub
mov
xchg
jnp
loope
cmp
test
cmpsb
mov
jge
int
int3
popf
test
sub
out
push
pop
jg
pop
daa
mov
rol
insb
pop
movsl
ds
or
xor
adc
adc
popl
push
repz
dec
adcl
push
cmp
pop
mov
adc
sbb
xchg
outsl
pop
test
leave
cmpsb
pushl
add
fnstenv
pushf
jno
jecxz
sbb
in
cld
jl
mov
jns
into
test
inc
push
or
pop
mov
lods
aas
inc
pop
bound
stc
pop
adc
mov
data16
lcall
or
enter
add
std
and
pop
cltd
inc
pushf
nop
jp
push
add
and
ja
add
stos
insl
xor
push
mov
repz
push
es
aad
mov
pause
cpuid
adc
mov
pop
ret
sbb
adc
sub
sbb
cmp
test
push
mov
les
out
enter
imul
and
popa
dec
mov
add
in
pop
les
jb
sbb
cltd
jns
fmuls
int
pop
mov
notb
mov
or
out
imul
sbb
cmc
adc
jg
enter
xor
aaa
daa
les
push
std
ds
test
mov
int3
ficoms
inc
imull
sahf
mov
mov
scas
mov
movsb
repz
les
dec
aad
push
insl
aas
mov
aad
or
ljmp
jne
mov
and
push
jecxz
cmpl
jl
sbb
ljmp
clc
xchg
rep
inc
repz
xchg
insb
push
adc
ret
xchg
add
jo
js
cmc
cmp
jecxz
lea
lods
popf
cli
js
mov
jno
je
bound
mov
jmp
data16
movsb
cltd
fbld
rcl
or
cli
std
sub
or
inc
pushf
add
into
gs
adc
in
pop
cmc
and
pop
cld
mov
cld
testl
or
cmp
in
dec
pop
sbb
mov
insl
ficoms
into
push
repz
test
outsb
and
imul
adc
gs
or
mov
dec
lods
cmp
test
notb
bound
ds
mov
je
xor
mov
popf
cwtl
ret
jnp
push
pop
push
cwtl
mov
ret
inc
fs
jecxz
adc
or
cmpsl
inc
mov
fstps
cmpsb
mov
cwtl
xor
sub
ret
cmpsb
lods
arpl
daa
push
test
test
xor
lods
xorb
sbbl
pop
in
paddusb
lock
outsl
jl
sti
adc
xchg
jmp
push
jno
sbb
mov
ret
cmpsb
mov
ret
adc
mov
jbe
mov
or
fsubrl
xchg
sbb
inc
stos
rol
cmpsb
cmc
mov
aad
pop
pop
ficomps
lss
mov
popa
xor
stc
scas
rcll
jno
add
mov
shrb
adc
stos
mov
int3
into
jl
fcompl
xchg
jne
pushf
fisubrs
push
out
xchg
les
push
or
test
mov
mov
xor
xor
push
pop
ja
cmp
js
inc
aam
iret
push
xchg
push
xorl
aas
and
clc
pop
insb
jne
jbe
test
mov
lcall
insb
clc
shl
sub
lock
jne
mov
mov
pop
mov
ret
pushf
sub
pop
jae
xchg
cli
and
loope
push
inc
les
cwtl
push
mov
mov
movsl
cwtl
mov
xor
jecxz
sbb
ljmp
das
sub
pop
cmp
add
and
gs
adc
inc
clc
jbe
shrl
ficompl
fsubr
mov
test
mov
mull
mov
sub
ret
jle
inc
cmpsb
fcmovnbe
xor
sub
lcall
or
sub
mov
push
inc
or
mov
out
mov
out
popa
int
sbb
lock
add
xor
lea
subb
cltd
dec
adc
cmpl
cmpsl
xchg
dec
in
enter
clc
pop
mov
lahf
mov
shll
adc
xor
xor
xchg
ds
push
repnz
inc
push
addb
mov
mov
sbb
outsb
push
or
enter
out
dec
in
cmpsl
sbb
leave
fadd
jl
test
gs
aas
add
addr16
ja
cld
cmpsb
cmpsb
test
movb
stc
lret
sbb
aas
dec
xor
out
arpl
bswap
adc
dec
dec
in
sbb
das
adc
and
xor
sar
adc
in
aaa
or
xor
xchg
mov
leave
mov
aad
ret
sub
push
pusha
adc
sub
test
mov
xlat
xchg
xor
add
inc
sub
out
lret
inc
out
outsl
jo
aaa
clc
insl
add
loopne
dec
hlt
jno
jmp
add
mov
scas
jbe
cli
sbb
dec
pop
lock
daa
shr
or
xchg
xor
dec
lcall
stos
dec
cmpsl
lret
xchg
push
int3
xor
mov
add
ret
push
pop
lods
adc
inc
xchg
leave
adcb
rcr
dec
mov
xchg
jmp
pop
add
divb
push
push
in
dec
rol
insl
es
or
movsb
fdivl
fistpll
xchg
mov
insb
cmp
cmp
sub
pop
dec
xchg
mov
jbe
sahf
mov
mov
and
sbb
mov
adc
sar
pslld
xchg
loopne
add
lcall
pop
push
int3
and
lds
jns
imulb
or
sub
mov
jl
lock
divl
int3
insl
ret
aaa
int
rcrl
adc
or
sarb
mov
mov
cltd
pop
xor
jle
cmp
cmp
or
into
pop
adc
mov
hlt
dec
stc
fdivs
imul
adc
call
cltd
stc
jge
xchg
xchg
ss
xor
pop
popf
scas
or
jns
jne
aad
sar
add
sbb
jmp
adc
sbbb
aam
and
and
gs
sub
mov
int3
arpl
adcb
or
mov
jne
dec
xchg
sub
lret
negb
movsl
test
outsl
sub
sub
incl
sub
popf
in
iret
pop
in
shr
cmp
add
lods
push
or
adcb
aaa
loope
loope
add
imul
movsb
jns
pop
addr16
jge
or
push
fs
cmp
scas
inc
into
pop
lahf
adcb
pop
cmpsl
lods
ss
inc
jno
test
cmp
mov
mov
icebp
stos
lret
mov
jbe
pushf
cmpsl
add
bound
cmc
shlb
add
xchg
and
pushl
mov
mov
sub
lock
inc
hlt
mov
push
mov
ds
add
sbbb
out
mov
shrl
inc
in
inc
cltd
xor
jmp
sbb
and
repz
inc
stc
dec
divb
popf
std
popf
dec
pop
cmp
pop
inc
mov
shrl
xorl
and
or
sbb
mov
sub
repz
inc
test
push
and
testl
cwtl
das
dec
pop
jo
aam
int
push
jl
inc
jmp
nop
add
jb
xor
xchg
cmp
push
sti
and
sti
scas
mov
scas
xor
in
shr
and
lcall
xor
add
and
pop
xor
test
mov
jge
sti
cmpsb
cmp
and
jnp
and
into
loopne
add
inc
in
outsb
mov
and
jle
cmp
push
dec
loope
mov
xchg
aam
scas
ljmp
jb
out
cmp
fwait
ss
jp
jle
push
push
push
xchg
push
sub
int
cmp
mov
pop
lods
pusha
or
jle
cmp
out
fwait
fs
nop
sub
add
jecxz
sbb
mov
sub
dec
popa
rorb
insl
mov
int
dec
outsb
sub
in
lods
std
cltd
adc
fwait
out
mov
test
xchg
dec
mov
jle
lods
xchg
outsb
sahf
jg
xchg
mov
or
aam
mov
dec
cmp
sub
or
xchg
push
sub
xor
scas
jg
jns
sbb
jne
pop
lahf
enter
pop
push
add
repz
jae
test
mov
jle
fsubr
and
lcall
mov
mov
or
iret
cs
and
and
rclb
xlat
xchg
mov
and
insl
push
sarl
add
xor
xor
test
sub
add
or
dec
push
fstpt
xchg
fsubrs
dec
adc
fimuls
sub
jge
mov
out
fsubrl
push
xor
sti
out
shr
mov
xchg
lods
addr16
xor
sbbl
test
dec
outsb
lcall
lret
ds
jbe
inc
add
lock
and
imul
lahf
rorb
push
stc
enter
cmp
js
xlat
pop
add
add
stos
mov
xchg
icebp
movsl
jae
xlat
sbb
inc
ja
push
das
cld
sbb
adc
mov
push
arpl
pop
push
roll
cmp
js
ds
je
pusha
push
sub
jnp
daa
lods
xchg
int
xchg
fs
sbb
cmp
cmpsl
mov
int
push
enter
dec
sub
fistpl
jle
xchg
leave
pop
popa
js
push
in
jl
cli
or
hlt
mov
je
xchg
xor
and
and
push
pop
adc
and
jle
add
jmp
popa
jmp
adc
ret
inc
mov
pop
dec
mov
imul
and
add
pop
jecxz
mov
cld
jne
icebp
scas
popa
jb
push
movsb
test
loopne
add
mull
adc
mov
fwait
mov
lret
xchg
in
or
jp
test
nop
dec
dec
sbb
jg
addr16
roll
lcall
push
enter
jp
mov
popa
or
jecxz
loop
sbb
mov
or
aad
jno
sub
sahf
xchg
or
dec
ds
mov
mov
lods
in
and
inc
loopne
repz
adc
inc
jle
or
mov
idivl
xor
mov
mov
inc
push
jp
pop
test
shll
xchg
mov
leave
test
and
add
jae
rcll
test
mov
adc
scas
nop
mov
repz
cmp
pop
aam
test
jecxz
inc
inc
jecxz
ljmp
push
xchg
adc
aad
adc
dec
fbstp
aad
mov
cmp
loop
push
cltd
jl
call
inc
pushf
std
jb
and
xchg
push
addl
jp
cli
pushf
js
mov
mov
and
mov
pusha
push
mov
fs
cwtl
shlb
pop
and
imul
dec
xchg
add
hlt
movsb
stos
xchg
popa
or
xchg
mov
cmp
cwtl
inc
pop
jge
or
call
and
aaa
fisubl
aaa
pop
jno
aas
fnstsw
loope
cmp
xor
cmc
js
dec
adc
or
repnz
enter
sbb
das
in
push
aas
push
jp
loope
sub
jae
movsb
mov
push
rcrl
jbe
xchg
mov
xchg
mov
fwait
lret
and
out
jmp
pop
push
lods
adc
cmc
inc
push
cmpsl
push
xchg
addr16
mov
outsl
hlt
cmp
ljmp
insb
inc
mov
adc
dec
scas
mov
push
repz
out
mov
shrb
mov
pushf
push
xor
xor
cmp
cmc
ss
cli
movb
jecxz
add
hlt
xchg
lds
dec
add
cld
push
in
mov
fwait
jne
rcrb
pop
stos
jmp
pop
push
fwait
arpl
arpl
xchg
in
jp
lret
or
sti
pop
push
or
pushf
pop
rol
adc
imul
add
and
hlt
ljmp
clc
mov
addr16
and
mov
mov
xor
aaa
and
inc
pop
sub
xchg
sub
dec
and
pop
jp
sbbb
test
icebp
repnz
loopne
fistl
int3
pushf
out
jp
ja
xor
outsb
cmc
adc
pop
sub
dec
inc
xor
ds
insb
sarb
aam
or
leave
pop
mov
push
pop
dec
pop
cmp
xchg
in
push
ljmp
sahf
in
mulb
es
xor
jb
rcl
rclb
clc
mov
pusha
jle
adc
loop
aaa
xor
mov
or
inc
xchg
jne
add
sub
mov
imul
pop
mov
sub
inc
inc
dec
faddp
andb
mov
mov
pushf
daa
ret
jp,pt
sub
dec
fnstsw
cli
je
cmpsb
les
sbbb
mov
mov
ss
push
and
push
dec
loope
jno
dec
es
push
lods
js
push
inc
stos
adc
orb
and
xchg
daa
cli
push
pop
pop
dec
subb
les
lds
push
mov
cmp
jbe
test
xchg
jbe
decb
and
mov
dec
push
cmpsl
jg
adc
jp
mov
lds
insb
fwait
inc
pusha
mov
shrl
ret
adc
sbb
mov
fcmovne
aam
iret
mov
div
insl
sub
and
sub
je
add
in
jbe
pop
push
dec
out
into
jge
push
push
push
mov
add
fisubrl
inc
xlat
loop
jne
cmpsl
mov
movsb
inc
mov
xchg
inc
mov
jne
xchg
push
sbbb
push
mov
push
push
inc
lds
testb
and
shlb
stos
mov
xlat
sahf
addr16
fwait
call
push
cmp
or
test
cmpsb
sbb
movsl
and
dec
stc
into
in
xor
push
aam
xor
stc
scas
aaa
inc
nop
mov
in
lret
mov
xchg
mov
pusha
out
sti
lods
or
test
push
jmp
cmp
jbe
push
push
test
sbb
dec
xchg
std
lcall
pop
test
mov
ds
mov
jl
cmp
add
test
mov
pop
mov
cmp
dec
xchg
call
xor
loop
mov
push
mov
pop
nop
pop
add
mov
imul
sbb
loop
and
adc
mov
popa
lds
repnz
rcll
in
out
stc
dec
lahf
movsb
lsl
clc
rcll
test
xor
jmp
out
test
repz
stos
mov
inc
addr16
dec
sub
enter
jmp
dec
add
inc
into
in
inc
int
mov
lret
mov
cmpsl
mov
push
fld
icebp
dec
jl
je
test
add
mov
ja
push
sub
mov
ret
sbb
cmpsl
ret
cmp
notl
dec
cmp
xlat
outsl
loope
addr16
stos
outsb
jb
rolb
out
mov
jnp
mov
bnd
pusha
imul
dec
mov
stc
popf
xor
jecxz
mov
aad
icebp
les
pop
xchg
insl
lcall
in
and
ss
mov
push
in
das
add
or
ljmp
mov
mov
cmp
pop
cmp
rcl
ret
sbb
lahf
je
lock
jns
sti
push
nop
popa
into
and
in
xlat
sub
mov
jg
insl
mov
push
dec
push
fldt
push
pmulhuw
insb
bound
mov
addl
out
shll
clc
cltd
push
testl
aam
loopne
pop
mov
sub
pusha
dec
adc
and
int
popa
out
inc
cpuid
push
lods
dec
iret
lret
and
andl
fdivs
and
dec
into
and
shl
mov
mov
fildl
out
xor
dec
and
jl
and
xchg
dec
lahf
xchg
cmpb
pop
fcompl
xor
mov
aam
aas
adc
mov
nop
xor
adc
in
adc
jae
dec
mov
dec
movsb
lods
mov
add
xlat
mov
cmp
cwtl
in
inc
pop
pushf
dec
pop
cld
sub
shll
or
ret
mov
xchg
cli
movsb
cli
into
mov
icebp
sbb
adc
les
xchg
xor
jmp
jae
mov
or
mov
xor
and
dec
sti
out
inc
insl
push
aad
xchg
xor
test
iret
cwtl
add
pop
aas
packuswb
rcr
daa
jle
cli
iret
pop
sub
divl
cld
sti
inc
mov
sbb
out
ja
xor
mov
jbe
rorb
jl
insl
pop
adc
out
ret
loopne
in
inc
divb
sub
movsl
stos
shl
call
jbe
mov
or
and
imul
leave
jg
jae
fisubl
pop
iret
xchg
ds
lret
sub
adc
inc
add
mov
dec
addr16
adc
jae
jbe
mov
inc
or
fldt
dec
shlb
rcll
mov
mov
mov
movsb
and
shl
adc
sub
outsl
mov
fbstp
icebp
sbb
stc
mov
jnp
dec
mov
loope
pop
mov
jmp
adc
adc
add
mov
icebp
gs
fidivrs
push
mov
push
sub
jns
xor
sbb
cmp
pop
aam
daa
es
mov
divb
mov
movsl
addr16
push
in
cltd
gs
cmp
lret
or
in
and
fs
aam
leave
jmp
ds
pop
mov
sub
sbb
cmp
or
aaa
mov
push
cwtl
jo
push
push
ljmp
pop
popa
adc
jbe
mov
lret
shrb
in
je
out
mov
and
adc
rorl
xor
push
push
ds
mov
xchg
sbb
mov
cmc
dec
loop
out
xchg
xor
mov
cmp
ljmp
or
jnp
ljmp
dec
out
mov
fidivs
and
test
cld
add
jae
push
and
push
decb
leave
lea
popa
int
pop
outsb
add
arpl
sbb
inc
sbb
aas
arpl
or
adc
push
add
adc
hlt
mov
cwtl
and
cs
xchg
testb
jecxz
flds
pop
hlt
enter
ds
pop
xor
jbe
rcrl
ljmp
cwtl
je
xor
jnp
lods
pop
cmpsb
adc
sbb
dec
xchg
inc
lea
fstp
frstor
fs
cmpsl
notb
dec
mov
xchg
int
xchg
sbb
loop
mov
imul
inc
jnp
test
iret
outsb
imulb
dec
dec
frstor
mov
out
lret
and
mov
push
in
xchg
scas
es
jle
out
xor
daa
xchg
cmp
sbb
data16
push
popa
push
mov
pop
cmp
jne
jge
imulb
jae
repnz
stos
pop
enter
mov
inc
sahf
push
or
sub
pop
push
hlt
ja
push
and
idiv
push
scas
mov
lods
jae
std
inc
cli
sub
xchg
aad
push
inc
in
add
test
inc
popf
jb
mov
push
outsl
pop
mov
push
sub
divb
mov
mov
sahf
sti
xchg
shlb
insb
inc
dec
and
xlat
stos
xor
mov
mov
out
xchg
jle
xor
mov
pushf
xor
enter
add
mov
pop
mov
aas
arpl
pop
sbb
stc
popa
xlat
inc
pop
xor
jge
inc
std
notl
js
lods
enter
or
jne
add
out
je
jg
call
cmpb
push
lods
dec
test
aad
adc
sbbl
push
int
inc
cmp
xchg
cmp
jb
aaa
into
fisubrs
jns
push
insl
sbb
les
fldl
add
shrl
xlat
xchg
jge
stos
pop
mov
jnp
jl
mov
lcall
sbb
mov
xlat
xor
idiv
jecxz
sub
bound
jp
inc
cmp
push
imul
xchg
adc
mov
ret
jg
rorb
in
out
je
push
ja
sbb
cltd
out
in
test
shr
cmp
mov
jo
stos
scas
das
sub
pop
aad
insb
sbb
jg
or
rol
enter
xchg
adc
out
jp
ret
movsb
dec
xlat
rorb
out
shlb
ss
out
adcb
cmp
add
daa
mov
in
jecxz
inc
and
inc
adc
gs
sbb
jecxz
pop
sbb
das
js
rol
dec
jae
mov
sub
push
and
xor
xorb
xchg
aam
pop
aaa
test
sbb
cmp
ret
in
out
mov
mov
xlat
outsl
int3
arpl
jne
insb
sub
mov
divl
fiaddl
xchg
sti
jp
sarl
pop
xlat
and
fldcw
xchg
mov
dec
push
scas
hlt
ja
adc
inc
lods
bound
mov
jbe
test
nop
sub
imul
push
xor
mov
fstpt
and
push
ss
xor
adcb
inc
div
daa
cmpsb
in
enter
loope
sub
fistpll
adc
jl
hlt
xor
fimull
mov
data16
cmp
cmc
xor
pop
add
mov
cmc
repz
mov
call
fidivs
xchg
cmp
jne
mov
add
int3
into
enter
dec
in
xchg
iret
and
outsb
call
inc
jmp
sbb
imul
jp
movsl
out
push
std
sbb
sub
xor
ret
call
pop
mov
icebp
clc
push
icebp
or
sub
fwait
mov
add
mov
test
push
lcall
daa
subb
pop
inc
inc
mov
sub
cltd
sbb
cwtl
test
aas
mov
data16
mov
and
into
loope
ljmp
pushf
adcb
sbb
or
adc
jae
cmpsl
ret
sbb
or
mov
jns
adc
call
pop
sub
lcall
add
sbb
ljmp
dec
xchg
jp
mov
xchg
out
cmpsb
cmp
pusha
sbb
xchg
roll
push
add
jne
popf
out
test
dec
pusha
push
mov
dec
sbb
cwtl
jnp
pop
adc
out
bnd
jo
sub
lock
ror
dec
rcrl
pop
xor
mov
mov
push
dec
push
push
incl
enter
mov
aad
mov
push
int3
lret
icebp
daa
addb
jmp
xchg
inc
jnp
xlat
js
dec
out
xchg
mov
ret
pop
mov
pop
andb
push
dec
ljmp
call
sbb
dec
xor
mov
and
mov
cmp
jl
insb
test
or
aas
or
jmp
leave
loope
imul
or
add
mov
sbb
lock
ss
xor
orb
pop
insl
adcl
andl
hlt
shr
add
sub
ja
mov
ds
xor
int3
fdivs
cltd
test
push
or
mov
xor
call
cmc
push
add
add
pop
cmp
lahf
mov
lock
repz
push
mov
loope
out
inc
insl
sub
cmpsb
test
add
cmpsb
and
inc
lcall
xor
fdivl
mov
bound
pop
pop
or
sbb
ret
and
jb,pn
mov
ret
int
lock
fdiv
mov
cmp
and
fidivrs
in
or
lods
lea
inc
out
add
adc
cmp
pusha
add
arpl
pop
aaa
fadds
out
dec
push
lods
jge
nop
xor
xchg
sahf
xchg
loopne
xor
push
out
repz
xorl
mov
xorb
dec
and
out
mov
push
mov
mov
pop
imul
es
test
lds
test
imul
lods
mov
aas
stc
sbbb
pop
jno
cmpsl
jle
mov
add
in
cltd
or
pushl
insl
and
mov
dec
cmp
fs
inc
in
mov
pop
add
cmp
pop
cs
jecxz
mov
mov
test
xchg
mov
test
or
xor
orb
mov
stos
push
inc
cmpsl
xor
sbb
cmp
push
lret
in
hlt
pusha
test
push
int3
sbb
pop
cwtl
inc
fsts
nop
pusha
inc
xlat
test
or
fcmovu
mov
jle
popa
clc
sub
jg
data16
loopne
push
xor
bound
sbb
mov
fimuls
pop
pop
shlb
dec
push
and
imul
jne
xchg
int
mov
mov
shr
cmpl
frstor
test
bound
lods
lock
faddp
pushf
push
mov
pushf
xor
gs
push
fcomps
andb
mov
xchg
and
int
inc
push
pop
lods
jnp
ljmp
or
out
mov
mov
fcompl
xchg
lods
push
add
mov
movsb
sub
out
inc
pop
pop
jecxz
mov
call
and
incl
js
xchg
jp
inc
sub
fwait
pop
fdivrl
ja
xchg
and
pop
mov
ret
and
dec
cmp
bound
cwtl
inc
fxch
dec
data16
add
hlt
daa
and
dec
imul
addr16
les
inc
test
mov
sbb
add
je
sbb
js
fnstenv
lea
lock
fs
jb
addl
fsubr
nop
lods
sbb
or
ljmp
ljmp
pushf
subb
sub
sbb
dec
add
mov
movsb
dec
repz
les
or
mov
mov
aam
movsl
ret
sub
insl
add
dec
out
xchg
adcl
enter
pop
adc
std
pop
mov
mov
imul
push
cmp
rcl
jge
sti
sub
cmp
add
add
scas
pop
sbb
fcmovbe
jle
xor
in
cli
mov
scas
inc
or
mov
push
dec
and
xchg
les
sahf
repnz
stos
mov
iret
frstor
sub
icebp
push
stos
mov
jle
xchg
aad
push
imul
xchg
mov
lret
or
add
sub
nop
xchg
daa
pop
mov
ret
mov
sub
push
icebp
push
test
and
push
in
xlat
mov
mulb
cmp
sub
stos
fdivrs
mov
push
in
nop
mov
fsub
add
mov
adc
lds
cs
mov
leave
rcl
out
add
push
mov
out
pop
xchg
mov
cmpsb
cld
sub
cs
xor
xchg
leave
pop
call
pop
adc
sbbl
fwait
xor
cli
mov
inc
mov
jnp
sub
add
dec
xchg
hlt
jbe
cld
call
cmp
je
cmpsl
xorl
iret
addr16
mov
sbb
jns
mov
dec
inc
push
jbe
std
push
loopne
leave
fs
fldt
mov
inc
ret
push
in
outsb
mov
mov
jnp
or
xchg
inc
adc
mov
test
lret
addr16
adc
mov
popa
jne
dec
adc
cltd
jle
loopne
mov
repz
pushf
mov
pushf
ret
js
iret
in
push
sub
lds
scas
fcmovne
or
dec
pop
mov
fldcw
ret
pusha
jmp
andl
mov
and
das
sub
lahf
push
ss
or
ss
mov
test
mov
inc
fstp
cmp
int
pushw
sbb
aam
or
pop
rol
cmp
push
cmp
inc
pop
and
mov
loop
cli
cmpsb
test
xchg
adc
sub
mov
push
mov
pop
mov
std
mov
pop
cmc
adc
push
lds
mov
call
add
mov
adc
inc
and
push
or
add
pop
lahf
and
push
or
sti
es
insl
sahf
add
sti
push
in
movsb
mov
dec
mov
push
or
cs
cmp
inc
push
and
inc
mov
add
ja
fwait
push
and
popa
clc
push
inc
and
inc
andb
xchg
fidivs
movsb
ja
inc
lea
and
mov
adc
sbb
outsb
pusha
fistl
dec
sbb
lock
insl
std
pop
sbb
popf
xchg
hlt
push
push
cmpxchg
and
sti
test
or
inc
mov
popf
lcall
push
push
sbb
push
xor
push
jge
aaa
mov
pushf
xor
cs
scas
imul
mov
adc
loopne
inc
xchg
sbb
mov
sbb
lea
xor
push
mov
push
sbb
sub
push
xchg
sahf
movsb
rol
in
or
jge
or
sarl
fiaddl
mov
and
fsubr
add
sbb
pop
mov
aad
shll
add
xor
push
mov
adc
lret
lahf
sub
push
imul
push
outsb
jns
push
lcall
cmp
shrb
aas
outsl
mov
mov
fsts
push
shrb
mov
popa
icebp
mov
aaa
mov
stos
inc
add
movsl
mov
cwtl
xchg
mov
lods
and
in
adc
xlat
xor
dec
sub
sbb
fnstcw
and
push
lret
call
cmc
mov
sbb
dec
fistpll
repz
sbb
and
adc
adc
in
add
outsb
nop
mov
inc
cld
outsl
dec
insb
icebp
sbb
in
loop
push
movsl
lcall
jle
fidivs
pop
fildll
xchg
mov
and
sbb
nop
shll
stos
gs
enter
aas
add
push
jge
sub
stos
xchg
in
dec
adc
fcomps
out
insl
lods
out
cld
xchg
pop
cltd
dec
pop
sarl
aad
jnp
ss
mov
lret
add
insl
sub
xor
addr16
mov
adc
aad
pop
int
or
aam
or
sti
jmp
pop
adc
fld
dec
dec
push
fwait
push
rol
push
add
jg
iret
test
aaa
cli
inc
ficoml
xor
lahf
push
lods
dec
pop
cltd
jecxz
rcrl
dec
jb
cmpsb
mov
fwait
les
fwait
dec
jo
leave
xor
inc
pop
or
and
push
fwait
and
in
mov
stos
xor
pop
inc
lock
loop
mov
jl
cmp
roll
xchg
adc
xor
fadds
rclb
cmpsl
sbb
mov
es
or
mov
mov
sub
xchg
sub
lahf
dec
loop
test
or
pop
call
sbb
icebp
and
and
mov
std
add
idivl
pop
fcompl
shl
idiv
sbb
repz
adcl
mov
daa
cld
lods
inc
pushf
in
mov
bound
repnz
frstor
test
icebp
jmp
dec
pop
xor
ret
ss
lret
sbb
fisttpl
outsb
std
jge
dec
in
mov
or
lods
imull
lods
push
scas
mov
cmp
xor
gs
push
cltd
out
fsts
movsl
mov
sbb
add
jnp
shlb
into
push
mov
rclb
gs
pop
stc
sbb
xchg
xchg
loope
dec
cmp
aad
inc
sbb
pop
adc
aaa
out
fxam
pop
cmp
xchg
int3
push
fsubr
jbe
cmp
mov
ret
mov
mov
lods
mov
test
push
xlat
xchg
cli
push
shll
int3
dec
and
adc
jb
jns
scas
inc
insb
js
out
add
cwtl
adc
dec
or
xchg
ja
sti
subb
sahf
jo
xchg
sub
mov
add
lods
scas
xchg
xlat
repnz
aas
mov
cld
sbb
jg
or
pop
outsl
and
rcl
inc
xchg
imul
dec
push
xlat
inc
jle
xchg
int
adc
pop
fucomp
and
repnz
sub
imul
inc
mov
in
insb
mov
js
jg
xchg
es
jecxz
ds
cmp
insb
cmp
cmp
popf
lods
push
stos
add
bswap
jmp
loop
fisubrl
mov
xor
ficomps
xchg
jae
sub
jecxz
sbb
repnz
fstpt
push
mov
mov
mov
int3
loope
xor
add
push
cmp
push
xchg
cs
hlt
fldt
shlb
sbb
mulb
sbb
rcll
jno
inc
sbb
push
pop
jae
and
stos
xor
jge
in
movsl
ja
cmp
mulb
in
jge
pop
mov
lea
mov
mov
pop
cmpsl
add
scas
inc
hlt
movb
pop
push
sbb
dec
inc
test
add
pop
test
xchg
cs
pushl
push
out
inc
in
jmp
arpl
and
cld
adc
movsl
icebp
sub
mov
loop
mov
and
icebp
jne
sub
jmp
sbb
sahf
mov
jne
push
xor
xchg
mov
les
lods
jge
popf
and
add
iret
jbe
je
jmp
xchg
lret
xor
inc
stc
outsl
call
xchg
sahf
and
adcl
jmp
cmp
lcall
push
xchg
jbe
sbb
pop
stos
mov
sbb
fsubrl
imul
mov
sbb
add
loop
xchg
ja
add
push
ljmp
scas
das
mov
fbstp
mov
push
out
mov
inc
jo
imul
fcom
test
cmp
test
add
mov
sbb
not
sub
mov
sahf
icebp
cmp
movsl
and
dec
lods
xchg
ret
js
cmp
sahf
fs
cwtl
xchg
and
clc
push
adc
fwait
fs
push
push
test
aad
aam
cld
inc
mov
divb
jecxz
outsl
pop
fidivrl
mov
mul
mov
dec
jb
out
aad
test
je
xor
push
jb
add
aas
idiv
xchg
out
daa
mov
lcall
call
pop
outsb
outsl
fcompl
insl
add
fdivs
mov
into
xchg
and
inc
test
lcall
cmp
dec
fnstsw
xor
and
call
data16
cmp
out
xchg
xchg
cld
insl
fistl
sti
mov
stos
cmpsl
mov
cmpsl
call
int3
lret
outsb
cmpsl
jae
rcrb
and
cmp
sbbl
sbbb
cld
cmpsl
xchg
mov
mov
stos
push
mov
lret
fnstcw
movl
xchg
cmc
stos
inc
daa
mov
int
mov
jbe
push
in
in
push
notb
into
in
inc
jns
fisubrl
sbb
outsl
mov
lock
mov
xchg
pop
inc
pop
stc
inc
cmp
pop
loopne
dec
inc
sbb
pop
daa
lret
pushf
scas
cmpsb
mov
adc
jo
stos
sub
jae
movsl
hlt
mov
adc
cmpsb
std
loope
ljmp
dec
cli
test
insl
jmp
aam
into
mov
jnp
jle
icebp
mov
adc
xor
push
pop
les
mov
ljmp
mov
xor
lret
int3
in
sbb
cmpsb
fnsave
mov
mov
mov
or
mov
lods
or
pusha
idivl
dec
adc
cmpsl
adcb
pop
adc
shr
jo
out
inc
fneni(8087
sbb
imul
std
pop
xor
ret
pushf
std
cltd
insb
pop
nop
std
ret
mov
adc
jge
shll
mov
repz
lret
mov
and
push
mov
call
and
fcompl
sub
xor
pop
mov
sub
in
mov
add
filds
data16
leave
ss
movsb
ljmp
cld
push
leave
hlt
cmp
pop
pop
sbb
inc
lea
jecxz
insb
cmpsb
ret
bound
shrl
xchg
mov
jbe
jns
imull
sbb
push
sbb
test
mov
adcb
push
mov
xor
inc
inc
mov
fs
push
int3
out
xchg
inc
sub
gs
jnp
sbb
inc
pusha
jmp
cmp
adc
mov
js
mov
scas
xchg
xor
sti
jge
jbe
and
fadds
loope
and
sub
push
movsb
xchg
mov
inc
xchg
nop
outsl
pop
push
pop
mov
and
es
lds
imull
lods
inc
pop
hlt
jmp
mov
mov
sbb
out
scas
and
mov
pop
sub
dec
pop
clc
and
scas
push
mov
mov
mov
xchg
adc
outsb
iret
cld
loopne
sbb
ds
cmc
repnz
pop
in
pop
dec
int
popf
dec
jae
pop
mov
jmp
mov
sar
jne
dec
loop
xchg
sub
mov
push
lahf
psrlq
cmp
or
rorl
push
jmp
popa
pop
jo
mov
leave
bnd
cmpb
inc
out
xor
pop
std
push
xor
dec
cltd
sub
dec
adc
lods
adc
je
sti
ficompl
mov
movsl
fistpll
mov
rorb
push
outsl
mov
outsb
mov
fbstp
pop
jae
pop
push
mov
sub
ds
push
mov
xchg
lds
das
nop
rcrb
out
mov
mov
outsb
jp
mov
outsl
lock
fnstsw
or
lea
push
mov
push
xchg
mov
xor
add
push
mov
adc
mov
cmp
clc
sbb
fstl
sbb
pop
imul
and
loopne
xchg
xchg
pop
lret
sbbb
out
sub
or
cld
arpl
test
jmp
fwait
das
or
mov
ret
jmp
dec
adc
addr16
daa
subb
out
test
fisubrl
outsb
mov
insb
add
sahf
test
pop
fidivrl
mov
ret
sub
cmpsl
dec
jg
leave
push
insl
mov
enter
ret
lret
sub
cmpsl
push
mov
inc
fimull
stos
popa
add
ret
repz
mov
xchg
lds
adc
jg
scas
mov
cmpsb
sbb
adc
add
mov
fcmovne
ss
add
test
dec
loope
aam
ficoml
fmulp
aam
and
stos
mov
outsl
lods
js
pop
addl
xchg
pop
insb
call
inc
clc
xor
add
dec
daa
push
testb
rcr
and
mov
mov
push
mov
jns
lret
or
adc
lea
fildll
dec
ds
jbe
inc
mov
test
mov
push
push
hlt
lods
jmp
mov
sbb
jmp
sbb
cmp
jb
stos
xchg
jno
movsb
or
sub
mov
fucom
dec
sub
sbb
clc
or
or
rclb
out
enter
imul
mov
lods
mov
shlb
rcl
push
mov
push
jb
scas
test
xchg
mov
jg
mov
pop
jp
mov
loop
cmp
mov
es
outsl
aaa
push
adc
xchg
repz
fcomps
int3
in
inc
cmc
testl
and
bound
mov
fs
jmp
inc
mov
xchg
jae
or
fnstcw
and
lret
int3
pop
mov
out
xchg
fcompl
out
and
shrl
mov
in
sbb
ja
cmpsl
cwtl
stos
rcrb
xor
fistps
push
mov
inc
sbb
je
aam
pop
pushf
shll
stos
inc
cmp
dec
in
pop
inc
test
pop
imul
adc
add
and
mov
pop
and
stos
lds
outsl
mov
les
in
mov
adc
and
lods
mov
fnstenvs
cmpsl
xchg
jmp
test
mov
sub
inc
pop
sub
pop
lock
out
adc
jecxz
inc
xchg
add
and
xchg
jp
enter
dec
dec
jmp
jae
popa
or
mov
add
sahf
js
or
daa
or
fimull
shl
and
inc
fwait
lods
movsl
or
cwtl
test
mov
or
push
cmp
xlat
sbb
les
add
push
test
imul
cli
call
jo
in
push
fstl
lea
pusha
xor
xchg
sti
push
divb
dec
dec
lock
add
sbb
and
adc
xor
ret
pop
mov
dec
sbb
cmp
sbb
fisubrs
lea
clc
xchg
mov
cmpsb
insb
jno
push
mov
pop
out
aad
mov
cmpsb
cmp
les
adc
inc
ss
adc
jge
cmpsb
ds
aaa
jae
in
inc
lds
xor
xor
jecxz
ljmp
sarb
lock
xchg
data16
mov
in
sahf
fcomp
jae
shll
test
testb
or
std
outsb
cmpb
push
js
push
ds
stos
xchg
cmp
popa
jle
push
push
xchg
jnp
dec
lods
ret
pop
add
mov
push
cwtl
inc
inc
fwait
popa
faddl
out
adc
iret
call
xchg
dec
pop
push
mov
push
mov
jp
cwtl
jmp
lods
ss
stc
and
jb
sub
adc
cmp
sahf
imul
sahf
pop
adc
mov
pop
inc
je
pop
shll
mov
aad
movsl
loopne
pop
testb
loopne
pushf
xchg
xchg
adc
push
outsl
or
cmp
loop
pop
mov
pop
sub
add
test
xchg
icebp
bound
mov
mov
lock
or
pop
daa
sti
and
jmp
or
mov
cmpsb
lock
aas
pushf
xchg
jno
nop
gs
nop
ja
dec
push
aad
push
and
dec
add
push
movsl
in
or
add
daa
cmp
add
clc
cmp
xorb
adcb
and
pop
mov
sti
sbb
shrl
cltd
xchg
cmp
mov
out
je
ja
stos
jmp
lods
roll
sub
repnz
fdivrs
out
xchg
add
das
mov
push
xchg
inc
dec
scas
inc
andl
xor
mov
dec
mov
push
rol
jae
testl
aad
sub
js
test
lods
ss
std
into
inc
fdivrp
pusha
mov
cmp
and
iret
sbb
or
add
jb
add
repz
and
imul
fistps
add
mov
adc
test
inc
loope
sub
push
pop
sbb
pushf
adc
cmp
pop
addr16
jmp
xor
divb
pop
arpl
inc
lods
divl
fbstp
dec
hlt
cltd
and
push
add
pop
iret
sub
mov
out
mov
mov
xchg
insl
dec
int
jb
and
das
or
test
push
aaa
cmpsb
cmp
fucom
movsl
lea
mov
jl
add
add
aam
fidivl
call
or
lea
repz
lea
pop
movsl
flds
and
je
fdivl
sub
arpl
mov
ljmp
mov
lahf
mov
ret
clc
mov
mov
mov
pop
mov
nop
cld
sub
pop
pop
call
mov
call
enter
and
rcl
js
pop
into
lahf
mov
mov
xchg
imul
inc
lock
in
dec
mov
divl
shll
repnz
cmp
movsl
lea
xchg
sbb
daa
push
cld
int3
push
jb
and
or
mov
pop
test
test
mov
jae
pop
jmp
dec
dec
add
xchg
in
jecxz
loop
push
out
mov
leave
cwtl
repz
sub
jecxz
xchg
sbb
sub
sub
mov
fsubrs
sarb
xor
outsb
mov
cltd
js
or
test
test
popf
outsb
add
or
adc
mov
popa
aas
scas
or
cmp
test
stc
and
daa
outsl
leave
repz
sub
inc
ljmp
xchg
aad
lret
dec
into
es
ds
push
mov
adc
ja
mov
jp
lcall
and
sbb
filds
ja
icebp
adc
xchg
das
outsb
adc
movsb
jge
push
dec
fdivrs
movsl
data16
inc
jnp
fucomip
js
in
sub
daa
jle
dec
imul
push
test
or
cli
sbb
dec
lahf
mov
cmpsb
repz
inc
mov
lahf
js
imul
push
dec
negl
mov
adc
pop
fbstp
jb
adc
or
stc
lds
icebp
jmp
out
ja
add
scas
mov
adcb
ss
out
dec
in
mov
fidivrs
push
mov
cmpsl
out
add
fdivl
xor
mov
shl
aas
dec
stc
faddl
data16
pop
jmp
pushf
lcall
outsl
pusha
adc
inc
fisttpl
lret
lret
popf
stos
cmpb
or
jp
std
pusha
or
cltd
stos
xor
cmpsl
rcll
lret
data16
movsb
imul
mov
ds
hlt
xchg
cmp
pop
xchg
fadd
and
push
pop
ds
jbe
xor
add
cli
sahf
outsb
imul
jno
scas
inc
test
hlt
ja
std
xchg
test
xlat
je
std
data16
das
mov
jbe
push
mov
xchg
jmp
ljmp
adc
cwtl
push
mov
loop
jle
mov
stc
add
jae
push
push
mov
adcb
mov
popa
sti
xchg
push
add
cwtl
sbb
iret
push
dec
xor
test
or
inc
lcall
dec
aaa
rcrl
test
iret
dec
fucomp
jb
inc
call
and
popa
mov
jge
je
scas
push
pop
in
insb
notl
aas
cmpsl
imul
lea
mov
nop
int3
outsb
jp
aad
jle
xor
cwtl
loopne
sub
negl
push
jmp
insl
or
out
add
cmpb
jge
jmp
mov
jle
cld
mov
mov
outsl
mull
cmp
sub
rcrb
mov
stos
pop
mov
mov
sub
mov
ret
stos
lods
in
jle
int3
dec
pop
push
in
rorb
adc
pop
das
xchg
push
xlat
xor
aas
mov
imul
imul
cmp
xchg
out
clc
int
mov
mov
and
or
sbb
jo
out
jns
fistl
imul
adc
dec
sarl
iret
lret
inc
mov
mov
jne
out
inc
clc
inc
incb
out
test
pop
cmp
testl
xchg
add
cmp
or
aam
xchg
add
mov
sub
cltd
sbbl
mov
clc
sbb
movsl
or
ja
aad
or
adc
mov
xor
imul
shl
xchg
test
leave
fldenv
rol
fdivs
dec
xlat
outsb
adc
lcall
in
add
test
jns
push
add
inc
lods
cmpsb
lea
and
jg
fisubrs
rorl
dec
int
add
repz
insb
mov
pop
test
mov
mov
shlb
or
movsb
push
mov
mov
mov
lods
mov
popf
push
cli
push
js
add
cmp
xchg
divl
adc
or
xor
sbb
lcall
adc
xor
rolb
popa
lods
jmp
loopne
xchg
loope
adcl
or
pop
sbb
pop
cmp
jge
push
clc
push
mov
mov
mov
iret
enter
data16
test
pop
push
sti
or
ficomps
lock
jae
xor
dec
push
insl
out
mov
movsb
mov
push
lea
imul
sbb
jae
dec
jae
data16
shll
stos
xchg
negb
mov
mov
les
jo
mov
sub
rcrl
orb
push
xchg
call
push
pushf
ds
jb
push
jb
pop
jmp
push
xor
adc
xchg
adc
into
jae
pop
mov
lea
lcall
sbb
xchg
mov
in
and
mov
jecxz
push
sbb
test
xchg
cmpsb
adc
pop
mov
scas
in
popa
iret
inc
cmp
fs
push
mov
aaa
push
pop
lods
lods
xchg
out
movsb
push
dec
out
xchg
xor
orb
scas
shrb
enter
in
add
cwtl
incl
cmp
xor
mov
gs
push
enter
rcrl
stc
adc
jbe
aad
bound
outsb
enter
push
pop
mov
dec
stos
data16
mov
les
leave
lret
mov
push
and
rcrb
stos
mov
sbb
xor
push
pushl
xor
hlt
mov
xlat
push
hlt
dec
push
test
mov
or
add
cmp
pop
inc
mov
enter
sub
divb
and
mov
xor
popf
and
dec
mov
test
dec
xor
fs
test
adc
cltd
leave
lret
add
jmp
mov
loopne
add
popf
jl
sbb
out
cmp
xor
xchg
enter
mov
fdivs
mov
lcall
es
divb
mov
fldenv
loopne
mov
push
in
and
psrlq
addl
xchg
pop
mov
call
pop
and
imul
fbstp
cmc
mov
jns
fadds
or
ljmp
pushf
add
gs
scas
push
adc
jge
imul
lds
pushf
loope
or
shll
clc
fwait
cli
cmp
imul
ljmp
xor
lds
adcb
mov
addr16
js
insl
push
mov
call
inc
inc
fs
int3
mov
scas
sbb
in
nop
push
inc
sahf
std
repz
jl
or
or
xchg
jg
or
sbb
sub
jae
mov
and
xlat
cli
push
mov
xchg
ja
fabs
or
fisubrl
mov
adc
or
push
fwait
xor
xchg
cmp
sub
jg
ss
fsubrs
enter
or
jle
add
call
leave
data16
jg
dec
mov
dec
movsl
push
stos
or
ss
in
jge
push
scas
mov
or
enter
adc
adc
data16
mov
pusha
std
shlb
pop
dec
mov
inc
pop
icebp
aaa
jmp
pmulhw
lods
inc
cmp
lcall
test
mov
jmp
pop
or
es
mov
inc
out
mov
rorb
pop
fiadds
icebp
movsl
xor
aaa
shrb
jp
test
jno
repz
cld
dec
pop
fnstsw
jnp
stos
sbb
in
push
insb
sub
or
fdivl
add
cmp
jg
inc
xor
aam
in
sbb
outsb
out
lock
pop
push
cltd
inc
fiaddl
test
cltd
loope
shll
pop
enter
ret
rep
sub
mov
mov
mov
lods
pop
imul
bound
in
gs
ss
jno
das
lret
mov
inc
and
jne
cmc
pop
inc
stos
fsubr
rcll
insb
pop
cmpsl
jmp
rcrb
inc
fs
mov
insl
push
ss
and
lcall
jge,pt
out
and
xchg
push
pop
sbb
push
jg
jecxz
fidivrl
cmc
mov
push
movsb
pop
pop
cli
in
xor
inc
lock
and
movhps
fs
adc
dec
add
cmp
pop
xor
mov
sbb
cld
dec
mov
mov
dec
mov
cmpsb
nop
jl
jo
cld
inc
push
sub
pusha
and
sbb
sub
mov
test
xor
inc
xchg
mov
mov
daa
and
pop
and
sbb
outsl
ja
lock
sbb
jo
push
sahf
push
rorl
pusha
mov
mov
sub
lock
outsl
xor
mov
daa
sub
sub
pop
pop
daa
inc
rcr
xchg
add
xor
ja
or
movsl
jo,pt
inc
rcll
aas
fcmovbe
addr16
add
les
pop
je
and
push
pop
ss
ror
push
cmpsb
add
inc
ljmp
lock
mov
adc
stos
adc
in
or
loopne
outsl
cmpsl
push
notl
dec
clc
sti
sar
jo
mov
pop
cs
mov
pop
lods
andb
sti
outsb
sarb
mov
pop
and
pop
lock
loopne
pop
jo
fsubl
push
mov
imul
inc
mov
in
gs
aam
inc
push
jb
fcmovnb
dec
push
outsl
adc
jp
pop
xchg
pushf
imul
or
inc
clc
jae
lahf
dec
add
pop
clc
jae
std
iret
and
out
xor
sub
mov
rorl
mov
ds
mov
cli
pushf
push
insb
push
scas
scas
and
test
mov
dec
in
jne
cmpsb
or
lret
je
xlat
cmpsb
scas
pusha
orb
xor
shlb
jle
mov
pop
in
ljmp
iret
fdivl
lods
icebp
insb
sbb
sti
push
dec
cmp
jb
push
cwtl
jg
shrb
sbb
mov
scas
icebp
mov
loop
sub
in
pop
jb
lock
mov
cmp
inc
mov
sub
loopne
pop
adcl
loope
sub
hlt
xlat
sub
pop
pop
and
sar
fwait
xor
pop
enter
mov
xor
lods
pop
push
adc
iret
movsb
das
mov
shrl
ret
jg
push
sub
mov
lods
inc
inc
loopew
mov
sbb
and
jo
cmpsb
xchg
add
inc
pop
dec
mov
adc
inc
cwtl
xor
add
inc
pop
std
xchg
fsubrl
mov
jp
inc
dec
cmp
jmp
add
pop
push
xor
fs
xchg
shld
push
mov
or
js
mov
dec
dec
add
jbe
js
insl
sbb
dec
ljmp
dec
aam
sahf
subb
cmc
push
push
loope
stos
mov
push
xlat
rcll
xor
pop
bound
xchg
cli
imulb
cmp
pop
js
fldcw
lahf
cmp
xor
insb
adc
sub
aaa
lahf
jbe
fdivr
jb
std
cmp
mov
dec
movsb
jb
push
movsb
leave
psllq
imul
or
lea
jo
outsb
xchg
mov
les
in
ljmp
push
and
sbbl
xor
inc
or
test
adc
add
xor
es
clc
adc
jge
sbb
idivl
sub
scas
lea
pop
cs
add
test
dec
lock
jp
xchg
mov
into
sub
mov
std
xchg
lcall
inc
std
xor
cwtl
leave
or
inc
int3
sahf
push
sbb
mov
mov
mov
shrl
je
lcall
repz
adc
out
imul
inc
fdivr
push
andb
and
push
cs
dec
scas
std
stos
cli
stos
lea
popa
push
xchg
inc
dec
sbbb
das
add
bound
push
icebp
sbb
xlat
sub
cmpsb
cltd
xor
test
jge
mov
mov
stc
std
aaa
push
or
and
push
jb
push
scas
daa
mov
pop
xor
jne
jns
popa
clc
sbb
push
lcall
sbb
sbb
pop
jno
in
add
push
imul
jnp
sahf
in
push
push
sub
loopne
jb
adc
pop
lock
push
jle
mov
lahf
rcrl
xorb
repz
adc
pop
aad
cmp
pop
imul
adc
dec
scas
inc
orl
mov
inc
mov
testl
cli
mov
test
gs
aas
add
cmc
leave
adc
aaa
out
into
popf
inc
and
add
push
push
test
sub
pop
stc
adc
shrl
adc
mov
in
push
add
loope
or
mov
jbe
jl
enter
xor
pop
mov
mov
xchg
les
insl
jg
movsl
pushf
lods
push
push
fldenv
ds
je
cli
loop
shr
sti
push
lods
adc
lea
cmp
inc
inc
icebp
nop
ljmp
mov
sbb
clc
sbb
mov
sub
movsb
mov
push
imul
movsl
icebp
jle
pop
mov
pop
mov
xchg
orb
mov
cld
aaa
push
inc
gs
fdivs
mov
or
out
mov
push
mov
std
cs
add
sti
inc
cmp
lea
mov
adc
adc
or
xor
adc
in
add
lock
addl
sub
ss
daa
stc
xor
xlat
cmp
xchg
aaa
cmp
int
imul
push
int
test
test
ret
cld
sub
lds
and
cmp
dec
sarl
call
xchg
sbb
movb
mov
xchg
add
fnstenv
iret
bound
mov
add
int3
imul
add
inc
jecxz
mov
loopne
push
and
push
idiv
adc
lods
cs
ds
les
incl
adc
push
movsb
mov
jne
add
xchg
clc
mov
inc
cltd
std
ljmp
xor
xor
fsubs
lods
jb
pop
add
sub
fcomip
fldenv
cs
xchg
sarl
mov
dec
out
and
mov
lahf
ss
or
test
cmp
js
sbb
jns
xchg
sub
aas
pop
repz
int
pop
ret
adc
xchg
and
jbe
test
nop
cmp
push
aam
aaa
cli
mov
lret
fsts
cli
daa
ds
popf
add
cmpsb
xchg
out
jl
mov
stos
jae
jae
dec
scas
xchg
cwtl
inc
ja
loopne
dec
pop
and
push
lcall
xor
popa
test
pop
add
lcall
sbb
pop
push
xchg
and
lcall
jno
lock
pop
cmpsl
dec
in
push
call
mov
inc
jb
jbe
adc
mov
nop
inc
int3
sarl
add
in
push
inc
xchg
test
push
mov
fs
cltd
adc
mov
add
and
sub
loope
ds
sub
inc
adc
lcall
adc
push
pop
xorb
jns
repnz
sub
xor
aas
push
insl
lods
jae
xor
mov
arpl
or
xchg
rcrb
leave
push
dec
dec
insb
aad
leave
fldz
mul
add
pop
sarb
pushf
cmp
inc
imul
shrl
cld
xchg
mov
inc
mov
nop
xchg
or
stos
pop
mull
rcl
xchg
inc
and
cmp
inc
int3
data16
mov
ja
stos
jne
adc
shll
xchg
fdivr
pusha
pusha
xchg
sbb
sbb
xor
test
test
repz
sub
shlb
scas
add
mov
pop
adc
int3
inc
xor
and
push
mov
push
sahf
sahf
adc
cli
sub
out
out
cmpsl
test
push
mov
pushf
sbb
into
outsb
lds
lret
cs
into
pop
push
es
dec
lahf
inc
push
xchg
es
arpl
mov
push
and
xchg
pop
pop
xor
aam
dec
push
sbb
test
dec
leave
and
sbb
pop
je
xorl
adc
push
add
add
cmp
jl
pop
cmp
inc
and
dec
cld
pop
icebp
aaa
stos
cld
fbstp
mov
xchg
lret
sub
rcl
mov
pop
in
pop
in
jg
mov
ficoml
sbbb
test
fsubr
je
test
mov
mov
fs
cmpl
adc
push
mov
mov
aaa
insl
adc
fistps
xchg
or
xchg
clc
je
jbe
sbb
cld
enter
sarl
mov
pop
int
dec
call
cltd
pop
cltd
jg
lret
jl
mov
int3
ret
push
inc
mov
push
inc
sbb
or
push
mov
pop
dec
mov
xor
mov
lds
pop
sub
push
mov
mull
stos
into
and
bound
sbb
out
mov
jb
xchg
push
lods
jmp
jb
lret
in
outsl
lahf
cmp
rcrb
xchg
push
lods
mov
sub
pop
add
das
sub
dec
test
mov
repz
aad
adc
mov
xchg
mov
ret
sbb
sbb
mov
sarl
or
push
ss
sub
fisttps
cmpsl
out
loop
adc
pop
inc
cmp
and
pushf
inc
mov
roll
or
dec
mov
sub
sub
cmp
std
push
movb
mov
fnstenv
shlb
test
push
jns
shll
mov
dec
mov
sub
xor
add
adcb
lcall
subl
fwait
test
mov
dec
mov
xor
rol
repz
lods
xlat
rclb
mov
test
push
and
push
movsl
sbb
push
mov
loop
in
call
in
sbb
addr16
js
adc
popf
push
jns
addr16
mov
lds
pop
ret
in
pop
inc
push
or
cmc
mov
xchg
fstpl
jo
ja
adc
stos
test
inc
lods
sbb
cmp
sti
dec
cmp
pop
cwtl
sbb
rorb
mov
xor
xorl
xor
in
je
jmp
xlat
push
cwtl
or
and
jne
push
push
cmp
and
mov
mov
inc
mov
arpl
ss
pop
push
mov
mov
adc
imul
addb
fsubrs
mov
outsb
cmp
cltd
push
sub
or
lea
pop
mov
jne
repz
inc
push
sti
push
out
les
out
add
movsb
mov
clc
cmp
push
xor
outsb
fs
adc
xor
fstpl
pop
iret
fwait
push
mov
mov
daa
pop
add
jne
mov
clc
cmpsl
and
jne
cltd
aam
sbb
js
inc
loopne
sti
es
mov
test
aaa
jno
pop
mov
out
xor
jno
fldl
jb
and
mov
rclb
nop
and
add
inc
fucom
scas
jp
ds
jo
out
xor
push
mov
push
mov
into
sub
shrl
iret
std
xchg
mov
ljmp
loope
jbe
mov
bound
pop
stc
inc
xchg
sti
dec
in
insb
pop
mov
dec
jo
cmp
lahf
ret
or
mov
ds
mov
or
lods
mov
scas
and
pop
xchg
xor
adc
add
xchg
pmulhw
xchg
fisttps
mov
arpl
mov
cltd
mov
add
xchg
add
hlt
adc
add
cmp
mov
hlt
mov
pop
in
dec
inc
in
sub
mov
into
xchg
pushl
jnp
mull
pop
fwait
es
lret
outsb
jl
sub
rclb
cmp
aam
aaa
xlat
sbb
push
pushf
fs
mov
js
scas
mov
push
mov
mov
mov
into
loop
xor
xchg
jo
movsb
mov
roll
or
in
mov
cmpsl
fs
fcomps
mov
xchg
mov
pushf
push
inc
inc
and
mov
push
int
mov
and
pop
cmpsb
or
js
jg
push
push
xchg
inc
ljmp
jno
lods
pop
enter
ds
sti
nop
jnp
js
fstps
stc
mov
scas
cmp
clc
xchg
add
mov
xchg
jns
adc
icebp
pop
push
adc
imul
mov
mov
or
mov
xchg
push
stos
sbb
cwtl
fidivl
cmpl
mov
sub
or
inc
xchg
push
fwait
cmpsl
jno
xor
out
adc
jecxz
ljmp
and
xchg
sahf
insb
jp
push
add
push
push
pop
cmp
inc
mov
jo
je
jns
fdivl
enter
movsl
pop
mov
jnp
xlat
in
xor
jns
movl
out
jl
cmp
push
mov
subb
inc
ja
jnp
mov
mov
mov
jno
ljmp
jmp
inc
rorl
sbb
lods
dec
fidivs
xlat
dec
iret
inc
jmp
and
pop
ss
sbb
sub
push
je
fs
inc
push
mov
data16
pop
test
add
data16
pusha
lock
aaa
pop
insl
sarb
stos
loope
mov
aad
mov
add
adc
sbbl
dec
cwtl
shlb
inc
cli
and
mov
ljmp
lock
inc
in
push
xchg
rcll
stos
xor
loop
cwtl
push
xor
sar
cmp
cli
push
add
dec
pop
or
cwtl
stos
das
jle
mov
outsl
pop
loopne
in
neg
and
lcall
in
scas
or
sub
cmp
in
jo
jbe
notb
push
mov
jecxz
addr16
and
outsl
fwait
cmp
packsswb
mov
rorl
jp
int
mov
cmp
push
xor
push
stc
loop
fwait
and
mov
int
call
out
out
popf
add
cmp
in
enter
pop
pop
fwait
jb
pusha
or
xchg
aaa
stc
in
cmp
jg
cmp
leave
popf
xchg
xchg
pop
jmp
fistpll
push
test
xor
fwait
outsl
clc
add
jle
adc
bound
inc
add
ret
adc
or
xor
sbb
lret
call
or
daa
test
movsl
outsb
mov
jno
sub
mov
push
ret
add
je
xchg
sub
mov
push
and
iret
ljmp
push
mov
add
add
insb
jno
icebp
aas
or
jbe
pusha
js
adc
aaa
sub
cwtl
repz
inc
dec
ja
inc
mov
xchg
mov
and
loopne
lods
mov
jbe
negl
xlat
mov
movsb
mov
cli
test
gs
notl
incb
jbe
xor
lgs
aad
sbbl
cmp
jae
sub
fld
loopne
mov
add
ret
out
xorb
push
cli
mov
insb
jae
cmp
fadds
and
shrb
xor
push
dec
fisubrs
js
fnsave
decb
cmp
pop
or
shl
arpl
ljmp
mov
adc
sub
fcoms
stc
push
sub
mov
jne
and
push
pop
filds
xor
mov
out
out
add
mov
int3
mov
repnz
push
popf
inc
lcall
xchg
pop
dec
sarl
jb
call
iret
shll
fsubrs
push
xlat
mov
out
cmp
fnstcw
sbb
mov
pop
jns
mov
cmc
pop
imul
and
jo
adc
nop
dec
or
fwait
cmpsb
lods
xor
mov
jmp
sub
pop
pop
jo
mov
in
fmull
jae
jno
das
outsb
push
adc
pop
fiaddl
push
add
xchg
and
pop
cmp
or
int3
cli
aam
loope
xor
fst
test
loopne
aam
divl
mov
xorl
lods
sbb
lds
sbb
xchg
shrb
mov
inc
dec
call
out
mov
cwtl
mov
jmp
xchg
test
movsl
xchg
pop
dec
mov
sub
push
cld
test
adc
insb
inc
or
and
inc
mov
fisttpl
ljmp
mov
fidivs
pop
sub
adc
mov
dec
mov
insl
insb
adcb
pop
pop
dec
dec
xor
daa
mov
mov
inc
data16
sahf
insl
dec
mov
loop
popa
clc
in
pushf
scas
and
lcall
cwtl
je
dec
cmp
cmp
push
jne
mov
mov
mov
stc
mov
adc
lock
ss
mov
sbb
inc
fs
jp
dec
mov
ss
nop
add
adc
adc
sub
outsb
cmc
int
add
sahf
xor
call
dec
sarb
andb
je
insl
out
icebp
movsl
inc
fst
inc
fisubl
dec
cmp
inc
mov
jmp
aam
popf
daa
inc
xlat
mov
lds
movsl
dec
and
in
xor
rcrl
push
jb
aam
js
jae
rcrb
pop
mov
sbb
xlat
cmp
or
outsb
add
push
or
pop
jns
call
pop
out
mov
dec
sbb
aaa
ficompl
rclb
idivl
mov
jno
enter
inc
add
lock
inc
fisubs
jb
pop
push
leave
mov
xchg
sarb
adc
add
dec
inc
mov
add
dec
in
scas
xor
sbb
daa
and
aaa
pop
shl
add
test
mov
or
dec
fisttpll
scas
cmp
call
nop
out
dec
gs
inc
bound
testl
hlt
repnz
and
inc
inc
inc
push
fwait
add
adc
xor
add
popf
add
jne
and
ds
aaa
enter
data16
fpatan
pop
ds
sub
push
inc
insb
movsl
daa
sbb
mov
es
stc
nop
ss
sub
dec
out
enter
aam
push
sahf
mov
and
add
loop
fldenv
lcall
sub
or
dec
jle
cmp
shrl
lds
rorl
pop
dec
lods
mov
fwait
lods
push
hlt
adc
push
leave
adc
cmpsb
dec
lea
jae
scas
xchg
xchg
iret
cmp
mov
push
aam
cwtl
add
hlt
out
test
push
adcb
es
frstor
xchg
jae
call
xchg
sub
jmp
in
jo
and
loope
cmp
and
and
lods
dec
sbb
jp
in
mov
mov
fisubrl
lds
dec
loope
clc
mov
push
cmp
dec
fistps
xchg
add
mov
cwtl
jge
clc
mov
sbb
jg
repz
jl
ds
or
aas
fbld
data16
scas
push
stos
xchg
lahf
in
sti
xchg
sub
pop
jmp
rcl
lock
adc
dec
aad
mov
stos
mulb
mov
insl
sbb
inc
xchg
std
divb
in
shl
mov
sub
mov
daa
nop
adc
push
xchg
in
test
push
adc
or
nop
xor
push
rcll
mov
mov
sarl
inc
add
inc
mov
jno
dec
push
lock
sahf
cmpsl
lea
xor
xchg
add
popa
adc
adcl
and
jno
ret
pop
jne
jnp
je
aas
cmp
out
test
jle
pop
adc
mov
mov
ret
sub
popf
fs
push
and
leave
repnz
cmp
sbb
sub
pop
adc
mov
rcrb
xchg
mov
out
loop
pop
and
mov
sub
pop
sahf
add
mov
jbe
cltd
cli
jmp
outsb
sbb
sub
mov
pop
pop
out
push
imulb
or
ljmp
orb
arpl
jecxz
loop
and
cs
popa
or
ja
push
sub
jl
shlb
mov
and
pushf
cli
jae
dec
movsl
fistl
inc
sub
mov
jne
out
imul
cltd
incb
inc
inc
mov
pop
push
xor
stos
push
adc
jo
dec
xchg
xchg
sub
lahf
enter
cwtl
push
sub
je
enter
xchg
mov
stos
ftst
xor
dec
dec
mov
out
icebp
imul
shlb
insb
mov
add
nop
std
ss
push
mov
gs
xchg
cmp
push
push
jle
mov
sbb
push
push
push
js
pusha
aaa
jecxz
xlat
scas
fcompl
inc
xor
or
cmp
sub
rcll
adc
cmpsl
imul
xchg
xchg
cs
test
sub
push
scas
ret
pop
test
out
fmuls
mov
je
xchg
mov
xchg
mov
icebp
cmpsb
gs
or
push
sub
test
xor
pop
imul
mov
int
xchg
pop
mov
subl
adc
dec
js
push
ret
rorl
dec
mov
sub
xchg
ja
ret
inc
xor
mov
and
mov
lcall
cs
mov
xor
cmp
jno
insb
sub
and
jns
sub
scas
dec
in
ja
dec
pop
mov
fwait
add
adc
cmp
xchg
out
xchg
sub
jmp
add
add
cmp
xchg
daa
pop
stos
cmp
and
lahf
daa
or
pop
and
dec
or
mov
mov
xchg
pop
jge
mov
in
pop
lahf
jge
cwtl
or
cmpsb
mov
flds
adc
test
push
inc
loope
mov
ja
sbb
popf
inc
push
pop
xor
ret
xor
lods
das
les
jle
xchg
into
pop
sar
jl
repnz
mov
jecxz
and
cmp
notl
sub
and
dec
loop
push
out
xor
arpl
cld
xchg
scas
call
mov
shlb
fadds
jg
int
push
into
xchg
lret
into
adc
mov
addr16
cwtl
pop
iret
popf
mov
lahf
or
xchg
adc
dec
mov
das
nop
cli
movsl
xor
mov
movsb
repnz
rol
xor
xchg
dec
mov
les
fists
je
and
inc
ss
mov
ficoms
mov
js
clc
mov
sbb
nop
xor
bound
iret
xor
aad
out
scas
and
or
aas
shll
cmp
or
and
push
or
in
and
fwait
jb
push
sbb
add
cmp
imul
cwtl
das
push
jb
outsl
fwait
stos
pop
cwtl
movsb
lea
xor
das
fisttpl
jo
cmp
sub
push
jmp
or
mov
hlt
js
mov
lea
dec
mov
filds
int
ja
shlb
rcrl
pop
mov
imul
mov
adc
fnstcw
frstor
mov
cmp
pusha
mov
xchg
pusha
sub
addr16
add
inc
loop
push
mov
je
push
pop
xor
sbb
cmpsl
nop
bound
adc
push
cwtl
mov
mov
push
std
push
cld
xor
loopne
cld
adc
rolb
ret
int
xor
icebp
insl
leave
es
fistl
push
pop
mov
ja
lds
mov
sub
xor
shrb
cli
lret
ss
inc
xchg
mov
ljmp
cld
jmp
mov
dec
inc
xor
ja
std
lds
andb
outsb
ret
dec
das
in
sub
iret
daa
stos
popa
jl
pop
lods
or
dec
mov
enter
int3
sbb
mov
mov
scas
enter
andb
imul
ljmp
scas
fisubl
loopne
xor
jmp
xor
mov
iret
jmp
sbb
leave
mov
mov
mov
or
stos
in
ret
lret
jle
sub
pop
cmp
mov
sbb
ss
mov
repz
repz
loope
jno
js
add
pusha
or
aad
adc
jo
inc
mov
cmpl
cmp
mov
sbbl
pop
iret
push
dec
fidivrs
lret
fbstp
or
xor
ds
push
dec
xor
sbb
jmp
jle
insb
lret
sub
rcrb
push
out
popa
popf
sbb
xor
cmc
mov
dec
jp
lahf
cmc
js
xchg
outsb
bound
or
iret
sub
jb
shlb
icebp
push
mov
cmp
lds
push
imul
faddl
lret
gs
cli
push
mov
mov
imul
push
adc
mov
adc
ret
cs
or
imul
ret
push
pop
xlat
imul
lcall
pusha
xchg
aas
bound
jae
sub
mov
mov
andl
lea
cld
dec
jmp
cmc
pop
mov
mov
push
cs
rcr
iret
jle
jne
sub
pop
mov
fs
je
push
dec
xchg
pop
outsb
xlat
jp
test
stos
mov
aas
mov
fcoms
xlat
pop
icebp
pop
jg
mov
pop
js
sar
jb
insl
and
sahf
sar
mov
je
ret
pop
xorl
and
mov
cli
fistpl
pop
and
outsl
sub
cmp
icebp
enter
adc
dec
bound
cltd
ret
jns
and
ja
fsubs
subl
mov
movsb
or
cmp
push
pop
pop
push
or
push
jbe
adc
idivl
cmp
sub
daa
push
pop
mov
mov
scas
js
sbb
inc
int3
add
jbe
or
insb
mov
and
fcoms
dec
sub
sahf
cmp
pop
push
rolb
xchg
mov
lock
lea
out
test
cmp
cs
mov
hlt
jae
out
sbb
cmpsb
les
test
repz
gs
fisubrs
movsl
xchg
mov
sub
sub
dec
push
cmpsl
jae
sbb
sub
aad
mov
leave
test
and
cli
xchg
mov
push
mov
stos
mov
jecxz
pop
stc
sbb
cmp
mov
push
pop
les
lahf
xchg
sbb
and
into
xor
inc
out
shlb
jne
aas
or
push
repnz
nop
aaa
or
xlat
jmp
icebp
adc
and
lods
ss
js
clc
and
xor
jnp
div
fwait
repnz
mov
bound
cmp
cmp
rcrl
or
rcl
xchg
jnp
xorb
cmp
push
test
int
cli
int
out
or
int3
shlb
push
or
xlat
cmp
pop
imul
mov
mov
dec
sub
adc
andl
mov
dec
pop
scas
ss
es
pushf
cli
mov
mov
sahf
lea
cltd
cmpsb
lret
sub
and
mov
jns
adc
mov
int
push
mov
pop
cmp
pushf
imul
fbstp
sbb
cld
fcmovnb
test
cmp
repz
cmp
jp
sbb
cld
pop
mov
dec
rcl
decl
push
subb
fstpt
adc
or
std
sbb
aas
mov
ret
pop
dec
adc
jp
out
mov
cmp
cltd
pop
stos
into
inc
xchg
ss
push
out
cmp
stos
es
aad
popf
mov
arpl
jg
movsb
cmpsb
add
out
testb
in
adc
mov
sbb
xor
or
mov
mov
int3
scas
icebp
xor
xor
sti
rdtsc
mov
push
cmp
aad
pushf
test
ljmp
xlat
add
mov
mov
xor
mov
jmp
jnp
cmp
shrb
xchg
mov
xchg
inc
or
jno
gs
mov
les
imulb
lods
ljmp
pushf
scas
add
xor
dec
jno
int
in
or
mov
cwtl
jae
mov
fdivp
mov
cmpsl
mov
es
loopne
mov
dec
mov
ljmp
and
add
leave
xor
imul
push
xchg
mov
ret
gs
sub
aas
mov
pop
adc
push
xchg
push
adcb
clc
aad
jo
mov
mov
sbb
dec
out
dec
dec
jno
mov
in
imul
lret
jo
ds
shrb
sbb
jb
addr16
dec
es
nop
xchg
clc
pop
in
mov
sub
inc
lock
xor
aas
add
es
ret
or
xor
adc
xlat
arpl
cmp
repnz
stos
lahf
call
push
popl
jmp
mov
or
and
out
jo
fdivrs
aas
push
loop
push
xor
adc
mov
xchg
pusha
aad
lock
gs
outsb
push
subb
dec
pop
mov
jb
repz
pop
inc
imul
jecxz
stc
rolb
clc
fcomp
pop
or
arpl
test
add
mov
lret
fwait
lds
adc
jecxz
push
loopne
push
push
push
mov
xor
mov
out
int
repnz
push
mov
test
hlt
cs
stos
fldcw
sahf
fbld
mov
push
xor
test
gs
movb
and
adc
jb
outsb
sub
and
add
xor
dec
inc
cmp
push
aas
mov
aaa
sbb
and
and
mov
pushf
push
xchg
pop
or
loop
sbb
ds
sahf
ljmp
roll
aaa
dec
arpl
xchg
inc
jne
popf
mov
ds
add
jns
cwtl
and
int
jae
push
mov
enter
mov
shr
sbb
mov
xchg
pop
cmpsb
xchg
ret
inc
pop
cmp
loopne
cwtl
inc
jne
mov
fchs
int
dec
mov
out
cmp
aad
subl
fldt
or
adc
dec
mov
mov
lret
aad
mov
loope
cmp
mov
or
aas
nop
push
subb
or
sub
daa
mov
leave
pop
inc
fmull
andb
xlat
mov
dec
lods
popa
clc
mov
push
mov
shlb
dec
mov
lahf
xchg
fwait
test
cmp
or
mov
mov
or
je
xor
mov
das
jo
shll
sbb
push
sub
test
lret
ja
std
and
pop
fisttpl
in
addl
aas
lods
out
pop
mov
fldln2
in
push
sti
loope
sub
sahf
call
jne
dec
pop
jg
dec
in
cmpl
cld
vpminub
pop
pop
test
je
push
pop
xor
mov
cmp
sbb
stos
xchg
add
sub
nop
inc
xor
sbb
stos
push
and
movsb
shll
sub
sub
andl
enter
adc
or
dec
mov
lods
test
pop
loope
cmpsl
dec
push
add
adc
add
cmp
dec
jecxz
pop
movsb
mov
fwait
cmp
push
call
push
cmp
enter
jg
mov
jge
xor
add
int3
mov
jnp
pop
out
rcrl
lods
push
out
jg
sub
inc
jecxz
rcrb
xor
cmc
add
push
jp
xchg
popf
cli
out
orb
imulb
adc
shrl
cmpsl
push
push
enter
out
daa
push
shlb
and
test
ss
jb
xchg
sub
outsb
sbb
loopne
cmp
or
xchg
push
xchg
data16
mov
aad
cmp
jg
loop
ret
push
jo
inc
imul
popf
orb
aas
mov
jle
insl
sub
jecxz
daa
push
icebp
lret
jo
ficomps
dec
dec
das
jg
lcall
and
mov
cmpsl
sbb
in
sbb
pop
out
and
mov
jbe
sub
test
mov
pushf
adc
mov
inc
gs
mov
xchg
add
pop
loopne
imul
fsubp
call
movsl
data16
stc
inc
jl
shll
push
movsb
cltd
mov
cmp
and
aad
mov
rcll
or
int3
int
add
xlat
pop
insl
or
add
out
pop
lds
mov
cwtl
cmp
mov
fwait
imul
bnd
xor
dec
icebp
popf
or
loope
sarb
or
pop
cld
inc
jge
jbe
mov
adc
xor
xor
mov
jmp
push
rcr
sti
inc
inc
inc
popa
imull
aam
sbb
imul
mov
aaa
xchg
xor
enter
mov
push
movsb
pop
pusha
xlat
sbb
inc
aam
jno
pop
dec
adc
leave
pop
fwait
add
lds
xor
shrl
inc
fisubl
test
mov
add
dec
pop
or
sub
movsb
dec
mov
outsb
movsb
xor
cmc
jl
add
loope
pop
and
sub
ss
sub
ss
sahf
xchg
mov
lods
rcrl
push
sbb
inc
jg
xor
fs
arpl
fs
dec
adc
popl
cmpl
subl
sbb
add
sbb
jmp
cmpsl
mov
hlt
and
jno
dec
mov
add
movsl
nop
call
shll
imul
hlt
cmp
arpl
add
dec
stos
out
sbb
mov
adc
mov
imul
push
lcall
shr
sbb
push
jge
pushf
sbb
jmp
lahf
pop
aaa
pop
insl
daa
lcall
inc
imul
pop
mov
add
testb
das
adc
or
mov
cmovl
or
xchg
adc
out
mov
and
hlt
int
gs
cmp
or
mov
mov
xor
adcl
into
mov
ja
lahf
pop
dec
fisubl
jge
es
cmp
push
fstps
pop
scas
lds
ss
jp
xchg
push
gs
nop
aas
test
mov
xchg
imulb
xlat
push
in
lret
add
xor
fdivrl
iret
pop
push
in
push
add
std
rorb
inc
sbb
lods
jp
sub
jmp
dec
add
or
ret
sub
loopne
imul
aas
cltd
ret
add
les
inc
fld1
inc
xor
idiv
add
pop
jge
push
daa
testl
es
jl
fs
dec
into
dec
sbbl
shlb
data16
mov
push
push
xlat
cmp
bound
dec
xlat
mov
push
jbe
test
dec
imul
ds
push
mov
jecxz
jno
adc
lea
mov
aam
jmp
mov
mov
aam
mov
mov
mov
dec
test
aam
mov
fstpt
and
int3
lret
std
inc
xor
cmp
cmp
lret
out
push
dec
subl
cmp
mov
in
inc
pop
mov
fsubl
add
scas
std
cwtl
sbb
movsb
mov
daa
data16
sahf
lret
mov
pop
pushf
jo
cmpsl
test
and
outsl
and
lcall
jg
inc
arpl
sbb
pop
xchg
jae
inc
movsl
mov
mov
jnp
jno
xor
jle
scas
pop
add
fildl
scas
ljmp
call
shl
cmpsl
inc
fsts
pop
add
ljmp
in
int
in
mov
inc
ljmp
sbb
lret
or
xchg
nop
cmp
dec
in
mov
cmp
adc
lds
pop
lahf
dec
leave
push
mov
scas
xor
rorl
js
and
cs
or
xchg
jle
dec
popa
add
jb
adc
lea
xor
ljmp
pop
xchg
add
lods
cmp
pop
adc
xor
cmp
push
and
lock
cmpsb
movsl
out
adc
inc
jo
int3
scas
dec
lret
adc
in
imul
mov
adcb
cmp
and
aaa
scas
scas
and
jb
mov
mov
addr16
arpl
cltd
std
fcmovb
repnz
jle
mov
out
push
fwait
sti
fdivl
cmp
insl
mov
fsts
mov
and
into
dec
scas
inc
push
mov
inc
xlat
jge
popf
inc
sti
sahf
pop
in
cmove
mov
xlat
cmc
out
loope
dec
add
cmp
daa
stc
mov
push
inc
jg
jl
andb
cltd
aam
jo
movsl
and
xlat
divl
pop
jbe
push
xchg
movsl
jns
add
outsb
xor
pop
leave
aas
push
push
iret
arpl
out
cld
and
pop
push
dec
mov
scas
mov
sar
or
loope
sbb
ret
mov
fildl
push
mov
mov
sbb
mov
into
xor
fs
jb
sbb
call
insb
add
mov
add
repnz
or
fidivrs
push
insl
in
ljmp
xchg
xchg
ss
and
jecxz
mov
xchg
cmp
sahf
stos
loopne
sbb
gs
ficoml
cmp
in
mov
shl
mov
sti
add
ret
fucomp
dec
cmp
stc
push
gs
cmp
fiadds
sbb
pushl
mov
lods
js
jne
sub
shrl
in
xchg
jp
push
pop
out
xchg
out
in
aaa
in
mov
rcl
mov
repnz
out
rcr
insb
push
sbb
xor
jae
mov
rorb
xlat
cli
xchg
sbb
jge
insl
cmp
push
lods
cmpsb
int3
mov
pop
addr16
in
mov
mov
mov
ficomps
xchg
fcmovb
lcall
dec
sub
ljmp
mov
pop
testl
cltd
and
xor
shrl
jb
mov
jo
inc
jbe
xor
sbb
pop
xchg
and
lret
sub
pop
xchg
sub
xchg
ss
add
mulb
push
push
add
fwait
mov
lds
add
lret
dec
jne
hlt
pop
out
push
jnp
xor
mov
clc
mov
sbb
nop
lods
fstpl
jne
pop
rclb
hlt
cmp
outsb
sbb
xor
push
pusha
testl
pusha
sub
aaa
add
leave
jmp
jae
dec
loope
mov
pop
jno
push
aaa
and
mov
sbb
mov
adc
ficompl
movsb
cmp
icebp
cltd
das
daa
mov
loope
inc
mov
andb
sbbl
xor
shrl
mov
mov
iret
push
sbb
cmp
jbe
fsubl
and
aad
cmp
dec
imul
fdivl
pop
sbb
dec
or
pop
rcl
add
popa
in
xchg
fs
in
and
out
add
addr16
imul
cmp
mov
pop
outsl
push
lcall
add
pop
sahf
clc
scas
push
inc
push
fcoml
lret
jecxz
cld
cmpsl
popa
xor
or
xchg
push
ljmp
jg
lret
rcrl
test
test
cmpsb
pop
cmp
or
add
cmp
pop
mov
andl
mov
jge
out
stos
clc
jmp
es
js
jo
or
mov
int
push
call
and
sub
mov
cmp
cmp
hlt
insl
lret
add
sbb
sub
or
in
or
xchg
mov
loop
ds
xor
shl
std
movsl
icebp
push
cmc
outsl
dec
lret
sti
mov
daa
imul
lea
pop
mov
inc
pop
movsb
mov
shlb
or
and
adc
or
or
sbb
int
leave
out
pop
imul
mov
addr16
push
out
icebp
jl
imul
sbb
out
das
out
add
jmp
rcll
andb
jno
sbb
xchg
fisubs
std
icebp
movsl
loopne
jbe
mov
jge
sub
or
push
jl
sbb
sub
push
notb
out
pop
jmp
adcl
dec
add
sbb
mov
sbbl
jecxz
mov
sbbb
decb
mov
push
movsb
or
mov
imul
fldl
inc
inc
shrl
aad
imul
ja
test
movsb
pop
mov
adc
pop
inc
lods
mov
mov
push
in
add
sub
xor
outsl
xchg
or
ficoms
jnp
or
pop
out
dec
frstor
jl
repnz
sub
inc
push
add
js
aam
dec
fsin
cmp
mov
push
scas
mov
sub
in
dec
mov
sbbb
in
lret
movsb
xchg
sub
mov
and
xchg
imul
arpl
xchg
cltd
jb
push
mov
es
xchg
pop
add
ljmp
fnstcw
fcompl
cli
jge
or
pop
cmp
mov
inc
pop
and
sub
loopne
adcb
sub
push
or
sahf
xor
jb
mov
roll
or
jle
scas
xchg
lret
sbb
in
iret
pushw
fsub
and
aam
and
cmp
adc
in
pop
xlat
int3
mov
push
insl
xor
pop
inc
imul
in
dec
and
and
sahf
jbe
divl
pushf
mov
andl
jb
enter
xchg
adc
fldenv
dec
loope
cmp
and
add
scas
push
push
inc
into
aad
jbe
cmpl
cs
adc
add
xchg
addr16
mov
mov
dec
add
xchg
sarb
inc
sub
pop
xor
xchg
hlt
ds
add
pop
mov
jg
stos
push
cmp
cmp
push
mov
cmc
int
push
mov
and
cld
mov
push
pop
loope
push
and
mov
repz
sbb
lret
mov
pop
bound
add
push
xor
cs
sahf
mov
mov
aam
push
add
daa
mov
leave
jp
cmc
mov
lock
mov
notb
dec
popf
dec
std
cmpsb
jo
sarl
out
pop
cmp
loope
adc
cmp
out
jp
jle
xlat
out
shrl
cwtl
bound
pop
test
rcl
inc
pop
imul
les
sub
dec
mov
mov
fs
inc
push
mov
add
ds
push
mov
push
xchg
lcall
mov
je
sbb
sub
scas
pop
in
or
icebp
lods
cmp
dec
mov
jo
mov
mov
mov
jno
mov
movsb
or
sub
div
adc
and
or
inc
pop
adc
in
mov
movsb
add
repz
sub
dec
push
sub
and
or
adc
cwtl
mov
int3
inc
jns
gs
fs
gs
int3
cwtl
into
push
int3
and
adc
out
stos
inc
cmp
pop
adc
and
pushw
mov
cmpb
mov
add
mov
xchg
cmp
or
pop
sub
dec
dec
lds
pop
out
les
mov
out
pop
adc
sub
sbb
push
dec
xchg
sub
lahf
in
xor
mov
pop
int3
loopne
fsub
mov
sbb
adc
outsb
add
pop
jge
sbb
fnstsw
add
jns
ja
in
sbb
jnp
jno
mov
push
adcl
js
or
fcmove
jb
adc
dec
sbb
mov
and
loope
rorl
in
sbb
sub
jmp
or
mov
lods
mov
mov
fxch
pop
rol
insb
sbb
jmp
sub
push
xor
into
inc
pushf
or
and
cld
pop
or
andl
push
mov
enter
ja
adc
jbe
sbb
cmp
mov
jns
cmp
push
mov
inc
flds
cli
dec
cmp
mov
adc
jne
mov
inc
arpl
test
shl
or
adc
roll
in
lret
lock
es
push
lock
in
test
add
jno
cmp
inc
out
and
rsqrtps
dec
push
in
scas
ror
mov
lods
mov
or
popa
test
jecxz
es
mov
inc
push
sbb
push
imul
sub
fimull
pop
cmp
cmp
mov
iret
jnp
arpl
add
out
repnz
mov
cmp
pop
repz
push
pushf
cli
sub
rcrl
dec
mov
addl
ror
dec
stos
pop
icebp
fsubl
xchg
dec
cmp
movsb
push
enter
out
je
pop
fldcw
add
inc
push
lret
stos
mov
xchg
popa
mov
xchg
mov
sub
rorb
push
popf
jg
mov
dec
push
inc
hlt
sbb
xor
in
aas
popf
sti
cmp
lahf
sbb
iret
mov
adc
ljmp
call
or
inc
mov
ret
jb
xchg
icebp
stos
dec
out
dec
add
dec
sbb
dec
lcall
aas
jb
in
repz
push
imul
jns
dec
dec
pop
xchg
xlat
mov
mov
imul
scas
aad
jnp
loop
mov
push
movsl
cmp
pop
inc
sbb
cs
sbb
adc
jno
and
cltd
xchg
dec
pop
jg
xchg
mov
shrl
stos
mov
lret
add
push
mov
repz
pop
cs
lds
movsl
xchg
lcall
cmp
in
fistpll
cli
ja
sub
gs
jns
jg
mov
mov
adc
mov
andl
push
icebp
mov
sub
xor
mov
or
inc
pusha
fs
fs
xchg
mov
mov
push
rorb
sub
mov
adc
dec
pop
xchg
mov
divl
loop
lret
sti
or
xchg
jbe
dec
add
aas
nop
pop
jno
insl
pop
lahf
stos
jbe
sbb
pop
test
in
sub
cltd
lcall
call
and
aam
mov
ja
imul
adc
aaa
xor
mov
mov
fdiv
xchg
jle
int3
pop
lcall
dec
call
std
or
mov
mov
ss
cmc
add
xchg
jge
les
fwait
xor
adc
hlt
or
push
aam
xor
pop
scas
mov
loope
movsl
cmp
mov
pop
jbe
ret
rcll
xor
cs
xchg
xor
adc
in
sbbl
jle
lods
iret
icebp
mov
lcall
lahf
mov
in
imull
inc
lret
fmul
push
inc
jo
fdivrp
in
jp
and
inc
ss
mov
and
inc
fnsave
adc
jns
cmp
ret
insb
and
jno
popl
cmp
push
ja
jg
or
add
mov
adc
mov
mov
lock
mov
xor
push
test
inc
or
xchg
ja
sbb
lcall
aad
push
jno
outsl
and
arpl
repz
mov
std
xchg
inc
fimull
push
mov
pusha
mov
ret
mov
inc
sbb
mov
loope
inc
sub
out
cmp
inc
pop
or
mov
pop
outsl
std
lea
loop
mov
sarb
dec
add
pop
imul
scas
out
lahf
lret
jnp
arpl
shrb
cmp
xor
ljmp
or
dec
cmp
push
push
jnp
pushl
out
repz
rcrb
aam
jge
call
lea
dec
cld
mov
jl
jo
add
jbe
xchg
pop
std
xchg
nop
mov
mov
std
adc
aas
dec
inc
push
xor
mov
loopne
cwtl
add
sub
lret
call
imul
mov
bound
jmp
or
push
mov
mov
cmpsb
xor
mov
scas
mov
ret
ret
push
call
dec
or
popf
shl
xor
or
rcll
jno
pop
add
cld
or
fsubr
cmp
pop
dec
xor
and
mov
gs
dec
ret
int3
mov
cmp
in
fadd
loope
sbb
mov
xor
sub
dec
ja
sub
jno
pop
jp
or
push
cwtl
and
mov
cld
or
ljmp
xor
data16
pusha
sub
dec
aas
pop
cmp
out
cld
imul
dec
dec
bound
movsl
adc
lods
gs
push
inc
iret
mov
aas
pop
push
add
jp
pop
mov
xor
sbb
mov
sub
sarb
adc
pop
js
xor
addr16
fwait
dec
pop
lret
bound
mov
jne
jmp
xor
sub
dec
ds
imul
sti
daa
dec
fbstp
data16
sahf
and
mov
popf
mov
int3
mov
jbe
fdivl
cwtl
int3
cmpsb
repnz
mov
movsb
lcall
sbb
add
popf
shll
xchg
out
std
xchg
icebp
pop
fwait
gs
cs
sub
dec
lahf
daa
iret
cld
push
rclb
dec
mov
mov
add
mov
fsubrl
aad
pop
std
dec
fxch
pusha
sub
jmp
je
mov
orl
push
popa
mov
push
in
jb
aam
mov
inc
sub
mov
ljmp
test
stc
inc
fnstenv
dec
jmp
adc
cmpb
inc
shl
in
inc
cmpsb
push
dec
js
out
pop
xchg
je
adc
sbb
adc
fs
mov
jns
pop
pop
cmc
mov
xor
mov
sub
scas
mov
push
xchg
frstor
dec
adc
jne
aaa
sub
add
frstor
jno
scas
out
inc
andl
imul
mov
into
divl
xchg
ja
pushl
mov
mov
fisubs
das
or
scas
or
push
jnp
sub
mov
or
stc
jmp
xchg
sub
mov
mov
or
dec
lea
fdivl
sbb
xchg
xor
popf
jge
mov
jge
cmp
jecxz
add
je
or
jmp
loope
push
adc
gs
mov
xrelease
lret
jg
xchg
mov
sub
add
sbb
in
xchg
pop
or
lods
imulb
mov
jmp
inc
fisttpl
mov
stc
ljmp
sbb
daa
lahf
cmp
cwtl
xorl
fnstcw
pop
inc
inc
popa
jo
pop
mov
out
pop
daa
jecxz
or
movsb
rorb
mov
nop
or
int3
and
cmp
adc
cmp
aad
or
sbb
pop
cltd
std
xchg
test
fidivs
stos
sub
test
sbb
mov
sub
pop
in
fidivl
test
fwait
inc
inc
push
mov
stos
sbb
or
mov
out
sbb
mov
aam
xor
scas
push
jbe
cmp
mov
aaa
sub
fsub
ffreep
loop
add
pop
inc
insl
add
jmp
test
mov
push
leave
mov
imul
adc
lock
pop
inc
pop
aas
xor
add
jmp
or
xchg
cld
cmp
outsl
push
test
push
or
xchg
mov
cli
xchg
cmp
cmp
and
mov
add
mov
mov
addb
sbb
shl
dec
stc
adc
sub
and
sbb
scas
dec
mov
addl
pushf
dec
sub
cs
mov
add
sub
xlat
aam
sub
lret
cmpsl
push
aam
ds
ror
xchg
idivl
mov
cmp
ret
cmpb
mov
dec
sbbl
cwtl
shlb
insb
mov
dec
fistpll
pop
pop
or
cs
pusha
hlt
jmp
and
adc
and
repz
xchg
mov
jno
cmpsl
ret
pop
inc
addr16
cli
lcall
mov
and
jb
inc
sarb
icebp
stos
inc
sub
dec
leave
pusha
orb
dec
scas
into
pop
jnp
orb
enter
inc
xor
loop
popa
enter
outsb
int3
xlat
push
negb
fnsave
inc
pop
sub
dec
dec
insb
stc
leave
jne
sti
sbb
in
test
lods
or
mov
mov
gs
fs
xchg
clc
je
push
xor
push
fdivrs
ficompl
xchg
cmp
mov
inc
mov
std
out
sub
pushl
add
loopne
push
daa
jmp
pop
cwtl
ja
jmp
cmpl
dec
cmp
xor
lahf
inc
adc
jle
aaa
lods
push
lods
or
xor
mov
scas
hlt
and
mov
adc
call
pop
nop
mov
in
out
dec
sub
xlat
pop
fnstenv
lods
cmp
sti
stc
mov
push
jo
sbbl
xchg
dec
loop
add
test
imul
sub
cwtl
push
push
popa
dec
test
cs
ss
push
js
fisubrl
jecxz
hlt
push
xchg
sub
mov
and
out
ficoms
lret
ds
in
xchg
sub
mov
out
pusha
cmp
mov
testb
cwtl
cmp
inc
add
jle
jmp
jle
add
sbb
mov
mov
jbe
fdivs
inc
std
or
testl
pushf
fnstenv
test
insl
aad
push
cmpsl
add
xor
cli
loopne
lret
jne
jg
push
xchg
push
jmp
je
inc
fstl
repz
and
out
movsl
cli
xchg
jo
shlb
dec
or
cwtl
je
and
xchg
int
adc
mov
call
cmp
and
je
out
add
sar
mov
push
xor
fdiv
jbe
mov
mov
cld
push
call
iret
or
je
xchg
pop
and
pop
std
xchg
out
hlt
outsl
mov
lock
cmc
adc
add
mov
es
imul
push
push
jmp
jo
out
mov
addr16
outsb
mov
enter
lock
adc
mov
xchg
mov
dec
shrb
mov
aad
mov
int
pop
mov
in
sub
inc
xchg
ret
scas
pop
pop
dec
ret
mov
jecxz
ja
xor
adc
lret
and
aaa
mov
dec
dec
dec
mov
repz
es
outsb
js
andb
pop
insb
leave
ss
xor
pop
xchg
pop
cmpsb
inc
xchg
hlt
lea
mov
sbbb
pop
mov
mov
ds
sub
push
xchg
xor
pushf
clc
push
dec
and
cmp
mov
jp
shl
mov
scas
mov
and
xchg
add
cmpsl
lea
mov
adc
aam
jns
adc
fiadds
xchg
mov
je
pop
imul
jle
pop
lods
mov
inc
jb
jge
xchg
dec
popa
gs
xchg
ds
jg
fptan
mov
jbe
popf
and
inc
pushf
jno
and
mov
aas
iret
cmp
pop
icebp
pop
cmc
stos
mov
jl
orl
jns
out
repnz
imul
pushf
arpl
xchg
or
ret
push
and
push
mov
jbe
dec
mov
cs
pop
adc
push
xchg
mov
loopne
ficoml
popf
push
js
shrl
cmp
xlat
inc
jl
sbb
lret
stc
mov
mov
jmp
or
xor
jp
outsl
jo
and
loope
add
mov
pop
cmc
xchg
mov
jl
cli
mov
cmp
ljmp
popf
push
lea
stos
test
fnstcw
test
lahf
push
call
mov
sub
cmp
push
mov
mov
fisubrs
push
mov
adc
cmpsl
cmp
idivb
push
inc
repnz
jl
dec
in
popf
les
movsb
imulb
adc
sub
div
outsl
push
push
xchg
mov
rolb
movsl
outsb
mov
test
int3
addb
mov
movl
fisubrl
mov
or
push
sub
jno
roll
outsb
in
mov
mov
je
lds
dec
cli
jbe
iret
xor
inc
lahf
xchg
and
sti
cmpsl
inc
inc
and
and
mov
push
leave
or
aam
popf
cmc
cmpsb
outsl
and
mov
or
addb
xchg
scas
dec
xor
inc
andb
scas
mov
jl
push
xor
subl
add
ds
mov
loope
js
test
pop
fistpl
xor
out
and
mov
jnp
outsb
in
mov
jp
repnz
call
add
cmc
test
arpl
xchg
cmp
and
int3
mov
cmpsl
and
gs
xchg
out
inc
mov
cmp
fs
push
cwtl
das
in
and
ret
mov
dec
sbb
push
push
test
inc
in
cmp
fnstenv
mov
mov
repz
adcl
push
call
dec
in
sub
push
ret
sbb
mov
pop
mull
or
pusha
sarl
repnz
mov
xor
insb
or
sub
stos
adc
pop
push
insl
mov
divb
aad
push
mov
add
jbe
sub
push
add
jno
jecxz
lea
adcl
out
in
scas
jae
fiadds
ljmp
nop
jnp
pushf
notb
call
ds
enter
mov
add
pop
ja
movsb
shr
pusha
int3
xchg
xor
cmp
lods
mov
out
test
aaa
jmp
jp
xchg
ljmp
fsubrs
mov
jns
dec
es
loope
std
xchg
push
lods
ljmp
pushf
pop
pop
std
in
test
popa
push
fisttpll
push
push
data16
enter
imul
and
adc
sub
je
xchg
das
inc
outsb
push
stc
pop
daa
fldcw
xor
popa
add
adc
sbb
cld
enter
stos
cmpsl
xchg
and
push
cwtl
stos
je
and
xchg
data16
pop
mov
popa
in
cmp
test
jnp
int3
aam
notb
add
imul
jg
sub
and
test
and
or
add
testb
lock
sub
inc
pop
scas
in
daa
mov
cmc
stos
fimull
shlb
adc
out
lea
aaa
push
sbbb
inc
push
sahf
xchg
addr16
out
in
mov
insl
fmul
sbb
or
fs
les
loop
push
xchg
call
test
add
stc
lret
sub
jmp
push
stos
jne
rcrl
push
dec
mov
js
xchg
push
dec
jcxz
sbb
cld
or
and
xor
jge
jae
pop
add
push
and
fst
outsl
push
jo
adc
push
inc
pop
fldenv
scas
pop
mov
push
mov
jmp
xchg
pop
imul
int
push
mov
aam
aas
and
dec
push
xchg
adc
sar
aad
pop
mov
cmpsb
mov
roll
mov
mov
sub
movsb
repz
lret
rol
jmp
jno
dec
pop
cmp
pop
adc
pop
push
mov
xchg
adc
xor
lret
out
repnz
mov
dec
adc
inc
adc
adcl
cmp
mov
adc
movsl
xchg
clc
pop
or
fmull
mov
lods
jo
jns
push
or
jno
inc
aas
dec
inc
mov
out
sbb
mov
out
iret
jo
movsl
loope
jbe
insb
xlat
push
inc
pop
mov
jl
mov
jg
mov
xor
push
imul
pushf
repnz
inc
jmp
aaa
int3
arpl
xchg
pop
cmp
inc
ljmp
sub
loope
and
sub
cmpsb
xchg
jp
mov
icebp
sbb
lcall
inc
ss
aaa
adc
sub
or
mov
mov
or
aad
fcomps
insb
enter
mov
lcall
push
stos
push
jae
inc
in
sub
sbb
test
mov
clc
imul
sub
dec
lret
jbe
inc
pop
cmp
and
mov
cmpsl
lret
xchg
popf
popa
cld
fwait
les
push
push
adc
jmp
in
or
mov
movl
outsl
loop
ret
outsl
lahf
mov
cmpb
sahf
lcall
pop
enter
frstor
mov
xchg
adc
sarl
pop
sahf
lock
jo
mov
divb
push
test
mov
enter
adc
push
mov
sbb
shlb
mov
or
and
decl
inc
sub
xchg
push
jg
fdivrl
notb
inc
outsl
adc
inc
jg
std
stos
lret
sbb
xor
jmp
mov
cmp
in
out
push
xchg
aam
jle
jmp
movb
and
rclb
and
adc
lods
mov
pcmpgtd
fnstenv
out
lock
sub
cmp
clc
subl
in
testl
pop
aad
fwait
cmpsb
mov
sarb
jo
popf
xor
cs
jbe
insb
ret
pop
sahf
imul
cld
mov
cmp
in
clc
nop
mov
fstpl
repz
or
cmp
aaa
mov
in
dec
cltd
mov
dec
xor
int
aaa
push
lods
add
cmp
pop
js
sti
dec
in
imul
add
jge
sub
mov
shl
ss
loopne
jmp
out
and
popf
xor
loopne
cmp
daa
stos
mov
fxtract
adc
xchg
les
sbb
aaa
or
mov
pop
cmp
rcrl
gs
frstor
jl
js
inc
fs
iret
sub
test
dec
mov
or
je
ret
js
adc
ret
cld
stos
or
dec
lcall
adc
or
or
clc
lahf
shl
pop
in
sarb
fistpl
loope
cmp
lds
mov
into
cmpsl
movsl
es
jge
inc
pop
mov
mov
inc
adc
dec
xor
dec
cmp
es
loop
xchg
scas
inc
and
mov
in
xorl
or
popa
cli
cmp
pop
adc
xchg
push
rclb
test
or
test
xlat
testb
and
push
leave
outsb
pop
stos
fldt
inc
xchg
cmp
dec
outsb
mov
xor
or
cmp
mov
pop
out
cmp
pop
jecxz
dec
std
outsb
adcl
pop
nop
adc
sbb
xchg
aaa
into
or
cmp
repz
mov
pop
add
add
popf
xchg
or
in
add
pushf
aaa
test
push
cmp
mov
mull
inc
adc
mov
iret
in
fstpl
scas
dec
jl
sahf
popf
cwtl
push
call
in
and
add
mov
xor
inc
fldenv
dec
pusha
idivl
mov
xchg
mov
imul
adc
adc
lcall
out
bound
or
cmp
sub
mov
jnp
outsl
push
inc
xchg
jnp
fidivrl
dec
shll
jbe
mov
and
jle
add
nop
mov
loop
sti
aaa
push
in
sar
out
loopne
add
fs
scas
data16
and
mov
aad
lds
jns
sbb
cmpsl
lds
or
sbb
pop
add
pop
jecxz
dec
mov
xchg
xor
hlt
inc
push
push
sub
int
lock
mov
test
hlt
daa
es
or
inc
pop
out
lods
xor
lock
in
xor
xchg
repnz
and
sub
ja
inc
fidivl
shll
jnp
int
push
sbb
mov
xor
sub
subps
mov
int3
xchg
cli
popf
xor
js
vorps
or
jp
jl
jne
fdivrl
push
popf
xor
push
pop
inc
cmp
cld
lcall
push
mov
cltd
lods
sbb
lret
sti
mov
mov
mov
mov
xchg
mov
pushf
into
cltd
jle
cmp
mov
pop
mov
movsl
sti
push
add
iret
in
out
adc
notl
mov
aaa
into
mov
push
in
mov
adc
add
fsubr
stos
sub
ja
scas
sbb
outsb
and
mov
ret
dec
inc
stos
pop
imul
pop
subb
mov
faddl
pop
inc
mov
pop
pop
jae
inc
sub
lret
pop
subb
mov
sub
outsb
lret
or
xchg
gs
fs
jmp
push
jmp
mov
jg
mov
test
inc
inc
inc
out
in
inc
adc
repz
aas
lcall
mov
pop
push
insb
dec
lods
arpl
xor
add
push
ss
std
or
dec
loop
adc
mov
xor
sahf
cmpsb
mov
cltd
sar
push
push
test
loope
lret
popa
mov
loopne
sbb
cmpsl
aas
mul
fwait
xchg
push
adc
lock
push
and
adcb
insb
loope
xchg
cld
outsl
push
jecxz
aas
push
sbbb
mov
pop
sub
cmp
aaa
repnz
jnp
pop
adc
xchg
cmpsb
add
aaa
shrb
call
out
jmp
sbb
sbb
sub
xor
sub
std
lods
outsl
xchg
add
inc
mov
inc
je
xor
mov
sahf
sti
es
mov
fwait
test
jg
fwait
mov
pushf
sti
or
push
clc
or
cmp
or
data16
iret
inc
sub
xchg
push
inc
push
in
std
ret
bound
xchg
adc
inc
jmp
bound
out
mov
in
mov
shrb
jno
mov
xchg
ljmp
lahf
or
jne
adc
mov
stc
out
xor
xor
push
movsb
cmp
jg
outsl
cltd
and
xchg
ret
out
cmpsl
in
pop
imul
push
pop
icebp
or
pusha
loopne
sub
or
mov
jp
fidivl
scas
push
cwtl
stos
vpshaq
aad
push
mov
or
jge
jbe
xchg
stos
mov
je
sub
inc
mov
or
push
mov
and
int
jbe
jge
xor
in
js
sub
adc
loop
int3
jae
ds
sub
ds
scas
sub
mov
shrb
mov
mov
test
rcrl
lahf
ss
sub
cmp
push
dec
ficomps
inc
push
jb
pop
adc
mov
cmp
iret
jmp
fcmove
adc
jecxz
dec
cmp
faddl
sbb
inc
into
or
bound
mov
mov
aam
rcll
ja
out
ds
mov
push
leave
shrl
or
dec
leavew
xor
xor
push
gs
jne
jmp
gs
sub
call
add
mov
push
pop
jge
ljmp
xor
push
sbb
imul
scas
adc
fstps
push
out
xor
inc
mov
jbe
xor
faddl
into
xchg
push
movw
bound
insl
or
in
xor
in
dec
jl
sti
mov
mov
xchg
push
loope
and
test
out
pop
nop
shrl
push
jge,pt
divb
mov
mov
sub
insl
aad
lcall
mov
popw
xor
fldl
cltd
int
xor
pop
test
popa
or
movsb
or
hlt
je
enter
cltd
es
int
lods
ror
push
add
rcrl
nop
ret
pop
fistpll
loope
xor
dec
dec
ds
call
insb
movsb
enter
repz
cmp
dec
fisttpll
push
jno
inc
aaa
adc
mov
sub
hlt
sub
popf
cmp
nop
daa
add
jl
int
scas
xchg
push
lods
fnstsw
mov
pslld
movsb
pop
shlb
sub
dec
jp
jnp
xchg
inc
mov
add
icebp
test
sub
nop
sbb
shr
cli
or
scas
add
test
in
inc
jmp
dec
mov
insb
out
mov
cmovne
cmp
jno
mov
add
xchg
pop
mov
pop
push
mov
mov
sbb
or
xor
shlb
loopne
push
divb
jae
ljmp
dec
pop
mov
nop
or
es
jg
bound
inc
jmp
add
mov
xchg
add
cmc
add
nop
mov
mov
sbb
jge
sahf
fcomi
lret
test
aam
ret
rcll
loopne
scas
mov
dec
fldcw
add
in
sub
or
dec
cwtl
stos
mov
or
ficoml
jno
cmp
mov
pop
ljmp
daa
push
adc
add
daa
fcmove
sub
pop
cmp
xchg
test
cmp
or
int
test
pop
lock
js
into
adc
sahf
push
push
adcb
xchg
loop
or
sahf
repz
inc
pop
shlb
pop
in
cmpb
test
sti
test
add
cmp
adcl
loopne
ja
aas
add
repnz
lret
addr16
test
gs
mov
ja
enterw
jmp
sbb
rol
gs
fmull
in
je
cld
lcall
cwtl
mov
push
mov
xchg
in
fnstsw
out
mov
or
jne
mov
inc
les
mov
mov
mov
iret
cmpb
and
cmp
adc
lea
push
push
pushf
das
mov
imul
mov
bound
or
add
fildl
scas
mov
dec
xor
aam
sub
loop
push
imul
xor
and
fisubrl
lods
pushf
stos
mov
into
dec
and
clc
faddp
fisubl
inc
lods
clc
pushf
mov
aas
jecxz
cld
out
cmpsb
sub
stc
jle
int3
xor
sbb
cwtl
adc
jmp
scas
movsl
clc
pop
xorb
add
jnp
cmp
and
xchg
cs
loopne
dec
dec
cmp
mov
inc
jp
jle
jb
push
movsl
pusha
xchg
jg
test
xor
sub
adc
mov
inc
dec
adc
mov
push
loop
test
jbe
fnsave
shrl
cltd
pop
xchg
pop
int3
xor
add
jmp
stos
icebp
jae
cmc
mov
xchg
add
ljmp
push
idiv
add
mov
nop
jl
ret
fstpl
mov
jns,pn
lahf
test
je
xchg
lahf
or
nop
js
lock
popa
xchg
ljmp
and
pushf
jno
sti
mov
jns
fwait
add
int
add
fldenv
push
pushf
mov
and
and
jae
pop
add
and
fidivs
push
pushf
push
ja
js
mov
in
dec
xor
aaa
pop
loop
sub
nop
daa
outsl
and
or
bound
mov
pop
bound
cmp
mov
rcrb
push
jecxz
lods
outsl
xchg
ret
in
cmpsb
cmp
clc
in
mov
adc
push
cmp
cmp
imull
push
clc
push
cld
sbbl
xchg
aaa
or
or
or
xchg
mov
fwait
and
dec
out
cmp
data16
cmp
and
out
imul
fdivrs
ret
outsb
push
push
cmp
and
add
jno
pop
dec
cwtl
data16
shrb
fsubrp
inc
call
in
das
pop
cltd
shrb
mov
inc
lcall
fwait
fwait
push
sub
xchg
pop
mov
js
jge
cmp
jle
and
lahf
inc
push
jno
jb
xor
pop
mov
adc
mov
xchg
ficomps
push
xchg
sbb
lock
mov
pop
cli
pop
jae
movsl
call
insl
jae
mov
out
cmp
inc
sub
fstpt
call
push
xchg
push
push
jno
movsb
les
and
pop
cltd
cli
xchg
xor
sbb
rorb
mov
call
or
cmp
gs
jge
iret
inc
arpl
fldl
nop
push
sbb
push
fcomi
int
int
xorb
push
jne
add
fwait
nop
icebp
cmp
test
stos
mov
push
test
push
lret
js
sbb
jp
sbbl
cmpsl
adc
and
imull
lret
jl
int3
movsb
loope
fsubrl
pushf
addr16
mov
xlat
lret
lock
fisubs
dec
dec
dec
jle
jp
repnz
scas
sub
mov
cmp
push
mov
pop
pop
adc
xchg
dec
inc
mov
subl
cmp
cli
cs
mov
test
test
ss
or
das
push
ja
lock
mov
inc
xor
lret
jg
jmp
xchg
xchg
in
inc
xor
outsb
icebp
jne
mov
scas
std
mov
push
pop
jg
insl
cmpsb
cli
pop
mov
mov
sbb
pushf
scas
fwait
add
adc
out
cmp
insl
jmp
push
in
lcall
cwtl
sbb
xlat
inc
jmp
pop
xlat
inc
loop
cmp
add
aas
push
jmp
outsb
push
das
addr16
aaa
mov
dec
insb
xor
repz
daa
lahf
mov
push
xchg
inc
dec
clc
xor
lea
xchg
or
out
mov
lahf
stos
cmp
mov
fldenv
sbb
dec
imul
or
test
test
hlt
lods
ljmp
pushf
scas
push
mov
das
push
lret
iret
sub
push
or
mov
and
decb
push
repnz
inc
xchg
bound
clc
jnp
in
shrb
inc
inc
pop
adc
movb
mov
pop
add
subb
pop
xor
imul
ljmp
mov
outsb
sbb
inc
ficomps
lods
rcr
adc
fiadds
es
mov
cmp
and
imul
pusha
mov
shll
or
clc
xchg
repz
rcl
or
push
dec
or
xchg
push
mov
cmpsb
mov
cmp
daa
mov
mov
inc
lock
in
int
sub
test
dec
test
mov
shll
fisttpl
sub
fsts
xchg
mov
popa
repz
jo
pop
mov
sbb
das
nop
pop
sub
lods
inc
iret
cld
xchg
mov
out
leave
and
mov
and
repnz
fisttpl
inc
fidivrs
fs
sbb
sub
shll
jno
inc
scas
inc
jb
insb
filds
pushf
xor
incb
data16
mov
pop
fidivrl
push
push
call
fsubs
sbb
gs
cmp
inc
sub
psubusb
out
xchg
insl
mov
ret
in
or
lahf
outsl
xchg
js
cmp
adc
add
inc
mov
pop
sti
mov
scas
pop
fnstenv
enter
cmc
stc
xchg
dec
lcall
inc
fisubl
int
mov
test
cmp
lods
mov
inc
jns
inc
fwait
xor
xor
test
mov
lret
hlt
cwtl
imul
js
pop
fdivp
dec
sbb
dec
fbstp
cmp
pop
sub
dec
movsb
js
jnp
lea
inc
inc
lcall
loope
jnp
ficoml
xor
mov
xchg
clc
mov
test
fidivl
bound
mov
movsb
and
data16
push
jnp
fbld
rol
adc
cmp
rol
outsl
mov
push
jo
jo
push
dec
xchg
sub
scas
shrl
fnsave
mov
jg
jo
inc
pusha
lods
inc
push
clc
pop
pop
add
push
sub
testl
out
jge
pop
or
mov
xor
xor
shr
push
mov
mov
ss
cmp
mov
xlat
mov
aam
sub
cmp
mov
enter
or
jg
sbb
shrb
jnp
lret
dec
cmp
clc
adc
mov
and
and
push
pop
test
jbe
or
shl
cld
out
sub
pushf
scas
jae
push
mov
or
pop
jmp
sub
int3
mov
mov
cmp
mov
cld
stos
pusha
cmp
xchg
dec
dec
cmpsl
jle,pt
test
int3
lods
mov
mov
dec
sbb
xchg
scas
lods
push
jbe
decb
enter
fisttps
cmpsl
ds
je
pmaxub
lds
fstps
jecxz
dec
cli
or
add
jb
fwait
scas
or
les
mov
aaa
push
scas
xchg
inc
pop
xchg
jp
test
mov
int3
mov
cmpsl
outsl
mov
or
cmp
ja
pop
cmp
fstpl
addb
lret
pop
aaa
push
add
pop
fimuls
mov
out
dec
aad
inc
hlt
mov
ret
sbb
or
jmp
sub
or
mov
ret
and
leave
in
ret
enter
fisttps
bound
sub
icebp
movsl
movsl
daa
jg
xchg
dec
loope
jge
jno
cmp
cltd
xor
fbstp
or
xchg
push
cmc
mov
iret
mov
enter
es
add
and
in
xchg
stc
inc
outsl
inc
jns
test
cwtl
adc
push
lret
je
addr16
mov
cmp
mov
adcl
or
and
in
pop
push
test
mov
insb
inc
fxch
dec
mov
js
inc
lock
ffree
loope
cmp
push
pop
ljmp
xor
fldcw
mov
mov
insb
xchg
sbb
insl
andb
and
pusha
lcall
or
xorb
imul
test
mov
mov
vmwrite
add
imul
jge
cmpsb
scas
sbb
cmp
sub
pushf
sarb
clc
cmp
fbstp
or
dec
pop
sarl
sbb
cli
insb
sub
jo
push
out
pop
adc
sti
pop
and
pusha
gs
ficoml
mov
jbe
addr16
push
mov
mov
sbb
add
cwtl
mov
fs
rcl
ret
mov
das
stos
mov
mov
mov
cmp
lods
imul
push
cmp
jmp
aaa
stos
inc
fcomip
lock
mov
mov
sti
jl
push
mov
xor
cmp
jg
clc
sahf
fs
fimull
adc
addb
inc
cwtl
lods
xchg
add
add
testb
sbb
testb
sbb
push
sbb
pop
push
lret
inc
mov
jge
push
xchg
jge
std
clc
loop
cld
push
fwait
jle
sub
dec
xlat
add
cmpsb
mov
fcomps
test
lcall
pop
mov
outsb
movsb
rorb
sbb
sbb
loope
lock
popa
hlt
xor
dec
out
loope
cmc
ds
arpl
imul
test
cltd
add
mov
pop
pop
testb
jge
shll
cmpsl
push
push
call
mov
sub
call
ljmp
pop
scas
incb
sub
xor
ret
mov
pop
out
sarb
int3
push
dec
dec
es
mov
and
mov
stc
nop
adc
pop
jg
int
pop
paddusw
xchg
out
pop
outsl
jns
adc
sub
pop
gs
push
fnsave
or
out
popl
push
dec
ret
push
mov
ss
shl
outsl
lods
stos
and
enter
out
sbb
fs
js
add
cmp
jmp
shlb
in
pop
repz
test
xor
out
sub
ljmp
push
inc
xor
inc
inc
jle
incb
pusha
jge
fwait
test
and
pop
cmp
shl
cmp
in
nop
cli
or
mov
popa
xor
iret
iret
pop
and
idivl
insl
and
out
test
jp
gs
or
mov
fildll
push
mov
dec
gs
stos
lret
fmul
jnp
jp
jnp
and
loopne
mov
jo
int3
lret
sub
mov
or
jg
inc
nop
stc
test
orl
leave
fs
dec
arpl
addr16
testl
inc
jne
out
test
push
inc
sbb
cli
or
dec
push
lcall
fsubs
ds
dec
mov
push
cltd
xor
inc
jb
mov
movsb
xchg
lods
fsubl
push
in
push
xchg
in
sbb
mov
addr16
es
loope
sub
sarb
adc
loop
pop
test
dec
xchg
xor
push
pop
aas
inc
pusha
lahf
jne
es
mov
pandn
push
push
sbb
cltd
std
sub
scas
cld
repz
mov
adc
rclb
dec
ja
inc
fisubrl
lock
and
loop
pop
add
mov
mov
frstor
or
ja
jecxz
cmp
mov
sub
mov
cmp
aam
adcb
cmc
adc
xor
aas
roll
and
sti
cli
jge
sbb
add
mov
repz
push
jnp
into
inc
shl
jae
pop
jae
sbb
ror
fsubl
aaa
dec
das
push
jle
mov
or
cmpb
mov
hlt
dec
out
mov
pop
jg
shrb
lea
add
out
or
stos
addr16
jo
lods
cltd
jne
lret
into
or
arpl
mov
inc
stos
push
or
fildl
movsl
xlat
mov
jns
mov
add
xchg
push
jnp
xlat
sub
fmul
cmpb
daa
nop
pop
xchg
scas
fsubs
dec
mov
sbb
aam
dec
dec
push
test
dec
and
add
cwtl
fstl
xchg
mov
push
xor
ja
xor
jnp
push
xor
cld
shlb
mov
out
adc
push
xlat
push
shlb
movl
ss
pop
fistpll
add
inc
out
pusha
xchg
stos
cltd
lahf
mov
dec
and
lret
pusha
pop
pushf
sub
daa
cld
inc
fsts
mov
jnp
in
lret
mov
pop
int
sarl
pop
out
fnstenv
jle
and
inc
adc
cli
fists
les
dec
dec
push
adc
lods
mov
cmc
out
pop
and
cmp
jecxz
ljmp
mov
mov
mov
mov
and
push
xor
mov
test
sub
repnz
and
sub
sbb
add
repz
pop
lret
test
clc
sub
insb
jae
js
sub
adc
pushf
xor
or
jmp
fadds
movsb
pop
aaa
lea
inc
fwait
xchg
mov
stc
and
sar
jp
call
sbb
imul
adc
xor
imul
dec
sub
aad
out
fldt
xorl
add
test
inc
or
rol
push
sub
mov
xor
xor
dec
jo
repz
xchg
rol
lahf
ud2
mov
cld
aad
xor
js
xor
mov
jecxz
push
push
adc
xorl
into
mov
mov
fistps
push
or
mov
loopne
in
and
xchg
bound
push
jns
jne
fsubrp
xchg
push
mov
sbb
or
cmp
cltd
inc
xlat
push
lods
xchg
pop
jb
test
push
mov
cmpsl
mov
into
fwait
adc
outsb
xchg
sbb
inc
lods
sarb
pusha
adc
inc
lret
pop
mov
jno
fsubs
icebp
insb
jmp
test
sbb
sarb
test
dec
mov
inc
popa
mov
iret
orb
cmp
cmp
mov
inc
mov
inc
push
andl
mov
shlb
cmp
das
insb
out
and
push
adc
add
xor
xor
jl
das
push
fucomi
jno
push
jno
jbe
cmpsl
push
in
sbb
sub
push
fistps
fsubrp
inc
mov
addb
cmpsb
fcomps
sub
shlb
addr16
push
pop
xchg
mov
pop
adc
cmp
insl
test
add
mov
fimuls
jmp
dec
pop
xlat
or
dec
jp
and
adc
lods
sub
gs
or
push
mov
adc
ja
repz
mov
stos
push
pop
shll
mov
sbb
pop
mov
aad
test
jecxz
push
mov
xchg
mov
fistps
sub
mov
psrad
cld
enter
dec
rorb
cmp
in
lcall
sbb
out
bound
jmp
jge
fcoms
xchg
mov
dec
jmp
dec
push
sbb
pop
lcall
jg
push
cmp
xlat
fucomip
add
mov
lahf
subl
jle
lds
xchg
dec
pop
lahf
mov
sbb
fmull
aas
xor
pop
cmp
pop
mov
adc
xor
mov
dec
sub
inc
movsb
addr16
std
mov
xchg
arpl
out
imul
loope
push
repnz
mov
fwait
nop
inc
fnstcw
xchg
leave
pusha
enter
es
cld
inc
repnz
movsl
aaa
aas
push
jmp
jae
fisubl
inc
push
mov
test
add
push
ds
and
out
ljmp
movsb
mov
jbe
mov
pop
adc
outsb
fldl
popf
xchg
xchg
pop
gs
shl
cmc
cmp
ds
loop
adc
out
cli
push
pop
icebp
mov
push
leave
ret
jns
sbb
sbb
inc
fdivl
push
arpl
aaa
inc
gs
dec
shll
cmp
aaa
iret
cmp
rol
loope
push
outsl
rcl
mov
out
lds
push
mov
add
mov
push
in
cmp
repnz
push
jecxz
jb
sub
mov
cmpsb
cld
dec
add
cli
dec
imul
popa
mov
lock
lods
jnp
adc
jne
loop
rorb
loopne
mov
and
adc
outsl
pop
cmp
mov
scas
fnstenv
xor
pop
aas
mov
xchg
mov
pop
mov
jne
fmul
lret
push
test
cli
mov
test
mov
shll
stos
dec
jecxz
out
pop
xchg
cli
cmp
sbbl
pop
mov
adc
cltd
adc
push
lock
out
cld
and
jnp
xchg
add
shrb
rol
sub
popa
xor
jns
in
stos
inc
push
push
adc
mov
insl
jno
scas
bound
sbb
decb
aaa
imul
sarl
jmp
mov
addr16
mov
mov
adc
fdivrs
inc
loope
push
nop
add
mov
pop
outsb
push
dec
pop
les
cmc
pushf
bound
add
rcrb
ficompl
insb
mov
sbb
lea
add
cmp
jo
sbb
in
or
scas
xchg
inc
pop
popf
xchg
mov
fs
cmp
int3
xor
pop
and
cmp
pop
and
insl
mov
push
push
int3
inc
ficoms
scas
xor
sbb
pop
xor
pop
mov
mov
rcrb
jnp
sub
imul
cltd
xchg
push
push
orl
sbb
ja
movsb
repnz
js
ja
xchg
mov
into
sti
fwait
aad
imul
adc
cmp
jge
iret
jecxz
aaa
push
outsb
jnp
mov
cmp
mov
cmp
sbb
sbb
sbb
and
pop
ss
mov
imul
dec
mov
and
pop
inc
fstl
fidivs
mov
and
cmp
push
mov
out
mov
mov
ret
jle
xchg
pop
mov
jb
xchg
and
stos
lret
test
imul
mov
and
repnz
loopne
lods
testl
jle
xorl
sbb
mov
push
mov
imul
jnp
jne
mov
lret
mov
addr16
std
xor
cmp
jae
jbe
lea
dec
mov
inc
sbb
gs
clc
xchg
inc
xchg
out
clc
inc
mov
dec
cltd
xor
xchg
inc
pusha
popf
stos
insl
push
repnz
adcl
and
dec
xchg
lods
adc
push
test
movsl
and
jp
push
repnz
out
push
decb
jne
insl
add
jb
pop
int3
add
cwtl
sub
fdiv
mov
sub
sbb
cwtl
sub
ljmp
pop
mov
or
lea
cmc
inc
sti
inc
inc
loope
add
movsb
pushf
xor
ret
aam
pushf
push
sbb
icebp
ljmp
out
or
jmp
fwait
sbb
ret
int
lds
jmp
xchg
cmpsb
cmp
xor
xchg
les
ror
mov
mov
mov
inc
mov
adc
mov
xchg
sti
pop
sub
lods
stos
xchg
adc
cmc
sub
cmpsb
in
xchg
int
aas
pop
sbb
aad
mov
push
cmc
ror
daa
sub
adc
js
xchg
clc
fwait
inc
aam
xchg
lahf
push
adc
and
inc
fidivl
fdivrs
rorb
stos
push
out
repz
or
fcoms
xchg
mov
gs
jge
sub
outsl
fcmovbe
out
rol
sbb
leave
rcrl
mov
inc
jo
repnz
cmp
das
in
aam
mov
push
in
lcall
ja
jge
jbe
repz
mov
lea
iret
dec
pop
loope
sti
leave
int
shrl
add
pop
adc
pop
mov
dec
or
shll
and
rcrl
adc
cmp
lock
pop
dec
outsl
xchg
fnstenv
mov
pop
outsb
arpl
lods
inc
inc
movsb
xchg
dec
cmp
jl
sahf
xor
aas
mov
js
dec
pop
cmc
icebp
add
adc
sub
and
hlt
mov
add
mov
iret
xchg
adc
or
mov
fmul
xor
sbb
sub
sbb
mov
std
repz
cltd
aaa
add
sub
dec
inc
mov
jmp
xchg
repz
pop
jmp
add
mov
gs
jne
adc
adc
notl
adc
push
dec
pop
sub
je
sub
lods
mov
push
xchg
js
mov
stos
loopne
jl
sahf
sub
fiaddl
pushf
dec
push
push
in
sbb
xchg
adcb
pop
cmp
fstpt
test
cmp
lock
mov
lret
push
decl
jecxz
mov
fidivl
push
test
iret
mov
subl
or
aaa
mov
ret
insl
pop
fiadds
insl
inc
mov
sti
and
fcoml
xchg
add
test
cmp
rclb
icebp
repz
push
or
mov
adc
cltd
jg
dec
pusha
pop
lret
mov
and
push
call
pop
ret
or
sub
pop
inc
mov
adc
lret
sub
or
pusha
and
inc
cmpsb
popa
loop
stos
mov
xchg
xchg
mov
fsubl
mov
xchg
and
xchg
xor
sarb
int
repz
cli
push
aaa
into
inc
sbb
int3
insb
inc
in
adc
inc
les
repnz
pop
mov
aas
outsb
scas
insl
sub
dec
test
lcall
mov
pop
fiaddl
in
ss
int
dec
inc
repz
and
sarb
sbb
inc
cmp
mov
add
jle
push
cmp
andb
popf
mov
stos
enter
push
jae
pop
mov
xor
shll
dec
mov
mov
adcl
xor
jae
mov
daa
push
sub
std
jns
pop
jb
dec
lret
ret
pop
daa
dec
cmp
les
mov
sbb
shll
daa
xchg
dec
dec
lea
psrlq
cmp
ljmp
insl
fdivrl
insb
les
adc
sbb
adc
sbb
cld
cli
pushf
das
adc
and
pop
adc
cmp
mov
add
cs
jns
push
mov
dec
out
push
sbbb
or
movsl
jl
lock
scas
js
inc
cmp
ss
sbb
pop
lcall
mov
push
mov
scas
sbb
movsb
mov
hlt
xor
mov
mov
fldcw
xchg
adc
rclb
outsb
leave
push
adc
out
cwtl
jne
rol
jnp
mov
xchg
jns
xor
dec
pushl
mov
shll
mov
mov
and
add
or
cmc
insb
jbe
lds
or
lret
aam
les
mov
and
loopne
daa
mov
in
dec
pavgw
push
in
in
pop
sahf
cli
arpl
pop
lret
push
inc
rclb
in
sbb
insb
fistpll
mov
jb
dec
inc
xchg
dec
in
cmpsb
movsb
mov
cmp
jmp
sti
mov
sbb
dec
ffreep
cs
outsb
sub
and
or
popa
movsb
pop
cmp
sub
pop
jno
push
jns
pop
add
lea
xchg
out
mov
fistpl
push
cli
or
inc
pop
fadds
popf
push
xor
out
fsubs
xor
and
call
xlat
test
arpl
jae
inc
sub
xchg
loope
enter
dec
adc
push
stos
pop
push
js
fisubrl
leave
pop
jmp
dec
mov
mov
scas
cs
shlb
clc
push
test
xchg
sbb
mov
push
in
addl
jg
pop
shrl
jbe
inc
cmp
in
jl
push
outsb
sbb
lret
pop
mov
dec
mov
rcl
mov
jp
adc
jae
push
rcrb
mov
add
add
jecxz
jbe
clc
pusha
mov
mov
in
jge
in
ficoms
xchg
jge
aas
arpl
inc
out
xor
pop
std
adc
orl
cwtl
add
mov
adc
mov
bound
nop/reserved
xchg
pop
popf
insl
dec
mov
iret
nop
adc
inc
jns
enter
fucomp
arpl
fmuls
xchg
inc
push
inc
arpl
cmp
inc
cwtl
dec
cmp
pop
lods
xchg
mov
lods
out
xor
je
or
adc
sbb
arpl
jl
xlat
gs
adc
das
add
lods
mov
roll
and
fwait
and
mov
adc
push
insl
sbb
sti
clc
cmp
xor
hlt
lock
inc
outsb
xor
bound
mov
sti
cs
outsl
lea
jae
pop
out
mov
ret
mov
xchg
outsb
mov
jb
pop
sub
pop
lock
das
aad
cwtl
test
repnz
mov
popf
jbe
dec
mov
push
movsl
vpcmpeqb
adc
imul
push
ret
mov
mov
popa
insb
sub
mov
mov
in
ds
xchg
imul
adc
mov
test
add
pop
aam
jmp
mov
testl
xor
ret
imul
outsl
fnstcw
pop
push
andl
pop
movsl
popa
lret
fbstp
add
insb
jbe
fstpt
int3
xor
sub
ret
bound
popf
mov
movsl
pop
test
sahf
add
or
mov
test
sub
lea
cmp
sahf
mov
test
add
cmp
dec
cmpsb
push
mov
sub
push
sub
daa
clc
dec
int
jnp
sbb
push
adc
inc
ja
dec
imul
sub
inc
std
cmp
jnp
add
jno
mov
pop
xchg
sub
mov
rcrb
loop
sub
pop
or
shlb
inc
mov
add
fs
stc
lahf
lea
push
in
inc
and
push
mov
outsl
push
mov
arpl
rcr
in
add
mov
jge
cmp
sub
mov
outsl
jnp
sbb
sub
mov
insb
lea
and
pop
jl
out
cmpsl
lods
xlat
cmp
fbstp
pop
jae
dec
mov
push
nop
addr16
push
pop
pop
cmc
dec
mov
out
cmpsl
xchg
cmp
nop
jbe
sub
out
ret
pop
fistps
hlt
dec
mov
lds
push
ds
and
mov
ljmp
adc
mov
or
pusha
cwtl
xchg
cs
je
add
adc
dec
pop
fidivs
xor
sbb
pop
mov
pop
sub
mov
hlt
mov
ret
pop
sbb
add
add
push
or
aaa
enter
mov
fwait
lds
xchg
sub
xlat
insb
mov
fidivs
push
mov
mov
gs
adc
push
aaa
lods
iret
imul
xchg
xor
sbb
lret
iret
lock
lcall
in
jne
pop
and
dec
push
fisttpll
je
loopne
mov
xchg
movsl
dec
insb
jg
pop
lret
jle
sbb
push
inc
push
adc
jbe
in
xor
xchg
push
sub
add
sbb
add
mov
mov
in
fsubl
int
xor
lcall
mov
leave
inc
push
lret
sahf
xchg
pop
int
adc
loope
out
xchg
ljmp
sbb
lea
das
in
cmpsl
stos
ljmp
pushf
xor
or
push
leave
in
jecxz
shrb
mov
xor
jp
mov
int3
and
and
jnp
stos
aas
dec
mov
fadds
repnz
push
pop
loope
adc
jmp
dec
int3
jo
xor
push
push
xchg
jb
fsubr
mov
ret
movsb
xchg
mov
sub
or
inc
imul
mov
xchg
je
lret
dec
mov
mov
push
adc
and
xchg
sbb
cmp
jg
iret
jbe
inc
out
into
in
test
dec
dec
pop
xor
cmp
int3
lret
sub
movsb
jecxz
jg
out
push
cmp
mov
jge
jecxz
cmp
add
xchg
lea
sub
mov
cmp
sbb
arpl
inc
jmp
xchg
fxch
test
mov
sbbb
jns
xor
mov
xchg
push
pop
xchg
repnz
jno
xor
lds
dec
mov
xchg
mov
cld
jno
ja
pop
xchg
test
mov
insb
call
popf
jns
add
lret
jbe
js
cltd
add
movb
or
mov
mov
lcall
cwtl
pop
push
lds
cmpl
jbe
push
rcrl
or
cwtl
repz
and
insb
mov
or
cs
adc
lret
dec
add
iret
jbe
mov
or
add
push
pop
and
pop
xchg
mov
in
cmovns
lods
and
or
outsb
inc
mov
mov
sbb
cmp
cld
mov
xchg
xor
cmp
pop
pop
leave
xchg
mov
push
mov
mov
add
insl
sbb
jbe
cltd
adc
mov
xor
mov
xchg
loop
xchg
lock
inc
shr
dec
xlat
pop
jb
sub
fsubrs
out
lcall
xchg
and
push
jmp
and
add
xchg
cmp
andb
mov
lds
ret
and
pusha
mov
sarb
cmp
jmp
sub
shl
inc
cmpsl
and
push
xchg
jle
ret
out
data16
add
cmc
cmp
in
stos
push
cwtl
pop
xchg
ret
pop
dec
btc
loop
pop
jmp
scas
in
imul
ret
insb
dec
rclb
sti
xorb
pushf
not
std
out
cmp
lret
adc
cmp
or
push
jne
inc
arpl
mov
pop
jg
xchg
pop
and
out
xchg
stos
xchg
and
mov
sub
hlt
dec
adc
sbbl
jnp
mov
es
rclb
sbb
scas
scas
xchg
push
push
push
orb
jmp
mov
stc
or
mov
sbb
insb
push
out
push
sbb
ret
movsl
sub
sarl
shl
cli
das
or
popa
sbb
cmp
lret
sub
call
pop
mov
adc
adc
aad
orb
lods
enter
cli
cmp
jl
insb
lahf
cmp
mov
jb
and
pop
fsubrl
dec
shl
jecxz
loopne
mov
andl
jae
out
dec
xchg
add
cld
pop
lods
leave
or
xor
add
sbbb
adc
push
loope
xchg
ljmp
ja
jle
andb
mov
sbb
mov
shlb
movsl
in
sub
aaa
xchg
add
adc
jmp
cmp
push
and
aas
loope
mov
inc
mov
idivb
imul
fdivs
imul
ss
xchg
or
pop
mov
cmpl
push
pop
adc
xchg
int3
pop
push
add
sub
cmp
nop
or
sub
gs
sbb
lock
jne
stos
das
out
fstl
sub
bound
lahf
jg
inc
jnp
jecxz
arpl
xchg
cmpsl
cmp
ss
sbb
inc
cmpl
mov
les
add
and
push
mov
push
fmuls
mov
jb
in
xor
out
mov
push
xchg
push
stos
inc
xchg
inc
fisubl
inc
pop
fidivs
inc
push
out
mov
cld
or
lea
int
sbb
imul
popf
sub
ss
cli
cmp
in
add
or
jmp
loope
xchg
adc
imul
outsl
mov
dec
enter
xor
xchg
jnp
cmc
cmp
lods
sub
add
push
or
mov
das
jecxz
stc
mov
mov
daa
aad
sub
mov
popa
mov
lret
imul
mov
inc
xlat
incb
sub
mov
mov
xchg
test
add
push
cmp
icebp
sub
sub
rol
cmp
fisubl
fisubrs
imul
push
jb
scas
repnz
ret
xchg
std
fisubrs
pop
xor
mov
cmc
and
cmpsb
std
jnp
adc
es
rclb
test
jge
test
mov
lods
add
lds
gs
popa
xor
jae
lret
push
in
pop
je
arpl
push
mov
mov
push
lds
ss
cmpsb
adc
popa
inc
loopne
clc
gs
cmpsb
jb
push
jno
sub
into
pop
test
pop
inc
fbld
adc
cli
pop
jo
lret
aad
dec
outsl
pop
and
aad
ds
mov
shll
mov
filds
test
xchg
data16
das
ja
xorb
ja
push
js
xorl
dec
loop
std
sbb
fisttpll
or
mov
js
lret
pop
sbb
popf
data16
push
sbb
dec
ja
fstpl
sahf
jmp
movsl
mov
scas
xchg
cwtl
xor
dec
loopne
jmp
and
divb
leave
daa
inc
jle
and
xchg
aam
cmp
enter
ja
push
cmpsl
rcr
insb
inc
inc
xlat
outsb
jae
outsl
add
adc
inc
lret
cmp
jmp
mov
lret
dec
sub
inc
es
push
lret
mov
aas
test
mov
pop
or
aas
mov
xchg
ret
push
test
fildl
fsts
ja
sahf
dec
aaa
fs
xchg
sahf
lods
mov
hlt
imul
mov
jne
rcl
ja
xchg
sub
imul
dec
push
lods
or
imul
imul
cmp
adc
dec
fdivrl
stos
std
fucomip
int3
test
inc
mov
inc
call
mov
outsl
add
fadds
and
clc
lods
jmp
jb
xor
mov
mov
fdivl
xor
imul
ficomps
cmp
and
pop
mov
xchg
rcr
jae
jge
jbe
sbb
add
cmp
and
dec
cli
cmp
jmp
and
loop
inc
jo
jle
sub
inc
js
cmpsb
and
add
mov
lds
mov
sub
pmuludq
mov
shl
mov
sub
or
in
rol
inc
adc
stos
test
ret
cs
xor
fstpl
insl
lods
pushf
sub
mov
or
jne
sub
dec
xor
push
ja
adc
jle
xor
dec
mov
pop
call
iret
call
fisubrl
push
test
data16
aad
test
cmp
aas
push
or
adc
mov
es
xchg
test
cmpsb
es
xor
dec
fwait
cltd
pop
movsl
dec
sub
xchg
mov
dec
shrl
push
mov
inc
lcall
out
test
cmp
sbbb
movsb
es
adc
test
out
push
mov
mov
inc
shlb
ret
pop
adc
ret
jecxz
mov
js
ret
cld
cmpsl
mov
mov
pop
pop
and
divl
xor
fimuls
xor
repz
das
les
ret
cmc
pusha
js
iret
xchg
xchg
or
fsubr
dec
mov
mov
lds
cmp
cmpsl
int
aam
int
cmp
fsubr
in
push
shlb
sarl
or
stos
mov
xchg
test
dec
sub
pop
push
jecxz
mov
xor
in
mov
lahf
imul
and
fucom
int3
push
adc
cmp
sub
xchg
mov
ss
cmp
lret
fistpll
adc
loopne
shlb
dec
jo
sub
xlat
sbb
stos
rorb
in
mov
push
mov
push
xor
xchg
aam
pop
fsubr
mov
mov
mov
xchg
dec
push
frstor
inc
fs
mov
into
push
jle
test
pushf
mov
and
divb
dec
mov
pop
mov
inc
mov
jbe
lret
pop
inc
push
in
les
mull
iret
lds
jle
aam
pop
pop
and
dec
bnd
xchg
push
sbb
movsb
cmp
dec
je
push
lcall
mov
decl
xlat
xchg
shlb
clc
mov
and
sbb
mov
insl
or
xor
in
xor
lock
inc
xor
jbe
pop
loopne
cwtl
push
lret
dec
pop
xor
mov
js
add
outsl
dec
fs
addr16
lret
add
clc
add
dec
out
xchg
mov
int3
sub
lds
xor
clc
out
add
fsubl
adc
hlt
mov
testb
push
test
nop
fistl
dec
mov
dec
fs
rclb
ljmp
sbb
inc
push
popf
insb
xor
cmpsl
pop
call
rcrl
repz
sub
xchg
xor
dec
pop
notl
movsl
js
dec
pop
lds
xor
js
imul
sahf
xor
pop
adc
cmp
out
ret
or
jecxz
or
xchg
cmp
aas
add
xchg
adc
es
push
hlt
fimull
xchg
add
sub
jg
iret
sub
daa
inc
sbb
mov
imul
data16
fwait
sti
push
fwait
dec
stc
jns
dec
shrl
mov
cwtl
lret
jne
push
mov
sbb
andl
jnp
and
pop
cmp
inc
jmp
aad
push
inc
add
shlb
imul
jmp
in
push
out
and
or
lahf
nop
aad
or
repnz
ds
dec
mov
xor
xchg
scas
inc
push
mov
call
push
dec
lods
ss
enter
inc
jg
rcll
js
out
jbe
shlb
in
and
sbb
js
xchg
xchg
mov
cli
adc
neg
and
sbb
pop
sub
push
mov
xchg
bound
dec
movsb
pushf
mov
xor
inc
mov
into
lahf
xor
sbb
das
shl
clc
sbb
movsl
add
xor
adc
test
mov
xor
in
sub
sub
sbb
insl
pop
dec
mov
mov
and
inc
adc
inc
clc
push
std
mov
cmc
adc
aad
lret
and
out
aas
out
sbbb
out
xchg
xor
jae
ja
testb
dec
adc
dec
jg
fwait
xor
mov
divb
or
arpl
daa
adc
add
insb
xor
stc
and
mov
or
xlat
xchg
mov
aam
mov
cmpsl
xor
inc
jo
sti
aam
sub
mov
push
je
lea
mov
pop
jns
dec
sub
insb
insb
in
shrl
push
testb
roll
cwtl
sub
shll
repz
xor
in
dec
inc
test
aaa
and
push
push
pop
cmp
and
int3
jmp
jo
pop
in
mov
cmp
adc
sti
repnz
xchg
mov
repz
bswap
loop
lods
inc
inc
dec
push
jmp
lods
std
inc
cs
pushf
jno
cld
cmp
movsb
jns
add
lods
cmp
xchg
xchg
enter
add
pop
fsubs
xor
jns
fisubrl
dec
adc
mov
mov
dec
mov
jg
repz
stos
inc
shlb
sahf
xor
push
call
movsb
stos
outsl
xor
outsb
mov
mov
jno
insb
mov
inc
test
pop
mov
cmp
push
jle
aas
mov
push
mov
rorl
adc
movsl
mov
fldcw
cmp
lea
push
add
xchg
outsl
negl
push
add
enterw
push
insb
mov
fnsave
mov
mov
cmpsl
sbb
ljmp
cmp
into
cmp
adc
add
xor
adc
inc
and
lahf
test
mov
aad
and
mov
pop
test
jle
push
jo
arpl
adc
and
push
imul
mov
jnp
fsub
fsubr
adc
xchg
xor
ret
shr
jg
les
leave
cmc
mov
es
push
xchg
dec
sar
popa
sbb
pop
xchg
sub
arpl
or
adc
fdivl
jmp
sbb
fadd
movsb
fwait
mov
lahf
daa
xor
sbb
pop
dec
inc
jne
pusha
ja
xchg
cmp
out
cmp
sub
or
add
stc
stos
arpl
popf
lods
mov
or
shrb
inc
push
sbb
or
add
jecxz
inc
test
adc
ror
sub
sahf
fdivrs
jns
scas
dec
mov
jg
fidivrs
adc
or
stos
inc
imul
xchg
dec
dec
je
xor
sub
in
adc
sbb
push
push
and
out
mov
push
mov
pop
repnz
sahf
cmpsl
jb
mov
add
adc
mov
mov
bound
pop
out
cmp
rcrb
ds
adc
inc
add
stc
mov
pop
mov
push
mov
jmp
idiv
fstpt
fwait
out
xchg
mov
hlt
jns
jge
xchg
scas
or
aad
rcrb
add
out
inc
push
xor
mov
mov
mov
mov
xor
les
jae
daa
mov
and
les
mov
and
sub
stos
sub
sbb
fisubrs
cmp
jmp
dec
insl
sti
inc
sbb
sub
daa
roll
sub
ret
fistl
mov
inc
movl
jno
adc
inc
lahf
mov
js
mov
outsb
cmp
lahf
push
popa
test
ret
mov
int
mov
lods
outsl
leave
and
rcl
out
adc
repz
lods
test
inc
sbb
jne
lea
cmpsb
stos
cmpsb
pop
xchg
insl
mov
add
push
rcl
mov
loop
gs
in
in
push
jge
scas
jno
stc
add
adcl
pop
jmp
or
mov
adc
mov
out
cmp
push
out
ret
sub
pop
dec
mov
xor
outsl
out
adc
je
lds
shrb
xchg
mov
mov
icebp
and
sbb
jnp
add
cmp
rclb
mov
xchg
aas
cmp
das
sub
pop
and
insl
xchg
shll
cmp
rorb
loop
cmp
xlat
das
xchg
cs
sbb
mov
lods
mov
scas
fimuls
jns
or
sub
push
addb
mov
icebp
or
xor
dec
cmp
jle
fs
cwtl
push
negl
imul
fisubl
les
jbe
xchg
sub
ret
sbb
sub
xor
outsb
and
push
push
inc
pop
mov
addr16
repnz
lds
pop
jae
mov
scas
nop
dec
adc
cmp
js
fstpt
lahf
push
dec
mov
xlat
mov
imul
push
push
lret
cmp
aas
or
icebp
and
outsl
pop
sti
mov
and
iret
shr
icebp
xlat
pop
sahf
or
data16
pushfw
mov
insl
or
sahf
mov
mov
dec
xchg
cmp
aam
push
and
test
lret
push
out
mov
outsb
adcb
sti
xchg
push
outsl
xor
arpl
pop
jecxz
testl
stos
xchg
mov
je
les
inc
popa
es
test
das
mov
pusha
pop
or
xchg
push
popf
movsl
or
enter
pop
outsl
mov
aaa
inc
inc
fistpl
cld
xchg
aaa
xchg
mov
sub
insb
xor
fisttpl
inc
and
not
sub
mov
mov
cmp
fcoms
lea
ja
lds
or
pop
mulb
pop
test
shll
dec
lahf
rorb
gs
add
pop
push
cmpsl
jmp
inc
in
adc
inc
dec
aam
inc
push
arpl
push
enter
aaa
jne
jecxz
push
sub
add
jg
clc
jmp
xorl
stos
mov
add
pusha
jnp
adc
loop
into
fwait
cli
in
nop
mov
mov
mov
mov
aas
dec
fadd
pop
or
jecxz
mov
xabort
bound
sub
dec
mov
scas
je
mov
mov
jge
mov
out
add
nop
pop
dec
fcmovnb
lcall
pop
scas
divb
ss
andl
lcall
adc
push
int3
sahf
popa
lret
xchg
sbb
repz
jne
mov
call
jecxz
scas
or
in
addr16
jp
push
leave
je
inc
icebp
xchg
std
xchg
pusha
imul
lea
sbb
adc
andl
mov
rclb
mov
jae
xor
mov
xchg
xchg
sub
add
mov
pusha
and
add
mov
pop
pop
loop
sti
and
sub
push
test
cld
sti
pop
mov
decb
les
and
and
lret
bound
movsl
and
sub
stc
or
int3
dec
xor
call
jae
loop
shl
mov
pop
pcmpeqd
cmp
repnz
xchg
push
aad
or
out
mov
sub
aaa
dec
js
add
fs
mov
adc
push
pop
outsb
test
dec
outsl
stos
mov
pop
inc
pop
push
xchg
mov
and
or
movsl
lock
imul
in
sub
jecxz
sub
and
or
inc
adc
inc
dec
xchg
shll
dec
stc
ret
rolb
mov
insl
shrl
ret
adc
mov
pushw
iret
aaa
shrb
pop
sbb
loopne
iret
stos
aad
push
outsb
xchg
in
sbb
mov
pop
cmp
pop
sub
rorl
pop
xorl
push
pop
imul
add
jae
fisubs
adc
push
adc
sarl
mov
inc
and
cld
cmp
push
ss
daa
jl
iret
mov
sub
movsb
rcll
cli
or
scas
pop
or
cmp
dec
push
adc
icebp
lods
mov
mov
jmp
ss
fiadds
cld
mov
or
adc
or
sahf
dec
xchg
xchg
sbb
das
idivl
inc
stos
mov
iret
fs
mov
xchg
scas
or
insb
loop
popf
daa
jbe
mov
rcll
and
lea
or
in
adc
iret
xchg
ret
sub
cli
lret
push
sub
rorb
jge
gs
mov
mov
xor
cltd
mov
jnp
mov
ret
fistpll
popf
popf
in
push
and
lea
data16
in
add
cmp
ret
adc
int3
lock
mov
ja
or
das
xchg
push
mov
fdivs
fs
mov
or
cmp
xchg
cmp
mov
or
popf
jb
or
cmp
std
nop
mov
fcoms
or
mov
pop
mov
out
iret
add
bnd
lods
test
add
pop
lds
or
ja
mov
push
adc
xor
fdivs
in
push
sti
pop
jmp
cltd
loopne
je
hlt
test
inc
pop
addr16
add
push
inc
ret
loope
imul
inc
mov
mov
mov
sub
aam
mov
push
shld
sub
sbb
lret
imul
int3
cld
std
pop
xor
decb
sbb
pop
mov
mov
sub
dec
out
or
clc
sti
repz
pop
and
in
icebp
leave
lods
cld
ret
out
andb
jnp
adc
and
mov
jae
mov
popa
lret
je
mov
xchg
lahf
dec
mov
fsubr
push
rcrl
int
pop
clc
adcl
push
addl
cmp
mov
cmpsl
mov
ret
jp
jl
inc
ret
mov
pusha
pop
decb
cmp
jmp
inc
jo
js
out
popf
sarb
stc
in
push
loop
fsubs
ror
jb
out
mov
inc
daa
ret
mov
push
mov
pop
jmp
xor
adc
lret
repz
adc
in
stc
cmpsb
hlt
and
xchg
and
popl
cwtl
add
mov
mov
add
loope
cmpsl
jmp
xor
push
cwtl
data16
inc
xlat
pop
mov
sarb
pop
call
rclb
adc
jge
mov
bound
lret
adc
insl
mov
xchg
fstps
add
out
std
xchg
inc
or
fbstp
mov
xor
xor
mov
clc
cmp
adc
xchg
inc
fcoml
xor
push
mull
int3
mov
adcb
insb
xchg
xor
sub
gs
mov
mov
jno
mov
mov
mov
or
fistl
mov
fldt
idiv
or
test
leave
inc
dec
mov
hlt
xor
scas
orl
xchg
sub
pop
pop
xchg
jmp
cmp
dec
mov
push
out
cmc
xchg
sub
cs
dec
hlt
mov
stc
jnp
lock
fidivrs
lahf
movsb
adc
adc
cmp
xor
pop
ds
mov
add
jno
dec
lods
ret
into
sbb
roll
cltd
in
add
pop
push
pop
cwtl
lds
sub
mov
iret
xchg
mov
xor
pusha
jmp
fisttps
push
sbb
or
sahf
inc
mov
popf
ret
sub
lods
sbb
mov
into
stos
mov
mov
inc
outsl
sbb
sti
addl
jecxz
dec
mov
stc
add
jle
and
mov
jo
mov
dec
pusha
clc
jb
pop
in
xchg
push
and
sti
cmp
rcrb
xor
or
pop
fdivs
cltd
in
inc
add
test
xchg
test
sti
pop
dec
lods
clc
nop
or
ds
push
popa
adc
xchg
and
push
inc
xchg
jbe
cmpsb
out
inc
sbb
push
repz
jae
das
sbb
sar
cmp
or
xchg
dec
pop
lock
jecxz
adc
cmp
push
fs
test
jecxz
or
ficomps
mov
add
js
imul
sahf
sub
xlat
jg
cmpsb
push
call
dec
cmc
pop
mov
cmp
push
pop
jmp
aaa
enter
fisttps
or
dec
sub
inc
jle
ret
sub
in
in
add
pop
sub
inc
test
jae
insl
jb
jecxz
push
imul
xor
movsb
xchg
xchg
dec
xlat
mov
scas
inc
test
lret
int3
bound
loop
clts
cmc
xchg
icebp
xor
iret
popa
adc
xor
or
movsl
jecxz
inc
jmp
add
fidivrl
test
xchg
push
dec
push
fistps
jge
push
scas
push
lret
push
mov
iret
jg
repz
adc
push
jecxz
push
adc
cmp
sub
jne
push
lret
lret
cmp
jo
xchg
sub
cmpsl
mov
adc
cmp
xor
sub
mov
popa
clc
lret
push
mov
rclb
pop
or
into
enter
inc
xchg
jo
rorl
adc
dec
push
dec
xchg
push
cmp
fisttpll
adc
outsb
test
and
pop
rolb
push
push
fnsave
pop
mov
cltd
sti
push
mov
dec
in
outsl
jnp
in
or
inc
lea
mov
mov
lds
push
iret
pop
cli
add
icebp
cmp
pop
mov
fildl
into
mov
stos
mov
popf
mov
push
push
daa
call
add
lret
or
fidivs
add
adc
sbb
enter
scas
mov
xchg
add
pop
int
xor
push
jo
test
or
jp
pop
add
sbb
add
roll
int3
add
call
push
outsl
push
fmuls
mov
cld
adc
cmp
and
cwtl
xor
sbb
cmpsl
or
cli
or
aaa
int3
dec
sub
sbb
shll
mov
push
loope
or
pop
xor
bound
xlat
sbb
jb
fs
jle
test
es
aad
mov
and
neg
movsb
cmp
fsts
mov
add
cli
call
or
mov
sub
int3
sub
or
dec
cmp
jecxz
rcll
add
mov
xor
dec
add
push
sub
pop
movsl
lret
popa
and
ficomps
subb
icebp
mov
in
out
vmovntpd
das
cmp
sbb
dec
mov
xchg
cmpsl
xorb
test
jg
xor
lahf
dec
fs
stc
push
in
mov
and
xorb
pop
push
out
mov
jmp
or
sbb
pop
pushf
sub
xor
inc
or
add
inc
mov
imulb
out
js
jno
sub
adc
orb
mov
cwtl
daa
mov
divl
cmp
adc
cmpsb
insb
jb
loopne
shlb
mov
add
xor
inc
or
mov
pop
orl
sbb
xchg
lds
cmp
inc
mov
cmp
xor
popa
jo
dec
mov
out
adc
scas
ret
mov
iret
jne
sbbb
xchg
push
je
dec
shlb
sbb
scas
lcall
ret
dec
adc
push
xlat
xchg
int3
lret
xor
add
cmpsl
shrl
adc
repz
loop
mov
adc
out
mov
bnd
movsb
dec
push
inc
xor
loope
fdivl
std
cmp
das
pop
push
in
dec
pop
idivb
leave
insb
add
pop
jp
enter
in
lahf
sbb
sbbb
pop
and
roll
dec
lea
scas
adc
push
cmp
shrb
shll
jmp
jecxz
imul
mov
int3
and
insl
fwait
scas
xchg
ficoms
dec
pop
xchg
aam
rclb
sti
sahf
push
cmc
adc
fcomp
lret
stos
inc
adc
jmp
imul
inc
mov
fstpt
jecxz
pop
rcrb
jno
jnp
lea
pop
test
iret
sbb
clc
int3
movsb
aas
cmp
cmpsl
sbb
pop
dec
jo
push
sbb
cmp
rclb
sbb
add
and
dec
sub
add
sbb
pop
mov
mov
js
stos
aad
lods
jmp
jmp
ret
cmp
imul
cld
dec
push
out
lcall
xor
imul
xorl
add
mov
add
sahf
push
xlat
xor
push
pop
xor
mov
dec
sub
lock
pushf
data16
add
push
xchg
je
dec
int
dec
cld
out
lods
or
push
imul
jae
jns
or
sub
test
nop
sahf
fucomp
iret
hlt
fnstenv
pusha
lret
sti
orl
enter
adc
push
xor
dec
mov
jl
ljmp
imul
adc
test
test
pop
push
pop
cli
cwtl
or
push
movsl
cld
pop
rclb
push
out
and
cmc
xlat
sub
xlat
mulb
adc
pop
test
push
mov
mov
lock
les
inc
pop
jbe
mov
jl
inc
cmp
adc
push
add
iret
mov
insl
mov
sbb
loop
add
cmp
jecxz
cvtps2pd
mov
or
dec
test
jl
xchg
jnp
sbb
add
int3
fidivs
dec
jno
pop
and
push
push
adc
adc
outsb
jl
inc
shlb
add
push
cmp
push
adc
in
or
inc
jle
push
out
lahf
lret
bound
sub
pop
or
push
ljmp
imul
mov
mov
or
mov
mov
shrl
mov
xchg
mov
sub
push
and
sbb
incl
insl
sub
loop
gs
cmp
adc
push
push
xor
sub
push
inc
stos
cmc
push
in
fstpl
mov
inc
fistpll
adc
jns
jle
adc
xchg
pop
mov
lods
sub
cmp
lods
out
cmp
or
or
cwtl
mov
lcall
push
int3
pop
jmp
mov
jmp
mov
cmp
loope
inc
sbb
push
adc
jbe
mov
int3
arpl
frstor
mov
stc
mov
cltd
pusha
push
sbb
dec
jb
push
mov
push
xor
or
or
outsb
inc
xor
imulb
inc
sbb
xchg
adcb
popa
inc
mov
pushf
scas
ja
sbb
stc
out
and
aas
dec
and
xchg
pop
sub
cmp
fs
decb
lods
fisubl
pop
mov
pusha
sub
gs
adc
jb
push
jne
das
imul
lods
repnz
cld
out
adc
mov
mov
sbb
mov
in
lods
lcall
testl
cltd
mov
mov
push
mov
arpl
inc
mov
es
add
repnz
mov
cld
dec
mov
imul
loope
xchg
cmp
outsl
dec
insl
add
mov
enter
and
sbb
int3
cmc
sub
repz
sub
inc
sub
sarl
lahf
fstps
mov
push
cld
adc
pop
xor
fistpl
ds
adc
adc
dec
inc
pop
fsin
shrl
xchg
mov
in
in
shrb
mov
test
push
fnsave
in
ficoms
hlt
sub
cmp
imul
or
or
lds
xchg
jle
pop
lcall
sbb
push
mov
ret
cmp
xlat
xor
inc
inc
bound
jo
push
imul
mov
popa
cmpl
bound
mov
cmp
out
cmp
push
inc
shll
lods
aas
xor
xor
out
lcall
sbb
cmpl
popa
mov
ret
jge
cltd
jo
pop
js
lret
into
test
sbb
jb,pt
jo
sbb
mov
sub
test
out
je
pusha
movsb
cmp
cmp
scas
push
mov
pop
lcall
inc
pop
dec
dec
xor
cmc
jecxz
mov
cmp
push
mov
push
sbb
xchg
push
inc
pop
fstpt
stos
notb
push
or
jge
shrb
fisubrl
addb
mov
mov
lods
lock
pop
cmc
cmp
lods
jmp
int3
mov
cld
mov
sbb
cmpsb
cmp
lock
pop
movlps
into
inc
jmp
push
fcompl
mov
mov
mov
pop
mov
fwait
mov
ret
movzbl
push
aaa
sti
cmc
jge
pop
fiadds
lea
popf
ror
mov
dec
cltd
les
addl
idivl
mov
dec
mov
enter
mov
dec
push
cmp
inc
shll
xchg
jmp
addl
fwait
lds
test
ss
ja
movsb
fidivs
push
add
xor
pop
jge
xchg
jnp
mov
mov
rcr
jmp
sub
sub
sahf
pop
xor
sbb
ret
push
int3
mov
mov
ljmp
insb
jno
mov
cli
mov
or
jp
cmp
add
add
aas
inc
push
idivb
xor
shrl
scas
fidivl
cmp
inc
pop
lods
mov
into
outsb
int
stc
lret
push
push
push
mov
push
repz
jecxz
adc
jb
notb
fwait
shl
icebp
sbb
pop
scas
and
lahf
push
cli
les
mov
int3
dec
imul
fwait
aad
inc
popf
in
add
jl
dec
pusha
adc
xor
lock
scas
adc
inc
fistpl
xor
hlt
sub
bound
or
mov
fistpll
out
mov
orl
aas
jne
orb
rclb
ret
out
mov
push
or
cmp
nop
inc
pop
or
jecxz
andl
mov
pushf
repnz
icebp
mov
or
or
int
scas
mov
jle
adc
dec
push
sbbl
dec
mov
sub
push
je
cwtl
pop
fcoms
popf
fucomi
jg
mov
sbbl
adc
icebp
call
cmp
push
add
pop
mov
dec
cmp
mov
pop
mov
roll
inc
jb
jmp
push
out
test
pop
xchg
sub
cmpsb
mov
mov
sbb
lods
rorb
insb
pusha
dec
fwait
test
xrelease
xchg
sub
cmp
test
dec
outsl
push
andb
and
shrb
inc
test
fcmovnu
daa
mov
pop
in
clc
aas
mov
add
mov
lcall
aam
xchg
stos
add
testb
rcrb
mov
mov
roll
push
add
test
icebp
and
fidivrs
and
lret
dec
fdivp
lahf
outsl
mov
enter
mov
lret
jnp
popf
pop
jmp
imul
popf
in
jb
xchg
out
js
xor
pop
mov
jl
pop
mov
add
and
adc
movsl
ja
icebp
xchg
xor
or
and
jb
aad
add
adc
ret
imul
or
mov
sbb
movsl
jp
adc
adc
lods
repnz
movsb
pop
cmpb
lret
dec
out
pusha
cmp
jge
push
imul
lock
mov
mov
clc
sub
iret
sbb
push
frstor
hlt
aad
and
test
jge
mov
movsb
xchg
das
bound
dec
fcomip
add
or
cmp
add
and
repnz
lods
and
xchg
xchg
add
and
adc
ss
loop
lods
mov
mov
mov
push
add
mov
scas
test
or
sub
sub
enter
xchg
jae
clc
push
pop
cmp
rcl
lds
or
test
outsl
xchg
notb
adc
cld
push
or
bound
push
or
sahf
imulb
ja
xchg
lock
lods
dec
movsb
pop
adc
pop
push
pushf
sub
leave
fsubs
and
mov
subb
add
cmp
stos
pop
pop
daa
cmp
mov
xor
jmp
pushf
push
mov
jo
adc
mov
fwait
popa
mov
sub
pushf
xlat
sub
scas
dec
push
pop
dec
pop
push
je
fs
out
mov
mov
aas
jae
xchg
out
lar
lea
mov
lret
xor
pop
xchg
movsl
mov
pop
outsb
pop
imul
inc
pushf
scas
test
notb
leave
push
dec
and
loop
fcomi
cmpsb
xor
popa
iret
rcl
clc
outsb
aaa
movsl
and
add
imul
push
xchg
xor
mov
test
dec
das
sbb
test
scas
jp
xor
jl
push
adc
cwtl
mov
or
dec
mulb
sub
mov
push
push
lock
das
test
or
icebp
adc
lcall
and
push
cmp
inc
xor
das
shrl
pop
enter
jb
mov
ret
shlb
clc
adc
testl
push
sub
xlat
iret
fldl
sti
xor
pop
adc
lds
clc
and
or
int
pop
popf
xor
pop
add
inc
pop
ret
out
cmp
sahf
jmp
push
xor
and
testl
cltd
cmp
jne
lcall
bound
mov
shlb
push
inc
lret
insl
xor
insl
add
jle
fs
dec
xor
rorl
aaa
and
iret
pop
lret
cli
xchg
add
out
inc
fnstsw
jno
cli
pop
leave
int3
stos
lcall
divb
dec
rclb
js
test
imul
out
scas
std
pop
xchg
in
cs
xlat
fdivrs
rolb
cmc
pushf
xor
stos
jmp
lret
cmp
fwait
push
fsub
ja
fisttpl
or
xchg
iret
xchg
clc
xchg
lea
sbb
xchg
adc
imul
add
cmp
jecxz
sbb
mov
push
or
testb
shlb
cmpsl
mov
sbb
or
mov
dec
jecxz
roll
mov
mov
cmp
jg
stos
or
sub
scas
imul
test
xor
into
xor
xchg
lods
jp
inc
lock
push
xor
push
test
fwait
testl
loop
aas
inc
test
cs
and
sub
jnp
add
mov
dec
xor
or
das
lods
dec
sbb
jns
out
pop
repz
aam
cltd
test
outsb
incl
stos
push
xlat
pushf
xor
xor
push
rolb
loopne
dec
adc
aad
cmp
dec
pop
adc
cltd
cmpsl
sbb
jle
sarl
or
or
jl
stc
push
jbe
rcrl
cmp
ret
stos
mov
sub
push
sub
or
lcall
xor
mov
xchg
out
xor
push
jl
fldt
add
pop
fnsave
sahf
xor
push
insl
add
xchg
cld
xchg
cld
mov
sbbb
movsl
aam
jle
push
jb
ljmp
mov
cltd
xor
out
jbe
pop
stos
cmp
add
push
mov
mov
inc
jp
jns
addr16
mov
icebp
cs
jno
hlt
mov
icebp
sbb
jbe
fidivrs
adc
lret
addb
mov
pop
add
lea
hlt
shrb
adc
push
mov
xchg
arpl
xchg
test
xchg
cli
aas
cs
cs
pusha
sub
movb
pop
and
sbb
jb
cmpsl
cmc
jns
and
cli
mov
cmpsl
push
sub
ss
xor
xor
mov
sti
call
mov
xchg
enter
jmp
outsl
dec
or
popa
cmp
mov
dec
imul
lock
and
mov
ljmp
mov
or
pop
xor
aaa
insb
jle
sahf
inc
lcall
cmc
lea
dec
nop
enter
sbb
lock
rcll
mov
cmp
andl
or
push
sub
sbb
outsl
pop
fcomip
mov
jp
lods
les
push
push
dec
in
jg
popa
cld
xchg
lods
pop
adcb
jne
test
push
jno
inc
les
cmc
gs
xor
cmc
leave
movaps
popa
cmp
scas
add
xor
popf
shll
add
in
sbbl
or
cmpsl
mov
xchg
inc
dec
inc
fidivrs
mov
and
ja
jo
mov
jo
mov
add
call
out
mov
xchg
mov
sbb
adc
testb
cltd
lods
addr16
es
cmovno
and
out
inc
dec
out
call
insl
inc
mov
mov
rol
stc
xor
xchg
int
js
fldcw
fwait
xor
add
or
cld
xchg
or
imul
dec
or
gs
ja
xchg
clc
pop
dec
xorl
and
sub
inc
and
enter
nop
loopne
jb
rorb
mov
sbb
cwtl
cltd
lahf
out
pusha
mov
je
sub
movsl
dec
xchg
push
ss
lcall
push
and
cwtl
stos
fists
push
lret
shlb
out
ja
fisttps
xchg
mov
xor
int
das
mov
add
sahf
loop
mov
push
jno
div
dec
cmp
push
aaa
inc
add
jns
push
call
popa
sbb
cmp
orb
sbb
sbb
jbe
test
and
test
mov
or
jg
or
outsl
mov
mov
jge
dec
pusha
cmpb
jl
addr16
push
outsl
sbb
xchg
pushf
xchg
in
shrb
pop
and
mov
mov
jbe
jg
out
ds
sbb
xor
cmp
ret
pop
pushf
xchg
sbb
push
xor
xlat
xor
cmovns
repz
sub
rcrl
mov
cmpb
jmp
sbb
jecxz
add
hlt
test
call
into
popf
and
insl
lods
jp
cmp
inc
cmp
inc
mov
out
sahf
testb
sbb
jno
shll
mov
sti
mov
into
push
mov
outsl
xchg
cmp
lods
cmp
or
push
outsl
xchg
mov
add
jecxz
shl
cli
int
fbstp
cmp
xchg
pop
xchg
aas
cmc
add
aas
inc
movsb
test
pop
push
outsl
jge
jno
dec
sub
sbb
ljmp
mov
or
in
aas
pop
call
pop
or
mov
fsubrl
enter
adc
xor
es
dec
or
test
cmp
filds
rclb
or
jbe
mul
mov
push
xor
dec
push
mov
xlat
fsubr
or
aaa
push
cmp
xor
xchg
js
or
xor
mov
bound
movsb
js
scas
sub
dec
xor
jp
sub
inc
add
sar
fsts
mov
cli
lds
mov
addr16
rcl
mov
xchg
outsb
xor
in
cmp
dec
jl
jno
push
pop
fisttpll
inc
stc
xchg
jp
das
aaa
jns
std
pop
xchg
sbb
cmpsb
cmp
mov
sbb
loop
sub
rolb
das
pop
imul
xchg
xor
rcll
fsubs
arpl
sti
xor
cmp
push
andb
sub
dec
inc
push
shl
push
enter
inc
icebp
mov
xlat
iret
mov
push
dec
loope
xchg
insb
sti
push
xlat
push
cwtl
arpl
outsb
add
mov
rcr
add
sti
xchg
imul
xchg
push
and
cmpsl
lret
mov
aam
push
xor
jne
das
repnz
dec
out
jle
add
int
lcall
pop
repnz
cmp
pop
leave
int
loop
testl
in
ret
jnp
jae
and
mov
cmp
adc
dec
mov
push
cmp
aam
rcr
jp
rcll
test
lcall
sbb
out
dec
dec
inc
lock
and
popf
ja
into
pop
mov
ljmp
bndstx
xchg
and
cld
or
xchg
add
push
adc
ret
and
and
jae
pushf
sub
fldenv
xor
fwait
jmp
xor
ds
sbb
bound
push
jno
and
xor
add
push
jmp
push
xchg
xchg
add
add
push
icebp
in
and
xchg
sub
mov
orl
push
cli
cmc
in
adc
pop
xchg
pop
sub
stos
or
ret
xor
mov
mov
cmp
repnz
lret
xchg
daa
out
sbb
dec
pop
enter
sbb
mov
insl
nop
fsts
mov
and
aam
push
cmp
sub
xor
int
cmp
sub
xchg
sbb
int3
imul
lea
dec
mov
cmp
pop
push
iret
pop
pop
cld
imul
icebp
ret
aam
cmpsb
cmp
sub
mov
adc
imul
jb
jae
sti
push
mov
or
or
mov
jae
addr16
loopne
movsb
aam
sbb
mov
in
mov
xchg
les
xchg
sub
mov
and
outsl
push
out
fidivs
or
dec
inc
popf
add
fildll
adc
sub
adc
mov
pushf
xor
and
lock
in
repz
lcall
in
add
mov
xchg
imul
aas
call
push
dec
repnz
repz
and
mov
adc
lea
or
arpl
lret
pusha
mov
ljmp
divb
frstor
jns
push
push
lds
mov
push
les
lea
lahf
mov
shr
add
cmp
gs
xorl
lock
imul
mov
sbb
mov
pop
add
pop
aad
jnp
insb
cli
stos
fwait
pushf
cli
jl
imul
ss
scas
jbe
add
push
pop
ds
jns
jecxz
pop
mov
ja
scas
mov
xor
mov
adc
inc
rorl
pop
fnstsw
xchg
nop
ret
mov
fnstenv
pop
jge
lods
add
movsb
daa
jmp
sbb
jb
jbe
sahf
scas
mov
aad
sub
rorb
es
jecxz
insl
cmp
add
jl
es
jns
push
mov
adc
fdivs
imul
cmp
outsb
xorb
leave
mov
sbb
mov
jb
jmp
sbb
inc
jmp
test
fdivp
fstpt
add
int3
pop
std
test
sub
xchg
fistpll
insl
push
jae
mov
cmp
movsb
push
rol
aaa
push
js
mov
push
scas
ss
mov
fistpll
mov
xchg
cmpsl
add
jae
enter
fildll
mov
lock
mov
daa
insl
cmp
sbb
pop
dec
cmp
negl
cmp
or
xchg
loop
pop
and
push
out
test
cmp
mov
push
and
xchg
flds
jle
mov
loop
adc
fistpll
jno
jo
shrb
jo
xchg
jl
negb
imul
fstpt
arpl
push
pop
sub
mov
rorb
mov
out
out
sarl
jecxz
loop
decl
imul
lods
mov
inc
clc
jg
scas
fcompl
cmp
aas
les
sbbl
push
push
inc
and
or
mov
fstpt
sub
cmpsb
rorb
shl
mov
xchg
cmc
rolb
insb
add
or
mov
pop
cmpb
push
movsb
aam
cmp
adc
xor
test
clc
mov
cmp
cmp
add
mov
and
and
add
xchg
cmp
xlat
aas
push
in
mov
add
sti
into
and
inc
and
mov
xchg
rcrl
scas
lods
fadds
daa
fdivrp
sarl
outsl
sbb
cmp
mov
mov
push
insb
sub
jp
xchg
jmp
loope
sub
int3
xor
jmp
insb
dec
fsubrs
fs
dec
dec
push
and
rcl
xchg
inc
in
ljmp
pop
lret
add
mov
iret
mov
sub
clc
repz
mov
outsb
loope
push
sar
fidivl
repz
cld
cmp
push
push
add
jns
lret
pop
aas
sub
lods
mov
and
inc
pop
ret
je
sbb
das
sub
movsb
clc
stos
gs
stos
fmuls
test
test
cmp
jbe
ljmp
jle
enter
arpl
push
push
out
push
push
pushf
push
cmpb
xchg
adc
xchg
jne
inc
pop
mov
lcall
jno
rcll
xor
push
cmp
push
in
push
xor
lahf
stos
pushf
xchg
data16
mov
push
add
push
jne
dec
dec
pop
sti
sarb
imul
jmp
dec
fnstenv
jmp
and
loop
scas
and
movsl
arpl
mov
std
iret
mov
inc
push
repnz
mov
rorb
mov
shlb
and
popa
adc
into
data16
ror
out
ds
call
mov
int3
push
aaa
mov
xlat
test
fistps
add
nop
jl
cmc
and
sahf
sbb
pop
mov
and
mov
mov
push
out
cld
cmp
xlat
leave
cmpsb
cmpl
add
lcall
sti
inc
sub
push
int
push
aas
sbb
pop
cwtl
mov
dec
repz
push
mov
icebp
xlat
sub
sub
mov
jb
ret
daa
xchg
sub
enter
mov
rcll
mov
pop
mov
or
lahf
xchg
sub
ss
jmp
lret
inc
push
js
pop
lret
add
movsl
mov
leave
pop
mov
es
dec
test
out
ret
jne
insl
sub
mov
addb
sahf
insb
lods
hlt
inc
cmpsb
jb
out
lods
pushw
adc
inc
add
add
into
mov
mov
mov
imul
call
sbb
or
lds
pop
sub
mov
mov
repz
jp
push
and
into
mov
xchg
fdivrs
mov
inc
pop
cltd
add
out
ror
arpl
repnz
sub
jp
in
in
dec
xchg
iret
pop
cli
stc
mov
dec
cmpsl
popf
xorl
es
repz
jae
jne
xchg
outsb
inc
nop
into
aad
popf
sbb
add
cmp
sub
mov
jp
insb
and
stos
std
add
das
adc
ljmp
jmp
xchg
xchg
sarl
cmpsl
jmp
mov
push
mov
mov
xchg
test
sbb
jb
sub
arpl
fchs
inc
inc
pusha
jae
xchg
mov
fwait
xchg
bound
imul
and
mov
mov
pop
xlat
sub
out
pop
xor
mul
jb
and
fs
test
xchg
mov
or
nop
fs
adc
jno
pop
rolb
pop
mov
fistpll
fwait
loope
xchg
movsl
and
cmp
cmp
or
mov
cmp
add
shll
mov
aam
push
mov
adc
xchg
push
sub
lcall
and
cli
popf
pop
adc
arpl
sub
out
mov
arpl
fisubrl
jecxz
jb
jae
fbstp
sbb
push
jp
or
stos
xchg
xor
xchg
jns
out
adc
std
dec
bound
inc
subb
iret
lret
or
ja
aaa
lea
mov
movsl
jmp
xchg
pop
adc
sub
xchg
mov
mov
fcmovbe
enter
hlt
in
push
je
fsubr
mov
add
hlt
mov
xchg
mov
mov
mov
out
mov
imul
cmp
mov
inc
shlb
or
xor
outsb
jl
pop
mov
and
sbb
jns
push
xor
imul
fldl
pop
fidivrl
neg
das
scas
imul
inc
cmpsb
lock
adc
xchg
hlt
movsb
leave
subl
or
cmp
pop
dec
dec
in
imul
mov
xor
mov
clc
pop
dec
sbb
in
fcomip
testl
xchg
pop
lods
fdivs
adc
mov
cmp
push
sub
sbb
sub
into
sub
imul
iret
out
adc
pusha
sbbb
and
fmuls
ja
insl
movsb
bnd
rcll
pop
sub
adc
or
pusha
test
daa
push
add
push
and
ficoms
adc
mov
stos
jp
andl
sbb
jbe
mov
cmp
mov
bound
ret
shrl
dec
mov
jno
mov
sub
repnz
sub
push
dec
shlb
mov
lahf
repnz
push
mov
inc
or
es
sub
notb
popf
pusha
adc
dec
repnz
pushw
jne
or
aaa
mov
pop
push
cwtl
adc
dec
and
add
xor
into
xchg
shrl
mov
rcrl
insb
jae
pop
call
jns
icebp
mov
xchg
jmp
mov
test
adc
pop
out
int3
dec
lcall
sbb
push
hlt
pop
inc
push
aaa
cld
int3
aaa
pop
xor
and
adc
adc
sub
frstpm(287
fidivrs
bound
jo
int
adc
adc
cwtl
sti
stos
fstps
arpl
stc
dec
mov
dec
ss
jbe
add
mov
out
fnstenv
jnp
dec
dec
test
mov
sub
mov
ljmp
jle
loope
push
lcall
cwtl
mov
adc
inc
pop
and
adc
xchg
into
gs
cmp
cmp
js
gs
cmp
leave
jbe
xchg
sub
daa
popf
mov
pop
sahf
cmpsl
loopne
jmp
push
aaa
lahf
subl
es
jbe
ljmp
dec
rorl
mov
pop
lcall
pop
fisubs
adc
inc
aad
mov
xchg
pop
out
jne
sbb
jl
imul
or
andb
jle
data16
xlat
stos
add
mov
adc
mov
mov
mov
imul
mov
xlat
sub
dec
or
cmp
mov
ss
mov
ret
sbbl
fistpl
call
xchg
jp
push
mov
mov
mov
or
cli
fincstp
fnstenv
lahf
ss
lods
loopne
push
jo
and
enter
or
into
cmp
push
and
outsl
xchg
enter
xchg
or
inc
ljmp
call
or
mov
push
leave
pop
xchg
inc
mov
xchg
and
rcll
add
call
mov
pop
stos
mov
sub
in
jo
ret
push
sub
mov
push
stos
pop
sub
pop
dec
mov
jbe
scas
pop
jecxz
mov
jmp
in
cmp
pusha
aaa
add
lret
das
outsb
rcl
sbb
jg
sbb
test
movsl
ficoml
mov
mov
in
insb
jle
mov
ret
loopne
jbe
adc
dec
jnp
cltd
cld
icebp
sbb
aaa
cmpsb
addl
inc
or
inc
decb
movsl
hlt
jecxz
inc
pop
cwtl
sub
sbb
test
in
push
dec
and
decl
adc
ret
mov
popa
pop
ss
mov
std
add
mov
loope
add
imul
mov
sbb
dec
pop
lcall
shll
sbbl
pop
imul
stos
mov
pop
push
in
sti
mov
xlat
scas
pop
xchg
scas
in
or
jmp
jno
jmp
test
data16
stos
out
xor
gs
out
cmpsb
inc
imul
stos
fimull
popf
cmp
push
cmp
bound
cmc
xchg
js
dec
stos
mov
xchg
xchg
xchg
and
jo
sub
sbb
mov
or
lods
push
adc
in
cmp
lea
out
stos
push
push
sub
adc
rorb
lea
dec
ljmp
push
fstps
dec
mov
jne
sbb
nop
pop
lock
sahf
mov
cwtl
fldenv
cmpsb
mov
xor
cs
push
sbb
popf
lods
pop
cmp
repz
push
js
insb
test
loopne
lods
sub
mov
xchg
sar
sarb
gs
data16
sub
mov
jbe
mov
cwtl
mov
xor
jmp
rcrb
dec
sbb
aas
aad
jo
xchg
vpminsw
sub
mov
mov
pushf
xor
or
rorb
lods
inc
fsubrs
and
xchg
sub
fsubr
leave
dec
sbb
jl
add
pop
fsubl
cmp
out
mov
stos
mov
test
dec
in
xlat
mov
adc
mov
int
xchg
test
mov
push
xchg
sub
mov
push
int
pop
pushl
iret
jae
ficoml
stos
or
xor
and
sub
mov
pop
nop
fs
push
scas
xor
cltd
xor
lods
or
adc
mov
nop
jecxz
push
incl
call
xchg
jecxz
cmp
in
pop
xchg
push
sub
mov
sbb
mov
sbb
mov
inc
cmc
arpl
arpl
jg
inc
inc
test
and
cld
dec
stos
shr
hlt
lret
rorb
inc
pop
or
lods
mov
lret
ss
and
lret
ss
adc
lock
xchg
add
adc
dec
adc
adc
bound
sub
push
sub
and
or
pop
cmp
sub
in
test
aas
xor
ficoml
push
shr
jg
lods
mov
inc
in
push
push
arpl
mov
xor
decl
cmp
dec
hlt
dec
pop
test
dec
mov
mov
jbe
lret
lret
jmp
or
sbb
mov
loope
sahf
shlb
cmp
jle
orb
xchg
jmp
test
repz
aad
and
sub
loopne
rclb
xchg
adc
loopne
stc
push
or
popa
adc
test
shlb
add
sbb
das
add
pop
add
es
sbb
test
xchg
adc
sub
and
push
sbb
dec
push
repnz
push
cmpb
xor
add
out
sbb
jne
shlb
outsl
push
pop
and
stos
mov
out
lcall
bound
in
xchg
es
test
sbb
je
movsb
js
xchg
jne
push
pop
pop
popf
lea
dec
and
or
pop
mov
test
sti
stos
je
sbb
stos
hlt
inc
or
or
test
jne
xchg
xor
out
ficoms
and
sub
ljmp
dec
sbb
jno
adc
clc
pop
push
in
cmp
xchg
push
mov
repnz
jbe
call
push
add
test
and
lcall
shl
stos
inc
fcmovu
loop
jns
jbe
add
jbe
adc
sbb
aas
xchg
sbbb
lods
sbb
lds
scas
dec
out
call
mov
jmp
jno,pt
mov
rcrl
fldt
xor
push
loopne
push
insl
rolb
lahf
test
xor
cmp
pop
outsl
push
or
mov
xor
and
rcrb
mov
imul
in
sbb
dec
int3
orl
pop
fbld
movsl
lock
into
outsb
add
movsl
das
adc
outsl
xchg
pop
scas
xchg
xorb
mov
cmp
xchg
int3
popa
nop
cmp
leave
sbbl
lcall
iret
das
into
dec
fdivrs
lret
push
in
cld
fsub
ret
je
sarb
add
xlat
mov
add
inc
int
sub
dec
jp
dec
es
loopne
push
and
sub
shll
mov
jne
adc
push
dec
iret
in
jbe
xchg
dec
add
mov
pop
inc
pushf
add
repz
fistpl
popf
daa
bnd
mov
push
cmp
pushf
fcomps
leave
cmp
cli
mov
pop
lock
cmp
repnz
mov
out
setle
fisubl
loopne
mov
dec
in
sub
pop
call
std
sub
subl
sti
mov
add
into
aad
ja
popf
sub
and
jp
mov
out
js
xor
loope
cmpl
mov
aas
out
mov
adc
jae
pop
push
cmpsb
jnp
stc
push
andb
and
xchg
inc
push
hlt
mov
ss
push
test
outsb
adc
bound
test
adc
outsb
jl
mov
and
out
mov
dec
or
sar
imul
jnp
imul
pop
mov
jg
push
fidivs
jns
and
or
push
mov
pop
push
out
scas
into
gs
shl
or
sub
mov
movaps
adc
rcrb
jmp
push
cli
mov
sub
xchg
sbb
stos
fwait
scas
rorl
jbe
pop
out
in
xchg
int
iret
mov
sbb
pop
in
rorl
inc
andl
int
sbb
mov
outsb
add
xor
push
dec
and
and
cmpsl
add
idiv
int
sub
clc
or
mov
adc
ds
cmpsl
jmp
fadds
jecxz
addb
xor
fdivrs
sub
and
sub
push
addr16
lcall
mov
mov
xchg
cli
fiadds
mov
in
add
mov
outsl
rcl
mov
xor
mov
xchg
cli
sub
cmp
movsl
in
inc
inc
adc
sub
and
imul
fidivl
icebp
cmpsb
repz
test
loopne
add
stc
push
sub
movsl
adc
in
loope
sarb
lahf
dec
fnstsw
xchg
sub
leave
push
jg
sub
sbb
insl
sub
mov
pop
cmp
mov
pop
repz
out
or
leave
nop
setbe
mov
cmp
sub
test
cmp
fcomip
xchg
in
cmp
pop
movsl
stos
cmp
pop
decl
inc
shlb
sub
dec
das
xchg
xor
jp
xchg
xchg
mov
hlt
in
in
inc
and
cmc
int3
aam
subb
adc
rcrb
bound
mov
arpl
jecxz
fs
jns
loopne
fyl2x
or
outsb
adc
aam
mov
mov
iret
adc
jmp
mov
rol
mov
jo
mov
andb
cmp
lcall
in
orb
xor
hlt
xchg
inc
push
inc
jo
jno
loopne
push
repz
jmp
mov
unpcklps
insl
push
mov
add
scas
cmc
mov
xor
ds
out
aad
cmpl
mov
nop
nop
lock
stos
nop
loop
mov
push
in
or
out
loope
xor
xchg
jmp
je
cmp
into
loop
xchg
dec
aam
fnstenv
mov
mov
sub
imulb
jge
push
or
stos
dec
out
dec
and
outsl
xor
loopne
mov
sub
fldt
repnz
pop
ds
sub
pop
lock
fwait
cld
push
xchg
repnz
stc
rcll
jns
aam
adc
xchg
jne
pushf
push
inc
pop
mov
inc
lods
sbb
adc
xor
xchg
decl
sub
repz
xor
jbe
jno
ret
scas
popf
cmpsl
das
into
xor
mov
daa
lods
and
stc
xchg
js
add
add
pop
cmc
out
cmp
xlat
cmc
pop
fistpll
outsb
pop
stc
stos
fidivl
ret
sbb
decb
sahf
add
fnstsw
xor
add
fstpt
pop
fwait
insl
fnstsw
ucomiss
stos
mov
adc
sub
xor
xorb
inc
fwait
popa
in
sbb
jae
pushf
add
push
sub
dec
test
sti
push
in
cmp
test
mov
xor
enter
sti
fnsave
xchg
mov
pop
xor
xlat
sub
aam
pop
outsb
in
inc
int3
loopne
xor
dec
inc
mov
cld
fidivrs
pop
push
ljmp
xor
xchg
adc
adc
pop
cmp
jb
cmp
addb
xchg
out
fstpl
jae
popa
cmc
xchg
inc
das
lahf
jg
and
rclb
repz
push
ljmp
scas
xchg
out
jge
jno
aad
call
cwtl
stos
mov
xchg
in
pop
cmp
mov
dec
mov
lret
inc
iret
fldl
mov
mov
inc
mov
fstl
pop
addr16
cli
xor
movsl
jmp
mov
jl
jne
mov
mov
imul
push
cmc
js
adc
cltd
fucomp
xchg
and
out
stc
inc
pop
pop
and
cmp
call
dec
sub
adc
dec
movsl
out
mov
lret
rcpps
test
arpl
in
dec
fcmovu
nop
lea
test
fstpt
in
out
repnz
jmp
cmp
jne
push
adc
add
lods
adc
xor
test
mov
adc
jg
push
popa
cmp
push
out
sarb
adc
repz
out
inc
sbb
imul
jne
imul
push
sub
call
add
mov
pop
mov
aad
xor
jg
leave
mov
movsl
sbb
xor
mov
xchg
jns
xchg
pop
testl
daa
xchg
fnsave
notb
pop
jae
aad
inc
cmp
inc
sbb
sbb
xchg
adc
mov
out
push
dec
sbbb
mov
insl
ja
mov
shl
icebp
popf
or
shrl
fnstcw
out
mov
ja
jns
daa
lahf
shlb
movsb
arpl
cli
cmpsl
jl
pop
scas
add
adc
dec
pop
fldt
mov
inc
mov
add
dec
rcrb
int3
andb
mov
sub
add
mov
in
or
ljmp
jle
jb
jb
or
insb
xchg
aaa
lds
int
mov
push
xchg
cwtl
pop
iret
mov
fcomps
xchg
clc
les
mov
out
mov
or
movsl
bound
xchg
sbb
mov
ss
dec
inc
mov
lret
mov
pop
lret
lock
dec
mov
sbb
rcl
push
fsubs
out
xchg
enter
movsb
scas
ret
jecxz
in
mov
mov
add
pop
xchg
sub
mov
sbb
sub
cmp
ds
jmp
jl
arpl
add
pop
idivb
loopne
mov
out
pop
sbb
bound
jp
outsl
lods
nop
dec
pop
mov
pop
pop
in
ror
mov
and
and
dec
imul
ret
push
aaa
and
lock
insl
pop
popf
decl
in
in
push
pop
cmp
mov
fstps
or
mov
cltd
push
mov
mov
and
dec
adc
push
inc
outsl
scas
clflush
daa
cmpsl
testb
rcrl
mov
xor
aaa
push
cli
pusha
cmp
push
dec
add
call
les
dec
cmpsb
mov
mov
cmp
std
mov
xor
rolb
test
mov
cmpsb
sub
shl
cltd
sbb
jae
cmpsl
mov
popa
xor
and
jl
pushf
sub
dec
testl
adc
xchg
idivb
xchg
shl
inc
and
sub
ficomps
mov
movsb
ljmp
imul
cmpb
fsubrl
punpckldq
aas
orl
ja
movsb
jg
popa
pop
xchg
popl
sbb
test
sbbb
leave
cmp
xchg
sbb
mov
sbb
in
cmpl
pop
repz
pop
pop
sahf
mov
mov
call
fwait
ds
inc
xor
enter
mov
xor
outsb
hlt
mov
jg
push
xchg
icebp
sti
arpl
loope
rorb
inc
inc
push
repnz
sub
popf
loopne
lret
lods
int
xor
cmp
nop
ds
test
movsb
xchg
fnsave
aaa
aaa
jae
out
push
jnp
leave
aad
and
or
outsl
jnp
mov
mov
adc
sahf
or
out
mov
jb
aam
mov
lods
in
pop
xor
or
icebp
xchg
mov
ret
in
push
insl
sarb
fildl
jno
test
iret
into
push
test
cmpl
mov
outsl
jmp
scas
stc
cmp
mov
punpckldq
pop
mov
ret
ret
dec
addr16
call
pop
push
test
xor
ljmp
out
mov
ja
xor
insl
pop
pminsw
std
hlt
lret
decl
jns
leave
fnstenv
or
lahf
idivb
loop
fisubl
jmp
test
push
aas
adc
add
int
lds
nop
xor
dec
xchg
in
cmp
lea
loope
in
add
das
inc
jnp
jmp
pusha
aaa
xor
or
inc
xchg
inc
gs
fsubp
dec
movl
hlt
mov
dec
sub
dec
pop
daa
stos
aas
rcr
xor
fsubrs
mov
addr16
mov
call
lret
xor
aas
push
adc
dec
xor
ljmp
mov
loope
mov
pop
xchg
jp
mov
enter
lret
pop
in
aas
pop
shlb
jne
lods
dec
inc
pop
or
add
push
das
jne
push
xlat
sti
pop
add
inc
scas
jecxz
cwtl
call
mov
iret
inc
es
xor
pop
inc
xchg
subl
pop
pop
movsb
sbb
jns
hlt
ds
adc
pop
and
pusha
mov
arpl
test
inc
pusha
jge
mov
add
mov
or
arpl
inc
shll
imul
out
rcl
aaa
inc
mov
mov
cmpsl
xlat
pop
int
jb
fstpl
std
push
jno
lret
leave
stos
ds
jns
arpl
xchg
mov
sub
adc
adc
push
push
inc
and
jecxz
xchg
inc
addr16
xchg
shrb
icebp
pop
sahf
jmp
int3
cmp
jo
xchg
das
jae
mov
push
pop
in
scas
fadd
mov
into
jmp
inc
mov
adc
in
add
dec
out
es
push
arpl
loope
lcall
lds
mov
xchg
pop
daa
or
push
or
int3
rolb
call
sbb
into
fisubrl
jae
lock
adc
mov
subb
mov
repz
cmp
out
bound
mull
repz
fsubl
cs
ds
inc
or
pusha
faddl
adc
push
jo
xor
jns
inc
std
mov
cs
fldt
cmc
jb
mov
enter
fisubl
imul
rolb
dec
xchg
xchg
das
dec
outsb
cmp
mov
test
cmp
icebp
loop
jg
mov
popf
xor
fwait
lret
adc
repz
daa
sbb
jno
add
mov
das
idivb
mov
loopne
dec
in
push
add
mov
test
and
fisubrl
rorb
testl
enter
pop
add
sub
inc
jno
xchg
xchg
cmp
sbb
insl
xor
movsl
ret
cmp
cmp
lea
and
int
cli
pop
sarl
loop
cld
loopne
jno
mov
sub
mov
push
and
jmp
in
test
push
std
scas
into
push
inc
fsubrs
jns
adc
cvtps2pd
pop
bound
push
xor
add
pop
fldl
frstor
sub
mulb
fs
fs
cs
cli
movsl
popa
scas
pop
into
movsl
ret
cmp
sbb
rcrl
fsubrp
clc
xor
sub
les
enter
dec
loop
cwtl
les
daa
dec
loop
cmp
pop
mov
shl
repz
enter
dec
jmp
xchg
mov
dec
add
cld
movsb
cltd
push
leave
sbb
into
fmulp
xor
jecxz
xor
mov
cmp
mov
dec
jo
stos
push
out
shlb
jne
mov
pop
mov
mov
add
xorb
mov
xor
mov
faddl
push
stos
or
fisubrl
data16
stos
mov
repz
and
adc
cmp
pop
fistpll
adc
lcall
pushf
inc
loopne
addr16
es
pop
dec
daa
enter
adc
xor
shrb
inc
dec
mov
inc
dec
ss
stos
inc
inc
push
sbb
fdivp
jl
ds
stos
test
pushf
scas
xchg
sbb
dec
mov
call
daa
mov
ds
into
push
sub
sub
mov
imul
mov
aaa
scas
cmp
push
out
jge
or
dec
adc
insb
das
popf
lret
mov
pop
mov
inc
mov
lea
dec
push
imul
mov
insl
xor
insb
cmp
into
mov
scas
push
sub
pop
aaa
ss
std
ss
out
mov
mov
push
ret
jae
jnp
rol
iret
lcall
scas
mov
pop
jmp
out
int
jl
sarb
push
mov
lret
push
inc
push
pop
jae
pusha
data16
dec
lods
roll
jmp
cmc
out
lods
notl
fucomi
out
sub
fcompl
mov
add
test
push
stos
jmp
pop
jne
mov
push
mov
xchg
mov
lcall
inc
inc
fidivl
xlat
fistpll
sbb
loop
fisubs
jp
jle
add
push
jae
mov
mov
inc
clc
mov
sub
pcmpeqw
mov
fs
mov
sub
push
mov
push
lea
shll
adc
sahf
iret
movsb
cmp
add
pop
in
mov
std
adc
repz
mov
xchg
sub
mov
sti
ljmp
repz
shl
dec
sbb
pop
sbb
xchg
push
sub
test
jg
jp
out
fwait
ds
xchg
sub
xor
xor
outsb
cmp
popa
jg
xchg
push
movsl
add
mov
xor
dec
sbb
dec
sti
sub
es
mov
lock
and
adc
cli
and
fdivs
jecxz
and
jb
jg
aaa
xor
adc
inc
mov
gs
rcrl
enter
insb
dec
pop
lret
xchg
bound
mov
cmpsb
inc
cs
test
pushf
sub
mov
dec
add
push
mov
les
or
sub
scas
shll
fistps
add
ja
mov
fs
adc
jb
test
lcall
pop
es
mov
shl
mov
shl
push
mov
sub
clc
inc
cmp
jo
dec
fists
test
adc
push
in
mov
sub
xor
aam
fucomip
push
fwait
rcll
dec
sbb
mov
mov
and
pop
push
inc
jno
jmp
popa
cld
int3
and
fsubr
sbbl
jge
je
jns
mov
lret
in
xor
mov
cmpl
mov
inc
gs
popa
and
add
mov
lods
jmp
push
dec
or
cmpsl
add
cltd
mov
clc
pop
adc
ljmp
xchg
mov
test
inc
incl
test
sbb
jp
cmp
jno
mov
sub
outsb
push
xchg
and
mov
out
xchg
cs
mov
pusha
test
icebp
adc
sub
push
push
and
sub
fnstsw
adc
lcall
ljmp
push
adc
add
push
or
fmuls
frndint
mov
pop
insl
dec
sarl
out
mov
fistps
sub
shl
ja
cmpsb
jl
push
scas
testl
mov
jbe
imul
cmp
ret
jbe
rcll
cmp
sbbb
jo
xchg
sbb
dec
sub
mov
out
mov
jb
xor
scas
adc
xchg
and
mov
pop
lock
xchg
sub
jl
loop
sub
ss
mov
call
and
and
mov
cltd
mov
xor
std
pusha
fsubl
test
sbb
and
push
or
gs
cmp
and
popa
orb
xchg
popf
adc
sub
mov
inc
inc
mov
add
es
bndstx
rcrl
or
jl
or
lock
xlat
dec
iret
adc
test
xor
mov
sub
xlat
pop
cmp
pop
cmp
addb
inc
fdivrl
shll
dec
pop
cmp
and
lahf
sub
shlb
fisttps
notl
lret
xchg
push
shrb
sti
sbb
push
int3
xor
leave
popa
sti
shl
xchg
daa
mov
push
mov
ja
push
fisubrs
iret
jg
add
push
test
add
push
or
push
mov
out
pop
sub
imul
add
imulb
xchg
mov
pop
sti
xchg
mov
jmp
jbe
dec
pop
jge
ss
sub
repnz
mov
test
aaa
xor
mov
fldl
push
fstpl
pop
sub
cmp
test
adc
xchg
sub
int
or
mov
inc
jo
and
lds
pop
and
fidivl
into
gs
test
dec
int3
repz
cmp
scas
push
xlat
insl
sbb
lods
push
mov
xchg
add
mov
adc
aas
movsb
sbb
std
ljmp
aas
adc
sbb
mov
xchg
jno
fsubrs
iret
sbb
out
inc
sub
dec
stos
out
jbe
aas
cltd
mov
inc
pop
arpl
ja
mov
pop
nop
mov
push
mov
and
cmp
jl
jno
iret
stc
push
jge
adc
push
cmpb
sbb
adc
push
adc
push
inc
and
or
sub
outsl
outsl
jbe
insb
add
iret
mov
int
and
inc
xchg
data16
mov
incl
stos
popf
lahf
ss
push
mov
xchg
mov
sahf
scas
clc
in
pop
arpl
push
or
in
xchg
pop
dec
add
aad
pop
jecxz
daa
ja
mov
mov
xor
xor
push
xor
fwait
inc
xlat
mov
push
pop
xchg
pop
popf
jg
jbe
xchg
dec
mov
enter
push
pop
mov
rolb
aam
js
mov
loopne
cltd
mov
int3
jecxz
pop
and
lock
sub
push
cs
fisubl
dec
aad
psubusw
mov
testl
mov
xchg
daa
sub
pop
inc
dec
scas
push
jg
leave
jecxz
mov
jecxz
dec
sbb
decb
adc
add
mov
out
inc
lods
cmp
enter
sub
or
lahf
outsl
in
sbb
cmp
loopne
aam
push
popf
cld
lea
leave
push
lods
sub
fistpl
pop
in
jmp
insl
cld
addl
lcall
stos
lret
mov
loop
mov
sahf
jae
ret
insb
notl
mov
sbb
sub
push
fisubl
into
cmpsl
std
jle
ljmp
leave
andb
xchg
testb
scas
mov
aaa
roll
or
pop
mov
aam
push
mov
mov
sahf
test
into
cld
ss
cld
fcmove
icebp
adcb
inc
mov
cld
sarb
inc
and
out
sbb
stos
arpl
lock
lret
scas
push
movsl
xor
stos
or
xlat
dec
pop
sti
push
fdivl
lahf
mov
arpl
pop
and
outsb
out
pop
mov
inc
push
adc
sub
push
adc
dec
lret
aam
fs
and
outsl
addb
cmpsb
cmp
pop
push
cmp
adc
sub
sub
cmpsl
xchg
push
xchg
push
je
sbb
popa
aaa
nop
movhps
pop
push
adc
test
leave
mov
stos
ret
mov
mov
mov
xor
sub
arpl
pop
dec
dec
lock
ja
push
cmp
sbb
lods
xchg
mov
arpl
fmul
insl
adc
enter
dec
mov
dec
mov
pop
cmp
xor
dec
add
fsubrs
pushl
xchg
pop
xchg
gs
cmc
jns
daa
sar
psubb
push
jmp
mov
mov
cmp
push
negb
sub
cld
adc
mov
xchg
sbb
mov
and
mov
arpl
pushf
sub
push
jmp
hlt
imul
aam
fmul
inc
ds
addr16
rclb
pop
cmp
dec
outsl
and
pushf
in
mov
leave
outsb
sti
lfs
enter
cmp
mov
in
repz
adc
stos
fnstenv
mov
bswap
mov
jo
lret
cmc
lret
jbe
leave
call
bound
cwtl
jo
mov
scas
addl
cwtl
outsl
sahf
mov
imul
pushf
mov
and
lea
adc
jb
add
mov
adc
cmp
aas
rolb
sub
repnz
cli
or
sub
jg
ret
pop
aad
dec
pop
jb
negl
fucomip
dec
sbb
inc
lds
xchg
outsb
rcrb
and
aaa
push
es
lods
cmpsb
stos
idivl
sbb
cmc
and
lret
push
jns
xchg
xor
mov
push
insb
cmp
sub
push
fsts
in
lret
add
inc
inc
lahf
sub
fcomps
fisubl
push
mov
jle
xchg
sbbl
mov
mov
sbb
orb
shrl
into
push
test
stos
sbb
int
inc
xchg
aas
dec
dec
test
and
mov
into
scas
push
je
inc
xchg
mov
xlat
xchg
mov
or
repz
cli
mov
xor
pop
push
xchg
shll
aas
loope
xchg
aas
inc
push
mov
cmp
sahf
loopne
push
push
add
mov
adc
sbb
repz
cmp
dec
loope
aas
lds
add
out
mov
call
inc
xchg
add
daa
pop
mov
xor
sub
or
fsubr
fs
sub
xchg
sub
push
stc
dec
fistps
negb
fisubs
sub
xor
mov
in
dec
push
montmul
cmpsb
addl
inc
pop
imul
mov
cmpsl
fcoml
paddd
rolb
fnstenv
push
jno
stos
sbb
xchg
call
loope
scas
push
aas
loop
dec
sub
stos
inc
pop
mov
mov
les
outsl
imul
scas
mov
cli
or
fmull
popf
jmp
pop
xorb
mov
jl
push
sti
or
aad
sahf
popf
pushf
pop
fwait
dec
jo
mov
pop
fimuls
js
fdivrs
pop
push
test
mov
daa
jnp
outsb
loopne
cmpsl
adc
xor
pop
popf
ret
jnp
cltd
and
sbb
cltd
inc
push
cs
cmc
mov
or
adc
cmpsl
test
xchg
adc
xchg
mov
ror
pop
push
sub
jae
pusha
addr16
cmpl
das
xchg
sti
sbbl
push
imul
leave
lret
out
rcr
aas
mov
xchg
pop
ret
hlt
cmp
mov
lea
fnsave
sarb
jmp
push
jb
loope
or
push
rcrl
sbb
bound
test
jo
sbb
add
scas
call
cmp
push
mov
jo
scas
subl
pop
dec
sub
sub
mov
das
lods
test
jae
dec
or
cmpsb
mov
mov
inc
mov
xorl
ret
loop
push
dec
loope
cld
in
cs
je
es
fstps
xchg
xlat
push
mov
jnp
mov
dec
pushf
or
lods
jbe
movsb
fwait
inc
sub
ja
xchg
jmp
test
sbb
or
sbb
out
push
fimuls
test
jmp
ds
repnz
xchg
divl
add
push
inc
jno
int
in
sbb
sbb
sbb
lods
push
mov
dec
scas
jmp
mov
jbe
mov
dec
cltd
xor
cmp
out
imul
shrl
outsl
cltd
lds
push
xchg
mov
xor
into
mov
push
rol
and
sbb
inc
dec
aas
adc
jnp
leave
pusha
mov
dec
out
addb
and
add
mov
int3
in
push
sub
imull
insl
popa
or
pushf
clc
into
sub
lret
into
lock
sbb
dec
pusha
leave
jb
inc
mov
cmp
stos
mov
sbb
mov
xchg
cmp
mov
dec
and
movsl
dec
jge
test
std
pop
cmp
sbb
dec
ficompl
cmpsl
fldenv
mov
dec
pop
lahf
xlat
jne
repz
push
imul
sbb
or
inc
jbe
cmp
jg
mov
icebp
out
cwtl
jle
push
mov
xchg
and
mov
lea
push
cmp
aas
sub
test
adc
shlb
pop
into
push
cmpsl
mov
les
mov
leave
jle
dec
mov
pop
lods
xchg
lds
ds
insb
cmp
sbb
cld
idivl
jle
push
int
mov
lret
insb
bswap
ljmp
das
cmpsb
add
jmp
sbb
inc
mov
jnp
test
dec
cli
int
inc
shlb
mov
dec
stos
jmp
je
add
sbb
testl
xchg
stos
imul
mov
movsb
inc
dec
xchg
addr16
mov
into
notb
jns
cmpsb
lock
xchg
xor
dec
imul
inc
inc
ret
cld
lret
or
gs
jecxz
pop
jnp
or
or
mov
mov
xlat
inc
gs
dec
mov
mov
iret
cmc
inc
ret
inc
dec
sbb
push
shr
adc
xchg
ljmp
sarb
inc
enter
adc
mov
loop
sbb
test
lret
sub
mov
mov
sub
rcl
insb
add
stc
mov
xor
aaa
loope
sbb
mov
xchg
insl
shll
xchg
push
push
popa
iret
jp
adc
gs
jecxz
cmpsl
aas
fmuls
pop
insb
movsb
out
mov
xor
sar
leave
xchg
sub
cmp
mov
icebp
and
lret
subb
pop
mov
and
xchg
add
jl
sbb
out
sub
inc
stos
in
gs
fistpl
push
jecxz
mov
arpl
loop
push
arpl
popa
scas
cmp
and
dec
dec
cltd
xor
push
imul
mov
int
pop
push
icebp
cli
arpl
in
pop
outsl
add
js
testb
push
adc
mov
push
cmc
sahf
inc
aaa
or
mov
jl
nop
cltd
inc
inc
cmpl
and
into
arpl
fisubrs
stos
sbb
subb
xor
call
dec
and
mov
inc
nop
push
or
dec
ds
pop
cmpsl
leave
push
out
enter
lds
je
popa
or
xchg
inc
push
lds
popa
lods
xchg
aas
mov
xchg
sub
lds
sub
fnstsw
out
test
xor
stc
popa
arpl
repz
cmp
xchg
adc
and
maxps
int
dec
int3
fstl
xchg
fadd
and
std
lahf
fxch
jb
cmp
or
fdivr
nop
or
adc
not
rorb
sahf
dec
aad
int
lods
pushf
xor
cmpsl
xor
jge
bound
dec
popa
sbb
xchg
xlat
jle
or
and
mov
ljmp
sti
push
mov
inc
cli
sbbb
mov
xor
cmc
popa
sahf
ds
pop
sbb
and
jne
addr16
movsl
fsqrt
xchg
dec
inc
movb
mov
pop
test
pop
in
cld
rorb
pop
inc
out
out
and
dec
adc
jecxz
xor
add
cmp
sbbl
sahf
pop
cmpsl
dec
fstps
mov
add
inc
out
adc
inc
adc
mov
inc
popf
into
gs
ja
imul
jp
ja
mov
add
mov
shrb
dec
sbb
xor
jge
fcoml
push
lods
clc
ret
mov
adc
rcr
std
sub
fsts
sahf
clc
inc
mov
mov
out
mov
pushf
leave
fwait
cltd
push
jmp
test
xchg
notl
sbb
imul
sub
push
mov
adc
test
xorb
add
mov
push
popl
jbe
push
int
xchg
adcb
pop
mov
mov
out
dec
lret
inc
jge
dec
leave
cmc
loop
in
pop
dec
xchg
dec
inc
pop
out
xchg
mov
or
pop
insb
xchg
scas
cltd
aad
rcr
mov
in
push
jmp
call
sbb
loopne
push
arpl
add
sti
dec
and
push
mov
mov
sub
dec
testl
testl
out
test
aas
repz
lea
fadds
jo
add
outsl
sub
or
hlt
jo
lds
sbb
or
lcall
push
xor
push
dec
mov
jg
bound
pusha
aas
lock
stos
lock
add
mov
addr16
lcall
outsl
dec
imul
xor
cmp
in
test
jge
lds
xchg
jo
out
mov
jmp
jle
pop
jl
test
nop
add
inc
pop
imul
in
ja
push
or
mov
test
xchg
andl
mov
iret
int3
jb
jns
movsb
cmp
xchg
mov
ret
cmp
sbbl
pop
pushf
int3
icebp
jle
sub
add
imul
sahf
add
xchg
inc
lods
clc
nop
out
jp
lods
cmpsb
sbb
cmp
aas
cmp
xchg
cmp
xlat
insl
push
test
ds
cs
xchg
mov
jge
ds
xchg
sub
or
stos
cwtl
clc
pushf
stos
mov
aad
pop
fwait
xchg
push
nop
push
sbb
inc
sub
cmpsb
xchg
pop
jg
jne
rcll
sub
inc
movsb
cmp
ret
xchg
aam
pushf
test
cmp
pop
pusha
loope
int
xchg
push
loopne
rorb
cwtl
das
xlat
adc
mov
add
xor
sbbb
js
push
cmpsl
pop
adc
push
mov
xchg
iret
lcall
frstor
mov
push
notl
dec
or
stos
inc
leave
fwait
sub
loope
imul
push
xchg
dec
mov
vmovshdup
das
out
dec
cmp
push
or
int
pushf
push
pop
sub
ss
iret
daa
and
dec
fistl
lds
mov
fsubrs
dec
push
movsb
rorl
push
jp
mov
sub
or
adc
sti
lods
mov
gs
inc
out
push
push
insb
fnsave
notl
out
das
inc
and
jno
lret
idivb
lods
pop
stos
lds
cmp
mov
pop
loopne
add
pop
stos
scas
stos
cmpsl
jo
js
or
pop
notl
cmpl
mov
into
stos
mov
ja
sub
and
out
mov
xor
pop
dec
dec
mov
hlt
push
inc
es
es
push
mov
data16
sub
mov
fisttpll
aam
dec
xchg
mov
xchg
inc
in
addl
or
aad
cmp
mov
sub
out
int
sbb
rolb
mov
rol
andb
and
iret
fldenv
push
fisubrs
call
mov
test
call
pop
mov
test
call
xor
dec
pop
push
ror
imul
jecxz
nop
daa
adc
in
scas
scas
lahf
adc
int
inc
mov
jae
dec
jo
cmp
lea
push
jns
dec
stc
ss
lock
jle
insb
sbb
ret
cmp
test
xlat
or
imul
nop
call
shrb
mov
icebp
hlt
mov
fnstcw
sbb
enter
daa
mov
add
sahf
clc
pop
movb
mov
add
xchg
push
and
jle
sub
cmp
in
jmp
jmp
pushf
and
insb
sub
or
lock
andl
lods
pop
sbb
sti
dec
jnp
out
movsb
cmp
cmp
or
ret
mov
loopne
inc
test
lret
inc
adc
hlt
mov
or
xchg
data16
es
ret
xchg
sub
jle
xchg
dec
gs
sbb
xchg
outsb
mov
fwait
stc
inc
adc
cmp
fadds
pop
xor
push
out
gs
push
leave
jne
cmp
out
xchg
repnz
add
or
fcompl
jle
out
xchg
jbe
dec
mov
repnz
clc
sub
iret
cmpsl
cli
inc
pusha
in
jno
add
add
jmp
xchg
push
loope
movsb
sbb
aas
mov
push
sub
mov
nop
xor
dec
mov
aad
fwait
pop
cmp
iret
mov
fsts
mov
les
loopne
jb
cmp
shll
pop
int3
dec
scas
stos
je
loop
leave
sub
inc
pop
rcrl
stos
mov
aad
jnp
push
mov
sarb
aad
xor
iret
xor
mov
push
out
enter
stos
loopne
or
xor
xchg
popf
cmp
lret
or
dec
add
jl
mov
cmp
out
out
sahf
push
fidivl
xchg
adc
xor
aam
out
or
or
cmp
mov
into
imul
cmp
mov
add
test
mov
std
scas
stc
xchg
mov
stc
inc
leave
ss
mov
cmp
loopne
adc
jge
iret
gs
clc
int
push
sahf
mov
mov
fbstp
and
adc
stc
xchg
dec
cmp
mov
fnstsw
pushf
loope
rorl
push
fwait
cmpsl
addr16
lds
movsb
add
sub
jne
push
leave
popa
jl,pt
xchg
fldt
jne
xchg
and
jg
dec
mov
sbb
pop
mov
mov
fistpll
ds
fdivr
loop
push
les
ss
dec
push
aas
xorl
cmp
pusha
adcl
jo
jmp
adc
mov
ljmp
pop
mov
or
dec
in
sub
lods
push
fs
and
test
dec
or
push
pop
push
jmp
outsb
out
jo
xchg
mov
js
mov
scas
fdiv
inc
fists
std
xchg
not
in
xchg
sbb
dec
cmpsl
call
and
dec
mov
lock
aas
ret
jg
lods
imul
sub
mov
sbb
cli
pop
in
xchg
mov
jmp
or
inc
push
testl
out
sub
mov
loop
jnp
mov
ficoml
push
into
js
xchg
rorl
lret
add
cmc
lods
mov
ret
outsl
filds
test
add
aad
gs
insl
inc
les
addr16
pop
sub
pop
sahf
mov
or
in
test
or
cmp
or
xor
out
and
mov
insl
cmc
mov
push
arpl
xchg
sub
cmp
pusha
idiv
pop
and
sbb
mov
lahf
nop
ljmp
jo
add
out
js
int
sbb
push
jmp
adcl
cmp
stos
pop
dec
ret
sbb
test
inc
pop
frstor
dec
push
inc
pushf
sub
icebp
pop
mov
jl
test
rcr
sbbl
dec
ret
mov
in
cmpl
mov
mov
hlt
jge
and
into
mov
inc
jp
jno
and
arpl
mov
xchg
test
xchg
sbb
leave
sbb
pop
dec
adc
call
xchg
dec
cs
gs
mov
pop
push
ss
mov
out
pop
push
adc
xchg
jg
push
out
lods
jmp
push
insl
jo
mov
pop
movsl
xlat
cmp
ret
mov
mov
loope
xor
and
repnz
push
xor
jge
sahf
jne
xchg
bound
push
mov
cs
repnz
adc
or
add
out
das
jbe
fimuls
scas
sub
int
pop
enter
mov
addr16
dec
fstl
jecxz
mov
shlb
adc
add
fs
xchg
test
divb
pop
inc
pop
xor
test
cwtl
test
dec
iret
movsl
jp
mov
ja
aam
ljmp
orl
scas
mov
sbb
iret
dec
xor
js
pop
push
dec
lret
cltd
mov
cwtl
dec
add
mov
sub
pop
sub
inc
push
add
aam
push
scas
jl
mov
push
ret
pusha
fwait
push
fsubl
mov
das
cmp
or
cmp
jno
outsl
sbb
mov
xchg
pusha
sub
adc
fsubrp
pop
insl
add
jmp
leave
popf
mov
iret
ljmp
test
int3
jmp
ds
fcoml
inc
fiadds
xor
ja
fsubr
lods
sub
add
dec
mov
sub
and
mov
jp
fdivrs
jnp
lret
adc
add
jnp
xchg
cs
pcmpgtd
ljmp
scas
mov
push
xlat
cs
aas
daa
arpl
sub
push
loope
dec
and
int3
arpl
ljmp
mov
jnp
in
repnz
popa
mov
jmp
call
cld
loopne
inc
imulb
push
lods
push
jo
pop
cld
nop
and
rcrb
xor
jle
fidivs
pop
cmpsl
cwtl
aaa
push
lret
movsb
xor
xchg
mov
cmc
sbb
lret
in
scas
dec
adcl
daa
outsb
xor
inc
pop
scas
ljmp
sti
sbb
enter
lcall
cld
sub
jae
in
lds
leave
mov
fdivrs
cmp
leave
and
inc
and
std
int3
xchg
jmp
popa
dec
call
pushf
cli
in
int3
fcompl
clc
or
pushf
pop
mov
dec
jp
movsl
jae
sbb
stos
jmp
mov
mov
cmp
mov
lea
or
pop
fistps
jge
stos
sahf
xor
xor
push
and
xchg
inc
fcmovu
fucomi
jg
sti
dec
jecxz
das
pop
popa
dec
and
mov
int3
arpl
rol
pop
add
and
pop
pop
int3
arpl
push
and
inc
insl
sub
or
pop
mov
and
mov
sbb
add
mov
inc
repz
popa
ds
pop
push
loop
rorl
enter
xchg
pop
mov
cmc
mov
xor
aam
rorl
ret
scas
dec
sub
and
fwait
dec
bound
into
and
pslld
mov
jge
stos
daa
xchg
fisubrl
int
xor
mov
fimull
inc
mov
xor
dec
in
test
repnz
lahf
bound
pop
xor
fwait
cs
xor
int
jno
loopne
or
jne
mov
or
pop
fnop
mov
push
pop
into
inc
and
sbb
int3
pop
rcrb
ret
rclb
js
cmp
cmp
es
imul
push
sub
imull
dec
out
jno
add
mulb
lcall
xor
addl
dec
mov
cmp
push
jp
mov
fwait
jle
xchg
mov
shl
std
cmp
or
jle
in
addb
sbb
popa
movsb
sub
mov
pop
push
or
insb
inc
lahf
pop
jae
outsl
xor
cmp
and
dec
out
arpl
pop
out
and
or
xor
xchg
ror
cmc
in
mov
xchg
dec
rol
out
mov
aad
add
mov
lea
into
sahf
cmp
xchg
sbb
mov
jp
mov
movsl
cmp
inc
out
repnz
mov
mov
pushf
adc
ret
jnp
lahf
push
push
adc
notb
fxch
mov
adc
hlt
mov
enter
push
ljmp
push
add
xor
lods
shr
aam
and
sub
mov
jp
push
cli
pop
fisttpll
push
cmpsl
add
and
push
dec
cmp
jmp
vpsubw
test
scas
popa
xorb
iret
cmovb
pop
cwtl
jl
pop
mov
pop
imulb
inc
out
mov
cltd
std
sbb
repnz
inc
test
jmp
add
and
outsb
pop
cwtl
scas
les
repz
adc
inc
int
push
pop
mov
es
addr16
push
jl
or
adc
inc
inc
add
js
pop
stos
pop
cld
jnp
pop
pop
inc
pop
jnp
xchg
stos
fmuls
adc
pushl
cwtl
xor
sahf
imul
inc
sbb
sub
sub
sub
jne
incl
inc
idivb
filds
cltd
leave
xchg
pushf
stos
enter
pop
in
jae
js
jns
bound
cmp
je
stc
nop
sub
repnz
test
stc
mov
and
or
push
int3
loopne
xchg
sub
ret
scas
mov
loopne
add
xor
cmpsl
cld
mov
test
push
lea
jnp
jo
adc
cmp
inc
mov
ds
cmp
sbb
dec
orl
mov
push
addr16
movsl
std
movsl
xchg
adc
sbb
dec
dec
adc
jb
adc
sub
daa
dec
add
sarb
fcomip
testb
adc
pop
or
imul
push
jno
sahf
mov
push
lds
inc
ljmp
mov
sub
iret
jl
dec
out
add
jno
or
xor
sub
push
jo
cmpsb
lock
xchg
push
pushf
mov
push
lret
dec
pusha
shufps
stos
mov
xchg
push
in
ficoml
pop
movsb
mov
cmc
xor
imul
shlb
push
repz
sbb
push
cs
sbbb
je
adc
xor
les
cmp
pushw
shr
sbb
fldenv
stos
rcrl
rorb
bound
rclb
jmp
jae
in
daa
cmp
insb
test
fwait
xchg
add
sti
adc
push
std
xchg
adc
adc
aaa
mov
cmp
dec
int3
pop
icebp
and
daa
out
jmp
or
aad
xchg
mov
sub
pushf
pop
lds
int
or
mov
add
pop
pop
jl
vmwrite
imul
cmp
cld
mov
je
adc
sub
sti
cmpsb
out
push
mov
pusha
nopl
mov
addr16
and
cmp
xchg
jl
inc
mov
push
push
notl
cmp
lret
xor
dec
adc
add
xor
push
mov
mov
movsl
inc
cld
sub
jnp
mov
add
shlb
mov
xchg
icebp
hlt
fdivrs
das
sbbl
jle
sub
jbe
cmc
jmp
sub
xor
dec
jecxz
lea
sbb
js
push
inc
inc
out
or
cwtl
sub
scas
xor
icebp
mov
ss
shl
push
sbbb
adc
sbb
adc
sarl
pop
xor
dec
jmp
in
insb
test
daa
sub
sbb
fimull
test
adc
sub
sub
bnd
jnp
rcll
inc
sub
stos
push
sub
xchg
mov
insl
faddl
pop
and
push
inc
aas
aad
pop
push
pop
clc
mov
pop
inc
xchg
xchg
out
cwtl
outsb
das
jae
xor
shll
pop
adc
adc
mov
gs
mov
add
mov
lret
icebp
push
andb
inc
fcompl
inc
adc
and
fwait
push
mov
mov
rol
cmpsb
cltd
and
fwait
push
sti
sti
xchg
sub
dec
add
xchg
dec
popf
push
and
dec
mov
cmpsl
imul
outsb
repnz
out
inc
add
fistpll
leave
xlat
imul
lds
inc
adc
sub
xchg
xchg
arpl
sbb
and
loope
test
lret
ficomps
dec
mov
xor
xchg
sahf
in
enter
cmp
fcoms
outsl
daa
add
push
or
jb
scas
std
daa
push
add
decb
andb
lea
testl
jge
push
cmpsl
cmp
lret
sahf
cmpsb
sti
nop
rcrb
shrl
adc
sub
xchg
lea
psadbw
or
lret
orb
shl
fldt
ds
cmp
push
mov
nop
adc
fildll
hlt
out
mov
jbe
sub
push
popf
pop
dec
or
jno
sbb
scas
or
adc
stos
xchg
or
mov
pushf
sub
mov
mov
les
push
mov
sbb
cltd
jae
or
inc
cmc
add
jb
popf
leave
mov
xchg
iret
mov
shr
std
pop
loope
add
mov
sbb
stos
mov
dec
xchg
push
mov
fdivl
push
inc
mull
notl
add
je
jne
jmp
fiaddl
xchg
mov
and
push
push
push
imul
dec
in
int3
insl
mov
push
jno
mov
fwait
jno
out
scas
outsl
adc
jns
fistpll
adc
mov
enter
jmp
sbb
xchg
push
rcrl
xor
add
and
and
lahf
or
jl
sbb
add
ror
dec
andb
mov
iret
mov
in
movsb
mov
push
leave
push
addr16
cmpsb
lahf
nop
in
and
mov
into
inc
pop
mov
sub
loop
scas
xchg
jae
mov
daa
push
mov
mov
inc
mov
int
mov
adc
xchg
and
jb
mov
xor
cld
adc
cltd
inc
pop
cmp
cmc
and
dec
or
insl
and
pusha
repnz
or
cmpsl
test
lret
jae
lcall
sbb
sbb
in
or
xchg
adc
je
push
test
mov
sti
pop
rolb
mov
jmp
mov
add
test
sub
cld
lods
sub
shrb
pusha
addb
jae
push
or
mov
mov
xchg
aas
mov
out
mov
sub
ljmp
outsl
push
out
inc
fildll
add
mov
lahf
stos
sub
add
popa
leave
sbb
loope
in
inc
andb
xchg
loope
xchg
std
mov
adc
mov
bound
subl
cltd
fistpl
cltd
jnp
inc
pop
bnd
or
xchg
jns
xchg
mov
xor
sarl
dec
pop
xchg
xchg
mov
inc
aad
push
sub
aad
sub
inc
test
xchg
sub
rep
pushf
adc
cmc
lret
imul
inc
lods
push
xor
stos
push
mov
mov
fnstenv
xlat
push
jge
push
lahf
popf
push
sahf
sub
es
sbbl
cmpsb
mov
pop
mulb
jns
push
push
cmp
push
push
out
insl
dec
adc
mov
sbb
push
sbb
push
sahf
bound
mov
cs
stos
sbb
mov
gs
adc
hlt
adc
ret
and
mov
lock
xchg
divl
push
mov
and
adc
fildll
cltd
test
or
jae
sub
push
cltd
hlt
and
mov
cltd
enter
inc
ficoms
and
sbb
aam
nop
clc
pop
adc
aam
fcoms
cltd
fiadds
sbb
stc
cltd
stos
sub
jbe
mov
push
les
fwait
xchg
mov
stos
inc
xor
or
jae
pop
push
leave
popa
jmp
dec
sub
shrl
fwait
dec
lahf
ljmp
in
mov
xchg
in
xor
dec
in
mov
xchg
ljmp
cmp
ror
loop
cld
hlt
mov
stc
test
xor
aad
xor
pop
ja
enter
cli
addr16
ja
fmuls
inc
jge
test
in
xchg
cmp
fsave
add
mov
push
rcrl
mov
cld
inc
lcall
adc
mov
mov
fs
and
push
js
rcrb
addr16
test
adc
or
cwtl
imul
das
cmp
mov
or
adcl
inc
xlat
pop
mov
dec
sbb
mov
pop
sub
cwtl
jmp
stc
outsb
jl
jae
aam
jno
and
inc
dec
out
inc
enter
aaa
inc
push
insl
iret
ds
invd
fbstp
insb
adcb
dec
jge
jge
jne
icebp
pop
push
push
pop
push
add
test
xchg
sbb
xchg
imul
fucomip
test
push
lret
inc
popa
pop
or
aas
into
int
mov
loope
ficompl
xchg
and
jno
cli
mov
cld
mov
xor
sub
cltd
sbb
adc
cmp
cmp
das
in
clc
sahf
or
data16
pushf
cli
sarl
or
nop
jle
dec
and
sbb
jb
movsb
arpl
jnp
adc
mov
sub
push
sbbb
f2xm1
adc
int3
cmp
cmp
jecxz
sub
rcrb
pop
sub
mov
xor
jne
adc
rolb
in
cmp
adcl
and
inc
pop
rolb
xchg
ss
mov
sbb
lds
fadds
popa
inc
in
mov
fidivl
adc
mov
idivb
jmp
xchg
push
xor
sbb
mov
fistpl
jne
xchg
mov
mov
cwtl
das
jae
adc
jge
sub
mov
fwait
mov
xlat
daa
adc
xchg
nop
int
shl
out
xor
mov
jno
test
xchg
cwtl
pop
iret
loope
ja
cltd
das
mov
adc
scas
pop
mov
stos
jmp
stos
rcrb
mov
add
outsl
cli
out
cli
int
push
sub
mov
jge
ljmp
popa
xor
push
mov
push
shll
sti
push
data16
cmp
dec
ret
push
shrl
mov
je
sub
xor
pop
mov
outsb
sub
packssdw
mov
mov
jb
adc
flds
stc
sub
dec
pusha
or
jns
xchg
add
ja
test
xlat
cli
pushf
test
popa
lds
sbb
mov
adc
ss
loope
jbe
xor
and
mov
mov
xchg
lods
pop
sub
bswap
outsb
aam
mov
out
push
lock
les
inc
cmc
and
jge
adc
ljmp
test
cmc
jb
outsb
xchg
shll
xor
daa
outsl
icebp
jmp
bound
xchg
mov
add
repz
inc
push
in
push
fsubs
gs
push
adc
out
test
sbb
mov
xchg
repnz
bound
mov
adc
mov
xchg
dec
or
push
int
jle
xorl
test
fadds
rclb
sub
xchg
mov
or
push
adcl
jbe
sahf
pusha
jb
jle
or
mov
leave
xor
fwait
cmpsl
es
jns
add
jmp
notb
xor
sahf
sub
ret
sti
and
inc
jne
mov
enter
ret
dec
inc
push
jns
fcmovnb
nop
std
fildl
xorl
fisttps
leave
add
push
xchg
xchg
mov
sbb
cs
imul
jb
jns
bound
clc
or
lds
cmp
jmp
fldl
pop
nop
ss
sbb
cmpsl
xchg
fwait
sub
push
cmp
xchg
pusha
ss
inc
xchg
jae
push
inc
sub
lea
mov
ja
mov
mov
sti
pop
shlb
pop
pop
loopne
rol
jmp
pop
addr16
add
lods
shr
mov
fwait
adc
cltd
pop
scas
push
stos
lret
int3
push
sbb
mov
mov
stos
fldln2
cld
pop
fwait
jne
xchg
sbb
push
push
push
hlt
mov
push
lahf
in
or
in
mov
aad
dec
pop
xlat
scas
xchg
mov
push
dec
push
mov
inc
loopne
mov
jne
xchg
adcl
or
jbe
les
dec
push
mov
sti
aad
pop
xor
lret
mov
push
call
lds
repnz
xchg
mov
add
fcoml
adc
lds
cltd
fbstp
pop
aas
lret
cmpsb
jp
push
scas
cmp
leave
cli
shr
sub
add
mov
xchg
lcall
bound
pop
cmp
xor
sbb
aad
je
or
mov
jbe
sub
dec
sti
push
jl
push
cmp
cmpsb
out
lea
popl
std
mov
dec
aad
jg
sbb
dec
aaa
xchg
jg
sahf
outsb
jl
subl
inc
flds
sub
insb
lret
cmpsb
pop
les
xchg
push
push
rcr
push
inc
push
push
into
enter
mov
sub
fnstsw
xchg
sti
fwait
test
jbe
mov
fsub
cmp
int3
aas
xor
cmp
xchg
adc
insb
dec
dec
lds
inc
loope
test
cmp
int3
mov
call
nop
mov
cmpsb
out
ss
repz
loopne
dec
sub
rcll
call
pop
test
ss
xor
cmpl
pop
mov
pop
mov
aad
in
adcb
jo
loopne
std
mov
mov
sub
out
pop
cmc
lret
aam
cmp
sbb
pushl
in
popa
stos
adc
mov
push
inc
es
movsl
xor
pop
mov
out
repnz
jne
jb
dec
push
pop
outsb
xchg
out
lds
dec
or
push
sbb
add
push
cmp
sbb
sub
xchg
lret
in
add
xor
std
pop
push
and
popa
or
sub
xchg
or
or
add
int3
aad
iret
dec
mov
movsw
add
enter
test
enter
sub
fiadds
test
xchg
cmpps
daa
inc
jnp
jne
setns
ja
sbb
popf
inc
adc
fs
adc
xchg
int3
lock
mov
jnp
jno
xchg
sub
pminub
xchg
pop
test
shlb
pop
loope
dec
ret
xlat
sbb
mov
clc
push
loope
jmp
inc
fsubs
add
pop
push
push
add
xorl
sbb
push
mov
pop
mov
xor
repnz
iret
ds
int
clc
bound
rcll
mov
shll
lock
push
inc
cmp
out
lods
call
cmc
ja
sub
push
pop
fmuls
fs
sbb
stos
fsub
movsb
test
cmp
gs
jg
stos
lret
mov
cwtl
shll
inc
xchg
insl
sahf
xchg
out
pop
nop
es
inc
add
das
aad
dec
cwtl
repz
lds
int3
int
add
in
lret
repz
mov
add
cmc
mov
das
lret
repnz
xor
inc
and
pop
pop
daa
pop
jbe
ret
nop
stos
pop
popa
adc
dec
add
jb
and
or
push
mov
test
in
or
leave
fcmovnb
sub
daa
inc
xor
xchg
add
mov
insl
adc
aaa
shlb
subb
mov
testl
jge
inc
lcall
stc
adc
insl
xchg
mov
jno
jmp
out
mov
aad
mov
inc
fsubr
addl
call
mov
jb
mov
in
std
aam
or
push
test
or
imul
out
mov
push
add
cwtl
xor
push
inc
inc
pop
xor
pop
imul
rol
mov
push
add
aad
data16
xor
lcall
movsb
cmpsl
aas
in
imul
push
dec
pop
out
icebp
mov
mov
aaa
fcmovne
mov
in
push
loopne
je
aad
xchg
sbb
cmp
adc
lods
neg
push
push
fisubrl
iret
ja
daa
gs
je
popf
push
into
cmp
ja
popf
stc
mov
ljmp
shll
add
push
lock
pop
ljmp
call
add
add
insl
ficoms
imul
insl
outsb
pop
xor
jp
sbb
scas
inc
iret
lret
xor
pop
mov
mov
pop
in
repz
sbb
mov
push
adc
fisttpl
aad
and
adc
stos
rorb
or
popa
int3
jp
cmpsb
adc
inc
cli
imul
out
xchg
hlt
test
stc
jbe
jle
fcoml
inc
xlat
in
dec
cwtl
cmp
cwtl
xor
dec
add
inc
adc
cmp
cld
je
popa
enter
or
or
out
lds
iret
mov
xor
ds
jmp
test
mov
fsub
add
stos
fstl
stos
testl
pop
and
es
jae
aas
xchg
insl
ja
nop
cld
lds
ja
pusha
fbstp
pop
sbb
xchg
push
data16
pop
jne
and
mov
jge
add
xlat
xor
push
sbb
or
das
push
call
fcmove
call
mov
addb
enter
into
lods
sub
shl
lret
repz
sbb
fldenv
mov
les
in
or
mov
mov
test
ror
mov
loopne
inc
rorl
out
ret
icebp
int
out
movsb
ja
adc
inc
mov
mov
pop
hlt
das
lahf
jmp
leave
scas
jnp
ds
mov
aam
sahf
add
sbb
cltd
and
iret
xchg
stos
mov
ret
xchg
xchg
mov
dec
push
mov
mov
insl
dec
loop
sbb
mov
js
sub
add
imul
mov
roll
pop
adc
int3
push
jmp
lea
cmp
clc
mov
add
shll
cli
les
test
jbe
shl
push
mov
xlat
mov
push
pop
xor
push
mov
xchg
fs
enter
xor
adc
mov
inc
xor
xchg
push
aad
imul
xchg
ja
loop
or
stos
movsl
rclb
sub
push
and
daa
inc
out
pop
insl
push
push
xor
lcall
sub
lret
adc
xchg
dec
mov
stc
testl
scas
jb
frstor
jp
das
jge
adc
cli
or
ret
enter
es
mov
jb
cmp
mov
add
shlw
mov
in
js
cmp
es
pop
jb
sbb
pop
jnp
imul
mov
push
stos
stos
sub
jmp
repnz
push
sub
gs
cltd
int3
xchg
rcrl
mov
test
aam
xor
jmp
sub
enter
sahf
adc
xchg
jmp
pop
lcall
cmp
xchg
or
xor
mov
add
cli
dec
lahf
sub
inc
mov
sahf
es
xchg
mov
sbb
lods
add
popa
out
adc
pusha
cmp
lods
mov
les
lea
push
frstor
fucomi
pop
das
xchg
adc
add
adc
loope
aad
imul
dec
rclb
lahf
repz
neg
addr16
incl
adc
adc
adc
adc
addr16
push
imul
and
dec
in
lret
jle
push
cmc
jge
stos
mov
ja
mov
std
push
jmp
add
mov
mov
cmp
cmp
rol
repz
cmpsl
xchg
sub
pop
fwait
ja
mov
test
scas
sbb
add
mov
test
mov
push
testb
std
cmp
shr
cmp
ds
sti
adc
mov
xchg
ret
add
fnstsw
pop
repnz
fidivrl
lret
addr16
sub
xchg
insl
add
call
mov
cmp
int
adc
pop
or
jne
sti
dec
repnz
test
sahf
add
ljmp
mov
pop
mov
adc
inc
push
and
sti
xor
pop
sbbl
je
in
lods
mov
push
cmp
jbe
dec
and
pop
sbb
push
add
repnz
and
pop
scas
pop
test
mov
adc
xor
in
cltd
ss
lret
jae
lods
cld
cld
push
push
fisubrl
push
fldcw
xchg
in
cmpsb
inc
xor
cmpl
jae
or
das
dec
fisubs
pop
loop
insl
pop
jecxz
pop
xchg
mov
loopne
jb
enter
inc
and
xchg
jmp
sbb
mov
fsubs
ret
pop
sbb
push
out
inc
ds
loop
push
imul
cmpsb
or
scas
icebp
mov
das
xlat
outsb
popa
leave
int
mov
push
inc
cmpsl
xor
pop
jo
aam
jg
dec
mov
mov
jno
addr16
stos
sti
imul
int
adc
sbb
out
test
loope
jb
mov
jg
adc
mov
popa
and
inc
call
pusha
jb
pop
out
dec
ret
push
cmc
insb
jbe
lds
test
ljmp
jecxz
jb
xor
jnp
scas
dec
out
cmp
hlt
mov
pop
add
rcrl
lds
mov
mov
jmp
add
jo
push
sbb
xor
jae
xchg
jnp
xchg
imul
inc
aad
dec
pop
adcl
mov
pusha
divl
shll
es
jp
inc
stos
mov
dec
inc
aaa
into
xor
lds
xchg
sub
outsl
pop
cmc
pop
pop
les
push
out
test
fwait
add
lds
cmpsb
lock
insb
inc
ficomps
or
xchg
outsb
fistps
mov
movb
les
push
out
pop
inc
lcall
pop
mov
lret
cwtl
das
mov
mov
loopne
pop
push
out
adcb
xchg
push
out
and
add
test
montmul
cmpsb
inc
fiadds
dec
add
shrl
mov
or
pop
jo
sub
out
xchg
loope
xadd
cmc
sbb
add
sarb
jo
pop
lahf
jae
shrl
and
jne
lods
inc
out
xchg
scas
inc
les
shrl
clc
test
mov
addl
fiaddl
loope
jl
daa
mov
int3
xor
insl
xor
push
hlt
mov
mov
or
test
fsubrs
leave
mov
lea
aam
clc
or
repz
sbb
adc
movsb
mov
scas
mov
fidivl
daa
push
inc
xlat
outsb
jne
push
in
repnz
cmc
mov
adc
dec
jecxz
xchg
adc
or
imul
pop
lock
mov
fnsave
insl
add
and
xchg
pop
push
int
mov
mov
roll
in
mov
sbb
ds
sub
pop
loopne
sub
jnp
add
aas
clc
sahf
cld
xchg
iret
sub
sbb
mov
jle
add
aam
mov
pop
repz
hlt
mov
adc
shlb
enter
inc
in
and
sbb
and
mov
rclb
mov
inc
jmp
icebp
and
xchg
inc
ss
mov
cmp
leave
or
push
cmp
pop
icebp
sbb
push
nop
cmp
mov
adc
mov
jno
fs
stc
xchg
das
fidivl
mov
adc
jge
mov
xor
in
cmp
pop
xchg
cmp
arpl
aam
divb
push
jmp
test
or
popl
xchg
sub
popa
adc
es
adc
xor
jne
repz
sub
es
out
xchg
dec
jecxz
and
dec
loop
xor
add
mov
cltd
xor
mov
xchg
cs
dec
sbbl
roll
lcall
pop
push
xchg
cs
icebp
mov
xchg
pop
hlt
ret
and
movsb
pop
pop
jne
mov
sbb
pusha
ret
sub
out
pusha
pop
mov
xchg
ljmp
dec
fs
add
in
xchg
in
test
aaa
dec
out
pop
and
in
xchg
montmul
cmpsb
ret
aaa
daa
mov
mov
adc
cwtl
gs
mov
push
out
xchg
sbb
mov
mov
adc
imul
ljmp
adc
mov
mov
inc
out
xchg
cs
push
outsb
pop
jne
mov
imul
loope,pt
outsl
pusha
xchg
sub
mov
loopne
cmc
mov
jge
mov
fs
cwtl
mov
cltd
xor
imul
movsb
sub
fadds
pop
hlt
jne
xchg
sub
mov
test
data16
xchg
mov
push
jmp
cmp
mov
mov
cwtl
mov
js
xchg
mov
jmp
outsl
imul
mov
in
jecxz
or
scas
outsl
imul
out
scas
inc
mov
popa
add
loopne
inc
fdivrs
bound
mov
shlb
and
cmp
xor
cmp
ret
and
mov
push
mov
shlb
popa
rcrl
cltd
xor
test
mov
xorb
movsl
cwtl
mov
push
mov
jbe
push
cmpsl
sahf
xchg
cs
jno
dec
movsb
pop
mov
test
leave
orb
xchg
arpl
adcb
mov
mov
outsl
mov
sahf
mov
ss
imul
mov
push
hlt
lcall
and
xchg
xor
enter
test
cwtl
mov
fwait
xor
out
aad
sbb
xor
push
test
cmpsb
mov
cmp
movsb
or
decb
and
enter
pushf
pop
je
pop
cmpsb
andb
clc
sarl
push
push
and
cwtl
push
ja
and
cmpsl
ds
int
push
inc
pop
push
in
dec
arpl
xchg
cltd
push
dec
mov
mov
cmp
fiadds
and
out
popf
scas
xlat
outsb
fnstsw
cmp
cs
jg
jp
ss
lahf
jno
int
mov
call
push
mov
int3
imul
jle
lods
pop
sahf
test
incb
cwtl
sub
pop
mov
jp
and
xlat
add
daa
es
mov
dec
shrl
je
and
ret
inc
fdivr
in
out
sbb
lds
xor
imul
sub
jnp
adc
rolb
popf
pop
push
stc
test
shrl
fwait
mov
mov
sbb
sub
mov
dec
loop
xchg
mov
fisttps
mov
inc
cmp
jo
hlt
mov
lret
sahf
xor
sub
inc
mov
test
push
lret
ret
testb
adc
xchg
dec
xor
arpl
mov
mov
in
cmp
or
adcb
pusha
and
xchg
jnp
test
cld
xchg
hlt
add
aaa
sbb
mov
xchg
arpl
fcoms
icebp
mov
push
sbb
xor
pop
fisttpl
test
rcr
clc
adc
xor
jge
cwtl
scas
sbbl
push
icebp
mov
gs
aaa
dec
jle
adc
shlb
jge
daa
imul
add
dec
jmp
jnp
mov
jnp
mov
lret
adc
loop
add
out
clc
adc
popa
clc
bound
cmp
fwait
xor
sahf
push
in
lret
in
mov
sbb
addr16
push
cmp
jbe
xor
push
test
mov
jmp
lock
sbb
dec
orl
mov
outsb
addr16
lahf
mov
jmp
mov
xchg
xor
push
pop
hlt
andl
aam
push
and
dec
sarb
cli
and
daa
and
lock
xchg
add
fwait
sbb
jl
sbb
shlb
lret
pusha
movl
jb
push
sbb
mov
adc
pop
scas
pop
subl
popa
xchg
inc
insl
je
xor
jp
jp
ss
jo
dec
fisttps
jmp
push
adc
fsubrl
out
mov
lcall
push
sarb
in
sub
xchg
sbb
es
out
and
cmc
sbb
and
out
push
mov
lods
addl
iret
pop
insl
add
imul
inc
push
mov
dec
fisttps
daa
mov
jo
dec
aad
and
cmp
cli
or
sahf
and
int3
inc
test
icebp
inc
jbe
cmp
xor
nop
jg
rorl
mov
cmp
in
push
jmp
push
jmp
add
pop
ljmp
sub
mov
fsts
test
mov
imul
sbb
sub
or
aaa
xchg
adc
imul
jle
cli
add
dec
mov
ds
pop
lret
jl
inc
push
mov
stc
or
mov
cmpb
stos
mov
jne
movb
mov
cmpsb
cmpsl
push
mov
aam
push
in
loopne
stos
outsl
cli
pop
orb
clc
ja
pusha
fdivs
or
mov
xchg
jb
movsl
dec
adc
js
js
xchg
xchg
mov
jge
outsl
sarb
cltd
jl
inc
push
sbb
mov
ds
jecxz
fwait
xchg
popa
pop
push
mov
arpl
gs
mov
jmp
ret
dec
rorb
xor
std
sub
xor
stc
cld
insl
cmp
test
scas
lcall
jmp
pop
iret
or
mov
insb
or
and
xchg
and
cmp
negl
out
or
test
push
stos
xchg
fs
aas
push
test
adc
xchg
loope
stos
xlat
loop
or
movsl
gs
popf
fnsave
movsb
push
mov
out
test
mov
or
inc
jl
mov
popa
jbe
jae
fdivs
fwait
xchg
cmpsl
xlat
gs
jecxz
jns
call
fisttpll
ljmp
in
repnz
ret
fistl
ret
loope
les
movsl
and
int
xchg
mov
lds
push
xchg
scas
inc
enter
loope
mov
decl
enter
xchg
cli
add
hlt
mov
es
cmpsl
daa
pushfw
xchg
hlt
and
mov
jo
mov
out
jl
int
hlt
daa
kaddw
add
scas
jae
xchg
push
push
adc
ss
hlt
xor
fldl
aam
push
shlb
stos
data16
flds
and
js
pop
cmp
sarl
sub
inc
pop
insl
dec
pop
jge
jno
xor
inc
orb
push
adc
inc
addr16
cmp
imul
cmpb
add
gs
in
pop
lea
xor
arpl
mov
fisubs
ds
mov
aad
rorl
cmpsl
mov
or
pop
and
stos
je
push
lock
mov
fisubl
dec
xor
or
pop
rorl
std
and
int
scas
jno
mov
fwait
jp
hlt
pop
ror
in
xchg
int
push
or
ret
test
aad
das
out
mov
iret
cmp
adcl
mov
mov
jmpw
jecxz
xor
pop
test
negb
adc
fimuls
sbb
in
xchg
shrb
and
aam
or
jns
sbb
jmp
adc
out
cltd
jne
stos
cmpl
xchg
cs
pushf
xchg
xor
call
stos
adc
jb
ja
ja
jmp
arpl
fs
push
xchg
xchg
arpl
addr16
inc
push
mov
adcb
mov
pop
lock
mov
fldenv
add
rorb
add
sarl
lcall
and
std
or
int3
adc
jb
out
mov
lea
ret
je
and
sahf
xchg
mov
jecxz
and
jbe
repnz
cmpl
mov
icebp
cmc
pop
sub
sbb
pop
bound
pusha
xchg
mov
lea
stc
adc
sarl
cmp
loopne
sbb
stos
jge
fcompl
sbb
mov
loop
orl
nop
imul
dec
movsb
adc
xchg
pop
iret
and
adc
outsb
and
inc
sbbl
bound
xchg
jae,pn
sbb
mov
jmp
scas
orb
xchg
mov
bound
jmp
pop
mov
mov
inc
xchg
and
into
sbb
and
fildl
push
xor
scas
adc
outsl
cltd
clc
pop
or
jae
out
loop
pop
roll
test
movsl
or
adcb
xchg
jne
das
mov
jp
mov
roll
aas
in
mov
pop
mov
cmc
pop
or
and
lock
or
lds
pop
psubd
mov
sti
inc
sbb
adcl
outsb
mov
sub
dec
mov
add
int3
inc
adc
mov
add
hlt
xor
mov
sub
inc
jbe
dec
aad
push
mov
filds
or
fwait
and
add
subb
mov
inc
inc
mov
icebp
sub
cmpb
jmp
std
pop
outsb
cmpsb
jo
adc
cmp
fldl
ja
adc
push
cltd
mov
mov
inc
js
pop
and
cmp
xchg
jle
jg
inc
fnstenv
and
std
jle
iret
fcomip
sub
mov
in
or
call
hlt
mov
rorb
sub
faddp
push
ljmp
and
cltd
int
sub
cmpsl
loopne,pt
dec
rcll
add
push
cmp
dec
arpl
sbb
push
cli
shrd
sbb
hlt
sub
push
cs
xchg
jge
and
add
adc
iret
inc
movsb
and
jne
jb
xor
push
add
imul
dec
out
cmp
mov
sti
ss
leave
sahf
jle
sti
in
sub
mov
mov
hlt
loop
imul
jnp
mov
mov
sub
popf
cmpsl
divb
inc
xchg
loope
mull
and
add
shlb
fwait
loope
push
lret
push
sbb
das
inc
xchg
stos
inc
cmc
pusha
icebp
sub
lret
push
mov
out
jl
mov
jno
in
sub
fistpll
fwait
mov
xlat
aad
xchg
lea
repnz
push
orb
pop
dec
cmp
cltd
cmp
adc
push
divl
add
in
popa
add
scas
jmp
rorb
ficoms
in
xlat
cmpb
pop
in
jmp
jb
xor
popa
push
out
xchg
shll
ljmp
and
scas
mov
inc
mov
jnp
push
call
test
adc
scas
clc
sub
rol
rcrb
push
lret
adc
iret
call
mov
out
push
enter
aad
adc
int3
sub
aam
out
xor
adc
push
mov
js
jne
mov
adc
lret
scas
flds
loope
mov
pushf
packsswb
cs
push
in
push
jle
fldt
std
das
push
cmp
or
jnp
xchg
push
xchg
jae
sub
bound
cmp
add
arpl
mov
popa
jb
mov
adc
pop
int
fwait
jecxz
int
xor
xor
sbb
lret
cmp
scas
sub
push
stc
iret
inc
les
lods
pusha
or
xchg
lods
pusha
and
pushf
je
out
imul
aad
lcall
inc
push
cmp
daa
in
in
mov
sti
bnd
mov
jbe
add
inc
mov
adc
dec
loope
ss
lods
jae
sub
mov
sbb
cmpsl
xchg
cltd
mov
in
jge
mov
stc
fmuls
xor
mov
cld
pop
xor
mov
ret
fsubrs
add
rcr
and
mov
ret
inc
lret
and
js
sub
sub
and
dec
jg
addb
pop
add
cli
mov
mov
dec
push
rcrb
dec
aad
dec
sub
push
repz
pop
jle
mov
jecxz
mov
jno
pop
into
loopne
push
call
push
andl
add
imul
pop
and
xchg
mov
clc
sub
fdivs
jbe
ljmp
cld
loope
out
mov
icebp
xor
loop
outsl
adc
into
inc
jne
movsb
jbe
mov
mov
sub
add
loopne
dec
jmp
loop
insb
bound
or
pop
aam
lahf
out
sub
inc
fistpl
mov
movsb
xchg
imulb
iret
nop
push
lods
or
pop
test
jg
and
test
pop
decl
jb
dec
aaa
into
test
inc
enter
or
jmp
mov
daa
ds
movsb
jbe
push
ss
fwait
test
inc
push
or
lods
jbe
sbb
scas
es
xor
inc
shl
ljmp
pop
fnstenv
adc
mov
lock
mov
mov
dec
in
adc
loop
xor
adc
jmp
loopne
fsubp
cs
mov
in
xchg
inc
addr16
pushw
mov
lahf
pusha
sbb
add
aas
xchg
jno
jne
sub
cmpsb
pusha
jp
ljmp
hlt
dec
ror
add
dec
fnsave
sti
xor
imul
fs
xor
mov
adcb
fisttps
dec
mov
pop
mov
jg
xchg
and
inc
cmpsb
jmp
or
scas
jl
mov
mov
jbe
mov
es
sbb
or
out
and
pusha
daa
in
sbb
pop
sbbl
into
mov
pop
sbb
mov
icebp
mov
sub
stc
cmpsl
in
and
cwtl
inc
pop
xchg
jp
pusha
testb
cld
push
int
pusha
and
mov
insb
scas
dec
cmc
arpl
cmpsb
fidivrl
mov
sbb
and
ss
or
std
in
and
gs
aas
call
push
add
scas
xor
or
push
pop
lds
jmp
jecxz
sub
daa
jns
sbb
dec
xor
nop
push
insl
insl
lcall
push
pushf
push
dec
addb
orb
faddl
fs
scas
dec
or
ljmp
cmp
mov
testb
lea
rorl
mov
fcomps
cmc
pop
xlat
mov
ret
loope
mov
mov
dec
or
outsb
xorb
and
mov
jne
lcall
mov
gs
ret
sbb
lods
lock
lret
into
adc
or
loop
xchg
mov
inc
or
in
popf
mov
cmp
shlb
out
mov
lret
nop
cmp
lahf
xor
dec
aam
pusha
rorl
sbb
hlt
cmpsl
dec
outsl
push
sbb
daa
mov
lock
mov
testb
inc
aad
push
das
out
orb
or
imul
bound
fisubrs
mov
inc
movb
cmp
dec
mov
adc
mov
xor
push
cmpsb
data16
inc
into
push
pop
sti
popf
ss
jl
and
push
in
xor
xor
add
inc
dec
enter
xchg
aad
mov
inc
fistpl
loopne
aas
push
pop
rolb
pop
filds
xchg
cs
and
ret
ja
loope
push
les
push
cmp
cmp
sbb
dec
fwait
xchg
add
sti
bound
mov
dec
shrb
cmp
or
mov
int3
jb
movsl
aaa
lret
lock
lcall
xchg
cli
aas
jns
or
ret
fidivrl
xor
cmp
push
dec
lret
repz
mov
lock
test
cld
adc
push
hlt
sub
mov
sbb
ficompl
add
mov
pop
sub
nopl
cmpsl
shlb
mov
in
pop
rcll
sub
cltd
das
and
jp
sbb
mov
out
cmp
pop
aam
fs
dec
jns
mov
push
sti
fs
push
mov
int3
aam
nop
daa
cmp
inc
mov
pop
pop
arpl
mov
ret
arpl
sub
xor
pop
mov
movlps
sub
icebp
mov
add
ss
pop
aad
arpl
jecxz
insb
inc
xlat
popf
andl
inc
push
scas
adc
sub
jnp
aas
fwait
ret
jb
mov
add
dec
cmp
insl
cmp
test
hlt
xor
pop
iret
jnp
cld
xor
adc
cmp
and
fistl
out
cli
sub
movsb
sub
sub
gs
sbb
dec
sbb
xchg
pop
cmpsl
mov
addr16
inc
inc
push
pop
pop
dec
in
cs
cmc
scas
stos
or
adc
popf
shlb
and
out
test
cs
lods
rol
loope
mov
mov
call
fdivs
jmp
movsl
fs
or
test
cld
es
push
popa
dec
xor
dec
sub
add
scas
jae
pusha
testl
and
subb
std
and
mov
xchg
dec
mov
pop
xchg
jo
or
popf
mov
adc
inc
ret
leave
push
out
sbb
test
mov
pop
clc
or
lret
cmp
montmul
cmpsb
lds
rcrl
jge
rorl
jg
adc
sbb
cli
xor
out
push
js
jns
pop
cmc
sub
addb
dec
adcl
jno
loop
xchg
and
xchg
sbb
outsl
ret
pop
fnclex
cmp
sub
mov
shrl
hlt
ds
pop
out
mov
incb
sbb
dec
loop
mov
mov
xor
ljmp
or
xchg
js
mov
loopne
stos
ret
dec
subb
jecxz
push
repz
pop
scas
aaa
into
sub
pop
push
dec
imul
xor
push
ss
aas
and
mov
notb
jmp
outsl
fsubrs
out
mov
test
insb
mov
mov
pop
lock
cmpsl
cmpsb
aas
mov
mov
mov
fsubp
and
pop
sub
push
leave
dec
out
inc
pop
out
adc
fnstsw
cmp
sbb
add
xor
push
movsl
mov
mov
sarl
mov
sub
rcrb
xor
fdivl
lret
dec
mov
xor
sbbl
xor
inc
shrb
in
adc
imul
mov
mov
faddl
xor
xor
xor
sti
imul
in
jns
sti
sub
aaa
ss
jo
sbb
dec
movsl
add
sbb
pop
sbb
mov
cmp
in
jnp
stos
outsb
aas
adc
test
push
pop
add
push
call
fadds
int3
cmp
adc
test
cli
push
pushf
orb
sbb
test
add
or
sub
sbb
push
mov
push
add
mov
jp
or
inc
xchg
dec
sbb
sbb
dec
mov
mov
fldt
xchg
mov
xchg
cmp
mov
add
dec
mov
sbbl
sbb
sbb
in
repz
mov
sub
shlb
loopne
mov
inc
add
addb
push
fbld
mov
test
outsl
add
cld
mov
inc
sub
mov
je
lock
push
in
pop
mov
sbb
fwait
ret
movsl
add
testb
cld
lods
cli
mov
cmpsb
sub
sbb
xchg
imul
add
scas
jle
int3
aaa
leave
jno
mov
rorb
add
xchg
dec
fbstp
xrelease
ja
in
ss
mov
lock
in
sbb
je
sti
fistl
pop
push
js
sbb
icebp
xor
push
xchg
mov
fnsave
fwait
pop
add
xlat
dec
sbb
mov
pop
test
stc
push
test
iret
push
lret
out
lods
pusha
mov
mov
add
mov
and
arpl
push
jnp
fcomps
pop
jbe
jg
sbb
or
inc
insb
ret
dec
int3
inc
push
cmp
pop
xor
xchg
and
sbb
cmp
das
pop
js
sti
dec
dec
icebp
mov
pop
addr16
dec
adc
push
adc
enter
or
sbb
call
mov
mov
push
jmp
xchg
cmp
fmull
scas
aas
add
mov
out
mull
xor
je
mov
dec
dec
sbb
jg
mov
test
cmp
xchg
mov
or
jp
pushl
lahf
inc
dec
aad
sbb
xor
fsubs
into
cmp
cmpsl
jg
fnsave
cs
add
mov
enter
les
nop
daa
cld
inc
orl
jne
push
jb
lret
cmp
daa
sbb
int3
add
xor
filds
xchg
sub
cli
mov
xor
mov
popa
add
mov
xchg
sbb
imul
push
push
nop
insl
xor
in
xor
xchg
mov
dec
push
mov
sub
pop
xchg
jae
lahf
popa
mov
cmpsl
clc
xor
jno
push
mov
jb
xchg
int
xor
std
lods
aad
cmc
scas
add
std
xlat
rcll
iret
add
mov
scas
dec
fcomip
aas
or
test
cli
out
and
xor
loop
rcr
xor
call
mov
mov
aad
jne
mov
mov
jecxz
hlt
cltd
jmp
test
add
mov
sub
shrb
pop
aad
cmp
pusha
iret
push
mov
sub
cmp
push
sub
ss
inc
sbbb
and
and
inc
jno
pop
xor
xor
jae
add
adcb
pop
mov
and
test
mov
loop
aam
push
mov
iret
call
mov
aam
cmp
dec
push
gs
lahf
cmp
dec
nop
out
orl
lret
dec
mov
jae
sub
scas
ds
pop
mov
fcmove
aas
loopne
mov
repnz
in
loop
lock
inc
ret
xchg
xchg
or
clc
mov
icebp
xor
push
loope
inc
loope
js
add
mov
call
mov
inc
mov
aas
imul
jnp
nop
cmp
movsl
push
jo
adc
ret
rorl
aas
cmp
mov
sbb
push
insb
enter
insb
mov
xor
les
push
arpl
arpl
mov
test
sarl
movsl
pop
adc
xchg
mov
ret
dec
adc
pop
push
xchg
daa
add
je
xchg
scas
sub
mov
lahf
jmp
sbbb
fbld
mov
or
test
sbb
dec
xor
divps
pop
gs
icebp
ss
imul
cwtl
fnstcw
mov
dec
or
sub
pop
xchg
out
sub
jne
cs
pop
inc
outsl
pop
lret
nop
dec
les
mov
xor
inc
icebp
push
mov
out
jmp
into
iret
mov
xor
push
xor
lea
mov
mov
in
cld
pop
cmp
enter
fisubrl
inc
fisubrs
int3
popf
xchg
and
adc
cmpsl
xchg
jp
and
pushf
jg
je
sub
xchg
jle
outsl
into
push
dec
push
push
cltd
mov
add
insb
call
or
sarl
psubusw
jp
jne
in
xor
cmp
faddl
mov
sub
gs
jo
push
cmp
lcall
push
mov
sti
and
scas
mov
xor
orb
insl
fwait
lret
sbb
jnp
aam
std
cmc
cmc
daa
or
std
out
and
mov
push
aam
sbb
mov
adc
cld
xchg
jmp
loop,pn
or
lahf
mov
push
mov
lods
cmp
pop
cmc
add
pop
repnz
jns
test
xor
lret
mov
dec
sub
xlat
outsb
push
dec
shrl
jb
mov
adc
and
xor
dec
inc
sub
out
xchg
dec
loop
mov
imul
inc
cmp
inc
xchg
lea
pusha
call
or
jg
xor
js
pop
push
popf
mov
and
loopne
sbb
fidivl
sub
rcrb
clc
test
lock
cmpsb
jg
fmul
ja
add
popf
xor
and
push
jg
mov
test
fnstenv
leave
shrl
repz
ja
push
movsl
mov
ret
repz
inc
cmp
push
outsb
imul
sarl
inc
adc
cmpsb
cmp
addr16
les
mov
jle
mov
jns
fildl
cwtl
cmp
pop
mov
jg
fdivs
rcrl
add
pop
repnz
jge
xor
leave
pusha
and
pushf
xor
stos
ret
pop
sbb
mov
adcb
and
jne
add
dec
jecxz
xchg
stc
enter
int
test
out
xchg
sub
cmp
jmp
and
push
mov
bound
stos
inc
mov
push
movsl
psrlq
into
pop
adc
ret
inc
jle
sbb
shl
ja
mov
aaa
call
cmp
push
pusha
mov
mov
fisttpll
push
aad
jp
xor
add
cwtl
stc
test
notl
cmpsb
cmp
mov
jnp
xor
into
mov
xchg
outsb
adc
push
cmc
mov
addr16
xlat
sarb
stc
test
mov
cli
outsl
fnsave
mov
jmp
cwtl
les
lods
mov
rorb
jbe
xchg
and
push
pop
push
insb
pop
xor
and
fs
cmp
dec
lahf
add
dec
enter
cld
xor
andb
movsl
add
ss
xlat
xor
mov
adc
mov
lret
in
fs
sti
xlat
pop
mov
pushf
mov
data16
nop
pop
enter
mov
jnp
pop
daa
fs
rcr
daa
sti
mov
jg
mov
outsb
rcrl
pop
outsl
push
sub
jbe
push
jo
and
xor
inc
xlat
xor
stos
push
mov
push
mov
and
xchg
jp
jo
sbb
das
test
adc
sbb
ror
ljmp
test
int3
inc
jnp
fs
cmpsl
sbb
mov
in
lds
ret
cmp
dec
stc
pop
arpl
lret
inc
dec
jecxz
insl
inc
ds
imull
mov
out
int3
sbb
sub
inc
rcl
pushf
cmp
pop
rolb
add
fists
lret
sarl
fimuls
mov
test
imul
lcall
mov
mov
lds
cmpsb
push
popf
int3
idivl
adc
mov
adc
into
jbe
lds
xor
lahf
int3
mov
enter
loop
in
jge
sbb
out
xlat
jge
jns
stos
xor
mov
les
mov
pop
addr16
mov
xor
aaa
rcl
inc
mov
xchg
or
pop
das
fistpl
mov
in
cmp
xor
jnp
jbe
ljmp
pop
ret
jg
lods
outsb
push
sub
jbe
clc
lock
shlb
sbb
xor
and
cmpsb
push
add
in
mov
push
push
shrb
mov
jle
test
mov
ret
lahf
push
rolb
ret
push
lds
hlt
out
test
xor
push
mov
gs
jge
push
or
sub
je
mov
lahf
jp
pop
in
xchg
xor
arpl
mov
cmp
adc
mov
and
xchg
push
aad
mov
lds
sub
lcall
in
pushf
and
scas
xchg
sub
outsb
add
mov
push
pusha
testl
push
lods
in
cmp
mov
push
lret
mov
push
out
fcmovbe
imul
loop
or
int
mov
cltd
xor
jl
xchg
les
pop
cmc
lret
adc
cltd
test
inc
fcmovne
sbb
mov
adc
mov
js
int
imul
shl
lea
stos
mov
fsubl
stos
push
in
cmpsl
ds
ja
popf
sbb
xor
sbb
dec
or
nop
daa
pop
mov
in
ret
xchg
std
and
arpl
loope
xor
push
ret
dec
pop
rcrl
mov
ds
or
xlat
push
into
xchg
out
addr16
pusha
cmc
cld
gs
mov
jecxz
inc
sbb
aas
xchg
dec
inc
roll
jmp
clc
jg
cmc
xor
mov
testl
dec
adc
das
repnz
pop
jno
cmc
xchg
fldl
sub
cmp
pop
add
int3
xor
jmp
stc
addr16
sahf
or
clc
pusha
xchg
or
popf
add
arpl
dec
push
fadds
xchg
repz
xor
pop
add
and
cmpb
lahf
inc
or
xor
cmp
xor
pop
mov
mov
add
lahf
inc
mov
stos
jg
mov
fadds
mov
pop
movsb
fcompl
cli
mov
cmpsb
sub
pop
xor
cmp
pop
add
cmpsl
cmc
pop
push
dec
push
or
push
cld
pop
xor
mov
jo
add
filds
inc
dec
push
leave
mov
pop
lcall
fiaddl
dec
stc
push
sti
into
pushf
sarb
sbb
ret
mov
pop
jns
pop
push
negl
sti
pop
pushl
sarb
gs
mov
test
iret
xchg
or
in
fistl
and
or
xchg
ljmp
in
mov
repnz
or
into
sbb
stos
repz
xchg
imul
cwtl
inc
jo
or
dec
data16
mov
lock
or
out
adc
sub
lret
xchg
data16
mov
jno
lock
fs
out
icebp
inc
repz
daa
jmp
addr16
mov
mov
pop
lcall
pusha
out
or
hlt
stos
pop
dec
adc
sbb
loopne
sub
test
mov
jge
fistps
std
pusha
out
mov
xchg
sub
leave
xchg
dec
cmp
das
sbb
in
mov
lahf
ds
dec
or
inc
test
sub
mov
out
and
bound
mov
inc
and
inc
adc
fiaddl
push
test
andl
ret
pushl
insb
fwait
out
push
cld
ret
xor
call
or
or
out
insb
cli
lret
ja
outsl
in
scas
outsb
add
mov
ljmp
xor
insb
or
imul
and
test
loop
imul
cld
les
sub
push
enter
loopne
add
jmp
repz
mov
mov
mov
bswap
pop
std
jg
add
jne
inc
in
sub
add
scas
cmp
call
cmc
mull
jge
popa
repz
inc
lock
pop
lcall
mov
pop
sti
ljmp
loop
add
insl
pop
pop
testl
sub
sub
popa
repz
or
fdivr
out
push
add
arpl
fldenv
inc
out
cs
arpl
jg
shr
lods
add
loope
add
incb
jg
insl
loope
out
fidivs
pop
add
lahf
mov
es
out
cmpl
jp
jge
lock
negb
cli
sub
sbb
mov
jnp
or
fsubl
inc
jnp
jb
imul
scas
pop
test
add
inc
mov
cld
xor
adc
jns
repz
negl
hlt
cs
add
ret
and
mov
mov
rorb
mov
add
lds
cltd
inc
cmovle
iret
inc
pusha
fwait
inc
ds
xor
out
dec
movsb
sub
add
lahf
fstpl
mov
cmc
inc
add
int3
out
cld
cmp
push
push
inc
mov
nop
loope
mov
repnz
xchg
ljmp
jmp
or
lret
sti
jne
cwtl
sbb
xchg
jmp
stc
cmpsl
sub
lods
jbe
shlb
or
mov
xchg
mov
iret
cmp
mov
arpl
nop
cmp
jno
jmp
sti
inc
push
mov
stos
adc
bound
bnd
cmp
loop
fldcw
jne
cmp
mov
test
mov
aam
pop
ret
xchg
cmp
or
pop
xor
cmp
fnsave
adc
push
jge
enter
fdivs
mov
sub
cmp
cmp
sub
icebp
fimull
and
push
lea
dec
mov
ret
mov
mov
stos
clc
ljmp
addl
shlb
push
cmp
sub
mov
pop
xchg
mov
ja
in
iret
nop
ret
push
add
pushf
inc
mov
lods
insb
icebp
inc
cmp
or
cltd
mov
out
arpl
pop
lcall
aad
ja
pushf
in
jb
cmp
mov
pop
or
lret
xchg
rcrl
add
lahf
aas
int3
push
ja
sub
ljmp
xor
cmp
or
cmpsl
inc
arpl
mov
fidivrs
pop
adc
pop
or
mov
push
repnz
adc
jl
push
and
mulb
adc
std
stc
scas
cmp
push
insb
ljmp
int3
add
dec
popa
dec
outsb
out
ss
aas
push
xor
mov
sbb
je
mov
jo
sub
xchg
and
dec
lret
adc
and
mov
lret
mov
xchg
dec
sbb
insb
aas
aas
jo
hlt
pop
sahf
push
lds
xchg
cld
test
cmc
pop
cmpl
hlt
pop
pop
xlat
and
push
fucomi
das
scas
push
add
fnstsw
xor
jle
fdivr
push
push
out
adc
sub
mov
adc
sti
sub
aaa
es
or
mov
mov
push
mov
jle
scas
sub
test
push
les
mov
dec
lcall
mov
cmpsl
fidivrs
push
fwait
cmp
stos
xor
addr16
adc
add
scas
sub
in
push
cmp
and
sbb
test
inc
ret
xor
stos
icebp
add
push
out
fnstcw
xor
inc
inc
std
pop
mov
shl
add
jns
lods
sub
mov
pop
jb
and
cmp
imul
jp
xchg
push
movb
or
push
pop
xor
cmc
test
push
in
cmp
cmp
mov
cmc
pop
add
iret
call
mov
test
mov
adc
hlt
and
sahf
xor
daa
inc
or
mov
mov
popa
mov
stc
aas
mov
pop
add
xor
jg
mov
insl
in
rcll
mov
xchg
loope
or
das
mul
outsb
ljmp
push
or
pop
cwtl
cmp
inc
sub
outsl
in
xor
dec
jmp
pop
aam
repnz
jns
out
insb
mulb
xor
scas
sub
xor
movsl
adc
dec
jb
sbb
fidivrs
xchg
cmp
nop
cmpsb
inc
adc
mov
inc
adc
and
adc
pop
cld
andb
call
divl
les
stos
shlb
cmp
xchg
pop
push
cmc
pop
inc
mov
mov
adc
xchg
push
jne
cmpsb
ret
sub
dec
xlat
mov
lods
cltd
mov
cmpl
sub
decl
bound
jbe
subb
xlat
popa
inc
mov
aas
jne
xor
fdiv
fs
int3
mov
lret
inc
cltd
mov
and
adcb
test
dec
push
mov
and
pop
pusha
cmp
or
mov
mov
lea
lods
cmp
imul
sbb
xor
pop
std
out
add
ljmp
cmp
pop
push
nop
cs
fistpll
jle
roll
mov
mov
movsb
push
add
and
loop
cmp
mov
xchg
in
insl
pusha
hlt
mov
jl
pushf
mov
ds
iret
or
lods
xchg
adc
or
rcrb
cmpsl
sbb
pop
mov
aaa
mov
xchg
out
iret
outsl
or
jns
popf
push
rclb
popf
xor
imul
mov
jmp
cli
orl
js
lods
mov
adc
mov
mov
stc
rcr
mov
add
cmpsl
inc
xchg
ds
lock
adc
dec
sbb
or
jmp
mov
push
push
sti
gs
andb
fstpt
in
imul
lcall
int
push
push
sub
jle
data16
adc
jecxz
dec
mov
push
xchg
xchg
cs
inc
adc
fldcw
stos
jp
xchg
inc
lret
inc
and
push
enter
jge
insl
fwait
negb
mov
inc
push
outsb
pop
add
test
mov
sbb
insl
sub
pushf
add
pop
dec
pop
or
int
sbb
cs
dec
mov
xchg
stos
adc
jno
push
jmp
xorb
sbb
cli
adc
xchg
in
cli
push
mov
cwtl
sub
sbb
pop
cmp
jp
mov
arpl
pop
in
data16
cmp
je
inc
xchg
cmp
inc
ret
into
xchg
les
inc
fdivp
pop
repz
fiaddl
ds
out
adc
sbb
xchg
inc
and
dec
jae
dec
mov
cmpsl
daa
out
or
pop
dec
insl
fnstsw
xchg
xor
dec
ret
sbb
lds
xor
add
xor
mov
inc
sub
inc
mov
cwtl
das
into
stos
std
xchg
fcompl
dec
xchg
std
aas
mov
popa
fldt
hlt
js
adc
xlat
int3
mov
and
pop
jecxz
mov
fbstp
fisubs
sbb
ljmp
cmpsb
add
push
push
repz
stc
testb
adc
pop
add
dec
adc
jle
xor
inc
jmp
stos
and
into
mov
push
iret
mov
jbe
fld
xchg
gs
dec
loop
xchg
sbb
out
sbb
out
mov
lret
fsubl
mov
jmp
add
mov
out
pop
add
in
mov
mov
mov
mov
mov
mov
test
mov
pop
adc
lret
pop
or
ljmp
addr16
or
inc
jno
push
cs
push
xchg
push
ljmp
sub
xor
imull
scas
inc
pop
sbb
mov
fsub
shll
or
out
cmc
idivl
iret
lock
inc
or
out
push
push
mov
mov
clc
or
mov
mov
pop
loop
and
pop
cmpb
pop
mov
mov
push
pop
loop
pop
inc
adc
xchg
adc
push
cltd
pop
jae
bswap
aad
push
pop
fwait
inc
out
pop
ret
xor
pop
jne
hlt
ja
into
inc
jecxz
add
xchg
jns
fs
or
call
lret
sbb
outsl
cltd
data16
or
sahf
aas
lea
lds
push
cmp
mov
mov
sbbl
mov
les
mov
mov
imul
scas
roll
xchg
xor
ficoms
xlat
outsb
cmpsb
mov
lea
fisubs
cmpsl
and
adc
xchg
lret
ljmp
es
fs
dec
push
jp
and
into
dec
adc
out
xor
cmc
icebp
test
out
jecxz
lods
push
incb
negb
mov
or
pusha
and
xor
popl
jmp
add
dec
adc
mov
scas
pop
push
pop
mov
mov
incb
insl
icebp
lods
ljmp
jb
test
aad
inc
adc
pop
xchg
inc
int3
jo
je
pop
dec
loope
xchg
jnp
push
cli
or
cs
les
lods
pop
dec
or
mov
bound
cmpsl
lods
sub
test
cwtl
ds
xor
mov
xchg
sbbb
push
aaa
into
xchg
enter
sub
cmp
cmpsl
mov
pop
call
mov
test
fiaddl
movsb
push
push
in
mov
or
ljmp
push
mov
insl
in
hlt
lods
arpl
test
iret
lea
mov
and
pop
and
aam
inc
xchg
cmp
lods
lds
xor
inc
adc
stos
daa
mov
stos
sub
mov
movsl
jns
jo
lock
std
out
std
pop
and
data16
cmc
popa
jae
pop
mov
insl
jns
rorl
inc
sub
jle
pusha
mov
lods
xor
mov
mov
fadds
pop
add
push
pop
add
es
cmp
test
ds
movsb
xor
sub
mov
xchg
dec
je
mov
xchg
sub
xchg
or
jp
leave
lret
xchg
and
pop
ds
sub
mov
jle
stos
lods
push
add
mov
or
adc
dec
adc
stc
jge
mov
sbb
xchg
cmp
xchg
or
shrl
arpl
leave
inc
push
clc
stc
sbb
roll
jp
push
lods
ss
pop
lret
fsubrs
stos
testl
sbbl
cmp
mov
ret
inc
push
mov
test
xor
add
jns
fwait
mov
jne
sbb
push
add
into
std
push
movsl
sub
dec
or
pop
add
pusha
jge
sarl
jno
jle
push
add
shll
push
push
pop
add
out
jno
dec
dec
push
push
jge
jb
cmpsl
pop
add
orl
push
roll
pop
add
push
out
jno
divb
jge
dec
adc
push
sbb
push
pop
add
pop
pop
add
in
push
cmp
out
addr16
mov
xchg
int
mov
mov
and
mov
lods
dec
add
adc
push
jns
cmp
loopne
push
sub
xchg
outsl
inc
xor
js
xchg
cwtl
inc
dec
es
lret
xchg
pop
xor
inc
mov
mov
aad
sbb
imul
dec
cld
bound
lds
mov
js
ret
dec
notb
mov
sbb
outsb
xchg
dec
dec
sldt
xchg
cmp
adc
and
mov
jb
ret
mov
gs
or
pop
stos
xor
pusha
inc
or
adc
and
push
ds
mov
in
mov
pop
inc
cmp
fdivl
mov
pushf
inc
xchg
push
enter
fs
push
push
in
mov
mov
outsb
std
jmp
outsl
hlt
mov
aam
lds
pop
dec
pop
scas
xor
pushf
or
lahf
jecxz
mulb
into
mov
and
push
and
sub
mov
in
scas
mov
negl
orl
mov
mov
lods
push
or
push
sti
lahf
pop
jl
mov
scas
rorl
add
orb
push
clc
jne
dec
adc
mov
in
in
jnp
enter
mov
mov
mov
mov
outsl
push
add
mov
sub
mov
out
add
or
mov
mov
cmpsl
leave
mov
mov
rcll
mov
ret
xchg
cmpsl
pop
lret
mov
int3
mov
rorb
adc
dec
or
cmp
pop
push
andb
xor
xchg
sbb
call
je
pushf
cmpsb
sub
fildl
sbb
jp
xor
lret
mov
inc
adc
push
arpl
xor
xor
xchg
xor
scas
ja
bswap
sub
xor
mov
imul
mov
inc
or
je
inc
fcmove
mov
shl
adc
out
pop
pop
add
sbb
dec
and
add
je
add
ret
imul
pusha
cmp
notb
dec
mov
dec
adcb
cmpsl
xor
stos
sub
call
stc
dec
in
pop
mov
cmp
jno
sub
jne
les
mov
lods
or
fsts
mov
fisubl
mov
jo
or
push
popf
cmp
pop
pop
mov
sub
cltd
cmp
mov
mov
add
dec
or
dec
sahf
adc
jno
sbb
imul
fdivrl
add
jge
adc
lahf
inc
push
add
test
push
nop
aad
iret
lock
adc
pop
add
inc
adc
inc
jmp
pop
sbb
mov
negl
scas
pop
cmp
inc
mov
mov
adc
orl
add
mov
jp
pop
mov
je
cmp
pop
add
das
sarl
divl
xchg
jns
dec
adc
jno
test
mov
mov
fistpl
mov
mov
movsb
daa
mov
or
cmp
out
cmp
out
imul
sub
xchg
pop
push
in
mov
pop
lcall
mov
roll
pop
mov
aaa
jecxz
add
cmpsb
clc
int
sahf
mov
xchg
dec
lret
xchg
cmp
lahf
cmpsl
sub
jl
jge
dec
xrstor
decl
fldl
mov
sarb
mov
orl
mov
lock
xchg
inc
or
add
push
mov
jle
jae
stos
in
push
aas
sahf
cs
gs
push
push
add
into
ret
lock
dec
aad
xchg
inc
xchg
jmp
test
leave
mov
into
xor
pushf
divl
adc
sub
insb
pop
sbb
push
sub
enter
fistpl
adc
mov
sub
decb
sbb
jmp
icebp
adc
je
push
dec
jbe
inc
subl
cwtl
inc
or
xlat
pop
add
sbb
add
out
adc
jp
dec
sarl
cmp
inc
imul
jo
xchg
mov
mov
in
lret
insl
icebp
lret
lods
inc
or
mov
sbb
push
xor
mov
in
insb
pop
outsb
nop
inc
stos
mov
mov
aas
pop
lods
sub
jb
les
int
add
ss
out
imul
test
push
fnstsw
xchg
mov
cmpsl
jo
sahf
xchg
jecxz
lret
rol
adc
insb
ljmp
rolb
jmp
sti
fnsave
push
cld
xchg
ds
popa
or
push
cld
pop
pop
jmp
or
sbb
das
jae
add
xor
jno
pop
sub
repz
mov
jno
in
lods
repnz
hlt
inc
adc
into
inc
adc
inc
sbb
sub
leave
popa
push
out
xchg
ljmp
inc
sbb
mov
hlt
fldl
lret
mov
scas
call
mov
ja
push
jecxz
mov
notl
dec
lock
shrl
aad
sbb
xacquire
jle
rcll
mov
fistl
fwait
inc
cltd
sbb
cld
enter
adcl
aaa
adc
push
add
jne
imul
sub
cs
xor
test
mov
mov
or
adc
fisubrs
xor
fsts
mov
inc
cld
inc
pop
add
aam
cs
or
mov
int
or
jecxz
mov
lret
xlat
jl
jae
addr16
sub
dec
and
dec
js
push
fstpl
inc
or
sbb
xchg
fs
push
jno
jne
adc
loopne
adcl
mov
lret
bound
out
gs
movsl
sub
das
mov
xchg
xlat
jl
sti
arpl
pop
and
test
jno
daa
mov
sarl
aaa
lcall
sbb
cmpl
push
or
adc
fcmovbe
adcb
dec
jae
xor
xor
pop
mov
mov
lcall
test
andl
and
js
popf
aaa
sbb
clc
stos
inc
ret
mov
movsl
outsb
mov
ret
jo
fildl
js
lcall
or
inc
xchg
xchg
cmp
scas
adc
test
js
lcall
mov
je
xchg
lods
jno
ror
fdivrl
or
jle
cld
push
ljmp
icebp
cwtl
sub
pop
enter
std
xchg
sub
jo
mov
bound
jnp
jae
pushf
sub
mov
cmp
into
jbe
sti
and
xchg
out
push
clc
mov
lods
psrlw
or
sbb
scas
xchg
fs
outsl
std
pop
mov
and
call
mov
movsb
and
test
mov
popf
push
pop
adc
out
add
mov
mov
xchg
inc
dec
or
jae
cld
pop
sub
popf
push
cmp
dec
and
jl
push
pop
lcall
decl
adc
xchg
inc
push
push
mov
dec
dec
push
rcrb
negl
xchg
sub
and
inc
mov
cmpsl
jnp
lcall
inc
push
js
aam
sti
push
jmp
cld
cmp
mov
or
push
enter
fwait
sbb
fcmove
test
or
movsl
mov
shll
pop
lret
xchg
cmpsb
daa
aas
mov
push
push
sbb
xchg
into
scas
or
test
cmpsl
test
and
sub
mov
int3
mov
mov
mov
xlat
stos
push
ret
jb
pop
fsts
test
xchg
and
jns
inc
mov
je
add
cmp
sub
xor
loope
pavgw
popa
mov
ljmp
adc
daa
xchg
jg
lret
ss
pop
sbb
pusha
mov
mov
jne
mov
adc
pop
push
inc
mov
xorb
pop
push
into
xor
jecxz
add
test
cltd
cmp
loopne
xchg
jmp
rep
ss
add
mov
popl
roll
fistpl
adc
jle
test
cmpsl
fucompp
outsb
and
cmp
xchg
sub
add
cmpsl
cs
push
movsb
sub
int
fnsave
sbb
std
and
ss
jmp
and
xor
loope
das
aaa
mov
dec
clc
push
mov
xchg
jmp
aam
in
jne
sub
mov
mov
push
int3
leave
mov
mov
sbb
xlat
jge
pop
repnz
lahf
inc
mov
scas
jns
sbbb
or
insl
lock
loop
cltd
jno
punpckldq
xlat
jp
ja
jl
scas
mov
sbb
aas
add
xchg
add
mov
insl
inc
pop
push
or
sti
mov
or
or
xchg
repz
inc
pop
jmp
jno
push
loopne
mov
mov
add
xchg
sbb
xlat
jmp
inc
or
mov
movl
int3
pop
stc
cltd
mov
xor
scas
cvtdq2ps
fs
xor
xor
fists
cmp
int
jb
rol
jno
or
out
sbb
push
in
popf
lahf
test
pop
repnz
add
or
jl
insl
sbb
bound
enter
decb
pop
mov
test
mov
test
shlb
inc
add
in
std
push
test
out
cmp
inc
xor
je
lock
lods
orb
call
add
push
jbe
out
lds
sahf
aaa
into
push
fstpt
sub
mov
rorb
ds
xor
insb
add
fidivs
into
xchg
xor
mov
add
push
or
and
push
stos
mov
test
iret
xchg
in
xchg
clc
call
xchg
gs
outsl
je
pop
add
bound
ficoms
mov
jb
inc
fwait
inc
jae
push
mov
addr16
xor
push
mov
mov
mov
sbb
dec
pop
dec
inc
mov
or
push
adcl
xor
dec
sbb
dec
rclb
les
lret
cmc
pusha
push
and
das
popf
in
jp
iret
shll
adc
ja
mov
or
rol
mov
xchg
sbb
or
inc
fldl
push
inc
in
jae
mov
aad
nop
in
or
test
pop
sub
push
inc
mov
and
bnd
pop
insl
loop
jmp
sti
and
cmp
arpl
test
mov
pop
push
mov
jmp
jecxz
xchg
aaa
mov
lods
orb
lds
push
lcall
test
incl
scas
pop
lds
mov
sub
popf
cmp
add
push
aam
mov
xchg
aas
lods
mov
testb
push
or
sub
adc
dec
xchg
lea
out
inc
sbb
leave
nop
dec
dec
aaa
popf
pop
cltd
dec
adc
cmpsb
sub
jge
fstps
call
mov
out
les
pop
inc
in
out
cld
data16
sti
pop
insb
or
sbb
call
std
or
xor
out
push
jbe
cs
mov
xor
stos
xor
les
outsb
push
stc
bound
push
push
jne
stos
das
mov
inc
lcall
sub
in
inc
mov
movsb
dec
or
push
into
test
xchg
push
fisttpll
lret
xchg
daa
push
mov
dec
cld
inc
inc
adc
in
mov
aaa
es
mov
mov
mov
filds
jecxz
dec
adcl
dec
stos
pop
add
xchg
jno
mov
mov
fnstsw
sbb
lods
xor
movsb
pop
sti
xchg
push
iret
mov
aas
pushf
mov
mov
jo
jecxz
repnz
cli
pop
mov
inc
ret
xchg
lcall
sbb
les
iret
add
jp
adc
jno
rclb
cmp
push
test
sbb
lret
pop
ss
in
cmc
pop
jmp
cli
js
dec
lcall
add
mov
and
xchg
cmc
sbb
shll
sarb
iret
dec
or
push
iret
push
mov
jle
adc
loopne
xchg
mov
pop
nop
cld
fs
mov
sbb
xchg
cmp
fidivrl
mov
loop
push
pop
sbb
addb
or
sub
add
fisttps
jb
inc
cmp
scas
xor
pop
add
orl
add
sub
adc
push
xchg
jg
lea
or
rclb
pop
mov
jecxz
imul
push
add
xchg
mov
std
data16
or
scas
add
pop
add
call
int3
mov
loope
pop
dec
ficoms
mov
lods
xor
cs
adc
dec
insl
in
jmp
dec
pop
push
stc
dec
or
cmp
popa
test
mov
cltd
push
jmp
dec
scas
ss
paddq
dec
pop
add
inc
flds
sub
and
jns
ficompl
cmp
mov
dec
adc
cwtl
inc
flds
test
xlat
cmp
fcmovnbe
dec
aam
in
add
xchg
aaa
jae
adc
and
pop
cld
imul
and
jb
or
bound
pop
mov
fbstp
fisttpl
ret
xchg
mov
mov
xchg
inc
aaa
cmp
push
sub
out
into
mov
bound
loopne
stc
jg
ds
out
into
sahf
cmp
or
shrl
lret
lea
or
sbb
jmp
inc
adc
and
movsl
xor
jge
popa
pop
add
push
and
movsb
xor
fildll
lods
cmpsb
push
sub
scas
cmc
cltd
ds
mov
push
sahf
mov
xchg
sarl
push
fwait
cmp
jbe
mov
jecxz
sbb
int3
xor
jae
push
add
insl
sub
push
inc
mov
add
hlt
adc
cmp
addr16
xor
xchg
mov
push
add
lods
lods
sub
ret
je
inc
cmp
je
popf
rclb
or
jne
test
out
rcll
pop
jg
jle
lret
add
sbb
jnp
jmp
sub
push
sub
fs
or
mov
mov
adc
int3
xchg
xlat
jg
adc
test
push
popf
imul
ds
add
xor
popa
clc
or
cs
fistl
aad
dec
or
iret
imulb
movsl
mov
push
sub
cmpl
scas
mov
scas
push
stc
repz
mov
call
push
cld
pop
adc
mov
sti
dec
add
test
and
mov
add
flds
adc
ja
rcrl
ret
ss
cmp
test
mov
hlt
jle
shrb
lret
mov
icebp
push
add
and
add
add
push
push
push
popa
inc
ficoms
inc
gs
je
popa
call
rcrb
pop
jne
mov
aad
cli
out
add
or
or
orl
mov
sbb
xchg
pusha
test
out
lock
mov
mov
loop
or
jns
push
jmp
push
adcb
js
movsl
xor
mov
adc
out
sbb
and
add
sub
push
js
ficoml
lcall
out
cmp
sbb
mov
adc
rorb
mov
pop
push
ss
sahf
mov
subl
cmp
dec
inc
loopne
inc
cmpsl
xchg
dec
adc
mov
inc
adc
cmp
jns
fwait
aaa
push
fs
fcomps
test
insl
lods
pushf
jne
shrl
mov
rcrb
push
mov
mov
add
jb
cld
imul
scas
stos
icebp
pusha
jo
dec
or
adcb
sub
lret
bound
loopne
rorl
outsb
mov
cld
pop
push
cld
lods
sub
dec
ljmp
cmc
push
push
leave
outsl
aad
or
push
enter
mulb
repnz
das
mov
insb
les
dec
pop
push
sbb
sbbb
sbb
xchg
or
roll
pusha
adc
jle
cmc
adc
aad
in
dec
fdivrl
repz
add
aas
cltd
push
outsb
pop
sti
mov
add
loope
xchg
inc
aad
pop
stc
dec
or
jl
xchg
pusha
test
idivb
sub
xchg
cmp
cmp
ss
pop
pop
daa
negb
mov
sbb
jne
test
adc
jae
xor
xchg
add
pop
add
push
xlat
jnp
and
mov
cld
push
cld
insl
sbb
and
sarb
arpl
xchg
push
inc
fst
mov
fs
and
xchg
sub
sbbb
popa
mov
xchg
cwtl
mov
data16
mov
test
fdivl
pop
or
mov
sub
fsubp
sbb
xor
ss
push
incb
jmp
movsb
test
fidivl
or
mov
daa
pusha
dec
rcrl
scas
inc
mov
fbstp
aam
arpl
repnz
xchg
and
ljmp
jnp
lahf
lods
xchg
cmp
enter
jmp
inc
fcoml
jne
insl
jb
cli
mov
les
dec
adc
mov
data16
mov
fimull
mov
inc
sub
rcrb
mov
jle
fisubrs
shlb
add
push
in
cmp
sbbl
pop
je
mov
cmp
enter
add
jne
push
iret
xchg
xchg
mov
rcrl
repnz
or
inc
dec
sub
jle
push
out
xchg
lahf
inc
mov
gs
and
sub
inc
sbbl
pop
mov
xchg
xchg
mov
addr16
mov
xchg
cmp
je
pop
or
xchg
shrl
mov
decb
das
xor
incb
in
mov
fnstenv
or
mov
sub
rcrl
scas
inc
mov
fbstp
ror
fs
daa
jmp
pop
inc
sbb
stos
xchg
cmp
int3
daa
mov
sbb
inc
fstl
jne
imul
mov
ret
sbbb
fbstp
cmp
iret
fs
push
pushf
test
test
fmuls
mov
inc
sub
rcrb
mov
jl
fisubrs
into
gs
decl
push
out
cmp
test
push
pop
jne
mov
cmp
mov
clc
add
jbe
push
shlb
insb
std
xchg
sahf
cmpsb
out
test
mov
or
sub
cmp
inc
dec
sub
jl
pop
out
xchg
popf
dec
mov
or
and
xchg
sub
inc
test
jae
mov
xchg
mov
push
sbb
xchg
cmp
jne
push
push
movsl
mov
sub
sbb
sub
dec
push
in
mov
xchg
or
movsb
cmp
sub
pop
jns
mov
mov
loopne
int3
ror
gs
xchg
and
sbb
jb
or
lret
sti
in
out
push
sbb
jbe
imul
sub
mov
unpckhps
bound
push
lcall
jne
or
pop
paddw
bound
mov
jp
fildll
int3
data16
std
push
pop
out
aaa
push
test
pop
jbe
mov
cmp
mov
xor
loopne
dec
push
shlb
imul
popf
movsb
out
test
mov
or
sub
cmp
inc
dec
sub
jp
pop
lock
fwait
dec
mov
push
out
data16
push
or
sbb
mov
mov
shrb
in
push
pop
add
mov
push
montmul
cmpsb
xchg
sub
mov
sti
dec
loop
xor
iret
bound
add
push
in
mov
xchg
rcl
je
pop
hlt
movsl
cmp
sub
pop
jns
mov
scas
lcall
add
call
push
inc
sbb
mov
enter
in
lock
sbb
dec
aaa
ja
imul
sub
mov
mov
movlps
push
cwtl
sub
mov
fidivs
or
xchg
aas
sub
ret
sbb
stos
mov
shl
int3
addr16
std
add
out
xor
push
jbe
mov
cmp
cld
mov
cs
js
dec
shlb
imul
popf
mov
sbb
mov
inc
inc
sub
js
pop
icebp
xchg
cltd
dec
mov
movntq
out
data16
sbb
xchg
cmp
mov
mov
shrl
jecxz
push
adc
fidivs
push
adc
mov
fcompl
mov
sti
dec
jecxz
das
cmp
pusha
dec
push
jg
push
in
mov
mov
rcl
je
add
daa
xchg
sub
les
jp
inc
lods
lcall
in
add
push
aas
push
mov
je
mov
ret
shl
pop
icebp
adc
dec
fisttps
js
imul
mov
sbb
inc
shrb
rcrl
lock
aam
movsl
add
es
push
pop
sbb
js
loope
mov
shl
lret
sti
add
xor
push
dec
push
ja
xchg
cmp
cmpsl
xchg
sub
ret
hlt
cli
mov
sub
loop
dec
dec
shrl
imul
xchg
mov
or
aam
inc
sub
jbe
pop
repnz
xchg
dec
loopne
mov
adc
jmp
cwtl
das
cmp
test
mov
imul
rcrl
repz
xor
jbe
push
adc
mov
ficompl
mov
clc
dec
in
sub
imul
jg
out
mov
mov
iret
shll
add
cmpsl
and
lds
mov
stos
xchg
jecxz
leave
lret
iret
data16
ljmp
push
cmp
mov
jb
mov
mov
loopne
repnz
dec
loopne
xor
imul
mov
test
shld
sub
push
pop
xchg
jle
mov
rorl
cmpsb
add
call
push
pop
sbb
loop
scas
cmp
ffreep
imul
xor
mov
dec
push
js
test
cmp
xlat
rol
repnz
mov
sub
jp
dec
shrb
add
lock
mov
push
movsl
and
aad
inc
sub
je
pop
repz
xchg
dec
loope
mov
adc
out
lcall
add
xor
cmp
dec
mov
insb
ret
repz
xor
ja
push
adc
mov
fstps
or
dec
in
sub
rcrl
imul
jle
out
scas
fwait
mov
int
jbe
add
cmpsl
and
sub
lds
mov
test
lret
cld
call
out
xchg
pop
mov
jno
movsb
mov
ret
sub
hlt
ficomps
movhps
inc
xor
bound
lcall
mov
mov
or
movsl
cmp
sub
push
popa
ret
pop
xchg
jl
mov
iret
montmul
cmpsb
add
add
push
pop
push
mov
jae
loop
lods
cmp
ffree
imul
das
sbb
jb
mov
les
divb
inc
dec
shrb
add
into
mov
push
movsl
and
ds
inc
sub
jb
pop
repz
jp
loope
push
xor
push
mov
mov
aad
fcmovnu
ret
std
repz
xor
ja
push
adc
mov
das
rcl
sbb
or
dec
in
sub
rcrl
imul
jl
out
lods
lcall
add
cmpsl
and
xchg
sub
pop
jae
mov
cmpsl
xchg
jecxz
enter
out
cwtl
sbb
xchg
pop
mov
outsl
or
aam
shrl
repnz
push
adc
loope
das
jns
popa
pushw
adcb
ljmp
cmp
sub
push
pop
ret
pop
xchg
jnp
mov
into
incl
lds
push
mov
jb
jecxz
test
push
idiv
pop
icebp
sub
mov
dec
dec
js
jg
cmpsl
ds
mov
lds
mov
and
inc
shrb
add
lret
mov
mov
in
push
movsl
sbb
ds
outsl
pop
pop
hlt
lea
jnp
loopne
push
xor
xchg
xchg
insl
fcmovu
ret
cld
hlt
mov
loopne,pn
pusha
dec
adc
mov
xor
rcl
sbb
add
daa
cmp
pop
inc
insb
add
pop
out
stos
cltd
mov
lret
lret
jbe
std
in
test
push
pop
xchg
sub
aas
pop
jno
mov
movsb
xchg
in
vpunpckhbw
in
cltd
push
sbb
xchg
and
popf
mov
aad
mov
pop
repz
dec
loop
sub
imul
mov
xchg
call
or
imul
pop
jns
mov
int3
adc
xor
das
dec
push
pop
mov
jo
in
cmpsl
cmp
add
stc
pop
repnz
mov
dec
dec
jns
jge
test
fwait
sahf
xchg
sarb
dec
and
in
inc
inc
shrl
arpl
lcall
and
sbb
inc
xlat
cmp
cmc
mov
jl
fsubp
imul
xor
xchg
gs
mov
cmp
cmpsb
xlat
outsb
fcomp
ret
pop
or
cmc
mov
adc
mov
xor
rcl
sbb
out
es
push
inc
insl
add
js
lock
lret
cld
ljmp
push
cmp
mov
mov
shrb
jecxz
lcall
and
pushf
xchg
mov
fstps
or
dec
jecxz
sub
pop
bound
xchg
jle
xor
shll
cmp
pop
mov
mov
lret
sti
add
cltd
xor
dec
push
and
lahf
cmpsb
ds
shrb
pop
repz
and
jp
jl
test
das
iret
mov
mov
and
out
inc
inc
aam
jne
add
xchg
xchg
repnz
mov
mov
sbb
inc
fdivs
cmp
lds
testb
jge
push
adc
fwait
xor
xor
push
addl
outsb
fld
pop
or
cmc
mov
sub
adc
mov
xor
into
rcrb
mov
lock
out
and
insl
add
ja
icebp
test
mov
leave
js
sti
call
xchg
cs
cmp
pop
insl
jo
dec
mov
ret
shrl
loope
lcall
and
fwait
test
mov
cs
pop
hlt
or
dec
in
sub
pop
popa
imul
jl
xor
iret
mov
add
test
cmp
aad
push
pop
pop
lea
mov
enter
add
lcall
and
popf
movsl
aas
mov
pop
hlt
sub
mov
inc
dec
jnp
jnp
test
xor
mov
mov
and
jge
inc
aad
je
add
nop
xchg
repz
mov
mov
sbb
fdivs
push
pop
testb
jge
fcmovu
imul
cld
fwait
xor
xor
push
addl
lds
cmc
mov
sub
jp
dec
adc
mov
xor
int3
rcrl
mov
out
dec
out
and
aam
inc
insl
add
jbe
repnz
xchg
mov
adc
out
inc
sbb
das
dec
cmp
pop
imul
mov
ret
hlt
filds
lcall
and
lcall
in
aad
hlt
push
push
dec
in
daa
jnp
pop
pusha
insb
add
mov
and
int
dec
incl
test
insl
push
pop
pop
mov
mov
adc
xor
xor
dec
push
and
pushf
mov
insl
add
cmc
pop
hlt
adc
jns
stos
inc
xchg
lcall
jmp
or
jle
inc
aad
jb
add
mov
mov
mov
pop
add
xor
das
imul
in
cmpsl
jle
imul
sti
pushf
xor
dec
mov
ds
fsubrs
lds
testb
dec
adc
jns
add
lret
iret
pop
mov
in
push
out
and
add
movsl
xchg
mov
jns
clc
in
inc
pop
sbb
pop
push
mov
lahf
mov
jge
rcl
repnz
unpcklps
mov
and
cwtl
addb
mov
pop
cmc
add
es
pop
pop
insb
add
mov
and
int3
mov
inc
ss
xlat
outsb
push
push
pop
mov
mov
adc
sbb
leave
dec
dec
and
fwait
mov
outsb
add
and
lea
inc
jnp
ja
stos
inc
xchg
cwtl
cltd
xor
mov
pusha
call
or
jg
ds
jo
push
popf
mov
and
loopne
adc
xor
das
addr16
popa
clc
test
jg
fcomp
imul
cli
popf
xor
mov
pusha
dec
mov
ds
fnstenv
aam
pop
push
hlt
testl
js
add
lret
mov
jmp
call
push
cmp
pop
repz
les
mul
stos
inc
adc
ss
pusha
push
mov
jle
mov
add
mov
mov
xchg
addb
mov
call
or
cmp
add
ja
xor
lret
cld
add
outsl
dec
push
enter
testb
ret
adc
hlt
sti
add
sub
xor
inc
dec
and
cltd
lahf
inc
xlat
sarb
pop
cmc
and
mov
jne
lods
inc
xchg
xchg
lcall
jmp
jmp
insl
outsb
pop
pop
sahf
mov
and
test
xor
gs
stc
addl
pop
fsubrs
clc
sahf
xor
pop
dec
mov
aas
mov
fidivl
rol
pop
add
clc
and
in
pop
inc
push
lods
jbe
add
enter
cld
jmp
aas
dec
cmp
insl
jo
hlt
mov
ret
hlt
loope
inc
adc
lcall
imul
insl
out
fiaddl
popf
or
cmc
mov
and
pop
arpl
stos
xchg
jle
fldcw
shlb
add
push
out
and
push
pop
outsb
add
cmpsl
lods
mov
mov
inc
xor
fnstenv
push
leave
pusha
test
mov
rcll
sub
lret
inc
dec
and
xchg
popf
inc
fmul
mov
pop
mulb
or
es
jge
jae
lods
inc
xchg
xchg
fwait
xor
mov
in
mov
cmpl
pop
or
mov
loopne
stos
adc
inc
fldt
xor
enter
stc
addl
insl
add
negb
and
mov
inc
mov
fidivl
rol
pop
add
clc
and
push
lods
je
add
lret
sti
out
jmp
dec
cmp
imul
mov
sarl
lods
inc
adc
lret
push
call
outsb
in
fadds
popf
or
testb
bound
xchg
jl
fldcw
into
pusha
idiv
push
push
call
push
pop
outsl
push
mov
xor
stos
lea
stos
inc
xor
fidivl
push
leave
pusha
subl
lahf
movsb
out
rclb
icebp
testl
mov
xchg
fwait
inc
fmul
mov
or
in
pop
negb
or
adc
pop
scas
inc
nop
xchg
fwait
xor
mov
arpl
in
push
pop
add
xlat
outsb
push
or
mov
ficoms
stos
paddw
xor
enter
cli
addb
sbb
aad
add
cmc
lahf
ss
sub
push
jp
test
jb
iret
pop
add
stc
nop
and
in
push
inc
pop
scas
jae
add
mov
pop
sbb
dec
cmp
push
pop
cmc
sahf
mov
adc
fisubrs
xor
lret
bound
mov
xorb
pop
sahf
or
and
stos
xchg
jnp
fisubrl
popa
clc
incb
call
push
push
outsl
push
mov
xor
fcmovnb
mov
inc
cs
jb
dec
leave
pusha
subl
aam
pop
scas
lock
add
int
inc
and
xchg
cltd
inc
fmul
mov
or
jmp
negb
xchg
sub
scas
inc
nop
fwait
xor
mov
fs
mov
xorl
xlat
outsb
push
mov
mov
fcoml
stos
or
das
xor
pusha
dec
fs
jg
dec
out
mov
insl
add
hlt
mov
and
mov
inc
lods
lcall
in
cli
xchg
pop
and
jge
inc
sbb
movsl
xchg
ss
and
adc
ss
push
mov
adc
fsubrl
xor
int3
arpl
mov
xorl
testl
jns
fldt
lret
stc
cld
add
xor
jo
xchg
mov
ret
mov
inc
sub
fdivl
dec
lret
push
xchg
pushf
mov
sbb
and
aaa
into
inc
inc
and
jbe
push
in
xchg
xchg
inc
fxch
mov
or
jmp
xchg
sub
cmp
insl
pop
mov
lea
into
gs
mov
test
fsubrs
push
or
mov
ficoml
or
inc
fisubrs
sub
gs
jge
push
out
sahf
sbbl
shrl
add
mov
and
mov
inc
stos
cwtl
fnsave
enter
sti
xchg
sbb
sbb
mov
les
mov
adc
inc
jae
imul
xchg
sub
fisubrl
xor
sub
mov
xorb
or
cmp
push
lods
lea
fsubrl
leave
arpl
cli
add
xor
sbbb
push
jno
test
aaa
mov
sarl
sub
lret
bound
sti
xchg
lcall
mov
icebp
pop
sahf
and
cmp
aas
inc
and
in
xchg
xchg
inc
fcmovb
mov
or
out
clc
sbb
xchg
sub
cmp
imul
mov
data16
mov
test
xor
jo
push
or
test
sub
fcoms
fildll
sub
lret
data16
jnp
push
call
into
iret
outsl
push
add
mov
and
inc
rclb
stos
inc
test
fidivs
leave
leave
pusha
sti
jmp
call
mov
jo
popf
mov
fsubrl
adc
xchg
cmp
rcr
int3
jl
ds
push
mov
loop
divl
sbb
das
jl
mov
xor
scas
enter
shl
mov
pusha
clc
cmp
cmp
insb
pop
sbb
pop
fyl2xp1
repnz
mov
and
mov
lods
mov
mov
add
shl
adc
mov
movsb
or
stos
jecxz
shr
repnz
pop
pop
ret
inc
scas
cmp
xor
sub
vpsubsb
xor
cltd
mov
insl
orb
cmp
xor
cmp
bound
jl
popf
xchg
mov
test
mov
scas
sahf
sti
mov
mov
and
dec
sti
jae
scas
push
jmp
clc
test
cmpsb
jge
sbb
ss
inc
movsb
bswap
mov
int3
in
or
fstp
and
sarl
push
mov
mov
and
in
out
pop
mov
add
nop
add
imul
cltd
arpl
sub
repz
cmp
js
lahf
sahf
mov
push
in
push
mov
push
pop
sbb
pop
fnstenv
inc
inc
xchg
fwait
push
jno
sub
mov
fsubrs
mov
sbb
inc
dec
mov
fldcw
mov
adc
movsb
popf
ret
jmp
adc
push
inc
jg
inc
cld
mov
cmp
stos
push
jp
insb
mov
fbld
pop
inc
int3
sbb
dec
mov
xchg
sub
fbstp
xlat
lods
dec
in
imul
fwait
sahf
lds
das
test
push
scas
ljmp
ja
mov
je
inc
por
sbb
inc
fwait
or
sbb
mov
rcl
add
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
sub
shll
sub
adc
jb
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
outsb
lcall
ret
or
jb
sbb
xor
leave
xchg
shrb
pop
jmp
dec
lret
je
ret
sahf
adc
shll
ja
cwtl
das
roll
jo
