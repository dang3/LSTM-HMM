and
pop
xchg
add
dec
add
enter
add
ja
arpl
imul
nop
fnstenv
jg
push
mull
addr16
mov
mov
sbb
and
or
repz
cld
mov
test
xor
push
mov
add
or
inc
pushl
ret
mov
enter
ret
pop
pop
push
movsb
shrb
fwait
gs
lret
ja
xchg
jb
nop
inc
sub
cmpl
loop
jle
movsl
or
dec
mov
add
mov
out
and
sahf
mov
xlat
pop
sbb
decb
xchg
add
and
les
jmp
inc
push
dec
mov
sbbb
cltd
cmp
cmp
mov
outsb
enter
push
enter
push
push
insb
xchg
insl
sub
or
push
lods
sbb
roll
sarb
mov
sti
sbb
add
xchg
mov
bound
xor
and
rcrb
outsl
push
push
lcall
sbb
xor
xchg
sub
gs
and
inc
clc
push
in
inc
stc
lods
dec
out
shrb
xchg
xchg
outsl
add
out
out
movsl
jb
in
aad
jl
add
dec
jl
or
and
mov
aaa
add
push
push
ljmp
add
push
add
inc
push
add
outsl
ret
jmp
bound
mul
dec
mov
mov
mov
push
roll
out
mov
jns
jge
mov
mov
jg
ret
mov
mov
sbb
inc
mov
add
jno
out
cmp
add
lcall
popf
push
pop
xchg
mov
lea
and
outsl
xchg
xchg
jb
lods
in
icebp
sbb
in
rolb
scas
sub
mov
mov
test
sub
iret
xchg
add
xchg
add
movsb
cwtl
sub
xchg
mov
or
fildl
pusha
mov
repnz
fisttpl
xchg
rorb
jecxz
xchg
pop
out
xor
fnstsw
jb
movsl
mov
in
rcl
sti
xchg
xchg
pop
add
jl
add
adc
jecxz
push
push
test
dec
lret
xchg
outsl
sub
push
adcb
repz
jnp
les
adc
mov
dec
pop
sbb
mov
repz
sub
xchg
xor
test
loop
jmp
and
subl
call
sub
and
or
cmpl
call
nop
mov
sbb
sbb
dec
adc
push
in
xor
movsb
mov
fisubl
add
out
fidivrl
xchg
jb
rcrb
loopne
sbb
gs
out
dec
imul
mov
mov
inc
mov
dec
adc
mov
cmp
daa
in
sbb
adc
xchg
jle
jmp
out
mov
mov
pop
push
sahf
sub
sbb
mov
imul
ret
jne
rorb
dec
ficomps
xor
shlb
xor
or
push
xor
movsl
shrl
insl
xchg
sbb
lret
lds
lret
dec
fcmovu
lahf
lret
test
cmc
lock
cmp
fcomi
or
push
push
cmc
mov
dec
fcmovnu
insl
sub
inc
sub
dec
xor
inc
push
inc
inc
dec
dec
xchg
jle
xchg
or
repnz
ds
sbb
cmp
push
stc
pop
arpl
adc
add
cmpsb
jmp
or
scas
dec
dec
movsl
or
fs
mov
jb
data16
or
xchg
loop
jno
sahf
inc
mov
in
xor
cmc
or
test
in
adc
mov
and
mov
cli
mov
inc
rorb
jmp
scas
testb
gs
cmp
imul
imul
pushf
mov
push
ret
test
push
sar
sarl
aam
test
lcall
roll
test
aad
sahf
sbb
ja
mov
cmp
lahf
jmp
cmc
push
out
xchg
inc
rorl
cmp
ret
add
and
inc
or
lds
ret
xor
jnp
lret
rorl
add
in
pop
sbb
je
int
cmp
xor
fdivr
jmp
xchg
cli
inc
push
pop
mov
or
jnp
shl
xchg
fwait
inc
jnp
lret
sub
nop
in
lea
cmp
lret
insl
cli
fnstsw
xor
lahf
dec
push
wrmsr
and
jnp
push
xchg
inc
movd
pop
repnz
shld
lcall
inc
pop
xlat
bswap
mov
and
cmp
roll
lods
adc
mov
movups
lret
push
add
and
orb
rorb
call
mov
fwait
sub
or
mov
adc
add
mov
adc
ljmp
fistl
paddusw
adc
xor
ss
jg
or
ja
xchg
sbb
jo
outsl
adc
or
and
nop
dec
pushf
jb
mov
ljmp
or
leave
mov
inc
adc
ret
or
sbb
sub
in
mov
mov
imul
cld
cmc
inc
aam
popa
mov
inc
repnz
inc
loopne
mov
cmc
loope
imul
push
jns
push
in
xchg
daa
fwait
in
clc
js
pop
pop
rolb
call
mov
test
adc
dec
mov
loopne
adc
movswl
out
repnz
lret
stos
jge
movsl
sbb
dec
leave
xor
ds
push
scas
dec
in
mov
xchg
lret
xorb
rorl
out
mov
cmpsb
cmp
xor
adc
pushf
loope
add
or
hlt
stos
mov
jns
pop
call
or
call
xchg
lret
cmpsl
xchg
stc
rclb
lock
adc
inc
adc
fists
push
adc
rcll
loope
lcall
rclb
out
insb
icebp
dec
xchg
cmpl
gs
or
andb
stos
pop
jbe
cmp
imul
addr16
imul
xchg
dec
aad
pushf
xchg
lret
popa
mov
repnz
dec
dec
sbb
not
in
pusha
xchg
xchg
adc
inc
push
push
dec
out
lret
cli
jns,pn
lods
push
xor
lcall
xchg
add
scas
inc
cmpsb
stc
push
xchg
das
testb
mov
lods
pop
xchg
adc
jnp
loope
fsubl
jmp
es
loope
mov
lahf
xchg
xor
fnstsw
call
or
inc
fisubrl
dec
xchg
sub
mov
jo
or
and
lcall
shrl
or
inc
repnz
sbb
jae
push
fistps
xor
sahf
jmp
and
mov
jmp
mov
sbb
stos
xchg
ret
hlt
dec
jp
xor
lret
inc
inc
push
adc
sbb
js
sbb
icebp
loop
daa
mov
adc
push
or
sbb
xor
xchg
pop
mov
les
mov
loope
inc
cmp
jmp
push
push
jle
or
add
pop
xlat
aad
repnz
aaa
xor
dec
in
rorb
mov
and
ret
jo
sbb
daa
jne
sbb
sbb
lock
repnz
sbb
outsl
and
push
jns
push
pop
push
adc
je
decl
jae
xlat
sbb
imul
push
mov
xchg
and
sub
push
lret
adc
inc
pop
mov
sbb
xchg
mov
bound
add
mov
pushl
mov
sbb
sbb
iret
lret
push
inc
xor
xchg
cmpsl
stos
or
sbb
mov
stos
mov
and
jns
jecxz
sti
inc
and
cmp
mov
and
and
lcall
push
inc
mov
sahf
cs
cvtps2pi
xchg
test
mov
push
xor
pop
sub
loope
mov
add
mov
lcall
inc
test
and
mov
jo
jp
in
sbb
inc
frndint
adc
push
and
mov
aad
inc
push
sbb
xchg
cmpl
jns
add
sub
loope
sbbl
jo
mov
pop
lods
xorl
roll
push
sahf
popf
cs
subl
outsl
imul
mov
add
pop
cmp
or
leave
out
xchg
inc
adc
pop
push
scas
adc
inc
pop
dec
arpl
pop
and
rcrb
push
dec
clc
xor
pop
ljmp
dec
scas
sub
cmp
mov
rol
and
test
cmp
xchg
and
addr16
pop
call
les
sbb
mov
adc
xchg
and
out
ljmp
pop
les
jbe
cmp
iret
sti
cmp
std
mov
jne
add
shl
out
add
mov
or
or
lret
out
and
lcall
sbb
xchg
cmp
dec
ret
sub
dec
mov
inc
adc
cmp
and
stc
fwait
and
stos
in
dec
and
cmpsl
cmpsb
inc
xor
add
and
sti
adc
mov
fwait
loop
add
es
and
daa
mov
and
inc
in
push
or
xor
rorl
ret
mov
xchg
in
hlt
insb
or
testb
jmp
and
test
flds
pop
or
and
and
outsl
mov
nop
push
sarl
ds
jp
sbb
jae
mov
std
gs
fimull
js
push
mov
lret
jecxz
lret
cmpsl
inc
pop
icebp
je
jmp
icebp
sti
jmp
lahf
sbb
and
pusha
cmp
add
pop
popl
pop
and
movl
mov
out
mov
je
cmp
xchg
and
jnp
loope
pop
jns
cmp
popa
leave
mov
enter
lret
adc
sbb
jns
andl
cmp
popa
in
cmp
mov
out
inc
scas
leave
cmp
aam
and
fwait
cmp
adc
test
test
dec
sbb
popf
mov
mov
fstps
js
mov
js
xchg
jno
xlat
mov
push
and
pop
xor
jge
sbb
sbbl
jge
adc
or
in
cmp
xchg
inc
repnz
inc
fwait
jns
loope
idiv
insl
es
jp
cs
lahf
test
lcall
and
rcr
es
sbb
pop
sbb
fmull
scas
stos
inc
fucomp
inc
les
mov
icebp
shll
cmp
pusha
mov
es
push
js
dec
pushf
in
xchg
xchg
pop
lret
test
stc
lds
pop
sub
add
test
pop
scas
push
js
xor
lods
lahf
bound
inc
pop
gs
aam
js
lahf
stos
cmp
mov
fs
sub
push
jno
fnstenv
dec
addr16
push
xchg
cmp
pop
sub
dec
pop
movsb
test
or
imul
mov
repnz
and
shlb
clc
or
xor
xor
mov
sub
dec
sub
pop
mov
in
jb
push
xor
inc
outsl
add
cmc
sub
ret
cwtl
popf
cmc
cmpsb
in
jne
xchg
insl
je
and
sub
ljmp
outsl
loopne
adc
icebp
test
or
sbb
inc
inc
or
cmc
dec
push
test
push
jns
cmp
aad
loop
xchg
or
lahf
xor
mov
sbb
dec
xchg
lret
sub
add
mov
or
test
sub
and
sub
jnp
shrb
xor
jns
test
adcl
sub
xchg
iret
gs
jne
sbb
push
sub
pop
jmp
dec
cmp
cmp
pop
in
shlb
jecxz
xchg
out
or
outsl
shll
pop
enter
shl
rorl
pop
sub
dec
dec
xchg
orl
sub
stc
mov
xchg
or
imul
cli
push
dec
sbb
lahf
lret
sub
xor
outsb
inc
fisttps
lret
ret
cmp
fdivrl
adc
int
xor
xor
out
gs
rorb
into
or
sub
xchg
push
sysexit
fistl
dec
pop
push
std
flds
sti
mov
repnz
je
lret
std
out
xchg
push
mov
mov
repnz
loop
adc
je
sbb
stos
jge
imull
sbb
and
jle
flds
mov
jmp
adc
add
sbb
push
sbb
mov
jb
sub
sbb
icebp
call
cmpxchg
lahf
jo
hlt
xchg
js
and
mov
stos
cmc
cli
adc
call
lock
lock
ljmp
iret
adc
adc
lcall
insb
cmp
in
cs
fcoml
cmpl
dec
sub
in
or
test
in
xor
pop
xor
scas
sbb
stc
sbb
jno
cmp
ret
mov
jb
mov
repnz
xor
imul
jmp
inc
xor
pop
cmc
cmc
xor
fstps
js
push
or
cltd
lahf
dec
push
leave
mov
adc
and
sub
jge
movsl
add
sbb
outsl
in
or
pusha
xchg
inc
lods
add
test
jl
sub
or
pop
push
popa
add
xor
or
add
jmp
js
loopne
roll
or
das
pusha
push
out
adc
pusha
dec
jge
inc
out
iret
pop
push
xor
push
pop
pop
sti
femms
jge
add
xchg
xor
out
or
jae
dec
and
movsl
cmc
sub
push
and
out
sbb
cmpsl
xor
mov
adc
cmpsl
arpl
fstp
aad
xchg
push
or
test
loopne
sbb
xor
ss
das
arpl
notl
test
fldcw
inc
fcoml
les
mov
mov
dec
inc
clc
push
in
mov
lcall
xor
dec
or
call
dec
push
xor
push
mov
iret
lret
dec
stc
sti
push
adc
rolb
pop
sub
sbb
mov
sarb
loopne
subl
push
mov
popl
push
xor
popa
xor
sbb
xor
xchg
push
xor
or
cmpsb
ja
scas
pop
lea
add
xchg
pop
clc
aam
pop
sbb
popl
xchg
bnd
xor
out
or
mov
test
lea
push
call
dec
push
inc
js
in
sbb
in
movsl
and
rorl
out
mov
ss
mov
or
je
xchg
adc
mov
xorl
cmp
test
and
ss
cmpsl
int
mov
add
div
mov
jnp
inc
add
leave
or
and
fcomip
ljmp
pop
sti
rcl
dec
pop
leave
popa
mov
push
cld
std
rol
or
mov
adc
or
lret
mov
aad
mov
and
inc
xchg
inc
lods
stos
cs
push
aam
cmp
add
jecxz
push
shl
and
jbe
push
jmp
mov
icebp
xchg
or
cmp
cmp
adc
scas
rcl
and
jg
xchg
cmp
pop
cmp
addr16
add
and
roll
in
mov
cmp
movsl
pop
in
pop
call
mov
cmpsb
jne
add
aas
mov
jbe
jge
xchg
mov
leave
out
or
cmpsl
inc
arpl
nop
icebp
cmp
push
and
inc
add
or
xor
add
mov
xchg
movsb
ss
adc
cmp
push
sar
sub
adc
dec
cmp
xchg
mov
jl
dec
test
adc
cmp
inc
scas
movb
push
cmp
je
ds
sub
out
and
inc
in
add
gs
das
lcall
mov
or
ror
les
or
push
ljmp
cmp
adc
sub
inc
inc
xor
cmp
mov
in
dec
sub
outsl
fidivs
cmpsl
cmpsb
repz
cmp
push
jns
aaa
lds
adc
mov
pop
inc
js
cmp
mov
and
xchg
add
add
imul
ret
cmp
aam
mov
xchg
sbbb
test
mov
lret
xchg
cmp
repnz
jo
push
sub
mov
xchg
dec
adc
sbb
mov
std
pushl
rclb
cltd
lret
call
mov
dec
cmp
lret
test
ds
and
push
xor
and
je
mov
cmp
cltd
fsts
mov
adc
test
andl
ret
adc
iret
xchg
fisttpl
int3
sarb
inc
jmp
jp
loop
cmpl
add
call
pop
push
or
fsubs
adc
cmp
dec
pop
pop
imul
sbb
loopne
xor
in
aam
and
fidivrs
sub
xchg
jge
cmp
pushf
inc
repz
mov
fdivrs
shrl
aaa
jbe
pop
daa
std
mov
mov
mov
or
popf
mov
fcoms
dec
sub
inc
shll
mov
push
sbb
inc
stc
lea
out
test
mov
or
mov
adc
inc
ds
in
mov
out
inc
gs
mov
or
popa
xchg
and
add
outsl
nop
iret
mov
fistps
sbb
test
or
and
nop
and
out
sbb
push
jge
movsl
aad
pop
aam
jbe
dec
jl
mov
jnp
sbb
popl
or
rclb
mov
pop
loop
inc
inc
xchg
cmp
lods
lock
adc
mov
mov
ja
xor
fnstsw
shr
inc
inc
sbb
nop
ljmp
rcr
sub
rorb
xlat
or
push
loop
xor
pop
cmp
and
jae
mov
adc
cmovae
sbb
test
arpl
pop
ljmp
int
xor
lret
int
and
leave
scas
cmc
mov
mov
sub
pop
sub
dec
xchg
mov
inc
mov
std
xor
xlat
bound
dec
fimull
cmp
xor
aas
adc
popa
cmp
mov
into
pop
add
add
pop
sub
sti
cmp
dec
ds
inc
pop
inc
dec
jmp
in
xchg
test
pop
jecxz
js
inc
loope
mov
cs
test
repz
std
mov
dec
cmp
adc
jg
pop
or
fwait
out
repnz
inc
pushf
pusha
leave
mov
cmp
mov
and
xchg
cmpsb
inc
cmp
xchg
repnz
leave
inc
std
rolb
mov
test
dec
fcmovb
add
xchg
cmp
sahf
shlb
pop
roll
add
stc
pop
daa
sbb
jecxz
xlat
mov
adc
inc
cmove
gs
fs
sub
sbb
push
mov
pop
pop
repnz
fwait
jmp
push
dec
mov
adc
dec
ffree
repnz
sub
mov
push
aad
sub
in
mov
mov
or
lret
test
je
dec
push
sbbl
push
dec
jnp
cmp
dec
mov
sbb
stos
jo
shrb
dec
fcmovb
cs
cmp
cmp
dec
add
add
daa
sti
adc
mov
mov
iret
dec
mov
mov
and
je
fwait
sub
insl
adc
adc
pushf
cmp
lea
loopne
in
push
push
xor
push
jp
pop
mov
daa
and
cmp
xchg
add
pop
repnz
ds
mov
pop
and
xor
rcrb
rorb
notl
xchg
push
sub
arpl
pop
xlat
aad
test
iret
shlb
sbb
lret
xchg
fldl2t
lea
imul
in
pop
cmp
fs
dec
dec
adc
pop
cmpsl
dec
cmp
cmp
aas
sbb
adc
xchg
push
les
and
mov
popf
rclb
sub
push
push
out
mov
popf
dec
or
lea
jl
cmp
dec
adc
push
dec
inc
and
inc
mov
lret
add
jo
add
rolb
mov
inc
adc
dec
loopne
and
inc
sbb
sarb
sub
fistps
lcall
dec
push
or
push
mov
arpl
inc
push
push
test
mov
test
jae
imul
adc
pop
ljmp
and
xchg
jl
lret
dec
clc
and
es
dec
pop
mov
pop
jp
testl
xchg
ja
mov
add
xchg
mov
push
xor
mov
sbb
rolb
iret
pop
stos
push
xor
dec
mov
pop
jb
dec
in
push
add
xor
mov
test
jl
cmp
xchg
dec
inc
in
adc
xchg
dec
jmp
mov
mov
xchg
push
push
lea
lods
pop
popl
and
push
add
sbb
add
in
mov
push
lods
mov
ds
push
adc
push
pusha
and
push
call
sti
call
sbb
xor
out
push
jg
pop
aam
fldenv
pop
les
rolb
dec
push
leave
xchg
sbb
test
fsubrl
pop
pop
imul
lock
shl
es
adc
pop
test
push
test
xchg
int
enter
xor
jl
fnstsw
xor
push
push
rorb
cli
mov
adc
jno
loope
or
push
mov
aam
add
jecxz
addr16
testl
dec
sbb
jns
dec
push
sbb
push
inc
aad
cmc
push
push
imul
lret
adc
push
jle
sbb
mov
ja
repz
cmc
ret
cmpb
push
fdivr
movsl
stc
sbb
xchg
aad
push
mov
repnz
sarl
xor
push
xor
pop
mov
pop
gs
xchg
push
insl
or
push
test
das
push
js
inc
test
push
xor
xor
xchg
sub
sbb
push
xchg
adc
ret
ffree
movsl
in
dec
mov
insl
adc
lds
push
adc
rorl
inc
push
mov
loope
mov
add
test
mov
add
and
inc
add
xchg
aas
inc
mov
jmp
adc
aas
cmp
scas
mov
or
mov
pop
dec
mov
and
mov
cmp
jb
sbb
lcall
stc
adcb
ret
jne
lcall
into
fdivrs
jmp
mov
out
add
mov
pop
add
aaa
aaa
icebp
xchg
sbb
imul
stos
add
push
mov
cmp
pop
lods
push
hlt
cli
lret
movsb
cmp
sbb
icebp
fs
pop
scas
or
ja
pop
leave
adc
into
pop
xchg
fwait
jno
dec
mov
mov
loop
incl
mov
sbb
add
ret
push
push
xchg
add
push
ljmp
sarb
int3
smsw
scas
in
jmp
js
or
call
jae
inc
fstpt
int3
clc
add
or
sti
xchg
jg
hlt
push
push
add
mov
jge
sti
push
jmp
or
ss
sbb
mov
cmp
xchg
mov
push
mov
mov
sub
cmp
inc
hlt
jbe
and
jbe
mov
test
cld
repz
sub
cli
out
call
pop
daa
out
ja
rcll
mov
pushl
cmp
gs
cmpl
jge
jp
mov
imul
jbe
lock
pushf
pushl
inc
or
mov
pop
dec
xchg
mov
jne
jae
cltd
leave
xor
or
mov
decl
xor
in
sbb
nop
nop
in
fs
sub
xchg
inc
aaa
hlt
dec
add
and
repnz
lcall
pop
jne
or
iret
mov
sti
lahf
adc
ja
adc
mov
jp
dec
cmp
pop
insb
cwtl
cmp
hlt
xchg
push
stos
aaa
fiadds
ficoml
mov
inc
andb
inc
jne
aas
adc
add
add
add
add
cmp
jns
incl
popf
or
and
add
ja
jge
jl
je
lcall
cmp
adc
sbb
xchg
add
addb
sbbb
mov
incl
or
addb
add
add
sbb
push
addb
sbb
and
push
fisttps
test
mov
adc
dec
bound
xor
pop
nop
add
in
call
push
add
pslld
adcb
dec
xorl
pushw
and
pop
add
add
incl
testl
or
add
pop
add
sbb
outsl
incl
add
mov
cli
sbb
or
mov
fbstp
push
or
ds
pusha
add
loopne
inc
lcall
adc
sbb
ljmp
add
mov
cmp
cmpsl
imul
rol
imul
movsb
add
sbb
bound
pop
dec
dec
mov
fimull
jbe
hlt
call
imul
mov
dec
stos
scas
int3
cmp
in
cld
int
dec
or
add
fs
dec
aam
push
into
test
dec
sti
sahf
out
push
in
cli
add
push
cmp
out
shrl
mov
push
inc
popa
or
push
fidivrs
rcrl
movsb
mov
sbb
pusha
adc
jns
imul
addr16
jle
pusha
scas
cmpsb
cmpsl
or
outsl
aaa
dec
jnp
dec
add
sbb
fisubrs
and
loopne
add
repz
rorb
lods
cmpsb
pop
test
add
das
in
sahf
adc
stos
sub
das
dec
repz
ret
lret
sbbb
jg
pusha
jns
loopne
hlt
sbb
or
push
add
aas
mov
nop
cwtl
sub
mov
int
out
shl
in
add
xor
notb
push
loopne
xchg
addr16
and
sub
fsts
bound
sub
mov
les
movsl
sub
fidivrl
cmpsb
dec
pop
push
stos
sub
pop
dec
jae
movsb
ret
cmpsl
fidivs
mov
sub
pop
mulb
outsb
mov
loope
push
add
xor
push
loope
jo
sub
or
jg
and
popa
add
sbb
cmpsl
imul
dec
inc
add
push
jle
jo
testb
mov
mov
pmaxub
mov
jo
pushf
data16
xchg
or
or
clc
clc
mov
xchg
add
int
sbb
sbb
sbb
pop
jge
jle
pop
outsb
nop
loopne
mov
lcall
xor
negb
stos
insb
loopne
mov
lcall
loopne
pop
ss
shl
out
lcall
xchg
pusha
or
jo
pop
test
movsl
mov
sub
mov
in
sbb
sbb
cmp
xor
sub
push
bound
mov
cwtl
and
jo
pop
adc
jg
or
add
sbb
out
mov
imul
push
sbb
scas
imul
lods
movsb
call
int
inc
lcall
jo
cmp
adc
mov
hlt
clc
push
fiaddl
lock
js
imul
pop
xor
addb
push
out
add
sbb
fbstp
outsb
je
push
mov
test
jns
xorl
dec
in
lock
sti
setle
lock
sbb
mov
popa
jo
fsubp
outsl
daa
pusha
jbe
arpl
mov
mov
mov
call
divb
dec
dec
xor
loopne
push
testb
ds
xor
sahf
xor
push
and
pushl
sub
and
lret
xor
mov
test
incl
inc
or
sbbb
dec
push
jecxz
xchg
cld
add
mov
addr16
iret
sbb
dec
and
test
xor
loope
pop
shlb
jp
add
dec
add
sub
xchg
lds
adc
stc
add
mov
lret
xor
mov
jo
cld
mov
push
inc
inc
inc
pop
xor
xchg
xchg
icebp
add
jle
popa
and
and
pop
les
mov
pop
shll
jb
cmc
ja
adc
out
xchg
and
and
sbb
push
or
push
add
jne
cmc
adc
fisubrs
loop
add
pop
jge
clc
jbe
add
jae
push
inc
adc
jo
pop
add
shrl
or
and
add
adc
ja
add
jne
cld
adc
jg
jge
jnp
add
fs
ljmp
insb
insl
push
push
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
add
inc
inc
inc
inc
jg
inc
inc
sub
dec
dec
dec
dec
dec
add
pop
adc
adc
adc
adc
pop
sbb
sbb
lcall
sbb
sbb
pop
add
add
jbe
add
sub
sub
incl
cmc
add
std
decl
decb
div
hlt
cmc
repnz
cld
std
cli
sti
clc
add
out
in
loop
pushl
and
out
out
in
in
ljmp
aam
rcl
rolb
rcr
fstp
fcmovnu
add
mov
rolb
into
iret
int3
int
lret
enter
mov
mov
mov
decl
mov
mov
movsb
movsl
mov
scas
lods
lods
stos
stos
test
mov
ljmp
xchg
xchg
nop
add
lcall
test
push
idiv
orl
decl
add
getsec
lcall
sub
ds
pusha
cmp
es
pop
and
and
and
cs
sub
add
and
sub
sbb
mov
or
repnz
add
mov
lahf
add
sbb
mov
jle
pop
add
add
add
cmc
inc
mov
icebp
push
repz
cli
outsl
add
add
adc
nop
and
addb
lock
and
jns
pop
mov
add
add
imulb
fildll
push
add
lock
mov
xor
mulb
ret
mov
mov
insb
ret
jg
mov
add
adc
data16
add
add
add
sysenter
jg
or
push
add
lock
push
mov
adc
incl
icebp
and
mov
mov
add
decl
xchg
popf
mov
out
sub
push
sub
das
fwait
mov
dec
loop
clc
adc
je
lret
push
cmp
mov
mov
stc
repnz
test
cmp
mov
inc
jge
ljmp
clc
inc
push
testl
push
arpl
xor
adc
push
ljmp
stc
ja
xchg
shll
jmp
sti
adc
pop
out
xchg
insb
push
outsl
pop
add
mov
ljmp
clc
ss
xlat
lret
aam
push
mov
add
cmp
xchg
nop
pop
or
sub
add
fistpll
scas
cli
negb
dec
jge
inc
cmp
sbb
sbb
cltd
push
cmp
aaa
lock
repz
sbbb
in
in
fs
test
add
sti
enter
ljmp
push
sub
mov
int
pop
pushf
data16
xchg
shlb
mov
push
cli
jno
out
cli
or
inc
dec
mov
mov
pop
jp
sbb
xchg
les
cmp
mov
cmp
jg
push
adc
xchg
jne
push
test
push
test
push
stos
ljmp
xchg
or
xchg
add
add
push
add
pop
add
sub
dec
add
cmp
add
and
cmpsb
mov
push
add
sub
mov
or
lods
loop
enter
push
cmp
add
addb
loope
add
daa
xchg
out
movsb
pop
test
xor
stos
jbe
mov
adc
into
addb
add
orb
mov
stos
push
andb
addb
adcb
mov
lcall
sub
add
fiaddl
stc
in
xor
and
inc
add
add
pop
jl
adc
mov
sbbb
cmp
xchg
cmpb
incl
push
add
int
mov
push
inc
addb
add
add
es
subb
into
or
inc
or
jbe
add
cmp
and
lcall
inc
adcb
mov
cltd
loopne
ret
push
ret
mov
or
add
inc
xor
subb
dec
pop
jno
mov
xor
inc
je
adc
outsl
inc
xor
push
push
add
insl
fimuls
int3
rorb
lcall
stos
dec
sbb
pop
inc
ljmp
push
cmpsb
rorb
into
push
cli
mov
movsb
sub
or
popa
add
xorb
add
rorb
mov
sub
orb
add
add
push
cmp
push
sar
xor
pop
rol
jge
jmp
bound
add
sahf
sub
or
cmpsb
and
sub
push
cmp
push
jo
sub
add
out
add
cwtl
aas
sub
mov
jnp
stos
rolb
sarb
mov
inc
inc
mov
rclb
or
or
add
das
stos
cli
shlb
and
rcrl
filds
subl
mov
sub
loopne,pn
fdivrs
sbb
aas
fdivs
cmp
rolb
add
jns
pop
cs
mov
shrb
shrl
mov
scas
add
push
pop
mov
mov
push
lret
imul
scas
ficomps
pop
sarb
add
add
push
mov
popa
jl
adc
mov
push
adc
cmpsb
xor
loopne
sub
sub
add
and
insl
jnp
mov
and
add
add
mov
fdivl
mov
rolb
out
mov
jnp
cs
stos
loopne
mov
pop
add
mov
ret
lods
or
mov
add
jne
lcall
adc
mul
lods
cmp
push
sub
sbb
dec
loopne
adc
in
jns
loopne
inc
sub
nop
ds
mov
inc
add
push
mov
add
add
loopne
outsb
or
loopne
mov
and
divb
sub
mov
mov
repz
loopne
into
addb
shl
xchg
xlat
cmp
fwait
ds
fsub
add
adc
insl
ret
fsts
adc
dec
insl
fstps
not
lcall
lods
sbb
bound
xor
mov
aaa
ret
orl
loopne
mov
in
push
pop
lock
lods
push
loope
ds
out
outsl
ss
sarb
and
call
add
xor
or
adc
gs
mov
and
adc
loopne
lcall
xchg
xor
scas
insl
jnp
mov
or
je
xor
push
out
sbb
test
push
sbb
xor
scas
add
and
inc
xchg
or
mov
jp
and
or
mov
add
sahf
mov
push
inc
mov
fidivrs
sbb
pop
loop
loopne
stos
repnz
enter
push
mov
stos
push
ds
cmp
mov
adc
int
mov
mov
ss
rorl
dec
xchg
and
scas
jbe
and
decb
xchg
lret
stos
cld
pushf
loopne
lock
sti
data16
stos
push
mov
dec
loopne
lcall
add
scas
stos
add
fiadds
neg
xor
dec
add
lahf
pusha
pop
fchs
arpl
push
add
push
or
outsb
jecxz
xchg
out
jmp
loopne
cmp
xchg
sbb
lods
and
sbb
cmp
cmpsl
stc
js
add
add
xorl
ss
mov
jb
or
mov
pop
adc
adc
sbb
jo
out
jno
push
jecxz
out
mov
jo
add
push
sahf
fdivrp
mov
or
lock
shll
enter
in
pop
cld
outsl
add
jnp
xlat
ja
ja
ja
je
ja
ja
adc
int
cld
ja
ja
ja
push
ja
ja
ja
adc
ja
ja
int
or
ja
ja
jae
les
je
xor
ret
ja
int
cld
int
shrb
iret
pop
ja
ja
ja
adc
int
cld
ja
ja
ja
stos
je
ja
ja
or
ja
ja
int
je
mov
dec
ja
jo
mov
outsb
ja
ja
int
cld
int
mov
data16
xor
ja
es
int
cld
ja
ja
ja
sbb
ja
ja
adc
xchg
ja
ja
int
jne
xchg
ja
ja
jno
sahf
ja
ja
outsl
ja
ja
int
cld
int
cltd
jns
xchg
ja
xor
ja
ja
daa
fcmovne
ja
ja
ja
sbb
ja
ja
adc
xlat
mov
jb
je
adc
add
push
je
scas
shl
outsl
adc
iret
je
pushf
je
imul
adc
jle
je
push
adc
push
or
xor
sub
je
adc
out
mov
je
rclb
imul
sbb
sub
jne
ja
jne
and
rclb
dec
scas
jne
ss
xor
push
ja
jne
ja
and
xchg
dec
js
adc
sbb
adc
jne
outsb
xchg
ret
mov
pop
dec
adc
jg
aaa
ret
jne
inc
adc
ja
jne
ja
inc
ja
jne
ja
mov
push
jne
cmp
ja
xchg
jne
ja
or
lcall
adc
ja
jne
push
test
jne
cmp
pop
mov
jne
xor
dec
push
xlat
jb
inc
aam
jp
aad
jnp
fwait
mov
inc
shll
inc
rolb
inc
stc
fwait
mov
inc
inc
fnsave
inc
ficoml
inc
fdivrs
inc
fnstenv
inc
mov
jb
inc
rolb
jb
inc
fwait
mov
inc
ret
jb
inc
rcr
shll
into
flds
fwait
mov
inc
int3
lds
jb
inc
lret
lret
jb
inc
enter
mov
lret
inc
mov
inc
mov
mov
mov
inc
mov
mov
fwait
mov
inc
mov
mov
mov
mov
stc
fwait
mov
inc
mov
movsb
inc
mov
scas
inc
mov
lods
inc
mov
test
inc
movsb
xchg
inc
movsl
jb
inc
out
incb
mov
sahf
inc
mov
out
pushf
inc
scas
jb
inc
lods
lcall
cltd
inc
stos
jb
inc
test
sbb
jb
jae
jo
jae
jo
adc
out
imul
push
jo
jae
jo
push
jo
jae
jo
outsl
out
push
jo
jae
jo
pop
jo
jae
jo
pop
jo
jae
outsl
out
jo
pop
jo
jae
jo
pop
jo
jae
jo
out
incb
cmpsl
jae
jo
inc
jo
jae
jo
inc
jo
jae
jo
outsl
out
inc
jo
jae
jo
dec
jo
jae
jo
dec
jo
jae
outsl
out
jo
aaa
jo
jae
jo
xor
jo
out
xor
jae
jo
xor
jae
jo
aas
jo
jae
jo
outsl
out
cmp
jo
cmp
jae
jo
cmp
jae
stos
out
jo
daa
jo
jae
jo
clc
and
jo
fwait
mov
adc
jb
jo
jb
and
jo
jb
and
fwait
mov
jb
das
jb
jo
jb
sub
jb
mov
jb
jo
jb
sub
jo
push
je
les
jb
adc
cltd
lds
adc
shlb
aad
sar
into
jo
mov
jo
jb
mov
jb
jo
jb
out
enter
leave
jns
stc
fwait
mov
adc
mov
inc
jb
mov
jb
jo
jb
inc
jb
jo
jb
inc
jb
jo
jb
mov
jb
jo
jb
dec
jb
jo
jb
dec
jb
fwait
mov
jb
dec
jb
jo
jb
cmp
jo
jb
mov
jb
jo
jb
xor
jb
inc
jb
jo
jb
mov
jb
jo
jb
jb,pt
jo
jb
aas
jb
fwait
mov
jb
cmp
xchg
jo
jb
data16
jo
jb
ret
cmp
jo
jb
arpl
push
jb
je
repz
jg
jb
jo
jb
outsb
jb
jo
jb
insb
jb
jo
jb
aaa
jg
aaa
push
cwtl
jo
jb
push
jb
pop
jb
ss
jg
jo
jb
push
jb
jo
jb
push
jb
jb
int
adc
jo
jb
pop
jb
jo
jb
pop
jb
jo
int
mov
mov
jb
pop
jb
jno
jne
jno
jne
jno
outsl
out
jne
cld
jne
jno
jne
cli
jne
jno
jne
out
fnsave
jno
jne
repz
jno
push
fidivl
jno
jne
outsl
out
fdivs
jno
jne
mov
jne
mov
outsl
out
jne
mov
jne
mov
jne
out
in
mov
in
mov
jne
jno
jne
loopne
mov
loope
mov
out
jne
jno
jne
in
jne
jno
jne
ljmp
out
jne
call
jne
jne
jno
jne
xor
jne
jno
jne
in
jno
mov
shll
jno
jne
fbstp
jno
jne
les
jno
jne
mov
jne
jno
jne
shlb
shll
jne
fwait
mov
jne
int3
jne
jno
jne
lret
jno
jne
mov
jne
jno
jne
mov
xchg
jne
mov
test
jne
mov
jne
jno
jne
mov
xorl
int
cld
decl
jle
rcll
jp
aad
push
sarb
push
rcll
int
cld
push
sarb
push
rcl
push
fidivrs
push
push
fdivrl
push
fstp
cld
int
in
push
fidivrl
push
fucomi
push
fdivrs
push
push
jle
int
cld
int
lret
lret
jle
push
enter
jle
push
mov
cld
int
cld
push
mov
imul
mov
jno
mov
xor
int
mov
push
mov
insb
push
lods
hlt
push
lods
jle
int
cld
int
stos
pop
push
stos
jle
push
test
push
test
je
int
cld
push
cmpb
out
mov
push
mov
push
mov
push
test
outsl
push
push
xchg
jg
push
xchg
in
xchg
jg
push
xchg
jp
xchg
jg
push
xchg
outsl
out
jl
sahf
jg
push
lahf
jge
pushf
jg
push
popf
push
lcall
push
fwait
bound
jg
push
cltd
int3
push
xchg
push
xchg
out
incb
push
test
push
test
push
cmpb
adcl
jg
push
cmpl
mov
push
xlat
jl
jne
aam
je
aad
push
sarb
shll
jg
aaa
jno
sarb
sarl
fidivrs
fbld
fdiv
aaa
jg
jl
push
ficoml
fdivrs
fsts
jl
push
divb
jg
push
les
lds
push
ret
push
ret
mov
das
push
rcrl
into
push
int
fs
lret
push
lret
pop
add
fwait
mov
push
mov
push
mov
sub
sub
jl
push
mov
mov
mov
mov
mov
mov
jl
aaa
push
push
mov
jl
push
cmpsl
jl
push
add
imul
notb
jl
and
push
add
jl
pop
stos
stc
fwait
mov
test
mov
push
xchg
jl
xchg
jl
push
xchg
jl
fucomip
fwait
mov
xchg
jl
xchg
jl
push
nop
fidivrs
fcoml
not
in
fstpt
lahf
jl
push
pushf
mov
lcall
fwait
jl
push
cwtl
jl
xchg
push
xchg
test
mov
jl
cmpb
jl
xor
jl
push
cmpl
mov
jl
mov
lea
add
jl
mov
ss
mov
sarb
stos
fistpl
sbb
add
jge
and
rcll
pop
mov
jl
mov
sub
jecxz
fdivr
out
idivb
push
mov
jle
mov
jge
jg
out
mov
push
mov
push
sarb
popa
push
xchg
jp
jae
cmpsl
jae
jp
adc
jp
jg
aaa
jg
jp
jae
jp
xchg
jp
jae
jp
lahf
jp
jae
jp
aaa
jg
aaa
popf
jp
jae
jp
fwait
jp
jae
jp
cltd
jp
repz
jg
jae
jp
xchg
jae
jp
test
jae
jp
jg
aaa
jg
jp
jae
jp
cmpl
jp
jae
jp
mov
jnp
js
jnp
js
aad
jne
sarb
sarl
js
jnp
mov
jnp
js
jnp
fistpll
js
jnp
fnstsw
fwait
mov
jnp
fstpt
js
jnp
fnstcw
js
jnp
mov
jnp
js
jnp
lds
js
jnp
ret
jnp
js
jnp
mov
jnp
js
jnp
iret
jnp
js
jnp
int
stc
fwait
mov
jnp
lret
jnp
js
jnp
leave
jnp
js
jnp
mov
jnp
js
jnp
mov
push
js
jnp
mov
push
js
jnp
mov
jnp
js
jnp
mov
jnp
mov
stc
pop
js
jnp
mov
jnp
mov
jnp
mov
jnp
js
jnp
movsl
jnp
js
jnp
mov
jnp
mov
jnp
js
jnp
scas
jnp
js
jnp
test
stc
fwait
mov
jnp
xchg
jnp
js
jnp
xchg
jnp
js
jnp
mov
jnp
js
jnp
nop
jnp
js
jnp
sahf
jnp
js
jnp
mov
jnp
js
jnp
lcall
xchg
fwait
mov
jnp
test
js
jnp
cmpb
cmpl
cld
fwait
mov
cmpl
jnp
js
js
inc
repz
jg
aam
inc
inc
js
inc
sarb
inc
js
inc
sarb
inc
jg
aaa
jg
inc
inc
fidivrs
inc
js
inc
fdivrl
inc
js
inc
fidivrl
inc
aaa
jg
aaa
js
inc
fdivrs
inc
js
inc
js
inc
js
inc
repz
jg
les
inc
js
inc
ret
inc
js
inc
sarb
jg
aaa
jg
xor
js
inc
js
inc
int3
js
inc
js
inc
lret
inc
aaa
jg
aaa
js
inc
enter
js
inc
mov
es
js
inc
repz
jg
mov
and
js
inc
mov
and
and
js
inc
jg
aaa
jg
and
js
inc
js
inc
mov
sub
inc
aaa
jg
aaa
js
inc
mov
sub
js
inc
js
inc
out
js
movsb
js
inc
js
inc
mov
js
addr16
out
adc
js
scas
js
lods
js
lods
js
outsl
ljmp
js
addr16
addr16
lds
out
out
ret
ret
addr16
js
addr16
addr16
js
addr16
out
js
addr16
js
addr16
addr16
js
addr16
addr16
js
outsl
out
js
addr16
cwtl
js
addr16
inc
xchg
outsl
out
pop
inc
js
inc
test
inc
js
inc
cmpb
fists
js
inc
cmpb
js
inc
mov
mov
or
push
mov
gs
lret
add
gs
lret
gs
ja
push
add
push
repz
rolb
rorl
rclb
rclb
pop
imul
push
add
or
jl
xor
push
mov
cmpsl
mov
add
push
jp
jnp
gs
pop
sahf
add
orb
mov
add
and
aam
xor
push
and
lcall
push
and
dec
repz
push
pop
loopne
pop
pop
adc
test
outsl
and
pop
loopne
sbb
loopne
sbb
mov
idivb
push
or
cld
adc
test
pop
out
add
mov
cmp
add
loop
add
jecxz
loopne
loope
repz
push
out
push
out
pop
repnz
sbb
push
push
lods
loopne
jmp
subl
and
lock
jmp
loopne
add
sbb
imul
sahf
negb
loopne
pushw
movl
adc
adc
adc
jb
sti
imul
pop
repnz
or
test
scas
mov
mov
mov
add
push
sub
negb
add
imul
imul
int
sbb
mov
shll
cmpsb
hlt
xor
shll
cmc
movsb
repnz
shll
mov
int
xchg
xlat
xchg
aam
mov
imul
lahf
loop
pushf
jne
mov
lock
fcmovnb
cli
mov
xchg
sub
gs
cmp
add
jb
push
xchg
in
add
imul
mov
bound
fwait
mov
ds
sub
xchg
outsl
sub
es
push
dec
dec
fcomip
mov
insb
ja
sahf
sub
adc
es
std
add
inc
ljmp
lcall
add
sbb
nop
adc
fcmovnu
lock
dec
loope
mov
std
sbb
call
and
loopne
rolb
test
sub
cmp
xlat
inc
cmp
notb
aas
xchg
ss
pop
clc
pusha
scas
push
ljmp
fbstp
and
push
ja
mov
mov
and
mov
stos
shlb
jno
jnp
jl
xor
mov
out
mov
xor
push
xchg
add
lock
add
mov
cwtl
sbb
scas
mov
cmp
inc
ljmp
cmp
clc
push
into
divb
jge
leave
and
inc
out
test
add
cld
ljmp
xor
add
ss
adc
sub
es
insb
idivl
scas
clc
or
arpl
bound
stos
cmpb
pushf
mov
int
rcr
fwait
decb
adc
xlat
mov
cli
pop
std
adc
inc
pushf
sub
lock
mov
inc
mov
movsl
dec
jg
fcomip
inc
pop
out
xor
mov
fwait
fs
ss
leave
arpl
stos
incl
inc
xchg
mov
test
push
aaa
cmp
jbe
mov
stos
add
jg
clc
xor
xor
pop
dec
dec
xor
xchg
aad
test
cmpsb
mov
repz
xchg
adc
imul
mov
fcomip
jmp
add
jl
cmpsl
cmc
mov
cwtl
shrb
rcrb
jg
jle
out
push
and
insb
in
or
push
dec
and
add
and
jg
outsl
and
or
js
cld
call
fcmove
add
movsl
xchg
or
jg
into
push
mov
and
sbb
add
cs
pop
pop
jmp
add
pop
pusha
push
mov
loopne
jg
lahf
cmpsb
test
adc
inc
xor
in
mov
jb
clc
decl
and
sbb
push
push
adc
fsubrl
clc
mov
shrb
das
call
sarb
nop
insb
mov
push
iret
jecxz
and
push
sub
inc
sar
jbe
adc
movsl
add
lcall
and
inc
das
adcb
mov
mov
addl
out
cli
fs
add
flds
xchg
incl
cmpsb
inc
decl
cltd
inc
lretw
add
pop
lahf
add
int
dec
out
mov
mov
incl
jb
xchg
inc
and
sbb
cli
mov
sub
loopne,pt
outsl
dec
decb
add
dec
cmp
add
jl
sub
push
enter
adc
jmp
mov
mov
es
jle
decl
adc
and
imull
pop
xor
sub
sbb
decl
adc
ficoml
jmp
add
inc
adc
pop
xor
mov
sti
jb
add
gs
sub
xor
add
mov
enter
mov
cmp
dec
pop
dec
mov
es
sub
sbb
sub
fimuls
cmp
and
pop
push
jg
lock
sub
xor
ds
sbb
sbb
dec
mov
outsl
cli
mov
lcall
add
ljmp
pushl
or
jbe
fiaddl
mov
jp
mov
push
dec
insb
push
or
lods
jbe
incb
cmpsl
xchg
xor
call
shrl
or
or
add
push
dec
dec
mov
adc
insl
push
mov
sarb
add
jo
shll
hlt
int3
clc
bound
scas
xor
sbb
jo
enter
leave
mov
push
mov
cmp
jns
mov
dec
mov
push
cmpsb
imul
addr16
dec
mov
mov
adc
mov
push
pushf
jo
jle
outsb
int3
push
jae
cld
loopne
jle
add
ja
loope
mov
dec
ja
dec
mov
add
lods
test
stos
inc
jnp
adc
imul
jbe
xchg
mov
add
or
jl
pop
pop
ret
add
or
jp
cmp
push
xchg
push
sbb
or
shr
add
dec
and
cmp
roll
cs
sub
sub
xchg
popl
adc
sbb
push
mov
lock
adc
add
add
push
push
sbb
pop
sub
inc
rorb
adc
sbb
inc
js
sar
and
adc
add
adc
mov
adc
sahf
jecxz
std
mov
add
jbe
adc
jle
xor
adc
sbb
adc
sbb
and
xor
subb
mov
rcll
push
jle
jl
sbb
sub
push
adc
adc
push
pop
cmp
jle
xlat
jg
adc
or
sbb
adc
pop
push
xor
adc
ficomps
inc
adc
dec
push
add
xor
adc
or
and
sub
cmp
rcr
repnz
xorb
popa
fidivrs
and
es
pop
xor
add
mov
or
xor
and
inc
pusha
push
sbb
sahf
add
push
dec
push
adc
addl
add
and
add
adc
sbb
rorb
add
adc
add
lret
mov
sbb
test
lods
lcall
and
rcrl
imul
xor
fildl
jo
xor
xchg
cld
add
sbb
adc
testl
ljmp
decl
add
add
mov
dec
aas
push
nop
or
mov
add
adcb
jno
or
xor
push
ds
sub
pusha
adc
xor
inc
and
sbb
pop
fisubrs
push
xor
cmp
and
and
and
pop
add
incb
sti
daa
push
daa
or
shrb
xor
pop
or
sbbb
xor
jo
jno
rcrl
push
xchg
add
cmpsl
imul
sbb
lcall
insb
fucomi
xchg
add
aam
jl
push
push
or
add
or
cs
push
dec
mov
xor
pop
add
add
push
sub
push
sbb
sub
dec
add
mov
jge
jge
sub
push
xor
sbb
lods
popa
sub
push
xor
fcomip
add
inc
cwtl
das
es
xor
cmp
decb
sbb
adc
ljmp
and
mov
mov
adc
mov
add
add
mov
insl
rcll
hlt
cwtl
push
or
dec
testb
and
shl
sbb
fmuls
lock
add
fadds
and
inc
jle
add
cmovs
hlt
cld
orb
aaa
out
jb
jle
pop
popa
sub
jecxz
push
sarb
or
aas
xor
xor
add
sbb
adc
int3
fidivrl
sbb
lret
xor
dec
add
xor
push
mov
push
cvtdq2ps
add
sti
into
out
adc
pop
inc
add
pop
add
aaa
adc
sti
pop
dec
dec
and
pop
cmp
adc
sbb
and
push
and
xchg
rclb
cmpb
leave
jmp
jle
add
push
push
test
sahf
inc
cmpsb
pop
and
lea
sub
pop
jbe
push
add
push
dec
add
push
push
sub
push
negl
adc
or
mov
pop
jnp
notb
cmpsl
mov
push
mov
aaa
cld
movsb
mov
movsb
stc
in
cli
mov
test
out
int3
cli
fsubrp
leave
lret
iret
fcmove
aad
rol
xlat
not
xlat
xlat
fyl2xp1
xlat
int
rol
fadd
int3
loope
clc
ljmp
dec
pop
dec
pop
push
dec
adc
pop
add
pop
pop
jns
cs
jb
jno
jg
repnz
push
bound
xor
adc
cmp
or
incl
xchg
subl
scas
mov
cmpsl
test
add
std
jle
imul
insl
insb
outsl
jns
bound
mov
or
js
jb
xor
outsb
sub
ljmp
add
adc
adc
dec
add
or
jbe
das
push
mov
add
add
ficoml
add
fisubrl
and
and
cmp
aas
ss
add
aam
int3
fdivr
jmp
fcmovbe
ret
sti
xlat
lahf
scas
mov
movsb
mov
test
mov
test
scas
mov
mov
xchg
xchg
sahf
xchg
addl
xchg
and
jl
test
push
push
push
aas
shlb
dec
pop
dec
dec
inc
and
sbb
sbb
sbb
add
inc
fcomip
pushl
inc
sbb
push
sbb
cmp
and
inc
push
push
and
cmp
scas
cld
lcall
rcr
lret
rolb
pop
dec
pop
push
push
dec
adc
outsl
push
cld
pop
inc
sbb
push
sbb
dec
out
pop
push
dec
mov
clc
pop
inc
adc
adcl
mov
sar
daa
ss
sub
xor
xor
ljmp
cmpsl
imul
jne
or
or
js
popa
dec
dec
xor
pushw
imul
jmp
push
jle
sbb
push
adc
pop
or
adc
incl
push
or
xor
xor
jne
mov
lods
mov
mov
stos
mov
movsb
mov
mov
ret
int
mov
ret
shl
aam
inc
loopne
mul
loopne
out
out
fcmovne
lcall
ror
mov
and
enter
fabs
loopne
jecxz
push
out
repz
ret
into
out
repz
in
in
out
div
xlat
scas
cli
add
into
fstp
into
fmulp
out
loope
aaa
mov
lcall
xlat
rcr
rol
shr
ret
mov
in
cld
cld
in
in
hlt
call
xchg
xchg
fistps
mov
cmc
icebp
imul
hlt
sarb
sub
xor
sbb
ljmp
jbe
imul
aas
add
call
lret
lret
fisttps
add
ja
idiv
sti
cli
icebp
jg
push
mov
stc
scas
jecxz
out
shl
add
in
mov
lahf
jmp
sti
mov
mov
repz
idivb
int
rol
data16
in
call
loopne
in
std
out
test
clc
mov
jl
mov
sti
in
icebp
enter
push
adc
or
adc
push
fwait
lcall
dec
or
pop
jbe
add
adc
xor
jb
push
daa
xor
std
sbb
and
sub
sub
and
mov
fcomps
rcrl
xchg
les
arpl
dec
jne
scas
clc
jl
insl
ja
jno
bound
pop
jne
mov
add
cmp
adc
and
ljmp
xor
aas
and
add
cmp
xchg
cmp
cmp
xor
cmp
cmp
cmp
sub
mov
mov
mov
mov
mov
clc
in
sti
shl
jecxz
out
loope
jecxz
mul
out
dec
jae
popa
ja
imulb
jp
imul
data16
scas
xchg
scas
mov
lods
stos
mov
lods
movsb
mov
mov
pushl
and
sub
insl
push
imul
ja
jne
decl
jae
addr16
add
dec
pop
jae
inc
inc
dec
dec
inc
push
jnp
inc
push
mov
shll
fsub
into
rol
cmpsl
outsb
jnp
inc
jne
mov
jae
dec
pop
dec
addr16
pusha
inc
inc
out
fstpl
aaa
push
adc
add
sbb
add
sbb
daa
cmp
cs
mov
cmp
or
cld
sar
jmp
loopne
loope
lock
inc
insl
pop
inc
inc
cld
incl
push
push
pop
pop
dec
pusha
pop
dec
inc
inc
dec
inc
sub
cmp
sub
and
xor
cmp
xor
cs
dec
push
jg
inc
jp
dec
inc
inc
pop
dec
rep
in
decl
pop
inc
outsl
push
push
push
js
push
pop
inc
insb
inc
inc
jmp
fistpl
fcomip
fadd
mov
aam
into
leave
mov
test
lcall
pop
add
sbb
add
iret
fcmovu
fiadds
dec
sti
decl
pop
pop
ja
pop
jp
push
jp
adc
push
popa
sbb
dec
fs
inc
push
dec
data16
xchg
xchg
add
sbb
add
add
sbb
sub
aas
pop
sbb
dec
cmpsb
insb
not
push
int3
push
push
out
lock
aad
out
call
lods
mov
mul
repz
rcl
inc
loope
add
call
outsl
pop
cwtl
outsb
outsb
bound
push
das
clc
ja
js
cmpsb
jle
scas
es
cmp
cmp
lar
call
adc
or
adc
push
inc
pop
inc
sub
adc
cmp
and
adc
sub
and
pushl
and
sbb
es
sub
sub
and
sbb
cmp
dec
pop
add
das
in
jg
pushf
test
xchg
xchg
incl
loop
or
pop
sbb
cmp
or
jle
repnz
cmc
pop
into
shl
jg
aas
push
add
sbb
or
nopl
xor
and
daa
add
xor
aaa
rcrl
ds
sub
daa
and
push
adc
sub
sub
cs
sti
dec
cs
xchg
cltd
lcall
inc
push
inc
inc
inc
pop
inc
out
ficompl
push
daa
dec
jp
and
mov
mov
int
xchg
xchg
sbb
add
pop
inc
adc
add
lods
and
loopne
inc
push
orb
push
dec
call
movsb
mov
mov
jne
jb
outsl
out
stc
mov
cs
lods
stos
mov
mov
insl
jo
ret
icebp
in
jl
pop
jp
pop
pop
adc
inc
pop
push
inc
jne
dec
dec
push
inc
push
incl
cld
aaa
cmpsb
inc
insb
jns
imul
mov
aam
xchg
lahf
xchg
fildl
repz
fisubl
mov
adcb
push
pop
push
pop
jae
push
jno
jo
pop
outsb
fs
fs
je
dec
pop
push
jno
inc
inc
push
pop
pop
inc
imul
gs
push
dec
dec
dec
add
ror
adc
shl
loopne
add
jg
hlt
stc
div
out
std
in
jmp
loopne
sbb
stos
cmp
clc
lock
jmp
fs
push
fstpl
nop
dec
jle
outsb
mov
punpckldq
clc
ljmp
cld
mov
aad
int3
fadds
lret
mov
lcall
pop
bndldx
add
pop
pop
inc
pop
dec
dec
or
shrl
clc
insl
jnp
insl
popa
push
inc
pop
push
inc
inc
push
int3
inc
jb
push
mov
push
ja
pop
popa
jo
xchg
push
adc
and
fistpl
addb
out
pop
sub
bound
rcl
sti
ret
rorl
ret
push
decl
into
iret
ror
ret
sub
mov
jno
mov
adc
sub
add
insb
sahf
vandnpd
xor
and
sahf
sub
and
lcall
js
cltd
nop
xchg
pusha
inc
push
push
dec
inc
inc
inc
dec
inc
jnp
mov
data16
popa
jnp
push
dec
push
adc
dec
push
inc
dec
push
sar
add
inc
inc
dec
inc
dec
dec
pop
popl
out
dec
push
inc
pop
pop
pop
dec
pop
inc
dec
inc
dec
cmc
repz
ljmp
add
leave
mov
cs
int
rorl
push
push
and
or
data16
stos
mov
and
inc
dec
inc
push
inc
call
jg
cmp
aaa
xor
faddl
out
xchg
incl
adc
and
push
add
dec
pop
pop
addr16
mov
jae
xor
xor
push
lds
sub
xor
push
cmp
pop
cmc
or
jl
lcall
add
add
pop
dec
dec
pop
push
pusha
je
adc
adc
inc
push
decl
mov
sahf
in
jmp
mov
mov
fildll
pop
mov
lods
mov
andb
jbe
push
pop
push
add
or
pop
or
pop
je
shrb
ljmp
sbb
mov
jle
jle
rcl
lret
daa
xchg
out
rsqrtps
push
mov
loopne
mov
ror
loop
in
ljmp
repnz
in
das
inc
repnz
shr
aam
fisttpll
xor
test
add
or
cli
test
aas
adc
fiadds
xchg
mov
inc
xchg
sarb
aam
rcr
test
in
hlt
jmp
clc
out
mov
cmp
add
lcall
sub
sbb
pop
subb
je
pop
pop
js
ss
xor
cld
add
push
jo
sub
xor
and
push
add
or
sbb
add
xchg
lcall
xchg
ljmp
repz
ret
int3
lds
pop
add
cld
scas
cli
pop
adc
adc
cmpsb
jle
inc
dec
inc
pop
pop
push
insl
dec
clc
ljmp
push
inc
fnsetpm(287
loopne
out
stc
stos
leave
in
jmp
popf
ja
paddd
adc
fdivl
clc
sbb
ss
pop
icebp
cmpsb
pop
ja
outsb
jle
adc
dec
pop
je
inc
dec
stc
mov
jbe
dec
push
inc
add
mov
dec
pop
dec
jns
dec
inc
push
dec
push
fmuls
pushl
scas
stos
push
pop
push
inc
inc
pop
jnp
pop
pop
data16
xor
xor
and
sub
cmp
push
push
cld
xor
pop
leave
lret
rcl
xlat
rcrb
icebp
int3
mov
push
or
jl
mov
sbb
dec
and
adc
or
mov
decl
lods
orl
lahf
xchg
mov
mov
mov
in
stos
popf
mov
cmpsl
mov
jmp
cmpsl
push
stos
test
xchg
addb
lock
fidivrl
mov
mov
fdiv
mov
orb
sbb
sbbl
push
inc
inc
dec
jae
clc
mov
cmpsb
mov
fcmovu
jle
cmpsb
mov
mov
loopne
sbbb
mov
mov
mov
push
xchg
idiv
or
dec
out
fcmovb
les
fmul
int3
sahf
jecxz
jg
adc
cwtl
push
xor
aaa
and
and
xor
mov
cmp
cmp
scas
addb
mov
pushf
pushl
fdivp
nop
xchg
xchg
inc
pop
pop
push
mov
stos
lods
lods
cmpsl
mov
mov
clc
incl
movsb
lods
mov
mov
std
mov
push
mov
xchg
fucomip
mov
enter
inc
inc
das
fidivrl
sbb
aad
popf
in
insb
aaa
adc
pop
inc
inc
ret
fcomip
rcrl
mov
addb
inc
js
cltd
repz
cwtl
mov
ret
push
sar
call
inc
inc
sbb
pop
push
pop
push
push
pop
pop
add
inc
dec
push
dec
push
push
and
adc
outsb
scas
cmpsb
push
rcl
rcl
in
out
icebp
out
cld
ljmp
out
loope
cld
loopne
loop
out
stc
lock
in
call
out
clc
int3
xlat
testb
call
lret
loope
lret
nop
pop
std
jg
loop
mov
aam
lret
in
rcl
fdivs
adc
imul
pop
pop
cmp
loope
xchg
shrl
mov
fcmove
xlat
cld
call
into
out
jle
fmull
std
loope
jecxz
out
in
cli
sti
loopne
xchg
cli
stos
mov
movsb
orb
mov
add
mov
movsb
scas
push
mov
ljmp
mov
sahf
mov
adcb
xchg
fisubs
rorb
cli
pusha
adc
sub
or
cmp
sub
cmp
cmp
cmp
ljmp
cmp
sub
add
pop
or
xor
push
push
out
mov
int
cmpsl
lea
mov
ljmp
mov
lods
mov
rcl
fst
div
lea
mov
leave
int3
lea
fwait
mov
in
mov
std
cli
jmp
mov
mov
mov
dec
pop
jmp
adc
inc
pop
pop
inc
add
inc
pop
inc
inc
push
inc
dec
dec
dec
dec
inc
mov
pop
jge
jnp
jne
insb
add
and
add
fbld
fcoml
jge
add
and
insl
jno
add
add
adc
push
jmp
std
xchg
push
and
jbe
adc
push
mov
add
inc
add
or
sub
add
pop
cld
jmp
or
daa
xor
jle
imul
sub
testb
outsb
xor
aaa
sub
sbb
rcl
fneni(8087
rcr
xchg
cwtl
xchg
rolb
scas
jo
ror
les
add
pop
cli
aam
ret
add
pushl
ljmp
loop
in
add
loop
cli
mov
incl
fsubrp
ljmp
xchg
mov
rcr
shll
mov
cwtl
test
lahf
nop
lock
xchg
mov
fcoml
mov
add
xchg
fcomip
mov
cmpsl
out
out
add
dec
pop
adc
xor
or
out
cli
inc
push
inc
push
mov
dec
jbe
pop
dec
dec
pop
pop
incl
or
inc
push
dec
add
sbb
imul
jle
add
icebp
ja
popa
gs
jnp
gs
aas
sbb
bound
cs
or
gs
mov
pop
rolb
stos
mov
lret
call
div
or
mov
sub
push
xor
jns
cmp
add
jb
cmpsb
rsqrtps
sub
and
icebp
or
and
test
cmc
das
rolb
or
sbbb
mov
dec
pushl
mov
fadd
add
mov
xlat
xchg
clc
pop
jg
and
popf
pushf
mov
xchg
xchg
sbbl
ror
leave
mov
mov
cmpsl
lods
mov
clc
mov
clc
scas
loope
call
mov
push
ret
mov
and
and
sti
jg
in
movsl
lods
mov
ljmp
mov
dec
lret
mov
push
dec
jb
inc
dec
ss
and
push
push
cld
add
sub
sub
and
pop
sub
outsl
cmp
mov
arpl
iret
les
lods
mov
ja
call
xchg
mov
rolb
das
clc
mov
xchg
push
xor
and
add
cmp
jg
jle
push
or
mov
sub
sub
decl
sub
orb
or
dec
ret
loop
push
add
sahf
sahf
mov
test
ljmp
loop
and
add
and
jl
sbb
loop,pn
mov
inc
push
jbe
cmp
add
and
sbb
outsb
and
dec
add
jg
sbb
jo
sub
cmp
jg
ja
xor
je
cmp
ss
shl
xor
or
add
mov
jp
or
jp
and
lret
into
add
rcr
pushf
leave
pop
icebp
inc
inc
sub
sub
andb
fdivs
cmp
pop
jg
jl
adc
xor
inc
push
in
sub
shll
cld
popa
xor
cs
incl
cs
out
test
fldl
push
into
int3
imul
sarl
push
pop
inc
lcall
loopne
clc
mov
cltd
xchg
xchg
mov
movl
or
lods
ret
repz
add
xor
icebp
push
ret
ljmp
shlb
jbe
iret
rorb
pop
add
pop
pop
add
sub
push
jbe
push
dec
inc
add
dec
dec
adc
add
pop
inc
popa
les
pusha
and
lock
insb
loopne
insl
cmpsb
adc
xor
jo
mov
pop
or
ds
xchg
sub
xor
loopne
hlt
ljmp
popf
adc
pop
push
add
pop
std
sbb
lea
xor
add
sub
or
jg
add
add
adc
add
sbb
add
adc
pop
into
add
sbb
xor
and
add
bound
xor
add
adc
xor
adc
adc
adc
loop
mov
mov
adc
jbe
gs
and
std
jbe
or
sbb
loopne
sbb
adc
mov
mov
adc
sbb
xor
cmp
sbb
mov
icebp
jmp
pusha
sbb
xor
aam
aam
hlt
pop
adc
clc
mov
pop
and
or
and
pusha
push
add
xor
jbe
adc
add
das
sbb
pusha
pop
and
cmp
insl
and
rolb
loopne
xor
lcall
aad
adc
mov
and
pusha
dec
adc
inc
ljmp
mov
sbb
aaa
add
addb
push
std
sbb
mov
add
jbe
rolb
addb
pop
add
add
mov
adc
loopne,pn
or
push
pop
adc
add
getsec
dec
add
andb
push
jo
es
and
add
sbb
sub
add
aas
sbb
sbbb
and
aas
clc
push
sbb
add
inc
add
cmp
mov
add
or
xor
inc
popa
add
inc
add
pop
sbb
ja
outsb
fdivrs
xor
xor
fwait
addl
cmp
adc
and
shll
push
sbb
add
push
popa
adc
test
popa
add
add
bound
inc
call
into
xchg
jb
sti
inc
cmpsb
addr16
into
pop
scas
sub
icebp
fildll
mov
loopne
ffree
push
fldcw
add
sar
xchg
hlt
and
jecxz
daa
cmc
cs
add
jg
in
xchg
mov
jecxz
add
in
add
jl
mov
adc
adc
jo
pusha
jno
mov
add
push
mov
or
cmp
and
pushf
mov
xor
inc
xor
sbb
mov
sub
rolb
js
and
add
sub
fcomip
cmpb
loopne
sbb
pop
adc
and
popa
int3
loopne
popa
or
add
and
pop
mov
or
cmpsb
add
loop
arpl
scas
ret
pushf
pusha
or
pusha
or
cmp
mov
ds
neg
hlt
pop
rorl
add
mov
jle
mov
jne
push
cmp
cld
add
aaa
dec
mov
add
mov
xchg
scas
clc
mov
push
jle
sahf
daa
dec
jb
ljmp
daa
jns
add
jle
cld
sub
jns
add
in
lods
jge
mov
jns
mov
movsb
sub
rcr
fcomi
add
mov
push
xor
shrb
add
lods
clc
cmp
dec
mov
adc
pop
shl
std
sub
and
scas
cmc
or
call
std
push
jle
mov
std
mov
das
add
mov
or
aaa
ja
mov
loopne
xor
mov
add
std
cmp
add
cmpsb
dec
dec
pop
aaa
mov
fs
loopne
gs
addr16
scas
in
or
pop
dec
je
add
fiadds
sar
jne
incl
or
add
sbb
jp
popa
push
cmc
lcall
notb
movsb
inc
mov
inc
mov
clc
sahf
push
xchg
incl
or
cld
and
clc
std
add
bound
adc
jle
dec
mov
push
mov
cld
jp
lcall
dec
andl
js
xor
std
xchg
mov
mov
push
or
sub
push
or
mov
ret
jg
std
test
js
adc
dec
in
sar
cld
or
test
dec
xchg
jo
add
jo
or
add
xor
sub
sbb
or
popf
jb
adc
fstpl
bound
fstps
xchg
sub
pop
or
lods
loopne
aaa
xor
xchg
and
imul
xchg
pop
xchg
scas
es
mov
pop
lock
ret
or
xchg
out
cmp
mov
js
testb
dec
sti
cmp
xorl
rolb
add
add
cld
mov
xor
mov
aaa
pop
jl
mov
mov
mov
jl
push
push
lock
cmp
cmc
mov
je
xchg
mov
loop
fistpll
mov
xor
push
cmpsl
shlb
ficomps
sbb
and
bound
cmc
mov
cmpsl
push
inc
aaa
dec
mov
nop
lock
rorl
mov
add
cmpsb
or
mov
daa
je
cli
call
ss
add
ss
mov
sbb
or
adc
adc
add
adc
aaa
mov
mov
sbb
aas
push
decl
push
loope
test
jp
jne
inc
xorb
add
cmpsb
inc
gs
pop
mov
dec
mov
jns
int3
and
jecxz
sbb
and
popf
adcl
and
sub
addl
std
incl
cmpsb
jo
push
sbb
das
push
push
inc
push
inc
sbb
mov
inc
or
sub
pop
pusha
xor
or
jle
add
sub
cmp
xchg
adc
sbbl
sbb
loope
xchg
add
dec
scas
cli
lcall
adc
popa
loopne
adc
in
fwait
sub
fdivp
lods
or
push
mov
data16
and
ss
inc
sbb
incb
popa
andb
and
popa
sub
mov
pop
inc
arpl
mov
push
add
push
jae
inc
ds
xchg
mov
mov
dec
cmp
inc
cld
jle
and
xor
add
mov
mov
sub
mov
add
mov
pop
mov
js
jns
jb
add
adc
mov
cmp
or
lock
push
fld
pop
cs
sbb
imul
lock
push
lea
outsl
jp
jno
test
fdivp
jbe
add
adc
pushl
sti
xchg
pop
mov
push
stos
rorb
rorl
fcom
xadd
clc
outsl
cli
xchg
mov
inc
xor
adc
addb
adc
mov
ja
adc
mov
pusha
sahf
ljmp
scas
jg
ja
jne
es
cmc
cmp
test
xor
add
cmpsb
data16
pop
out
shrl
sahf
and
inc
sbb
add
fsubp
clc
ljmp
mov
cmp
cmp
rolb
in
fwait
cmp
rcrb
xchg
xchg
bound
loopne
mov
cs
or
ljmp
jle
mov
jne
subb
adc
cmp
mov
shrb
xchg
sarb
adc
pop
xchg
mov
rolb
scas
add
dec
push
add
pop
or
inc
and
orb
ret
cmp
mov
scas
cli
les
jno
sub
jo
push
rcrl
and
pop
mov
mov
cmp
push
sahf
inc
mov
outsb
repnz
sahf
orb
out
mov
xchg
sub
call
jne
sub
push
stc
mov
cli
dec
incl
cmp
std
and
inc
cmp
sbb
mov
mov
mov
jge
xchg
outsl
cmp
mov
adc
std
rolb
jne
pop
mov
scas
xor
pop
popf
push
sbb
popa
repnz
push
dec
shlb
mov
mov
outsl
stos
adc
inc
and
mov
sub
out
inc
xchg
ds
mov
jb
add
cmp
loope
lcall
clc
scas
cmp
cmp
inc
fcmovnu
xor
xor
add
lcall
inc
mov
sti
cmp
sbb
cmpl
ss
pop
cmp
scas
std
shrb
adc
out
sub
stos
lock
loop
jo
sahf
pushf
mov
adc
cld
stos
adc
sahf
sub
inc
imul
adc
cmp
sub
dec
cmp
sahf
cmp
inc
cmpsb
ljmp
sarl
popa
and
jg
cmpsb
fs
mov
pop
nop
add
aas
sub
mov
pop
std
or
je
inc
cmp
or
add
xchg
jbe
jl
xor
nop
stos
mov
subb
add
xor
insb
jae
cmp
inc
mov
jle
xor
or
mov
notb
ljmp
xor
inc
sbb
add
jg
sbb
push
and
add
add
stos
loopne
push
add
mov
push
push
push
inc
inc
push
inc
push
call
mov
add
mov
adc
dec
pusha
adc
inc
lcall
sbb
and
cmpb
loopne
pop
push
lods
arpl
pop
inc
ds
add
roll
xchg
xchg
and
enter
and
cld
lock
push
in
fildl
push
add
test
pusha
add
add
or
inc
js
add
xor
aam
lcall
lret
mov
mov
push
data16
add
jmp
add
jge
dec
jle
adc
add
cmpb
add
push
mov
jbe
ret
jge
cmp
sahf
sbb
add
add
mov
or
adc
faddl
lods
or
jecxz
inc
mov
stos
dec
mov
xchg
je
jne
push
bound
faddl
and
add
ret
lcall
rorl
pop
scas
test
orb
and
mov
popa
add
jp
adc
xchg
or
inc
mov
inc
cmpb
adc
adcb
add
mov
ret
inc
ja
data16
lea
testb
adc
mov
test
mov
scas
and
mov
das
xchg
call
jle
cs
in
aad
pushf
sahf
std
pop
push
stos
ljmp
mov
sbb
push
stos
cmpsl
or
push
mov
inc
in
loope
and
mov
inc
sbb
lods
or
mov
or
adc
inc
add
mov
scas
mov
ja
dec
sbbb
xchg
rorb
dec
sbb
sub
xchg
popa
jle
mov
lock
ret
ret
add
mov
std
mov
loopne
sbb
jne
mov
mov
fidivrs
push
fdivrl
xchg
shrb
es
std
ficomps
test
mov
inc
add
in
scas
and
jnp
shrb
or
mov
mov
or
mov
add
adcb
adc
inc
mov
fnstenv
mov
js
pop
mov
add
sti
dec
add
insb
into
mov
mov
mov
mov
cmp
mov
mov
or
pop
test
les
dec
xchg
mov
insb
or
add
adc
insl
aad
xchg
sarb
lock
or
mov
dec
mov
inc
push
lea
stos
inc
adcl
mov
mov
add
sub
std
stos
pushf
shlb
push
clc
xor
shll
xor
push
lods
inc
scas
push
jb
fiaddl
aam
sub
fiaddl
loope
js
faddl
push
cmp
add
int
adc
fsubrl
jbe
jle
or
xchg
nop
xor
xchg
inc
mov
jge
push
add
push
inc
cmpsb
sti
out
mov
add
push
dec
sahf
adc
mov
or
jne
push
addb
jnp
mov
adcb
test
test
je
fdivp
in
pop
cmp
daa
sahf
sbb
pusha
addl
loopne
test
pushl
adc
and
add
add
xor
test
out
sbb
mov
rcrb
mulb
dec
sub
jbe
adc
data16
jo
adcb
ret
out
xchg
dec
lcall
xor
inc
cld
mov
aaa
jne
jne
std
mov
arpl
out
call
cld
outsl
outsb
ss
pop
sub
add
add
jb
sbb
add
mov
jne
jp
pushl
adc
add
xor
in
mov
inc
add
inc
ret
dec
daa
add
andl
dec
add
fidivrl
movsl
lods
add
xor
fsubl
test
mov
jne
fstpt
mov
test
inc
sub
mov
or
ja
push
pop
mov
mov
push
sub
add
jne
mov
jae
xchg
jo
add
xchg
jb
cmc
or
xorb
outsl
out
repnz
ljmp
jl
and
mov
std
push
push
pop
xchg
pop
inc
mov
or
mov
and
sti
add
add
inc
and
or
xor
mov
clc
shrl
jns
flds
rolb
and
jne
add
inc
ljmp
les
dec
add
dec
repnz
cmp
mov
shrb
jae
xor
or
mov
mov
mov
cmp
xchg
cld
bound
jl
add
jmp
test
jp
sub
cmpsb
lahf
repz
sbbb
std
scas
inc
aaa
std
mov
jbe
or
shl
pop
dec
mov
imul
pop
xchg
add
loope
push
sbb
inc
jo
inc
add
in
ljmp
fwait
xor
jp
mov
popa
mov
loope
and
pop
ja
add
outsb
xor
roll
insl
sub
fmull
sub
or
pusha
std
in
cltd
jecxz
push
and
mov
decb
nop
push
mov
mov
std
jl
cmpsb
mov
incl
xor
jl
cmp
sti
add
mov
push
add
iret
mov
xor
lcall
mov
jle
and
in
jg
sbb
xchg
fiadds
es
pusha
add
adc
scas
xor
and
jmp
jle
or
add
mov
call
lret
push
popf
and
jne
faddp
add
add
push
ds
mov
es
and
jle
das
ljmp
add
test
jbe
xor
das
sbb
sbb
sbb
cs
mov
pop
lcall
cmp
int
sub
sarb
push
clc
mov
lods
ret
sub
popf
dec
inc
mov
loopne
sbb
or
and
outsb
mov
inc
and
sub
outsl
mov
js
sub
or
rclb
or
sahf
aas
adc
jae
xorb
push
clc
mov
mov
insb
add
or
jle
inc
sbbb
sub
sahf
push
fidivs
add
mov
and
adc
je
xor
jle
incb
ljmp
and
adc
adc
fidivl
mov
stos
clc
orb
push
nop
sbb
imul
push
lock
nop
push
xorb
jl
add
mov
lock
daa
andb
fcomip
pop
sahf
push
xor
push
pop
push
dec
or
xor
bound
pop
fistpll
test
and
js
js
sbb
rcrb
mov
ret
jle
rorb
adc
xor
push
push
sub
mov
jp
call
pop
xchg
mov
lock
pop
js
sub
fildl
ja
xor
xor
push
add
or
jecxz
sbbb
dec
add
incl
sbb
xor
add
pusha
dec
mov
push
mov
and
subb
popf
inc
or
cmp
arpl
or
aaa
das
clc
sbb
xor
push
es
adc
sub
cmp
mov
push
scas
in
pop
push
pop
sbbb
cmp
sub
inc
es
popl
xor
add
mov
or
fsts
and
inc
ja
ret
lock
outsb
and
pusha
mov
mov
push
dec
mov
lods
mov
xor
xchg
jno
mov
fs
mov
xchg
lock
push
lods
adc
std
mov
sbb
sbb
jb
std
lods
push
add
js
pusha
push
outsb
sahf
dec
adc
sahf
clc
pop
inc
outsl
cli
mov
pusha
mov
jg
adc
out
or
sbbl
mov
pop
hlt
in
data16
push
notl
mov
sbb
jle
icebp
fldt
push
sub
sahf
jg
adc
fbstp
jp
and
mov
mov
cld
cmp
lcall
and
push
data16
pop
hlt
mov
roll
ret
add
jno
pop
cmp
cmp
mov
insl
add
sahf
inc
mov
sarl
loop
incl
iret
push
nop
sub
cld
sub
xchg
mov
mov
cmpsb
cmpsb
sahf
sbb
mov
xchg
les
outsl
cmpsb
fnclex
add
jge
lock
jae
mov
xchg
push
adc
mov
push
cld
icebp
cmpb
add
jl
lcall
and
xchg
in
jb
mov
sarb
mov
std
cmpsb
int
icebp
sub
push
movsl
and
setbe
jle
outsl
mov
pushf
mov
mov
cmp
xchg
xchg
sahf
mov
xchg
jo
and
xchg
add
xchg
dec
xchg
or
sub
adc
cld
mov
inc
ret
or
mov
and
dec
push
into
loope
pusha
or
add
push
or
and
out
repz
shll
jp
sahf
pause
or
xrelease
loop
add
xchg
in
xor
insl
sarb
std
xchg
add
popf
mov
xchg
sbb
add
push
loop
pop
mov
jge
loopne
add
mov
xchg
data16
mov
sub
and
xor
cmp
mov
mov
rolb
add
add
jle
outsb
sti
adc
ljmp
lock
lods
mov
and
sbb
mov
adc
stos
xor
int3
xorl
pop
or
push
repz
out
es
sub
jg
cmp
divl
push
and
inc
add
mov
fbld
cmp
nop
test
lock
inc
aaa
and
shll
xor
jp
popa
inc
sbbb
mov
into
add
mov
mov
fimuls
push
mov
cltd
add
dec
add
jge
push
aaa
loop
mov
rcrb
data16
scas
aam
pop
push
lcall
mov
pop
test
pusha
pushl
xor
test
xor
xor
lret
rcl
add
pop
loopne
cmc
andb
xchg
or
mov
mov
mov
mov
popf
jle
mov
aas
mov
pusha
sbb
sbb
rcrb
loope
sahf
jo
rclb
clc
xor
mov
js
fisubrs
das
xchg
fbld
or
adc
lahf
push
and
and
jg
push
jbe
gs
ss
mov
arpl
std
pop
icebp
pop
xorl
mov
lock
repnz
ja
mov
push
arpl
add
rcll
es
add
nop
mov
push
mov
jae
xor
jb
add
test
mov
mov
mov
mov
int3
mov
cmpsl
nop
ds
aas
jge
icebp
ds
pop
jne
adcb
mov
sahf
mov
rep
mov
lcall
and
in
add
add
ret
dec
lods
add
jl
and
mov
fcomps
or
or
aam
rolb
clc
pushl
xor
jle
cmp
enter
pusha
adc
bound
add
adc
adc
add
jl
lods
nop
add
ja
out
cli
pop
test
xor
scas
notb
cmc
fwait
inc
dec
mov
sahf
inc
mov
mov
in
incl
cmc
mov
popf
js
testl
xchg
adc
fidivrs
add
orb
add
adc
push
popa
ror
je
mov
xorb
cmc
fcoml
mov
xor
add
mov
arpl
loopne
xlat
and
adc
inc
rcrb
lcall
es
xor
call
adc
es
andl
lahf
outsb
mov
adcb
lret
push
adc
sbbl
inc
push
testb
call
lods
subb
nop
adc
push
cwtl
aaa
cld
jmp
jl
cmp
dec
jge
mov
mov
lock
insb
lcall
inc
add
pop
mov
sbb
pop
xor
dec
mov
xor
pop
and
and
movsl
subl
pushf
push
push
xchg
push
enter
sbb
or
mov
dec
ds
jae
clc
add
mov
adc
pop
enter
add
testb
mov
jg
add
mov
and
sarl
clc
aam
mov
ret
scas
lahf
inc
mulb
aaa
mov
push
fldl
fadds
daa
jmp
es
cs
cmp
add
loope
push
mov
cmp
push
add
adc
pop
movsl
subb
xor
adc
add
icebp
mov
dec
dec
mov
je
cmpsb
cmp
or
jp
push
std
mov
add
inc
std
mov
fwait
orl
or
dec
rolb
movsl
std
mov
std
loop
gs
push
sahf
subb
sub
fsubl
jne
pop
sbb
or
inc
inc
adc
pop
das
movsb
fimuls
pop
add
cmp
fimuls
add
out
mov
into
rcr
cmp
iret
add
push
xchg
js
pop
pusha
cmpsb
push
cwtl
jle
bound
add
ret
and
and
int
lea
cmc
add
push
pop
lea
das
jo
enter
sbbb
clc
fildll
imul
lahf
in
subb
push
in
addl
ja
or
pop
jbe
jo
or
outsl
push
add
sbb
ret
jp
push
mov
or
jo
jle
cs
and
add
and
out
into
adc
add
int3
add
lret
sbb
rorb
ret
sti
xor
mov
rorl
sahf
cmp
sbb
sahf
jne
xor
lahf
stc
mov
aas
shl
or
add
fs
jno
clc
testb
sbbl
outsl
fldt
add
sti
push
popf
jge
lcall
jecxz
sahf
lds
add
and
xchg
loopne
push
es
fstpt
std
push
push
jne
adc
sbb
dec
mov
jb
sbb
lock
push
push
ja
add
pushf
ss
dec
lock
orb
pop
js
push
cmp
dec
add
add
mov
popf
stos
pop
xchg
jge
sub
cld
test
scas
mov
xor
adc
rolb
adc
call
xorb
add
scas
clc
jg
insb
bound
int3
push
inc
dec
xor
cmc
pop
rolb
stos
shrl
mov
push
je
outsb
in
sahf
add
push
movsb
fwait
lock
or
cld
dec
or
push
std
decl
mov
jns
rolb
add
add
pushl
push
jecxz
out
ss
add
or
jb
inc
mov
lcall
jecxz
push
dec
cli
jmp
xor
repnz
add
aaa
test
ljmp
push
rorb
fsubrp
aaa
sar
shlb
cmp
or
adc
sub
adc
mov
addb
mov
out
pop
mov
cmpsl
mov
cmpsb
jne
pop
std
lock
adc
out
add
inc
sti
cmp
mov
push
mov
xor
pusha
and
push
inc
pop
rorb
cld
xor
pop
jo
jo
and
jl
aaa
loope
push
cmc
adc
xchg
add
adc
pop
inc
sti
or
adc
sub
or
loopne
cld
sbb
push
popa
pop
sbb
lahf
mov
daa
mov
mov
sbb
outsb
jle
call
data16
jp
cmp
mov
inc
mov
insb
mov
repz
mov
push
mov
adc
cmp
xor
loop
lock
cld
loope
jge
jne
and
jnp
and
cmc
dec
hlt
add
sti
in
mov
paddb
outsl
data16
inc
or
cmpsl
adc
sbb
dec
and
daa
ja
and
xchg
addr16
cmp
std
add
rolb
push
or
inc
xchg
loopne
call
incl
cmp
xor
add
mov
loopne
clc
lods
mov
das
lods
add
insb
sbb
pop
mov
adcl
ret
add
pop
inc
push
pushf
inc
or
or
or
xchg
pop
push
sahf
jg
or
add
bound
mov
add
divl
jmp
arpl
add
das
xor
mov
or
add
cmp
mov
pop
rcl
lock
push
mov
cld
ljmp
add
add
push
mov
and
mov
out
push
pusha
xor
arpl
cmp
push
pop
mov
rcrb
mov
xor
adc
adc
xchg
mov
shlb
loop
mov
loope
incl
cmp
cmp
pushl
xor
inc
and
test
and
aaa
ja
pushl
mov
pop
add
push
xor
int3
lods
xor
in
jns
sti
mov
or
or
push
shl
add
cmp
rcr
jg
jg
std
clc
inc
and
addr16
xor
push
mov
and
lcall
icebp
mov
cmp
mov
scas
and
mov
mov
dec
add
fmul
jp
idivb
dec
and
adc
inc
dec
aam
decl
jge
push
cmp
add
dec
movsl
push
das
sub
or
mov
dec
and
enter
mov
imul
cltd
cmp
lods
add
jns
or
dec
xor
mov
decl
mov
inc
cmp
or
test
test
rcll
cmc
mov
mov
inc
inc
les
loopne
mov
push
push
ret
inc
add
inc
mov
jmp
pop
add
xchg
outsl
sub
cmp
push
pusha
inc
adc
or
dec
lret
add
es
lock
enter
mulb
and
test
xor
cmp
mov
fildll
or
jecxz
lcall
stos
jne
push
out
sub
push
out
or
adc
dec
jecxz
inc
in
jo
and
push
out
push
mov
call
rorl
inc
dec
insl
popa
add
insb
fwait
or
std
push
decl
loop
pop
dec
xor
or
add
pop
mov
pop
scas
dec
sub
lock
push
add
popf
mov
or
loope
mov
repz
dec
and
push
xor
cmp
pop
repz
hlt
mov
in
or
add
dec
inc
imulb
sti
ljmp
clc
jne
pop
jae
insb
out
add
add
cmp
xchg
mov
repnz
mov
jg
pusha
add
mov
push
add
and
push
cli
pop
pop
shll
rolb
jno
jo
add
mov
outsl
jg
mov
inc
cmp
xchg
pop
mov
cmp
into
and
call
or
or
pop
cld
jno
sub
jle
sbb
mov
jne
fbld
dec
sbb
push
push
and
pop
std
sub
fisttpl
lcall
dec
mov
jo
addb
xor
dec
aaa
or
outsl
push
push
fadd
outsb
mov
decb
cmc
xchg
mov
movlps
inc
cmp
jg
ret
mov
loopne
and
sub
dec
lods
aam
outsl
xor
pop
pusha
sti
jmp
xchg
data16
std
popa
retw
nop
add
or
push
xor
call
imul
mov
xchg
add
push
jg
jno
ljmp
mov
std
mov
and
jo
es
jno
jne
add
sarl
push
aaa
daa
push
rorb
sti
es
adc
imul
psubb
hlt
pop
loopne
push
push
mov
xor
add
rolb
data16
ds
jb
jg
mov
cmp
push
jb
cld
cld
adc
mov
pop
adc
mov
data16
or
mov
fildll
lcall
add
add
adc
dec
repz
rolb
ss
or
cli
bound
clc
sub
decl
test
dec
jg
dec
popf
pop
mov
fiaddl
add
incl
popa
dec
mov
incb
xor
mov
push
sti
jb
jg
dec
or
dec
std
add
add
inc
dec
dec
cli
jmp
or
add
or
nop
lahf
sti
and
mov
icebp
and
sahf
inc
and
sbb
push
cmp
push
movsb
fsubr
pop
insl
jo
cmc
xchg
mov
fisttpl
arpl
xor
sbb
stos
dec
mov
sahf
dec
or
or
cmc
insb
lock
or
push
jo
cmc
or
jl
jno
repnz
in
sbb
outsb
je
mov
add
fwait
cmp
push
out
outsb
jg
incb
push
dec
adc
and
nop
es
and
ljmp
clc
ret
cmp
inc
mov
inc
popf
pop
inc
enter
inc
add
xorb
push
loope
cmpb
mov
cmc
xchg
fdiv
mov
jp
lock
xor
mov
repnz
mov
mov
add
scas
popf
xchg
out
jle
jle
popf
xchg
bound
xor
dec
roll
jns
test
cli
data16
xor
push
xchg
push
add
jge
cmp
push
or
xor
mov
add
adc
xchg
add
add
push
pop
inc
add
imul
mov
pop
das
clc
add
add
repnz
imul
lcall
or
add
stos
xor
jg
rcrb
push
dec
mov
hlt
push
mov
loop
mov
xchg
push
adc
and
in
add
push
adc
xchg
cmp
ljmp
loopne
clc
push
std
fbstp
or
xor
xchg
add
ss
add
das
stos
add
add
push
add
add
xor
aaa
mov
and
loope
ss
ss
or
push
or
add
inc
loopne
inc
movsb
jl
sub
jns
lds
adc
fistpl
and
jne
mulb
lcall
cmpsb
xchg
ja
popa
xor
mov
jae
jg
out
pop
hlt
push
pop
adc
mov
jno
jecxz
aam
add
nop
mov
lahf
xor
or
nop
or
xchg
fsubl
and
push
and
popf
push
test
add
or
lock
jno
lds
push
lea
dec
xor
inc
test
jg
adc
or
adc
lods
sarb
inc
inc
xorb
cmp
rorb
cmpb
mov
or
mov
jb
aaa
sbb
add
dec
add
and
lahf
icebp
rolb
mov
arpl
hlt
add
inc
add
mov
sbb
mov
jbe
inc
mov
mov
lahf
cld
push
add
or
jmp
mov
or
cmc
xor
pop
xor
dec
repnz
mov
jp
push
add
add
jp
push
es
dec
or
in
mov
add
aam
jae
fists
add
dec
pop
inc
icebp
and
inc
xorb
add
xchg
pop
lahf
stos
mov
push
mov
testb
and
repz
mov
inc
subl
out
mov
in
mov
pushf
roll
mov
fadds
or
aas
clc
sbb
pop
inc
dec
add
add
mulb
pop
cmp
and
add
xchg
mov
pop
push
sbb
add
or
sti
mov
sbb
add
cmp
adc
add
cmp
add
adc
add
int
dec
sbb
gs
push
cmp
add
subl
add
test
sahf
sbb
lods
xor
pop
sbb
in
sti
ja
mov
add
add
call
lock
orb
clc
pop
pusha
decl
add
shrb
and
add
and
pop
xor
add
adc
inc
addr16
add
mov
cmp
dec
orb
dec
jne
mov
and
dec
test
adc
sti
add
std
push
jle
lock
mov
pop
cmpsl
popf
jnp
cmpsb
mov
mov
jo
add
pop
push
and
dec
xor
lods
shlb
jbe
dec
cmp
addb
icebp
mov
and
inc
add
je
pop
sub
sub
addl
std
and
add
sbb
mov
into
rclb
mov
insb
fidivl
jmp
mov
sbb
xchg
jns
enter
push
orl
pushf
or
mov
mov
mov
adc
inc
adc
mov
mov
sahf
push
add
arpl
sub
daa
pusha
dec
loopne
mov
dec
repnz
mov
ds
jp
or
aad
push
push
int3
cli
push
xor
decl
or
push
pop
es
cmc
addb
imul
adcl
rolb
adc
cmp
aam
push
sub
pop
cld
inc
call
addb
add
jmp
inc
add
popf
jle
std
inc
pop
add
inc
inc
lods
andl
lcall
or
movsl
xchg
add
mov
call
sub
add
and
data16
clc
add
and
jmp
cmp
std
mov
add
mov
and
test
mov
and
jne
xor
jns
add
jno
mov
mov
and
push
cld
mov
dec
in
bound
movsb
ljmp
aam
popf
add
xor
ja
inc
popa
push
and
add
mov
cs
push
repnz
hlt
scas
pop
mov
mov
dec
test
xor
xchg
sub
add
ret
add
push
push
sbb
inc
out
add
sbb
mov
ja
pop
cmp
rorb
in
add
inc
push
adc
push
cld
incl
rolb
pop
popf
jne
sub
sub
pusha
and
loop
jl
lcall
push
mov
mov
fwait
subl
xor
std
pop
cmp
ljmp
pusha
mov
or
pusha
or
rolb
push
xchg
loopne
jbe
push
dec
hlt
bound
xchg
popf
insb
mov
push
rorb
lock
mov
imul
shl
sub
add
jo
addr16
or
and
aam
icebp
sub
push
test
push
cmp
or
push
jle
ret
jg
scas
lcall
mov
add
loope
in
mov
inc
subl
or
cld
das
mov
or
gs
sbb
mov
test
inc
sbb
pop
aad
sbb
sbb
sbb
loopne
add
mov
jns
add
jmp
hlt
ljmp
adcb
add
dec
and
jp
mov
dec
outsl
cmpsb
jp
repz
pusha
pop
lahf
pop
pop
mov
mov
std
cmp
lcall
add
test
add
xchg
dec
aaa
or
mov
pop
pop
movsb
push
jge
in
sti
aam
mov
push
cli
fists
cmp
cli
mov
inc
out
and
and
adc
cmp
gs
mov
cmc
dec
popa
sbb
shrb
insl
sub
mov
arpl
fcomps
clc
aaa
sti
jg
pop
mov
sub
aaa
rolb
push
sub
xor
xor
mov
mulb
cmc
mov
sbb
dec
jmp
sub
inc
mov
xor
xor
or
dec
hlt
xor
mov
or
mov
or
mov
pop
and
jo
cli
xchg
je
outsb
dec
mov
lcall
cld
out
in
xor
lock
add
mov
adc
jg
testb
push
mov
mov
sbb
add
addb
cmp
push
lock
es
mov
mov
sbb
enter
repnz
push
add
aam
and
push
sahf
iret
pop
or
shrb
pop
inc
pop
popa
add
or
adc
mov
cmc
mov
repnz
aaa
imul
rolb
pusha
jbe
push
aam
mov
or
outsb
add
push
dec
jbe
sti
mov
lock
push
mov
out
inc
xchg
adc
test
cmp
pop
mov
mov
imulb
stos
pop
add
lods
ja
lods
xchg
pop
mov
and
mov
mov
or
lahf
test
je
js
xchg
mov
aaa
pusha
xchg
lahf
mov
dec
out
cli
int3
hlt
inc
inc
aam
cmpsb
fldt
mov
push
clc
hlt
rolb
sub
testb
or
jnp
push
and
mov
or
sbb
mov
and
push
or
push
cwtl
adc
popf
nop
sbb
cs
pushl
push
push
mov
sub
mov
mov
ret
test
mov
add
mov
jns
jne
mov
xchg
or
adc
ljmp
and
repz
inc
or
stc
add
dec
push
xchg
add
adc
cwtl
mov
jg
push
jecxz
and
repnz
add
cmpsl
lahf
ljmp
out
andb
adc
jo
arpl
jp
cmp
push
loopne
pushl
add
pop
cmp
rolb
cmpsl
jo
jnp
inc
jge
inc
incl
dec
push
xor
lods
jg
add
mov
std
mov
push
gs
testb
and
movsb
data16
mov
push
out
add
xlat
inc
loopne
in
and
cmpsb
cli
mov
pop
or
pop
pop
adc
dec
add
add
pop
das
clc
jg
inc
add
popf
jo
adc
inc
scas
add
mov
cmp
mov
adc
mov
xor
jbe
add
pushl
stos
mov
push
incl
xchg
dec
scas
add
insb
dec
loop
std
mov
aaa
add
and
imul
icebp
fwait
scas
mov
mov
xor
shlb
dec
ljmp
or
inc
adc
cmp
lds
popf
pop
pop
mov
std
cmpsb
pop
andb
scas
iret
xchg
xchg
nop
push
ret
push
mov
aaa
jo
pop
pop
int3
xor
roll
pushl
pop
popf
xorb
rorl
add
shlb
lock
add
xor
clc
jmp
xor
push
popf
push
or
push
mov
mov
fidivrl
xor
lock
pusha
add
sbb
push
or
enter
xchg
xor
mul
push
xchg
cmp
sbb
outsl
and
pushl
cmpsb
in
lahf
pop
mov
add
cmp
jg
add
add
rcrb
adc
pushf
lahf
inc
add
movsb
repnz
popa
or
mov
bound
shll
loop
and
pop
jl
rorl
roll
fwait
clc
sub
jl
jp
bound
mov
lods
mov
sti
add
je
dec
push
jecxz
aaa
xorb
aaa
mov
jl
sub
adc
add
xor
pop
pop
xchg
clc
mov
sbb
addb
cmc
testl
xor
pop
adc
fcomps
add
mov
addr16
mov
mov
testb
push
pop
bound
test
push
mov
jmp
mov
push
insl
add
cmp
add
fisttpl
mov
data16
add
pop
xor
mov
xor
adc
sub
jb
int
mov
jae
jno,pt
popf
jns
rolb
clc
add
add
jne
repnz
lcall
call
jb
add
jg
jge
xorb
add
into
dec
jno
push
shl
pop
adcb
dec
add
push
popf
cmp
adc
aas
and
lret
or
mov
push
jo
fidivs
pusha
and
outsb
jne
and
popw
jle
std
mov
xchg
dec
jg
out
aam
mov
mov
xor
jge
pop
lock
mov
pop
testb
add
cmc
or
mov
subb
testb
sub
add
sbb
andb
mov
xchg
sub
inc
cmpl
popf
pop
jp
incl
adcb
daa
add
add
cmpsl
inc
add
js
xchg
sub
cmp
dec
xor
pop
add
hlt
inc
mov
lahf
fiaddl
shrl
mov
adc
insb
cmp
xor
fstpt
push
es
daa
cmpb
and
sahf
add
adc
mov
testl
mov
push
shrb
lcall
idiv
sub
and
lahf
cmp
add
inc
push
ret
ljmp
test
lock
mov
inc
rcrl
loope
imul
ror
insb
sbbb
in
dec
popf
mov
lcall
inc
add
xorl
xor
incb
mov
ret
sbb
inc
adc
dec
orb
into
push
sbb
movsb
pushf
xchg
out
mov
shrb
mov
incb
pusha
lahf
xchg
rolb
push
iret
inc
or
inc
push
popa
push
lahf
scas
cmp
clc
fstpt
lock
sub
jbe
sbb
add
or
bound
inc
jbe
cmp
push
dec
mov
dec
ljmp
icebp
cmp
repnz
inc
in
lret
sub
add
push
push
adc
jle
int3
outsb
jb
push
mov
filds
ret
outsb
push
sahf
mov
std
pushl
popa
outsb
fwait
stos
shll
data16
stos
jno
into
orb
jg
jg
push
or
jne
sarl
push
adc
xchg
pop
popa
cld
or
dec
addr16
add
or
jb
adc
add
cld
test
js
cmpsl
push
inc
mov
repnz
sub
inc
sbb
jl
xchg
add
xchg
insl
clc
or
and
fmuls
cmp
pop
adc
outsl
outsb
or
and
dec
xor
in
inc
movsb
add
push
sbb
jmp
imul
daa
xor
mov
add
lahf
je
fiadds
jo
mov
std
add
sub
cmp
popa
fwait
mov
mov
push
sbb
jmp
mov
add
fwait
ss
fwait
jp
add
push
jmp
add
adc
data16
dec
dec
dec
call
or
sti
sti
xchg
mov
popf
or
lods
pop
orl
and
sbb
mov
scas
mov
call
fdivrp
subb
pop
rolb
push
xchg
cmc
mov
dec
pop
insl
mov
xchg
mov
arpl
cwtl
pop
cld
cmp
and
mov
movsl
jne
test
loopne
and
loope
push
nop
pop
stos
xlat
mov
out
xchg
in
adc
outsl
push
out
cli
ljmp
sub
gs
test
adc
pop
fs
bound
lcall
loopne
ds
cmp
and
jns
fwait
pop
stos
add
add
repz
dec
movsb
and
xchg
fcomip
jg
mov
and
add
add
jo
loop
xor
bound
pushl
dec
xor
pop
gs
and
js
pop
xor
mov
mov
mov
lret
loopne
aaa
xchg
loopne
popf
add
js
add
and
scas
mov
leave
shlb
fisttps
inc
pusha
sbb
int
or
out
pop
andl
les
and
int3
loopne
outsb
dec
pop
mov
pop
or
cmpl
add
add
or
lods
or
repz
push
jl
xorb
sub
push
or
sub
stc
add
pop
arpl
jo
inc
loopne
icebp
inc
cmpl
mov
leave
sbb
pop
and
inc
or
addb
movsb
sbb
mov
adc
lahf
addl
int3
lock
aad
lahf
pop
adc
aaa
adc
mov
icebp
xchg
mov
cmp
std
add
jmp
or
lods
scas
push
adc
rcrl
nop
adc
xor
add
inc
add
dec
add
test
adc
daa
test
mov
pop
call
pusha
or
adc
insb
mov
xor
mov
sbb
jo
mov
jo
in
in
das
adc
xor
xor
es
add
sbb
decl
lahf
stos
in
push
bound
cmc
and
mov
ds
add
add
loope
mov
push
subb
pop
adc
scas
push
adc
outsl
outsl
mov
mov
or
pop
lds
ret
add
pop
add
inc
cmp
sub
iret
lahf
and
or
or
jge
or
mov
test
or
or
mov
cmp
lock
fcmovbe
jl
jp
and
push
jl
or
mov
aam
hlt
call
lahf
in
int
add
lahf
push
and
arpl
add
add
sub
mov
lods
jp
adc
or
and
cmp
loop
sahf
xchg
cld
or
push
icebp
mov
lods
fistpl
mov
pop
mov
dec
scas
mov
ret
mov
cs
mov
mov
icebp
add
push
sti
lea
test
sub
aad
add
pop
dec
sub
dec
repz
test
cli
or
repz
mov
xchg
nop
push
sbb
cwtl
jl
ficoml
mov
sub
in
adc
and
push
jle
dec
mov
sub
push
popf
xchg
add
add
add
mov
dec
mov
adc
jl
sub
push
fcompl
pop
sarb
popf
aas
jns,pt
add
push
jbe
pop
test
push
dec
cmp
inc
sahf
popf
mov
test
push
push
addl
popf
lds
es
les
adc
pop
js
js
in
mov
shrb
sbb
cs
pop
test
mov
add
mov
add
add
push
testb
or
or
xchg
sbb
mov
inc
xor
or
or
aad
push
inc
jecxz
aaa
cmc
xlat
cmp
or
mov
mov
fistpl
mov
testb
jo
hlt
pop
xchg
and
cmp
push
mov
fwait
mov
xor
lock
pop
cs
xor
xor
sub
cs
ss
sarl
shll
fsubrs
imul
out
adc
mov
lods
mov
add
js
add
outsb
push
dec
lahf
sub
sbb
push
pop
clc
sbb
insb
stc
insl
dec
or
cltd
push
pop
out
std
stos
mov
sub
pop
jo
sbb
add
lret
ret
jae
pop
popa
loopne
jmp
jnp
out
add
or
pop
sbb
popa
outsb
add
insb
add
insl
fwait
jmp
clc
or
push
push
push
adc
push
pop
pop
pop
sar
rcrb
add
pop
pop
pusha
push
in
out
adc
add
add
push
dec
and
ret
dec
dec
rcrb
cmpb
dec
sbb
stos
rolb
std
fwait
in
pop
jl
call
push
xor
into
xor
sub
loope
repz
sbb
jbe
mov
mov
ss
push
cli
sub
dec
xor
fwait
outsl
mov
cld
xor
cmc
add
data16
or
push
stos
xchg
xchg
xorl
sbb
icebp
or
add
cmp
push
push
mov
pushw
pop
jg
fsubrs
ss
dec
add
das
sarb
mov
add
xchg
pusha
daa
or
sub
bound
mov
jl
push
xchg
inc
push
cmp
pop
add
sbb
xchg
add
mov
sahf
rclb
dec
adc
or
dec
cmp
or
subb
add
xchg
rolb
mov
idivb
sub
mov
or
loopne,pt
sbb
or
xchg
add
nop
or
inc
xor
mov
js
xchg
pop
push
js
fcoml
push
std
lcall
jno
xor
xchg
and
faddl
cmpsb
push
push
dec
repz
mov
push
fimull
add
js
pop
mov
addb
adc
xor
std
outsl
es
mov
pop
push
mov
add
push
mov
mov
jne
push
sti
push
outsb
mov
push
add
mov
add
repnz
lock
jne
lods
mov
adc
jo
clc
jg
xor
push
add
or
test
das
jp
add
sbb
or
jno
add
lcall
or
jl
add
cld
das
movsl
cmp
addl
sbb
je
popf
jno
mov
add
mov
add
movsb
ss
inc
mov
sbb
add
add
scas
add
iret
pop
divb
mov
lret
or
hlt
das
lea
sahf
or
add
addb
loopne
or
cmpsb
add
lahf
lahf
outsl
jo
clc
push
inc
xor
xor
add
imul
popa
subl
testb
push
cmp
scas
add
aaa
mov
je
lcall
subb
mov
or
add
pusha
adc
add
jb
mov
pop
add
add
cmp
jl
and
mov
sbb
orb
pop
inc
add
jle
dec
add
incb
incl
repz
jl
cmpsl
sbb
adc
outsl
lods
loope
sbb
cmp
adc
ljmp
jp
jno
sbb
lahf
sub
ljmp
inc
cmc
xchg
jno
outsb
lcall
orl
adc
dec
clc
pop
mov
out
mov
das
clc
mov
int3
sbb
mov
add
mov
repz
rorb
mov
mov
les
stos
ja
shrl
ljmp
orl
jb
ret
push
cmc
shrl
add
cmp
mov
inc
push
call
data16
dec
mov
xchg
mov
inc
dec
sahf
cmc
lret
rcll
mov
add
sti
jp
cld
sahf
mov
jo
cmpsb
js
xor
xor
out
cmc
jg
lahf
jg
sub
jle
add
pop
inc
aaa
push
dec
or
je
push
add
bound
pusha
add
je
add
pop
mov
mov
add
mov
jmp
or
or
xorl
adc
shl
xor
pop
and
adc
lcall
jb
andb
add
fisubrs
push
icebp
fadds
aas
outsb
je
cmc
push
mov
test
cmc
fdivrs
push
inc
stos
mov
push
orb
fistl
mov
addr16
add
fcomi
lock
add
cmp
mov
push
inc
enter
xorb
add
cli
fisttpl
jno
dec
ret
lock
jb
inc
push
cld
xor
cmpb
push
adc
add
bound
jns
mov
filds
xor
popf
insb
jns
shlb
mov
cmp
ja
orb
repnz
xchg
mov
mov
adcb
jg
push
int
add
add
inc
aam
ja
cmpsl
or
push
mov
ret
in
in
add
push
mov
add
sti
mov
sbbl
and
mov
movsl
sbb
shrl
add
std
loopne
cmp
outsw
cmp
jg
rcll
pop
mov
dec
add
mov
mov
jmp
ja
add
adc
jp
in
mul
jns
loopne
add
je
js
sub
jl
jb
add
outsl
sbb
dec
sbb
push
or
add
aaa
xchg
sub
pop
dec
mov
sahf
and
and
mov
mov
dec
sbb
mov
cli
mov
and
jns
push
mov
cmpsb
xchg
mov
mov
add
push
adc
sub
inc
cli
pushl
add
inc
inc
mov
add
inc
push
add
loopne
andb
outsb
rclb
adc
add
inc
add
push
sub
adc
dec
and
mov
pop
sbbl
mov
repnz
or
sub
test
call
xchg
mov
xchg
clc
mov
sar
sti
push
xor
loopne
repz
adc
lea
jne
sti
or
scas
je
or
cmpsb
dec
add
mov
dec
sbb
mov
stos
mov
repnz
or
stc
inc
or
bound
or
adc
mov
dec
mov
das
dec
inc
or
testb
xor
aaa
mov
testb
adc
xchg
imul
push
into
pop
lock
shlb
pop
cmc
adc
add
inc
jp
shlb
cmp
mov
xchg
test
fidivrl
ds
sti
add
xchg
add
rcrl
xchg
add
scas
jb
pop
xchg
mov
out
xchg
rep
sub
mov
pop
push
push
jmp
push
cmp
and
adc
cmp
idivb
dec
lahf
jmp
lock
xor
inc
loopne
add
mov
xor
xchg
stc
push
pop
or
mov
sub
popf
inc
xchg
shrb
mov
mov
or
sub
dec
lret
jl
pop
or
mov
inc
fisubrs
push
je
add
out
and
shlb
push
loop
sbb
mov
add
adcb
addb
aam
or
cmc
dec
and
cmpsb
and
enter
add
mov
rclb
ja
cmpb
sub
mov
sub
daa
push
test
pop
pop
add
loopne
mulb
es
fldl
cmp
jl
arpl
loop
sbb
and
aam
icebp
mov
add
shll
adc
fwait
sub
sbb
lcall
and
sahf
mov
sti
out
popa
test
sahf
sar
mov
inc
xchg
xor
daa
loopne
push
je
jno
pushl
push
or
je
push
dec
push
sahf
fs
sahf
inc
insb
add
scas
jp
cld
lock
push
cli
repnz
sahf
push
gs
jmp
xchg
jg
pop
test
inc
pop
add
add
push
add
xchg
pop
add
or
incl
call
sahf
mov
add
sahf
add
lea
testb
cmpsb
ja
mov
loopne
jbe
xor
mov
rolb
inc
xchg
out
das
adc
cmpsb
pop
test
jne
add
adc
out
fsubs
rcrb
mov
or
clc
mov
cld
mov
pop
jb
add
int3
bound
incl
inc
std
jo
or
mov
jo
inc
in
or
jns
es
add
and
push
inc
mov
mov
jo
ja
call
fwait
dec
aam
sub
out
jp
mov
mov
xor
movsb
add
stos
push
sbb
add
and
mov
and
xchg
aaa
cld
outsl
xor
mov
sahf
xchg
test
and
and
xchg
daa
lods
add
mov
std
jbe
cmp
outsb
das
jecxz
loop
shrb
scas
jp
add
jg
sahf
cli
or
mov
js
add
sahf
cmpb
pop
in
jns
add
js
data16
push
hlt
andb
jno
adc
dec
inc
fisubl
add
xor
fcmovnu
sub
roll
and
dec
stos
add
arpl
xchg
cld
adc
dec
mov
add
xor
mov
mov
enter
shlb
clc
add
push
jp
push
add
cld
xor
or
mov
lock
and
sub
bound
pop
call
cld
push
stos
aaa
mov
pusha
or
sahf
repz
or
xor
mov
push
jbe
xchg
sub
add
cmc
lcall
sahf
sbb
mov
adc
sbb
adc
and
sahf
dec
mov
sti
inc
sbb
mov
cld
incl
fdivrl
xor
add
inc
add
jle
mov
cmp
add
jne
or
pushl
push
mov
and
jae
jg
das
pop
mov
push
idivb
cmpsl
push
cmp
daa
and
call
adc
outsl
cli
lcall
sahf
mov
and
or
jno
push
inc
add
jbe
roll
cmpb
add
or
cmp
sarl
ret
push
sahf
jecxz
add
mov
test
add
xchg
push
inc
aad
push
dec
loope
add
cmp
sbb
movb
imul
mov
or
inc
sub
fdivr
inc
adc
xor
pusha
or
outsb
sbb
data16
decw
js
jle
in
inc
pusha
mov
inc
add
mov
mov
or
adc
or
add
mov
std
rclb
lds
mov
stos
subl
add
enter
or
pop
lock
inc
pop
push
push
orb
pop
insb
sub
sub
and
loop
mov
fdivrp
dec
mov
and
or
std
push
mov
mov
rorb
neg
push
cmc
and
adc
or
mov
adc
dec
shl
mov
jne
push
testl
pop
push
push
push
add
cli
in
or
in
and
xor
mov
std
js
jb
inc
mov
and
cmpsb
mov
jb
pusha
sub
jns
test
mov
xor
jno
mov
inc
cmp
sbb
inc
es
mov
cmc
outsl
push
ret
fistl
xchg
sub
xor
cmpsb
add
push
daa
je
adc
pop
jno
and
cli
dec
jne
xor
sahf
sub
mov
movsb
test
sbb
pusha
mov
hlt
je
jg
aas
xchg
pop
pop
and
or
push
inc
mov
xor
and
cmp
adc
push
cmp
add
mov
mov
sub
xor
push
orb
movb
inc
daa
rorl
add
xchg
adc
sub
pop
data16
ja
out
js
mov
xor
add
jp
sti
cmp
repnz
adc
lock
cmp
mov
lcall
aas
out
mov
aas
cs
pusha
add
outsl
jp
add
or
ljmp
add
repz
add
inc
addl
dec
mov
add
jne
inc
xchg
sub
inc
movsb
and
dec
test
decb
mov
xorb
jo
loop
bound
stos
test
xchg
lock
mov
xor
mov
aas
setl
sub
jns
add
sti
cmpb
add
mov
xor
stos
jo
jge
add
sub
dec
outsl
clc
insl
sti
ja
jle
xorb
and
cld
pusha
popa
xor
sti
cmp
mov
jo
adc
push
pop
inc
ja
cld
push
paddb
ja
push
add
nop
scas
and
add
rolb
xor
xchg
and
jb
lods
popf
outsb
sbb
jmp
fistps
add
sbbb
int3
sbb
mov
inc
add
inc
nop
outsl
mov
mov
jne
gs
mov
icebp
xchg
fidivs
inc
add
add
popa
adc
addb
in
mov
clc
jg
jno
scas
cmc
add
std
or
mov
sub
jle
test
lods
adc
mov
pop
repnz
xchg
js
and
jne
nop
add
inc
cmc
lods
jb
dec
push
je
orb
fdivl
loopne
push
sbb
stos
mov
sti
add
jmp
divl
sbb
xor
jns
leave
add
add
mov
clc
or
push
jb
cmpsl
lods
cmpsb
cmp
popf
mov
dec
add
movsb
push
push
test
lcall
hlt
sti
and
jle
inc
add
lods
sub
push
subl
cmp
mov
adc
add
mov
js
push
dec
sahf
ss
aaa
or
adc
es
mov
into
cs
pop
xor
daa
inc
add
mov
mov
mov
inc
mov
daa
add
add
push
mov
xchg
xor
mov
outsl
jle
sbb
sti
cwtl
cmpsb
add
psubsw
cld
xor
mov
and
add
pushl
and
std
mov
out
sbb
sub
test
lock
xor
shlb
xor
ja
jo
rorl
sub
jbe
mov
sub
cld
add
outsl
aas
pusha
xor
or
stos
xchg
xchg
loope
popf
push
mov
testb
push
std
outsl
adc
mov
add
jge
inc
add
xor
cmpsb
popf
push
mov
mov
jp
adc
mov
add
mov
sar
pop
adc
push
addb
icebp
mov
jno
cmpb
jmp
jae
sbb
push
add
outsb
popf
jno
dec
mov
dec
lds
es
add
dec
inc
hlt
add
lds
faddl
add
test
add
mov
cmc
add
xchg
dec
lcall
add
mov
bound
ret
sub
xor
test
dec
std
mov
push
dec
xor
jno
add
bound
ss
cmp
pop
mov
andb
add
mov
jno
imulb
sub
jle
sti
inc
dec
inc
cld
jb
adc
jnp
popa
shl
ficompl
mov
and
je
sahf
inc
es
std
and
std
and
dec
mov
xor
andb
pusha
inc
mov
and
add
test
mov
or
sahf
xor
es
pop
loope
push
fadds
cmp
mov
jmp
jb
lahf
jg
xor
dec
mov
add
ret
push
add
orb
cld
jp
add
sbb
cmp
lcall
xadd
and
int3
andb
cmp
loop
stos
jns
jnp
call
jnp
sbb
push
inc
mov
jp
add
or
pushl
stos
mov
mov
dec
mov
dec
push
inc
call
ja
dec
adc
in
fadds
add
add
or
test
or
inc
mov
push
inc
dec
rolb
add
fwait
subb
mov
push
rcrb
sub
or
rol
jnp
jae
dec
test
pop
mov
leave
stos
cmp
addb
and
ds
es
sti
add
lds
add
dec
mov
jecxz
push
mov
addb
mov
out
inc
pop
test
xchg
mov
adcb
pop
insb
sbb
or
xor
lahf
cmp
cmpb
jnp
inc
add
cmpsb
sahf
cwtl
rclb
cmp
mov
cmp
and
and
js
cmc
leave
rcrb
sbb
je
addb
jnp
jl
jne
inc
add
pop
cmpb
arpl
mov
ds
sbb
rorl
mov
cmc
inc
aaa
addr16
or
incl
jae
pop
jbe
cmc
inc
mov
dec
lods
add
add
outsl
adc
dec
jne
and
pop
loopne
test
shl
mov
push
mov
cmpsl
mov
dec
les
push
mov
push
aam
lret
rcrl
addb
pop
loop
push
mov
and
or
add
and
push
addb
test
mov
lock
sbb
fdivrp
adc
std
or
inc
cwtl
loopne
andb
sbb
cld
in
mov
or
jnp
and
push
adc
adc
pushf
stos
xor
dec
and
aaa
adc
add
xor
inc
pop
sub
cld
aas
add
inc
cs
or
adcb
lcall
sub
outsl
clc
scas
xor
sub
xchg
fadds
inc
push
and
dec
sbb
hlt
sub
scas
mov
rclb
mov
cmp
fwait
mov
out
call
xor
bound
rorb
cli
sub
mov
pusha
lcall
pop
outsl
add
js
bound
mov
pop
or
add
mov
and
xor
inc
adc
cld
fistpll
dec
std
mov
repnz
ja
jg
add
mov
push
mov
add
cli
outsl
inc
mov
jp
push
rorb
js
jge
xor
mov
cltd
add
add
scas
loop
movsl
inc
mov
jmp
loop
inc
jmp
mov
and
subb
adc
adcb
loope
inc
loopne
push
xor
cmp
add
shrb
jg
pop
adc
lahf
mov
fwait
popf
xor
push
arpl
push
jno
push
push
cmp
sti
adc
imul
add
dec
sub
je
or
jae
dec
mov
repnz
add
fldt
pusha
adc
andb
adc
xor
xor
add
add
sub
dec
add
jae
ss
icebp
mov
inc
add
lret
inc
loope
movsb
pop
mov
and
aad
ss
incb
or
inc
mov
mov
inc
addl
cld
ja
jmp
or
add
add
jbe
mov
ret
fs
and
lahf
jge
sbb
int
mov
inc
add
or
clc
fs
jo
incl
sahf
mov
inc
jge
rol
dec
sti
xor
inc
or
push
std
cmpb
pusha
bound
or
lods
loopne
rolb
cmp
pusha
insl
je
mov
aaa
rolb
add
lock
es
mov
add
call
rorb
jl
into
arpl
jo
popf
pusha
jo
filds
mov
ja
addb
inc
ret
add
push
fsubs
sub
inc
test
mov
add
mov
jg
fwait
clc
sbb
out
or
cwtl
xchg
shr
shl
imul
mov
jmp
push
daa
push
lahf
mov
mov
adc
adcb
loopne
addr16
mov
les
test
ja
add
ja
mov
mov
add
stos
add
je
loop
or
sub
mov
push
es
mov
pop
hlt
sbb
add
jb
fmull
jp
add
rcrl
testb
clc
testb
arpl
sub
jb
popf
aaa
loop
xor
pop
adc
xor
add
mov
add
add
add
sub
jae
inc
sub
sub
aas
je
test
loope
inc
adc
or
jno
ja
ds
dec
add
pop
add
pushl
jl
and
jnp
jno
pop
add
and
mov
daa
ja
add
add
add
mov
fdiv
dec
jl
or
and
jl
push
mov
inc
nop
jg
add
push
and
pop
add
inc
ret
sbb
ficomps
cltd
inc
lods
dec
jb
data16
test
xorb
pusha
xor
pusha
jle
pop
mov
cmp
stos
fbld
data16
ljmp
imulb
js
ja
outsb
popf
aaa
jb
nop
add
bound
xchg
sub
xor
hlt
pusha
dec
icebp
cwtl
cli
add
mov
aaa
or
hlt
jb
push
dec
push
add
repz
sub
sbb
jbe
dec
sub
xchg
and
mov
add
sub
jns
add
pop
add
mov
add
clc
pop
test
imul
leave
outsl
add
mov
sti
cmp
mov
push
push
popf
push
rcrb
call
ss
xchg
imul
inc
xor
xor
sbb
or
dec
lods
add
pusha
pcmpeqb
testb
sbb
or
and
data16
js
call
orb
mov
rclb
mov
pop
testb
outsl
xchg
mov
jo
orb
adcb
or
mov
cmp
and
mov
cld
es
pop
mov
adcb
dec
add
jp
sbb
push
xchg
or
pop
ja
mov
adc
mov
sub
das
pop
lods
cmp
jb
inc
add
adc
mov
lahf
ret
lock
int3
sbb
daa
sahf
popa
cwtl
fmull
decb
inc
popf
pop
dec
sbb
cmpb
pop
lock
outsb
inc
xchg
mov
push
lock
sbb
ss
jmp
data16
push
adc
inc
dec
pop
add
add
xorb
hlt
mov
sub
call
and
xchg
adc
mov
shrb
inc
mov
fsubp
jge
outsb
push
mov
je
test
jo
das
subb
shl
adc
push
stos
xor
inc
push
scas
lcall
bound
sti
mov
jb
mov
call
testl
aaa
jl
or
sti
jp
roll
dec
aaa
or
ja
cmp
arpl
outsl
fs
dec
or
sahf
addb
dec
ret
or
bound
loop
rorb
std
jnp
fcmovnb
les
popa
add
xor
mov
pop
xchg
test
sti
add
mov
hlt
pop
sub
push
pushf
sub
sbb
dec
les
loopne
repz
aad
or
and
add
fldt
and
xchg
add
cli
test
add
pop
add
inc
add
and
cmc
adcb
sbb
lods
and
es
shlb
in
inc
jmp
xor
push
inc
mov
and
je
push
jae
and
xchg
mov
ja
xor
push
push
mov
mov
sub
mov
push
pusha
add
rclb
or
and
jg
fsubs
pushl
sub
sub
push
add
inc
add
lret
pusha
test
dec
arpl
add
pop
dec
jae
push
rcl
insb
aad
or
push
into
push
or
mov
mov
push
adcb
call
mov
insb
test
dec
jno
or
incl
adc
sub
pop
dec
add
nop
xor
rclb
cmp
aaa
test
sbb
xor
jl
dec
jge
mov
sub
cld
testb
push
rolb
jle
sub
or
inc
push
cmc
add
fwait
popf
je
cmp
push
cwtl
jno
push
mov
inc
shrb
jae
add
dec
mov
jbe
push
movsb
dec
mov
pop
icebp
jns
bound
cmpsb
notl
out
pop
shl
scas
mov
cmp
or
daa
and
push
lret
mov
mov
icebp
add
xchg
popa
data16
inc
cmp
js
mov
fimull
fs
out
outsl
cld
pusha
je
sar
fwait
aam
add
mov
ja
and
ja
mov
pusha
cmp
mov
add
add
add
lock
daa
lcall
scas
mov
adc
xor
push
dec
or
jbe
and
lods
sbb
lcall
aaa
or
and
ja
jle
jne,pt
notl
inc
bound
pop
push
add
sub
outsl
sar
enter
add
jo
add
sahf
xchg
adc
lahf
mov
repz
sarb
jb
std
loopne
mov
jl
add
aas
lret
add
pusha
test
dec
cld
jg
dec
sti
das
add
jbe
add
jo
cld
jmp
add
sar
xor
lds
mov
push
mov
add
add
mov
cmp
xor
jb
push
out
xor
lret
jp
incl
cmp
sub
xchg
je
fistpll
jb
cld
cmp
je
xchg
jo
cmp
xorl
mov
mov
xchg
cltd
or
sub
push
loopne
mov
mov
xor
or
push
mov
bound
jae
xchg
inc
test
imul
mov
fists
dec
pop
jp
pop
testb
add
add
push
nop
lcall
imul
call
jle
sbb
mov
mov
add
test
leave
mov
sbb
test
or
sti
mov
cld
mov
add
and
jl
test
adc
add
les
mov
adc
jp
roll
adc
mov
ss
dec
add
add
std
fs
sbb
pop
mov
mov
push
push
mov
loop
das
mov
mov
shl
sbb
xor
adc
add
mov
stos
data16
std
stos
test
add
hlt
rolb
outsl
push
mov
cld
test
data16
addr16
jecxz
subl
bound
popa
adc
mov
sub
sub
mov
dec
sub
sbb
cmp
pop
das
add
sub
push
push
and
in
ja
addb
push
orb
xchg
daa
and
pop
xchg
addr16
push
pop
sahf
xchg
push
cwtl
std
andb
out
mov
push
adc
or
add
add
sar
add
xor
cmp
sahf
test
fsubl
cmpsb
mov
add
lock
add
in
or
aaa
or
add
xchg
inc
jle
sti
or
adc
rolb
out
bound
outsl
mov
xor
pop
test
or
mov
mov
mov
jg
incl
sub
outsb
subb
xchg
aaa
cs
retw
and
outsl
sbb
sbb
mov
stos
cwtl
xor
popf
cmp
xor
push
addb
mov
or
adcb
orl
add
jg
add
je
xchg
jne
aaa
cld
mov
mov
xchg
daa
daa
je
inc
pop
push
inc
pushf
inc
into
test
sahf
cld
divb
add
dec
js
outsl
adc
call
adc
or
addl
sub
add
lock
rcll
mov
and
push
or
dec
mov
add
jmp
add
add
sub
test
addl
divb
mov
ja
jl
push
rcrl
insb
lods
divb
xchg
inc
sub
sbbl
mov
sub
lods
push
and
mov
and
lock
shlb
push
push
cmp
ret
data16
mov
sub
in
decl
shrb
dec
mov
pop
inc
mov
lcall
cld
mov
add
sbb
sub
adcb
inc
xor
and
xlat
mov
mov
inc
add
mov
jle
and
sbbb
inc
jb
add
inc
jae
std
scas
in
ret
sbb
inc
sbb
inc
data16
popf
int3
dec
and
mov
mov
mov
xor
dec
loop
loopne
idivb
ss
ffreep
add
mov
pop
sahf
or
ss
jae
or
mov
loop
insl
jg
movsl
and
push
mov
inc
incl
shlb
shlb
sub
mov
jg
lock
sub
mov
sbb
sub
push
fsubrp
inc
adc
popa
mov
adc
xor
xor
inc
inc
shrl
add
enter
adcl
adcb
fimull
inc
and
jne
mov
div
out
dec
dec
mov
push
mov
stos
adc
out
rorb
xchg
clc
jg
pop
fimuls
and
loopne
and
or
pop
sarb
aaa
outsl
mov
mov
and
jns
jecxz
insb
and
xor
jg
and
dec
icebp
sub
push
and
inc
sub
out
inc
push
jle
push
je
insb
xor
dec
lcall
lea
add
cmp
and
mov
cltd
cmpsl
loope
shrb
loopne
pop
add
aas
add
jmp
shll
add
fdivr
repz
les
pushf
cli
mov
call
push
scas
pusha
es
sbb
outsl
sti
ret
out
mov
mov
lcall
or
popa
add
js
sbb
sbb
jle
jae
js
fs
sahf
sbb
or
cmpb
sahf
mov
jg
or
shrb
loopne
es
repz
movsl
push
aaa
pop
subb
pop
pusha
pushf
pop
inc
dec
nop
roll
push
lcall
shlb
insb
push
fsubp
push
and
push
sahf
mov
andl
int
sub
sub
pusha
add
sbb
or
js
xchg
lret
loop
add
cmp
mov
popa
orb
sub
inc
add
pop
sub
nop
loop
cs
adc
adc
push
loope
rol
lret
aaa
push
pop
mov
inc
lcall
cld
mov
test
lret
sahf
jp
pusha
sbb
js
adc
sub
arpl
and
andl
or
nop
arpl
add
aaa
outsb
scas
sbb
sti
icebp
cli
inc
adc
mov
xor
insl
add
rolb
mov
cmc
mov
xchg
jo
jne
jmp
mov
pop
popa
movsb
push
add
and
jg
jmp
jne
add
aam
cmc
pusha
xchg
push
mov
push
pusha
rorb
mov
hlt
sarb
add
push
std
scas
into
mov
push
es
xchg
and
hlt
stos
push
sbb
sbb
sub
adc
jp
and
mov
jmp
ret
add
nop
add
mov
mov
add
insb
add
push
push
rorl
daa
sbb
ljmp
jle
add
adc
xchg
xchg
dec
push
cld
sub
mov
fcomip
cmc
xchg
je
or
jb
add
add
repnz
xorb
jb
lock
mov
pushf
ja
mov
push
ss
sbb
xor
fsubs
daa
mov
add
paddw
js
loope
pop
mov
mov
sub
jp
adc
mov
andb
outsb
add
std
pop
insl
push
cmp
mov
jp
add
jle
in
mov
inc
push
jo
arpl
push
jo
and
outsb
lock
ret
icebp
pop
ret
add
add
adc
test
clc
ja
mov
ljmp
mov
imul
mov
mov
jnp
ja
popf
sar
stos
push
push
add
scas
orb
or
push
xchg
dec
jo
andb
and
dec
push
jp
dec
mov
jbe
pusha
dec
test
or
jle
jle
mov
mov
add
jge
gs
mov
fsubrl
push
push
push
push
jo
fs
arpl
and
xchg
sbb
roll
nop
decl
dec
nop
xchg
or
add
jne
sub
stos
adc
push
xor
push
push
push
dec
jne
dec
js
es
add
das
rorb
cmpsb
adc
and
add
jno
sub
scas
inc
add
and
loope
loop
sbb
ds
lock
xchg
add
incl
fsubl
push
ss
xor
xor
mov
sarb
in
push
adc
inc
add
sbbb
xor
push
mov
addr16
jmp
mov
sbbl
icebp
xor
dec
xor
add
adc
pop
test
xorl
pushw
push
mov
ja
xor
jmp
sar
adc
jge
add
fidivs
addl
and
mov
pop
enter
adcb
das
mov
ss
data16
cmc
add
jg
orb
pop
jae
add
mov
add
je
in
or
push
pop
test
testb
add
jno
sbb
xor
push
cld
jg
mov
dec
jle
jb
or
mov
repz
jo
sub
ja
jo
adc
xor
mov
pop
add
cli
out
and
add
jl
push
pop
mov
fcmovnb
add
mov
fwait
cmp
push
xor
adcb
lea
or
or
outsb
pop
sti
add
push
add
push
push
lock
jg
je
add
mov
or
dec
std
mov
cwtl
decb
jp
dec
jno
lods
lcall
jbe
outsl
ds
adc
jns
and
inc
and
and
movsl
popf
push
out
cmpsb
shlb
dec
and
xor
push
jbe
sub
jecxz
pop
add
inc
adc
mov
mov
dec
xor
and
push
add
pusha
sub
addl
outsl
add
outsl
je
imul
push
loope
jmp
cmpsb
negl
push
push
inc
cmp
repz
outsl
ljmp
push
repnz
pusha
adc
jl
lcall
push
pop
daa
enter
sub
imul
in
jg
jnp
push
dec
push
loopne
add
or
ljmp
push
add
lock
sahf
scas
cli
mov
push
mov
mov
rclb
mulb
and
pop
stos
mov
mov
enter
std
decl
dec
mov
aaa
inc
push
add
add
and
orb
orl
shlb
add
mov
ret
pop
fs
inc
dec
jo
inc
cmc
jg
xchg
push
xchg
mov
lods
xor
sbb
and
pop
nop
inc
jb
orb
stos
xor
sub
ljmp
sub
adc
inc
dec
or
cwtl
mov
add
and
xor
cwtl
add
mov
sub
shll
adc
or
int3
and
xor
jle
shlb
incl
cld
jno
aas
xchg
add
add
nop
nop
cmc
sbb
rolb
std
inc
sbb
dec
mov
and
inc
pop
loopne
mov
ss
jne
dec
mov
sahf
cld
jmp
cmpsb
rorb
add
sbbb
add
scas
loopne
mov
icebp
add
jo
jl
popf
bnd
sbb
out
add
inc
dec
mov
pop
and
add
xchg
jmp
ss
xor
mov
in
cli
jbe
std
cmp
mov
xchg
push
and
inc
mov
and
push
es
std
es
mov
xor
in
fwait
sub
xchg
jae
mov
sub
jle
xchg
add
pop
xor
pop
mov
jmp
mov
push
cmc
ljmp
xchg
lock
mov
mov
ja
mov
cmp
xor
shll
and
cli
aaa
cmc
mov
inc
and
ficoms
adc
mov
pop
cmpsl
jle
orl
add
add
ljmp
sti
cmp
scas
orb
leave
mov
or
cld
cmp
add
dec
sti
jb
inc
rcrl
std
lods
jmp
mov
fcoml
add
and
pushl
inc
sub
fcomi
insb
cld
adcb
xorb
or
sbb
mov
lret
push
insl
bound
and
lock
fidivs
divl
lock
add
popa
add
mov
dec
add
add
cld
mov
add
jbe
jne
jmp
inc
dec
cmp
icebp
push
add
rclb
and
push
sahf
pop
mov
or
ds
ss
pop
mov
pop
rcl
xor
push
pop
inc
xor
or
int3
add
dec
mov
jne
bound
imul
jbe
daa
push
ds
sub
jge
jo
cmp
in
ja
pop
sahf
pop
dec
clc
add
push
push
or
add
sbbb
cs
push
jle
mov
insl
mov
pop
xor
jo
decb
mov
inc
dec
mov
jb
loop
jae
jne
add
push
mov
fs
adc
mov
lret
scas
adc
or
add
and
cs
roll
or
and
sahf
mov
xor
in
ljmp
push
outsb
mov
repnz
push
sub
aaa
add
pop
and
pop
addb
cld
and
inc
mov
push
and
jge
pop
cwtl
cld
and
jp
and
inc
subb
fisttps
loopne
inc
dec
add
add
cld
popa
dec
addr16
and
daa
int
mov
daa
je
mov
pop
loopne
icebp
bound
jno
insb
xor
cltd
pop
cmpsl
add
push
addb
jmp
cmp
dec
push
adcb
std
in
jle
push
bound
dec
orb
outsl
jns
cmp
addl
and
sbb
int3
jmp
cmc
pop
sub
xchg
lcall
mov
std
cmp
mov
shll
fildl
inc
mov
add
je
push
std
or
pop
add
cmp
adc
movsb
xlat
sbb
je
mov
outsb
sub
insl
js
lock
dec
inc
push
cmc
jle
mov
xor
lcall
mov
xor
sti
jp
subl
and
shll
and
sub
hlt
dec
or
ret
jne
sbb
ficoml
test
mov
mov
jb
inc
push
pop
push
jbe
add
std
inc
sti
sub
outsb
and
xchg
and
es
sbb
pushl
push
xchg
rorb
jp
rorb
insl
sar
jnp
sbb
cmp
pop
and
data16
mov
and
popf
lds
jo
jg
sub
jp
cmc
sbb
pushf
je
push
mov
jo
sub
mov
mov
jge
mov
je
add
fmuls
mov
ss
sbb
mov
clc
jb
std
jbe
int3
scas
lea
push
dec
pop
push
xor
sarl
cmp
add
std
add
mov
or
jp
add
sub
sahf
cld
sub
mov
adc
mov
push
cmpb
jno
pop
loop
incl
push
sbb
xchg
mov
aaa
bound
jbe
aas
aam
js
inc
test
adc
testl
sub
fstl
dec
cmp
add
insl
inc
sti
push
pop
mov
inc
push
inc
faddl
inc
adc
or
rcrb
sub
pushf
pop
lock
fwait
jmp
ret
xor
arpl
push
out
fs
jns
arpl
je
lock
insb
rol
js
add
add
fs
xchg
fmuls
mov
pop
jbe
adc
js
or
in
cmp
jb
inc
push
push
add
adc
cmp
hlt
orb
lret
add
sbb
add
add
jmp
jbe
pop
xor
jp
adc
add
xor
adc
mov
add
clc
mov
xor
divb
push
data16
rorb
add
cmp
outsb
or
ret
mov
pop
add
mov
popa
das
cmp
inc
js
push
push
cld
or
sub
or
adc
loop
xor
cmp
jo
jge
push
mov
divl
pop
cmc
loope
add
sbb
aaa
push
std
jg
sahf
aam
insl
mov
subl
adc
cmp
ds
popf
fs
pop
jge
cli
jno
std
jg
push
cmpsl
lahf
add
js
pushf
jne
add
clc
jecxz
pusha
and
pop
push
push
add
mov
les
hlt
or
sbb
push
and
adc
add
pop
mov
sarb
js
fdivl
jge
and
add
dec
add
push
bound
dec
inc
xorl
pop
pop
sub
rolb
sbb
add
decb
mov
jecxz
jle
sub
loopne
sub
push
jl
jo
adc
les
loopne
mov
add
lock
cmp
lea
push
data16
pusha
sub
jl
icebp
or
andl
sbb
sub
jbe
ds
jne
test
cmpsl
cwtl
add
mov
aaa
add
push
and
sahf
inc
push
push
jg
and
scas
sahf
imul
sub
cmc
ss
jns
add
jno
loopne
andb
and
push
add
dec
sub
dec
sahf
fwait
add
and
cmp
mov
pop
mov
pop
adc
test
pop
jbe
movsl
mov
mov
shrb
fildll
mov
inc
sti
adc
pop
fsubrs
aaa
sahf
sub
js
sahf
pop
lea
lock
xchg
add
popf
push
dec
dec
xor
inc
loop
pop
and
cli
loope
pop
inc
mov
adc
outsl
aam
sbb
pop
and
cmpb
addr16
hlt
inc
aam
loopne
pop
push
add
xchg
cmp
and
xor
xor
adc
incb
data16
outsl
outsl
cli
xor
cmp
adc
add
inc
add
cmc
and
mov
push
sub
sub
or
test
jb
lahf
test
cmp
sti
inc
fisubrl
call
pusha
push
jge
inc
lcall
cmp
or
add
imul
aaa
xor
and
jnp
cmpl
ja
jmp
add
ds
pop
je
push
push
push
adc
add
sbbl
mov
outsb
ds
in
push
jno
cmpsb
sbb
add
stos
addb
into
and
sbb
push
sahf
pushf
bound
stos
scas
dec
test
es
ffree
mov
jb
add
inc
shlb
jp
dec
mov
mov
repnz
adc
roll
call
mov
xchg
lcall
dec
xor
shrb
sbb
pusha
das
mov
out
push
inc
loopne
adc
or
sbb
dec
or
outsb
cmp
mov
sub
mov
hlt
push
pusha
push
adc
jns
outsl
sub
incl
mov
add
push
std
movsl
mov
ja
add
dec
mov
inc
ljmp
loope
pop
adc
popa
push
outsb
sbbb
std
xlat
data16
xchg
jbe
push
adc
push
lock
jbe
push
cmc
dec
mov
add
jae
sarl
icebp
std
add
pop
add
cli
mov
sti
sub
lea
clc
cld
push
xor
mov
and
decb
std
and
adc
push
add
sub
pop
sub
push
mov
sti
mov
fmuls
or
dec
lret
clc
fdiv
mov
ret
or
xor
sahf
jecxz
repnz
mov
adc
ljmp
sti
add
push
lcall
add
inc
rorl
and
push
dec
sahf
orl
popf
pop
ja
adc
mov
xchg
mov
add
sbb
push
add
or
data16
inc
pop
loopne
std
aaa
sbb
adc
or
push
add
adc
rorb
aam
or
sub
push
ljmp
dec
sahf
push
mov
add
bound
add
popf
pop
nop
or
push
ljmp
adc
jno
jecxz
adc
add
and
mov
jb
and
nop
xchg
mov
sub
call
pop
and
mov
ds
pusha
xor
add
adc
nop
and
xorb
sub
repz
jp
inc
pop
mov
mov
js
jb
adc
movsb
push
sub
fiadds
mov
and
arpl
jp
pop
ja
imul
fisubs
pusha
popf
mov
add
adc
jne
sub
dec
push
rorl
dec
dec
lret
sub
movsb
sbb
push
cwtl
ljmp
mov
xor
pop
or
push
cltd
nop
adc
addb
shrb
popf
addr16
add
ljmp
loope
cwtl
push
cmp
cmp
lcall
sbb
decl
fstl
shl
or
dec
call
scas
ja
test
jbe
clc
sub
fcmovnu
clc
jne
or
push
push
inc
aaa
loopne
jecxz
sti
dec
insb
push
add
dec
add
lahf
out
shlb
or
mov
jmp
loopne
and
adc
pop
outsb
xor
sbb
jle
mov
jg
mov
dec
cmpsl
add
inc
mov
sub
push
jo
mov
push
fadds
fst
add
push
add
addl
mov
cmp
je
mov
and
repz
and
sbb
add
add
call
xchg
jae
jae
rclb
je
jo
loop
lock
orb
and
pop
aam
push
mov
jle
ret
out
jnp
roll
and
mov
shlb
mov
fmuls
movsb
stos
repz
fwait
scas
call
sub
jbe
add
daa
popf
outsl
sarl
shlb
fs
jmp
fs
fistpl
jg
roll
mov
mov
fwait
adc
or
jne
add
push
shll
fst
xchg
jo
push
sub
xchg
sbb
loopne
add
sti
dec
fsub
push
ds
push
push
lock
mov
add
cmc
push
mov
daa
and
push
adc
mov
pusha
cmp
mov
jle
imul
pop
data16
arpl
pusha
aaa
pop
test
adc
popf
pop
shlb
std
and
jb
shlb
jbe
das
mov
mov
ljmp
popa
sub
js
inc
add
inc
add
dec
addl
inc
arpl
add
out
xor
mov
dec
add
pusha
sti
ljmp
pop
je
dec
nop
cmpxchg
or
xor
cmc
mov
jge
sub
popa
sub
test
push
mov
clc
and
fwait
inc
fwait
int3
add
movhps
xor
and
test
cld
or
jns
adc
and
add
outsl
and
nop
cli
testb
arpl
adc
mov
mov
cmp
or
push
push
mov
cmp
je
and
mulb
mov
and
testb
and
adc
test
sarb
sub
movsb
iret
inc
lcall
and
pushw
add
pop
push
enter
xor
dec
rclb
shlb
mov
sub
inc
cli
les
add
xchg
dec
aaa
cld
mov
nop
popf
adc
add
add
ret
shrl
or
dec
sbb
and
or
fstpt
sub
push
mov
sti
js
inc
rcll
xor
and
sub
and
es
mov
mov
sub
add
mov
testb
add
dec
repz
add
sahf
or
push
or
lcall
pusha
or
xor
add
xor
outsl
mov
xor
mov
xor
push
cmc
mov
pop
jg
lock
aaa
add
sbb
jp
ja
ss
mov
sbb
mov
test
jmp
ss
jg
aaa
incl
dec
mov
hlt
adc
adc
ret
cmp
inc
lcall
pusha
add
push
mov
pop
cld
inc
pop
jecxz
xor
repnz
loopne
push
or
push
sbb
jo
add
add
jle
inc
or
ds
fdivl
addr16
lret
add
popf
mov
jle
les
add
sbb
sahf
mov
add
pop
and
nop
sbb
sti
ljmp
ja
loop
xchg
push
cmp
push
mov
sub
data16
add
and
cmpsl
or
xchg
sbb
push
push
pop
add
jle
es
les
xor
stos
xchg
fiaddl
out
cs
fsubrp
dec
pop
cmp
ljmp
push
adc
adc
xorb
add
add
mov
data16
ss
add
ds
sub
or
jo
sbb
inc
sbb
add
std
add
lahf
cmp
scas
add
or
add
popf
test
cli
inc
or
mov
mov
clc
add
sbb
mov
add
sbb
mov
in
int
adc
pop
add
daa
add
int
or
test
and
decb
pusha
into
dec
push
push
std
and
dec
add
bound
xor
add
add
lods
xchg
add
cmpsl
pop
mov
sarb
add
xorb
cli
shrl
sub
jl
cli
add
jno
mov
insb
mov
xchg
notb
dec
add
jg
std
orb
scas
mov
add
add
inc
lods
or
push
mov
add
ss
xorb
int
ss
xor
add
test
and
orl
je
pop
add
orb
jnp
pop
xchg
pop
xorb
mov
and
mov
je
sub
andl
sub
add
mov
mov
aad
pop
mov
pop
mov
or
ret
mov
fbld
push
pop
outsl
rcrb
adc
ljmp
dec
cmp
jg
lock
cld
mov
sub
push
or
and
xor
add
ljmp
inc
fdivrl
jbe
mov
lret
imul
add
and
or
cs
popf
jle
sahf
or
lods
sub
fs
and
das
xor
push
addr16
shrl
adc
lock
pop
pusha
outsb
mov
inc
push
and
addl
inc
and
int
mov
clc
ja
or
bound
inc
test
loop
push
test
mov
push
and
and
rolb
addb
shr
inc
sti
add
add
xchg
add
scas
sbb
sub
rol
jb
out
inc
sub
pop
lcall
nop
push
bound
or
insb
movsb
cmp
jge
lock
mov
sti
mov
add
aaa
fsubrs
or
pushf
bound
pop
push
or
addl
rolb
clc
mov
push
and
decl
and
add
lahf
add
scas
jge
add
idiv
filds
jl
or
adcl
add
test
dec
or
bnd
or
or
inc
ror
xor
pop
scas
rorb
inc
sbb
mov
loopne
jb
outsl
fildl
or
bound
push
and
jne
fs
data16
fidivrl
sbb
cmpl
mov
dec
cmc
fwait
dec
push
test
jnp
notb
adcb
loop
jle
fistl
push
or
push
mov
sub
imul
and
in
adc
push
mov
rorb
outsb
mov
add
dec
jl
int
add
cmc
push
or
aam
les
shrl
idivb
add
add
add
add
aaa
dec
or
pushl
push
mov
adcb
push
add
or
add
inc
movsl
and
sahf
ljmp
sbb
inc
cs
arpl
inc
add
or
sar
sbb
out
clc
and
xor
inc
es
push
ds
lock
inc
arpl
pop
and
das
jo
test
loope
in
popa
mov
jle
fisttps
popf
inc
fisubs
push
ds
test
adc
mov
mov
insb
std
mov
movsb
fwait
adc
jle
je
into
push
test
add
add
mov
adc
mov
dec
jle
movsb
stc
dec
and
popf
outsb
mov
sahf
jg
loope
aas
and
gs
stc
inc
loopne
and
sbb
adc
popf
xor
jne
addl
sti
cmp
loope,pn
jne
ret
nop
addb
and
sbb
jmp
add
or
lock
add
ja
stos
xor
adc
or
sub
sti
pop
es
mov
jb
ljmp
push
shrb
incb
and
clc
mov
fcoml
pop
das
clc
mov
add
inc
scas
dec
shlb
push
mov
pop
fisubl
inc
lcall
sub
mov
mov
jle
add
out
addb
add
js
ljmp
loope
xor
adc
xorb
lcall
pop
ret
decl
inc
les
popf
add
movd
mov
popa
and
xor
mov
mov
adc
mov
mov
or
loope
sbb
push
and
pop
icebp
sub
add
pop
data16
mov
add
sub
fdivrl
rcrl
inc
mov
popf
add
pusha
pop
jl
popa
add
pusha
add
adcl
ljmp
fs
loopne
popa
and
ret
jecxz
andb
pop
and
pushl
addb
and
push
pop
mov
subb
mov
push
sub
fiaddl
dec
rolb
jle
jnp
fs
lret
add
outsb
mov
mov
push
pop
mov
clc
push
popa
inc
push
lds
ret
sbb
xor
xor
xchg
jb
popf
cltd
cli
jg
loopne
cmpsb
dec
cmpl
jg
mov
and
add
js
adc
jo
icebp
call
es
ss
data16
or
adc
lock
lock
add
inc
int3
in
xchg
inc
cmp
pushl
enter
sub
jnp
xor
call
or
aas
xor
jbe
test
pop
adc
inc
dec
dec
in
popf
sar
jg
jns
rcll
adc
add
push
pushl
popa
or
adc
push
orb
incl
adc
ds
inc
adc
aad
pusha
add
and
add
fisttps
imul
adc
adc
popa
inc
mov
andb
insl
push
imul
out
or
sahf
add
jo
push
add
outsb
ja
decl
add
rorl
mov
sub
push
scas
inc
add
mov
cmp
add
inc
lds
jg
test
sbb
movsl
dec
es
add
or
sbb
ret
stos
jno
into
es
and
inc
insb
or
mov
mov
fistpll
lock
and
mov
add
and
outsl
push
jg
rclb
add
push
pop
cmp
add
mov
xchg
xchg
add
loopne
inc
loopne
sub
push
add
xchg
data16
fistps
rcl
and
sbb
add
adc
pop
clc
inc
push
add
sahf
fnstenv
and
inc
and
sarb
mov
push
adc
inc
add
mov
ret
or
add
inc
push
mov
inc
add
fbld
add
mov
add
add
jle
jge
jns
pop
lock
lcall
cwtd
outsb
std
dec
cmp
roll
pshufw
loopne
pusha
cltd
dec
xor
sti
rolb
mov
outsl
aam
mov
orb
es
push
add
mov
sti
pushl
or
aaa
or
sub
and
test
mov
mov
outsl
cmpsb
sahf
xchg
mov
adc
popf
jne
dec
sarb
add
push
push
sahf
cmp
jo
jo
xchg
mov
sub
adc
mov
stos
or
mov
arpl
inc
push
rcll
sti
pop
clc
add
leave
subb
xor
enter
pop
cli
jg
jl
sub
mov
jle
lods
add
and
sti
jecxz
push
sub
out
cs
dec
sahf
push
push
pusha
xor
push
nop
clc
jg
sbb
push
xor
cmp
call
mov
jne
js
sub
jle
mov
adc
or
dec
shlb
clc
outsl
aam
push
cmp
cmp
mov
ret
xor
in
jb
mov
adc
adc
xchg
or
xor
cmp
mov
mov
and
adc
sub
data16
sbb
out
or
das
jo
pop
lret
push
add
rolb
push
add
dec
push
sar
out
push
mov
push
mov
push
jno
inc
aaa
add
js
fcomip
outsl
adc
ret
sti
jp
sti
jo
sub
sbbb
js
pop
ljmp
xor
sbb
push
mov
pushf
clc
jmp
jge
pusha
jo
cld
mov
lea
mov
adc
mov
sbb
outsb
and
pop
mov
ss
sbb
popf
rcr
ss
jp
daa
lock
inc
aas
call
jno
add
dec
xchg
xor
sub
stos
ss
aaa
pop
pusha
mov
cmp
add
pop
push
cmp
cmp
or
mov
push
movsb
adc
adc
fildll
mov
sbb
adc
js
add
ja
push
add
xchg
sbb
in
and
inc
pusha
mov
pop
add
popf
sti
xor
add
popf
js
or
sbb
jp
std
inc
scas
loop
pop
and
popa
mov
jnp
jle
jns
xchg
andb
cmc
ret
inc
int
sbb
pop
xchg
mov
pop
mov
and
mov
daa
or
call
mov
mov
lods
mov
mov
mov
or
sub
add
push
dec
insl
add
test
adc
ja
sbb
mov
pop
pusha
push
bound
xchg
rclb
dec
clc
jmp
cs
fcmovbe
subb
popf
loopne
inc
call
adc
and
mov
std
pop
mov
es
adc
dec
arpl
inc
adc
mov
les
icebp
scas
clc
adc
jp
mov
push
mov
add
mov
dec
and
out
or
xchg
or
inc
stos
mov
pop
pop
popa
or
push
adc
jo
adc
ret
outsl
nop
loopne
add
ror
add
scas
cmpsb
sahf
jmp
shll
push
or
jp
clc
jg
lock
sbb
call
popf
jle
int
in
sbb
mov
and
sarl
lock
adc
es
sub
insl
mov
scas
loopne
lods
cmp
cwtl
adc
or
lock
or
push
out
push
push
mov
pop
mov
lret
adc
sub
mov
movsl
inc
cmp
es
nop
arpl
mov
push
add
xchg
inc
bnd
pop
jno
popf
jl
cmpl
jecxz
and
and
lock
cmc
xchg
jb
call
je
add
push
push
add
add
add
sbb
repz
shll
aaa
inc
test
adc
jnp
mov
lcall
xchg
dec
ja
insb
sahf
movsl
adc
mov
cmpsb
into
push
sbb
dec
mov
inc
scas
sar
pop
popf
nop
adc
mov
enter
push
jo
push
sbb
xor
sbb
jns
sbb
xor
pop
insl
cld
fstl
jb
add
sub
sti
add
add
bound
stos
jge
sahf
je
cmp
mov
or
decb
mov
add
jnp
ss
jae
cmpl
add
incb
adc
and
pop
add
mov
jb
mov
outsb
mov
push
fsubr
push
test
les
xor
jbe
add
flds
cmp
arpl
stos
cmp
sbb
mov
push
into
adc
adc
xor
addb
jbe
xor
cmp
inc
push
mov
inc
ret
lock
fldl
dec
loop
push
testb
and
andb
and
inc
dec
adc
es
jo
fisubrl
nop
imul
lcall
inc
push
sbb
aaa
out
xor
add
add
mov
shlb
aaa
bound
js
inc
add
mov
insl
add
inc
ds
adc
cmp
mov
add
adc
add
mov
addb
or
push
insl
mov
loop
inc
ret
push
add
mov
mov
add
add
sbb
dec
es
or
adc
loopne
or
in
xchg
sub
out
arpl
add
pushf
xor
sbb
and
into
lods
clc
lods
add
cld
and
add
sbbb
shlb
xchg
adc
outsb
add
mov
std
sti
je
cmp
roll
movsl
outsl
push
inc
xor
push
jle
jp
mov
and
jae
inc
and
scas
test
sub
mov
aaa
or
add
adc
dec
scas
insb
and
idiv
test
xor
push
push
es
sub
andb
mov
loop
add
or
mov
mov
stos
cmpsb
push
sub
add
add
iret
ljmp
adc
sti
mov
incl
sbb
and
or
loop
push
xchg
sub
lret
fcmovb
fwait
pop
ja
lock
pop
cs
and
fld
xchg
std
jbe
jle
jne
inc
push
into
jo
nop
pusha
inc
mov
rclb
dec
out
or
push
adc
cmp
cmp
mov
dec
loopne
adc
jg
testb
or
adc
add
fildll
push
repnz
push
movb
cmp
je
jno
jo
sub
inc
movsl
add
std
add
mov
jecxz
sbb
and
push
je
xchg
or
loopne
ret
sub
andb
push
xchg
std
inc
sbb
in
pop
add
rcrb
outsb
loop
push
inc
add
sub
mov
addb
pushl
cmp
lret
or
enter
dec
mov
mov
test
pop
mov
dec
in
ja
add
xor
js
or
fstps
shlb
jb
mov
add
sub
sub
pop
lret
in
mov
test
push
xchg
leave
ljmp
mov
ss
adc
adcb
andb
push
sbb
mov
call
inc
rcr
and
jmp
or
push
cmp
addb
mov
cmpsl
mov
inc
jne
cmc
and
cld
jns
or
cwtl
lahf
xchg
sahf
lock
or
xchg
test
pop
jp
add
stos
jae
addr16
hlt
inc
push
inc
mov
ja
add
lock
add
xor
push
push
cmp
add
shlb
adc
xchg
test
std
xor
in
dec
mov
aaa
add
xor
xor
inc
mov
data16
fisubs
xchg
sub
or
or
and
out
adc
xchg
std
sarb
lcall
sub
mov
in
ror
add
sub
or
shr
jle
xor
cmp
andl
leave
push
ret
dec
loope
divb
test
pusha
adc
dec
jne
and
gs
cmpsb
jl
xor
sahf
sbbb
fistpll
sub
inc
loopne
mov
ret
clc
adc
cli
add
mov
std
test
clc
push
sahf
pop
mov
es
inc
and
adc
in
adc
adcb
dec
sti
add
pushf
mov
xchg
movb
dec
call
sub
mov
test
cld
cmp
data16
aaa
mov
mov
add
outsl
sub
std
cmp
data16
in
ja
les
sbb
inc
sub
or
xor
push
mov
dec
mov
jno
pop
movsb
adc
shll
es
loop,pt
add
fs
push
jp
data16
loopne
xchg
test
add
inc
and
add
inc
adc
xor
push
adc
xor
push
fdivl
and
jo
insl
xchg
pop
test
adc
mov
sbb
push
inc
out
adc
push
cmpsb
push
cmp
jne
add
js
dec
jl
and
jg
pop
out
orb
int3
xchg
lret
mov
add
xchg
popa
sub
xchg
lret
out
add
jmp
std
enter
stos
int
add
inc
add
cld
adc
add
daa
movsb
sub
mov
std
mov
sahf
cmp
add
test
fldt
or
push
pop
daa
loopne
ljmp
jbe
push
pusha
inc
push
testb
adc
sbb
xor
loopne
stos
shrb
inc
roll
addl
inc
or
pop
add
mov
pop
mov
jp
mov
orb
jmp
cmp
test
mov
mov
xorb
rcll
inc
lds
push
ja
push
xor
push
add
pop
sti
sbb
xchg
adc
xchg
fbld
fwait
inc
sbb
and
sbb
sbbl
lea
hlt
dec
stos
lret
dec
loop
insb
call
mov
rcll
repnz
inc
sub
mov
and
ljmp
pushf
and
addl
testb
add
add
sbb
imul
pop
push
jbe
int
cs
jl
outsl
sub
fidivrl
movsl
adc
stos
mov
jmp
xor
jp
mov
or
push
in
and
addb
sub
inc
popa
sbb
or
lcall
adc
inc
cmp
and
adc
jg
jmp
or
rcrb
push
cmp
pop
add
push
push
jg
std
sub
pusha
and
add
ja
jno
xor
add
inc
addb
jg
or
rolb
dec
sahf
xor
mov
rcr
in
jg
xacquire
dec
clc
shlb
add
std
lock
inc
dec
or
or
pop
mov
pop
mov
or
dec
std
into
mov
xchg
mov
cmpsl
cwtl
call
mov
push
cmpsb
add
jle,pt
repz
inc
push
cmpsb
notl
or
fstl
pop
push
dec
outsl
sbb
add
mov
lods
sub
pusha
mov
ja
pushl
fcom
ja
xchg
mov
into
jne
or
adc
and
add
aaa
icebp
sbb
adc
das
jb
outsl
mov
add
or
mov
and
jbe
iret
push
inc
sti
bound
add
push
sbb
ds
outsl
cli
ljmp
mov
mov
inc
xor
add
es
outsb
or
popa
push
xchg
aam
dec
pushf
outsb
push
xor
and
add
cmpsb
and
push
add
outsb
leave
inc
les
inc
incl
mov
dec
sti
movl
enter
insl
sti
push
push
or
loope
addr16
aad
lcall
push
push
jb
adc
scas
add
sub
bound
dec
and
imul
cld
insb
cwtl
test
adc
mov
mov
es
lock
pop
mov
jo
sub
cmp
dec
pop
pop
mov
imul
add
inc
movsb
jno
xchg
out
js
loopne
adc
add
xor
pop
adc
or
push
or
sar
mov
ja
pop
andb
lret
jo
dec
jg
dec
mov
jl
dec
cld
lds
rclb
addl
mov
dec
sub
adc
f2xm1
inc
xchg
rcr
push
scas
and
or
loope
mov
or
out
pop
and
mov
push
test
jno
sbb
mov
shr
push
rclb
or
mov
scas
clc
sarb
pushl
test
mov
subb
pop
xor
in
sbb
adc
rorb
add
ret
xchg
add
jb
inc
adc
subb
gs
test
xchg
xorb
movsb
or
in
scas
ret
fdivrs
push
mov
shlb
sbb
mov
mov
dec
adc
inc
push
inc
and
sub
mov
pop
sahf
jne
ds
sub
xchg
std
add
loop
xor
mov
pushf
adc
outsb
hlt
push
push
jle
mov
mov
push
mov
sbb
mov
rolb
add
cld
lcall
mov
jo
and
jo
jns
mov
pop
subb
fisubl
ss
xchg
test
mov
test
fcom
pop
or
push
test
inc
test
data16
mov
les
in
fidivl
xor
pop
shrb
stos
sub
pop
bound
bound
push
dec
sbb
notb
and
push
jp
add
add
and
aad
imul
dec
loop
dec
jg
jb
dec
outsl
adc
jle
dec
add
pop
and
popf
sarb
aam
mov
add
jo
cmp
mov
sbb
cld
adc
and
cmp
inc
inc
xor
cmp
js
push
imul
xor
lahf
add
jae
inc
stos
jo
dec
js
repz
sbb
mov
popf
les
shlb
repz
mov
add
inc
sar
fildll
jo
mov
adc
adc
jb
sub
shll
int
mov
lcall
decl
and
popa
push
add
jg
adc
loope
xor
scas
adcl
xchg
repz
adc
and
sbb
mov
mov
aas
jp
cmpsl
popf
and
add
cld
negb
shrb
mov
hlt
cmp
or
cli
inc
add
je
das
xor
in
push
push
add
mov
mov
mov
push
mov
add
adc
mov
adc
fidivs
jb
outsl
clc
pop
inc
or
push
jo
js
jb
dec
mov
xor
pop
rorb
mov
sub
xor
lock
xor
inc
push
mov
adc
stos
sub
jp
fwait
push
rol
jb
fcmovne
rolb
sub
or
pop
icebp
mov
idiv
pushf
pop
add
or
dec
jb
inc
daa
rorl
mov
stos
add
or
dec
cld
cmpsl
mov
ljmp
notb
mov
mov
or
outsb
int3
inc
je
jl
lret
mov
add
mov
je
incb
sub
and
sub
inc
xor
bound
xor
sub
adc
pop
sbb
in
call
aad
mov
xchg
mov
shll
sahf
dec
mov
mov
orb
xchg
cmpb
pop
cmp
xchg
movsb
std
add
jp
xor
dec
jle
mov
mov
adc
or
es
and
push
fdivrp
scas
js
push
mov
movsb
lods
add
dec
add
dec
and
cmp
add
xor
je
aaa
mov
aaa
mov
and
insb
jbe
pop
test
out
pop
xchg
lock
outsb
jo
add
subb
loop
enter
mov
data16
add
jge
add
pop
mov
dec
popf
xchg
loop
std
mov
cmp
sub
adc
decb
nop
push
jnp
add
jb
sahf
jecxz
add
xor
add
enter
and
loopne
sub
inc
sbb
adc
sar
das
mov
xchg
sub
push
xor
dec
std
pusha
xchg
jne
push
inc
or
ja
mov
mov
fs
sub
jne
popf
test
ss
xchg
shlb
dec
pop
lods
lcall
shlb
daa
adc
mov
inc
add
add
mov
mov
jo
pop
lock
iret
shrl
xor
bound
shrb
mov
mov
add
aam
xchg
adc
fs
pop
test
adc
push
pop
scas
jecxz
push
xor
data16
mov
add
adc
cmp
mov
cmp
dec
mov
push
rorl
mov
pop
fs
mov
mov
out
orb
mov
adc
ss
mov
andb
or
and
add
mov
sub
pusha
ds
add
jb
sub
test
cmp
movsb
push
fsubrs
fidivs
xchg
push
pop
fisubrs
outsl
inc
xchg
push
add
mov
push
pop
insb
fdivs
sti
adc
adc
pusha
and
jnp
push
add
jg
lods
push
add
cmp
add
xor
incl
lret
test
test
or
pop
fldt
mov
aam
cmp
mov
add
jo
sub
mov
fildl
out
xchg
je
or
dec
std
push
dec
sar
mov
add
ret
subl
cmc
dec
out
pop
push
adcl
sahf
scas
mov
sub
sub
sub
aaa
jl
test
sahf
clc
sbbb
sahf
subl
lret
dec
sti
and
and
loop
add
jecxz
mov
xchg
data16
mov
or
pop
and
sub
inc
addr16
or
add
jb
ss
das
lock
push
sti
add
jo
and
data16
sub
jne
aaa
popf
cltd
and
test
adc
cmc
lcall
out
cld
mov
les
jle
and
push
and
sub
js
mov
adc
cmp
loope
jg
and
sbb
mov
ret
push
sbbb
push
and
repnz
add
push
adcl
or
pop
push
add
ds
enter
sub
insl
dec
insb
mov
icebp
sbb
add
ret
add
jg
rolb
lret
notb
lea
inc
incl
sti
inc
setle
ja
dec
cld
mov
add
daa
add
gs
mov
push
cmp
ja
xchg
push
and
insl
mov
mov
mov
cmc
xchg
jo
adc
xchg
sbb
xchg
xor
hlt
add
sti
int3
daa
pop
push
sbbl
sbb
outsb
adc
mov
data16
add
sbb
inc
inc
or
mov
push
js
pop
ss
dec
and
mov
ret
popa
js
jb
jbe
sarb
rolb
dec
xor
jb
pusha
orb
push
jp
js
incb
or
outsl
mov
xchg
mov
nop
es
sbb
fs
outsl
and
std
js
call
orb
in
test
jbe
jle
adc
sub
pusha
add
movb
push
add
add
add
loopne
jecxz
adc
inc
mov
sub
push
dec
add
inc
fbld
mov
or
add
daa
mov
decl
test
or
add
aaa
and
andb
xor
insb
mov
loope
out
push
push
sub
jb
jns
rolb
lea
cmp
mov
insb
aad
mov
add
jl
xor
decb
and
sti
lret
add
mov
mov
or
mov
shlb
dec
loope
mov
jmp
or
and
notb
mov
stos
inc
mov
add
call
adc
testl
sub
sbb
data16
xor
and
into
sar
cli
scas
pop
xor
adc
push
inc
add
pusha
sbb
add
adc
sbb
jns
xor
pop
push
inc
xor
jns
popa
flds
adc
lods
inc
cmpsb
pop
xor
adc
je
mov
pop
add
pusha
xchg
call
ja
fidivs
sub
je
push
sbb
cwtl
mov
mov
shlb
mov
imul
fadds
bound
shlb
mov
inc
cld
add
andl
xchg
les
mov
das
shlb
iret
mov
pop
xor
rolb
clc
mov
in
loopne
and
incb
mov
or
mov
sahf
add
mov
mov
popa
ja
xchg
jb
sahf
mov
or
jg
mull
adcb
and
in
jg
stos
add
mov
pusha
add
add
add
incb
push
mov
mov
sahf
clc
fildl
es
jno
mov
int
and
scas
add
cmpsb
add
jg
add
mov
add
decl
loopne
scas
sub
inc
mov
adc
jno
sub
mov
and
mov
loope
sub
sub
shlb
leave
mov
inc
lods
bound
or
leave
sub
addl
push
or
jae
mov
imul
add
fildl
push
dec
cmp
and
cmp
fimuls
add
jns
nop
mov
cmpsb
add
ror
lret
cmp
pop
sub
mov
mov
inc
and
pusha
lods
scas
into
dec
mov
sub
ja
cltd
sarb
pop
push
sti
repnz
sub
and
lock
or
pusha
or
xchg
loope
sub
imul
sar
sahf
mov
and
ret
addl
imul
cmp
popf
jl
add
jo
mov
movsb
or
and
std
hlt
and
subb
lcall
push
mov
sub
mov
testl
and
mov
push
es
ret
or
sbb
adc
adc
in
add
inc
add
and
cmp
adc
mov
add
mov
data16
cmp
or
mov
mov
mov
repz
rcrb
in
ficompl
xchg
adc
pop
nop
jecxz
lea
jo
push
lock
add
add
jg
data16
jbe
rolb
or
inc
mov
xchg
and
pusha
jle
xchg
popf
insl
mov
movsl
sbb
int3
mov
push
add
add
in
push
adc
xorb
add
push
xor
popa
fisubrl
inc
pop
and
add
test
pop
push
push
add
mov
jg
cs
push
cli
push
push
mov
xchg
or
bound
mov
sub
push
mov
sbb
jns
sub
jo
sbbb
loope
movb
cs
inc
sub
jp
and
fwait
test
inc
sub
pusha
xchg
push
sub
jmp
mov
loopne
dec
push
loope
rep
dec
add
inc
incl
iret
mov
adc
adc
sub
movsl
add
sub
mov
sbb
xor
lcall
jb
sbb
xchg
mov
movsb
dec
data16
out
xchg
mov
pop
inc
or
and
aaa
or
and
jmp
sub
sbb
das
dec
cmc
mov
pop
fsubrl
fmuls
popf
fdivl
inc
test
in
adc
bound
sahf
adc
in
cmp
mov
push
jecxz
jmp
cmp
inc
cmp
inc
cs
lods
call
mov
shlb
and
and
test
ret
cmp
sti
inc
pop
mov
or
cmc
dec
sahf
adc
lock
dec
mov
jg
push
or
and
push
std
subb
push
jle
ljmp
inc
nop
test
icebp
add
ret
clc
popf
rclb
xor
xorb
int3
inc
jp
pusha
popf
lock
sahf
int
adc
shlb
out
or
data16
out
js
nop
nop
xchg
js
mov
inc
jp
sub
ja
push
xor
rclb
inc
sbb
test
push
xor
push
pop
sarb
pop
dec
sbb
and
inc
pop
cmp
mov
sub
addr16
push
rcrb
lock
scas
or
dec
sahf
cmp
push
xchg
jl
xor
daa
fidivs
aam
test
and
popa
mov
dec
inc
sahf
xor
xchg
sbb
sbbl
push
add
push
or
jg
sahf
push
movsl
push
and
bound
jge
ret
mov
bound
mov
xchg
inc
push
mov
jo
and
mov
mov
sub
jne
add
adcb
testl
mov
testb
or
xchg
jge
sarb
adc
mov
jno
daa
and
pop
bound
subb
daa
mov
test
add
dec
ss
lcall
push
adc
nop
adc
daa
dec
add
add
or
lea
sti
xor
push
add
jle
adc
adc
fdivl
jge
bound
lret
xchg
sub
out
xor
std
jle
hlt
incl
add
std
jb,pt
xchg
inc
push
push
inc
sbb
decl
jle
add
ss
nop
xor
daa
std
or
jp
imul
ja
and
sahf
in
shlb
icebp
cmpsl
inc
xorb
jb
mov
mov
jb
xchg
bound
decl
or
sahf
in
jo
inc
push
mov
jbe
decl
add
mov
push
add
jno
inc
mov
mov
pop
add
sub
loopne
jae
pop
pushl
icebp
mov
jg
xor
adc
lcall
dec
std
data16
shlb
mov
or
sahf
or
add
int
xchg
leave
loope
into
out
adc
aad
sub
dec
jp
inc
in
push
filds
jl
push
mov
xor
push
pop
nop
mov
adc
ljmp
push
mov
dec
loope
addl
cld
es
xchg
sahf
jmp
popf
outsb
rorb
divb
mov
jae
lock
decl
and
cli
sahf
out
push
and
test
fwait
xchg
clc
stos
ret
sub
sub
testb
mov
orl
sub
push
and
push
xor
add
add
shlb
sbb
xchg
sti
mov
lock
xor
shlb
sbbl
inc
inc
jg
pop
add
sub
adc
fbld
mov
aam
push
pop
aad
xchg
xchg
in
mov
cld
cmp
add
inc
addr16
push
icebp
pop
rclb
scas
push
lods
lock
bound
cwtl
dec
cltd
add
loop
pusha
sbb
cmpsb
adc
test
int3
and
outsb
data16
push
mov
fdivp
sbb
xor
pusha
add
mov
std
aaa
cld
mov
repz
lret
cmpb
xchg
flds
dec
mov
addr16
das
clc
mov
add
add
js
insb
add
jg
pop
popf
add
sub
push
jmp
add
adc
inc
add
add
pop
rcrb
fsubrl
jle
testl
xchg
leave
gs
rorb
cmc
push
outsb
je
std
es
lods
jne
adc
inc
daa
add
outsl
add
push
sahf
inc
sbb
in
jg
mov
xor
mov
pusha
jne
and
push
add
sub
sub
lock
cmc
xchg
mov
and
xor
or
mov
push
add
lahf
pushl
mov
js
inc
sub
incb
push
mov
das
orb
pop
mov
ret
outsb
aam
push
cmp
aam
push
dec
jp
mov
inc
jb
jecxz
fbld
lcall
xor
xchg
mov
lahf
lret
mov
push
add
fstpl
jae
sbb
cmpsl
inc
xor
std
test
push
outsb
std
gs
dec
out
js
push
jae
call
mov
add
cmp
dec
xchg
inc
adcb
sahf
cmp
xor
in
cld
xorl
add
add
mov
sbb
arpl
addr16
lahf
insl
aad
pusha
xchg
adc
add
mov
cmp
add
nop
fs
stos
out
or
sbb
pmaddwd
jle
push
fildll
inc
or
inc
mov
scas
insl
ja
test
xor
mov
jge
xchg
add
xchg
ss
inc
pushf
into
dec
pop
es
mov
pusha
js
lret
nop
js
mov
pop
sub
filds
jp
mov
and
inc
hlt
inc
fmull
mov
add
push
mov
add
and
ficoms
and
orb
add
or
adc
lcall
hlt
pop
rcrb
add
sbbb
pop
rorb
ds
sub
mov
push
ret
and
mov
mov
xchg
pop
lret
js
sub
mov
mov
pusha
and
jg
adc
mov
adcb
andl
xchg
or
add
inc
daa
fs
jo
jno
addl
adcb
add
lock
sub
adc
adc
incl
enter
icebp
add
add
rol
out
test
bound
jb
mov
xor
mov
inc
je
stos
adcb
aas
cld
cmpl
adc
ja
rolb
jbe
cmp
outsb
push
or
or
stos
add
les
addl
xor
pop
pop
data16
and
les
adc
push
jp
dec
insb
pop
ljmp
shrb
push
subb
addb
cs
dec
popf
shll
adc
mov
jge
push
cmp
push
mov
dec
jge
jno
subl
ret
add
hlt
insb
and
inc
push
sub
test
insb
add
pop
cwtl
mov
lret
xor
stos
les
cmp
cmp
inc
xchg
pop
pop
cld
insl
cmc
mov
jnp
insl
inc
lods
jge
ret
lea
mov
mov
outsl
loop
test
dec
negl
or
dec
jne
mov
fimuls
hlt
nop
jecxz
dec
xorb
push
sti
sti
mov
es
mov
jb
inc
sub
add
aaa
daa
icebp
filds
add
add
aam
push
test
xchg
dec
shrb
into
push
add
dec
jno
ljmp
cmp
fdivrs
std
or
pushl
test
inc
adc
leave
roll
jbe
adc
test
sarl
inc
sti
and
lock
fisubs
mov
jne
mov
jl
bound
jle
and
or
mov
adc
sbb
push
xchg
aaa
add
add
push
pop
inc
adc
inc
loopne
push
loope
mov
inc
loopne
faddl
pop
gs
mov
sub
jno
lret
cli
dec
mov
sub
imulb
std
adcb
pushf
mov
push
add
inc
jmp
pusha
add
call
lods
loop
sbb
movsb
and
inc
sahf
mov
cmpsb
adc
mov
outsb
sti
sub
addb
add
icebp
dec
stos
sbb
jns
orb
xor
sub
imul
addl
xor
orb
or
adc
dec
mov
pop
add
pusha
xor
outsl
les
cld
and
inc
bound
dec
mov
into
je
xor
out
push
pop
xchg
push
and
out
inc
push
sub
sbb
shlb
and
dec
loope
scas
mov
cmpsb
fmuls
mov
inc
ds
pop
arpl
scas
loopne
pusha
cmp
aad
inc
loopnew
push
pop
jbe
and
popf
inc
pop
outsb
pop
sbbb
int
mov
test
out
sbb
lds
add
lods
inc
mov
insl
add
sbb
add
and
sbb
dec
dec
fs
or
jb
ja
idivb
push
jl
stos
shlb
add
fsubrp
push
jo
ljmp
pop
insb
push
call
sbb
ja
rolb
outsb
push
and
mov
cli
test
inc
sbb
or
mov
pusha
lahf
jecxz
shlb
adc
pop
call
push
cmpsb
or
fiadds
mov
addb
std
jbe
out
sahf
fs
fnstsw
and
push
pusha
push
sbb
mov
out
inc
call
mov
push
mov
or
sub
mov
add
dec
cli
pusha
mov
or
add
aas
lret
and
jle
mov
lcall
rcl
push
dec
xchg
es
mov
mov
adc
add
adcb
pop
cli
popa
das
rol
mov
xor
scas
cmp
xchg
pop
enter
mov
js
adc
pusha
or
in
sarb
movsb
jne
jl
rorw
push
xchg
rorb
sbb
adc
subb
pusha
or
or
add
sub
es
sar
jecxz
add
test
jo
sbb
je
or
jb
sub
adc
adc
rolb
into
pop
pop
je
shlb
inc
and
lahf
push
push
mov
es
cmpsb
inc
lcall
pop
mov
loopne
push
pop
addb
xor
stos
pop
ret
stc
scas
and
add
push
rolb
and
sar
mov
mov
xchg
inc
xchg
subb
cmp
xorb
xchg
xor
addr16
pop
icebp
mov
sbb
scas
mov
add
jb
add
mov
fisttps
out
cmc
xchg
bound
mov
adc
std
push
enter
and
das
pop
pop
test
sbb
pop
arpl
cltd
sbb
xchg
lock
cli
ljmp
inc
dec
fadd
adc
aaa
shl
xchg
aaa
outsb
adc
inc
add
popa
mov
xor
push
xor
stos
ret
inc
sbb
push
adc
adc
repnz
call
decl
loopne
insb
add
and
push
data16
mov
add
lods
cld
mov
push
mov
scas
mov
outsb
xor
add
dec
mov
adc
loop
popf
or
mov
call
nop
xor
cwtl
adc
adc
icebp
dec
sahf
dec
adc
or
loope
xchg
mov
inc
add
adcb
push
add
ret
imul
inc
cmp
fadds
jo
push
lahf
add
mov
repnz
fs
das
negl
inc
cld
inc
mov
enter
aas
add
scas
sbb
xor
xchg
pop
fs
pusha
lea
mov
sbb
or
ja
push
xor
notb
dec
sub
jnp
and
jle
or
sub
nop
add
lcall
xor
sbb
test
adc
dec
test
jne
rclb
add
mov
insl
mov
lahf
loop
sub
and
icebp
sub
cld
jl
mov
jns
sbb
pop
dec
or
fisubs
sbb
sarb
xor
add
loop
mov
pop
push
sbbb
movsb
sub
fs
mov
rep
push
mov
das
movsb
lock
pop
or
dec
lock
jne
aaa
cmpsl
mov
dec
popf
sbb
icebp
mov
sbb
rolb
xor
sbb
clc
popf
outsb
cld
xor
ja
icebp
aas
jne
inc
cmpl
jae
push
dec
push
jb
test
add
jl
sbb
mov
movl
aas
push
and
mov
data16
and
or
xchg
inc
add
ja
out
xor
insb
push
bound
mov
push
add
js
dec
cmpsb
add
inc
add
mov
jo
push
mov
sbb
push
dec
cwtl
test
pop
and
inc
push
incl
jmp
lods
notb
cmp
cli
loopne
jno
arpl
mov
aam
loop
add
jo
pop
mov
std
or
pop
and
rorb
pop
call
xchg
nop
ja
lcall
cmp
cmpl
idivb
or
add
fimull
mov
insl
ds
mov
decl
sahf
popf
push
cmc
insb
js
xor
xchg
insl
int3
cmp
repz
xor
adc
push
adc
cmpsb
lcall
les
bound
arpl
adc
add
sbb
sub
push
push
cld
jmp
add
loopne
add
orb
push
add
pusha
pop
add
subb
push
jp
ljmp
dec
jo
std
js
xchg
add
jno
rolb
dec
xor
and
loope
adc
subb
pop
xlat
lock
stos
add
rcrl
scas
xchg
pop
mov
add
pop
sub
push
add
and
and
cmpsl
test
jg
pop
subl
push
outsl
scas
inc
test
addl
or
mov
jno
aad
lds
icebp
out
es
push
mov
dec
lock
and
ds
clc
and
int3
add
dec
add
jg
adc
rolb
sahf
lock
pop
repnz
fwait
xchg
mov
fidivl
pop
or
push
imul
das
clc
add
push
popf
dec
inc
add
cmpsl
mov
add
mov
pop
push
inc
mov
xchg
ja
or
add
add
inc
jno
or
aam
xor
add
and
shlb
rorb
add
push
nop
xor
dec
icebp
je
lahf
adcl
ds
and
test
call
push
rclb
nop
cmp
mov
leave
dec
xor
push
jb
jns
incl
add
mov
shrl
cmpsb
dec
push
add
cwtl
andb
incl
nop
and
data16
push
xchg
dec
xor
aaa
add
xchg
shlb
lock
mov
dec
and
adc
xchg
lahf
inc
int3
dec
pop
push
sub
or
fwait
lcall
pusha
push
push
adc
add
lock
add
cmpb
jae
and
fbld
loope
cmp
xor
sbb
adc
add
stos
incl
inc
dec
jno
add
and
add
sarl
adc
mov
push
sbb
inc
sbb
subb
mov
inc
das
lock
pushl
std
dec
cs
loopne
push
and
add
jg
add
cmp
cld
pop
hlt
call
add
or
sbb
popf
cwtl
mov
ds
xchg
push
xchg
dec
push
push
or
add
incb
jbe
orb
aas
push
jo
fistl
jo
mov
notl
or
sbb
add
mov
mov
sbb
inc
sbb
or
dec
add
add
mov
push
jg
pushw
std
cld
dec
jns
add
shlb
les
adc
loope
cli
arpl
repz
bound
xchg
clc
xchg
adc
and
adc
iret
add
pop
dec
mov
xor
inc
fs
lock
xor
out
movsb
push
adc
ja
dec
jae
push
add
add
scas
push
jle
bound
xor
jg
dec
adc
cltd
sbb
loopne
addb
push
push
sub
sub
xchg
mov
cmp
inc
pop
adc
add
inc
add
add
adc
addr16
sub
mov
cmc
adc
pusha
add
jmp
mov
xchg
or
imul
negb
inc
je
push
out
sub
and
pop
cmp
pop
mov
mov
xchg
mov
add
data16
test
cmp
data16
repnz
sub
stos
insb
fadds
jb
add
and
fcmovne
pop
mov
add
cmp
add
fs
pop
pushf
or
cmc
js
mov
adc
xor
push
or
movb
mov
andb
push
add
outsb
jge
das
sahf
andl
repnz
test
add
int3
test
pop
xchg
repnz
push
iret
or
shl
mov
cmpsl
dec
cmpsl
fnstenv
testb
mulb
fiadds
sbbb
imul
mov
push
int3
dec
and
shrb
adc
mov
test
stos
adc
incb
mov
dec
and
sub
fsubs
push
aam
cli
jecxz
push
js
test
test
mov
adc
jnp
and
lcall
cmp
adc
and
add
adcb
out
test
ret
orb
jbe
outsb
pusha
shll
cmp
loopne
test
adcb
popl
push
mov
or
jp
lret
add
jno
adc
ljmp
js
dec
and
xlat
subb
ja
lret
popf
add
scas
mov
imul
je
out
inc
adcl
cmpl
lea
clc
lcall
jno
or
roll
mov
decl
orl
sti
fbstp
lret
or
or
xor
sub
or
push
int3
andb
mov
mov
or
adc
clc
push
jl
or
add
mov
push
loop
push
stos
hlt
or
scas
rclb
insb
mov
std
jnp
jmp
shl
xchg
or
incl
xchg
jmp
pusha
mov
mov
inc
jno
or
mov
inc
or
movsb
xor
ja
jb
rorb
or
and
adcl
inc
mov
and
mov
pop
sahf
in
and
push
xor
push
xlat
and
sbb
insb
or
les
incl
mov
es
inc
rcr
xor
data16
testl
and
push
enter
or
mov
cmp
xorb
lock
arpl
lods
dec
mov
sub
popf
mov
xor
ljmp
jmp
inc
rolb
or
pop
fwait
add
enter
rolb
test
sbb
xor
ss
movsb
arpl
mov
mov
mov
xor
or
movl
cs
push
mov
mov
inc
or
aam
adc
mov
mov
fadd
pusha
adc
or
dec
add
pop
pop
mov
sahf
jge
push
sub
cmpl
xchg
movsb
and
xor
pop
and
mov
fbld
clc
popf
xchg
loopne
out
pusha
or
cwtl
ljmp
fbld
add
in
out
inc
push
jp
and
xor
or
add
pop
add
adc
pop
jp
mov
mov
sbb
cmp
add
add
or
push
push
dec
add
loopne
repz
xchg
bound
sbb
es
cmp
mov
sbb
hlt
daa
sahf
or
pop
mov
lahf
or
lock
mov
push
stos
mov
cmp
ss
or
push
imul
setno
jp
jbe
ss
rcl
push
jbe
popf
push
push
dec
xorb
jo
bound
lock
xchg
lret
sub
mov
ss
inc
imulb
push
mov
dec
mov
insb
popf
inc
je
das
clc
push
pop
inc
pop
mov
js
push
mov
jo
pusha
movsb
add
push
loopne
jp
cmpsb
popf
inc
lea
add
stos
stos
movsb
popf
push
rclb
mov
jo
mov
or
push
cwtl
mov
add
inc
mov
cmpsb
imul
mov
addl
insb
fidivs
push
jp
stos
popa
cmp
cli
adc
sbb
loopne
add
and
add
pusha
andb
jbe
add
leave
ret
push
and
sbb
scas
xchg
and
push
daa
and
inc
lods
call
xor
cmp
add
add
outsb
call
mov
bound
pusha
mov
add
sub
pop
or
pop
mov
pusha
mov
jnp
hlt
dec
push
jp
pop
rorb
mov
jno
jle
repz
mov
add
lds
lret
add
inc
inc
pop
sarb
jb
xchg
fdivr
andb
outsb
loopne
daa
dec
inc
push
dec
in
and
jge
push
loopne
inc
jnp
dec
push
or
aad
push
sahf
popf
sub
add
xchg
sbb
out
mov
adc
inc
jg
int
adc
mov
mov
or
push
mov
sbb
loopne
inc
and
push
xchg
dec
add
inc
pop
lock
and
adc
and
inc
sar
sahf
stos
loopne
pop
loopne
or
jne
push
shll
add
sahf
mov
mov
xchg
icebp
incl
or
and
add
mov
cmpsb
jb
and
nop
lock
sub
jg
jle
sub
pop
mov
add
add
push
inc
adc
inc
pop
add
mov
dec
repz
cli
mov
shrb
stos
dec
cmp
add
mov
mov
ret
adc
jb
xchg
add
mov
or
xor
adc
mov
ffreep
add
test
sbb
hlt
cmp
jo
fcomip
mov
inc
xor
testb
jbe
inc
inc
add
mov
push
popf
imul
jne
lcall
inc
loopne
mov
adc
xor
add
dec
mull
sbb
pop
add
add
cmp
or
or
push
sahf
fwait
inc
jo
je
clc
into
mov
rorb
inc
ret
mov
jmp
add
mov
xor
and
dec
repz
mov
shrb
push
xchg
add
je
sub
add
pop
rolb
push
pop
movsb
out
adc
and
sub
cli
testb
add
scas
rcrb
cmp
loope
jle
adc
sti
lret
sub
add
jmp
mov
scas
push
addl
ror
and
outsb
or
or
sahf
xchg
mov
es
xchg
sub
or
sub
jp
add
dec
gs
popa
mov
xchg
rorb
in
aam
push
mov
inc
ret
adc
int3
shrb
scas
into
jle
pop
cmc
jl
mov
add
cmp
testb
jl
adc
pop
popf
jne
imul
jo
pushl
mov
xchg
outsl
ss
dec
mov
fisttpl
inc
push
jp
popf
inc
add
mov
or
push
test
xor
adc
jo
aaa
push
bound
popf
mov
jl
cmp
pop
add
and
mov
bound
lds
pop
adc
push
inc
popf
sub
or
pop
cld
fstpt
stos
pop
int3
add
add
enter
hlt
add
dec
shlb
push
incl
sbb
mov
or
js
insl
jg
call
rclb
loop
mov
rcrl
push
notl
sub
push
inc
es
and
hlt
dec
jge
mov
nop
sub
jno
lahf
inc
sbb
jg
stos
and
sub
cmp
call
arpl
jb
or
faddl
xchg
lock
ljmp
or
and
inc
lds
mov
cmp
insw
xorl
xor
adc
cmp
dec
lods
stc
mov
nop
cmp
push
jo
outsb
outsb
and
xlat
filds
insb
push
push
sub
or
std
jbe
inc
pop
ljmp
cmpsb
test
call
mov
or
mov
les
shlb
incl
jnp
std
jnp
rorb
dec
inc
mov
push
aaa
test
addb
cmc
mov
dec
and
stos
push
data16
adc
or
mov
call
inc
xchg
add
mov
mov
jge
cmpsb
sbb
mov
pop
aaa
adc
mov
sahf
push
or
aas
xchg
clc
sub
push
mov
jae
rclb
rolb
add
fwait
cmp
add
inc
cmp
add
popa
out
sub
mov
adc
cmp
sahf
inc
or
jo
jp
add
sahf
sub
fidivrl
jle
adc
and
js
stos
mov
and
jb
je
pop
shlb
cld
loopne
jbe
inc
sahf
mov
and
bound
push
sahf
jp
mov
inc
or
paddw
addr16
stos
cmc
add
dec
cmp
jl
js
or
insb
enter
inc
dec
rorl
mov
xchg
or
or
jo
dec
push
cmp
imul
sahf
subb
xchg
adc
jmp
mov
sbb
mov
jns
repz
and
jmp
push
dec
sti
cmpsb
pop
out
jbe
adcl
dec
imul
call
add
inc
enter
and
movsb
clc
testb
adcb
and
mov
daa
mov
adc
ficoms
aas
sbb
scas
dec
fdivl
push
adc
aad
popf
cmp
jbe
es
ret
jg
sti
or
lret
incb
dec
loopne
fbld
ret
movsb
add
xor
push
fdivr
pop
add
mov
push
mov
nop
jbe
sar
add
sub
add
loopne
mov
adc
lret
out
and
js
pop
jo
or
pop
mov
xor
add
insl
sar
mov
jecxz
les
pop
and
mov
jo
or
lock
xor
stos
outsb
add
or
and
mov
pop
popa
inc
inc
or
mov
pop
add
sub
xor
cld
loop
sbb
and
cs
clc
pop
and
mov
and
and
flds
adc
fildl
mov
stos
add
loop
add
mov
arpl
push
or
out
adc
xor
ljmp
cs
or
adc
inc
loop
rclb
leave
xor
sbb
fs
add
arpl
add
mulps
or
pop
or
mov
imul
push
fdivr
push
hlt
inc
dec
xchg
daa
mov
ss
jb
popa
xorl
or
cwtl
addb
loopne
or
and
arpl
sub
sub
and
adc
pushw
cmp
add
lock
ljmp
cmp
push
jo
repz
dec
sub
or
lds
out
or
or
je
pop
push
push
xorl
std
lret
adc
push
mov
inc
mov
inc
rcrl
adc
inc
adc
je
push
mov
adc
xor
dec
scas
and
sahf
push
icebp
add
icebp
pop
sbb
sbb
add
sub
xchg
jl
add
adc
xchg
in
cmp
test
in
push
cmpsb
add
or
add
adc
bound
insl
inc
dec
cmpsb
add
mov
or
sub
lock
loope
aad
add
fiadds
or
adc
out
movsb
mov
testb
or
add
or
sbbb
aad
in
sub
add
and
int3
pop
add
pop
adc
dec
mov
fimuls
sahf
dec
push
sbbl
cli
jle
iret
cmpb
adc
outsb
pushf
sahf
dec
repnz
add
out
push
sahf
mov
clc
add
ja
push
jge
stos
or
jo
push
insl
rcrl
sahf
sbb
mov
imulb
xchg
test
cmp
es
out
dec
push
add
xor
mov
adc
inc
or
int
xor
inc
inc
sub
inc
mov
pop
data16
xchg
pop
push
pop
cli
push
gs
add
in
mov
ljmp
ja
pop
mov
jl
icebp
xchg
and
fs
or
inc
mov
je
jo
mov
jns
mov
dec
and
dec
pop
adc
rorb
rolb
add
ljmp
mov
inc
push
movb
sbb
mov
pop
es
rcrl
das
mov
fistps
and
into
into
inc
or
inc
les
sub
int
rorl
dec
test
sti
xor
sahf
pop
pop
inc
adc
popa
loopne
xor
call
js
es
pop
jle
or
enter
std
cli
sbb
mov
fcmovu
jp
fs
stos
testb
mov
enter
and
testb
pop
add
cmpb
daa
mov
jg
sahf
or
test
inc
or
inc
cmpsb
rcrb
or
sbb
pusha
add
andb
xor
or
mov
int
dec
es
mov
ret
divb
dec
test
mov
scas
rolb
or
add
add
adc
popf
cmovno
push
jne
xor
rorl
mov
add
mov
jbe
pop
and
cmpsb
mov
adc
xor
push
sub
add
subb
and
xchg
lcall
jae
sahf
add
ret
sahf
inc
cmp
jo
sahf
sub
loopne
int3
lahf
fnstsw
shl
mov
jo
js
and
pop
and
ljmp
or
sti
and
add
shl
ljmp
and
add
lock
js
dec
dec
dec
and
adc
xor
push
clc
inc
push
pushf
pusha
push
popf
cmpsb
inc
sbb
cltd
adc
and
arpl
ss
daa
sti
jp
push
dec
mov
pop
popl
and
jne
sub
push
push
jne
xor
xchg
shlb
mov
les
sub
rolb
dec
nop
pop
shlb
mov
das
cld
lcall
andb
daa
daa
add
add
lods
pushl
inc
and
adcb
mov
jp
mov
mov
and
int
test
into
repz
or
ret
jle
xor
inc
push
push
and
dec
jbe
cs
ljmp
or
mov
pop
rolb
push
ja
push
cmp
mov
mov
je
inc
testb
jno
push
ljmp
inc
adc
lcall
push
jle
or
adc
js
push
add
inc
push
push
or
mov
mov
add
je
stos
xchg
mov
jg
jmp
loopne
sahf
int3
mov
push
pusha
loop
jb
lods
sbbb
inc
sbb
push
jb
mov
xchg
and
loop
rorb
jecxz
or
mov
jle
ja
mov
scas
cs
ret
loopne
cmp
inc
or
ret
roll
pusha
add
dec
and
in
scas
push
push
add
add
ja
xor
ja
fidivs
jae
mov
xor
or
sbb
dec
push
subb
popa
mov
add
xor
lock
std
ja
test
and
mov
add
push
daa
jg
icebp
sub
add
dec
jo
rorl
pop
lahf
or
in
pop
inc
add
test
add
mov
daa
xorb
lcall
add
jle
push
cmp
push
popa
mov
addb
cmp
repnz
push
out
movb
into
shlb
cmp
xor
std
sarb
dec
outsl
sbb
inc
arpl
push
es
addb
add
jb
sub
xchg
aam
das
lret
inc
and
dec
mov
ret
push
sub
adc
jle
into
pusha
test
pop
divb
popf
add
cmp
mov
sub
ss
add
stos
add
jge
shlb
push
add
add
dec
test
and
sbb
dec
add
mov
inc
mov
sahf
dec
pop
sub
jmp
sub
jne
in
inc
push
adc
rcl
bound
adc
lahf
imul
mov
mov
ds
mov
incl
jp
int3
mov
add
sbb
shr
jl
sub
std
add
orl
pusha
add
pusha
push
mov
or
pusha
sbb
or
xor
dec
dec
jle
mov
jo
push
lods
jg
aam
rorb
and
jno
mov
push
je
mov
add
add
add
jb
ljmp
adc
shlb
and
test
dec
repz
mov
icebp
add
out
push
into
test
inc
shlb
add
sub
addl
add
push
cmp
mov
repnz
incb
shrb
ja
jbe
mov
data16
dec
adc
int
roll
xchg
mov
mov
sbb
add
xor
inc
add
sub
fbld
cs
lock
test
mov
nop
or
andb
shl
clc
and
xor
sbb
dec
ret
cmc
nop
repnz
or
mov
clc
fbld
sub
xchg
mov
add
cmp
push
add
roll
test
add
or
xor
rclb
movsb
mov
push
mov
outsb
sti
loope
adc
jb
lea
adc
xchg
adc
cmpsb
cmp
push
sub
dec
or
cmc
xchg
fdivrl
add
or
aad
xor
loope
add
test
xlat
add
mov
jp
push
cmp
rolb
mov
or
or
add
adc
ss
or
aaa
push
data16
fwait
sub
sub
or
add
mov
loop
and
rolb
inc
jb
pop
inc
push
sbbb
orl
pop
and
or
inc
xor
stos
pop
je
fldt
enter
dec
mov
jne
dec
sub
das
popa
add
es
sub
jno
mov
adc
mov
sbb
sbb
icebp
jmp
mov
popf
pop
xor
pop
push
sahf
push
mov
inc
fisttpll
mov
jo
sub
mov
add
adc
das
or
cmp
or
subb
jecxz
sbb
add
data16
cmp
incl
pusha
xchg
jb
invd
ds
rol
fdiv
mov
xor
and
mov
or
bound
push
in
dec
out
outsb
sub
jge
pop
bound
repnz
lret
aaa
mov
xor
or
xor
mov
es
add
jmp
pushf
push
inc
pop
push
add
push
pop
fildll
test
mov
cmp
daa
xor
push
push
inc
outsl
adc
ds
add
lret
shl
sahf
lret
sbb
into
and
in
scas
movsb
sub
mov
dec
sbb
push
out
incl
push
or
in
cmp
movsb
incl
insl
sub
sub
xor
shll
lret
icebp
mov
jbe
cmc
pusha
xor
push
ljmp
or
xor
nop
xor
sbb
add
jg
xor
or
popa
sub
xchg
mov
sub
sahf
xchg
jo
shlb
adc
xor
pop
pusha
mov
sti
outsl
rolb
pusha
and
or
mov
xor
push
stos
adc
and
sbb
adcb
cmpsb
push
sarb
and
push
aad
adc
and
pop
cmp
nop
popa
popf
sar
test
mov
pusha
loop
sbb
mov
inc
xchg
add
ja
cmp
and
cs
orb
mov
add
push
push
sbb
push
shrl
loopne
xchg
add
inc
add
jg
xor
add
or
adc
mov
push
xchg
adc
adc
jb
fisttpl
mov
inc
push
sbb
mov
sahf
cli
pop
cmpsb
aaa
negb
inc
divb
es
mov
repnz
xor
jp
or
adc
data16
cltd
push
popf
loope
push
lock
cmp
or
add
std
pop
add
into
push
loop
xor
add
cmp
leave
add
push
dec
andl
inc
push
add
mov
jge
pusha
pop
add
popa
loop
addl
es
cltd
push
andb
adc
jo
jle
push
data16
sbbl
bound
andb
add
inc
icebp
push
std
add
loop
jne
pop
mov
mov
pop
fcoml
or
inc
sbb
pop
add
push
sahf
je
movsb
bound
arpl
data16
xorl
popf
dec
add
dec
mov
cmpsb
ds
and
push
inc
inc
dec
xor
mov
jmp
or
ja
push
mov
call
mov
and
add
adc
lahf
mov
out
adc
pop
push
movsb
pop
push
or
lahf
push
xor
bound
pop
jo
jg
lcall
pusha
or
pusha
xor
or
fwait
or
xor
std
mov
mov
add
pop
std
daa
jle
cli
adc
jg
ja
xchg
add
sbb
jae
lods
mov
mov
int3
shrb
lock
bnd
lock
xchg
sbb
add
jmp
adc
cmp
and
pop
lcall
jge
rol
jo
lcall
sbb
sahf
ffree
push
add
jg
jge
testb
push
and
add
dec
sub
add
aam
add
add
xchg
fs
xchg
or
pushf
inc
mov
add
dec
je
stos
sbbb
and
mov
lock
shlb
sbb
jns
rcl
lret
cld
out
test
repnz
or
or
data16
cld
stos
or
mov
add
sub
add
jae
shrb
push
insb
jne
mov
push
dec
hlt
push
push
mov
mov
add
mov
inc
mov
out
mov
push
and
or
dec
callw
jo
push
or
mov
popf
dec
cs
add
and
add
add
push
cmpb
push
add
call
es
push
mov
js
jns
inc
and
sbb
lcall
push
push
sub
sub
jg
call
jmp
pop
adc
addb
push
or
add
sub
sub
mov
sbb
sbb
test
frstor
aam
sub
addb
xor
repz
mov
fwait
fwait
mov
adc
data16
push
cmpsb
push
sub
push
rcll
shlb
jo
pop
jbe
or
sub
orb
jnp
int3
mov
sub
rcrl
sub
adc
dec
adcw
rcl
xor
push
call
sbb
add
rclb
and
add
into
dec
inc
loopne,pn
cltd
add
xor
mov
sarb
rorb
stos
into
xchg
inc
sbb
test
mov
inc
into
insb
mov
repnz
or
pop
mov
test
or
xchg
mov
mov
mov
inc
add
jp
add
jle
adcl
push
adc
xor
push
arpl
and
movsl
inc
aas
dec
jp
add
ljmp
jp
jo
aaa
rorl
inc
mov
stos
xchg
rol
lcall
mov
dec
sub
std
dec
mov
adc
cmp
sub
inc
shll
icebp
push
jg
and
hlt
mov
jl
rolb
psubw
aaa
mov
adc
jo
shr
jns
cmp
mov
dec
iret
jmp
jns
jg
loopne
fldenv
cmpsb
ds
repnz
and
add
dec
repnz
lock
mov
shl
inc
std
stos
sub
add
xchg
push
loop
das
add
mov
sti
mov
xchg
roll
push
mov
and
mov
ret
or
push
fprem
rorb
pusha
repz
shll
and
jg
mov
rorb
sbb
lock
mov
mov
add
jae
mov
scas
xchg
push
and
dec
push
adc
add
shlb
fistps
mov
xchg
jb
or
lcall
mov
pop
std
sub
cld
lcall
js
sbb
or
pop
aas
clc
pop
cld
in
out
add
das
std
xor
cmp
jns
lods
mov
jns
inc
jp
repnz
rorb
sbb
cltd
lock
mov
fadd
xor
mov
push
rcrb
inc
shrb
sbbb
or
add
adc
push
cmpsb
jp
sbb
loopne
std
sub
cmpsb
jns
test
sub
loopne
xor
movsb
add
rolb
jno
dec
sbb
or
rorb
sahf
and
sbb
jg
sub
repnz
xchg
fidivrs
xor
out
add
or
xchg
lret
or
pop
cld
lcall
mov
aam
hlt
insb
or
jns
sbb
mov
mov
sbb
loop
jecxz
icebp
pushl
and
jle
loope
cwtl
clc
imul
add
add
sbb
mov
push
outsl
pusha
add
jg
test
loopne
sbb
popa
adc
cmc
dec
dec
pop
jo
jge
pusha
xor
je
push
cld
pusha
or
rolb
push
loopne
mulb
jge
loope
xchg
xor
and
and
push
cs
out
popa
cmp
push
xchg
pop
push
jns
movsb
cld
mov
and
cwtl
adc
out
bound
out
inc
sbb
mov
jns
js
push
inc
and
cmp
push
mov
xchg
mov
out
pusha
xor
push
pusha
call
mov
cmpsb
outsb
jecxz
out
xor
xor
inc
loopne
popa
jecxz
incl
mov
das
fsubs
test
mov
data16
test
pop
and
adc
pop
add
push
mov
loop
adc
repz
rorb
adc
jo
out
xor
repz
mov
clc
or
mov
jnp
mov
add
loope,pn
push
mov
ljmp
loopne
scas
push
mov
mov
filds
insb
inc
fwait
adc
cmpsl
or
add
inc
insl
mov
jo
pop
and
sbb
push
add
jo
inc
jne
scas
mov
mov
mov
or
inc
mov
push
stos
add
subb
jl
jae
jo
mov
sarl
mov
jg
cli
mov
jo
ja
jno
scas
or
mov
add
in
movsb
insl
lds
shlb
mul
adc
std
repz
adc
and
repz
loopne
cmp
add
call
xchg
add
in
mov
shlb
jnp
clc
dec
inc
adc
loopne
pusha
or
or
inc
rcrl
push
pop
in
push
shl
jno,pt
jecxz
data16
popa
inc
dec
sbb
jmp
jg
pop
out
data16
cmp
pusha
add
bound
outsb
cmp
dec
or
repz
pop
loopne
mul
gs
cli
or
jne
repnz
icebp
push
incl
movl
popa
pop
jg
mov
jmp
mov
loopne
and
push
pusha
bound
popa
or
mov
jno
cs
adc
out
xor
loope
out
mov
add
cmpsb
xor
std
incl
push
cwtl
and
inc
add
push
movzwl
sti
lds
mov
lock
cwtl
enter
push
lock
and
sub
sbb
or
loope
mov
popa
ret
fstpt
add
and
icebp
xor
stos
idivb
jns
sarb
push
scas
xlat
clc
lcall
add
pop
cmp
add
pop
xlat
loop
mov
jg
test
mov
repz
fildll
push
loopne
sub
cmp
fs
cld
pushl
sbb
and
outsb
dec
dec
pusha
pop
push
mov
adc
sbb
loopnew
push
out
scas
bound
pusha
push
and
xor
scas
mov
stos
xor
pusha
lds
sti
xor
mov
cmpb
ret
xor
mov
add
xchg
test
push
add
xor
jmp
or
add
pusha
jo
pop
mov
inc
das
loop
add
enter
and
ja
lcall
je
push
add
jae
mov
add
jb
mov
or
shll
cmp
sahf
adc
cmc
call
xor
jne
xor
add
sahf
add
in
idivb
xchg
jae
xorb
add
jl
and
sahf
lret
ljmp
in
add
fidivs
les
xor
sarb
mov
leave
clc
push
or
xor
xorl
or
lock
sbbl
std
xchg
mov
pop
lock
into
xchg
sbb
sub
es
jp
add
lock
sti
rclb
inc
daa
mov
jge
mov
push
add
or
ljmp
inc
int3
mov
jno
sub
aas
shlb
add
sbb
aaa
or
push
cmp
sti
cli
cmp
daa
inc
jo
add
jecxz
mov
jbe
cmp
add
orb
out
insl
sbb
orb
sub
jle
sti
inc
sarb
xor
or
add
lret
mov
push
xorb
jge
pushf
mov
inc
xor
test
push
add
mov
aam
xchg
jns
into
mov
add
popa
inc
test
orb
repz
cmp
or
push
add
mov
call
add
ret
loopne
jo
and
adc
sub
mov
cmp
sub
mov
xor
jo
adc
popl
push
loop
sahf
icebp
shl
pushl
push
repz
bound
add
adc
pop
addb
push
inc
mov
inc
and
sbb
je
loope
arpl
mov
hlt
mov
mov
add
or
shrb
add
jno
push
jno
ja
ljmp
cmpsl
sbb
ja
inc
add
pop
xor
push
xchg
lcall
pushl
pop
cld
adc
subb
or
sub
sub
pushf
mov
loop
push
pop
mov
inc
rorb
aam
inc
push
filds
mov
xchg
mov
sbb
sahf
sti
addl
cmc
push
and
cwtl
add
stos
push
inc
add
lret
inc
jmp
ror
shrb
das
aam
push
cmp
adc
addl
mov
imulb
xchg
add
test
clc
sti
push
stos
dec
cli
sbb
rorb
fildl
and
or
into
adc
xor
les
xor
xchg
add
add
sar
decl
leave
add
add
push
mov
adc
xchg
scas
bound
stos
sahf
popf
hlt
or
jno
adc
push
nop
sub
sub
insb
jbe
daa
daa
cmc
jg
shrl
jle
cmp
and
add
movsl
and
add
mov
je
push
add
nop
push
and
scas
mov
loope
fs
mov
mov
mov
ja
mov
mov
xor
lods
add
adc
std
sarl
jge
bound
bound
orb
jno
mov
and
xchg
sub
push
ret
sbb
push
or
sub
frstor
or
jo
jne
ret
inc
push
ss
ljmp
xchg
into
movsb
pusha
cs
inc
xchg
pop
add
pop
and
aam
stos
ss
ficoml
cmp
mov
lods
xchg
ret
ret
cli
sub
loop
jp
popa
jle
enter
xor
mov
add
adc
nop
insb
into
adc
mov
and
arpl
mov
add
mov
mov
add
add
inc
dec
std
dec
adc
sbb
add
lods
divl
cs
or
inc
repnz
add
sub
inc
jnp
cmpsb
dec
outsb
stos
sarb
xchg
addb
sub
shl
mov
sub
shlb
jo
mov
dec
cmpsb
jbe
sahf
adc
jg
mov
add
inc
ret
push
jg
mov
dec
or
adc
or
mov
jno
loopne
cmp
in
adcb
mov
sub
mov
cmp
mov
push
push
lock
pushl
mov
lret
mov
loopne
mov
mov
push
mov
xchg
mov
pop
mov
nop
rcrb
jae
inc
lods
push
sbb
adc
xchg
add
icebp
sub
mov
xchg
daa
add
icebp
pop
loopne
pop
jbe
add
jo
xchg
sbb
mov
clc
fists
clc
mov
rolb
jp
sbb
add
ret
cmp
lea
push
push
push
incb
xlat
mov
outsl
and
or
mov
or
add
pusha
mov
lds
mov
xor
shlb
jg
jne
or
mov
inc
and
out
mov
jge
pop
mov
sahf
push
push
aaa
mov
jb
in
pop
mov
adc
loop
xchg
mov
icebp
mov
push
or
pusha
popf
es
imul
stos
and
push
push
push
insb
sbb
into
jns
add
pop
add
mov
push
sarl
and
push
loopne
mov
shll
jb
sti
and
lcall
inc
push
rdtsc
hlt
repnz
add
les
ret
test
mov
sub
sahf
add
je
fisttpll
sti
add
daa
jp
rolb
push
add
add
lea
ret
std
arpl
addl
add
sbb
mov
push
mov
sahf
or
cmp
push
sub
inc
mov
dec
stos
test
ss
mov
mov
and
inc
test
gs
sbb
add
adc
jo
data16
ds
xor
jbe
pop
add
add
adc
add
or
and
add
mov
repnz
out
rcrb
push
adc
pop
sub
add
mov
dec
nop
add
dec
add
pop
inc
outsb
add
lds
mov
jmp
hlt
add
push
mov
lods
nop
add
out
adc
add
sahf
cmp
add
sub
mov
mov
cmp
sbbb
das
xor
push
lahf
or
cmp
sub
add
sub
xchg
jbe
mov
fldcw
testl
lods
std
xchg
cld
or
lea
push
in
dec
lret
push
push
js
sarl
cmp
mov
movb
jp
repz
sub
pop
leave
pop
mov
shlb
adc
mov
sub
dec
mov
adcb
sub
mov
iret
jns
insb
jo
add
and
or
inc
int3
sbb
xchg
sbb
sbb
mov
pop
xor
ja
icebp
add
mov
scas
add
inc
push
mov
push
mov
mov
mov
push
cmc
inc
jnp
retw
add
data16
push
add
sbb
ret
mov
fidivs
push
lcall
fistl
sbb
xlat
adcl
cmpsl
sahf
cwtl
es
and
inc
out
dec
add
js
fiadds
jge
loope
inc
pop
jo
gs
push
jmp
std
hlt
sti
xor
adc
js
es
lods
arpl
sub
cmpsl
xchg
fildl
sub
mov
sub
mov
jns
ljmp
into
cmpsl
xor
arpl
and
jnp
popa
push
inc
cmp
adc
sbb
mov
push
inc
add
leave
daa
rcrl
je
nop
das
das
bound
movl
push
mov
or
cmpsl
pop
js
sub
add
lea
lods
push
popl
push
jb
and
push
push
sti
sti
cmp
push
fnsetpm(287
sub
rorb
adc
add
pop
fcmove
insl
cwtl
out
push
fiaddl
mov
mov
aaa
push
mov
rorl
inc
das
jp
mov
sbb
das
lahf
mov
inc
push
es
sbb
sti
sub
std
adc
addb
sbb
xchg
sub
outsb
push
sbb
mov
xchg
test
nop
scas
inc
outsb
push
mov
cwtl
dec
test
cli
push
or
mov
ds
lahf
lds
dec
js
jne
mov
shlb
dec
shlb
subb
push
add
bound
pcmpeqb
pop
add
add
add
shl
mov
mov
mov
dec
insl
mov
inc
pusha
sbb
aaa
xor
sarb
call
aas
and
add
movsb
push
and
fiaddl
add
cmp
adc
jg
add
es
xor
sub
or
std
mov
add
sbb
sahf
add
jnp
adc
mov
lcall
mov
je,pt
aam
mov
pop
insb
ss
jle
imul
jle
mov
addb
and
into
mov
pop
add
and
xorb
les
add
adc
inc
mov
out
inc
mov
mov
ret
negl
push
fadd
inc
sahf
daa
push
mov
orb
mov
andl
jo
sub
in
test
pop
or
lret
gs
dec
loopne
inc
lcall
adc
push
addl
in
push
xchg
dec
call
out
adc
mov
mov
ret
loope
mov
push
aam
sahf
pop
stc
roll
sub
cli
pop
mov
add
mov
or
adc
and
push
pusha
lods
mov
push
or
and
lcall
int
cmc
mov
scas
popf
imul
bound
xor
pop
xchg
push
mov
ja
jo
pop
add
and
lea
add
or
cltd
sub
pop
data16
nop
out
and
outsl
bound
dec
and
dec
inc
pop
mov
ret
cmp
and
xor
and
cmp
cmp
mov
loope,pn
je
out
aad
mov
add
jmp
shrb
nop
jo
lahf
inc
and
push
mov
lahf
scas
punpcklwd
aaa
fcoml
dec
std
test
inc
clc
inc
xchg
mov
dec
test
test
pop
and
add
mov
es
bswap
sahf
and
in
sahf
jns
push
outsb
pop
rolb
je
adc
xorl
popf
jnp
mov
rolb
frstor
dec
or
dec
repnz
mov
sahf
push
popa
leave
outsl
pop
fildll
and
push
es
test
dec
out
inc
add
lcall
std
lret
adc
sbb
mov
add
pusha
dec
adc
inc
mov
les
faddl
pushl
hlt
cmp
xor
sub
aaa
addl
sahf
inc
and
mov
add
roll
cmpsl
and
xor
jg
pushaw
loopne
shrb
adc
data16
lds
push
outsb
push
mov
testb
mov
xor
out
sahf
and
ficoml
aaa
xor
test
enter
ss
movsl
or
aaa
popf
xchg
mov
scas
xor
das
addl
or
xchg
add
das
add
add
pushaw
aaa
and
enter
rolb
bound
pop
mov
pop
xor
add
test
inc
mov
xchg
icebp
aad
adc
mov
pusha
in
decl
insb
add
push
fsubrs
sub
fadds
add
jl
and
hlt
scas
adc
ss
inc
jecxz
fwait
push
imul
mov
sbb
aad
add
cmp
fildl
test
mov
bound
pop
data16
xor
dec
push
add
filds
push
xchg
or
cmp
mov
outsb
jne
in
pop
sub
hlt
out
jno
fs
add
or
or
xor
shlb
dec
push
cs
cmpl
out
adc
push
or
sub
std
rclb
icebp
das
nop
push
and
loopne
vpshuflw
add
sti
aas
inc
pop
cmp
pop
jno
pop
adc
andl
adc
loopne
test
ret
incl
loop
pusha
add
out
jo
loope
pop
push
fimull
bound
ret
lcall
test
inc
add
fcom
or
incl
jl
add
notb
mov
incl
or
pop
bound
or
or
sahf
arpl
jnp
push
sub
or
loopne
fisubrs
loop
pop
scas
loopne
or
test
daa
dec
incl
mov
sbb
pop
push
push
dec
dec
cld
gs
xor
movsb
faddl
lock
and
lret
jg
icebp
push
mov
and
push
jne
rolb
or
pop
je
lcall
ja
sub
or
xchg
push
jmp
popa
add
inc
pop
shrl
sbb
pop
lcall
add
inc
test
push
dec
in
fwait
pusha
mov
adc
in
pop
sahf
sbb
mov
push
xor
mov
dec
stos
add
add
sbb
sbb
add
inc
mov
test
sub
or
add
call
xor
sbb
mov
or
push
add
jl
cmc
pop
cld
add
push
cs
adc
sub
pop
add
push
mov
adc
jbe
popf
lcall
or
rclb
xor
or
or
call
jno
mov
cld
sub
movd
jo
add
add
cwtl
call
push
shrl
adcl
rorb
mov
sbb
jg
call
ja
lods
shlb
sbb
inc
subl
sub
cmpsb
jno
push
test
dec
or
cld
inc
lock
mov
mov
es
jne
pop
sbbl
mov
dec
dec
inc
add
sti
ss
sbb
outsb
xchg
jno
enter
sub
inc
pusha
ja
mov
lods
fs
mov
fs
xor
pushl
mov
pop
rorb
nop
cmp
inc
or
sub
adc
incl
xchg
cmp
dec
and
shrl
imul
xchg
cmp
popa
mov
pop
jo
mov
movsb
mov
xor
push
sti
or
cmp
xor
cwtl
lret
or
adc
push
loop
insb
out
dec
xor
jb
rorl
scas
loopne
push
mov
fs
fildll
hlt
inc
and
push
lock
call
les
outsb
pop
jo
inc
jecxz
sbb
jnp
mov
pop
push
popf
js
and
sbb
js
nop
or
lock
or
mov
and
add
mov
adc
push
jo
push
adc
shlb
push
push
xlat
or
scas
inc
adc
mov
enter
std
add
outsl
push
push
shll
and
and
xchg
stc
and
sbb
sahf
in
sbb
ja
nop
push
push
in
dec
lock
mov
and
push
xchg
jo
pop
inc
loopne
xor
add
int3
sti
lock
xchg
roll
inc
pusha
and
jb
aam
sub
cmp
pusha
and
test
incl
xchg
clc
mov
mov
pop
andl
add
adc
cmp
sarb
push
adc
sub
pop
es
add
cmp
sbb
mov
sbb
and
push
leave
or
add
and
mov
xlat
dec
xchg
push
lea
jl
push
fisubs
fadds
inc
add
lret
roll
xchg
mov
dec
sarl
jmp
dec
xor
mov
and
cld
add
jb
jg
cmp
ret
data16
jg
pop
xor
jne
ud0
sbb
xor
sub
and
push
xor
add
or
outsb
add
sbb
insb
add
adc
and
xchg
xchg
pop
sbb
repnz
add
rorb
sbbb
push
mov
jbe
jp
fsubs
pop
jb
mov
sbb
push
lcall
mov
xor
loop
mov
cmc
add
dec
adc
ljmp
adc
adcl
adc
xchg
pop
sahf
pusha
adc
cmp
add
inc
jge
jb
and
jne
out
push
cwtl
inc
sub
adc
jmp
adc
loope
cs
test
xor
out
arpl
incl
or
orl
add
lcall
cmpsb
xor
mov
mov
pusha
ds
sbb
mov
inc
mov
mov
jb
insl
mov
xor
mov
jb
incb
xor
pop
xor
fstps
movsb
fdiv
and
pop
dec
or
decl
xor
aaa
mov
and
fsubp
js
sar
data16
jle
adc
or
pushf
ljmp
ss
mov
adc
push
push
fdivrl
incl
mov
sbb
andb
or
mov
clc
and
add
add
add
jg
lock
dec
sahf
shll
push
or
test
ds
cld
sahf
xor
mov
dec
add
push
push
shll
lret
bound
inc
mov
and
xchg
loopne
mov
dec
aad
inc
mov
addb
in
xchg
jo
mov
jo
cld
fidivl
test
add
add
fisubrs
and
cmp
cld
cmpsb
sub
dec
cld
sahf
orb
data16
push
add
fmull
das
push
repnz
xchg
testl
add
js
sub
cmpsb
mov
cs
mov
mov
add
mov
ja
jmp
test
mov
addb
sahf
ljmp
inc
andl
push
incb
adc
and
lods
add
or
dec
fdivs
push
push
add
push
sub
ret
sub
scas
add
sarb
lods
or
insl
sbb
sbb
mov
xchg
jge
push
push
add
fldl
pop
push
dec
in
adc
or
jno
shlb
mov
cmp
add
test
xchg
sbbl
add
out
pusha
mov
and
cmp
cmpsb
add
or
or
push
aaa
into
jge
loopne
decl
cmc
push
xor
cmp
daa
sahf
pop
andb
scas
pushf
pop
mov
or
add
aaa
inc
xor
insl
js
test
push
sti
sub
or
cmp
jno
add
inc
movl
sti
add
daa
insb
and
filds
or
andb
and
mov
fs
aas
mulb
sbbl
insb
mov
or
stc
xor
cmc
sbb
add
lods
fiadds
add
test
push
fdivrl
orb
cmp
mov
aas
shlb
add
sahf
hlt
cmp
fiaddl
std
scas
incl
movsb
ss
inc
push
and
or
jo
outsb
and
loope
movsb
inc
sub
icebp
push
sub
sbbb
pop
inc
sub
push
mov
addl
xlat
in
imul
cmp
shlb
jp
das
inc
inc
popa
push
dec
inc
xchg
sahf
fnstenv
or
or
popa
adcb
mov
push
jno
mulb
xor
stos
hlt
roll
shlb
push
jo
ja
subb
ljmp
ret
add
inc
mov
roll
sub
mov
or
jns
and
repz
jb
and
sbb
push
stos
outsl
jl
inc
cmp
fildll
into
xor
sub
and
outsl
orl
or
or
jg
or
das
push
sbb
int3
ret
ljmp
pop
sbb
and
sub
aam
mov
add
sub
add
insl
sti
add
data16
adc
mov
inc
add
lock
add
inc
pop
push
lods
cmpsl
std
add
jne
xchg
xor
inc
jl
aam
add
rorb
jo
or
add
mov
or
add
add
and
pusha
add
dec
js
cmp
jne
mov
mov
cs
scas
loop
inc
fwait
in
stos
into
fcoms
test
mov
inc
out
andb
stos
js
pop
sahf
cmc
inc
sbb
inc
fcoml
xor
rclb
in
movsl
mov
pop
inc
test
sub
std
mov
sbb
mov
xchg
inc
add
mov
lea
roll
sar
inc
je
xor
sbb
std
add
rcll
or
xchg
inc
data16
mov
nop
pushf
adc
bound
adc
and
cmc
mov
dec
ljmp
and
or
rolb
dec
mulb
pusha
mov
nop
push
loope
adc
and
sbbb
pushf
mov
adc
sbb
fisttps
jbe
divb
mov
or
shrb
lock
xor
cld
and
mov
pop
je
mov
add
sub
adc
clc
jne
sub
xor
push
lret
mov
js
or
mov
test
push
divb
cs
mov
add
inc
sub
jle
sub
and
adc
adc
cmpsb
fbld
xchg
repz
das
inc
addl
leave
mov
xor
clc
pusha
or
dec
and
aaa
pop
sub
daa
mov
decl
and
and
mov
inc
sub
or
call
andl
xor
adc
arpl
sbb
push
jg
inc
sti
loop
gs
push
out
push
or
inc
or
sub
jne
sub
or
mov
jecxz
push
sbb
jmp
mov
inc
rorb
dec
movsl
add
mov
mov
sbbb
sub
jl
dec
cmp
pusha
dec
popa
mov
subb
jp
sbb
mov
cli
popa
or
repz
add
add
incl
fists
stos
and
cs
and
dec
adc
adc
jge
scas
rorb
xor
add
push
test
inc
mov
sarb
and
or
or
add
jg
rolb
jl
sahf
pop
loopne
popf
lds
loopne
mov
mov
xor
add
leave
mov
sahf
jecxz
cmp
fmulp
push
push
mov
or
mov
loopne
adc
inc
mov
popa
add
sbb
inc
add
cmc
push
push
cmc
aas
dec
std
movsl
sahf
and
inc
imul
ret
and
cmpsb
push
bound
jb
or
mov
addb
shrb
push
mov
clc
in
sbb
push
popa
outsl
sub
mov
sarl
adc
jo
cmp
xor
mov
mov
add
scas
orb
and
dec
in
or
adc
and
add
push
mov
std
popa
xor
sbb
xchg
sar
jbe
std
mov
jno
jle
sbb
pop
test
dec
sub
push
bound
add
mov
mov
popf
aam
jecxz
outsb
sbb
sub
add
int3
and
or
decl
add
or
push
push
cmp
jae
adc
inc
dec
sahf
pushf
xlat
push
xor
mov
or
push
clc
call
jb
mov
je
xchg
xor
xchg
adc
sahf
push
add
rorb
add
dec
sarb
enter
and
xor
scas
and
sub
and
adc
stos
adc
sahf
pop
and
mov
scas
repnz
pop
xor
push
mov
pop
mov
pop
pushw
bound
cmp
xchg
cwtl
add
add
testl
bound
adc
data16
cld
scas
jle
or
ljmp
jb
add
xor
and
cmpsb
push
jb
testb
pop
add
push
add
fs
sbbb
insb
data16
or
push
mov
or
pop
add
adc
mov
sbb
fisubrl
test
sub
daa
dec
cld
pop
arpl
lock
shll
aaa
imul
inc
push
cld
rclb
cmpb
pop
and
xchg
rorb
mov
neg
into
icebp
adc
pusha
xchg
and
cld
das
push
mov
imul
push
push
xor
xchg
mov
push
sbb
aaa
add
jb
add
es
shl
mov
xchg
xchg
push
rolb
push
add
pop
stos
or
inc
loopne
insl
adc
mov
or
sahf
addb
xchg
jp
jno
add
or
add
pop
xor
xor
popf
inc
add
mov
lcall
mov
test
xor
sub
clc
mov
fs
pop
sti
or
add
sar
pop
push
sbb
sbb
mov
or
je
cmp
imul
das
xchg
loopne
jno
int3
test
add
lret
pop
jbe
nop
adc
lahf
adc
mov
cmpb
or
mov
out
nop
decl
mov
dec
sbb
mov
repz
mov
xor
adc
mov
loopne
jle
ljmp
push
ss
jo
sti
icebp
push
cmc
adcb
addl
sub
nop
adc
dec
rcrb
pop
add
out
sarb
adc
std
adc
pusha
pop
xor
lea
add
sbb
add
loope
cmp
lahf
pop
shlb
fbld
dec
jo
divl
out
and
fcomip
mov
xor
faddl
xor
cmc
push
push
push
std
clc
aaa
add
mov
pop
std
cmpsb
mov
and
pop
push
in
sahf
roll
in
rclb
pop
push
pop
and
call
xchg
and
xchg
sar
or
sbb
adcb
subb
xor
loope
push
mov
cmp
movsl
data16
xor
dec
data16
dec
jno
and
gs
cmp
cvtpi2ps
push
lock
dec
push
rcr
lods
sbb
adcl
dec
outsb
lds
cmp
inc
sbb
pusha
jp
loopne
adc
inc
rclb
mov
inc
popf
jp
lods
or
cmp
je
sub
pusha
aas
mov
mov
roll
push
xchg
push
aam
dec
sub
push
dec
clc
mov
inc
cli
push
or
repnz
clc
bound
and
xor
push
mov
add
scas
pusha
test
call
sarb
pop
inc
nop
lods
bound
mov
pushf
add
bound
add
rcr
outsb
add
rorb
bound
into
rcrb
push
clc
decl
sahf
adc
out
push
rclb
xchg
jo
mov
cmpb
andl
add
pop
icebp
pop
into
adc
inc
xor
test
jmp
cmc
mov
jg
mov
std
movsl
or
and
or
mov
mov
add
sub
jp
sbb
dec
nop
inc
sub
pusha
push
es
add
mov
loopne
adc
mov
add
movsl
xor
or
sbb
or
jecxz
push
inc
or
add
lock
clc
arpl
mov
push
xchg
adc
add
faddl
jo
xchg
and
idivb
push
push
dec
pop
cmpsb
inc
push
cmp
jg
lock
xchg
in
icebp
lock
lock
dec
outsl
push
mov
add
jmp
or
fcmovnbe
cmp
push
jne
lea
bound
mov
fistpll
and
cmp
sti
adc
call
adc
mov
mov
je
push
add
aad
mov
xor
testb
arpl
popf
jle
call
mov
inc
add
mov
push
and
in
jo
in
push
icebp
dec
sbb
xchg
jge
push
addb
call
int
add
inc
loopne
adc
dec
cs
inc
leave
add
repnz
or
repz
or
fwait
add
jo
or
enter
enter
aaa
xor
ljmp
and
and
rcrb
insl
sub
push
es
mov
add
lock
test
xor
shlb
nop
add
add
leave
in
lock
jg
push
and
loopne
mov
jne
push
int3
inc
pop
or
adc
clc
inc
add
cmp
lahf
sub
dec
gs
or
pop
mov
sub
sbb
scas
sahf
dec
or
or
test
fcomi
hlt
in
aam
vmread
sub
out
mov
or
add
and
and
cld
and
jb
push
imul
sahf
sub
xchg
addb
add
outsb
data16
add
sbb
jbe
aad
push
mov
ja
pop
mov
sbb
ja
jb
xor
jne
mov
pusha
pop
ret
add
call
int3
inc
sbb
dec
dec
inc
inc
insb
jge
inc
pop
add
inc
sbb
add
jg
mov
callw
dec
add
inc
mov
sub
cmp
push
out
mov
dec
je
call
mov
ss
xor
mov
call
orb
and
cmc
push
push
or
dec
insb
and
cmpsb
jno
mov
mov
add
pop
mov
mov
add
es
cmc
add
bound
cmc
pop
addl
cld
xchg
addb
test
push
xor
fldl
add
push
popf
jnp
dec
jl
add
xor
push
mov
add
mov
bound
popf
clc
fstl
pop
outsb
mov
add
mov
pusha
gs
hlt
das
sbbb
push
mov
mov
add
jno
jnp
andb
fisttpll
andb
sub
inc
sub
dec
jecxz
push
ljmp
orb
push
add
inc
add
add
loope
or
xor
pushl
mov
mov
aaa
sub
es
and
aaa
pop
cli
and
scas
rorl
jp
aad
subb
or
pop
testl
push
cmpsb
xorl
sti
push
out
addb
add
and
vcmpsd
mov
jb
adcb
aas
out
arpl
adc
outsb
and
push
sub
loop
adc
pop
pop
add
rorb
hlt
sub
push
popa
addl
pop
or
les
in
pop
movsb
push
stos
fstpt
sub
push
outsb
movb
sbb
jbe
mov
js
insb
inc
aaa
xchg
adcb
or
inc
je
ja
inc
call
inc
dec
jl
inc
xor
mov
test
mov
jg
cmpsl
ljmp
push
lret
es
insb
xor
in
xor
inc
mov
shlb
push
aaa
mov
or
push
lock
push
inc
push
jg
faddp
sahf
adc
add
bound
dec
loope
ds
and
dec
inc
daa
push
mov
inc
add
xor
or
ret
push
add
into
add
mov
cs
in
mov
fwait
shll
or
cmp
clc
orb
roll
adc
adc
les
mov
jbe
adc
adc
mov
data16
mov
lcall
mov
mov
lock
inc
jl
subl
movups
push
dec
inc
mov
sbb
hlt
jle
pop
sahf
fmuls
cmpsb
popf
inc
repnz
jl
fadds
xor
lcall
ret
stos
push
and
rorb
cli
lock
decb
add
jns
mov
mov
sbb
in
les
inc
cli
mov
sub
stc
loop
sub
push
lock
dec
and
sahf
dec
add
add
pop
mov
push
sub
outsl
add
sbb
or
pop
pusha
pop
ja
sbb
dec
mov
and
inc
nop
loopne
or
pusha
or
in
xor
incl
mov
mov
loop
pushf
inc
fisttps
cmpsb
or
sbb
mov
adc
adc
or
and
and
cmp
push
scas
add
pop
jae
pop
and
test
and
lock
cli
mov
mov
mov
mov
mov
mov
pusha
add
and
mov
and
xor
add
jecxz
add
mov
lea
and
and
add
inc
sub
adc
mov
and
loop
cwtl
sbb
ja
inc
and
shrl
push
mov
dec
sbb
outsl
pusha
ljmp
cs
sti
into
pop
mov
popf
gs
mov
adc
xchg
mov
mov
adcb
fimull
hlt
or
mov
add
cwtl
daa
sahf
cmp
les
fisttpll
loope
pop
in
dec
and
cld
out
shrb
sahf
fdivrl
ret
movsl
shlb
call
jae
pusha
and
adc
es
shl
data16
and
loope
jb
and
xlat
xchg
xor
inc
inc
das
fs
inc
add
fmull
lock
or
and
int3
out
add
cmpb
sbb
push
std
cmp
cmp
lea
inc
adc
pop
and
xor
sub
inc
or
loope
push
mov
cmpsl
and
andb
outsb
repz
cwtl
sub
ret
sahf
push
cmpsb
and
jg
push
xor
sti
icebp
add
andb
mov
jb
shl
add
loope
xorb
or
cwtl
out
add
jne
cmpsl
jb
decl
inc
and
mov
sti
push
mov
add
pop
mov
or
std
jb
enter
sbb
pop
and
mov
jmp
pop
ds
xlat
inc
fbld
mov
dec
mov
aas
mov
mov
mov
adc
pushf
cli
sbb
loope
mov
aam
mov
in
loope
sar
push
lock
inc
cs
lea
movsb
push
fwait
stos
and
test
and
xorb
testb
sbb
scas
bound
add
adcb
sub
mov
mov
mov
adc
idiv
outsl
jp
dec
scas
add
dec
cmp
jp
js
loopne
mov
call
movsb
jle
jp
add
mov
push
loopne
add
push
popf
inc
and
add
sub
adc
movsl
mov
addb
psllw
and
fstl
push
push
cmpsb
pop
pop
in
mov
add
add
vcvtps2pd
cmpsb
mov
lods
fildl
adc
sub
push
cli
add
out
cli
xchg
bound
inc
cmpsl
aaa
bound
je,pt
lahf
scas
ss
stos
mov
mov
add
add
mov
jns
mov
dec
dec
jns
inc
lea
push
mov
popa
adc
and
decl
loope
add
or
sub
addb
mov
std
jnp
call
mov
sub
fsubrl
std
push
std
dec
stos
rcrb
std
inc
dec
inc
roll
inc
xlat
stos
jle
fs
pop
jle
jle
cmp
jae
pop
mov
add
jne
popf
xchg
add
add
add
push
std
arpl
add
cmc
dec
sarb
mov
rorb
xor
mov
pop
ljmp
aaa
pop
mov
add
sub
pop
mov
mov
jne
or
out
movsb
hlt
jnp
push
push
inc
add
xlat
sub
push
aaa
call
cld
call
push
mov
cli
mov
dec
or
jg
lahf
popa
add
add
std
mov
insb
std
mov
nop
decl
xchg
cli
mov
daa
adc
dec
call
mov
inc
movsb
rcrb
add
mov
loop
in
or
sahf
ss
lock
jle
mov
aam
xchg
cmpb
ljmp
mov
lock
jo
add
ret
mov
call
mov
add
push
pusha
cltd
cmpb
add
dec
add
addl
or
shlb
fcmovnb
pop
adc
cmp
andb
stos
cs
mov
mov
push
jle
add
clc
aas
sahf
shlb
popf
cmp
adc
add
das
adc
add
ja
sub
addb
jne
add
test
dec
loop
dec
mov
arpl
mov
testb
outsb
stos
lock
jns
sar
add
add
jb
sbb
inc
cld
lcall
mov
leave
jno
push
ss
push
pop
or
lock
xchg
dec
gs
mov
cmpb
add
mov
and
lcall
add
xchg
scas
popa
pop
inc
divb
add
das
push
sbb
js
inc
cmp
pusha
add
cli
das
test
adc
in
mov
shrb
outsl
cmp
ja
push
push
add
mov
or
push
js
push
add
mov
sbb
sarb
adc
add
mov
rolb
pop
fsubs
test
pusha
push
jbe
mov
test
mov
or
inc
mov
add
adc
pop
dec
lret
test
inc
add
push
out
test
push
mov
jne
add
mov
jb
or
pop
sbb
mov
sub
pop
push
jae
add
bound
add
mov
push
push
repnz
xor
or
add
in
sub
hlt
call
dec
xchg
or
loope
xchg
or
cmp
sub
pop
cmc
sahf
push
xchg
add
cmp
mov
push
clc
scas
add
or
add
mov
dec
inc
mov
jg
roll
cmp
or
or
sub
xor
and
cmpb
rorb
inc
sub
jle
xchg
lods
pop
pop
dec
rcll
add
mov
lcall
fimuls
inc
mov
in
sbb
push
scas
fisubrl
xchg
rcl
aam
and
add
loop
mov
dec
outsb
stos
lret
icebp
and
or
add
or
lret
test
push
jl
dec
jmp
fiaddl
ficompl
mov
stos
inc
mov
jns
int3
and
inc
rorb
fbstp
roll
lods
push
push
pusha
jmp
or
add
loop
add
adc
std
pop
fmull
and
push
ret
add
dec
imul
out
stos
push
or
lcall
andb
adcb
sbb
mov
lea
arpl
mov
ljmp
ss
push
mov
mov
mov
sbb
outsl
sahf
addb
pop
test
out
xchg
or
pop
cmp
sub
or
mov
je
xor
and
roll
push
lock
xchg
mov
mov
jb
xchg
add
sbb
push
scas
adc
and
or
mov
mulb
popf
mov
call
push
add
sti
xor
test
js
arpl
jle
xor
jo
lret
mov
movsb
mov
fmulp
decl
add
gs
addb
add
xor
imul
push
shrb
std
icebp
pop
lea
inc
sbb
inc
sbb
cld
mov
jp
add
hlt
cmpsb
std
sbb
mov
std
mov
jns
mov
mov
hlt
jo
ss
push
ret
dec
adcb
imulb
push
fwait
or
pop
and
and
repnz
mov
andb
call
lcall
push
repz
and
ss
pop
mov
loopne
mov
add
ret
pop
add
inc
adc
adc
add
xor
sahf
jb
xor
push
in
dec
add
sahf
cmp
mov
lret
xor
insb
ret
addr16
inc
mov
decl
stos
call
dec
sahf
and
mov
adc
inc
ret
ret
mov
data16
or
inc
mov
add
adc
inc
jge
sub
ss
add
sbb
sbb
stos
sbb
imul
mov
cmp
pop
inc
aaa
mov
or
push
stos
rclb
les
shll
inc
or
and
mov
out
es
xchg
mov
scas
mov
jmp
add
add
inc
jp
xor
and
push
add
mov
mov
sbbl
mov
mov
jae
jb
and
adc
push
or
cmp
mov
jae
out
sub
add
data16
sub
ret
call
or
pop
adc
shlb
data16
notb
and
and
push
loop
mov
adc
addb
fwait
add
add
or
std
add
xchg
cmp
sbb
mov
jbe
stos
cmp
dec
push
jbe
add
orb
dec
adc
add
ss
inc
jno
push
push
lcall
push
test
mov
push
adc
mov
or
daa
and
jg
adc
or
dec
inc
cmp
lret
lcall
jecxz
adcb
rolb
lret
push
lea
cmp
pop
add
fwait
sbb
add
sahf
sub
cmp
sbb
sub
add
int
cmc
adc
mov
or
adcl
cs
hlt
dec
mov
xorb
xchg
pop
add
pop
push
int3
je,pn
mov
cmp
push
and
sub
jnp
inc
data16
dec
adcb
les
jo
adc
outsb
nop
outsb
leave
add
lahf
pop
inc
clc
fwait
pop
fs
or
imul
cli
dec
loopne
test
jbe
iret
in
cmp
cmp
sbb
js
push
jnp
std
inc
pop
mov
mov
add
ds
and
add
mov
or
sub
sahf
lea
rorb
pop
rorl
sahf
dec
add
outsb
jnp
add
pop
shll
mov
push
lock
jo
orb
add
inc
sub
or
sub
mov
sbb
mov
push
loopne
dec
dec
aam
push
xchg
loopne
push
inc
mov
adc
add
sahf
rol
mov
or
inc
jne
sarb
add
dec
and
adc
xor
xchg
mov
je
and
add
dec
ja
push
add
insb
roll
sbb
dec
mov
out
dec
add
add
add
jl
mov
or
add
push
cmpb
push
jle
inc
push
sarb
push
jmp
add
dec
into
mov
adc
sub
push
pop
insb
push
push
xlat
xchg
sub
insb
add
inc
or
xchg
ljmp
and
int3
inc
mov
push
sar
cmpsb
add
pushf
push
js
add
mov
data16
sbb
mov
call
xchg
cli
mov
pop
add
add
jle
insl
add
mov
or
in
xor
andl
cmp
inc
add
cmpsb
mov
jns
xor
mov
mov
inc
xchg
loop
or
orb
push
jnp
or
mov
lret
sub
daa
dec
pusha
inc
jle
ds
clc
xchg
cmp
add
push
xor
adc
addb
sbb
adc
xchg
mov
sub
pusha
push
ds
test
sbb
stos
cmp
jno
lahf
push
pmulhw
enter
fiaddl
jl
jnp
or
loope
mov
dec
and
push
add
xchg
nop
pusha
jb
bound
add
flds
ja
inc
inc
outsb
jl
and
adc
popf
call
mov
dec
jle
jae
or
or
mov
mov
inc
insl
push
inc
call
pushl
add
push
pusha
xchg
add
or
jle
dec
rclb
xchg
loopne
inc
nop
pop
in
fwait
addb
les
inc
sbb
popa
push
mov
mov
les
adc
add
jnp
pusha
pop
popl
sub
sub
dec
push
add
dec
ss
pop
dec
js
jl
lods
lods
hlt
je
cmp
or
cmc
es
xchg
add
xchg
pop
add
and
shlb
mov
dec
data16
dec
mov
cs
es
cmp
mov
shlb
cmp
mov
mov
lea
jl
xor
ja
pop
dec
std
das
push
add
into
fchs
or
test
push
or
sub
loopne
jmp
fistpl
test
orb
xor
xchg
popa
jae
fists
movsl
in
cmp
nop
push
loop
mov
outsb
popa
push
enter
in
add
rclb
and
iret
mov
sahf
fiadds
mov
pop
and
mov
movsl
lcall
mov
test
push
loopne
add
rclb
rcll
mov
xor
mov
cmpsb
loope
insl
cmpsl
sahf
add
gs
or
pop
popaw
push
push
inc
push
push
inc
decb
outsb
cld
fsubrs
out
push
jp
enter
ss
movsl
cmp
pushf
add
clc
vmovaps
cmp
sbb
mov
out
cld
andb
push
mov
pop
and
cld
mov
mov
pop
loope
and
push
out
insb
cmp
sub
jbe
sbb
add
pusha
dec
shlb
mov
lds
or
sub
mov
pusha
test
mov
and
pusha
out
pop
and
inc
cmp
addr16
lock
fstpt
ljmp
add
pusha
cli
or
and
jp
lahf
push
sahf
shl
cs
mov
sub
add
sub
ret
push
cmp
sub
and
sub
movl
push
mov
sarl
outsl
and
push
and
cli
push
push
xchg
mov
push
addl
ljmp
add
adc
aam
cli
add
adc
fsubl
jp
mov
or
and
dec
cld
cmp
mov
add
push
inc
loopne
mov
xchg
ss
push
lods
popa
xor
jle
pop
shlb
movsb
scas
pushf
mov
push
xor
stos
inc
call
bound
stos
inc
pop
inc
daa
data16
push
or
test
xchg
jo
cmp
notb
mov
xor
dec
mov
rorb
repnz
push
je
adc
in
sbb
mov
sbb
sti
xor
xor
sub
outsl
and
loop
jne
aas
jle
mov
mov
ss
cs
mov
rolb
xor
pop
or
jno
push
mov
loop
jno
stos
and
pop
inc
inc
jbe
fucomip
mov
sub
sti
add
jge
jo
inc
ljmp
dec
dec
add
dec
test
mov
add
or
test
pop
outsb
pop
mov
push
mov
or
rolb
or
mov
jo
ret
rolb
std
imul
aas
ss
fiadds
cmc
adc
inc
adc
mov
test
scas
subb
add
pusha
inc
and
inc
xchg
xchg
bound
mov
inc
dec
add
cmp
xor
dec
clc
add
jle
negb
or
inc
add
addl
sbb
stos
mov
inc
or
mov
outsb
jne
cmp
dec
mulb
jmp
orb
sti
dec
inc
sahf
jp
nop
xchg
ret
lds
add
xchg
mov
and
loopne
shl
out
xor
xor
add
call
push
cld
mov
into
dec
add
pop
adc
sarb
cmp
icebp
dec
mov
sahf
and
movsl
push
mov
sarb
jne
adc
add
dec
mov
lcall
push
mov
inc
jmp
jb
icebp
lock
clc
rcll
lods
repz
lock
push
testb
sub
inc
loopne
lahf
add
mov
add
jle
push
lret
roll
je
pop
les
adc
subl
and
pop
mov
repz
xchg
sub
stos
sahf
or
xor
ss
xor
popa
addb
rclb
cmp
xchg
dec
add
hlt
sub
outsl
mov
inc
scas
jbe
sahf
lods
loopne
nop
or
fsubrs
jb
or
jae
jo
mov
push
cld
mov
xor
loopne
test
stos
mov
mov
mov
sub
aaa
std
pop
nop
sbb
mov
lock
loopne
xchg
repnz
data16
mov
xchg
and
and
pop
mov
ret
inc
popa
mov
lods
xchg
lea
jmp
xchg
inc
cmp
xchg
rorl
sub
push
sub
repnz
cmp
jo
mov
ljmp
xor
test
cmpl
push
out
xchg
dec
ljmp
test
ret
add
xor
ja
enter
aam
mov
mov
shll
clc
mov
pop
xor
mov
subb
leave
test
push
lcall
mov
pop
jb
cli
sub
in
sbb
lds
rol
scas
ja
xorb
add
mov
xor
jmp
add
adcl
or
push
jge
cltd
inc
sub
push
call
lock
add
shr
xor
popf
sahf
push
add
add
jmp
xchg
xor
nop
pop
adc
inc
adc
xchg
push
insb
lahf
and
mov
or
xor
out
or
adcl
rolb
fsubrs
test
andb
lock
xchg
mov
bound
mov
add
adc
sarl
jle
push
and
nop
scas
js
cmpb
sbb
add
stos
rolb
inc
movsb
std
ds
addb
adc
and
push
push
fsubl
and
orb
mov
inc
jg
je
mov
add
xchg
mov
xor
aas
inc
stos
je
add
push
jb,pn
cmpsb
lock
mov
sahf
adc
mov
pushl
adc
jns
cmove
arpl
roll
cmp
jo
xchg
ljmp
mov
in
add
movsb
mov
xchg
adc
add
push
push
std
cmpsb
roll
inc
push
lret
mov
and
dec
push
sub
ret
es
adc
aaa
pop
sub
push
jae
jle
mov
int3
jb
rorl
jno
lahf
test
je
ds
jno
call
inc
movsb
sti
or
fnstenv
dec
mov
leave
jae
push
outsb
repz
sti
dec
imul
push
cmp
sbb
sbb
cmp
movsb
test
pop
adc
add
addl
or
mov
sahf
inc
ret
push
adc
inc
push
mov
cmp
orb
mov
andl
and
xlat
add
stos
fs
gs
cmp
push
rorb
in
mov
out
push
mov
bound
lock
pop
add
mov
mov
sti
ror
xchg
nop
pop
outsb
and
mov
ljmp
jns
mov
add
xchg
xchg
mov
icebp
jg
outsl
addb
addb
push
or
testb
shrb
or
rcrb
inc
add
mov
mov
push
ret
add
repz
adc
xor
inc
add
decl
sub
dec
repz
inc
add
dec
inc
pusha
adc
or
enter
je
adc
mov
loop
testb
adc
add
dec
mov
subb
push
sub
into
mov
adc
mov
push
loop
adc
sbb
call
pop
xor
fiaddl
push
or
add
and
fs
xor
rcrb
pop
in
inc
xor
adcb
mov
hlt
fidivrl
push
lret
inc
aad
add
sbb
cmpsl
mov
sbb
and
inc
add
mov
lcall
dec
cmpb
sbb
lahf
xchg
add
cld
xor
rcrb
xor
and
xchg
dec
xchg
push
add
sub
jae
sti
loop
xchg
xchg
pop
cmpsb
daa
sahf
and
or
push
incl
rcr
jae
cmpsb
daa
pusha
mov
cmpsb
add
add
loopne
lcall
push
je
inc
dec
push
push
lods
add
add
add
sub
pop
or
data16
inc
decl
xchg
add
xor
addl
hlt
add
inc
orb
pop
push
std
fwait
insl
sahf
mov
clc
int3
sbbb
push
je
pop
lea
xchg
data16
je
add
add
fs
dec
nop
fs
pop
sahf
mov
mov
and
cmp
jle
mov
std
add
std
add
or
mov
push
ret
cmp
fnstenv
xor
or
int3
addb
jp
imul
je
adc
pop
outsb
enter
or
add
push
pop
mov
stos
and
pop
cmp
add
or
enter
rorb
inc
and
push
dec
aas
or
add
aas
fiadds
std
pusha
add
mov
lods
and
outsb
js
mov
mov
scas
mov
inc
adc
jp
sar
or
xchg
sbb
mov
jns
cmp
in
incl
mov
mov
add
inc
test
inc
adcl
push
push
fiaddl
shlb
or
inc
push
add
in
jg
fs
pusha
addb
sti
cmp
mov
cmpsb
dec
test
xchg
ljmp
jne
mov
pop
movsb
mov
inc
xor
test
adc
aam
xchg
xchg
or
dec
add
les
add
rcrb
mul
call
cwtl
push
xor
orb
inc
sahf
sahf
cmpsl
cmp
dec
pop
or
mov
nop
push
pop
or
and
push
ds
lahf
ret
fwait
or
inc
push
add
or
jae
cmc
dec
in
in
adc
fs
into
int3
das
jb
stos
dec
mov
addr16
inc
adc
aam
cld
cltd
test
or
test
adcb
mov
or
or
mov
sti
loopne
cs
ja
pop
rcrb
aas
pop
rolb
jg
add
lods
in
push
xor
shrb
rorl
add
cmpb
adc
mov
add
aad
js
loope
aam
push
mov
sbb
xor
or
fs
sahf
lock
or
sbb
pop
add
inc
rolb
pop
aaa
rorl
bound
and
and
mov
neg
cmp
arpl
jl
in
fidivrl
nop
andl
fcomip
jg
xor
mov
shrb
add
out
and
pop
jo
ret
and
jp
dec
addb
inc
cs
inc
dec
jp
ret
shlb
or
inc
xor
jnp
add
cld
cmc
mov
into
cmp
pushl
nop
popf
jo
test
outsb
xorb
orl
dec
stos
movsl
xor
xchg
repz
xchg
ficomps
adc
sbb
and
mov
pop
add
and
add
push
cmc
add
xor
sbb
test
jo,pn
mov
push
adc
pusha
cld
lds
sub
es
xor
cs
loopne
add
mov
mov
popl
xor
addr16
pop
mov
add
aam
cs
mov
mov
inc
dec
mov
jns
repnz
pushl
dec
orb
in
sub
or
inc
mov
and
js
call
xchg
jo
icebp
add
inc
sub
scas
addb
add
adc
pushf
aaa
adc
inc
test
jg
or
adc
jb
add
adc
dec
dec
jo
popf
bound
clc
inc
ret
shlb
sbb
fisttps
sub
insb
mov
xor
pusha
inc
je
pop
inc
sbb
adc
sub
jns
pop
xchg
inc
mov
add
jg
sbb
mov
push
jo
sahf
dec
push
inc
cli
incl
sub
pop
rorl
xchg
and
or
loop
and
pop
data16
pusha
insb
adc
or
aaa
mov
cmc
addb
xor
or
cli
add
sahf
into
rolb
int3
or
pop
mov
mov
or
jl
sahf
loope
or
out
fsubrs
rcrb
pop
jb
inc
pop
pop
xchg
inc
js
shrl
bound
sti
xor
std
or
sbb
dec
xor
pop
in
sub
or
or
pop
mov
inc
cltd
and
xchg
and
or
aas
xor
loope
mov
pop
fmull
sub
loop
pop
inc
inc
pop
or
pop
xchg
aam
mov
mov
xchg
out
call
bound
mov
fildl
inc
jae
test
stos
addb
roll
add
pop
testb
dec
loope
mov
orl
push
and
push
ret
and
dec
pop
pop
add
rorb
mov
test
je
cmpsb
mov
xor
jne
outsb
add
fcmovnb
fwait
or
and
incl
xor
pop
push
std
das
jp
sub
flds
sub
scas
scas
add
jo
mov
jbe
add
add
pop
inc
clc
or
cld
jle
js
add
fs
in
cwtl
shlb
outsb
xchg
popf
mov
popa
add
adc
cmpsb
fwait
cmp
adc
pusha
sub
sbb
mov
test
push
mov
insl
mov
cmpsl
cmp
jl
inc
xchg
push
daa
nop
add
sbb
or
aaa
dec
adc
and
pop
jp
lar
dec
or
add
sbb
and
bound
andl
mov
or
es
jns
lret
push
mov
pop
or
sbb
inc
or
inc
dec
xor
ljmp
push
add
clc
push
add
add
cmp
push
ja
mov
mov
push
mov
nop
or
mov
and
adc
mov
and
push
inc
std
repz
mov
and
dec
dec
pusha
pop
std
jns
and
add
add
lret
cmp
incl
push
add
sub
sub
push
add
push
add
clc
cmp
mov
inc
add
xchg
inc
add
push
push
or
data16
xchg
mov
add
rorb
mov
cli
adc
mov
xchg
dec
rolb
and
mov
xor
std
jo
lret
adc
jo
push
call
xchg
jp
mov
pop
outsb
stos
loopne
mov
adc
ss
mov
push
lahf
jb
add
adc
sub
pop
mov
lds
ds
or
push
xor
pop
rcrb
notb
jb
mov
into
rol
jle
ljmp
jmp
inc
add
stos
add
sub
push
dec
mov
std
dec
push
jo
add
adcl
repz
sbb
pop
fimull
lcall
push
mov
jo
or
mov
stos
and
mov
insb
inc
inc
das
mov
push
ret
repz
sbb
sbb
mov
add
add
popa
adcl
jo
pop
hlt
loopne
and
nop
jns
addb
add
gs
js
adc
dec
loope
mov
dec
enter
mov
ja
push
or
adc
xchg
xor
mov
mov
push
push
sbb
jno
pushf
pusha
add
mov
loope
lahf
lret
rcrb
lock
add
adc
lods
jle
pop
dec
roll
xor
xchg
clc
incl
adc
xor
fidivl
add
call
xchg
lea
jl
scas
add
or
push
pushf
sbb
mov
jb
push
or
aad
sar
add
xchg
xlat
add
and
cli
popf
fidivrs
add
push
jp
jo
or
add
mov
out
inc
xor
add
cmpsb
loopne
dec
scas
cld
add
or
pop
sbb
cmp
sub
stos
add
push
xor
pushl
xor
fwait
mov
xor
pop
nop
dec
push
xchg
add
and
mov
jo
arpl
jo
adc
mov
loope
cmp
push
sahf
shlb
mov
cwtl
mov
mov
mov
movsb
inc
and
das
add
xchg
push
rorb
or
or
and
movsb
dec
cmpsb
int3
xor
add
ret
jg
or
push
arpl
jo
ja
jnp
pavgb
out
xor
xor
pop
jo
cmpsl
adc
push
push
pop
jae
imul
inc
adc
nop
or
sub
es
or
add
out
aad
enter
call
jp
adc
add
adc
xchg
adc
cmp
loopne
pop
cmp
sahf
mov
adc
add
dec
sub
cmc
or
dec
jns
sbb
jp
cwtl
inc
add
jl
mov
sub
adc
arpl
xor
mov
dec
cld
xchg
pop
mov
aas
shll
add
push
ja
cld
repz
inc
xchg
jb
ret
add
sub
and
cs
dec
cwtl
sub
adc
or
and
jo
and
outsb
loopne
call
jg
adc
ret
das
or
test
push
cmp
test
gs
or
aam
add
and
adc
aas
xchg
and
loopne
test
rolb
or
mov
inc
push
xchg
ja
lret
dec
sub
test
pop
subb
repz
cmp
jb
arpl
or
and
sti
inc
sbb
mov
jp
adc
adc
cli
dec
mov
push
mov
insb
xor
pushf
adc
mov
ss
jle
lock
xlat
xor
scas
dec
inc
mov
sbb
adc
sahf
xorl
or
movsl
mov
and
test
test
mov
inc
in
mull
mov
or
or
adc
pop
jne
mov
pop
push
pop
mov
nop
sbb
outsl
adc
pusha
cs
mov
inc
inc
inc
jp
aas
cwtl
js
sbbb
mov
rolb
xlat
add
pop
mov
xor
cmpb
mov
scas
les
lods
jnp
push
add
adc
ss
outsb
test
jp
push
add
fbld
stos
pop
fwait
add
addl
incb
push
jle
scas
sahf
add
or
and
ror
fsubrp
push
jp
test
adc
inc
and
mov
jb
adc
mov
je
xor
mov
xor
and
daa
push
mov
or
es
mov
cmp
mov
mov
or
and
xchg
ds
data16
sub
jp
cmp
jle
stos
fisubl
adc
mov
ret
fildll
stos
js
mov
gs
gs
adc
mov
cmp
scas
cs
sahf
xchg
mov
xchg
adc
fisttpl
addb
add
and
dec
loopne
std
mov
and
incb
ds
andl
lcall
jmp
es
pop
test
cwtl
ja
add
cld
add
lcall
or
sbb
pop
nop
insb
push
push
cmp
lods
sarl
dec
xor
and
es
mov
dec
add
addb
push
orl
out
les
xorb
mov
mov
inc
xchg
test
or
dec
and
xchg
adcb
sbb
call
std
ds
xorl
jae
popf
and
push
insl
and
and
cmp
es
js
mov
push
mov
pop
orb
adcl
ret
inc
xor
adc
cmp
add
jo
mov
adc
pushf
rclb
testb
or
mov
mov
add
cld
hlt
ss
pusha
adc
cli
sahf
sub
imulb
roll
aad
mov
aam
pusha
xchg
jp
cwtl
push
push
pushw
mov
jp
or
enter
sahf
or
push
xchg
test
xchg
dec
adc
test
stos
ljmp
mov
lods
fs
rorl
mov
mov
orb
test
jp
xorb
loop,pn
push
inc
sub
inc
add
nop
or
sbb
cmp
arpl
jo
sbb
inc
xchg
testl
cmpsb
inc
push
not
aam
aas
or
sub
inc
jns
add
adc
mov
mov
jmp
das
shlb
sub
and
sti
add
jae,pn
das
movsb
scas
aam
pusha
add
into
cs
shlb
fdivrp
mov
inc
push
inc
and
push
mov
inc
mov
mov
call
sbb
and
incl
ljmp
adc
and
adc
lret
les
in
int3
ret
inc
sbb
sub
fcoml
in
insl
sbb
inc
or
addl
push
push
ret
dec
shrb
loopne
cs
dec
inc
and
and
push
add
and
insl
xor
fsubr
testl
dec
mov
push
test
push
mov
sahf
adc
inc
jo
sub
mov
jo
cmp
sbb
stos
or
lcall
dec
mov
jno
or
mov
mov
jecxz
data16
mov
sti
add
mov
ffreep
subb
sahf
sub
or
rcrb
testb
add
test
mov
pop
rolb
decl
xor
and
and
data16
and
pop
movsb
adc
or
ljmp
orb
daa
daa
push
mov
loopne
push
mov
gs
adc
subl
add
pusha
xor
sbb
jg
xor
mov
pusha
popa
addr16
aaa
or
and
mov
cltd
jne
pop
dec
mov
bound
add
jp
mov
or
or
jp
inc
lahf
test
xor
mov
mov
loopne
or
add
dec
xchg
mov
cld
pop
xchg
rorb
cmp
and
stos
dec
ljmp
icebp
movsb
std
inc
sbbb
jb
mov
loope
imul
fimuls
mov
test
push
ss
and
in
shlb
out
pcmpeqw
adc
add
mov
mov
adcb
clc
add
mov
lret
std
cmp
pop
popf
pop
and
xor
dec
test
rolb
stos
je
jbe
pop
xchg
sbb
dec
inc
das
push
cmp
cmp
jbe
cmc
and
cld
mov
orb
mov
add
add
outsl
mov
xorl
pop
add
pop
mov
divb
mov
test
xor
add
shrb
ja
orb
mov
std
xor
mov
mov
jl
repnz
js
loopne
enter
inc
lock
dec
fcomps
xchg
mov
mov
jg
cmc
test
xchg
orl
pop
inc
movsb
test
cmp
lock
or
jno
js
add
push
loop
bound
jle
dec
loope
and
les
push
sahf
aaa
ret
or
inc
stos
sahf
cs
adc
cmpsb
mov
icebp
push
cmpsb
add
arpl
cmp
std
add
xor
fs
outsb
sbb
mov
or
incb
insb
inc
lods
inc
dec
mov
sub
or
jp
cwtl
mov
inc
inc
mov
call
jle
and
and
xor
dec
pop
popa
add
sub
pop
or
and
rol
add
push
add
mov
xor
sub
or
fcmovne
add
es
loop
or
mov
xchg
cs
inc
shrb
add
and
adc
sti
xor
mov
cmp
adc
mov
add
cld
xor
add
fsubl
xor
push
dec
data16
or
add
scas
aam
cli
mov
adcl
sahf
mulb
xorb
add
xchg
or
xchg
js
hlt
shlb
hlt
mov
dec
push
fdivrs
or
xchg
lods
pop
push
pop
pop
sub
add
and
adc
inc
add
cs
out
cmp
inc
repnz
or
mov
and
add
cmp
sub
ss
inc
mov
sbb
jle
and
cmc
enter
and
sub
icebp
and
loop
sub
add
jl
scas
sahf
lods
adc
lcall
add
les
mov
or
add
out
add
mov
insb
xorb
and
push
adc
push
mov
mov
inc
pop
sti
xor
addb
lds
decb
adc
xor
test
clc
add
sahf
daa
sbb
divb
es
push
lods
and
add
sbb
or
add
fistpll
add
mov
popf
inc
push
xor
aaa
out
push
dec
ljmp
mov
data16
xchg
xchg
mov
push
outsb
jne
aaa
lcall
jp
aam
push
test
rolb
push
mov
ja
shrl
add
pop
scas
inc
shlb
lret
outsl
push
push
add
fnsave
fimuls
mov
pushl
dec
inc
fistpll
cmpsb
jae
cmp
inc
add
xchg
add
insb
addl
es
xorb
dec
and
push
insl
mov
subl
cwtl
sub
push
aaa
lock
fdivr
push
add
sbb
inc
push
inc
aaa
inc
add
xchg
cs
sbb
dec
mov
sbb
xor
js
clc
lret
or
mov
or
sub
sub
sar
or
add
push
xlat
mov
xor
loopne
ss
push
call
inc
popa
push
adc
nop
and
jg
adc
rclb
scas
lahf
add
in
push
aaa
cs
mov
sbb
mov
addl
loope
ja
and
pop
inc
mov
sbb
and
add
mov
push
adc
lcall
jns
mov
inc
push
mov
and
das
and
add
xchg
lock
xchg
inc
mov
test
push
movsb
inc
inc
adc
mov
push
in
popf
nop
loope
dec
jg
cld
jp
testb
and
jbe
and
push
cmc
dec
rcll
cmp
push
lock
add
pushl
jbe
cmp
xor
mov
or
mov
and
push
dec
xchg
push
and
clc
mov
sub
mov
pusha
je
nop
and
out
jo
adc
jp
sahf
pop
shlb
mov
push
push
mov
jne
xchg
arpl
push
sarl
cwtl
orb
dec
mov
push
xor
sahf
cs
jge
insb
push
jl
add
cmp
cmpsb
adcb
scas
adc
ds
push
movsl
push
dec
std
adc
jno
or
mov
jg
sub
insl
jno
add
jmp
xchg
cwtl
push
adc
push
inc
and
pop
notb
add
loopne
adc
add
std
jne
mov
adc
inc
inc
ja
out
stos
or
jle
inc
bound
xor
test
inc
adc
xor
mulb
adc
scas
and
sbb
mov
xor
pop
std
push
mov
lock
sbb
arpl
push
inc
mov
lcall
shll
xchg
adc
xchg
sti
inc
cmp
pop
insl
out
les
jno
push
xchg
mov
pop
sbb
in
inc
jb
ljmp
sar
add
add
or
icebp
nop
decb
addb
push
movsb
filds
rclb
js
push
lock
ss
jns
xorb
out
cli
mov
adc
notl
mov
xor
add
sahf
jle
adc
or
sti
sarb
add
add
sahf
add
les
cmp
outsl
jo
lds
jl
mov
lds
and
and
cmp
mov
sbb
push
icebp
xor
add
pop
cmc
pop
inc
pop
mov
outsb
jns,pt
repnz
and
adc
test
or
jne
add
mov
and
inc
sbb
xchg
xchg
popa
shll
or
mov
lea
imul
pop
fs
mov
nop
push
mov
or
cmc
dec
outsb
push
add
sbb
sti
or
cs
stos
add
sarl
push
jl
popf
jbe
clc
incl
jmp
add
js
cld
xor
sbb
sub
and
and
loop
or
dec
mov
mov
push
or
sbbb
xor
jecxz
add
aaa
mov
sbb
sti
ret
in
add
shll
jle
lret
pop
and
or
arpl
cmc
inc
adc
lahf
stc
mov
aam
rcrb
adc
add
outsb
add
add
loope
int3
and
or
lods
sub
mov
movsb
shrb
xor
mov
mov
mov
lahf
nop
mov
inc
pop
scas
add
mov
cld
add
xor
xchg
repnz
dec
outsb
add
adc
inc
push
mov
inc
xor
dec
sbb
cmpsb
inc
loopne
add
pop
inc
jne
nop
insb
xchg
and
dec
les
leave
add
sbb
test
or
adc
push
adc
and
dec
add
testb
ja
push
sbb
std
pop
add
js
pop
xchg
pop
sub
sbb
xchg
adc
jle
mov
mov
in
sbb
xchg
push
mov
call
or
dec
xor
or
sub
add
sbb
shlb
mov
pusha
add
aaa
sti
add
add
bound
jl
add
popf
inc
cltd
mov
mov
push
push
ss
scas
dec
xchg
popf
push
dec
sub
jb
jecxz
xchg
mov
sti
add
fadd
cmpsb
mov
sbb
push
cmp
pop
sbb
jle
adc
cmp
test
push
push
adc
and
push
push
push
mov
outsb
aam
call
xor
add
add
in
push
testb
sbb
add
adcb
dec
movsl
jbe
adc
dec
ds
add
sub
jmp
testb
orl
shrb
sahf
imul
icebp
ror
lods
mov
fwait
add
mov
sub
rcrb
xchg
stos
add
or
mov
inc
cld
push
subb
enter
adcl
inc
add
sbb
pusha
sti
adc
ret
add
fisttps
movsb
cli
sub
enter
mov
fsts
mov
test
mov
ds
sub
dec
into
push
mov
jne
mov
imul
and
daa
es
fistpl
xchg
cmc
lret
push
add
and
cld
mov
cmc
inc
mov
insb
mov
xchg
repnz
add
bound
ficoms
jl
ror
adcl
lret
pop
sub
add
aam
cli
adc
xorl
mov
mov
inc
subl
mov
or
mov
mov
sahf
sub
xchg
mov
jl
add
inc
cmpsb
xor
xchg
scas
cli
and
or
push
into
inc
testb
pop
add
pop
add
clc
nop
inc
jns
push
add
sub
arpl
leave
or
add
outsb
std
jg
outsl
mov
mov
testb
jo
xor
inc
test
repz
or
jl
adc
bound
and
sub
jne
test
mov
andb
add
jmp
and
pop
scas
jne
and
ficoms
lcall
mov
and
lds
jle
stos
jb
inc
jno
cmp
inc
and
lock
pop
fcoml
and
sub
mov
pop
mov
ss
add
fcomps
xchg
ret
out
pop
or
ja
add
mov
cmovnp
out
sbb
das
dec
scas
or
and
xor
insb
test
inc
inc
in
mov
sar
push
push
sub
xchg
or
jne
pop
data16
lods
jo
aam
cmpb
add
xchg
int3
sahf
fmul
cmpsb
adc
add
pop
add
and
hlt
decl
push
clc
xor
dec
pop
cmc
ffree
mov
inc
hlt
inc
mov
insb
out
pop
hlt
fwait
inc
push
js
rorl
rorb
jp
call
xchg
or
mov
add
jo
inc
and
mov
or
push
dec
xchg
mov
dec
aam
adc
cld
insl
push
mov
xor
and
jle
add
and
mov
std
mov
test
push
add
dec
scas
cmp
fs
pop
rclb
mov
inc
push
test
rolb
add
xchg
popa
mov
fiadds
jae
sub
add
xor
rorl
xchg
mov
ds
outsl
add
subb
shrl
sbb
adc
pop
mov
or
mov
ss
pop
decl
or
inc
jne
ficompl
cmc
add
xor
ffree
pop
insb
rcrb
push
dec
jo
sbb
jns
xlat
adc
rolb
clc
sbb
in
or
or
or
jne
xchg
or
outsl
subb
sub
js
add
adcb
mov
mov
sbb
push
std
jo
or
and
dec
loopne
loopne
mov
xor
inc
xchg
sbb
dec
pusha
inc
aam
sub
push
push
std
sub
cld
dec
fdivrl
subb
insl
and
loopne
mov
xor
jbe
inc
lahf
pusha
push
dec
std
hlt
dec
add
jb
jl
fcomps
subb
jge
ss
lea
fadds
popa
add
dec
loop
push
adc
mov
push
adc
call
push
outsb
jne
sahf
rcl
adc
add
jp
insb
inc
adc
or
bound
lret
pop
dec
sub
mov
movsb
add
fdivrl
xor
sub
sub
enter
fcmovne
je
cli
add
es
xchg
incb
jp
les
xorb
data16
add
xchg
push
shrb
negb
push
sarb
scas
jp
jbe
outsl
xor
jl
pop
or
sahf
and
cmp
push
or
xor
add
add
lds
or
rclb
push
enter
inc
sbb
rcrb
xor
in
test
add
sti
xor
pusha
stos
push
sub
jbe
or
ret
adc
scas
sbb
jl
and
scas
and
mov
dec
lret
adc
es
fwait
jl
xor
sahf
push
loope
scas
sbb
push
lock
inc
sahf
mov
push
mov
out
and
push
or
sub
movsb
repnz
inc
inc
mov
dec
dec
loope
push
sub
or
sub
fildll
add
dec
dec
mov
and
inc
xorl
adc
adc
add
jnp
add
push
arpl
dec
jecxz
enter
test
imul
loopne
int3
aam
mov
mov
add
sub
adc
lcall
ud0
and
jb
cmc
xor
outsb
dec
pusha
ds
push
xchg
dec
dec
dec
and
pop
loopne
xor
insl
mov
cwtl
subl
sub
and
add
pop
sahf
cmp
add
add
push
mov
dec
or
sahf
inc
or
xor
sub
pusha
cmp
push
add
push
pusha
and
lds
pusha
add
mov
cmc
cwtl
outsb
sahf
mov
subl
lahf
test
xchg
pusha
adc
out
push
je
xorb
dec
cmc
aaa
or
sahf
pop
xor
pop
adc
aaa
or
inc
adcb
push
fadds
push
movsb
inc
mov
push
and
add
outsb
adc
xchg
mov
testb
ja
rclb
or
add
lods
fcoml
fiadds
je
je
mov
mov
notl
mov
daa
mov
push
jle
mov
mov
mov
xchg
pop
sbb
cli
ret
mov
pusha
sbb
jbe
fnstenv
cs
jbe
pop
add
xor
mov
or
lock
sbb
mov
dec
dec
popa
pop
mov
fdivrp
dec
jb
push
int3
nop
sub
push
dec
add
mov
pop
and
rcrb
pop
inc
pop
mov
and
adc
ret
mov
add
es
push
cld
jmp
icebp
data16
add
sahf
adcl
mov
adc
shlb
rorb
dec
adc
mov
mov
andb
jns
out
sub
push
std
inc
adc
adc
ret
sarl
xchg
mov
dec
or
das
mov
add
inc
cmp
out
add
ret
scas
dec
jbe
sbb
inc
pop
push
push
and
and
push
push
jo
hlt
rorb
adc
sti
in
push
ds
je
push
xor
and
jb
cs
and
adc
push
sub
dec
call
adc
inc
mov
sahf
inc
lahf
cltd
adc
or
mov
outsl
decl
xor
cmp
sahf
push
jp
sub
or
adc
and
fsubl
mov
nop
add
sarb
stos
bound
sbb
outsb
or
scas
popf
pop
adc
add
sbb
fsubrl
sahf
or
sarb
nop
add
xor
add
xchg
hlt
xorb
xchg
jle
sbb
bound
dec
dec
sahf
out
aas
or
push
or
lock
jmp
lds
mov
ss
inc
mov
add
sahf
mov
dec
shlb
sbb
lcall
push
movsb
or
xchg
dec
aaa
xor
daa
add
mov
cs
add
xor
call
insl
sub
insb
sub
test
push
jge
test
and
jge
sahf
cmp
cld
push
dec
rcrb
sbb
dec
jp
outsl
pop
jmp
scas
ds
js
sub
push
sti
jb
or
dec
or
xor
dec
repz
fisttps
pusha
push
push
pusha
inc
lock
inc
add
push
or
add
pop
adc
gs
andb
nop
adc
mov
pop
jne
jp
jb
mov
mov
rorb
jo
xchg
es
pop
popa
loop
testb
or
add
adc
mov
adc
test
in
cs
std
and
push
std
add
iret
outsb
das
xor
into
mov
fimull
add
je
push
mov
jnp
mov
xchg
cmp
xor
push
push
std
xor
std
add
pop
pusha
jne
xchg
in
sahf
bound
fsubrl
addb
cmpsb
leave
ret
add
enter
cwtl
adc
push
enter
add
sub
pop
loopne
jl
lods
aas
sahf
cld
inc
xor
jbe
cmp
pop
mov
aad
ds
add
xor
mov
xchg
and
aam
data16
or
shlb
dec
cmpl
xor
inc
push
iret
ret
insb
add
jle
mov
push
xchg
inc
push
and
add
pusha
inc
mov
pusha
mov
loopne
mov
jb
dec
jge
negb
jb
pusha
aas
mov
cmp
add
adc
filds
mov
repz
aad
fmuls
sub
mov
lds
clc
popa
pop
std
aaa
dec
adcb
push
ffreep
and
cs
enter
test
ljmp
or
and
shlb
xchg
add
adc
inc
and
mov
xchg
push
pop
inc
adc
call
mov
nop
mov
inc
mov
push
cli
mov
icebp
push
ja
pop
push
xchg
shlb
lret
jge
std
icebp
ds
sti
ret
push
fcompl
add
mov
xchg
mov
adc
add
adc
add
add
push
dec
fiadds
cmp
push
mov
jmp
jnp
jle
mov
decl
add
popf
push
xchg
jle
mov
std
idivb
mov
inc
jmp
add
jae
sbb
cli
fists
negl
xchg
jne
mov
adc
pop
adc
or
adc
fbstp
cmpsb
sbb
repnz
adc
imul
ljmp
rcl
bound
dec
cli
cmc
lcall
sti
lret
xchg
idivb
sub
mov
mov
inc
fdiv
cmpsb
fdivrp
and
mov
lock
xor
mov
call
roll
sbb
lock
jo
xor
loop
pusha
cmp
dec
jb
add
and
and
adc
mov
addl
fcompl
rclb
fiaddl
jmp
add
mov
push
stos
in
add
lea
or
or
mov
sub
loopne
jg
pop
adc
les
lock
adc
dec
enter
mov
add
or
movsl
adc
mov
lcall
inc
outsl
cmpb
jbe
adc
insb
xchg
or
test
adc
mov
dec
mov
dec
mov
or
orb
fidivrs
and
pop
roll
shll
imul
std
jg
and
push
mov
inc
and
cmp
mov
sahf
repz
addl
dec
ret
out
cli
add
sub
adc
add
adc
cli
xchg
sub
add
dec
rcrb
movsl
pop
bound
adc
imul
ljmp
add
xchg
push
sub
inc
lock
add
pop
popfw
pop
xchg
add
scas
pop
adc
je
sarb
mov
mov
jne
enter
add
cmp
ret
push
cmc
mov
mov
add
call
push
or
sarb
inc
mov
nop
sbb
push
rorb
sub
in
xchg
push
sub
add
out
scas
add
pop
add
add
jle
lcall
ljmp
aad
movsb
pop
aad
and
inc
add
sbb
add
or
add
add
orb
and
or
lahf
mov
sbb
jbe
fs
out
aad
in
push
loopne
bound
add
inc
repnz
jno
cltd
push
pushf
mov
push
push
rorb
mov
mov
push
pop
sub
push
push
je
push
xchg
subb
cmpl
mov
loop
add
rolb
rclb
add
add
testb
add
pop
lods
ret
mov
mov
int3
sbb
mov
mov
jo
add
mov
or
cmpsl
push
add
xlat
movsb
outsb
add
mov
or
aad
es
test
imulb
lock
mov
xchg
sub
add
ss
dec
add
adc
jbe
std
add
mov
or
sub
fcoml
mov
mov
notb
subl
xor
sahf
in
sbb
fs
loope
lock
shl
inc
subb
cwtl
scas
xor
xor
cmp
add
in
shlb
add
je
push
mov
insb
sub
or
adc
adc
inc
aad
adc
addb
test
mulb
roll
std
xchg
sub
stos
decb
enter
add
jl
out
jg
or
sbb
cs
lcall
stos
add
pushf
dec
xorb
in
je
xor
push
inc
jge
pop
aam
bound
ret
cmc
cmpsb
jae
out
pushf
add
dec
inc
addb
xorb
enter
push
in
and
and
rorb
xorb
cli
jg
js
sahf
ficomps
adc
xchg
addb
inc
bound
push
dec
mov
push
dec
insb
cmpb
lret
icebp
jmp
sub
mov
divb
xor
sarb
sbb
hlt
cmp
mov
sbb
addl
mov
clc
scas
in
testb
add
add
repnz
and
push
push
mov
or
aas
cld
xchg
outsb
sbb
jle
push
daa
daa
xlat
repnz
or
cs
mov
mov
ja
mov
xor
add
jmp
aam
and
data16
testb
inc
fimuls
cmc
in
xlat
push
shlb
jecxz
adc
inc
xchg
and
jae
adc
adc
es
fidivrl
daa
subb
aam
mov
cmp
lret
add
decb
or
loop
add
adc
testb
mov
pop
call
jg
addb
xchg
dec
and
arpl
inc
popf
and
mov
jl
lahf
inc
rolb
adc
push
inc
push
inc
push
lods
sub
clc
sbb
pop
and
test
sahf
fsub
es
push
pop
add
stos
sub
cmp
xor
popf
loope
arpl
inc
add
imul
sub
cld
call
mov
outsl
nop
jnp
jl
xorb
jmp
jmp
bound
pop
jg
xor
or
xor
xchg
mov
or
call
mov
inc
push
add
into
ds
int
stos
push
js
mov
out
adc
loopne
mov
dec
jg
loopne
push
out
into
sahf
inc
add
sbb
add
popa
adc
andb
or
nop
mov
adcb
push
inc
sbb
push
pop
sti
sub
pop
add
cmp
cmp
je
popa
adc
pop
lods
outsl
call
dec
sahf
push
popl
fs
or
sti
inc
adc
jl
decb
lahf
loope
dec
loopne
incb
push
xor
mov
xor
mov
cmpb
std
add
jl
std
xor
push
jge
inc
test
jo
sub
add
or
orl
cmpsb
pop
loop
pop
and
nop
and
into
lcall
adc
lcall
scas
js
scas
and
mov
dec
lods
mov
sbb
repz
dec
xchg
pusha
pop
incl
push
arpl
push
and
test
dec
loope
jo
roll
ja
jmp
rcrb
push
flds
jo
into
rcll
dec
dec
fidivl
fisubs
mov
mov
add
mov
sbb
sarl
jp
std
mov
lea
or
push
popf
jae
push
out
xchg
test
push
dec
or
inc
pop
jnp
push
adc
mov
mov
mov
and
jl
or
and
sbb
sti
add
push
cmp
scas
int3
cs
mov
shrb
or
mov
cs
inc
dec
and
mov
add
jae
sti
sub
call
or
lcall
add
andb
jl
mov
stos
orb
xchg
jb
inc
sbb
xor
inc
into
add
decl
movsb
inc
or
bound
mov
xorb
xchg
and
mov
jle
push
shll
and
xchg
fisubs
bound
xchg
sbb
adc
dec
xchg
adc
add
loopne
mov
testb
loope
push
mov
and
xor
and
dec
scas
sahf
movsb
or
sbb
mov
icebp
inc
pusha
add
inc
popa
sbb
ret
dec
inc
popa
mov
xor
xchg
jo
inc
lea
push
push
fsubrl
mov
jne
mov
dec
into
push
popa
sar
das
addb
loopne
test
pop
es
add
testl
jns
or
mov
or
lds
mov
rclb
xchg
in
inc
sub
je
scas
add
jp
movsb
lods
inc
cli
xchg
xor
add
jb
and
jp
pop
fimull
mov
popa
fmul
sbbl
mov
inc
subl
jnp
add
pop
pop
adc
sbb
incl
sub
mov
stos
mov
clc
outsl
xchg
xchg
add
ret
lods
inc
loopne
mov
incb
rcr
rorb
bound
aad
test
mov
ficoms
ret
inc
and
loopne
adc
nop
cmp
sbb
adc
clc
add
push
shlb
add
sub
mov
loopne
sti
in
fwait
mov
push
or
and
push
push
enter
add
ljmp
imul
add
ljmp
ss
sub
add
xchg
sub
add
push
jo
inc
dec
and
fstpt
rclb
mov
cld
sahf
jo
inc
mov
xchg
adcb
ret
add
xor
xchg
shl
lcall
and
sbb
sbb
add
pop
mov
fcoml
sub
bound
rcrl
xchg
sub
add
ljmp
adc
xor
bound
add
imul
fs
add
cli
add
sbb
addb
ja
jge
add
jno
push
into
xchg
out
insb
push
and
push
dec
pop
adc
add
sarb
scas
pop
adc
call
orl
rorb
loop
and
pop
mov
aam
movsl
xorb
push
sahf
mov
xchg
pop
nop
inc
add
pop
and
test
jp
mov
lods
aas
inc
sub
or
mov
inc
adc
test
mov
jb
adc
lcall
inc
push
sub
scas
push
xor
jp
push
out
xor
rolb
add
and
push
add
adc
ss
mov
js
jp
cmp
xor
mov
decl
inc
icebp
mov
cs
jno
outsb
ljmp
js
loopne
jg
aad
cs
pop
inc
cltd
ret
xorb
and
nop
push
and
inc
cli
outsl
sub
or
push
and
mov
orb
jle
add
and
incl
push
mov
add
sub
aaa
rolb
add
cmp
rol
rolb
sahf
popa
test
sarl
and
rclb
ss
clc
jo
repnz
jo
dec
or
and
and
add
push
xchg
shlb
push
push
mov
or
ss
mov
rolb
sub
push
fisubs
mov
ljmp
ret
fidivl
dec
jp
adcb
push
rorl
jo
out
andb
xor
sub
add
sub
lock
and
sbb
xchg
scas
in
add
xor
cmp
andl
xchg
cmpsb
into
or
incl
aam
add
mov
xor
clc
xor
adc
pop
js
adc
cmp
out
cld
fildl
stos
push
or
ja
jb
ss
into
xchg
mov
ja
mov
push
popa
sbb
add
xor
ret
std
inc
xorl
lods
xor
loopne
or
inc
pop
add
inc
mov
loope
cwtl
shll
sahf
cmp
mov
push
pop
inc
loope
loopne
jl
inc
adc
adc
push
loop
xor
cli
mov
push
add
and
inc
les
and
sub
sahf
and
dec
mov
mov
loop
sub
pop
sahf
cmp
pusha
andb
adcl
pop
filds
inc
push
jno
sbb
das
mov
data16
ja
adcb
sahf
lea
add
lcall
or
add
and
sbb
loopne
add
xor
sbb
arpl
inc
les
test
pop
push
push
xor
stos
adc
push
mov
xor
cwtl
jl
mov
insl
add
add
or
adc
lods
fucomp
pushf
sbb
inc
mov
mov
pop
ret
rclb
pop
iret
cmp
sub
loope
ret
cli
sub
add
testl
std
cmp
jne
je
hlt
outsl
jb
subl
aas
sbb
adc
subb
mov
pop
adc
sub
mov
icebp
jg
push
push
dec
jo
pusha
cmp
std
clc
adc
xchg
enter
outsb
nop
add
bound
xchg
mov
push
push
cltd
jp
inc
data16
xor
mov
xorl
sbb
test
outsl
xchg
adc
xchg
add
loopne
or
lahf
dec
push
ds
call
sti
enter
adc
dec
mov
mov
push
pop
div
add
clc
ja
out
into
sub
inc
sub
add
cmp
pop
adcb
add
inc
addr16
sahf
add
adc
clc
inc
es
cmc
dec
sub
mov
gs
fisttps
mov
mov
jecxz
jl
xor
pop
lock
jno
dec
mov
jns
repnz
or
or
jo
bnd
jno
xor
sub
sub
cmp
mov
and
pop
cld
scas
cld
dec
imul
jbe
lea
add
and
adc
repnz
pop
sub
movb
mov
or
popa
pusha
je
mov
jne
ljmp
xor
sti
push
dec
inc
cmp
add
into
inc
add
inc
data16
or
sbb
in
push
call
and
dec
and
test
mov
mov
test
push
inc
xchg
hlt
pop
lcall
add
clc
outsb
jne
test
lahf
or
cmovs
xchg
ljmp
nop
add
adc
adc
push
xchg
jp
test
inc
outsl
adc
ljmp
gs
fs
push
mov
inc
loopne
pop
sbbb
hlt
push
rorb
popa
pusha
mov
and
push
jle
rcrb
add
movsb
or
lahf
push
jg
or
rclb
xchg
out
sbb
loope
pop
push
push
testb
iret
js
push
jns
and
add
sbb
std
add
mov
mov
cli
push
adc
movl
std
add
add
scas
aaa
aaa
int3
inc
sahf
cltd
popa
and
int
jp
fdivrp
add
repnz
inc
ret
cmpsb
add
xor
or
nop
jecxz
add
pop
les
jl
int3
adc
and
pop
add
and
mov
jb
push
stos
push
push
sub
dec
or
cwtl
popf
push
adc
jns
imul
adc
add
mov
imul
out
mov
or
jecxz
dec
jne
dec
push
add
stc
xchg
ss
push
and
push
ficomps
push
push
flds
xor
enter
xchg
rclb
adc
outsb
add
es
test
inc
and
inc
lret
dec
push
xor
adc
cld
lods
loope
inc
push
or
and
add
sahf
dec
clc
dec
aaa
sarb
jge
inc
subb
std
adcb
adc
pop
scas
adc
add
clc
mov
inc
jle,pt
xchg
xor
and
sub
lods
push
lcall
jb
mov
and
inc
add
popl
mov
add
ret
adc
lret
addb
push
mov
pop
inc
pop
gs
pop
and
test
add
mov
dec
std
jp
add
add
dec
pop
inc
mov
aas
push
pop
jae
push
sbb
fldt
mov
jbe
jp
xchg
xor
add
jle
adc
pop
dec
jecxz
inc
xor
and
sahf
into
fimull
ljmp
pop
inc
mov
push
push
inc
dec
loope
push
ret
insb
movsb
decl
jb
scas
add
add
stos
sahf
iret
cmp
xor
data16
push
cli
outsl
int3
add
je
jp
push
subb
or
add
add
inc
rcrb
shlb
add
clc
pop
jne
ja
or
pop
sarb
mov
inc
add
insl
fmuls
cld
std
add
mov
lods
lods
push
fs
lahf
or
push
sbb
mov
xchg
inc
adc
mov
mov
jl
dec
inc
add
sti
jg
movsb
ss
add
mov
or
xor
cmp
dec
mov
cmp
shrb
test
or
add
sti
ret
xor
adc
fs
cmpsb
inc
pop
cmc
or
sbb
incb
pop
sti
inc
jno
push
sbb
cs
cmc
sbb
jmp
loopne
mov
inc
in
fimull
into
cltd
pop
std
jo
add
out
adc
orb
outsl
push
mov
sbb
ret
push
in
rcrb
rorl
shrl
jns
dec
addb
or
mov
outsb
aaa
mov
data16
cwtl
into
sbb
ss
add
js
cmpl
addb
jne
shlb
rorb
divb
dec
sub
and
xchg
cmc
bound
sub
decl
shlb
cmpsb
xor
mov
sbb
cmpsb
push
ficomps
jb
add
cmpb
call
xchg
lods
push
andb
inc
stos
or
loop
sub
jae
outsl
sub
scas
bound
popf
sub
xlat
popa
insb
jl
fists
stos
aad
dec
and
xlat
or
push
and
push
push
sbb
add
xchg
jbe
aad
imul
outsl
adc
and
es
andb
mov
sbb
cmpsb
stc
add
sahf
mov
pop
mov
popa
add
xchg
add
and
add
xlat
or
into
lcall
sbb
sub
cmp
push
mov
gs
push
ds
sahf
not
outsb
xchg
idivb
push
add
stos
xor
xor
xlat
jp
mov
pop
aad
popf
out
fbstp
aam
push
loopne
mov
popf
out
int3
jb
rcl
cmp
fucomp
lods
push
mov
adc
gs
pop
es
sub
aas
iret
repz
ljmp
add
pop
sub
out
loope
and
mov
out
sbb
jns
and
inc
dec
inc
add
fistps
push
and
add
xor
dec
sbb
dec
inc
or
pop
inc
mov
stos
pop
jmp
mov
and
loopne
pop
push
movsb
pusha
in
insl
push
mov
or
add
pop
mov
stos
inc
add
aad
in
add
orb
ret
cs
mov
mov
add
mov
push
xor
and
and
lret
add
and
adc
mov
dec
mov
sbb
push
and
dec
or
into
add
ret
and
ja
fsubl
je
into
test
popf
jmp
jne
adc
cwtl
andb
popa
sub
pop
jp
sub
lret
divb
imul
popa
adc
jp
and
mov
add
repz
inc
jmp
rcrb
jo
mov
subb
inc
mov
sub
dec
push
clc
mov
jo
push
mov
pop
sub
cmp
into
mov
or
scas
adc
mov
sti
or
movsl
pop
rolb
movb
or
repz
cld
and
cmp
sbb
push
lods
enter
mov
or
add
aas
sbb
add
aaa
rolb
aaa
xor
adcl
dec
movsl
icebp
dec
or
ljmp
and
add
mov
das
rcrb
dec
and
ljmp
jno
and
setne
cld
out
add
out
jmp
mov
testb
add
cld
addr16
xchg
lea
outsb
pusha
and
pop
sub
movsb
mov
sahf
mov
or
loopne
jbe
adc
adc
and
ret
and
adcb
jg
mov
testb
mov
lock
addl
and
nop
pop
add
das
adc
ret
push
add
or
ljmp
or
mov
or
add
mov
loope
push
outsl
add
incl
mov
sahf
adc
out
jo
aas
lock
cmpsb
mov
and
jp
std
push
sub
mov
adc
test
insb
mov
sbb
add
pushf
fs
dec
pop
adc
test
xor
shll
dec
rcrb
clc
push
or
dec
sub
add
and
push
sbb
add
mov
fdivrs
adc
cld
push
adc
out
mov
mov
scas
mov
add
adc
and
ret
add
add
pop
xorl
out
imul
sub
sub
adc
xchg
xchg
xchg
rep
sbb
std
ja
xlat
inc
std
ds
push
loopne
mov
jle
sub
pop
shll
inc
add
ret
sahf
es
test
or
outsl
clc
nop
push
add
push
rorb
sahf
jbe
adc
lcall
aam
or
les
xor
mov
dec
lcall
imul
push
sbbb
cs
rolb
and
xor
add
test
push
pop
lods
push
xor
or
sahf
arpl
adc
or
imul
pop
and
push
shll
push
test
andb
loope
addb
lock
jle
or
orb
cmpb
shlb
mov
repnz
xor
and
add
add
out
adc
xor
sbb
rcrb
jg
or
dec
xor
or
std
jne
adc
outsb
jb
add
adc
loopne
cld
push
mov
cli
sub
daa
shrb
aam
mov
sbb
add
icebp
add
inc
int3
sahf
shlb
pop
adc
add
rolb
xor
jne
roll
jne
add
or
rorb
inc
sub
and
inc
push
nop
sub
push
and
pop
cmpl
dec
and
sbb
push
mov
and
in
movsb
in
mov
sbb
mov
je
or
jo
push
loope
es
mov
mov
ds
push
mov
inc
mov
or
outsb
subl
push
xor
pop
push
outsb
rolb
xchg
std
jno
push
shlb
jp
or
scas
decl
add
push
jb
mov
jle
push
sbbl
jmp
nop
scas
or
push
cmp
add
jg
or
and
add
adc
clc
jo
push
popf
popa
call
add
mov
mov
xchg
xor
push
dec
test
and
jo
and
outsb
aaa
adc
jae
decl
outsb
popf
and
lcall
dec
jne
and
add
add
pop
loopne
pop
in
fs
pushl
sbb
add
popf
lock
stos
mov
sub
add
pop
movsb
mov
lock
pusha
adc
sub
sbb
add
ja
fisubl
mov
mov
add
adc
fsubl
mov
and
repz
jbe
pop
xor
xor
mov
cwtl
fdivs
pop
inc
popf
xor
shrb
push
cs
jl
inc
pusha
repnz
ljmp
sbb
shrl
mov
or
adc
sub
lcall
fwait
inc
mov
xchg
pusha
and
or
add
push
and
repnz
push
push
push
ss
sbb
test
inc
add
mov
xchg
push
add
fiaddl
decl
ja
push
cmp
ljmp
lcall
push
enter
lahf
aad
ret
pushaw
test
jo
dec
popa
cmp
inc
add
or
or
add
and
fiadds
nop
or
mov
jne
fs
mov
jae
aas
xchg
pusha
jnp
incl
and
xchg
sbb
mov
push
test
sarb
inc
bound
xor
testb
xor
or
mov
add
dec
xchg
adc
jp
lods
je
adc
jmp
aam
jo
mov
jl
dec
push
inc
into
and
movsb
and
rorb
loopne
xor
inc
push
sub
cld
stos
stos
inc
scas
inc
adc
add
ficomps
rcr
inc
push
cmc
add
sbb
and
mov
mov
push
daa
mov
xorb
cmp
jne
aaa
cld
call
jne
loope
out
icebp
push
addb
nop
or
add
and
hlt
gs
mov
push
fisubl
or
sub
xorl
sbbl
lds
xchg
bound
pop
push
pop
push
pop
jbe
loop
push
pop
bound
fsub
xchg
push
inc
adc
jle
cli
call
push
sbb
scas
sbb
sbb
sbbb
add
add
repnz
cld
mov
sbb
fcompl
and
aaa
cli
add
shll
cmpsb
stos
push
pop
sahf
sub
inc
mov
sbb
push
test
push
lret
sub
add
out
push
daa
cld
ja
loop
push
rolb
les
mov
mov
and
mov
imul
jl
jl
xor
fsubl
aas
in
inc
data16
incb
pop
and
lcall
lcall
add
loope
mov
add
pop
push
inc
and
pop
test
or
les
sub
test
nop
add
add
or
inc
mov
add
mov
cmp
push
xchg
and
lcall
nop
rolb
sahf
fucomi
push
adcb
into
sbb
aam
add
stos
xchg
pop
xor
sbb
stos
add
aad
pop
adc
cmc
mov
or
sub
loop
mov
cmp
pop
lcall
cmc
rcrb
and
or
fiaddl
adc
and
sbbb
xchg
sbb
pop
mov
jle
xor
mov
lret
mov
cmp
inc
push
adc
icebp
cmp
ss
pop
cwtl
loopne
aaa
mov
mov
xchg
push
dec
fs
sub
sub
inc
jae
mov
xor
je
orl
movsl
es
xchg
in
fdivs
mov
push
mov
sahf
mov
adc
int3
inc
sbbb
xorb
fmull
xchg
sahf
aam
mov
in
bound
outsl
mov
or
xor
aaa
and
push
fisubl
scas
sahf
shrl
shl
push
out
push
adc
adc
and
cmp
add
xchg
or
or
add
add
push
mov
scas
sbb
or
sub
aam
add
and
mov
test
or
js
and
inc
push
pop
mov
ret
and
int3
lret
inc
testb
push
cmp
sbb
cmp
pop
lock
fadd
dec
out
xchg
orl
out
jg
jmp
shrb
xor
cwtl
pop
xchg
xorb
pusha
in
fldt
cld
inc
or
dec
add
mov
or
enter
add
or
add
int3
and
nop
incb
dec
or
mov
inc
jp
cmpsl
xchg
popa
xor
sbb
dec
andb
or
rorl
mov
lret
sbb
stos
ret
test
shlb
fs
cs
and
mov
movsl
cmp
cli
je
lods
repnz
addb
xchg
cs
inc
inc
movl
inc
xchg
or
push
rol
mov
add
xor
outsl
push
ljmp
or
scas
pop
sbb
and
cmpsb
decb
jmp
or
fdiv
mov
cld
mov
pop
repnz
ret
add
lock
orb
add
subb
and
sub
rolb
test
or
jle
pop
es
push
bound
out
mov
mov
decl
push
addb
jb
push
das
and
inc
rorb
or
int
inc
imul
call
jmp
ss
cmp
sbb
pop
push
shll
aam
mov
inc
les
add
or
imul
dec
jl
in
scas
xchg
lock
bound
add
je
dec
pusha
addr16
add
or
hlt
ljmp
loopne
stos
jg
or
loopne
loopne
mov
add
push
dec
and
imul
scas
xor
clc
adc
mov
test
aaa
es
xor
loopne
xchg
loop
inc
cmp
push
les
sbb
push
mov
mov
xor
insl
mov
pop
jle
arpl
dec
xchg
div
out
pop
icebp
cs
sahf
inc
push
xor
or
push
rcrb
add
cli
negb
sbb
push
dec
inc
pop
jno
push
movsl
scas
jb
sbbl
rolb
pop
popa
add
xchg
inc
lods
adcb
in
rolb
pop
mov
mov
lods
mov
xor
push
mov
lcall
lcall
mov
jl
and
popa
add
packuswb
fimull
shlb
and
loopne
jle
mov
cmp
cmp
mov
decl
bound
and
add
mov
push
movsb
mov
push
and
mov
mov
scas
mov
mov
add
nop
add
orb
jns
mov
into
cmp
xchg
sti
add
shll
dec
loope
and
jle
es
mov
lcall
push
or
push
aas
les
push
jle
ss
mov
hlt
pop
adc
push
and
push
ljmp
popf
inc
add
les
test
lock
add
adc
and
or
cld
xchg
jbe
add
push
aas
add
std
popf
xor
lods
or
or
test
sub
sub
xchg
ss
fsubs
xor
jl
adc
mov
mov
mov
ljmp
sarb
insb
loopne
std
mov
jbe
es
sbb
pop
decl
rol
push
mov
add
xorb
add
add
lcall
addb
dec
fcomps
popa
cmp
mov
inc
dec
cmpsb
lods
mov
sub
dec
jo
or
nop
add
pop
cld
mov
scas
repz
sbb
loop
mov
ss
inc
mov
sahf
rorb
inc
adc
mov
mov
lret
xor
add
add
push
push
inc
les
mov
aaa
or
xchg
cmpb
pop
xor
adc
jg
cmpl
popa
add
or
mov
rclb
mov
and
mov
add
and
roll
sbb
inc
or
or
sahf
sub
shr
das
loopne
clc
inc
cmp
or
inc
cld
cltd
sahf
and
incl
dec
mov
or
sub
cmp
add
dec
inc
or
mov
and
push
inc
arpl
neg
xor
jbe
sub
add
mov
and
es
sbbb
ja
out
add
adc
xor
or
icebp
jae
ja
decl
cmp
jmp
pusha
or
add
and
adc
pushw
mov
add
mov
jne
adc
mov
add
jo
sbb
push
xchg
inc
mov
pop
or
test
and
or
jg
mov
sahf
dec
inc
add
sahf
test
add
or
and
ja
mov
inc
loopne
sbb
sub
pusha
push
rolb
jb
add
and
out
mov
sbb
popa
nop
into
sbb
adc
cmc
jg
xchg
mov
pop
sahf
scas
clc
xor
add
imul
test
inc
cmp
and
addb
push
add
push
push
sub
dec
call
mov
cld
jb
inc
bnd
adc
cmp
add
loop
loope
dec
mov
mov
outsl
sbb
sub
cmp
sub
cmpsb
inc
mov
call
xor
les
or
adc
sub
and
or
sarb
fidivrl
mov
add
test
adc
pop
test
pop
mov
sub
pop
push
nop
and
repnz
clc
push
jne
subl
sub
fs
pusha
cmpsb
sbb
add
pop
inc
and
pop
push
cld
sub
scas
inc
test
mov
jo
add
aad
lret
pop
pop
shl
and
lcall
lahf
shll
inc
adc
mov
cmp
test
cli
mov
sti
jo
push
es
adc
cld
mov
nop
data16
add
push
loope
ja,pt
pusha
pop
push
pop
add
test
fists
add
pop
addb
loopne
sub
jno
and
pop
xor
sbb
mov
sti
inc
sbb
inc
divl
sar
add
insb
inc
shlb
mov
adc
dec
std
fistps
pop
or
or
adc
and
mov
or
or
inc
mov
nop
add
add
sbb
and
data16
fadds
adc
cmp
xor
icebp
cld
sub
addl
nop
sbb
push
out
ljmp
addb
inc
popa
add
inc
push
add
std
xor
push
jp
or
mov
sub
adc
xor
push
bound
add
xchg
testl
sub
mov
mov
dec
mov
push
jb
add
ja
scas
and
ja
cmpsb
and
mov
xor
sbb
jo
dec
add
rorb
sahf
adc
mov
addb
add
mov
mov
bnd
call
add
dec
xor
pop
sbb
loop
lea
std
push
adc
adc
xchg
enter
movsb
imulb
mov
xchg
out
lret
jbe
sbb
fisubrl
push
push
outsl
test
jnp
jo
es
mov
lock
jp
xor
dec
xchg
cmp
sbb
mov
inc
lock
orb
pop
mov
insb
bound
push
mov
cld
aaa
jb
push
mov
mov
rol
push
nop
pop
pop
inc
mov
push
sub
inc
addb
jg
pop
insl
cli
xor
cmc
mov
mov
push
jbe
add
mov
pop
xor
out
push
xchg
ss
lret
adc
xchg
icebp
outsl
adc
lods
or
adc
push
sbb
sbb
les
cwtl
rcll
push
adcl
xor
lock
sbb
sub
jg
jmp
xchg
and
mov
pop
les
mov
mov
add
pop
inc
adc
add
jp
or
jle
mov
lret
sbb
imul
ds
xor
test
xchg
js
dec
mov
dec
inc
push
push
rolb
imul
cs
in
mov
xchg
add
cli
jnp
and
outsl
sti
repnz
ljmp
outsb
add
or
add
shll
sub
xor
jo
inc
adcl
incl
xor
mov
xchg
push
add
pop
add
xor
push
mov
in
dec
dec
and
jae
push
dec
add
popa
clc
jp
ss
mov
lcall
fdivr
push
dec
out
push
xlat
xchg
cmc
inc
sbb
sti
loopne
sahf
lret
xchg
ja
bound
rolb
inc
data16
test
mov
cmc
mov
shlb
bound
add
dec
xchg
int
daa
pusha
adc
xrelease
int3
icebp
inc
and
mov
pop
je
push
dec
imul
inc
filds
incl
and
mov
add
cmc
xchg
mov
inc
xor
push
xchg
xor
xor
jae
stos
stos
adc
dec
cmpb
movsb
jb
sbb
ret
mov
sbb
xor
sbb
xor
fisubl
pushf
and
adc
das
shrb
shlb
sub
loop
fildll
nop
or
repz
or
pop
pop
add
incl
adcl
movsl
and
sub
call
mov
divl
cmp
fcmovbe
add
push
gs
into
mov
shll
sar
inc
adc
cltd
adcb
fists
loop
sub
ret
test
sbb
loopne
sti
icebp
dec
roll
sbb
push
mov
xor
int3
jno
inc
sahf
push
cs
in
push
or
mov
jp
loope
leave
rolb
jp
fdivrl
or
or
add
or
push
mov
xor
iret
es
aam
add
push
push
mov
fidivrl
addb
clc
adc
je
cmc
imul
mov
std
mov
add
mov
adc
fistps
inc
and
push
cmpsb
jae
nop
shrb
jecxz
pop
shlb
outsb
push
pushf
jle
addl
icebp
sbb
add
push
sbb
push
mov
mov
add
jo
pop
into
es
subb
or
jo
cmp
pop
es
es
xchg
adc
or
push
mov
sub
and
push
or
sti
call
int
and
ret
sbb
add
cmpsl
pop
mov
cs
mov
mov
paddsb
push
incl
stos
push
push
add
xchg
insb
add
xchg
adc
movsl
add
cs
pop
repnz
xor
lret
stos
int3
push
es
daa
sbb
add
fdivp
cmpsb
cmc
jg
push
add
jl
adc
call
adcb
orb
sub
sbb
into
jp
mov
loopne
fsubs
xor
in
ja
out
add
cmc
or
mov
add
pushl
andb
and
test
adcl
dec
jb
cld
xchg
loop
and
cmp
sbb
fwait
sbb
mov
push
clc
xor
or
icebp
jg
nop
add
inc
mov
jb
inc
fmuls
push
mov
and
ljmp
push
cmpsb
sahf
xchg
xorb
xlat
add
mov
repnz
mul
decl
pusha
or
rolb
pusha
and
incl
sub
sbbb
xchg
rol
sarb
xchg
sub
rclb
jge
lea
ljmp
or
cmp
rolb
jo
pusha
fcmovb
sbb
dec
inc
mov
xor
data16
xor
adc
stos
push
mov
sarb
and
xchg
xor
jo
ds
mov
inc
mov
sub
inc
test
add
adc
or
bound
inc
ret
int
add
lods
sbb
add
push
sbbb
mov
es
wrmsr
cs
mov
add
mov
mov
adc
rclb
pop
jg
lcall
or
popf
jb
rclb
lret
pusha
lods
sub
cwtl
clc
jg
test
repz
add
les
enter
or
fwait
outsb
mov
movsl
rep
inc
inc
lret
sbb
lods
filds
push
add
shlb
ds
orb
icebp
in
or
test
jge
test
push
inc
adc
adc
pusha
sub
in
pop
push
and
ret
daa
outsb
mov
sahf
ror
pop
adc
xor
add
push
mov
cs
mov
and
outsb
and
and
insb
xchg
adc
sahf
xchg
mov
add
lcall
aaa
enter
and
mov
cwtl
adc
mov
mov
lods
mov
cwtl
xorb
ret
sahf
push
sub
aam
std
or
cli
jb
add
and
pusha
xor
sbb
in
lcall
popa
add
ljmp
adc
dec
rclb
roll
sbbb
push
test
inc
dec
stc
roll
pop
lea
pop
js
adc
adc
or
aas
orb
mov
and
sahf
inc
jge
loope
pusha
fldl
inc
jge
inc
or
dec
clc
dec
push
add
adc
mov
cld
arpl
shrb
inc
add
or
call
push
xor
aaa
sahf
xor
lds
inc
mov
mov
loope
push
mov
mov
sarl
ret
decl
dec
into
testl
jno
shlb
ret
jno
inc
cli
test
roll
rolb
pop
rolb
cmp
xor
push
push
dec
test
decl
mov
push
into
hlt
loope
cmpsl
testl
std
loopne
daa
mov
out
cmp
orb
cmp
and
sbb
mov
xchg
xorl
in
dec
adc
es
pop
mov
loopne
and
mov
and
mov
sahf
pop
sahf
mov
outsb
adc
jno
and
std
mov
and
das
sub
inc
and
sub
pop
push
fnsave
int
add
es
into
repz
ljmp
cmpsb
bound
sub
mulb
movsl
adc
dec
xchg
and
or
pushl
adc
inc
pop
outsb
add
pop
mov
ret
inc
sub
xor
insl
inc
xchg
mov
add
dec
adc
pop
jle
cli
lods
subb
sahf
js
sbbb
outsl
push
push
adc
js
jne
sub
nop
adc
lods
outsl
ret
sub
mov
dec
loop
gs
dec
cs
lcall
add
jne
subb
push
cld
mov
and
inc
cs
mov
xor
push
dec
addl
bound
call
enter
and
and
es
ljmp
ret
sbb
cmp
cmp
outsb
jne
sub
mov
sbb
adc
mov
xchg
fidivl
sbb
xor
cmp
add
jecxz
fsubs
out
jo
xor
pop
ljmp
lret
sahf
and
xor
mov
icebp
arpl
xchg
xor
int3
pop
jns
jno
xor
mov
sahf
mov
sub
push
mov
shrb
jo
add
lds
mov
sarb
cld
add
sti
ja
ss
add
jecxz
sub
pop
mov
movsl
push
dec
cmpsb
add
push
ret
and
inc
cmpsl
add
xchg
xor
repnz
add
ljmp
push
push
and
jle
fs
fsts
and
push
rorl
and
inc
push
add
and
dec
xchg
ret
xchg
icebp
add
add
icebp
add
std
add
stos
and
pushf
inc
xor
sub
into
std
popa
add
add
mov
incl
rclb
into
popa
jo
cmp
add
add
into
into
clc
roll
cltd
ret
jle
inc
push
inc
adc
inc
shlb
or
scas
xchg
jo
lock
mov
notb
loop
shll
loopne
jno
push
or
jg
shrb
push
push
mov
push
push
pop
or
lahf
fildll
aad
nop
movsb
sub
mov
xor
rclb
bnd
nop
add
inc
inc
cmp
add
add
sti
sub
mov
fmul
rorb
call
sbb
nop
push
xchg
or
xor
push
movsl
insb
and
arpl
cmp
pop
push
push
mov
add
push
nop
inc
sub
sti
mov
icebp
pop
push
adc
loopne
and
sbb
lock
or
lcall
fisubs
add
daa
sti
sti
je
daa
negb
mov
int
loope
mov
or
mov
andb
fisubs
les
add
jo
ja
out
push
push
repnz
dec
dec
loop
cmp
add
adc
adc
dec
mov
jle
mov
stos
ds
shlb
ljmp
test
mov
stos
dec
xchg
adc
xchg
fidivs
or
adc
sbb
add
cwtl
xor
add
and
cs
mov
pop
inc
mov
jbe
pusha
mov
not
sbb
or
sahf
and
inc
fildll
lret
sbb
jnp
ret
jecxz
clc
loope
sub
inc
cmp
add
adc
das
xor
jne
jo
xor
inc
or
sbb
ja
jo
shr
sti
bound
inc
add
stos
dec
in
pop
test
push
inc
jne
jle
sub
inc
mov
inc
push
jnp
inc
jl
inc
and
fdivrl
add
rclb
cld
jmp
clc
push
sub
dec
xchg
cltd
pop
ficoml
test
mov
jae
fiadds
sti
mov
mov
into
and
or
or
loopne
clc
jg
divb
inc
or
into
out
adc
into
test
push
push
addr16
mov
or
into
aas
frstor
sahf
orl
or
cmpsb
xor
lret
xor
repz
mov
push
ret
mov
out
or
sub
lret
xor
xor
fcoml
shrb
fidivl
mov
sub
pop
mov
cld
mov
mov
xor
inc
or
nop
test
fs
mov
xor
xchg
jne
out
jns
mov
repnz
lret
or
pandn
dec
loopne
sahf
xchg
mov
mov
loopne
decb
adc
push
movsb
ljmp
jle
xor
mulb
es
daa
and
rcrb
mov
xor
push
insb
cmc
sbbb
and
jl
mov
adc
notb
sbb
stos
sbb
or
xor
xor
cli
mov
fcoml
sahf
add
adc
jecxz
cld
les
mov
incb
adc
les
pop
lock
jg
push
punpcklbw
add
add
lret
mov
lcall
test
cmpsb
out
push
add
movl
xchg
jne
inc
pop
call
xchg
push
scas
mov
cmc
decl
adc
or
enter
pop
push
mov
ljmp
loopne
loopne
pop
repnz
lds
sahf
inc
nop
xor
int3
pop
ljmp
cmp
adc
jno
je
sahf
pop
push
cmp
mov
pushl
xchg
mov
into
push
jo
enter
and
sti
and
ja
pop
into
lcall
decl
xchg
inc
mov
inc
sahf
arpl
add
out
mov
jno
adc
pop
test
roll
popl
cmp
and
sbb
pop
adc
jns
sub
cli
mov
or
mov
xchg
mov
and
xor
or
ja
cmp
lea
mov
sub
xchg
inc
push
and
ljmp
lods
cmp
dec
pop
cmp
inc
bound
and
pop
and
add
mov
dec
enter
pushf
inc
jne
inc
or
test
fimull
cld
mov
add
enter
mov
lcall
adc
lret
sahf
rolb
or
ret
clc
mov
dec
add
inc
pop
stos
or
or
push
pop
aad
sbb
popa
rorb
imull
cmc
and
push
subb
push
es
outsb
cmp
add
xchg
cld
jo
xor
inc
out
inc
insb
mov
dec
insl
or
or
and
inc
faddl
hlt
aam
add
or
das
pusha
sub
sbb
or
sahf
jmp
add
jo
std
jbe
fsubs
add
addb
sbb
jp
jge
adc
sbb
fsubs
add
mov
loopne
cld
xor
mov
mov
push
mov
sbb
pop
js
pop
inc
cmpsb
inc
push
sub
cmp
jne
test
xchg
ss
xchg
ja
mov
xchg
in
jl
shll
add
dec
test
jbe
add
adc
ljmp
sahf
push
adc
adc
outsb
js
sub
add
mov
or
xor
add
push
add
add
movb
dec
ja
and
adcb
xor
lea
xor
call
into
ljmp
lret
rcrb
subb
hlt
nopl
pop
movsl
test
inc
enter
pop
into
add
sub
out
lahf
mov
subb
addb
shr
sub
into
jmp
adc
cld
mov
loopne
sbb
call
into
into
jmp
sub
fidivs
stos
into
or
push
add
outsl
jmp
adc
lods
sub
outsb
adc
addl
das
ret
clc
movb
or
add
je
cmp
jle
ss
xchg
test
test
inc
inc
add
and
gs
push
xchg
jle
clc
cs
push
pusha
adc
rcrb
cwtl
sbb
scas
push
pusha
shlb
rorb
enter
add
in
adc
rolb
add
or
add
inc
xor
decl
push
or
xor
add
lods
cmpb
sbb
pop
sbb
or
mov
and
dec
loopne
sti
inc
loop
add
clc
call
and
divl
dec
andb
inc
dec
faddp
lds
out
adc
inc
test
mov
dec
and
and
mov
and
push
adc
in
pop
or
jl
mov
test
adc
in
dec
or
aam
xchg
mov
adc
add
loopne
push
sub
push
mov
pusha
sbb
push
sub
into
pop
inc
fildll
push
inc
lock
rorb
into
sub
or
into
lods
jns
aaa
pushl
iret
or
into
test
daa
add
out
ss
or
into
int
std
jmp
ret
pop
loop
xchg
frstor
and
loopne
int
ds
jle
in
fistpl
xchg
ljmp
mov
shlb
into
pop
int
incl
add
ror
add
or
pop
hlt
pop
fwait
dec
adc
into
cld
jle
cs
fmul
mov
dec
cmpsl
jb
into
mov
pop
rcrb
into
push
and
push
ret
xadd
fisttpl
repz
test
fwait
add
cltd
inc
adc
into
clc
call
repz
jmp
enter
pop
mov
cmp
inc
lahf
cmp
into
test
adc
data16
add
and
pop
push
int3
lahf
jg
dec
mov
add
into
mov
fistps
inc
inc
cmp
pop
mov
mov
scas
into
scas
xorb
lods
into
les
mov
loop
push
adc
test
jae
sbb
mov
sbb
dec
inc
xchg
mov
nop
sarw
push
lds
pushf
mov
repz
adc
xchg
stc
inc
jo
jg
insb
pop
pop
push
into
ljmp
mov
pop
mov
dec
aas
sarl
push
mov
into
std
stc
jb
stc
repz
xorb
in
into
insb
sbb
mov
xchg
add
mov
cmp
jl
mov
jb
ret
sub
rcll
into
call
aaa
dec
xor
pop
into
dec
inc
jg
insb
jne
mov
adc
and
or
ret
push
or
lcall
push
or
dec
sahf
popa
add
push
iret
dec
bound
push
iret
cmpsl
and
dec
push
add
stc
out
ljmp
iret
das
loopne
pop
iret
out
pop
iret
les
pop
iret
inc
loopne
addb
es
pop
and
xchg
pusha
mov
int3
outsl
mov
iret
leave
mov
mov
add
mov
popf
add
add
mov
adc
into
cmp
and
aaa
cld
add
loopne
xor
sub
loop
ds
xor
jno
into
loop
in
outsl
push
cmp
into
mov
push
es
inc
aam
lahf
pusha
add
or
sti
into
out
orl
outsb
push
and
orb
sbb
inc
add
sub
sub
lds
adc
push
mov
std
dec
jo
sbb
inc
jle
push
adc
fdivl
adc
inc
push
into
dec
sbb
ffree
inc
and
aaa
mov
sbb
arpl
sbb
mov
xor
xchg
push
fsts
inc
in
icebp
scas
jp
and
mov
loopne
jbe
pop
xor
mov
movsb
lock
mov
mov
cmc
orb
cli
rorb
dec
xlat
pusha
outsl
nop
ja
lods
add
or
addl
push
and
jg
cltd
mov
jge
mov
xchg
sbbb
out
mov
scas
xchg
adc
add
test
andl
out
bound
adc
cmpb
decl
sahf
sbbb
ja
rorb
xor
lock
and
sbb
subl
dec
adc
std
test
sti
jecxz
shrb
and
and
add
mov
push
push
sbbb
sub
and
insb
es
nop
hlt
lock
lahf
jns
outsb
add
sub
jnp
pop
scas
lock
jecxz
jmp
and
add
std
pop
jmp
pusha
or
mov
rclb
jle
and
iret
inc
jp
jbe
mov
rorb
sahf
dec
jo
xlat
mov
mov
and
add
inc
adc
mov
add
shrl
push
push
xchg
or
nop
add
aam
fsts
push
xchg
and
loopne
jne
adcb
sbb
or
sar
add
sahf
push
xor
xor
mov
dec
adcb
and
xchg
cmp
xchg
out
mov
cwtl
push
jp
sbb
je
or
add
sbb
call
push
push
mov
adc
test
mov
or
fiaddl
adcl
testl
sbb
std
inc
or
hlt
push
inc
adc
add
movsl
lods
ficompl
std
mov
mov
out
push
hlt
jg
ja
sbb
sbb
sub
test
adcb
adc
aam
push
mov
lock
lock
inc
mov
jmp
xor
sbb
inc
jbe
inc
xor
push
jae
jl
inc
fimull
jl
mov
sbb
mov
xor
sahf
or
mov
aam
xorb
xor
mov
pop
mov
rolb
xchg
sbb
push
add
and
int3
scas
loopne
into
fisttps
add
sbb
pusha
push
and
nop
jno
push
hlt
or
add
into
fcoml
and
jg
add
add
idivb
mov
add
push
add
nop
lock
aam
fisubrl
add
add
xchg
dec
inc
lcall
sti
jg
sub
xchg
into
shlb
negb
mov
cmp
imul
add
and
rcll
fdivr
sub
test
popa
addl
test
sti
pushl
mov
addl
test
test
sahf
push
mov
ss
xchg
popf
inc
add
lcall
cs
std
pop
addl
adc
add
xchg
dec
fstl
xorb
aaa
mov
cmp
jg
mov
cmp
nop
ret
fld
add
pusha
push
inc
mov
mov
test
xor
hlt
out
mov
or
popa
mov
bound
in
fsubl
xchg
sub
mov
inc
imul
sbb
js
xor
or
adc
dec
mov
orb
popa
out
outsl
mov
jno
cmp
loope
and
enter
xor
sbb
mov
xor
rcrl
mov
mov
mov
ss
dec
loopne
mov
fildll
inc
jecxz
mov
les
mov
ds
add
jle
jbe
mov
repz
mov
sub
ja
shlb
das
sub
std
add
mov
hlt
xchg
cmp
jge
ret
lock
add
pop
inc
sub
sub
jle
sahf
mov
sub
decb
inc
adc
push
mov
push
and
dec
or
add
inc
ss
fsubrs
add
mov
scas
mov
jmp
sbb
push
and
mov
sub
adc
adc
fisttps
arpl
mov
fwait
lods
and
xor
daa
jb
icebp
and
jg
call
add
sarb
mov
mov
subl
sti
nop
cmp
pop
push
xor
jne
mov
cld
inc
cmp
sbbl
incl
sbbb
jp
or
enter
jo
repz
mov
jno
sub
scas
cli
mov
andb
sub
inc
std
jmp
and
bound
push
inc
xor
sub
sub
call
adc
adc
add
mov
jnp
mov
ss
rcrb
ljmp
cmp
rcrb
ljmp
pusha
mov
std
cmpsb
mov
jae
jne
sbb
test
pop
or
add
mov
lcall
add
push
xor
pop
decl
xor
adc
mov
or
or
xchg
mov
push
or
popa
mov
pusha
add
or
lcall
adc
rclb
sahf
and
inc
pop
xlat
and
sub
test
sbb
fbld
xchg
add
push
push
outsl
ss
and
cwtl
repnz
incl
adc
and
and
outsl
mov
jl
cmc
jb
jns
je
mov
push
out
jge
mov
shrb
push
lods
out
adcb
or
fdivrl
dec
bound
orl
std
imul
dec
adcb
je
int3
inc
add
nop
fnstcw
ret
fwait
sub
jo
add
pop
mov
dec
dec
cmp
lret
mov
cmpsb
push
and
hlt
es
insl
imul
add
and
mov
jbe
jge
stos
mov
repnz
lods
sub
add
adc
sti
xor
test
js
jno
pushl
xchg
adc
pop
pop
repnz
test
test
jnp
sub
add
adc
push
and
jp
push
mov
pop
mov
fcomps
dec
stos
inc
xor
and
aaa
test
push
jp
adcb
into
jle
movsl
test
inc
dec
and
pop
pusha
ficoml
push
lock
pusha
add
rclb
mov
push
add
xor
jge
push
lret
xchg
sahf
loopnew
sbb
pop
or
jge
adc
fadds
mov
rolb
adc
addb
mov
mov
sahf
daa
lea
neg
pop
fidivrl
testl
or
adcb
xchg
in
jbe
cld
jb
rorb
push
or
ret
loope
or
dec
orb
nop
sbb
subb
lock
adc
pop
andb
dec
andb
lret
cwtl
shl
xor
ret
or
cmc
das
mov
push
add
pop
sbbb
and
mov
sahf
adc
sub
lock
sahf
enter
jb
je
pop
test
ds
inc
adc
stos
sbb
sub
std
mov
xor
adc
clc
outsb
ja
push
mov
sbbl
aam
add
jg
and
push
xor
add
add
inc
inc
adc
pop
bound
jnp
mov
or
and
mov
add
push
into
adc
add
mov
inc
gs
xorb
aas
sbb
dec
shlb
shrb
lret
mov
bound
push
popf
outsl
inc
and
add
sahf
or
adc
jl
sbb
dec
psubsb
or
xchg
mov
test
cmp
scas
sbb
sub
add
and
ljmp
sub
jge
add
cmp
je,pt
lods
stos
mov
daa
dec
stc
les
sti
incl
push
push
dec
add
and
pop
shlb
scas
rclb
call
add
roll
push
xor
lock
mov
jnp
and
sbbl
fiadds
dec
inc
mov
jle
dec
xchg
xorl
and
pop
add
xlat
inc
dec
into
sbbb
subl
cli
inc
enter
sar
mov
roll
add
rolb
push
sbb
pushl
push
mov
mov
addr16
sahf
iret
dec
test
xor
mov
xchg
decb
je
lds
xor
ret
cs
ret
dec
pop
inc
push
pushf
inc
hlt
outsb
mov
nop
es
pop
jno
mov
outsb
out
fldenv
add
and
pop
mov
xor
add
adc
outsl
cmp
or
add
mov
dec
stos
inc
inc
adc
inc
xorb
cli
sahf
or
mov
cld
or
mov
pop
push
add
pop
add
sbb
push
mov
or
and
push
add
cld
test
mov
or
inc
cmpsb
add
fwait
jl
loopne
xor
mov
adc
add
es
pop
push
push
les
hlt
xchg
fisubrs
stos
test
xchg
adc
add
sahf
pusha
mov
inc
sub
jg
inc
test
add
cli
and
xlat
ja
adc
mov
rcrb
bound
push
jle
inc
dec
add
fadds
cmp
add
add
movsl
dec
js
xchg
inc
add
jnp
mov
outsb
loope
jecxz
dec
mov
xor
outsb
mov
fbld
loopne
test
scas
inc
inc
call
andl
cs
and
pusha
into
push
sbb
xlat
and
add
and
add
dec
xchg
test
int3
outsb
jle
add
pop
mov
sahf
addl
popf
add
inc
push
add
and
mov
xchg
fwait
push
mov
push
add
inc
loop
pop
or
mov
xor
sti
sbbb
pop
std
mov
add
pop
mov
call
es
xor
adc
add
jns
and
orb
sahf
mov
cmp
mov
mov
push
lcall
push
pop
arpl
sbb
fimull
outsb
pop
dec
add
pop
pop
nop
mov
lahf
fsub
sbb
dec
jbe
movsl
cs
mov
xchg
and
jnp
mov
mov
or
aam
or
add
pop
fsts
out
dec
add
js
push
push
es
add
mov
add
push
mov
pop
cmc
pop
add
adc
jbe
ror
bound
insl
mov
pop
sub
add
mov
int3
cmp
add
dec
popf
jp
sub
and
push
loop
rorb
cli
pop
sbb
fisttps
andl
and
imul
sub
aaa
loopne
mov
pop
cs
aaa
or
call
mov
add
outsb
sbb
popf
and
sarb
or
adc
dec
sbb
insb
and
pusha
mov
push
add
lods
test
outsl
cli
stos
test
or
add
push
sbb
inc
pusha
leave
je
decb
adc
cmc
jae
sahf
pop
mov
data16
stos
incl
fisttps
es
loopne
mov
adc
mov
and
cmp
gs
push
lock
bound
int
adc
cli
push
dec
jmp
cmp
and
xchg
fdivp
sbb
enter
or
sbb
inc
dec
or
addb
out
test
out
out
xor
cmp
adc
fistps
push
and
adc
or
sbb
add
fbstp
add
cmp
dec
dec
sbb
scas
xor
es
mov
dec
lock
mov
and
xor
inc
imull
mov
adcb
adc
push
cmp
jp
outsb
and
jg
push
sbb
lcall
xchg
ss
je
cmp
in
mov
mov
add
pop
jmp
xor
push
aam
loop
ret
sub
pop
jl
test
xor
mov
add
inc
sbb
loop
inc
repnz
cmp
cli
mov
and
rol
cltd
shrb
mov
shl
add
sahf
icebp
fimuls
es
cmpsb
mov
faddl
sub
and
cli
outsl
sahf
push
adc
jo
bound
push
adc
mov
or
push
jmp
cmovo
loop
rolb
dec
std
or
push
dec
jae
mov
shll
mov
mov
push
mov
add
add
cli
push
add
mov
mov
imul
pop
mov
xor
jp
push
dec
mov
sbb
adc
loopne
bnd
outsl
mov
icebp
sub
icebp
dec
bound
lods
xor
adc
add
sbb
pop
adcb
push
cmpb
scas
push
mov
inc
push
es
add
cmp
subb
cld
rclb
insl
inc
adc
dec
lret
xor
ja
pop
std
inc
std
inc
ljmp
and
mov
mov
andb
dec
sub
sub
adc
scas
mov
inc
daa
dec
pop
jo
sahf
cltd
pusha
push
in
cmpsb
push
mov
or
pushf
push
cs
xor
popa
pop
sbb
popa
mov
dec
adcl
les
xor
rorb
data16
pushf
pop
push
sub
cli
and
or
sub
inc
xor
scas
jb
and
cli
inc
push
ja
inc
mov
pop
sub
push
lcall
sub
aas
fiadds
inc
push
hlt
adc
inc
mov
cmp
ljmp
cmc
mov
xor
lods
decl
mov
sbb
dec
add
call
popf
fwait
bound
xchg
jae
sub
or
cli
lock
adc
pusha
clc
clc
mov
cmp
push
or
or
and
pusha
outsl
dec
inc
in
dec
push
aam
or
repnz
jmp
shlb
jp
mov
decl
shlb
sub
lret
or
leave
hlt
pushl
adc
cmp
nop
add
xchg
add
outsb
push
and
cmp
nop
and
adc
hlt
outsl
fildll
add
push
pop
out
jne
adc
and
ljmp
rolb
cli
mov
outsl
jo
sbb
mov
push
loop
xor
cmp
add
inc
mov
sbb
outsb
incb
jo
js
or
add
inc
insl
push
in
inc
mov
inc
add
mov
neg
mov
lock
cmp
adc
and
inc
xor
and
arpl
inc
adc
jg
add
mov
test
add
add
add
dec
sub
rcr
add
lods
loope
or
aaa
js
jp
test
inc
jne
xor
outsb
jecxz
lcall
fidivs
sbb
adc
or
cmp
mov
push
into
ja
std
data16
jle
cmp
jle
or
pop
adc
pop
sahf
cli
push
push
stos
jbe
mov
pusha
mov
std
sub
push
or
sub
push
xchg
nop
push
lock
andb
push
inc
push
adc
clc
clc
outsl
push
and
cmp
lock
pusha
or
adc
pop
lock
adc
out
adc
aas
mov
shll
inc
lock
mov
add
sbb
shll
sbb
and
add
nop
xchg
ljmp
stos
xchg
add
mov
adc
les
aam
popa
daa
cld
sbb
mov
adc
cld
lods
jne
jne
movsl
adc
and
repz
shlb
inc
shlb
sbb
bound
jmp
push
jb
out
or
lock
sti
scas
fdivs
roll
jnp
or
mov
je
fidivrs
roll
psrlq
test
imul
das
inc
sub
push
inc
fldenv
sbb
std
pusha
subl
push
add
pop
adc
lds
ret
xor
mov
pusha
cli
aaa
inc
int3
jno
and
add
loop
jns
mov
outsl
clc
mov
and
lods
add
push
sub
or
jbe
in
mov
add
mov
inc
pusha
push
add
shll
in
pushl
aaa
inc
fs
inc
and
movsb
add
shrl
in
mov
push
add
add
xlat
sbb
repnz
adc
or
add
mov
fistpl
adc
data16
test
insl
or
pop
loopne
jle
adc
stos
and
jb
mov
add
call
nop
movlps
cmp
sti
sti
mov
xor
xchg
add
jb
add
xor
add
inc
pop
jmp
iret
lret
and
add
mov
xchg
and
scas
pop
imul
adc
xor
aad
nop
add
mov
gs
popl
mov
adc
mov
mov
daa
pop
add
mov
xor
inc
pop
adc
es
mull
sbb
xorl
mov
fiaddl
xchg
es
and
or
or
or
mov
mov
bound
mov
add
jle
or
fnstsw
rcrb
xor
dec
into
mov
mov
sbb
mov
sahf
inc
or
pop
adc
mov
das
sahf
push
ret
adc
mov
and
int
dec
or
cmp
push
or
sbb
aam
inc
fsubs
mov
cmpb
and
pop
and
mov
enter
pusha
pop
je
add
sub
pop
stos
cli
pop
clc
add
inc
mov
sub
sbb
add
push
add
scas
sub
add
lcall
aas
pusha
pop
loopne
or
push
addl
mov
mov
xchg
loop
in
popa
shlb
xor
and
lea
xor
or
stos
mov
push
mov
add
adc
push
testb
mov
divb
dec
rcrb
loop
int3
add
xor
sub
loop
pusha
xor
add
outsb
test
xchg
pop
loopne
jecxz
or
jmp
cmpb
pop
or
adcb
jmp
add
adc
aad
sub
fneni(8087
sub
push
push
pusha
inc
gs
mov
test
fstps
add
jbe
mov
push
mov
push
cmpb
or
and
movsb
jl
add
aas
jbe
sahf
aas
jbe
fs
sub
addb
rclb
ljmp
adc
cli
push
cld
add
push
add
mov
sub
add
adc
mov
data16
scas
cmpsb
jp
push
dec
xchg
inc
adc
clc
mov
and
inc
sub
jns
fwait
mov
adc
add
mov
add
cli
fwait
and
add
sar
fwait
std
dec
and
sahf
inc
daa
mov
cmp
rcrb
ret
mov
shlb
mov
and
sub
and
adc
adc
push
lods
outsl
insl
imul
adc
and
cmp
jle
jae
xchg
mov
adc
fcomip
push
mov
adc
inc
leave
sbbb
movl
call
mov
add
and
xor
add
xor
bound
or
or
lods
adc
jg
jp
or
xor
and
ss
sub
xor
inc
call
decl
mov
lods
and
or
or
lods
fstpl
and
mov
adcb
add
lahf
fld
ja
jo
xorb
dec
xchg
stc
jmp
add
pop
mov
bound
pushl
dec
clc
mov
ret
and
inc
mov
pop
pop
adc
rclb
jmp
and
push
js
mov
sbb
arpl
movsl
ss
scas
inc
lock
icebp
in
in
stos
fsubs
popf
ja
ja
in
mov
push
or
push
mov
cmp
fcomip
outsl
mov
inc
push
sub
inc
xchg
push
adc
js
jbe
add
adc
xchg
pop
and
movsb
or
scas
pushl
sbb
or
sub
fnsave
sub
filds
and
jnp
jmp
jl
andl
in
pusha
add
add
push
inc
mov
push
jo
add
dec
faddp
inc
sbb
repnz
push
and
nop
ret
jl
add
push
dec
push
lods
lret
movsl
pop
std
mov
and
mov
aaa
std
dec
loope
mov
mov
fs
add
sbbb
pop
lcall
sub
xchg
shrb
popf
sbbb
jp
adc
ljmp
outsb
push
cli
pop
cmc
ljmp
bound
sub
sub
or
pop
push
jbe
scas
adc
mov
inc
pop
aaa
subb
cwtl
dec
sub
or
inc
inc
mov
dec
stc
pusha
aaa
jbe
outsb
in
push
jg
std
jbe
rorb
jbe
jmp
jg
push
xor
mov
xor
addr16
or
and
push
push
lret
fidivl
test
jl
add
rorl
cld
aaa
fisubl
or
jo
inc
add
xchg
jle
add
cmpsb
add
in
cld
sub
fdivrs
insb
icebp
add
adc
mov
or
add
shrb
pop
or
add
loopne
dec
mov
jle
arpl
test
imul
mov
mov
mov
add
ds
and
inc
incl
pusha
jl
jo
or
pop
inc
lods
shrl
jp
movsb
les
jle
sub
jne
clc
scas
cmp
jle
andl
or
and
jo
push
mov
inc
xchg
dec
add
inc
adc
sbb
subb
cmpsb
dec
cld
fnstsw
jae
push
lret
mov
mov
jge
pop
pop
str
data16
and
add
ja
xor
add
icebp
push
cld
add
xor
dec
mov
mov
adc
xor
jbe
bound
ss
mov
push
int3
std
scas
cs
lds
push
adc
jp
adc
xor
push
mov
addw
mov
sbb
shrl
jle
sbb
ljmp
fcoml
ljmp
call
sub
mov
sub
adc
add
aaa
fdivrs
mov
and
mov
jmp
pop
icebp
jae
mov
and
push
sub
jl
push
add
insl
mov
add
fistl
push
rorl
and
mov
jnp
pop
ja
mov
mov
add
roll
mov
fdivp
fs
scas
adc
mov
sbb
pop
mov
and
rcrb
pusha
xor
sbb
leave
push
cmp
xor
mov
je
mov
cwtl
sub
mov
xchg
or
mov
int
push
ror
push
sarb
clc
pop
popa
push
inc
bound
bound
inc
pop
std
adc
inc
incl
ret
hlt
sbb
push
and
icebp
sbb
roll
add
cmc
mov
fcmovnbe
add
inc
sbb
inc
push
add
insl
xor
pop
sti
add
outsb
cmp
rcrb
lods
test
xor
dec
enter
cld
sub
sahf
add
mov
push
push
dec
mov
lcall
lods
test
pop
adc
mov
push
outsb
xor
adc
adc
sub
jg
loopne
int
xor
idiv
dec
pop
mov
xchg
mov
cwtl
clc
mov
push
xchg
stos
mov
mov
adc
dec
add
cmpsb
xor
jg
pop
add
add
and
addb
dec
cmpsb
inc
cmpsb
decl
dec
add
adc
orb
jp
xorl
cmpsl
hlt
mov
push
cmp
lock
cmpsb
inc
pop
cmc
or
pop
movsl
add
testb
push
lods
fwait
mov
sbb
push
lock
push
pop
lods
fildl
lods
inc
je
pop
adc
mov
add
addl
add
aaa
cmp
xchg
or
add
jae
nop
mov
add
cmp
scas
orb
nop
inc
sahf
cmp
pushl
mov
ss
sbb
repz
jno
sbbb
outsl
mov
or
jecxz
or
pop
pusha
mov
orb
bndldx
mov
add
mov
pop
or
shrb
pop
push
push
shrb
add
lock
decl
push
xchg
jae
xor
push
rorb
xchg
int3
xchg
cmpb
fisubrl
adc
cli
mov
mov
insb
jo
stos
outsb
rol
push
fsubrs
addb
outsb
add
sbb
sti
or
insl
ficompl
mov
test
jle
test
and
jbe
xor
jmp
mov
xor
sbb
mov
lods
xchg
add
jb
push
adcl
out
aad
jmp
jle
lods
adc
arpl
lods
test
andb
jbe
pusha
es
inc
adc
cli
and
xchg
mov
inc
sub
rorl
sub
sti
cmp
movsb
or
jle
nop
push
and
mov
jo
dec
mov
mov
add
decb
pop
and
inc
and
push
xor
std
adc
movsl
dec
sub
inc
pusha
sbb
sub
ss
sub
xorb
xchg
cli
sub
add
cmpsb
xchg
movsl
aas
mov
and
add
add
stos
and
push
lods
rcll
add
xor
xchg
add
xorb
mov
pop
mov
hlt
push
js
loopne
cmp
inc
pusha
push
mov
std
cmp
scas
stos
lods
pop
movsb
push
mov
jbe
andl
adc
xor
sbb
loopne
jg
sbb
jle
cmpsl
je
add
mov
add
push
cmp
adcb
push
movsb
or
adc
mov
leave
data16
mov
inc
jle
dec
dec
push
inc
add
and
add
mov
xorl
push
pop
or
add
mov
es
rorl
pop
xor
xor
and
pop
shlb
sbb
pop
fisttps
scas
push
mov
je
ljmp
lods
mov
testb
sbb
or
sub
std
in
push
adc
add
call
scas
jmp
dec
add
jp
js
jmp
adc
push
je
pop
inc
sbb
aas
xchg
fmuls
xor
andb
daa
inc
xchg
loop
shll
andb
fdivs
adc
ss
and
into
les
xor
mov
in
repnz
stc
mov
pop
cmp
data16
cmc
push
inc
mov
mov
xor
movsl
mov
inc
daa
push
imul
scas
jmp
nop
push
sbb
or
mov
mov
pop
add
cltd
mov
inc
adc
movsl
es
pushf
ret
push
add
pop
add
dec
sub
mov
add
or
mov
add
inc
das
sbb
and
push
push
loopne
andb
inc
sar
sub
test
ss
or
rcrl
loopne
pop
test
add
push
inc
andl
mov
add
push
and
lcall
test
and
sbb
hlt
mov
add
inc
sahf
inc
sbb
scas
push
lret
jb
in
jnp
add
add
push
pop
xor
push
inc
outsl
dec
clc
fs
inc
js
addl
aas
add
xchg
push
sub
imul
repz
add
pop
icebp
pop
mov
jb
sbb
jb
xor
mov
adc
xor
add
ss
clc
mov
add
scas
test
cmpsb
addl
test
cmp
lods
mov
sbb
inc
orl
jg
adc
insb
sti
in
add
sub
lods
jle
sti
dec
arpl
pop
incb
pushf
adc
pop
cmp
icebp
fmull
bound
inc
addl
lock
outsb
test
cmc
and
into
ljmp
sbbb
xlat
inc
push
out
add
sub
add
dec
pusha
dec
add
pop
fmull
add
rclb
inc
push
sub
add
xorb
lods
jb
fdivl
sbbb
push
mov
das
pop
add
dec
sbbb
and
jge
or
clc
sbb
insb
testb
dec
ljmp
jnp
or
cwtl
jb
mov
roll
test
pop
pushl
push
push
outsl
mov
outsb
add
cmpsb
cmc
adc
mov
dec
xchg
add
andl
loopne
mov
aam
mov
data16
or
data16
outsb
jne
pop
adc
inc
and
sahf
scas
mov
or
jo
mov
pop
shlb
push
xor
outsb
inc
mov
adc
mov
add
icebp
aas
imul
adc
inc
or
mov
scas
xor
cmp
add
inc
mov
fnstsw
push
xchg
pop
add
add
rorb
roll
xor
pop
jl
es
add
inc
sbb
push
jb
mov
push
ljmp
insb
notl
dec
push
mov
das
cmpsl
pushf
or
scas
push
push
push
sub
popa
stos
jmp
clc
inc
add
add
jg
add
out
xor
cwtl
shrl
subl
ret
or
push
or
and
addr16
mov
adc
dec
clc
out
xchg
test
add
je
daa
mov
in
add
outsb
dec
add
jbe
sbb
pushf
outsl
clc
sub
rolb
es
shrb
add
push
adcl
add
sti
ds
jge
sbb
cmpsb
sub
mov
xor
dec
call
mov
cmpsb
push
loop
add
and
sbb
fisubrs
lds
pusha
dec
cmpsb
icebp
sbb
dec
inc
decl
out
ss
push
add
out
mov
cmpsb
das
add
xor
testb
mov
jae
jne
bound
lahf
pop
add
sub
add
fsubrs
cld
fwait
sub
or
xor
xchg
pop
and
negl
dec
xchg
inc
cmp
out
dec
mov
inc
ret
mov
aaa
nop
push
sahf
and
add
adc
dec
push
mov
in
jno
adc
inc
sbb
bound
repnz
sbb
ljmp
mov
icebp
pusha
push
fidivs
mov
and
add
adc
adc
adc
push
sub
jg
mov
repnz
bound
push
jmp
xchg
adc
cmp
xchg
sbb
pop
mov
icebp
mov
sbb
add
pop
and
bound
inc
adcl
pop
sbb
push
test
push
mov
movsl
xor
or
cmpb
or
fdivrp
jg
mulb
pop
pop
pusha
add
add
int
xchg
and
mov
repnz
push
jle
sub
outsl
mov
sbbl
pop
outsb
clc
add
dec
data16
xor
adc
imul
sbb
mov
and
inc
adc
mov
es
jno
loop
ja
fwait
rclb
add
or
push
xchg
pop
cmp
stos
add
outsl
stos
pop
adc
test
sub
imul
push
loopne
push
jle
stos
popa
hlt
and
test
xlat
out
adc
roll
add
outsl
popf
jae
sbb
nop
xchg
jp
mov
sub
cwtl
and
sbb
sbb
sbb
xor
xchg
sbb
out
jo
mov
bound
popa
bound
js
les
lahf
pop
adcb
cs
popa
std
jg
jge
rolw
cli
inc
movsl
add
out
push
pusha
and
and
jp
ret
mov
and
bound
nop
fwait
push
fsubl
outsb
pusha
insb
loope
cmpsb
add
or
add
or
aaa
push
xchg
mov
sahf
mov
fisttps
bound
inc
rolb
adc
mov
inc
les
ret
mov
pop
and
dec
nop
dec
jp
push
push
sub
or
xor
icebp
add
adc
lods
pop
mov
add
subl
bound
testb
sbb
loopne
arpl
fstpt
inc
inc
or
addb
stc
rcrl
ljmp
mov
add
rcrb
add
sub
mov
pop
js
stc
and
fbld
popf
lock
out
dec
adc
mov
test
adc
xchg
xchg
mov
mov
cmp
loopne
jg
mov
outsb
adc
and
inc
add
arpl
pop
cwtl
adc
add
mov
sub
sub
jl
loop
ret
sub
ret
push
or
cs
data16
or
shlb
add
push
and
cmp
pop
loopne
dec
xorl
mov
inc
fdivrl
insb
inc
imul
and
imul
jle
pusha
inc
sbb
ja
les
and
push
inc
inc
sub
inc
call
mov
sahf
push
repz
insb
xor
add
push
pop
jmp
add
shrb
sub
add
adc
and
xor
lods
xchg
ljmp
xchg
jne
jae
outsl
cmc
push
xor
fwait
or
xor
inc
adc
das
mov
push
sub
add
lods
add
or
mov
jns
sahf
add
mov
jo
push
jp
or
popa
ljmp
mov
jmp
jle
aas
sahf
mov
add
bound
sbb
cld
sub
inc
sbb
and
arpl
pop
xchg
in
bound
test
adc
jg
jb
or
enter
add
movsl
sub
xor
sub
jp
pusha
mov
add
std
aaa
xchg
movsb
inc
inc
lods
and
sti
and
push
push
push
decl
cmp
aas
add
rolb
jg
xchg
inc
cld
mov
movsl
fistps
add
push
mov
mov
or
pop
jbe
in
jo
pusha
das
clc
push
push
and
ss
lcall
xchg
sub
mov
out
pop
add
popf
xor
push
call
sbb
adcb
dec
jmp
mov
sbb
dec
jnp
cmpsb
repnz
dec
add
xor
int
or
insb
bound
rcrl
subb
add
push
pop
push
icebp
mov
and
jo
mov
addb
ja
jb
sub
pop
das
xchg
xor
lcall
mov
add
dec
movsl
stc
inc
lret
xor
ret
lock
rcrl
ljmp
sub
xor
or
call
pop
mov
xor
sbb
scas
icebp
push
std
or
add
dec
adc
or
xor
sbb
fidivs
pop
mov
sbb
xor
insb
data16
cs
imul
push
shll
jno
push
xor
xchg
js
pop
mov
fcoml
mov
insb
leave
adc
sub
mov
shlb
cs
jg
int3
mov
sbb
out
xorb
xor
negb
or
ret
dec
roll
lods
nop
stos
icebp
test
mov
or
cmp
lock
mov
sbbl
xchg
xor
or
add
xor
adc
adcl
mov
jb
inc
pop
mov
psllw
push
add
xchg
stos
xchg
aad
mov
mov
mov
sbbb
jge
js
loopne
jg
jle
ficompl
mov
push
or
rcr
scas
insl
stos
lock
hlt
out
add
sbb
adc
cmovge
loope
sbb
xchg
push
inc
fisttpll
mov
pop
jo
push
push
mov
or
call
fstps
jg
jo
test
lock
inc
test
loopne
push
out
pop
js
insl
gs
push
add
cmp
icebp
adc
loopne
add
insb
in
mov
inc
adc
stos
sub
sub
adc
push
cli
in
js
jo
cmc
repz
sub
push
sub
cs
push
fwait
pop
inc
sub
lea
jo
in
adc
loope
jne
and
repz
jp
push
cs
pusha
jno
ja
inc
js
lock
push
fdivl
dec
jl
dec
adc
inc
xchg
insb
dec
jbe
xor
xor
xor
pusha
fcmovbe
pusha
sub
sbbb
or
adc
inc
js
lods
arpl
cltd
lcall
add
or
add
jmp
lcall
pop
cmp
push
hlt
xor
xor
dec
mov
add
cmpsb
insl
lcall
push
push
jns
cmpsb
jns
outsb
bound
cmpsl
leave
xor
jle
jb
or
insl
dec
or
lcall
xchg
xchg
push
sbb
jns
mov
jns
cmpsb
lret
mov
fwait
lret
mov
clc
data16
sarl
addr16
mov
jp
testb
nop
insb
dec
xor
jnp
jg
dec
sbb
stos
push
imul
das
or
add
sbb
adcb
add
outsl
decl
outsb
out
orb
pop
mov
repnz
daa
push
push
pop
add
testb
fs
sbb
jb
add
iret
cmpb
xchg
xchg
add
sahf
addb
adcb
mov
jbe
push
inc
and
push
addl
xchg
aad
push
add
mov
sub
loop
cli
aad
add
loope
cmpsb
imul
sarb
pop
or
sbb
push
adc
sahf
add
sbb
and
cmp
fbstp
pop
ds
scas
rorb
xor
add
push
push
dec
add
shll
imul
lcall
shrb
sahf
pop
lcall
sarb
xchg
rcrl
xchg
xchg
stos
scas
mov
cmpsb
mov
rorb
sahf
cmpsb
mov
rol
outsl
lcall
out
rorb
mov
dec
sarb
sbb
test
xor
or
add
sbb
xor
sbb
mov
cmpsb
sbb
xor
mov
inc
jo
call
loopne
stc
andb
cld
rolb
hlt
insl
lods
jns
pop
sarb
add
and
add
sbb
cmpsl
mov
jle
lahf
jns
fisubs
xorl
out
xchg
sbb
push
inc
scas
rolb
cmpsl
rolb
xor
sar
push
fs
ret
aaa
int
adc
fcmovnu
roll
push
jmp
jecxz
out
sti
repz
cmp
repz
or
rcrl
loopne
mov
int3
add
sahf
cmpsb
imul
aam
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
lahf
cmpsb
jo
mov
mov
negb
xchg
test
jns
cmpsb
lods
mov
dec
adc
push
dec
loopne
mov
rol
inc
rolb
mov
mov
stos
inc
inc
stos
inc
loop
push
inc
inc
stos
inc
inc
stos
gs
movl
rcrl
adc
sbb
push
clc
pusha
add
in
pusha
add
lcall
sbb
cmp
enter
in
data16
out
icebp
jne
loopne
jecxz
in
and
sbb
stos
in
stos
ret
in
jecxz
in
cmp
inc
cwtl
dec
pushf
xor
xor
pusha
and
lods
xor
xor
jb
icebp
jp
ror
shll
les
lcall
aam
in
imul
imul
imul
out
shll
and
jo
jno
mov
lock
dec
xor
outsl
stos
jo
dec
repz
pop
sbb
push
xor
fs
jo
daa
cmp
je
cmpsb
adc
test
nop
pusha
add
add
stos
movsl
cmpsl
imul
rcll
mov
stos
mov
cmp
sbb
loopne
mov
add
and
mov
pusha
mov
push
xor
sahf
add
stos
cmp
and
adc
add
push
insb
imul
arpl
repz
or
dec
jae
ja
lods
jns
lahf
add
dec
fwait
lahf
sbb
xchg
stos
scas
mov
repz
xchg
lret
iret
xor
shll
fcmovnu
rcl
mov
pop
stc
xor
xor
dec
loopne
sbb
add
jo
xchg
or
inc
add
repnz
je,pt
mov
inc
sti
jb
jne
mov
jb
add
add
dec
pushl
xor
sub
cmc
mov
jo
mov
add
ja
mov
test
inc
xchg
jl
jb
adc
je
enter
cmpb
cli
ja
es
stos
mov
les
mov
add
xchg
pusha
push
mov
in
push
or
ret
pop
add
xchg
push
mov
divb
and
jae
jl
mov
jae
push
jb
mov
push
ds
adc
insl
adc
push
lret
and
jp
sub
jo
pop
shlb
ret
inc
xor
add
cwtl
jg
mov
add
mov
insb
cmp
mov
add
fidivs
add
popa
add
inc
add
xchg
adc
icebp
add
push
mov
notb
push
or
mov
nop
lcall
outsb
fistpll
mov
mov
mov
or
or
shll
lock
mov
jae
cmp
roll
ja
add
or
add
or
data16
or
pushf
xchg
clc
loope
add
mov
leave
add
adcl
notb
push
lock
dec
adc
or
mov
cmp
fmull
push
insl
add
data16
xor
rcll
dec
loop
cmp
jg
in
sbb
adc
add
push
and
and
roll
ds
clc
in
push
gs
sbb
sahf
rclb
push
sahf
out
mov
jae
jno
adc
fbld
push
add
sbb
fwait
loopne
adc
add
and
in
sbb
mov
cmc
sub
lock
pop
arpl
mov
jg
pop
mov
or
les
arpl
add
adc
adc
test
jecxz
inc
or
ja
pusha
nop
and
sbb
pop
xchg
sahf
xor
enter
pop
dec
je
add
sub
adc
shlb
rclb
cld
or
mov
jno
outsb
mov
rcll
pushf
ror
jmp
fdivs
pop
add
dec
sbb
adc
sbb
add
jo
add
mov
sbb
mov
popa
pop
loop
hlt
push
inc
outsl
jnp
sub
pusha
jae
push
mov
insb
or
sub
cs
add
addb
cmc
xchg
mov
add
jb
fs
jbe
sahf
aam
push
data16
add
es
je
hlt
add
inc
mov
sub
sbb
add
sahf
sub
adc
ds
ds
mov
hlt
mov
add
adc
cmp
push
outsb
popa
add
outsl
xchg
pop
sahf
push
sahf
jo
add
add
inc
add
pop
cld
insl
and
bound
jne
jbe
add
stc
outsl
outsl
andb
cmp
add
je
add
aad
fidivs
adcl
jmp
or
andb
ja
pop
push
gs
dec
mov
xor
add
jl
jne
fisttps
or
sbb
aaa
dec
adc
add
stos
or
cmp
and
enter
pop
sti
or
in
enter
or
and
push
mov
mov
or
mov
bound
jmp
insb
movsl
imul
and
add
jg
pushl
andb
bound
roll
test
cmp
decb
inc
push
sbb
or
push
add
clc
sub
add
sahf
cmp
in
jle
test
shll
addb
adc
sahf
stos
push
mov
add
adc
add
mov
int3
int3
leave
sub
xorb
sahf
jle
shll
orl
imulb
or
push
add
inc
xor
push
das
outsb
add
call
mov
nop
pushf
inc
xor
fildl
orb
jb
sahf
imul
fadds
pop
push
outsl
scas
scas
or
orl
fdivs
cmpb
push
ret
sbb
push
mov
mov
sbb
lds
dec
sahf
push
rcll
inc
rclb
pop
sti
scas
cs
cmc
inc
fldt
xchg
ficompl
push
mov
sbb
sub
fwait
ja
insb
imul
mov
add
pop
push
add
outsl
cmpsb
lock
add
jo
inc
lahf
ljmp
pop
sub
std
subb
shrb
cmpsl
xchg
jmp
movsb
je
pushf
dec
rolb
fs
mov
dec
add
add
fadds
jl
flds
jo
jns
popf
pusha
pop
or
dec
pop
ja
or
sbb
adc
sti
dec
and
and
pop
out
dec
inc
or
scas
mov
out
jl
rolb
inc
inc
or
mov
std
pop
dec
rclb
push
dec
fildl
push
dec
jne
mov
inc
push
sbb
sbb
inc
push
js
dec
cmpsb
jno
lds
ds
push
dec
repnz
add
inc
and
adc
add
aam
mov
and
jp
add
outsl
and
test
bound
ss
leave
xor
shrl
jp
mov
or
xchg
mov
sbbl
mov
push
popa
ja
or
jno
adc
cmp
dec
xchg
pusha
or
and
mov
pushf
mov
push
adc
cmp
push
add
add
adc
add
fcomip
mov
cmc
stos
mov
inc
lea
inc
add
or
dec
pop
jnp
inc
add
and
mov
adc
orb
ja
add
mov
xchg
sub
adc
adc
lcall
or
adc
roll
and
push
jb
xchg
nop
rolb
or
cld
push
xor
aaa
cwtl
mulb
jecxz
inc
jmp
arpl
or
outsl
fisubl
insl
loope
add
and
and
andb
jle
mov
fs
adc
lss
ret
or
pushl
sahf
jns
push
add
arpl
push
jnp
daa
inc
test
cmp
nop
test
cmc
ja
prefetch
push
sbb
mov
cmpsb
or
sbb
roll
xchg
add
stos
adc
adc
adc
mov
fcompl
sub
mov
gs
adc
push
nop
push
insb
mov
in
outsl
adcb
fiaddl
push
mov
add
gs
jg
loopne
aad
pop
xor
jp
xchg
mov
adc
call
js
mov
mov
inc
sbb
jns
push
mov
cld
idivb
sahf
aad
sub
mov
xor
and
jl
fistpl
xor
push
dec
fisubrs
sub
mov
cmp
jbe
sbb
sbb
js
lods
add
add
mov
mov
dec
cmp
in
adc
pop
fldt
fiaddl
push
add
add
push
inc
loop
lods
imul
or
sub
test
mov
lcall
lcall
into
mov
ljmp
mov
adc
psubusb
outsb
jp
dec
mov
xor
stos
add
xor
jecxz,pt
mov
sbb
pop
rcrb
movsb
sbb
pop
push
mov
dec
inc
cmp
hlt
xor
pop
stos
fdivs
in
mov
add
or
fs
jnp
mov
lock
add
lock
out
pop
out
jecxz
sbb
push
xchg
xor
sbb
rcrb
pop
addl
push
inc
push
or
insl
push
scas
add
pop
imul
ss
test
jmp
jno
mov
pop
notl
pusha
push
adc
dec
dec
js
cmp
cmpb
push
jo
mov
rorb
les
sub
adc
cmp
mov
daa
sbb
repnz
or
ret
dec
mov
push
lock
cmc
rorb
push
xchg
push
jl
cwtl
sub
sub
sub
cmp
and
shl
pop
push
sbb
push
hlt
or
js
inc
sbb
cmpsl
sbb
xchg
data16
add
pxor
sbb
xlat
xchg
inc
push
or
out
mov
mov
shll
dec
pop
push
mov
sahf
insb
movsb
push
popa
ret
xlat
xorb
add
xor
outsb
adc
sbb
sub
mov
mov
shlb
xorb
divb
add
push
shlb
push
cmp
xlat
loop
ss
xor
sbb
movsl
pop
mov
push
fwait
mov
xchg
data16
aaa
jge
jno
mov
cmovg
xor
movb
js
sahf
aam
or
push
daa
pop
pop
lods
sbb
mov
bound
mov
add
adc
xor
adcl
adcl
xor
ja
jo
jne
sbb
leave
hlt
jecxz
xchg
xor
adc
mov
or
jo
pop
add
inc
or
cmpsb
xor
push
pushf
in
daa
sbb
push
push
cwtl
push
dec
jb
xchg
mov
push
daa
cmp
dec
xor
mov
push
xchg
pushf
in
sbb
adc
call
mov
and
xor
inc
xor
pop
mov
pushf
push
inc
xor
loopne
psubd
push
lock
push
push
repnz
and
mov
and
mov
idivb
push
and
sbbb
insl
in
clc
xchg
mov
push
jo
add
push
roll
pop
pop
xchg
sbb
loopne
adc
or
adc
and
cmc
in
or
adc
add
mov
sub
push
data16
and
xor
sysenter
lock
push
add
adc
pop
pop
adc
and
pop
fildll
and
sbb
sbb
sbb
sub
call
add
pusha
and
inc
sbb
add
scas
lods
je
stos
push
and
add
call
push
sbb
add
inc
add
adc
clc
pushl
rolb
adc
adc
adc
inc
sbb
in
push
adc
adc
sahf
add
es
mov
push
mov
sti
pop
add
lret
pop
syscall
pop
sbb
add
outsl
and
subl
mov
jge
fildll
add
lea
subl
sbbl
fildll
sub
ds
incb
jnp
in
or
adc
jo
mov
add
sar
nop
xor
orb
fistps
cmp
pop
sbb
sbb
xorl
add
or
add
sbb
test
push
test
jno
pop
mov
rcrb
sbbl
clc
mov
add
inc
add
sbb
pop
adc
push
mov
lock
pop
loope
push
fnstenv
pop
mov
jne
sbb
add
je
les
cmp
rcrb
inc
cmpsb
imulb
pop
mov
jg
and
push
cmp
sbb
enter
xor
dec
xor
xorb
inc
pusha
jg
mov
ret
outsl
xchg
sarl
and
sub
fbstp
mov
mov
and
cmp
into
das
add
mov
out
inc
dec
cwtl
sub
sbb
mov
cld
enter
shlb
adc
rorl
sub
jne
das
sbb
push
add
scas
and
xor
sti
scas
inc
in
mov
adc
fwait
data16
shlb
lds
lcall
sarb
ret
lcall
add
dec
inc
pop
xor
add
push
in
stos
sbb
xchg
sub
lahf
lds
push
xchg
decl
or
inc
xchg
inc
add
add
mov
in
lcall
rorb
aaa
inc
sub
jbe
mov
dec
jecxz
pushl
and
push
jbe
dec
lcall
push
aaa
xor
add
mov
xor
inc
sbb
inc
dec
cltd
int3
mov
enter
sbb
push
test
lods
xor
sbb
sbb
or
dec
and
mov
or
jns
cli
push
test
gs
jle
and
sbb
sbb
xor
pop
bound
mov
mov
adcb
or
cmp
cmp
cmpsb
and
or
clc
mov
or
jne
pop
jecxz
loope
mov
repnz
arpl
outsb
imul
je
xchg
and
jmp
add
mov
js
jbe
mov
mov
cli
cmp
push
jbe
adc
loope
add
mov
mov
inc
push
jl
loope
fcomps
cwtl
adc
jmp
and
or
and
xchg
mov
out
cltd
pop
cmc
inc
dec
xor
pop
add
cmp
push
push
lret
pusha
jle
xor
xchg
out
add
or
loopne
fs
fisubrs
and
add
xor
inc
aaa
insb
xlat
fwait
insl
sub
and
and
loop
sub
jl
add
subb
ret
fildll
sbb
xchg
add
call
adc
jbe
orb
sub
and
call
jno
pop
int3
adc
pop
loopne
and
les
adcb
bound
xor
pop
add
js
adc
fisttps
cmp
daa
add
loopne
enter
push
mov
sbb
movsb
add
sbb
testb
and
add
add
push
adc
ret
sub
rol
loopne
add
mov
negb
push
bound
inc
call
bound
loope
rolb
lcall
xchg
loopne
stc
and
push
loopne
add
and
sahf
xchg
popa
add
push
addr16
andl
jo
andl
repnz
ret
add
cmc
pop
or
push
sub
mov
mov
sbb
sbb
clc
cmp
add
cld
push
mov
in
jne
cmp
adc
add
mov
call
dec
sbb
add
fs
pusha
add
sub
push
mov
sub
subb
and
dec
cmp
lods
dec
sarb
or
cmp
mov
fwait
xor
in
pop
bound
jo
adc
inc
sbb
hlt
add
add
mov
mov
je
adc
mov
push
inc
push
mov
aad
nop
sub
dec
push
sti
mov
add
push
add
add
je
test
xor
hlt
or
dec
andb
nop
push
loopne
push
xchg
add
je
pusha
testb
cmp
lock
push
add
ljmp
cli
dec
cmp
push
pop
jne
or
or
inc
adc
mov
dec
add
push
shlb
jo
mov
aam
adc
ret
add
and
pop
pushf
push
fbld
roll
push
inc
xor
das
xor
sub
sbb
je
sbb
into
push
fwait
rcrb
jo
adc
nop
rclb
fidivrl
daa
lods
push
and
and
xor
or
sbb
add
pushf
add
icebp
ja
fcoms
jb
add
sbb
loopne
das
test
insb
cld
pop
roll
fadds
jle
add
push
data16
call
outsb
dec
shl
imul
dec
cmp
cwtl
orl
push
or
xchg
add
mov
add
add
roll
jae
inc
dec
das
popa
fdivs
add
icebp
jg
movsb
decl
add
jle
ret
inc
jae
icebp
pop
ja
sub
xchg
cmp
xchg
push
pusha
adc
sbb
cmp
push
adc
pop
shlb
cli
in
push
push
cmp
xor
lcall
cmp
add
jno
mov
mov
xorl
or
xor
imull
jle
and
in
cmp
push
cmpsb
inc
xor
aas
adc
or
notb
xor
test
sbb
test
cmp
adc
test
pop
les
or
add
loopne
mov
mov
add
adc
pop
jo
cmp
nop
jns
xor
adc
adc
add
adc
adc
ljmpw
sbb
ret
seta
xor
push
or
xor
xor
cmp
mov
cmp
xor
adc
lock
add
or
or
cs
dec
sbb
in
adc
lods
xor
shl
jg
adc
stos
push
outsl
dec
adc
cmp
mov
sub
xor
mov
add
pop
add
xchg
or
incl
mov
pop
add
adc
cmp
xor
xor
push
nop
add
scas
mov
sahf
js
lods
adc
lods
lcall
xor
pop
xchg
cmp
push
repnz
aas
data16
xchg
add
aaa
lcall
mov
sub
pop
add
mov
push
adc
xor
lods
jno
pop
sbb
ja
mov
mov
lret
aas
jo
mov
add
outsl
dec
and
fs
adc
mov
rclb
sub
nop
ret
push
adc
adcb
add
clc
outsl
jp
mov
push
inc
sbb
jl
test
ja
or
fnstenv
fadds
add
add
mov
and
add
aas
xor
adc
sbb
sub
and
adc
das
mov
fcoms
push
xchg
or
xorl
scas
lcall
pop
adc
or
ds
jo
add
adc
pop
add
stos
nop
decb
aam
jo
mov
adc
xor
mov
pop
adc
pop
adc
xchg
shr
jg,pn
pushl
sub
ret
adc
and
mov
and
ja
jmp
jno
sbbb
daa
mov
xor
nop
lcall
jns
add
or
xor
adc
sbbl
popa
pusha
je
mov
mov
call
inc
xor
adc
pop
sub
je
fadd
ljmp
nop
pushf
loope
jo
dec
rcll
aam
xchg
outsl
add
rolb
adc
push
sbb
adc
fiaddl
add
push
mov
dec
rcl
or
push
mov
mov
push
or
js
je
and
jl
fdiv
mov
xor
mov
sub
orl
add
ss
push
add
lods
imul
mov
and
xchg
add
inc
push
test
adc
les
nop
mov
adc
mov
in
or
push
xor
xchg
insb
add
add
xor
hlt
andb
cmp
push
adc
test
sbb
sbb
and
mov
clc
inc
ljmp
jae
insl
jbe
inc
mov
icebp
dec
out
adc
ficoml
adc
cmp
or
out
loop
lock
sbb
xor
aaa
es
inc
add
das
jg
sbb
ja
add
and
hlt
mov
clc
mov
add
jbe
add
adc
sub
xor
aas
inc
add
adc
inc
jp
add
movsb
xor
add
jg
outsb
call
xor
push
add
ret
and
inc
add
scas
push
test
sbb
and
adc
add
and
test
test
inc
or
xor
in
inc
inc
adc
adc
adc
jmp
scas
cs
inc
adcb
xchg
mov
mov
repnz
mov
and
cmp
add
push
push
bound
aas
jl
icebp
ljmp
cmp
push
inc
push
jle
add
and
inc
pop
sti
inc
add
mov
jge
mov
je
dec
inc
adc
mov
or
lds
rclb
cmp
fbld
clc
mov
mov
inc
shrb
sbbl
xchg
shlb
adc
cs
add
inc
xor
int3
jo
rolb
sbb
or
stos
in
enter
push
cmp
cwtl
aaa
shrl
xor
mov
add
clc
mov
inc
add
std
pop
data16
xlat
sub
data16
das
clc
popa
add
pushf
and
inc
xchg
sbb
or
movsl
movsb
adc
and
fistpll
out
shrb
add
shrl
scas
rorb
loopne
sub
add
fisubs
repnz
adc
loopne
cmp
sbb
adc
sbb
cmp
sbb
cs
pop
mov
orb
xor
inc
inc
stos
and
mov
xor
aas
shlb
add
jbe
adc
movsb
scas
xchg
add
adc
pusha
pop
add
loopne
adc
loopne
mov
loopne
arpl
out
lock
mov
test
or
and
pop
mov
add
adc
xchg
or
adc
and
pusha
xchg
popa
xchg
cmp
js
xor
arpl
push
mov
cmp
pop
pop
outsb
adc
popa
sbb
scas
add
push
nop
and
inc
lock
ljmp
sbb
test
add
loope
aas
sbb
imul
popa
add
sub
gs
lcall
push
movsb
cmp
rcrb
adc
je
jl
pop
loopne
das
fbld
xor
in
and
loopne
fs
ret
inc
xchg
ljmp
popa
ja
xor
jecxz,pn
inc
or
jg
or
add
inc
add
add
add
sbb
push
dec
pop
mov
enter
outsb
pop
pusha
mov
sbb
push
loope
lods
and
loopne
pop
mov
adc
outsl
push
inc
cltd
in
add
and
ss
push
test
inc
ret
pop
insb
add
test
sahf
push
push
les
mov
scas
add
and
addr16
xchg
aaa
and
pop
and
xor
popa
dec
lods
fsubrs
out
lods
mov
stos
sbb
pop
es
pushf
je
cmpsl
or
sbb
and
pusha
fisttps
sub
lea
mov
dec
lret
test
loopne,pt
jl
cmpsb
add
fistpl
cld
test
and
sub
sbb
or
sbb
adc
inc
call
sbb
enter
sub
aaa
jbe
mov
pusha
jg
push
andb
or
or
es
add
test
adc
shlb
loop
bnd
add
mov
add
mov
add
aas
cmp
xor
add
xor
and
and
lret
xor
mov
dec
adc
and
push
pop
andb
xor
jecxz
das
xor
mov
add
sub
pop
push
lods
mov
add
sbb
jg
adc
aas
sbb
jle
mov
dec
add
jle
xor
add
cld
add
inc
sti
outsl
lods
mov
inc
xchg
les
adcl
sti
add
insb
ss
repz
gs
xor
inc
mov
cmp
push
fs
cmp
add
pushl
inc
test
sti
pop
sar
add
daa
push
loope
out
insl
add
test
lods
sbb
push
lea
imul
push
mov
adc
imul
and
or
in
add
fnstenv
push
test
adc
push
xor
or
std
notb
int
in
adc
or
push
sub
xchg
inc
divl
push
or
push
sbb
xor
xchg
inc
inc
call
ljmp
inc
push
cmp
add
dec
ret
dec
mov
clc
out
adc
dec
xchg
lcall
clc
sub
jp
bound
outsl
out
adc
inc
dec
dec
dec
xor
dec
and
dec
adc
dec
add
mov
repnz
dec
loop
ljmp
dec
lret
mov
dec
mov
lcall
jp
bound
dec
mov
pop
dec
inc
dec
dec
dec
dec
cmp
dec
sub
sbb
dec
or
dec
cli
dec
loop
ljmp
lret
mov
dec
mov
lcall
jp
bound
dec
mov
pop
dec
inc
dec
dec
dec
dec
cmp
dec
sub
sbb
dec
or
dec
cli
dec
loop
ljmp
lret
mov
dec
mov
orb
orb
orb
push
aas
and
and
jb
bound
inc
aaa
jg
mov
adc
inc
inc
dec
inc
xor
inc
and
inc
adc
inc
add
aaa
jg
inc
or
cli
inc
loop
ljmp
lret
cld
in
aaa
jg
inc
mov
lcall
inc
jp
bound
inc
int
inc
pop
inc
inc
inc
dec
inc
inc
cmp
inc
sub
sbb
inc
int
cld
int
inc
inc
cli
inc
loop
ljmp
lret
cld
int
cld
mov
inc
inc
lcall
jp
bound
int
inc
pop
inc
inc
inc
dec
inc
inc
cmp
sub
inc
add
cld
int
inc
inc
cli
inc
loop
ljmp
lret
cld
int
cld
mov
inc
inc
lcall
jp
bound
inc
int
inc
pop
inc
inc
inc
dec
inc
inc
cmp
inc
sub
sbb
inc
int
cld
int
inc
inc
cli
inc
loop
ljmp
lret
dec
mov
inc
inc
lcall
jp
bound
inc
aas
adc
notb
pop
inc
add
xor
mov
out
and
inc
mov
inc
xchg
inc
lcall
inc
mov
inc
jp
bound
inc
push
inc
pop
inc
inc
inc
dec
inc
xor
inc
and
inc
adc
fildll
adc
fimull
ret
dec
lret
dec
dec
mov
mov
dec
mov
push
sahf
pop
cmp
or
incl
inc
xlat
inc
lds
add
inc
in
mov
inc
xchg
dec
mov
dec
fmull
pop
dec
inc
dec
and
testb
inc
inc
mov
lret
pop
dec
mov
mov
lcall
in
out
inc
je
jg
inc
lret
dec
cs
push
dec
sti
inc
dec
daa
dec
dec
cwtl
dec
pop
dec
add
jbe
ja
inc
jmp
mov
incb
dec
inc
push
cld
jg
inc
lods
dec
test
popf
dec
cltd
dec
test
dec
lea
dec
jne
jno
jge
jns
jg
and
popa
dec
insl
dec
imul
dec
pop
dec
inc
decl
dec
dec
dec
dec
dec
xor
dec
cmp
dec
and
dec
sub
dec
adc
dec
sbb
incl
dec
or
dec
icebp
dec
std
dec
stc
dec
in
loope
in
dec
jmp
dec
fisttpll
dec
lds
dec
int
leave
dec
mov
mov
mov
dec
mov
ljmp
dec
xchg
dec
popf
dec
cltd
dec
test
dec
lea
xchg
cmc
dec
icebp
dec
std
dec
stc
dec
in
loope
in
dec
jmp
dec
fisttpll
lds
int
leave
dec
mov
mov
mov
mov
dec
lods
dec
test
dec
popf
dec
cltd
dec
test
lea
jne
jno
jge
push
jns
gs
popa
dec
insl
dec
imul
dec
pop
dec
inc
dec
inc
dec
xchg
inc
add
push
add
jg
mov
sti
inc
imul
add
add
inc
jl
push
inc
pop
inc
pushl
inc
movl
inc
jae
jge
pop
inc
pop
inc
ss
xor
inc
push
inc
hlt
inc
arpl
std
jmp
inc
flds
inc
out
inc
sub
dec
mov
cmp
mov
adc
mov
inc
pushf
inc
jno
js
popa
dec
push
dec
pop
mov
dec
cmp
dec
or
dec
loopne
dec
aad
fimull
dec
mov
dec
pop
dec
xor
ret
movd
outsb
cmovg
data16
dec
loop
incl
dec
insl
dec
aaa
dec
or
pop
dec
loop
les
dec
xchg
out
adc
pusha
sahf
dec
sub
cld
dec
dec
mov
cmc
decl
dec
mov
dec
insl
dec
dec
dec
ss
and
jbe
std
dec
jecxz
adc
mov
xchg
dec
pusha
dec
pop
dec
cs
sbb
dec
testl
cmc
adc
out
fdivrl
icebp
inc
out
aam
fiadds
push
stos
call
inc
dec
inc
sub
inc
movl
adc
cmp
aam
mov
inc
and
inc
cld
inc
push
mov
inc
jg
adc
inc
jbe
incl
inc
mov
dec
inc
mov
jmp
push
inc
and
sbb
inc
filds
inc
add
push
decl
addb
es
sub
dec
ret
dec
lods
lret
pop
dec
lahf
adc
fisttps
dec
fs
pop
dec
adc
pop
pop
das
cli
xchg
inc
pusha
dec
add
dec
dec
int
inc
cli
pop
push
dec
lret
mov
or
dec
lahf
dec
lea
mov
add
dec
cmovp
dec
rorb
dec
movsl
pop
inc
dec
adc
repz
clc
push
push
loopne
dec
rorb
mov
dec
push
pop
icebp
decl
dec
sbb
dec
in
dec
lods
dec
fwait
dec
insl
dec
push
dec
dec
imul
dec
adc
push
xchg
testb
inc
sbb
inc
imul
inc
out
rclb
aad
jmp
mov
faddl
inc
insb
test
inc
lock
aad
inc
cli
inc
out
inc
roll
cmp
inc
leave
inc
mov
mov
xchg
cli
stos
inc
xchg
inc
pushf
inc
test
jnp
fs
push
push
inc
pop
cli
ljmp
mov
dec
inc
xor
inc
es
call
inc
cwtl
inc
test
call
lcall
inc
addr16
pusha
inc
push
inc
movsl
inc
scas
inc
xchg
fildll
iret
inc
enter
test
decl
std
dec
jecxz
mov
xor
dec
xchg
testb
dec
cmp
ret
lcall
cmpsl
dec
xchg
dec
mov
push
dec
sub
dec
js
push
dec
sbb
or
push
iret
and
cmp
dec
aas
or
lcall
mov
dec
imul
das
xchg
or
cli
jg
inc
int
xchg
inc
incb
adc
sub
lcall
dec
lods
dec
add
add
out
dec
jb
mov
dec
ret
pop
test
dec
in
mov
dec
xor
jbe
jne
mov
test
inc
sahf
popa
inc
push
inc
xor
out
sarb
inc
add
add
inc
into
inc
mov
and
fadds
add
inc
nop
inc
js
and
xchg
inc
pushf
icebp
ja
rolb
cmp
sub
call
dec
xchg
dec
cwtl
dec
pop
cmpsl
dec
scas
dec
cmp
adc
jle
arpl
sub
ja
jbe
inc
outsl
push
inc
inc
push
inc
jg
loopne
inc
out
stos
push
inc
xchg
inc
or
inc
mov
add
cld
inc
lods
inc
test
ret
rcll
mov
push
inc
xor
pop
inc
sbb
inc
ja
push
dec
xor
lock
and
ret
lcall
dec
ds
faddl
test
mov
dec
outsb
push
dec
lock
lods
hlt
dec
rorl
dec
mov
mov
mov
jmp
in
js
push
push
js
inc
xor
inc
sbb
cmpsl
jmp
hlt
inc
in
or
inc
test
jo
inc
mov
cmp
decl
push
sub
inc
sbb
inc
add
or
or
incl
std
inc
in
inc
rolb
movsl
inc
cmp
cmp
incl
lcall
push
inc
mov
inc
sbb
inc
xchg
jbe
sbb
std
cmp
dec
sbb
jle
jp,pt
ss
incl
cld
dec
cmp
dec
idivb
sbb
adc
mov
jae
pusha
dec
push
into
dec
leave
dec
mov
mov
clc
lcall
dec
jb
jge
addr16
pusha
dec
imul
pop
dec
pop
nop
mov
sar
dec
jno
add
cli
dec
call
sarb
inc
fiadds
inc
push
jl
sbb
dec
sub
inc
addl
push
call
incl
inc
pop
inc
dec
inc
xor
inc
adc
inc
repz
in
add
inc
clc
ljmp
inc
addl
icebp
add
ljmp
inc
mov
ljmp
pop
dec
pop
dec
sbb
cmovle
dec
enter
dec
dec
and
sub
dec
pop
dec
dec
dec
and
shl
jb
dec
movsb
dec
xchg
and
paddd
dec
stos
dec
test
dec
xor
scas
dec
insb
dec
pop
dec
addb
dec
jmp
pushf
dec
orl
sti
dec
fisttps
push
ss
ja
pop
test
call
inc
sbb
out
inc
fnstsw
decl
xor
inc
out
sub
inc
mov
inc
push
inc
or
sbb
dec
inc
mov
inc
dec
dec
dec
sub
cs
aaa
dec
and
dec
ret
push
scas
aas
mov
dec
rorb
dec
jmp
aaa
dec
icebp
dec
pop
mov
cld
mov
dec
or
xor
jl
loop
dec
pop
je
es
inc
aad
incl
push
push
inc
es
sahf
inc
insl
inc
testb
cli
ljmp
popf
decb
inc
testb
inc
mov
dec
dec
dec
out
jb
dec
xlat
push
push
cmp
pop
pop
mov
mov
push
cli
jecxz
outsl
sahf
scas
inc
xchg
inc
jge
push
inc
pop
inc
sbb
inc
inc
bound
mov
add
adc
testb
mov
mov
repnz
add
jb
dec
clc
sbbl
dec
push
jle
dec
int
test
jp
xor
test
push
into
orb
les
inc
mov
mov
inc
arpl
loop
inc
mov
inc
xchg
inc
enter
subl
push
call
adc
adc
loope
inc
xlat
sub
dec
icebp
call
pop
out
imul
pop
dec
inc
xor
inc
sti
inc
loop
sarl
movsl
adc
sbb
cmpsb
inc
push
cs
test
fcmovnu
movsl
dec
scas
into
cs
xchg
dec
jl
push
dec
add
stc
dec
loopne
aas
push
sbb
mov
dec
sbb
xchg
ret
dec
gs
or
dec
lea
dec
pop
fisttps
imul
pop
xchg
dec
dec
xor
sub
decl
dec
aad
fmuls
dec
mov
mov
dec
pushf
mov
cwtl
jno
pusha
cmp
aas
dec
rcr
int3
dec
mov
mov
adc
push
inc
xor
inc
or
mov
jns
push
add
inc
les
inc
mov
jbe
es
call
push
inc
pop
inc
dec
inc
xor
divb
or
jp
inc
cmp
movsb
inc
es
outsl
cli
mov
dec
lock
ds
out
ss
jae
cmp
push
std
lahf
cmpsb
out
jmp
inc
popl
lahf
pop
hlt
decl
xor
inc
roll
mov
inc
push
dec
inc
aas
pushf
clc
incl
add
inc
xlat
inc
into
inc
lods
inc
xchg
inc
pop
push
jo
decb
inc
aam
into
inc
leave
push
mov
push
pop
mov
or
dec
out
push
dec
mov
jmp
jge
xchg
and
xor
cmp
jecxz
fimull
mov
outsb
sub
dec
xor
jg
jle
hlt
dec
decb
mov
dec
bound
dec
or
dec
sar
ret
mov
dec
pushf
dec
test
pop
dec
inc
dec
decb
mov
dec
xor
dec
or
dec
mov
cwtl
dec
push
repz
sbbl
dec
loope
mov
repnz
loope
dec
and
dec
pop
cli
call
data16
pop
dec
inc
dec
dec
dec
xor
int
pop
jg
mov
int3
daa
outsb
cs
inc
cwtl
ja
jbe
pop
lea
out
sti
xchg
inc
ret
inc
cmc
inc
incl
inc
lret
inc
mov
inc
cld
add
dec
inc
enter
ds
les
inc
xor
loope
inc
js
pop
fildl
ret
repz
pop
jbe
mov
loopne
call
inc
movb
xchg
inc
cltd
inc
jne
pusha
dec
push
dec
and
adc
cli
dec
jmp
ss
xchg
dec
fwait
mov
dec
outsb
mov
pop
mov
sub
push
dec
adc
xor
icebp
jg
lret
dec
mov
dec
jns
out
add
je
or
rol
push
sbb
dec
add
dec
cld
dec
stc
dec
loopne
ljmp
add
dec
fmuls
dec
int3
cs
mov
dec
add
filds
dec
push
dec
pop
dec
inc
dec
dec
dec
dec
icebp
fwait
lcall
dec
and
adc
push
dec
cmc
dec
decl
fimull
dec
fmuls
xlat
incl
or
xchg
dec
pop
dec
inc
in
call
sub
dec
push
dec
jbe
hlt
add
les
fmuls
imul
push
shrb
push
fisubs
ljmp
insb
dec
push
dec
dec
dec
ss
sub
dec
or
outsl
scas
inc
xor
add
imul
push
ljmp
jle
push
inc
pop
inc
sti
jmp
mov
testb
sbb
inc
pop
inc
inc
inc
xor
outsb
inc
or
inc
stc
inc
in
cli
mov
jle
inc
push
push
mov
inc
xor
jecxz
scas
inc
arpl
dec
outsl
dec
imul
rorb
ja
incl
outsb
pop
sub
dec
lret
dec
mov
setp
and
sbb
mov
fbld
dec
call
dec
push
jbe
sarb
int3
xchg
test
dec
xor
dec
cli
sub
pop
into
outsb
cmpsb
pop
out
mov
inc
addr16
insb
inc
imul
inc
inc
incl
inc
dec
inc
xor
cmp
inc
push
inc
adc
scas
mov
inc
sbb
sbb
punpckldq
inc
incb
inc
in
loope
fwait
jo
sub
inc
rcr
movb
loopne
jo
leave
xchg
outsb
stos
inc
xchg
mov
rolb
cmp
inc
andb
ret
inc
push
inc
pop
inc
inc
inc
aas
rcrb
dec
aaa
inc
xor
inc
fisubrs
sub
jmp
pop
xchg
inc
hlt
inc
icebp
out
loopne
out
sar
in
inc
inc
roll
inc
fldcw
xor
data16
inc
mov
inc
xchg
ds
clc
incl
inc
addl
mov
inc
jg
js
gs
outsb
inc
imul
xchg
mov
loop
inc
ss
xor
daa
add
mov
add
inc
in
inc
fldl
iret
inc
leave
inc
cli
decl
inc
outsb
push
inc
xor
inc
out
iret
inc
mov
lea
loope
rolb
roll
push
inc
out
loope
rorb
mull
jns
dec
cld
push
repnz
sub
dec
js
mov
test
jecxz
fs
jg
mov
or
pop
mov
addl
decb
cld
inc
jae
push
inc
cmp
sub
fmull
dec
add
jg
dec
xchg
dec
mov
dec
rorl
push
xchg
dec
decl
lods
xchg
and
fisubrs
add
pop
lcall
mov
or
dec
ja
lods
push
lds
or
addr16
fistps
pop
inc
aas
dec
pop
dec
arpl
push
dec
cmp
mov
adc
dec
dec
dec
sbb
dec
mov
dec
out
mov
ljmp
data16
inc
inc
inc
fildl
ret
mov
inc
aad
mov
decl
fldl
inc
popl
inc
cld
inc
stc
inc
jecxz
add
jo
xchg
jp
mov
inc
loope
fsubrp
ljmp
inc
stos
fwait
inc
addl
inc
sub
pop
inc
adc
or
scas
inc
push
loope
jp
pop
inc
dec
inc
cmp
pop
inc
in
stos
inc
xchg
ret
aaa
loop
sbb
dec
adc
dec
loop
pop
dec
sbb
push
xchg
call
xor
ss
dec
daa
out
jp
loopne
stc
jbe
push
or
add
mov
repz
icebp
jne
add
dec
dec
cmp
sub
dec
out
fnstsw
dec
xchg
dec
mov
sbb
xor
adc
dec
clc
dec
jmp
ds
dec
je
aam
rorl
add
dec
clc
icebp
ret
push
stos
push
les
mov
add
subl
add
push
aaa
inc
adc
add
ljmp
flds
pusha
inc
dec
inc
cld
push
repnz
stc
adc
jmp
sarb
add
sub
inc
cmpsl
adc
push
jg
ret
inc
lret
inc
mov
fcmovnu
sbb
inc
xor
inc
jbe
repz
std
inc
loopne
shll
inc
or
sbb
cmp
inc
push
adc
mov
mov
adc
inc
ret
fwait
jmp
xor
inc
adc
ljmp
loopne
ret
push
add
xchg
jo
inc
add
inc
xchg
adc
mov
add
inc
sub
dec
insb
mov
add
push
mov
jp
cmp
dec
and
xorb
fwait
orb
sub
inc
std
inc
in
lret
lock
inc
test
nop
jl
popa
and
es
sbb
xlat
sbbb
arpl
inc
aaa
pop
mov
inc
pop
fs
inc
sar
mov
inc
pop
inc
and
inc
fadds
orb
mov
push
inc
inc
inc
test
inc
mov
bound
xor
repnz
lds
inc
xchg
adc
cld
sub
push
or
jecxz
and
sub
xorb
cltd
pop
lds
xchg
sub
test
pop
lods
bound
xor
add
push
repnz
cmp
hlt
mov
cltd
push
popf
xor
jb
inc
cmpsl
int3
test
inc
mov
repnz
lods
mov
xchg
lock
lock
inc
xchg
inc
sbbb
lcall
aas
or
add
or
icebp
push
scas
fisubl
pop
and
inc
jl
dec
jmp
adc
loope
jge
cmp
test
lldt
mov
ljmp
push
sub
incb
sub
pop
das
add
or
hlt
cmp
mov
out
shrl
and
mov
xchg
or
pop
je
xor
sbb
dec
hlt
mov
sbb
in
add
dec
loop
push
and
mov
adc
jmp
mov
into
outsb
add
mov
repnz
sub
push
pop
mov
lods
fcompl
jbe
loop
scas
lret
sub
pop
adc
mov
push
mov
dec
xchg
pop
hlt
add
add
repz
or
out
lahf
xor
push
xchg
aam
test
pushl
cld
lea
cli
or
adc
jle
xchg
cmp
pop
cmp
out
call
outsl
mov
adc
xchg
repz
cli
mov
mov
insb
mov
fistpl
jo
mov
pop
cmp
fcmovne
movsb
aas
mov
inc
shrb
pop
jb
movsl
ljmp
pop
mov
jg
mov
fwait
fs
loopne
add
and
ja
call
push
xchg
add
dec
loope
stc
insl
add
outsl
mov
push
adc
and
ja
icebp
jns
mov
push
pop
loop
shrl
out
mov
test
les
test
adc
enter
jl
xor
adc
jno
out
cmpsl
adcb
ret
or
insl
fmul
mov
bound
lock
adc
pop
cld
xchg
shl
mov
in
mov
hlt
js
mov
adc
movsb
mov
int3
fimull
add
cmp
and
aas
rolb
dec
mov
add
xchg
ljmp
sub
inc
adc
and
stc
test
add
dec
repz
dec
cwtl
icebp
pop
cmpsb
adc
dec
outsl
add
ds
scas
xchg
repz
adc
jae
fildll
cmpsb
xor
sbb
hlt
pop
cld
sub
fwait
bound
adc
mov
daa
aaa
or
fbstp
mov
test
add
pushl
cld
add
cmp
pop
mov
fildll
or
mov
sbb
cli
scas
mov
dec
sbb
dec
sub
cmpsl
fwait
add
mov
fadds
insb
mov
imul
and
cmpsl
sbb
icebp
outsl
mov
jmp
js
ljmp
lds
sbb
in
in
lcall
js
pop
test
mov
push
inc
int3
mov
push
add
lds
ja
leave
call
or
je
dec
mov
fmuls
add
add
mov
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
mov
add
jg
and
mov
fistps
out
push
incl
addr16
mov
and
int3
jg
ds
mov
addr16
fdivrp
and
lods
sub
ds
addr16
push
mov
mov
xor
mov
jb
in
fisttps
fistpl
out
push
loop
cmp
dec
add
add
in
in
loopne
aad
out
incl
add
sbb
jl
mov
lods
mov
xchg
pop
gs
decl
xorl
mov
fs
dec
push
adc
pop
dec
add
idiv
setne
es
pop
inc
adc
pop
sub
pop
xchg
faddl
pushl
mov
adc
push
adc
in
hlt
dec
add
add
shrb
jecxz
or
insl
push
push
gs
or
cmp
addr16
pop
notl
lods
and
in
in
arpl
setb
push
ja
or
je
xor
cwtl
aaa
jge
mov
fidivrs
cmpsl
jmp
sti
and
xchg
inc
aaa
xchg
mov
mov
inc
fxsave
push
mov
test
or
in
and
jecxz
and
inc
ljmp
dec
dec
addl
mov
xor
cmpsl
aas
in
andb
orl
orl
dec
lgs
fdivl
jmp
out
and
mov
jecxz
inc
dec
stos
and
mov
ds
daa
out
jbe
mov
lcall
sbb
push
pop
cwtl
sbb
neg
int
out
pop
rcrl
sub
adc
gs
sbb
fcompl
out
pop
lret
out
and
in
sti
lcall
in
mov
addr16
int3
mov
out
mov
mov
inc
pop
push
in
jg
lret
mov
pop
mov
push
ljmp
int
or
lock
cld
mov
std
fucomip
test
stos
sub
push
dec
cmpsl
mov
daa
mov
push
fwait
pop
push
cmpsl
in
dec
bound
into
scas
cwtl
addr16
lods
and
and
jmp
xchg
sbb
push
fsubr
jmp
scas
mov
arpl
push
mov
sub
and
jle
or
movsl
jbe
sub
ds
lods
stos
push
and
mov
or
fwait
mov
mov
in
outsb
imul
fistl
push
push
cmp
fs
stos
cmpsb
pop
xchg
jle
cmpsl
test
call
cmpsl
xchg
scas
sbb
lds
mov
aaa
loop
sti
aaa
xor
xor
insb
ja
fldt
push
in
lcall
das
xchg
push
test
adc
test
pavgb
test
inc
pushl
push
sub
jecxz
jecxz
cmpsb
or
scas
sbb
jno
pusha
mov
loope
outsl
jmp
adc
and
jns
jg
mov
lahf
xor
jg
ret
jb
bound
xor
js
or
test
adc
jbe
decl
out
xchg
add
jle
mov
outsb
and
in
cmpsl
gs
jmp
in
mov
jg
xor
add
jns
adc
xchg
lock
xor
mov
fisubrs
aas
in
push
pushl
inc
or
sbb
pop
test
or
test
outsl
cmpsl
bound
xlat
data16
pusha
mov
bound
xor
fisubrl
insb
pop
cmpsb
scas
xchg
push
sbb
push
shr
stos
jo
push
lds
popf
push
enter
add
insb
pop
jecxz
test
adc
mov
adc
mov
jg
pop
mov
inc
shll
fdivl
out
data16
mov
jecxz
out
in
sub
incb
and
sub
pushl
test
jmp
jle
insb
imul
mov
dec
jnp
mov
daa
xor
jmp
cmp
imul
outsb
out
sbb
mov
and
sbb
data16
pushl
sbb
xor
je
pop
insb
pop
xor
test
int3
insl
xchg
adc
xchg
and
cld
fcomip
into
std
or
sbb
fdivl
mov
jbe
push
pop
fbstp
das
jp
jecxz
xchg
pop
sbb
fdivrl
jecxz
fistl
lods
jecxz
pushl
fsts
int3
pop
xchg
mov
fwait
cmpsb
mov
outsb
sbb
fistpll
rclb
push
out
xchg
imul
jmp
ljmp
cmp
cmpsb
sub
repz
bound
xchg
or
insb
inc
xlat
pop
mov
cmp
pop
in
pop
push
pop
out
push
out
ljmp
outsl
and
xor
and
mov
jmp
std
call
jmp
mov
mov
out
mov
jne
incl
aaa
dec
dec
push
inc
xor
push
xor
add
xor
inc
inc
jb
insb
dec
mov
inc
popa
xor
pop
jno
call
sahf
push
dec
insb
inc
jae
inc
xor
arpl
dec
push
push
dec
add
inc
inc
cmp
filds
cmp
push
jp
xor
push
lcall
outsb
fistpll
xor
aaa
addr16
sbb
xor
gs
push
dec
push
js
jns
arpl
pushl
cmp
dec
jo
add
je
ss
add
push
outsl
je
ljmp
jo
jo
push
inc
arpl
push
push
or
outsl
mov
bound
je
jne
je
jb
aaa
insl
test
pushl
xor
push
imul
insb
dec
dec
inc
jae
xor
pop
jo
outsl
pop
jo
xor
inc
inc
decb
outsb
dec
jmp
adc
push
cli
test
jp
push
or
fstpt
js
inc
pop
popa
out
js
in
cmp
outsb
dec
ja
add
xor
dec
dec
inc
movsb
push
divb
cld
outsl
pop
pop
push
insl
ss
xor
cmp
jae
outsl
pop
inc
cmpsb
or
incl
jo
jae
jo
dec
ss
dec
pop
dec
mov
inc
imul
insb
jno
jns
nop
pop
pop
dec
dec
arpl
lcall
js
mov
popa
inc
fs
inc
lret
push
arpl
jns
mov
pop
insb
push
xor
popa
xor
mov
arpl
inc
push
inc
dec
je
and
rcrb
inc
ss
je
inc
ja
jo
icebp
jg
mov
xor
push
add
inc
push
xor
pop
cmp
bound
cmpsb
pop
bound
pop
bound
mov
imul
insl
jl
cld
push
gs
push
dec
push
sbb
xor
outsl
inc
inc
ret
daa
imul
aaa
adc
inc
jno
dec
pop
outsl
dec
inc
or
jne
push
inc
pusha
dec
outsb
ret
loope
popa
insl
ja
jno
push
in
js
dec
popa
push
cmpsb
push
dec
mov
ljmp
jle
xor
dec
in
jo
jb
jbe
push
outsb
xor
fdivp
xchg
je
cmp
push
push
insl
gs
adc
cmp
ja
imul
dec
xor
js
lods
jle
lea
inc
dec
pop
dec
jno
adc
add
jo
idiv
fwait
shlb
inc
add
dec
inc
xor
mulb
popa
xor
bound
cmpb
jae
pop
jns
xor
data16
mov
xor
inc
cmp
push
pop
imul
jbe
shl
xchg
push
arpl
outsl
add
lret
imul
aaa
mov
push
push
inc
lret
cmp
and
pop
mov
cmp
inc
ss
dec
dec
dec
mov
cli
dec
jo
dec
inc
or
inc
outsl
in
cmp
pop
imul
push
jb
dec
dec
dec
in
fisttpl
inc
pop
mov
bound
jns
dec
push
mov
sbb
pop
jb
pop
mov
pop
jl
gs
inc
push
dec
jns
fisubs
jmp
push
sub
xor
dec
inc
movb
inc
inc
push
jb
jbe
mov
imul
dec
ja
push
cmp
lods
std
mov
dec
jbe
dec
xor
inc
xor
dec
in
push
dec
push
push
push
cmp
push
insl
addr16
push
xor
pop
add
push
mov
dec
aaa
jb
dec
inc
shlb
fs
push
gs
pop
push
cld
in
andb
inc
xor
push
jbe
xor
xor
push
xchg
outsl
add
xor
jae
push
sub
addr16
pop
lock
jb
jp
xor
jns
jp
dec
js
pop
push
push
inc
mov
adc
mov
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
xchg
decl
add
dec
add
mov
orb
jg
jl
leave
push
add
inc
jb
popa
je
inc
imul
mov
dec
outsl
popa
fs
imul
js
push
push
gs
std
fists
outsl
arpl
jae
gs
outsl
sub
jnp
inc
gs
inc
fs
jns
push
mov
imul
enter
dec
jo
outsb
push
xchg
push
mov
pop
aam
je
outsl
outsb
jae
sti
fwait
insl
mov
push
sbb
outsb
fs
je
insl
push
int
popa
jae
inc
jb
sub
sbb
imul
insb
push
jo
addb
dec
inc
or
data16
gs
jne
js
push
je
push
push
sti
pop
jo,pn
outsb
outsw
inc
jns
fdivrp
xor
repnz
mov
fs
jnp
loope
push
outsl
ja
push
jbe
xchg
pop
shll
push
push
insb
imul
into
xchg
in
and
lcall
bound
xor
push
lock
xlat
dec
dec
xchg
popa
addr16
push
jb
ret
push
add
andb
outsl
and
push
push
pop
in
fst
imul
stc
imul
dec
add
add
aas
enter
add
sub
mov
add
movsl
out
sbb
insb
xor
adc
inc
inc
pop
add
insl
pop
add
prefetchnta
add
imul
inc
repnz
push
add
fdivrs
sub
add
jb
mov
insb
add
fs
dec
jo
andb
push
jbe
stc
fsubrp
imul
jb,pn
loopne
mov
xchg
sbb
insb
dec
push
add
sahf
fisubl
inc
push
out
jae
arpl
mul
push
ja
dec
or
dec
ret
aaa
aam
add
repnz
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
add
in
add
add
add
add
dec
add
dec
add
add
lods
lock
add
or
cmp
hlt
mov
and
inc
fsubrl
pop
mov
ds
aas
lock
loopne
out
mov
sarl
enter
dec
mov
adc
iret
popa
push
mov
je
fstpt
neg
je
aas
lret
push
jbe
inc
daa
jae
mov
mov
enter
pop
sti
sub
fwait
mov
sbb
cmp
sub
inc
jne
out
icebp
pop
mov
fiadds
inc
jbe
lret
adc
movsl
add
iret
jmp
bswap
sbb
cmpsb
sub
sbb
xchg
out
into
outsl
inc
out
js
mov
pop
inc
sarl
ja
cmp
inc
cmp
xchg
add
sti
call
xor
sbb
aad
inc
repz
mov
mov
test
lcall
addl
mov
pop
or
enter
inc
sbb
movsb
push
push
mov
and
popa
pop
pusha
rcrl
sbb
cli
sti
mov
js
fmull
jmp
ret
clc
xchg
aad
push
push
call
cld
in
cmp
xchg
out
cmp
mov
sub
xor
dec
cmpb
mov
movsl
add
xor
jo
jge
aaa
fcoml
das
aam
mov
mov
push
sti
rcrl
repnz
sbb
fidivs
insb
shlb
pop
mov
jo
into
cmpsl
adc
jle
int
xor
cltd
xor
out
sub
push
add
add
test
jmp
data16
cmp
je
bound
xor
popf
and
add
lret
pop
shrl
jmp
stos
cmp
jno
dec
and
lods
repnz
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
repnz
add
add
add
add
add
add
add
bound
xor
add
jb
sub
add
insl
add
add
je
jae
add
push
add
imul
imul
je
popa
add
add
je
imul
and
ja
popa
add
and
bound
jne
imul
and
ja
imul
and
dec
add
outsb
add
and
push
add
je
jne
jo
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
add
jb
and
push
add
outsb
add
add
insl
add
outsb
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
mov
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
inc
add
push
add
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
dec
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
and
push
add
add
jb
and
push
add
outsb
add
add
insl
add
outsb
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
lcall
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
inc
add
push
add
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
dec
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
call
daa
pop
add
add
add
daa
pop
add
daa
pop
add
sub
add
daa
pop
add
add
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
add
add
pop
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
outsb
je
jne
je
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
push
jo
jb
add
push
outsl
data16
jne
inc
insb
gs
outsb
jne
