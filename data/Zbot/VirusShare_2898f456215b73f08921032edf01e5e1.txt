add
add
sub
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
add
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
add
add
add
add
add
in
and
push
lea
push
lea
push
subl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
cmp
je
sub
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
add
jmp
ret
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
add
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
add
nop
add
add
add
add
add
add
add
add
in
cmp
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
nop
add
add
add
add
add
add
add
.byte
nop
andb
add
add
mov
add
cmpsb
and
add
and
add
and
add
add
jb
add
add
add
fsubs
add
mov
and
add
and
add
and
add
and
add
add
mov
add
shlb
add
cwtl
and
add
and
add
add
add
and
add
add
dec
and
add
add
andb
add
add
xchg
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
add
ljmp
add
add
jb
add
add
add
fsubs
add
mov
and
add
and
add
and
add
and
add
add
mov
add
shlb
add
cwtl
and
add
and
add
add
add
and
add
add
dec
and
add
add
andb
add
add
xchg
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
enter
jae
gs
popa
insb
jne
add
add
gs
inc
imul
jb
popa
je
inc
jbe
outsb
je
add
das
add
outsb
fs
je
insl
push
add
push
gs
insl
gs
push
add
imul
je
imul
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
lock
imul
jb
je
arpl
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
jb
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
jb
arpl
jae
gs
imul
gs
jne
jb
outsb
je
push
add
add
fs
imul
add
dec
add
je
jb
arpl
jae
gs
jo
add
jo
outsb
fs
push
add
push
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
inc
js
outsl
jb
push
push
outsl
push
inc
popa
je
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
imul
jae
inc
outsl
jb
push
dec
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
popa
add
test
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
pop
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jnp
jp
lods
lods
stos
add
cmpsb
cmpsl
push
mov
mov
mov
ret
leave
leave
leave
lret
into
rcl
in
rcl
shl
ror
shl
into
int3
int
enter
mov
mov
mov
lods
lods
lods
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
lret
rcl
sar
xlat
fcomp
std
fcom
xlat
xlat
xlat
aam
rcl
iret
dec
int3
into
aad
aad
rcl
sar
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
sbb
mov
jnp
mov
mov
dec
lret
leave
call
iret
iret
aam
aad
fcom
call
fcom
call
aad
dec
int3
int
int3
int
call
aad
int3
int3
into
inc
sarl
mov
lods
scas
std
cmpsl
cmpsb
cmpsl
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int
call
rcl
call
xlat
xlat
call
fdivr
aad
aam
int
int3
dec
lret
into
int3
int
mov
mov
mov
mov
cmpsl
cmpsl
cmpsb
jmp
fwait
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
ds
das
push
push
push
sub
sbb
ss
cmp
cmp
and
and
push
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
aam
call
aam
ror
sar
mov
inc
ret
ret
mov
mov
scas
scas
scas
jmp
popf
sahf
xchg
xchg
cwtl
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jge
jge
jge
jg
jb
jb
bound
mov
cmp
inc
mov
jo
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
lret
leave
leave
leave
dec
mov
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cltd
fwait
fwait
in
test
push
femms
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsl
add
pop
or
pusha
nop
nop
fcoms
test
jp
jnp
jp
jl
outsl
outsl
outsb
out
addr16
push
ret
jge
js
jp
fs
inc
inc
cmp
pop
pop
sbb
prefetch
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsb
lcall
nop
xchg
incl
addb
xchg
xchg
xchg
sahf
mov
mov
mov
jp
jns
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
sahf
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
addb
xchg
addr16
cmp
ss
jle
fwait
cltd
fwait
lea
test
stos
sti
stos
lods
lods
lods
stos
lods
test
stos
std
movsb
movsb
movsb
std
fwait
lcall
mov
jle
jns
jns
jp
jp
xchg
xchg
movsb
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
push
push
prefetchw
dec
insl
insb
insl
jl
xchg
leave
cltd
cltd
cltd
fistps
lcall
mov
decl
mov
lcall
cmpsl
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
cmpsl
lods
add
pop
adc
scas
call
lcall
incl
mov
xchg
xchg
xchg
pushf
sahf
popf
std
movsl
movsl
movsb
stc
mov
xchg
xchg
in
nop
xchg
nop
in
xchg
push
jne
push
push
dec
add
add
inc
es
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
nop
xchg
decb
xchg
lcall
cmpsb
cmpsb
ljmp
lods
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
ret
mov
pushf
decl
mov
call
nop
nop
xchg
xchg
xchg
pushf
sahf
pushf
mov
test
movsl
movsb
movsl
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
jne
jnp
jge
orl
int
nop
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
ss
mov
js
mov
movsb
mov
mov
mov
lods
lods
lods
mov
mov
add
shlb
xchg
mov
ljmp
popf
decl
call
xchg
xchg
call
cwtl
xchg
lcall
lahf
lahf
lahf
mov
mov
fwait
out
nop
xchg
nop
xchg
xchg
les
cwtl
lcall
lea
stc
xchg
xchg
std
xchg
jb
lcall
jmp
inc
jge
mov
jp
mov
jae
mov
outsb
ljmp
adc
stos
or
or
mov
jge
mov
mov
lods
pushf
movsb
movsb
movsl
and
add
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
popf
pushf
lcall
pushf
sahf
lcall
xchg
cwtl
decl
cwtl
xchg
call
cwtl
lcall
cltd
lahf
stc
lahf
xchg
pushf
cld
popf
xchg
xchg
push
xchg
push
jg
xchg
dec
jns
cltd
cmp
insb
sahf
pop
addr16
sahf
pop
jmp
arpl
test
adc
lods
pcmpgtw
scas
adc
mov
imul
mov
imul
ds
mov
lods
lods
scas
mov
movsl
movsl
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
mov
jmp
mov
xchg
decl
mov
xchg
xchg
xchg
ja
lcall
xchg
dec
jnp
xchg
cmp
insb
decl
adc
nop
or
pop
call
add
mov
adc
ljmp
outsl
pushl
outsl
mov
and
mov
and
inc
test
ret
xchg
scas
mov
lods
scas
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
scas
mov
shlb
lcall
movsb
jmp
cmpsb
test
test
cmpsb
cmpsb
lcall
jg
decl
outsl
decl
sub
mov
decl
or
push
incl
add
mov
push
decl
add
fwait
add
lahf
add
test
popa
pushl
es
mov
sub
inc
sub
ret
sub
inc
sub
cmp
xor
movl
mov
mov
lret
movsb
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
lods
lods
pushl
scas
scas
jmp
jno
incl
or
incl
or
addl
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
cmp
dec
cmp
int
xchg
sarl
mov
sarl
mov
sarl
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsl
ljmp
popf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
call
add
pushf
add
mov
add
lods
add
mov
jno
ret
cmp
dec
inc
mov
roll
call
dec
fmuls
fmuls
fimull
fisttpl
fsts
call
test
mov
mov
movsl
movsl
mov
or
add
add
add
add
inc
dec
adc
jp
mov
cmpsl
scas
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
pusha
call
push
pop
decl
push
decl
add
xchg
add
popf
add
add
cmpsb
add
stos
add
mov
gs
and
dec
dec
nop
call
push
cwtl
fcoms
ficoml
fcompl
ficomps
jmp
pop
popf
jmp
pop
mov
jmp
pop
lahf
call
test
mov
cmpsl
cmpsb
jne
sahf
sahf
or
xchg
xchg
cwtl
add
inc
adc
ja
sahf
lcall
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
movsb
call
pop
call
and
xchg
and
sbb
nop
or
xchg
add
xchg
add
cltd
add
mov
add
stos
add
mov
fs
mov
xor
fisubl
jmp
bound
in
test
in
cmpsb
jmp
cmpsw
jmp
addr16
fildl
mov
cmpsb
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
lcall
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
outsb
lcall
sub
xchg
pop
call
add
cltd
add
mov
add
lods
add
mov
pushl
movq
roll
jmp
outsl
stos
jmp
outsl
stos
call
jae
in
jae
in
jne
out
jne
in
je
in
jb
jmp
mov
mov
test
lcall
lahf
add
jge
ds
cmp
js
lea
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
lods
lcall
xor
mov
cmp
xor
cltd
sbb
pop
call
add
movsl
add
add
mov
pushl
add
sbb
fistl
jmp
jbe
call
jle
in
xorb
icebp
cmpl
push
test
jmp
mov
inc
mov
stos
cmpsl
sahf
pushf
sahf
daa
mov
mov
add
arpl
add
aaa
cmp
pop
pop
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
lcall
cmp
inc
jl
movsl
inc
jle
mov
pop
call
add
movsl
add
stos
add
scas
add
add
mov
add
iret
daa
cmp
movsb
call
mov
lock
push
xchg
ret
nop
ret
nop
push
nop
xchg
pop
out
nop
sar
mov
inc
stos
stos
mov
pushf
sahf
xor
sahf
pushf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
inc
inc
mov
jl
lcall
dec
cmp
dec
test
movsb
xor
fwait
push
pusha
lcall
add
cmpsb
add
lods
add
mov
mov
add
movl
mov
out
mov
out
xchg
push
cltd
push
lcall
negl
leave
stc
popf
lret
popf
int3
sti
sahf
int
cli
cltd
lret
xchg
sar
mov
dec
enter
mov
mov
xchg
add
add
add
xor
or
cmp
outsb
dec
dec
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
ret
mov
inc
mov
ljmp
cmp
lods
dec
xchg
movsl
sub
fwait
pop
pop
lcall
add
lods
add
mov
popa
mov
add
leave
add
rorb
je
fiadds
out
mov
push
movsb
int3
push
cmpsb
int
stc
cmpsl
iret
cli
test
iret
cld
cmpsl
into
stos
sar
std
test
sar
negb
lret
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
xor
add
sub
or
inc
bound
pop
xlat
jne
jo
mov
mov
ret
mov
ret
ret
inc
ret
enter
ret
mov
test
movsl
push
xchg
scas
push
mov
scas
dec
test
mov
add
jmp
pushl
push
dec
add
xlat
add
fists
in
pop
test
negb
sar
cld
scas
cld
mov
cli
mov
cld
mov
std
mov
std
mov
cld
mov
pushl
sar
cmc
movsl
jmp
mov
dec
leave
int
mov
mov
sahf
lahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsl
outsl
jo
xchg
fwait
lcall
fcomp
jmp
xlat
not
rcl
std
lret
dec
leave
lret
dec
lret
lret
dec
leave
lret
leave
mov
lods
jmp
push
mov
lods
cmp
lcall
add
lods
add
mov
arpl
mov
add
roll
outsl
fadds
je
fiadds
jae
jmp
jno
sti
lods
aad
cld
mov
fcos
std
mov
fcos
std
mov
cld
mov
fdivr
inc
std
mov
lret
jmp
mov
call
lret
into
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
movl
jmp
out
loop
loop
fsub
fcomi
fcomp
fsqrt
aam
fdivr
into
ror
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
add
fildl
ja
jecxz
jbe
in
xor
cld
mov
loopne
inc
loope
inc
loopne
std
inc
fdivrp
dec
loopne
std
enter
enter
enter
leave
loope
sti
mov
enter
into
mov
mov
xchg
adc
add
add
std
incb
std
incl
std
incl
repz
or
out
in
pop
in
out
out
sub
out
out
dec
call
call
jmp
aad
jmp
mov
xchg
cmpsb
cmp
movsb
adc
jmp
add
mov
mov
add
int3
add
add
filds
ja
jmp
inc
fwait
sti
mov
in
cld
int3
loop
dec
in
dec
in
std
int
dec
loop
dec
loop
call
in
call
in
std
shl
shl
cld
ret
out
mov
xlat
inc
ret
ret
out
cmpsb
cmpsb
cmpsb
mov
xchg
xchg
add
add
add
incb
std
std
add
clc
testl
lock
repz
in
icebp
out
pop
out
repnz
cmp
in
in
pop
fnstsw
loopne
lds
xchg
sti
sahf
and
pop
jmp
pop
pushl
add
enter
roll
jb
flds
je
in
jns
in
push
jle
cmc
pop
test
sti
mov
cld
shl
cld
iret
in
shr
std
shr
call
in
std
aam
call
out
call
jmp
std
fucomi
fld1
cld
iret
loopne
hlt
ret
jmp
aad
dec
lret
test
xchg
xchg
and
xchg
xchg
add
std
sti
add
testl
repz
cmc
or
aad
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
leave
add
rolb
jo
fildl
jbe
call
sbb
push
jbe
cli
fldl2e
std
fucomi
fldl2t
fucomi
fucomp
fucomi
loopne
std
fsubrp
std
fsubrp
shl
push
aad
call
rcl
clc
stos
stos
stos
lods
xchg
xchg
xchg
outsl
outsb
outsl
add
add
add
loop
add
mov
xchg
lods
jnp
repnz
ljmp
add
mov
add
int3
add
aam
jno
filds
je
ljmp
cli
pop
cld
shl
fucomip
fucomi
fldl2e
fldl2e
call
out
std
aam
std
shl
sti
shl
cli
shl
stc
iret
test
in
mov
xlat
fcom
sti
mov
mov
fwait
cltd
lcall
lcall
mov
mov
add
enter
mov
sahf
jmp
sub
add
test
add
add
les
imul
add
loop
jns
call
xor
sti
enter
int3
jecxz
cld
idivl
aam
repnz
into
push
mov
int
call
mov
iret
std
call
call
loopne
in
mov
mov
xchg
add
add
add
int
add
sarl
lahf
xor
pop
ljmp
add
mov
add
dec
pop
jo
rorl
fimull
jns
loop
cmp
inc
xchg
ljmp
call
scas
std
loopne
scas
ret
mov
lock
into
in
enter
rcl
shl
fcmovb
out
loope
in
out
test
out
out
popf
jmp
lret
leave
push
lods
lods
lods
adc
cmpsb
test
add
ret
rolb
ret
mov
sahf
stos
aam
dec
cmp
cmpsb
push
imul
and
ja
mov
inc
xchg
les
stc
lret
test
mov
out
mov
rcl
ror
aad
lret
rcl
int3
mov
iret
shll
fcom
aad
fcmovnu
fnstenv
gs
in
out
jmp
xor
cmc
cmc
cmc
and
repnz
fstp
or
mov
int
xchg
add
mov
rol
mov
scas
mov
test
push
lock
sbbl
mov
stos
mov
ret
mov
cmpsl
mov
mov
leave
int3
jp
int
addr16
rcll
rcl
dec
inc
rcl
aad
aam
xlat
daa
xlat
fstp
sbb
loopne
adc
jecxz
push
fucomip
in
out
jmp
jmp
in
add
cli
cmc
add
cld
add
incl
std
std
incb
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
ret
inc
ret
xor
int3
lret
daa
int
iret
and
rcrb
rcl
rclb
rcl
aam
rcl
push
rcr
add
fcmovnu
add
add
in
add
in
jmp
add
incb
mov
mov
add
ret
ret
or
mov
mov
mov
push
ret
or
leave
movl
int
add
rolb
rcl
add
fcom
add
fcom
add
fadds
fcmovnu
loope
aam
add
loopne
add
add
out
add
icebp
icebp
add
std
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
mov
ja
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
iret
iret
jmp
rcl
cmc
rcl
sar
iret
into
into
cli
int
int3
stc
lret
int3
lret
mov
mov
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
jg
inc
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
sar
xlat
call
aad
iret
rcl
dec
iret
into
dec
lret
rol
mov
mov
stos
stos
lods
icebp
xchg
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
jae
gs
dec
dec
inc
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
lret
lret
call
rcl
call
aam
dec
lret
lret
mov
mov
ljmp
sahf
popf
xchg
xchg
xchg
jmp
jo
xchg
push
pop
adc
xor
add
add
add
add
cmpb
jp
jl
test
jnp
imul
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
sar
mov
mov
mov
ljmp
pushf
pushf
call
xchg
cltd
fwait
cltd
out
addb
adc
adc
add
add
add
add
add
pop
cltd
lcall
fwait
xchg
lcall
addl
jmp
js
sarb
jp
jp
jp
je
je
push
push
push
cmp
aaa
popf
sahf
pushf
mov
scas
lods
rep
lods
scas
sti
scas
scas
lods
std
test
cmpsl
std
sahf
sahf
popf
call
xchg
call
mov
lods
jmp
lods
scas
leave
movsb
movsl
movsb
cltd
jb
je
adc
adc
add
add
add
add
outsb
outsl
insl
pop
lods
movsl
test
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
jo
mov
xchg
cwtl
lcall
mov
mov
xchg
xchg
xchg
lcall
movsl
test
mov
scas
std
mov
mov
stc
mov
mov
cmpsb
mov
addl
add
add
popa
popa
pusha
or
lods
mov
movsl
mov
mov
mov
lcall
lahf
lahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
insl
insl
insl
xchg
subb
xchg
lock
mov
lcall
pushl
jo
mov
dec
mov
mov
mov
out
lods
stos
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
cwtl
xchg
lcall
cltd
fwait
lcall
cli
xchg
xchg
cwtl
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
cmp
dec
jp
mov
xor
jb
scas
sbb
insb
pushl
pop
mov
mov
jle
mov
add
add
add
popa
pusha
popa
or
mov
call
lahf
popf
jmp
mov
cwtl
decl
orl
cld
xchg
pop
cmp
dec
jp
nop
cmp
xchg
sub
xchg
sbb
cltd
adc
lahf
push
popa
jmp
sbb
mov
insl
pushl
push
jb
mov
pop
nop
mov
scas
scas
xchg
popf
lahf
popf
adc
add
add
pusha
pusha
pusha
or
mov
stos
mov
mov
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
pushf
add
or
jae
mov
sub
jg
xor
dec
pop
cwtl
inc
test
divl
test
sbb
add
add
pusha
popa
pusha
or
movsb
test
jmp
mov
pushl
mov
jmp
inc
jo
mov
pop
decl
or
test
push
decl
add
mov
add
mov
insb
inc
cmp
into
inc
mov
rolb
call
inc
xchg
flds
call
popa
lahf
inc
cmpsb
mov
mov
mov
movsl
movsl
movsl
daa
incb
add
add
pusha
popa
pusha
or
lahf
mov
ljmp
mov
mov
mov
mov
movsb
test
decl
sbb
push
pop
decl
add
xchg
add
mov
add
lods
add
jbe
iret
dec
xchg
fcomps
ficompl
jmp
pop
mov
jmp
pop
mov
dec
test
cld
mov
mov
cmpsb
lods
movsl
xor
add
add
dec
pop
jge
jl
pushf
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
subps
xchg
add
lahf
add
cmpsl
add
scas
add
or
lret
xor
jmp
insb
stos
jmp
outsl
stos
call
jo
out
jb
call
cmpsl
mov
shrl
addl
pop
outsl
outsl
insb
bound
cltd
cwtl
ljmp
mov
mov
mov
je
lcall
cmp
popf
sub
call
add
movsl
add
lods
add
mov
inc
or
call
inc
xchg
jmp
jp
jmp
mov
in
test
push
xchg
out
mov
mov
test
push
fwait
fwait
cltd
add
sub
push
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
ret
mov
xchg
ljmp
sub
cltd
or
mov
add
mov
arpl
mov
adc
fistps
out
xchg
sar
xchg
ret
push
cwtl
push
cltd
stc
cltd
leave
sti
pushf
lret
push
xchg
jmp
lods
mov
stos
popa
lahf
mov
add
xor
xor
pop
pop
pop
fisttpl
mov
mov
rol
mov
test
cmpsl
pop
mov
lods
dec
cmp
and
sahf
add
jmp
add
mov
add
fldenv
cmp
jnp
push
mov
into
stc
test
iret
cld
stos
sar
std
lods
sar
sti
test
call
mov
stos
jne
pushf
pushf
or
add
add
dec
push
dec
aaa
jae
jae
test
into
int3
out
int
cmc
lret
sti
leave
leave
enter
enter
mov
stos
pusha
mov
stos
inc
jg
mov
add
mov
arpl
ret
dec
add
fildl
xchg
push
xchg
mov
cld
mov
fcos
std
mov
fdivr
mov
sar
jmp
lret
ret
scas
lods
lods
mov
add
add
add
add
or
aam
dec
loop
loopne
fcmovnb
fcmovu
aam
xlat
out
shll
cmpsl
sub
jmp
popa
mov
add
add
jecxz
jp
repnz
mov
cld
loop
dec
loopne
std
fdivrp
dec
dec
loopne
cld
lock
leave
divb
popf
sahf
sbb
add
add
std
add
std
add
jmp
or
out
in
sbb
in
in
xor
loope
jecxz
les
mov
mov
add
pushl
add
int
outsb
fldl
jne
ljmp
std
std
shl
shl
call
in
aam
std
call
shl
push
enter
int
stc
mov
mov
add
incl
std
incl
std
incb
aad
push
mov
pop
mov
sahf
or
ljmp
add
ret
add
roll
outsl
fiadds
jne
in
pop
mov
cli
mov
std
shl
fldl2t
fsubr
std
fsub
std
xlat
out
sti
fsub
cld
cld
aam
push
fdivr
loope
sti
mov
lahf
sahf
das
add
add
int3
int
or
arpl
ljmp
inc
add
aad
jno
loop
ja
out
xor
sti
int
stc
lret
cmc
bnd
repz
out
ret
aam
in
sar
in
vpsadbw
jecxz
fsubr
mov
stos
das
std
std
add
add
add
aam
mov
je
or
mov
insb
inc
sbb
int3
and
sub
pushf
clc
loop
mov
out
loop
lret
jmp
fidivrs
leave
ffreep
sarl
in
ficompl
in
jmp
rorl
mov
add
lods
lods
stos
add
xchg
mov
ljmp
fidivrl
jle
rol
stos
mov
mov
ret
nop
sarl
int
ror
into
pop
ror
rorl
fcom
cmp
fsubp
das
jecxz
frstor
loop
lock
in
in
or
std
incl
std
add
mov
outsb
scas
mov
scas
mov
push
mov
mov
shrl
enter
rcl
pop
sarb
or
loope
or
int
add
std
std
add
incb
cltd
fwait
fwait
add
or
int3
into
int3
add
std
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
mov
leave
mov
ret
ret
ret
mov
mov
lods
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aam
std
rcl
sar
into
iret
into
std
vshufpd
mov
in
cmpsl
test
andb
pop
add
add
add
add
add
add
add
add
jae
jb
push
inc
dec
das
cs
and
add
add
mov
mov
cmpl
ret
dec
into
int
aam
aam
into
into
into
dec
enter
mov
lods
lcall
mov
push
add
add
add
add
je
jne
xchg
adc
jo
ret
arpl
insl
outsb
outsb
jb
popa
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
cltd
lds
jb
daa
daa
daa
das
add
add
add
add
je
je
pushf
xchg
lcall
xchg
clc
xchg
or
test
push
dec
dec
inc
mov
pushf
into
movsb
mov
lahf
sti
xchg
xchg
xchg
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsb
test
cld
mov
xchg
xchg
xchg
cld
sahf
popf
pushf
cmc
lcall
mov
push
push
imul
jle
lea
xchg
testl
mov
pushl
jb
mov
lods
scas
push
stos
stos
stos
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
call
fwait
cltd
lcall
lcall
xchg
mov
loope
jne
out
xchg
bound
std
lcall
ljmp
and
mov
insl
pushl
popf
lods
lock
mov
imul
int
add
add
xchg
pop
lods
cmpsb
stos
test
lahf
sahf
popf
jmp
movsb
cmpsb
call
jge
lea
decb
xor
lea
popa
call
or
mov
sbb
jne
mov
daa
jns
les
inc
lcall
test
add
add
fwait
mov
cld
test
scas
scas
pushl
xchg
decl
or
xchg
push
decl
add
mov
adc
ret
dec
aas
mov
rolb
call
inc
mov
dec
xchg
dec
lcall
movsl
movsb
movsl
push
add
add
imul
test
lahf
movsb
cld
scas
scas
scas
pushl
mov
mov
call
sbb
xchg
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
pop
movsl
jmp
data16
call
lcall
cmpsb
cmpsl
cmpsl
pop
add
add
popa
popa
bound
pushf
fwait
lcall
mov
mov
lcall
jo
lcall
lcall
add
mov
xor
jmp
jl
out
jl
out
jg
ficompl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
arpl
lcall
add
cmpsl
add
mov
fs
or
fimull
in
lea
hlt
xchg
xchg
clc
xchg
enter
inc
mov
movsb
sub
inc
inc
aas
adc
push
xchg
mov
mov
inc
sarl
stos
dec
cmp
sbb
movsl
add
mov
fs
add
aad
ja
in
outsb
scas
push
cmpsb
int
stc
stos
iret
cld
scas
sar
std
lods
sar
cld
lods
sar
jmp
leave
inc
mov
movsl
ds
std
incl
xor
add
scas
mov
mov
aam
mov
aad
rcl
out
lret
cli
mov
mov
jmp
add
add
aam
jae
out
xchg
clc
mov
mov
fdivr
cld
rcr
std
ret
cld
ret
out
mov
ret
test
dec
jg
addb
add
add
in
in
or
out
jmp
outsb
fcmovu
movsl
outsb
ljmp
add
lret
fldl
push
aaa
xchg
cli
mov
cld
into
in
dec
in
std
shl
call
in
std
aad
push
aad
int
scas
lods
lods
popa
addl
add
incb
std
push
lret
int3
shrl
lahf
sbb
lods
add
mov
add
jecxz
jp
repz
movsl
inc
loop
cld
out
aam
aam
sti
aam
cli
aam
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
push
iret
push
je
ficomps
cmp
lock
shl
call
mov
shl
out
aad
ljmp
scas
vsqrtpd
add
add
mov
lods
xchg
and
push
mov
shll
jbe
mov
mov
int3
adc
into
outsl
fxch
rcrb
rcl
dec
in
fistpll
out
call
sbb
sarb
cmp
mov
scas
push
mov
mov
les
lds
rol
sbb
bswap
into
int3
or
push
std
incb
jg
addb
incl
stos
std
add
mov
std
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
adcb
xchg
fcoms
popf
mov
rcll
add
sbbl
ljmp
fidivrl
outsl
mov
pop
and
inc
sti
jg
mov
sub
je
pop
fs
or
lods
imul
pop
xchg
aas
cmp
and
orl
jmp
ss
loop
sahf
sahf
cmp
mov
cltd
and
stos
rol
pushf
xor
lahf
aaa
std
sub
rorl
push
in
mov
pusha
test
out
ret
jmp
cltd
bound
hlt
inc
or
gs
pop
les
jmp
adc
mov
dec
and
xchg
pop
fistpl
adc
imul
push
std
leave
testl
sbb
mov
adc
stc
outsb
iret
aas
mov
push
adc
cmp
ret
sti
fcomps
xchg
test
mov
mov
stos
daa
bound
jns
inc
push
inc
cltd
xor
or
loop
sbb
in
icebp
shlb
add
loopne
mov
push
add
and
cmc
cs
inc
xchg
push
sbb
cmp
push
jl
ret
jne
add
mov
xchg
jo
cmp
adc
inc
aad
dec
mov
push
mov
jb
lahf
inc
inc
bound
jl
sbb
mov
add
mov
jb
sbb
inc
mov
pop
rorb
and
mov
negl
fnsetpm(287
cmpsl
js
push
std
add
inc
add
sub
out
stos
icebp
adc
test
ja
mov
leave
das
mov
in
mov
xchg
idivb
test
cmp
mov
add
fadd
inc
or
icebp
aam
push
and
or
subb
in
repz
xchg
js
out
mov
xchg
rorb
or
aam
lcall
sub
pop
cli
imul
in
push
mov
adc
sbb
out
jl
aaa
stc
pop
xor
cs
lods
iret
fidivrl
mov
fdivp
push
popf
cmp
div
sbb
mov
dec
pop
add
addr16
loop
pop
pop
cwtl
cmp
xlat
mov
or
push
loope
jle
scas
add
mov
xor
enter
fstl
loope
arpl
adc
jbe
iret
lea
fsubr
adc
mov
outsl
fstpt
dec
ss
dec
pop
sub
test
dec
fists
inc
pop
inc
add
mov
fildll
add
loop
jl
cmp
cmp
mov
test
dec
add
and
xchg
mov
push
add
test
pop
or
test
popf
roll
mov
out
lods
cmp
xlat
sub
addr16
add
mul
push
add
in
mov
push
and
scas
mov
cli
add
jb
clc
inc
push
mov
sahf
cmp
fnstsw
fidivrl
fdivl
pop
cs
xchg
mov
stos
mov
call
ja
push
aas
push
adc
sub
pop
mov
cmp
mov
scas
faddl
push
add
push
push
sbb
xchg
lea
mov
jg
movsl
cmp
and
mov
movsl
dec
shlb
cmp
cltd
les
xchg
mov
cmp
lods
adc
cmc
lods
push
mov
dec
or
insb
sub
test
lods
aam
jno
push
movsl
cmp
inc
push
orb
rclb
fwait
jbe
cld
pusha
jno
jg
inc
cltd
pop
lret
mov
jmp
and
sbb
int3
jnp
adc
xor
jmp
dec
inc
lret
fistl
xchg
mov
mov
inc
push
jne
or
hlt
cmp
push
mov
in
testb
mov
fadds
aas
cmp
xchg
mov
ljmp
das
movsb
testl
pushf
push
xchg
imul
xchg
xchg
and
jno
push
dec
lret
divl
xchg
add
push
divps
lret
cmpl
dec
xchg
pop
incb
mov
ret
sub
and
lods
sti
cmp
imul
add
fcmovnbe
add
ja
xor
xchg
aas
jo
ret
rcl
leave
adc
xchg
pop
jbe
push
mov
test
fdivrs
mov
pop
roll
xchg
decl
movsb
mov
mov
lret
push
shrb
aam
pushf
gs
test
jo
jae
sub
mov
mov
hlt
popa
es
in
cmp
enter
xchg
lods
in
mov
or
popf
imul
xchg
add
lods
mov
jp
xor
push
push
add
test
mov
mov
cmp
ficompl
ficomps
mul
cmp
out
cmp
stos
mov
in
mov
movsl
fsubp
or
add
xor
aad
adc
lcall
mov
dec
lods
inc
orl
leave
pusha
rcrl
repz
hlt
out
es
js
loope
add
xor
mov
test
inc
fstps
cmpsb
aam
rolb
push
jl
jmp
sbb
xchg
es
sarl
xor
data16
sarb
icebp
adc
jg
loop
into
or
lea
push
xlat
xchg
call
dec
loopne
cmc
sbb
gs
xor
sub
fildl
xor
mov
adc
xchg
js
xchg
mov
dec
xchg
test
jp
test
push
sbb
pop
mov
dec
sbb
add
into
icebp
rorb
xchg
jno
jmp
sub
enter
adc
inc
push
aad
pop
adc
inc
loopne
enter
sbb
adcl
dec
mov
ds
lcall
xchg
rcrb
cmp
push
inc
adc
push
and
or
jmp
dec
dec
adc
js
loopne
dec
dec
invd
mov
sarl
rolb
inc
adc
out
fwait
sub
sahf
clc
xor
call
push
imul
insb
jne
jnp
addb
dec
decb
loopne
stc
pop
ljmp
fcomp
dec
in
adc
dec
cmpsl
stos
mov
repnz
cmpsl
pop
mov
mov
pop
mov
pop
cli
fbld
pop
mov
sbb
lock
lock
pop
mov
add
das
lods
jne
push
sti
int
jns
inc
pop
dec
adc
push
pop
fwait
dec
ret
and
outsl
in
mov
push
mov
or
not
je
lahf
or
mov
sahf
or
mul
dec
cmpsl
scas
daa
jnp
test
repnz
hlt
lret
pop
xchg
lock
daa
mov
pop
adc
gs
add
push
arpl
adc
ja
cmc
mov
mov
loopne
pop
xchg
out
xchg
shl
mov
nop
out
lahf
shlb
ret
repz
test
in
inc
insl
or
sahf
data16
cwtl
mov
xchg
sub
adc
inc
or
dec
and
inc
mov
sahf
out
fdivl
or
mov
push
pop
inc
fisttpl
stc
ficoms
cmp
inc
incl
out
xchg
push
sahf
xor
jmp
or
je
in
lock
ss
push
mov
iret
xor
mov
push
push
push
in
test
shrl
popf
lcall
lock
test
jne
xor
addr16
hlt
or
test
mov
fidivl
fcomps
pop
sub
dec
pop
inc
push
xor
aaa
pop
outsl
das
push
adc
mov
mov
push
add
fnsave
push
fs
xchg
rol
addr16
mov
cwtl
mov
jnp
mov
fistpl
pop
das
mov
popa
inc
push
xorl
pop
push
lds
out
xchg
xor
or
cmp
imul
lret
out
repnz
pop
push
push
in
adc
lea
lds
fists
scas
inc
xor
push
adc
int3
arpl
test
sbb
sti
or
cmovle
js
and
pop
rolb
add
and
pop
cld
adc
lcall
out
sbb
mov
roll
sbb
test
sarb
dec
dec
hlt
mov
insl
push
ficompl
ljmp
jbe
test
mov
popf
pop
iret
ljmp
and
add
rclb
add
jmp
mov
cmp
insb
mov
adc
loope
xor
das
loop
popa
xor
dec
data16
mov
aad
mov
fcomi
mov
adc
stos
subb
mov
js
std
rorb
add
xchg
cs
and
add
mov
movsb
ja
and
mov
push
jmp
or
jne
push
mov
xchg
fdivl
mov
stc
nop
sbb
mov
mov
xchg
jmp
lods
adc
sub
into
dec
aam
cmp
pop
hlt
add
fisttpl
arpl
outsl
xchg
sub
or
mov
cmc
xchg
pop
repnz
out
xchg
cmp
xchg
sbb
lea
iret
rorl
xchg
out
xchg
sub
idiv
xchg
call
or
out
mov
adc
cmc
mov
nop
pop
mov
das
add
adc
and
rcl
pop
repz
sar
out
stc
xlat
cmpsl
push
out
clc
cmp
jmp
or
es
test
mov
push
icebp
xor
mov
ret
sbbl
les
cmp
stos
or
jns
adc
xchg
cs
mov
cmpb
mov
adc
das
mov
out
je
lret
mov
fdivl
divb
loope
out
int3
add
je
inc
fadds
xchg
pop
or
sbb
daa
mov
fwait
xor
clc
rcrl
jp
push
jns
data16
incl
cwtl
and
aaa
into
cmpsb
sbb
js
sti
jns
cs
arpl
je
jbe
inc
sub
and
xor
inc
jns
cmp
add
jge
jnp
ljmp
pop
sahf
aam
incl
pop
mov
and
inc
mov
jo
dec
inc
push
call
test
cmpsb
dec
sbb
mov
cmpl
dec
mov
addl
pop
out
inc
and
xchg
pop
sahf
xor
and
inc
rcrl
jmp
jnp
test
dec
daa
popa
clc
gs
test
pop
cmp
mov
jo
dec
loopne
xchg
pop
repz
hlt
mov
and
lahf
xchg
insb
mov
mov
fbstp
out
test
xor
jne
outsb
pop
icebp
scas
pop
fbstp
repz
adc
test
inc
fnstenv
fs
and
jmp
mov
add
std
mov
xchg
mov
sahf
xor
ret
addb
loopne
pop
jae
jle
imul
push
aaa
mov
mov
mov
push
out
mov
mov
inc
and
fs
inc
fidivl
js
sub
loope
inc
mov
pop
shrl
sbb
mov
dec
scas
insl
and
outsl
xchg
and
ja
dec
push
adcb
push
adc
pop
and
imul
jg
or
pop
push
push
in
popl
mov
sbb
fs
inc
inc
fnstenv
pop
sahf
mov
pop
inc
push
repnz
sub
clc
mov
sub
lods
pop
lea
sahf
incb
sub
rclb
mov
outsl
and
jne
inc
fdivl
ja
inc
movsl
pop
aad
dec
inc
stc
nop
jbe
outsl
push
pop
pop
xor
inc
jle
push
jo
sbbb
xchg
add
std
and
sbb
mov
add
push
mov
orl
cmp
push
jmp
dec
add
xchg
popa
pinsrw
cmp
repz
and
mov
arpl
xchg
fidivs
cmp
jae
into
arpl
mov
loopne
loop
or
pusha
ds
jecxz
stos
inc
pop
add
xchg
sub
xchg
jns
or
outsb
push
in
test
pop
sahf
pop
dec
jmp
push
cmp
ret
push
fidivl
push
jne
jno
mov
in
mov
lret
mov
mov
pop
es
push
es
jg
inc
push
mov
shlb
ret
adc
cmp
stc
nop
fninit
jp
clc
imul
movsl
mov
adc
iret
xchg
sahf
or
getsec
movsl
cmp
xor
mov
ret
sti
xchg
mov
add
leave
lods
cmpsl
ds
das
fildl
scas
inc
out
pop
dec
loop
bswap
pop
orl
mov
addr16
into
movsl
add
out
mov
ficompl
lret
stos
inc
or
push
jmp
mov
pop
dec
in
adc
imul
jae
sti
data16
xor
and
or
jg
mov
fistpll
xchg
repnz
je
mov
dec
cld
xchg
mov
es
pushf
cld
and
mov
sbbb
dec
and
lcall
sub
ja
data16
ss
mov
sar
xchg
stc
sbb
arpl
sbb
lahf
aas
fnsave
stc
nop
push
sbb
cmp
or
sbb
mov
pop
cmc
jnp
sbb
push
data16
das
ret
cmp
test
pusha
mov
adc
adc
sbb
fucomip
pusha
neg
jnp
or
xor
jge
or
scas
jge
mov
sub
or
mov
lds
mov
sbbb
xlat
sbbb
insb
nop
daa
je
js
fcoml
fwait
xor
sbbb
lock
sbb
shlb
cmp
adc
leave
test
sub
cmp
int
into
fisubrs
add
int
mov
pop
xchg
sub
and
js
sub
pusha
lcall
pop
cs
mov
inc
testl
mov
testb
xchg
and
cmp
lods
push
mov
fisttpll
mov
mov
push
out
test
rol
in
std
aad
adc
call
or
mov
sbb
rorl
das
shrl
leave
pop
lock
mov
fcmovnbe
xor
je
fcomps
fwait
xor
xor
in
pop
data16
inc
or
mov
adc
mov
loope
inc
fsubl
pop
repnz
out
mov
add
enter
pop
jmp
sahf
xor
out
mov
adc
andb
jmp
xchg
sbbb
pop
hlt
mov
fiaddl
xor
fidivrs
lods
jmp
mov
stc
mov
pop
xor
ja
lock
mov
fwait
mov
mov
js
fsts
add
mov
xorl
or
mov
pop
sbbb
in
mov
inc
mov
mov
xchg
ljmp
insl
add
push
mov
call
cld
push
xor
insb
fsubl
ds
add
sbb
cmp
cmp
xchg
and
fildll
dec
out
xor
ficompl
pusha
sbb
push
ja
inc
popf
jns
xor
hlt
mov
jmp
push
cwtl
loope
and
test
lods
in
and
xchg
fstpl
push
loop
adcb
sarb
mov
xor
and
and
addr16
add
jge
xchg
insl
cld
in
insl
je
lods
sbb
jb
out
movsl
lret
xchg
mov
jb
int
mov
lods
mov
inc
jb
fisubs
js
cs
scas
popl
jae
push
xchg
inc
sbb
mov
mov
pop
sti
or
push
mov
inc
aas
lret
std
nop
dec
or
adc
loope
jg
xlat
int3
push
mov
add
int
fnstsw
cmp
lahf
lahf
mov
pop
sti
and
inc
addps
xchg
iret
mov
mov
test
push
aas
fwait
iret
iret
sub
out
test
pusha
repnz
das
jno
jp
cmp
cwtl
das
mov
imul
scas
mov
loopne
mov
imul
cmpsl
sbb
movb
or
push
push
push
mov
mov
jnp
mov
push
sbb
cmpsb
fs
ret
orl
cmp
outsb
add
push
mov
jnp
imul
push
ds
lock
inc
fsts
mov
mul
call
jg
cmp
dec
out
pop
popf
xor
mov
mov
fisttps
jno
xor
popl
cmpsb
push
lods
xlat
fsub
jl
stc
xor
sub
lcall
and
iret
sarb
add
mov
push
inc
lods
inc
jbe
jnp
cmpsl
xchg
lret
enter
ljmp
dec
cmp
insl
mov
ret
outsb
pusha
lret
lret
shlb
mov
ret
stos
jmp
xchg
rcrb
xorl
je
repnz
gs
cs
inc
mov
in
sahf
mov
inc
fdivrs
rol
cmp
popf
stc
mul
rcl
sub
out
sbb
sbb
mov
sub
rclb
iret
and
sti
mov
xor
jmp
ds
lds
xchg
inc
xchg
jecxz
ret
data16
xchg
in
cwtl
adc
ss
mov
or
cmp
cmp
push
ficompl
or
jns
pop
add
dec
ss
cs
shrb
shlb
xchg
and
push
movsl
das
jns
mov
int3
std
mov
lds
push
jecxz
inc
xchg
cmc
cltd
movsb
cmp
push
mov
dec
in
ret
fcomps
pop
in
dec
in
jbe
add
leave
mov
sti
insb
mov
sahf
sbb
mov
out
outsb
and
and
jecxz
jecxz
mov
xchg
add
jecxz
mov
dec
in
push
out
inc
cmpsb
jmp
fsubs
jns
stc
leave
pusha
sub
int3
arpl
pop
cmc
aaa
popf
push
iret
pop
push
out
mov
dec
loope
test
sub
inc
dec
jecxz
sti
mov
ja
in
mov
scas
and
pushf
inc
popf
jno
jno
mov
mov
sbb
ret
pop
add
inc
jmp
out
daa
cld
sub
mov
and
dec
xor
jns
sbb
inc
leave
aad
sti
add
xchg
or
test
push
push
xchg
in
xchg
mov
mov
jne
leave
lret
mov
sub
lods
fimuls
mov
bound
pop
cmc
ds
imul
or
mov
fidivs
in
sbb
orb
fwait
or
mov
call
hlt
inc
cmpsl
in
sbb
jns
cmp
movsl
or
mov
fstpl
movsb
and
outsb
xor
ret
adc
jb
fisttpll
sbb
cmpsb
pop
imul
bound
mov
push
movsb
lahf
movsb
and
das
lods
jecxz
push
fstpt
push
mov
pop
shrl
loop
cmp
dec
rclb
mov
fidivs
stos
outsl
add
xchg
mov
cs
stos
ficoml
cmp
movsb
ret
pop
xlat
dec
dec
loopne
mul
ja
movsb
imul
icebp
lea
and
dec
stos
inc
jl
sub
aam
inc
jg
mov
mov
fiaddl
fsub
sub
std
xor
push
test
push
test
jmp
push
sub
dec
int
or
lods
jmp
inc
xlat
push
hlt
pop
mov
jae
fisubs
stc
negb
fwait
xor
icebp
mov
or
sarl
lret
cmp
and
push
jmp
inc
pusha
divl
pop
repnz
dec
dec
out
sub
or
stc
sahf
adc
dec
pop
icebp
push
xchg
cmpsb
mov
sbb
mov
das
adc
mov
jae
xor
pop
cmc
and
xchg
jmp
mov
enter
add
xchg
out
pop
pop
sbb
jle
or
xor
out
xchg
cmpsl
and
add
or
int
lods
inc
cltd
xchg
and
ss
ret
pop
xor
pusha
divl
popa
clc
xor
push
out
dec
aaa
add
test
pop
sahf
xchg
test
gs
sub
test
lcall
ret
fimuls
movsl
cmp
xor
push
addb
mov
cmp
outsl
popf
dec
scas
and
lahf
xchg
loopne
fs
sahf
mov
add
mov
cli
xchg
push
lock
pop
cmp
rorl
in
test
insb
js
sahf
pusha
jle
ss
add
test
out
out
push
xlat
inc
repnz
pop
add
sbb
push
add
xchg
xor
add
mov
in
in
pop
loope
testb
xchg
test
pop
jnp
pop
dec
testl
call
lods
mov
dec
pushf
negl
cmp
xlat
cmp
xchg
jl
or
test
mov
push
sti
and
sub
lds
cmpb
mov
rcrb
sub
bound
adc
cmp
int3
arpl
mov
std
xchg
outsb
icebp
insl
and
mov
dec
push
inc
xlat
gs
shl
dec
mov
lahf
mov
cmove
aaa
dec
imul
push
js
mov
movsb
lret
sub
and
mov
sbb
cmp
stos
lret
lds
fdivl
or
jl
jno
jbe
adc
ds
insl
xchg
popf
cmp
pop
inc
fistl
lcall
mov
imul
adc
sbb
mov
test
js
inc
fstp
push
push
popf
inc
mov
mov
aaa
inc
fisubrl
rclb
cmpsl
ret
jnp
jecxz
sbb
mov
add
and
ja
push
cwtl
out
xchg
xor
xchg
mov
adc
jge
mov
pop
push
popf
scas
outsb
inc
fidivs
sarb
add
cld
xor
shrl
push
insl
movsb
mov
adc
dec
fists
iret
data16
inc
fadds
ds
loope
and
out
decl
in
mov
sub
cmp
pop
and
testb
daa
mov
dec
loop
rcr
jb
loop
lods
fldl
xchg
sub
ret
mov
ret
gs
mov
test
mov
jg
fstps
popf
xor
jo
ret
popa
mov
sub
rolb
cmpb
repnz
mov
hlt
ljmp
inc
popa
push
ss
pop
sbbl
lcall
out
out
mov
das
std
xacquire
hlt
fwait
xchg
test
mov
push
ret
cli
cmp
mov
dec
movsb
mov
in
push
mov
in
repz
jbe
sti
movsb
adc
aad
dec
rorb
aaa
fldcw
imul
pushf
popa
inc
fistl
mov
cmpsb
das
fstpt
or
sti
xchg
scas
jb
js
rorb
nop
cmpsl
fnstsw
stc
nop
xor
fwait
xor
mov
xchg
btr
or
jl
lds
arpl
fcomip
repz
add
xor
mov
xchg
mov
sbb
pop
lock
jge
out
push
jle
dec
sub
pushf
sbb
mov
mov
outsb
stos
jnp
jo
insl
bound
jne
loop
push
sub
aaa
dec
cmp
dec
dec
dec
int3
xor
in
aam
xchg
loope
adc
sub
in
shrl
test
adc
xor
push
jne
lret
pop
xor
push
dec
push
loop
or
cmp
subl
mov
subl
ret
bnd
or
das
mov
dec
fiaddl
dec
cmp
push
aaa
jb
adc
pop
aaa
into
mov
je
rcrb
xor
sbb
vmwrite
in
xchg
lock
push
outsb
jne
ret
xchg
cmc
inc
or
mov
imul
xchg
inc
mov
cmp
das
cmp
repnz
push
mov
std
adc
stos
movl
sbb
pop
xor
fadds
push
aaa
repnz
jecxz
stos
adc
insb
adc
inc
out
insb
fdivl
mov
sarb
and
xor
push
mov
es
pop
inc
cmp
js
mov
aam
cld
inc
loop
je
add
jbe
into
sub
mov
mov
lahf
ss
aad
adc
jnp
xor
std
jg
inc
int3
cmp
je
shl
mov
jle
stc
into
ffree
fs
out
lods
or
repnz
fnsave
push
ljmp
push
int
cmpsb
insl
adc
shlb
add
cltd
scas
xchg
cmpsl
ljmp
into
dec
cld
adc
and
outsb
aad
ljmp
loope
sbb
aad
outsb
pop
fwait
aas
adc
js
pop
push
shrl
imul
cmp
sarl
mov
jno
jb
stos
add
dec
mov
push
pop
cmc
test
add
pop
je
loope
jg
jmp
fnsave
sub
rcrb
push
cli
inc
pop
cmp
pop
mov
lahf
enter
lea
mov
mov
xchg
scas
pushf
dec
push
stos
add
cmpsb
daa
stc
shlb
fwait
lret
int
pop
cli
insl
outsb
cld
arpl
xchg
sbb
and
mov
mov
fbstp
out
lods
mov
adc
jae
pop
scas
dec
dec
int
pop
cs
push
shll
xor
sbb
sbb
mov
out
mov
xor
xchg
or
cmpsb
inc
mov
shrl
sbbl
divl
rorl
jl
lds
push
rcrl
mov
jp
push
loopne
jg
push
stc
xchg
gs
sbb
pop
cmpsl
dec
push
xchg
add
stos
scas
jae
adc
jnp
or
insl
ss
mov
hlt
aaa
cmp
lcall
dec
scas
jg
sbb
addr16
adc
push
mov
mov
xchg
mov
movb
mov
mov
mov
xor
cltd
adc
lret
jbe
sarb
and
pop
aas
dec
cmc
mov
fs
std
xchg
cs
insb
clc
push
inc
or
mov
adc
dec
pop
mov
adc
insb
sbb
jg,pn
push
lds
push
js
dec
pusha
mov
data16
sahf
xor
sub
in
push
sub
add
mov
sbb
fnstenv
cmp
pop
adc
fwait
imul
lret
repnz
std
pop
xchg
ss
addr16
sti
mov
movsb
push
loope
add
out
push
add
test
or
mov
inc
daa
cld
xor
test
push
das
sti
cmp
cmp
or
daa
jne
and
and
push
ja
out
jno
int
mov
pop
insb
pop
lcall
pusha
sub
insl
imull
ja
cmp
dec
insb
jp
mov
nop
xor
jmp
inc
fimull
xchg
pop
fcompl
pop
pop
sarb
add
cmpl
xchg
dec
movsl
pop
les
add
movsw
adc
outsb
movsl
and
dec
in
dec
fnstenv
mov
out
in
out
std
push
pop
fdivl
push
dec
filds
adc
mov
out
in
mov
adc
or
xchg
push
sub
and
adc
inc
adc
jbe
insl
daa
and
jae
push
mov
bound
mov
jno
daa
sub
jbe
and
notl
sub
cmc
jbe
push
pop
fistps
notb
shll
pusha
xor
or
xchg
aam
mov
push
mov
hlt
mov
pushf
mov
aad
sub
pop
push
pop
push
fmul
into
test
mov
loopne
sub
mov
sbb
iret
jo
iret
enterw
sub
loopne
pusha
movsb
shrl
pop
jp
or
pushf
jle
lcall
mov
sub
mov
in
leave
addr16
popf
push
inc
dec
pusha
or
into
loope
stos
sub
ret
cld
xchg
cmc
jnp
or
cmp
shrb
std
movsl
lret
jle
mov
aad
ljmp
mov
mov
mov
xor
add
jno
cmp
repnz
push
sbb
pusha
pop
push
scas
inc
xchg
xchg
fld
mov
je
in
loopne
xchg
push
lds
push
sarb
addr16
dec
inc
jmp
outsl
cmp
mov
push
fcoml
hlt
leave
sbb
dec
je
mov
inc
dec
nop
daa
jge
xchg
push
pusha
repnz
push
xor
pop
data16
adc
cmp
sbb
out
out
shrb
loope
mov
cmpb
xor
mov
pop
insl
pop
sti
jp
inc
fwait
mov
sbb
xchg
jnp
cmp
icebp
dec
cwtl
aam
stos
inc
pminsw
xchg
mov
pop
jno
dec
jnp
adc
icebp
jbe
sbb
je
into
lock
jae
fs
xchg
mov
mov
mov
or
or
dec
cmp
and
push
pop
add
or
sbb
jne
add
rolb
adc
xor
cs
jmp
push
push
roll
cmpsb
out
shll
push
mov
int3
mov
mov
ja
fdivs
lcall
push
xchg
and
fmul
dec
inc
fcompl
fsubrs
pop
and
jmp
xchg
mov
stos
mov
mov
inc
test
xchg
pop
xchg
aam
rclb
enter
pusha
imull
out
mov
inc
or
xchg
mov
mov
enter
xchg
jo
rorl
loop
mov
adc
mov
in
or
jge
mov
add
inc
xchg
sbb
sub
lock
mov
mov
lcall
mov
jle
fmul
cmp
cmpsl
xchg
gs
lods
faddl
adc
mov
test
scas
mov
es
and
lock
mov
mov
adcb
in
mov
lods
les
gs
ds
test
sbb
inc
sub
push
jmp
mov
mov
xor
icebp
cmp
mov
sbb
fidivl
push
scas
and
cwtl
jp
xlat
push
in
jmp
mov
push
out
inc
test
rol
xchg
test
in
or
and
dec
or
jns
leave
out
mov
aaa
sbb
pushf
and
xchg
jmp
loope
stos
inc
mov
popf
xor
lcall
ret
fistps
jno
aas
add
enter
sbb
nop
mov
and
data16
icebp
loopne
add
lods
inc
sbb
pop
scas
dec
repnz
aam
cld
out
roll
repz
dec
xchg
stos
push
jnp
lds
sti
mov
jnp
int
insl
cmc
add
jle
fists
pop
movsb
pushf
add
and
sbb
aam
cmp
mov
sub
pop
lea
out
fadds
push
mov
aam
jae
adc
jle
lods
inc
filds
xlat
and
out
jmp
in
movsl
lahf
js
cmpsl
repz
dec
mov
loop
insl
mov
repnz
mov
sti
daa
and
sbbl
into
add
aad
in
fidivl
and
cs
push
xor
lea
out
mov
xor
or
out
imul
in
andb
arpl
xor
mov
and
mov
cmpsb
jl
fidivs
insl
call
or
mov
lret
dec
jb
scas
fwait
push
adcb
roll
popf
push
adc
mov
sbb
push
fdivl
push
rcl
ss
addr16
pop
push
or
lcallw
scas
les
cmc
iret
add
mov
push
jmp
mov
adc
xchg
cmp
or
popf
ljmp
fmuls
fcmovbe
or
aas
cmp
jo
insb
out
jp
jnp
test
fnstsw
mov
shrl
mov
lahf
ret
movsw
loop
xchg
xchg
mov
in
jl
and
jle
push
ja
lods
inc
mov
clc
xor
stc
jecxz
pop
fldl
roll
or
ljmp
adc
bound
sub
jle
mov
iret
lahf
cltd
pop
mov
movsb
pop
jg
les
lea
inc
push
lock
out
into
rolb
pop
or
xchg
jo
ror
cmp
pmulhuw
cmpsb
rol
adc
pop
aaa
sub
push
mov
sbb
and
sub
lcall
and
sbb
push
jae
sub
push
mov
cltd
pushf
pushf
rcrb
mov
add
rorb
pop
into
or
cmp
lahf
int
and
divb
inc
jne
xchg
jne
leave
inc
pop
das
insb
add
mov
push
div
mov
jae
inc
cmpsl
notl
jb
ret
xchg
fnsave
fsubs
repnz
sbb
mov
and
ficoml
or
push
cltd
sub
popf
mov
gs
out
mov
or
notb
jae
es
or
dec
lcall
inc
cwtl
stos
es
insb
pushf
enter
cli
scas
xchg
out
fdivs
ret
ret
sbb
sub
xor
jae
insl
outsl
shlb
rcll
stc
adc
jnp
push
cs
cmp
inc
cmp
xchg
dec
fistl
inc
sub
or
imul
pop
scas
mov
enter
stos
fs
in
ljmp
fucomp
pop
and
fnstcw
xchg
outsb
xchg
orl
insb
push
cli
mov
sub
fisubrl
push
shrl
div
push
fucomip
mov
sbb
xor
loop
inc
fwait
xchg
jo
insl
shrb
test
dec
sub
jo
push
sbb
jge
push
push
jns
jnp
imul
pop
addr16
push
xchg
sbb
stos
enter
add
push
cmp
add
mov
mov
pop
mov
addl
test
out
popa
sbb
enter
jecxz
fwait
push
inc
mov
add
mov
xor
mov
loop
mov
inc
pop
mov
repz
scas
lods
rcrb
call
push
jl
dec
pop
loopew
sbb
addr16
and
xchg
mov
cmp
cmpsl
inc
icebp
in
lret
push
push
adc
xor
sub
mov
cmp
arpl
sub
shl
mov
mov
stos
and
and
lods
pop
lea
adc
iret
add
pop
and
das
shlb
negl
push
enter
fsubrs
outsb
std
sbb
dec
sub
mov
std
aas
in
mov
adc
aam
add
out
loopne
clc
cmp
pop
in
divl
xchg
adc
jnp
pop
iret
test
enter
xchg
jb
sub
je
leave
out
test
sbb
call
scas
adc
fwait
aad
dec
add
popf
xchg
add
jbe
or
xorl
pop
mov
mov
xor
enter
xchg
mov
mov
jno
jg
dec
jne
in
pop
fs
in
or
int
add
cmp
add
cs
stc
inc
aad
inc
or
push
mov
sbb
aas
pushf
cs
lds
xor
lcall
or
andb
sub
cmp
shll
loopne
mov
inc
pop
push
cmp
fisttpl
xchg
cs
cmpsl
subl
xchg
sbb
xchg
out
enter
cmp
idivl
das
test
pop
out
pop
jne
sub
lcall
bswap
inc
pop
imul
or
cmp
xor
pushl
push
jno
scas
inc
push
xchg
xlat
aas
sub
scas
mov
cmp
push
dec
mov
mov
fnstenv
add
jbe
pop
test
push
add
add
inc
dec
add
dec
cmp
xchg
mov
les
mov
in
jle
cwtl
mov
js
pushf
shrb
sub
loopne
daa
dec
mov
xor
jo
push
ds
loopne
push
movsl
and
and
jbe
xor
mov
roll
lods
xchg
mov
inc
stos
ret
pop
icebp
sbb
rolb
insl
add
sub
pop
adc
pusha
push
xlat
cmp
pushf
aaa
xor
mov
shlb
xchg
push
movsb
jo
in
mov
js
or
push
pop
dec
std
jo
repz
xchg
mov
cmp
jo
sub
mov
fsts
add
jo
or
dec
imul
outsl
cmp
dec
pop
inc
fildll
insl
pop
scas
pop
outsl
cmp
sub
or
jae
mov
cmp
movsb
xchg
or
inc
push
xchg
xorb
mov
arpl
push
lret
ret
sub
sub
fcoml
jecxz
mov
in
js
insl
jle
push
pop
jmp
dec
cmp
out
and
dec
cltd
pop
sbb
xchg
push
stos
pop
pushf
push
fnstenv
mov
loope
push
test
inc
mov
and
cltd
mov
add
adc
loop
push
pusha
push
data16
hlt
orl
inc
xchg
shrl
sub
pushf
pop
repz
pushf
call
pop
jge
rcrl
in
inc
mov
xor
fldt
mov
pop
jno
cmpsb
shr
xor
in
cmpsl
sarb
pop
out
mov
das
imul
mov
sub
cmc
icebp
sbb
or
test
push
push
jae
push
inc
mov
loop
outsl
fcomps
adc
inc
adc
leave
xchg
fs
mov
ret
or
je,pn
je
xor
mov
sti
or
loopne
push
adc
mov
aam
popa
clc
cmp
lock
out
loop
push
shl
add
out
test
adc
push
int3
arpl
fnstenv
lahf
incl
std
mov
insb
or
mov
adc
and
add
les
mov
sub
test
xchg
stc
sub
cltd
nop
inc
xlat
add
insl
roll
pop
xor
sub
leave
shrl
cmp
xchg
mov
lds
jl
hlt
add
test
les
imulb
pop
jge
mov
movsb
sahf
lods
inc
rol
aad
mov
mov
sub
pop
push
jmp
das
in
iret
jbe
fisttpl
add
adc
xchg
sbb
xchg
int3
mov
imul
sub
hlt
mov
loopne
sbb
rclb
int3
arpl
test
and
mov
loope
pushf
adc
inc
ja
int
adc
addl
mov
in
xchg
aas
cwtl
pop
daa
mov
pop
dec
jae
pop
push
dec
push
xor
mov
or
insl
add
adc
test
mov
xor
adc
mov
ret
and
push
movsl
leave
inc
sti
xchg
ja
sub
sbb
dec
loope
mov
xchg
lea
adc
push
mov
add
xor
ret
mov
das
movsb
add
xchg
lods
lds
fadds
xor
fs
test
inc
lcall
xchg
xor
xor
cmp
sahf
xor
sbb
cwtl
das
lods
lret
iret
mov
dec
fistpl
orl
mov
or
push
add
arpl
push
jmp
repz
sub
les
enter
xchg
jmp
pop
lahf
fcomp
jp
or
iret
cmp
imul
xchg
jge
or
inc
push
xchg
imul
in
test
and
cmpsl
cli
xchg
inc
fldl
adc
aaa
addr16
inc
pop
lock
push
fs
inc
mov
and
stc
imul
iret
lcall
outsb
mov
arpl
mov
mov
orb
pushl
adc
fs
pusha
notl
inc
mov
aaa
dec
lahf
lret
xchg
out
test
scas
push
lods
pop
mov
xor
inc
cmpsl
inc
mov
test
sbb
jnp
jnp
movsb
dec
jecxz
jl
adc
push
rclb
data16
aad
mov
fwait
in
sti
xchg
stos
push
pop
mov
push
addr16
aaa
mov
xor
xlat
test
sbb
jecxz
in
and
or
cmpsb
cmp
pop
or
cmp
iret
pop
xchg
mov
int3
sarb
stc
nop
out
xlat
sub
movsl
into
cmp
jle
out
sub
out
dec
mov
and
mov
jle
mov
xlat
xorps
loop
std
movsb
jge
push
sub
xchg
jno
fcomi
cmc
mov
mov
arpl
testl
enter
idivb
mov
sbb
or
dec
mov
push
lds
fistpl
fwait
mov
push
mov
test
cbtw
shr
scas
inc
and
jae
jmp
mov
icebp
dec
dec
pop
mov
leave
out
scas
je
mov
pushf
mov
inc
xlat
adc
imul
aaa
imul
xor
push
or
imull
jge
outsb
inc
out
pop
or
lret
clc
int3
subb
aam
jno
cld
sub
loopne
iret
xchg
add
aam
or
test
js
add
push
ja
enter
mov
sub
add
mov
cmp
lcall
pop
dec
repz
hlt
pop
stc
mov
xchg
pop
mov
iret
cmpsb
and
pop
inc
mov
inc
fwait
and
lea
mov
mov
test
fcompl
mov
and
jae
test
notb
mov
das
out
push
xlat
loope
aas
aad
xchg
sub
dec
ficoms
std
pop
out
dec
sub
je
mov
loop
dec
loope
add
mov
mov
dec
loopne
hlt
push
in
lret
jmp
jmp
or
fidivl
mov
push
or
jle
shrl
push
sbb
xor
add
test
xor
xchg
popf
push
adc
pop
adc
movsb
imul
dec
cmc
add
push
jmp
leave
or
test
std
mov
das
lahf
leave
pusha
rcll
and
push
movsb
addr16
cmc
loopne
mov
lcall
mov
pop
sar
pminsw
shlb
int
mov
out
jae
leave
push
xchg
cmp
cld
out
fsubr
enter
aam
add
fildl
in
in
sbb
mov
xlat
icebp
mov
xchg
out
pop
testb
lea
xchg
lret
mov
sbb
lcall
popf
add
into
gs
and
push
pop
mov
jb
fnstenv
aaa
or
jb
fwait
xor
push
jmp
lcall
cs
jle
and
mov
add
lahf
cmp
push
pop
jp
jbe
jl
and
ret
mov
sti
adc
imul
imul
pop
in
mov
xchg
sub
cmp
aas
popa
rorl
cmp
dec
dec
push
dec
mov
inc
inc
int3
fs
and
inc
lea
push
pop
sbb
out
sahf
push
ret
pop
jo
or
xchg
xor
fisttpl
or
inc
jne
es
mov
outsb
mov
das
clc
sub
cmp
aas
mov
test
in
xchg
mov
push
mov
stos
cld
jbe
cs
push
imul
push
aam
in
leave
cmp
mov
ja
xor
mov
imul
cmpsl
mov
ss
fsub
xchg
mov
arpl
mov
lahf
mov
push
fstpt
lods
inc
lds
push
movl
push
mov
lret
bound
fdivrs
and
push
mov
shrb
inc
shlb
fsubl
cld
and
jns
lret
bound
jmp
jbe
fmull
into
or
inc
jnp
cmp
cmp
cmc
inc
fcmovne
push
iret
outsw
in
das
leave
nop
xchg
stc
ljmp
cmpsl
arpl
enter
mull
xor
fdivrp
inc
fld
incl
ret
jecxz
lret
ret
ficoms
mov
iret
adc
adc
mov
push
in
mov
ds
daa
mov
outsb
hlt
imul
adc
outsb
pusha
xor
stos
inc
sbb
addr16
inc
fsubrl
into
das
decl
jmp
cmp
xor
sub
sub
stos
mov
xchg
pop
repz
dec
in
rcrb
mov
adc
inc
cmpsb
cmp
clc
bound
mov
mov
ret
xrelease
adc
repz
mov
sbb
or
stc
nop
mov
lds
in
gs
pop
push
mov
cltd
jge
mov
or
mov
cmpl
gs
push
sub
mov
stos
push
or
in
mov
mov
jl
or
lcall
xchg
notl
adc
mov
ret
fsubs
or
mov
fistps
stos
cmp
loop
lcall
sub
daa
loope
xchg
dec
fisttps
scas
cmp
sti
push
mov
lods
sbb
enter
cmp
ds
insl
rcrb
sahf
loope
jl
mov
mov
or
mov
fdivl
lods
iret
data16
lahf
in
sub
cmpsb
cmp
jo
aam
xor
push
mov
fs
call
sub
orb
mov
fnsave
stos
inc
adc
cwtl
das
lret
dec
mov
lret
bound
ds
xor
mov
popa
push
mov
jnp
aaa
mov
xor
push
mov
cmp
xchg
sub
fnstenv
pop
mov
lods
inc
xchg
shl
mov
mov
inc
add
sub
shll
loopne
js
pop
ds
mov
pop
lds
pop
icebp
cmp
pop
pop
out
nop
and
push
mov
adc
jbe
cmp
add
sub
popa
clc
test
dec
jns
aaa
into
xlat
lcall
sub
icebp
mov
dec
jae
jge
jb
xchg
sub
xchg
sub
inc
and
dec
loop
inc
int
ja
imul
lret
push
mov
into
loope
add
sub
push
push
inc
fldl
das
mov
mov
outsl
jnp
mov
sarl
xchg
sub
mov
mov
mov
fsts
pop
call
daa
mov
xchg
ljmp
jecxz
lds
push
out
mov
outsb
add
sahf
jb
and
lods
push
inc
das
mov
or
iret
jecxz
or
out
adc
add
pop
std
or
inc
add
je
mov
add
fiadds
mov
xor
inc
mov
sub
push
jp
push
ret
jp
sti
insb
xchg
nop
dec
mov
jg
outsl
xlat
adc
insl
nop
jns
add
ss
out
cmp
xor
mov
lcall
mov
cli
test
lcall
mov
lea
and
mov
adc
and
push
xchg
repnz
jecxz
shlb
xchg
adc
xchg
mov
mov
sbb
and
pop
xchg
jns
subb
sti
xchg
pop
xchg
sub
cmp
loop
xchg
pop
inc
lods
js
pop
lds
pop
lods
and
sbb
sbbl
cmovle
lods
xchg
es
je
push
mov
sbb
popa
stos
clc
js
subl
mov
pop
push
and
out
cmpsb
jae
inc
sub
in
mov
in
xor
xchg
pop
and
enter
adcb
pop
adc
stc
add
das
pop
repz
test
andl
shl
sti
xchg
daa
cmc
jle
mov
add
and
insl
jno
mov
scas
jns
xchg
test
aaa
xchg
out
xor
cmpsl
in
pop
cs
hlt
fdivl
out
in
mov
fisubrl
lea
add
and
sub
enter
lcall
fstps
mov
aad
xchg
pop
lea
mov
and
adc
lods
push
xchg
movsb
mov
aad
rcrl
ds
je
shlb
mov
pop
pop
xor
mov
stos
cli
cmp
jb
popf
stos
add
push
adcl
inc
jb
mov
push
lret
cld
outsb
cmc
dec
hlt
or
pop
push
fsubrl
jle
lock
mov
cwtl
inc
loop
insl
iret
aad
adc
or
out
out
out
sbb
aam
dec
xchg
jnp
les
adc
int3
lret
les
push
sub
call
or
sbb
adc
xor
mov
not
cmp
clc
jp
int
xor
scas
jmp
push
or
jle
cmp
pop
mov
cmp
mov
xchg
xlat
test
or
int3
daa
sub
xlat
decl
and
dec
and
mov
push
cwtl
and
enter
pop
jns
pusha
pop
mov
fstps
dec
imul
xchg
rep
jg
aaa
int
imul
lcall
cltd
test
int
pop
scas
inc
lock
stos
pop
mov
push
sub
pusha
jg
inc
movsb
inc
cwtl
outsb
jl
dec
jns
in
not
sub
adc
mov
mov
jne
add
call
or
xchg
lahf
pop
mov
pop
mov
push
mov
out
push
jbe
std
ficomps
sti
cli
ja
mov
or
ret
mov
loop
in
mov
xor
add
in
out
mov
mov
addr16
xlat
mov
jl
rorb
mov
add
sub
push
push
adc
add
daa
mov
jae
add
dec
mov
xchg
inc
fwait
test
scas
inc
xchg
not
cmp
add
loopne
push
xchg
push
imulb
fistl
orb
add
lds
cmp
mov
add
pop
movsb
mov
pop
jbe
mov
jl
and
sbb
jecxz
aam
enter
je
sub
pop
lods
ljmp
jbe
bound
test
xchg
and
cltd
sti
scas
inc
mov
mov
mov
idivb
mov
dec
and
pushf
bound
jne
lea
rep
jnp
lcall
jne
ds
pusha
inc
sub
bndstx
into
and
inc
push
jmp
int3
dec
stos
ret
xlat
jb
mov
ljmp
mov
lea
outsl
mov
dec
outsl
mov
shlb
mov
shl
pusha
dec
mov
xor
out
jge
mov
stc
or
andl
xchg
push
test
cmp
loopne
lret
iret
push
jmp
inc
and
adc
mov
aam
pop
xor
fmuls
jle
stc
inc
inc
fistl
seto
pop
mov
out
adc
testl
or
cwtl
add
in
arpl
jo
push
ret
cs
cmpsl
pop
das
loope
popa
adc
mov
xor
inc
mov
test
or
popa
mov
fstpt
mov
xchg
loope
insb
or
sbb
adc
adc
cs
mov
dec
mov
shll
cli
ljmp
std
dec
adc
insb
xchg
xor
neg
es
jb
pusha
stc
pop
dec
imul
cmp
mov
dec
test
jnp
lods
or
loopne
add
fcomps
into
jle
sbb
in
and
jg,pn
mov
mov
xchg
outsb
sub
sti
push
push
popa
das
andb
lcall
inc
inc
mov
fs
mov
iret
iret
add
adc
mov
idivb
nop
add
xorb
jns
es
imul
fsts
ja
in
shlb
clc
mov
sbb
stos
xchg
sub
repnz
push
mov
push
lds
das
shll
mov
std
jle
ljmp
scas
lods
mov
dec
sarl
add
ljmp
xor
jmp
sbbb
sarl
insl
mov
and
xchg
add
ss
push
in
xchg
push
jmp
mov
xor
xchg
cmp
mov
incb
jecxz
iret
xlat
push
pushf
mov
adc
stc
lcall
dec
fs
stos
pushf
push
jae
mov
test
pop
jecxz
sbb
clc
jp
gs
sbb
push
mov
stos
xchg
and
mov
aad
loope
das
mov
sbb
cmc
mov
mov
sbb
dec
mov
cmp
aaa
lcall
hlt
cmpsb
cmp
rcll
dec
sbb
shl
lea
pop
int3
mov
push
shr
pop
sub
sbb
xchg
pop
inc
cld
aas
cmp
xchg
pushf
xor
or
mov
fcmovnu
xor
stc
dec
cmpsl
inc
sub
testb
sub
xchg
sub
enter
sub
xchg
pop
xchg
shrb
xchg
sub
add
hlt
or
std
out
xchg
cs
into
mov
nop
push
pop
outsl
test
inc
adc
dec
pop
dec
loope
cli
jmp
fcmovbe
xor
cmp
jns
mov
push
rcrl
cmpsl
sub
hlt
fbstp
mov
stc
inc
fdivl
push
mov
pop
mov
into
loop
aas
mov
mov
xchg
xor
inc
mov
js
bound
inc
jmp
es
hlt
sti
adc
ss
andl
repnz
rcrl
cmp
mov
lock
push
add
sbb
call
mov
das
out
push
push
dec
xchg
mov
fidivs
sub
test
jnp
mov
cmc
ljmp
data16
push
rcll
aam
je
pop
mov
jle
orb
sub
mov
push
sbbl
fbstp
lret
and
ds
mov
sti
pop
sub
or
cmp
xchg
test
arpl
jp
sarl
outsl
clc
xchg
or
jp
and
test
sub
in
iret
fildl
mov
mov
sbb
pop
adc
fs
sub
daa
push
out
daa
daa
nop
outsl
int
gs
xchg
pop
xchg
test
into
outsl
push
add
mov
xor
adc
rcr
jno
or
mov
std
cwtl
lock
test
inc
icebp
scas
js
das
shll
mov
cmpsb
out
xlat
cmp
das
pop
cmp
les
pop
aam
stos
sub
nop
jbe
ds
cltd
mov
dec
leave
dec
fwait
jae
testl
xor
shrl
enter
mov
push
push
mov
push
cld
xchg
test
fists
mov
fldcw
mov
shrl
insl
push
or
test
setno
pop
xor
xchg
mov
xchg
sbb
dec
jg
push
cli
imul
sbb
in
addr16
cmp
add
mov
and
mov
movsl
rcrl
xrelease
imul
dec
mov
or
stos
jne
scas
iret
mov
sti
push
or
mov
std
xchg
sub
cmpsb
in
jo
jp
daa
push
adc
mov
add
xchg
xor
std
cmp
push
in
jbe
jns
nop
xchg
jae
leave
mov
inc
and
loopne
adc
push
xor
lock
and
pusha
mov
bound
shlb
popa
lods
inc
not
mov
cs
dec
icebp
cmp
push
pop
scas
pop
sbbb
jb
mov
inc
dec
inc
adc
push
and
pop
shrl
lret
gs
xchg
icebp
movsl
add
pop
adc
mov
leave
scas
mov
push
pop
add
xor
lods
push
sub
jge
pop
mov
stos
xor
fdivl
dec
push
and
xchg
xchg
xor
xor
xor
push
push
fcomps
adc
sarb
lods
repz
or
or
fnstenv
aad
jnp
mov
xor
call
mov
xor
add
pop
push
mov
vpaddusb
lods
arpl
loope
ret
jle
movb
popa
in
jle
inc
mov
or
or
push
clc
repz
adc
and
mov
enter
lret
mov
add
outsb
push
outsb
test
scas
or
pop
mov
dec
out
fwait
and
int3
xchg
cmp
dec
xchg
hlt
push
lods
mov
push
aas
mov
xsha1
cmpsb
push
flds
inc
pop
fbstp
pop
xor
xchg
lods
scas
mov
sarb
pop
mov
rcr
in
faddl
aam
xor
add
sahf
xchg
jno
add
xchg
in
ret
adc
sub
imul
popf
icebp
scas
inc
and
xor
fcmovne
int
cld
cld
mov
jo
mov
jb
mov
xchg
negb
aam
sub
lds
testb
jbe
and
adcb
ret
jg
cmp
pop
scas
cmc
cmpsl
fidivrl
push
ss
dec
mov
mov
xchg
enter
inc
call
mov
mov
pop
xor
pop
jne
push
push
out
subb
clc
pop
inc
div
jp
movsl
pusha
sbb
adc
add
bound
les
jo
in
mov
mov
ljmp
xlat
mov
add
es
sahf
xlat
cs
pop
mov
or
sarl
xchg
stos
in
dec
adc
pop
int3
pop
and
pop
push
cli
pushf
xor
xor
mov
jl
xor
les
imul
pop
pop
pop
mov
push
cmc
pushf
mov
adc
xchg
into
and
add
iret
jp
popa
and
iret
mov
mov
lcall
dec
popa
push
pop
imulb
add
push
in
icebp
bswap
int
mov
xchg
nop
xlat
fldenv
push
fists
mov
movsb
cmp
in
mov
cltd
push
add
inc
ret
pop
lock
sub
imul
push
add
in
daa
mov
and
mov
sub
and
mov
stos
jns
sbb
gs
int3
arpl
and
pop
push
ds
add
es
jnp
inc
lods
repz
cmpsb
mov
push
sub
in
and
enter
in
outsb
dec
test
push
ljmp
jp
cmpsb
and
sbb
mov
das
stos
mov
jne
adc
xchg
xchg
inc
scas
dec
fs
pop
xchg
adc
sbb
inc
xor
ja
push
cwtl
pop
xchg
sub
cli
pop
inc
fimull
out
fidivrs
adc
xor
outsl
mov
icebp
in
rcl
push
xchg
cli
loop
adc
scas
and
outsb
push
out
mov
sbb
jno
inc
lcall
inc
add
sub
sub
cwtl
out
insl
jb
or
or
mov
xchg
cli
aam
xor
cmpsb
jecxz
movsl
clc
adc
jnp
xor
sti
int
inc
loope
pop
sbb
je
adc
or
bound
outsb
xchg
int3
mov
sbb
fisttps
mov
mov
pop
mov
into
orl
sub
int
arpl
icebp
fisubs
jg
push
mov
popf
int3
cs
pop
pop
push
mov
mov
and
mov
mov
xlat
gs
test
lds
xchg
sbb
jecxz
push
loop
mov
push
lock
stos
xchg
sbb
sbb
scas
test
inc
mov
push
movsb
insl
test
and
mov
imul
in
adc
jo
fldenv
pop
jp
imul
sub
jl
hlt
dec
loope
cmpsl
jle
mov
lock
in
les
mov
test
mov
addr16
pop
dec
dec
push
mov
shll
or
add
lahf
sbbb
push
es
jmp
lock
int3
pop
fcmovne
ret
fwait
push
mov
mov
add
mov
stos
int3
push
xchg
mov
dec
xchg
in
enter
adc
adc
sahf
in
fnsave
sbb
ret
test
cmp
dec
sahf
test
push
popa
movsl
gs
xchg
inc
mov
subb
clc
test
test
or
inc
mov
pop
lret
lret
shl
out
lock
mov
add
inc
jmp
adc
in
add
xchg
testb
cmpsl
std
push
fldl
and
jbe
xchg
sarl
clc
in
adcl
sub
aas
repz
ja
inc
and
ds
ret
rolb
push
iret
gs
xchg
inc
add
push
movsl
aas
stc
fxch
push
sub
sahf
and
dec
add
test
mov
mov
imul
sbb
sub
movsl
pop
jne
loopne
negl
jmp
movsb
mov
fidivrs
lret
add
out
enter
out
mov
arpl
ss
imul
add
xor
mov
dec
pop
sub
mov
repz
andb
jecxz
push
std
call
hlt
xor
icebp
dec
xchg
mov
xchg
imul
dec
shrl
xchg
or
mov
ljmp
and
mov
fisubl
xchg
cmp
push
enter
mov
insb
push
inc
fdivrl
iret
mov
in
inc
arpl
jne
pop
dec
test
adc
iret
sar
lods
and
xchg
xor
enter
sub
rorl
movl
sbb
fwait
xchg
ss
inc
clc
xchg
mov
imul
nop
in
lea
fcmovbe
jmp
imul
cmp
pusha
clc
rcrl
xlat
imul
mov
clc
sub
clc
std
push
sbb
dec
jns
cmp
popl
mov
or
push
out
jp
ljmp
orb
sbb
mov
jl
jp
dec
in
pushf
adc
sbbl
mov
pop
mov
mov
test
subb
inc
scas
pushf
es
rcrl
mov
fdivl
sub
fs
jns
inc
ret
push
pop
sub
pop
inc
jecxz
incb
cmpsl
arpl
mov
mov
xchg
out
insb
rcrl
or
jo,pt
push
in
dec
pop
add
xlat
pop
incl
inc
imul
sbb
push
cmpsl
nop
xor
outsb
cwtl
xor
and
sbb
push
js
cmpsl
out
lret
hlt
adc
or
fdivl
mov
std
mov
cmp
mov
mov
push
out
or
fbld
mov
sub
stc
in
fabs
add
adc
sbb
pusha
mov
bnd
les
hlt
fld
lret
jae
mov
stos
in
mov
imul
gs
addr16
js
gs
enter
test
scas
cmp
push
or
mov
leave
pop
add
push
popa
testb
std
pop
cmp
cmp
std
dec
int
sbb
rcll
dec
leave
pop
or
cmp
ret
aas
ret
cltd
xor
sbb
fistpll
test
jne
lods
inc
mov
cmpxchg
fdivrl
imul
lcall
ds
add
mov
pop
mov
sarl
push
stc
or
cmc
dec
inc
adc
jo
sub
cmp
fs
mov
jo
sti
push
and
nop
sbb
push
out
or
dec
in
mov
std
loop
imul
cmp
je
inc
mov
cmpsb
call
xchg
xor
or
orb
xchg
or
xchg
test
scas
dec
sbbb
stc
jecxz
pop
push
or
mov
sarl
mov
mov
mov
in
xchg
pop
aam
aaa
cs
jo
lret
and
shrl
stc
mov
jo
sbb
inc
aas
aas
mov
loope
xor
fs
jae
add
out
adc
mov
int3
jns
mov
test
sub
inc
push
add
subl
rcrb
cwtl
pop
icebp
es
cmp
xor
dec
push
mov
dec
mov
add
or
out
or
pop
sarb
cli
mov
xlat
outsb
js
jne
cld
add
arpl
ret
mull
testl
push
mov
pushf
cmpsl
and
or
xor
icebp
bound
jno
xor
fwait
xor
inc
dec
xor
cmp
in
nop
outsl
sub
adc
cli
jle
sub
ds
mov
and
dec
loopne
inc
push
fsubp
repnz
add
push
ss
fistpll
in
add
mov
push
or
jmp
popa
subl
xor
ljmp
test
aaa
jg
xchg
push
mov
jb
xor
dec
pushf
xor
cwtl
pop
mov
stos
es
scas
inc
pushf
mov
pop
push
xchg
mov
les
pop
cmc
arpl
fistpl
sbb
and
push
or
test
pop
pop
xchg
mov
iret
sahf
mov
out
call
jno
jo
in
scas
cwtl
das
loope
sub
lods
add
ja
aad
repz
dec
stos
mov
lds
push
add
sbb
add
cwtl
dec
loop
shlb
mov
pop
out
popf
mov
push
cwtl
mov
fstpl
inc
add
out
xor
paddb
push
cmp
in
push
adc
mov
inc
pop
mov
mov
jle
sub
test
inc
clc
jne
mov
pop
cmp
sbb
xchg
shrd
jbe
adc
arpl
lret
stos
jo
daa
les
mov
xchg
jmp
mov
insl
and
push
and
dec
dec
jle
mov
mov
push
jecxz
out
gs
jge
dec
mov
hlt
and
xor
sti
iret
movsl
lock
adc
dec
lds
mov
out
jle
sub
jae
inc
add
jo
shll
mov
in
inc
loope
jl
aas
sub
shlb
pop
pop
dec
push
out
xchg
sub
aad
xchg
loop,pt
adc
test
dec
cmpsb
inc
inc
xchg
out
xor
out
jmp
lods
enter
adc
mov
sbb
sti
rcll
add
mov
dec
mov
xchg
fldenv
lcall
fisubl
adc
mov
shlb
sub
out
clc
into
xchg
cmc
and
jg
ds
mov
cmc
lea
push
xchg
lods
mov
shrd
loopne
mov
ret
call
faddp
xchg
push
mov
sub
pop
add
xor
and
mov
cmp
sbb
adc
lock
inc
push
push
insb
scas
inc
xchg
cmp
sub
loopne
into
jle
dec
enter
push
ljmp
das
xor
jne
cmp
and
frstor
ds
mov
push
jmp
mov
or
mov
and
sub
imul
cmp
jmp
sbb
pop
jp
popa
jnp
sub
lret
cld
in
jecxz
xchg
push
sub
jno
inc
pop
or
and
xor
out
js
xchg
in
pop
ja
add
jge
pop
jno
pop
cmp
pop
js
sbb
push
mov
jbe
and
mov
pushf
mov
adc
inc
add
sbb
mov
enter
and
fwait
dec
or
sub
rcrb
cld
pop
das
jge
cmp
subb
jb
push
mov
popf
fsubl
pop
adc
and
stos
xchg
dec
xor
int
lahf
and
arpl
rol
fisubs
cmpsb
push
lods
pop
mov
jns
jno
jno
nop
jbe
push
and
ret
data16
fidivs
sub
jmp
cmp
jo
mov
sbbb
cmp
pop
cmc
sbb
loope
shl
or
dec
dec
dec
out
lret
xchg
sub
cmp
stos
imul
test
ror
cmpsl
cli
hlt
pop
mov
jge
and
imul
inc
jbe
insl
lods
lret
mov
stos
inc
push
fst
adc
std
sbb
cmpsl
sahf
jns
shlb
add
xor
mov
push
jmp
push
xor
xchg
mov
add
jecxz
jns
add
or
jle
jecxz
inc
jp
cli
lods
sub
pop
pushl
insl
sti
lea
rorb
push
mov
mov
inc
in
push
inc
adc
pusha
mov
sub
ds
rcrl
or
xchg
pop
pop
pusha
subl
scas
cmpb
std
pop
dec
mov
push
loope
sub
aam
push
icebp
jg
sub
mov
add
cmpsl
inc
xor
xchg
xchg
movsl
cmpsb
inc
loope
inc
jp
cmp
out
lret
in
sti
pop
xor
scas
testb
cli
xchg
mov
ljmp
jae
mov
ret
inc
mov
sbb
jmp
mov
ss
dec
jb
shlb
mov
sub
inc
sahf
inc
dec
jns
shrb
test
jnp
mov
das
add
mov
cmp
cltd
out
ficompl
mov
mov
aad
imul
out
outsl
sahf
pop
arpl
out
push
add
pop
mov
popa
in
inc
sbb
mov
lret
sti
cmp
xor
lahf
aam
sub
out
fmulp
lods
cmpb
and
xorb
test
xchg
test
loopne
outsb
lcall
push
sbbl
daa
clc
stos
fldenv
jns
data16
fistl
mov
xor
aad
mov
jb
stos
loop
shl
cmp
sub
ja
rorb
push
cmp
int3
cwtl
pop
outsb
stc
test
sub
mov
fldenv
push
dec
fwait
scas
push
inc
data16
mov
and
outsl
adcl
lret
pop
xchg
mov
and
movsbl
or
test
push
dec
mov
xchg
jl
sahf
cmc
add
jno
pushf
or
mov
rcrl
jl
das
rorl
insb
shlb
sub
mov
inc
mov
daa
mov
mov
popf
pop
cmc
int3
mov
pop
fwait
scas
inc
dec
cmp
imul
lret
mov
adc
dec
data16
lock
cmp
pop
movb
int3
call
scas
mov
jge
lods
adc
mov
or
inc
ljmp
add
cmp
push
or
mov
mov
add
inc
movsl
test
sbb
fs
cmpsb
xor
mov
sti
xchg
mov
inc
xchg
push
jmp
cwtl
cld
and
repnz
insl
push
ret
pop
orl
adc
testl
xchg
pop
fstl
sub
and
mov
jno
lret
push
or
jae
cmp
scas
pusha
fsubs
cmp
cli
jmp
aad
mov
push
cmp
outsb
fsubs
roll
xor
pop
call
testb
pop
xor
push
scas
mov
enter
or
sahf
xchg
mov
pushf
imul
test
xor
mov
push
cltd
sub
ss
inc
xor
leave
xor
pushf
call
sub
mov
mov
or
call
int3
push
subl
subb
das
add
outsl
mov
push
xorl
sahf
shlb
leave
out
xchg
icebp
inc
and
dec
adc
in
insb
pop
stos
sbb
mulb
ret
shrl
inc
in
movsb
jno
mov
push
fwait
imul
push
popa
mov
xor
pop
stos
into
cltd
pop
repnz
leave
xchg
xchg
in
and
push
insl
ljmp
mov
xor
gs
and
adc
sarb
popa
stc
xchg
aad
mov
mov
shll
pop
mov
sbb
lea
negw
inc
outsl
jnp
jbe
sbb
push
sbb
pop
pop
add
dec
pop
mov
test
xor
adc
and
stos
ljmp
scas
add
aad
jbe,pt
les
xchg
cltd
test
scas
mov
dec
jecxz
je
sub
iret
xchg
sub
test
push
addr16
shrl
mov
mov
loopne
jge
rcl
mov
add
add
pop
in
enter
jecxz
lea
push
push
test
stc
test
mov
inc
int3
sbbb
jge
outsl
dec
jns
insb
or
je
aad
jg
push
jmp
jnp
subb
pop
shlb
or
ret
repz
mov
adc
daa
das
jnp
add
mov
adc
movsl
fsubs
mov
jb
inc
pusha
or
jle
repz
or
jns
testl
icebp
leave
sub
leave
push
and
orb
lahf
adcl
sub
dec
in
push
repz
shll
pop
push
push
pop
sbb
iret
test
sub
inc
xlat
mov
ret
pop
and
jl
jb
loope
repz
add
sbb
and
es
jl
mov
cltd
xchg
movsb
mov
subl
xchg
cmc
sub
movsb
jecxz
dec
mov
ljmp
xchg
gs
and
pop
dec
rcr
jno
jno
sub
rcrl
fnstcw
mov
icebp
mov
loopne
and
fcoml
sbb
adc
mov
in
jecxz
mov
mov
push
and
jnp
mov
es
xor
pop
rcl
sbb
or
in
imul
mov
or
push
inc
pop
loopne
in
daa
mov
adc
stc
mov
sub
mov
loop
sti
lcall
jae
movsb
imul
stc
and
in
leave
insb
adc
mov
pop
and
inc
sub
mov
loop
or
push
mov
nop
adc
or
nop
stos
sub
shll
mov
inc
and
jno
xchg
dec
rcrl
xor
outsb
dec
scas
ret
jns
inc
aas
jno
sti
scas
xchg
push
sub
sti
mov
pop
mov
or
add
sbb
test
dec
dec
cmp
mov
jbe
out
inc
xchg
testl
testb
xor
push
or
sbb
mov
pop
popa
and
add
out
cmpb
mov
dec
fldcw
jg
xor
cwtl
fdivrl
popl
dec
movsb
sbb
scas
add
ret
sbb
out
inc
fsubrs
cmpsl
decl
sahf
or
loopne
ret
xor
inc
icebp
sbb
arpl
xchg
and
inc
push
fdiv
push
push
out
sbbl
sbb
mov
adc
pop
out
and
and
mov
lret
insb
test
push
ret
fnsave
fdivl
pop
aad
pop
dec
sti
ret
lods
sbb
push
inc
lock
jl
pushf
sub
jle
inc
aas
xchg
jmp
pop
scas
xadd
xchg
pop
jge
push
mov
aaa
dec
roll
in
mov
scas
jl
inc
push
mov
fsubr
in
lods
ljmp
and
out
push
pop
inc
mov
lods
les
mov
out
fs
lcall
or
mov
mov
gs
push
xor
lret
sub
mov
mov
rcll
dec
out
js
aaa
jbe
shrl
inc
mov
scas
xchg
outsl
mov
lret
xor
outsl
lds
mov
pop
push
ficompl
fs
mov
nop
mov
cwtl
psadbw
pop
add
lock
bound
ljmp
push
test
add
daa
and
and
lea
repz
jnp
rcrl
lds
or
fscale
push
loop
iret
out
imul
mov
or
cld
lret
cmp
or
cwtl
cmc
jecxz
mov
je
iret
push
sahf
add
mov
and
call
push
adcb
fwait
push
mov
dec
loopne
or
and
xchg
addr16
bound
imul
cwtl
xchg
cltd
aaa
icebp
push
inc
hlt
push
jae
loopne
popf
cli
sub
sbb
sar
mov
test
in
push
inc
pop
dec
push
shlb
sbb
lahf
xchg
push
call
xor
push
dec
inc
lea
nop
and
mov
adcb
and
jle
call
or
and
imul
add
in
addr16
jl
sti
insl
add
push
sbbl
mov
jle
sahf
inc
and
push
test
adc
push
add
lea
adc
out
ret
jne
xlat
mov
pushf
fnstenv
cmp
jg
in
pop
mov
cmp
les
cltd
cmc
adc
xor
jbe
outsb
clc
and
shrb
mov
outsb
int
mov
aam
insb
mov
ljmp
ret
fnstcw
cmp
fistps
shll
std
and
fbld
xchg
addr16
shll
out
movb
cs
fwait
aas
pop
lahf
xor
jbe
sub
movsb
loop
xor
je
daa
ret
jns
or
xchg
inc
dec
mov
lahf
into
sbb
jge
lods
jmp
pop
aas
popf
jmp
and
outsl
push
mov
mov
fbstp
js
jg
push
data16
test
rcr
aad
loop
sbb
or
push
les
loopne
mov
pop
mov
cmp
addr16
dec
xor
pop
push
or
inc
fstps
xlat
repz
dec
insl
call
movsb
xor
cmpsl
jg
dec
fldl
xor
push
ljmp
subb
gs
or
ret
sbb
push
lahf
pusha
ds
dec
push
lods
jp
add
movsb
mov
or
mov
imul
pop
cmp
into
push
add
mov
roll
sbb
push
movl
leave
cmpsb
xor
sbb
repz
mov
ret
lds
popf
mov
popl
nop
cmp
mov
xchg
cmpsb
mov
xlat
mov
test
add
cmp
inc
xor
cmp
cmp
mov
fwait
cmpsb
xor
push
mov
fwait
or
push
xchg
sbb
fisubrs
add
xor
test
add
repz
in
sti
test
sbb
mov
aaa
mov
lds
leave
or
mov
sub
lret
pop
ret
fdivrl
les
les
repz
mov
jne
add
or
mov
mov
fwait
aas
and
test
pop
fiaddl
inc
xor
scas
mov
popa
lcall
pushf
jno
xchg
mov
sub
shll
jl
lahf
cmp
pop
xchg
cmpsl
icebp
inc
sub
pushf
cmpsb
inc
or
stc
js
xor
shlb
clc
insb
add
and
dec
dec
push
jne
loopne
rolb
lock
repnz
fs
cli
fmuls
or
scas
fdivrs
je
jno
sub
dec
mov
sub
mov
ficoml
or
cs
popf
pop
out
dec
fdiv
and
add
cmp
push
in
ss
xor
cmpsl
dec
xchg
mov
mov
aam
test
push
sub
nop
dec
gs
fcomip
and
and
add
dec
add
lcall
xchg
xchg
push
jge
or
push
idivb
notl
out
pop
add
dec
dec
je
out
sub
fists
std
pop
int3
jns,pn
xchg
dec
movsl
lea
or
inc
stos
xchg
push
ret
jp
xor
push
outsb
sub
xchg
ljmp
fwait
loope
scas
mov
into
movsb
mov
pusha
xchg
in
mov
cwtl
lahf
push
mov
in
mov
jb
fstpt
mov
test
add
xchg
js
adc
cld
lcall
in
inc
xchg
inc
inc
cmc
loope
pop
push
sub
rorl
lock
imul
push
sbb
int
dec
pop
clc
inc
cmp
nop
xchg
je
cltd
fsubl
pop
pop
loope
push
test
aas
addr16
dec
enter
push
insb
shl
in
cmp
loop
daa
xor
sbb
mov
dec
pusha
ss
cmp
out
adcl
mov
mov
inc
mov
cmp
cwtl
add
orb
int
test
xchg
jnp
mov
push
xchg
xchg
add
roll
push
mov
ret
cli
push
repz
adc
dec
dec
ret
sub
popf
lods
push
mov
pop
scas
fildl
shll
lret
push
pop
cmp
xor
lret
test
dec
lcall
ja
outsb
jo
xchg
inc
fidivrs
enter
inc
mov
sbb
or
ficoml
arpl
mov
and
jns
push
stos
or
jo
dec
xchg
jmp
aam
add
addr16
cwtl
inc
insl
jbe
addr16
and
mov
mov
sub
adc
shlb
inc
ret
xchg
sub
dec
xchg
and
out
push
out
mov
xor
jno
push
cmpsb
pop
push
sub
mov
test
xchg
xchg
dec
xchg
mov
mov
push
int3
icebp
ret
or
add
lret
mov
jl
or
cmpsb
std
and
push
or
jl
pushf
repz
push
fldenv
fstpl
mov
pop
test
fistps
or
jno
pop
dec
cmp
out
shrl
push
jo
push
mov
mov
clc
ds
enter
sub
in
inc
adc
rorb
dec
mov
pop
mov
ror
xor
push
inc
flds
mov
mov
ficompl
cmc
fsubrl
jl
push
scas
and
mov
and
mov
xchg
mov
ss
mov
out
cmp
mov
stos
or
adc
xor
out
mov
xchg
call
xchg
mov
push
lods
aas
lds
fidivrs
mov
and
mov
rorl
or
ds
xor
ljmp
pop
ds
adc
repnz
and
fwait
mov
and
loop
bnd
adc
lock
ds
pop
lods
jle
fildl
popf
mov
fwait
mov
test
mov
lods
xchg
push
ljmp
mov
xchg
push
inc
stc
inc
aas
das
cmp
pusha
into
stos
push
dec
loopne
outsb
cmp
mov
repnz
dec
jmp
add
idivb
lods
stos
aaa
jle
shrb
adc
in
notl
dec
push
call
push
xor
bound
jl
jo
cmp
sbb
loopne
inc
xor
scas
andb
je
or
inc
sbb
enter
xchg
or
dec
bound
pop
insb
sarb
stos
dec
pop
paddw
fidivrs
jge
dec
cltd
lahf
mov
pop
and
dec
add
mov
ja
and
mov
xchg
sub
out
insl
dec
adcl
and
popf
xor
shlb
cwtl
ss
mov
or
in
dec
add
iret
arpl
jle
or
xlat
pop
dec
inc
fidivrs
xor
leave
loope
sti
inc
and
scas
push
mov
ret
outsl
loop
jge
test
rcrl
add
jbe
and
jmp
lret
ss
outsb
add
cmp
pop
adc
stos
inc
mov
sbb
xchg
stc
adc
push
out
xchg
and
push
ret
clc
mov
sub
jg
les
or
mov
mov
adc
into
push
mov
sbb
mov
xchg
in
push
rcrl
iret
insb
pop
arpl
pop
xchg
inc
jmp
lcall
xchg
push
rorb
mov
fisttps
xchg
add
loop
fdivl
cmp
mov
push
stos
xchg
ljmp
mov
pop
jne
xchg
jb
fnstsw
imul
js
shll
loopne
mov
filds
ds
adc
jae
or
lea
loopne
push
xchg
rcrb
fcmovb
jne
lock
and
lcall
fwait
mov
sahf
dec
push
sbb
mov
movsl
cld
mov
sub
xlat
out
mov
jnp
aaa
pop
push
dec
xor
mov
rcrl
add
mov
iret
sub
push
pop
lods
mov
orl
or
sbb
xor
fisubl
mov
inc
cli
mov
jbe
or
in
add
loope
call
fistpll
dec
sub
sbb
data16
mov
lds
jmp
xchg
jae
out
incb
dec
push
into
movzwl
das
out
pop
xchg
rcl
dec
imul
outsl
ds
push
jle
cmp
rcrl
ds
add
lahf
arpl
inc
mov
pop
mov
push
mov
xor
xchg
adc
sahf
scas
data16
out
add
sarb
mov
pop
inc
cmp
test
xchg
pop
cmc
in
jecxz
add
ret
sub
xor
enter
or
inc
in
xor
xlat
hlt
sub
adc
int3
gs
fiaddl
or
push
idiv
das
rsqrtps
jmp
repz
or
std
sub
dec
push
mov
je
push
out
lcall
in
clc
shr
shl
push
inc
divl
or
jns
lahf
sub
test
pop
pop
decl
xor
fldcw
movswl
inc
add
popf
xor
aam
xchg
xchg
mov
pop
outsl
data16
mov
or
jge
out
cmc
inc
sub
movsb
pop
cltd
cmp
sub
mov
popf
mov
pop
loop
js
dec
pop
jecxz
in
ja
cmp
jecxz
rcll
mov
xchg
call
push
add
lcall
mov
ljmp
lcall
lea
popa
mov
cmp
ja
arpl
rcl
jno
aas
arpl
sbbb
jbe
call
fdivrs
rorl
cs
push
imul
lds
or
out
push
jno
in
push
es
cmp
pop
clc
xchg
fidivrs
dec
push
mov
fstps
push
cwtl
pop
cld
and
mov
test
sub
and
add
push
jnp
jbe
mov
mov
xchg
dec
xlat
pop
in
rcrl
addl
pop
xchg
cs
nop
iret
loope
scas
xor
mov
outsb
cmp
hlt
or
fstpt
push
dec
iret
and
lock
loope
xchg
popa
fildl
adc
cli
and
sub
lret
addr16
insl
cltd
testb
adc
lret
sbb
outsb
ror
xor
inc
jne
inc
sub
jb
das
out
lret
inc
sbb
push
jmp
clc
sub
ds
mov
sbb
inc
xchg
ss
inc
jne
mov
ja
and
ja
sub
dec
xchg
js
mov
xchg
and
and
lcall
arpl
std
inc
and
and
out
dec
jl
dec
mov
in
xor
std
xchg
mov
and
mov
or
out
fsubl
add
dec
mov
dec
rorb
pop
jmp
and
sahf
popf
add
ss
xchg
dec
adc
and
sahf
mov
ds
push
adc
xchg
dec
dec
lahf
test
or
mov
mov
cs
mov
inc
fidivs
xchg
loope
lahf
cmp
cs
pop
fadds
out
mov
push
pop
jle
sub
scas
mov
popfw
pop
dec
pop
and
adc
mov
push
push
in
subl
or
jae
gs
inc
sub
cmp
andb
dec
pushf
scas
js
xorl
ja
mov
mov
enter
stc
mov
sti
fwait
inc
and
mov
dec
xchg
add
jl
pop
adc
sub
call
push
push
pushf
sbb
add
xorl
push
sbb
sub
push
inc
xlat
andb
mov
mov
ljmp
jo
mov
aad
pushf
xor
test
int3
rol
push
repnz
mov
cmpsl
push
jo
cld
jl
cmp
test
or
xor
push
jo
mov
jbe
test
dec
mov
aaa
cmp
scas
sbbb
hlt
mov
shlb
xor
enter
lret
pop
jmp
fsubs
out
and
ds
push
push
fs
dec
mov
movsl
bound
mov
cmp
enter
sbb
bound
sbb
jmp
call
movsb
lcall
sbb
and
aad
inc
pop
enter
hlt
jae
push
stc
inc
inc
arpl
dec
jne
in
insb
rolb
test
stc
mov
out
popa
xor
dec
jmp
sub
cmp
xchg
adc
xchg
sbb
jnp
sbb
lds
out
popa
xchg
outsb
push
out
mov
mov
add
dec
mov
loope
pop
insb
pop
jecxz
adc
cmpsl
cld
inc
adc
push
data16
mov
mov
jecxz
pop
in
mov
dec
shrl
rcrb
aas
cmc
not
cmpsl
out
stos
jb
cmpsl
xor
or
adc
xchg
imul
insl
jb,pn
mov
cmp
fmul
sub
or
scas
aas
sbb
pop
faddl
adc
mov
mov
pop
and
inc
dec
mov
daa
sahf
and
insb
aad
mov
or
inc
or
leave
cmp
lcall
loopne
pop
ja
sub
mov
fmull
int
in
aam
push
iret
pop
lock
les
pop
pushf
pop
xor
lea
xlat
nop
cmp
sbb
sbb
push
or
mov
sub
push
pop
idivb
or
jb
js
out
xchg
sbb
andb
sbb
stos
es
sub
mov
lea
pop
jmp
call
fistps
sub
shlb
jmp
fbld
sar
or
cwtl
mov
push
out
std
push
popf
out
and
es
sbb
lea
stos
xor
fs
jl
fiaddl
sub
jl
xchg
shll
dec
xor
sub
jmp
repz
push
sti
iret
fisttpl
pop
les
sbb
movsbl
push
repnz
int3
sbb
sti
inc
shrb
fistpll
lret
rcrl
sti
mov
enter
insb
pop
movsb
inc
jmp
daa
lret
pop
cmp
call
jno
jmp
clc
mov
xchg
sti
xchg
mov
mov
xchg
lcall
jl
ret
test
ljmp
out
stos
xchg
mov
insb
mov
je
pop
add
pop
aaa
cmp
enter
lretw
arpl
imul
in
push
push
outsl
pushf
xor
xor
fisubl
jbe
fs
imul
jg
out
mov
jg
or
ljmp
mov
lret
jg
jae
and
lods
pop
inc
fbstp
mov
push
out
push
ljmp
ljmp
xor
stc
in
sti
fs
add
shll
pop
sub
dec
mov
xor
jae
addb
mov
or
mov
mov
sub
cmp
sbb
push
add
aam
lcall
movsb
int
sub
mov
scas
std
stos
jecxz
das
shl
jg
jge
sub
cmpsb
sub
push
jecxz
sub
hlt
aaa
push
xor
mov
sub
adc
pop
sbb
fsts
decb
out
mov
sbbl
cld
fistl
aam
jbe
or
pop
movsb
loopne
mov
or
or
loopne
mov
xor
sub
lahf
stos
push
jle
lcall
add
push
test
testl
lods
inc
lret
test
mov
call
repz
lods
repnz
adc
and
push
xchg
insb
dec
fstpt
cmp
pop
icebp
cmp
lret
insb
push
mov
scas
dec
aas
dec
arpl
loope
fs
xor
xlat
pop
xchg
out
test
or
sub
xor
nop
daa
jns
lret
mov
mov
push
test
ds
imul
js
inc
aas
movsl
dec
pushf
test
push
lods
push
je
fstpl
mov
je
pop
cmpsb
fists
mov
subl
mov
mov
daa
leave
jae
adc
test
push
andb
mov
sbb
xor
push
push
out
andl
ss
imul
xorb
sub
stos
xchg
ret
sub
add
mov
adc
cmpsb
data16
pop
out
cltd
mov
ret
mov
out
dec
mov
sbb
daa
jnp
popa
aas
add
mov
push
je
xchg
push
push
lea
pop
in
inc
or
fidivs
jp
int
dec
cmp
push
rcrb
sets
ljmp
xchg
push
push
mov
or
gs
cs
sbb
xchg
cld
xchg
add
dec
inc
cmp
mov
sub
xor
pop
cmc
jnp
in
pop
stos
fdiv
into
mov
pop
xor
inc
push
pop
ljmp
sbb
insb
push
faddl
dec
inc
insb
test
mov
xchg
push
lods
stc
or
test
fwait
add
int
push
sub
es
popf
or
fnstenv
scas
loopne
or
jb
leave
mov
clc
nop
daa
ljmp
adc
gs
ds
lret
mov
and
cmp
insb
cli
shl
push
cs
xor
cmp
repz
sub
push
inc
mov
inc
cld
or
jae
scas
ja
sbb
pop
pop
add
loop
jo
inc
push
ljmp
jno
ss
push
outsb
faddl
lret
xor
sub
dec
inc
mov
es
pop
cli
inc
lret
adc
ss
fwait
mov
xchg
or
aam
std
and
and
ja
xor
stos
dec
jl
bound
push
and
sti
cmc
adc
aam
cmpsl
out
movsl
dec
mov
lea
mov
out
and
inc
scas
shr
divl
add
or
push
dec
push
subl
sub
sbb
movsb
cwtl
cmc
enter
xchg
ss
dec
cmpsb
hlt
sbb
test
sbb
jmp
stos
sbb
in
xchg
cmpsl
mov
lds
sbb
mov
jne
sbb
cmc
push
cld
mov
dec
daa
aas
xchg
push
sbb
sbb
js
push
outsl
fidivrl
dec
ds
xor
xlat
sub
cmc
add
pop
and
fisttpll
jno
add
push
pushf
int
aam
in
rcrb
scas
mov
push
mov
stc
pop
out
adc
or
in
lret
sarl
cs
pop
testb
ret
push
cmc
cmp
xchg
sub
out
jge,pt
fsubs
mov
jl
inc
xlat
sbbb
mov
mov
jb
cld
leave
jbe
pop
lcall
mov
push
xchg
filds
ds
lock
mov
xlat
bound
in
sub
jo
cmc
xchg
out
mov
mov
clc
sbb
pushf
outsl
mov
ds
jns
push
cmp
mov
hlt
jge
ret
xchg
xchg
les
sub
dec
inc
push
cmpsl
jnp
sub
mov
jbe
iret
dec
cmp
popa
lods
lock
cld
subb
daa
mov
xlat
pop
mov
shll
cs
push
loope
fbstp
add
in
sub
subb
lcall
cmp
stos
idivb
lcall
je
push
mov
and
cmp
fs
mov
test
xchg
add
addb
call
dec
andl
sbb
into
cld
push
sarb
xchg
push
or
adc
lods
pop
jae
cmp
insl
xchg
lcall
popa
xor
bound
in
xor
mov
nop
jecxz
push
push
dec
lcall
lcall
sub
arpl
cli
neg
je
nop
push
sub
xchg
jp
inc
pop
push
lds
pushf
out
mov
add
jo
leave
int
add
test
mov
das
xchg
jge
mov
jno
inc
inc
adc
mov
mov
adc
icebp
cmp
or
inc
lods
pushf
xlat
loop
jae
sbb
enter
pop
xchg
mov
add
cmp
xor
mov
ja
and
push
cmpsl
lcall
repnz
enter
mov
and
cmp
adc
dec
adc
sbb
pop
ja
lds
inc
inc
lss
dec
mov
clc
push
pushf
and
cmp
cmp
add
addr16
mov
and
leave
jns
test
aas
repnz
daa
mov
inc
or
or
popa
es
xchg
popf
rcrl
mov
insb
cli
jp
mov
dec
leave
ficomps
popa
xlat
and
mov
cltd
iret
gs
jmp
call
mov
dec
stos
and
cmp
movsb
cmp
es
adc
or
or
movsb
jl
lea
mov
adc
inc
mov
mov
cmp
pushf
mov
lds
adc
xchg
jl
sbb
add
or
fcoms
rep
nop
arpl
and
mov
cmc
iret
inc
fadd
repnz
stos
test
xor
insl
cmpl
aad
xchg
out
ljmp
cmp
and
fs
add
out
aaa
aaa
pop
sub
xchg
pop
xchg
xor
lcall
sbb
jne
jp
lds
inc
je
push
mov
fsts
push
enter
mov
mov
rclb
mov
fs
jb
mov
cmp
in
dec
lock
outsl
xor
sbb
mov
cmp
rorb
dec
or
sub
xchg
aam
mov
std
lahf
in
dec
loop
fdivr
in
mov
pop
test
das
cmp
lds
add
loopne
lret
dec
inc
dec
pop
insb
mov
lods
mov
push
xor
mov
in
jns
loop
lcall
std
and
out
enter
inc
mov
dec
out
ljmp
das
es
fcmovnb
shrl
ja
es
xchg
in
add
ljmp
enter
xor
or
clc
shll
test
and
mov
mov
cmp
or
sbb
xlat
and
sbb
or
pop
sub
sar
pop
out
sub
jbe
push
cmp
jo
aaa
inc
fstpl
fs
in
mov
and
inc
sub
out
add
dec
repnz
lock
xor
rorb
or
cmp
outsb
shlb
lret
pop
notb
daa
stos
outsb
mov
push
loop
out
scas
jmp
xor
repz
dec
push
repz
xchg
cld
int
push
sbb
xor
mov
jbe
inc
xchg
das
fcompl
push
xchg
and
cmpsl
fwait
aaa
mov
testb
out
jnp
adc
pop
push
inc
pop
or
stc
pop
fcomip
call
xchg
xor
mov
jecxz
lea
psubusw
xchg
stos
adc
push
loope
or
xchg
cmpsl
inc
push
or
outsl
aas
mov
movb
bound
push
jo
stos
aas
pop
jno
jmp
sbb
pop
les
xor
nop
fnstcw
dec
das
pushf
je
sub
test
out
xchg
cld
xchg
je
lret
insl
insb
sbb
jns
leave
xlat
xchg
pop
push
insl
test
int3
xor
and
movsb
xchg
int
jg
jg
cwtl
das
pusha
lahf
ds
inc
sub
scas
pop
xchg
repz
js
and
mov
push
mov
xchg
cmp
fstps
dec
dec
cmpsb
cmp
mov
xchg
sbb
loope
shl
mov
jo
add
mov
inc
les
mov
inc
mov
test
push
xchg
cmp
push
sbb
popa
push
sub
outsl
jo
mov
inc
lahf
jl
shrl
push
jb
push
mov
mov
cli
nop
mov
rorb
push
xorl
cmpsl
jmp
mov
xchg
adcl
pop
cs
jne
mov
in
push
mov
movsb
in
xchg
jge
lret
popa
cs
les
adc
pusha
push
dec
jb
lcall
mov
sbb
dec
push
adc
test
movsb
or
push
rcl
inc
push
xchg
mov
adc
adc
jmp
gs
mov
jg
shld
push
sahf
icebp
std
xor
es
or
into
mov
add
xchg
loop
es
setbe
andl
loop
add
mov
cmpsb
inc
sbb
mov
push
lds
cmp
pop
movsl
movsl
test
dec
cmp
sub
test
std
test
pop
mov
push
xchg
sbb
movsb
hlt
xor
fs
and
xor
dec
pop
movsb
mov
fsubs
lcall
loope
stos
mov
fsubrl
push
mov
adc
mov
adc
stc
lds
imul
faddl
repnz
push
fwait
xlat
cmp
push
clc
and
sub
cmc
adc
xchg
cmp
lds
mov
imul
inc
pop
pop
mov
xchg
out
fisubrl
ss
sbb
mov
imul
adc
pop
or
lahf
in
test
mov
jl
inc
pusha
or
mov
mov
cld
adc
loop
mov
xor
mov
pop
dec
movsb
push
mov
aas
imul
cli
es
dec
inc
loope
add
ja
lea
push
push
mov
call
in
sbb
mov
dec
loop
xchg
sub
push
mov
outsb
jbe
test
push
mov
pop
enter
test
addb
or
cs
popa
sub
loope
xchg
int3
data16
pushl
sub
cmp
cmp
cmp
or
pop
sub
mov
jg
mov
popf
inc
lret
cmp
ret
mov
or
add
hlt
jp
mov
pop
in
andb
fisubrl
gs
test
cmp
das
imul
lods
push
aam
or
cmpsb
loope
fsubrs
mov
dec
cld
sbb
lcall
adc
push
xchg
stos
mov
cwtl
das
imul
mov
push
addl
add
shl
pop
jbe
and
sti
in
jp
cmpsl
ret
ret
or
pop
iret
fnstsw
xchg
pop
inc
jge
sub
xchg
sub
xchg
add
push
cwtl
in
push
lret
ret
data16
push
push
ret
insl
lds
inc
pop
popf
test
ja
jg
fsts
rcr
sub
loopne
xchg
jo
pushf
adc
fld
into
fstps
jmp
rolb
sub
pop
fisubrs
insl
cmp
rolb
bound
loope
scas
dec
imul
fists
cmp
xchg
gs
pop
mov
sub
mov
mov
stc
cli
fists
mov
sbb
pop
push
mov
sbb
pusha
ss
jp
es
push
lods
jnp
push
cmc
xor
and
cwtl
sub
clc
icebp
pop
cltd
test
arpl
pop
iret
stos
push
sbb
pop
repnz
test
sbb
into
sbb
inc
mov
rcl
push
cmp
sti
pop
fdivl
into
sbb
push
stc
cli
add
sub
xor
sub
mov
xor
inc
xlat
fmuls
inc
imul
and
das
and
inc
cmp
push
loop
and
jge
adc
dec
adc
sbb
call
xlat
popf
imul
test
jmp
xchg
test
xor
and
frstor
inc
stos
inc
mov
fcmove
pop
or
ficoms
fcoms
mov
sbbl
adc
sub
fimuls
dec
lods
ljmp
pushf
xor
out
mov
mov
pusha
jl
loopne
sahf
jno
xchg
dec
jge
mov
mov
inc
xchg
ret
pop
fildl
loope
ja
cmp
sbb
repnz
push
cld
pop
outsl
incl
ss
test
mov
pop
dec
inc
lea
and
fwait
dec
jecxz
cltd
out
push
es
mov
test
pop
xor
shl
and
mov
mov
jge
jns
daa
adc
xor
jns
scas
push
outsl
leave
lcall
incb
mov
test
pop
pop
xchg
or
out
lea
mov
jecxz
adc
or
and
clc
js
inc
mov
dec
cld
sub
nop
dec
repnz
in
jecxz
adc
and
xor
jecxz
mov
xor
xor
mov
pop
push
jmp
cmp
jnp
cmp
and
mov
or
mov
jecxz
clc
adc
mov
into
cmp
stos
mov
push
sub
xchg
add
mov
xor
cmpsb
mov
cmp
push
mov
and
in
scas
orl
lea
mov
jne
mov
fcom
addr16
mov
icebp
pop
add
xor
pop
cmp
and
cmp
mov
push
shl
inc
and
push
testb
into
gs
cli
dec
clc
xchg
inc
bound
xlat
jbe
testl
std
xor
in
nop
jp
rol
xor
inc
outsb
pop
ljmp
xchg
test
leave
or
xor
pop
and
mov
mov
dec
mov
adc
xor
test
loopne
fnstsw
adc
lcall
and
inc
sbb
sahf
in
push
repnz
xorb
add
test
test
dec
ficoms
xchg
mov
roll
loopne
pop
and
sbb
mov
xlat
mov
adc
adc
andl
sub
jle
mov
scas
push
pop
out
xor
push
jbe
mov
lds
mov
jns
sar
sbb
mov
dec
cmp
sbb
dec
mov
pop
lock
push
sub
mov
xchg
jl
jle
push
dec
xchg
sti
xchg
sbb
fucomp
sbb
fbstp
mov
dec
out
xchg
push
pop
dec
xorl
fmuls
dec
shll
ss
push
or
jb
andb
inc
sub
and
sbb
leave
dec
xchg
shl
rcrl
lret
jno
ja
out
jbe
jae
setne
xchg
mov
flds
in
pop
mov
std
repz
xchg
call
test
mov
gs
pop
jne
mov
push
inc
jno
lret
jne
lahf
mov
xor
pop
imul
xchg
nop
int3
icebp
mov
cmpsl
popw
mov
out
adc
fwait
xchg
test
sbb
adc
mov
movsl
imul
push
sti
jle
adc
dec
cld
outsl
mov
cmp
out
movsl
xorb
sbb
dec
inc
xchg
icebp
push
ss
inc
mov
ret
repz
aaa
negl
mov
in
fists
xchg
test
sub
pop
pop
mov
add
or
popf
cmp
sbb
pop
fidivl
cs
in
sub
imul
ret
icebp
xchg
movsl
pop
mov
jp
pop
arpl
fwait
pop
int3
vaddss
in
movsb
add
mov
push
iret
test
xor
push
jl
fisubrs
dec
scas
inc
jl
jge
mov
test
fldt
inc
mov
out
pop
mov
or
inc
jecxz
pop
leave
pusha
jns
in
inc
jmp
arpl
cld
dec
es
pop
ljmp
and
outsb
xchg
adc
and
insb
mov
pop
outsb
xor
sbb
out
xchg
fidivs
shll
mov
in
ljmp
mov
loop
pop
imul
sbb
test
mov
iret
mov
in
mov
mov
shrl
fstl
dec
or
lea
or
or
lock
cmpl
pop
hlt
fsts
outsl
push
sbb
fnstenv
xcrypt-ecb
cmpsl
or
jns
sub
mov
mov
mov
xor
jp
aas
imul
jbe
das
addr16
in
test
xchg
lods
and
sub
pusha
mov
movsb
out
sub
shll
loop
adc
dec
xchg
sub
add
mov
fdivs
add
movsb
sti
or
xor
lods
jnp
push
jecxz
sar
fistpl
and
cmp
sbb
dec
inc
jnp
mov
in
ret
sbb
aas
fs
aaa
je
out
pop
ud1
insl
or
out
cmp
inc
sbb
add
push
push
and
jnp
add
xchg
jge
enter
andb
add
dec
stc
xor
fdivr
lcall
sbb
jne
mov
pop
cld
jmp
into
fcmovbe
or
in
in
sbb
and
ja
cmp
dec
movsb
ja
fsub
je
sbb
sub
inc
pop
push
add
test
mov
pop
mov
clc
push
cli
scas
mov
cli
adc
out
dec
fistps
push
sti
fwait
adc
jmp
mov
mov
aas
or
iret
dec
pushf
push
xor
dec
enter
je
add
movsl
xor
push
mov
mov
xorb
or
repnz
jb
xchg
mov
hlt
dec
push
fimull
fwait
popf
and
rol
xor
shlb
dec
sbb
jp
aad
and
out
push
lods
xchg
pop
xchg
popf
mov
test
inc
lea
in
jb
lods
jo
sbb
lods
mov
nop
pop
cmp
cltd
ja
inc
mov
inc
in
outsl
lock
aam
int3
enter
and
adc
xor
dec
insb
mov
add
xor
push
xlat
pushf
push
dec
lods
xchg
sarb
xor
and
push
adc
stos
lea
fnclex
cs
inc
les
inc
loopne
xchg
adc
in
add
mov
subb
lds
dec
push
inc
push
sub
inc
fcoms
xor
add
mov
adc
inc
mov
jle
xor
jae
test
enter
sbb
popa
xor
jmp
xchg
xor
arpl
fdivs
je
adc
sub
mov
hlt
cmpsl
mov
sbb
dec
jno
call
test
or
push
int
movsl
jns
call
aam
mov
or
pop
addr16
cwtl
adc
inc
mov
call
sbb
sbbl
xchg
xor
mov
push
shlb
add
test
aad
addr16
fidivrs
and
sti
cltd
xor
scas
aad
mov
lea
xor
or
dec
add
ret
inc
mov
lods
and
in
jne
inc
cmpsl
out
andb
icebp
call
test
js
clc
sub
cmp
add
mov
push
stc
push
inc
ret
lret
inc
inc
pcmpeqw
fsts
adc
ljmp
adc
fisubs
outsb
push
inc
push
mov
mov
and
sbb
push
inc
adc
mov
sub
mov
imul
out
out
xor
xchg
in
lods
and
fimuls
lods
inc
inc
addr16
jle
mov
add
xchg
sub
lahf
push
lret
out
mov
push
movsb
imul
xlat
stos
sarl
fwait
leave
call
and
pop
add
dec
arpl
rcrl
addr16
lret
lret
cmp
stc
popf
and
cmpsl
daa
sub
sbb
cld
add
shrl
add
inc
ss
enter
arpl
movsb
in
push
or
adc
daa
jmp
xchg
roll
imul
je
pop
popf
sub
andb
jp
dec
cmpsl
std
ss
xor
inc
xchg
test
jb
sti
mov
pop
mov
cmp
jecxz
pop
pop
adc
jo
xorl
inc
fidivrl
es
popa
pop
movb
dec
fs
ja
sbb
xor
std
adc
out
xchg
add
push
xlat
mov
xchg
inc
mov
mov
mov
inc
int3
mov
sbb
cmc
lahf
aaa
mov
fsubs
mov
xchg
int
push
out
adcl
test
loopne
push
jecxz
clc
sbb
loopne
in
icebp
cmpb
mov
jae
fisubs
add
scas
mov
or
pusha
or
mov
cwtl
sub
mov
xchg
push
xor
xchg
mov
inc
es
fwait
jbe
lahf
push
scas
aam
fidivl
js
cli
jne
clc
dec
xor
ror
adc
fdivs
mov
orb
xchg
scas
cmp
bound
push
repz
lret
dec
je
xchg
sbb
sbb
xchg
sbb
mov
pop
add
cmp
shlb
out
cmp
or
stos
cli
fnsave
push
adc
jbe
inc
pop
cltd
cmpsl
mov
cmpsb
push
push
push
jecxz
lcall
loope
inc
ja
mov
or
stos
js
popa
subl
fnstenv
push
repnz
test
sub
bound
gs
or
mov
or
mov
andb
scas
roll
mov
aaa
into
sub
push
push
scas
inc
cmpsb
xor
mov
int
lods
fsubrs
xchg
test
mov
movsl
sub
stos
inc
add
and
leave
mov
jns
lret
sbbl
pop
xchg
fs
mov
lods
inc
stos
push
xchg
daa
xchg
push
xchg
push
dec
scas
mov
sbb
ljmp
mov
sar
jne
push
sbb
scas
dec
insb
add
lea
sbb
or
aas
pushf
popf
addr16
jmp
cmp
cwtl
and
and
add
push
add
sub
testl
jl
insb
outsb
iret
inc
aam
mov
jbe
imul
adc
push
inc
and
xlat
sub
inc
loopne
adcb
inc
clc
outsb
loope
in
sub
repz
fucomp
sub
lret
mov
mov
xchg
test
inc
gs
ja
xor
les
std
sub
sarl
in
xchg
push
cmp
scas
stc
pop
mov
and
mov
cmp
dec
add
repz
mov
clc
mov
sbb
mov
cmp
push
movsl
bound
jecxz
inc
and
adc
xor
int
cli
xchg
pop
lock
js
and
pop
or
xor
fimull
push
pop
jle
ljmp
insl
lds
jg
pop
insb
test
test
or
in
mov
adc
out
pop
sbb
jg
jge
aaa
test
and
addl
dec
pop
aas
or
loope
sbb
psrlq
es
insb
imul
xor
dec
dec
add
fwait
test
addr16
ret
push
jmp
xchg
imul
xor
out
outsb
pop
mov
std
stos
testl
sarl
add
inc
dec
ret
mov
and
sahf
aam
mov
jo
jns
cli
push
daa
cwtl
mov
je
lock
stos
sti
dec
xchg
fdivl
xor
enter
push
cs
sbb
and
sub
xchg
mov
call
jl
jbe
xor
adc
js
jbe
repz
das
mov
adc
jae
jmp
push
fsubrp
xor
jge
xlat
sub
test
sub
sti
cmp
mov
jne
lods
scas
adc
xchg
mov
mov
cli
pop
and
adc
addr16
adc
in
xchg
xor
mov
out
or
push
mov
mov
ljmp
pop
clc
movsb
mov
aam
add
or
outsl
lock
push
dec
out
fwait
fwait
mov
dec
mov
insl
jl
mov
test
lea
push
jb
dec
adc
stos
jae
xor
jbe
stos
cmpsl
sbb
xlat
pop
xchg
cmpsl
ds
insb
jp
lds
enter
jecxz
jo
and
mov
adc
lods
cmp
mov
in
lock
stc
lods
xchg
mov
push
imull
push
mov
mov
repnz
mov
jg
sarb
les
sub
push
mov
xchg
mov
in
inc
ficoml
leave
int
ficompl
int3
push
xchg
mov
pop
xor
aaa
jo
add
aam
pop
mov
inc
pusha
mov
push
hlt
es
cwtl
sbb
dec
fwait
testl
sub
incb
ja
or
lock
push
lods
adc
imul
push
mov
mov
xor
js
call
lret
imul
adc
nop
daa
and
ret
sub
mov
fisttpl
loope
mov
dec
cmpsl
repnz
adc
std
adc
mov
push
cli
test
or
je
mov
adc
fxch
aad
jno
sub
mov
ss
imul
xor
int3
jl
and
push
jns
cmpsb
scas
loopne
cmp
mov
jmp
mov
jle
mov
cmp
cmp
pop
xchg
jo
add
sbb
pop
xor
jecxz
or
in
cmp
pop
ja
mov
jne
inc
decl
adc
push
push
mov
ja
and
dec
and
data16
cmp
push
cwtl
and
sub
cmp
mov
and
sahf
xor
stos
xchg
pop
jb
adc
cmpsl
fstpl
lock
repz
les
xlat
xchg
lea
out
push
adc
insb
shl
fisubrl
inc
dec
and
cmc
daa
mov
test
scas
mov
jbe
subl
cltd
jo
mov
mov
jb
imul
fsubs
cld
or
insl
sbb
mov
lcall
dec
in
sarb
in
lahf
stos
fisttps
imul
sbb
int3
pop
inc
sub
ljmp
jmp
jle
mov
mov
les
js
subl
stos
cwtl
jp
or
movsl
pop
notl
inc
bound
mov
imul
sbb
push
dec
add
pop
jb
xchg
sbbb
mov
int3
outsb
add
push
push
and
mov
jp
cltd
pop
lret
add
andb
xchg
push
mov
pop
pop
out
jbe
or
fidivrs
lock
dec
shl
push
push
lods
stos
add
repnz
sub
add
cmp
sbb
push
sahf
mov
in
es
faddp
add
jecxz
imul
or
scas
pop
cli
les
jns
dec
aaa
inc
scas
test
mov
lcall
xor
mov
jle
mov
rclb
repnz
fdivrl
scas
jg
mov
fldl
lcall
mov
push
pop
xchg
pop
cs
cmp
div
push
adc
mov
fs
sbb
add
aam
mov
pop
outsb
push
dec
roll
test
pop
mov
cmp
jecxz
clc
dec
pop
xchg
sub
sti
sub
mov
cmpsl
popa
inc
into
dec
adc
movsb
or
fistpll
ficompl
lret
cmp
dec
ds
sti
stos
loope
mov
or
dec
imul
out
sub
movsl
xchg
xor
pop
xchg
sub
out
cmp
pop
imul
mov
push
imul
jno
jmp
out
and
mov
jp
mov
stc
std
mov
xor
adc
push
mov
or
aaa
rol
xchg
ljmp
lea
cmp
ret
sub
pop
cmp
rclb
xor
fcom
lea
sub
insb
lea
sbb
testl
shr
test
push
nop
inc
xchg
or
dec
in
pop
scas
push
insl
or
cmp
pusha
incl
xor
std
sub
and
or
inc
lea
fcom
addl
mov
rcr
push
loope
mov
loope
int
jecxz
test
push
mov
mov
mov
and
sub
testl
adc
repz
mov
or
aaa
push
mov
cmp
inc
loopne
mov
cmpsl
push
idivl
jecxz
add
dec
mov
dec
jnp
aas
adc
add
jl
jp
enter
mov
xchg
ficoms
jmp
rorb
ss
add
jg
negb
mov
loop
mov
sub
call
decl
fs
pop
out
mov
gs
add
push
ss
loope
aam
add
lahf
daa
mov
jb
mov
and
jge
cmp
icebp
inc
lods
stos
sarb
mov
cmp
cmp
or
inc
sub
repz
lods
xchg
dec
js
mov
cli
js
outsl
fidivrl
shll
push
lods
or
pop
xor
xor
push
push
inc
dec
repnz
cmp
push
je
push
out
mov
outsb
dec
movsb
cmc
jne
cmovne
stos
ja
push
inc
mov
and
push
xor
push
mov
sahf
outsl
clc
movsb
repnz
movsb
arpl
fiadds
add
pusha
dec
jae
scas
mov
push
pop
push
inc
pop
fwait
lcall
loopne
mov
gs
incl
js
sbb
out
pshufw
xchg
cmp
ret
sbb
jnp
mov
jge
fucomi
sub
cltd
inc
lret
fldlg2
cmc
mov
shl
or
and
adc
movsb
repz
aaa
stc
es
push
sbb
mov
ljmp
inc
test
inc
out
cmp
sahf
loop
and
inc
xor
orl
pop
loope
int3
out
scas
mov
pop
push
mov
xor
scas
cmp
pusha
jnp
inc
mull
pop
imul
out
cwtl
inc
loopne
lea
imul
fwait
andb
imull
xchg
int
ds
jns
in
test
imul
dec
jae
xchg
cs
outsl
shr
xchg
mov
and
pusha
out
aam
pushf
xor
pop
test
popf
xor
mov
mov
iret
cmp
stc
int
ret
mov
fdivs
sub
int3
cmpsb
push
lods
or
adc
pop
cmp
cmp
jle
xor
inc
es
stc
push
lods
push
pop
loope
push
stos
mov
adc
insb
dec
loope
mov
mov
mov
mov
dec
xchg
out
mov
cmp
pop
adc
sti
mov
mov
jo
inc
call
mov
adc
add
cmp
sbb
xchg
popf
test
nop
fs
ret
adc
push
mov
test
pushf
pop
xchg
adc
add
xor
flds
sahf
or
xor
sbb
js
into
or
cwtl
xor
push
push
cwtl
mov
jnp
cwtl
dec
add
push
add
enter
test
cmpl
and
loop
push
cmp
sbb
pop
int3
jno
cltd
add
dec
xchg
dec
fadds
lods
sbb
dec
jmp
jp
in
das
or
in
push
test
cmp
lret
pop
and
js
iret
pop
dec
add
xchg
sub
repz
mov
orb
lret
popa
xchg
mov
int3
arpl
sbb
loop
or
in
cmp
add
cltd
lods
adc
sbb
sbb
jnp
std
lods
icebp
movsb
jp
enter
adc
jo
jno
mov
cmp
in
loope
imul
in
ret
out
notb
lods
sub
dec
add
xor
out
icebp
stos
mov
dec
cmp
xlat
mov
mov
pushf
test
jns
add
mov
mov
movsb
jl
push
dec
mov
out
mov
sahf
out
xor
mov
wrmsr
push
sbb
aaa
sbbl
xchg
and
cmp
jg
sahf
stos
jl
into
jns
addr16
xchg
loopne
movsl
fwait
std
mov
xchg
push
or
enter
cmpsl
loopne
cmp
inc
rorl
out
in
jbe
adc
and
or
imul
inc
mov
int3
arpl
in
ljmp
jnp
dec
lods
push
iret
adcb
fdivs
aam
out
and
jns
insb
inc
jbe
fcmovne
mov
fstpt
mov
cld
mov
xor
dec
or
pushf
xchg
fldt
mov
adc
lret
jne
sbb
loope
xchg
cltd
push
fdivl
out
dec
jg
fildl
pop
insb
in
andl
aad
cmpsl
add
fimull
addb
enter
and
cwtl
imul
cmp
dec
or
xor
sti
xor
lods
mov
jno
inc
sub
test
xor
in
push
decl
cli
out
dec
ja
push
mov
testl
repnz
dec
mov
int
addr16
cmp
mov
and
das
fwait
push
cmp
cmp
in
dec
repz
in
sarb
mov
mov
arpl
test
test
fimull
push
mov
sub
pop
loop
movsl
sbb
jg
dec
fldcw
and
push
jns
and
pop
pop
cmpb
cld
inc
jl
dec
aam
jge
add
sbb
jg
jno
hlt
mov
cs
add
in
adc
cmp
xchg
adc
pushf
jne
dec
sub
mov
call
add
cmc
sub
lock
jbe
std
cltd
cmp
cltd
sub
loopne
stos
in
fwait
stos
fsubrl
clc
dec
dec
cmp
in
pushf
cmp
push
push
mov
sub
mov
dec
test
adc
xchg
ret
fsts
mov
aam
out
ljmp
or
mov
test
jl
in
stos
int3
mov
sbb
xchg
aas
lret
pop
xchg
or
jbe
sbb
test
icebp
sbb
sub
mov
pop
fwait
dec
push
in
sbb
or
push
lcall
imul
and
mov
out
xchg
test
bound
add
fisubrs
popa
sbb
jns
ljmp
out
xor
mov
pusha
fs
jbe
es
shll
repnz
mov
jge
fsubs
add
cmpl
jae
cmpsl
pop
or
fdivrs
pop
pop
add
pop
or
adc
arpl
push
repz
jbe
insb
je
incl
pushf
and
xor
movsb
lock
fdivl
sbb
xor
or
xchg
or
mov
jp
jo
xchg
fld
test
xlat
mov
cmp
ret
aad
dec
xchg
in
push
cmpsl
popf
iret
adc
jns
sbb
loope
mov
clc
cltd
inc
in
mov
push
scas
fldcw
loopne
xor
aad
inc
or
shll
pop
pop
inc
add
jl
jbe
lock
addr16
xchg
aas
in
rsqrtps
push
in
ret
cltd
and
or
mov
mov
cmpsl
fldl
mov
scas
inc
pop
imull
ja
mov
xor
int3
cli
sub
or
lret
popa
cli
and
cmp
mov
dec
cs
imul
sbbb
push
mov
rol
int
notb
fwait
outsb
pushf
fnstsw
loope
adc
shrl
sub
xlat
out
or
idivb
jle
pop
les
jns
xchg
sub
xor
jg
mov
dec
lahf
fistl
adc
cmp
cmp
mov
jne
mov
fs
fstpt
xchg
aam
call
or
std
xchg
jno
stos
mov
add
mov
sbb
inc
dec
in
call
mov
js
push
xorb
outsb
jnp
mov
mov
enter
dec
adc
push
cmpsb
push
fwait
out
cmp
ret
sbb
pop
insl
cmpsb
cmp
jno
andl
xchg
jge
les
sbb
and
lods
shlb
imul
cmp
insb
push
je
push
inc
sub
jo
sbb
jb
sar
sbb
add
incl
into
sub
out
std
xchg
and
sbb
push
pop
jae
mov
pushf
mov
jg
ljmp
call
sbb
out
rcrl
and
out
xchg
or
cmp
push
and
popa
insl
dec
mov
xchg
mov
stc
jae
mov
iret
cmp
jl
push
cmp
inc
or
cmp
sbb
ret
imul
sub
lock
push
in
out
push
sbb
insl
push
enter
cmpsb
bnd
lods
and
pop
insl
adc
sub
sub
imul
sahf
into
pop
scas
add
inc
stc
loope
xor
sub
je
mov
adc
jp
shl
leave
pop
xlat
push
xchg
clc
out
icebp
jns
xor
fwait
dec
push
adc
ss
popf
dec
notb
test
enter
int3
pop
jnp
out
decb
bound
pop
mov
int
test
push
andl
lret
into
inc
stos
iret
int
lcall
popf
into
cmp
push
test
jmp
out
cli
pop
in
test
mov
adc
mov
lahf
mov
pop
gs
rclb
subl
add
xor
call
xor
push
push
into
fcmovnb
out
mov
mov
mull
inc
sbb
push
in
pop
inc
ret
mov
in
and
pop
pop
ret
xor
stos
dec
fldl
stc
es
testb
push
push
outsl
xchg
fucomi
test
cltd
lret
jbe
sub
stos
jp
add
aaa
fwait
xor
lret
mov
sbb
lods
dec
mov
and
hlt
jmp
mov
adc
test
push
les
ror
shll
out
sbb
inc
test
in
outsl
loop
stc
push
or
jae
jae
mov
lcall
ljmp
les
ljmp
nop
out
fnstcw
cmp
cmp
repz
add
pop
jmp
mov
jno
pop
mov
scas
rcr
jno
pushf
addr16
clc
in
ss
push
fistpll
jo
daa
inc
pop
fdivs
adc
loope
jo
xor
insb
cltd
aam
out
or
into
cmp
cmpsb
jge
aas
adc
test
dec
pop
shrb
nop
lret
push
icebp
insb
adc
push
in
push
xor
addb
std
add
or
fisttpl
jl
pop
cmc
or
orl
push
or
mov
out
inc
loop
push
scas
das
and
lea
pop
adc
jo
bound
stos
mov
shlb
push
pop
mov
mov
mov
sbb
fstpt
mov
jnp
and
mov
pop
mov
popl
daa
stos
push
in
mov
inc
and
sbb
add
xchg
add
dec
loope
pop
cmc
inc
scas
sbb
lock
iret
enter
lret
add
pusha
arpl
data16
in
add
adc
shll
adc
mov
lds
rorb
inc
fnstsw
inc
repz
xor
pop
jmp
mov
xor
push
or
push
push
loopne
pop
aaa
push
jbe
jo
lea
pop
ds
adc
add
popf
pop
lret
stos
xchg
dec
shlb
loopne
sub
sahf
pop
bound
sbb
and
aam
jae
js
in
push
dec
xchg
jp
ret
inc
sub
pop
add
loope
xor
insb
outsl
cmp
xchg
addb
jae
jae
test
cmc
mov
inc
lahf
or
pop
pop
rolb
sarb
push
repnz
call
jl
sahf
xchg
rcrb
push
frstors
inc
pop
je
cmp
xlat
xor
popf
fs
mov
push
adc
stc
sbb
and
mov
jae
leave
jp
sti
in
sbb
or
scas
ds
test
divl
in
pusha
jg
shl
movsl
cmp
push
xchg
adc
and
sub
outsb
cmc
cli
adc
mov
xchg
push
iret
mov
xor
arpl
and
and
push
nop
cmpl
imul
add
push
shll
sahf
sbbl
push
shrl
ret
imul
sub
imulb
cmpsw
ds
jbe
fcmovbe
mov
shlb
fcomi
pop
sbbl
mov
push
adc
jge
aaa
jmp
test
dec
mov
lods
movsl
shll
ret
mov
inc
ds
add
in
pop
hlt
sbb
mov
add
push
shll
lods
pop
movsb
sub
mov
lret
mov
and
or
dec
sub
stos
inc
jo
imulb
mov
pusha
loop
mov
adc
adcl
sbb
cld
pop
movsb
pop
lret
mov
out
jno
mov
daa
call
add
adc
test
or
push
mov
sbb
push
push
call
mov
popa
mov
aaa
sub
mov
mov
inc
ficomps
push
pop
mov
add
mov
mov
cmpsb
and
mov
scas
inc
lret
xor
aad
push
sbb
cli
push
sub
fldl
arpl
cltd
ret
add
xor
fs
cmpsl
adc
lds
mov
pop
xchg
aaa
out
add
pop
ds
jl
insl
or
fisubs
movsb
push
inc
gs
mov
dec
inc
fiadds
jecxz
std
xchg
insl
push
test
daa
adc
xor
fsubrs
inc
cmp
scas
mov
cmp
adc
adc
test
decb
dec
jle
fldcw
push
stos
inc
mov
jmp
mov
ret
jb
nop/reserved
lahf
jb
roll
jg
std
clc
xchg
or
mov
pushf
fiadds
and
mov
lock
add
xor
or
das
mov
test
mov
test
fidivs
xchg
sahf
clc
or
in
inc
xchg
adc
and
xor
into
lahf
push
in
cmp
shr
iret
pop
add
jl
inc
mov
lcall
jnp
pop
sub
dec
add
add
sarb
mov
fdivs
mov
testl
dec
or
sub
ret
icebp
pop
sub
sub
out
pop
incb
cmpsb
rolb
inc
enter
xor
lret
inc
in
cmpl
push
pop
xchg
insl
test
push
xchg
cltd
addl
mov
cmp
mov
mov
ret
jb
aad
int
pop
aaa
jle
sub
adc
movsl
xor
inc
popf
xor
ret
ds
cmpsl
pop
mov
inc
jns
mov
leave
cltd
mov
aas
outsb
in
adc
mov
in
test
aad
and
or
mov
scas
and
cs
sub
stos
cmp
dec
and
dec
adc
xchg
pop
stc
dec
mov
subb
ficoml
jl
loopne
push
dec
sti
sbb
in
loop
stos
not
mov
adc
mov
cli
or
insl
and
xchg
push
inc
test
and
and
int
and
sbb
jo
fsubrp
outsb
xchg
inc
xlat
ret
scas
add
pop
aaa
push
adc
inc
pop
in
test
arpl
ljmp
mov
push
out
leave
mov
dec
mov
cs
mov
ret
dec
add
lret
int
add
adc
and
and
andb
sahf
pushf
add
add
sbb
sti
fidivs
sbb
adc
fbstp
imul
loopne
cli
repnz
sub
push
bound
and
popw
mov
cmp
mov
sbb
into
stc
pop
lret
or
xchg
lret
lret
and
inc
out
mulb
out
bound
jmp
imul
dec
pusha
inc
fstpt
data16
test
sbb
pop
dec
xor
nop
fs
jp
dec
scas
pop
sub
arpl
add
adcl
aad
sahf
rcrl
insb
xchg
test
mov
lods
out
filds
xor
fsts
sub
in
testb
sbb
jmp
xor
adc
cmp
aaa
xor
scas
lahf
imull
dec
push
call
push
outsl
jb
jbe
je
mov
in
sti
xchg
mov
cs
mov
mov
xchg
pop
loop
mov
jl
mov
cmp
outsb
dec
dec
ret
popa
fdiv
lahf
and
inc
or
aaa
test
popa
cs
sbb
mov
push
or
ret
push
jo
jl
call
cmpsl
lds
cmc
sbb
popf
fistpl
push
ljmp
pushf
mov
jp
das
lret
dec
dec
cwtl
xor
cmpsb
repnz
mov
xchg
in
out
imul
les
mov
xchg
data16
mov
out
test
leave
fbstp
mov
push
into
arpl
jle
push
fidivl
sub
pop
lods
loopne
test
push
xor
add
popa
pop
pop
arpl
lret
mov
or
adcl
sbb
sbb
sbb
dec
rol
test
outsb
sub
mov
xchg
sub
test
adc
idivb
jnp
and
and
fistl
imul
xor
test
data16
adc
mov
out
inc
repnz
sbb
leave
pop
cltd
mov
push
cmc
inc
js
inc
xchg
push
mov
fnclex
jns
xor
mov
in
les
sti
inc
out
xorl
adc
fnsave
inc
testl
xor
jno
js
dec
mov
lcall
push
stos
jg
pop
pop
scas
das
cmpb
jae
pop
cmp
ficomps
loop
scas
xchg
sub
sahf
lock
push
popf
decl
sarl
mov
and
push
and
xchg
push
xor
xchg
lahf
xchg
cmpsl
stc
rol
aad
pop
xor
cmp
in
xchg
push
cmpsb
add
loop
and
adc
push
push
sarl
push
inc
push
xchg
mov
fstpl
adc
push
jp
xchg
les
ljmp
jmp
sbb
push
mov
stos
addb
inc
push
adc
xor
fnstcw
jp
jmp
sahf
xchg
dec
or
out
bound
mov
test
std
xor
test
cltd
pusha
fisttpl
dec
shlb
scas
adc
cmp
shl
jmp
mov
lea
sbb
bound
mov
xchg
ljmp
jo
mov
fwait
dec
dec
std
je
mov
cmp
lahf
ss
mov
in
push
mov
fsubs
roll
inc
push
jb
jecxz
xchg
xchg
add
push
mov
mov
inc
mov
sbb
orl
push
mov
jge
out
xchg
jp
xchg
cmpsl
or
in
adc
add
popf
js
jp
mov
arpl
xchg
test
mov
hlt
adc
aas
adc
dec
test
xchg
jo
or
xchg
les
cmpsl
sahf
xchg
xchg
jns
and
clc
xor
jmp
ret
pop
jno
mov
or
sarb
popa
inc
cmpsb
cmp
or
shlb
adc
aas
or
inc
jb
jmp
nop
imul
dec
mov
cmp
and
lods
sbb
addb
popf
out
and
push
mov
shrl
das
sti
xchg
popf
test
xchg
sar
mov
mov
shll
subb
add
lret
movsl
add
adc
xchg
push
int
inc
fcoms
mov
fnstcw
push
mov
fimull
ja
insl
stos
push
ljmp
cmpsl
inc
cltd
sti
pop
jo
xchg
dec
or
xor
call
sbb
scas
and
je
jo
shll
rclb
fnsave
push
jmp
sahf
mov
mov
push
adc
roll
subl
imul
add
mov
adc
fistps
outsb
add
sahf
ja
jne
inc
fstl
scas
inc
sbb
sbb
lock
xor
clc
int
ljmp
mov
and
cmp
mov
push
mov
in
test
in
or
aas
push
jp
inc
divb
call
and
inc
mov
xchg
sub
adc
mov
sahf
ljmp
jmp
mov
iret
mov
cwtl
inc
fmull
sahf
jnp
adc
shrl
bound
lret
mov
cbtw
das
pop
std
push
jmp
mov
data16
add
cmp
insl
or
and
jmp
sbb
mov
push
in
fbstp
xor
cld
es
push
mov
dec
jle
jbe
xchg
test
cmp
inc
jo
pop
cmpsl
push
jae
repnz
mov
cmp
xor
lock
or
stos
or
call
xor
rcr
orb
jge
insb
jle
pop
jbe
pusha
repz
out
cmp
inc
push
popf
test
push
stc
std
fnsave
in
fstpl
dec
mov
jbe
push
jecxz
jb
sbb
mov
mov
imul
not
test
ret
das
outsl
push
mov
imul
pop
mov
mov
jbe
cmp
mov
sbb
jmp
xchg
sub
ds
sbb
ds
das
xchg
into
jp
shrl
les
movsl
ds
enter
sbb
inc
pop
popf
mov
int
pop
xor
mov
ljmp
sbbl
pop
dec
in
fs
call
mov
addr16
dec
add
dec
in
sbb
mov
inc
pop
xchg
pop
out
loopne
dec
mov
ja
xor
enter
xchg
sub
int
jmp
pop
mov
and
jo
sar
adc
out
jnp
popa
stc
jmp
add
adc
nop
mov
jnp
sbb
in
shl
mov
push
push
ja
sbb
cld
outsl
ret
outsl
stc
push
and
pop
mov
inc
loopne
into
loope
inc
dec
fbstp
lret
shl
js
aad
stc
and
jg
push
and
pop
xchg
stos
stos
outsl
pop
mulb
mov
sbb
mov
xor
pop
fistpl
jge
icebp
repnz
and
push
leave
movsb
xor
xchg
mov
sub
test
out
icebp
push
mov
mov
add
clc
mov
mov
arpl
fstpt
mov
push
lahf
enter
dec
fbstp
mov
fldl2t
clc
xlat
cmp
jmp
pop
mov
test
jb
push
mov
ret
lret
sbb
cmp
mov
imul
lods
push
cmc
int
lods
add
test
jb
scas
repz
fbld
mov
mov
imul
outsl
mov
es
and
dec
push
movsb
jo
popf
fcoms
or
pop
add
clc
xor
mov
push
ljmp
xor
pop
sti
xchg
mov
out
jmp
jle
fsubrs
ss
xor
mov
cmpsl
shlb
loop
push
and
xorb
jl
xor
jno
or
add
mov
push
cmp
dec
loop
pop
dec
and
mov
pop
enter
inc
jmp
mov
imul
jge
in
repnz
lcall
int3
fmulp
mov
mov
movsb
push
ja
push
sbb
out
sbb
jae
movsl
inc
xor
cmc
into
nop
pop
ljmp
pop
adc
jb
int3
fcompl
loopne
sub
or
test
push
aam
or
dec
push
push
sub
xchg
sub
or
shll
dec
in
add
shll
insl
inc
or
pop
out
das
scas
pop
imul
mov
sbb
push
dec
pop
rorl
pop
jp
add
shll
xor
in
cld
push
mov
in
in
pop
cld
push
lea
insb
scas
pop
rclb
add
imul
pop
mul
inc
mov
push
push
test
xor
pop
push
sub
lret
repz
push
mov
mov
clc
mov
dec
psrlq
adc
shll
pop
cld
xchg
in
inc
pusha
xor
xchg
mov
inc
push
pop
sub
ss
jp
lods
in
clc
test
jno
fnsave
cs
pop
sti
dec
add
lods
mov
xchg
icebp
sub
pop
cld
xchg
lea
mov
pop
loop
jle
pop
cmp
sub
std
movsb
dec
int
add
jo
roll
std
xchg
dec
dec
ret
ljmp
jecxz
sub
scas
add
mov
xchg
lods
pop
idiv
jbe
fdivl
fwait
outsb
pushf
lret
mov
das
outsl
jmp
jne
aam
inc
pusha
mov
rcll
aaa
xor
inc
jmp
xor
shrl
aaa
and
push
std
push
mov
popa
loop
andl
mov
push
pusha
sub
pop
cmpl
setno
push
loop
je
mov
mov
gs
pop
add
inc
pusha
jge
jp
adc
sbb
mov
stos
loopne
test
sahf
cmp
pop
and
jno
push
cld
lcall
mov
sbb
sahf
and
or
stc
nop
daa
sti
repnz
push
repz
inc
das
and
add
sbb
aas
imul
pusha
xlat
dec
pop
or
dec
movsl
ret
mov
add
out
adc
scas
lea
add
int3
pop
movsl
dec
shlb
ret
fisttpl
jmp
loopne
push
in
xor
or
repz
sub
xchg
int3
pop
sbb
sub
outsb
add
cmp
sarl
jl
push
les
fwait
cld
lcall
lock
jp
xor
mov
mov
push
push
xchg
push
sbb
lods
cmpb
cs
sub
dec
sub
loop
sbb
mov
inc
cmp
add
outsb
add
loope
jne
cmpsb
sub
and
sbb
mov
xchg
mov
inc
fidivl
and
cwtl
xorl
fnstenv
ficoms
std
cmpps
add
mov
rolb
push
push
loope
jne
sbb
mov
mov
and
cmpsb
cmp
ja
ljmp
jecxz
adc
dec
cmp
popaw
clc
xchg
rcrb
mov
push
call
xor
or
ljmp
jno
call
lea
mov
fstpt
in
cmpsl
pop
test
xchg
enter
pop
add
mov
cmpsb
jp
shl
sbbb
inc
daa
ss
into
out
add
cmc
fnsave
push
xchg
pop
jne
inc
lods
inc
ja
fcoms
push
fidivrl
repnz
decb
jle
loope
lock
stos
pushf
cmpsb
scas
cmp
fidivl
addr16
inc
cmc
mov
xchg
filds
ds
pop
cmp
lcall
mov
mov
cmpsb
push
sbb
mov
notb
or
cld
adc
dec
sarl
lods
dec
loopne
imul
iret
cmp
cmp
fwait
inc
fdivrs
rorl
sub
adc
movsl
add
inc
mov
in
add
iret
mov
inc
outsb
xchg
cli
dec
pop
sub
notb
lcall
in
inc
test
xor
shrb
xlat
lcall
push
cmp
xor
das
fistl
mull
push
add
sbbl
in
insb
and
sahf
and
mov
aas
and
xchg
lods
or
out
jns
pop
out
push
xchg
inc
filds
ja
cltd
je
add
or
shl
sub
adc
sbbl
xchg
mov
fcompl
push
mov
lcall
in
jns
add
jle
fsubs
pop
ljmp
das
sarb
std
in
fisttpll
scas
mov
jg
daa
lcall
mov
mov
mov
sahf
arpl
adc
jecxz
inc
xchg
fdivrp
push
cmp
in
push
fdiv
xchg
movsl
cmp
fidivrs
scas
fsubr
out
cmp
xor
inc
out
jmp
add
xor
xchg
outsb
cmp
pop
ss
lds
sbbl
jmp
mov
and
out
scas
adcl
in
pop
mov
xor
decb
das
stos
xchg
push
ss
dec
pop
mov
in
pop
cli
mov
in
sti
rcll
cmpsl
sahf
popa
adc
adc
insb
test
imul
int3
insb
mov
arpl
lret
jmp
pop
push
xor
push
push
push
dec
pop
pop
fstpt
jecxz
lret
filds
cmpsb
js,pt
push
movsl
cltd
lds
push
scas
inc
mov
dec
in
sbb
rsqrtps
imul
mov
mov
test
pop
xchg
and
movsl
push
mov
jno
sub
stos
mov
fnstenv
into
out
push
movsl
int3
cmova
inc
add
dec
movsb
xor
pop
fisubs
sub
std
adc
pop
jge
mov
es
push
cmp
pushf
xor
cli
mov
push
xor
xchg
xor
arpl
xor
ret
pushf
mov
je
sub
wbinvd
and
dec
inc
fsubs
jecxz
ret
pop
jbe
pop
test
adcb
lods
pop
popa
pop
fistpl
fiadds
fldlg2
push
outsb
fidivl
iret
dec
loop
dec
clc
popf
push
nop
fs
pop
fwait
mov
lea
sbb
clc
xchg
arpl
movsb
addb
lahf
pop
dec
fidivrs
xor
in
adc
or
hlt
cmp
mov
arpl
adc
xchg
mov
lds
mov
push
cli
jecxz
out
xchg
xor
and
inc
frstor
mov
lock
pop
outsl
jmp
or
into
xor
push
test
and
push
sub
rcr
inc
adc
inc
pop
repz
mov
std
pop
out
push
jne
clc
xor
jo
rcrl
mov
shll
mov
cltd
xor
adc
notl
xor
ds
xor
popf
push
fidivrl
outsl
inc
xchg
fnsave
addr16
dec
data16
adc
test
test
pop
add
jbe
inc
pop
xor
inc
in
cmp
in
xor
push
mov
mov
mov
pusha
ljmp
inc
xor
mov
loope
test
inc
loope
mov
jne
lret
dec
fxch
jle
in
xchg
mov
lds
push
cmp
iret
lock
scas
push
leave
and
mov
pop
push
rorl
gs
jmp
enter
ret
pop
mov
in
pop
in
cli
mov
lea
or
cmp
xlat
ljmp
mov
sbb
sub
push
pop
push
jl,pn
sti
stos
cmpb
stos
pop
sbbl
jne
lahf
in
cmp
pop
mov
loopne
jo
adc
repnz
push
push
xchg
cmp
push
inc
in
aad
or
cmp
shrl
lcall
dec
mov
sbb
or
jns
mov
or
outsl
idiv
out
sbb
je
les
sub
lods
sbbl
addr16
fistpll
pusha
jg
sbbb
rolb
stos
insb
je
mov
cmp
cwtl
adc
out
cmpl
mov
jp
data16
jo
mov
int
inc
xlat
movsl
addr16
stos
adc
inc
fxch
jns
movsb
repnz
xlat
add
ljmp
and
ret
ret
and
xchg
ds
dec
dec
or
inc
dec
cmp
mov
xchg
jecxz
movswl
cltd
js
popa
loope
xchg
cmp
cmp
and
insl
mov
pop
pop
test
int3
fmuls
lods
xor
fisubrs
arpl
aam
stos
jne
jno
adcl
mov
jns
and
stc
dec
jmp
cmp
out
arpl
adc
sbb
push
into
xor
mov
fs
fs
iret
fs
xchg
xchg
jle
mov
in
pop
or
addr16
and
lods
out
inc
icebp
push
int3
arpl
shrb
shlb
or
jp
and
mov
mov
xchg
or
xchg
sti
lock
lods
das
xchg
sbb
testl
notb
jns
aam
call
jge
test
xor
mov
popa
xlat
push
cmp
call
pop
hlt
out
rclb
call
mov
and
mov
xlat
sarb
rorl
call
je
shll
xchg
or
test
sbb
lahf
adc
js
lahf
jbe
and
movsl
popf
std
sbb
jns
mov
xchg
popa
lock
push
xchg
adc
mov
in
es
pop
jmp
sbb
call
and
push
pushf
js
fidivrl
mov
ljmp
cwtl
ds
insl
jo
mov
sbb
jae
mov
adc
add
scas
test
mov
repz
inc
pop
cli
scas
and
push
sbb
in
iret
cld
push
add
jge
xlat
or
hlt
cmp
insb
xchg
add
and
cwtl
sub
add
repnz
mov
and
les
out
sbbl
sti
xchg
mov
repz
xlat
sub
mov
lods
mov
pop
scas
mov
ds
fdivrp
rcrb
cmp
loop
popa
mov
test
in
pop
lahf
test
stos
xor
push
inc
int
stos
test
cmp
xor
into
adcl
sbb
ljmp
lahf
mov
icebp
push
orb
mov
imul
leave
popa
push
cltd
aas
xchg
dec
je
jg
in
and
aad
popf
push
sub
xor
pop
bnd
add
jb
std
xchg
or
out
cmpsb
ja
dec
add
sub
mov
movsb
test
rcrb
lea
cmp
js
mov
leave
xlat
aaa
sbb
jae
mov
rorb
lahf
mov
filds
add
es
push
aad
sbb
jno
push
in
mov
mov
mov
or
pop
cmp
pop
cs
push
ljmp
or
inc
popf
ret
imul
lret
cmpsl
mov
sarl
adc
rcll
xlat
shlb
icebp
cmp
cmc
bound
fists
dec
add
iret
stos
jne
rcl
sbb
and
mov
in
sbb
sub
outsl
jl
dec
and
push
push
jb
mov
leave
sarb
mov
inc
insl
add
push
mov
cltd
hlt
sti
les
xchg
inc
and
lret
sti
sub
adc
test
imul
movsl
fdivl
scas
popf
lods
mov
xchg
mov
cld
ret
std
jbe
or
cld
idivl
cmpl
or
mov
sub
sub
mov
cmpb
adc
jns
test
xchg
idivb
rorl
add
mov
fisttps
fwait
mov
sbb
push
inc
jmp
add
mov
shr
xor
sub
cmp
dec
shll
mov
jg
sub
adc
adc
or
lods
lea
mov
cwtl
push
mov
pop
cmpl
pop
xchg
dec
cmp
div
push
adc
pop
lahf
icebp
push
leave
fnstcw
push
mov
das
fbld
mov
sub
mov
sub
rcrl
mov
or
lcall
lds
cmp
push
adc
ret
data16
ds
mov
push
in
sbb
xchg
lret
sbb
push
dec
rorb
pusha
cmp
pusha
les
mov
fidivrl
pop
xchg
leave
mov
adc
mov
sub
xchg
xor
lods
gs
or
jp
jmp
mov
lods
lret
jb
subl
push
test
daa
int3
mov
pushf
repz
pop
cmovae
xor
and
popf
push
push
mov
shrl
stos
cmpl
mov
mov
rolb
js
inc
stc
cmp
pop
sbb
test
in
les
sbbb
hlt
ret
adc
sbb
je
or
sahf
dec
push
cltd
fwait
jmp
les
pop
stc
sbb
mov
test
adc
jno
jno
xor
int
sub
into
rol
mov
add
imul
add
push
push
jmp
shll
mov
jae
lahf
data16
xchg
or
inc
mov
ret
out
loope
lret
in
std
push
inc
hlt
dec
or
xchg
push
or
out
or
and
mov
xor
jbe
or
pop
lods
test
ret
or
fwait
xor
sub
push
inc
mov
mov
stos
daa
mov
fwait
icebp
std
pop
jne
int3
adc
lret
fdivrs
cmc
cld
push
xor
push
mov
push
dec
mov
fwait
lahf
fsubrl
inc
inc
aam
ja
xchg
mov
mov
mov
xchg
mov
inc
lds
out
jg
adc
scas
push
and
pop
mov
push
mov
repz
jmp
movsl
mov
repz
sub
mov
mov
icebp
push
pop
xlat
sbb
or
inc
dec
cli
jmp
repz
enter
sub
sbb
movsb
xor
mov
orb
and
push
pop
mov
mov
imul
rcr
insl
imul
std
push
imul
cmp
ret
les
or
and
iret
push
dec
sbb
cs
negb
xorl
dec
xor
mov
push
call
or
cmp
mov
in
rolb
xor
mov
es
jbe
fisttps
add
sub
sbb
fsubr
cmc
jl
mov
dec
cmp
dec
pop
shld
sub
jae
in
add
push
cmp
push
aas
xchg
nop
in
mov
mov
sub
xor
or
ja
arpl
push
iret
adc
popl
or
stc
cmp
mov
addb
push
xor
mov
test
sub
pop
sbb
mov
ds
inc
fidivrl
xor
addr16
fdivrs
xor
test
cmp
nop
adc
mov
pusha
and
inc
rcrb
out
pop
sbb
pushf
mov
lds
mov
rcr
loopne
testl
xchg
mov
add
pop
cmpsl
out
das
xchg
ljmp
jb
inc
lar
nop
sbbb
out
jmp
in
jb
aam
jbe
lcall
roll
loopne
pop
mov
pop
mov
xor
test
xchg
addr16
fimull
xchg
adc
inc
fisttpll
clc
xchg
cmc
cld
push
stos
movsb
cmp
orb
out
push
jb
enter
cmp
jo
and
lock
call
and
cmp
shlb
test
xorl
push
add
pop
into
sub
mov
mov
cmp
and
out
scas
inc
fs
inc
fdivp
insl
adc
jp
outsb
mov
nop
sahf
and
ret
lret
orb
loope
movsb
push
out
mov
pop
lahf
in
pusha
add
lods
add
pop
ljmp
xor
xor
mov
outsb
cli
adc
jns
dec
insb
add
fsubl
mov
test
sbb
insl
stos
hlt
push
mov
push
mov
hlt
nop
push
repnz
into
lock
aas
int3
adc
xchg
cmp
out
popf
or
xchg
js
jg
dec
sub
clc
fadds
sbb
xchg
dec
aam
and
push
mov
repz
sbb
mov
pop
sbb
ljmp
jno
adc
in
movsb
jne
sub
lret
sub
cmp
mov
lds
and
mov
dec
adc
in
out
sbb
adcl
xchg
mov
lds
in
fs
into
xor
das
stos
sbb
cmp
pop
fnstsw
fs
int
jnp
mov
int
je
addr16
xchg
add
and
add
ret
pop
arpl
popa
stos
pop
cld
fbstp
je
sub
in
mov
and
or
add
inc
lret
pop
scas
inc
pop
xor
shrb
mov
add
movsl
test
push
cmp
dec
add
pop
arpl
cmp
mov
xchg
sub
shrl
mov
xchg
outsb
add
adc
aaa
arpl
movsb
ds
in
cwtl
mov
push
inc
fstl
int
cmpsb
rcrl
std
cs
xchg
rclb
mov
xor
inc
nop
jmp
mov
jnp
add
aad
push
pop
popf
adc
sub
fwait
and
xor
out
cmpl
and
push
mov
dec
in
pop
gs
push
mov
das
icebp
cwtl
test
icebp
mov
sti
jmp
or
xor
adc
pop
dec
or
or
sbb
mov
ret
xchg
jae
mov
imul
mov
sbbb
push
rorl
mov
mov
shrl
ret
lcall
insb
and
add
inc
ljmp
mov
daa
xchg
cmpsb
xor
mov
adc
add
cmp
idivl
rcrl
mov
cmpl
popf
pop
test
in
mov
dec
mov
in
add
ja
insb
push
dec
aam
test
out
rcrb
xchg
outsb
imul
mov
je
andb
call
repnz
or
mov
or
daa
mov
sbb
les
cmpsl
sub
jge
dec
mov
jmp
rclb
mov
or
push
mov
frstor
add
es
mov
loopne
or
mov
sub
push
fcoml
sub
ja
sub
dec
mov
jge
xchg
sub
movsl
in
mov
dec
out
jo
adc
fistpl
sub
mov
or
hlt
lods
subl
xor
scas
mov
jge
inc
lods
inc
jne
add
mov
xlat
jp
nop
sub
xor
rcrl
ds
gs
mulb
sbb
ss
ja
jns
xchg
mov
test
sbb
imul
pop
push
testl
push
stc
aaa
push
sbb
mov
cmp
dec
test
insl
div
fs
cli
pop
out
std
mov
add
clc
push
lea
loopne
stos
mov
mov
xchg
in
ds
lcall
dec
aas
mov
daa
cmpsb
mov
cmc
inc
dec
lock
add
iret
sub
lods
addr16
cmp
jecxz
out
popf
mov
pop
dec
loope
or
popa
ret
rolb
pusha
stc
imul
or
mov
cmc
sub
das
bound
pop
loope
cwtl
pop
mov
mov
adc
push
push
jns
sti
xchg
in
xchg
push
stc
mov
mov
sub
out
pusha
loopne
rclb
imul
mov
in
push
fiaddl
outsl
mov
mov
and
sbb
add
pop
xor
loope
cmc
sahf
pop
leave
dec
jb,pt
pop
jbe
xchg
mov
rclb
dec
jbe
nop
fs
int
rcll
xor
adc
jl
pop
sahf
int
out
shll
pushf
fsubp
or
lea
pop
sub
push
inc
jle
dec
add
or
loope
ds
cmp
roll
dec
sbb
repnz
cmp
sti
pop
movsb
mov
rolb
in
mov
sbb
stc
pop
aas
mov
xchg
data16
fbld
mov
jecxz
out
adc
lret
jbe
and
sbb
adc
rcl
pop
jle
test
mov
imul
jmp
add
outsl
sub
push
mov
popa
adc
sbb
xor
dec
iretw
push
inc
cli
cmp
mov
rcr
xchg
clc
fucomp
pop
dec
jbe
cmc
enter
sarl
mov
call
cmp
fisubl
mov
adc
pop
shrl
adc
xchg
in
std
shll
lret
and
or
and
sahf
bound
adc
dec
daa
mov
cmp
into
ja
cld
xor
xchg
cmp
pop
stos
in
cmp
leave
push
dec
pop
cltd
inc
adc
mov
movsl
ret
pop
iret
ljmp
adc
jo
sbbl
mov
mov
xchg
mov
xor
push
mov
mov
or
fsubrl
cld
xor
shlb
pop
cli
test
mov
in
cld
ljmp
push
mov
fimuls
cwtl
popa
add
mov
cmp
pop
cmp
xor
cld
dec
cmp
and
adc
inc
sub
stos
aas
jge
mov
sbb
fldl
pop
je
add
jmp
fisubrs
add
scas
sbb
cmp
repz
fwait
sub
and
fidivl
jo
xchg
jb
adc
xchg
pop
pushf
std
mov
imul
imul
and
and
dec
mov
in
sarl
pop
mov
add
outsl
aas
adc
dec
cltd
je
jp
or
mov
mov
ret
hlt
inc
adc
imul
push
jg
cmp
mov
lds
cmp
push
xchg
testl
and
sbb
leave
nop
jmp
lret
rcrl
xor
jne
jbe
lods
cld
test
imul
hlt
int
mov
mov
and
dec
push
jg
and
pop
dec
sbb
add
lcall
pop
mov
out
jle
fnstsw
and
jns
xchg
jno
cwtl
sub
enter
sub
loopne
pusha
sbb
mov
mov
xor
in
mov
sbb
or
out
sub
mov
fidivrl
dec
or
mov
cmpsl
sub
xchg
arpl
jne
scas
int
out
lea
or
adc
jle
push
mov
mov
fistpll
mov
add
js
add
mov
mov
mov
xchg
jecxz
das
ret
imul
nop
int
jecxz
pop
jg
test
jns
and
fwait
cmpsl
repz
frndint
outsb
rorl
fcompp
or
dec
lods
outsl
dec
mov
push
dec
sub
cld
stos
inc
das
xchg
std
mov
and
add
dec
aas
js
dec
push
mov
push
out
frstor
mov
out
push
sub
sub
and
or
in
das
popa
pop
ret
ror
cltd
xchg
sbb
jmp
cmpb
lret
repnz
xor
jg
dec
loopne
mov
hlt
mov
je
jle
lret
aam
add
fldl
call
dec
mov
jns
add
rorl
int3
adc
into
or
add
jb
cwtl
incb
call
mov
sbb
pop
xor
pop
jo
pminsw
xchg
cmp
xlat
mov
fistps
sub
push
jns
lds
test
sbb
repz
cmc
inc
jo
and
decl
daa
lret
and
test
dec
and
jo
mov
lret
aam
stos
mov
push
jo
pop
sbbl
je
mov
mov
xor
pop
and
mov
shlb
cmpsl
cmp
xchg
hlt
aaa
and
mov
int3
push
dec
mov
pusha
rcl
scas
pusha
popa
out
xchg
sub
push
jge
dec
mov
dec
sub
movsl
mov
call
xchg
int3
fisubrs
fs
add
and
fcoms
xchg
js
subl
mov
lret
icebp
aad
push
pop
pop
xchg
sub
cmpsb
push
xchg
scas
stos
adc
jmp
scas
inc
cmp
int3
arpl
sarl
rolb
xor
andl
es
mov
loope
push
push
mov
in
xor
cmp
roll
mov
sub
mov
inc
inc
test
pop
je
orb
push
cmpb
jp
sub
pop
inc
les
adc
and
mov
push
dec
and
mov
shlb
dec
lcall
jne
jae
xor
mov
fwait
call
test
ds
adc
mov
cmp
jge
incb
movsb
mov
jp
jmp
cmp
popl
and
sbb
sub
nop
mov
aad
out
aad
and
cmc
iret
xor
pop
jecxz
add
and
cmc
leave
fbstp
inc
dec
sbb
insb
push
push
hlt
mov
repz
xchg
adc
jecxz
ret
xor
xchg
jge
add
adcl
aaa
out
fstpl
jne
mov
dec
jecxz
mov
xor
cmpsb
in
sub
je
cmpsl
cmp
jge
test
mov
andl
adc
addr16
das
fistps
es
movsl
clc
or
es
inc
xchg
insl
sub
in
js
ljmp
int
jnp
cmp
mov
arpl
subps
xchg
ljmp
sbb
shlb
enter
ja
mov
inc
jnp
cld
stos
out
test
decb
cltd
cld
inc
inc
loop
mov
roll
subb
mov
shll
xchg
add
sbb
push
mov
jne
jmp
and
mov
loop
loopne
ret
xor
push
inc
push
or
int
or
pop
andl
cmp
inc
inc
out
pop
das
cmp
inc
push
mov
iret
jo
xchg
lret
sbb
mov
mov
sub
lods
mov
xchg
pop
icebp
cld
test
mov
lods
ljmp
xchg
ds
sbb
mov
rolb
cmp
stc
mov
getsec
into
cmp
shrb
aam
out
loope
sub
sti
iret
roll
mov
pop
inc
into
xor
fsubs
dec
jmp
sub
fldcw
xorl
dec
insb
sub
insl
daa
sub
adc
out
sti
inc
test
inc
leave
mov
inc
and
dec
add
gs
cmp
decl
xor
int3
and
ds
test
daa
cmp
test
ffree
andb
pop
jg
dec
pop
gs
popa
test
pop
jae
mov
cmpsl
and
out
dec
and
or
xor
sub
imull
cmp
scas
xchg
pop
loopne
dec
hlt
push
pop
sub
aas
cmp
insb
cli
test
adc
push
fnstenv
ss
loop
mov
addr16
add
mov
sarb
aad
lahf
push
stos
xchg
das
sub
int3
jg
out
xchg
loopne
sbb
dec
jbe
ret
sub
icebp
lods
js
fnstsw
fists
xchg
scas
test
into
xchg
xchg
xchg
ds
fildl
mov
push
inc
or
daa
iret
pop
cld
or
pop
adc
push
push
hlt
or
xchg
mov
call
scas
pop
roll
addb
push
stos
js
and
lock
xchg
mov
stos
xor
sbb
pop
add
adc
rol
dec
add
fs
call
jae
mov
out
pop
insb
mov
push
repz
gs
inc
aam
cltd
shll
leave
pop
data16
fcoms
test
ja
add
and
rcrb
addr16
xchg
fidivrl
enter
inc
sub
cmc
lea
ret
loopne
pop
mov
popa
mov
and
in
inc
mov
pop
testb
cmp
dec
stos
nop
test
jb
ja
or
cmpsb
les
sub
and
es
insb
or
and
or
movsl
negb
push
push
jmp
mov
pop
loope
in
mov
fists
pop
mov
jnp
std
inc
fisubrs
in
xchg
ljmp
ljmp
jmp
bound
dec
mov
stos
testb
xchg
xchg
fldenv
aad
cmpsb
cmp
jnp
mov
xor
aas
aaa
push
push
inc
call
jbe
aam
jmp
popf
jp
ljmp
shlb
mov
mov
cli
stc
dec
in
rcrl
push
orb
pop
xlat
lock
aas
adc
push
cli
xchg
test
mov
iret
push
jg
mov
xchg
jb
pushf
pop
dec
mov
rolb
mov
jg
aaa
push
jne
js
xchg
cmpsl
cmc
test
icebp
repz
fs
push
imul
hlt
xor
fdivr
fnstcw
mov
jbe
scas
lahf
negl
test
sbb
in
xchg
pop
mov
outsl
and
pop
cmpsb
lahf
stc
mov
push
sahf
jo
fsubrl
inc
push
sbb
mov
push
xchg
sbb
rcrb
xor
mov
imul
adc
adc
hlt
add
mov
or
shr
xchg
outsl
xchg
loop
addr16
shl
fcomps
fnstsw
lret
lods
push
push
in
cmp
jp
sbbl
in
inc
adc
mov
fs
pusha
mov
out
adc
mov
jg
fstps
ret
sbbb
jo
xlat
dec
and
inc
xor
loope
add
jne
push
cmp
orl
rcrl
in
sub
out
fadd
add
paddusb
pop
xchg
pop
mov
shlb
xor
mov
std
xchg
inc
fistl
cmp
in
pop
sbb
imul
push
pop
sarl
fstps
cmp
sub
xor
shlb
rorb
in
xor
push
jecxz
mov
fdivl
insl
icebp
adc
cmp
push
leave
arpl
scas
lock
jb
add
aas
mov
xchg
adc
daa
fsts
adcb
cmp
cwtl
mov
dec
popa
or
cld
or
add
inc
int3
adc
and
cmc
dec
bnd
lahf
jp
mov
jo
xchg
push
inc
mov
test
dec
data16
les
lahf
sub
ret
je
rcr
int
lahf
in
ret
cmp
mov
pop
and
adc
imul
sahf
dec
loopne
sub
pop
jo
mov
jp
scas
cld
xchg
loopne
dec
push
xor
sbb
in
xor
aaa
sub
divl
xchg
stos
jnp
and
mov
and
cwtl
or
mov
lidtl
xchg
pop
xchg
jg
sarb
push
lea
mov
in
mov
mov
add
push
call
sub
sbb
add
xlat
int
mov
lods
push
add
lods
inc
lock
adc
inc
pop
mov
pop
cmp
mov
mov
mov
or
push
std
lahf
mov
test
pop
les
mov
mov
std
lods
sbb
loop
dec
xchg
sbb
fdivrs
sbb
xchg
mov
push
inc
fsin
ljmp
adc
mov
insb
ljmp
push
stos
adc
mov
push
jbe
sub
cmp
shl
jnp
and
movsb
movsl
push
sub
xchg
push
test
cmp
notb
les
sub
or
inc
aaa
fwait
mov
jge
dec
repnz
mov
rcl
inc
sbb
or
pop
negb
pop
xor
or
and
push
ret
cmp
fsts
sahf
aad
and
or
ja
cmp
and
aam
fwait
xor
outsl
mov
or
cwtl
mov
jge
les
mov
jo
xor
adc
xor
push
dec
pop
cmp
and
add
loope
mov
fdivr
lcall
in
adc
inc
fiaddl
sbb
or
popa
out
add
sub
add
xor
jae
pop
aas
icebp
inc
jns
bound
add
mov
rorl
loopne
fcomi
movsb
mov
lods
mov
je
sti
cld
pop
dec
and
aas
test
outsb
pop
lret
scas
dec
cmp
int
push
jmp
dec
mov
cmp
shrl
test
mov
imul
inc
push
xchg
pop
jl
mov
divl
jb
and
lods
pop
loop
mov
pop
out
mov
jecxz
pop
ss
rcrb
dec
repz
push
aam
sbb
loopne
mov
cmp
clc
add
xor
stos
dec
dec
and
test
outsb
out
lahf
lods
popf
xor
test
mov
add
and
sbb
aaa
add
mov
xchg
or
xor
jae
xchg
popa
mov
js
jge
xorl
jns
sub
pop
mov
cld
mov
jo
mov
call
inc
mov
dec
adcl
out
pop
jo
jae
nop
sbb
test
cwtl
sbb
jae
jecxz
xor
and
push
andb
pop
insl
sahf
ror
aad
rcr
sbb
arpl
sbb
and
jb
dec
or
mov
add
repnz
push
outsl
into
gs
mov
cmp
das
int3
jge
add
dec
lahf
mov
sti
xor
xchg
lret
cmp
adcb
movsb
pushl
xchg
pop
adc
push
jne
lods
pushf
inc
push
in
lods
cmp
pop
test
mov
outsl
das
sbb
lock
in
notb
jle
sar
jl
xor
push
sbb
iret
cmc
nop
shrb
pop
pop
aad
push
jp
sub
mov
fsubrl
mov
bound
dec
push
fs
std
outsb
inc
and
push
push
xchg
sahf
or
sbb
movsl
dec
in
stos
outsb
cltd
cmp
lock
out
mov
lahf
fs
int
adc
daa
and
loopne
pop
insb
jnp
out
push
inc
addb
fcoml
jl
enter
clc
fsubrp
adcb
dec
lcall
pop
mov
fldt
loope
lods
cltd
push
popa
int
jp
out
and
clc
mov
addb
or
xchg
test
in
test
mov
test
fwait
or
das
xchg
sub
out
add
sub
mov
leave
bound
imul
lods
mov
loopne
add
bnd
sub
dec
cmpsl
in
dec
jmp
push
lods
inc
dec
sahf
mov
ljmp
pop
xor
pop
call
cmp
ret
jle
out
jle
js
xchg
sub
outsb
sub
rcrb
jbe
lods
in
lock
inc
aam
shrb
jecxz
into
sti
dec
sbb
stos
mov
ja
cmp
insl
insb
movsb
add
lret
dec
or
rcrl
jo
and
push
lret
pop
dec
stos
inc
test
es
jae
lock
daa
pop
sbb
push
daa
dec
pusha
inc
mov
or
sub
faddl
iret
cmpsb
lock
sub
jp
xchg
add
xor
jp
and
lret
xchg
into
fmul
mov
fbstp
arpl
push
jge
jmp
js
out
jp
xor
into
mov
out
sbbb
arpl
out
bound
clc
bound
mov
jg
jnp
inc
jl
cmp
aam
test
sbb
rorb
loopne
daa
ficompl
out
inc
pop
jmp
push
sub
xchg
test
sub
ds
loopne
shll
mov
andl
pop
xchg
dec
inc
push
fstpl
repz
or
das
mov
shlb
nop
mov
pop
adc
jo
mov
fsubs
pop
cmp
pusha
cmc
jp
sub
jmp
test
or
int
test
mov
jmp
lds
rclb
stos
add
out
sbb
pop
cmp
sbb
cmp
push
xchg
sub
insl
sub
sahf
cltd
fmull
arpl
loopne
mov
cwtl
jne
cmp
jb
mov
test
sub
je
sbbl
xchg
and
xor
add
pop
sahf
aaa
xor
bound
cmp
lds
dec
gs
cld
inc
fisubrs
push
mov
iret
test
or
ljmp
xor
and
and
bnd
out
jne
push
fnsetpm(287
mov
fnclex
mov
lds
aam
xchg
and
fcmovb
sub
pop
or
imul
add
jle
loop
aam
dec
out
add
mov
ds
fmul
add
and
and
outsb
pop
mov
pop
sub
add
ljmp
and
dec
fcmovnbe
xchg
clc
ret
clc
iret
js
sbb
mov
mov
hlt
bound
dec
sub
test
jge
int
jmp
xchg
dec
jno
stc
outsl
lds
xchg
daa
adc
fcom
adc
sar
xor
testb
das
sti
jmp
adc
xchg
insb
dec
sub
add
fldcw
fisubrs
add
sbb
enter
sub
rorl
xchg
cltd
shr
cmpsl
mov
test
popf
sarb
movsl
adc
int
cmp
sbb
dec
jb
mov
ljmp
ja
and
dec
lcall
js
xor
xchg
mov
push
or
sbb
or
cmp
fnstenv
inc
cwtl
pop
xchg
xchg
fistl
imul
xor
mov
je
push
ret
lcall
or
mov
mov
xor
mov
pop
movsl
movsl
adc
push
push
loop
xor
xor
adc
cmp
mov
cmc
dec
push
hlt
mov
or
pop
mov
adc
jno
sbb
loopne
jle
fadds
xor
push
sub
rcl
mov
xchg
jnp
and
mov
roll
arpl
je
and
icebp
push
das
cld
xchg
pusha
das
std
or
or
mov
std
mov
neg
shrl
sbb
outsl
loope
mov
sbb
push
dec
pop
adc
xchg
sub
outsl
xor
pop
xor
loope
push
mov
xchg
test
nop
jb
mov
in
imul
sub
lcall
mov
and
mov
fisubl
mov
push
out
lret
push
jne
sbb
mov
addr16
push
mov
cmp
bound
es
out
jmp
xor
ficoml
or
test
aad
test
dec
dec
adc
pop
loop
repnz
in
cli
pop
cmp
lds
je
pop
cmc
xchg
mov
loopne
mov
inc
or
or
test
and
inc
dec
push
js
daa
xchg
aaa
icebp
shrb
aam
jg
add
xchg
dec
push
test
aam
movsl
push
push
mov
cmc
push
sub
js
pop
lahf
adc
push
loope
mov
cmpsl
push
dec
push
push
test
in
xor
jmp
or
cwtl
and
mov
rolb
cmpsb
popa
sub
mov
pusha
add
jge
mov
and
ljmp
insl
mov
jno
test
fwait
clc
sbb
fisubrl
inc
outsl
adc
pop
cmpsb
out
sbb
xchg
mov
fsub
movsb
mov
fs
pusha
mov
bound
mov
xlat
mov
mov
mov
cmpsl
les
in
lea
inc
pop
mov
ljmp
xor
ja
dec
cmpsl
and
push
cmp
or
jg
mov
jnp
inc
fstl
adc
jo
mov
xchg
xchg
xchg
xor
inc
jno
cltd
mov
inc
out
nop
daa
inc
loop
insl
lcall
mov
push
pop
cmp
cmc
jno
add
mov
sahf
lods
cmc
sbb
arpl
orb
nopl
idivb
dec
ds
cwtl
mov
pop
iret
xchg
add
insb
sbb
ficompl
stos
xor
jb
int3
lahf
mull
ja
and
inc
add
mov
in
inc
in
jbe
cli
jecxz
mov
loop
arpl
mov
int3
and
push
shrl
cli
scas
inc
adc
mov
sub
xor
push
lods
jmp
jmp
cltd
les
in
or
pusha
notl
push
jg
outsl
sbb
dec
dec
gs
orb
mov
loope
loop
sub
mov
push
push
jmp
std
and
nop
movsl
xor
mov
call
lret
xchg
orb
or
add
jecxz
test
stos
jbe
mov
mov
lds
add
scas
mov
mov
add
loopne
fs
add
mov
sbb
push
loopne
mov
pushw
xor
push
sbb
adc
ret
xor
add
pop
addr16
xchg
jg
test
mov
stos
xchg
inc
lods
in
xchg
add
pop
lret
and
xlat
subl
sub
dec
pop
ljmp
mov
outsb
adc
add
lock
in
fidivs
pop
repnz
cld
ds
pop
xor
cld
mov
dec
scas
or
ss
mov
repnz
push
push
idivl
mov
pop
mov
jo
cmp
fcoml
xchg
loopne
ret
cwtl
jno
push
pop
mov
mov
pushf
jne
dec
cmpsl
mov
adc
xor
aam
test
pop
dec
outsb
push
jbe
sti
xchg
mov
lea
jmp
xchg
lods
mov
mov
fsubl
inc
pop
fdiv
in
test
dec
mov
cwtl
pop
jo
dec
pop
idivb
xlat
cwtl
leave
dec
sub
lcall
popf
out
mov
and
je
dec
aaa
mov
and
lods
mov
loopne
or
pop
jae
rorl
jp
lret
je
add
lcall
jo
push
in
mov
pop
mov
movsl
loope
lcall
je
push
cmpsl
test
xlat
cmc
orb
adc
push
push
xchg
popf
xor
aaa
insb
fcmovbe
mov
lods
cs
xor
fucom
mov
sbb
les
or
cmp
out
xchg
enter
rcr
push
dec
js
pop
stos
insl
arpl
sbb
xchg
sub
ds
sahf
push
ljmp
jno
push
inc
pop
add
cli
and
sbb
mov
testl
xchg
std
sub
mov
div
inc
inc
mov
orb
dec
push
mov
adc
jns
mov
and
jnp
xchg
pop
mov
sub
jbe
inc
inc
fcoml
test
das
jb
xor
or
lds
xchg
pop
push
out
cld
pushf
movsl
sub
mov
sbb
fidivl
mov
jecxz
or
ficoms
push
xchg
test
test
xchg
xchg
xor
dec
ds
xor
mov
mov
adc
sub
cs
jnp
lds
xor
lock
aad
mov
push
xor
add
xor
push
je
test
mov
clc
xchg
sub
sub
leave
lahf
or
fs
mov
pop
repz
jp
pop
and
aam
jp
xchg
pusha
loop
add
decl
stc
nop
inc
pop
xor
mov
xchg
int3
add
into
mov
sahf
rcll
in
push
jp
inc
lods
das
jae
xlat
int
jb
dec
cmc
mov
add
sbbb
jbe
jecxz
add
xchg
mov
jnp
stos
insl
shrb
data16
push
fwait
cmp
cmpsl
lret
jns
lcall
test
fnsave
cwtl
adc
in
std
mov
movsb
out
ret
pop
and
add
mov
loope
test
cs
bound
xor
lods
cwtl
push
jb
sbb
mov
mov
xchg
sbb
jns
shrb
pop
loopne
int
arpl
jb
mov
cmp
int
enter
ja
outsl
dec
lahf
mov
aas
sub
jg
cli
xchg
movsb
lds
pop
pop
mov
shl
lret
jne
ret
mov
nop
mov
invd
mov
sahf
sub
cli
mov
pop
outsl
into
pop
mov
lret
ss
pop
inc
loop
mov
std
pop
leave
dec
and
daa
std
xchg
gs
out
mov
sbb
sub
mov
xchg
ret
repz
jmp
stos
fnstsw
mov
mov
bound
stos
and
jne
sbb
sti
cwtl
orb
and
mov
loop
cmp
adcb
dec
push
or
xchg
jo
js
movsl
mov
leave
mov
xchg
inc
mov
nop
sub
xor
jle
jno
test
lret
or
subl
outsb
insl
or
loope
lcall
scas
lret
xor
outsl
jnp
fwait
int3
and
sbb
icebp
pop
insl
cmp
out
scas
ret
jbe
popf
pop
mov
mov
dec
adc
or
jnp
repz
cli
popf
cmp
aad
stos
mov
outsl
stos
xchg
sub
cli
mov
out
xchg
mov
roll
sbb
xchg
stc
lahf
sti
xchg
sbb
nop
xchg
dec
inc
mov
dec
lahf
cs
cmp
mov
arpl
adc
sub
dec
ljmp
xlat
test
pop
xchg
iret
cmpsl
inc
xor
movsb
and
daa
mov
xchg
mov
iret
mov
push
mov
mov
adc
jle
stos
pop
sbbb
jmp
mov
cmpsb
sub
pop
iret
add
pop
jo
bound
aam
jmp
inc
adc
fcmovnu
ljmp
or
movsl
sbb
jmp
pop
inc
pop
xchg
mov
xchg
stos
push
jno
scas
pop
hlt
outsl
xor
hlt
lret
xlat
aad
test
inc
pop
mov
mov
mov
call
cld
in
jnp
push
cwtl
inc
fxch
mov
imulw
in
hlt
pop
je
mov
mov
xor
cmpb
xchg
jge
les
nop
jae
and
jp
mov
fcmove
dec
xchg
cmp
bound
hlt
mov
mov
mov
xchg
sub
fldcw
xor
das
inc
push
mov
fs
loopne
inc
mov
rclb
and
insl
jge
cmp
rclb
jmp
jl
dec
lods
stc
je
sub
pop
dec
out
dec
loope
pop
pop
lock
push
jl
mov
dec
bound
mov
mov
sub
in
jmp
inc
ret
jb
adc
imul
cli
leave
sarl
cmp
call
in
pop
repz
lcall
lods
inc
sub
sub
imul
xchg
add
sbb
inc
dec
enter
data16
popa
clc
sbb
sbbl
dec
and
ror
test
sub
dec
xor
stc
shl
sti
mov
icebp
add
shr
and
movsb
push
aam
out
sar
int3
mov
andl
inc
or
or
xor
xchg
mov
adc
push
out
movsb
and
mov
add
test
leave
leave
pop
dec
push
pop
push
lea
xor
add
out
xchg
lds
sbb
sbb
sbb
xchg
insb
in
sub
lea
loopne
dec
ljmp
mov
imul
adc
addr16
mov
leave
pop
popf
sub
icebp
mov
jo
je
mov
fiaddl
leave
xor
cld
pusha
mov
xchg
push
add
pop
cwtl
pop
ljmp
push
call
pusha
push
mov
and
xchg
xor
ja
inc
dec
daa
aad
cs
push
std
into
out
jne
lret
pop
stos
cld
jp
rorl
lods
mov
lds
pop
scas
rorb
daa
adc
pop
aam
dec
push
pop
sahf
imul
xchg
aaa
dec
dec
loop
inc
pop
pop
nop
add
sub
icebp
jno
cmp
adc
out
cmp
rol
addr16
pop
lds
movd
cmp
daa
mov
push
loop
xchg
repz
jg
notb
xchg
push
ret
stos
inc
cmp
dec
jo
mov
clc
test
in
insb
repnz
jle
js
hlt
mov
dec
mov
fdivl
pop
das
lods
inc
fcompl
loope
pop
pushf
jmp
icebp
mov
push
mov
or
cmpsb
test
lret
addb
je
adc
loopne
jns
add
xchg
loop,pn
lds
mov
dec
mov
pause
out
sbbb
dec
cmpsb
cmp
ret
hlt
mov
in
sbb
iret
movsl
cmp
mov
fsubrs
repnz
mov
xchg
push
sahf
popl
and
add
cmpsb
mov
jecxz
in
mov
inc
out
test
sbb
inc
movsb
rcrb
repnz
adc
and
in
daa
cmpl
hlt
xor
xchg
fisttpll
insb
pushf
scas
and
xor
push
data16
or
xchg
in
pop
cwtl
xchg
sub
cmp
cmpsb
imul
ret
dec
mov
dec
dec
je
lods
jo
adc
imul
mov
xchg
push
xchg
sub
test
mov
clc
fisttpll
jp
mov
imul
cs
aam
stos
pusha
clc
fisubl
fldl
jg
mov
ret
or
adc
xlat
repnz
cmp
clc
inc
and
aam
cli
pop
and
pushf
xor
loope
popa
xchg
inc
mov
jle
inc
sarb
icebp
add
jmp
sub
mov
insl
adc
push
sbbl
mov
stc
bound
sub
lret
pop
mov
pop
int3
push
xchg
jne
dec
scas
aaa
orl
or
pop
xor
mov
hlt
mov
lods
adc
divl
jmp
xor
cli
xchg
or
add
les
daa
add
jge
sti
and
inc
fst
or
fs
mov
jne
sbb
sbbl
pop
xchg
adc
mov
pop
add
inc
pop
xorb
jp
sbb
mov
cwtl
add
push
arpl
xchg
push
and
cmp
aaa
subb
mov
rcrl
mov
xor
sarl
add
xlat
imul
xacquire
loope
cmpsl
popf
cltd
push
movsl
leave
mov
sub
out
sub
ss
es
cmc
icebp
scas
inc
aas
repnz
gs
pusha
int3
ficoms
xor
mov
and
and
pop
xor
inc
sti
adc
cmpsl
ds
leave
pusha
loope
mov
clc
lods
out
cmp
fisubs
in
jnp
xor
mov
sbb
xchg
inc
inc
clc
icebp
sahf
sub
jmp
mov
and
test
imul
cli
add
pop
xor
push
stos
cmp
lret
cwtl
and
adc
mov
or
push
and
out
and
aaa
sti
in
push
ss
pusha
pop
or
in
div
mov
in
fwait
jle
int3
into
cli
jne
push
cs
mov
cwtl
das
xchg
loop
popl
into
jns
in
fs
adc
jl
mov
std
out
cmc
cmp
jecxz
mov
adc
nopl
mov
jmp
or
in
push
inc
rolb
jae
cmp
mov
leave
pop
or
test
mov
out
adc
lret
rcrl
je
cmpsl
into
rclb
adc
lcall
and
and
xchg
add
movups
jl
jle
adc
mov
jbe
insb
xor
push
int
lcall
ret
push
xchg
xchg
adc
jb
mov
mov
rorl
push
in
sub
sbb
lahf
out
mov
std
add
lds
ret
pop
jnp
cmp
mov
jno
scas
inc
lods
sbb
push
jmp
jo
movsl
jl
mov
gs
sub
mov
enter
sti
pusha
div
mov
sbb
iret
mov
lods
pop
jbe
loope
pop
cmp
cmpb
hlt
push
test
or
push
out
scas
in
mov
push
cmp
scas
mov
add
jnp
push
push
fucomip
jno
and
lock
mov
xchg
cmc
jecxz
mov
test
es
lret
cmpsb
lock
or
push
mov
lcall
cmpsb
cmp
ja
les
dec
mov
pop
mov
movl
pop
xor
jne
cmpsl
and
jbe
xor
arpl
mov
cmp
and
jae
sbb
push
cmpsb
sub
lahf
es
xchg
test
cmc
or
push
fcoms
arpl
jno
cmpsl
aas
cmp
add
call
jecxz
shlb
js
out
popf
stos
cmp
pop
jbe
push
jno
adc
and
in
push
outsb
sub
int3
jecxz
push
aaa
xor
push
mov
fcmove
xchg
xlat
jb
enter
or
dec
adc
sbb
mov
fcmovnu
mov
sub
shrb
je
sahf
fsts
pop
or
push
and
add
test
jg
arpl
pop
mov
mov
cmpsl
add
lods
cmp
enter
jmp
push
push
out
enter
out
jne
sarl
enter
push
es
out
ljmp
xchg
call
cmp
cmp
push
lret
mov
adc
mov
paddusb
and
jp
jns
jmp
add
lea
ds
scas
imul
dec
test
cmpsl
in
in
lods
mov
jecxz
push
xor
arpl
out
ret
mov
inc
dec
inc
add
add
repnz
hlt
lret
jae
clc
mov
adc
sarl
mov
dec
or
pop
ljmp
jp
mov
add
je
test
popf
push
push
lock
lret
lret
mov
xchg
insl
jno
gs
dec
add
dec
sub
bound
popf
mov
jmp
iret
push
pop
or
jo
jmp
fistpl
mov
and
inc
cmp
jne
mov
lea
jl
lods
lods
bound
mov
in
lret
fcomi
cmp
push
insl
out
sti
lock
scas
adc
xchg
sbb
bound
xchg
out
scas
pop
aas
jle
test
aaa
push
rcrb
push
out
in
addr16
dec
in
cmpl
addr16
fimull
jge
js
sti
test
ret
inc
cltd
jnp
iret
sbbb
sbb
ja
mov
mov
mov
sub
aam
push
subb
dec
jle
fisubl
xchg
sub
dec
fisttps
loop
sbb
repnz
sub
arpl
pop
testb
adc
in
sahf
mov
gs
cmp
sbb
out
dec
bnd
or
jmp
inc
movsb
loop
dec
lock
jno
dec
ror
test
insb
loopne
sahf
stos
xor
mov
xchg
jbe
xchg
mov
test
or
add
and
cs
sub
or
xchg
sbb
ss
addr16
movsl
ljmp
and
lds
aaa
mov
in
inc
push
test
data16
xchg
fmul
imul
rclb
dec
dec
lahf
fs
push
outsb
xor
sbb
lds
rolb
add
stos
add
xor
mov
adc
mov
arpl
inc
lds
jp
scas
dec
int
repz
dec
pop
in
xor
cmpsb
or
adc
ljmp
cltd
bound
mov
inc
clc
mov
scas
js
jle
data16
sahf
pushl
jne
imul
gs
xchg
test
cmp
aas
mov
mov
fiaddl
out
pop
push
and
data16
mov
test
and
cmpsb
lahf
repnz
cmpsb
in
std
mov
mov
sub
int
dec
jbe
movsl
push
cmc
sub
inc
pop
add
mov
mov
push
or
inc
mov
push
mov
decb
jbe
sub
inc
fldenv
adc
in
loop
dec
clc
or
imul
cmp
sbb
ret
inc
aam
mov
repnz
cmc
mov
dec
jecxz
into
decb
icebp
push
mov
fidivrs
add
xchg
orb
push
mov
mov
push
xchg
pop
sub
mov
out
pop
jecxz
aam
xor
out
sti
fdivs
aaa
insb
xlat
push
cs
cmovp
push
cmp
add
clc
in
test
adc
mulb
or
fwait
mov
aas
loopne
loopne
fsub
sub
divb
nop
inc
inc
arpl
lock
jae
mov
shrl
movsl
and
pop
dec
dec
mov
rol
or
fimuls
adc
icebp
mov
xor
scas
call
shll
popf
jg
scas
push
and
push
call
lahf
cltd
call
mov
jmp
int3
mov
or
add
lret
mov
test
pop
and
add
pop
shlb
arpl
xchg
push
loop
and
cmp
lret
paddd
lret
push
call
mov
pop
push
call
cmp
push
mov
ja
inc
jp
dec
cwtl
mov
mov
cwtl
std
or
ds
fsubs
leave
mov
lret
daa
dec
lea
out
push
in
add
fists
pusha
stc
gs
xor
dec
lods
mov
leave
adc
add
or
xchg
mov
adc
das
mov
inc
in
into
jl
fmul
sub
rorl
jecxz
aaa
out
loopne
cwtl
xchg
aad
fisubrs
mov
dec
rolb
mov
icebp
dec
call
insl
psllq
mov
cmp
lret
mov
mov
ret
jb
int3
sar
stos
sub
xor
repnz
pop
xor
jmp
test
cmp
adc
gs
mov
mov
ds
dec
add
sarl
sub
lods
dec
xorl
push
push
add
dec
aam
pop
mov
pop
xlat
jns
or
fsubrl
fists
mov
jecxz
and
orl
addr16
mov
jnp
or
into
dec
cmp
leave
push
pop
push
out
js
int
or
lods
xchg
adc
shl
testb
push
xchg
je
push
les
add
xlat
repz
mov
ds
pushf
ds
lods
stc
or
fst
bound
popl
adc
cmc
mov
fistl
stos
push
xchg
testl
mov
jmp
or
cli
andb
lret
test
aad
imul
xorl
enter
sbbl
test
lods
mov
fcmovnb
pop
or
test
or
mov
iret
sbb
add
xchg
sub
xor
inc
mov
mov
enter
cmpsl
mov
pop
lahf
mov
or
mov
nop
add
mov
sub
stc
push
popa
inc
push
int3
sti
xchg
add
xor
pop
push
in
fcomi
imul
sbbb
int
lcall
les
xchg
filds
repz
xor
imul
stos
adc
sub
xchg
xchg
add
xchg
cmp
mov
sub
jb
out
xchg
mov
out
stos
dec
dec
xchg
xchg
jmp
cmp
cmp
cmc
pop
fidivrl
push
xor
data16
ret
mov
xor
xchg
mov
pop
test
fadds
ret
test
enter
in
jmp
gs
mov
test
imul
mov
jbe
mov
test
xchg
lret
stc
rol
loopne
jg
lret
js
jecxz
sub
dec
sub
movsl
xor
xchg
lods
fstps
push
aad
lret
js
sub
mov
sub
xchg
pop
es
push
sbb
and
shrb
in
aaa
sbb
lcall
mov
xor
rcll
inc
scas
push
lods
cmpsb
xor
lds
dec
cmp
lock
jle
pop
dec
sub
aad
je
int
sbb
pushf
fnsave
mov
popa
iret
cmp
mov
les
jle
xor
cmp
sub
mov
rcll
jnp
jp
inc
lods
sub
add
or
aad
outsl
push
pop
call
in
aam
cwtl
cmpl
or
xchg
sbb
dec
mov
jnp
or
add
sub
xchg
jg
lds
xlat
jb
dec
popf
lods
dec
in
xchg
repz
jp
in
sub
cs
rorl
push
mov
inc
lods
or
fisttps
int3
std
push
jae
push
jo
pop
sti
xchg
into
fwait
andl
cmc
mov
rcll
stos
aad
sbb
mov
cmpsb
out
test
mov
pushf
cmpsl
out
jle
xchg
bound
clc
mov
jbe
sbb
rolb
push
mov
clc
imul
int
jo
scas
xchg
lahf
xchg
jmp
lock
jg
cli
and
and
cwtl
iret
push
in
mov
sub
jne
cli
jo
ret
in
fmuls
in
stos
outsl
aam
mov
imulb
mov
inc
out
xor
ss
test
xchg
scas
cmp
or
sub
in
mov
or
repnz
xor
repnz
add
lea
push
adc
cli
lods
lods
mov
cld
int3
jg
dec
icebp
adc
out
orl
sub
ja
testl
mov
faddp
sbb
fisttpll
bnd
mov
adc
ss
sbb
dec
movsb
popf
jle,pt
lahf
popa
out
mov
aam
gs
popl
sti
jo
mov
cmp
inc
jno
mov
stc
popf
sbb
loop
sub
push
jmp
iret
mov
sbb
jno
xor
in
cmpsb
adc
cli
divl
popa
pop
xor
cmp
shrb
adc
cwtl
sub
jae
dec
jg
jmp
lahf
mov
rclb
inc
arpl
dec
pop
pop
pop
inc
inc
mov
fs
stos
shll
mov
fimuls
popf
in
jbe
mov
fdivl
mov
test
xchg
inc
sbb
sbb
les
adc
dec
nop
aad
ret
les
jb
mov
or
xchg
test
mov
or
dec
insb
xor
mov
inc
fldl
stc
fcompl
xor
and
push
fistl
enter
stc
push
lahf
stos
test
ret
test
inc
push
das
shlb
sahf
aam
pop
jb
pop
sub
cmp
inc
pusha
loop
xchg
gs
inc
out
xchg
icebp
sahf
pop
test
inc
ret
test
cmp
pop
cmpsl
fisttpl
clc
repz
gs
loope
nop
pop
iret
mov
mov
sbb
das
cmp
fucomip
rcl
js
stos
sarl
push
loope
shl
push
xor
ret
nop
ss
ljmp
loope
scas
lret
mov
filds
cwtl
stc
insb
shll
movsl
xor
jmp
mov
xlat
mov
mov
inc
mov
jge
xchg
jnp
nop
arpl
xchg
sti
dec
sub
inc
into
mov
add
sub
nop
lret
sbb
or
cwtl
add
stos
mov
push
pusha
jp
imul
push
fs
adc
or
and
pusha
cmpsl
mov
in
cmp
inc
fdivs
xchg
jno
lds
dec
test
push
in
out
scas
aaa
lock
call
lods
sarb
jbe
dec
xlat
jbe
imul
pop
repz
sbb
and
fldl2t
inc
loope
jns
push
outsb
popf
xor
sub
push
fdivl
pop
dec
iret
clc
cmp
mov
push
stos
imull
push
push
mov
mov
sub
mov
lods
push
push
repz
imull
adc
sbb
shrb
xchg
in
insl
mov
sbb
xor
popf
jecxz
push
jmp
ja
ljmp
fcos
or
stos
in
sahf
in
xchg
xlat
pop
in
movsl
dec
popf
lret
nop
mov
hlt
sbb
xlat
hlt
jns
dec
stos
sbb
test
shr
push
adc
test
mov
das
ret
add
testl
pop
stos
mov
mov
dec
aam
scas
push
jp
or
mov
add
lock
cmp
push
xor
sub
adc
clc
inc
sub
fdivl
aad
sub
xor
std
dec
mov
add
loopne
cmp
ret
lahf
push
dec
mov
daa
mov
jnp
in
inc
je
mov
push
pop
add
cmp
dec
jge
sub
push
push
adc
hlt
jl
xor
lds
cmp
rol
jg
push
sbb
cmpsb
pop
dec
add
or
jb
jp
lods
loop
stc
push
mov
pop
mov
sub
xchg
mov
fwait
addl
jne
xor
push
dec
pop
movq
mov
and
aaa
clc
sub
repz
clc
mov
inc
xchg
enter
ret
or
mov
add
sub
push
cli
xchg
outsb
adc
mov
push
punpckhbw
jns
shll
cmpsl
dec
mov
mov
stos
in
pushf
outsl
ljmp
xor
inc
dec
push
dec
push
movsl
mov
xor
sbb
and
mov
shll
cwtl
dec
mov
lahf
or
out
cmpsl
mov
pushl
and
jbe
ds
mov
clc
std
inc
sub
mov
push
nop
cmp
lret
push
daa
jmp
loop
dec
mov
stc
dec
movsb
dec
xor
out
inc
xchg
mov
mov
aam
arpl
cmpl
sbb
data16
and
inc
mov
sahf
sub
sti
sub
ss
mov
push
cwtl
mov
lret
push
adcl
mov
dec
cmp
loopne
in
mov
sahf
in
into
bound
fidivs
into
mov
inc
and
xchg
test
dec
pop
or
mov
arpl
in
xchg
pop
mov
stos
mov
mov
fucomp
jno
push
into
movsl
add
int
cmp
pop
insl
in
test
dec
and
jg
repz
jae
mov
sti
inc
sbbl
adc
jp
scas
mov
push
jae
cmp
sub
add
mov
or
dec
push
shrl
ja
mov
mov
insl
mulb
int3
adc
jne
out
xor
inc
mov
lods
mov
sub
frstor
pop
mov
daa
push
and
push
fisubs
mov
mov
mov
pop
negb
mov
sar
dec
stc
sub
ret
xchg
pop
dec
push
popa
call
jnp
ss
sti
inc
cmp
adcb
inc
outsl
daa
jle
enter
fnsave
lahf
sub
loop
adc
xor
adc
xor
movsb
mov
aas
push
in
leave
int
iret
pop
adc
lock
stc
adc
ss
iret
fnsave
add
and
cli
pop
jb
push
jg
xchg
push
push
je
add
mov
lcall
sub
dec
hlt
mov
pop
das
divb
in
nop
push
xchg
insl
dec
xchg
or
mov
fiadds
ret
in
dec
stos
jecxz
xor
loop
ja
pop
das
rorb
sub
aas
push
dec
cmp
pusha
testb
xor
je
push
sti
xchg
sub
sbb
jno
js
jecxz
fists
rcll
mov
xor
mov
mov
xchg
fisubl
arpl
rcll
inc
mov
fistl
push
es
test
xchg
test
leave
aam
push
inc
out
xor
sub
les
repnz
daa
add
inc
in
and
pop
dec
push
lods
sub
fcmove
fstpl
aas
or
mov
leave
lcall
xchg
lods
and
inc
aad
dec
popf
les
jecxz
dec
xchg
add
push
mov
gs
xchg
push
pop
lods
testb
cmc
pop
xor
adc
inc
push
shlb
pop
cs
dec
scas
mov
arpl
inc
pusha
or
jg
lcall
out
adc
dec
mov
cmp
popa
and
cs
jg
popa
push
mov
adc
and
andb
cmp
dec
pop
sbb
out
xor
jns
shrb
push
fidivs
ret
in
hlt
movsb
pop
dec
call
push
xor
insl
or
cmp
sbb
jp
mov
les
jp
jo
mov
pop
and
mov
jns
jp
lret
fimull
std
das
test
cld
sbb
je
and
dec
or
enter
and
and
bound
scas
ja
loopne
fidivs
fsub
insb
cs
test
out
enter
scas
jmp
sti
jmp
sub
loop
adc
cmp
push
push
scas
adc
adc
inc
call
das
push
pop
ja
not
adc
movsb
fcoml
into
jl
push
arpl
bound
sbb
in
mov
pop
jge
or
xor
jb
addr16
fucomp
sti
push
adc
mov
sahf
xor
xchg
ja
pop
es
push
gs
loopne
jl
fmuls
pop
adc
inc
loop
aam
data16
data16
fldt
mov
addr16
jmp
mov
aad
cmp
cmpsl
push
sub
inc
call
int
pushf
sbb
jbe
out
mov
push
out
sub
mov
mov
jns
inc
fadd
jno
add
jl
movsl
sbb
xchg
imul
xchg
cli
test
push
jb
push
js
je
jle
push
jmp
lahf
pop
imul
jae
les
cmp
sbb
js
sub
imul
mov
jb
ss
lret
cld
clc
ja
cmp
iret
aaa
adc
jnp
mov
add
sub
test
scas
popf
testl
sub
sub
repz
dec
jecxz
dec
stc
pop
mov
out
xchg
aam
leave
ret
enter
add
fisubrl
outsb
mov
fs
jmp
xorl
dec
cmp
gs
sar
icebp
or
inc
add
popa
dec
mov
jno
xchg
pop
mov
or
cmp
jecxz
jp
xchg
jmp
mov
ljmp
xor
mov
icebp
fistps
sub
adc
mov
out
ret
jle
cmp
mov
pop
adc
dec
or
cmpsl
stos
add
out
inc
sub
push
in
test
xor
notl
aas
jge
jno
add
mov
xor
mov
scas
fsts
shl
dec
daa
mov
cmp
shlb
jbe
inc
mov
mov
adc
es
fwait
movsb
ljmp
adc
cmp
dec
inc
sbb
dec
icebp
es
popa
push
dec
fs
scas
mov
fnsave
imul
mov
jae
mov
arpl
sbb
jo
adc
mov
mov
mov
add
fsubr
and
inc
inc
aam
sub
mov
mov
bnd
pop
ja
inc
inc
movsl
bound
xchg
mov
lret
call
dec
sbb
and
notb
test
and
ret
and
sub
fs
xor
or
mov
popa
mov
dec
in
in
incb
or
xor
les
xor
ds
pop
push
test
sub
rcrl
lret
inc
xor
push
iret
sbb
lret
push
sub
mov
pop
lret
cmp
mov
add
aam
sub
pusha
lret
mov
arpl
or
cmpsb
lods
and
sub
and
vandnps
xor
xchg
pop
cmpb
jno
sub
dec
scas
and
call
sub
lods
loop
fsubrp
xor
xchg
stos
add
sub
fistps
or
pop
push
daa
testb
imul
jge
cmp
and
sahf
mov
sbb
lret
cld
push
mov
mov
pushf
cmc
adc
les
cmp
or
jmp
frstor
mov
je
aas
dec
aas
and
pop
bound
aam
sbb
cmp
sub
cmp
add
jbe
xor
cltd
push
inc
sti
or
dec
add
mov
mov
shrb
stc
jno
aas
mov
push
mull
push
jns
or
hlt
sbb
push
mov
repnz
inc
add
adc
jecxz
loop
push
call
into
xor
add
sbb
fwait
xchg
push
fstpl
in
mov
pushf
sub
lods
xchg
aam
jmp
mov
fdivp
outsb
sub
rcll
xor
inc
push
jae
rolb
outsl
jle
cmpsb
scas
push
bnd
fneni(8087
mov
rol
pop
cmc
pushf
sub
xchg
sahf
xor
mov
inc
leave
adc
inc
ljmp
xchg
push
pop
adc
sbb
mov
sarb
sub
out
gs
add
push
xor
sarl
dec
push
or
sub
xchg
push
test
cmp
jecxz
mov
pop
add
cmp
mov
fdivrl
push
aad
lahf
dec
sub
pop
cmp
or
push
scas
mov
fxtract
ja
divb
jae
out
mov
into
cld
adc
xor
lret
out
jmp
push
jo
clc
daa
add
sbb
cmp
testl
lock
sbbb
push
xlat
es
and
xlat
mov
adc
js
jne
loope
stos
aad
fdiv
jl
mov
out
and
xor
inc
mov
add
lods
test
test
fisttpll
xor
bound
iret
jecxz
lret
popa
cmp
fdivl
add
jae
sti
push
jae
xor
inc
pop
or
repz
fmul
xchg
add
mov
movsb
imul
sub
jecxz
int3
or
mov
outsl
or
add
xorb
jl
add
jle
inc
pop
mov
cmp
fdivs
pop
xor
or
shl
es
cmpsl
mov
jne
loope
pop
fsubs
insb
jmp
js
imul
inc
jnp
pop
and
into
fisubl
mov
int3
insl
lods
mov
add
test
push
add
inc
mov
movsl
rcr
shl
add
push
aaa
or
fwait
jo
negl
push
push
sbb
pop
repz
jle
jne
xlat
xor
push
cwtl
pop
adc
mov
xchg
jp
mov
inc
into
lds
repz
imul
mov
add
inc
and
add
outsb
sarl
jmp
mov
aad
mov
aam
pop
jbe
mov
mov
insl
rcrb
jmp
test
xchg
scas
push
lods
sbb
push
test
and
xor
arpl
mov
lods
mov
xchg
loop
outsb
out
or
dec
cmp
call
add
adcl
test
mov
inc
jae
mov
xchg
into
ds
pop
repz
jge
pop
push
fcmovb
jbe
fs
mov
inc
pop
xor
pushl
pop
arpl
add
aad
ret
adc
mov
or
mov
fs
sub
popa
jo
bound
mov
pop
fimull
push
cmp
out
loopne
xchg
insl
lret
pusha
cmp
in
cmpl
ja
cmp
lcall
xor
mov
rol
call
and
pop
push
stos
adc
or
xor
dec
fwait
dec
jns
inc
in
xor
cmpsl
mull
mov
and
movsb
aam
dec
or
lds
fisttps
enter
enter
test
sub
add
sub
js
test
mov
fcmovu
in
in
jae
cltd
xchg
ljmp
aad
mov
aad
or
out
rclb
adc
push
popa
or
inc
cmc
push
jge
add
xor
mov
fbstp
pop
dec
mov
ret
fcmovnbe
xor
subl
xchg
sbb
jecxz
sbb
rcr
std
or
adc
mov
fwait
pop
repz
or
aam
nop
mov
ss
loope
push
pushf
jge
dec
mov
jae
out
repz
outsl
xchg
push
aaa
xor
cmpsl
and
mov
insb
out
mov
mov
and
lea
call
cmp
push
and
dec
fidivs
xchg
jmp
add
push
in
sub
mov
inc
adc
ficompl
scas
mov
inc
test
sub
leave
fistpll
mov
xchg
add
outsb
inc
lods
sbb
into
leave
push
ja
cmp
gs
mov
cli
mov
stos
mov
lret
dec
sub
xchg
xchg
dec
cmp
xor
addr16
aaa
ja
pop
repz
out
popa
fmull
jnp
sub
cmc
and
clc
rep
inc
and
xor
push
mov
sbb
stc
cmp
mov
sarl
pop
ret
repz
fldenv
js
and
movsl
imul
lcall
adc
stos
into
or
jbe
aas
ss
xor
cmp
cs
xchg
pop
pop
enter
pop
mov
dec
ss
mov
pop
or
jbe
test
pushf
sbb
gs
add
mov
bound
loope
jae
and
push
xor
pop
adc
cmp
sub
and
jnp
pop
imul
pop
outsb
mov
fbstp
xchg
jg
push
data16
imul
sub
jbe
rorb
mov
mov
imulb
mov
cld
gs
ljmp
jg
aaa
push
outsl
mov
cmc
mov
jg
cmp
pop
sbb
int3
pop
dec
jge
add
out
das
cmp
outsb
jl
sub
or
outsb
movsb
or
and
mov
ret
add
in
loop
fwait
mov
ss
pop
adc
pop
dec
xchg
pop
std
cmp
pop
stos
jnp
subl
add
les
push
xchg
popf
sbbl
sbb
lahf
mov
and
lahf
jmp
add
mov
push
iret
leave
mov
jno
or
mov
ficoms
and
pop
cmp
stos
sub
jb
bound
xchg
or
cmc
adc
lods
ret
sub
xchg
jno
mov
or
sub
xorl
jl
outsb
add
jl
push
push
imul
lcall
sahf
and
roll
dec
outsb
pusha
test
or
popa
pop
adc
jecxz
adc
std
add
cltd
push
cli
stc
popf
adc
jo
jne
fstpl
push
rol
stc
std
xchg
sub
lahf
mov
call
lahf
outsb
mov
stc
scas
add
pop
jns
in
xchg
clc
lea
mov
sbb
dec
add
sub
imul
out
int3
or
rclb
add
fistpll
iret
loope
outsb
negl
or
mov
or
sub
rorb
pop
in
jb
add
in
push
inc
xor
ficoml
gs
movsb
lods
mov
stos
push
paddq
inc
imul
rcll
insl
ret
jns
js
push
loope
push
cmp
mov
adc
jmp
cmp
out
or
testl
sbb
mov
les
les
xlat
pop
xchg
xchg
xlat
xor
rcll
orb
testl
jns
adc
and
or
push
imul
mov
ja
popf
sub
pop
inc
test
mov
rorb
pushl
mov
icebp
mov
push
lret
ret
cld
lcall
cli
imul
cltd
sub
test
mov
ss
mov
sub
push
out
mov
test
dec
fidivl
cwtl
xlat
push
hlt
xchg
and
push
lret
divl
jmp
rclb
mov
pop
inc
fcompl
outsl
hlt
in
jbe
xor
enter
add
stc
data16
out
sahf
and
repnz
xor
push
adc
dec
mov
pop
xor
jp
push
or
push
rol
fistl
xor
shl
test
jp
scas
xor
shlb
pusha
pop
daa
mov
test
xchg
mov
insl
ficoml
mov
jns
scas
popa
movsb
enter
movsl
int3
jg
xchg
subb
fidivs
and
pushf
adc
jae
pop
push
pop
xchg
sbb
shl
pop
shlb
add
add
shll
loope
mov
in
xchg
dec
dec
inc
mov
sub
loopne
push
test
dec
ljmp
les
ss
in
add
ljmp
lret
test
repz
sbb
fistl
sbb
push
mov
sarl
xor
lret
adcl
cltd
jecxz
out
sub
mov
xchg
test
or
fidivrs
in
mov
jge
add
jg
call
int
xor
int3
adc
fildl
and
call
loopne
addr16
scas
jg
lds
pop
stos
and
popa
fadd
ja
or
into
dec
pop
test
imul
inc
inc
sub
je
dec
xor
aaa
mov
inc
dec
iret
add
in
aam
sti
mov
dec
mov
es
fidivs
lods
xchg
cmp
mov
aaa
xchg
mov
lods
push
adc
push
add
scas
sbb
imul
push
fdiv
cmp
aas
mov
adc
inc
addr16
ret
bound
fwait
jo
xchg
popf
dec
pop
mov
pop
adc
pop
adc
cmp
inc
pop
shll
inc
sti
fsubrs
jbe
adc
enter
jmp
faddl
ror
xlat
pop
sbb
cmp
adc
inc
iret
incl
xchg
aam
sbbb
mov
inc
jl
mov
or
into
dec
int3
or
mov
pusha
test
stc
mov
fldl
lret
cmp
jbe
mul
aaa
lods
mov
xor
pop
fwait
inc
insl
outsl
jl
pop
imul
ss
lret
xchg
push
xchg
pop
mov
imul
mov
popf
mov
and
mov
sub
rol
dec
test
ficomps
stos
fnstsw
jecxz
dec
stos
test
xchg
in
jecxz
les
adc
mov
lods
je
je
hlt
cmp
pop
push
or
pop
mov
sub
cmpsb
loopne
adc
mov
in
and
cmc
pushw
leave
sub
insb
jl
xor
pop
sub
add
inc
inc
fmull
stos
cmp
or
or
xchg
jp
lods
adc
inc
int
and
mov
call
fwait
imul
popf
rcrb
mov
scas
xor
loopne
adcb
jae
mov
jne
test
xchg
mov
jnp
loop
lods
mov
inc
daa
mov
outsl
std
out
mov
ret
mov
inc
in
mov
sahf
inc
add
or
sahf
push
loop,pn
pop
out
mov
pop
adc
lahf
mov
lea
pop
mov
inc
fwait
xchg
dec
dec
mov
inc
inc
mov
lods
mov
xor
fs
xlat
lods
testb
push
push
rcll
rolb
fcoml
jo
testl
shlb
daa
icebp
popa
jge
lahf
xor
stos
push
inc
mov
shl
add
jbe
in
pop
repz
add
roll
in
adc
mov
sbb
mov
adc
je
and
lahf
push
lods
shrb
mov
js
ja
les
push
daa
lret
imul
mov
mov
pop
inc
ret
pop
jbe
loop
push
xchg
divl
mov
and
sbb
clc
es
add
add
mov
push
in
addr16
loope
hlt
or
mov
xchg
adcb
rcrb
mov
mov
jmp
cmpb
push
mov
cmpsl
jns
adc
fisttps
arpl
sub
enter
adc
or
jmp
mov
rclb
sbb
xor
loope
enter
and
pop
mov
call
jb
mov
push
into
xchg
enter
sbb
out
xchg
add
ss
jle
fcoml
sbb
cld
xchg
mov
rcl
addr16
lret
lret
addr16
adc
clc
pop
xor
and
aad
adc
lds
fidivl
lret
mov
cld
xor
mov
push
les
push
sbb
out
mov
mov
aad
mov
jae
aaa
cltd
xchg
test
fidivrl
adc
xor
or
adc
scas
lods
or
sub
jno
mov
cmp
dec
cmp
adc
into
or
and
mov
pop
dec
or
sarb
push
movsl
cmp
pop
orb
out
push
and
or
in
pusha
negl
fabs
add
sub
fistl
xor
push
rclb
mov
lock
pop
lds
ficoms
mov
addb
sbb
pusha
lret
and
sub
jmp
test
nop
or
les
dec
mov
call
push
jmp
pop
mov
pop
mov
ja
jae
mov
sbb
cwtl
popa
clc
leave
mov
lcall
mov
rclb
shll
dec
hlt
ljmp
in
inc
hlt
dec
mov
mov
sahf
cli
cmp
fldt
adc
insb
sbb
fwait
subb
out
call
pop
insb
test
mov
jle
cmp
lret
jb
push
adcb
pop
mov
push
jae
ljmp
and
shrb
cmc
mov
imul
mov
mov
shll
in
aad
xchg
xchg
sahf
mov
pushf
arpl
stos
xchg
adc
adc
xchg
inc
pusha
cmpsl
mov
lods
push
push
pusha
pop
mov
push
int3
aam
inc
cmpsb
lock
xor
push
cltd
insb
testl
scas
xchg
cmc
movb
pop
add
xchg
jns
pop
aas
out
jg
and
cmp
xchg
test
ja
sbb
js
jns
adcl
lods
adc
cld
push
roll
ljmp
jnp
fnstsw
push
push
or
dec
inc
sbb
rcrl
push
mov
xchg
sub
mov
mov
fwait
mov
mov
xor
xor
xchg
xchg
shlb
add
mov
cmp
push
aas
fistps
inc
or
pop
xchg
das
xchg
or
popa
mov
clc
nop
rorl
adc
xchg
scas
inc
cwtl
adcl
out
pushf
xor
and
xchg
xchg
mov
cld
lcall
mul
xchg
lea
xlat
cli
add
movsb
clc
test
sarl
fildl
mov
push
cmp
cli
out
mov
sub
push
sbb
pusha
call
sbb
test
dec
mov
mov
test
sbb
push
mov
adc
push
push
popa
enter
mov
jb
xor
or
dec
pop
lods
pop
cmp
add
shl
popf
test
adc
xchg
jmp
call
aad
add
xlat
je
dec
out
push
ss
mov
inc
push
sahf
stos
enter
insl
or
data16
clc
je
les
cmp
into
aad
ja
fs
pop
fwait
mov
inc
sbb
pop
idiv
push
mov
out
add
bound
or
add
push
dec
mov
mov
ss
xor
fmuls
sub
add
inc
fs
movsl
stos
mov
sub
rorl
mul
adc
fisubl
fsubrp
out
loop
loop
pop
fwait
out
fistpl
test
scas
and
into
and
push
mov
daa
mov
jb
into
adc
adc
aad
jle
jg
bound
pop
xchg
stos
cmp
adc
sub
sti
pop
pop
in
mov
push
loop
orb
mov
push
sub
fimuls
test
mov
inc
lahf
repz
lahf
add
es
or
pop
add
sub
popf
push
into
dec
xor
jnp
pop
mov
mov
mov
fs
into
stc
shr
xchg
movsb
rclb
add
xchg
xor
mov
dec
jecxz
jge
and
dec
xchg
pusha
pop
jo
push
in
stc
inc
push
or
push
pop
sbb
xchg
inc
shl
lret
lea
lret
shll
mov
bound
fnsave
and
repnz
and
out
and
fwait
mov
mov
ja
sbb
push
inc
xchg
xor
adc
xlat
pop
dec
and
add
lahf
adc
data16
lcall
ret
shrb
ret
pop
outsl
pop
xlat
or
into
test
popf
ss
leave
push
jmp
dec
lock
jno
inc
lret
jg
push
dec
out
push
popa
popf
sbbl
sbb
addr16
mov
push
iret
fildll
js
repz
imul
aas
lret
lret
sti
in
insb
mov
test
adc
je
popa
sub
addb
adc
pusha
out
and
movsl
mov
xchg
cmp
push
sub
sti
push
dec
stc
mov
std
jae
add
cmp
dec
sbb
in
push
push
insl
insb
fmull
sbb
mov
jl
sub
sub
cmp
testl
adc
or
xchg
cs
mov
mov
stos
addr16
inc
cltd
mov
int
idivl
fisubrl
xor
mov
or
in
outsl
inc
adc
into
movsl
lock
xchg
xchg
sbb
fimull
call
mov
in
jnp
sbb
mov
sarl
sub
lods
je
sub
int3
fcompl
push
es
add
inc
fidivl
mov
popa
clc
hlt
xorl
addb
mov
jle
out
cmp
inc
push
fadds
or
in
pop
adc
xchg
pop
pop
outsb
test
lock
jno
add
rolb
cs
inc
dec
xchg
jmp
subb
cmp
pop
cli
dec
push
jb
fildl
nop
dec
jmp
cmp
out
gs
cltd
push
push
jmp
pop
cwtl
imul
mov
das
out
cwtl
push
in
pop
cmc
dec
int3
fildl
das
stc
cltd
das
rcll
sub
movl
jecxz
mov
enter
jmp
iret
outsl
mov
cli
and
or
lret
in
xchg
jno
push
imul
popa
mov
jmp
jb
mov
sbb
jns
in
dec
mov
mov
xor
movsldup
mov
ljmp
out
fcmovnb
push
js
cmpsl
movsl
movsb
jmp
jo
add
pop
mov
mov
push
aaa
dec
mov
sbb
push
dec
push
mov
jb
sbbb
ja
mov
jae
sbb
pop
loop
and
add
test
loopne
push
adc
lds
and
and
push
popf
adc
cmp
inc
and
stc
mov
pop
inc
pop
push
and
nop
enter
mov
data16
sbb
bound
ret
mov
pop
js
dec
push
push
in
fstpt
lret
pop
add
jl
sahf
push
popf
adc
out
jo
or
push
pop
jl
ss
jae
xor
xchg
xor
mov
inc
sub
clc
test
aas
xchg
emms
dec
fidivrl
movsl
and
mov
popf
and
into
cli
aaa
call
mov
fidivrl
arpl
notb
mov
jle
mov
adc
inc
loopne
inc
out
imul
fcoml
jge
or
rorl
cs
and
mov
test
add
sarl
aas
mov
subl
pop
cmp
push
cli
pop
repnz
xchg
add
add
push
xlat
inc
pop
add
and
mov
mov
imul
pop
pop
jg
int
int
mov
pushf
fisubrs
inc
add
ljmp
bnd
pop
mov
or
test
cwtl
lods
mov
roll
test
into
movsl
sahf
sub
mov
cmpsb
pop
lahf
mov
outsb
sbb
or
les
add
pop
test
cltd
and
dec
jp
push
and
cmp
je
mov
add
cwtl
inc
sub
add
or
lea
out
xor
loop
int
cmp
push
or
inc
or
mov
add
push
pop
add
rclb
or
mov
xchg
fnstenv
lea
out
ss
insl
in
or
pop
sub
shlb
pushf
mov
mov
jge
pushf
aam
aam
mov
pop
scas
jecxz
pop
xor
arpl
stc
xchg
lods
das
xchg
shll
adc
mov
and
dec
push
mov
lcall
and
lret
push
sub
mov
mov
pop
test
dec
xor
popa
insb
data16
xor
push
xorb
mov
jge
imul
ljmp
dec
nop
subb
mov
dec
pushf
dec
shlb
imulb
or
pop
xchg
nop
rcrb
sub
inc
pop
push
out
adc
lahf
mov
int3
arpl
fistpll
sub
push
cmp
and
test
jo
add
dec
push
imul
mov
enter
jl
push
cwtl
bound
cmp
push
mov
pop
jecxz
add
sbb
sbb
repnz
aam
mov
mov
mull
push
jp
adc
aam
pushl
fwait
xor
add
jecxz
and
loopne
and
push
dec
ret
daa
adc
and
dec
dec
loope
addl
cmp
loope
and
ljmp
test
xlat
jmp
mov
stc
or
lea
pop
mov
sub
rcrl
bound
push
jae
imul
push
cmpsb
stos
fistl
pop
cmpsb
mov
in
jne
jmp
add
mov
ror
fcmovne
push
outsl
push
es
or
xchg
push
push
mov
mov
mov
pop
sbb
xor
aaa
into
outsl
push
sub
add
sbb
popf
orb
cmp
daa
enter
int
push
das
mov
ficoml
cli
dec
or
push
leave
je
xchg
push
scas
mov
sbb
aas
ljmp
push
outsl
xlat
xor
push
movsb
pop
popf
push
jnp
pop
cmp
pushf
fsubrs
shlb
popa
stos
popa
fisttpll
pop
mov
lock
rcll
outsb
lcall
shr
out
aam
xor
ret
pop
jle
stos
popl
or
aad
mov
inc
pop
ljmp
sti
inc
mov
int3
inc
xchg
js
pop
imul
push
jmp
and
lods
test
fcomip
and
into
enter
scas
or
lods
and
cmp
inc
xor
inc
push
jg
adc
mov
cmc
jnp
mov
scas
inc
or
dec
add
jne
rclb
xchg
xchg
add
bound
in
jmp
test
or
adc
xor
push
sub
aas
pop
xor
stos
xchg
sahf
xor
decl
sbb
fisubs
push
dec
sub
insl
xor
insl
add
dec
les
adc
lahf
imul
cmpsl
pop
testb
jmp
xor
pop
or
data16
adcl
dec
mov
xor
cs
push
cmp
push
repz
mov
xchg
int3
popa
or
add
jno
testl
into
or
in
shlb
push
idiv
out
inc
or
push
aad
push
cmp
out
xchg
je
mov
in
xchg
stos
in
push
popa
addl
inc
arpl
cmpsb
cltd
outsl
pop
mov
xacquire
pop
addr16
xchg
out
movb
or
aad
dec
or
xor
xchg
add
sbb
scas
cwtl
outsb
fwait
leave
out
and
bound
cmp
xor
cwtl
popf
jle
inc
aaa
push
in
push
dec
mov
push
jns
xchg
out
lcall
push
jl
xsaveopt
cmpb
nop
stos
xchg
jo
adc
jge
mov
jl
jnp
mov
fmuls
push
cltd
scas
inc
fisubrl
or
lcall
xor
aad
push
inc
ret
mov
mov
dec
dec
clc
aam
mov
movsl
loopne
xchg
xchg
adc
jge
xchg
pop
fdivrp
shlb
adc
shrb
int
mov
xor
insl
call
int
jns
sub
out
dec
lods
mov
sub
dec
pop
jb
popf
out
add
push
adc
inc
in
out
cmpsb
fidivl
or
test
scas
push
xchg
jp
ja
push
shll
xchg
ret
gs
data16
sub
push
mov
jp
mov
add
pushf
xchg
mov
jg
add
out
push
int3
arpl
mov
pop
lret
icebp
ljmp
jne
mov
mov
lock
stos
sub
sbb
xrelease
repz
cmp
icebp
cs
dec
shll
iret
data16
test
icebp
adc
sbb
or
gs
ja
mov
sbb
ret
mov
fs
fldcw
je
lds
subb
loopne
stc
int
in
divb
fadds
roll
es
das
inc
aad
push
mov
lahf
push
test
aas
xor
pop
subb
ja
cli
popa
into
push
fidivl
subb
and
xchg
cltd
pop
or
inc
flds
fs
xchg
xor
scas
test
sbb
fisttpl
mov
insb
adc
scas
es
cmpsl
frndint
push
movsb
push
jno
mov
jno
into
mov
roll
jp
xchg
push
ss
and
js
popa
lahf
and
clc
mov
test
mov
popf
xchg
fiaddl
cmp
fcoml
mov
cld
movsb
clc
iret
sub
sbbl
adc
cmp
sbb
sub
mov
ss
mov
rclb
fucomi
int3
subl
mov
xchg
out
or
mov
outsl
push
push
xchg
aas
daa
lea
adc
sub
test
lock
lret
int
ljmp
cltd
enter
cld
push
jnp
push
jns
jl
lods
dec
mov
xor
fwait
or
xor
cmpl
cmp
out
pop
dec
repz
cmp
mov
xor
out
xchg
sti
push
add
out
push
movsl
mov
sub
mov
inc
popf
jno
shlb
dec
call
filds
mov
ss
push
pop
or
repnz
push
push
inc
imul
mov
and
test
add
jae
rorl
mov
jmp
adcl
pop
or
ja
cld
call
mov
jo
mov
mov
ja
scas
xchg
cld
popf
sub
jecxz
movsl
adc
xor
les
pop
dec
push
jbe
clc
iret
in
mov
push
call
clc
movsb
lahf
jb
xchg
mov
mov
insl
jge
push
mov
cmc
jle
loopne
adc
addr16
sub
je
scas
mov
sub
cmpsl
loop
mov
jno
push
je
cmp
sub
repz
dec
fstpt
mov
cmc
stc
nop
es
loop
pop
pushf
or
mov
jnp
in
mov
mov
xchg
xor
ljmp
fistpll
cmp
mov
rcl
daa
mov
mov
xor
pushf
cmpsl
sbb
mov
leave
and
push
test
inc
mov
insb
xor
sbb
lahf
or
pop
rcrl
mov
in
xor
adc
test
out
sub
shrb
sbb
mov
movsb
jecxz
jecxz
xlat
pop
mov
push
sbb
xchg
adc
or
jne
movsb
pop
jne
pop
out
xchg
cmp
cmp
add
cs
push
and
bound
and
je
pop
xchg
sbb
shl
inc
fiaddl
daa
popa
clc
push
push
ret
jle
jg
jnp
in
sbbl
pop
mov
mov
je
sub
xchg
jle
add
lahf
sbb
rorb
xchg
sub
push
dec
out
xchg
mov
or
popf
adc
inc
repnz
cmc
iret
and
xor
popa
push
mov
fwait
cmp
add
sub
repnz
mov
push
shll
inc
fcomp
inc
dec
in
jmp
imul
ret
mov
adc
jne
mov
xchg
imul
sti
cs
add
push
in
in
dec
pusha
orl
adc
or
stos
xchg
mov
or
ljmp
call
cld
out
sub
mov
in
aas
pop
jge
leave
push
out
xchg
sbb
mov
or
cltd
xchg
imul
sbb
out
dec
mov
sub
push
subl
or
shll
call
mov
arpl
jbe
test
pop
jp
lret
shr
hlt
sbb
jae
dec
mov
stos
jecxz
mov
jnp
insb
xor
popf
push
add
inc
stos
or
mov
inc
outsb
or
sub
lea
pop
je
lea
cld
fdivr
jno
icebp
jb
movsb
stos
rorl
mov
insb
btc
jnp
imul
out
cwtl
dec
push
or
jp
push
out
adc
addr16
and
lcall
mov
stc
test
pop
pop
icebp
xor
mov
push
je
scas
stc
or
adc
data16
shll
sbb
fdivl
cmp
cmp
sbb
ljmp
sub
pop
inc
pop
fldl
cmpsl
cmp
xchg
mov
andl
hlt
mov
movsl
push
jns
mov
xor
pop
mulb
js
in
cmp
push
lea
inc
mov
loope
jmp
cmp
loope
and
dec
push
cmpsl
mov
cltd
repz
mov
loop
jmp
mov
movsb
add
mov
mov
in
cmp
cmp
dec
enter
mov
lea
mov
pop
mov
sub
pop
call
inc
add
cwtl
cli
out
push
out
and
fldpi
cmp
ss
cli
sti
mov
sbb
mov
stc
addr16
adc
dec
pop
push
roll
inc
imul
jge
lods
mov
lods
xchg
adc
xor
sbb
mov
or
and
mov
jmp
outsl
push
outsl
test
movsl
dec
out
clc
in
cmp
popa
add
mov
mov
jne
add
into
and
enter
mov
adc
and
popaw
lods
lret
fistl
lods
jns
jbe
shl
lods
cwtl
jo
ffree
adc
jo
mov
inc
and
xor
xchg
popa
cmp
test
push
lea
push
notl
adc
fwait
stos
aas
mov
stos
icebp
pop
ficomps
xchg
adc
lock
fcoms
sub
cli
lahf
jp
ds
popa
iret
pop
in
or
lods
pop
pop
movsl
ljmp
pop
sbb
paddsw
cmp
aad
and
pop
pop
adc
test
adc
cmc
enter
adc
scas
mov
sbb
cmpl
setae
fs
cmp
dec
pop
pop
shll
fdiv
leave
pop
mov
push
add
xchg
aas
pop
cmpl
mov
aaa
dec
cli
int3
or
inc
jecxz
cmp
std
nop
dec
add
dec
mov
fcmovbe
mov
in
mov
xlat
ljmp
pop
push
pop
pop
lea
and
shrl
daa
adc
cwtl
add
icebp
cmp
pop
in
cmp
imul
adc
cmp
or
mov
mov
aaa
lahf
dec
gs
ds
push
or
and
fsubrl
cli
dec
test
or
inc
inc
xchg
addr16
call
cmp
stos
xchg
repz
int3
cmp
add
movsb
mov
mov
lcall
adc
and
aas
pop
and
out
rcrb
imul
jmp
fstpt
dec
push
insl
clc
incl
das
add
addr16
mov
out
test
fidivl
mov
or
xchg
sbb
xor
enter
adc
cwtl
push
sbb
mov
aas
andl
inc
push
mov
sub
out
gs
dec
mov
aam
push
movsb
xor
add
mov
mov
push
adc
jb
jge
jge
adc
adc
int3
mov
sbb
into
bound
mov
dec
jnp
js
and
lret
cmp
rcrl
jb
push
movsl
cmp
pop
insb
add
insb
mov
je
mov
dec
ficoml
cwtl
pop
cwtl
jg
add
test
movsb
lahf
rcll
cmp
xchg
sub
or
pop
imul
sub
and
mov
mov
xor
out
aaa
mov
and
rcl
icebp
pop
mov
inc
fsub
mov
fisubs
dec
test
mov
in
shlb
dec
loope
mov
add
push
xchg
enter
xor
inc
mov
loope
adc
popf
orb
ss
movsl
sbb
sub
or
lahf
out
pop
xor
pop
daa
cmpsl
pop
xlat
aam
test
push
in
dec
addb
xlat
in
xchg
push
stc
cmp
sub
lret
loop
lods
out
data16
push
and
inc
std
fwait
int
int3
push
or
sbbb
mov
mov
or
xchg
aaa
jnp
test
mov
pop
mov
in
jl
dec
aad
lea
fucomip
mov
lods
test
mov
insl
add
mov
mov
lahf
fwait
jmp
add
jbe
mov
mov
fsubrl
sub
mov
push
and
push
push
fldcw
stc
sbb
jmp
ss
fcoms
jle
add
pop
cmc
mov
fiaddl
addb
mov
push
xchg
sub
je
and
lea
xor
or
mov
rep
je
push
jne
aas
std
inc
push
mov
shrl
mov
movsb
push
jg
mov
mov
repnz
pop
jbe
bound
push
iret
pop
enter
sub
jne
pop
sahf
xchg
or
xchg
in
adc
insb
jnp
jns
xchg
fmulp
je
clc
nop
stos
sub
push
fdivl
adc
stc
test
push
jbe
pop
test
mov
jmp
subb
mov
dec
pop
stc
sarl
mov
mov
std
dec
aas
pusha
cmpb
sbbl
push
cmpsb
repz
cmp
pushf
cmpsb
inc
mov
fmulp
xchg
push
scas
push
ljmp
mov
popa
fmul
in
jns
lods
push
jae
cmp
sbb
mov
pop
jae
dec
lock
sbb
push
add
adcb
lcall
jae
inc
and
inc
add
cmpsl
ss
mov
subl
pop
sbb
jae
push
cmp
jno
push
adc
call
mov
jo
jo
jb
out
mov
loop
push
and
jl
jo
push
xchg
xor
mov
jp
adc
dec
add
lret
cmp
scas
nop
xor
imul
pop
jns
sbbl
or
lret
mov
and
sbb
dec
arpl
lea
jecxz
je
fldenv
inc
mov
pusha
lret
xchg
xor
shrb
test
test
mov
cli
fcoms
mov
inc
inc
in
push
movsl
dec
inc
je
arpl
dec
mov
fdivs
fsubl
or
mov
cmpl
ret
add
adc
icebp
sub
mov
iret
cmp
or
dec
add
or
lea
leave
push
in
es
lea
adc
jb
clc
movsl
pushf
sub
lcall
pop
cwtl
loopne
leave
jle
icebp
es
aas
lcall
xor
in
jge
lcall
jb
popa
jnp
sbb
lcall
mov
inc
aas
mov
arpl
pop
push
mov
loop
xchg
dec
cmc
ss
mov
popf
or
cmpsl
or
inc
cmp
or
lahf
stos
aaa
pop
loop
mov
in
les
push
push
jbe
fcomps
or
push
nop
daa
test
mov
sbb
cmp
shll
sub
sub
mov
imul
adc
pop
imull
push
or
mov
inc
shl
mov
jecxz
xor
push
jge
inc
cmpsl
ret
arpl
fcompl
stos
mov
imul
ret
adcb
xchg
dec
mov
ja
xchg
es
lds
inc
movsl
and
lock
test
movsb
clc
jmp
push
ret
in
das
hlt
xor
add
test
mov
int
cmp
lods
or
pop
or
data16
addl
mov
bound
dec
bound
jne
jp
and
out
popa
loopne
mov
jae
mov
pop
shll
popf
arpl
add
or
flds
mov
and
mov
cmpsl
lds
lret
and
or
insl
sub
push
pop
pop
out
les
roll
cld
sbb
or
fstpl
adc
jbe
jg
mov
adc
push
into
lret
lock
loope
mov
call
and
push
fsubr
xchg
mov
imull
mov
mov
jp
test
jnp
sbb
push
and
or
mov
fcmove
inc
dec
cli
pushf
out
or
int3
cwtl
gs
add
cld
add
movsb
sbb
xor
insb
mov
dec
ss
dec
dec
xchg
in
pop
cmpsb
aam
cmp
pusha
sub
pop
inc
mov
cld
pop
mov
sbb
mov
test
xchg
scas
sub
stc
dec
aaa
push
adc
add
and
in
pop
cltd
popa
cmp
mov
pop
ja
daa
inc
ljmp
roll
hlt
bound
mov
hlt
jno
shlb
adc
popf
pop
push
cwtl
das
dec
and
mov
cmpb
in
sysexit
inc
xor
mov
mov
cmpsb
sub
gs
cld
push
test
xchg
cltd
in
xbegin
sarl
mov
pop
mov
test
loop
das
push
out
inc
or
in
fcoms
pop
setle
mov
mov
jno
xchg
lea
mov
lret
hlt
orl
mov
or
jne
sub
lds
push
dec
aaa
jae
sbb
sahf
cmpl
sbb
and
lock
mov
mov
shll
cmc
push
out
push
rcrb
test
mov
nop
daa
sbb
xor
sbb
addr16
sbb
pop
lret
push
pop
push
sub
sbb
addl
mov
mov
pusha
aaa
inc
cmpsl
out
add
data16
jnp
es
cmpl
dec
sbb
pop
cwtl
jb
add
jg
stc
icebp
sub
adc
mov
out
scas
int3
push
cmp
aas
mov
jno
fidivs
pop
inc
fst
mov
fs
movsl
mov
jnp
mov
in
ret
dec
testb
and
xor
mov
lea
test
dec
dec
loope
xlat
add
aad
adc
les
sahf
mov
xchg
or
inc
pusha
sub
dec
lock
dec
fistpl
sbb
cmc
out
es
cmp
jne
sti
xchg
push
fcom
mov
movsl
mov
daa
xor
mov
add
adc
xchg
cltd
mov
loope
jnp
fdivrp
or
lret
jne
leave
pop
xchg
sbb
ds
sub
xchg
jns
andl
jl
int3
pop
jo
stos
aaa
push
xlat
xchg
or
mov
rolb
lea
stos
adcb
jbe
and
ds
in
mov
mov
lods
xor
xchg
and
or
mov
fistl
xorl
lahf
xor
in
pop
cmc
and
pop
outsb
add
cltd
cli
mov
sub
push
test
inc
aaa
fsubrp
insb
xor
fiadds
xor
scas
fisttps
xor
loope
jnp
outsb
cmpsb
lds
test
int3
mov
push
ja
add
mov
mov
jmp
ds
aas
jno
ficompl
pop
cmp
push
imul
push
mov
into
xor
es
push
and
push
scas
jl
sub
xchg
mov
cmp
xchg
fs
sbb
pop
jecxz
andl
xor
scas
std
jb
push
imul
add
jno
pop
and
fnstenv
or
inc
sbb
in
push
mov
mov
lcall
dec
jle
inc
mov
ss
mov
loope
loope
adc
adc
repz
fs
cmp
in
sub
sti
xchg
ret
jge
add
ss
pop
je
daa
lods
repz
sub
enter
pop
scas
cmp
in
sti
cmp
cmp
push
icebp
inc
iret
jns
mov
xchg
ljmp
and
int
leave
cld
mov
pop
popf
sub
pop
mul
fcomps
inc
mov
push
lock
imul
or
inc
les
xor
cmp
in
mov
lods
push
jmp
fidivl
arpl
dec
pop
or
stc
jp
mov
ret
scas
push
push
mov
inc
pop
cmp
pop
in
andl
push
das
add
add
pop
sbb
cwtl
pop
inc
notl
mov
int3
dec
nop
inc
ret
dec
jmp
rcrb
mov
jl
xlat
pop
aaa
push
test
adc
xchg
jno
movsb
leave
dec
mov
clc
ljmp
sub
mov
jmp
rorl
xchg
push
cmc
push
rcrb
aam
cmc
cmp
jbe
in
incb
add
addr16
pop
xor
fdivl
rorb
xchg
dec
pop
adc
mov
or
xchg
dec
cwtl
or
push
dec
xchg
jmp
repnz
out
inc
int3
aad
popa
sub
and
arpl
arpl
pop
cmc
and
push
jge
sarb
xchg
jle
adc
push
and
dec
mov
rcrl
pop
cmp
xor
aam
shrl
data16
insl
dec
sub
pop
jno
scas
xor
ds
ss
aaa
mov
sub
dec
clc
insl
jnp
xor
add
xchg
loopne
dec
int
std
ljmp
xchg
adc
or
sbb
jge
lods
cmp
test
or
mov
movsl
ja
adc
leave
out
add
ljmp
push
loop
stc
outsl
mov
aaa
lret
cmp
leave
jns
lea
xchg
mov
sub
dec
fsub
test
ret
gs
cmp
sub
rolb
mov
stos
lock
push
pushf
in
es
xchg
and
cld
popa
scas
mov
xchg
shrb
xor
mov
leave
push
or
stos
repnz
repz
out
js
sub
lret
mov
fldenv
cmp
cmp
insl
push
leave
pusha
sbb
call
in
push
inc
in
clc
jb
sub
nop
imul
and
jg
outsl
daa
pop
fadds
pushl
aaa
dec
rol
cld
push
push
out
fcompp
push
push
fisttpll
lock
inc
pop
inc
stos
mov
shlb
mov
jbe
lret
push
inc
add
in
std
lods
xchg
fnstcw
hlt
imul
jbe
dec
sarb
addb
std
push
ljmp
xchg
das
icebp
xchg
push
sbb
jnp
or
xchg
and
xchg
movsl
cmp
lcall
dec
gs
mov
mov
jnp
and
add
pop
dec
int
xchg
lods
push
cmp
or
insb
mov
dec
fsubs
psrad
add
je
repz
and
int3
pusha
sahf
inc
pop
lea
jmp
lods
mov
cmp
jle
sahf
mov
mov
or
hlt
shrb
jnp
xor
fwait
sbb
sub
test
rcl
lea
xor
es
mov
xchg
lds
mov
inc
push
dec
push
js
ljmp
sti
xor
jae
push
mov
push
mov
sub
pop
shrb
push
or
sti
popa
call
pop
jno
inc
or
pop
out
jbe
cld
loop
or
aas
jne
and
lret
arpl
mov
push
andb
and
pop
push
call
loop
cld
lcall
lods
cwtl
mov
insl
imulb
sub
xchg
jmp
shll
cltd
test
shl
mov
jb
inc
stc
aaa
and
adc
daa
sub
pop
inc
inc
loopne
mov
hlt
mov
fsubrp
sti
aaa
les
ss
cs
mov
js
mov
cmp
or
mov
sarl
dec
arpl
rclb
into
sbb
fsubrp
loop
out
add
inc
xchg
lret
rcl
cwtl
mov
shlb
fs
push
sbbl
aad
xchg
pop
addr16
or
mov
sbb
inc
pop
mov
fs
imul
and
pop
out
adc
or
ret
dec
pop
adc
xchg
aas
xor
lods
popf
ret
in
jns
psrad
fisttpl
mov
mov
or
lds
nop
clc
aas
pop
xchg
lods
xlat
loope
xchg
or
repz
adc
es
rcl
repnz
sub
ficomps
sbbl
out
push
mov
inc
mov
jns
dec
push
jbe
jns
out
mov
lods
and
sub
data16
pop
xor
xor
lret
scas
lock
push
out
pop
call
mov
xchg
scas
sbb
pop
and
mov
pop
loopne
out
pop
jo
sub
fidivs
aam
sbb
adc
dec
aas
sahf
xor
mov
jno
call
fsubr
rcrb
mov
inc
js
adc
sub
pop
cmpsl
cmc
xorb
pop
in
into
push
sub
sub
dec
stos
jmp
andl
dec
insb
add
jns
data16
mov
sub
pop
ds
xchg
repz
pop
mov
push
cltd
mov
xchg
push
js
xchg
inc
mov
rcrb
jl
sbb
xor
or
imull
repz
jmp
mov
test
popf
outsb
mov
sbb
or
lds
and
xchg
xor
push
ljmp
jno
stc
jo
sti
mov
push
adc
clc
movsb
test
sbb
push
pop
push
cmpsb
mov
popf
or
add
and
mov
sti
mov
mov
scas
add
inc
inc
sahf
xor
es
mov
push
out
fistpll
inc
pop
jge
or
xor
jnp
jecxz
test
adc
cmp
jbe
inc
mov
mov
sbb
lea
mov
xor
fs
sahf
into
test
aad
jecxz
mov
jge
es
xchg
push
sbb
cmc
enter
pop
mul
add
addr16
cmp
stos
add
or
and
xor
xchg
mov
dec
mov
fmul
push
arpl
loope
cmp
incl
sbb
mov
xchg
hlt
add
dec
mov
xor
mov
sti
fcmovbe
mov
gs
mov
mov
out
in
les
or
sbb
cmpsb
lds
outsb
add
gs
gs
adc
aad
shlb
jp
imul
cmp
jecxz
add
sbb
out
outsb
and
xchg
dec
xchg
cld
mov
scas
inc
sahf
ss
mov
cmp
xchg
ret
mov
sub
fs
mov
icebp
cltd
mull
push
mov
xor
imul
xor
cmp
incb
or
fldcw
fcmovbe
inc
orl
mov
cmc
popf
or
mov
hlt
inc
mov
add
mov
mov
out
fmul
ja
inc
lock
out
stos
mov
iret
stc
jo
sbbb
cmp
pusha
dec
cmp
cvtdq2ps
mov
mov
mov
push
mov
sub
pop
and
stos
mov
mov
sbbb
ja
addb
ljmp
push
push
jnp
xor
out
xor
fcmovnbe
push
nop
lods
popf
mov
or
xchg
pop
outsb
shl
decl
xor
stos
xchg
mov
mov
shr
es
or
ret
test
gs
jecxz
xlat
fucomip
add
sub
addb
xchg
sbb
inc
shr
push
or
xchg
lcall
data16
js
pop
dec
pop
hlt
jle
mov
loope
push
mov
call
cmc
xchg
sub
jmp
mov
push
mov
lods
push
fidivrl
jno
pop
int3
jg
and
inc
pop
sbb
fistpll
pushf
mov
movsl
daa
push
mov
jl
mov
mov
and
out
mov
push
jmp
pushl
or
xor
fsubrl
fsubrp
mov
in
das
push
xchg
pop
mov
leave
sub
push
test
test
mov
call
fsts
lock
cltd
cli
pop
mov
jge
mov
dec
inc
and
rcll
clc
push
push
and
xchg
and
lea
imul
mov
push
bound
stc
inc
mov
cmpsl
mov
outsb
xchg
andl
push
jp
imul
inc
outsb
pusha
out
test
xor
gs
push
in
dec
push
daa
leave
cmpsb
jns
es
adc
inc
xor
ret
lahf
out
cld
ret
loop
mov
es
fdivr
cmp
ja
loopne
jmp
out
xchg
mov
push
imul
out
jg
xchg
fiaddl
jnp
dec
jne
jp
lcall
mov
ja
mov
cmp
and
js
jge
out
imul
ss
shll
dec
cmpsb
inc
clc
repz
stc
sbb
test
mov
or
adc
lods
inc
cmp
inc
mov
jae
lcall
and
jno
inc
inc
sbb
outsl
push
sbb
adc
outsl
sub
add
pop
and
add
stos
jmp
fwait
adc
or
lds
fnstenv
adc
xchg
in
sub
mov
dec
lods
mov
fisubrl
jne
pop
sbb
insb
mov
mov
sbb
inc
push
jg
and
mov
mov
xchg
jb
or
mov
pop
out
adc
dec
lds
loop
or
mov
and
sarl
shl
jns
loope
sbb
mov
sbb
cltd
adc
lea
pop
aaa
arpl
jl
sub
cmp
je
lods
push
jns
outsl
sub
movsb
xor
dec
pop
cld
cmpsb
mov
stc
mov
out
lds
dec
cmp
loope
rcll
dec
bound
icebp
mov
cmp
pop
jg
dec
mov
or
cs
sub
lds
fldt
imul
inc
call
out
adc
pop
xor
jo
mov
ret
test
fimuls
lds
inc
aas
pop
cmp
das
sarb
out
cmp
in
cltd
in
cmp
rcrb
dec
loopne
lods
fldt
rorb
add
sahf
insl
icebp
mov
icebp
mov
and
and
enter
fs
adc
bound
sbb
lds
lods
jmp
mov
and
addl
ficompl
sbb
jns
push
pop
inc
mov
cli
push
sub
push
int3
cltd
je
cmpsb
dec
lahf
adc
ljmp
ja
ljmp
jmp
das
mov
sub
add
sbb
stos
jmp
movb
xor
cmc
sbb
insl
ret
jge
aad
jg
loop
icebp
xor
dec
push
cmpsl
clc
or
das
xchg
xchg
push
push
loopne
sub
and
dec
pop
cmc
cltd
dec
scas
stc
pop
jge
ret
sbb
and
jae
or
sub
and
mov
les
popw
lock
mov
test
hlt
ret
movb
sti
and
push
sbb
ret
iret
cld
gs
sub
imul
mov
dec
ficoms
push
fwait
xor
cmp
aam
mov
cmp
mov
ficoms
dec
jo
cmp
ja
clc
test
add
xchg
cli
jbe
adc
sub
loopne
xchg
scas
adc
push
jb
cmpsl
sub
jle
dec
cmp
mov
xchg
insb
inc
jne
test
lret
stc
jmp
lods
in
mov
inc
adc
xchg
daa
sarl
cld
cwtl
inc
lret
and
xchg
inc
pop
dec
pusha
test
pop
in
in
cs
loop
add
shrl
dec
add
sbb
dec
iret
mov
and
sbb
dec
arpl
aad
jmp
push
mov
or
cs
fisttpl
call
xchg
sub
cmp
jmp
cld
sti
push
test
ds
packuswb
dec
adc
sbb
cmp
js
jmp
aaa
push
jmp
lds
clc
jno
jbe
lcall
and
inc
lahf
ss
mov
and
mov
inc
es
iret
add
jle
and
push
sahf
add
dec
fsubr
xchg
ljmp
sbb
pushf
or
mov
ret
adc
inc
test
shlb
sub
hlt
lret
cmp
cmpsb
cld
int3
xor
jmp
adc
inc
add
popf
xor
fisubs
mov
adc
fcmovb
lds
loope
sbb
lcall
pop
scas
sub
stos
fisubrl
adc
xchg
imul
loope
inc
cmp
and
pop
sbb
push
xor
xor
or
mov
lret
fsts
xor
cli
push
leave
sets
movsb
and
int
or
mov
pop
mov
addr16
dec
sbb
enter
hlt
arpl
mov
or
std
fdivl
mov
cli
push
jnp
xchg
mov
cmp
pop
pop
arpl
aad
mov
in
sub
stos
and
cwtl
pop
lds
stc
push
mov
leave
ficoms
xchg
mov
es
xchg
dec
sarb
push
jle
cmpsb
test
fdivrs
roll
out
ds
std
outsl
ds
mul
test
or
jg
sub
push
pop
xor
lahf
mov
mov
pop
ljmp
testl
sub
pop
push
flds
popf
add
in
mov
pop
xlat
mov
add
je
stos
cltd
pop
xchg
test
push
div
dec
or
shrb
fxch
pusha
lret
insb
sbb
int
jl
pop
pop
int
pusha
jnp
outsl
jnp
pushf
call
loop
sbb
dec
jne
add
xor
mull
lcall
push
cmp
lret
pop
hlt
cmp
ret
repz
and
adc
je
and
insb
cltd
xor
xlat
push
jne
cmp
xchg
adc
inc
dec
mov
icebp
sahf
outsb
fsubrs
inc
or
pop
jecxz
leave
cmp
pop
icebp
add
mov
dec
mov
lea
rcrl
popa
push
sbb
jnp
push
jp
mov
xor
jge
inc
xchg
push
int3
cld
data16
aaa
subb
cwtl
cmpsb
mov
xlat
outsl
push
or
insb
pop
or
dec
int
insb
lea
xchg
mov
pop
lret
fdivrl
pop
loop
repnz
pop
sub
jnp
pop
inc
mov
dec
push
dec
or
jp
adc
je
cmc
cmp
in
sub
outsl
loop
inc
pop
sbb
outsl
push
jno
cld
lods
pop
lret
inc
adc
push
nop
jo
notb
xchg
xor
mov
jl
aas
push
xor
xor
dec
add
adc
stc
pop
dec
sbbb
addb
mov
lahf
cs
mov
enter
mulb
push
mov
repnz
in
pushf
in
jge
clc
sub
mov
insb
outsl
fs
sbb
jbe
push
push
cmc
jns
xchg
mov
sbb
addr16
mov
adc
daa
cmpsb
jns
stos
ss
or
xchg
daa
cwtl
sbb
dec
lea
or
inc
dec
gs
repnz
add
jl
add
push
pop
jbe
inc
xor
push
adc
ss
mov
es
outsl
dec
mov
jge
test
mov
sbb
xchg
mov
daa
jp
add
jbe
std
leave
xor
inc
ret
jns
dec
movsb
mov
aas
xchg
adc
shrb
scas
push
test
add
jb
int
or
cmc
xchg
jp
data16
jae
sahf
adc
adc
and
aas
in
test
pushf
std
sarl
xor
sub
fstpt
push
dec
aad
jmp
sti
inc
sbb
popf
cs
addr16
mov
movl
sahf
inc
out
add
push
jb
dec
bound
loop
cmp
sub
pop
mov
rclb
cwtl
xchg
or
pop
out
xchg
sub
aaa
stc
sbb
adc
xor
inc
popa
addb
mov
inc
movsb
push
dec
push
lret
aam
push
and
ret
enter
lret
test
xchg
sub
xor
jle
mov
notl
pop
lods
jmp
sub
inc
cmp
jno
fwait
test
rcr
out
fs
xor
cmp
dec
imul
je
aas
adc
xchg
pop
push
xchg
cmpsl
shl
jecxz
pop
sbb
jl
mov
out
je
in
mov
pop
jb
pop
xor
dec
lds
ja
mov
mov
je
mov
push
in
es
leave
sub
mov
mov
test
aad
fucomp
adc
xchg
imul
jno
mov
add
insb
lret
lret
out
fistps
lret
push
mov
pop
insb
fdivl
cmpsl
xor
mov
or
adc
pop
jecxz
rorl
jb
out
dec
bound
mov
fmul
mov
xor
lods
fsubr
divl
jb
jbe
and
lahf
flds
fldl
adc
ret
outsl
je
lea
repz
pop
icebp
dec
lds
repnz
and
cld
cmp
imul
jl
pop
xchg
popa
sbb
mov
dec
cmp
hlt
push
call
add
sub
movsl
mov
mulb
insb
inc
pusha
inc
test
or
cmp
cmp
inc
xor
adc
xor
cmp
lods
sub
leave
adc
call
cmp
sbb
adc
into
shll
ljmp
pushf
mov
xor
add
push
adc
mov
or
jne
inc
dec
shlb
lret
cmp
arpl
lret
jp
cli
dec
imul
test
dec
pop
outsl
mov
in
inc
and
fnstenv
mov
dec
jmp
or
pop
mov
fistl
inc
mov
mov
data16
xor
mov
push
push
jnp
pop
jp
fidivs
adc
rolb
rcrb
movups
addr16
xchg
mov
bound
add
stc
in
int
pop
fwait
leave
fnop
aaa
pop
insb
push
pop
jo
aad
fnstenv
inc
sbb
xor
pushf
jne
insl
stos
xchg
mov
or
clc
or
xor
jmp
shlb
insl
cld
dec
movsb
jae
adc
sbb
push
je
stc
sub
addr16
mov
mov
lcall
cwtl
out
dec
fistpl
lds
subb
mov
cmp
shlb
adc
jbe
lds
inc
fcmovne
push
dec
std
mov
call
test
scas
call
mov
mov
lds
add
icebp
cmc
popa
or
push
popf
lock
shlb
pop
andl
mov
cmp
sbb
lds
arpl
pop
mov
dec
mov
in
outsl
int
xchg
mov
xor
call
sahf
cmp
push
sbb
gs
sbb
pushf
dec
dec
cmp
mov
push
pop
jmp
jne
and
mov
cltd
fidivl
mov
xlat
out
cmp
cmp
inc
out
xchg
cmpsl
pop
mov
pop
mov
xlat
cmp
dec
nop
in
popa
mov
fisubrl
or
pop
mov
mov
lds
dec
xor
xor
bound
xchg
icebp
out
call
jle
cmc
es
aas
cmpsl
lds
inc
int3
negl
lcall
jne
sarl
mov
dec
dec
add
jl
pop
add
lock
inc
inc
ficoms
outsl
pop
cmp
pop
ss
lcall
ret
add
pop
push
test
xlat
add
insl
lods
out
scas
mov
into
mov
lahf
mov
call
test
sub
pop
mov
dec
adc
test
je
shlb
fstl
pop
fwait
jae
scas
pop
in
cmpsb
out
daa
jns
in
aaa
fdivrl
inc
sbb
fcmove
lock
jae
jg
or
xor
push
dec
dec
pop
jae
mov
lock
daa
xor
repz
jecxz
cld
sbb
pop
shl
jp
xchg
dec
xor
push
and
mov
push
and
loop
mov
push
mov
sbb
sub
pop
inc
out
jbe
and
icebp
or
cs
imul
shll
pop
xchg
mov
xchg
fildl
sahf
jno
xor
test
pop
and
rcll
jmp
ret
call
push
and
or
add
mov
xor
test
enter
out
pop
add
jnp
shl
imul
test
arpl
cmpsl
in
pushw
or
test
sbb
dec
imul
xchg
dec
lock
lcall
cli
xor
fs
popf
aad
inc
pop
out
mov
mov
fisubrs
decl
notl
movsl
daa
clc
test
sub
test
jne
mov
pop
adc
add
popf
sbb
inc
mov
lea
insb
icebp
cmp
xor
fmuls
pop
jne
and
jo
pop
jge
lods
call
dec
scas
std
mov
rol
sub
inc
lret
mov
mov
stc
shll
popf
rcll
push
jno
test
fisubrs
mov
sbb
subl
bound
add
jl
lods
movsb
pop
xchg
jns
mov
cmp
mov
add
push
movsb
pop
mov
out
insl
jbe
aaa
xor
pusha
push
cmp
cmc
jnp
pusha
sbbb
jl
arpl
add
push
in
ret
mov
push
add
mov
or
shlb
hlt
cmp
sbb
pop
push
sbb
pop
std
pop
fnstenv
iret
outsl
mov
lds
sbb
mov
xchg
add
mov
ret
pop
pop
mov
mov
addb
wbinvd
push
mov
mov
gs
adc
pop
mov
xlat
pop
into
adc
test
xor
int
hlt
ret
lret
and
mov
jp
xorb
out
push
and
cs
je
cmp
push
test
iret
stc
rorb
jmp
xchg
xchg
inc
lcall
jg
or
mov
icebp
lret
mov
leave
xchg
xorb
dec
rclb
in
hlt
xor
stos
std
cwtl
je
fstp
gs
jg
arpl
nop
daa
repz
cmp
mov
push
or
fisttps
cmp
lcall
or
scas
aad
adc
into
dec
add
lret
mov
icebp
test
addl
push
test
adc
jo
lea
test
fwait
in
push
aam
cld
sarl
pusha
sbb
adc
out
rcrb
mov
test
sbbb
or
mov
jne
andb
cmp
inc
enter
gs
add
lahf
xchg
sub
push
cmpsl
inc
outsl
aas
jecxz
imul
enter
fildll
mov
icebp
xchg
pop
inc
xorb
jl
mov
cmp
add
dec
aad
push
or
mov
mov
jmp
rcrl
add
inc
js
jb
fstpl
inc
addr16
inc
fsubrl
push
test
popa
cwtl
in
xor
push
roll
stc
or
mov
mov
dec
dec
addr16
rorb
call
and
fiadds
pop
dec
clc
hlt
int3
xchg
cli
pushf
in
test
pop
loop
lock
pusha
cmp
push
cmpsb
mov
pop
push
mov
fsubs
into
ficoms
sbb
stos
subl
push
cmp
inc
lcall
dec
mov
out
adc
ja
or
sub
movsb
mov
or
push
xchg
ss
mov
sub
and
xor
xor
ljmp
inc
push
adc
adc
rdpmc
push
push
xchg
test
movsl
in
scas
inc
faddl
sub
dec
or
decl
mov
xlat
push
jo
jg
stos
push
mov
hlt
lret
inc
jbe
jne
mov
lds
push
fnop
dec
aad
jge
xchg
imul
stos
pop
jno
lahf
gs
xor
dec
test
ja
data16
je
adcl
repz
aad
mov
in
lret
fcmovnu
fistl
mov
xor
xchg
adcb
jmp
leave
int
adc
loop
adc
pop
fsubrs
and
add
icebp
fnstenv
jl
jae
xor
popa
in
cli
xchg
scas
push
stc
test
cld
sbb
sub
push
adc
lds
sub
fldt
cmpsl
cltd
in
repz
mov
and
and
sti
jecxz
icebp
daa
out
popf
popf
aad
adc
adc
clc
fcoms
sahf
and
sti
enter
or
int3
shl
sbb
mov
mov
enter
jmp
jge
fcomps
adc
sbb
dec
push
mov
mov
sub
sbb
lcall
dec
and
and
test
cmpsl
sub
popf
pop
loopne
and
mov
clc
xorl
js
mov
test
and
lods
cld
sbb
popa
sahf
sub
xor
push
mov
sbbb
or
jnp
mov
or
out
cmp
push
and
in
test
jge
xor
loopne
mov
adc
pop
popf
je
push
fs
cmp
loop
scas
mov
push
loop
ret
cmp
test
pop
or
icebp
sbb
repnz
addb
push
cmp
mov
mov
inc
aam
mov
adc
push
sub
mov
adc
adc
sub
leave
xor
cltd
jo
es
fstl
sub
or
roll
sub
movsl
les
daa
or
xor
das
aaa
rol
xlat
mov
mov
xchg
xchg
ss
jge
shrl
cld
lcall
orb
out
ljmp
push
and
clc
test
pushf
and
out
mov
aaa
inc
dec
and
pop
sbb
cmpsl
cmp
push
insl
push
jns
lods
dec
loope
test
imul
rcll
aam
cmp
popa
ret
ficoml
or
sub
pop
or
xor
sti
or
lock
and
clc
not
fs
push
sbb
mov
int
mov
adc
pop
lret
pop
pop
and
mov
xchg
pop
shrl
cmp
movsb
mov
arpl
icebp
xchg
sub
aam
hlt
xchg
xor
pop
insb
cmp
popf
add
cmc
sub
scas
pop
mov
lods
data16
or
mov
cmp
jns
ds
mov
pop
jnp
inc
insl
outsb
jmp
ret
sahf
xor
xchg
adc
jmp
add
jmp
loope
stc
mov
sbb
xchg
sbb
lock
call
add
pop
sub
push
or
adc
push
push
idivl
sti
jb
xor
push
pop
std
cltd
jp
mov
enter
and
adc
dec
mov
jg
aad
lods
lea
mov
mov
jns
out
adc
ljmp
outsb
xor
aaa
cmpl
dec
xor
fstp
sbb
mov
push
and
add
jge,pt
and
sbbb
notl
mov
mov
leave
mov
ljmp
in
mov
inc
out
xchg
adc
jle
add
dec
sub
mov
push
sbb
push
in
and
fs
cmpsb
sahf
or
add
mov
add
aam
and
clc
stc
sbb
sub
ljmp
mov
inc
sbb
push
dec
push
pop
mov
mov
lods
and
jle,pn
mov
lcall
cmpsl
or
xor
xchg
outsl
push
adc
sahf
add
xor
xorps
xchg
ljmp
hlt
xor
sbbl
mov
and
add
loop
in
xchg
sbb
shl
mov
sbbb
mov
divl
sub
cmp
jmp
or
repz
cpuid
or
es
push
outsb
cmpl
cld
scas
cmp
out
dec
in
mov
leave
jnp
xchg
sub
mov
daa
lcall
nop
fisubl
rcll
and
lock
repz
pushf
xchg
push
lret
pop
scas
inc
popl
dec
cmpsl
fwait
lods
in
push
xor
popa
lock
push
in
test
insb
dec
mov
dec
aam
cmp
pop
stc
out
ret
je
dec
add
inc
out
hlt
and
insb
sub
mov
fs
ss
mov
loope
ja
sti
xchg
cmpsb
shrb
lods
jnp
repz
adc
inc
bound
les
repnz
stc
or
sub
pop
loopne
mov
repz
cs
sbb
int3
mov
ficoml
cmp
icebp
cmpsb
shrl
mov
aas
push
rcll
mov
movb
cs
jns
or
xchg
call
inc
mov
mov
scas
nop
add
subl
adc
mov
add
in
nop
mov
aam
out
clc
hlt
and
dec
sub
add
xor
or
into
addr16
subl
ds
sbb
dec
push
xor
mov
cmpsl
push
lea
aaa
dec
aad
dec
inc
jbe
xchg
mov
xchg
mov
fdiv
add
push
int
mov
inc
pop
cmp
and
loope
cmc
push
and
jle
ja
push
push
call
xor
out
push
pop
scas
outsb
cld
xchg
das
in
or
jbe
in
sbb
and
cmp
mov
dec
and
push
das
cmp
lcall
sbb
pop
fistpll
data16
mov
mov
outsb
cmpsb
xor
cmpsb
fisubs
stos
in
jg
mov
test
leave
sub
mov
mov
aaa
push
dec
cmp
ljmp
scas
mov
and
mov
aaa
test
lods
outsl
scas
mov
insl
push
jnp
xor
cmp
test
movsl
js
add
inc
stc
aam
stos
adc
adc
mov
sub
inc
xchg
pop
mov
sub
repz
xor
aam
popf
pop
xor
xor
mul
notl
imul
pop
outsl
mov
fyl2x
sbb
pop
push
nop
gs
xchg
push
xchg
bound
ja
xor
fadd
adc
inc
mov
pop
decl
lock
xor
cltd
pop
sub
jmp
mov
or
int
push
add
cmpb
jge
xor
pushf
adc
ljmp
mov
xchg
lods
xchg
sbb
das
test
notb
xor
ljmp
sarb
pop
and
adc
sub
xor
or
lcall
mov
rorb
inc
pop
cmp
jae
je
dec
hlt
fidivrs
jl
mov
cmc
pushf
mov
daa
imul
lds
jmp
shll
sbb
sbb
ror
jecxz
dec
cli
xchg
jl
dec
mov
sarl
test
xchg
jg
leave
xchg
cwtl
test
xchg
inc
xor
popa
sbb
jns
mov
xchg
mov
imul
or
mov
fldl
lods
in
xchg
enter
outsl
flds
ss
enter
or
aas
sub
mov
leave
out
sbb
adc
insb
inc
scas
jecxz
insb
or
mov
dec
jp
nop
cmc
sbb
pop
adc
jp
test
jnp
add
pushf
sbb
addps
inc
xlat
and
jb
jne
jge
fsubrs
jnp
je
jno
jns
dec
test
mov
arpl
outsb
lds
lock
push
aaa
fwait
ss
jmp
mov
cld
sub
sbb
jle
xchg
aaa
in
dec
imul
bound
setb
mov
rcl
mov
loopne
sub
out
repnz
inc
iret
push
jbe
jns
popf
call
xchg
cs
jle
popa
ja
movsb
jge
scas
jno
sbb
or
and
nop
mov
fisttps
subb
push
xchg
mov
xlat
jecxz
sbb
cmp
mov
lahf
clc
or
out
push
dec
mov
mov
xor
jg
enter
pop
mov
add
cmc
jle
mov
push
xchg
pop
lahf
jno
mov
xor
cmp
setge
mov
or
inc
scas
mov
test
lret
pop
jo
mov
jae
and
out
jecxz
push
and
fisubrl
adc
cmpsb
xchg
test
xor
stc
fnsave
pslld
jae
clc
sbb
cmpsl
mov
stos
and
lods
outsb
js
stc
stos
push
cmp
mov
aaa
imul
and
int
lcall
push
xchg
repnz
jl
lcall
ja
nop
and
xor
inc
shrb
or
out
or
lahf
arpl
lahf
mov
xchg
enter
mov
clc
out
jo
aam
je
inc
jb
push
imul
mov
jb
xchg
add
scas
iret
mov
popa
lods
push
insl
xor
cmp
adcb
cmp
fdivrl
mov
jg
and
dec
or
adc
push
inc
adc
mov
sub
ds
popf
jae
aaa
lret
pusha
sbb
jne
hlt
ret
out
test
fnstsw
add
inc
xchg
ljmp
mov
stos
stos
jecxz
pop
lret
fsubr
sub
sbb
push
div
adc
jb
addr16
imul
add
cwtl
push
es
scas
fwait
repnz
and
fiaddl
or
repz
daa
cmp
mov
inc
inc
mov
pop
push
fwait
xchg
js
mov
xchg
jmp
ret
repnz
add
mov
jns
inc
movl
in
movsb
mov
push
fistpl
mov
mov
les
mov
and
cmp
cmp
pop
jb
mov
mov
shl
lahf
adc
ss
inc
popf
or
cmpsb
fsubs
in
dec
inc
inc
stc
icebp
jecxz
repz
push
jmp
cmp
icebp
movsl
or
push
out
push
cwtl
xor
push
ja
loope
mov
popa
aas
xchg
jge
cmp
test
andnps
jmp
cmp
in
mov
push
data16
or
push
push
xor
hlt
jbe
mov
leave
xchg
add
je
push
and
mov
cltd
lock
arpl
mov
insb
or
push
and
jnp
in
lea
addb
lahf
dec
mov
and
jbe
sbb
imul
popf
or
pop
repz
cmp
xchg
mov
aad
and
jmp
sub
or
dec
pop
mov
roll
lahf
pop
or
and
sub
push
leave
cmp
and
push
in
xchg
push
daa
pop
mov
jns
ret
jae
sbb
or
movsl
loopne
lods
rorl
sub
lahf
outsb
jp
push
mov
mov
lds
adc
scas
idivb
ljmp
sub
scas
xor
fsubrs
and
in
cmp
dec
dec
sbbl
sahf
fdivl
mov
mov
mov
imul
clc
cmpsb
dec
int
mov
ss
jae
loopne
ja
jp
cmpsl
outsl
scas
out
negb
sbb
jecxz
sub
push
test
fimuls
or
out
push
enter
loopne
call
rorl
mov
lcall
cmp
fwait
jmp
mov
sbb
push
mov
clc
movsl
jnp
xchg
popf
ret
shrl
and
ds
push
test
loop
mov
add
fwait
mov
inc
divl
loop
sub
push
mov
xchg
imul
add
mov
dec
push
scas
mov
xor
lods
lcall
stos
or
shrb
std
cmp
xor
and
enter
cmp
je
xchg
push
dec
mov
stc
daa
dec
dec
or
xorb
stos
in
mov
orl
xchg
push
jbe
mov
add
fwait
sbbb
in
mov
mov
bound
push
inc
fmuls
aas
stos
fsub
sub
lea
in
aas
ljmp
adc
cmc
mov
pop
add
adc
mov
jne
in
sub
movsb
fsubrs
call
test
inc
cltd
pop
mov
mov
psllw
sub
xchg
test
scas
adc
dec
pop
push
nop
out
test
xchg
stos
insl
inc
mov
test
jg
hlt
pop
dec
adc
test
adc
mov
je
mov
mov
cmpsb
mov
add
out
xchg
mov
xor
movsb
pop
sbb
push
mov
mov
cmp
inc
cmp
add
das
lock
mov
xor
fs
cmp
leave
inc
in
jno
push
mov
pop
mov
jp
mov
adc
sub
xorl
std
popa
jno
dec
mov
xchg
gs
mov
mov
negb
pop
fmuls
cmp
push
ja
push
xor
aad
xor
and
aaa
stc
or
lret
mov
add
shl
gs
dec
in
shlb
add
sub
fdivp
xor
jecxz
xor
xorl
js
sahf
sub
scas
pop
cmp
sub
jne
cmp
mov
int
jns
mov
sbb
ds
mov
and
sti
divb
sub
jno
add
pop
push
clc
sub
jl
clc
in
lods
in
push
inc
push
cmp
movsl
sbb
xchg
xor
cmp
xchg
jns
mulb
mov
xchg
sahf
and
sub
in
and
pop
push
movsl
icebp
xchg
in
pushf
outsl
inc
push
ja
lret
rorb
mov
push
push
lret
jb
mov
loop
xchg
sub
push
inc
idiv
xchg
pop
loopne
sahf
jb
xlat
push
pop
dec
jge
sub
cmp
lcall
test
pushf
dec
add
fiadds
in
inc
fldt
mov
into
mov
push
push
push
in
mov
rcll
testl
sbb
adc
aad
and
es
gs
push
xlat
repnz
cmp
and
pop
lret
jno
fstps
sub
shlb
and
add
add
and
push
or
sub
push
loop
push
out
addr16
fdivl
imulb
cmp
xor
inc
mov
mov
push
arpl
test
fcomip
in
jns
push
test
mov
sbb
adc
jne
jmp
inc
or
mov
int3
inc
sbb
fsubl
add
loop
ja
stc
mov
cmp
lods
inc
or
pusha
data16
push
or
sahf
daa
cmp
xchg
loopne
or
es
jg
mov
xchg
push
pop
addl
adc
dec
popf
insb
mov
push
ror
lahf
add
rorb
sub
lds
cmpsb
push
mov
xchg
repz
sbb
in
adc
cmpsl
enter
and
data16
lret
das
pop
insl
lret
cmp
fadd
dec
fcom
repnz
xor
test
js
or
ds
fisttpll
sbb
mov
out
lret
mov
jmp
and
gs
mov
mov
jecxz
popf
push
sti
mov
mov
lret
je
mov
call
push
jecxz
mov
pop
mov
xchg
push
shll
sbbl
mov
cmp
push
fs
inc
inc
sbb
mov
mov
sub
movsl
cmpsl
xchg
xchg
xor
fimuls
aas
lret
sub
pop
jnp
sti
and
sahf
stos
lret
adc
sub
mov
stc
nop
call
cmp
cmp
inc
call
ja
shl
pushf
pushf
cld
adc
lods
or
sti
in
mov
roll
jl
push
mov
push
rcrl
je
or
nop
mov
add
lods
jb
xlat
push
add
sbb
inc
cmpsl
mov
int3
xor
in
mov
icebp
outsb
outsb
dec
cmp
dec
mov
pop
xor
push
call
in
test
scas
inc
ja
lock
inc
int3
fiadds
out
test
cmp
adc
dec
daa
pushf
outsl
fsubrl
out
adc
pop
and
test
pop
loop
sub
cmp
add
inc
lahf
call
jb
jg
add
scas
mov
cmp
icebp
mov
jne
dec
xchg
xor
inc
dec
adc
popf
mov
imul
out
dec
or
push
xchg
das
mov
fstpl
jbe
xchg
ljmp
adc
mov
imul
sbb
push
data16
shlb
pop
mov
pop
mov
aam
cmp
mov
fisubrs
fisubs
jb
pop
xchg
test
adc
xor
aaa
daa
cli
and
pushf
xor
pop
gs
push
mov
sub
notl
dec
ds
loope
daa
mov
jl
push
xlat
dec
cmp
inc
dec
loop
xchg
test
iret
aam
dec
mov
jnp
mov
jnp,pt
mov
loopne
data16
inc
outsl
xchg
popf
xchg
ss
mov
mov
shll
xchg
xor
adc
aad
xchg
int
jae
add
jecxz
mov
mov
aas
push
xlat
fs
cwtl
mov
outsb
in
jmp
mov
cs
pusha
jns
jb
mov
lret
cmp
mov
inc
cmp
lret
bound
mov
adc
cltd
and
decb
insb
push
xlat
test
inc
lods
jecxz
pop
fnstcw
imull
inc
lea
repz
and
xchg
push
outsb
cli
adc
or
or
popf
jno
inc
xchg
data16
add
cltd
xchg
daa
lea
mov
dec
pushf
scas
inc
into
sub
scas
pop
mov
in
fwait
mov
sahf
cwtl
sbb
and
std
in
mov
iret
call
push
nop
and
xchg
jmp
mov
popa
into
dec
push
lret
loopne
imul
add
cmp
lcall
lds
sub
mov
xor
nop
sbb
cmp
pop
cmp
lods
outsl
dec
cmc
mov
cmp
sbb
int
or
fsubrs
ds
insl
out
jae
or
ficoms
pop
mov
jp
or
and
sub
jle
scas
fsubl
xor
out
ret
or
jbe
pop
sbb
push
mov
or
test
and
cwtl
xchg
lret
inc
pop
cmp
scas
pop
push
ds
xor
adc
mov
fwait
mov
icebp
or
stos
inc
pop
mov
mov
pushl
in
adc
pop
cmp
xor
movsl
les
mov
hlt
and
fcomps
bound
stos
cmpsl
push
pusha
pop
xchg
das
hlt
mov
sti
pop
cmp
loopne
fcoml
xor
les
addl
pushl
dec
inc
dec
loop
popf
and
aaa
aas
mov
faddp
pop
int3
incb
in
fsubl
lods
cmp
xchg
mov
xchg
inc
ffree
inc
sub
jb
mov
lea
sbb
sub
add
mulb
into
gs
mov
imul
jecxz
imul
repnz
xor
jns
call
lret
data16
sti
push
jmp
pushf
xchg
test
ret
imul
movsb
fwait
xor
in
cmp
mov
fbstp
push
scas
inc
mov
ja,pn
push
int3
mov
lret
mov
jae
out
and
cli
xlat
dec
and
mov
rcrb
inc
add
mov
push
mov
mov
xchg
inc
mov
jp
add
inc
xchg
adc
fistpll
jp
cld
imul
fsubrs
fs
stc
and
jmp
push
das
and
pop
sbbl
decb
jmp
cmpsl
mov
add
aad
hlt
lods
mov
dec
gs
pop
outsb
arpl
pop
sub
mov
lret
bound
leave
jmp
inc
xor
in
sti
lret
and
jno
mov
mov
push
fsubrl
int3
and
repz
fcos
xchg
lret
push
jmp
mov
ss
mov
inc
mov
outsl
add
filds
fistpl
sbb
sub
mul
or
fcomps
lret
jecxz
repz
pop
push
movsb
loope
out
test
movsb
jns
xchg
and
mov
jbe
cmp
mov
or
ljmp
dec
push
out
cmp
xchg
lea
xor
es
insl
out
cmpsb
imul
mov
xor
push
insb
cltd
data16
mov
subb
cmp
movsb
push
dec
fcmove
jge
cmpsb
mulb
mov
out
mov
push
lea
inc
push
adc
roll
pop
aam
and
icebp
sub
push
imul
je
jnp
and
pop
gs
lea
xchg
jl
jbe
pop
pop
mov
xchg
jg
shll
add
inc
test
xor
lods
pusha
push
cmpsb
sarl
mov
shrl
pop
icebp
xchg
gs
adc
jne
out
cli
push
cs
out
lea
sbb
fldenv
scas
out
lretw
es
mov
sbb
stos
lods
add
repnz
icebp
inc
pop
arpl
xor
pop
xchg
push
inc
push
xchg
scas
fsubr
xchg
sbb
into
movsl
adcw
es
in
or
ja
loopne
push
cmc
in
stos
lahf
fidivl
fistpll
jbe
in
pop
jle
rorb
and
into
neg
ds
adc
lcall
cmp
insl
and
mov
cmp
scas
xchg
dec
pop
cs
add
out
xchg
jle
push
mov
jnp
add
or
out
aam
xor
fwait
lret
xor
pushf
mov
sub
mov
nop
std
xchg
mov
cmpsl
ret
lcall
movhps
cmp
daa
aam
in
test
popf
mov
xchg
ds
scas
cmpsb
stc
add
nop
sarl
push
inc
jmp
and
insb
into
loope
rcrl
fsts
arpl
mov
fimull
mov
push
push
jle
xchg
scas
fwait
xchg
sti
xchg
les
pop
inc
mov
insb
add
xchg
fcoml
ret
outsb
push
ljmp
leave
push
aad
mov
cmp
xchg
data16
mov
pop
cld
gs
stc
sbb
lods
push
aam
cli
rclb
pushf
sub
inc
mov
xchg
cwtl
pop
cmp
add
lea
popf
or
lret
gs
cld
mov
xchg
mov
jecxz
pop
pop
or
pop
mov
sahf
xor
movsl
inc
out
cld
push
mov
push
xchg
js
imul
sbb
iret
dec
jmp
pop
testb
movsb
and
or
xor
aaa
mov
jae
or
repz
xchg
pop
insb
icebp
jge
scas
push
rclb
and
leave
ds
xor
xlat
out
imul
push
mov
and
dec
pop
adc
out
pop
cmpsb
or
xchg
sbb
lea
stc
push
sarb
mov
pop
in
addl
mov
mov
jbe
xlat
sbb
out
orl
xchg
or
call
mov
push
imul
mov
jae
aad
sti
adc
mov
imul
sub
xchg
jo
rcrl
adc
jnp
ljmp
or
inc
sbb
cmc
movmskps
and
ret
stos
int
daa
ja
and
pop
cltd
scas
outsl
cwtl
jo
mov
mov
sbb
in
cltd
arpl
insb
outsl
push
ljmp
ss
stos
jne
add
or
ljmp
dec
stos
test
cwtl
jle
incl
mov
das
mov
shll
int
sbb
sub
mov
pushf
out
mov
push
push
adc
xor
test
les
mov
cmp
ret
dec
fldt
outsl
lock
inc
out
adc
je
mov
xchg
add
jo
rcrb
inc
stos
int3
xlat
mov
and
aam
in
roll
enter
mov
aas
cmpsb
fwait
rol
imul
movsl
sbb
pop
xlat
xchg
jp
loope
pop
jecxz
sub
outsl
jb
push
jl
imul
pop
inc
jge
jbe
push
addb
ja
mov
test
lods
mov
sub
inc
fiadds
andl
in
dec
ret
inc
dec
test
adc
push
sbb
ds
mov
arpl
or
cmpsb
lock
int
sbb
outsl
xchg
sub
dec
aaa
int3
pop
xchg
fcom
mov
in
int
sbb
and
pop
and
rclb
xchg
pop
push
inc
add
jo
push
sti
push
fildl
adc
lcall
push
jne
fsubrs
sub
xchg
sub
int3
lock
add
push
mov
push
push
jb
sbb
dec
push
lea
xchg
sub
jmp
jg
mov
out
lock
or
cmp
or
test
sbb
aam
repnz
jnp
xor
aad
pop
pop
push
pusha
paddb
sarl
adc
dec
aad
test
scas
xor
add
pop
bound
in
sti
push
mov
lock
cmp
andb
cmp
dec
xlat
mov
xchg
sub
int
and
xor
mov
aam
xchg
push
fbstp
pop
mov
cmpsb
push
enter
mov
insb
adcb
loope
repnz
xor
ljmp
les
xchg
ss
mov
mov
dec
inc
xlat
inc
imul
ret
fwait
call
mov
jbe
aaa
jmp
fstps
in
pusha
in
shrl
outsl
cli
and
jmp
xor
cmp
cmp
lds
or
pop
sbb
push
std
push
out
stos
lock
mov
push
lahf
sti
mov
orb
push
push
test
mov
call
sbb
sub
aaa
fidivrl
push
jns
test
mov
enter
jbe
out
xchg
inc
xlat
inc
mov
sbb
aaa
jns
sub
sub
fistl
js
mov
cmpsl
push
jle
mov
or
jmp
mov
or
pop
dec
bound
fpatan
data16
inc
lahf
or
inc
cs
cld
mov
test
xchg
pop
popf
into
mov
iret
add
dec
aad
and
js
cltd
sub
icebp
mov
fs
xchg
stos
hlt
adc
aad
movsb
xchg
add
xor
lret
fwait
add
fists
out
testl
out
stc
dec
mov
lea
pop
push
xchg
mov
adc
mov
aam
add
lahf
add
adc
lret
in
xchg
imul
lahf
popa
int
daa
incl
xor
hlt
loopne
mov
dec
sub
xor
test
rclb
or
xchg
mov
pusha
insb
rorl
iret
mov
dec
lret
repz
mov
std
pop
mov
cmc
jae
mov
cmp
xchg
repz
test
adc
push
push
pop
mov
jb
aad
pusha
or
mov
mov
inc
loopne
fisttpl
jg
nop
sub
push
cltd
or
mulb
int
sub
push
dec
test
pop
fildll
jno
add
sub
sub
xchg
or
push
out
xor
inc
add
fwait
push
xchg
in
stos
adc
mov
movsb
mov
fnstcw
xor
push
fnsave
cmpsl
mov
sarl
push
xchg
mov
adc
cwtl
imul
add
mov
cmc
mov
addr16
test
nop
dec
cmpl
jb
push
movsb
scas
cmp
out
mov
mov
push
jns
test
push
fcmovne
loopne
jo
push
stos
inc
xchg
dec
dec
icebp
cltd
push
xlat
out
xlat
aas
scas
xchg
mov
pusha
dec
mov
aas
adcl
mov
sbb
das
dec
mov
insl
inc
subb
test
xchg
push
aad
jae
jo
gs
xchg
sub
sub
dec
pop
cmc
jnp
xchg
add
jl
cltd
pop
push
leave
push
xor
push
cmpb
push
and
bound
and
sub
sub
pop
data16
sub
std
cld
cmpsl
scas
xchg
mov
pop
mov
icebp
inc
pushf
xor
and
mov
dec
pop
sbb
lea
and
and
stos
add
cld
pop
xchg
icebp
or
adc
xchg
cwtl
sbb
movsl
mov
push
sub
sbb
fwait
dec
sti
mov
cltd
mov
call
fcmovb
scas
inc
mov
sahf
xor
lods
out
lret
inc
data16
fisubrl
arpl
cmp
test
mov
clc
jge
xor
jecxz
fmuls
sarb
mov
jl
add
cmpsb
xchg
in
xlat
inc
jge
push
inc
rcrl
cmp
mov
loope
fucom
mov
loop
loopne
sbb
mov
xchg
pop
filds
xchg
sbb
xchg
and
aaa
xor
mov
add
cli
jne
scas
arpl
and
fcoms
xor
fidivs
lret
hlt
insb
add
lock
out
mov
jmp
ljmp
cmp
out
lea
shrl
inc
inc
loopne
popl
mov
arpl
xorb
ds
mov
cmp
xor
lahf
push
test
arpl
rcrb
sub
xchg
sub
repz
mov
sti
jae
push
jmp
shrl
cmp
aam
lahf
and
xchg
es
jg
movsb
push
xchg
scas
insb
out
sbb
and
adc
pop
push
jbe
pop
test
mov
mov
movsb
shrl
pop
mov
push
xor
andl
outsl
and
loopne
aam
shrl
pop
fwait
rorb
push
std
lcall
mov
sub
pop
cmp
or
fnsave
cmp
scas
mov
ret
imul
xchg
shrb
sub
lea
jb
out
pop
cmp
fmul
xor
jg
test
stos
add
push
leave
push
ret
movl
aas
aas
push
jno
cld
fwait
sub
jmp
cmpsb
ret
xlat
repz
pop
shll
fwait
test
icebp
cmp
mov
aas
lret
inc
adc
out
movsb
mov
aad
sub
mov
cmp
out
xchg
mov
jo
adc
outsl
lahf
lret
bound
test
xchg
mov
mov
and
sbb
repz
movsl
cmp
dec
inc
pop
mov
dec
ficomps
and
or
jb
aaa
in
xchg
add
push
sti
xchg
test
push
in
ret
cs
push
push
movl
jns
adc
test
mov
fs
movsl
mov
ret
movsl
xchg
inc
inc
enter
push
je
fstpt
dec
mov
test
mov
test
cld
and
jo
pop
lock
scas
push
je
loop
add
mov
adc
stc
out
popf
xor
mov
cmp
add
aam
je
cltd
std
lods
stos
testb
lret
dec
add
sbb
lcall
xchg
add
lret
mov
lock
lret
lret
lret
popa
push
inc
inc
js
inc
push
lret
test
cmpsb
mov
add
jp
ja
cmp
cmp
jp
fbstp
subl
std
stc
and
and
xor
rorb
and
or
inc
jmp
popa
scas
iret
add
lret
mov
push
out
add
stc
iret
insb
scas
hlt
test
cltd
add
xor
inc
fucomi
pop
std
cs
cmp
cmpsl
stos
pop
stos
mov
cmp
scas
sbb
scas
lea
inc
aas
nop
sbb
pop
jnp
or
dec
loopne
mov
jnp
sub
jge
ret
test
cmp
xchg
mov
mov
inc
or
test
mov
push
pop
lds
mov
mov
aad
pop
nop
jae
adc
outsb
int
sbb
xchg
popa
cltd
lods
sbb
rolb
cmp
sub
mov
es
mov
push
and
aaa
fisubs
push
jecxz
push
push
popf
mov
cmpsl
add
dec
push
and
sbb
dec
lods
sbb
push
das
lods
fs
fcoml
mov
ljmp
lcall
pop
jbe
stc
lret
xchg
push
sub
imul
movsb
sbb
ja
in
nop
push
packsswb
push
inc
js
nop
seta
jnp
notb
xor
adc
int
cmpsl
push
insb
push
je
ja
jl
dec
test
jge
add
add
push
push
add
es
adc
mov
out
adcb
fdivl
push
or
pop
mov
add
lods
mov
xchg
inc
lods
shll
xchg
inc
pusha
mulb
mov
rorb
mov
es
dec
and
or
mov
lcall
and
jecxz
cmc
in
or
push
nop
fwait
xor
jne
dec
shll
cmp
xor
and
push
roll
mov
pop
xchg
mov
mov
dec
rcll
dec
stc
dec
testb
enter
lret
in
adc
mov
adc
sbb
repz
adcl
sbb
xor
popa
scas
aaa
adc
gs
add
ffree
pop
andb
idiv
pop
pop
push
inc
sub
sbb
adc
sub
sbb
add
xor
mov
outsl
fldenv
iret
add
adc
add
scas
int3
push
aad
movzbl
jg
jmp
push
dec
mov
mov
ret
outsb
mov
cmp
xchg
push
or
dec
push
pop
add
mov
or
pushf
pop
lea
in
dec
lahf
adcl
inc
dec
scas
jge
pop
jecxz
mov
jle
sti
sub
fidivs
push
adc
les
and
inc
or
push
pop
aaa
fstpt
sbb
inc
arpl
andb
add
mov
xor
pop
mov
pop
dec
fwait
xchg
sub
je
sub
mov
les
dec
lea
pop
ret
fnstcw
add
and
lea
push
outsb
pop
cs
fstps
std
xchg
fdivr
pop
inc
mov
sbb
les
fbstp
mov
jecxz
mov
mov
cmp
aam
mov
cmpb
subl
lea
push
outsl
subl
shlb
sbb
popf
mov
pop
dec
icebp
or
stos
shrb
rorl
add
sub
push
inc
adc
adc
imul
xchg
popf
lods
ret
cmp
addr16
cs
out
ljmp
xor
in
pop
dec
adc
test
in
mulb
cli
scas
sub
leave
scas
test
push
push
inc
popf
mov
mov
outsl
xchg
dec
pop
out
aas
subb
hlt
adc
mov
push
inc
hlt
dec
jno
inc
aas
pusha
arpl
int
rcr
cs
pop
pusha
adc
xchg
mov
pop
dec
adc
sbb
adc
jb
jno
cmp
pop
es
decb
ret
stos
xor
mov
push
xchg
and
je
xor
out
insl
cltd
stos
mov
or
xchg
fsubrl
aas
pushf
xor
bound
xchg
or
mov
insb
fbstp
fsubs
jg
cmpsb
dec
add
ss
lods
xorl
or
mov
fwait
xor
jge
pop
stc
mov
jp
fstps
jle
iret
inc
jmp
mov
mov
pop
shlb
test
and
push
lods
add
mov
dec
push
in
lret
sub
js
jnp
in
pop
mov
push
add
iret
aas
jp
mov
mov
in
pop
psubusb
push
jge
inc
scas
arpl
cwtl
sub
xorb
dec
test
testl
jns
imul
idiv
push
icebp
mov
adc
stos
sub
movsb
mov
jmp
insl
push
dec
adcb
std
mov
shl
lds
or
stos
jb
push
sub
insb
xor
js
push
fucomi
xchg
sbb
insl
daa
or
dec
rclb
pop
mov
xchg
adc
pop
out
inc
cwtl
push
mov
xchg
jge
test
or
jae
bnd
add
mov
rorl
mov
or
jle
imul
dec
adc
add
and
xchg
xor
mov
lahf
nop
push
shrl
gs
push
mov
popf
arpl
mov
lods
inc
pop
test
lret
cmpsl
jp
stc
js
jo
jge
or
pop
cmc
mov
ficoms
mov
ss
push
pop
cmp
movsl
dec
or
shrb
int
in
inc
js
adc
pop
jecxz
jns
repz
in
or
les
jge
mov
pop
addr16
xchg
sub
mov
adc
xor
in
ret
cmp
insl
push
add
incl
cmpsb
inc
add
fisttpl
int
jo
je
addl
lret
mov
mov
test
inc
xchg
lahf
test
in
mov
pop
dec
xchg
test
mov
lea
push
les
inc
adc
mov
insb
aaa
ja
outsl
cmp
hlt
outsl
leave
rolb
in
mov
pop
sub
add
loop
int
sbb
mov
add
shll
inc
sbb
push
jne
loope
pushf
sbbb
mov
aas
loopne
sbb
loopne
js
call
int
popa
or
xchg
imul
popf
mov
mov
xchg
xor
lea
sar
mov
xchg
icebp
sbb
std
cmc
mov
addr16
xchg
cltd
enter
bound
mov
mov
dec
lock
cmp
inc
push
dec
pop
sub
mov
movsl
fninit
in
cld
xor
popa
and
xor
fisubl
aad
mov
push
bnd
pop
insb
sbb
dec
or
xor
sbb
or
std
push
out
cmp
pop
test
stc
shlb
lods
in
test
mov
fdivrp
inc
std
pusha
imul
in
xchg
aaa
dec
dec
gs
mov
add
mov
cmp
rol
pop
inc
xor
shl
mov
xor
clc
push
in
sub
in
jg
cli
nop
fmull
sbb
mov
cmp
adc
push
pushf
cmp
mov
push
cwtl
xchg
mov
movsb
cmp
lods
jo
fwait
ds
movsl
lret
bound
xor
mov
adc
fldenv
int
es
mov
jnp
pop
and
xchg
scas
inc
mov
lods
xor
mov
xor
scas
or
stos
dec
jns
leave
ja
lea
push
mov
jae
scas
in
push
ret
clc
test
adc
loope
fmul
loop
adc
ds
rcl
jo
xlat
pusha
dec
aam
je
ret
fs
xchg
push
xchg
add
lea
pop
push
xchg
dec
popf
or
mov
imul
sub
pcmpgtb
aas
push
test
pusha
out
xchg
shl
pop
test
mov
add
imul
xchg
pop
push
ficoml
scas
pushf
push
pop
aas
dec
jl
js
sub
test
and
bound
jb
cs
cs
push
mull
cmc
xorb
ret
or
inc
fsub
lds
mov
fdivl
loope
lret
jns
push
pop
xor
inc
vsqrtpd
or
push
or
sub
sarl
bound
mov
mov
mov
cltd
jb
mov
cld
pop
xor
jo
cmp
or
int3
mov
sbb
adc
filds
inc
xor
xor
andb
insl
loop
add
outsb
out
imul
sbb
and
call
sub
jae
std
sub
in
test
mov
add
clc
push
mov
xorb
incl
mov
mov
xchg
addr16
xor
mov
mov
fs
mov
pop
jmp
sbb
int
sahf
gs
int3
jne
stc
movsl
xor
andb
adc
fnsave
xor
lcall
sbb
negb
push
jne
lcall
lcall
mov
int
scas
lea
lods
inc
aaa
fidivrl
push
dec
pop
mov
push
rol
daa
imul
or
cmp
add
leave
mov
fisttps
cltd
or
mov
mov
xor
mov
mov
pop
ljmp
cmpsb
sbb
out
cmpl
fnstcw
inc
xor
outsl
jns
loopne
scas
lcall
gs
mov
in
ja
jb
mov
dec
mov
sbb
adc
jo
fcmovnb
ret
fists
adcb
or
xchg
sub
xor
xchg
negb
fsubrp
leave
cmpsb
cmp
or
mov
add
inc
lret
xchg
pop
mov
mov
sbb
fdivrl
dec
repz
aas
inc
adc
sbbb
jle
ss
sbb
stos
sbb
inc
mov
mov
xchg
repz
rorl
mov
adc
fnsave
cs
and
pushf
data16
push
call
and
fwait
in
push
inc
int3
pop
movsl
sub
or
mov
jb
jmp
jae
outsl
and
gs
mov
sarl
xchg
mov
insb
inc
cltd
fdiv
stos
dec
mov
xchg
adc
cli
mulps
loope
cltd
dec
cld
jbe
arpl
aas
pop
mov
dec
pop
pop
cmp
test
in
push
mov
adc
loope
or
popf
or
inc
daa
test
mov
rcll
or
es
or
js
add
hlt
stos
fs
fbld
xchg
std
popa
xchg
pop
in
mov
sti
pop
sbbl
andb
dec
inc
xlat
add
out
std
shlb
notb
lea
xchg
pop
pop
push
shlb
jle
cld
jecxz
sbb
jle
add
dec
ret
jecxz
int3
push
and
sub
popf
ja
aaa
mov
cmpl
pushf
lcall
dec
sbb
and
push
into
hlt
int3
mov
or
into
fdiv
insw
jge
repz
dec
xchg
inc
cmp
scas
mov
lret
std
mov
inc
push
andb
nop
bts
pop
popl
pop
stos
cs
xor
jmp
dec
nop
push
in
mov
xchg
cmp
jo
call
push
dec
daa
mov
push
fisttpl
lahf
out
dec
or
push
lods
icebp
adc
outsl
pushf
ret
insl
cld
mov
push
neg
jbe
xchg
ret
outsb
pop
add
les
pop
or
cltd
cli
ror
js
dec
stos
adc
jno
fwait
arpl
xlat
sbbl
jb
int
psrld
lret
cld
sub
mov
mov
fdivr
pop
add
xor
push
or
sbb
dec
pop
dec
pop
ret
inc
scas
fadd
movsl
mov
mov
enter
cmp
and
cmpsb
divb
int
stc
cmp
mov
test
dec
lret
cld
imul
xchg
call
pop
lret
jb
bound
push
outsb
fcoml
negl
icebp
or
cmc
mov
nop
hlt
ja
xchg
mov
loope
es
loopne
cmpsl
orb
sub
push
add
xchg
fidivl
out
subb
outsb
test
cld
xchg
mov
pop
call
stc
dec
pop
hlt
sub
cld
aam
clc
dec
cmp
packsswb
add
adc
mov
pushf
xor
and
or
clc
sub
cmc
or
test
sbb
lds
xchg
cmp
add
and
adc
cmp
xor
or
rcrl
fmul
stos
stos
mov
pop
lret
cs
push
hlt
lods
inc
es
add
push
in
xchg
mov
scas
ret
aad
and
or
daa
jmp
jge
push
cmp
or
mov
sub
xchg
mov
jl
mov
popa
in
mov
mov
jp
xchg
mov
sbb
mov
sti
divb
sub
add
aam
sub
loope
mov
fcompl
mov
dec
dec
arpl
push
in
jb
xchg
loope
xchg
adc
push
js
jno
jno
or
test
or
shrl
and
pop
push
push
jno
mov
ljmp
fsubr
lahf
sbb
or
inc
test
inc
cmp
push
xor
pushf
push
inc
lock
shrl
push
lret
outsb
insb
jle
cs
or
inc
sahf
mov
cli
mov
mov
ret
aas
fstpl
es
aas
push
xor
inc
inc
mov
inc
and
push
je
in
mov
inc
mov
dec
in
shrl
push
sbb
adc
test
lods
sbb
idivl
mov
push
push
push
test
pop
les
pusha
call
mov
sbb
push
sub
dec
fldenv
sub
xchg
arpl
xor
idivl
push
sbb
push
jecxz
popf
add
mov
push
scas
mov
mov
test
testb
cmp
mov
or
rcrl
outsl
das
call
push
repz
sub
es
xchg
sbb
dec
mov
lret
sub
inc
or
outsb
push
mov
int
out
push
repnz
xchg
jecxz
jl
into
xor
in
bound
push
scas
pop
inc
push
mov
cmp
mov
dec
lret
pop
lret
mov
idivb
mov
incb
sub
push
dec
mov
cmp
cli
push
popa
ljmp
mov
cmc
jl
xlat
jno
lcall
or
sub
hlt
repz
xchg
outsb
inc
mov
xchg
or
adc
addr16
dec
cmp
mov
mov
bound
mov
rcl
cli
stc
push
cwtl
test
popf
adcl
js
mov
cli
enter
xchg
xor
sahf
mov
in
daa
lods
mov
cmpsl
xor
cmp
je
mov
push
sbb
in
mov
shlb
insl
inc
cmpsb
dec
into
call
lahf
and
push
sarb
push
adc
out
das
jl
pop
and
sub
jge
outsl
iret
js
cld
and
testb
jnp
stos
stos
into
shrl
negl
es
sti
jbe
adc
xchg
sub
or
sub
rclb
dec
fs
jne
xor
jbe
ja
insl
cmpsb
dec
loope
mov
inc
mov
or
ss
mov
js
pop
pusha
dec
cltd
or
loopne
leave
sub
scas
xchg
sbb
jnp
testl
xchg
out
pop
sub
push
in
sub
out
sbb
aas
mov
jno
outsb
xor
pop
sub
adc
xorl
add
sbb
hlt
push
scas
rolb
cmc
les
adc
imul
push
in
cltd
mov
fwait
xor
and
mov
mov
insl
cs
xchg
out
cmc
aad
fcmovbe
or
xor
in
out
and
int3
ss
cwtl
pushf
dec
aam
and
lea
sbb
sbb
mov
xchg
inc
mov
sbb
adcb
pushf
push
or
jmp
insl
rolb
inc
fidivrl
sub
pop
pop
jns
imul
cmpsb
mov
cltd
push
add
adc
xchg
inc
push
push
movsb
adc
hlt
mov
stos
push
mov
add
pop
dec
cmc
movsb
stc
neg
and
xchg
dec
popa
cmp
mov
loop
add
pop
mov
dec
rcll
push
pushf
push
mov
fidivrl
sti
xor
insl
pushf
ljmp
sahf
shll
les
fnstenv
lret
outsl
push
scas
adc
or
or
cs
cmc
cltd
movsl
jne
out
clc
or
or
pop
movl
dec
pop
jae
out
repnz
call
mov
mov
stos
leave
sbb
xlat
ret
jbe
sarl
out
cwtl
xor
and
fisubl
mov
jns
xchg
test
xchg
hlt
addr16
lcall
sarb
rol
push
out
adc
or
xchg
pusha
mov
pusha
xlat
ror
repnz
push
xor
pop
adc
mov
and
pop
push
dec
xor
xchg
mov
sbbl
out
sahf
ret
and
sbb
mov
xchg
in
in
lahf
adc
cmpsb
inc
jle
dec
shr
or
mov
mov
daa
outsl
cltd
rcrl
adc
mov
shl
ror
icebp
inc
push
lods
lds
test
push
cmp
hlt
add
cmp
mov
xlat
cmp
adc
mov
jae
pop
jo
xchg
ret
iret
mov
leave
or
xchg
jp
pop
out
push
movsb
scas
iret
adc
jbe
fisttpll
mov
aam
call
fisttpll
lock
addr16
jg
icebp
jge
or
sbb
hlt
addr16
aas
add
mov
stos
push
push
jnp
mov
daa
enter
repnz
shr
loopne
mov
dec
adc
adc
pop
aas
lods
push
repnz
pop
testb
test
mov
cli
mov
lds
push
xor
rolb
xchg
shr
gs
and
aaa
mov
stos
es
lods
inc
insl
cmp
push
je
daa
jno
jg
ja
movsl
mov
int
mov
jle
pop
sub
decl
test
jae
pop
and
push
push
push
sub
and
lods
or
das
sbb
pshufw
mov
inc
add
test
and
imulb
pop
clc
mov
pop
outsl
xor
loopne
inc
scas
mull
jae
dec
sbb
or
jns
cmpsl
push
icebp
in
xor
adc
adc
mov
dec
popf
in
add
jne
jnp
stos
es
sub
movsb
outsb
add
or
jmp
dec
stc
std
cmp
xchg
fs
aam
imul
push
incb
pop
cmp
mov
dec
ds
lds
mov
andps
fisttpl
stc
cmp
push
out
xchg
es
adc
je
stos
lret
out
mov
lds
negb
lods
leave
mov
xor
stos
mov
or
int
lods
adc
cmpsb
mov
cli
fxch
jno
adc
mov
cmpsl
xlat
je
hlt
movsb
adc
pusha
add
sub
sub
cwtl
jae
jno
rclb
fisubs
and
mov
push
test
adc
xchg
fucomi
or
into
cmp
ret
pusha
dec
mov
loope
or
subb
loopne
movsb
pop
fisttpl
negl
mov
clc
sbb
jnp
mov
lock
xchg
inc
pusha
enter
dec
or
pop
cmp
int
jne
in
adcl
loope
popf
adc
dec
out
push
jmp
in
fidivl
adc
pop
lock
mov
out
loop
in
inc
xor
stos
and
mov
js
imul
dec
sbb
push
je
jnp
inc
xor
cmpb
xchg
mov
mov
adc
xchg
inc
or
sbb
aam
lods
mov
in
aaa
pop
adc
mov
add
xchg
pop
jb
ds
outsb
fstl
ss
outsl
push
or
pop
push
dec
pop
arpl
jge
scas
repnz
xchg
add
and
ss
cmpsl
dec
dec
xchg
dec
mov
shll
or
push
push
test
cmp
adc
loop
cmpsl
ret
xor
sub
push
sub
inc
lods
mov
dec
cwtl
and
insb
in
dec
dec
pop
mov
dec
jge
cmpsb
and
pop
or
or
jne
push
mov
sti
inc
jb
in
cmc
std
pop
daa
test
adc
incb
jns
fsub
jmp
adc
mov
xor
into
fidivl
inc
loopne
jbe
lahf
push
movsl
sbb
push
dec
ret
or
int
add
mov
loop
rep
inc
jge
je
fcompl
imul
mov
xor
in
add
ja
in
mov
ret
daa
xchg
xor
adcb
mov
push
push
sub
sub
test
mov
enter
dec
adc
in
das
repnz
inc
aas
ret
cmp
push
call
lahf
imulb
cmp
mov
ret
push
xchg
sahf
jae
sbb
lods
mov
imul
push
xchg
sahf
jno
ja
jp
jne
das
in
jp
push
insl
imul
jne
std
daa
and
out
andnps
ja
sbb
leave
xchg
nop
call
stc
mov
imul
aam
nop
ljmp
mov
sahf
and
inc
sbb
ljmp
or
mov
stos
cwtl
sub
push
fisubl
xchg
xor
inc
pop
cmc
jne
and
dec
mov
pop
popf
ret
mov
sbb
push
into
pushf
push
test
jecxz
cmpsb
leave
xchg
push
test
push
scas
push
test
cli
lret
sti
insl
jg
cmpsl
scas
dec
mov
test
int
sbb
pop
outsb
insl
xlat
in
or
cmp
aas
cmpsb
movl
rcrl
add
and
and
mov
je
xchg
shl
jo
enter
inc
shr
sub
mov
fstpl
in
mov
icebp
adc
jp
ret
inc
popa
daa
pop
lods
test
iret
and
int
rolb
arpl
jno
arpl
push
xchg
sub
lea
push
fdivrl
push
insl
lock
fwait
pop
cmpsb
push
mov
push
cmp
lcall
pop
mov
scas
xor
sub
add
lods
xor
xchg
xchg
int
mov
sbb
and
test
or
nop
into
jns
mov
lret
movl
mov
mov
pop
mov
xchg
arpl
in
test
hlt
fcomp
push
push
pushf
out
mov
sti
cmp
push
jmp
push
adc
xchg
loopne
aam
xchg
movsl
mov
lock
sub
push
inc
fsubrl
push
flds
cmpsl
cli
xor
mov
popa
adc
and
cmpsl
dec
aam
inc
push
xchg
cmc
xchg
mov
mov
or
pop
inc
sahf
std
mov
adcb
jmp
ljmp
adc
lods
xorps
in
ljmp
gs
mov
gs
shld
adc
inc
ficoms
pop
add
or
clc
xchg
cli
sti
mov
xchg
cmp
jae
push
sbb
gs
lret
sub
mull
dec
add
mov
ss
push
shl
incb
xor
ljmp
sub
sub
xchg
and
fisubs
add
rolb
sub
sarl
js
mov
mov
and
push
pop
and
aas
push
in
ljmp
xchg
mov
inc
add
int
fcmovu
mov
jmp
add
mov
loopne
addl
xchg
stos
cmpsl
out
sbb
nop
ss
jg
xor
inc
sahf
inc
in
dec
jge
jmpw
jmp
js
cmpsl
fsubr
add
roll
add
sub
cltd
lcall
jbe
push
popf
mov
mov
test
and
cmp
push
call
mov
jns
pop
das
push
fadds
aaa
mov
stos
mov
xor
mov
lret
sub
mov
dec
xor
out
gs
lea
scas
jbe
sbb
add
mulb
dec
sub
mov
sub
dec
in
ja
jl
gs
hlt
mov
leave
inc
mov
fwait
cli
cmp
clc
outsl
inc
xlat
dec
cmp
repnz
daa
lcall
inc
fs
addr16
inc
dec
adc
sub
fists
je
sbb
shlb
or
fcompl
push
push
decb
insb
lds
dec
ja
mov
jg
fnstenv
push
in
jno
inc
pop
xor
lret
das
fsubl
sbb
and
mov
jp
xchg
push
jo
push
std
js
mov
test
fisubs
lock
mov
enter
inc
inc
inc
cmc
cwtl
dec
inc
fdivl
xchg
jl
push
push
arpl
gs
int3
xor
and
in
fstl
push
popf
js
pop
rorb
rcr
jbe
rolb
inc
xchg
std
pop
and
and
imul
or
or
outsb
stc
pop
cmp
scas
rcll
push
lcall
outsl
cld
shrl
add
add
pushf
in
xchg
cmp
ljmp
mov
jmp
pop
insl
xor
rorb
arpl
push
insl
and
and
data16
add
outsb
rcll
insb
js
sbb
mov
fistps
outsl
mov
adc
js
gs
test
ret
xor
lea
dec
cmpsl
cmc
scas
jge
or
loopne
mov
int
mov
shll
gs
int
mov
push
or
in
jb
leave
and
xchg
lahf
jb
pop
xchg
cltd
fucom
cli
cmp
adc
shrb
ja
inc
add
add
ret
out
imull
insb
sbb
pop
cmp
xlat
je
push
or
pop
das
shlb
or
mov
xor
jb
add
xchg
rol
mov
mov
arpl
jae
lahf
cmp
jno
add
sahf
scas
sub
pop
out
dec
dec
pushf
notl
mov
mul
repnz
pusha
and
pop
in
std
mov
cmp
cmp
mov
sbb
aad
insb
cmp
push
inc
gs
ja
lea
xchg
insb
mov
pop
repz
ror
or
jns
jecxz
jp
mov
xchg
mov
sbb
enter
sub
cli
mov
iret
or
cmp
inc
xchg
cmp
push
popf
xchg
cmp
sub
mov
mov
daa
cmp
cld
xchg
jmp
lods
pop
adc
jb
jmp
xchg
dec
inc
cli
jne,pn
pusha
fcomip
lea
xor
in
and
push
adc
int
iret
push
push
jo
mov
fists
jno
cmp
sub
push
sub
sahf
int3
lods
sub
loop
inc
adc
mov
stos
fildll
das
dec
into
pusha
dec
data16
xor
sub
fnstcw
out
addl
fs
loopne
ljmp
inc
push
loop
ja
fidivrs
xor
rcll
sub
ret
inc
push
xor
fwait
dec
sti
js
mov
mov
jg
arpl
imul
sbb
pop
movsb
test
lea
jle
pop
cmp
sub
cmp
push
push
pusha
mov
andl
mov
faddl
jp
arpl
stos
xchg
sbb
jne
repnz
mov
fnstenv
jge
jg
out
test
test
mov
nop
daa
ljmp
andb
fidivs
push
mov
bnd
jecxz
xor
or
mov
loope
mov
rcrb
xchg
push
sti
andb
pop
jl
inc
arpl
or
mov
mov
shl
push
xchg
mov
aad
imul
cld
cmp
and
outsl
sbb
repz
push
inc
xor
jb
mov
cmc
dec
insb
sub
jns
movsl
push
lea
lea
dec
js
ret
nop
push
or
sub
jl
push
fiaddl
movsl
dec
and
sub
xchg
into
sahf
sbb
xchg
pop
sbb
jb
aad
jecxz
in
mov
arpl
dec
sbb
dec
in
xchg
jns
dec
dec
imul
gs
jp
aam
dec
in
and
push
jp
loopne
cltd
cmpsl
xor
lds
dec
or
and
pop
push
cmp
iret
or
rcll
cld
pop
inc
hlt
stos
es
xchg
imul
js
mov
jmp
mov
test
pusha
fcmovb
sbb
or
lods
mov
mov
jns
out
mov
push
hlt
xchg
adc
iret
add
add
push
mov
mov
pop
mov
fucom
mov
cmc
je
fistps
outsb
rol
int3
das
test
and
into
xchg
mov
pusha
iret
mov
mulb
and
aad
mov
aas
push
mov
loop
xor
jecxz
pop
sub
cwtl
fnstcw
hlt
mov
leave
sub
inc
jge
inc
push
mov
push
adc
xor
dec
sti
mov
jno
aas
cmp
dec
fucomi
call
in
test
out
xchg
and
sahf
push
cmpsl
sbb
setl
mov
sbb
out
xchg
xor
push
mov
cmp
dec
shlb
insl
push
push
push
or
push
or
in
das
repnz
push
xchg
mov
sub
ret
in
repz
mov
adc
shll
xor
mov
adc
add
addr16
sub
pop
push
repnz
adc
lcall
jmp
mov
jmp
roll
rcrl
jge
rcrl
cli
pop
sbb
adc
shrl
sbb
push
aas
loopne
adcl
mov
xor
call
mov
daa
jbe
out
cld
mov
mov
cli
aas
lcall
into
stos
sbb
xchg
jle
mov
daa
fidivrs
xchg
fnstenv
into
das
inc
add
lods
outsl
dec
sbb
pop
loopne
jmp
sbb
in
cwtl
or
shrb
fdivl
or
fsubr
shrl
fildll
jno
lock
adc
jp
or
lock
cli
and
inc
mov
les
inc
pop
sbb
sarb
out
clc
and
mov
insb
pop
xor
push
adc
out
mov
loope
stos
pop
cmp
aaa
adc
dec
sub
insl
pop
inc
dec
shr
push
js
jmp
adc
hlt
cld
and
push
mov
jecxz
mov
sbbl
test
hlt
sbb
inc
push
mov
lret
inc
les
jo
aam
dec
xchg
outsb
std
and
mov
das
jbe
sub
lret
pop
sahf
hlt
andb
std
imull
sarb
out
adc
fwait
dec
and
xor
jg
sbb
stos
mov
fsubl
fstpl
mov
pop
test
pop
popf
push
insb
cmc
rorb
adc
sub
inc
imul
pop
xor
daa
out
xchg
pop
test
or
lcall
jl
dec
out
push
mov
sar
adc
shlb
shll
cld
imul
cltd
mov
push
push
sbbb
ret
mov
movsl
dec
or
sub
mov
and
push
sbb
sub
out
cmovns
ret
out
pop
jb
and
jmp
or
lods
subb
push
xlat
cli
jecxz
sub
ficompl
or
dec
fstl
test
dec
xlat
arpl
lret
dec
popa
add
xlat
pushf
cmp
mov
sbb
pop
sbb
fildll
int
push
cmp
daa
es
pusha
or
xchg
testl
and
dec
fwait
test
divb
repz
jecxz
pop
xor
xlat
dec
scas
or
std
inc
adcb
aad
xchg
sbb
mov
adc
sysret
je
mov
int3
dec
cmc
test
xchg
nop
cmc
cmp
dec
les
pusha
jne
imul
pop
add
dec
mov
dec
mov
sub
push
gs
es
jecxz
jne
sbb
adc
pop
sub
dec
dec
push
call
je
out
xchg
fcmovnbe
fiaddl
inc
sahf
mov
cmc
lea
cmp
xchg
sahf
in
or
int
sub
or
xchg
cld
sub
sbb
adc
mov
fadds
mov
mov
es
mov
xchg
cltd
dec
imul
mov
and
jge
daa
leave
leave
mov
xor
sub
xchg
push
mov
pop
repnz
pop
sbb
pop
ret
imul
inc
movsb
in
mov
movsb
ja
push
test
ss
adc
cmp
dec
xlat
daa
repnz
fcom
inc
lea
xor
sub
inc
test
jmp
dec
add
xchg
mov
or
mov
je
scas
jmp
and
and
mov
pop
flds
inc
cmp
or
fdivl
repz
iret
or
add
mov
xchg
adc
fisubs
dec
or
cmp
ret
jle
push
leave
mov
data16
mov
mov
pushf
hlt
dec
mov
mov
rcrl
inc
jmp
jle
sub
inc
push
js
daa
in
sub
cmpl
mov
fidivrs
cld
cld
movsl
inc
push
push
in
mov
cmc
pop
dec
add
fs
addr16
je
std
rclb
xchg
adc
jge
call
or
cmp
bound
cld
xchg
push
xchg
xor
mov
test
cmp
push
push
int3
dec
push
mov
inc
ljmp
mov
xor
dec
loopne
adc
inc
aas
push
jo
int3
cwtl
fs
adc
iret
stos
ret
pop
add
mov
jb
push
jmp
inc
out
xchg
xor
fldenv
cltd
and
xchg
lods
push
add
imull
dec
lea
push
adc
into
idivl
add
into
jno
ss
and
push
mov
or
cmp
dec
data16
jl
std
push
shrb
jne
xchg
stos
sub
mov
xchg
fmull
loope
pop
mov
rorl
bound
mov
or
cmpb
aam
mov
xor
mov
dec
adc
das
imul
dec
xchg
mov
enter
push
pop
jge
xchg
aas
jbe
jno
pop
enter
cmpsb
or
rol
mov
sub
xchg
xlat
cmp
push
sbb
inc
jo
mov
xchg
imul
add
push
ljmp
mov
sub
stos
mov
aas
sub
sub
bound
jg
scas
mov
iret
pop
xchg
incb
add
push
pop
leave
rol
pop
mov
ret
xchg
repnz
pop
sub
dec
enter
pop
outsb
push
mov
xchg
cwtl
push
xchg
addr16
daa
mov
xlat
jmp
push
lock
sti
bswap
mov
iret
imul
jb
movsb
call
xchg
test
sub
mov
sbb
inc
lret
and
or
testb
ret
jle
cs
stc
adcl
subb
pusha
ret
jns
icebp
leave
mov
mov
mov
add
inc
inc
shll
mov
in
insl
ret
cmp
push
outsl
push
cmpsb
cmp
cmc
or
pushf
cmp
inc
sbb
in
mov
repnz
xor
dec
sbb
xor
or
push
inc
aaa
sub
rorb
sbb
mov
cltd
mov
test
mov
js
imul
sbb
sub
insl
jnp
sub
xor
scas
mov
push
dec
imul
cmpsb
mov
pop
dec
int
movsb
pop
adc
inc
and
pop
sbb
into
jb
test
push
sar
inc
fldenv
pusha
fistl
mov
test
aad
dec
inc
push
sbb
jl
or
scas
xchg
test
fwait
je
xor
jecxz
mov
push
es
xchg
adc
hlt
jne
pop
sub
push
scas
inc
insl
int
stos
dec
xor
cmp
aad
or
mov
shlb
push
fxch
sbb
rorb
mov
push
outsl
dec
add
jg
jb
xchg
jl
inc
sub
shl
repnz
jbe
cmp
sbb
sti
sub
and
jle
gs
mov
nop
arpl
mov
into
ja
mov
add
mov
fldt
jecxz
insl
loopne
nop
sarb
aaa
outsb
lret
sub
push
and
jns
jne
push
lcall
xor
push
lahf
push
movsb
insl
cmp
xlat
adc
stos
nop
jg
sbb
and
lock
pop
xchg
sbb
ficomps
fimuls
std
sbbl
xor
mov
lahf
scas
scas
or
stc
fldenv
outsl
or
scas
sub
inc
sub
dec
dec
outsb
sbbl
lock
inc
ja
mov
mov
xor
sub
inc
mov
adc
push
mov
sub
insl
and
mov
lock
mov
aam
les
popf
cmp
incl
adcb
inc
pop
bound
lret
andb
popa
jp
fisubl
std
pop
jae
stos
fidivl
gs
mov
inc
jmp
lcall
and
out
in
xchg
xor
jecxz
repz
lahf
mov
cmpsl
mov
pop
lds
imul
popf
leave
loope
mov
and
test
rorl
test
jp
sub
xchg
jle
push
mov
inc
arpl
sar
push
imul
sbb
aas
in
xchg
or
cmp
cld
adc
jecxz
and
pop
cmpsb
adcl
sbb
js
adc
into
sub
pop
cmp
jmp
or
mov
pop
cmc
loope
adc
ret
mov
sbb
sub
dec
mov
push
pop
cmpsl
fcoms
sub
or
fs
push
fwait
popa
int
dec
scas
xor
pusha
jo
int
cwtl
dec
fmuls
cmpsl
or
pusha
ljmp
out
dec
cmpsb
jg
fld1
movsb
jl
out
lods
lds
push
xor
aaa
das
fisubl
fs
mov
jmp
sbb
and
or
js
sbb
out
cmp
dec
or
mov
int3
sahf
or
jbe
mov
aaa
ficompl
sbbl
mov
adc
sub
mov
push
mov
and
mov
xchg
sbb
mov
cmc
inc
cmpl
stos
jl
popf
ss
inc
ljmp
scas
jne
xorl
and
xchg
mov
dec
leave
fsts
aam
mov
hlt
test
cmp
xchg
jae
pop
cmp
or
pop
push
mov
push
hlt
addr16
cmp
adc
movsb
repnz
cmp
das
test
lods
inc
insb
mov
lret
je
or
outsb
rorb
mov
inc
mov
icebp
enter
sbb
sti
pop
outsb
pusha
in
clc
cmpsl
sbb
xchg
and
outsl
xchg
inc
mov
push
inc
and
test
roll
cmp
mov
add
jb
cmp
push
mov
inc
pusha
movsb
aaa
push
out
sbb
lock
xchg
aad
notb
dec
loopne
outsl
adc
add
or
std
int
mov
lods
jo
push
loope
or
add
test
sub
jne
outsl
jecxz
loope
stc
loopne
add
jno
cmp
cmpsl
pop
inc
adc
add
jle
fcompl
or
xorb
jns
mov
in
push
in
push
sbb
lock
cmp
orl
test
scas
mov
iret
das
movb
dec
cli
adc
dec
and
mov
shll
and
rorb
mov
ret
scas
mov
pop
out
mov
sahf
or
adc
and
aas
pop
mov
adc
or
xchg
shl
cmp
out
dec
mov
sbb
dec
inc
add
js
and
cltd
sub
inc
repz
cmpb
pop
into
popa
fwait
xchg
add
xchg
lods
pop
cmp
mov
xchg
pop
repnz
mov
repnz
jne
pop
in
mov
cwtl
sbb
push
inc
movsb
call
lods
addl
stos
cmp
into
mov
cmp
cld
pop
insb
jmp
cmp
xor
pushf
lods
cli
mov
pusha
dec
lock
and
push
movsb
ja
xor
mov
mov
je
sbb
pop
lds
test
test
das
mov
cwtl
lods
mov
xchg
fiaddl
cmpsb
stc
mov
scas
call
cmp
mov
fbld
inc
xlat
jnp
xor
add
lock
sub
cmc
in
pushf
jns
mov
cli
xchg
mov
loope
jge
daa
jl
cmpsl
cmp
insb
out
cld
push
aad
xor
in
add
jge
adc
inc
dec
mov
xchg
in
lock
cmp
xor
sahf
lock
sbb
cld
lock
push
nop
mov
idivb
xchg
out
mov
mov
adc
test
xchg
mov
sub
lods
xchg
ljmp
jbe
pop
outsb
fdivrl
cwtl
jmp
mov
pop
mov
jge
mov
das
inc
inc
push
repnz
mov
mov
adc
je
ss
push
int
pop
imull
sub
lcall
mov
and
lock
jmp
stos
xchg
daa
ja
mov
ficoml
shll
fistpl
stc
mov
sub
sub
lahf
push
mov
std
mov
in
inc
call
xorl
fcmovne
jae
fildll
in
jle
dec
bound
imul
ret
aaa
jb
adc
mov
iret
out
je
and
daa
inc
in
cwtl
in
xchg
mov
mov
fisubrl
push
dec
xlat
push
mov
push
push
sub
lea
dec
ljmp
in
xchg
ror
bound
test
mov
or
dec
xor
jg
xchg
sub
call
mov
call
in
fimuls
sbb
lea
push
inc
loopne
nop
shll
fadds
jbe
popa
sub
in
decb
pop
add
iret
mov
rclb
outsb
shlb
shll
inc
jle
pop
scas
dec
rcll
in
mov
mov
sbb
mov
in
test
in
insl
fs
lcall
xor
push
push
sbb
xchg
scas
movl
test
add
clc
push
fstpl
pop
add
aam
sub
test
cwtl
imul
std
pop
mov
xorl
and
xchg
shll
mov
xor
call
jle
lock
pushf
lret
dec
dec
push
jb
ss
sub
dec
mov
inc
cmp
lock
xchg
dec
xchg
dec
fwait
cmp
sub
mov
ret
fcomi
flds
int3
cmp
pop
cld
call
cli
inc
pusha
lods
das
jb
or
mov
ja
dec
enter
ds
xor
adc
jecxz
nopl
sbb
jne
jb
stos
adc
and
xchg
adc
jnp
mov
rcr
insl
and
int
sbb
or
cwtl
dec
mov
xor
adc
pop
xchg
pushf
es
pop
dec
in
pop
test
mov
and
mov
jbe
std
cmp
xor
adc
stc
nop
push
in
movsl
adc
lods
outsl
mov
mov
dec
shrl
pop
call
cmp
mov
ret
or
sbb
push
sbb
mov
push
stos
jne
icebp
pusha
flds
call
sbb
lods
loop
push
jnp
xor
call
mov
pop
adc
fnsetpm(287
jecxz
push
std
insl
sub
sbb
jns
or
leave
sbb
dec
inc
jo
xor
cltd
testl
xlat
pop
fs
mov
jp
add
jp
mov
pop
cmpsl
xchg
in
xchg
inc
sub
mov
push
inc
pop
sub
orb
sbb
lock
loop
call
sbb
mov
pop
out
sarl
adc
inc
out
xchg
fucomip
jb
cld
lods
lahf
fbld
mov
fsubr
insb
sbb
add
or
out
cmp
and
mov
xchg
push
cmpsl
mov
ficoml
add
and
and
lcall
ljmp
and
rol
stos
inc
fs
int3
out
scas
in
fisubrs
lahf
gs
jae
sub
ljmp
jnp
inc
cmp
lock
mov
test
and
add
mov
mov
xor
insl
jge
xchg
mov
dec
and
jmp
push
cmp
or
test
rorl
xchg
stos
fs
jmp
fnstenv
sbbl
movsl
loope
xor
pop
or
cmp
fstpl
daa
jae
pop
sbb
mov
lods
fcompl
call
or
movsl
inc
push
ror
pop
mov
std
fbstp
insb
xor
lahf
adc
les
sbb
decl
cmc
nop
adc
fwait
dec
cli
stc
or
daa
xchg
mov
out
in
and
cmp
lds
push
out
adc
imul
mov
xor
adc
sbb
cmp
add
inc
in
and
mov
xor
mov
leave
dec
fildll
ret
jnp
gs
mov
or
jmp
push
seta
cmpsl
mov
push
add
in
iret
arpl
push
mov
pop
shl
or
loop
ret
shrb
push
sub
leave
shll
xchg
out
lds
negb
cld
pop
jg
cmpxchg
mov
ljmp
js
mov
movsl
mov
jg
shll
add
push
jae
je
test
outsb
cmpsl
sub
int3
mov
pop
mov
mov
test
jnp
jbe
out
test
mov
ss
neg
ret
fdivrp
jo
adc
shr
aad
sub
dec
xlat
std
lds
inc
and
xchg
jmp
pop
ss
cwtl
adc
enter
pushf
ret
adcb
xchg
cltd
mov
arpl
adcl
jo
or
add
xchg
arpl
jnp
jne
int
movsb
movsb
mov
jnp
jp
repz
add
sarl
inc
notb
in
or
movsb
mov
lret
nop
add
jb
loope
ret
xchg
pop
das
fadd
jae
int3
pop
jecxz
pop
sub
jnp
popf
lret
lahf
in
mov
subl
add
cli
cld
adc
mov
outsb
outsb
filds
or
fucomi
idivl
stos
mov
push
sub
sbb
stos
lahf
in
lods
jo
mov
inc
sub
mov
mov
movsb
mov
mov
test
arpl
mov
xchg
bound
pop
adc
sbb
leave
call
xlat
imul
adc
sti
inc
pop
iret
push
orl
mov
in
jp
lods
cmp
fwait
push
popf
mov
in
mov
lods
mov
inc
cmpsl
out
pop
fnstenv
cmp
das
xchg
mov
pop
repnz
pop
stc
cmp
add
mov
lcall
out
add
cmp
stos
pop
jns
dec
mov
sti
aas
pop
push
xor
sbbl
aad
mov
fwait
push
xchg
cmp
cld
jle
repz
sahf
fnstcw
cmp
push
lods
mov
mov
sbb
jo
iret
xor
xchg
mov
cs
rcl
mov
rcrl
cmp
and
jo
mov
imul
popf
pusha
ret
dec
rcl
xchg
dec
imul
adc
shll
shlb
shll
cmc
pusha
add
sbb
lahf
sbb
and
mov
pusha
push
mov
shlb
pushf
mov
imul
mov
pop
lahf
adc
inc
and
sti
sub
in
mov
push
je
dec
stc
xchg
adc
fldenv
ja
mov
repnz
xchg
jecxz
stc
dec
faddl
sbb
imul
jb
xor
xchg
adc
shl
test
and
outsl
lret
sbb
test
add
cs
fmulp
js
daa
mov
jnp
mov
cmc
jo
in
xchg
sub
pushf
inc
inc
sahf
mov
mov
das
inc
test
jmp
in
xchg
rorl
mov
fidivs
ds
inc
add
bound
out
leave
sbb
mov
xchg
cmpb
mov
fstpt
cmpsb
jne
sbb
test
or
jae
jmp
cli
push
sbb
pop
mulb
pop
or
xchg
or
fsub
jns
xor
mov
adc
arpl
imul
pop
sub
push
scas
sub
xlat
scas
inc
push
push
clc
fstpl
mov
or
sbb
mov
sarb
mov
loopne
mov
inc
sub
rcrl
pop
adc
call
inc
xchg
scas
jle
mov
mul
adcb
pop
mov
jge
rorl
sbb
or
nopl
mov
jb
cmp
imul
and
mov
xchg
call
fcomp
out
mov
rorb
incb
call
inc
push
sub
pop
push
sahf
cwtl
rcl
mov
outsb
mov
scas
les
cmp
dec
loopne
test
jecxz
push
fmul
sub
cld
sbb
mov
jbe
sub
into
scas
lcall
loope
clc
movsl
sub
ror
jno
or
dec
cltd
iret
lretw
outsl
jae
adc
dec
dec
je
push
adc
add
lret
lcall
jno
pushf
xor
shrl
loope
and
or
push
cmpsb
jnp
and
aas
fwait
push
ds
jl
xor
aaa
movsl
and
and
lea
mov
stos
jbe
xchg
mov
jp
ret
hlt
fs
bound
popf
inc
int
cwtl
lret
pop
punpckhbw
movsl
or
mov
cmp
std
je
insl
in
mov
mov
iret
fldt
test
adc
aas
icebp
sahf
cmp
xlat
pop
ss
mov
std
inc
insl
xor
xchg
push
inc
add
arpl
pop
pop
push
test
mov
loopne
mov
pop
adc
ds
xchg
mov
gs
stc
lock
add
xchg
int3
push
les
cwtl
sbb
lock
sbb
rol
jne
out
mov
xor
movsl
jl
add
mov
pop
add
inc
add
shrl
decb
mov
loope
std
lcall
mov
lret
cwtl
cs
xlat
aas
frstor
jge
pop
mov
sahf
jle
lret
jl
cmpsl
ficompl
icebp
adc
xchg
pop
sbb
fmuls
lahf
fnsave
das
lods
bound
jmp
jo
push
sub
inc
imul
adc
sub
sub
repnz
add
or
test
arpl
std
fs
aaa
test
mov
clc
nop
dec
pop
jbe
jae
mov
fwait
mov
and
mov
sbb
lds
add
or
add
jo
gs
je
cmpsb
testl
xchg
mov
fwait
mov
mov
fsub
push
fdivrp
mov
xor
mov
and
rcll
fbld
pop
es
mov
sti
xlat
inc
xchg
icebp
mov
sarb
js
popf
daa
jg
cmpsb
push
xchg
mov
gs
and
cli
or
cmp
sbb
dec
fdivrl
arpl
xchg
mov
sbb
mov
inc
into
ret
cmpl
imulb
hlt
cmpsb
push
xor
outsb
ret
cmp
sbb
jnp
or
xor
cmp
dec
jmp
test
sub
jne
cli
or
cmpsb
lret
cltd
bound
shll
adc
ret
push
cltd
ret
cmp
mov
sub
cmp
movl
jge
adcb
or
mov
inc
push
add
xor
fidivl
test
and
cmp
mov
test
lcall
rclb
sbb
js
sub
jb
scas
mov
push
cwtl
adc
sbb
or
mov
sub
push
leave
pusha
pushf
arpl
sbb
xor
repz
or
push
stc
lds
jae
jg
push
cmp
out
push
and
jg
out
test
cmp
and
mov
mov
das
test
cmc
pop
jb
add
fadds
insl
add
into
int
add
popa
repnz
test
jmp
dec
lock
add
dec
dec
loope
pop
jo
into
scas
push
leave
inc
mov
mov
shl
ret
hlt
rorl
dec
lods
aaa
enter
or
ja
leave
push
mov
mov
xchg
popa
jecxz
enter
sub
cmp
loopne
jne,pt
pop
out
sbb
mov
movsl
clc
rcll
xor
mov
dec
out
mov
or
xchg
rclb
daa
cwtl
xor
push
pusha
or
xchg
aam
imull
shl
mov
je
iret
roll
adc
test
aaa
xor
pop
ss
incb
fisubrl
fbstp
dec
push
inc
lods
les
shl
cwtl
lods
outsl
pop
aas
mov
xor
movsb
jmp
add
inc
jbe
ljmp
sub
fstl
fsubrs
je
mov
fsubrl
mov
gs
xor
mov
xor
jmp
cmp
push
jg
idivb
sub
push
es
jns
dec
inc
aad
je
push
push
outsb
pusha
push
repnz
test
test
in
xor
clc
adc
pop
imul
cmc
xor
neg
arpl
sahf
out
test
push
into
adc
sub
sbb
jno
mov
sbbl
neg
jmp
pushf
lret
jo
sbb
stos
cmp
cmp
shl
cltd
cmc
adc
push
inc
sbb
push
mov
lret
adc
jb
dec
imul
dec
in
lock
in
or
cmp
and
mov
mov
xchg
icebp
lods
add
mov
mov
sub
mov
jp
clc
ficompl
je
cmc
pusha
cmp
aaa
shl
dec
daa
or
aam
stc
add
sub
dec
pusha
gs
scas
cmp
jmp
fidivs
jmp
xchg
push
pop
stc
fnstenv
pop
imul
xchg
lods
dec
sbb
dec
or
arpl
cwtl
aas
mov
push
dec
and
sub
mov
xchg
shrl
lods
cmpsl
out
rorl
pop
movsl
test
lret
jns
sub
in
call
mov
pushf
xchg
into
iret
inc
lods
or
sub
cmp
adc
roll
xchg
cmp
sbb
push
jmp
lahf
daa
into
or
xchg
sub
or
jns
xor
mov
sarb
arpl
inc
cs
js
out
jl
mov
lds
mov
outsl
in
push
push
and
xchg
icebp
jg
jo
push
cltd
or
cmp
test
add
subl
test
mov
arpl
jnp
aad
out
test
ja
lret
pop
sbb
adc
or
mov
shlb
cmpb
lret
inc
test
sbb
enter
xor
stc
cmp
dec
mov
out
mov
mov
pop
jge
bound
leave
or
out
mov
pop
mov
dec
mov
imul
js
jle
inc
pop
adc
lret
sub
in
cmpsl
jbe
push
sub
rcrl
sub
inc
lret
jae
insb
fcmovne
test
in
lods
push
lods
inc
or
sub
aas
mov
je
cwtl
dec
or
or
stos
outsl
mov
adc
xor
push
cmpsb
lods
mov
rol
lcall
lods
ffree
jbe
and
insl
xor
xchg
hlt
cmp
nop
xchg
test
mov
xchg
outsb
push
sahf
shr
hlt
and
push
imul
sbb
cmp
dec
les
scas
aas
aaa
loop
push
adc
inc
and
data16
das
adc
pusha
imul
mov
clc
aam
fadds
cmp
inc
or
xchg
lods
out
pop
repz
mov
adc
mov
sbb
jg
js
popa
push
sahf
pop
out
aad
sbb
nop
pusha
cltd
xchg
inc
andl
sbb
dec
jle
dec
mov
xchg
rorl
lret
ror
mov
mov
mov
inc
adc
xchg
call
xchg
stc
jnp
daa
ja
inc
test
sbb
movsb
out
mov
dec
cmpsb
iret
xor
nop
pop
addr16
xlat
in
arpl
and
jns
fisttpl
adc
popa
inc
sub
adc
mov
loop
cltd
mov
inc
mov
movsl
mov
mov
rcrb
inc
push
call
mov
dec
sbb
jge
dec
cmp
xchg
pop
mov
test
addr16
and
ja
loopne
test
push
and
aas
push
or
adc
jbe
inc
into
movsb
outsl
cli
xchg
fbstp
sbb
sti
insl
in
push
ss
push
popf
loop
iret
push
mov
roll
popf
xor
scas
xchg
cmp
fdiv
aas
sbb
popf
shlb
mov
cmp
popf
into
fdivrl
push
xchg
mov
mov
sub
xchg
adcl
mov
fnstsw
cltd
jns
sub
cmp
dec
aad
and
push
mov
call
pop
lds
add
cmp
xchg
add
imull
dec
cmp
out
leave
sti
call
jo
or
sahf
cmp
out
bound
and
nop
lds
gs
pop
cli
pusha
dec
mov
mov
sbb
jne
mov
mov
out
popa
daa
sahf
and
outsb
push
mov
pusha
fidivrs
shll
cmp
aam
pusha
push
stos
ret
loope
scas
and
in
jmp
inc
fs
aad
jb
push
test
pop
push
adc
push
mov
pop
loope
and
push
xchg
mov
jo
or
imul
cmc
lea
pop
dec
lods
xchg
scas
movsb
xchg
mov
inc
push
mov
outsb
add
das
sub
or
dec
cmp
jne
fbld
rolb
enter
sbb
jno
pop
and
negb
negl
lock
mov
sub
cmp
pop
mov
sbb
addr16
out
mull
jle
icebp
or
pop
mov
xor
inc
cmp
and
adc
pop
or
enter
or
outsb
mov
jo
push
push
pop
mov
add
inc
inc
insl
mov
test
dec
leave
xchg
in
ljmp
add
mov
lahf
sarl
add
sbbb
nop
daa
flds
push
int3
sti
andl
mov
jbe
sbb
dec
out
cmp
pop
pushf
into
leave
imul
test
iret
inc
inc
push
jbe
shlb
or
xchg
je
mov
xlat
sub
sub
jne
aas
das
mov
jns
inc
das
repnz
hlt
inc
fcmove
orl
sbb
xchg
mov
pop
and
pop
push
mov
test
inc
add
xchg
data16
cwtl
xorl
rclb
mov
in
fwait
pop
push
inc
pop
ret
cmp
pop
cmp
movsb
mov
mov
mov
pop
pop
sub
lahf
es
xor
adc
lcall
jbe
or
in
jbe
add
dec
jbe
cmp
cwtl
add
in
int3
aaa
and
push
cwtl
gs
pop
jle
jl
imull
xchg
fiadds
lahf
or
test
imul
or
sub
in
repnz
es
ljmp
call
std
xchg
jbe
cwtl
out
xor
xchg
iret
cli
test
dec
popl
dec
push
leave
mov
cltd
sub
push
push
pop
mov
sbb
arpl
mov
sub
cmpsb
mov
cmp
cmpsl
xor
out
mov
jo
xchg
xor
aaa
pop
cwtl
lcall
mov
xor
bound
pop
mov
outsb
sbb
cltd
popa
lods
inc
and
mov
adc
ja
lret
clc
popa
jnp
scas
std
fbstp
cmp
sub
rcl
fsubs
pop
es
cld
jle
je
sbb
cwtl
jno
mov
push
sbb
in
adc
inc
in
push
decl
dec
pop
aas
adc
or
mov
adc
jno
mov
and
mov
outsb
jae
aad
cmp
loopne
dec
mov
sahf
hlt
xor
add
movb
inc
scas
pop
sub
pop
inc
xor
cs
setl
mov
add
sbbb
mov
push
in
ja
mov
xor
andl
imul
aam
pop
out
mov
add
sub
daa
stos
xor
inc
mov
test
mov
dec
mov
cmp
push
xor
aaa
mov
fsub
in
iret
xchg
int3
add
and
shlb
gs
mov
sahf
leave
insb
in
sub
rclb
repz
cmp
sahf
stos
xor
jmp
or
or
mov
stos
mov
into
dec
std
xchg
shr
dec
lock
mov
insl
in
add
loope
sub
fnstenv
pop
test
pop
leave
fsubrl
lock
icebp
int3
lahf
cmp
clc
sub
inc
arpl
cli
cli
pushf
xor
pop
jo
jge
out
cmp
fs
fsubs
pop
inc
fcmovu
ljmp
or
push
sub
popf
mov
test
ret
fcomi
clc
inc
fwait
mov
xor
fsubl
or
pop
dec
jg
cmc
sub
sahf
and
sub
pop
adc
clc
xchg
insb
pop
test
push
mov
lcall
js
dec
and
inc
lret
push
adc
movsl
and
fiaddl
in
sbb
mov
and
in
pop
sahf
sbb
stos
or
int
add
or
aas
gs
sbb
mov
mov
fldt
sub
inc
stos
xchg
imul
or
xchg
dec
and
xchg
int
iret
dec
cmpsl
inc
insl
loop
sub
pop
lock
dec
and
sub
pop
pop
loope
pushf
insb
sub
sub
mov
test
ret
sysexit
in
lock
xor
push
sbb
das
fldl
sbb
into
or
in
jmp
out
scas
inc
stc
adc
xchg
xchg
push
or
jnp
mov
add
xchg
jle
test
dec
jle
mov
mov
pop
inc
sbb
popa
cmc
cmp
mov
mov
or
mov
fnstsw
fwait
dec
fstpl
lds
mov
popa
jge
inc
push
int3
sbb
das
push
push
xor
or
mov
push
fadds
test
pop
jmp
enter
cmp
movsl
push
mov
jb
pop
cwtl
xor
mov
ret
cltd
inc
std
jne
xchg
cmp
lret
sub
addr16
push
mov
stos
addr16
popa
pop
subl
lods
dec
mov
jb
mov
sarb
push
andb
inc
lcall
push
stos
adc
gs
push
test
notb
xchg
mov
idivb
shll
jnp
test
rclb
cli
loop
movsl
jp
imul
inc
loop
in
mov
rcl
ss
add
jmp
fnstcw
xor
push
jno
inc
in
mov
std
test
ss
std
xchg
mov
ja
pop
rcpps
or
cmp
pop
cmp
xor
adc
mov
leave
jecxz
mov
roll
jae
push
movb
aas
cli
pusha
jno
cwtl
ds
sarb
lret
and
shrb
jno
arpl
stos
and
jl,pn
cmpl
ret
xor
scas
cld
and
jns
and
dec
adc
int
sub
fcmovbe
mov
xchg
add
sub
idiv
shl
dec
jecxz
xlat
adc
filds
aaa
dec
adc
adc
lods
leave
mov
push
int3
jo
mov
pop
loopne
punpcklwd
icebp
lret
mov
rorb
daa
add
mov
pop
sbb
andl
outsb
scas
gs
insl
adc
add
or
mov
xchg
inc
pop
sahf
jno
push
movsl
add
add
gs
ret
mov
jge,pt
xchg
insb
cmp
push
imul
xchg
pushf
stos
jbe
xor
xchg
subl
or
sti
imul
pop
cwtl
ret
mov
add
lds
dec
add
mov
inc
jmp
cmp
push
mov
cmp
cmpsb
movsb
outsl
and
cmp
testl
pop
sbb
dec
mov
mov
jle,pt
mov
inc
pushf
in
and
sarb
pop
jo
xor
sahf
shlb
sahf
gs
xor
mov
adc
movsl
push
sub
lcall
adc
test
push
add
cmpsl
ds
push
xchg
dec
pop
repnz
sub
jp
dec
and
arpl
mov
leave
push
cltd
inc
cmpsl
inc
xchg
out
enter
inc
jmp
mov
xlat
xchg
cs
mov
and
push
test
sub
or
or
adcl
xchg
repz
lahf
lock
in
sub
stos
sub
jbe
jbe
inc
inc
mov
mov
push
test
xchg
test
stos
aas
push
clc
or
jl
jb
jbe
stos
sbb
xchg
sub
into
xchg
lods
frstor
mov
sbb
mov
cmc
sbb
and
ds
ljmp
call
ret
lcall
imul
inc
in
outsb
icebp
cmpb
test
into
pop
lcall
dec
mov
les
adc
push
push
outsl
mulb
rolb
dec
pusha
ss
mov
cli
lds
scas
nop
dec
dec
shl
pop
pop
je
popf
mov
inc
insl
sti
jnp
mov
sub
pop
lcall
jmp
aaa
mov
enter
adc
jae
mul
incb
mov
jnp
sub
leave
adc
cmp
inc
subb
add
sbb
push
or
cmpsl
loope
fnstenv
test
pop
aam
pop
sbb
es
in
xchg
call
push
cmc
int3
int3
les
stos
sub
adc
je
arpl
or
rorb
pushf
inc
push
test
loopne
je
pushl
mov
push
rcrb
cmpsb
add
sbb
jl
push
push
mov
ja
jno
fwait
js
or
dec
in
adc
push
shlb
out
sub
or
daa
les
inc
or
jb
xor
mov
sbb
jae
mull
mov
les
push
pop
imul
into
shll
push
std
jp
xchg
dec
dec
in
fs
xchg
mov
in
xorl
jge
divb
xchg
mov
adc
sub
lret
pusha
aad
dec
pop
dec
repnz
push
fbstp
push
dec
in
popa
pop
mov
out
cmp
jecxz
or
mov
xchg
sub
adc
inc
shlb
mov
ret
std
push
or
xlat
gs
lcall
jmp
and
xchg
or
je
mov
mov
mov
jp
repnz
test
and
push
inc
lea
jb
mov
aam
jle
mov
mov
test
xor
bound
rorl
mov
dec
aaa
adc
dec
in
jl
notl
xchg
or
pushf
popa
mov
call
xchg
js
mov
rcrb
mov
es
sbb
xchg
adc
mov
add
scas
in
jl
sbb
inc
popa
pop
jbe
aam
jmp
idiv
add
dec
and
inc
xor
cmpsb
dec
mov
and
das
imul
in
mov
jecxz
pop
in
in
arpl
aas
add
fcoms
lods
push
call
and
outsl
push
rcrb
popa
imul
push
das
jcxz
inc
push
fidivl
iret
mov
es
sbb
cwtl
insb
out
inc
scas
lods
aas
adc
int
jnp
push
push
xchg
pusha
repnz
ret
add
arpl
jb
push
dec
and
jp
lcall
lret
aad
into
ret
cmp
clc
mov
out
jns
cmpsl
data16
lods
inc
or
push
push
cwtl
dec
xchg
xchg
aad
out
shrl
pop
dec
imul
jmp
mov
jl
push
sbb
xchg
cmp
and
or
and
mov
std
or
xchg
mov
out
add
sbb
inc
test
clc
dec
mov
pop
int
aas
bswap
out
in
sbb
cli
fildl
outsb
bound
jge
pop
call
lcall
pop
or
jp
sub
jle
jmp
incb
or
and
cmp
int
mov
push
scas
out
push
sbb
pop
lods
ljmp
pushf
out
cwtl
lret
jge
or
jecxz
scas
push
dec
jbe
iret
add
lods
mov
fnstenv
arpl
xchg
or
std
add
cmp
push
sub
imul
mov
pop
popa
cli
inc
fstpt
dec
popa
subl
test
sbb
mov
dec
xchg
xor
jle
aad
xor
fsincos
xchg
les
push
aam
cmpsl
ret
dec
cmc
add
xchg
into
and
scas
sbb
xchg
cmpsl
ficoml
lds
push
and
jecxz
movsb
nop
cmpsl
xor
dec
dec
push
lds
and
sub
pop
inc
fisttpl
es
push
inc
mov
fdivrl
stc
nop
sub
rcll
repnz
dec
dec
xchg
imull
push
std
sub
xchg
inc
or
pop
hlt
sub
mov
xor
push
aad
fidivrl
fdivp
xor
out
gs
mov
mov
cmc
xchg
or
daa
adc
inc
imul
or
push
lret
bound
sub
xchg
mov
sub
adc
push
cmp
fldenv
xlat
loopne
fidivrs
mov
push
or
pop
xor
mov
std
inc
scas
mov
ja
push
inc
dec
cwtl
jae
int3
inc
sbb
cli
in
nop
daa
pop
sbb
mov
mov
inc
in
punpckldq
xor
and
repnz
inc
add
test
mov
mov
cwtl
xchg
sub
jo
add
push
fcomps
adcb
sbbb
aad
mov
xchg
repnz
fcmovnb
popf
xor
cld
cmpsb
jl
mov
jae
lds
jle
cli
xchg
lods
sahf
add
gs
cmp
pushf
rclb
into
xor
outsl
inc
mov
mov
sbb
out
cmp
mov
loopne
inc
pop
outsb
add
xchg
fwait
arpl
cmp
mov
repz
lret
xor
int
out
sti
push
xor
mov
cli
repz
jnp
test
push
es
add
clc
mov
fidivrs
fcoms
xor
call
jbe
idivb
inc
adc
cmp
mov
dec
xchg
orl
mov
sahf
pop
hlt
outsl
push
jg
inc
mov
mov
aaa
mov
ljmp
mov
jp
push
push
stc
fildl
jp
lods
fcmovu
xor
inc
cli
xchg
fildll
sbb
pop
nop
jne
sarl
sub
ret
pop
orl
test
fwait
xor
lea
aam
testb
mov
repz
outsl
sbb
mov
jnp
mov
jno
test
mov
mov
push
add
rorl
loopne
xor
jmp
andb
push
leave
mov
jae
mov
mov
push
pop
std
std
js
ss
repnz
sbb
cs
jb
jge
in
dec
lds
fimull
aas
inc
packssdw
adc
dec
pop
lahf
sub
pop
idivb
or
lds
xor
in
mov
jmp
ret
negl
outsb
pop
or
add
lds
pop
mov
xchg
push
xchg
les
negl
jmp
xchg
nop
sub
xchg
mov
fwait
inc
mov
jmp
cmp
jp
loope
popa
ret
sbb
inc
xchg
add
scas
lea
sbbl
lods
fs
add
jo
sbbb
mov
xor
bound
aad
test
std
testb
sti
cmpb
cltd
mov
xchg
pop
out
pop
pop
addb
pop
fldcw
or
negb
push
cli
cmp
and
xchg
idivl
out
inc
mov
sbb
scas
cmp
dec
sar
pusha
jp
lret
adc
and
fwait
pop
or
lock
leave
leave
mov
cwtl
sahf
xor
dec
pop
fs
mov
jnp
aas
pop
sbb
clc
jle
jmp
sbb
sub
enter
mov
shll
aad
fcoml
sti
sbb
or
mov
aad
adc
stos
xchg
pop
dec
fdivrp
leave
pusha
xor
int3
sarl
jb
lcall
xchg
in
aas
jne
jl
loope
insb
sub
xor
dec
dec
leave
clc
rol
scas
push
dec
sbb
movl
pop
pushf
cmpsl
js
test
call
out
sbb
nop
pop
popa
mov
pop
jle
and
sub
mov
xchg
insl
mov
insl
test
sbb
test
cmc
or
dec
sarl
dec
scas
fiaddl
cmpsb
mov
shr
lds
popl
sti
inc
adc
xchg
int
aad
pop
in
mov
lods
jnp
outsb
cmp
loope
fwait
and
fldcw
jl
int3
arpl
loopne
jae
jnp
adc
stc
shlb
push
data16
jnp
xchg
shrl
leave
mov
inc
sbb
lahf
andl
or
mov
and
aaa
cmp
xchg
jp
dec
int3
sahf
pop
lret
bound
loopne
or
ja
adc
ss
mov
inc
rep
mov
xchg
insl
test
mov
fdiv
mov
test
pop
mov
xor
jne
hlt
adc
jb
sub
dec
call
mov
xor
xchg
stos
jp
and
stos
inc
push
in
fimull
and
jns
pop
ss
add
sbb
addr16
adc
pop
mov
cmpb
in
and
fisubs
sbb
dec
dec
loopne
aas
scas
mov
cmc
jge,pt
daa
scas
popf
pop
xor
adc
mov
mov
into
int
xchg
push
in
out
push
js
cli
jmp
dec
add
xor
or
dec
in
fstps
hlt
or
jmp
mov
ficomps
or
cmpsb
sbb
xchg
mov
stos
es
jo
aad
scas
mov
outsb
push
lds
iret
xchg
out
jmp
loop
sub
pop
xchg
jecxz
jns
push
stos
bound
insl
cmp
fistps
popa
jne
push
shl
repnz
or
push
divl
movsl
cmpb
mov
or
mov
shlb
aad
repnz
out
lods
or
hlt
xchg
pop
mov
cmp
add
add
jp
cmc
stos
adc
je
icebp
popa
nop
xchg
xor
pop
cs
cwtl
jno
jle
mulb
cli
pop
repnz
ss
dec
cli
je
and
cmp
in
shrl
cmpsb
sub
mov
pop
in
xchg
dec
push
orl
bnd
mov
mov
cmp
mov
cmpb
js
icebp
cmp
jns
lock
and
sbb
sub
pop
cmc
mov
pop
test
stos
aas
sub
orl
loopne
jae
xor
xchg
push
lcall
arpl
push
inc
or
popa
jmp
and
dec
mov
and
mov
fmulp
data16
aaa
enter
add
mov
scas
mov
insl
arpl
and
xor
mov
xorb
mov
negl
subl
push
pushf
push
dec
rcr
testb
adc
xchg
inc
sub
loop
xor
jb
movsb
jne
fstpl
sbb
aas
fcmovbe
cmpsl
mov
mov
aad
repnz
xor
mov
jg
xchg
leave
inc
mov
js
push
add
push
out
fistl
call
pop
bound
mov
or
add
inc
sbb
stc
int
sti
movsl
stos
dec
pop
fadd
addb
sbb
ret
movsl
xchg
pop
jl
nop
clc
ds
cmp
imul
cmp
dec
inc
fnstcw
loopne
adcb
leave
test
push
inc
stos
push
pop
scas
mov
fbstp
inc
push
mov
mov
push
repz
lods
sub
lcall
gs
jg
jne
in
xchg
sahf
mov
aad
aam
movsb
or
fsubrs
sub
jno
push
jne
cmp
cmpb
push
stc
mov
call
sti
dec
ljmp
xor
add
mov
push
int3
sub
int
xor
xchg
pop
pusha
fstpt
fdivrl
testb
jno
mov
dec
dec
pop
popf
lret
hlt
stos
sahf
mov
mov
aam
sbb
lods
ljmp
and
jmp
sbb
into
fwait
scas
mov
xlat
out
dec
mov
add
outsb
test
jp
or
add
xchg
xor
ds
and
out
xlat
inc
lods
xor
fldenv
xchg
int3
mov
adc
fs
inc
sub
xor
inc
mov
lahf
sub
xor
lea
addb
sbb
dec
mov
shlb
scas
aaa
outsb
lock
addr16
mov
inc
jmp
push
mov
out
stc
xchg
pop
loope
xchg
iret
and
mov
push
arpl
mov
xchg
sub
xor
mov
scas
xchg
rcr
jno
scas
in
push
or
rcll
js
pop
xchg
ret
sub
cmpsl
and
sub
xor
lods
xchg
xchg
cld
fmuls
pop
out
push
adc
test
sub
xchg
std
ss
push
aaa
mov
mov
push
dec
dec
push
mov
jns
push
or
mov
mov
out
icebp
in
pop
push
fidivs
cli
xchg
pop
nop
add
dec
mov
leave
inc
xchg
and
push
ret
notl
adc
rcrl
incb
lea
fwait
push
in
lea
jge
dec
sbb
mov
cmp
into
imul
mov
out
push
out
in
ds
jmp
movhlps
ror
insb
outsb
mov
scas
inc
add
dec
in
mov
insb
sub
pop
pop
mov
pop
loop
out
cmp
shl
jnp
pop
adc
mov
or
push
pop
out
int
std
test
inc
dec
fbstp
vmread
adc
js
add
lcall
jns
lea
inc
pusha
cmp
jl
bnd
js
or
add
push
mov
ficoms
pushf
daa
pop
and
adc
jge
inc
add
push
inc
push
pop
xor
test
fdivs
xchg
das
shlb
out
ret
out
dec
push
sbb
adc
push
fstpl
rclb
in
jae
mov
xor
popf
pushf
mov
insl
loopne
clc
aad
iret
or
add
ljmp
mov
fwait
cmp
out
test
inc
sbb
pusha
testl
test
cwtl
lods
push
lret
addr16
push
in
jp
imul
xchg
aas
jge
jg
xchg
daa
jnp
subb
add
das
add
lcall
and
bound
xchg
adc
leave
and
flds
mov
or
fnstenv
lods
xchg
push
push
call
cli
test
mov
testb
push
fildl
movsb
cmp
inc
fmul
leave
cmpsl
dec
pop
movsb
fcoms
in
xchg
outsl
inc
out
xchg
mov
pop
scas
popf
arpl
lock
lret
push
nop
sbb
in
ja
fsubrp
lret
sub
aas
adc
mov
pop
cmc
insb
call
ljmp
dec
ss
divb
pop
cmpsb
cmpsl
hlt
js
pop
jecxz
mov
xchg
andl
adc
ja
enter
mov
jo
std
test
inc
mov
aam
mov
add
rcrl
cmp
fstpt
pop
arpl
cmc
dec
pop
daa
adc
inc
xor
sti
unpckhps
enter
bnd
jg
fisubrs
xlat
cld
pop
test
add
mov
jg
and
sbb
jns
push
or
cmp
mov
push
sahf
xor
iret
jb
xchg
mov
dec
push
test
fisttpl
or
mov
mov
sub
xchg
jl
mov
test
jmp
test
ja
mov
out
dec
insl
pushf
enter
mov
int
lods
stc
dec
pop
sub
jl
jne
lcall
cltd
mov
inc
or
test
aam
mov
push
dec
es
mov
inc
mov
mov
dec
jb
outsl
out
xchg
pop
lock
xchg
sub
xchg
xchg
add
cltd
movsl
ds
xchg
sbb
lods
push
or
adc
std
xchg
cwtl
fsub
jp
jb
inc
mov
in
or
sbb
fstp
mov
push
inc
cmpsb
sub
mov
test
filds
hlt
daa
xchg
or
in
iret
inc
jl
push
enter
add
xchg
add
mov
adc
fstl
jbe
test
rcll
hlt
inc
test
cs
pop
mov
cmc
mov
mov
pop
mov
jecxz
or
push
cmpsb
insb
fbld
adc
xchg
push
and
sub
sti
mov
push
push
push
sub
es
mov
cltd
cli
xchg
daa
mov
mov
adc
js
push
cmp
inc
repnz
incb
jl
xchg
mov
les
push
fldz
repz
and
mov
test
cltd
arpl
or
mov
mov
nop
dec
xor
dec
loope
stos
xchg
mov
pop
mov
loope
cmp
or
loop
loop
pushl
jle
sbb
cltd
push
arpl
xorl
fdivrs
std
sbb
add
cmp
in
dec
loop
or
imul
std
pop
xlat
icebp
mov
and
pop
mov
lret
test
inc
pop
movups
inc
rolb
ljmp
pushf
cmp
repnz
jae,pn
xor
popl
jmp
nop
pop
in
shrb
lret
into
fldcw
outsl
adc
lret
pusha
xchg
xor
xor
or
sub
popf
mov
insb
popf
xor
stc
sbb
scas
dec
mov
cld
or
mov
test
xor
sarb
add
out
test
out
xor
in
jns
xorl
sbb
dec
cltd
dec
xchg
push
enter
sbb
lea
pushf
lds
lds
jp
rcrl
xchg
and
out
mov
pop
lods
mov
or
imulb
cmpsl
push
jmp
dec
lods
inc
aad
jmp
jnp
sbb
mov
pop
xor
and
add
cld
cmp
test
jmp
repnz
ljmp
jno
or
out
xor
add
dec
outsl
repz
dec
and
push
outsl
push
pop
xchg
fsub
cmpsl
in
loopne
dec
in
jnp
xchg
lds
adc
sbb
mov
lret
cld
jmp
jmp
pop
sahf
pop
push
in
fstp
pusha
test
mov
mov
mov
mul
adc
aad
aaa
rclb
or
outsb
es
inc
and
adc
xchg
lret
leave
rorb
sub
or
sahf
push
pop
mov
pusha
and
jmp
cmp
icebp
adc
mov
inc
pop
fs
inc
fwait
call
cmp
jns
sub
pop
inc
out
xchg
pop
scas
mov
xchg
mov
lods
ficoml
sub
sbb
adc
cmp
stc
rorb
subb
pop
int3
stos
outsb
out
inc
aas
mov
bound
sahf
sub
repz
and
sti
push
popf
sub
ja
cli
add
ficomps
js,pt
stos
stos
jb
sbb
jae
adc
int
cmp
pop
dec
mov
fnsave
adc
mov
and
pop
mov
test
aas
into
or
push
mov
add
lds
inc
mov
in
fadd
lea
mov
aam
fstpt
sub
fmull
lods
inc
adc
inc
data16
lret
fnstsw
mov
scas
mov
mov
mov
sbb
out
push
stc
xchg
xchg
mov
or
test
mov
xchg
xor
jecxz
push
sbb
or
stos
push
dec
ljmp
nop
or
stos
xlat
lret
repz
push
adc
cmp
jb
aam
jge
insb
dec
pop
dec
mov
cmpsl
outsb
clc
cwtl
jne
popa
mov
js
mov
fidivs
adcb
imul
fs
mov
jmp
mov
bound
bound
xchg
adc
fwait
push
in
push
jl
push
mov
fadds
nopl
aas
pop
mov
lahf
push
push
push
orb
aam
int
inc
jmp
fsubs
ret
mov
out
sbb
mov
inc
shr
push
mov
jmp
pusha
cmc
fidivrl
movsl
arpl
sahf
stos
inc
test
mov
fidivrl
in
test
xchg
fisubl
fldenv
fs
or
jmp
xadd
cli
jnp
imul
test
cmp
xchg
les
test
loop
and
cltd
js
cwtl
inc
xchg
pop
xor
fs
jbe
ss
pop
fwait
mov
popa
or
hlt
pop
stc
adc
clc
sbb
dec
rclb
fsubr
mov
adc
stc
scas
in
mov
pushf
in
lods
or
dec
divb
ljmp
adc
pop
mov
fcompl
pusha
int3
out
jns
fldt
sub
popa
ret
iret
dec
popa
and
gs
mov
outsb
call
cmc
xor
lods
ljmp
pushf
out
dec
aas
xchg
std
out
mov
lock
mov
loope
in
mov
mov
aaa
dec
pop
cmp
aaa
hlt
mov
fwait
aaa
pop
or
cmp
pop
dec
loope
icebp
dec
ja
test
iret
loope
jmp
data16
shll
mov
out
or
mov
test
jmp
mov
int
xor
push
or
xchg
test
out
js
and
std
add
sahf
and
mulb
jge
or
repnz
daa
andl
pop
adc
test
cld
push
cwtl
or
pop
cmc
lcall
dec
adc
repnz
mulb
push
in
mov
inc
shlb
lret
mov
jbe
cmpsb
arpl
mov
subl
wrmsr
sbb
insl
adc
repz
cmp
outsl
inc
scas
insl
pop
lret
xor
in
aas
dec
sbb
or
sub
and
packuswb
or
lods
test
adc
daa
mov
lods
cmp
pminub
mov
cmp
jnp
addr16
pop
jmp
mov
hlt
mov
mov
mov
jne
pop
jbe
add
decl
lret
and
lds
sub
rorl
add
movsb
ret
rorb
jnp
sarb
cmpsb
lock
pop
xor
loope
xchg
mov
and
mulb
ja
ret
out
inc
in
jle
push
out
push
mov
mov
xchg
mov
push
cltd
and
lret
je
subl
mov
sti
xchg
mov
xchg
out
aad
cmp
shl
or
pop
pop
pop
or
mov
inc
and
scas
jb
int
sbb
inc
and
in
je
xchg
adc
lea
popa
clc
push
fstp
je
and
orb
nop
sub
lods
adc
js
lahf
or
fcmovu
imul
sub
push
test
xchg
in
push
push
test
iret
jle
push
out
push
int3
and
xchg
nop
cli
sbb
sbb
and
sahf
adc
cmp
loop
scas
inc
adc
and
jo
xor
das
lds
andb
jle
fcompl
xchg
cld
push
xor
loop
fsub
pop
pop
out
push
mov
in
xor
in
pop
in
stos
dec
adc
mov
lods
fdivp
cmpsb
or
mov
and
and
mov
lods
bnd
lods
fisubs
faddl
mov
iret
push
or
xor
loopne
arpl
jns
fisttpll
jmp
aaa
inc
mov
pop
and
sbb
sub
pop
ss
std
fwait
scas
cs
fdivs
or
sarl
lds
pop
ret
aam
xor
popl
lcall
push
push
cmc
pop
mov
repnz
ja
ljmp
xor
testl
sbb
bnd
and
arpl
pop
jno
and
leave
out
push
cmpsl
fildl
cmpsb
add
lods
inc
push
test
jae
imul
add
pop
insb
mov
lock
mov
fbld
orl
sbb
inc
mov
js
mov
icebp
and
aam
adc
bound
add
je
push
sub
sub
test
jp
dec
pop
cmp
push
arpl
dec
sbb
xchg
pusha
iret
lahf
mov
pop
mov
test
aaa
push
or
in
jne
push
nop
mov
xor
cli
or
das
test
sarl
pop
mov
xchg
add
mov
mov
pop
jg
popa
or
ret
mov
add
xlat
pop
sub
orl
mov
repz
mov
pop
imul
add
or
call
repz
xor
test
inc
sub
pop
nop
sbb
sub
pop
addb
mov
jmp
aam
xchg
int3
popl
jp
fstp
jo
xor
xchg
pop
test
inc
inc
jl
les
sarb
dec
fwait
cmp
or
mov
cmc
or
clc
xchg
push
sahf
stos
in
adc
xor
jmp
push
dec
frstor
out
test
mov
or
cli
lahf
push
adc
scas
adc
fdivrl
data16
fldl
inc
es
adc
aas
negl
imul
mov
cli
xchg
jle
push
pop
les
and
lcall
test
push
or
sub
je
insl
sahf
adc
adc
popf
push
xchg
mov
push
ss
mov
sub
call
leave
mov
shlb
cltd
and
movsl
pushw
jo
leave
mov
xor
sbb
test
push
jne
leave
scas
movsb
call
mov
mov
inc
in
inc
xchg
push
clc
mov
fnstcw
push
hlt
gs
outsb
jnp
mov
push
sbb
fdivs
ljmp
jno
sub
divb
sbb
mov
or
aad
sbb
jne
dec
jmp
mov
clc
dec
loope
int3
mov
ret
ret
push
rorl
lods
pop
jne
inc
push
ljmp
lock
xor
add
fwait
xor
ds
sub
cmp
jge
scas
pop
hlt
mov
fnstsw
xor
cmpsl
ret
pop
fsts
cltd
xor
push
inc
test
adc
mov
mov
lcall
jp
mov
mov
int3
jae
jl
push
inc
test
outsb
adc
push
sbb
pop
fiaddl
insb
add
cltd
test
jnp
push
mov
iret
sbb
out
stc
xchg
int3
imul
lcall
mov
lds
jmp
test
leave
mov
jmp
mov
sbb
jl
or
stos
pushf
scas
xlat
add
and
lret
std
aas
or
push
js
push
cmc
sbb
mov
loop
mov
orl
xchg
leave
xchg
sarl
icebp
cmpsl
inc
lcall
je
mov
push
jae
push
mov
add
adc
push
leave
and
clc
mov
outsb
test
adc
adc
xchg
dec
sbb
je
mov
js
dec
mov
push
push
jle
xchg
shl
hlt
into
or
mov
cmp
pop
adc
add
sbb
pop
and
dec
lahf
int
mov
or
mov
or
ljmp
push
or
xchg
shlb
jge
in
fwait
into
jge
sbb
mov
xor
dec
pop
or
stos
dec
movsb
pop
cmp
mov
testl
outsb
mov
cmp
out
adc
ret
out
mov
mov
out
lds
shlb
mov
les
fistl
or
mov
stos
jp
jmp
pop
jp
pop
mov
dec
scas
mov
push
ret
mov
add
outsb
mov
sbb
pop
sub
out
mov
popf
cmp
jno
je
loope
jo
dec
adc
mov
iret
sbb
scas
jle
and
sub
stos
out
int3
xor
or
inc
push
mov
xor
xor
mov
cmp
sahf
xor
mov
icebp
mov
mov
dec
lods
push
add
enter
jne
xchg
jb
jae
inc
sbb
sahf
imul
push
jmp
addr16
xchg
insl
and
int
mov
cmpsb
mov
testb
mov
lret
push
je
adc
and
sbb
pop
stos
pop
shrb
push
fsubr
icebp
xor
push
lcall
sbb
add
fmuls
xor
mov
daa
notb
loopne
repz
into
and
fs
std
adc
mov
xor
sbb
mov
test
mov
addr16
sub
notl
add
pop
xchg
popa
ja
xchg
jp
stc
xor
push
call
icebp
jo
subb
jecxz
cmc
in
cmp
pushf
xor
std
mov
sbb
mov
jnp
cmpsl
fists
xcrypt-cbc
cmpsl
push
leave
adc
je
cltd
mov
clc
loope
sbb
mov
mov
fisubs
xchg
movsb
xchg
stos
xor
iret
mov
sub
adc
mov
int3
lock
inc
fldcw
mov
testl
fimuls
cmp
pop
cmp
push
sbb
inc
cmp
mov
adc
mov
cltd
in
decl
lods
stc
xchg
push
pop
xor
add
addr16
xchg
inc
in
push
jmp
insl
sahf
or
sbb
push
xor
lods
sti
jnp
jno
xchg
mov
cltd
mov
mov
jo
das
int3
inc
sub
clc
lds
call
xlat
jge
ret
js
fistpl
cmpb
push
sar
clc
add
xor
cmp
dec
loope
add
out
add
ja
cld
mov
sub
jmp
pop
dec
filds
arpl
jmp
xor
test
fldenv
lret
cmp
xchg
rclb
inc
push
or
out
pop
shll
dec
sub
jl
adc
lahf
mov
or
shll
nop
mov
outsl
add
sub
mov
stos
pop
xchg
jne
rdtsc
out
neg
addr16
sahf
xchg
mov
push
rolb
fldt
adc
ds
stc
push
inc
mov
idivl
test
cmp
inc
lret
pop
cmp
fwait
cwtl
xor
jno
inc
mov
repz
jl
cmp
cmp
dec
pusha
push
pop
in
incl
aam
xor
je
bound
sbb
xchg
dec
aaa
hlt
cwtl
das
es
dec
mov
fadds
mov
fiadds
xchg
daa
mov
daa
stos
scas
fstp
dec
pop
idivb
mov
pop
mov
push
cltd
cmpl
imull
mov
xor
stos
int
sbb
pop
ja
movsb
and
mov
fsubrl
mov
inc
rcll
shrl
scas
sub
les
stos
sub
fmull
sahf
imul
outsb
push
ja
aas
daa
mov
push
incb
jecxz
mov
push
mov
icebp
rorb
addr16
sbb
cmp
xor
xor
add
cmp
adc
jp
pop
xor
scas
cmp
mov
mov
mov
fcomps
mov
fldt
loope
data16
jbe
shr
jg
push
sub
lds
lret
scas
fistpl
xchg
adc
test
shrb
add
xor
and
lcall
test
or
int
es
add
push
out
and
push
push
movsl
js
mov
xchg
xchg
loopne
sub
or
dec
inc
cmpsl
je
pop
les
in
sub
inc
pop
loop
dec
ja
xchg
lods
scas
orl
jge
jno
sbb
test
xchg
lcall
out
out
data16
les
add
in
lcall
and
jb
jo
lret
stc
push
mov
inc
xlat
mov
fucomip
test
cmp
push
cmp
push
and
mov
jp
dec
add
outsb
in
mov
adc
jae
xor
loopne
add
push
pop
out
sbb
js
je
xor
push
or
dec
push
js
movsl
ret
int
rcll
cmp
xchg
pop
sub
fisubrl
lea
test
or
shll
call
jl
cmpb
cmp
mov
xor
ret
and
adc
xchg
inc
clc
je
jmp
fstl
adcb
jno
mov
lock
sti
jbe
pop
xlat
testb
add
iret
adc
das
add
mov
fisubrs
or
inc
sbbl
imul
mov
lods
mov
mov
cli
xchg
int3
ss
sub
imul
pop
popa
mov
andl
stos
xchg
push
sarb
mov
loopne
jecxz
and
push
mov
pop
je
pushf
add
data16
cwtl
mov
pop
dec
mov
xor
js
arpl
mov
arpl
pop
orb
aad
ljmp
daa
daa
sti
cld
xchg
aas
movb
fidivs
fsubs
add
cmp
sbb
mov
repnz
sub
mov
jp
xor
das
shr
lea
dec
add
enter
pop
sti
push
add
cmp
je
push
mov
push
iret
jno
mov
xchg
push
fisttpll
pop
mov
xor
sub
jbe
mov
xchg
in
xchg
lahf
mov
dec
jle
ds
hlt
mov
rorl
sub
cmp
mov
lret
pop
lret
lods
jg
ret
push
pushf
int3
rep
cwtl
cmpl
pop
jo
loopne
sub
imull
sub
jbe
xor
sub
pop
jle
mov
adc
jo
adcb
negb
xor
ljmp
stos
xchg
repnz
std
inc
inc
jb
sub
mov
mov
fildll
push
mov
xchg
lods
mov
ret
fstps
pop
lcall
inc
push
sarl
or
jb
fisubrs
sub
sbbb
iret
outsb
mov
pop
outsb
in
fdivrl
stos
inc
cmp
fnstenv
mov
mov
xor
jae
xchg
pop
in
jns
leave
jno
pop
cli
pop
es
pusha
mov
mov
insl
and
es
std
xchg
pop
mov
sbb
outsb
mov
sub
mov
push
loopne
or
pop
das
out
cmpsb
rorb
stc
aam
jnp
movsl
xor
pop
mulb
mov
and
arpl
and
jmp
and
lret
lods
fucomip
jne
dec
inc
mov
pop
test
fwait
xor
jns
scas
pop
add
lret
pop
mov
xor
sub
inc
add
sbb
push
pop
push
lea
mov
movsb
les
jmp
inc
aam
sbb
orb
fcoml
mov
ds
add
push
ljmp
in
lea
aaa
fs
in
xor
fildll
cmp
and
arpl
mov
lods
add
aad
scas
push
mov
sahf
icebp
xchg
stos
cltd
inc
loopne
test
adc
and
xor
lcall
mov
loope
stc
or
mov
rol
xor
jmp
and
rclb
pop
loopne
mov
mov
frstor
mov
nop
add
hlt
inc
mov
imul
adc
lods
mov
cmp
mov
xchg
mov
outsl
les
jecxz
xor
dec
lret
mov
cmp
fisttps
ds
out
jmp
xchg
cs
xchg
ds
les
cmp
in
push
stos
push
inc
pop
int
cmc
notb
std
cmp
clc
push
aas
mov
lret
mov
leave
fadd
xor
dec
js
jl
insb
fildll
xor
leave
push
inc
push
lcall
jge
movsb
cs
mov
in
xor
int3
mov
ret
test
test
dec
sub
in
outsl
cwtl
ret
dec
cltd
cwtl
mov
pushf
popa
lds
imull
popa
mov
gs
jmp
daa
xchg
inc
fwait
adc
test
sub
jnp
mov
xchg
ret
add
dec
cmc
shrb
jno
cmc
test
mov
jnp
mov
pop
cmp
pop
imulb
mov
pop
scas
mov
adcl
adc
xchg
sti
xor
ret
enter
imul
sbb
gs
cmp
xchg
out
aam
sub
imulb
add
mov
sbb
stos
and
xchg
mov
or
pusha
aaa
xor
push
clc
xchg
orb
xlat
sbb
jge
outsb
jno
jnp
jnp
cli
pop
push
nop
daa
xlat
movsl
push
push
fwait
iret
dec
dec
ja
icebp
test
cmc
push
jne
sti
jnp
inc
popf
stc
and
sbb
xor
lea
and
xorb
int
pop
fcompl
jecxz
sbb
jecxz
sbbb
xchg
add
ja
loope
cmpsl
jae
sbb
cmp
xchg
push
add
dec
leave
sub
ds
enter
mov
jbe
out
pop
notb
jbe
repz
jae
leave
mov
sahf
aam
in
inc
insl
leave
pop
jmp
bound
shll
dec
popl
xlat
inc
stos
mov
jmp
and
xchg
cwtl
mov
mov
jbe
pop
push
xor
inc
cmc
adc
xchg
insb
decl
movsb
adc
andl
jno
xchg
call
shlb
xchg
push
sbb
ret
and
loopne
jb
sub
mov
mov
and
in
add
cwtl
mov
inc
lret
jne
int3
adc
je
das
mov
cmpsb
mov
jle
mov
imul
or
dec
push
or
mov
cmp
loopne
daa
pushf
ss
cli
imul
cwtl
push
xchg
cmp
mov
dec
lahf
rcl
les
ret
das
cmp
sbb
test
adc
daa
sbb
push
xor
xchg
inc
mov
lods
or
push
dec
xchg
sub
push
lahf
inc
pop
xchg
leave
mov
ja
inc
and
mov
xchg
loop,pn
push
jno
test
sub
xchg
test
popa
pop
fcompl
xchg
push
mov
in
sub
movsb
sarl
xlat
inc
push
pop
dec
popf
or
mov
gs
fcoms
decl
pushf
imul
enter
aas
adc
mov
repz
cmp
mov
and
iret
rorl
xor
sbb
sbb
and
cmp
clc
or
arpl
mov
push
shll
leave
push
pusha
inc
pop
roll
int3
cltd
push
jb
out
cmp
arpl
lcall
mov
adc
push
inc
cld
xchg
ss
insl
aad
fs
int
or
pop
and
jbe
jns
cli
push
jne
pop
sbb
add
lcall
push
sub
mov
push
mov
imul
and
das
push
ds
mov
imul
xchg
adc
add
and
data16
aaa
mov
add
sti
xchg
push
and
aam
dec
sbb
push
push
pop
cli
mov
in
orl
add
sbb
cld
or
mov
sarb
js
popf
mov
aad
pop
addl
and
fldcw
test
jecxz
pop
pop
mov
jg
ljmp
mov
push
cmpsb
push
pop
fdivrs
ret
sbb
pop
out
fcmovb
and
mov
loopne
push
call
outsb
outsl
rcrb
loop
jp
lods
inc
dec
adc
hlt
ret
dec
das
in
pop
sbb
adc
fwait
mov
pop
inc
fwait
mov
lahf
cs
movzbl
push
pop
xor
loop
out
out
cld
mov
sti
aam
inc
int
insb
daa
mov
test
jae
or
fcoml
mov
or
add
das
sbb
xor
jp
aaa
pop
hlt
cmpsl
pusha
adc
lahf
aaa
enter
fsubs
mov
dec
mov
xlat
jns
rcl
fcmovu
insl
mov
or
mov
mov
test
aas
movsb
xor
aad
inc
cli
jmp
adc
jle
mov
mov
dec
sub
push
icebp
js
stos
repnz
adc
mov
sub
insl
leave
jbe
lret
mov
lock
loop
ljmp
imul
clc
push
shrb
push
mov
lcall
jbe
and
orl
inc
or
in
out
das
loopne
adc
lea
faddl
popf
xor
jbe
ljmp
add
notl
inc
inc
addr16
mov
jecxz
lcall
je
iret
cmpsb
push
lods
or
imul
lods
push
ret
mov
iret
das
outsb
mov
xchg
pop
jp
add
dec
mov
and
xchg
sub
sub
rcll
mov
push
pop
pop
add
jbe
xor
mov
push
mov
stc
add
mov
ljmp
cmp
int3
sbb
aad
jne
add
add
xchg
imul
cmp
pop
out
add
sub
sahf
pop
cmc
into
mov
jl
lret
outsb
push
sub
mov
sbb
sub
sbb
adc
or
shlb
sub
cmpsl
out
cwtl
inc
adc
stc
xor
incl
jecxz
out
lahf
in
sahf
imul
pop
sbb
fiadds
dec
add
mov
sub
shl
sub
push
adc
xor
loopne
aaa
pop
adc
push
xchg
jns
ss
movsb
add
lret
imul
or
or
inc
push
fisubs
xor
or
and
pop
push
sbbb
fisttpll
add
cmp
jne
jmp
inc
sub
stos
adc
cmp
lret
adc
stc
xor
mov
lock
insb
fbld
fmuls
inc
jbe
inc
jns
movsl
icebp
sub
adc
cmp
in
push
and
push
mov
imul
pushf
daa
mov
mov
adcb
fs
or
jp
and
push
repz
fisubrs
sbb
or
xor
mov
repz
enter
jo
adcl
mov
xchg
mov
imul
test
sub
pop
sahf
jnp
in
popa
xchg
xor
loop
lcall
mov
test
mov
mov
pushf
mov
sbb
cmp
xchg
sub
mov
or
call
lret
mov
push
mov
cmp
int
mov
add
push
faddl
pop
and
arpl
sub
fldcw
add
xor
push
push
roll
mov
push
sub
arpl
inc
stos
mov
ljmp
inc
sub
scas
out
aas
fdivl
mov
push
xchg
arpl
adc
push
inc
call
loope
outsl
orl
add
lahf
mov
pop
adc
dec
mov
inc
popa
adc
add
jecxz
lret
xor
sbb
cld
out
xor
push
dec
and
xchg
arpl
dec
daa
rorl
sarl
insb
insl
jmp
loope
jge
sbb
adc
sbbl
cmc
cwtl
sub
push
insb
inc
pushf
jle
ret
push
and
sti
xor
jp
stos
mov
inc
bound
adc
insl
inc
jge
test
testb
push
nop
call
mov
xchg
xchg
cs
jg
push
jge
sub
pop
pushf
mov
imull
lods
xor
aad
adc
inc
inc
or
lock
test
adc
jb
pop
outsl
and
push
sahf
jne
push
mov
out
mov
sbb
inc
fcoms
sub
lret
xor
jne
inc
repz
int
shrl
int
ret
stos
pop
adc
xor
sub
add
jbe
xchg
mov
and
rcll
repnz
in
sbb
and
ss
mov
negl
mov
xchg
mov
movl
leave
xchg
fiadds
ret
clc
addr16
mov
dec
lock
fnstcw
jne
div
lds
shll
ss
imul
sub
and
or
ljmp
inc
xchg
data16
push
cmp
arpl
dec
mov
xchg
mov
ljmp
mov
adc
les
jge
sbb
pop
xor
pop
pop
pop
jae
mov
lods
inc
dec
insb
das
adc
cli
inc
test
xor
adc
xlat
jmp
stos
pop
xor
test
leave
inc
sub
jne
cmp
test
fnstsw
sbb
mov
gs
test
out
push
sub
mov
xor
cmpsl
stos
xchg
test
clc
cmp
pop
std
int3
adc
sahf
jae
test
cmp
mov
ja
popf
xor
xlat
gs
insb
ret
call
int3
ds
inc
push
rcrb
push
or
sub
jp
stc
push
lods
in
mov
sub
ja
jno
imull
push
cltd
dec
add
lds
out
pop
outsb
iret
push
ret
sub
cwtl
imul
pop
nop
mov
pop
push
adc
sbb
push
icebp
mov
mov
int3
fldenv
mov
test
mov
pop
cltd
xchg
jp
cmp
cwtl
pop
inc
je
adc
outsb
and
or
xchg
mov
jns
adc
es
pop
loopne
insl
adc
hlt
and
mov
flds
out
fwait
loopne
inc
es
mov
push
push
push
jbe
dec
loopne
pop
movsb
dec
mov
repnz
bound
sub
stc
pop
or
aas
pop
dec
addr16
push
pop
mov
arpl
nop
sti
push
inc
sbb
jl
call
jmp
sub
jl
dec
dec
sub
and
dec
pop
inc
outsl
mov
fsubrl
inc
mov
mov
mov
xor
sbb
mov
data16
jne
xor
es
test
or
std
cltd
test
jno
loopne
mov
mov
or
inc
cwtl
int
cmc
or
ret
gs
xor
stos
mov
push
test
adc
inc
push
adc
dec
jmp
rolb
mov
cmpsb
jg
xchg
decl
pop
cld
sbb
inc
roll
mov
or
adc
sarl
icebp
adc
xor
pop
adc
pop
and
je
mov
mov
dec
mov
dec
push
in
jl
outsl
enter
rclb
push
repnz
pop
cwtl
in
cmpsl
repnz
pop
btc
jle
mov
call
in
pop
xor
pop
mov
xorl
xchg
ret
nop
repnz
dec
and
negb
clc
adc
pushf
inc
or
or
adc
ss
cmpsl
outsl
arpl
pop
xchg
inc
mov
scas
mov
add
dec
mov
gs
stos
inc
imul
dec
arpl
mov
xlat
and
test
adc
dec
mov
cmp
mov
int3
pop
xchg
lods
aaa
sbb
inc
push
mov
cld
lods
xchg
data16
test
lock
insb
mov
pop
add
mov
ja
loope
dec
pop
arpl
aas
addr16
pop
jno
roll
mov
mov
push
out
lods
sbb
or
or
mov
xlat
push
or
pop
in
xor
cltd
addr16
xor
jno
or
scas
cmp
cmp
push
test
lods
jge
lea
js
jnp
mov
jne
sub
out
fstpl
xlat
out
pop
insb
test
scas
jb
and
sahf
xchg
sbb
outsl
movsb
mov
xlat
mov
cmc
std
pushf
and
jp
subb
jae
mov
popf
in
pop
add
jo
aas
inc
dec
xchg
jb
nop
mov
mov
add
and
adc
mov
adc
add
mov
ja
movsb
and
imul
inc
pop
push
sahf
cld
push
inc
test
xor
aas
in
xchg
shrb
lea
cmp
mov
mov
add
outsl
aad
sub
push
aad
rcl
xor
inc
icebp
pop
mov
sub
mov
leave
jle
popa
scas
adc
push
movsl
add
xchg
cmp
ljmp
adc
sbb
pop
fstps
in
jns
pop
mov
mov
xor
inc
inc
cltd
sti
or
imul
inc
adc
jnp
insl
xor
pop
jbe
sbb
cmp
lret
mov
test
and
xor
pop
int3
push
in
cmp
mov
in
lcall
cwtl
mov
cld
movsb
mov
inc
jnp
or
jns
lods
ss
and
iret
cmc
jo
sbb
fwait
mov
loopne
jmp
inc
xor
and
es
mov
dec
into
sub
sub
lds
pop
stos
daa
mov
imul
pushf
sahf
xchg
scas
mov
lret
bound
fisubl
sti
and
xchg
testl
xlat
push
push
sahf
sbbl
xchg
in
scas
jge
fwait
in
dec
inc
add
in
jl
inc
out
lahf
subl
int
jmp
cmp
into
jg
cmc
adc
sti
inc
popa
stos
out
and
ss
daa
mov
fwait
cltd
adc
clc
jle
xor
pop
mov
fisttpl
push
jge
sub
push
mov
pop
rcrb
pop
jecxz
cs
pushf
mov
dec
push
jb
lock
sub
or
ljmp
push
and
aaa
filds
jo
scas
scas
cmp
negl
mov
pop
sub
inc
lret
push
dec
pushf
jmp
push
in
xchg
dec
pop
stc
sbb
ss
ret
lods
out
jo
push
jmp
test
inc
adc
inc
add
sbb
cmp
xchg
js
sti
mov
fs
push
sahf
cmp
pop
cmc
negb
and
test
mov
enter
xor
mov
cmpsb
rclb
mov
ret
fs
cmpsl
dec
mov
jbe
xchg
gs
imul
rorb
adc
mov
leave
adc
inc
push
jns
jno
add
es
gs
sub
sbb
testl
daa
jbe
inc
sub
xor
inc
jne
dec
cmpsb
popa
push
repnz
push
mov
jle
pop
xor
xchg
add
adc
mov
adc
or
mov
push
subl
lea
cmp
outsl
sbb
sbb
lea
mov
jnp
xchg
scas
sbb
mov
and
cmp
add
mov
pop
std
or
sub
dec
adc
xlat
outsb
jle
sub
cmp
fisttpl
fcoml
sbb
sbbl
sub
sub
ret
dec
lahf
jle
push
fmull
lods
mov
daa
pop
test
pop
ljmp
jle
into
jbe
enter
and
loope
and
lahf
fsubs
daa
jl
out
fsubr
jmp
hlt
push
sbb
cltd
mov
push
es
or
mov
sub
cs
fisttpll
test
mov
xor
sub
pop
nop
jae
lods
mov
sbb
mov
fnstsw
fidivrl
sti
or
daa
xchg
jae
test
pushf
cmp
push
inc
or
mov
mov
add
sbb
std
lret
jmp
sahf
sub
add
xchg
inc
fcomps
data16
dec
movsl
cwtl
mov
jle
cmp
add
adc
inc
in
fwait
out
int
jbe
xor
jmp
mov
mov
adcl
jp
cwtl
mov
stos
ljmp
mov
jp
jbe
mov
stos
xchg
mul
and
movsl
cmc
ss
xor
mov
xor
xchg
xchg
pushf
shl
and
mov
xor
jno
push
in
ja
rcr
jmp
call
or
dec
mov
test
insl
nop
call
mov
cmpsb
jnp
mov
dec
jnp
jb
lret
push
inc
fwait
cmc
add
xor
or
sub
aas
sti
cs
repz
fdivrl
arpl
xchg
outsl
ret
push
fsubl
sub
sub
lea
fnstenv
adc
lcall
aad
outsl
pop
mov
pop
push
fisubrl
dec
cmp
add
cld
push
lods
insb
xchg
xor
out
jl
les
push
sbb
cli
sbb
sub
jecxz
inc
ja
popl
dec
mov
push
inc
pop
dec
xor
inc
mov
stos
test
inc
mov
scas
inc
pop
loopne
xchg
push
sbb
dec
subl
inc
push
jno
and
pushf
xor
cmpsb
adc
pop
inc
pop
lock
or
cmc
aaa
test
cltd
sbb
dec
pop
adc
push
xchg
ficoms
insb
ret
dec
or
data16
adc
push
mov
into
sbb
push
lret
inc
cmpsl
ds
enter
cmp
mov
mov
and
pop
sub
arpl
ret
test
mov
jb
das
outsb
inc
xchg
int
sbb
jb
mov
xchg
arpl
cmp
jp
inc
xor
shll
data16
out
adc
jo
pop
push
and
outsl
jbe
outsl
call
mov
stos
mov
rcr
ret
mov
push
push
fwait
int
icebp
xor
js
into
pop
hlt
fdiv
pop
or
cmpsl
cmp
lods
and
fidivrs
rcrl
pop
or
cmc
xchg
sub
inc
call
cmp
adc
leave
pusha
sub
xorl
movsb
add
outsb
aaa
adc
cmpsb
jbe
inc
dec
mov
adc
sbb
add
fs
push
sbb
xor
mov
dec
add
stos
je
sti
push
pushf
popa
push
loopne
adc
and
jmp
jno
add
mov
outsb
lahf
and
xor
adcb
push
jecxz
stos
in
nop
xchg
push
leave
mov
adc
mov
mov
adcb
in
jne
mov
pshufw
xchg
or
mov
inc
jmp
enter
pusha
ds
movsl
xchg
mov
jae
test
jecxz
ja
xchg
into
xchg
pop
leave
stc
in
test
xor
lock
jns
adc
stc
jg
fsubl
mov
or
push
aad
nop
lds
repz
push
test
adc
xor
adcb
mov
pop
pop
inc
cltd
add
mov
test
push
in
mov
stos
mov
stos
push
mov
arpl
mov
lock
rol
xor
flds
xchg
or
and
test
jbe
mov
adc
xor
cmpsl
in
test
leave
and
and
scas
stc
sahf
push
mov
out
pop
lret
cld
pop
jb
fldenv
addb
aas
lea
jne
mov
adc
sbb
add
sub
pop
pop
jo
inc
jno
out
test
or
and
push
xor
inc
sahf
outsl
cld
push
popf
xacquire
jmp
pop
xchg
sti
xchg
jb
sub
inc
xchg
sbb
dec
gs
push
in
jne
call
imul
sub
repz
mov
in
pop
mov
pop
adc
addb
mov
stos
push
pop
out
inc
insb
inc
andl
movsb
movsb
enter
insb
jle
cltd
fidivs
aam
mov
divl
loop
and
pop
cmc
pop
jns
push
lahf
mov
add
sub
jge
rorl
and
mov
lahf
jne
call
aad
repnz
mov
addr16
or
cmc
cwtl
nop
jge
sbb
xchg
mov
fisubs
iret
cmpsb
into
enter
fcmovne
sarb
arpl
jbe
adc
mov
dec
cmpsl
or
imul
and
mov
jg
jb
sub
dec
or
test
mov
adc
outsl
and
cmpsl
andl
pop
mov
fucomip
ljmp
xlat
cmp
mov
push
sub
mov
mov
iret
adc
jb
test
mov
push
mov
xor
adc
sub
jp
js
push
arpl
repz
sahf
jmp
stc
lahf
xor
cld
orl
add
arpl
jb
mov
inc
jecxz
repnz
clc
push
pop
out
mov
leave
mov
cli
add
cmc
jmp
aas
push
inc
add
add
cmpsl
and
es
out
mov
adc
cmc
int3
jg
jmp
pop
lock
xor
xchg
jne
inc
or
loop
sub
packsswb
add
adc
iret
arpl
subb
cld
xlat
push
jno
or
mov
je
into
int
inc
lods
push
push
mov
dec
arpl
jge
xchg
cmp
iret
paddsw
ret
daa
outsl
inc
loopne
sbb
mov
mov
inc
sub
inc
test
out
pop
inc
push
stos
xchg
loope
sub
push
add
cs
lea
inc
sbb
into
pop
int
js
vmovaps
cli
xor
in
jge
das
scas
scas
call
test
mov
int3
fwait
stos
orb
daa
das
daa
aad
add
xor
xor
inc
les
push
jge
out
sbb
inc
add
and
test
pop
dec
and
cmp
and
leave
lret
jge
or
jle
add
sahf
lds
imul
cmc
and
sub
xor
fbstp
lock
lods
pop
mov
mov
aad
repnz
mov
sahf
sub
das
mov
adc
mov
addr16
sub
jae
push
cwtl
push
ficoms
sbb
out
xor
jne
cmpb
xchg
jecxz
popa
int
add
inc
mov
mov
aam
rclb
push
popf
iret
incl
push
push
jecxz
cltd
std
test
mov
mov
jb
xor
sub
pop
cs
lock
int
fsubl
loope
mov
jge
insl
mov
jb
es
jae
test
xchg
xchg
xor
out
xchg
push
ret
push
hlt
mov
push
iret
scas
xchg
test
nop
fcomi
ja
in
and
inc
ret
sub
mov
fstl
lods
sbb
mov
push
mov
shlb
add
stc
mov
sbb
daa
mov
or
adc
jne
enter
sbb
orl
std
xchg
pop
sub
dec
push
repnz
sub
jns
cmp
push
ficoms
mov
mov
das
push
mov
push
lock
push
clc
pop
adc
cld
cmp
in
daa
xchg
fidivs
inc
mov
mov
add
pop
push
add
add
jnp
add
xchg
sub
pop
out
test
sti
or
je
aad
push
xchg
sbb
add
mov
push
in
mov
cltd
dec
mov
and
imul
aam
shufps
sub
mov
xchg
imul
jmp
bound
iret
pop
aaa
rorl
leave
fsubl
jnp
repnz
orl
xchg
repz
push
sub
lea
xchg
iret
push
test
stos
cli
in
repz
mov
test
lock
div
enter
push
add
sbb
push
fprem1
test
mov
lea
mov
or
bound
clc
outsb
add
insb
cli
mov
lahf
mull
or
movsb
xor
fsubrs
cmpsl
mov
jae
jae
mov
lret
pop
cmp
ja
sub
in
pop
xor
and
xor
jno
inc
add
add
jge
inc
push
jb
dec
and
mov
or
mov
jge
inc
notl
rcrl
in
add
clc
jle
addr16
fisttpl
sahf
xor
push
add
es
mov
pop
cmpsb
lcall
mov
ffreep
xor
std
ljmp
pop
les
ret
repz
fmulp
pushf
sbb
mov
rorl
sbb
cmp
cmp
fs
jno
sub
inc
ficoml
add
xchg
mov
push
cmpsl
inc
push
sub
mov
or
lret
sub
outsb
and
push
hlt
cmp
sbb
out
cli
pop
xor
test
lahf
add
sbb
int3
jo
jae
xchg
gs
out
and
pusha
imul
insl
jo
push
ss
and
frstor
xchg
push
and
jecxz
bound
scas
ja
popa
fimull
loop
cld
pop
sub
cmpsb
pop
pop
sbb
imul
xor
inc
push
inc
jmp
and
imul
dec
out
xlat
mov
dec
ret
icebp
aam
adc
xor
sub
hlt
testl
push
outsl
daa
cltd
dec
clc
dec
mov
xor
and
outsb
dec
cltd
adc
je
aaa
data16
lret
sbb
adc
mov
sbb
xchg
push
xor
ja
pop
mov
or
and
sbb
mov
ret
dec
inc
cmc
cmp
push
cmp
vmovshdup
ljmp
cltd
mov
mov
lret
adc
fucomp
xor
cli
stos
push
mov
mov
iret
or
aad
mov
icebp
pop
out
fwait
and
pop
out
xchg
int3
pop
jecxz
sub
push
lcall
divl
jl
cltd
mov
jg
insb
cmp
cltd
outsb
jl
mov
rol
aam
add
sbb
mov
jo
frstor
pushf
and
les
pop
pop
cmc
js
outsb
jge
sbb
add
shlb
shrb
add
daa
lahf
lock
mov
aas
cmpsl
xor
add
mov
notl
pop
mov
add
jbe
addr16
loop
cmp
inc
arpl
test
int
sbb
dec
aas
mov
sub
stos
push
in
shl
sub
dec
aam
lea
std
clc
or
dec
xor
xor
push
adc
adc
repz
pop
fidivrs
fscale
sbb
fwait
div
jnp
cmp
mov
cmpsb
out
xchg
pushf
mov
sbb
mov
mov
fstpt
int
xor
push
scas
dec
sub
inc
mov
jmp
repz
sarb
push
into
jno
aad
cmc
es
or
gs
lret
xchg
mov
or
pop
inc
in
lods
and
out
leave
xor
lods
mov
ficomps
jecxz
shrl
ljmp
pushf
jae
fiaddl
mov
xor
inc
in
arpl
out
xchg
scas
mov
nop
into
or
jp
mov
int3
jl
jmp
push
leave
dec
lea
dec
mov
popa
and
and
push
cmpsb
ret
sbb
adc
mov
jmp
fistl
inc
flds
fisttpll
out
mov
in
push
outsb
adc
pop
in
aaa
add
stos
ja
ss
fs
insl
jae
mov
xchg
jno
or
out
xchg
push
aaa
pusha
or
xchg
sub
push
out
mov
outsl
xorl
push
and
xchg
pushf
in
mov
sbb
inc
je
clc
rorb
push
inc
mov
lret
jb
stos
mov
or
sbb
cwtl
fldl
icebp
add
popa
lret
and
push
mov
jno
inc
rcl
lret
mov
mov
mov
and
push
lods
sub
sub
dec
nop
or
sub
out
lcall
and
mov
cmp
xchg
nop
movsl
jae
push
mov
int3
out
jae
bound
xchg
out
and
out
ja
outsb
cs
adcl
sub
pop
adc
rcrl
insl
scas
testb
ds
xor
fisubs
fs
out
mov
inc
jne
cltd
rcrb
xor
movsl
lods
ss
mov
lock
or
jecxz
js
lods
aam
or
fisubl
stos
xchg
lods
insb
cli
stos
arpl
rorl
outsl
mov
jbe
xor
addr16
push
hlt
stc
pop
sbb
out
mov
aas
mov
hlt
mov
loopne
jns
mov
inc
leave
mov
das
inc
mov
xchg
xchg
and
data16
adc
jne
dec
xor
cwtl
jae
test
and
fsubrp
push
dec
mov
stos
dec
xor
sti
push
leave
xlat
jae
std
rsqrtps
fbld
fs
inc
or
mov
pop
mov
sub
ja
sub
daa
mov
pop
cmp
xor
orb
sub
mov
rorb
xchg
xor
push
bound
xchg
mov
loop
jl
js
popl
cmp
or
sub
and
aaa
add
inc
or
inc
pusha
popf
popf
xor
mov
mov
cwtl
lcall
lods
aam
sub
mov
add
lret
divl
addr16
sbb
xchg
loopne
ret
shll
xor
cmpsl
arpl
out
testl
inc
cld
pop
jb
lret
adc
push
or
je
sub
arpl
xchg
mov
int3
jmp
add
outsl
fcomps
fistps
fsts
pop
adc
rolb
mov
inc
push
xchg
inc
andb
nop
jg
int3
pop
aaa
mov
ret
test
mov
inc
hlt
jl
sub
rcrl
mov
sbb
jnp
adc
cmp
xor
adc
inc
push
mov
test
xchg
lret
jmp
je
dec
or
push
xor
xchg
xchg
sti
rolb
mov
aaa
mov
jae
addr16
cmpsb
xchg
mov
push
in
cmpsb
cmp
mov
imul
mov
aaa
and
pop
mov
loop
push
lds
es
cmp
mov
mov
scas
cmp
pop
iret
xor
mov
test
xchg
push
push
xchg
push
outsl
jnp
sti
test
adcb
jbe
and
pop
ficomps
jmp
xchg
ja
mov
pop
push
and
addr16
test
or
js
pop
stos
jp
cmp
push
mov
stc
or
jb,pn
shrl
cmpsl
clc
pop
dec
mov
xor
imul
add
inc
scas
fisubl
imul
cmp
push
insb
push
mov
mov
push
aam
add
fucomip
add
push
es
cld
mov
xor
icebp
sbb
test
push
cmpsl
add
sub
cs
and
mov
fisubs
jnp
or
pop
cmp
xor
mov
lods
repz
js
out
sub
inc
pushl
test
mov
push
dec
mov
stc
jp
mov
mov
or
andb
xchg
mov
rcl
ficoml
dec
jle
jge
lret
xchg
jno
adc
in
frstor
jbe
stos
push
insb
inc
inc
mov
xchg
sbb
mov
pushf
mov
shll
bound
sbb
scas
sbb
jnp
insb
cmp
int
pop
pop
fiadds
adc
mov
cmpsb
gs
add
repnz
adc
stc
insb
icebp
in
dec
mov
and
sub
jae
aas
into
mov
int
mov
or
mov
mov
test
scas
lock
mov
pop
xor
fisttpl
rclb
aaa
test
mov
xchg
xchg
mov
jb
pop
and
leave
mov
sbb
into
adc
and
push
xor
stos
xor
stos
icebp
xor
idivb
xor
lock
inc
and
andl
add
xchg
pop
repnz
mov
hlt
das
in
jo
adc
inc
or
mov
idiv
xchg
jg
fnstenv
dec
addr16
lods
fwait
mov
in
jns
xor
push
into
jg
and
inc
test
loope
mov
int
pop
and
cmp
loope
jmp
dec
jno
add
imul
js
xchg
mov
out
cli
cwtl
xchg
outsb
sub
dec
pop
cmp
and
mov
inc
test
mov
pop
into
push
into
nop
cmp
inc
test
les
test
adc
sahf
mov
pusha
divl
outsb
sub
mov
mov
test
pop
dec
stos
cmp
stos
addr16
pop
cltd
cvtpi2ps
and
insl
xchg
jle
pop
fdivs
cmp
pop
test
jnp
test
jo
cmpsl
xchg
mov
std
ds
mov
jns
xchg
sarl
cmp
lret
pushf
out
dec
dec
mov
nop
daa
xchg
scas
inc
pop
sbb
stc
cmp
jo
mov
insl
xor
pop
xchg
xchg
add
mov
push
mov
and
mov
push
vphaddbw
cmp
fs
cmpb
jl
sarl
mov
jo
sub
xchg
popa
into
mov
pop
pop
dec
dec
fxch
repz
push
sbb
rorl
out
jecxz,pn
mov
xchg
cmp
hlt
test
xor
test
dec
fucomip
mov
aaa
fdivrp
cld
imul
xor
stos
in
int
fs
fstps
decl
xchg
jecxz
dec
jge
push
and
mov
popf
iret
fisubs
sbb
repnz
dec
mov
jo
inc
popa
xchg
popf
mov
or
iret
push
or
int3
push
lea
jecxz
ret
xor
imul
add
out
pop
dec
lea
int3
cmpsb
add
bound
dec
hlt
scas
push
push
jnp
pop
leave
xor
xchg
sub
pop
cmp
loopne
push
nop
iret
les
fcmovnu
cli
popf
nop
clc
sbb
cli
ret
sub
lock
adc
and
popf
fcomps
popa
mov
imul
jb
jmp
or
xchg
mov
outsl
push
jmp
add
test
lea
cli
bound
sbb
pop
popa
jnp
ret
xchg
jns
mov
test
lret
jb
xor
mov
mov
arpl
test
movsl
cmp
inc
stc
or
ret
loope
sub
shll
cwtl
mov
xchg
pop
icebp
enter
pop
mov
lret
mov
dec
test
shlb
push
push
mov
stc
dec
lock
sub
imul
cwtl
in
sbb
mov
adc
shll
dec
pop
adc
or
mov
rcl
sbb
dec
pop
jecxz
mov
bound
xor
push
loop
mov
jl
mov
jne
movsl
sbb
mov
fldt
or
aad
add
test
pop
adc
mov
mov
lcall
in
inc
in
or
lret
cmp
push
std
jo
ljmp
mov
sub
or
arpl
mov
cld
pop
and
sbb
repz
out
lahf
idivl
jns
pushf
xchg
xor
pop
ret
jnp
outsb
lds
mov
sub
sub
loopne
jecxz
jg
shll
sub
add
mov
add
cmp
xchg
mov
lahf
jg
push
cmp
rcrl
mov
test
add
mov
cld
cmc
push
clc
add
clc
enter
add
pop
inc
xchg
or
cmp
pop
ret
mov
mov
xchg
or
lret
push
mov
and
inc
inc
adc
lret
dec
iret
movl
test
and
scas
adc
fucomip
mov
insb
lods
adcb
testb
sub
cli
hlt
pop
movsl
out
pop
mov
mov
pop
xor
test
sub
rclb
inc
pop
mov
dec
mov
fstpt
dec
and
fisubl
jne
ret
andl
mov
push
pop
icebp
dec
and
js
push
mov
pop
cli
mov
add
pop
fidivl
sub
inc
xor
cwtl
push
loopne
mov
mov
dec
out
in
sahf
fisttps
in
icebp
mov
fidivs
mov
shlb
je
mov
jp
out
jae
jg
xchg
pop
lds
sarb
sbb
mov
sarb
fucomip
jp
add
or
xor
out
cltd
push
sbb
or
push
int3
movsl
dec
enter
js
push
jecxz
daa
jbe
pop
test
dec
cmp
mov
sarl
or
xor
cs
testb
pmaxsw
mov
daa
mov
out
xchg
pop
push
sbb
ljmp
bound
mov
adc
lcall
push
push
push
fisttpll
inc
jl
or
aad
je
dec
cmp
ds
out
push
sbb
mov
push
addr16
sub
rcrl
movsl
dec
sbb
in
xlat
mov
dec
adc
and
lret
cmp
mulb
push
fistpll
loopne
inc
or
jb
push
jns
ja
cmp
mov
mov
cmp
mov
xchg
jo
dec
loope
cmp
push
fiadds
movsl
cmc
push
sub
hlt
mov
movsl
jmp
or
cmp
adc
repz
mov
nop
mov
add
sbb
insl
xchg
mov
test
testl
and
sub
pop
or
adc
add
jmp
xchg
imul
sub
frstor
addr16
mov
lock
les
xorb
rcll
add
mov
repz
dec
lret
aaa
int3
pop
jnp
mov
sarb
xor
ja
xor
mov
ljmp
test
jo
lret
shr
js
push
xchg
push
mov
push
neg
fisttpl
inc
jae
lds
shl
jle
icebp
scas
sub
pop
fldcw
ret
sub
pop
and
lsl
xchg
xor
pop
dec
xchg
loopne
mov
lock
and
mov
fsts
out
ret
ss
lcall
xor
or
sti
xor
mov
pop
and
cmp
ja
fists
pop
scas
je
sub
int
lods
mov
jmp
outsb
sbb
sbb
xchg
jp
adc
cmpsb
mov
xchg
sub
mov
call
cmp
mov
dec
movsl
daa
jle
fmul
cwtl
test
sub
clc
sahf
inc
es
insl
adc
add
mov
insb
pop
rorb
sub
in
xor
cmpsb
mov
icebp
add
add
movsl
sub
mov
cmp
imul
jg
mov
push
adcb
fsubr
xor
jnp
xchg
adc
push
js
movsl
out
test
jmp
push
mov
scas
scas
ficoms
dec
jb
inc
movsb
insb
cwtl
inc
xchg
push
adc
cld
test
jl
or
adc
push
clc
mov
sti
or
push
imul
add
lds
sti
xchg
add
inc
std
pusha
imull
pushaw
sbb
jl
mov
insb
push
push
jno
add
cld
pop
repnz
test
or
cmp
fistps
mov
bound
mov
or
or
xchg
and
fcmovu
dec
pop
add
inc
movsb
inc
fldt
push
int3
nop
mov
xlat
cmpsb
mov
clc
sbb
movsl
inc
mov
je
mov
dec
pop
std
and
cs
push
out
test
jne
add
and
push
popf
or
mov
ss
mov
add
dec
xlat
ljmp
jb
movsb
xor
cld
inc
into
add
cmpsl
sbb
ds
out
vpmaxsw
aad
lds
shll
and
loope
fcmovne
pop
nop
mov
notb
rcll
pop
cmp
mull
add
mov
add
lea
jp
mov
mov
test
loopne
mov
test
and
inc
xor
sbb
push
lods
cmpsb
das
xor
hlt
jae
or
push
sub
neg
adc
scas
add
mov
mov
mov
inc
ljmp
fldl
hlt
and
sbb
mov
sbb
out
xor
enter
pop
pushf
inc
scas
fcmovu
pop
xor
push
stos
repnz
sti
inc
inc
mov
xchg
daa
notl
mov
out
cli
in
dec
scas
test
inc
clc
fwait
andb
xor
nop
adc
add
xchg
add
or
out
cmp
inc
dec
jns
push
jmp
insl
mov
mov
lods
add
pop
and
cmp
sbb
ss
sub
ja
mov
aam
add
xor
int
pop
sub
add
flds
mov
and
mov
mov
push
scas
or
push
test
pusha
pop
repnz
ss
sbb
cmpb
push
ja
mov
cmc
test
mov
sub
stos
dec
lods
fisubrl
xchg
adc
xor
or
adc
pushf
xchg
fstpl
push
mov
or
or
test
ljmp
rorb
lds
pop
push
sub
push
movsl
icebp
movsl
test
lock
mov
mov
jle
lret
pop
adc
lock
mov
sbb
mov
lock
call
or
arpl
fdivl
sarb
int
ds
aad
jns
test
daa
pop
jne
fwait
ret
mov
popf
repz
in
sub
adc
fsts
adc
js
ljmp
xchg
cmpsl
mov
mov
pop
aad
cmp
std
popf
jg
pop
mulb
and
mov
adcb
std
shl
pop
and
ret
lds
pushf
rcrl
out
jnp
pop
lea
add
mov
aaa
sub
repnz
cmp
arpl
pop
jno
stos
mov
clc
or
mov
mov
rcr
addr16
mov
xchg
pop
imul
push
movsl
cld
fisttpll
push
xlat
imul
addr16
and
cli
jno
jno
lahf
xchg
adc
sbbb
fcoms
xor
leave
xchg
pop
bound
ja
popf
sbb
stos
ja
mov
in
mov
lret
and
add
and
or
mov
or
mov
shll
or
add
rcr
jno
pop
pusha
ljmp
js
icebp
or
jl
pusha
lcall
inc
jecxz
cld
out
aaa
movb
push
es
xchg
test
icebp
movsl
or
negb
pop
and
test
lcall
mov
jne
mov
push
popf
mov
stos
call
cmp
loope
jmp
inc
push
push
xlat
sub
repz
ds
and
mov
rol
sbb
shr
jl
divl
mov
fisubl
adc
cmpsl
or
pop
ja
shlb
mov
je
and
imul
mov
imul
stos
lea
jl
pop
imul
decb
dec
add
pop
jg
push
imul
dec
push
outsb
cmc
repz
mov
mov
and
cmpsb
and
push
mov
rcl
out
pop
sub
sbb
mov
add
rcrb
xlat
sbb
inc
xorl
ljmp
lcall
lea
inc
in
cmpl
lea
adc
test
cmp
mov
and
out
adc
xlat
and
and
fimuls
fstpt
xchg
push
mov
nop
les
mov
imul
push
gs
jb
fwait
pop
mov
bndstx
xor
push
jmp
mov
cmp
shrb
ds
inc
loop
pop
test
mov
sbb
pop
push
mov
push
inc
jno
inc
outsl
pop
or
nop
push
mov
sbb
sti
insl
scas
xor
test
mov
iret
sub
fiadds
insb
xchg
pushf
mov
sti
fwait
mov
mov
xor
loopne
out
lods
lret
xor
lds
cmp
paddb
mov
and
cwtl
xchg
jl
out
mov
hlt
mov
arpl
pop
cmp
cmp
jecxz
sarl
xlat
dec
fucomp
jecxz
pop
mov
push
adc
lds
or
shlb
push
xor
lods
inc
stc
xor
pushf
dec
in
cmp
lods
clc
popa
fmuls
cmpsl
maxps
jno
sub
xchg
sub
das
mov
call
dec
push
iret
andl
filds
mov
adc
out
add
rcrb
cs
push
daa
cmc
adc
add
mov
push
pop
cmc
cmp
mov
sbb
fwait
nop
imul
icebp
popa
mov
sub
or
cmpsl
and
ja
adc
dec
jp
nop
and
push
cmp
out
push
ret
lahf
popa
jp
sahf
lahf
cmp
scas
divl
add
pop
mov
inc
lahf
outsl
push
add
mov
clc
xor
mov
int3
in
jg
fsubl
rolb
mov
fwait
cmpsl
imul
or
add
pop
cmp
dec
dec
fstpt
pop
out
mov
sbb
adc
mov
mov
mov
adc
ja
out
or
xor
fidivl
and
fsubrl
call
adc
push
jne
std
or
sbb
add
rclb
fdivrl
imul
push
mov
jecxz
leave
cld
push
lret
mov
jp
mov
mov
fistps
loop
or
stos
mov
lcall
std
movsl
ret
pop
inc
mov
enter
adc
adc
xor
mov
adc
iret
test
mov
je
pop
adc
pop
and
sub
loopne
das
xchg
inc
int3
xorl
data16
dec
rcrb
insb
jle
cmpl
dec
test
dec
mov
mov
push
in
sarb
pop
sbb
fsubrl
lods
sub
sbbl
push
test
lea
or
jns
xchg
ja
dec
dec
divb
sub
or
negb
mov
or
outsb
adc
fisttps
std
sarb
lcall
jp
rcl
xor
fildl
add
movsl
and
adc
mov
fists
orl
xchg
inc
out
lcall
sbb
dec
add
call
jmp
mov
xor
fnstsw
push
inc
cli
pop
rorl
rcr
cmp
fldl
mov
mov
scas
jb
or
lods
lock
xor
in
cmp
aaa
cmp
add
leave
add
pop
mov
aad
and
xor
test
ficoml
inc
jp
jg
mov
and
adc
adc
iret
pop
leave
jmp
lods
pop
vrsqrtss
stc
mov
sbb
sbb
push
and
push
xor
std
xor
js
lret
dec
loopne
xchg
add
dec
mov
fldenv
adc
xchg
ja
mul
mov
movsb
shl
sub
pop
je,pt
lahf
mul
jno
pop
push
in
jp
mov
or
mov
lods
mov
xchg
daa
pop
mov
add
lahf
pop
sub
or
jle
push
mov
xor
fiaddl
out
mov
mov
loop
dec
or
xchg
cmp
pop
adc
xor
iret
fldenv
cmpsl
and
and
cmc
xchg
scas
cld
dec
pop
sbb
dec
leave
mov
cmp
inc
leave
dec
stos
aam
jge
mov
movsl
add
or
inc
push
movsl
sbb
xlat
aas
loope
adc
push
xchg
std
sub
lahf
push
jo
addl
xchg
pop
stc
out
jecxz
ficomps
cmc
or
sbb
stc
push
xor
dec
lods
std
xchg
fisttps
push
cmp
fidivl
push
sbb
jecxz
pop
stc
pop
dec
adc
fwait
xchg
dec
rclb
xchg
stos
div
xlat
mov
daa
pop
in
xchg
subb
daa
lret
mov
lock
fwait
fs
shr
pop
push
and
mov
and
cmp
sbb
fiaddl
iret
out
inc
sahf
rorb
scas
das
mov
jp
imul
das
xchg
add
out
fdivp
shl
loop
and
mov
or
mov
sub
dec
decl
repz
sub
pop
pop
fldcw
movsl
cltd
xchg
rep
mov
jl
mov
flds
cli
mov
jge
xchg
stos
inc
sbb
push
adc
std
and
or
dec
mov
mov
aad
xchg
loop
sub
or
pop
lods
pop
push
or
or
jnp
int
mov
mov
mov
rorl
std
in
dec
inc
push
test
adc
and
lods
inc
sbb
adcb
mov
divl
inc
sti
jbe
mov
in
push
sahf
test
mov
mov
add
in
xchg
sub
cld
stos
in
push
test
fidivl
sti
jo
or
and
mov
push
and
fisubs
cs
sti
and
fidivl
lea
mov
addr16
mov
xchg
cmp
lcall
sbb
sub
sbb
lods
fisubrl
lods
sbbb
mov
outsb
out
pop
sbb
add
divb
addr16
out
sahf
nop
or
push
inc
mov
popa
insl
dec
int
push
ljmp
mov
bound
imul
mov
sub
jle
inc
fsubs
test
lahf
cmp
xchg
add
icebp
xchg
scas
sbb
cmpsb
xchg
lcall
popf
or
fstpt
push
dec
push
inc
jl
fwait
test
mov
jp
jl
addr16
pop
xchg
add
pop
aaa
fbstp
inc
xor
dec
or
dec
dec
push
mov
or
mov
dec
xor
adc
aas
loopne
xchg
in
negb
mov
dec
lret
in
aam
clc
dec
push
sub
mov
jecxz
jbe
ja
cmp
cmp
mov
das
dec
call
out
bswap
aas
dec
adc
add
stos
xchg
insb
push
roll
sti
jp
mov
cmp
stc
sub
push
neg
addl
loop
cltd
dec
pop
and
xchg
adc
int3
scas
add
mov
movsb
jns
pop
mov
adc
pop
mov
cmp
loope
push
aaa
jle
jne
inc
test
insb
outsl
jnp
adc
fcomps
adc
nop
push
push
push
dec
fwait
lods
cmpsb
into
xor
pop
mov
mov
cmp
add
mov
icebp
aas
scas
add
dec
mov
xchg
fisttpll
insb
fstpt
ljmp
pop
or
shl
aas
push
mov
dec
popl
and
pop
push
inc
push
faddp
popf
pop
jge
ret
imul
mov
adc
push
mov
mov
hlt
dec
cmp
shll
xor
lcall
cmp
sub
out
outsl
dec
mov
push
xchg
and
sbb
xchg
dec
pusha
cli
pop
pop
cs
sub
sbb
and
cmpsl
mov
ja
pusha
pop
fstl
push
addr16
mov
mov
ljmp
in
cli
push
dec
cmp
jb
enter
outsb
adc
fists
xlat
mov
addr16
mov
test
cs
loope
xchg
fs
pop
cmp
nop
dec
test
in
loope
mov
subb
scas
mov
mov
cmp
pusha
cli
test
cs
leave
outsb
repnz
dec
xlat
pop
test
dec
jg
cmp
test
jne
icebp
nop
dec
pushf
and
xchg
aad
pushf
mov
mov
dec
xchg
jl
sub
inc
movsl
add
movsb
fbstp
int
in
loop
stos
adc
orl
xchg
cmpsl
mov
cmp
jno
jl
js
imul
mov
mov
scas
cmc
test
cmp
dec
or
push
jns
je
pushf
scas
insl
lods
add
addl
lahf
jnp
lret
orb
pop
xlat
mov
mov
adc
lods
jbe
in
sbb
fldcw
mov
negb
pop
jmp
xchg
pushf
leave
mov
xor
ss
push
push
rorl
add
lea
push
jmp
std
mov
loope
inc
imul
in
scas
dec
and
or
fistl
pop
imul
scas
stos
movsb
in
push
jne
outsl
add
cmp
and
dec
pushf
inc
jmp
ja
scas
leave
mov
out
ss
or
add
add
test
cmp
scas
cmp
cmp
mov
and
lods
pop
outsb
pop
sub
fstpl
test
mov
cmp
out
hlt
adc
pop
cwtl
or
mov
test
mov
mov
lret
mov
push
test
inc
jae
or
aas
mov
or
fimuls
fisttpll
cmp
stos
fldl
sub
andl
popl
gs
imul
mov
test
xor
lret
pop
into
scas
jno
jne
jb
in
fcomps
xchg
push
add
or
pushf
repz
jno
subb
dec
lcall
and
int
testb
xor
imul
cmp
add
mov
push
out
dec
outsb
test
cmp
xor
and
push
mov
popa
insl
test
cmp
cmp
adc
and
into
jb
jbe
or
xor
lret
jg
hlt
xchg
inc
mov
dec
dec
adc
push
lods
jecxz
cli
cmp
fnstsw
scas
popf
push
jmp
pop
lods
ljmp
inc
stos
fiadds
jg
je
adc
mov
jno
ja
clc
sahf
rcrl
adc
adcl
ret
and
push
cmpsl
addb
int
gs
mov
in
rcl
aam
ret
movsb
repnz
mov
cwtl
and
popa
lods
cmp
out
pushf
clc
mov
cmpsl
mov
push
jmp
mov
adc
mov
aaa
shrb
mov
loopne
enter
mov
or
cld
xchg
out
divl
incl
sbb
xor
out
cmpsl
mov
popf
dec
mov
stos
xchg
xchg
adc
sbb
mov
int3
add
and
insb
movsl
xor
or
scas
adc
pop
call
inc
xchg
outsl
loop
out
and
and
cmpsl
enter
mov
adc
cmp
cmp
adc
sbbb
mov
loope
adc
sbb
test
add
sbb
out
xchg
inc
pop
lcall
push
fmul
mov
cwtl
pushw
add
push
adcb
jnp
bound
arpl
inc
dec
ucomiss
repnz
aad
jno
stc
and
dec
scas
push
out
mov
fsubrs
int
bound
repnz
inc
lret
xchg
add
cmp
cli
jmp
push
pushw
outsl
add
jno,pt
xchg
ja
and
ljmp
repnz
or
shl
dec
into
fdivrl
rorb
lret
mov
jbe
push
daa
ljmp
fwait
in
lea
xchg
jno
subl
cltd
sbb
icebp
adc
inc
jmp
push
ss
pop
cld
cmovp
in
lret
movsl
push
sub
xchg
aas
cmpsl
rcrb
inc
ja
shrb
in
stos
or
rcrl
out
or
xor
scas
out
and
orb
scas
xor
lock
push
call
push
repz
and
es
in
test
xchg
out
pop
insb
sub
cmp
dec
lock
dec
pop
dec
mov
jns
js
sub
loopne
sub
lods
mov
lds
sbbb
jbe
out
mov
or
mov
mov
in
lea
femms
cmpsb
js
aaa
pop
nop
test
aaa
in
dec
shrl
add
and
lds
and
cmp
inc
mov
jne
ljmp
push
inc
cmpsl
sarb
mov
orl
xor
es
sub
testb
jecxz
test
out
es
mov
mov
lods
mov
mov
lock
lods
arpl
lea
push
pop
cmp
xlat
imul
sbb
daa
ss
xlat
jmp
pushf
insb
mov
pop
loope
lods
xchg
ja
and
push
jae
mov
mov
xor
rorl
pop
mov
idivb
loop
sub
lcall
and
mov
lret
ja
inc
int3
adc
adc
out
push
sub
pop
mov
mov
data16
add
xchg
xor
pop
outsl
test
ss
fldl
mov
cmpsb
inc
push
rcrl
mov
idivb
sar
shrl
arpl
jge
xchg
cmpxchg
mov
mov
jp
inc
fstp
pushf
sbbl
jge
mov
add
dec
sbb
jecxz
and
out
cli
and
adc
stos
cmpsl
cs
mov
test
mov
clc
lret
ss
test
mov
out
ret
mov
or
loopne
imul
fcmovne
sbb
xchg
push
jno
fldl
jl
das
ficoml
or
negl
or
fidivl
pop
inc
es
popf
jl
cmpsb
aas
lods
mov
subb
push
push
cli
and
or
mov
mov
lea
sbb
orl
dec
and
insl
jae
int3
inc
dec
insl
aaa
xchg
call
mov
nop
cmc
test
push
mov
inc
sbbl
addl
sub
sbb
add
test
lret
fs
imul
out
xchg
fildll
add
cmpsb
cmp
jge
sti
stos
int3
mov
mov
pushf
lods
dec
mov
pop
ss
lcall
cmpsl
mov
mov
push
loop
cmp
xchg
add
cmp
mov
adc
les
fnsave
lcall
dec
xor
dec
cmc
xor
inc
aam
insl
push
inc
xchg
cmp
mov
aas
fucomi
pop
cmp
push
cmp
lret
in
sahf
xor
xor
mov
js
out
push
adc
jo
push
adc
je
int3
mov
and
fiaddl
adc
pop
fs
in
jmp
inc
xchg
xchg
add
dec
pop
andb
jb
push
fadds
lret
fadds
add
mov
outsl
sarb
jg
in
enter
outsl
pop
cld
lcall
push
adc
ret
or
jecxz
sub
jle
fdivrl
xor
int
or
test
mov
cmpsb
xchg
mov
test
dec
add
shll
je
cmpsl
sbb
incb
testl
ffree
bound
int
inc
mov
mov
xchg
dec
addl
movb
inc
and
push
adc
or
jne
loop
cmpsl
jle
inc
jmp
xor
mov
ret
cmp
leave
sbb
jne
push
ret
in
and
iret
fcmovb
sbb
inc
aas
aaa
xlat
out
inc
pushl
rcll
xchg
lods
xor
jge
cmp
jp
dec
inc
jnp
loop
scas
dec
push
loope
js
pop
loopne
in
sub
push
mov
jmp
or
xchg
pop
mov
push
xchg
dec
pushf
test
jns
mov
dec
pop
cmc
mov
mov
in
mov
ja
inc
lret
xlat
out
lea
and
jbe
sarl
jge
sub
nop
loop
icebp
cmc
push
lods
sbbl
mov
rol
into
imul
out
stc
pop
or
adc
sub
ud0
xchg
pop
xor
mov
push
sahf
jne
mov
clc
pop
xor
cmpsl
jmp
ret
fidivrs
mov
lret
out
notb
cmpsl
and
stos
mov
sbb
test
stc
lret
jle
int
pop
in
sub
fistpl
test
xor
and
in
jnp
xor
mov
test
fwait
cmpsl
xchg
rcrb
nop
lock
sar
loopne
imul
or
and
lods
cs
dec
jge
push
dec
mov
sbbb
movsl
cli
adc
sub
pop
cld
repnz
popa
push
shll
int
xor
jecxz
insl
jno
cmp
iret
adcb
ss
jb
adc
lret
je
xlat
sbb
xchg
jg
stos
or
mov
lods
lods
cmp
movsb
inc
testl
movsl
data16
or
mov
adc
sbb
sbb
add
aam
loopne
mov
sub
cmpsb
sub
add
insl
inc
les
imul
cmp
rorb
add
mov
mov
push
cmp
jl
xor
fdivrl
lahf
pop
xchg
cmp
rcrb
call
sub
sub
lcall
cwtl
or
lret
outsl
cmp
mov
and
dec
lcall
in
outsb
add
and
mov
pop
mov
fxch
inc
mov
push
imul
xor
cmp
imul
sbb
mov
pushf
rcrb
jae
or
add
or
and
and
out
lods
dec
ss
icebp
cmp
pop
repz
jnp
inc
outsl
xchg
xrelease
dec
add
clc
mov
loop
push
clc
in
call
rol
ljmp
jp
into
pop
out
orb
adc
int3
nop
lcall
hlt
int
add
test
sub
dec
shr
mov
mov
jno
pop
fisubrl
mov
lcall
iret
pop
mov
sub
mov
int3
jbe
aaa
xchg
stos
sahf
mov
scas
mov
jg
test
ret
in
addr16
mov
jl
int
mov
sbb
xor
aam
scas
nop
aas
addr16
cli
cltd
test
xchg
push
sub
xchg
cmp
loope
movsl
cwtl
fs
stc
in
jl
or
xchg
sbb
fstpt
xchg
cs
pushf
mov
daa
shlb
inc
jns
orl
sbb
sub
ret
loopne
call
sub
xchg
imul
push
sarl
inc
int
insl
inc
push
push
dec
or
or
jo
out
dec
dec
and
xchg
lahf
xchg
push
nop
jmp
push
hlt
add
pop
fsubrs
and
xor
push
cmp
or
jb
dec
push
pop
loopne
imul
cltd
loop
mov
shr
or
cs
and
sub
xchg
dec
xlat
test
sbb
mov
or
mov
adc
jmp
or
xchg
mov
ja
cmpsl
push
sub
leave
js
sti
pop
sub
stos
xchg
mov
push
stos
daa
or
test
or
sahf
cli
lahf
push
call
icebp
xchg
sbb
sbb
jnp
mov
sub
stc
mov
or
aas
maxps
adc
add
xlat
mov
lods
addl
daa
inc
testb
add
cmc
jp
stos
xor
jmp
pop
repnz
xchg
xlat
adc
mov
jno
jb
pop
cmp
out
test
imulb
sub
push
xchg
and
int3
fildl
loop
inc
mov
stc
aaa
movsb
repnz
sahf
mov
js
sahf
or
arpl
mov
xchg
jbe
daa
out
call
cmp
pop
arpl
in
bound
fdivrs
pop
jge
and
in
add
ja
jae
cmp
sbb
aad
std
cmp
outsb
dec
mov
insl
push
dec
mov
cmp
pop
mov
fwait
cmp
mov
adc
pushf
sbb
jb
xchg
int3
stos
push
mov
mov
lods
jmp
mov
cmp
cmp
push
or
or
mov
push
test
cwtl
adc
add
jbe
mov
filds
adc
sub
popa
push
pop
sbb
int
ds
pop
xor
outsb
sub
lds
inc
fstpl
shr
iret
mov
or
xchg
or
scas
loopne
fmull
in
mov
imul
xchg
add
push
add
stos
lea
repnz
pop
jae
test
add
dec
sti
sub
or
orl
imul
dec
out
sahf
and
rclb
ds
int
cltd
loop
cmp
mov
mov
fimuls
mov
sbb
lcall
xor
jb
sbb
int3
push
leave
mov
shrb
imul
cmp
mov
sbb
addr16
fisubs
add
mov
imul
push
incb
add
xor
pop
sub
out
sbb
fwait
add
inc
fsts
fcmovnbe
insb
inc
xchg
ja
mov
mov
test
xor
inc
sub
add
dec
jno
imul
test
btc
xlat
call
shrb
xchg
pop
lock
ja
pop
inc
fisttpll
bound
cmp
or
rorl
jge
mov
outsb
outsl
std
xchg
mov
gs
inc
push
xchg
cwtl
daa
repz
shr
lret
inc
shrl
inc
cmpsl
nop
dec
adc
adc
fnstcw
xchg
push
es
hlt
cwtl
cmp
adc
ss
add
loope
js
mov
xchg
sub
jmp
cmp
pop
repnz
mov
ja
xor
cwtl
shll
dec
es
push
loope
ret
adc
mov
sub
mov
es
out
pop
dec
in
cmp
jb
or
int
clc
stos
jmp
hlt
xlat
outsb
rclb
iret
jno
mov
or
out
xchg
dec
xchg
sub
ret
jecxz
lds
push
shl
call
mov
cltd
push
or
adc
mov
sub
or
mov
mov
cmp
ljmp
pusha
lods
stos
add
push
or
and
imul
out
icebp
movsl
adc
and
mov
push
lods
fisubl
test
xor
xchg
pop
pop
lds
jo
iret
mov
notb
fsubr
pop
hlt
cmp
mov
mov
xlat
aam
xor
fbld
fs
inc
shll
lret
jbe
xchg
testl
jp
pop
pop
jecxz
into
sub
pop
mov
andb
pop
xchg
mov
icebp
add
adcl
jns
push
test
fstpt
jmp
dec
dec
out
out
lret
hlt
rcl
pop
inc
pop
inc
pop
pop
addb
dec
cmp
lret
mov
dec
inc
pop
insl
mov
adc
push
inc
mov
pop
dec
lcall
xchg
mov
nop
cmpsb
inc
xchg
fs
sbb
lcall
cwtl
data16
xchg
sti
pop
clc
cmp
jge
ljmp
leave
push
fmuls
xchg
mov
int3
pop
aad
mov
adc
cmp
in
xchg
out
or
scas
mov
pushf
xor
addr16
mov
sbb
mov
gs
xor
adc
ret
xlat
clc
jns
subl
repnz
pusha
mov
ss
xchg
jg
inc
mov
dec
das
bound
shll
in
pusha
mov
clc
je
dec
mov
push
cld
push
sbb
insb
dec
adc
add
aam
pop
push
cltd
sahf
sub
sub
xchg
jp
stos
inc
ljmp
sub
and
clc
mov
jb
movsb
les
adcb
test
ljmp
mov
repz
xor
and
fidivrl
lret
stos
in
mov
mov
js
mov
pop
push
mov
jmp
pop
xor
fimull
out
lcall
push
xor
cmp
and
cmp
ljmp
jne
les
shlb
pop
je
mov
shr
aam
pop
xchg
xor
and
adc
cli
xchg
push
xor
in
sahf
cmpps
mov
pop
push
insb
xchg
sahf
jne
pop
arpl
mov
pop
push
and
or
cmpsl
int
in
sub
stos
subl
jl
pop
or
addr16
add
icebp
ja
xor
push
and
xor
test
cwtl
imul
pop
scas
aam
xor
and
shlb
test
push
rclb
ja
in
test
mov
inc
mov
cmpsl
hlt
inc
cs
je
add
loope
push
dec
leave
dec
or
ljmp
sbb
xchg
fildll
in
test
aas
mov
lret
sbbb
add
out
sub
pop
dec
lret
mov
mov
ret
mov
ret
add
mov
into
jbe
imul
fs
push
push
testb
shrb
push
mov
push
add
aad
daa
pop
add
mov
clc
pusha
std
xchg
xchg
sbb
dec
jg
scas
mov
out
xchg
dec
adc
pop
or
dec
imul
jne
jmp
jl
mov
lods
std
hlt
ret
push
loop
adc
push
push
mov
mov
mov
leave
mov
mov
jo
sub
sbb
aas
shrl
sub
sub
and
pop
icebp
cli
and
mov
cs
pop
inc
and
dec
mov
mov
sar
add
xchg
inc
jno
dec
test
fwait
pop
and
test
jae
lret
xor
mov
xchg
mov
aaa
test
out
out
pop
scas
loopne
add
lahf
inc
mov
jae
test
or
dec
sbb
cmp
bound
clc
mov
pop
xorl
je
orb
xchg
jmp
testl
cmpsb
andb
insl
and
bound
dec
popf
dec
lret
xchg
or
loope
push
call
fimull
test
xchg
dec
mov
inc
xor
out
addr16
pop
rorl
lds
daa
push
or
or
push
push
shrl
sti
mov
mov
cs
adc
and
add
and
add
arpl
ljmp
inc
movsl
aaa
int
mov
xor
les
in
idivl
jmp
gs
jne
mov
adc
loopne
je
inc
mov
frstor
push
mov
shll
pop
mov
cmpb
mov
mov
popf
mov
cmpsl
pop
adc
testb
push
pop
sbb
fbstp
fidivs
mov
mov
mov
xchg
movsb
fs
in
xchg
ja
lcall
mov
adc
push
add
jne
aad
sub
jbe
fwait
mov
rcrl
enter
xchg
add
fsubl
sarb
mov
fs
push
movsl
flds
pop
mov
pop
rol
mov
push
push
xchg
cmc
rcr
inc
lods
nop
jb
sub
cmp
sbb
xorl
ss
pop
ficomps
out
loop
cs
xorl
les
in
push
repz
fs
test
inc
sete
push
sti
sbb
setp
sbb
jb
leave
and
int
mov
test
lods
jecxz
push
mov
inc
repz
pop
lahf
sub
sbb
icebp
stos
sub
lcall
dec
nop
imul
hlt
fnsave
lea
je
cmp
sub
jg
add
pop
xor
pop
int3
sti
xchg
scas
jns
push
push
fldenv
jecxz
inc
rolb
xor
ja
or
sbb
adc
popf
out
cltd
int
xchg
jp
inc
adc
cld
sbb
ret
cmp
mov
xor
add
icebp
gs
jb
call
jge
pop
mov
sbb
lock
mov
jl
lock
add
jle
adc
xor
mov
jo
in
inc
sub
in
jnp
cmpsl
xchg
imul
xchg
lds
mov
push
insb
add
lcall
xchg
loopne
lret
loope
cmp
sub
ds
daa
nop
sub
lret
mov
clc
push
jmp
fists
xchg
idivl
leave
clc
cmpsb
cmp
push
mov
add
ret
mov
inc
mov
je
mov
insl
lds
push
mov
fidivs
or
cmp
scas
dec
loop
push
push
jle
ljmp
xor
push
pop
test
mov
xor
lods
pop
jge
leave
dec
and
aaa
jge
jmp
lods
inc
add
pop
xchg
mov
xchg
mov
add
jne
scas
jb
sahf
out
xchg
adc
shl
mov
leave
into
mov
push
test
inc
sub
cltd
daa
into
and
lret
or
insb
add
imul
lcall
xor
lock
dec
test
in
pop
sbb
call
mov
jmp
jl
hlt
orl
fcom
pop
in
add
iret
dec
stos
adc
int
int3
lahf
sub
add
out
mov
and
iret
repnz
test
stos
jl
icebp
movsl
xchg
adc
jl
dec
xor
push
or
hlt
adc
sub
xor
bound
xchg
push
lret
rorb
sub
mov
mov
outsb
clc
sub
movsl
faddl
lret
mov
sub
iret
cmp
into
dec
sbb
faddl
xchg
inc
cltd
fbld
mov
enter
mov
popf
int3
ds
sti
repnz
repnz
test
jle
fcomp
int3
sbb
aam
cmp
add
lcall
jae
and
gs
std
cmp
scas
fxch
and
xor
add
adc
and
mov
decb
mov
fs
xlat
cmp
push
xchg
fldt
or
icebp
cmp
imulb
mov
mov
xor
pop
fsubp
ja
jg
dec
popf
mov
mov
lock
sub
jae
test
lock
xchg
xchg
mov
mov
lahf
push
cli
xor
es
lret
std
dec
cld
jp
into
enter
mov
movsl
ja
out
mov
inc
pop
stos
mul
cmp
jecxz
xor
jecxz
push
iret
aam
jp
decl
dec
lret
push
lahf
jne
daa
xor
lods
repnz
xor
jne
push
pop
sahf
xchg
pushf
xor
inc
in
xorl
mov
push
cld
push
test
aad
mov
aaa
movsb
pop
repz
into
fcompl
jl
shr
sbb
mov
dec
pop
mov
sub
cwtl
ljmp
test
xor
ret
popf
pop
adc
push
lods
mov
xchg
cmpsb
mov
mov
sub
sub
dec
sub
divl
fwait
xor
test
mov
push
testl
pop
jle
loopne
arpl
cmp
xchg
shl
lcall
enter
fildll
fdivr
in
mov
ljmp
inc
movb
dec
push
addr16
lds
ss
shlb
push
into
gs
cmc
repnz
mov
push
out
mov
outsl
rol
sub
dec
dec
lock
pop
lock
into
hlt
hlt
scas
ficomps
mov
inc
in
gs
hlt
lret
mov
xchg
adcl
add
xor
movsb
xor
lea
call
or
and
xchg
pop
cmp
and
outsb
shl
push
movsl
ljmp
pop
test
mov
adc
scas
mov
std
mov
in
pop
mov
fldenv
pop
or
mov
daa
jl
hlt
inc
mov
int
stc
or
cmp
mov
cli
das
pop
dec
or
orl
hlt
push
inc
call
cmp
mov
or
mov
jno
add
gs
int
test
cwtl
out
fnstenv
stos
dec
loope
inc
jl
fldt
out
dec
cmpsl
cmp
and
cmp
sbbl
ret
adc
sub
pusha
lods
adc
push
inc
mov
dec
cmpsb
ds
fsubrs
les
insb
sub
sbb
mov
or
dec
test
testb
pop
imul
push
inc
xchg
jl
notb
int
cli
ja
sbb
push
inc
daa
jge
mov
jns
insb
ds
xlat
adc
out
xor
in
xor
or
ret
mov
xchg
jno
xchg
jmp
lds
or
mov
push
insl
mov
out
xor
sub
daa
movsb
dec
out
lahf
icebp
pop
adc
andb
ja
sub
xchg
daa
mov
mov
xchg
loope
jmp
dec
dec
add
jno
incl
jg
popf
dec
in
xlat
push
jmp
adc
jo
hlt
mov
and
inc
movsl
imul
data16
mov
xor
lahf
pop
ljmp
icebp
xor
shld
fwait
pushf
mov
lret
pop
nop
stc
leave
mov
xor
xchg
pop
in
aam
es
push
clc
je
jecxz
out
jnp
sub
loope
jge
sub
sub
fdivs
add
mov
int3
mov
test
sti
push
xchg
dec
pop
ret
jle
sarl
fmull
mov
pop
cmp
lods
cld
inc
or
jnp
push
popa
and
call
xor
fstl
mov
lret
rclb
pushf
xchg
test
jbe
inc
test
out
data16
inc
mulb
aad
xor
xchg
jecxz
mov
rol
pop
xchg
repz
dec
lods
mov
jp
int
jbe
cmp
loop
imul
push
add
mov
pop
negb
cmc
jp
addr16
hlt
xchg
sub
mov
and
adc
mov
push
mov
dec
loop
int
leave
pop
daa
or
jmp
jge
or
sahf
pop
cmp
dec
dec
pop
jnp
mulb
outsb
fwait
mov
rcrl
imul
cmp
ja
in
test
sbbl
adc
aaa
mov
cmpb
mull
xor
popa
dec
ja
das
test
scas
cmp
andb
popa
hlt
rcr
or
loop
xchg
sub
shr
jns
xor
and
in
mov
add
push
or
inc
sbb
imul
cmp
xchg
jnp
push
mov
mov
movsb
jp
mov
dec
dec
mov
jno
cltd
sub
fdivrl
into
fisubrs
cmp
cmp
push
push
and
adc
repz
call
int
ret
das
dec
imul
sbb
dec
loopne
inc
mov
jns
call
inc
xlat
and
inc
fldenv
rcll
sahf
cwtl
outsb
xor
repnz
popa
jne
sub
dec
pop
jno
sub
aam
into
cli
jg
insb
mov
sbb
pop
int3
sub
add
xlat
lret
push
jle
jbe
mov
xchg
icebp
sub
or
xchg
ret
hlt
mov
loope
popa
jg
xchg
jecxz
cmpb
xorl
xor
sbb
sbb
leave
stos
int
fsubr
pop
cmpsb
ljmp
movsb
sbb
js
push
push
adc
xchg
lcall
sbb
sahf
test
push
or
cmp
and
push
push
loopne
rol
int3
lret
mov
pop
lcall
fimull
mov
and
inc
negl
fwait
jle
stos
scas
mov
jne
pop
or
std
cmp
push
scas
xchg
call
lods
pop
into
cmpsb
ret
out
pushf
inc
std
test
adc
push
int
jnp
scas
xor
and
mov
xchg
fs
dec
iret
add
cs
jp
or
test
sbb
jnp
cltd
test
leave
or
lods
cld
mov
mov
or
and
sub
daa
and
jae
out
cmpsl
sbb
mov
scas
ficoml
sbbb
inc
enter
sahf
test
addr16
loopne
popa
xor
or
push
ljmp
jno
cmc
in
dec
xchg
inc
les
dec
xchg
sub
mov
mov
mov
stc
adc
inc
jnp
jo
mov
int3
das
nop
pop
insb
ret
adc
in
mov
jo
cmp
pop
outsl
lock
dec
mov
es
lret
shl
pop
out
dec
fdivrl
mov
sub
sbb
xchg
in
jmp
dec
scas
rclb
push
dec
cmp
push
outsb
lods
adc
sbb
cmpsl
lds
jg
push
fimuls
pop
sub
mov
cmovp
cli
add
test
adc
pop
enter
mov
fstpl
sahf
pop
mov
jo
sub
lcall
and
lahf
into
dec
inc
roll
jns
and
rcrb
jae
push
jno
sub
bound
jb
gs
pop
in
enter
int
lods
mov
xchg
mov
leave
mov
cs
sbb
cmc
movaps
test
xor
ret
push
mov
imul
mov
pop
jmp
add
aaa
or
mov
loop
inc
arpl
xor
cmpsb
loopne
push
push
fisttpll
add
and
lea
jo
cmp
push
sbb
je
mov
cltd
repnz
inc
dec
fcmovnu
ja
aaa
cltd
sbb
inc
dec
or
mov
xchg
xor
jp
mov
insb
cltd
dec
jp
imul
cmp
test
adc
aaa
jnp
inc
filds
mov
push
rcll
insl
out
lahf
sub
mov
mov
xor
pop
adc
arpl
das
movsl
cwtl
stos
jbe
ficomps
pop
dec
sub
imul
xor
xchg
jmp
or
rcll
jmp
movsb
cli
lea
sbb
mov
sub
shlb
out
cwtl
clc
rorb
dec
into
xor
cmp
lods
push
sahf
pop
out
hlt
sti
fidivl
mov
inc
ret
outsb
cmp
outsb
push
pop
stos
pop
nop
inc
jbe
in
outsb
jmp
jl
dec
mov
stos
add
jle
jbe
sbb
lods
push
mov
jne
pop
ret
call
push
xlat
lret
add
jne
out
fwait
or
adc
or
pop
lock
push
jns
nop
ja
ret
lods
lds
xor
xchg
insl
lds
jbe
xchg
in
fcmovne
inc
fs
lods
mov
mov
jnp
mov
pop
bnd
pop
xor
push
mov
bound
lods
imul
xlat
outsl
mov
mov
sarl
enter
aas
push
adc
xchg
stc
xchg
add
mov
call
push
out
arpl
inc
mov
jo
lods
inc
mov
loop
popa
adc
add
push
ss
pusha
in
push
test
jg
adc
pop
jl
xor
repnz
pop
mov
jnp
notl
xor
cmp
add
push
or
push
andb
jg
test
xor
mov
jp
xlat
ja
xor
add
fsubl
or
testl
xchg
ss
push
outsb
lds
jge
mov
ret
jecxz
push
or
and
movsl
out
add
notl
and
aad
sub
jmp
dec
ljmp
imul
icebp
push
dec
hlt
ficoms
mov
push
out
jle
mov
add
adc
jle
add
fdivs
hlt
test
ljmp
fwait
ss
or
incb
imul
pop
xor
mov
jno
iret
xchg
imul
xchg
jecxz
idivl
mov
inc
in
mov
sar
jno
jnp
movsl
addl
rcrb
out
dec
loopne
daa
ficompl
inc
in
rcr
insb
pop
addr16
cli
orb
xchg
xor
iret
div
aas
fnsave
test
pop
xor
scas
movsb
not
imul
mov
sbb
add
xchg
decb
subb
mov
mov
xchg
push
insl
out
inc
push
loope
cmp
pop
outsb
mov
push
xchg
mov
movsl
mov
xor
xchg
adc
or
and
push
xor
mov
push
inc
insl
sahf
jge
es
lret
mov
ja
dec
xchg
jmp
mov
mov
enter
mov
xchg
pop
stc
cmp
cmpsl
xchg
sbb
loopne
scas
andb
adc
sub
insl
outsb
mov
mov
pop
xchg
xchg
hlt
jp
add
and
je
mov
mov
rol
shrb
cmp
pusha
dec
fdivrs
in
rcr
xchg
int
dec
mov
or
jmp
loopne
push
jns
inc
sbbb
rorl
stos
xor
shr
jnp
fnstcw
add
push
fwait
dec
mov
xchg
movsl
mov
and
jo
das
mov
mov
repnz
ret
pop
mov
inc
mov
adc
fidivrl
sbb
call
adc
sub
inc
sbb
sbb
mov
idivl
inc
rclb
or
xchg
jnp
sbb
leave
push
xchg
cmp
stos
jns
and
jmp
and
push
and
and
jns
mov
and
jg
mov
gs
xor
clc
sahf
int3
xor
jb
addr16
and
sub
xchg
cmpsb
mov
mov
cli
pushf
push
xor
dec
push
outsl
daa
mov
sub
mov
mov
adc
add
fwait
aas
jno
or
int3
and
js
cwtl
xor
mov
fldt
mov
fst
add
dec
in
pop
lods
inc
mov
and
cli
xchg
push
fcomi
lea
inc
inc
enter
or
dec
sahf
daa
lcall
or
nop
dec
xchg
enter
je
cmp
add
rcr
cmc
int3
and
sahf
aaa
in
cmpsb
and
cmp
cmp
mov
out
addb
daa
adc
jp
in
jne
xchg
loope
repnz
mov
test
fsubs
into
xchg
push
pushf
scas
lods
sarb
test
addr16
es
sbb
push
adcb
aas
xchg
sbb
lods
and
call
mov
mov
pusha
lods
pop
es
nop
ret
into
sub
jbe
add
mov
push
lcall
sahf
cmp
int3
ficomps
repnz
pop
adc
sbb
cmp
movsb
pop
addr16
sti
add
imul
push
xor
push
pop
sbbb
dec
inc
pop
cmpl
mov
mov
cmp
jg
xor
inc
mov
dec
mov
mov
and
sarb
les
pop
repnz
std
or
inc
int3
or
pop
dec
rorb
shlb
xchg
nop
mov
push
sbbl
dec
jecxz
cmp
sub
push
sbb
xchg
cmp
cmp
imul
icebp
hlt
inc
pop
adc
and
cli
pop
ds
lret
mov
lods
pop
bound
xchg
mov
icebp
imul
leave
les
jb
lea
mov
insb
gs
push
mov
int3
cld
or
insl
sti
shr
rcll
lds
mov
das
lds
sub
dec
mov
dec
sbb
test
jp
xchg
jnp
inc
inc
add
jb
lea
movsl
mov
lods
mov
lods
in
xchg
sar
rclb
or
jg
mov
ret
push
ret
jp
in
cmpsb
fmuls
inc
or
out
fstps
push
adc
std
dec
jae
jmp
stc
jecxz
ja
add
mov
std
popa
pop
das
sub
jno
dec
push
push
insl
add
dec
std
fcomi
cld
jae
sar
jg
adc
pop
push
ja
mov
movsl
je
sub
scas
xor
imul
cmpsl
cli
cltd
adc
mov
lds
mov
lret
mov
jle
data16
ja
add
push
stos
mov
insb
in
xchg
adc
push
mov
sbb
jp
xorb
sub
fsubr
mov
mov
insl
sub
fidivrs
cmc
enter
lahf
sbb
jo
or
jnp
clc
sahf
je
pop
cmpsb
mov
mov
jns
fstl
sub
jnp
add
nop
hlt
cmp
aad
daa
pop
add
cmp
mov
lcall
leave
outsl
or
scas
dec
shl
in
pusha
push
aad
pop
cltd
jmp
mov
out
test
add
data16
rcrb
or
adc
push
mov
dec
cmpsl
mov
ss
lods
insb
outsl
inc
mov
adc
sub
push
inc
sbb
pop
ja
mov
lods
ror
cli
jnp
pop
sahf
mov
fisttpll
sarl
insb
sbb
xor
in
out
nop
in
sahf
sbb
stos
inc
lods
jmp
outsb
jl
fidivl
push
push
lcall
inc
pop
subb
push
mov
subb
fwait
cmp
std
cmp
pop
fidivrl
xchg
data16
mov
adc
loope
ret
jmp
jecxz
push
mov
movsb
mov
lock
fisttps
mov
dec
rorb
shl
sarb
add
int
out
jnp
int3
dec
xor
mov
or
cld
mov
sbb
jecxz
xchg
xor
push
clc
aad
push
notl
enter
sub
jns
fadds
and
lret
jb
lods
inc
sti
xchg
ljmp
add
repnz
fbstp
lods
out
dec
mov
ret
mov
sbb
xor
mov
and
lds
daa
lods
stos
inc
stc
xchg
ror
mov
pop
sub
cmpsl
and
pop
int3
jge
stc
push
nop
push
sbb
aas
lcall
wrmsr
movl
xor
fwait
scas
pop
xor
and
jnp,pn
mov
inc
lds
inc
insb
addr16
cltd
mov
std
or
sub
aaa
push
cs
out
stos
mov
aad
xlat
arpl
pushf
loope
popa
imull
test
jno
ret
cwtl
out
jno
cmp
sbb
add
fwait
mov
adc
or
cmp
inc
fwait
in
out
inc
rclb
jmp
or
aaa
mov
out
test
shll
mov
add
es
xor
insl
or
out
and
cwtl
pop
sbb
cmp
dec
adc
bound
xor
inc
push
add
gs
and
adc
popa
sbb
aaa
scas
aaa
daa
dec
dec
jecxz
mov
push
test
mov
sbb
scas
fucomip
out
rcll
pop
pop
je
das
sub
push
pop
lds
idiv
push
dec
xchg
aas
lea
ret
cmp
mov
pop
out
das
push
jnp
pop
lock
push
ja
popf
or
ja
mov
outsb
pop
mov
mov
sub
pop
repnz
inc
adc
mov
xor
int
rcrl
mov
mov
xchg
jp
call
jge
jnp
daa
sbb
dec
int
xor
ljmp
popf
clc
or
cwtl
aam
cltd
pop
sbb
inc
inc
cmp
scas
in
into
and
push
stos
inc
xchg
int
push
cs
push
loope
mov
cld
add
imul
or
jmp
js
push
jbe
cltd
test
adc
lret
or
cmpsl
mov
jnp
fimull
lds
mov
cli
jge
mov
iret
jl
mov
push
jge
inc
cmpb
mov
or
sub
cwtl
das
shlb
mov
jns
fsubl
adc
mov
orl
icebp
outsl
xchg
paddd
push
adc
jl
popa
mov
iret
dec
inc
mov
adc
shrb
das
gs
mov
jl
shl
jge
or
xor
xchg
cmp
push
fldl2t
xchg
imul
jne
cld
dec
ds
cld
lcall
movsl
mov
jo
xlat
repz
and
jl
adc
or
pop
mov
mull
imul
xor
lock
loopne
and
cmp
aas
fsubrl
call
adc
rolb
clc
pop
adc
aas
add
jmp
imul
daa
mov
in
in
fs
cmp
test
xor
mov
mov
dec
test
sbb
xor
imul
cwtl
addr16
xchg
fldt
add
lcall
ds
cwtl
mull
test
dec
repz
shlb
imul
mov
in
lahf
stc
mov
in
push
jge
mov
jae
pop
into
jnp
or
out
dec
dec
insl
push
popf
inc
sahf
imul
icebp
aam
inc
out
sub
and
and
call
inc
aas
fisttpl
out
popa
add
jmp
push
jg
xchg
cmp
mov
sub
sbb
in
mov
push
outsl
fcmovb
sbb
adc
mov
shrb
jecxz
and
arpl
jp
xor
pop
adc
lods
nop
aas
shr
lea
sub
mov
add
pop
in
and
push
push
jae
inc
out
xlat
lret
shl
pusha
jmp
lahf
imull
and
aaa
mov
cltd
pop
dec
repnz
mov
enter
xor
ja
adc
push
jg,pn
test
scas
add
dec
ss
out
cmp
insb
push
insb
jno
cmp
xchg
repz
adc
pop
nop
push
pop
stc
js
cmovno
out
sub
xor
inc
sbb
jl
dec
out
sub
je
push
stos
jmp
xor
in
and
fwait
cmpsl
dec
lret
push
pop
mov
lds
xor
repnz
push
aas
aad
nop
adc
jns
mov
pop
sbb
scas
fcoms
pop
jb
or
mov
or
in
sub
outsb
sbb
jecxz
and
cmp
add
xchg
ja
outsl
jnp
push
shrb
lea
push
xchg
sbb
mov
repz
xor
mov
or
mov
je
push
cmpsl
adcb
mul
push
xchg
or
sarb
pop
ss
out
mov
adc
fnstsw
pop
jmp
leave
push
mov
iret
out
cmpsl
sbb
mov
xor
das
mov
xlat
cli
js
xor
xor
cmp
rolb
pushf
mov
mov
fwait
pminsw
stc
inc
pop
cs
sub
xor
in
int3
fldcw
dec
inc
sbb
mov
push
in
push
cmpsb
std
jns
pop
add
mov
and
arpl
push
shlb
cld
sti
sti
mov
in
popf
sbb
enter
mov
out
pop
push
pop
push
mov
cmp
pop
scas
cmc
loope
int3
fisubs
inc
mov
mov
loopne
inc
repnz
mov
rorl
and
jns
cmpsb
mov
mov
test
adcl
cmpsb
inc
test
fwait
jns
jae
pop
adc
shl
repz
cs
stos
and
and
dec
cmp
fimull
mov
in
fidivrl
arpl
dec
ljmp
and
fstps
in
scas
inc
pop
es
outsl
mov
inc
and
ljmp
imul
add
sub
pop
push
mov
pop
cld
ja
mov
popf
xchg
push
or
test
jmp
pop
mov
pop
icebp
fwait
lods
fidivrl
daa
cld
je
stos
iret
jmp
add
test
inc
push
mov
fiadds
cmpsb
add
test
addb
or
sub
pop
std
leave
xchg
jae
dec
rolb
aaa
movsb
cmp
mov
gs
mov
addr16
scas
rcrb
orl
test
jns
lds
inc
into
push
out
dec
ss
clc
pop
std
xchg
push
sbb
jb
xchg
add
adc
es
inc
cmpsl
push
int3
mov
les
pop
outsb
mov
mov
vmwrite
inc
sbb
arpl
and
nop
test
adc
les
ss
xor
jmp
mov
push
out
insb
sub
xchg
pop
insb
fistps
jno
repnz
jmp
scas
mov
stos
jne
rcr
mov
cs
into
jno
jnp
jae
cltd
and
mov
outsb
add
stos
jge
aaa
cld
inc
fwait
scas
js
mov
and
aas
test
pop
cwtl
mov
xchg
cmpl
outsb
movsb
js
cwtl
push
pop
movsb
aaa
mov
mov
sbb
lods
push
popa
cmp
push
sub
mov
filds
nop
push
cmpsl
insb
mov
clc
mulb
insl
add
xrelease
hlt
mov
cld
ja
and
ret
std
add
test
mov
inc
mov
mov
cs
aas
int3
jg
jl
sti
and
ficoms
test
mov
xchg
push
mov
orb
pop
icebp
in
xchg
mov
adc
sbb
aad
movsl
adc
jno
loop
ljmp
aaa
or
data16
mov
pop
shrb
in
stc
repnz
pop
cmp
mov
loopne
pushf
inc
or
iret
cmp
mov
rclb
mov
loope
jle
ljmp
jecxz
sbb
jp
pop
rep
lock
push
scas
mov
ror
shll
insb
into
gs
jae
int
cmpb
sbb
mov
nop
cmp
push
push
orl
xchg
xor
push
sbb
mov
dec
push
test
mov
adc
std
jp
in
or
es
insl
test
imul
data16
push
ljmp
out
cmc
xchg
push
lods
xchg
push
add
stos
rcrl
rcrl
add
pushf
cmp
mov
lods
and
fs
into
fwait
mov
test
incb
dec
cwtl
cmp
iret
mov
add
jg
ret
ret
pop
or
dec
test
les
lahf
divb
enter
es
inc
add
sub
xchg
sub
cmp
xor
adc
int3
test
dec
negl
jg,pt
xchg
fsubs
insl
jb
sbb
stos
jl
dec
pusha
sub
inc
pop
call
or
xchg
iret
clc
push
in
in
push
sahf
mov
adc
dec
push
rcrl
aas
scas
jg
lahf
xor
dec
int3
sub
cmpsb
and
ss
or
ret
inc
xchg
jns
mov
mov
or
xor
sarb
jge
mov
mulb
or
add
xor
xchg
cmp
jecxz
clc
int
push
mov
adc
pop
cmpsb
imul
inc
pop
jnp
push
imul
sub
js
xor
scas
jmp
stos
xchg
popf
jmp
add
out
shll
mov
mov
or
hlt
jp
mov
ret
sub
dec
decb
adc
or
push
ret
mov
pusha
xchg
and
sub
sbb
or
ss
xchg
popl
jae
mov
ja
jns
ret
xor
cltd
dec
gs
xor
pusha
dec
sub
fucomi
ljmp
imul
mov
sub
aam
rorb
ja
xchg
xchg
outsl
inc
cmp
jno
adc
sbb
ljmp
jnp
int3
xchg
add
andl
push
sbb
push
or
xchg
sub
mov
testl
jbe
adc
in
adc
pop
jmp
jl
mov
push
dec
out
pop
into
gs
mov
add
int3
cmp
int3
fcomp
das
test
sbb
inc
into
movsb
in
sub
or
xor
frstor
mov
sub
sbbl
fnstenv
mov
jge
idivl
sub
das
mov
xorb
scas
sub
nop
test
mov
inc
xchg
outsl
jae
divb
pop
push
cld
das
and
std
push
push
xchg
jbe
sub
xchg
dec
push
xor
mov
dec
int3
mov
jl
pop
dec
movsl
test
fists
cmp
push
mov
arpl
xlat
pop
cwtl
jge
stc
jg
movsb
pop
add
rcl
pop
lcall
and
iret
inc
or
lock
fs
mov
scas
and
jecxz
push
loopne
xor
ss
ja
lea
aam
mov
test
cmp
gs
mov
xlat
dec
aas
pop
repnz
loopne
adc
ja
push
xor
or
pmuludq
xchg
stos
sbb
pop
adc
test
sbb
pop
out
cmp
aam
decl
cmp
add
or
jg
sbb
push
mov
mov
fwait
cmpsl
pushf
out
stos
xor
jp
iret
cmp
cmp
je
adc
inc
popa
testl
jmp
jmp
mov
cwtl
das
outsl
or
aad
pop
sub
test
popa
push
inc
adc
call
ret
xchg
sub
lret
mov
push
jge
inc
mov
pop
outsl
cmc
filds
pop
jne
stc
aaa
fsubrs
jb
push
test
jb
or
fildl
vpunpckhdq
push
jl
mov
inc
cmp
and
mov
mov
imul
call
inc
gs
or
ljmp
xchg
cltd
scas
mov
inc
jl
loop
xchg
xorl
incb
pop
popf
pop
loop
stos
cli
in
inc
inc
outsl
push
stos
outsl
xlat
push
ret
jecxz
fmul
push
inc
push
in
inc
leave
and
out
jns
pop
adc
int3
mov
cld
fwait
and
daa
sub
push
jp
mov
adc
xor
and
sahf
xor
mov
adc
sbb
cmpsl
loope
sub
sbb
pop
in
arpl
inc
loopne
xor
inc
or
sub
popf
sub
sahf
imul
aam
mov
movsl
and
mov
movsl
jae
and
adc
jnp
nop
cs
arpl
xchg
loope
dec
push
cmp
sahf
daa
cli
cmc
sbb
pop
mov
lcall
pushf
inc
aaa
dec
xchg
insl
cld
out
and
inc
mov
mov
xor
fnop
cmp
jge
jecxz
mov
jns
sub
aam
xchg
ja
jb
pushf
out
sub
add
shlb
or
cmp
dec
inc
pop
jbe
add
out
ljmp
ljmp
mov
das
aam
aad
das
xchg
test
or
sbb
imul
adc
jg
inc
mov
cmp
or
fidivs
leave
push
sbb
jbe
jmp
incb
cmpl
mov
add
fmul
and
add
ja
adc
xchg
es
pop
imul
test
int
aad
inc
cmc
dec
cld
cmp
mov
icebp
cltd
inc
sarl
pop
arpl
mov
or
jo
ljmp
add
mov
mov
and
adc
sbb
and
jae
fldenv
imul
sbb
ss
push
ret
movl
sub
push
inc
inc
push
out
into
pop
scas
std
leave
sbb
pop
rorb
inc
inc
test
jecxz
push
movsb
in
ljmp
cmp
stos
clc
ret
or
out
bound
loop
outsl
xor
jle
xor
sbb
add
cmpsl
divb
sub
xor
test
mov
xchg
fldt
jno
cmp
push
ds
gs
cmp
lea
sbb
sahf
dec
inc
loope
cmpb
ja
jno
loop
xor
out
add
dec
and
cwtl
mov
dec
test
in
jl
mov
ja
push
cmp
cmp
pop
je
fldl2t
mov
pop
addr16
leave
or
je
ror
mov
test
int3
in
addr16
xchg
mov
xchg
movsl
mov
call
ret
push
sahf
in
in
hlt
lods
add
pusha
into
push
lret
cmp
in
fcompl
mov
xor
jle
out
scas
je
movsl
test
cltd
idivl
in
jns
or
mov
push
or
pop
pop
push
out
push
jb
cmpsl
mov
push
call
push
inc
out
jl
adc
inc
push
add
setb
sub
adc
hlt
or
mov
sub
lock
out
pop
scas
shrl
int
jecxz
mov
push
push
outsl
aam
mov
sub
aad
xchg
push
and
test
mov
je
mov
mov
push
cwtl
inc
add
mov
add
stos
in
ja
or
sub
sbb
jnp
dec
fiadds
es
cmp
sub
mov
cmp
out
push
sbb
mov
shlb
cli
sahf
cmc
into
jb
js
sbb
dec
addr16
jmp
lds
or
test
sub
adc
cs
or
and
shlb
mov
aam
dec
dec
add
psubq
int
add
jp
pop
cmpsb
lock
dec
fnstenv
sub
push
sbbl
pop
push
cmp
push
mov
xchg
je
cmp
xor
adc
insb
mov
ss
xor
movsb
jb
pop
ja
pop
add
andb
enter
lahf
ret
and
xor
sub
xchg
xchg
xor
or
aas
in
ret
ds
arpl
ret
xor
sub
std
jge
leave
pop
dec
hlt
ja
aam
xor
lcall
addr16
repnz
mov
arpl
xor
dec
and
in
push
enter
and
fs
mov
or
rcl
jmp
out
mov
call
xor
bound
cmp
dec
out
sbb
repz
std
or
mov
jno
mov
vmwrite
popa
cmpsb
das
test
add
ss
push
or
js
mov
mov
xchg
out
xor
js
gs
addb
xchg
cmpsl
xchg
das
cmp
push
sahf
cmpb
xlat
push
in
mov
sahf
add
fbstp
sbb
lret
ja
lods
cmpl
scas
shl
lret
repnz
sarb
js
xor
dec
mov
leave
cwtl
cmpsl
and
inc
lods
mov
repz
push
mov
jle
rcl
pop
lret
inc
shlb
in
addr16
cltd
frstor
notl
and
std
push
jnp
fisubl
inc
pop
pop
icebp
lock
aas
lds
cmc
lcall
shll
xlat
jne
jbe
and
xor
push
in
in
cmpsl
aas
pop
mov
mov
loope
push
popa
dec
aam
mov
in
add
fdivr
xchg
add
ljmp
pushf
std
pop
inc
xor
mov
lods
cmc
push
popa
ss
out
loope
cmp
adc
add
mov
icebp
mov
fidivrs
lret
mov
sub
aaa
or
outsb
lods
jo
push
push
iret
push
cmp
push
insl
fcmovbe
pusha
loopne
stc
and
sub
pop
pop
mov
jb
sbb
sbb
nop
pop
inc
cwtl
int
jne
xor
adc
fildl
mov
pop
mov
lds
cmc
push
stos
push
adc
js
call
mov
int
push
notb
fnstenv
xor
ja
std
adc
push
pop
inc
mov
xor
xchg
cmc
add
sahf
aaa
add
inc
dec
push
pop
aaa
fcmovbe
push
outsb
mov
rcll
js
cmp
loop
push
test
movsb
popl
mov
mov
stc
cwtl
lcall
mov
pop
test
adc
inc
bswap
pop
inc
in
push
xchg
fs
jnp
mov
mov
in
popf
adc
and
loop
lods
ret
rolb
gs
push
jecxz
repnz
add
scas
testl
cwtl
push
pusha
in
inc
cmp
js
and
arpl
mov
cmc
ljmp
hlt
je
sbb
out
xchg
cmp
insb
lock
cmp
push
leave
sti
in
or
popf
xor
bound
imul
cmp
xchg
into
xor
push
pop
pop
repz
negl
mov
shrl
mov
outsl
add
push
mov
push
xchg
jle
adc
push
inc
sub
sahf
or
in
xchg
addr16
dec
out
pop
out
out
inc
pop
jl
arpl
aas
xchg
push
out
loope
cmpsb
hlt
in
xchg
jmp
ficompl
stc
cltd
sub
sub
idivl
push
lahf
add
xor
imul
scas
fldcw
les
icebp
lcall
mov
mov
loopne
imul
cmc
jno
mov
sub
push
sub
xor
incb
imul
inc
push
cmp
testb
fidivrs
pop
push
adc
pop
dec
imul
mov
inc
out
pop
xor
xchg
sbb
xchg
dec
lret
cli
movsl
fildll
xchg
and
imul
mov
fstpl
jg
stos
js
dec
push
hlt
clc
stc
arpl
push
iret
sahf
pop
out
or
xchg
sub
ljmp
cltd
xchg
out
and
pop
mov
out
xor
adc
inc
xlat
mov
data16
insl
bound
pop
push
scas
and
in
aam
cmpb
int
and
std
fcoml
mov
sbb
xor
lcall
js
lret
hlt
test
adc
or
and
fs
pop
xor
or
pop
cwtl
rcll
pusha
jbe
lahf
ss
insb
add
fidivrl
in
dec
add
and
mov
cmp
or
dec
sbb
movsb
es
add
adc
insb
add
cmc
push
cmp
jno
ljmp
dec
and
jno
jecxz
add
lods
sub
into
inc
add
rcr
iret
jnp
stos
loope
push
scas
aas
aad
mov
fsubrl
jbe
add
ror
lret
cmp
adc
rol
insl
inc
rol
call
cmp
in
jp
jg
xor
ljmp
insl
stc
scas
jnp
iret
and
adc
push
mov
lret
sbb
orb
add
enter
push
push
push
repz
in
xchg
push
jle
and
aad
ret
jno
cltd
xor
pop
repz
adc
cli
and
mov
mov
mov
mov
inc
fnstenv
adc
inc
jge
jno
adc
les
xchg
mov
nopl
fcmovbe
sahf
adc
ret
outsb
std
pushfw
add
xchg
pop
addr16
adc
movsb
inc
push
ret
sbb
dec
and
or
loop,pn
add
xor
xchg
and
cmp
lret
hlt
pusha
sub
cmp
sbb
push
jle
insb
cmp
cmpsl
lret
in
push
xchg
add
dec
shrl
nop
mov
into
cmc
shlb
sbb
mov
mov
inc
ja
or
lcall
pop
jne
cmp
icebp
pusha
xchg
mov
cmp
lods
into
call
aas
nop
dec
cmp
cmp
outsl
jg
sahf
cmpsb
dec
dec
pop
mov
shll
mov
fnstcw
push
sarb
push
mov
leave
push
add
or
insl
xchg
xchg
int
xchg
xchg
fwait
dec
push
inc
in
mov
fsubl
dec
inc
inc
jnp
arpl
fwait
movsl
aas
nop
xor
popf
mov
push
pop
hlt
mov
dec
subb
inc
leave
jbe
ljmp
sahf
int3
cltd
inc
jl
pop
sub
mov
clc
insb
fsubl
xchg
xlat
out
mov
outsl
mov
iret
and
clc
ficoms
filds
pop
andb
test
cld
aaa
into
jno
leave
dec
push
pop
inc
jns
sbb
mov
or
inc
loopne
cli
jmp
mov
imul
xlat
jle
mov
fnstsw
cmp
jp
xchg
and
dec
aad
enter
mov
ljmp
out
cmc
xchg
mov
add
inc
mov
lods
pop
test
dec
mov
mulb
clc
popa
add
and
outsb
adcb
sbb
pop
test
dec
cmpsb
lock
ds
jae
es
cmp
out
adc
and
mov
xchg
sub
sbb
dec
pop
mov
fldt
mov
std
jp
jne
mov
inc
orl
leave
in
addr16
test
mov
addr16
xor
ret
popf
push
xor
cmpsl
subb
sub
dec
push
and
sbb
cmp
scas
sub
sub
arpl
test
pop
out
fildll
inc
adc
dec
adc
movsb
enter
xchg
jmp
sub
ffreep
pop
mov
inc
outsb
push
loope
dec
leave
aam
xor
sti
cltd
jae
int3
mov
jmp
in
mov
xor
arpl
sub
mov
xor
je
xchg
push
adc
xchg
js
sub
or
cwtl
inc
int3
lret
mov
les
xchg
dec
jmp
cwtl
inc
fcmovnb
rclb
lahf
test
pop
xchg
lea
movsb
pop
das
sbb
lcall
mov
pushf
mov
mov
gs
pop
hlt
xchg
dec
stos
cmp
xor
sbb
imul
sub
into
pop
icebp
mov
jno
ret
mov
lret
rcll
call
shlb
aad
cmp
sub
mov
add
addr16
cs
stc
pop
mov
xor
jns
xchg
hlt
xchg
cmpsl
insb
add
andl
mov
dec
cmp
fcoms
mov
mov
mov
xor
lcall
pusha
jl
daa
lds
jbe
or
lret
cmp
add
lds
jg
or
popa
jnp
fsubrs
inc
mov
or
and
pop
out
jns
fistps
cmpsl
leave
push
into
xor
in
mov
pop
mov
aad
shrb
ds
push
mov
nop
push
mov
ja
fs
lret
push
or
or
adc
adc
and
sub
dec
xchg
call
data16
mov
push
adc
je
scas
call
and
lahf
mov
dec
call
xor
enter
jae
inc
outsl
das
mov
daa
insb
sub
jnp
outsb
movsb
pop
xor
ret
insb
jmp
cmpsl
mov
rol
and
leave
dec
or
repnz
xchg
aas
mov
xchg
and
mov
sbb
mov
stc
cmc
xor
fwait
push
das
push
jbe
xor
int3
das
jle
mov
add
fists
lar
and
cmp
xchg
push
test
xor
aas
pop
sti
fwait
daa
mov
add
jmp
in
cli
jecxz
adc
sbbl
call
in
fsubr
cmpsl
mov
jbe
shll
pop
mov
add
mov
mov
outsb
lret
adcl
cwtl
fmull
js
gs
sti
xchg
leave
mov
add
jl
cmpsb
lods
pop
sub
mov
shlb
jle
outsl
add
imul
inc
push
xor
jmp
push
adc
xchg
arpl
arpl
sbbb
pushf
ss
lahf
sbb
das
add
mov
mov
outsl
cwtl
mov
ljmp
or
dec
fsubr
adc
lret
push
add
fdivs
gs
into
outsb
add
data16
mov
cmp
mov
cmp
sbb
adc
jecxz
xchg
push
shlb
pop
push
mov
pop
fs
imul
push
sbb
mov
fcompl
shlb
push
test
addl
popa
mov
lods
xor
les
dec
xchg
sub
dec
lods
inc
cmp
push
ljmp
das
mov
and
mov
sahf
dec
mov
jmp
push
movsl
push
jmp
mov
and
out
mov
ds
add
xor
sub
mov
sub
jg
ss
das
cmpsb
inc
push
in
xor
and
jnp
xor
sub
aaa
and
mov
inc
adc
cmpsb
lods
fs
and
mov
jae
xor
sbb
cmpsl
dec
out
inc
mov
popa
adc
lock
scas
inc
mov
aaa
into
sub
adc
xchg
rolb
dec
xchg
jecxz
add
cmp
int3
push
jo
dec
dec
in
out
pop
xlat
pop
inc
fmuls
outsl
cmc
mov
das
movb
xor
mov
add
mov
mov
test
inc
cmpsb
fidivl
repz
cmp
xor
nop
mov
push
adc
push
mov
inc
cmp
lret
cmpsl
pop
je
mov
add
ljmp
dec
negl
orl
lcall
aas
mov
lods
push
sub
adc
xchg
aad
shl
das
inc
sbb
out
stos
and
and
jmp
gs
gs
sub
adcl
pushf
pushf
or
mov
and
clc
insl
mov
imulb
push
insl
in
nop
pusha
push
mov
iret
jg
fdivrl
dec
inc
sbb
lea
cmc
and
std
outsb
jbe
cmp
ja
mov
movl
mov
jge
das
cmp
cmc
sbb
roll
xchg
mov
gs
notb
movsl
lcall
cmp
pop
mov
pop
movsb
std
add
jno
pop
inc
js
stos
sbbb
jbe
or
xchg
xor
stos
fstpt
push
dec
stos
inc
push
push
fs
rorb
movsb
in
fists
or
cmpsl
mov
das
cltd
mov
pop
xchg
sbb
je
jecxz
xor
pop
fiaddl
fsubrs
dec
fs
pop
idivb
mov
sbb
mov
or
jb
add
arpl
ret
ret
xchg
mov
xlat
outsb
cwtl
popf
inc
fcoml
jb
gs
stc
add
rolb
cmp
call
xorl
in
pop
or
xlat
pop
cmp
loop
xchg
cmp
adc
mov
jecxz
jle
jp
cs
mov
mov
inc
sarb
inc
out
and
adcl
or
push
xor
repz
ret
decl
xor
int
cmc
push
pop
int
mov
aas
dec
mov
cmpb
adc
mov
scas
add
shrl
jo
stc
sbb
sub
test
lret
inc
dec
jp
lret
xlat
inc
das
rorb
nop
cltd
xchg
lret
aaa
test
mov
ss
nop
outsb
stc
out
ja
pusha
jmp
fstl
inc
lcall
cwtl
mov
mov
xor
push
sub
andl
fsubr
adc
sub
insb
dec
lods
fdivr
xchg
or
jl
mov
sub
in
push
gs
fcmovne
xlat
mov
stc
xchg
xor
fucomip
pop
sahf
test
and
lret
push
fs
pop
pop
hlt
xchg
rcrl
fldenv
inc
pop
ret
lock
in
inc
inc
mov
xor
stos
dec
mov
insb
jno
mov
lea
int
out
call
inc
push
mov
imul
divb
ret
and
push
sub
jo
or
sub
inc
js
aas
loope
pushf
adc
mov
sbb
pop
add
cld
out
pop
xor
xor
ficoml
fimull
and
dec
lock
icebp
dec
fcoml
inc
xchg
add
mov
test
cmp
scas
popa
sub
push
out
cmc
mov
dec
lods
fidivrs
outsb
jg
xchg
fstl
shlb
mov
jbe
xor
pushf
inc
int
push
test
add
add
imul
inc
push
loop
inc
and
mov
dec
mov
notl
xchg
jle
xor
jg
fstl
inc
pop
pop
or
add
ss
aaa
sub
mov
jnp
mov
sbb
imul
xchg
lods
mov
jl
or
push
js
mov
sub
lock
out
bound
pop
std
jo
jns
lahf
popf
ret
repz
cmc
adc
outsl
xchg
lahf
test
or
jnp
mov
sub
out
jg
insl
scas
push
sahf
jge
sub
adc
rorl
imul
out
clc
cmc
mov
push
pop
in
inc
mov
imull
adc
xor
je
sub
call
iret
dec
arpl
loop
pop
ds
aaa
xchg
mov
decl
or
pop
inc
xlat
push
fadd
inc
pop
mov
enter
push
popf
dec
in
xchg
cmc
lds
jb
data16
jb
xchg
sub
cs
scas
xchg
test
mov
mov
das
inc
imul
inc
xor
jbe
pop
rclb
mov
push
shl
adc
sub
lods
scas
movsb
loopne
push
call
test
fnstcw
mov
adc
fdivp
addl
jno
jl
xlat
lcall
sub
push
mov
mov
xor
insl
iret
mov
mov
jecxz
add
inc
aam
addr16
inc
jne
loope
negb
pushf
xor
dec
into
mov
pop
or
xchg
pop
add
loope
andl
pop
jle
repnz
mov
dec
in
dec
adcb
sbb
sub
cltd
das
insl
inc
scas
push
xchg
pop
sub
xlat
in
and
mov
rcll
and
mov
shrl
test
cmp
sub
mov
popa
add
sbb
ja
mov
pop
push
push
sahf
cmp
xor
cld
push
adcb
lcall
lea
movsb
cmp
fisttps
jno
mov
inc
in
incl
mov
push
loope
fsub
daa
mov
loopne
mov
fmuls
sub
scas
push
popf
jbe
ret
mov
stos
gs
pop
and
andl
sub
das
scas
mov
mov
sar
pop
inc
jecxz
or
out
mov
sub
dec
test
or
adc
add
add
jbe
cmp
aas
in
fldenv
mov
jbe
out
add
lahf
push
lods
int3
cmp
lods
push
lods
dec
sub
popa
mov
mov
repnz
adc
popa
mov
push
mov
cmp
cmp
xchg
inc
ret
cmp
jl
mov
repz
jo
dec
lahf
notl
cmp
sub
jmp
imul
sbb
and
pop
fistpl
mov
out
mov
xchg
out
jnp
cmp
sub
xor
ja
jnp
add
sbb
movsl
push
es
add
test
les
mov
cmc
std
cltd
and
dec
jae
adc
insl
jae
int
dec
push
or
jecxz
push
loopne
fucomip
daa
rcl
jae
stc
mov
mov
ret
ja
leave
xchg
je
or
lods
cmp
je
ja
sbb
dec
and
leave
push
inc
insl
add
jl
push
rorl
sbb
xor
sub
lock
fmul
pop
cs
or
jl
shrb
and
cltd
push
and
xchg
mov
or
stos
arpl
fsubrs
pop
jp
mov
popf
popa
jp
in
sub
fisubrl
fimull
sub
inc
aam
loop
arpl
rcll
adc
in
mov
pop
xchg
sub
adc
or
adc
pop
and
push
cs
push
mov
mov
in
jmp
push
xchg
outsb
daa
push
cwtl
inc
andl
inc
out
loope,pt
jecxz
dec
imull
mull
paddq
aas
pop
or
add
subb
xchg
jbe
sbb
mov
cmp
arpl
out
in
mov
cli
xchg
mov
dec
mov
std
push
sub
and
sbb
sahf
xor
mov
scas
jno
push
out
push
mov
lea
adc
mov
mov
ja
daa
mov
test
jns
hlt
adc
jns
pop
outsb
enter
adc
mov
shl
ret
jp
sub
mov
rolb
scas
xlat
mov
lret
faddl
bound
movsb
stos
and
addr16
mov
pop
mov
dec
ret
lea
sub
pop
or
jg
mov
shll
add
ds
pop
mov
and
movsb
or
mov
into
addl
sbb
lea
jge
pop
daa
cmp
or
shr
inc
pop
xchg
call
outsl
fmuls
mov
mov
push
push
lret
xchg
xchg
add
addb
pop
push
inc
bound
push
cmc
pop
push
test
js
dec
fstpt
movsl
bound
outsb
rorb
mov
int
mov
adc
sub
in
dec
rol
outsl
adc
inc
sub
mov
hlt
mov
pop
sbb
mov
adc
inc
out
mov
outsb
lcall
fisttpll
mov
mov
sub
xchg
imul
jbe
adc
push
call
mov
sub
out
fistl
xchg
dec
aam
int3
push
cwtl
test
xchg
push
int
and
mov
cld
popa
std
into
sub
out
push
jmp
push
pop
movsb
dec
xchg
inc
out
jnp
test
push
jne
ret
dec
inc
cmp
ds
int
fmuls
data16
inc
pusha
pop
adc
jmp
cmp
mov
jbe
cmpsl
ss
mov
adc
mov
cld
mov
sub
add
lds
pop
stos
jl
xchg
lock
push
adc
mov
and
dec
enter
mov
orl
dec
loopne
shlb
mov
or
push
shrb
push
test
pusha
add
dec
repz
mov
xchg
sbb
test
jbe
rorl
in
sbb
xor
out
push
cli
push
daa
mov
daa
jmp
es
sub
pxor
jg
lcall
and
dec
test
mov
adc
fwait
bound
jno
repz
mov
adc
sbb
sub
jnp
add
xlat
movsl
popf
dec
xchg
jl
inc
sub
lret
shll
pop
into
push
and
fidivs
xchg
cmp
icebp
dec
pop
addr16
inc
bound
ljmp
push
shll
repz
sbbb
jp
adc
push
repz
add
xor
out
mov
cmpsb
push
mov
imulb
pop
push
or
mov
push
fstpt
fs
insb
stc
mov
cmp
sarb
adc
outsl
leave
and
sub
lock
cmp
mov
out
insl
xchg
loope
jb
test
notb
test
sti
repz
push
out
cmp
inc
adc
inc
xlat
ja
popa
or
test
cmpsb
mov
shrl
cmc
or
cmp
daa
int3
cmpsl
push
mov
xchg
jne
inc
data16
mov
mov
pop
out
sbb
push
shlb
jno
xchg
ljmp
and
cmp
lea
mov
jmp
inc
aaa
aad
lcall
or
adc
popa
out
and
lret
sub
push
pop
xchg
ret
xchg
sahf
clc
sahf
loope
div
cld
lcall
in
pop
lock
push
enter
lret
mov
mov
test
test
lret
ret
sub
mov
ret
mov
fcmovnbe
push
push
insl
xor
pop
cld
mov
cwtl
xor
lret
pushf
cli
add
adc
push
lea
sbb
mov
push
out
outsl
xchg
xchg
and
add
divb
stos
rcr
cmp
in
inc
arpl
inc
cld
stos
in
cmpsl
in
push
insl
stos
inc
test
fnsave
push
sar
xchg
pop
int3
lods
outsl
xorl
mov
inc
mov
adc
shll
jne
fcmovbe
outsl
dec
jns
xchg
stos
ljmp
and
js
stos
ja
out
scas
test
sbb
mov
outsb
jp
aad
test
lods
push
out
insl
inc
data16
mull
in
xchg
adc
mov
or
dec
mov
loop
and
loopne
fildll
popa
adc
scas
lods
jle
insb
and
repz
movsl
ret
xor
popa
sbb
das
pop
data16
test
jge
mov
adc
int3
out
fs
push
lods
fnstcw
mov
aaa
xor
lock
lds
data16
bound
in
insb
ds
lcall
inc
lcall
mov
test
cli
xor
insl
push
js
scas
pop
popa
rcrb
xchg
dec
fdiv
aas
call
mov
dec
orl
push
repz
sub
mov
mov
add
pop
mov
test
js,pn
inc
pop
js
add
sbb
jge
mov
imul
loopne
and
cwtl
shlb
dec
ss
cli
jle,pt
xchg
movb
xor
fs
mov
jge
sbb
ffreep
cmp
mov
push
sbb
rcrb
popa
jg
xchg
mov
mov
cmp
xlat
xor
mov
icebp
daa
ret
xor
xor
jecxz
push
xchg
stc
jns
inc
popf
or
push
jnp
flds
mov
jbe
js
subb
or
nop
sbb
mov
cltd
in
ret
jno
test
or
pushf
arpl
cmpsb
xchg
movsl
call
rorl
imul
imul
scas
xchg
dec
cmp
adc
dec
mov
repnz
movsb
aas
jmp
std
xchg
sbb
sbb
jl
mov
inc
loopne
adc
jmp
jge
out
jl
lcall
inc
mov
and
cmp
pop
adc
jne
pop
mov
push
cmp
pop
push
out
push
mov
jne
lods
std
mov
test
xor
xor
mov
int3
mov
pushf
rcrb
faddl
and
in
sub
xchg
aaa
xchg
ror
mov
shrb
insb
mov
ret
rclb
insl
jo
loopne
jne
pop
fsubl
gs
and
shlb
mov
rcl
inc
cltd
loope
iret
into
add
inc
pushl
int3
lret
in
xchg
fisttps
sub
mov
sbb
add
dec
sti
dec
lcall
lret
and
xlat
inc
inc
ljmp
cmp
cmp
push
fxch
fldenv
inc
xchg
add
add
mov
enter
aam
dec
int3
arpl
hlt
mov
outsb
fsubp
jp
call
add
sahf
movsw
sti
push
lock
jo
out
mov
mov
daa
lcall
inc
stc
mov
inc
insb
sub
stos
mov
cld
daa
subl
fnstsw
jp
add
movsl
inc
shrl
or
push
stc
fstps
pop
pop
mov
in
cmp
js
or
cltd
inc
sub
jbe
insl
add
aad
loope
mov
or
sub
inc
shrl
sar
pop
cltd
mov
pushl
out
mov
cmc
addr16
js
inc
mov
jns
jmp
das
add
js
and
ret
xchg
test
mov
lock
shr
incb
neg
in
sbb
gs
imul
mov
ret
es
pop
repnz
fld
pop
mov
cld
mov
enter
jae
leave
cmpl
nop
push
roll
mov
ss
rol
ret
loope
cmc
loop
add
daa
test
adc
and
jge
mov
cli
add
decb
dec
idiv
and
sub
mov
cmp
push
rorb
mov
mov
dec
mov
lret
jbe
outsb
movsl
cmp
add
cmp
xor
jbe
jp
aas
jnp
std
cltd
cli
or
add
les
sub
cmp
cwtl
mov
jl
xlat
out
mov
sub
and
jg
cmp
adc
adc
inc
sub
xchg
mov
adc
je
inc
out
adc
add
das
push
push
dec
cmp
xor
push
sub
push
movsb
shll
bound
ss
loope
pop
fisubl
jb
ja
jo
mov
pop
dec
or
ljmp
lods
adc
psrlw
sub
mov
in
cmp
sub
cvtps2pi
jbe
dec
dec
fisttpl
repz
cmc
pushf
scas
inc
adc
icebp
call
repz
out
xor
xchg
sub
sbb
add
cmp
or
out
add
mov
pop
mov
sti
sarl
inc
das
aas
ret
pop
imul
jne
mov
shlb
ds
mov
shl
das
test
mov
imul
insb
mov
lret
push
out
imul
xor
bnd
xor
xchg
int3
pushf
outsb
sub
mov
jnp
push
mov
cmpsl
rcll
mov
mov
sbb
inc
nop
sbb
dec
data16
jno
das
add
xor
mov
rcll
mov
push
pop
hlt
test
testb
jnp
xor
imul
popf
xor
mov
cwtl
mov
push
and
aam
popf
mov
add
and
inc
sub
pop
cli
scas
xchg
or
add
fcompl
adc
cmp
es
cs
mov
les
sub
negl
xlat
je
mov
xchg
jo
jge
orb
add
das
cmp
scas
push
push
ror
mov
add
hlt
adc
mov
push
cmpsl
rolb
inc
lods
fwait
mov
rcrl
xorl
cwtl
imul
cmp
paddd
lea
ja
pushf
sub
mov
sub
lods
cmp
dec
xchg
mov
pushl
cmp
leave
adc
jge
dec
dec
mov
dec
aam
xorl
pop
lret
popf
add
jno
pop
std
jo
aaa
adc
stc
mov
mov
test
aad
stos
and
sub
or
sbb
in
roll
das
mov
enter
xor
jae
or
dec
test
jmp
lock
and
or
repz
int3
in
mov
mov
add
rcll
jb
inc
cmp
popf
jl
sub
push
cld
loop
jmp
ss
pop
movsl
decb
dec
push
fdivrs
outsb
daa
test
mov
mov
xor
test
fiadds
inc
cmpsb
gs
or
xchg
sbb
mov
andb
mov
jp
jnp
sbb
aas
push
sbb
xor
ss
cmp
and
and
fidivrl
cmc
mov
lret
sbb
inc
sbb
add
and
pop
xchg
mov
jmp
push
scas
in
shlb
clc
and
movsb
ja
pop
out
mov
loope
cmp
stc
into
inc
xor
outsb
cmpsl
sub
lahf
pop
dec
subb
and
mov
xor
xor
test
mov
insl
iret
pop
xchg
stos
jne
stos
mov
test
fsubr
cmp
xor
xchg
or
jns
push
xsha1
cmpsb
lea
add
cmp
and
xchg
ds
push
out
montmul
cmpsb
add
push
mov
push
push
lea
jne
pushf
xor
bound
sbb
xchg
push
jmp
mov
testl
sbb
sbb
mov
mov
ljmp
pushf
repz
push
out
xchg
sbbl
outsb
rorl
push
jl
add
or
fdivs
jge
inc
out
dec
sbb
mov
add
pop
mov
gs
jb
xchg
mov
mov
mov
xor
imul
in
inc
mov
iret
pop
out
loop
and
int
or
insl
jle
leave
jl
dec
orl
pop
pop
xor
adcb
push
jle
insb
je
data16
test
adc
dec
mov
dec
xor
fldenv
dec
clc
mov
cmp
aad
cmp
arpl
jg
cltd
xor
mov
pop
inc
pop
push
mov
insl
mov
mov
sbb
dec
jo
dec
mov
mov
js
mov
push
mov
lods
shlb
cs
int3
sub
jne
sbb
pop
and
dec
sub
leave
cmpsb
mov
pop
mov
je
lret
and
orl
sarl
xor
mov
loope
stos
rorb
jne
cmp
and
std
fstpl
push
sti
xor
push
out
sbb
inc
xlat
lock
stos
and
into
enter
fisttpl
jbe
jno
insb
fstl
adc
cmpps
out
rcrb
push
sahf
push
aam
mov
pushf
das
mov
mov
fimuls
mov
hlt
sti
push
lret
and
jno
lds
jecxz
out
clc
outsb
add
xlat
jecxz
pop
mov
roll
es
aaa
neg
add
movsb
sub
cmpsb
imul
clc
repnz
jo
pop
xchg
sub
sub
sbb
leave
xchg
sbb
and
push
or
adc
dec
inc
mov
insb
adc
jo
mov
xchg
jbe
mov
clc
or
adc
jg
adc
cmp
jge
sub
sahf
mov
outsl
jnp
lcall
xchg
mov
sbb
imul
ds
scas
les
mov
das
jb
mov
mov
dec
out
cwtl
sub
inc
mov
pop
adc
js
test
xor
sti
ret
jne
cmpsb
inc
decb
xor
xor
and
in
fdivrs
xor
xchg
push
or
push
inc
cmp
inc
sbb
aam
xor
xor
mov
push
jne
xchg
out
sbb
cltd
adc
jno
jne
das
fwait
loop
enter
aas
testb
push
test
cltd
xchg
add
out
repnz
jle
inc
mov
mov
addr16
xor
and
cld
mov
shlb
push
jne
adc
inc
lea
cmp
push
xor
out
or
mov
jecxz
call
or
testl
ds
sub
in
pop
psadbw
testb
inc
fmuls
mov
jno
call
cmp
add
push
imul
pop
xor
repz
mov
scas
pop
push
dec
add
ss
scas
rcl
ja
push
jo
stos
scas
xchg
adc
mov
fs
je
sub
inc
fldcw
ljmp
cmpb
cwtl
jns
dec
cmpsb
mov
pop
in
lea
aad
sbb
repz
cli
call
rol
sbb
mov
test
mov
xor
bound
lock
fwait
cmp
jbe
frstor
std
in
stos
inc
mov
jno
aad
sub
sbb
fnstenv
lods
xchg
sbb
jle
repz
sbb
iret
fstps
mov
dec
ds
mov
rcrb
sub
test
hlt
push
mov
adc
lea
mov
xchg
cld
add
and
sub
sub
ja
inc
sti
stos
idivl
adc
pop
jo
ss
or
sbb
sarb
xor
add
lcall
insb
fdiv
sbb
adc
jbe
aaa
xchg
addr16
jecxz
imulb
jmp
out
imul
add
jl
adc
insl
xchg
dec
ret
add
push
and
or
gs
popf
stos
outsl
stos
mov
fildll
imul
sbb
and
push
arpl
iret
inc
fadd
and
mov
lods
fdivrs
scas
pop
enter
roll
test
scas
add
cmc
cld
add
es
xchg
cmp
fnstenv
pop
push
gs
les
ret
cmc
sub
pop
mov
jmp
out
sub
loopne
cmp
in
pushf
out
push
jmp
cmpl
call
add
ds
jmp
jge
cli
pop
cmp
test
pop
in
pop
mov
flds
movsl
mov
pop
cmpsb
add
int3
and
push
clc
jae
cmp
adc
xchg
dec
mov
adc
xchg
adc
je
lahf
mov
add
in
inc
push
xlat
sbbl
add
aam
lea
mov
pop
cli
xchg
nop
outsl
add
inc
das
std
inc
stc
das
mov
jae
idivl
xor
loopne
adc
cmp
cmp
mov
and
call
mov
push
lock
imul
mov
push
sbb
insl
jp
outsl
pop
loope
js
pop
out
jle
xchg
pop
rcll
aad
test
inc
repz
shll
ret
fmuls
inc
insl
sub
lret
fmuls
ret
and
rcr
mov
cmpsl
std
pop
push
sub
ret
jmp
pop
cltd
std
jg
out
jno
mov
test
push
dec
dec
lret
mov
pop
inc
lods
out
rdtsc
inc
mov
add
cli
mov
cmpsb
xchg
mov
ror
mov
pop
faddp
js
cmpsb
popa
data16
cld
xor
insl
jl
lret
jnp
or
out
test
in
push
pop
js
and
mov
xor
adc
pop
pusha
jp
lods
icebp
xchg
or
xor
adcb
insl
pop
jmp
push
dec
jmp
das
movsb
into
enter
pop
pop
enter
movsl
fnstcw
pusha
movups
sbb
addr16
pop
lds
std
dec
dec
inc
mov
cmp
mov
mov
push
and
sub
cwtl
pop
jo
lods
jmp
xchg
mov
xor
add
inc
pop
add
jecxz
dec
loope
cmp
nop
stos
push
ret
ret
mov
gs
mov
int
cmp
fs
hlt
or
fimull
lret
popa
inc
jle
xchg
stos
cmpsl
push
push
stc
test
ljmp
dec
or
in
xchg
sub
and
insb
mov
mov
mov
ficoms
push
fcmove
in
jnp
mov
mov
stos
adcb
js
push
cmpsl
xchg
xor
mov
aaa
mov
dec
jae
icebp
push
cmc
ja
or
jge
ret
xchg
bnd
or
dec
mov
inc
nop
rorb
inc
jno
daa
ljmp
jnp
cmp
jbe
fcoml
lret
cmpsl
leave
gs
sbb
ja
sahf
sbb
shlb
idivb
sbb
push
or
jle
mov
imul
bound
lock
movsl
xor
testb
jge
cmpsb
mov
jge
xor
lods
jmp
pusha
xlat
icebp
xor
dec
outsb
cmp
lcall
dec
fsts
pop
movsl
mov
ljmp
mov
mov
ds
in
dec
int
push
sub
sub
mov
test
je
sub
xor
push
xor
cmpsb
shlb
inc
add
hlt
sub
clc
push
in
sub
fldt
mov
aam
xchg
dec
test
inc
lret
push
cli
leave
cld
inc
jbe
cli
push
push
stos
sarl
stos
xchg
sub
push
ljmp
sbb
mov
sub
and
push
ror
pusha
cmp
lds
pop
out
fstps
lahf
dec
ss
jo
frstor
sbb
lods
xchg
cmp
cmp
xchg
jge
inc
in
in
imul
int
mov
push
stos
sbb
jg
xadd
dec
add
push
lods
and
arpl
push
pop
int3
jg
rclb
test
cli
int
shl
or
pop
subl
adc
mov
neg
aam
pop
popf
dec
call
pop
push
cmpsb
loop
int
sub
lret
loope
jo
push
sbb
or
mov
mov
in
ja
mov
insl
out
fwait
std
rorb
mov
add
arpl
fldt
dec
pop
out
add
mov
in
cmpsb
in
pop
shll
push
cmc
daa
inc
leave
inc
jge
call
xchg
cmpsl
mov
mov
in
mov
hlt
std
mov
mov
in
and
mov
les
pop
lcall
pop
outsb
fs
xchg
addr16
cmp
cltd
outsb
sub
dec
loopne
jno
xor
popa
pop
xchg
add
push
out
sub
dec
add
jg
cmp
sahf
iret
clc
test
lods
out
sbb
dec
and
js
test
pop
out
inc
xchg
dec
in
in
xor
in
push
push
xchg
fwait
sub
mov
sub
outsb
push
cmp
ss
icebp
loop
jnp
mov
fs
movl
mov
int
pop
xchg
fstpl
cmp
stos
push
push
sysenter
mov
cwtl
out
mov
and
loop
mov
sbb
dec
fs
xor
or
not
sbb
pop
enter
clc
sbb
xchg
inc
push
dec
pop
and
sub
sub
scas
addr16
out
mov
data16
xchg
push
cld
mov
roll
outsl
adc
cs
add
test
sti
ficompl
or
mov
push
jo
out
lods
lahf
icebp
mov
lahf
add
pop
push
insb
mov
out
sbb
mov
les
push
and
fs
push
in
popl
jbe
inc
push
mov
jmp
movsb
out
cmpsl
or
dec
int
insl
inc
adc
dec
mov
aas
mov
and
test
cmp
popf
push
in
add
mov
jle
cmp
fnstenv
fldt
adc
xchg
dec
cwtl
jo
outsb
push
xor
xchg
lahf
add
push
lret
or
jmp
mov
loope
ficompl
mov
jne
and
mov
mov
in
jo
cli
push
mov
jg
or
pop
repz
fadds
xchg
jp
adc
out
sub
imul
jne
or
shrl
sbbl
push
push
mov
cmp
xchg
sbb
pop
ret
insb
stos
mov
mov
pop
in
adc
sub
jl
jg
cmp
mov
and
jae
adc
and
pop
adc
repz
mov
ss
loop
cmpsl
jae
and
jge
dec
xchg
ljmp
outsl
mov
pushf
dec
xor
jbe
and
je
stc
sub
cmp
mov
mov
push
jne
pop
aas
fnstenv
pusha
and
jae
lret
jo
inc
test
addr16
xchg
cmp
mov
out
cmp
adc
test
enter
cmp
pop
push
rclb
inc
es
test
cmp
mov
mov
push
and
enter
pop
repnz
bound
cmpsl
imul
mov
and
push
pusha
mov
mov
mov
les
insl
ja
mov
stos
fnstcw
aam
cs
psubsb
push
shrb
xor
fldl
pop
xor
arpl
rorl
pop
pop
jl
pop
imul
cmpl
inc
ja
xor
jle
xor
addl
rorl
adc
fs
sub
mov
lret
pop
test
outsl
jne
imul
jmp
pop
std
sahf
xor
insl
jnp
pop
inc
in
push
ja
push
aam
rorb
mov
sbb
imul
mov
movb
pop
aam
inc
or
jl
cltd
pop
int3
insb
roll
cmp
fbld
xor
mov
mov
popf
cmc
fxch
xor
repz
jecxz
test
in
aaa
xchg
mov
mov
dec
lret
inc
repz
dec
sbb
test
or
mov
sub
mov
popa
das
xchg
jnp
sbb
mov
bound
bound
adc
iret
fnstcw
sbb
jns
stos
xor
fiaddl
in
jge
dec
add
adc
sarl
ljmp
mov
loopne
xor
dec
pop
and
les
cmp
into
xchg
and
sbb
scas
adc
popf
jle
xor
subb
enter
ljmp
pop
or
and
cwtl
aas
adcb
pop
sub
mov
popl
add
fcoms
cwtl
outsl
loop
jb
add
cmc
popa
testl
xlat
fldl
dec
stc
mov
inc
outsb
addr16
push
in
int3
icebp
imul
sbb
sbb
add
push
insl
int
arpl
pop
in
lea
pop
xchg
dec
mov
cmp
cmc
jle
jne
pop
pop
cmpsl
in
mov
mov
in
ds
lds
shrd
pop
mov
inc
jmp
enter
aam
mov
or
inc
mov
fistpll
push
fdivp
or
es
push
jg
inc
jns
cmp
push
loop
scas
repnz
cmp
int
cmpsl
call
cwtl
shlb
jae
inc
mov
rcll
jmp
inc
std
mov
mov
stos
mov
shlb
inc
push
loope
loope
mov
xchg
sbb
nop
rorl
add
xchg
push
mov
push
repz
mov
cli
fucomp
test
push
call
test
jo
mov
mov
inc
sti
pop
xchg
outsl
mov
push
mov
leave
push
fnsave
xchg
inc
aad
jo
loope
je
sti
jge
dec
cmp
fst
xor
or
jnp
push
popf
out
inc
js
iret
mov
scas
and
pop
mov
cmp
icebp
pop
pop
icebp
xchg
call
loopne
and
mov
leave
jae
push
enter
loop
frstor
pop
aam
scas
sbb
jg
int
jmp
xchg
and
movsl
icebp
fsubrp
mov
test
fldcw
push
jbe
cli
dec
mov
push
test
mov
mov
cmp
pop
cmp
lahf
push
mov
or
jge
in
clc
mov
add
incb
je
or
lret
pusha
jle
insl
das
adcb
inc
call
pop
out
adc
shlb
das
addr16
aaa
mov
out
fstl
dec
pop
packsswb
fldenv
xchg
stos
call
test
mov
fisubrl
pop
sub
dec
leave
pop
call
insl
mov
pop
lea
nop
cmp
repz
andb
jno
mov
fsubl
in
inc
int
inc
insb
movsl
jle
lahf
mov
jne
push
cmpsb
pusha
push
jo
in
rcrl
loope
rcll
sbb
and
daa
cmp
mov
push
in
jo
push
jecxz
xor
arpl
aad
xchg
cs
clc
jne
jb
mov
fwait
scas
mov
jl
cmp
mov
out
sti
dec
mov
cmp
and
pop
out
mov
arpl
jne
bnd
jo
fs
xchg
and
add
inc
pop
mov
mov
xchg
das
jne
pusha
imul
adc
xchg
adc
mov
sbbl
xchg
cli
cmp
cmpsb
cmp
hlt
lods
add
add
sub
shl
and
pusha
push
push
fcmovu
mov
push
jecxz
mov
fs
hlt
sub
mov
add
test
aam
jno
sti
stos
pop
pop
scas
sub
orb
xor
inc
in
adcl
mov
sbb
pushf
ds
pop
scas
dec
or
leave
mov
push
inc
or
or
ror
inc
xor
add
xchg
sub
jp
mov
inc
data16
xchg
mov
scas
test
out
das
leave
sub
xor
adc
inc
int
push
push
daa
dec
sub
mov
out
scas
inc
mov
cmp
inc
data16
inc
test
inc
mov
inc
fmull
sbb
xlat
fisttps
push
testb
jmp
xor
cli
push
adc
dec
cwtl
sbb
int
lods
shll
lret
mov
sahf
push
mov
push
jg
or
cmp
in
in
adcl
idivl
ds
data16
push
push
mov
sbb
and
mov
lret
jp
cmp
cmp
aam
mov
jnp
inc
fsubl
dec
add
loope
xchg
sub
push
shlb
jns
or
test
push
mov
adc
add
imul
mov
cmp
sbb
sbb
jle
pop
cmp
and
arpl
outsl
push
ss
ss
xor
push
incb
xor
shrl
dec
stos
or
mov
pop
sub
push
mov
jl
mov
xor
xchg
in
xchg
rclb
loope
lods
clc
jae
or
cli
ds
test
pop
mov
and
push
invd
or
cmp
lcall
jmp
add
sbb
fnstsw
xchg
dec
dec
das
mov
mov
addl
popf
pop
das
mov
je
jg
pushf
call
pop
fstps
sub
into
pushf
and
movsl
jecxz
pop
dec
jnp
sub
pop
xlat
pop
aaa
notl
leave
ja
add
push
movsl
clc
push
adc
bound
arpl
jmp
out
xor
or
sub
pop
mov
aam
xchg
stos
sbb
mov
adc
movsb
cmp
rolb
sub
pop
stos
fiaddl
popf
jnp
dec
shl
xchg
push
pop
out
cmpsl
xchg
dec
loop
xor
jmp
and
test
divb
rolb
mov
pop
and
mov
and
inc
jl
arpl
das
je
adc
sbb
cmpsb
mov
pop
ja
fldenv
data16
pop
ret
xchg
sar
movsl
repz
shlb
xor
in
leave
outsl
inc
jl
jecxz
adc
in
testb
or
addr16
adc
rol
jbe
jns
es
movsb
loop
push
stos
adc
js
mov
jo
jle
or
mov
scas
inc
mov
pop
pop
repnz
scas
jecxz
test
jae
or
cmp
inc
inc
fbld
inc
ja
mov
in
ret
rorl
xchg
jno
cmp
pop
pcmpgtw
xchg
xor
pop
xchg
out
mov
pop
mov
fnstcw
jg
movsl
insb
lods
xchg
pop
repnz
lds
leave
imul
push
cmc
mov
mov
lahf
jl
cld
sub
jecxz
adc
out
loope
into
pop
in
adcl
jno
insb
cmp
cmp
imul
inc
or
scas
insb
out
and
jno
adc
lahf
xor
movsb
fidivrs
popf
mov
negb
xor
clc
pop
adc
push
std
cmc
mov
adc
jo
jo
cs
rclb
pop
and
inc
add
es
sbbb
pop
mov
adc
popf
and
inc
jns
and
insl
daa
or
cmp
mov
popf
xor
out
mov
shrb
lret
repz
testb
pop
inc
add
sbb
dec
inc
pop
out
jae
pop
fstpt
pop
hlt
repz
hlt
sbb
jl
data16
fwait
aam
es
bound
ror
test
pop
rcl
xlat
mov
out
cmp
jo
push
adc
inc
and
movsl
mov
fdivrp
insl
dec
mov
xor
cmpsl
push
leave
shrb
shl
incb
jle
mov
lds
inc
arpl
stos
std
popa
scas
sbb
stos
repnz
and
int3
jae
aam
rcr
into
loop
dec
and
inc
test
jbe
cli
call
jb
hlt
scas
fdivrp
xchg
adc
lock
jle
push
mov
cmc
mov
outsl
jg
jne
push
or
cmp
cmp
inc
fdiv
sbb
sbb
std
sbb
lods
push
dec
out
fistpll
iret
iret
scas
arpl
leave
add
xchg
sbb
insb
push
push
int3
dec
push
sbb
xchg
nop
aas
rclb
cmp
rcrb
sbb
add
in
or
arpl
bnd
shr
add
cmp
or
cmp
or
pushl
stos
subb
mov
pop
dec
repz
sub
leave
mov
jne
popf
sub
aam
xor
push
xor
rcl
jmp
aas
out
aam
call
aad
ret
in
mov
cmp
dec
js
jno
mov
stos
dec
inc
popf
xchg
mov
add
fisubs
jmp
std
test
cli
icebp
jno
add
mov
fisubrl
ret
inc
je
insl
iret
data16
inc
lret
push
sbb
or
scas
outsb
loope
pop
push
mov
add
aam
add
les
test
in
das
pushf
testb
push
sti
mov
cmpsb
mov
jb
add
rcrl
pop
push
dec
mov
push
fs
dec
int
mov
into
cli
sub
push
stos
dec
pop
sarb
pushf
cli
sbb
xchg
imul
in
lock
into
sbb
add
fistpl
cltd
pop
into
adc
arpl
sub
add
or
sub
jge
leave
outsl
out
repnz
and
sub
sub
push
pop
jp
scas
inc
les
sbb
nop
stos
insl
add
cmc
mov
mov
data16
je
movsl
mov
jbe
inc
test
iret
add
dec
xlat
pop
cmpsb
lret
push
pop
imul
fists
repnz
jne
repnz
mov
push
imul
sub
xchg
ja
push
lcall
dec
andl
lea
movsb
prefetch
mov
push
loope
push
cmp
and
xchg
mov
pop
push
add
outsl
out
shll
push
mov
adc
add
aaa
mov
jno
stos
in
aam
adc
push
or
pop
lcall
and
jae
xor
bswap
sbb
outsl
sub
dec
lds
pop
enter
int
jl
inc
cld
mov
je
inc
and
das
push
enter
daa
mov
mov
adc
outsl
cli
rorl
aaa
mov
outsl
fimuls
cmp
cmp
fmull
out
fs
push
fnsave
popa
sub
gs
lds
clc
mov
mov
mov
icebp
lea
sti
fwait
jecxz
push
insb
adc
inc
addr16
stc
lret
xor
cmp
faddl
pop
mov
xor
lret
inc
adc
out
jns
pop
mov
xor
out
cmpsb
inc
push
sub
push
repz
pop
add
aas
xlat
nop
jno
clc
inc
flds
loop
lock
push
push
inc
fidivl
adc
test
mov
lcall
jge
mov
mov
fidivl
mov
icebp
rclb
shr
into
push
call
mov
and
ss
sbb
popa
push
xchg
xchg
xchg
adc
stc
arpl
sub
aas
stos
jle
clc
stos
clc
mov
sbb
add
mov
push
inc
aad
mov
test
fists
jle
jmp
or
mov
pop
int3
fistpll
push
push
mov
cmp
aaa
data16
dec
pop
outsb
inc
or
mov
sub
insl
sbb
inc
daa
cwtl
or
lcall
adc
fdiv
jl
and
pop
int3
adc
mov
jg
in
mov
mov
stos
aad
icebp
jo
dec
in
repz
mov
shlb
mov
xor
jp
adc
inc
std
inc
daa
or
into
fdivrl
push
pusha
mov
sub
fbstp
xchg
sarb
pop
movsb
cld
push
lcall
or
add
ret
pop
out
aam
fmul
mov
or
or
cmc
js
int
xor
stos
jp
fwait
xchg
ret
sbb
cmp
popa
jae
and
xchg
test
inc
scas
jmp
mov
push
rcrl
dec
cmp
testl
dec
loopne
popa
mov
enter
sub
xchg
test
or
and
lret
mov
fsubs
push
lock
ficomps
adc
enter
sub
jge
jbe
es
mov
mov
data16
push
into
fidivs
in
xchg
jg
cltd
cld
lret
cmc
mov
test
jmp
cmp
aam
adc
and
xchg
xchg
jle,pt
xchg
pop
mov
movsb
cmp
inc
pop
xor
in
ds
notl
mov
cltd
lahf
mov
pop
testl
pop
je
cmp
pop
xchg
in
loop
mov
ljmp
sbb
jno
jp
loopne
aas
cmp
adc
sbb
arpl
push
bound
lea
into
mov
ja
ss
adc
cs
jo
ffreep
xchg
mov
cmp
out
jo
sahf
mov
sahf
or
cmpsb
and
jae
mov
sahf
push
rcrl
lds
sub
xor
push
or
pop
push
pop
xor
cmc
int3
jo
js
xor
adcb
loope
movsl
sbb
push
inc
orl
mov
test
push
sub
iret
push
aaa
cmp
sbb
xchg
mov
and
hlt
push
test
mov
movsb
adc
mov
shrl
cmp
jmp
aam
jb
pusha
add
xchg
mov
jne
ja
sbb
cld
mov
subb
cmp
push
jbe
push
ja
fs
gs
sbbl
pop
dec
dec
cli
js
in
cs
cmp
jo
pushw
pop
push
mov
inc
xor
ds
fcmove
arpl
ja
fidivs
and
jne
daa
mov
ljmp
addr16
mov
insl
push
or
xchg
add
hlt
addr16
fsts
and
sbb
in
push
mov
mov
idivb
jae
mov
je
iret
jns
pop
scas
testb
hlt
mov
js
insl
inc
or
mov
addr16
mov
and
and
ret
and
sub
jns
jne
cmpsb
xchg
mov
loop
icebp
adc
and
lock
pop
ljmp
mov
mov
and
inc
push
cs
mov
test
and
and
in
shlb
fstpt
or
in
add
adc
jmp
loop
hlt
push
sub
add
inc
popa
gs
cmp
pop
push
movsb
xchg
mov
pop
shrl
adc
push
je
push
lds
aad
stc
lea
xor
mov
popf
test
xchg
and
push
cwtl
jno
mov
cmp
mov
sbb
aas
lret
sahf
sti
sbb
lock
dec
add
jl
enter
idivl
sbb
imulb
mov
in
repz
mov
jbe
rclb
popf
mov
cltd
in
lock
cmp
imul
and
cld
inc
clc
sbb
push
pop
xor
xchg
pop
jbe
add
in
and
dec
pop
push
or
gs
shr
xchg
mov
or
mov
sbb
push
test
sbb
lea
push
repz
add
int
mov
int
mov
pop
jle
std
stc
js
mov
enter
sti
ss
pop
sbb
enter
xchg
pop
mov
adc
adc
push
push
mov
in
pop
push
leave
dec
or
in
lods
jb
or
lds
xchg
cmp
inc
call
cmc
in
inc
mov
pusha
add
xor
clc
arpl
jge
push
jge
lret
outsl
mov
add
adc
mov
xchg
push
mov
add
mov
stos
sub
aam
xor
pop
repz
lods
aad
test
sub
or
jne
xor
aad
jbe
inc
pushf
aas
mov
mov
test
popa
or
inc
inc
dec
mov
push
xchg
daa
leave
popf
daa
push
in
cwtl
test
cmc
cmp
out
bound
mov
jp
xchg
cmpsl
mov
jle
push
pop
loopne
mov
ss
in
inc
and
inc
das
xchg
mov
fildll
cli
xchg
int3
xor
stc
add
in
and
pop
jecxz
lahf
test
pop
xchg
dec
dec
imulb
pop
mov
jmp
xchg
cmp
inc
mov
xchg
fpatan
sub
inc
mov
or
mov
ljmp
cmp
sub
dec
xlat
test
popf
sbb
xor
leave
xchg
mov
mov
cltd
insb
arpl
xor
sbb
mov
and
mov
imul
push
mulb
movsb
cs
adc
add
sub
mov
mov
jno
push
in
iret
xchg
mov
or
dec
xchg
xchg
and
and
sahf
mov
sbbb
sub
sbb
push
rcrl
add
shll
fdivs
cmp
fimull
and
ss
or
mov
pop
pop
push
add
mov
dec
inc
fldcw
fsubr
outsl
nop
mov
scas
dec
jnp
cmp
jl
lea
orps
ss
mov
mov
lahf
pop
loope
push
cmp
xchg
xor
data16
insl
icebp
ret
cwtl
repnz
jae
sbb
jno
and
popf
in
mov
xor
lock
adc
ret
outsb
cs
mov
test
xlat
sub
and
pusha
jmp
push
mov
dec
jne
test
fwait
adc
and
xorb
cmp
test
or
imul
xor
loop
loope,pt
or
in
adc
mulb
test
pop
and
push
and
jmp
and
data16
jmp
inc
int
jl
or
mov
mov
into
jno
push
pop
out
bound
mov
fwait
dec
push
fdivs
cmp
push
or
mov
mov
cmp
jo
pop
adc
pop
mov
jp
mov
adcl
dec
fbld
iret
sbb
int3
mov
fcmovne
cli
push
out
jmp
mov
popf
pusha
pop
adc
mov
icebp
or
cmp
jno
testl
dec
imul
ret
pop
and
loopne
mov
cmp
jmp
adc
adc
fwait
sub
aad
mov
lret
inc
xor
or
push
and
fs
inc
mov
sbbl
lahf
mov
cli
arpl
adc
cmp
lcall
pop
mov
sbb
jle
push
xchg
mov
push
stc
mov
mov
arpl
imul
fbstp
push
cmpsb
push
push
out
xchg
mov
mov
test
push
sub
call
xorl
cs
aaa
or
jo
fildll
cmp
movsb
jl
test
cmp
leave
pop
icebp
dec
jnp
rep
cmp
sarb
lcall
mov
fwait
psadbw
je
mov
sahf
adc
lcall
ss
push
mov
test
push
cmpsl
test
cmp
sahf
in
mov
divl
sbb
and
stos
push
pop
jae
xchg
addr16
hlt
dec
inc
ljmp
repnz
lahf
cmovbe
repz
mov
mov
mov
insl
rorb
jne
pop
pop
imul
pushl
cmpsb
and
bound
or
xchg
xchg
mov
sbb
imul
dec
adc
push
aas
pushf
ss
lahf
fldpi
mov
loopne
ljmp
add
cmp
pop
lret
add
add
cld
or
mov
push
pushf
lods
and
mov
mov
and
mov
lds
jle
cmpb
mov
mov
push
stc
xor
repz
lcall
cwtl
pop
sbb
xchg
rorl
xchg
std
popa
insl
add
sbb
mov
cmp
cmp
jae
sub
jns
int
adc
push
leave
aas
mov
cmp
or
les
aad
iret
out
outsl
jge
mov
xor
sub
push
cmpsb
loop
jns
cmp
shll
xchg
imul
pop
adc
jb
adc
sub
ljmp
fucomi
popf
lea
xchg
sbb
mov
xchg
jecxz
sti
pop
fsubr
orl
fsubp
call
mov
push
sbbb
mov
xor
xchg
push
pop
xchg
repz
push
push
xor
and
xchg
pop
imul
mov
cmp
std
jns
out
xchg
sarl
adc
mov
iret
jge
push
sub
lcall
pop
test
scas
jb
rorl
mov
fnsave
jge
jl
cmpsb
inc
fwait
test
sub
lea
add
sub
shrl
adc
and
popf
or
and
xchg
adc
xchg
push
or
inc
push
dec
out
xchg
xchg
mov
daa
lea
mov
scas
inc
pop
shrb
popf
or
mov
js
jle
scas
fidivrl
arpl
jge
fcomps
push
es
sbb
cmc
pop
shlb
and
aad
and
lcall
ljmp
notb
pop
in
lods
dec
cs
cli
leave
fistl
mov
rorb
pop
es
aas
jnp
jnp
cmp
add
mov
push
or
movsb
cmpsl
mov
fwait
xchg
pop
std
push
enter
adc
pop
jg
and
xchg
andb
mov
lahf
sub
or
gs
sub
std
sbb
shl
jle
test
pop
notl
jo
xlat
outsl
je
out
stos
push
pop
stos
or
cmp
les
outsl
jnp
inc
or
scas
xchg
push
aam
jno
xorb
pop
es
jbe
out
cwtl
cli
jne
test
outsb
shrd
mov
sub
xchg
cld
fnstsw
add
addb
inc
pop
lret
aas
xchg
addl
push
test
mov
mov
lret
jge
in
cmpsb
dec
jecxz
cmp
fidivs
repnz
imul
js
adc
loopne
inc
mov
cmp
popa
les
mov
std
sbb
sub
test
mov
fs
rorl
inc
or
lcall
in
push
daa
mov
popa
mov
sbb
pop
cmp
mov
cmp
xor
sub
rcr
mov
sbb
int3
jno
lock
in
sti
mov
jae
dec
insb
jl
add
jg
popf
dec
pop
js
adc
sub
sub
loop
outsb
fwait
push
pop
scas
mov
mov
aas
stos
push
stos
fcmovne
xchg
std
adcl
inc
xchg
cmp
fwait
push
add
pop
jbe
daa
test
pop
imul
jle
lahf
mov
fisubs
rcll
mov
hlt
mov
test
mov
ljmp
lea
mov
or
and
pusha
jg
sbb
inc
or
repnz
sbb
les
inc
icebp
mov
test
mov
enter
inc
fstpl
popa
sub
xacquire
sub
leave
adc
add
sbb
inc
insl
mov
sub
dec
jns
pop
jno
xchg
pop
sub
dec
test
adc
and
fs
int
sub
xor
data16
cld
stos
rcrl
das
fs
push
inc
stos
xchg
fldenv
xor
fwait
or
mov
xchg
lock
push
dec
movaps
sub
sbb
in
scas
mov
mov
dec
shrb
lcall
adc
js
bound
imul
cmp
das
push
cwtl
out
stc
in
lret
mov
iret
jbe
adc
inc
shrb
pop
lods
out
pop
cmp
mov
movsb
jp
fistps
scas
aas
into
add
push
pushf
xchg
nop
mov
icebp
cwtl
xchg
mov
insb
jnp
push
jb
imul
sbbl
loopne
and
mov
jp
inc
out
stos
stc
nop
sbb
or
dec
jne
pop
cmp
iret
sub
mov
dec
dec
jo
test
add
dec
fld
repz
mov
lcall
ja
sbbl
cltd
mov
iret
aaa
sbb
fs
pop
cmpb
and
jl
xchg
daa
stos
xchg
pop
daa
rorb
lea
add
dec
xchg
iret
fdivrl
ror
push
inc
out
mov
jmp
aad
push
pusha
mov
movsl
sahf
insb
decl
dec
adc
xor
lods
inc
pop
sbb
inc
gs
and
imul
xchg
test
cmp
push
nop
js
pusha
fwait
pop
int3
pop
jno
out
cmp
out
push
push
xchg
sbb
sub
loope
mov
push
in
rcl
mov
insl
lods
or
cmpsb
push
mov
or
cmp
mov
pop
adc
mov
push
outsl
inc
cwtl
scas
pop
lret
in
jb
les
jo
and
es
inc
cli
es
push
jg
mov
bound
mov
jmp
negl
das
add
inc
dec
and
dec
adc
inc
mov
mov
inc
xchg
jnp
inc
loopne
mov
addr16
mov
push
test
jnp
adc
adc
pop
mov
push
jno
push
adc
dec
push
add
aas
fcomps
stc
pop
inc
jb
mov
leave
mov
xchg
in
cmp
mov
inc
adcb
sub
iret
fldenv
cmp
nop
notb
fsubrl
aas
imulb
out
fcomip
sbb
pop
cmp
cltd
and
data16
insl
pop
out
lcall
cmp
loope
inc
stos
push
ds
inc
pop
ficoms
popa
dec
popa
xor
lds
or
pop
and
sbb
gs
aam
push
in
shll
cltd
or
inc
xlat
lcall
in
xchg
sbb
nop
sahf
xor
jb
inc
push
and
fdivrs
cmp
icebp
int3
std
in
dec
cltd
inc
or
in
dec
inc
xchg
ja
lret
jp
aad
xor
out
add
sbb
stc
mov
xchg
ret
sub
in
inc
es
cmp
adc
ljmp
std
sbb
sahf
cmp
insl
nop
in
jno
sbb
mov
mov
sub
fcomps
scas
nop
or
pop
fdivs
bound
mov
mov
xchg
stos
shr
mov
sbbb
mov
jne
adc
lret
sbb
call
or
loop
sub
jecxz
dec
imul
jge
add
adc
jp
lock
mov
leave
adc
inc
fildl
out
out
or
cld
jbe
dec
and
push
jo
fldt
sub
pop
add
testb
mov
rcr
cmp
shrb
out
jecxz
and
or
insl
xchg
push
inc
lcall
fisubs
inc
lea
push
std
xchg
mov
mov
mov
les
ret
pop
mov
mov
mov
dec
xchg
sub
lock
daa
dec
add
inc
das
xlat
xor
es
cltd
xor
icebp
mov
pop
test
aas
xchg
out
leave
mov
add
mov
push
push
ficoml
iret
xchg
arpl
fisttpll
ds
sub
and
adc
movsb
cmp
imul
testl
data16
adcb
mov
xchg
sub
dec
jno
fbstp
mov
cltd
mov
mov
inc
xchg
push
test
jge
mov
mov
movsl
icebp
shr
push
sbb
push
lds
mul
cmp
in
in
les
jl
das
nop
xchg
mov
lock
aad
int
mov
subl
lret
in
push
loopne
jnp
fwait
pop
dec
fcoms
inc
xchg
inc
cmc
mov
add
cmp
sub
cli
jecxz
sub
mov
adc
inc
or
loopne
adc
gs
icebp
shlb
mov
movsl
outsb
or
loop
scas
iret
divb
inc
adc
mov
sarb
sub
inc
mov
in
paddsw
and
or
cmp
adc
push
and
jge
icebp
fs
cli
cmp
dec
loopne
inc
cmp
ljmp
inc
outsb
add
or
lea
sub
rolb
sub
pop
jmp
arpl
jnp
aaa
cmp
lcall
xor
es
sbb
fmull
push
shrl
shl
inc
insb
add
pop
add
nop
xchg
icebp
mov
fsubrs
jns
lods
and
pop
xchg
xor
push
inc
push
pop
xor
xor
pop
sub
aad
xchg
fs
jmp
rclb
push
push
xchg
mov
fsubs
iret
mov
ds
jmp
sbb
cmp
push
mov
or
add
imul
jge
je
ljmp
lock
jnp
xor
loopne
fisttps
shlb
sbb
je
mov
cli
push
adc
dec
addr16
les
mov
orb
mov
out
adc
inc
xlat
shll
jle
cmc
mov
xchg
add
int
push
adc
pop
mov
loopne
inc
mul
out
xchg
jns
push
pop
dec
lcall
in
jne
ljmp
push
jl
loop
shll
sub
cmpsb
inc
dec
pop
nop
cs
out
push
mov
cmpl
xchg
push
fisubrl
test
jecxz
push
jno
shrb
popf
xchg
or
pop
sub
es
fiaddl
adc
das
inc
push
sbb
jnp
out
push
fdivl
cld
xchg
cmp
pop
mov
sub
jnp
cmp
out
shrl
and
jl
pop
fdivl
ret
add
push
popf
lock
movsb
sti
je
jmp
rcrl
jecxz
pop
rdtsc
or
mov
ret
rcr
imul
mov
cmp
sub
stc
dec
add
lods
push
stos
xchg
xor
jb
ret
movsb
jle
lret
jg
dec
adc
push
inc
sub
push
scas
push
cmp
call
add
adc
xchg
cwtl
movsl
addb
outsb
nop
rcrb
cmc
mov
dec
pop
ds
sub
xchg
xor
push
cmpsl
inc
mov
inc
dec
xchg
scas
or
push
rolb
ja
fnsave
jne
sbb
inc
lahf
repz
scas
incl
adc
or
push
inc
or
cltd
sub
stos
sbb
add
es
fisubrs
popf
negl
test
repz
fdivrp
or
stos
mov
aas
lds
inc
ficoms
sbb
xor
fstpt
scas
cmp
jo
out
jb
test
stc
nop
out
mov
mov
movsb
hlt
mov
jge
pop
daa
je
je
dec
fbstp
enter
dec
lods
inc
jl
mov
daa
dec
lret
cwtl
jecxz
or
sub
rcr
fiaddl
mov
icebp
call
or
sahf
add
test
icebp
or
cmp
and
into
xor
cmpsl
lahf
push
out
aas
jmp
in
outsb
add
mov
push
in
pop
ret
xor
subb
or
ss
jp,pt
push
mov
mov
repnz
and
jns
jmp
or
pop
loop
and
repnz
add
mov
sbb
testb
bound
ja
mov
pop
and
ficomps
and
cmp
bound
xchg
loope
jg
xor
mov
ret
adc
sub
cs
dec
sahf
repz
inc
sub
js
cmp
cmpsl
pop
or
js
mov
jb
stos
mov
lret
push
lods
test
and
cmpsb
xor
fsubs
jbe
test
sahf
flds
push
insb
mov
inc
test
negb
inc
add
adc
xchg
aam
scas
test
or
sbb
lahf
daa
dec
add
dec
xchg
push
xor
mov
mov
stos
or
push
mov
inc
aad
xchg
adc
cmpsl
lret
int
fs
push
repnz
ljmp
cmc
push
inc
cmp
and
mov
popa
cld
dec
pushf
jl
cmp
cmpb
ja
pop
les
pop
stos
adc
xchg
mov
push
xor
rolb
imull
inc
data16
jns
push
fst
add
pop
imul
lock
inc
scas
test
enter
stos
or
cltd
outsl
push
fdivrs
pop
xor
leave
ret
or
in
push
out
and
pop
xor
mov
std
xchg
pop
insb
fisubrs
xchg
jg
mov
lahf
sahf
out
bound
cmpsl
das
fnsave
sub
into
pop
rolb
adc
call
in
cmp
nop
aad
add
sar
adc
adc
adc
fcomi
sbb
loop
jne
testb
adc
mov
xlat
push
and
les
in
es
imul
stos
ja
rcl
xchg
sbb
push
push
sbb
punpckldq
push
add
jl
pop
rcll
test
cmp
outsl
cmp
push
push
mov
or
sarl
push
xlat
jnp
push
icebp
mov
hlt
leave
leave
fdivs
ret
xchg
insb
mov
loop
and
js
out
imul
cs
xlat
and
mov
stos
cmc
sbb
push
cmpsl
jmp
jecxz
mov
push
mov
lods
insl
call
add
stc
jno
mov
cld
call
out
int
mov
jns
mov
pusha
movsb
orl
sahf
or
bound
sbb
insl
pop
sub
xor
push
mov
sub
sarl
insl
inc
les
cwtl
loope
lods
idiv
xor
in
loope
and
push
mov
jle
jns
pop
pop
push
jne
loop
icebp
push
mov
pop
faddl
test
lods
loop
mov
mov
and
inc
leave
shrl
push
arpl
lods
sbb
xchg
or
shlb
add
mov
jno
daa
and
pushf
shr
jnp
push
movsl
mov
les
sub
and
lea
pop
ret
mov
jb
scas
pop
mov
jae
xchg
test
sbb
bound
xor
and
push
lret
mov
imul
sahf
imul
or
fwait
test
inc
cmpsl
xchg
push
mov
pop
mov
leave
and
xchg
scas
int
in
nop
add
push
sub
pop
jp
aas
lods
jnp
mov
addr16
ljmp
xchg
mov
dec
mov
les
orl
lock
test
daa
inc
cmp
sahf
imul
add
shrl
clc
jae
dec
popl
mov
mov
repnz
pop
cmp
sub
dec
cmp
pop
les
ret
dec
cmp
aaa
lcall
pop
shl
gs
shr
imull
enter
jo
push
js
or
adc
add
imul
mov
loopne
insl
push
mov
int
xor
loop
jmp
dec
mov
bound
adc
into
sbb
outsl
call
std
call
sbb
repz
add
test
cmpsl
jnp
mov
imul
lds
lret
add
mov
insl
sbb
mov
mov
frstor
add
sbb
push
mov
add
mov
jnp
or
xchg
mov
and
fneni(8087
stc
cltd
push
jne
xchg
xchg
test
and
dec
and
sti
cmp
pop
scas
pop
pusha
push
rol
xor
ljmp
scas
in
adc
sub
and
std
or
add
ds
int
cli
push
filds
pop
cld
pop
sbb
in
test
das
ret
push
or
xor
and
mov
jns
adc
cmp
mov
outsb
inc
int3
push
outsl
dec
fmull
inc
enter
test
outsl
daa
movb
push
inc
outsb
cmp
imul
out
pop
sbb
rcrl
lret
data16
jb
jg
mov
loopne
mov
dec
pop
push
hlt
cmp
inc
pop
and
xchg
mov
imul
push
nop
mov
shrl
add
inc
pop
lret
push
jb
sarb
push
push
mov
cmp
inc
lods
lret
dec
data16
mov
push
das
insb
cltd
fidivrs
xchg
push
cwtl
fiadds
iret
xchg
ret
lcall
xchg
dec
mov
jg
lahf
push
mov
dec
jmp
and
mov
xor
xchg
pop
dec
inc
ficoms
call
cmp
int
imul
pop
xlat
jne
mov
xor
sub
fs
test
pop
bswap
hlt
xchg
mov
jne
sub
leave
push
jns
addb
loope
push
js
fbld
dec
movsb
push
lock
jbe
pop
lret
xor
fs
fmull
adc
lret
fsubrl
sbb
sub
xchg
inc
imul
scas
mov
jmp
jp
jle
subb
dec
sti
pop
sbbl
popf
pusha
aam
inc
lods
xor
lret
es
cmp
gs
lea
imul
repz
mov
adcl
mov
xchg
cmp
push
seta
rclb
popa
jg
bound
sbb
lea
jl
test
fistpl
cmpsb
lock
cmp
or
add
movsl
sarb
or
xorl
xorl
sbb
inc
aad
push
in
jae
fs
lods
roll
jbe
negb
mov
adc
dec
adc
cmp
push
daa
mov
push
push
inc
ret
fidivs
mov
sbb
inc
mov
fstl
xchg
mov
addr16
dec
jne
lcall
into
loopne
test
inc
aas
add
cli
xchg
aaa
mov
outsl
addb
mov
sbb
insl
inc
adcl
pop
pop
testl
hlt
or
out
cld
fwait
sub
xchg
fnsave
pop
pop
ds
cs
dec
insl
std
sbb
sub
xchg
xchg
ret
bound
aas
jge
gs
xor
lock
push
pop
dec
mov
jnp
cwtl
popf
xor
lret
hlt
insl
inc
fcomps
xor
mov
sti
push
mov
dec
fisubrl
mov
addr16
es
mov
stos
imul
shl
add
push
lcall
out
mov
fucomi
push
adc
lret
inc
fdiv
mov
mov
push
jmp
mov
or
jl
xor
cwtl
stos
push
out
shlb
or
mov
add
in
call
or
pop
out
mov
adc
cmp
idiv
popf
lods
icebp
push
mov
lahf
daa
mov
loopne
fldenv
scas
jno
je
jo
out
std
ss
push
imul
push
adc
cmc
xor
dec
mov
xchg
or
or
jmp
adc
add
movsl
lds
fidivrs
loop
fwait
dec
ds
movsb
repnz
add
pop
mov
out
jb
clc
cmp
fwait
adc
out
adc
or
lea
outsl
sub
jo
add
mov
or
adc
push
dec
cmc
cmp
clc
lods
xchg
inc
jbe
xor
stos
mov
jl
push
cs
jne
insl
sub
fucomp
push
dec
sar
jne
scas
call
xchg
lods
and
mov
adc
add
mov
adc
into
xor
push
mov
mov
lods
push
inc
test
mov
pop
mov
inc
xlat
xchg
testl
fwait
sti
lahf
push
adc
mov
mov
test
inc
push
sub
xchg
xor
repnz
fidivs
nop
jae
add
push
dec
out
je
shr
das
lret
adc
lcall
cmpsl
outsl
int3
popf
push
lret
cld
cmp
clc
call
pusha
ret
inc
mov
push
lea
scas
scas
fdivrl
mov
dec
sub
mov
inc
insl
sub
pop
pop
cmovbe
int3
push
pop
iret
mov
shll
fdiv
lahf
sbb
mov
lret
hlt
cmpl
xchg
mov
ret
add
out
data16
aad
jg
and
mov
push
test
inc
stos
jo
xchg
dec
and
mov
rcll
insl
dec
cmp
clc
mov
cmpsl
fstps
shll
push
fsts
sub
test
enter
inc
mov
adc
in
cmpl
push
mov
shll
fmuls
sbb
call
mov
sub
jmp
cmp
jg
or
mov
aad
aam
testl
in
call
pop
inc
mov
rcl
mov
in
add
nop
sub
inc
xlat
dec
fstl
stos
mov
inc
mov
js
cld
jg,pt
arpl
inc
mov
ret
inc
push
sub
or
mov
xchg
int
and
sti
leave
cmp
mov
or
ljmp
pop
or
push
testl
sub
lods
jmp
cmc
mov
test
je
aaa
es
pop
cs
sub
xchg
mov
cltd
in
jbe
and
mov
adc
xor
ret
fprem
mov
or
push
outsl
cli
aas
fadds
adc
aaa
sbbl
pushf
int3
bound
push
iret
or
incl
and
call
cmp
sub
or
add
mov
pop
ja
fldl2e
push
xor
paddb
dec
sub
in
outsl
shr
and
push
dec
leave
inc
stos
cmp
mov
pop
xchg
int
rorb
imul
sbb
cmp
test
pop
imul
xchg
jmp
mov
pop
ja
mov
inc
adc
jmp
data16
inc
int3
mov
jmp
and
pusha
jp
xchg
in
xor
pop
mov
push
insl
xchg
jp
mov
jb
sbb
jg
leave
adc
jnp
movsl
popa
nop
push
sarb
mov
test
aam
mov
les
or
in
mov
adc
sbb
inc
xor
xchg
addr16
lret
out
cmpsl
repz
pop
and
xlat
cmp
enter
add
push
jmp
or
loope
repz
bound
push
clc
fistpll
mov
or
sbb
orl
sbb
adcl
dec
cmp
repnz
testl
jge
aas
insb
inc
lods
imul
inc
in
fldl2t
bswap
push
es
inc
cmp
cli
sub
aam
popa
inc
repnz
aas
xor
insb
mov
int3
xlat
outsb
jno
mov
push
insb
cli
adcl
aad
test
mov
loop
js
je
pop
lods
add
add
xchg
inc
adc
jmp
inc
adc
cmpsl
out
das
cmc
orl
pusha
inc
or
adc
arpl
mov
ret
jg
pop
jnp
mov
jbe
sub
leave
pusha
cmp
jnp
pop
mov
mov
pop
pop
lret
lret
aam
jno
js
pop
mov
shl
pop
fucom
pop
sar
shlb
cmpsl
aam
loopne
test
sbb
pop
stos
pop
nop
xor
pop
aam
and
cmc
cmpsl
inc
popa
mov
jae
and
or
pop
icebp
dec
and
or
js
add
lcall
dec
jmp
jb
aam
push
lods
insl
adc
arpl
loope
andb
mov
inc
inc
rolb
add
add
jle
xor
jle
push
xchg
loopne
pop
sbb
add
mov
xchg
ret
mov
inc
in
mov
xchg
mov
pop
cmpsb
pop
stos
rcpps
jne
xchg
test
push
mov
sbb
pusha
fdivrs
in
jg
bound
or
lock
cmp
push
cmpsb
adc
sub
aaa
movl
or
mov
es
mov
loope
sbb
out
push
dec
mov
jp
xchg
sub
sbb
or
lahf
mov
mov
std
push
push
js
sub
lcall
das
cmp
pop
mov
shl
cmpsl
ds
push
pop
push
jp
mov
rcrl
sbb
push
shll
jl
out
and
loope
pop
push
jmp
int3
xor
and
pop
inc
dec
xor
cmc
jmp
es
dec
mov
push
cld
xchg
pop
push
imul
divl
inc
sub
imul
xor
xor
mov
popa
add
pop
adc
cmc
aaa
dec
sbbl
or
daa
mov
jnp
sub
ret
andb
gs
imul
cmp
cmpsl
sbb
mov
mov
ds
in
les
mov
xor
out
xchg
jl
pop
test
shll
mov
add
insl
subb
fdivs
xlat
push
mov
cmc
push
pushf
insl
add
dec
bound
out
cmc
into
sarl
lret
mov
push
sbb
add
dec
jbe
xchg
inc
jmp
cmp
push
cmp
decb
push
lea
push
add
repz
cltd
mov
es
push
jge
repnz
out
fwait
je
mov
add
adc
pop
xor
cmpsl
outsb
imul
push
nop
cmc
mov
dec
fs
int3
aam
lds
inc
pushf
push
jbe
aaa
mov
jb
sbb
aad
xor
std
cmpsl
call
push
mov
popa
pushl
dec
and
imulb
add
call
insb
vmptrst
dec
dec
movsb
or
in
mov
lods
in
push
movsl
sub
and
sub
hlt
xor
mov
sub
pusha
mov
cli
cmp
push
subb
xchg
xor
loope
fmull
idiv
mov
jo
push
dec
push
xchg
insb
lret
loop
jle
aad
or
inc
add
or
out
fs
mov
mov
call
cmp
inc
subb
in
pop
lcall
inc
shlb
cli
imulb
sub
mov
mov
push
jae
mov
pop
inc
cltd
cld
sub
add
roll
inc
and
and
int
cltd
cmp
es
push
push
rorb
clc
pop
dec
sub
and
test
mov
daa
or
jne
outsb
adc
test
je
dec
pop
ret
addr16
movsl
or
mov
ret
pop
inc
xchg
decl
rclb
jl
iret
sahf
mov
push
adc
pop
sti
sbb
dec
mov
leave
lock
xchg
xor
gs
scas
cmp
mov
pop
shrb
pop
jo
cli
dec
sbb
es
xor
movsb
jecxz
aad
and
loope
jl
jmp
jecxz
pop
xor
popa
scas
shll
lcall
cmp
decl
xchg
movb
lret
in
ficoms
cmpsb
icebp
movsl
daa
mov
aaa
fsts
je
jmp
add
pcmpgtw
sahf
fiaddl
or
and
fcompl
lret
push
sarb
and
pop
fwait
pop
lock
subb
pop
xchg
imul
loop
mov
pop
stc
or
mulb
push
cmpsl
jbe
fdivrs
test
pop
xor
insl
movd
fldcw
test
pop
and
mov
bnd
add
cmpsl
fidivs
xchg
sbb
ret
xorb
outsb
loope
fisttpl
lcall
cwtl
jbe
cmp
adc
pop
movsl
addl
daa
pop
pop
mov
xor
fistl
daa
or
cmp
sbb
pop
xchg
push
sbb
jns
mov
call
mov
fimull
test
lcall
fildll
scas
mov
pop
mov
div
inc
fwait
scas
adc
testl
outsl
test
fidivrl
xchg
xor
test
in
sbb
cli
dec
mov
jle
adc
inc
jno
cli
insb
sub
es
jns
add
insl
orl
mov
adc
mov
inc
adc
inc
int3
adc
cs
dec
dec
lock
shll
mov
test
clc
cli
sub
aaa
sbb
outsl
lret
lea
jg
adc
lods
and
daa
push
push
outsl
add
sub
mov
xchg
push
push
xchg
jno
sbb
stos
out
icebp
mov
test
add
test
out
xchg
push
xchg
inc
or
mov
jge
xchg
scas
out
sbb
sbb
xchg
dec
addr16
insl
mov
cmpl
sbb
xchg
je
mov
push
les
in
addb
add
jno
addr16
xor
incb
dec
pop
cmp
hlt
cmp
adc
push
inc
cmc
push
lock
fnstenv
scas
add
mov
mov
pop
sahf
add
jne
loope
aam
mov
cmp
xor
sbb
leave
mov
jp
or
dec
push
ljmp
jno
jo
pop
mov
mov
cmpl
xchg
in
jge
mov
lods
xchg
sbb
cmpsl
out
psraw
and
jno
xchg
jb
fwait
mov
xchg
aas
test
mov
andb
aaa
sub
or
push
jmp
in
push
push
jmp
xchg
cmp
cmpsl
inc
dec
es
jno
lahf
push
test
lea
xchg
out
daa
mov
je
jae
sbb
sbb
or
pushf
mov
sbb
fisubrl
push
je
xor
mov
aas
aas
pop
mov
adc
push
mov
jae
sub
push
call
mov
dec
xchg
movl
hlt
aam
scas
test
repz
jae
scas
sbb
flds
loope
fcoms
call
jge
and
cltd
mov
sbb
popa
jle
in
test
and
jnp
sub
mov
ret
push
and
shrb
push
cld
gs
imulb
push
fisubrs
test
add
dec
out
cmpsl
popf
jno
add
sbb
ljmp
imul
jo
or
pop
lahf
xlat
mov
xchg
jns
inc
cmp
cmp
xchg
pop
out
jge
jl
das
xchg
popf
int
dec
jp
stc
loop
outsb
fwait
push
andb
xor
test
cmp
push
adc
sub
adc
push
aam
lea
dec
ljmp
inc
fs
add
mov
sbb
cwtl
xchg
xor
mov
jns
push
stos
sub
add
mov
sti
mov
mov
fwait
mov
roll
xchg
aaa
xchg
shl
roll
or
jp
scas
mov
xor
inc
adc
push
jp
inc
lods
xchg
repnz
cld
push
xlat
mov
dec
and
push
icebp
nop
lret
das
add
scas
push
jne
in
into
xchg
adc
lahf
push
cwtl
test
lods
xor
aas
mov
xchg
out
icebp
mov
imul
xchg
mov
ja
enter
dec
mov
mov
sbb
out
outsl
pop
push
je
nop
jne
aad
popl
jge
xchg
dec
add
stos
loop
adc
pop
hlt
pop
or
mov
and
xor
out
repz
in
popa
ss
ret
test
or
loop
dec
adc
rcl
sub
repnz
imul
add
dec
idivl
xor
sbb
jno
test
push
push
fmulp
push
dec
lahf
loopne
sbb
mov
inc
cs
xchg
cmp
loop
sahf
test
lahf
ss
ss
cwtl
mov
and
pop
cmp
xchg
sub
repnz
lcall
inc
pop
ljmp
mov
repnz
cmp
cmp
dec
ljmp
lret
push
call
mov
outsl
cmpl
sub
pusha
inc
fcoms
fs
inc
lahf
push
mov
lret
fnstcw
jp
sub
hlt
pop
movlps
mov
loop
jle
mov
jo
jno
push
pop
into
lods
fs
xor
jg
jmp
xchg
aaa
jbe
stc
push
xor
imul
or
sbb
mov
add
in
rcll
out
cmp
inc
push
mov
push
push
mov
push
out
popa
pop
outsl
sub
movsb
or
add
dec
aad
xchg
jge
sbb
sbb
xchg
je
in
jge
push
add
fwait
sti
push
sbb
jle
push
jne
jmp
sbb
xor
popa
int
sbbl
mov
std
rcrb
test
fistpll
adc
pop
fcoms
cld
and
jle
add
mov
in
fisttpll
push
xor
pop
cmp
movsb
lcall
push
and
push
push
add
sbb
mov
jle
add
into
sub
fwait
cmpsl
cmp
push
scas
hlt
testb
mov
push
in
add
pushf
mov
xchg
adcl
pop
xor
addr16
mov
ds
dec
notl
popa
adc
movsb
sbb
xor
push
cli
mov
lcall
int3
jno
stos
add
scas
mov
cmpsl
jbe
push
sub
cltd
sahf
lods
mov
mov
add
repz
inc
mov
clc
movsl
pop
fstl
int3
ret
data16
insb
push
or
add
bound
cmp
fistpll
sbb
and
mov
lods
rclb
add
test
sub
imul
xchg
aam
dec
loope
jb
and
lret
push
cli
adc
adc
pusha
lods
xchg
clc
loop
out
imull
push
lods
push
hlt
orl
int
subb
or
xchg
or
mov
ret
push
loope
xchg
insl
xor
pop
dec
iret
xchg
stc
nop
arpl
sbb
inc
pop
jg
mov
out
in
mov
adc
fwait
jno
pop
icebp
xor
jecxz
es
test
or
test
scas
out
jns
ds
jp
loop
call
lea
mov
mov
nop
lock
cmpsb
jae
movsl
inc
push
repz
pop
insl
jns
int3
mov
mov
jl
out
out
xlat
out
cli
sub
dec
outsl
cli
insb
jle
lret
mov
imul
or
js
and
jmp
mov
inc
inc
inc
test
pop
inc
lret
sarb
mov
xchg
push
pushf
sti
rcr
dec
sub
jl
pop
dec
push
mov
inc
mov
xor
ss
mov
dec
ds
lock
fadds
aas
out
scas
and
jmp
and
cltd
mov
stos
adc
pop
js
inc
sbb
cmp
pop
jmp
jne
bound
test
mov
pop
xor
jns
push
sarb
jne
nop
scas
or
es
fldt
jle
repnz
pop
sub
add
aaa
loop
dec
pusha
stos
jg
dec
pop
inc
adc
loop
rorb
test
jl
mov
inc
int
xchg
xchg
push
ljmp
xchg
mov
call
cs
or
out
or
ret
lods
dec
rcr
adc
insl
cmpsb
lods
sahf
xor
hlt
cmp
xlat
cmpsb
cmp
imulb
in
addl
mov
pushf
fmull
cli
inc
cmp
push
add
pop
sub
cwtl
xlat
mov
inc
scas
xchg
das
sub
mov
adc
test
pusha
int
cmp
push
fidivrl
loopne
pushf
pop
sub
cmp
mov
pop
int3
rcrb
add
clc
xor
shlb
push
push
cmp
cmp
stos
insl
dec
mov
nop
cld
fisttpl
mov
negl
pop
mov
sub
sti
xchg
loop
in
fdivrs
dec
jae
mov
mov
rorb
notb
clc
cmove
leave
pusha
push
cmp
push
imul
out
inc
test
sub
and
ljmp
int
stos
repnz
mov
dec
xchg
xlat
push
ds
jle
arpl
inc
or
subl
or
push
push
dec
imul
bswap
mov
leave
or
cli
popa
js
cmpsl
shll
mov
inc
pop
aas
pop
out
les
ds
and
pop
test
pop
btc
enter
mov
jp
orb
popf
xchg
sbb
or
jge
pop
stos
jne
jns
cmp
xchg
sub
notl
iret
inc
scas
dec
iret
shlb
lods
loop
dec
ja
xor
add
push
push
faddp
pop
adc
jmp
mov
cmpb
les
inc
push
test
imul
ffree
in
jg
frstor
sub
scas
fnstsw
xor
add
dec
aad
test
push
adc
and
sbb
mov
inc
icebp
ret
fistl
xor
cli
scas
inc
es
mov
dec
cmp
loopne
adc
adc
dec
imul
pop
dec
imul
mov
jp
fdivl
or
movsl
xchg
xchg
outsb
xchg
jmp
mov
mov
dec
push
or
outsl
subl
xor
loope
sbb
push
cld
fidivrl
rorb
pop
push
cmp
jecxz
add
clc
adc
xor
pusha
xchg
popfw
mov
cs
ss
sbb
xor
pop
inc
pushf
sbb
jmp
pop
and
fists
add
stc
test
mov
arpl
mov
fnstenv
lret
repz
fsubp
popa
mov
dec
mov
incl
xchg
dec
icebp
loope
inc
fcmovnb
add
movsb
push
scas
fdiv
fdivrs
mov
clc
cmc
mov
push
push
test
notb
ds
xchg
pop
mov
pop
ja
jo
lods
mov
loop
sbb
das
sub
xchg
stos
add
jp
scas
sbb
jecxz
icebp
enter
adc
sbb
dec
lods
clc
mov
mov
sbb
outsl
aas
sub
and
pop
stos
test
loope
xor
adc
movsb
int3
ret
push
adc
mov
and
dec
mov
mov
mov
pop
xor
sub
ds
adc
sub
leave
and
lock
pop
mov
hlt
popl
cs
loop
icebp
push
shrl
or
sbbb
insl
adc
loop
fwait
int3
inc
iret
sbb
outsb
lods
push
ljmp
call
mov
nop
mov
inc
hlt
add
insl
sbb
pusha
cmp
imul
mov
cmpsb
int
jo
fwait
cmpsl
js
cmp
jb
stos
and
pop
loop
push
push
add
jbe
cld
int3
arpl
sbb
outsl
inc
mov
test
cmc
cltd
daa
push
dec
fadds
jecxz
mov
add
js
mov
sub
sub
mov
roll
lahf
lds
jmp
test
sub
push
mov
add
pop
pop
loop
mov
pop
cs
add
cmpb
inc
add
repnz
lcall
repz
lahf
sub
jno
pop
popf
dec
pop
cmp
or
mov
cmpsb
or
outsl
mov
or
sbb
xchg
xor
or
bound
or
sub
and
ret
fisubl
push
xchg
shl
push
or
fsubrp
jne
ljmp
test
loopne
aas
jb
mov
nop
jne
repnz
ss
sti
out
xchg
in
jecxz
andl
loopne
out
in
cmp
xchg
xchg
out
or
in
sbb
pusha
pop
jbe
xchg
int
cmp
sub
fidivrl
mov
das
push
mov
inc
lea
sub
jb
xchg
xchg
imul
pusha
xor
inc
xchg
add
push
stos
dec
lea
jecxz
cmp
jae
push
scas
mov
mov
sub
or
mov
loopne
push
in
stos
jnp
out
xor
push
sarb
rorb
in
adc
pop
lret
xor
rcll
jno
sarb
das
mov
push
push
movsb
mov
fildl
xlat
pop
adc
frstor
fstpt
xchg
mov
aam
and
repnz
mov
jp
pop
pusha
mov
hlt
push
lods
xor
dec
ret
cmpsl
xchg
cmc
psubusw
rcrl
sub
ficoms
les
add
into
loope
mov
pop
pop
or
add
mov
inc
stos
ljmp
scas
adcl
fwait
sbb
subl
mov
iret
call
out
xchg
or
fisttpl
mov
fstps
repnz
push
jo
sub
rol
mov
js
mov
out
push
xor
scas
xchg
cmp
arpl
out
shr
inc
xchg
fists
rcrl
popf
xor
stos
jmp
dec
xor
xor
sbb
xchg
cmp
jne
repnz
jg
fsubrl
stos
xchg
cmp
lcall
test
push
shll
fs
and
pop
stos
fsubrp
mov
rclb
push
test
lret
mov
inc
in
sub
insb
add
dec
fisubl
scas
mov
pop
gs
scas
loopne
mov
sub
xchg
cmpsb
std
inc
mov
mov
sarb
loope
xchg
out
test
movsl
js
test
xlat
sti
jecxz
cld
adc
pop
sbb
bound
out
and
pushf
cmp
adc
mov
pushf
pop
lods
jne
fistps
mov
roll
dec
shlb
adc
stc
inc
xor
sub
inc
call
push
test
mull
idivb
imull
mov
pop
arpl
mov
outsb
sub
add
in
aaa
sub
fsubl
arpl
imul
test
lahf
js
cmp
pop
cwtl
outsb
pop
mov
push
mov
push
and
cmp
push
in
pop
test
cmp
mov
stos
or
cmp
daa
outsl
aaa
push
scas
pop
ljmp
mov
xor
add
cmpsl
leave
push
cli
cli
or
or
xchg
xchg
sub
jecxz
fdivr
ficomps
scas
stos
inc
push
aas
lahf
xor
mov
iret
add
subl
je
cmp
adc
fildl
out
je
and
out
and
sbb
pop
movsl
lea
xor
sbb
mov
jmp
add
out
adc
adcl
push
subb
push
lods
mov
movsl
sbb
pusha
les
int
mov
popl
hlt
insb
stos
rorl
scas
sbb
mov
fisttpll
add
bound
cs
mov
or
lcall
push
inc
out
arpl
dec
push
shll
xchg
dec
pusha
rolb
jle
mov
jno
inc
or
mov
fcoms
and
out
mov
xchg
sbb
fsubrs
lods
jp
pop
popw
push
inc
mov
cmp
and
js
mov
inc
adc
xor
sbbb
mov
jp
add
data16
popa
fcoml
cmp
sarl
jl
pushf
out
std
adc
xchg
lcall
dec
push
loopne
sbb
mov
repnz
mov
cwtl
sbb
push
fwait
xor
sub
scas
pop
mov
shr
stos
xor
sbb
loope
pusha
aad
mov
pop
inc
test
dec
daa
int3
cld
cmpsl
pcmpgtd
lea
test
sub
andl
loope
cwtl
stos
es
mov
stc
sbb
xor
mov
ds
lcall
testb
dec
fildl
hlt
mov
add
shrl
aaa
int
imul
pop
loopne
push
clc
mov
out
mov
jno
and
xchg
subb
hlt
data16
jle
movsb
adc
mov
ds
add
movsb
inc
andb
movsl
arpl
movsb
repz
adc
fdiv
lret
add
sbb
xchg
lds
idiv
lock
sub
movsl
xchg
lret
cmp
icebp
fs
sbb
js
pusha
fcoms
stos
inc
repz
into
cmp
ja
push
add
xchg
xchg
inc
ljmp
sqrtps
push
sub
jge
sub
sahf
xor
cmp
rep
mov
mov
out
fdivrp
cmp
push
sbb
adc
mov
test
jns
or
xchg
sub
decb
sub
hlt
push
mov
jbe
sub
insb
sarb
sahf
mov
aam
mov
inc
jb
movsl
pop
mov
mov
js
and
and
jecxz
cmp
push
lods
or
xchg
push
mov
clc
test
lock
pop
std
dec
add
push
sbb
ds
mov
xchg
cmp
push
cmc
fdivl
clc
and
fistl
mov
push
leave
sti
mov
jnp
je
sbb
and
mov
jp
lahf
pop
and
fsubrl
clc
imul
mov
popa
pop
loop
sub
dec
or
sbb
imul
popa
mov
jae
cli
lret
push
loop
cmpsb
xlat
add
dec
ficomps
add
stc
nop
jno
mov
xchg
pop
mov
pop
int3
mov
and
leave
sbb
pop
leave
out
std
mov
mov
dec
inc
mov
and
call
or
dec
dec
xor
mov
cmp
loop
leave
imul
xchg
xor
mov
sub
mov
cmp
pop
pushf
pop
xor
fsts
sbb
movsb
mov
add
fistpl
mov
fisttps
scas
fs
push
and
dec
inc
pop
xor
mov
or
mov
repz
lcall
jp
lgs
cwtl
or
jo
mov
or
pop
add
jle
inc
adc
test
faddl
jg
mov
inc
fisttpll
fcompl
data16
push
sbb
add
icebp
in
push
das
and
xor
test
adc
inc
clc
nop
js
pop
xor
cltd
pop
out
cmp
mov
xchg
cmovns
and
sti
xor
pop
mov
add
add
adc
dec
in
xorl
into
sbb
sti
inc
mov
push
cmc
fwait
mov
sbb
jge
pushf
xor
fiaddl
data16
add
sub
pop
inc
sbb
add
mov
add
and
cmp
sti
fwait
add
jp
add
push
mov
test
mov
insb
testb
rclb
add
jecxz
notb
test
xchg
dec
loopne
test
stos
shll
iret
xlat
mov
arpl
int3
dec
les
pushf
lock
loop
imul
repnz
push
in
sub
out
jb
xor
es
loopne
cmp
loopne
sub
sti
adc
mov
and
rorl
mov
add
pop
cmp
inc
jmp
out
fnstenv
imul
inc
jle
incl
inc
mov
pusha
inc
rcll
xor
loope
xor
sti
negl
insl
adc
inc
dec
sub
jecxz
mov
outsl
push
dec
mov
lock
xchg
sahf
pop
pop
fdivp
pop
push
arpl
xor
pop
nop
sbb
and
fwait
mov
add
inc
pop
cwtl
das
dec
jb
xor
mov
pop
lahf
cmc
js
mov
mov
add
in
xchg
or
cmp
push
mov
jne
add
repnz
cltd
scas
xchg
cmp
mov
sahf
mov
iret
stos
push
aam
or
sahf
jnp
push
mov
sbb
or
lods
jo
push
nop
repz
cs
lahf
inc
pop
jp
add
mov
xor
push
mov
xor
inc
add
sub
loop
fs
das
cmp
ds
outsl
testl
in
pushf
dec
add
pushf
cltd
loopne
cmp
or
push
sti
test
push
popf
insl
shrb
and
cmp
xor
jo
xor
jmp
and
sub
stc
mov
int3
cmp
pop
jmp
xor
decb
lea
hlt
filds
shlb
leave
add
cmp
aas
pop
xchg
jo
popa
adc
add
add
push
jle
jnp
stos
addb
ja
jecxz
xchg
outsb
hlt
mov
pusha
jns
int3
mov
outsb
aad
jecxz
push
cmp
pop
xlat
jbe
icebp
cmp
jo
mov
inc
lock
push
inc
loopne
stos
adc
sub
test
or
jo
loop
mov
nop
jg
rcrb
cwtl
gs
fistpll
fwait
or
scas
mov
shl
pop
mov
add
mov
jo
shrl
cs
aam
or
jl
mov
mov
mov
outsb
in
mov
shr
test
add
jg
jmp
fsubrl
pop
mov
pop
push
jmp
movsb
jle
mov
or
daa
sbb
out
mov
loopne
and
mov
ljmp
push
lods
ja
jle
mov
repz
sub
cmp
push
rorb
stc
jnp
dec
loop
loope
std
and
rorl
mov
dec
fdivrs
ja
push
mov
pop
inc
test
inc
inc
scas
jbe
cmpsl
sub
mov
arpl
cmovl
add
mov
xlat
aaa
fwait
push
inc
inc
mov
and
mov
dec
icebp
add
sub
xchg
pop
jmp
xor
adc
in
adc
test
nop
popa
negl
mov
push
inc
ret
outsl
cltd
sub
fcoms
ffree
xor
fimuls
dec
dec
and
mov
add
pop
push
mov
xchg
pushf
and
cmpsb
clc
inc
mov
sbb
shl
mov
ss
xor
push
mov
or
mov
mov
lcall
push
mov
lahf
cmpl
and
jo
mov
in
mov
aaa
jnp
pop
outsl
mov
in
cmp
cltd
pop
das
cmp
xor
pop
in
pop
sti
pop
mov
int
xlat
lret
add
arpl
and
mov
aam
mov
lcall
cltd
bnd
out
sub
iret
outsl
shrl
jo
inc
pop
lahf
or
and
sub
or
push
sub
dec
pop
jle
in
pushf
mov
mov
in
or
fstl
mov
push
test
outsl
fnsave
pop
int3
ficoms
into
loope
icebp
lret
adc
pusha
or
sbb
orb
movsl
mov
mov
jb
or
lock
fmul
jns
pop
addr16
enter
sbb
ret
fstpl
pop
ret
shl
pop
xchg
cld
push
mov
dec
dec
dec
out
or
pop
push
insb
subl
push
mov
mov
iret
xor
rep
test
push
sti
sub
mov
push
aaa
movsb
lea
fwait
addr16
subps
add
pop
dec
jge
jmp
pushf
jecxz
ljmp
cmp
and
fadds
mov
outsl
hlt
add
sbb
pusha
fdiv
xor
shlb
jb
or
adc
sub
pop
insl
sub
leave
stos
push
out
adc
subb
shll
call
push
lahf
jecxz
mov
pop
mov
pop
cmp
scas
inc
gs
clc
rclb
add
inc
xor
jb
pop
imul
pop
negl
movsl
ja
mov
movb
and
jno
ret
test
or
add
movsl
sbb
aam
shll
popa
cmp
jl
shrl
mov
cwtl
xchg
xor
lcall
jmp
cmp
or
jle
add
mov
out
cmp
movd
movsl
icebp
ss
xchg
sub
aaa
movsb
pop
popf
lods
mov
adc
mov
jno
stos
add
scas
inc
fimuls
lods
gs
ja
inc
int
cltd
jecxz
mov
jle
sbb
mov
jle
mov
test
jo
inc
mov
adc
hlt
xor
mov
das
push
pop
int3
inc
dec
repz
rolb
xchg
popf
fst
xchg
repnz
in
xchg
mov
cwtl
add
mov
pop
push
sub
cmp
clc
in
sbb
les
xor
das
adc
cli
jmp
pop
or
div
push
cmp
loope
out
je
jecxz
xor
out
out
ss
mov
clc
push
and
scas
cmp
push
pop
arpl
lea
subl
dec
or
push
icebp
inc
insb
inc
jbe
cmp
test
pushl
test
mov
and
pop
dec
dec
lret
mov
cmp
clc
lret
xor
jae
rorb
mov
pop
xchg
popa
in
xor
sub
stos
mov
test
cmp
icebp
cmp
lcall
add
jne
out
sbb
imul
push
mov
shlb
aad
cmp
fcoms
cmp
push
cli
jmp
mov
mov
ljmp
call
outsb
jge
lahf
mov
addr16
shl
cmp
and
test
arpl
mov
and
mov
pusha
cmp
popa
test
lock
popa
fldl
test
xchg
dec
inc
enter
lods
aas
loope
lret
mov
bound
popa
imul
push
insb
jg
lods
inc
and
pushf
inc
pop
xchg
add
sahf
js
jp
push
mov
or
xchg
pop
pop
cmp
mov
pop
cmp
test
dec
cmp
inc
mov
sbb
out
sub
pop
xor
ja
aam
test
sub
cld
fwait
or
arpl
andl
hlt
fdivr
repz
ss
pop
adc
mov
mov
add
sub
or
pusha
testl
pushf
in
shr
es
dec
adc
test
push
insl
jge
jp
cld
je
idivb
push
nop
push
loopne
mov
and
cmc
ja
daa
jno
sbb
cli
and
adc
or
imul
sbb
cmp
pop
sub
xor
push
dec
adc
inc
xchg
adc
adc
or
sbb
aaa
push
cmp
testl
stc
sarb
or
lods
xchg
add
mov
sahf
mov
out
xchg
and
out
jae
xchg
sub
pop
sub
aas
into
and
cmp
int3
pop
pop
pop
dec
aaa
push
stos
xchg
adc
stos
sbb
xchg
shll
js
push
and
sahf
jno
frstor
push
pop
cmp
aaa
shrl
inc
inc
ret
cli
xchg
dec
loopne
cmpl
mov
dec
lea
out
adc
fcmovu
jo
cltd
cmp
lret
mov
adc
lds
out
push
mov
mov
sbb
orl
out
mov
out
shlb
jl
push
scas
push
das
pop
addr16
mov
jg
shlb
jne
arpl
faddl
push
xor
xor
icebp
sbb
push
test
mov
xchg
sub
stc
lods
mov
fists
xor
cmpsb
cmp
arpl
mov
jbe
mov
xorl
mov
clc
adc
pop
xlat
xrelease
adc
adc
lea
and
movsl
aad
push
ret
rcrl
es
cmp
jne
xor
loope
jo
dec
movsl
adc
leave
ficoml
es
rol
fcomip
push
aam
or
mov
xchg
pushf
pop
cmp
mov
mov
out
mov
pop
jnp
fnsave
sti
adc
sub
jge
inc
hlt
out
dec
add
inc
sarb
mov
push
in
insl
cmp
icebp
test
xor
adc
push
xchg
push
mov
mov
push
and
ljmp
xor
mov
hlt
mov
sbbb
out
sbb
xor
sub
jle
out
cmp
xor
stc
popf
std
out
jae
cwtl
jmp
jmp
pop
les
pop
sub
aam
mov
dec
cmp
push
lods
inc
mov
loopne
packsswb
mov
fs
lahf
aad
mov
and
bound
cwtl
insl
or
mov
xor
mov
addr16
mov
hlt
mov
mov
mov
mov
push
ja
in
mov
inc
adc
lret
rol
jmp
test
jne
and
cli
jb
aad
rcrl
pop
out
frstor
jo
jl
and
mov
test
dec
push
cmpsb
aaa
xchg
push
jp
pop
mov
dec
xor
in
xchg
mov
fisttps
lahf
rclb
xchg
inc
cmp
inc
fistpl
xor
mov
fidivrs
and
mov
mov
lea
icebp
pop
and
aam
xlat
dec
pop
fdivr
mov
cmp
inc
lahf
push
pop
mov
adc
insb
imul
mov
push
pop
and
pop
jecxz
repnz
clc
cmp
mov
popl
test
mov
mov
sub
or
dec
mov
push
fldl
mov
xor
sbb
or
or
push
mov
inc
lahf
and
sbb
ja
ficoms
in
pop
popf
mov
sbb
jg
jmp
dec
stos
jmp
test
lahf
xchg
das
fstpt
aas
lock
inc
loope
frstor
xchg
lods
pop
inc
mov
popl
mov
sub
loopne
jae
in
insb
inc
sbb
mov
mov
sub
rorl
stos
shrl
cmpsl
jne
inc
js
jmp
bound
sarb
out
lods
mov
nop
sbb
mov
mov
lods
or
lea
jle
ds
mul
or
cltd
and
add
lea
test
xchg
rclb
out
mov
xor
in
inc
cmp
pop
or
es
jge
lock
cmpsl
add
and
mov
or
lock
call
push
je
inc
push
cwtl
mov
pop
inc
jns
inc
and
and
ss
mov
xchg
pop
insb
popf
call
aad
scas
ret
and
add
cs
mov
cs
ljmp
pop
xor
cmp
arpl
mov
jb
addr16
stos
test
xor
out
std
idivb
inc
enter
ret
pop
in
jl
pop
jae
sub
push
xchg
jecxz
mov
shll
pop
add
jp
dec
mov
adc
testl
cmpsl
mov
leave
cmp
ds
ljmp
jle
sbb
fisttpl
roll
pop
dec
xchg
inc
push
mulb
test
sbb
sbb
jge
mov
inc
mov
inc
inc
insl
jb
cmp
pushf
sub
sbb
xor
and
test
cli
push
lock
sub
cltd
jne
out
pop
sbb
or
and
fdiv
fwait
je
call
and
aaa
mov
push
mov
adc
jge
cmp
mov
jg
inc
push
add
sub
mov
nop
mov
or
mov
inc
push
lods
in
divl
push
movsb
and
je
popf
or
push
xchg
mov
mov
push
or
es
mov
inc
pop
push
sbb
daa
in
in
mov
lock
dec
shlb
add
cmp
stos
sbb
stc
dec
iret
sbb
sub
imul
icebp
adc
loop
lcall
in
into
ds
div
aaa
fcoms
out
test
fdivl
or
jp
mov
push
xchg
xor
xlat
jae
mov
mov
aad
leave
test
rorl
inc
and
std
gs
cmc
mov
mov
test
testl
sub
adc
lret
jno
ja
xlat
jl
mov
nop
jo
lock
mov
ret
push
ljmp
ficoml
loope
mov
jne
and
mov
lahf
movsl
mov
outsl
pop
cmc
pop
stc
mulb
mov
out
jp
xchg
xchg
push
cmpsb
lock
lahf
jb
sub
inc
sbb
push
fidivrs
bound
addr16
ficoms
out
cs
jmp
das
or
in
mov
pop
jno
dec
sarb
mov
popf
jmp
flds
jnp
mov
adc
sbb
jle
stc
mov
lock
loop
mov
jno
mov
sub
repz
pusha
fdivrl
xlat
and
sti
mov
ss
mov
pop
call
mov
stos
jb
jns
gs
fadd
in
mov
stos
sbbl
negl
jnp
in
test
xor
push
cmp
adc
out
xchg
std
cmp
jae
dec
out
sahf
dec
mov
div
xor
popf
pop
nop
enter
movsb
into
js
pushf
sub
jl
pop
inc
sbb
das
pop
cmp
push
icebp
in
mov
jb
lcall
inc
iret
pushf
mov
mov
cmc
in
aad
or
add
and
mov
scas
cmp
pop
je
mov
xlat
dec
loopne
mov
iret
data16
enter
in
hlt
mov
mov
dec
or
pop
in
jns
push
push
outsl
or
add
outsl
push
sbb
das
pop
inc
xlat
repnz
mov
iret
adc
fnstcw
shl
call
pop
lret
sub
mov
hlt
fs
rorb
mov
sahf
cmpsl
adc
sbb
cmp
cltd
stos
push
inc
and
out
cmpsl
lea
and
clc
sub
mov
pop
fidivs
scas
xor
jno
mov
dec
cli
jns
lock
jge
push
data16
and
lock
push
adc
or
cmc
xor
mov
hlt
lock
fs
sub
fsubl
into
movsl
inc
push
jo
push
xor
pop
or
sub
leave
stos
scas
loopne
push
js
push
mov
adc
inc
int
cs
jb
add
inc
adc
push
push
bound
xchg
sbb
lcall
ret
call
pop
test
lock
scas
cmpsb
outsl
filds
int3
xchg
lods
inc
xor
mov
aaa
mov
push
mov
icebp
subl
and
mov
xor
ss
dec
stc
adc
pop
iret
xchg
lcall
int
mov
or
adc
mov
dec
jb
loop
push
in
xchg
daa
and
and
lock
int
data16
stos
push
mov
jle
mov
fistps
out
lds
inc
inc
mov
icebp
ret
mov
nop
and
jbe
ss
jcxz
hlt
fmuls
dec
loop
test
addr16
sarb
push
mov
ljmp
xchg
aaa
stos
adc
xchg
cmp
ret
or
hlt
scas
push
pop
jl
addb
movsl
out
outsl
scas
mov
sti
rcll
ds
pop
or
sbb
scas
movb
or
test
fwait
jb
subb
mov
fptan
dec
cmc
push
or
sub
sub
jp
mov
sub
ret
jg
push
sub
xchg
lahf
xor
mov
es
das
int
fnstsw
and
icebp
xor
sti
out
pop
xchg
jb
add
out
or
jns
push
mov
les
sti
jb
sub
lahf
or
pop
pusha
outsl
nop
or
pop
mov
sub
data16
ss
pop
popw
hlt
adc
sub
jl
fstpt
push
jl
stos
mov
popf
cmp
into
sbbb
mov
addr16
dec
jmp
and
stos
sbb
xor
aam
adcb
es
ret
mov
inc
cwtl
mov
pop
call
mov
fcomps
mov
repz
sbb
add
fldcw
jp
sbb
lods
pop
push
adc
dec
xor
jae
enter
test
aas
or
ret
and
fnsave
jge
fs
mov
lahf
push
jecxz
nop
and
pop
cs
aam
mov
repz
ds
std
cmp
inc
sbb
pop
out
mov
xchg
popf
mov
hlt
mov
stc
jo
pop
xchg
repz
push
outsl
inc
loope
jmp
dec
mov
xlat
jb
sub
cltd
inc
outsl
adc
lock
insl
adc
inc
sti
loopne
sbb
iret
loopne
add
das
or
add
mov
loopne
mov
xor
lods
inc
sub
fwait
xor
addr16
cwtl
rclb
int3
dec
out
add
test
inc
push
fcom
xchg
adc
cmp
sbb
test
push
insl
inc
jp
xor
inc
xchg
push
mov
xchg
pop
imul
add
out
xchg
lock
dec
xor
lods
loope
fiadds
ret
cmp
loope
xor
fwait
cld
sbb
cs
cld
or
ja
insl
dec
or
jns
addr16
sub
or
lahf
or
sub
jmp
pop
aas
in
rcll
cmp
jno
addr16
repnz
mov
popa
outsl
push
mov
inc
xchg
ja
xor
mov
push
fwait
scas
imul
jmp
xchg
scas
ss
out
lds
cmp
lods
jmp
sahf
cmc
cmc
lcall
xchg
mov
sarl
adc
mov
and
sti
jbe
dec
add
sahf
jecxz
icebp
es
lods
iret
push
stos
xor
inc
fdiv
shrb
aad
inc
mov
dec
sti
or
rolb
mov
adc
hlt
push
adcl
or
dec
popa
push
sbb
mov
mov
cli
cmpsb
mov
adc
lcall
inc
pop
xchg
cltd
scas
xchg
mov
push
dec
add
in
mov
sub
fwait
or
adc
adc
jge
xchg
arpl
or
jge
scas
scas
int3
pop
fildll
dec
adc
or
insl
cmp
cmc
movsb
das
mov
lods
xchg
jmp
out
sbbb
inc
pop
jne
sub
pushf
ljmp
adc
jne
orl
xchg
popa
lret
sbb
inc
out
ja
jg
shrl
inc
and
iret
icebp
push
mov
xor
push
out
inc
push
mov
lea
xchg
insl
dec
cmpsl
cmp
punpckhdq
xchg
imul
xchg
out
cmp
fildl
loopne
cld
test
iret
repnz
loopne
movsl
repz
jge
or
popf
insb
stos
adcb
lea
mov
scas
aaa
data16
mov
xor
ja
mov
fwait
xor
les
pusha
setp
and
leave
push
sub
mov
mov
cmp
mov
mov
gs
je
scas
and
movsl
icebp
call
sti
xchg
fwait
xchg
inc
popf
or
aaa
pop
movsb
and
pusha
mov
mov
daa
sbb
sub
cs
ss
int
mov
stc
push
ret
add
das
dec
push
xchg
scas
lds
cmp
std
jp
test
outsl
daa
dec
dec
sub
dec
xor
and
fs
call
or
pop
and
xchg
add
cmpsb
sahf
sbbl
leave
or
jns
mov
mov
jecxz
and
sti
dec
jle
stc
outsb
subb
pop
jns
outsb
imul
push
jb
flds
mov
inc
in
xor
ficomps
pop
add
xchg
and
into
enter
dec
pop
int3
sub
rcrl
mov
imul
test
es
inc
and
jl
inc
incl
and
jae
call
and
mov
popa
movsl
add
lcall
lret
hlt
repnz
stos
adc
xor
outsl
pop
insb
les
pop
jg
mov
pshufw
in
pop
les
xor
scas
cmp
sub
mov
or
xchg
call
sbb
inc
lret
and
dec
iret
inc
fstpt
pop
pusha
icebp
and
mov
adc
gs
cmpsl
js
mov
dec
mov
xchg
out
inc
or
test
sub
inc
hlt
push
out
stc
fildll
cmc
push
std
lcall
loopne
push
sbb
jne
push
jb
xlat
mov
mov
sub
dec
addr16
dec
jmp
es
test
dec
out
std
sahf
push
adc
push
push
push
mov
push
mov
adc
xor
inc
stos
and
mov
sbb
lret
icebp
insb
jb
mov
and
sbb
out
pop
out
jecxz
aas
dec
xor
xchg
mov
mov
lods
cmp
mov
xor
cltd
dec
fs
ds
mov
push
mov
fistpll
dec
or
adc
mov
notb
inc
fdivl
stos
icebp
jp
xor
sti
xchg
insb
add
daa
mov
pop
and
push
xor
je
cmp
into
loope
aas
pop
lock
cmp
pop
lahf
xorb
or
test
loopne
aaa
sub
les
inc
push
xlat
mov
push
cmc
cmp
dec
lcall
rcll
sbb
ss
in
add
mov
ret
jns
jg
xchg
fcmove
jo
jns
push
mov
stos
push
lds
loope
pusha
adc
mov
dec
popa
je
test
lahf
outsb
ja
or
pop
and
dec
loop
or
xchg
inc
int3
dec
test
pop
fiaddl
repz
jnp
xor
insl
xchg
mov
ljmp
adc
inc
adc
xor
stos
enter
into
sub
push
pop
add
jns
sub
xchg
imul
xor
ficomps
sbb
mov
ljmp
cmp
nop
mov
and
xlat
leave
stc
cli
test
mov
jns
xchg
mov
iret
mov
xchg
mov
cmpsl
push
mov
xchg
lds
mov
cmpl
mov
cmc
jo
loop
mov
das
shlb
add
cltd
and
pushf
cld
mov
aam
bound
jne
test
rorl
sbb
inc
sarb
add
xor
cmpsl
push
orb
xchg
mov
sub
js
in
cs
adc
pusha
fidivrl
mov
pop
sbb
repnz
sub
outsl
cs
fimuls
insl
lods
fidivs
push
inc
stos
inc
inc
jb
push
sbb
push
cli
inc
cmp
in
fistps
sbbb
stos
subb
adc
test
cmpsl
cwtl
mov
in
mov
mov
cmp
les
xor
cld
xchg
add
xor
fidivs
call
int
testb
pop
lret
jge
adc
test
jne
and
adc
push
out
xor
and
in
inc
sbb
insl
jo
mov
pop
xchg
js
push
sub
int3
aaa
pop
push
imul
rorl
inc
je
test
in
test
rolb
xchg
imul
inc
aam
cli
int3
push
loope
mov
pop
inc
shlb
or
push
inc
fldt
push
nop
lahf
mov
cmp
fmuls
iret
addr16
sbb
dec
cmc
adc
sub
repz
sbb
mov
lods
pop
add
jmp
fidivrs
mov
fdivr
insb
lods
fstl
aaa
xor
shrl
mov
imul
push
sub
test
arpl
sbb
cmp
stos
clc
in
mov
rcrl
daa
jnp
push
imul
jae
mov
mov
and
mov
cmc
decl
movq
out
push
dec
dec
in
jnp
adc
or
jnp
out
insb
cld
add
outsb
add
movsl
push
loop
inc
loopne
jge
lods
sbbl
dec
mov
mull
jmp
imul
notl
mov
lahf
or
aas
pop
xchg
mov
insl
je
xchg
push
cmp
jp
pop
sbb
vmwrite
pop
aas
xor
inc
push
test
inc
test
xor
fbstp
rorl
pop
and
pop
cs
jecxz
decb
cmp
push
sti
inc
mov
sbb
jae
leave
int
pop
lcall
mov
cmp
leave
add
test
sub
jnp
or
ja
cmpsb
inc
pop
mov
into
and
incl
xchg
pop
sub
jne
mov
ja
fdivr
push
les
add
hlt
push
or
xor
and
xchg
push
pop
test
xorb
test
jo
push
pushf
aaa
aaa
dec
adc
adc
outsl
push
push
out
inc
sbb
cwtl
in
xor
jle
xchg
in
inc
xor
sahf
cmc
push
in
lret
lret
sbb
mov
sbb
sbb
in
test
popf
add
xchg
mov
jbe
clc
aam
adc
lret
or
lods
pop
jge
inc
fmul
movmskps
add
scas
adc
and
mov
sbb
xchg
pop
or
sbb
sti
add
pop
aam
hlt
pop
or
mov
jbe
push
dec
inc
insl
rorl
scas
xchg
rcr
lcall
stos
mov
and
jno
call
adc
cmpsb
std
push
test
std
fnstenv
outsb
mov
jle
mov
ret
lods
test
sbb
mov
scas
in
imul
fistpl
xor
shr
imul
mov
cs
xchg
and
out
dec
ljmp
insb
or
imul
push
or
add
ljmp
lods
or
mov
out
js
scas
mov
aaa
mov
xchg
popa
cmpsb
insl
sahf
cmc
popl
sbb
jno
enter
jge
loopne
loop
std
rclb
fucomip
inc
popa
lock
mov
cmpsb
sub
add
cs
clc
adc
in
shlb
adc
and
xor
cwtl
std
push
mov
push
fildl
rcll
aas
insb
ret
sbb
lcall
jg
insl
add
loopne
mov
jbe
addl
stos
popa
dec
dec
rolb
lret
mov
mov
pop
mov
sahf
inc
xor
or
add
cltd
cwtl
mov
call
sbb
addr16
xor
scas
xchg
push
lret
lret
adc
enter
mov
addl
xchg
push
es
popf
jge
lods
inc
sbb
test
in
jmp
and
test
in
xorl
sub
ljmp
loopne
xchg
sub
test
mov
ret
addr16
mov
rcrb
out
xchg
lock
imul
sbbb
mov
push
pop
out
jns
pop
push
mov
add
test
pop
fisubrs
gs
sarl
mov
or
insb
mov
pop
out
mov
push
out
and
neg
and
arpl
andb
sub
or
outsb
sbbb
js
mov
add
out
insb
mov
mov
xor
pushf
out
fs
adc
jne
xchg
ret
insl
lcall
pop
sub
outsl
stos
dec
pop
cli
negb
data16
movsb
pop
leave
xlat
jo
push
fsubrl
fisubrl
into
int
push
into
pop
dec
jns
jo
sar
mov
fsubr
outsl
xchg
fiaddl
or
dec
leave
popa
jmp
scas
adc
cmp
push
push
adc
pop
push
jecxz
adcb
dec
mov
hlt
fsubrl
movsb
loopne
xor
xchg
test
call
push
faddl
push
in
movsl
fcoms
sub
mov
mov
sbb
inc
flds
xchg
or
inc
or
lds
or
push
sbb
test
mov
xchg
lret
mov
and
imul
stc
dec
aad
in
lods
and
cli
fstl
lods
xchg
and
jmp
cwtl
std
call
mov
add
or
xor
jmp
int3
jle
mov
and
pushl
adc
ss
mov
mov
sub
inc
inc
stos
jne
mov
negb
pop
sahf
movsl
push
mov
xor
shrb
sbb
movsl
mov
imul
or
lret
movsb
addl
sbb
cmp
and
jo
dec
inc
or
mov
lahf
test
daa
jnp
mull
ds
jbe
icebp
sub
inc
fcoms
repz
outsb
clc
jg
jp
pop
pop
aad
xchg
sbb
mov
mov
clc
jmp
shll
add
iret
shl
jbe
dec
push
roll
add
mov
pop
xchg
cmp
orl
add
out
xchg
and
test
scas
mov
lret
adc
addr16
dec
loop
push
push
filds
std
adc
dec
inc
jb
in
cmp
pop
lods
and
xlat
xchg
pop
ret
or
popa
es
xchg
ret
jnp
xlat
rcll
ret
and
sti
pop
fists
and
inc
insl
mov
cmp
push
and
lds
pop
dec
mov
and
outsb
outsl
push
aad
stos
in
aas
dec
push
mov
aaa
ret
outsl
jmp
or
sub
and
xor
jmp
pop
cltd
adc
shlb
and
cmp
push
adc
mov
xchg
movsl
or
mov
lods
sub
cmc
ss
sub
mov
and
lret
push
pop
cli
sahf
cli
mov
stc
fst
sahf
addr16
inc
stc
into
mov
je
inc
cwtl
push
cmpsl
push
adc
push
xchg
sbb
mov
adc
push
cmpsl
enter
mov
addr16
push
aaa
test
iret
loope
add
enter
mov
jg
xor
into
sbb
mov
fcoml
push
insl
out
sub
mov
bound
stc
jo
loopne
int3
mov
fistps
fbstp
and
mov
dec
inc
outsl
push
jne
mov
loopne
mov
cmpsb
out
sub
mov
ljmp
xorb
or
cltd
jge
rclb
insl
iret
stos
mov
lret
es
js
stos
add
mov
stos
pop
jae
jbe
gs
je
mov
addr16
xchg
sub
cld
inc
popf
or
inc
jno
mov
loopne
push
jmp
notl
push
jl
sbb
ror
fldcw
out
sbb
scas
jo
test
popf
push
sub
sbb
cmp
divl
mov
out
andl
mov
xchg
enter
mov
mov
loop
dec
push
sbb
add
sub
xchg
fwait
icebp
cs
add
ja
cmpsb
cs
js
ret
jge
out
test
fdivr
pushf
push
clc
repz
ljmp
scas
aam
push
popa
pop
jg
xchg
xchg
sbb
pop
xchg
sbb
repnz
mov
cmpsl
xor
inc
cltd
inc
pop
ss
xor
lock
popf
cmpsl
push
aad
cmp
xchg
jb
lcall
arpl
out
jg
call
sbb
dec
not
je
clc
push
jbe
xchg
mov
push
adc
inc
mov
and
in
lods
cli
add
je
push
xor
dec
mov
cmp
xor
add
lahf
ljmp
inc
fs
andl
xchg
pop
jne
mov
add
stos
mov
mov
push
fbstp
fwait
mov
cmpsl
lcall
das
jns
cmp
lds
and
mov
movsb
sub
cmp
mov
sub
add
mul
xchg
dec
and
xor
mov
lods
call
add
sbb
mov
icebp
sbb
mov
rcll
cli
sub
xor
test
xchg
push
movsb
nop
in
pop
sub
dec
fisubrl
sbb
mov
insl
push
mov
cli
aam
int3
mov
gs
mov
arpl
xchg
or
movl
and
push
fldl
sub
insb
push
mov
icebp
cmp
ja
das
pop
ljmp
xchg
fucomip
ss
xor
test
xor
jg
sbb
mov
pop
out
das
jb
push
pushf
out
mov
cltd
jecxz
out
aaa
xor
xchg
out
negl
outsb
aam
mov
xchg
push
mov
dec
mov
adc
xchg
int3
xlat
ret
call
dec
push
xor
cmp
hlt
lock
js
mov
pushl
outsl
out
cld
pushf
mov
add
iret
dec
and
out
sub
sarb
out
lds
ret
sub
dec
test
lret
sarb
push
mov
jns
mov
mov
sub
pop
cli
lock
fcmovnb
add
insb
inc
andb
sbb
leave
out
shr
test
or
inc
js
sbb
in
fcmovnu
cltd
out
push
adc
mov
gs
inc
cmpsb
mov
mov
push
fxch
dec
sbb
popa
xor
sbb
mov
rorb
push
mov
and
xchg
mov
mov
mov
dec
stos
push
dec
je
popf
lods
cmc
lods
cmp
cltd
xchg
in
fs
fcmovu
mov
xchg
fsubrs
cmp
or
push
mov
push
push
movsl
es
jb
or
lods
cmp
arpl
pop
inc
ljmp
pop
int
mov
jge
icebp
mov
add
les
cmp
push
xor
sbb
inc
and
inc
cmpsb
ljmp
xor
dec
inc
lods
sub
aam
into
shr
aam
mov
mov
jae
jmp
xchg
sbb
sub
jbe
push
out
mov
dec
fxch
jecxz
inc
movsl
dec
dec
push
lds
mov
iret
xor
cmp
pop
push
inc
aaa
push
add
sahf
xor
pop
insl
mov
loopne
jns
outsl
pop
pop
es
push
fs
xchg
mov
ficomps
fsubrl
out
mov
test
ja
adc
das
cli
roll
test
sub
sbb
add
jge
roll
mov
xchg
and
je
adc
inc
push
imul
cmp
cmpsb
les
clc
mov
jb
adc
mov
ret
mov
cmp
pop
xchg
subl
pop
scas
lods
cmp
pop
ret
loope
cmc
push
mov
ss
mov
test
pop
inc
popa
pop
in
out
inc
cwtl
ret
mov
notb
sub
pop
fidivrl
in
push
jecxz
inc
sbb
aas
lcall
iret
sbb
inc
mov
mov
rol
movsl
cmpsl
push
jecxz
mov
jno
add
cwtl
mov
scas
cmpb
repz
insl
test
int
repnz
jmp
sbb
fidivrs
mov
cmp
and
lret
cmpsb
ss
aaa
sbb
sbb
movsl
pop
imul
cmp
jg
adc
xor
popf
adc
cmp
or
jo
xchg
sub
pop
popf
scas
jnp
xor
data16
pop
and
shrl
unpcklps
xchg
adc
add
insl
fs
or
inc
push
xchg
outsb
add
ss
jge
mov
fcompl
rcrl
ds
jbe
mov
cmp
mov
aas
repnz
stos
pusha
jns
lods
cli
imul
int3
mov
mov
mov
pop
inc
adc
jbe
loope
push
in
cmpsl
add
imul
xlat
sahf
or
ss
pop
cmpsb
mov
shl
stc
test
imul
inc
or
into
pop
xor
imul
adc
ret
jne
jmp
dec
xchg
scas
inc
pop
push
daa
pushf
jl
fsubrs
xor
clc
cmpsl
jb
in
mov
jp
jge
jg
adc
or
mov
int
cwtl
out
cmp
ljmp
pop
jnp
xor
jnp
and
cmpxchg
add
sbbl
xor
push
and
sbb
es
pop
mov
push
add
push
sti
mov
hlt
fwait
js
hlt
mov
popf
xchg
in
xchg
icebp
mov
das
mov
pop
addr16
pmulhw
hlt
mov
mov
and
iret
inc
cs
fidivs
dec
xchg
xor
dec
adc
test
mov
push
mov
adc
jne
and
lret
cmp
outsb
xor
out
lret
jae
xchg
out
cmp
out
or
dec
popa
dec
cmp
mov
loope
cmp
popf
ljmp
mov
push
sub
cmp
ds
jg
inc
es
cmp
int
das
ret
sub
xchg
inc
into
enter
push
mov
ret
in
in
dec
cmp
mov
xchg
das
psubw
outsb
mov
loop
inc
jecxz
mov
pusha
cmpsl
dec
in
test
dec
es
mov
ja
insb
es
out
cmpsl
imul
loopne
inc
adc
push
lahf
sbb
push
mov
pop
insb
sahf
cmp
test
in
xor
test
dec
movsb
dec
mov
addl
lcall
xchg
fmul
arpl
repz
lcall
mov
arpl
lahf
dec
movl
pop
cmp
push
loope
adc
mov
xchg
xor
fwait
hlt
push
shlb
fwait
adc
adc
or
xchg
mov
imul
inc
cmp
jno
dec
push
pop
sub
mov
jns
adc
xchg
xchg
aad
iretw
je
pop
pushf
and
xchg
outsb
out
pop
repnz
test
sarl
mov
mov
jno
push
popa
leave
xchg
sbb
test
lcall
stc
push
in
test
mov
in
sub
shrb
dec
fwait
hlt
ret
inc
shrb
cld
xorb
mov
cld
les
mov
mov
mov
push
test
lret
mov
xor
iret
jecxz
popa
mov
cmpb
mov
pop
pusha
dec
lock
lds
clc
push
push
test
xchg
and
cmp
mov
jb
testb
dec
imul
xchg
ret
xor
mov
stos
ss
out
jne
loop
fcmove
icebp
arpl
xchg
jb
addr16
negb
scas
movsl
inc
popf
jge
loope
jle
pop
mov
ljmp
movsb
xor
cmp
sbb
das
and
es
shr
data16
and
rolb
adc
int3
jnp
jne
arpl
aam
std
xor
shl
lret
mov
sbb
dec
loop
mov
mov
arpl
in
mov
cltd
pop
int
in
adc
shrl
fsub
gs
xlat
js
cmp
mov
aaa
dec
fsubs
je
jno
push
pop
adc
pop
test
lret
movsb
pushf
out
pop
fistps
hlt
cwtl
pusha
bound
jb
fs
jnp
dec
adc
xor
sbb
pop
inc
sbb
scas
push
xor
cmp
out
test
push
pop
or
xor
sub
repz
sub
int3
in
mov
mov
ja
jnp
push
cmp
ss
pop
icebp
xor
xchg
add
add
jne
push
cmp
xchg
aaa
xlat
ret
or
ss
mov
cwtl
aam
push
add
cmc
cmpsb
lea
jae
mov
jle
movsl
fistpll
ret
call
dec
cmp
push
inc
mov
test
int
in
inc
jb
pop
mov
fwait
dec
and
sti
test
iret
and
lret
popa
push
inc
subl
jg
mov
fstl
dec
sbb
and
scas
repnz
inc
bound
xchg
push
sub
jno
sub
daa
or
xchg
jmp
jg
and
pop
mov
fwait
lock
mov
push
xor
lret
out
push
xor
in
jns
fdivrl
or
push
test
testb
push
mov
leave
into
insl
add
push
pop
cmp
mov
test
pushl
pop
ss
pop
mov
lea
stc
pushf
push
inc
mov
js
enter
int
sarb
jbe
test
int
add
rorb
fsubrs
lods
mov
or
dec
dec
sar
jne
imul
pop
jmp
stc
or
shlb
out
popa
pop
sti
push
mov
push
movsl
fistps
push
test
ss
dec
sub
pop
ja
std
jp
sub
xchg
rcr
cmp
movsb
sbb
aas
mov
mov
cwtl
xchg
out
dec
sarl
ljmp
ret
mov
jae
test
add
mov
add
aaa
imul
lcall
nop
jnp
shrb
mov
movsb
repnz
aad
xchg
sar
mov
or
iret
mov
shl
add
cmc
inc
ss
notl
fs
inc
cwtl
int3
mov
pop
inc
fidivrs
dec
xchg
jge
mov
inc
int
loopne
bound
inc
mov
rol
xchg
mov
vunpckhps
pop
lcall
pop
stc
out
scas
loop
imul
movsl
mov
mov
jmp
mov
push
inc
ficomps
loopne
jne
push
fwait
cmpsl
test
test
mov
int
scas
aas
dec
es
lahf
push
mov
cmpsl
idivl
xchg
scas
sbb
xor
mov
fsubrl
inc
xchg
leave
sub
mov
ret
arpl
movsb
jge
jns
mov
stos
mov
mov
push
xchg
mov
dec
jp
jno
call
mov
lods
and
xchg
mov
dec
dec
fnstsw
in
dec
rorl
hlt
sar
pop
push
xchg
sub
mov
pop
add
dec
inc
andl
cmp
loope
arpl
aas
xchg
andb
cli
insb
add
sub
shll
adc
fbstp
xor
dec
add
sub
inc
xchg
rclb
add
scas
sub
push
mov
and
dec
pop
lret
lcall
out
test
push
leave
scas
push
stc
adc
and
jge
rcrb
arpl
jg
jbe
jnp
bt
cltd
std
cmp
sbb
add
mov
adc
mov
cmp
outsl
sbb
push
and
stc
cld
add
cmp
xchg
xchg
es
je
or
cs
fidivl
or
xchg
pop
cmc
mov
xchg
mov
nop
daa
jne
popf
xor
stos
loopne
xor
pop
mov
andl
inc
jnp
xchg
mov
orb
hlt
imul
adc
daa
jne
lock
fs
mov
push
xor
addl
imul
mov
popf
shrl
mov
mov
movsl
and
xlat
popf
cmpsl
lcall
roll
sbb
test
stc
stc
test
xor
loop
filds
mov
into
jno
shll
out
sbb
rorb
aam
inc
test
in
lds
mov
push
ljmp
dec
jne
call
sbb
fdivrs
sbb
or
or
jg
lods
inc
fldcw
enter
xchg
cmpsb
inc
cmpb
mov
sbb
push
lea
dec
gs
xor
or
dec
shr
jecxz
pop
dec
xor
pop
sub
push
adc
push
adc
ds
pop
out
jne
push
dec
sbb
in
pushf
ss
or
scas
xchg
lods
dec
dec
cltd
inc
inc
out
test
scas
push
push
xchg
cmpsl
xor
and
repz
xor
fucomip
test
cwtl
sub
cmp
cmovnp
js
dec
fbstp
mov
inc
jae
mov
lds
rorb
shrb
testb
mov
lock
fstps
int3
nop
cltd
std
lcall
and
mov
xlat
push
inc
fidivrs
fsubl
add
fldt
push
andb
pop
xor
mov
outsl
subl
enter
mov
cmp
mov
inc
pusha
pop
loop
jno
jle
pop
ja
mov
outsl
cwtl
adc
xchg
stc
mov
addr16
es
out
popl
fcmovnb
sub
xorl
push
adc
outsb
mov
mov
aas
mov
rcrl
jno
aas
fwait
pop
fwait
cmpsl
mov
cs
adc
repnz
xchg
clc
inc
dec
sbbb
jp
ret
mov
jg
stc
adc
xchg
push
sub
gs
je
mov
dec
mov
jg
arpl
adc
sahf
hlt
jl
loopne
psrld
out
pop
pushf
out
lea
call
add
loope
aaa
aas
or
pop
pop
ret
aam
mov
xor
mov
pop
push
cmp
inc
xchg
xor
lea
stos
push
sti
and
push
dec
mov
fwait
test
pop
test
mov
adc
mov
adc
lret
call
insb
jecxz
scas
xchg
jl
out
movsb
cmp
push
jns
dec
lret
out
fisubrl
hlt
ss
das
scas
inc
mov
xchg
sbb
in
aaa
stos
cmp
and
inc
dec
hlt
mov
sub
in
jg
mov
xor
das
xchg
mov
jp
push
jecxz
mov
push
inc
sti
pop
shr
fadd
imul
mov
dec
cmpsl
sub
test
icebp
mov
push
inc
mov
shlb
aam
mov
or
cmp
mov
mov
es
push
push
jno
jp
ja
call
subl
outsl
push
inc
loope
shl
gs
loopne
push
mov
ret
push
jle
pop
add
lcall
les
es
and
sub
movb
ja
lds
and
push
pop
inc
cmp
in
std
xor
mov
data16
pop
sub
inc
hlt
out
pop
test
or
jne
loop
cmp
je
mov
testb
aam
jbe
push
or
cmpsl
lahf
test
nop
cmp
stos
xchg
jnp
jge
movsl
loope
out
jge
aad
movsb
and
negl
push
out
push
push
adc
arpl
daa
in
fxch
je
call
iret
aad
cltd
shll
inc
loope
rcrb
arpl
jecxz
and
mov
js
and
dec
pop
adc
xor
push
es
jne
cmpsl
mov
clc
cmp
inc
jl
dec
enter
or
data16
jecxz
fs
mov
out
lret
mov
add
cmp
stos
fs
lret
dec
fists
push
fnstsw
fs
fdivl
scas
push
inc
bound
nop
shll
and
std
jmp
aam
je
push
stos
cltd
in
cwtl
jmp
icebp
pop
jne
add
mov
mov
add
jnp
push
fildl
leave
ss
xchg
sub
movsl
inc
dec
push
xor
das
pop
iret
cwtl
das
std
mov
sub
pop
scas
mov
into
stc
jmp
aas
or
adc
add
mov
push
incl
in
in
pop
pop
dec
cmpsl
divl
ds
xchg
js
into
add
lds
loope
mov
leave
jnp
adc
mov
idivl
xchg
or
cs
sub
in
mov
pop
or
stc
in
and
mov
cli
pop
repz
ljmp
xchg
data16
popl
les
and
adc
xor
or
xor
adc
or
push
cmpsb
cmp
mov
into
inc
push
arpl
testb
fwait
fs
xchg
jns
or
push
jnp
enter
mov
xlat
aaa
push
or
cmp
dec
dec
mov
lea
jbe
in
aam
out
movsl
imul
or
sub
mov
lcall
mov
ficoml
stc
sahf
jge
call
add
stos
dec
sbb
xchg
icebp
imul
into
mov
popa
sbb
arpl
stos
movsl
clc
pop
cli
and
imul
adc
jne
sub
jno
sarb
subl
dec
mov
insb
imul
fistpll
inc
dec
mov
addr16
lret
out
inc
das
bound
pop
mov
add
cmp
jbe
sbb
mov
push
mov
popa
in
xchg
inc
sbb
or
mov
push
or
or
imul
ljmp
aad
pop
rcll
or
cmc
dec
dec
add
cmp
mov
adc
movsl
icebp
movsl
mov
stc
adc
insl
popa
xor
imul
mov
mov
fbstp
pusha
dec
dec
lds
jb
popa
cli
xchg
adc
arpl
add
xchg
test
push
xchg
test
inc
xchg
adc
push
nop
push
in
cli
push
call
cmp
jo
out
pop
or
js
popf
stc
clc
push
aad
jg
lea
or
lcall
jmp
xor
mov
inc
jmp
or
ret
pop
mov
push
loope
faddl
push
push
push
xchg
add
push
pushf
movaps
add
dec
add
adc
fnsave
mov
pop
or
push
mov
jp
mov
sbb
test
jno
notb
scas
jne
push
push
xor
xchg
push
cmp
stos
xor
repnz
xchg
xchg
add
pop
fdivrs
out
fdivs
xor
call
add
or
cmp
sahf
gs
nop
jle
dec
xor
cmp
js
sub
push
sbb
nop
or
inc
mov
imul
sub
popa
stos
filds
xchg
push
jg
das
cmpsl
fdiv
int3
nop
jns
mov
das
mov
test
jbe
out
mov
pop
cwtl
test
ja
sub
ficoml
fldl
pushf
ljmp
mov
shll
fistpl
mov
sbb
fwait
xor
das
lock
add
test
inc
jle
outsl
sub
pop
sub
icebp
das
xchg
jns
les
jle
adc
or
arpl
lret
jno
jae
sub
fsts
loope
mov
scas
jmp
rcl
sahf
cmp
dec
jle
mov
pop
loopnew
outsb
sub
inc
xchg
std
insl
add
les
mov
sub
or
mov
pop
fnstcw
das
jns
xchg
and
push
aas
std
jp
mov
popa
push
movsb
outsb
call
inc
push
xor
call
cmc
data16
insl
dec
jae
sahf
cmp
mov
outsb
std
lea
movsb
loop
outsb
out
int
enterw
lds
lods
lret
cmpsb
push
adc
repnz
sarb
ds
mov
inc
push
mov
fbstp
fcompl
push
fadds
in
movsl
pop
roll
inc
pusha
lods
fbstp
and
sbb
adc
dec
jmp
lcall
orl
mov
movsb
jle
ja
fs
out
in
js
sbb
lret
pusha
inc
sbb
imul
dec
sub
pop
lods
mov
pop
scas
push
push
or
aad
dec
mov
pop
push
inc
ds
lods
lock
sub
aaa
mov
inc
mov
imul
les
pop
cmpsb
pushf
bound
les
in
cli
mov
mov
inc
cmp
fcomps
icebp
mov
ffreep
hlt
cmp
inc
pop
scas
xor
das
or
push
xchg
lods
inc
hlt
push
jmp
out
inc
jo
cli
sub
inc
aad
adc
in
and
jno
cmc
ja
xchg
call
js
in
sbb
aas
mov
adc
cltd
adc
jp
push
std
fdiv
inc
add
push
inc
rcrl
outsl
stos
in
hlt
scas
inc
adc
aas
into
mov
insb
jl
ds
loopne
jnp
adc
shrb
or
jmp
push
mov
outsb
mov
adc
fcmovnu
adc
call
dec
cmpsb
jb
aas
push
sub
das
mov
xor
ja
sbb
cwtl
push
add
sbb
inc
or
daa
sti
testb
loop
and
sbb
jp
outsl
clc
or
jp
jge
into
jno
sbb
inc
idivb
out
lock
shll
lret
notl
ja
fisubs
push
in
scas
push
mov
ja
lret
or
std
mov
fsts
lcall
fwait
cmpsl
jge
sub
int3
mov
jnp
xchg
sub
inc
out
sub
cmp
cmp
in
and
mov
jb
xchg
ss
test
adc
adc
pop
jae
xor
jl
fisubrs
loopne
jl
out
mov
dec
mov
xchg
imul
mov
or
call
add
fidivl
fisubrs
pop
or
cmp
push
or
xchg
add
or
fstp
jmp
in
mov
xchg
mov
xchg
mov
imull
sub
jmp
sbb
or
outsl
mov
mov
scas
mov
pop
insl
mov
loopne
jmp
out
sbb
xchg
mov
or
mov
push
jge
or
stc
jmp
lods
pop
add
es
and
ds
call
xorb
nop
sub
lods
fildll
call
hlt
in
andb
into
push
adc
push
push
in
cmp
sub
popf
jne
mov
mov
mov
fs
push
test
lds
xor
fwait
jne
pusha
xchg
jne
xchg
add
ret
jbe
xchg
mov
or
dec
inc
push
setle
loop
sub
dec
test
dec
das
shl
aam
add
fdivr
mov
fwait
cmpsl
jmp
inc
mov
xchg
leave
xor
aam
repnz
pusha
pop
and
shl
cmp
adc
les
fcoml
out
xor
fneni(8087
or
jbe
pop
notb
cwtl
out
lret
xchg
cmp
xchg
mov
pop
cmp
mov
inc
lods
lods
popf
cmc
and
lret
push
cld
add
and
pop
fildll
mov
ss
pop
clc
bound
loopne
ret
pop
mov
sarl
lcall
mov
inc
push
adc
xchg
lcall
mov
push
push
push
mov
out
or
xorb
xchg
sbb
dec
add
cmc
xchg
jecxz
xchg
mov
movsb
out
cwtl
inc
mov
out
ljmp
inc
xor
test
mov
sbbb
jae
mov
mov
lcall
inc
mov
das
push
dec
dec
in
outsb
cmp
repz
in
mov
cltd
jno
shrb
mov
pop
inc
mov
jge
mov
mov
mov
cmc
test
fsubrs
jnp
out
mov
add
mov
add
cmpsl
pop
aaa
dec
test
and
adc
sbb
lods
clc
or
stos
loopne
sub
and
or
dec
xchg
push
or
xor
stos
xor
add
mov
cli
vshufps
dec
int3
pop
xchg
pop
sub
xchg
insl
subb
xor
and
mov
push
int
rcl
popa
insl
shlb
push
dec
dec
dec
sbb
cmp
fists
add
xor
push
ret
cmpsb
notb
mov
pop
icebp
aam
and
out
or
adc
mov
sbb
stos
mov
js
ds
aas
xor
push
xchg
in
add
repnz
adc
cmc
divl
in
jno
xchg
cmp
inc
push
imul
sbb
sahf
or
ret
ret
sbb
lcall
sbb
leave
pushf
mov
xlat
mov
mov
cwtl
jae
hlt
mov
out
notl
push
and
jmp
jns
std
popa
lret
lock
jle
jnp
lcall
insb
inc
and
fs
dec
adc
mov
popa
icebp
stc
adc
cs
dec
push
repnz
in
xor
sub
mov
cmp
test
pop
ljmp
lock
mov
pushf
and
lods
pop
add
fwait
add
mov
sbb
loop
inc
dec
cmp
jmp
push
lcall
into
xor
sbb
outsb
adc
sub
sub
cmp
adc
sub
xchg
iret
inc
ret
dec
mov
xlat
xchg
push
dec
arpl
xchg
push
lods
std
xchg
and
push
xchg
sbb
gs
inc
lods
inc
js
push
call
mov
cltd
fldcw
insb
out
mov
mov
xor
sub
push
cmp
lcall
cmp
cmc
data16
adc
stc
into
cmp
jecxz
sub
pop
int
js
ds
push
out
imul
push
and
mov
loope
adc
lahf
cmc
mov
xchg
sbb
outsl
sbb
cmpsb
pop
iret
push
mov
aam
fs
sbbb
or
xchg
gs
lock
out
inc
mov
inc
lahf
push
je
cwtl
cs
nop
fs
out
mov
cmpsb
leave
jbe
loop
jno
rcll
push
push
xchg
sub
mov
lods
rorb
or
out
cs
pop
mov
lret
cmpsb
jmp
pop
pop
mov
xchg
dec
jbe
and
outsl
pop
scas
adc
mov
fcomi
fst
mov
fcmovb
push
hlt
mov
cvtpi2ps
inc
daa
fdivl
inc
mov
xor
cli
mov
shl
lidtl
cmp
loopne
lret
mov
daa
sbb
popf
add
mov
clc
in
lds
into
dec
and
xchg
jge
movsb
repnz
xor
psllq
cmp
mov
pop
dec
dec
adc
dec
mov
aas
aam
std
inc
fistpll
and
icebp
scas
dec
push
stc
lret
mov
push
push
mov
lock
mov
push
loope
lds
mov
popa
ds
ret
and
mov
gs
push
push
sbb
push
imul
xchg
push
sbb
mov
sbb
or
mov
xor
push
pop
mov
xlat
mov
sbb
in
pushf
popa
push
loop
jl
add
or
jp
xchg
xor
adcb
mov
aam
push
pop
xchg
fwait
push
out
or
adc
loope
xchg
lcall
pop
or
fnsave
xlat
int
sub
jne
pop
cmpsb
in
cltd
jecxz
ror
dec
rcll
add
je
dec
add
nop
lods
xlat
cmp
mov
xchg
add
dec
jecxz
pop
sbb
popf
add
xchg
lods
mov
mov
ja
loopne
sbb
inc
pusha
adc
sbb
loop
mov
lock
andb
in
fimull
outsb
mov
addr16
mov
addr16
sub
shr
out
test
cmc
jns
out
lcall
and
bound
into
xchg
cmp
add
ds
repnz
add
dec
stos
add
push
out
lret
pop
jns
dec
sub
xchg
ret
mov
fmull
shlb
movsl
push
out
outsb
push
jno
mov
pop
or
jg
inc
mov
fmuls
arpl
fs
xchg
sub
mov
and
int3
inc
arpl
mov
mov
jge
adc
mov
es
jno
xchg
mov
testb
lea
stos
inc
out
repz
cmp
dec
jns
rolb
out
lret
cs
outsb
jp
xlat
repz
xor
mov
and
mov
outsb
jecxz
in
in
mov
sahf
loope
sub
or
jge
push
kandnb
adc
ret
cltd
mov
dec
pop
mov
jb
stos
sbb
sbb
lods
sbbb
jmp
lock
movsl
inc
sbb
data16
xchg
pop
movsl
sub
cmc
xchg
dec
out
out
jno
gs
xchg
out
js
das
cld
sub
mov
xchg
bound
add
sub
sbb
push
jb
cmp
inc
in
mov
sub
xchg
mov
lods
xchg
pop
rcrl
lcall
inc
pop
icebp
mov
mov
andl
cwtl
insb
out
push
mov
sbbl
filds
sbb
jo
gs
dec
int
jl
cmp
dec
cltd
pop
int3
movsb
cwtl
mov
popf
loopnew
jo
cmp
clc
inc
fdivrl
fsubrp
insl
lret
and
mov
xor
xor
xorb
mov
ret
aad
mov
stos
jmp
mov
ja
pop
jge
xchg
scas
inc
loopne
jge
out
adc
cmc
in
mov
sub
xchg
into
cltd
mov
push
repnz
pop
in
pop
aaa
cmpb
hlt
xor
push
xchg
add
inc
and
sahf
test
sub
gs
xor
fnsave
mov
test
or
out
jge
bound
iret
xchg
mov
imul
inc
sub
sbb
test
subl
repz
or
mov
ret
and
aam
mov
pop
mov
shl
cwtl
mov
inc
add
icebp
in
push
es
pop
das
lcall
mov
loop
mov
xorb
and
xor
push
insl
lahf
in
scas
ja
mov
bound
mov
pop
cld
and
sbb
mov
das
popa
popf
push
cmp
add
jb
mov
fldl
test
mov
shl
int
fisttpl
pusha
or
imul
xchg
jae
push
or
mov
rcll
jb
or
cmp
fdiv
push
jge
vminps
call
dec
add
stc
sbbb
cmpsl
xchg
inc
push
mov
into
or
sub
sbb
pop
nop
push
dec
adc
dec
je
pop
scas
movsb
cwtl
daa
loop
push
xor
inc
out
pop
ja
xor
and
xchg
push
cmpsb
mov
mov
xor
mull
adc
mov
aas
movsb
rclb
mov
xchg
in
jl
ds
in
xchg
cmp
cmp
jae
add
and
sti
shll
push
pop
jb
mov
xchg
sub
scas
aas
mov
outsl
or
insl
and
shrl
imul
fcoml
adc
pushf
pop
xchg
jle
sbb
xchg
pop
add
mov
adc
mov
push
mov
and
rol
cmp
outsl
inc
mov
fnstcw
push
lds
vpackuswb
sbb
mov
dec
push
ret
dec
out
xor
out
ljmp
iret
ret
dec
pop
std
sub
add
mov
jmp
xor
fildll
ret
scas
add
sbb
int3
movb
in
out
pop
pushf
mov
aas
xor
insl
mov
hlt
mov
fnsave
lock
adc
into
mov
xchg
adc
decb
cmp
mov
or
imul
sbb
add
cmp
leave
sbb
scas
mov
shll
mov
in
jg
and
leave
fdivs
cmp
xchg
pop
out
mov
push
setbe
push
outsl
add
sub
divl
push
outsb
fstpt
out
cld
cmc
lea
dec
aaa
push
xor
jbe
lea
mov
fdivs
loope
pop
xlat
cmp
cmpsl
or
cli
insl
sbb
inc
inc
inc
xor
loop
in
mov
fisubl
mov
jmp
je
sub
cmp
and
push
push
loopne
je
jl
push
orb
xlat
fsubrs
pop
popf
stc
pop
scas
mov
xchg
outsb
hlt
ret
cmp
adc
sbb
jecxz
adc
dec
pop
pop
out
clc
add
fbld
inc
addr16
test
out
or
pop
adc
ss
push
lea
int
pcmpgtd
aam
push
push
shrb
das
push
mov
xor
sarb
loope
mov
pushf
in
inc
xchg
adc
sbb
adc
mulb
adc
add
and
bnd
insl
mov
pop
push
cmp
xchg
fnstsw
in
add
test
add
xor
repz
xor
shrl
into
out
test
lret
add
dec
jecxz
aad
sub
pop
push
push
push
mov
int
inc
jne
inc
add
mov
ja
inc
pop
mov
pop
jg
dec
test
mul
pop
out
pusha
mov
mov
pop
add
repnz
jmp
test
jbe
mov
icebp
movsb
rcrb
mov
adc
pop
sarl
gs
cwtl
das
ds
test
or
das
mov
adc
movsb
nop
ss
daa
icebp
movsl
or
cmp
ja
mov
cli
mov
inc
and
mov
mov
sub
and
fisttpll
aas
in
mov
cltd
mov
cmp
xchg
mov
dec
add
insb
mov
dec
add
inc
push
insb
mov
hlt
cmp
icebp
pop
add
cmpsl
and
pop
mov
cmp
xchg
dec
inc
ja
mov
jmp
xor
inc
ficomps
shr
hlt
xchg
pop
sbb
dec
cmp
adc
or
pop
add
or
and
les
dec
cmp
pop
mov
pop
imul
cmpsl
scas
inc
xlat
bound
aas
loope
jge
pop
sarl
pop
lcall
pop
test
cmc
fyl2xp1
and
jmp
pushf
xor
lcall
rcrl
orl
mov
stos
call
lret
test
ljmp
push
inc
push
in
ja
fcoml
outsl
jae
cmp
pop
nop
push
push
xor
xchg
inc
call
push
add
xchg
test
into
push
sbb
into
adc
bound
outsl
jnp
popa
mov
xchg
clc
cmpsb
neg
add
mov
cmpb
test
sahf
std
test
test
cmp
movsl
cmp
inc
insb
mov
nop
sbb
int3
mov
jbe
push
popa
clc
xchg
xor
aas
sahf
int
pop
push
mov
popa
outsl
push
jmp
jne
insl
mov
add
sub
and
cmpsb
arpl
inc
or
and
mov
dec
cmp
lea
lcall
and
std
jg
push
pusha
push
xor
icebp
jne
pop
insl
fwait
lret
push
pop
cld
dec
mov
pop
repnz
jnp
adc
out
lcall
fisubl
mov
faddl
xchg
jl
enter
test
jo
das
insb
lods
jp
fimuls
jne
sbb
cmpl
ss
test
popa
testl
xchg
cmpl
or
filds
lods
mov
ds
jmp
rclb
fst
andl
mov
sbb
stos
insl
pop
xchg
fidivrs
push
insb
arpl
xchg
inc
jno
sti
pop
jmp
pop
fsubl
xchg
add
std
mov
jmp
xchg
movsl
xchg
testl
pop
xor
inc
sub
pop
loop
repnz
shrl
adc
dec
mov
insb
jle
fcom
push
sbb
xchg
sbb
pop
rcrl
frstor
cltd
test
push
roll
mov
jle
sbb
imul
jbe
sbb
jge
add
xchg
inc
mov
stc
pop
fs
pop
sbb
insl
push
add
imul
xor
push
orb
ja
adc
test
scas
jnp
in
inc
inc
gs
jp
cmp
mov
rcrl
pop
imul
pushl
push
imul
mov
mov
pusha
hlt
adc
xor
inc
shrb
jp
ret
rolb
clc
call
inc
or
mov
jg
scas
mov
pop
or
imul
out
popa
lahf
sub
or
negb
mov
lret
popa
mov
add
jp
sbb
addr16
mov
sti
inc
sti
sub
je
icebp
adc
insb
jmp
xchg
shlb
out
push
mov
sahf
mov
mov
dec
icebp
scas
adc
ret
fwait
stos
addl
enter
ja
push
in
jns
add
test
inc
and
or
shlb
mov
pop
xchg
dec
push
arpl
mov
ja
adc
sbbl
mov
movsl
mov
loop
or
fwait
xor
scas
into
push
loopne
mov
leave
xor
loop
push
dec
xor
imull
mov
push
insl
jl
adc
test
repz
cltd
lock
mov
pop
in
lahf
jns
add
imul
leave
std
neg
jnp
movl
dec
scas
fcompl
adcl
sub
stos
mov
sbb
sbb
cmp
pop
mov
or
xor
je
mov
arpl
jae
orl
push
sbb
outsb
xor
das
push
mov
pop
jmp
imul
aam
or
adc
clc
test
mov
jbe
imul
test
or
or
jmp
hlt
cmp
push
jbe
sbb
push
fildl
popa
into
inc
pop
sti
mov
in
add
and
neg
js
add
pop
adc
mov
sub
stos
adc
mov
xchg
in
test
cmp
mov
cmp
imul
jo
dec
negl
pop
loop
mov
test
ret
cmp
add
subb
daa
add
arpl
insb
or
sbb
aaa
push
out
inc
lret
bound
shr
stc
mov
cwtl
das
inc
xor
mov
sbb
jb
sub
pop
out
imul
xchg
enter
shr
sbb
push
sarb
iret
add
adc
jecxz
adc
out
rcr
adc
movsb
mov
and
lahf
in
test
iret
sbb
inc
sbb
xor
or
rorb
adc
mov
push
outsb
lcall
in
adc
pop
test
inc
out
fwait
sub
mov
pop
push
divl
mov
aas
int
sbb
nop
int
cmp
movsl
mov
jns
or
gs
sbb
aam
jne
dec
es
add
add
cmpsb
sub
jmp
xchg
inc
cs
cmp
sbb
popf
ret
bound
sbb
mov
sub
adc
inc
pop
rolb
sbb
mov
and
cmpsb
mov
int
scas
addr16
sbb
xchg
jno
imul
ret
push
movb
jae
repnz
sbb
mov
push
xor
or
xchg
repnz
test
lcall
outsl
das
pop
jg
loop
mov
pop
jecxz
dec
adc
fwait
xchg
lret
les
sti
nop
mov
fldcw
cmpb
xchg
xor
aas
jecxz
xchg
scas
cwtl
sub
inc
dec
ret
mov
pushf
jne
int3
fs
and
inc
push
inc
int3
dec
fldl
jge
enter
repnz
push
adc
insl
lods
inc
test
repz
out
cltd
sub
mov
mov
or
fs
mov
push
out
mov
push
or
adc
stc
sbb
ret
daa
mov
lods
ret
mov
into
push
insb
inc
or
xor
popa
sbb
test
lret
aas
cmpsb
push
pop
fimull
xchg
push
dec
and
dec
push
out
aad
insl
pop
dec
insl
pop
push
movsl
nop
jno
cmp
divl
clc
loop
cmp
in
cs
rorb
pop
popf
inc
xor
and
sbb
inc
iret
jo
cmpl
lods
pop
es
out
ss
push
movsl
push
push
ret
shrl
and
out
sti
mov
inc
dec
cmp
mov
mov
into
fcomi
repnz
lea
subb
mov
movsb
cmp
add
dec
mov
xchg
adc
es
cmc
xchg
shll
outsl
pop
fsubs
rol
xchg
cmc
and
jo
pop
loop
enter
insl
and
sti
sbb
fs
pushf
xor
cs
push
call
bound
or
dec
mov
add
popf
or
pop
ljmp
testb
cmp
dec
imul
mov
fidivs
pop
leave
insl
loop
fimuls
push
xor
test
jl
jp
cs
aaa
testl
arpl
xchg
xorb
mov
xor
adc
dec
out
mov
in
or
or
fisubrl
sub
cmc
dec
fdivs
push
stc
ds
add
scas
ja
mov
and
push
xchg
outsb
movups
mov
shll
loope
out
repz
cs
mov
orl
js
das
or
mov
leave
inc
mov
pop
add
sbbb
mov
mov
lds
add
out
aaa
ret
push
outsb
and
fldl2t
mov
push
cld
fiadds
adc
popf
mov
mov
aaa
data16
sbb
ja
jo
scas
sub
jnp
stc
dec
ss
jecxz
sbb
or
shl
add
inc
xor
pop
cmc
mov
fldt
add
shlb
mov
push
mov
dec
pop
adc
cmp
cmp
outsb
inc
xor
push
bound
or
mov
or
push
in
pop
addr16
fwait
adc
cmp
fs
imul
cmp
push
hlt
rolb
jl
push
repz
ja
pop
jmp
sbb
ljmp
pop
pop
push
enter
inc
pop
sahf
jb
jns
test
adc
jb
cmpsl
inc
popf
fwait
gs
mov
or
mull
out
inc
repz
jo
or
and
sub
inc
sti
or
and
cmc
mov
inc
fcompl
xchg
in
in
cmp
mov
cmp
inc
fmull
scas
push
jbe
xchg
jecxz
dec
adc
insb
sub
inc
pop
in
inc
in
shl
push
mov
and
jbe
xchg
daa
jg
iret
sbb
add
shrb
repz
scas
mov
jmp
lcall
sbb
popf
add
sub
dec
aaa
add
out
push
xchg
jb
jnp
or
push
nop
int
std
mov
gs
std
mov
fcoml
stos
dec
loope
push
adc
shlb
inc
fisubrs
insb
sub
fbstp
gs
jge
push
sub
inc
out
mov
cli
pusha
push
mov
cmc
xor
test
pop
mov
mov
mov
jl
jae
lds
lods
push
fldl2t
mov
pusha
jae
sub
mov
fildl
or
push
or
xchg
enter
mov
inc
jbe
jb
bound
mov
ror
mov
xchg
test
out
stos
push
push
scas
clc
dec
icebp
jmp
enter
js
addb
push
cwtl
es
cmp
cmp
mov
mov
xor
fisttpl
std
adc
das
dec
sbb
push
icebp
dec
pop
cs
rolb
fsubrl
push
mov
aam
dec
or
int
and
lcall
sbb
out
jne
sbb
push
inc
jo
outsb
xchg
sub
loope
xlat
scas
ret
cld
icebp
sbb
repnz
jmp
faddl
jae
ds
outsb
jo
xorl
nop
xchg
mov
pop
mov
pop
jne
push
xor
lods
adcl
mov
outsb
fs
and
push
insb
int3
mov
mov
push
adc
xor
xchg
mov
std
push
sub
scas
or
xlat
mov
fldt
jle
lcall
arpl
mov
mov
and
dec
aam
pop
es
jp
jnp
iret
inc
popf
ret
arpl
dec
call
push
imul
xchg
adc
aaa
into
cmpsl
push
pushf
jno
enter
pop
hlt
push
jae
xchg
in
mov
leave
and
cmp
sbb
insl
or
add
adc
scas
inc
or
pop
pop
and
mov
out
push
das
movb
aam
out
loop
mov
out
dec
imul
in
xor
iret
lea
icebp
aad
sbb
push
ret
cwtl
mov
loope
cmp
dec
pop
sub
xor
shl
fcomps
ss
fidivrs
sahf
ss
sbb
jmp
or
push
in
lock
and
divl
idiv
cmp
or
mov
xchg
in
mov
and
add
mov
in
nop
push
push
push
pushl
iret
add
inc
add
or
shr
mov
and
and
or
push
sbb
xchg
and
or
fadd
mov
adc
xor
xchg
xor
into
bound
out
jbe
int3
arpl
cmp
pushl
xor
or
stc
pop
push
sub
sbbb
or
movsb
jl
aaa
pop
shlb
mov
mov
sbb
stos
mov
popf
lock
mov
sbb
add
and
jnp
dec
sbb
cmp
aaa
add
insb
inc
xlat
sub
dec
pushl
in
inc
call
adc
mov
pop
cltd
fmul
xchg
add
in
pop
test
test
bound
stos
mov
fdivl
je
test
jp
sub
orl
xor
outsb
jg
sub
gs
pop
pop
xor
pop
and
mov
sub
popa
xchg
cmp
pop
pop
scas
nop
or
mov
xor
mov
mov
cltd
mov
adc
jnp
lds
and
gs
xor
push
loope
popf
fldenv
outsb
and
inc
mov
mov
cs
cmp
jmp
fstpt
dec
loope
mov
push
inc
inc
repnz
mov
adc
ss
addr16
inc
sub
int
mov
lret
push
out
cld
push
mov
inc
pop
hlt
mov
loope
mov
fiadds
jb
aam
mov
pop
ds
fwait
jbe
subl
mov
test
or
sub
test
scas
jge,pt
inc
fimull
movsb
ss
cli
xor
ss
xchg
cs
push
or
leave
cli
cmp
dec
jnp
ds
out
test
loop
scas
in
sbb
ret
shrb
mov
lock
mov
dec
add
dec
pop
adc
inc
mov
jo
ja
cmp
shr
addb
aaa
pop
pop
cmp
jns
dec
mov
push
mov
mov
inc
leave
aas
or
jp
sahf
test
xor
pop
fsubl
add
push
ret
bound
or
rol
movsl
jp
nop
das
adc
iret
dec
jecxz
das
push
sbbl
mov
fimuls
cmp
sub
cwtl
cwtl
mov
ret
ret
shl
pushf
jno
stc
sbb
sbbb
ljmp
jmp
fldt
lea
movsb
out
cmpsb
lock
pop
rclb
and
fs
sbb
xor
push
in
rcrl
add
ss
repnz
push
aas
jecxz
fwait
push
and
sti
cmp
aam
adc
testl
mov
mov
in
xlat
lods
loop
addr16
pop
add
adc
mov
es
cmp
imul
pop
scas
cli
insb
popf
scas
xchg
adc
mov
mov
js
pop
mov
or
cld
fidivrl
dec
sbb
mov
std
pop
push
cmpsl
jg
cmp
push
jmp
aad
fldcw
sub
std
je
pop
pop
push
ficomps
sbb
sbb
shll
inc
fnstsw
push
popf
pop
sbb
inc
imul
cmpsl
jl
je
pop
in
or
jle
mov
ficomps
dec
mov
lea
lahf
ljmp
in
jp
dec
in
inc
into
cld
sahf
jle
add
cwtl
sub
pop
fldcw
push
out
rclb
sbb
cmp
popaw
es
push
mov
sbb
lret
out
mov
ljmp
ds
pop
lods
mov
fstl
test
jnp
pop
pop
and
cmp
cld
mov
notl
sbb
fdivrl
data16
stc
stos
pop
sbb
ss
repz
cmp
adc
loop
iret
ja
icebp
push
mov
stos
mov
mov
cmp
data16
pop
push
out
add
sub
mov
push
pop
fdivl
jmp
push
fdivl
mov
push
aas
sti
shrl
aaa
jp
fdivl
fwait
mov
or
outsl
ss
jno
iret
mov
popf
and
inc
adc
testl
xor
in
sub
cmp
fwait
jae
call
in
pop
mov
push
jle
xor
add
mov
mov
push
xchg
xor
sti
test
aas
add
jmp
cmp
mov
inc
outsl
cli
popa
clc
sub
mov
or
mov
dec
rorb
shlb
add
scas
mov
pushf
mov
into
outsl
stos
xor
sbb
fstps
push
inc
xchg
push
and
inc
fabs
repz
jo
pushf
out
fstpl
mov
jbe
ficomps
pop
pop
cltd
pushf
ljmp
mov
push
bswap
mov
scas
les
movsl
mov
je
xor
addr16
bound
xor
out
and
fsubrl
mov
xchg
xor
xchg
outsl
xor
push
stos
pop
dec
out
clc
dec
sbb
adc
rol
add
mov
pop
pop
pop
inc
push
aam
sub
icebp
xchg
push
inc
and
jl
out
gs
xchg
xor
mov
clc
mov
jbe
dec
pop
jg
xchg
int
cli
fiadds
nop
cwtl
sbb
push
push
mov
sarl
push
or
jg
jae
sbb
fdivp
int3
xchg
stos
xor
mov
cmp
dec
rcl
lcall
in
add
fdiv
mov
push
cmpsl
xchg
test
int
inc
enter
mov
loop
repnz
add
popa
imul
push
mov
inc
jmp
inc
pop
stos
xor
cltd
inc
mov
imul
mov
in
pop
cmp
mov
loope
inc
jmp
in
out
popf
sub
fstpt
lea
mov
icebp
cmpsb
enter
lret
mov
rolb
lret
push
outsb
dec
lock
push
mov
test
lret
jle
and
add
loop
push
mov
inc
inc
dec
pop
ja
sar
jg
mov
repz
or
inc
fistpl
pop
call
inc
pop
pop
loope,pt
inc
mov
aas
dec
fbld
outsl
aam
push
sbb
movsb
pop
inc
xor
in
ret
sub
push
mov
icebp
cmpsb
insb
push
mov
sub
mov
ret
lret
lods
sahf
sti
add
jb
push
xor
in
jnp
push
jle
test
xchg
outsb
add
fists
xor
mov
std
out
mov
sub
lret
in
ljmp
xchg
push
pop
lea
adc
xor
add
and
cmp
mov
pop
testl
aad
stos
sbb
mov
mov
adc
sub
ret
fadd
push
and
iret
leave
js
movsl
sub
fcmovnb
jp
adc
cwtl
jae
cmpsl
ds
adc
mov
pop
jl
inc
scas
popf
jo
mov
fidivrl
sbb
adcl
lods
lock
out
jnp
pop
out
xlat
jp
das
xchg
jae
mov
movsb
test
push
leave
xor
xor
xchg
leave
jns
movsl
add
sti
xor
dec
into
fidivs
jns
lret
dec
mov
dec
cmpsb
cld
inc
xorb
decb
or
lahf
cmp
cs
int
xchg
and
js
imul
pop
test
push
iret
lahf
ljmp
inc
inc
xchg
push
scas
add
mov
or
and
inc
pop
les
jb
lret
xchg
pause
sbb
pop
div
sbbl
negl
mov
adc
and
out
inc
and
cmp
pop
movsb
fwait
shl
aam
pop
mov
dec
cmp
outsb
jmp
fld
xchg
inc
cmp
insl
test
out
xchg
fucomip
adcb
mov
es
nop
out
mov
sbb
das
jmp
aam
pushf
xor
jb
in
ret
movsb
cwtl
or
fstpt
incb
cwtl
movsb
mov
inc
add
mov
mov
shrl
add
push
mov
pusha
inc
lock
inc
movsl
jg
jnp
adc
sbb
push
dec
pop
fwait
mov
jp
test
adc
sub
pop
sbb
xor
mov
jg
inc
fcomps
sub
in
popa
jl
shlb
xchg
cmc
int3
and
std
push
sbb
or
rcr
mov
mov
mov
jg
in
pop
adc
xchg
mov
sarl
mov
js
mov
into
gs
ljmp
das
leave
test
in
xor
sahf
clc
adc
stc
cmp
popf
mov
add
dec
xsha256
cmpsb
push
pop
mov
lahf
sar
inc
rcl
mov
frstor
aas
aad
mov
mov
push
jnp
outsb
lret
mov
and
loope
out
ja
add
les
in
out
popa
rorb
adc
jb
in
neg
and
fsubrs
andb
push
movsb
pop
jo
xchg
sub
leave
mov
push
stos
and
movsl
ret
cmovbe
add
test
add
cmc
jg
pop
gs
movsl
xlat
add
pop
out
fsts
popa
add
xchg
pop
xor
testl
mov
jl
sub
sti
xchg
lods
mov
insl
cld
imul
sbb
lods
arpl
sbb
lods
subl
mov
xor
push
into
bound
aas
push
or
repnz
jl
out
mov
and
repz
inc
imul
pop
cmp
push
or
add
xor
xor
subl
in
inc
push
ja
xorl
mov
xchg
fs
cli
gs
sahf
cwtl
cmpsl
mov
outsl
jno
fs
out
outsl
dec
inc
out
test
stos
push
loopne
or
and
pop
push
sbb
daa
xchg
daa
jb
ss
jecxz
stc
lea
xor
test
ret
jae
iret
into
negl
nop
add
rcr
repz
mov
movsl
je
pmaxub
xchg
sub
or
pop
dec
ss
and
mov
mov
push
jp
lock
push
out
push
mov
adcl
jns
ffreep
inc
lea
in
out
mov
inc
loop
insl
sub
inc
xor
xchg
nop
push
pop
jae
test
ret
cld
out
fs
push
es
or
pop
vmread
sbb
or
mov
popa
mov
lock
mov
sub
fcmovnbe
pop
dec
jmp
ret
aas
dec
shl
les
into
arpl
jns
cmp
hlt
mov
imul
mov
repnz
or
aas
bound
es
xlat
push
xorl
xor
cmp
sbb
push
jo
mov
les
or
idivb
pop
pop
in
cmpsb
xchg
test
push
clc
out
movsl
xchg
enter
xlat
cmc
fnstcw
push
pop
aas
rcrl
fsubr
xchg
sub
scas
adc
or
inc
dec
push
add
or
jo
mov
fdivl
lock
mov
cld
push
push
add
inc
mov
or
jnp
outsl
js
insb
cld
add
push
dec
and
pop
add
mov
adc
xlat
cmpsb
cmp
jo
les
xchg
ret
cmp
shrl
fsubrs
or
mov
push
into
inc
or
jbe
jno
scas
push
xlat
shr
add
lea
ljmp
fldt
sub
cs
popa
sub
adc
pop
jmp
xor
outsl
nop
jnp
lods
mov
pop
mov
or
popf
daa
mov
ss
push
inc
loope
or
test
sub
cli
adc
cmp
xlat
mov
jno
decl
xchg
push
mov
jnp
cwtl
shll
sub
rcll
or
movsb
xchg
sub
jl
je
xor
addb
and
int3
and
mov
inc
push
stos
ds
gs
and
cmp
adc
xchg
and
pop
and
jae
lods
fs
imul
pop
lds
les
test
sbb
sbb
ja
and
jmp
push
mov
sbb
adc
xor
mov
addr16
push
xchg
pop
mov
aaa
pop
push
jl
ljmp
in
mov
js
mov
in
pop
fnsaves
jg
or
sbb
mov
cltd
repnz
out
and
hlt
loopne
fildl
add
cmpb
add
rcll
gs
cmp
inc
mov
dec
sub
dec
or
scas
pop
cmp
in
insb
mov
jmp
int
fdivs
xchg
dec
mov
jl
popa
sbb
adc
sbbb
cmp
fldenv
pop
cmpsl
idivb
int
push
mov
inc
mov
xor
fsubrl
data16
dec
cmpsl
jg,pt
stos
in
dec
ljmp
enter
dec
loope
pop
imul
dec
insb
push
shr
or
hlt
sub
nop
lidtl
dec
mov
xor
pop
ficompl
int
cltd
push
hlt
aaa
mov
int
nop
fdiv
shr
dec
fistps
std
aam
leave
cmp
add
mov
loopne
push
std
test
arpl
movsb
push
xchg
push
rol
data16
sbb
mov
push
add
mov
and
and
aas
test
adc
adc
mov
sub
hlt
pop
cmp
adc
cmp
push
mov
rcrl
adc
xchg
pop
inc
lcall
fwait
sbb
adc
push
pushf
aas
mov
fisubrl
jbe
mov
jnp
mov
hlt
iret
arpl
sarl
outsl
mov
dec
movsl
int
bnd
vmread
adc
pop
push
add
stos
cltd
sub
aam
lock
cmc
dec
lahf
jg
into
ret
std
xchg
cmc
out
cmc
adc
es
cli
adc
xchg
dec
dec
jg
inc
loop
test
push
cs
lea
dec
mov
mov
call
pushf
sub
movsb
fsubs
sahf
push
dec
ret
xchg
je
lret
push
xor
dec
loop
xchg
adc
dec
pop
ret
jl
inc
dec
mov
cwtl
inc
pop
jb
aad
pushf
jae
test
jns
out
sbb
rorl
mov
fcoml
mov
push
mov
add
int3
scas
xor
aas
arpl
push
lods
ja
incl
inc
iret
mov
int
mov
call
mov
mov
leave
pusha
stc
xor
scas
xchg
out
popf
sbb
enter
jge
mov
icebp
insl
mov
xchg
sub
inc
fwait
shlb
push
insb
cli
push
mov
cld
repz
and
jl
repz
mov
mov
std
push
cmc
in
adc
sbb
mov
dec
roll
inc
repz
push
xor
dec
mov
xchg
sbb
push
call
add
xchg
ljmp
sbb
add
push
inc
cld
das
aaa
jmp
imul
lds
xor
or
cmp
cmp
movsl
inc
cmpsb
iret
fs
lods
fldl
or
fdivrl
pop
and
fildl
mov
ret
cmpsl
xor
into
int
outsl
sbb
push
dec
push
jne
lea
dec
mov
mov
mov
xchg
mulb
ret
pusha
cmp
fwait
es
out
xor
dec
pop
xlat
mov
repnz
stc
xchg
imul
test
es
adc
addr16
sbb
push
dec
xchg
pop
repz
lcall
add
xchg
inc
fstl
das
jecxz
sbb
sahf
mov
add
pop
into
gs
icebp
arpl
int
in
push
dec
stos
adc
jne
shl
xchg
xchg
out
inc
mov
jge
lock
xor
push
xchg
pop
mov
fs
es
adc
inc
adc
ja
sub
stos
fidivl
int3
push
test
mov
sbb
jmp
fistl
cli
push
sub
pop
sub
jg
cmp
mov
imul
mov
out
lock
cmp
hlt
call
int3
daa
ss
das
jno
popa
addr16
xor
mov
add
dec
loop
js
and
push
ja
enter
mov
call
add
pusha
loop
mov
sti
sub
lcall
mov
cmp
sbb
pusha
lea
negb
inc
leave
jne
sti
loopnew
int
push
mov
imul
xchg
dec
cmp
aaa
mov
mov
fs
adc
lds
insl
fistps
mov
loope
rorl
test
leave
insb
fcompl
jno
mov
movsl
mov
andb
fisubrs
dec
jp
pusha
into
mov
mov
xor
cmp
cld
int3
adc
fs
das
xor
test
jp
push
mov
sarl
popf
fnstenv
icebp
test
jl
inc
xlat
push
pand
xchg
jbe
in
fimull
or
pop
aaa
or
ds
int
arpl
fwait
jo
xor
mov
and
inc
mov
testl
sbbl
pop
jle
repz
mov
int3
cmpsb
jb
xchg
insb
pop
loop
out
sti
fwait
bound
dec
fildll
imul
pop
lds
or
aam
test
int3
data16
rcrb
std
pop
add
sarl
dec
addr16
xor
mov
xchg
pushf
cld
or
xorb
and
iret
dec
cmp
fimuls
inc
fisubrs
fdivl
dec
das
and
fisubrs
stc
enter
jle
dec
in
lcall
idivb
sub
dec
ds
jo
decl
pop
fstl
scas
roll
sbb
nop
mov
ret
mov
or
mov
mov
xchg
outsb
cmpb
xchg
xchg
leave
fstps
push
fnsave
pop
lock
add
in
test
xor
notl
push
loop
fldt
dec
nop
in
sub
loop
cmp
loopne
sbb
jns
pop
xchg
stos
repnz
pushl
pop
dec
int3
bound
loope
fwait
fs
xchg
lret
xchg
mov
fucomi
out
test
pop
push
or
ds
and
decb
and
sbb
les
jle
ja
sti
mov
jmp
insb
out
inc
fucomp
flds
test
add
sub
stos
or
or
inc
mov
add
insl
sbb
cmp
scas
std
rcl
cmp
add
jbe
and
jbe
pop
arpl
adc
sbbl
scas
psrld
hlt
cmp
repnz
ja
and
xor
mov
dec
das
movsl
fsubrl
sbb
std
lret
add
xor
or
pop
adc
and
jb
inc
movsb
jecxz
test
int3
cmp
mov
or
stos
dec
scas
sub
cmc
adc
sbb
test
mov
mov
repz
jge
cmp
fisubl
imul
pop
cmp
pop
jmp
arpl
push
scas
js
nop
daa
lret
inc
xlat
cld
dec
pop
scas
in
subb
mov
push
mov
xchg
rcrb
or
and
sahf
xor
mov
cmp
or
sub
xor
inc
in
xor
inc
lds
cld
lret
and
inc
dec
pop
inc
sbbl
loopne
cmp
lret
test
pop
lea
aaa
test
shll
mov
fcompl
scas
mov
cwtl
icebp
outsb
add
lock
out
jo
xlat
loop
sti
push
cmp
cmc
ss
mov
imul
shrl
push
adc
push
push
add
inc
aas
sbb
inc
push
mov
mov
mov
mov
sahf
sub
dec
aas
pop
lret
mov
mov
pop
rorb
mov
cmp
stos
push
mov
into
pusha
inc
xlat
int
out
push
adcb
or
xor
cli
pushf
cs
sbb
shlb
jecxz
lods
adc
enter
lods
pop
push
in
int
adc
mov
outsb
js
data16
hlt
shrl
or
cmpsb
xchg
pushf
xor
pushl
xor
mov
mov
xchg
je
pop
jo
push
mov
lock
xchg
daa
push
fcmovnbe
clc
add
sbb
inc
int3
xlat
stc
xchg
adc
fistps
rol
dec
jg
xchg
roll
lock
lret
mov
and
cmp
js
fildl
pop
cltd
cmpsb
lret
sbb
sub
xor
loopne
in
lcall
popf
or
jle
sbbb
lds
xor
mov
pop
repz
dec
mov
fcmove
sbb
daa
mov
xor
jle
out
cmp
xrelease
and
jmp
mov
in
sbb
scas
leave
test
notl
xchg
sub
rol
pop
add
imul
and
xor
pusha
sbb
shll
dec
and
lret
int3
mov
enter
jl
cmp
fbstp
inc
adc
int3
mov
fsubrl
fsubl
cmp
stc
ds
sub
jecxz
push
dec
clc
push
push
and
out
adc
les
popf
mov
cmpsb
sbbb
mov
or
fsubl
imul
adc
and
xchg
dec
mov
outsl
add
and
mov
push
adc
xchg
cmpsl
mov
lcall
cld
fstpl
xchg
xorb
int3
push
mov
rcrb
into
pop
lods
push
inc
jb
mov
nop
stos
sahf
pop
shlb
pop
cmc
mov
push
jl
fldcw
cli
cmpl
sub
fcmovb
pusha
or
sbbb
shrl
mov
xchg
aad
hlt
jae
clc
sub
movsl
not
mov
mov
xchg
mov
cmp
sbb
push
scas
pop
mov
scas
mov
cmp
add
es
and
subb
push
xchg
testl
add
addr16
jle
cmp
retw
xchg
in
pop
mov
lods
pop
mov
scas
jp
jo
xchg
stos
and
sub
stos
lock
sub
outsl
jecxz
pop
subb
mov
lahf
jno
and
mov
sti
xchg
addb
inc
scas
and
sub
ret
repz
stos
cmp
mulb
pop
imul
nop
shrb
dec
popa
loope
pop
adc
filds
imul
lea
addr16
in
mov
pop
imul
cltd
sti
mov
fwait
stos
cmp
cld
aaa
scas
xor
sub
shrb
push
daa
testl
pop
hlt
push
and
add
in
enter
xchg
jl
sub
xchg
add
lahf
push
cld
mov
sub
cmp
pop
out
add
icebp
inc
xor
aad
push
sub
sbb
push
ret
mov
xchg
xor
xchg
mov
aad
xlat
inc
fwait
sbb
mov
loope
xor
dec
xor
sbb
and
ss
scas
dec
add
jle
jo
nop
out
xchg
cmpsb
jnp
mov
pop
adc
or
hlt
xor
sbb
xor
icebp
popf
ljmp
shrb
xchg
lods
push
imul
cmp
xchg
add
and
pop
or
or
mov
in
pop
into
jns
jbe
insb
sbb
push
arpl
fcomps
mov
pop
clc
mov
mov
dec
add
inc
in
mov
jb
inc
jecxz
push
pop
add
inc
push
jns
jns
into
lcall
push
out
mov
push
mov
dec
fcom
or
fidivrl
pop
je
pop
sub
cli
pop
outsl
jne
ljmp
xchg
scas
push
adc
cmpsb
cmp
inc
test
out
icebp
sub
dec
fistpl
sbb
popf
add
ficoms
cli
lret
pop
inc
cmp
es
cmp
add
mov
mov
push
iret
testb
sbb
push
pop
xchg
xchg
nop
test
mov
and
dec
adc
xchg
sbb
dec
in
push
push
out
imull
xor
pop
or
jle
js
pop
sub
bound
jnp
inc
pushf
arpl
iret
scas
enter
or
stos
cmp
push
fnstenv
incb
and
mov
mov
xchg
shrb
inc
les
aas
into
out
jmp
lret
or
jecxz,pt
insb
gs
adc
insb
scas
shlb
sub
sbb
divl
mov
mov
pop
add
jg
sub
fwait
pop
xor
mov
or
insl
and
sbb
adc
sti
mov
ljmp
jnp
and
sbbb
sub
mov
pop
pop
scas
push
jns
adc
orl
lcall
div
xchg
cmpsl
dec
in
gs
pop
pop
sarl
les
push
call
repnz
movsl
cmp
jnp
xchg
push
mov
sbb
movsb
sbb
sub
hlt
mov
ficompl
lret
push
cld
xchg
divb
imul
rcr
out
sbb
sbb
fwait
adc
in
sub
inc
cmpsl
mov
lock
jns
dec
cs
test
les
addr16
add
lret
lock
mov
jge
outsb
mov
xchg
mov
repnz
xor
cwtl
aad
push
aaa
mov
add
mov
cmp
clc
ja
inc
mov
add
push
das
xor
cmp
pop
imul
sub
repnz
repnz
push
sbb
mov
pop
fldl2t
jbe
outsb
aad
fwait
inc
push
dec
insl
mov
fistpll
cltd
arpl
lock
lods
aad
cmp
adc
movsb
nop
and
cvtps2pd
fldt
inc
pusha
jmp
sbb
cmp
inc
cmp
test
cmc
xor
adc
stc
inc
xchg
or
lcall
arpl
push
aad
fbld
adc
lods
adc
jg
scas
daa
outsb
jl
les
enter
cwtl
insb
sbb
jl
or
aas
jns,pn
push
dec
push
into
or
inc
push
xor
pop
cltd
sbb
add
jle
pop
mov
fisubrs
inc
inc
mov
jge
imul
int
push
pop
sub
push
sbb
push
outsb
cmp
jmp
negb
mov
push
ret
pop
test
xor
xchg
repnz
loop
lock
or
pushf
sub
xchg
sub
das
test
fcomip
mov
fcoml
cmp
bnd
fisubs
adc
icebp
inc
inc
test
pop
jae
leave
movsb
push
fs
add
push
mov
jmp
xor
or
sarb
pop
mov
in
sub
push
cmpsb
les
icebp
imul
mov
rcll
mov
jp
fwait
xor
jno
je
testb
cmpsl
dec
loop
es
inc
stos
imul
mov
js
xor
sbb
sub
mov
mov
sub
push
arpl
aam
dec
insb
cmp
cmp
cld
adc
jle
sbb
daa
inc
sbb
cmp
cli
or
jno
es
out
mov
sub
cmp
pop
daa
stos
ja
inc
std
rorb
insb
mov
ficomps
inc
jge
outsl
repz
lcall
pop
lahf
sbb
iret
mov
or
jne
xchg
ds
xchg
rcll
fidivrs
add
xor
mov
addb
or
sbb
mov
mov
ja
lock
cmp
push
inc
outsb
inc
fstpl
into
fs
mov
xchg
add
cmp
jns
mov
popa
lcall
mov
cmpsb
inc
lods
adc
test
fs
stc
pop
scas
inc
jnp
xchg
mov
mov
jnp
sbb
and
xor
ret
ja
hlt
popa
ljmp
and
sub
imul
adc
shll
sub
imul
and
xchg
fidivl
push
gs
adc
clc
pop
sbb
mov
ret
mov
aam
repz
popf
arpl
out
sbb
mov
aam
test
sahf
or
and
adc
push
jns
mov
lret
lret
loopne
sub
lea
sbb
sub
ja
pop
mov
push
jae
test
in
jnp
xor
dec
cmp
fnstenv
pop
movsb
pop
popa
hlt
pop
frstor
psllw
dec
inc
lahf
sbb
mov
ds
scas
sub
sbbb
icebp
pop
clc
sub
data16
in
addb
clc
adc
sarb
fwait
pop
push
sbb
cmpsb
rorb
inc
stos
cmc
pop
icebp
sub
add
dec
cmpsl
int
fsubrs
dec
jl,pn
sbb
dec
rcrl
sbb
daa
xchg
mov
sahf
stos
clc
push
lea
xchg
scas
inc
mov
in
pop
cmpsb
push
inc
lods
addr16
jmp
ss
lods
inc
dec
dec
mov
dec
ljmp
cs
dec
loope
pop
mov
adc
inc
jg
add
inc
mov
nopl
mov
test
fbld
orl
aam
mov
ljmp
and
int
xchg
fwait
into
dec
pop
aam
mov
inc
cmc
in
fldz
mov
adc
clc
jecxz
je
in
mov
repnz
je
mov
stos
ja
jl
jne
push
jne
and
stos
ret
jnp
jne
repnz
sbbb
ljmp
scas
ds
xchg
inc
repz
xor
dec
in
pop
scas
adc
shl
mov
stc
in
movsb
mov
sahf
dec
mov
mov
sbb
push
adc
mov
mov
call
add
mov
push
pop
test
imul
push
push
cmp
sub
in
adcb
adc
stos
int3
mov
mov
xor
cs
push
popa
test
or
dec
mov
mov
imul
in
pop
inc
rcrl
aam
dec
cmp
push
jne
pop
mov
jne
jae
ss
xor
repnz
sub
ret
stos
clc
ds
clc
pop
nop
insb
lret
mov
outsl
jle
dec
jecxz
jge
mov
mov
cwtl
shrl
sti
popa
add
arpl
sbb
mov
xor
fidivs
cmp
out
cmp
data16
xchg
xchg
dec
incl
movsb
jb
push
in
push
inc
outsl
or
fnstcw
add
les
loopne
popf
bound
mov
dec
shll
mov
mov
xchg
or
mov
jmp
mov
dec
ret
cmp
cmpsl
rcll
es
mov
fnsave
cmp
push
mov
fistl
imul
pop
out
es
and
dec
push
adc
fisttpll
adc
or
xchg
lahf
mov
xor
jge
push
mov
call
cmp
mov
lcall
xchg
and
pop
xor
fnstcw
aas
loope
outsb
jno
jge
push
scas
sbb
adc
repz
pushf
data16
scas
int
fcomip
mov
daa
inc
js
pop
dec
lret
bound
sbbb
shll
jno
popf
rcll
shr
mov
jbe
test
jecxz
pushf
inc
mov
jb
out
scas
lret
xchg
aas
stc
nop
jno
push
inc
jnp
mov
pop
or
ret
push
adc
fs
xor
lret
inc
in
mov
inc
lds
divl
mov
inc
cmpb
out
push
or
cmp
rclb
dec
aaa
inc
push
jbe
mov
insl
xor
lods
testl
sub
aad
xor
fidivrs
es
repnz
jmp
lret
mov
je
fwait
xor
sbb
xchg
or
cmc
js
mov
xchg
pop
rcl
mov
ja
pop
push
pusha
testl
cmc
arpl
mov
arpl
pop
mov
subb
popa
or
stc
jl
inc
fisttps
popw
or
insb
les
faddp
ret
jmp
sti
fsubp
push
mov
leave
lret
rorl
inc
in
loope
aam
pop
insb
aas
mov
cmp
ret
xchg
cmp
jl
mov
pop
add
push
cmp
mov
pop
call
mov
dec
dec
test
xor
cmpsl
xchg
rorb
mov
xchg
lods
lds
shll
and
xor
sti
jle
pushf
mov
fstps
jecxz
ljmp
xor
out
lret
divl
les
sbb
push
jp
out
jno
xchg
dec
popa
enter
jnp
cs
mov
inc
cmpsb
or
movsb
jge
xchg
bound
pop
imul
in
add
dec
lret
sub
loope
jge
or
cwtl
adc
xchg
inc
mov
and
adc
ret
push
xor
icebp
xchg
pop
cld
stos
add
pop
fsubs
inc
insb
mov
orb
xchg
sub
rcrl
inc
and
push
stos
lahf
in
nop
test
mov
ror
fstpl
cli
or
shl
push
mov
outsl
into
ds
std
divb
mov
nop
cmp
movsl
insl
mulb
jbe
xchg
mov
es
add
popa
mov
mov
jge
adc
mov
std
jp
push
and
fnstcw
pushf
xor
jg
pop
jbe
mov
into
lret
adc
add
divl
sub
test
or
inc
loope
popa
mov
add
jmp
and
mov
mov
fstl
jle
jns
shl
jl
add
pop
in
dec
in
int
cltd
jns
sub
andb
imull
sub
jle
push
pop
adc
fbld
xchg
or
int3
pop
mov
xor
pop
popa
mov
cmp
mov
add
test
jmp
or
std
mov
ror
pop
lcall
cmpsl
arpl
lea
xchg
mov
mov
cmp
mov
xchg
sub
mov
jge
and
and
or
ret
das
int
jp
ds
adc
push
sub
lret
je
fchs
inc
test
fucompp
pusha
jo
lods
sub
je
cld
dec
shl
mov
inc
fcom
cwtl
sbb
leave
loop
outsb
es
aas
push
iret
cmc
fisttpl
repnz
inc
push
mov
push
jg
cmp
sbbl
and
addr16
lcall
ret
aad
cwtl
mov
aam
and
lods
xchg
mov
insb
test
lods
pop
lds
add
lea
xlat
test
ret
and
ljmp
les
and
xor
notl
cmpsb
lds
cmp
test
xor
lods
mov
pop
jecxz
sub
and
inc
inc
lock
ss
into
aas
xor
sti
jae
popf
xchg
dec
mov
and
cld
pop
pushl
mov
push
into
xor
mov
lahf
aas
adc
repz
and
shr
sbb
hlt
jp
flds
nop
popf
pop
mov
adc
push
aad
add
cmp
movsl
lret
je
jl
xor
push
outsl
and
adc
and
popf
pop
stos
ds
add
pop
loope
hlt
inc
shll
rol
mov
or
dec
mov
adc
add
pop
inc
fmuls
std
fisubl
stos
lds
ljmp
jb
jno
int
cmpsb
pop
push
sbbl
dec
loop
cmp
loop
ss
push
pop
mov
pop
cld
daa
shll
loop
cmpsb
mov
mov
sub
sbb
aaa
aad
and
xchg
push
add
cmpsb
in
dec
insb
clc
push
cs
jge
jne
mov
out
inc
je
stc
or
dec
xor
pop
mov
js
mov
jnp
aam
jle
adc
repz
xor
push
pop
inc
fnstcw
das
lds
pusha
dec
add
test
mov
push
push
notb
lret
movsb
rcll
fs
sbb
push
loop
sub
fidivrs
shr
int3
ljmp
push
adc
je
outsl
cmp
and
or
in
push
mov
add
mov
push
pop
imul
cmp
jl
int3
or
data16
mov
movsl
lock
addr16
jecxz
inc
sbb
pop
in
aas
xor
jo
daa
inc
adc
xor
add
push
orl
ds
sbb
inc
insb
out
ljmp
adcl
or
adc
nop
int3
pop
or
pop
out
cmp
sbb
int3
adcl
in
add
xchg
iret
mov
loop
fdivrs
add
xchg
mov
push
mov
dec
mov
scas
sub
inc
push
rorb
jo
lods
insl
lahf
and
aaa
stos
dec
push
sub
cmp
ds
les
inc
fdivrs
dec
or
or
pop
or
jb
mov
xlat
shll
out
push
jmp
or
incb
out
out
inc
jns
daa
stos
fs
into
punpckhbw
sbb
pop
xchg
lcall
push
inc
fs
daa
sbb
or
xor
sbb
insb
xchg
mov
jbe
scas
xchg
dec
ret
jecxz
stc
dec
mov
leave
pop
jb
fildl
scas
jecxz
inc
xchg
mov
out
jge
sahf
jle
mov
push
pushf
and
and
xchg
outsb
xor
sub
cwtl
jne
aaa
mov
aad
inc
pop
ror
adc
jp
cmp
repz
mov
dec
mov
jnp
sti
test
push
insb
push
daa
cld
or
adc
xchg
in
fwait
add
xchg
gs
add
inc
in
pop
inc
data16
and
cmp
add
pop
push
lods
aas
lods
mov
inc
fisubrl
outsb
push
pop
insb
test
outsb
outsl
inc
arpl
dec
insb
xchg
stc
jmp
xchg
sbb
sbb
cmp
dec
mov
lcall
fldt
int3
mov
dec
rorb
mov
mov
dec
mov
jp
or
mov
cmp
xchg
push
inc
mov
bound
icebp
movsb
movsb
or
jnp
into
dec
pop
add
hlt
or
mov
sub
cmp
push
lods
inc
dec
outsl
jnp
pop
lods
jg
mov
or
lret
cmpsl
mov
out
adc
fs
fisubl
out
clc
pop
mulb
mov
and
out
xchg
insb
xchg
mov
push
mov
jae
ret
xchg
jmp
stos
mov
dec
shrb
iret
fsubrs
or
stc
pusha
insl
pop
jg
addl
jae
push
sub
mov
sbb
mov
ret
mov
popa
outsb
inc
jmp
js
xchg
adc
xor
ficoms
jo
cltd
jle
mov
in
add
mov
pop
aaa
pop
add
loopne
mov
lds
or
outsb
pop
dec
in
test
dec
cltd
jg
mov
xor
cmpsb
in
ds
mov
mov
movsl
sar
cwtd
imul
mov
aad
ljmp
nop
xchg
mov
shr
stc
lret
sbb
arpl
mov
sahf
mov
mov
ljmp
int3
mov
repz
and
mov
push
fsubrs
or
int
in
ja
add
andl
add
nop
fsubrl
das
in
mov
mov
jl
int3
cmp
loope
pop
adc
fiaddl
pushf
lds
cmc
xchg
sub
jge
pusha
push
pop
call
sub
push
leave
adc
sub
dec
in
mov
aad
jle
sub
xor
xchg
clc
or
add
outsl
pop
push
and
sbb
push
out
cwtl
adc
in
js
aam
arpl
ret
or
inc
out
dec
sub
aaa
fnstcw
xchg
enter
mov
cmp
mov
sub
and
xor
inc
and
mov
popa
test
imul
lock
test
js
push
call
adc
ja
push
pop
cwtl
lahf
dec
push
gs
mov
lods
adc
mov
cmpsl
pop
loop
xor
imul
add
out
mov
push
insl
adc
out
pop
fiadds
cltd
dec
pop
adc
push
stc
pop
pop
mov
cmp
in
xchg
cmp
jecxz
rcrl
xor
dec
sbb
mov
stc
insl
popf
mov
dec
mov
hlt
xchg
adc
mov
ss
lods
jcxz
popa
inc
push
stos
jp
leave
cmp
stc
nop
mov
sub
inc
pop
out
pusha
adc
xchg
sarl
jno
lahf
sub
enter
lahf
test
lret
mov
int3
decl
pop
mov
int
jl
pop
sahf
out
iret
push
inc
jg
shll
push
leave
mov
cmp
add
xor
xchg
data16
test
shlb
pop
fwait
ret
stc
or
or
cs
cs
movsl
scas
sub
test
pop
push
andb
mov
fs
cmpsl
outsl
pop
jo
int3
enter
cli
loope
mov
add
sub
jp
sbb
sub
xorb
push
xchg
push
and
cmp
jecxz
xchg
mov
mov
push
ss
jmp
repz
int
jmp
xor
lods
leave
mov
add
fisubl
mov
popf
mov
lahf
mov
mov
jo
ret
sbbb
fsubs
fiaddl
insl
mov
add
inc
andl
iret
sti
cmpsl
dec
jb
sub
mov
out
push
cwtl
das
aad
lret
cwtl
xor
cld
xorl
push
movsl
mov
test
shl
dec
xor
cmc
add
push
mov
leave
mov
adc
mov
cmc
fldt
in
cli
xor
inc
push
or
in
movsl
lods
pop
push
xor
ror
mov
ss
movsb
scas
adc
jne
xlat
dec
sti
dec
mov
sub
dec
fldenv
cmp
fsubs
ss
lock
mov
ja
in
sbb
inc
rorl
xchg
lahf
lds
adc
dec
cmp
mov
scas
popf
mov
add
push
in
scas
mov
sbb
rolb
mov
loop
sbb
imul
cmpsl
mov
and
mov
lret
lds
fldenv
dec
push
and
add
adc
xor
test
mov
std
jae
sub
scas
jbe
outsb
out
mov
nop
nop
xor
sbb
ja
mov
cmpxchg
fstps
pop
fcomps
lea
push
sub
mov
imul
inc
in
fsubrl
jns
inc
adc
pop
shlb
push
out
pop
jg
cli
scas
rcrb
fisubs
les
test
shll
xchg
loop
and
dec
std
ret
xchg
sub
push
shr
test
sbb
sub
test
mov
sub
inc
pop
test
ret
mov
inc
adc
scas
xchg
call
call
push
lret
stos
mov
neg
outsl
inc
outsb
int
push
cmpsb
jmp
cwtl
ja
mov
pop
mov
std
push
insl
cmp
push
or
jp
push
pop
inc
xchg
cmp
es
outsl
cmc
pop
and
jne
out
js
push
mov
mov
inc
gs
xchg
daa
outsl
mov
into
mov
ja
mov
sarl
push
pop
adc
bound
adc
cmp
cmpsl
dec
jle
cs
push
or
mov
shlb
jle
ljmp
divb
enter
cmp
dec
cmp
jne
popa
ss
adc
mov
subb
sbb
vpsubusb
call
mov
sbb
add
sub
shrb
cmp
xor
push
fcmove
xchg
xchg
out
mov
popf
call
mov
inc
cbtw
pop
dec
dec
add
adc
negb
lcall
adc
stos
add
fisubrs
mov
insb
stos
sbb
mov
inc
jns,pn
xchg
sti
xchg
sub
jbe
out
inc
inc
fiaddl
fs
jge
add
ja
push
and
or
mov
jp
vpcomq
jmp
push
insb
lahf
into
dec
cmpsl
rcrl
mov
fldcw
jnp
pop
cli
jmp
cmp
stos
cmp
ss
sub
popf
shrl
or
nop
pop
sbb
pop
sub
pop
shrb
inc
mov
mov
ficompl
push
addb
push
pop
pop
ja
call
inc
addr16
cld
or
jno
fwait
mov
stos
and
in
jecxz
ds
mov
js
inc
pushf
leave
adc
jo
stos
add
jg
push
adc
ficomps
add
mov
push
or
test
outsb
dec
cmp
test
lods
pop
jae
mov
push
test
cmp
mov
bound
mov
push
shl
test
jo
jno
aad
adcl
imul
jns
js
in
mov
arpl
adc
addl
or
mov
daa
inc
dec
rcll
movsb
test
mov
jbe
mov
std
xor
iret
push
mov
xlat
arpl
adc
mov
jno
ret
sub
test
cmp
mov
sbb
jmp
sub
jle
xor
les
sbb
mov
add
sahf
mov
adc
cltd
out
jmp
out
sbb
jnp
mov
repnz
in
test
popf
pop
imul
in
inc
pop
push
sbb
ret
jae
xor
std
jns
movd
ss
push
movsb
or
data16
mov
xchg
xchg
pop
mov
sbb
push
loope
mov
shl
aad
stos
prefetch
or
xor
xlat
out
cmp
jb
mov
mov
mov
mov
inc
mov
add
adc
inc
inc
insb
jne
gs
sbb
stc
outsl
sub
pusha
push
push
incb
jae
add
adc
xchg
or
test
jnp
inc
mulb
jmp
ja
jge
ss
aas
lret
jns
pop
jg
rolb
adc
sub
outsl
adc
inc
cltd
add
loope
xchg
and
jp
sub
leave
push
pop
jnp
xor
jmp
and
shrl
js
xor
cmpsb
cltd
movsb
repnz
dec
pop
in
xchg
sub
adc
dec
pushf
cwtl
lahf
ss
loope
inc
out
mov
cmpsb
xor
sub
or
pop
in
jne
sar
add
mov
xor
subl
xor
cmc
in
loope
dec
lahf
imul
je
xor
mov
movsb
add
test
mov
ss
pop
mov
jo
cmp
jge
lock
adc
xor
mov
lret
xlat
mov
mov
push
dec
enter
sbb
sub
push
mov
add
insb
cmp
in
popa
pop
repz
sub
sbb
repz
push
jmp
mov
fucomip
test
mov
cmp
les
enter
push
movsl
or
nop
pop
cmp
inc
ds
jge
mov
add
mov
jb
xor
inc
sbb
mov
mov
inc
pop
sahf
xchg
mov
push
pop
push
or
or
xor
movsl
cmp
lock
push
or
imul
scas
out
dec
xchg
adc
mov
sbb
mov
sbb
jnp
js
jecxz
sub
add
jbe
out
and
clc
pop
loope
jle
lret
inc
inc
jne
lret
push
test
popa
push
mov
les
jb
mov
jecxz
mov
jg
mov
test
mov
or
dec
pop
loope
xchg
sbb
ljmp
xchg
out
arpl
lahf
cmp
lret
shll
out
mov
in
jbe
dec
push
jae
and
jmp
xchg
loop,pn
fwait
inc
pop
hlt
js
mov
into
jns
fdivs
push
and
subl
loop
incl
aaa
es
xchg
inc
jne
mov
mov
mov
scas
mov
push
pop
ror
cmp
stc
call
pop
sub
rcrb
sbb
adc
inc
je
mov
movsb
cmpl
jo
scas
sub
fnstenv
pop
cltd
es
and
xor
or
push
cmp
divb
add
xor
filds
repnz
int3
outsl
cs
adc
and
push
mov
xor
stos
fildl
mov
jbe
push
mov
or
lods
fcoml
mov
add
popa
dec
repnz
push
loopne
das
jns
or
repz
in
cmp
sub
mov
cmpsl
sti
hlt
cmp
dec
mov
enter
mov
rorl
outsb
lods
sub
cmp
jbe
int3
movsl
lock
outsb
dec
mov
ds
fucom
pop
mov
das
mov
scas
xchg
stos
shrb
movsb
xchg
cli
fwait
push
inc
jno
aam
fdivl
lret
leave
cld
out
push
imul
ljmp
iret
stc
nop
icebp
repz
daa
mov
inc
fdivrl
out
xor
push
push
cmc
adc
cltd
dec
out
cmc
shl
push
outsb
inc
dec
pop
fnstenv
dec
movsb
cli
loop
sub
jle
jae
add
int3
shll
lret
bnd
lods
enter
add
sub
movsl
test
icebp
adc
lret
out
lgs
fwait
push
inc
add
jge
xchg
push
pop
adc
fwait
inc
imul
mov
xchg
and
fstps
xchg
jbe
in
mov
dec
xor
push
in
mov
mov
scas
data16
ret
loope
xchg
das
cmpsl
dec
push
icebp
pop
sbbw
push
out
cmp
mov
imul
adc
push
sub
xor
mov
popa
dec
inc
inc
dec
inc
dec
dec
in
fcompl
pop
push
test
dec
fidivrl
rol
nop
push
arpl
cld
xor
pop
xchg
outsb
imul
push
fcoms
jbe
mov
push
mov
push
cltd
sbb
mov
scas
xchg
sub
xchg
pop
inc
push
xorb
xor
push
pusha
push
jg
lret
jb
pop
hlt
or
dec
xchg
sub
mov
and
cli
daa
jg
adc
pop
pop
mov
aam
dec
icebp
sbb
sub
pop
in
pop
int
add
aam
enter
fs
int3
popf
andl
push
and
jae
pop
and
push
insb
xchg
out
sarl
inc
popa
pop
mov
ret
push
or
lahf
es
and
dec
es
lods
jae
mov
ret
cmp
sub
popa
jmp
dec
loope
repnz
mov
sbb
sbb
out
sbb
dec
movsl
inc
inc
or
or
sahf
mov
jmp
pop
dec
into
gs
ret
mov
mov
test
dec
xor
shlb
outsb
mov
push
inc
daa
out
sub
sub
out
mov
inc
sbb
pop
lahf
sbb
int
inc
loope
adcb
daa
sub
and
or
sbb
jne
icebp
in
lret
bound
mov
call
or
ret
xor
ljmp
mov
lahf
js
rcr
sub
or
xchg
sub
shll
fildll
dec
mov
mov
int3
fs
into
add
pop
testb
cltd
enter
int3
in
and
mov
and
dec
mov
pop
cmp
int
loope
sbb
int3
dec
inc
rcrb
int3
dec
pushf
popa
sub
xchg
cs
push
out
push
sbb
dec
cmp
dec
mov
loopne
xor
lods
les
dec
in
sahf
dec
jo
xchg
clc
fldt
sbb
or
jecxz
dec
add
push
pop
out
aad
cmp
int
or
dec
cmp
add
mov
lcall
hlt
xchg
and
sti
sbb
subl
cmp
and
fisttpll
mov
shlb
repnz
sbbl
add
test
pushf
popa
mov
aad
rcl
out
xchg
add
ret
sub
nop
sub
push
movsb
mov
and
or
adc
mov
dec
jecxz
xlat
arpl
xchg
and
sahf
ss
fwait
push
push
and
or
mov
and
rorl
xlat
incl
and
push
and
or
pushf
popa
adc
hlt
cmp
xlat
mov
stos
push
mov
fidivs
pop
pop
scas
cmp
arpl
or
cli
mov
xchg
sub
outsb
aam
push
imul
daa
ds
std
push
mulb
push
jmp
sarb
pop
test
fiadds
call
pop
cmpsb
sahf
adc
pop
out
pop
push
and
and
add
lcall
int
dec
out
data16
mov
mov
push
cmp
rcrl
adcb
inc
mov
sti
movsl
add
dec
fld
push
xchg
shrl
cmpsl
cmpsl
mov
jb
popa
loope
jo
cmpl
icebp
rolb
roll
mov
sbb
adc
inc
imulb
sub
int
addr16
sarl
std
fs
xchg
pusha
add
sbb
xchg
sub
push
jnp
stos
xor
fsubr
loop
add
mov
push
in
xor
imul
popf
lods
or
pop
fstps
ljmp
cmpl
in
sbb
jmp
andb
jnp
push
lahf
das
fisubrl
ret
bound
mov
call
lds
bound
dec
dec
aaa
xor
xlat
jmp
repnz
mov
jne
adc
test
or
test
data16
adc
sub
fimull
inc
dec
sub
scas
jns
inc
fmull
mov
xlat
mov
cmpsl
pop
xor
test
nop
mov
enter
or
inc
sbb
addr16
mov
test
and
xor
xor
mov
cwtl
jle
mov
cmpsb
ss
xor
jbe
pushf
mov
or
sub
sub
hlt
sub
push
inc
inc
insl
push
xchg
test
jno
out
int
je
xor
lods
sub
loop
dec
sub
cmp
lods
es
xor
mov
outsb
add
inc
dec
mov
jp
jo
cltd
fwait
test
and
out
into
and
mov
inc
inc
add
xchg
xchg
outsb
add
out
sbbl
cmp
outsb
add
mov
sti
xchg
or
outsb
add
dec
sbb
sbb
cli
xchg
add
insl
add
sbb
sbbl
in
stc
nop
lds
testb
dec
clc
xchg
out
outsl
notl
popl
sub
push
or
mov
jno
jae
mov
adc
int
xor
or
int
dec
adcb
xor
cmp
psubusb
cmp
jb
popf
and
pop
ret
inc
and
add
in
aad
mov
cmp
push
cmpsl
outsb
mov
jl
daa
ret
fs
xorb
outsl
sub
pop
cmp
sub
pushf
shlb
imul
or
or
jmp
decl
cmpsl
mov
mov
jecxz
fcmovnb
ret
outsb
adc
fmull
sahf
rol
sbb
adc
cmp
fmull
jo
pop
stos
popf
and
enter
dec
and
ljmp
in
mov
mov
outsb
xchg
inc
pop
xor
jmp
mov
ss
and
xchg
loope
cmp
pop
repnz
jecxz
cmp
negb
ds
add
and
mov
in
sbb
and
xor
dec
xor
xchg
call
stos
lret
and
pop
dec
jae
jge
int3
arpl
stos
adc
ljmp
push
in
rcll
fcmovbe
fadds
mov
popa
mov
jno
cmpsb
lds
cs
fidivs
pushf
mull
in
cmp
pop
icebp
pop
sub
scas
repz
xchg
lea
sbb
jb
addr16
stos
loopne
jle
insb
add
lea
and
les
sub
push
mov
lea
pop
out
popa
scas
ret
dec
shll
repz
adc
xchg
push
movsl
xchg
add
xchg
bound
fldl
in
shlb
jmp
rorl
and
pop
and
ret
pop
xchg
push
orl
lcall
jno
stc
and
dec
addr16
imull
icebp
dec
out
xchg
push
pop
mov
sbb
sub
sbb
or
mov
mov
popf
push
lea
sbb
xchg
mov
xchg
push
mov
jo
cmp
mov
or
vmovdqu
jb
mov
cmc
loope
sti
inc
cmc
add
iret
clc
xchg
int
loopne
mov
je
sub
jno
lret
mov
iretw
orb
add
shrb
shll
int
pop
add
ja
lret
and
xlat
gs
lods
fwait
mov
sub
ljmp
and
add
jb
das
sbb
dec
popa
xchg
arpl
xchg
mov
shll
mov
orl
cltd
sub
jo
jb
inc
mov
fstpt
in
push
loope
cmp
sub
push
jbe
dec
fs
outsb
scas
jo
fcmovb
jb
push
adc
sbb
outsb
jle
insl
fstl
ss
mov
mov
movsl
and
pop
add
cmp
subb
das
or
andb
fldt
sbb
jmp
adc
popf
push
jae
or
mov
dec
push
or
fisubl
loop
push
mov
sbb
sti
inc
pop
cmp
popf
dec
mov
xchg
mov
std
mov
rol
sub
mov
add
push
jecxz
sbb
inc
sti
xor
stos
popf
inc
push
mov
xchg
mov
andl
out
adc
xor
int
push
cmpsl
jb
test
fnsave
in
adc
aam
cmp
pop
in
out
loop
mov
shll
xor
mov
inc
cltd
or
mov
dec
out
imul
and
pop
and
jle
xchg
cltd
loope
mov
fisubrs
stc
in
sub
xchg
dec
pusha
push
std
pusha
xchg
jecxz
push
aaa
mov
sbb
cld
fcomp
jo
out
cmp
or
push
adc
hlt
xchg
xor
je
leave
fmuls
movsb
or
xchg
mov
or
adc
movsb
add
scas
cmc
lea
data16
rcrl
stc
insb
out
push
in
fiaddl
jmp
mov
lods
mov
cmc
xchg
jno
scas
out
jle
fwait
push
mov
push
sti
pop
shlb
mov
popf
insb
icebp
xor
and
movsl
jns
inc
fwait
das
xor
add
jp
mov
sbb
add
out
pop
lock
addl
loopne
mov
xchg
push
push
lea
cld
fstps
jle
and
nop
pop
in
hlt
push
jg
popa
mov
test
push
mov
mov
int
filds
sahf
test
push
inc
popa
lea
cwtl
gs
mov
mov
mov
popf
in
sbb
test
mov
xor
mov
ret
test
mov
push
sbb
sti
addb
jb
in
addr16
dec
dec
jge
xlat
cmp
arpl
mov
shl
push
lahf
stos
pushf
test
mov
hlt
loopne
pcmpeqd
xchg
push
or
das
lea
std
cmp
mov
mov
lcall
gs
or
outsl
mov
mov
scas
jnp
dec
loopw
cwtl
push
xor
bound
xchg
or
mov
shlb
lock
clc
nop
adc
mov
outsb
xchg
push
mov
gs
pop
ret
jb
test
jno
dec
pop
je
test
pop
and
enter
adc
rorb
rclb
xchg
lahf
pop
fdivr
xchg
sbb
jmp
mov
xor
dec
mov
jne
into
dec
xor
push
cld
pop
push
insl
push
out
pop
aaa
lahf
daa
jno
jae
nop
sarl
xlat
shr
fdivrl
lea
xchg
out
daa
stc
ret
iret
insb
ss
sti
cmp
jecxz
inc
and
xchg
mov
jns
outsl
adc
dec
fnstenv
aas
pop
dec
popa
stc
orb
imul
pop
push
mov
xchg
popa
xchg
dec
jle
mov
cwtl
or
xchg
mov
sbb
or
jmp
mov
addl
movsb
stos
addr16
stos
lret
test
jbe
outsb
mov
dec
movsl
adc
sub
cmc
jmp
sbb
fs
mov
pop
pop
loope
std
fwait
lock
push
or
or
movsb
iret
push
dec
mov
fidivs
inc
mov
mov
iret
dec
mov
mov
push
push
sub
dec
in
mov
pop
je
andl
in
rclb
std
test
cmc
test
call
mov
mov
mov
rcrl
mov
push
mov
add
inc
and
pop
popf
leave
fnstenv
xchg
call
mov
mov
mov
mov
jp
xor
jge
fidivl
or
cmpsb
inc
xchg
jmp
int
out
scas
aad
fidivs
mov
or
adc
mov
mov
dec
test
ret
jae
loope
mov
mov
mov
mov
fdivrs
jmp
out
sti
mov
dec
loopne
fsubrs
push
dec
jb
pusha
jnp
push
shl
outsl
ja
sbb
das
xchg
mov
lcall
jle
nop
out
lret
sub
and
jne
adc
dec
jne
and
jne
mov
sbb
outsb
lahf
mov
iret
fs
mov
sbb
xor
sbb
cld
adc
xchg
add
jg
adc
jnp
std
xchg
add
nop
pop
push
pop
adc
xchg
pop
adc
dec
loop
mov
fistpll
loopne
clc
dec
push
or
mov
mov
mov
pop
stos
jbe
shlb
mov
xlat
pop
push
dec
popa
jge
xchg
mov
dec
faddl
out
movsl
add
and
nop
jp
pop
pushf
not
pop
in
ret
lock
xor
leave
sbb
add
lds
xchg
cli
out
mov
aad
or
insb
outsl
and
xchg
enter
bound
out
xchg
sub
jle
rcr
mov
or
rcl
sub
loopne
mov
loopne
or
jb
mov
mov
cmp
lods
inc
sub
mov
mov
inc
outsb
add
inc
mov
shrb
push
jmp
sahf
ja
dec
rol
jbe
mov
pop
jl
add
add
jmp
sbb
mov
mov
cmp
pop
xchg
adc
fs
xchg
stos
xorb
push
and
or
and
popa
inc
sbb
ret
fisubrs
push
pop
lret
jg
inc
daa
jmp
pop
in
loop
add
mov
pop
fdivl
mov
es
pop
and
mov
leave
jecxz
jb
es
sbb
inc
test
sbb
mov
xchg
lret
repnz
test
add
andl
lcall
cltd
das
out
iret
int3
mov
adc
and
inc
das
vhsubpd
iret
cmp
lret
stos
rorl
ret
int
adc
outsl
mov
inc
xor
mov
xchg
mov
lret
push
enter
pop
inc
mov
cmp
aaa
fwait
adc
sbb
movsb
mov
cmp
clc
pop
fisttps
xchg
rcll
pop
sbb
repz
cmovbe
dec
subb
jecxz
mov
icebp
inc
gs
cmp
inc
pop
pop
sahf
nop
popa
lahf
pop
mov
inc
test
adc
test
push
push
dec
push
scas
inc
arpl
ror
ret
loop
sbb
rolb
pop
cmp
add
in
mov
data16
rcr
ret
inc
xlat
inc
mov
jmp
mov
lock
out
mov
sbb
mov
mov
loope
aas
sub
outsb
sbb
sbb
add
sbb
fs
xchg
addr16
in
hlt
jmp
repz
sahf
je
xchg
adcl
mov
dec
jne
mov
fistpl
test
imul
xchg
sbb
ss
push
push
movsl
xchg
call
roll
mov
rorl
int
adc
clc
stos
inc
sub
andb
inc
pop
push
xor
mov
fisubs
iret
outsl
jle
adc
testl
mulb
pop
enter
mov
aad
jmp
out
xchg
gs
call
jl
cmp
mov
popl
or
inc
mov
jl
xor
push
jbe
jae
mov
adc
test
sbb
idivl
xor
out
fwait
push
mov
mov
inc
lret
xlat
mov
mov
lcall
pop
inc
push
out
xor
gs
inc
cmpb
and
inc
push
pop
xor
arpl
insl
or
push
push
in
sub
je
jb
shr
mov
in
mov
mov
push
shrl
adc
imul
cltd
and
fcompl
subb
fs
clc
cltd
xor
jp
xchg
arpl
mov
sbb
dec
fwait
stos
push
int
pop
in
sub
int
xchg
imul
ret
in
dec
or
popa
and
sub
les
sub
mov
mov
adc
pop
outsb
cli
mov
lcall
mov
dec
jbe
push
repnz
xchg
push
xor
scas
data16
inc
bound
xchg
sub
push
imul
xor
int
push
push
in
mov
bound
into
or
es
dec
fucomi
lea
push
iret
fst
dec
gs
add
xchg
and
jne
ds
mov
push
loope
pop
mov
fidivrs
lds
stc
mov
shll
xchg
in
enter
xlat
fs
and
pop
std
mov
rep
nop
xlat
mov
arpl
stos
sub
sub
imul
xchg
pushf
and
mov
les
int
sub
sub
mov
xchg
adc
or
idivl
roll
shrl
mov
jmp
push
and
loope
xor
in
sbb
aaa
in
pop
sbb
outsl
cwtl
test
cwtl
nop
les
jecxz
or
nop
sub
sbb
test
adc
imul
sub
xchg
sbb
sub
pop
sub
mov
inc
ljmp
cmpb
sbb
add
popa
mov
sbbl
add
cltd
jno
addb
sub
add
add
imulb
mov
pushf
sub
pop
push
mov
add
loope
fidivrl
adc
or
test
xor
cli
std
data16
ss
aas
notl
push
inc
aaa
inc
cwtl
add
mov
fisubrs
and
pop
mov
push
mov
data16
push
das
out
std
pop
ficomps
add
aas
push
fs
cmc
and
adc
push
bound
mov
lcall
shr
push
inc
inc
std
repz
sar
cmp
or
mov
insl
push
jle
push
sub
jb
dec
fsubs
stos
cmp
ja
into
jg
or
sub
or
mov
dec
scas
mov
mov
inc
xor
aad
fildl
loopne
gs
fisubs
jae
pop
sahf
xchg
xchg
push
cmpsl
push
mov
aas
mov
mov
mov
cmp
aas
adc
xor
fdivs
iret
fdivrp
and
mov
inc
and
test
repz
lret
idiv
push
xor
lods
sti
xchg
mov
ret
sub
dec
xor
jae
scas
ja
dec
push
add
mov
inc
push
xor
pop
popf
ja
js
jg
mov
or
shlb
jnp
jne
icebp
mov
and
inc
hlt
in
dec
out
ret
xchg
jno
sub
xchg
inc
push
aam
push
fwait
ds
ficoml
fnstenv
fsubp
movsl
add
stos
in
pop
sbb
and
cmc
int3
icebp
in
xchg
dec
xchg
mov
push
xchg
pop
xlat
jb
inc
lea
pushf
cmc
icebp
ret
int3
bound
inc
outsb
in
repz
out
and
testb
adc
movsl
xchg
repz
rcr
push
mov
sub
dec
pushf
mov
je,pt
call
and
sahf
xor
js
sbb
cmp
add
gs
lods
jbe
dec
je
orb
loop
push
loope
fadd
push
or
test
stos
jle
leave
ficompl
shl
loop
push
lock
int
or
popf
mov
into
arpl
mov
lock
pop
cmp
call
xlat
dec
pop
or
push
shlb
cmp
inc
in
pop
sub
ljmp
adc
xchg
aam
repz
cmp
mov
rcrl
cmp
jnp
xchg
push
out
xor
xchg
testb
cmp
cmc
pop
inc
fwait
int
pop
xchg
into
push
inc
cli
andl
mov
pop
cmp
dec
pop
push
sbb
loop
adc
rcrb
jle
lea
pusha
mul
xor
sub
scas
mov
js
loope
enter
lret
xor
stos
out
fnstsw
movhps
scas
cltd
sbb
in
popa
repnz
mov
aam
cmp
in
inc
pop
sub
pop
aad
mov
jmp
fnsave
xor
xlat
enter
pop
xor
mov
xlat
fdivs
int3
sub
sub
mov
scas
mov
xchg
cld
sbb
add
into
sbb
cmpsl
rolb
ljmp
stos
mov
lret
leave
mov
pop
and
outsl
xorl
or
jmp
cmp
outsl
inc
xor
dec
pushf
or
cltd
imul
insb
scas
in
push
sub
in
cmp
ret
cwtl
or
rcrb
mov
adcb
fs
lret
popa
loop
iret
jne
pusha
stos
sub
or
sub
dec
pop
mov
cmp
outsl
and
mov
cs
adc
dec
cmp
lods
jns
dec
loope
push
and
mov
int3
xor
or
pop
cmp
jle
pop
daa
rclb
xor
mov
call
or
inc
fxch
adc
test
inc
gs
iret
push
addr16
sahf
and
sbb
and
ds
jo
hlt
stc
test
ret
nop
aas
dec
mov
mov
mov
rcr
out
cmpsl
add
clc
into
sbb
mov
push
outsl
and
fidivl
icebp
push
inc
pop
push
mov
ljmp
pusha
lds
adc
incb
lret
inc
and
pop
es
mov
jmp
imul
or
mov
outsl
add
lock
or
repnz
mov
adc
fnsave
mov
movsl
imull
mov
push
fbstp
lret
push
jo
sub
push
repz
cmp
sub
nop
push
dec
mov
mov
shrb
bnd
mov
outsl
lds
addb
or
std
mov
jle
pop
movsb
rcl
repz
pop
sub
or
push
lret
mov
hlt
mov
fsubrl
leave
pop
adc
nop
push
int
pop
ja
inc
cmpb
pop
sbb
ret
xchg
outsl
pusha
icebp
sbb
out
sbb
std
push
dec
mov
fldt
pop
sbb
movsl
inc
sti
adc
fists
sub
or
inc
jl
stc
test
adc
mov
imul
inc
icebp
jg
bound
push
or
jg
popf
add
outsl
jnp
bnd
adc
mov
shrb
or
mov
cwtl
lds
push
pop
add
cli
mov
cmc
cmp
jbe
les
mov
lcall
or
sub
pop
les
xor
push
insl
jns
nop
mov
push
ds
push
out
add
inc
pop
cmpb
jns
repz
xlat
xchg
sub
inc
mov
andl
mov
adc
and
imul
or
push
push
cmp
imul
xchg
lret
sbb
mov
into
sbb
add
int
push
enter
xor
and
xchg
addr16
inc
loope
cmp
add
enter
sub
add
repz
repnz
mov
cmp
fs
inc
push
xchg
mov
mov
sub
or
in
mov
push
ja
fldt
fldenv
jno
dec
push
scas
sbb
adc
push
mov
ds
dec
add
push
inc
nop
aam
mov
fcomip
mov
adc
mov
or
mov
daa
mov
lock
cld
mov
push
pop
push
inc
movsl
xor
xchg
mov
pop
jge
or
addr16
xor
push
inc
gs
ret
fldl
or
cltd
push
jb
fmulp
mov
cli
mov
andb
push
mov
je
imul
out
pop
inc
push
incl
lds
mov
adc
insb
mov
xchg
insb
and
mov
push
sub
sti
cltd
test
repz
cltd
push
fisttpll
fs
or
jp
xor
jo
test
inc
jns
push
outsl
or
push
das
mov
mov
arpl
push
or
je
mov
and
test
jp
int
mov
push
mov
fidivrl
lods
jle
xor
lea
mov
cmpsb
decb
je
push
sti
push
lret
jns
pop
in
popa
dec
push
filds
add
cs
lods
imulb
mov
cmpsb
int
xchg
lods
lret
into
and
rcll
inc
fwait
sahf
and
pop
out
ljmp
inc
int
jl
adc
sbb
inc
sbb
jle
xchg
jge
aad
test
add
cmp
lds
and
int
stos
sub
xor
push
lods
mov
sub
decl
out
sti
stos
jmp
aaa
rcrl
jmp
sub
add
jmp
and
jo
push
and
cmpsl
xor
push
mov
dec
aad
clc
fisttpl
pusha
rcll
sahf
jmp
or
lds
ret
xor
xor
ja
ja
push
pushf
das
insb
xchg
subl
scas
pop
push
mov
mov
scas
je
cwtl
mov
das
mov
roll
aam
testb
popf
xor
jmp
push
xor
in
sub
sub
dec
out
xchg
mov
out
cmpsb
dec
cld
sub
dec
stos
cmp
mov
sahf
cmp
sahf
jb
mov
push
adcb
nop
lret
push
out
and
iret
mov
hlt
add
push
xor
xchg
pop
add
scas
and
cmpl
or
clc
jmp
lods
add
xlat
xchg
int3
imul
mov
or
jg
or
mov
sub
cltd
daa
sti
cmpsb
jo
pusha
add
subb
out
xor
adc
push
and
hlt
inc
sub
add
in
roll
pop
xor
pop
mov
cmp
loope
aam
inc
loop
xor
sub
and
hlt
gs
aaa
cmp
xchg
es
dec
and
loope
jecxz
cmc
fnsave
mov
dec
xor
gs
fidivs
fsubs
pusha
jle
pop
mov
mov
stc
push
repnz
adc
mov
or
stos
and
setp
pop
dec
lahf
adc
repz
lahf
mov
lcall
lahf
add
std
adc
pop
ficomps
dec
or
in
cmpsb
pop
fwait
lahf
mov
loop
jg
lcall
dec
dec
jno
push
xchg
daa
adc
jnp
mov
movsl
lock
negl
jne
aam
cld
push
lods
sub
repz
xchg
and
sti
hlt
mov
jno
sbb
and
push
test
dec
rcr
int3
leave
repz
and
sti
cmp
jo
sbb
dec
xchg
lahf
test
fnsave
into
hlt
int3
arpl
lock
push
inc
cli
and
sti
call
xchg
adc
sbb
mov
inc
xlat
adc
mov
inc
addl
or
lcall
jp
fbstp
adc
xchg
into
adc
push
das
mov
enter
rclb
inc
fadd
loopne
dec
adc
pop
aaa
dec
push
cmp
sbbb
xchg
xchg
push
and
jg
iret
data16
lock
loopne
pushf
adc
ja
andl
jl
aaa
add
cli
xchg
or
dec
jmp
xor
push
out
jns
mov
aaa
mov
test
fdivs
push
call
gs
std
xchg
jg
sbb
mov
iret
or
aaa
into
sbb
mov
out
loop
mov
stc
add
sub
pushf
inc
pop
lock
ja
fidivl
data16
cmpsb
icebp
jmp
in
or
sub
out
xchg
sub
sbb
ja
dec
test
lret
sti
iret
push
movsl
add
mov
mov
fsubrs
arpl
stos
xchg
xchg
mov
imul
popf
hlt
jmp
es
aas
js
shrl
mov
sub
jbe
mov
int3
jnp
jno
movsb
sub
in
xor
testl
not
popa
clc
or
nop
daa
dec
sub
pop
outsl
xor
mov
jae
xchg
movsl
shl
repz
sbb
dec
add
xchg
xor
test
orps
cmp
xchg
cs
fdivl
pop
cmp
ljmp
fdivrl
mov
and
data16
icebp
inc
shrl
adc
dec
into
jge
mov
inc
mov
je
cmp
insb
les
dec
out
cmc
ja
sub
push
in
cld
dec
xchg
sub
sbb
lahf
les
mov
mov
in
orl
iret
data16
dec
loope
adc
or
arpl
arpl
shrb
mov
pop
jno
mov
jnp
pop
xchg
sub
mov
push
dec
inc
fstpt
stos
inc
insl
xchg
stos
inc
lcall
xchg
and
fnstsw
pop
push
jo
sbb
and
adc
and
sbb
mov
push
pop
out
or
das
jb
pop
in
fsts
xorl
ds
orb
mov
insl
pop
mov
add
cmpsb
cmp
push
leave
add
scas
sbb
mov
sti
insb
mov
lcall
add
jb
mov
lret
lcall
mov
dec
loope
test
jb
pushf
pushl
jmp
adc
cmp
sbb
mov
push
inc
cwtl
das
je
repnz
ljmp
in
lea
mov
stos
inc
jno
imul
lcall
mov
push
es
jbe
inc
mov
fwait
aaa
lahf
dec
in
push
cld
xchg
mov
ret
mov
pop
out
sbb
xor
push
add
mov
fs
lds
scas
test
daa
popf
xor
iret
xchg
mov
or
pusha
hlt
mov
lea
mov
testb
int3
lret
pop
lds
mov
movsl
xchg
inc
faddp
xchg
loop
pop
dec
loop
pop
shlb
xchg
xor
ret
mov
lret
ret
xchg
leave
pusha
les
dec
loopne
push
stos
inc
int
xor
mov
addr16
pop
xchg
cwtl
push
ljmp
dec
loop
data16
xchg
cwtl
inc
fcmove
mov
mov
pop
jecxz
lea
dec
xchg
xchg
pop
lock
mov
sbb
mov
decb
xchg
xor
cmp
insb
cmp
mov
jge
test
insl
out
test
jle
mov
je
lahf
test
iret
retw
shll
es
mov
bound
pop
mov
push
ljmp
fwait
xor
fwait
xor
gs
xchg
cwtl
jl
xorl
jle
movsl
imul
outsl
sahf
xor
fwait
xchg
mov
sub
iret
sahf
popa
and
mov
adc
mov
mov
mov
shrb
mov
jl
xchg
sub
inc
xlat
mov
js
shrl
nop
daa
lods
xor
cwtl
das
stos
mov
push
in
les
xor
xor
jp
fldt
jge
test
movsb
cmp
or
dec
pop
arpl
and
test
cmpl
sbb
out
out
mov
push
lcall
pop
es
push
push
cwtl
das
test
lret
stc
xchg
in
ret
sub
rclb
jmp
out
enter
pop
sahf
popa
pop
xor
mov
mov
cmp
xchg
mov
mov
fdivs
loopne
sub
push
ljmp
jno
mov
or
loope
je
sbb
lahf
ss
push
in
xchg
mov
aad
mov
loopne
sub
push
pop
inc
pop
mov
jg
imull
int3
arpl
out
sbb
inc
fdivs
aaa
into
movsl
xchg
pop
lock
hlt
mul
pop
notb
adc
dec
loop
addr16
xchg
mov
mov
fisubrl
adc
sub
inc
nop
cmpl
loope
adc
xor
sbb
mov
repnz
fdivs
xor
sub
mov
aam
mov
xchg
sub
jle
mov
mov
das
cld
testl
push
cld
ljmp
out
movsb
cmp
xchg
push
add
pop
cld
in
add
pop
add
xor
imul
adcb
aad
test
xchg
sub
mov
push
in
mov
jle
sub
sbb
push
xchg
sub
call
adc
gs
pop
repnz
sarb
aas
add
pop
pop
in
pop
scas
sbb
ss
mov
les
das
inc
pop
in
pop
pop
jl
shrb
addr16
scas
inc
mov
iret
data16
push
lods
xchg
and
and
aas
in
jb
nop
movsb
push
pop
lock
mov
repnz
mov
xlat
out
inc
scas
insb
and
outsl
xchg
mov
int3
jecxz
or
mov
xchg
icebp
js
and
cmp
ja
add
cmp
repnz
lods
movsl
cmp
cmp
scas
inc
and
iret
data16
mov
fldt
sbb
daa
lea
mov
ror
gs
xchg
mov
sub
mov
push
jge
inc
mov
ret
gs
icebp
xchg
out
sbb
out
add
mov
inc
push
montmul
cmpsb
andl
cmpsb
inc
fcmovbe
mov
cmp
divl
outsl
xor
push
push
adcb
xchg
pop
out
pop
fwait
dec
shrl
lret
mov
fbld
mov
testb
fs
dec
or
xor
pop
cld
jns
out
dec
fsubrl
cmc
push
lods
cmpsb
ds
js
stc
pop
xor
and
push
cmp
inc
jg
or
cmp
mov
mov
or
stos
mov
clc
dec
out
xchg
fcoml
les
add
push
xchg
lods
gs
je
mov
nop
push
pop
xlat
push
jge
imul
mov
outsl
test
cmp
movsl
ds
pop
jo
pop
iret
add
in
pop
inc
ret
outsl
vsqrtpd
and
les
fadds
cmp
mov
mov
in
mov
push
mov
pushf
xor
aad
stc
push
cli
into
push
fisubrl
ficoml
lods
mov
fnstenv
jl
xchg
dec
cmpsb
ds
adc
xor
dec
mov
test
push
icebp
shrl
idivl
add
push
and
test
and
mov
xchg
adc
cmpsb
popa
dec
jae
mov
pop
insb
lods
dec
dec
iret
and
lea
testl
test
and
ljmp
mov
xchg
loope
and
xchg
fidivrl
add
dec
test
sbb
inc
imul
addl
fdivl
rol
out
mov
sbb
arpl
mov
adc
fcmove
add
xlat
jmp
addl
adc
bound
dec
pop
dec
movsb
movsb
push
or
jmpw
int3
xor
out
js
cmp
out
outsb
cs
sarl
and
push
mov
movsl
js
sub
dec
lahf
cmp
mov
pop
outsl
xlat
dec
dec
pop
in
sbb
mov
daa
jle
lcall
daa
add
jns
mov
scas
pop
adc
pop
sti
sbb
mov
pop
sti
and
add
sub
or
jp
enter
lret
aas
es
mov
xor
cltd
xor
lret
push
mov
in
addr16
cli
xchg
fistl
or
mov
fnstenv
xchg
xchg
sti
cmp
aam
sbb
rcrl
adc
scas
sti
pop
or
lret
xlat
push
popf
mov
jl
mov
std
inc
mov
ljmp
ss
arpl
inc
stc
lret
push
pop
aam
fcmovnbe
outsb
mov
sub
rorl
lea
ds
xor
pop
ja
or
push
stc
push
xor
fs
jnp
push
je
inc
mov
xor
in
shlb
or
cli
and
sbb
inc
lods
popa
inc
mov
mov
ret
cli
ss
lret
lret
inc
fimull
or
jno
adc
stc
inc
sahf
jae
mov
push
mov
mov
ret
fisttps
pop
fldcw
cmpsl
insb
clc
pop
inc
fidivl
nop
mov
xchg
ljmp
jo
xor
popa
jbe
xor
faddl
jns
repz
int
jg
loope,pt
cmp
or
orl
pop
pushf
lahf
dec
in
sbb
inc
xor
mov
dec
icebp
mov
xor
mov
mov
lea
loopne
sub
out
push
sbb
mov
stc
repz
sub
loopne
aam
or
or
sub
cmp
adc
sbb
sbb
xsha1
cmpsb
leave
daa
jmp
xchg
lret
and
out
push
rorb
scas
jno
icebp
fwait
rcrb
jno
mov
stc
dec
ret
ret
sub
pop
jne
loop,pn
ss
xchg
fwait
xor
dec
imul
bound
jne
jg
lcall
aad
and
cwtl
dec
mov
loope
push
in
ljmp
mov
scas
xchg
roll
pop
shlb
out
and
out
cmp
loop
fidivl
test
mov
ret
pop
into
sbb
scas
ret
xchg
sub
iret
pushl
popa
fcmove
ss
add
jb
lret
push
lret
out
add
loopne
pop
ljmp
xor
push
lea
xchg
cmp
pop
mov
leave
sub
jbe
sub
jmp
or
popa
cmpsl
out
add
jecxz
xor
ficoml
out
jecxz
fnstenv
sbb
popf
or
loopne
loop
pop
shl
mov
enter
fstl
adc
cmpsb
movsb
je
cmpsb
jmp
and
test
repnz
js
jl
repz
mov
loop
inc
mov
lret
fmul
sbb
xor
pop
rolb
jp
cwtl
std
xchg
xor
jno
aam
mov
add
push
lds
repz
dec
insb
loopne
cmp
xlat
push
js
and
cmp
outsl
sub
mov
jo
xor
cmc
cmp
prefetch
or
shrl
jo
cmp
mov
lahf
mov
jnp
movsb
bound
aaa
out
out
pop
xchg
xchg
add
pop
pushf
xor
pop
ja
cmp
xor
scas
pop
push
es
jnp
std
sub
loope
ds
pop
rorl
aam
loopne
push
mov
add
dec
movsb
jbe
mov
movb
inc
jecxz
ljmp
sub
sub
push
aam
push
and
outsb
pop
cmp
outsl
cmp
test
cmp
in
mov
ficoms
sbb
popa
inc
faddp
call
adc
out
push
push
fwait
mov
decb
or
scas
pop
fwait
push
push
int3
stos
pinsrw
inc
mov
push
add
popf
mov
loope
bound
push
das
ficoms
push
scas
inc
mov
cmpsl
pop
mov
pop
mov
mov
push
mov
lcall
dec
xchg
push
int3
cs
aas
imul
pusha
mov
xchg
and
inc
dec
outsl
cwtl
push
dec
das
in
dec
popa
fwait
push
je
test
jae
fiaddl
imul
daa
inc
mov
imul
add
test
pop
hlt
lcall
out
jb
dec
mov
mov
lds
add
iret
pop
xor
psllw
sub
sbb
enter
popa
enter
arpl
inc
lret
sahf
mov
sub
mov
mov
stc
cmpb
bound
ficoms
shrb
jl
insb
or
sub
imul
mov
daa
jmp
test
dec
shll
repz
xchg
jle
add
rcl
stc
mov
clc
les
fucomp
int3
jb
mov
aam
stos
adc
scas
jecxz
xchg
sbb
or
mov
push
call
mov
sub
xchg
out
imul
enter
icebp
enter
mov
sbb
or
sub
cld
in
lret
bound
shrb
mov
mov
push
adc
movsl
inc
iret
cmp
fnsave
dec
dec
into
or
jne
sbb
mov
push
clc
gs
int
mov
and
pop
lds
lock
arpl
xchg
xor
test
negl
rcl
movsb
ds
sub
push
clc
pop
loopne
testb
inc
push
enter
and
pop
and
andl
sbb
in
push
lcall
push
into
jmp
mov
subl
hlt
xchg
mov
bound
shlb
jno
or
sbb
movsb
das
repz
add
ds
movsl
jmp
nop
mov
icebp
pop
repnz
xchg
js
aad
mov
in
inc
lret
pushf
jg
adc
lods
fwait
lea
sub
pop
hlt
imul
inc
popf
cmp
cmpsb
mov
xor
test
jmp
enter
fsubr
inc
mov
out
cmp
mov
fsubrl
fsubs
lock
dec
jnp
pop
mov
jnp
addb
push
add
push
dec
movl
dec
in
sbb
jns
xchg
stos
movsb
cmp
adc
or
aam
or
aas
scas
and
adc
callw
pop
jno
pushf
jnp
mov
jle
jae
fs
inc
mov
jne
push
scas
xor
sarl
cmp
pop
or
push
bound
mov
xor
lahf
lahf
mov
xor
out
fidivs
pop
add
popa
ds
addl
inc
int
pop
jge
imul
in
and
sbb
mov
shll
jo
xchg
pop
out
ss
loope
adc
cmpsl
xor
out
repz
inc
movsl
insl
push
dec
cmp
imul
mov
ljmp
outsb
icebp
xor
inc
addr16
popa
addr16
push
jb
adcb
pop
incb
mov
add
mov
adc
cmp
es
lea
push
jbe
dec
arpl
xchg
dec
pop
ret
mov
adc
bound
imul
daa
jle
movsl
outsb
xchg
sub
cmp
ljmp
fcmovnu
ret
aas
out
aad
les
cmp
leave
push
int
in
iret
ret
inc
fwait
mov
sbb
addr16
imul
dec
fmuls
push
pxor
jbe
repnz
out
sbb
or
mov
push
mov
cmp
or
xchg
add
ja
lds
push
sbb
jb
aad
mov
cs
lret
daa
xchg
pop
test
or
shl
aam
mov
out
mov
sub
enter
cs
push
ret
dec
arpl
inc
push
xor
cmp
mov
xchg
mov
pop
into
xchg
jle
add
mov
incb
sub
or
dec
mov
repnz
outsb
mov
les
pushf
in
jmp
orl
and
roll
push
aad
sar
push
add
add
jmp
mov
std
aad
leave
xor
dec
lock
push
cwtl
pushf
mov
pop
fisttps
xchg
mov
test
stc
xchg
out
xchg
jp
xchg
adc
rcrl
arpl
jo
in
mov
mov
jl
das
call
or
data16
cmp
and
in
shl
dec
out
or
and
mov
xchg
divb
sub
dec
mov
cmpsl
shlb
jne
jnp
push
jmp
pushf
das
fsubrs
mov
fisttps
lahf
inc
sub
mov
imul
scas
mov
jae
jno
dec
in
sub
pop
jns
cmp
jns
fwait
inc
in
les
std
or
loopne
fldenv
sub
sub
out
mov
out
and
fstps
mov
in
jb
rcrb
pop
cmc
jle
call
out
push
fstpt
fs
adc
into
inc
rcrl
data16
ss
xchg
xchg
jno
sbb
dec
scas
xchg
imul
jo
pop
movsl
mov
jmp
sarb
fildll
out
xlat
adc
sbb
xlat
dec
add
rclb
cli
and
fwait
xchg
and
rolb
push
mov
inc
jp
mov
push
movsl
cmp
addr16
rclb
pop
adc
leave
test
les
and
adc
jmp
out
pusha
divl
lods
subl
pop
add
int3
cmp
xchg
cmp
dec
cmp
and
aam
inc
inc
shrb
inc
lds
and
scas
jae
push
aam
pushf
pop
mov
ds
leave
mov
out
ret
int3
mov
shlb
fld1
movsl
mov
xlat
paddusb
push
stos
jle
add
sbb
xchg
dec
shlb
sahf
jmp
push
aaa
addr16
popa
cmp
jne
jle
jbe
pop
xchg
push
push
imul
xchg
nop
jno
mov
pusha
je
inc
aam
inc
roll
mov
fnstsw
movsb
pop
loope
cmp
pop
add
adc
push
cmpsl
inc
sti
xchg
inc
add
andl
loope,pt
fstpt
xchg
cld
inc
mov
sahf
or
xadd
fildll
addb
scas
pop
out
lahf
outsl
add
dec
push
xor
sahf
sub
mov
xor
cmpsl
pop
inc
stos
movsb
add
or
xor
lock
and
sub
xor
call
test
leave
or
cs
imul
fsubrs
mov
mov
rclb
pop
lods
push
mov
or
xchg
in
je
lret
push
sub
xchg
iret
out
out
pop
add
mov
imul
rorb
cs
mov
inc
fwait
or
test
negb
sub
xchg
jo
mov
fistpl
jle
cli
pop
mov
mov
aad
and
xorb
fsubr
and
xchg
mov
flds
jp
add
or
sub
and
in
test
ljmp
setnp
dec
add
fwait
aaa
xchg
ret
orl
cli
addb
mov
jne
leave
jae
fidivrs
ljmp
xor
jb
push
xor
testl
outsb
inc
clc
sub
pop
lock
jnp
jno
fsubs
inc
stos
imul
js
mov
cmp
sub
adc
push
outsb
or
xor
dec
push
sub
lea
push
cmc
dec
data16
aas
mov
je
jl
call
std
jle
mov
adc
jnp
movsl
xor
repz
push
mov
xor
test
or
lea
jno
dec
mov
mov
shll
rcll
mov
push
mov
in
jne
out
fsubl
mov
movsb
and
mov
imul
add
bt
mov
shl
add
fsts
xorb
pop
mov
call
sub
sahf
fstpt
mov
lods
cmp
jle
aaa
jmp
xchg
vunpckhps
jbe
sub
fstpt
je
jle
cmp
in
sub
pop
fidivrl
xor
popa
cwtl
int
fcmovne
mov
ss
mov
sub
sub
fmuls
push
xor
jp
pop
add
lret
sbb
xchg
sub
inc
mov
xor
inc
pop
cli
pop
jl
sbb
jl
pushf
popa
mov
jle
and
add
jno
sbb
adc
push
add
mov
pop
aaa
push
cwtl
test
lret
pop
push
add
and
ds
into
gs
push
adc
popf
mov
rorl
sbbl
cltd
mov
sti
dec
mov
cmp
mov
jg
hlt
mov
loopne
xchg
outsl
test
jecxz
inc
loope
xlat
nop
jne
lea
cmp
lcall
pop
jbe
sub
stos
inc
cld
xchg
jns
and
lcall
lahf
xor
pop
in
cld
inc
int
lds
out
leave
cmp
popl
lahf
mov
mov
mov
mov
and
lcall
jg
jo
xchg
mov
cwtl
fistpl
loopne
jno
shll
cmpb
push
call
stos
cmpsb
cmp
adc
les
cwtl
mov
lret
cs
xor
jp
cltd
enter
ljmp
test
dec
pop
xchg
stc
nop
ret
xchg
mov
add
je
mov
jmp
rol
mov
pop
int
outsb
imulb
cmp
sub
loop
leave
push
inc
test
fisttpl
bound
dec
or
sbb
jae
adc
xchg
push
rcrl
cmpsl
sbb
sahf
and
sub
pushf
imul
cmp
lock
push
adc
inc
or
loop
dec
and
push
push
push
mov
jbe
divl
je
or
popaw
clc
test
push
xor
mov
cmp
ja
js
cmp
dec
pushf
inc
pop
dec
fimull
xchg
sti
xchg
xlat
subb
mov
fwait
xchg
out
out
insl
jbe
dec
imulb
ret
pop
mov
insl
push
popa
test
and
and
pusha
stc
daa
mov
jmp
fs
pop
sahf
movlps
pop
pop
popf
push
cltd
xchg
outsb
or
jne
outsb
mov
xor
xor
cmp
cmc
addr16
push
mov
mov
xor
outsb
movsb
xchg
inc
int3
cmp
dec
loopne
pop
inc
mov
pop
and
popa
jl
pop
cmp
xor
and
aas
adc
ret
fmuls
leave
cli
dec
in
nop
inc
stos
xor
xor
cmp
adc
mov
or
pop
dec
popf
mov
pop
stc
xor
je
jp
das
in
test
popf
imul
inc
inc
cmp
add
ljmp
idiv
fcoms
shlb
in
cmp
clc
add
adc
fldenv
in
or
cmp
and
outsb
or
add
jns
aad
xor
lock
pop
adc
data16
mov
lds
pop
dec
jb
orl
bound
sub
mov
imulb
cmove
daa
inc
fs
movb
inc
push
cmp
push
dec
mov
mov
mov
ljmp
fcmove
xchg
mov
mov
mov
dec
int3
scas
push
mov
icebp
xchg
gs
ret
mov
xor
jbe
cmc
push
test
insl
frstor
cld
fiaddl
imul
fsubr
sub
cmpsl
mov
add
cmpsb
out
or
pop
mov
movb
icebp
xor
inc
fbstp
inc
xor
pop
add
cld
popa
pop
inc
sbb
push
sti
mov
and
aas
sarl
xlat
dec
call
or
cmp
mov
add
leave
addl
push
stos
call
mov
out
pushf
xchg
mov
push
push
hlt
movsb
je
mov
negl
adc
jns
iret
imul
sub
inc
sub
nop
hlt
in
fdivp
pop
cld
leave
iret
cmp
stos
maskmovq
notl
mov
inc
es
or
movsb
inc
int3
push
jo
scas
lret
bound
cltd
mov
mov
arpl
je
fistl
fs
or
xchg
pop
mov
sbb
lcall
jp
jecxz
adc
xor
sbb
adc
adc
cmp
xor
call
mov
loopne
dec
insb
in
sbb
addr16
cmc
push
inc
pop
dec
mov
inc
push
popf
xor
dec
mov
pop
lock
lret
rorl
je
fdivs
enter
mov
sub
jge
pop
mov
imul
xchg
sahf
jae
inc
dec
adc
sub
or
jne
and
stos
pop
mov
pop
xor
nop
push
aas
fildll
cmp
cli
fldcw
ficompl
int3
dec
mov
jmp
adc
cmp
pop
aaa
or
xchg
jge
mov
sbb
stos
jbe
xchg
mov
movsl
dec
ret
xchg
js
dec
aaa
fistl
ret
cmp
mov
cmpsb
pop
hlt
imull
and
xlat
lahf
fdivl
mov
mov
mov
adcb
outsb
call
test
test
sub
enter
repz
or
loopne
pushf
pop
add
add
pop
stc
push
test
inc
dec
xor
jno
divb
fidivl
adc
or
jnp
jecxz
icebp
fists
nop
push
out
rcrl
sarl
in
sub
mov
add
mov
adc
pusha
add
mov
shlb
insb
fwait
repz
out
pop
mov
lods
cmc
adc
gs
test
xchg
repz
mov
jecxz
out
mov
fs
fdivs
ffree
inc
lods
xlat
shrb
fcmovbe
push
aad
fnstsw
mov
sti
sbb
mov
or
fs
subl
jb
xor
out
test
iret
push
add
xchg
cmc
mov
xchg
bnd
dec
mov
std
or
test
pop
adc
pushf
hlt
sbb
addl
pop
pop
jnp
xchg
dec
xchg
jns
mov
xchg
adc
xchg
sub
xor
push
nop
mov
xchg
in
icebp
push
mov
jecxz
mov
in
fbstp
mov
mov
pop
scas
stc
nop
loope
xchg
fwait
xor
sub
decl
pop
enter
mull
stc
sub
rcll
cltd
iret
xor
fcmovne
ja
rcl
pop
mov
ret
xchg
test
test
cmpsb
or
pop
mov
inc
sar
jl
ret
mov
xlat
icebp
mov
mov
mov
aad
sbb
pop
movsb
pop
pop
stc
data16
sub
inc
and
popa
push
int3
xor
testl
add
out
sbb
jns
jae
xor
sbb
dec
mov
cmp
scas
push
cmp
mov
out
mov
lods
cmp
push
mov
mov
fnstsw
pcmpeqb
bound
jmp
dec
mov
or
or
mov
pop
mov
adc
inc
into
das
jmp
sbb
mov
ss
or
and
pop
fdivl
sbb
xchg
loope
pop
popf
add
mov
mov
aaa
into
test
add
inc
cmpsb
push
in
xlat
arpl
mov
sub
xchg
sub
pop
idivb
sahf
scas
inc
rcrb
adc
icebp
int
and
jmp
jbe
mov
mov
xchg
daa
mov
fidivrl
inc
fsubrl
stos
sub
arpl
mov
loopne
sbb
mov
lahf
ss
add
mov
fcmovu
jb
cltd
stos
inc
lret
sub
enter
pop
scas
mov
out
jno
xor
fwait
les
and
stos
aaa
inc
xlat
push
mov
mov
fstpt
jb
arpl
ljmp
sbb
mov
push
imul
pushf
daa
hlt
mov
inc
fsubr
jp
test
inc
int3
xor
std
popa
sbbb
push
dec
out
mov
aaa
out
insl
add
pop
mov
and
pop
fnsave
stos
inc
dec
lods
sti
xchg
fildll
pop
fwait
add
mov
mov
cmp
orl
pushf
inc
movsb
push
in
aad
and
sub
sub
pusha
divl
pushf
mov
into
pop
jle
mov
into
and
xorl
xor
fsubrs
call
testb
stc
adc
sub
xor
sti
loopne
imul
xor
xchg
data16
outsl
push
pusha
inc
pushf
xor
lds
mov
pusha
enter
fucompp
out
fstpt
add
sbb
dec
and
xchg
mov
call
sub
enter
push
sbb
outsl
push
lods
cmp
lea
nop
cld
xchg
ret
ljmp
data16
data16
xchg
add
mov
in
dec
loop
jns
lret
jno
jno
jno
std
xchg
xchg
les
nop
daa
push
in
repz
scas
inc
inc
cmp
imul
xchg
les
inc
in
mov
push
inc
leave
pusha
jb
adc
shll
or
mov
push
cmp
lock
mov
jnp
sub
push
popf
adc
iret
daa
dec
lahf
bound
iret
test
lret
add
test
pop
and
sbb
xchg
mov
sub
data16
sbb
mov
mov
pop
xor
sbb
dec
inc
xchg
sti
xor
mov
xor
cmp
lea
mov
je
mov
pop
xchg
and
add
into
stos
loop
jge
cmp
adc
je
call
mov
xchg
xor
bound
lods
xor
inc
popf
xor
cmc
lods
out
repz
orl
inc
dec
scas
mov
pushf
gs
jns
sahf
ficoms
lock
lret
push
push
pop
sub
das
push
jne
loopne
push
test
call
inc
adc
movsb
pop
popf
fsubs
mov
daa
mulb
xor
lcall
insb
pop
sub
push
clc
push
mov
sbb
add
dec
push
fdivs
lret
lret
in
push
sti
test
shll
push
xchg
repnz
pop
jno
and
hlt
push
dec
rcrl
loop
mov
movsl
mov
jno
add
lret
hlt
lods
push
fimuls
out
sub
inc
inc
xorl
mov
cmp
daa
iret
or
jp
repz
sbb
jmp
xchg
push
in
mov
lret
rcrl
sbbl
lea
jle
push
mov
dec
lods
xor
pop
iret
js
jnp
xchg
and
dec
in
and
mov
xor
dec
and
xchg
add
loopne
pop
add
sub
int
jecxz
push
fmul
and
pop
cmpsl
jl
mov
xor
incl
jg
adc
and
xor
dec
push
in
lahf
je
test
andl
out
pop
bound
push
test
roll
sahf
into
push
cmp
in
push
mov
jl
daa
jbe
dec
cli
roll
xchg
inc
movsl
cs
inc
jmp
and
nop
stos
mov
cmp
fucom
shll
sub
push
cli
je
outsb
fiaddl
subl
or
out
cmp
into
clc
xlat
fldcw
test
push
pop
push
mov
repnz
roll
js
dec
xlat
movsl
cmp
jb
push
stc
add
addb
push
mov
push
pop
icebp
inc
stos
pop
hlt
sbb
call
mov
data16
add
test
imul
jg
inc
mov
leave
and
popa
clc
fmul
cwtl
das
mov
push
dec
in
or
jnp
mov
or
nop
scas
inc
add
xchg
cs
cmp
mov
popa
and
call
lret
popf
xor
js
inc
fidivrl
sbb
jo
rcl
push
scas
jae
push
gs
and
int
loop
ss
in
subl
push
daa
mov
mov
mov
inc
adc
call
rol
scas
cs
or
add
xchg
gs
ret
push
mov
lret
cmc
test
nop
inc
stos
dec
or
push
add
sbb
test
je
ss
fwait
cmp
push
fldcw
pop
dec
inc
push
jp
xchg
inc
ret
ss
in
pop
outsb
mov
addl
fs
pop
push
inc
push
push
mov
dec
pop
and
pop
xor
add
shlb
dec
inc
adc
shlb
ss
out
push
addr16
mov
adcl
add
sbb
lock
inc
inc
adc
dec
jmp
mov
xchg
out
push
loopne
xor
mov
rolb
mov
div
loopne
sbbb
jns
sub
ret
dec
adc
mov
fldl
mov
jno
xchg
icebp
pop
cmpsb
fcom
jp
mov
dec
cmp
cs
test
xchg
aad
ud2
in
or
and
mov
mov
sub
sub
into
xorl
add
mov
mov
jb
mov
arpl
cmpsb
xorl
mov
scas
sbb
jecxz
sbb
idiv
int3
jns
mov
cmp
stc
repnz
push
shr
add
rcrl
loope
stc
bound
hlt
jae
pop
and
mov
mov
mov
dec
sbb
xchg
hlt
sbb
stc
jns
mov
mov
cmpsb
or
pop
pop
add
push
sbb
sub
or
or
popa
mov
lods
cmp
jb
call
mov
mov
mov
or
pop
push
cmp
je
xlat
sub
sub
jne
test
inc
adc
pop
lret
pop
lret
movsl
sub
and
call
jb
orl
xchg
cmp
cwtl
aam
int3
mov
lods
das
mov
or
and
mov
or
push
sub
mov
lahf
daa
jmp
fwait
add
mov
lods
data16
xor
adc
jge
push
fwait
sbb
mov
sbb
dec
jae
rcl
mov
cs
call
stc
jo
adc
js
jl
jle
arpl
xchg
fstl
add
lea
mov
cmpsl
fistpll
inc
icebp
pop
mov
ljmp
subb
fstp
int
inc
push
mov
xchg
mov
test
pop
stc
fs
lcall
jle
or
test
test
cmp
jl
js
push
add
mull
icebp
aas
popf
push
add
lahf
pop
xchg
enter
cli
push
jge
sti
pop
or
pop
lret
mov
lds
cwtl
ret
lcall
dec
or
hlt
mov
ret
jl
or
fsubp
cmp
adc
lea
clc
pop
in
mov
std
imul
jo
add
cmpsl
dec
mov
arpl
sub
addr16
inc
loopne
outsl
jmp
cld
adc
dec
add
es
jmp
insl
mov
jb
inc
push
jne
inc
inc
add
test
mov
push
mov
push
mov
mov
push
jge
cmp
mov
outsb
nop
clc
jle
dec
int
pushf
push
mov
jno
push
pushf
cmp
pusha
das
jnp
cmp
cltd
insl
clc
pop
cmp
mov
jecxz
mov
aad
fistpll
or
call
repnz
pop
cld
inc
enter
cltd
xchg
inc
iret
jno
adcb
and
xor
enter
loope
lret
out
mov
inc
adc
adc
movsb
test
in
clc
shrb
push
scas
cs
xor
inc
jp
loope
je
inc
adc
cmc
xor
cwtl
mov
mov
xchg
xchg
mov
mov
repnz
pushf
lods
jmp
aas
pushf
mov
cmpsl
pop
cld
sub
inc
adc
ret
out
imul
xchg
cmp
pushf
mov
outsb
jmp
mov
jl
mov
pop
mov
add
pop
lcall
mov
mulb
xlat
subl
mov
pop
xor
addb
imul
jmp
push
add
mov
je
push
inc
adc
mov
into
mov
aad
cli
cli
push
and
test
mov
mov
push
cmp
mov
push
mov
es
xlat
push
add
lods
daa
xchg
bound
mov
mov
cmpsl
or
mov
dec
or
adc
mov
xchg
jno
mov
lret
enter
dec
push
xchg
inc
pushf
xchg
and
nop
cwtl
scas
sub
xor
scas
loope
loop
xchg
std
add
inc
leave
sbb
fidivrs
seta
ret
lret
sub
out
addr16
pop
jp
fs
mov
jnp
lahf
sub
push
lcall
loop
lods
adc
fmuls
mov
xchg
lcall
pop
imul
lahf
es
jo
cmp
les
fstpt
lcall
popf
pop
adc
retw
jnp
lock
lahf
daa
icebp
out
lahf
cmp
sti
scas
sbb
push
mov
nop
mov
mov
cmp
sub
loop
pop
dec
lea
add
fildll
cmpsl
mov
outsl
testb
inc
or
lods
jl
or
jmp
movsb
pop
lods
add
mov
out
orl
int
test
pop
sbb
arpl
rorl
rclb
loope
xchg
aas
push
rclb
jg
call
mov
adc
xcrypt-ctr
cmpsl
sbb
mov
scas
daa
test
xchg
sahf
inc
pusha
and
out
jle
int3
repnz
inc
dec
sbb
push
and
sub
jge
in
xchg
cmc
in
addr16
out
cmp
add
mov
fdivrp
xchg
xor
jo
bound
adcl
gs
jo
push
jo
sbb
mov
push
cmp
dec
or
cs
push
jge
adc
push
cltd
xor
fld
nop
pop
in
dec
or
lods
xor
nop
inc
dec
das
imul
xchg
cwtl
cmp
mov
int3
lea
pusha
call
mov
movsl
lods
mov
and
cmp
or
push
adcl
sub
inc
lods
sub
lret
cmc
adc
xlat
cwtl
into
mov
push
rcl
mov
mov
fnstsw
mov
int
arpl
jg
call
mov
jge
stc
out
rolb
push
push
push
lret
mov
mov
call
in
cmp
andl
adc
push
cmpsb
dec
jecxz
push
mov
mov
mov
mov
aam
repz
xor
sti
in
imul
ret
scas
and
add
add
push
popl
and
xor
jbe
je
std
fs
gs
or
xchg
je
dec
test
sub
fidivs
and
jae
dec
adc
push
lock
xor
out
es
pushf
and
imul
cmp
pop
insl
mov
or
mov
lods
outsb
loope
push
testb
cmp
dec
repnz
xor
sbb
xor
pop
mov
cmp
pushf
pop
adc
add
inc
adc
adc
lahf
cmp
add
adc
push
insl
call
lret
in
into
sbb
mov
ja
adc
mov
aam
test
jbe
jge
arpl
pop
xchg
push
stc
nop
xchg
sbb
mov
mov
jb
xor
mov
mov
std
hlt
jle
mov
or
mov
or
xlat
cmpsl
sub
mov
mov
xchg
cmp
lea
mov
add
dec
sbbb
inc
xchg
imul
fiaddl
mov
pop
fnstcw
pop
sub
je
jo
ret
push
lret
mov
icebp
fs
jb
sub
push
sarl
inc
adc
fwait
xor
lea
rolb
push
dec
movzbl
dec
push
sbb
fadds
jmp
test
sti
data16
fnstsw
mov
int
pop
add
mov
add
add
jo
sbb
test
xchg
mov
mov
and
outsl
in
enter
mov
mov
adc
add
outsb
sbb
iret
or
pop
cmpsl
push
lahf
cmp
rolb
clc
adc
in
in
fsubs
cmp
mov
sbb
push
clc
fdivp
popa
mov
mov
inc
test
adc
rcr
sbb
cmp
cmp
call
ds
adc
ja
pop
je
pop
rclb
jb
lret
mov
and
xchg
enter
or
push
fdivrl
jg
adc
mov
adc
pop
daa
or
inc
lret
mov
mov
pop
shrl
jnp
push
int
fstpt
lock
pop
mov
dec
shrl
icebp
push
addr16
adc
shrb
fildl
mov
in
pusha
popa
pop
jno
into
mov
stos
mov
or
dec
add
daa
push
lahf
in
jmp
stc
repz
in
jae
jecxz
mov
orb
faddl
xlat
pop
int
clc
mov
loop
mov
lods
lods
xor
sbb
nop
aaa
popf
xor
clc
pusha
shlb
cmp
mov
addr16
ja
movsb
sub
fadds
outsl
cmc
cmp
sarl
sub
mov
in
pop
add
filds
sbb
leave
adc
and
or
lods
xor
sub
inc
add
and
add
and
cmp
cmp
xor
cltd
or
lds
xlat
aas
add
jo
and
movsl
sub
jno
enter
sbb
dec
pop
fnstsw
popa
mov
shrb
jns
nop
divb
rolb
pop
mov
pop
movl
inc
push
aas
mov
jp
and
jl
cltd
adcb
inc
adc
gs
mov
sub
mov
jne
fistpl
mov
dec
and
outsl
push
jle
cmc
scas
jne
lods
dec
rolb
sahf
pop
add
jbe
gs
xchg
cwtl
ja
bound
filds
or
int
insl
pop
mov
cli
fsubr
je
sub
sbb
lret
add
dec
sbb
push
ljmp
gs
stc
je
xchg
loop
sbb
jp
jne
or
stos
mov
int
jmp
jo
stos
fidivrs
gs
or
xchg
ds
or
pop
dec
or
scas
lods
call
hlt
push
int3
lret
lret
adcl
loop
push
idivb
mov
dec
mov
cld
mov
fs
insl
out
jp
add
int3
cmpsl
xor
out
fcom
cmp
mov
xchg
scas
dec
or
cmpsb
ret
cmp
aaa
push
add
sar
pop
scas
fstl
out
xchg
js
fldcw
or
lret
pop
lahf
inc
mov
lahf
inc
sbb
aas
xor
and
jl
mov
mov
inc
in
lret
xchg
push
leave
xchg
fnsave
int3
sub
inc
sub
mov
adc
sahf
stos
loopne
out
ret
hlt
add
xchg
xor
push
ret
scas
loope
fildl
cwtl
xchg
pop
add
int
stos
xchg
loop
outsl
cwtl
ret
jno
aas
iret
dec
adc
sub
loop
and
xor
loopne
call
and
mov
movsl
xor
test
or
daa
and
jp
mov
jg
popa
call
adc
mov
jl
cmp
cmp
xor
bound
mov
xor
and
lock
cltd
inc
shlb
add
dec
dec
push
xchg
sub
sbb
lret
dec
or
cmp
jbe
ljmp
dec
sbb
adc
xor
fs
fbstp
jl
push
mov
or
mov
xor
shlb
mov
aam
pop
add
xor
aaa
jne,pt
cmp
push
mov
xchg
sbb
dec
movsb
and
sarb
pop
std
lock
pop
jmp
repz
les
fstpt
jecxz
mov
xchg
loopne
xor
into
mov
bound
mov
xor
mov
push
sti
push
mov
add
adc
dec
mov
sub
xchg
inc
sub
inc
inc
xor
mov
sub
int3
sbb
pusha
inc
nop
adc
mov
mov
fnstenv
repz
mov
cmpsb
sub
cld
dec
dec
adc
sub
out
dec
add
imul
cld
inc
xor
xchg
inc
push
js
pushf
ss
xchg
inc
shrb
lret
xchg
lods
mov
loope
loope
cli
pop
cmpsb
stos
sub
jo
fidivrl
insl
cmpsb
xor
lret
scas
sub
aam
std
shlb
sbb
dec
popa
dec
adc
cltd
mov
shrb
inc
or
jnp
repnz
mov
xchg
adc
adc
add
aaa
xchg
jle
pop
mov
adc
inc
icebp
pusha
xor
das
xchg
inc
add
aad
pop
aaa
mov
insl
imul
adc
jns
add
sub
add
pop
mov
into
add
aad
mov
mov
pop
imul
jo
push
insb
fldl
mov
scas
icebp
pop
mov
scas
clc
popa
pop
xchg
mov
jle
add
rolb
fdivl
lods
inc
xchg
inc
lss
mov
ljmp
mov
nop
cmp
addr16
roll
adc
pop
inc
adc
daa
mov
xchg
pop
ret
push
orl
dec
xor
jno
arpl
stos
imul
into
mov
mov
rorl
inc
inc
adc
jp
and
add
fiadds
es
inc
test
push
xchg
push
clc
adc
dec
out
xchg
sbb
loopne
inc
lahf
repnz
cltd
xchg
inc
or
into
fwait
inc
in
in
in
stos
stc
dec
adc
push
stc
data16
add
jne
mov
push
cmp
loop
hlt
pop
or
sub
cmpsb
jp
dec
and
or
jl
lret
mov
dec
or
dec
dec
or
xor
sub
insb
out
xor
inc
cli
cmpb
push
fnsave
lcall
leave
aam
push
jp
rcll
push
mov
mov
push
jle
push
pop
add
out
mov
std
cmp
aaa
addr16
pop
mov
add
mov
out
fwait
inc
test
addr16
or
xchg
cmp
int3
notb
lods
or
pop
dec
or
pop
mov
adcb
push
pushf
mov
xchg
ffree
cltd
cmp
or
stos
ja
mov
outsb
test
shlb
sub
push
sub
mov
test
stos
inc
pushl
mov
jns
mulb
inc
jle
xlat
in
mov
inc
push
aam
dec
mov
mov
xchg
inc
das
int3
stos
daa
imul
inc
push
pop
push
push
sar
xchg
mov
cmp
fistpll
es
adc
imul
or
ret
xchg
push
push
std
pop
lock
std
pop
fsubr
cmp
and
sub
push
sub
xor
les
in
jbe
sbb
or
cltd
inc
hlt
pusha
push
loopne
xchg
push
xchg
int3
pop
mov
test
scas
rolb
lret
push
mov
rcll
or
in
movsl
xor
cld
jne
xor
loope
insb
jns
pop
mov
sbb
mov
test
mov
xor
or
es
test
push
clc
dec
in
xor
mov
cmp
mov
sub
icebp
push
dec
lds
cmpsl
mov
add
inc
mov
mov
mov
out
jae
in
pop
mov
xor
orl
repnz
and
adc
push
cmp
test
xchg
mov
stc
or
or
push
clc
inc
mov
ds
enter
out
insl
jmp
pop
and
or
jecxz
cld
insl
push
movsl
clc
sbb
cs
jmp
xor
adc
xchg
outsl
call
scas
push
xchg
push
add
out
in
jb
fdivp
hlt
jmp
jno
mov
test
in
shr
xlat
jle
lock
jmp
cli
mov
out
stos
xor
hlt
movsb
xor
insl
pop
ret
mov
shrb
dec
cmc
stos
das
loopne
and
add
xor
repnz
or
mov
sub
dec
hlt
xchg
notb
lock
stos
dec
pop
pop
mov
cmpsb
dec
pop
dec
or
xchg
xchg
inc
popa
cmp
or
pop
adcl
aad
outsl
push
lcall
rorl
xchg
call
cmc
sbb
shrb
jge
data16
cmp
mov
movsb
add
sarl
movsb
xor
imul
shrb
xchg
pop
repnz
cmp
pusha
mov
inc
jg
loope
xchg
je
lods
sbb
mov
jnp
lcall
jge
mov
pop
add
xor
mov
push
fdiv
push
mov
and
mov
ss
imul
xor
fisubs
clc
push
xor
cs
mov
outsl
xor
jo
cli
pop
inc
imul
mov
imul
sub
pop
decb
sbb
xor
repz
jnp
in
mov
dec
sub
mov
cltd
pop
clc
mov
mov
loop
fidivl
cmp
xor
lea
pop
mov
mov
jle
jl
fistpll
push
iret
mov
ret
out
pop
jb
sub
lahf
cmp
mov
jno
pop
cli
push
jo
xchg
int
lret
adc
mov
sub
ss
xchg
sarb
dec
adc
add
mov
pop
mov
mov
nop
pop
push
cli
sbb
shr
call
es
and
xor
mov
leave
mov
fidivrl
jge
fwait
cmp
mov
fadds
pop
gs
pop
fisttpll
jno
xchg
push
jmp
roll
jns
out
fbld
mov
loope
or
and
cmp
inc
mov
add
inc
or
imul
dec
jg
jle
lahf
fwait
inc
daa
inc
sbb
test
push
xchg
pusha
mov
sbb
jnp
lret
add
or
adc
lods
movsb
das
aad
mov
jle
popa
call
mov
lods
cmpsl
sub
div
pop
iret
stos
hlt
pop
std
push
push
sti
pop
out
mov
push
mov
mov
mov
out
jbe
push
enter
jne
mov
mov
dec
call
out
test
mov
mov
mov
sbb
psrlq
mov
idiv
shr
push
pop
lret
pop
clc
dec
mov
lods
xchg
xchg
movsb
xor
shl
jae
ret
cmovge
popa
stos
push
mov
outsl
fs
aad
das
subl
fimuls
xlat
in
test
iret
testl
enter
sahf
sbb
cmpsb
cmp
out
add
sarb
and
mov
repnz
bound
adc
jno
in
adc
adc
ljmp
sahf
adc
cmp
mov
mov
inc
imul
ljmp
orb
movsb
sub
jns
stos
ja
or
jg
pop
popa
fidivrs
subb
cli
mov
lcall
es
jb
leave
and
leave
mov
jae,pt
sbb
xor
dec
imul
xchg
aam
insl
sarb
insl
out
insb
sub
push
mov
sub
popf
cmp
sbb
stos
bound
sbb
inc
and
add
ds
bswap
mov
and
jecxz
cmp
icebp
add
loopne
loop
mov
scas
loopne
jne
negb
out
inc
and
aas
arpl
push
aam
jno
ret
mov
mov
push
cli
or
lret
mov
adc
mov
jne
mov
lea
rol
xchg
popa
popl
jge
mov
xor
fidivs
xor
pop
in
clc
pop
inc
pop
jb
push
lods
mov
mov
cmpsb
test
lods
xor
mov
sbb
popa
aad
dec
es
out
ss
cmp
das
mov
cmpsl
mov
and
add
lahf
arpl
lds
dec
xchg
cmp
test
jg
or
ds
arpl
fisubrs
into
popl
push
cmp
sub
stos
pop
mov
adc
mov
mov
icebp
pop
push
cmp
mov
mov
hlt
and
rolb
ja
ja
mov
cmpsb
inc
push
fnstcw
lock
jbe
and
cmp
adc
shlb
scas
jle
xchg
fbstp
sbb
jbe
and
leave
push
mov
push
in
lret
inc
or
add
lods
cmp
imul
inc
push
fildl
mov
mov
push
xchg
shlb
fiadds
stc
mov
sub
adc
xchg
cmp
rcll
mov
test
mov
xchg
in
dec
or
sbb
dec
mov
xchg
mov
fcoml
mov
pop
sub
add
ds
push
pop
jne
imul
mov
mov
fcoml
push
flds
popa
hlt
pop
add
iret
xchg
mov
cmp
rolb
test
dec
or
ljmp
in
into
add
mov
in
adc
ret
in
mov
dec
loope
or
out
scas
sub
xor
mov
es
pop
or
pop
shll
xchg
mov
pushf
jg
fidivrs
mov
dec
inc
jecxz
dec
pushf
ss
push
pushf
mov
mov
xchg
pop
orl
ljmp
xor
mov
ret
push
cmpsl
daa
loope
into
mov
mov
jb
mov
add
pop
add
imul
jnp
stos
push
jb
iretw
push
push
rcrb
mov
pop
repz
rcll
sar
pop
das
and
dec
sbb
pop
testl
mov
push
int
loop
daa
int3
stc
sbb
nop
sbb
fwait
inc
aam
es
inc
push
adc
out
sarl
mulb
test
inc
jmp
xor
jno
lret
or
jbe
sbb
and
mov
aaa
inc
push
leave
dec
lods
xor
and
sahf
and
push
lds
sarb
jg
add
ljmp
dec
mov
lcall
test
repz
sub
xor
pushf
ds
mov
inc
mov
call
xchg
aaa
cmpsl
jl
mov
in
push
ja
pop
shr
push
mov
flds
jp
xor
mov
das
call
cli
std
fs
pop
add
add
arpl
sub
lds
push
xor
sub
gs
lods
das
das
jno
dec
push
cmp
push
adc
mov
mov
push
test
cs
and
sbb
aam
mov
testl
ljmp
and
bound
xor
push
or
fsts
xchg
xor
jle
and
mov
push
add
mov
icebp
jae
cmp
xchg
pop
mov
stos
mov
ret
negl
movsb
enter
mov
test
mov
cmp
xor
and
inc
lret
aad
sbb
movsb
sub
mov
popa
js
mov
cmp
xchg
or
dec
push
or
movsl
sub
mov
es
mov
xchg
cmp
lcall
sbb
xchg
cmp
mov
jb
addr16
lods
mov
cmp
out
test
push
movl
es
dec
or
daa
mov
jge
xchg
outsl
and
rcrb
mov
stos
cmp
scas
mov
lsl
mull
lea
xchg
rcrb
call
sbbl
aad
jmp
push
movsb
sub
mov
aad
lahf
jne
repz
into
out
xchg
xchg
add
insb
ret
push
stc
inc
addb
add
jle
pop
push
sbb
orb
into
aam
lret
push
rolb
jg
xchg
inc
mov
mov
roll
int
loop
pop
dec
pop
idivb
mov
jmp
stc
lret
fwait
mov
push
jge
cmc
jle
and
jne
mov
cmp
ljmp
sti
dec
xchg
push
dec
loopne
inc
add
pop
das
test
out
aad
and
jge
mov
push
lods
lahf
data16
xor
leave
call
and
lret
or
outsb
pop
or
imul
aaa
jns
scas
ret
xor
loopne
test
mov
in
and
call
fmull
mov
addr16
add
or
mov
xchg
sub
inc
mov
js
or
cmp
jnp
repz
ja
jecxz
addr16
adc
aam
cwtl
and
fisubl
iret
xchg
stos
xchg
rclb
sbb
push
ret
pushf
sbb
jl
or
aas
repnz
sub
jno
sub
mov
pushf
ds
push
sbb
xchg
jne
ret
cmpsl
lret
fidivrl
les
xchg
and
push
lret
popf
aaa
push
pop
xchg
inc
popa
pop
add
orb
jnp
test
lret
dec
adc
jl
js
push
push
mov
push
subb
js
push
push
mov
mov
dec
or
into
and
cmp
nop
popf
aas
cltd
push
iret
mov
push
and
fnstenv
inc
pop
popa
out
xchg
sbb
daa
mov
outsb
inc
ss
xchg
sub
imul
mov
push
lahf
sbb
mov
int
iret
lcall
jbe
pushf
pop
add
out
and
clc
lods
dec
adc
push
call
repnz
sub
scas
je
or
push
xor
add
movsl
cmc
movsb
inc
or
fnstenv
insl
mov
mov
jl
repnz
pusha
outsl
sub
std
jae
mov
in
jbe
jns
cmpl
inc
or
jecxz
dec
in
or
and
cmp
cmpb
add
pop
notb
int3
push
cmp
aam
mov
decl
rcr
dec
orl
push
jae
into
xchg
repz
pop
mov
ljmp
push
movsb
sub
xchg
and
sbb
pop
insb
sahf
ds
test
outsl
out
cmpsl
xor
xchg
lret
xor
jae
pop
sub
pop
pop
mov
es
in
and
inc
xor
jno
leave
mov
mov
mov
mov
jmp
insb
js
xchg
gs
mov
mov
roll
pusha
es
fwait
jle
and
movl
jecxz
imul
jae
jno
fwait
outsb
adcl
pushf
ja
rclb
and
jle
or
sbb
mov
jb
int3
test
decb
mov
das
arpl
jg
sbb
testl
xchg
cmpsb
sbb
add
jmp
stc
xchg
ds
sbb
jge
mov
outsl
add
inc
or
dec
xor
sarb
in
mov
repz
jbe
call
pusha
jmp
fidivs
lcall
pop
mov
push
cmp
gs
dec
adc
pushf
and
test
jb
sub
sarl
into
aaa
xchg
loopne
scas
xor
clc
orl
sarb
mov
imul
cwtl
mov
adc
adc
mov
gs
imul
jle
xor
sub
cmp
pop
clc
andb
fabs
jo
and
sub
inc
adc
mov
jmp
aam
jns
push
sbb
push
data16
xor
cmp
push
call
shl
mov
insl
in
sub
dec
dec
cmp
in
lock
cli
cmp
sub
pusha
jecxz
les
or
arpl
mov
xchg
and
pop
out
mov
mov
or
addr16
sub
int3
inc
or
pop
outsb
in
sahf
and
jo
enter
dec
xor
add
iret
mov
movsb
jecxz
shl
ljmp
fs
jl
test
inc
bound
xchg
xchg
mov
mov
scas
into
out
ds
sbb
adc
adc
xor
dec
push
jle
lret
push
sub
inc
push
add
push
fwait
xchg
sub
mov
xchg
mov
test
inc
or
push
lahf
fnstcw
decl
sub
dec
add
pop
add
jno
jb
adc
cmpsb
pop
add
fidivrs
dec
adc
fsubl
dec
in
fs
shl
mov
xor
ss
mov
push
stc
aaa
rolb
aam
sub
mov
add
test
xchg
jno
jle
push
call
outsl
pusha
stc
popa
loopne
pop
mov
sub
leave
xchg
ss
pushf
aas
lahf
and
jnp
call
or
jbe
push
fwait
inc
aam
scas
inc
mov
out
xchg
xchg
int
les
lea
stos
das
cmp
sti
data16
mov
adc
mov
ret
cmpsl
xor
cmp
mov
xchg
inc
xlat
ret
or
pop
jae
jge
xor
mov
mov
lahf
cmp
mov
xchg
xor
lret
mov
repnz
pop
out
aad
push
lods
jo
jbe
mov
stos
xor
add
push
scas
mov
cs
fidivrs
sub
inc
or
fs
push
sub
ss
mov
das
aaa
cmpsb
mov
xchg
inc
xor
mov
fisttps
and
mov
inc
adc
xchg
push
inc
std
movsb
imul
loop
pop
loopne
mov
ret
push
mov
lds
add
loopne
in
addr16
std
sti
pop
arpl
das
stos
cmc
adcb
dec
ret
add
mov
loopne
mov
sub
gs
ljmp
jno
fisubrl
test
aaa
inc
nop
stos
das
cli
xchg
mov
pusha
mov
shll
cmpsl
xchg
aaa
adc
push
and
xor
aam
jnp
cmpsl
or
push
fidivl
jnp
jmp
ret
xchg
repnz
imul
cmpsl
fisubrl
out
sti
pop
sbb
fiaddl
rolb
sbb
adc
mov
das
pop
test
dec
in
cld
fidivs
into
imul
push
cld
xchg
andb
and
sbb
cmpsb
cmc
cmp
es
inc
push
in
js
in
dec
cltd
je
lret
outsb
add
push
shll
repnz
mov
jno
aas
inc
xchg
into
les
hlt
xchg
in
adcl
jnp
ljmp
xor
pop
mov
fisttpll
cs
pop
add
sbbb
pop
adc
add
es
out
jp
jae
dec
insl
add
int
xchg
jmp
sbb
daa
jae
into
movsb
dec
pop
jp
push
in
negb
je
dec
out
add
popf
inc
and
lock
aas
ret
adc
inc
in
hlt
adc
ss
push
mov
sarl
mov
push
pop
dec
fisttps
scas
data16
loopne
repz
adc
xchg
das
pop
test
pop
fidivrl
in
sti
fbstp
int3
imul
dec
std
xchg
sbbb
and
sbb
movsb
repz
and
pop
clc
inc
push
out
jbe
in
dec
xchg
jne
leave
insb
add
sbb
and
outsl
adc
inc
nop
iret
retw
cmc
xchg
jecxz
test
or
cmp
mov
fimuls
mov
outsb
loop
gs
pop
add
lea
push
adc
xchg
mov
leave
fisubl
push
push
sti
push
out
js
je
dec
outsb
add
std
mov
sbb
and
inc
enter
push
in
hlt
cltd
out
lret
adc
add
sbb
and
out
nop
inc
xlat
rorl
addr16
loop
cmc
adc
test
mov
mov
mov
fidivrl
loopne
sub
addr16
fiadds
test
aam
test
test
xor
push
cmpsb
rcrl
dec
in
stc
fbstp
lret
insb
add
dec
std
xchg
jle
mov
push
lahf
sbb
mov
vdivsd
inc
push
out
je
out
dec
xchg
jne
imul
call
and
insl
adc
inc
mov
data16
xchg
loope
test
mov
adc
xor
mov
cmp
mov
fimuls
scas
fsubrs
sub
pop
add
mov
sbbl
push
adc
cmp
test
lret
mov
call
test
outsl
push
jle
sti
xchg
sti
lahf
lea
sbb
mov
repnz
inc
and
cmp
mov
rcll
cwtl
out
lret
or
jmp
pushf
sbb
xchg
sub
mov
inc
fadd
or
pop
notb
popa
out
test
mov
mov
mov
fnstcw
loopne
sub
outsb
pop
stos
addr16
fdivrl
mov
rcll
stos
add
mov
enter
pop
ja
out
neg
jbe
lret
cld
dec
std
xchg
jl
mov
dec
popf
sbb
mov
enter
push
out
jb
out
dec
xchg
jne
lds
pushf
fwait
out
sub
mov
mov
imul
flds
iret
mov
notl
mov
adc
arpl
popf
xor
test
shlb
inc
fiadds
scas
fnstenv
sub
pop
add
xor
sbb
mov
lret
xlat
and
push
push
clc
push
jmp
cmpsb
dec
jo
jl
cld
xchg
stc
popf
mov
dec
lock
inc
and
rcrb
mov
call
or
sbb
sub
mov
inc
fnstcw
fbld
adc
xchg
mov
movsb
jecxz
pushf
xor
xlat
mov
loope
sub
outsl
pop
test
testb
rcll
add
cmp
mov
push
out
cmc
loopne
daa
enter
dec
xchg
jp
lea
outsb
stos
inc
mov
ret
hlt
aas
pop
out
jo
call
or
cltd
in
sub
mov
mov
imul
popa
clc
nop
fucomp
test
mov
push
in
or
popa
add
sub
mov
mov
filds
es
push
clc
xor
sbb
int3
mov
lret
aad
rcrl
push
jmp
movsl
dec
jo
jp
std
xchg
clc
fwait
mov
dec
out
lods
inc
and
popf
inc
lret
mov
call
push
inc
out
popf
sbb
xchg
cmp
push
mov
jmp
or
imul
jle
popa
mov
movsl
loop
pushf
xor
mov
loop
sub
outsl
pop
test
add
jnp
lea
iret
adc
add
cmp
and
leave
push
mov
push
out
cmc
loope
daa
outsb
add
jp
lea
fwait
sbb
inc
sahf
in
cmp
push
ror
repnz
pop
lock
call
push
ret
pushw
popf
xchg
in
sub
mov
mov
imul
shrl
pop
popa
clc
mov
out
xchg
mov
push
loop
or
xor
mov
mov
loopne
stos
fidivl
es
push
std
clc
das
jns
sbb
push
push
lods
or
xor
rcrl
ret
hlt
push
jmp
movsl
inc
jo
js
xchg
clc
cltd
mov
dec
in
lods
inc
push
insb
cmp
popf
aas
lret
mov
call
cmovb
push
popf
push
fs
sub
push
mov
mov
or
icebp
mov
mov
cmpsb
loop
pushf
xor
sarl
jecxz
fsubrs
test
add
jns
lea
int
stos
decb
cmp
push
mov
push
call
les
testb
js
mov
lret
inc
pushf
jmp
rcrl
lret
cmp
jmp
xadd
xchg
loop
sub
call
or
mov
imul
scas
adcb
cs
movsl
pop
add
ret
mov
mov
loope
test
jb
and
call
stc
nop
sub
dec
pop
scas
jg
movsb
cmp
mov
ret
pop
dec
repnz
ljmp
jno
jbe
call
leave
pop
push
mov
ljmp
fwait
cmp
pop
icebp
in
nop
jmp
adc
pop
sahf
adc
xchg
cs
xor
mov
out
inc
fidivrl
fldenv
or
mov
jg
pop
scas
adc
mov
das
xor
mov
in
and
jo
cmpsb
imul
ja
mov
lret
adc
jle,pt
xor
dec
lahf
lds
push
jmp
and
jo
hlt
inc
add
inc
xchg
pop
mov
push
cmp
out
cmp
insb
pminsw
mov
loopne
adc
mov
gs
inc
fdivrl
xchg
push
pop
arpl
mov
icebp
mov
lods
sbbl
pop
lcall
les
rorl
add
imul
sub
push
test
lret
cld
sahf
xor
pop
dec
lock
ljmp
jno
je
add
push
pop
mov
call
cmp
bound
pop
repnz
mov
add
jp
aas
loope
sahf
adc
das
xchg
xor
dec
out
inc
fidivl
xlat
popa
clc
or
mov
scas
adc
scas
add
xor
mov
in
and
jo
movsl
insb
add
jne
mov
leave
adc
aas
jge
xor
dec
sahf
pop
shrb
jmp
and
jo
repnz
add
inc
xchg
and
cwtl
call
lret
in
cmp
or
jp
mov
fistps
mov
fs
aam
mov
arpl
mov
repnz
stos
sbbl
pop
std
lahf
ss
jle
lds
rorb
movsb
and
push
idiv
nop
sub
pop
test
pop
scas
jnp
cmpsb
cmp
int
lds
push
ljmp
jno
jb
add
lds
lods
inc
sbb
aad
cmp
bound
pop
repz
jmp
adc
filds
sahf
adc
xor
mov
dec
in
inc
fidivl
popa
clc
push
pop
hlt
mov
adc
lods
pushl
xor
mov
in
and
jo
movsb
insb
add
je
mov
enter
dec
test
jl
xor
dec
popf
pop
iret
insb
push
jmp
and
add
inc
xchg
and
xchg
out
aad
mov
pop
repz
ljmp
pop
or
adc
mov
arpl
imul
repnz
test
adc
jge,pn
lds
iret
dec
jecxz
mov
push
push
idiv
nop
sub
pop
cmpsl
dec
pop
scas
jp
cmpsb
cmp
int3
sbb
pop
dec
in
push
ljmp
jno
jno
add
les
mov
in
inc
pop
addr16
cmp
bound
pop
repz
adc
pop
cltd
xor
mov
dec
in
inc
fidivl
aam
clc
add
es
pop
lods
adc
stos
xor
das
int
push
call
in
and
jno
mov
clc
movsl
cmc
mov
daa
push
lods
clc
dec
test
jp
xor
pop
int
push
ljmp
jno
lock
add
inc
xchg
and
xchg
in
aad
mov
pop
repz
mov
mov
fcompl
mov
popa
add
xor
aam
mov
fs
xchg
repnz
test
sbb
sub
cmpsl
pop
sti
mov
lds
dec
jecxz
mov
imul
hlt
cli
xchg
es
and
cmpsl
ds
cltd
ss
sbb
pop
dec
jmp
jmp
insl
in
lahf
cmp
add
ret
mov
adc
ss
arpl
pop
hlt
call
or
fmull
lahf
or
cs
loop
inc
shlb
add
mov
stos
adc
test
lret
mov
out
push
mov
stc
nop
mov
lds
scas
testb
js
ss
cltd
pop
lret
imul
mov
add
inc
xchg
and
xchg
jecxz
adc
int
call
or
cmpl
jnp
mov
ficompl
mov
pop
add
xor
gs
test
repz
adc
sub
stos
dec
mov
in
lahf
fnsave
insb
add
sti
xchg
and
mov
mov
les
into
enter
dec
jmp
in
popf
cmp
insl
mov
xchg
sub
adc
mov
adc
xlat
xchg
xor
fs
cmc
out
jmp
mov
fimull
mov
lea
mov
loopne
inc
fsubrl
shlb
add
lea
test
stos
fnstenv
cmpsl
cli
xor
sub
mov
out
sbb
jae
sahf
outsb
add
mov
ret
sbb
jbe
aaa
into
inc
xchg
enter
push
in
cwtl
ljmp
in
cmp
xchg
sub
and
xchg
loope
xlat
adc
cmc
fs
in
test
test
pop
or
or
mov
fidivs
jg
insl
mov
gs
adc
mov
sbbl
and
mov
test
lret
sti
popf
fnsave
insl
add
lock
xchg
and
and
ret
test
into
push
enter
push
in
sbb
jge
cmp
imul
sub
fildll
fcoms
mov
mul
test
xorb
or
mov
daa
mov
fistpll
lods
add
jo
into
arpl
call
mov
cmpsb
adc
aaa
movsl
clc
xor
sub
mov
call
dec
pushf
outsl
push
into
insl
sti
xchg
lahf
out
lea
rcrl
repnz
stos
inc
je
cmp
inc
xchg
leave
pusha
gs
in
xchg
call
je
ljmp
sub
pop
mov
nop
filds
adc
pop
mulb
out
test
cmpl
pop
or
mov
fwait
xor
stos
sub
fsubrl
mov
fildll
jge
outsb
scas
dec
data16
adc
mov
mov
adc
daa
jbe
enter
push
jp
dec
out
fidivs
sbb
dec
out
cld
xchg
and
and
shrl
les
pusha
inc
in
in
push
push
je
imul
and
fnsave
fsts
mov
mul
sub
mov
jg
ss
or
mov
sub
fnstsw
int
sti
push
testl
aad
mov
lret
mov
call
dec
lcall
sahf
in
lea
rcrb
icebp
inc
stos
inc
jb
cmp
inc
xchg
leave
pusha
lds
xchg
out
jle
mov
or
cmp
sub
and
fldl
push
mov
jcxz
pop
mulb
out
xchg
cmpl
mov
fwait
xor
stos
sub
mov
loopne
jnp
outsb
lods
dec
addr16
jg
cmc
mov
mov
adc
es
enter
pop
jns
dec
out
lcall
dec
in
std
xchg
pop
insb
mov
sahf
inc
sbb
icebp
xchg
cmp
ret
adc
pusha
inc
in
out
adc
ss
push
mov
mov
push
pop
inc
mov
mul
sub
mov
jg
xor
or
mov
sub
pop
test
inc
fisubrs
int3
gs
std
dec
testl
shll
cmp
vxorps
inc
push
call
dec
cwtl
outsl
push
lret
xchg
popf
jmp
and
mov
stos
inc
jo
cmp
inc
xchg
leave
pusha
ret
arpl
xchg
in
jle
mov
or
push
mov
mov
mov
inc
fmuls
shrl
sub
lock
push
push
movsl
xchg
fwait
xor
sub
fisubl
dec
loope
jns
outsb
stos
dec
push
mov
lahf
xchg
push
repnz
cmp
xor
mov
les
cmc
cwtl
loopne
lret
push
dec
jmp
xchg
sbb
ds
outsl
mov
cmp
rcll
popa
inc
loop
out
adc
xchg
xor
or
call
or
dec
or
inc
fimull
scas
popa
clc
filds
adcb
rorl
add
sahf
xor
push
cmpsl
mov
fildll
lret
sti
dec
clc
jg
test
mov
mov
lret
and
rcrl
push
jmp
dec
xchg
jo
enter
fwait
jmp
sbb
out
cmp
inc
outsb
rolb
lret
popa
pop
lock
loop
jg
mov
push
out
push
popf
popw
xchg
sub
mov
flds
or
pusha
negl
mov
jge
adc
test
pushf
xor
cmpsl
sub
push
push
stc
dec
loop
ja
outsl
test
lret
cld
sahf
xchg
rcrb
movsl
cmp
jo
lret
ret
pop
jbe
push
call
leave
adc
pop
inc
ljmp
lcall
inc
in
cmp
rorb
bound
pop
lock
adcb
sahf
out
xchg
sub
pop
es
or
fisttpl
lods
stc
fnstsw
xchg
rorl
xor
push
movsl
mov
loopne
clc
fidivl
lret
sti
dec
clc
jge
xchg
iret
outsl
movsb
cmp
ret
ret
inc
push
jmp
dec
xchg
jo
imul
and
out
cmp
inc
lret
popa
pop
icebp
xchg
loopne
jg
mov
xor
popf
fs
xchg
cmp
mov
mov
inc
scas
shrl
sub
pop
add
mov
jnp
adc
test
pushf
xor
cmpsl
cs
mov
jecxz
jne
outsl
cmpsl
dec
push
jge
testb
sbb
cmp
lahf
inc
les
rclb
xchg
loop
leave
adc
inc
ljmp
cwtl
cmp
mov
mov
cmp
mov
loopne
icebp
adc
adcb
pop
sahf
in
xchg
sub
fdivs
mov
shrb
stos
stc
fstpt
xchg
rorb
movsl
add
xor
push
mov
dec
loope
neg
jno
leave
push
jnp
xchg
dec
pushf
push
lods
int
movsl
cmp
out
xor
pop
ret
hlt
inc
push
jmp
inc
xchg
jo
les
xchg
cltd
in
and
in
cmp
ds
popa
mov
fsubrp
jg
mov
adc
xor
popf
bound
and
mov
mov
mov
inc
flds
lods
aam
fisubs
pusha
negl
repnz
jp
adc
or
xor
movsb
cs
mov
jecxz
je
jo
dec
push
jp
testl
dec
out
cmpsb
cmp
sahf
inc
les
mov
loop
adc
inc
out
xchg
sbb
es
cmp
mov
mov
cmp
mov
fstpl
push
pop
ljmp
mov
lahf
jecxz
xchg
sub
xor
push
inc
fmull
test
lock
iret
push
movsl
add
andl
mov
loope
cmc
push
nop
jp
xchg
dec
fwait
pop
scas
int3
imul
push
mov
push
ljmp
jno
ret
add
push
mov
lods
inc
imul
lret
bound
jmp
adc
xor
sahf
popa
add
mov
xchg
inc
fiaddl
es
clc
push
cld
repnz
add
arpl
adc
call
jmp
add
pop
mov
fpatan
jo
mov
and
cmp
mov
dec
mov
xor
test
sbb
push
add
or
pusha
ss
jle
das
mov
rclb
sub
xor
mov
push
mov
cmc
push
stos
das
dec
aas
jnp
cmp
jno
ds
jge
cmpl
push
rcr
cmpl
sbb
pushf
mov
iret
aaa
mov
nop
repz
inc
sbb
dec
adc
icebp
fildll
sub
pop
shlb
inc
sbb
adc
cltd
out
mov
sarl
imul
int3
adc
xchg
add
ret
cmp
xor
iret
adc
das
mov
push
rorl
jne
clc
leave
out
subl
sub
cmp
movsl
push
inc
or
imul
mov
insl
push
pusha
mov
aaa
ja
lds
and
out
mov
jge
pop
mov
in
clc
cs
push
lock
xor
cmp
mov
cmpsb
vminpd
jae
xchg
pusha
mov
incb
fildll
ds
arpl
in
push
pop
add
mov
idivl
mov
xor
dec
ljmp
mov
stos
into
movsb
lods
sub
lock
add
in
ret
inc
testl
mov
ret
into
sbbb
dec
cmp
or
stos
jno
iret
dec
mov
xchg
out
mov
es
test
mov
jbe
xchg
mov
jne
push
mov
lahf
mov
lret
jno
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
test
sub
sbb
mov
rcrl
mov
mov
push
pop
iret
outsl
mov
stos
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
ja
push
mov
rcrb
mov
pop
xor
and
xchg
push
pop
push
test
xor
sbb
out
popf
sbbl
xchg
jnp
imul
xchg
insb
mov
inc
rcr
jg
dec
js
mov
or
ljmp
lahf
icebp
adc
test
test
jno
pop
movsl
pop
movsl
sub
mov
mov
sub
out
js
push
pop
sahf
or
imul
push
and
bound
lods
or
push
cmp
das
lods
in
sub
lock
jae
adc
cwtl
dec
fs
sti
loop
in
xchg
xchg
stos
mov
or
fisttpl
adc
pop
jl
ret
inc
mov
sub
rclb
lcall
and
mov
pop
jae
shlb
jp
popa
icebp
shll
cs
push
dec
inc
add
dec
mov
movsb
dec
jno
sahf
xchg
mov
dec
pop
sbb
int
lock
jnp
cltd
sub
cmp
fwait
daa
add
inc
movsl
jno
inc
lods
out
loope
iret
jp
ret
hlt
pop
clc
inc
addr16
in
fdivs
sub
sarb
push
loop
xor
jp
xchg
or
pushl
add
lret
adc
loope
mov
dec
ss
push
jmp
mov
test
sub
lds
pop
or
lea
and
cmp
xchg
and
pushf
sbb
mov
loop
and
pop
pop
sbb
mov
add
dec
aas
mov
sbb
mov
insb
adc
loopne
inc
sti
repnz
adc
leave
insb
into
and
aad
rcrb
pop
cld
imul
lahf
xchg
insb
in
ret
add
cltd
pop
xor
shll
stos
cmp
jns
addr16
pop
and
cmp
mov
popa
cld
mov
out
push
data16
mov
xor
