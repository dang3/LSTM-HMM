testb
jl
inc
add
aam
mov
mov
and
cmp
shlb
jns
cmp
or
cmp
sbb
sbb
xor
dec
loopne
xor
xor
je
fcomps
out
adc
adc
sbb
and
and
adc
mov
inc
add
adc
adc
sbb
jns
int3
sub
nop
jecxz
xor
xor
fs
out
fsubl
inc
adc
add
popf
dec
data16
mov
adc
in
repnz
xor
adc
jecxz
and
out
adc
inc
inc
sahf
adc
mov
mov
test
mov
mov
xor
add
shlb
call
jmp
xor
das
ret
aaa
fistpl
ror
inc
movsb
sub
sub
mov
add
dec
pushl
outsb
jne
add
and
int3
xor
inc
push
mov
mov
lds
std
sahf
mov
incl
pop
xchg
scas
lret
loop
cmp
sbb
mov
mov
jb
dec
lods
xor
fildl
nop
incb
stos
add
xchg
xchg
mov
or
add
outsl
fs
je
add
jae
popa
outsb
out
outsl
mov
addr16
incl
add
xchg
inc
add
add
sub
fldt
ss
add
and
pop
lods
loopne
fisttpl
call
movnti
fucomi
sub
push
add
sub
push
ja
mov
add
addb
rolb
sarb
add
incl
xchg
add
jnp
add
xchg
mov
movq
add
ja
pop
and
mov
outsb
add
jo
out
outsl
add
cs
and
inc
pop
and
insb
fcomp
xchg
ud0
pop
pusha
push
pop
sbb
aas
mull
adc
xor
push
and
pusha
mov
cmp
ja
cmp
aaa
jnp
jg
push
jo
setg
idivb
pusha
xchg
cmp
ja
out
invd
popw
jle
add
pop
jo
addr16
add
mov
mov
mov
call
clc
getsec
and
mov
pop
add
pop
push
idivb
cmp
inc
psubb
mulb
divb
popa
cvtpi2ps
add
pop
clc
add
pop
jae
jbe
das
jae
bound
pop
rorl
loopne
jo
nop
and
int
insb
mov
adcb
sar
subb
loopne
jae
jge
lock
incl
add
shll
out
addl
sbb
sbb
adc
xchg
out
lahf
jne
cmp
pop
cmp
outsl
pop
pop
sub
cld
push
pop
out
push
xchg
xchg
sbb
dec
xor
das
pop
pop
jg
js
cmc
mov
sbbb
or
jb
loopne
clc
in
mov
and
sub
into
out
arpl
lock
jmp
fcomps
or
xor
cs
mov
adc
or
adc
pop
mov
nop
add
inc
jb
popa
insb
inc
sub
add
add
push
add
je
aaa
cmp
cs
adc
adc
push
push
or
imul
fs
cmp
aas
or
and
cld
gs
mov
add
daa
push
ja
or
insb
mov
aas
es
bound
insl
mov
in
and
add
xor
mov
and
addr16
sbb
xor
xor
ret
fsubr
add
add
out
in
aad
imul
dec
push
add
sub
sub
inc
pop
jbe
loopne
insl
insl
mov
add
subl
add
push
in
inc
sbb
xchg
or
icebp
adc
aam
inc
fmul
out
and
add
int
sbb
push
outsb
or
mov
mov
rolb
iret
icebp
adc
or
xor
enter
xor
sub
or
jg
in
fists
adc
jae
pop
rcrl
push
repz
lock
sbb
mov
sbb
sbb
add
and
adc
outsb
shll
mov
and
sub
sub
or
add
je
imul
outsl
mov
push
scas
and
sbb
arpl
push
insb
jae
lret
push
inc
popa
xor
and
es
adc
dec
insb
mov
imul
add
fsubrs
push
and
and
push
dec
push
and
jae
push
imul
and
xor
mov
push
cmp
cmp
adc
xor
sbb
cmp
sahf
mov
or
rclb
push
xor
sbb
js
fs
and
lcall
add
lcall
pop
xor
mov
dec
outsl
outsb
sub
sbb
roll
outsb
add
out
and
movsb
pusha
ljmp
sbb
sbb
adc
mov
orl
pop
xchg
inc
push
fstps
xorl
out
jne
bound
and
out
and
and
pop
enter
jp
aas
add
xor
push
jmp
fs
lock
xor
sbb
movsb
and
sbb
cli
mov
mov
sbb
addl
mov
and
push
sti
xor
and
or
sbb
and
insb
sbb
or
enter
daa
and
push
or
sarl
sub
xorl
sarb
pop
in
and
add
jle
sbb
fs
or
fs
adc
sub
roll
popa
cltd
mov
jge
adc
sub
sbb
ss
out
insb
nop
adc
xor
addb
and
xor
int3
pop
xor
sbb
add
ret
adc
push
and
lcall
sub
or
lods
nop
nop
mov
ss
mov
xor
outsb
insl
push
movsb
jmp
jo
mov
or
test
xor
out
pop
inc
inc
jb
jbe
adc
add
pminub
das
push
add
or
arpl
mov
inc
imul
adc
jl
pop
out
xor
fs
iret
mov
arpl
xor
fcomi
sbb
xor
inc
sbb
push
lret
jmp
ss
add
push
pusha
sbb
sbb
cmp
mov
out
jns
push
sbb
xor
ds
popl
sub
and
jecxz
xor
and
insl
fldenv
fildll
push
jmp
xor
cmp
stos
add
imul
daa
gs
enter
dec
add
cmpsb
cltd
test
loopne
mov
cmp
xor
inc
add
test
js
sbb
adcl
popa
mov
ds
inc
jb
add
movlps
andl
xor
aas
and
or
lock
pop
pop
ret
inc
jo
je
add
rcrb
dec
push
mov
and
adc
adc
mov
inc
push
dec
adc
push
xchg
add
sbb
incl
or
or
add
leave
outsl
movups
adc
or
ret
jecxz
adc
pop
push
inc
xor
and
es
jle
or
repnz
cmp
stc
inc
insl
or
add
jo
inc
mov
imul
test
push
jae
jbe
pop
insl
addr16
fiaddl
sbb
xchg
cmp
add
xor
adc
call
add
mov
and
in
jb
jge
push
scas
adc
xor
jle
adc
dec
mov
mov
add
rorb
dec
stos
std
xchg
pop
test
mov
or
int3
xchg
cmp
jmp
mov
in
add
xchg
add
mov
sub
add
and
int3
mov
sbb
into
in
push
push
xchg
add
sbb
cmp
mov
shrl
shrb
fildl
lods
pop
call
pop
mov
mov
adc
xor
add
je
cltd
in
mov
lret
xchg
setp
jb
push
xchg
push
inc
add
insb
in
imul
cld
pushf
mov
orl
sub
popf
sub
and
sbb
data16
cmp
xchg
sub
addb
lahf
or
iret
xor
adc
es
add
lahf
pop
aam
fs
and
nop
and
in
or
pop
xor
pop
xor
pop
mov
je
xchg
nop
pop
mov
int3
or
sbb
add
out
test
sbb
cltd
fcmovnu
lcall
cld
sub
mov
mov
fisttps
in
push
rorb
fldcw
xchg
adc
adc
or
insl
mov
mov
jl
lahf
mov
movsb
cmp
insb
add
jg
add
cmpsl
mov
aam
push
add
push
inc
imul
std
dec
pop
mov
sub
fcomps
sub
imul
jb
cmpsb
clc
adc
mov
sbb
insl
mov
add
scas
in
jb
xor
add
pusha
fiaddl
nop
dec
mov
sub
fstps
das
lock
daa
and
inc
jmp
call
call
incl
pop
bound
cmc
pusha
out
fdivrl
les
add
movl
dec
das
inc
inc
pop
adc
int
add
or
dec
shlb
push
lret
jl
js
jecxz
bound
das
push
ret
hlt
daa
inc
mov
into
sbb
aaa
outsl
push
mov
jnp
adc
enter
add
pop
or
pushf
xor
ficoms
fidivrl
inc
adc
es
or
adc
cmpsb
cmpsb
cltd
mov
adc
xor
and
add
inc
sub
test
pop
cmpsb
sbb
callw
inc
cmp
pushf
popf
push
movl
pop
or
fcmovne
insb
xchg
leave
adc
adc
fs
insb
xchg
fisttpl
js
add
es
xor
push
sub
pop
or
pop
outsb
int
pop
outsb
sbb
jnp
jns
cli
xchg
mov
or
cmpb
adc
cwtl
sahf
xchg
jge
inc
enter
cwtl
and
insb
sub
sbb
lock
clc
add
pop
xlat
lahf
add
mov
jl
js
mov
sub
push
repz
add
add
mov
int3
mov
out
xchg
sbb
test
test
das
hlt
pop
iret
addr16
xlat
lock
leave
fadds
fdivrp
mov
cmp
mov
add
aad
ret
sbb
xchg
lock
divb
sbb
leave
lea
sbb
xchg
mov
loop
or
aam
xchg
scas
fnsave
rorb
fstp
pop
leave
mov
xor
push
dec
mov
fidivrl
pop
add
jnp
loopne
iret
mov
imul
cmpsl
add
mov
add
into
aam
outsl
cmc
add
out
aam
adc
xchg
lock
and
xchg
adc
add
add
inc
adc
fldcw
xchg
sub
push
sahf
pop
sub
ja
sub
daa
aaa
jbe
pushf
out
inc
call
addl
pop
mov
xlat
mov
sub
lock
add
inc
imul
out
inc
aaa
dec
out
jnp
pop
jb
adc
pop
pop
popa
jnp
scas
lret
out
aam
lea
xlat
aas
jg
add
je
jne
bound
aaa
outsb
mov
arpl
ljmp
ljmp
verw
sbb
bound
repnz
stos
mov
or
mov
inc
jg
sub
pop
mov
lret
andps
inc
sub
mov
addl
data16
inc
jo
lock
xlat
js
lcall
mov
mov
cmp
pop
pop
lock
roll
movsb
pop
and
out
mov
outsb
fisttpll
flds
sbb
inc
filds
xchg
notb
int3
push
xor
jns
dec
push
sbb
rcr
mov
inc
fistps
jb
adc
mov
inc
xchg
int
nop
sub
ret
cmp
sub
adc
ret
xor
push
dec
jl
das
pusha
adc
xor
adc
nop
mov
pushf
lret
in
imul
jmp
mov
adc
int3
adc
push
pop
nop
pushf
pop
pop
repnz
inc
or
jmp
shrb
fs
dec
and
inc
inc
in
gs
sbb
and
xlat
in
test
addr16
mov
mov
fdivs
fcoml
push
das
das
insb
pop
and
jmp
loop
mov
adc
fcmovnbe
loope
int3
mov
mov
movsb
add
adc
dec
fwait
pusha
xor
addl
fldt
std
push
or
clc
mov
mov
adc
push
insb
in
ret
cltd
cs
xor
rclb
inc
js
lret
int3
addl
adc
ficoms
subl
or
add
adc
xchg
sub
push
add
popa
popa
mov
subl
and
mov
dec
addr16
inc
scas
jae
jmp
fwait
je
sbb
hlt
xlat
dec
sar
sbb
add
add
imul
loopne
mov
clc
sahf
sbb
dec
mov
pusha
add
inc
sub
xchg
out
in
test
add
jbe
imul
fmull
bnd
enter
cmp
out
xchg
or
repnz
xchg
xor
test
xchg
or
add
pop
sub
fnstenv
inc
jo
push
mov
dec
push
add
movsb
adc
xor
dec
xor
dec
fwait
popf
fsubl
cmp
mov
fwait
mov
pop
pushf
daa
mov
xchg
in
enter
and
fdivs
mov
add
rcrb
fwait
mov
jg
in
jp
cmpsb
insl
add
arpl
push
das
leave
dec
xchg
add
and
fs
push
pop
mov
lret
les
xor
xlat
insl
mov
or
int3
pop
inc
mov
xlat
xor
in
rcr
pop
add
data16
fwait
hlt
call
and
add
pop
xchg
sbb
cld
frstor
mov
mov
or
pop
cwtl
sub
lods
mov
inc
push
jle
out
sub
pop
ss
jp
cmp
fwait
in
sub
and
das
push
mov
sbb
jo
adc
dec
and
int
aam
and
test
mov
inc
pavgb
popa
ja
lahf
jg
out
inc
or
movsb
out
divl
mov
dec
or
sbb
test
popa
jo
popf
stos
lret
push
pop
mov
jbe
cmpsl
xor
pop
add
mov
pop
xor
mov
fs
cmp
dec
arpl
insb
or
sti
das
jg
sub
and
cmovns
fdivl
hlt
jo
add
inc
fstpl
js
das
pshufw
mov
cmp
mov
jo
bound
mov
cmp
xchg
xchg
pop
sbb
repz
and
repnz
mov
and
sbb
jecxz
fmuls
jnp
jne
in
or
xchg
mov
mov
pusha
leave
lea
xor
std
outsl
xorb
pop
pushf
pop
adc
add
inc
insb
lcall
or
inc
jnp
nop
jnp
pop
ss
lcall
inc
lahf
mov
xlat
jne
sub
nop
mov
sbb
xchg
pop
in
repz
push
cmp
insb
mov
mov
add
and
mov
movsb
int
in
add
pop
pop
xchg
sbb
sbb
pop
mov
cmpl
rolb
sbb
out
lret
insb
or
iret
orb
pop
adc
dec
fbstp
in
add
addr16
cmc
jnp
insb
add
mov
dec
xlat
sbb
cwtl
repz
in
jnp
je
push
or
add
cmp
mov
jl
cmpsl
xchg
mov
dec
push
inc
iret
ja
mov
jns
pushf
mov
repnz
fimuls
jo
mov
pop
aam
or
cmp
cvttps2pi
cs
aaa
cmp
add
mov
imul
fwait
lock
sti
cmp
jo
pusha
jne
mov
mov
aaa
sti
mov
add
xor
jge
lcall
cmp
xor
push
dec
adc
andps
lcall
and
mov
add
jmp
pop
lods
int3
jecxz
or
bound
or
enter
mov
cmp
mov
inc
dec
daa
int3
and
jg
xchg
sub
int3
xor
cld
push
sbb
add
push
add
and
jno
push
add
add
call
stos
jno
outsb
hlt
in
cld
insb
add
add
mov
xchg
xor
push
and
sbb
cmp
nop
scas
or
lcall
lcall
sbb
xchg
sbb
rolb
add
or
fmuls
mov
scas
inc
xchg
imul
push
mov
xlat
pop
fwait
inc
lahf
not
data16
rolb
pop
add
pusha
adc
sub
sub
enter
enter
xor
add
xchg
or
pop
mov
add
cmpb
les
cs
xchg
inc
lahf
mov
xchg
das
js
inc
arpl
je
test
add
xor
rcll
pop
jo
inc
add
xchg
pop
xlat
sbb
mov
or
cltd
pop
adc
adc
fs
fmulp
fmulp
adc
adc
push
jge
pushf
daa
nop
and
xchg
enter
sub
sbb
sub
jl
clc
cmp
cmpsl
fsub
mov
dec
jnp
mov
fdivl
mulb
add
lds
cmp
lcall
push
mov
arpl
pop
sbb
fisttpll
dec
jg
out
xor
sbb
fnstenv
je
in
mov
fbstp
mov
out
sub
cwtl
adc
xchg
pop
in
cmpsl
andb
fwait
pushf
imul
sti
or
cmp
pusha
xor
insb
xchg
mov
pop
sti
xor
add
fs
mov
add
pop
xlat
pop
cs
inc
mov
clc
jne
fcompl
cmpsl
inc
ret
outsb
frstor
sub
xchg
movsb
lock
addr16
sub
jg
call
dec
push
jno
xchg
adc
add
sbb
and
clc
icebp
fdivrl
cmp
xchg
mov
xchg
movsb
in
das
cmp
xchg
xor
and
xchg
jle
xor
mov
and
add
and
aaa
pop
xchg
dec
add
sub
add
cmp
rcrb
pop
mov
ja
jne
fwait
jmp
adc
ja
jo
mov
addr16
sub
ss
jnp
add
pop
or
jge
imul
or
xlat
mov
pop
stos
add
mov
jb
popa
outsl
or
fldenv
xor
and
jae
jne
inc
and
imul
insl
mov
xor
gs
lods
test
adc
gs
jne
mov
adc
sbb
or
in
lock
xchg
inc
jl
xchg
enter
outsl
inc
inc
pop
mov
insb
cmp
outsl
adc
sti
adc
lods
rcll
add
add
xlat
or
pop
xchg
mov
xorb
arpl
add
dec
mov
push
xchg
add
fcompl
inc
or
sub
es
push
cld
pop
sbb
jbe
add
unpcklps
pop
cmp
je
xor
mov
adc
and
push
fs
xor
js
cmp
data16
dec
mov
lret
sbb
inc
mov
push
hlt
jns
into
inc
ret
pop
and
daa
push
xchg
push
ja
pop
nop
mov
xchg
cmovge
xor
stos
add
out
cmpl
add
aas
aas
nop
es
push
nopl
xchg
fisttpl
and
sub
daa
xor
and
dec
pop
adc
mov
imul
mov
push
add
sub
xchg
inc
adc
sub
aam
inc
mov
fwait
in
hlt
int
push
into
cld
pop
inc
aas
fstps
jp
pop
mov
sub
inc
add
fwait
cmpsb
mov
cmp
lods
dec
sarl
pop
add
dec
mov
ss
or
cmp
mov
adc
jl
ss
mov
sub
movsb
rolb
sub
cmpsb
pop
dec
sar
dec
je
xchg
dec
rcrl
call
xor
fcoms
fwait
mov
add
iret
into
jne
je
mov
ds
dec
daa
iret
xor
rorb
insb
test
cmp
insb
mov
pop
clc
pop
pop
in
int3
inc
scas
jmp
mov
cmp
add
and
lcall
ja
push
or
fs
movsb
scas
jmp
mov
in
das
xor
rolb
popf
mov
mov
sub
roll
fmuls
add
pop
pop
test
push
inc
outsl
cmp
js
rcl
popf
aam
add
push
jl
mov
mov
testb
sbb
decl
add
pop
icebp
mov
cs
aas
add
xor
push
or
push
add
add
push
or
mov
hlt
add
mov
add
and
mov
and
orl
lods
jg
mov
inc
rcl
pop
stos
inc
imul
xchg
xlat
cs
inc
jae
test
xchg
lods
stos
mov
lds
mov
sbb
ret
jecxz
jns
aas
jae
cs
dec
insb
stos
adc
imul
fidivrs
fstpl
mov
lea
jns
ret
imul
xchg
jg
mov
rolb
jns
sub
loopne
mov
nop
ret
pop
loopne
int3
lock
xchg
rorl
repnz
call
das
jns
fdivrs
lds
xchg
mov
xchg
loopne
pop
repnz
dec
or
leave
dec
adc
insb
stos
adc
xchg
adc
pop
repnz
jnp
fidivrs
add
sbb
or
in
andb
loopne
pop
inc
pusha
orl
mov
or
pop
jl
pop
pusha
add
mov
inc
dec
sbbl
inc
sbb
in
clc
cld
mov
in
inc
push
sbb
sbb
cmp
lock
sbb
in
fsubr
mov
and
pop
lock
sbb
in
daa
pop
sbb
mov
cwtl
in
cmp
cmp
and
jmp
enter
cmp
xchg
out
in
leave
xchg
addr16
xor
call
cmp
repnz
jecxz
jecxz
loop
loop
xchg
daa
dec
or
pop
loope
loope
jns
in
loopne
loopne
loopne
fists
fidivs
adc
jns
in
fnstsw
fucomp
fsubl
dec
sahf
cmp
fmul
fstpt
xor
in
xchg
fucomi
ficompl
cmp
add
lods
flds
fnstenv
or
call
xlat
leave
xchg
daa
dec
clc
mov
cmp
enter
test
fs
leave
inc
dec
and
aam
aam
push
jb
pop
aam
rcll
daa
pop
rcrl
rorb
cmp
pushf
shlb
test
pusha
shll
enter
rcl
rcl
dec
sahf
cmp
sbb
fmul
nop
iret
dec
iret
repnz
daa
or
into
jo
dec
sahf
cmp
cmp
aam
push
lret
enter
mov
insb
leave
and
cmp
ror
test
xor
mov
daa
insb
cmp
mov
sahf
cmp
bnd
cmp
hlt
in
daa
dec
add
hlt
les
cmp
test
dec
les
test
in
xchg
daa
cmp
hlt
ret
sahf
cmp
repnz
rol
mov
cmp
leave
xchg
daa
dec
loopne
xchg
rorb
cmp
add
cmp
daa
dec
mov
pusha
mov
jns
mov
mov
leave
xchg
daa
jl
xor
in
mov
cmp
test
push
mov
les
js
cmp
jns
pushf
mov
mov
mov
in
xchg
daa
insb
mov
mov
mov
cmp
bnd
sub
call
xchg
daa
dec
pop
mov
mov
mov
jns
in
mov
scas
pushf
scas
dec
scas
leave
xchg
sbbl
jns
in
scas
loopne
mov
dec
sahf
in
lods
test
pusha
lods
sbb
in
nop
sbb
and
pop
lods
stos
push
in
inc
push
sbb
mov
enter
insb
sub
mov
cwtl
dec
sbb
sbbl
sub
loopne
mov
mov
jae
dec
lahf
dec
out
jb
movsl
jae
int3
and
dec
aaa
ror
jne
shlb
mov
nop
pop
into
andb
xchg
xor
push
in
or
popa
cmp
iret
test
aas
inc
scas
fadds
aam
in
inc
addb
sub
int3
aam
fnstenv
mov
fdivs
out
jmp
adc
inc
jo
mov
jne
inc
sub
scas
je
mov
push
adc
pop
adc
movsb
mov
dec
xlat
xor
movsb
pop
mov
mov
mov
je
lahf
lods
cmp
adc
jecxz
fwait
sti
enter
fildll
scas
mov
sbb
cmc
stos
cmpsb
jmp
hlt
sub
sub
cmp
es
sysenter
sbb
and
inc
aaa
push
in
adc
mov
ja
xlat
cmp
pop
inc
orl
pushf
lcall
add
addr16
inc
scas
jnp
out
add
adc
fsts
iret
jae
xchg
inc
add
jne
adc
mov
dec
and
jae
xor
lock
fwait
pop
xchg
xor
lret
lods
jnp
and
mov
orb
data16
pop
lcall
ljmp
sub
push
mov
mov
call
fwait
xor
and
add
mov
sub
pop
sbb
xor
decb
clc
and
lret
push
dec
sub
mov
pop
test
push
imul
or
pusha
add
clc
daa
les
in
push
push
pop
add
jnp
xchg
sbb
xlat
dec
enter
mov
repz
push
sbb
inc
push
lcall
cmpsl
mov
imul
inc
imul
insb
xchg
int
dec
push
arpl
push
fbstp
push
shll
stos
shll
sti
andps
aaa
lcall
fwait
scas
ret
xor
mov
xlat
adc
cmp
xor
rorl
addb
pushf
and
ffree
sbb
notl
test
sbb
lret
jp
dec
jnp
mov
out
addb
xchg
add
xchg
inc
orb
loopne
jl
xorl
pusha
fucomi
adc
aam
adc
adc
mov
and
call
xor
adc
dec
pop
leave
call
popf
fsts
ja
rorl
sbb
xchg
cmp
mov
cmp
adc
xlat
dec
and
lods
in
sub
sub
or
mov
daa
icebp
pop
leave
sub
mov
xchg
iret
mov
xchg
inc
and
xchg
push
repnz
xchg
shrb
mov
leave
dec
mov
add
dec
adc
stc
mov
push
popf
je
add
dec
push
getsec
xor
imul
xor
dec
outsb
rcrl
pop
mov
push
addr16
into
incb
insb
add
or
lret
in
pop
pop
and
dec
rolb
mov
pop
out
je
div
pop
das
xchg
mov
hlt
add
rorl
fldl
xchg
mov
pop
insb
dec
gs
pop
and
je
mov
push
cwtl
push
and
xchg
fstpt
mov
or
daa
pop
pop
jecxz
sub
scas
jae
xor
pop
adcb
xor
shll
call
fisttpl
lret
ret
add
inc
dec
shll
nop
or
insl
sarl
sbb
lahf
inc
mov
fistps
jae
cltd
xlat
je
loopne
pop
or
mov
ss
push
das
sub
cmp
xor
add
int
sbb
pop
inc
int
enter
cmp
mov
xchg
lcall
scas
test
inc
xchg
adc
rolb
pop
add
or
cmp
cmp
mov
xor
mov
adc
add
xor
out
push
roll
sbb
pop
add
cmpsb
imul
popf
movsl
jmp
add
mov
sbb
dec
and
push
enter
add
adc
mov
pop
push
xor
fsubrl
pushf
pop
mov
in
lcall
pop
ja
scas
sbb
je
addb
in
les
in
in
sahf
mov
and
sub
dec
lcall
add
lcall
test
mov
imul
xchg
mov
filds
fstpl
add
testl
or
jo
lock
lcall
mov
fsub
iret
xor
dec
out
jmp
call
lcall
cmp
imul
aaa
test
add
out
pop
push
imul
fsubrl
xor
aam
add
ljmp
in
or
les
clc
add
add
je
mov
sbb
mov
push
shll
orb
dec
add
repz
inc
push
nop
pushf
repz
hlt
call
shll
add
shlb
test
imul
outsb
shll
mov
je
jbe
roll
stc
add
cltd
xchg
lock
sub
add
aad
mov
jae
sti
sti
xor
fwait
incl
jmp
and
mov
xor
insl
lcall
mov
cmp
enter
aas
or
scas
imul
out
je
or
and
or
xlat
jne
or
sbb
dec
shll
test
mov
sub
shl
adc
pop
fnstenvs
xchg
push
loopne
lods
test
add
les
sub
imul
lock
out
in
int3
or
sti
in
clc
cmpsl
cmp
dec
idivl
push
lret
push
int3
das
add
lock
out
or
dec
add
sub
xor
xlat
sar
inc
inc
pop
push
add
shll
pushf
les
xor
rcr
hlt
add
lcall
push
push
imul
rcr
call
lret
add
adc
sysret
lcall
push
inc
pop
or
xor
add
cmp
roll
sarb
push
jnp
sbb
add
pop
add
aam
pop
into
je
data16
pop
fisttpl
add
mov
lcall
das
add
mov
insb
cmp
dec
mov
cmp
imul
cmp
imul
aam
loopne
into
xor
in
or
or
add
pop
pcmpeqb
ljmp
sbbl
cmovl
push
je
jo
insb
add
or
or
fwait
addb
fs
jnp
inc
arpl
push
sub
pop
sub
mov
shl
jns
dec
out
popf
add
inc
lcall
pop
lsl
adc
mov
scas
jnp
out
paddb
enter
mov
mov
cmp
inc
daa
or
jae
scas
jae
add
sub
mov
lcall
lods
out
jne
cld
test
fwait
adc
adc
adc
xlat
sub
adc
mov
cmp
add
jne
loopne
sbb
add
je
mov
sbb
add
push
sbb
sbb
xlat
fdivl
cmp
jmp
pop
and
add
insb
and
test
pop
mov
or
mov
jae
imul
les
subl
add
cmp
movsb
sub
sub
jmp
fldt
xchg
cs
sub
pop
dec
inc
inc
jae
xor
pop
adc
xlat
xor
fldenv
add
in
and
jne
adc
add
aaa
or
add
push
ror
int3
inc
or
dec
sarl
push
xchg
lods
cld
adc
and
cmpsl
mov
push
pop
je
insl
push
jl
pushf
cwtl
cld
sub
mov
add
mov
fs
inc
mov
in
mov
ja
aad
iret
mov
mov
push
lock
pop
jecxz
xchg
xor
fistps
out
shrb
test
int
jmp
aam
sub
sub
and
xchg
xchg
pop
mov
jbe
cmpsb
mov
pushf
movsb
insl
out
int
in
mov
pop
aam
inc
shll
xor
jmp
into
push
sbb
fistpl
mov
roll
scas
jge
pop
pop
adc
xor
push
std
xchg
adc
sar
out
inc
pop
lcall
xchg
inc
enter
pop
ja
je
faddl
pop
mov
pusha
xchg
enter
dec
out
adc
das
jne
rcr
sbb
pop
cltd
int3
rorl
shll
clc
cs
insb
or
adc
gs
aam
and
sub
addr16
sub
fcoms
pop
jae
jo
pop
clc
add
pop
imul
xchg
lret
add
cmpsb
push
pop
add
xor
daa
sbb
loopne
adc
in
xor
push
leave
add
ds
jno
pop
pop
fs
das
call
mov
dec
in
roll
nop
cmp
mov
cmp
cmpl
push
jb
cmp
cmp
movsb
cmp
and
jb
dec
cmp
cmpsb
jns
add
mov
das
pop
mov
mov
cld
pusha
daa
pop
or
sbb
add
mov
rclb
sbb
add
fdivrs
xor
pop
mov
inc
call
imul
fwait
insl
add
or
jne
cmpsl
pop
aas
dec
push
enter
sbb
jne
nop
inc
push
jmp
push
imul
sbb
jbe
and
pop
add
push
xor
enter
daa
xor
or
ja
pop
lods
pop
pusha
inc
pop
daa
and
and
xor
je
mov
fbld
sub
shlb
xorl
or
dec
push
enter
movsb
sahf
pop
jb
push
stc
xor
xor
enter
xor
sbb
enter
cmpsl
pop
daa
inc
push
fs
cmp
lcall
inc
push
lock
add
pop
fs
inc
sbb
push
sbb
xor
or
jo
dec
dec
push
enter
jnp
nop
inc
push
imul
push
sbb
cmpb
pushf
sbb
inc
and
mov
orl
push
cmp
or
rclb
xorl
jge
inc
push
sbb
sbb
sbb
jb
push
xor
jle
orb
xor
dec
xor
mov
in
or
sbb
add
fs
sub
arpl
nop
shlb
add
invd
andb
pop
js
addb
adc
dec
jl
orl
cmpsl
pop
cmp
cmpl
push
addl
ss
sahf
sbb
xor
sub
or
ja
push
call
or
dec
shl
push
mov
nop
out
in
pusha
cmp
pop
nop
add
fs
fcomps
pop
aas
xchg
add
orl
cwtl
dec
push
enter
adcl
push
jmp
pushf
sbb
xor
jo
pop
in
or
ja
add
fs
outsl
divb
pop
movsb
add
test
test
push
enter
test
inc
push
imul
popf
sbb
test
sbb
add
pop
and
push
jns
cmp
test
pop
mov
xor
sbb
fwait
pop
daa
mov
nop
int3
push
xor
pop
adc
adc
and
dec
mov
js
pop
pop
int3
in
xor
xor
cmp
subb
aam
adcb
scas
fadds
in
leave
sbbl
xchg
loopne
dec
or
cwtl
scas
in
rolb
dec
sub
scas
xorl
xchg
int
cmp
or
or
daa
hlt
adc
shrb
enter
je
clc
daa
sbb
daa
pop
in
add
mov
mov
pop
ja
add
or
mov
mov
cmpsb
jae
add
xchg
test
mov
sub
cmp
fwait
cmpsb
imul
dec
shrl
sub
xor
rcll
cmpsb
imul
cmpsb
imul
ss
shll
stc
or
pop
and
imul
insb
lcall
popa
xor
shll
popf
mov
in
jmp
xchg
adc
sbb
xor
and
add
xor
ss
push
sahf
mov
shr
push
lea
cmp
cmpsb
imul
mov
aam
sbb
pop
or
pop
dec
jb
add
adc
add
movsl
pop
pusha
add
cltd
cmpsb
jmp
xor
ljmp
lcall
push
sub
leave
shlb
in
and
and
and
out
mov
dec
ds
jo
ja
add
repnz
popa
jecxz
sbb
dec
cmp
xlat
push
cmp
pop
or
jb
adc
pusha
fs
inc
nop
pop
mov
inc
pop
pop
xchg
mov
fs
pop
push
ss
enter
push
js
adc
push
mov
add
adc
sbb
xchg
and
cs
ja
sbb
and
sub
push
jb
leave
or
and
xorb
leave
adc
push
clc
and
dec
dec
xchg
sbb
lret
rolb
and
jns
sub
and
push
shl
cli
call
xchg
adc
dec
sbb
imul
inc
xchg
xchg
mov
xor
fadds
sub
mov
pusha
pop
push
push
ja
mov
and
xlat
push
inc
xchg
or
xchg
xor
mov
and
push
ja
adc
xchg
cmpl
loopne
into
xor
dec
cmp
call
push
jae
sbb
adc
insb
cmpsb
lret
pop
mov
lcall
ja
pop
lcall
pop
sub
mov
adc
pop
push
insb
xchg
sbb
test
and
or
nop
sub
lahf
pop
addl
jge,pt
pop
cwtl
and
sbb
jl
dec
and
rorb
or
pop
leave
jae
dec
faddl
xchg
movsl
nop
sub
dec
call
inc
sbb
leave
jae
or
sub
or
clc
inc
sbb
or
enter
add
or
sbb
xlat
inc
dec
je
daa
mov
sbbl
sbb
sub
insl
adc
fwait
sub
xchg
cmp
fstl
push
cmp
sub
hlt
add
adc
daa
rol
or
addb
nop
xchg
cmp
inc
mov
cld
clc
adc
mov
test
leave
shrl
daa
pop
iret
aam
ror
push
hlt
mov
nop
rcll
pusha
and
lret
xchg
popl
mov
mov
dec
testb
adc
push
fucomip
mov
or
cltd
punpcklwd
jb
stos
dec
enter
xor
lret
push
fstpt
adcb
mov
inc
mov
in
sub
adc
xchg
dec
pop
leave
sub
xchg
adc
cmpsb
dec
mov
dec
sub
movsb
sub
sbbb
cmp
movsb
pop
aam
pop
leave
sub
dec
jmp
leave
push
bnd
xchg
sbb
push
repnz
and
mov
xor
mov
daa
and
pop
leave
sub
sbbb
push
repnz
test
in
dec
xchg
and
xor
clc
decl
and
sub
xchg
inc
enter
dec
pop
or
jge
sbb
sbb
clc
pop
xchg
mov
btc
outsb
sub
fildll
ret
mov
cmpsl
cmc
or
add
push
sbb
gs
jl
popf
inc
or
mov
dec
test
sub
pop
cltd
pop
pop
addl
ss
das
rcl
dec
daa
inc
ds
pop
fwait
das
add
mov
in
rorl
repnz
and
add
add
or
insb
rcrb
daa
das
in
das
sbb
push
leave
or
and
test
push
and
aam
and
xor
xchg
pop
xchg
inc
loopne
nop
add
adc
sub
add
pushf
das
in
push
rolb
dec
push
or
adc
xchg
pop
jb
sub
sahf
or
xor
nop
decb
das
pop
negl
fsubrl
clc
fdivrp
xchg
add
jb
sahf
adc
xor
inc
mov
repnz
add
sub
or
xor
xor
sbb
in
pop
jl
sbbl
pop
das
cmp
cmp
mov
sahf
pop
inc
pop
inc
or
sub
adc
sbb
enter
xor
jb
xor
pop
sbb
dec
xor
pop
cmp
adc
in
add
sub
movsb
imul
adc
mov
xlat
lret
lds
jo
jb
in
dec
cs
lock
shrb
or
ss
ret
or
mov
out
aam
cmpb
jns
add
add
xor
pushf
pusha
mov
and
inc
nop
pop
sbbl
loopne
add
pushf
sub
cltd
xor
test
insb
mov
js
psubsb
adc
test
xchg
add
mov
mov
add
sub
push
cmp
mov
push
push
mov
test
subps
mov
push
dec
mov
shrb
xor
lret
in
imul
pop
sbb
or
fcoms
adc
pop
dec
shll
pop
push
je
jl
enter
pusha
fadds
add
dec
xor
repz
int3
and
mov
popf
movsb
lret
int
push
hlt
mov
in
push
cld
fadds
and
pop
sbb
and
sub
data16
or
sar
add
fistpl
into
sub
subl
inc
add
add
add
orl
inc
inc
add
mov
push
outsl
arpl
je
popa
jae
jb
insl
outsl
outsb
jnp
mov
adc
dec
jb
or
out
sbb
je
jne
and
imul
jb
add
pop
std
mov
inc
jne
adc
ja
neg
push
arpl
push
inc
pop
dec
push
dec
pop
dec
inc
xchg
inc
popa
insb
insb
bound
add
inc
inc
inc
inc
dec
push
jno
sub
insb
imul
mov
fs
adc
outsw
inc
jo
outsl
iret
sahf
mov
sub
pop
imul
jne
outsl
addr16
xor
mov
inc
cwtl
outsb
bound
add
jb
addr16
add
inc
imul
push
add
push
cmp
addr16
add
pop
imul
cs
fldl
inc
or
mov
xor
addr16
or
mov
pop
or
inc
daa
xor
out
mov
xor
aaa
add
jge
inc
rcrb
gs
jae
cmp
testl
add
test
sub
sub
add
add
cmp
adc
and
or
clc
pop
jmp
out
and
jno
sub
mov
cwtl
daa
adc
push
inc
or
das
lea
mov
lret
mov
test
fsubp
sbb
gs
insb
or
inc
adcl
jmp
or
fstps
rol
or
insl
arpl
imul
jecxz
test
outsb
jno
insb
jae
xchg
lret
xchg
or
je
insb
lea
fwait
dec
add
xor
mov
dec
cmp
stc
out
js
pop
jl
rolb
add
adc
test
fdivs
es
cltd
lods
add
aas
testb
or
jae
lock
insb
popa
jns
xchg
aam
in
popf
in
iret
add
mov
je
incl
addb
loopne
hlt
pop
add
or
sbbl
jns
push
cmp
and
inc
or
sub
cmpl
pop
or
nop
pop
mov
dec
xor
popa
imul
jb
orl
and
dec
inc
inc
or
jns
sbbl
dec
mov
in
dec
adc
xchg
fistpll
xor
dec
test
test
adc
inc
push
sbb
jae
rclb
cwtl
loopne
cmp
add
inc
xchg
sbbl
sub
outsb
sbb
and
xchg
and
insb
pop
xor
in
and
movsb
mov
in
add
imul
insb
xor
pop
push
je
push
gs
lods
fldz
les
mov
nop
xchg
sbb
ror
movsb
mov
inc
push
cs
inc
insb
orl
push
int3
and
jb
aam
or
enter
outsl
jne
xchg
fcoms
and
xor
flds
cs
fsub
dec
leave
and
xchg
jnp
adc
incl
jle
les
push
jns
sti
inc
fiaddl
std
aad
pusha
out
inc
mov
mov
sub
cmp
cs
push
mov
xor
inc
cmp
addr16
insl
and
jae
dec
imul
and
out
jg
insl
jne
and
imul
add
add
dec
inc
lahf
push
add
ret
pusha
and
pop
xlat
or
lock
sbb
dec
ja
adc
mov
xchg
sbb
pop
mov
jmp
gs
in
inc
sbb
mov
xchg
push
adc
into
les
fldcw
dec
das
inc
mov
add
pop
rolb
sub
add
xchg
mov
or
xor
mov
xor
mov
ss
scas
in
jae
adc
dec
add
xchg
add
inc
lock
push
es
mov
es
push
xchg
mov
xor
push
xlat
xor
sbb
adc
add
mov
dec
mov
jge
cmp
pop
int3
mov
outsb
pop
mov
cmp
cmp
pop
jne
pop
fs
call
push
jb
jae
fwait
or
xor
fmul
cltd
inc
bound
daa
ss
and
inc
adcl
adc
stos
or
xor
arpl
fstps
movsl
cmp
pop
dec
add
pushf
jae
xor
mov
add
ret
push
pop
pop
psadbw
bound
sub
aaa
push
jo
jbe
clc
incl
and
stos
lock
jge
ljmp
cs
cwtl
loope
lods
mov
dec
push
mov
andl
popa
ret
xchg
pop
gs
jo
jae
inc
jp
mov
sub
jae
aam
mov
imul
inc
jae
pop
ja
imul
fistpll
mov
pop
inc
imul
dec
popa
jp
pop
jne
adcl
sbb
jbe
xor
pop
cwtl
push
dec
gs
jb
push
dec
cs
xor
mov
bound
sbb
test
pmuludq
xchg
or
leave
hlt
or
push
adc
sbb
sbb
xor
xor
sbb
sbb
adc
or
stc
sbb
sbb
add
adc
lock
push
cmovne
jne
inc
outsl
loop
addr16
adc
pop
dec
dec
add
push
inc
push
fbld
fdivs
flds
add
stos
clc
add
sub
popf
push
insb
xchg
cmp
mov
jb
xchg
inc
jns
push
imul
mov
add
or
xchg
les
stos
lret
popa
fs
ficompl
jge
aam
movq
mov
pop
in
inc
push
imul
dec
mov
sbbl
jb
and
aas
testl
movzbl
xchg
lcall
mov
pop
test
jb
xor
mov
dec
or
and
orb
loop
rcpps
mov
enter
fldt
in
xor
nop
xchg
sbb
sbb
mov
and
fdivs
inc
inc
leave
nop
pop
jb
pusha
push
mov
lds
inc
dec
push
fs
cwtl
dec
push
and
mov
into
cmp
dec
inc
loopne
aas
pop
rclb
lods
imul
das
aas
or
pop
mov
xchg
add
fs
inc
lods
sub
insb
mov
pop
jb
jl
fwait
jo
xchg
lods
in
lods
jmp
lcall
dec
imul
xor
jg
test
rcll
popa
mov
push
insb
outsb
jg
dec
push
in
sbb
pop
leave
sub
jbe
xor
jmp
jo
pop
jl
pusha
das
je
mov
pushf
jl
sub
and
pop
pop
popa
addr16
jl
pop
sbb
inc
mov
nop
pop
jb
test
orl
xor
fldt
add
pop
sbb
dec
testb
cmp
inc
mov
dec
dec
or
lods
fistl
inc
pop
xchg
test
xchg
dec
in
add
int3
pushf
icebp
adc
xchg
aas
or
inc
push
xchg
add
xchg
dec
push
fs
call
pop
jne
sub
mov
pop
add
jns
inc
inc
xor
mov
add
mov
in
jecxz
repnz
jbe
clc
jo
or
adc
adc
test
push
mov
and
insl
mov
dec
cmp
arpl
mov
sbb
mov
mov
mov
or
or
hlt
cld
mov
nop
xchg
hlt
mov
insb
insl
inc
inc
imul
dec
inc
lahf
outsb
mov
pop
push
outsl
inc
inc
jnp
pushf
in
insl
loope
inc
push
pop
mov
cmp
and
or
mov
xor
push
cmp
je
bound
mov
cmp
inc
mov
dec
push
adc
mov
push
stc
adc
inc
fcompl
and
iret
mov
inc
or
sbb
leave
and
inc
lret
repz
xor
popa
rep
bound
stc
dec
xor
mov
fwait
dec
cld
bound
mov
jns
sbbl
sbb
xorl
pop
adc
out
ret
cld
mov
xchg
xchg
sbb
dec
push
and
orl
sbb
leave
out
fs
pop
mov
pop
xchg
and
insb
repnz
cmp
enter
pusha
push
add
inc
insl
add
arpl
mov
stos
in
dec
insb
pop
repnz
add
pop
mov
mov
jb
cmp
dec
cmp
and
lret
jmp
cmp
jmp
or
mov
mov
ficoms
imul
pop
or
aaa
scas
aam
call
cwtl
in
mov
jb
dec
inc
addr16
pop
outsb
aaa
push
xchg
insb
je
and
xor
pushf
movsb
cmp
fwait
sub
xchg
sbb
test
js
pusha
push
insl
inc
inc
mov
rcrb
inc
push
xchg
add
cmp
test
les
xor
mov
shlb
cmp
or
inc
inc
daa
mov
inc
inc
mov
test
and
push
mov
es
lods
push
inc
mov
enter
cmp
ret
sbb
inc
fcoms
inc
dec
jle
loopne
in
arpl
sub
leave
out
xchg
loop
and
lock
mov
loopne
mov
xchg
inc
insb
mov
repnz
dec
xlat
cld
add
jl
cltd
jo
dec
push
push
arpl
xchg
mov
cmovno
inc
push
jge
mov
les
push
pusha
and
dec
push
jbe
ret
inc
or
inc
sbb
mov
adc
aam
push
cltd
mov
or
dec
and
jns
subl
or
mov
pop
push
test
cmp
mov
jns
mov
inc
push
cmp
cmp
add
add
adc
cmovs
dec
push
xchg
mov
cmpsl
xor
outsb
and
adc
xor
popl
dec
sub
mov
pop
mov
jns
xchg
xorl
jbe
cwtl
push
test
nop
pop
jb
pop
mov
sbb
pop
jmp
sub
fs
xor
inc
xchg
push
inc
inc
sbbl
or
jo
mov
mov
dec
lcall
out
push
arpl
jbe
mov
psubb
call
adc
adc
popa
xor
and
sbb
aaa
adc
push
mov
rdtsc
insb
push
xor
imull
pop
stos
jle
ss
icebp
movsb
pop
mov
js
jp
sbb
push
ss
adc
xchg
imul
mov
push
pop
inc
xchg
bound
pop
cli
insl
incb
sbb
cmovle
lods
mov
xorps
inc
pop
push
inc
inc
mov
cld
add
popa
jns
mov
xchg
mov
pop
push
inc
sbb
orb
cmp
inc
fistpl
inc
outsb
add
addb
dec
push
loope
xor
mov
pop
jno
rcll
mov
add
push
fs
dec
adc
shlb
lea
addl
ss
pop
add
mov
nop
sbb
arpl
inc
or
adc
push
add
sbb
sub
dec
add
cmpsb
imul
sub
pand
cmpl
pushf
add
std
and
js
cmp
add
add
add
add
lds
adc
sub
js
les
repnz
xor
or
inc
or
enter
dec
or
pop
or
clc
or
or
add
push
pop
shlb
insb
xchg
inc
aas
add
add
inc
inc
ss
into
and
lahf
outsl
add
push
imul
xlat
xchg
cmp
cmp
aas
dec
ret
inc
add
pop
add
xchg
adcb
cmp
jge
mov
call
jae
and
jae
inc
jbe
cmpsb
or
xlat
jne
arpl
jo
cs
push
mov
jne,pn
and
dec
mov
outsl
sub
aas
fs
and
and
dec
test
mov
and
fmuls
or
jae
and
ljmp
rcll
mov
or
cmpb
dec
inc
dec
mov
test
pop
jae
sbbb
pop
mov
push
inc
daa
test
mov
mov
cmp
je
stos
or
or
sbb
sbb
mov
pop
enter
imul
inc
sbb
xchg
mov
dec
pushf
mov
ja
xchg
mov
xor
add
popa
inc
mov
pop
xor
cmpsb
mov
inc
enter
push
push
mov
outsl
outsl
imul
in
mov
out
xor
dec
jb
daa
dec
cmp
nop
cwtl
adc
in
int3
aad
dec
xor
test
xchg
dec
push
in
movsb
xchg
add
addr16
xor
xor
lcall
xorl
lds
adc
dec
scas
insb
add
cmp
or
xchg
mov
test
push
dec
into
outsl
outsb
fs
aaa
add
dec
je
and
mov
sub
or
jno
les
aam
mov
inc
hlt
dec
sahf
dec
push
in
dec
add
mov
ret
xor
adc
and
cmovge
cli
or
lahf
pusha
rclb
or
enter
inc
push
in
and
sbb
lods
add
flds
leave
xorl
clc
andb
hlt
push
inc
nop
cmp
hlt
mov
enter
inc
add
cmp
sbb
pop
stc
adcb
push
xchg
pop
xor
adc
sub
push
add
xchg
aam
and
and
stos
cmp
and
or
ret
lock
xchg
sbb
adc
push
mov
pop
pop
lret
dec
push
testb
jns
inc
cmp
and
in
sub
adc
mov
arpl
bound
loop
daa
movsl
pop
subb
nop
inc
sub
test
sub
dec
adc
test
fmuls
cmp
stos
cmp
popf
and
xchg
ds
inc
mov
enter
adc
mov
cmp
inc
dec
insl
mov
jo
repz
add
sub
push
pop
out
test
xorb
gs
cmpl
aas
pop
fs
mov
aas
mov
xor
inc
pushf
bound
push
inc
sbb
fldenv
pushl
pop
roll
in
into
xor
andb
arpl
dec
push
in
movb
sbb
xchg
mov
shrl
dec
fsubs
cs
add
xchg
sbb
or
inc
sub
jae
and
sub
and
js
cmpsb
test
adc
push
in
or
movl
orl
adc
movsb
xor
adc
jb
cli
jb
popa
xchg
dec
movsb
leave
and
mov
sbb
push
push
adcl
dec
gs
test
mov
pop
inc
add
jecxz
data16
jb
and
mov
and
push
xor
push
in
imul
mov
dec
enter
jb
test
push
push
les
push
xor
fwait
aam
ror
lods
push
sub
jbe
and
or
dec
loopne
loop
pop
call
xchg
add
adc
pop
leave
in
hlt
fmuls
inc
leave
pop
inc
lods
mov
sub
leave
add
in
clc
add
and
mov
and
cmp
add
add
mov
pop
xor
leave
inc
stos
add
outsl
insb
sbb
push
pop
push
outsb
jns
pop
jb
in
push
push
xor
adc
mov
jmp
push
lret
ja
jne
mov
or
or
add
shrb
imul
jmp
fs
imul
sbb
insb
mov
or
sbb
popa
setbe
jae
jne
adc
push
sbb
outsl
arpl
popa
sbbl
inc
je
inc
mov
sbb
pop
test
jge
jg
divb
imul
in
dec
or
jg
loopne
lret
sbb
mov
mov
stc
pop
in
inc
cmp
pusha
mov
and
rol
xchg
adc
push
inc
xchg
fs
xchg
pop
test
push
adc
insl
ret
call
xor
xchg
ss
stos
cmp
adc
inc
jae
data16
sarl
outsl
out
jns
fmuls
pop
push
call
lock
gs
jns
shl
scas
pop
mov
or
out
fwait
add
ret
arpl
dec
inc
js
dec
adc
jno
into
xlat
clc
into
sbb
pop
repnz
and
int3
adc
jge
mov
outsb
movsl
inc
ret
fldenv
in
dec
sub
insb
out
orb
add
or
leave
push
and
dec
mov
or
cmp
xorb
xor
cmp
mov
pop
dec
jne
das
outsb
pop
push
in
dec
idivl
push
pop
enter
arpl
push
xor
xchg
push
pop
xchg
cmp
mov
fwait
push
jecxz
fidivrl
add
or
push
push
dec
add
add
pop
fadds
add
repnz
shlb
mov
and
cmp
add
stc
sub
addl
pop
mov
push
dec
cmp
inc
pop
ret
inc
jns
dec
test
inc
inc
jb
add
rorb
xor
arpl
or
decl
add
insb
jnp
rclb
outsb
arpl
inc
in
add
pop
pusha
dec
push
cltd
in
arpl
test
in
insb
nop
iret
inc
inc
mov
dec
imul
fs
enter
in
js
in
and
and
adc
inc
rorb
jl
sbb
mov
dec
or
rolb
mov
inc
push
rolb
and
jae
xor
adc
xor
sub
and
cmc
adc
xor
sbb
arpl
mov
pop
jb
subl
rcl
stos
ret
or
push
in
pop
inc
or
mov
dec
sbb
push
xchg
add
cmp
lods
mov
mov
pusha
shrl
xor
mov
inc
and
sbb
mov
mov
jnp
and
dec
sbb
sub
fwait
adc
push
movsb
and
scas
enter
pusha
out
inc
mov
test
fldl
js
cmp
dec
jae
shlb
xchg
int3
xor
mov
sbb
adc
loopne
sbb
push
sti
xchg
dec
rep
sarb
mov
push
adcl
and
xor
sarl
xchg
lock
push
push
xor
push
arpl
lock
idivb
push
shll
adc
add
cmpb
cmp
or
nop
in
xchg
dec
push
fs
les
sbb
leave
sarl
rcrl
and
inc
stos
xchg
add
xchg
or
dec
dec
nop
fists
or
xorps
cmp
pop
sub
push
fs
das
inc
xchg
xor
test
aam
mov
pop
popa
cmp
dec
pop
jb
inc
in
inc
into
pop
bnd
sbb
aas
dec
enter
push
and
pop
inc
push
cmp
je
pop
push
test
mov
pop
cmpl
jg
pushf
pusha
sbbb
test
and
jae
insb
cmp
in
push
popa
addr16
dec
mov
dec
aam
cmpb
push
ret
pcmpgtd
stc
lds
test
icebp
xchg
add
and
movsl
lods
inc
push
jno
test
mov
or
pop
xchg
cmp
pushf
movsb
mov
popa
arpl
wrmsr
xlat
xchg
test
jb
nop
xchg
cmp
pusha
orl
mov
inc
jb
mov
or
insb
mov
std
cltd
stos
xchg
lret
pop
push
mov
push
pop
pop
pop
add
fs
mov
enter
nop
call
enter
and
int3
aam
mov
push
outsb
arpl
add
std
or
or
mov
outsl
ss
add
insb
inc
push
inc
nop
or
sbb
stos
cmpsb
lods
push
mov
add
je
outsl
adc
outsl
dec
add
inc
inc
push
aas
add
call
gs
mov
push
subb
ret
dec
xor
xor
add
lret
popl
or
rcl
mov
dec
jo
sub
ljmpw
cmp
sar
mov
das
repz
pop
inc
enter
jae
loopne
push
adc
push
push
push
pop
leave
leave
lods
flds
sub
add
outsl
sub
ud2
imul
in
lock
or
popa
push
lock
sub
lds
je
outsb
inc
or
push
or
and
inc
dec
sbb
or
pop
insl
popa
jo
das
jb
mov
dec
inc
dec
push
dec
inc
push
push
addb
xchg
or
adc
sub
inc
sub
push
stc
fiadds
or
mov
inc
xor
adc
popa
jbe
jmp
dec
and
sbb
stos
sub
and
imul
adc
inc
leave
and
js
push
mov
mov
shrb
jmp
xorb
mov
fistpl
dec
mov
jo
mov
imul
test
mov
add
pop
xor
adc
mov
dec
ret
push
mov
or
xor
jb
sbb
insl
je
mov
push
imul
dec
jne
push
pop
push
insl
jb
xchg
jb
roll
and
inc
loop
mov
inc
jb
push
mov
sbb
sub
faddl
adc
in
push
in
jne
inc
cmp
jb
dec
neg
call
pop
xor
fwait
inc
add
xchg
xchg
sbb
pusha
push
mov
xchg
dec
push
fs
je
lods
fs
adc
enter
js
inc
scas
in
adc
inc
test
pop
sbb
dec
push
les
cmp
xor
lret
dec
ficomps
xchg
xchg
add
lds
pop
inc
jbe
sub
push
add
sbb
dec
addr16
nop
cwtl
or
xchg
xchg
fidivs
imul
leave
sbb
add
imul
xchg
add
lods
mov
insb
push
sti
bound
xchg
bound
popa
jl
inc
stc
or
pop
push
daa
outsb
mov
push
bound
je
push
pop
mov
jnp
cmp
das
add
stc
mov
or
pop
xor
cmpl
and
add
inc
jmp
scas
in
movb
ficomps
rclb
mov
add
cmp
inc
test
orb
loopne
adc
jae
dec
pop
mov
mov
add
xchg
add
in
ror
dec
xchg
les
aad
jbe
sti
loopne
jb
daa
int3
aam
loope
xor
addr16
loope
fsubrs
pop
addb
roll
loop
ret
push
jmp
shll
cmp
and
pop
jl
pop
mov
das
sbb
mov
push
or
inc
lock
fcomip
sub
push
sub
call
rcll
fwait
mov
jb
clc
loope
in
add
in
loop
pusha
xor
push
xchg
mov
adc
fwait
add
stc
dec
push
test
pop
por
add
xor
mov
sbb
add
inc
cld
and
leave
add
movsb
push
cmp
mov
add
sub
push
or
add
js
sbbb
adc
push
xorl
push
cmp
adc
enter
dec
jecxz
adc
or
arpl
xor
xor
add
mov
xchg
fcomps
sub
call
repz
inc
dec
push
in
and
cmp
jle
enter
sti
js
xchg
fisubrl
insb
fidivl
sbb
ret
sbb
cmp
add
cmp
mov
sbb
or
pop
mov
pop
or
mov
jo
sub
ja
push
adcl
insb
add
sbb
and
pop
and
mov
aaa
mov
incb
add
dec
cmpl
scas
frstor
mov
inc
push
push
mov
pusha
add
out
push
sqrtps
and
inc
in
jne
insl
dec
inc
pop
dec
or
enter
pop
sub
and
inc
mulps
sbb
in
xor
sbb
push
sbb
dec
orl
cmpsl
xor
mov
push
or
das
add
xchg
pop
dec
inc
repz
and
mov
dec
out
outsb
nop
daa
loope
mov
movsl
dec
sbb
push
outsb
xchg
leave
mov
dec
inc
sbb
outsb
mov
pop
push
add
dec
ljmp
jp
dec
jb
les
hlt
sbb
mov
mov
shlb
pop
cmc
mov
add
cld
add
inc
cld
cs
sub
cld
mov
or
add
repnz
je
push
pop
pop
push
xor
out
sbb
pusha
add
xor
adcl
dec
aam
push
jnp
sub
inc
mov
mov
push
pop
pop
inc
aaa
cwtl
mov
lock
add
inc
mov
cmp
jb
push
mov
test
push
and
pop
arpl
push
xor
sub
cmp
movsb
out
xchg
or
or
sub
mov
lret
ss
js
add
push
pop
outsb
dec
test
popa
add
insb
pop
pop
in
test
sbb
jmp
sbb
ret
pop
je
sbb
mov
dec
inc
push
dec
mov
mov
adc
pop
push
push
clc
sbb
sub
inc
pusha
arpl
fs
subl
mov
imul
dec
test
inc
mov
sbb
negl
add
loope
adc
pop
add
dec
aad
pop
ja
pop
inc
sbb
inc
lret
adcl
cmp
enter
add
add
add
insb
mov
pop
add
add
push
jo
pop
cmp
pop
ds
mov
bound
jge
pop
jge
cmp
pop
cwtd
inc
xchg
cmpsb
push
pop
ret
cmp
mov
mov
mov
mov
in
rolb
add
test
mov
pop
nop
add
xchg
add
cwtl
lea
mov
or
add
adc
mov
sbb
pop
iret
push
add
aas
add
mov
and
ret
cmp
add
push
xchg
push
cmp
mov
adc
fmull
leave
orl
add
mov
aas
das
cmp
movsb
lods
mov
inc
pop
dec
call
outsl
push
mov
sbb
hlt
jmp
in
pop
jb
mov
or
sub
les
in
jns
push
jmp
mov
jo
jg
icebp
xor
or
sbb
jae
jo
mov
imul
test
pop
enter
cmp
cwtl
testl
gs
pop
jbe
push
nop
lods
pop
movsl
arpl
xor
insl
inc
enter
fnstsw
fs
jae
scas
orb
cmp
les
aad
add
inc
lcall
filds
in
in
xor
lods
loopne
mov
push
sbb
in
inc
sub
daa
jns
dec
clc
jg
push
sbb
or
sbbb
jge
insl
pop
and
adc
ja
addr16
sub
adcb
and
pop
lock
mov
jmp
sub
sub
repz
sbb
lahf
mov
push
je
sbb
test
mov
enter
xlat
add
or
xor
xchg
lock
mov
jae
sub
cmc
xchg
add
adc
cmp
and
fwait
das
add
in
mov
je
sbb
or
xchg
and
lcall
dec
les
xor
adc
and
inc
jae
lock
xor
dec
pop
jb
and
jp
mov
dec
or
fs
decl
dec
or
xchg
dec
je
add
in
inc
add
jmp
lea
push
sbbl
outsb
ja
dec
sub
and
daa
mov
mov
in
scas
cmpsl
dec
and
pop
pop
leave
dec
push
pusha
cmp
inc
orl
inc
jb
insb
test
imul
inc
push
and
jnp
adcl
sbb
fsubs
push
dec
dec
jl
aas
xor
inc
shll
push
jge
dec
xor
bound
pop
fs
fsubs
mov
lahf
xchg
and
push
lea
outsl
imul
ret
fs
sbb
push
sbb
push
mov
in
pop
hlt
add
inc
orl
push
sub
xor
adc
addr16
xchg
stc
subl
add
sbb
push
xor
inc
aas
lret
jno
aaa
add
mov
dec
and
pop
ss
das
or
popa
add
add
fwait
insb
lret
jns
outsb
cvtps2pi
mov
dec
fsts
mov
cmp
gs
mov
je
add
xlat
xor
jae
jo
ret
inc
rcll
inc
cmp
gs
push
dec
and
sbb
pop
mov
mov
xor
lahf
popa
insl
push
adc
push
inc
popa
sub
movsb
gs
dec
popa
imul
inc
add
jne
fwait
outsb
insb
movsb
out
sub
cmc
xor
pop
negb
sub
outsl
adc
mov
jb
jo
nop
mov
jae
adc
arpl
fdivs
jo
lods
push
add
mov
dec
inc
push
dec
mov
or
and
fiadds
imul
xchg
and
jne
pop
inc
imul
insb
dec
mov
jmp
pop
insb
pop
inc
push
pop
sarb
pop
jo
ja
push
fadds
sub
push
or
push
pop
or
insl
cmp
daa
jae
test
or
jbe
xchg
lock
imul
xlat
pop
or
outsl
push
rdtsc
adc
push
push
stc
shrl
imul
data16
mov
pop
add
and
push
xor
xchg
sub
outsl
adcl
mov
inc
je
and
mov
sub
adc
nopl
push
jno
jne
xchg
ja
xchg
rol
pop
adc
pop
ret
shll
jne
ljmp
jns
and
or
nop
inc
mov
mov
pop
dec
jno
out
cmp
inc
lods
mov
aam
dec
insl
push
inc
mov
pop
ja
or
lret
outsb
pop
push
mov
mov
dec
cmp
push
punpckhbw
dec
push
dec
nop
popa
in
add
mov
pop
xabort
repnz
jmp
mov
xor
inc
inc
adc
arpl
fwait
mov
xchg
add
and
sti
inc
jo
dec
leave
inc
pop
js
mov
dec
add
arpl
outsl
insb
test
stos
xor
js
in
arpl
sti
incl
pop
jb
push
test
xchg
sub
pusha
pop
inc
push
push
mov
das
mov
dec
cmp
ret
or
fcmovne
fstps
sar
cld
xchg
xchg
xor
sbb
mov
cwtl
and
sbb
mov
out
sub
test
and
cmp
xor
xor
lods
dec
pop
jb
mov
std
cmp
fadds
js
sbb
std
test
ret
xor
xlat
ret
lea
dec
add
pop
scas
push
mov
and
incb
cmp
in
mov
jae
scas
faddl
dec
push
in
cmp
and
inc
jb
lock
inc
dec
pop
dec
dec
push
pop
inc
mov
roll
rorl
inc
jne
cmpsl
inc
mov
es
and
lods
into
stos
sbb
mov
xlat
xor
nop
sub
pushf
pop
adc
idivl
js
pop
xor
sbb
or
add
push
add
outsl
and
adc
insb
xor
outsl
loopne
and
push
shll
in
adc
push
xor
mov
or
popf
or
inc
and
or
push
and
into
and
add
inc
imul
jbe
pop
jb
addr16
pusha
fnsave
jo
test
xchg
imul
xchg
xor
imul
scas
add
add
mov
adc
push
je
sub
mov
or
jo
jb
xchg
mov
inc
or
jne
xor
push
xor
loopne
out
mov
loope
xchg
inc
aam
dec
mov
test
rolb
call
lcall
cmp
inc
push
cld
test
push
sub
jae
mov
incl
pop
ss
sbb
pop
pusha
push
testl
inc
cmp
mov
sbb
daa
int3
push
push
fnsave
cs
inc
lret
test
rcll
adc
or
xor
leave
xchg
das
cmp
addr16
and
or
filds
xchg
pop
cltd
or
aas
flds
dec
sub
fildll
or
insb
adc
push
scas
jecxz
sub
jne
push
mov
jne
das
cmp
fwait
gs
cmpl
cmp
popa
pop
add
rcll
adc
inc
sub
sub
dec
push
mov
or
jae
fcoms
fadds
lea
lock
adc
out
outsb
cmp
aad
or
jno
or
fwait
bound
ja
dec
adc
or
inc
or
or
fldenv
int
insl
pop
insb
in
xchg
sbb
push
xchg
arpl
jecxz
imul
mov
fldcw
and
sarb
sub
mov
inc
shll
inc
lds
pop
jbe
add
mov
sbbl
pusha
xor
arpl
insb
das
fldt
push
test
add
fs
sahf
loopne
lret
and
inc
enter
imul
adc
sbb
in
xchg
addr16
pushf
jne
inc
jbe
adc
mov
push
or
fsubrs
daa
jo
jnp
loop
sub
pop
popf
daa
dec
divl
jnp
fs
int3
pop
aaa
inc
ja
popa
add
or
bound
ss
adc
imul
jo
ja
sub
cmp
mov
ret
lds
jp
jo
push
rolb
leave
pusha
fldl
or
sbb
or
xor
mov
mov
ja
pop
jae
adc
pop
cmp
sbb
movsl
sub
adc
and
push
imul
into
add
jns
push
sub
fidivs
jecxz
lock
aad
rcrl
loop
pop
pop
sub
ja
shlb
arpl
je
add
sarl
int3
pop
pushf
arpl
sub
insl
lret
aas
push
mov
cli
and
daa
inc
jae
shlb
gs
adc
or
in
jns
jae
dec
in
jge
add
add
das
jbe
and
mull
icebp
cmp
xchg
add
js
pop
daa
out
sbb
add
lret
mov
gs
adc
ljmp
add
dec
or
iret
xor
or
fsubrp
add
inc
xchg
push
in
jmp
jne
dec
das
popa
fisttpll
fs
mov
push
stos
pop
jle
andl
lahf
sti
push
and
or
ret
mov
add
sbb
sub
add
inc
ja
adc
fsts
and
xchg
imul
xor
xchg
adc
mov
testb
jecxz
jmp
or
dec
or
mov
mov
or
and
xor
cmp
aam
movsl
inc
jno
push
sbb
sti
dec
cmpl
xor
pop
sbb
pop
mov
cmp
xchg
js
cmp
imul
add
pop
repz
adc
mov
lret
inc
lret
dec
jne
jnp
out
inc
or
inc
cmp
push
fs
pop
xor
add
cmp
orb
je
jo
jne
or
inc
ret
xor
or
imul
movsl
push
outsb
jno
xor
imul
mov
or
inc
cmc
push
fs
negb
pop
popa
add
das
and
into
jl
and
adc
push
filds
pop
xlat
jnp
and
sub
add
ss
addr16
gs
mov
imul
and
aaa
sbb
add
cmpsl
sub
xchg
adc
xor
sarb
cmp
dec
push
daa
or
inc
cmp
cmp
das
inc
out
push
or
pop
sbb
ret
out
xchg
add
sbb
dec
andb
fs
jmp
into
subl
inc
sub
aaa
and
push
scas
insl
pop
icebp
mov
jg
fs
mov
jo
xor
daa
ficomps
jnp
and
inc
xchg
mov
inc
push
jmp
mov
adc
mov
sub
pop
sub
js
mov
xor
and
or
jg
and
sbbl
ret
iret
jg
jne
xchg
lods
jmp
rcrb
sub
and
push
pop
pop
pop
adc
dec
push
or
mov
sub
mov
ret
aam
dec
mov
mov
xchg
aaa
sub
sub
push
push
daa
and
push
fwait
aaa
and
test
insb
add
nop
leave
mov
idivl
sub
add
inc
inc
test
bound
push
dec
cmp
and
adcb
shrl
inc
jg
add
pusha
dec
inc
aaa
imul
dec
jns
aam
ficoms
adc
pop
shrb
jmp
mov
das
data16
imul
adc
insl
test
push
push
dec
arpl
and
or
and
mov
cmp
movsl
jae
mov
addr16
pushf
nop
add
dec
and
push
mov
aaa
mov
mov
aaa
mov
dec
add
andl
lods
or
jae
out
insb
fs
mov
cmp
adc
pop
icebp
jecxz
dec
push
xor
and
inc
jns
xchg
addl
loopew
adc
add
inc
aas
sti
ja
sub
ret
push
dec
lds
or
push
add
cmp
adc
movsl
adc
xor
dec
ss
rolb
test
shll
shl
arpl
mov
jbe
std
outsl
jbe
loope
add
jne
icebp
arpl
rcrb
cmp
fstl
dec
addr16
sbb
lret
faddl
cmp
lret
call
data16
adc
adc
cmc
jp
fwait
bt
sti
dec
clc
dec
xchg
xchg
insl
inc
pop
pop
push
mov
pushf
mov
dec
aaa
and
sub
dec
insl
imul
sub
mov
pop
imul
aaa
or
xor
cmp
mov
mov
xchg
dec
push
scas
jo
adc
es
xchg
outsb
pop
aas
aad
stos
gs
push
and
add
sbb
xor
push
pop
cmp
dec
xor
push
les
ss
pop
pop
sarb
stos
mull
fldenv
arpl
mov
and
jb
add
mov
sub
mov
jno
adc
leave
enter
mov
sti
add
xchg
sub
mov
or
inc
dec
pop
mov
in
pusha
jae
pusha
mov
iret
inc
gs
sbb
inc
dec
subl
lahf
jecxz
dec
adc
shl
add
push
mov
js
dec
add
dec
loop
loope
outsb
testl
lea
daa
adc
stc
insl
shrl
dec
adcb
adc
das
inc
mov
das
push
out
inc
inc
shlb
enter
and
movsl
jne
mov
mov
fisubs
jnp
insb
jne
mov
xchg
fs
mov
xor
andl
push
rcrb
mov
sub
mov
dec
popa
ja
cmp
push
sbb
jg
mov
pop
xchg
inc
adc
mov
sbb
or
scas
jne
xor
jp
shrl
add
inc
sbbl
loope
xorl
dec
adcl
gs
inc
leave
jnp
cmpsb
pusha
imul
add
inc
xor
and
cmpsl
outsl
fs
testb
sub
data16
mov
lahf
scas
jo
push
jecxz
or
sub
and
test
xchg
sub
fcoms
pop
add
and
xchg
xor
int3
or
fwait
inc
sub
sti
lods
push
push
dec
fwait
push
and
inc
cmp
dec
mov
jo
loopne
in
pop
jg
std
push
adc
gs
mov
inc
insl
or
loop
or
jecxz
add
xchg
imul
inc
jo
and
addr16
iret
insl
dec
popa
fadds
negl
js
sub
call
sub
xchg
xor
jecxz,pn
and
daa
inc
sbb
loop
lea
ja
scas
insb
adc
add
pop
mull
dec
leave
and
push
filds
lods
mov
ja
sbb
loope
rol
mov
jge
arpl
adc
and
mov
jnp
dec
cmpsl
or
dec
inc
sbb
or
push
popa
jns
jne
add
jns
cmp
xchg
arpl
stos
shl
js
shll
pop
push
arpl
stc
push
or
mov
or
pop
mov
xchg
sti
imul
fistl
push
adc
pop
subl
pop
test
popf
xor
test
ja,pn
jae
in
xchg
pop
xor
mov
or
pop
xchg
insl
dec
int3
mov
imul
mov
orl
dec
jmp
push
test
mov
push
fisttps
xchg
add
jae
xchg
and
push
xchg
lds
sbb
mov
stos
mov
push
pop
inc
pop
or
out
xor
lahf
mov
dec
lea
mov
inc
shll
js
sub
adc
inc
pop
xchg
movsb
jnp
outsl
imul
int
push
popf
xlat
push
insb
mov
or
xor
insl
add
add
add
shrb
add
cmpsl
pop
inc
push
mov
scas
aad
xchg
or
dec
aad
dec
jg
mov
test
pop
adc
mov
sbb
dec
pop
jns
jmp
inc
sub
fs
fwait
imul
jbe
test
xor
lcall
rclb
push
outsb
jnp
pop
xchg
icebp
dec
fwait
push
imul
divl
popf
out
stos
xchg
and
fs
loopne
leave
jae
or
dec
cmc
xor
adc
xchg
or
cmp
inc
adc
pop
push
or
shll
xchg
psrad
xchg
insl
add
insb
add
jb
inc
enter
mov
lds
jmp
jns
fwait
inc
je
pop
or
icebp
cmc
jo
aaa
call
xchg
push
outsb
dec
xor
cmp
adc
pop
adc
movl
cmp
pop
pop
dec
cwtl
lock
pop
xorl
or
andl
jne
push
mov
insb
or
push
or
adc
mov
daa
adc
push
ss
adc
or
and
mov
xor
leave
sub
das
add
outsl
gs
subl
loop
add
push
add
cmp
adc
cmp
ja
adcb
dec
test
stc
jo
lods
subb
test
gs
imul
jnp
cwtl
xor
xor
mov
outsl
insl
mov
xor
pop
mov
jg
ret
and
inc
and
sbb
fcoms
or
xchg
pop
inc
xchg
sub
loop
dec
and
and
insb
mov
and
mov
aad
or
and
insb
sbb
add
mov
outsl
dec
jne
je
sahf
inc
rcll
xorl
or
add
fs
and
movsb
jnp
iret
insl
stc
dec
daa
and
jae
mov
loop
rorb
xchg
cwtl
inc
or
dec
push
mov
mov
das
xor
adc
mov
pop
gs
popf
xor
popa
dec
mov
mov
mov
sub
inc
xchg
push
hlt
add
jae
dec
loop
in
xchg
pop
dec
jecxz
jecxz
addr16
je
insl
sbb
adc
inc
aaa
mov
addl
jmp
xor
negl
inc
or
movb
popa
mov
cmp
jecxz
cli
mov
inc
mov
mov
daa
inc
ja
cmp
pop
jno
std
dec
inc
inc
mov
rorb
in
aas
sub
or
cmpsl
fwait
in
insb
and
adc
pop
lods
dec
xor
lret
cmp
push
mov
add
push
dec
mov
mov
push
adc
xor
adc
inc
sub
and
xor
jo
nop
data16
imul
test
enter
imul
mov
imul
pop
xchg
cmp
xor
cmpsl
push
mov
mov
and
dec
test
jo
or
mov
sub
sub
aaa
dec
xorb
and
and
inc
sub
sub
xchg
pop
dec
sbb
xchg
dec
fadds
mov
push
je
aaa
ror
dec
xor
or
nop
and
and
inc
adc
test
and
xchg
mov
xlat
cmp
xor
sbb
adc
xchg
xor
or
std
xchg
push
inc
or
adc
mov
add
adc
cs
inc
xchg
fs
xchg
data16
test
cmp
bound
fwait
loope
pop
jno
xor
mov
pop
add
xchg
adcb
dec
fbstp
push
ret
pop
sub
xchg
add
or
out
aam
mov
sbb
out
sbb
arpl
arpl
jne
aam
imul
jae
xchg
add
imul
jo
cmc
arpl
inc
das
and
or
mov
sbb
xchg
xor
insb
mov
sbb
subl
inc
adcl
iret
lahf
gs
or
push
dec
dec
fildll
cmp
add
outsl
mov
sub
xchg
cmp
inc
or
push
lea
test
dec
mov
cmp
sub
or
test
fwait
or
jp
jae
jae
inc
sbb
inc
xor
dec
dec
dec
dec
cmpb
ret
movsb
sub
dec
mov
imul
shlb
mov
sbb
outsl
add
or
fildll
and
push
xchg
dec
push
pop
xor
pushf
sar
ffree
inc
or
jae
leave
ljmp
mov
lods
xchg
push
cmp
add
popa
sub
fs
dec
push
pop
push
ss
add
adc
lea
lret
mov
fs
xchg
bound
sub
adc
xchg
jp
rclb
sub
push
fs
jmp
add
addb
fnsave
adc
outsl
pop
jo
xor
or
in
arpl
and
pusha
data16
testb
loopne
lods
add
fadds
cmp
flds
pop
or
push
and
stos
inc
and
loope
or
fs
int3
inc
sub
ror
daa
push
das
xchg
jl
dec
sub
daa
inc
xor
test
popa
mov
sub
jns
repz
inc
ret
inc
sbb
fwait
shll
out
popa
mov
xchg
adc
cmpsl
or
cmpl
test
xor
movsb
pop
sub
sbb
xchg
jo
jb
stc
rcrl
sub
cmpsb
xchg
iret
incl
pushf
add
xchg
aad
push
leave
push
or
movsl
daa
cmc
lods
data16
call
int3
or
rcll
mov
dec
daa
sbb
push
xchg
xor
adc
shlb
or
mov
shll
lret
mov
lock
or
sbb
and
sub
pop
repz
push
or
mov
push
pop
pusha
popa
inc
rcrl
stos
push
mov
adcb
push
dec
leave
cmp
or
sbb
nop
jno
mov
imul
pusha
add
sub
xchg
jo
gs
lret
outsl
popa
movsb
es
xor
dec
push
dec
sbb
inc
add
faddp
xor
adc
or
cmc
sbb
addr16
pop
or
ret
sub
ret
stos
push
or
test
sub
shlb
push
jno
xor
mov
push
sub
in
insl
pop
aad
arpl
roll
lret
xchg
and
pusha
ret
pop
mov
adc
jae
ficoms
inc
fldt
test
inc
jns
test
fwait
repz
or
outsb
out
addr16
lcall
addb
addl
call
adc
xor
loop
inc
pusha
and
imul
repz
inc
flds
jp
bound
pop
lods
addl
pop
xchg
xchg
stos
dec
js
es
xchg
lods
xchg
push
and
lret
sbb
and
push
or
xchg
xor
push
mov
test
sub
daa
sti
fwait
and
push
cmpsl
aam
pop
mov
rcll
sub
jnp
loopne,pt
sbb
xlat
ret
add
push
add
dec
inc
cwtl
aam
xchg
dec
ret
dec
mov
test
sub
pop
and
and
mov
or
push
imul
stos
adc
cmp
stos
add
sbb
cmp
or
and
sub
xor
pop
jb
and
pusha
enter
fistpll
inc
or
jae
dec
mov
mov
andb
adc
add
and
mov
sbbl
pusha
mov
inc
push
lret
add
dec
sbb
dec
mov
leave
push
xor
push
or
scas
loopne
dec
pusha
fldl
push
add
dec
jne
frstor
push
popf
jb
or
rcrb
popa
xchg
mov
mov
mov
add
mov
cmp
or
add
mov
xor
add
inc
and
fistpl
daa
sub
jmp
jmp
js
daa
cmp
sub
xor
leave
into
fdivl
add
xor
insb
dec
outsl
cmp
lahf
imul
mov
and
xor
inc
and
mov
aaa
add
sbb
mov
inc
xor
aaa
cltd
mov
popa
js
xor
mov
ss
imul
or
xchg
or
test
xlat
mov
inc
pop
cmp
jmp
pop
inc
out
xchg
sbb
emms
ficoms
loope
xor
inc
inc
dec
es
cmp
or
push
sbb
inc
or
jnp
sbb
inc
aas
xor
into
sbbb
aaa
mov
cmp
bound
movsl
in
push
movsl
das
je
cmp
push
aas
das
push
xor
inc
jnp
loope
mov
add
cltd
jb
movb
mov
roll
or
and
mov
jmp
xlat
movsl
inc
cwtl
push
mov
out
or
or
xchg
add
lret
and
xchg
xchg
je
and
push
push
xchg
dec
add
mov
add
lds
sbb
lret
pop
mov
fwait
lods
mov
inc
add
ljmp
adc
imul
iret
inc
sub
pop
adc
push
xchg
mov
ret
xor
mov
dec
mov
das
add
mov
lret
pop
les
loopne
lea
mov
add
add
mov
sbb
push
aam
xchg
or
insb
lret
popa
xlat
jb
outsl
into
mov
cmp
and
lods
pop
and
and
push
scas
lret
pop
pop
push
fndisi(8087
mov
dec
xor
int
dec
dec
lcall
sub
mov
cmp
ret
pop
dec
push
xchg
scas
pop
xor
orl
imul
imul
and
popl
inc
and
add
pop
mov
repnz
pop
pop
adcb
dec
xor
and
inc
in
push
out
aas
je
sub
push
lods
incl
xchg
push
xchg
scas
jno
imul
pop
dec
fadds
adc
aaa
pop
jno
sbb
jne
gs
mov
xchg
sub
aad
inc
orl
enter
or
adc
or
sbb
pop
ret
popa
sti
dec
cs
sti
xor
call
cmp
insb
movb
aaa
sub
pop
mov
pop
aad
adc
mov
push
push
xor
and
inc
adc
imul
or
adc
xor
jmp
enter
lret
adc
push
imul
das
test
ja
sbb
or
sti
and
inc
add
xor
sti
pop
lret
mov
or
addr16
xor
in
xor
adc
jbe
jno
sbb
sub
or
sbb
pop
gs
sbbl
jns
and
add
inc
pop
jb
and
mov
adc
nop
or
inc
add
mov
enter
popa
jae
mov
call
mov
pop
cmpsl
xor
leave
cmp
pop
inc
sarl
mov
add
inc
dec
jle
inc
pop
cmp
add
mov
insb
nop
mov
inc
sbb
or
or
pop
test
jmp
mov
sbb
dec
xor
jmp
jle
aaa
in
fsts
dec
rorb
mov
mov
xchg
xor
push
mov
or
dec
inc
pusha
inc
insb
std
ror
add
fs
push
jb
jo
imul
outsl
pop
pushf
pusha
dec
mov
aaa
pop
add
rorb
mov
out
and
xorl
or
or
pop
daa
fs
mov
inc
jo
and
inc
push
lods
movsl
mov
orb
add
or
out
lods
mov
out
inc
cmp
and
add
gs
push
push
je
jae
gs
adc
sbb
xor
fisubs
rorl
sbb
or
mov
push
xchg
rcll
fstl
adc
mov
add
cmp
loop
std
outsb
cmpsl
jno
fldl
sbb
js
xor
pop
lret
fildll
outsb
jbe
xchg
or
inc
add
aam
push
inc
scas
ret
lahf
xor
bound
ret
push
aad
gs
daa
push
addr16
xchg
rcll
push
mov
add
pop
dec
add
xor
flds
dec
push
push
cmp
test
inc
pop
and
and
cmp
leave
and
arpl
in
jo
fwait
xor
mov
sub
popa
dec
daa
and
mov
xlat
xchg
sub
and
adc
aam
mov
xlat
in
fwait
or
mov
inc
stc
mov
pop
les
add
xchg
cmpsl
inc
or
add
mov
cmc
mov
or
pop
cmpsl
stos
dec
jecxz
negl
inc
jmp
out
inc
cmp
inc
pop
sti
push
xlat
cltd
leave
cwtl
sub
adc
popa
add
jb
adc
addr16
sub
xchg
adcb
add
pusha
adc
shll
popa
jne
xchg
bound
dec
add
cmp
mov
pop
pop
aaa
inc
pushl
xor
mov
adc
aaa
or
shll
mov
rolb
loope
dec
incl
mov
xorb
stos
shll
add
pop
sti
in
cmp
insl
popl
push
cmp
add
movsb
cmp
sub
or
sub
adc
or
cmp
pop
nop
inc
push
sbb
and
inc
push
sbb
push
sbb
in
sbb
mov
loopne
test
push
xor
inc
and
out
dec
add
das
enter
mov
pusha
push
loopne
das
push
add
mov
test
cmc
push
push
call
addr16
bts
add
out
das
sbb
fmul
pop
or
add
test
inc
sub
fsubs
scas
adc
mov
pop
aam
xor
ss
mov
add
test
test
pop
aaa
flds
and
pop
sbb
sub
xor
or
je
inc
cmpb
addr16
inc
dec
mov
mov
push
add
fwait
xor
nop
pushf
or
std
movl
dec
fsubs
push
jo
addr16
add
pop
push
jg
lock
inc
lods
add
push
shlb
mov
xchg
pushf
cmp
insl
mov
jb
or
pop
jne
fisttpll
aaa
lret
sbb
xor
ja
inc
faddl
call
lock
add
adc
rolb
sub
inc
add
mov
dec
push
nop
ljmp
and
add
pusha
les
rorb
push
das
sub
repnz
jno
enter
imul
imul
data16
movsb
mov
leave
es
js
mov
mov
cltd
inc
popa
xor
xchg
xchg
and
or
jne
xchg
cmp
or
xchg
xor
add
jns
int
loopne
xor
shrb
xlat
sbb
rclb
and
dec
xor
pop
mov
cmp
lea
inc
sub
xchg
sbb
dec
xor
adc
adc
jnp
imul
rorb
sbb
and
xor
das
adc
or
xchg
inc
dec
xor
inc
addr16
or
push
pop
xor
int
adc
imul
nop
movsb
cltd
insb
add
cs
xchg
or
mov
lcall
push
xor
jns
sub
orb
xchg
xor
sbb
mov
xorl
repz
add
insb
xchg
enter
imul
add
add
outsb
dec
and
mov
xor
imul
add
xor
push
add
sub
or
cmpsl
and
adc
aaa
or
movsb
test
mov
inc
sbb
subb
dec
iret
and
mov
cld
and
inc
sub
xchg
je
popf
adc
je
mov
fs
adc
cmp
push
sti
mov
movsb
cltd
movsb
cmp
les
loope
outsl
xlat
and
inc
inc
mov
push
and
dec
xchg
and
pop
or
fadds
sbb
adc
add
inc
add
test
xor
push
sbb
mov
or
aaa
jo
scas
scas
mov
data16
movsb
mov
in
xchg
mov
dec
add
xchg
and
and
push
add
lods
movsb
aam
push
and
dec
dec
adc
arpl
in
imul
push
test
pop
inc
arpl
nop
mov
adc
add
popa
rdpmc
leave
insl
adc
dec
push
sbb
mov
imul
dec
add
insl
sbb
xor
subl
and
mov
int
arpl
imul
xor
cmp
pop
sti
add
push
and
mov
sub
mov
leave
and
mov
dec
xor
test
sub
mov
mov
aam
popf
leave
xchg
das
and
jb
sub
pop
and
xor
jmp
test
adc
sbb
inc
loopne
adc
arpl
mov
repz
sbb
or
fwait
inc
lcall
lods
sub
insb
push
or
add
push
inc
push
nop
pushf
sbb
jge
bswap
dec
imul
or
ret
add
dec
xor
cmp
das
leave
data16
sbb
test
inc
sbb
or
or
xchg
or
mov
cltd
and
or
frstor
xor
sbb
leave
push
insb
and
daa
in
flds
xor
push
imul
cmpsb
jmp
fsubr
hlt
fldcw
sub
xlat
data16
in
add
mov
jg
ljmp
lea
fisttpll
or
or
outsl
mov
cmp
js
adc
adc
adc
or
or
fdivrs
nop
mov
fdivs
jo
incl
adc
xor
mov
dec
lock
out
xchg
aas
adc
sbb
pusha
add
push
cmp
into
or
ret
pop
adc
gs
xor
enter
repnz
fs
nop
aas
cmp
cmp
aas
mov
in
sahf
cmp
fadd
out
mov
cltd
or
testl
inc
mov
mov
test
xor
lcall
xor
cmp
xchg
fwait
out
push
pop
or
aas
inc
jmp
in
add
pop
jns
imul
enter
sub
xor
nop
pushf
cmp
imul
mov
ret
popa
xchg
cmp
rcrb
adc
repnz
push
adc
flds
insb
incl
cmp
std
push
enter
xor
int
inc
sub
inc
fidivl
pop
add
cmp
add
loopne
in
or
add
or
ljmp
frstor
in
xor
add
dec
std
xchg
dec
adc
rcrb
leave
add
add
push
inc
xor
sbb
aas
pop
or
xchg
mov
leave
push
inc
dec
sbb
xor
mov
ja
xor
outsl
or
sub
adc
jnp
imul
jl
adc
or
add
aaa
mov
or
add
out
rorb
unpckhps
inc
push
xor
dec
adcl
js
dec
push
shr
add
lahf
aam
sbb
mov
jbe
pop
push
sub
add
sbb
adc
add
sub
sbb
push
add
enter
cwtl
shrb
loopne
fisubs
push
or
xchg
cwtl
sbb
xor
sbb
sub
inc
out
insl
dec
sbb
adc
lret
fdivrs
xor
cmpsl
addl
mov
je
imul
sbb
add
or
or
add
xor
cmp
mov
push
out
divl
or
cld
imulb
and
popf
rorl
sbb
cmp
sub
sbb
mov
daa
push
sbb
rclb
pop
daa
sbb
mov
lahf
xor
imul
test
mov
jno
out
repz
nop
and
mov
sbb
or
stos
popa
push
and
ret
and
and
test
push
cmp
daa
lret
inc
pop
cmp
and
jnp
bound
sbb
mov
lods
mov
js
mov
cmc
sub
jp
dec
xchg
mov
mov
orl
and
insb
add
and
inc
fdivr
push
inc
dec
or
and
ss
fisttpl
push
inc
add
sahf
psubsw
jmp
sti
das
inc
out
sub
pop
xchg
xchg
or
add
sub
scas
adc
insb
cmp
cld
testb
cmpsl
add
inc
sti
insl
insl
or
adc
mov
push
xchg
das
and
or
insb
mov
pop
scas
adc
loopne
push
imul
inc
andb
gs
pop
stos
or
repnz
push
push
add
and
and
mov
in
pop
push
cmc
dec
jno
incl
or
and
filds
and
or
mov
push
ja
add
add
dec
add
pop
mov
add
sub
ss
adcb
push
add
shrl
and
sbb
add
adcl
dec
sbb
xor
mov
dec
jo
and
pop
fucomi
fsubrl
adc
inc
push
mov
sbb
push
mov
jl
push
cmpsb
test
sub
in
or
xor
jg
sbb
fcmovnbe
cs
inc
jo
add
sbb
or
jnp
cmc
or
das
xor
xorl
add
repz
xchg
pop
push
and
inc
sbb
pop
mov
push
jmp
push
bound
xor
pop
repz
or
sub
push
fs
mov
or
push
cmp
xor
pop
fnstsw
xor
jg
into
sahf
sub
imul
push
popa
in
jl
adc
test
xor
pop
data16
or
pop
pop
pop
sbb
xor
ret
je
or
orl
push
add
cs
sbb
icebp
fs
pusha
daa
sbb
xor
push
add
or
push
in
add
jmp
loop
cmp
fiadds
cld
pop
insb
insb
ljmp
and
xchg
cmc
xchg
and
imul
rcrb
inc
mov
cmp
or
or
xor
cmp
in
mov
add
mov
push
scas
pop
dec
mov
jmp
pop
fwait
pop
shlb
push
aaa
pop
or
enter
adc
sbb
xor
cmpl
pop
push
sbb
mov
out
sbb
inc
and
or
or
daa
les
sbb
icebp
and
add
xor
das
adc
inc
dec
xchg
jae
pop
loopne
mov
in
xchg
mov
scas
add
or
add
div
mov
pop
sbb
add
cmp
add
sbb
inc
sub
or
sbb
shl
inc
push
mov
test
dec
or
pop
in
outsl
cmp
add
sbb
xor
push
dec
cmp
pop
movsl
inc
sti
leave
inc
pop
aad
and
sbb
add
lods
sti
xor
pop
adc
movl
shr
outsb
sbbl
cmp
ficomps
sub
jo
and
push
xor
mov
das
or
xor
jbe
inc
lods
out
adc
div
sarl
xchg
sahf
xchg
xor
fwait
mov
adc
data16
jno
fistps
cwtl
or
add
shll
outsl
xchg
jbe
push
inc
popf
movsl
cld
mov
sub
mov
icebp
add
dec
outsb
jo
mov
inc
add
xor
pop
mov
lret
sbb
push
je
mov
xchg
pusha
xchg
pusha
pushf
inc
ss
das
fs
add
andl
repz
inc
fs
dec
outsl
sbb
data16
pop
pop
clc
je
rolb
bound
test
mov
dec
push
cmp
and
divl
sbb
push
pop
out
scas
pop
imul
std
call
test
or
jl
dec
cmp
leave
inc
dec
dec
in
add
fdivp
bound
loopne
pop
je
sbb
iret
push
dec
iret
fstpt
sbb
in
push
or
out
mov
scas
unpckhps
push
add
jns
subb
jge
rol
lds
aas
sbb
push
fsubrs
fsub
movsb
or
pop
cld
xor
clc
mov
insl
sbb
ret
and
outsb
or
lcall
xor
mov
fnstsw
sub
cmp
jecxz
pop
mov
pop
sbb
xor
sub
mov
jbe
adc
adc
mov
add
mov
sbb
add
lret
outsl
dec
add
es
mov
sub
lods
sahf
mov
cmp
pop
add
stos
add
pusha
xchg
mov
insb
jb
imul
xor
add
dec
push
adc
or
adcb
mov
push
add
out
inc
dec
sub
adc
ja
mov
dec
popa
out
pop
xor
call
pop
mov
loopne
dec
test
mov
adc
jge
sbb
cmpl
scas
fsubs
sbb
jge
call
xchg
add
fcoms
pop
loop
rorb
in
scas
je
lcall
stos
add
cmpsb
or
mov
insb
je
jg
insb
dec
sarl
call
add
popa
xchg
jg
fdiv
sbb
pushf
cmp
and
mov
inc
fimuls
pusha
fldl
sbb
jg
testl
xor
enter
inc
add
sub
aaa
adc
or
and
adc
sbb
cmp
dec
jnp
and
aaa
nop
or
inc
jnp
mov
insb
sbb
jmp
jp
inc
jo
jo
sbb
mov
push
inc
repz
mov
pop
jae
cmp
cmpsl
add
leave
adc
dec
add
mov
repnz
dec
lret
fs
xor
push
cltd
test
jb
imul
and
jno
xchg
push
inc
mov
cmp
sub
out
mov
scas
cmc
push
pop
cmp
mov
or
add
jb
adc
adc
adc
add
mov
sbbb
xchg
pushf
imul
test
dec
lock
inc
push
ja
inc
push
mov
sarl
add
rcr
movsb
je
std
imul
push
pop
js
and
lret
outsb
jge
sub
xchg
aad
inc
fwait
daa
add
jg
or
dec
sbb
ret
mov
test
fs
push
js
or
dec
mov
push
jge
add
pop
xor
test
bound
rolb
push
incl
adc
dec
loope
sbb
or
in
add
or
and
shll
add
cmpsl
dec
int
push
iret
or
add
add
jo
add
ret
mov
jbe
outsl
shrb
push
jbe
jp
std
jne
xor
dec
enter
push
and
adc
mov
jae
jg
xchg
dec
rolb
ljmp
add
dec
adc
shlb
jle
orb
mov
dec
xor
fs
xchg
or
nop
or
cmp
inc
repnz
xor
aas
mov
or
lods
iret
cld
jbe
or
sbb
clc
adc
adc
sbb
aaa
push
xchg
or
lds
stos
push
inc
and
push
testl
ss
cmp
mov
fidivl
sub
sahf
movsl
sbb
push
pop
inc
inc
inc
push
push
pop
mov
xchg
daa
dec
sub
pop
dec
xchg
jmp
pop
enter
loopne
imul
andl
insb
xchg
in
test
push
movsb
mov
das
adc
push
sti
and
stc
lcall
add
sbb
push
push
dec
cmp
mov
sti
in
jb
imul
ficoml
add
out
dec
pusha
push
inc
and
sub
and
push
dec
cmp
sbb
push
push
inc
inc
add
adc
mov
adc
add
mov
or
inc
sbb
pop
xchg
pop
jmp
test
push
daa
aaa
and
jl
jo
aad
push
fstpt
pop
pusha
sbb
cwtl
pop
movsb
sbbb
mov
add
sub
mov
xchg
adc
add
add
mov
add
xchg
xchg
cmc
scas
add
xor
push
fadds
jmp
xchg
xor
adc
sbb
add
mov
sub
aas
push
faddl
imul
pop
sti
addr16
push
mov
or
add
xor
push
inc
xor
mov
push
push
lahf
rcrb
pop
dec
sub
pop
mov
xlat
adc
add
push
mov
setp
dec
ficomps
push
inc
out
lods
mov
stos
push
sbb
mov
pop
ljmp
pusha
mov
dec
jl
pop
push
sub
sbbb
subb
call
xchg
inc
add
test
or
popf
mov
mov
daa
ret
push
push
inc
ss
xor
dec
lock
or
add
insb
push
sbb
add
shlb
outsl
inc
mov
jno
insl
dec
or
sub
jecxz
inc
lret
cs
mov
movsb
pushf
fs
sbb
sbb
subl
adc
in
pop
mov
mov
xor
sbb
adc
sbb
push
daa
ret
cmc
inc
jmp
or
mov
or
jb
jbe
test
xchg
insl
or
repz
outsl
sbb
jmp
add
sti
iret
mov
or
cld
decb
imul
or
adc
nop
sub
inc
popw
inc
and
add
pop
mov
icebp
pop
xchg
sbb
stc
sbb
dec
xchg
mov
sub
fwait
adc
mov
xchg
push
cmp
test
je
or
aaa
adc
aaa
insb
mov
xchg
adc
cmp
dec
cwtl
mov
xchg
out
xchg
repnz
imul
test
adc
sbb
mov
sub
and
pusha
pusha
inc
into
dec
xchg
imul
bound
cltd
sbb
lcall
das
mov
sti
pusha
xchg
sub
add
lcall
aam
pop
and
loope
stc
sar
cmp
sbb
push
insl
pop
fistpl
insb
or
cld
outsl
cld
or
mov
fisubrs
adc
inc
mov
cmp
push
add
int
fistl
mov
pop
push
dec
and
adc
pop
das
nop
add
scas
daa
rolb
dec
jbe
or
pop
pop
mov
es
sbb
add
in
push
pushf
xchg
sar
dec
or
aam
mov
inc
popa
mov
mov
mov
orl
add
out
pop
jo
jle
mov
test
mov
orb
fsubrs
enter
ret
jmp
push
lock
mov
insb
data16
ss
adc
stos
setg
add
mov
pusha
roll
lret
push
jl
inc
mov
icebp
test
data16
arpl
xor
pop
data16
adc
fwait
mov
sub
and
test
mov
or
cmp
push
jmp
inc
push
icebp
pop
nop
lret
mov
scas
decl
xchg
rorl
pusha
ja
mov
and
add
repnz
xchg
dec
and
pop
aam
mov
std
xchg
jp
inc
mov
in
add
jb
inc
xor
fists
or
xor
pusha
icebp
mov
inc
inc
and
pusha
lcall
fs
xor
sbb
lcall
jae
movsb
adc
addr16
pop
and
push
fwait
push
cmovp
and
adc
mov
sub
test
int
mov
push
mov
pusha
orb
pop
cli
add
adc
sbb
or
je
dec
xchg
xchg
js
or
push
addr16
cld
arpl
shll
mov
addb
ss
movsl
fwait
or
push
jb
incl
sbb
xorb
aaa
add
adc
and
xchg
int
sbb
mov
sbb
add
scas
std
sbb
pusha
leave
jne
push
jecxz
xchg
movsl
push
and
or
mov
or
jnp
and
add
ret
insb
mov
xchg
push
pop
sti
add
push
adcb
cltd
inc
ljmp
in
sub
dec
inc
sbb
pusha
shrb
jmp
scas
and
mov
mov
inc
lahf
inc
add
pop
adc
daa
rcll
call
or
sub
out
or
push
mov
ljmp
test
jb
pusha
nop
cld
fists
add
pop
or
or
mov
in
push
rcll
dec
xchg
inc
pushf
mov
leave
push
test
inc
push
push
or
mov
sub
xor
shll
sub
arpl
cmpsb
push
add
repz
sbb
sti
in
mov
int
mov
push
inc
xor
movsb
pop
cmp
or
fistl
or
decb
inc
stc
clc
pop
fcompl
cmp
pop
inc
mov
aam
mov
or
mov
movsb
push
and
sbb
jg
mov
adc
pop
add
xor
jg
jg
adc
lods
pop
add
inc
pusha
pusha
add
cmp
adc
xchg
pushf
inc
pusha
out
jl
xor
mov
sub
mov
aad
jo
sub
mov
nop
out
xor
fwait
add
lahf
jo
pusha
daa
and
call
ljmp
cmpsl
fs
add
je
lds
sbb
testb
inc
add
cmp
cld
ja
aam
pop
pop
lcall
pusha
adc
dec
and
lahf
pop
mov
fistl
pop
inc
fwait
jb
in
jb
testl
xchg
mov
dec
inc
cmp
xchg
sbb
push
or
fldenv
mov
scas
dec
jo
jo
mov
jmp
test
push
sub
aam
or
fldcw
ljmp
cmp
pop
jae
xor
push
adc
lcall
and
mov
push
lods
pop
push
out
jnp
inc
dec
mov
popa
pop
fs
cmp
push
pop
pop
cmpl
out
adc
or
jne
aaa
insb
ret
fs
test
add
daa
or
test
and
or
cmp
fwait
adc
sbb
add
dec
popl
adc
or
push
jo
les
ja
mov
subb
pop
add
ds
push
pop
dec
in
das
cmp
xchg
es
inc
es
add
add
data16
adc
adc
pop
iret
xchg
dec
mov
pop
and
cmp
add
dec
adc
push
or
stc
sub
add
sub
xor
out
add
cmpsb
adc
push
xor
jp
popa
ljmp
pushf
adc
orb
scas
jb
in
dec
adc
and
scas
or
aam
or
insb
fs
or
fisubrl
daa
loope
xchg
shrl
fs
sahf
inc
add
inc
mov
insb
adc
xchg
jmp
cmp
push
sub
mov
call
dec
jmp
enter
insb
mov
les
fs
dec
and
xorb
xor
notb
bound
cmp
mov
outsb
decl
outsb
pop
std
push
popf
add
and
jge
push
push
mov
add
test
xor
push
mov
or
xchg
cwtl
inc
sbb
cli
or
or
aam
sbb
loopne
aad
sub
jmp
pusha
js
mov
call
and
jbe
mov
pusha
cmp
sub
popa
inc
sub
mov
or
mov
inc
lock
push
ja
imul
xor
mov
sbb
js
mov
mov
pop
movl
sbb
xorl
mov
add
into
in
into
inc
mov
sbb
jmp
inc
add
enter
or
or
imull
sbb
add
pop
xchg
movsl
inc
clc
sbb
add
pop
push
inc
hlt
hlt
hlt
adc
cmp
cmp
sbb
adcl
xor
dec
xchg
cmp
push
dec
xchg
in
ret
clc
aaa
dec
or
sub
and
push
rorb
mov
fs
lods
sbb
cmp
jl
das
pop
push
jbe
iret
push
imul
fisubl
mov
incl
push
inc
into
cmpb
test
sbb
mov
add
jo
cmpsl
pusha
outsb
rorb
and
fstps
je
add
add
mov
pusha
xchg
cltd
js
jecxz
xor
cmp
or
xor
or
sbb
xorl
inc
jmp
popa
adc
fs
loopne
pop
out
insb
je
sub
add
sbbb
xor
xchg
and
stos
cmc
or
mov
cmovl
mov
pushf
push
enter
sbb
and
sub
inc
sub
and
cmpsl
add
dec
and
jecxz
xlat
pop
mov
cwtl
dec
xor
push
fisubrl
sbb
mov
and
jl
and
sbb
or
adc
add
mov
cmp
push
sahf
pop
imul
push
sub
cmp
lret
movl
sar
ret
es
or
adc
jl
popa
inc
cmpb
xchg
push
stc
fcoms
mov
out
jo
or
fwait
sbb
xor
mov
aad
xor
adc
pop
inc
es
inc
jo
add
ret
pop
ret
scas
xor
adc
int
and
or
adc
xchg
mov
rorl
cmp
add
dec
mov
imul
xor
mov
and
sbb
or
add
lock
scas
call
and
or
enter
dec
jecxz
clc
push
and
sub
std
push
adc
pusha
or
push
adc
outsb
or
jne
js
inc
pushf
mov
cmpsl
mov
lds
xor
add
pop
sub
mov
xor
pop
or
jnp
adc
inc
sbb
jo
push
adc
add
or
incl
std
mov
and
roll
push
xchg
mov
pop
cmp
sbb
dec
jno
or
mov
sub
stos
gs
xchg
xor
cmp
push
pop
cmp
or
loopne
cmp
or
or
sarl
aad
pop
add
lock
cmp
sub
mov
inc
xor
or
stos
inc
movsb
push
fstps
sub
cld
dec
mov
mov
cmp
or
ret
push
add
cmp
dec
adc
mov
xor
imul
stos
or
pop
das
add
adc
rcrb
push
fs
fisubs
xor
add
fs
inc
add
push
xor
repz
lcall
cmp
pop
mov
lcall
xchg
dec
lods
inc
imul
push
or
cltd
sub
mov
mov
es
ljmp
loopne
ret
xor
sti
loopne
pusha
jmp
mov
mov
loopne
add
jo
lds
mov
mov
test
xchg
in
je
add
dec
adc
clc
dec
dec
dec
adc
fdivrl
pusha
sbb
add
jnp
leave
mov
rolb
adc
xchg
adc
inc
or
enter
iret
xchg
and
lahf
xchg
jle
xchg
and
arpl
pop
mov
jno
pop
push
push
add
fs
gs
inc
and
xchg
das
xchg
cmp
add
or
mov
or
cmp
je
pushf
add
lock
pusha
inc
leave
popa
xchg
push
rolb
adc
js
xor
pop
cld
pusha
icebp
idiv
js
pop
adc
dec
cli
xchg
test
lret
fs
outsb
ss
adc
add
and
stos
add
adc
es
jne
scas
cli
mov
jns
lods
jb
rcrl
add
pop
pop
cmp
inc
outsl
cmp
movsb
pop
jecxz
or
repnz
cwtl
cmp
stc
add
add
ror
mov
insb
pop
decb
jmp
push
adc
cli
add
sub
xor
or
sbb
add
fldt
test
add
decb
dec
outsb
btsl
add
or
iret
and
lret
notl
xor
xor
aam
cmp
and
mov
arpl
push
xor
mov
mov
xor
dec
pop
fistps
jb
or
jg
daa
push
lods
adcb
roll
imul
cmc
xor
sub
and
jmp
mov
outsl
jno
sarl
jo
inc
insb
xor
sbb
insb
fcoms
add
add
xchg
or
lahf
mov
lcall
cmp
insb
pop
push
xchg
dec
xorl
sahf
daa
lock
cmp
js
push
cmp
or
lea
addl
popf
in
in
add
xor
adc
sub
cwtl
xchg
sub
sub
call
out
fcoms
inc
fists
ja
or
inc
inc
push
mov
inc
call
jb
add
mov
insl
mov
inc
pop
adc
je
sahf
jne
scas
das
std
decb
sti
add
inc
mov
hlt
adc
and
dec
mov
je
insl
popf
jmp
in
mov
call
sub
xor
and
addr16
add
lods
xor
imul
sub
xor
jns
aam
jae
add
sbb
or
mov
inc
sub
jo
adc
adc
jbe
inc
jae
mov
sbb
adc
sbb
xlat
and
insb
push
or
jbe
push
stos
add
inc
test
stos
aaa
aaa
cmp
das
mov
adc
or
push
mov
mov
loope
xor
popf
ss
mov
push
loopne
je
xchg
add
xor
adc
lcall
jecxz
dec
icebp
test
mov
jg
add
popa
das
insb
jo
jne
sub
push
rol
mov
cs
inc
push
in
dec
mov
insb
sub
fs
pop
aaa
mov
mov
aaa
jne
lds
lahf
push
lret
or
cvtpi2ps
sub
pop
out
dec
scas
cmp
sbb
lods
mov
pop
mov
adc
mov
in
lcall
inc
ret
sbb
push
dec
je
pushl
lds
adc
push
stos
call
std
inc
push
icebp
pop
add
cld
add
inc
popa
sub
sbb
je
jmp
orb
lret
dec
scas
sub
xor
push
add
mov
sahf
sub
clc
insb
insb
ds
fstps
sub
loop
pop
fs
sbb
add
push
fs
cmp
add
adc
rclb
xor
pop
add
fs
push
inc
aaa
add
test
out
or
sbb
or
test
cmp
pop
stc
inc
out
nop
adc
subb
ds
popf
shr
cmp
fsts
add
add
and
add
and
xchg
or
aaa
mov
pop
inc
repz
ret
dec
cwtl
outsb
rcrb
add
mov
push
imul
sbb
sbbb
pop
popa
sbb
iret
push
insb
cmpsb
ret
dec
add
or
dec
inc
nop
bound
and
dec
mov
adc
lret
xchg
int3
add
lea
sub
xchg
sbbl
xor
pusha
fcomi
inc
mov
cmp
push
xchg
or
jnp
xor
adc
sbb
daa
adc
cmp
out
xor
push
mov
clc
push
dec
adc
or
sub
or
in
fsubs
push
pop
sbb
mov
mov
cmp
cmp
ficomps
fs
sbb
sbb
icebp
data16
out
cltd
out
sub
inc
icebp
inc
mov
mov
sbb
test
test
filds
mov
cmp
mov
sub
aam
and
add
popa
fadds
ds
popf
leave
sahf
loope
sbb
sbb
cmc
fisubs
call
pop
sub
pop
into
push
push
mov
lahf
dec
dec
inc
hlt
push
test
xor
add
lods
fistps
pop
fiaddl
sbb
std
sub
push
clc
int
or
xor
div
fnstcw
jne
or
dec
or
mov
clc
adc
out
inc
daa
mov
mov
rclb
loopne
push
iret
popf
adc
or
js
push
pop
rcrl
push
scas
daa
or
cmp
push
fwait
xor
dec
and
lret
mov
enter
insl
inc
scas
sub
inc
mov
cmc
test
fisubl
mov
and
sbb
or
cmp
pop
gs
aas
and
mov
sbb
cmp
cmp
cltd
adc
loop
sbb
mov
adc
sbb
ds
pop
ss
adc
cmp
cmp
aad
push
cmp
sbb
or
outsl
or
repnz
data16
cmp
inc
aaa
and
add
pop
jno
add
add
adcl
fisubl
or
push
cmpl
adc
mov
sub
xchg
je
jo
inc
xchg
cmp
pop
ffreep
enter
out
adc
inc
xor
push
sbb
repnz
jb
adc
adc
xor
adc
int
enter
outsl
add
dec
sbb
rorb
sub
shlb
mov
cmp
lahf
fs
inc
sbb
sub
add
pusha
jge
sbb
mov
cmp
mov
mov
xchg
jo
jae
add
or
imul
or
fwait
dec
ja
xor
mov
pop
sub
rcl
or
fcmovnb
sbb
push
or
jl
or
mov
out
adc
push
pusha
pop
lods
in
leave
or
push
jb
or
inc
jb
push
insb
stos
mov
add
lret
arpl
adc
mov
movsb
out
adc
cmc
sbb
push
pop
lods
mov
xchg
push
xchg
roll
mov
dec
mov
jnp
mov
aas
pop
cmp
xor
hlt
adc
xor
adcl
sbb
pop
insb
icebp
add
adc
push
push
mov
adc
daa
adc
test
jg
and
cmp
movaps
xchg
add
xor
wbinvd
add
subb
push
sbb
sbb
inc
mov
sub
add
addr16
cmpsl
pusha
pop
aas
mov
adc
sub
add
repnz
insb
dec
cmp
cmp
loope
orl
add
jmp
loopne
orb
inc
dec
push
adc
scas
adc
scas
popa
and
les
adc
add
js
movsl
cwtl
stos
sbb
dec
daa
pop
dec
dec
mov
jo
adc
mov
in
movsb
fidivrl
or
hlt
or
push
xor
ficoml
dec
push
mov
xchg
les
cmp
testl
fbstp
cmpsl
and
jo
pop
push
pop
mov
cmpsb
and
pop
je
adc
fistpll
push
fs
in
pop
add
adc
lea
dec
mov
pop
push
call
inc
fs
mov
pusha
call
or
add
pop
out
cwtl
out
dec
xchg
jo
push
pop
and
xor
sbbl
adc
or
mov
sarb
mov
js
outsl
orl
jmp
sbb
or
test
in
push
inc
pop
mov
and
imul
inc
adc
mov
test
stos
jne
push
mov
adc
adc
inc
jne
dec
push
dec
ret
adc
mov
cld
xor
or
inc
jecxz
adc
sbb
les
pop
aam
out
inc
mov
sbb
cltd
push
pop
push
xchg
scas
sarl
mov
mov
adc
dec
sbb
xor
add
adc
jo
test
or
mov
repz
or
sbb
inc
mov
adc
filds
hlt
or
or
sti
and
add
sbb
mov
scas
and
stos
push
insl
lea
inc
or
mov
or
pop
sub
jbe
jo
pop
xchg
add
testb
cmp
add
cmp
mov
xor
push
lods
arpl
dec
mov
or
nop
sti
cld
and
dec
mov
push
ficoml
scas
adc
add
push
inc
inc
cmp
jae
mov
cmp
adc
pop
inc
dec
sbb
clc
cmp
or
xlat
push
pop
enter
cmp
sub
rcr
push
or
or
add
aam
lcall
jo
movsl
xor
cmp
dec
sti
inc
test
daa
add
inc
stos
or
fs
push
jne
jmp
inc
push
insb
test
xor
mov
mov
add
pusha
dec
pusha
lods
gs
in
jl
pusha
or
inc
xchg
insb
xor
dec
and
testb
adc
idivl
mov
push
or
addr16
or
je
dec
jae
adc
enter
sub
add
mov
xchg
pusha
sbb
xor
cld
and
stos
jbe
sbb
mov
push
xchg
cs
sub
lea
fiaddl
ror
push
inc
adc
test
testb
out
or
or
add
and
adc
loope
or
out
mov
xor
mov
pop
adc
xor
scas
or
pop
inc
mov
aaa
or
insl
andl
push
adc
inc
inc
je
enter
inc
lret
add
cmp
push
push
orl
inc
clc
pop
test
cld
dec
push
mov
push
popa
jp
adc
and
push
popa
int
lds
and
push
rol
imul
inc
mov
mov
sbb
das
jbe
or
outsl
in
mov
pusha
add
or
xor
pop
mov
aad
or
adc
add
popa
mov
add
daa
and
dec
notb
push
bound
sbb
lcall
mov
test
xchg
xchg
test
inc
imul
adc
mov
cmp
sub
pop
gs
rolb
cmp
aam
add
mov
sub
push
and
mov
dec
sub
sbb
pop
sub
dec
inc
mov
dec
add
rolb
pop
mov
xchg
pushl
jl
mov
jge
xchg
add
mov
cltd
stos
add
mov
mov
stc
push
dec
push
sub
gs
punpckldq
adc
jmp
jo
aam
addr16
es
inc
mov
fstl
sbb
push
push
add
cmpl
mov
push
mov
sbb
mov
cmp
enter
fsubrs
cs
pop
cmpsl
inc
pop
imul
movups
push
mov
imul
and
cwtl
shll
mov
sub
lods
scas
dec
out
mov
adc
lret
push
inc
pop
sub
push
jnp
popa
sbb
cmp
inc
pop
outsl
sbb
xor
es
cmp
das
or
daa
iret
jp
cmp
fsubrl
add
adc
loopne
pop
mov
add
xor
dec
sub
or
add
sbb
ficompl
jle
push
faddl
sbb
imul
sbb
inc
das
add
inc
mov
js
mov
xor
cli
adcl
or
adc
dec
add
in
cmp
xor
fcompl
insb
adc
add
cmpsb
psllq
popa
or
js
mov
xor
xlat
xlat
xor
and
xchg
add
and
nop
add
fs
and
or
sub
mov
lret
leave
or
cmp
or
imul
fnstenv
js
pushf
rorb
sub
sub
lcall
and
jne
sub
pop
aaa
test
dec
pop
push
outsl
adc
or
jb
outsl
lods
outsl
das
subb
enter
or
jne
orb
fs
or
and
and
add
ss
mov
dec
repz
imul
icebp
and
sbb
dec
pushf
xor
dec
pop
cmp
or
cltd
add
psrlq
xchg
pop
mov
stos
mov
add
xor
xor
stos
and
xor
negl
sub
adc
enter
imul
sbb
adc
mov
outsl
push
loopne
mov
inc
fs
into
sbb
jecxz
xor
das
sbb
rcll
xchg
push
fs
loopne
push
icebp
cmp
sub
sbb
sbb
cmp
stos
dec
aas
lret
dec
or
push
xor
dec
hlt
lcall
ss
cmp
orl
jne
jmp
push
sbb
dec
xchg
repz
pusha
repz
inc
js
mov
ret
sahf
pop
adc
repnz
xchg
fdivl
popf
dec
pop
ds
sub
mov
push
xor
cmp
loope
dec
ja
pop
sub
sub
das
sbb
xlat
js
inc
dec
in
imul
push
dec
in
arpl
sti
or
mov
pop
lahf
sub
out
dec
push
ret
sbb
sbb
lea
cmp
mov
push
mov
push
stos
or
and
mov
push
mov
divb
xchg
mov
sub
fistpl
mov
insb
xor
pop
dec
adc
pop
mov
sahf
or
add
and
sbb
mov
xchg
insb
dec
add
xor
push
mov
sbb
lcall
cmp
mov
adc
add
insl
cmp
daa
mov
lret
mov
add
mov
das
adc
sub
int3
shrb
mov
ja
pop
cmpb
push
add
inc
xchg
cmp
inc
pop
ret
sub
dec
or
add
pop
and
push
fstps
lret
sahf
int
xor
and
movsb
mov
sbb
adc
test
call
mov
add
sub
popf
sti
insb
lret
xor
push
add
or
cmp
das
mov
fldl
cmp
mov
cmp
push
xchg
jmp
sbb
mov
push
xchg
push
mov
test
xchg
je
rclb
lods
hlt
sbb
loopne
lret
sbb
jp
pop
aad
adc
xor
pusha
push
lds
adc
mov
je
add
mov
jb
lahf
add
and
push
sbb
aam
or
inc
mov
or
push
jns
sbb
pop
sbb
sbb
repnz
xor
add
dec
inc
xchg
sbb
add
xor
push
je
xchg
sub
adc
mov
aas
std
adc
mov
pop
mov
mov
imul
xchg
ja
jo
aad
sbb
cmp
adc
cmp
gs
ficomps
in
into
lret
sbb
xor
mov
cmc
in
sti
cmp
popa
add
mov
push
or
sbb
add
sub
xor
xor
xchg
dec
add
or
xor
mov
mov
push
sub
push
xor
inc
push
fs
cwtl
inc
xor
pop
aad
jo
dec
inc
fwait
inc
cmp
or
aaa
jmp
and
inc
insb
cmp
adc
push
and
shlb
mov
nop
add
in
cmp
add
sarb
pop
pop
dec
push
xor
pop
and
cmp
pusha
inc
cmpb
sbb
dec
ja
pusha
mov
ja
mov
xchg
mov
sbb
sbb
push
jbe
sbb
xor
jbe
mov
cmp
addb
popa
and
xor
lods
and
or
and
sub
cmp
imul
mov
lods
out
int3
push
and
mov
gs
xor
add
insb
mov
movsb
and
dec
sbb
mov
repnz
fwait
sbb
pop
or
xchg
adc
and
adc
cmpsl
unpcklps
xor
loop
js
jnp
jg
or
in
fs
inc
cltd
jg
fs
xchg
push
push
dec
hlt
sub
jae
or
pusha
and
movsb
cmp
cmp
dec
subl
inc
jge
imul
out
imul
lock
sarl
pop
pop
in
fs
mov
fs
cs
push
lahf
push
xor
mov
dec
fs
dec
add
sub
inc
jb
dec
add
ljmp
jge
sub
cvtdq2ps
inc
fsts
bnd
mov
mov
andl
add
out
fiaddl
add
outsb
dec
and
and
jmp
insb
add
lret
into
in
and
and
mov
or
rolb
inc
mov
lret
lahf
scas
dec
mov
add
std
hlt
cmpb
cwtl
push
adc
sbb
and
and
test
in
mov
aas
sbb
pusha
movsb
fisubl
jno
sbbl
sbb
sbb
jo
push
mov
push
add
pop
leave
repnz
add
bound
call
add
movl
cmp
adc
mov
lock
fs
inc
dec
sub
pop
cmpsb
jnp
pop
cmp
and
shll
sub
stos
xchg
orl
aas
push
add
jno
sbb
cmc
add
cwtl
or
das
add
mov
pop
addb
addr16
add
adc
adc
movsl
xchg
rolb
mov
les
add
add
add
mov
sub
dec
rcrl
addl
aaa
xor
sbb
push
xchg
cmp
adc
mov
adc
jmp
mov
pop
verw
dec
mov
enter
pop
xchg
xor
popf
or
pushf
cltd
mov
or
jns
lods
inc
xor
sbb
repnz
pop
pop
or
or
add
es
adc
out
and
inc
fcmovnb
push
enter
or
sbb
jbe
pop
xor
pop
les
ret
pop
and
dec
iret
add
push
add
decb
add
sbb
sub
pop
dec
fmuls
mov
adc
cmc
push
add
int3
mov
adc
js
and
add
arpl
mov
xchg
cmp
sbb
xor
testl
frstor
mov
inc
or
jmp
sub
out
outsb
xchg
ljmp
push
adc
lock
popa
lcall
sub
insl
test
or
cwtl
pop
mov
out
xor
xchg
and
cwtl
fwait
mov
cmp
repnz
add
std
add
adc
pop
or
sub
jne
fadds
and
add
in
inc
std
insb
add
into
or
lock
std
js
test
mov
or
or
inc
insb
or
mov
mov
xor
cmp
repz
cli
fdivr
addl
nop
push
fdivr
push
dec
xchg
dec
add
movsl
xchg
or
js
push
add
add
ret
adc
dec
fildl
movsl
xor
imul
lret
sbb
sbb
push
aaa
notl
das
xchg
add
test
xchg
das
outsb
fnstsw
and
add
add
push
or
mul
je
stos
rorl
add
pop
add
imul
into
mov
dec
xor
adcb
gs
test
add
gs
shll
mov
pushf
jp
nop
xchg
sbb
dec
dec
test
dec
mov
or
push
and
push
xor
or
popa
cmp
push
mov
sub
cmp
or
scas
and
dec
cwtl
pusha
adc
mov
add
mov
addl
es
add
decl
and
mov
sbb
dec
and
inc
add
add
xlat
and
add
adc
add
out
xchg
or
test
add
es
add
add
ret
mov
hlt
jo
into
xchg
or
je
add
pop
push
add
rclb
jg
leave
pusha
rol
mov
add
call
nop
push
call
and
cwtl
inc
es
stos
and
imul
or
push
adcb
or
out
prefetch
or
sub
xchg
xchg
and
and
movsb
js
fldt
or
add
xchg
repz
inc
jnp
push
add
daa
dec
dec
push
dec
push
cltd
and
push
add
sbb
sub
mov
dec
jge
pop
jb
xor
add
inc
sbb
mov
jno
push
mov
sbb
enter
jmp
or
jo
sub
insl
and
pop
scas
xor
push
or
ss
dec
hlt
imul
pusha
subb
cwtl
jge
pop
adc
push
sbb
imul
push
jmp
movsb
add
or
lods
jnp
inc
lahf
pop
stos
cmp
adc
and
les
push
test
pop
add
mov
mov
push
xor
stos
inc
add
pop
or
mov
push
adc
lea
inc
pop
mov
rolb
or
xor
or
leave
cmp
leave
cmp
pop
push
cmp
mov
add
enter
ss
or
add
inc
push
fsubl
nop
pop
imul
pop
or
loop
jae
aas
add
sbb
les
out
inc
xor
and
or
xchg
and
pop
xchg
inc
sbb
push
dec
sbb
repz
or
jo
cmp
mov
fdivrs
add
je
add
push
mov
and
ljmp
imulb
je
sbb
push
in
mov
idiv
add
je
add
push
sbb
add
or
mov
loope
ss
stc
bswap
adc
xor
sbb
xor
ret
sbb
and
jo
or
and
mov
sbb
stc
outsl
leave
sub
add
popl
jbe
jg
out
push
xor
xor
pushf
mov
add
sbbb
xchg
dec
incb
add
jo
mov
or
add
and
and
push
enter
inc
inc
jb
or
inc
inc
orb
inc
sbb
jns
inc
inc
inc
nop
sub
or
and
int
xchg
dec
inc
xchg
and
or
push
xchg
clc
adc
push
arpl
xchg
dec
push
push
cmp
subb
addb
mov
fdivl
mov
push
mov
cmpl
sbb
shlb
mov
mov
sbb
push
js
rcrb
dec
and
insl
sahf
lea
hlt
add
mov
inc
notb
mov
inc
scas
and
and
cmp
outsb
dec
cmp
sub
xchg
cmpsl
or
or
fs
aaa
push
or
push
mov
mov
and
enter
out
add
loop
sub
xor
sbb
cmp
shll
cmp
xor
add
push
or
adc
ss
popf
les
push
sub
jae
in
fwait
add
add
sbb
dec
leave
enter
xor
stos
cs
hlt
or
xor
cmpsl
or
or
pop
cmp
insl
out
jmp
lods
dec
jle
int3
incb
incb
sub
movsl
mov
pushf
ret
decb
imul
inc
sbb
pop
adc
dec
cs
lock
in
stos
sar
or
cmp
cmp
int3
add
push
xor
push
or
cli
call
xchg
or
mov
les
repz
push
push
dec
pop
or
or
add
pop
inc
into
adc
sub
add
orl
enter
enter
add
orl
enter
push
pop
imul
or
in
add
adc
inc
push
decb
or
add
std
pop
or
je
xchg
std
cmp
sbb
hlt
or
inc
stos
aam
lds
orb
lret
shlb
push
jne
scas
lcall
nop
xchg
test
movsl
cwtl
push
testb
add
lret
sbbb
xchg
enter
add
int3
in
scas
addr16
fwait
inc
mov
pop
add
in
pop
adc
add
adc
push
dec
pop
stos
mov
pop
xor
pop
push
add
add
loop
jb
add
ja
cmp
xlat
fisubrl
inc
outsl
inc
add
daa
lods
or
testl
xor
xchg
mov
and
push
push
or
sbb
push
pop
rcrb
xor
cmp
jmp
je,pn
incb
stos
pop
sbb
add
dec
or
test
loop
push
cld
adc
push
push
and
inc
loop
mov
cmp
popa
dec
addr16
and
out
and
inc
mov
jge
mov
sub
sub
mulb
mov
int
mov
nop
nop
sub
sbb
xchg
or
int3
add
pop
push
pop
movsb
mov
and
pop
cmp
mov
bndstx
inc
pop
inc
popa
daa
fildl
mov
mov
and
outsl
mov
daa
sub
sub
data16
sub
and
popa
mov
test
inc
push
sbb
or
adc
sub
sub
pop
inc
out
decl
jp
sub
sbb
xor
cld
add
jo
mov
cmp
or
adc
adc
std
pop
cmp
xor
or
inc
enter
add
das
cmp
loop
inc
mov
out
insb
add
pusha
and
dec
inc
jae
or
inc
fcompl
push
sub
jl
pcmpeqb
nop
nop
adc
cmp
sbbl
and
popa
adc
xchg
push
and
ss
cs
ret
jns
push
add
xchg
lcall
or
and
jp
sbb
and
test
push
adc
stos
cltd
or
or
push
stos
fldenv
imul
push
lea
add
push
and
add
insl
or
stos
cmp
js
cs
dec
aaa
add
repnz
pop
rcrb
dec
int
adc
pop
add
push
bound
adc
pop
or
mov
cmp
add
lcall
mov
insb
or
test
jge
inc
push
jmp
mov
stos
and
inc
les
jb
mov
and
in
incb
and
cs
pop
adc
ss
insb
pop
push
mov
mov
adc
stos
daa
jo
push
insl
lods
xchg
fadds
subb
mov
mov
aaa
mov
or
sub
arpl
mov
into
mov
mov
mov
dec
or
or
enter
inc
movl
and
ret
xor
mov
add
mov
inc
adc
lds
sbb
or
cli
sub
mov
sub
sub
push
inc
add
sub
mov
test
movsb
sbb
sti
xchg
enter
cmp
inc
cmp
inc
fsubl
mov
add
inc
insb
and
mov
sub
and
sbb
push
cld
in
push
adc
loop
cmp
mov
outsl
shrl
sub
jne,pt
mov
inc
add
sarl
xor
in
sub
cmp
sbb
xor
dec
jge
ja
aas
out
insl
and
pop
push
pop
sbb
fisubl
and
jmp
pop
xchg
mov
sbb
in
mov
pop
negl
dec
add
inc
testl
mov
mov
aas
pop
fldl
enter
push
jo
imul
add
xchg
mov
daa
xor
dec
repz
xor
lea
lea
addb
mov
inc
adc
pop
cmp
jb
adc
push
or
orl
and
inc
adc
xor
add
fnstcw
sub
adc
popf
data16
or
mov
movsb
fwait
cmp
and
sbb
inc
push
out
das
sti
cmp
adc
pop
or
or
dec
xor
sub
ret
sub
add
or
cmp
mov
inc
lahf
imul
imul
int
cmpl
add
shrb
xlat
or
pop
das
adc
xor
and
es
xor
xchg
add
xor
js
sub
sub
xor
mov
sub
imul
sub
das
sub
mov
sub
or
xchg
gs
jb
inc
adc
nop
push
pop
sub
xor
addr16
cmp
imul
xor
push
cmp
adc
subb
jb
add
add
jb
orb
mov
aaa
imul
imul
mov
cmp
or
sub
addb
lock
pop
int3
aaa
pop
add
inc
add
jl
imul
jp
mov
dec
addl
xor
mov
xor
popa
mov
fs
xchg
pop
int
ds
push
cltd
dec
inc
adc
lds
add
out
fildll
push
lods
pop
mov
adc
or
xchg
enter
popa
add
sbb
into
or
add
push
pop
orl
mov
leave
push
xor
mov
bound
sahf
adc
add
cwtl
jne
adc
sbb
sbb
jl
cmp
add
call
das
add
fs
cmpl
xchg
pop
pop
pop
push
cmp
shll
inc
jo
add
jnp
xor
iret
add
xor
lcall
adc
pusha
daa
pop
dec
enter
pop
inc
adc
loop
cmp
shll
imul
inc
add
and
xor
daa
sbb
sub
xor
in
xchg
jnp
pop
nop
xchg
xchg
leave
jle
pop
mov
test
sahf
fisubrs
ret
pop
cmpsl
sbb
subps
mov
add
and
adc
jo
xchg
add
or
mov
rcrl
sub
and
push
sbb
scas
sbb
leave
add
push
push
jns
mov
xor
fisubrl
sbb
scas
mov
pop
add
or
xor
cmp
sbb
ja
fidivrl
or
dec
lahf
and
dec
mov
outsb
add
add
lahf
arpl
xchg
sbb
and
jo
call
inc
mov
push
test
mov
out
push
cmp
add
sbb
out
inc
and
and
imul
sbb
addr16
push
flds
cmp
imul
xor
nop
adcl
add
add
sub
dec
jae
or
push
adc
push
or
push
in
adc
pop
mov
shlb
add
pop
adc
push
pop
adcb
adc
fisubrl
mov
test
jge
sub
cld
or
cmp
and
sti
negb
adc
mov
call
sub
add
arpl
out
adc
or
in
inc
shll
dec
pop
nop
add
repnz
cs
int3
xchg
xchg
mov
add
loopne
jno
test
cmp
outsb
push
in
adc
cmp
pop
or
xchg
jbe
data16
mov
push
and
movsb
loope
inc
sub
aaa
inc
push
jge
subl
cmp
jno
out
sti
daa
pop
jmp
sub
dec
roll
aaa
mov
popa
xorb
adc
mov
in
arpl
and
adc
or
cmp
pusha
daa
pop
sbb
pusha
insb
in
push
mov
xor
jl
add
or
cwtl
in
fistl
cltd
pop
xor
xor
sub
insb
icebp
out
or
mov
sub
addb
sbb
xchg
add
jmp
iret
add
ja
cmp
incb
adc
cmp
mov
stc
xor
push
mov
inc
xor
dec
inc
stos
push
pop
ss
cld
fisubl
cmp
nop
add
sbb
lods
ss
sti
push
pop
jnp
aam
test
sbb
push
mov
add
repnz
or
jne
xchg
sub
xchg
inc
mov
das
xchg
sbb
lret
and
mov
push
or
push
push
pushf
fwait
xor
sbb
cmp
xchg
add
pop
les
dec
inc
call
or
clc
sti
add
mov
mov
stos
jnp
xor
adc
call
xchg
iret
pusha
test
sti
rcrb
push
jae
scas
or
test
jne
aad
popf
push
out
or
sti
jb
stc
sbb
adc
ljmp
cli
imul
and
repz
fmuls
mov
mov
popf
push
les
adc
hlt
jns
sub
and
mov
mov
or
rorl
dec
jbe
and
add
mov
cmovb
fsubl
sbb
sbb
pop
push
clc
add
insb
mov
push
iret
aaa
fiaddl
test
or
rolb
sub
add
test
pusha
cmc
inc
add
inc
lret
inc
push
or
test
sub
loopne
pop
out
pop
imul
adc
stos
in
jmp
je
mov
push
lret
add
inc
enter
dec
jl
sbb
repnz
adc
cmp
mov
pop
les
out
add
and
jns
sbbb
inc
sahf
adcl
add
xchg
pushf
dec
xchg
or
add
js
test
pusha
push
fwait
sbb
dec
sbb
and
jns
pop
dec
adc
jmp
pop
ret
add
lods
add
add
add
add
dec
push
mov
nop
sub
add
out
movsl
mov
int3
inc
jne
fsubrs
in
or
pop
cs
xchg
and
in
sub
loop
push
or
movsl
sbb
push
mov
ljmp
insl
fsub
popa
xchg
xor
add
sbb
in
mov
sbb
push
adc
sub
mov
dec
movsb
add
es
in
inc
sub
push
sub
and
and
int3
and
js
add
and
loopne
rclb
push
ret
sub
sub
test
xchg
and
push
xchg
add
sbb
adc
insb
push
xchg
xor
jae
sahf
xor
jp
sbb
adc
xor
cs
test
pusha
ja
ficompl
push
lds
or
mov
out
insl
sbb
push
and
jo
insl
mov
in
adc
xlat
popf
add
push
or
xor
and
inc
std
fucomi
stc
mov
cmp
addb
jo
sub
add
and
push
scas
push
and
mov
shlb
push
or
nop
cmp
mov
imul
add
loop
or
or
fs
mov
adc
insb
xor
shlb
sub
add
dec
fs
adc
xor
roll
insb
insl
or
mov
mov
sbb
or
mov
mov
mov
sbb
push
aad
ljmp
add
cmp
push
add
or
sahf
je
adc
dec
push
test
popf
hlt
xor
push
aas
add
push
lcall
movl
or
sbb
mov
add
or
jl
inc
int
xchg
xor
and
or
shll
lret
cmc
jbe
cmpsb
sub
push
test
or
mov
xchg
add
push
push
dec
dec
xor
jno
xor
and
xor
icebp
inc
or
imul
ret
cmp
add
pop
pop
pop
push
bound
xor
add
loop
jno
sbb
es
arpl
lret
xchg
js,pn
jl
andl
push
inc
or
lret
mov
fcoml
push
pop
fwait
add
pop
sub
add
test
or
loopne
fs
xor
adc
mov
movsb
and
roll
data16
adc
stc
push
inc
sub
lods
mov
sti
cmp
jnp
and
lcall
imul
je
pusha
out
std
clc
jmp
pop
mov
fwait
mov
push
adc
mov
jbe
xchg
sbb
daa
pop
and
mov
sub
jmp
adc
dec
les
sbb
ss
sbb
add
adc
cltd
pop
imul
add
adc
add
inc
jp
adc
mov
repz
xor
push
dec
sti
xlat
or
in
jecxz
shll
pop
out
and
xchg
sbb
addr16
add
mov
add
cld
dec
and
dec
or
push
add
std
mov
dec
popa
add
sub
lret
leave
insb
adc
adc
xor
add
dec
sub
adc
lds
adc
jnp
leave
scas
adc
push
push
push
stos
sbb
sbb
push
in
sub
repnz
adc
adc
mov
dec
push
lahf
add
and
call
inc
test
bound
in
jp
pop
add
les
sbb
mov
pop
adc
outsb
adc
mov
add
add
jb
cld
jbe
inc
mov
pop
xlat
sub
clc
pop
or
aam
pop
nop
add
sahf
out
inc
mov
sbb
fistpl
jnp
insb
add
lock
and
scas
imul
fwait
out
insb
testl
xchg
aaa
test
imul
pop
outsb
add
insb
faddl
insl
xlat
xlat
je
pop
insb
adc
fadds
xlat
jne
cld
mov
add
hlt
outsl
jo
xchg
pop
xor
call
icebp
push
aas
push
adc
pop
push
sub
mov
fiadds
jne
outsb
dec
lcall
add
and
cmp
inc
pop
push
sbb
inc
adc
sbb
imul
je
add
sbb
inc
call
dec
sbb
das
int
test
pop
int3
mov
inc
xor
xor
adc
stos
or
insl
add
xor
sbb
stos
inc
nop
pushf
stc
daa
xor
mov
insb
mov
add
and
in
jne
mov
push
add
sbb
push
inc
sub
cmc
cltd
push
lods
hlt
add
mov
adc
inc
out
and
pop
pushf
cwtl
es
xor
ja
negl
push
mov
cmp
lods
xor
or
jp
test
inc
sbb
jb
fcmovbe
cmp
outsb
loope
adc
lcall
pop
test
cld
pop
pusha
sbb
sub
insl
add
je
adc
jnp
cmp
test
nop
or
push
pop
mov
insb
mov
addl
xorl
dec
jbe
mov
sbb
push
aas
aaa
pop
je
pop
ss
je
dec
xor
mov
sub
cmp
pusha
roll
push
loope
lret
enter
cmp
cwtl
sub
xor
je
insl
sbb
sbb
mov
or
bound
xor
sbb
or
inc
mov
add
mov
or
dec
inc
lock
cmp
add
js
and
mov
mov
pop
fucomi
add
pop
sbb
add
jbe
sbb
cmc
adc
pop
sub
xor
test
idivl
repnz
and
je
adc
js
and
sbb
dec
add
xchg
jne
int
adc
loopne
pop
pusha
or
ret
outsb
imul
and
add
in
sbb
xchg
pop
inc
shl
cmp
fisubl
fcmovnu
mov
inc
sbb
push
push
or
push
xor
loope,pn
cli
mov
pop
adc
add
cwtl
mov
jns
xor
fcmovne
sbb
cmpsb
sbb
nop
sbb
sbb
cmp
push
xchg
mov
and
rcrl
dec
mov
push
test
jg
mov
add
xchg
std
adc
or
aaa
inc
sub
or
xchg
cld
cld
add
cmp
inc
std
xchg
imul
lock
stos
xor
cmp
sbb
or
pop
std
insb
add
test
ja
push
bound
add
test
sti
adc
xchg
cmp
inc
jnp
push
xor
imul
mov
or
nop
cli
lahf
jbe
fildll
jbe
ss
arpl
adc
mov
pop
insb
iret
xor
pop
js
or
cltd
cmp
mov
jno
sbb
and
push
cmc
pop
ret
inc
mov
xchg
cld
and
push
xor
ret
insb
fs
in
and
lcall
or
xor
add
inc
stos
inc
xchg
lods
mov
fcmovne
adc
pop
daa
sbb
or
jp
add
adc
xor
or
fs
sbb
or
add
test
jp
sub
add
add
sbb
shll
push
add
push
or
insb
insb
or
or
ret
cmp
fsubrl
mov
mov
jle
ds
xlat
add
or
cmp
add
pusha
inc
in
add
mov
push
fs
scas
loop
xchg
pop
push
mov
adc
dec
pop
insb
mov
pushf
sbb
cmp
mov
pop
imul
push
jge
inc
cmpxchg
lds
push
push
inc
fs
js
pop
inc
int3
sbb
cmp
push
mov
mov
sub
jnp
push
cmpb
loopne
push
sub
or
sahf
add
xchg
test
cmp
push
repz
test
jae
jae
and
pop
adc
push
pusha
adc
mov
les
xor
fdivs
push
xor
nop
dec
insb
push
push
mov
lret
mov
pusha
mov
pop
or
fsubrl
pop
pop
test
mov
dec
call
cmp
or
dec
cld
jno
sub
fcoml
adc
push
int
xchg
and
clc
add
jge
imul
loope
insl
test
dec
imul
adc
xchg
sti
xchg
xor
cld
and
push
addr16
sbb
mov
fwait
mov
mov
xor
mov
sub
push
adc
cmc
dec
es
sub
int3
roll
mov
and
fcmovne
mov
jo
dec
paddusw
or
and
repnz
add
push
je
fdivrs
call
dec
add
and
sbb
and
mov
lods
mov
push
or
jne
inc
cld
sub
lods
dec
rolb
ja
xor
das
sub
inc
shll
add
dec
or
rcrb
pusha
add
pushf
lods
insl
push
fucomp
loopne
mov
or
add
push
xor
jg
in
je
fisttpl
xor
sub
and
mov
das
rolb
add
loope
repnz
or
push
hlt
add
hlt
jl
inc
xor
mov
sbb
sbb
bound
cwtl
insl
test
cmp
add
or
mov
clc
adc
or
rol
or
sbb
aaa
sbb
pop
push
aad
pop
sub
pop
outsl
gs
xchg
in
push
clc
mov
dec
xchg
nop
sbb
mov
clc
sbb
xlat
or
jl
divl
and
movsb
es
pxor
cmovle
sbb
or
mov
sub
sbb
cmp
xor
jne
sub
lock
sti
adc
jo
jmp
pop
popf
adc
or
cmpsl
jmp
clc
rcrb
mov
lods
jnp
mov
mov
arpl
and
test
mov
add
loopne
jecxz
mov
dec
mov
push
sbb
xor
ds
add
xor
roll
add
xlat
pop
or
int3
add
imul
mov
jmp
sbb
cmp
sub
ja
sub
add
or
add
ss
aaa
xor
and
enter
lds
subl
iret
je
cmp
sub
and
cmp
cmp
jmp
cmp
mov
add
mov
xchg
sbb
lds
xor
jecxz
shll
test
push
xchg
mov
lahf
loope
nop
dec
fidivs
sub
sbb
add
add
stos
hlt
bound
or
push
push
mov
ja
jmp
sub
push
in
fldenv
cltd
sbb
dec
add
loopne
xor
xor
adc
faddl
clc
icebp
cmp
xchg
test
jmp
cs
and
sbb
adc
adc
add
jmp
lahf
adc
inc
jae
adc
mov
add
int3
pop
push
mul
lods
cmp
ret
shll
add
push
js
or
push
jno
mov
mov
nop
dec
jno
pop
sub
mov
inc
stos
cwtl
pop
and
jae
arpl
push
pop
dec
rolw
cwtl
or
mov
aas
xchg
inc
pusha
pop
sub
aaa
pop
xchg
push
call
push
ds
jge
jo
inc
dec
adc
stos
add
cmp
sti
test
test
scas
mov
and
xor
and
daa
test
popa
fsts
cmp
and
test
mov
add
inc
insl
mov
sub
mov
inc
push
dec
inc
or
out
scas
adc
xchg
idiv
in
or
stos
jo
jp
idivb
or
aas
pop
add
cmp
int3
add
inc
mov
adc
xchg
or
mov
test
push
lods
xor
dec
add
mov
daa
inc
push
jae
mov
adc
add
test
cmpl
dec
enter
jb
add
or
pop
and
add
inc
pop
xor
mov
inc
add
add
nop
inc
inc
cmp
add
cltd
dec
dec
or
sub
xorl
sbb
dec
adc
sbb
inc
pop
adc
push
push
inc
pop
adc
sub
cmp
add
aas
lahf
sub
mov
stc
or
xor
dec
repz
xchg
lods
and
test
inc
inc
lds
dec
sub
inc
in
sahf
jo
xor
daa
dec
dec
sub
out
or
insb
cmpsb
add
call
inc
push
sub
mov
out
sbb
add
jge
rcrl
and
push
xchg
pop
push
sub
and
xor
sub
fistl
repz
push
addr16
sar
aas
stc
adc
sbb
push
inc
in
pop
insl
xchg
adc
jmp
mov
mov
pop
push
mov
ja
add
and
and
dec
adc
push
ret
add
cmp
test
lods
pop
cmp
icebp
mov
inc
mov
out
sub
xor
inc
push
add
aam
rolb
jmp
and
in
mov
adc
mov
mov
inc
cmp
push
icebp
cs
or
or
dec
push
lds
fstps
roll
xor
inc
mov
sbbl
sub
mov
inc
mov
push
dec
push
cmp
adc
out
or
lods
outsl
push
sbb
popa
push
mov
divl
ss
das
xor
insb
xor
jbe
mov
inc
sub
or
ror
sbb
or
in
or
rcll
and
adc
add
push
inc
iret
pop
rcrl
xor
lods
add
sbb
and
imul
outsb
fnstenv
sysexit
and
cmc
pop
xor
sbb
add
sbb
add
pop
mov
and
inc
inc
es
cmp
lods
mov
aam
adc
fildll
push
sub
pop
imul
out
aas
cmp
jge
mov
pop
or
insb
jecxz
or
mov
lods
loope
adc
gs
sub
jnp
je
js
sidtl
out
mov
repz
adc
pop
sub
scas
dec
push
repz
insb
inc
daa
inc
outsb
inc
ret
pop
adc
jp
sbb
iret
pop
or
adcb
jmp
movsb
inc
scas
xor
push
stos
bound
add
imul
add
push
movsl
loope
inc
sub
push
push
sbb
inc
pop
insb
ss
test
es
sub
jl
sahf
testb
xor
dec
pop
push
pop
add
inc
mov
xor
clc
and
mov
add
sarb
pop
adc
andb
or
dec
inc
inc
les
cltd
rcrl
xchg
lock
mov
add
adc
rorb
jl
clc
js
dec
insb
xchg
and
mov
mov
shll
jle
mov
mov
inc
push
cmp
je
or
orl
sub
sub
mov
insl
sbb
out
add
adc
xchg
pop
add
add
pop
mov
je
adc
adc
dec
jmp
xor
dec
dec
adc
inc
rorb
pop
xchg
out
lock
stos
fidivrs
or
movsl
es
lods
inc
and
inc
mov
or
push
inc
sub
mov
add
pusha
lcall
dec
add
and
ss
sahf
or
inc
add
ret
jns
and
add
or
add
xchg
and
push
aas
push
mov
shrl
and
add
addb
mov
sbb
inc
push
cmp
push
xor
daa
xchg
pushf
mov
aam
mov
out
stc
push
ljmp
stos
outsl
sbb
daa
je
ficompl
mov
xchg
adc
push
incl
push
or
mov
sub
push
sub
orb
cltd
imul
add
add
fxch
ss
sub
jo
nop
mov
sbb
test
inc
loopne
mov
dec
dec
push
pop
add
in
test
cmp
mov
dec
push
sbb
aaa
xor
daa
or
les
add
loope
xchg
out
fldcw
cld
push
push
out
push
pop
inc
leave
stos
inc
nop
cmp
orl
add
jo
fstl
shl
ljmp
sahf
fdivs
dec
mov
inc
into
loope
jo
mov
pop
mov
stc
outsb
sbb
adc
cltd
nop
add
nop
in
add
add
cltd
nop
in
add
nop
add
mov
pusha
adc
xchg
xchg
neg
mov
add
add
mov
ret
add
sbb
and
pop
push
ljmp
shrl
ds
xor
xor
in
cmp
rcll
fdivr
fs
or
or
add
cmp
shlb
push
test
fadds
or
push
push
push
pop
xor
jbe
mov
push
pop
cli
or
pop
pop
ss
fmull
push
cld
add
inc
int3
andb
aad
ds
and
sub
cmp
adc
adc
mov
inc
dec
std
or
add
add
fisttpl
das
daa
les
mov
ret
or
popa
inc
fisttps
add
dec
mov
iret
cmpl
xchg
inc
dec
mov
mov
shlb
dec
xor
jo
cmpsb
sbb
pop
sbb
rcrb
sbb
mov
movsb
mov
nop
sbb
xor
mov
xchg
mov
sub
xchg
push
add
or
popa
insb
and
add
dec
mov
mov
add
arpl
mov
test
dec
gs
add
or
add
inc
mov
lods
and
and
pusha
shrl
or
pop
pop
mov
or
imul
inc
rorl
gs
push
inc
cmp
gs
out
mov
ja
dec
or
bound
mov
adc
std
sbb
outsl
mov
push
repnz
negb
in
test
add
xor
or
addr16
cmp
adc
mov
out
dec
jae
sbb
jb
pop
insb
jb
or
addr16
or
or
xchg
mov
movsl
and
sbb
xor
mov
aas
jmp
lods
pop
push
inc
pop
jb
or
sbb
fwait
das
imul
inc
and
dec
popa
mov
pop
outsl
outsb
loope
inc
cmp
inc
xor
mov
jb
pop
test
or
outsb
dec
movl
and
jns
sbb
or
push
mov
int3
add
aas
fcomp
cmpsb
mov
add
jno
in
add
je
orb
mov
and
fstps
push
mov
sbb
dec
sahf
pop
mov
xchg
xor
je
xor
pop
push
nop
fwait
popf
xor
aam
add
js
ds
add
bound
daa
or
add
test
je
adc
push
pop
mov
sbb
xor
add
mov
adc
test
decb
xor
lahf
sbb
nop
incl
sar
inc
xchg
sbbl
mov
cmp
arpl
test
repz
or
xchg
xchg
pop
or
sub
add
bound
imul
les
mov
inc
sub
inc
dec
jl
add
mov
data16
add
adc
or
mov
add
pop
add
adc
subl
add
ss
cmp
xchg
adc
outsb
mov
data16
dec
aaa
stos
sub
shr
add
pushf
push
mov
adc
lock
aas
stc
test
dec
ljmp
scas
or
inc
xchg
adc
xchg
add
outsb
and
fcoml
mov
cmp
add
aad
in
cmp
enter
inc
cltd
les
pop
ret
or
aam
bound
enter
xor
mov
xor
push
movsb
xor
adc
push
sbb
mov
sbb
adc
int3
lock
mov
scas
or
or
jns
out
xor
add
push
inc
insb
sub
imul
repz
psubusb
enter
push
xor
dec
je
mov
sub
imul
es
and
cmp
decl
cwtl
nop
sub
pop
lret
pop
add
dec
push
dec
test
fcoms
fsubl
pusha
mov
jno
mov
loopne
call
adc
test
inc
pusha
jb
mov
dec
imul
adc
mov
add
adc
pop
es
xchg
es
cmp
scas
jb
jae
push
mov
add
mov
adc
and
ljmp
add
cmp
bound
jp
mov
add
jno
or
mov
push
rolb
lods
cmc
and
cmp
lods
mov
test
add
pop
out
rolb
lock
test
xor
xor
adc
cmp
mov
lods
adc
rcrl
mov
das
pop
xchg
mov
or
hlt
lods
jbe
mov
and
arpl
mov
add
mov
fs
aaa
adc
adc
add
loope
or
push
les
stos
add
push
in
cmp
add
dec
add
mov
adcl
mov
mov
or
push
or
inc
enter
jo
and
push
shll
repz
mov
mov
outsb
add
ss
mov
sbb
sub
popf
mov
addr16
push
arpl
lock
xor
or
mov
add
cmp
xchg
dec
and
and
pop
sub
add
sub
adc
add
inc
cmp
sbb
rolb
int
or
push
pop
cs
mov
insb
push
jns
sets
xor
adc
inc
dec
push
xchg
xor
push
pop
xor
and
out
inc
sbbb
pop
mov
dec
std
push
inc
add
negb
xor
repnz
push
mov
or
inc
test
pop
sub
nop
aaa
mov
push
rorb
aaa
aaa
inc
push
cld
decb
lcall
addb
dec
ror
sbb
lds
shl
lods
sbb
push
push
xor
dec
and
js
pop
insb
or
je
sub
xor
and
mov
push
add
push
add
ret
inc
inc
or
jle
aas
cmp
add
sub
movb
cs
mov
pop
dec
lock
pop
cmp
sbb
add
pop
mov
mov
ss
inc
cmp
xchg
adc
xor
sbb
add
roll
or
test
insb
sbb
sarb
dec
add
xor
add
stos
add
lcall
sub
lret
ud1
dec
push
xchg
test
push
or
mov
or
sbb
sahf
dec
lret
loop
inc
xor
sub
ss
imul
ret
xchg
mov
test
mov
addr16
pop
add
xchg
mov
mov
and
add
cmpsb
std
decb
mov
inc
sub
mov
cmp
imul
pop
add
sti
adc
cmpsl
adc
xchg
dec
xor
testb
or
adc
cli
mov
data16
mov
daa
adc
jmp
sub
dec
outsl
add
daa
cwtl
push
fs
dec
and
movsb
push
pop
add
call
dec
enter
popa
inc
xor
outsl
jo
out
jp
je
fwait
or
jmp
xchg
pop
push
shll
imul
mov
or
xchg
push
stos
inc
shll
push
mov
or
adc
sub
sbb
adc
mov
pop
inc
fs
inc
movsb
cmp
adc
push
adc
adc
pop
pop
mov
mov
mov
mov
movsl
rcll
add
call
mov
pop
lahf
mov
jae
jae
sbb
mov
mov
push
pop
sbb
or
pop
orb
cmp
clc
cltd
mov
push
mov
pop
loopne
aas
fadds
pop
pusha
pop
fwait
jge
push
add
push
lds
inc
inc
mov
pop
mov
or
jnp
dec
inc
jo
xor
inc
jp
inc
dec
clc
dec
scas
aam
push
js
cmp
std
outsl
out
ss
fxch
add
jno
mov
and
xor
xor
pusha
leave
xchg
add
or
dec
push
lret
cmc
adc
push
push
test
push
inc
stos
lahf
mov
adc
js
movsb
test
fs
aas
loop
add
or
cmp
addl
adc
and
or
push
cmp
push
add
sub
lret
inc
inc
and
cmc
in
add
push
je
mov
add
repnz
adc
mov
imul
push
sbb
stc
and
add
pushf
sarb
xor
sbbb
outsl
add
pop
lahf
add
add
fcoms
insb
add
mov
cmp
adc
pop
test
orb
jne
inc
xor
add
jno
test
ja
sub
sahf
mov
xor
adc
sahf
inc
dec
call
data16
mov
inc
orl
leave
shrw
es
loopne
ljmp
mov
mov
dec
mov
leave
sub
adc
fwait
mul
mov
mov
sub
push
mov
daa
xchg
daa
insb
add
ret
inc
sbb
movsb
add
lret
sub
inc
lods
outsb
cmp
sbb
pop
loopne
outsb
push
or
or
adc
adc
cli
ret
push
fs
outsl
jne
inc
icebp
inc
cld
or
sbb
xor
adc
es
es
mov
mov
add
pop
mov
out
sbb
cltd
stos
add
in
jns
xor
mov
insb
inc
into
stos
and
and
insb
and
mov
in
and
push
fsubrp
ja
xor
daa
adc
insb
nop
mov
mov
adc
sub
in
adc
mov
add
pinsrw
sbb
push
xor
add
and
inc
add
repnz
add
inc
jg
icebp
cld
std
imul
and
or
dec
fs
les
jno
sub
aaa
stc
xchg
jl
add
add
je
pushf
fs
imul
inc
imul
dec
in
pushf
shlb
flds
adc
pop
add
push
adc
and
or
or
add
pop
inc
mov
inc
push
push
add
insb
xchg
adc
andb
sub
push
jae
xchg
dec
add
and
lret
xchg
fs
popl
sbb
push
lea
adc
into
xchg
push
jle
pop
adc
sub
sub
cs
gs
insl
and
push
adc
inc
mov
mov
adc
jo
xlat
adc
sbb
adc
gs
sti
pop
cmp
adcb
or
sub
pop
push
mov
in
xchg
sbb
xorb
or
mov
pop
mov
pop
ja
pop
push
dec
add
in
or
push
scas
loopne
or
sti
scas
sbb
sub
js
sub
fadd
or
pop
xor
sti
xor
pop
imul
push
push
ret
adc
das
dec
cmp
add
mov
loope
dec
xorb
push
mov
shrb
dec
jmp
repnz
xchg
fcmovnu
fistps
notl
push
sbb
mov
or
movaps
sub
sbb
lret
sub
inc
nop
mov
out
test
mov
addb
sbb
push
push
pop
sub
sbb
inc
and
and
adc
push
jl
pop
fwait
std
rcrb
and
jle
in
fldenv
or
jo
std
inc
sub
inc
mov
mov
out
push
cmpsl
je
push
cmpsb
jns
adc
adc
stos
aas
sub
insb
movups
in
adc
cli
sbb
mov
jae
fcoms
insl
dec
or
out
adc
out
xor
sbb
cmp
push
aas
inc
inc
mov
pusha
stos
subl
fs
add
lret
push
rclb
add
mov
fwait
imul
stos
push
mov
test
add
xchg
add
push
cmp
and
add
add
nop
gs
and
and
pop
es
nop
gs
xchg
daa
sbb
sbb
sbb
and
xor
sub
sub
sbb
inc
xchg
add
das
inc
sbb
push
xchg
add
xor
sbb
xor
pop
imul
cmp
push
sbb
jp
jnp
inc
xchg
add
jge
push
sbb
inc
xchg
add
aas
andb
inc
addl
add
inc
test
sbb
inc
add
popl
nop
gs
xchg
inc
xchg
dec
xchg
pop
push
sbb
dec
lods
gs
xchg
add
dec
push
sbb
inc
xchg
add
dec
mov
push
mov
pop
push
push
rclb
nop
gs
push
ret
push
and
les
or
ja
sub
dec
das
sub
adc
lds
or
dec
xor
popa
sub
mov
cmp
and
jo
dec
pop
and
addl
flds
aaa
je
sahf
add
sbb
add
mov
test
jp
or
inc
sub
aad
shlb
scas
insl
scas
scas
push
sbb
inc
push
add
sbb
adc
in
call
inc
and
mov
imulb
mov
icebp
sub
cmpl
adc
sbb
inc
cmp
js
aam
add
add
and
fs
inc
sbb
test
cmp
mov
insb
cltd
add
sub
fisubl
and
sub
sub
popa
ss
sub
nop
and
and
shrl
sbb
pop
loopne
cmpsb
mov
addr16
sbb
push
testl
push
out
or
insl
sbb
fadds
mov
sub
fdivr
xor
ret
pop
or
daa
or
xchg
popl
repnz
sbb
sbb
mov
pushf
pop
xor
incl
inc
jecxz
arpl
pushf
adc
nop
add
lock
add
mov
jl
inc
xor
and
aas
xor
and
pop
sysexit
outsl
mov
or
adc
adc
cltd
adc
and
enter
aaa
mov
xor
adc
fsubrs
add
add
enter
add
pop
fs
xchg
xchg
adc
sbb
sbb
nop
gs
dec
inc
pop
inc
push
sbb
push
sbb
xchg
add
imul
gs
sbbb
xchg
push
inc
stos
xchg
xchg
add
inc
mov
inc
cmp
and
sbb
dec
jmp
pop
inc
and
adc
sbb
sub
push
cmp
xor
push
daa
cmp
add
jl
enter
cmp
sub
xor
and
add
sub
iret
add
sub
sub
out
sub
cld
sub
das
cmpb
lsl
xor
xchg
out
daa
and
cli
sub
cmp
lret
cmp
insb
daa
dec
add
add
insl
pusha
jecxz
pop
add
xchg
adc
aam
sbb
stos
sbb
push
or
mov
mov
add
paddq
js
mov
arpl
inc
adc
cs
and
inc
sbb
inc
daa
in
adc
sar
comiss
add
cwtl
sub
inc
sub
or
leave
das
mov
mov
cmp
mov
cld
inc
add
nop
pop
pusha
push
push
sbb
mov
pop
and
cmp
ficomps
inc
adc
pop
xchg
aaa
xlat
inc
xor
ja
xor
add
mov
inc
add
mov
sub
add
mov
lods
mov
mov
and
sbb
add
fimull
mov
es
jno,pt
pop
mov
cmpsb
mov
jo
call
jb
cmp
sbb
mov
movsb
cs
mov
dec
or
inc
loop
add
cwtl
push
loopne
add
sahf
jbe
movsb
pusha
insb
inc
daa
pushf
fnstsw
or
fsubs
das
test
sub
push
daa
inc
mov
cmp
push
lods
pushf
adc
mov
sbb
movsb
iret
jo
pop
or
outsb
push
daa
and
aam
add
pop
ja
push
cwtl
scas
push
mov
add
sub
mov
push
mov
push
es
jo
inc
mov
push
add
inc
cltd
mov
cmp
js
outsb
jle
sub
dec
add
ljmp
add
out
jo
testl
iret
and
pop
js
es
sub
inc
fmull
mov
jmp
and
cmc
and
fnstcw
pop
add
test
xchg
and
mov
and
sbb
or
pop
sbb
xchg
push
std
pop
add
nop
rcrb
add
or
inc
pusha
add
nop
addr16
inc
mov
or
add
arpl
into
dec
or
jbe
sub
adc
daa
or
ljmp
xchg
sub
lods
cmpsb
insb
fcoms
enter
mov
int
mov
movsb
xchg
test
lea
adc
cmp
or
add
call
inc
sbbl
std
sub
dec
jbe
jmp
test
push
fisttpl
jbe
call
stos
sub
mov
add
mov
cmp
add
cld
push
cld
mov
adc
mov
insb
insb
xor
sub
cmp
xchg
lcall
jp
xchg
push
or
aas
jae
jae
insl
sub
sahf
mov
xor
push
aam
enter
test
movb
dec
mov
push
leave
ja
movsb
sub
mov
xchg
xor
push
repnz
jmp
roll
sub
or
add
nop
sti
stos
and
shl
jae
fisttpl
xchg
add
pop
fucomip
scas
sub
je
xchg
jl
popf
push
fists
mov
push
mov
aaa
push
jnp
pop
sbb
cmp
add
gs
shrb
ror
mov
aam
popf
mov
cmp
fisttpl
push
cmp
lret
jne
sbb
mov
stos
pushf
dec
jmp
test
push
jge
sbb
adc
add
add
in
cli
fldl
mov
and
jne
inc
daa
call
cmpsl
adc
ficoml
and
out
adc
loope
push
xchg
incb
out
ds
ds
dec
aam
cmp
push
sbb
rorl
cwtl
out
and
and
mov
and
jg
sar
repz
faddl
imul
outsb
pop
cmp
add
add
jb
and
pop
int
daa
ret
pop
push
inc
hlt
out
xchg
rcrl
jl
mov
adc
pop
xchg
xor
dec
cmp
test
xor
sbb
and
push
gs
xor
jmp
imul
mov
push
nop
push
mov
test
in
les
push
cmpsl
mov
fs
jb
inc
and
cltd
and
jb
bound
dec
mov
adc
inc
mov
xor
inc
mov
add
add
filds
outsb
push
cmp
push
pop
cmp
adc
push
mov
adc
push
jae
xor
clc
xchg
or
jg
ds
or
pop
fistl
aad
enter
push
mov
call
mov
in
mov
ret
push
add
adc
dec
repz
lods
rcll
dec
adcl
dec
bound
inc
std
push
decb
inc
or
dec
cli
add
add
negl
stos
add
sbb
mov
cmp
dec
cmp
adcl
aas
pop
imul
push
xchg
cmp
mov
push
or
dec
ds
rolb
cwtl
iret
jl
sbb
adc
or
and
add
loopne
add
xlat
imul
loopne
cmp
adc
inc
pop
xchg
fwait
xchg
ljmp
inc
dec
mov
call
jae
jbe
dec
sbb
nop
movsl
sbb
sub
sub
das
sbb
add
inc
xor
add
rorb
mov
add
dec
dec
cli
sbb
dec
add
pop
sub
sub
addr16
les
xchg
adc
insb
or
add
add
inc
jno
cmpsb
and
mov
mov
fstps
pop
push
mov
fadd
scas
add
add
inc
push
hlt
sub
sub
sbb
sahf
add
lret
push
inc
mov
das
out
iret
cmpb
cmp
adc
xchg
mov
addb
and
push
sarl
adc
mov
dec
pop
push
push
dec
push
ret
jne
pop
insb
add
add
push
sar
dec
cmp
nop
or
pop
cs
gs
dec
pop
or
inc
push
add
mov
and
or
sbb
lcall
mov
nop
gs
xchg
xlat
sbb
data16
pop
dec
push
xchg
movsl
sbb
sub
jae
xorb
push
in
std
or
lds
sub
add
imul
xor
xor
daa
and
cmpsb
jo
and
sbb
jge
pop
stc
icebp
adc
mov
mov
fbld
fwait
pusha
out
dec
push
jmp
push
adcb
lcall
sub
adc
push
sub
dec
and
mov
dec
rolb
out
xchg
sub
xor
add
mov
pop
jns
lods
or
inc
adc
cmp
and
ds
or
or
cwtl
test
insb
pusha
push
dec
inc
shrl
and
push
cwtl
jmp
fistpl
mov
and
ror
adc
shlb
sbb
sub
iret
adc
fcoml
or
push
inc
cmp
mov
std
cmc
shll
xchg
jmp
sub
mov
jae
stos
pusha
xlat
mov
inc
sub
das
or
inc
testl
and
jecxz
cld
inc
adc
ss
insl
in
hlt
cld
fbstp
jge
cld
dec
add
cld
add
add
aam
fisubs
adcb
adc
xorb
add
adc
xor
insb
push
push
insb
jmp
incb
jl
cmp
sbb
xchg
outsb
pop
cmp
and
pop
adc
sti
mov
inc
hlt
cli
lock
cli
adc
cli
xchg
movsl
stc
insb
loopne
inc
mov
xchg
test
imul
inc
je
movsl
jns
fs
cli
sbb
xchg
gs
int
mov
dec
stc
stc
stc
imul
inc
mov
stc
dec
addr16
stc
sbb
imul
fs
xchg
into
sub
cmp
adc
or
clc
sbb
clc
pop
xor
sub
scas
cmpsl
mov
cwtl
xchg
mov
mov
imul
inc
jns,pt
aas
pop
aaa
nop
mov
xchg
cmpsb
and
pop
push
imul
outsl
xor
pop
add
lret
and
add
jmp
add
inc
mov
out
add
mov
cmp
inc
arpl
lret
mov
sbb
and
sub
aam
sarb
fmul
and
std
push
add
or
add
add
int3
xor
sbb
mov
insb
mov
sbb
sub
pop
xchg
push
ss
out
ja
pop
add
cli
imul
imul
imul
cmp
add
gs
dec
adc
mov
push
add
enter
daa
shrb
add
ret
add
push
mov
sbb
mov
pop
sbb
or
sbb
inc
or
test
fwait
push
shlb
sub
add
shrl
cld
int3
pop
ds
and
push
sbb
pop
cs
nop
inc
jnp
shrb
cli
pop
arpl
pop
pop
mov
psubusb
or
int3
sub
xchg
into
push
call
in
int3
push
in
test
mov
xchg
fs
pop
hlt
sar
and
mov
filds
ds
pop
sub
int3
or
xor
mov
or
mov
mov
pop
out
int3
pop
imul
andb
lea
push
js
mov
pop
mov
add
sbb
rolb
imul
aas
sar
push
sub
mov
pop
jmp
aas
xor
mov
js
cli
int3
jbe
mov
mov
adc
mov
push
xchg
xchg
scas
adc
adc
mov
pop
push
movsl
and
mov
or
xor
inc
or
cmp
int
cmp
xor
jno
xor
inc
cwtl
dec
push
test
mov
in
in
out
pusha
std
mov
xor
or
or
jno
push
sbb
pop
dec
dec
fstps
push
mov
ds
adc
lret
adc
jge
lret
push
rolb
sbb
out
pop
dec
cltd
cmp
addl
addb
inc
imul
mov
and
lock
aaa
mov
rolb
lret
add
lcall
dec
ret
push
subb
lret
enter
push
popa
sbb
fnstenv
push
xchg
test
inc
sub
inc
or
push
dec
push
jl
inc
push
and
faddl
mov
adc
sbb
std
imul
les
add
xchg
inc
scas
jae
lret
mov
leave
cmp
test
pop
and
imul
sbb
sub
jecxz
int3
shll
test
dec
pop
dec
dec
inc
inc
cmp
dec
shll
xor
sub
frstor
add
push
jo
inc
inc
leave
cmp
xchg
inc
sub
inc
std
sub
fs
inc
adc
xchg
add
jns
inc
xor
dec
push
push
sbb
add
pop
insb
or
inc
sub
cwtl
sbb
pavgb
or
dec
aaa
andl
adc
cmp
mov
js
cmp
mov
push
subb
std
add
inc
cmp
mov
push
daa
add
adc
ja
outsb
pop
lea
cmpsb
fs
enter
add
dec
add
loopnew
data16
and
lds
fidivrs
adc
lods
add
jb
repz
sub
add
cld
lock
dec
add
nop
xchg
mov
push
bound
push
sti
dec
jb
dec
pop
or
es
int3
pop
mov
xchg
mov
dec
je
les
decb
mov
mov
inc
jbe
cmp
jo
mov
enter
jno
add
leave
xor
repnz
call
xchg
push
enter
add
inc
les
inc
dec
notb
adc
xchg
cmp
pusha
and
xchg
insl
inc
sbb
pop
movsb
adc
shlb
add
movsb
call
pop
xor
push
rcl
shll
add
fsubrs
mov
rorb
sub
jp
es
xchg
gs
gs
sbb
rorb
sbb
push
adc
push
fs
pusha
sub
sbb
jno
add
lret
add
add
add
mov
jg
mov
adc
and
sub
inc
xor
icebp
mov
or
nop
mov
insl
or
test
jecxz
nop
mov
add
jg
inc
lea
ret
mov
test
pop
adc
scas
sbb
adc
mov
push
fiadds
mov
mov
filds
add
add
fildll
ljmp
fildl
lret
jle
sbb
arpl
and
cmp
shlb
add
mov
add
and
and
sub
xchg
pop
pop
mov
sbb
pop
mov
inc
inc
je
or
fisttps
cmpsl
mov
addl
in
inc
cmpsb
add
dec
nop
loop
mov
notb
xchg
aam
sub
cs
sbb
mov
or
adc
jge
sbb
add
pusha
decb
add
decb
sbb
fisubrl
mov
sub
sbb
orl
rclb
out
xor
sbb
fidivrl
fs
mov
dec
aam
jae
and
cmc
or
pop
jae
and
adc
pop
xchg
dec
orl
test
cmc
lock
icebp
and
movsl
and
lcall
and
xchg
pop
sbb
or
fs
mov
add
fs
add
and
pop
or
sub
jno
add
adc
pop
adc
push
and
stc
add
add
adc
lods
gs
adc
push
in
test
xor
push
mov
xor
pop
fwait
cmp
insb
pusha
pop
adc
mov
fdivs
push
mov
inc
mov
ret
adc
add
rcll
mov
je
push
inc
leave
les
add
insl
mov
jle
adc
and
imul
adc
inc
add
sbb
or
and
or
pop
mov
dec
adc
jb
add
shlb
push
pop
add
sbb
adc
lcall
fdivrl
sbb
dec
mov
scas
cmp
adc
push
jnp
sbb
lods
xor
push
push
in
push
and
dec
loope
notb
sub
add
je
stos
push
sub
mov
inc
sub
popa
push
mov
and
repz
sub
sbb
xor
lock
pop
xchg
insb
int3
xchg
fdivs
push
fidivs
adc
inc
and
std
xchg
lods
mov
xor
cwtl
or
fisttpl
add
fcomps
inc
adc
jns
inc
sub
sbb
sarb
sbb
sbb
fildll
sbb
jns
inc
pop
xor
sbb
mov
and
aad
xchg
addl
cmp
add
and
xchg
sbb
mov
loopne
push
xor
call
leave
xchg
or
or
jbe
xchg
lods
insl
or
repnz
orl
add
add
pop
xor
outsl
enter
out
sti
addr16
or
pushf
xorl
lret
pushf
imul
pop
xor
xchg
add
and
add
inc
add
nop
xchg
add
and
add
test
jge
and
xor
add
stos
nop
in
pop
nop
outsb
nop
push
push
mov
pop
sub
inc
push
pushf
inc
lret
popf
add
fadds
mov
sub
xchg
or
and
popf
mov
test
jae
and
push
xchg
movsb
add
stos
fsubs
mov
xor
aaa
push
mov
cmpsb
popl
stos
mov
and
xchg
ljmp
pop
mov
or
gs
in
arpl
adc
stc
mov
pop
add
xchg
loop
and
or
shlb
and
out
mov
add
ja
mov
jnp
mov
sti
or
push
les
sbb
add
or
pop
repnz
sbb
or
xor
sbb
sbb
xor
inc
sbb
jb
xor
or
enter
add
call
loopne
bound
clc
pusha
pusha
fs
and
pusha
inc
inc
arpl
sub
mov
stc
push
pop
dec
lcall
sahf
xchg
stos
nop
and
nop
dec
and
aam
and
mov
and
data16
enter
fisubrs
and
and
in
out
faddl
cs
xchg
addr16
xor
in
xor
in
in
xor
xor
add
xor
gs
leave
xor
xor
and
jb
jb
xor
sarb
std
cmp
sub
inc
mov
cmp
xchg
addr16
mov
cmp
and
sub
cmp
pop
bound
jb
aas
inc
inc
pop
imul
push
lds
push
xchg
xor
popl
out
inc
and
outsl
mov
pusha
push
les
push
sub
adc
and
or
dec
xor
les
add
sub
rcrl
or
orl
sbb
inc
subb
mov
jl
cmpsb
nop
add
add
inc
push
add
nop
add
add
or
adc
adc
pop
add
push
pusha
cmp
xor
adc
imul
jnp
adc
sbb
popa
mov
pop
cmp
dec
int3
add
fcoms
xor
sbb
cwtl
dec
fmuls
xor
add
ret
sbb
dec
addr16
idivb
inc
mov
cs
sub
fcoml
das
scas
add
pop
fisubs
ret
sbb
cmp
xor
add
pop
sbb
shlb
push
and
mov
jno
dec
jbe
gs
push
cs
adc
xchg
sti
hlt
add
ja
cmp
sub
xor
adc
cld
add
push
cmp
int3
push
cmp
mov
int3
push
sub
rcrb
push
sbb
call
xchg
and
pop
jmp
cmp
xchg
pop
push
dec
pop
nop
xor
dec
add
and
setns
xlat
ret
sbb
sbb
add
inc
inc
and
call
imul
fs
xor
add
pop
sub
mov
mov
mov
pop
es
and
js
shl
lods
test
fldenv
test
fsubs
xor
scas
test
stc
add
jns
cwtl
and
and
add
int
test
mov
dec
lods
add
repnz
fstpl
sub
jnp
add
adcb
call
inc
lea
mov
push
ljmp
sbb
idivb
test
pop
insb
push
ret
pop
xor
cs
sub
add
popa
and
dec
push
inc
cmp
sub
sbb
jp
sub
xor
aam
nop
test
fadds
sub
scas
ljmp
sbb
rcl
fdivrs
pushf
in
mov
rcr
inc
fstpl
sbb
add
push
out
add
cmp
aad
stc
pop
mov
adc
sub
pop
sub
in
insl
adc
test
sbb
sub
sahf
and
sbb
inc
sub
test
or
adc
sbb
aas
outsl
movsb
or
sub
out
and
add
inc
inc
xor
je
adc
popf
xor
dec
or
xor
repz
mov
fdivrs
loopne
add
cmp
push
sarb
pop
loopne
add
inc
dec
ret
std
hlt
sti
xchg
and
or
sti
mov
add
pop
sub
xchg
or
and
clc
dec
push
in
js
cmp
push
pop
or
imul
sub
push
scas
mov
pop
icebp
mov
adc
cmp
cmp
push
sbb
xchg
cs
push
dec
mov
pushf
das
mov
jp
sbb
ret
xor
xor
xor
rolb
sub
or
adc
xor
mov
adc
pop
push
in
jae
xchg
inc
adc
cmp
std
shlb
outsb
stos
and
or
dec
aaa
or
and
cmp
push
xor
and
enter
cmp
xor
and
in
xor
and
inc
enter
int3
inc
pushf
pop
and
aam
inc
xor
hlt
cmp
add
mov
mov
fs
add
es
test
add
sub
out
inc
mov
inc
adc
and
test
inc
in
xchg
dec
xor
movsb
imul
dec
push
movsb
stos
or
add
pop
lods
fdivr
das
sbb
pop
fdivrs
jp
negl
jne
push
dec
daa
push
cmp
orb
pushf
push
adc
push
adc
adc
push
push
aaa
out
leave
fadds
and
andl
push
mov
push
fildl
push
sbb
and
lods
das
sub
jmp
pop
adc
adc
xor
pop
fistpl
dec
pop
dec
mov
sub
or
incb
xchg
or
mov
mov
push
dec
rorb
loopne
sti
inc
xorb
push
lret
outsb
xchg
mov
in
test
dec
nop
inc
inc
je
mov
or
hlt
sbb
movsl
sub
aad
fwait
sub
push
sbb
aam
pop
arpl
aad
and
shrb
add
mov
lahf
sub
adc
mov
shrb
add
pop
inc
fmuls
fcomps
xor
mov
fcompl
xor
xor
rorl
out
or
cmp
push
mov
dec
inc
jnp
inc
push
or
pop
daa
cmp
sbb
in
pop
jnp
pop
insb
push
push
jecxz
sbb
or
mov
dec
out
cmp
les
in
leave
popa
test
cmp
and
shll
push
xchg
int3
out
push
inc
and
loopne
xchg
call
push
adc
inc
loop
add
lea
add
pop
sbb
or
mov
cltd
bound
out
and
pop
scas
jae
outsb
push
add
inc
xor
fwait
mov
insb
and
adc
jae
test
enter
pop
and
enter
mov
push
add
xchg
xor
push
std
or
mov
dec
es
add
popa
ret
mov
test
and
or
add
leave
cmpsb
lods
or
or
imul
xchg
add
and
movsb
mov
xchg
cmp
fs
dec
sbb
nop
push
pusha
insb
add
add
pop
inc
and
push
or
or
sbb
xchg
cwtl
add
imul
lcall
pop
rcll
adc
insb
and
int3
sahf
shll
push
add
pushf
jp
or
and
jp
dec
outsb
mov
sahf
pop
daa
pop
or
pop
push
and
push
fnstsw
cmp
sbbb
sub
loopne
loope
xor
add
cmp
sbb
push
repnz
sbb
pop
adc
int
add
shrl
ss
cs
iret
imul
outsl
jmp
es
push
test
and
loopne
cmp
jge
add
xor
imul
mov
cli
leave
subb
add
mov
cmp
xor
mov
gs
pop
sarl
adc
cwtl
push
rorl
cmp
adc
mov
xor
mov
add
mov
jnp
scas
insb
add
inc
jl
enter
lret
xor
std
aas
fdivr
daa
clc
cld
add
std
dec
sbb
stos
std
push
mov
inc
push
or
lods
xchg
arpl
sub
and
add
das
test
fldl
sub
push
sar
mov
sbb
enter
sbb
cld
or
pop
push
sub
mov
sbb
push
cpuid
and
pusha
mov
fisttpll
sbb
xor
push
dec
sub
pop
nop
xor
mov
or
xor
std
imul
sarb
lcall
inc
icebp
push
shlb
and
xor
or
pop
stos
into
fdivr
adc
das
or
and
add
ljmp
test
xchg
adc
sti
sub
inc
jno
rcll
movsb
imul
mov
sub
pushf
cld
add
or
sbb
fstpt
cld
cmp
or
xor
cld
mov
jbe
push
dec
in
mov
mov
sahf
stos
fidivrl
xchg
in
fisttpll
mov
sub
shlb
out
push
insl
pop
add
into
inc
add
xchg
orl
sbb
and
cwtl
mov
and
das
cwtl
add
fnstenv
fcmovnu
lods
jo
sarl
sub
adc
pop
inc
in
scas
popa
enter
inc
mov
insb
ret
ret
insb
and
std
sub
inc
sahf
lret
pop
call
jb
pop
sbb
push
fcomps
sbb
popf
fcomp
fiadds
sbb
inc
sub
jl
shrl
add
xchg
inc
addr16
int3
cld
sub
ret
dec
push
pusha
or
in
orb
fs
pusha
xchg
sbb
pop
xor
xor
lahf
lcall
mov
dec
jb,pt
push
add
inc
and
xor
lret
faddl
enter
aam
xlat
jbe
sbbb
movsl
cmp
cs
mov
lea
push
int
or
or
sbb
mov
adc
gs
sbb
and
shl
or
in
arpl
sub
jns
imul
mov
test
inc
jne
and
in
add
movsl
fisttpll
add
iret
jne
fs
pop
push
cmpsb
idivb
xchg
ja
sbb
je
into
xchg
lret
enter
mov
adc
pop
pusha
sbbb
sbb
and
sbb
orb
or
fcompl
xchg
add
cmp
test
pop
and
notb
and
mov
add
sbb
xchg
mov
shrl
into
adc
inc
xor
fmuls
pusha
stos
popa
mov
pop
dec
add
popa
rcrb
shrl
call
cmp
adc
pop
hlt
sti
add
movsb
pushl
int
add
mov
fidivrl
mov
clc
sti
add
add
push
fmul
adc
lock
xor
lods
or
in
or
or
dec
mov
loop
test
scas
sbb
frstpm(287
sbb
or
data16
lcall
pop
or
mov
ret
xchg
test
mov
cmp
mov
or
jnp
sbb
xchg
fbstp
loopne
dec
sbb
test
xlat
inc
and
and
jge
mov
fsubrs
pop
bound
pop
insl
and
pop
in
cmpsb
cmp
push
xor
pop
dec
sbb
fisubl
jno
pop
arpl
jo
lock
imul
gs
xor
lret
fdivs
mov
lcall
adc
test
sbb
adc
ljmp
pop
mov
gs
mov
or
gs
or
pop
sbb
imul
pop
mov
mov
xchg
add
sti
sti
jbe
cmpsl
mov
mov
add
and
in
sbb
sahf
xchg
mov
add
add
icebp
pusha
gs
inc
and
pop
xchg
aam
ret
jne
stos
or
mov
push
stos
add
insl
cmp
mov
push
stos
pusha
mov
pop
ret
aam
mov
jbe
add
xchg
sahf
xor
jo
jo
test
adc
xchg
or
mov
mov
add
test
add
inc
ds
cmp
repnz
or
or
pop
cmp
push
pop
dec
bswap
push
loopne
xor
stc
jno
movsb
adc
pop
stc
ss
adc
adc
sub
mov
or
add
int3
cwtl
push
int
xor
inc
push
mov
call
fstps
into
xchg
push
int3
inc
and
and
into
sarb
fmul
fnstsw
sti
jb
fstpl
ja
or
rorl
push
cmp
push
xchg
xor
mov
verr
clc
cmp
add
adc
push
sub
shrb
pop
aam
fs
inc
xchg
add
add
sbb
int3
adc
add
sub
rclb
xchg
mov
les
lcall
or
mov
fadds
xlat
in
sti
or
aas
rcl
sti
xor
sti
or
sub
mov
clc
dec
cmp
fstps
sarb
mov
mov
mov
cmp
pushf
mov
push
pop
movsb
mov
jle
xchg
sti
xchg
sti
es
pop
mov
movsl
xchg
pop
imul
jno
inc
mov
inc
inc
sub
cmp
cltd
jnp
ds
sbb
adc
cmp
cmp
inc
loopne
dec
in
fcos
mov
inc
stos
mov
add
sti
xor
dec
cmp
nop
sti
cmpsb
fdivr
dec
inc
push
fnstsw
popf
adc
pop
push
enter
inc
faddp
cmp
inc
xor
or
sbb
and
cmp
push
inc
xchg
dec
loope
xchg
and
mov
xor
xor
and
sub
or
or
push
orl
and
cmp
in
enter
inc
and
fs
sbb
jmp
lahf
and
jecxz
or
loop
xchg
adc
and
clc
push
outsl
and
xchg
in
pop
adc
jae
addr16
adc
sbb
mov
push
add
cmpl
add
daa
out
enter
mov
insb
xor
jb
push
lock
push
shlb
pusha
pusha
add
outsb
add
fdivr
pop
pop
mov
fs
adc
mov
sbb
icebp
dec
inc
mov
or
sub
mov
cmp
repz
pop
std
dec
mov
stc
or
xor
sub
and
cltd
add
sbb
and
xor
bound
std
or
mov
inc
clc
sarl
insl
pop
dec
std
add
pop
idiv
pop
stc
add
cli
fsubl
push
push
push
and
dec
xchg
jle
shlb
mov
sti
hlt
cltd
or
mov
xchg
inc
sbb
inc
cli
or
cli
dec
cli
ja
sub
mov
push
mov
xor
sub
add
push
pop
cld
jno
pop
adc
cli
int
enter
aam
inc
pop
and
and
incb
in
mov
sbb
aad
sub
push
sbb
mov
fisttpll
cltd
add
jl
inc
lock
inc
cmp
jl,pn
sub
add
adc
cli
dec
jnp
ret
leave
ret
push
add
or
cmpb
add
jae
add
mov
test
into
addl
outsb
rcrb
add
in
rcrb
add
loop
inc
cmp
cltd
xor
add
xor
sbb
add
pushf
dec
rorb
pop
dec
and
in
xchg
push
add
jnp
push
cld
and
mov
or
outsb
popf
cmc
push
dec
popa
xchg
sub
pop
dec
dec
aaa
dec
outsb
cmp
pop
or
sub
jmp
xchg
push
dec
jle
sbb
mov
add
cmp
and
pop
dec
sbb
or
arpl
and
sahf
and
cmpb
into
add
frstpm(287
or
mov
add
or
das
push
bound
pcmpgtb
push
adcb
dec
inc
scas
inc
push
adc
test
or
adc
inc
push
fs
or
call
sbbl
enter
sbb
or
enter
sbb
push
repz
adc
pop
sbb
insl
xchg
sub
add
nop
stos
and
sub
add
and
sub
add
jb
popa
sub
and
push
sub
add
and
das
sbb
fs
in
xor
scas
inc
push
xor
mov
xor
sub
xor
das
jo
shlb
imul
rolb
push
sbb
out
test
jae
adc
xchg
icebp
or
mov
dec
sti
cld
ljmp
sbb
pop
or
pop
xchg
das
mov
roll
pop
dec
cli
add
mov
shll
adc
sub
imul
scas
inc
cli
inc
xor
and
fcomps
and
dec
in
in
jmp
cld
xorl
cmpb
lock
orl
cmp
sti
mov
dec
shrl
enter
or
fdiv
lcall
sarb
lods
test
pushf
cwtl
jae
test
sti
pop
add
lcall
pop
ss
roll
jo
dec
loopne
hlt
outsb
fldl
inc
add
and
mov
pusha
or
dec
add
adc
arpl
xor
jb
mov
stos
xor
loopne
call
subb
or
flds
jno
jg
popl
pop
add
push
mov
mov
cmp
mov
orb
movl
or
sbb
add
adc
leave
mov
jae
es
mov
popf
dec
add
adc
xchg
mov
fsubrs
xor
pop
push
dec
daa
and
adc
inc
loopne
dec
ja
mov
or
in
inc
rclb
andl
cmp
and
add
or
iret
cs
arpl
aam
cmp
call
jne
sub
ds
inc
cmp
int3
push
loopne
push
xor
aam
sub
xlat
test
stos
popa
push
lock
scas
shrl
and
sub
mov
sbb
xor
sub
cmp
in
mov
rcl
cmpsl
add
cmpb
bound
inc
or
pushf
inc
ds
repnz
jp
int3
xor
or
add
leave
daa
dec
into
out
enter
cs
push
enter
inc
mov
adc
insb
add
push
repnz
jmp
inc
mov
push
stos
loop
or
sbb
sbb
push
test
pop
inc
sbb
jnp
cli
mov
fs
mov
or
xor
inc
cmp
and
or
adc
and
lret
push
xchg
or
in
inc
mov
mull
test
mov
mov
dec
mov
add
mov
ds
repnz
fimuls
mov
cltd
or
inc
inc
scas
dec
out
dec
push
rorb
add
scas
inc
lods
incb
ltr
and
stc
push
leave
lods
or
push
add
dec
mov
sub
dec
add
xchg
dec
inc
push
pop
xor
repnz
pushf
xor
jb
push
fidivrs
jb
jb
push
and
cmp
sbb
push
bound
in
push
andl
pop
out
xchg
or
cmp
cmp
xchg
fs
and
pop
add
xchg
je
cli
and
sbb
mov
pop
mov
pop
pop
pop
imul
sarb
cmpsl
add
add
add
adc
cld
xlat
inc
les
xor
add
add
xchg
xchg
or
push
pop
jecxz
orl
mov
sbb
or
rolb
push
pop
cmp
or
push
mov
dec
test
add
arpl
inc
dec
cmp
and
sub
jmp
xor
mov
call
push
movsl
mov
and
shrb
inc
je
lea
gs
xor
pop
nop
and
sub
int
mov
cmp
sbb
or
jno
sub
jle
insl
inc
adc
dec
mov
bound
sub
inc
or
push
addl
cs
fs
mov
adc
test
xchg
push
sub
and
outsl
xor
scas
dec
or
and
int3
pusha
add
push
in
outsb
and
cmpsb
mov
sbb
or
sub
sub
incb
sub
xchg
insb
loopne
jnp
jl
in
rcrb
sarl
add
fdivl
adc
mov
std
sub
add
or
dec
into
outsb
data16
in
inc
test
xor
int
push
xor
pusha
adc
in
punpckhwd
or
flds
in
lock
add
or
sbb
enter
leave
push
adc
mov
pop
adc
cmp
mov
dec
dec
leave
sub
push
das
or
and
push
add
sbb
push
add
rolb
nop
dec
or
mov
dec
jbe
ja
adc
mov
js
sbb
jns
inc
and
lahf
push
adc
sub
repnz
insb
std
add
jns
mov
adc
push
loopne
and
push
or
shll
push
cmp
sbb
jp
pop
inc
push
nop
or
sbb
add
enter
dec
dec
sbbl
mov
add
cmp
cmp
inc
xor
fs
mov
sub
nop
add
add
sub
jle
stos
pop
pop
sbb
inc
push
jg
sbb
ljmp
fbld
or
test
pop
popf
xor
scas
add
xor
lock
mov
adcb
add
imulb
mov
inc
xchg
inc
add
cmp
fldl
push
push
cmp
adc
or
pop
mov
shlb
and
mov
mov
push
test
sbb
insb
mov
test
add
sub
xchg
out
sbb
test
add
out
mov
adc
jp
add
int3
leave
shll
inc
add
sti
sub
mov
ss
adc
les
cwtl
es
pop
std
pop
in
adc
std
fildl
insb
adc
mov
inc
js
mov
inc
enter
mov
push
lret
fmuls
test
or
mov
lea
std
mov
adc
pop
rclb
or
outsl
arpl
sbb
sbb
or
sbb
and
mov
cld
add
sbb
cmp
sbb
ret
movsb
jne
dec
cs
lcall
movsb
sub
mov
xchg
ret
bound
insl
xor
mov
ret
loope
lock
push
adc
xor
xchg
pop
push
cmpsb
sub
push
sbb
mov
or
aaa
mov
add
popa
and
popa
sarb
sub
test
sbb
push
xorb
cwtl
or
mov
enter
ja
test
mov
pop
clc
stos
inc
scas
nop
cwtl
clc
lods
loopne
nop
lcall
pop
negl
jb
sbb
xchg
jb
and
out
popf
hlt
cld
adc
push
inc
sahf
and
inc
mov
xorl
stos
stos
and
loopne
push
les
and
mov
shlb
cld
inc
loopne
stos
xchg
lock
jge
inc
mov
and
fcoml
lret
and
add
adc
xor
sub
pop
pop
xchg
test
call
xor
roll
or
xchg
adc
incl
pop
call
pushf
add
mov
mov
fdivr
push
mov
push
pop
and
adc
push
mov
aaa
mov
mov
shlb
pop
mov
test
inc
dec
mov
call
add
and
repz
movsl
push
sbb
mov
andb
bswap
mov
xchg
and
pop
and
movsl
fsubrs
fidivl
or
add
inc
jnp
test
scas
test
and
nop
and
stos
mov
imul
add
xor
lods
mov
sub
scas
mov
push
push
pusha
mov
popa
lds
mov
dec
aam
dec
and
in
add
add
dec
add
arpl
popa
xchg
pusha
cmp
mov
cmp
adc
mov
push
nop
inc
lret
enter
adc
out
ret
and
add
or
mov
popa
mov
out
mov
push
inc
daa
add
inc
push
fs
rolb
nop
xchg
shl
enter
ret
inc
sub
add
xor
lds
and
repz
orb
dec
sbb
in
sub
lret
add
fstl
jno
int
sub
push
xor
sti
pop
xor
sbb
add
rorb
clc
sub
rcll
add
dec
popf
and
aam
xor
push
mov
jle
int3
cld
or
sub
cld
adc
push
cmp
sbb
push
mov
pop
cmpb
and
cld
adc
xchg
push
scas
and
aas
or
or
xor
mov
lods
xor
adc
pushf
xor
fstpt
xor
lods
mov
mov
jl
xchg
fistps
loopne
pop
cmpsb
pop
cld
adc
insl
fs
pop
inc
dec
cld
sbb
shrb
stos
ds
fwait
roll
adc
mov
sti
or
pop
inc
mov
sti
cmp
xchg
out
test
sub
dec
rorl
ljmp
mov
push
add
inc
shlb
cmp
or
enter
lods
or
ljmp
aad
cld
ror
mov
pop
mov
lods
sbb
xchg
xchg
xor
jno
dec
and
out
cmp
faddl
adcl
sub
cld
sub
fsubrl
lret
sub
les
ss
mov
pop
ret
lock
jp
cs
jecxz
rorl
ficoml
pop
in
adc
and
xor
inc
or
out
cwtl
and
fadds
filds
add
cmp
loopne
or
mov
andb
clc
sub
js
orb
movsl
pop
std
xchg
push
push
ja
sbb
push
xor
and
mov
les
and
or
mov
push
jecxz
ret
mov
pushf
add
mov
aam
push
add
mov
repnz
je
jo
push
mov
add
push
ret
imul
clc
orb
pop
into
addb
dec
je
mov
or
and
sub
fcoms
rcrl
loopne
cwtl
xor
hlt
adc
pop
mov
ljmp
pop
dec
push
jne
sbb
cld
xchg
mov
gs
pop
stos
and
inc
add
bound
adc
std
das
sub
or
xor
rorl
jl
dec
shll
sbb
push
or
xor
enter
jmp
mov
push
cmpsb
pop
dec
cmp
pusha
sbbb
and
add
int3
xorb
cs
or
or
inc
add
js
add
fs
add
mov
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
adc
pop
push
add
data16
add
mov
pushl
push
pushf
inc
outsb
imul
fsts
sub
add
xchg
pop
jb
xchg
cs
pop
outsl
insl
bound
pop
jae
adc
sub
gs
push
add
or
gs
xchg
or
js
add
mov
pop
inc
fs
data16
adc
addb
inc
mov
push
fdiv
cwtl
sbb
popa
and
mulb
jno
enter
xchg
pop
bound
sub
dec
add
popaw
arpl
adc
js
jo
lret
jbe
push
jb
mov
enter
mov
lret
adc
int
aas
add
push
jb
arpl
insl
fnstenv
pop
sbb
test
cmp
cmp
jl
xchg
inc
inc
lods
fs
inc
mov
fwait
imul
add
sbb
lret
mov
imul
sbb
inc
add
push
inc
dec
add
add
rcrb
add
sidtl
add
add
pop
add
inc
push
rcr
out
adc
mov
xchg
sub
add
dec
insb
pusha
adc
or
pop
push
add
xchg
das
les
sub
jo
add
push
pop
and
add
cs
push
add
and
cmpb
inc
pusha
cs
inc
stos
mov
and
add
xor
inc
or
jb,pn
jb
ret
lret
sti
dec
fcoms
sub
inc
sbb
pop
add
add
mov
adc
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
rol
pop
dec
add
add
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
rol
pop
dec
add
add
add
add
xor
add
add
jo
add
rol
pop
dec
add
add
add
add
add
add
pusha
add
add
add
call
add
add
rcrb
add
add
add
add
add
add
movsb
add
sub
add
mov
add
rol
pop
dec
add
add
add
add
add
add
mov
add
rol
pop
dec
add
add
add
add
add
add
enter
xor
add
and
add
mov
add
rol
pop
dec
add
add
add
add
add
add
lock
addb
add
rol
pop
dec
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xchg
ja
ja
ja
ja
jo
ja
ja
ja
pushl
ja
ja
ja
pushl
add
add
add
jg
pushl
outsb
outsb
pusha
ja
pushl
out
outsl
out
outsl
out
pusha
pop
jg
ja
pushl
outsb
outsb
pusha
pusha
ja
ja
pushl
data16
pop
jg
ja
pushl
outsb
pusha
add
pusha
pusha
ja
push
pushl
out
outsl
out
pusha
data16
push
ja
pushl
outsb
pusha
data16
pusha
pushl
ja
jo
ud0
mulb
pushl
pushl
pusha
add
push
pusha
pusha
pushl
out
pusha
data16
pusha
pusha
lock
pushl
pusha
data16
add
pusha
xchg
pushl
jmp
mulb
data16
ud0
pushl
pushaw
push
pusha
data16
mulb
pushl
mov
outsb
pusha
outsb
mulb
ud0
pushl
or
pushaw
out
mulb
pusha
pushl
add
pusha
clc
pushl
add
mov
incl
pushl
add
add
clc
ud0
jo
add
add
decl
jo
add
add
clc
out
out
ud0
add
add
decl
jo
add
add
clc
jo
add
add
decl
mov
clc
add
add
add
decl
add
decl
decl
add
incl
add
mov
mov
incl
add
incl
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
add
incl
add
inc
jae
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
add
pushl
add
add
pushl
out
pusha
ud0
jo
imul
pusha
pusha
pushl
pusha
outsl
pusha
pusha
pushl
out
add
pushl
testb
add
pushl
out
push
mulb
pushl
xchg
pusha
pushl
or
jo
or
incl
add
or
jg
add
js
add
mov
loopne
jae
loopne
jb
loopne
cmp
add
clc
add
add
add
and
add
je
add
add
addb
add
add
loopne
add
loopne
lock
add
loopne
add
loopne
clc
add
jae
add
add
add
add
and
add
add
call
jne
adc
add
add
sub
add
xor
add
jno
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
and
and
and
and
and
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
add
jb
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
add
jbe
add
add
js
add
add
add
add
leave
cmpsl
add
mov
add
cmpsl
add
in
add
hlt
cmpsl
add
add
add
adc
add
add
add
inc
add
addb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
inc
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
