lcall
push
ret
jbe
mov
mov
xor
filds
pop
pop
pop
ret
orb
ror
adc
neg
mov
pop
ret
and
sbb
mov
sti
mov
ret
inc
sub
and
add
jg
mov
sbb
test
and
call
and
adc
fwait
jge
std
and
and
and
sub
pcmpeqd
and
test
or
jno
insl
sbb
cmp
ss
in
pusha
in
jbe
mov
add
adc
mov
insl
sbb
sub
decb
pop
adc
rcr
and
pop
add
and
mov
in
inc
inc
subb
andb
inc
and
adc
pop
sub
xor
mov
or
cltd
pandn
adc
sub
pop
call
mov
or
add
sbb
orb
psubq
and
imul
push
mov
push
and
or
mov
cmp
sub
cwtl
dec
and
xchg
imul
mov
subb
sbb
or
imul
in
adc
or
adc
cmp
lret
xchg
add
lcall
mov
in
cmpl
add
aad
pop
icebp
lods
inc
add
add
movsl
lret
mov
add
or
hlt
xor
lds
mov
std
idiv
addl
xchg
xchg
shll
movsb
imul
cmovp
pushl
ret
add
lret
xchg
and
out
test
das
fistpll
mov
cmp
outsl
fldt
add
les
or
adc
or
aad
mov
cmpsb
insl
sti
mov
mov
add
xchg
xor
pop
fisttpl
adc
stos
addb
xchg
add
jle
jg
add
movl
add
mov
add
mov
movsb
xor
add
and
in
rcll
adc
mov
int3
add
je
movsl
add
mov
or
insl
jnp
in
movsl
mov
mov
mov
lahf
push
mov
sar
fisttpl
add
push
test
into
pushf
ljmp
cltd
add
pop
sbb
idiv
mov
add
xchg
sbb
loopne
mov
mov
mov
mov
popa
repz
mov
xchg
xor
fcomi
or
add
push
fstl
ret
sub
add
push
or
or
ljmp
mov
mov
pop
pop
xchg
test
call
cs
pop
imul
and
sub
idiv
mov
mov
je
ja
push
add
jbe
dec
jl
popa
out
cmp
rorb
inc
push
out
push
clc
add
cwtl
sbb
add
or
mov
sbb
add
pushl
mull
add
fs
cmp
sbb
test
xor
sar
lcall
add
or
fisttpl
or
jns
lods
jmp
popf
pop
mov
sbb
leave
outsb
push
sub
add
jl
jne
fists
adc
add
add
idivb
sti
pop
lods
or
lock
cmp
mov
jne
jae
adc
fdecstp
mov
add
sub
fcoml
fisttpl
incl
sub
cmp
push
outsb
repnz
xchg
xor
divl
sahf
xchg
lret
and
in
movsl
push
push
ds
push
mov
mov
ficoml
cmpsb
nop
pop
inc
idiv
outsl
outsl
jecxz
adc
in
and
aas
or
int
jb
test
test
jb
push
cli
sbb
in
shlb
lahf
cltd
pop
mulb
mov
sbb
jnp
shlb
daa
stc
mov
iret
ds
cwtl
inc
add
adc
jge
xchg
add
leave
fimuls
and
ret
mov
mov
and
pop
or
add
cmpsb
test
imul
xchg
and
pusha
mov
adc
lods
mov
out
mov
les
fs
in
lods
outsl
fsts
test
adc
into
outsb
clc
mull
fists
xor
inc
add
mov
mov
adc
shrd
xchg
sbb
inc
aaa
sub
outsb
sub
into
cmp
mov
xor
xor
and
xor
dec
push
mov
int3
mov
push
outsl
pushl
or
inc
add
mov
pop
shrb
sbb
or
mov
mov
push
rolb
and
inc
and
mov
sub
not
mov
mov
xlat
or
dec
rclb
mov
push
sub
fiaddl
push
sti
pop
sti
cmp
or
push
inc
not
pop
inc
xor
data16
mov
adc
fimuls
clc
add
pop
jecxz
out
mov
or
inc
mov
xchg
fcomi
and
xor
xor
pop
add
and
mov
imul
int
push
sbb
decl
rolb
outsl
loop
icebp
sti
popa
push
mov
outsl
pop
not
jbe
and
and
insw
dec
mov
repz
and
mov
cmpl
add
neg
mov
out
jge
inc
repz
push
clc
xor
out
fdivrl
add
mov
ret
dec
jge
aaa
out
mov
les
mov
pop
cmpl
sarl
dec
xor
ja
xor
add
rolb
mov
inc
mov
sbb
mov
in
pushf
push
jne
inc
aaa
mov
out
adc
and
adc
pop
jnp
cmp
into
lret
xchg
mov
out
insl
sbb
fcoms
fldenv
out
or
in
inc
mull
push
les
outsl
test
sub
les
or
sub
pusha
cmp
jl
add
bt
rcr
dec
sub
or
pop
je
aaa
jno
fs
xor
sbb
or
pop
fdivs
imulb
clc
inc
sub
push
add
outsl
out
jbe
xlat
loopne
mov
dec
sub
sbb
push
add
in
enter
fmuls
ret
push
loope
dec
ret
mov
jl
inc
sti
sbb
mov
jnp
andb
ficoml
in
idivl
int3
iret
mov
fstl
fists
xor
or
fisubs
pop
or
ja
adc
imul
sbb
aaa
sub
mov
pop
xlat
data16
rol
pop
adc
push
sub
push
arpl
and
es
or
leave
ret
pop
jbe
push
psraw
clc
pushl
add
cwtl
sub
fmuls
clc
add
getsec
xor
jmp
push
out
fidivs
mov
push
xchg
and
sbb
lret
mov
icebp
xchg
loopne
data16
test
add
pop
inc
jl
xor
push
adc
xor
sub
aam
adc
daa
adc
sar
out
jle
jmp
jp
pop
out
fucom
das
scas
aad
popa
add
sbb
mov
adc
push
outsb
mov
repnz
or
pop
mov
out
push
enter
stc
and
subb
add
stc
das
lock
xchg
mov
add
loop
gs
ja
scas
sub
sub
cmpsb
sahf
add
lds
push
movsl
dec
popa
filds
xor
clc
testb
pop
ret
dec
pusha
aad
iret
and
ret
sub
sbb
xchg
je
cmp
pop
push
add
icebp
bound
rorl
inc
xlat
pop
or
jno
cs
cmp
inc
push
notb
xchg
mov
xchg
fcoms
sub
or
sbb
or
aam
icebp
fisubs
addl
gs
jae
mov
push
or
inc
sbb
pop
cld
xorl
pop
outsb
in
mov
fists
mov
push
stos
push
cmp
cs
pop
sahf
lods
xlat
pop
add
add
in
or
adc
add
sub
push
mov
dec
idiv
aas
insb
push
or
loopne
fisttpl
cld
cmp
jnp
xchg
mov
add
cmpsb
rcr
pop
stos
or
repnz
mov
or
cmpsb
stc
in
xchg
or
outsl
lock
cmp
rclb
push
adc
add
aas
or
xchg
jmp
dec
in
shl
dec
mov
arpl
inc
dec
cmp
outsl
mov
mov
leave
cwtl
cmp
test
ss
das
rcll
or
les
dec
addb
hlt
sti
or
pop
jecxz
pop
mov
cmpsl
mov
in
pushf
adc
sbb
mov
stos
sub
add
mov
test
xchg
pop
dec
and
loope
or
adc
aas
cmp
mov
fdivl
dec
movb
jge
in
and
or
dec
icebp
mov
lahf
jne
lret
pop
cld
mov
cmc
rcr
out
fsubrs
sub
pop
rclb
xchg
mov
jle
lcall
stc
mov
out
jbe
lds
nop
adc
in
nop
bound
test
loope
cmc
xchg
pop
stc
jg
mov
mov
ljmp
jecxz
or
gs
sbb
ror
xor
dec
lods
pop
mov
dec
sub
inc
pop
cmp
mov
scas
and
adc
enter
dec
stos
cmpsb
cltd
stos
dec
and
ss
dec
lcall
dec
jne
cmp
cmp
ljmp
and
inc
sub
or
add
mov
not
add
insb
imul
mov
cs
aam
pop
push
dec
mov
shlb
sub
lock
in
sarl
push
fisubl
or
sbb
or
pop
scas
jnp
repz
mov
inc
sbb
fcomp
add
add
repnz
mov
dec
push
imul
and
test
stc
lods
jne
push
insl
jmp
repz
dec
or
sbbl
cmp
push
xor
mov
dec
pop
or
dec
hlt
add
repnz
out
sbb
neg
enter
ret
faddl
ds
lcall
filds
xor
out
imul
push
push
sbb
ret
ffreep
insb
mov
add
add
xchg
cmp
int3
add
cmp
pushf
imul
or
repnz
sub
sub
and
pop
adc
addr16
in
aas
mov
adc
out
popa
inc
sbbl
cmp
push
dec
aaa
inc
outsl
mov
jb
cmp
sbb
fyl2x
add
scas
dec
inc
clc
fisttpll
sahf
inc
jmp
jl
push
mov
out
pop
stos
dec
xor
loop
sub
hlt
cmp
int
mov
repz
aad
sbbl
lahf
pushf
mov
push
sbb
or
xor
rcll
mov
in
nop
sub
es
fwait
push
insb
or
inc
add
loopne
or
mul
and
xor
loope
int
je
ss
in
out
pop
or
cs
in
flds
adc
aas
push
gs
aam
ret
testb
aad
es
fidivrl
or
dec
adc
movsb
xor
jbe
xor
pushf
or
inc
ret
sbb
stos
loop
mov
mov
add
adc
push
jecxz
xchg
stc
mov
shlb
jle
ds
mov
popa
sti
xlat
or
xor
or
fcomps
inc
popf
lock
movb
inc
into
and
pop
in
dec
je
fsubr
std
xor
je
xor
testl
jmp
cmp
imull
ja
ret
ret
mov
mov
popa
add
testb
xor
mov
mov
xor
or
leave
xor
in
sbb
int3
push
push
adc
or
jbe
icebp
add
mov
int
arpl
fs
sbb
mov
or
pop
fsubl
push
dec
fdivs
jp
mov
lret
icebp
je
lock
xchg
lods
fsubrl
adc
pop
call
xchg
xchg
cmp
adc
test
mov
test
pop
inc
movsl
fimuls
sub
fs
aaa
aad
pop
lods
imul
ds
movsb
pop
fidivs
mov
fbstp
jmp
jae
mov
sbb
out
cli
jg
mov
js
mov
cmp
and
std
add
sub
enter
jb
mov
mov
iret
mov
mov
fldenv
mov
sbb
jns
lahf
pop
cmpsb
in
sub
add
ret
pop
insl
icebp
mov
pop
pop
xchg
add
push
clc
lcall
pop
int3
sub
mov
clc
dec
int
dec
mov
ja
sbb
lods
jmp
adc
sbb
incb
lret
gs
cltd
cmp
lret
in
add
aaa
push
in
neg
hlt
push
jg
fisubrs
xlat
sub
leave
mov
idiv
call
xor
add
xchg
cmpsl
cwtl
xchg
xchg
jmp
enter
pop
lock
fisubrs
inc
insl
rolb
cmp
mov
inc
sub
and
pop
xchg
pushf
repnz
cmpsb
clc
movsl
inc
push
dec
dec
imul
inc
mov
addr16
mov
inc
ror
mov
clc
js
outsl
mov
sbb
inc
xor
mov
push
jp
push
lock
enter
ljmp
jae
xchg
clc
or
cs
or
add
pop
push
inc
rolb
mov
mov
mov
adc
sbb
push
xchg
or
jmp
and
les
push
orb
mov
stos
pop
bound
js
and
decb
adc
dec
out
sbb
shrb
lods
sbb
les
or
addl
adc
add
mov
and
insl
and
aaa
add
fisttps
andl
add
adc
test
stos
loopne
adc
jmp
dec
js
and
in
js
mov
into
push
scas
icebp
sbb
push
decl
jne
jmp
mov
rcl
or
js
test
mov
cmc
push
fwait
adcl
and
das
bound
int
jne
add
movsl
sbb
or
dec
push
xchg
clc
sbb
jo
and
jbe
hlt
add
xchg
ljmp
lock
inc
jb
adc
imul
sbb
mov
sbb
rdpmc
aam
inc
popa
push
or
push
cli
pop
test
cmc
clc
cmp
outsl
shrl
jno
and
std
xchg
loopne
and
mov
cmp
push
pop
jmp
and
lea
ss
inc
lea
sub
xchg
inc
mov
cmp
int
mov
ret
imul
sub
cmpsl
sahf
or
xchg
mov
das
outsl
shrl
dec
xchg
or
inc
cmp
inc
cmp
decl
xlat
cli
xchg
ret
aam
nop
jb
ds
jg
mov
nop
mov
push
add
jg
lret
xchg
mov
pop
add
sub
cs
cmpsb
dec
outsl
icebp
out
clc
rorb
mov
mov
jns,pt
incl
lcall
pop
mov
cwtl
in
xor
aam
inc
push
push
mov
mov
dec
inc
mov
std
in
decl
aam
sub
rcrl
jge
push
test
les
pop
jl
movsl
movsl
std
cmpsl
jle
das
push
mov
cli
dec
das
dec
in
clc
jne
pop
test
inc
cmp
fdivrp
mov
mov
mov
js
push
and
cmp
pushf
push
fwait
cli
cmpsb
in
cmp
in
mov
pop
sub
mov
mov
pop
sub
call
or
outsb
xchg
sub
jge
sub
push
jmp
loopne
loopne
lret
mov
mov
sbb
and
mov
jo
push
add
push
add
pop
loopne
daa
sub
sbb
or
fwait
or
xor
sub
mov
sub
or
mov
repz
insl
addb
cmpb
bound
les
cmp
stos
ds
adc
into
testb
add
daa
or
cld
bndstx
and
sbb
aam
insl
push
imul
pop
jnp
ret
adc
cmp
and
cld
and
dec
adc
add
sub
adc
xchg
ds
das
xchg
sbb
cmpb
xor
adc
or
push
dec
pop
pop
ficompl
xor
push
dec
push
hlt
insl
add
mov
addb
push
cli
add
test
mov
jb
outsl
test
rclb
mov
outsl
out
adc
add
xor
inc
mov
into
adcb
xor
out
jmp
cs
test
jp
push
dec
or
pop
stos
lock
ret
or
rcl
and
fcomp
push
xchg
shrb
daa
aam
mov
sub
jb
sub
fcoml
outsl
fnstsw
inc
add
popa
lret
push
pop
mov
cmp
lock
xlat
out
jge
sbb
and
adc
aad
sub
mov
push
shlb
shr
add
pop
call
mov
push
aam
adc
fdivrl
xchg
test
shll
mov
lock
out
ret
lea
dec
jg
mov
popa
js
sbb
pushw
add
mov
pusha
call
outsb
icebp
in
cwtl
stc
test
push
cld
mov
sbb
xor
in
cmp
cmp
leave
pushl
mov
add
or
mov
loopne
mov
sub
push
jbe
inc
or
sbb
cs
inc
cmp
jo
popf
stos
and
jecxz
pop
mov
adc
imul
ds
jne
clc
out
adc
dec
test
jbe
xlat
and
xor
out
ds
fdivs
push
inc
sbb
data16
sbb
test
inc
push
or
cmc
push
mov
insw
adc
stc
and
sti
clc
jno
clc
orl
jmp
cmp
pop
pop
jbe
insb
cld
in
mov
push
andl
adc
mov
jae
test
xchg
push
loopne
xlat
ds
push
scas
loopne
mov
mov
pop
sub
lock
mov
sbb
popa
push
hlt
push
adc
cmp
insb
icebp
inc
jg
jne
lea
add
pop
mov
mov
mov
xchg
add
adc
xor
or
mov
inc
mov
jg
and
push
add
das
loop
pop
xor
aaa
inc
xor
add
inc
or
mov
adc
inc
pop
fcoms
mov
add
xlat
or
ja
and
insb
loop
fildl
mov
aas
outsl
lds
xor
subb
mov
dec
loopne
or
stos
xchg
shrl
or
sub
inc
insl
add
add
dec
ja
sbb
mov
and
jo
add
adc
andb
stc
movsl
or
call
call
sbb
pop
or
gs
push
push
ficompl
jbe
fadds
daa
push
add
rcl
mov
lret
pop
inc
adc
loop
cltd
xor
jle
mov
add
add
data16
imul
dec
xchg
faddl
pusha
ret
adc
cmpsl
jns
cmp
jae
add
test
adc
mov
inc
call
xchg
add
lds
rolb
adc
pop
js
or
insb
lahf
add
cmp
push
cmovne
sub
sub
dec
mov
mov
pop
mov
loopne
rclb
push
test
add
lock
sbb
or
inc
lods
push
clc
sub
inc
outsb
dec
outsb
inc
push
adcl
add
rorl
inc
loopne
xor
cld
je
or
dec
xorb
or
es
mov
or
call
rclb
add
adc
mov
lods
mov
cmpsl
jp
xchg
sub
insl
pusha
push
aaa
add
mov
pop
lar
shlb
push
and
fbstp
adc
inc
daa
sbb
or
test
fisttpl
inc
jns
scas
add
testl
push
jb
mov
xchg
mov
shrl
das
cmc
lock
out
lock
jb
cs
call
xlat
xor
mov
ja
xorb
int
and
ds
adc
cli
clc
ret
jns
sti
push
fidivs
and
xor
mov
push
pop
loop
ss
push
shl
outsl
js
and
call
popf
ss
sub
mov
push
iret
fcompl
cld
dec
ficoml
repnz
shrb
ret
pusha
outsb
fwait
pop
shrb
lods
sarl
and
mov
dec
mov
or
dec
hlt
int3
or
mov
xor
inc
in
cli
mov
js
stos
ja
mov
div
push
ljmp
ret
sbb
pushf
mov
cli
incl
fimuls
dec
adc
popf
aas
push
cmp
outsb
fldt
mov
adcl
cld
jg
sub
inc
aad
inc
or
jb
rol
in
jmp
jg
xor
outsl
add
push
js,pn
and
push
sub
adc
and
xchg
or
push
pop
jb
roll
es
adc
test
add
push
repz
mov
int
add
xchg
adc
or
inc
mov
jmp
pop
std
sbb
mov
hlt
insl
sti
movsl
outsb
iret
dec
shlb
stos
jae
insb
and
inc
dec
fildll
fidivl
rcrb
leave
pop
push
movsl
jle
jg
mov
inc
pop
cld
push
aam
incb
xor
cs
loop
cmp
sbb
cld
loopne
dec
dec
dec
or
mov
and
lret
fbstp
fstps
shrb
enter
lock
bound
adc
cmp
jne
add
js
or
mov
outsl
lods
aam
add
jmp
and
add
inc
push
mov
push
cmp
daa
xor
sub
mov
xor
cmc
repz
rcr
pop
xchg
and
xchg
mov
outsl
out
xor
sarb
xor
loopne
daa
dec
je
add
lds
scas
mov
dec
enter
and
add
cmpsl
mov
push
mov
adc
nop
and
idiv
lcall
int3
add
xor
xchg
int
xlat
and
cmp
fildl
cmp
add
ljmp
movsl
mov
cmp
sahf
subl
jne
dec
and
xchg
mov
imulb
aad
pop
cmc
pusha
insl
sub
dec
enter
addb
arpl
pusha
out
imul
or
subl
filds
mov
xchg
adc
adc
inc
lea
add
mov
jo
sub
mov
pop
cmp
sbb
jns
mov
lahf
popf
ljmp
inc
ret
cmp
sub
add
cmp
xor
mov
js
mov
sub
sbb
shl
mov
pusha
iret
sub
lds
testb
out
pop
loope
lahf
and
mov
sbb
repnz
add
dec
dec
sbb
jae
mov
inc
lds
ret
mov
fcmovnb
pop
repnz
aaa
mov
rcrl
and
cmp
cmp
filds
es
movb
int3
icebp
dec
loop
and
add
insb
push
sbb
dec
xchg
cmp
inc
mov
mov
ds
call
fs
daa
push
and
pushw
es
pop
cmpsb
mov
add
cmc
fistpl
ret
mov
add
adcb
pop
add
rolb
pop
jo
jbe
popa
fs
clc
jg
or
cmp
cmpsb
cmovo
pop
ret
jp
xchg
ss
cmp
pop
mov
sbb
ljmp
push
push
push
outsb
in
insl
inc
push
xchg
pushf
push
loopne
dec
rol
movsl
shlb
add
outsl
test
arpl
sbb
scas
and
fimull
addr16
inc
mov
aaa
call
mov
scas
outsb
dec
sbb
or
gs
cmpsb
push
pop
daa
rcll
and
fildl
push
pushf
xor
loop
out
ja
cmp
and
outsb
movb
popa
or
adc
mov
lds
inc
mov
add
and
into
adc
mov
sbb
pop
fcomps
sbb
mov
inc
or
pop
mov
daa
and
enter
mov
scas
sahf
sarl
xor
sarb
call
mov
sub
pop
mov
ret
mov
and
adc
push
xor
adcl
mov
mov
adcb
loopne
cmp
test
andb
pop
or
jno
gs
mov
and
sbb
pop
cmc
push
mov
cwtl
addb
sbbb
ror
sbb
pop
add
enter
and
xor
sbb
jp
mov
pop
call
jge
jnp
and
in
leave
clc
test
push
pop
fstpt
aam
aam
add
mov
pop
rcrl
jae
insl
and
pusha
call
jmp
rclb
pop
mov
adc
xchg
adc
or
loope
ret
in
dec
xchg
clc
testb
cltd
xchg
test
rcrb
dec
adc
sub
pop
lock
dec
nop
lds
dec
jae
pusha
loop
testb
popa
xchg
das
dec
push
xchg
ror
lahf
pop
jo
mov
pop
mov
xor
cs
pop
xchg
dec
hlt
addb
ret
add
imul
jnp
mov
hlt
mov
test
sub
pop
xor
in
sub
popf
inc
cmp
adc
push
out
or
stos
xor
scas
sub
cmp
mov
xchg
add
cmp
and
add
xchg
test
and
mov
lock
addr16
add
aam
ror
idivl
loopne
loop
or
xchg
xor
and
hlt
mov
or
insl
cmp
adc
mov
call
xor
mov
lock
cmp
add
push
jecxz
inc
cmp
ret
adcb
adc
add
fiadds
adc
es
leave
dec
and
aaa
and
fnstenv
sub
enter
orl
orl
inc
or
fcmovnbe
pop
adc
push
pop
jl
enter
test
popa
stos
sbb
mov
push
js
imul
aad
dec
inc
mov
dec
sbb
adc
pop
int3
insb
in
xor
int3
push
insl
add
xlat
hlt
push
push
sbb
mov
int3
int3
test
sti
jo
stos
xor
xchg
inc
mov
xchg
pop
sarb
ror
fcomi
lods
xchg
lret
xor
ljmp
xchg
cmc
popf
fcmovnbe
xchg
dec
or
adc
fildll
mov
leave
adc
adc
test
pop
mov
aad
mov
dec
je
mov
pop
pop
xchg
cmp
jecxz
or
ss
hlt
and
stos
inc
sub
dec
jmp
adc
fimuls
and
mov
movsl
add
mov
sti
and
stos
pop
inc
lea
add
xor
dec
sarb
test
push
jecxz
push
movsl
int3
mov
mov
mov
xor
pushf
loope
and
mov
mov
aad
push
mov
dec
mov
ffree
aam
mov
or
dec
jge
push
movsb
and
push
bound
ret
sub
add
pop
in
mov
movsb
aas
repz
sub
fdivr
daa
mov
add
lock
aam
or
xor
jns
add
nop
push
add
push
push
cli
push
or
lret
cs
sbb
dec
mov
push
sub
rcll
and
push
mov
in
add
push
xchg
jbe
mov
std
pop
mov
add
popa
je
cmp
int3
dec
dec
xor
pop
sar
in
cld
lcall
add
je
aaa
inc
addb
repnz
enter
leave
add
xor
or
and
ljmp
arpl
sub
pop
fiadds
mov
ds
das
inc
sub
jmp
add
jg
idivb
mov
jnp
loop
adc
aaa
stos
andl
cmpsb
pop
xlat
push
sbb
or
mov
jle
mov
xor
sbb
aaa
mov
mov
cmpsb
loopne
and
shr
negl
sti
dec
pop
sub
ficomps
inc
shlb
or
scas
movsl
push
jle
dec
xor
add
inc
inc
das
test
gs
sbb
dec
outsb
ret
rolb
fisubs
xor
inc
xor
sbb
xor
mov
test
cmpsl
inc
call
xor
shrb
cmp
mov
mov
std
adcl
fwait
add
sub
or
sbb
cli
pushl
pop
sub
mov
sbb
mov
adc
in
sbb
les
incb
icebp
sub
arpl
and
lcall
sar
or
icebp
out
jbe
and
lods
cmpsl
scas
lret
add
push
clc
dec
pop
lahf
clc
cli
dec
sar
sbb
sub
es
fistpll
sub
faddl
add
and
fucomip
mov
test
and
mov
into
out
imul
addb
pop
mov
hlt
fucomip
xchg
mov
adc
cmp
cmp
mov
xor
cmc
fistpll
ja
mov
sbb
lock
mov
into
ljmp
push
fidivrl
mov
cs
add
cmp
dec
outsl
dec
std
mov
cs
xchg
in
push
loopne
dec
movsb
sbb
jg
mov
std
decl
inc
mov
es
rcll
cmp
xchg
fucomp
mov
addr16
add
je
movsb
nop
pop
pop
in
and
pop
lret
cmpsb
mov
sbb
and
mov
jg
bound
adc
adc
shlb
shlb
inc
sub
push
or
jg
or
and
add
and
out
nop
daa
adc
add
inc
sarb
outsb
flds
and
shl
xchg
inc
bound
cwtl
movb
push
and
inc
xor
nop
lret
sbb
add
and
test
jge
daa
push
xchg
mov
inc
and
mov
jno
cmc
out
testl
xchg
jb
ss
dec
add
or
aaa
cli
decl
loop
shl
rclb
mov
jg
test
mov
cld
or
in
cmp
pop
fucomp
mov
xor
cwtl
mov
jg
add
lret
pushf
cmpsb
adc
dec
in
fnstsw
adc
add
and
in
cmp
lock
or
jg
mov
inc
mov
sbb
sbb
pop
fcomp
jle
out
aas
mul
mov
lock
fildll
jge
cs
jno
add
shll
xor
into
pushf
aad
push
rolb
lods
or
clc
enter
std
adc
and
lahf
ljmp
addb
icebp
daa
and
add
lods
inc
xchg
push
dec
sbb
jb
lods
outsl
out
inc
outsb
sbb
cmp
int3
jne
bound
or
repnz
push
into
jecxz
and
inc
and
adc
sti
mov
stos
repz
fs
cmp
and
aad
add
out
jecxz
mov
test
call
test
lods
iret
or
add
scas
fs
jecxz
int
clc
sub
es
fsubs
mov
lds
push
ja
enter
test
icebp
cli
pushf
add
shrl
xorb
adc
sbb
cmc
popf
std
jg
add
sbbb
lods
mov
mov
decl
adc
icebp
fildll
xchg
sub
xchg
inc
and
xor
push
insb
sarl
cmp
push
call
or
jecxz
mov
push
add
push
mov
icebp
call
push
pop
add
cmp
add
sub
push
incl
out
xchg
sub
and
clc
sbb
sti
or
in
fidivl
jae
in
jle
dec
imul
jp
mov
mov
jle
push
jno
sbb
out
daa
sbb
sub
out
xor
incl
xor
add
dec
cmp
arpl
dec
mov
jle
mov
jecxz
jb
pop
push
ret
sbb
pushf
outsl
pop
push
aad
dec
jg
test
subb
or
add
dec
push
and
add
decl
test
cli
cmp
jns
cmp
dec
js
adc
popf
pop
pop
sbb
mov
or
testl
xchg
push
or
into
pop
pusha
js
bound
jecxz
testb
and
sub
icebp
add
sub
add
jne
xchg
mov
adc
mov
jp
jne
adc
cmpsb
arpl
xor
cmpsl
arpl
xor
iret
filds
cli
testb
rcr
stos
mov
sub
xor
xchg
mov
inc
cmpsb
dec
add
leave
addl
mov
loopne
mov
mulb
testl
out
sub
outsl
sub
mov
mov
aam
push
ret
mov
xor
lahf
mov
ja
sbb
inc
test
and
je
fcmovnb
push
mov
and
or
movsl
xchg
mov
and
dec
incb
insl
iretw
mov
or
cmp
icebp
imulb
idivl
or
pop
pop
mov
into
js
outsb
das
xor
push
jl
inc
rcll
dec
sub
enter
mov
mov
jg
sbb
xorb
stos
ja
imul
lds
or
fistpll
das
pop
sbb
inc
fnsave
int
jl
xor
mov
test
adc
daa
mov
pop
mov
mov
push
js
aam
jg
insl
sti
push
push
imul
adc
dec
lds
insb
js
push
test
mov
shrb
lcall
mov
mull
mov
data16
sbb
mov
leave
cld
cmp
sbb
inc
scas
jne
pop
fisubl
out
call
or
dec
mov
sub
sub
std
mov
loopne
add
sbb
int
jns
lahf
xor
pop
rorl
mov
mov
xchg
and
dec
or
jb
mov
les
sbb
movsb
inc
mov
ja
in
fs
or
loope
aam
pop
inc
add
je
or
fcompl
and
dec
mov
scas
add
clc
add
inc
lds
sbb
or
pop
outsl
arpl
adc
xchg
cld
adc
add
mov
aaa
push
clc
jmp
mov
test
xor
std
out
mov
test
fiadds
arpl
add
aas
push
outsl
icebp
mov
mov
cmp
push
ljmp
loop
dec
xorl
lret
fisttps
dec
test
or
or
aaa
fwait
inc
jecxz
jge
int3
es
inc
in
jb
ljmp
add
mov
movsl
jo
mov
xchg
and
adc
out
inc
fwait
xor
or
pop
cmc
fwait
mov
int3
pop
scas
pop
hlt
push
xchg
and
jns
loopne
ja
shll
xor
mov
frstor
rcl
jmp
mov
or
xchg
sbb
fwait
in
jo
aam
jns
and
test
sbb
sti
mov
mov
in
scas
push
sub
js
add
xor
cmp
fadds
fnstsw
subb
lods
and
insb
mov
add
and
or
call
push
and
sub
sbb
mov
test
js,pt
sbbl
sub
inc
aad
addr16
inc
lcall
shll
adc
and
mov
rorl
aam
jp
ljmp
add
mov
call
mov
leave
lret
jb
into
ror
out
das
mov
jmp
aas
ret
test
addr16
and
jae
loopne
xor
pop
mov
test
or
fsub
sub
jg
add
add
scas
pop
mov
jmp
inc
pushf
push
jb
mov
int
inc
cld
jg
mov
dec
adc
aas
es
ljmp
sbb
aaa
pop
push
aad
mov
push
dec
inc
leave
shll
cli
jns
xor
xor
les
lods
pop
movsb
cmp
jg
sbb
inc
shll
stc
je
xchg
aaa
or
sbb
add
mov
push
in
lods
inc
jo
jl
leave
mov
or
and
xor
mov
or
pushf
ret
or
or
add
loop
sub
and
mov
clc
sub
shrb
sarb
inc
sbb
or
in
adc
into
mov
inc
jb
or
stos
jge
or
insl
loop
clc
inc
pop
xchg
cld
and
outsb
cmp
fbstp
mov
xchg
cmpsb
bound
inc
sub
adc
clc
ds
scas
inc
and
dec
das
sbb
fistpl
mov
sbb
pop
xor
mov
pop
bound
and
mov
dec
scas
test
or
fdivrl
dec
jb
push
or
in
jecxz
ss
and
divps
scas
or
lahf
aad
stos
cmp
xor
and
mov
jp
add
add
test
outsb
xchg
sub
out
inc
dec
cmp
aaa
add
das
and
adc
jg
inc
adcb
ja
xchg
aaa
jo
mov
lahf
popf
std
testl
stc
enter
xorb
inc
sbb
movl
and
jp
fbstp
ja
and
loope
jnp
in
bound
or
fiaddl
test
into
and
mov
add
aaa
fadds
mov
or
xor
or
and
lock
fistl
into
adc
jmp
mov
mov
or
or
mov
sar
adc
mov
int
xchg
test
adc
cmp
or
or
rorb
pop
cltd
imul
mov
imull
clc
out
repnz
insb
int3
repz
push
sahf
mov
add
pop
cli
shrl
and
mov
mov
iret
and
cwtl
or
or
xchg
push
push
in
inc
ljmp
insb
push
cli
adc
scas
adc
add
inc
fndisi(8087
or
fwait
inc
movsl
pop
xor
xchg
andb
sbb
lahf
inc
xchg
shll
inc
fistps
data16
add
mov
cltd
xlat
or
loopne
enter
jg
adcl
dec
mov
loop
loope
pop
pusha
clc
movsb
inc
ja
jo
aaa
jge
dec
cmp
fmull
or
ljmp
inc
or
lahf
or
inc
scas
push
jbe
andl
inc
jns
xlat
and
bound
fadds
sub
sub
daa
stos
push
adc
pop
or
and
ret
and
cwtl
dec
or
mov
lea
cmp
ljmp
add
je
hlt
loope
lds
adc
jge
xchg
mov
out
inc
xchg
pop
movsb
mov
sbb
add
xor
inc
jae
out
xchg
jge
aas
inc
xchg
sub
lret
stos
iret
inc
out
out
mov
xor
sub
out
sbb
push
lods
adc
test
push
flds
adc
mov
js
imulb
mov
adc
outsl
notb
aas
jmp
and
dec
adc
xor
sbb
idivb
mov
ljmp
out
sub
les
fiaddl
test
adc
xor
ljmp
aad
loopne
stc
repz
int3
rolb
pop
mov
lock
cmp
or
jg
pop
mov
xchg
jmp
jmp
jmp
inc
popa
push
iret
inc
mov
xor
jne
jbe
dec
pop
cli
sbb
or
jae
add
fbld
nop
stos
pop
in
push
cmp
mov
stc
and
push
add
inc
mov
or
inc
inc
inc
mov
inc
dec
lods
js
add
out
insb
int
aaa
shll
popa
pop
std
lcall
in
add
icebp
in
and
jmp
roll
mov
sbb
and
call
rcll
test
ljmp
std
add
add
and
in
mov
addb
cli
scas
and
and
xchg
shl
lds
or
js
sbb
lcall
cmp
sub
adcl
pop
clc
add
sahf
adc
ljmp
data16
lods
gs
rcl
dec
ret
adc
and
cmp
add
xchg
xor
sub
ds
sar
add
jo
mov
nop
inc
test
sar
jg
push
push
mov
sub
mov
or
jbe
and
xchg
dec
sbb
das
or
movsb
xor
in
outsl
insl
jecxz
addb
je
aad
and
lock
in
add
call
shrl
imul
in
lods
icebp
daa
roll
stc
mov
xchg
leave
sub
adc
add
mov
jp
inc
add
pop
clc
in
stos
sub
ret
add
aad
and
fimull
mov
fisubs
fcomip
inc
sub
sub
inc
dec
pop
lock
idivb
cmpsl
dec
incl
jne
mov
inc
jns
out
pop
mov
daa
test
fildll
fbstp
pop
pop
xchg
cwtl
cmpsb
push
push
subl
or
mov
out
inc
cld
fldt
add
xor
roll
lock
rorb
insl
shll
insl
pop
sub
add
xchg
xor
pop
lahf
add
cltd
adc
sti
jno
xchg
or
arpl
jbe
loope
add
sti
pop
add
in
mov
sti
mov
sbb
test
pop
and
nop
and
add
inc
in
data16
js
mov
int3
out
dec
sbb
dec
out
loop
adc
sub
push
jbe
dec
test
lret
push
jae
shlb
pop
add
mov
and
add
cmp
jl
mov
or
add
and
das
sbb
ret
xchg
dec
inc
loope
add
mov
adc
pop
rclb
inc
stc
inc
call
cmp
test
xor
add
insl
push
xchg
test
into
lds
lock
mov
out
movsb
fs
pop
icebp
lcall
or
mov
mov
or
push
outsb
cmp
jl
add
insl
jl
cwtd
dec
add
flds
or
iret
mov
cld
into
mov
inc
sti
stos
push
test
dec
push
jbe
fadds
add
add
push
jb
shrb
aam
mov
int3
pop
add
movsb
incl
sarb
or
pop
int3
inc
dec
and
xor
ret
ret
dec
inc
stos
push
mov
lock
xor
and
jbe
mov
adc
pop
sub
jg
add
add
adc
mov
pop
xor
cld
test
lret
cmpb
mov
jns
idiv
out
mov
add
imul
mov
js
mov
pop
pusha
xor
in
mov
or
pop
mov
add
push
pop
cs
sub
xor
fisttps
xchg
sub
rorl
paddd
jge
sarl
das
pop
and
in
int3
and
pop
out
jbe
dec
lock
inc
in
xor
icebp
fidivl
adc
cmpsb
inc
loope
sarl
cmp
out
xor
xchg
mov
fwait
jle
push
jecxz
dec
repnz
or
out
mov
or
add
fst
in
arpl
jg
push
inc
add
xchg
jecxz
pop
xor
mov
sbb
push
ret
and
add
mov
pop
push
mov
sub
daa
scas
pop
mov
inc
std
das
test
push
fnstcw
sub
jmp
mov
fsubs
iret
add
pop
mov
push
fcmovnu
adc
cmp
or
pop
arpl
dec
push
cmc
call
adc
cld
std
in
cmpsl
fwait
nop
mov
push
or
inc
std
adc
es
cmp
pop
ljmp
pushf
jle
outsl
icebp
lea
and
addb
andl
push
jmp
jne,pn
inc
pop
fneni(8087
or
mov
inc
dec
cmp
mov
xchg
iret
jne
das
mov
and
out
sbb
jg
ret
and
or
xor
and
xchg
fimuls
mov
add
je
add
cmp
adc
mov
push
es
push
ficomps
mov
fildl
sub
int
rcrl
push
inc
jb
adc
lahf
mov
adc
cmpsb
jg
clc
ret
mov
xor
jle
sub
mov
pop
clc
jb
shlb
pop
sbb
divb
insl
sub
cmp
je
pop
xchg
dec
dec
ljmp
bnd
cmp
dec
out
mov
nop
rorb
mov
jne
jnp
jle
xchg
les
fsubrs
mov
push
sbb
mov
lret
or
jb
inc
movsb
xchg
jle
add
pusha
cli
push
xor
push
shrb
pop
pop
ljmp
pop
cmc
decl
add
ja
hlt
orb
add
hlt
enter
inc
xchg
push
fsub
aaa
and
movsl
imul
fsubrs
push
les
and
dec
and
xor
sub
adc
testb
inc
adc
pop
cmp
inc
mov
adc
add
or
mov
es
mov
dec
xchg
jne
add
mov
scas
popf
fwait
in
pushl
inc
jge
push
pop
imul
xor
push
adc
cs
pop
xor
push
je
mov
push
cmp
test
xor
inc
lds
lcall
cmpsl
dec
add
adc
push
add
jp
mov
aaa
pop
in
xchg
xlat
push
sti
inc
insl
and
test
add
ret
bound
jle
push
add
and
xor
push
lock
or
out
jle
jnp
mov
data16
push
les
add
outsl
add
shlb
add
test
xor
lods
mov
inc
addl
mov
or
add
das
cmp
std
xor
or
test
push
movsb
in
cld
outsb
dec
sbb
rorl
jae
pusha
loope
adc
add
and
jmp
fdivl
enter
mov
dec
sbb
les
adc
dec
or
push
pop
mov
or
dec
sub
add
int3
fistpll
fildl
test
xor
dec
xchg
orl
adc
lahf
test
fldl
cmp
fadd
push
lods
ja
adc
aad
bound
xchg
idiv
and
lea
pop
jmp
and
or
or
pop
and
into
xchg
jo
adc
cmp
pop
shrb
or
or
and
mov
cltd
or
adc
jno
jae
std
outsl
cld
call
lds
adc
xchg
cmp
mov
pop
jmp
inc
adc
push
mov
test
jmp
add
movsl
fs
lret
popf
mov
shrb
push
mov
cld
jnp
daa
jmp
adc
cmp
xchg
loopne
aam
jge
adc
mov
pushl
and
add
outsl
sbb
in
dec
cld
divb
adc
test
adc
insb
cli
cli
inc
or
mov
push
xor
test
cmp
add
inc
andb
scas
js
mov
mov
mov
inc
daa
call
mov
aaa
nop
aam
xchg
dec
adc
into
sub
pop
inc
jmp
out
jl
fdivrs
jp
jb
inc
dec
inc
xchg
adc
mov
in
lret
mov
orl
add
subb
sbb
popf
xchg
inc
pop
pop
in
cmp
repnz
cs
cmpsb
adc
pop
fmuls
bound
cmpsb
push
es
sub
mov
in
pop
popa
jno
aas
xchg
jno
test
pop
jns
fists
movups
add
insl
fldcw
ljmp
fnstenv
jnp
cmp
jno
arpl
pusha
push
in
hlt
imulb
push
fisubrs
insb
add
pop
icebp
xor
adc
push
popa
popa
adc
pop
fcoms
push
push
mov
push
ds
jo
mov
mov
int
and
mov
xchg
movsl
pop
or
mov
lea
push
movsb
rorb
inc
adc
lock
rclb
xlat
aaa
test
push
aas
sbb
js
xchg
mov
mov
pop
ret
mov
dec
jp
jb
pop
cwtl
mov
cli
pop
insb
fcoms
inc
bound
lea
and
inc
cli
push
cmp
xor
stc
mov
loope
icebp
cmpsb
jno
addr16
jo
pop
lea
mov
mov
loope
xor
and
roll
mov
adc
inc
cmp
push
xor
lea
dec
jb
in
sti
ljmp
fnstcw
xchg
and
out
in
jbe
sub
sub
inc
das
nop
xor
in
aam
pop
cwtl
in
xchg
jge
lock
push
cmp
ss
lcall
js
sti
inc
test
push
fs
iret
lret
imul
movsl
fnstcw
fwait
clc
addr16
cmc
inc
cmpsl
movsb
enter
adc
in
push
dec
dec
popa
inc
xchg
test
inc
fwait
pushl
mov
mov
pop
cmp
inc
mov
lret
insb
sbb
jg
or
icebp
jb
insl
cmpsb
or
xor
dec
fs
xchg
inc
pushf
and
lcall
xchg
and
ficompl
ss
push
sub
mov
cmp
rclb
xchg
inc
push
jle
jmp
bound
mov
ljmp
movlps
out
push
cwtl
add
mov
inc
pop
ds
loopne
ficomps
adc
add
xchg
and
outsl
je
daa
les
push
bound
sbb
cwtl
mov
ret
in
sbb
mov
pop
pop
push
xor
popa
ds
push
enter
das
aam
push
es
push
mov
push
mov
outsl
xor
inc
repz
clc
sub
xor
les
sub
jne
js
in
sbb
iret
divl
jno
mov
and
inc
mov
insl
inc
dec
mov
stos
or
addb
mov
das
scas
gs
inc
pop
mov
lods
shlb
xor
dec
mov
add
mov
dec
clc
xchg
push
mov
push
xlat
std
fcmovnbe
ljmp
mov
bound
stos
aaa
add
add
fxch
pop
xchg
clc
xlat
inc
pop
mov
sub
and
sar
and
push
inc
xchg
testl
inc
or
push
add
mov
iret
icebp
xorb
mov
push
or
jl
or
hlt
sbb
add
inc
fwait
loopne
add
add
xor
pop
mov
and
cwtl
outsb
mov
call
sbb
push
mov
pop
fiaddl
out
repnz
stos
pop
sub
pop
lock
xor
fmull
jbe
mov
xchg
jno
xchg
add
pop
rcll
push
insb
xchg
rcl
xchg
cmpsb
adc
lret
outsl
pop
dec
sub
cmp
dec
inc
lcall
xchg
add
and
loopne
pop
or
cwtl
les
ret
sub
mov
mov
xor
outsl
mov
mov
enter
lock
xchg
adc
sbb
lods
cmp
xlat
and
insb
mov
fistpl
dec
add
ja
jp
xor
stc
lock
and
call
mov
mov
and
lock
dec
scas
mov
adc
aad
mov
jno
mov
push
enter
add
and
sub
out
nop
cmp
inc
and
fmuls
and
xchg
inc
imul
lret
push
add
jne
dec
call
xchg
inc
call
test
sbb
add
aas
sbb
push
sub
hlt
mov
add
add
ljmp
and
hlt
fadds
mov
xor
ret
pop
jo
in
leave
ja
std
mov
sbb
adc
es
add
sbb
outsb
adc
adc
dec
repz
mov
mov
call
dec
ss
rclb
imulb
sbb
ja
mov
or
or
sahf
jg
lcall
ficoml
enter
loopne
lock
lret
adc
sbb
inc
pushf
sub
sbb
jb
inc
outsb
jns
jo
into
call
jb
loope
jmp
cld
or
mov
icebp
inc
mov
test
je
loopne
mov
fstpt
rcr
jne
dec
fidivrs
test
cmp
adc
inc
cs
pop
fcomp
stc
adc
icebp
jns
call
pop
cmp
sarb
push
jne
rclb
ret
or
lret
loopne
shl
cmp
xor
jecxz
lock
mov
dec
dec
repz
push
fidivrs
pop
movsl
imul
fwait
push
add
jne
jmp
imull
cmc
mov
adc
adc
and
mov
push
xor
cmpsl
lods
jg
inc
push
loopne
inc
mov
les
xlat
in
or
jge
out
or
mov
hlt
das
clc
and
loopne
rolb
addr16
cmp
mov
mov
push
push
push
push
cs
cmc
xor
enter
xchg
adc
sbb
mov
call
pop
aam
add
adc
jge
es
js
xchg
testb
and
pop
notl
dec
cmp
ret
movzbl
sbb
std
nop
push
pop
call
add
mov
mov
add
jae
shl
mov
push
std
aas
sbb
in
popf
cmpsl
fcompl
pop
sbb
add
mov
push
lock
sub
decl
scas
push
inc
testb
ret
fiaddl
adc
cli
jecxz
mov
hlt
fbstp
aad
cli
and
inc
stos
cwtl
mov
xor
or
and
adc
mov
adc
add
mov
hlt
push
test
or
fdivrl
pop
bound
imul
std
add
outsl
jae
sbb
enter
and
loop
clc
jmp
ds
inc
mov
cmp
es
outsl
das
hlt
fwait
addr16
xchg
cmp
es
mov
and
and
adc
dec
movsl
shlb
and
xchg
lcall
repz
lods
add
enter
ja
lock
in
repnz
xor
xchg
jb
mov
outsl
test
sarb
lea
outsl
icebp
dec
cmp
xor
sbb
repnz
insl
xchg
pop
ljmp
pushf
out
icebp
jae
je
mov
test
cmp
or
test
icebp
inc
jmp
sub
stc
sub
cmp
add
data16
sbb
mov
mov
inc
lods
push
cmp
test
jne
mov
icebp
clc
push
mov
mov
or
aaa
xorb
divl
push
xchg
mov
inc
int3
xchg
addl
loope
cmp
push
mov
das
rcrl
sahf
sub
stos
or
inc
mov
fmull
sarb
fisttps
jb
and
sub
add
inc
imul
mov
xchg
lcall
push
outsb
mov
incl
cmpsl
or
xor
push
jo
or
or
hlt
mov
sub
mov
or
jne
scas
push
insb
or
ror
jl
jno
pop
sarb
mov
data16
bound
cltd
js
andb
sahf
sar
jg
scas
sbb
orl
cmpsl
adc
fucomp
pop
mov
mov
dec
xchg
xor
aad
or
out
fwait
sub
push
push
addr16
adcl
mov
cmpsl
or
and
sbb
jl
adc
iret
je
pusha
or
mov
push
xchg
or
mov
adc
add
lds
out
lcall
loope
inc
jg
into
cltd
fsubs
loope
or
in
imulb
movsl
and
add
adc
out
sarb
test
push
push
enter
and
mov
add
mov
mov
jb
mov
test
mov
mov
jo
and
and
pop
loopne
loop
jnp
and
xlat
and
js
pop
cmp
fiaddl
addr16
mov
mov
rcrb
cwtl
mov
add
ret
push
or
sub
ljmp
sbb
aas
fimuls
ja
xchg
pop
jle
sbb
cmp
pop
test
jl
fdivs
mov
mov
sbb
mov
test
lret
mov
ss
adc
ficoml
imul
cmp
push
push
stos
pop
fldl
sub
or
cmc
ret
loopne
pop
push
cmp
popa
xchg
call
frstor
test
push
scas
mov
loop
push
les
add
add
std
pop
loopne
xchg
sbb
xchg
add
fisttps
das
cld
mov
cmc
mov
or
imul
inc
aaa
shrb
cmpsb
addr16
fnstsw
repnz
icebp
cld
testb
jle
ror
bound
inc
mov
sub
pushf
sbb
pop
xchg
push
out
add
ljmp
add
mov
mov
pop
dec
jle
push
test
dec
fwait
loopne
aam
test
nop
and
lock
sub
aad
push
cld
js
paddd
and
ljmp
adc
push
notl
nop
mov
jl
inc
xchg
jo
cmp
mov
inc
and
add
loope
sbb
ljmp
pop
adc
sub
jmp
sub
and
lods
std
lret
jg
dec
pushl
jb
lods
mov
xor
sub
rcll
mov
dec
jl
das
fwait
decl
dec
faddl
sub
pop
inc
and
mov
push
aad
test
sub
notl
insl
cld
call
lret
es
in
mov
cld
movsl
movsl
mov
inc
hlt
xchg
nop
push
or
mov
sub
mov
jp
int3
mov
push
push
add
jns
mov
sbb
mov
jbe
cmpb
pop
les
call
mov
shrl
mov
andb
loop
ljmp
adc
lret
sbb
ljmp
xchg
adc
rolb
arpl
sub
ret
outsb
inc
push
pusha
jo
in
pop
pop
mov
cmp
pop
addl
lcall
mov
movl
sbb
mov
push
and
popl
loop
cld
in
mov
push
js
fs
fisttps
or
sub
or
mov
mov
aad
cltd
xchg
cmc
repnz
push
testb
fistpll
mov
fwait
push
int3
out
sub
or
cld
mov
and
adcb
and
scas
add
mov
pop
aam
pop
movsb
loopne
dec
xor
lret
fisttpl
pushf
mov
icebp
push
ficoms
stos
lock
ret
mov
adc
xchg
inc
mov
jg
mov
adc
cmp
sbb
stos
mov
jns
pop
cmpb
ds
data16
and
mov
repz
add
fisubrl
iret
sbbl
xchg
push
ret
test
cmpsl
into
add
nop
call
cmpl
pop
inc
sti
jg
in
and
enter
ljmp
push
and
aad
push
jg
jo
push
mov
cmp
cltd
int3
inc
sbb
loope
es
inc
push
outsb
popf
in
not
ja
inc
imul
adc
xchg
sub
jecxz
fwait
cmp
cltd
out
shrb
push
xlat
lcall
pop
pop
cmpsb
mov
fistl
arpl
xor
cmp
lock
mov
and
mov
mov
pop
adc
mov
sub
mov
sahf
notl
cmc
fbstp
cmpsb
cmp
jns
stos
loop
fwait
mov
pusha
adc
int
push
and
and
hlt
mov
and
lock
repnz
or
mov
dec
in
faddl
test
pop
push
dec
adc
cwtl
mov
mov
ljmp
je
sbb
shr
mov
lcall
adc
test
add
mov
and
test
inc
xchg
sub
int
aad
pop
add
pop
mov
nop
and
movsb
aaa
xchg
sarb
repnz
nop
enter
in
mov
lods
adc
adc
xchg
jecxz
or
jle
hlt
xor
fdiv
inc
xor
sub
pop
std
inc
mov
mov
subl
add
movsl
dec
mov
lds
sbb
repz
mov
adc
jle
sbb
push
xchg
ficomps
lods
iret
and
lret
pop
call
fbld
dec
add
pop
jbe
add
add
mov
movsl
in
cli
sub
out
xchg
pop
and
rcl
lret
xchg
loop
insb
loope
dec
lods
push
push
mov
out
ficoml
pop
shll
or
cmp
inc
aaa
stos
incl
mov
dec
push
or
jo
dec
dec
mull
xchg
mov
mov
mov
sbb
ret
jo
ja
or
test
in
cmc
pop
lcall
mov
sbb
xor
test
and
or
mov
mov
inc
lds
les
repz
push
pop
mov
orb
fwait
loopne
push
lcall
lds
push
in
pusha
insb
daa
jl
divb
nop
add
je
je
repz
ret
je
imul
or
adc
mov
popf
add
lahf
mov
sub
mov
and
outsl
mov
and
jne
and
mov
mov
in
mov
jns
mov
cs
sub
add
push
xlat
scas
mov
icebp
es
lods
sub
push
adc
jg
add
inc
add
pop
test
dec
pop
or
incl
adc
add
cmp
ja
fstpt
lahf
mov
and
xor
clc
in
ds
and
jp
fisttps
pop
in
and
adc
xchg
movsb
push
aaa
outsb
aaa
lea
imul
ret
lods
add
rcll
dec
mov
lods
or
leave
test
add
push
nop
rclb
pushf
mov
lcall
cld
orb
ss
adc
fs
jg
xor
sbb
inc
sbb
push
xor
cld
lea
loop
and
std
pop
icebp
ja
les
cmp
in
mov
rorl
or
pop
add
lods
mov
jne
mov
lods
test
jmp
dec
jle
ds
out
aaa
mov
ret
cmp
xchg
icebp
fistps
push
pop
mov
rclb
xchg
loopne
je
aaa
outsb
das
mov
add
lret
cmp
leave
jle
das
in
call
mov
andb
hlt
lcall
cld
adc
enter
daa
test
pushf
sub
cmp
cli
jbe
ja
mov
mov
mov
rolb
in
lods
aaa
pop
sbb
outsb
xor
pushf
inc
inc
shlb
xor
scas
or
adc
dec
pop
sbb
or
push
xor
jne
fbstp
cs
inc
xchg
aam
rolb
test
out
add
cwtl
sbb
bound
lds
cmp
orl
aam
loopne
daa
subb
push
inc
js
fcoml
pop
pop
sub
sahf
sbb
mov
mov
adc
adc
or
nop
sub
add
inc
subl
out
inc
push
aam
int3
or
shrl
add
adc
mov
push
xchg
mov
shl
cwtl
inc
adc
loop
loope
and
adc
inc
or
adc
cmpsb
sub
hlt
add
bound
jne
fiaddl
and
cmpsl
sbb
ss
and
or
pop
or
notb
jae
lret
loopne
inc
mov
into
mov
scas
outsb
les
dec
mov
push
rorb
subb
sub
and
inc
push
ds
add
aas
mov
int3
lods
mov
adc
sub
sub
jmp
sub
insl
mov
rorb
in
add
test
cmc
push
lock
mov
arpl
shrl
mov
icebp
es
xor
and
stc
cltd
mov
sub
hlt
clc
add
dec
jno
mov
adc
mov
jle
inc
ljmp
mov
cld
adcl
adc
dec
add
push
add
shlb
test
fisubrs
dec
add
loope
sub
cwtl
rorb
popa
xchg
jp
adc
ljmp
add
xchg
mov
add
addb
inc
cmp
xor
sbb
adc
leave
cmp
push
dec
cmpsb
les
jecxz
xor
add
dec
into
mov
jo
iret
rorl
adc
jmp
add
sub
adc
cwtl
ss
bound
mov
adc
sbbl
add
inc
and
lea
push
inc
inc
in
or
sbb
xlat
ret
or
les
add
ret
cmpsl
jne
xor
and
sub
out
push
imul
mov
loop
xor
adc
jge
and
ja
xlat
pop
test
xchg
iret
jb
jmp
ja
cmpsl
sbb
int3
jmp
xor
mov
xchg
adc
aas
sbb
push
shl
jnp
ret
dec
and
cmpsl
push
push
mov
sbb
ret
in
mov
sub
jecxz
popf
insl
or
sub
add
push
inc
mov
test
inc
jnp
ret
ret
mov
mov
in
aam
push
mov
pop
and
adc
outsl
fiaddl
push
icebp
int3
and
movsb
out
cmp
adc
sub
in
push
cmp
jns
addb
adc
outsb
imul
repz
cmc
or
mov
mov
mov
mov
loopne
clc
xor
fs
insl
pop
imul
ja
stc
repz
push
xor
jge
pop
add
ficoml
mov
aam
push
and
xchg
ret
sbb
cwtl
jl
pop
mov
cmp
push
inc
mov
repnz
xchg
cmpsl
jo
insb
dec
test
in
shll
sub
aad
insb
outsb
sub
mov
mov
xchg
sbb
mov
mov
pop
lds
dec
hlt
mov
ds
dec
lea
jae
add
repnz
cmp
mov
loop
push
cmp
dec
sub
mov
in
insb
and
loopne
stos
push
xchg
inc
mov
cmp
sti
cmp
ja
hlt
scas
loop
cmpsb
push
into
mov
cmc
push
fiadds
test
xchg
bnd
push
push
inc
or
and
xchg
jp
cwtl
push
pop
pop
aam
push
and
insb
inc
in
loopne
cmovne
jmp
insl
xlat
pop
mov
mov
clc
movsl
movsb
inc
loope
or
mov
call
jbe
aaa
outsl
dec
mov
cmc
fcmovb
data16
in
add
scas
sbb
or
xor
inc
insb
or
stc
ret
push
and
mov
nop
repz
mov
rorb
ffree
mov
rorb
add
in
adc
or
and
xchg
inc
int3
sbb
lods
jns
lds
xchg
or
shr
fidivl
jmp
cs
in
push
sub
emms
jns
icebp
call
push
xchg
ds
push
mov
data16
imul
inc
mov
pop
sbb
lcall
push
push
fcmovbe
lcall
popa
cli
mov
into
into
push
jg
and
and
pop
loopne
mov
lea
xchg
jne
mov
lods
add
inc
adc
pop
xorb
mov
cmp
es
push
cld
dec
sbb
jb
jo
mov
xor
test
adc
push
dec
add
sbb
test
cli
clc
fstpt
dec
cmp
mov
mov
inc
push
inc
mov
test
xor
add
sub
decl
mov
sub
cmpsb
outsb
ljmp
out
lahf
lcall
inc
mov
movsb
adc
enter
xor
xchg
and
sti
call
das
in
push
mov
cmp
push
pushf
jno
jl
xchg
in
or
hlt
lock
jnp
or
aam
into
fucomip
inc
pop
and
loopne
sbb
dec
cld
call
inc
jp
push
sub
js
cmp
sub
fists
sti
push
int3
pop
mov
hlt
jbe
mov
and
cmp
cld
sbb
push
xchg
jmp
cmp
and
xchg
or
fstpl
lock
or
add
add
or
in
test
mov
jo,pn
stos
out
mov
pop
fs
stc
add
push
in
orb
sahf
jecxz
ret
dec
xchg
rolb
inc
repnz
mov
cltd
add
sbb
decl
add
xchg
dec
and
mov
dec
or
and
ret
mov
sti
ljmp
cld
adc
mov
xor
sbb
les
xlat
lock
or
fadd
ds
fistpl
insl
inc
bound
add
pop
or
ss
xchg
cmp
and
aaa
and
jne
sarl
push
in
imul
push
sbb
pop
int3
pop
cmp
mov
sti
mov
out
xchg
jbe
jns
pop
rolb
idiv
incl
fistps
pop
inc
cmc
jg
sbb
les
xchg
sub
or
ret
out
cmpsl
leave
and
fcmovnbe
sub
das
popa
imul
cwtl
roll
mov
inc
xor
sbbl
mov
add
add
add
or
cmp
outsb
xor
je
cld
fistpll
or
inc
pop
mov
aad
mov
mov
sbb
nop
push
inc
push
mov
insl
outsl
ljmp
lods
mov
into
shll
cli
inc
mov
push
rcll
push
add
shlb
cld
ljmp
int3
sahf
add
mov
fcoml
shlb
scas
and
pop
out
push
add
adc
sti
incl
mov
adc
inc
mov
or
outsb
ficoms
mov
xor
dec
push
lea
sarl
orl
jp
enter
xor
cli
jg
or
ljmp
sbb
add
scas
outsb
or
sbb
add
sarb
sbb
and
lds
sar
outsl
lds
inc
lock
dec
lret
add
les
push
adc
loopne
or
scas
add
sub
incl
lods
idivl
and
xchg
add
scas
adc
in
and
mov
ljmp
loop
mov
fdivl
mov
adc
scas
js
aaa
loop
add
sub
jo
pusha
mov
pop
repnz
mov
xchg
sbb
jp
push
mulb
addl
incl
add
or
push
jp
movsl
addr16
mov
push
enter
jns
pushl
out
pop
pusha
dec
mov
xor
loop
push
in
or
sti
das
cld
fists
jo
push
and
mov
hlt
jae
cmp
add
les
sbb
outsl
stos
mov
mov
push
or
sahf
sbbb
in
sub
mov
out
xor
incb
out
roll
sahf
lds
cwtl
cltd
inc
pop
add
pop
fstp
dec
neg
fistps
jo
jl
mov
cwtl
imul
rcrb
movsl
fnstcw
or
clc
or
cmc
inc
add
add
movl
xchg
mov
xchg
pop
or
lcall
pop
outsl
mov
pop
jb
mov
cmp
and
add
rcl
nop
and
dec
testb
adc
pop
inc
jge
ljmp
ljmp
adcl
insl
xor
mov
and
repnz
or
adc
inc
xor
push
fnop
cwtl
jl
adc
int3
mov
addr16
mov
negl
and
mov
push
loope
sbb
jne
adc
hlt
insb
mov
mov
fcoml
mov
fsubl
or
fcompl
sbb
in
cld
daa
sbb
out
dec
int3
inc
pop
cmc
dec
add
outsb
fdivr
inc
sbb
shll
fadds
cmp
in
sbb
dec
push
add
inc
add
fsub
and
push
shrl
jg
mov
daa
shl
rol
testb
lods
out
pop
mov
sbbb
sahf
fwait
movsb
cli
pushf
adc
xor
inc
add
daa
push
imul
sbb
inc
push
and
imul
add
and
and
ja
and
pop
mov
fadds
popf
pop
xor
jle
clc
cmp
ja
out
int3
add
shll
push
fsubrl
clc
push
push
add
aad
cmp
adc
cmp
and
add
mov
negl
mov
int3
repz
call
in
jmp
mov
add
addb
mov
or
push
clc
orb
or
cli
icebp
xchg
and
push
push
inc
or
mov
push
int
fs
mov
pusha
inc
scas
sub
cmovl
and
dec
inc
call
lea
mov
repz
dec
gs
mov
rcll
call
mov
incl
cmp
dec
lret
inc
lcall
lcall
lahf
jle
and
inc
lcall
inc
icebp
cmp
adc
jno
pop
je
mov
cld
jg
enter
sub
push
sub
add
pop
loopne
inc
mov
clc
pushf
and
enter
shrl
jmp
loop
bound
add
jb
clc
imulb
sbb
les
push
or
jo
fildll
cltd
jg
sub
decl
mov
push
cmpsl
les
leave
rolb
test
addl
push
stos
ss
lds
cli
dec
les
and
inc
xorb
add
rorb
push
mov
sahf
jb
sbb
cmp
fstps
icebp
and
push
les
xor
cmp
jno
xor
cli
sbb
cmp
add
mov
fiadds
cwtl
adc
push
sub
insb
lahf
loopne
xchg
repz
lret
jnp
popf
ret
rorl
pop
movsb
push
insl
or
add
addr16
and
insb
ret
xchg
call
mov
std
fnstcw
ss
mov
mov
sbb
add
decb
sti
adc
aaa
lea
je
subb
sbb
mov
sub
stc
cli
sarl
push
mov
cmp
std
sbb
fiadds
mov
jecxz
add
cmp
push
push
cli
insb
xchg
pop
aaa
repz
pop
fldl
rcrl
mov
icebp
cmp
fucomip
inc
mov
scas
mov
cmp
jg
sar
loopne
aam
imul
mov
add
ret
rol
mov
cld
in
lahf
push
sub
xchg
ds
cmc
sub
push
inc
add
cmc
sub
push
jge
pop
decb
mov
cltd
xchg
sbb
mov
push
sbb
add
fbld
inc
outsl
test
dec
and
fnstenv
mov
mov
pop
mov
or
and
inc
pop
idivl
xchg
add
cmpb
pop
inc
pop
movsl
jns
arpl
lods
inc
cs
aaa
pop
add
sub
mov
inc
es
cmpsb
mulb
jg
xorl
xchg
jl
dec
inc
fildl
dec
dec
aad
mulb
scas
shl
pop
adc
xor
incl
push
push
xchg
je
andb
jns
aaa
repnz
sub
push
addb
mov
dec
mov
add
add
scas
movsl
add
imul
daa
aam
cld
incb
pushf
js
js
decl
mov
jae
and
ret
sub
xchg
dec
sbb
and
add
fisubrs
xchg
add
test
imul
cli
and
cmpsb
xor
or
fnstsw
push
xorb
fst
mov
pop
sbb
push
ret
push
vmovshdup
sub
fldt
ret
pop
pop
icebp
push
xchg
clc
pop
add
or
jno
push
aam
rclb
adc
jo
pop
fwait
mov
pop
insb
sarb
dec
notb
das
bound
push
sbb
aaa
ret
mov
sbb
lret
or
daa
inc
jl
mov
mov
daa
popf
dec
mov
insb
cwtl
clc
pop
lcall
push
mov
mov
sbb
jge
mov
lods
sbb
pop
js
lock
ficomps
lea
dec
and
sbb
xor
test
in
pushf
mov
icebp
shr
sbb
ljmp
add
aad
mov
dec
pop
lea
jp
push
mov
push
cmp
xchg
add
call
cli
jmp
imul
and
das
jl
xor
sub
push
push
push
sub
insb
mov
rcrb
push
ret
dec
popa
dec
cmp
orb
lds
pop
push
inc
lret
mov
jo
add
inc
pop
adcb
lock
dec
inc
int
inc
lahf
sbb
lds
cltd
dec
in
decl
xchg
aad
imul
mov
and
outsl
arpl
stos
aas
js
imul
data16
lcall
aad
data16
movsl
adc
into
mov
addr16
xchg
in
std
arpl
scas
loop
fmulp
cltd
insb
lret
imul
in
les
or
mov
pop
js
or
push
mov
jle
repnz
rcrb
adc
mov
mov
mov
inc
cmpsb
jp
xchg
adc
rcl
js
pop
or
xor
add
mov
cld
rorl
inc
cmpsl
mulb
sbb
ret
jge
xor
in
add
fstl
or
in
adc
mov
imul
ja
mov
sub
loopne
loopne
add
outsb
jb
add
dec
outsb
sub
lea
add
gs
sbb
inc
pop
cwtl
mov
outsl
xor
jmp
lea
mov
ja
jl
pushf
adc
or
popf
aam
pop
lar
inc
sbb
and
lds
lcall
add
jne
jecxz
iret
and
lea
sar
loopne
mov
icebp
roll
push
lods
das
mov
xchg
xor
pop
add
mov
inc
ljmpw
push
sti
dec
gs
cmpsb
jl
push
iret
sbb
adc
lret
mov
and
mov
insl
mov
cmp
xchg
cltd
sbb
shl
xor
adc
sbb
test
adc
cmp
fidivrl
mov
stos
ss
ljmp
cld
jle
cmp
lock
gs
and
mov
dec
js
das
lock
adc
cmp
jb
outsl
or
push
inc
mov
arpl
sbb
lods
xor
push
roll
imul
std
sbb
jg
adcl
popf
aad
inc
fisttpl
movsl
xchg
cmpsl
mov
push
incl
rclb
xor
test
mov
push
fs
sub
pop
sub
inc
popa
pop
ret
pop
loopne
sub
pop
outsl
xchg
int
pop
mov
aam
aad
adc
fs
outsl
das
cltd
mov
adc
jmp
pop
lret
aaa
js
or
jb
mov
sbb
mov
cmp
adc
test
inc
arpl
loope
push
adcb
shlb
fwait
xor
jge
sbb
adc
add
sub
jge
mov
xlat
cs
movzwl
in
repz
pop
mov
cs
int3
imul
pop
movsb
call
test
xchg
sub
pop
cmp
frstor
loop
fdivl
mov
sahf
sbb
inc
loope
or
jg
and
mov
cli
lock
int
dec
lds
loope
cli
push
hlt
add
cmp
and
or
test
shl
push
jg
jg
roll
or
pushf
mov
or
scas
adc
add
dec
pop
cmc
clc
push
stos
scas
mov
jo
xor
or
cmc
push
fwait
aaa
jno
add
nop
in
test
push
and
shlb
xor
rorb
rcrl
shrl
push
adc
add
xchg
mov
or
add
je
xor
fisubl
sahf
push
mov
adc
inc
mov
cmp
xorl
pop
loope
xchg
cmp
push
push
push
roll
js
lret
inc
jb
orb
add
mov
cmc
imul
in
ja
or
dec
cmp
jne
sbb
adc
mov
loopne
mov
cmp
loopnew
enter
push
clc
subb
cltd
xorb
mov
dec
lock
pop
mov
adc
push
push
mov
je
lock
dec
dec
push
inc
mov
div
mov
push
xchg
lea
loop
sbb
cmp
enter
mov
pop
les
data16
incb
cmp
hlt
add
or
scas
rcrb
adcb
daa
cmp
mov
pop
lahf
rcrl
daa
dec
sub
or
popf
xchg
je
add
jecxz
in
scas
addb
test
xchg
mov
cld
sahf
mov
ret
lea
adc
add
add
push
xchg
inc
dec
add
adc
or
scas
inc
pop
andl
cltd
lret
sarl
sub
shl
int
push
cs
jae
add
loopne
inc
pop
mov
adc
ds
inc
loope
jg
push
icebp
pusha
xchg
sub
sub
mov
add
cmp
sbb
nop
or
push
pop
scas
mov
pop
cmc
push
mov
fisubl
push
adc
adc
sahf
fsubs
mov
inc
add
push
pop
mov
int
in
loopne
call
xchg
aam
jl
cld
push
insb
mov
in
push
int
lock
push
fidivl
je
mov
clc
and
and
fisttpl
fbstp
adc
add
sub
movsl
mov
or
add
outsb
jb
jae
push
or
lock
shll
add
inc
sub
add
inc
inc
jg
jno
mov
sbb
dec
and
sub
cmovo
add
push
lret
and
sarb
add
and
mov
adc
inc
adc
bound
aam
pop
mov
add
add
stos
pusha
mov
push
rolb
and
shl
or
lds
or
and
int3
xchg
outsl
cmp
mov
out
sbb
cmpsb
jecxz
inc
mov
std
js
jmp
arpl
mov
pusha
lock
pop
movsb
and
mov
adc
xchg
aaa
loop
mov
adc
sub
sarl
lret
das
icebp
fbld
mov
movsl
stos
sub
fs
jo
jecxz
cmpsl
loopne
mov
add
sub
icebp
dec
dec
xor
stos
jo
test
pop
mov
cld
push
xor
add
pop
mov
dec
jg
icebp
push
sub
fwait
push
or
jno
dec
fimuls
incb
xor
adc
out
sub
repnz
mov
mov
add
enter
mov
incb
or
ja
add
or
inc
mov
pushf
lcall
ds
dec
daa
test
leave
add
fisttpll
jns
or
jl
jl
sbb
les
adcb
adc
outsb
hlt
and
xor
cwtl
xchg
sbb
call
mov
mov
add
mov
mov
xchg
adc
and
inc
mov
mov
incl
mov
sub
out
mov
mov
pushf
pop
es
mov
addb
jg
mov
or
or
in
iret
pusha
and
add
push
in
cmpsb
clc
inc
movsb
inc
insl
or
dec
inc
mov
push
mov
xor
rep
xor
lcall
inc
mov
push
or
or
rcr
or
pop
clc
insb
scas
pop
pusha
jmp
les
pop
mov
test
jg
mov
xchg
test
leave
mov
arpl
pop
mov
je
lcall
ja
es
mov
aas
test
xchg
dec
fcoml
cmc
jg
inc
ljmp
sbbb
inc
inc
mov
das
shl
clc
ficoml
jnp
xchg
cmp
fildll
jmp
out
int
or
jle
das
jg
das
shlb
pop
dec
imul
cli
incl
mov
out
stos
push
inc
pop
pushf
inc
cmp
stos
sbb
mov
addb
lock
push
mov
push
sahf
inc
in
nop
sub
dec
cmp
icebp
xchg
mov
jbe
dec
dec
mov
ljmp
adc
push
inc
rolb
pop
sahf
popl
mov
lods
pop
js
or
push
repnz
clc
jg
xchg
ftst
push
xchg
push
test
cmp
ja
adc
fdivp
inc
inc
xchg
jae
repz
push
and
mov
call
sti
pop
cs
xor
das
cmc
pop
orb
pop
pop
je
aaa
loopne
or
cmp
cld
sub
insl
cmp
cmp
push
fs
call
ljmp
mov
push
push
inc
mov
pop
fadd
jae
lods
das
xchg
push
push
out
test
xchg
or
pop
add
mov
jg
cmp
icebp
repnz
fisubrs
mov
test
sahf
jge
call
mov
daa
jae
in
call
or
int
bound
ljmp
push
mov
push
decl
pop
ss
adc
cmpsl
jge
lar
pushl
sbb
xchg
inc
bound
popl
addr16
cmp
xchg
cs
cmpsl
ds
add
pop
mov
icebp
test
inc
sbb
sub
or
pop
int3
cld
jo
loopne
lods
fcmovb
jo
mov
ret
jmp
mov
cli
and
cmpb
add
ficoms
lock
mov
pop
lock
cmp
dec
loop
test
roll
push
fcom
sbb
stos
adcl
aaa
addr16
mov
fdivs
jge
push
add
dec
lret
and
daa
pop
push
push
cmpsb
mov
pushf
cmp
fadds
ror
sub
dec
adc
into
fs
sub
test
addr16
and
dec
add
les
enter
inc
pop
shl
or
pop
pop
add
test
and
xchg
jbe
pushf
cmc
inc
loope
add
pop
xor
scas
sub
add
hlt
insb
add
mov
add
add
cld
into
add
xor
mov
fidivrs
fs
fnstsw
cld
mov
test
cmp
inc
xchg
or
and
lock
mov
add
mov
dec
mov
or
repnz
add
jecxz
push
mov
daa
adc
cmp
push
clc
shl
out
ljmp
xchg
jg
mov
or
aam
mov
lock
loope
mov
inc
aas
mov
inc
xlat
pop
sbb
push
lock
sarb
out
out
sub
shlb
sbb
data16
aam
cmc
mov
pop
aam
adc
add
ret
add
inc
in
loop
les
or
or
add
xorl
lcall
sub
add
insb
daa
adc
cs
cmovl
out
pusha
jl
add
xchg
mov
xchg
aad
cld
jg
cld
sub
dec
sbb
stos
sbb
out
push
sbb
fs
xchg
sub
mov
cmp
xchg
scas
outsb
xor
xchg
insb
adc
and
cli
sbb
sbb
inc
mov
shr
mov
add
jnp
add
cltd
iret
cmp
lods
pop
sub
adc
test
adc
fsubl
mov
ljmp
mov
out
sub
fisttps
lea
cwtl
fldl
pop
imul
mov
mov
mov
sub
mov
neg
or
or
jge
cmpb
outsb
adc
pop
out
data16
pop
dec
aas
cwtl
aaa
ss
add
adc
mov
mov
mov
sbb
or
out
mov
xchg
jo
out
in
je
pop
cmpsl
cwtl
dec
cmp
sbb
jge
inc
push
and
sub
cmp
fidivl
idivl
mov
or
add
mov
adc
jmp
xchg
stos
ds
loop
pop
aaa
mov
push
push
mov
sub
ljmp
jae
mov
mov
stos
cltd
inc
adc
loope
aam
fcompp
pop
fadds
das
fucomi
sub
rolb
mov
test
jp
ja
push
xor
jne
adc
or
mov
sbb
icebp
jp
mov
adc
adc
dec
repz
call
adc
fimuls
into
sahf
mov
pop
into
loop
neg
pop
and
sbb
add
mov
cmp
sub
adc
mov
shlb
enter
xorl
fwait
mov
inc
mov
jle
ja
sub
les
xchg
sub
jl
test
push
cltd
popf
push
and
add
inc
pop
jmp
mov
adc
lret
adc
adcb
nop
test
icebp
cs
bound
push
imul
pop
rclb
outsl
mov
stos
lds
pushf
repz
cmc
gs
test
lahf
push
adc
movsl
orb
or
inc
aaa
mov
sbb
pushl
push
mov
push
dec
movsl
int3
mov
rol
addr16
mov
add
les
mov
adc
sbb
or
ds
scas
roll
ret
add
bound
sbb
out
popa
sub
sbb
pop
mov
and
fs
jo
mov
xor
into
pop
xor
mov
scas
adc
add
scas
sbb
jb
or
movsl
pop
xor
add
add
lret
icebp
sbb
mov
clc
pop
cli
js
xor
or
das
repz
mov
push
sub
outsl
and
jg
jg
in
outsl
daa
jle
sbb
cwtl
das
lods
sub
lea
xchg
inc
decl
dec
dec
gs
adc
pavgb
jno
or
adc
cmp
call
mov
call
mov
ret
call
ljmp
jno
cvtps2pi
add
inc
test
jne
pop
ss
outsb
jg
iret
add
mov
push
sub
cmp
jge
std
fcoms
inc
cmp
inc
loopne
ss
dec
idiv
cmp
iret
lcall
in
push
mov
test
inc
mov
lock
mov
xchg
icebp
and
dec
jmp
scas
pop
or
add
sub
dec
outsl
stos
decl
jmp
nop
xchg
sbb
and
insl
outsb
scas
or
arpl
add
lea
lahf
cmp
adc
xchg
add
ss
fs
cli
ja
or
mov
jbe
and
sbbb
add
js
aad
pop
add
jne
loope
outsl
or
xlat
leave
adc
sbb
cli
testb
filds
cmpsl
xlat
add
lea
mov
push
push
or
lcall
or
mov
jg
mov
xchg
or
aam
loope
outsl
test
mov
lea
cmp
mov
add
notl
mov
stos
jge
sti
aam
sbb
insw
test
push
mov
ja
mov
or
mov
or
fdivrl
outsl
inc
sub
jne
shr
fs
ret
test
add
pusha
stos
pop
jecxz
fmull
inc
add
xor
inc
ffree
jg
std
sbb
sbb
cmpsl
dec
ret
adc
cmpsb
sub
jecxz
outsl
hlt
scas
insb
mov
push
mov
das
cmc
add
lock
incl
repnz
inc
call
lods
cmpb
push
mov
stos
sub
lahf
pop
enter
add
inc
add
rcr
in
cltd
rolb
aam
aad
mov
xchg
jb
rcl
ss
imul
mov
jb
test
push
push
pop
fcoml
gs
add
mov
add
insl
call
out
mov
and
cli
daa
inc
xchg
or
icebp
test
popa
shl
pop
add
xor
or
int3
add
pop
mov
adc
ret
mov
add
jmp
mov
mov
into
jecxz
add
mov
mov
sti
ja
pop
bound
outsl
mov
ret
inc
lds
inc
sub
and
jl
mov
xlat
jg
call
test
add
pop
psubd
aas
movsb
add
push
nop
fs
jl
ret
mov
push
push
testb
cmovnp
or
cwtl
or
cmp
pushl
pop
push
push
ja
or
loope
add
add
daa
fldcw
invd
out
cmpsb
clc
loopne
call
cmp
add
inc
push
and
pop
add
xchg
fldl2e
std
jno
icebp
push
mov
sbb
ss
dec
cmp
pop
ja
pop
fdivr
mov
lret
hlt
insb
xchg
pop
mov
inc
in
jecxz
push
sub
jnp
jge
out
adc
adc
enter
mov
in
mov
mov
cmp
dec
in
mov
cmp
sub
mov
dec
mov
fisttpll
js
out
mov
mov
maxps
push
inc
mov
adc
add
mov
mov
xchg
out
pop
xchg
inc
mov
lock
sbb
sbb
test
out
fdivrs
cmp
cmpb
cwtl
mov
in
mov
aaa
sbb
xor
lods
and
jne
negb
aaa
pop
std
dec
popf
mov
js
jg
push
mov
adc
dec
shll
rcr
pop
ss
xor
ficoms
jno
sbb
sbb
dec
movsb
inc
negl
adc
sbb
fisubrl
pushl
jbe
gs
inc
paddusb
imul
or
mov
mov
cmp
xor
mov
maxps
jae
adc
rorl
ret
in
divb
mov
mov
jno
sub
pop
xchg
sub
test
mov
push
jecxz
pop
dec
lea
push
sub
and
xor
mov
pushl
adc
add
int3
es
rcr
and
inc
xor
not
outsl
adcb
mov
xlat
paddusb
jge
lods
pop
cld
and
out
pop
push
pop
adcb
aas
out
pop
sub
cmp
adcl
add
aas
xrelease
cltd
pop
int3
cmp
aaa
xor
add
xor
loope
mov
hlt
jns
arpl
push
mov
adc
in
test
lods
decl
outsb
das
fisttps
sbb
out
stos
and
add
pusha
sbb
cmpsl
pop
mov
jmp
fildl
je
or
mov
jne
fists
mov
inc
add
insb
icebp
jg
or
or
int3
cmp
test
cmp
mov
enter
shll
xchg
jle
pop
mov
and
iret
out
adc
pop
daa
inc
out
call
mov
mov
inc
dec
inc
sub
ret
pop
and
outsl
loop
lret
jne
pop
movsb
lds
out
idivb
mov
mov
mov
mov
out
xchg
fs
adc
filds
aaa
inc
in
insb
loopne
rcll
pusha
sti
testb
sbb
int
aas
jmp
xor
or
lods
pop
push
sub
ret
roll
call
popa
sbb
data16
adc
scas
jne
shlb
scas
stos
xchg
les
pop
pop
daa
call
loop
cltd
rcl
push
add
pop
push
in
push
rolb
movsb
cld
adcb
mov
sahf
imul
pop
nop
adc
inc
mov
pop
jae
cmpsb
and
loope
cld
mov
push
mov
sbb
mov
jg
pop
test
mov
jnp
push
xchg
mov
pop
sub
movsl
lds
or
mov
adc
incl
icebp
mov
jbe
jnp
sbb
xor
sub
ljmp
mov
or
jmp
fs
pop
adcb
xlat
inc
stc
push
or
pushf
gs
mov
dec
pushf
loop
push
jb
andl
dec
xor
xor
dec
filds
imul
data16
clc
or
inc
jbe
out
incl
lock
cmc
xchg
inc
dec
xor
ljmp
pop
mov
lea
out
dec
dec
and
in
dec
aad
mov
mov
xorb
stos
mov
in
mov
jecxz
add
jne
inc
sbb
sbb
pop
push
mov
adcl
inc
test
or
xchg
jg
imulb
insb
pusha
data16
stos
pop
dec
in
movsl
cmp
sub
pop
add
les
mov
mov
push
jns
mov
sub
fnsave
inc
es
ja
xchg
push
popf
nop
insl
dec
call
in
add
push
mov
add
mov
add
das
sub
dec
sub
xchg
les
jbe
add
add
pop
in
jge
mov
or
nop
xchg
popf
adc
pop
xor
mov
stos
cmp
or
sarl
loopne
inc
cmp
ja
dec
push
and
outsl
dec
mov
cld
test
add
xchg
mov
xor
inc
sub
pop
pushf
add
mov
sbb
or
push
sub
cli
aas
ja
mov
into
jmp
dec
push
in
adc
adc
movsl
mov
mov
aaa
cmc
mov
mov
sbb
les
lock
cmpb
arpl
and
mov
mov
clc
stos
pmulhuw
sub
cmpsl
mov
and
test
cwtl
and
lock
inc
test
imul
pop
mov
pop
fidivrs
fs
and
xchg
and
mov
push
mov
loope
lods
xor
or
std
cmc
and
loope
ret
xchg
lds
fisttpl
sbb
push
sbb
fs
pop
aaa
hlt
pop
hlt
sbb
sbb
pusha
pop
das
icebp
call
push
iret
in
popa
and
dec
xor
mov
sub
inc
insl
cwtl
cwtl
add
jge
and
mov
addr16
sub
mov
hlt
test
or
sub
adc
and
mov
jge
add
xor
cli
or
arpl
and
push
jns
xchg
push
inc
data16
scas
jo
xor
incb
pusha
orb
cmpl
fcoms
pop
out
dec
jmp
test
jns
ret
je
sbb
mov
lret
sub
fisubrs
movsb
xor
addr16
insb
sbb
inc
fdivrs
push
pop
test
aam
jmp
dec
pop
jo
mov
sub
xchg
pusha
mov
hlt
xor
call
fstpt
jmp
mov
arpl
push
repz
ret
jge
mov
data16
push
pop
shr
mov
adc
cmpl
pop
push
out
push
pop
or
sbb
jns
pushf
cs
and
pop
loop
out
loope
lret
outsb
push
push
outsb
jnp
fdivs
or
cmp
sbbl
ljmp
push
loope
outsl
into
sti
pop
xchg
jge
mov
out
jg
mov
in
mov
outsl
test
push
add
or
ljmp
movsb
mov
and
pop
push
icebp
sbb
sub
jmp
lcall
or
repnz
sub
push
adc
pop
sub
dec
repz
lahf
fimuls
inc
int3
push
cmp
adc
es
ficoms
and
idivl
sbb
mov
cwtl
mov
or
mov
mov
mov
adc
push
loope
add
pop
fisttps
jge
mov
sbb
test
out
movb
mov
popa
or
and
and
mov
fidivs
xchg
or
cmp
xchg
mov
test
inc
sbbl
xlat
cmpsl
out
shlb
jo
mov
pop
mov
inc
sbb
adc
ja
push
shrl
sub
jne
cld
add
jg
xchg
sub
jecxz
jae
js
inc
cmp
pop
dec
sub
in
sbbb
inc
pop
mov
popa
in
sbb
call
sub
std
popa
mov
push
lock
dec
shrl
in
movsl
pop
int
mov
sarl
fnsave
inc
stos
ss
push
imul
adc
iret
mov
aaa
jl
cmpsl
sbbb
mov
add
fmuls
pop
movsl
scas
sub
jg
sub
aas
adc
into
stos
out
inc
adc
leave
cmp
std
add
decl
mov
lods
mov
cmp
pop
fidivrs
push
popa
push
fwait
xchg
cltd
cmp
xchg
clc
jg
das
sbb
add
xor
pop
pop
loopne
test
sub
push
insl
sbb
sub
dec
cltd
fistpll
mov
clc
roll
jmp
jg
sbb
sar
cmpsb
cmc
add
xor
js
pop
inc
xor
push
andl
hlt
and
les
loope
std
sub
dec
repnz
insb
aaa
pop
mov
dec
cwtl
mov
es
hlt
outsl
lea
mov
add
jb
adc
ret
call
mov
lea
dec
loop
jecxz
sbb
sub
and
sub
rolb
cltd
push
cmc
std
cltd
cld
ret
ss
xorb
mov
test
test
jl
jo
mov
mov
xchg
xchg
sbb
ret
or
push
inc
decl
push
movsl
inc
pop
ret
outsl
shrl
jns
aaa
inc
lock
movsl
pushf
inc
push
pop
xchg
mov
jne
lahf
scas
scas
fcoml
decl
shld
aas
test
mov
ljmp
outsl
movsb
jmp
inc
bound
add
pop
jp
addr16
scas
jns
data16
lahf
cli
xchg
mov
scas
mov
cmp
mov
add
xchg
jb
repnz
ljmp
clc
jg
test
ret
loop
xor
call
aaa
cs
shlb
adc
and
test
cli
pop
push
push
and
lock
fwait
and
pop
sub
subl
mov
adc
push
pop
pusha
stos
xchg
xchg
dec
popa
mov
insl
jecxz
aaa
inc
fidivs
insb
mov
jne
loope
outsl
mov
xchg
incl
outsb
dec
dec
add
sbb
ret
fldpi
adc
mov
mov
mov
lret
push
movsb
mov
sarb
movsb
addb
ret
aaa
shlb
imull
clc
pushl
mov
js
shrb
rolb
pop
and
je
idivb
mov
rol
daa
mov
or
pushl
mov
or
daa
int3
dec
dec
ja
data16
and
inc
aas
mov
push
shll
xchg
jge
cmpsl
ljmp
loop
pop
jle
push
repz
and
jo
push
mov
mov
jge
xor
data16
ja
mov
fsubl
and
hlt
lret
sbbb
fnclex
test
das
sub
popa
cltd
les
mov
pop
xchg
xchg
sub
inc
mov
xor
pop
ds
sarl
std
jmp
and
adc
add
cltd
sbb
out
jg
ret
mov
mov
or
mov
les
xor
and
sbb
xor
andb
jg
lahf
testl
repz
rcrl
rorb
jae
pushf
je
fidivl
jb
sarl
inc
inc
ds
cld
cmc
outsl
fstpl
cwtl
and
dec
cmp
repz
icebp
lods
and
lret
inc
lcall
js
fisttpl
ljmp
jg
xor
shll
fdivs
ja
pop
cltd
jmp
pop
sub
lods
int
loopne
out
fstpl
cs
in
popl
fistpll
fs
inc
push
adc
xchg
arpl
mov
sub
cltd
sbb
jecxz
out
adc
pop
rorb
es
iret
inc
fldcw
pop
int
fstps
mov
jb
sar
lahf
push
push
insb
jl
xlat
jmp
sub
aas
out
mov
mov
dec
dec
lock
dec
aaa
push
and
pop
in
out
cmp
pop
mov
jg
mov
aas
nop
loopne
sarl
pop
push
add
sbb
jb
or
add
pop
xchg
jae
sub
sbb
loopne
jl
push
mov
mov
pop
vpunpcklbw
cmp
stos
dec
push
pop
cmp
leave
mov
cltd
xor
fsubs
out
scas
pop
mov
inc
jg
shrl
dec
and
mov
xor
cmpsb
js,pt
inc
out
ljmp
negb
or
sti
or
mov
jmp
stc
sbb
inc
test
inc
mov
pop
outsl
insb
cmp
sbbl
xlat
icebp
mov
add
and
sar
mov
insb
sub
movsl
loope
adc
xchg
lahf
mov
sub
push
testl
ss
in
inc
mov
mov
roll
mov
aas
insb
inc
cmp
inc
pop
push
lods
jle
test
decl
mov
lret
push
lea
inc
add
dec
adcb
adc
fidivl
aas
or
notl
icebp
call
sarb
rcrl
daa
or
inc
sbb
push
movsb
jae
bound
incb
push
or
xchg
bnd
scas
outsb
outsl
mov
xchg
sub
mov
or
cmp
jns
shrl
ja
mov
xor
dec
filds
repz
test
fs
test
pop
mov
xor
cld
cmpsl
mov
or
popa
adc
iret
sub
xor
cmp
mov
icebp
xchg
mov
mov
sbb
adc
out
out
outsl
clc
mov
aam
test
mov
ficompl
aas
dec
jmp
fs
jecxz
mov
and
clc
or
out
clc
mov
aad
leave
adc
cld
movsb
fsub
test
das
push
cmp
xor
mov
mov
ret
jae
mov
or
mov
je
loope
xchg
sbb
sub
pop
jmp
pop
pop
inc
xchg
sbb
dec
add
inc
aam
pop
add
les
cmp
add
outsl
mov
or
inc
xor
mov
mov
jne
or
jno
sub
fdivr
leave
inc
subb
movsl
lcall
outsl
inc
push
outsb
push
push
push
and
xchg
nop
rorl
pop
mov
mov
mov
aam
push
arpl
push
inc
mov
gs
adc
stc
jno
and
dec
lock
xor
stc
adc
inc
xchg
mov
lcall
jp
aam
shll
adc
adc
fsubrs
je
inc
popa
xchg
aaa
ret
sahf
jo
mov
int3
push
ret
sub
mov
or
sti
mov
push
mov
mov
test
ret
inc
in
sbb
and
lods
test
dec
push
sbb
mov
cld
mov
or
inc
popa
rcrb
push
sub
mov
mov
jg
jbe
adc
out
popa
and
dec
sub
push
dec
daa
test
jge
mov
loope
jg
mov
fsubs
xor
gs
push
inc
push
pusha
hlt
enter
push
mov
pop
repz
xor
pop
decb
out
outsb
push
aas
pop
pop
sub
or
cmp
stc
cwtl
shlb
sti
divl
lock
mov
pop
sti
jmp
out
mov
xor
lock
and
jo
outsb
gs
je
mull
cli
sub
xlat
in
shrl
hlt
out
pop
cmp
into
js
sub
mov
or
sub
mov
mov
mov
add
andl
cli
outsl
push
xor
mov
dec
lahf
jmp
mov
add
sub
sub
pushf
mov
cmp
les
stos
outsl
icebp
sbb
push
sub
rcrl
adc
mov
cmp
jae
insb
mov
xlat
aam
push
rcr
lock
sbb
mov
push
sbb
int3
add
js
jecxz
and
mov
mov
dec
inc
xor
dec
rcrb
add
add
inc
pusha
and
mov
pusha
mov
notb
add
fisubrl
test
push
xchg
lret
push
adc
xor
ret
mulb
dec
and
sub
or
stos
inc
jnp
pop
sub
and
sbb
jb
mov
filds
lea
pop
in
jecxz
nop
adc
mov
lock
and
cld
push
sbb
jne,pn
sub
xor
mov
inc
mov
outsl
dec
inc
push
das
es
js
or
cmpsb
nop
add
popa
jmp
inc
inc
inc
in
fisttpl
jp
pop
call
mov
fldt
fwait
aas
xchg
cs
adc
pop
outsb
mov
das
mov
out
jno
loopne
adc
insl
xchg
or
adc
push
imul
ret
clc
aas
ss
fisttpll
in
mov
mov
xchg
mov
push
inc
mov
loope
sbb
mov
rorl
cmp
mov
in
mulb
mov
aas
and
mov
mov
test
in
rorb
xlat
or
hlt
adc
das
sbb
and
xor
and
push
mov
mov
das
cwtl
imul
adc
loopne
aas
and
jne
and
jmp
das
jg
inc
js
xchg
pop
sbb
scas
jp
pop
push
cwtl
pop
sbb
call
inc
jge
fdivrs
adc
mov
mov
loopne
pop
lock
adc
cltd
bound
sbb
mov
or
sbb
jl
inc
hlt
test
enter
xor
sbb
add
pop
jae
das
ds
repnz
cmp
pushf
xor
push
pop
xorl
adc
lea
xchg
jecxz
leave
xor
push
pop
loopne
jl
sub
cmp
xlat
cmc
xor
pusha
inc
in
dec
mov
adc
add
dec
add
jp
inc
call
daa
mov
ds
fmuls
xor
inc
fldcw
add
or
loopne
adc
add
push
adc
icebp
sub
call
fildl
inc
aam
lret
adc
mov
lret
inc
cmp
addb
fsubrl
loop
xchg
cld
orb
and
add
adc
inc
dec
in
sub
cmp
push
push
pop
call
add
popf
push
jge
inc
lods
sub
mov
sub
rcr
cmp
sbb
inc
fists
daa
fdiv
int
stos
les
dec
inc
sbb
call
cmp
fmuls
add
aam
adc
fistpl
xor
aam
sub
and
adc
mov
lock
sarb
push
add
or
or
sbb
fimuls
add
fs
testl
xchg
notb
nop
xchg
test
rcll
pop
rcrb
fisubl
js
shll
adc
add
or
add
sbbl
xor
shl
and
ret
in
imul
and
ficomps
xchg
js
movsl
mov
in
andl
out
adc
push
cmp
pop
add
aam
rorl
and
outsl
mov
and
fs
pop
add
add
mov
lock
xor
dec
cld
mov
inc
jmp
and
mov
inc
insl
sti
dec
adc
sub
adc
pusha
push
lock
pop
add
or
test
ss
mov
pop
jp
sbb
adcb
cmpsl
mov
and
dec
and
inc
popa
mov
rcll
lret
xchg
imul
and
xchg
das
loopne
xchg
adc
and
out
je
push
or
pop
hlt
daa
fisubrl
sbb
mul
in
in
push
loopne
push
mov
jg
cli
sbb
add
movsl
sub
or
xchg
pop
inc
nop
mov
hlt
js
or
dec
int
or
jb
xor
dec
xchg
mov
mov
add
int
aas
cld
dec
push
add
mov
lahf
sbbl
dec
mov
xor
sti
sbbl
add
in
or
rorb
arpl
or
std
adc
mov
push
sbb
daa
add
xor
lcall
push
adc
sarl
jbe
or
jns
add
pop
loopne
fnsave
sti
mov
test
cs
into
sbb
lahf
sub
jg
pop
jl
dec
xor
dec
mov
jp
and
fstl
pop
call
add
call
push
popa
stos
sbb
lret
and
mull
ds
or
adc
es
addl
aaa
andb
push
push
notb
add
das
jo
jl
push
cld
mov
jae
into
test
mov
sbb
imul
ffree
sbb
fs
pop
mov
lods
dec
sbb
push
add
sub
sub
aaa
jno
and
sub
sub
mov
inc
pop
adc
push
sub
sbb
cwtl
mov
add
loopne
shlb
mov
push
lcall
cwtl
cmp
sub
fsts
cwtl
fistpll
leave
jl
loopne
shrb
adc
mov
jle
pop
jo
cs
add
cmp
and
fdivrs
dec
and
sbb
mov
dec
cld
repnz
jb
leave
mov
fiaddl
jo
lods
push
sbb
dec
xchg
xchg
cmc
push
xchg
mov
pop
sarl
xchg
loop
adc
mov
insl
das
mov
or
fwait
xchg
test
js
mov
jne
mov
mov
sbb
mov
mov
fwait
adc
jo
outsb
mov
xor
xchg
xor
jnp
sbb
jl
ja
mov
push
push
or
xchg
mov
adc
mov
inc
shrl
in
mov
sbb
jno
aaa
aam
les
jne
out
stos
inc
lods
ret
dec
and
pop
clc
cmp
out
repz
fldenv
pop
cmpsl
adc
mov
repz
ret
fldl
xchg
fiaddl
adcb
fsubr
outsl
mov
adcl
clc
call
sbb
add
push
mov
push
adc
icebp
jno
fwait
push
loopne
pop
data16
and
sbb
inc
les
insl
jbe
stos
add
lret
add
add
adc
test
incl
or
cltd
addb
loopne
loope
push
fiaddl
pusha
loopne
push
adc
verr
add
loop
and
mov
push
add
pop
cli
mov
gs
scas
or
or
xchg
gs
es
arpl
mov
psllq
mov
lods
test
fucomip
sbb
ljmp
jno
push
xlat
and
sub
hlt
iret
ficompl
sbb
sub
leave
xor
dec
adc
add
arpl
cmp
mov
mov
notl
mov
enter
out
and
in
add
cmp
adc
lea
push
mov
mov
cld
ret
sbb
push
out
push
sub
jns
outsb
mov
push
daa
mov
out
sub
ljmp
xor
mov
loop
mov
orl
dec
loopne
mov
sub
adc
xchg
jp
jmp
pop
cmp
jle
out
or
pop
jno
pop
jb
lock
lods
xor
std
cltd
mov
push
xchg
or
cs
out
mov
dec
inc
cmpsl
fnstsw
inc
leave
loope
mov
clc
inc
das
mov
je
je
inc
pop
sub
ret
mov
mov
xchg
leave
sub
dec
pop
jne
ret
insl
out
jge
std
filds
cmpsb
lahf
push
je
shrl
sub
std
add
sti
pushl
push
add
push
out
je
add
ljmp
sbb
repnz
movsb
sbb
push
scas
ds
cld
ljmp
rclb
adc
jl
add
in
lcall
insl
and
jb
icebp
mov
xchg
sbb
imul
cld
daa
cmpsl
dec
mov
jbe
in
test
mov
add
mov
adc
jns
adc
xchg
in
dec
or
adc
inc
movsb
push
inc
aaa
push
imul
mov
jbe
js
inc
clc
out
mov
fs
mov
jnp
into
adc
scas
or
push
aad
loope
mov
insl
lods
lock
sbbb
jne
mov
out
bswap
ret
jecxz
popa
cmp
jle
aam
jmp
sarl
out
jae
scas
sub
adc
mov
clc
movsb
ficomps
negb
pushf
cmpsb
push
add
mov
jo
nop
js
fs
sbb
fwait
lcall
rcl
xchg
lods
cld
jg
jns
sub
push
mov
ret
std
push
cmpsb
cltd
inc
sti
xchg
in
mov
mov
dec
fwait
xor
out
sub
mov
xchg
gs
decl
sbb
iret
insb
add
pop
lea
pop
xchg
and
sub
jle
bound
sbb
lret
dec
inc
jo
int
cmc
mov
adcl
test
idiv
mov
sub
adc
mov
int
xor
pop
cli
decl
jno
push
sahf
fsts
dec
jo
mov
fxch
decl
jb
cs
xorl
int3
ljmp
ret
aaa
add
ret
scas
mov
lahf
push
jo
das
cmc
pop
leave
dec
xor
mov
mov
js
fcoms
lea
ss
fists
out
in
xor
mov
negb
and
lret
loopne
mov
roll
stos
repnz
pop
dec
icebp
dec
jmp
insb
xor
adc
sbbb
popa
add
dec
jmp
sub
fstpl
lcall
mov
xchg
fld
push
pop
jnp
sub
nop
addr16
fs
insb
adc
xchg
cmp
adc
sbbl
loop
icebp
adc
shll
xchg
xchg
and
adc
addb
adc
add
lret
and
aam
adcb
mov
sub
cltd
xor
add
xchg
mov
mov
inc
out
loopne
into
or
sbb
and
loopne
xchg
icebp
inc
add
hlt
and
mov
hlt
addb
jp
adcb
addb
imulb
inc
ret
and
adc
cmpb
or
inc
push
or
adc
repz
je
pop
clc
je
ja
push
xor
and
xor
lcall
and
and
cmp
rorl
mov
hlt
neg
mov
stos
sbb
sub
xchg
and
enter
adcb
ljmp
aam
test
pop
inc
or
hlt
xchg
subl
sbbb
imulb
jl
mov
lcall
repnz
neg
faddl
notb
outsl
sub
pop
mov
test
add
lods
pop
sahf
mov
mov
out
arpl
add
cmp
outsb
movaps
dec
push
mov
xor
dec
rcll
dec
imul
mov
cwtl
add
js
lock
test
push
or
nop
xor
loopne
stos
dec
aam
sub
inc
adc
sub
rcl
pop
add
dec
add
sbb
mov
adc
mov
add
testl
inc
mov
mov
outsl
scas
sbb
sub
pop
stos
dec
and
in
inc
inc
xchg
inc
dec
daa
stos
ljmp
out
and
adc
xor
jg
or
aam
sbb
icebp
and
stos
cmp
pop
add
rolb
lea
dec
aam
test
mov
dec
out
adc
dec
adc
push
test
xor
mov
inc
je
leave
sbb
scas
xchg
js
test
xchg
dec
ret
ret
stos
xlat
dec
cmp
or
push
sarl
repz
inc
add
jp
push
push
mov
inc
cmp
adc
xchg
test
inc
sbb
inc
jne
xchg
xor
jae
cld
sbbb
or
ds
and
dec
mov
add
loopne
insb
mov
cmpsl
xor
mov
sbb
push
push
xchg
cmp
add
rolb
fimuls
pop
add
movsl
pop
fimuls
mov
xor
jne
mov
or
dec
xor
inc
fstp
add
int
dec
in
movsb
nop
out
and
mov
test
mov
dec
add
mov
imul
sbb
jne
mov
lods
add
or
push
dec
mov
scas
fldt
movsl
or
clc
mov
fildll
addb
dec
jle
fwait
mov
mov
filds
push
shr
cld
in
in
pop
dec
push
push
aad
or
inc
sbb
cmp
movsl
adcb
mov
jnp
mov
insb
inc
adc
into
flds
aam
jne
xor
inc
jmp
add
mov
in
mov
add
xorb
xor
int
cs
add
add
mov
cmp
adc
lret
and
add
pusha
add
mov
lods
jo
addb
addb
lcall
xchg
mov
dec
jg
mov
xor
push
or
rclb
adcl
inc
adc
incl
cwtl
xor
dec
popa
and
int
pop
xorb
inc
mov
add
out
and
rol
int3
inc
les
and
arpl
inc
xor
hlt
mov
mov
sub
add
sbb
mov
out
movsl
or
cmp
xchg
push
jo
xlat
sub
ret
mov
push
sarl
jb
or
mov
addl
insb
and
nop
cmpb
jbe
fsubrs
push
repz
scas
or
pop
fwait
lret
ret
mov
inc
mov
lahf
add
xor
mov
or
add
out
push
gs
iret
lds
sub
outsl
push
movl
add
dec
flds
ret
push
adc
stos
push
insb
add
or
ja
cmpsl
rorl
pop
and
jg
hlt
cmpsb
in
jg
aad
pop
push
cmp
sbb
adc
dec
mov
dec
and
xor
sbb
push
adc
xor
dec
mov
addb
test
adc
rcl
ljmp
or
stos
mov
cmc
jae
xor
lock
or
ret
es
rorb
gs
inc
xor
jmp
mov
lds
je
adc
bound
out
jle
aaa
cli
add
push
pop
movsb
out
or
in
cmpsb
lret
pop
and
sbb
xor
push
add
add
cli
cmpsl
push
add
rol
mov
add
pop
inc
les
lock
adc
insl
test
mov
cmc
mov
pop
sub
ljmp
shll
add
push
stos
pop
dec
or
hlt
cmc
jmp
add
inc
in
ret
cmp
aad
cltd
pop
dec
in
inc
inc
std
mov
mov
xchg
push
jae
pop
push
gs
mov
outsl
les
fiadds
insl
add
cmpl
pop
mov
pop
sar
dec
jb
iret
test
push
dec
rol
push
aaa
dec
fldcw
lahf
jmp
inc
jne
mov
or
lcall
lea
xchg
pushf
fdivp
les
add
xor
fisttps
decb
dec
mov
inc
mov
incl
cbtw
je
pop
sbb
add
lret
xchg
pop
pop
loopne
rcrl
sub
scas
sbb
adcb
push
cld
fildll
adc
fsub
adc
rol
sbb
xor
sbb
pop
adc
mov
sbb
sub
add
fcoms
add
push
mov
ret
cmc
stos
add
lock
ret
push
sub
add
jns
mov
test
dec
cmpb
movsb
adc
push
cli
dec
push
test
aad
lods
dec
lods
fwait
mov
dec
sbb
mov
mov
mov
adc
xchg
mov
loop
xorb
lret
outsl
call
push
xchg
jo
add
push
out
out
push
call
mov
xchg
pop
dec
push
inc
loopne
shll
pop
ret
add
push
cmp
mov
call
test
cmp
mov
jl
loopne
and
dec
add
push
mov
test
inc
sub
leave
loopne
call
jle
xchg
mov
push
cld
pop
lods
dec
rolb
pop
or
pusha
imul
sti
decb
push
mov
dec
xchg
push
inc
aas
sbb
dec
mov
sub
aam
push
or
nop
inc
inc
incl
cmp
sub
dec
aas
and
add
mov
lds
outsl
lds
dec
xlat
ss
test
mov
cmp
test
cmc
ljmp
pop
cmp
and
enter
jmp
xchg
test
out
andl
inc
adc
cmp
inc
in
add
rcr
leave
adc
jecxz
adc
or
insl
mov
inc
mov
jp
pop
inc
push
jg
xchg
adc
adc
adc
les
icebp
leave
clc
cli
mov
sub
sbb
adc
inc
push
dec
xor
pop
xchg
fdivr
inc
ret
inc
push
adc
or
pop
fisttpl
xchg
push
faddl
xor
out
stc
xor
push
inc
orb
dec
shll
hlt
mov
push
in
push
in
fisttpl
mov
pusha
inc
pop
fcoms
xor
mov
sbb
inc
and
mov
sub
popf
sbb
repz
jg
adc
jge
or
sub
mov
mov
add
dec
and
push
roll
outsl
or
xchg
inc
rol
loopne
fistpll
mov
test
imul
lret
jle
rcrb
call
aad
pop
jecxz
cmp
daa
cmp
and
jo
stos
cs
sub
inc
mov
add
sbb
pop
mov
push
jbe
pusha
push
jo
cmp
cmp
push
andps
sbbl
xor
and
sbb
scas
imull
adc
xorb
inc
insb
fistl
shl
adc
call
clc
and
faddp
xchg
fistpl
call
push
scas
shlb
sbb
scas
mov
loopne
xchg
fisttps
mov
and
insb
xchg
xchg
or
xchg
rorb
add
addb
stos
mov
push
cs
add
push
cs
addl
andb
mov
cmp
cmp
adc
sub
cmp
push
mov
test
mov
iret
inc
je
str
xchg
jnp
sub
dec
mov
shlb
dec
loopne
inc
mov
mov
in
mov
in
loope
xchg
or
push
sbb
jl
in
and
mov
pushf
pop
push
xor
cmpl
xchg
pop
loope
xchg
mov
mov
lret
push
into
jge
adc
push
out
mov
push
ljmp
or
into
fldenv
rcrl
or
pop
inc
pop
test
cmpl
cmp
movsb
in
sub
call
clc
lods
jge
fistpll
pop
stos
loopne
inc
push
sbb
ret
in
push
dec
push
sbb
cld
cs
push
dec
mov
sub
jo
mov
repnz
lahf
sub
shll
cwtl
jne
adc
decl
pusha
sub
sub
and
push
ret
push
mov
ja
or
add
push
in
adc
or
jp
sub
ds
iret
cmpsb
dec
out
fistpll
mov
gs
or
inc
arpl
push
push
cs
fwait
add
out
jnp
mov
inc
clc
inc
cli
or
mov
imull
cmp
fdiv
fadd
iret
and
dec
or
stc
add
push
or
push
pop
sub
lcall
sbb
or
mov
or
aaa
dec
inc
cwtl
insb
push
or
push
test
cwtl
dec
adc
or
and
or
stos
pop
push
dec
xor
lds
cmp
sbb
iret
loop
xchg
and
dec
out
imul
pusha
adc
jle
or
stos
sub
lea
jg
ret
cmp
rolb
dec
sbb
lods
and
add
adc
xor
add
mov
mov
cmpsb
jp
lods
inc
add
push
and
pop
xlat
mov
cmp
ljmp
mov
or
mov
jmp
dec
or
fstps
shlb
inc
mov
sti
das
call
outsb
sub
dec
fidivrl
test
into
xor
add
verr
lcall
push
jo
pop
mov
add
lahf
and
insb
add
add
daa
sub
js
inc
cmp
mov
mov
and
add
sub
push
ja
rcrl
loopne
push
fsubrs
imul
cltd
push
adc
xchg
or
xchg
jecxz
and
hlt
xor
out
sub
and
cwtl
push
mov
xor
scas
rolb
cmp
pop
push
xor
mov
push
dec
sahf
push
out
mov
dec
test
lret
cmp
rorl
inc
js
imul
clc
adc
loopne
or
inc
push
pop
jo
mov
adc
adc
xor
cmp
mov
cld
xchg
jae
mov
adcb
pop
lahf
push
nop
sub
fiaddl
push
or
shlb
loopne
or
repnz
pusha
loopne
xor
add
mov
sub
aam
aad
or
pop
xor
mov
cmpsl
movzbl
and
pushf
adc
and
jl
aam
out
mov
or
popf
push
push
sahf
jbe
out
notl
incl
call
add
add
inc
add
incl
or
adc
inc
je
popf
jmp
push
add
push
xchg
inc
mov
adcb
out
pusha
inc
sbbb
hlt
pop
and
jae
arpl
cmp
jmp
mov
roll
test
lret
mov
leave
sti
sarb
ret
into
lock
add
stc
stc
or
fbld
dec
arpl
pop
or
jbe
dec
mov
mov
pusha
or
andl
xor
push
in
dec
jo
and
and
icebp
sbb
repz
pop
adc
icebp
mov
add
into
lock
push
cld
push
insl
sbb
outsb
fmuls
fcoml
inc
xorb
push
faddl
lea
out
push
push
dec
rorb
dec
cmp
adc
push
sbb
inc
mov
sub
mov
dec
orb
psrad
adc
fadd
dec
push
sub
mov
add
inc
popf
adc
in
xor
fiadds
jbe
pop
sbbb
hlt
or
enter
mov
daa
lret
stos
mov
loope
rcrb
sub
outsb
adc
mov
ljmp
add
push
xchg
jg
mov
or
addr16
movsl
mov
in
pop
dec
sbb
sbb
jmp
repz
or
add
jb
add
xchg
addr16
mov
dec
cltd
fistps
lea
mov
or
fildll
jg
mov
add
cld
negb
adc
xchg
fimuls
inc
jns
es
popfw
mov
or
and
mov
scas
mov
sub
lods
pop
mov
sbb
or
add
jno
or
or
fs
ss
das
test
in
mov
xor
mov
es
cmc
adc
addb
ljmp
inc
or
cmp
xchg
xor
or
insb
xchg
aam
and
xchg
xor
leave
pop
or
jg
fstl
mov
adc
nop
or
lods
outsb
cmc
in
inc
jbe
and
jb
sti
notb
mov
jns
je
fsts
sbb
mov
sub
aas
add
not
and
sbb
and
xlat
cmpsb
adc
pop
stos
and
out
cli
jb
stos
xor
push
xor
pop
add
ljmp
ret
mov
lock
xlat
adc
lret
mov
jp
test
rclb
push
std
add
mov
mov
jg
pushl
dec
push
es
push
decl
push
push
or
jecxz
int3
dec
add
fwait
out
je
inc
mov
mov
insl
call
push
pop
xchg
add
dec
inc
add
das
push
mov
out
adc
call
fsts
jg
mov
data16
fnstsw
je
or
jb
cmp
jo
pop
std
mov
js
xor
enter
push
inc
cld
das
inc
or
sbb
out
iret
push
fsin
or
sub
stos
ret
and
or
mov
dec
test
hlt
pop
inc
or
and
pop
push
jp
in
cmp
xchg
mov
movsb
or
sbb
or
or
jne
outsl
ret
nop
cmp
mov
sbb
inc
ljmp
push
rep
in
or
jno
mov
inc
les
pop
shlb
out
inc
subl
xor
add
loopne
push
mov
sbb
jb
std
inc
add
add
xor
loop
fildll
inc
pop
dec
iret
bound
cmp
xlat
stos
mov
jg
enter
xor
fildl
and
iretw
inc
test
inc
sti
out
jl
sbb
in
std
in
fldl
movsl
sub
add
sub
pusha
outsl
add
jne
sti
das
push
std
lea
shll
sub
push
mov
cmp
adc
mov
jb
clc
mov
or
popf
rcll
mov
adc
lods
xor
and
stos
jo
cmp
mov
aaa
aad
insb
mov
push
or
and
adc
mov
mov
je
mov
mov
popa
mov
cmp
int
or
adc
push
and
ret
jns
dec
in
mov
mov
pop
pop
pop
test
fsts
cmpsb
xchg
nop
inc
data16
bound
and
imul
push
iret
xchg
add
dec
aam
in
roll
mov
push
lods
fildl
jecxz
jbe
sbb
mov
aam
push
pop
icebp
movsl
add
adc
jp
fstl
stos
leave
insl
pushl
decl
xchg
adc
add
push
or
movsb
daa
dec
hlt
xchg
mov
addr16
lods
imul
and
mov
sbb
adc
fimull
sub
xor
and
test
icebp
adc
scas
push
and
jle
push
or
jne
mov
enter
dec
lods
add
mov
xchg
jns
bound
jmp
mov
add
movsl
inc
shlb
inc
aad
and
sub
sub
sub
mov
and
mov
mov
ret
mov
jbe
dec
test
push
mov
xor
daa
mov
mov
add
xchg
jmp
mov
cs
add
cmp
movsl
ret
push
les
lea
and
leave
sbb
adc
lcall
inc
jl
outsl
xor
cmp
in
out
imul
add
outsb
sahf
in
imul
shrl
int3
mov
add
cmp
sub
clc
frstor
add
rolb
fstl
aam
not
or
sbb
xor
movsb
dec
inc
xor
in
adc
inc
test
and
lea
lahf
mov
add
push
inc
ud0
fwait
stos
xor
dec
add
insb
adc
inc
push
loope
adc
sub
push
loop
cmp
mov
sti
fdivrp
fsubp
rorl
into
push
cmp
es
cmp
or
xor
mov
mov
test
roll
mov
inc
js
push
xor
test
sub
pop
xlat
rclb
jmp
mov
pop
pop
inc
mov
je
add
out
push
xchg
jnp
outsl
int
addb
js
lcall
xor
push
in
test
or
jmp
and
bound
dec
mov
loope
cmp
jb
loope
pop
scas
adc
push
cs
mov
rclb
loop
xchg
xchg
mov
clc
stc
test
iret
jle
inc
and
and
inc
decb
fsubs
adc
sub
cli
cmpsb
std
jnp
jno
push
notb
pop
xchg
cli
xor
add
mov
or
xchg
sahf
pop
add
mov
outsb
pop
repz
dec
pop
mov
fs
loop
add
cs
fbstp
inc
adc
push
dec
add
cs
xor
dec
sub
cltd
mov
cmp
mov
shl
daa
and
cwtl
in
mov
add
mov
rcrl
int
push
sbb
sub
push
pop
xchg
lret
aas
xchg
pop
or
add
mov
and
insb
jg
xchg
or
mov
push
ljmp
cltd
pushf
dec
and
pushl
xor
lahf
daa
mov
sub
pop
addr16
sti
mov
pop
cmc
bound
or
test
jecxz
lea
push
push
add
hlt
dec
imul
pop
xor
jg
clc
adc
add
orb
call
and
or
sbb
outsb
mov
fmulp
xor
or
outsl
push
stos
cmp
mov
test
decl
outsb
shlb
adc
mov
xchg
dec
cmp
add
adc
gs
lcall
xchg
orb
scas
mov
inc
insb
popa
test
mov
icebp
xchg
out
loop
cmp
inc
rol
sub
jno
dec
and
lret
aaa
mov
jo
pop
add
inc
sub
lds
sub
das
in
inc
call
dec
mov
push
mov
sahf
je
mov
adc
and
cmp
push
dec
daa
aam
mov
les
and
push
cmp
mov
cs
dec
mov
leave
adc
and
scas
outsb
call
cmpsl
imul
mov
fcompl
enter
cs
sbb
and
sti
push
mov
out
push
and
cmp
dec
cli
sbb
inc
dec
inc
jmp
cmp
lock
icebp
mov
jnp
sbb
jne
inc
mov
clc
pop
jecxz
sub
inc
rol
into
stos
dec
inc
xor
hlt
xchg
stos
lcall
mov
roll
dec
fldl
shr
pop
sub
test
lcall
xor
cmp
or
je
adc
xor
mov
jbe
insl
and
clc
mov
mov
jne
insb
or
clc
cmp
push
pop
push
test
andb
push
and
je
idivl
inc
xchg
outsl
aas
add
dec
lret
orb
sub
jmp
mov
fcompl
mov
mov
or
mov
mov
pop
dec
cmp
pop
pop
aam
jne
or
jmp
out
roll
dec
out
inc
push
rolb
xlat
movsl
pop
int3
test
ja
lcall
pop
dec
cmc
hlt
inc
into
lahf
je
cli
jle
mov
push
xchg
aas
and
aad
inc
test
into
in
pop
ljmp
test
cs
in
cmp
in
outsl
cltd
pop
icebp
jge
jb
cmp
fistpl
pop
cmpsl
jg
inc
out
dec
cmp
push
sub
fcmovb
mov
dec
sbb
adc
cli
fwait
mov
ljmp
fiadds
jnp
subl
or
cmc
xchg
mov
or
lret
ljmp
jns
cmpsb
mov
je
add
and
fstpt
fwait
test
jae
xchg
xlat
ss
inc
mov
pop
mov
pop
inc
jbe
loopne
xchg
mov
push
loop
pop
cmp
stc
inc
ljmp
adc
clc
aaa
loope
shrb
repnz
fwait
pop
xor
mov
cmp
jns
fildll
and
call
push
adc
inc
push
dec
jns
daa
ret
sub
cmc
or
jbe
cmc
fnsave
mov
lea
cmpsl
push
sbb
pop
jp
add
xchg
dec
pushl
sub
int
pop
sub
fucomi
fwait
stos
pop
scas
mov
in
nop
sub
int
jp
cli
or
rcr
mov
in
mov
pop
cli
mov
jmp
pop
jp
inc
fidivs
lea
and
push
pop
dec
or
jmp
xchg
outsb
aam
ljmp
aam
and
hlt
sti
and
aam
pcmpeqw
dec
shll
sbb
xor
xchg
sub
adc
mov
mov
adc
loope
leave
push
push
rclb
mov
sub
mov
int3
aam
dec
inc
mov
inc
sahf
xchg
jne
mov
jno
add
adc
mov
pushf
or
add
int
inc
stc
movsb
cmp
inc
ja
xchg
jp
sarl
lds
rorb
inc
dec
mov
or
add
cmp
lock
xor
push
shrl
fidivs
lret
push
inc
dec
popa
adc
inc
mov
mov
inc
in
sub
fisubrs
sbb
jnp
mov
ds
nop
and
push
add
lds
xchg
or
jmp
inc
mov
cmp
xor
repnz
mov
or
and
aas
cmc
jne
rcr
push
je
lcall
in
in
or
adc
push
stc
and
push
cs
jae
push
scas
sub
leave
mov
mov
lcall
popf
inc
mov
and
inc
addr16
movsl
cld
or
lea
and
lcall
jo
push
pushl
nop
xor
and
inc
and
pop
fsubl
jmp
adc
xor
out
and
fimull
jmp
stos
sbb
pop
sub
test
insl
mov
pop
pop
pop
mov
pushf
inc
cmp
test
mov
sub
out
xor
mov
mov
sub
jl
ret
inc
sub
fcomi
sbb
sub
clc
add
popa
mov
int
mov
mov
cli
insl
movsb
pop
mov
in
rcrb
fists
and
fistpl
and
sub
arpl
add
sbb
insl
sbb
lret
mov
pop
dec
cmp
bound
call
mov
test
cld
push
dec
jne
outsl
mov
dec
mov
and
mov
out
sub
or
shll
out
repz
adc
daa
ljmp
fwait
test
test
mov
mov
xor
daa
rorl
pop
adc
loopne
cs
or
int
mov
call
sti
lret
xor
mov
mov
jnp
aam
cmpl
aas
sub
les
push
aam
cmpsb
push
lahf
cmovs
mov
cld
jne
shrb
mov
gs
push
fmul
lds
pop
push
shlb
mov
cmp
push
ljmp
mov
fbstp
scas
sub
sbb
and
xor
int
outsb
fstpt
movsl
inc
pop
arpl
add
fimull
pop
fsubp
cld
xchg
adc
into
inc
push
cmpsb
enter
mov
push
jge
leave
mov
in
dec
cld
or
mov
and
sbb
mov
jg
in
subl
jb
jmp
add
test
test
in
lea
push
add
dec
leave
xchg
js
mov
cmp
inc
cmp
mov
mov
inc
nop
addr16
pop
testl
lock
loopne
cmpb
leave
leave
mov
fistpll
pop
das
hlt
test
cmp
cmpsb
sbb
add
adc
cmp
std
push
js
sbb
cli
fistpl
addr16
dec
imul
insb
hlt
sbb
pop
adc
aaa
loop
mov
nop
data16
stos
inc
jge
outsl
outsl
leave
jl
mov
std
mov
jbe
cmp
add
stos
mov
jae
das
jg
xlat
in
ja
subb
pop
scas
adc
ja
dec
sub
push
sbb
xchg
je
or
adcb
and
inc
stos
mov
push
and
mov
fldenv
pop
push
fcomip
push
sbb
push
sbb
inc
mov
divb
mov
jg
fnstsw
test
jge
lret
aad
jecxz
into
dec
int3
sub
push
pop
or
jp
fisttps
cs
add
sar
cld
sub
jp
ljmp
mov
sti
insb
push
aas
pusha
popa
pop
mov
daa
popa
inc
mov
mov
fldenv
push
rcrb
lret
dec
adc
dec
dec
and
dec
push
and
push
shlb
ljmp
loope
add
xor
mov
adcb
mov
sub
pop
inc
dec
ljmp
add
into
inc
mov
add
mov
outsl
or
out
bound
pop
mov
sbb
dec
mov
xchg
cld
sub
in
push
and
stos
lds
je
fstps
and
out
test
jo
inc
adc
add
adc
mov
mov
cli
and
mov
stc
stos
sub
enter
jno
shl
dec
mov
sub
fbld
sti
in
cli
mov
pop
mov
ds
imul
stos
movsl
and
test
sub
jmp
pop
ret
test
xchg
mov
ret
adc
xor
les
mov
mov
fcmovnb
mov
fstpt
or
inc
xor
xchg
or
xor
xchg
and
jne
pop
hlt
lea
dec
jae
icebp
test
mov
push
jg
lcall
call
inc
icebp
call
mov
xchg
das
adc
call
sbb
sahf
mov
inc
push
mov
xor
or
arpl
and
shll
cmp
loopne
addl
sub
int3
or
push
mov
adc
jecxz
cwtl
shr
pop
insl
cld
pop
mov
fcmovbe
adc
push
mov
jno
cmc
add
mov
out
adc
shrb
daa
mov
mov
shrb
divps
mov
inc
xor
or
ret
rcr
shr
shlb
push
out
xchg
mov
int3
mov
jg
shll
in
lret
pop
and
or
xchg
faddp
rcll
mov
mov
loope
sbb
pop
shll
shlb
mov
movl
leave
mov
neg
addl
jle
mov
fmuls
out
add
pop
mov
lret
pop
js
loopne
sbb
adc
cmp
inc
and
cmc
mov
hlt
sbb
mov
add
test
sub
push
mov
je
inc
xchg
mov
dec
ret
xchg
stos
or
or
mov
mov
pusha
xchg
sarl
xchg
sbb
dec
scas
inc
jge
movsl
sbb
sti
outsl
xchg
jp
push
movsl
andl
adc
pop
sbb
leave
adcl
cld
push
cmpsb
push
push
inc
add
dec
adc
std
dec
lods
daa
dec
cwtl
sub
mov
iret
mov
cmpsb
test
ljmp
rcr
ret
cwtl
push
cltd
and
cmc
dec
sbb
mov
outsb
inc
mov
call
lock
insb
push
mov
or
cmpsb
mov
popl
push
ljmp
dec
sbb
popa
sub
sbb
push
and
subb
std
aaa
out
push
dec
loop
adc
scas
adc
sbbb
loope
jle
jp
mov
imul
cmp
testl
ret
iret
jge
inc
fsubrl
loope
xchg
mov
adc
mov
push
das
mov
xchg
sub
or
or
pop
imul
lock
mov
iret
sbb
stos
inc
pop
mov
jmp
xchg
lret
fcomip
adc
ret
pop
scas
and
push
dec
ljmp
cmpl
jmp
mov
lahf
xor
fs
js
xlat
dec
cmp
scas
inc
mov
loopw
repnz
popf
sub
repnz
cmp
test
dec
and
mov
push
inc
xchg
aad
aam
add
add
adc
add
adc
shlb
xor
inc
nop
sub
and
out
dec
xor
mov
ljmp
push
jo
cmp
cs
insl
es
push
or
add
xor
das
imull
mov
xor
mov
adc
mov
cmc
adc
lahf
fimuls
cmp
sbb
hlt
push
icebp
or
sbb
mov
bound
hlt
dec
popf
adc
adc
inc
cmpb
sarl
addr16
inc
jne
fldt
sti
inc
aaa
jl
scas
dec
jle
adc
mov
push
mov
sub
pop
lock
bound
cmpsl
bound
xchg
sti
and
push
call
pop
adc
mov
adc
xchg
and
inc
test
add
xor
pop
fsubs
inc
fdivs
es
mov
lcall
addr16
push
lret
mov
test
sbb
add
xor
std
ljmp
cwtl
add
inc
xchg
push
xchg
aaa
sbb
sbb
loopne
cmp
lds
cmp
push
clc
xchg
adc
sbb
js
xor
lea
add
idivb
jecxz
mov
adc
enter
pop
insb
inc
or
or
push
mov
mov
hlt
inc
mov
and
add
pinsrw
mov
sbbb
add
les
and
jbe
pop
pop
xor
mov
popf
xor
xchg
sub
fucomip
addr16
test
adc
pop
or
insl
rcll
dec
fdivl
adc
cld
push
lods
push
or
inc
inc
movsl
jmp
sbb
fdivr
add
xor
mov
sbb
and
jecxz
pop
push
adcb
push
push
loopne
jle
sbb
dec
pop
test
out
test
xchg
and
pop
int3
and
testl
adc
mov
in
mov
push
sub
loope
or
fcoms
out
adc
xor
js
add
inc
mov
add
push
loop
ret
dec
add
add
mov
insb
outsl
ljmp
rcrl
iret
lret
lods
add
mov
mov
push
andl
cmp
rclb
or
ret
jp
mov
adc
add
neg
inc
pcmpgtw
add
add
and
push
push
add
lock
std
sbb
or
push
inc
data16
add
shll
mov
iret
sbb
stos
and
or
dec
inc
and
fidivrl
lcall
jl
and
aas
add
insb
add
or
jmp
out
xlat
fbld
add
int
rcrl
ja
xor
cmpb
push
and
cli
push
sbbl
xchg
lahf
lods
push
jge
ret
inc
inc
mov
mov
xchg
sub
std
push
das
inc
stos
in
aaa
jle
lahf
int3
insb
imul
and
xor
icebp
push
jg
inc
mov
andl
popa
clc
enter
in
pusha
and
out
jnp
dec
mov
xchg
clc
adc
rcr
or
push
sub
mov
pop
or
lret
bsf
and
or
mov
mov
std
es
adc
test
jecxz
decl
out
sbb
push
or
sub
and
addr16
mov
leave
faddl
fbld
xchg
mov
cs
adc
pop
ja
jecxz
sahf
sub
fwait
cli
incl
add
and
in
jl
jns
fldt
cmp
arpl
mov
push
pop
in
inc
mov
mov
mov
dec
inc
and
xchg
roll
notb
mov
push
fsubrl
jb
cmp
adc
sahf
incl
add
jmp
in
dec
daa
shl
sub
push
or
std
xor
out
adc
and
rcll
jge
dec
rcll
or
cli
fadds
aas
jle
fcompl
decl
movsb
push
sbb
mov
mov
lock
push
inc
and
outsl
mov
arpl
dec
mov
dec
adc
xor
adc
inc
dec
lahf
jle
cmpsb
cmp
popa
das
inc
push
cltd
mov
les
inc
cmc
push
mov
add
outsl
jne
scas
dec
pop
jecxz
xchg
mov
xchg
push
inc
out
and
sar
lret
jo
rcrb
sub
jg
incb
int3
enter
fcmovnbe
popa
add
sbb
push
clc
mov
movsb
fidivrs
sti
insb
sbb
add
adc
pop
inc
mov
adc
iret
push
add
mov
dec
insl
jno
aas
push
out
mov
aaa
repnz
ss
push
dec
notb
test
push
sbb
push
or
push
xchg
inc
xor
aaa
fdivl
xor
fdivrs
dec
fcompl
push
or
cwtl
movsb
insb
shr
pop
fisttpl
scas
add
cmp
jo
int
das
insl
and
adcl
mov
and
jle
pop
add
fmuls
ljmp
push
scas
test
cwtl
push
sbb
mov
or
or
dec
sbb
ljmp
sbb
dec
or
cmpsb
jno
int3
pop
xchg
sbb
adc
aas
sub
push
push
mov
jecxz
ficoms
jne
cmpb
mov
outsb
xchg
mov
xor
rcrb
add
sbb
fisttps
push
xchg
sbb
cmp
xchg
xor
mov
aaa
ret
fisubrl
test
push
cmc
lea
lock
sbb
jge
cmp
out
sbb
or
sbb
lods
lock
lea
mov
inc
scas
mov
inc
loop
sub
repnz
lock
dec
scas
fisubs
out
nop
stc
jl
mov
add
clc
decl
push
xchg
push
mov
aad
add
add
inc
pop
pop
sub
ret
shrl
lret
int
jl
dec
call
xchg
pop
xchg
test
cmp
or
lock
mov
dec
inc
lods
jmp
movsl
imul
sub
xor
pop
nop
shr
mov
shlb
pusha
xchg
loop
mov
insb
ljmp
jbe
jl
stos
and
fdivs
mov
and
es
lods
and
popf
add
adc
push
outsl
push
outsb
mov
xchg
andl
fdiv
int3
pop
test
dec
daa
es
jnp
rclb
cs
and
sbb
xor
mov
es
inc
jno
xor
dec
loopne
rorb
inc
jb
call
sub
cltd
cmovge
mov
and
icebp
roll
rorb
pop
add
sbb
pop
push
fnstcw
or
sub
fsubrl
lock
and
test
mov
in
cmpb
sub
pop
jle
cmp
mov
push
popa
inc
pop
icebp
popa
inc
lock
lds
inc
pop
mov
lea
lcall
lock
xchg
mov
or
or
cmp
adc
fbld
test
mov
xor
or
fiaddl
jp
push
test
clc
adc
outsb
dec
xchg
test
mov
and
aam
mov
and
mov
inc
sbb
paddusb
pop
jl
loopne
cs
jl
sub
cmc
mov
cmpl
inc
adc
xchg
and
sub
adc
je
sahf
lock
adc
cwtl
hlt
jo
movsl
sub
cmp
lcall
stos
loope
mov
fiadds
cmc
filds
cmp
xlat
dec
addr16
addb
push
mov
js
stc
je
inc
and
stos
dec
stos
lock
sub
cmp
push
repz
push
pop
enter
dec
mov
jae
inc
xchg
pop
cmp
mov
jnp
sbb
adc
or
push
xchg
es
mov
dec
dec
mov
add
dec
xchg
or
fistl
lock
sub
hlt
push
push
dec
loopne
pop
pop
adc
and
into
ret
cmp
lret
pop
mov
cmpb
push
push
push
xor
mov
pop
repz
xor
cmc
xchg
dec
js
sub
xor
jbe
je
add
add
test
aam
sbb
mov
andl
mov
inc
sbb
xchg
mov
sbb
mov
xor
and
add
rcrl
pop
rolb
rolb
mov
mov
shll
std
rcrl
test
in
inc
adc
sbb
lock
mov
sbb
inc
lock
sbb
sub
sbb
add
jg
cmp
inc
dec
sub
inc
int
adc
add
sbbb
pop
and
cmpsl
xor
xor
lret
dec
mov
jnp
add
jb
mov
jecxz
push
xchg
in
xchg
fsts
testl
shrl
pop
sub
aas
xchg
lods
pop
or
and
stos
and
fidivs
aas
mov
push
adc
inc
mov
test
lahf
xchg
movsb
mov
fcoms
outsl
mov
ret
pop
clc
adc
cmp
sahf
add
and
sbb
mov
jecxz
mov
add
jge
jae
arpl
or
sub
popf
xor
out
push
xchg
imul
xor
adc
shrl
add
push
dec
sub
inc
repz
sbbb
jl
cmpsb
mov
in
lods
push
push
dec
push
or
aam
rcll
mov
loop
int3
in
push
and
and
xor
icebp
paddusb
xor
pusha
jle
das
popw
int3
push
push
repz
movl
xlat
in
imul
shlb
inc
inc
fists
xor
out
sbb
stos
mov
bound
fs
repnz
sub
or
ja
daa
mov
mov
add
sub
lret
xlat
add
or
sub
sub
push
movsl
pop
xchg
ss
cltd
sbb
cmp
or
inc
aam
and
rorl
daa
push
xchg
push
shlb
test
xchg
or
popa
ja
in
bound
inc
sbb
roll
stos
push
sbb
rclb
enter
adc
sbb
inc
push
or
push
adc
adc
or
ret
push
inc
loop
addb
insb
out
rcrb
add
int3
daa
jge
pop
mov
add
lods
add
mov
lock
out
or
mov
cmp
adc
int
ret
add
enter
add
dec
js
dec
pusha
les
repnz
shll
xor
arpl
sub
iret
xchg
or
adc
adc
adc
pop
loope
xchg
push
sub
sub
cs
mov
sbbb
scas
addb
and
push
pop
sub
xchg
push
push
sub
sbb
ja
push
aam
mov
inc
adc
mov
sarl
sbb
mov
test
push
loopne
sub
add
call
and
push
cmpb
int
or
ss
inc
pop
repnz
sar
popf
aam
fidivl
fisubs
stos
mov
cmp
in
movsl
inc
insb
mov
mov
shlb
adcl
or
daa
mov
adc
and
testl
and
xor
mov
mov
push
in
mov
cs
jns
mov
inc
xor
adc
popa
sbb
add
pusha
ja
bound
test
push
mov
insl
adc
or
xchg
shll
adc
sbb
dec
dec
pop
cmpsl
lods
jae
movl
sub
subb
call
cltd
data16
dec
push
pusha
xor
fidivl
negl
inc
imul
aad
mov
xchg
xor
mov
sub
push
xchg
clc
iret
xchg
test
jmp
push
pop
frstor
dec
rorl
mov
int3
mov
out
mov
xor
sbb
add
adc
sub
sbbb
ret
outsb
xchg
mov
push
cmp
decl
adc
sub
lahf
in
gs
popf
lcall
subb
fs
jns
sub
jle
pop
mov
mov
call
pop
test
add
jmp
add
cld
div
lcall
shlb
in
std
je
jns
nop
adc
xor
pop
add
mov
scas
lds
or
cmp
call
and
movsb
arpl
pop
xor
mov
adc
sub
mov
xor
loopne
xor
nop
jno
jecxz
ret
jg
clc
add
outsb
lcall
push
jb
gs
push
or
sbb
js
in
lock
sbb
icebp
xchg
mov
add
das
push
sbb
xor
push
bound
addb
and
mov
add
bound
or
gs
jge
add
ljmp
fisubrs
xor
jl
leave
and
push
push
and
cmpsb
mov
mov
bound
loopne
jmp
jmp
mov
bound
add
sbb
nop
jmp
pop
idiv
lss
cltd
cmp
xor
pop
xchg
push
adc
ja
fistps
sub
hlt
dec
push
mov
neg
mov
inc
mov
inc
mov
outsl
sub
outsb
xchg
shll
mov
adc
inc
xchg
xor
mov
jg
scas
mov
dec
movb
cmp
adc
mov
ljmp
les
repz
adc
scas
addl
nop
pop
adc
push
mov
adc
mov
add
out
ljmp
xor
aaa
add
or
test
fs
lds
test
sub
sub
call
push
xor
shlb
cmp
push
jg
cld
mov
movsl
push
dec
call
jae
imul
hlt
xchg
lahf
push
mov
add
inc
jo
dec
insl
mov
mov
inc
sbb
aas
cmp
rorb
push
loopne
lods
insl
cmpsl
es
sub
xor
push
fnstsw
mov
cmp
adc
cmp
outsb
jp
loope
popa
add
fildll
jmp
mov
mov
push
inc
icebp
movsb
movsb
dec
or
sub
cmpsb
les
jae
push
jnp
fsubs
mov
xchg
aam
mull
cs
fstpl
ds
icebp
mov
and
pop
xchg
addb
add
les
add
xchg
pop
jo
mov
add
ss
dec
xlat
add
into
mov
scas
loop
ret
xchg
mov
or
dec
cmp
mov
inc
mov
repnz
lcall
movsl
or
add
jl
insl
sbb
sarl
add
mov
lds
pop
inc
adc
enter
outsl
filds
cmp
add
mov
inc
icebp
test
not
and
lods
xor
sub
mov
mov
lret
in
rolb
jp
inc
outsl
jge
in
test
push
in
xchg
pop
xchg
adc
insl
xchg
andb
and
push
jg
jecxz
daa
or
push
loopne
cli
cmp
mov
and
jmp
sbb
push
sbb
adc
dec
dec
fldl
pop
pop
cmc
sbb
sub
cmc
mov
roll
pushl
ret
test
aas
test
or
fcomip
xor
imul
gs
lock
cwtl
inc
dec
dec
ds
pop
adc
cli
das
pop
sub
jnp
outsl
push
fldcw
mov
or
adc
mov
pop
adc
adc
or
and
shll
fdivrs
aam
pop
notl
adc
push
mov
or
loop
jle
das
fisubs
xchg
add
hlt
roll
cltd
dec
cwtl
lea
fwait
cld
sbb
jne
add
cltd
shrl
or
ret
rorb
push
jmp
and
inc
or
add
fadds
and
popw
inc
daa
xorb
inc
stos
cltd
in
jno
pop
int3
orb
notb
inc
rolb
cmc
mov
push
roll
mov
fstp
xor
pmaddwd
cmp
or
pop
mov
fdivrs
add
cli
lods
dec
jne
cltd
std
and
loop
jb
pop
and
rorl
xchg
addb
push
mov
repnz
loop
shrb
sahf
add
push
or
push
push
insb
mov
adc
test
test
or
inc
movsb
aam
sub
and
add
xchg
ljmp
adc
push
aad
dec
das
sbb
push
sub
jmp
and
push
dec
sub
jg
inc
popf
jnp
mov
fsubl
popf
pop
out
add
add
ljmp
cmp
ja
dec
push
adc
pop
pushf
cwtl
lea
popf
test
sbb
inc
dec
mov
lds
ljmp
outsl
das
cmp
fs
aas
imul
add
iret
cmp
inc
lods
mov
add
lea
movsl
aad
pusha
mov
enter
lea
jle
out
cmp
and
cmp
inc
fldenv
and
out
mov
jno
test
or
fdivr
adc
sub
mov
mov
andb
jmp
lcall
inc
adc
fimuls
das
shll
rorb
mov
dec
dec
mov
in
add
int
inc
int3
clc
xlat
shrl
dec
xchg
mov
pushf
clc
in
or
sub
push
push
cmp
mov
mov
mov
jno
fidivl
push
jge
ret
mov
ret
push
add
inc
cmp
mov
mov
xor
sbb
sub
fdiv
and
rcll
add
aas
js
enter
add
jg
or
sub
les
inc
shll
test
or
jle
add
rcr
cli
nop
dec
aaa
clc
adc
inc
in
jae
sbb
pop
filds
mov
xlat
sub
test
push
fs
and
push
in
pop
loop
and
inc
or
adc
and
loop
mov
push
inc
insl
sti
scas
pusha
test
mov
loopne
mov
cltd
mov
xchg
sub
cmp
xchg
popf
ds
xchg
mov
sbb
ret
fwait
mov
adc
push
fcoml
xor
and
adc
in
out
jno
xlat
pop
pop
decb
shlb
pop
mov
cmp
rclb
idivl
stos
adc
ret
jne
xor
shrb
pop
icebp
cmp
pop
or
xchg
mov
mov
and
sarb
xlat
bound
es
and
add
loopne
in
xor
sar
das
lret
xor
inc
cmpsl
inc
test
rolb
incb
pop
fdivr
mov
adc
adc
push
sbb
push
xchg
roll
rep
insl
cmp
loop
or
inc
es
dec
xchg
call
ficoml
pop
rorb
xchg
imul
mov
movsl
cli
and
inc
inc
mov
jo
cmp
push
mov
jp
pop
popf
dec
shrl
stos
les
xor
shll
pop
sub
add
pop
sbb
clc
jg
sub
jae
pop
into
xor
jo
imul
mov
pop
fdivr
inc
or
push
fldt
addb
and
add
lods
mov
xor
pop
nop
ljmp
mov
jecxz
aaa
ja
pop
adc
jmp
mov
popa
mov
jnp
jp
dec
inc
xor
xchg
xchg
dec
adc
jns
cmp
mov
xor
or
daa
int
lcall
mov
subl
daa
stos
lds
pushf
sbb
aam
arpl
mov
dec
out
bound
mov
jmp
int
add
jp
mov
int
and
shlb
stos
mov
icebp
dec
pop
cmp
andl
fdivrs
or
dec
mov
mov
xchg
sub
jle
xor
lods
pop
outsb
and
jnp
and
mov
cmp
mov
inc
jge
lds
push
incl
mov
outsl
ret
inc
inc
push
sub
sub
mov
loop
pop
jg
sbb
arpl
outsl
ret
xor
cmp
add
adc
pcmpgtd
adc
fstpl
dec
js
sub
sar
arpl
jae
or
jbe
idivl
int3
fidivs
imul
inc
out
push
pop
or
in
add
pop
sub
sub
inc
xchg
mov
dec
push
js
rorl
add
add
mov
jp
pop
pop
inc
and
pop
mov
scas
dec
sti
std
aam
cli
rclb
loope
imul
les
cmp
out
out
cmp
fwait
loopne
mov
call
mov
fisubl
xchg
mov
nop
mov
stos
xor
add
sbb
pop
sbb
gs
popf
pop
cmc
add
inc
xor
xor
aaa
sbb
dec
mov
and
or
inc
dec
popf
movsb
negl
sarl
loope
adcb
rclb
sub
fnstcw
adc
pop
into
adc
ds
jg
mov
push
mov
lock
lods
popl
and
jnp
inc
jno
test
adcb
mov
xor
out
scas
mov
lea
pop
adc
mov
inc
adc
adc
pop
jg
push
push
or
int
repz
mov
sbb
mov
cmc
sbb
shlb
or
add
mov
cmpl
popa
mov
cmpsb
dec
xlat
cmp
jnp
xor
repnz
inc
pop
lods
mov
aas
jo
jae
pop
pop
mov
hlt
rcr
mov
or
outsb
sub
cmp
push
cmp
jge
mov
aaa
in
inc
je
dec
adc
mov
mov
jge
or
xchg
mov
or
or
sbb
lods
dec
ss
and
sbb
stc
cmp
or
push
cmpsl
lds
stc
ljmp
movsb
inc
sbbb
outsl
add
cmpsl
or
add
add
enter
in
lods
push
addl
adc
aaa
icebp
pop
shrl
inc
das
adc
push
stos
test
and
jg
inc
xchg
xchg
ds
lods
xor
mov
mov
andl
insl
shlb
xchg
xor
push
or
cmc
lock
ss
mov
push
mov
xor
cld
inc
pop
shrb
sub
adc
fstpt
pop
sbb
inc
push
add
sbb
insl
pop
mov
xchg
fucomi
dec
insb
add
loopne
lret
pushf
test
dec
pushl
roll
pop
inc
mov
add
cmp
cmp
mov
scas
xor
add
mov
jg
inc
jl
test
jbe
sub
inc
insl
stos
inc
and
mov
mov
lods
jl
add
shrb
adc
push
push
cmp
push
dec
dec
cmp
or
dec
and
shlb
pop
stos
adc
adc
mov
or
movsb
fstpt
scas
fisubs
in
insl
negb
adcb
rolb
in
inc
push
jg
jg
xchg
add
xchg
sbb
repnz
pop
adc
xor
rcrl
or
cs
jge
adc
push
pop
mov
lcall
es
aad
add
es
clc
sbb
dec
fisttpl
js
je
das
pop
rorl
inc
mov
jb
cmp
ret
cmpsb
fstpl
inc
fistpll
xor
and
hlt
lock
cld
inc
test
or
stos
push
dec
cmp
addl
ss
bound
pop
clc
adc
and
and
clc
out
sub
mov
mov
outsl
popa
cmp
paddsw
and
pop
xchg
jle
dec
adc
add
in
sbb
pop
aaa
push
adc
cmc
mov
jl
mov
inc
mov
adc
push
cmp
pop
cltd
and
inc
les
sbb
cld
shll
sbb
outsl
aad
pusha
repz
notb
sbb
push
int3
cmp
xchg
call
add
push
mov
mov
push
roll
pop
jne
mov
insb
call
in
add
addb
out
xorl
sbb
mov
mov
jl
mov
cltd
dec
enter
sub
xor
cs
add
sub
adc
adc
gs
lods
cs
jg
inc
test
sahf
mov
testb
pushf
dec
sub
loope
mov
mov
dec
test
mov
jae
ss
lods
cmp
and
mov
mov
cmp
repnz
enter
aaa
shll
rclb
lret
or
jge
dec
xchg
iret
cwtl
ss
mov
loope
add
enter
and
andb
mov
in
mov
in
inc
sbb
inc
icebp
pop
mov
or
nop
rcrb
xlat
int3
stos
cmp
jl
test
sbb
lock
mov
mov
adc
das
int3
push
mov
add
mov
pop
mov
cwtl
sub
pop
mov
lcall
dec
jb
imul
mov
and
gs
jmp
lods
test
sub
push
and
in
pop
arpl
mov
je
mov
js
inc
movsl
dec
mov
mov
pop
dec
mov
das
cmp
aaa
add
and
push
test
adc
insl
cwtl
iret
pop
mov
daa
jg
in
popf
dec
cmp
mov
or
call
mov
aad
and
dec
roll
sbb
cmp
sub
xchg
adc
mov
pushl
xchg
int
mov
sub
sub
xor
mov
push
mov
das
fists
lds
xchg
lods
fcomip
dec
xor
outsl
jns
pushf
sub
mov
into
cwtl
add
das
fdivrl
sub
loop
mov
notb
xchg
ret
mov
cltd
adc
sti
jno
adc
cli
xor
movsb
or
sbb
mov
xor
add
outsl
rcll
jle
push
inc
test
cmp
cld
and
pop
mov
insb
cmpsl
xor
jb
stc
or
inc
arpl
test
or
xor
jecxz
mov
jle
or
inc
pop
gs
dec
dec
outsl
cld
sbb
cmp
sbb
test
inc
jmp
mov
push
in
mov
mov
pop
xchg
cmp
sub
sub
stos
or
and
and
stos
sbb
out
sub
mov
sbb
and
add
sbb
jmp
in
stos
mov
add
add
sbb
and
pop
jnp
xchg
inc
inc
test
pop
xchg
push
andb
push
and
push
aaa
cwtl
daa
adc
add
sub
ja
or
add
adc
mov
jle
xchg
pop
xor
imul
arpl
and
sarb
pop
or
sbb
push
dec
ror
mov
les
mov
mov
loope
or
adcb
insb
push
shll
mov
and
pop
push
mov
test
push
jo
push
iret
xchg
jae
cmpsl
test
and
cmpb
mov
or
loopne
in
adc
mov
fimuls
inc
add
cmp
movsb
cwtl
inc
push
insb
outsl
sbb
adc
iret
add
push
sub
inc
inc
lea
sbb
in
clc
jo
enter
dec
lock
mov
mov
push
movsb
js
jae
mov
cmp
add
les
mov
sub
sub
pop
fwait
rorb
jmp
jno
aaa
sbb
mov
sbb
inc
out
cwtl
xchg
jp
and
push
decb
push
lea
dec
add
decb
and
loope
push
sbb
sbb
sbb
fadd
mov
lock
adc
xlat
sub
flds
sub
loop
imul
sbb
push
dec
adc
mov
push
stos
mov
sbb
jmp
fsubrl
fwait
inc
outsb
pop
out
jp
icebp
movsl
mov
inc
mov
aam
out
mov
shll
inc
add
or
pop
inc
fistl
aaa
and
jb
rcrl
arpl
out
xlat
ds
sub
and
sub
sub
rolb
loop
inc
sti
xor
cmc
mov
int3
push
pusha
push
sub
fsubr
add
icebp
and
sub
testb
sbb
or
nop
js
addb
push
clc
repnz
out
xor
jns
mov
in
ret
inc
test
fs
inc
or
cmp
hlt
stos
xor
xchg
enter
es
lea
mov
not
and
aad
nop
jg
shlb
jge
lret
add
push
clc
jp
lock
loope
pop
adc
enter
cmp
add
addb
fcomps
arpl
data16
ret
dec
mov
test
dec
mov
push
xchg
bound
add
add
pop
cmpl
pop
stos
push
or
and
int3
push
pop
cltd
test
repz
je
sbb
cli
mov
int3
dec
add
push
outsl
push
in
add
aas
bound
stos
je
mov
mov
inc
rolb
jb
xor
inc
cmp
pop
shrl
cmp
cmpsl
mov
jbe
adc
lcall
mov
leave
jne
leave
pushl
dec
pushf
jl
das
insb
hlt
out
lods
adc
push
jne
xor
cld
sub
jmp
sbb
je
xor
cli
pop
xor
push
shufps
add
jbe
and
ret
and
or
add
jo
push
cmp
mov
enter
inc
mov
dec
inc
clc
inc
mov
push
adc
jo
push
sarl
adc
mov
xchg
adc
xor
inc
adc
cmpsb
adc
fnsave
rorb
push
jecxz
cmp
mov
inc
aaa
cmc
fnstsw
cld
dec
gs
fld
arpl
add
adc
inc
push
orb
mov
mov
seto
ret
and
push
out
push
pop
test
xchg
sti
fimuls
mov
sub
adc
inc
ljmp
arpl
sub
sahf
loopne
xchg
int3
and
dec
pop
adc
shrb
and
adc
xor
int
add
loopne
stos
repz
popf
and
rcrb
xchg
adc
sbb
inc
scas
xlat
sbb
out
pop
aam
or
push
jp
add
sbb
fistpl
popa
pop
and
jp
adc
or
test
fistps
mov
xor
or
cld
add
lods
mov
imul
pop
add
insb
notb
xor
push
repnz
arpl
add
sbb
insl
jmp
inc
jmp
loopne
scas
or
popa
js
pusha
fwait
movsb
imul
push
inc
pop
stos
push
lcall
or
cmpsl
sarl
adc
dec
push
mov
or
sbb
cli
leave
mov
pop
cmc
mov
pop
push
mov
pop
aad
mov
jp
ljmp
in
inc
pop
lock
add
stos
das
mov
adc
jo
leave
or
imulb
pop
andb
je
or
rclb
push
adc
fs
repnz
ret
xor
inc
mov
inc
mov
or
loop
jns
mov
lret
mov
inc
loopne
std
adcb
lcall
rcll
xor
into
in
dec
mov
adc
add
dec
add
sub
or
cld
out
mov
rolb
aas
pushf
mov
sarl
mov
inc
add
sbb
mov
cmp
pop
jb
in
loope
inc
and
roll
mov
inc
int
xchg
clc
inc
iret
nop
int
loopne
icebp
xor
jns
and
push
cmp
pop
jne
cmp
insb
das
fmull
or
push
add
or
mov
cltd
scas
js
jp
and
sti
repnz
adc
push
fs
lcall
jp
add
int3
push
sbb
and
add
out
sbb
push
add
sub
loop
arpl
dec
enter
dec
mov
xchg
cld
inc
sbb
pop
inc
pop
add
add
jl
clc
or
ret
mov
and
lret
jnp
lods
loop
lahf
xchg
adc
mov
addr16
jmp
xchg
mov
call
push
mov
adc
js
movsb
bound
enter
dec
into
aam
das
cmp
adc
in
sub
subl
cmp
rcr
adc
xor
inc
mov
add
dec
pop
adc
or
fildl
cmpb
mov
pop
or
xchg
lcall
cmp
call
or
xchg
or
test
addr16
ljmp
nop
inc
dec
xchg
adc
into
fsubl
ljmp
jmp
mov
fdivrl
push
test
cmp
and
les
sub
and
out
sub
mov
pop
addl
das
hlt
mov
test
ds
fcmove
push
adc
call
out
sbb
andb
pop
test
pop
mov
mov
vaddsubps
push
fs
push
sarl
add
push
cld
mov
pushw
sbb
lret
xchg
das
je
pop
push
xchg
mov
pop
das
hlt
lret
incl
gs
and
faddl
shrl
std
lea
mov
sbb
das
mov
xchg
cli
sbb
popa
mov
and
or
lock
jnp
mov
imul
dec
or
cmc
jge
in
inc
xchg
testl
sti
fildl
push
shlb
clc
dec
lods
push
jns
mov
mov
cmpsl
call
sbb
movsl
das
add
rolb
mov
mov
repnz
cli
cmp
fnsave
cmp
xchg
sub
and
mov
std
aad
call
mov
cmpl
jo
jb
xchg
dec
cmpsl
push
fs
sub
aam
test
dec
mov
sbb
sbb
mov
ret
and
enter
stos
les
clc
iret
pushl
cli
ljmp
je
add
and
and
hlt
cli
xchg
rdtsc
call
jmp
push
and
inc
mov
cmp
aas
pop
adc
subb
stos
scas
fcomi
add
data16
lods
inc
jno
push
nop
popa
mov
cmp
jno
rclb
faddl
mov
dec
aad
sub
insb
into
inc
outsb
adc
in
pop
por
adc
jns
daa
sub
pop
mov
push
pop
inc
scas
or
add
orl
sub
inc
and
mov
cmp
clc
les
in
fisubl
cmp
shrl
xor
xchg
add
inc
hlt
dec
dec
jne
dec
hlt
mov
sub
xchg
sub
or
cmp
stc
xchg
sbb
add
inc
inc
xor
xorl
adc
pop
inc
mov
xchg
inc
test
dec
ljmp
int
mov
fwait
add
out
cmc
outsb
add
int3
sbb
into
or
les
mov
addl
ja
in
mov
sub
addl
fadd
xchg
stos
or
int3
or
arpl
das
xchg
sbb
das
fs
add
and
fbstp
fidivl
and
sbb
clc
inc
hlt
inc
add
mov
xchg
lea
loopne
lods
loopne
lock
or
daa
cmp
mov
roll
inc
fistpll
es
xchg
js
dec
add
or
mov
shr
pop
sti
js
pop
mov
dec
inc
das
lahf
addr16
xchg
stos
jae
add
dec
mov
pop
loope
mov
mov
mov
sub
and
sub
mov
mov
dec
insb
cmp
cmp
lock
addl
dec
js
mov
pusha
push
jl
aam
xchg
and
mov
in
dec
loop
inc
fdivrs
pusha
popf
xchg
cmp
icebp
out
cs
out
mov
fcomps
test
js
arpl
push
add
mov
push
lock
adc
xchg
or
test
test
test
inc
add
add
sahf
insl
or
xchg
lea
fdivrs
and
adc
and
dec
inc
test
lret
adc
jl
sbb
pop
enter
pushf
and
inc
fisttpl
push
stos
mov
inc
and
adc
jecxz
cli
ret
stc
add
lahf
push
lahf
mov
fistpll
fmuls
mov
aad
dec
inc
pushl
mov
adc
rorl
and
push
jns
fdivr
into
sub
add
test
cli
scas
cmp
xchg
inc
sti
shlb
dec
jne
mov
data16
stc
sti
mov
js
add
call
inc
add
fs
push
sbb
fmuls
xor
or
mov
mov
cmp
fisubl
push
lcall
and
push
mov
lcall
ficoms
shl
pop
mov
sub
jmp
es
xor
scas
je
xchg
mov
push
dec
je
jne
cli
add
outsl
sub
lods
cmp
fiaddl
fiaddl
jp
push
out
push
mov
jg
pushf
and
pop
push
leave
xchg
ljmp
aam
leave
cmpsl
push
xchg
sbb
and
lahf
mov
leave
nop
add
and
or
add
std
lret
cmp
out
jp
xlat
sarl
adcb
aaa
shl
insl
mov
or
in
push
stos
jne
add
push
dec
adc
aaa
pop
lock
pop
lret
jge
or
or
pop
push
inc
call
and
adc
jmp
mov
fwait
push
je
pop
mov
add
je
and
mov
aas
in
ret
dec
and
cmpsl
scas
je
mov
imul
jg
aam
add
bound
mov
outsl
lock
dec
xorb
cmc
int3
fldl
mov
sub
jle
or
std
and
xchg
and
cmp
and
popf
and
stc
aas
mov
or
dec
mov
push
mov
add
dec
in
pop
int3
sub
xchg
aam
dec
call
mov
inc
pushf
insb
dec
fdivl
lock
aad
lret
sbb
pop
mov
add
outsl
inc
push
push
out
aaa
inc
mov
movsl
dec
pop
scas
inc
popa
int3
add
sbb
fstpt
adc
out
bound
push
std
mov
icebp
or
or
cs
mov
mov
jmp
mov
rol
add
shrb
ss
push
jne
faddl
leave
mov
adc
or
mov
add
cmp
js
mov
lock
dec
hlt
outsl
repz
popf
sub
out
ja
cwtl
ret
mov
mov
inc
fwait
into
out
ret
add
xor
jge
cmp
lcall
mov
popa
push
fsubs
pop
lock
cmp
in
scas
xchg
adc
sbb
pop
xor
das
ljmp
pushl
add
inc
or
adc
ja
and
add
fisttpl
cmc
aaa
adc
xlat
out
in
int
roll
outsl
in
cmpsl
in
mov
adc
xchg
adc
ljmp
xor
mov
sub
lret
or
imul
or
push
sbb
pop
inc
mov
into
adc
pop
mov
in
sarb
es
cmp
dec
jmp
cld
pop
mov
mov
data16
gs
adc
inc
xor
cmp
jecxz
add
daa
cmp
pop
loopne
sub
sub
sti
sbb
or
adc
sub
inc
jb
mov
mov
or
mov
push
push
jg
les
cmp
inc
loopne
add
lods
ds
xor
fs
jno
adc
push
jl
cmp
movsl
fcmovnbe
push
push
add
jns
or
mov
mov
test
test
xor
mov
adc
or
or
test
xchg
cmp
shlb
fwait
mov
lock
rolb
mov
inc
popa
daa
mov
into
or
pop
sarb
mov
gs
add
or
lods
pop
daa
cld
sbb
insb
add
cltd
add
cmp
add
ja
dec
adc
push
rorl
sbb
add
popa
lock
push
cmp
dec
dec
dec
int
add
add
fucomi
cmp
add
cltd
add
dec
mov
outsl
pop
pop
rclb
push
test
mov
aaa
cmp
sbb
rcll
xor
mov
lcall
pop
push
lock
add
pushf
adc
stos
in
or
mov
test
loopne
xchg
dec
rorb
cmc
and
xchg
pusha
xchg
test
or
shrl
loopne
mov
xchg
rorb
in
push
xchg
cmp
pop
push
sbb
aad
in
xchg
shll
xor
mov
adc
inc
xor
das
mov
outsb
xor
sub
sub
ret
push
push
mov
dec
xor
test
inc
cwtl
adc
loope
mov
test
or
push
roll
in
inc
shrb
push
lock
stos
and
xlat
iret
cmp
mov
loopne
mov
xchg
push
aam
push
xor
and
push
and
add
sub
inc
cmp
rorb
in
insb
mov
js
iret
push
iret
adc
decl
xor
xchg
rorb
sub
repz
call
addr16
cwtl
test
or
mov
pop
or
pop
jmp
scas
jecxz
push
pop
out
outsl
mov
sbb
pop
icebp
lret
xchg
outsl
loopne
pop
hlt
repnz
out
rcrb
insw
sahf
pusha
test
add
pop
mov
mov
lods
hlt
daa
pop
jecxz
cmp
cmp
popa
inc
popf
clc
or
lds
call
lods
dec
cmpsb
inc
fistpl
or
aad
inc
pop
stos
les
pop
mov
sbb
xor
loop
mov
or
enter
mov
xor
sbb
arpl
inc
iret
xchg
jmp
mov
pop
mov
stos
sub
mov
lods
or
jl
lret
xchg
pop
leave
shll
mov
mov
orl
clc
push
in
cmp
cmp
and
or
pop
adc
imul
repz
fmul
iret
loopne
mov
pcmpeqb
sub
mov
cwtl
jo
xor
paddsw
ret
dec
mov
add
dec
ret
mov
lods
call
jge
fisttpll
ret
mov
mov
sbb
jl
pushf
pop
xchg
mov
aaa
cld
fcomip
jmp
xor
push
push
clc
leave
cwtl
inc
test
sbb
aam
adc
popa
jle
rcll
push
jne
push
mov
cmc
lods
rcrb
jecxz
fdivrp
and
and
xchg
jg
xor
xchg
or
cld
es
mov
jmp
fmuls
mov
std
and
xor
adc
in
adc
adc
dec
cmp
movsb
pop
pop
and
jecxz
and
roll
jo
ret
inc
test
das
or
mov
lock
pop
movsb
out
testb
insb
leave
mov
dec
push
sbb
push
loop
movsl
out
or
inc
adc
add
popf
jl
mov
push
insl
cs
inc
pop
cmpsb
pop
xor
xor
mov
mov
icebp
cmp
xor
mov
push
pop
repz
std
pushf
scas
leave
test
sub
or
cli
rcr
decb
mov
sahf
or
xchg
adc
xchg
lcall
lock
adc
sahf
mov
dec
cmp
imul
inc
mov
sub
leave
rcr
stc
push
shl
movb
push
adc
sub
xchg
cmp
add
inc
and
popf
dec
lock
rolb
repnz
cld
sub
push
paddd
sub
dec
sbb
das
mov
jb
in
sti
push
cmc
inc
mov
scas
push
aad
ja
mov
sub
xor
sbb
add
push
and
and
jmp
test
lea
mov
push
shl
mov
dec
pop
adc
add
sub
mov
rolb
push
aad
addr16
inc
leave
test
movsb
add
dec
sbb
xlat
push
das
sub
jno
mov
inc
hlt
push
lea
push
mov
push
fsts
jl
jns
or
icebp
clc
sub
test
jle
xchg
add
cli
push
xchg
add
xor
stos
mov
mov
inc
adc
repnz
or
and
add
pop
iret
call
add
stos
daa
push
fiadds
int
adcb
sbb
add
and
in
test
addr16
adc
es
push
fistl
xor
or
mov
and
cmp
dec
mov
mov
fdivp
int3
and
sub
inc
in
jmp
xor
inc
in
leave
jns,pt
es
push
shlb
add
inc
pop
xchg
push
add
adc
pop
or
roll
roll
mov
mov
mov
mov
frndint
sbb
or
shlb
sub
lret
push
aam
and
xor
sbb
pop
push
lcall
les
xchg
aad
push
xor
pop
sub
jb
mov
sbb
stos
sbb
ja
push
hlt
jmp
mov
mov
icebp
test
rolb
ret
or
ret
jecxz
lods
shl
mov
and
fcmovbe
imul
and
sub
nop
mov
mov
mov
mov
and
clc
cld
lods
or
or
fdivs
in
push
and
stos
xchg
icebp
adc
sahf
add
cmp
sbb
popa
push
jl
jl
xchg
popf
idivl
xchg
sub
and
xchg
fsubs
in
xor
inc
imul
mov
fbstp
or
sub
fisubl
test
adcb
xlat
std
and
out
mov
sub
add
dec
ret
pop
fdivs
jne
inc
xor
repnz
in
aam
mov
jb
adc
mov
add
adc
pop
shl
pop
add
ret
in
mov
add
add
in
cmp
or
cmp
inc
stos
sbb
push
or
dec
or
pop
popa
adc
lods
cmp
mov
sahf
add
filds
mov
inc
and
sub
mov
ret
clc
out
pop
mov
xchg
int
xchg
inc
xor
enter
add
cs
xchg
pop
jne
aad
mov
pop
fsubr
lock
movb
fidivs
mov
mov
in
inc
lret
out
pop
orl
or
addb
aad
inc
and
mov
adc
cmpsl
movsb
xbegin
push
cs
fnstcw
mov
leave
je
pop
adc
xor
call
lret
xor
push
shrb
roll
lds
shll
push
jg
add
adc
mov
dec
ss
push
xchg
or
push
fildll
and
inc
xchg
jle
daa
decl
mov
fbstp
dec
or
or
cmp
ljmp
sbb
ficoms
cld
ljmp
aas
jl
push
incl
outsl
ret
push
push
mov
cmpsl
data16
aas
lret
mov
inc
or
imul
xchg
jle
push
xor
push
std
cmp
pop
xor
cwtl
sub
dec
pop
mov
or
dec
dec
in
pop
adc
outsl
jg
dec
xchg
fcoms
xchg
jp
or
test
cmpsl
pusha
or
imul
add
aaa
cli
incl
cmc
jecxz
ss
adc
cmp
push
fwait
incl
mov
add
into
and
jno
add
inc
popf
pop
inc
repnz
xchg
lcall
std
rolb
sbb
scas
cmp
mov
rcll
lods
movsb
push
mov
fldt
mov
push
sub
in
xorl
orl
dec
xor
js
push
das
call
mov
mov
loop
push
flds
xor
test
adc
xor
push
test
add
add
mov
inc
pop
pop
icebp
jle
bound
xor
je
mov
inc
clc
pop
push
aad
fldt
lods
mov
fbld
adc
bound
dec
jmp
lcall
dec
into
cmp
jne
scas
push
rorb
clc
out
dec
inc
mov
or
fbstp
pop
and
jg
pop
or
inc
cld
sahf
push
add
in
pushl
add
mov
or
aad
mov
mov
stc
jp
add
sub
and
pop
les
push
scas
add
adc
inc
inc
dec
jne
sub
ds
push
ja
cld
jmp
nop
aad
lods
xlat
mov
pop
jmp
movsl
dec
add
push
mov
das
add
xor
jb
outsl
aam
xor
xchg
jmp
or
sub
push
cmpsl
stos
mov
push
pop
sbb
test
cs
out
mov
imul
bound
fstps
xor
xor
repz
adc
fistpll
incl
pop
mov
es
in
mov
in
lock
add
fsubs
inc
je
jns
imul
lahf
fsubl
into
bound
movl
pop
gs
and
or
adc
mov
cmp
orl
xor
scas
imul
adc
cmc
mov
jg
pop
fiadds
jae
loopne
mov
test
cmovne
inc
pop
dec
roll
mov
pop
roll
inc
mov
and
mov
pop
add
mov
aad
loope
sbbb
out
xchg
cs
sbb
xlat
pop
adc
add
dec
stos
mov
xchg
adc
stos
popa
das
mov
dec
test
incl
push
outsl
call
inc
add
aad
or
in
popl
mov
das
outsl
loop
add
fwait
add
std
push
ret
xchg
dec
sbb
mov
mov
mov
cld
jo
pop
daa
mov
outsl
jg
mov
jl
arpl
push
inc
sub
mov
and
jb
xor
imul
or
rclb
dec
dec
mov
and
orb
fnstsw
add
arpl
sub
jecxz
mov
jne
and
pop
inc
add
jno
int3
pop
add
or
xchg
pop
ret
adc
or
fs
int3
xchg
or
int3
and
pop
in
sbb
add
lahf
mov
mov
sbb
push
inc
jnp
or
adc
add
mov
add
inc
xor
outsl
mov
dec
fdivs
insl
lock
scas
and
adc
outsl
hlt
xchg
stos
jns
cli
sub
jl
sbb
mov
sub
repnz
aas
adc
or
xchg
push
inc
xorb
mov
ret
mov
jl
dec
sbb
inc
mov
stos
and
adc
movsb
sbb
pushf
cli
pusha
aas
call
andb
pushf
stos
iret
xor
add
sarb
out
and
mov
rcl
or
add
mov
rorl
fnsave
xchg
mov
cmp
sbb
jo
jae
int
cmp
mov
push
push
push
inc
or
addb
pop
std
testb
fs
mov
lret
addb
sbb
add
lret
sub
stos
leave
and
mov
add
xchg
push
push
inc
stos
cmpsb
cld
xor
data16
test
jnp
add
mov
adc
js
mov
and
daa
inc
or
adc
add
insb
inc
cmp
fdivrl
cli
in
aas
mov
out
mul
out
test
mov
add
nop
mov
xor
lcall
or
mov
ljmp
inc
xor
inc
and
mov
xchg
lcall
adc
xchg
xor
ret
sbb
mov
stos
popa
adc
rolb
mov
fimuls
sub
lea
xchg
jmp
add
push
jnp
frstor
enter
xchg
dec
sub
outsl
addr16
or
and
sub
push
scas
add
xchg
mov
jmp
adc
and
sbb
rcrb
fimull
call
fwait
aas
fldt
xor
add
and
jge
xchg
cmpb
imul
adc
out
or
sub
sbbl
xlat
mov
add
inc
addr16
lods
arpl
shlb
inc
shll
or
ljmp
or
sti
fs
ja
les
mov
test
inc
inc
shll
aam
mov
pop
push
cld
es
jns
jmp
and
mov
adc
jmp
cmp
loop
or
add
call
mov
pop
xorb
cmp
movl
inc
lea
xchg
mov
mov
add
add
in
add
jne
mov
add
push
test
into
xor
and
clc
mov
out
outsb
inc
pop
aad
pop
fisubrs
ficomps
je
fildl
orl
in
jb
ret
push
or
fwait
adc
out
scas
aas
aaa
int
aad
sub
mov
or
mov
movsl
add
dec
mov
lret
sbb
dec
inc
cli
sarl
repnz
add
pusha
jge
jae
or
rcr
pop
cmpl
mov
add
push
sarb
iret
push
cwtl
in
mov
repz
sar
aad
add
inc
push
out
shlb
lods
ret
sbb
rcll
and
or
sub
cmpsl
imul
mov
add
enter
mov
data16
mov
adcb
dec
lea
or
enter
add
repz
add
jne
mov
pop
fwait
adc
enter
adc
inc
into
mov
loopne
dec
pop
sub
repz
mov
push
loopne
inc
push
leave
lock
cmp
fmul
push
jo
cld
push
push
adc
insb
shlb
and
ss
and
push
leave
and
push
pop
push
das
sbb
mov
push
sbb
dec
pusha
add
outsb
pushf
scas
and
or
in
cmp
enter
sarb
insb
outsb
mov
sbb
mov
adc
inc
fists
push
xchg
pop
cmp
sbb
inc
decl
cwtl
add
mov
add
fadds
add
incl
cli
pop
mov
dec
rclb
mov
cmp
sti
fnstcw
inc
sub
mov
or
fs
xchg
loope
jmp
mov
jl
push
add
and
jne
ret
outsl
adc
in
or
js
adc
mov
jne
sub
lods
stos
add
and
dec
lret
pop
mov
xchg
dec
dec
js
mov
and
xchg
cmp
push
dec
stc
stos
inc
xor
sbb
jecxz
mov
or
loop
lock
stc
stc
dec
pop
cmpsb
pop
popa
pop
in
mov
inc
sahf
add
pop
mulb
add
std
jmp
daa
fildll
test
repz
mov
test
sbb
jmp
add
mov
xor
loop
dec
test
mov
dec
cmp
orl
xlat
cs
out
movb
mov
or
sbb
shl
ret
inc
ret
fists
cs
std
test
cmc
pop
mov
test
dec
push
xlat
fsubrl
test
mov
lods
add
cltd
sub
mov
in
push
lods
incb
out
lods
pop
negb
and
jmp
call
adc
cmp
add
push
lods
mov
call
cli
mov
paddusb
movsl
or
jg
sbb
adc
fcomp
movsb
lock
clc
fwait
and
shl
aaa
push
xor
and
shrb
insb
adc
add
pop
popa
loop
push
adc
add
insb
inc
xchg
xor
test
loopne
repz
cmp
test
cld
lock
cli
push
push
cwtl
mov
insl
mov
sbb
dec
dec
fcmovb
cmp
mov
adc
mov
cs
push
les
xchg
add
add
js
clc
add
inc
cwtl
sahf
insb
in
shrl
sbbb
fisubrs
xor
mov
adc
add
sbb
stc
adc
dec
push
les
int3
cli
adc
pop
insl
daa
sbbl
jnp
or
insb
cmc
or
fnsave
ficoml
inc
pop
cld
shll
mov
sbb
or
sbb
xlat
and
adc
mov
and
faddl
addr16
faddl
lcall
adc
sub
sbb
and
test
sub
jle
dec
xchg
stos
add
sbb
xor
es
fadd
push
adc
add
sub
mov
sub
or
out
and
fwait
pop
call
shll
adc
add
rcll
mov
inc
xor
add
add
arpl
jmp
and
and
lds
mov
sub
dec
mov
push
dec
and
xchg
popf
mov
mov
les
mov
xchg
pop
daa
adc
sbb
cli
es
and
jno
xor
clc
rolb
shrl
pushf
sar
rcrb
cmp
push
xchg
daa
push
xchg
add
sbb
jmp
rcll
dec
js
fmuls
add
inc
pop
add
or
sub
push
xorl
test
scas
add
jne
dec
sarb
mov
addr16
xchg
lcall
in
cwtl
jmp
std
ss
dec
or
into
ss
test
jbe
js
scas
mov
mov
rolb
sbb
or
arpl
pusha
notl
aad
and
push
test
jne
sti
repnz
scas
mov
push
inc
fsubr
xor
lds
das
add
and
and
jo
push
push
mov
or
cmp
orb
add
jne
add
pop
lods
pop
inc
jp
addr16
push
dec
xor
andb
das
sbbl
xlat
iret
enter
and
jp
inc
xchg
sub
pop
mov
les
push
mov
fnsetpm(287
sub
adc
push
jecxz
pusha
testl
jb
mov
push
out
in
cmp
loopne
aas
pushf
or
fcmovnb
push
filds
push
fwait
adc
jecxz
movsb
add
sub
add
sar
sub
out
add
mov
inc
mov
popf
mov
ljmp
mov
nop
push
aas
cwtl
sub
std
mov
in
sbb
shlb
pop
sbb
sub
push
mov
add
popa
dec
inc
add
mov
xor
dec
sbb
jecxz
cmp
mov
dec
sub
sti
outsl
int3
adc
into
jae
adc
or
sub
lock
cmpsb
add
xchg
mov
pop
xor
out
adc
lods
cmc
repnz
sub
push
mov
fidivrl
jo
push
negl
and
push
mov
sbb
sub
js
mov
nop
mov
add
cs
arpl
xor
mov
outsl
add
add
sub
sbb
test
cmp
mov
and
mov
jmp
adc
mov
push
loope
push
pop
les
xchg
jecxz
test
in
sbb
inc
add
sub
orb
xor
into
sub
cmp
loopne
in
inc
sub
lods
fisubrl
sbb
test
xor
in
dec
add
fiadds
xchg
fcomp
mov
scas
push
enter
arpl
es
push
fiaddl
int
fnstenv
mov
dec
xchg
fs
or
add
adc
push
clc
inc
cld
pop
mov
popf
sbb
cmp
outsb
out
add
imul
es
mov
jecxz
add
loope
inc
sbb
mov
jno
stos
cmp
cmp
jl
pushf
inc
cs
mov
xchg
ret
cld
push
mov
insl
adc
or
pop
push
jnp
inc
mov
inc
and
enter
stos
test
mov
add
lcall
xchg
rorl
aas
jle
inc
mov
and
cmc
push
jne
or
stos
pop
push
test
dec
out
fdivrl
ret
jo
or
jb
sbb
add
add
dec
add
adc
inc
faddp
xchg
js
adc
mov
sbb
imul
aaa
mov
loop
outsl
stos
adc
mov
xchg
inc
sbb
ds
and
inc
sub
jo
inc
inc
or
sub
out
rcrb
shr
xor
jge
fs
adc
sbb
ret
add
mov
fs
mov
jne
add
adc
mov
sbb
or
cmp
and
mov
imul
jbe
popf
push
inc
jg
and
lcall
add
pop
aas
jo
in
sbbl
mov
add
push
xor
xor
out
daa
fadd
mov
inc
cmp
inc
jp
xor
cli
adc
ds
int
pop
add
popf
push
or
push
out
pop
or
sbb
out
inc
repz
orb
std
xchg
add
out
fisubrl
test
jne
jp
mov
or
fwait
call
or
icebp
mov
testl
or
rorb
test
pop
sub
xchg
adcl
js
fstp
xchg
aas
test
mov
leave
jge
outsb
js
push
add
xchg
sbb
jns
xchg
test
pop
je
lcall
pop
aam
dec
cmp
mov
xchg
cld
lret
add
jle
xor
pop
jp
mov
add
insb
rorb
push
inc
insb
push
xor
mov
daa
xor
into
add
xlat
lds
cmpsl
loopne
inc
add
scas
pop
mov
or
xor
xchg
cmp
xor
jo
inc
jo
push
jmp
or
cs
sbb
cmpsl
jle
dec
cmp
cld
insb
subl
add
dec
fidivl
xchg
xor
dec
xchg
push
stos
cmc
inc
aam
imul
jmp
lock
add
mov
lea
push
push
pop
lds
mov
mov
test
pop
das
out
jg
push
inc
mov
pushf
outsl
fistpl
inc
pop
adc
inc
dec
cmp
clc
add
stc
sub
dec
shll
or
shrl
adc
dec
fstpl
xor
mov
inc
add
mov
lret
inc
fcmovu
cli
int3
sbb
adc
mov
ja
mov
data16
or
dec
sbb
and
and
mov
push
addr16
sub
cmp
idiv
jmp
jmp
cmp
jne
call
scas
out
jg
shlb
and
and
sbb
push
movsl
ds
inc
int3
xor
xor
fiaddl
pop
add
aam
sahf
decl
idiv
jb
cmc
pop
jecxz
mov
test
loopne
jne
sub
cmp
pop
orl
sbb
xchg
and
xor
add
xor
in
push
aas
stos
cmp
jae
js
fsubrl
shr
xor
push
mov
mov
data16
lea
sub
clc
add
xchg
mov
cmp
mov
stc
xchg
filds
push
mov
pop
xchg
mov
add
jmp
push
and
lret
andl
int3
js
in
sbb
pop
hlt
pushf
cltd
sub
rolb
fs
sbb
cmp
shll
shlb
loop
ret
mov
addl
int3
aad
loopne
jns
cmp
ja
lahf
rcr
push
add
inc
and
xchg
adc
out
dec
mov
inc
es
and
dec
sbb
lahf
mov
cmp
jae
mov
rcrb
int3
daa
xor
xor
cld
sbb
rcll
adc
stos
sbb
fcmove
jo
xchg
sub
es
psubusw
add
ret
or
xor
dec
add
adc
lret
ja
repnz
pusha
lcall
add
xchg
mov
les
js
push
fistl
mov
hlt
mov
test
jne
mov
xchg
mov
enter
or
loopne,pn
adc
aam
jp
js
sub
stc
sahf
pop
lock
into
adc
add
clc
pop
divb
and
je
sbb
or
jg
jmp
or
add
mov
xor
lret
push
or
mov
out
ljmp
les
xor
add
test
icebp
or
pop
xor
lods
xor
test
je
dec
mov
lds
ret
add
lahf
inc
or
or
cmp
pop
sbb
jp
xor
adc
push
cmp
inc
pop
arpl
fstpt
xor
dec
hlt
test
xor
mov
rcrb
and
or
or
loop
or
ja
lahf
sbb
adc
shl
push
fisttps
add
outsl
aaa
test
out
sahf
mov
push
sbb
and
adc
scas
fnstcw
shlb
add
loopne
jo
add
je
lods
mov
sahf
int3
push
mov
jmp
add
mov
cmpsb
cmp
sub
xor
add
int3
pop
dec
int3
or
jne
sbb
insl
shrl
int3
data16
xchg
loopne
imul
and
and
test
sbb
lcall
and
aaa
dec
or
into
jge
jns
js
push
ss
rclb
rorl
pop
cmp
pusha
and
insl
insb
mov
inc
push
adc
pop
add
ret
rorb
adc
enter
ret
xor
repnz
enter
cmpb
loop
jne
dec
imul
xor
jnp
xchg
cmp
xchg
sub
clc
or
xchg
rsqrtps
and
pop
hlt
stos
xor
pop
inc
cmp
add
stos
push
into
shrl
fwait
pushf
addr16
add
pop
arpl
sahf
xchg
icebp
mov
adc
jne
leave
inc
lods
mov
mov
xchg
out
xor
push
repnz
int3
ret
jnp
shl
push
stos
aaa
in
dec
jl
mov
dec
pop
adc
shll
ret
cmc
mov
add
popa
in
sub
mov
shl
cmc
or
shl
inc
ja
lea
cmp
fisttpl
and
sbbb
test
scas
lea
lock
rcll
push
mov
xor
lret
jno
cmp
inc
aam
mov
loope
test
out
or
fsubrp
into
setnp
sbbb
jno
push
lock
lods
cmp
xchg
aad
add
add
aas
test
cmpb
xlat
push
add
aaa
into
dec
push
cmp
lock
push
cmc
fsubrs
and
pop
mov
cmp
sti
xor
push
and
push
sti
es
out
les
mov
jge
popa
ds
inc
and
aam
sbb
jmp
mov
adc
cmpsl
sbb
adc
cmp
pop
xor
nop
xor
stc
jne
sub
leave
add
test
mov
inc
add
nop
pop
.byte
and
.byte
lcall
push
ret
jbe
mov
mov
xor
filds
pop
pop
pop
ret
orb
ror
adc
neg
mov
pop
ret
and
sbb
mov
sti
mov
ret
inc
sub
and
add
jg
mov
sbb
test
and
call
and
adc
fwait
jge
std
and
and
and
sub
pcmpeqd
and
test
or
jno
insl
sbb
cmp
ss
in
pusha
in
jbe
mov
add
adc
mov
insl
sbb
sub
decb
pop
adc
rcr
and
pop
add
and
mov
in
inc
inc
subb
andb
inc
and
adc
pop
sub
xor
mov
or
cltd
pandn
adc
sub
pop
call
mov
or
add
sbb
orb
psubq
and
imul
push
mov
push
and
or
mov
cmp
sub
cwtl
dec
and
xchg
imul
mov
subb
sbb
or
imul
in
adc
or
adc
cmp
lret
xchg
add
lcall
mov
in
cmpl
add
aad
pop
icebp
lods
inc
add
add
movsl
lret
mov
add
or
hlt
xor
lds
mov
std
idiv
addl
xchg
xchg
shll
movsb
imul
cmovp
pushl
ret
add
lret
xchg
and
out
test
das
fistpll
mov
cmp
outsl
fldt
add
les
or
adc
or
aad
mov
cmpsb
insl
sti
mov
mov
add
xchg
xor
pop
fisttpl
adc
stos
addb
xchg
add
jle
jg
add
movl
add
mov
add
mov
movsb
xor
add
and
in
rcll
adc
mov
int3
add
je
movsl
add
mov
or
insl
jnp
in
movsl
mov
mov
mov
lahf
push
mov
sar
fisttpl
add
push
test
into
pushf
ljmp
cltd
add
pop
sbb
idiv
mov
add
xchg
sbb
loopne
mov
mov
mov
mov
popa
repz
mov
xchg
xor
fcomi
or
add
push
fstl
ret
sub
add
push
or
or
ljmp
mov
mov
pop
pop
xchg
test
call
cs
pop
imul
and
sub
idiv
mov
mov
je
ja
push
add
jbe
dec
jl
popa
out
cmp
rorb
inc
push
out
push
clc
add
cwtl
sbb
add
or
mov
sbb
add
pushl
mull
add
fs
cmp
sbb
test
xor
sar
lcall
add
or
fisttpl
or
jns
lods
jmp
popf
pop
mov
sbb
leave
outsb
push
sub
add
jl
jne
fists
adc
add
add
idivb
sti
pop
lods
or
lock
cmp
mov
jne
jae
adc
fdecstp
mov
add
sub
fcoml
fisttpl
incl
sub
cmp
push
outsb
repnz
xchg
xor
divl
sahf
xchg
lret
and
in
movsl
push
push
ds
push
mov
mov
ficoml
cmpsb
nop
pop
inc
idiv
outsl
outsl
jecxz
adc
in
and
aas
or
int
jb
test
test
jb
push
cli
sbb
in
shlb
lahf
cltd
pop
mulb
mov
sbb
jnp
shlb
daa
stc
mov
iret
ds
cwtl
inc
add
adc
jge
xchg
add
leave
fimuls
and
ret
mov
mov
and
pop
or
add
cmpsb
test
imul
xchg
and
pusha
mov
adc
lods
mov
out
mov
les
fs
in
lods
outsl
fsts
test
adc
into
outsb
clc
mull
fists
xor
inc
add
mov
mov
adc
shrd
xchg
sbb
inc
aaa
sub
outsb
sub
into
cmp
mov
xor
xor
and
xor
dec
push
mov
int3
mov
push
outsl
pushl
or
inc
add
mov
pop
shrb
sbb
or
mov
mov
push
rolb
and
inc
and
mov
sub
not
mov
mov
xlat
or
dec
rclb
mov
push
sub
fiaddl
push
sti
pop
sti
cmp
or
push
inc
not
pop
inc
xor
data16
mov
adc
fimuls
clc
add
pop
jecxz
out
mov
or
inc
mov
xchg
fcomi
and
xor
xor
pop
add
and
mov
imul
int
push
sbb
decl
rolb
outsl
loop
icebp
sti
popa
push
mov
outsl
pop
not
jbe
and
and
insw
dec
mov
repz
and
mov
cmpl
add
neg
mov
out
jge
inc
repz
push
clc
xor
out
fdivrl
add
mov
ret
dec
jge
aaa
out
mov
les
mov
pop
cmpl
sarl
dec
xor
ja
xor
add
rolb
mov
inc
mov
sbb
mov
in
pushf
push
jne
inc
aaa
mov
out
adc
and
adc
pop
jnp
cmp
into
lret
xchg
mov
out
insl
sbb
fcoms
fldenv
out
or
in
inc
mull
push
les
outsl
test
sub
les
or
sub
pusha
cmp
jl
add
bt
rcr
dec
sub
or
pop
je
aaa
jno
fs
xor
sbb
or
pop
fdivs
imulb
clc
inc
sub
push
add
outsl
out
jbe
xlat
loopne
mov
dec
sub
sbb
push
add
in
enter
fmuls
ret
push
loope
dec
ret
mov
jl
inc
sti
sbb
mov
jnp
andb
ficoml
in
idivl
int3
iret
mov
fstl
fists
xor
or
fisubs
pop
or
ja
adc
imul
sbb
aaa
sub
mov
pop
xlat
data16
rol
pop
adc
push
sub
push
arpl
and
es
or
leave
ret
pop
jbe
push
psraw
clc
pushl
add
cwtl
sub
fmuls
clc
add
getsec
xor
jmp
push
out
fidivs
mov
push
xchg
and
sbb
lret
mov
icebp
xchg
loopne
data16
test
add
pop
inc
jl
xor
push
adc
xor
sub
aam
adc
daa
adc
sar
out
jle
jmp
jp
pop
out
fucom
das
scas
aad
popa
add
sbb
mov
adc
push
outsb
mov
repnz
or
pop
mov
out
push
enter
stc
and
subb
add
stc
das
lock
xchg
mov
add
loop
gs
ja
scas
sub
sub
cmpsb
sahf
add
lds
push
movsl
dec
popa
filds
xor
clc
testb
pop
ret
dec
pusha
aad
iret
and
ret
sub
sbb
xchg
je
cmp
pop
push
add
icebp
bound
rorl
inc
xlat
pop
or
jno
cs
cmp
inc
push
notb
xchg
mov
xchg
fcoms
sub
or
sbb
or
aam
icebp
fisubs
addl
gs
jae
mov
push
or
inc
sbb
pop
cld
xorl
pop
outsb
in
mov
fists
mov
push
stos
push
cmp
cs
pop
sahf
lods
xlat
pop
add
add
in
or
adc
add
sub
push
mov
dec
idiv
aas
insb
push
or
loopne
fisttpl
cld
cmp
jnp
xchg
mov
add
cmpsb
rcr
pop
stos
or
repnz
mov
or
cmpsb
stc
in
xchg
or
outsl
lock
cmp
rclb
push
adc
add
aas
or
xchg
jmp
dec
in
shl
dec
mov
arpl
inc
dec
cmp
outsl
mov
mov
leave
cwtl
cmp
test
ss
das
rcll
or
les
dec
addb
hlt
sti
or
pop
jecxz
pop
mov
cmpsl
mov
in
pushf
adc
sbb
mov
stos
sub
add
mov
test
xchg
pop
dec
and
loope
or
adc
aas
cmp
mov
fdivl
dec
movb
jge
in
and
or
dec
icebp
mov
lahf
jne
lret
pop
cld
mov
cmc
rcr
out
fsubrs
sub
pop
rclb
xchg
mov
jle
lcall
stc
mov
out
jbe
lds
nop
adc
in
nop
bound
test
loope
cmc
xchg
pop
stc
jg
mov
mov
ljmp
jecxz
or
gs
sbb
ror
xor
dec
lods
pop
mov
dec
sub
inc
pop
cmp
mov
scas
and
adc
enter
dec
stos
cmpsb
cltd
stos
dec
and
ss
dec
lcall
dec
jne
cmp
cmp
ljmp
and
inc
sub
or
add
mov
not
add
insb
imul
mov
cs
aam
pop
push
dec
mov
shlb
sub
lock
in
sarl
push
fisubl
or
sbb
or
pop
scas
jnp
repz
mov
inc
sbb
fcomp
add
add
repnz
mov
dec
push
imul
and
test
stc
lods
jne
push
insl
jmp
repz
dec
or
sbbl
cmp
push
xor
mov
dec
pop
or
dec
hlt
add
repnz
out
sbb
neg
enter
ret
faddl
ds
lcall
filds
xor
out
imul
push
push
sbb
ret
ffreep
insb
mov
add
add
xchg
cmp
int3
add
cmp
pushf
imul
or
repnz
sub
sub
and
pop
adc
addr16
in
aas
mov
adc
out
popa
inc
sbbl
cmp
push
dec
aaa
inc
outsl
mov
jb
cmp
sbb
fyl2x
add
scas
dec
inc
clc
fisttpll
sahf
inc
jmp
jl
push
mov
out
pop
stos
dec
xor
loop
sub
hlt
cmp
int
mov
repz
aad
sbbl
lahf
pushf
mov
push
sbb
or
xor
rcll
mov
in
nop
sub
es
fwait
push
insb
or
inc
add
loopne
or
mul
and
xor
loope
int
je
ss
in
out
pop
or
cs
in
flds
adc
aas
push
gs
aam
ret
testb
aad
es
fidivrl
or
dec
adc
movsb
xor
jbe
xor
pushf
or
inc
ret
sbb
stos
loop
mov
mov
add
adc
push
jecxz
xchg
stc
mov
shlb
jle
ds
mov
popa
sti
xlat
or
xor
or
fcomps
inc
popf
lock
movb
inc
into
and
pop
in
dec
je
fsubr
std
xor
je
xor
testl
jmp
cmp
imull
ja
ret
ret
mov
mov
popa
add
testb
xor
mov
mov
xor
or
leave
xor
in
sbb
int3
push
push
adc
or
jbe
icebp
add
mov
int
arpl
fs
sbb
mov
or
pop
fsubl
push
dec
fdivs
jp
mov
lret
icebp
je
lock
xchg
lods
fsubrl
adc
pop
call
xchg
xchg
cmp
adc
test
mov
test
pop
inc
movsl
fimuls
sub
fs
aaa
aad
pop
lods
imul
ds
movsb
pop
fidivs
mov
fbstp
jmp
jae
mov
sbb
out
cli
jg
mov
js
mov
cmp
and
std
add
sub
enter
jb
mov
mov
iret
mov
mov
fldenv
mov
sbb
jns
lahf
pop
cmpsb
in
sub
add
ret
pop
insl
icebp
mov
pop
pop
xchg
add
push
clc
lcall
pop
int3
sub
mov
clc
dec
int
dec
mov
ja
sbb
lods
jmp
adc
sbb
incb
lret
gs
cltd
cmp
lret
in
add
aaa
push
in
neg
hlt
push
jg
fisubrs
xlat
sub
leave
mov
idiv
call
xor
add
xchg
cmpsl
cwtl
xchg
xchg
jmp
enter
pop
lock
fisubrs
inc
insl
rolb
cmp
mov
inc
sub
and
pop
xchg
pushf
repnz
cmpsb
clc
movsl
inc
push
dec
dec
imul
inc
mov
addr16
mov
inc
ror
mov
clc
js
outsl
mov
sbb
inc
xor
mov
push
jp
push
lock
enter
ljmp
jae
xchg
clc
or
cs
or
add
pop
push
inc
rolb
mov
mov
mov
adc
sbb
push
xchg
or
jmp
and
les
push
orb
mov
stos
pop
bound
js
and
decb
adc
dec
out
sbb
shrb
lods
sbb
les
or
addl
adc
add
mov
and
insl
and
aaa
add
fisttps
andl
add
adc
test
stos
loopne
adc
jmp
dec
js
and
in
js
mov
into
push
scas
icebp
sbb
push
decl
jne
jmp
mov
rcl
or
js
test
mov
cmc
push
fwait
adcl
and
das
bound
int
jne
add
movsl
sbb
or
dec
push
xchg
clc
sbb
jo
and
jbe
hlt
add
xchg
ljmp
lock
inc
jb
adc
imul
sbb
mov
sbb
rdpmc
aam
inc
popa
push
or
push
cli
pop
test
cmc
clc
cmp
outsl
shrl
jno
and
std
xchg
loopne
and
mov
cmp
push
pop
jmp
and
lea
ss
inc
lea
sub
xchg
inc
mov
cmp
int
mov
ret
imul
sub
cmpsl
sahf
or
xchg
mov
das
outsl
shrl
dec
xchg
or
inc
cmp
inc
cmp
decl
xlat
cli
xchg
ret
aam
nop
jb
ds
jg
mov
nop
mov
push
add
jg
lret
xchg
mov
pop
add
sub
cs
cmpsb
dec
outsl
icebp
out
clc
rorb
mov
mov
jns,pt
incl
lcall
pop
mov
cwtl
in
xor
aam
inc
push
push
mov
mov
dec
inc
mov
std
in
decl
aam
sub
rcrl
jge
push
test
les
pop
jl
movsl
movsl
std
cmpsl
jle
das
push
mov
cli
dec
das
dec
in
clc
jne
pop
test
inc
cmp
fdivrp
mov
mov
mov
js
push
and
cmp
pushf
push
fwait
cli
cmpsb
in
cmp
in
mov
pop
sub
mov
mov
pop
sub
call
or
outsb
xchg
sub
jge
sub
push
jmp
loopne
loopne
lret
mov
mov
sbb
and
mov
jo
push
add
push
add
pop
loopne
daa
sub
sbb
or
fwait
or
xor
sub
mov
sub
or
mov
repz
insl
addb
cmpb
bound
les
cmp
stos
ds
adc
into
testb
add
daa
or
cld
bndstx
and
sbb
aam
insl
push
imul
pop
jnp
ret
adc
cmp
and
cld
and
dec
adc
add
sub
adc
xchg
ds
das
xchg
sbb
cmpb
xor
adc
or
push
dec
pop
pop
ficompl
xor
push
dec
push
hlt
insl
add
mov
addb
push
cli
add
test
mov
jb
outsl
test
rclb
mov
outsl
out
adc
add
xor
inc
mov
into
adcb
xor
out
jmp
cs
test
jp
push
dec
or
pop
stos
lock
ret
or
rcl
and
fcomp
push
xchg
shrb
daa
aam
mov
sub
jb
sub
fcoml
outsl
fnstsw
inc
add
popa
lret
push
pop
mov
cmp
lock
xlat
out
jge
sbb
and
adc
aad
sub
mov
push
shlb
shr
add
pop
call
mov
push
aam
adc
fdivrl
xchg
test
shll
mov
lock
out
ret
lea
dec
jg
mov
popa
js
sbb
pushw
add
mov
pusha
call
outsb
icebp
in
cwtl
stc
test
push
cld
mov
sbb
xor
in
cmp
cmp
leave
pushl
mov
add
or
mov
loopne
mov
sub
push
jbe
inc
or
sbb
cs
inc
cmp
jo
popf
stos
and
jecxz
pop
mov
adc
imul
ds
jne
clc
out
adc
dec
test
jbe
xlat
and
xor
out
ds
fdivs
push
inc
sbb
data16
sbb
test
inc
push
or
cmc
push
mov
insw
adc
stc
and
sti
clc
jno
clc
orl
jmp
cmp
pop
pop
jbe
insb
cld
in
mov
push
andl
adc
mov
jae
test
xchg
push
loopne
xlat
ds
push
scas
loopne
mov
mov
pop
sub
lock
mov
sbb
popa
push
hlt
push
adc
cmp
insb
icebp
inc
jg
jne
lea
add
pop
mov
mov
mov
xchg
add
adc
xor
or
mov
inc
mov
jg
and
push
add
das
loop
pop
xor
aaa
inc
xor
add
inc
or
mov
adc
inc
pop
fcoms
mov
add
xlat
or
ja
and
insb
loop
fildl
mov
aas
outsl
lds
xor
subb
mov
dec
loopne
or
stos
xchg
shrl
or
sub
inc
insl
add
add
dec
ja
sbb
mov
and
jo
add
adc
andb
stc
movsl
or
call
call
sbb
pop
or
gs
push
push
ficompl
jbe
fadds
daa
push
add
rcl
mov
lret
pop
inc
adc
loop
cltd
xor
jle
mov
add
add
data16
imul
dec
xchg
faddl
pusha
ret
adc
cmpsl
jns
cmp
jae
add
test
adc
mov
inc
call
xchg
add
lds
rolb
adc
pop
js
or
insb
lahf
add
cmp
push
cmovne
sub
sub
dec
mov
mov
pop
mov
loopne
rclb
push
test
add
lock
sbb
or
inc
lods
push
clc
sub
inc
outsb
dec
outsb
inc
push
adcl
add
rorl
inc
loopne
xor
cld
je
or
dec
xorb
or
es
mov
or
call
rclb
add
adc
mov
lods
mov
cmpsl
jp
xchg
sub
insl
pusha
push
aaa
add
mov
pop
lar
shlb
push
and
fbstp
adc
inc
daa
sbb
or
test
fisttpl
inc
jns
scas
add
testl
push
jb
mov
xchg
mov
shrl
das
cmc
lock
out
lock
jb
cs
call
xlat
xor
mov
ja
xorb
int
and
ds
adc
cli
clc
ret
jns
sti
push
fidivs
and
xor
mov
push
pop
loop
ss
push
shl
outsl
js
and
call
popf
ss
sub
mov
push
iret
fcompl
cld
dec
ficoml
repnz
shrb
ret
pusha
outsb
fwait
pop
shrb
lods
sarl
and
mov
dec
mov
or
dec
hlt
int3
or
mov
xor
inc
in
cli
mov
js
stos
ja
mov
div
push
ljmp
ret
sbb
pushf
mov
cli
incl
fimuls
dec
adc
popf
aas
push
cmp
outsb
fldt
mov
adcl
cld
jg
sub
inc
aad
inc
or
jb
rol
in
jmp
jg
xor
outsl
add
push
js,pn
and
push
sub
adc
and
xchg
or
push
pop
jb
roll
es
adc
test
add
push
repz
mov
int
add
xchg
adc
or
inc
mov
jmp
pop
std
sbb
mov
hlt
insl
sti
movsl
outsb
iret
dec
shlb
stos
jae
insb
and
inc
dec
fildll
fidivl
rcrb
leave
pop
push
movsl
jle
jg
mov
inc
pop
cld
push
aam
incb
xor
cs
loop
cmp
sbb
cld
loopne
dec
dec
dec
or
mov
and
lret
fbstp
fstps
shrb
enter
lock
bound
adc
cmp
jne
add
js
or
mov
outsl
lods
aam
add
jmp
and
add
inc
push
mov
push
cmp
daa
xor
sub
mov
xor
cmc
repz
rcr
pop
xchg
and
xchg
mov
outsl
out
xor
sarb
xor
loopne
daa
dec
je
add
lds
scas
mov
dec
enter
and
add
cmpsl
mov
push
mov
adc
nop
and
idiv
lcall
int3
add
xor
xchg
int
xlat
and
cmp
fildl
cmp
add
ljmp
movsl
mov
cmp
sahf
subl
jne
dec
and
xchg
mov
imulb
aad
pop
cmc
pusha
insl
sub
dec
enter
addb
arpl
pusha
out
imul
or
subl
filds
mov
xchg
adc
adc
inc
lea
add
mov
jo
sub
mov
pop
cmp
sbb
jns
mov
lahf
popf
ljmp
inc
ret
cmp
sub
add
cmp
xor
mov
js
mov
sub
sbb
shl
mov
pusha
iret
sub
lds
testb
out
pop
loope
lahf
and
mov
sbb
repnz
add
dec
dec
sbb
jae
mov
inc
lds
ret
mov
fcmovnb
pop
repnz
aaa
mov
rcrl
and
cmp
cmp
filds
es
movb
int3
icebp
dec
loop
and
add
insb
push
sbb
dec
xchg
cmp
inc
mov
mov
ds
call
fs
daa
push
and
pushw
es
pop
cmpsb
mov
add
cmc
fistpl
ret
mov
add
adcb
pop
add
rolb
pop
jo
jbe
popa
fs
clc
jg
or
cmp
cmpsb
cmovo
pop
ret
jp
xchg
ss
cmp
pop
mov
sbb
ljmp
push
push
push
outsb
in
insl
inc
push
xchg
pushf
push
loopne
dec
rol
movsl
shlb
add
outsl
test
arpl
sbb
scas
and
fimull
addr16
inc
mov
aaa
call
mov
scas
outsb
dec
sbb
or
gs
cmpsb
push
pop
daa
rcll
and
fildl
push
pushf
xor
loop
out
ja
cmp
and
outsb
movb
popa
or
adc
mov
lds
inc
mov
add
and
into
adc
mov
sbb
pop
fcomps
sbb
mov
inc
or
pop
mov
daa
and
enter
mov
scas
sahf
sarl
xor
sarb
call
mov
sub
pop
mov
ret
mov
and
adc
push
xor
adcl
mov
mov
adcb
loopne
cmp
test
andb
pop
or
jno
gs
mov
and
sbb
pop
cmc
push
mov
cwtl
addb
sbbb
ror
sbb
pop
add
enter
and
xor
sbb
jp
mov
pop
call
jge
jnp
and
in
leave
clc
test
push
pop
fstpt
aam
aam
add
mov
pop
rcrl
jae
insl
and
pusha
call
jmp
rclb
pop
mov
adc
xchg
adc
or
loope
ret
in
dec
xchg
clc
testb
cltd
xchg
test
rcrb
dec
adc
sub
pop
lock
dec
nop
lds
dec
jae
pusha
loop
testb
popa
xchg
das
dec
push
xchg
ror
lahf
pop
jo
mov
pop
mov
xor
cs
pop
xchg
dec
hlt
addb
ret
add
imul
jnp
mov
hlt
mov
test
sub
pop
xor
in
sub
popf
inc
cmp
adc
push
out
or
stos
xor
scas
sub
cmp
mov
xchg
add
cmp
and
add
xchg
test
and
mov
lock
addr16
add
aam
ror
idivl
loopne
loop
or
xchg
xor
and
hlt
mov
or
insl
cmp
adc
mov
call
xor
mov
lock
cmp
add
push
jecxz
inc
cmp
ret
adcb
adc
add
fiadds
adc
es
leave
dec
and
aaa
and
fnstenv
sub
enter
orl
orl
inc
or
fcmovnbe
pop
adc
push
pop
jl
enter
test
popa
stos
sbb
mov
push
js
imul
aad
dec
inc
mov
dec
sbb
adc
pop
int3
insb
in
xor
int3
push
insl
add
xlat
hlt
push
push
sbb
mov
int3
int3
test
sti
jo
stos
xor
xchg
inc
mov
xchg
pop
sarb
ror
fcomi
lods
xchg
lret
xor
ljmp
xchg
cmc
popf
fcmovnbe
xchg
dec
or
adc
fildll
mov
leave
adc
adc
test
pop
mov
aad
mov
dec
je
mov
pop
pop
xchg
cmp
jecxz
or
ss
hlt
and
stos
inc
sub
dec
jmp
adc
fimuls
and
mov
movsl
add
mov
sti
and
stos
pop
inc
lea
add
xor
dec
sarb
test
push
jecxz
push
movsl
int3
mov
mov
mov
xor
pushf
loope
and
mov
mov
aad
push
mov
dec
mov
ffree
aam
mov
or
dec
jge
push
movsb
and
push
bound
ret
sub
add
pop
in
mov
movsb
aas
repz
sub
fdivr
daa
mov
add
lock
aam
or
xor
jns
add
nop
push
add
push
push
cli
push
or
lret
cs
sbb
dec
mov
push
sub
rcll
and
push
mov
in
add
push
xchg
jbe
mov
std
pop
mov
add
popa
je
cmp
int3
dec
dec
xor
pop
sar
in
cld
lcall
add
je
aaa
inc
addb
repnz
enter
leave
add
xor
or
and
ljmp
arpl
sub
pop
fiadds
mov
ds
das
inc
sub
jmp
add
jg
idivb
mov
jnp
loop
adc
aaa
stos
andl
cmpsb
pop
xlat
push
sbb
or
mov
jle
mov
xor
sbb
aaa
mov
mov
cmpsb
loopne
and
shr
negl
sti
dec
pop
sub
ficomps
inc
shlb
or
scas
movsl
push
jle
dec
xor
add
inc
inc
das
test
gs
sbb
dec
outsb
ret
rolb
fisubs
xor
inc
xor
sbb
xor
mov
test
cmpsl
inc
call
xor
shrb
cmp
mov
mov
std
adcl
fwait
add
sub
or
sbb
cli
pushl
pop
sub
mov
sbb
mov
adc
in
sbb
les
incb
icebp
sub
arpl
and
lcall
sar
or
icebp
out
jbe
and
lods
cmpsl
scas
lret
add
push
clc
dec
pop
lahf
clc
cli
dec
sar
sbb
sub
es
fistpll
sub
faddl
add
and
fucomip
mov
test
and
mov
into
out
imul
addb
pop
mov
hlt
fucomip
xchg
mov
adc
cmp
cmp
mov
xor
cmc
fistpll
ja
mov
sbb
lock
mov
into
ljmp
push
fidivrl
mov
cs
add
cmp
dec
outsl
dec
std
mov
cs
xchg
in
push
loopne
dec
movsb
sbb
jg
mov
std
decl
inc
mov
es
rcll
cmp
xchg
fucomp
mov
addr16
add
je
movsb
nop
pop
pop
in
and
pop
lret
cmpsb
mov
sbb
and
mov
jg
bound
adc
adc
shlb
shlb
inc
sub
push
or
jg
or
and
add
and
out
nop
daa
adc
add
inc
sarb
outsb
flds
and
shl
xchg
inc
bound
cwtl
movb
push
and
inc
xor
nop
lret
sbb
add
and
test
jge
daa
push
xchg
mov
inc
and
mov
jno
cmc
out
testl
xchg
jb
ss
dec
add
or
aaa
cli
decl
loop
shl
rclb
mov
jg
test
mov
cld
or
in
cmp
pop
fucomp
mov
xor
cwtl
mov
jg
add
lret
pushf
cmpsb
adc
dec
in
fnstsw
adc
add
and
in
cmp
lock
or
jg
mov
inc
mov
sbb
sbb
pop
fcomp
jle
out
aas
mul
mov
lock
fildll
jge
cs
jno
add
shll
xor
into
pushf
aad
push
rolb
lods
or
clc
enter
std
adc
and
lahf
ljmp
addb
icebp
daa
and
add
lods
inc
xchg
push
dec
sbb
jb
lods
outsl
out
inc
outsb
sbb
cmp
int3
jne
bound
or
repnz
push
into
jecxz
and
inc
and
adc
sti
mov
stos
repz
fs
cmp
and
aad
add
out
jecxz
mov
test
call
test
lods
iret
or
add
scas
fs
jecxz
int
clc
sub
es
fsubs
mov
lds
push
ja
enter
test
icebp
cli
pushf
add
shrl
xorb
adc
sbb
cmc
popf
std
jg
add
sbbb
lods
mov
mov
decl
adc
icebp
fildll
xchg
sub
xchg
inc
and
xor
push
insb
sarl
cmp
push
call
or
jecxz
mov
push
add
push
mov
icebp
call
push
pop
add
cmp
add
sub
push
incl
out
xchg
sub
and
clc
sbb
sti
or
in
fidivl
jae
in
jle
dec
imul
jp
mov
mov
jle
push
jno
sbb
out
daa
sbb
sub
out
xor
incl
xor
add
dec
cmp
arpl
dec
mov
jle
mov
jecxz
jb
pop
push
ret
sbb
pushf
outsl
pop
push
aad
dec
jg
test
subb
or
add
dec
push
and
add
decl
test
cli
cmp
jns
cmp
dec
js
adc
popf
pop
pop
sbb
mov
or
testl
xchg
push
or
into
pop
pusha
js
bound
jecxz
testb
and
sub
icebp
add
sub
add
jne
xchg
mov
adc
mov
jp
jne
adc
cmpsb
arpl
xor
cmpsl
arpl
xor
iret
filds
cli
testb
rcr
stos
mov
sub
xor
xchg
mov
inc
cmpsb
dec
add
leave
addl
mov
loopne
mov
mulb
testl
out
sub
outsl
sub
mov
mov
aam
push
ret
mov
xor
lahf
mov
ja
sbb
inc
test
and
je
fcmovnb
push
mov
and
or
movsl
xchg
mov
and
dec
incb
insl
iretw
mov
or
cmp
icebp
imulb
idivl
or
pop
pop
mov
into
js
outsb
das
xor
push
jl
inc
rcll
dec
sub
enter
mov
mov
jg
sbb
xorb
stos
ja
imul
lds
or
fistpll
das
pop
sbb
inc
fnsave
int
jl
xor
mov
test
adc
daa
mov
pop
mov
mov
push
js
aam
jg
insl
sti
push
push
imul
adc
dec
lds
insb
js
push
test
mov
shrb
lcall
mov
mull
mov
data16
sbb
mov
leave
cld
cmp
sbb
inc
scas
jne
pop
fisubl
out
call
or
dec
mov
sub
sub
std
mov
loopne
add
sbb
int
jns
lahf
xor
pop
rorl
mov
mov
xchg
and
dec
or
jb
mov
les
sbb
movsb
inc
mov
ja
in
fs
or
loope
aam
pop
inc
add
je
or
fcompl
and
dec
mov
scas
add
clc
add
inc
lds
sbb
or
pop
outsl
arpl
adc
xchg
cld
adc
add
mov
aaa
push
clc
jmp
mov
test
xor
std
out
mov
test
fiadds
arpl
add
aas
push
outsl
icebp
mov
mov
cmp
push
ljmp
loop
dec
xorl
lret
fisttps
dec
test
or
or
aaa
fwait
inc
jecxz
jge
int3
es
inc
in
jb
ljmp
add
mov
movsl
jo
mov
xchg
and
adc
out
inc
fwait
xor
or
pop
cmc
fwait
mov
int3
pop
scas
pop
hlt
push
xchg
and
jns
loopne
ja
shll
xor
mov
frstor
rcl
jmp
mov
or
xchg
sbb
fwait
in
jo
aam
jns
and
test
sbb
sti
mov
mov
in
scas
push
sub
js
add
xor
cmp
fadds
fnstsw
subb
lods
and
insb
mov
add
and
or
call
push
and
sub
sbb
mov
test
js,pt
sbbl
sub
inc
aad
addr16
inc
lcall
shll
adc
and
mov
rorl
aam
jp
ljmp
add
mov
call
mov
leave
lret
jb
into
ror
out
das
mov
jmp
aas
ret
test
addr16
and
jae
loopne
xor
pop
mov
test
or
fsub
sub
jg
add
add
scas
pop
mov
jmp
inc
pushf
push
jb
mov
int
inc
cld
jg
mov
dec
adc
aas
es
ljmp
sbb
aaa
pop
push
aad
mov
push
dec
inc
leave
shll
cli
jns
xor
xor
les
lods
pop
movsb
cmp
jg
sbb
inc
shll
stc
je
xchg
aaa
or
sbb
add
mov
push
in
lods
inc
jo
jl
leave
mov
or
and
xor
mov
or
pushf
ret
or
or
add
loop
sub
and
mov
clc
sub
shrb
sarb
inc
sbb
or
in
adc
into
mov
inc
jb
or
stos
jge
or
insl
loop
clc
inc
pop
xchg
cld
and
outsb
cmp
fbstp
mov
xchg
cmpsb
bound
inc
sub
adc
clc
ds
scas
inc
and
dec
das
sbb
fistpl
mov
sbb
pop
xor
mov
pop
bound
and
mov
dec
scas
test
or
fdivrl
dec
jb
push
or
in
jecxz
ss
and
divps
scas
or
lahf
aad
stos
cmp
xor
and
mov
jp
add
add
test
outsb
xchg
sub
out
inc
dec
cmp
aaa
add
das
and
adc
jg
inc
adcb
ja
xchg
aaa
jo
mov
lahf
popf
std
testl
stc
enter
xorb
inc
sbb
movl
and
jp
fbstp
ja
and
loope
jnp
in
bound
or
fiaddl
test
into
and
mov
add
aaa
fadds
mov
or
xor
or
and
lock
fistl
into
adc
jmp
mov
mov
or
or
mov
sar
adc
mov
int
xchg
test
adc
cmp
or
or
rorb
pop
cltd
imul
mov
imull
clc
out
repnz
insb
int3
repz
push
sahf
mov
add
pop
cli
shrl
and
mov
mov
iret
and
cwtl
or
or
xchg
push
push
in
inc
ljmp
insb
push
cli
adc
scas
adc
add
inc
fndisi(8087
or
fwait
inc
movsl
pop
xor
xchg
andb
sbb
lahf
inc
xchg
shll
inc
fistps
data16
add
mov
cltd
xlat
or
loopne
enter
jg
adcl
dec
mov
loop
loope
pop
pusha
clc
movsb
inc
ja
jo
aaa
jge
dec
cmp
fmull
or
ljmp
inc
or
lahf
or
inc
scas
push
jbe
andl
inc
jns
xlat
and
bound
fadds
sub
sub
daa
stos
push
adc
pop
or
and
ret
and
cwtl
dec
or
mov
lea
cmp
ljmp
add
je
hlt
loope
lds
adc
jge
xchg
mov
out
inc
xchg
pop
movsb
mov
sbb
add
xor
inc
jae
out
xchg
jge
aas
inc
xchg
sub
lret
stos
iret
inc
out
out
mov
xor
sub
out
sbb
push
lods
adc
test
push
flds
adc
mov
js
imulb
mov
adc
outsl
notb
aas
jmp
and
dec
adc
xor
sbb
idivb
mov
ljmp
out
sub
les
fiaddl
test
adc
xor
ljmp
aad
loopne
stc
repz
int3
rolb
pop
mov
lock
cmp
or
jg
pop
mov
xchg
jmp
jmp
jmp
inc
popa
push
iret
inc
mov
xor
jne
jbe
dec
pop
cli
sbb
or
jae
add
fbld
nop
stos
pop
in
push
cmp
mov
stc
and
push
add
inc
mov
or
inc
inc
inc
mov
inc
dec
lods
js
add
out
insb
int
aaa
shll
popa
pop
std
lcall
in
add
icebp
in
and
jmp
roll
mov
sbb
and
call
rcll
test
ljmp
std
add
add
and
in
mov
addb
cli
scas
and
and
xchg
shl
lds
or
js
sbb
lcall
cmp
sub
adcl
pop
clc
add
sahf
adc
ljmp
data16
lods
gs
rcl
dec
ret
adc
and
cmp
add
xchg
xor
sub
ds
sar
add
jo
mov
nop
inc
test
sar
jg
push
push
mov
sub
mov
or
jbe
and
xchg
dec
sbb
das
or
movsb
xor
in
outsl
insl
jecxz
addb
je
aad
and
lock
in
add
call
shrl
imul
in
lods
icebp
daa
roll
stc
mov
xchg
leave
sub
adc
add
mov
jp
inc
add
pop
clc
in
stos
sub
ret
add
aad
and
fimull
mov
fisubs
fcomip
inc
sub
sub
inc
dec
pop
lock
idivb
cmpsl
dec
incl
jne
mov
inc
jns
out
pop
mov
daa
test
fildll
fbstp
pop
pop
xchg
cwtl
cmpsb
push
push
subl
or
mov
out
inc
cld
fldt
add
xor
roll
lock
rorb
insl
shll
insl
pop
sub
add
xchg
xor
pop
lahf
add
cltd
adc
sti
jno
xchg
or
arpl
jbe
loope
add
sti
pop
add
in
mov
sti
mov
sbb
test
pop
and
nop
and
add
inc
in
data16
js
mov
int3
out
dec
sbb
dec
out
loop
adc
sub
push
jbe
dec
test
lret
push
jae
shlb
pop
add
mov
and
add
cmp
jl
mov
or
add
and
das
sbb
ret
xchg
dec
inc
loope
add
mov
adc
pop
rclb
inc
stc
inc
call
cmp
test
xor
add
insl
push
xchg
test
into
lds
lock
mov
out
movsb
fs
pop
icebp
lcall
or
mov
mov
or
push
outsb
cmp
jl
add
insl
jl
cwtd
dec
add
flds
or
iret
mov
cld
into
mov
inc
sti
stos
push
test
dec
push
jbe
fadds
add
add
push
jb
shrb
aam
mov
int3
pop
add
movsb
incl
sarb
or
pop
int3
inc
dec
and
xor
ret
ret
dec
inc
stos
push
mov
lock
xor
and
jbe
mov
adc
pop
sub
jg
add
add
adc
mov
pop
xor
cld
test
lret
cmpb
mov
jns
idiv
out
mov
add
imul
mov
js
mov
pop
pusha
xor
in
mov
or
pop
mov
add
push
pop
cs
sub
xor
fisttps
xchg
sub
rorl
paddd
jge
sarl
das
pop
and
in
int3
and
pop
out
jbe
dec
lock
inc
in
xor
icebp
fidivl
adc
cmpsb
inc
loope
sarl
cmp
out
xor
xchg
mov
fwait
jle
push
jecxz
dec
repnz
or
out
mov
or
add
fst
in
arpl
jg
push
inc
add
xchg
jecxz
pop
xor
mov
sbb
push
ret
and
add
mov
pop
push
mov
sub
daa
scas
pop
mov
inc
std
das
test
push
fnstcw
sub
jmp
mov
fsubs
iret
add
pop
mov
push
fcmovnu
adc
cmp
or
pop
arpl
dec
push
cmc
call
adc
cld
std
in
cmpsl
fwait
nop
mov
push
or
inc
std
adc
es
cmp
pop
ljmp
pushf
jle
outsl
icebp
lea
and
addb
andl
push
jmp
jne,pn
inc
pop
fneni(8087
or
mov
inc
dec
cmp
mov
xchg
iret
jne
das
mov
and
out
sbb
jg
ret
and
or
xor
and
xchg
fimuls
mov
add
je
add
cmp
adc
mov
push
es
push
ficomps
mov
fildl
sub
int
rcrl
push
inc
jb
adc
lahf
mov
adc
cmpsb
jg
clc
ret
mov
xor
jle
sub
mov
pop
clc
jb
shlb
pop
sbb
divb
insl
sub
cmp
je
pop
xchg
dec
dec
ljmp
bnd
cmp
dec
out
mov
nop
rorb
mov
jne
jnp
jle
xchg
les
fsubrs
mov
push
sbb
mov
lret
or
jb
inc
movsb
xchg
jle
add
pusha
cli
push
xor
push
shrb
pop
pop
ljmp
pop
cmc
decl
add
ja
hlt
orb
add
hlt
enter
inc
xchg
push
fsub
aaa
and
movsl
imul
fsubrs
push
les
and
dec
and
xor
sub
adc
testb
inc
adc
pop
cmp
inc
mov
adc
add
or
mov
es
mov
dec
xchg
jne
add
mov
scas
popf
fwait
in
pushl
inc
jge
push
pop
imul
xor
push
adc
cs
pop
xor
push
je
mov
push
cmp
test
xor
inc
lds
lcall
cmpsl
dec
add
adc
push
add
jp
mov
aaa
pop
in
xchg
xlat
push
sti
inc
insl
and
test
add
ret
bound
jle
push
add
and
xor
push
lock
or
out
jle
jnp
mov
data16
push
les
add
outsl
add
shlb
add
test
xor
lods
mov
inc
addl
mov
or
add
das
cmp
std
xor
or
test
push
movsb
in
cld
outsb
dec
sbb
rorl
jae
pusha
loope
adc
add
and
jmp
fdivl
enter
mov
dec
sbb
les
adc
dec
or
push
pop
mov
or
dec
sub
add
int3
fistpll
fildl
test
xor
dec
xchg
orl
adc
lahf
test
fldl
cmp
fadd
push
lods
ja
adc
aad
bound
xchg
idiv
and
lea
pop
jmp
and
or
or
pop
and
into
xchg
jo
adc
cmp
pop
shrb
or
or
and
mov
cltd
or
adc
jno
jae
std
outsl
cld
call
lds
adc
xchg
cmp
mov
pop
jmp
inc
adc
push
mov
test
jmp
add
movsl
fs
lret
popf
mov
shrb
push
mov
cld
jnp
daa
jmp
adc
cmp
xchg
loopne
aam
jge
adc
mov
pushl
and
add
outsl
sbb
in
dec
cld
divb
adc
test
adc
insb
cli
cli
inc
or
mov
push
xor
test
cmp
add
inc
andb
scas
js
mov
mov
mov
inc
daa
call
mov
aaa
nop
aam
xchg
dec
adc
into
sub
pop
inc
jmp
out
jl
fdivrs
jp
jb
inc
dec
inc
xchg
adc
mov
in
lret
mov
orl
add
subb
sbb
popf
xchg
inc
pop
pop
in
cmp
repnz
cs
cmpsb
adc
pop
fmuls
bound
cmpsb
push
es
sub
mov
in
pop
popa
jno
aas
xchg
jno
test
pop
jns
fists
movups
add
insl
fldcw
ljmp
fnstenv
jnp
cmp
jno
arpl
pusha
push
in
hlt
imulb
push
fisubrs
insb
add
pop
icebp
xor
adc
push
popa
popa
adc
pop
fcoms
push
push
mov
push
ds
jo
mov
mov
int
and
mov
xchg
movsl
pop
or
mov
lea
push
movsb
rorb
inc
adc
lock
rclb
xlat
aaa
test
push
aas
sbb
js
xchg
mov
mov
pop
ret
mov
dec
jp
jb
pop
cwtl
mov
cli
pop
insb
fcoms
inc
bound
lea
and
inc
cli
push
cmp
xor
stc
mov
loope
icebp
cmpsb
jno
addr16
jo
pop
lea
mov
mov
loope
xor
and
roll
mov
adc
inc
cmp
push
xor
lea
dec
jb
in
sti
ljmp
fnstcw
xchg
and
out
in
jbe
sub
sub
inc
das
nop
xor
in
aam
pop
cwtl
in
xchg
jge
lock
push
cmp
ss
lcall
js
sti
inc
test
push
fs
iret
lret
imul
movsl
fnstcw
fwait
clc
addr16
cmc
inc
cmpsl
movsb
enter
adc
in
push
dec
dec
popa
inc
xchg
test
inc
fwait
pushl
mov
mov
pop
cmp
inc
mov
lret
insb
sbb
jg
or
icebp
jb
insl
cmpsb
or
xor
dec
fs
xchg
inc
pushf
and
lcall
xchg
and
ficompl
ss
push
sub
mov
cmp
rclb
xchg
inc
push
jle
jmp
bound
mov
ljmp
movlps
out
push
cwtl
add
mov
inc
pop
ds
loopne
ficomps
adc
add
xchg
and
outsl
je
daa
les
push
bound
sbb
cwtl
mov
ret
in
sbb
mov
pop
pop
push
xor
popa
ds
push
enter
das
aam
push
es
push
mov
push
mov
outsl
xor
inc
repz
clc
sub
xor
les
sub
jne
js
in
sbb
iret
divl
jno
mov
and
inc
mov
insl
inc
dec
mov
stos
or
addb
mov
das
scas
gs
inc
pop
mov
lods
shlb
xor
dec
mov
add
mov
dec
clc
xchg
push
mov
push
xlat
std
fcmovnbe
ljmp
mov
bound
stos
aaa
add
add
fxch
pop
xchg
clc
xlat
inc
pop
mov
sub
and
sar
and
push
inc
xchg
testl
inc
or
push
add
mov
iret
icebp
xorb
mov
push
or
jl
or
hlt
sbb
add
inc
fwait
loopne
add
add
xor
pop
mov
and
cwtl
outsb
mov
call
sbb
push
mov
pop
fiaddl
out
repnz
stos
pop
sub
pop
lock
xor
fmull
jbe
mov
xchg
jno
xchg
add
pop
rcll
push
insb
xchg
rcl
xchg
cmpsb
adc
lret
outsl
pop
dec
sub
cmp
dec
inc
lcall
xchg
add
and
loopne
pop
or
cwtl
les
ret
sub
mov
mov
xor
outsl
mov
mov
enter
lock
xchg
adc
sbb
lods
cmp
xlat
and
insb
mov
fistpl
dec
add
ja
jp
xor
stc
lock
and
call
mov
mov
and
lock
dec
scas
mov
adc
aad
mov
jno
mov
push
enter
add
and
sub
out
nop
cmp
inc
and
fmuls
and
xchg
inc
imul
lret
push
add
jne
dec
call
xchg
inc
call
test
sbb
add
aas
sbb
push
sub
hlt
mov
add
add
ljmp
and
hlt
fadds
mov
xor
ret
pop
jo
in
leave
ja
std
mov
sbb
adc
es
add
sbb
outsb
adc
adc
dec
repz
mov
mov
call
dec
ss
rclb
imulb
sbb
ja
mov
or
or
sahf
jg
lcall
ficoml
enter
loopne
lock
lret
adc
sbb
inc
pushf
sub
sbb
jb
inc
outsb
jns
jo
into
call
jb
loope
jmp
cld
or
mov
icebp
inc
mov
test
je
loopne
mov
fstpt
rcr
jne
dec
fidivrs
test
cmp
adc
inc
cs
pop
fcomp
stc
adc
icebp
jns
call
pop
cmp
sarb
push
jne
rclb
ret
or
lret
loopne
shl
cmp
xor
jecxz
lock
mov
dec
dec
repz
push
fidivrs
pop
movsl
imul
fwait
push
add
jne
jmp
imull
cmc
mov
adc
adc
and
mov
push
xor
cmpsl
lods
jg
inc
push
loopne
inc
mov
les
xlat
in
or
jge
out
or
mov
hlt
das
clc
and
loopne
rolb
addr16
cmp
mov
mov
push
push
push
push
cs
cmc
xor
enter
xchg
adc
sbb
mov
call
pop
aam
add
adc
jge
es
js
xchg
testb
and
pop
notl
dec
cmp
ret
movzbl
sbb
std
nop
push
pop
call
add
mov
mov
add
jae
shl
mov
push
std
aas
sbb
in
popf
cmpsl
fcompl
pop
sbb
add
mov
push
lock
sub
decl
scas
push
inc
testb
ret
fiaddl
adc
cli
jecxz
mov
hlt
fbstp
aad
cli
and
inc
stos
cwtl
mov
xor
or
and
adc
mov
adc
add
mov
hlt
push
test
or
fdivrl
pop
bound
imul
std
add
outsl
jae
sbb
enter
and
loop
clc
jmp
ds
inc
mov
cmp
es
outsl
das
hlt
fwait
addr16
xchg
cmp
es
mov
and
and
adc
dec
movsl
shlb
and
xchg
lcall
repz
lods
add
enter
ja
lock
in
repnz
xor
xchg
jb
mov
outsl
test
sarb
lea
outsl
icebp
dec
cmp
xor
sbb
repnz
insl
xchg
pop
ljmp
pushf
out
icebp
jae
je
mov
test
cmp
or
test
icebp
inc
jmp
sub
stc
sub
cmp
add
data16
sbb
mov
mov
inc
lods
push
cmp
test
jne
mov
icebp
clc
push
mov
mov
or
aaa
xorb
divl
push
xchg
mov
inc
int3
xchg
addl
loope
cmp
push
mov
das
rcrl
sahf
sub
stos
or
inc
mov
fmull
sarb
fisttps
jb
and
sub
add
inc
imul
mov
xchg
lcall
push
outsb
mov
incl
cmpsl
or
xor
push
jo
or
or
hlt
mov
sub
mov
or
jne
scas
push
insb
or
ror
jl
jno
pop
sarb
mov
data16
bound
cltd
js
andb
sahf
sar
jg
scas
sbb
orl
cmpsl
adc
fucomp
pop
mov
mov
dec
xchg
xor
aad
or
out
fwait
sub
push
push
addr16
adcl
mov
cmpsl
or
and
sbb
jl
adc
iret
je
pusha
or
mov
push
xchg
or
mov
adc
add
lds
out
lcall
loope
inc
jg
into
cltd
fsubs
loope
or
in
imulb
movsl
and
add
adc
out
sarb
test
push
push
enter
and
mov
add
mov
mov
jb
mov
test
mov
mov
jo
and
and
pop
loopne
loop
jnp
and
xlat
and
js
pop
cmp
fiaddl
addr16
mov
mov
rcrb
cwtl
mov
add
ret
push
or
sub
ljmp
sbb
aas
fimuls
ja
xchg
pop
jle
sbb
cmp
pop
test
jl
fdivs
mov
mov
sbb
mov
test
lret
mov
ss
adc
ficoml
imul
cmp
push
push
stos
pop
fldl
sub
or
cmc
ret
loopne
pop
push
cmp
popa
xchg
call
frstor
test
push
scas
mov
loop
push
les
add
add
std
pop
loopne
xchg
sbb
xchg
add
fisttps
das
cld
mov
cmc
mov
or
imul
inc
aaa
shrb
cmpsb
addr16
fnstsw
repnz
icebp
cld
testb
jle
ror
bound
inc
mov
sub
pushf
sbb
pop
xchg
push
out
add
ljmp
add
mov
mov
pop
dec
jle
push
test
dec
fwait
loopne
aam
test
nop
and
lock
sub
aad
push
cld
js
paddd
and
ljmp
adc
push
notl
nop
mov
jl
inc
xchg
jo
cmp
mov
inc
and
add
loope
sbb
ljmp
pop
adc
sub
jmp
sub
and
lods
std
lret
jg
dec
pushl
jb
lods
mov
xor
sub
rcll
mov
dec
jl
das
fwait
decl
dec
faddl
sub
pop
inc
and
mov
push
aad
test
sub
notl
insl
cld
call
lret
es
in
mov
cld
movsl
movsl
mov
inc
hlt
xchg
nop
push
or
mov
sub
mov
jp
int3
mov
push
push
add
jns
mov
sbb
mov
jbe
cmpb
pop
les
call
mov
shrl
mov
andb
loop
ljmp
adc
lret
sbb
ljmp
xchg
adc
rolb
arpl
sub
ret
outsb
inc
push
pusha
jo
in
pop
pop
mov
cmp
pop
addl
lcall
mov
movl
sbb
mov
push
and
popl
loop
cld
in
mov
push
js
fs
fisttps
or
sub
or
mov
mov
aad
cltd
xchg
cmc
repnz
push
testb
fistpll
mov
fwait
push
int3
out
sub
or
cld
mov
and
adcb
and
scas
add
mov
pop
aam
pop
movsb
loopne
dec
xor
lret
fisttpl
pushf
mov
icebp
push
ficoms
stos
lock
ret
mov
adc
xchg
inc
mov
jg
mov
adc
cmp
sbb
stos
mov
jns
pop
cmpb
ds
data16
and
mov
repz
add
fisubrl
iret
sbbl
xchg
push
ret
test
cmpsl
into
add
nop
call
cmpl
pop
inc
sti
jg
in
and
enter
ljmp
push
and
aad
push
jg
jo
push
mov
cmp
cltd
int3
inc
sbb
loope
es
inc
push
outsb
popf
in
not
ja
inc
imul
adc
xchg
sub
jecxz
fwait
cmp
cltd
out
shrb
push
xlat
lcall
pop
pop
cmpsb
mov
fistl
arpl
xor
cmp
lock
mov
and
mov
mov
pop
adc
mov
sub
mov
sahf
notl
cmc
fbstp
cmpsb
cmp
jns
stos
loop
fwait
mov
pusha
adc
int
push
and
and
hlt
mov
and
lock
repnz
or
mov
dec
in
faddl
test
pop
push
dec
adc
cwtl
mov
mov
ljmp
je
sbb
shr
mov
lcall
adc
test
add
mov
and
test
inc
xchg
sub
int
aad
pop
add
pop
mov
nop
and
movsb
aaa
xchg
sarb
repnz
nop
enter
in
mov
lods
adc
adc
xchg
jecxz
or
jle
hlt
xor
fdiv
inc
xor
sub
pop
std
inc
mov
mov
subl
add
movsl
dec
mov
lds
sbb
repz
mov
adc
jle
sbb
push
xchg
ficomps
lods
iret
and
lret
pop
call
fbld
dec
add
pop
jbe
add
add
mov
movsl
in
cli
sub
out
xchg
pop
and
rcl
lret
xchg
loop
insb
loope
dec
lods
push
push
mov
out
ficoml
pop
shll
or
cmp
inc
aaa
stos
incl
mov
dec
push
or
jo
dec
dec
mull
xchg
mov
mov
mov
sbb
ret
jo
ja
or
test
in
cmc
pop
lcall
mov
sbb
xor
test
and
or
mov
mov
inc
lds
les
repz
push
pop
mov
orb
fwait
loopne
push
lcall
lds
push
in
pusha
insb
daa
jl
divb
nop
add
je
je
repz
ret
je
imul
or
adc
mov
popf
add
lahf
mov
sub
mov
and
outsl
mov
and
jne
and
mov
mov
in
mov
jns
mov
cs
sub
add
push
xlat
scas
mov
icebp
es
lods
sub
push
adc
jg
add
inc
add
pop
test
dec
pop
or
incl
adc
add
cmp
ja
fstpt
lahf
mov
and
xor
clc
in
ds
and
jp
fisttps
pop
in
and
adc
xchg
movsb
push
aaa
outsb
aaa
lea
imul
ret
lods
add
rcll
dec
mov
lods
or
leave
test
add
push
nop
rclb
pushf
mov
lcall
cld
orb
ss
adc
fs
jg
xor
sbb
inc
sbb
push
xor
cld
lea
loop
and
std
pop
icebp
ja
les
cmp
in
mov
rorl
or
pop
add
lods
mov
jne
mov
lods
test
jmp
dec
jle
ds
out
aaa
mov
ret
cmp
xchg
icebp
fistps
push
pop
mov
rclb
xchg
loopne
je
aaa
outsb
das
mov
add
lret
cmp
leave
jle
das
in
call
mov
andb
hlt
lcall
cld
adc
enter
daa
test
pushf
sub
cmp
cli
jbe
ja
mov
mov
mov
rolb
in
lods
aaa
pop
sbb
outsb
xor
pushf
inc
inc
shlb
xor
scas
or
adc
dec
pop
sbb
or
push
xor
jne
fbstp
cs
inc
xchg
aam
rolb
test
out
add
cwtl
sbb
bound
lds
cmp
orl
aam
loopne
daa
subb
push
inc
js
fcoml
pop
pop
sub
sahf
sbb
mov
mov
adc
adc
or
nop
sub
add
inc
subl
out
inc
push
aam
int3
or
shrl
add
adc
mov
push
xchg
mov
shl
cwtl
inc
adc
loop
loope
and
adc
inc
or
adc
cmpsb
sub
hlt
add
bound
jne
fiaddl
and
cmpsl
sbb
ss
and
or
pop
or
notb
jae
lret
loopne
inc
mov
into
mov
scas
outsb
les
dec
mov
push
rorb
subb
sub
and
inc
push
ds
add
aas
mov
int3
lods
mov
adc
sub
sub
jmp
sub
insl
mov
rorb
in
add
test
cmc
push
lock
mov
arpl
shrl
mov
icebp
es
xor
and
stc
cltd
mov
sub
hlt
clc
add
dec
jno
mov
adc
mov
jle
inc
ljmp
mov
cld
adcl
adc
dec
add
push
add
shlb
test
fisubrs
dec
add
loope
sub
cwtl
rorb
popa
xchg
jp
adc
ljmp
add
xchg
mov
add
addb
inc
cmp
xor
sbb
adc
leave
cmp
push
dec
cmpsb
les
jecxz
xor
add
dec
into
mov
jo
iret
rorl
adc
jmp
add
sub
adc
cwtl
ss
bound
mov
adc
sbbl
add
inc
and
lea
push
inc
inc
in
or
sbb
xlat
ret
or
les
add
ret
cmpsl
jne
xor
and
sub
out
push
imul
mov
loop
xor
adc
jge
and
ja
xlat
pop
test
xchg
iret
jb
jmp
ja
cmpsl
sbb
int3
jmp
xor
mov
xchg
adc
aas
sbb
push
shl
jnp
ret
dec
and
cmpsl
push
push
mov
sbb
ret
in
mov
sub
jecxz
popf
insl
or
sub
add
push
inc
mov
test
inc
jnp
ret
ret
mov
mov
in
aam
push
mov
pop
and
adc
outsl
fiaddl
push
icebp
int3
and
movsb
out
cmp
adc
sub
in
push
cmp
jns
addb
adc
outsb
imul
repz
cmc
or
mov
mov
mov
mov
loopne
clc
xor
fs
insl
pop
imul
ja
stc
repz
push
xor
jge
pop
add
ficoml
mov
aam
push
and
xchg
ret
sbb
cwtl
jl
pop
mov
cmp
push
inc
mov
repnz
xchg
cmpsl
jo
insb
dec
test
in
shll
sub
aad
insb
outsb
sub
mov
mov
xchg
sbb
mov
mov
pop
lds
dec
hlt
mov
ds
dec
lea
jae
add
repnz
cmp
mov
loop
push
cmp
dec
sub
mov
in
insb
and
loopne
stos
push
xchg
inc
mov
cmp
sti
cmp
ja
hlt
scas
loop
cmpsb
push
into
mov
cmc
push
fiadds
test
xchg
bnd
push
push
inc
or
and
xchg
jp
cwtl
push
pop
pop
aam
push
and
insb
inc
in
loopne
cmovne
jmp
insl
xlat
pop
mov
mov
clc
movsl
movsb
inc
loope
or
mov
call
jbe
aaa
outsl
dec
mov
cmc
fcmovb
data16
in
add
scas
sbb
or
xor
inc
insb
or
stc
ret
push
and
mov
nop
repz
mov
rorb
ffree
mov
rorb
add
in
adc
or
and
xchg
inc
int3
sbb
lods
jns
lds
xchg
or
shr
fidivl
jmp
cs
in
push
sub
emms
jns
icebp
call
push
xchg
ds
push
mov
data16
imul
inc
mov
pop
sbb
lcall
push
push
fcmovbe
lcall
popa
cli
mov
into
into
push
jg
and
and
pop
loopne
mov
lea
xchg
jne
mov
lods
add
inc
adc
pop
xorb
mov
cmp
es
push
cld
dec
sbb
jb
jo
mov
xor
test
adc
push
dec
add
sbb
test
cli
clc
fstpt
dec
cmp
mov
mov
inc
push
inc
mov
test
xor
add
sub
decl
mov
sub
cmpsb
outsb
ljmp
out
lahf
lcall
inc
mov
movsb
adc
enter
xor
xchg
and
sti
call
das
in
push
mov
cmp
push
pushf
jno
jl
xchg
in
or
hlt
lock
jnp
or
aam
into
fucomip
inc
pop
and
loopne
sbb
dec
cld
call
inc
jp
push
sub
js
cmp
sub
fists
sti
push
int3
pop
mov
hlt
jbe
mov
and
cmp
cld
sbb
push
xchg
jmp
cmp
and
xchg
or
fstpl
lock
or
add
add
or
in
test
mov
jo,pn
stos
out
mov
pop
fs
stc
add
push
in
orb
sahf
jecxz
ret
dec
xchg
rolb
inc
repnz
mov
cltd
add
sbb
decl
add
xchg
dec
and
mov
dec
or
and
ret
mov
sti
ljmp
cld
adc
mov
xor
sbb
les
xlat
lock
or
fadd
ds
fistpl
insl
inc
bound
add
pop
or
ss
xchg
cmp
and
aaa
and
jne
sarl
push
in
imul
push
sbb
pop
int3
pop
cmp
mov
sti
mov
out
xchg
jbe
jns
pop
rolb
idiv
incl
fistps
pop
inc
cmc
jg
sbb
les
xchg
sub
or
ret
out
cmpsl
leave
and
fcmovnbe
sub
das
popa
imul
cwtl
roll
mov
inc
xor
sbbl
mov
add
add
add
or
cmp
outsb
xor
je
cld
fistpll
or
inc
pop
mov
aad
mov
mov
sbb
nop
push
inc
push
mov
insl
outsl
ljmp
lods
mov
into
shll
cli
inc
mov
push
rcll
push
add
shlb
cld
ljmp
int3
sahf
add
mov
fcoml
shlb
scas
and
pop
out
push
add
adc
sti
incl
mov
adc
inc
mov
or
outsb
ficoms
mov
xor
dec
push
lea
sarl
orl
jp
enter
xor
cli
jg
or
ljmp
sbb
add
scas
outsb
or
sbb
add
sarb
sbb
and
lds
sar
outsl
lds
inc
lock
dec
lret
add
les
push
adc
loopne
or
scas
add
sub
incl
lods
idivl
and
xchg
add
scas
adc
in
and
mov
ljmp
loop
mov
fdivl
mov
adc
scas
js
aaa
loop
add
sub
jo
pusha
mov
pop
repnz
mov
xchg
sbb
jp
push
mulb
addl
incl
add
or
push
jp
movsl
addr16
mov
push
enter
jns
pushl
out
pop
pusha
dec
mov
xor
loop
push
in
or
sti
das
cld
fists
jo
push
and
mov
hlt
jae
cmp
add
les
sbb
outsl
stos
mov
mov
push
or
sahf
sbbb
in
sub
mov
out
xor
incb
out
roll
sahf
lds
cwtl
cltd
inc
pop
add
pop
fstp
dec
neg
fistps
jo
jl
mov
cwtl
imul
rcrb
movsl
fnstcw
or
clc
or
cmc
inc
add
add
movl
xchg
mov
xchg
pop
or
lcall
pop
outsl
mov
pop
jb
mov
cmp
and
add
rcl
nop
and
dec
testb
adc
pop
inc
jge
ljmp
ljmp
adcl
insl
xor
mov
and
repnz
or
adc
inc
xor
push
fnop
cwtl
jl
adc
int3
mov
addr16
mov
negl
and
mov
push
loope
sbb
jne
adc
hlt
insb
mov
mov
fcoml
mov
fsubl
or
fcompl
sbb
in
cld
daa
sbb
out
dec
int3
inc
pop
cmc
dec
add
outsb
fdivr
inc
sbb
shll
fadds
cmp
in
sbb
dec
push
add
inc
add
fsub
and
push
shrl
jg
mov
daa
shl
rol
testb
lods
out
pop
mov
sbbb
sahf
fwait
movsb
cli
pushf
adc
xor
inc
add
daa
push
imul
sbb
inc
push
and
imul
add
and
and
ja
and
pop
mov
fadds
popf
pop
xor
jle
clc
cmp
ja
out
int3
add
shll
push
fsubrl
clc
push
push
add
aad
cmp
adc
cmp
and
add
mov
negl
mov
int3
repz
call
in
jmp
mov
add
addb
mov
or
push
clc
orb
or
cli
icebp
xchg
and
push
push
inc
or
mov
push
int
fs
mov
pusha
inc
scas
sub
cmovl
and
dec
inc
call
lea
mov
repz
dec
gs
mov
rcll
call
mov
incl
cmp
dec
lret
inc
lcall
lcall
lahf
jle
and
inc
lcall
inc
icebp
cmp
adc
jno
pop
je
mov
cld
jg
enter
sub
push
sub
add
pop
loopne
inc
mov
clc
pushf
and
enter
shrl
jmp
loop
bound
add
jb
clc
imulb
sbb
les
push
or
jo
fildll
cltd
jg
sub
decl
mov
push
cmpsl
les
leave
rolb
test
addl
push
stos
ss
lds
cli
dec
les
and
inc
xorb
add
rorb
push
mov
sahf
jb
sbb
cmp
fstps
icebp
and
push
les
xor
cmp
jno
xor
cli
sbb
cmp
add
mov
fiadds
cwtl
adc
push
sub
insb
lahf
loopne
xchg
repz
lret
jnp
popf
ret
rorl
pop
movsb
push
insl
or
add
addr16
and
insb
ret
xchg
call
mov
std
fnstcw
ss
mov
mov
sbb
add
decb
sti
adc
aaa
lea
je
subb
sbb
mov
sub
stc
cli
sarl
push
mov
cmp
std
sbb
fiadds
mov
jecxz
add
cmp
push
push
cli
insb
xchg
pop
aaa
repz
pop
fldl
rcrl
mov
icebp
cmp
fucomip
inc
mov
scas
mov
cmp
jg
sar
loopne
aam
imul
mov
add
ret
rol
mov
cld
in
lahf
push
sub
xchg
ds
cmc
sub
push
inc
add
cmc
sub
push
jge
pop
decb
mov
cltd
xchg
sbb
mov
push
sbb
add
fbld
inc
outsl
test
dec
and
fnstenv
mov
mov
pop
mov
or
and
inc
pop
idivl
xchg
add
cmpb
pop
inc
pop
movsl
jns
arpl
lods
inc
cs
aaa
pop
add
sub
mov
inc
es
cmpsb
mulb
jg
xorl
xchg
jl
dec
inc
fildl
dec
dec
aad
mulb
scas
shl
pop
adc
xor
incl
push
push
xchg
je
andb
jns
aaa
repnz
sub
push
addb
mov
dec
mov
add
add
scas
movsl
add
imul
daa
aam
cld
incb
pushf
js
js
decl
mov
jae
and
ret
sub
xchg
dec
sbb
and
add
fisubrs
xchg
add
test
imul
cli
and
cmpsb
xor
or
fnstsw
push
xorb
fst
mov
pop
sbb
push
ret
push
vmovshdup
sub
fldt
ret
pop
pop
icebp
push
xchg
clc
pop
add
or
jno
push
aam
rclb
adc
jo
pop
fwait
mov
pop
insb
sarb
dec
notb
das
bound
push
sbb
aaa
ret
mov
sbb
lret
or
daa
inc
jl
mov
mov
daa
popf
dec
mov
insb
cwtl
clc
pop
lcall
push
mov
mov
sbb
jge
mov
lods
sbb
pop
js
lock
ficomps
lea
dec
and
sbb
xor
test
in
pushf
mov
icebp
shr
sbb
ljmp
add
aad
mov
dec
pop
lea
jp
push
mov
push
cmp
xchg
add
call
cli
jmp
imul
and
das
jl
xor
sub
push
push
push
sub
insb
mov
rcrb
push
ret
dec
popa
dec
cmp
orb
lds
pop
push
inc
lret
mov
jo
add
inc
pop
adcb
lock
dec
inc
int
inc
lahf
sbb
lds
cltd
dec
in
decl
xchg
aad
imul
mov
and
outsl
arpl
stos
aas
js
imul
data16
lcall
aad
data16
movsl
adc
into
mov
addr16
xchg
in
std
arpl
scas
loop
fmulp
cltd
insb
lret
imul
in
les
or
mov
pop
js
or
push
mov
jle
repnz
rcrb
adc
mov
mov
mov
inc
cmpsb
jp
xchg
adc
rcl
js
pop
or
xor
add
mov
cld
rorl
inc
cmpsl
mulb
sbb
ret
jge
xor
in
add
fstl
or
in
adc
mov
imul
ja
mov
sub
loopne
loopne
add
outsb
jb
add
dec
outsb
sub
lea
add
gs
sbb
inc
pop
cwtl
mov
outsl
xor
jmp
lea
mov
ja
jl
pushf
adc
or
popf
aam
pop
lar
inc
sbb
and
lds
lcall
add
jne
jecxz
iret
and
lea
sar
loopne
mov
icebp
roll
push
lods
das
mov
xchg
xor
pop
add
mov
inc
ljmpw
push
sti
dec
gs
cmpsb
jl
push
iret
sbb
adc
lret
mov
and
mov
insl
mov
cmp
xchg
cltd
sbb
shl
xor
adc
sbb
test
adc
cmp
fidivrl
mov
stos
ss
ljmp
cld
jle
cmp
lock
gs
and
mov
dec
js
das
lock
adc
cmp
jb
outsl
or
push
inc
mov
arpl
sbb
lods
xor
push
roll
imul
std
sbb
jg
adcl
popf
aad
inc
fisttpl
movsl
xchg
cmpsl
mov
push
incl
rclb
xor
test
mov
push
fs
sub
pop
sub
inc
popa
pop
ret
pop
loopne
sub
pop
outsl
xchg
int
pop
mov
aam
aad
adc
fs
outsl
das
cltd
mov
adc
jmp
pop
lret
aaa
js
or
jb
mov
sbb
mov
cmp
adc
test
inc
arpl
loope
push
adcb
shlb
fwait
xor
jge
sbb
adc
add
sub
jge
mov
xlat
cs
movzwl
in
repz
pop
mov
cs
int3
imul
pop
movsb
call
test
xchg
sub
pop
cmp
frstor
loop
fdivl
mov
sahf
sbb
inc
loope
or
jg
and
mov
cli
lock
int
dec
lds
loope
cli
push
hlt
add
cmp
and
or
test
shl
push
jg
jg
roll
or
pushf
mov
or
scas
adc
add
dec
pop
cmc
clc
push
stos
scas
mov
jo
xor
or
cmc
push
fwait
aaa
jno
add
nop
in
test
push
and
shlb
xor
rorb
rcrl
shrl
push
adc
add
xchg
mov
or
add
je
xor
fisubl
sahf
push
mov
adc
inc
mov
cmp
xorl
pop
loope
xchg
cmp
push
push
push
roll
js
lret
inc
jb
orb
add
mov
cmc
imul
in
ja
or
dec
cmp
jne
sbb
adc
mov
loopne
mov
cmp
loopnew
enter
push
clc
subb
cltd
xorb
mov
dec
lock
pop
mov
adc
push
push
mov
je
lock
dec
dec
push
inc
mov
div
mov
push
xchg
lea
loop
sbb
cmp
enter
mov
pop
les
data16
incb
cmp
hlt
add
or
scas
rcrb
adcb
daa
cmp
mov
pop
lahf
rcrl
daa
dec
sub
or
popf
xchg
je
add
jecxz
in
scas
addb
test
xchg
mov
cld
sahf
mov
ret
lea
adc
add
add
push
xchg
inc
dec
add
adc
or
scas
inc
pop
andl
cltd
lret
sarl
sub
shl
int
push
cs
jae
add
loopne
inc
pop
mov
adc
ds
inc
loope
jg
push
icebp
pusha
xchg
sub
sub
mov
add
cmp
sbb
nop
or
push
pop
scas
mov
pop
cmc
push
mov
fisubl
push
adc
adc
sahf
fsubs
mov
inc
add
push
pop
mov
int
in
loopne
call
xchg
aam
jl
cld
push
insb
mov
in
push
int
lock
push
fidivl
je
mov
clc
and
and
fisttpl
fbstp
adc
add
sub
movsl
mov
or
add
outsb
jb
jae
push
or
lock
shll
add
inc
sub
add
inc
inc
jg
jno
mov
sbb
dec
and
sub
cmovo
add
push
lret
and
sarb
add
and
mov
adc
inc
adc
bound
aam
pop
mov
add
add
stos
pusha
mov
push
rolb
and
shl
or
lds
or
and
int3
xchg
outsl
cmp
mov
out
sbb
cmpsb
jecxz
inc
mov
std
js
jmp
arpl
mov
pusha
lock
pop
movsb
and
mov
adc
xchg
aaa
loop
mov
adc
sub
sarl
lret
das
icebp
fbld
mov
movsl
stos
sub
fs
jo
jecxz
cmpsl
loopne
mov
add
sub
icebp
dec
dec
xor
stos
jo
test
pop
mov
cld
push
xor
add
pop
mov
dec
jg
icebp
push
sub
fwait
push
or
jno
dec
fimuls
incb
xor
adc
out
sub
repnz
mov
mov
add
enter
mov
incb
or
ja
add
or
inc
mov
pushf
lcall
ds
dec
daa
test
leave
add
fisttpll
jns
or
jl
jl
sbb
les
adcb
adc
outsb
hlt
and
xor
cwtl
xchg
sbb
call
mov
mov
add
mov
mov
xchg
adc
and
inc
mov
mov
incl
mov
sub
out
mov
mov
pushf
pop
es
mov
addb
jg
mov
or
or
in
iret
pusha
and
add
push
in
cmpsb
clc
inc
movsb
inc
insl
or
dec
inc
mov
push
mov
xor
rep
xor
lcall
inc
mov
push
or
or
rcr
or
pop
clc
insb
scas
pop
pusha
jmp
les
pop
mov
test
jg
mov
xchg
test
leave
mov
arpl
pop
mov
je
lcall
ja
es
mov
aas
test
xchg
dec
fcoml
cmc
jg
inc
ljmp
sbbb
inc
inc
mov
das
shl
clc
ficoml
jnp
xchg
cmp
fildll
jmp
out
int
or
jle
das
jg
das
shlb
pop
dec
imul
cli
incl
mov
out
stos
push
inc
pop
pushf
inc
cmp
stos
sbb
mov
addb
lock
push
mov
push
sahf
inc
in
nop
sub
dec
cmp
icebp
xchg
mov
jbe
dec
dec
mov
ljmp
adc
push
inc
rolb
pop
sahf
popl
mov
lods
pop
js
or
push
repnz
clc
jg
xchg
ftst
push
xchg
push
test
cmp
ja
adc
fdivp
inc
inc
xchg
jae
repz
push
and
mov
call
sti
pop
cs
xor
das
cmc
pop
orb
pop
pop
je
aaa
loopne
or
cmp
cld
sub
insl
cmp
cmp
push
fs
call
ljmp
mov
push
push
inc
mov
pop
fadd
jae
lods
das
xchg
push
push
out
test
xchg
or
pop
add
mov
jg
cmp
icebp
repnz
fisubrs
mov
test
sahf
jge
call
mov
daa
jae
in
call
or
int
bound
ljmp
push
mov
push
decl
pop
ss
adc
cmpsl
jge
lar
pushl
sbb
xchg
inc
bound
popl
addr16
cmp
xchg
cs
cmpsl
ds
add
pop
mov
icebp
test
inc
sbb
sub
or
pop
int3
cld
jo
loopne
lods
fcmovb
jo
mov
ret
jmp
mov
cli
and
cmpb
add
ficoms
lock
mov
pop
lock
cmp
dec
loop
test
roll
push
fcom
sbb
stos
adcl
aaa
addr16
mov
fdivs
jge
push
add
dec
lret
and
daa
pop
push
push
cmpsb
mov
pushf
cmp
fadds
ror
sub
dec
adc
into
fs
sub
test
addr16
and
dec
add
les
enter
inc
pop
shl
or
pop
pop
add
test
and
xchg
jbe
pushf
cmc
inc
loope
add
pop
xor
scas
sub
add
hlt
insb
add
mov
add
add
cld
into
add
xor
mov
fidivrs
fs
fnstsw
cld
mov
test
cmp
inc
xchg
or
and
lock
mov
add
mov
dec
mov
or
repnz
add
jecxz
push
mov
daa
adc
cmp
push
clc
shl
out
ljmp
xchg
jg
mov
or
aam
mov
lock
loope
mov
inc
aas
mov
inc
xlat
pop
sbb
push
lock
sarb
out
out
sub
shlb
sbb
data16
aam
cmc
mov
pop
aam
adc
add
ret
add
inc
in
loop
les
or
or
add
xorl
lcall
sub
add
insb
daa
adc
cs
cmovl
out
pusha
jl
add
xchg
mov
xchg
aad
cld
jg
cld
sub
dec
sbb
stos
sbb
out
push
sbb
fs
xchg
sub
mov
cmp
xchg
scas
outsb
xor
xchg
insb
adc
and
cli
sbb
sbb
inc
mov
shr
mov
add
jnp
add
cltd
iret
cmp
lods
pop
sub
adc
test
adc
fsubl
mov
ljmp
mov
out
sub
fisttps
lea
cwtl
fldl
pop
imul
mov
mov
mov
sub
mov
neg
or
or
jge
cmpb
outsb
adc
pop
out
data16
pop
dec
aas
cwtl
aaa
ss
add
adc
mov
mov
mov
sbb
or
out
mov
xchg
jo
out
in
je
pop
cmpsl
cwtl
dec
cmp
sbb
jge
inc
push
and
sub
cmp
fidivl
idivl
mov
or
add
mov
adc
jmp
xchg
stos
ds
loop
pop
aaa
mov
push
push
mov
sub
ljmp
jae
mov
mov
stos
cltd
inc
adc
loope
aam
fcompp
pop
fadds
das
fucomi
sub
rolb
mov
test
jp
ja
push
xor
jne
adc
or
mov
sbb
icebp
jp
mov
adc
adc
dec
repz
call
adc
fimuls
into
sahf
mov
pop
into
loop
neg
pop
and
sbb
add
mov
cmp
sub
adc
mov
shlb
enter
xorl
fwait
mov
inc
mov
jle
ja
sub
les
xchg
sub
jl
test
push
cltd
popf
push
and
add
inc
pop
jmp
mov
adc
lret
adc
adcb
nop
test
icebp
cs
bound
push
imul
pop
rclb
outsl
mov
stos
lds
pushf
repz
cmc
gs
test
lahf
push
adc
movsl
orb
or
inc
aaa
mov
sbb
pushl
push
mov
push
dec
movsl
int3
mov
rol
addr16
mov
add
les
mov
adc
sbb
or
ds
scas
roll
ret
add
bound
sbb
out
popa
sub
sbb
pop
mov
and
fs
jo
mov
xor
into
pop
xor
mov
scas
adc
add
scas
sbb
jb
or
movsl
pop
xor
add
add
lret
icebp
sbb
mov
clc
pop
cli
js
xor
or
das
repz
mov
push
sub
outsl
and
jg
jg
in
outsl
daa
jle
sbb
cwtl
das
lods
sub
lea
xchg
inc
decl
dec
dec
gs
adc
pavgb
jno
or
adc
cmp
call
mov
call
mov
ret
call
ljmp
jno
cvtps2pi
add
inc
test
jne
pop
ss
outsb
jg
iret
add
mov
push
sub
cmp
jge
std
fcoms
inc
cmp
inc
loopne
ss
dec
idiv
cmp
iret
lcall
in
push
mov
test
inc
mov
lock
mov
xchg
icebp
and
dec
jmp
scas
pop
or
add
sub
dec
outsl
stos
decl
jmp
nop
xchg
sbb
and
insl
outsb
scas
or
arpl
add
lea
lahf
cmp
adc
xchg
add
ss
fs
cli
ja
or
mov
jbe
and
sbbb
add
js
aad
pop
add
jne
loope
outsl
or
xlat
leave
adc
sbb
cli
testb
filds
cmpsl
xlat
add
lea
mov
push
push
or
lcall
or
mov
jg
mov
xchg
or
aam
loope
outsl
test
mov
lea
cmp
mov
add
notl
mov
stos
jge
sti
aam
sbb
insw
test
push
mov
ja
mov
or
mov
or
fdivrl
outsl
inc
sub
jne
shr
fs
ret
test
add
pusha
stos
pop
jecxz
fmull
inc
add
xor
inc
ffree
jg
std
sbb
sbb
cmpsl
dec
ret
adc
cmpsb
sub
jecxz
outsl
hlt
scas
insb
mov
push
mov
das
cmc
add
lock
incl
repnz
inc
call
lods
cmpb
push
mov
stos
sub
lahf
pop
enter
add
inc
add
rcr
in
cltd
rolb
aam
aad
mov
xchg
jb
rcl
ss
imul
mov
jb
test
push
push
pop
fcoml
gs
add
mov
add
insl
call
out
mov
and
cli
daa
inc
xchg
or
icebp
test
popa
shl
pop
add
xor
or
int3
add
pop
mov
adc
ret
mov
add
jmp
mov
mov
into
jecxz
add
mov
mov
sti
ja
pop
bound
outsl
mov
ret
inc
lds
inc
sub
and
jl
mov
xlat
jg
call
test
add
pop
psubd
aas
movsb
add
push
nop
fs
jl
ret
mov
push
push
testb
cmovnp
or
cwtl
or
cmp
pushl
pop
push
push
ja
or
loope
add
add
daa
fldcw
invd
out
cmpsb
clc
loopne
call
cmp
add
inc
push
and
pop
add
xchg
fldl2e
std
jno
icebp
push
mov
sbb
ss
dec
cmp
pop
ja
pop
fdivr
mov
lret
hlt
insb
xchg
pop
mov
inc
in
jecxz
push
sub
jnp
jge
out
adc
adc
enter
mov
in
mov
mov
cmp
dec
in
mov
cmp
sub
mov
dec
mov
fisttpll
js
out
mov
mov
maxps
push
inc
mov
adc
add
mov
mov
xchg
out
pop
xchg
inc
mov
lock
sbb
sbb
test
out
fdivrs
cmp
cmpb
cwtl
mov
in
mov
aaa
sbb
xor
lods
and
jne
negb
aaa
pop
std
dec
popf
mov
js
jg
push
mov
adc
dec
shll
rcr
pop
ss
xor
ficoms
jno
sbb
sbb
dec
movsb
inc
negl
adc
sbb
fisubrl
pushl
jbe
gs
inc
paddusb
imul
or
mov
mov
cmp
xor
mov
maxps
jae
adc
rorl
ret
in
divb
mov
mov
jno
sub
pop
xchg
sub
test
mov
push
jecxz
pop
dec
lea
push
sub
and
xor
mov
pushl
adc
add
int3
es
rcr
and
inc
xor
not
outsl
adcb
mov
xlat
paddusb
jge
lods
pop
cld
and
out
pop
push
pop
adcb
aas
out
pop
sub
cmp
adcl
add
aas
xrelease
cltd
pop
int3
cmp
aaa
xor
add
xor
loope
mov
hlt
jns
arpl
push
mov
adc
in
test
lods
decl
outsb
das
fisttps
sbb
out
stos
and
add
pusha
sbb
cmpsl
pop
mov
jmp
fildl
je
or
mov
jne
fists
mov
inc
add
insb
icebp
jg
or
or
int3
cmp
test
cmp
mov
enter
shll
xchg
jle
pop
mov
and
iret
out
adc
pop
daa
inc
out
call
mov
mov
inc
dec
inc
sub
ret
pop
and
outsl
loop
lret
jne
pop
movsb
lds
out
idivb
mov
mov
mov
mov
out
xchg
fs
adc
filds
aaa
inc
in
insb
loopne
rcll
pusha
sti
testb
sbb
int
aas
jmp
xor
or
lods
pop
push
sub
ret
roll
call
popa
sbb
data16
adc
scas
jne
shlb
scas
stos
xchg
les
pop
pop
daa
call
loop
cltd
rcl
push
add
pop
push
in
push
rolb
movsb
cld
adcb
mov
sahf
imul
pop
nop
adc
inc
mov
pop
jae
cmpsb
and
loope
cld
mov
push
mov
sbb
mov
jg
pop
test
mov
jnp
push
xchg
mov
pop
sub
movsl
lds
or
mov
adc
incl
icebp
mov
jbe
jnp
sbb
xor
sub
ljmp
mov
or
jmp
fs
pop
adcb
xlat
inc
stc
push
or
pushf
gs
mov
dec
pushf
loop
push
jb
andl
dec
xor
xor
dec
filds
imul
data16
clc
or
inc
jbe
out
incl
lock
cmc
xchg
inc
dec
xor
ljmp
pop
mov
lea
out
dec
dec
and
in
dec
aad
mov
mov
xorb
stos
mov
in
mov
jecxz
add
jne
inc
sbb
sbb
pop
push
mov
adcl
inc
test
or
xchg
jg
imulb
insb
pusha
data16
stos
pop
dec
in
movsl
cmp
sub
pop
add
les
mov
mov
push
jns
mov
sub
fnsave
inc
es
ja
xchg
push
popf
nop
insl
dec
call
in
add
push
mov
add
mov
add
das
sub
dec
sub
xchg
les
jbe
add
add
pop
in
jge
mov
or
nop
xchg
popf
adc
pop
xor
mov
stos
cmp
or
sarl
loopne
inc
cmp
ja
dec
push
and
outsl
dec
mov
cld
test
add
xchg
mov
xor
inc
sub
pop
pushf
add
mov
sbb
or
push
sub
cli
aas
ja
mov
into
jmp
dec
push
in
adc
adc
movsl
mov
mov
aaa
cmc
mov
mov
sbb
les
lock
cmpb
arpl
and
mov
mov
clc
stos
pmulhuw
sub
cmpsl
mov
and
test
cwtl
and
lock
inc
test
imul
pop
mov
pop
fidivrs
fs
and
xchg
and
mov
push
mov
loope
lods
xor
or
std
cmc
and
loope
ret
xchg
lds
fisttpl
sbb
push
sbb
fs
pop
aaa
hlt
pop
hlt
sbb
sbb
pusha
pop
das
icebp
call
push
iret
in
popa
and
dec
xor
mov
sub
inc
insl
cwtl
cwtl
add
jge
and
mov
addr16
sub
mov
hlt
test
or
sub
adc
and
mov
jge
add
xor
cli
or
arpl
and
push
jns
xchg
push
inc
data16
scas
jo
xor
incb
pusha
orb
cmpl
fcoms
pop
out
dec
jmp
test
jns
ret
je
sbb
mov
lret
sub
fisubrs
movsb
xor
addr16
insb
sbb
inc
fdivrs
push
pop
test
aam
jmp
dec
pop
jo
mov
sub
xchg
pusha
mov
hlt
xor
call
fstpt
jmp
mov
arpl
push
repz
ret
jge
mov
data16
push
pop
shr
mov
adc
cmpl
pop
push
out
push
pop
or
sbb
jns
pushf
cs
and
pop
loop
out
loope
lret
outsb
push
push
outsb
jnp
fdivs
or
cmp
sbbl
ljmp
push
loope
outsl
into
sti
pop
xchg
jge
mov
out
jg
mov
in
mov
outsl
test
push
add
or
ljmp
movsb
mov
and
pop
push
icebp
sbb
sub
jmp
lcall
or
repnz
sub
push
adc
pop
sub
dec
repz
lahf
fimuls
inc
int3
push
cmp
adc
es
ficoms
and
idivl
sbb
mov
cwtl
mov
or
mov
mov
mov
adc
push
loope
add
pop
fisttps
jge
mov
sbb
test
out
movb
mov
popa
or
and
and
mov
fidivs
xchg
or
cmp
xchg
mov
test
inc
sbbl
xlat
cmpsl
out
shlb
jo
mov
pop
mov
inc
sbb
adc
ja
push
shrl
sub
jne
cld
add
jg
xchg
sub
jecxz
jae
js
inc
cmp
pop
dec
sub
in
sbbb
inc
pop
mov
popa
in
sbb
call
sub
std
popa
mov
push
lock
dec
shrl
in
movsl
pop
int
mov
sarl
fnsave
inc
stos
ss
push
imul
adc
iret
mov
aaa
jl
cmpsl
sbbb
mov
add
fmuls
pop
movsl
scas
sub
jg
sub
aas
adc
into
stos
out
inc
adc
leave
cmp
std
add
decl
mov
lods
mov
cmp
pop
fidivrs
push
popa
push
fwait
xchg
cltd
cmp
xchg
clc
jg
das
sbb
add
xor
pop
pop
loopne
test
sub
push
insl
sbb
sub
dec
cltd
fistpll
mov
clc
roll
jmp
jg
sbb
sar
cmpsb
cmc
add
xor
js
pop
inc
xor
push
andl
hlt
and
les
loope
std
sub
dec
repnz
insb
aaa
pop
mov
dec
cwtl
mov
es
hlt
outsl
lea
mov
add
jb
adc
ret
call
mov
lea
dec
loop
jecxz
sbb
sub
and
sub
rolb
cltd
push
cmc
std
cltd
cld
ret
ss
xorb
mov
test
test
jl
jo
mov
mov
xchg
xchg
sbb
ret
or
push
inc
decl
push
movsl
inc
pop
ret
outsl
shrl
jns
aaa
inc
lock
movsl
pushf
inc
push
pop
xchg
mov
jne
lahf
scas
scas
fcoml
decl
shld
aas
test
mov
ljmp
outsl
movsb
jmp
inc
bound
add
pop
jp
addr16
scas
jns
data16
lahf
cli
xchg
mov
scas
mov
cmp
mov
add
xchg
jb
repnz
ljmp
clc
jg
test
ret
loop
xor
call
aaa
cs
shlb
adc
and
test
cli
pop
push
push
and
lock
fwait
and
pop
sub
subl
mov
adc
push
pop
pusha
stos
xchg
xchg
dec
popa
mov
insl
jecxz
aaa
inc
fidivs
insb
mov
jne
loope
outsl
mov
xchg
incl
outsb
dec
dec
add
sbb
ret
fldpi
adc
mov
mov
mov
lret
push
movsb
mov
sarb
movsb
addb
ret
aaa
shlb
imull
clc
pushl
mov
js
shrb
rolb
pop
and
je
idivb
mov
rol
daa
mov
or
pushl
mov
or
daa
int3
dec
dec
ja
data16
and
inc
aas
mov
push
shll
xchg
jge
cmpsl
ljmp
loop
pop
jle
push
repz
and
jo
push
mov
mov
jge
xor
data16
ja
mov
fsubl
and
hlt
lret
sbbb
fnclex
test
das
sub
popa
cltd
les
mov
pop
xchg
xchg
sub
inc
mov
xor
pop
ds
sarl
std
jmp
and
adc
add
cltd
sbb
out
jg
ret
mov
mov
or
mov
les
xor
and
sbb
xor
andb
jg
lahf
testl
repz
rcrl
rorb
jae
pushf
je
fidivl
jb
sarl
inc
inc
ds
cld
cmc
outsl
fstpl
cwtl
and
dec
cmp
repz
icebp
lods
and
lret
inc
lcall
js
fisttpl
ljmp
jg
xor
shll
fdivs
ja
pop
cltd
jmp
pop
sub
lods
int
loopne
out
fstpl
cs
in
popl
fistpll
fs
inc
push
adc
xchg
arpl
mov
sub
cltd
sbb
jecxz
out
adc
pop
rorb
es
iret
inc
fldcw
pop
int
fstps
mov
jb
sar
lahf
push
push
insb
jl
xlat
jmp
sub
aas
out
mov
mov
dec
dec
lock
dec
aaa
push
and
pop
in
out
cmp
pop
mov
jg
mov
aas
nop
loopne
sarl
pop
push
add
sbb
jb
or
add
pop
xchg
jae
sub
sbb
loopne
jl
push
mov
mov
pop
vpunpcklbw
cmp
stos
dec
push
pop
cmp
leave
mov
cltd
xor
fsubs
out
scas
pop
mov
inc
jg
shrl
dec
and
mov
xor
cmpsb
js,pt
inc
out
ljmp
negb
or
sti
or
mov
jmp
stc
sbb
inc
test
inc
mov
pop
outsl
insb
cmp
sbbl
xlat
icebp
mov
add
and
sar
mov
insb
sub
movsl
loope
adc
xchg
lahf
mov
sub
push
testl
ss
in
inc
mov
mov
roll
mov
aas
insb
inc
cmp
inc
pop
push
lods
jle
test
decl
mov
lret
push
lea
inc
add
dec
adcb
adc
fidivl
aas
or
notl
icebp
call
sarb
rcrl
daa
or
inc
sbb
push
movsb
jae
bound
incb
push
or
xchg
bnd
scas
outsb
outsl
mov
xchg
sub
mov
or
cmp
jns
shrl
ja
mov
xor
dec
filds
repz
test
fs
test
pop
mov
xor
cld
cmpsl
mov
or
popa
adc
iret
sub
xor
cmp
mov
icebp
xchg
mov
mov
sbb
adc
out
out
outsl
clc
mov
aam
test
mov
ficompl
aas
dec
jmp
fs
jecxz
mov
and
clc
or
out
clc
mov
aad
leave
adc
cld
movsb
fsub
test
das
push
cmp
xor
mov
mov
ret
jae
mov
or
mov
je
loope
xchg
sbb
sub
pop
jmp
pop
pop
inc
xchg
sbb
dec
add
inc
aam
pop
add
les
cmp
add
outsl
mov
or
inc
xor
mov
mov
jne
or
jno
sub
fdivr
leave
inc
subb
movsl
lcall
outsl
inc
push
outsb
push
push
push
and
xchg
nop
rorl
pop
mov
mov
mov
aam
push
arpl
push
inc
mov
gs
adc
stc
jno
and
dec
lock
xor
stc
adc
inc
xchg
mov
lcall
jp
aam
shll
adc
adc
fsubrs
je
inc
popa
xchg
aaa
ret
sahf
jo
mov
int3
push
ret
sub
mov
or
sti
mov
push
mov
mov
test
ret
inc
in
sbb
and
lods
test
dec
push
sbb
mov
cld
mov
or
inc
popa
rcrb
push
sub
mov
mov
jg
jbe
adc
out
popa
and
dec
sub
push
dec
daa
test
jge
mov
loope
jg
mov
fsubs
xor
gs
push
inc
push
pusha
hlt
enter
push
mov
pop
repz
xor
pop
decb
out
outsb
push
aas
pop
pop
sub
or
cmp
stc
cwtl
shlb
sti
divl
lock
mov
pop
sti
jmp
out
mov
xor
lock
and
jo
outsb
gs
je
mull
cli
sub
xlat
in
shrl
hlt
out
pop
cmp
into
js
sub
mov
or
sub
mov
mov
mov
add
andl
cli
outsl
push
xor
mov
dec
lahf
jmp
mov
add
sub
sub
pushf
mov
cmp
les
stos
outsl
icebp
sbb
push
sub
rcrl
adc
mov
cmp
jae
insb
mov
xlat
aam
push
rcr
lock
sbb
mov
push
sbb
int3
add
js
jecxz
and
mov
mov
dec
inc
xor
dec
rcrb
add
add
inc
pusha
and
mov
pusha
mov
notb
add
fisubrl
test
push
xchg
lret
push
adc
xor
ret
mulb
dec
and
sub
or
stos
inc
jnp
pop
sub
and
sbb
jb
mov
filds
lea
pop
in
jecxz
nop
adc
mov
lock
and
cld
push
sbb
jne,pn
sub
xor
mov
inc
mov
outsl
dec
inc
push
das
es
js
or
cmpsb
nop
add
popa
jmp
inc
inc
inc
in
fisttpl
jp
pop
call
mov
fldt
fwait
aas
xchg
cs
adc
pop
outsb
mov
das
mov
out
jno
loopne
adc
insl
xchg
or
adc
push
imul
ret
clc
aas
ss
fisttpll
in
mov
mov
xchg
mov
push
inc
mov
loope
sbb
mov
rorl
cmp
mov
in
mulb
mov
aas
and
mov
mov
test
in
rorb
xlat
or
hlt
adc
das
sbb
and
xor
and
push
mov
mov
das
cwtl
imul
adc
loopne
aas
and
jne
and
jmp
das
jg
inc
js
xchg
pop
sbb
scas
jp
pop
push
cwtl
pop
sbb
call
inc
jge
fdivrs
adc
mov
mov
loopne
pop
lock
adc
cltd
bound
sbb
mov
or
sbb
jl
inc
hlt
test
enter
xor
sbb
add
pop
jae
das
ds
repnz
cmp
pushf
xor
push
pop
xorl
adc
lea
xchg
jecxz
leave
xor
push
pop
loopne
jl
sub
cmp
xlat
cmc
xor
pusha
inc
in
dec
mov
adc
add
dec
add
jp
inc
call
daa
mov
ds
fmuls
xor
inc
fldcw
add
or
loopne
adc
add
push
adc
icebp
sub
call
fildl
inc
aam
lret
adc
mov
lret
inc
cmp
addb
fsubrl
loop
xchg
cld
orb
and
add
adc
inc
dec
in
sub
cmp
push
push
pop
call
add
popf
push
jge
inc
lods
sub
mov
sub
rcr
cmp
sbb
inc
fists
daa
fdiv
int
stos
les
dec
inc
sbb
call
cmp
fmuls
add
aam
adc
fistpl
xor
aam
sub
and
adc
mov
lock
sarb
push
add
or
or
sbb
fimuls
add
fs
testl
xchg
notb
nop
xchg
test
rcll
pop
rcrb
fisubl
js
shll
adc
add
or
add
sbbl
xor
shl
and
ret
in
imul
and
ficomps
xchg
js
movsl
mov
in
andl
out
adc
push
cmp
pop
add
aam
rorl
and
outsl
mov
and
fs
pop
add
add
mov
lock
xor
dec
cld
mov
inc
jmp
and
mov
inc
insl
sti
dec
adc
sub
adc
pusha
push
lock
pop
add
or
test
ss
mov
pop
jp
sbb
adcb
cmpsl
mov
and
dec
and
inc
popa
mov
rcll
lret
xchg
imul
and
xchg
das
loopne
xchg
adc
and
out
je
push
or
pop
hlt
daa
fisubrl
sbb
mul
in
in
push
loopne
push
mov
jg
cli
sbb
add
movsl
sub
or
xchg
pop
inc
nop
mov
hlt
js
or
dec
int
or
jb
xor
dec
xchg
mov
mov
add
int
aas
cld
dec
push
add
mov
lahf
sbbl
dec
mov
xor
sti
sbbl
add
in
or
rorb
arpl
or
std
adc
mov
push
sbb
daa
add
xor
lcall
push
adc
sarl
jbe
or
jns
add
pop
loopne
fnsave
sti
mov
test
cs
into
sbb
lahf
sub
jg
pop
jl
dec
xor
dec
mov
jp
and
fstl
pop
call
add
call
push
popa
stos
sbb
lret
and
mull
ds
or
adc
es
addl
aaa
andb
push
push
notb
add
das
jo
jl
push
cld
mov
jae
into
test
mov
sbb
imul
ffree
sbb
fs
pop
mov
lods
dec
sbb
push
add
sub
sub
aaa
jno
and
sub
sub
mov
inc
pop
adc
push
sub
sbb
cwtl
mov
add
loopne
shlb
mov
push
lcall
cwtl
cmp
sub
fsts
cwtl
fistpll
leave
jl
loopne
shrb
adc
mov
jle
pop
jo
cs
add
cmp
and
fdivrs
dec
and
sbb
mov
dec
cld
repnz
jb
leave
mov
fiaddl
jo
lods
push
sbb
dec
xchg
xchg
cmc
push
xchg
mov
pop
sarl
xchg
loop
adc
mov
insl
das
mov
or
fwait
xchg
test
js
mov
jne
mov
mov
sbb
mov
mov
fwait
adc
jo
outsb
mov
xor
xchg
xor
jnp
sbb
jl
ja
mov
push
push
or
xchg
mov
adc
mov
inc
shrl
in
mov
sbb
jno
aaa
aam
les
jne
out
stos
inc
lods
ret
dec
and
pop
clc
cmp
out
repz
fldenv
pop
cmpsl
adc
mov
repz
ret
fldl
xchg
fiaddl
adcb
fsubr
outsl
mov
adcl
clc
call
sbb
add
push
mov
push
adc
icebp
jno
fwait
push
loopne
pop
data16
and
sbb
inc
les
insl
jbe
stos
add
lret
add
add
adc
test
incl
or
cltd
addb
loopne
loope
push
fiaddl
pusha
loopne
push
adc
verr
add
loop
and
mov
push
add
pop
cli
mov
gs
scas
or
or
xchg
gs
es
arpl
mov
psllq
mov
lods
test
fucomip
sbb
ljmp
jno
push
xlat
and
sub
hlt
iret
ficompl
sbb
sub
leave
xor
dec
adc
add
arpl
cmp
mov
mov
notl
mov
enter
out
and
in
add
cmp
adc
lea
push
mov
mov
cld
ret
sbb
push
out
push
sub
jns
outsb
mov
push
daa
mov
out
sub
ljmp
xor
mov
loop
mov
orl
dec
loopne
mov
sub
adc
xchg
jp
jmp
pop
cmp
jle
out
or
pop
jno
pop
jb
lock
lods
xor
std
cltd
mov
push
xchg
or
cs
out
mov
dec
inc
cmpsl
fnstsw
inc
leave
loope
mov
clc
inc
das
mov
je
je
inc
pop
sub
ret
mov
mov
xchg
leave
sub
dec
pop
jne
ret
insl
out
jge
std
filds
cmpsb
lahf
push
je
shrl
sub
std
add
sti
pushl
push
add
push
out
je
add
ljmp
sbb
repnz
movsb
sbb
push
scas
ds
cld
ljmp
rclb
adc
jl
add
in
lcall
insl
and
jb
icebp
mov
xchg
sbb
imul
cld
daa
cmpsl
dec
mov
jbe
in
test
mov
add
mov
adc
jns
adc
xchg
in
dec
or
adc
inc
movsb
push
inc
aaa
push
imul
mov
jbe
js
inc
clc
out
mov
fs
mov
jnp
into
adc
scas
or
push
aad
loope
mov
insl
lods
lock
sbbb
jne
mov
out
bswap
ret
jecxz
popa
cmp
jle
aam
jmp
sarl
out
jae
scas
sub
adc
mov
clc
movsb
ficomps
negb
pushf
cmpsb
push
add
mov
jo
nop
js
fs
sbb
fwait
lcall
rcl
xchg
lods
cld
jg
jns
sub
push
mov
ret
std
push
cmpsb
cltd
inc
sti
xchg
in
mov
mov
dec
fwait
xor
out
sub
mov
xchg
gs
decl
sbb
iret
insb
add
pop
lea
pop
xchg
and
sub
jle
bound
sbb
lret
dec
inc
jo
int
cmc
mov
adcl
test
idiv
mov
sub
adc
mov
int
xor
pop
cli
decl
jno
push
sahf
fsts
dec
jo
mov
fxch
decl
jb
cs
xorl
int3
ljmp
ret
aaa
add
ret
scas
mov
lahf
push
jo
das
cmc
pop
leave
dec
xor
mov
mov
js
fcoms
lea
ss
fists
out
in
xor
mov
negb
and
lret
loopne
mov
roll
stos
repnz
pop
dec
icebp
dec
jmp
insb
xor
adc
sbbb
popa
add
dec
jmp
sub
fstpl
lcall
mov
xchg
fld
push
pop
jnp
sub
nop
addr16
fs
insb
adc
xchg
cmp
adc
sbbl
loop
icebp
adc
shll
xchg
xchg
and
adc
addb
adc
add
lret
and
aam
adcb
mov
sub
cltd
xor
add
xchg
mov
mov
inc
out
loopne
into
or
sbb
and
loopne
xchg
icebp
inc
add
hlt
and
mov
hlt
addb
jp
adcb
addb
imulb
inc
ret
and
adc
cmpb
or
inc
push
or
adc
repz
je
pop
clc
je
ja
push
xor
and
xor
lcall
and
and
cmp
rorl
mov
hlt
neg
mov
stos
sbb
sub
xchg
and
enter
adcb
ljmp
aam
test
pop
inc
or
hlt
xchg
subl
sbbb
imulb
jl
mov
lcall
repnz
neg
faddl
notb
outsl
sub
pop
mov
test
add
lods
pop
sahf
mov
mov
out
arpl
add
cmp
outsb
movaps
dec
push
mov
xor
dec
rcll
dec
imul
mov
cwtl
add
js
lock
test
push
or
nop
xor
loopne
stos
dec
aam
sub
inc
adc
sub
rcl
pop
add
dec
add
sbb
mov
adc
mov
add
testl
inc
mov
mov
outsl
scas
sbb
sub
pop
stos
dec
and
in
inc
inc
xchg
inc
dec
daa
stos
ljmp
out
and
adc
xor
jg
or
aam
sbb
icebp
and
stos
cmp
pop
add
rolb
lea
dec
aam
test
mov
dec
out
adc
dec
adc
push
test
xor
mov
inc
je
leave
sbb
scas
xchg
js
test
xchg
dec
ret
ret
stos
xlat
dec
cmp
or
push
sarl
repz
inc
add
jp
push
push
mov
inc
cmp
adc
xchg
test
inc
sbb
inc
jne
xchg
xor
jae
cld
sbbb
or
ds
and
dec
mov
add
loopne
insb
mov
cmpsl
xor
mov
sbb
push
push
xchg
cmp
add
rolb
fimuls
pop
add
movsl
pop
fimuls
mov
xor
jne
mov
or
dec
xor
inc
fstp
add
int
dec
in
movsb
nop
out
and
mov
test
mov
dec
add
mov
imul
sbb
jne
mov
lods
add
or
push
dec
mov
scas
fldt
movsl
or
clc
mov
fildll
addb
dec
jle
fwait
mov
mov
filds
push
shr
cld
in
in
pop
dec
push
push
aad
or
inc
sbb
cmp
movsl
adcb
mov
jnp
mov
insb
inc
adc
into
flds
aam
jne
xor
inc
jmp
add
mov
in
mov
add
xorb
xor
int
cs
add
add
mov
cmp
adc
lret
and
add
pusha
add
mov
lods
jo
addb
addb
lcall
xchg
mov
dec
jg
mov
xor
push
or
rclb
adcl
inc
adc
incl
cwtl
xor
dec
popa
and
int
pop
xorb
inc
mov
add
out
and
rol
int3
inc
les
and
arpl
inc
xor
hlt
mov
mov
sub
add
sbb
mov
out
movsl
or
cmp
xchg
push
jo
xlat
sub
ret
mov
push
sarl
jb
or
mov
addl
insb
and
nop
cmpb
jbe
fsubrs
push
repz
scas
or
pop
fwait
lret
ret
mov
inc
mov
lahf
add
xor
mov
or
add
out
push
gs
iret
lds
sub
outsl
push
movl
add
dec
flds
ret
push
adc
stos
push
insb
add
or
ja
cmpsl
rorl
pop
and
jg
hlt
cmpsb
in
jg
aad
pop
push
cmp
sbb
adc
dec
mov
dec
and
xor
sbb
push
adc
xor
dec
mov
addb
test
adc
rcl
ljmp
or
stos
mov
cmc
jae
xor
lock
or
ret
es
rorb
gs
inc
xor
jmp
mov
lds
je
adc
bound
out
jle
aaa
cli
add
push
pop
movsb
out
or
in
cmpsb
lret
pop
and
sbb
xor
push
add
add
cli
cmpsl
push
add
rol
mov
add
pop
inc
les
lock
adc
insl
test
mov
cmc
mov
pop
sub
ljmp
shll
add
push
stos
pop
dec
or
hlt
cmc
jmp
add
inc
in
ret
cmp
aad
cltd
pop
dec
in
inc
inc
std
mov
mov
xchg
push
jae
pop
push
gs
mov
outsl
les
fiadds
insl
add
cmpl
pop
mov
pop
sar
dec
jb
iret
test
push
dec
rol
push
aaa
dec
fldcw
lahf
jmp
inc
jne
mov
or
lcall
lea
xchg
pushf
fdivp
les
add
xor
fisttps
decb
dec
mov
inc
mov
incl
cbtw
je
pop
sbb
add
lret
xchg
pop
pop
loopne
rcrl
sub
scas
sbb
adcb
push
cld
fildll
adc
fsub
adc
rol
sbb
xor
sbb
pop
adc
mov
sbb
sub
add
fcoms
add
push
mov
ret
cmc
stos
add
lock
ret
push
sub
add
jns
mov
test
dec
cmpb
movsb
adc
push
cli
dec
push
test
aad
lods
dec
lods
fwait
mov
dec
sbb
mov
mov
mov
adc
xchg
mov
loop
xorb
lret
outsl
call
push
xchg
jo
add
push
out
out
push
call
mov
xchg
pop
dec
push
inc
loopne
shll
pop
ret
add
push
cmp
mov
call
test
cmp
mov
jl
loopne
and
dec
add
push
mov
test
inc
sub
leave
loopne
call
jle
xchg
mov
push
cld
pop
lods
dec
rolb
pop
or
pusha
imul
sti
decb
push
mov
dec
xchg
push
inc
aas
sbb
dec
mov
sub
aam
push
or
nop
inc
inc
incl
cmp
sub
dec
aas
and
add
mov
lds
outsl
lds
dec
xlat
ss
test
mov
cmp
test
cmc
ljmp
pop
cmp
and
enter
jmp
xchg
test
out
andl
inc
adc
cmp
inc
in
add
rcr
leave
adc
jecxz
adc
or
insl
mov
inc
mov
jp
pop
inc
push
jg
xchg
adc
adc
adc
les
icebp
leave
clc
cli
mov
sub
sbb
adc
inc
push
dec
xor
pop
xchg
fdivr
inc
ret
inc
push
adc
or
pop
fisttpl
xchg
push
faddl
xor
out
stc
xor
push
inc
orb
dec
shll
hlt
mov
push
in
push
in
fisttpl
mov
pusha
inc
pop
fcoms
xor
mov
sbb
inc
and
mov
sub
popf
sbb
repz
jg
adc
jge
or
sub
mov
mov
add
dec
and
push
roll
outsl
or
xchg
inc
rol
loopne
fistpll
mov
test
imul
lret
jle
rcrb
call
aad
pop
jecxz
cmp
daa
cmp
and
jo
stos
cs
sub
inc
mov
add
sbb
pop
mov
push
jbe
pusha
push
jo
cmp
cmp
push
andps
sbbl
xor
and
sbb
scas
imull
adc
xorb
inc
insb
fistl
shl
adc
call
clc
and
faddp
xchg
fistpl
call
push
scas
shlb
sbb
scas
mov
loopne
xchg
fisttps
mov
and
insb
xchg
xchg
or
xchg
rorb
add
addb
stos
mov
push
cs
add
push
cs
addl
andb
mov
cmp
cmp
adc
sub
cmp
push
mov
test
mov
iret
inc
je
str
xchg
jnp
sub
dec
mov
shlb
dec
loopne
inc
mov
mov
in
mov
in
loope
xchg
or
push
sbb
jl
in
and
mov
pushf
pop
push
xor
cmpl
xchg
pop
loope
xchg
mov
mov
lret
push
into
jge
adc
push
out
mov
push
ljmp
or
into
fldenv
rcrl
or
pop
inc
pop
test
cmpl
cmp
movsb
in
sub
call
clc
lods
jge
fistpll
pop
stos
loopne
inc
push
sbb
ret
in
push
dec
push
sbb
cld
cs
push
dec
mov
sub
jo
mov
repnz
lahf
sub
shll
cwtl
jne
adc
decl
pusha
sub
sub
and
push
ret
push
mov
ja
or
add
push
in
adc
or
jp
sub
ds
iret
cmpsb
dec
out
fistpll
mov
gs
or
inc
arpl
push
push
cs
fwait
add
out
jnp
mov
inc
clc
inc
cli
or
mov
imull
cmp
fdiv
fadd
iret
and
dec
or
stc
add
push
or
push
pop
sub
lcall
sbb
or
mov
or
aaa
dec
inc
cwtl
insb
push
or
push
test
cwtl
dec
adc
or
and
or
stos
pop
push
dec
xor
lds
cmp
sbb
iret
loop
xchg
and
dec
out
imul
pusha
adc
jle
or
stos
sub
lea
jg
ret
cmp
rolb
dec
sbb
lods
and
add
adc
xor
add
mov
mov
cmpsb
jp
lods
inc
add
push
and
pop
xlat
mov
cmp
ljmp
mov
or
mov
jmp
dec
or
fstps
shlb
inc
mov
sti
das
call
outsb
sub
dec
fidivrl
test
into
xor
add
verr
lcall
push
jo
pop
mov
add
lahf
and
insb
add
add
daa
sub
js
inc
cmp
mov
mov
and
add
sub
push
ja
rcrl
loopne
push
fsubrs
imul
cltd
push
adc
xchg
or
xchg
jecxz
and
hlt
xor
out
sub
and
cwtl
push
mov
xor
scas
rolb
cmp
pop
push
xor
mov
push
dec
sahf
push
out
mov
dec
test
lret
cmp
rorl
inc
js
imul
clc
adc
loopne
or
inc
push
pop
jo
mov
adc
adc
xor
cmp
mov
cld
xchg
jae
mov
adcb
pop
lahf
push
nop
sub
fiaddl
push
or
shlb
loopne
or
repnz
pusha
loopne
xor
add
mov
sub
aam
aad
or
pop
xor
mov
cmpsl
movzbl
and
pushf
adc
and
jl
aam
out
mov
or
popf
push
push
sahf
jbe
out
notl
incl
call
add
add
inc
add
incl
or
adc
inc
je
popf
jmp
push
add
push
xchg
inc
mov
adcb
out
pusha
inc
sbbb
hlt
pop
and
jae
arpl
cmp
jmp
mov
roll
test
lret
mov
leave
sti
sarb
ret
into
lock
add
stc
stc
or
fbld
dec
arpl
pop
or
jbe
dec
mov
mov
pusha
or
andl
xor
push
in
dec
jo
and
and
icebp
sbb
repz
pop
adc
icebp
mov
add
into
lock
push
cld
push
insl
sbb
outsb
fmuls
fcoml
inc
xorb
push
faddl
lea
out
push
push
dec
rorb
dec
cmp
adc
push
sbb
inc
mov
sub
mov
dec
orb
psrad
adc
fadd
dec
push
sub
mov
add
inc
popf
adc
in
xor
fiadds
jbe
pop
sbbb
hlt
or
enter
mov
daa
lret
stos
mov
loope
rcrb
sub
outsb
adc
mov
ljmp
add
push
xchg
jg
mov
or
addr16
movsl
mov
in
pop
dec
sbb
sbb
jmp
repz
or
add
jb
add
xchg
addr16
mov
dec
cltd
fistps
lea
mov
or
fildll
jg
mov
add
cld
negb
adc
xchg
fimuls
inc
jns
es
popfw
mov
or
and
mov
scas
mov
sub
lods
pop
mov
sbb
or
add
jno
or
or
fs
ss
das
test
in
mov
xor
mov
es
cmc
adc
addb
ljmp
inc
or
cmp
xchg
xor
or
insb
xchg
aam
and
xchg
xor
leave
pop
or
jg
fstl
mov
adc
nop
or
lods
outsb
cmc
in
inc
jbe
and
jb
sti
notb
mov
jns
je
fsts
sbb
mov
sub
aas
add
not
and
sbb
and
xlat
cmpsb
adc
pop
stos
and
out
cli
jb
stos
xor
push
xor
pop
add
ljmp
ret
mov
lock
xlat
adc
lret
mov
jp
test
rclb
push
std
add
mov
mov
jg
pushl
dec
push
es
push
decl
push
push
or
jecxz
int3
dec
add
fwait
out
je
inc
mov
mov
insl
call
push
pop
xchg
add
dec
inc
add
das
push
mov
out
adc
call
fsts
jg
mov
data16
fnstsw
je
or
jb
cmp
jo
pop
std
mov
js
xor
enter
push
inc
cld
das
inc
or
sbb
out
iret
push
fsin
or
sub
stos
ret
and
or
mov
dec
test
hlt
pop
inc
or
and
pop
push
jp
in
cmp
xchg
mov
movsb
or
sbb
or
or
jne
outsl
ret
nop
cmp
mov
sbb
inc
ljmp
push
rep
in
or
jno
mov
inc
les
pop
shlb
out
inc
subl
xor
add
loopne
push
mov
sbb
jb
std
inc
add
add
xor
loop
fildll
inc
pop
dec
iret
bound
cmp
xlat
stos
mov
jg
enter
xor
fildl
and
iretw
inc
test
inc
sti
out
jl
sbb
in
std
in
fldl
movsl
sub
add
sub
pusha
outsl
add
jne
sti
das
push
std
lea
shll
sub
push
mov
cmp
adc
mov
jb
clc
mov
or
popf
rcll
mov
adc
lods
xor
and
stos
jo
cmp
mov
aaa
aad
insb
mov
push
or
and
adc
mov
mov
je
mov
mov
popa
mov
cmp
int
or
adc
push
and
ret
jns
dec
in
mov
mov
pop
pop
pop
test
fsts
cmpsb
xchg
nop
inc
data16
bound
and
imul
push
iret
xchg
add
dec
aam
in
roll
mov
push
lods
fildl
jecxz
jbe
sbb
mov
aam
push
pop
icebp
movsl
add
adc
jp
fstl
stos
leave
insl
pushl
decl
xchg
adc
add
push
or
movsb
daa
dec
hlt
xchg
mov
addr16
lods
imul
and
mov
sbb
adc
fimull
sub
xor
and
test
icebp
adc
scas
push
and
jle
push
or
jne
mov
enter
dec
lods
add
mov
xchg
jns
bound
jmp
mov
add
movsl
inc
shlb
inc
aad
and
sub
sub
sub
mov
and
mov
mov
ret
mov
jbe
dec
test
push
mov
xor
daa
mov
mov
add
xchg
jmp
mov
cs
add
cmp
movsl
ret
push
les
lea
and
leave
sbb
adc
lcall
inc
jl
outsl
xor
cmp
in
out
imul
add
outsb
sahf
in
imul
shrl
int3
mov
add
cmp
sub
clc
frstor
add
rolb
fstl
aam
not
or
sbb
xor
movsb
dec
inc
xor
in
adc
inc
test
and
lea
lahf
mov
add
push
inc
ud0
fwait
stos
xor
dec
add
insb
adc
inc
push
loope
adc
sub
push
loop
cmp
mov
sti
fdivrp
fsubp
rorl
into
push
cmp
es
cmp
or
xor
mov
mov
test
roll
mov
inc
js
push
xor
test
sub
pop
xlat
rclb
jmp
mov
pop
pop
inc
mov
je
add
out
push
xchg
jnp
outsl
int
addb
js
lcall
xor
push
in
test
or
jmp
and
bound
dec
mov
loope
cmp
jb
loope
pop
scas
adc
push
cs
mov
rclb
loop
xchg
xchg
mov
clc
stc
test
iret
jle
inc
and
and
inc
decb
fsubs
adc
sub
cli
cmpsb
std
jnp
jno
push
notb
pop
xchg
cli
xor
add
mov
or
xchg
sahf
pop
add
mov
outsb
pop
repz
dec
pop
mov
fs
loop
add
cs
fbstp
inc
adc
push
dec
add
cs
xor
dec
sub
cltd
mov
cmp
mov
shl
daa
and
cwtl
in
mov
add
mov
rcrl
int
push
sbb
sub
push
pop
xchg
lret
aas
xchg
pop
or
add
mov
and
insb
jg
xchg
or
mov
push
ljmp
cltd
pushf
dec
and
pushl
xor
lahf
daa
mov
sub
pop
addr16
sti
mov
pop
cmc
bound
or
test
jecxz
lea
push
push
add
hlt
dec
imul
pop
xor
jg
clc
adc
add
orb
call
and
or
sbb
outsb
mov
fmulp
xor
or
outsl
push
stos
cmp
mov
test
decl
outsb
shlb
adc
mov
xchg
dec
cmp
add
adc
gs
lcall
xchg
orb
scas
mov
inc
insb
popa
test
mov
icebp
xchg
out
loop
cmp
inc
rol
sub
jno
dec
and
lret
aaa
mov
jo
pop
add
inc
sub
lds
sub
das
in
inc
call
dec
mov
push
mov
sahf
je
mov
adc
and
cmp
push
dec
daa
aam
mov
les
and
push
cmp
mov
cs
dec
mov
leave
adc
and
scas
outsb
call
cmpsl
imul
mov
fcompl
enter
cs
sbb
and
sti
push
mov
out
push
and
cmp
dec
cli
sbb
inc
dec
inc
jmp
cmp
lock
icebp
mov
jnp
sbb
jne
inc
mov
clc
pop
jecxz
sub
inc
rol
into
stos
dec
inc
xor
hlt
xchg
stos
lcall
mov
roll
dec
fldl
shr
pop
sub
test
lcall
xor
cmp
or
je
adc
xor
mov
jbe
insl
and
clc
mov
mov
jne
insb
or
clc
cmp
push
pop
push
test
andb
push
and
je
idivl
inc
xchg
outsl
aas
add
dec
lret
orb
sub
jmp
mov
fcompl
mov
mov
or
mov
mov
pop
dec
cmp
pop
pop
aam
jne
or
jmp
out
roll
dec
out
inc
push
rolb
xlat
movsl
pop
int3
test
ja
lcall
pop
dec
cmc
hlt
inc
into
lahf
je
cli
jle
mov
push
xchg
aas
and
aad
inc
test
into
in
pop
ljmp
test
cs
in
cmp
in
outsl
cltd
pop
icebp
jge
jb
cmp
fistpl
pop
cmpsl
jg
inc
out
dec
cmp
push
sub
fcmovb
mov
dec
sbb
adc
cli
fwait
mov
ljmp
fiadds
jnp
subl
or
cmc
xchg
mov
or
lret
ljmp
jns
cmpsb
mov
je
add
and
fstpt
fwait
test
jae
xchg
xlat
ss
inc
mov
pop
mov
pop
inc
jbe
loopne
xchg
mov
push
loop
pop
cmp
stc
inc
ljmp
adc
clc
aaa
loope
shrb
repnz
fwait
pop
xor
mov
cmp
jns
fildll
and
call
push
adc
inc
push
dec
jns
daa
ret
sub
cmc
or
jbe
cmc
fnsave
mov
lea
cmpsl
push
sbb
pop
jp
add
xchg
dec
pushl
sub
int
pop
sub
fucomi
fwait
stos
pop
scas
mov
in
nop
sub
int
jp
cli
or
rcr
mov
in
mov
pop
cli
mov
jmp
pop
jp
inc
fidivs
lea
and
push
pop
dec
or
jmp
xchg
outsb
aam
ljmp
aam
and
hlt
sti
and
aam
pcmpeqw
dec
shll
sbb
xor
xchg
sub
adc
mov
mov
adc
loope
leave
push
push
rclb
mov
sub
mov
int3
aam
dec
inc
mov
inc
sahf
xchg
jne
mov
jno
add
adc
mov
pushf
or
add
int
inc
stc
movsb
cmp
inc
ja
xchg
jp
sarl
lds
rorb
inc
dec
mov
or
add
cmp
lock
xor
push
shrl
fidivs
lret
push
inc
dec
popa
adc
inc
mov
mov
inc
in
sub
fisubrs
sbb
jnp
mov
ds
nop
and
push
add
lds
xchg
or
jmp
inc
mov
cmp
xor
repnz
mov
or
and
aas
cmc
jne
rcr
push
je
lcall
in
in
or
adc
push
stc
and
push
cs
jae
push
scas
sub
leave
mov
mov
lcall
popf
inc
mov
and
inc
addr16
movsl
cld
or
lea
and
lcall
jo
push
pushl
nop
xor
and
inc
and
pop
fsubl
jmp
adc
xor
out
and
fimull
jmp
stos
sbb
pop
sub
test
insl
mov
pop
pop
pop
mov
pushf
inc
cmp
test
mov
sub
out
xor
mov
mov
sub
jl
ret
inc
sub
fcomi
sbb
sub
clc
add
popa
mov
int
mov
mov
cli
insl
movsb
pop
mov
in
rcrb
fists
and
fistpl
and
sub
arpl
add
sbb
insl
sbb
lret
mov
pop
dec
cmp
bound
call
mov
test
cld
push
dec
jne
outsl
mov
dec
mov
and
mov
out
sub
or
shll
out
repz
adc
daa
ljmp
fwait
test
test
mov
mov
xor
daa
rorl
pop
adc
loopne
cs
or
int
mov
call
sti
lret
xor
mov
mov
jnp
aam
cmpl
aas
sub
les
push
aam
cmpsb
push
lahf
cmovs
mov
cld
jne
shrb
mov
gs
push
fmul
lds
pop
push
shlb
mov
cmp
push
ljmp
mov
fbstp
scas
sub
sbb
and
xor
int
outsb
fstpt
movsl
inc
pop
arpl
add
fimull
pop
fsubp
cld
xchg
adc
into
inc
push
cmpsb
enter
mov
push
jge
leave
mov
in
dec
cld
or
mov
and
sbb
mov
jg
in
subl
jb
jmp
add
test
test
in
lea
push
add
dec
leave
xchg
js
mov
cmp
inc
cmp
mov
mov
inc
nop
addr16
pop
testl
lock
loopne
cmpb
leave
leave
mov
fistpll
pop
das
hlt
test
cmp
cmpsb
sbb
add
adc
cmp
std
push
js
sbb
cli
fistpl
addr16
dec
imul
insb
hlt
sbb
pop
adc
aaa
loop
mov
nop
data16
stos
inc
jge
outsl
outsl
leave
jl
mov
std
mov
jbe
cmp
add
stos
mov
jae
das
jg
xlat
in
ja
subb
pop
scas
adc
ja
dec
sub
push
sbb
xchg
je
or
adcb
and
inc
stos
mov
push
and
mov
fldenv
pop
push
fcomip
push
sbb
push
sbb
inc
mov
divb
mov
jg
fnstsw
test
jge
lret
aad
jecxz
into
dec
int3
sub
push
pop
or
jp
fisttps
cs
add
sar
cld
sub
jp
ljmp
mov
sti
insb
push
aas
pusha
popa
pop
mov
daa
popa
inc
mov
mov
fldenv
push
rcrb
lret
dec
adc
dec
dec
and
dec
push
and
push
shlb
ljmp
loope
add
xor
mov
adcb
mov
sub
pop
inc
dec
ljmp
add
into
inc
mov
add
mov
outsl
or
out
bound
pop
mov
sbb
dec
mov
xchg
cld
sub
in
push
and
stos
lds
je
fstps
and
out
test
jo
inc
adc
add
adc
mov
mov
cli
and
mov
stc
stos
sub
enter
jno
shl
dec
mov
sub
fbld
sti
in
cli
mov
pop
mov
ds
imul
stos
movsl
and
test
sub
jmp
pop
ret
test
xchg
mov
ret
adc
xor
les
mov
mov
fcmovnb
mov
fstpt
or
inc
xor
xchg
or
xor
xchg
and
jne
pop
hlt
lea
dec
jae
icebp
test
mov
push
jg
lcall
call
inc
icebp
call
mov
xchg
das
adc
call
sbb
sahf
mov
inc
push
mov
xor
or
arpl
and
shll
cmp
loopne
addl
sub
int3
or
push
mov
adc
jecxz
cwtl
shr
pop
insl
cld
pop
mov
fcmovbe
adc
push
mov
jno
cmc
add
mov
out
adc
shrb
daa
mov
mov
shrb
divps
mov
inc
xor
or
ret
rcr
shr
shlb
push
out
xchg
mov
int3
mov
jg
shll
in
lret
pop
and
or
xchg
faddp
rcll
mov
mov
loope
sbb
pop
shll
shlb
mov
movl
leave
mov
neg
addl
jle
mov
fmuls
out
add
pop
mov
lret
pop
js
loopne
sbb
adc
cmp
inc
and
cmc
mov
hlt
sbb
mov
add
test
sub
push
mov
je
inc
xchg
mov
dec
ret
xchg
stos
or
or
mov
mov
pusha
xchg
sarl
xchg
sbb
dec
scas
inc
jge
movsl
sbb
sti
outsl
xchg
jp
push
movsl
andl
adc
pop
sbb
leave
adcl
cld
push
cmpsb
push
push
inc
add
dec
adc
std
dec
lods
daa
dec
cwtl
sub
mov
iret
mov
cmpsb
test
ljmp
rcr
ret
cwtl
push
cltd
and
cmc
dec
sbb
mov
outsb
inc
mov
call
lock
insb
push
mov
or
cmpsb
mov
popl
push
ljmp
dec
sbb
popa
sub
sbb
push
and
subb
std
aaa
out
push
dec
loop
adc
scas
adc
sbbb
loope
jle
jp
mov
imul
cmp
testl
ret
iret
jge
inc
fsubrl
loope
xchg
mov
adc
mov
push
das
mov
xchg
sub
or
or
pop
imul
lock
mov
iret
sbb
stos
inc
pop
mov
jmp
xchg
lret
fcomip
adc
ret
pop
scas
and
push
dec
ljmp
cmpl
jmp
mov
lahf
xor
fs
js
xlat
dec
cmp
scas
inc
mov
loopw
repnz
popf
sub
repnz
cmp
test
dec
and
mov
push
inc
xchg
aad
aam
add
add
adc
add
adc
shlb
xor
inc
nop
sub
and
out
dec
xor
mov
ljmp
push
jo
cmp
cs
insl
es
push
or
add
xor
das
imull
mov
xor
mov
adc
mov
cmc
adc
lahf
fimuls
cmp
sbb
hlt
push
icebp
or
sbb
mov
bound
hlt
dec
popf
adc
adc
inc
cmpb
sarl
addr16
inc
jne
fldt
sti
inc
aaa
jl
scas
dec
jle
adc
mov
push
mov
sub
pop
lock
bound
cmpsl
bound
xchg
sti
and
push
call
pop
adc
mov
adc
xchg
and
inc
test
add
xor
pop
fsubs
inc
fdivs
es
mov
lcall
addr16
push
lret
mov
test
sbb
add
xor
std
ljmp
cwtl
add
inc
xchg
push
xchg
aaa
sbb
sbb
loopne
cmp
lds
cmp
push
clc
xchg
adc
sbb
js
xor
lea
add
idivb
jecxz
mov
adc
enter
pop
insb
inc
or
or
push
mov
mov
hlt
inc
mov
and
add
pinsrw
mov
sbbb
add
les
and
jbe
pop
pop
xor
mov
popf
xor
xchg
sub
fucomip
addr16
test
adc
pop
or
insl
rcll
dec
fdivl
adc
cld
push
lods
push
or
inc
inc
movsl
jmp
sbb
fdivr
add
xor
mov
sbb
and
jecxz
pop
push
adcb
push
push
loopne
jle
sbb
dec
pop
test
out
test
xchg
and
pop
int3
and
testl
adc
mov
in
mov
push
sub
loope
or
fcoms
out
adc
xor
js
add
inc
mov
add
push
loop
ret
dec
add
add
mov
insb
outsl
ljmp
rcrl
iret
lret
lods
add
mov
mov
push
andl
cmp
rclb
or
ret
jp
mov
adc
add
neg
inc
pcmpgtw
add
add
and
push
push
add
lock
std
sbb
or
push
inc
data16
add
shll
mov
iret
sbb
stos
and
or
dec
inc
and
fidivrl
lcall
jl
and
aas
add
insb
add
or
jmp
out
xlat
fbld
add
int
rcrl
ja
xor
cmpb
push
and
cli
push
sbbl
xchg
lahf
lods
push
jge
ret
inc
inc
mov
mov
xchg
sub
std
push
das
inc
stos
in
aaa
jle
lahf
int3
insb
imul
and
xor
icebp
push
jg
inc
mov
andl
popa
clc
enter
in
pusha
and
out
jnp
dec
mov
xchg
clc
adc
rcr
or
push
sub
mov
pop
or
lret
bsf
and
or
mov
mov
std
es
adc
test
jecxz
decl
out
sbb
push
or
sub
and
addr16
mov
leave
faddl
fbld
xchg
mov
cs
adc
pop
ja
jecxz
sahf
sub
fwait
cli
incl
add
and
in
jl
jns
fldt
cmp
arpl
mov
push
pop
in
inc
mov
mov
mov
dec
inc
and
xchg
roll
notb
mov
push
fsubrl
jb
cmp
adc
sahf
incl
add
jmp
in
dec
daa
shl
sub
push
or
std
xor
out
adc
and
rcll
jge
dec
rcll
or
cli
fadds
aas
jle
fcompl
decl
movsb
push
sbb
mov
mov
lock
push
inc
and
outsl
mov
arpl
dec
mov
dec
adc
xor
adc
inc
dec
lahf
jle
cmpsb
cmp
popa
das
inc
push
cltd
mov
les
inc
cmc
push
mov
add
outsl
jne
scas
dec
pop
jecxz
xchg
mov
xchg
push
inc
out
and
sar
lret
jo
rcrb
sub
jg
incb
int3
enter
fcmovnbe
popa
add
sbb
push
clc
mov
movsb
fidivrs
sti
insb
sbb
add
adc
pop
inc
mov
adc
iret
push
add
mov
dec
insl
jno
aas
push
out
mov
aaa
repnz
ss
push
dec
notb
test
push
sbb
push
or
push
xchg
inc
xor
aaa
fdivl
xor
fdivrs
dec
fcompl
push
or
cwtl
movsb
insb
shr
pop
fisttpl
scas
add
cmp
jo
int
das
insl
and
adcl
mov
and
jle
pop
add
fmuls
ljmp
push
scas
test
cwtl
push
sbb
mov
or
or
dec
sbb
ljmp
sbb
dec
or
cmpsb
jno
int3
pop
xchg
sbb
adc
aas
sub
push
push
mov
jecxz
ficoms
jne
cmpb
mov
outsb
xchg
mov
xor
rcrb
add
sbb
fisttps
push
xchg
sbb
cmp
xchg
xor
mov
aaa
ret
fisubrl
test
push
cmc
lea
lock
sbb
jge
cmp
out
sbb
or
sbb
lods
lock
lea
mov
inc
scas
mov
inc
loop
sub
repnz
lock
dec
scas
fisubs
out
nop
stc
jl
mov
add
clc
decl
push
xchg
push
mov
aad
add
add
inc
pop
pop
sub
ret
shrl
lret
int
jl
dec
call
xchg
pop
xchg
test
cmp
or
lock
mov
dec
inc
lods
jmp
movsl
imul
sub
xor
pop
nop
shr
mov
shlb
pusha
xchg
loop
mov
insb
ljmp
jbe
jl
stos
and
fdivs
mov
and
es
lods
and
popf
add
adc
push
outsl
push
outsb
mov
xchg
andl
fdiv
int3
pop
test
dec
daa
es
jnp
rclb
cs
and
sbb
xor
mov
es
inc
jno
xor
dec
loopne
rorb
inc
jb
call
sub
cltd
cmovge
mov
and
icebp
roll
rorb
pop
add
sbb
pop
push
fnstcw
or
sub
fsubrl
lock
and
test
mov
in
cmpb
sub
pop
jle
cmp
mov
push
popa
inc
pop
icebp
popa
inc
lock
lds
inc
pop
mov
lea
lcall
lock
xchg
mov
or
or
cmp
adc
fbld
test
mov
xor
or
fiaddl
jp
push
test
clc
adc
outsb
dec
xchg
test
mov
and
aam
mov
and
mov
inc
sbb
paddusb
pop
jl
loopne
cs
jl
sub
cmc
mov
cmpl
inc
adc
xchg
and
sub
adc
je
sahf
lock
adc
cwtl
hlt
jo
movsl
sub
cmp
lcall
stos
loope
mov
fiadds
cmc
filds
cmp
xlat
dec
addr16
addb
push
mov
js
stc
je
inc
and
stos
dec
stos
lock
sub
cmp
push
repz
push
pop
enter
dec
mov
jae
inc
xchg
pop
cmp
mov
jnp
sbb
adc
or
push
xchg
es
mov
dec
dec
mov
add
dec
xchg
or
fistl
lock
sub
hlt
push
push
dec
loopne
pop
pop
adc
and
into
ret
cmp
lret
pop
mov
cmpb
push
push
push
xor
mov
pop
repz
xor
cmc
xchg
dec
js
sub
xor
jbe
je
add
add
test
aam
sbb
mov
andl
mov
inc
sbb
xchg
mov
sbb
mov
xor
and
add
rcrl
pop
rolb
rolb
mov
mov
shll
std
rcrl
test
in
inc
adc
sbb
lock
mov
sbb
inc
lock
sbb
sub
sbb
add
jg
cmp
inc
dec
sub
inc
int
adc
add
sbbb
pop
and
cmpsl
xor
xor
lret
dec
mov
jnp
add
jb
mov
jecxz
push
xchg
in
xchg
fsts
testl
shrl
pop
sub
aas
xchg
lods
pop
or
and
stos
and
fidivs
aas
mov
push
adc
inc
mov
test
lahf
xchg
movsb
mov
fcoms
outsl
mov
ret
pop
clc
adc
cmp
sahf
add
and
sbb
mov
jecxz
mov
add
jge
jae
arpl
or
sub
popf
xor
out
push
xchg
imul
xor
adc
shrl
add
push
dec
sub
inc
repz
sbbb
jl
cmpsb
mov
in
lods
push
push
dec
push
or
aam
rcll
mov
loop
int3
in
push
and
and
xor
icebp
paddusb
xor
pusha
jle
das
popw
int3
push
push
repz
movl
xlat
in
imul
shlb
inc
inc
fists
xor
out
sbb
stos
mov
bound
fs
repnz
sub
or
ja
daa
mov
mov
add
sub
lret
xlat
add
or
sub
sub
push
movsl
pop
xchg
ss
cltd
sbb
cmp
or
inc
aam
and
rorl
daa
push
xchg
push
shlb
test
xchg
or
popa
ja
in
bound
inc
sbb
roll
stos
push
sbb
rclb
enter
adc
sbb
inc
push
or
push
adc
adc
or
ret
push
inc
loop
addb
insb
out
rcrb
add
int3
daa
jge
pop
mov
add
lods
add
mov
lock
out
or
mov
cmp
adc
int
ret
add
enter
add
dec
js
dec
pusha
les
repnz
shll
xor
arpl
sub
iret
xchg
or
adc
adc
adc
pop
loope
xchg
push
sub
sub
cs
mov
sbbb
scas
addb
and
push
pop
sub
xchg
push
push
sub
sbb
ja
push
aam
mov
inc
adc
mov
sarl
sbb
mov
test
push
loopne
sub
add
call
and
push
cmpb
int
or
ss
inc
pop
repnz
sar
popf
aam
fidivl
fisubs
stos
mov
cmp
in
movsl
inc
insb
mov
mov
shlb
adcl
or
daa
mov
adc
and
testl
and
xor
mov
mov
push
in
mov
cs
jns
mov
inc
xor
adc
popa
sbb
add
pusha
ja
bound
test
push
mov
insl
adc
or
xchg
shll
adc
sbb
dec
dec
pop
cmpsl
lods
jae
movl
sub
subb
call
cltd
data16
dec
push
pusha
xor
fidivl
negl
inc
imul
aad
mov
xchg
xor
mov
sub
push
xchg
clc
iret
xchg
test
jmp
push
pop
frstor
dec
rorl
mov
int3
mov
out
mov
xor
sbb
add
adc
sub
sbbb
ret
outsb
xchg
mov
push
cmp
decl
adc
sub
lahf
in
gs
popf
lcall
subb
fs
jns
sub
jle
pop
mov
mov
call
pop
test
add
jmp
add
cld
div
lcall
shlb
in
std
je
jns
nop
adc
xor
pop
add
mov
scas
lds
or
cmp
call
and
movsb
arpl
pop
xor
mov
adc
sub
mov
xor
loopne
xor
nop
jno
jecxz
ret
jg
clc
add
outsb
lcall
push
jb
gs
push
or
sbb
js
in
lock
sbb
icebp
xchg
mov
add
das
push
sbb
xor
push
bound
addb
and
mov
add
bound
or
gs
jge
add
ljmp
fisubrs
xor
jl
leave
and
push
push
and
cmpsb
mov
mov
bound
loopne
jmp
jmp
mov
bound
add
sbb
nop
jmp
pop
idiv
lss
cltd
cmp
xor
pop
xchg
push
adc
ja
fistps
sub
hlt
dec
push
mov
neg
mov
inc
mov
inc
mov
outsl
sub
outsb
xchg
shll
mov
adc
inc
xchg
xor
mov
jg
scas
mov
dec
movb
cmp
adc
mov
ljmp
les
repz
adc
scas
addl
nop
pop
adc
push
mov
adc
mov
add
out
ljmp
xor
aaa
add
or
test
fs
lds
test
sub
sub
call
push
xor
shlb
cmp
push
jg
cld
mov
movsl
push
dec
call
jae
imul
hlt
xchg
lahf
push
mov
add
inc
jo
dec
insl
mov
mov
inc
sbb
aas
cmp
rorb
push
loopne
lods
insl
cmpsl
es
sub
xor
push
fnstsw
mov
cmp
adc
cmp
outsb
jp
loope
popa
add
fildll
jmp
mov
mov
push
inc
icebp
movsb
movsb
dec
or
sub
cmpsb
les
jae
push
jnp
fsubs
mov
xchg
aam
mull
cs
fstpl
ds
icebp
mov
and
pop
xchg
addb
add
les
add
xchg
pop
jo
mov
add
ss
dec
xlat
add
into
mov
scas
loop
ret
xchg
mov
or
dec
cmp
mov
inc
mov
repnz
lcall
movsl
or
add
jl
insl
sbb
sarl
add
mov
lds
pop
inc
adc
enter
outsl
filds
cmp
add
mov
inc
icebp
test
not
and
lods
xor
sub
mov
mov
lret
in
rolb
jp
inc
outsl
jge
in
test
push
in
xchg
pop
xchg
adc
insl
xchg
andb
and
push
jg
jecxz
daa
or
push
loopne
cli
cmp
mov
and
jmp
sbb
push
sbb
adc
dec
dec
fldl
pop
pop
cmc
sbb
sub
cmc
mov
roll
pushl
ret
test
aas
test
or
fcomip
xor
imul
gs
lock
cwtl
inc
dec
dec
ds
pop
adc
cli
das
pop
sub
jnp
outsl
push
fldcw
mov
or
adc
mov
pop
adc
adc
or
and
shll
fdivrs
aam
pop
notl
adc
push
mov
or
loop
jle
das
fisubs
xchg
add
hlt
roll
cltd
dec
cwtl
lea
fwait
cld
sbb
jne
add
cltd
shrl
or
ret
rorb
push
jmp
and
inc
or
add
fadds
and
popw
inc
daa
xorb
inc
stos
cltd
in
jno
pop
int3
orb
notb
inc
rolb
cmc
mov
push
roll
mov
fstp
xor
pmaddwd
cmp
or
pop
mov
fdivrs
add
cli
lods
dec
jne
cltd
std
and
loop
jb
pop
and
rorl
xchg
addb
push
mov
repnz
loop
shrb
sahf
add
push
or
push
push
insb
mov
adc
test
test
or
inc
movsb
aam
sub
and
add
xchg
ljmp
adc
push
aad
dec
das
sbb
push
sub
jmp
and
push
dec
sub
jg
inc
popf
jnp
mov
fsubl
popf
pop
out
add
add
ljmp
cmp
ja
dec
push
adc
pop
pushf
cwtl
lea
popf
test
sbb
inc
dec
mov
lds
ljmp
outsl
das
cmp
fs
aas
imul
add
iret
cmp
inc
lods
mov
add
lea
movsl
aad
pusha
mov
enter
lea
jle
out
cmp
and
cmp
inc
fldenv
and
out
mov
jno
test
or
fdivr
adc
sub
mov
mov
andb
jmp
lcall
inc
adc
fimuls
das
shll
rorb
mov
dec
dec
mov
in
add
int
inc
int3
clc
xlat
shrl
dec
xchg
mov
pushf
clc
in
or
sub
push
push
cmp
mov
mov
mov
jno
fidivl
push
jge
ret
mov
ret
push
add
inc
cmp
mov
mov
xor
sbb
sub
fdiv
and
rcll
add
aas
js
enter
add
jg
or
sub
les
inc
shll
test
or
jle
add
rcr
cli
nop
dec
aaa
clc
adc
inc
in
jae
sbb
pop
filds
mov
xlat
sub
test
push
fs
and
push
in
pop
loop
and
inc
or
adc
and
loop
mov
push
inc
insl
sti
scas
pusha
test
mov
loopne
mov
cltd
mov
xchg
sub
cmp
xchg
popf
ds
xchg
mov
sbb
ret
fwait
mov
adc
push
fcoml
xor
and
adc
in
out
jno
xlat
pop
pop
decb
shlb
pop
mov
cmp
rclb
idivl
stos
adc
ret
jne
xor
shrb
pop
icebp
cmp
pop
or
xchg
mov
mov
and
sarb
xlat
bound
es
and
add
loopne
in
xor
sar
das
lret
xor
inc
cmpsl
inc
test
rolb
incb
pop
fdivr
mov
adc
adc
push
sbb
push
xchg
roll
rep
insl
cmp
loop
or
inc
es
dec
xchg
call
ficoml
pop
rorb
xchg
imul
mov
movsl
cli
and
inc
inc
mov
jo
cmp
push
mov
jp
pop
popf
dec
shrl
stos
les
xor
shll
pop
sub
add
pop
sbb
clc
jg
sub
jae
pop
into
xor
jo
imul
mov
pop
fdivr
inc
or
push
fldt
addb
and
add
lods
mov
xor
pop
nop
ljmp
mov
jecxz
aaa
ja
pop
adc
jmp
mov
popa
mov
jnp
jp
dec
inc
xor
xchg
xchg
dec
adc
jns
cmp
mov
xor
or
daa
int
lcall
mov
subl
daa
stos
lds
pushf
sbb
aam
arpl
mov
dec
out
bound
mov
jmp
int
add
jp
mov
int
and
shlb
stos
mov
icebp
dec
pop
cmp
andl
fdivrs
or
dec
mov
mov
xchg
sub
jle
xor
lods
pop
outsb
and
jnp
and
mov
cmp
mov
inc
jge
lds
push
incl
mov
outsl
ret
inc
inc
push
sub
sub
mov
loop
pop
jg
sbb
arpl
outsl
ret
xor
cmp
add
adc
pcmpgtd
adc
fstpl
dec
js
sub
sar
arpl
jae
or
jbe
idivl
int3
fidivs
imul
inc
out
push
pop
or
in
add
pop
sub
sub
inc
xchg
mov
dec
push
js
rorl
add
add
mov
jp
pop
pop
inc
and
pop
mov
scas
dec
sti
std
aam
cli
rclb
loope
imul
les
cmp
out
out
cmp
fwait
loopne
mov
call
mov
fisubl
xchg
mov
nop
mov
stos
xor
add
sbb
pop
sbb
gs
popf
pop
cmc
add
inc
xor
xor
aaa
sbb
dec
mov
and
or
inc
dec
popf
movsb
negl
sarl
loope
adcb
rclb
sub
fnstcw
adc
pop
into
adc
ds
jg
mov
push
mov
lock
lods
popl
and
jnp
inc
jno
test
adcb
mov
xor
out
scas
mov
lea
pop
adc
mov
inc
adc
adc
pop
jg
push
push
or
int
repz
mov
sbb
mov
cmc
sbb
shlb
or
add
mov
cmpl
popa
mov
cmpsb
dec
xlat
cmp
jnp
xor
repnz
inc
pop
lods
mov
aas
jo
jae
pop
pop
mov
hlt
rcr
mov
or
outsb
sub
cmp
push
cmp
jge
mov
aaa
in
inc
je
dec
adc
mov
mov
jge
or
xchg
mov
or
or
sbb
lods
dec
ss
and
sbb
stc
cmp
or
push
cmpsl
lds
stc
ljmp
movsb
inc
sbbb
outsl
add
cmpsl
or
add
add
enter
in
lods
push
addl
adc
aaa
icebp
pop
shrl
inc
das
adc
push
stos
test
and
jg
inc
xchg
xchg
ds
lods
xor
mov
mov
andl
insl
shlb
xchg
xor
push
or
cmc
lock
ss
mov
push
mov
xor
cld
inc
pop
shrb
sub
adc
fstpt
pop
sbb
inc
push
add
sbb
insl
pop
mov
xchg
fucomi
dec
insb
add
loopne
lret
pushf
test
dec
pushl
roll
pop
inc
mov
add
cmp
cmp
mov
scas
xor
add
mov
jg
inc
jl
test
jbe
sub
inc
insl
stos
inc
and
mov
mov
lods
jl
add
shrb
adc
push
push
cmp
push
dec
dec
cmp
or
dec
and
shlb
pop
stos
adc
adc
mov
or
movsb
fstpt
scas
fisubs
in
insl
negb
adcb
rolb
in
inc
push
jg
jg
xchg
add
xchg
sbb
repnz
pop
adc
xor
rcrl
or
cs
jge
adc
push
pop
mov
lcall
es
aad
add
es
clc
sbb
dec
fisttpl
js
je
das
pop
rorl
inc
mov
jb
cmp
ret
cmpsb
fstpl
inc
fistpll
xor
and
hlt
lock
cld
inc
test
or
stos
push
dec
cmp
addl
ss
bound
pop
clc
adc
and
and
clc
out
sub
mov
mov
outsl
popa
cmp
paddsw
and
pop
xchg
jle
dec
adc
add
in
sbb
pop
aaa
push
adc
cmc
mov
jl
mov
inc
mov
adc
push
cmp
pop
cltd
and
inc
les
sbb
cld
shll
sbb
outsl
aad
pusha
repz
notb
sbb
push
int3
cmp
xchg
call
add
push
mov
mov
push
roll
pop
jne
mov
insb
call
in
add
addb
out
xorl
sbb
mov
mov
jl
mov
cltd
dec
enter
sub
xor
cs
add
sub
adc
adc
gs
lods
cs
jg
inc
test
sahf
mov
testb
pushf
dec
sub
loope
mov
mov
dec
test
mov
jae
ss
lods
cmp
and
mov
mov
cmp
repnz
enter
aaa
shll
rclb
lret
or
jge
dec
xchg
iret
cwtl
ss
mov
loope
add
enter
and
andb
mov
in
mov
in
inc
sbb
inc
icebp
pop
mov
or
nop
rcrb
xlat
int3
stos
cmp
jl
test
sbb
lock
mov
mov
adc
das
int3
push
mov
add
mov
pop
mov
cwtl
sub
pop
mov
lcall
dec
jb
imul
mov
and
gs
jmp
lods
test
sub
push
and
in
pop
arpl
mov
je
mov
js
inc
movsl
dec
mov
mov
pop
dec
mov
das
cmp
aaa
add
and
push
test
adc
insl
cwtl
iret
pop
mov
daa
jg
in
popf
dec
cmp
mov
or
call
mov
aad
and
dec
roll
sbb
cmp
sub
xchg
adc
mov
pushl
xchg
int
mov
sub
sub
xor
mov
push
mov
das
fists
lds
xchg
lods
fcomip
dec
xor
outsl
jns
pushf
sub
mov
into
cwtl
add
das
fdivrl
sub
loop
mov
notb
xchg
ret
mov
cltd
adc
sti
jno
adc
cli
xor
movsb
or
sbb
mov
xor
add
outsl
rcll
jle
push
inc
test
cmp
cld
and
pop
mov
insb
cmpsl
xor
jb
stc
or
inc
arpl
test
or
xor
jecxz
mov
jle
or
inc
pop
gs
dec
dec
outsl
cld
sbb
cmp
sbb
test
inc
jmp
mov
push
in
mov
mov
pop
xchg
cmp
sub
sub
stos
or
and
and
stos
sbb
out
sub
mov
sbb
and
add
sbb
jmp
in
stos
mov
add
add
sbb
and
pop
jnp
xchg
inc
inc
test
pop
xchg
push
andb
push
and
push
aaa
cwtl
daa
adc
add
sub
ja
or
add
adc
mov
jle
xchg
pop
xor
imul
arpl
and
sarb
pop
or
sbb
push
dec
ror
mov
les
mov
mov
loope
or
adcb
insb
push
shll
mov
and
pop
push
mov
test
push
jo
push
iret
xchg
jae
cmpsl
test
and
cmpb
mov
or
loopne
in
adc
mov
fimuls
inc
add
cmp
movsb
cwtl
inc
push
insb
outsl
sbb
adc
iret
add
push
sub
inc
inc
lea
sbb
in
clc
jo
enter
dec
lock
mov
mov
push
movsb
js
jae
mov
cmp
add
les
mov
sub
sub
pop
fwait
rorb
jmp
jno
aaa
sbb
mov
sbb
inc
out
cwtl
xchg
jp
and
push
decb
push
lea
dec
add
decb
and
loope
push
sbb
sbb
sbb
fadd
mov
lock
adc
xlat
sub
flds
sub
loop
imul
sbb
push
dec
adc
mov
push
stos
mov
sbb
jmp
fsubrl
fwait
inc
outsb
pop
out
jp
icebp
movsl
mov
inc
mov
aam
out
mov
shll
inc
add
or
pop
inc
fistl
aaa
and
jb
rcrl
arpl
out
xlat
ds
sub
and
sub
sub
rolb
loop
inc
sti
xor
cmc
mov
int3
push
pusha
push
sub
fsubr
add
icebp
and
sub
testb
sbb
or
nop
js
addb
push
clc
repnz
out
xor
jns
mov
in
ret
inc
test
fs
inc
or
cmp
hlt
stos
xor
xchg
enter
es
lea
mov
not
and
aad
nop
jg
shlb
jge
lret
add
push
clc
jp
lock
loope
pop
adc
enter
cmp
add
addb
fcomps
arpl
data16
ret
dec
mov
test
dec
mov
push
xchg
bound
add
add
pop
cmpl
pop
stos
push
or
and
int3
push
pop
cltd
test
repz
je
sbb
cli
mov
int3
dec
add
push
outsl
push
in
add
aas
bound
stos
je
mov
mov
inc
rolb
jb
xor
inc
cmp
pop
shrl
cmp
cmpsl
mov
jbe
adc
lcall
mov
leave
jne
leave
pushl
dec
pushf
jl
das
insb
hlt
out
lods
adc
push
jne
xor
cld
sub
jmp
sbb
je
xor
cli
pop
xor
push
shufps
add
jbe
and
ret
and
or
add
jo
push
cmp
mov
enter
inc
mov
dec
inc
clc
inc
mov
push
adc
jo
push
sarl
adc
mov
xchg
adc
xor
inc
adc
cmpsb
adc
fnsave
rorb
push
jecxz
cmp
mov
inc
aaa
cmc
fnstsw
cld
dec
gs
fld
arpl
add
adc
inc
push
orb
mov
mov
seto
ret
and
push
out
push
pop
test
xchg
sti
fimuls
mov
sub
adc
inc
ljmp
arpl
sub
sahf
loopne
xchg
int3
and
dec
pop
adc
shrb
and
adc
xor
int
add
loopne
stos
repz
popf
and
rcrb
xchg
adc
sbb
inc
scas
xlat
sbb
out
pop
aam
or
push
jp
add
sbb
fistpl
popa
pop
and
jp
adc
or
test
fistps
mov
xor
or
cld
add
lods
mov
imul
pop
add
insb
notb
xor
push
repnz
arpl
add
sbb
insl
jmp
inc
jmp
loopne
scas
or
popa
js
pusha
fwait
movsb
imul
push
inc
pop
stos
push
lcall
or
cmpsl
sarl
adc
dec
push
mov
or
sbb
cli
leave
mov
pop
cmc
mov
pop
push
mov
pop
aad
mov
jp
ljmp
in
inc
pop
lock
add
stos
das
mov
adc
jo
leave
or
imulb
pop
andb
je
or
rclb
push
adc
fs
repnz
ret
xor
inc
mov
inc
mov
or
loop
jns
mov
lret
mov
inc
loopne
std
adcb
lcall
rcll
xor
into
in
dec
mov
adc
add
dec
add
sub
or
cld
out
mov
rolb
aas
pushf
mov
sarl
mov
inc
add
sbb
mov
cmp
pop
jb
in
loope
inc
and
roll
mov
inc
int
xchg
clc
inc
iret
nop
int
loopne
icebp
xor
jns
and
push
cmp
pop
jne
cmp
insb
das
fmull
or
push
add
or
mov
cltd
scas
js
jp
and
sti
repnz
adc
push
fs
lcall
jp
add
int3
push
sbb
and
add
out
sbb
push
add
sub
loop
arpl
dec
enter
dec
mov
xchg
cld
inc
sbb
pop
inc
pop
add
add
jl
clc
or
ret
mov
and
lret
jnp
lods
loop
lahf
xchg
adc
mov
addr16
jmp
xchg
mov
call
push
mov
adc
js
movsb
bound
enter
dec
into
aam
das
cmp
adc
in
sub
subl
cmp
rcr
adc
xor
inc
mov
add
dec
pop
adc
or
fildl
cmpb
mov
pop
or
xchg
lcall
cmp
call
or
xchg
or
test
addr16
ljmp
nop
inc
dec
xchg
adc
into
fsubl
ljmp
jmp
mov
fdivrl
push
test
cmp
and
les
sub
and
out
sub
mov
pop
addl
das
hlt
mov
test
ds
fcmove
push
adc
call
out
sbb
andb
pop
test
pop
mov
mov
vaddsubps
push
fs
push
sarl
add
push
cld
mov
pushw
sbb
lret
xchg
das
je
pop
push
xchg
mov
pop
das
hlt
lret
incl
gs
and
faddl
shrl
std
lea
mov
sbb
das
mov
xchg
cli
sbb
popa
mov
and
or
lock
jnp
mov
imul
dec
or
cmc
jge
in
inc
xchg
testl
sti
fildl
push
shlb
clc
dec
lods
push
jns
mov
mov
cmpsl
call
sbb
movsl
das
add
rolb
mov
mov
repnz
cli
cmp
fnsave
cmp
xchg
sub
and
mov
std
aad
call
mov
cmpl
jo
jb
xchg
dec
cmpsl
push
fs
sub
aam
test
dec
mov
sbb
sbb
mov
ret
and
enter
stos
les
clc
iret
pushl
cli
ljmp
je
add
and
and
hlt
cli
xchg
rdtsc
call
jmp
push
and
inc
mov
cmp
aas
pop
adc
subb
stos
scas
fcomi
add
data16
lods
inc
jno
push
nop
popa
mov
cmp
jno
rclb
faddl
mov
dec
aad
sub
insb
into
inc
outsb
adc
in
pop
por
adc
jns
daa
sub
pop
mov
push
pop
inc
scas
or
add
orl
sub
inc
and
mov
cmp
clc
les
in
fisubl
cmp
shrl
xor
xchg
add
inc
hlt
dec
dec
jne
dec
hlt
mov
sub
xchg
sub
or
cmp
stc
xchg
sbb
add
inc
inc
xor
xorl
adc
pop
inc
mov
xchg
inc
test
dec
ljmp
int
mov
fwait
add
out
cmc
outsb
add
int3
sbb
into
or
les
mov
addl
ja
in
mov
sub
addl
fadd
xchg
stos
or
int3
or
arpl
das
xchg
sbb
das
fs
add
and
fbstp
fidivl
and
sbb
clc
inc
hlt
inc
add
mov
xchg
lea
loopne
lods
loopne
lock
or
daa
cmp
mov
roll
inc
fistpll
es
xchg
js
dec
add
or
mov
shr
pop
sti
js
pop
mov
dec
inc
das
lahf
addr16
xchg
stos
jae
add
dec
mov
pop
loope
mov
mov
mov
sub
and
sub
mov
mov
dec
insb
cmp
cmp
lock
addl
dec
js
mov
pusha
push
jl
aam
xchg
and
mov
in
dec
loop
inc
fdivrs
pusha
popf
xchg
cmp
icebp
out
cs
out
mov
fcomps
test
js
arpl
push
add
mov
push
lock
adc
xchg
or
test
test
test
inc
add
add
sahf
insl
or
xchg
lea
fdivrs
and
adc
and
dec
inc
test
lret
adc
jl
sbb
pop
enter
pushf
and
inc
fisttpl
push
stos
mov
inc
and
adc
jecxz
cli
ret
stc
add
lahf
push
lahf
mov
fistpll
fmuls
mov
aad
dec
inc
pushl
mov
adc
rorl
and
push
jns
fdivr
into
sub
add
test
cli
scas
cmp
xchg
inc
sti
shlb
dec
jne
mov
data16
stc
sti
mov
js
add
call
inc
add
fs
push
sbb
fmuls
xor
or
mov
mov
cmp
fisubl
push
lcall
and
push
mov
lcall
ficoms
shl
pop
mov
sub
jmp
es
xor
scas
je
xchg
mov
push
dec
je
jne
cli
add
outsl
sub
lods
cmp
fiaddl
fiaddl
jp
push
out
push
mov
jg
pushf
and
pop
push
leave
xchg
ljmp
aam
leave
cmpsl
push
xchg
sbb
and
lahf
mov
leave
nop
add
and
or
add
std
lret
cmp
out
jp
xlat
sarl
adcb
aaa
shl
insl
mov
or
in
push
stos
jne
add
push
dec
adc
aaa
pop
lock
pop
lret
jge
or
or
pop
push
inc
call
and
adc
jmp
mov
fwait
push
je
pop
mov
add
je
and
mov
aas
in
ret
dec
and
cmpsl
scas
je
mov
imul
jg
aam
add
bound
mov
outsl
lock
dec
xorb
cmc
int3
fldl
mov
sub
jle
or
std
and
xchg
and
cmp
and
popf
and
stc
aas
mov
or
dec
mov
push
mov
add
dec
in
pop
int3
sub
xchg
aam
dec
call
mov
inc
pushf
insb
dec
fdivl
lock
aad
lret
sbb
pop
mov
add
outsl
inc
push
push
out
aaa
inc
mov
movsl
dec
pop
scas
inc
popa
int3
add
sbb
fstpt
adc
out
bound
push
std
mov
icebp
or
or
cs
mov
mov
jmp
mov
rol
add
shrb
ss
push
jne
faddl
leave
mov
adc
or
mov
add
cmp
js
mov
lock
dec
hlt
outsl
repz
popf
sub
out
ja
cwtl
ret
mov
mov
inc
fwait
into
out
ret
add
xor
jge
cmp
lcall
mov
popa
push
fsubs
pop
lock
cmp
in
scas
xchg
adc
sbb
pop
xor
das
ljmp
pushl
add
inc
or
adc
ja
and
add
fisttpl
cmc
aaa
adc
xlat
out
in
int
roll
outsl
in
cmpsl
in
mov
adc
xchg
adc
ljmp
xor
mov
sub
lret
or
imul
or
push
sbb
pop
inc
mov
into
adc
pop
mov
in
sarb
es
cmp
dec
jmp
cld
pop
mov
mov
data16
gs
adc
inc
xor
cmp
jecxz
add
daa
cmp
pop
loopne
sub
sub
sti
sbb
or
adc
sub
inc
jb
mov
mov
or
mov
push
push
jg
les
cmp
inc
loopne
add
lods
ds
xor
fs
jno
adc
push
jl
cmp
movsl
fcmovnbe
push
push
add
jns
or
mov
mov
test
test
xor
mov
adc
or
or
test
xchg
cmp
shlb
fwait
mov
lock
rolb
mov
inc
popa
daa
mov
into
or
pop
sarb
mov
gs
add
or
lods
pop
daa
cld
sbb
insb
add
cltd
add
cmp
add
ja
dec
adc
push
rorl
sbb
add
popa
lock
push
cmp
dec
dec
dec
int
add
add
fucomi
cmp
add
cltd
add
dec
mov
outsl
pop
pop
rclb
push
test
mov
aaa
cmp
sbb
rcll
xor
mov
lcall
pop
push
lock
add
pushf
adc
stos
in
or
mov
test
loopne
xchg
dec
rorb
cmc
and
xchg
pusha
xchg
test
or
shrl
loopne
mov
xchg
rorb
in
push
xchg
cmp
pop
push
sbb
aad
in
xchg
shll
xor
mov
adc
inc
xor
das
mov
outsb
xor
sub
sub
ret
push
push
mov
dec
xor
test
inc
cwtl
adc
loope
mov
test
or
push
roll
in
inc
shrb
push
lock
stos
and
xlat
iret
cmp
mov
loopne
mov
xchg
push
aam
push
xor
and
push
and
add
sub
inc
cmp
rorb
in
insb
mov
js
iret
push
iret
adc
decl
xor
xchg
rorb
sub
repz
call
addr16
cwtl
test
or
mov
pop
or
pop
jmp
scas
jecxz
push
pop
out
outsl
mov
sbb
pop
icebp
lret
xchg
outsl
loopne
pop
hlt
repnz
out
rcrb
insw
sahf
pusha
test
add
pop
mov
mov
lods
hlt
daa
pop
jecxz
cmp
cmp
popa
inc
popf
clc
or
lds
call
lods
dec
cmpsb
inc
fistpl
or
aad
inc
pop
stos
les
pop
mov
sbb
xor
loop
mov
or
enter
mov
xor
sbb
arpl
inc
iret
xchg
jmp
mov
pop
mov
stos
sub
mov
lods
or
jl
lret
xchg
pop
leave
shll
mov
mov
orl
clc
push
in
cmp
cmp
and
or
pop
adc
imul
repz
fmul
iret
loopne
mov
pcmpeqb
sub
mov
cwtl
jo
xor
paddsw
ret
dec
mov
add
dec
ret
mov
lods
call
jge
fisttpll
ret
mov
mov
sbb
jl
pushf
pop
xchg
mov
aaa
cld
fcomip
jmp
xor
push
push
clc
leave
cwtl
inc
test
sbb
aam
adc
popa
jle
rcll
push
jne
push
mov
cmc
lods
rcrb
jecxz
fdivrp
and
and
xchg
jg
xor
xchg
or
cld
es
mov
jmp
fmuls
mov
std
and
xor
adc
in
adc
adc
dec
cmp
movsb
pop
pop
and
jecxz
and
roll
jo
ret
inc
test
das
or
mov
lock
pop
movsb
out
testb
insb
leave
mov
dec
push
sbb
push
loop
movsl
out
or
inc
adc
add
popf
jl
mov
push
insl
cs
inc
pop
cmpsb
pop
xor
xor
mov
mov
icebp
cmp
xor
mov
push
pop
repz
std
pushf
scas
leave
test
sub
or
cli
rcr
decb
mov
sahf
or
xchg
adc
xchg
lcall
lock
adc
sahf
mov
dec
cmp
imul
inc
mov
sub
leave
rcr
stc
push
shl
movb
push
adc
sub
xchg
cmp
add
inc
and
popf
dec
lock
rolb
repnz
cld
sub
push
paddd
sub
dec
sbb
das
mov
jb
in
sti
push
cmc
inc
mov
scas
push
aad
ja
mov
sub
xor
sbb
add
push
and
and
jmp
test
lea
mov
push
shl
mov
dec
pop
adc
add
sub
mov
rolb
push
aad
addr16
inc
leave
test
movsb
add
dec
sbb
xlat
push
das
sub
jno
mov
inc
hlt
push
lea
push
mov
push
fsts
jl
jns
or
icebp
clc
sub
test
jle
xchg
add
cli
push
xchg
add
xor
stos
mov
mov
inc
adc
repnz
or
and
add
pop
iret
call
add
stos
daa
push
fiadds
int
adcb
sbb
add
and
in
test
addr16
adc
es
push
fistl
xor
or
mov
and
cmp
dec
mov
mov
fdivp
int3
and
sub
inc
in
jmp
xor
inc
in
leave
jns,pt
es
push
shlb
add
inc
pop
xchg
push
add
adc
pop
or
roll
roll
mov
mov
mov
mov
frndint
sbb
or
shlb
sub
lret
push
aam
and
xor
sbb
pop
push
lcall
les
xchg
aad
push
xor
pop
sub
jb
mov
sbb
stos
sbb
ja
push
hlt
jmp
mov
mov
icebp
test
rolb
ret
or
ret
jecxz
lods
shl
mov
and
fcmovbe
imul
and
sub
nop
mov
mov
mov
mov
and
clc
cld
lods
or
or
fdivs
in
push
and
stos
xchg
icebp
adc
sahf
add
cmp
sbb
popa
push
jl
jl
xchg
popf
idivl
xchg
sub
and
xchg
fsubs
in
xor
inc
imul
mov
fbstp
or
sub
fisubl
test
adcb
xlat
std
and
out
mov
sub
add
dec
ret
pop
fdivs
jne
inc
xor
repnz
in
aam
mov
jb
adc
mov
add
adc
pop
shl
pop
add
ret
in
mov
add
add
in
cmp
or
cmp
inc
stos
sbb
push
or
dec
or
pop
popa
adc
lods
cmp
mov
sahf
add
filds
mov
inc
and
sub
mov
ret
clc
out
pop
mov
xchg
int
xchg
inc
xor
enter
add
cs
xchg
pop
jne
aad
mov
pop
fsubr
lock
movb
fidivs
mov
mov
in
inc
lret
out
pop
orl
or
addb
aad
inc
and
mov
adc
cmpsl
movsb
xbegin
push
cs
fnstcw
mov
leave
je
pop
adc
xor
call
lret
xor
push
shrb
roll
lds
shll
push
jg
add
adc
mov
dec
ss
push
xchg
or
push
fildll
and
inc
xchg
jle
daa
decl
mov
fbstp
dec
or
or
cmp
ljmp
sbb
ficoms
cld
ljmp
aas
jl
push
incl
outsl
ret
push
push
mov
cmpsl
data16
aas
lret
mov
inc
or
imul
xchg
jle
push
xor
push
std
cmp
pop
xor
cwtl
sub
dec
pop
mov
or
dec
dec
in
pop
adc
outsl
jg
dec
xchg
fcoms
xchg
jp
or
test
cmpsl
pusha
or
imul
add
aaa
cli
incl
cmc
jecxz
ss
adc
cmp
push
fwait
incl
mov
add
into
and
jno
add
inc
popf
pop
inc
repnz
xchg
lcall
std
rolb
sbb
scas
cmp
mov
rcll
lods
movsb
push
mov
fldt
mov
push
sub
in
xorl
orl
dec
xor
js
push
das
call
mov
mov
loop
push
flds
xor
test
adc
xor
push
test
add
add
mov
inc
pop
pop
icebp
jle
bound
xor
je
mov
inc
clc
pop
push
aad
fldt
lods
mov
fbld
adc
bound
dec
jmp
lcall
dec
into
cmp
jne
scas
push
rorb
clc
out
dec
inc
mov
or
fbstp
pop
and
jg
pop
or
inc
cld
sahf
push
add
in
pushl
add
mov
or
aad
mov
mov
stc
jp
add
sub
and
pop
les
push
scas
add
adc
inc
inc
dec
jne
sub
ds
push
ja
cld
jmp
nop
aad
lods
xlat
mov
pop
jmp
movsl
dec
add
push
mov
das
add
xor
jb
outsl
aam
xor
xchg
jmp
or
sub
push
cmpsl
stos
mov
push
pop
sbb
test
cs
out
mov
imul
bound
fstps
xor
xor
repz
adc
fistpll
incl
pop
mov
es
in
mov
in
lock
add
fsubs
inc
je
jns
imul
lahf
fsubl
into
bound
movl
pop
gs
and
or
adc
mov
cmp
orl
xor
scas
imul
adc
cmc
mov
jg
pop
fiadds
jae
loopne
mov
test
cmovne
inc
pop
dec
roll
mov
pop
roll
inc
mov
and
mov
pop
add
mov
aad
loope
sbbb
out
xchg
cs
sbb
xlat
pop
adc
add
dec
stos
mov
xchg
adc
stos
popa
das
mov
dec
test
incl
push
outsl
call
inc
add
aad
or
in
popl
mov
das
outsl
loop
add
fwait
add
std
push
ret
xchg
dec
sbb
mov
mov
mov
cld
jo
pop
daa
mov
outsl
jg
mov
jl
arpl
push
inc
sub
mov
and
jb
xor
imul
or
rclb
dec
dec
mov
and
orb
fnstsw
add
arpl
sub
jecxz
mov
jne
and
pop
inc
add
jno
int3
pop
add
or
xchg
pop
ret
adc
or
fs
int3
xchg
or
int3
and
pop
in
sbb
add
lahf
mov
mov
sbb
push
inc
jnp
or
adc
add
mov
add
inc
xor
outsl
mov
dec
fdivs
insl
lock
scas
and
adc
outsl
hlt
xchg
stos
jns
cli
sub
jl
sbb
mov
sub
repnz
aas
adc
or
xchg
push
inc
xorb
mov
ret
mov
jl
dec
sbb
inc
mov
stos
and
adc
movsb
sbb
pushf
cli
pusha
aas
call
andb
pushf
stos
iret
xor
add
sarb
out
and
mov
rcl
or
add
mov
rorl
fnsave
xchg
mov
cmp
sbb
jo
jae
int
cmp
mov
push
push
push
inc
or
addb
pop
std
testb
fs
mov
lret
addb
sbb
add
lret
sub
stos
leave
and
mov
add
xchg
push
push
inc
stos
cmpsb
cld
xor
data16
test
jnp
add
mov
adc
js
mov
and
daa
inc
or
adc
add
insb
inc
cmp
fdivrl
cli
in
aas
mov
out
mul
out
test
mov
add
nop
mov
xor
lcall
or
mov
ljmp
inc
xor
inc
and
mov
xchg
lcall
adc
xchg
xor
ret
sbb
mov
stos
popa
adc
rolb
mov
fimuls
sub
lea
xchg
jmp
add
push
jnp
frstor
enter
xchg
dec
sub
outsl
addr16
or
and
sub
push
scas
add
xchg
mov
jmp
adc
and
sbb
rcrb
fimull
call
fwait
aas
fldt
xor
add
and
jge
xchg
cmpb
imul
adc
out
or
sub
sbbl
xlat
mov
add
inc
addr16
lods
arpl
shlb
inc
shll
or
ljmp
or
sti
fs
ja
les
mov
test
inc
inc
shll
aam
mov
pop
push
cld
es
jns
jmp
and
mov
adc
jmp
cmp
loop
or
add
call
mov
pop
xorb
cmp
movl
inc
lea
xchg
mov
mov
add
add
in
add
jne
mov
add
push
test
into
xor
and
clc
mov
out
outsb
inc
pop
aad
pop
fisubrs
ficomps
je
fildl
orl
in
jb
ret
push
or
fwait
adc
out
scas
aas
aaa
int
aad
sub
mov
or
mov
movsl
add
dec
mov
lret
sbb
dec
inc
cli
sarl
repnz
add
pusha
jge
jae
or
rcr
pop
cmpl
mov
add
push
sarb
iret
push
cwtl
in
mov
repz
sar
aad
add
inc
push
out
shlb
lods
ret
sbb
rcll
and
or
sub
cmpsl
imul
mov
add
enter
mov
data16
mov
adcb
dec
lea
or
enter
add
repz
add
jne
mov
pop
fwait
adc
enter
adc
inc
into
mov
loopne
dec
pop
sub
repz
mov
push
loopne
inc
push
leave
lock
cmp
fmul
push
jo
cld
push
push
adc
insb
shlb
and
ss
and
push
leave
and
push
pop
push
das
sbb
mov
push
sbb
dec
pusha
add
outsb
pushf
scas
and
or
in
cmp
enter
sarb
insb
outsb
mov
sbb
mov
adc
inc
fists
push
xchg
pop
cmp
sbb
inc
decl
cwtl
add
mov
add
fadds
add
incl
cli
pop
mov
dec
rclb
mov
cmp
sti
fnstcw
inc
sub
mov
or
fs
xchg
loope
jmp
mov
jl
push
add
and
jne
ret
outsl
adc
in
or
js
adc
mov
jne
sub
lods
stos
add
and
dec
lret
pop
mov
xchg
dec
dec
js
mov
and
xchg
cmp
push
dec
stc
stos
inc
xor
sbb
jecxz
mov
or
loop
lock
stc
stc
dec
pop
cmpsb
pop
popa
pop
in
mov
inc
sahf
add
pop
mulb
add
std
jmp
daa
fildll
test
repz
mov
test
sbb
jmp
add
mov
xor
loop
dec
test
mov
dec
cmp
orl
xlat
cs
out
movb
mov
or
sbb
shl
ret
inc
ret
fists
cs
std
test
cmc
pop
mov
test
dec
push
xlat
fsubrl
test
mov
lods
add
cltd
sub
mov
in
push
lods
incb
out
lods
pop
negb
and
jmp
call
adc
cmp
add
push
lods
mov
call
cli
mov
paddusb
movsl
or
jg
sbb
adc
fcomp
movsb
lock
clc
fwait
and
shl
aaa
push
xor
and
shrb
insb
adc
add
pop
popa
loop
push
adc
add
insb
inc
xchg
xor
test
loopne
repz
cmp
test
cld
lock
cli
push
push
cwtl
mov
insl
mov
sbb
dec
dec
fcmovb
cmp
mov
adc
mov
cs
push
les
xchg
add
add
js
clc
add
inc
cwtl
sahf
insb
in
shrl
sbbb
fisubrs
xor
mov
adc
add
sbb
stc
adc
dec
push
les
int3
cli
adc
pop
insl
daa
sbbl
jnp
or
insb
cmc
or
fnsave
ficoml
inc
pop
cld
shll
mov
sbb
or
sbb
xlat
and
adc
mov
and
faddl
addr16
faddl
lcall
adc
sub
sbb
and
test
sub
jle
dec
xchg
stos
add
sbb
xor
es
fadd
push
adc
add
sub
mov
sub
or
out
and
fwait
pop
call
shll
adc
add
rcll
mov
inc
xor
add
add
arpl
jmp
and
and
lds
mov
sub
dec
mov
push
dec
and
xchg
popf
mov
mov
les
mov
xchg
pop
daa
adc
sbb
cli
es
and
jno
xor
clc
rolb
shrl
pushf
sar
rcrb
cmp
push
xchg
daa
push
xchg
add
sbb
jmp
rcll
dec
js
fmuls
add
inc
pop
add
or
sub
push
xorl
test
scas
add
jne
dec
sarb
mov
addr16
xchg
lcall
in
cwtl
jmp
std
ss
dec
or
into
ss
test
jbe
js
scas
mov
mov
rolb
sbb
or
arpl
pusha
notl
aad
and
push
test
jne
sti
repnz
scas
mov
push
inc
fsubr
xor
lds
das
add
and
and
jo
push
push
mov
or
cmp
orb
add
jne
add
pop
lods
pop
inc
jp
addr16
push
dec
xor
andb
das
sbbl
xlat
iret
enter
and
jp
inc
xchg
sub
pop
mov
les
push
mov
fnsetpm(287
sub
adc
push
jecxz
pusha
testl
jb
mov
push
out
in
cmp
loopne
aas
pushf
or
fcmovnb
push
filds
push
fwait
adc
jecxz
movsb
add
sub
add
sar
sub
out
add
mov
inc
mov
popf
mov
ljmp
mov
nop
push
aas
cwtl
sub
std
mov
in
sbb
shlb
pop
sbb
sub
push
mov
add
popa
dec
inc
add
mov
xor
dec
sbb
jecxz
cmp
mov
dec
sub
sti
outsl
int3
adc
into
jae
adc
or
sub
lock
cmpsb
add
xchg
mov
pop
xor
out
adc
lods
cmc
repnz
sub
push
mov
fidivrl
jo
push
negl
and
push
mov
sbb
sub
js
mov
nop
mov
add
cs
arpl
xor
mov
outsl
add
add
sub
sbb
test
cmp
mov
and
mov
jmp
adc
mov
push
loope
push
pop
les
xchg
jecxz
test
in
sbb
inc
add
sub
orb
xor
into
sub
cmp
loopne
in
inc
sub
lods
fisubrl
sbb
test
xor
in
dec
add
fiadds
xchg
fcomp
mov
scas
push
enter
arpl
es
push
fiaddl
int
fnstenv
mov
dec
xchg
fs
or
add
adc
push
clc
inc
cld
pop
mov
popf
sbb
cmp
outsb
out
add
imul
es
mov
jecxz
add
loope
inc
sbb
mov
jno
stos
cmp
cmp
jl
pushf
inc
cs
mov
xchg
ret
cld
push
mov
insl
adc
or
pop
push
jnp
inc
mov
inc
and
enter
stos
test
mov
add
lcall
xchg
rorl
aas
jle
inc
mov
and
cmc
push
jne
or
stos
pop
push
test
dec
out
fdivrl
ret
jo
or
jb
sbb
add
add
dec
add
adc
inc
faddp
xchg
js
adc
mov
sbb
imul
aaa
mov
loop
outsl
stos
adc
mov
xchg
inc
sbb
ds
and
inc
sub
jo
inc
inc
or
sub
out
rcrb
shr
xor
jge
fs
adc
sbb
ret
add
mov
fs
mov
jne
add
adc
mov
sbb
or
cmp
and
mov
imul
jbe
popf
push
inc
jg
and
lcall
add
pop
aas
jo
in
sbbl
mov
add
push
xor
xor
out
daa
fadd
mov
inc
cmp
inc
jp
xor
cli
adc
ds
int
pop
add
popf
push
or
push
out
pop
or
sbb
out
inc
repz
orb
std
xchg
add
out
fisubrl
test
jne
jp
mov
or
fwait
call
or
icebp
mov
testl
or
rorb
test
pop
sub
xchg
adcl
js
fstp
xchg
aas
test
mov
leave
jge
outsb
js
push
add
xchg
sbb
jns
xchg
test
pop
je
lcall
pop
aam
dec
cmp
mov
xchg
cld
lret
add
jle
xor
pop
jp
mov
add
insb
rorb
push
inc
insb
push
xor
mov
daa
xor
into
add
xlat
lds
cmpsl
loopne
inc
add
scas
pop
mov
or
xor
xchg
cmp
xor
jo
inc
jo
push
jmp
or
cs
sbb
cmpsl
jle
dec
cmp
cld
insb
subl
add
dec
fidivl
xchg
xor
dec
xchg
push
stos
cmc
inc
aam
imul
jmp
lock
add
mov
lea
push
push
pop
lds
mov
mov
test
pop
das
out
jg
push
inc
mov
pushf
outsl
fistpl
inc
pop
adc
inc
dec
cmp
clc
add
stc
sub
dec
shll
or
shrl
adc
dec
fstpl
xor
mov
inc
add
mov
lret
inc
fcmovu
cli
int3
sbb
adc
mov
ja
mov
data16
or
dec
sbb
and
and
mov
push
addr16
sub
cmp
idiv
jmp
jmp
cmp
jne
call
scas
out
jg
shlb
and
and
sbb
push
movsl
ds
inc
int3
xor
xor
fiaddl
pop
add
aam
sahf
decl
idiv
jb
cmc
pop
jecxz
mov
test
loopne
jne
sub
cmp
pop
orl
sbb
xchg
and
xor
add
xor
in
push
aas
stos
cmp
jae
js
fsubrl
shr
xor
push
mov
mov
data16
lea
sub
clc
add
xchg
mov
cmp
mov
stc
xchg
filds
push
mov
pop
xchg
mov
add
jmp
push
and
lret
andl
int3
js
in
sbb
pop
hlt
pushf
cltd
sub
rolb
fs
sbb
cmp
shll
shlb
loop
ret
mov
addl
int3
aad
loopne
jns
cmp
ja
lahf
rcr
push
add
inc
and
xchg
adc
out
dec
mov
inc
es
and
dec
sbb
lahf
mov
cmp
jae
mov
rcrb
int3
daa
xor
xor
cld
sbb
rcll
adc
stos
sbb
fcmove
jo
xchg
sub
es
psubusw
add
ret
or
xor
dec
add
adc
lret
ja
repnz
pusha
lcall
add
xchg
mov
les
js
push
fistl
mov
hlt
mov
test
jne
mov
xchg
mov
enter
or
loopne,pn
adc
aam
jp
js
sub
stc
sahf
pop
lock
into
adc
add
clc
pop
divb
and
je
sbb
or
jg
jmp
or
add
mov
xor
lret
push
or
mov
out
ljmp
les
xor
add
test
icebp
or
pop
xor
lods
xor
test
je
dec
mov
lds
ret
add
lahf
inc
or
or
cmp
pop
sbb
jp
xor
adc
push
cmp
inc
pop
arpl
fstpt
xor
dec
hlt
test
xor
mov
rcrb
and
or
or
loop
or
ja
lahf
sbb
adc
shl
push
fisttps
add
outsl
aaa
test
out
sahf
mov
push
sbb
and
adc
scas
fnstcw
shlb
add
loopne
jo
add
je
lods
mov
sahf
int3
push
mov
jmp
add
mov
cmpsb
cmp
sub
xor
add
int3
pop
dec
int3
or
jne
sbb
insl
shrl
int3
data16
xchg
loopne
imul
and
and
test
sbb
lcall
and
aaa
dec
or
into
jge
jns
js
push
ss
rclb
rorl
pop
cmp
pusha
and
insl
insb
mov
inc
push
adc
pop
add
ret
rorb
adc
enter
ret
xor
repnz
enter
cmpb
loop
jne
dec
imul
xor
jnp
xchg
cmp
xchg
sub
clc
or
xchg
rsqrtps
and
pop
hlt
stos
xor
pop
inc
cmp
add
stos
push
into
shrl
fwait
pushf
addr16
add
pop
arpl
sahf
xchg
icebp
mov
adc
jne
leave
inc
lods
mov
mov
xchg
out
xor
push
repnz
int3
ret
jnp
shl
push
stos
aaa
in
dec
jl
mov
dec
pop
adc
shll
ret
cmc
mov
add
popa
in
sub
mov
shl
cmc
or
shl
inc
ja
lea
cmp
fisttpl
and
sbbb
test
scas
lea
lock
rcll
push
mov
xor
lret
jno
cmp
inc
aam
mov
loope
test
out
or
fsubrp
into
setnp
sbbb
jno
push
lock
lods
cmp
xchg
aad
add
add
aas
test
cmpb
xlat
push
add
aaa
into
dec
push
cmp
lock
push
cmc
fsubrs
and
pop
mov
cmp
sti
xor
push
and
push
sti
es
out
les
mov
jge
popa
ds
inc
and
aam
sbb
jmp
mov
adc
cmpsl
sbb
adc
cmp
pop
xor
nop
xor
stc
jne
sub
leave
add
test
mov
inc
add
nop
pop
call
sarb
pop
andb
call
scas
push
jle
sbb
mov
in
jae
lock
mov
adc
dec
orl
das
sbb
add
add
pop
adc
and
ficoms
rorl
aaa
pop
notl
jmp
adc
jne
in
jecxz
adc
jbe
cld
imul
rcr
sbb
inc
or
mov
hlt
dec
cmp
adcb
arpl
fucomip
in
hlt
or
stc
pop
or
mov
jge
icebp
lea
add
shl
mov
shlb
ficomps
int
cld
sbb
jge
push
xchg
mov
dec
sbb
rcrb
sub
dec
ds
icebp
sbb
sbb
or
jo
jp
cmp
add
inc
subb
call
jo
and
dec
ret
add
adc
mov
ss
in
jecxz
dec
stos
and
cmpsb
data16
outsl
ret
push
pushf
lds
movsb
lret
mov
imul
enter
stos
icebp
mov
jae
stos
and
inc
mov
adc
popa
cmp
icebp
rcll
pop
les
sbb
sarb
pop
dec
clc
push
icebp
add
inc
mov
shl
jg
add
adc
adc
sbb
push
arpl
push
imul
adcb
aad
psllq
push
popf
mov
xor
popa
mov
nop
int3
int3
lods
and
or
dec
loop
dec
cmp
sbb
sub
mov
ss
cwtl
add
incb
out
add
sbb
inc
or
ljmp
cmp
pusha
push
pop
xor
sbb
push
fidivrs
or
push
orl
pusha
lods
ss
pop
lcall
dec
jbe
fistpll
popa
cmp
movsb
sbb
js
rcr
in
rcl
adc
call
call
push
mov
inc
xchg
addb
xchg
jo
test
dec
cwtl
adc
and
repz
and
jns
inc
imul
out
test
cmp
or
stos
pop
loope
mov
in
pop
push
stc
adc
pop
pop
leave
mov
daa
les
dec
jo
js
xor
push
adc
out
inc
rol
jb
mov
aaa
or
ret
add
jo
testl
inc
je
adc
jmp
test
iret
popf
test
jbe
xor
adc
int
in
cmc
push
xor
enter
pusha
push
vmread
kmovb
mov
lret
cmp
dec
jge
xchg
std
emms
mov
inc
rorb
int3
lods
mov
or
loope
sbbb
or
mov
dec
jg
mov
cmpsb
xchg
mov
cmp
sub
outsl
xchg
popa
cmp
rcl
xchg
sub
mov
adc
fiaddl
ss
and
push
cltd
je
fmull
mov
mov
pop
adc
add
sar
data16
fwait
pop
loopne
add
shll
aas
sbb
and
nop
and
or
fsubr
pop
and
add
sbb
ret
lods
jnp
nop
cli
rorb
cmp
sub
test
dec
inc
mov
ja
or
jno
inc
jmp
aad
mov
jno
test
cmp
jo
mov
xor
std
shlb
out
mov
or
or
pushf
loope
or
push
sets
leave
sbb
pop
sahf
test
nop
lock
sbb
add
icebp
ret
push
dec
adc
es
mov
or
enter
sbb
mov
aas
sarl
loope
or
xor
clc
inc
add
adc
test
dec
jle
sbb
and
and
push
inc
add
pusha
inc
and
fcomps
xor
add
es
jmp
sub
adc
xor
ljmp
bswap
stc
dec
dec
sbb
lds
lock
dec
adc
pop
int
das
aam
xchg
pusha
push
xor
dec
aaa
inc
sbb
inc
cltd
testl
nop
aas
add
adc
leave
mov
mov
and
jae
mov
xor
icebp
dec
xor
addb
nop
jmp
lods
and
enter
sub
add
pop
popf
and
js
les
adc
sbb
jbe
sti
rorl
inc
ficoms
daa
cmp
mov
or
inc
sub
sbb
push
fs
movsb
cwtl
adc
xchg
sbb
scas
or
neg
fidivl
jmp
ljmp
les
xor
inc
mov
rcll
pop
in
popa
mov
ret
add
loope
xchg
and
pop
sbb
out
decl
les
jecxz
jb
sub
push
iret
inc
pop
stos
add
inc
dec
mov
aas
test
jae
cmp
sbb
or
pop
mov
int3
fwait
sbb
add
fwait
dec
fldenv
jge
les
inc
xchg
push
shll
insb
fbld
mov
mov
dec
xchg
inc
adc
sub
cmp
nop
aam
ret
lcall
adc
fs
popf
dec
add
arpl
out
and
push
jbe
sub
lds
inc
adc
andb
or
mov
add
jmp
dec
inc
mov
rorb
mov
push
mov
jge
xchg
ret
pop
inc
sbb
je
jnp
mov
fwait
lcall
mov
inc
gs
jb
outsb
jb
inc
fbstp
lret
mov
inc
or
fldcw
add
and
adc
andl
mov
loope
pop
cmp
icebp
and
popa
fidivs
mov
cmp
inc
mov
lds
inc
or
int
lahf
in
push
sbb
out
jl
sbb
popf
push
jle
xchg
cmp
dec
out
pcmpeqd
pop
fwait
mov
test
bound
fbld
push
jl
loop
cmpsl
call
push
jne
adc
lods
sbb
sbb
aas
adc
inc
nop
test
sbb
jo
in
push
cwtl
hlt
or
mov
push
addr16
jmp
pop
sub
pop
dec
cmpb
dec
jb
mov
jno
mov
test
xor
inc
dec
out
adc
flds
mov
js
sub
inc
push
jae
adc
xorl
stc
sti
push
je
cmp
push
cld
pop
xchg
adc
mov
xor
shlb
mov
incl
aad
fwait
add
out
out
lods
mov
push
mov
test
scas
arpl
dec
dec
mov
or
leave
cmp
add
sub
aam
imul
pop
jmp
mov
das
sbb
push
adc
icebp
lea
out
and
or
or
dec
xor
jl
sub
test
push
inc
test
test
daa
adc
stos
jne
or
adc
jno
rcrb
push
arpl
lds
imul
jbe
sub
enter
into
xor
dec
add
pop
inc
jno
xchg
lods
nop
out
into
inc
aad
cli
cmp
mov
adc
fldcw
test
xor
imul
rorb
sub
jg
dec
aam
mov
adc
push
aad
arpl
fwait
xlat
stos
mov
mov
cmp
push
sub
jo
data16
stos
pop
or
add
fidivs
insb
repnz
lret
mov
popa
icebp
inc
enter
and
xchg
and
and
in
and
xchg
xchg
push
cmp
jmp
jl
cmp
subl
data16
sbb
mov
adc
dec
pop
xchg
loop
loopne
mov
mov
pop
les
jae
mov
xchg
sub
push
cmc
enter
lods
aad
mov
push
adcb
test
int3
or
mov
inc
ret
insb
dec
cld
cltd
and
add
or
imul
xchg
sub
mov
das
cmp
mov
adc
sbb
loope
addr16
into
and
insb
sub
adc
mov
push
das
sbb
adc
insb
pop
add
push
clc
push
aad
mov
dec
mov
add
cs
dec
data16
outsl
sbb
xor
inc
pop
mov
lods
mov
inc
in
mov
sbb
fwait
lret
push
fidivrl
sar
or
aam
movsb
sar
ds
cmp
sub
and
cltd
jns
es
mov
and
data16
fwait
test
jecxz
ret
xor
inc
mov
dec
mov
mov
or
cmp
or
mov
xlat
sbbb
mov
cmp
add
xor
cli
daa
xor
fadds
mov
push
loope
outsl
outsl
out
fsts
addb
imulb
push
push
sub
inc
push
rol
xor
in
aam
add
fimull
pop
inc
in
bound
and
add
hlt
sbb
aam
push
outsl
lcall
sbb
mov
aas
and
or
mov
adc
roll
ret
popa
or
add
pusha
add
stos
and
add
sbb
jmp
jp
mov
lahf
iret
outsl
or
pop
into
fucomp
push
outsl
fadd
mov
add
mov
rcrl
sbb
lds
nop
xchg
cmp
and
jg
jp
pop
bound
push
inc
mov
jge
sbb
and
xchg
cmp
and
aas
loope
cmp
ss
enter
pusha
fwait
adc
lods
push
mov
xchg
push
xchg
push
aaa
pop
adc
xlat
test
ljmp
sbb
es
shll
pop
js
push
adc
sahf
fidivl
daa
cmpsl
or
pushf
jecxz
mov
or
fnstcw
cs
pusha
mov
adc
mov
pop
ret
imul
add
filds
inc
stos
push
dec
lods
dec
mov
stos
stc
outsb
inc
xchg
xor
push
add
push
cmp
aaa
pop
mov
hlt
mov
push
adc
xor
aad
jle
jo
test
or
xchg
stos
enter
test
int
jo
push
lods
sahf
shll
sub
or
and
lods
push
jo
jo
js
fnsave
hlt
int
jae
dec
dec
mov
test
js
sbb
sbb
push
pop
out
sar
out
and
cmp
iret
pop
adc
adc
mov
imul
in
sub
loop
mov
push
mov
mov
inc
int
sti
lods
pop
push
lock
jno
push
xor
cmp
out
cmp
dec
rcrb
jnp
pop
xor
inc
add
ja
mov
sbb
add
and
push
shlb
xor
mov
and
or
lds
or
into
inc
xor
mov
lods
mov
int3
pop
lock
or
mov
cmc
iret
add
push
cmovle
loop
loopne
adc
out
into
lcall
sti
roll
inc
ljmp
leave
ret
jg
std
fsubl
mov
adc
idiv
icebp
dec
jo
das
add
scas
ljmp
jbe,pt
inc
shlb
das
push
test
outsl
mov
sbb
xchg
jb
in
xor
dec
pop
and
add
ja
stos
add
in
push
inc
jg
mov
fs
add
cmp
es
ds
out
jp
xor
add
or
call
sbb
mov
sub
jmp
adc
inc
enter
loope
and
sbb
int3
or
std
add
add
add
add
mov
int
mov
pop
imul
jg
std
pop
mov
pop
sub
sub
mov
jle
push
cmc
decl
add
dec
add
add
sarb
adc
pop
cli
decl
pop
pusha
jnp
sbb
std
add
sub
sbb
jg
pop
popf
dec
and
sbb
pop
cltd
add
std
xor
sbb
incl
push
and
push
test
add
add
iret
add
xchg
dec
js
and
test
daa
and
mov
test
lods
pop
pop
or
cmc
pusha
pushl
pop
dec
orb
ds
hlt
adc
pop
stos
mov
bnd
push
repz
loopne
adc
lods
aas
nop
flds
and
xor
mov
mov
pop
cmp
lret
adc
mov
fstp
pusha
stos
clc
adc
sub
rolb
pop
mov
jg
mov
inc
xor
push
mov
xchg
sub
pop
add
or
call
fisubrl
test
jnp
dec
push
hlt
jo,pt
loope
lock
dec
lea
xor
inc
adc
xchg
jge
dec
cmpb
stc
inc
ljmp
and
outsl
add
imul
imul
inc
add
add
lods
loope
xchg
lret
call
dec
notb
or
out
lock
push
lcall
add
add
sahf
add
fisubs
stos
ljmp
adc
xor
sti
or
sub
cmp
ja
mov
lret
dec
es
dec
or
inc
dec
or
pop
in
stc
sub
outsb
and
jge
decl
cmp
dec
mov
mov
sub
and
pop
sar
outsb
lock
cmp
ret
cld
xchg
mov
add
aaa
mov
cmp
lea
inc
pop
add
mov
ja
popa
jg
lahf
leave
nop
popl
add
outsb
gs
ljmp
ret
jnp
fwait
popa
and
das
aas
mov
call
jno
push
xchg
cmovle
add
and
xor
cmp
loopne
mov
leave
mov
or
fucomp
jecxz
rclb
cld
out
nop
jne
stc
mov
mov
jg
push
pop
rorl
popf
call
sub
leave
sub
scas
mov
pushl
test
fwait
data16
addb
movsb
testl
cld
js
nop
daa
mov
sub
push
xor
les
test
mov
test
mov
mov
cmp
loop
repz
ljmp
outsl
add
mov
add
or
loopne
jl
xor
mov
gs
cmp
mov
repz
nop
add
sub
rolb
adc
mov
add
cs
and
inc
jo
jge
xor
cmpsl
xchg
data16
stc
cmp
fldcw
aas
cmp
pop
mul
sub
cmp
mov
inc
push
loope
dec
add
ret
dec
inc
lahf
xor
xor
imul
pop
pop
les
pop
loope
inc
push
sti
xchg
les
pop
jo
push
xchg
or
push
lret
xor
inc
pop
fldl
or
sub
mov
add
or
dec
add
sub
jae
or
into
or
adc
or
cmp
and
in
enter
cmpb
add
sbb
fwait
int
sub
sub
mov
or
movsl
mov
test
data16
sti
add
inc
fldcw
jp
imul
jmp
pop
adc
cld
sbb
or
xor
inc
ret
mov
jecxz
out
mov
ss
scas
adc
cmpsb
sub
repnz
dec
sbb
mov
addl
inc
mov
cld
scas
lcall
adc
js
leave
xchg
int3
add
aad
xor
fidivrl
push
add
add
loop
cltd
sub
jmp
or
inc
stos
push
mov
push
sub
loopne
xchg
idiv
sbb
data16
inc
fidivl
push
cld
inc
sahf
add
mov
lods
jle
sbb
xor
inc
in
rorb
dec
mov
pop
ss
stc
int
je
enter
pop
pop
popa
dec
inc
roll
add
pushl
sahf
pop
pushw
fiadds
jbe
push
movups
mov
mov
lock
mov
pop
fists
adc
in
lods
out
jle
idivb
mov
jg
es
lds
push
imul
adc
imulb
xchg
sub
cmp
push
test
dec
or
incl
lds
hlt
sub
test
mov
in
mov
pop
dec
and
test
cwtl
icebp
sbb
adc
lret
cmp
and
pop
push
fcomip
adc
mov
push
mov
or
xchg
or
jecxz
mov
incl
out
jb
loope
jecxz
jp
out
mov
lods
adc
jecxz
add
mov
push
jg
movsl
adc
jmp
pop
inc
aad
loopne
loope
mov
mov
int
push
or
jge
push
sbb
stc
add
dec
dec
xchg
shl
aas
jmp
dec
add
rolb
les
xchg
popf
gs
inc
adc
inc
push
push
and
aam
sbb
mov
add
fdivrp
add
xor
cli
cli
push
fists
inc
stc
mov
push
imulb
adc
or
addl
sbb
add
out
cwtl
std
decl
test
shrb
inc
dec
or
sub
and
jle
mov
add
loopne
aad
gs
test
pop
rorb
das
add
or
add
lcall
or
sbbb
jns
sub
mov
lock
clc
inc
and
jl
rorl
pop
cld
dec
push
addr16
pop
and
push
lret
loopne
mov
ret
jb
inc
data16
mov
lea
gs
xor
lgs
icebp
adc
out
test
pusha
sub
scas
cmp
add
test
sbb
jge
adc
aad
sbb
mov
inc
push
insb
add
jnp
push
mov
rorb
sbb
or
cli
aaa
lret
imul
inc
fisttpl
push
decl
fldl
sub
dec
mov
js
testb
scas
ror
dec
in
stos
in
in
pop
frstor
test
xchg
sbb
pop
testb
insl
jbe
fidivl
sbb
lea
in
std
loopne
xorl
pop
mov
push
jecxz
mov
daa
imul
or
fwait
jo
pop
es
mov
cmp
rcll
jge
cmpb
xchg
mov
sbb
rcrl
sbb
sub
pusha
orl
hlt
mov
bound
xchg
xor
mov
xchg
sbb
push
inc
or
push
cmc
fisubl
xchg
xor
xchg
test
jmp
or
cld
pop
and
rolb
xchg
cmp
add
jno
mov
pop
clc
adc
jnp
mov
loopne
das
fwait
cwtl
mov
push
aam
imul
xor
add
add
xchg
shll
jle
xor
sbb
inc
test
inc
aas
and
inc
dec
inc
rorb
test
sbb
cltd
cwtl
mov
or
fdiv
add
fcom
xchg
mov
popf
aas
mov
push
shlb
adc
lods
push
sub
gs
mov
and
in
xor
fs
xor
xchg
mov
rcr
add
incl
pop
loop
decb
bound
push
mov
or
and
test
inc
call
inc
add
add
pop
mov
xlat
mov
das
adc
movl
movsb
sub
lret
rorl
pop
cmp
ljmp
sub
jg
movsb
pop
decl
dec
dec
mov
sarb
gs
paddsw
je
iret
inc
jo
popf
sbb
and
fcmovb
fistpll
pop
dec
jbe
xchg
add
fs
mov
stos
test
pop
insl
mov
xchg
outsl
loopne
pusha
rcrl
adc
xchg
call
dec
clc
jmp
in
xor
lds
pop
mov
scas
adc
mov
popf
jle
imul
sbb
imul
sbb
popa
ljmp
dec
or
sub
sub
adc
insb
pop
fistpl
std
lods
sbb
add
jnp
add
adc
pushl
xchg
ss
clc
aam
lea
addb
push
adc
iret
insl
mov
movsb
jb
ljmp
in
mov
jmp
push
das
imul
mov
mov
in
fld
in
outsl
call
mov
add
dec
pop
pushl
add
mov
inc
cmp
inc
pop
bound
pop
call
cmpsb
mov
inc
pop
mov
popa
xor
out
jg
jl
jo
les
cwtl
ss
inc
push
sar
push
inc
dec
int
lods
repz
add
jno
xor
fwait
pop
fdivr
mov
loopne
mov
mov
push
adc
adc
ja
lds
loope
call
in
add
lods
pop
mov
dec
sub
imul
jl
mov
add
outsb
es
push
pop
clc
inc
or
lahf
fdivl
adc
mov
enter
push
mov
pop
imul
jecxz
inc
sti
mov
incl
sarb
and
and
icebp
and
push
mov
aad
js
hlt
fdivr
mov
call
jl
outsl
cmp
sarl
std
gs
xchg
push
sub
pop
mov
stos
cld
sub
inc
insl
dec
dec
mov
loopne
inc
xchg
or
test
and
lcall
add
pop
jbe
movsl
lods
jae
push
aam
dec
icebp
push
pop
movsl
and
clc
inc
test
and
dec
cmp
mov
dec
dec
imul
rcll
and
enter
js
icebp
loop
push
icebp
adc
push
sbb
push
jno
pop
lds
rcr
icebp
lea
dec
xchg
out
aad
sti
jg
movsl
add
or
ret
cltd
clc
mov
xchg
clc
mov
cld
inc
arpl
in
ds
or
incl
into
cmp
dec
jecxz
mov
mov
outsl
jl
mov
call
add
or
cmpsb
jle
xor
pop
dec
lahf
push
movsl
sbb
clc
sbb
jl
sbb
and
imul
test
pop
xorl
insl
jl
xchg
aad
movl
pop
clc
mov
cld
insl
push
adc
out
lret
sti
mov
jle
lcall
addb
jecxz
jno
gs
mov
add
pusha
jg
sub
lock
aaa
xchg
mov
cmpb
test
pushl
and
or
mov
cmpsb
lock
adc
fbstp
pushf
push
or
sub
push
sub
mov
and
jp
push
inc
stc
add
loopne
aaa
inc
adc
push
out
pop
push
sbb
js
fcmovnu
je
mov
cmp
fcoml
mov
add
gs
aaa
mov
adc
rcl
jbe
or
sahf
mov
call
xchg
pop
cs
add
and
popa
xlat
cwtl
mov
jae
xor
push
mov
cli
inc
sub
ljmp
mov
lods
and
pop
jge
outsl
out
loopne
int3
ja
jns
sub
insb
cli
lods
mov
adc
push
cmp
push
clc
jmp
test
out
retw
jo
push
jecxz
sub
or
lods
imull
insb
lock
test
dec
fimull
das
pop
jb
ds
sub
pop
loopne
xor
pop
mov
mov
aad
pop
add
inc
inc
sbb
inc
out
lods
pushf
cltd
pushf
jmp
clc
pop
pop
and
pop
pop
push
and
in
into
and
cli
or
mov
lret
mov
mov
scas
outsl
jne
jge
orb
mov
rcll
push
stos
ljmp
cltd
add
or
fstl
mov
and
cltd
ljmp
outsl
pop
xchg
pop
sub
mov
dec
dec
lret
or
mov
pop
out
push
xchg
stc
cmp
out
mov
pop
xor
lcall
dec
dec
clc
test
xchg
mov
sbb
loop
inc
sar
clc
cmp
adc
roll
adc
xchg
inc
xor
in
cmpsb
jbe
jle
add
shrl
cmovle
or
cmp
popf
push
or
sbb
inc
mov
add
andl
push
inc
dec
or
add
mov
mov
inc
inc
pop
adc
scas
aad
mov
push
lcall
push
in
jne
aas
dec
adc
jmp
cs
mov
push
dec
add
cmp
or
inc
or
aam
push
aam
add
aas
cmpl
inc
insb
loopne
call
cmpsb
loopne
inc
lods
jge
jno
inc
orb
or
or
das
dec
xor
xor
push
flds
push
mov
movsb
adc
xchg
sbb
add
add
push
sub
test
jmp
xor
outsb
adc
or
sbb
lods
inc
adcl
aaa
loopne
xchg
or
and
fs
xchg
add
inc
cld
pop
add
scas
adc
sub
xor
jecxz
rcrb
or
jmp
rdmsr
loop
push
addr16
pop
cs
mov
xlat
pusha
push
add
clc
push
push
push
test
sbb
add
xor
inc
mov
ret
and
xchg
sub
dec
pop
mov
out
and
sahf
or
and
dec
inc
adc
add
adc
add
testl
cmpsl
push
cmp
inc
push
dec
and
clc
or
mov
dec
cld
sub
adc
or
or
loope
mov
adcb
stos
dec
mov
call
mov
and
xor
aad
loopne
push
sar
mov
cs
pop
xor
and
inc
mov
lods
je
lock
lret
cltd
outsb
push
loop
mov
adc
xchg
loope
push
cld
pop
iret
jmp
mov
sub
cmc
xchg
pop
sub
push
xchg
mov
stos
mov
in
loopne
insl
ret
das
cmp
mov
clc
xor
cmp
iret
and
movsl
mov
inc
xchg
jmp
xchg
fcoms
jbe
call
sub
pop
cltd
loopne
std
notb
mov
cmpl
in
test
mov
pop
mov
xchg
pop
or
jae
lcall
pop
cmp
pop
xchg
imul
pop
outsb
hlt
in
jmp
adc
mov
push
test
fwait
cmc
pop
std
das
ret
dec
mov
cmp
sub
mov
cs
cwtl
jle
xor
call
out
add
and
test
cmc
push
rcrb
lea
sbb
lods
movsb
sbb
sti
les
xor
inc
jle
clc
filds
hlt
js
lods
stos
subl
enter
push
xchg
mov
les
es
outsb
cmc
es
scas
popa
insb
jg
hlt
mov
add
adc
jmp
inc
push
jmp
inc
xor
xchg
lret
sbb
sub
jl
cli
jmp
cli
test
or
cmp
xchg
cli
aas
hlt
loope
arpl
mov
cmpsl
and
fsub
add
dec
cmpsl
sub
enter
hlt
cmp
sbb
sub
xor
mov
fildll
test
hlt
jle
enter
shrd
mov
pop
clc
pop
jo
mov
mov
dec
ficoml
xlat
out
dec
sub
xchg
js
lret
inc
mov
jb
rorb
cmp
or
ret
sub
rcrl
out
cmp
jne
xchg
xchg
push
fists
test
icebp
mov
mov
aam
movsl
mov
add
dec
es
adc
pop
add
lock
pop
popf
insl
jecxz
in
jecxz
dec
bound
test
lea
scas
cmp
clc
idivb
stc
outsl
mov
fsubrl
cmp
xor
incl
dec
push
xor
add
push
clc
pop
icebp
pop
lock
rcrl
addr16
pop
stc
mov
scas
and
push
push
jl
jl
sbb
imul
pop
fistpll
aaa
mov
inc
out
sbb
pop
or
dec
add
dec
sti
clc
fstpl
repz
jp
sbb
inc
lret
orl
mov
enter
cmp
or
ljmp
mov
mov
mov
add
jle
clc
or
movsb
inc
inc
sbb
inc
push
pop
out
movsl
in
xchg
mov
xchg
insb
imul
push
jg
lds
push
xchg
int3
lret
xor
push
clc
das
aad
into
andb
xchg
int
mov
loop
into
jecxz
add
xchg
adc
sbb
push
lahf
movl
clc
dec
push
movsb
sub
lret
mov
shll
lcall
pop
es
pop
mov
clc
jo
dec
and
test
imull
shll
popf
repnz
scas
or
lock
jg
mov
xchg
adc
cmc
scas
test
fisttps
or
mov
imul
shlb
jno
jmp
mov
addb
imul
sub
sbb
lods
add
sbb
std
add
adc
jo
ss
out
js
aam
lret
cmp
sub
loop
pand
pushf
sbb
sti
sbb
or
cwtl
call
sbb
lcall
cmovae
mov
cmpsl
fisttpl
dec
and
push
loope
jbe
add
and
adc
xchg
jmp
xor
in
sti
push
xchg
dec
aas
dec
dec
inc
rcl
sub
cwtl
out
cld
lock
or
push
add
and
mov
movsl
fiaddl
add
shrb
xchg
sbb
mov
adc
pop
xor
adc
pop
lods
push
xchg
mov
or
inc
mov
inc
xchg
inc
test
hlt
mov
aas
or
xchg
inc
xchg
jle
out
addr16
add
cmp
xor
sbbb
add
adc
sub
sarl
ret
pop
outsb
pushf
test
pop
adc
nop
adc
push
xor
cs
fsubrl
mov
pop
mov
in
fadds
loope
push
lahf
xor
mov
mov
jle
rorl
addl
stos
lods
lds
push
andb
in
rolb
fsubrs
call
cltd
inc
xor
dec
fsubr
in
sarl
in
dec
lock
add
shrl
cmp
jno
sbb
xor
xchg
ds
mov
add
data16
sub
dec
insb
sbb
scas
mov
loopne
test
scas
mov
fildll
add
jbe
adc
mov
push
loopne
sub
ret
or
bound
lret
test
add
pop
jb
or
rcrb
hlt
and
mov
icebp
clc
ret
ds
xor
or
dec
add
and
or
cmp
xor
adc
das
mov
sub
jmp
pop
xchg
loope
add
out
jb
testb
pop
movsl
xorb
cwtl
xor
retw
enter
outsl
scas
enter
aam
les
mov
add
jnp
mov
sub
sub
xor
nop
ret
and
ss
ret
repnz
sbb
negb
cmp
leave
outsl
leave
and
adc
outsl
loop
sbb
or
repz
arpl
mov
sbb
ret
xor
movsb
dec
sbb
pop
or
push
loopne
and
add
push
jbe
gs
mov
pop
les
sub
sub
test
das
lock
ja
add
or
lods
push
stos
mov
lret
xor
xor
or
pop
pop
mov
mov
cltd
mov
mov
ret
and
sub
mov
mov
cli
dec
xor
mov
and
xchg
cli
mov
inc
inc
cltd
sbb
add
shlb
andb
mov
decl
mov
push
sbb
jno
ljmp
add
fucomip
clc
cwtl
sub
enter
and
addr16
movsl
sbb
xor
adc
sub
xchg
and
pmulhw
pop
jg
ja
xchg
xchg
inc
add
pop
stos
dec
nop
mov
leave
enter
push
cmp
xchg
in
jmp
inc
sbb
push
aad
stc
and
mov
push
mov
mov
add
mov
xor
fstp
or
push
fcmovne
sarb
jg
mov
out
xchg
iret
rcl
das
in
and
cld
out
das
lock
cld
aaa
and
xor
das
loopne
icebp
bound
gs
fbld
sbb
sbb
mov
mov
or
test
push
pop
sbb
in
call
pop
cmc
dec
aas
mov
jnp
gs
and
and
rcr
xchg
in
outsl
les
jno
add
push
rcrb
insl
ja
out
mov
shlb
inc
and
call
inc
adc
cmp
sbb
dec
mov
ljmp
dec
ficomps
outsl
adc
mov
lock
mov
ljmp
jbe
and
fisttps
xchg
shll
sub
aaa
outsb
fistps
les
dec
xor
mov
je
jns
in
lea
xchg
pop
arpl
sbb
sub
jmp
jecxz
inc
and
movsl
cld
mov
xor
add
sbb
adc
or
xchg
mov
inc
hlt
neg
loop
sub
add
int3
sub
cmpsl
mov
inc
dec
ret
ja
pop
xlat
loop
addb
push
add
movsl
xchg
sbb
and
js
mov
sbb
fwait
mov
fildl
insl
or
test
loop
or
add
pop
pusha
inc
xchg
inc
push
add
mov
mov
mov
std
repz
mov
pop
ljmp
xorl
int3
mov
adc
xor
adc
sub
xchg
arpl
adc
mov
sbb
popa
imul
and
incl
out
insb
fimull
push
sub
test
fs
xor
jbe
hlt
adc
out
arpl
inc
mov
ljmp
adc
jl
arpl
push
cld
aaa
pop
inc
dec
jecxz
jle
ljmp
mov
sbbb
dec
cwtl
sub
add
test
std
loop
push
cmp
and
mov
aaa
cli
outsb
in
jmp
jl
sbb
sub
movsl
pop
ss
adc
out
pop
add
jb,pt
xor
jmp
ret
jnp
aam
mov
and
pop
push
jl
mov
pop
inc
pop
cli
sti
ret
repz
out
push
js
ja
xchg
leave
outsb
sbb
pushf
adc
testb
imul
movsl
gs
sbb
aad
insl
fsts
jp
mov
sbb
mov
xchg
xor
clc
mov
repnz
sbb
adcb
mov
and
rorl
data16
fldt
stos
sbb
loop
inc
and
loopne
sti
gs
ret
xor
stos
sub
add
pop
lret
xchg
dec
ja
in
jle
rolb
hlt
sbb
lcall
adc
fcomip
lret
pushf
add
clc
cmpsl
or
loopne
jmp
repz
adc
xor
add
aas
shlb
sbb
pushf
sbb
std
mov
cli
nop
shr
and
pop
in
xchg
dec
ds
rolb
cli
das
cmc
xchg
add
push
mov
ja
insl
das
stos
mov
gs
add
mov
push
dec
push
push
mov
je
mov
jg
lea
mov
adc
push
pop
fadds
test
addb
or
mov
scas
imulb
in
sahf
ret
push
sub
adc
push
xchg
mov
shll
sub
adc
jecxz
pop
fcomp
mov
cmp
add
push
fs
out
lahf
add
js
push
scas
xlat
ret
lock
or
xor
les
pop
ljmp
repnz
dec
das
std
dec
les
jae
in
xorb
xchg
mov
dec
sbb
sbb
das
push
pop
ja
cltd
sub
push
psubusb
hlt
or
imul
stos
movsb
xchg
loopne
push
push
aad
jne
and
test
sub
xchg
adc
mov
addb
push
adc
pop
push
mov
cmp
sbb
add
out
push
jmp
pop
add
and
icebp
adc
xorb
jg
aaa
clc
xchg
test
scas
adc
and
stc
jg
lcall
dec
insb
push
test
cwtl
das
cmp
mov
push
xor
adc
mov
test
push
clc
das
lock
test
inc
hlt
adc
std
mov
mov
cmp
fbld
dec
shll
xor
call
shrb
ljmp
inc
inc
in
pslld
push
das
jne
loop
mov
rorb
inc
fdivrs
addr16
and
or
adc
sbb
js
fcmovnbe
lods
repz
jns
sbb
andb
mov
jmp
and
js
or
lods
xchg
fxch
push
or
arpl
decl
mov
pusha
push
and
sub
xchg
add
adc
je
cwtl
or
push
jecxz
cmp
or
std
aas
mov
jg
or
mov
inc
cmp
enter
fistpll
rorb
inc
clc
mov
test
inc
inc
sub
mov
lods
xor
fisttpl
sti
pop
cmc
inc
mov
pop
test
mov
cmp
sbb
loope
dec
inc
lock
popa
push
mull
mov
xor
inc
pop
or
mov
aaa
add
adc
out
pusha
add
ja
in
and
push
por
aad
jo
pop
mov
lods
cwtl
in
pop
mov
roll
pop
jg
lahf
sub
push
mov
in
mov
call
lock
dec
and
xor
cld
filds
inc
lods
push
inc
clc
xchg
shr
hlt
adc
dec
lcall
je
mov
cmc
ds
sbb
ror
mov
and
decl
cmp
mov
add
lahf
test
mov
sbb
lahf
pop
jo
fbld
and
sub
mov
add
addr16
mov
sti
pop
mov
in
and
dec
imul
mov
leave
or
repz
mov
scas
mov
and
dec
xchg
sbb
push
nop
fsubrl
decl
inc
stos
fcoms
pop
les
and
adc
mov
fistpll
adc
cmpsb
dec
ficompl
call
add
les
in
mov
push
mov
pop
movb
inc
icebp
fmul
mov
sub
popf
inc
enter
ficompl
xchg
outsl
add
and
jg,pn
gs
ljmp
ret
add
sahf
mov
xor
ss
mov
loop
pop
ficompl
sbb
jecxz
adcb
repnz
sarl
or
out
cmp
repz
aas
js
dec
and
add
sub
adc
add
lods
push
jg
cmc
das
cli
mov
push
clc
adc
sbb
push
das
jo
dec
ret
jmp
cmpsl
mov
pop
lea
call
pop
add
cmp
lret
and
mov
imul
sub
xor
dec
dec
xorl
push
roll
stos
sar
clc
addb
negl
popa
adc
loope
stos
mov
inc
or
xchg
jl
incl
mov
fistpl
xchg
mov
jl
inc
stc
mov
mov
inc
cli
xor
add
shll
lea
loop
ljmp
pop
adc
add
rolb
mov
xchg
sbb
addr16
ljmp
scas
imul
xchg
out
adc
sub
and
push
les
sbb
stc
mov
shl
or
mov
shrl
mov
cltd
arpl
add
or
outsb
je
lea
fildl
sub
mov
or
pusha
push
arpl
fstpt
mov
adc
dec
inc
sub
fistpll
xlat
arpl
or
scas
pop
xchg
dec
push
js
adc
and
dec
imul
mov
idiv
test
subps
ds
xchg
sbb
or
mov
inc
push
push
fcompl
rclb
jle
rorl
mov
scas
mov
aaa
or
aaa
xor
mov
sbb
subl
ljmp
mov
cmp
sbb
sbb
icebp
xor
mov
aaa
std
mov
cmp
ljmp
pop
fistpl
adc
adc
das
cld
sbb
pop
push
test
dec
mov
jmp
cmc
jp
lret
mov
mov
outsl
bound
icebp
mov
pop
mov
movsl
fdivrp
in
aad
push
sbb
xchg
adc
mov
sub
and
xchg
mov
and
pop
clc
je
dec
movb
inc
repnz
in
loope
pop
icebp
popa
inc
fldcw
je
add
lods
mov
xchg
mov
adc
pusha
sarl
lock
shlb
scas
lds
mov
pop
outsl
das
fsubrl
adc
add
outsb
push
lods
enter
push
sub
pusha
out
or
xor
fsts
cli
adc
sti
cmp
movsl
lods
mov
enter
popa
mov
jg
das
rclb
xor
adc
sub
mov
xchg
cltd
je
lret
jle
out
push
dec
add
xchg
insb
push
shrl
mov
xor
push
outsb
call
or
lret
fcmovnb
sbb
add
movsb
shl
and
testb
sub
add
mov
jno
pop
and
mov
cmp
sti
mov
jns
jp
cmpsb
in
lods
rcr
dec
adc
adc
jmp
inc
pop
mov
in
dec
push
fs
outsb
mov
xchg
mov
inc
pop
and
icebp
dec
fsubrs
int3
in
fwait
dec
mov
jle
sub
cmp
mov
xor
lea
testb
inc
pushf
mov
push
pusha
neg
xor
ljmp
mov
ret
xor
inc
adc
pop
test
cmpl
shrb
xchg
add
inc
or
sbb
adc
dec
add
inc
mov
les
push
cld
xor
pusha
pop
adc
push
ja
mov
adc
leave
test
ss
loopne
gs
xchg
scas
aam
out
jg
mov
aas
and
mov
dec
and
loope
dec
sbb
iret
insl
cmp
inc
jg
dec
mov
imul
mov
std
adc
std
stc
std
mov
pop
add
sub
cmc
cmpsl
in
jp
mov
popf
xchg
cmp
in
enter
les
sti
movsb
mov
or
sbb
push
mov
lahf
jbe
cmp
inc
add
mov
in
xlat
xorb
nop
adc
pushl
fcoms
bswap
dec
jbe
scas
pop
out
pusha
in
pop
mov
xor
pop
daa
cmpsb
push
push
ja
sti
movsb
or
mov
jno
and
ljmp
add
mov
inc
mov
xchg
pop
in
sbb
hlt
pop
lock
ds
outsl
mov
scas
stc
add
idivb
into
test
stos
mov
jmp
pop
sbb
mov
mov
and
fidivrs
jno
es
lahf
add
adc
in
fidivl
add
jns
fldt
pop
pop
call
xor
mov
test
adc
xchg
andl
notl
adc
fldl
lods
and
add
clc
enter
pop
lea
scas
or
mov
call
insl
sbb
mov
movsb
or
fisubrs
adc
pop
rep
jne
mov
shrl
or
and
scas
mov
fwait
incl
inc
ret
imul
add
sub
imul
enter
movsb
sbb
out
mov
decl
shrl
movsl
pop
fldcw
or
xchg
lret
sbb
loopne
mov
add
test
lcall
xchg
push
pusha
outsl
mov
and
unpcklps
leave
jo
xor
add
stos
in
mov
leave
repnz
sahf
imul
or
xor
fisttpl
jmp
pop
fildll
jecxz
dec
fildll
lds
adc
jl
lds
scas
adc
pop
adc
std
dec
cmpl
fstl
loopne
in
or
stos
xor
push
aaa
pop
shrl
jp
in
cmp
push
sub
in
adc
inc
fwait
inc
dec
adc
test
gs
fcomps
inc
adc
sti
or
xchg
adc
mov
fidivs
loope
pop
dec
xchg
sbb
mov
sub
lock
xchg
or
adc
mov
call
movb
outsb
rclb
mov
push
add
mov
fisubs
or
push
xchg
add
jecxz
popf
push
jmp
xchg
lds
or
add
mov
loop
clc
push
popf
mov
add
add
add
pop
inc
hlt
dec
fwait
stos
pop
xor
hlt
aaa
stos
dec
push
cs
aad
mov
ja
push
mov
adc
inc
dec
xor
push
inc
fwait
pop
cmp
mov
mov
imul
iret
mov
es
push
inc
lds
test
movb
es
jl
rolb
add
bound
inc
and
cmp
stos
dec
or
or
rorl
cmc
andb
mov
mov
popf
mov
or
inc
lods
scas
push
dec
inc
insb
mov
hlt
mov
call
and
adc
and
xor
jns
adc
addr16
adc
in
mov
loopne
test
jmp
ja
add
mov
xchg
fwait
inc
jg
movb
out
repz
or
fcompp
adc
hlt
xor
cmp
push
scas
jne
dec
popa
cmp
inc
mov
xchg
and
inc
sbbb
adc
int
mov
pusha
add
push
pop
inc
aam
das
fistps
cwtl
mov
insl
dec
data16
adc
jae
xchg
js
lock
cmp
and
sub
cld
push
in
xor
jb
nop
add
out
int
push
add
pop
sti
add
insb
mov
adc
sub
aad
xchg
and
daa
add
cs
inc
dec
add
fs
orb
mov
mov
ficoms
add
and
movsb
aam
cmp
jg
fadds
mov
int
mov
or
add
jg
sbb
shll
add
jne
cltd
fcom
xor
ljmp
call
fsubrs
mov
dec
aam
cmp
mov
and
cmp
subb
test
push
pop
push
pop
xchg
mov
push
je
aam
dec
in
fidivrs
push
imul
out
cmp
mov
shlb
pushf
push
aad
enter
mov
testb
test
push
mov
lahf
mov
sahf
dec
push
pop
or
adc
inc
push
and
jmp
mov
aad
adcb
and
mov
adc
push
xchg
jmp
addb
mov
push
testl
jb
and
pmullw
jne
sub
pusha
ljmp
push
les
insb
mov
add
and
jp
mov
rorb
mov
xor
sahf
hlt
jo
xor
xchg
imul
loopne
inc
in
jle
add
adc
xchg
aaa
lret
cmp
call
mov
cwtl
push
add
mov
rclb
dec
sbb
outsl
lea
js
mov
jge
insl
mov
in
mov
add
and
add
dec
push
sbb
and
les
in
arpl
lcall
fcoms
adc
xor
xchg
inc
jl
lret
adc
add
jg
stos
push
and
fisubl
cmp
jbe
cmp
shl
xchg
mov
stc
ljmp
ljmp
repz
push
jg
sub
add
sub
jae
nop
mov
decb
ret
repnz
out
loopne
jne
mov
je
cmp
std
cmp
cmpsb
in
cli
push
xchg
push
xor
cmpsb
xchg
add
in
inc
add
sub
ss
call
fcomi
inc
sub
push
cmp
test
xchg
adcb
sub
in
sub
mov
jnp
aam
adc
pop
push
std
mov
mov
out
lea
movsb
adc
pop
loope
sbb
xchg
mov
fs
rcl
fbld
xchg
and
xchg
jmp
push
mov
cmp
jns
adc
int
mov
cmpsl
sub
pop
call
pop
and
out
jge
ret
pop
call
int3
xchg
sbb
sub
cmp
in
mov
out
jo
cmp
cmpsl
mov
pop
mov
aad
fbstp
fs
scas
adc
jmp
and
test
jnp
rcrl
push
int3
lds
ja
push
aaa
or
sub
or
fldpi
jl
or
xchg
jb
xchg
lds
cltd
sbb
inc
adc
test
out
enter
mov
inc
or
and
imul
and
jno,pt
lock
xchg
xchg
icebp
and
mov
mov
mov
inc
push
inc
outsl
dec
pop
xchg
lds
fidivrs
pop
mov
jo
loope
jnp
mov
test
adcb
jg
jne
rorb
fildll
inc
scas
cli
fistl
test
popf
repz
sbb
xorb
pushl
fwait
add
js
iret
addb
adc
fnstcw
push
notb
pop
and
xchg
adc
lods
mov
pushl
lds
shlb
inc
shl
ret
sbb
add
test
sub
jmp
popa
sub
loope
jb
sbb
xor
cs
lahf
sub
repz
or
xor
jnp
push
mov
xor
sub
push
push
xchg
fidivl
jg
test
cwtl
sub
pop
nop
xchg
push
push
aas
inc
xchg
push
adc
inc
and
push
fdivp
lcall
dec
test
jle
fimull
jns
popa
ret
sub
mov
mull
or
test
insl
int
xchg
fs
enter
mulps
cltd
mulb
mov
pushf
lret
loope
fnstsw
js
adc
or
les
or
sar
lea
sbb
int
dec
push
dec
inc
xor
icebp
mov
mov
lds
stos
addb
cld
inc
dec
or
push
add
inc
sarb
sbb
push
adc
sbb
aam
sub
dec
add
push
mov
xor
pop
test
jns
dec
sub
mov
dec
dec
outsb
mov
popw
mov
insb
cmp
pusha
add
dec
call
mov
dec
inc
inc
mov
mov
es
dec
jg
dec
stos
ficomps
fcmovbe
test
and
mov
xor
add
rolb
cmp
pop
xchg
call
and
mov
inc
pop
push
mov
or
repnz
inc
sub
cmc
popl
cmc
jns
adc
add
jg
mov
add
into
or
or
lds
cld
pushl
testl
mov
mov
dec
add
sbb
and
scas
push
loope
clc
mov
jg
cmpsb
or
add
aam
adc
lcall
in
inc
add
outsl
out
mov
add
aam
and
mov
sub
fnstsw
sbb
scas
es
push
mov
test
aaa
addr16
and
cmp
pop
fisttps
insb
or
sbb
fisubrs
arpl
sbbb
nop
xor
sub
int
les
and
sti
jg
mov
setle
pop
cli
push
data16
ficoms
or
pop
cmp
adc
xlat
cmp
cmp
fistpl
push
loopne
popa
pop
rorb
nop
inc
jg
addb
mov
xchg
xor
loope
sbb
add
add
mov
ds
pop
clc
mov
push
push
iret
es
fs
add
jg
add
push
or
mov
sub
xor
or
pop
push
fsubrp
popa
shlb
cmp
inc
push
or
loop
out
xor
mov
test
push
rolb
cmp
test
mov
rorb
mov
test
mov
adc
into
bound
addr16
dec
xor
mov
movsl
mov
mov
inc
js
sbbb
cmp
aam
test
or
dec
mov
sahf
dec
push
pop
mov
sbb
cmpsl
adc
test
ja
push
aam
int
xchg
ja
in
cmp
adc
jl
mov
lds
out
jge
inc
andb
push
daa
xor
xchg
enter
or
shll
sarb
insl
pop
int3
fcmovu
inc
addr16
jp
orb
xor
dec
fwait
mov
adc
lcall
adc
aam
fisttps
jo
jbe
pusha
or
adc
sub
in
das
dec
push
mov
jmp
jo
addb
add
orb
push
push
mov
or
adc
lcall
ret
mov
fwait
jb
orl
pushf
add
push
jae
or
fcomps
in
das
pop
orb
scas
les
call
push
push
inc
adc
lods
xchg
ljmp
int3
jge
sbb
mov
jne
fldenv
filds
adcl
dec
call
shrl
dec
mov
pop
xlat
clc
jmp
add
dec
int
cmc
clc
ja
xchg
jnp
es
loope
adc
adc
call
mov
push
inc
sub
fstl
pop
adc
add
out
adc
ja
rolb
mov
js
out
testb
cmpsb
sub
add
shl
push
loopne
pop
push
push
lahf
push
pop
jo
mov
aam
aas
test
jmp
add
mov
jecxz
add
fbstp
dec
pop
inc
mov
adc
add
inc
add
mov
lret
mov
fwait
push
clc
dec
sbb
mov
fnstcw
dec
adcl
in
push
cwtl
aam
fisubs
movsb
xchg
cli
add
sub
roll
cs
or
add
imul
mov
subl
pop
push
sti
rorl
or
decb
fildl
filds
adc
sub
or
fdivs
mov
pop
out
cmp
pop
cld
das
in
inc
loope
jecxz
mov
loop
loopne
imul
movsl
jle
adc
and
inc
push
arpl
loopne
jmp
pop
xorl
cmp
sbbl
xchg
sbbb
hlt
ja
sbbl
jns
push
flds
lahf
std
test
push
jmp
cmc
sub
inc
es
loopne
testb
push
sbb
shll
pop
arpl
add
sti
sub
fidivl
mov
or
add
xchg
xor
adc
repz
data16
decb
rorl
insl
outsl
insb
push
or
pop
leave
das
aam
shll
js
jle
mov
xchg
insl
pop
sub
insb
lock
fisubrs
dec
xchg
lods
addr16
pop
push
and
call
cld
cmp
jnp
movsl
inc
cs
fildl
mov
adc
adcl
fsin
add
and
jecxz
inc
push
cli
or
pop
cmp
loop
loope
test
mov
push
xchg
jmp
jg
scas
or
mov
cmpsl
xchg
ret
push
cmp
add
ret
jmp
push
jg
mov
aam
add
jg
mov
adc
xchg
jp
or
sub
mov
push
push
fs
clc
ds
into
pushl
cmp
clc
loopne
pop
xchg
cld
pop
aaa
jg
add
andb
aas
test
sub
and
ret
mov
jnp
xchg
cmp
std
divb
and
das
in
mov
mov
lods
imull
push
flds
mov
lcall
xor
test
push
fnsave
hlt
icebp
add
jnp
dec
rolb
inc
push
jo
mov
cmp
and
or
mov
or
loop
adc
mov
js,pn
cld
aas
inc
pop
add
mov
lahf
mov
fs
mov
or
pusha
jge
shll
lahf
mov
insb
inc
and
mov
push
insb
adc
push
cmp
popa
cmpsb
sahf
dec
cli
outsl
dec
test
ds
adc
inc
sbbb
inc
cwtl
or
adc
ds
push
push
and
hlt
in
in
adc
pusha
and
test
insb
inc
in
inc
loopne
sub
jp
inc
add
inc
and
mov
clts
sub
xlat
cmpsl
pop
insb
add
or
sbb
cmp
dec
lcall
aad
push
add
sbb
lock
and
and
adc
lret
lcall
dec
out
insb
add
jo
arpl
icebp
aam
mov
loopne
loopne
int
inc
inc
add
sub
sbb
data16
mov
out
mov
inc
sbb
adc
shll
xor
jns
lock
add
cmp
data16
inc
pusha
sub
fsubrl
dec
popa
das
adc
fchs
pop
add
pop
mov
inc
das
inc
and
ret
inc
mov
cmp
inc
mov
cmp
push
pop
call
sub
xchg
leave
fistl
into
push
insl
mov
cmp
sbb
mov
in
inc
add
popa
add
iret
or
or
arpl
les
nop
mov
sbb
nop
stos
push
sbb
inc
mov
inc
xchg
repnz
jae
adc
lds
les
push
xchg
loopne
cli
andl
cs
aas
add
test
or
aaa
or
inc
aam
es
lret
add
test
mov
pop
add
push
cwtl
mov
test
shl
xor
sarb
inc
int3
mov
sub
subb
int3
xchg
mov
adcl
and
andb
adc
and
test
sub
neg
aad
cmpsb
or
leave
lahf
push
mov
call
mov
xchg
add
push
dec
rorb
and
jb
sub
mov
mov
aam
mov
mov
mov
mov
les
jg
xlat
jbe
les
or
outsb
xor
pop
mov
mov
or
and
icebp
adc
jmp
sub
push
adc
xor
icebp
pop
xchg
dec
add
jp
dec
push
inc
add
xchg
and
inc
and
idiv
push
mov
pop
inc
aas
shrb
jmp
out
mov
call
sub
pop
fisttpl
jne
xor
mov
add
add
inc
cs
dec
or
dec
aad
adc
mov
rolb
inc
mov
sub
mov
rcll
sub
ja
xor
or
inc
mov
mov
mov
sahf
or
inc
daa
shlb
popf
pop
rorl
mov
pusha
jo
sbb
push
or
jmp
sbb
fwait
push
ja
leave
jne
int3
aam
add
adc
cmc
imul
mov
add
jmp
jo
jo
mov
sbb
push
mov
inc
test
outsl
pop
add
xor
jno
inc
adc
push
xchg
lcall
push
or
idivb
dec
aam
fildl
mov
or
xchg
fcomps
mov
cmp
fisubrs
mov
add
nop
add
rcrb
adc
push
scas
scas
dec
je
sar
das
xorl
jb
shrb
ret
pop
adc
je
mov
dec
push
daa
inc
push
repnz
mov
out
and
sbb
mov
lods
out
invd
inc
fcoms
cli
mov
loope
inc
inc
out
mov
xlat
sub
jmp
mov
adc
rolb
and
aaa
sub
das
jne
dec
dec
stos
push
notl
or
mov
inc
sbb
je
and
xchg
sti
add
sub
enter
loop
or
sub
enter
pop
ljmp
mov
adc
outsl
add
test
fmuls
dec
xchg
mov
scas
loopne
mov
pop
xchg
out
cmp
mov
add
push
ficoml
xchg
sub
or
aad
inc
dec
icebp
add
jg
cwtl
rorb
popf
mov
pop
jl
pop
aad
fstpt
call
push
mov
mov
xchg
jge
pushf
sub
dec
sbb
sub
lcall
clc
xor
je
andb
aam
lods
cmp
mov
incb
sarl
ljmp
add
and
ja
inc
sbb
mov
jne
adc
mov
and
icebp
xor
inc
sbb
xchg
jb
mov
push
mov
xor
add
pop
sti
dec
ret
xchg
loope
sbb
arpl
inc
add
add
cld
jg
mov
sbb
add
dec
adc
shlb
xlat
ret
sti
aam
cld
sbb
add
xchg
xorb
int3
push
add
add
decl
and
add
jg
cltd
adc
push
cld
mov
mov
add
inc
test
push
aad
or
or
cmc
dec
add
add
mov
test
sub
stos
mov
push
dec
adc
pop
adc
cmp
and
pop
ud2
out
fiaddl
loopne
mov
add
push
or
mov
and
inc
add
add
or
addl
fisubrs
stos
imulb
mov
or
lret
adc
sub
and
or
in
addr16
stos
mov
sub
inc
push
insl
xchg
mov
in
cs
push
or
test
pop
cwtl
push
cmovo
dec
adc
sti
push
sbbb
mov
dec
inc
daa
xchg
movsb
lret
cwtl
les
push
test
mov
loop
aas
je
testl
inc
int3
lods
or
ret
push
push
ja
js
cltd
jb
rcrb
loope
inc
rolb
test
mov
scas
shlb
arpl
or
sbb
sub
sub
es
cmp
scas
ds
xchg
pop
xlat
rclb
or
stc
out
pop
insb
inc
or
out
outsl
into
push
inc
out
cli
mov
sbb
cmp
int
out
mov
scas
sbb
loop
fstl
ror
cs
mov
icebp
push
out
sub
or
inc
punpckhdq
xchg
or
sbb
loopne
push
add
lcall
and
or
arpl
cld
xor
int3
rorl
pop
mov
xchg
hlt
and
adc
sbb
jns
pop
aad
mov
cltd
adc
and
push
xchg
add
int3
fadds
adc
cmp
shlb
add
fistl
pop
cmp
xchg
mov
faddl
and
call
mov
push
sbb
sub
ss
push
insl
pop
sbb
add
stos
cmp
mov
push
mov
fwait
push
push
add
fsub
inc
arpl
insb
sub
mov
ja
or
jg
sbb
mov
popa
sbb
repnz
and
push
shrl
push
mov
repz
jb
inc
jecxz
push
cmp
and
push
pop
cmpsl
fisubs
pop
cmovl
imul
mov
mov
dec
subl
arpl
arpl
mov
call
jb
inc
pop
and
lock
mov
pop
cs
lods
mov
je
sbb
lahf
add
adc
mov
sbb
imul
sbb
add
cmp
push
pop
loopne
shr
push
sbb
mov
lods
incl
sbb
sahf
dec
pusha
jecxz
cmp
lds
xor
or
xor
push
inc
pop
or
jno
loopne
add
xlat
cmp
in
cmp
incb
inc
inc
decl
xor
into
and
jp
push
loop
xchg
xchg
adc
ds
cmp
in
sub
sub
jg
and
jne
add
mov
push
aaa
sub
mulb
add
or
pop
insl
jo
mov
inc
add
cld
jl
mov
mov
inc
dec
stos
dec
cmp
inc
insb
sbb
push
jns
cmp
pop
repz
cmp
mov
jae
out
xchg
es
fs
ret
or
addb
loope
or
dec
mov
mov
jbe
rorb
stos
addr16
push
fsubs
and
sti
fbld
jns
or
addl
sbb
scas
push
and
mov
push
pusha
cmp
dec
mov
mov
in
push
cld
cli
cwtl
pop
aam
push
mov
cmpsl
mov
out
out
in
or
and
and
lods
add
sub
mov
dec
cmp
pop
xchg
sbb
divl
or
mov
cmp
xor
push
in
add
and
lahf
inc
ljmp
mov
pop
sbb
inc
adc
inc
test
dec
sbb
push
inc
cmp
xor
outsl
jl
dec
fs
cli
int
add
adc
mov
sub
xadd
and
mov
out
popa
cmc
jecxz
loopne
out
adc
scas
mov
scas
and
mov
xorb
mov
call
add
int3
adc
inc
adc
mov
ficoms
jae
adc
aaa
popa
cmpl
mov
cs
test
dec
aas
cmp
xor
push
js
mov
out
jge
aaa
shrl
test
adc
jl
cmp
adc
insb
rorl
cli
add
adc
push
sbb
ss
movsb
or
ret
arpl
push
insl
popf
dec
sbb
fldcw
js
cli
fadd
loope
fwait
xchg
adc
xchg
rclb
dec
int3
js
or
filds
rorl
jb
dec
mov
dec
aaa
adc
mov
js
js
mov
outsl
ss
aas
pushl
adc
xchg
add
adc
pop
adc
popf
sbb
cwtl
lds
loope
mov
cmpsl
pop
subl
popa
daa
les
xor
movsb
loope
data16
clc
fstpl
mov
and
inc
sahf
ret
je
loopne
dec
lods
fisttpl
sti
testb
repnz
ret
ds
mov
inc
push
loop
bound
ficomps
mov
dec
ret
fisubrs
jnp
jb
imulb
out
fsubrl
aam
add
push
push
inc
jo
js
sub
fwait
punpckhbw
and
mov
scas
and
inc
xchg
xchg
sbb
cmp
sub
lods
push
jp
xchg
mov
sti
lods
mov
and
push
mov
mov
dec
addl
xor
adc
ljmp
or
jecxz
stos
adc
xchg
rcr
int3
lret
ljmp
rclb
faddl
push
inc
daa
mov
mov
adc
or
shll
es
pop
dec
add
mov
add
nop
sub
clc
sub
out
int
push
cmc
test
outsl
push
adc
xchg
hlt
xor
std
es
dec
pop
sub
faddl
mov
sbb
in
pushf
je
add
cmc
sub
addb
lock
sti
jge
adc
insb
xor
jg
sbb
add
sub
aam
push
cltd
cmp
insb
add
mov
dec
jmp
adc
inc
cmpsb
sub
mov
mov
psubq
or
or
push
xor
mov
xor
push
mov
add
aas
stc
dec
inc
inc
mov
out
cmp
push
push
xor
inc
hlt
add
inc
cmp
ss
and
xor
outsb
insl
cmp
mov
mov
fdivl
test
and
std
add
test
pop
push
or
iret
rcll
mov
les
cmp
out
lock
inc
ficompl
popa
inc
movsl
mov
dec
movsl
fbld
or
adc
paddsw
inc
adc
fmulp
push
push
sub
jle
add
mov
jns
loop,pn
mov
or
sub
loope
add
mov
int
inc
jmp
inc
stos
mov
or
sbb
pop
bound
adcb
dec
add
sarb
inc
cmp
into
icebp
dec
jns
push
addr16
or
icebp
fldl
mov
mov
dec
inc
testl
mov
sub
adc
fwait
push
stos
inc
loope
mov
rclb
comiss
jmp
and
lret
jle
pop
in
add
push
inc
fisubrl
jl
xor
push
lods
int
jmp
pop
adc
lea
fstps
lock
loop
scas
in
je
xchg
insb
ljmp
icebp
test
sbb
adc
inc
arpl
bnd
fsubr
mov
clc
in
inc
inc
jne
sub
ret
dec
test
ja
cs
add
adc
scas
cmp
sub
cmpsl
push
push
inc
adc
jmp
test
jbe
ds
push
sbb
xorb
adc
test
repnz
add
xchg
pop
and
bound
and
shrl
cmp
les
rclb
push
mov
rolb
aas
adc
cltd
xor
inc
cmpl
or
dec
xor
ss
xchg
gs
rcl
je
add
push
pop
aaa
popa
int3
popa
test
mov
inc
sbb
and
testb
imul
sbb
lcall
adc
fcompl
clc
push
inc
scas
pop
cmp
and
testb
sahf
jp
inc
outsl
add
and
inc
test
xor
xorl
aas
inc
aad
ror
subl
add
xor
iret
popl
inc
add
test
push
clc
incl
add
mov
testb
push
rorl
rcll
arpl
call
mov
mov
dec
sbb
inc
movsl
cmp
push
jg
aas
repz
lcall
lea
shl
xchg
aaa
cmp
jmp
mov
add
push
add
nop
sbb
sti
idivb
inc
rcl
and
les
cld
dec
adc
xor
pop
adc
iret
adc
outsb
dec
xchg
subl
add
aas
push
sbb
xor
ret
xor
ss
fidivl
mov
xchg
mov
lret
jbe
or
pusha
mov
add
je
and
inc
or
ljmp
adc
or
push
add
push
dec
and
jg
fnsave
mov
mov
or
pop
fwait
pop
adc
sbb
je
arpl
std
dec
adc
inc
push
inc
sahf
and
mov
sbb
xor
mov
add
fs
jg
or
mov
aad
add
adc
mov
and
mov
call
hlt
mov
adc
loop
sbb
adc
fistpll
lret
outsl
push
inc
lods
popa
imul
scas
add
push
loop
mov
push
sbb
jnp
xchg
sti
das
adc
mov
addb
das
mov
mov
push
je
ljmp
xor
je
pop
push
pop
pop
clc
fdivs
and
fwait
sbb
push
es
test
aaa
mov
repz
or
add
pop
jmp
add
addr16
sub
xchg
out
les
xchg
test
mov
adc
ja
lock
cmp
xor
push
lcall
icebp
pop
add
in
add
dec
lret
inc
test
fnstcw
popa
sbb
out
aas
loop
xchg
xor
jg
inc
and
jp
mov
push
push
adc
inc
sub
sbb
std
jecxz
cld
cmc
push
decl
sub
cwtl
outsb
sub
subb
aam
decl
rolb
xor
pusha
xchg
dec
add
call
clc
jmp
fldt
add
pop
ljmp
pop
repnz
sahf
or
add
dec
mov
xor
cmp
and
add
inc
and
popf
dec
das
test
xchg
xor
and
and
outsb
inc
push
sarl
adc
pop
repnz
mov
ret
mov
sar
mov
test
push
aad
lock
aaa
xchg
jne
in
pushf
adcl
sbb
fsub
and
rcr
add
mov
push
insl
or
stos
push
mov
push
mov
jp
inc
mov
adc
dec
pop
push
dec
cmpb
ret
sbb
das
sbb
mov
imul
or
xchg
stc
gs
into
cwtl
jmp
clc
adc
and
dec
or
add
stos
dec
push
mov
bound
aas
in
sub
fmuls
stos
xchg
cmpsl
mov
scas
xor
or
adc
mov
fcompl
das
jecxz,pn
jecxz
xor
push
dec
cmpsl
negl
decl
jne
ljmp
fdiv
add
cmc
pop
jnp
add
xchg
test
inc
adc
or
dec
lods
push
fs
in
xor
or
pop
mov
pop
stos
hlt
or
sbb
movsb
xchg
mov
push
out
sbb
aad
outsb
jb
stc
push
hlt
pop
pop
ret
pop
mov
lahf
or
add
adc
sbb
cmc
pop
clc
dec
jp
pop
mov
sub
pop
lods
and
jnp
mov
loop
mov
test
fs
xor
and
jg
cld
std
enter
mov
insb
sub
vhaddps
std
adc
loopne
xor
pop
nop
add
arpl
in
dec
decl
lds
mov
xchg
ds
lcall
mov
inc
cli
mov
jmp
bound
icebp
mov
xchg
cmp
loop
js
iret
mov
ret
or
sbb
jl
out
cmp
aas
xor
fbld
pop
ljmp
jmp
iret
lahf
mov
cmp
aam
and
push
icebp
pop
jbe
rorb
in
cmc
movsl
dec
push
adc
inc
sbb
cli
jg
sbb
and
sti
je
testb
mov
insl
cli
dec
cmp
lcall
bound
lcall
mov
mov
inc
data16
mov
cmpsl
loope
pop
cmpb
add
mov
icebp
xchg
sbb
add
das
in
iret
add
adc
ljmp
pop
fistl
jnp
inc
ljmp
sub
mov
or
add
sbb
pop
mov
clc
outsl
jns
aam
cltd
nop
or
das
es
lret
int
xchg
mov
jecxz
xor
hlt
dec
sahf
mov
push
call
pop
pushw
aaa
outsb
or
mov
cmp
mov
jg
and
pop
faddl
movsl
jmp
leave
xchg
adc
fdivrl
lods
cmp
jns
cli
inc
pop
stos
scas
cmp
adc
xor
fwait
lahf
roll
or
lret
iret
iret
jo
mov
push
sub
sarb
mov
out
insl
mov
pusha
push
fisttpl
loopne
cmc
scas
jle
call
lods
or
inc
cmc
dec
gs
movb
call
fs
mov
sub
jbe
cwtl
das
cmp
je
jge
sti
fdivs
push
pop
pop
cld
add
into
das
mov
call
and
out
cmp
xchg
sbb
ret
hlt
pop
sti
nop
enter
jg
testl
pop
cmp
push
add
push
ss
xchg
sti
cmp
sub
cmpsb
push
xor
enter
pop
add
sbb
push
jo
ds
pop
clc
lahf
mov
inc
pop
movsl
add
push
test
fdivr
sbb
lds
in
mov
add
aas
push
jg
fisttpl
or
fisubl
ss
xor
das
std
xor
lcall
call
lods
xor
sbb
push
inc
and
adc
or
dec
sub
sub
xor
sbb
jne
fcoms
xor
inc
add
lret
fmull
test
add
roll
add
test
and
mov
icebp
sub
out
daa
imul
icebp
add
inc
jb
inc
call
cs
sbb
jb
rcr
add
dec
std
pusha
rcll
adc
lods
dec
movsb
icebp
int
add
popf
scas
and
mov
mov
movb
inc
ss
mov
xchg
mov
mov
pop
out
cmpb
and
clc
movsb
arpl
roll
cmc
and
clc
movsb
mov
fs
out
in
incl
cmp
clc
mov
adc
cld
aam
lret
jge
icebp
cli
lods
insb
adc
sub
push
jge
ja
sbbb
sub
loope
adc
adc
adc
ds
ja
mov
cmp
loop
pop
das
cwtl
mov
add
or
aas
movsb
jmp
pushf
int3
dec
pop
aad
xlat
add
test
push
inc
cmpsl
pop
xorb
fcompl
mov
cwtl
xchg
mov
and
push
or
outsl
xchg
jg
pop
xor
add
fstpl
clc
xchg
int3
cld
or
fstpl
iret
dec
insb
mov
ds
sbb
and
les
mov
and
mov
fadds
std
pop
in
les
leave
in
and
mov
jl
mov
fdivrl
jae
aam
test
jne
dec
push
dec
iret
aaa
inc
or
cli
and
pop
xor
mov
lret
repz
lret
les
sub
inc
and
ds
repnz
int
mov
or
and
cmp
fcmovnu
mov
sub
cs
push
and
jmp
lock
adc
and
pop
lea
pop
out
insb
or
notb
outsb
je
out
inc
push
sbb
out
adc
mov
rolb
cmp
stos
mov
sbb
arpl
mov
sub
pop
xlat
dec
fildl
push
iret
xor
mov
mov
hlt
mov
push
inc
inc
jp
pop
fistps
rcrb
ret
xor
pusha
xchg
mov
in
mov
and
add
push
cmp
jo
inc
movsb
lods
sub
mov
or
add
cmp
iret
pop
ljmp
loopne
xchg
test
xlat
lock
test
outsl
fwait
call
pop
daa
and
in
jbe
add
and
loopne
mov
sbb
int
and
shlb
sbb
mov
dec
insb
cmp
jb
mov
push
and
addr16
mov
hlt
lods
dec
jge
stos
fimull
cmp
loop
rclb
icebp
mov
and
add
sarl
test
movsb
mov
adc
dec
push
sbb
orps
lds
test
mov
and
out
pop
sub
push
fcomi
add
add
inc
and
inc
or
inc
add
clc
movsb
sbb
xor
xor
add
sbb
icebp
inc
sti
out
mov
push
mov
sbb
push
fcompl
push
xor
lods
mov
adcb
push
mov
jbe
mov
test
mov
push
ret
or
scas
clc
flds
adc
or
or
jb
or
mov
adc
inc
repz
jne
pop
hlt
xchg
dec
push
out
or
fimull
xchg
sub
addr16
push
cmp
loopne
cmp
or
inc
or
push
xchg
call
sar
jl
sub
add
mov
xlat
push
mov
sbb
push
push
dec
and
xor
int
push
adc
outsb
out
add
add
xchg
mov
xor
movsb
js
pop
hlt
inc
xor
or
or
pusha
mov
sub
or
xor
cs
icebp
mov
std
sub
addb
bound
outsb
stos
inc
xor
dec
sbb
push
adc
pop
lcall
or
cltd
cld
out
ja
leave
sub
push
imul
push
andl
jmp
jb
psrld
roll
fcomps
scas
mov
lods
xor
rorb
hlt
fld
cmp
popa
in
enter
push
or
push
mov
inc
add
sub
xor
popa
subl
aam
xchg
jle
outsb
jo
cwtl
pop
sbb
and
lcall
jo
insb
fdivrl
xchg
mov
mov
sahf
inc
and
xor
pop
mov
jb
xor
add
push
ja
cmp
cmp
pop
xchg
loop
mov
xor
add
shll
xor
jg
fisubrs
pop
inc
mov
adc
aad
sbb
jp
pop
xor
loop
mov
and
call
mov
dec
add
imul
fdivrs
cmp
adc
xor
addb
test
xor
jge
popa
jo
leave
dec
push
imul
dec
gs
sub
inc
lcall
mov
and
pop
inc
cs
push
ret
xchg
mov
push
test
dec
add
lods
push
push
mov
ret
sbb
lahf
fwait
roll
sub
call
inc
xchg
mov
sbb
inc
cmc
or
rcr
or
mov
add
lret
ljmp
pop
push
add
les
push
mov
test
jp
adc
mov
mov
xchg
hlt
xor
stos
mov
push
aas
and
mov
inc
movsb
sub
adc
add
cld
lock
idiv
lock
cwtl
pusha
sub
push
or
lods
out
or
inc
add
jg
adc
std
idivl
shrl
mov
enter
jae
sub
cmpsb
lret
sub
shl
jge
inc
bound
ja
nop
mov
adcl
xchg
sub
sub
cmp
hlt
xchg
jp
rclb
or
in
pop
jle
push
mov
jae
xor
sub
int3
arpl
inc
fadds
test
testl
push
xchg
repnz
push
outsl
adc
push
mov
push
je
push
xchg
jge
push
mov
inc
adc
fidivrs
das
fstpt
jno
bswap
adc
xor
dec
ror
xor
adc
mov
cmp
hlt
lock
and
mov
enter
dec
inc
les
xchg
rclb
fiadds
mov
stos
add
and
xor
jle
sbb
iret
sub
fsubrs
pop
inc
out
dec
mov
mov
or
xchg
js
dec
stc
cwtl
inc
inc
and
push
dec
push
jae
xlat
lret
sub
jmp
fwait
inc
add
mov
cmp
push
cmp
fs
mov
fcmovne
cmp
dec
sub
and
add
psllq
mov
xchg
adc
mov
fdiv
xor
and
dec
or
testl
nop
cltd
lahf
pop
lret
xor
pop
inc
sub
and
lods
pop
adc
hlt
xchg
xor
push
insl
pop
dec
fidivrl
xchg
sahf
lods
outsb
in
xchg
clc
lods
adc
decl
adc
into
jmp
or
decb
add
push
dec
sub
xor
sbb
add
aad
aam
clc
push
jmp
xchg
pop
push
ret
clc
pushl
add
rolb
bound
stc
mov
mov
xchg
and
les
push
cli
dec
push
cld
lcall
jne
mov
jge
aam
jno
dec
sub
popf
mov
xor
adcb
mov
inc
xchg
pop
pop
adc
es
imul
aam
adc
cltd
call
adc
mov
adc
push
add
lds
decb
inc
lret
and
push
adc
mov
sub
jg
sub
in
adc
outsl
outsb
jno
mov
adc
or
adc
mov
xor
aam
icebp
push
jp
push
cmc
dec
addb
shr
sub
je
aaa
push
jmp
sub
and
sbb
incl
or
and
xchg
inc
lock
aaa
mov
xchg
test
push
les
mov
sar
cs
das
push
sub
mov
mov
outsl
shlb
inc
xor
popf
cwtl
test
pusha
das
mov
jb
xchg
fmul
pushf
sub
mov
incl
dec
push
or
xchg
movsb
xor
xchg
cmp
cld
jo
xor
jp
stos
jge
mov
aaa
cli
and
stc
aam
adcl
add
or
xor
dec
loopne
inc
adc
test
xchg
fildl
push
mov
fucomp
pushl
add
sbb
adc
loopne
add
cmp
les
dec
aaa
sbb
push
out
lret
cwtl
pop
add
push
sub
das
popa
aam
test
adc
mov
ds
pop
addb
outsb
subl
test
inc
cmc
fwait
xchg
sbb
shrb
inc
push
adc
or
fstl
or
mov
xor
je
sbb
or
lea
inc
sbbb
pop
dec
xchg
int3
cmpsb
je
mov
das
sbb
in
sub
cltd
bound
cld
inc
mov
xor
dec
insb
cmp
push
sahf
lock
cmp
call
mov
sub
push
vphaddudq
ljmp
cwtl
sbb
jle
add
movsl
xchg
or
pop
xor
and
pop
mov
call
testb
add
lret
ljmp
and
leave
roll
orb
std
dec
clc
and
or
cli
xchg
adc
sbb
push
repz
xor
xlat
mov
test
popf
call
pop
xlat
sti
sub
es
push
sbb
cmp
adc
or
lahf
sbb
mov
sub
mov
clc
mov
cld
mov
inc
pop
mov
mov
mov
and
mov
lea
mov
sub
mov
sbb
adc
rcrl
mov
or
insl
pop
mov
xchg
cmc
fldenv
jg
jg
call
push
cmpsl
add
test
lcall
sub
fildll
jnp
mov
pusha
xchg
popa
mov
push
inc
adc
sahf
mov
mov
mov
xchg
mov
inc
test
jno
inc
clc
stos
decl
filds
mov
pushf
jo
mov
push
sub
imul
rolb
push
and
xor
outsb
out
jge
inc
sub
mov
adc
dec
in
mov
jne
test
mov
pushl
clc
or
sbb
daa
popf
adc
xchg
pop
cmpsl
add
cld
add
mov
inc
jnp
xor
inc
add
mov
pop
lock
sub
or
jl
mov
lods
and
cltd
fs
push
adc
cwtl
decl
add
inc
loopne
adc
pushl
lret
sbb
and
push
jle
xchg
scas
adc
add
mov
rclb
pop
sbbb
jl
add
jecxz
lds
movsl
mov
dec
clc
jp
add
add
add
cs
shrb
jae
in
sbb
cmp
sti
lret
rcrb
aaa
or
add
mov
adc
and
incl
push
mov
cmp
dec
sub
cmc
xchg
arpl
push
pop
mov
popa
mov
xlat
inc
xchg
out
sahf
jecxz
mov
lcall
sbb
xor
jge
call
ljmp
or
sbb
xchg
in
push
ret
outsb
push
mov
es
into
fdivrl
xorb
and
out
xor
mov
sub
xchg
xchg
push
xlat
sub
add
out
sub
es
adc
sbb
rolb
call
stos
inc
push
cld
mov
and
mov
mov
mov
lea
or
xor
inc
jecxz
sar
add
xor
iret
mov
ret
fistpll
xchg
popf
pop
ret
repz
scas
ljmp
adc
stos
adc
mov
dec
or
rolb
aam
jmp
mov
incl
push
pushaw
in
pop
mov
jl
je
inc
push
pop
repnz
and
add
jo
std
scas
adc
ds
fidivrs
xchg
jae
add
imul
mov
pusha
std
sbb
pop
ret
adc
repnz
cmp
push
incb
adc
or
jg
mov
rcrb
cmp
shll
push
or
inc
shlb
or
ret
xchg
and
sti
pop
stos
or
xor
lahf
mov
test
push
jge
add
xlat
push
sbb
xchg
cld
mov
cmp
xor
push
xchg
adc
or
fisubl
cmpsl
outsb
fdivl
rorl
incb
or
repz
std
add
mov
or
sbb
add
fisttps
lods
ret
mov
or
jns
push
scas
in
es
and
fwait
int3
fcmovnb
ja
fcoms
sub
pop
mov
add
inc
dec
dec
shlb
cmp
or
fcoms
sbb
push
ja
mov
and
inc
out
add
lods
pop
clc
ja
fcoms
jnp
repnz
fdivrp
movb
hlt
xchg
aaa
ret
cmpsb
mov
xor
mov
pop
loop
sbb
mov
adc
pop
push
xchg
cs
mov
inc
xchg
cmpsb
incl
in
mov
cld
mov
and
rcll
mov
cltd
aaa
sti
xchg
inc
xor
or
add
andb
jo
incl
jge
mov
push
ret
out
inc
sbb
jle
adc
fiaddl
dec
xchg
add
les
and
sbb
insb
adc
cmp
inc
xorl
adc
or
popa
push
pushf
xchg
mov
jmp
fisttpl
out
push
aas
add
test
lock
inc
sub
int
sub
dec
add
jg
ds
and
js
jecxz
ret
std
pop
pop
iret
cmp
out
dec
stos
or
inc
stos
xor
shll
ljmp
push
inc
out
dec
out
jnp
xchg
jb
andb
gs
inc
xchg
and
nop
out
cmc
test
mov
jne
pop
shrl
or
hlt
pop
mov
adc
out
xchg
pusha
ss
pop
insb
subb
pop
jnp
in
mov
daa
push
int
xlat
mov
mov
mov
inc
les
push
add
and
xor
or
xor
sub
or
or
jecxz
or
mov
int3
or
dec
aad
pop
out
adc
cmpl
sub
daa
rorl
pop
jle
addl
pop
xor
stos
dec
add
mov
sub
dec
cmc
subl
and
fimull
loop
adc
xor
clc
filds
sub
adc
pushf
pop
pop
xchg
dec
insl
test
outsl
dec
dec
mov
sbb
dec
dec
push
call
add
out
ret
xchg
fstps
dec
push
inc
fcomip
sub
xchg
push
rorl
mov
in
push
gs
xchg
jg
lods
adc
sar
shlb
loop
xchg
clc
pop
subl
sbb
or
or
fcmovne
xchg
mov
hlt
test
mov
sbb
pop
mov
or
xor
dec
lret
xchg
adc
icebp
xchg
sub
insl
std
pop
cld
test
data16
adc
call
das
mov
push
stos
orl
xchg
sub
test
push
les
jbe
movsl
in
divb
and
dec
enter
shll
add
push
lock
pop
fldt
jg
jae
test
jmp
sbb
mov
ficoms
mov
add
inc
dec
out
test
int3
sbb
cli
outsl
mov
out
add
dec
jo
leave
popa
mov
jmp
pop
jl
cmc
rorl
xor
repz
lahf
push
pop
imul
add
xor
add
sbb
xor
mov
ja
fdivrp
test
sub
ds
loopne
js
scas
das
aam
pop
or
mov
std
mov
test
xchg
push
iret
test
imul
sub
sahf
xor
inc
sti
mov
push
sbb
in
add
adc
and
mov
mov
das
fucomi
lea
in
outsb
jne
ljmp
icebp
pop
das
mov
rcll
push
repz
sub
pop
les
add
aaa
add
je
scas
test
mov
push
mov
aaa
mov
xchg
xchg
add
aaa
not
inc
pop
or
jg
test
and
loopne
sbb
xor
push
jl
add
sub
out
jle
or
ljmp
lahf
outsl
je
cmp
push
inc
sub
xchg
sbb
add
xor
xor
and
pop
xor
inc
add
push
jge
xor
mov
push
je
add
xchg
adc
or
and
mov
inc
sub
ljmp
jg
enter
cmc
xchg
leave
add
fildl
mov
xchg
ja
insl
in
in
xchg
or
pop
add
ljmp
out
aam
ret
les
dec
xor
pop
xchg
ljmp
xor
rorb
popa
push
add
xor
mov
rorl
jle
jo
repz
mov
or
jbe
xor
xchg
clc
in
fldt
sbb
sub
cltd
lds
mov
outsl
decl
daa
push
mov
push
cld
jmp
call
call
je
pop
sbb
sbb
lods
sbb
cmpsb
dec
pop
ss
sub
fs
xor
shll
and
mov
setno
loopne
pop
xchg
imul
lods
shlb
insb
hlt
insb
jle
sub
sbb
ss
aad
adc
mov
pop
cmpsb
sbb
or
jg
mov
push
rcr
add
sub
jb
sub
sbb
aaa
xchg
or
fcoms
dec
cmp
jl
mov
aam
fisttpll
inc
push
cmp
jg
jg
test
mov
bound
jnp
test
or
out
mov
or
loop
adc
rolb
mov
sahf
mov
mov
mov
popa
lock
inc
add
dec
mov
xor
sbb
inc
push
fisttpll
mov
or
out
in
lds
push
inc
or
and
pop
cmc
or
in
push
rolb
pop
daa
bound
xchg
shlb
test
test
or
sub
mov
and
pop
xor
addb
loop
inc
xor
jl
add
insb
movsbl
add
push
loop
mov
mov
xor
push
push
adc
push
in
mov
or
sub
jp
push
fldcw
lods
call
inc
dec
push
rcll
roll
inc
fmul
cs
out
sub
hlt
loopne
test
fcompl
mov
mov
push
aad
add
inc
movsl
mov
mov
fimuls
xor
sub
mov
add
in
cmpb
sbb
imul
jns
push
cmp
xchg
repnz
rcrb
xor
data16
dec
rcll
dec
or
add
nop
test
xor
jb
pop
ljmp
ret
test
xor
dec
add
add
mov
addl
and
cmp
loop
lret
fnstenv
mov
sub
adc
lahf
testl
hlt
sub
sbb
cmp
repz
insl
xor
xor
mov
mov
loope
mov
mov
jns
adc
in
sub
sub
add
xchg
inc
popf
fcmove
mov
fwait
and
ret
test
jge
test
dec
sub
jo
adc
adc
push
into
ret
mov
sub
jle
add
fimuls
adc
adc
ds
mov
test
stos
pop
insb
push
repnz
dec
sar
push
xor
or
pop
lock
mov
mov
out
mov
fcmove
cwtl
inc
pushf
dec
imul
cmpsl
scas
mov
pop
and
push
mov
push
jns
adc
stos
push
aaa
inc
mov
mov
loopne
shll
add
sti
and
mov
jno
lock
xorl
mov
cs
decl
sbb
sbbb
add
orb
add
cld
ret
inc
je
jp
fists
incl
mov
lret
lahf
pusha
jle
aas
xlat
jmp
inc
loopne
add
or
dec
mov
mov
dec
jb
or
call
xorb
or
mov
sbb
sti
adc
sbbb
dec
xchg
and
or
jle
aas
enter
iret
int3
cld
pop
cld
and
rcll
xor
pop
std
mov
aas
or
mov
mov
cld
jnp
in
cmp
ljmp
adc
mov
and
in
cmc
aam
add
iret
stos
push
fs
mov
incl
inc
insb
push
inc
or
arpl
or
add
inc
push
mov
adc
adc
push
push
or
test
mov
arpl
xchg
lcall
xor
mov
add
adc
and
les
movsl
push
lret
sub
addb
push
add
imul
fidivrs
or
xor
testl
sub
push
adc
mov
mov
xor
dec
ret
std
inc
and
cltd
push
and
xchg
subl
fisttpl
inc
xchg
jb
jg
push
in
jl
pop
xor
cvtdq2ps
js
mov
mov
cmpsl
punpckhbw
outsl
mov
jl
into
icebp
push
mov
jecxz
push
popa
enter
fcoml
mov
iret
add
in
fstp
addb
jo
cmpsl
out
sub
sarl
js
mov
enter
inc
shrl
sbb
adc
inc
hlt
movsl
aaa
sub
clc
loopne
sbb
lods
push
mov
dec
in
jle
insl
push
pop
fisttps
mov
pop
jmp
pop
cmp
mov
in
mov
xor
cmp
cmp
push
mov
and
mov
inc
add
fsubr
ret
xchg
jmp
pop
test
loopne
push
loop
add
cmp
xchg
testb
and
jmp
lods
scas
sbb
xchg
xor
adc
outsl
fwait
pop
fwait
sbb
add
push
fmull
fcoms
sub
add
push
xor
int3
xchg
pop
cmp
add
lea
shll
jo
add
push
rorb
mov
cli
inc
rolb
js
out
push
jle
or
jge
in
out
or
mov
rorl
mov
or
xchg
cld
sbb
or
lahf
adc
and
or
hlt
adc
push
push
les
sbb
mov
cmpsb
fidivl
cwtl
xchg
push
mov
mov
fcoms
into
mov
pop
xor
xor
ljmp
in
subb
mov
adc
bswap
inc
rol
cltd
test
mov
sbb
jmp
int3
sub
jo
mov
inc
mov
leave
xchg
out
in
pop
test
ret
xor
mov
int3
add
or
dec
push
aam
add
dec
or
stos
pusha
and
inc
fucomp
loopne
and
dec
mov
cmp
dec
nop
jns
and
pop
sti
push
sub
fimull
out
adc
fidivrs
loopne
xchg
push
inc
mov
push
rolb
popf
ficomps
lcall
cmpsb
jge
add
jmp
int3
jnp
add
lock
enter
arpl
call
out
push
push
cmp
push
and
push
or
cmp
rol
xor
fwait
push
pop
adc
adc
adc
or
inc
xchg
icebp
add
shl
xchg
andb
cld
or
insb
sub
loop
outsl
mov
xor
and
dec
ret
loop
fdivrp
inc
xor
or
adc
mov
inc
js
mov
sub
and
mov
cmp
cli
rcll
int3
or
frstor
cmp
add
mov
cmc
dec
rol
lods
pushl
int3
dec
and
xchg
add
push
mov
sub
xor
leave
bound
xor
pop
ss
dec
add
mov
nop
xor
pop
add
mov
in
inc
cld
mov
sar
mov
sahf
jge
mov
fistl
sub
aas
rorb
cmp
mov
jg
add
adc
pop
notb
push
rclb
jbe
cmpsl
lods
sub
pop
adc
pop
adc
mov
push
mov
and
adc
mov
call
mov
rorl
and
pop
xor
inc
rcrl
stos
jg
rcr
cld
xchg
shrl
lahf
push
pop
cwtl
cmp
decl
mov
ds
sarl
mov
jp
movsb
test
aad
ljmp
mov
dec
xlat
in
test
call
ret
add
lcall
loopne
dec
lods
jle
ljmp
mov
inc
adc
xchg
and
lock
dec
inc
jp
xor
xchg
mov
mov
arpl
add
and
insl
aad
adc
xchg
pop
clc
sbb
shlb
imul
mov
jnp
push
sub
push
and
dec
push
ja
lock
dec
in
mov
aad
xor
cld
call
mov
sarl
sbb
mov
push
add
add
mov
cmpsl
popa
cld
imul
inc
mov
cmc
jne
pop
fcoms
or
outsl
mov
mov
setae
jg
loopne
xchg
jns
repz
stos
mov
mov
roll
inc
pop
sti
mov
es
ficompl
add
sarb
sbb
push
rcrb
pop
lret
pop
roll
mov
pop
test
ret
jne
aam
xor
add
fldl
mov
in
or
incb
sahf
dec
and
cmpsb
jnp
or
add
bound
lods
rol
sti
imull
push
jmp
or
xchg
cmp
xor
or
add
jns
xchg
cmp
and
mov
sub
push
inc
bnd
pop
pop
pusha
test
mov
sahf
pop
movsb
dec
jb
std
mov
cmp
daa
call
and
movsb
stos
cmc
push
lock
fiaddl
push
lods
scas
fs
sbb
add
xor
test
pop
sbbl
dec
dec
iret
in
mov
and
sbb
leave
add
roll
pop
cmpl
fwait
mov
nop
pushf
movsb
mov
lods
aaa
pop
into
inc
and
mov
decl
mov
mov
and
das
add
xchg
adc
aaa
dec
cltd
out
xchg
cmpl
mov
push
pop
lcall
jg
sbbb
and
cmp
add
push
incl
adc
or
lods
std
shll
shr
loop
shr
shlb
mov
xchg
pop
fs
daa
mov
add
sbb
shrl
ljmp
mov
jp
dec
out
mov
sub
in
or
mov
pusha
repz
mov
push
call
push
jl
inc
or
xchg
adc
mov
or
fcompl
jp
paddb
pop
push
pushf
js
rcrb
rclb
hlt
mov
clc
dec
dec
xor
push
scas
push
jnp
pop
outsb
pusha
sbb
sbb
pop
shll
js
push
pushf
cmpsb
sbb
in
dec
dec
out
mov
inc
js
fdivl
fisttpll
and
adc
fidivrl
and
add
fidivrl
or
push
xchg
sub
add
out
or
mov
dec
xor
pop
add
aas
mov
movsb
mov
mov
mov
adc
repnz
push
add
inc
inc
xchg
sub
mov
and
xchg
inc
mov
aaa
cmp
lahf
cltd
cli
pop
xor
shlb
rcr
in
or
mov
mov
add
fwait
shlb
cmp
add
in
cs
sbb
and
mov
das
sbb
jo
scas
sbb
inc
jg
popf
loop
ja
insl
adc
int
add
pop
mov
mov
add
mov
test
je
ljmp
cld
xchg
add
call
adc
sbbb
inc
lea
ret
or
adc
mov
sbb
push
sarb
out
call
or
jmp
mov
lahf
sahf
push
out
push
shll
push
xor
or
xchg
push
add
xlat
inc
and
mov
xor
fidivl
adc
jge
or
or
mov
subb
dec
into
add
pop
fidivrs
and
mov
sbb
shlb
inc
es
rclb
test
testb
jne
andb
in
inc
lcall
jns
out
mov
adc
lcall
pop
adc
fldenv
adc
or
leave
int
popa
push
jne
xor
add
adc
add
xchg
push
mov
cld
call
stc
add
into
je
mov
iret
dec
add
add
add
mov
mov
std
xor
pusha
mov
or
or
lcall
add
rcl
add
pop
leave
sbb
inc
cmp
cwtl
or
adc
adc
mov
xor
or
stc
add
fisttpll
addr16
add
decl
cs
hlt
mov
popa
mov
pop
mov
add
loop
jge
push
test
sub
aaa
inc
push
cld
cmp
adc
mov
in
cmp
adc
aas
test
mov
push
pop
and
inc
aam
lcall
push
sbb
hlt
pop
lea
dec
sub
int3
fucomi
jp
insl
adc
rcll
or
push
xor
adc
adc
das
loop
shrb
and
sbb
loop
mov
js
sub
or
leave
push
lock
shr
or
mov
adc
push
icebp
inc
loop
cli
and
or
or
rorb
and
lods
jo
mov
aad
add
shrb
or
xor
roll
and
dec
push
sub
js
add
mov
imul
pusha
icebp
shlb
sbb
push
in
hlt
loopne
cltd
test
cmpsl
mov
mov
cmc
jg
iret
cmpsb
xchg
push
ds
aaa
add
add
cld
sbb
dec
shrb
inc
outsl
lahf
inc
test
cld
lcall
ror
mov
mov
outsb
aaa
pop
in
into
adc
incl
call
jecxz
cmp
orb
or
out
in
lretw
push
in
xor
adcl
add
inc
cld
mov
into
in
repz
fdivs
jp
cwtl
icebp
xor
dec
loopne
enter
arpl
pop
cli
rcrl
mov
aam
shrl
stos
or
or
inc
rcrl
mov
push
adc
xchg
lock
pop
je
aam
or
outsb
push
arpl
imul
adc
shl
push
mov
iret
jno
bound
fldenv
stos
dec
pop
lret
dec
mov
dec
push
orl
and
or
in
add
mov
loopne
inc
test
add
mov
aam
out
cmpsl
cmc
int
aas
or
scas
or
pushf
sbb
add
dec
dec
orb
rolb
xor
cmpsb
notl
or
xor
jle
xchg
cld
flds
dec
fucomip
mov
lock
jmp
bound
or
adc
inc
or
mov
mul
and
movsl
xor
pop
push
or
or
inc
xchg
adc
lahf
mov
mov
shlb
in
adc
dec
inc
js
sti
es
cmp
jbe
ljmp
cmp
ja
xor
ret
xor
dec
cmp
ja
ret
stos
mov
ds
aam
cmp
add
or
es
int3
pop
pusha
add
das
sub
out
add
stos
or
mov
lea
lock
or
or
roll
adcb
loopne
rorb
inc
pop
cmp
sub
stc
jg
das
fsubl
ret
jmp
loope
xlat
ffree
adcl
adc
jo
lret
xor
jp
daa
push
call
leave
inc
mov
adc
in
out
test
or
mov
lar
xchg
mov
jle
mov
push
mov
fstl
dec
pop
dec
and
sbb
sbb
enter
cltd
mov
mov
dec
mov
mov
sbb
sbb
push
ret
mov
or
dec
cwtl
shll
adc
fdivp
dec
push
xchg
loop
mov
mov
stc
out
out
adc
js
and
cmpb
add
ret
cs
andl
fdivp
into
inc
push
jo
adc
js
mov
mov
dec
mov
xchg
cmpsb
push
adc
cld
icebp
movsl
mov
arpl
sbb
je
test
sahf
mov
cmp
into
sarb
add
dec
cmpsl
call
xchg
aad
cltd
mov
repnz
cltd
mov
bound
insl
pop
xorps
xor
mov
lods
dec
inc
sbb
xor
ret
add
jo
test
imulb
cld
adc
ljmp
mov
and
adc
cltd
add
jle
jne
xchg
pop
clc
lahf
cmp
call
outsl
outsl
and
push
xchg
bnd
xchg
fwait
idiv
inc
les
or
xchg
mov
adc
mov
push
ret
divb
mov
jge
loop
or
outsl
add
sub
cmc
inc
lock
pop
sbb
dec
cmpsl
lea
and
adc
test
push
add
out
test
mov
adc
fdivrl
push
je
inc
or
sahf
cld
sbb
adc
addb
pop
ljmp
jp
insl
movsl
or
add
iret
daa
cli
aas
lahf
mov
mov
int3
dec
cwtl
lahf
xor
imul
icebp
arpl
out
pop
jmp
ljmp
outsl
ret
or
push
cltd
flds
xchg
inc
loope
rclb
mov
hlt
cmpsb
mov
add
adc
inc
sbb
xor
imul
outsb
add
clc
dec
les
pop
pusha
int
jmp
pop
pop
hlt
inc
cmp
lcall
mov
rolb
add
xchg
clc
stos
lret
stos
sbbb
xchg
mov
inc
add
rorl
aaa
jno
push
jle
lods
out
sbb
adc
jae
test
cwtl
push
shrl
xor
out
and
mov
sbb
push
aad
sbb
jno
es
mov
shrb
xor
adc
cli
jle
add
dec
sahf
sbb
mov
mov
pop
adc
sub
push
jp
sbbb
push
adc
sbb
mov
dec
fdivp
popa
mov
push
loopne
add
pusha
dec
icebp
aaa
adc
push
mov
and
cmp
adcl
cmc
inc
ret
jo
xor
popa
adc
mov
xor
mov
std
aam
lcall
js
mov
call
xchg
je
js
xor
dec
cmp
into
ficoms
movsl
test
jns
xor
call
inc
or
dec
pop
xchg
test
add
aad
push
int
aam
and
or
dec
inc
add
add
sub
int3
xor
jns
subb
int
cltd
and
cmp
push
lds
popa
orb
cmpsl
pop
adc
and
rol
add
or
shrb
push
das
push
mov
lret
add
dec
push
push
push
adcb
mov
sbb
push
hlt
xchg
pop
pop
inc
sbb
dec
cwtl
lods
add
loopne
movsb
pop
out
add
jge
cwtl
sbbb
inc
out
repnz
xchg
dec
js
add
in
sbb
mov
and
pop
jp
mov
pushl
rorl
mov
into
jle
mov
adc
mov
dec
pop
adc
dec
clc
cmpb
movsl
sbb
or
jle
adc
sbb
push
jmp
andb
les
les
sub
pop
out
add
adc
push
xchg
or
xor
push
rorb
mov
jns
jecxz
arpl
mov
xor
inc
adc
xor
movsl
pop
xor
jp
daa
inc
shll
fimuls
or
int3
mov
cs
jae
cmp
sbb
add
push
je
add
push
pop
mov
and
cmpsb
fs
inc
xor
mov
rolb
clc
lret
xchg
mov
scas
pop
mov
jp
xchg
mov
and
mov
out
pop
fwait
std
inc
dec
repz
push
addl
jbe
cmp
cmp
jno
sub
or
adc
adc
imul
test
sbb
mov
clc
xor
insl
inc
loop
jbe
jge
adc
or
pop
add
and
mov
sub
iret
pop
andb
push
in
jo
sub
xor
inc
cmpb
cmp
pop
and
fmul
mov
adc
in
adc
cld
aad
loopne
lcall
and
aas
lea
push
in
loope
jmp
das
sbb
add
cwtl
sti
sub
dec
clc
and
pop
mov
add
mov
sub
or
add
lahf
or
stc
cs
div
loopne
dec
add
and
cmc
cwtl
icebp
or
lret
cmpsb
mov
repnz
fdivrs
xchg
ret
mov
das
pop
inc
mov
inc
and
sbbl
shlb
sbb
fidivl
cld
ljmp
add
push
test
add
jmp
sub
clc
and
je
test
cmp
aas
cli
add
xchg
call
roll
mov
push
sub
insl
jg
jg
lea
pop
pop
cs
rorb
inc
or
ficoms
jmp
add
adc
or
adc
mov
jmp
or
ds
gs
and
test
stos
movsl
ljmp
push
lock
dec
int
test
out
dec
mov
inc
aad
fbld
or
popa
insl
lods
cmp
mov
cmp
je
push
test
shrb
out
sub
sub
ret
movsb
decl
rorl
or
enter
adc
sbb
and
or
pop
mov
dec
add
mov
mov
fidivs
sub
aad
fisttpll
add
cmpsb
mov
or
ret
mov
mov
bound
jmp
push
mov
fildl
test
es
jge
jle
adc
aas
fists
or
lods
cmp
repz
dec
mov
sub
in
mov
stos
mov
dec
push
cmp
and
mov
in
or
stos
mov
lods
push
or
mov
add
stos
in
dec
sub
or
insl
jno
fildl
dec
inc
jl
pop
addb
and
or
jmp
stos
cwtl
or
out
dec
add
daa
adc
mov
out
test
inc
or
dec
push
mov
das
test
inc
mov
dec
aas
mov
adc
iret
aam
xchg
sub
divb
fists
add
sbb
adc
lret
add
fbld
pop
inc
cld
mov
gs
fidivs
add
inc
pop
mov
pop
es
dec
outsl
dec
shrb
add
mov
dec
insl
push
nop
jo
dec
cs
and
adc
jb
sarl
mov
add
inc
incl
imul
jne
in
movsb
sbb
inc
dec
movsl
fldl
lcall
clc
inc
fadds
rclb
mov
xchg
xchg
add
std
push
orl
xchg
or
push
push
sti
mov
orb
pop
scas
jnp
xlat
jo
mov
inc
jg
add
arpl
and
aaa
fistpll
and
stos
in
bound
jbe
push
mov
int3
mov
cli
test
jmp
lock
xor
sbb
insl
add
fsin
or
sub
pop
xor
inc
inc
mov
mov
les
push
inc
imul
push
or
mov
les
lods
shl
adc
jg
loope
adc
inc
cwtl
inc
cld
loop
jns
sar
das
add
in
fnsave
sbb
inc
das
add
mov
clc
pop
nop
or
leave
cmc
inc
mov
xchg
bound
adc
xlat
bound
outsb
sbb
sbb
add
xchg
std
lret
stc
push
addr16
out
mov
cmp
dec
adc
inc
push
jmp
inc
and
incl
sbb
js
cwtl
xchg
mov
adc
sub
test
es
push
out
push
shl
pop
roll
incb
je
sbb
sarl
mov
pusha
data16
ret
cmp
popa
fwait
iret
ljmp
or
and
pusha
test
jns
pop
test
push
add
xchg
mov
ja
fiaddl
mov
mov
dec
out
xchg
stc
rclb
inc
icebp
aaa
loopne
push
or
cmp
jg
ret
insl
inc
test
and
or
pop
push
ljmp
adc
call
cmpsl
das
roll
bound
daa
icebp
scas
test
ret
pop
rorl
inc
in
dec
std
js
mov
fdivrp
and
inc
and
push
or
sub
dec
xchg
jg
out
test
sub
add
bound
mov
dec
int3
out
cld
or
lret
jge
in
lock
sbb
sarb
shll
jmp
dec
fbld
adc
es
xchg
xor
jecxz
push
sub
enter
mov
mov
ret
arpl
adc
xchg
cmc
bndstx
das
cltd
mov
xchg
and
in
mov
faddl
icebp
jmp
fcoms
hlt
pop
adc
mov
and
outsl
sbb
cmpsb
adc
sub
clc
loopne
lods
jmp
shl
lahf
jg
adc
dec
call
popf
faddp
jecxz
pusha
push
call
pop
pushf
mov
cmp
or
jp,pt
sub
rorb
daa
rorl
cs
inc
test
jmp
les
lock
cmp
xor
dec
xchg
decb
cmpsl
cltd
data16
ret
push
dec
jmp
sub
sti
mov
pop
xchg
inc
out
cmp
jno
pop
inc
or
inc
das
push
outsl
lcall
adc
repnz
push
test
adc
push
and
or
ret
cmc
lcall
xor
inc
int3
add
jnp
ljmp
jne
jne
and
sub
test
fstpt
xor
dec
inc
add
inc
cmpsl
sbb
mov
stc
jp
or
ljmp
mov
mov
cs
fsubl
lcall
jmp
mov
xchg
aaa
mov
xchg
adc
push
lock
pop
sub
mov
pushf
push
dec
jo
fwait
mov
dec
cmc
repnz
sub
and
and
test
iret
or
xor
cmc
sub
lods
lcall
mov
lea
insl
movsb
sub
inc
xor
js
lock
les
dec
inc
sbb
aam
std
mov
pop
aam
int3
mov
cli
mov
outsl
fnstsw
jmp
loop
test
aas
mov
pop
ja
jecxz
jb
xchg
adc
aas
pop
sbb
mov
mov
enter
xor
xchg
inc
cmp
bound
jno
das
icebp
or
add
add
dec
mov
adc
mov
in
mov
rol
and
fstps
mov
xor
icebp
cmp
dec
add
movsl
decl
and
sbbb
push
mov
sbbl
lahf
sbb
fcoml
jle
mov
in
sub
inc
lods
or
cmp
lea
sti
add
push
mov
cmc
je
adc
sbb
shll
je
jns
mov
std
loopne
or
push
sbb
aaa
jbe
push
xchg
push
jle
dec
loop
popa
ret
cld
in
dec
mov
dec
adc
xor
and
ret
clc
in
adc
movsb
mov
pop
mov
shrb
mov
pop
call
cmpsl
pop
outsb
push
xchg
dec
cmc
inc
mov
lock
pop
pusha
sti
sbb
icebp
dec
imull
das
mov
js
adc
out
jne
mov
mov
add
or
test
sbb
jmp
pop
sub
mov
mov
push
pop
clc
mov
divl
stos
icebp
push
push
cmp
leave
dec
or
cmpsb
call
adcb
mov
mov
cli
in
jg
iret
sub
sbb
mov
loop
cmp
loopne
fistpll
popa
lcall
sub
in
pop
das
xor
rorb
inc
inc
in
les
cltd
clc
mov
sbb
rolb
inc
rolb
int3
ret
xor
jge
andb
mov
call
xchg
loope
sub
add
inc
jmp
xchg
and
lods
fst
dec
lods
and
and
jmp
sbb
jo
jnp
popa
mov
jb
xchg
in
xor
xchg
andb
cmc
sbb
mov
add
sub
mov
stos
inc
adc
mov
shll
mov
mov
int
or
jbe
inc
adc
std
xchg
mov
sub
push
inc
nop
jb
xchg
pop
mov
adc
fdivl
mov
add
add
mov
call
mov
aaa
iret
sub
mov
incb
cld
xchg
stos
scas
rorl
rolb
int
pop
aaa
outsl
push
les
pop
pop
xor
notb
push
les
mov
roll
loopne
push
push
inc
dec
xlat
xor
clc
mov
gs
inc
or
push
lods
scas
das
and
push
mov
aam
stc
fadd
add
stos
inc
push
xor
sub
fisubs
loop
fdivs
stos
addl
push
shlb
ds
mov
mov
push
add
andb
push
ficoml
inc
icebp
push
add
inc
sbb
testl
loop
xchg
add
adc
fsubr
inc
mov
es
mov
add
xchg
fwait
push
mov
shll
xor
out
dec
sbb
lcall
ds
loope
fisttps
mov
push
add
mov
push
cli
fistl
cmp
add
push
pop
add
push
mov
adc
sbb
jb
dec
add
out
lahf
and
and
xchg
pop
mov
and
pop
out
pop
inc
push
adc
mov
and
cwtl
inc
jno
mov
sub
inc
push
mov
and
loope
insl
fildl
cli
inc
mov
add
push
pusha
jl
rolb
lea
in
popa
movsb
in
or
push
rcll
rolb
inc
xor
jb
or
xor
adc
test
inc
pop
add
mov
and
mov
lods
mov
mov
jmp
pusha
dec
adc
outsl
rol
in
orl
mov
rolb
add
dec
ja
fmuls
outsb
add
adc
xor
jns
inc
outsb
pop
inc
lock
loope
push
pop
mov
ss
push
sbb
fwait
mov
imul
and
lock
shl
lods
dec
or
inc
dec
inc
jge
es
ret
hlt
or
and
or
pusha
or
push
jmp
mov
dec
xor
mov
adc
pop
mov
or
lock
lea
stos
ds
mov
mov
shl
es
pop
pop
popa
pop
rcl
add
xchg
dec
inc
adc
les
stos
ljmp
push
mov
xchg
gs
stos
mov
push
fimuls
or
dec
xorl
sub
icebp
dec
pop
push
call
sub
xchg
mov
sbbb
push
adc
mov
and
mov
sub
xchg
pusha
cmp
add
mov
sub
push
push
imul
mov
roll
xchg
stc
mov
outsb
lods
mov
mov
or
push
jne
rcrl
imul
mov
das
push
sub
rorw
add
and
sbb
and
xor
ret
or
daa
movsl
jmp
xchg
adc
push
push
mov
add
arpl
mov
xor
out
xor
dec
adc
lods
cmpsb
xlat
cs
pusha
or
jno
shll
ljmp
insl
mov
xchg
adc
loope
aad
test
es
sbbl
bound
push
test
add
andb
stos
push
in
nopl
dec
mov
pop
vpsubusb
std
pop
rep
clc
xchg
ret
mov
imul
inc
and
std
add
lret
mov
adc
data16
sbb
xchg
pop
lock
adc
inc
dec
cmp
pop
roll
or
insl
add
cmp
sbb
push
xchg
test
dec
add
mov
mov
xor
jns
fisubrs
cmp
add
popa
adc
adc
push
pop
xchg
mov
lcall
mov
and
movsb
and
sbbb
lahf
xorb
or
repnz
add
pusha
add
or
pop
data16
dec
mov
icebp
fldl
loopne
jle
clc
shrb
lds
inc
lock
fiadds
fstps
sbb
adc
and
cmpsl
cltd
clc
push
loop
loop
fbld
es
mov
sbb
push
and
xchg
in
or
cmp
push
inc
pop
xchg
mov
cmpsl
rcrb
jae
push
inc
movl
inc
inc
aaa
push
add
mov
testl
mov
dec
sub
pusha
xchg
mulb
outsb
lock
jl
sbb
sub
cmp
addr16
dec
ss
push
outsl
cmpsl
xor
mov
pop
cbtw
cli
test
sbb
ljmp
stos
scas
popf
or
sub
pop
aam
repz
or
in
mov
cli
fildl
scas
cmp
pop
jo
mov
loopne
imul
jl
call
popf
push
js
push
fisttps
addr16
add
cmpsl
es
jnp
arpl
repz
xlat
rcll
xchg
pop
cld
das
mov
sub
cwtl
adc
out
sbb
push
outsl
aaa
cli
add
xchg
adc
xchg
lahf
pop
push
sub
lcall
mov
outsb
sub
lret
push
js
arpl
rcll
cmp
or
mov
sub
or
fildll
iret
dec
jno
stc
pop
loope
jo
inc
dec
mov
sub
cwtl
dec
mov
inc
jmp
sub
iret
mov
adc
adc
adc
cmp
cwtl
add
or
mov
ljmp
cmc
into
test
aas
insl
adc
jp
pushf
sbb
sbb
add
push
roll
inc
fildll
adc
into
add
sub
inc
mov
adc
loop
jns
xchg
add
mov
ljmp
inc
scas
out
sbb
xchg
xchg
popa
ljmp
popa
dec
cmpb
xorl
adc
add
or
test
stos
loopne
adc
xor
sbb
inc
orb
or
lock
sub
push
xchg
mov
mov
scas
mov
and
cld
sbb
jp
xchg
cmpsl
mov
call
fs
popf
mov
xor
or
fldcw
adc
sti
push
sub
add
jp
sbb
sbbl
xchg
lods
mov
jle
cltd
push
mov
hlt
adc
fcomps
and
pop
loope
add
int
xchg
inc
xchg
pop
sub
mov
and
js
push
das
test
add
dec
pop
add
dec
pop
mov
call
mov
push
sub
inc
cmp
inc
mov
xor
scas
cmp
rcll
cld
lock
orb
cmp
jmp
add
lret
inc
push
lahf
outsl
adc
inc
popf
adc
sbbb
sti
outsb
loope
mov
push
hlt
inc
dec
jl
jo
loopne
mov
ljmp
xorb
jo
adc
add
adc
inc
xor
push
dec
mov
mov
xchg
rclb
sahf
test
push
shr
inc
add
cmc
mov
adc
inc
push
es
sbb
int
adc
push
push
repz
xchg
pop
aam
mov
and
mov
addr16
js
add
outsb
les
lcall
sub
push
popf
cmp
sbb
mov
add
add
adc
or
mov
fmull
call
jno
ret
add
add
gs
icebp
xor
adc
inc
lods
ret
push
or
test
cmp
stos
and
dec
push
pop
test
lods
js
jl
mov
test
scas
sub
inc
movsl
ljmp
repnz
sbb
js
fisubrs
mov
push
inc
push
popa
sahf
das
lahf
in
daa
roll
cmp
out
add
and
inc
push
push
int
aaa
add
pop
aam
mov
arpl
mov
add
adcb
ret
pusha
add
pcmpeqd
mov
cmp
or
dec
lcall
mov
mov
inc
sar
lock
sbb
inc
inc
mov
jne
lret
fbld
push
mov
dec
mov
icebp
sbb
add
inc
xchg
test
orl
nop
adc
pushw
movsb
movsb
sub
sbb
push
adc
out
scas
and
push
cmovne
mov
movsb
cwtl
int
js
out
mov
loop
in
push
aaa
lock
in
or
push
add
shlb
push
fistl
push
inc
aaa
pop
in
add
add
jae
cmp
out
loope
ljmp
lods
jo
xchg
sbb
sahf
aaa
sub
or
pop
mov
in
adcb
loop
cld
mov
sub
idivb
and
mov
mov
push
cld
adc
xchg
jg
dec
jmp
fs
testb
xor
add
popf
mov
movsl
rorb
pusha
and
sbb
enter
pop
or
or
in
sbb
outsb
call
cmp
xor
fnstcw
or
pop
and
hlt
mov
ret
pusha
mov
fildll
cmc
js
in
xchg
mov
dec
mov
enter
xor
xorl
mov
pop
inc
sbb
in
adc
insb
out
inc
push
pop
aam
cmpsb
insl
jae
sbb
cmp
pop
xor
roll
push
xchg
stc
sbb
sbbb
clc
out
incl
cwtl
mov
outsl
or
sbb
lret
aam
mov
insl
das
das
icebp
add
mov
mov
sbb
jbe
jmp
dec
mov
push
inc
ret
pop
mov
inc
mov
call
cmp
std
das
and
xor
sarl
cwtl
mov
lea
mov
addb
aad
dec
mov
add
push
add
lret
mov
mov
lahf
fisttpl
orb
add
das
clc
push
in
stos
lcall
adc
mov
mov
sbb
lret
xchg
or
in
xchg
pop
or
ret
fnsave
cli
jle
lahf
xchg
shl
mov
ss
mov
icebp
movsl
pushf
cmc
aaa
aaa
mov
mull
sahf
loope
pop
jle
ret
das
popa
mov
push
mov
sti
or
push
mov
xchg
xor
push
xchg
pushl
push
sahf
test
or
ds
pop
mov
outsb
adc
mov
add
jg
mov
push
pop
fdivr
hlt
or
cmpsl
aas
in
or
mov
and
jge
adc
jae
jecxz
jnp
inc
or
lds
shr
xchg
jb
pusha
sbbl
push
inc
mov
lret
jmp
icebp
imulb
mov
adc
lea
add
addr16
das
out
stc
test
jbe
ffreep
rclb
sbb
sti
jecxz
inc
lock
dec
jns
sbb
mov
bound
aad
repz
push
or
jbe
sbb
sbb
mov
xchg
sub
scas
loop
in
and
push
and
orb
jge
cmp
xorb
fbstp
addr16
in
lret
xor
add
sub
enter
call
mov
imul
scas
es
pop
mov
mov
cmpsl
mov
ljmp
pop
cli
mov
loopne
imul
sbb
dec
popa
inc
rolb
push
pop
xor
and
xlat
outsb
test
adc
push
nop
mov
inc
or
mov
sbbb
dec
sub
aam
out
xor
mov
xchg
jmp
add
jno
mov
aas
add
icebp
adc
inc
stos
fs
fadd
xor
ret
loopne
rcll
inc
jne
and
ja
movsb
pop
in
add
sub
add
pop
dec
jbe
xlat
add
int
xchg
roll
add
insb
data16
mov
aaa
xor
movl
subl
bound
lock
cmp
dec
xor
dec
mov
mov
mov
sar
mov
loopne
push
jl
pop
in
jle
in
pop
pushf
adc
fdivrl
inc
popf
dec
out
dec
clc
mov
jb
jge
push
lret
xchg
adc
in
stos
mov
jns
fildll
mov
lods
sub
add
out
or
jecxz
stos
and
es
add
or
nop
es
daa
loope
inc
add
inc
adc
xchg
adc
outsl
or
popf
mov
loopne
adc
sbb
xlat
adc
orl
test
insb
fnstsw
fsubrl
aad
add
fisubs
cmpsb
and
cwtl
lock
aam
adc
stos
push
ret
and
stos
xlat
data16
fcoml
sbb
mov
out
aam
cmpsb
stos
sbb
ja
inc
sbb
fwait
dec
test
adc
mov
mov
dec
neg
lcall
inc
out
pop
stos
cmc
fimull
jns
arpl
lods
mov
push
xor
test
out
sub
inc
inc
lea
stos
inc
iret
popf
adc
cmp
aad
ljmp
loope
pop
lret
sti
push
add
jo
xor
adc
mov
lret
flds
xchg
jae
popf
je
rcrl
sub
xchg
and
out
jo
leave
inc
psubd
aam
or
roll
pop
jae
test
fsubl
int
inc
xchg
in
adc
mov
dec
std
xor
outsl
xor
sub
push
push
and
push
or
jns
inc
fnstsw
sbb
inc
inc
aas
lcall
jp
andb
or
mov
mov
jbe
push
in
inc
inc
sbb
ret
mov
xchg
push
out
ss
aam
add
pop
loopne
aam
out
adc
and
sbb
add
nop
sub
in
dec
aaa
xchg
and
xchg
jmp
cmp
xlat
pop
xchg
aas
daa
push
test
xchg
aaa
inc
push
inc
inc
adc
or
icebp
mov
out
mov
jne
sub
cmovae
int
mov
cmp
pop
inc
roll
add
inc
sub
sbb
push
push
insb
xchg
dec
mov
call
sahf
test
jno
inc
in
sbb
fsubrl
mov
jge
or
andl
clc
push
add
out
push
xor
sbb
imul
das
push
mov
subb
jg
jo
aas
out
xchg
sbb
push
sbb
sarb
jno
mov
mov
repnz
dec
incb
enter
movlps
lret
add
adc
sti
inc
lea
fwait
push
rol
or
fsts
daa
push
sub
xchg
inc
aad
fisubrs
scas
mov
icebp
or
out
sti
imul
and
sub
cltd
push
xchg
jecxz
mov
data16
mov
ja
inc
repnz
mov
mov
sbb
popa
ljmp
dec
mov
inc
mov
dec
ja
fisubl
inc
inc
and
das
mov
inc
mov
jl
popa
inc
out
sbb
jl
inc
pop
add
xchg
mov
les
das
shrl
add
adc
je
dec
pop
pop
push
mov
jl
xchg
inc
xchg
cmp
icebp
addr16
sub
pop
adcb
icebp
addr16
mov
subl
xor
push
mov
inc
sub
adc
cltd
testl
ficoms
pop
mov
add
mulps
lahf
in
add
lock
push
fisttps
add
mov
add
adc
fsubl
push
inc
test
popf
and
mov
inc
xor
adc
adc
pusha
sti
sub
sub
inc
adcb
jge
mov
ds
stos
sub
adc
sahf
jbe
add
cmp
mov
mov
shr
loope
in
popa
cmc
int3
cmpsb
jns
adc
hlt
push
js
loopne
in
mov
stc
rcrb
pop
das
adc
data16
out
lods
mov
or
or
lcall
ror
cmp
adc
mov
loop
mov
insl
and
push
or
and
sbb
arpl
sub
enter
lea
add
mov
rclb
call
sbb
add
into
in
cmpb
lods
out
loopne
push
and
jb
xor
mov
pop
jmp
arpl
out
in
push
mov
mov
inc
adc
fucomip
adc
xor
out
inc
push
insl
loope
insl
add
es
cld
sub
aad
or
ss
xlat
sub
push
roll
jo
cmp
ficoms
pop
cs
stos
loopne
loopne
cmpsl
loop
adc
push
jmp
mov
cmp
es
icebp
dec
jbe
ret
add
bound
pop
and
xor
cli
push
pushf
push
cmc
int
in
ret
push
adc
add
push
mov
int
and
xchg
jnp
xchg
mov
sub
inc
xor
add
xor
and
add
shrb
pop
hlt
aaa
imul
add
lahf
inc
adc
mov
inc
outsb
adc
sbb
inc
hlt
adc
mov
mov
xor
mov
xchg
fnstenv
jg
clc
pushl
fnstenv
adc
call
rclb
pop
fsubrs
or
add
cmc
dec
and
dec
mov
jge
sub
es
cltd
stos
loop
mov
sbb
inc
outsl
ret
lcall
inc
sub
push
stos
cld
fs
or
test
and
das
inc
jo
and
mov
pushf
sbb
xor
das
sub
cli
or
sub
rcr
xchg
stos
xor
cmp
adc
and
mov
ljmp
xchg
rorl
andl
jg
or
jne
iret
inc
in
inc
std
mov
and
xchg
pop
stos
add
jg
wbinvd
dec
adc
ja
mov
or
mov
xchg
ss
mov
add
add
cld
syscall
mulps
jg
xchg
xor
jmp
arpl
in
das
mov
push
rorl
insb
jl
mov
insl
fldt
fs
pop
sub
je
pandn
cmp
cmp
add
outsb
inc
ja
sub
or
cs
js,pn
jno
inc
in
rorl
mov
sar
xor
fistl
push
loop
add
fwait
outsl
lock
sahf
dec
mov
pop
add
dec
jle
mov
mov
or
stos
dec
or
push
outsl
shll
cltd
sti
and
xchg
incb
mov
xchg
call
nop
mov
sub
cmp
jbe
lds
xchg
or
pop
mov
clc
call
xor
lods
push
jno
pop
fcoms
lods
pop
and
loope
add
mov
xlat
sti
mov
mov
sbb
pop
out
mov
das
insb
add
out
cltd
xchg
bound
xchg
ljmp
adcb
in
adc
insl
stos
inc
js
loopne
outsb
cs
decl
notb
adc
icebp
aad
insb
mov
or
sub
mov
cmp
or
and
or
add
in
addr16
divb
pusha
add
lods
lretw
loope
push
cld
cmp
loope
ja
mov
lds
add
xchg
add
sarl
pop
jno
and
jo
ljmp
push
jnp
rcl
jg
aaa
mov
pop
ret
adc
pop
or
and
pop
or
popa
jge
mov
dec
lcall
aad
ficompl
in
mov
test
int
loope
xchg
jnp
shll
lods
inc
jmp
roll
imul
pop
cmpsb
xlat
pop
mov
inc
test
fidivrl
movsb
lds
mov
jecxz
incl
std
js
lea
and
movsl
inc
jae
pop
daa
loop
idivl
dec
hlt
push
inc
jb
add
in
adc
das
push
add
dec
ljmp
mov
and
hlt
xchg
lea
std
pop
mov
in
pop
loop
icebp
xchg
xchg
push
add
jg
pavgw
mov
fistpll
aas
push
and
xor
fistpl
jne
or
or
mov
push
movsb
pop
xor
fdiv
mov
pop
imul
inc
mov
jmp
cmc
inc
xchg
push
xchg
aaa
xchg
add
adc
cld
aad
out
stos
pushw
and
cwtl
pushw
jle,pn
jnp
jecxz
js
inc
xchg
xor
pop
dec
ljmp
jle
adc
xchg
mov
xor
jg
inc
push
add
cmp
lcall
and
ret
pop
arpl
popa
push
dec
or
cmp
push
push
cmpsl
fnstcw
arpl
sbb
ljmp
in
cmpsb
pop
xchg
daa
daa
xchg
xchg
jg
mov
xchg
adc
mov
cld
movsl
xorl
cmp
sbb
shrl
xchg
mov
iret
movsl
roll
mov
lds
or
and
bound
or
add
lret
dec
lea
push
mov
into
jecxz
cwtl
xchg
fistps
pop
fwait
bnd
repz
lcall
je
pop
sub
cld
adc
test
mov
add
out
or
jns
stc
outsl
pop
pop
dec
cmp
push
inc
and
or
lods
cmp
inc
push
push
adc
push
test
lret
push
push
dec
xchg
lcall
js
dec
sbb
jns
jp
imul
and
xchg
and
mov
aad
mov
loopne
fiaddl
and
pusha
dec
ret
outsl
test
jne
loopne
fwait
ljmp
inc
dec
or
out
outsb
xor
add
jo
or
addl
hlt
mov
pop
dec
flds
in
incl
lods
mov
add
xchg
push
xchg
incl
test
add
and
adc
lcall
push
andb
inc
test
or
add
dec
inc
add
imul
jmp
or
mov
and
and
orb
dec
or
and
mov
insl
and
sub
test
inc
inc
xchg
subb
sbb
mov
add
orb
inc
adc
or
and
imul
fwait
push
mov
or
jo
push
and
adc
test
or
and
adc
insl
jae
fimull
and
inc
dec
inc
sbb
and
mov
outsb
sbb
dec
mov
adc
push
adc
test
jle
and
push
and
mov
insl
imul
push
or
jbe
adc
and
mov
stos
and
aas
outsb
mov
xchg
andb
mov
lods
mov
and
or
insl
sti
jbe
mov
and
push
add
mov
inc
and
push
and
add
pop
xchg
fwait
inc
and
popf
jae
loopne
and
sbb
int
or
les
pop
mov
lcall
and
and
test
xor
mov
or
mov
in
pop
addr16
mov
inc
imul
push
pop
pop
lods
mov
pop
or
xor
scas
insl
or
adc
jns
negl
sarb
cmp
outsl
adc
dec
imul
push
and
and
dec
test
and
fbstp
ficomps
and
add
fsubrl
sub
lret
sahf
mov
fistpl
mov
or
mov
fcmovbe
lcall
and
pop
ffree
jae
and
mov
lcall
inc
inc
sub
push
shlb
adc
imul
adc
ss
movsb
jnp
inc
test
or
push
or
push
je
push
lods
mov
adcb
push
add
add
data16
inc
pusha
xor
cmp
fistpl
add
or
pop
add
jmp
sub
push
sbb
mov
imul
pusha
jmp
jae
and
push
and
jae
adc
mov
push
bound
xchg
mov
into
adc
and
inc
inc
push
inc
cmpsl
subb
pop
rcrl
sbb
xchg
test
and
mov
rcrl
pop
test
adc
sbb
ficoml
or
fistpl
and
sub
mov
dec
push
sub
push
push
orb
add
inc
dec
stc
and
sub
int
es
inc
icebp
mov
or
cwtl
mov
int
add
adc
push
or
mov
lods
cmp
push
shlb
add
and
int
daa
shl
pop
loop
fisttpl
loop
rcll
push
lds
imul
dec
adc
sub
mov
ss
imul
into
cmp
sub
push
push
and
mov
jp
pop
mov
lods
mov
outsb
and
adc
mov
xlat
sbb
outsb
dec
mov
rcll
and
lds
add
arpl
insb
dec
or
or
inc
xor
push
mov
mov
or
and
jae
add
lcall
ret
in
data16
adc
cmp
sbb
icebp
pop
lcall
in
sub
pop
sub
mov
jmp
test
adc
nop
and
inc
jmp
ss
and
push
out
jne
imul
xchg
push
stc
ja
pop
xchg
mov
aas
lret
dec
lods
mov
add
or
push
and
mov
xchg
popa
jo
lods
add
test
pop
mov
pop
leave
daa
sub
sbb
xlat
bswap
cmovs
mov
bound
adc
xchg
stos
mov
pop
mov
pop
jmp
out
ljmp
pop
fwait
arpl
push
mov
inc
mov
adc
xor
push
xor
sbb
mov
xor
pop
sub
push
and
or
sub
lret
scas
popa
push
or
and
push
jle
mov
or
jne
cld
cmp
xchg
cli
push
xchg
mov
or
or
mov
out
pusha
and
lods
je
imul
adc
or
lock
aas
adc
inc
or
test
cmc
add
jmp
mov
cmpsb
or
pushw
fcmovu
adc
xlat
aad
and
xor
out
ret
push
arpl
clc
xchg
cmp
and
xor
jle
adc
or
cli
and
adc
in
call
mov
xchg
sub
ljmp
cmp
dec
adc
fisubs
in
cmpsb
lods
repnz
sbb
mov
add
cmp
iret
pop
pop
clc
jmp
inc
jo
xor
sbb
xlat
leave
xchg
mov
test
mov
outsl
inc
push
jmp
inc
add
mov
add
push
rcr
test
adc
sub
sub
pushl
inc
dec
movsl
inc
add
ret
jns
lods
fwait
lahf
test
adc
je
clc
loop
in
repnz
pushl
test
mov
mov
adc
sbb
call
clc
mov
pop
mov
xor
push
push
fildl
or
pop
xor
sub
mov
out
cltd
dec
mov
rdtsc
pslld
sbb
orb
shll
movsl
fldenv
xor
xorb
std
pop
in
add
subb
xor
sti
push
out
push
jle
jp
push
lods
sbb
std
fistps
test
push
cs
push
xchg
inc
add
add
popf
sbb
loope
add
fidivl
dec
stos
adc
jl
pop
in
mov
inc
lock
arpl
in
aad
add
dec
sub
or
addb
out
xchg
inc
push
call
rorl
mov
adc
inc
pop
in
jo
out
call
mov
or
aam
shlb
std
decl
out
sub
mov
loop
mov
inc
int
mov
mov
xchg
je
aaa
and
pop
jecxz
mov
and
mov
push
jle
lret
mov
cli
in
lcall
adc
imul
dec
pop
lret
lret
or
add
pop
mov
aaa
add
xor
jo
clc
decl
add
mov
stos
xor
pop
mov
push
rcrb
adc
dec
or
lcall
or
adcl
sbb
clc
aaa
push
or
inc
xchg
repz
popa
je
cld
decl
add
push
or
push
sti
ljmp
and
popa
into
out
cmp
imul
mov
add
rcl
stos
sbb
inc
pop
jo
cs
hlt
lea
das
push
repnz
std
out
and
cmp
add
lock
sub
rorb
sbb
mov
decb
aam
imul
push
fwait
push
ljmp
adc
pop
jp
inc
or
cmpb
xchg
adc
add
or
add
push
xchg
and
movsb
test
adc
outsb
sahf
call
and
and
sbb
je
sub
ss
ljmp
push
dec
fadds
sbb
cmp
or
ret
add
incb
add
and
ja
fstpl
repnz
and
mov
sti
stc
jae
aad
or
filds
clc
ret
add
es
int3
and
push
mov
das
sbb
dec
add
sbb
and
stos
adc
pop
clc
cmp
jae
rorb
int3
pop
inc
je
jno
stos
pushl
add
mov
insl
inc
popf
xchg
add
inc
fnstenv
add
sbb
inc
aad
aaa
cmp
test
mov
jnp
cmpb
xor
add
pop
adc
lret
xchg
out
inc
sub
add
cmpsl
pop
dec
les
push
pop
inc
push
std
fildll
and
jbe
and
fsubr
cmp
cmc
shlb
cli
mov
call
cmp
add
mov
and
add
fldcw
std
lcall
jmp
cmp
add
adc
xor
push
inc
sub
jmp
sub
dec
rcr
mov
fldcw
mov
sub
ret
sbb
in
pop
test
sub
mov
in
das
push
jo
pop
mov
and
dec
test
das
cld
lods
sbb
outsl
repz
push
imul
hlt
insl
jg
cmc
jbe
outsl
xchg
test
clc
push
arpl
jg
inc
xlat
or
int
push
fiadds
or
ret
add
cmp
testl
ja
fwait
add
jns
rol
incb
push
adc
jne
cld
mov
imul
repz
adc
inc
out
push
cmpsb
sub
pop
xor
adc
in
fildll
add
add
and
cld
jle
add
test
mov
imul
popa
mov
incl
and
scas
jnp
rol
pushf
sub
add
outsb
xchg
sub
adc
popa
loop
sub
clc
insl
pop
xchg
mov
or
mov
push
fdivl
sub
sub
arpl
mov
lock
iret
jmp
and
stos
inc
addl
sub
xchg
hlt
mov
or
aad
icebp
cmpsb
call
mov
adc
jp
jl
xlat
insl
push
int
xchg
stos
cmpsl
add
movsl
pop
mov
add
dec
cmp
pop
js
xchg
in
test
or
icebp
inc
mov
adc
mov
pushf
sbb
jp
sub
mov
and
popa
sub
cmp
rclb
cs
pop
jecxz
jge
mov
add
cmpsl
stc
sub
mov
mov
or
test
mov
dec
data16
aam
sbb
out
push
cs
jbe
pusha
inc
mov
lds
cmp
cmp
xchg
lret
adc
sub
std
mov
mov
mov
pop
fdivrl
stos
test
mov
shll
out
flds
movsb
cmp
fucomip
mov
pop
ja
subb
mov
xor
data16
pop
shlb
and
sub
cld
std
outsl
das
aaa
xchg
dec
sbb
pop
cmp
lcall
or
int
xchg
mov
stos
push
dec
jmp
pushf
or
xor
incl
add
lea
aas
xor
add
sar
mov
lock
lock
inc
movsl
in
stc
aam
int
jns
aam
mov
std
push
scas
mov
jg
mov
popf
roll
cltd
inc
add
cs
push
lds
mov
aam
cmpsl
mov
mov
pop
fsub
xorl
push
mov
into
popa
out
mov
or
push
js
into
and
mov
push
pop
sub
insb
jmp
xor
push
and
jne
loopne
sub
xchg
jge
jecxz
sbb
pop
clc
sbb
rolb
pop
xor
rcrb
jg
xor
cs
jg
cltd
and
decb
in
push
aam
movsl
lahf
xlat
mov
aam
in
mov
xchg
pusha
mov
push
xchg
orb
ja
mov
cltd
iret
or
aam
add
adc
sti
outsl
dec
mov
incl
clc
mov
inc
lret
loop
icebp
or
cmp
out
stos
call
mov
jmp
pop
and
xchg
iret
push
iret
or
notb
dec
das
shrb
daa
rcrl
jp
xor
loope
push
std
adc
mov
adc
xchg
pushl
outsb
jg
push
add
adc
adc
loopne
lea
push
mov
and
fildl
mov
jl
sbb
and
mov
pop
in
outsl
jmp
roll
icebp
out
fstl
add
enter
outsl
icebp
mov
jl
lock
and
insb
mov
enter
adc
cwtl
xor
rorb
inc
jg
lods
fistpll
adc
cwtl
sbb
repz
das
cmp
int
xchg
mov
jb,pt
out
jp
lcall
scas
sub
leave
dec
shr
pop
push
jle
mov
loop
outsl
and
push
ret
clc
adcb
out
leave
outsl
jne
xchg
ljmp
inc
rorl
push
dec
push
jp
sub
or
add
mov
mov
fs
push
cwtl
lock
fistpl
pusha
sti
xchg
or
xchg
xor
enter
jae
loopne
js
or
mov
adcb
stos
xchg
sahf
sar
lcall
mov
jb
and
cmp
and
pop
mov
aad
dec
fsubrl
lahf
dec
insb
fsubrs
ss
test
sbb
push
ljmp
mov
sub
ja
jecxz
out
jnp
call
jns
pop
incl
fistl
sbb
or
stc
and
ret
xor
jmp
sbb
movsb
cmp
and
mov
xor
xor
mov
jnp
cld
sbb
lret
ret
add
push
sub
adc
nop
sahf
dec
sub
adcl
idivl
imul
dec
lea
add
cwtl
mov
fistps
movsl
dec
js
pop
adc
mov
jg
outsl
push
or
sarb
orl
mov
push
repz
cmp
sbb
pusha
jb
pushf
cld
xor
push
les
loop
and
cmp
into
loopne
fndisi(8087
sub
fsub
jg
call
xchg
dec
sbb
adc
filds
fsubr
sub
mov
mov
adc
inc
xchg
sub
dec
pop
lock
orb
cmpsb
stos
mov
incl
decl
mov
ss
pushf
cs
and
lcall
and
arpl
adc
jg
scas
sub
inc
mov
rcll
sbbb
dec
andl
mov
pop
insb
lahf
dec
sti
xor
das
jg
cmp
popa
bound
fnstenv
mov
jns
inc
daa
inc
mov
cmpsb
incl
test
pop
dec
imul
mov
in
popf
dec
pop
js
or
clc
adc
mov
sub
fucomi
mov
out
or
mov
clc
adc
test
and
xchg
cltd
xchg
mov
setl
dec
inc
xor
imul
daa
push
pop
daa
stc
add
pop
std
xchg
ds
pushf
mov
add
movsb
inc
call
jg
bound
lock
jl
mov
mov
repz
jg
mov
call
mov
adc
add
aaa
lcall
lahf
lcall
bound
cmp
mull
and
add
add
xchg
xchg
push
or
cmp
xor
cld
das
jno
or
push
sbb
in
mov
repz
push
rcr
jbe
push
add
ret
cmp
incl
and
dec
inc
inc
xor
popf
dec
pop
in
imul
or
push
mov
loopne
int3
push
clc
loopne
stos
dec
ja
iret
push
sbb
call
add
or
or
xchg
mov
push
or
enter
enter
shrb
lock
cli
das
fs
pop
fwait
cltd
cmc
fcoml
xchg
sbb
xchg
loopne
cs
inc
jg
test
mov
pop
insb
inc
mov
out
dec
cltd
mov
add
pop
arpl
mov
jno
lea
lds
out
and
in
dec
shlb
jg
push
or
mov
jbe
push
mov
repnz
rcr
dec
pop
jbe
iret
fcoms
push
ja
bnd
loopne
inc
cwtl
sub
or
mov
scas
cmp
jge
andl
out
pop
push
popf
fistpl
inc
gs
or
xchg
leave
mov
sbbl
test
xor
cmp
dec
std
inc
sub
fldenv
or
clc
pop
mov
out
pushf
inc
pop
xor
testb
lds
or
stos
leave
aam
and
bound
aaa
sbb
testb
or
xlat
push
popf
enter
fmuls
addr16
or
arpl
imul
mov
ds
sbb
dec
mov
xchg
sbb
mov
pop
out
push
fisubrl
in
and
dec
cmp
add
and
cli
mov
mov
adc
je
daa
xor
popa
ret
mov
lds
jle
adc
repnz
xlat
aad
mov
subb
movsb
hlt
imul
fdivr
pop
dec
push
jp
sbb
push
scas
sbb
xlat
lahf
dec
jb
cli
dec
testb
sub
stos
add
shl
call
xor
sbb
sbb
mov
daa
dec
jl
sbb
dec
dec
aas
cwtl
ljmp
nop
lods
sbb
or
mov
aaa
mov
movd
cmpsl
adc
mov
mov
mov
dec
xchg
cltd
push
or
adc
mov
xchg
mov
outsl
into
add
xor
mov
adc
gs
jae
jnp
js
jbe
imul
sbb
sbb
mov
jae
cltd
fildl
rcrl
leave
sub
jno
or
mov
leave
mov
jne
sub
sub
adcl
inc
jl
sub
xchg
push
cs
push
push
jmp
sub
and
mov
push
stos
sbb
cli
test
sti
mov
pusha
in
scas
mov
mov
push
push
repz
bnd
dec
jge
outsl
adc
mov
lods
push
or
mov
inc
in
inc
js
xchg
sub
stos
xchg
test
lods
mov
and
mov
cld
sbb
jg
sbb
fimuls
or
pop
mov
je
in
and
int3
pop
rclb
popf
idivl
outsl
jg
jnp
in
int
in
mov
rcrb
adc
sbb
mov
sbb
or
cmc
push
xor
popl
ja
pop
pusha
notl
fisubrl
cmp
xor
mov
mov
adc
push
push
add
jne
push
inc
enter
cmc
outsl
xchg
adc
mov
pop
mov
ds
test
subl
sub
add
or
and
xor
xchg
scas
rcll
lret
lcall
mov
repz
js
sbb
filds
sarl
mov
hlt
dec
add
mov
std
incl
mov
sahf
mov
inc
nop
xor
and
dec
pop
sub
fprem1
pop
sqrtps
mov
rol
xor
xchg
sub
ljmp
and
pop
push
out
mov
add
pop
push
icebp
das
gs
jecxz
or
xchg
aad
cs
cmpb
jle
lea
js
mov
sub
test
dec
mov
jle
sbb
xchg
outsl
mov
dec
or
nop
ds
shrl
das
adc
hlt
andb
enter
fs
fcmovb
pop
in
fsubp
test
inc
add
cwtl
inc
push
or
add
mov
in
sub
cmp
int
inc
push
in
rolb
dec
pop
insl
push
push
or
insl
imul
jle
iret
ljmp
jge
out
mulb
call
mov
imull
loopne
dec
cld
mov
and
xor
lods
in
add
js
and
stos
dec
jg
push
cld
pop
dec
push
xchg
stc
mov
jnp
cmc
sub
leave
xchg
xor
fsubrs
ret
ja
add
xchg
or
push
add
pushf
inc
and
sahf
push
insb
push
outsl
mov
add
int3
push
jmp
or
pop
jb
and
mov
pop
lods
shrb
movl
sti
push
pop
push
cmp
aas
std
test
mov
fcompl
push
loopne
out
cmp
adc
fst
rorb
sbb
into
jne
jns
test
and
cmpsl
pop
add
test
lret
inc
hlt
outsl
lret
lods
dec
cli
mov
aaa
adc
mov
test
adc
push
mov
aad
dec
cmp
outsb
insl
sub
cmp
push
out
push
ja
incl
push
fwait
call
add
pop
cwtl
cltd
adc
ja
or
dec
mov
sti
fists
popf
sub
and
ljmp
mov
dec
sbb
ret
arpl
mov
jno
sbb
sub
jmp
push
in
mov
ss
push
icebp
push
jb
add
mov
mov
mov
add
or
push
movsl
outsb
sub
jo
inc
loopne
add
or
xchg
pop
aaa
test
in
mov
mov
mov
add
call
fucomip
xchg
push
faddl
inc
ds
mov
les
jno
push
jmp
or
icebp
xchg
lretw
mov
pop
ljmp
pop
pop
fistpll
jl
pop
mov
add
dec
lds
lea
je
ret
pop
jle
mov
leave
mov
jae
outsl
mov
loop
mov
add
clc
cmp
std
pop
pop
stos
mov
shl
sub
mov
sbb
test
sbb
out
dec
loop
lock
xor
sbb
fisttps
mov
and
add
and
loopne
sbb
xchg
sbb
arpl
adc
lock
aaa
sarb
test
mov
lcall
mov
cs
xor
lds
data16
or
out
mov
dec
test
insb
aas
into
jecxz
shr
es
outsb
and
stos
push
das
aam
test
mov
lods
mov
call
iret
push
and
test
std
xchg
arpl
shlb
push
mov
out
je
mov
sti
sub
sbb
xor
popa
sub
mov
scas
and
outsb
cli
fstl
add
mov
push
lea
sbb
stos
rcr
insl
add
sub
sub
add
jp
sbb
pushf
push
pushf
or
ret
inc
into
orl
into
jg
jl
fldt
mov
andl
les
gs
movsl
sbb
cwtl
int3
mov
sar
push
adc
or
sar
add
cli
xchg
scas
jo
orb
pop
mov
movsl
loope
mov
icebp
cmpsb
shl
add
popf
inc
jb
jne
inc
mov
adc
lds
aaa
fiaddl
sbbb
lea
rcll
push
gs
inc
push
mov
sarb
adc
into
jb
arpl
test
rcr
mov
mov
xor
pop
in
movsl
sbb
decb
jns
jb
pop
jg
ljmp
pusha
sti
push
inc
dec
add
cmp
mov
or
cmpsl
movsl
jecxz
fcomip
mov
sbbl
loopne
lcall
lea
mov
sub
mov
loopne
sbb
mov
xchg
mov
cmp
jle
jmp
ds
pop
pushf
push
inc
mov
fistl
jmp
movsl
cmp
je
xor
sti
negb
rcll
arpl
aam
or
ljmp
popa
std
repnz
mov
inc
xor
cmpsb
mov
pop
cmp
imul
mov
rclb
cmp
push
fisttpl
out
adc
out
mov
xchg
shll
jge
pop
xor
mov
imulb
cmpsl
inc
jb
mov
push
outsl
xor
ret
and
jmp
and
dec
call
repz
xor
test
clc
add
inc
mov
mov
sbb
dec
pop
int
imul
mov
fbstp
inc
mov
insl
or
adc
inc
push
test
xorb
mov
dec
xor
push
out
push
and
and
std
add
ljmp
arpl
lcall
inc
cmp
ljmp
push
test
and
xchg
dec
sbb
xor
and
pop
adc
gs
repnz
fistpll
outsb
mov
sub
insb
xchg
or
das
fmull
push
xchg
xchg
sub
mov
xchg
movsl
sahf
das
xorb
mov
aaa
sub
dec
sti
testb
mov
push
cli
inc
lds
mov
xchg
and
hlt
outsl
jo
adcb
dec
mov
jmp
or
ret
xchg
mov
lret
int3
data16
or
pushl
ret
jno
adc
jns
shll
or
addr16
inc
cmpsl
enter
call
or
pop
lds
lds
mov
lds
dec
xor
xor
loopne
je
call
out
clc
out
jg
xchg
push
cltd
mov
add
adc
test
cltd
rol
lods
shll
cmp
jecxz
hlt
idiv
cmp
cmpl
sub
std
jg
js
mov
aad
mov
pop
das
inc
mov
jle
jle
sub
andb
movsl
jne
pop
movsl
push
adc
jmp
ja
dec
inc
inc
leave
adc
jg
or
mov
frstor
pop
scas
jno
sub
inc
insb
dec
fldenv
pop
mov
xchg
and
adcb
out
test
dec
add
dec
xchg
shll
adc
or
or
mov
pop
mov
popa
ds
clc
insb
pop
ss
pop
pop
je
cld
inc
daa
xchg
mov
xchg
call
inc
lahf
xchg
adc
sbb
mov
add
adc
inc
and
movsl
inc
sub
repz
mov
stos
xchg
sub
xor
mov
fisubrs
sbb
imul
xor
cmpsl
or
out
pop
or
dec
and
mov
aas
sbb
jle
xor
jb
mov
ljmp
out
rcrl
lock
push
jle
jo
mov
adc
lahf
push
push
push
adcl
scas
sbb
mov
or
sub
jne
sbb
data16
mov
pushl
in
inc
adc
pop
mov
clc
push
dec
xchg
mov
or
es
loope
orb
fisttps
test
sahf
jl
lcall
fdivrp
scas
inc
xor
jecxz
xchg
popa
stos
test
push
cmpb
pop
fisttpll
pop
sbb
sti
inc
mov
xchg
cmp
in
clc
cmp
or
mov
adc
mov
aaa
mov
loop
aaa
mov
fldcw
push
or
adc
std
das
fnstsw
sti
or
jl
xor
inc
outsb
data16
jb
mov
stos
rcr
cmpb
and
mov
int3
dec
in
das
mov
lods
xor
push
decl
outsl
icebp
push
in
mov
rcl
sti
jg
icebp
mov
out
adc
and
outsl
push
insl
hlt
mov
push
shl
add
or
mov
insl
dec
fisttpl
rorl
sub
cmpb
sbb
or
xor
mov
or
lods
mov
inc
bound
lcall
mov
mov
test
mov
mov
sbb
pop
aaa
xchg
aaa
adc
xor
jge
cmp
cmpsl
jae
and
frstor
xor
jg
repz
outsl
xchg
pop
adc
lods
cmp
ds
inc
lock
or
mov
mov
add
mov
fistpll
and
loop
xchg
jb
cmp
inc
mov
xor
fldl
or
ja
push
loope
pusha
sbb
mov
jmp
ja
aas
inc
add
imul
aad
jecxz
insb
and
in
cli
clc
fsubs
sbb
arpl
pop
sbb
iret
ja
jb
mov
hlt
mov
pop
jmp
mov
mov
push
mov
arpl
or
mov
stc
mov
xor
sbb
mov
call
cmpxchg
mov
testl
daa
icebp
imul
xor
xchg
ret
js
pop
fldenv
push
rorl
loope
adc
aaa
movsb
push
mov
test
rorl
adc
jp
loop
outsl
mov
or
fisubrl
int3
push
jmp
outsl
std
inc
and
cmp
shrl
pop
pusha
and
cmpl
adc
or
or
movl
stc
fs
insb
std
insl
cmp
add
ja
jnp
cmp
movsb
cmp
cs
incb
out
add
fisttpl
mov
lret
negb
call
xchg
test
cmp
mov
xchg
push
pop
lock
ja
and
rcl
mov
pop
movsl
push
jno
call
sbb
mov
in
fdivs
dec
daa
mov
fiaddl
lcall
in
jbe
mov
or
mov
test
mov
push
sbb
pop
dec
cwtl
nop
cmp
or
mov
scas
or
or
int3
ljmp
insl
or
cltd
mov
out
aad
jp
out
sbb
mov
mov
pop
cmp
lock
jns
push
pop
fwait
adc
in
das
add
nop
push
mov
ud0
aas
mov
push
inc
les
dec
push
sbb
xor
enter
and
dec
cmpsl
jb
add
in
lods
loope
lock
addr16
mov
fnstenv
insl
push
xchg
cmp
sbb
pop
xchg
cmp
icebp
cmc
negb
shll
pop
test
adcl
push
subb
pusha
scas
pushf
push
xchg
insl
mov
jbe
inc
xorl
push
cmc
xchg
ret
sahf
mov
fistpll
pop
inc
lods
inc
loope
std
filds
sub
addr16
jns
push
repnz
xor
nop
push
mov
sahf
mov
or
cmpsb
not
mov
rcll
rcr
adc
outsl
xchg
push
mov
inc
das
mov
pushl
adc
pop
jp
fs
and
decb
outsl
insl
test
js
lods
mov
shrb
jg
add
mov
sbbl
lcall
mov
leave
pop
xchg
cmp
and
add
scas
xor
jle
cli
push
fnstsw
adc
inc
push
and
scas
std
dec
or
pop
inc
inc
iret
cs
cld
nop
cmpsb
mov
fcomps
lock
sub
icebp
scas
and
fstpl
push
ret
out
fs
shrb
mov
push
dec
dec
xchg
xor
in
mov
int3
inc
ret
and
jo
sbb
divb
cmc
mov
sarb
dec
lcall
inc
jne
sub
jl
aam
mov
test
jb
dec
sub
outsb
adc
sub
cld
sub
mov
dec
arpl
mov
outsl
shrl
cmp
add
mov
inc
mov
sbb
insb
or
icebp
mov
inc
fisttpl
outsl
mov
mov
push
mov
loop
jp
lahf
or
jne
dec
je
adc
stos
push
frstor
shlb
lods
add
lret
das
fnstsw
hlt
lea
decl
cmp
jae
pop
test
loope
lcall
stos
adc
pop
int3
leave
mov
push
es
pop
cmp
fwait
clc
pop
sahf
sub
mov
rolb
fwait
cmpb
and
pop
mov
std
notb
pushf
jne
notl
js
dec
fistpll
xor
jle
sub
adc
out
mov
aas
xchg
pop
shrl
gs
cli
es
pushf
lcall
push
movsb
ret
nop
test
pop
paddb
lods
mov
int3
xchg
fistps
testb
out
mov
jge
dec
das
sahf
xchg
jmp
repnz
and
aaa
icebp
sarb
xchg
imul
dec
cmc
jmp
fwait
pop
enter
adc
fs
fisubrl
and
bound
push
sub
mov
mov
data16
jecxz
add
inc
test
add
and
push
dec
mov
inc
cmp
push
jne
pop
pop
ljmp
sbb
jae
push
pop
pop
sub
pop
bound
loopne
xchg
jo
in
adc
out
pop
test
test
inc
cltd
inc
popa
rorb
mov
ja
fcmovnu
or
in
push
sub
scas
lock
jne
xorb
out
jecxz
test
dec
inc
insl
sub
data16
inc
xor
subb
cmp
ljmp
add
xchg
icebp
pop
cmp
dec
mov
push
dec
mulb
add
inc
mov
js
jne
test
das
rorl
xor
dec
adc
push
ret
jns
mov
call
sub
insl
das
je
cmpsl
je
adc
pop
xor
or
and
jo
ljmp
xchg
test
cs
iret
mov
mov
mov
mov
mov
push
flds
decl
jns
test
jecxz
test
ss
ror
ljmp
insl
stos
test
popf
dec
sti
fistpl
pop
or
mov
loop
pop
cs
popaw
inc
leave
sub
push
mov
icebp
cs
mov
fwait
imul
and
jno
adc
pop
clc
mov
notb
nop
enter
mov
jne
sbb
push
in
loop
pop
push
sbb
mov
fisttps
call
and
cmp
adc
mov
push
fsubs
sub
jne
pop
sbbb
inc
jg
ljmp
repz
cmp
or
repz
gs
mov
jae
hlt
loope
sub
dec
in
adc
xor
mov
push
mov
cld
push
addl
hlt
or
mov
adc
mov
mov
push
test
mov
lcall
cwtl
incl
fistps
add
test
aad
mov
cld
sbb
pop
jle
notl
mov
xchg
loope
or
arpl
sub
sub
out
mov
mov
mov
inc
ret
clc
sbb
cwtl
dec
sbb
xchg
fsubrs
in
sarl
dec
stos
push
hlt
lea
aad
iret
pop
mull
jecxz
pop
mov
scas
lock
mov
pop
xor
aaa
jle
and
popf
push
loope
xchg
mov
pop
int3
mov
test
fsubrl
mov
je
add
addr16
stc
movsl
mov
inc
lea
out
cmpsb
cmp
mov
mov
add
add
adc
icebp
jb
xor
inc
mov
pop
mov
pop
js
adc
xchg
sub
push
ret
jg
in
shl
inc
xchg
or
enter
jecxz
adc
dec
adc
mov
call
adc
fsubs
pop
ds
mov
cmc
or
clc
outsl
pop
mov
mov
jmp
push
push
jnp
icebp
cmpsb
repz
lods
sub
pop
fstl
insl
xchg
pop
test
mov
mov
inc
mov
seta
mov
loope
jno
sub
fwait
js
push
sbb
xchg
add
inc
dec
push
enter
inc
clc
add
push
dec
outsb
pop
fisttpl
faddl
jne
pop
add
mov
cmp
outsl
sub
xlat
push
rcrb
sbb
mov
mov
mov
ret
fstpl
lods
inc
aaa
adc
sbb
add
inc
out
pop
pop
es
clc
movsl
hlt
or
jnp
outsl
cld
pop
xor
inc
hlt
push
and
rcl
out
ljmp
xchg
xchg
lret
mov
cltd
and
add
cmp
adc
sub
clc
sub
cmp
fsub
mov
lds
inc
or
jle
inc
xchg
and
add
pop
jnp
lock
sub
stc
out
mov
pop
ficompl
movsl
in
xchg
fcompl
in
adc
sbb
add
or
stc
fistl
sarb
les
adc
push
fsubrs
adcb
in
idiv
sarb
mov
xor
dec
cwtl
and
cld
shlb
hlt
xchg
ds
jne
in
andb
outsl
mov
fstpl
aaa
insb
in
and
sbb
sub
and
pop
push
stos
out
pop
lock
lea
aaa
jb
cmp
fcomps
pop
rcrb
sbb
daa
shl
in
mov
jns
adc
inc
push
push
repz
cli
dec
in
mov
stos
aas
fldenv
adc
fildll
pop
sub
sub
pushf
push
cld
xchg
dec
pop
dec
inc
out
sub
inc
pop
xchg
fnstenv
mov
in
add
das
cli
sub
mov
test
fdivrl
fdivrs
lock
mov
popf
test
dec
loop
and
or
xchg
jl
pop
mul
xchg
and
das
outsl
dec
xchg
or
incl
addr16
sbbl
push
push
inc
push
sub
xor
mov
pop
mov
ret
jne
fsubrs
outsl
lods
test
or
mov
sub
sbb
lds
pop
test
loope
xor
add
jns
push
pop
xchg
std
movsl
jle
jb
jg
cmp
mov
jbe
gs
jmp
mov
lret
or
pop
push
jl
and
movzbl
sbb
pop
push
jle
jge
imul
xchg
cmp
xchg
or
popf
sbb
scas
test
xlat
dec
int3
pop
jge
addr16
sbb
sub
ljmp
ss
xchg
js
jnp
inc
mov
aas
fstps
ret
and
sub
mov
pop
pop
or
sub
les
js
cmp
andl
xor
pop
ja
nop
cld
jno
out
cmp
inc
into
shl
fwait
inc
inc
cmp
and
cld
mov
ficompl
pop
xlat
testb
into
pushf
xor
insb
jp
icebp
sub
outsb
inc
filds
shl
ret
xchg
sub
adc
or
scas
or
or
aas
pop
mov
jo
arpl
in
and
ds
mov
pop
repz
loope
dec
pop
nop
and
ljmp
ret
or
sbb
xlat
sbb
dec
test
xchg
in
fwait
dec
push
add
fiadds
mov
fsubl
aaa
push
mov
jge
push
insl
filds
and
cmp
cs
pop
inc
into
dec
dec
dec
incb
cmpsb
jmp
std
stc
mov
outsl
call
in
pop
jb
in
pusha
imul
xor
cmp
cmp
outsl
mov
sbb
sbb
pusha
sahf
sbb
sbb
pop
fisttpll
mov
jg
mov
test
push
jb
sbb
call
xchg
fcomp
cli
pop
cli
test
mov
fistl
pop
jne
push
inc
inc
fdivrl
lret
fisubrs
into
xchg
loopne
inc
cmpsb
cmp
inc
je
movsl
out
outsl
xchg
push
inc
cmp
jno
adc
gs
jmp
push
pop
call
xlat
sbb
sub
inc
fs
mov
out
jmp
sbb
out
cli
loopne
nop
push
subb
mov
push
push
por
inc
add
mov
mov
icebp
xchg
fisttpll
outsl
push
sbb
jbe
addl
ss
jne
cmp
mov
mov
imul
pop
adc
outsb
test
xor
inc
pop
adc
andl
dec
lahf
inc
out
add
push
or
jle
sbb
movb
push
push
loopne
mov
aad
outsl
mov
rcll
push
and
push
push
sub
add
or
sub
dec
dec
pop
mov
aaa
sub
jg
push
dec
xchg
decl
sbb
xor
jg
dec
mov
mov
push
scas
pusha
daa
jge
mov
jb
lret
lret
pop
lcall
lcall
cli
shlb
test
pop
mov
mov
mov
hlt
fistpll
pop
dec
or
enter
and
jne
dec
push
pop
sbb
incl
add
cmpsb
push
push
cmp
test
push
cld
push
mov
or
shrb
mov
aaa
cltd
fimull
push
pop
aad
sub
sub
adc
xchg
adcb
std
test
push
out
sub
pop
dec
mov
adc
pop
loopne
in
or
or
movsl
and
sbb
es
jg
std
add
rclb
add
fldcw
inc
cmp
fldt
cmc
popf
hlt
shl
inc
imul
sarb
pop
ja
pop
sub
add
cmp
push
pop
inc
xor
push
and
in
bswap
call
lret
jge
pushf
push
and
lds
mov
pusha
or
mov
mov
and
mov
rep
in
ret
jle
mov
sbb
cmp
loopne
xor
push
pop
cmp
loopne
sub
mov
push
int
sbb
xor
or
outsb
jl
or
shl
popf
push
pop
mov
adc
inc
push
decl
and
jmp
and
pop
jnp
dec
or
nop
jp
loope
push
or
jmp
cmp
nop
out
and
std
fildl
cld
jecxz
xor
popa
xor
jmp
fisttps
xchg
jb
pop
pop
loope
sbb
jp
lcall
fdivr
decl
dec
add
add
adc
push
mov
mov
imul
divl
int3
mov
enter
add
cmp
sub
fdivs
sarl
add
shll
movsl
xchg
lret
aaa
aas
stc
popa
pop
bound
push
aas
and
bound
stos
fldcw
incl
fmuls
ret
rolb
xor
ret
fcoms
mov
xor
add
outsb
add
roll
jbe
into
enter
pushf
push
std
scas
pop
call
push
test
cli
xor
cmp
inc
sub
inc
rorl
xor
sub
notb
stos
xchg
cltd
ret
pop
xorl
stos
mov
mov
addr16
xchg
add
cwtl
jne
in
jae
test
mov
repnz
neg
push
mov
mov
sbb
add
lret
in
insb
cmc
inc
mov
sbb
test
ja
cwtl
add
cmp
cmpsl
inc
mov
js
rcll
adc
std
mov
xchg
leave
dec
sub
icebp
jecxz
pushf
sbb
addr16
loop
adc
sbb
sbb
out
mov
ret
es
jp
jne
mov
sti
push
jg
lcall
imul
sti
xchg
into
imul
dec
push
cmpsb
shrl
or
and
dec
pop
les
imul
cmpb
ljmp
andb
jo
push
adc
xchg
cli
incl
dec
mov
js
into
mov
leave
or
icebp
xchg
ret
push
movsl
push
sahf
inc
cmp
jge
xchg
ret
mov
mov
or
xchg
adc
outsl
xor
mov
std
stos
sti
push
das
inc
ret
lahf
outsl
sbb
test
mov
jne
repnz
push
push
and
mov
clc
repnz
xor
jbe
in
mov
add
adcb
push
jle
repz
mov
data16
mov
or
cld
lods
or
sbb
shll
pop
insl
mov
stos
cmpsl
cmp
jecxz
or
inc
push
inc
or
testb
mov
inc
mov
lock
outsl
repz
test
mov
and
or
mov
fstl
call
mov
mov
leave
std
repz
mov
imul
out
lret
pop
cmp
addl
fdivp
pop
mov
mov
and
popa
or
sub
adc
inc
adc
iret
push
enter
std
bound
sbb
clc
jg
push
dec
les
fcoml
cli
pop
mov
fdivrp
push
call
inc
mov
cmp
sbb
or
dec
inc
lds
push
push
pop
pop
cmp
das
cmp
jg
cmp
nop
xchg
js
cvtps2pi
adc
fcmovne
movsl
mov
out
jne
in
push
fidivrs
in
and
loope
sub
shrl
sbb
pop
data16
lcall
mov
add
xor
pop
loope
in
leave
jo
lods
outsl
mov
jl
cli
int
sbb
cmc
lea
push
adc
push
loopne
clts
loope
pop
out
rcll
mov
rol
push
in
pop
loop
shrl
stos
repz
cs
ds
lods
lods
icebp
cmp
imul
dec
rolb
pop
xchg
das
lcall
xchg
in
dec
lret
popf
jecxz
pop
mov
ds
fstp
je
rcll
loope
decb
xor
push
pusha
or
clc
jnp
sbb
jle
cmp
sbb
sub
and
jmp
test
jle
adc
pop
in
insb
pop
ljmp
pop
out
jne
mov
ds
xor
ds
ds
loopne
inc
in
in
das
jl
pop
jl
mov
icebp
clc
mov
ret
ja
jbe
jecxz
icebp
add
inc
jg
test
xchg
mov
push
in
rorb
jl
add
fidivrl
movl
cmp
jg
lods
add
lret
gs
sar
adc
sti
ljmp
nop
pop
mov
dec
jo
adc
push
or
ret
xor
xor
jo
and
out
in
ficoms
push
mov
ljmp
push
loop
icebp
inc
repz
push
out
or
adc
mov
out
pop
arpl
cld
cld
imul
inc
lods
ret
cmp
mov
aam
fstl
pop
jecxz
pop
iret
imull
stos
ljmp
inc
test
jp
roll
mov
pop
lods
ds
das
in
sbb
test
mov
sbb
xchg
xchg
cmc
mov
jl
hlt
call
mov
dec
loope
or
dec
outsl
cmp
jne
and
lock
test
test
lock
pop
push
jle
lds
loopne
int3
jg
cmp
repz
mov
push
movsl
out
into
sbb
inc
stos
or
xchg
dec
cmpsb
mov
push
jecxz
inc
in
es
xchg
cmp
adc
cmp
push
pop
lret
arpl
mov
das
mov
jmp
adc
add
lcall
ret
out
cmpsl
scas
sub
iret
popa
clc
leave
sub
in
mov
xchg
sar
mov
les
pop
dec
xchg
lock
jne
push
cltd
shr
out
mov
cmpsl
test
mov
sbb
and
and
pop
jg
mov
in
xchg
pop
dec
jg
pop
ljmp
xchg
ret
icebp
pop
pop
xchg
sub
das
xor
and
testl
cmc
adc
fnstsw
insb
mov
jmp
sbb
mov
inc
call
mov
dec
icebp
fistpll
icebp
or
mov
adc
idiv
mov
incl
jne
aam
ret
clc
movsb
sub
mov
outsb
pop
aaa
xchg
test
incl
lods
loopne
xor
loope
mov
ror
pop
sub
inc
add
movsb
add
mov
std
movsl
push
gs
jmp
add
or
pop
dec
decl
fsts
mov
xchg
jl
leave
or
push
dec
loopne
mov
mov
repz
jbe
adc
xor
ret
mov
inc
rcrb
or
jecxz
lods
das
inc
imul
cs
mov
or
in
lahf
cwtl
nop
fwait
mov
adc
jae
dec
push
movsl
sub
fistpll
les
adc
inc
mov
mov
sti
adc
out
icebp
cmpsl
dec
adc
fs
mov
or
mov
mov
lcall
jl
into
cmp
ja
test
sub
std
pop
imul
ds
jne
fsubp
pusha
inc
push
push
repnz
push
pop
ss
and
test
arpl
xchg
shlb
cmc
mov
ret
jle
icebp
faddl
sub
inc
adc
nop
dec
aas
xchg
dec
pusha
adc
ljmp
jnp
cmpsl
sub
mov
sub
aaa
cld
pop
pop
lea
je
call
xchg
out
scas
outsb
aam
pusha
xchg
inc
jle
jl
sbb
jl
inc
mov
pop
notl
xorl
sbb
push
shrl
loope
push
int
mov
shl
xor
cmp
in
adcl
mov
jns
cmp
in
dec
pop
jmp
mov
loopne
push
aaa
mov
lret
lret
or
mov
push
lea
aaa
push
mov
sbb
mov
stos
mov
lods
retw
mov
jg
jbe
adc
repz
jge
cmc
ret
push
xor
push
jmp
push
jno
decb
iret
add
mov
ffreep
mov
cmpsl
test
mov
fisttpll
lods
icebp
hlt
rorl
sbb
pop
mov
dec
adc
hlt
filds
jo
arpl
pop
mov
jbe
movb
pop
sarb
or
add
xor
addr16
jmp
mov
stc
mov
and
or
movsl
lea
mov
inc
xchg
ljmp
sub
js
mov
fs
incl
xchg
addr16
sub
sahf
jbe
jne
lds
adc
cmpsl
sbbl
push
popa
mov
cmpb
push
test
mov
in
mov
imul
sub
or
js
push
imul
fistps
cmp
or
roll
pushf
or
stos
mov
mov
movsl
pop
and
loope
data16
and
incl
inc
mov
adc
cmp
mov
mov
leave
out
fdivl
dec
sub
adc
push
clc
xchg
data16
mov
pop
int
ss
mov
out
mov
shrl
loopne
and
xor
div
sbbb
pop
decl
addb
ss
aas
mov
and
fwait
clc
test
lcall
imul
insb
es
jg
jmp
ljmp
add
adc
mov
add
lcall
inc
pop
lcall
fwait
rcrl
jmp
dec
les
les
clc
jg
add
clc
push
je
mov
mov
repnz
and
add
outsb
decl
arpl
int
push
mov
andl
decb
mov
sbb
out
mov
icebp
scas
je
dec
or
xchg
and
aam
push
in
decl
icebp
and
ja
ret
mov
xlat
xorb
inc
sbb
fimull
cmp
add
mov
rol
leave
cmp
xor
jle
mov
adcb
fs
loop
pusha
mov
test
pop
dec
loope
jge
add
mov
outsb
adc
sub
inc
adc
mov
xchg
das
fidivrs
mov
xchg
daa
xor
and
xor
outsl
jl
pusha
out
and
in
sub
test
lea
mov
ficoml
scas
fisttps
ljmp
addr16
cmpsb
inc
pop
stos
jge
mov
push
xor
sub
cmpl
rorl
lea
sub
mov
test
fisttps
into
sub
orl
sarl
scas
and
pop
and
and
idivb
xor
pop
cmp
cli
add
fldl
inc
enter
clc
and
xor
vmovapd
addb
shll
mov
jb
mov
jo
gs
or
inc
loop
sub
dec
push
lahf
xlat
fstps
mov
cs
enter
xor
das
cld
or
cwtl
push
sub
ja
jp
xor
xchg
mov
mov
xor
icebp
lds
jns
mov
jle
pop
lods
gs
ret
sbb
pop
clc
jg
in
fiadds
popf
repnz
xor
fistps
adc
outsl
sub
dec
mov
cld
bound
leave
dec
mov
aam
outsl
xor
dec
jbe
stc
sbb
pop
dec
out
pop
std
pushl
js
fwait
jo
jl
adc
xchg
dec
inc
mov
mov
pop
push
pop
rorl
lahf
mov
add
divb
sub
shl
pop
inc
inc
mov
pop
sbb
leave
mov
dec
xor
test
lcall
jg
mov
pop
daa
push
jo
icebp
sbb
out
jg
xchg
bound
jnp
adc
push
mov
mov
rcll
cmc
add
push
mov
add
jmp
mov
dec
or
or
int
je
lahf
std
pop
push
lods
push
fwait
xchg
sub
and
jne
add
sub
jo
popf
cmp
dec
jno
sbb
movsl
testb
mov
pop
push
test
cmpsb
push
pop
sub
cwtl
xor
cmp
into
pop
cli
add
dec
js
repz
jb
movsl
in
stos
aad
int
mov
add
scas
popa
sbb
sub
das
mov
icebp
xor
fbld
jp
in
xchg
xor
xor
dec
lea
sbb
dec
pop
scas
add
jle
mov
mov
cmp
cld
mov
in
dec
adc
outsb
or
test
out
push
mov
mov
pop
adc
sbb
jmp
aaa
adc
or
and
mov
jb
ljmp
daa
jb
push
aad
jp
pop
inc
xor
jecxz
mov
data16
jle
jmp
test
sbb
sbb
cld
dec
sub
mov
add
pop
jg
fs
push
xchg
insl
jmp
or
inc
jge
arpl
jg
jl
or
jnp
mov
stc
cmp
add
loopne
fcoms
mov
lods
or
jmp
or
inc
jge
fwait
pop
xchg
std
repnz
xchg
mov
nop
cmpsb
jo
shll
arpl
mov
icebp
sub
mov
scas
ret
cmp
fnstenv
movsl
popf
xor
inc
in
rcr
andb
mov
jmp
push
sub
lods
sbb
loope
fcomp
out
iret
push
mov
sbb
lock
mov
mov
lock
cmp
fcmovnbe
add
andb
jle
mov
inc
jno
adc
call
shl
test
enter
push
xchg
push
or
daa
xchg
out
and
xorb
popa
add
cs
xchg
inc
test
cltd
sub
fimuls
xor
sbb
or
imul
hlt
fisubrl
adc
or
jmp
dec
mov
or
inc
test
mov
xor
mov
inc
lock
loopne
cmpsl
jmp
and
dec
dec
cmpsb
push
and
lods
aaa
das
inc
nop
rcll
or
cmpsb
push
push
aaa
repnz
fisubl
das
jge
movsl
mov
xor
cmp
mov
mov
dec
inc
xor
icebp
lea
cmp
push
int3
jge
mov
sub
jmp
mov
test
mov
dec
push
and
movsl
arpl
das
call
enter
add
or
pop
subb
or
lock
movsl
mov
inc
pop
pop
jmp
or
inc
lret
or
mov
push
imulb
jg
jbe
sub
and
pop
std
xchg
or
push
popa
mov
and
popa
xor
xchg
push
out
mov
dec
shrb
andnps
cli
mov
icebp
dec
mov
arpl
push
daa
daa
test
jbe
outsl
std
push
shlb
lret
adc
jge
jno
jbe
stc
rcl
shll
pop
ljmp
jnp
or
push
xchg
inc
shlb
mov
pop
enter
addr16
mov
xor
mov
ficoml
cli
cld
mov
mov
xchg
adc
push
dec
pop
cs
push
out
mov
mov
pop
or
not
inc
lods
pop
daa
push
mov
inc
in
lods
xlat
sti
dec
aaa
cmp
sub
xchg
xchg
loope
push
outsl
insb
or
mov
mov
repnz
or
inc
hlt
adcl
or
and
cltd
inc
shlb
lods
fstps
cmp
pop
mov
lds
inc
divl
test
mov
pop
js
adc
sub
fstpt
xor
call
test
stos
pop
dec
je
mov
arpl
xchg
mov
adc
out
push
pushf
push
cmpsb
in
ficoms
mov
shlb
outsb
into
daa
testl
imul
nop
outsl
popa
in
pop
enter
rcll
xchg
xchg
adc
dec
cltd
lret
shl
icebp
out
test
dec
call
sbb
js
jl
test
jb
mov
push
jnp
xorb
push
and
ss
cmp
push
adc
mulb
ja
or
loop
pop
pop
inc
aam
mov
xor
jns
aam
mov
or
cmp
jge
mov
paddsw
dec
mov
mov
sub
lret
gs
lock
shrb
data16
or
and
sbb
mov
mov
push
dec
scas
and
call
shlb
xchg
mov
stos
mov
cmc
lahf
icebp
sub
jb
and
xor
outsb
jo
ret
movsb
xchg
sti
inc
sbb
pushl
dec
mov
mov
aad
pop
xor
add
and
fildl
mov
int3
jl
or
sbb
filds
fidivrs
adc
push
lods
pusha
fisttpl
mov
adc
lahf
negb
fildll
fdivr
mov
xchg
ds
lods
mov
fdivr
xchg
fwait
mov
imul
jb
nop
test
or
mov
mov
sarl
jge
sub
mov
imul
lods
mov
jae
dec
js
inc
mov
add
rcrb
inc
sub
cmovo
pop
jno
mov
arpl
sbb
aaa
mov
test
aas
inc
mov
cmp
test
inc
sarl
cmc
fs
mov
popa
add
mov
scas
loope
and
mov
sbb
inc
sbb
lahf
out
sub
clc
inc
orl
popf
mov
pop
int
xorl
andl
cmp
jnp
lods
pushf
pop
xchg
add
in
add
pop
sbb
xchg
sbb
adc
push
in
roll
mov
mov
dec
mov
and
loope
inc
xlat
in
outsb
adc
out
fld
rorb
icebp
xlat
jb
dec
pop
add
decb
test
ja
adc
repnz
ljmp
cmc
push
xor
imul
fcmovne
pop
or
and
mov
ret
sbbl
dec
pop
lahf
pop
fstpl
mov
in
bound
push
dec
cmp
sbb
mov
push
adc
arpl
adc
ljmp
mov
dec
sti
data16
or
inc
push
repnz
mov
pop
mov
sub
mov
cmp
lock
mov
sbb
jge
je
lcall
and
mov
inc
shlb
repz
mov
mov
jns
ret
imul
loop
xor
xlat
test
jle
pop
fdiv
jne
fs
and
push
xor
cs
mov
out
sbb
sub
adc
or
and
rcl
loopne
call
outsl
gs
lods
les
sahf
fnstcw
lea
jge
movsl
pop
or
jmp
dec
call
repz
or
push
and
pop
mov
addr16
fistpl
js
popf
mov
dec
inc
repnz
adc
mov
rcll
sub
pop
jbe
ret
xor
jle
in
aaa
pop
mov
arpl
int
fimull
aam
jae
dec
xchg
in
sbb
pop
mov
or
orl
inc
das
xlat
cmpsb
inc
add
dec
adc
cmpb
ss
cmp
inc
and
outsl
aaa
mov
jno
sbb
mov
xchg
sub
addr16
imul
outsl
inc
xchg
ret
addl
sub
cwtl
xor
loope
push
xor
scas
sahf
or
inc
adc
dec
aam
iret
pop
xor
loopne
lret
nop
inc
add
inc
jb
aad
and
or
mov
ret
add
scas
lcall
shrb
popf
test
jg
dec
xchg
jns
nop
stos
shrl
pop
pop
clc
ret
and
mov
inc
test
jmp
scas
mov
inc
add
popf
lret
jns
aaa
mov
popa
inc
xorb
test
xchg
outsb
xchg
cmp
sbb
lock
loope
and
sbb
jge
jmp
std
jg
addl
jecxz
xor
popa
cs
pushf
or
cli
push
jl
add
pop
push
cmc
xlat
cmc
fistps
mov
loopne
adc
lcall
in
and
bound
adc
adc
sub
push
jno
xchg
mov
sub
push
push
inc
push
mov
jae
das
mov
inc
js
sbb
lods
outsl
mov
ja
pop
add
xor
lea
mov
lea
push
and
push
dec
jp
mov
and
sbb
jmp
lea
je
ja
fildll
loop
decl
mov
dec
jno
dec
incl
outsl
mov
cli
lods
fistps
sub
das
xor
push
adc
js
shll
in
arpl
idivb
mov
loopne
out
mov
shl
outsl
mov
mov
push
sbb
sub
push
ljmp
xchg
or
stc
xor
mov
push
in
inc
push
and
add
mov
dec
sub
je
insl
add
push
sarb
push
leave
inc
and
mov
mov
and
rcl
pusha
movsb
or
xchg
dec
shlb
fadd
out
and
es
xchg
sti
mov
cmp
inc
sub
jl
jg
addl
or
xor
pop
jmp
in
and
and
xchg
xor
into
add
jno
and
jmp
mov
jecxz
shl
cmpsl
or
rorl
mov
inc
lods
imul
jecxz
xor
decb
aaa
mul
out
xchg
ret
and
int
add
pop
js
lret
hlt
xor
cmp
fildl
fs
ljmp
cmc
subb
push
jbe
fsubl
push
movsb
movsb
dec
mov
stos
stos
cmp
jbe
or
repz
ss
mov
ja
or
mov
jns
shrb
pop
insl
sti
or
pop
pop
sahf
rclb
fs
imul
add
add
or
inc
push
pop
ds
xor
pop
outsb
mov
adc
jle
mov
jno
inc
hlt
call
mov
cli
ljmp
cmpsb
jecxz
xor
jb
and
inc
pusha
enter
pop
sub
dec
fisttps
in
imulb
mov
and
mov
mov
mov
pop
rcll
into
cmp
outsb
outsl
arpl
dec
cmpsb
add
inc
aad
fsubs
icebp
sbb
sub
sub
call
dec
add
loopne
mov
call
outsl
inc
or
sub
ja
shr
rcrb
das
jo
push
in
pusha
movsb
iret
insb
lds
mov
fadds
push
jmp
xchg
and
out
jp
cmpsl
mov
shrb
fstl
pop
cmpl
ss
sbb
push
adc
jmp
mov
sub
cmp
lcall
out
jo
adc
xchg
popa
stos
sub
pushl
fists
jge
mov
call
push
push
jnp
ret
adc
cmp
mov
and
sub
in
xchg
sbb
or
xor
or
and
xchg
mov
adc
pop
xor
xor
scas
or
leave
dec
inc
hlt
dec
jnp
sbb
insl
lret
aas
sar
cli
imul
cmp
mov
jns
sbb
and
test
sti
push
mov
sti
mov
into
out
mov
inc
in
dec
subb
addr16
pop
lods
fwait
andb
ljmp
cltd
mov
pop
outsb
test
mov
fdivl
pop
rcrl
out
divb
pop
xchg
lahf
bound
ds
push
std
fbld
repz
sbb
imul
sti
mov
inc
cmpsl
mov
mov
repz
rolb
pop
in
add
ret
xor
pop
das
cmp
mov
and
gs
subb
movsl
xchg
and
leave
mov
popl
xor
jecxz
out
xor
or
cmp
mov
call
scas
and
jmp
test
aaa
loopne
outsl
in
push
ret
mov
xchg
mov
test
cld
ja
bound
sub
push
pushf
add
mov
mov
aas
sub
in
sub
pop
inc
aas
roll
incl
lds
adc
test
dec
push
rcrb
sub
decl
test
cmp
pushf
in
sbb
jmp
nop
cmc
push
adc
addr16
dec
ds
ds
paddsb
jge
mov
out
push
dec
mov
in
aaa
fdivs
lret
mov
pop
fistl
inc
push
push
les
sbb
popf
pop
pop
mov
jmp
shlb
cmp
leave
mov
aaa
call
bound
and
adc
stos
push
fneni(8087
sub
cmp
cs
mov
int
in
add
xchg
popf
inc
or
lock
icebp
cmp
and
rolb
call
add
mov
repnz
jmp
and
mov
xchg
mov
fldcw
rcrl
dec
push
jbe
pusha
cmp
clc
jns
pushf
loopne
add
and
fdivp
mov
in
repz
inc
inc
push
incl
clc
xchg
push
mov
xchg
imul
dec
mov
dec
cwtl
jecxz
mov
mov
and
and
lcall
ss
cmpxchg
add
pushf
repz
sbb
mov
or
sub
aaa
addb
or
fisttps
bound
movsb
jo
call
add
sbb
xor
mov
push
decb
loop
loopne
sbb
or
mov
insl
pop
hlt
scas
loopne
lods
das
sub
mov
lahf
fiadds
mov
lods
sbb
jb
shll
mov
into
dec
adc
out
mov
call
push
sbb
xor
neg
lcall
test
insb
dec
dec
jb
repnz
xchg
mov
std
jg
fistps
ljmp
jmp
fsubrs
ret
add
loopne
test
pusha
add
push
and
push
xchg
and
leave
xchg
dec
mov
adc
out
push
mov
xchg
or
stc
mov
repnz
lods
lret
dec
and
jmp
mov
dec
mov
adc
xor
aam
test
icebp
aaa
cmc
out
and
xorl
jle
sub
adc
jp
mov
clc
scas
xchg
movsl
pop
clc
out
lea
call
pop
cli
cmp
or
inc
cmpsb
insb
in
pop
test
cld
dec
pop
cmpsl
pusha
xor
jg
pop
and
cli
in
dec
jne
xor
inc
mov
test
dec
ror
ljmp
fs
and
xchg
js
cs
push
jmp
mov
adc
mov
jb
incb
fdiv
pop
mov
sahf
loop
xchg
adc
sbb
dec
ljmp
insl
push
mov
out
data16
inc
test
rorl
clc
popf
in
xchg
mov
cmpb
or
mov
ljmp
xchg
test
xor
and
pop
jmp
cmpl
in
lret
jmpw
int
out
or
fdivrp
pushl
hlt
test
xor
mov
pop
jl
jno
sub
or
popa
or
pop
js
dec
stos
cmpsb
dec
add
push
and
loopne
sub
outsl
adc
mov
pop
in
mov
hlt
xchg
or
mov
popa
pop
push
test
filds
inc
in
pop
xorl
sub
rcll
int
pop
clc
cmp
mov
push
decl
xchg
hlt
push
test
add
stos
fs
ljmp
adcb
push
sub
and
shlb
in
lea
pop
pop
rcll
fwait
js
mov
jnp
cltd
popf
lea
push
mov
adc
lock
jle
leave
cmpsl
insl
fdivr
movb
xchg
or
aaa
sti
cmp
mov
loop
outsb
xor
or
push
cltd
pop
pop
adc
adc
outsb
aaa
or
jl
dec
pop
vmaxpd
push
xchg
add
cmp
pop
cltd
fisubrs
mov
or
pop
jae
add
push
mov
or
out
jl
adc
cs
push
mov
inc
nop
adc
test
aad
into
pop
xchg
testb
movd
inc
in
sub
loope
lods
jbe
fadd
or
pusha
push
pushl
xchg
mov
js
inc
addl
aad
ja
xor
pop
repnz
sub
in
and
add
dec
dec
adc
cmp
fdivrl
sub
pop
test
call
popa
dec
mov
pop
shl
jo
add
pop
xchg
mov
into
out
in
mov
mov
xchg
fmull
mov
insb
adc
loopne
leave
outsl
push
add
xor
hlt
je
cmp
xchg
fsubrp
js
call
dec
mov
fcmovne
sbb
arpl
fucomip
cmp
idivl
or
mov
ret
push
add
cli
fisubrl
ds
out
mov
push
mov
je
and
pop
mov
jno
pushf
add
sahf
decl
aaa
jge
pop
push
cs
in
push
aam
clc
or
push
lea
pop
xorl
mov
lcall
jp
mov
lods
mov
stos
loope
sub
mov
mov
add
sbb
loope
dec
outsb
out
out
mov
jmp
repnz
push
out
push
mov
sub
in
add
pop
mov
dec
dec
inc
mov
adc
mov
les
test
hlt
int
lahf
das
sub
adc
test
mov
sbb
in
aas
and
push
das
mov
push
les
or
out
dec
ds
mov
lock
jl
sub
and
pop
mov
or
in
lods
aad
hlt
adc
xlat
fs
sti
sbb
imul
subl
bound
push
in
and
in
push
mov
cli
inc
pop
push
push
mov
out
clc
jmp
push
outsb
sub
fs
std
xor
xchg
or
jge
mov
jne
pop
xor
fnstsw
fcomip
sbb
mov
ret
push
dec
pop
cmp
shll
scas
add
and
popa
popf
xchg
rorb
mov
push
mov
das
mov
pop
or
push
test
lcall
and
call
adc
clc
push
sub
adc
pop
fsubrs
repnz
jmp
stc
push
pop
vpaddb
scas
sbb
jecxz
xor
mov
insb
loope
js
js
mov
les
ss
je
cmp
clc
cmpsl
cs
scas
mov
mov
or
mov
pop
fdivr
sbb
pop
jns
mov
jle
pop
ljmp
test
popa
push
inc
mov
cmp
sarl
movsb
inc
ss
lret
out
jb
loop
dec
fiadds
mov
jbe
adc
sbb
lods
iret
adc
jno
fists
js
jmp
xchg
adc
push
pop
jle
mov
fnstcw
cmp
imul
fidivrs
sbb
inc
in
jp
mov
pop
pusha
insb
mov
clc
xor
jbe
sbb
push
movsb
mov
mov
outsl
mov
and
sub
scas
adc
insl
int3
mov
aas
lds
outsl
test
mov
mov
das
sub
and
fildll
fnstsw
lret
outsb
shlb
adcl
mov
inc
mov
ds
lock
mov
and
and
mov
lods
inc
or
sub
cmp
into
or
lahf
cmpb
ja
adc
cmpsb
lcall
stc
in
fstpl
sti
sbb
lods
push
mov
aam
or
pop
test
outsl
mov
mov
jp
aam
lock
fstp
mov
and
pop
push
les
jg
aam
in
addr16
rolb
shr
sub
das
push
negb
inc
pop
xchg
ret
movb
lret
xlat
mov
sti
lods
mov
dec
pusha
fisubrl
push
cli
pop
mov
pop
js
xor
jge
out
jbe
add
add
mov
adcl
lock
push
mov
xchg
in
outsb
arpl
fstpl
sti
add
push
adc
or
sarb
mov
xor
xchg
mov
xchg
fdecstp
scas
enter
xor
sub
and
sbb
stos
test
dec
lods
je
pop
xchg
push
pop
cltd
popf
sub
lea
mov
lahf
rcrl
repz
cmp
sbb
xorb
xchg
jl
out
inc
mov
mov
arpl
leave
sbb
add
lods
mul
sub
inc
jmp
mov
mov
xor
pusha
pop
push
jge
xchg
cmpsb
test
jmp
clc
shll
inc
cmpsb
adc
jl
hlt
in
int
or
or
push
cli
decl
inc
ljmp
scas
sub
or
mov
lahf
ljmp
bnd
mov
lods
mov
inc
movsl
mov
aad
loope
dec
negb
inc
sbb
mov
or
sarl
jo
fwait
aas
fsubl
inc
das
imul
mov
enter
cli
mov
cmp
fidivrl
adc
test
or
test
outsl
cld
sarb
mov
mov
mov
pop
add
mov
ljmp
loop
cs
roll
mov
push
iret
push
stos
jg
rol
xor
push
push
mov
dec
nop
xor
xchg
icebp
idiv
ja
inc
clc
or
adc
inc
repnz
xchg
xor
xchg
push
sub
lret
adc
mov
inc
outsl
addr16
scas
rcll
push
mov
ficoms
lret
imul
testb
cmp
cld
inc
mov
lret
test
stos
outsl
lock
mov
xor
leave
cmp
jns
mov
cmpsl
lret
mov
xorl
sbb
sbb
fcomi
mov
xchg
imul
cmpsl
cmp
inc
jns
xchg
das
sub
mov
mov
gs
pop
js
ret
rcrb
les
jns
add
lds
dec
jbe
out
jmp
das
mov
inc
xor
xor
imul
call
xchg
hlt
cli
mov
or
pop
fnstcw
cmp
or
ljmp
rcr
inc
popl
xor
add
mov
mov
adc
lock
pusha
pop
int
js
cltd
add
jle
loopne
arpl
push
jl
imul
fildll
cmp
mov
ss
cmc
mov
in
test
out
mov
inc
push
cmpsl
fcmovu
lea
andl
call
mov
cmp
fsubl
ror
push
cmp
dec
jecxz
imull
pushl
jne
fadd
mov
mov
mov
inc
test
out
xor
adc
shrb
movsb
stos
mov
xchg
call
or
out
das
fstpt
std
cmp
aam
fdiv
ret
or
push
enter
xor
std
add
xor
mov
insl
pop
inc
mov
cmpb
cwtl
jo
ljmp
mov
lods
call
jb
add
or
shll
inc
push
inc
mov
jne
lds
adc
add
cwtl
divl
pop
loop
add
movsb
in
cltd
sbb
sub
add
stos
imul
sub
addb
mov
jns
mov
lea
jb
aaa
jmp
and
push
xor
shll
test
daa
or
movsl
clc
scas
dec
dec
or
mov
sub
test
lea
cwtl
dec
or
adc
scas
insl
add
js
pusha
ss
fnsave
lea
dec
or
mov
push
mov
outsl
dec
mov
or
sti
mov
loopne
mov
xor
jae
mov
jge
popf
jo
es
mov
xchg
in
push
decl
adc
jmp
ljmp
addb
xor
les
mov
jbe
dec
add
cmp
mov
insb
xchg
push
pop
pop
fadds
ja
mov
pop
scas
ret
adc
jge
add
outsl
xchg
mov
pop
les
incb
lock
inc
add
es
push
inc
sbb
lea
in
push
mov
mov
xor
mov
repnz
dec
daa
sub
jne
loopne
add
nop
rorb
push
andl
or
fdivrl
mov
lcall
add
outsl
in
out
out
movsl
inc
cmp
negb
adc
sbbl
leave
dec
and
fistpl
in
sbb
movsb
jns
dec
and
add
aaa
jno
mov
push
mov
mov
pop
sbbb
mov
mov
push
and
bound
or
out
adc
or
inc
les
leave
cmc
push
pusha
aaa
dec
mov
cld
in
icebp
push
shlb
fcompl
cli
add
ret
jmp
dec
aaa
inc
stc
ds
inc
in
push
jbe
adc
or
xor
jmp
stos
shl
ret
add
int
mov
mov
or
ja
movsl
lds
cwtl
and
dec
and
paddusb
xor
adc
jno
inc
sarb
jle
xor
incb
sub
movb
mov
jnp
or
push
lds
inc
test
ret
or
mov
adc
std
rorl
mov
or
push
out
pop
mov
fildl
hlt
sub
outsb
sub
push
push
add
faddl
and
je
inc
sub
dec
test
lods
mov
dec
jg
dec
mov
aaa
cwtl
push
inc
add
orl
ja
andl
sbb
cwtl
call
or
add
mov
lock
insb
sub
fsubrl
and
sub
pop
js
pushl
in
idivb
orb
lods
fisubs
sub
out
dec
xor
dec
cld
rcrb
mov
int3
sti
adc
jg
push
cmpl
sbb
push
lock
dec
adc
xor
ret
iret
repz
pop
cld
cmpsb
mov
jmp
and
dec
dec
cmpsb
cmp
outsb
outsb
mov
test
push
adc
test
repnz
sbb
mov
loopne
mov
fisubrl
jo
fists
mov
addb
data16
sub
outsl
cltd
int3
fcom
xor
icebp
outsl
mov
pop
repz
sbbb
xchg
call
inc
xchg
rolb
lahf
cwtl
inc
lds
adc
sar
lds
xchg
or
call
pop
aas
popf
ftst
lock
je
loope
leave
jge
pop
adc
xchg
jl
mov
inc
dec
mov
push
jle
pop
std
or
jg
xchg
dec
or
sub
mov
mov
cmp
insl
jno
lahf
and
dec
add
xchg
mov
jb
nop
cmp
inc
les
movsb
push
push
enter
add
scas
stos
nop
jle
das
adc
xchg
push
repz
in
jecxz
xor
sub
dec
mov
or
loop
sub
lcall
pusha
jmp
xchg
outsb
push
sbb
dec
aas
add
aam
mov
xorb
jp
or
es
sbb
stc
push
in
mov
mov
loop
mov
add
ficoml
mov
push
loopne
je
mov
pushf
lcall
inc
xor
adc
cmp
or
jle
das
pop
or
std
fwait
js
adc
stos
xor
lea
repnz
jp
and
bound
outsl
cwtl
ja
cmp
negl
bound
xor
pop
pop
fadds
addr16
xor
push
clc
pop
cli
pop
hlt
shl
call
push
ds
jp
jae
mov
fildl
sub
push
add
mov
jecxz
sub
jb
sub
sub
push
sub
push
mov
outsl
orb
adc
pusha
ds
loopne
pop
cld
dec
fmuls
andb
cld
outsl
pop
pop
pushf
or
gs
leave
cld
push
lret
push
popa
inc
pop
leave
mov
mov
mov
jge
mov
jmp
xor
sti
movb
push
mov
mov
outsl
dec
lods
jnp
mov
rcrb
sbb
or
lahf
lea
cmp
adc
jg
sbb
add
push
push
or
hlt
or
dec
inc
xor
aaa
jo
ss
jb
and
ja
scas
inc
cmp
xchg
mov
adc
mov
scas
outsb
jp
jl
inc
cmc
lcall
cmp
clc
dec
jle
dec
ret
icebp
nop
ficompl
clc
adc
sti
mov
adc
in
fs
mov
jmp
mov
int
and
ljmp
jmp
dec
cmpsb
xchg
mov
cld
dec
dec
jg
gs
je
loope
sub
cmovb
push
lcall
and
mov
push
loopne
mov
call
hlt
mov
mov
pop
or
jp
or
add
loop
and
rolb
cvtpi2ps
lock
pop
sbb
movsb
adc
out
incb
ret
push
and
mov
dec
aad
shlb
hlt
or
aam
pop
dec
inc
les
lock
sahf
sub
add
ljmp
stc
sub
std
subl
xor
ss
mov
in
sub
pop
lods
adc
mov
icebp
enter
nop
inc
dec
fidivrl
mov
pop
mov
clc
cmpsb
hlt
scas
popa
cmpsb
mov
pop
mov
xchg
out
mov
das
loop
je
in
jae
incl
in
sbb
mov
dec
lods
mov
mov
cwtl
les
lods
aam
in
fcmovnu
inc
add
fcoml
fwait
mov
xchg
shll
fwait
mov
cmpsl
inc
in
xlat
jge
sbb
ss
mov
dec
rcl
or
pop
mov
enter
dec
pusha
jb
or
iret
add
jle
push
cld
inc
dec
out
outsl
mov
sub
shlb
and
sbb
or
push
mov
movsb
das
add
dec
dec
mov
enter
adc
add
leave
out
pop
mov
pop
inc
pop
inc
dec
jge
mov
dec
adc
fcoml
xor
xor
lea
lods
loope
adc
imul
outsb
ljmp
adc
cmc
xchg
xlat
popa
inc
or
cli
idivb
sbb
sub
loop
cmp
cmp
cmp
dec
ljmp
add
jecxz
aad
loop
pop
in
pop
push
mov
das
fcompl
insb
mov
cltd
leave
xor
iret
daa
xor
jg
loop
xor
sarl
incb
sbbb
cli
das
fsubrl
adc
mov
adc
imul
fbstp
pop
lock
mov
dec
push
push
pushf
out
add
sbb
lahf
lcall
call
fsub
adc
cmp
sbb
ljmp
jl
jns
push
dec
mov
scas
xchg
mov
pop
pop
jb
lcall
fstpl
fwait
xchg
je
push
cmp
xor
add
mov
jmp
test
outsb
jne
mov
mov
aad
mov
and
rol
jne,pn
mov
sbb
dec
mov
xchg
sbb
movsl
lcall
scas
repz
js
lds
lcall
cmc
out
or
mov
orl
mov
mov
nop
fmul
jnp
jb
outsl
and
cld
mov
sub
and
test
add
adc
ret
mov
jo
fbld
and
mov
or
cmc
xor
stos
and
shl
dec
pushf
das
cmc
call
std
xchg
cmp
inc
push
pop
pop
pop
mov
mov
xor
inc
hlt
mov
pop
outsl
cli
decl
mov
hlt
push
xor
add
ds
outsl
cmc
dec
fbld
push
lds
jl
and
loope
sub
ret
inc
shl
cmpb
std
mov
jo
aam
mov
mov
xor
or
js
rorl
into
lods
sub
mov
mov
das
test
mov
in
mov
lret
int
and
pop
cmpsl
push
pop
imul
jae
add
mov
shl
dec
aas
xorb
add
add
sbb
sbb
add
cmp
mov
dec
xchg
out
aaa
jne
pop
push
push
inc
and
test
jns
dec
and
in
je
shlb
ret
cltd
xchg
pop
subl
popa
cmp
fsubrp
mov
arpl
mov
or
mov
outsl
inc
call
mov
es
cmp
inc
aad
sti
jb
lds
inc
fists
push
mov
clc
sbb
pop
les
divl
cmpsb
jno
add
adc
push
push
das
inc
fsubrl
icebp
add
loopne
or
xchg
add
stos
xchg
xor
lods
mov
std
in
add
decb
inc
in
int3
out
inc
adc
pop
punpcklbw
cmp
fcoml
or
jae
lahf
inc
xchg
sub
mov
xchg
sub
mov
leave
negl
and
add
mov
xor
mov
lods
mov
mov
pop
daa
hlt
inc
incl
je,pn
dec
inc
adc
push
mov
mov
jp
imul
out
sub
dec
mov
in
lahf
inc
mov
aas
mov
inc
mov
fldt
adc
test
or
stos
cld
mov
pop
je
pusha
fwait
pusha
xor
inc
fstpl
adc
call
push
or
push
jmp
cmc
xchg
ret
in
push
pop
cmpb
mov
xchg
shlb
or
rcl
clc
add
cmp
jne
adc
fadd
inc
xchg
mov
scas
and
add
mov
mov
dec
jg
mov
test
aaa
dec
add
xchg
jg
cmp
in
movsl
loopne
add
mov
mov
aas
mov
mov
lcall
testb
pop
mov
into
ljmp
mov
xorl
cld
mov
test
mov
sbb
loop
xchg
addl
dec
icebp
das
inc
aaa
add
std
cmp
mov
mov
jmp
orb
dec
fildl
lock
inc
pop
ffree
andb
and
in
pop
mov
imul
adc
mov
push
loop
call
call
jne
sub
push
insl
outsb
int3
push
subb
stos
bound
addr16
pop
inc
cmp
sbb
sbbb
xor
mov
xchg
std
push
data16
fisubrl
mov
addb
or
call
popl
push
sub
jb
mov
inc
enter
xchg
enter
aaa
xchg
ljmp
iret
jmp
decl
rorb
je
mov
imul
mov
ret
js
outsl
loop
and
test
rorl
xor
jmp
and
shl
mov
subl
loope
inc
lahf
mov
ss
pop
roll
push
mov
adc
cmp
mov
lret
mov
iret
add
and
fstpl
lods
or
mov
dec
mov
and
cmc
das
sbb
lret
push
fisttps
push
push
addl
xor
xorl
pop
mov
sbb
int
jp
inc
lahf
mov
aas
pop
lds
imul
dec
ret
mov
daa
inc
data16
test
mov
xchg
or
mov
stc
or
mov
push
cwtl
and
call
roll
jle
movsb
enter
call
pop
push
loop
pushf
insb
xchg
jno
pop
gs
push
fcomp
cmp
fdivl
jg
and
sub
mov
mov
stos
mov
mov
clc
xchg
neg
adc
xchg
add
test
push
lcall
ljmp
dec
xchg
adc
ret
push
dec
push
or
dec
pushf
mov
das
pushf
sbb
mov
and
lods
mov
xor
lods
push
sbb
loope
mov
xchg
xchg
xchg
pop
in
stos
mov
inc
jl,pt
cmpsb
add
outsl
push
pop
es
sbb
pop
add
mov
xchg
addl
cmp
stos
dec
add
lcall
ljmp
je
cmc
pushf
ds
lcall
jp
js
push
mov
nop
jecxz
add
pusha
shl
in
jg
add
aaa
lock
test
lcall
clc
sbb
pavgb
push
sub
lods
jg
dec
cli
push
sbb
mov
cli
bswap
aaa
scas
iret
in
push
popf
dec
adc
or
pushl
loop
mov
jo
addl
pop
hlt
xchg
inc
shlb
in
cmp
mov
xchg
cmpsl
wbinvd
jmp
sub
xchg
adc
mov
jo
ljmp
loope
fdivs
push
shld
jne
cld
fsubl
dec
fiaddl
and
xor
jns
add
lret
ljmp
movsb
mov
dec
mov
push
in
adc
out
inc
ficompl
cmc
into
mov
sbb
flds
xor
mov
aas
and
mov
push
push
dec
das
rclb
mov
adc
xchg
orb
and
jl
inc
pushf
lcall
dec
cmp
xchg
xor
insb
mov
loop
pop
je
xor
loopne
cmpsl
lcall
or
or
das
push
xlat
jle
push
cmp
fsts
mov
push
imul
daa
mov
outsb
cmp
jno
ret
test
sbb
lahf
mov
push
push
mov
lods
aas
inc
add
mov
cmp
lcall
cli
dec
and
xchg
loopne
sbb
sbb
sti
or
adc
addr16
sub
xchg
jnp
test
and
insl
push
and
bound
pop
sbb
dec
hlt
adc
push
dec
loop
jnp
jno
mov
cmp
cmp
inc
adcl
jns
xlat
shrb
incl
or
mov
out
add
push
add
and
push
xorb
jle
ljmp
shll
push
orb
cs
adc
push
adc
cld
test
push
pusha
dec
jb
stos
inc
jo
ljmp
dec
mov
stos
inc
repnz
sub
lret
push
and
pop
jp
sub
sahf
adc
mov
or
call
sbb
jl
mov
or
jl
push
cwtl
fstpt
xchg
es
pop
rol
lods
stc
push
mov
cld
rcrl
ret
stos
in
xor
out
pop
sbb
les
dec
xorb
xor
dec
xor
cmpsb
mov
xorb
pop
repnz
push
loop
outsl
aaa
push
clc
push
pop
push
sbb
cld
cli
outsl
jo
jnp
push
adc
inc
inc
sub
loopne
push
cld
cwtl
pop
ret
xor
pop
pop
stc
ret
xor
daa
cmp
xchg
scas
jns
mov
mov
pop
or
adc
hlt
or
push
adc
fstl
pop
adc
add
sub
sbb
jnp
add
lods
inc
mov
adc
in
sub
inc
and
subl
fildll
add
jns
hlt
divl
mov
aad
fsubrp
test
push
movb
or
push
sub
popa
xlat
or
stos
dec
ret
aas
in
inc
and
and
in
sbb
cmc
xchg
daa
xchg
cmp
in
jnp
imul
jl
push
jg
das
or
pop
add
fmul
repnz
int3
mov
xor
call
sarl
push
sarb
arpl
mov
and
dec
pop
and
sbb
std
or
mov
and
sbb
sbb
xchg
xchg
mov
enter
loop
jg
dec
pop
data16
cmp
lea
mov
pop
or
in
ja
outsl
mov
pop
push
in
cs
pop
adc
xchg
cltd
sub
imul
bound
imul
mov
ja
push
xlat
pop
or
sti
lock
out
cli
js
cmove
loopne
and
js
mov
mov
inc
push
mov
inc
cmp
or
pop
and
mov
adc
adc
in
test
add
js
and
cmp
sub
pop
movsb
or
loopne
lret
imul
std
mov
leave
xchg
jle
jg
movsl
and
dec
cmp
sub
mov
cmp
std
push
adc
fcmovu
call
pop
mov
mov
ds
jbe
out
lret
sbb
shrb
sbb
lds
add
orb
pop
stc
push
add
fdivrs
add
movb
sub
push
push
push
ljmp
and
xchg
out
sbb
or
subb
insl
stos
pop
addr16
or
fists
ss
adc
scas
push
or
xor
and
adc
faddl
int
or
mov
push
rorb
and
popa
push
outsl
fdivrp
dec
mov
outsl
fs
jnp
jae
mov
mov
scas
cmpsl
outsl
subb
xchg
inc
or
mov
adc
push
dec
sbb
rcl
call
testl
mov
decl
push
ror
les
and
ds
push
and
movsb
call
cs
incl
jecxz
jb
pop
popa
insb
ja
sbb
pop
mov
mov
std
out
or
dec
jp
pushf
dec
mov
lock
adc
dec
and
mov
rcr
movsl
cltd
push
mov
lds
xor
les
lret
or
insb
das
hlt
call
lds
jecxz
pop
popa
pop
push
adc
dec
cs
call
insl
jno
push
daa
out
or
stos
ret
icebp
inc
icebp
aam
mov
sbb
dec
shr
dec
loope
pop
js
notl
fsubrl
clc
lahf
cmp
adc
mov
lcall
hlt
pusha
insb
aaa
sub
pop
jg
out
jmp
insb
ljmp
xchg
dec
sub
andb
std
jg
pop
test
int3
lea
insb
cmp
push
xchg
xor
add
lahf
mov
dec
lods
xchg
xchg
mov
inc
push
in
xchg
dec
xchg
xchg
jmp
divps
push
mov
jne
call
js
stos
xchg
divl
dec
lods
mov
and
jge
int
adc
pop
loop,pn
mov
and
into
push
popa
call
out
movsb
inc
rcrl
mov
lock
mov
addl
cmpsb
std
inc
adc
sub
rolb
xchg
lds
mov
sub
xchg
js
mov
fwait
pop
mov
rolb
in
cmp
add
push
inc
push
jb
loop
in
test
lds
sbb
outsl
inc
sbb
and
loope
in
and
add
and
scas
outsb
lds
inc
addr16
movsl
mov
dec
scas
or
push
outsl
dec
vmread
push
mov
inc
pushl
mov
stc
pop
dec
add
xor
addr16
sub
mov
pop
sub
xor
lret
sti
in
and
outsb
int
inc
jnp
icebp
push
lock
int
in
les
lcall
cmp
or
sbb
mov
lcall
sbb
mov
inc
gs
clc
and
or
mov
fistpll
sbb
push
sub
cld
mov
ljmp
mov
inc
pop
push
dec
pusha
js
int3
lcall
mov
sub
mov
fadds
sub
jbe
je
sarb
lock
jmp
pusha
jb
das
push
push
or
stos
cmp
daa
sbb
dec
push
clc
mov
pushl
mov
sbb
fs
and
stc
loope
or
fisttps
inc
push
inc
orl
adc
ficoms
dec
adc
mov
dec
jmp
ret
mov
adcb
loope
jmp
das
std
add
add
inc
mov
jno
jns
loopne
adc
inc
or
push
mov
ret
xor
inc
cwtl
enter
int
sub
mov
cmp
enter
stc
mov
js
pop
mov
ja
and
sbb
fidivrs
andb
iret
cs
mov
jmp
aaa
mov
add
lock
rcr
and
or
movsl
lcall
or
sahf
sbb
sbb
stos
ret
call
add
lds
push
mov
dec
sub
xor
mov
mov
into
sbb
adc
pop
xchg
jg
aam
jge
hlt
jp
inc
jae
cltd
xor
das
dec
daa
xchg
mov
iret
dec
push
mov
push
sub
inc
les
mov
into
dec
xchg
mov
ret
incl
int3
and
test
dec
daa
inc
adc
movsb
std
mov
pop
push
xchg
clc
lahf
sub
cmc
mov
and
or
inc
push
dec
leave
lahf
hlt
std
movsl
push
push
xchg
loopne
or
sti
xorl
shrl
dec
or
lea
scas
adc
scas
dec
inc
in
aas
push
movb
fbstp
push
sub
push
or
and
outsl
cbtw
pusha
mov
std
or
xchg
or
fs
cmc
fistps
outsb
push
loopne
cmp
cmp
push
pop
sub
movsb
dec
imul
sub
push
test
mov
mov
shlb
add
xorb
ret
je
inc
cmp
jnp
bound
xor
push
repnz
fstps
mov
inc
cmp
jecxz
pop
add
xlat
mov
imul
mov
sti
jmp
fisttpll
es
lea
sti
inc
fwait
jg
sbb
in
dec
dec
inc
lock
xchg
inc
outsb
or
sarl
mov
icebp
sub
inc
pop
xchg
mov
or
push
shrb
lret
cmp
add
roll
push
cmc
or
pop
push
sub
inc
outsb
jle
cltd
pop
andl
dec
jo
sub
mov
js
or
add
lret
call
jge
fnstsw
lods
xchg
stos
or
sar
aas
out
add
scas
push
adc
mov
xchg
lds
inc
outsl
jl
in
les
js
mov
jmp
shll
add
or
lods
sbb
cmp
mov
gs
xor
cmp
dec
sub
mov
iret
add
cli
inc
dec
adc
or
jg
jne
aad
sbb
add
push
and
aas
subl
push
incb
lret
popa
pop
test
xchg
inc
and
add
add
icebp
data16
je
or
pusha
mov
or
sahf
or
rol
lret
mov
les
icebp
in
lods
lea
mov
add
fs
mov
hlt
hlt
mov
rcrl
bound
and
mov
je
pop
dec
and
pcmpgtw
inc
add
sbb
add
pushf
mov
fiadds
pop
addr16
int3
or
mov
add
in
jae
loop
incl
iret
jmp
jge
push
adc
sbb
and
shr
xchg
fisttpll
dec
xchg
scas
pushf
sbb
add
out
mov
cld
add
int
into
adc
xor
mov
shl
push
mov
nop
xchg
nop
and
push
mov
cmp
push
sbb
dec
incl
je
bound
mov
mov
sub
out
cmp
push
inc
insb
mov
adc
and
fildll
inc
movsb
pushf
cld
jl
mov
mov
rcrl
fwait
in
pop
out
mov
mov
adc
jp
fisubrl
sub
sbb
pop
inc
mov
xchg
inc
rcrb
mov
arpl
cmp
cmp
push
in
mov
mov
iret
pop
pop
ss
outsl
mov
iret
mov
ds
or
call
lea
xlat
decl
mov
mov
arpl
loope
mov
push
jge
sbb
lods
loopne
fimuls
add
cwtl
mov
inc
push
sbb
mov
jle
push
std
fwait
in
xabort
bound
xchg
ficomps
leave
jmp
mov
add
jg
inc
jl
and
or
inc
icebp
fisttpl
out
out
shr
mov
aad
test
mov
mov
xchg
cld
inc
movsl
in
mov
sub
add
std
mov
xchg
testb
cmp
rcrb
fisttpll
inc
std
fildl
pusha
add
fs
fstpt
dec
ss
sbb
mov
cld
and
mov
mov
scas
mov
jno
push
adc
dec
movsl
fldt
pop
cmp
dec
in
test
mov
rorb
pusha
mov
out
jp
pop
lods
cs
repz
dec
clc
loopne
adc
loopne
push
cmpsb
sbb
fadds
pop
cmc
test
sub
fidivrs
jg
push
xchg
mov
popa
rcll
inc
pop
clc
mov
inc
or
push
pop
gs
aam
push
xchg
pop
inc
lahf
rorl
jg
and
out
sub
call
dec
inc
sub
xchg
ljmp
jge
icebp
pop
ficompl
cmp
arpl
loop
inc
add
sbb
jae
fadds
lock
stos
adc
das
mov
inc
lds
mov
lods
into
aam
push
jmp
dec
out
adc
imul
icebp
cmp
das
nop
sbb
cmp
cmc
push
insb
call
inc
mov
dec
adc
push
jecxz
iret
call
sbb
dec
out
fs
ljmp
xchg
out
out
loope
ds
cmp
cmpsb
push
js
cs
or
jae
ljmp
lret
stc
pop
cmp
cwtl
fnstenv
cli
fistps
mov
fwait
movsb
pusha
cmp
test
cmpsb
adc
jo
test
xor
repnz
add
dec
mov
ret
addb
xor
cmp
xchg
stos
pushl
pop
inc
sahf
push
scas
xchg
imul
cmp
hlt
mov
cmp
out
lea
xchg
inc
andb
int
mov
test
pop
popa
mov
arpl
fistpll
hlt
mov
sbb
pop
mov
imul
sahf
sub
ret
jecxz
pop
mov
ret
pop
inc
in
cmpsl
stos
cmpsb
data16
adc
sbb
mov
insb
movsl
pop
adc
push
adc
ljmp
adc
jbe
mov
stos
jae
loope
lcall
call
mov
incl
ljmp
mov
rorl
jg
clc
aaa
outsl
leave
sbb
sbb
cld
ffreep
jge
lahf
inc
push
and
cwtl
inc
sbb
sbb
add
push
dec
jge
pop
xchg
insl
xlat
or
xchg
clc
fnsave
mov
out
test
nop
jl
jne
mov
fisttps
adc
mov
loope
pop
loop
or
ret
clc
movhps
mov
in
cmp
jg
sarl
outsb
nop
call
js
or
jb
ret
fnstsw
rol
sub
jmp
shlb
xchg
jno
jg
cmpl
test
loopne
xchg
arpl
jp
pop
int3
or
pop
ret
jbe
push
mov
js
mov
test
sbb
push
or
hlt
fisubrl
dec
jb
pop
pop
or
jl
fwait
jb
cmp
repz
xchg
sbb
pop
int
lods
ficomps
iret
addr16
xorb
xorb
dec
xor
in
aaa
decb
roll
popa
sahf
inc
mov
or
mov
push
sub
mov
test
fs
insb
lcall
std
sub
add
js
fdivs
adc
mov
nop
xor
mov
pop
inc
test
lcall
push
cmpsl
cmpsl
and
fmul
xchg
mov
aas
daa
sbb
xchg
adc
or
std
clc
mov
cli
mov
or
mov
mov
loopne
mov
cmp
movsl
mov
jg
pop
scas
mov
sub
lds
fnstenv
adc
xchg
imul
popa
jnp
mov
lock
sbb
pop
pop
sbb
sbb
mov
xchg
inc
sbb
sub
mov
jp
inc
clc
std
decl
rorb
mov
es
leave
loopne
mov
jb
push
jl
rorb
mov
stos
lds
jl
iret
mov
stc
inc
cld
push
mov
jmp
cli
nop
jb
jle
outsl
cmp
xchg
scas
sub
mov
in
inc
out
mov
stc
call
mov
mov
mov
cld
pusha
lret
sahf
gs
add
adc
add
xor
and
sbb
rorb
pop
loopne
dec
shll
jle
test
das
lock
jg
mov
scas
int3
jb,pn
pop
mov
or
pusha
sub
jne
enter
sbb
mov
xor
orb
subb
fwait
sub
push
fdivr
ja
mov
loop
add
stos
cltd
fwait
sub
push
into
lock
push
cmp
jmp
movsb
fistpl
push
mov
adc
out
or
sbb
push
out
push
subl
mov
pop
sarl
sub
gs
push
mov
mov
sbb
sub
aaa
imul
sbb
rcrb
mov
adc
incl
enter
les
add
pop
push
jns
jmp
mov
add
sbb
rcrl
std
xchg
adc
xor
loopne
lds
loopne
icebp
adc
sbb
mov
out
lret
icebp
xor
aaa
pusha
xchg
jo
mov
dec
clc
or
mov
adc
imul
cmp
roll
dec
cmp
push
inc
jmp
sbb
movsl
xchg
jl
fwait
out
xchg
aaa
ds
subl
js
std
fldcw
sahf
mov
or
fiadds
dec
jae
mov
inc
test
dec
sti
cltd
mov
pusha
jg
sbb
negb
xchg
mov
hlt
out
incl
dec
jb
je
push
jecxz
jno
loopne
pop
or
push
decb
ds
cmp
mov
lds
insl
add
dec
aad
in
pop
repnz
sub
das
or
lahf
and
outsl
fmull
sub
mov
das
jge
or
sub
inc
xor
xor
adc
fsubrs
or
popf
popa
push
adc
mov
jge
adc
aam
mov
mov
dec
pop
jg
adc
adc
mov
insl
cld
test
cs
jae
enter
in
jne
adc
mov
repz
loop
xchg
faddl
imul
mov
adc
add
cmp
pusha
pavgb
sub
imul
jmp
test
push
push
mov
xchg
clc
jg
xchg
cmp
insl
cmp
cmp
imul
pop
sbb
loopne
sub
add
add
and
cwtl
sub
sbb
aam
je
and
jae
test
ret
sub
bound
push
fsts
scas
int3
data16
mov
fwait
cmp
cld
daa
imul
mov
push
test
jmp
das
mov
test
mov
dec
jg
das
fildll
cmpsb
mov
adc
add
test
add
add
mov
dec
adc
xor
clc
fisttps
lods
sub
cmpb
sti
sub
lahf
or
iret
das
fimull
lock
push
add
shr
fmuls
aaa
incl
jnp
pop
roll
xor
mov
pop
pop
add
dec
je
imul
loopne
mov
mov
pushf
mov
jl
movsl
dec
int
mov
pop
insl
jmp
int3
push
mov
fistps
xchg
jnp
mov
shll
pop
adc
incl
and
mov
jno
inc
call
stos
clc
loope
xchg
adc
sub
stos
hlt
mov
roll
add
jb
mov
cmp
xor
sti
lods
mov
pop
shll
stos
mov
or
test
mov
mov
push
iret
test
std
in
fwait
js
lea
sub
xchg
xchg
dec
cltd
or
pop
in
in
cli
dec
das
fidivl
or
popl
jge
inc
outsl
add
outsb
or
inc
loopne
xor
es
push
push
hlt
fstp
cltd
sti
mov
loop
mov
sarb
les
dec
leave
test
push
sbb
lcall
mov
jnp
das
push
addb
xor
mov
sub
daa
mov
nop
xor
in
or
nop
pop
pusha
insb
jne
jle
add
inc
or
xchg
lods
xor
cmp
cs
pop
jnp
pusha
rorb
je
push
stos
fisubs
sbb
cmp
rcr
fucomi
add
mov
test
mov
insl
xchg
mov
shlb
lods
scas
aaa
pop
loopne
mov
sbb
out
cli
jg
popa
adc
cmpsb
in
adc
andl
call
fldcw
inc
cli
inc
sub
ja
iret
mov
mov
maxps
sahf
mov
sbb
pop
mov
jecxz
enter
hlt
sub
xor
sarl
paddusb
call
pusha
xor
pop
arpl
loop
mov
or
sub
sub
mov
fdivrp
call
mov
ss
int3
cmp
leave
sahf
inc
jae
scas
mov
mov
mov
mov
ret
xor
cmp
bound
les
pop
movsb
add
cmp
pop
ss
out
inc
sub
mov
push
push
fisttpll
sbb
xor
enter
clc
rolb
into
sub
add
mov
aam
xlat
push
je
arpl
mov
or
icebp
inc
cmp
xchg
imul
add
dec
dec
ljmp
and
lcall
inc
push
and
jnp
mov
outsl
and
mov
add
fnstcw
hlt
movsb
sub
call
aaa
jnp
add
fisubs
dec
cli
adc
sub
jo
mov
stos
in
xor
popf
nop
push
std
push
aaa
mov
ljmp
jb
cmc
filds
gs
sbb
and
das
inc
outsb
das
xor
fidivs
pop
loope
cmp
or
push
xlat
je
aaa
mov
fs
rorb
lret
es
rcrb
sub
pushf
sub
cmp
mov
in
mov
gs
inc
call
sub
shlb
js
cld
jmp
jge
push
inc
jae
movsb
scas
mov
and
insl
jo
or
jg
in
or
nop
push
push
and
pop
cld
cmpsb
push
or
mov
pushl
push
shlb
pop
mov
not
lcall
adc
xchg
les
ror
inc
jg
in
shr
inc
ficoms
mov
std
sti
cmpsl
fiadds
lods
vmaskmovdqu
stc
mull
mov
mov
je
ret
xchg
outsb
outsl
lock
leave
sbb
call
data16
adc
jmp
aas
and
inc
in
pop
mov
cmpb
inc
or
lret
and
adc
sbb
fucomip
cmp
cli
xchg
cmc
and
frstor
push
and
incb
adc
out
lcall
pusha
jge
loop
mov
int
fistps
inc
fisttpl
loope
dec
out
inc
cmp
cmp
ja
clc
addr16
fldl
jo
sbb
mov
inc
lods
adc
ljmp
jecxz
add
and
lock
dec
arpl
nop
pusha
push
or
mov
js
add
push
or
fldt
and
cmp
mov
aas
ret
lods
dec
dec
and
push
int
lods
bound
xchg
fcmovnb
aad
add
repz
adc
and
and
sbb
sahf
imul
jl
data16
lea
xor
mov
bound
cmp
incl
push
fs
push
jb
mov
mov
shll
imul
incb
xchg
mov
sub
out
xchg
je
pop
push
inc
cld
das
mov
inc
insb
jnp
andb
insl
std
ljmp
sbb
jp
dec
in
or
dec
cwtl
fcompl
inc
mov
in
clc
mov
gs
popa
prefetcht1
aaa
add
fwait
ret
out
adc
mov
xor
jecxz
push
mov
inc
int3
dec
cmp
mov
mov
das
mov
fs
lahf
dec
inc
test
fistpll
mov
inc
push
cli
and
push
imul
or
jnp
dec
xor
out
incl
mov
add
jp
out
stc
je
push
push
cmpl
fisttpl
cmc
lret
sbb
and
nop
cltd
xchg
jb
jne
sti
out
jmp
mov
inc
je
cwtl
adc
mov
dec
lea
enter
test
pop
pop
mov
movsb
fcomps
jg
cli
movsl
ret
jno
test
fimull
adc
cwtl
fisubs
mov
in
mov
mov
scas
cmc
das
das
sub
addr16
adc
inc
jno
add
fists
or
fwait
push
mov
pop
jbe
inc
out
outsl
fcmovu
or
incl
loopne
decl
jle
inc
loopne
daa
adc
aam
adcb
and
mov
inc
cmpsb
test
xchg
jns
cli
pop
shl
stc
xor
aas
push
and
stc
or
ljmp
fildll
cmp
adc
sbb
popf
call
and
add
out
adc
std
inc
jg
jnp
gs
ds
pop
test
lods
cltd
inc
pop
cmp
test
jae
push
xchg
loope
cmpsb
adc
decl
les
rcll
jo
mov
aam
jns
iret
and
jmp
lock
dec
and
pop
cmpsl
cmp
cmc
inc
sbb
add
mov
rolb
les
and
std
sub
xor
clc
das
outsb
and
add
pushf
mov
adc
inc
mov
scas
cmp
mov
call
inc
dec
push
outsb
cmp
cmpsl
sbb
lret
adc
in
inc
outsl
add
cli
add
in
out
mov
pop
shll
cld
jle
subb
mov
ret
ret
pusha
add
repz
pop
jg
in
popa
ds
addr16
add
test
mov
fwait
add
sarl
xchg
add
test
lods
mov
in
aad
sbb
xchg
repz
push
enter
jp
push
sarb
mov
xor
into
and
cmp
dec
mov
and
test
jo
inc
inc
or
ds
std
xchg
rorb
adc
sbb
addb
and
sub
mov
cmp
jg
mov
in
adc
xchg
addr16
adc
and
xchg
push
sahf
aas
mov
and
outsl
js
pop
mov
mov
sti
loop
pop
push
loopne
mov
dec
outsl
jp
call
in
dec
mov
or
add
jp
ss
push
bound
shll
push
daa
sbbl
jmp
jmp
in
pop
ret
incl
mov
and
push
inc
shrb
push
inc
push
sbb
fcmovu
ljmp
data16
cmp
jl
xchg
std
jo
jne
push
sub
pusha
test
mov
ret
inc
sbb
jle
aas
sbb
push
fisttps
push
test
mov
ret
in
pop
mov
dec
roll
gs
fs
aaa
int
sbb
sub
mov
inc
adc
lods
cmp
adc
outsl
jnp
lcall
mov
jmp
adc
leave
mov
enter
and
inc
lds
mov
ret
cld
inc
or
insl
lret
mov
lea
ret
push
add
push
mov
or
cld
adc
fmull
push
pop
js
pop
cli
fcmovnb
paddq
cld
or
sub
inc
movsb
sbb
add
and
scas
push
shlb
cmp
add
add
cmpsl
xlat
push
jns
test
or
or
adc
jno
call
and
jg
jg
push
lret
push
xchg
lds
mov
aaa
subb
adc
pop
jbe
bound
ljmp
mov
adc
hlt
movsb
pop
test
pop
mov
dec
or
js
aas
in
mov
add
cli
aad
addr16
je
cmc
in
insl
stc
pop
in
cmp
stos
sbb
addr16
push
cmpsl
sub
sub
mov
xchg
jne
in
or
mov
adc
cmp
sahf
sub
push
test
faddl
scas
shll
xlat
dec
insl
lret
sbb
mov
fst
mov
lock
pusha
sbb
lret
mov
fcmovu
mov
push
out
dec
cwtl
cli
mov
out
xchg
push
hlt
or
testl
repnz
test
negl
push
or
arpl
loopne
pop
inc
movsb
in
insl
and
add
mov
sub
mov
outsl
ljmp
jmp
aam
int
mov
dec
mov
imul
leave
lret
addr16
jmp
xchg
xor
fcomp
mov
test
es
add
rcl
sub
push
pop
mov
in
pinsrw
shr
stos
push
ljmp
fimuls
in
push
fdivrp
and
add
inc
mov
cmc
xor
cmc
push
lods
xchg
stos
jge
and
cld
add
xor
mov
mov
test
loope
out
push
lea
pop
xchg
xor
dec
movsl
mov
jb
cs
lret
sub
add
xor
lea
and
jg
or
adc
cld
and
pop
jg
aaa
xchg
leave
imul
push
xlat
leave
push
ret
aas
dec
jg
lods
inc
js
xchg
enter
jecxz
clc
cmpsb
mov
pop
mov
pop
push
inc
jmp
cmp
inc
jge
ljmp
data16
jbe
sub
mov
jg
adc
and
rcrb
ret
stos
sahf
fnstenv
pop
rcrl
mov
out
stos
mov
mov
aas
pop
arpl
push
inc
sbb
popf
and
mov
or
call
leave
ds
add
movsl
addr16
ficomps
lret
inc
jp
cld
pop
sbb
fildll
mov
xor
add
cmp
out
jbe
cltd
lret
pop
jb
inc
test
add
push
and
addl
xchg
dec
mov
dec
jnp
inc
jecxz
pop
xor
lea
push
cli
mov
inc
mov
or
mov
test
xchg
jecxz
push
ds
mov
orl
add
mov
outsb
mov
dec
addb
int3
and
ret
enter
or
stos
mov
fucomip
cmp
xor
aas
sbb
inc
sub
aaa
add
outsl
jmp
push
ret
sar
daa
pushf
dec
popa
cli
aaa
fdivrp
xchg
dec
bound
jo
mov
add
or
add
mov
pop
cli
incl
mov
xor
mov
push
xor
mov
pop
fucom
lods
and
shll
in
daa
mov
xchg
inc
cmp
cmp
loope
sti
jg
aaa
push
adc
movsl
xor
imul
or
lcall
js
lret
dec
push
and
adc
aas
cmp
pop
lahf
in
outsl
jl
xor
mov
fcoms
data16
and
pop
nop
mov
add
les
inc
loope
in
mov
adc
shl
pop
lea
aas
inc
lea
jg
sbb
jne
xchg
jmp
mov
xchg
das
inc
aam
mov
jno
inc
pop
pop
clc
jg
sbb
xlat
or
in
xor
add
pop
loopne
mov
dec
adc
daa
mov
jnp
sbb
aaa
push
inc
icebp
and
add
mov
push
loope
xor
push
test
clc
pusha
pop
aaa
fisubrs
mov
and
std
incl
add
xor
cli
xchg
test
add
sub
mov
aam
pop
xchg
jge
pop
pushfw
outsl
sub
or
or
imul
jo
mov
sub
clc
add
clc
repz
movsb
cli
dec
lcall
sub
into
je
lods
xor
cmpsb
lea
test
es
scas
mov
rorb
cltd
dec
imul
cli
mov
xchg
out
adc
std
lods
jmp
in
adc
jg
push
pop
push
add
jbe
cmp
call
sub
test
call
pop
insl
xor
test
loopne
test
rcrl
lods
or
push
xchg
or
mov
rol
ljmp
or
mov
inc
mov
loope
inc
mov
jge
inc
cmp
mov
int3
mov
xchg
sahf
or
xchg
cli
push
push
xchg
ljmp
mov
icebp
xchg
movsl
popf
or
jne
xchg
and
cli
cltd
cld
mov
push
jle
shld
cmp
inc
xchg
mov
xchg
aad
xor
out
ljmp
adc
inc
and
bound
popa
pop
ljmp
adc
inc
js
mov
mov
dec
sbb
outsb
mov
clc
repz
add
negb
add
cmpsl
and
pop
dec
in
js
pop
je
ljmp
aaa
or
ljmp
and
push
mov
inc
clc
fisubs
push
or
inc
das
jmp
incl
push
ficoms
loope
out
inc
xchg
insl
mov
xor
mov
mov
test
mov
cs
pop
call
cmp
mov
push
mov
mov
cmp
sahf
pop
xor
mov
outsb
pusha
sbb
ficompl
movsb
push
sbb
and
sar
ja
or
xchg
add
cld
ficompl
xor
test
and
shll
inc
push
hlt
test
lret
fnstsw
insl
jecxz
out
adc
incl
aaa
aad
mov
add
loopne
and
enter
sbb
sar
dec
xchg
xchg
jbe
imul
scas
pop
push
cmpsl
shrb
lea
clc
mov
stc
inc
pop
idivl
fsubl
dec
aam
sti
fildl
sub
cmp
dec
jle
movnti
stos
aaa
sub
and
enter
lods
mov
decb
lock
ljmp
cld
xchg
sbb
jbe
test
mov
les
aas
fmul
xor
pop
push
cmp
adcl
and
daa
mov
repz
pop
sub
cli
mov
mov
cmp
jp
leave
inc
push
sub
add
test
sub
dec
mov
add
lods
sarl
ds
sbb
pop
pop
movsl
sar
ja
mov
es
nop
add
aaa
push
insl
adc
into
orl
outsl
int
jmp
adc
inc
jb
jg
incl
mov
push
push
jecxz
cmp
sub
mov
pop
loope
xchg
add
pop
adc
push
jle
push
scas
cmp
sbb
xchg
fldl
pop
clc
ret
or
into
mov
fnstsw
add
test
inc
push
adc
mov
shrl
jb
or
push
addl
cmpsb
dec
and
stc
mov
les
ret
nop
sbb
mov
xchg
rcll
imul
ds
icebp
pop
ret
dec
aad
aam
cli
ret
cmp
xchg
mov
push
add
ret
xchg
dec
decl
inc
dec
roll
clc
outsl
jg
push
sbb
dec
movsb
xchg
mov
xorb
rcrb
sbbb
mov
std
shlb
jle
paddd
xor
shl
pop
cmpsl
pop
das
jge
lods
in
inc
add
cmpsl
or
add
mov
cwtl
fs
dec
sbb
sub
jg
mov
inc
out
mov
fidivrl
xchg
xor
test
in
jg
inc
icebp
out
js
add
loopne
fs
cmc
push
icebp
sbb
int3
je
and
icebp
repnz
sub
roll
cli
cmc
push
mov
push
push
jp
mov
and
pop
movl
fwait
cmp
cmpsb
xchg
div
shr
pop
and
orl
xor
and
jle
pop
ficomps
jecxz
pop
clc
push
es
push
and
jne
ss
leave
std
and
cld
pusha
fsubrp
insl
stc
pop
int
xchg
and
mov
cli
inc
or
leave
out
mov
mov
cli
incl
gs
loope
jns
ds
jne
or
aam
push
test
dec
mov
mov
je
dec
icebp
jle
jge
push
arpl
pop
dec
jno
test
inc
jno
in
in
insl
addr16
dec
pop
adc
sbb
adc
fisubrs
pop
sub
adc
xchg
and
or
outsl
cmp
rolb
inc
dec
int
or
cld
dec
dec
daa
sbb
mov
dec
xor
bound
mov
stos
sub
push
cmp
push
jnp
jp
mov
dec
imul
pop
jmp
xor
stos
clc
pop
pop
into
xor
and
idivb
out
repnz
dec
xchg
out
inc
sar
faddl
ss
ds
mov
jp
add
into
jge
fcoms
stc
jp
sub
adc
fldt
mov
xor
xchg
cmp
pusha
movsl
aaa
std
fwait
lock
inc
mov
xchg
in
lock
mov
ljmp
inc
rcr
es
cli
sub
inc
les
jp
dec
dec
data16
mov
mov
pop
rorl
push
adc
inc
popa
dec
pop
dec
adc
scas
adc
ret
jle
cld
sbb
xchg
popa
lea
or
leave
inc
mov
lcall
lret
mov
add
mov
adc
inc
cld
jg
pop
xchg
dec
mov
jp
jp
push
sub
jmp
rorl
mov
push
int3
pop
mov
jmp
mov
xchg
cmp
popf
inc
scas
mov
and
arpl
mov
jl
or
call
dec
sbb
mov
dec
and
call
js
push
lret
dec
sbb
xor
orb
mov
in
push
adc
out
ljmp
nop
stos
or
jns
inc
iret
xchg
fs
repz
sbb
mov
sbbb
pop
xchg
xchg
add
out
jg
mov
loopne
in
popa
outsb
in
lret
sub
pusha
cli
push
or
xchg
and
inc
and
ljmp
add
jp
inc
inc
lret
adc
jo
iret
pop
xlat
xor
icebp
ret
sbb
pop
sub
or
mov
mov
jp
sub
or
mov
xchg
mov
cmp
pop
xchg
inc
repz
push
adc
sti
shrl
pop
std
imul
popa
mov
push
cmc
ficomps
mov
mov
push
stos
fimull
jmp
jmp
repnz
cli
mov
inc
mov
add
loop
mov
xchg
sbb
mov
fidivs
loopne
cwtl
sahf
adc
push
das
in
call
sbb
sub
sub
popf
std
and
clc
dec
xor
adc
in
insl
je
pop
xchg
fdiv
lock
xchg
mov
push
arpl
mov
pop
roll
call
xor
pushf
push
stos
das
cmc
mov
jecxz
fs
cli
nop
shll
pop
mov
mov
add
je
les
dec
mov
cli
push
stos
cmp
out
loopne
sub
sub
aaa
pop
stos
sub
fildl
ss
push
push
xor
xchg
push
mov
aaa
stos
fsubrs
stc
push
and
mov
mov
stc
adc
lahf
and
add
mov
add
lea
push
lds
stc
int3
nop
test
stos
mov
pop
and
pop
cld
std
mov
push
hlt
rolb
dec
lock
sub
bound
sahf
lret
inc
mov
pop
adc
or
xchg
mov
call
push
sbb
imul
repnz
stc
mov
pop
mov
jae
pushf
clc
fsub
hlt
lods
inc
dec
div
pop
movl
sub
push
jo
pop
insl
xor
cmp
jg
adc
inc
cwtl
dec
movsl
dec
mov
leave
lock
je
or
jmp
insb
popa
stos
mov
xchg
jno
das
dec
lea
inc
or
shlb
xchg
lfs
test
sub
stos
and
mov
shlb
dec
xor
xchg
sbb
inc
js
push
fcomps
or
insl
sti
aaa
pop
inc
mov
sbb
cmp
fwait
fistps
pop
xor
cmpb
es
dec
test
push
insl
cmp
jg,pn
mov
pop
ds
loop
pop
or
outsl
and
dec
inc
xor
testb
jecxz
and
lret
jp
mov
in
fstpl
aad
inc
sbb
loope
xlat
push
adc
rcrl
test
scas
nop
add
pop
jp
aaa
fucomp
adc
std
mov
sarl
xor
xor
aas
test
mov
sbb
xchg
mov
inc
lock
or
dec
incb
out
fs
cmc
xchg
dec
mov
mov
lds
cs
cmp
mov
lahf
jg
add
jbe
mov
incb
pop
push
mov
rol
pop
js
cmp
test
or
mov
rcl
mov
jns
inc
mov
stos
mov
sbb
mov
mov
idiv
xchg
jle
sub
sti
push
decl
cmpsl
dec
sbb
lret
xlat
jbe
into
mov
cmpl
loopne
insl
sahf
cli
lods
inc
push
test
or
jecxz
inc
mov
das
jge
or
xor
mov
cld
jl
incl
add
jge
out
std
sarb
fwait
xor
jo
fsubs
sub
fidivrs
test
pop
sbb
shrl
divb
dec
push
loop
inc
mov
cmp
and
arpl
add
in
mov
jno
push
pop
xchg
adc
push
sub
xchg
arpl
mov
aad
xor
leave
aaa
repz
popa
dec
xchg
mov
jbe
rolb
xchg
nop
test
das
mov
aaa
adc
mov
cmpb
push
mov
mov
outsb
pop
loopne,pn
clc
test
ss
pop
cmp
orl
sub
repnz
imul
push
pop
mov
adcb
test
and
sbb
or
pop
mov
dec
cld
decl
or
loop
lahf
out
pop
stos
outsl
sti
mov
or
jbe
xchg
mov
popl
cmc
sbb
test
mov
dec
mov
and
dec
and
sahf
or
rorb
clc
test
jb
es
cld
scas
call
sbb
mov
xor
xorb
mov
xchg
loop
dec
adc
movb
sbb
adc
push
outsb
cmp
pusha
pusha
ret
mov
jge
mov
jp
call
mov
ret
cmpsl
divl
pop
cmp
push
mov
ret
adc
sub
in
pop
jb
adc
ficoml
inc
and
push
inc
adc
fnstsw
adc
pop
xchg
fdivrs
add
xchg
sbb
xor
inc
out
cmp
fsubrs
mov
jle
stos
mov
out
mov
adc
int3
push
call
inc
cld
das
adc
push
pop
cld
in
fidivs
mov
cmpsl
jo
cmp
inc
das
insl
push
jno
aas
or
mov
aaa
dec
adcb
addr16
mov
sub
iret
mov
xorb
push
aam
call
jo
or
lds
ret
pop
je
insl
lcall
ljmp
jle
mov
sti
cli
aad
push
shrl
insb
mov
mov
pop
dec
shrl
push
and
xchg
dec
pop
cli
ja
pop
andl
push
cmp
xor
into
jmp
lea
sbb
dec
push
sub
fbld
jecxz
adc
jmp
ja
mov
rcr
sbb
or
stc
dec
sbb
lods
pop
jb
mov
fdivr
sub
mov
and
mov
xlat
mov
jmp
inc
mov
xchg
sub
add
roll
dec
mov
and
xchg
popf
mov
aaa
lret
in
ret
fcompl
imull
cmp
cmp
loope
rorb
les
or
cmpsb
aad
inc
add
adc
sbb
lock
jmp
xchg
push
mov
popa
dec
pop
mov
in
jmp
mov
xchg
lods
and
pusha
pop
adc
add
dec
adc
jl
aad
pop
mov
sub
das
sbb
pop
add
pop
pop
jne
mov
je
adc
adc
imul
out
or
cmp
lret
push
fsub
test
adc
js
rcrb
sbb
pop
jmp
xchg
test
in
inc
xlat
xor
pop
mov
sarl
movsb
fiaddl
inc
fldl
xor
test
cs
popf
jl
out
test
fistpl
subb
sbb
lds
sti
scas
test
loop
add
sbb
test
xorl
push
test
ret
mov
rcl
sar
push
add
out
pop
xchg
inc
and
aas
and
jo
add
mov
xor
inc
in
sbb
sub
jns
cmc
jmp
inc
addr16
or
mov
mov
out
scas
adc
dec
mov
test
iret
xchg
dec
in
call
aam
pop
sbb
std
arpl
loopne
and
clc
push
int3
add
and
test
jbe
cmc
inc
dec
sbb
cli
jb
stc
mov
push
jae
add
clc
lret
add
or
xor
add
sub
lcall
decl
xor
fcoml
inc
cmp
ret
popf
sbb
and
rcl
lcall
mov
incb
mov
mov
push
jbe
push
pop
aas
shlb
out
loopne
es
lods
movsb
dec
mov
mov
mov
mov
adc
cli
mov
sbb
ret
mov
out
loopne
pop
jo
incl
sub
int
and
jl
aam
jg
ljmp
and
mov
lds
into
ret
stos
xchg
sbb
scas
add
scas
scas
xchg
rolb
leave
mov
cmp
mov
jge
icebp
dec
negb
mov
ljmp
jns
jp
adc
test
mov
xor
mov
int3
pushf
sti
push
cmp
mov
cmp
cld
sub
mov
inc
das
std
in
adc
sbb
sbb
adc
mov
cmpsl
addr16
jp
push
les
and
sub
ja
insb
dec
movsl
inc
mov
aaa
inc
cmp
sbb
sub
push
filds
lock
mov
movsb
cmp
repnz
imul
jmp
inc
adc
inc
mov
mov
jge
clc
mov
outsb
loopne
popf
xor
pop
mov
subl
ret
jg
arpl
pop
ljmp
imul
ljmp
flds
rorb
lock
add
and
pop
inc
mov
add
ljmp
inc
sub
push
and
inc
pop
sub
mov
mov
mov
mov
push
into
loope
xchg
xorb
jne
cmc
jns
sbbl
cld
aaa
clc
inc
inc
cmp
pop
cmp
xchg
mov
dec
int
in
shl
jg
dec
sub
add
imul
lret
call
outsl
shll
cmp
arpl
cli
xchg
andl
mov
pop
test
dec
fidivrl
fsubrs
clc
cmp
add
cld
leave
or
inc
mov
xlat
jecxz
fiadds
add
test
icebp
iret
pop
test
adc
jmp
dec
shlb
adc
and
stos
cmp
packssdw
pusha
into
std
pop
vshufps
inc
shr
mov
loopne
int
daa
ljmp
enter
movsl
xor
sbb
inc
mov
mov
sbb
pop
dec
adc
sbb
mov
jae
and
cld
add
pop
jge
adc
xchg
ss
mov
outsb
add
incl
pop
shll
adc
cltd
sbb
es
pop
divb
push
hlt
mov
xchg
pop
loopne
sbb
jbe
ror
fldcw
pop
imul
mov
aaa
faddl
inc
add
and
push
mov
pushf
mov
pushl
popl
dec
inc
mov
and
lahf
dec
in
adc
scas
inc
dec
adc
pop
and
movsb
or
je,pn
incb
mov
sti
inc
fiadds
hlt
xor
mov
sub
in
and
mov
inc
mov
fisttpll
jecxz
ficoms
xchg
fwait
sbb
pop
lock
sbb
imul
aaa
mov
pop
xor
mov
fildl
aad
scas
std
cmpsb
popa
pop
add
enter
add
shr
xor
mov
pop
insl
xchg
sub
enter
insb
xchg
add
sbb
les
or
pop
and
or
orb
fwait
mov
call
ror
push
lock
ror
add
adc
dec
fisubrl
add
sbb
test
mov
pop
or
in
xchg
call
adc
inc
cmp
std
shll
xorb
lds
fbld
lods
mov
sarb
fildl
test
mov
xor
xor
ljmp
decb
clc
or
push
std
pop
pop
shrl
xchg
ljmp
add
lcall
in
push
test
es
test
and
insl
xlat
push
mov
push
mov
pop
jg
inc
test
inc
mov
aas
push
add
imul
xchg
shll
sti
pop
add
inc
jmp
rorl
scas
ror
mov
push
jle
mov
test
outsb
pop
cmc
adcl
pop
pop
jecxz
shl
add
test
or
jg
push
lock
xchg
push
xor
test
data16
or
push
xchg
pushf
mov
mov
pusha
pop
enter
xchg
adc
jbe
orb
fs
cvtps2pi
xor
enter
xchg
sbb
ljmp
icebp
arpl
insb
cld
cmc
inc
jns
add
fiadds
or
pop
xor
ljmp
jg
mov
mov
aam
dec
pop
inc
mov
test
clc
push
test
jo
in
mov
out
std
jg
jg
sub
enter
repnz
sahf
push
pop
inc
jo
in
mov
das
sub
mov
sub
or
sti
mov
sbb
push
movsl
mov
inc
aaa
adc
aam
notl
fsubrl
jmp
rcl
adc
aas
fneni(8087
mov
adc
inc
clc
dec
and
add
icebp
inc
fdivr
sbb
fcompl
aad
and
xor
jg
hlt
mov
icebp
test
je
adc
dec
hlt
decl
dec
sub
pop
inc
jp
imul
scas
mov
aaa
mov
hlt
popa
push
cmp
xchg
sahf
fcmovbe
xchg
push
mov
outsl
jg
orb
nop
das
or
or
aas
lods
cli
mov
mov
jg
inc
loop
xor
and
or
inc
call
push
and
imul
lods
mov
jge
mov
sub
push
es
fistpll
mov
fcmovnbe
mov
add
lock
sub
mov
in
sahf
mov
jg
pusha
add
mov
mov
int
xchg
fildll
scas
push
sbb
xor
fdivp
sub
add
sub
jle
push
lret
push
pop
mov
cmpsl
addl
shlb
sub
std
negb
push
addr16
lahf
lds
or
movsl
push
pop
adcb
pop
popf
mov
notl
sti
add
inc
icebp
xor
jns
jmp
add
call
push
lret
jle
mov
mov
inc
lahf
les
gs
sbb
push
in
cmpsl
js
push
inc
inc
shr
je
dec
fnstsw
adc
mov
xchg
aas
jns
icebp
ret
add
sbb
adc
dec
lret
cmp
std
outsl
add
mov
mov
jne
pop
clc
decl
dec
int
or
lods
lret
lret
add
test
lcall
cmp
out
loop
jno
mov
outsb
lret
test
das
cld
das
dec
lcall
cmp
add
sub
push
jb
add
scas
pop
push
push
mov
sub
std
shll
mov
jle
jg
decl
sahf
in
push
fs
mov
out
sub
sub
repnz
lahf
or
std
mov
mov
test
les
xchg
jo
fidivl
add
out
scas
sub
pop
mov
or
mov
xchg
dec
cmp
sub
jae
or
rolb
sbb
mov
outsb
sub
arpl
pushf
mov
mov
outsl
or
and
in
fidivs
fmull
rcll
gs
jo
pop
mov
cld
push
jae
int3
inc
mov
subl
xchg
mov
fnsave
jb
push
sub
jo
addr16
dec
mov
inc
xor
inc
aaa
decl
movsb
sbb
leave
psubusb
xchg
inc
insl
call
inc
orl
in
mov
iret
jo
dec
cmp
pop
dec
xchg
mov
insl
iret
pop
scas
je
dec
jecxz
fsubrl
cld
mov
pop
push
push
jmp
inc
fs
lock
les
xchg
pop
aad
pop
clc
data16
popf
aaa
lea
mov
les
lock
insb
shlb
and
data16
jg
movsb
jb
pop
aaa
add
dec
call
aaa
mov
shrb
lods
add
mov
shll
insb
aad
xor
jbe
push
or
je
decb
je
dec
nop
outsl
dec
hlt
cltd
mov
inc
rorl
fwait
mov
lahf
loope
adc
mov
cmc
adc
inc
popf
push
mov
add
jge
rol
and
into
mov
or
ljmp
lret
adc
pop
sub
in
push
and
add
pop
clc
push
lock
dec
inc
rcll
mov
iret
xchg
pop
loop
xchg
dec
adc
dec
xchg
jg
mov
mov
or
pop
call
push
movsb
pop
popf
xor
xchg
in
jg
je
xor
les
stos
aaa
mov
push
cmc
cmpl
add
pop
inc
loopne
mov
out
loope
es
pop
mov
ret
mov
push
pop
mov
lods
addl
adc
xor
dec
mov
and
mov
jg
mov
icebp
mov
fwait
aaa
mov
jmp
notb
push
fs
outsb
mov
mov
shlb
call
imul
dec
cmpsl
imul
ficoms
dec
outsl
cmc
add
jmp
addr16
or
push
daa
xchg
fnsave
sbb
shrl
xchg
dec
stos
in
xor
jne
pop
dec
outsl
xchg
mov
cmpsl
add
test
jb
pushl
cmp
add
fcmovnb
daa
sbb
out
sahf
push
cld
dec
push
incl
lods
cmc
dec
cmpsb
xor
aas
sub
test
popa
js
hlt
fdivl
pop
and
call
decl
lcall
test
lock
xor
fcmovnu
ljmp
push
icebp
movsb
add
icebp
jae
ja
scas
ljmp
push
jg
and
mov
out
lret
lcall
pop
fyl2xp1
cmp
sub
nop
adc
in
mov
cmp
sub
push
aas
push
push
xor
mov
movsl
loope
adc
lahf
mov
xor
inc
jg
jmp
in
std
xor
inc
mov
xchg
js
push
into
inc
inc
call
in
lret
mov
mov
lcall
inc
push
std
jne
mov
dec
or
pop
inc
jmp
sbb
add
inc
xchg
cmp
stos
inc
xchg
nop
jae
cmp
mov
les
int
aas
push
arpl
lods
and
incl
cs
inc
lock
jo
xchg
xor
scas
inc
addr16
popa
ljmp
lock
push
jbe
aam
xchg
cmp
call
jmp
jne
movsb
pushf
jnp
mov
push
mov
mov
notl
push
popa
mov
inc
js
enter
scas
je
inc
push
or
cmc
xor
adc
testl
mov
call
test
test
out
int
test
cwtl
xlat
test
incl
lcall
sbb
popf
mov
pop
adc
inc
jne
inc
into
add
je
mov
pop
test
aaa
shlb
pop
lock
xchg
xor
sub
negl
outsl
hlt
decl
mov
mov
int
cmpsb
pop
cmpsl
mov
call
das
hlt
cld
addr16
mov
pusha
jmp
pop
aam
adc
xor
mov
push
div
dec
lock
dec
jl
fwait
jge
pop
pushl
lock
jmp
mov
adc
leave
out
cmp
or
mov
movsl
aas
pop
decl
insl
pop
or
or
inc
dec
repnz
xchg
adc
aad
and
and
incl
bound
das
loopne
mov
insb
mov
xchg
push
popa
jl
or
hlt
shrl
adc
fs
xor
inc
test
decl
out
fs
jle
pop
pop
out
jl
jl
jae
inc
ljmp
lahf
or
filds
in
and
fcomp
mov
not
fmull
mov
mov
fcmovnb
jmp
mov
repz
push
leave
push
mov
and
sub
xchg
das
push
addr16
rol
jp
push
in
aaa
movsb
shrb
mov
ljmp
lret
loope
decl
cmp
xchg
scas
outsl
dec
lds
setp
fcom
call
in
test
mov
movsb
mov
pop
ja
dec
in
push
mov
fistpl
pop
ljmp
je
ret
stos
adc
outsb
mov
repnz
fidivrl
fcmovb
pop
jae
mov
pop
add
push
fldcw
cli
jmp
or
andl
jmp
push
mov
fbstp
add
arpl
xchg
lcall
andl
es
mov
aad
es
cmc
xchg
fwait
test
jg
jbe
dec
es
inc
in
inc
sbb
add
cmp
mov
nop
nop
and
aas
add
in
add
inc
in
mov
mov
jne
in
jp
jp
mov
mov
adcl
sub
add
pusha
outsl
jbe
addr16
incl
testl
fdivs
mov
and
loopne
sbb
in
jo
test
inc
mov
cs
xchg
daa
mov
pop
orl
jg
sbb
inc
add
add
mov
jae
jno
movsb
sub
jg
hlt
stos
clts
mov
fsubs
jge
lock
jle
rcll
test
fcompl
decl
xchg
adc
movsb
dec
mov
int
out
lcall
lds
std
ljmp
icebp
xchg
sbbl
xor
mov
sub
mov
stos
sti
jg
dec
aas
push
adc
daa
cmp
imul
ljmp
add
xor
daa
prefetch
mov
fnsave
lret
jo
aas
push
mov
jbe
cmc
push
sahf
push
icebp
fwait
call
fsubp
ret
jecxz
and
pusha
xorb
cmp
ljmp
jmp
insl
ret
loope
dec
es
sbb
xor
loop
push
adc
mov
add
int3
jge
bound
cmc
dec
idivb
imul
jg
incl
popf
dec
xor
shrb
insb
xchg
and
or
xchg
and
cld
push
inc
mov
inc
js
js
pop
rorl
ss
mov
loopne
fidivl
lret
sub
pop
call
sub
inc
cld
cld
mov
mov
fistl
jne
out
test
rcl
pop
jg
decb
lret
pop
adc
cmpsb
inc
mov
cwtl
ja
test
je
outsl
std
lcall
cmc
jae
clc
adc
add
pop
cltd
in
pop
jns
jne
sub
imul
das
push
xchg
inc
mov
lahf
jno
int3
sub
push
cli
sti
fwait
sub
hlt
jno
jg
fimuls
push
xchg
push
cmc
leave
sti
pushl
je
test
mov
or
cmpsl
test
fsubrl
fisubs
xor
ljmp
int3
or
jge
out
jnp
mov
std
mov
out
subl
jmp
mov
xlat
nop
out
es
push
lea
xlat
or
lock
jg
or
xor
mov
push
mov
lahf
sub
into
sbb
in
cli
jmp
mov
arpl
mov
loopne
mov
jl
inc
lods
jbe
inc
iret
ljmp
ljmp
cmc
incl
mov
lods
pop
mov
gs
roll
rcrl
decl
push
outsb
idivl
dec
cmp
addl
and
lods
push
jbe
pushf
jecxz
adc
mov
jecxz
lcall
call
in
mov
loop
xchg
and
adc
mov
xchg
adc
mulb
sub
ret
pop
xchg
lods
filds
insl
aas
cltd
and
inc
out
lods
sbb
cli
or
jmp
push
lret
lds
call
cmp
sub
xchg
aaa
push
aas
out
cmp
sbb
jg
les
ljmp
stos
and
jmp
pop
mov
jnp
xchg
call
mov
das
hlt
xchg
mov
int3
adc
cwtl
push
stos
data16
jg
mov
mov
adc
pop
test
in
leave
inc
nop
daa
pop
cmp
dec
jno
icebp
xor
pop
arpl
int3
leave
cmp
gs
inc
mov
ret
dec
insb
jge
in
cmp
mov
ss
adc
in
pushl
push
lods
fimull
mov
stos
in
mov
adc
mov
bound
ja
out
cmpsb
inc
fwait
mov
ss
stos
clc
dec
add
sub
mov
push
xchg
lahf
sar
arpl
xchg
mov
icebp
push
cmpsl
sahf
dec
lcall
jl
mov
mov
scas
cltd
and
jg
push
aas
inc
lret
sbb
aam
inc
cmp
adc
jg
mov
nop
cltd
push
push
mov
ds
sti
cmp
outsl
mov
ret
movsl
mov
push
fists
clc
lods
push
movsl
dec
stc
pop
mov
dec
sarb
pusha
fidivrs
fidivrl
add
lock
clc
push
inc
mov
cmp
fldt
adc
mov
sti
mov
ljmp
adc
jnp
or
sbb
mov
call
lea
or
incl
ret
mov
stos
mov
jae
icebp
roll
aaa
mov
fimuls
adc
mov
push
sbb
mov
push
out
incl
sub
ret
dec
outsl
hlt
push
dec
mov
xchg
mov
xchg
mov
repz
push
pop
add
xor
subl
scas
pop
jl
or
pop
std
call
int3
cmp
jle
rcll
xchg
js
arpl
ljmp
insl
imul
push
dec
and
arpl
cltd
popa
pop
sub
cmpl
dec
jecxz
jns
rcrb
adc
mov
adc
outsl
mov
push
outsl
dec
adc
shrl
lcall
push
mov
mov
dec
pop
shl
inc
mov
call
inc
and
outsb
xchg
idivl
xor
adc
xor
sbb
stc
add
jnp
into
mov
ds
scas
mov
dec
or
sub
or
popa
xchg
decl
sub
push
mov
mov
xchg
jno
pop
mov
sub
xor
adc
fcompl
sub
jmp
das
hlt
call
fcomp
roll
pusha
sbb
xchg
lret
adc
sbb
pop
std
jae
jmp
mov
loop
dec
add
subl
test
xchg
das
test
outsb
mov
mov
add
nop
push
sti
int
xchg
cmp
sbb
fcmovbe
dec
sub
pop
jge
out
out
stos
push
inc
pushl
push
fcmovu
pop
jmp
lret
push
fbstp
outsb
mov
pop
ljmp
movsl
inc
cld
push
jnp
lcall
push
pop
pushl
lock
sub
jg
jmp
sbb
pop
mov
push
ds
roll
stos
sbb
xchg
decl
adc
xchg
xchg
cmovae
sub
sbb
push
mov
out
icebp
lods
mov
mov
decl
movb
movsl
sbb
mov
jle
out
movsb
in
jmp
rolb
add
cmp
pop
stos
adc
mov
inc
das
cld
pushl
cltd
mov
loope
dec
pop
test
lret
sub
push
pop
into
push
adc
push
mov
and
pop
loop
aaa
shrb
sub
pop
loopne
jmp
out
test
mov
inc
ds
mov
call
lret
jmp
addr16
les
adc
pop
add
incb
mov
adc
xchg
in
popf
test
mov
fisubl
mov
into
mov
dec
mov
sbb
out
sub
cmp
in
jmp
pop
or
int
push
enter
or
pop
movsl
xor
fildll
jae
int3
dec
dec
push
int3
test
and
andb
pop
xor
xchg
adc
lcall
inc
xor
mov
cltd
movsb
dec
in
xor
jecxz
shl
in
loop
test
mov
pop
inc
ja
sar
dec
ret
nop
push
sub
push
or
fistpl
pusha
sbb
push
movsl
xchg
pop
imul
scas
inc
mov
call
cld
in
pop
xor
jnp
mov
ljmp
push
movsb
mov
jmp
mov
jmp
aad
sbb
xor
adc
xchg
mov
jg
inc
in
push
movb
add
call
xchg
and
or
and
bound
jns
scas
sahf
pop
xor
mov
ss
andl
xchg
jmp
bndstx
jmp
inc
jecxz
enter
pop
enter
pop
je
push
push
les
cs
add
or
xor
leave
das
es
xchg
or
into
into
mov
lods
stc
cmp
gs
push
dec
leave
shl
bound
or
ret
sti
mov
add
adc
inc
cwtl
loop
jbe
mov
push
jne
daa
mov
jg
fildll
lods
inc
jp
dec
mov
and
js
aam
sub
xchg
push
aam
insb
ds
push
jmp
jmp
sbb
mov
pushl
dec
jl
cld
lods
mulb
dec
shlb
bound
push
cmpsb
dec
cld
je
xchg
jne
jle
decl
xchg
ret
daa
fld
inc
es
mov
adc
jmp
cmp
or
inc
jge
jno
mov
sbb
popf
jle
into
out
jo
jmp
cmpsb
dec
inc
mov
data16
pop
fs
cmpsl
push
je
push
lret
xor
inc
insb
add
inc
test
cmpsb
scas
add
test
or
test
inc
xlat
inc
cmp
mov
outsl
addr16
int
aad
ret
pop
cltd
sbb
dec
cmp
or
ljmp
decl
xchg
lock
adc
xchg
xchg
jmp
movsl
gs
fnstcw
pop
adcl
jno
and
fs
and
jg
or
pop
xchg
lcall
andb
ret
ja
movsb
imul
jne
test
dec
and
incl
pop
outsl
mov
inc
pop
notb
adc
dec
sbb
adc
shl
js
stos
rcl
pushf
mov
inc
lods
lds
icebp
ljmp
in
fstpl
ljmp
or
xchg
mov
push
ljmp
mov
orb
lock
dec
ss
dec
imul
jmp
jg
femms
ficoms
aaa
clc
dec
sahf
and
and
pop
fadds
cmp
pop
jmp
jmp
mov
jmp
fwait
jae
fiaddl
out
push
jle
add
nop
into
mov
sbb
pop
xor
repz
lahf
addr16
mov
shlb
leave
sbb
push
mov
aam
mov
or
mov
imul
imul
xchg
test
push
mov
call
adc
and
arpl
sbb
cmp
cli
sarb
push
es
jg
int
push
js
aam
push
add
pop
and
rclb
mov
adc
lods
decl
xor
jo
sti
lods
xchg
inc
je
push
sub
sbb
cwtl
inc
in
fimull
pop
add
call
out
sub
jae
cmp
mov
inc
data16
adc
es
mov
xchg
lcall
incl
fimuls
outsl
inc
mov
movsb
icebp
push
scas
jle
mov
loopne
cmp
mov
call
mov
and
add
std
add
inc
jl
je
and
addr16
hlt
mov
sub
fstpt
xor
pop
jmp
dec
or
pop
shr
mov
insl
inc
mov
dec
sub
mov
cmc
rorb
xlat
testb
clc
jns
inc
or
cmp
inc
loope
lock
ljmp
mov
es
pop
pop
sbb
fs
hlt
not
dec
cmc
call
int3
test
jo
pop
inc
clc
frstor
or
pop
push
ja
fistpll
lret
daa
inc
jns
invd
je
rolb
ljmp
adc
push
jne
fs
out
push
icebp
ljmp
jmp
fsubrl
mov
mov
mov
fisubs
sbb
hlt
pop
and
add
in
mov
sbb
push
inc
cltd
pusha
cmpsb
pusha
or
inc
sbbb
jns
int
jne
fwait
inc
xor
ds
jne
es
nop
push
ret
pushl
divl
or
cmpsl
fs
cmpsb
pop
mov
jp
jmp
dec
aaa
push
outsl
in
pop
mov
nop
jmp
sbb
mov
outsl
pop
and
inc
outsb
fldl
imul
out
sub
xor
filds
mov
fadds
pop
rol
sub
inc
pop
shlb
incl
gs
xlat
test
cli
cmpsl
adc
and
xor
aad
mov
push
lds
movsb
xchg
pop
clc
mov
pusha
mov
xchg
dec
sbb
clc
dec
xor
ret
push
mov
cld
inc
fs
and
repz
aam
jle
adc
jmp
cwtl
mov
push
insb
pop
add
mov
and
mov
stos
outsl
mov
movsl
and
decb
test
outsl
lock
mul
add
fwait
scas
lock
rorl
jp
pop
mov
fs
pop
lcall
cli
inc
cmp
dec
add
aad
push
sbb
mov
mov
lods
or
ljmp
cmc
push
inc
xchg
and
and
je
insl
scas
mov
arpl
test
xor
add
dec
jno
in
cli
adc
jg
or
out
lret
dec
popa
mov
rorl
sub
xchg
cmp
lcall
popa
cli
mov
iret
mov
jae
outsb
pop
stos
dec
adc
pop
incl
ja
test
xlat
inc
add
mov
pop
aam
in
outsl
std
lcall
fistpl
in
loopne
inc
cmpsl
dec
and
in
dec
pop
xchg
inc
call
xor
addr16
orl
scas
scas
sbb
mov
adc
inc
or
cmpsl
loope
jb
ret
jmp
aad
jo
inc
xor
inc
into
ljmp
mov
dec
jmp
jns
lods
shlb
dec
inc
mov
xor
mov
xchg
mov
push
fidivs
adc
les
lock
sub
jne
test
mov
sbb
jmp
pop
or
fidivrl
push
xor
xor
cmp
pop
lds
cltd
imul
or
mov
sbb
inc
test
in
scas
sub
and
imul
and
or
or
out
mov
in
adc
jo
lcall
fimull
addr16
adc
dec
push
test
sar
jmp
rcrl
dec
stos
add
push
cmpb
out
jle
js
cltd
mov
sub
or
pop
out
and
popf
dec
mov
jmp
outsb
push
mov
mov
ss
cltd
add
sbb
orl
jg
jns
lahf
fwait
cmp
add
xor
add
xor
pushl
push
mov
mov
mov
not
js
ljmp
add
pop
mov
fs
and
and
xor
pushl
inc
cmp
sub
popa
addr16
loop
and
ret
call
jne
in
and
test
repnz
xchg
sub
jb
out
lcall
push
in
enter
ljmp
pop
pop
mov
mov
xchg
sbb
cmc
jle
enter
xchg
add
dec
adc
push
sub
shrb
pushf
and
dec
ret
enter
mov
ja
push
shll
adc
mov
jg
jmp
adc
xchg
popa
cld
test
and
pop
xorps
lcall
jb
pop
pushl
push
xor
jae
aaa
out
ret
in
pop
xlat
xchg
outsb
gs
xchg
adc
mov
mov
repnz
jge
jne
xor
dec
fistps
dec
jnp
push
sbb
cmpsl
and
add
dec
xor
sub
and
arpl
rcl
mov
dec
fmuls
push
dec
add
sub
mov
insb
fdivrs
mov
mov
or
mov
jnp
notb
cld
stos
out
push
xor
insl
mov
out
inc
cmp
push
pop
pop
mov
incw
stos
mov
pop
jg
sub
imul
sarb
sbb
pop
mov
pop
sbbl
cmp
incl
fsubl
sbb
or
cmpsb
jns
jb
cmp
sub
pop
sub
adc
lds
jmp
orb
push
popa
xlat
mov
jmp
sahf
test
outsl
pop
sbb
mov
imul
call
or
xor
adc
ficompl
lahf
mov
jb
pop
stos
loop
mov
dec
ret
cs
push
adc
xchg
or
push
ret
add
sbb
push
cmp
clc
pop
call
aaa
mov
jno
aaa
cmc
scas
sbb
jmp
and
fsubr
in
popa
xor
cld
or
push
stos
sbb
popa
mov
orl
xlat
sub
incl
xor
xchg
imul
mov
idivl
js
stc
das
cmp
lods
cmp
test
mov
pushf
ret
mov
xchg
popa
mov
add
das
pop
sub
test
pop
xchg
inc
rorl
sbb
dec
and
cmp
xor
movsb
sub
push
rcl
andl
dec
sub
dec
les
dec
sub
jne
mov
cli
ljmp
vucomisd
outsb
push
mov
int3
cmp
xchg
cmpb
pushl
jl
arpl
fimull
pop
inc
jno
testl
ss
hlt
decl
les
call
cmpsl
addl
mov
das
xchg
inc
and
lock
iret
cmp
pushw
jmp
sub
fdivs
bound
mov
sub
dec
mov
and
or
jbe
jb
push
xor
jecxz
decl
lock
pop
mov
js
stos
ljmp
aam
lret
add
imul
sub
sub
bound
inc
les
mov
lds
cmp
or
lea
push
add
xor
rcrb
ret
in
mov
push
decl
enter
addr16
adc
into
imul
push
sarl
enter
repz
push
inc
es
mov
imul
outsl
pop
decl
pushf
jp
adc
mov
rcll
stos
xchg
fsubp
jae
lcall
xchg
xchg
add
jmp
rcr
sbb
push
mov
dec
jp
add
cmc
xchg
adc
mov
xchg
decl
sub
pop
fwait
sub
in
push
das
xchg
sti
jb
std
repz
pop
or
mov
xchg
mov
cld
inc
inc
aaa
scas
xlat
xchg
adc
add
pop
std
aas
mov
test
ss
shll
pop
pop
test
fwait
scas
xor
dec
lret
or
ljmp
sub
bound
xor
mov
sub
xchg
outsl
lock
lcall
jl
call
sub
pop
aam
rorl
icebp
push
mov
subb
mov
into
lret
jmp
ljmp
mov
leave
cmp
out
adc
imul
cmpsl
andl
fildll
bound
inc
sub
out
orb
jmp
mov
adc
add
int3
push
ds
jmp
mov
cltd
std
imul
bound
inc
xor
idivb
outsl
std
fcomp
push
xchg
bound
orl
cmpsb
sarl
push
sub
xchg
cli
jmp
shll
jb
inc
out
lret
adc
pushl
pushf
pop
fsts
or
lds
sbb
and
lret
pop
fmull
popa
jo
xchg
jnp
call
clc
inc
cmc
popa
fs
and
rol
adc
add
aaa
mov
scas
shll
jl
hlt
loopne
xor
add
jg
fstps
out
inc
pcmpeqw
aad
xchg
out
fnstenv
jg
shr
xchg
fiadds
in
jb
insb
xchg
rcll
loop
pop
adc
aaa
mov
leave
insl
ljmp
aam
push
iret
xchg
stc
std
sti
xchg
mov
dec
in
xchg
push
jg
mov
jg
lahf
mov
inc
int3
stos
push
into
adc
push
sbb
incl
cwtl
je
jle
sub
or
xorl
pop
mov
pushl
aad
orps
pop
arpl
mov
or
xchg
aam
sbb
cmp
pushl
int3
mov
mov
add
ret
fisubs
call
fisubrs
lcall
addr16
lahf
inc
jecxz
mov
insl
lea
mov
pushl
mov
add
pop
dec
xchg
mov
cmpsl
clc
lods
pop
decl
cld
stos
int
cmp
push
push
jno
xchg
and
mov
push
sar
pushl
arpl
xchg
fcmovbe
call
adc
fsubrp
push
xchg
cmp
sbbl
lods
pop
jae
std
js
mov
jg
dec
rcll
out
testl
std
jecxz
inc
repnz
outsl
lods
rcrl
fistpl
popf
inc
jbe
pop
popa
or
mov
lcall
sti
lods
ja
mov
call
imul
add
sbb
call
pushl
sbb
mov
stos
std
pop
pop
jns
inc
xchg
adc
je
aad
sti
incl
hlt
jmp
or
sub
jecxz
add
dec
subb
mov
aad
ja
jns
push
cmpsl
test
aad
adc
es
jecxz
clc
mov
sub
jge
xor
cltd
push
cmp
call
xorl
arpl
cld
enter
xchg
mov
add
mov
push
sti
cs
repz
jle
add
pop
mov
out
xchg
gs
push
js
inc
mov
incl
cmp
les
mov
clc
mov
xorl
popf
lret
insl
shll
adc
mov
jle
mov
xlat
movsl
out
stos
pop
outsb
lret
test
repz
adc
sarb
cmc
push
or
adc
cmp
cmp
inc
addr16
sbbl
adc
dec
jne
mov
cmpl
cmpl
ja
inc
setns
inc
adc
fwait
shlb
jl
fisttpl
iret
jae
loop
in
or
mov
in
fstps
jge
push
mov
shrb
xchg
ja
pop
dec
nop
lods
or
lcall
out
sub
sbb
adc
jns
and
cmp
mov
loope
cld
pushl
inc
sub
leave
cwtl
cltd
dec
int3
pop
xor
ret
mov
add
mov
push
fisttps
ds
adc
push
push
pop
cmp
mov
and
call
data16
repz
or
icebp
push
cli
mov
decl
jg
add
adc
out
nop
out
dec
mov
enter
pop
xchg
mov
cmp
or
lea
inc
add
mov
dec
es
out
push
std
jg
movb
dec
mov
xor
mov
xchg
adc
mov
call
cmp
cmc
jl
mov
das
cmp
mov
in
push
ljmp
bound
xor
mov
outsb
and
mov
dec
xor
xchg
incl
xchg
mov
xchg
nop
loope
inc
rorl
sarl
jns
lock
popa
aam
dec
and
test
imul
mov
mov
jne
dec
mov
sub
jnp
add
sti
test
pop
and
or
cmpsl
adc
mov
imul
rolb
cmp
cltd
push
std
mov
stos
pop
xchg
jmp
insl
cli
dec
lock
repz
std
outsl
out
sub
lahf
xchg
add
mov
scas
cld
jge
xchg
dec
loope
mov
inc
imull
jg
pusha
loopne
pop
call
sbb
addr16
mov
shll
sbb
push
out
in
clc
incl
js
cltd
xchg
cmp
sbb
arpl
les
xchg
movsl
decl
nop
xor
xchg
mov
clc
mov
shll
jb
out
ljmp
mov
push
and
mov
sub
bound
fldt
jmp
movsl
gs
xrelease
inc
pop
stos
out
test
jae
pop
imul
pop
sbb
inc
leave
std
push
lods
push
jl
inc
sti
enter
adc
getsec
sub
jg
mov
sbb
adc
das
call
outsl
cli
mov
mov
adc
adc
mov
mov
lcall
jbe
pusha
pop
cmp
xchg
lret
out
or
aaa
mov
notl
aas
sbb
mov
xchg
xor
lods
in
loope
xor
ficoml
push
ficomps
jno
mov
add
movsb
test
data16
lds
and
cmp
fucomip
mov
and
adcl
popa
idivb
xorb
jo
pushl
gs
mov
mov
sbb
in
int3
xor
stos
lock
cmp
xor
setp
pushl
xchg
mov
lods
mov
out
xor
out
mov
cld
push
xchg
inc
scas
cmp
test
push
mov
dec
fs
and
nop
lcall
mov
shl
stos
xor
push
punpckhwd
xor
cmp
lret
mov
dec
repz
movsb
jo
test
mov
jp
lret
repz
es
adc
aam
rcrl
cmpsb
and
add
das
std
movsl
push
adc
hlt
push
push
bnd
jl
decl
clc
pusha
mov
xchg
sbb
pop
cltd
mov
adc
cli
cmp
mov
mov
aad
mov
adc
mov
and
inc
mov
cmpsb
loope
iret
and
sub
push
xchg
je
mov
scas
and
sbb
lahf
nop
sub
push
imul
in
jnp
out
cltd
or
xchg
sub
icebp
test
jle
test
decl
sbb
jge
fimuls
call
cltd
xor
int3
xchg
add
inc
jae
repz
or
add
inc
cmpb
mov
aad
pop
daa
fisubl
ds
popf
cmp
sbb
pop
push
shll
pop
mov
fpatan
xchg
sub
imul
repz
and
mov
push
or
xorb
fucomip
enter
loopne
push
push
rep
cs
repnz
daa
or
mov
jl
mov
push
xchg
in
sahf
daa
pop
ds
into
pop
push
sahf
mov
incl
les
mov
lock
mov
inc
es
and
movsl
stos
into
lcall
sahf
popa
mov
lods
xchg
dec
xchg
test
lret
in
mov
jmp
hlt
shl
mov
push
ss
repnz
cmc
jg
stc
cld
test
cmpsb
stos
adc
inc
mov
decl
sarb
cmp
aad
icebp
xchg
jge
sbb
out
inc
mov
jb
cmc
pop
cld
das
push
or
or
and
mov
aam
jmp
sti
fwait
sti
out
pop
loopne
mov
jnp
mov
inc
imul
inc
cltd
xchg
insl
ret
std
mov
jg
push
push
mov
or
sahf
and
mov
mov
mov
push
inc
or
lock
fsubrp
rcrl
mov
inc
out
lods
xchg
mov
mov
inc
outsb
add
repnz
outsb
dec
xchg
push
sub
adc
rclb
mov
pop
lcall
lahf
or
cmp
incl
lcall
fdivrl
cltd
add
fstp
and
cli
mov
test
ret
hlt
mov
ljmp
lea
dec
sbb
jnp
pop
jg
inc
in
aas
iret
or
lock
cli
stc
subb
sub
add
sarb
enter
dec
ret
idiv
lcall
cli
outsl
jne
jge
push
or
loope
hlt
lods
adc
not
fs
or
shl
inc
ljmp
les
hlt
adc
loopne
and
pop
lret
and
pushl
mov
mov
aaa
movsl
iret
arpl
scas
push
shrb
insb
mov
jmp
xor
push
call
in
jno
pop
loopne
jle
lcall
lds
or
in
xlat
mov
sbb
xchg
push
push
add
inc
jp
repnz
xchg
jnp
fnstenv
sti
or
jg
jb
shrl
pop
iret
jge
movsl
cmp
sti
test
add
out
pushf
cmp
pop
or
cmp
call
mov
mov
pushl
push
push
stc
adc
xchg
adc
repnz
clc
pop
dec
sarb
push
and
mov
decl
decl
dec
jle
xor
mov
ror
xchg
addr16
sbb
pushl
je
icebp
adc
call
test
les
mov
mov
dec
in
aaa
clc
decl
xchg
xor
dec
jnp
jae
or
aaa
xor
lea
shll
sbb
ljmp
mov
in
mulb
cs
mov
pop
pop
mov
gs
and
jmp
push
nop
sub
aas
pushf
push
mulb
jnp
xor
call
lods
mov
js
xor
mov
mov
sarb
and
arpl
hlt
push
daa
movsl
lods
lret
dec
jl
les
lock
lcall
sbb
movsb
js
push
add
ljmp
pushl
cli
outsl
lret
jb
lret
stc
clc
push
xor
fs
push
stos
loopne
incl
mov
or
add
dec
in
pop
mov
push
jno
mov
cmp
xlat
pusha
cmp
mov
mov
jg
pop
movsb
lcall
pushf
sbb
jns
decb
jp
icebp
jg
shll
sub
fcomi
pusha
sbb
decl
movsl
mov
leave
mov
dec
fstpl
pop
inc
push
jmp
loop
sti
lods
in
jns
sub
sbb
in
jno
pop
int3
mov
ljmp
sbb
sbb
clc
test
daa
sub
dec
inc
jmp
inc
std
pop
ljmp
mov
outsl
mov
mov
decl
dec
mov
or
sbb
pop
jle
stos
mov
sub
cmp
repz
add
jns
sarb
inc
fsts
in
pop
mov
or
arpl
lahf
lods
jns
clc
shr
mov
test
adc
and
or
icebp
out
push
add
cltd
push
mov
std
cmp
inc
xchg
insb
or
pop
aas
xchg
push
dec
movsl
and
lahf
xchg
pop
fimull
push
idiv
call
pop
subl
pop
push
xor
fldl
stos
mov
mov
test
in
aas
nop
js
ficoms
mov
in
jnp
les
jmp
out
aam
es
test
sbb
mov
loop
or
jg
or
inc
or
in
dec
movsb
das
sub
pop
aaa
movsb
adc
dec
call
push
sub
mov
xchg
test
dec
cmp
pushl
bound
mov
out
add
dec
cli
arpl
mov
sub
xor
jnp
jg
or
mov
xlat
or
and
pop
lock
lret
pop
pushl
fists
lahf
dec
faddl
lds
add
push
dec
cld
pushl
imul
fstl
jg
addr16
out
or
sbbb
add
pushl
adc
dec
mov
dec
adc
inc
test
clc
add
in
lcall
les
loop
movsl
pop
sbb
sbbb
xchg
aad
jmp
rorl
jmp
dec
xor
idivb
xchg
test
rcrl
mov
das
fmull
sbb
sub
int3
pusha
lcall
inc
mov
sbbb
mov
lret
repnz
rcrb
out
dec
cmpsb
in
loop
decl
scas
iret
sub
jg
mov
cmp
out
xchg
xlat
jl
popa
xchg
mov
sbb
lock
and
pop
xchg
stc
in
pop
sub
incl
push
xor
push
xchg
inc
mov
cwtl
xchg
add
cmp
shll
lahf
pop
sub
mov
movsl
push
inc
lcall
les
arpl
js
sbb
inc
shr
xor
jl
xlat
push
xchg
add
sub
push
lock
roll
es
xor
dec
idiv
adc
xor
push
mov
sbb
rcrl
cli
and
dec
cltd
aas
push
mov
cmpsl
sbb
clc
rorl
cs
ljmp
pop
rol
inc
push
mov
push
sbb
andl
fwait
pop
cld
sti
push
pushl
hlt
mov
add
adc
inc
jae
shl
rorb
inc
decl
test
mov
adc
jo
rolb
mov
pop
xor
sbb
jg
call
sbb
mov
ret
mov
mov
adc
adc
mov
sar
cmp
nop
roll
sub
cs
fidivs
cmp
jg
ds
lods
fcomps
jg
mov
movsb
mov
addr16
push
xchg
jne
andl
sub
mov
mov
inc
mov
pop
les
mov
dec
jnp
add
adc
dec
fadd
lret
jnp
xor
mulps
push
cmc
ljmp
insl
in
ss
lock
pop
jp
mov
inc
jg
ljmp
out
sub
sbb
or
jmp
jb
outsl
add
and
jns
imul
dec
push
jnp
xchg
inc
push
fbstp
mov
clc
push
cmp
and
xchg
pop
add
ja
test
inc
scas
sbbl
mov
ljmp
hlt
addr16
lods
outsl
lds
cs
and
sub
lea
jb
scas
dec
mov
or
jge
daa
int
cmp
in
mov
and
fildl
inc
mov
outsb
fnsave
pushl
dec
mov
inc
lahf
ss
das
jb
xchg
or
mov
sahf
cmp
cld
imul
push
lea
orl
add
nop
in
pushl
shll
mov
data16
jp
push
fimull
fnstsw
push
mov
imul
jns
inc
test
mov
add
pop
xchg
leave
fs
mov
fisttpl
repz
call
jmp
rcrl
or
into
pop
cmp
out
xchg
call
or
jmp
or
dec
add
sbb
cli
decl
fisttpll
mov
xor
and
add
into
or
pushl
or
cli
cltd
lret
aas
fbstp
test
cmp
loope
sbb
push
ficoml
outsl
icebp
ljmp
dec
in
roll
xchg
scas
sub
stos
loop
aad
incl
aaa
bound
outsl
pushl
push
or
mov
pusha
push
push
popa
loope
inc
fucomip
jmp
mov
lret
cmp
add
mov
jmp
inc
xchg
sbb
jnp
clc
decl
int
int3
and
lahf
pop
mov
pop
arpl
notb
jp
pushl
lock
shr
sbb
lcall
rorb
push
mulb
scas
or
push
sbb
call
push
addr16
pushf
add
push
lahf
int3
cmp
hlt
cmc
add
or
jle
sahf
call
in
push
fs
push
iret
cmpsl
adc
testl
hlt
inc
shlb
cmp
pushl
sub
xchg
mov
push
add
call
mov
xchg
jb
mov
jle
fcomi
jnp
mov
sbb
test
adc
jmp
incl
jmp
push
mov
sbb
shll
pop
jp
adc
mov
adc
psubq
pushl
orl
aas
clc
and
mov
sub
cmpsb
add
test
xchg
lcall
cld
test
add
shr
or
xor
movsl
cmc
add
jg
add
in
subb
mov
mov
or
mov
xchg
into
sub
fldl
aad
loope
mov
xor
loop
test
push
mov
sub
daa
dec
mov
in
mov
jne
ljmp
dec
shll
or
and
insl
mov
rcrl
mov
jmp
in
push
add
pop
cmpsb
push
rol
cwtl
mov
pop
xorb
shll
fcmovnbe
jecxz
shlb
mov
push
dec
xor
orl
cmpsb
aad
xor
push
aas
movsl
mov
hlt
call
jg
inc
mov
xchg
add
inc
mov
cwtd
and
ljmp
sub
sbb
push
add
mov
loopne
xchg
adc
jne
dec
xorb
push
and
xor
ret
push
into
cld
cmpsl
orb
lcall
das
mov
pop
jmp
scas
xor
aad
mov
add
faddl
imul
pop
cld
cmpsb
pushl
lods
sbb
pop
test
xchg
fstl
jno
adc
pop
jnp
or
int3
push
xchg
cmp
imul
es
stos
push
jb
lret
ljmp
push
inc
lret
inc
mov
inc
int
insl
lock
or
call
clc
sbb
shll
loopne
repz
push
push
call
or
sbb
mov
in
std
decb
lcall
lods
inc
pop
push
dec
add
imul
loop
mov
stos
add
mov
outsl
cmc
jmp
loop
xchg
inc
inc
sub
fimull
inc
mov
xlat
mov
pop
ljmp
or
inc
sub
icebp
or
rorb
test
xor
pop
notl
lods
mov
icebp
pop
rolb
jmp
xchg
push
shll
sbb
out
jnp
ljmp
jecxz
scas
dec
cmp
xor
int
sbbl
cltd
add
negl
fwait
push
fildll
hlt
ljmp
scas
insb
sahf
mov
shrl
stos
nop
decl
les
cmp
push
lcall
xorl
sbb
decl
inc
mov
in
je
dec
test
cmp
arpl
mov
jl
decl
cld
test
idivl
mov
call
xor
loopne
rorl
pushl
lock
mov
mov
js
dec
mov
inc
jl
jg
rolb
clc
mov
stc
int3
adc
jl
cltd
das
aam
cmpsl
pop
pop
ljmp
cli
mov
add
adc
inc
in
push
lret
out
mov
lds
xchg
mov
leave
xchg
or
xlat
outsl
sub
loop
or
mov
jl
sbb
or
lcall
adc
les
aam
add
xchg
shlb
daa
pop
adc
into
mov
loopne
mov
outsl
xor
lcall
fistl
cmpsb
lods
push
js
in
push
cmovae
hlt
fistpll
jbe
jle
sub
ja
pop
daa
adc
lea
sar
pushl
inc
in
pop
mov
fs
scas
jae
jne
and
lret
mov
push
fildll
insl
insl
fstps
loop
sub
or
sahf
cmp
mov
jecxz
or
insb
std
imul
or
lock
lods
mov
jg
std
pop
fdivl
sub
or
mov
jmp
jg
outsl
fcomip
je
add
aaa
incl
dec
push
mov
mov
jg
in
lret
push
xor
jns
pop
out
aaa
jg
sub
imul
cmp
repz
xchg
add
mov
fs
loopne
insl
jecxz
and
pop
lods
mov
icebp
in
outsb
mov
int3
jmp
or
test
adc
xor
mov
lock
loop
dec
push
xchg
and
sbb
inc
pop
ljmp
mov
lods
std
js
cmc
sub
in
test
cmp
test
mov
dec
dec
cwtl
and
outsl
xor
ss
pushl
mov
cmc
cmpsl
ja
inc
out
add
aad
in
es
ljmp
lahf
lds
pusha
fucom
inc
inc
cmpsb
xchg
fstps
test
dec
mov
pop
popf
arpl
lcall
mov
fisubl
cmpl
ror
xchg
dec
sub
fisubrl
cmp
aaa
mov
mov
jno
jo
mov
mov
rorb
push
push
pop
test
jg
push
insb
mov
jns
push
mov
jnp
adc
mov
mov
out
call
inc
push
xor
cmpsb
cmpsl
jge
push
jb
cmc
mov
lock
adc
outsl
hlt
jmp
xor
hlt
stc
inc
scas
cmp
scas
sbb
cmp
ret
lcall
jmp
push
sar
xchg
outsl
clc
mov
push
sbb
mov
inc
movb
dec
fdivr
fbstp
cmpsb
pushf
negl
into
mov
mov
out
push
sub
sbb
pushl
sti
inc
std
nop
repz
push
roll
inc
xchg
xchg
sti
data16
outsl
cmc
pop
ljmp
pushf
daa
xchg
fisttpll
idiv
mov
inc
xor
gs
ja
jae
loopne
sub
andl
jmp
cli
std
iret
cld
or
daa
sbb
mov
lcall
aaa
cmp
loopne
dec
adc
inc
fwait
or
pop
shrb
lea
cli
frstor
call
mov
ds
leave
repnz
cs
jb
call
pop
clc
in
outsb
ja
mov
mov
ja
loop
ljmp
mov
pop
jno
pushl
imul
nop
cmp
pop
fwait
int3
xorb
xchg
clc
pushl
je
inc
call
adc
add
jge
or
test
or
aad
mov
fdivl
cwtl
cld
insb
pushl
mov
outsl
mov
cmp
push
mov
cld
or
cli
ljmp
fstpl
push
lods
pusha
jns
inc
pusha
test
jg
xchg
movsl
data16
add
xchg
cmp
adc
sub
jle
pop
pop
push
mov
sbb
mov
fstpt
xor
mov
les
dec
ss
daa
sbb
dec
sub
mov
pushl
and
es
jb
push
mov
or
icebp
mov
jae
xor
and
push
sub
in
or
add
and
add
lret
std
mov
pop
in
pusha
inc
adcl
repnz
push
push
ret
ss
stos
cs
xchg
loop,pt
in
xor
sbb
inc
jns
xchg
daa
fcoml
cltd
out
jb
add
dec
cli
sarb
add
movsl
sub
jno
mov
mov
pop
mov
sub
mov
xchg
cli
jg
add
mov
inc
lret
pop
jge
cmp
repz
into
sahf
addr16
stos
ret
push
mov
fstp
call
enter
or
pusha
jnp
adc
out
aas
mov
out
xor
sar
mov
outsl
add
lcall
xor
in
adc
pusha
aaa
ss
in
shrb
ja
gs
sub
sub
add
xchg
push
push
cmpsl
cwtl
mov
jmp
imul
pop
je
movsb
popf
cmp
xor
jmp
pop
dec
mov
mov
cmp
push
xor
mov
hlt
dec
push
pop
mov
stos
aam
mov
push
add
cmp
mov
hlt
adc
out
clc
call
pop
xchg
insb
fwait
mov
lods
scas
sarl
test
jnp
or
mov
and
mov
cmpsl
inc
cld
cmc
mov
dec
mov
pushl
fldl
cmpb
out
bswap
addr16
sbb
jle
mov
and
jns
incl
fidivs
jmp
sbbb
and
mov
lods
sub
arpl
idiv
ljmp
xchg
sub
movsb
and
push
cmp
dec
cld
sbb
pushf
jmp
insl
ss
incl
jnp
push
mov
pop
and
sbb
leave
jecxz
sarb
push
int3
mov
mov
xor
cld
icebp
jp
orl
decl
cmp
sti
aas
dec
shr
jl
sub
dec
faddl
aad
pop
call
mov
xor
or
push
sbbb
adc
mov
and
shl
fwait
ljmp
mov
jno
movsb
out
dec
and
mov
inc
sbb
pop
push
cld
incl
push
stos
or
stos
nop
jns
inc
fsubrl
jae
idivb
ret
lods
stc
es
das
mov
movsl
fdivrs
leave
mov
pop
inc
sbb
mov
fldenv
cwtl
roll
js
outsl
sbb
aam
lods
sub
xor
sarb
cmc
cmpsl
jecxz
loopne
inc
xorl
lret
add
xchg
jmp
push
ss
add
adc
inc
inc
push
sbb
nop
aam
es
lret
pop
sub
nop
lods
mov
jnp
jno
adc
xorb
push
daa
jbe
cmp
cld
das
ljmp
dec
cld
hlt
sub
sub
fildll
subb
js
add
push
popa
dec
inc
pushl
and
xor
into
aam
loop
xor
mov
sbb
add
cmpsb
adcb
and
cmp
cmp
sbb
fbstp
test
xchg
sbb
add
inc
shlb
add
call
ret
ss
fidivrs
dec
and
addr16
xor
jl
filds
lcall
mov
xlat
fsts
add
mov
je
mov
push
rorb
sub
pushf
mov
and
sbb
mov
mov
insl
orb
and
mov
lods
inc
in
push
or
or
pop
into
fld
inc
inc
mov
loop
idivb
test
xor
aad
scas
js
cmp
fists
clc
and
shl
add
inc
pop
ss
add
ret
test
pop
or
and
sbbb
mov
sbb
pop
in
add
cmpsb
pop
sbb
test
test
cmp
gs
or
or
jle
cmpl
jns
sbb
cltd
shlb
pop
nop
mov
mov
push
pop
xchg
cmpl
mov
push
fwait
mov
add
je
loope
pushl
cmc
cmpsl
daa
adc
add
push
jecxz
jp
add
push
imul
incl
mov
pop
add
add
xor
fdivrp
call
sbb
or
mov
xchg
std
stos
sub
jg
or
mov
aad
addb
imul
sub
loopne
in
mov
or
add
inc
ret
or
loope
sti
incl
jecxz
mov
gs
mov
mov
and
shrl
jo
scas
cmp
push
jg
fadds
sub
inc
inc
aam
jno
outsl
cld
sbb
mov
and
mov
cmpsl
push
pusha
add
add
scas
shl
jmp
xchg
imul
inc
mov
add
dec
add
sahf
push
lock
fldt
or
add
dec
icebp
dec
insl
in
adc
push
mov
xlat
dec
push
addl
adc
sub
jne
sbb
or
std
sbb
cmp
xchg
or
in
das
fstps
sbb
in
pop
xor
dec
mov
add
or
out
sbb
scas
mov
add
xchg
aas
push
mov
out
sub
inc
jne
lods
dec
pop
fs
outsl
outsl
jl
mov
sub
and
dec
inc
xchg
push
lahf
sbb
in
shll
inc
subb
add
and
mov
idiv
mov
stos
test
rcrb
sub
jno
cli
or
outsl
pop
stos
insb
and
data16
lea
add
inc
lds
adc
in
or
xchg
adc
add
imul
xor
pop
daa
lods
xchg
or
adc
fildll
xchg
es
cmp
add
loop
clc
sbb
fcmovnu
inc
lahf
ret
jno
and
xor
clc
jecxz
ja
loopne
bound
push
mov
sbb
jno
popf
push
decl
mov
insb
sub
loope
aaa
fcompl
icebp
pop
jl
add
add
jg
jbe
push
add
cmpsb
sbb
int3
and
add
js
js
loop
sbb
and
and
mov
xlat
push
aad
loope
daa
fistpl
aad
and
cmp
aad
push
dec
adc
push
sbb
push
pop
sub
js
mov
sub
xor
repnz
ljmp
sarb
sub
add
mov
cmpsb
cld
push
jecxz
sub
mov
shll
lods
scas
xchg
int
repnz
fildll
jmp
shlb
popf
adc
fldl
jb
pop
mov
das
ss
mov
jmp
mov
subl
std
add
and
push
xchg
mov
xchg
cs
fisttpl
sub
mov
test
fbstp
add
fs
add
mov
leave
mov
call
push
and
adc
cmpb
inc
sbb
cmp
leave
cld
push
shll
add
add
dec
sbb
add
shrb
inc
aad
stos
or
add
test
adc
mov
incl
sarl
mov
dec
pushf
icebp
xor
outsb
mov
mov
mov
mov
or
sbb
cmc
daa
cli
sbb
mov
push
fsts
lds
pushf
jg
in
mov
and
dec
mov
movsl
ret
dec
lea
lods
mov
cli
pop
jbe
out
lock
xchg
clc
pop
outsl
xchg
ss
pop
int3
add
xlat
hlt
lea
cmp
adc
add
and
dec
dec
ja
cld
cmp
xchg
xor
dec
scas
and
inc
ss
hlt
xchg
push
popf
xchg
mov
scas
sub
lock
xlat
fucomi
mull
add
jmp
lods
addl
decl
add
test
mov
lret
jl
jmp
pop
and
test
xor
or
xor
mov
inc
mov
or
push
push
mov
les
das
addr16
jo
sbb
jb
mov
test
jg
pusha
repnz
test
insl
xchg
nop
xlat
rcl
jmp
rolb
movsb
and
inc
lahf
pusha
mov
pop
stos
mov
imul
pop
jecxz
inc
mov
cmc
hlt
aam
ret
fistps
dec
or
std
fcom
cld
repz
je
cmpsl
inc
push
jbe
aam
sbb
add
xchg
or
shrb
ret
xchg
fisubs
fidivs
jge
push
ss
in
outsb
mov
push
sub
nop
push
adc
adc
pop
scas
pop
mov
das
push
jbe
stos
loopne
mov
adc
mov
lret
popa
fisttpl
mov
add
outsb
xchg
add
outsb
daa
xchg
lcall
push
or
imul
adc
scas
or
in
or
fcmovnu
call
xchg
mov
xchg
dec
fwait
sub
cmp
inc
arpl
hlt
lcall
sub
test
jge
loop
push
lret
mov
scas
add
stos
xor
lock
xchg
push
mov
adc
jo
roll
mov
out
or
mov
int3
in
and
inc
mov
testb
fistl
ret
cwtl
test
inc
pop
mov
mov
dec
push
push
dec
push
lret
push
inc
sti
int
add
pop
int3
and
push
mov
mov
cs
bound
lock
call
fcomip
ljmp
pusha
mov
mov
mov
inc
lock
dec
xor
jo
loop
jg
ja
add
fldenv
fadds
outsl
fstpl
fidivrs
xchg
push
imul
xchg
mov
loop
sbb
les
pushf
pusha
icebp
xchg
lea
jle
ficomps
adc
or
mov
xchg
movsb
ret
pop
jmp
outsl
pop
popf
add
dec
lea
leave
inc
and
mov
mov
aaa
sbb
jbe
xchg
lods
sbb
ljmp
inc
xchg
push
cmpsl
and
das
cld
jg
outsb
imul
sbb
push
rcll
dec
aam
pop
jmp
push
lock
enter
cs
insb
mov
ss
pop
imul
dec
mov
pusha
lcall
mov
cli
inc
inc
and
pop
jg
mov
inc
popl
xchg
inc
loope
sbb
jp
imul
and
inc
popf
sbb
jnp
or
orb
xchg
jno
js
lock
lea
fisubrl
or
lcall
jbe
mov
xchg
mov
or
cmp
testb
aaa
cmp
punpcklbw
pop
cmpsb
push
pop
dec
fwait
mov
neg
lret
cmc
faddl
inc
add
cmp
xor
dec
jge
mov
ljmp
mov
fmuls
les
pop
ficoms
pop
js
hlt
es
jp
xlat
in
ret
dec
leave
xchg
and
mov
rcrb
int
mov
clc
ret
mov
fmuls
pop
mov
sbb
out
push
out
xchg
mov
mov
js
add
mov
jge
pop
cli
sub
lcall
arpl
pop
mov
clc
mov
mov
jle
jnp
jmp
mov
ret
inc
fdivrs
push
push
mov
or
adcb
stos
add
out
call
and
mov
fists
fildl
js
inc
in
add
mov
js
shr
xor
popa
mov
pop
sbb
jbe
pop
mov
jmp
iret
xchg
add
or
xlat
and
sbb
jbe
cmp
addr16
add
mov
inc
lea
add
das
add
arpl
in
jl
imul
repz
or
push
sbb
jmp
jle
insl
pop
sti
ljmp
sub
xchg
xor
dec
scas
adc
flds
pop
js
test
jb
xor
imul
ljmp
or
add
push
dec
xchg
loopne
dec
cwtl
cltd
mov
jg
outsl
push
lret
sbb
xchg
in
notl
out
pop
dec
ficoml
ret
lahf
xor
inc
icebp
inc
out
pop
sub
aas
add
icebp
xchg
mov
and
mov
repnz
outsl
addr16
add
in
mov
mov
sbbl
add
add
add
add
stos
gs
call
call
cmp
and
inc
mov
hlt
call
sub
clc
lret
test
pop
call
mov
push
int
dec
sub
xchg
and
sub
sar
pushl
cld
cmp
test
adc
pusha
and
add
into
push
mov
nop
xor
imul
or
lahf
xor
popa
mov
insl
jle
insb
lock
xchg
shlb
inc
sbb
add
test
addr16
orl
jg
pop
fdivs
std
cld
sbb
pushf
dec
fidivrs
mov
add
add
loope
call
aaa
call
incl
ret
or
pop
inc
lds
cld
fisubrs
aam
inc
or
mov
xchg
bound
inc
repz
mov
xchg
enter
sbb
adc
cmp
xlat
cmp
cmp
mov
xchg
xchg
test
test
sbb
cli
daa
jge
or
mov
adc
mov
dec
out
jnp
insb
lea
iret
inc
les
inc
rcrb
lods
xor
movsl
paddusb
rclb
loopne
cmc
inc
ficoms
mov
add
ljmp
push
std
jg
sbb
in
push
outsl
cld
negb
mov
xor
ds
out
pop
add
xor
out
loop
fbld
xchg
jne
shl
push
jl
fwait
add
insb
jle
stos
hlt
pop
stc
or
pop
rcll
dec
xor
mov
push
pushf
mov
rolb
and
lods
sahf
adcl
popa
jmp
test
cli
jbe
inc
icebp
insl
sti
push
xchg
aaa
push
lahf
out
in
pop
dec
dec
inc
or
ja
popf
xlat
in
or
subb
adcb
add
mulb
add
sub
mov
sarb
out
or
and
test
jbe
test
sahf
push
into
pop
xchg
sahf
sbb
mov
or
dec
shlb
or
dec
fdivrp
ret
imul
pop
add
mov
js
sbb
and
insl
inc
jp
ret
in
push
mov
stc
test
hlt
lods
les
sub
pop
bound
add
add
clc
insl
xchg
cli
scas
xor
add
icebp
das
dec
out
mov
and
js
es
xor
sub
insb
fmuls
and
inc
fisttps
sbb
mov
push
fsubl
push
fs
popf
icebp
mov
sbb
je
and
sub
gs
je
pop
or
out
addr16
inc
sub
add
dec
fiadds
pushf
leave
je
jle
push
pop
sub
push
jno
cmp
mov
scas
push
pop
or
js
out
arpl
push
rorb
pop
push
mov
fwait
call
mov
mov
mov
sti
popl
or
mov
push
sarl
sbb
pop
iret
adc
jo
mov
shrb
lahf
jo
cmp
movsl
cli
aaa
ds
inc
and
hlt
aam
shll
in
aaa
mov
push
jmp
daa
test
incl
dec
adc
sub
hlt
dec
in
repnz
xchg
mov
imul
jne
sub
lds
cmpl
xchg
test
mov
pop
daa
incl
push
xchg
mov
xor
repz
movsl
fdivl
ret
in
cmpb
push
test
lret
cmp
stc
lods
bound
inc
push
mov
push
roll
jbe
and
cmp
fdivl
inc
dec
out
inc
and
dec
enter
lock
aas
sahf
out
dec
aad
sbb
inc
mov
outsl
adc
movsl
sbb
jns
push
rcrl
inc
jmp
stc
xchg
mov
aaa
cmpsl
std
mov
jge
in
sub
mov
mov
and
mov
das
or
or
push
aaa
push
adc
das
xchg
sti
insl
mov
bound
push
mov
das
shlb
cld
call
shl
lock
out
sbb
pop
addb
test
jmp
push
pop
rcrb
cmp
ss
faddl
add
aaa
mov
push
incl
aaa
sbb
ss
in
pavgb
xchg
popa
xor
inc
lds
fisttpl
jecxz
inc
push
cmpsl
and
mov
pop
rorb
fistpll
push
fwait
pop
popa
lcall
loope
xchg
sub
inc
jns
sub
push
inc
or
cmpsl
sub
pop
sbb
mov
mov
outsb
scas
hlt
lcall
mov
ljmp
adc
add
push
xor
pop
cs
mov
add
mov
divl
divl
into
pop
jo
or
cmp
test
push
mov
and
mov
scas
aad
sbb
xchg
pop
loop
or
add
xchg
imull
repnz
pushl
cld
in
cmc
push
cmpsb
aas
push
adc
iret
add
adc
sub
ljmp
lods
adc
inc
and
and
add
mov
test
add
lret
mov
fistl
iret
mov
dec
mov
mov
jbe
push
add
adc
sbb
imul
in
xchg
lahf
mov
loop
aam
add
fwait
cmp
in
mov
pop
pop
xorb
adc
imul
or
push
cli
sub
sbb
outsl
add
test
cmp
cmp
dec
pop
inc
xchg
in
lcall
scas
jbe
mul
js
shl
mov
push
enter
cltd
and
leave
adc
pop
inc
push
jp
lahf
movsb
adc
mov
mov
fdiv
pop
dec
mov
mov
icebp
jg
cli
addb
pushf
xchg
lahf
test
inc
fildll
push
sbb
jnp
sbb
sub
mov
push
mov
cmc
cs
scas
dec
adc
inc
or
mov
push
rorl
pop
clc
movl
nop
stc
js
xchg
out
add
ret
out
inc
insb
adc
mov
and
and
jg
push
mov
mov
cmp
int3
sub
ljmp
and
pop
push
addl
fsub
clc
decl
add
jns
push
mov
sub
sub
xchg
call
or
pop
rorb
or
xlat
jmp
ss
lcall
sbb
jg
outsl
aaa
sbb
push
ja
xor
and
xchg
mov
sbb
ret
mov
mov
das
shrl
fistpl
fs
inc
pop
jl
aad
sub
pop
push
dec
pusha
cld
ja
sbb
mov
jmp
in
jbe
testb
cli
fs
outsl
scas
lea
pop
pop
clc
aaa
pop
inc
pop
sbb
and
ljmp
outsl
icebp
ds
mov
inc
ret
rcrb
xchg
cli
sbb
mov
rorb
cmpsl
xor
sbb
push
mov
and
shrl
leave
mov
sub
mov
push
jle
sbb
dec
push
push
pop
and
roll
sbb
pop
cwtl
mov
hlt
and
lods
divb
out
dec
cs
jl
lods
hlt
jp
aad
jae
je
iret
push
mov
outsb
pop
inc
mov
pop
dec
inc
cmp
loope
sub
jne
ljmp
lret
pop
or
xchg
in
add
sbb
mov
fistps
adc
cmpl
mov
pusha
ficoms
in
or
jl
mov
jp
or
push
test
xchg
and
mov
loop
sti
push
es
xor
mov
mov
pop
leave
inc
adc
repnz
sbb
incl
loope
inc
push
add
fsubp
test
push
incb
cwtl
iret
lret
andb
clc
fildll
xorl
mov
filds
std
push
mov
aad
mov
ficomps
xorb
pusha
popa
mov
dec
cmpl
adc
adc
and
daa
push
mov
lods
sti
repz
and
jo
sbb
or
jl
jl
inc
hlt
ljmp
shrb
insl
ljmp
jp
pop
push
or
orb
pushf
and
fs
hlt
lock
icebp
xchg
fstpt
jo
das
sub
sbb
xor
mov
sub
mov
push
cld
test
hlt
adc
sub
xchg
mov
pop
jmp
mov
daa
test
xor
pushf
std
jmp
adc
xor
inc
xor
jg
sbb
mov
inc
and
or
shl
fmul
scas
cltd
sbb
pop
sub
pop
clc
out
jne
insl
popa
es
adc
clc
mov
dec
outsb
or
aad
data16
xchg
rcrl
insb
xchg
out
rol
aaa
mov
dec
inc
jne
jb
sbb
lea
bound
adc
stos
or
or
pop
int3
mov
orb
fldenv
jb
ds
sbb
jbe
pop
inc
cmp
push
jae
jp
lret
inc
add
and
push
jnp
mov
pushf
test
pop
mov
popf
cmp
mov
push
stos
andb
inc
pop
inc
clc
addl
nop
push
pop
test
add
push
jmp
push
jmp
fbstp
pushf
lret
mov
lea
mov
loopne
sbb
outsb
and
fistpll
adc
push
mov
int
mov
inc
lds
sahf
and
subb
arpl
imul
inc
loop
call
shll
fcmovnb
mov
or
xor
scas
popa
mov
sub
dec
xchg
pop
in
and
push
or
or
outsl
cld
sbb
gs
xlat
lcall
mov
pop
lods
fisttpl
adc
push
pushf
mov
mov
add
nop
roll
lds
xor
clc
jg
inc
mov
adc
inc
fadds
xchg
or
subl
mov
fdivrl
popa
mov
mov
add
push
test
lea
sbb
mov
jns
jecxz
outsb
test
sub
jmp
jp
test
or
and
repnz
mov
std
movsl
sub
cmpsl
int3
pusha
dec
daa
and
pop
fidivrl
outsl
lock
fdivr
xor
add
push
lcall
mov
repnz
in
mov
jmp
aaa
push
or
loopne
pop
leave
enter
push
loop
sub
add
sbb
fstl
mov
in
or
and
push
cmp
outsl
push
mov
jge
pop
mov
ret
outsl
jg
addb
xor
mov
xor
imul
mov
sbb
pop
fs
pop
inc
fmull
movsl
aad
dec
adc
mov
pop
sub
dec
cmp
adc
or
loopew
jp
andl
int3
add
pop
clc
pop
or
mov
arpl
cmovne
jle
ror
xor
jb
or
in
ret
adc
push
pop
push
lcall
out
mov
xchg
xor
and
lock
jb
inc
loope
mov
dec
add
imul
sbb
pop
call
xor
call
fistl
push
imul
inc
dec
imul
or
adcl
jle
jo
mov
daa
mov
sbb
lods
cwtl
sbb
in
push
xchg
xchg
clc
sti
fnstcw
and
xor
pop
out
ret
es
cmp
movb
jmp
ja
or
test
ret
sub
pop
push
pop
add
icebp
xor
rcll
ljmp
mov
adc
push
lock
sbb
xchg
xor
in
pushl
xchg
in
adc
push
push
push
mov
lcall
sbb
cli
iret
adc
and
lods
aas
addr16
fstl
lea
outsl
cld
stc
fwait
insl
push
fs
pop
push
cld
lods
and
mov
mov
arpl
inc
cld
xchg
mov
ss
nop
mov
loop
pop
cmp
and
adc
fnstenv
xor
scas
xor
or
jp
outsl
sbb
inc
jecxz
stc
push
int
jmp
and
nop
mov
nop
pop
stos
xor
pop
pop
scas
mov
cs
iret
aaa
xor
adc
into
jae
cwtl
cli
ljmp
ja
sub
pop
push
xchg
mov
hlt
sbb
aaa
and
stc
mov
aaa
mov
cmp
loop
xchg
jnp
xchg
mul
and
mov
dec
cmpsb
incb
mov
ficomps
scas
pop
clc
out
movsl
xlat
jecxz
ljmp
xchg
jae
xchg
icebp
orl
pop
cmp
xor
add
std
testb
mov
jl
xor
stos
xchg
jb
push
push
pushf
xchg
xchg
cmp
aaa
sahf
nop
decl
mov
push
mov
xchg
mov
cmc
xor
or
sbb
es
pop
popf
push
inc
dec
aad
repz
xlat
cs
test
and
aas
sub
pop
sbb
mov
add
clc
push
xchg
divb
cmpsb
xorb
or
jge
vinserti32x4
insl
fdivrl
and
add
adc
cwtl
fimull
jns
jo
fstps
sbb
jno
or
mov
mov
and
mov
jmp
das
mov
sbb
call
jmp
shrl
sbb
or
mov
aaa
xor
out
in
mov
mov
add
nop
leave
lret
sub
or
mov
mov
xor
push
js
clc
das
jne
push
out
jb
cmp
and
icebp
movsl
and
and
dec
mov
mov
loope
mov
rorb
jae
in
insl
loope
fmull
insb
push
lret
pop
repnz
aaa
lock
lcall
pop
mov
jp
jne
jg
adc
clc
inc
mov
push
sbb
insb
aaa
xor
inc
mov
xchg
sbb
xor
loopne
fbstp
mov
add
jmp
cltd
nop
out
fcompl
push
mov
hlt
in
bnd
push
push
add
mov
cmp
std
cmpsb
xlat
xchg
add
xor
inc
lret
mov
mov
movsl
or
jae
pop
lcall
out
cli
in
cmp
enter
or
leave
in
out
push
mov
xor
shlb
hlt
sbbl
xchg
sbb
sti
daa
mov
in
mov
cld
mov
mov
rcr
xor
jb
rcrl
dec
add
test
mov
jb
hlt
fwait
pop
js
sahf
pop
cltd
lock
jg
int3
gs
mov
clc
test
bound
dec
in
fmuls
inc
lock
mov
das
xor
scas
clc
in
mov
dec
xchg
sti
addb
fwait
pop
outsb
mov
or
or
hlt
inc
adc
mov
dec
popa
test
data16
mov
sbb
gs
sbbl
pop
jnp
adc
ret
sarb
mov
add
pop
push
outsl
adc
push
pop
fidivrl
stos
ds
cmpsb
mov
or
lahf
test
in
test
ret
adc
lcall
movsl
test
jg
cmc
push
mov
stos
push
mov
outsb
add
ss
dec
mov
ret
call
hlt
xchg
loopne
sbb
xchg
shr
jle
mov
inc
pop
lea
push
adcl
sbb
adcl
and
adc
dec
mov
call
fnstenv
jl
sbb
andb
and
push
add
idiv
int
mov
pop
into
sbb
addl
mov
push
movsl
scas
lock
in
mov
loope
xor
cmp
xor
add
fcompl
xor
fists
and
cmp
inc
hlt
popa
leave
sub
mov
jg
dec
fs
lock
mov
and
xchg
imul
jge
shr
pushl
jns
dec
insb
je
jl
or
jp
orl
add
inc
shr
or
sub
out
pop
stos
sub
dec
inc
lret
ret
mov
pop
and
dec
inc
nop
lcall
add
mov
incl
mov
test
sahf
sbb
lea
or
stc
lea
pop
jge
icebp
adc
pop
adc
ss
mov
aaa
adc
xchg
adc
lret
mov
and
xchg
in
das
mov
movsb
pop
frstor
arpl
pop
insl
or
lret
call
or
mov
cwtl
sbb
js
fistpl
fbstp
jp
or
and
mov
in
add
pop
loop
je
mov
lret
aam
call
mov
out
cmp
xlat
mov
mov
jo
test
insb
mov
insl
mov
mov
sub
popa
cmpsb
adc
pop
ds
in
pop
clc
inc
lcall
mov
in
dec
mov
bound
sbb
aas
and
mov
mov
pop
sub
mov
add
lcall
mov
loopne
loop
push
mov
cmpsb
sub
jae
adc
inc
outsl
or
jo
aaa
mov
call
ds
sbb
loop
in
jecxz
fyl2xp1
fisttpl
mov
adcl
cmp
test
mov
pop
inc
and
pop
inc
adc
cld
mov
pop
in
cmp
into
adc
adc
push
jge
lahf
subb
mov
mov
imul
lahf
dec
push
jle
xchg
sbb
aad
insl
sub
cmp
inc
and
push
push
ljmp
movsb
jo
add
mov
popl
add
jge
test
mov
clc
in
sbb
out
adc
adc
imul
nop
push
sbb
adc
cmpsb
fcmovnu
cli
notb
push
into
xchg
pushf
fstpt
xor
pusha
jo
add
repz
out
hlt
ret
and
movsb
add
or
adc
add
movl
rol
mov
add
dec
pop
cmp
pop
lea
jp
mov
push
lds
je
push
sub
add
and
xor
std
ret
subl
and
dec
outsb
mov
cmpsb
test
xchg
fs
jg
add
movsb
mov
fidivrl
and
sub
mov
xor
adc
mov
data16
shl
and
cmp
cmp
adcb
loope
mov
mov
mov
xchg
lods
outsb
mov
inc
inc
test
cwtl
imul
cld
movsb
out
stc
outsl
frstor
movsl
pushf
cmp
cmp
adc
call
popf
cs
in
mov
xlat
fwait
out
adc
sbbl
mov
lock
mov
fucomip
add
inc
movsl
xorb
xchg
mov
scas
push
jle
mov
sub
jns
jb
mov
mov
dec
mov
jmp
and
pop
clc
mov
dec
sub
out
xchg
mov
inc
jge
mov
outsl
mov
ja
add
mov
inc
cwtl
xchg
fisttpl
loop
outsl
call
pushf
repz
out
cmp
test
loope
jl
js
push
xchg
fsubp
movsl
mov
xchg
test
xchg
xchg
dec
add
orl
or
push
fdivr
or
clc
pop
cmp
or
in
repnz
imull
and
movsb
mov
cld
jg
cli
dec
push
push
loop
mov
xchg
js
add
clc
testb
cmp
bound
insb
jnp
stos
or
lods
aaa
push
shlb
mov
mov
pop
push
cli
dec
push
aad
sub
in
ret
imul
std
push
int
rcll
cwtl
push
mov
cmc
adc
lret
adc
insb
pop
mov
mov
faddl
or
mov
xchg
mov
pushl
mov
jnp
pop
sub
jp
or
mov
mov
nop
lods
dec
jo
cmpsb
mov
add
sbb
jbe
in
or
lock
cwtl
inc
add
inc
pop
mov
sbb
pop
inc
dec
enter
loope
addl
inc
call
sub
push
dec
jnp
mov
jmp
mov
lahf
sti
aam
ljmp
pop
sbb
or
inc
cmp
das
xor
add
aam
addr16
rcll
cmp
lock
test
mov
sbb
cwtl
mov
mov
sti
sub
test
lock
gs
mov
inc
jmp
jmp
mov
pop
dec
gs
jne
std
adc
inc
or
outsl
jmp
lods
lock
arpl
mov
push
sub
orl
mov
enter
lret
out
testb
xchg
fists
lcall
and
push
jo,pn
cmp
cmp
mov
lret
cmpb
cmc
shlb
aas
mov
adc
cmp
push
outsl
and
push
ss
cli
mov
and
mov
mov
cmp
inc
popf
test
call
idiv
out
cmp
jle
fld
movsl
xor
fbstp
fildl
lods
test
sbb
ret
shlb
push
mov
ret
mov
push
pop
push
add
adcb
sti
xchg
inc
xorl
sub
ficomps
mov
roll
mov
cmp
dec
ljmp
sbb
or
shrb
sahf
les
dec
cmp
xchg
xchg
clc
mov
movsw
cmp
lods
shrl
ljmp
jae
xor
or
test
mov
dec
push
roll
jg
pop
mov
out
test
out
loopne
jecxz
add
aaa
push
test
xor
jb
std
jg
loopne
roll
xchg
dec
sti
lahf
mov
mov
pop
or
pop
xchg
das
xor
mov
mov
jge
inc
push
jb
and
and
dec
or
push
shrl
mov
pusha
popf
arpl
mov
outsl
fildl
mov
call
dec
das
lock
jae
xor
rolb
ds
test
mov
inc
mov
or
je
and
shlb
and
ffreep
xchg
subb
inc
xchg
cmpsb
out
ds
ljmp
repnz
in
add
or
mov
cmpsl
sbb
jne
sub
add
loope
loopne
arpl
pop
xchg
incb
xchg
pop
clc
fildl
and
in
and
pop
adc
ljmp
fs
sub
inc
pushf
clc
lcall
mov
imul
lds
or
incl
pop
and
lock
pop
mov
movsb
es
decl
dec
cwtl
jnp
inc
sub
jle
sbb
adc
push
cmc
cld
aaa
outsb
fstpl
sub
inc
sub
sbb
jae
push
mov
push
sbb
imul
cmp
mov
inc
in
sub
pop
pusha
icebp
and
push
outsl
enter
das
cmp
sub
jp
cld
or
lret
or
or
mov
xchg
aam
push
stos
or
push
dec
sbb
xchg
pusha
and
clc
loop
lret
loopne
jecxz
std
or
mov
fs
dec
dec
lock
jg
adc
sar
xchg
mov
pop
add
mov
and
das
xlat
and
inc
je
sub
fildll
jge
scas
mov
jne
push
dec
testb
lea
mov
mov
add
lahf
fisubs
xchg
mov
rcr
loopne
lahf
sub
adc
xchg
sar
sbb
sar
int
imul
or
fcomip
sub
or
lret
add
sbb
mov
jg
lahf
adc
sub
lods
les
orb
popa
in
insl
sbb
cs
test
mov
adc
xchg
inc
loopne
movsl
mov
addr16
loope
dec
scas
or
cld
jg
pushf
lods
call
and
dec
mov
mov
mov
arpl
xor
mov
je
mov
mov
jmp
sbb
lcall
cwtl
das
pop
cli
sbb
es
mov
shll
jg
mov
std
jmp
mov
and
cmpb
test
sbb
xor
push
lret
ds
and
into
jecxz
jp
push
aam
and
js
enter
sub
dec
or
das
cltd
std
test
insb
sub
imul
movsb
jae
stos
out
movsl
dec
outsl
jae
push
adc
adc
cwtl
mov
aam
les
pop
or
out
insl
lret
push
pop
lahf
imul
int3
xchg
lcall
add
inc
pushf
mov
xor
push
xor
add
lahf
insl
cld
nop
push
sbb
loop
ret
outsl
and
lret
nop
jns
stc
pop
adc
xchg
add
cmp
movsb
sbbl
daa
sti
pop
mov
ja
xchg
es
cmp
aad
push
sbb
ja
or
iret
inc
enter
adc
push
adc
sbb
inc
fs
sub
mov
mov
fimuls
and
inc
xor
jne
mov
lea
daa
sbbb
jnp
pop
jmp
push
pop
add
add
jb
adc
xchg
lods
into
icebp
movsl
popf
outsb
fwait
adc
pop
jmp
ds
cmp
inc
mov
add
or
ret
fcoms
sub
fstpt
pop
push
push
sub
fmul
rorl
sub
adc
adc
lock
aas
imul
and
sti
daa
clc
lock
mov
aas
hlt
mov
add
imul
shl
push
xchg
insl
leave
aad
mov
fst
adc
add
fimuls
insl
adc
mov
xchg
sub
adc
adc
lret
push
pop
fucomip
dec
daa
inc
sub
push
ljmp
lock
lahf
inc
mov
dec
insl
pushl
repz
jo
add
cmpsl
mov
cli
inc
dec
mov
shll
in
mov
sub
cld
inc
add
or
add
xor
lds
mov
nop
sti
inc
xchg
mov
les
stos
add
aad
or
mov
ret
insl
jg
out
cmp
ror
ljmp
in
ret
sti
sbb
push
test
mov
dec
mov
push
jmp
push
inc
xorl
mov
fdivrp
not
adc
xchg
ret
pop
xlat
xchg
adc
and
jl
hlt
ror
test
sbb
pop
clc
mov
add
aas
sbb
pushl
cmp
pop
push
out
clc
fistps
fldenv
clc
xchg
or
cmp
mov
hlt
test
les
lods
pop
jl
mov
dec
jbe
imul
fwait
and
fidivs
fiadds
test
fwait
ss
xlat
stos
jns
push
fisubl
cmp
adc
insl
adc
add
lea
cmc
push
in
das
leave
cmp
test
cmp
mov
mov
leave
mov
decl
shl
lea
adc
xorb
dec
stos
jbe
outsl
roll
ja
imul
das
xchg
jmp
leave
xchg
divb
aad
xchg
lret
push
jmp
lock
or
push
ja
dec
cmpsl
test
movsl
inc
out
or
scas
mov
ja
sbb
push
dec
arpl
or
ret
cmpsb
js
aaa
push
jo
insb
aam
cmpsl
rcrb
cld
mov
push
sub
sbb
shrb
or
xchg
stc
test
lret
pop
addr16
incl
out
inc
bound
or
movsl
inc
mov
int
mov
dec
adc
mov
notl
lahf
cli
ss
inc
fldt
cmp
mov
test
js
loopne
ljmp
mov
dec
dec
imul
or
pop
shlb
loope
out
pop
outsl
adc
push
mov
or
daa
loope
scas
addb
cmpsl
adc
fcmovnb
adc
add
mov
imul
xchg
imul
cld
mov
je
loopne
mov
push
ja
ja
outsl
outsb
test
ja
bound
xchg
jg
xchg
arpl
inc
mov
repz
sub
pushl
add
sahf
popa
xchg
add
mov
out
mov
fs
jo
ljmp
mov
cmpsb
or
adc
aam
sarb
test
bnd
je
aam
and
dec
xchg
mov
pop
inc
cmp
shrb
cld
push
cmc
lahf
add
fcoms
test
lods
mov
icebp
loopne
pop
mov
mov
jnp
dec
movsb
test
std
fnstenv
movsb
pop
inc
dec
sbb
aaa
jne
sbb
das
mov
ret
push
test
push
mov
int3
xchg
out
cmp
lret
mov
clc
filds
ja
out
inc
test
push
lcall
and
mov
or
shrb
push
mov
fsub
rcr
pushf
inc
inc
jmp
sti
jg
jns
call
dec
cmp
xor
adc
sbb
mov
fwait
cli
das
xchg
and
mov
lods
aas
rcrb
cmp
xor
iret
push
sub
and
leave
lret
test
pop
mov
fisubs
xlat
inc
leave
cmc
addb
sarl
mov
or
addr16
test
pop
sbb
lods
outsb
sar
bound
jecxz
and
test
push
jmp
inc
sbb
xor
js
jge
frstor
enter
shll
imul
sarb
xchg
mov
jp
cld
addr16
add
xchg
mov
mov
jl
rorl
fs
pop
mov
cli
cld
mov
call
dec
mov
cld
jne
inc
pop
sti
out
pop
mov
pop
push
push
in
push
sub
sbb
nop
mov
ret
sbb
adcb
orb
pop
dec
and
aam
push
mov
inc
icebp
adc
jge
sub
movsl
cmpb
xchg
xchg
in
sbb
dec
aaa
and
lea
pop
sub
pop
xor
sbb
dec
xor
decb
pop
and
and
adc
orl
cmp
adc
scas
or
jno
xor
push
in
test
and
jp
jle
jp
test
mull
stc
or
and
arpl
dec
and
mov
fisubrl
mov
push
push
cmpsb
pusha
dec
and
inc
aaa
insb
out
push
lret
mov
sti
sbb
pop
push
mov
and
pop
js
lret
mov
pop
pop
jg
or
push
insl
xchg
sar
push
add
push
pop
inc
xor
incb
fisttpl
or
lahf
adc
push
cmp
pop
and
iret
push
loope
mov
cld
cmpsb
ds
imul
jle
fwait
cmp
sahf
lcall
stos
ficompl
push
inc
sub
jle
push
scas
jo
bound
jp
sub
push
jl
and
dec
push
jbe
lds
das
sbb
pop
testb
dec
mov
sub
sbb
clc
mov
xchg
clc
mov
push
xor
stc
dec
inc
mov
pop
sbb
lods
ja
mov
sbb
push
aas
xchg
lock
inc
lret
push
cli
testl
adc
pop
cmpl
mov
mov
imul
lret
jmp
add
in
imul
pop
add
cmp
std
pushf
sub
dec
shlb
testl
shrb
hlt
push
push
loopne
or
mov
inc
rorl
push
fisubrs
out
mov
pop
dec
or
jb
jns
fucomi
xchg
cli
popf
pop
xor
shll
cmpsb
ljmp
push
cmpsl
mov
dec
shlb
jb
xchg
and
pop
mov
or
incb
mov
nop
dec
dec
int3
jge
or
mov
cmpsb
jle
outsb
subl
mov
jg
cmp
pop
dec
mov
cmc
adc
popa
push
push
sbb
lea
xor
xchg
out
test
jl
mov
insl
xchg
add
pop
sbb
aad
mov
push
decl
test
aaa
sbb
mov
sub
cmp
fs
stos
sbb
mov
jbe
inc
rcll
loope
sub
push
jg
and
pop
std
fisttpl
pushl
sbb
xchg
pop
mov
add
sbb
iret
ds
repz
or
adc
push
movsl
xchg
xor
cltd
imul
jmp
or
pop
xor
std
mov
jo
call
cmp
clc
or
mov
mov
fnstenv
iret
adc
test
std
sti
inc
je
adc
mov
inc
cmp
repnz
add
clc
mov
clc
jg
fs
data16
mov
into
gs
repnz
adc
imul
pushl
rol
mov
add
dec
sub
add
cld
push
xchg
clc
add
jbe
imul
fnsave
icebp
in
or
mov
andl
pop
loop
adc
mov
cwtl
cmp
ret
data16
pop
lock
mov
mov
jecxz
adc
lea
loope
mov
pop
sub
clc
xor
inc
mov
test
and
je
or
ret
jge
cmpsb
leave
sub
lock
sub
or
sub
jo
pop
sbb
adc
sub
jmp
in
hlt
add
mov
sub
xor
loop
mov
std
pop
jnp
add
cltd
pop
nop
add
inc
sbb
dec
js
cmpsb
pop
movsl
shll
lds
pop
pop
jge,pn
iret
repnz
lods
xchg
cmpsl
inc
add
sbb
mov
pop
in
mov
dec
xchg
lea
les
adc
jecxz
mov
dec
push
clc
or
test
pop
push
mov
sbb
cwtl
add
xor
aaa
hlt
repnz
push
gs
loop
dec
out
and
xor
xchg
lock
mov
jl
js
sbb
dec
loope
sub
insb
mov
add
js
test
jmp
insl
arpl
cld
stos
sub
decl
pop
jns
mov
dec
or
jbe
sbb
call
loopne
aam
daa
in
inc
add
cwtl
sbb
out
mov
pop
mov
pusha
sbb
stc
insl
mov
sbb
add
int3
mov
lcall
aam
nop
add
add
test
lahf
clc
pop
orb
lds
gs
jle
jns
rolb
mov
jecxz
mov
adc
loop
mov
pusha
sub
pusha
jmp
fstpt
dec
cmp
out
aaa
mov
xor
call
xchg
lds
cmp
inc
add
sti
or
sub
les
sub
xor
mov
inc
cmp
add
fs
sub
mov
add
testl
scas
scas
jbe
lahf
add
cmp
sbb
rorl
jmp
dec
bound
in
cs
iret
movsb
and
cmp
aaa
sahf
loopne
adc
lods
aad
push
in
add
xor
fisubrl
push
xor
sbb
jne
movups
xor
push
jle
pop
pop
or
add
and
push
push
mov
cmpsl
xchg
mov
push
js
adc
adc
test
or
aam
data16
out
push
testl
dec
pop
scas
adc
pop
or
clc
xor
shlb
repz
insl
das
cmc
pop
mov
cld
pushf
xchg
subb
lahf
test
daa
add
push
and
outsl
xchg
push
adc
incl
sub
je
mov
push
cmpsl
dec
mov
add
or
stc
inc
cld
mov
dec
add
fiadds
jl
adc
jno
sarb
popa
dec
je
fistps
adcl
cli
addr16
lahf
push
in
add
inc
push
or
fisttps
cmp
dec
shl
test
daa
jmp
pushf
into
clc
call
sbb
jl
mov
icebp
movsl
aaa
inc
xlat
decl
sbb
rcr
cmpsb
inc
mov
lret
enter
aas
and
das
mov
inc
sbb
and
stos
call
jmp
addr16
mov
pop
test
fistpl
clc
shll
inc
adc
xchg
sar
dec
or
xlat
or
and
mov
jecxz
and
lods
cmp
sbb
sub
or
test
sub
lcall
out
cmp
rclb
in
xchg
mov
sbb
and
sbb
xor
addl
stos
shl
mov
mov
shl
scas
jo
fisubl
aam
mov
and
pop
or
sbb
jne
mov
mov
mov
sub
pop
push
cs
mov
sbb
pop
or
adc
cli
cs
push
jne
mov
push
popa
xchg
fcoms
mov
das
add
pusha
mov
popf
dec
xchg
jg
in
add
and
or
adc
rol
mov
test
jecxz
in
aam
and
loopne
mov
loope
insb
inc
stos
or
sbb
stc
adc
clc
xchg
mov
dec
sub
add
imul
xchg
xchg
xor
ret
hlt
bound
insb
add
std
call
cmc
add
sbb
xchg
push
push
mov
ljmp
fldt
idivl
out
notl
jnp
clc
das
lret
and
je
jmp
xor
cmp
mov
dec
movl
lods
int
inc
push
xor
mov
ljmp
sbb
pop
add
aaa
xchg
adc
lock
jb
test
jo
push
je
mov
sbb
cmp
flds
xchg
adc
lea
ret
and
fisttpl
and
sbb
cmp
inc
rcrb
fldl
enter
adc
fistps
jge
jmp
aaa
lock
out
std
xchg
jo
int3
stc
push
lret
cmc
int
adc
xchg
pop
push
xchg
shrl
xor
popa
cmp
aam
xorl
rclb
lcall
inc
enter
lea
mov
or
shr
in
cwtl
je
lret
es
xor
adc
mov
inc
insl
sahf
mov
fdivrl
cmp
aam
push
xchg
mov
jecxz
inc
test
ret
pop
xlat
xchg
xlat
scas
test
sub
idivb
cli
push
pop
xchg
jg
loop
popl
xor
cld
xor
inc
add
push
lods
ficomps
test
jns
sub
decl
sbb
dec
sub
add
mov
and
xchg
mov
repz
mov
addr16
mov
pop
dec
mov
nop
sub
or
mov
mov
sbb
adc
and
aas
loope
cmc
xor
jg
or
xor
cmp
fbld
in
and
inc
aaa
or
push
add
cmp
pop
add
cld
mov
and
leave
or
inc
mov
sbb
push
sub
dec
inc
adc
dec
add
in
jp
out
jge
pop
call
jl
jl
add
ss
xor
sbb
inc
sti
and
pop
cld
jmp
mov
fs
inc
loope
cmpb
add
jmp
or
dec
inc
push
sub
jo
push
inc
out
mov
pop
push
xchg
lods
repnz
mov
mov
and
sbb
testl
jmp
mov
pop
jg
daa
add
call
inc
jl
call
pop
adc
inc
dec
inc
dec
inc
icebp
insb
clc
or
sbb
or
push
sub
call
fucomip
fcmovnu
fistpl
pushf
pop
sti
fmuls
test
int3
nop
add
ja
mov
lods
dec
iret
movsl
ds
push
inc
nop
inc
mov
mov
or
das
aam
jb
cmp
add
mov
xchg
rorl
arpl
sahf
test
jle
fildll
pusha
mov
bound
in
je
fldcw
jg
or
cs
sahf
in
inc
ljmp
dec
dec
fbstp
cmc
popf
and
stc
xchg
lds
lcall
out
add
loope
sbb
les
or
popa
mov
js
pop
les
das
mov
adc
lock
dec
cmpsl
jne
mov
cmp
outsl
mov
lret
icebp
mov
and
jg
rcrl
jno
adc
ljmp
shll
shl
jecxz
dec
cld
lret
jl
dec
xor
push
dec
adc
aaa
sbb
ja
cwtl
fwait
cmp
cwtl
lahf
mov
les
and
stc
mov
dec
es
aaa
fs
hlt
push
je
push
pop
mov
loopne
testl
dec
rcll
or
std
mov
cmp
jne
pop
in
aam
lock
inc
jb
or
popf
jo
test
fwait
repnz
adc
and
mov
rcll
icebp
push
dec
aad
popa
rorl
inc
pushl
jns
std
nop
in
and
std
push
andb
mov
xchg
aam
cmc
push
mov
inc
rcrb
outsl
add
add
or
mov
xchg
into
aas
enter
push
hlt
xor
in
imul
ret
cmpsb
mov
les
sub
jg
outsl
test
and
mov
hlt
mov
inc
pop
mov
dec
cmp
push
aaa
es
pop
test
mov
out
pop
jbe
jne
mov
pop
das
jmp
fidivs
push
nop
mov
clc
dec
mov
pusha
ret
cmp
cmp
and
mov
popa
mov
push
push
lea
js
fbstp
icebp
mov
mov
jb
sti
aaa
xchg
lds
lock
cs
sub
addr16
lods
jg
mov
test
mov
test
cmpsb
pop
mov
adcb
xlat
mov
jle
movsb
rcl
adc
pop
cmp
je
lods
das
add
xor
sar
pop
jle
jne
cmp
push
loop
into
idivl
lcall
xchg
or
and
sarl
in
push
or
sub
jl
add
movsb
insb
cwtl
mov
cmp
std
mov
push
cli
fdivp
loope
stos
or
out
loop
mov
test
icebp
pop
inc
pop
mov
xchg
cli
ja
lods
inc
mov
dec
adc
fwait
xchg
mov
cwtl
mov
sbb
push
dec
sub
popa
loope
or
fstl
inc
sbb
call
xor
arpl
es
xchg
adcl
out
filds
jo
sbb
inc
dec
push
and
movsb
add
or
std
test
fs
ret
in
cs
repnz
mov
es
xchg
mov
loop
test
daa
lods
icebp
fnsave
cld
pop
jmp
pop
jecxz
jns
xchg
inc
sub
pushf
js
adc
or
xor
outsb
sub
jmp
outsl
jl
pop
add
jge
dec
or
sbb
sub
inc
mov
fisttpl
icebp
pop
xor
push
lods
loop
pop
aaa
sahf
pop
inc
leave
mov
jle
out
pushl
sbb
scas
cwtl
add
jnp
mov
rolb
popf
inc
push
xor
pop
lock
cltd
test
pushf
push
lret
cmp
and
jo
jle
cmpb
adc
and
mov
lock
in
fnstcw
jl
or
fistps
or
in
in
add
fs
cld
push
mov
pop
ds
mov
out
scas
sbb
int
mov
cmc
cmp
arpl
mov
cmp
jb
mov
adc
push
cmpsb
adc
fwait
xor
add
pop
ret
test
pop
loopne
adc
nop
or
dec
fwait
sahf
add
sub
in
call
cwtl
ret
jl
xchg
mov
sbb
mov
cld
ja
jmp
fldcw
fwait
xor
mov
std
xchg
imul
fsubrl
add
in
inc
mov
xchg
pusha
sti
inc
xor
in
adc
mov
shl
mov
or
and
dec
fs
js
decl
dec
aad
loopne
xchg
mov
or
clc
xchg
outsb
pop
lahf
cmp
stc
jne
out
hlt
cmp
mov
sub
mov
sbb
or
iret
push
mov
ja
xchg
movsl
or
outsl
clc
push
mov
aas
mov
imul
pop
or
pop
mov
and
iret
mov
push
mov
js
and
lock
xchg
mov
lahf
cmp
test
inc
lea
in
jne
movsl
in
in
mov
or
and
jp
mov
ret
mov
movsl
std
jecxz
subl
fidivrs
jl
movsb
dec
and
ljmp
sarl
jle
test
dec
ret
fmuls
mov
clc
into
int3
inc
xor
dec
daa
inc
aam
in
or
and
sti
jg
outsl
ret
adc
dec
out
dec
rolb
bound
inc
sbb
jno
repnz
mov
sub
pop
icebp
rcrb
adc
mov
ljmp
or
jae
loope
outsl
mov
xor
adc
jbe
xchg
xchg
call
jo
mov
mov
jae
jecxz
push
mov
adc
gs
ja
jmp
ret
mov
sarl
lock
mov
and
stos
cmc
enter
lock
xor
lret
cmpsl
lahf
inc
cmp
into
popa
call
sti
and
and
inc
dec
outsb
cmpb
or
outsb
pop
mov
mov
adc
and
inc
ljmp
pop
psadbw
push
push
cmp
xchg
lahf
neg
pop
pop
jb
sbb
fisubl
loopne
scas
jecxz
pshufw
inc
cmp
hlt
adc
jns
arpl
inc
outsl
std
lods
clc
dec
dec
shlb
fisubrl
push
adc
pushf
fldt
rorb
mov
or
mov
scas
sbb
es
adcl
ds
xor
cwtl
cmp
popf
add
jg
pop
xor
call
push
mov
inc
adc
outsl
push
sbb
jae
jo
clc
sbb
imul
inc
adc
cmp
and
outsl
add
cmp
andb
jno
fnstcw
adc
and
lret
outsl
mov
xchg
call
mov
pop
jmp
rorl
push
repnz
inc
jns
das
pop
and
ret
out
shrb
mov
mov
xor
aaa
and
adc
call
mov
mov
enter
adc
jg
adc
es
pop
leave
sbb
arpl
lcall
scas
clc
lods
adc
into
mov
out
or
pusha
inc
dec
jbe
xor
lods
fnsetpm(287
inc
jp
ffree
ret
mov
xor
pusha
fs
jg
call
rolb
push
mov
inc
xor
fcmovnu
mov
xchg
sub
enter
mov
loopne
push
lock
loope
and
xchg
cli
adc
or
lahf
fnstcw
pushf
mov
xchg
pop
bnd
gs
push
cld
xorb
pop
fisttpl
clc
mov
mov
sub
mov
imul
outsb
ret
arpl
sbb
xchg
and
push
call
mov
out
adcl
gs
dec
jle
cmc
repz
gs
add
push
jns
mov
or
mov
mov
mov
sbb
fstpt
aad
pop
cli
push
cmpsb
imul
cmpsb
sbb
ljmp
and
sbb
gs
cmp
test
out
xchg
outsb
mov
xor
mov
clc
test
je
pop
push
pop
in
leave
and
scas
pop
stos
or
fcoml
or
inc
mov
xchg
xchg
mov
sub
sbb
orb
mov
mov
pop
std
stos
es
push
xchg
in
lcall
sbb
cli
xor
and
pop
push
inc
negl
decl
add
xor
adc
pop
mov
loop
in
je
in
stos
bnd
mov
fistps
adc
test
out
jecxz
push
adc
clc
imul
cs
imul
or
or
lcall
std
inc
dec
jp
stos
jecxz
fistpll
add
jg
sbb
ret
mov
xchg
sub
pop
testl
pushl
sahf
dec
cmp
jl
scas
clc
ss
loope
dec
sbb
add
mov
mov
scas
pop
shr
leave
add
xor
xchg
test
mov
jne
mov
nop
fwait
xchg
xchg
pushf
js
filds
add
inc
add
sub
adc
jge
or
aas
adc
push
into
es
xchg
push
push
leave
pop
pop
call
pop
mov
lcall
mov
psllq
mov
scas
mov
imul
add
mov
and
sbb
movsb
fdivrl
out
or
sbb
jnp
adcb
mov
mov
inc
sahf
push
aaa
sub
lcall
sbb
mov
add
and
inc
mov
or
inc
mov
pop
xchg
sbb
mov
mov
mov
mov
pop
orb
or
xor
add
inc
push
push
popa
mov
dec
sbb
imul
inc
mov
xchg
push
push
or
push
push
fadd
mov
pushf
xchg
xor
aam
inc
mov
popa
insl
xlat
sbb
loop
fcom
cs
lea
and
jo
pushf
add
daa
and
dec
call
xor
push
movsb
sbb
lods
loopne
push
dec
lock
ret
clc
icebp
sub
in
mov
jbe
leave
mov
and
or
notb
das
in
notb
cmpsb
inc
decl
jnp
sub
movsl
lock
lock
or
lldt
or
stos
jne
insb
stos
mov
das
pop
pusha
sub
mov
sbb
call
cmpsl
adc
mov
adc
repnz
mov
in
push
cmp
out
aaa
loopne
pop
jne
fistpl
xor
or
pop
jp
mov
inc
in
and
shlb
cmp
std
movsl
fistpl
jno
and
movsb
push
xchg
cmp
nop
mov
dec
mov
fists
sbb
add
cs
aaa
and
xlat
sti
mov
sub
sbbl
stos
pop
push
lods
lahf
pop
lea
loop
testb
jg
das
pop
sbb
loopne
test
or
cmp
sub
jno
insl
pushf
fisttps
dec
pop
fsubrl
mov
cmp
lret
mov
pop
or
sbb
decl
out
rorl
test
inc
rclb
mov
add
sbb
mov
mov
bound
jbe
repnz
pop
adc
and
mov
pop
clc
xor
dec
pop
sub
and
lahf
insb
decl
mov
jmp
sub
mov
sbb
and
dec
insl
aad
es
leave
and
add
mov
add
je
insb
outsl
call
aaa
sbb
dec
push
rcrb
push
sub
cli
lods
insl
dec
xchg
mov
gs
push
sub
aam
mov
sub
adc
sub
sub
in
or
lods
scas
fiadds
test
test
xchg
fldl
scas
fs
mov
pop
xor
and
jmp
aam
aad
adcb
or
sbb
dec
push
mov
test
push
js
add
cmp
loopne
pop
inc
into
push
inc
mov
pop
in
adc
fldl
sub
and
clc
xchg
add
cltd
in
dec
dec
loop
mov
xchg
fsub
pop
sbb
pop
mov
lahf
jns
pop
and
push
push
mov
pop
jb
insl
in
sbb
pop
adc
mov
add
pushf
cmp
pop
cmpb
ja
jg
mov
and
lea
or
jle
or
xor
mov
in
fiadds
pop
mov
ret
and
sbb
filds
jl
es
push
pop
scas
cmp
cwtl
movsl
mov
loopne
or
and
xor
ljmp
rcll
mov
cli
mov
adc
lret
outsl
sbb
adc
jno
jno
fldl
insb
rcrb
fdivr
add
icebp
insl
mov
sub
test
add
mov
and
jmp
lahf
push
mov
pop
cltd
test
and
or
pmaxub
mov
or
jg
sarl
sbb
xor
mov
dec
adc
mov
test
pop
fwait
stos
inc
mov
or
jbe
loopne
inc
mov
subb
adc
adc
es
jg
fistpll
dec
or
inc
mov
pushf
movsl
jnp
loopne
out
push
aad
jg
addb
lock
loopne
lret
imul
clc
in
jae
push
jns
int3
mov
jns
mov
subl
push
cld
cmp
xor
andl
fisubrl
xchg
scas
mov
jmp
cmp
mov
nop
xor
out
negb
lcall
movsb
sbb
stos
mov
jge
popa
sbb
call
push
mov
out
rolb
jg
movsl
dec
xchg
xor
popf
cmp
rcl
jnp
mov
ficoms
push
mov
sbb
mov
sbbb
mulb
mov
inc
sbbb
icebp
adc
push
push
inc
lods
pop
xchg
sarl
xor
cmp
pop
scas
mov
testl
jae
icebp
mov
jp
std
jnp
mov
outsl
aaa
adc
lods
es
sbb
mov
hlt
dec
inc
aam
or
divl
stos
mov
rol
adc
lock
mov
je
jns
cmpsl
mov
dec
mov
add
pop
imul
or
icebp
fstps
addr16
pop
pop
xor
fistpl
fsubrs
mov
inc
das
jbe
push
cwtl
or
mov
cmp
lea
test
or
mov
inc
fcomip
lds
xor
rcrb
and
jg
out
add
daa
add
mov
mov
add
lcall
mov
cmp
std
bound
incl
popa
dec
sahf
das
jl
pop
ror
sbb
addr16
fbstp
mov
hlt
xor
incl
loop
nop
negl
mov
mov
xorb
scas
int
mov
mov
push
jmp
or
dec
mov
mov
js
fnstsw
rcrb
pop
call
and
or
mov
push
push
in
pushf
inc
lods
outsl
je
pop
and
test
push
nop
pop
clc
xchg
mov
inc
add
lea
inc
inc
cwtl
cmpb
jbe
push
les
add
and
sub
inc
pop
and
test
jle
and
mov
adc
in
jg
and
mov
or
mov
insl
andb
test
mov
and
mov
adc
add
mov
add
or
pop
scas
leave
and
adc
push
and
add
mov
jbe
es
mov
and
subb
pop
fcmovnu
mov
addb
dec
mov
in
bound
or
sub
add
adc
adc
adc
and
mov
ss
pop
inc
adc
andl
insl
imul
sahf
test
inc
pop
imul
pop
or
daa
aaa
imul
imul
aad
das
or
mov
mov
cmp
sub
cs
cmp
mov
pop
add
orb
mov
inc
or
add
and
mov
sub
sbb
mov
mov
fisubrl
adc
and
andb
imul
inc
repz
mov
mov
roll
insl
and
int
test
push
and
cs
out
add
and
fcmovbe
or
and
mov
repz
inc
push
andb
test
inc
imul
lret
push
inc
rcll
xor
pop
lds
sbb
push
and
cmpsb
add
adc
xchg
inc
mov
sub
imul
xor
into
or
xchg
ss
pop
fistpl
dec
adc
int
adc
out
xor
mov
test
or
and
inc
jae
inc
mov
add
mov
rorl
cmpb
mov
jb
xor
incl
outsb
adc
adc
or
sub
rorb
fnstenv
inc
pop
jb
add
push
stos
jl
inc
fsub
pop
mov
xchg
test
or
adc
int3
out
testl
push
inc
adc
lods
and
adc
jl
push
int
mov
lods
out
inc
inc
lds
and
mov
adc
out
jmp
and
push
push
loop
inc
sub
pop
sbb
xchg
cmp
cmc
aad
pop
shll
push
push
in
sbb
mov
insb
scas
sub
lcall
in
fimull
ret
xor
inc
testb
clc
and
pop
xor
bound
or
pop
add
and
sbb
pop
stos
xchg
sub
loope
xor
data16
mov
lods
mov
inc
add
push
out
int
or
sbb
sbb
xor
imul
pop
sbb
jb
and
bound
pusha
push
jo
xchg
fstps
int
loopne
cmc
test
xor
pop
imul
sahf
enter
out
mov
mov
xchg
and
push
stos
cmp
or
or
out
add
jmp
adc
leave
fs
jnp
xor
cmp
or
mov
cmpsb
sahf
inc
lcall
subl
scas
xor
test
or
inc
imul
je
add
enter
lods
inc
lea
xor
fwait
sahf
fdivs
jnp
sbb
sbb
sub
jno
mov
and
js
insl
cmp
ds
push
add
nop
jnp
orb
push
xor
inc
jno
xchg
sub
test
dec
mov
fisubl
pop
sbb
pop
xlat
or
mov
in
or
mov
xor
add
push
jb
inc
push
or
insl
lods
in
push
inc
and
mov
ss
mov
sub
or
adc
subb
cmpsl
and
pop
imul
inc
push
roll
cmp
sbb
pop
clc
in
add
add
mov
add
inc
imul
pop
jb
push
sub
push
jmp
lret
adc
loopne
sbb
lcall
scas
add
adc
xor
push
pop
or
mov
adc
mov
pop
roll
sub
or
or
es
rclb
test
fwait
mov
sbb
pop
cmp
jo
cmp
and
lahf
xor
xor
xlat
sub
push
jo
sahf
cmp
pusha
rolb
sub
int
jmp
add
imul
mov
sbb
mov
sub
and
push
sub
arpl
cmp
pop
add
adc
push
lods
dec
call
lahf
mov
or
test
gs
test
adc
jecxz
add
sbb
jo
pop
jae
or
lret
inc
xor
addr16
clc
mov
add
add
adc
pop
lds
adc
pusha
inc
fdivs
xor
sbb
mov
mov
ret
mov
in
adc
push
pop
rcrl
addb
push
sahf
mov
scas
ficoml
add
ja
and
insl
push
add
ja
sbb
dec
inc
pop
rolb
mov
or
jle
adc
shl
add
sub
les
ja
shll
cmp
nop
adc
add
adc
rcll
cs
inc
mov
int
lcall
xchg
jo
or
and
push
movsb
sbb
divb
sti
push
add
in
lcall
imul
xor
aas
jo
aad
dec
or
pop
inc
dec
je
mov
test
adc
faddp
xor
sbb
lret
adc
pop
test
subb
int
mov
dec
push
cmp
push
subl
add
lods
push
sti
and
xchg
mov
inc
sbb
inc
xor
sub
jmp
add
jae
add
mov
imul
or
dec
cmp
push
add
inc
inc
test
and
in
or
mov
and
inc
mov
jl
mov
adc
data16
or
or
xchg
decb
imul
in
jne
pop
and
negl
lret
sbb
sbb
jecxz
jo
push
js
cmpsb
mov
addl
xchg
lret
xor
shll
test
addl
sbb
sbbl
cs
lock
leave
xchg
add
or
cmp
sbb
mov
xor
call
cmp
pushf
xchg
xor
iret
and
lods
lret
jo
out
mov
or
cmpsb
push
jo
insl
movsl
jmp
stc
dec
mov
pop
xchg
mov
mov
and
fldenv
and
or
nop
ret
sub
inc
push
imul
dec
jo
fs
int
jmp
lcall
sub
jmp
sbb
or
sbb
xchg
dec
inc
push
jae
cmp
pop
fldt
pop
es
int
adc
xlat
push
push
xor
pop
addl
ficoml
xor
out
or
mov
pop
jae
movsb
lea
inc
xor
pop
nop
or
mov
adc
cmp
dec
cmpsb
push
mov
push
lods
lods
and
cmp
cs
sub
mov
cmp
lods
mov
and
scas
jno
xchg
lock
imul
add
or
push
and
xchg
xor
pop
imul
mov
inc
in
push
mov
movsl
outsl
out
xor
or
and
nop
orl
xor
add
cmpsb
sti
dec
and
das
in
xchg
mov
add
outsb
pop
inc
pop
es
scas
cs
dec
adc
dec
outsb
dec
dec
fwait
jae
xor
push
ret
shrl
mov
add
push
enter
aad
pop
inc
dec
sub
pop
int
push
test
sub
and
aad
mov
or
dec
push
cwtl
and
stos
inc
shrb
and
adc
xor
daa
mov
loopne
int
out
adc
aad
dec
test
andb
lods
fdivs
out
shll
mov
inc
jae
jl
cmp
rolb
pop
adc
add
add
dec
jmp
add
inc
outsl
insl
jo
jb
push
je
imul
dec
outsl
fs
gs
fstp
testb
fs
jo
inc
outsb
jbe
jb
outsb
insl
gs
outsb
je
jae
push
jae
jb
gs
xor
jle
or
sub
popa
sbb
jb
sub
outsl
xor
adc
aaa
popa
je
adc
push
jns
adc
imul
insb
adc
or
imul
push
outsb
push
jo
imul
sub
imul
mov
push
push
add
je
jne
dec
outsb
outsw
inc
outsb
mov
cmp
popa
fs
fstl
test
fucomi
outsl
xchg
popa
push
call
inc
imul
sub
int
mov
sbb
inc
jle
fiadds
punpcklwd
inc
outsb
lods
in
pushf
dec
dec
cs
outsl
inc
or
pop
dec
cmc
jb
dec
sub
scas
add
dec
outsl
mov
sbb
jae
jae
mov
addr16
sbb
adcb
and
sbb
xor
loopne
vmload
mov
sub
inc
mov
bound
adc
jne
insl
add
or
push
or
in
cmp
add
fs
xor
in
or
add
nop
or
and
push
mov
xor
add
mov
jo
add
mov
inc
add
pusha
filds
inc
arpl
pop
sti
mov
inc
flds
inc
inc
jb,pn
sbb
jnp
add
daa
jb
insl
and
cs
add
xchg
int
cmp
push
shrb
dec
leave
data16
mov
and
or
sar
push
shlb
cwtl
sbb
add
add
addb
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sub
add
push
add
add
add
add
add
add
add
add
add
or
add
add
in
add
and
add
aaa
add
add
add
add
or
add
add
add
add
add
add
add
add
addb
add
or
add
add
add
or
add
rolb
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
or
add
add
add
or
add
add
aas
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pusha
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
jo
outsl
add
imul
add
add
outsl
add
add
and
inc
add
jne
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
data16
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
popa
add
jb
outsl
add
and
dec
add
outsb
add
add
add
outsl
add
arpl
push
add
jo
add
and
push
add
je
popa
add
add
popa
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
jb
imul
add
and
inc
add
jae
jo
and
inc
add
jne
add
add
imul
and
xor
cmp
cmp
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jne
je
and
inc
add
outsl
add
outsb
add
add
imul
add
and
inc
add
outsl
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aam
add
inc
inc
and
add
inc
push
dec
and
push
add
fs
sub
add
and
inc
adc
addb
and
or
or
sbb
adc
push
dec
dec
sbb
add
inc
pop
orb
and
or
adc
adc
es
adc
es
adc
sbb
push
adc
pop
inc
add
add
orb
mov
or
add
es
adc
push
adc
sbb
mov
or
add
or
or
adc
or
add
adc
xor
sbbb
xor
add
sbb
andb
nop
and
dec
adc
and
inc
add
sbb
and
push
dec
dec
adc
sub
adc
addb
or
adc
inc
and
sbb
adc
add
sbbb
or
add
or
add
adc
sbb
push
and
mov
or
es
es
and
or
or
inc
add
andb
adc
push
and
push
add
and
adc
and
addb
add
mov
or
or
adc
xor
and
pop
or
pop
test
addb
dec
or
mov
adc
sbb
sbb
mov
orb
push
andb
sub
inc
add
or
push
or
inc
push
or
adc
nop
and
nop
sub
mov
addb
or
and
adc
add
adc
inc
and
inc
add
nop
pop
pop
or
push
sub
and
pop
sbb
addb
add
and
add
dec
adcb
sbb
or
and
or
and
inc
add
and
push
andb
adc
inc
or
or
or
inc
and
and
and
and
or
adc
inc
and
add
or
xor
add
inc
pop
xor
and
sbb
inc
xor
and
test
addb
nop
es
and
adcb
add
pop
inc
sub
xor
sub
add
or
sbb
inc
or
inc
pop
or
sbb
adc
adc
es
xorb
or
dec
and
pop
sbb
add
add
add
add
add
add
add
add
add
add
add
outsl
stc
add
outsl
incb
jmp
clc
add
jg
add
pop
incb
std
jnp
std
outsl
stc
add
dec
jge
sti
dec
std
add
dec
jle
in
dec
jns
std
out
jnp
stc
iret
cli
add
dec
std
add
add
dec
jge
jg
add
pop
cld
add
jg
add
jns
sti
pop
clc
add
out
jge
stc
outsl
js
out
jp
stc
jg
add
dec
incl
jmp
incl
sti
iret
jl
jmp
std
add
jg
add
out
jge
stc
jge
std
jg
add
jp
jmp
js
out
dec
jg
jmp
pop
jl
jmp
jp
stc
iret
jp
jmp
cld
add
jns
std
out
jg
jmp
cli
add
out
jg
jmp
cld
add
fistpll
jmp
clc
add
outsl
jns
jmp
dec
jle
std
dec
js
out
out
jg
jmp
iret
jg
jmp
stc
add
jnp
jmp
sti
add
outsl
jg
ljmp
add
outsl
sti
add
out
cld
add
out
incb
in
iret
jge
jmp
jp
out
stc
add
outsl
jg
in
iret
jns
std
cld
add
dec
cli
add
stc
add
dec
cli
add
iret
cli
add
outsl
jns
out
fistpll
sti
outsl
jns
stc
iret
jge
stc
jns
jmp
out
jp
stc
outsl
std
add
iret
jl
sti
iret
jge
jmp
clc
add
out
cld
add
add
fistpll
std
jl
jmp
add
dec
stc
add
out
jns
add
jg
add
jg
add
jl
jmp
jp
sti
add
dec
incl
in
pop
clc
add
dec
jle
jmp
out
incb
out
jl
std
dec
jge
stc
add
pop
jp
jns
std
iret
sti
add
add
iret
std
add
jg
add
add
jg
add
pop
jl
in
clc
add
dec
clc
add
outsl
jg
jmp
pop
jl
out
out
incb
jmp
std
add
out
cli
add
pop
jle
jmp
iret
jns
std
out
stc
add
add
outsl
jp
std
out
jg
sti
out
cld
add
outsl
jg
stc
outsl
jns
out
pop
jnp
sti
fistpll
stc
outsl
incl
decl
add
jg
add
out
jg
jmp
std
add
add
pop
jl
cld
add
incb
in
pop
std
add
jns
std
iret
incl
jmp
jp
sti
add
dec
incl
std
out
stc
add
dec
jl
in
fistpll
std
iret
sti
add
dec
jg
stc
iret
clc
add
js
stc
jg
add
pop
jp
decl
add
fistpll
lcall
add
jp
jmp
iret
stc
add
out
jns
out
add
iret
incl
stc
cli
add
outsl
jg
in
dec
cld
add
add
iret
jl
jmp
pop
sti
add
pop
cld
add
std
add
dec
jnp
out
outsl
jle
stc
pop
js
jmp
jp
std
jg
add
jg
add
iret
jle
sti
iret
jnp
in
fistpll
sti
std
add
iret
jle
in
pop
sti
add
outsl
jns
stc
pop
jl
sti
pop
incb
jmp
jp
jg
dec
jle
out
out
jge
in
out
sti
add
jl
sti
pop
jp
in
outsl
incb
sti
dec
incb
out
js
sti
outsl
jle
jmp
std
add
outsl
std
add
pop
jg
stc
add
jg
add
pop
jg
out
jg
add
fistpll
std
iret
jp
stc
fistpll
stc
outsl
jle
sti
out
sti
add
add
outsl
std
add
iret
jg
out
fistpll
ljmp
add
out
jg
jmp
iret
stc
add
incb
in
out
cli
add
pop
cld
add
jg
add
outsl
jle
std
jp
in
out
cld
add
add
iret
cli
add
add
add
dec
jge
std
out
jns
stc
out
jg
in
out
sti
add
outsl
std
add
jg
add
pop
incb
jmp
outsl
sti
add
iret
std
add
jnp
in
pop
jl
stc
jg
add
out
incb
jmp
sti
add
add
dec
incb
stc
add
out
jp
out
pop
jp
shr
inc
aad
mov
mov
or
ja
fwait
jecxz
cmpsb
lahf
cld
sbb
xchg
dec
inc
push
fidivs
insl
and
mov
mov
out
mov
fsubrl
ss
cld
ljmp
rorb
test
fmul
test
test
sbb
lds
mov
jnp
adc
jae
jp
lods
mov
fsubl
dec
imul
insb
xor
sarl
hlt
outsb
adc
movsb
adc
pop
enter
inc
add
dec
aad
push
in
mov
sub
sub
pusha
movsb
lahf
dec
and
test
dec
mov
or
sub
sub
int
jg
ja
push
sub
ror
mov
inc
xchg
cli
fcmove
cmp
insb
jnp
xchg
imul
jne
dec
pop
lods
int3
mov
out
add
xchg
shlb
pop
inc
sub
dec
enter
in
adc
or
movb
mov
mov
cmpsl
adc
mov
mov
jae
adc
push
xchg
fisubrs
ret
push
mov
hlt
mov
sbb
std
imull
neg
adc
aad
pop
mov
cmp
inc
and
pop
sbb
inc
lahf
mov
dec
push
in
mov
notl
loopne
jge
test
imul
cmp
cmpl
or
cmp
mov
pop
push
mov
pop
and
mov
cltd
cwtl
ret
arpl
rcl
cs
and
xchg
xchg
mov
adc
imul
mov
outsb
dec
out
jnp
scas
or
call
cld
cli
jl
andb
mov
mov
mov
sahf
mov
mov
out
bound
push
cwtl
cmpsb
std
sahf
mov
jns
fists
pop
lods
mov
repnz
sahf
cmp
push
pop
ds
pop
sbb
leave
mov
aad
adc
dec
jnp
add
fisttpll
test
jl
js
leave
xchg
sub
mov
inc
jne
pop
rcrl
mov
xchg
add
adc
leave
jecxz
aam
aam
testl
mov
in
mov
arpl
push
and
sub
jg
push
mov
mov
icebp
mov
out
pop
adc
clc
mov
push
cmpsb
xorl
std
cld
mov
mov
ljmp
cmovne
mov
leave
imul
mov
sarb
in
nop
mov
insb
and
fsubrs
cmc
stc
loope
dec
daa
clc
and
cmp
sti
xor
lea
mov
test
mov
mov
dec
push
dec
fcmovbe
and
pop
pop
out
mov
add
inc
mov
scas
clc
iret
adc
imulb
lret
pop
push
out
aas
mov
es
push
sub
jns
xchg
dec
mov
push
imul
add
dec
test
sub
sbb
add
bound
filds
js
hlt
mov
mov
push
sarb
mov
sbb
mov
dec
cmp
shlb
clc
or
adc
pop
add
push
iret
mov
gs
test
je
xor
push
inc
xchg
push
icebp
in
xor
repz
test
lods
xor
cmp
jmp
lret
adc
addl
mov
or
out
scas
out
dec
dec
pop
push
add
dec
adc
mov
xchg
shrl
jae
add
inc
in
hlt
insb
outsb
pushf
dec
sub
add
push
xorl
mov
sub
rol
lcall
shlb
and
lret
insl
pop
call
repnz
mov
push
add
add
pop
add
add
push
add
add
add
add
add
rorb
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
gs
jae
inc
inc
