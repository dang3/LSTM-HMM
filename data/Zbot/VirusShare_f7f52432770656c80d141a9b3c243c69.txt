jmp
inc
cwtl
imul
jp
pop
movsb
sbb
jg
mov
mov
sbb
decl
add
inc
sub
orb
aaa
push
pop
ss
fs
ja
leave
ds
call
rcrb
loopne
xchg
or
out
cmp
aam
inc
pusha
pusha
mov
lcall
cwtl
stos
sbb
adc
add
or
fbld
and
fs
ja
ljmp
xor
pop
jge
aad
lods
sti
xlat
cld
jl
inc
bound
fisttpll
jge
incl
fisttpl
xlat
add
scas
pop
mov
jb
push
and
call
ret
dec
mov
mull
pop
mov
push
pop
aam
sti
les
incl
pushf
nop
sarl
daa
mov
aam
mov
mov
cmp
out
ljmp
out
mov
sub
xor
mov
out
call
insl
stos
inc
loope
imul
in
jg
inc
push
ja
push
push
loopne
or
shr
adc
xor
and
jg
es
mov
inc
fdivl
pop
jne
inc
mov
sarl
push
xchg
dec
hlt
cltd
sar
ljmp
push
adc
lret
fnsave
xchg
add
push
daa
int3
int
push
mov
cmp
mov
push
mov
shlb
push
mov
imul
popf
mov
xor
pop
aas
jo
and
pop
out
in
iret
or
xchg
pop
sbb
push
push
pop
jbe
fildll
mov
bound
xorb
mov
nop
sbb
test
lock
adc
mov
xor
pop
adc
lds
pushw
xor
pop
xor
negb
jmp
jnp
dec
jae
xchg
pop
cmp
mov
sub
push
or
or
and
jne
pop
fbld
push
mov
incb
cmp
data16
sbb
jae
lds
call
in
popa
add
movsl
adc
or
inc
jnp
daa
mov
cmp
mov
sahf
das
jbe
mov
notl
xchg
mov
div
xor
hlt
mov
ret
pop
add
mov
sti
adc
push
mov
xor
lcall
les
js
inc
mov
enter
xlat
decb
xchg
loop
push
rclb
inc
push
or
cmp
gs
sbb
insl
dec
mov
sbb
dec
fsubp
jns
mov
push
mov
out
rcr
loope
test
mov
daa
sub
into
inc
add
mov
stos
jge
sub
call
rcll
pop
jne
stc
cvtpi2ps
dec
test
decl
sub
xchg
pop
sbbb
adc
inc
inc
ret
test
push
jmp
loop
jno
mov
and
lcall
sbb
clc
cltd
dec
jmp
fildll
push
add
pop
xchg
mov
incl
jbe
sub
arpl
inc
mov
xchg
jne
bound
sbb
out
jecxz
mov
xchg
adc
test
rcr
fcom
mov
je
jle
jg
arpl
pop
std
jns
mov
mov
xor
add
test
xor
cmpsb
js
jmp
mov
push
testb
xor
pop
cli
addr16
jge
pop
inc
ss
pop
out
das
jecxz
pop
imul
testb
pushf
scas
cltd
ret
dec
xchg
cmp
jmp
xorb
push
xchg
aam
into
hlt
cmp
lret
or
test
jns
fcmovb
pushf
cwtl
adc
adc
push
jae
xchg
adcb
jl
pop
bound
daa
mov
xor
incl
addr16
les
adc
popa
and
mov
dec
inc
test
fistpll
jle
inc
inc
add
sbb
push
lcall
out
dec
push
pop
stc
aaa
fisubl
cmp
inc
xchg
ja
dec
clc
lods
push
pop
mov
adc
pop
inc
push
ljmp
std
decl
mov
cmp
mov
into
jo
in
out
sub
dec
aas
pushl
mov
popa
sbb
aad
dec
imul
scas
mov
orl
decl
lret
popa
xlat
or
jp
sub
mov
cmp
js
jmp
popa
mov
push
mov
js
inc
xchg
sub
mov
lods
sti
adc
jmp
icebp
inc
xchg
mov
adc
mov
xchg
push
fmul
cs
icebp
jecxz
xchg
adc
xor
mov
mov
jl
jo
dec
roll
ljmp
sub
jo
iret
xchg
aam
cltd
push
push
add
rep
dec
jbe
adc
in
decl
sbbl
dec
pop
outsb
pop
or
cmp
outsb
divps
sbb
incl
cld
mov
inc
pop
mov
repz
aam
nop
ja
inc
mov
decl
and
sub
adc
push
stos
negl
sahf
lods
cld
dec
add
lcall
pushl
jb
lret
cmp
push
call
sub
pop
inc
cmp
enter
das
std
call
arpl
add
jno
mov
jecxz
movsl
ljmp
xor
xchg
clc
jmp
cmp
sub
std
jno
repnz
aam
pop
cmc
inc
mov
mov
ret
stos
fwait
ja
xchg
mov
lods
sub
lcall
pop
into
cmpb
inc
sub
xchg
roll
push
dec
ret
and
sbb
jo
mov
mov
out
js
push
aad
jns
pop
sub
shr
hlt
xchg
sbb
imul
inc
push
popf
insl
pop
xor
out
pop
jmp
in
add
lcall
incl
ret
sub
les
mov
dec
incl
sbb
out
rcr
adc
into
arpl
adc
jnp
push
insl
mov
int
and
fs
mov
les
pop
fcmovne
cmp
shl
and
incb
sbb
jmp
sahf
loop
bnd
dec
xor
dec
mov
or
les
js
sbbl
pop
lcall
mov
jl
lret
testb
imul
mov
ret
notl
jp
adc
call
sbb
dec
jp
sub
imul
idivl
cmp
loope
sub
insb
inc
lock
lcall
adc
int3
pop
std
xor
out
call
pop
stos
push
mov
mov
sbb
mov
fisttps
sti
mov
push
out
dec
fucom
dec
movsb
pop
or
mov
or
rorb
icebp
insb
xchg
dec
mov
inc
cld
sarb
fmull
lahf
lods
icebp
mov
ljmp
pop
loop
stos
adc
sbb
arpl
push
cmp
stos
inc
jp
xchg
lock
lcall
xor
cli
mov
lret
cwtl
xor
mov
jne
mov
mov
jns
pop
cmp
loopne
pop
push
xor
pop
sbb
lods
mov
lock
loope
add
xchg
decl
incb
sbb
lea
and
xchg
cwtl
pop
adc
jge
ret
into
fwait
sub
call
clc
in
adc
rcl
mulb
dec
iret
int
fildl
jae
ss
outsl
std
xor
fnstenv
aaa
outsl
pop
and
fcompl
pushf
out
cmp
mov
cs
cwtl
pushf
test
mov
or
cmpl
orb
and
shll
push
mov
sbb
sub
jno
and
addr16
mov
jmp
cmp
jo
cmp
jl
sub
lcall
ss
lcall
ja
aas
cwtl
xorl
jmp
pop
ds
mov
mov
stc
lock
jmp
xchg
pop
cmp
push
inc
cmc
dec
add
call
sahf
nop
xchg
decl
inc
sub
ret
pushf
add
data16
in
dec
mov
loopne
pushl
mov
sbb
mov
sub
loopne
xor
sub
push
pop
cmp
cli
jns
test
ljmp
adc
stos
sti
mov
dec
add
and
lret
or
inc
pushf
lds
cld
jmp
jg
ljmp
sahf
sub
arpl
cmp
mov
push
lcall
mov
int3
lret
pushf
dec
daa
adc
or
enter
popa
lods
inc
or
lcall
arpl
data16
je
das
dec
push
stc
adc
lahf
mov
pushf
mov
dec
nop
fdivs
cltd
xchg
xor
movsl
out
lea
and
or
mov
xchg
add
sub
cmpsb
jecxz
sub
xlat
rorl
insb
stc
pushl
push
push
nop
stos
out
int3
sub
faddp
arpl
xchg
rolb
arpl
cli
incl
sbb
in
test
lcall
dec
lods
mov
mov
mov
pushl
mov
mov
in
stos
add
sarl
add
aad
jmp
call
ss
pop
cmc
lcall
pop
add
in
jecxz
jo
movsl
sahf
adcl
xor
adc
insl
push
dec
cmpsb
inc
mov
xchg
jecxz
sbb
add
inc
jg
insl
test
xor
test
sbb
daa
jp
outsl
mov
xchg
lahf
ljmp
cmp
mov
lret
ss
mov
nop
xchg
add
lcall
mov
mov
fistl
push
mov
dec
je
pop
idiv
call
jns
jnp
cmpsl
xchg
iret
insb
incb
sub
pop
out
dec
in
popf
mov
inc
mov
push
in
test
icebp
enter
into
outsl
sbb
out
mov
or
jne
ljmp
lock
cmc
cmp
bound
scas
inc
outsl
in
jno
popf
imul
insl
jmp
push
pop
fldt
hlt
shlb
cmp
and
outsb
lods
outsl
xchg
push
mov
daa
pop
sbb
fstpl
xor
xlat
mov
jmp
mov
aad
and
jmp
jmp
js
iret
rclb
sub
andl
in
jl
pop
xchg
cmpsl
int3
inc
cmpsb
ret
cs
lea
dec
jl
xor
aam
xchg
cld
mov
adc
add
dec
movsb
leave
cmpsb
call
or
cmp
stc
xor
out
int
push
pop
repz
xchg
mov
iret
jmp
ret
xorl
mov
outsl
mov
mov
in
sub
imul
pop
incl
inc
cmp
mov
mov
jg
mov
or
test
pop
pop
mov
or
sub
cmpsl
jecxz
addb
inc
lcall
cmp
xor
arpl
jns
insb
add
inc
out
push
inc
les
sub
incl
adc
in
daa
xchg
inc
and
mov
movsb
shrb
push
sbbb
mov
pop
add
cmpsb
icebp
add
mov
stos
call
jnp
loop
icebp
add
mov
xchg
outsb
dec
pop
pop
popl
nop
jp
xorb
fsts
es
push
jl
into
dec
push
ljmp
std
adc
pop
ja
popf
push
jae
xor
fs
popa
out
xor
jmp
ret
xchg
sbb
clc
xorb
pop
dec
daa
movsb
int3
dec
test
pushl
lahf
add
jp
xchg
insb
icebp
popf
sarb
push
std
inc
and
leave
pop
xchg
xchg
std
push
test
push
dec
addr16
xchg
mov
jle
xchg
or
ljmp
inc
out
xchg
xor
daa
cmp
push
or
popa
or
roll
ljmp
ret
int
sub
fwait
adc
fwait
push
xor
outsl
mov
int
dec
jle
pop
in
or
loope
jge
add
lcall
hlt
aas
sub
lods
sbb
pop
jg
and
rcll
push
stos
mov
dec
xor
loope
lock
ret
pusha
sbb
mov
gs
hlt
and
test
xor
bound
add
fidivrl
sbb
sub
andb
std
lahf
popa
mov
sbb
mov
or
nop
test
ljmp
jmp
inc
cld
iret
jle
in
cmpsb
dec
mov
dec
lea
arpl
out
or
xor
cli
mov
pop
fidivs
dec
xchg
pop
jl
mov
out
adc
movsl
aaa
cs
push
mov
insl
pop
jbe
aam
ljmp
lods
sub
mov
mov
cmp
stos
adc
xor
mov
sbb
outsl
icebp
call
push
inc
adc
les
push
add
incl
sbb
out
mov
ljmp
das
pop
sub
mov
or
jb
jp
fisubs
mov
daa
push
or
les
testb
jg
inc
inc
add
test
imul
rcrb
data16
leave
jno
incl
iret
push
push
in
pusha
xchg
repz
mov
jbe
pusha
je
shll
ds
jg
pop
sub
loopne
ror
sbb
inc
pop
push
loope
gs
fistpll
dec
cltd
and
dec
aaa
fs
cmp
mov
pop
imul
cli
add
test
clc
sub
int3
into
xchg
int
inc
sub
or
jmp
ret
adc
bound
decl
mov
cmp
jg
jle
sbb
cmpsb
and
stc
mov
je
dec
call
outsl
std
aam
test
clc
out
aaa
ret
push
mov
inc
jae
inc
fbld
jmp
mov
cs
push
ljmp
jno
das
loop
push
add
cmc
add
mov
push
mov
sti
repnz
decl
or
lods
stos
mov
adc
xchg
test
pop
sub
pushf
jmp
pusha
mov
rorl
and
xorl
xchg
inc
adc
decl
inc
add
add
sub
shll
pop
and
sub
mov
incl
lds
jg
adc
jmp
or
and
mov
ljmp
aaa
xor
inc
fcomip
iret
jg
fwait
dec
hlt
push
mov
dec
shr
mov
and
xor
and
push
xchg
int3
add
fucomp
dec
add
je
test
addr16
add
das
loope
ljmp
cmp
mov
negl
cmp
adc
clc
mov
jg
je
pop
js
out
int3
mov
aad
mov
faddp
and
xor
jl
in
jb
sarl
jecxz
or
sti
fstpt
ret
push
lea
call
orb
cmp
or
call
add
icebp
sti
jl
iret
lds
fcompl
idiv
das
std
jmp
or
cmc
pop
mov
jp
fsubrl
pop
add
aam
loopne
outsl
fadd
sub
in
ffree
dec
and
jne
pop
mov
mov
outsl
mov
cmpsl
xchg
or
mov
pop
add
ljmp
jbe
xchg
or
aad
add
hlt
cld
in
imul
xor
call
pop
inc
out
dec
mov
aaa
loop
int3
cmc
out
int
jae
push
push
adc
or
push
ficompl
out
stc
movsl
cmp
cmc
and
jne
fs
add
cli
incl
mov
pop
scas
adc
scas
in
mov
and
jge
jb
fbstp
repnz
stos
mov
lds
jecxz
xchg
clc
mov
je
push
mov
xor
mov
jns
push
or
push
adc
shrb
ret
xchg
mov
stos
push
inc
dec
int
movsl
mov
enter
cli
xchg
inc
add
imul
jge
push
das
or
ljmp
xor
fbstp
call
mov
jmp
sbb
mov
popa
push
lahf
in
movsb
out
xor
mov
mov
or
pushl
add
test
jl
inc
test
inc
or
or
mov
xchg
ret
icebp
in
iret
test
lret
pop
mov
stos
aad
mov
jae
adc
and
add
mov
jmp
mov
sub
roll
fisttpl
orl
sbb
cmp
sti
rorl
cmpsb
sub
jnp
xchg
cwtl
pop
jae
icebp
push
dec
lcall
jb
cmp
cmp
cmpsb
sbb
adc
xor
loopne
outsb
popa
jmp
popf
into
mov
mov
lods
rorl
push
mov
adc
mov
or
jle
mov
fldt
mov
aad
fisubs
sti
push
aas
enter
into
push
stc
int3
jnp
idiv
sbb
mov
xor
jmp
movsb
inc
pop
clc
pop
cmp
out
fmuls
pushl
jge
test
or
push
and
movsb
or
add
xor
incl
and
gs
subl
dec
pop
xor
pop
enter
icebp
int
mov
or
pop
jmp
sub
loopne
mov
imul
inc
int3
mov
sbb
sbb
adc
cmp
or
xchg
das
out
imul
in
and
addr16
jno
ljmp
mov
test
pusha
xor
je
decl
jo
sub
pusha
in
dec
test
add
push
repz
dec
pop
dec
add
sti
call
shlb
dec
cmp
rorb
in
push
mov
jne
or
rcl
movsl
jno
cmp
add
or
imul
in
decb
xor
ds
int3
mov
push
inc
inc
cmp
jo
je
jo
xor
jbe
dec
hlt
cmpsb
cmc
fxch
xor
pop
jne
mov
call
std
and
frstor
test
inc
pop
push
xlat
add
sbb
neg
pop
imul
enter
pop
and
xchg
adc
sbb
mov
je
xchg
adc
mov
pushl
fldt
jmp
inc
movsl
dec
cmp
hlt
shlb
stc
cmp
xchg
movsb
xor
xor
incl
fidivrs
adc
dec
ret
outsb
sub
sbb
jb
sub
pop
jp
xchg
test
xlat
call
imul
popf
push
daa
jne
sub
add
pop
popf
ret
lock
jns
lcall
out
xor
sbb
aas
xor
pop
xor
daa
mov
cmpsl
mov
pushl
and
shlb
jnp
ss
jae
out
ljmp
int
pusha
and
pushl
jle
inc
and
lcall
add
decb
insl
aas
pop
into
sbb
decl
ja
push
cmp
fisttps
mov
ljmp
and
ljmp
jle
mov
mov
andl
cmc
mov
iret
cs
mov
push
outsl
lret
xchg
fiadds
stc
mov
stos
pop
adc
push
pusha
mov
or
pop
add
dec
xchg
adc
jb
push
repz
sub
mov
sar
or
cmpsb
stos
push
adc
mov
out
test
push
push
push
js
mov
dec
push
add
sub
push
out
adc
inc
aas
cmpsb
pusha
mov
lods
mov
cli
pop
cwtl
adc
mov
rorl
enter
push
push
int
mov
rolb
call
outsb
adc
imul
push
push
inc
incl
xchg
add
mov
in
pushf
movsb
nop
cmp
movsb
pop
je
mov
pop
sub
pushl
jg
dec
lret
loopne
push
cmp
mov
movsl
mov
in
adc
lds
mov
insl
push
mov
xor
jmp
pop
aam
xchg
cmpsb
sbb
ljmp
xor
out
jno
push
lods
ret
out
pusha
loop
cmp
push
out
addr16
dec
int
mov
cli
ret
insb
fbld
push
je
jge
movsb
rclb
dec
bound
sub
mov
fnsave
dec
mov
dec
lds
add
xorb
stos
mov
pop
pushf
mov
neg
decl
jmp
arpl
mov
sub
or
mov
stos
aad
sbb
imul
repnz
lcall
or
repz
movsl
arpl
mov
inc
adc
xor
sub
mov
mov
out
or
push
dec
dec
dec
mov
sub
mov
sbb
mov
icebp
or
xchg
stos
dec
mov
into
and
xor
jge
mov
dec
hlt
mov
jle
mov
inc
push
add
cmovae
ret
xchg
adc
dec
pop
insb
arpl
mov
mov
inc
push
sti
mov
mov
sbb
mov
shrb
xchg
jg
ss
out
roll
incl
lret
mov
sub
cmc
pop
cmp
fistps
and
repnz
xchg
addr16
jae
orl
pop
ret
mov
mov
dec
pusha
mov
mov
xor
push
push
movsb
inc
mov
pop
dec
or
add
mov
inc
sub
push
lock
neg
jmpw
popa
xor
arpl
adc
scas
push
repnz
cmp
out
adc
dec
add
xor
loope
negl
dec
mov
aam
and
sub
mov
flds
jnp
xor
xor
adc
adc
jnp
fsub
jmp
jae
scas
std
fisttpl
rolb
test
sahf
mov
ret
xchg
loopne
call
pop
pop
mov
into
clc
mov
cmpl
push
and
jmp
daa
sub
xor
pushf
dec
add
or
fwait
loop
cmp
insl
or
insb
jns
fildl
mov
push
pop
add
test
lock
inc
enter
mov
add
movsl
sub
jae
cmp
je
jge
jle
jecxz
fsubp
and
xchg
mov
jbe
aad
xlat
sbb
in
fimull
xchg
jp
hlt
loope
jl
mov
mov
sub
outsb
fsubrs
adc
lds
inc
pushl
xor
or
inc
lcall
jl
mov
adc
call
mov
mov
mov
sub
adc
push
mov
call
cld
ret
fs
push
sub
xchg
xchg
push
popa
ds
cli
or
lcall
push
outsl
push
sub
cmp
out
jge
xchg
mov
fists
ljmp
sti
shl
push
mov
xchg
aam
cld
test
mov
mov
jg
pushl
mov
ss
adcb
xchg
push
in
fidivrs
fcompl
data16
jmp
push
sbb
ds
cltd
test
xchg
mov
mov
mov
aaa
loopne
mov
imul
call
in
or
jb
std
jnp
mov
and
adc
fcmovnb
aad
mov
inc
call
into
mov
out
fcoms
xor
sbb
dec
popa
push
ficoms
jno
loopne
sub
int3
decl
jmp
and
mov
iret
jo
add
xor
cwtl
cmpsb
or
jg
jg
xor
imul
push
loop
jmp
inc
jo
movsb
shl
decl
jge
ficomps
inc
xchg
ret
loopne
popf
int3
mov
cwtl
and
gs
sub
call
dec
jle
jp
ret
pop
ds
movsl
adc
sbb
inc
xchg
daa
and
decl
sub
sub
jmp
cli
xchg
dec
push
add
cmpsl
imul
and
mov
xchg
les
mov
jmp
in
enter
insl
mov
insl
push
mov
and
leave
or
jg
call
dec
sub
nop
sahf
aam
aaa
loope
pop
scas
test
and
fs
decl
clc
cmp
stc
or
inc
and
jnp
xlat
jns
andb
xor
scas
repnz
movsl
fadds
add
and
sbb
add
and
lret
incl
ret
xchg
fcmovnb
fsubr
out
jl
adc
cld
dec
inc
jle
push
in
push
loopne
daa
dec
xlat
fcmovnb
out
cwtl
push
shrb
insl
aam
sbb
mov
outsb
and
int3
inc
xor
fists
decb
sbb
sbb
insb
xchg
lret
dec
inc
jb
lret
incl
insb
xchg
stos
mov
and
add
sti
movsl
cmpsb
sbb
imul
in
xor
or
jmp
cld
jle
pop
std
sti
bound
sbb
push
xchg
fldenv
loopne
incl
shrb
lock
or
push
mov
insb
xor
mull
and
out
sti
jge
sbb
testb
ljmp
dec
xchg
xorb
lcall
push
lods
ficompl
mov
dec
push
ret
ljmp
shll
xorl
inc
aas
fwait
add
xchg
loope
pop
pushl
mov
or
popf
enter
mov
jle
mov
push
xor
mov
jmp
std
push
inc
and
jmp
idivb
fistpl
sbb
scas
mov
or
inc
mov
cmp
mov
pop
lea
mov
insb
repnz
loop
cmc
pop
push
aaa
jbe
outsl
cld
ljmp
out
and
jg
mov
adc
mov
shlb
mov
sub
scas
mov
out
sbb
mov
pop
into
mov
ljmp
or
leave
xor
jle
scas
pusha
js
loop
call
push
repz
nop
jge
and
inc
call
shr
jle
mov
adc
sbb
cld
cmpsb
ret
lcall
push
mov
mov
or
daa
mov
sti
imulb
incl
enter
push
hlt
lods
stos
sub
or
stos
cmp
push
lcall
std
jmp
cwtl
inc
cmp
sbb
ds
out
inc
incl
shll
sub
notl
or
out
aad
loopne
and
mov
jo
add
rolb
std
dec
daa
out
mov
rcll
outsb
sbb
cld
clc
ret
hlt
dec
in
scas
fadds
jmp
mov
adc
mov
imull
jp
pushl
fisubrl
mov
ljmp
outsl
mov
cmp
ret
fstpt
mov
daa
push
mov
cs
jg
sbb
xorl
fwait
insb
fs
mov
stos
test
jo
pop
push
and
mull
pop
cmp
out
mov
inc
add
xchg
lret
lret
mov
inc
inc
aam
cltd
jecxz
or
rclb
push
or
dec
shlb
add
add
adc
nop
aas
push
adc
mov
and
jmp
mov
loop
jne
xor
push
iret
vmwrite
jle
mov
pushl
cmp
xchg
mov
std
and
testl
fisubrl
xlat
mov
sbb
mov
fwait
push
and
stos
lss
push
pop
cmpsb
mov
jae
clc
mov
jns
clc
ret
mov
pop
inc
nop
push
push
cwtl
jp
push
push
inc
push
insl
scas
jnp
call
cmpsl
adc
and
shl
mov
or
mov
lahf
lods
aas
stos
mov
jp
cmp
call
sub
aaa
mov
inc
cmp
xor
aad
dec
add
into
inc
scas
mov
mov
dec
inc
or
or
fs
mov
adcb
add
xlat
icebp
movsl
sub
mov
ljmp
pop
pop
xor
enter
pop
inc
xchg
mov
jmp
push
std
aaa
or
pop
mov
call
sub
adc
mov
mov
push
mov
adc
add
pop
outsb
cli
andb
and
test
imul
sub
xor
repz
adc
hlt
cmp
int
notb
das
cmp
mov
cmp
jnp
insb
shlb
pop
or
insb
fldenv
sbb
fprem1
dec
push
cmc
hlt
cmp
pop
negb
dec
cmc
cmpsl
ret
sub
add
dec
jbe
cmp
jbe
fldcw
popf
adc
bound
ret
sbb
cmp
adc
sbb
mov
jnp
fsts
sbb
adc
flds
loopne
sub
adcb
sub
int
sub
fnstcw
and
cld
or
orb
popa
ss
mov
clc
add
fnstsw
pop
sbb
popa
and
sub
ret
xchg
cmp
gs
and
repnz
add
adc
pop
cmp
ret
xchg
subl
out
out
adc
pusha
ja
popa
jbe
xor
repz
lcall
sbb
cwtl
inc
fucomp
mov
cs
or
push
movsb
lret
xchg
jno
push
push
mov
rclb
into
add
xchg
ss
push
adc
loopne
adc
ds
push
ss
cs
pop
rcrb
xchg
popf
mov
movsb
fs
fnstcw
sbb
popa
or
in
or
pop
add
outsl
push
adc
int
leave
or
mov
xor
imul
insb
ss
gs
mov
mov
arpl
dec
add
mov
jl
jbe
inc
and
add
ds
arpl
jg
ret
cmp
sub
jl
int3
add
cmp
jne
aas
xchg
xchg
dec
push
pop
and
sti
in
inc
icebp
jnp
inc
jne
or
in
inc
icebp
mov
rcl
mov
cli
ja
mov
adc
daa
dec
flds
leave
mov
test
jb
push
adc
decl
jnp
pop
pop
mov
cli
fidivl
or
daa
inc
mov
inc
lods
push
ret
test
call
lret
cmp
loope
and
push
rcrl
or
loope
ljmp
xor
xchg
test
mov
rcr
jmp
add
jge
cmp
pushl
xchg
push
lahf
mov
pop
mov
fldt
pop
push
sub
jmp
or
lcall
fdivrl
out
dec
and
iret
dec
stc
add
shlb
xchg
int3
xor
decl
pop
adc
sti
daa
icebp
xor
mov
cmp
fcompl
call
imul
mov
pushl
cmp
arpl
adc
out
lock
sub
sbb
test
test
incl
rcrb
imulb
enter
cltd
lret
shll
jmp
inc
test
pop
dec
scas
mov
sahf
pusha
jl
dec
movsl
repz
js
repz
pushl
hlt
inc
push
in
jne
cmp
push
inc
in
sbb
call
jne
insb
push
pop
adc
ljmp
out
bound
xchg
aaa
out
sti
lds
out
xor
jno
lcall
push
jmp
cwtl
dec
dec
ds
lret
cmp
daa
push
pop
in
lcall
jmp
test
popf
sub
or
out
mov
dec
mov
ffree
je
cmp
nop
jg
pushf
dec
xor
mov
std
and
insl
cmp
das
adc
pushf
push
xor
mov
jbe
push
lret
and
hlt
lods
ret
notb
cli
lcall
dec
cmp
repz
test
add
dec
xor
jl
rorl
add
rol
xor
dec
addl
cli
push
sar
ljmp
fcomip
loop
inc
xchg
lods
sub
fnstsw
clc
and
jnp
xor
lcall
mov
subl
adc
mov
or
hlt
enter
cmp
mov
pushl
ret
mov
xor
inc
scas
add
xor
xchg
adc
xlat
mov
call
mov
aaa
inc
pop
lods
aam
in
sbb
pusha
xchg
adc
test
sbb
test
mov
dec
and
jle
dec
cld
and
cmp
decl
or
cmp
cmp
sbb
sub
mov
mov
sti
jmp
jge
out
pop
repz
inc
incl
sub
std
sub
popf
dec
push
cmpsb
push
lea
flds
call
jmp
mov
mov
mov
jns
out
hlt
fsub
and
mov
nop
xchg
shrl
incl
rorl
lods
push
pop
cmpsl
call
push
iret
pop
inc
dec
sbbb
fbstp
int3
push
mov
sbb
sub
push
sbb
xor
call
jg
dec
movl
sbb
jno
xchg
movsl
push
mov
lcall
ljmp
ret
dec
leave
fsubrl
xor
adc
mov
xchg
incl
aaa
jno
pusha
dec
inc
fistps
mov
loop
insb
cli
leave
dec
inc
das
pop
dec
mov
ljmp
push
and
dec
bound
lcall
pop
movsb
es
mov
call
cs
xchg
sub
in
add
mov
inc
lahf
jle
sbb
mov
call
mov
es
jecxz
and
inc
stc
cld
jmp
xor
insb
sbb
jg
pushw
fstps
xchg
cld
jmp
mov
and
inc
out
jb
shrb
adc
mov
test
push
inc
dec
fidivrl
xor
xor
test
gs
cmp
sub
pushf
jns
jns
cmpl
and
fildll
dec
jg
jnp
push
sahf
outsb
fstp
ror
inc
sbb
xchg
mov
jl
in
int
add
insb
imul
lcall
pushl
test
in
jge
ljmp
sarl
pushl
or
fnstenv
pop
loope
mov
push
enter
sbb
cmp
out
test
jno
sub
xchg
mov
lods
incb
lret
out
and
push
mov
jmp
dec
ja
jle
add
lea
movsl
dec
int3
stos
aad
adc
clc
jp
out
test
fs
push
sbb
add
adc
add
add
fs
adc
nop
push
adc
and
pop
incl
stos
sub
or
add
pop
push
and
subb
dec
test
and
add
sub
push
inc
push
dec
test
test
or
or
inc
push
add
adc
push
inc
add
mov
add
and
add
mov
flds
incl
lock
dec
out
fbld
mov
jl
lret
aam
clc
and
or
mov
mov
push
or
pop
sahf
das
xlat
sub
subl
mov
jle
sub
mov
fdivrl
xor
incl
fdivp
insb
fcompl
sbb
lret
push
daa
push
aam
dec
xor
jecxz
cmp
jmp
int
out
ss
stos
pop
and
jo
sub
out
push
aaa
jl
sbb
xor
loop
aas
frstor
test
mov
cltd
out
incb
cmp
push
out
fldcw
cmp
fs
xor
xor
out
insl
dec
popf
int3
stos
and
call
and
out
and
cmc
sbb
jp
or
test
mov
pop
dec
call
pusha
pushf
mov
icebp
or
push
xor
xor
mov
add
xchg
mov
call
mov
ret
test
icebp
iret
fstpl
fcmovnu
outsl
fdivl
ljmp
push
fsts
shl
out
jl
addr16
roll
jo
jg
and
sbb
test
ljmp
test
nop
bound
cmp
lret
ret
rcrl
int
push
inc
jg
call
add
dec
mov
lds
and
movsb
sbb
arpl
out
incl
out
fwait
dec
sub
cmc
adc
dec
mov
xchg
out
ljmp
jg
sbb
fistps
clc
out
mov
add
jno
int
iret
aaa
pop
jmp
stos
pop
pop
mov
decl
push
orl
mov
dec
imul
adc
addr16
jecxz
popa
mov
or
sahf
pushl
dec
mov
jg
ljmp
sub
fnsave
cmp
rorl
pop
clc
dec
push
bts
jno
into
and
mov
fsubl
test
pop
or
rclb
xchg
ret
nop
sub
add
cmp
inc
sub
cmpsl
adc
lcall
rcrb
imul
cmp
scas
xor
rclb
dec
push
mov
outsb
lret
call
jb
inc
nop
rol
and
test
or
cmpsl
push
push
mov
sahf
pop
fdivl
jmp
mov
sbb
lret
cwtl
xor
add
and
vdivps
xchg
adc
dec
sub
push
addb
mov
or
out
ljmp
scas
jb
pop
clc
inc
aam
scas
arpl
inc
or
nop
xchg
lock
scas
iret
mov
inc
mov
lods
lds
mov
sbb
jbe
iret
cwtl
xchg
ljmp
test
call
dec
or
pop
push
imul
in
cmp
push
call
xor
inc
sar
idiv
incl
and
aad
and
xchg
mov
add
mov
dec
cli
mov
mov
fidivl
int
push
pop
jne
inc
mov
aas
xchg
ficompl
or
cmp
add
fcom
cmpsl
ror
out
call
stos
xor
fidivrl
add
cmp
jg
dec
sub
cs
movsb
sub
das
cmpsb
xchg
push
pop
test
in
fistps
inc
xchg
cmp
and
cmpsb
and
ficompl
repz
jae
cmp
adc
jg
std
mov
mov
fcmovb
fwait
lret
fidivl
mov
loopne
sbb
xor
push
outsb
addr16
jle
mov
dec
push
test
stos
cs
fnsave
cli
and
shl
dec
test
pusha
daa
es
mov
mov
repz
and
cmp
pop
mov
mov
in
outsl
fistpl
rcl
mov
out
sar
mov
stc
xchg
incl
and
adc
aam
push
jb
ret
popl
mov
daa
xlat
outsl
pushl
mov
fucom
cs
mov
cmp
xor
xlat
rclb
sub
mov
fiadds
mov
mov
sub
dec
lret
dec
subl
ficoms
and
decl
mov
dec
sub
inc
pop
mov
movl
fstpl
xchg
jg
and
dec
dec
jmp
push
push
mov
mov
cmpsb
rorl
cmpsl
xlat
sbb
mov
out
mov
lods
dec
lcall
imul
mov
or
add
lcall
out
aam
mov
daa
mov
xor
pop
pop
fisubrs
pop
and
xor
push
das
scas
xlat
in
in
mov
push
ret
aaa
xchg
imul
clc
fucomi
or
shrl
xorl
pop
lret
out
movsl
mov
mov
mov
and
mov
inc
cld
aam
inc
inc
insl
mov
stos
inc
push
pop
inc
int
inc
in
adc
lcall
testb
iret
jl
jns
xchg
ja
std
popa
mov
std
jns
lea
xor
adc
fidivrl
lret
mov
mov
jae
sub
popa
sbb
ret
xchg
sub
incl
xchg
push
pop
fldcw
xchg
test
fstpt
test
pop
mov
test
rol
inc
aad
lods
pop
push
pusha
sub
push
dec
fdivrl
aas
pushf
dec
sub
pushl
fcoml
pop
arpl
sbb
pop
daa
pop
inc
int
xchg
push
pop
jmp
sti
idiv
loope
aam
inc
pop
aaa
imul
add
cmp
andps
jecxz
call
pop
mov
adc
adc
and
outsl
mov
cmp
dec
dec
pop
je
push
repnz
cmp
adc
or
call
in
jmp
push
pop
inc
mov
mov
dec
testl
sbb
imul
incl
sbb
jmp
push
ljmp
cmp
in
inc
sti
xchg
aaa
cmpsl
or
and
jge
and
ss
mov
je
fildll
std
repz
push
imul
aas
cmpsl
mov
fdivrl
pop
inc
xchg
test
pusha
xor
aam
cmpsl
sub
mov
mov
xchg
adc
ljmp
fildl
or
loopne
ret
cmpsl
sbb
push
or
cmp
cmc
aad
imul
repz
out
ror
xchg
cld
in
jg
mov
into
test
repnz
scas
out
adc
int3
mov
mov
enter
mov
ljmp
call
jl
mov
inc
inc
aas
jnp
fcomps
mov
lcall
jg
inc
daa
cmp
pop
stc
roll
popl
mov
lods
decl
les
mov
sub
test
sbb
lcall
xor
lds
push
incb
xchg
ss
xor
mov
shlb
in
xchg
mov
int3
aad
ljmp
sti
incl
pop
cmpsb
inc
fdivl
stos
mov
pop
loope
jle
add
insb
fsubs
rcr
daa
pop
xchg
pop
mov
jg
fildll
sahf
shrb
in
add
ret
in
out
mov
mov
stos
adc
call
inc
ljmp
aaa
rorl
push
add
dec
das
enter
xchg
fildll
adc
pop
aaa
call
dec
cmp
fucomi
popa
jae
fmulp
pop
imul
in
pushl
inc
xchg
inc
sub
cmp
jnp
mov
dec
jge
pop
in
in
pushl
jg
pop
in
xchg
jecxz
test
clc
adc
or
addb
mov
mov
lea
mov
mov
fdivs
cli
lcall
mov
pop
jp
adc
mov
xchg
push
jno
mov
fwait
adc
scas
xchg
outsb
add
cwtl
mov
fmul
mov
incl
dec
gs
jae
popa
aaa
jp
dec
inc
dec
ss
push
jno
inc
arpl
inc
jns
dec
push
jns
xor
ss
arpl
xor
int
xor
push
dec
jb
gs
jmp
fs
dec
inc
dec
jo
inc
popa
jne
imul
dec
jbe
js
push
dec
dec
je
dec
dec
dec
push
inc
mov
pushl
jns
dec
inc
push
push
jb
pop
outsl
push
cmp
outsb
xor
inc
mov
js
popa
pop
jae
push
dec
outsb
push
sahf
inc
outsl
xor
jns
outsb
jne
clc
push
push
jne
fs
inc
pop
ja
inc
js
push
je
outsl
gs
jnp
pop
and
push
mov
outsb
push
lahf
adcb
sti
incl
push
inc
dec
inc
outsl
push
push
jo
push
push
pop
dec
or
ss
inc
ja
outsl
adcb
push
imul
inc
xor
inc
push
inc
dec
bound
ljmp
inc
push
aaa
jns
dec
sub
inc
xor
xor
pushl
dec
js
aaa
jno
pop
arpl
jbe
pop
push
dec
push
inc
jne
dec
jne
bound
jne
dec
insl
xor
outsw
pushl
cmp
imul
arpl
pop
xor
aaa
insl
insl
jp
int
dec
push
jg
lcall
push
xor
inc
dec
inc
push
ja
push
insb
push
push
dec
bound
addr16
cmp
ljmp
dec
imul
imul
outsl
xor
xor
cmp
jno
push
dec
cmp
mov
jg
xor
jo
and
dec
imul
mov
push
xchg
adcb
fisubrs
or
xchg
add
mov
cmpsb
jmp
sbb
and
sbb
adc
add
xchg
inc
mov
shl
mov
xchg
dec
push
fcompl
in
ljmp
sub
adc
jmp
cs
inc
dec
in
dec
inc
jecxz
inc
mov
xchg
jo
out
js
ljmp
fwait
xor
add
inc
cmp
and
ja
mov
sub
outsb
sbb
jbe
add
jb
xor
and
adc
xlat
xor
sub
or
pop
jae
lret
sbb
sbb
jbe
dec
lahf
xor
mov
xchg
adc
sub
jno
pop
cs
aas
cwtl
xor
loop
loopne
and
insl
test
jbe
dec
dec
daa
mov
or
ds
subl
iret
insb
mov
dec
adc
and
jmp
in
push
std
out
jnp
jmp
jbe
dec
add
mov
mulps
jnp
js
rolb
psubq
fcomps
rcll
std
mov
adc
pop
sub
out
in
fsubr
rcrl
mov
inc
fdivp
adc
cmpsl
dec
jo
loope
xor
push
ret
mov
xchg
jbe
setno
jecxz
inc
outsb
test
daa
aas
inc
enter
arpl
sbb
daa
in
mov
pushf
pop
xor
jbe
dec
outsb
pop
cmp
adc
and
mov
jb
sub
testb
pop
xor
cmp
sub
leave
fildll
mov
cs
add
push
or
xchg
cs
in
dec
out
icebp
rcrl
add
mov
pop
loopne
mov
or
cld
jmp
pushl
jns
test
rorb
sti
fidivrl
jge
insb
les
out
jmp
out
dec
ljmp
jl
daa
jbe
mov
add
loop
pop
mov
lcall
and
lds
in
les
jnp
sub
push
shrl
ja
gs
jg
mov
cs
insb
cmove
imul
imul
daa
pop
mov
cmpb
add
sub
out
add
adc
imul
push
imul
gs
cmp
dec
or
inc
cltd
push
dec
imul
jne
sqrtps
jns
add
jb
popa
insb
cmp
outsb
arpl
lea
push
or
mov
inc
jne
push
sbb
push
fs
sub
push
sub
gs
pop
pop
or
cmpsl
je
push
imul
outsl
mov
mov
inc
jns
mov
push
and
ja
insb
jae
push
inc
inc
or
negl
or
lea
in
mov
inc
js
stos
movsb
cli
mov
mov
adc
not
bound
push
inc
fs
jae
dec
outsl
fs
dec
pop
fs
adc
imul
insb
xchg
mov
popa
xchg
inc
xchg
sub
jbe
jne
outsb
xor
movsl
or
adc
push
inc
fistpl
adc
jae
imul
xor
pushf
and
pop
jecxz
scas
add
dec
push
outsl
dec
jge
inc
sub
push
je
daa
xor
inc
ja
or
pop
popa
imul
push
add
or
leave
aaa
pop
inc
push
mov
push
jns
inc
imul
or
mov
test
dec
gs
lods
cmpl
mov
fisubrs
cmp
jg
lock
mov
outsl
hlt
dec
gs
sub
and
imul
addr16
push
addb
outsb
out
outsl
adc
outsb
pop
adc
fldt
add
in
je
int
xchg
push
jns
mov
mov
push
test
inc
adc
adc
push
test
test
dec
jae
rorl
mov
fldt
adc
sahf
xchg
cmovg
dec
scas
push
xchg
xor
sbb
rcll
jae
mov
or
adc
test
in
imul
ja
sbb
jns
inc
imul
xchg
inc
rcll
sub
int3
cmovns
adc
pop
push
iret
push
and
out
lahf
dec
or
inc
pop
addr16
jge
xchg
and
sbb
mov
mov
pop
dec
cltd
dec
jae
fbstp
pushf
fiadds
lret
push
or
gs
pop
jnp
adc
sbb
or
add
in
lds
roll
repz
jmp
loope
inc
rol
sbb
pop
leave
pop
bound
inc
mov
cltd
jno
dec
pop
sbb
mov
xchg
cmpsl
jne
lods
pop
insb
push
sub
cwtl
lds
pop
push
sub
jp
fdivs
fwait
inc
sbb
sub
xchg
lea
loop
dec
dec
cmp
push
idivb
xor
insl
push
dec
lods
jmp
push
xor
inc
imul
and
cmp
aad
sbb
xchg
rsqrtps
popf
loope
push
mov
mov
sarb
add
insl
inc
or
xor
adc
pop
lret
dec
fimull
gs
fcmovb
pop
sarb
xor
gs
cmp
dec
jno
aaa
mov
inc
inc
push
push
xor
leavew
fiadds
jb
adc
ja
je
jg
sbb
jns
cmp
or
outsl
ja
testb
push
arpl
sub
or
test
and
pusha
cmp
and
inc
in
push
push
mov
lds
xchg
add
sub
ljmp
movsb
movsb
adcb
push
add
add
addl
sub
add
and
add
nop
push
and
andb
mov
mov
inc
adc
addl
mov
adc
orb
adc
adc
add
and
inc
push
adc
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
or
dec
pop
leave
sub
jp
mov
fmull
push
push
lcall
aam
jmp
cmpsb
loop
add
adc
and
lods
imul
imul
cmpsb
imul
dec
shrl
cmp
shll
mov
lods
mov
lcall
push
sub
imul
imul
insb
lcall
sub
dec
shll
dec
push
bound
dec
roll
dec
shll
decb
lcall
cmp
lcall
xchg
cmpsb
imul
sub
hlt
push
xchg
sbb
cmp
dec
shll
push
pusha
jb
shll
ror
fnstenv
xchg
adc
cmpsb
imul
cmpsb
imul
into
loopne
add
lret
add
cmp
push
lcall
les
loop
mov
cmpsb
imul
cmpsb
imul
imul
lcall
xor
lcall
lcall
into
imul
lret
cwtl
add
cmp
pop
jo
xchg
fwait
cmpsb
imul
cmpsb
xor
cmp
imul
imul
sub
testb
sbb
cmp
shll
pop
push
dec
rcll
cmp
in
clc
lcall
dec
sub
inc
push
pop
push
dec
shll
mov
sarl
xor
shrl
and
inc
push
shll
nop
mov
mov
shl
testb
cmpsb
imul
cmpsb
imul
lcall
dec
mov
lcall
xor
dec
shll
dec
pop
push
shll
mov
dec
call
add
xor
shll
cmp
pop
insb
shll
scas
mov
fsubr
testb
lcall
cmp
imul
imul
jae
adc
dec
imul
imul
insl
lcall
sbb
imul
imul
imul
dec
shll
inc
dec
pusha
insb
shll
mov
dec
mov
or
sbb
xor
lcall
cwtl
cmpsb
imul
xor
out
shll
lcall
jl
imul
imul
roll
push
sub
dec
pop
dec
shll
test
xor
shll
rcr
ljmp
cmpsl
adc
xor
lcall
lcall
ret
xor
cmpsb
imul
sub
xor
shll
dec
pop
jo
shll
mov
xor
fsubr
add
imul
imul
imul
lcall
dec
push
cmpsb
imul
imul
mov
clc
add
push
and
shll
jo
dec
shll
shl
lcall
sbb
cmp
lcall
mov
mov
shll
lods
lods
add
imul
imul
imul
dec
shll
xor
dec
pop
shll
lcall
rcr
call
mov
and
dec
shll
test
mov
ljmp
mov
and
imul
imul
imul
dec
shrl
sub
push
shll
lcall
lret
hlt
xor
mov
push
add
and
inc
shll
jb
dec
shll
rcr
xor
jmp
mov
and
xor
sarl
inc
push
bound
shll
mov
xor
out
mov
mov
dec
shll
cmp
xor
shll
mov
dec
rcr
call
sarl
xor
shll
mov
mov
rcr
lock
xor
imul
imul
imul
dec
shll
inc
push
fs
xor
roll
mov
cmpsb
imul
shll
sub
dec
pop
mov
js
xchg
mov
cmpsb
imul
mov
dec
xor
shll
bound
mov
xor
rcrl
cmpsb
pop
ss
out
or
imul
cmpsb
imul
hlt
push
mov
xor
xor
pusha
insb
js
dec
shll
xchg
test
int3
pop
ss
rcr
ljmp
lcall
lcall
stos
mov
xor
cmpsb
imul
mov
cmpsb
sub
inc
pop
fs
mov
cmpsb
imul
lcall
cmp
pusha
imul
imul
xor
add
inc
xor
shll
bound
mov
xor
rcrl
dec
addr16
lret
rolb
xor
dec
shll
dec
pop
jo
shll
mov
dec
loop
add
or
cmpsb
imul
cmpsb
imul
insb
lcall
xchg
shll
sub
inc
lcall
orb
mov
aam
ret
dec
ror
ret
cs
lcall
adcb
shl
out
ret
cmpsb
imul
push
sub
lcall
insb
jle
imul
xor
cmpsb
in
mov
imul
cmpsb
imul
loopne
inc
mov
lcall
imul
insb
lcall
adc
xor
and
inc
dec
pusha
insb
xor
shll
test
dec
rol
fsubr
cld
or
cmpsb
imul
imul
cmpsb
imul
leave
push
sub
dec
dec
shll
mov
xor
loop
imul
cmpsb
imul
imul
cmpsb
imul
sub
xor
sarl
dec
pop
outsb
orb
dec
mov
xchg
dec
shll
in
adc
sbb
lcall
cmpsb
imul
imul
dec
shrl
and
inc
push
shll
mov
mov
lcall
xor
push
imul
imul
insb
lcall
inc
xor
shll
pop
push
adc
dec
rorl
dec
out
dec
call
add
ss
shll
dec
pusha
jb
shll
ror
fnstenv
rcrl
lcall
dec
push
bound
cmpsb
imul
imul
xor
or
sbb
cmp
xor
shll
jo
xchg
mov
mov
loop
rcl
xor
imul
dec
pop
insb
js
nop
pushf
lcall
lret
rcl
rcl
je
imul
dec
shll
xchg
movsb
mov
aam
imul
cmpsb
imul
imul
cmp
je
aad
add
cmpsb
imul
imul
mov
ljmp
cmpsb
imul
cmpsb
imul
lcall
lret
xlat
lcall
cs
push
imul
imul
sub
hlt
push
fsts
and
dec
xor
shll
insb
jle
xchg
shll
shl
cmpsb
imul
cmpsb
imul
cmpsb
imul
into
loopne
clc
or
dec
shll
pop
push
dec
shll
orb
lcall
fmull
xor
add
xor
pop
xor
shll
js
pushf
scas
add
fsubr
dec
shll
mov
dec
shll
mov
xor
add
push
es
imul
jae
cmpsb
lret
fistps
imul
cmpsb
imul
sbb
xor
shrl
push
data16
outsb
shll
or
out
fstpl
aam
add
sub
je
mov
shll
ljmp
dec
shll
fidivs
jecxz
add
inc
or
dec
rcrl
jle
and
test
movsb
mov
inc
mov
or
andb
pop
push
adc
add
sub
sub
inc
add
sbb
and
call
pop
pop
mov
and
insl
or
popf
fbld
xchg
mov
pop
or
filds
jmp
mov
mov
pop
mov
daa
dec
push
cmp
jp
inc
fwait
movsb
pusha
imul
mov
cmpsl
scas
adc
xor
or
jb
loopne
inc
arpl
adc
or
aas
or
push
xchg
adc
dec
jnp
inc
inc
jno
dec
test
cmp
mov
jmp
jne
jmp
loope
fcomps
stc
jbe
jp
fmull
or
cli
mov
dec
mov
cmp
push
test
cmpsb
orl
mov
inc
stc
loopnew
sub
repnz
jl
sub
mov
arpl
call
sbb
aaa
pushf
mov
xchg
fildl
outsl
xor
lds
fcmovne
pop
inc
xchg
rorb
pushl
cmp
das
into
rolb
and
mov
scas
in
push
push
or
jmp
sbb
out
insb
or
pop
add
xchg
pushf
hlt
into
ds
jmp
sbb
mov
sub
out
std
mov
jl
test
jnp
jle
dec
push
call
pop
aad
push
das
mov
mov
xor
xchg
arpl
pop
out
stc
dec
cmp
daa
notb
jg
mov
out
int
dec
aas
push
aas
add
rolb
std
adc
in
mov
hlt
cmp
call
bound
xchg
sbb
mov
or
jo
pop
shll
sbb
pushl
test
inc
mov
xor
mov
jb
loop
push
int
adc
push
test
jmp
in
pop
repnz
pop
sub
add
xorl
inc
xor
int
add
inc
in
xor
cli
mov
lret
and
adc
jg
push
push
jne
inc
xchg
xchg
ja
adc
xchg
pop
cmpsl
add
pop
call
xchg
icebp
mov
call
jmp
and
hlt
and
fsts
pushf
aaa
cltd
iret
je
cmp
xor
push
cltd
mov
jmp
sub
insb
rclb
adc
ss
in
fcoml
arpl
dec
jnp
insl
lcall
mov
mov
mov
stos
mov
ret
leave
inc
test
and
imul
push
push
fdivrs
xchg
or
add
in
sbb
test
cld
ljmp
fcmovnb
ret
lcall
sbb
and
int3
shll
call
hlt
jg
jg
lret
mov
mov
add
stos
scas
rcr
jecxz
xchg
int
aad
jmp
jl
psrlw
xchg
movsl
inc
mov
clc
call
daa
out
test
mov
jge
cmc
ret
fsubrp
pushl
xor
fstpl
and
dec
jp
decl
pop
movsl
loopne
popa
mov
push
push
mov
add
adc
sub
popa
arpl
stc
jl
popf
push
cs
jge
mov
cmpsl
stc
inc
mov
pusha
or
xchg
popf
mov
je
xchg
inc
jae
jmp
sbbb
add
out
fbld
fs
inc
push
jb
add
dec
jmp
dec
jne
clc
incl
xor
rolb
adcl
mov
xchg
jno
cmp
lcall
fwait
add
xchg
sub
in
dec
fwait
mov
xor
out
jecxz
add
ret
fwait
movsl
stos
call
xorb
jl
js
fldt
aam
add
cs
fstps
jo
adc
decl
push
push
sbb
adc
ja
ljmp
or
sti
xor
sub
cmp
add
or
lds
jmp
sahf
cmp
int
call
fdivp
jae
mov
inc
aam
cmp
jb
jmp
ljmp
and
jns
jl
movsl
pusha
lock
jno
movsl
mov
or
fdivrs
jg
call
test
push
out
popf
xor
ret
inc
adc
xchg
fbstp
lock
pushl
sub
or
movsb
repnz
cltd
cmpsl
ja
xchg
xorb
xchg
jg
les
xchg
loopne
push
out
popf
stc
add
cmp
lcall
ljmp
add
xchg
mov
xor
mov
inc
dec
scas
mov
pushf
mov
inc
cwtl
add
nop
jns
notl
test
xlat
stc
pop
clc
popf
rorl
call
out
inc
push
lods
stos
call
in
mov
int3
mov
dec
pop
adc
mov
lcall
insb
xchg
fists
movsl
adc
pushf
iret
xlat
mov
cmpsl
sbb
adc
cmc
dec
pop
sbb
jmp
repz
cmp
test
and
sbb
sbb
mov
jmp
mov
jbe
insb
fidivrs
and
pop
cltd
cmp
push
and
dec
jo
mov
adc
lcall
pop
int3
fwait
arpl
xor
rolb
add
or
adc
movsb
sub
lret
mov
mov
sub
sti
in
je
pop
mov
das
xchg
clc
mov
in
pusha
adc
cmp
movsl
ja
and
xchg
xor
jp
lock
incl
sar
xchg
xchg
enter
mov
clc
aad
xchg
stos
lods
pushl
push
aaa
dec
out
add
add
lea
jp
push
or
jl
jbe
pop
out
int3
mov
loop
orb
es
lcall
dec
dec
imul
jmp
cmp
int
and
mov
call
add
incl
sub
push
inc
cmp
adc
lret
aad
stos
cmc
or
mov
insb
push
push
push
cmp
mov
pusha
mov
pop
mov
test
sub
pop
test
pushl
add
sbb
ja
lret
shrl
movsl
lcall
cmp
cltd
stos
test
ljmp
cmpsb
adc
ss
push
in
outsb
jne
mov
pop
pushl
sbb
xchg
je
and
aam
pop
out
mov
cmp
imul
xor
imul
xor
sbb
js
xor
sbb
insb
test
dec
sbb
and
jno
dec
dec
sub
ffreep
and
aam
out
or
outsb
jp
movsb
lret
mov
cmove
and
sub
pop
jmp
lcall
mov
lahf
cmp
pop
xor
xchg
jg,pn
ret
xor
cmp
jg
sbbb
push
xor
add
push
lret
add
adc
xlat
sbb
outsl
add
xchg
cmpsb
add
aaa
pop
les
push
cs
leave
lock
mov
inc
flds
add
mov
inc
jmp
jb
add
and
push
mov
cltd
icebp
std
push
es
cld
pushl
or
jl
mov
jg
jno
insb
pop
ret
jg
call
jmp
imul
js
adc
test
shr
incl
pop
pop
in
inc
cmp
inc
mov
lahf
das
or
lahf
mov
mov
sbb
cmp
pusha
shr
lods
xor
or
jmp
xchg
shrl
pop
out
nopl
fidivl
xor
dec
sub
sti
sbb
in
out
lret
ret
cmp
clc
sbb
hlt
mov
in
movsl
mov
mov
or
call
pop
push
jp
repz
movsl
xlat
mov
dec
pop
imul
stc
xchg
push
jmp
mov
xchg
or
and
push
hlt
rclb
call
decl
subl
sarl
aas
xor
cmp
ljmp
std
sbb
loop
dec
in
inc
adc
inc
imul
push
jg
das
out
push
push
push
decl
jecxz
push
scas
cltd
lock
push
add
mov
jo
cmp
lcall
dec
pushf
xchg
int3
int3
cmc
lock
mov
lods
test
into
daa
pop
ja
xor
pop
in
aam
decl
mov
popf
enter
pop
push
aam
ud0
mov
add
imul
xor
enter
decl
ljmp
out
jo
push
xchg
xchg
mov
mov
cmpsl
sbb
sbb
pop
cld
jmp
pop
iret
pop
dec
loop
xchg
inc
jb
scas
inc
movsb
daa
xchg
pop
out
mov
or
sbb
mov
fwait
and
jo
or
mov
fsubrs
mov
sub
jg
data16
push
into
xor
inc
int
xchg
inc
adc
push
cli
ljmp
pop
jns
add
addl
xchg
mov
mov
mov
int3
orl
scas
je
jae,pt
rcll
aaa
jle
and
xchg
and
in
sbb
sbb
push
mov
popa
adc
incl
inc
dec
movsb
ds
jecxz
push
fcmovnu
sub
mov
sub
fimull
push
adc
mov
movsl
and
cmp
jl
xor
or
aas
call
fadd
in
push
out
push
fs
fwait
adc
mov
pop
leave
lods
idivb
pushl
lret
sub
dec
xchg
insl
and
imull
incl
lods
push
sub
xor
shll
adc
testb
mov
aas
xor
ret
mov
test
sub
adc
addb
inc
cmpsl
pop
negl
pop
cmpsb
mov
xchg
clc
mov
in
pop
test
mov
mov
fldt
fsts
dec
ret
nop
add
cmp
mov
xchg
xchg
je
mov
xor
fisubs
scas
popf
mov
mov
push
xchg
stos
push
jb
rol
push
iret
or
mov
add
dec
outsl
pop
test
jge
repz
pop
fcomps
mov
and
sbb
push
jmp
daa
inc
xchg
fs
mov
pop
mov
in
pop
mov
jmp
movsb
movsb
pop
enter
idivb
incl
cltd
adc
clc
pushf
mov
jl
cmp
mov
js
cmp
jle
add
in
ljmp
xchg
sbb
daa
and
sbb
sub
aad
popf
mov
incl
push
es
mov
push
jmp
imul
cmpl
sbb
ljmp
popa
mov
lret
jle
cld
insb
sbb
jae
adc
dec
push
mov
addr16
add
pushl
fdivrs
std
arpl
xchg
les
hlt
sub
xor
call
add
mov
clc
nop
in
imul
sub
jne
fsts
loop
mov
sbb
adcb
add
jmp
adc
inc
xchg
popa
icebp
je
xor
inc
dec
cmpsl
ds
push
push
decl
push
cmp
es
enter
js
sahf
cmp
sarb
and
call
decl
dec
pop
scas
xchg
adc
dec
repz
nop
cli
rcr
frstor
mov
addr16
fcmovne
or
mov
dec
jl
pop
out
mov
and
jg
pushl
mov
lock
mov
cmp
int3
stos
scas
mov
fwait
and
xor
push
pop
jns
js
mov
add
cmpsl
mov
push
stc
sbb
jae
repnz
mov
incl
inc
jp
mov
in
mov
movsl
shlb
fimull
aas
jo
jmp
cmc
push
in
lea
mov
into
dec
push
dec
test
inc
or
cld
mov
ds
lahf
int3
test
jg
or
pushl
dec
pop
mov
sub
mov
lods
lcall
lock
xor
xchg
scas
movsl
cmp
add
call
dec
xchg
cmp
or
mov
in
sub
fcomps
pop
and
push
jae
mov
ljmp
xor
js
cmp
mov
sub
fcomp
xchg
aad
sar
fbstp
jge
inc
jb
push
stc
stc
push
sub
mov
frstor
pushl
xchg
leave
cld
mov
xchg
sbb
xchg
sahf
mov
ret
pop
fcmovne
fdiv
or
call
addr16
inc
lret
or
xor
or
stos
cmp
loop
in
add
lcall
push
insb
add
out
push
cmp
test
cltd
and
inc
add
fildl
mov
adc
enter
icebp
enter
dec
jne
mov
inc
mov
adc
fisttpll
fiaddl
pop
decl
loop
and
loop
push
inc
cmp
fnsave
insl
decl
bound
sub
add
mov
js
test
mov
jo
sub
adc
std
decl
aaa
xor
mov
cmp
lods
sbb
pop
xchg
imull
insb
pop
loopne
adc
push
push
adc
cmp
sub
das
sbb
imul
daa
mov
std
push
push
xchg
cli
xor
mov
imul
mov
pop
pop
loop
aaa
mov
rclb
dec
scas
rolb
les
decl
cmpsl
xchg
push
popf
dec
jg
ja
scas
faddl
cmp
cmpsb
pop
incl
fistpll
jp
mov
das
in
sbb
inc
inc
sub
lock
rol
clc
std
gs
mov
dec
or
xor
cmpsl
lret
std
call
jg
inc
lahf
jo
out
inc
fildl
test
aam
out
scas
dec
cld
mov
mov
xchg
nop
or
and
mov
test
mov
adc
lods
mov
add
mov
fnstenv
or
xor
gs
sub
mov
or
mov
inc
jnp
fists
xor
pop
jne
gs
pop
call
les
and
mov
adc
push
jg
xchg
mov
mov
mov
shl
in
pop
jns
cmp
xor
lea
dec
shl
or
jmp
push
dec
jbe
jp
push
cld
adc
and
sbb
movsb
mov
jmp
bound
clc
xor
pop
outsl
ljmp
lcall
cs
das
popf
pop
fdivrp
jg
inc
mov
adc
es
or
orb
pusha
sbb
mov
repnz
mov
lcall
mov
movsl
das
cmc
jmp
jb
and
pop
ss
push
sub
incl
fdivl
int3
xchg
jl
sub
leave
lock
and
test
xor
adc
jecxz
test
das
imul
imul
rorl
inc
in
inc
xorb
or
ficompl
lret
jp
ret
outsl
mov
or
fstpt
or
push
test
add
sbb
lcall
incl
xlat
cmp
mov
cmp
nop
dec
inc
das
lahf
cmpsl
mov
rcl
push
loop
fsubrs
lret
daa
outsl
adc
or
xchg
mov
push
int
and
insb
ret
mov
cld
xchg
xor
cld
dec
std
daa
enter
fiaddl
sar
mov
sbb
jnp
lcall
das
inc
cli
outsl
mov
lea
push
pop
cs
or
addr16
mov
scas
dec
inc
push
aaa
mov
pop
popa
xor
jmp
cmovo
push
mov
fwait
mov
cmp
outsl
and
push
mov
cmc
in
mov
jmp
loope
lods
or
pusha
jg
xchg
mov
cmp
push
ljmp
sub
repz
mov
mov
outsl
int3
out
lock
sub
push
dec
jb
lret
jle
jmp
in
outsl
fstl
outsl
add
xchg
fdivs
mov
pop
enter
hlt
inc
mov
pop
fwait
jbe
out
int
arpl
and
add
outsb
mov
jmp
jp
jecxz
push
sbb
xlat
sbb
mov
or
mov
or
shlb
jp
call
mov
push
loope
shlb
mov
sub
jecxz
sbb
inc
lea
subb
call
jb
jo
cmp
xor
add
mulb
and
aas
mov
decl
add
outsb
mov
or
daa
popa
push
dec
sbb
mov
shl
insl
in
test
mul
mov
mov
fisubrl
push
push
mov
lods
mov
cmp
ljmp
inc
adc
xor
xchg
add
mov
pop
int
lcall
adc
sbb
xor
cs
cmpl
add
lea
add
call
lcall
gs
in
sbbl
sbb
mov
jg
fwait
ds
xchg
xchg
sub
mov
jg
mov
lock
cltd
bound
cmp
decl
sbb
js
outsb
outsl
clc
or
lods
movsl
ja
lods
aad
pop
cmp
pop
popf
aas
mov
sbb
dec
mov
es
std
add
push
cmp
mov
test
inc
idiv
incl
lahf
sahf
pop
rcr
popf
jp
call
out
sub
nop
jecxz
popf
inc
shl
movsl
ljmp
mov
stos
aas
inc
aas
fisubl
ds
cs
jmp
cmc
ljmp
mov
push
push
js
jo
inc
push
xor
shl
popf
sbb
mov
mov
ljmp
xor
stos
leave
or
into
scas
inc
dec
and
std
sbb
ljmp
xlat
add
lcall
cmp
cs
bsr
cmp
ret
pop
loop
add
out
std
int
and
imul
sbb
test
push
popa
sbb
ficompl
ljmp
repnz
sub
icebp
xor
mov
and
idivl
fucomip
cmpl
dec
out
xchg
lahf
arpl
test
cld
cmp
inc
jmp
ljmp
aaa
cli
decl
mov
fmull
mov
xor
nop
sbb
cmp
xchg
cld
mov
push
push
inc
inc
push
xchg
test
mov
daa
andb
loopne
jl
mov
out
stos
jg
mov
mov
mov
cmp
mov
gs
dec
je
lea
decl
std
loop
out
pop
push
insl
mov
je
jb
adc
das
cmc
lahf
outsb
mov
push
rcr
add
sbb
pop
mov
ss
mov
cmp
push
nop
loope
xor
jne
mov
fmuls
cmpsb
xchg
inc
jmp
cmp
sub
xchg
lret
sarl
push
ja
call
je
inc
adc
aad
add
adc
jmp
testb
or
decl
fisubrl
push
sar
xor
out
repz
in
frstor
addr16
loop
incb
xchg
ds
call
cmp
mov
cmp
pushf
push
cltd
les
icebp
jp
movsl
ret
sbb
movsl
das
cmc
sub
or
out
mov
push
fisttpll
dec
dec
imul
mov
push
jns
mov
jg
cwtl
int3
stc
dec
cmc
scas
dec
add
lcall
mov
or
push
rol
jo
mov
xchg
shrb
cmc
jecxz
xchg
xor
ljmp
add
js
cmp
mov
pop
stos
dec
xorl
pushl
scas
mov
cltd
ljmp
inc
add
cltd
sub
jg
bound
mov
xchg
cmpl
scas
mov
xchg
pop
mov
mov
aad
fisttps
or
inc
mov
fimull
cmp
mov
xor
insb
mov
cmpl
std
shl
shl
sub
or
inc
jo
repnz
pushl
fsubr
imul
inc
mov
and
xchg
imul
sbb
gs
inc
popa
pop
cmp
mov
stos
aam
jg
adcb
ficoml
ja
shrb
inc
in
jno
cld
call
cmc
pusha
imul
lret
pop
sub
pop
test
scas
cmp
call
cli
jmp
arpl
into
out
ss
in
xchg
std
jp
aam
mov
mov
ljmp
je
mov
xchg
inc
daa
fbstp
mov
ljmp
pop
mov
sbb
aad
inc
or
xorl
sbb
call
fisttpll
addr16
jmp
out
push
adc
pusha
ljmp
and
loope
arpl
lcall
movsb
popa
shl
out
cli
ljmp
pop
mov
dec
std
inc
scas
xor
call
mov
into
push
rolb
jmp
mov
xchg
movsb
cmc
jg
pop
movsb
cmp
les
pop
fimuls
mov
mov
mov
mov
clc
inc
ljmp
out
xchg
dec
mov
push
roll
or
call
xchg
sub
cltd
lock
test
dec
popa
scas
addr16
les
lcall
ljmp
js
in
movsl
inc
push
hlt
ficoms
cs
fdiv
and
in
mov
pop
mov
pushl
push
xchg
add
fmul
jne
cli
push
sub
das
test
test
fcoml
lret
fucomip
push
vpaddsw
or
les
not
sbb
jbe
call
clc
mov
xchg
bound
xchg
xlat
jle
sub
incl
pcmpeqw
xchg
cs
add
les
shr
cmp
dec
stc
pop
aaa
mov
xchg
loopew
incl
hlt
int
mov
dec
xor
mov
popa
test
sub
insl
mov
jg
jp
lcall
mov
sbb
es
or
sub
xchg
ljmp
push
mov
test
pusha
or
popa
cltd
mov
push
js
pop
push
add
mov
mov
call
aam
push
pop
ret
xchg
sbb
leave
fidivs
jg
call
push
add
push
or
dec
aam
push
loope
fimull
inc
sti
negb
test
cli
fcoms
cmpsl
js
sub
jecxz
hlt
mov
pop
out
and
dec
sub
xlat
jns
call
cmp
adc
pop
xorl
arpl
loopne
lcall
std
jb
mov
mov
gs
and
imul
sar
jmp
scas
je
pop
cwtl
lds
pop
nop
jo
add
ret
fstps
sbb
add
test
cmp
push
adc
push
lcall
call
es
mov
ds
sbb
ja
xlat
orb
jae
fsubrl
insl
hlt
decl
push
mov
mov
fs
sbb
jg
call
sub
bound
and
cmpsb
test
or
cld
das
std
jg
imul
aas
mov
gs
call
lret
sbb
mov
dec
data16
insl
sbb
fbstp
les
push
sub
cmp
sbb
xchg
lods
hlt
fxtract
push
lds
cli
jmp
aam
sub
jns
add
add
test
add
push
sub
mov
xorl
out
and
lea
insb
adc
sti
cmp
cmp
popf
mov
dec
or
das
jge
mov
sub
sbb
inc
dec
test
daa
push
mov
or
iret
je
loopne
insb
push
or
sub
repz
rcll
mov
mov
fcompl
adc
jnp
mov
mov
insb
jo
xor
fucomip
jg
mov
pop
mov
mov
cmp
jmp
js
pushl
insl
test
int
jb
mov
mov
inc
push
decl
ss
call
test
in
adc
cmc
xchg
inc
lret
mov
cli
lea
dec
sub
rep
xor
sub
decl
incl
xor
pusha
aas
xchg
cmp
mov
scas
mov
sbb
aaa
shrb
decl
jb
mov
inc
or
push
push
and
mov
repz
in
push
add
sti
cmpsb
lds
jo
bound
jg
sub
ficompl
and
or
mov
and
jmp
cmpsl
mov
jmp
or
cmp
mov
cmp
add
pop
xchg
addr16
sarl
xor
popf
add
push
adc
loope
mov
outsb
pusha
jb
out
lret
sarl
call
jmp
loope
jp
sbb
scas
mov
cltd
and
std
popf
mov
mov
or
jne
and
sbb
or
lds
or
jg
inc
fisttps
into
sahf
movsb
cmpsl
icebp
jne
dec
mov
jmp
test
mov
sub
jo
test
jne
mov
int
clc
decl
push
mov
ret
adc
mov
loopne
jo
hlt
mov
jns
addr16
and
call
sub
in
mov
xor
out
jnp
insl
pop
das
fiadds
hlt
ja
cmpsl
xor
das
cmc
decl
mov
add
loop
ret
and
xchg
mov
or
lcall
loope
sbb
pop
jbe
lds
in
addl
and
adc
pushl
dec
mov
mov
xchg
add
add
mov
jmp
incl
xchg
inc
enter
push
xchg
test
loop
mov
mov
testb
jmp
and
inc
nop
cld
xchg
xchg
or
orl
mov
decl
push
lcall
pop
test
mov
call
je
push
add
push
and
outsb
loopne
xchg
cli
pop
jge
add
stos
inc
lock
pusha
mov
lcall
xor
dec
sti
iret
ds
dec
std
decb
mov
xchg
dec
inc
mov
pushl
sbb
push
dec
mov
cmpsb
mov
clc
pop
mov
cmpb
push
fidivrs
sbb
dec
xchg
ja
test
xor
or
sub
lcall
sub
ljmp
mov
hlt
mov
jle
sti
inc
xchg
jg
insl
mov
adc
cltd
mov
es
gs
test
pop
jg
mov
jmp
mov
rorl
popf
arpl
sub
dec
lea
and
dec
call
xchg
das
jo
lret
insb
out
scas
mov
in
mov
xchg
jg
movsb
mov
push
mov
sub
mov
jae
out
jmp
sub
ljmp
outsb
lds
mov
mov
mov
lret
mov
out
xchg
cmpsb
insb
or
mov
data16
mov
jmp
mov
push
add
enter
sub
ret
cwtl
ret
pusha
loop
fisttpll
mov
adcb
ljmp
incl
mov
fiadds
outsl
push
popf
sub
in
jge
mov
mov
movsl
iret
sub
loope
mov
scas
xchg
imul
scas
jg
or
adc
stc
insb
nop
je
cltd
jnp
mov
jg
jp
aad
cli
js
mov
adcl
jl
scas
lods
lods
pop
outsl
icebp
sbb
cwtl
dec
jae
mov
sbb
clc
cld
decl
std
ljmp
insl
sub
sub
pop
repz
imull
dec
mov
daa
ss
push
mov
and
mov
jne
mov
add
sbb
popl
adc
lock
bound
jb
stos
mov
inc
sahf
popf
push
pusha
and
call
jb
dec
jl
lcall
jno
push
test
sub
and
pushl
mov
jg
mov
jg
mov
cltd
ror
push
loope
int3
mov
pop
fistpll
out
insb
jecxz
pop
call
ljmp
lods
sub
and
ficoms
insb
invd
push
add
pop
jmp
scas
xor
cli
ret
inc
mov
scas
and
decb
fistps
cld
and
mov
pop
std
call
sbb
or
stc
mov
inc
es
dec
jae
push
sbb
jmp
mov
mov
or
fstpt
ja
fmul
sbb
xor
jne
jg
call
insb
mov
fstl
cli
dec
jns
cld
sub
sar
adc
in
pop
shrl
mov
cmpsl
cmp
sub
push
lret
insl
or
cli
fst
inc
test
jns
jmp
fcomps
push
inc
pusha
dec
lcall
cmc
pop
shl
and
jl
icebp
jmp
jmp
mov
sub
mov
add
andb
pusha
xor
repnz
test
mov
jge
imulb
hlt
setb
inc
loop
imul
nop
mov
fisubrl
fsubrp
pop
xchg
movsl
aas
fsubl
jns
cmpl
call
inc
inc
sub
jae
popa
in
or
loop
ja
xor
cmpsb
stc
mov
lcall
sbb
pop
pop
sahf
stos
stos
mov
mov
lods
in
jg
ljmp
sub
in
incl
pop
xchg
jnp
mov
jg
stos
inc
jae
cmc
call
pushl
mov
fwait
xor
fucomi
std
rclb
pop
dec
ret
lods
lcall
lret
daa
and
pop
jns
and
enter
xorb
jg
xchg
das
adc
xor
scas
fisubrl
sub
popl
jg
das
mov
outsl
and
nop
fs
sbb
inc
js
movsl
cmp
jmp
daa
lret
jecxz
xchg
aad
xchg
nop
cltd
arpl
mov
cmpl
push
pop
cmpsl
sbb
out
outsl
cmp
mov
fucomip
inc
sti
mov
or
add
pop
lret
lcall
mov
std
xlat
cld
pop
xchg
rolb
push
int
sub
iret
scas
cmp
lods
aad
mov
adc
ss
xchg
imul
sub
xor
inc
pop
inc
mov
repnz
loop
nop
daa
clc
jl
xchg
decl
aad
test
sarb
mov
pop
lods
in
xchg
std
sarl
in
pop
jl
inc
ljmp
pop
fxch
popa
adc
xbegin
adc
gs
iret
jne
movsl
jmp
pushf
inc
nop
cli
mov
cwtl
repnz
sub
loopne
daa
call
decl
inc
pusha
and
out
jmp
es
sbb
cld
test
icebp
insb
sarb
or
adc
test
xchg
dec
addb
negb
incl
xchg
mov
mov
sbb
xor
mov
push
nop
or
test
imul
dec
add
pop
add
sarl
lock
pop
sahf
adc
xchg
mov
jp
scas
leave
ja
dec
les
in
pop
loope
xor
lea
pop
ds
aas
add
movsl
imul
dec
sahf
adc
or
inc
stc
das
xchg
xor
nop
xchg
inc
fs
out
pop
out
adc
jl
test
call
mov
iret
xor
mov
push
mov
ljmp
and
push
lret
in
push
in
push
insb
pop
dec
lret
xchg
pop
xchg
xchg
cmpsb
movsb
test
mov
outsb
jb
inc
insb
pop
shll
stos
loope
mov
xlat
decl
aas
mov
js
aad
cmc
not
xor
sub
mov
lret
mov
icebp
incl
std
call
inc
cmp
lahf
cmp
cs
push
out
call
out
aaa
outsb
stos
cmp
push
jmp
rorl
mov
dec
dec
rorl
xor
jmp
clc
jns
int
fwait
dec
push
mov
push
mov
stos
fldl
data16
dec
iret
xor
lcall
jno
adc
sub
add
mov
shl
mov
mov
or
frstor
jae
cmc
xchg
cli
loopne
jne
cmp
sub
iret
out
call
testl
pop
int
rcrl
or
pop
jmp
mov
adc
or
xchg
decl
insl
push
into
cld
cmc
scas
mov
xor
pop
filds
data16
xchg
fldenv
push
add
inc
sbb
xor
xlat
shlb
mov
cli
das
cmc
add
adc
enter
insl
cmp
or
outsl
cld
decl
repnz
out
xorl
outsl
dec
mov
mov
lds
decl
cld
les
mov
clc
cwtl
and
cmp
imul
jg
movsb
rolb
int
out
push
push
add
out
push
mov
push
dec
mov
lcall
bound
popf
lret
adc
jnp
inc
mov
in
leave
lret
repnz
decb
call
xor
es
leave
jnp
lods
xor
stc
mul
pusha
push
adc
cli
ljmp
adc
popf
pop
pusha
arpl
fiadds
inc
jno
or
insb
mov
push
mov
int3
xchg
fucom
push
sbb
jg
loopne
je
pop
or
inc
inc
lods
dec
aas
shrl
sub
dec
gs
and
add
push
xor
faddp
decl
das
outsl
fcompl
jae
mov
push
and
xchg
pop
jb
das
cmc
mov
sbb
roll
loopne
push
out
test
cld
mov
xor
shr
inc
mov
scas
popa
push
push
dec
imul
lcall
in
ja
jbe
cwtl
jns
cwtl
rclb
adc
in
mov
fwait
mov
mov
decl
shl
push
dec
jo
pushf
popf
jbe
fwait
push
cmpsl
lea
das
adc
xchg
gs
cmp
jno
mov
js
lret
push
adc
sbb
mov
pushl
add
lret
sbb
ret
push
mov
sbb
aas
dec
in
call
jb
mov
mov
hlt
mov
outsl
cld
into
adc
out
and
pop
popl
pop
jb
aam
aam
sub
incl
lods
clc
aas
sub
pop
aaa
ja
xor
mov
into
push
pop
es
sbb
mov
push
pushf
imull
aas
popf
push
cli
mov
mov
cmp
xchg
std
mov
sar
decl
pop
repnz
mov
ljmp
sbb
sub
call
cmc
dec
fdivrl
push
pop
and
loope
arpl
push
outsl
pop
jge
xchg
outsl
jg
mov
jae
push
jmp
les
rcr
aas
push
decl
jmp
and
jle
pop
push
cmp
sub
cwtl
jmp
nop
test
xchg
lds
je
stc
add
leave
xchg
cmpl
nop
imul
jns
xor
push
iret
jl
and
call
mov
adc
dec
or
push
je
cs
mov
inc
cmp
les
jmp
fwait
sbb
mov
and
fildll
dec
stos
in
lea
xchg
ljmp
cmp
cmc
fldenv
pop
mov
add
leave
cmp
jp
or
fisubl
js
das
mov
popf
daa
jb
dec
call
call
xor
dec
push
cmc
xor
cli
pop
imul
iret
ss
push
add
es
in
popa
push
pop
sub
int
iret
incl
lods
andl
dec
popa
xchg
cmc
fsqrt
jle
jmp
outsl
cld
cmp
mov
adc
dec
push
pop
push
mov
jbe
xchg
movsl
rcr
push
cld
mov
js
cvtps2pi
and
scas
pop
fcoms
ljmp
pop
push
mov
sub
pop
jne
dec
mov
pop
pop
xchg
out
in
cmp
movsb
jg
idiv
js
pop
insb
cmp
in
xchg
push
loope
aas
pop
adc
daa
out
cmpsb
pop
subl
jge
addr16
xor
xor
out
or
or
fs
repz
mov
ljmp
arpl
and
sbb
addl
popf
lea
loopne
data16
inc
xchg
adc
mov
dec
add
and
jp
nop
mov
sbb
imul
jg
jae
pusha
stos
dec
loop
jl
aam
dec
adc
dec
mov
test
movsb
adc
outsl
push
pop
cli
pushl
pop
fbld
ss
pop
hlt
mov
adc
jg
icebp
popa
in
mov
mov
lods
fnstenv
xor
adc
push
jg
jecxz
arpl
cmp
enter
out
shll
nop
ljmp
adc
imul
lock
inc
leave
push
and
mov
or
jmp
add
leave
addr16
lahf
in
add
enter
movsb
mov
or
sti
lret
mov
outsl
xchg
sti
into
out
mov
xor
and
fs
out
mov
jg
adc
sbb
addl
mov
add
mov
out
jg
cmp
popf
mov
mov
push
rcrb
loopne
gs
dec
jae
or
decl
cwtl
shll
andb
xor
xor
fwait
ret
inc
cwtl
inc
outsl
or
lods
lcall
es
fdivs
dec
adc
mov
cld
fisttps
sbb
outsb
pusha
test
leave
xor
outsl
stos
addr16
insl
scas
test
sub
decl
xlat
jno
cmc
dec
mov
pop
xchg
xor
mov
push
add
std
ljmp
add
call
out
or
std
loop
mov
mov
loope
sub
jbe
mov
cli
push
adc
insl
lret
pushl
cmp
rcl
cmp
sti
push
adc
adc
scas
add
loope
clc
jecxz
loope
jge
sub
xor
or
ljmp
cld
ljmp
pop
shlb
icebp
out
mov
scas
adc
cmpsb
imul
pop
mov
cltd
nop
or
ds
add
push
sbb
stc
fucom
push
les
jmp
fcompl
shrb
cmp
mov
imul
sbb
pushl
leave
shlb
mov
lods
cmp
xor
ja
fdivl
cli
lcall
fsub
orl
or
sub
jl
loop
lea
push
in
or
fidivrl
es
mov
mov
jmp
dec
xor
or
mov
pop
pushf
push
and
mov
xchg
jle
xchg
call
je
ss
enter
loop
aad
or
jecxz
cmp
lds
jmp
aas
imul
dec
dec
or
pop
into
imul
jo
mov
mov
sub
sbb
dec
xchg
imul
dec
push
pop
inc
mov
mov
decl
sub
movl
push
push
xlat
repnz
inc
push
mov
adc
adc
in
mov
mov
jbe
insl
pop
jmp
out
pop
mov
xor
adc
adc
movsb
lret
dec
imul
popa
lcall
daa
mov
sbb
xorb
sub
fs
sahf
test
std
mov
or
mov
and
cmc
xor
das
xchg
lock
mov
test
std
incl
xchg
pusha
orb
mov
mov
mov
dec
outsl
idiv
pop
cli
or
pop
jmp
ljmp
pop
pop
mov
ljmp
cmp
fmull
mov
sbb
int
aas
push
jmp
arpl
fiaddl
push
sbb
sarb
dec
out
adc
pop
rcrl
ret
sbb
adc
call
daa
pop
or
dec
push
or
sbb
push
inc
sbb
popa
int3
mov
sub
cltd
jge
inc
in
push
cmp
mov
jmp
xchg
fcoml
push
xchg
div
push
movsb
sub
and
int
dec
xchg
cmpsb
sbb
jge
hlt
in
ret
pop
decl
fildl
cmpsl
pop
cmp
lods
pop
in
sbb
xor
decl
pop
lret
pop
sar
imul
cmc
clc
cmpsl
lret
sbb
out
popf
mov
mov
adc
adc
or
ret
out
hlt
loope
call
test
xchg
popf
mov
vmovdqu
sub
ds
mov
push
mov
test
push
das
imul
xlat
sub
pushl
movsl
sarl
loop
in
int
out
xchg
push
dec
jae
jbe
fs
push
sbb
dec
push
iret
add
push
rol
repnz
gs
sahf
inc
dec
cld
lcall
xchg
mov
sbb
das
mov
xor
jg
ljmp
icebp
sbb
repnz
int
test
xchg
pop
xlat
fdivs
outsb
test
mov
sub
inc
aad
test
sbb
fistpll
cli
and
sbb
cmp
fists
insl
dec
cmp
cmp
mov
scas
xchg
xchg
cmpsl
test
and
mov
jg
in
movsl
pushf
in
lcall
jno
adc
test
int
pop
call
sbb
rcll
lahf
cltd
mov
jg
or
cli
pop
sbb
mov
inc
cs
call
cmp
in
imul
adc
add
lds
dec
adcb
jge
inc
pushl
loope
dec
jmp
inc
scas
call
lret
idivb
lcall
mov
pop
gs
mov
in
mov
sub
jmp
mov
arpl
jbe
stos
lods
jb
xchg
lods
push
xchg
fcoms
xor
fbld
pop
mov
enter
scas
gs
ret
pushl
clc
out
jl
sbb
or
insl
inc
or
imul
pop
sbb
outsb
dec
xor
jmp
add
sub
jle
jmp
ror
xchg
inc
adc
andl
out
hlt
push
or
decl
mov
push
dec
std
leave
iret
mov
loope
add
dec
lock
es
decl
lahf
pop
xchg
das
jnp
xchg
mov
out
mov
clc
jg
sbb
xor
cwtl
xchg
es
or
iret
sbb
rcrb
jno
psrad
dec
std
sub
mov
iret
shlb
or
filds
dec
adc
fdivrp
mov
jmp
mov
lcall
rorb
push
outsl
popf
mov
ret
es
jae
jmp
inc
std
outsb
add
lods
pop
inc
lret
mov
add
mov
xorl
in
jnp
add
sahf
cltd
lcall
mulb
adc
dec
push
inc
sub
lret
mov
aaa
push
lds
dec
cmp
jns
mov
pop
sub
cmp
or
insl
mov
mov
xor
cld
push
xor
xchg
jmp
incl
and
lods
fwait
cmpl
aad
js
fildll
dec
sbb
icebp
decl
sarb
in
rclb
pop
dec
loop
xor
xchg
ljmp
je
cmpsb
and
and
repz
repnz
repz
xlat
mov
inc
inc
push
leave
mov
idivl
dec
add
jg
mov
pop
les
out
inc
xchg
pop
sub
push
jecxz
sbb
dec
imul
add
push
imul
pop
arpl
xchg
and
icebp
inc
incl
mull
ret
js
rolb
add
in
cmp
jp
cs
dec
mov
psrld
xor
add
push
mov
push
negb
mov
in
jae
sub
mov
jnp
jg
inc
int
ret
lcall
lret
adc
lock
fildll
in
dec
sbb
shll
pushf
xor
out
fnstsw
ljmp
pop
sbb
cmpsb
popf
jmp
pop
jns
push
and
jmp
pop
stos
lock
cmp
or
lods
xchg
lret
call
mov
mov
pop
fucomip
in
lcall
ret
sub
pop
out
push
mov
mov
out
leave
decl
pop
mov
xchg
dec
sub
dec
dec
iret
xor
shlb
outsl
cmpsl
adcl
ljmp
push
iret
fdivrs
incl
cmp
pop
psrlw
jae
outsb
pop
in
stos
loope
and
call
cli
jmp
dec
pop
sub
push
popa
icebp
mov
and
xorl
cli
mov
xor
mov
shll
mov
cmpsb
popa
add
mov
scas
cld
pushf
insb
dec
jnp
mov
lock
clc
aaa
xor
push
aad
std
lods
jle
test
lods
inc
add
testb
ficoml
outsl
call
xchg
push
ficomps
pop
shrl
dec
push
and
lret
addr16
xchg
arpl
push
data16
xor
loope
gs
call
stos
xchg
aaa
ret
sub
dec
cwtl
dec
mov
lds
decl
mov
imul
test
mov
loopne
jne
inc
shrb
push
mov
fdivr
js
and
mov
push
int3
xor
dec
movsb
pop
aad
sbb
shr
lods
sahf
pop
xor
jno
and
xor
outsl
cmc
mov
fldcw
dec
cwtl
add
sbb
std
call
in
fs
inc
adc
sub
add
and
mov
call
add
shlb
xchg
pop
pop
cmp
mulb
xor
inc
fsubrs
pop
hlt
inc
or
je
sub
hlt
fwait
push
mov
jg
mov
rcl
xchg
je
mov
lret
stos
sahf
cld
ljmp
lock
sbb
push
mov
std
out
mov
cmpl
decl
cmp
pop
mov
mov
loope
subb
lcall
push
jns
jp
mov
sahf
mov
xor
jp
imulb
xchg
fsubp
call
rol
jno
push
movsl
call
js
faddp
or
xchg
add
shlb
jl
pop
out
sub
call
sub
sub
outsl
mov
test
push
sbb
mulb
leave
push
jmp
sbb
sbb
std
fucomip
dec
test
test
pop
xor
or
ss
or
xor
cmpsb
ds
add
in
sbb
add
ljmp
lock
mov
or
inc
jmp
mov
xor
push
dec
sarl
add
push
out
test
pop
cmpb
call
jo
std
data16
out
dec
push
inc
pop
stos
jo
rorb
push
xchg
idivl
sbb
mov
sub
into
xchg
out
outsb
ss
das
lods
xchg
aaa
cli
cmpsb
jae
scas
fwait
outsl
out
pop
sub
jno
loop
test
loop
push
out
and
jne
adc
xlat
pop
fists
mov
adc
das
outsl
jbe
lahf
mov
cli
fildl
popa
push
mov
jmp
inc
xchg
cmpsl
xchg
pusha
cli
fucomip
jmp
jnp
insl
test
aam
pop
shll
inc
cmp
dec
sarl
arpl
call
pop
std
xchg
leave
out
cmp
cltd
lret
push
push
cmp
lcall
dec
insl
cmp
inc
lock
movsl
popa
xchg
sbb
fs
add
or
inc
mov
sub
push
subl
pop
lret
cli
je
inc
cltd
pop
or
std
decl
xchg
push
pop
pop
mov
rclb
cmp
pop
loopne
cmp
xchg
test
and
inc
adcb
sub
fs
mov
clc
dec
mov
rorl
test
jne
call
pop
xchg
decl
push
out
ret
mov
aas
rcrb
sbb
pusha
jge
xlat
cs
jp
cmpsb
unpcklps
stc
loop
pushf
int3
jg
ficoml
mov
stc
addr16
cmp
push
inc
hlt
mov
xchg
xor
xchg
lret
xchg
push
xor
sar
das
push
dec
imul
xor
push
shl
mov
dec
div
call
inc
and
nop
mov
push
cmp
das
add
orb
sub
mov
inc
xchg
lock
mov
mov
and
jp
sub
mov
xchg
shl
inc
adc
or
fisubrl
lock
push
mov
mov
into
gs
sub
pop
mov
sbb
lcall
shlb
loop
mov
push
jge
xchg
xchg
sarl
jmp
in
decl
loope
or
push
and
push
jmp
jo
cmpsb
cmp
outsl
cld
jge
fmulp
mov
jne
call
or
jmp
jno
fldenv
fldt
into
das
shr
ret
xchg
int3
sub
cmp
push
stos
popa
out
inc
cmp
loopne
jp
pop
js
adc
pop
cld
mov
call
cmp
sub
rorb
js
scas
cmp
ja
xchg
push
mov
mov
sti
xor
lahf
jmp
adc
aad
call
inc
loopne
mov
fstl
xchg
pop
mov
xor
ss
mov
decl
movl
fwait
clc
xor
add
push
test
outsl
mov
stos
stos
call
decl
frstor
imul
sub
cmpsl
popa
andl
call
add
in
movsl
test
jecxz
sub
push
sbb
mov
and
int
and
add
inc
mov
xor
xchg
mov
xor
ret
inc
es
jle
sub
orl
ret
mov
je
insb
xor
movsbl
jg
mov
rol
xor
lods
ret
pop
add
bnd
call
incl
add
mov
in
or
cmp
mov
jmp
test
pop
add
sub
mov
int
inc
jp
in
es
arpl
testl
push
fs
icebp
jmp
les
xchg
dec
sub
aad
ret
sub
push
fwait
inc
xchg
mov
inc
pushl
xchg
ljmp
dec
jb
mov
mov
add
lahf
xor
call
clc
and
data16
aaa
or
sub
jg
mov
lcall
ljmp
loopne
ds
leave
iret
out
xchg
add
pop
aad
scas
pop
pushl
incl
xor
lods
js
mov
int
loop
dec
xor
mov
push
loope,pt
loopne
shlb
shr
lcall
xchg
es
xchg
adc
in
add
movsl
decl
sbb
pop
fmuls
pop
fmull
outsb
adcb
jmp
decl
sbb
test
int
or
sbb
out
outsb
jne
mov
std
jp
les
sub
pop
fsqrt
iret
and
push
mov
jmp
sbbb
popa
xor
adc
sub
add
call
mov
pop
cmp
mov
xchg
push
xchg
jle
and
cld
pop
cli
add
mov
pop
iret
imul
jmp
sbb
leave
mov
in
js
mov
xchg
adc
fldcw
pop
sbb
add
popf
fdivr
mov
mov
lret
push
cltd
jecxz
xchg
inc
add
mov
cmc
jmp
pop
divb
inc
and
sar
out
in
mov
push
push
sub
lret
orl
test
movsl
nop
adcb
adc
jns
insl
ljmp
sub
xor
sbb
cmp
movsl
mov
push
pop
jno
addb
mov
ss
and
ljmp
or
pop
mov
xchg
sub
in
je
mov
negl
gs
dec
ja
jb
xchg
pop
test
mov
mov
mov
push
jge
mov
pop
test
mov
cmp
ret
push
aaa
int
mov
pop
cwtl
and
push
or
and
out
mov
cmp
pop
scas
std
xchg
adc
ret
xchg
daa
in
push
add
ljmp
xor
jp
jl
sub
cmp
or
cmp
inc
cmp
pushl
cmpsl
jmp
xchg
xchg
push
cmpsb
loop
xor
or
add
mov
lds
push
push
pop
adc
and
fnsave
mov
mov
mov
mov
sub
call
sbb
lcall
mov
sar
xchg
sub
pop
pop
stc
pop
bound
push
stos
jmp
outsb
push
fsubrl
mov
jae
es
sub
xor
ja
sub
xchg
inc
mov
push
popf
mov
popf
add
pop
ljmp
mov
pusha
stc
cmp
shlb
jnp
jge
out
inc
mov
popa
jne
lcall
nop
mov
decl
mov
cmp
mov
ret
cli
jle
jns
push
jg
mov
push
mov
into
cmc
or
in
mov
incb
fbstp
jmp
and
fidivrl
xchg
clc
lcall
in
ja
stos
mov
sbb
int
movsl
lret
stc
push
cmc
mov
mov
pop
jns
rorb
mov
mov
add
xchg
cmc
test
shll
decl
jmp
ficompl
inc
mov
pop
rclb
cmp
sub
insl
xor
and
pop
xor
xorb
test
pop
dec
js
loopne
pushl
jg
fidivrl
jmp
cld
push
and
int
pop
mov
mov
add
pop
pop
mov
dec
cs
stc
jmp
push
call
sub
cmp
cltd
pushl
out
xor
stc
sysenter
aad
pop
sbb
inc
lods
insb
icebp
lcall
cld
out
mov
dec
fmull
int
fwait
jb
mov
mov
xor
xor
jg
push
add
movsb
sub
jle
scas
sub
xchg
pushf
push
fs
fisubs
cmp
sbb
ljmp
or
sbbb
pop
movsl
sub
jo
mov
aam
test
sar
mov
ror
insb
sbb
daa
push
push
stc
push
mov
push
fiadds
jmp
ret
add
hlt
fisubrl
pop
mov
repnz
test
insb
stos
add
sub
inc
orl
xor
ljmp
fs
ss
iret
adc
incl
mov
push
lods
js
shrl
arpl
push
pushf
mov
mov
out
jne
and
mov
jne
dec
sbb
hlt
incl
and
xchg
lret
cmpsb
stos
lods
xor
pop
sahf
inc
mov
mov
sub
mov
xor
leave
cli
xor
xor
aas
and
test
jmp
push
add
sbb
mov
jbe
jae
or
push
or
dec
ljmp
incl
sub
pop
pop
imulb
xchg
lret
push
push
push
stos
stc
sub
inc
dec
std
fbld
pop
call
xchg
pushl
shrb
mov
mov
call
js
bound
xchg
cmpsl
inc
imul
jg
dec
sbb
pop
xchg
lods
dec
imul
fcos
jmp
adc
xor
adc
ror
lret
iret
push
xchg
xchg
sbb
pop
icebp
cli
test
xchg
cs
decl
inc
iret
les
outsb
xor
movsb
jmp
and
dec
and
mov
sahf
jnp
lock
lea
pushl
sub
in
inc
and
lahf
clc
mov
fmull
lcall
out
pop
repz
lret
jle
push
xchg
popa
mov
push
pusha
repz
decl
adc
enter
mov
sbb
outsb
ljmp
xor
or
and
sub
dec
push
mov
insl
xor
mov
xchg
sti
sub
mov
incl
inc
imul
adc
xchg
adc
xor
and
call
stos
mov
and
push
insb
push
sbb
jg
lcall
sub
and
fisubl
mov
lock
fnstsw
jmp
data16
pop
pop
sub
arpl
stos
mov
outsl
inc
push
into
xchg
mov
dec
mov
das
sbb
ljmp
xchg
sub
inc
test
sub
jo
mov
in
inc
ds
add
sbb
repz
ss
lcall
jb
inc
mov
mov
jle
adc
stc
incb
mov
dec
cmp
icebp
dec
dec
add
mov
ljmp
mov
xchg
loop
loopne
sbb
ds
mov
add
jb
out
lods
popa
stos
jne
shrb
outsl
inc
ljmp
cmp
cmpsl
xor
pop
arpl
cmpsl
adc
mov
decl
leave
cmpsb
mov
pop
xor
add
jp
call
or
enter
rorl
lds
xor
and
jno
clc
test
xor
add
fsubl
sub
jg
incl
fmull
jecxz
jns
out
imul
mov
mov
push
stos
jns
mov
sub
std
xor
sub
stos
mul
in
incl
mov
add
pop
enter
fstenv
mov
cmp
addr16
nop
dec
dec
jne
push
mov
mov
icebp
roll
iret
sub
mov
mov
jb
mov
shrb
pop
int
push
push
shll
jmp
xchg
sbb
jmp
or
in
dec
jp
push
outsb
int3
jb
rol
push
andb
pop
pushl
incl
inc
ds
add
add
ss
jbe
sti
cmp
or
ljmp
cld
dec
rorb
icebp
pop
ja
loop
scas
xchg
xchg
cmp
pop
pop
ljmp
pop
bnd
insl
out
inc
xor
pop
mov
sbb
decl
push
dec
enter
nop
push
and
stos
pop
sar
push
ret
mov
hlt
jmp
cmp
sarb
jae
sbb
or
mov
stc
pop
xor
aad
jl
ljmp
cmc
leave
std
addb
sbb
shr
stos
or
mov
sarb
and
ds
je
xor
mov
stos
push
and
imul
dec
xchg
fs
add
sub
adc
fldcw
dec
lcall
add
add
jnp
in
mov
xchg
jecxz
xlat
lahf
shlb
jp
ljmp
ret
icebp
out
stos
add
mov
mov
into
pop
xlat
jb
sub
cmp
loop
push
mov
daa
loopne
imul
inc
sub
lea
lcall
and
push
mov
mov
call
cmpsl
add
push
outsb
call
mov
mov
mov
ds
call
or
mov
adc
cmp
pop
in
mov
ljmp
cld
push
pop
mov
inc
movb
hlt
push
jb
mov
jg
add
outsl
cmp
repz
sbb
pop
insl
aas
mov
aad
iret
jmp
mov
in
push
jp
push
test
jmp
jne
in
xlat
pop
test
xor
or
imul
aad
add
and
dec
cld
jmp
jb
fistpl
cwtl
insb
xor
cwtl
push
xchg
sub
ljmp
imul
sbb
adc
xor
jno
rolb
mov
push
adc
loop
sti
mov
or
sbb
rol
xlat
sbb
lcall
aam
movl
cmp
mov
ret
pop
incl
addr16
sub
add
imul
or
es
mov
or
pushl
mov
loope
adc
cmp
xchg
rcrl
bound
add
out
loope
test
lock
inc
inc
in
rcll
aaa
ret
xor
lcall
or
aaa
stc
call
std
cmp
sbbb
xorb
cmpsl
mov
xchg
xor
cmp
jg
call
andb
jg
pop
fcom
and
fildl
lret
das
std
mov
add
jmp
lahf
or
out
gs
push
mov
mov
pusha
int
add
lods
xlat
mov
mov
call
jg
xor
and
xor
add
out
arpl
mov
std
std
mov
cld
jmp
hlt
cltd
cmp
nop
pop
and
aas
lds
aaa
pop
push
pop
frstor
loope
test
mov
test
decl
mov
iret
xor
xchg
icebp
js
das
jae
lret
sbb
div
add
lods
dec
popa
cmovp
push
xor
int
jmp
fs
lods
aas
pop
enter
cmp
jmp
add
ljmp
test
sub
pop
pop
mov
add
enter
call
adc
adc
cmp
sbb
pop
xchg
push
lahf
in
pop
sub
fcoml
outsl
cmc
jmp
arpl
push
adc
jbe
aas
pop
jl
fldt
insl
pop
fcoml
cmpsl
pop
xchg
xor
cmp
mov
jle
inc
pop
lods
in
in
push
pushl
inc
orl
jnp
pop
nop
fsubl
mov
cld
ljmp
adc
mov
or
outsb
xchg
and
lea
sbb
cwtl
push
lret
lret
xor
mov
outsl
lock
inc
cmp
inc
jns
sarl
loop
ret
push
pop
lret
sar
decl
call
inc
jnp
inc
in
subl
call
push
push
cltd
inc
add
addr16
xor
std
into
mov
and
andl
lcall
cld
or
inc
xor
xor
jmp
inc
dec
mov
and
sbb
ljmp
sub
push
push
daa
into
fnsave
pop
sarl
push
fucomp
aas
nop
scas
jbe
clc
jo
das
push
in
or
mov
add
cli
cmc
cs
dec
xchg
stos
pushf
cmpsb
notl
insl
addr16
lea
push
xor
stos
jbe
dec
nop
cmpsb
sbb
mov
lods
sub
add
pop
fldcw
jp
xchg
cmp
rcrl
push
jle
cld
lcall
dec
mov
lret
mov
push
mov
das
sbbb
dec
incb
in
pop
jl
jne
shll
sbb
cmp
cmp
ljmp
paddsb
sub
leave
lcall
inc
and
imul
mov
sarb
mov
sbb
mov
inc
ljmp
loop,pn
or
lcall
popf
xchg
data16
cmp
call
push
push
or
sbb
loope
pop
in
cmp
push
icebp
call
int3
inc
js
mov
sbb
repnz
add
ljmp
ljmp
testb
into
cmp
push
je
add
nop
ljmp
incl
push
mov
out
dec
mov
mov
push
test
jmp
inc
push
mov
push
mov
jb
mov
into
pop
mov
push
sbb
enter
inc
push
rcr
dec
cs
mov
or
mov
mov
fidivl
sarb
xchg
aad
inc
xchg
mov
sub
mov
pop
add
fmull
pop
and
adc
outsb
mov
xchg
movsb
dec
ljmp
pushf
aad
jmp
mov
pushl
fcmovnb
adc
cli
movsl
test
fldl
cmc
push
jmp
lods
imul
push
incl
js
ss
outsb
and
sbbb
enter
pop
loopne
jnp
in
jmp
pop
test
or
jb
cltd
jns
mov
mov
cmp
outsl
int3
mov
iret
sahf
movsb
sarb
push
call
cs
or
adc
into
pop
stc
sub
sbb
in
addl
into
add
aas
mov
loopne
movsl
hlt
jecxz
cmpsl
cmp
sar
jecxz
orb
sub
dec
xchg
lds
sbb
lods
jns
sbb
pushl
add
pushf
jecxz
mov
inc
jmp
imul
jmp
mov
xor
cmp
js
mov
jg
pop
jb
aam
aad
sub
test
ljmp
int3
mov
dec
aas
cld
cmp
pop
jge
lds
sarl
xchg
cli
fdivl
xchg
adc
mov
xlat
mov
inc
xchg
pushl
cli
stc
mov
add
push
enter
test
mov
push
imul
mov
lea
cmp
mov
incl
mov
jge
out
xchg
ja
loop
fsts
mov
sbb
xchg
mov
cwtl
cmp
lods
and
daa
push
mov
addb
jno
sti
nop
fs
fnsave
or
sub
jmp
mov
mov
cwtl
cmp
dec
dec
stc
in
sub
clc
mov
pop
xor
and
clc
jb
addb
mov
sub
aas
dec
cli
inc
or
test
xorb
inc
fimuls
dec
fldenv
les
ss
xchg
cmp
cli
cwtl
test
cmpsl
lcall
in
cmp
out
jbe
adc
xor
loopne
and
mov
in
call
setbe
inc
aam
fidivrl
sub
pop
xor
push
jmp
push
pushf
je
mov
cmp
icebp
sbb
cmp
push
out
push
xor
sbb
xlat
ljmp
xor
adc
aam
xchg
imul
outsb
out
pop
xor
pushf
and
mov
push
addb
dec
cmpsl
jge
sbb
das
enter
fmulp
repnz
pop
clc
mov
mov
adc
hlt
jne
ljmp
lock
decl
stos
loope
mov
sbb
mov
mov
inc
push
sbb
xchg
stos
push
addr16
loopne
ljmp
cltd
sub
outsl
hlt
jmp
fwait
addr16
call
in
and
mov
dec
pop
pop
inc
jp
mov
xchg
jge
xchg
xchg
pop
jne
std
cmp
loope
mov
mov
mov
adc
test
mov
mov
mov
pop
shrb
jg
lcall
ret
mov
cwtl
cli
inc
inc
adc
mov
xchg
xor
cwtl
pop
lret
sub
mov
push
lcall
push
xchg
negl
and
mov
pop
jnp
enter
clc
lods
call
jns
sub
sbbb
jg
inc
sahf
enter
adc
movsl
lcall
in
mov
movsb
mov
pop
mov
mov
popf
jne
push
out
mov
inc
or
inc
ret
lcall
cli
mov
fidivrl
inc
sbb
xchg
ljmp
daa
lahf
jecxz
xchg
push
cmc
jl
or
xchg
mov
xlat
push
cltd
push
mov
and
lret
inc
pushl
xchg
popw
sbb
imul
cmp
jmp
pop
cli
loope
cli
leave
push
jge
mov
mov
pop
popf
push
mov
jg
jnp
sub
mov
ljmp
hlt
shr
sti
enter
lea
rorb
scas
movsl
xor
lfs
lods
enter
enter
leave
lods
aas
mov
inc
mov
mov
push
addr16
shl
mov
mov
popa
loope
cmpsb
repnz
ja
cwtl
dec
cltd
push
decl
add
push
cmp
aad
jecxz
shrd
icebp
xchg
xchg
dec
pop
clc
add
and
ljmp
push
cli
or
mov
mov
int
sbb
lcall
arpl
loop
pop
mov
xor
adc
dec
push
jecxz
cmpsl
mov
mov
imul
popa
fwait
movsb
sbb
add
cld
hlt
mov
int
filds
repz
ret
out
cmp
mov
psllw
sub
jle
cwtl
lods
xchg
mov
jg
fstps
inc
push
dec
movsl
mov
fldl2t
lret
dec
jecxz
xchg
and
jmp
js
jg
in
iret
jo
sub
loopne
pop
pop
adcb
les
call
mov
mov
add
loop
mov
sub
pop
outsl
rcrb
and
call
add
mov
xor
movsl
dec
xchg
push
out
sbb
ret
and
add
pop
aas
dec
dec
inc
orb
inc
adc
mov
and
pop
in
jp
push
xchg
cmp
add
std
testb
jle
shr
push
mov
mov
into
and
call
clc
das
jo
cld
imul
rol
fstpl
sub
inc
call
add
outsb
flds
mov
imul
adc
push
xchg
roll
out
mov
or
test
dec
xchg
icebp
mov
lret
jmp
jmp
ja
ds
insb
hlt
arpl
cs
dec
ror
add
sub
ret
xchg
and
in
ja
jne
test
pushf
xor
ljmp
pop
je
mov
stos
and
out
sbb
decl
mov
add
mov
mov
mov
pop
in
imul
movsb
int
jmp
pushf
inc
inc
and
inc
scas
cmp
pushf
inc
stc
mov
lcall
ljmp
cltd
ficoml
rcrb
xor
pop
std
lcall
cmp
mov
leave
mov
outsl
lret
daa
lock
mov
jecxz
or
xchg
js
mov
add
ss
leave
mov
mov
int3
mov
fdivrl
popl
mov
or
fistl
adc
cmp
cmpsl
mov
ss
mov
jle
or
jne
out
cmp
sub
cmp
filds
in
adc
ljmp
xor
jns
add
xchg
test
cltd
test
leave
adc
lret
fisttpl
insl
ljmp
mov
shll
jnp
xchg
incl
decl
mov
add
push
dec
mov
sub
rclb
cmpsl
cmp
mov
insb
dec
cmp
aas
cmpsl
jne
and
xchg
call
cmc
int
pop
test
dec
nop
xchg
pop
xor
pop
add
xor
sar
imul
test
add
sub
in
mov
loope
push
call
sbb
pop
adc
and
sub
push
mov
orb
mov
push
xor
push
out
bound
stos
mov
mov
fnstsw
pushl
xchg
fsubr
shrl
sbb
aam
cli
lea
xchg
iret
wrmsr
sti
fbstp
pusha
lcall
push
push
mov
mov
jne
dec
dec
push
jle
movsl
jb
popf
std
dec
pusha
push
push
mov
call
insl
repnz
int
dec
sbb
sti
xchg
sub
cmp
pop
cld
jmp
fidivrs
and
lock
xlat
or
shll
jns
fs
outsl
xchg
decl
stc
push
add
dec
fisubrs
fldt
xchg
pop
mov
inc
mov
jp
ljmp
sarb
fsts
arpl
or
mov
fnstenv
ljmp
scas
pop
mov
inc
push
xchg
es
mov
push
aam
gs
lds
adc
pushl
jmp
int
adc
xchg
dec
repnz
jne
push
adc
incl
jg
hlt
mov
cmp
sbb
pop
or
sbb
mov
fisubs
mov
js
or
fwait
jno
nop
push
push
pop
cli
lds
mov
pushl
inc
ss
call
mov
fstps
sbb
daa
out
out
imul
pushl
cmp
and
mov
stos
push
push
in
rcl
leave
cmp
pop
mov
dec
sub
fldenv
lcall
std
pop
dec
mov
cwtl
sub
xchg
lcall
jg
xlat
es
sbb
cs
mov
mov
fdivl
add
aad
incl
mov
jae
sbb
das
outsb
or
adc
mov
and
pusha
das
fwait
call
xchg
cmp
inc
mov
int3
push
push
fdiv
jbe
xchg
inc
jb
push
jmp
push
sar
jmp
outsb
jle
xor
add
rorb
and
and
mov
pop
cmp
or
insl
decl
xor
lahf
dec
std
xor
dec
cltd
mov
enter
movsl
jg
aas
mov
xchg
dec
or
and
aas
insl
out
enter
add
fiadds
aaa
ret
sbb
test
bound
add
mov
paddsw
int3
mov
inc
iret
test
sbb
cmc
lcall
fdivp
pop
repz
pop
xchg
and
adc
daa
jmp
sbb
and
mov
or
pop
clc
movsl
jmp
mov
fdivrs
jno
call
pushl
test
inc
in
aam
or
scas
jne
ud1
stos
lcall
ljmp
push
shl
inc
xor
inc
test
movsb
pop
xor
fcmovnbe
or
sbb
cmp
lcall
xor
jge
call
mov
xchg
int
mov
dec
aaa
aam
mov
jecxz
mov
jmp
subb
ret
cmp
decl
inc
idivl
mov
cltd
lret
pop
mov
popf
push
cmp
nop
or
syscall
stos
xchg
mov
mov
or
test
les
aam
xor
lcall
fwait
mov
aas
push
ljmp
pushf
jmp
test
stc
imul
inc
daa
add
incl
mov
adcl
lds
and
sub
aam
xchg
or
mov
mov
and
mov
call
xchg
in
xchg
inc
jb
dec
mov
out
dec
dec
push
insl
cli
mov
fnstcw
jns
ljmp
scas
jmp
mov
add
outsl
rolw
fistl
pop
sub
sahf
pop
icebp
mov
cmc
dec
dec
mov
sub
loop
inc
mov
sti
std
xchg
cli
mov
xor
fxch
pushl
inc
lea
xor
sar
mov
sahf
adc
sbb
jl
daa
into
cmp
andnps
mov
std
nop
aas
xchg
in
push
xchg
or
js
xchg
incb
mov
dec
mov
adc
jmp
shlb
fbld
jp
leave
pop
and
mov
xchg
inc
popf
pushl
cli
outsl
add
sub
scas
ret
mov
adc
test
aam
add
in
inc
icebp
in
jno
pop
pop
loopne
jmp
xor
or
xchg
pop
into
push
sbb
lahf
daa
enter
mov
icebp
lcall
dec
das
xor
in
ss
daa
pop
leave
inc
movsl
sub
insl
mov
cmc
rcrw
lcall
decl
fwait
add
loope
iret
mov
sbb
gs
mov
stos
jg
not
xlat
aam
pusha
pop
fwait
shrl
je
jge
fstl
cmp
jg
xchg
push
mov
lret
outsb
pop
xor
and
fisubl
mov
loopne
aam
ljmp
sub
mov
lea
mov
outsl
cltd
sbb
mov
push
ret
decl
loopne
xchg
sub
out
inc
xchg
icebp
rorl
fcompl
dec
xchg
stc
add
sti
jle
in
popa
dec
in
shr
jb
ljmp
mov
test
jl
insb
jb
aad
push
call
ss
xchg
adc
ret
mov
lcall
lcall
xchg
enter
outsb
shl
mov
pop
pop
stc
imul
jg
je
push
arpl
sub
icebp
in
add
das
mov
dec
xor
into
mov
dec
mov
xchg
js,pt
mull
cmpsl
pop
mov
add
scas
fnstsw
jg
fs
or
xor
fimuls
push
loope
decl
daa
xchg
enter
stos
push
imul
mov
cmp
jg
iret
dec
mov
dec
movsl
jne
lret
lcall
sarl
sbb
incl
ret
pusha
push
sbb
leave
pop
stos
data16
adc
in
pop
xor
jg
mov
jns
enter
jb
and
adcl
xchg
fwait
xchg
dec
push
pushl
shlb
adc
ds
dec
xchg
push
push
test
dec
jmp
pop
push
push
sub
aaa
outsl
sub
mov
cmp
fcompl
int3
pop
pop
aam
mov
leave
jno
xor
lods
pop
pop
sub
jb
inc
cltd
lcall
adc
dec
inc
pop
mov
dec
xchg
push
jno
imul
aaa
mov
adc
idivb
popw
cmpsb
xchg
mov
adc
mov
call
xor
sbb
aad
jbe
jno
push
bound
mov
inc
dec
fnstenv
xor
dec
cmp
and
outsl
rcrl
jmp
les
push
stc
mov
jl
pop
out
jo
fwait
scas
insl
mov
decl
je
sarb
mov
dec
imul
mov
fucomi
push
mov
stos
out
mov
outsl
std
push
mov
push
sbb
ds
daa
lods
dec
call
rep
dec
sbb
test
aam
fldl
inc
or
inc
pop
cmpsl
adc
in
and
sub
out
mov
outsl
icebp
das
hlt
inc
xchg
pop
dec
mov
sahf
fwait
in
lods
cmp
loope
lcall
popa
jg
mov
add
jp
sbb
ljmp
cmc
and
ffree
ds
ret
push
call
das
mov
out
inc
sub
sub
ja
test
pop
fmull
mov
cmp
imull
popa
loopne
cmp
movsl
or
pop
fabs
inc
int3
enter
ds
insb
and
jl
scas
inc
out
pop
and
adc
out
ss
mov
lods
and
or
and
sbb
push
dec
jb
jge
sti
loopne
in
lcall
cld
sarb
and
rol
push
or
sub
mov
cmp
lds
and
mov
cmp
repz
test
xlat
xchg
lahf
aam
jbe
jne
test
mov
rcrb
daa
punpckhwd
out
push
insl
add
loope
or
inc
mov
movsl
push
std
pop
divl
in
sbb
insb
cmpb
outsl
cld
call
insl
sbb
or
mov
outsb
cmp
pop
dec
add
cli
pop
fisttpll
fstl
push
mov
pusha
mov
xor
sbb
sbb
jmp
or
dec
xor
shrl
ja
mov
cmp
mov
sbb
dec
stos
lods
enter
ljmp
cmp
movzbl
mov
scas
mov
mov
jbe
inc
loopne
cli
call
mov
xchg
iret
test
sahf
xchg
pop
lahf
ficoml
inc
push
adc
idiv
pop
ljmp
pop
mov
sub
sbb
adc
cmp
inc
inc
jl
mov
cmp
push
arpl
test
sarl
jecxz
or
cmp
fiaddl
cmc
and
push
inc
inc
or
out
cmp
jne
add
cmp
out
cld
rclb
fldt
inc
scas
jns
imul
loope
das
icebp
call
iret
aas
sub
mov
xchg
ja
pop
push
xchg
inc
bound
enter
icebp
insl
mov
int3
loop
push
jne
call
jmp
mov
xchg
sbb
xchg
hlt
mov
mov
pop
clc
adc
xor
pop
cli
ljmp
pop
or
xchg
push
cld
lret
add
push
dec
or
test
decl
push
sti
stos
ja
popf
fiadds
rcrb
movsb
xor
sti
and
loopne
inc
mov
jmp
test
das
enter
sbb
jp
lret
cmp
fildl
sub
jl
jo
call
and
cwtl
ja
cmp
test
push
cmp
int3
mov
lcall
push
or
jge
xor
xchg
call
lahf
xor
mov
decl
jg
pushf
or
push
push
add
dec
jo
jb
bound
add
ja
mov
inc
lds
aaa
mov
add
xchg
dec
adc
data16
sub
and
dec
push
dec
sbbl
mov
pop
xor
pop
push
hlt
push
cld
xchg
cmpsb
lcall
sets
cltd
bound
pop
rcr
jmp
lahf
in
lret
or
pop
aaa
repz
jecxz
fwait
bnd
dec
mov
call
addr16
fs
or
in
rorb
out
sarl
mov
decl
mov
cmp
and
mov
or
jg
pushl
jl
inc
xchg
pop
inc
lods
repnz
roll
mov
mov
lcall
pop
jge
mov
into
loopne
insb
push
inc
testl
cmp
aam
decl
test
or
xor
sbb
inc
push
movsl
sbb
fcos
push
inc
mov
or
xor
jmp
int
aad
sbb
pop
data16
hlt
mov
jmp
jb
cmp
lahf
movsb
test
and
imul
incl
cmp
fs
leave
xorl
call
jle
cmp
lret
mov
ret
lods
stos
in
xchg
nop
mov
cmp
int
in
repnz
iret
ja
cmpsb
sti
fldenv
test
dec
out
sub
mov
jp
push
jg
xchg
andl
outsl
repz
xor
lock
inc
hlt
xor
in
ljmp
fsubrl
jmp
fs
mov
add
hlt
in
clc
ljmp
xchg
or
or
fsubrs
inc
lds
nop
dec
xchg
clc
lods
incl
iret
loop
mov
lret
and
xor
decl
into
dec
pop
shlb
movsb
movsl
orl
jnp
push
stos
mov
bound
push
stos
in
stos
mov
into
jmp
push
push
xchg
and
repnz
xlat
adc
out
jmp
daa
mov
sbb
pop
sub
adc
mov
cmc
lods
xor
mov
xlat
fdivrl
push
jno
jns
outsb
fiadds
jl
lods
add
jne
mov
fstps
std
lret
in
or
cld
clc
lcall
mov
or
dec
pop
inc
cmpsb
pop
insl
pop
and
cmp
decl
std
xchg
sbb
lahf
fldcw
lret
ret
sbb
lret
jg
adc
jo
addr16
iret
adcb
jae
jbe
push
stc
enter
adc
fcmovnbe
and
std
ljmp
out
pusha
pop
mov
out
sbb
iret
fistps
nop
inc
cmp
negb
popf
imul
dec
outsb
inc
ja
sbb
cltd
push
mov
pop
out
dec
daa
stos
and
mov
and
inc
fcomp
pop
divl
test
and
rcrl
adc
lcall
ds
scas
adc
xor
inc
das
jg
cli
push
outsl
dec
aam
sbb
jmp
mul
loope
push
push
push
mov
and
adc
ljmp
mov
jecxz
pushf
cmpsl
pushf
repz
push
lret
adc
push
scas
cli
pop
lds
and
test
pop
test
xchg
incl
ljmp
xchg
icebp
test
xchg
mov
pop
push
pop
or
clc
fwait
sub
shlb
ljmp
or
loope
sub
shlb
add
xor
cmp
jb
dec
ljmp
mov
es
and
stc
sub
ljmp
push
mov
mov
sti
popa
bound
ljmp
nop
sub
cmp
loopne
cmp
ss
add
push
nop
adc
addr16
adc
incl
ja
and
dec
stos
mov
pop
mov
scas
inc
ljmp
cli
sbb
ljmp
lock
daa
add
in
push
out
sahf
test
mov
insl
negb
rcrl
push
cltd
pushf
sbb
icebp
das
cld
incl
paddb
mov
lods
int3
mov
pop
int3
stc
call
ljmp
jmp
fsubl
lcall
test
lcall
aaa
xor
xchg
fcompl
sub
jo
xchg
les
lcall
in
pop
add
orb
mov
pop
xchg
sbb
mov
cld
das
add
pop
ljmp
lods
sub
es
insl
sbb
repz
pop
stos
out
mov
xor
lock
add
xor
sahf
push
pop
or
cmp
add
ljmp
hlt
lcall
rolb
mov
mov
and
fisubs
sub
fdivrp
dec
std
ja
sbb
addr16
jp
pop
mov
and
pop
pusha
mov
pop
cmpsl
add
fdivrs
mov
dec
mov
rcll
mov
adc
mov
xchg
sti
mov
jg
lcall
push
out
loopne
sbb
cli
sbb
pop
cltd
and
xchg
cli
incl
cmp
fs
mov
xor
dec
dec
jmp
call
cli
pop
inc
push
dec
ljmp
cmpsb
sub
mov
ljmp
and
ljmp
sarb
cmpsl
jle
jmp
fsubr
icebp
out
dec
xor
shll
xor
dec
pop
test
dec
jmp
mov
push
add
push
inc
je
rclb
push
icebp
adc
mov
ljmp
std
aaa
aad
pusha
add
shrb
mov
clc
inc
mov
jo
and
out
outsb
sbb
or
jmp
test
call
xchg
shr
jp
inc
in
cltd
mov
add
xchg
addb
jmp
scas
inc
gs
add
cmpsb
xchg
inc
loop
cltd
jb
popf
mov
std
jg
dec
mov
mov
add
dec
inc
push
in
movsl
ds
mov
add
fs
movsb
sarb
insl
jg
test
jnp
or
mov
ljmp
icebp
add
xor
ret
iret
sahf
mov
rcrb
gs
jmp
pop
xchg
scas
les
pop
dec
pushf
inc
enter
or
jg
nop
cltd
ds
mov
les
ja
pop
jns
je
subb
shll
lods
hlt
ljmp
adc
mov
xchg
ljmp
mov
aam
repz
shrl
incl
clc
inc
rcr
add
or
pop
dec
in
lcall
sbb
inc
dec
std
movsl
incl
outsl
push
adc
popf
push
fwait
ret
test
int3
gs
fisttps
jmp
addr16
fidivl
out
inc
out
shl
insl
pushf
xchg
lods
sub
cwtl
cmp
inc
jmp
cmpb
std
pop
mov
rcrl
pushf
or
xchg
pop
sarb
and
inc
outsl
cmc
incl
sbb
dec
jb
push
pop
jp,pn
cmp
cltd
fistl
mov
ljmp
stos
jo
xor
sub
rcll
mov
or
jb
incl
clc
into
popa
cwtl
movsl
out
push
jo
sti
inc
dec
lock
inc
push
dec
icebp
stos
lea
push
aas
imul
decl
push
rcll
insl
jne
push
jg
inc
not
sbb
or
push
mov
dec
xor
mov
inc
or
dec
and
mov
mov
hlt
inc
jp
cmp
sbb
mov
dec
aaa
nopl
mov
in
lcall
mov
adc
sub
add
xor
fucomp
js
sahf
jb
and
pushf
fisttps
idivb
mov
add
pusha
sub
jle
cli
call
dec
push
stc
movsl
inc
mov
xchg
xor
and
arpl
lcall
mov
xchg
orl
pop
push
mov
outsb
ret
clc
push
or
push
stos
fsubrp
rol
and
add
add
push
test
jb
jle
sub
mull
xor
decl
push
bound
sub
cmpsl
pop
repz
push
into
sbb
cmp
movsb
in
xlat
call
cwtl
test
dec
add
pop
and
dec
mov
es
pop
ja
jge
pop
pop
cmc
mov
cmp
sub
cmp
outsl
cmc
pushl
xchg
rcl
jne
dec
push
sti
or
mov
jecxz
lcall
sub
repnz
inc
add
mov
push
fwait
or
decl
sahf
mov
xchg
fwait
push
pop
nop
or
cmp
mov
jle
loop
das
pop
lcall
icebp
in
push
popa
inc
jp
jmp
adc
ds
or
push
pop
jne
cmp
sub
xor
fiadds
push
and
das
std
iret
out
adc
data16
sub
push
mov
std
or
insl
adc
sahf
mov
mov
dec
mov
xchg
mov
lock
pushl
push
xor
inc
cmp
into
pop
push
arpl
mov
popf
sub
decl
jmp
pop
mov
je
popf
sbb
push
mov
daa
pusha
aas
mov
pushl
clc
mov
xlat
xchg
fnop
add
clc
cld
outsl
imul
and
ja
pop
cli
mov
cmpsb
inc
sbb
add
xor
xchg
mov
sub
lcall
dec
ja
int
loop
lock
loopne
test
xor
or
dec
sbb
loopne
decl
testb
lods
lcall
jle
aas
lds
dec
lret
ss
fcmovb
sbb
jne
jg
pushl
pop
test
mov
push
push
xor
or
incl
xor
notl
and
push
sub
lcall
je
sbb
sbb
xor
ljmp
pushf
hlt
mov
call
xor
dec
mov
out
into
call
cmp
pop
cld
call
outsb
pop
fcomip
popa
in
bound
inc
aaa
cli
mov
bound
loop
jo
cmp
in
fnstcw
cmp
call
or
adc
imul
fimull
scas
cmp
pop
cld
inc
sbb
loopne
dec
mov
cld
call
les
mov
jp
jnp
repnz
inc
imul
push
pushf
and
andb
adc
push
xor
dec
movsl
mov
cmp
fdivrl
mov
fldt
jne
mov
pop
ljmp
jle
mov
or
mov
inc
fdivrp
fsts
jg
jmp
test
fsubl
push
sti
in
lea
ret
jmp
cs
test
xorb
or
inc
stos
pop
inc
inc
out
out
dec
scas
sbb
pop
outsl
or
clc
out
lods
lock
jmp
mov
sub
push
aas
inc
mov
mov
xchg
xchg
loope
inc
pop
mov
imul
jmp
ds
xor
mov
mov
jp
ljmp
cld
fildl
hlt
aam
or
subb
iret
push
xchg
movsb
out
sahf
outsl
shll
ret
mov
push
and
inc
cmp
fwait
dec
sarl
je
stos
mov
xor
dec
sub
sub
stc
inc
or
sub
jmp
cmpl
ss
stos
dec
push
push
jae
pop
xchg
and
test
mov
cld
jle
decl
icebp
xor
mov
mov
test
call
pop
lock
jbe
bound
mov
or
push
pop
sub
std
lcall
jg
pop
lret
push
or
xchg
rcrl
cmpsl
adc
mov
movsb
cmp
inc
dec
push
sub
in
clc
or
das
std
call
arpl
cltd
xchg
cmp
pop
sub
jg
mov
incl
sub
cwtl
jnp
pop
mulb
cli
xor
mov
outsb
icebp
out
jae
jmp
jecxz
or
pop
mov
pop
mov
pop
or
shlb
ljmp
inc
inc
fstpl
fsts
fwait
fs
or
subl
jns
lock
pop
mov
or
ljmp
imulb
inc
fucomip
mov
adc
jno
cld
rorl
cvtpi2ps
jnp
ljmp
dec
mov
pushf
jl
jo
jo
stc
cmp
cmp
add
inc
pop
jge
test
add
fcoml
jmp
lret
xorl
sub
cmc
ffree
pop
xchg
add
cmp
dec
lods
mov
mov
incl
push
jo
adc
push
std
jmp
jg
cmc
or
xchg
icebp
xchg
cmp
mov
mov
mov
das
insb
cmp
jne
test
adc
es
ljmp
jge
rcll
mov
test
test
enter
jecxz
xor
cmp
call
cmp
inc
pop
mov
xlat
jns
mov
aad
ret
lcall
xor
loop
push
ja
into
xor
pop
and
ljmp
xor
pop
lret
daa
repz
ljmp
cli
cltd
adc
sub
push
push
lret
arpl
aas
outsl
fbld
lcall
testl
sub
cmpsb
push
push
dec
cmp
nop
or
and
jg
jmp
adc
mov
or
jmp
cmp
jg
or
in
inc
xchg
lea
sti
std
mov
dec
sbb
fildll
cli
pushl
inc
loopne
ret
insl
out
testb
xor
icebp
pusha
and
std
jne
jae
lcall
sti
cmp
or
lock
cld
scas
out
push
sub
jmp
loop
repz
mov
ljmp
roll
jns
pop
addr16
fldt
add
add
dec
mov
add
in
push
xor
mov
popa
lds
rcr
jo
mov
hlt
lret
cs
int3
sub
faddl
ret
fcmovu
andb
test
aaa
ljmp
jmp
les
cmc
dec
jno
frstor
jbe
imul
cli
sbb
jmp
pop
mov
cmp
ret
rorb
push
jecxz
pop
xchg
jg
insl
inc
dec
inc
xchg
je
fiaddl
jno
pop
push
pushl
fsubs
mov
sbb
add
enter
dec
je
incl
mov
sub
push
add
les
cmp
pop
jno
push
push
jg
push
aaa
mov
dec
lret
dec
pushl
push
js
popa
fcmovbe
jl
daa
jle
rep
inc
mov
stc
add
jbe
call
popf
outsb
in
pop
mov
mov
adc
enter
sub
incl
dec
test
pop
lret
xchg
cld
adc
jbe
mov
mov
push
cwtl
stos
decl
dec
std
push
pop
sbb
mov
mov
mov
incl
pop
jmp
sub
in
inc
adc
lahf
ss
jmp
notb
push
cmc
push
popf
pop
clc
ljmp
mov
cmp
mov
dec
fadd
stc
movsl
insb
pop
clc
call
cltd
repnz
push
in
and
mov
sbb
cmpl
decl
into
dec
fs
out
stc
sar
cmp
dec
xchg
call
fistpl
pushl
ret
insb
jle
xlat
jne
loop
pop
outsb
jb
in
sbb
call
jne
adc
pop
inc
pusha
insl
sub
or
sbb
sbb
mov
fbld
leave
push
in
and
xchg
push
sub
sub
fildll
push
sbb
xor
mov
test
ds
sarb
scas
pushl
pop
push
stos
int3
test
pusha
pop
mov
xchg
into
test
xor
mov
out
ljmp
add
fcom
or
sbb
fcmovnbe
cld
jg
xlat
or
ja
dec
fcmovnu
std
lcall
ljmp
mov
das
out
sbb
scas
loope
inc
ret
xchg
cli
incl
dec
mov
dec
dec
icebp
dec
pop
and
aas
xor
dec
lods
mov
shl
insb
jns
sbb
ret
shrl
scas
and
or
call
adc
loope
xchg
add
push
jp
inc
inc
xor
icebp
pushl
clc
jnp
sbb
orl
pop
xor
cmp
and
inc
cmp
dec
cmc
push
mov
pushl
stos
lcall
mov
scas
jae
or
shlb
xlat
hlt
xchg
dec
shrb
incl
mov
add
lcall
xchg
xor
mov
imul
sub
jo
dec
hlt
jmp
clc
jo
in
jle
lcall
and
outsb
in
add
mov
and
aad
pop
daa
pop
repnz
call
inc
xchg
dec
sbb
incl
stos
aam
jo
xchg
nop
test
mov
mov
and
lods
mov
sar
incl
mov
cs
hlt
test
xor
pop
fdivr
pop
push
out
test
xchg
or
lods
ror
pusha
test
enter
jg
and
add
push
add
add
bound
push
mov
stos
inc
or
sarb
clc
incl
mov
call
aad
lds
ljmp
xchg
aas
insl
push
pop
add
sub
aas
cmp
icebp
mov
add
inc
aad
and
push
andl
cmp
jno
xor
ds
fucomip
pushl
mov
movsl
jl
negl
loopne
lahf
mov
cmp
pop
dec
std
sub
orl
mov
inc
fstl
jnp
dec
rol
push
lcall
add
mov
lcall
inc
leave
stos
mov
js
std
loope
dec
lock
hlt
inc
lar
sbb
cmp
call
xchg
dec
iret
in
iret
add
mov
sbb
es
cmp
pushl
test
lret
mov
mov
inc
cmp
jp
jp
movsl
rcrl
mov
sbb
cli
fucomip
fwait
stos
outsb
jae
mov
mov
add
xor
decl
xor
xor
cmp
inc
mov
rcrl
ds
jo
js
jo
ficoml
jecxz
scas
fisubl
or
xor
call
xor
enter
mov
negb
test
popa
and
push
addr16
push
or
push
jns
fcoms
aam
jg
push
sbb
std
and
dec
inc
ljmp
push
and
cmpsb
xor
insl
sbb
mov
mov
sar
mov
loope
mov
and
fndisi(8087
inc
mov
inc
into
push
inc
es
aas
movsl
and
outsl
jne
call
jo
xchg
fs
outsl
int
mov
call
add
lds
ja
movl
insb
push
sbb
lock
jle
icebp
jmp
aad
cwtl
test
pop
xchg
fstpl
mov
decl
cld
aaa
mov
cmc
push
pop
insl
dec
inc
inc
fs
mov
mov
xchg
pop
js
incl
sub
pushf
out
mov
aaa
gs
int3
scas
clc
or
daa
add
inc
push
lret
push
cmp
les
add
mov
lea
incl
or
aam
fmull
loopne
loop
xorb
jo
pop
es
lcall
jle
mov
addr16
hlt
pop
cltd
les
jo
mov
popf
ss
cmp
popf
add
call
outsl
xchg
test
lahf
imul
jecxz
mov
cmpsl
popf
bound
push
in
xchg
xchg
inc
inc
mov
add
nop
mov
dec
repnz
mov
enter
rcl
sub
idiv
movsb
mov
stc
mov
sub
sbb
bound
sbb
ja
fidivrs
xor
jg
inc
or
rcll
or
nop
inc
pop
cld
jp
and
cmp
int
fiadds
cmp
jg
mov
stos
pop
jo
mov
push
iret
push
mov
sub
mov
dec
jns
xor
in
cld
jnp
or
aad
jge
pop
test
pop
lods
test
jge
cmc
sbb
ljmp
test
out
mov
or
imul
push
adc
mov
pop
mov
icebp
dec
jecxz
or
jge
push
add
mov
fistps
adc
test
incl
pop
cli
js
jno
call
inc
sbbl
cmp
jbe
mov
out
sar
jmp
inc
in
jp
repz
call
mov
inc
loopne
dec
sbb
push
decl
mov
jbe
stos
push
mov
push
jmp
jmp
jo
adc
lret
mov
lods
fwait
sbb
sahf
cltd
push
incl
call
push
add
xor
jl
and
sbb
or
mov
cmp
inc
loop
scas
aad
adc
pop
push
inc
mov
dec
jmp
imul
adc
sub
enter
loopne
lcall
mov
cli
enter
mov
outsb
ljmp
inc
inc
push
mov
decl
jl
push
jp
movsb
mov
push
push
and
dec
jae
cltd
sbb
mov
ljmp
call
and
and
xchg
dec
sub
xchg
scas
aad
loop
inc
or
into
leave
mov
jl
inc
add
jle
or
xor
mov
mov
cli
out
aam
int
inc
rclb
cmp
push
jp
clc
outsb
xlat
fstpt
sti
fisttpl
cmp
jecxz
jecxz
sahf
testl
xchg
cli
push
dec
jnp
pop
cmp
add
pushf
add
outsb
jecxz
popf
jmp
and
sbb
lret
lea
sbb
or
pop
mov
dec
aaa
test
push
fucom
mov
and
fisubl
adc
roll
out
and
jmp
leave
mov
mov
cmpsl
ret
lds
fsubrl
ret
add
or
hlt
dec
mov
mov
ljmp
ja
ret
icebp
adc
rcrb
mov
decl
pop
popa
adc
aad
enter
inc
and
loopne
rolb
in
jge
xchg
insl
bound
xor
aas
popa
fidivrs
xchg
shlb
mov
das
insb
ret
mov
repnz
in
enter
insl
cmpsl
ljmp
mov
and
or
jmp
jle
les
fistpll
pop
dec
arpl
sub
jo
std
shll
cmp
les
sbb
ret
loop
lods
dec
ljmp
mov
add
mov
test
aam
in
push
test
push
pushl
cli
imul
shlb
lret
lcall
push
stos
je
cltd
inc
dec
decl
std
incl
xor
cs
fistpl
mov
and
xchg
or
mov
xchg
dec
push
mov
out
fsts
mov
addr16
rorl
rorb
and
xor
sbb
daa
stos
ljmp
lret
mov
cmp
jo
sbb
add
call
repz
rol
pop
test
xchg
fs
jne
add
mov
iret
scas
adc
imul
push
mov
jle
or
ja
adc
pop
incl
cmp
pop
mov
movsb
mov
push
inc
in
out
ljmp
mov
mov
loop
fcomp
cmp
loop
dec
mov
int3
icebp
xchg
and
push
call
pushl
js
andb
cld
out
cmpsb
push
xor
jno
inc
out
push
pop
por
das
std
jmp
jecxz
call
jns
mov
out
sub
shrb
or
movsl
fcmovne
hlt
shr
fistps
mov
popa
lcall
ret
pop
cmpsl
mov
pop
adc
insb
xchg
aad
push
shlb
xlat
and
mov
mov
cmp
push
mov
or
das
hlt
call
xor
and
push
fistl
mov
mov
or
loope
adc
test
insl
sub
test
aam
add
sbb
jo
adc
fbstp
or
jecxz
lcall
cwtl
xchg
jp
dec
idivb
pop
xchg
lods
mov
in
rcrl
fdivr
cmp
cld
jg
jg
jns
out
ljmp
push
jp
enter
jmp
mov
xchg
dec
inc
push
lds
adc
mov
cmp
push
arpl
fadds
lcall
adc
fildll
call
xchg
mov
adc
ret
pushl
cli
aas
cmp
gs
mov
decb
outsl
and
sub
ss
call
dec
loopne
push
daa
insl
into
mov
stos
cmc
incl
push
fisttps
call
in
cmc
or
xlat
or
out
cmp
movsl
call
rcr
ret
lds
fwait
mov
int3
imul
lds
das
dec
repz
jl
cwtl
aas
add
push
int
mov
bound
lcall
clc
mov
xchg
je
mov
stos
and
inc
arpl
xor
ljmp
popf
psubusb
imul
push
pop
sbb
cmpsl
jmp
out
pop
add
std
je
bnd
das
icebp
sub
jmp
add
cmp
ja
and
lcall
das
pop
iret
les
int3
push
jns
lea
dec
rolb
push
dec
adc
and
cli
jl
in
mov
mov
test
adc
out
lods
inc
cmpsl
loopne
sbb
adc
cmpsl
jp
and
jle
push
push
call
cmpb
out
add
xchg
jbe
addl
fisubl
dec
inc
mov
sti
incl
mov
cmp
sbb
insl
hlt
lcall
lods
and
outsb
push
loope
dec
and
add
fstps
lock
push
loopne
pusha
jb
loope
mov
ljmp
push
add
outsl
scas
lds
mov
movsl
sbb
xchg
decb
xchg
pop
dec
pop
push
into
jg
push
push
add
jo
hlt
lcall
jl
roll
pop
out
ss
jno
xchg
insb
fcoml
sar
fists
xchg
lret
imul
adc
xchg
lret
cld
adc
clc
pop
loop
aam
push
inc
out
es
iret
mov
xor
inc
fisubrs
lock
jo
bound
sub
sub
clc
mov
sbb
sbb
daa
pop
fldcw
pop
push
mov
icebp
shlb
repz
fistl
dec
xchg
jg
loope
adc
cli
pop
clc
cmp
ret
push
sti
adc
bound
inc
negl
pushl
je
test
fsubr
jo
pop
movd
imul
lret
and
or
decl
jns
leave
adc
jo
ljmp
jnp
pop
jb
fs
sbb
adc
inc
pop
mov
dec
dec
test
ljmp
iret
hlt
fnstcw
lds
jae
xchg
test
call
sub
sub
xchg
std
xlat
adc
sbbl
pop
pop
loop
decl
pop
xor
and
enter
in
decl
jge
lock
mov
sbb
aaa
icebp
leave
jae
mov
adc
jecxz
decl
in
movsb
scas
inc
jne
pop
clc
dec
test
incl
outsl
inc
dec
inc
mov
jbe
je
stos
test
mov
ljmp
dec
mov
fs
push
test
sub
ljmp
dec
or
fucomp
lds
push
mov
sub
dec
outsb
mov
stos
sarb
xchg
lret
push
jmp
iret
test
mov
push
jmp
leave
xlat
mov
lret
fidivs
sub
divl
or
test
ret
jg
lahf
push
push
mov
jg
jae
mov
test
pop
imull
notb
jmp
add
xchg
pusha
push
inc
fwait
inc
push
sbb
addr16
leave
xor
imul
mov
mov
push
mov
aaa
xchg
push
daa
xchg
iret
mov
lcall
jge
push
stos
je
and
mov
ljmp
popa
lods
lcall
inc
orl
imul
mov
pop
jb
popa
aam
mov
mov
sbb
dec
pop
xchg
mov
lods
push
mov
jmp
decl
or
imul
loop
cltd
cltd
call
inc
jnp
aaa
mov
jg
test
mov
pop
aas
out
mov
frndint
fldcw
mov
or
or
lds
test
test
rep
js
sbb
jbe
add
mov
lcall
xor
push
aam
or
out
cli
icebp
mov
ljmp
fwait
pop
jp
inc
test
push
or
and
xchg
mov
mov
mov
dec
pop
jbe
sub
fimull
aam
lret
clc
loop
jg
aam
sbb
dec
sub
push
mov
cmpsl
data16
mov
lods
in
push
jle
jnp
dec
xor
fs
out
mov
pop
test
adc
xchg
clc
lods
cmpsb
int3
in
pop
jmp
sub
mov
cwtl
cli
mov
and
aam
lods
out
add
cmp
jg
jns
enter
dec
es
outsb
jno
mov
pop
fldl
into
inc
pop
or
and
sbb
incl
popa
xchg
imul
clc
xor
ja
jmp
pop
pop
push
fucomi
cmp
outsl
inc
int3
jecxz
inc
pop
out
arpl
clc
call
push
addr16
add
xchg
gs
fidivs
sbb
pushl
sbb
cmc
xor
push
dec
mov
in
cs
push
cld
imul
loope
mov
ret
cmp
jne
int3
add
or
jno
mov
fs
fyl2xp1
dec
dec
pop
incl
ret
jmp
add
sub
and
fstpt
sub
jmp
jge
fnsave
aam
add
push
pop
call
out
mov
addr16
pop
mov
xchg
clc
jg
dec
cld
sub
mov
sahf
jmp
fisttps
sti
rorb
fistpll
mov
xor
mov
movsb
jle
arpl
out
les
push
out
clc
pushl
add
repz
jne
jbe
cmc
jmp
ljmp
cli
inc
test
sbb
out
aam
cmp
lods
cmp
outsl
jmp
ljmp
in
mov
jg
xor
pop
cli
test
lcall
sbb
aam
push
cmpb
lcall
pop
sbb
push
and
mov
pop
lahf
gs
inc
icebp
inc
sbb
call
cltd
std
scas
cmp
call
adc
dec
pusha
cmpsl
inc
or
xor
mov
ret
pop
cmpsl
push
stc
loop
movsl
sbb
jnp
stos
push
in
adc
inc
fildll
mov
scas
xor
pop
repz
movsb
xchg
call
clc
lcall
test
fld
test
imul
cmp
aaa
push
mov
fistps
push
mov
imul
adc
test
cmpsb
inc
or
cmpsb
cmp
add
jge
idiv
mov
std
gs
mov
mov
loop
jmp
jge
push
imulb
jo
and
lret
mov
aaa
jae
cmp
lret
sub
inc
icebp
je
dec
sbb
adc
bound
lea
mov
call
insb
repnz
dec
jp
cwtl
sbb
into
mov
jle
sbb
sub
loop
inc
incl
aaa
or
xchg
cmp
inc
jmp
fistps
sub
mov
mov
xor
inc
inc
mov
jae
lahf
insl
lahf
call
jg
inc
jb
mov
jecxz
test
stos
jns
xchg
hlt
jmp
loopne
frstor
push
inc
mov
fists
cmp
cmp
sar
incl
dec
pop
cs
loop
into
cmp
push
lret
push
adcb
das
std
mov
leave
fdivr
jmp
outsl
ret
dec
orb
aam
sbb
sbb
jmp
xchg
lds
addr16
addb
inc
movsb
gs
cmpb
loopne
pushl
dec
notb
inc
lret
sbb
mov
xorl
xor
ffreep
push
xor
inc
mov
ja
xor
jb,pt
aaa
adc
incl
xlat
adc
mov
xor
repz
and
scas
pop
and
jg
jns
inc
mov
lods
imul
sbb
add
cmpl
or
sbb
or
jge
fxch
testl
mov
stos
sbbb
incl
pusha
sbb
adc
lock
xlat
je
mov
push
aad
sub
ljmp
cltd
inc
fmuls
pop
inc
test
mov
pop
jne
stos
mov
imul
jge
or
stc
enter
add
xchg
adc
push
mov
fiadds
mov
push
aaa
daa
incl
cmpsl
xor
in
push
sub
add
cmpsb
sbb
ss
notl
leave
fidivl
cmp
icebp
cmp
shlb
mov
jo
icebp
pop
mov
jecxz
push
hlt
hlt
mov
imul
bound
repz
xor
add
decl
jae
sub
es
cmp
daa
pop
jno
push
mov
adc
incl
xchg
mov
mov
enter
sub
in
fsubrs
imul
jo
or
mov
lods
fs
test
in
loopne
mov
push
jnp
add
lret
xchg
clc
add
mov
cmp
std
jmp
scas
mov
jno
clc
or
add
or
jb
sbb
mov
sub
jns
xchg
mov
gs
sub
pop
dec
and
jl
sbb
call
cmp
push
jb
insb
fcomps
adc
test
xor
dec
pop
inc
push
ljmp
enter
lahf
sbb
adc
ret
popa
cmc
loope
std
lcall
xchg
inc
int3
fs
test
mov
sbb
mov
ficoms
aad
fcom
lret
xchg
or
clc
int
pop
incl
pop
jnp
dec
mov
or
pop
sub
mov
jns
arpl
mov
adc
sti
test
int
aaa
xchg
cmc
cmpsb
int
int3
scas
decl
cmp
dec
or
popa
fisttps
xor
test
lods
lods
pop
mov
or
daa
sbb
nop
aad
mov
inc
inc
sbb
push
or
sbb
mov
inc
sub
mov
out
mov
xchg
scas
call
mov
push
sbb
push
hlt
xchg
pop
sbb
inc
stc
test
xchg
add
ljmp
jae
test
fsts
pushf
mov
testb
or
mov
repnz
ljmp
mov
adc
push
call
hlt
dec
out
das
jnp
dec
dec
sahf
popf
xor
add
jne
cltd
test
repnz
test
ds
js
lock
inc
or
dec
neg
lock
icebp
pop
aam
jmp
pop
std
jmp
sbb
int3
or
mov
out
push
mov
jg
jmp
cmp
fadd
mov
sbb
lahf
xor
call
xor
call
out
jnp
insb
sbb
test
andb
int
popa
push
outsl
in
decl
ss
sbb
mov
push
sbb
or
add
sti
adc
call
gs
imul
sub
gs
dec
mov
mov
loop
push
pop
mov
jg
rcrl
lods
ljmpw
inc
pop
mov
decl
inc
leave
push
cmp
jg
jge
lret
out
sbb
and
cli
mov
sbb
cli
lcall
and
stos
insl
jne
ljmp
jmp
sbb
xor
jecxz
add
jg
pushl
enter
inc
sbb
mov
jg
fstl
or
call
incl
sub
and
sbb
aas
lods
cmp
aaa
mov
pushl
adc
fcomip
jae
jmp
in
pop
daa
addr16
int3
fdiv
dec
in
dec
jle
dec
loop
shlb
in
pop
out
sbb
dec
insb
test
add
movsb
dec
add
incl
mov
insb
push
movsl
bound
push
les
lret
fnstenv
mov
jg
push
pop
mov
add
xchg
lods
jno
mov
adc
jnp
iret
fdivr
incl
and
cmpsb
push
mov
aas
lahf
pop
loopne
xchg
mov
sahf
push
sub
add
shlb
incl
sbb
xchg
iret
add
pop
and
sub
out
push
and
call
pop
mov
mulb
rcrb
movsl
lds
push
stos
jnp
test
cwtl
mov
hlt
sbb
stos
inc
adc
lods
mov
call
cli
jmp
add
arpl
sub
mov
ret
push
call
xchg
and
xlat
dec
or
shrb
faddl
cmp
repnz
sub
and
cmp
add
mov
movsb
inc
jb
xorb
adc
scas
or
add
outsb
ljmp
rorb
jbe
mov
test
out
das
lock
fdivrp
and
inc
adc
mov
ds
outsb
add
lods
mov
jmp
jl
sub
cmp
ja
shlb
mov
icebp
pushl
dec
xor
fistpll
cmp
fistpl
push
rorb
xlat
mov
mov
push
jp
fildll
jle
cmp
std
je
je
into
pop
addr16
cmpsb
in
mov
stos
xchg
or
insl
nop
jmp
mov
test
lahf
mov
dec
add
push
cmp
push
repz
push
jmp
jg
imul
mov
push
sub
scas
mov
roll
arpl
push
xchg
xor
mov
mov
dec
std
mov
lods
cs
inc
pop
inc
aaa
shrl
adc
decl
xor
outsb
ret
and
int
cmpsl
or
setp
xchg
leave
pop
imul
mov
stos
xchg
sbb
and
icebp
jne
int3
lods
fdivrl
scas
mov
sti
and
jae
adcb
insl
cmpsl
xchg
jmp
jg
dec
mov
mov
addr16
mov
xor
loopne
fildll
les
push
pushl
addl
inc
in
imul
pop
subl
dec
or
xor
out
cmpsb
jmp
jmp
fsubl
fimuls
mov
cbtw
cmc
sbb
xlat
lcall
sbb
hlt
jg
dec
test
mov
dec
or
out
in
mov
movsb
or
negb
into
push
jmp
xchg
mov
push
scas
test
lret
das
pop
adc
dec
mov
ret
sbb
cmp
jg
decl
cmp
or
imul
sbb
out
and
sbb
lods
lcall
jb
or
mov
push
repz
daa
sbb
push
pop
mov
jg
pop
adc
aad
rcr
data16
lea
cmp
icebp
fcomp
adc
cld
or
cwtl
int3
push
mov
lcall
repz
js
mov
movb
int3
jne
mov
ret
jg
lret
mov
or
push
cwtl
dec
push
call
inc
adc
jnp
fisttpl
mov
push
aad
call
das
jb
xchg
mov
jg
inc
fldcw
popa
xor
js
nop
cmp
shrb
test
jl
inc
orb
lahf
xor
jb
push
inc
repz
add
dec
scas
add
stc
dec
into
push
adc
cmc
decl
in
and
and
outsl
jbe
push
adcl
xorb
cs
mov
and
xor
sub
mov
jmp
inc
fwait
xchg
xlat
aad
vcvtsd2si
pushl
dec
aam
mov
cmpsb
jns
insb
or
aad
jecxz
rorb
xor
push
jl
mov
and
out
pop
pop
jp
shl
push
repz
xor
xlat
clc
pop
outsb
lock
mov
bound
leave
push
ljmp
scas
repz
mov
sar
gs
jmp
mov
sbb
dec
icebp
ja
outsb
std
int
mov
std
jmp
call
jle
and
mov
and
repz
shlb
jo
dec
les
push
aaa
pop
stos
xchg
lcall
loop
dec
adc
out
and
push
inc
xchg
push
out
into
cmp
mov
xor
mov
outsl
fimuls
mov
inc
push
or
mov
push
push
jle
test
mov
rcr
dec
fistpll
sub
addl
push
xorb
icebp
mov
sbb
mov
incl
inc
mov
icebp
addr16
mov
dec
rol
test
jg
ja
and
mov
push
mov
jp
stc
lret
mov
mov
jns
dec
ds
lods
movsl
roll
stos
jle
push
or
xchg
push
aam
mov
out
aas
xchg
stos
push
jmp
sbb
sub
lahf
add
xchg
scas
sub
outsb
pop
and
pop
adc
fwait
out
jno
into
mov
ds
xchg
or
jg
pushl
sbb
psubusw
sarl
pop
outsb
cmp
cmp
outsb
imul
cli
cmpsl
fcmovnu
xchg
cwtl
into
test
push
mov
push
mov
mov
addr16
fistpl
jl
data16
cwtl
dec
cld
iret
mov
cmc
jne
or
jmp
and
and
movsl
inc
in
mov
sub
sti
pushf
jmp
imul
aaa
pop
adc
xchg
sahf
push
and
xor
shrl
jnp
addr16
pop
call
push
idiv
or
mov
pop
movsl
aad
and
jbe
incl
push
sub
test
fwait
negb
mov
cltd
push
int
mov
cmp
sub
cmp
add
sbb
pushl
push
adc
lea
jmp
incl
inc
xchg
push
leave
leave
dec
andl
pop
push
pusha
push
aaa
cli
inc
fldenv
iret
mov
jmp
insl
incw
pop
test
jno
add
lret
sub
outsl
mov
ljmp
cli
push
adcb
pop
jecxz
ret
lcall
out
or
dec
rclb
pop
or
ljmp
cmp
outsl
cmc
out
cmp
add
pop
mov
nop
arpl
dec
stos
shll
pop
pop
incl
xorl
jbe
stc
pop
sbb
fwait
pop
jns
dec
xchg
clc
cmp
lods
mov
pop
add
push
test
stos
and
decl
pop
rcll
cmp
fwait
test
push
add
push
ljmp
loope
fs
ds
inc
or
sbb
push
push
idivl
mov
sub
cmpsb
xchg
dec
xchg
fcoms
push
jno
push
jbe
fisubrs
xlat
jne
inc
ret
jge
inc
mov
pop
pop
fcomps
jmp
ss
int3
or
mov
push
ss
cmpsl
data16
negl
fsubl
cmpsb
xor
jmp
mov
fs
scas
mov
fistps
mov
xchg
cmp
xchg
sti
fcomps
ljmp
jge
xchg
ljmp
pop
xchg
cmp
push
ja
pop
cld
decl
mov
ficoml
inc
imul
out
pop
repnz
push
jns
cmpsl
fcos
mov
repz
scas
mov
push
icebp
arpl
xor
mov
xchg
add
scas
or
in
pop
push
mov
inc
cltd
mov
or
xor
cmp
jge
and
xor
lcall
mov
out
add
xchg
hlt
xlat
mov
out
adc
stc
icebp
cvtdq2ps
jg
dec
inc
sbb
nop
push
fcoml
fidivl
pusha
sahf
jbe
mov
loop
push
or
adc
pop
mov
rcrl
mov
int
sub
fidivrs
sar
mov
ds
das
xchg
sub
fcmovne
arpl
mov
jmp
push
mov
adc
ljmp
push
ljmp
xchg
mov
sbb
imulb
faddp
mov
or
push
cmp
and
jns
bound
jp
dec
mov
rorb
pop
sti
mov
clc
into
xchg
cld
call
incb
mull
cmpsb
mull
rorb
cmp
cmc
mov
stc
fiadds
pushl
push
pop
add
js
jo
inc
and
test
jmp
inc
cmp
pop
cmpsb
insl
aad
pop
lret
inc
movsb
mov
rcl
or
fsubs
decl
and
pop
jnp
dec
cmp
cld
int
push
arpl
adc
mov
jmp
mov
sahf
jae
and
pop
jo
pop
scas
xchg
push
call
jb
jnp
ljmp
dec
shlb
incl
call
lock
addr16
insl
data16
jg
orb
incl
ja
addr16
mov
dec
pop
inc
nop
pop
inc
mov
ret
jae
in
addl
sub
mov
pushf
pop
dec
jno
xchg
ret
sub
jb
jg
push
out
js
cltd
cltd
aad
cmpsb
pop
stos
gs
icebp
push
pop
sub
and
addr16
mov
mov
fstpl
adc
lret
sbb
jmp
pop
lods
pop
clc
cmp
mov
rcrb
xor
dec
push
sub
or
lcall
xchg
and
in
in
jns
es
andl
pop
sarb
add
cmc
and
xor
dec
or
sub
mov
inc
rcr
push
mov
clc
test
shlb
pop
pop
outsl
pop
pop
fildll
jo
inc
fimuls
sub
sarb
addb
adc
push
in
out
imul
das
std
incl
inc
and
jb
xor
push
cmpsb
jmp
call
mov
mov
jg
iret
mov
xchg
aam
cmp
adc
sbb
mov
sub
daa
push
mov
mov
mov
or
mov
ret
xchg
push
out
shll
sti
out
sub
decl
jbe
cli
rorb
add
in
rorl
mov
cmc
mov
fsubrs
outsl
jae
ret
push
es
out
daa
xlat
push
mov
arpl
cmp
mov
xor
mov
mov
xor
mov
mov
jmp
decl
aas
xchg
pop
repz
jo
pushw
mov
mov
mov
mov
jmp
xor
push
xchg
fwait
out
jns
stos
push
aad
xchg
es
mov
lcall
loope
sar
xchg
hlt
js
test
jnp
cmp
ljmp
in
push
roll
xor
adc
or
xor
call
dec
sti
repz
mov
push
mov
add
jo
sbb
scas
jg
pop
cmc
lock
and
xchg
das
mov
int3
ficomps
iret
sub
pop
and
ljmp
jbe
cld
shrl
lods
int3
out
loope
jb
jo
sub
xchg
jmp
call
leave
sub
add
imul
mov
pop
push
pusha
popf
push
idiv
pop
cli
lods
shll
pushf
sti
mov
xchg
cmp
in
sub
push
xor
fucomip
inc
call
loope
lods
and
outsl
cmp
call
adc
ljmp
cmpsb
dec
negb
push
dec
ret
test
jg
pushf
js
outsb
xor
jno
pop
fidivrl
sbb
lea
xor
das
vhaddps
push
lock
mov
mov
in
sub
scas
mov
loope
inc
shlb
sar
test
mov
out
xor
adc
int
addl
call
jg
push
fldl
rcrb
jae
push
ror
das
out
sub
clc
ret
pop
jp
lret
or
xchg
mov
call
add
dec
xor
dec
push
mov
in
sahf
jge
and
mov
lcall
sahf
jno
ficomps
icebp
xor
sbb
ljmp
aam
mov
cmp
aam
and
push
roll
push
decl
jge
out
sbb
out
jmp
mov
hlt
cmpl
lods
fistps
nop
ss
lcall
aaa
out
out
cmpsl
adc
cmc
mov
loopne
ret
nop
push
lret
test
jmp
hlt
mov
xor
sub
push
test
jp
dec
cs
pop
cli
test
outsb
push
bound
mov
pop
push
mov
jg
loop
xor
pop
dec
sbb
xchg
cmpsl
inc
sub
pushl
cli
ret
pop
cmp
and
mov
push
mov
cmp
cltd
sbb
sarb
sbb
mov
lret
push
jae
cmpsl
decl
std
push
cmpsl
lds
push
xor
jo
movsl
jo
fcomps
inc
insl
jp
pushl
arpl
lods
std
jae
mov
pop
cmpsl
push
mov
pop
cld
cmp
push
cmp
stos
jne
pop
lock
call
add
or
testb
mov
loop
lea
outsl
lea
cmp
adc
mov
xchg
fwait
movsl
xor
insb
hlt
rorb
scas
fsts
ljmp
cld
andl
dec
adcl
in
out
mov
leave
sub
cs
mov
adc
pop
or
cli
dec
cs
iret
add
jge
ds
test
push
pop
loopne
shl
push
nop
sub
mov
inc
dec
decl
loope
stc
in
neg
and
inc
jp
mov
enter
addr16
fwait
ljmp
sub
lds
cli
mov
inc
fwait
loopne
inc
leave
ret
pop
and
jg
inc
jnp
sub
icebp
cmp
divb
lret
pop
push
pushfw
ret
test
pop
jp
jo
adc
add
movsb
popa
jl
inc
push
ss
test
int3
fstpt
in
sti
dec
mov
shl
inc
hlt
cld
mov
fcmovbe
jge
add
sub
mov
pop
push
pop
fistpl
add
or
js
xor
dec
jge
ljmp
mov
sti
sbb
or
mov
push
mov
or
mov
xor
pop
incl
test
adc
mov
mov
fmuls
lods
xor
scas
rorl
pop
sub
adc
sbb
sub
incl
or
fs
and
flds
or
ljmp
dec
cld
and
mov
pop
sbb
cmp
xor
idivb
sbb
adc
pushl
xor
cmpsb
cld
or
in
and
adc
bnd
pop
orb
xor
arpl
sub
aad
add
jmp
sbb
loope
mov
mov
popf
mov
pop
mov
insb
pushf
and
sub
incl
push
sbb
out
hlt
mov
lcall
mov
ljmp
cld
aad
fmull
addb
push
lods
iret
adc
add
push
stos
clc
out
andl
in
cmp
push
cmc
subb
ret
sti
arpl
push
jns
jp
xor
gs
addb
push
inc
incl
pushl
mov
pop
and
mov
ss
jmp
push
pusha
sahf
jg
ret
shl
xchg
add
outsb
jnp
push
cltd
sti
or
aad
fidivrl
jg
jge
xchg
inc
aad
icebp
pop
repz
movsl
cmp
lods
and
dec
sbb
incl
fwait
cld
jnp
push
js
xchg
dec
push
cmp
push
mov
addl
inc
stos
and
push
jno
fists
mov
add
mov
mov
in
sub
lds
decl
out
addr16
push
pop
pop
test
aas
sbb
jne
out
call
mov
std
popa
rol
or
in
std
pop
pop
adc
jmp
push
mov
icebp
in
inc
pop
sub
pop
popfw
sub
js
inc
mov
enter
jmp
fs
fdivrl
in
push
addr16
inc
gs
mov
incl
push
inc
add
lret
push
stos
aas
cld
sbb
jle
outsl
dec
cmp
ljmp
and
xorl
aaa
mov
call
insl
jae
lcall
popa
ds
sbb
icebp
jmp
rcrl
sbb
clc
pop
loopne
sti
das
push
xor
mov
dec
in
lahf
jmp
mov
jmp
push
enter
shlb
adc
cli
cmp
in
adc
dec
scas
outsl
lock
dec
in
daa
out
adc
mov
call
inc
xor
cmc
add
and
pop
mov
pop
and
or
dec
xor
push
loop
call
popf
jo
subb
xor
mov
lcall
aas
cmp
and
and
stos
imul
pop
or
push
call
in
xorl
stos
call
pushf
dec
xor
xor
inc
adc
jg
or
xlat
push
pop
mov
adc
mov
mov
cmc
inc
inc
adc
inc
xor
pushl
lcall
jno
scas
or
xchg
jg
mov
mov
adcl
decl
cld
bswap
xchg
jbe
inc
push
and
insb
adc
sarl
incl
push
movsl
sbb
and
jg
fiadds
sahf
mov
in
xor
stc
daa
repnz
push
or
aas
hlt
hlt
pop
xchg
jae
sti
sbb
decl
adcb
lret
movsb
add
mov
ret
push
xorb
cmp
push
pop
dec
pushf
outsb
inc
sbb
mov
fs
call
add
push
fcos
ljmp
add
shlb
test
adc
rcll
mov
sub
daa
push
sbb
mov
and
jmp
adc
add
xor
in
lcall
clts
inc
ss
sbb
int
jbe
jns
mov
jle
push
inc
outsb
mov
adc
ja
clc
pushf
mov
xor
xor
jge
or
outsb
pop
imul
in
pushl
data16
fldenv
sbb
andl
into
addb
or
inc
rorb
mov
sub
jg
xchg
or
test
lret
jl
insb
mov
mov
mov
outsb
pop
std
test
repnz
push
test
lods
mov
lcall
mov
iret
ja
into
or
mov
scas
subb
add
mov
push
ret
jnp
aam
or
jl
lods
fnsave
mov
pop
call
push
push
es
cmp
sahf
mov
outsl
iret
inc
leave
jl
mov
adc
cmp
cmpsl
sbb
mov
decl
jle
pop
cmp
enter
lods
xchg
orb
push
rcll
ljmp
sub
push
aam
pusha
out
int3
sbb
adc
cmp
pop
push
ljmp
mul
iret
push
jae
push
sarl
icebp
adc
dec
mov
aaa
das
ljmp
mov
and
add
call
pushf
pmulhuw
fcomps
sub
xor
jl
ljmp
call
aad
push
ljmp
push
xchg
or
adc
lret
dec
jae
inc
jnp
adc
shrl
insb
in
jge
imul
push
fsts
into
mov
dec
xor
push
lods
ljmp
and
and
adc
jmp
cltd
sub
pop
push
leave
iret
ret
decl
movsb
es
lods
jle
adc
arpl
jg
fwait
aas
in
in
aam
adcb
pushl
sub
pop
insb
lret
imul
stos
data16
incl
add
push
sub
in
hlt
jne
pop
xlat
cld
ret
jg
mov
test
bts
loope
and
cli
jo
mov
outsl
jne
data16
adc
movsb
inc
lds
sub
mov
or
jg
fists
jge
insl
adc
out
push
mov
lea
fildll
mov
scas
int
shlb
mov
shll
xor
shlb
and
xchg
and
lods
insb
add
idiv
pushl
hlt
mov
fnstcw
xchg
mov
mov
data16
dec
mov
dec
call
cli
imulb
cmp
push
pusha
sbb
int3
and
and
fnstsw
or
addr16
mov
pop
pop
mov
push
sar
out
sti
inc
mov
rcrb
fidivs
dec
mov
jg
add
pop
sub
je
adc
lods
push
and
xchg
or
inc
jns
mov
adc
adc
popf
adc
test
call
or
mov
mov
rclb
and
lret
mov
pop
adc
jp
movsl
filds
andl
scas
sbb
decl
sbb
lds
push
pop
sub
push
lock
call
lds
pop
pop
mov
bound
push
push
pop
sbb
and
sbbl
or
fdivs
push
and
push
push
test
push
mov
mov
movq
fnstsw
push
stc
cmp
std
fstpl
sbb
and
sbb
inc
push
fimull
xchg
mull
xor
imul
outsb
lds
xchg
enter
ret
outsl
icebp
or
std
int
aaa
or
lcall
lock
subl
lea
popf
pop
out
jl
xor
mov
inc
mov
push
inc
push
aad
lcall
in
adc
pop
nop
dec
add
xor
imul
mov
in
cmpsl
test
mov
add
mov
jge
add
ljmp
test
lret
xlat
clc
adc
sarb
pop
add
xchg
out
adc
jae
inc
xchg
sti
push
cmp
test
popa
mov
add
inc
jg
mov
push
cmpsl
xchg
push
pop
sbb
lds
fiaddl
fstpl
je
inc
sti
icebp
clc
pop
xchg
sub
mov
icebp
adc
jg
inc
xor
in
les
mov
test
lock
loop
push
es
jg
cmp
jnp
in
mov
fidivrs
or
arpl
fisubrs
ljmp
mov
loopne
loopne
mov
xchg
or
pop
cld
jmp
jae
mov
lcall
fucomip
decl
sbbb
stos
mov
mov
sub
pop
test
inc
adc
clc
dec
fs
call
lock
pop
call
mov
lret
jmp
cmp
sub
cld
mov
stc
or
cs
movsl
test
dec
aaa
push
dec
mov
push
js
dec
fcompl
xorb
sbbl
xchg
imul
lods
push
mov
fstps
cmp
insb
inc
sub
mov
mov
push
pop
aad
subb
cld
push
pop
aad
mov
repz
dec
cld
jne
movsl
pop
add
icebp
ret
xchg
int
mov
jg
cmp
add
stos
sbb
loop
xchg
sbb
gs
std
pop
jle
stc
mov
arpl
xchg
mov
pop
pushf
pop
aaa
fwait
mov
xor
push
jnp
jg
call
int
scas
adc
jecxz
mov
mov
shll
cmpsb
stos
das
outsl
cwtl
stos
or
pushl
mov
or
test
faddp
fimuls
jge
addl
and
call
fscale
mov
mov
hlt
push
out
mov
rclb
xor
dec
xor
inc
decl
shll
push
mov
shll
scas
insl
inc
xor
adc
pop
mov
aaa
mov
out
sbb
repnz
int3
sbbb
pop
xor
mov
jp
inc
mov
or
je
aaa
imul
clc
decl
xchg
inc
sbb
xor
aam
lods
inc
inc
pop
das
mov
jg
jmp
jo
in
aad
lahf
cmpsl
adc
addr16
push
loop
jmp
xchg
movsl
call
into
fidivrs
mov
leave
stos
call
nop
adc
divb
sar
mov
mov
push
push
push
cld
in
cli
call
dec
test
xlat
add
jbe
and
loope
push
repz
lcall
mov
mov
adcb
out
iret
xlat
mov
cld
adcb
xlat
test
rcrl
repz
movsl
negl
aad
xchg
iret
int3
lcall
jo
jle
push
pop
sub
add
je
push
mov
add
js
call
shrb
xor
into
sbb
pushf
mov
sbb
jmp
leave
mov
sahf
loop
cmpsb
ret
inc
sub
cmp
push
fprem
lcall
aaa
lods
or
daa
loope
or
mov
sub
outsb
stos
sub
adc
cld
jmp
add
fnstsw
and
push
lea
js
out
pop
mov
xchg
insb
hlt
mov
call
int3
aam
andl
jo
mov
inc
pop
jge
sti
mov
or
dec
leave
cmp
lock
lcall
xor
pop
movl
push
mov
jnp
pop
and
daa
inc
jbe
and
das
pop
shl
xchg
inc
lea
cmp
inc
adc
dec
sbb
xor
out
stc
jbe
stos
sub
test
xchg
jp
or
pushl
incb
jnp
jge
insl
push
movsl
jmp
jg
xchg
jge
cmpsl
int
loope
in
outsl
jge
mov
cmpsb
cli
xchg
push
cvtpi2ps
lods
out
mov
loop
and
jne
jnp
xchg
fdivp
nop
out
sbb
cmp
loopne
pushl
xor
jmp
call
xchg
and
sti
aaa
xor
sar
pushl
jae
jo
fiadds
cwtl
push
lcall
aas
ja
pushf
pop
nop
cmpsl
sub
insb
mov
lods
filds
sbb
xor
inc
xchg
xchg
or
daa
incl
sbb
jmp
cltd
push
sbb
dec
jg
sub
aam
fistl
inc
in
mov
mov
jne
jl
inc
dec
movsb
sbb
cs
push
mov
add
lcall
or
es
lods
push
and
mov
jl
inc
ds
imul
mov
mov
movsb
xchg
cmc
sub
jno
sub
mov
jl
arpl
std
lahf
and
mov
pop
imul
sub
push
jmp
jb
push
leave
xchg
cmp
jg
inc
and
xor
push
insb
xchg
mov
inc
lods
dec
stos
lcall
cmpsl
dec
mov
loopne
push
popf
stos
mov
fiaddl
push
ljmp
jo
imul
popf
add
sahf
jne
xor
imul
mov
gs
dec
or
add
icebp
mov
mov
jg
decl
sbb
int3
test
mov
nop
jnp
inc
fisubrs
repz
lods
nop
lahf
call
ret
int3
inc
loopne
in
pop
adc
std
lock
movsl
jle
sbb
and
xchg
mov
shrb
mov
outsb
xchg
sub
fcom
bound
stos
rcrb
or
add
jecxz
mov
pop
inc
daa
mov
cmpsb
fisubs
cmp
mov
push
jbe
mov
xchg
clc
movsb
pop
sahf
mov
jmp
mov
xchg
shlb
pushl
dec
ja
jbe
rolb
scas
ljmp
pop
xchg
inc
lcall
cmp
ret
pop
lcall
or
mov
clc
mov
lcall
call
push
cmp
fiaddl
dec
scas
mov
xchg
cld
mov
and
call
call
mov
jle
mov
sbb
jo
call
test
push
stos
nop
dec
xor
mov
ds
das
cmc
push
mov
stos
or
enter
jnp
out
sahf
insl
cmc
sbb
push
shll
lret
mov
and
cld
movsl
jno
or
mov
hlt
jmp
pop
fdivp
mov
mov
in
sub
xorl
ljmp
adc
lcall
outsl
in
clc
loop
bound
test
repnz
jmp
loope
movsb
test
inc
sbb
sub
and
insb
push
std
jb
decl
mov
aas
outsl
mov
stos
mov
lds
aaa
decb
add
gs
lods
jecxz
loopne
icebp
js
fsubrl
pushl
sahf
dec
or
sub
sarl
sbb
mov
jge
mov
int3
clc
decl
out
out
xchg
lcall
ret
cmp
inc
addb
pop
add
fidivrs
lret
add
call
xlat
lret
mov
inc
xchg
ss
cmp
loopne
mov
add
rcll
mov
and
ret
dec
leave
loop
sahf
repnz
cmp
inc
jle
decl
pop
es
or
lock
inc
fimull
cltd
addl
outsb
sub
rorl
mov
jb
jmp
inc
or
mov
lds
add
data16
pushl
stc
adc
idiv
movsl
or
js,pt
loopne
push
rorb
pop
ror
hlt
pop
cli
push
xor
les
xor
ret
rorb
dec
dec
mov
das
xchg
cli
xor
lahf
xchg
in
sbbl
adc
test
push
ljmp
add
sbb
inc
pushl
clc
fldenv
loop
xor
mov
test
into
popa
pop
sub
jg
popa
outsl
dec
arpl
sub
sbb
dec
cmp
insb
jecxz
and
mov
xor
sub
add
fldt
dec
cmp
ja
daa
lcall
cld
pushf
add
iret
movb
ja
sub
and
popa
push
dec
inc
push
jo
jmp
adc
sar
js
xor
stos
or
sbb
push
sbb
cmc
adc
mov
push
mov
xchg
sbb
ffreep
pop
sbb
and
dec
cld
jg
adcl
xchg
insb
fildll
lds
je
mov
lcall
jmp
decl
mov
leave
ss
mov
mov
xchg
pop
xlat
sub
in
cmp
pushl
je
subl
pusha
sub
ljmp
pop
or
mov
gs
pop
sti
mov
stc
inc
js
or
fcomip
sbb
push
outsl
sahf
push
test
or
cmc
mov
jo
mov
push
and
inc
adc
inc
inc
arpl
pop
pop
mov
xor
cmp
cld
inc
movsl
jae
call
xorl
loop
lock
mov
popa
insl
insb
shr
cmp
orb
div
pop
pushl
bswap
xchg
and
or
xor
das
pop
inc
xchg
cli
aaa
cs
fstps
insb
imul
lds
fdivr
cmpsl
xlat
push
pop
and
push
shl
jno
mov
mov
movsl
mov
rcrl
lret
cld
aaa
movsb
movl
push
jo
mov
sarb
xchg
loop
mov
xlat
jle
ljmp
pop
push
leave
int
dec
icebp
or
prefetch
mov
pop
pop
cli
das
pop
testb
fbld
sub
je
sahf
sbb
popa
jns
push
cmp
fwait
je
pop
dec
or
xchg
test
mov
inc
fistl
out
cwtl
or
call
fwait
jp
loop
incl
dec
or
les
bound
sub
add
inc
pop
sar
mov
mov
stc
popa
mov
and
ret
dec
jmp
js
xchg
push
nop
mov
std
cmp
inc
jae
fsubp
or
es
cli
ljmp
sbb
lds
cmp
arpl
and
lcall
mov
out
pop
rolb
mov
xchg
and
sub
pushl
negl
xchg
int3
push
mov
loope
lods
cmc
dec
add
cmpb
mov
test
add
in
push
push
out
adc
lcall
stos
dec
jne
cmc
and
mov
test
mov
cmpsb
hlt
ja
lcall
ljmp
sbb
decl
ljmp
std
and
in
pop
pop
dec
xchg
push
into
pop
adc
idiv
movsl
push
loope
xchg
ret
jg
xor
je
arpl
mov
or
push
jb
push
adc
sar
jp
jg
shrl
mov
fxch
fisttpll
jg
pop
lcall
icebp
mov
leave
movsl
and
lahf
and
stos
lahf
inc
cmp
mov
sbb
add
xchg
into
ds
cwtl
cmc
mov
pop
movsl
fidivs
jae
jae
cmp
jg
push
adc
push
inc
pop
movsl
popa
jo
es
loopne
rcll
xchg
jp
stos
pop
jle
push
clc
xchg
shrd
lcall
movsb
push
cmp
or
sub
enter
enter
bound
xor
call
and
add
outsb
adc
add
inc
mov
push
aas
sbb
pop
add
ja
sub
out
in
push
sar
decl
cmp
add
lock
lea
inc
mov
adc
jmp
mov
jl
call
std
fcomps
dec
mov
adcb
ljmp
rcr
adc
popa
adc
cmp
decl
test
repnz
xchg
xchg
jl
fisttps
fsubr
or
outsl
fisttpll
pushl
fists
js
cmpl
xlat
inc
push
cltd
jmp
iret
cwtl
pop
jnp
jmp
ds
inc
lds
mov
addr16
xor
mov
mov
adc
lgs
jecxz
pop
add
sbb
movsb
add
cmp
xor
push
repz
data16
decl
out
movsb
sti
shrb
popf
xor
mov
jmp
ljmp
mul
cmp
push
hlt
pminsw
dec
ret
sarl
jecxz
clc
ljmp
push
mov
roll
into
sbb
ret
jns
adc
addb
cli
pop
std
pop
jp
adc
push
test
clc
mov
sbb
ret
sbb
or
cmpb
push
or
das
mov
fistps
insl
iret
imul
lea
pusha
sbb
mov
jg
clc
adc
mov
cmp
jg
dec
jno
shll
mov
jg
lahf
cwtl
into
push
rol
outsb
pop
aad
or
sahf
add
ss
and
xor
pop
push
fs
je
test
icebp
pop
imul
push
daa
mov
in
addr16
add
cmp
sub
push
inc
xchg
scas
mov
popf
lret
sub
push
xchg
mov
xchg
xor
adcl
cmp
movsb
mov
jg
inc
and
aam
xchg
push
ja
lods
aas
add
mov
mov
dec
push
or
mov
or
popf
push
popa
lods
shr
adc
sub
add
sub
test
inc
inc
out
ljmp
lcall
fdivl
push
mulb
cmc
fcoms
mov
and
leave
cmp
and
dec
cld
ljmp
jo
lret
adc
shlb
add
roll
incl
clc
xor
cmpsl
pop
mov
or
clc
sub
sbb
mov
xchg
out
xchg
xor
mov
mov
xchg
cmp
orb
outsb
pop
jge
test
int3
popa
dec
std
and
test
lods
fcmovbe
dec
std
ljmp
pushf
in
aam
icebp
pusha
aaa
mov
movsl
out
fs
inc
xchg
addr16
pusha
jnp
sub
sbb
js
ficompl
mov
pop
subl
addl
jp
outsl
mov
decl
pop
test
xchg
push
in
rcll
inc
test
decl
ds
jo
push
push
inc
cwtl
mov
fs
call
aam
or
jge
xchg
cmp
test
jnp
xchg
jns
jo
call
mov
jnp
sub
lods
les
lcall
mov
jle
sbb
lds
cmovae
and
push
mov
call
lods
dec
adc
mov
pop
js
jecxz
mov
push
loope
pop
jge
cmp
cld
scas
inc
out
addr16
call
int
setno
lret
jbe
and
lods
jge
scas
adc
mov
jmp
jecxz
or
fwait
mov
stos
stc
adc
jb
fwait
xchg
jmp
mov
sub
adc
aaa
nop
dec
inc
mov
push
mov
xor
movsl
cltd
xor
push
xabort
or
inc
decb
aad
dec
pop
sub
mov
movsb
mov
loope
fbld
sub
leave
add
pop
out
repz
mov
xor
lahf
sub
ljmp
sub
aam
inc
mov
ret
xor
lret
cld
ret
ret
or
mov
ss
dec
xlat
gs
imul
xchg
scas
pushf
adc
out
popa
rclb
xlat
arpl
mov
lcall
scas
cmp
adc
sub
mov
push
int
and
cmpsl
and
mov
and
adc
cmp
pop
push
mov
cmpsb
scas
xchg
dec
loopne
xchg
pop
mov
shrb
mov
mov
imul
cs
or
das
jne
mov
sbb
into
or
clc
in
call
and
ror
std
and
sti
sub
lods
add
add
jae
decl
sub
inc
popf
cmp
pop
mov
xor
dec
fwait
add
mov
xor
test
jne
into
sbb
dec
fnstsw
push
jg
in
cmpsl
dec
lret
cmp
sbb
fwait
xchg
fimuls
imul
push
jp
cli
outsl
lock
call
push
les
or
and
rcrb
cmp
decl
cld
loope
push
sbb
inc
int3
orl
shl
loope
xor
fwait
cld
jg
jmp
pop
jg
or
mov
mov
add
out
fst
lods
test
mov
or
aas
pop
xchg
cmp
inc
popf
lods
fdivrl
scas
hlt
mov
subl
pop
fcomps
push
jmp
jae
dec
cmp
add
lcall
test
call
ljmp
enter
pop
push
add
cld
std
lcall
xor
adc
cli
stos
push
insb
rcrl
mov
out
sbb
lcall
fdivrl
sbb
pop
add
xor
cmpsl
mov
dec
jnp
fsubl
test
pop
outsl
push
mov
sub
dec
inc
iret
decl
mov
arpl
dec
out
mov
in
shrl
xor
call
bound
sub
jae
data16
mulb
jns
cs
fistps
inc
mov
push
cmpsb
push
shrl
xchg
fldl
jl
xchg
lods
or
es
outsb
push
xchg
xorb
jbe
xchg
jae
mov
mov
or
incl
xor
pusha
adc
sti
mov
popa
fsubs
mov
cmpsl
jl
std
xchg
mov
js
adc
sahf
push
pusha
mulb
pushl
push
gs
dec
inc
call
outsb
andl
adc
inc
shl
cli
inc
rcrl
mov
inc
scas
insb
push
incl
adc
mov
adcb
dec
fidivrl
and
pop
in
cmp
decl
inc
lock
push
pop
push
mov
add
jnp
sbb
adc
movsb
and
or
fucomp
testb
xor
sar
jg
cmp
fldlg2
loope
fildll
push
popa
adc
or
gs
cmc
lods
mov
test
adc
add
out
sbb
jg
movsb
ljmp
dec
or
sbb
pop
adcb
sbb
loop
mov
cltd
les
sub
std
call
mov
push
and
aas
into
mov
sub
sarl
push
outsl
insl
jbe
pop
push
mov
add
pushl
scas
add
cmp
lahf
and
xchg
enter
xchg
jns
or
xor
jg
xlat
mov
adc
jnp
mov
xor
lcall
sbb
aaa
sbb
fiaddl
push
dec
sbb
and
ret
inc
mov
cld
inc
sub
out
sbb
sub
dec
iret
xorl
lcall
inc
cmc
in
rcl
in
adcb
jb
or
push
shrl
dec
sub
push
or
fnsave
adc
bound
sbb
or
xor
dec
stos
icebp
jne
dec
test
decl
aaa
icebp
in
hlt
sub
xchg
nop
xchg
and
jae
cmp
pop
or
ds
jg
jmp
pop
xor
xor
sbb
test
sar
adc
mov
stc
pop
xor
lcall
sub
movsb
xor
inc
xchg
rol
cmp
dec
cmpsl
dec
and
stos
lods
lcall
sub
sbb
loop
clc
movsb
push
push
mov
push
mov
xor
push
cs
mov
pop
bnd
mov
dec
mov
dec
inc
out
inc
stc
jo
fstl
adc
sub
jo
test
dec
push
or
sub
call
dec
fwait
sbb
push
push
mov
mov
mov
shrb
lods
pop
rorb
fidivrs
and
add
and
clc
sbb
or
lcall
jmp
mov
fnsave
test
add
mov
lcall
shlb
adc
fists
jmp
jl
jo
push
xchg
mov
jnp
mov
stos
cmp
cmp
push
jnp
sub
or
addr16
jmp
jmp
ds
fs
cmp
outsb
insb
insb
inc
mov
cmpsb
and
jl
inc
icebp
cmp
xor
jmp
inc
cwtl
cmp
cmp
inc
push
imul
getsec
hlt
sbb
jns
mov
fcomi
jmp
adc
dec
inc
loop
xchg
xchg
cli
stc
cmp
push
jno
fisubl
xchg
jmp
xchg
addr16
jb
mov
mov
lcall
cld
decl
jecxz
shlb
addr16
jne
int
test
mov
dec
scas
push
aas
inc
dec
loop
fstpt
ss
add
cli
xchg
inc
add
pop
sbbl
push
xchg
cmp
outsb
out
mov
arpl
jne
scas
pop
ss
fld1
jb
aaa
mov
outsb
mov
popa
rep
sbb
cmp
cmp
and
fidivl
out
or
and
mov
sub
ret
jmp
mov
dec
test
add
mov
ret
cmp
sbb
inc
frstor
pop
cmpb
mov
clc
das
bnd
jne
or
in
and
pop
mov
call
dec
push
jo
cs
ljmp
repz
push
sub
mov
ljmp
stos
dec
mov
pop
pop
cmp
jns
pop
fldenv
clc
mov
test
ljmp
call
xorl
ds
aam
adc
add
jb
jmp
pop
sub
mov
add
daa
mov
adc
test
cli
ljmp
icebp
fdivs
ficompl
mov
rolb
cmp
jb
les
dec
pop
jge
inc
jnp
pop
cmp
fwait
dec
test
xchg
adc
test
push
push
adcb
mov
arpl
xchg
xchg
hlt
loop
test
jg
add
mov
and
stos
cld
push
dec
and
aad
pop
loopne
aad
repz
cmp
aad
pop
movsl
sbb
inc
cmp
push
int3
pop
lret
aam
sbb
or
mov
inc
xchg
out
jne
rolb
inc
in
mov
out
aaa
and
jmp
jmp
cmpb
fcmovnu
push
test
les
popf
pusha
stos
push
xor
jg
lock
out
pop
test
mov
pushl
xchg
mov
into
cwtl
icebp
outsb
std
aad
stos
dec
ss
mov
or
stc
cli
pusha
mov
lahf
inc
push
pop
adc
jb
mov
aaa
push
lea
fwait
jmp
mov
inc
and
std
out
out
sub
lret
inc
inc
dec
add
xchg
js
pushf
adc
roll
shr
add
mov
call
fidivl
sub
mov
sub
adc
push
ss
lods
mov
incl
addr16
and
into
popa
sbb
cli
fcomip
aam
push
dec
and
push
jnp
jns
fstl
decl
test
loopne
inc
push
mov
pop
and
cli
sub
pop
xchg
test
repz
call
dec
scas
xchg
bound
je
int
push
cmp
shlb
clc
jmp
icebp
mov
adcl
adc
insl
pop
or
lcall
push
aam
popl
pop
dec
inc
push
inc
xlat
xlat
cmp
pusha
sub
jge
call
jg
movb
lods
int
inc
daa
int
add
mov
das
std
call
xchg
inc
rcll
dec
lds
fucomi
ret
pushl
daa
push
pop
push
sub
data16
call
xchg
jg
movsl
pop
testb
mov
jl
into
int3
mov
loop,pt
std
movsl
incb
add
mov
adc
mov
out
outsl
xchg
icebp
xchg
imul
fbld
loop
test
sub
shll
adc
mov
sbb
xor
or
sbb
ret
test
in
push
aaa
test
adc
daa
daa
mov
lea
pop
into
push
sbb
outsl
ljmp
inc
lcall
and
dec
mov
lcall
mov
adc
enter
dec
pop
mov
inc
and
push
mov
or
addr16
cmp
xor
outsb
movsb
add
jmp
xor
lahf
push
mov
push
loopne
popf
mov
sbb
and
ss
and
fadds
or
call
stc
push
bound
movsl
pop
jg
and
xor
mov
jle
dec
popa
sub
sbb
cld
mov
push
inc
xor
call
out
pcmpgtw
aad
hlt
outsl
cli
or
aas
test
shl
mov
jae
call
adc
add
add
faddl
iret
test
imul
jmp
and
gs
inc
ret
xchg
popf
out
pop
xchg
or
mov
push
stos
adc
mov
rcll
fs
in
lahf
int3
push
imul
inc
and
dec
incl
adc
pop
pop
mov
mov
xchg
mov
mov
aaa
inc
jecxz
call
cli
nop
dec
push
xchg
mov
js
idivb
jg
jbe
gs
ja
fisubrl
push
std
pop
xchg
push
pop
xor
lods
xlat
popa
dec
out
decl
lock
leave
xor
shll
lea
shrb
jnp
test
pop
pop
mov
mov
les
adc
pop
cmc
imul
mov
pop
add
pushl
or
xor
xor
cmp
pop
stos
jno,pt
subb
xchg
mov
sub
lcall
or
sub
dec
imul
push
gs
imul
jno
scas
icebp
test
outsl
mov
fistpll
push
mov
lcall
jp
in
bound
xor
out
out
out
inc
cmp
fisubs
sahf
sub
mov
stos
sar
incl
lock
add
pop
mov
sti
test
dec
cmp
movsl
push
mov
jb
in
inc
aas
jp
jg
sbb
ss
les
jae
pcmpeqd
out
enter
adc
push
push
nop
jle
xchg
mov
std
lcall
cmp
jo
jbe
dec
lea
lea
shll
ljmp
adc
je
mov
pushf
add
jle
mov
dec
mov
mov
lcall
out
mov
das
mov
cli
push
leave
out
or
sbb
dec
cwtl
out
pop
in
mov
lock
xor
push
shlb
lcall
lcall
mov
dec
push
push
dec
xchg
stc
fists
sbb
sub
fldenv
ror
or
jg
scas
mov
and
or
push
or
cmc
fsts
add
sarl
es
test
imul
jge
mov
xchg
es
fucomip
pushl
int
xchg
mov
xchg
push
fcmovb
cmp
aad
mov
inc
decl
std
enter
movsb
pop
mov
out
xchg
xor
and
rorb
sahf
inc
es
inc
cli
push
into
lahf
into
jo
mov
fsubp
dec
int
repnz
jb
das
cld
cmp
pop
jge
ret
or
fs
push
mov
jge
mov
cli
pushl
loopne
rol
test
jno
sbb
xor
cmpsl
jmp
cmc
inc
lods
adc
cs
add
sub
insl
mov
out
mov
mov
inc
outsl
cmc
sbb
enter
mov
push
leave
xor
push
and
arpl
lcall
addb
cli
jge
repnz
in
xchg
clc
mov
decl
jbe
dec
imul
or
push
cmp
movsb
test
xor
sbb
or
mov
inc
or
leave
push
sub
pusha
lods
jno
xchg
mov
lcall
ret
add
ja
imul
lods
pop
mov
popf
sbb
into
xor
outsl
cld
call
je
popf
dec
subl
daa
cmpsl
lods
je
dec
out
mov
pop
loop
outsl
outsl
pop
and
imul
xchg
jbe
js
cs
fists
pop
or
lea
cmp
in
das
loope
jge,pn
test
add
xchg
int3
add
dec
sub
imul
dec
jmp
pushl
inc
cld
adc
ss
xchg
cmpsb
test
jb
jnp
sub
add
mov
jg
dec
xchg
push
and
bnd
cld
add
xlat
mov
or
stos
es
jg
push
sbb
rep
mov
or
adc
and
jb
incl
decl
pop
test
inc
xor
call
add
insl
ds
dec
inc
aaa
pop
jl
and
cmpsl
test
fistpll
sub
clc
icebp
stos
xchg
mov
ljmp
push
hlt
mov
mov
push
fistpll
inc
loop
xchg
cmp
pop
add
outsb
xor
out
sub
pop
ljmp
pop
sti
jb
loope
pop
add
jecxz
inc
imul
push
fnstenv
mov
mov
jp
test
cli
mov
jmp
jo
xor
dec
lock
jp
mov
mov
push
in
xor
adc
xor
mov
sub
in
or
cmp
inc
incl
call
and
or
inc
fwait
pop
xor
pop
jbe
dec
jmp
mov
ljmp
inc
mov
repnz
scas
incl
jl
pop
jo
mov
xlat
mov
test
pop
mov
dec
xchg
sahf
inc
sub
pop
add
test
jae
fsubs
popa
push
mov
ds
and
ljmp
sar
repnz
sbb
push
xchg
push
inc
popa
pop
sub
js
loope
push
sar
push
xchg
arpl
lods
mov
dec
leave
lahf
pop
sub
xchg
mov
push
jg
sbb
in
stos
int
jg
and
sbb
mov
and
ljmp
outsl
outsb
sub
test
fs
jge
cmp
fnstsw
jno
out
insl
dec
ret
sub
decl
xchg
inc
sti
repz
sub
sbb
pop
adc
nop
ds
jb
addr16
jg
outsl
cmc
mov
xor
push
or
fadd
outsl
hlt
jmp
out
xlat
lahf
dec
test
ds
jnp
int3
js
mov
cmp
dec
inc
ljmp
jmp
sbb
cmpb
jg
mov
inc
push
cmp
scas
xchg
lods
sub
cld
lods
mov
mov
cmp
jae
push
xor
adc
test
mov
jg
mov
out
sti
pop
or
dec
fwait
sbb
subl
movsb
repz
mov
loop
mov
mov
sub
mov
repz
and
call
ljmp
dec
insb
push
mov
fcomps
jge
je
sbbl
inc
stc
test
ljmp
pushl
subl
cli
aas
fwait
add
cmp
push
mov
fwait
or
mov
cmp
cmc
inc
lods
add
data16
ja
loopne
daa
pop
in
test
sahf
cmc
dec
and
mov
test
cmpps
outsl
sub
or
les
cli
ficoms
dec
fs
in
push
loope
insl
push
xchg
clc
out
cltd
int3
push
std
cmp
nop
mov
mov
or
mov
or
inc
jmp
in
arpl
mov
push
pop
or
decl
flds
loope
sub
mov
dec
or
icebp
stc
in
jg
dec
data16
mov
insl
inc
in
loope
xchg
mov
push
pop
sub
sub
loope
test
mulb
push
out
jmp
aam
jo
push
sbbl
popa
jle
jbe
imulb
dec
sub
incl
sbb
setb
aad
or
mov
aad
sbb
dec
adc
mov
data16
jecxz
dec
fildll
dec
sbb
mov
cmp
call
mov
push
les
fdivrl
test
pop
ljmp
mov
fstpt
fisttps
jp
cmpsb
mov
mov
shlb
or
ss
nop
pushl
mov
xor
xlat
repnz
fimuls
xchg
xlat
fnstcw
xchg
mov
inc
xchg
insb
incl
inc
les
pmullw
jl
mov
pop
sub
and
ljmp
outsl
xor
pop
loop
xor
or
imul
incl
jg
jecxz
mov
sub
push
in
stc
cs
sahf
push
mov
nop
incl
lcall
stc
enter
mov
stos
sub
sbbb
fsubl
fiadds
mov
rcrb
mov
and
sbb
leave
sti
mov
inc
fcoml
jmp
fidivrs
and
test
pushl
cmc
loope
jmp
fnsave
mov
hlt
mov
sub
sti
outsl
inc
jg
pop
push
jae
pop
sti
outsl
inc
mov
xor
subl
cmp
dec
call
or
adc
inc
cs
std
and
repnz
jns
pushf
mov
das
jg
jmp
adc
and
dec
jle
fisttpl
ja
lret
in
fucomp
inc
mov
jp
arpl
adc
cmp
jne
jmp
add
or
xchg
aas
in
mov
mov
xor
adc
test
fs
mov
pop
push
cmp
jl
mov
out
je
or
popf
mov
lcall
rcrl
xlat
jb
push
inc
dec
sarb
ret
jae
pushl
pop
push
lods
inc
mov
outsl
cmc
jg
loop
jae
test
pop
jg
dec
mov
mull
push
dec
mov
ja
inc
js
or
mov
movl
imul
push
adc
pop
jns
xor
add
mov
lcall
jmp
shrl
ret
lcall
sub
jg
dec
dec
ret
jne
mov
xchg
shlb
pushl
dec
mov
and
icebp
aas
decb
pop
xchg
mov
sbb
jmp
xlat
mov
cmpsb
popl
jns
mov
ror
push
xchg
adc
jg
call
out
dec
jmp
roll
mov
sbb
decl
jp
pop
jne
test
adc
ret
ljmp
inc
and
mov
push
add
mov
dec
mov
fcoms
fmull
hlt
and
cmpsl
outsl
push
out
push
ljmp
cmc
decl
lret
into
dec
mov
movsb
mov
jmp
mov
pop
ljmp
lahf
mov
push
xchg
cmp
add
fistl
je
mov
pusha
lahf
inc
out
push
icebp
js
jbe
sar
mov
popf
dec
incb
sbb
and
stos
add
cs
incl
iret
in
xor
mov
pop
call
icebp
test
lret
xchg
and
push
ljmp
mov
xchg
jb
loopne
mov
incl
pushl
cld
jge
jg
mov
pop
inc
mov
pushf
sbb
incb
aaa
clc
in
jmp
mov
xchg
adc
push
aas
leave
fcomps
pop
lcall
inc
or
push
mov
loop
or
push
cmpsl
push
mov
pop
call
shll
push
pop
call
lock
adc
mov
sbb
movsl
pop
pushf
stc
adc
cli
jmp
inc
incl
cmp
mov
jbe
imul
leave
cwtl
add
sbb
outsl
add
ss
push
rcrb
jg
jmp
nop
sbb
imul
or
jne
jge
dec
push
pop
lcall
lcall
cld
fildll
fnstsw
cmpsl
fistl
sbb
or
rcrb
mov
mov
rolb
sbb
inc
xchg
das
fsin
pop
mov
xchg
mov
sahf
or
loopne
cmpsb
ljmp
mov
lods
mov
movsl
icebp
mov
ljmp
out
je
lods
xor
pop
movsb
mov
sbb
cmp
jg
mov
sub
aaa
inc
mov
ljmp
sti
fistpl
jl
mov
test
xchg
sub
popf
add
xchg
push
rcrl
pop
add
daa
push
mov
mov
xor
lahf
popa
pop
dec
push
or
dec
lods
pop
mov
fnstsw
incl
outsb
sahf
sti
jnp
cwtl
cmp
test
leave
add
xchg
cli
incl
and
stos
pop
iret
jl
into
faddl
sbb
in
mov
hlt
inc
out
sub
test
call
push
jbe
inc
pop
pop
sub
fistl
loop
in
ret
andl
rcr
cwtl
cmp
push
lock
adc
mov
fdivr
test
rclb
xchg
push
scas
or
in
jae
xchg
cmpsl
xchg
decl
pop
xchg
in
fisubrl
mov
mov
pop
div
pusha
nop
int3
jbe
out
push
call
xchg
pop
pop
stos
cmc
pop
leave
sahf
outsl
arpl
jns
push
add
pop
pop
loopne
adc
sub
inc
add
mov
enter
aas
stos
ljmp
int
aad
cmp
sub
mov
int3
in
sbb
idiv
dec
std
decl
push
cmpb
daa
cli
popf
xor
push
bound
jne
hlt
decl
cld
test
ret
ljmp
and
mov
jmp
sub
movsb
scas
divl
clc
dec
sub
mov
ds
push
fcoml
jp
repnz
add
sub
fbld
xchg
fs
mov
mov
scas
pop
out
out
and
das
hlt
jmp
addb
adc
lods
shr
cmpsl
fld
call
test
lcall
mov
imulb
sub
fs
clc
lcall
cmp
out
shrl
fs
sub
xor
js
mov
or
fs
jns
enter
push
leave
in
jae
xor
mov
idiv
call
cmpsb
test
inc
std
xchg
xchg
out
dec
ja,pt
xchg
shrl
pushf
insb
inc
daa
out
jns
mov
sar
mov
and
lea
addb
out
inc
stc
cmp
idivb
jg
or
in
ljmp
daa
or
pop
loopne
call
mov
iret
fcmovnbe
and
sub
mov
cmpb
pop
inc
mov
and
pop
dec
push
fucomp
rcrl
in
mov
outsl
je
outsl
sbb
ljmp
insl
fsts
adc
pop
loopne
inc
in
jns
nop
cmp
jnp
sub
sub
les
mov
call
outsb
fildl
mov
stos
in
aam
aad
pop
mov
mov
repz
sub
mov
xor
pop
dec
dec
movsl
jmp
subl
jnp
test
insb
inc
loop
and
movsl
out
cld
adc
test
xor
dec
adcl
lcall
lods
stos
scas
gs
sbb
nop
dec
pop
aaa
push
push
loopne
call
mov
mov
mov
outsl
mov
lret
mov
jge
repz
pop
fsubs
fucomp
leave
movsl
ljmp
mov
mov
sub
cltd
push
icebp
lods
inc
jge
insl
pop
clc
ljmp
xchg
jecxz
xchg
mov
jne
popa
push
scas
ror
aam
scas
adc
incl
inc
fs
or
test
inc
test
xchg
push
mov
jg
mov
or
xor
xor
mov
sti
inc
jge
pop
ljmp
cmc
adc
push
sub
pop
fcom
orb
push
sub
das
add
sahf
and
xchg
incb
iret
and
loope
sti
cld
xchg
mov
cli
incl
cs
add
cld
jae
cmp
fdivrp
aas
clc
pushl
pop
loop
and
or
pop
loopne
hlt
sub
cmp
xor
mov
lahf
xor
outsl
ficomps
xchg
imul
lcall
or
pop
repz
jecxz
xor
jmp
mov
lret
daa
sub
loope
pop
out
call
das
cld
insb
jno
div
xchg
cmc
inc
jmp
or
cmp
dec
scas
fld
dec
add
mov
pop
out
xlat
push
shl
inc
sub
add
out
popa
mov
ljmp
sbb
jg
cli
dec
mov
arpl
jne
shll
and
mov
jmp
dec
lret
decl
mov
loope
jb
jbe
popa
popa
test
or
das
cld
ljmp
insb
pushf
jno
cmp
jge
mov
adc
sub
push
sbb
call
cmp
push
rcrb
dec
sbb
jle
mov
lds
jns
push
outsl
decl
loope
jne
jle
into
or
pushf
ja
xor
and
sbb
das
out
int
dec
add
in
cmc
out
mov
pop
lock
pusha
xchg
gs
jg
std
cmpsl
sbb
xor
movsl
or
push
jg
incl
out
add
xchg
xor
mov
test
les
loopne
sub
imul
outsl
mov
rcr
push
mov
xchg
xor
cmc
lret
in
mov
push
out
mov
jmp
sub
xchg
insb
xchg
fisttpl
inc
sbb
jge
jmp
push
loop
lods
jae
dec
in
ja
adc
std
add
cltd
sbbb
gs
fbld
mov
mov
inc
jecxz
push
cmp
in
push
sbb
lret
aas
and
movsl
pushl
push
xchg
imulb
das
push
cmp
sbbl
push
cli
push
jmp
cli
mov
sahf
cmp
cwtl
or
sbb
or
stc
pop
nop
jnp
mov
push
adc
addl
jmp
jecxz
call
call
lahf
mov
inc
rolb
in
push
pop
push
leave
xlat
and
idivl
push
pop
add
mov
fbld
sbb
push
rolb
nop
mov
mov
mov
ljmp
push
and
mov
and
jno
sbb
aad
cli
mov
outsl
scas
pop
push
popf
outsl
daa
sbb
aam
mov
mov
xor
fmull
jne
leave
shr
pop
xor
clc
iret
sbb
and
ficompl
incl
lds
cmp
popf
push
and
cmp
inc
scas
mov
pop
inc
cmp
in
jmp
xor
cmc
sti
jl
jl
sarl
jge
cmc
xchg
jnp
cmp
jg
addb
aad
loopne
xlat
inc
movsl
xchg
fidivs
mov
xchg
lcall
dec
pop
iret
ljmp
loopne
orb
testl
pop
sub
pop
jg
mov
inc
mov
dec
and
push
repz
add
fidivrs
push
repnz
lret
popa
cmovle
push
mov
fwait
inc
mov
das
std
add
xchg
cli
nop
into
test
dec
cmc
adc
stc
xchg
fcom
or
and
pop
decl
repz
xchg
sbb
idivl
fisttpll
inc
repnz
sbb
comiss
fsts
addb
outsl
icebp
jmp
fldl
lcall
je
or
adc
decl
add
lret
loopne
cwtl
xchg
mov
cmp
gs
add
rolb
aas
pop
add
call
sub
test
and
push
aas
shrl
sbb
jmp
aaa
lds
mov
enter
mov
out
mov
inc
aad
inc
out
sub
push
in
enter
adc
xchg
jbe
call
loopne
jmp
pop
jge
lret
mov
cmc
push
faddp
xchg
cmp
clc
call
adc
rclb
lods
setp
stos
jmp
out
call
clc
cmp
fcomps
pop
pusha
imul
xchg
mov
hlt
cli
incl
incl
push
add
in
push
adc
fimull
xor
jmp
xchg
scas
add
xchg
hlt
aad
inc
mov
cld
push
mov
ljmp
add
cmp
sbb
push
inc
outsl
xor
or
cmp
push
mov
arpl
push
loope
xlat
popf
mov
xchg
dec
sar
jmp
sub
inc
movsl
mov
jp
add
lods
mov
dec
adc
iret
ss
jmp
inc
pop
sbb
lcall
xor
loope
leave
mov
lock
fiaddl
push
xchg
scas
test
push
cs
dec
sti
dec
pop
mov
clc
call
pop
add
push
adc
ds
outsl
lock
inc
in
mov
mov
popa
out
fstps
xor
jl
or
pop
push
faddl
mov
mov
jecxz
add
fucomip
inc
fadd
push
or
je
cmpb
cld
repz
xor
mov
push
add
fidivrs
add
adc
scas
call
mov
repz
sbb
jmp
loopne
push
lock
loop
mov
mov
std
in
iret
test
mov
repz
mov
ja
sub
incl
jle
pop
pushf
push
mov
or
dec
mov
aaa
hlt
fs
sar
mov
mov
inc
sbb
cmc
inc
lods
daa
pop
xor
xor
mov
mov
test
cmp
cwtl
xchg
pop
shlb
dec
ss
aad
fildll
out
lahf
in
popa
inc
adc
das
hlt
call
ljmp
jp
mov
inc
cmp
mov
call
sar
call
cmc
sub
mov
mov
fistps
dec
negl
dec
popa
ja
sub
pushl
or
jmp
imul
test
scas
lahf
lea
xlat
sub
call
jns
movsb
insl
xchg
jnp
gs
jne
mov
lret
ss
int3
xor
or
xchg
ret
add
scas
cmpsl
add
push
xchg
add
cld
lret
popa
insl
push
sbb
xchg
push
sbb
sub
jmp
je
cmp
mov
ud2
inc
mull
leave
jmp
jnp
fists
lret
jg
shrb
mov
inc
xchg
ss
jnp
push
lahf
adc
mov
rorb
adc
lods
mov
inc
lods
in
movsl
mov
pop
test
mov
fbstp
jge
std
fmul
in
lock
std
xchg
ret
mov
pop
call
decl
imul
or
inc
imul
shrl
inc
jns
and
dec
repnz
mul
in
sbb
lock
pop
loopne
lods
jo
mov
addr16
mov
incl
jo
mov
dec
jb
fsubrs
hlt
dec
or
mov
test
insl
add
push
push
jg
insl
sbb
mov
stos
push
jbe
enter
outsl
adc
sub
test
xor
decl
repnz
pop
pop
enter
cmpsl
movsb
jo
mov
inc
and
pop
push
xchg
test
dec
fisttpll
js
push
xlat
jns
cld
xorb
repnz
mov
repz
fidivs
lods
mov
jae
cmp
mov
into
hlt
js
or
push
cld
mov
decb
ljmp
mov
mov
jbe
adc
sbb
add
mov
outsl
outsl
hlt
pushl
cwtl
iret
int
xor
rcrb
sbb
fs
call
mov
icebp
scas
int3
arpl
enter
xlat
iret
add
or
xor
xchg
aam
push
dec
cmc
call
push
adc
lret
fidivrs
je
mul
xor
ljmp
add
jns
xor
mov
ret
and
mov
adc
jb
and
push
das
mov
cmp
dec
imul
add
adc
outsl
add
call
push
push
mov
inc
push
sbb
jbe
jns
cmpb
mov
decl
inc
mov
xor
pop
in
mov
nop
sbb
cmpl
imul
jmp
xor
or
or
imul
xchg
xchg
mov
ret
mov
pop
mov
sbb
lret
ljmp
test
jl,pt
jns
mov
clc
pop
inc
out
in
mov
leave
pop
aas
xchg
jno
das
icebp
ljmp
fsubrs
in
clc
pop
test
stos
mov
mov
sub
push
add
jge
stc
pop
inc
fcmove
shl
mov
in
fadd
adc
fxam
push
ficompl
mov
gs
mov
inc
dec
dec
and
adc
stos
cltd
jmp
je
addr16
aaa
fwait
movsb
ljmp
inc
daa
mov
sub
sub
jnp
incl
xchg
imul
call
call
mov
mov
and
mov
das
ds
mov
sti
rolb
mov
cmp
xchg
gs
rcl
test
incl
mov
xchg
mov
xor
lods
cltd
setno
jmp
mov
adcl
ret
stos
mov
andl
push
push
enter
pop
pop
sub
push
pop
mov
sti
pop
xor
sbb
xchg
jnp
fwait
daa
xchg
ror
push
call
add
pushf
lcall
push
cmp
int3
pop
imul
jg
inc
fnstsw
dec
mov
mov
and
push
mov
jmp
lahf
sarl
xchg
test
or
jg
mov
fdivs
xor
out
loope
test
pop
inc
ljmp
ljmp
mov
out
jecxz
aad
fcompl
ja
xor
jmp
jmp
mov
adc
ret
pop
xlat
das
jo
sbb
call
adc
push
or
xchg
pop
pop
jo
aam
and
pop
adc
js
cmc
jecxz
iret
fwait
stos
in
cmp
imul
ret
jbe
das
cld
jmp
mov
stos
and
pop
out
mov
enter
mov
in
fisubs
fdivr
inc
jp
inc
mov
test
daa
dec
cmp
fidivrl
mov
iret
push
pop
repz
pop
adc
dec
sub
loop
incl
pop
push
jb
sbbl
xchg
push
push
mov
ljmp
mov
das
sbb
inc
mov
mov
incl
lcall
aam
push
loope
fbld
ret
lcall
cmp
dec
mov
fistpll
nop
shrl
fsubrs
daa
adc
xor
mov
inc
loop
mov
lret
adc
cmp
decl
repnz
inc
xchg
clc
mov
fistps
mov
pop
jge
pop
test
pop
jle
mov
andb
jp
dec
xchg
dec
push
xchg
jmp
lods
push
ret
inc
jg
pushf
fdivs
jecxz
jg
ljmp
fwait
mov
mov
leave
iret
fs
or
add
idiv
adc
adc
fwait
mov
and
push
lock
mov
stos
lods
mov
jge
fwait
push
aad
or
or
js
dec
lea
outsl
hlt
ljmp
xchg
lods
insl
addr16
fildll
outsl
gs
push
mov
scas
jmp
stos
aad
xlat
or
mov
cwtl
lcall
and
sbb
loopne
mulb
sbb
outsl
mov
imul
mov
lcall
sub
bound
jo
inc
jmp
scas
scas
pushl
fildll
aas
sbbb
ja
mov
or
dec
stos
xchg
test
adc
mov
pop
cmp
aaa
mov
rcll
add
aad
xor
cmp
pop
fnstcw
pop
jle
mov
push
xchg
stos
jecxz
out
cmpsb
mov
rcr
sbb
movsl
jle
inc
or
lds
xor
pop
lcall
nop
and
mov
lcall
lea
or
dec
test
lret
and
gs
ret
jmp
xchg
in
ljmp
push
adc
mov
pop
push
sbb
outsb
add
xchg
shrl
mov
inc
or
pusha
call
rcl
sub
ret
mov
movsl
push
lea
int3
pushf
ss
cli
jo
add
add
pop
fisubs
icebp
mov
popf
push
mov
pushf
test
jne
repz
mov
movsl
call
inc
inc
add
xor
push
pusha
bnd
cmp
ljmp
dec
ss
pop
cltd
in
in
xor
mov
jb
adc
ljmp
jne
stc
dec
push
or
ljmp
mov
jl
add
jne
aam
mov
and
das
fdivr
stos
lcall
cmpsl
and
mov
mov
mov
lock
scas
icebp
xchg
clc
jg
iret
mov
movsb
icebp
sbb
inc
sarl
test
jle
pop
mov
dec
or
cmp
sub
adcb
adc
call
pusha
mov
leave
cmpl
pop
mov
fstl
mov
int3
jno
mov
lcall
xor
lcall
stos
es
cmc
pop
cmc
test
mov
lcall
test
xlat
arpl
js
add
out
mov
in
jo
and
ljmp
lock
or
sahf
ja
pusha
inc
jmp
cmc
loop
sbb
cmp
addl
pushl
outsl
pop
lea
loopne
test
adc
sarl
sub
pop
add
cmp
fsub
decl
pop
repnz
jle
arpl
in
and
ss
cmc
mov
test
and
stos
jg
mov
or
jge
notb
movsl
pushl
adc
jg
clc
jmp
divl
and
clc
jg
es
call
jmp
push
shrl
cmp
jae
pop
push
loop
pusha
ret
push
loope
daa
aad
test
addr16
and
cmp
push
enter
xor
rcrb
push
insb
out
sub
aad
and
and
pop
pop
outsb
in
mov
fnstcw
pop
or
lcall
fsin
ljmp
dec
sub
xchg
mov
fistpll
in
xor
mov
jns
movsl
cmpsl
iret
xlat
push
jecxz
inc
in
pop
push
dec
push
mov
call
jle
jge
mov
setns
subl
xor
popl
lcall
add
inc
fsubrl
clc
mov
push
cltd
add
hlt
mov
fbld
lock
jbe
dec
jge
xchg
push
sbb
xchg
dec
or
pushl
inc
and
ss
sar
mov
xlat
pmulhuw
cmp
cvtdq2ps
push
js
cs
mov
test
test
repz
mov
out
xchg
or
mov
push
inc
cmp
cwtl
inc
notb
add
orl
call
roll
cmp
pop
loop
ljmp
outsb
pop
nop
inc
stc
cmpl
lcall
pop
test
fbld
jne
cmp
outsb
ds
mov
push
rcl
hlt
call
inc
mov
push
dec
movsl
cmp
push
lcall
xchg
ffreep
lret
jns
jmp
inc
mov
pop
mov
test
pop
call
dec
xorl
push
mov
xchg
mov
mov
imul
sar
repnz
mov
xorb
xor
add
jecxz
shl
ret
push
int
push
pop
mov
pushl
ficoms
mov
jmp
jecxz
add
xor
dec
pop
jle
imul
aad
rcrl
mov
scas
mov
fmuls
inc
incl
fidivrs
scas
dec
rcrb
cmp
xchg
xor
mov
fcmove
mov
roll
loop
xor
dec
and
cwtl
mov
out
inc
les
fidivrl
dec
lock
sub
jg
jo
mov
mov
out
pop
and
sub
cmp
neg
incl
mov
lcall
adc
mov
pusha
push
leave
cmp
ljmp
lret
mov
aam
or
push
mov
mov
push
sub
ljmp
fwait
dec
mov
sub
push
into
test
mov
adc
sbb
std
lods
decl
out
xchg
adc
jge
add
cmc
xor
dec
or
mov
jne
ror
dec
pop
int
dec
dec
dec
pushl
adc
arpl
std
lods
leave
adc
pop
cmpsl
idiv
hlt
ficompl
inc
nop
xchg
cli
sahf
ljmp
cmpsl
xchg
jge
push
add
stc
xor
pop
icebp
mov
mov
lds
inc
popf
popf
test
stos
lahf
xor
rolb
xor
ljmp
jne
enter
push
dec
xchg
push
fldcw
xlat
cwtl
jo
das
mov
out
push
loop
ds
lcall
in
jg
mov
js
cmp
movsb
and
cmc
pusha
mov
add
fsubs
pushl
sarl
or
test
cmpsb
xchg
test
iret
shlb
addl
inc
testl
cmp
insb
sbb
js
in
roll
push
incb
sub
push
ja
popf
mov
inc
jmp
aad
jnp
call
push
add
testb
adc
inc
scas
test
out
and
inc
jbe
js
test
pop
call
test
cmp
incl
jns
cmp
in
daa
push
mov
cs
enter
sbb
jle
decl
cli
jle
xor
fldcw
lods
pop
push
fisttpll
inc
mov
jne
sub
push
xchg
inc
loopne
push
mov
sub
out
lcall
movsb
push
orb
outsl
xchg
cwtl
sub
rol
sbb
push
xchg
scas
sbb
movsl
pop
jmp
lcall
movb
outsb
insl
dec
adc
testl
inc
das
mov
jge
in
call
push
add
outsb
aas
lahf
shrb
icebp
jno
dec
xchg
out
pop
stc
jb
incl
inc
ds
sti
lahf
in
xchg
push
movsl
fwait
repz
adc
lret
daa
xlat
lcall
lea
xor
inc
les
psraw
loop
incl
popf
jo
cmp
xchg
rcrl
lcall
jns
and
out
mov
inc
dec
cmp
in
lea
aad
xor
fldl
fidivrs
dec
cmp
push
mov
iret
pop
dec
lods
xor
push
je
push
jno
lahf
fisubrl
sbb
lcall
jl
std
fdivrs
pop
mov
out
pop
mov
mov
shll
mov
push
stc
add
xchg
sti
das
mov
addr16
add
inc
aaa
jbe
adc
adc
pop
leave
mov
jmp
mov
lods
test
push
mov
enter
lods
sub
rol
inc
fsts
out
mov
loopne
fcompl
in
mov
push
es
cwtl
cmp
outsl
pushw
cmp
pop
sbbl
clc
incl
in
mov
xlat
rcrl
test
sbb
adc
inc
lret
lcall
decl
bound
inc
lods
sub
in
mov
push
mov
subb
aam
orb
pop
jecxz
int
mov
lock
rorl
fsubs
cld
nopl
or
stos
cmp
inc
into
imul
testb
outsb
sbb
mov
cmp
aad
outsb
sahf
mov
sbb
stos
test
xchg
add
cmc
pop
cmp
xchg
mov
outsl
fs
insl
xor
outsl
adc
cs
call
adc
call
arpl
loopne
jmp
pushl
mov
inc
push
cltd
shlb
scas
jge
push
popf
sub
jg
mov
std
aas
cmpsb
push
daa
lods
push
or
xlat
mov
cli
leave
mov
in
mov
adc
push
pushf
std
les
mov
fiaddl
lahf
inc
dec
cmp
sbb
xchg
or
xchg
add
jg
fildll
pop
outsb
lret
mov
movsl
sbb
call
mov
or
push
ljmp
mov
inc
cltd
jb
jmp
mov
xor
call
mov
dec
pop
aad
ret
insl
xor
iret
adc
push
mov
xchg
std
jmp
lock
jns
jno
cs
xchg
lahf
lea
sbb
aam
fisttps
std
call
mov
push
jns
cmp
sub
dec
pop
imul
clc
lcall
cld
mov
mov
sub
and
js
call
sub
and
pushf
jno
insb
fsubs
mov
dec
pusha
dec
dec
into
nop
xlat
cmp
pop
in
lret
lret
into
dec
sarl
cmp
subb
repz
mov
add
mov
test
mov
ljmp
jg
xchg
sarb
cli
xchg
sbb
test
dec
cmp
fcomps
hlt
mov
sub
mov
scas
and
mov
or
push
repnz
dec
arpl
sbb
jge
shlb
xchg
ljmp
lcall
inc
in
adc
lcall
clc
incl
in
xchg
and
hlt
sub
and
jb
and
lcall
faddl
cmp
in
inc
dec
mov
cltd
push
push
dec
popa
or
ss
jecxz
pop
dec
cmc
xchg
mul
popf
mov
mov
jb
in
in
bound
xor
fcmovbe
cmp
adc
xor
or
outsl
nop
mov
fsubp
pop
sub
pop
test
xchg
mov
incl
or
mov
xor
add
stos
dec
mov
js
pushl
test
inc
push
cmp
subl
lds
iret
lea
repz
sbb
ljmp
mov
inc
addr16
hlt
cmc
or
or
mov
push
sub
push
push
pop
adc
jb
clc
jbe
push
scas
sub
daa
xchg
and
cmpl
arpl
iret
outsb
movsl
dec
sbb
das
jle
ljmp
xorb
repz
das
stos
stos
mov
mov
mov
xchg
cli
mov
pop
xchg
pop
fsubr
aaa
cmp
das
add
mov
rcrb
andb
cmp
scas
lds
inc
pop
adc
popf
aaa
rol
in
sar
sar
fsubl
push
repnz
call
pop
adc
xchg
mov
movsb
decl
push
cwtl
lods
jo
and
pushl
lahf
mov
rcll
or
dec
lcall
test
bnd
int
ret
push
or
les
rcrl
std
outsb
mov
lahf
mov
cmp
outsb
xchg
xchg
and
addl
and
push
mov
fildl
or
das
and
push
cld
loop
pop
clc
xchg
clc
pop
addr16
fwait
cmp
in
decb
repz
cmp
lret
sub
inc
pop
enter
mov
inc
mov
mov
pop
ljmp
fiadds
mov
dec
call
ror
or
xchg
jno
add
pop
xchg
add
outsl
in
add
mov
decl
mov
movsl
lock
gs
mov
mov
leave
xor
out
in
fbstp
clc
mov
add
js
iret
push
jb
insb
jg
fmuls
lods
mov
cmp
fidivl
xor
xchg
pop
xchg
decl
or
push
insb
scas
xchg
repz
test
out
mov
add
jmp
test
fdivrs
sub
adc
sbb
out
in
imul
dec
cs
int3
xor
movsb
data16
jg
call
add
jb
lea
and
or
sbb
pushl
or
mov
mov
lcall
pop
dec
ljmp
lock
mov
shlb
stos
sbb
mov
push
out
jo
mov
cmp
and
aad
xor
ljmp
repz
das
incl
lcall
push
iret
mov
icebp
flds
add
mov
jo
les
add
or
sti
test
hlt
ljmp
adc
divl
cwtl
mov
loopne
mov
clc
xchg
cltd
jecxz
sub
ret
and
mov
lock
cs
sbbb
int3
test
aam
subl
or
xchg
mov
push
outsl
cwtl
adc
daa
arpl
jge
imul
jg
jnp
bound
shll
ud0
mov
mov
xchg
call
cli
call
dec
nop
scas
addl
inc
push
inc
sahf
mov
incl
xchg
into
xor
lret
stos
jge
sub
pop
cmpsb
in
lcall
mov
xchg
lods
mov
std
in
mov
xor
cmc
jg
pop
add
out
cmc
jg
sub
sbb
cmp
ja
push
call
popa
filds
test
andnps
jge
cmp
mov
movsl
decl
lds
push
dec
outsl
outsl
xchg
aaa
les
push
enter
loopne
pop
les
lds
mov
dec
mov
fdivp
lods
add
add
call
sbb
adc
add
add
and
pop
sbb
inc
add
push
pusha
pushf
or
sbb
xor
pushl
nop
aaa
dec
insl
and
mov
arpl
sub
aaa
div
popa
lods
sbb
call
push
rcrl
in
sub
imul
cmp
mov
add
jno
xchg
and
cmp
push
ljmp
addb
sar
popf
stc
lods
repnz
push
lods
inc
call
mov
pop
sbb
mov
xor
jns
cmp
outsb
sarb
and
xchg
xchg
jmp
dec
adc
in
sub
cld
and
xchg
dec
inc
loop
inc
add
pop
out
jnp
pop
mov
jp
xchg
lea
xor
pop
sti
or
and
dec
push
inc
mov
inc
mov
in
gs
cmp
mov
push
xchg
incl
icebp
and
adcb
or
cld
mov
inc
cltd
sub
adc
xchg
lods
pop
js
cmp
xchg
sub
fdivp
mov
call
loop
adc
data16
xor
ljmp
aas
jne
pushl
aaa
dec
pop
aam
push
loope
aad
cld
idivb
dec
loopne
cld
int
scas
insb
sarl
mov
das
hlt
jmp
cmpsl
out
xor
cs
mov
addl
pop
ja
in
call
mov
clc
adc
push
and
pop
or
out
repnz
push
push
sar
jg
push
mov
cmpsb
std
push
lock
sub
sub
mov
ret
jl
inc
lods
into
scas
dec
inc
leave
stos
jl
and
mov
cmpsb
popf
mov
inc
inc
movsb
scas
push
cmpsl
xchg
jle
nop
pop
fldz
daa
mov
incl
jns
add
lea
or
int
test
pop
jle
xor
push
pop
jmp
out
shl
pop
incl
xchg
cmpsl
in
dec
scas
mov
or
int
jg
ljmp
cmp
push
out
aas
in
jl
lret
sub
mov
lods
adc
incl
clc
popf
mov
test
daa
mov
test
lods
jmp
pop
pop
out
xchg
jg
call
out
mov
lods
inc
jge
sub
push
pop
lds
das
cmp
ficoms
sti
cmp
or
mov
pop
adc
out
mov
mov
ljmp
scas
xchg
pop
mov
mov
jp
ja
xchg
cli
xchg
or
lcall
jae
mov
inc
test
repnz
jmp
mov
test
sub
adc
mov
mov
mov
mov
test
test
incl
xchg
lcall
cmpsl
fchs
add
iret
ret
inc
pop
aaa
dec
data16
incl
lcall
into
cs
jns
sbb
adcl
cmp
lods
test
mov
pop
in
dec
hlt
ljmp
pop
mov
jb
xchg
imul
or
mov
hlt
pop
mov
jle
pop
mov
xchg
or
xchg
shll
lahf
jno
push
push
sub
jp
decl
lock
jle
pop
outsb
mov
repz
pop
call
lahf
add
xchg
ja
les
adc
jg
decl
mov
push
loope
mov
lock
rorb
xchg
std
or
jecxz
lcall
lods
shlb
sbb
jbe
dec
shll
xor
push
push
jle
adc
testl
testl
xchg
call
jl
dec
scas
pop
mov
popa
gs
repnz
inc
icebp
repnz
jle
push
xchg
xor
jecxz
pop
add
push
test
rcrl
test
mov
mov
cmp
mov
incl
sbb
or
add
or
cmp
sbb
int3
inc
sar
pushl
mov
fistpll
push
gs
jns
cs
sbb
les
hlt
cmp
sbb
cmp
jb
loopne
sbb
popa
in
enter
jle
and
scas
mov
arpl
cld
xor
mov
jns
mov
add
icebp
scas
cmp
jns
adc
shrb
mov
mov
out
int3
gs
xor
inc
mov
jl
push
pop
push
mov
jle
xor
outsb
ja
fisttpll
sbb
dec
inc
in
ljmp
push
bound
loopne
pop
lret
ret
and
pop
or
lea
mov
lods
shlb
or
movsl
mov
ljmp
nop
movsbl
or
in
clc
add
fst
inc
mov
cmpsl
je
mov
cmp
ret
pop
inc
sub
and
sti
int
pushf
fidivrl
cli
stos
insl
hlt
mov
jle
std
push
pop
clc
sub
adc
xchg
inc
icebp
xchg
sub
addr16
sub
decl
decl
cltd
in
sub
cld
dec
int3
std
add
cmp
mov
and
lods
movsl
cmp
dec
icebp
int
aad
cmc
pushf
cli
mov
ja
cltd
out
rorb
and
lret
mov
sub
test
lock
decl
mov
out
jnp
bound
inc
xchg
scas
dec
or
les
and
leave
clc
jmp
call
cld
and
dec
hlt
iret
push
mov
sbb
cs
xchg
adc
inc
ja
leave
mov
scas
dec
cwtl
sub
call
sbb
inc
pusha
sub
cmc
outsb
pop
xor
push
xchg
push
shl
push
inc
mov
ljmp
jmp
adcl
and
mov
pop
stos
hlt
add
fwait
dec
jl
ret
leave
or
fsubr
fisubl
lds
aaa
mov
jg
adc
in
sub
mov
leave
adc
dec
sti
in
add
lret
std
outsl
cmp
pop
mov
dec
pushf
cmp
leave
jo
mov
in
sub
outsb
mov
rcrl
aas
es
push
and
inc
or
sbb
jg
incl
outsl
enter
pop
sbb
sbb
pop
loop
repnz
lcall
lret
aad
add
jl
pushl
imul
insl
aam
and
adc
aaa
push
mov
aaa
cmc
clc
ss
lahf
jg
pop
pop
and
shll
test
pusha
emms
repz
shlb
add
mov
ljmp
icebp
mov
mov
lods
dec
jbe
arpl
nop
scas
lahf
or
push
sbb
lcall
dec
aam
push
xchg
ds
bound
sub
jne
stos
sar
pushl
push
sbb
jns
cmpsl
push
sub
adc
mov
mov
fistl
push
xchg
mov
int
push
mov
mov
xor
inc
xchg
sbb
add
xchg
xchg
int
rcr
xchg
pop
out
movsl
lcall
outsb
mov
adc
mov
push
andl
rorb
xchg
lcall
popa
adc
andl
sbb
cs
and
cmpb
cs
and
in
out
pop
add
xchg
gs
into
cmpsb
ss
fistpll
add
mov
dec
ret
rorb
jnp
pop
inc
xchg
mov
add
insb
mov
pop
cld
mov
in
push
insl
cmp
add
pop
dec
shlb
cmp
rcrl
js
jg
cmp
es
mov
mov
mov
mov
lock
out
cmp
aad
subb
add
sahf
and
xchg
mov
ss
mov
outsb
xchg
movsl
adc
push
jmp
jne
and
jmp
sbb
negb
inc
icebp
jg
xor
nop
les
in
mov
mov
and
adc
out
mov
lcall
jne
hlt
scas
mov
ficomps
push
daa
outsl
add
stos
sub
loopne
mov
andb
test
ss
lods
add
pusha
pop
push
xchg
fimull
hlt
movsl
mov
add
adc
fdivr
ljmp
aam
out
fnstsw
pop
and
shll
add
popf
fstpl
ja,pn
aas
dec
stos
cmpsl
shlb
xor
mov
add
push
dec
xchg
movsb
mov
movsl
cs
sbb
dec
call
mov
push
jnp
lods
pushf
push
in
ljmp
and
divl
xchg
out
mov
cmp
movsl
ljmp
mov
sbb
adc
test
cmpsb
jmp
movsb
inc
push
rcll
push
aam
cmp
xchg
stos
notb
push
jmp
lods
sub
and
mov
sub
int
dec
pop
pop
stc
dec
das
idiv
ljmp
add
jo
sbbl
je
lea
jmp
adc
aaa
call
cmpb
xchg
lock
mov
mov
or
cmpb
aam
int
mov
add
add
shlb
inc
shll
stc
mov
xchg
adc
pop
xchg
pop
lcall
fildl
push
jp
negl
clc
xchg
clc
xchg
out
sti
xchg
lods
stos
push
fidivl
jp
pushl
fnstcw
mov
cmp
push
sbb
and
push
aaa
inc
mov
enter
mov
cmp
dec
push
sahf
inc
mov
pop
xchg
pop
or
mov
iret
mov
pop
sub
add
loopne
pop
imul
incl
xchg
xchg
inc
push
cmp
dec
or
push
dec
mov
sbb
ljmp
std
fwait
icebp
loop
leave
xchg
push
push
cmc
xlat
loope
or
adcl
insl
push
pop
inc
or
call
aad
hlt
sti
push
xchg
and
pslld
lea
faddl
xor
push
shrl
data16
sub
sti
js
jmp
and
pushf
sti
mov
incl
sbb
inc
outsb
push
andb
ret
add
addr16
or
ljmp
mov
popa
jmp
pop
push
pop
fstp
sub
fistl
mov
ljmp
xlat
sbb
pop
adc
dec
mov
jp
divb
pop
loop
sarb
mov
push
outsl
std
push
lods
jg
loop
or
bound
icebp
inc
loop
outsl
fldcw
jnp
repz
mov
aaa
cwtl
sbb
loop
sbb
xchg
jne
incl
js
add
inc
mov
adc
aam
lods
je
push
ret
cmpsl
imul
push
pcmpgtb
push
sbb
std
incl
hlt
imul
cld
clc
movsl
ficoml
incl
inc
outsb
push
testl
ljmp
popf
xor
test
push
or
push
mov
dec
jg
jmp
jg
xor
xorl
call
mov
negb
adc
push
add
xor
pop
les
add
cltd
cmpsl
bound
sbb
ljmp
iret
pushl
scas
jae
scas
mov
adc
jecxz
popf
or
inc
mov
push
push
rcr
cmp
pushl
jnp
and
mov
loope
jmp
pop
mov
cmpsl
or
xchg
fisttpl
adcb
inc
cmc
incb
pushl
mov
cmpsl
enter
jp
insb
mov
jle
push
dec
jmp
inc
ja
adc
xchg
movsl
dec
or
sub
lods
sbb
adc
outsl
jg
mov
cld
icebp
aas
cmp
pushl
xchg
mov
fsubs
pop
ljmp
pop
xor
cmp
xor
push
jl
pop
idiv
lcall
and
into
xchg
adc
shlb
repz
mov
cli
decl
stc
outsb
add
lock
pop
push
daa
push
cmp
insb
cmpl
pushl
shlb
pop
xor
lods
xchg
add
shlb
pushl
aad
jl
mov
push
cltd
jo
and
jae
inc
outsb
stc
ret
lret
xchg
push
jg
pushf
popa
add
sbb
stc
sti
faddl
bound
loopne
call
xchg
mov
sbb
nop
imul
add
decl
jnp
add
nop
and
pop
das
mov
jbe,pt
pushl
dec
push
lods
mov
dec
mov
add
test
jl
ret
pushl
je
mov
fmulp
xor
enter
mov
fiaddl
addr16
add
push
pusha
dec
and
stos
data16
repz
fucomip
loope
sti
xor
xchg
jo
mov
scas
mov
ret
out
clc
stos
fstpt
out
iret
push
pushl
sub
jns
jae
jecxz
xchg
pop
insb
and
bound
pop
clc
lcall
adc
aam
jecxz
jmp
mov
outsl
psllq
jne
jge
call
dec
fsubrs
or
dec
lock
pushl
sub
ss
xchg
insb
mov
rclb
js
call
mov
adc
inc
dec
dec
in
and
in
add
fdivrs
mov
es
add
imul
lret
inc
stc
call
call
mov
fsts
outsb
mov
out
cmp
jge
jl
push
jg
sbb
pop
jge
int
pop
std
incl
xchg
jb
or
ja
jb
jne
mov
mov
mov
mov
sarb
mov
leave
or
outsb
pop
xchg
xchg
xchg
dec
mov
lods
movsl
into
out
insl
xor
idiv
pop
ljmp
cmp
adc
sarl
jle
adc
call
mov
pop
mov
cwtl
mov
mov
nop
ss
or
pop
push
ret
or
fsubs
movsl
ljmp
out
in
cld
arpl
fidivs
pop
or
ljmp
pop
adc
xor
mov
loopne
push
icebp
sahf
xchg
mov
fisubl
or
inc
or
iret
xchg
jmp
je
dec
push
pop
cld
inc
sub
add
loopne
xchg
dec
jle
and
ljmp
xor
dec
ficoml
pop
jecxz
sar
or
xor
lods
push
clc
gs
mov
cmp
incl
aas
inc
mov
inc
stc
in
inc
mov
pushl
call
shrl
cmp
push
mov
lret
movsb
mov
arpl
mov
xor
sub
test
ffreep
pop
mov
dec
mov
jg
outsl
add
xchg
mov
pop
outsl
dec
jae
in
sahf
mov
sub
pop
add
jb
inc
mov
inc
lds
inc
jg
jne
mov
mov
in
neg
cwtl
repnz
mov
in
pop
or
and
add
call
mov
cmp
mov
jle
das
sahf
outsl
lock
or
xlat
jmp
ret
sub
fnstenv
lock
adc
sbb
test
sbb
addr16
ljmp
xor
sub
icebp
jne
sub
dec
ss
add
loope
cli
push
cld
je
movsl
mov
incl
arpl
loopne
lds
movsl
call
decl
sub
cmp
leave
push
xchg
les
jg
push
pop
mov
add
ljmp
or
add
push
std
decl
test
fisubs
mov
decl
lahf
xchg
popa
ficompl
call
mov
push
add
adc
or
iret
or
andl
pop
test
cmp
rorb
cld
ja
call
mov
xchg
stos
push
in
mov
out
divl
sbb
or
push
sub
xor
jo
cmp
cltd
test
insb
sbb
and
xlat
pop
mov
pop
and
pop
cld
cmp
movsl
pop
xchg
rol
inc
scas
or
mov
mov
daa
push
pushl
jns
jo
or
js
mov
mov
je
sub
ljmp
lcall
in
sbb
push
push
shrl
sbb
mov
dec
mov
xor
lcall
add
lock
call
cwtl
xchg
es
adc
repz
jmp
jmp
add
inc
cs
arpl
scas
fnstcw
xchg
insl
mov
pushl
pop
push
fdivrl
mov
mov
ficomps
sbb
push
or
pop
inc
mov
cltd
lcall
ret
push
adc
idiv
lcall
cmp
inc
jae
popa
scas
jge
mov
dec
pop
jbe
add
lock
movsl
lcall
adc
outsl
ficomps
jmp
add
lahf
or
pushl
fistps
out
add
push
jno
mull
ret
popf
aam
in
inc
fcompl
mov
push
bound
frstor
pop
imul
sbb
ljmp
into
xchg
adc
push
xlat
push
test
mov
mov
jg
pop
loop
ds
mov
xor
push
cmp
mov
loopne
xor
cmpsl
mul
dec
and
mov
inc
call
mov
inc
dec
mov
dec
xor
jg
fidivrl
jge
xorl
icebp
lahf
sbbb
push
cmp
orl
cli
adc
std
cltd
mov
jbe
xor
out
int3
jno
fisttpl
push
mov
lret
push
repz
ljmp
push
xor
push
in
call
cmp
aas
dec
outsb
mov
sub
or
xor
push
mov
call
mov
ljmp
push
mov
repnz
lret
inc
cmp
stos
je
scas
loop
rcll
jle
shl
cmpsb
push
inc
mov
arpl
and
jl
xchg
es
jecxz
sub
pushl
mov
es
cld
cmp
jmp
xchg
mov
leave
sbb
fmuls
jne
iret
jge
sti
jp
out
imul
les
mov
cmp
ljmp
out
or
movsb
fwait
cmp
dec
sub
cmc
cltd
xchg
jno
mov
stc
mov
sti
push
mov
mov
add
in
push
xchg
loopne
push
sub
jge
inc
in
jg
clc
or
movsb
cmc
les
dec
jno
fadds
cmp
data16
pop
add
clc
lret
push
shl
dec
sub
cmp
int3
pop
inc
pushf
fdivl
aas
aaa
sub
incl
pop
add
mov
push
or
aas
mov
das
std
mov
jp
jns
dec
dec
ljmp
in
lcall
mov
xchg
add
cmpsl
add
ret
add
clc
outsb
clc
jmp
repz
and
idivb
add
sahf
mov
jle
in
ret
pop
push
fucomip
call
sbb
pop
jo
cmp
frstor
nop
pop
movsb
out
adc
call
notl
rolb
icebp
adc
sub
jne
ljmp
mov
jns
cmp
call
lea
push
stos
and
call
sub
mov
in
inc
sub
xor
pusha
push
and
shrb
addr16
push
rcrb
push
shrl
sub
xchg
push
dec
lods
cli
jg
bound
arpl
test
pop
test
sbb
loopne
cmpsb
pushf
sub
pop
mov
out
mov
cmp
add
dec
mov
push
incb
and
mov
jg
in
rcrl
pop
out
shlb
ljmp
sub
lret
sub
fmuls
fisubs
mov
psubsw
mov
lcall
fistl
push
out
aad
xor
popa
or
pop
dec
mov
lret
pop
mov
in
xor
or
mov
jg
xchg
xor
aas
push
lahf
shll
stos
fadd
jae
ja
jns
je
jmp
lods
inc
mov
sahf
fcmovne
js
push
imul
ret
ja
mov
inc
mov
add
or
xor
mov
sbb
and
cmpb
in
mov
inc
push
xchg
rol
incl
and
xor
movsl
push
or
inc
test
ljmp
jmp
icebp
xor
jge
pop
loop
out
adc
jnp
mov
jp
mov
push
mov
jg
in
or
pop
pop
push
lahf
sub
adc
add
sahf
xor
rorl
sub
mov
cli
xchg
or
rcrb
insb
mov
int
and
lds
std
cmp
mov
shrb
lcall
mov
insb
int3
sbb
out
mov
adc
fcmovbe
dec
xor
xchg
hlt
mov
push
xchg
adc
lret
and
xchg
lret
shll
lret
rorb
dec
pop
push
jge
jg
fistpll
jl
and
out
cs
add
cwtl
out
or
popf
adc
arpl
ljmp
lock
insb
je
aaa
shlb
rolb
incl
aam
fisubrl
xchg
mov
push
lea
pushl
clc
xlat
dec
ret
push
xchg
mov
pop
repz
std
push
push
pop
dec
and
call
insb
sub
push
mov
fmul
or
fistl
lods
lcall
cmp
mov
div
mov
repz
sbb
mov
arpl
call
mov
add
pop
stc
add
arpl
jmp
jg
push
adc
jne
aas
and
std
mov
or
dec
shll
adc
and
incb
push
add
sbb
stos
mov
scas
and
mov
inc
sub
mov
sub
cwtl
aam
fcompl
xor
and
stos
decl
cli
leave
aad
lret
ljmp
dec
add
loop
scas
and
pop
jle
out
xor
ljmp
lock
lcall
dec
jl
scas
stc
aam
insb
and
push
call
mov
cmp
lret
testl
incl
xor
cmpsb
imull
ja
mov
xor
jbe
cmp
sub
loope
out
dec
cmp
ljmp
mov
subl
lods
and
dec
sub
stos
std
jg
ljmp
ljmp
jle
sar
das
cmc
das
xor
xor
jno
shrl
pop
leave
dec
jl
or
call
lods
push
loope
ds
or
popf
cmp
loope
mov
dec
adc
push
int
xchg
repnz
imul
daa
mov
jae
loope
lock
add
pop
fsubr
mov
loope
enter
inc
aas
xor
pop
pop
call
movsb
sub
ljmp
jae
test
sub
movsl
pop
mov
push
jecxz
ljmp
in
xor
cmc
subl
andb
push
push
cld
aam
inc
popf
xor
cmp
inc
pusha
xchg
cmp
vmovaps
in
pushl
clc
jmp
inc
mov
xchg
in
sub
les
sbb
popf
jp
and
pop
push
pop
les
leave
dec
and
mov
xor
cmp
dec
lahf
in
xlat
pop
in
add
das
cmc
call
lods
sti
push
xor
sahf
mov
or
int
push
inc
imul
jmp
sub
or
imul
add
sub
jo
jg
jae
xchg
lahf
aad
data16
lcall
jl
inc
std
or
je
sbb
xchg
aaa
popf
sub
cwtl
pop
pop
push
roll
fs
xlat
lock
incl
jnp
hlt
mov
xlat
inc
or
push
imul
insb
or
cmp
dec
cmp
mov
add
les
lret
and
mov
xchg
or
lcall
and
stc
int
xchg
inc
add
orl
and
pop
xor
lcall
xchg
adc
pop
push
fwait
inc
xor
mov
popf
iret
jp
incl
inc
or
mov
outsb
cmp
gs
xchg
sbb
push
fdivl
xlat
hlt
pop
sbb
mov
or
push
mov
out
push
cmp
jno
add
mov
and
incl
aam
cmp
lds
lds
loope
lret
loopne
pop
mov
mov
ds
mov
mov
aam
cwtl
xchg
xor
movsl
mov
add
adc
adc
inc
stos
inc
xlat
sbb
decl
enter
or
xchg
lret
cs
xchg
and
adc
mov
sub
xlat
pop
dec
xchg
mov
pop
mov
fistpll
fcmovb
push
add
dec
mov
jmp
sbb
std
aam
lcall
mov
dec
inc
int3
lock
inc
mov
dec
in
adcb
and
cmpsl
gs
xchg
out
dec
lahf
test
repnz
incl
or
movsl
dec
adc
out
mov
fsubrl
mov
jp
xchg
adc
lret
iret
lret
sbb
or
or
std
call
xchg
fwait
dec
cmp
imull
mov
add
pop
mov
fcmovnu
and
bound
cmc
jecxz
sbb
decl
jg
dec
leave
imul
popf
out
mov
add
jnp
push
jecxz
xor
mov
call
outsb
mov
stc
fbstp
fidivl
pop
pop
mov
xor
mov
test
adc
cmp
mov
add
dec
mov
inc
mov
ss
pop
insb
icebp
pop
sbb
imul
iret
jno
mov
xchg
pop
call
enter
cmp
xor
mov
fildll
or
cmp
pop
test
stos
push
mov
std
sbb
sahf
out
pop
in
out
ds
loope
call
decl
cld
mov
repnz
andl
imul
cmp
or
cli
sahf
add
mov
mov
mov
adc
pop
xchg
lds
sub
sahf
clc
call
lret
dec
gs
mov
call
dec
adc
mov
cmpsl
xchg
jp
add
xor
lret
pop
pushf
cwtl
dec
adc
inc
call
icebp
mov
bound
dec
es
inc
pop
jg
fldcw
xchg
shl
push
pop
dec
shl
popa
mov
pop
and
das
imul
and
pop
testl
inc
fstpl
mov
rclb
or
mov
sbb
call
adc
jo
pusha
push
sub
push
xchg
xor
out
add
xchg
fwait
mov
call
mull
lods
aaa
inc
mov
fs
jp
sbb
aas
pop
push
sbb
and
xlat
cmp
jp
out
add
cmp
std
or
out
stc
lds
add
xor
push
adc
inc
decl
sti
test
inc
dec
mov
mov
ss
call
inc
lds
push
cmp
out
sub
push
incl
dec
pop
cmp
ljmp
adc
pop
mov
mov
cmpsb
in
fistps
inc
or
in
addl
mov
mov
hlt
ljmp
in
lock
sbb
cmc
insl
pop
or
imul
lcall
jl
in
iret
jb
shrb
xor
fcompl
xor
xchg
inc
dec
mov
aam
dec
pop
dec
lret
nop
push
aas
mov
cmp
outsl
aas
or
fwait
xorl
out
dec
adc
sti
add
inc
bound
shr
incl
loopne
test
mov
int3
lahf
xchg
jbe
aam
enter
adc
pushl
push
sbbb
js
lret
add
popf
jge
mov
mov
mov
inc
mov
xchg
pop
repnz
out
push
push
lods
lcall
ljmp
cmpb
cmpsb
shlb
outsb
xchg
shl
sub
ds
jmp
cld
jle
inc
jo
pop
mov
lcall
dec
insl
iret
adc
jg
mov
pop
das
pop
stos
repz
xlat
int
jno
and
dec
xchg
aaa
ret
cmp
loop,pt
adc
call
and
outsl
jmp
mov
stos
int
xor
test
pushl
pop
jae
ss
cmpsb
and
aaa
test
out
mov
imul
in
cmp
adc
dec
jge
cld
pop
nop
inc
enter
aaa
ljmp
shl
pushl
dec
fsubrl
mov
sahf
sarb
sti
cld
mov
ljmp
leave
cmp
cmpsb
sub
cmpsb
add
pop
xchg
je
clc
fistpll
repnz
xchg
cmp
sub
je
int
arpl
dec
rol
jns
ljmp
add
dec
ja
jcxz
decl
sbb
jns
fs
sub
test
dec
scas
jle
or
pop
adc
sub
test
imul
decl
mov
dec
mov
loope
sbb
fisubl
fdivs
loopne
cld
leave
push
lods
sbb
lods
clc
or
jg
pop
dec
add
mov
sbb
xchg
pop
push
push
aaa
and
jmp
loope
sbb
jge
popf
push
fs
sbb
call
call
cltd
rclb
addb
enter
cmpsl
in
outsb
push
mov
fwait
ljmp
pushf
test
mov
push
pop
pop
sahf
sub
mov
daa
incl
insl
idivb
pushf
lret
mov
and
ficoms
mov
incl
mov
add
fisttps
or
jns
pop
and
ljmp
test
mov
ja
sbb
dec
pop
ret
xor
sbb
or
lcall
cmp
dec
xchg
jbe
shll
push
mov
pop
popa
mov
jmp
shrl
addb
mov
dec
decb
mov
mov
test
stos
lret
mov
incl
mov
nop
jl
adc
xlat
sahf
jmp
add
incl
cmp
roll
das
incl
out
push
call
pop
push
mov
push
inc
jns
es
push
sbb
cld
call
jmp
fprem
dec
stos
int3
xchg
sbb
in
enter
imul
decb
add
and
or
decl
fwait
mov
adcl
adc
shl
outsl
hlt
outsl
out
sbb
insl
les
jle
cld
rcrb
fistpll
hlt
mov
pop
clc
jne
repnz
jg
pushl
into
outsl
jl
fldl
jge
out
test
call
mov
add
mov
daa
cmpsl
pop
dec
sbb
cmp
sbb
aam
cmp
call
pop
mov
lea
cmpsb
pop
sub
aas
inc
repnz
daa
or
mov
xor
xchg
lods
dec
shl
push
inc
add
mov
ljmp
rol
fs
call
cmpsb
into
cwtl
fsubl
xchg
movb
clc
decl
or
hlt
mov
aad
lock
mov
call
nop
into
cmp
cmpps
mull
cmp
xor
pop
pop
aam
xchg
jp
fs
or
das
lock
fstps
push
ficoml
or
les
out
cmpsb
pushf
lcall
cmc
xchg
push
mov
cli
or
std
push
cmpsb
pop
test
std
call
fucomp
pop
jmp
cltd
xchg
popa
xor
fst
add
adc
jae
add
pusha
mov
and
ljmp
xchg
mov
popa
or
dec
loope
cmp
lds
adc
xchg
jl
call
fcmovnbe
inc
les
sbb
add
nopl
or
mov
sub
call
mov
std
mov
fsubrs
or
sub
movsl
dec
outsl
icebp
lods
pushl
dec
scas
mov
dec
inc
jbe
ds
in
push
inc
or
inc
inc
jnp
sub
aam
pop
inc
cld
lock
and
push
xchg
fildll
call
sbb
xrelease
scas
mov
scas
sarb
push
fcos
int3
int3
movsl
mov
ljmp
inc
enter
cmpsl
mov
out
adc
sti
inc
cmp
in
aas
insl
test
call
or
jno
data16
call
decb
scas
xchg
sub
enter
bound
cmp
testb
outsl
lock
inc
adc
imul
xchg
adc
scas
insl
bound
sub
imul
mov
push
mov
jle
sbb
mov
mov
xor
jp
enter
sub
pop
jle
mov
gs
jbe
mov
push
pop
push
mov
push
xor
sub
push
xchg
call
insl
inc
loope
push
int3
cmp
mov
fdivp
xchg
dec
aas
jno
lock
dec
std
jmp
push
negl
sbb
jbe
adc
sbb
in
mov
sbb
std
sbb
sub
jnp
mov
sbb
sub
push
mov
mov
mov
mov
push
or
xchg
lods
fiadds
xor
xchg
fildll
call
xor
adc
and
enter
lock
pop
push
shll
xor
lds
mov
sbb
push
sbb
xor
xchg
data16
xchg
test
in
mov
mov
loope
and
jbe
pop
pop
push
push
adc
aas
xchg
add
loope
or
cltd
jae
aaa
dec
mov
mov
scas
cmp
decl
inc
stos
cld
dec
cmc
subl
sarb
and
mov
aaa
cli
ljmp
dec
add
xchg
pop
push
xor
fisubs
mov
mov
rcll
lcall
cmp
das
pop
call
or
test
mov
sub
rcl
out
pop
imul
jg
lret
inc
jae
shrb
rol
push
mov
shl
inc
mov
call
decl
mov
pop
dec
sub
xchg
fldt
sub
popf
and
or
fbld
dec
push
push
imul
pop
push
inc
popf
scas
lods
bound
mov
js
icebp
int3
add
std
mov
mov
jbe
pop
pushf
aas
cmp
popa
std
jmp
cmpsb
cmp
jge
cmp
add
call
les
push
sbb
pusha
push
ljmp
das
jle
sub
mov
or
jne
and
int3
add
out
fildl
pop
push
jbe
pop
repz
sti
inc
popa
pop
cltd
xor
mov
test
inc
in
fwait
call
cmpsl
inc
addb
push
mov
out
sarb
cli
mov
test
fstps
aaa
jl
rclb
and
mov
pop
test
movhlps
das
adc
jg
sbb
jo
jne
cmp
ds
xorl
das
std
dec
xchg
outsl
loopne
aaa
cli
pushf
add
mov
push
aad
int
xor
call
fcomip
pop
mov
jns
sbb
sub
xor
jno
lcall
cld
or
xchg
pop
rolb
sub
push
cmp
lcall
adc
inc
rdtsc
das
movsb
mov
out
outsb
hlt
mov
xor
or
loope
jmp
xor
jb
insl
js
add
pushf
lock
jge
mov
mov
shl
and
clc
pop
pop
lods
cmp
in
push
xor
xchg
in
xchg
sbb
pop
push
iret
or
aaa
lods
aas
pop
inc
mov
inc
sub
mov
sub
sbb
decl
pop
std
test
cwtl
mov
repnz
js
loopne
outsl
sarb
imul
mov
or
ljmp
push
inc
lret
dec
addr16
lcall
ljmp
xchg
sbb
xlat
nop
sub
call
jmp
in
pop
std
fildl
inc
gs
inc
loope
movsb
pop
dec
ja
imul
cmc
push
jg
ljmp
fsubrl
test
jnp
mov
add
mov
incl
lea
add
lods
lret
out
outsb
stos
sub
aam
clc
push
or
dec
popa
adc
fsubrl
adc
stos
push
push
cli
js
pop
push
xchg
je
mov
xchg
sbb
cmc
pop
or
popf
lahf
add
push
lcall
mov
in
xor
push
inc
fstpt
es
sbb
mov
test
test
clc
inc
inc
or
or
push
push
leave
mov
mov
add
xchg
in
add
mov
pop
pop
decl
outsl
inc
frstor
in
stos
jae
add
ljmp
ss
incl
inc
pushf
daa
push
xchg
adc
xor
push
dec
int3
push
loope
pusha
insl
outsl
popf
insl
fldl
mov
sbb
lods
adc
fcompl
xchg
jge
push
test
pop
ja
icebp
icebp
stos
jns
or
ret
out
fistl
mov
sub
xor
sub
ljmp
jnp
cwtl
rorl
cmp
push
movsb
add
xor
cld
scas
fisubrl
push
daa
fstps
cld
jne
call
jnp
cmp
sbbb
call
std
inc
pop
and
mov
in
sub
mov
cmp
push
scas
and
dec
mov
lcall
shrb
icebp
cld
and
popf
cmp
icebp
stos
add
insl
mov
call
test
out
aas
popa
push
xchg
cwtl
rcr
repz
adc
pushl
cld
or
cli
mov
xor
in
pop
cmp
xchg
mov
sbb
insl
call
mov
add
out
jae
cmp
or
mov
test
pop
jo
mov
pusha
xchg
scas
sbb
ja
mov
xor
mov
dec
inc
sub
daa
pushf
cmp
cmp
arpl
hlt
cmp
into
fwait
push
incl
push
mov
ffreep
jle
jl
cwtl
ja
add
lcall
int3
jmp
sbbl
or
lock
in
int
ja
int3
ficoml
mov
pop
ljmp
jno
cmp
pop
aaa
sbb
insb
sub
adc
mov
incl
xor
inc
pop
rcll
cmpb
and
pop
dec
or
xchg
fidivrs
add
iret
xchg
addb
fisubrl
test
shr
outsl
mov
leave
filds
pop
jecxz
dec
pop
mov
sub
mov
or
outsl
sbb
shrb
flds
rcll
sar
outsl
xor
jns
aas
orb
dec
cmp
in
inc
mov
loope
jp
lcall
mov
lods
inc
and
push
lods
das
jb
adc
mov
jle
decl
int3
jnp
call
mov
rcrb
sub
cmpsl
fisubl
cmp
daa
pushl
out
das
ret
test
pushf
clc
ror
mov
andb
sbb
jmp
jmp
add
fsts
repz
enter
jae
mov
icebp
sub
call
jns
stos
lea
sub
js
subl
mov
or
jmp
jne
dec
mov
push
or
mov
bound
call
mov
imul
dec
xchg
sbb
add
or
rcrb
xor
ret
pop
cmp
pushl
or
and
aad
jns
lods
lock
xchg
mov
sbb
cwtl
or
inc
call
lcall
clc
jbe
rolb
xchg
shrl
iret
scas
mov
xchg
add
jmp
fcomp
sub
adc
mov
mov
and
inc
inc
cmpsb
mov
fisubrl
mov
push
cmpsl
out
push
decb
incb
cld
ja
movzbl
push
fstpl
loopne
cmp
jne
adc
ljmp
scas
sbb
lret
and
pushl
lcall
lret
dec
mov
mov
pushf
mov
mov
pushl
shrl
xor
cmp
or
add
jmp
lea
push
mov
pop
std
pop
jnp
or
fwait
sub
lret
jmp
inc
ret
shl
and
add
lock
cmp
mov
ss
adc
pop
push
inc
or
cmp
mov
jmp
lea
sbb
lret
inc
repz
clc
call
decl
jo
lods
inc
pop
xor
inc
inc
ds
lret
xor
xchg
les
incl
fistpll
fnstenv
rclb
sub
pop
sti
call
sbb
jg
pop
sub
pop
fistl
or
fimuls
das
lock
mov
int3
mov
inc
or
xor
pusha
icebp
push
inc
call
adc
add
loopne
xchg
sub
decl
ror
imul
push
adc
xchg
inc
inc
rclb
lret
fsubrs
inc
aad
cld
jmp
jae
add
cmc
jmp
jbe
in
ljmp
adc
test
sbb
jp
xchg
and
gs
dec
mov
call
cmp
jb
xchg
push
inc
lods
sbb
mov
xor
hlt
incl
fcomps
add
lret
mov
fldt
mov
je
push
addr16
cld
test
add
ficoml
fucomip
ljmp
fiaddl
sub
or
or
into
sub
and
lcall
pushf
dec
mov
mov
arpl
add
into
out
pop
inc
and
sahf
or
sar
add
push
adc
mov
xor
aaa
mov
and
leave
mov
fisubrs
pusha
lods
jmp
pop
and
cmp
mov
cmpsb
jge
lcall
lock
pop
pop
push
call
push
arpl
push
push
and
push
add
repz
int3
push
decl
cld
and
sub
mov
lock
mov
lcall
push
push
cmpsb
test
mov
sti
mov
es
jg
jmp
jne
call
ss
rorb
arpl
dec
mov
cli
ljmp
mov
scas
stc
push
cmp
xor
call
sub
int3
sub
jle
mov
inc
or
fidivrs
and
popl
inc
pop
cs
mov
jmp
fnstsw
mov
xor
loope
adc
mov
xchg
clc
mov
add
rcll
stos
loopne
add
rcl
je
jo
inc
add
movsl
lcall
call
or
mov
push
sub
je
enter
push
ficomps
pop
jp
lods
fildll
loop
inc
fwait
dec
sub
test
int3
pop
je
data16
mov
ficoms
cmp
pop
lret
cltd
je
scas
cmp
jmp
mov
fimull
jmp
daa
add
adc
jmp
mov
jno
andl
sub
mov
scas
mov
ljmp
push
std
or
mov
mov
sbb
push
and
dec
mov
gs
cmpsb
and
insb
xchg
cmp
pusha
orl
jmp
jnp
jecxz
in
popl
pop
icebp
jae
sbb
hlt
filds
mov
ss
jecxz
dec
pop
mov
mov
adc
enter
test
mov
insl
clc
jg
leave
jo
dec
or
jbe
pop
adcb
lock
pop
addb
mov
sub
jmp
sbb
fcompp
xchg
lock
clc
lret
int
lretw
ret
decl
repz
push
sti
sbb
cmp
int
cli
fwait
aaa
push
pop
and
xorl
and
imul
or
and
rol
xchg
mov
lods
shlb
mov
pop
mov
and
iret
cmc
mov
clc
push
cmp
pop
lcall
test
jg
or
and
mov
mov
movsl
cmp
xchg
and
jmp
xchg
xchg
das
scas
xchg
pop
out
sub
jbe
data16
decl
xchg
stos
mov
xchg
pop
pop
jp
clc
jecxz
ljmp
mov
lahf
data16
subl
sub
sub
xchg
push
lret
mov
sub
ljmp
pop
jg
sub
inc
inc
sbb
lock
push
inc
stos
push
out
mov
lret
pop
loopne
ljmp
push
mov
and
cld
fldenv
lahf
mov
jg
push
mov
inc
jb
push
or
mov
xchg
out
jmp
loop
fdivr
pop
stos
sbb
pop
imul
adc
jb
cmp
ss
dec
inc
out
mov
sahf
in
xorb
sbb
sti
test
nop
lock
inc
wrmsr
mov
mov
adc
pop
mov
gs
aaa
add
inc
pop
stos
fsubs
pop
int
decl
mov
aas
adc
imull
inc
or
jns
cld
lcall
test
les
lea
jb
or
and
test
hlt
ljmp
movsb
hlt
xchg
inc
out
xor
cmp
sbb
mov
rcll
mov
lods
dec
loop
mov
mov
sub
fidivl
imul
cmp
mov
dec
icebp
jge
incl
bound
adc
scas
mov
mov
add
dec
jmp
test
call
cmc
mov
sub
and
dec
test
and
xchg
push
out
cmc
jnp
jbe
mov
sti
xchg
add
scas
dec
mov
cltd
inc
aas
aas
scas
inc
xor
and
lods
mov
xchg
mov
and
mov
jbe
pop
test
adc
mov
push
fucom
pop
clc
jmp
enter
popa
pop
dec
ds
aas
push
test
lcall
ljmp
arpl
fwait
sbb
jl
ss
movsl
call
cmp
ret
lea
mov
and
data16
and
outsb
jno
sub
movsl
pop
cmpb
xor
pop
int
cmp
jl
dec
sbb
cmp
xor
loope
lds
incl
test
repnz
mov
call
mov
mov
lock
loopne
cmp
pusha
and
ljmp
int3
inc
imul
jbe
pusha
cs
icebp
xchg
jle
testl
in
decl
inc
outsl
mov
xlat
push
jno
arpl
xor
in
sub
jmp
xor
jmpw
sbb
and
push
inc
lahf
inc
lcall
mov
clc
aam
ret
push
cmpsl
xor
sub
ljmp
dec
and
or
push
adc
and
mov
out
sbb
call
mov
add
inc
scas
cmpsb
pop
sbb
push
rorl
inc
mov
lods
gs
jmp
iret
es
sub
ljmp
sub
push
iret
cmpsb
pop
out
push
jb
push
int
shlb
jo
xorl
mov
jmp
jg
jns
push
test
loop
ret
hlt
dec
sbb
sbb
decl
cld
je
pop
cmp
lds
repnz
ret
mov
lock
mov
movsl
lahf
fwait
or
loopne
incl
mov
jmp
test
sbb
mov
js
inc
rcrl
jmp
adc
sub
cmpsb
in
out
in
lret
sbb
out
test
jg
adc
or
dec
cs
xor
pop
push
movsl
mov
dec
imul
decl
je
dec
leave
cmpsl
dec
hlt
dec
mov
sub
incl
dec
pop
xor
mov
lcall
push
call
cmp
inc
loopne
dec
fldln2
adc
fs
aad
adc
loope
decl
daa
pusha
insl
adc
or
cs
mov
and
adc
pop
stos
fcos
ljmp
pop
imul
mov
mov
adc
mov
xchg
ljmp
imul
cmp
fiaddl
jecxz
aaa
sbb
and
bound
pushf
xchg
stos
jl
or
jg
addr16
insl
testb
xor
pop
ljmp
pushl
clc
iret
xchg
imul
loopne
jle
mov
scas
cmp
cwtl
arpl
push
call
jle
pusha
lcall
movb
mov
sahf
sub
je
adcb
inc
imul
ljmp
ret
fisttpll
xchg
mov
sti
mov
ret
or
call
popf
cltd
xor
add
enter
add
mov
xchg
jno
jmp
fbld
into
dec
and
xor
jae
lods
jno
xchg
ds
push
jns
ja
cltd
dec
mov
cmc
int
mov
out
mov
jo
lahf
popa
mov
xchg
sbb
xchg
jnp
mov
pushl
add
leave
mov
lret
inc
mov
cmp
sbb
pushl
lods
aam
popa
mov
cmp
xchg
pop
add
cwtl
sub
lcall
cmp
mov
adc
pop
mov
mov
scas
out
and
and
fmull
adc
push
sub
mov
aaa
fsubr
std
xchg
sbb
lods
mov
mov
mov
lea
sar
decl
cmovb
dec
add
in
lea
sbb
lods
dec
and
pop
cmp
cli
lock
mov
jl
je
push
or
imul
inc
daa
ss
outsl
push
les
clc
addr16
dec
jo
jge
test
xor
call
stos
inc
bound
bswap
mov
fisubs
stos
sub
iret
jg
incl
xor
mov
outsl
jg
pushf
sarb
imul
sub
add
sbbb
sbb
dec
inc
inc
jp
mov
pop
decl
pop
jns
mov
cmp
mov
movsl
push
sahf
xchg
ja
cmpsb
xchg
push
aaa
jl
lcall
xor
lcall
rolb
in
das
hlt
idivb
and
je
push
stos
cmp
mov
sti
leave
mov
jmp
sub
ficompl
mov
repnz
enter
dec
test
or
inc
pushl
cs
or
cmpl
sbb
fisttpll
or
je
mov
push
adc
jmp
fs
mov
std
jnp
or
adc
das
sub
and
outsl
ret
or
or
mov
gs
mov
or
add
push
gs
sub
scas
dec
add
jg
fsts
call
or
xor
xchg
pop
daa
pop
inc
push
inc
lret
les
scas
pop
cli
test
sbb
in
mov
movsl
mov
cmp
xchg
ret
jmp
hlt
les
mov
cmp
nop
repz
dec
stos
dec
lcall
ljmp
in
inc
jmp
xchg
push
adc
cmp
and
in
adc
lods
and
dec
mov
sub
jg
pushl
mov
mov
arpl
push
sbb
jne
jle
repz
movsl
incl
ljmp
dec
adc
pop
cmp
lea
call
imul
shrl
add
jecxz
push
sahf
icebp
or
outsb
pop
add
jmp
pop
mov
add
sarl
jge
les
sub
cli
mov
in
xchg
int3
enter
sbb
int3
cmpsb
dec
push
adc
pop
es
fwait
fs
movsb
cmp
scas
xchg
cmp
jle
out
enter
cmp
mov
lcall
mov
inc
repnz
ljmp
jno
cld
mov
pushl
xor
fstps
pusha
mov
movsl
fdivp
inc
iret
cli
fldt
hlt
mov
mov
xor
xor
or
cmp
lock
jo
push
cmp
test
rcrl
fstl
fs
mov
cld
push
ds
push
sahf
add
lret
add
add
ljmp
popa
or
dec
insl
sbb
aam
mov
decl
lods
movsl
push
dec
data16
scas
cmp
xchg
lods
hlt
idiv
pushl
dec
das
or
int
mov
mov
push
xor
sbb
and
scas
xor
jns
jge
loop
incl
inc
into
mov
pushl
pop
cli
daa
pop
dec
bnd
cltd
stos
std
loope
cmpsl
je
xchg
std
lcall
call
and
xor
push
hlt
mov
aad
ds
inc
repz
incl
outsl
push
out
lock
sbb
scas
cltd
ds
jo
pop
mov
mov
cmp
in
dec
enter
inc
cld
pop
and
pop
nop
pop
cli
pushl
cli
divb
jae
push
lret
inc
inc
mov
adc
jnp
pushl
xchg
add
fwait
jl
xchg
push
push
pop
aas
ja
mov
inc
leave
loopne
arpl
mov
jb
mov
jp
xor
aaa
and
mov
xor
outsl
test
aas
pop
mov
inc
ja
mov
outsl
icebp
pushl
pop
pop
scas
jnp
daa
add
sub
and
or
aam
jecxz
call
push
stos
push
push
popf
push
lcall
mov
lcall
sbbl
out
outsb
pop
mov
icebp
sub
lods
fildl
jg
mov
int
je
ret
mov
jmp
shrb
test
ljmp
hlt
mov
or
aaa
add
dec
sub
and
xchg
push
dec
aad
mov
repz
jbe
sbb
cld
fsubl
xor
inc
popf
fnstenv
fldl
ljmp
outsl
shlb
sarl
in
cmc
paddw
incl
in
pop
cld
mov
mov
sbb
inc
dec
pushl
xchg
das
jl
xchg
repz
in
jecxz
rcll
sbb
adc
lock
jg
or
mov
xor
sbb
mov
lds
ds
decl
jecxz
sahf
sbb
imull
mov
ljmp
mov
dec
es
popa
pop
cmpsl
pop
push
and
movsb
dec
fstpt
cmc
int3
fst
data16
rcll
push
sub
mov
push
push
and
nop
dec
inc
psubw
pop
std
dec
std
sbb
mov
pop
push
jle
sub
sub
sub
cmp
ljmp
pop
rcl
adc
int
mov
adc
int
daa
sub
cmp
and
aaa
in
outsb
jecxz
lahf
xchg
push
push
mov
sar
leave
pop
push
call
xorb
ret
jnp
xor
into
push
push
lret
and
mov
fldt
dec
push
pop
sbb
sti
sub
roll
outsb
cli
jns
xor
imulb
pop
jb
daa
sub
fdivs
mov
adc
notb
dec
mov
sbb
decl
jg
sub
mov
ret
mov
xor
das
push
or
in
outsl
std
call
fstl
xchg
jecxz
shll
xchg
rorl
mov
xchg
add
lret
and
insl
in
pusha
repnz
dec
in
xor
mov
mov
in
cmp
pop
jge
sub
gs
sub
ljmp
movsl
or
xchg
lods
pop
inc
ljmp
inc
jne
xor
lcall
std
clc
imul
ds
stos
pop
dec
jmp
mov
or
in
mov
fcmovb
test
call
dec
ret
cld
stc
mov
add
pop
xlat
xor
mov
pop
test
hlt
and
lock
std
xor
pop
sub
dec
orb
mov
fidivs
daa
dec
inc
das
mov
fprem
cmp
enter
push
mov
and
cltd
add
repz
push
mov
lods
xchg
testl
mov
loopne
xchg
std
std
enter
and
int
insl
xchg
aaa
cmp
das
loop
pop
jge
mov
lcall
sub
inc
cmp
inc
xchg
inc
fs
or
lock
inc
pop
daa
mov
add
pop
add
in
mov
lahf
lock
inc
sub
mov
inc
mov
out
aas
sahf
out
ds
inc
fsubl
dec
sbb
incl
dec
add
mov
inc
out
std
test
ret
cmpl
std
nop
mov
insb
add
xor
popa
sbb
outsb
mov
out
cli
ljmp
jg
or
ds
pushl
sub
push
fisubrs
xchg
jg
push
subl
or
into
aaa
mov
sbb
cmpsb
mov
mov
xor
out
das
std
call
in
mov
pusha
cmp
jb
ja
mov
jmp
mov
sub
fwait
xorps
ficompl
dec
fdivp
mov
fwait
push
jb
andb
inc
sbb
jp
in
cli
and
jb
cmp
jl
cmp
and
add
mov
int3
fs
addl
sub
pushl
inc
movsw
mov
daa
jl
lods
and
mov
lret
and
inc
cli
jmp
and
in
cltd
pop
rcll
jne
bound
push
xchg
add
adc
outsl
gs
push
out
shrl
or
sub
dec
jg
mov
outsl
inc
clc
repz
loope,pt
leave
cli
lods
cld
fucomip
loope
add
pusha
xor
outsl
mov
aad
mov
add
pop
and
xchg
in
xchg
lock
mov
fs
call
pushl
sub
xchg
jp
gs
lods
jge
adc
mov
ds
mov
int
xchg
and
adc
rorl
xchg
push
jmp
mov
lock
pushl
aam
adc
push
cmp
mov
cld
lret
ffree
cmp
dec
cld
and
pusha
rcl
inc
fwait
dec
pop
bound
js
push
pushl
jp
jne
cmpsl
sbb
dec
fs
and
inc
lods
out
nop
push
sub
pop
ds
push
jg
incl
out
es
mov
xor
scas
hlt
jmp
sbb
popf
aad
jae
xor
push
mov
pop
adc
or
inc
aam
mov
or
rcl
mov
lcall
inc
lret
fildl
lock
divl
fildll
xor
in
in
mov
addb
push
aaa
pop
lret
inc
orl
inc
jns
jle
lea
int
aaa
cli
das
cmp
cltd
xchg
sub
mov
pop
and
int3
aaa
clc
pushl
mov
or
shlb
call
lock
add
pop
jl
cmp
and
dec
mov
add
decl
sub
fwait
jbe
bound
push
jp
outsl
cs
mov
mov
mov
lcall
cld
int3
pop
cmp
call
aam
call
pushf
cmp
and
call
ljmp
les
call
dec
inc
dec
stos
jb
and
mov
inc
scas
ljmp
arpl
or
cmp
into
out
sub
sub
std
lcall
inc
adc
add
adc
ret
movsl
test
jnp
das
sbb
lcall
into
sub
jle
imul
xlat
mov
lock
jecxz
mov
sahf
rcl
pop
das
in
jo
and
das
jb
xchg
insb
cmpsl
rcrl
pop
jle
pop
inc
arpl
das
xchg
mov
mov
jge
sar
jp
mov
test
outsb
sbb
add
ret
pop
cmp
dec
push
mov
jno
pop
jb
fcmovu
into
ret
shl
add
adc
pop
mov
js
addl
test
sub
xor
nop
les
out
inc
dec
insl
push
jmp
xor
aam
cmc
xchg
push
push
hlt
xor
pop
push
pop
mov
out
lds
pushl
pop
call
mov
idivb
insl
stc
out
adc
mov
adc
in
ror
ljmp
aaa
or
dec
add
jo
and
adc
inc
es
decl
sub
dec
mov
pop
inc
insb
adc
test
mov
push
add
sbb
decl
sub
fldt
mov
ds
movsb
jecxz
dec
adcl
jnp
jle
rcll
mov
mov
decl
test
xchg
pop
add
aas
add
or
in
cwtl
shl
mov
repnz
neg
push
addr16
cmpsb
mov
fsubr
mov
call
cmp
lcall
cmp
push
fwait
outsl
pop
xor
adc
pop
mov
add
mov
iret
addr16
pop
clc
or
cmp
out
incl
ljmp
stc
pop
push
stos
mov
jmp
test
and
push
std
ljmp
push
stos
and
inc
dec
mov
xchg
jge
mov
iret
lcall
jmp
mov
adcb
xor
adcl
clc
push
and
lods
sti
jne
xchg
clc
jmp
mov
pop
sbb
jo
jle
stos
out
call
popf
dec
pop
mov
add
add
call
int
jo
inc
sub
cli
pop
sahf
xchg
loope
mov
mov
and
icebp
mov
cld
movsb
mov
xchg
loope
jge
pop
clc
decl
jb
xorl
push
fdivl
push
stc
test
jle
aaa
out
mov
dec
dec
in
lock
cmp
mov
push
nop
pop
pop
mov
ljmp
aaa
sub
lea
cmp
cmp
cmp
and
js
adc
imul
movl
jnp
mov
or
rcrl
pop
sub
mov
cld
push
mov
or
jnp
scas
ret
mov
xor
imul
jns
jg
and
sub
addl
incb
fbld
cld
imul
sar
rcr
add
call
loopne
xchg
mov
icebp
iret
cmp
js
loopne
in
sub
movsl
cmp
mov
mov
cmp
iret
mov
outsl
decl
test
nop
lods
xchg
add
mov
insb
sarb
test
sub
lock
std
inc
xchg
push
mov
aaa
loop
sbb
cli
enter
mov
sar
xchg
fldl
cmpxchg
fdiv
push
dec
jg
jmp
mov
lahf
cli
sub
pushl
adc
inc
jo
mov
ficoml
fimuls
scas
push
xor
dec
fidivs
xor
pushl
stos
xor
xlat
es
pop
inc
test
adcl
jge
xlat
inc
sbb
sar
lcall
sbb
jae,pt
xchg
sub
push
test
pop
cmp
into
mov
lock
inc
adc
xor
adcl
and
cltd
sarb
loop
xor
or
ja
insl
cmp
loop
std
std
xor
or
es
fnsave
jo
ficomps
jmp
push
adc
mov
pop
inc
ljmp
mov
decl
cld
and
add
movsb
scas
ret
lret
fbld
pop
xor
movsb
outsl
insb
xchg
clc
cmpsb
pop
mov
test
ljmp
daa
cmpsb
std
lods
inc
mov
push
mov
sub
bound
roll
jp
adc
out
xchg
outsb
sbb
or
leave
mov
inc
cmp
cmp
pop
mov
lcall
cld
lcall
in
jle
add
in
das
outsb
xor
movsl
rorb
sub
cmp
pushl
testl
roll
imul
add
pop
sub
lcall
leave
aaa
out
sub
mov
sbb
enter
sub
out
shlb
pop
pop
cmp
cmp
or
std
push
xchg
lea
iret
pop
in
popa
mov
popf
mov
jge
orb
sahf
and
jl
test
mov
fistps
dec
jecxz
ja
pop
cmpsb
sbb
into
stos
pop
hlt
sbb
decl
popf
push
dec
or
add
jl
lock
or
and
das
arpl
xor
jecxz
loopne
jb
cmp
mov
sub
jmp
cmpb
mov
in
enter
orb
lcall
jmp
lret
add
inc
xchg
xor
adc
test
xor
jl
decl
icebp
jmp
ret
ja
or
push
xorb
jmp
loopne
mov
fidivrl
jmp
pop
mov
push
pop
sub
mov
push
cltd
and
mov
sub
movsb
dec
mov
movsl
mov
push
pop
inc
adc
ljmp
in
cltd
xor
stos
mov
fldcw
mov
jno
xchg
imul
mov
pushl
xchg
lods
divb
les
test
mov
mov
popf
jp
test
inc
rol
sub
mov
dec
les
fisttps
add
mov
cmpsb
lods
shl
jmp
sbb
fnstsw
cmp
xchg
xchg
or
lcall
mov
jmp
mov
add
shlb
mov
sub
and
dec
lcall
bound
mov
adc
lods
fsubrs
mov
pop
xchg
adcb
call
and
leave
or
rcll
mov
mov
push
dec
pop
mov
push
mov
ljmp
int3
xor
in
fcompp
adc
iret
ficomps
inc
jmp
mov
mov
repnz
add
jnp
add
jmp
fisubrs
js
sbb
push
arpl
cld
or
xchg
sub
push
lods
push
sub
popa
cmp
add
addl
imul
rclb
jo
aaa
adc
ljmp
mov
ljmp
mov
inc
jmp
out
cmpsb
cmp
iret
push
jb
test
mov
xchg
mov
push
ret
sbb
lcall
std
push
xchg
ret
std
out
mov
xchg
rorl
int3
inc
stos
jecxz
aas
fcoml
and
xor
xchg
xor
jmp
jns
jne
mov
jge
call
repnz
or
xor
or
inc
mov
rcrl
jg
je
xor
pop
movsl
es
mov
jg
and
add
cwtl
movsl
push
ds
call
lea
inc
das
sub
ljmp
pop
push
enter
push
cmp
dec
imul
cmp
loope
out
cmc
jecxz
mov
out
daa
out
mov
mov
data16
jg
and
jo
loop
pushf
in
mov
sbb
mov
jmp
cli
outsl
mov
sbb
cvtdq2ps
jg
jecxz
jb
mov
jg
insl
out
add
sbb
jae
subl
add
ljmp
jns
jo
push
cmp
int3
xchg
mov
mov
inc
cmp
clc
lods
sbbb
sub
mov
lcall
sbb
cmpb
jecxz
xor
stos
or
sahf
outsl
push
arpl
cmc
lcall
push
xor
into
mov
push
loope
jl
lods
outsl
mov
cmpsb
xor
bound
jmp
or
xor
sub
test
push
fnstsw
push
shrb
sti
mov
testl
jns
test
lock
cwtl
jmp
incl
adc
sahf
loop
adc
mov
jg
or
adc
ljmp
and
aad
or
dec
add
outsl
push
in
mov
inc
or
call
mov
into
movsb
pop
loop
jb
lret
sub
pop
test
cmp
sub
cmp
jg
pop
jmp
sbb
les
mov
mov
xchg
and
dec
xor
mov
push
cs
out
push
sbb
jl
sbb
iret
call
sbb
mov
cmc
shll
xchg
or
fwait
inc
inc
out
aad
hlt
push
idivb
jp
test
mov
idivl
js
dec
incl
dec
sbb
cmp
add
mov
fs
and
movsl
add
ret
cmpsb
push
dec
loop
scas
push
cmp
mov
loop
inc
adc
rcl
and
pusha
sub
mov
xchg
lahf
jne
pop
jmp
and
into
pop
push
aad
incb
popa
jp
mov
aas
in
dec
loope
xchg
sarl
mov
call
mov
ja
inc
into
enter
push
jl
out
mov
andb
and
pushf
mov
aas
mov
jb,pn
jb
mov
jg
pop
movsb
sub
scas
stc
je
daa
out
mov
jmp
pushl
cmp
add
out
out
rcll
mov
add
cltd
sbb
ljmp
or
in
xchg
clc
ljmp
xor
ror
call
dec
or
jp
lret
cltd
mov
call
mov
shr
gs
addr16
mov
outsl
ds
ret
pop
xchg
outsb
push
inc
shlb
xchg
cmp
std
jmp
jb
ret
jb
cmpl
repz
fstpl
inc
sub
movsl
mov
loopne
hlt
xlat
out
dec
sarb
jecxz
pop
pop
cwtl
cmp
sub
jle
call
pushl
loope
lret
inc
xchg
mov
dec
cmpsl
sti
xor
pop
pushl
cltd
inc
adc
sbb
iret
cwtl
or
or
gs
clc
pop
enter
add
popf
xchg
lods
inc
enter
sbb
movsl
push
pop
mov
xor
gs
lret
ret
std
test
sub
sub
push
pop
dec
push
xor
lcall
sarb
sbb
dec
jns
scas
das
ret
mov
es
jno
sti
scas
pushf
push
leave
ss
mov
lcall
cmpsl
inc
and
mov
dec
xchg
jmp
mov
fs
mov
mov
call
fnsave
int
scas
jbe
es
insl
push
fsub
in
jmp
push
roll
bound
jo
mov
std
cs
or
fnclex
sahf
jno
in
incl
dec
fwait
push
add
pushf
mov
jmp
aas
jno
or
sbb
test
and
dec
decl
jmp
into
pop
loopne
xor
xchg
gs
cwtl
andl
shlb
iret
ljmp
hlt
call
test
call
stos
bnd
fwait
inc
jo
pop
mov
popf
pushl
out
push
lods
fs
notl
cwtl
imul
cmp
push
cmp
pop
stc
icebp
lea
aam
test
xchg
jg
inc
sub
pop
fcoms
push
push
filds
ds
jns
inc
sub
arpl
ss
xor
decl
ljmp
add
loope
fnstsw
push
sti
adc
cmp
add
pop
test
pop
push
mov
inc
dec
loope
push
aam
aad
jp
adc
ljmp
xor
out
mov
jns
jbe
add
lods
fisubrl
sub
enter
call
clc
jecxz
cmp
inc
neg
rorl
or
jns
xor
test
xor
mov
mov
ljmp
lds
mov
push
pop
in
fistpll
addr16
ss
in
add
xchg
icebp
xor
push
cwtl
xchg
push
outsl
push
cld
decl
decb
daa
mov
xor
lret
aam
and
mov
mov
mov
pushl
lcall
or
addr16
insb
xor
and
add
inc
call
mov
insl
push
sbb
mov
adc
dec
push
pop
out
fs
repz
pushl
jo
mov
fisttps
dec
mov
push
adc
adc
incl
cld
xlat
in
jns
aaa
mulb
or
arpl
push
adc
mov
cmp
jge
pop
mov
push
enter
ljmp
sub
mov
pop
mov
lds
sbb
lea
lcall
inc
inc
orl
xchg
pop
lea
xor
jmp
add
std
adc
sub
sbb
cs
lret
dec
xchg
pushl
jg
data16
lods
inc
shrl
roll
pop
outsl
test
sub
lods
stos
int
mov
mov
pushf
cwtl
lret
shlb
ret
mov
sar
inc
dec
loopne
sti
xchg
cmp
call
enter
xchg
std
imul
mov
pop
mov
fisubrl
xchg
xor
lret
push
push
repnz
clc
ljmp
cmp
and
mov
cmp
int3
mov
push
out
dec
call
decl
gs
add
lock
lea
nop
dec
outsb
adc
jmp
add
addl
push
aas
movsl
sub
jb
stos
mov
not
imul
decl
xor
gs
rcrl
push
jns
sbb
pop
out
mov
xchg
dec
jg
into
popa
push
xor
sub
mov
scas
sbb
xor
push
mov
push
dec
pop
jecxz
adcl
xor
loop
jmp
inc
fnstcw
xor
cmc
inc
mov
movsl
cmpb
jmp
stc
sub
out
stos
push
mov
xchg
daa
adc
ljmp
cmc
mov
out
inc
das
xor
sti
inc
call
hlt
xchg
or
xchg
addl
push
push
fildl
push
mov
test
sbb
jnp
mov
stos
mov
adc
xchg
loope
imul
jbe
and
xor
cmp
push
pushf
pop
outsb
and
test
jge
addr16
call
cs
or
aaa
incl
cmp
jnp
jge
xlat
xchg
sub
out
scas
push
push
pop
insb
stc
and
ljmp
icebp
stc
movsl
shll
xor
iret
fwait
mov
mov
and
incl
ljmp
enter
ljmp
mov
inc
jge
pushl
ja
test
fldl
mov
dec
gs
adc
ljmp
and
mov
je
dec
adc
mov
jno
mov
or
call
mov
pop
fisubrl
jne
les
pop
subl
repz
clc
lcall
pop
stc
fadd
jne
jmp
std
div
push
imul
pop
mov
sbb
sub
xchg
xchg
cmp
xchg
leave
fs
decl
inc
addr16
push
sahf
jae
test
lock
mov
aam
pusha
pop
ror
inc
mov
in
mov
push
jbe
aad
mov
add
ret
pushl
mov
inc
xchg
sbb
mov
loop
push
inc
or
jg
xor
mov
add
jne
out
xor
dec
push
mov
mov
push
cltd
pop
js
xchg
cmc
nop
push
pop
subl
test
sub
pushl
jp
lahf
fs
push
or
fsubr
cld
cli
add
inc
popa
push
fildll
decl
jo
cld
ret
mov
faddl
popa
and
add
xor
xchg
fisttps
lcall
lcall
aad
add
pusha
cwtl
lret
and
out
movsb
mov
test
clc
jmp
enter
dec
mov
and
push
dec
jb
jecxz
cmp
rcll
pop
sti
dec
push
out
sbb
es
lods
or
pop
sahf
mov
mov
popa
xchg
arpl
incl
pop
jmp
xor
loope
pusha
jle
outsl
inc
icebp
in
addr16
push
push
or
mov
xchg
pop
sub
mov
lock
movsl
pop
inc
or
mov
out
lahf
push
js
push
jno
das
mov
inc
movsl
or
sub
sahf
xchg
sbb
cltd
jg
incl
adc
inc
cmp
dec
or
incb
xchg
fs
mov
lds
cmp
and
push
ret
fisttps
addr16
sub
movsl
scas
sti
les
fimuls
int
icebp
fucomip
xor
clc
sub
ret
les
push
or
and
loop
decl
decl
cmp
mov
rclb
aaa
stc
pop
pop
jmp
push
dec
xchg
incl
stc
sub
ficoml
jge
leave
sbb
push
int
movl
out
or
xor
lcall
pop
scas
push
adc
pop
jae
ret
mov
jg
hlt
mov
dec
loopne
cmp
dec
adc
pop
call
jg
inc
daa
shlb
inc
push
and
fs
add
or
ret
sarb
enter
fstpl
std
inc
sub
rorl
add
or
insl
data16
divl
jmp
add
mov
test
adc
rcrl
lcall
cs
and
mov
data16
mov
xlat
mov
jg
pushl
xlat
orl
incb
sub
pop
xchg
shll
aas
js
pushl
clc
call
and
sbb
orl
sbb
mov
mov
xchg
sar
out
and
mov
mov
jg
in
aam
jmp
xchg
inc
daa
and
ds
aas
mov
mov
scas
pop
pushl
cmpl
sbb
jmp
or
xchg
scas
adc
add
rcrb
incl
stos
pusha
and
cmp
and
xlat
or
lods
fwait
add
incl
mov
int3
cmpsl
add
ss
sub
lods
aaa
ljmp
ret
punpcklbw
pop
loope
dec
popf
xor
decl
sub
push
or
adc
jnp
add
in
in
fcomi
sti
or
std
rorl
push
fbstp
jmp
lods
lret
fists
arpl
or
cmp
jno
pop
mov
mov
pop
add
pop
mov
std
sub
cmp
rcrl
loop
daa
xchg
jl
sbb
adc
pushf
dec
in
pop
push
jecxz
sub
jnp
enter
movsl
ljmp
test
rorb
in
stos
mov
jmp
movsl
sbb
out
xchg
stos
lock
das
cld
inc
std
adc
ljmp
incl
mov
shll
xorl
adcl
aam
jp
or
mov
inc
int
aaa
pop
jae
fs
sbb
inc
shll
out
int
clc
mov
dec
adc
push
gs
incl
fsubs
add
sbb
jge
jnp
in
iret
inc
arpl
jmp
test
repz
testl
push
int
xor
inc
jae
or
mov
jmp
pusha
lock
sbbb
adc
jg
jl
mov
mov
add
movsb
adc
or
fbstp
push
push
mov
addr16
xchg
hlt
push
mov
cmp
jmp
mov
dec
sbb
xor
scas
js
pop
inc
jg
lret
mov
decl
lret
push
arpl
mov
xchg
push
sbb
mov
mov
cs
fsubl
negb
jg
stc
fisubs
notb
bound
or
adc
jb
in
and
fdivrs
jg
call
jno
adc
aad
and
movsl
push
jno
roll
pusha
cmpsb
mov
jb
jmp
sub
mov
pushl
test
sbb
test
push
pop
sbb
test
push
outsl
icebp
pushf
jne
pop
cmovae
mov
pushl
jae
repz
in
jns
mov
movsb
out
mov
push
lret
jne
inc
sti
mov
push
fildll
adc
dec
call
push
loopne
addr16
stc
lea
or
pusha
fmull
jg
lcall
cld
movb
test
das
xchg
mov
push
rorl
jno
inc
mov
cmp
jnp
or
hlt
jmp
dec
pop
xchg
scas
and
push
fwait
int3
loope
cmpsb
xor
les
decl
inc
mov
dec
jns
pop
jnp
movl
sub
ljmp
testl
lret
mov
clc
cmp
hlt
ret
pop
cmpsl
popl
aam
mov
mov
das
lock
call
jl
fs
sub
mov
mov
cmp
xchg
add
or
aaa
dec
data16
fs
adc
popa
mov
cmpsl
add
call
cmp
or
clc
in
push
scas
insl
popa
or
pushf
test
jnp
imul
add
mov
add
add
incl
cmp
aad
addr16
cli
arpl
out
jbe
jo
in
pushl
dec
pop
cmp
fdivrl
fmull
fisubrs
loopne
cs
ljmp
addr16
adc
fwait
xchg
xchg
nop
sub
outsb
sub
mov
mov
mov
cltd
or
inc
and
call
imul
and
add
sarl
lcall
fnsave
ret
adc
add
xor
pushl
mov
orb
test
cmp
or
jg
and
add
jmp
sti
int3
jae
mov
out
push
jo
push
sbb
mov
nop
fiaddl
loope
inc
inc
outsb
add
outsb
jno
jmp
pop
push
jb
ret
jmp
aaa
roll
scas
or
mov
push
js
xor
cmp
pop
movsb
enter
inc
push
xchg
call
push
icebp
ror
in
sub
test
mov
fstpt
hlt
dec
xchg
push
push
and
push
sahf
or
push
push
sbb
cld
or
lea
and
ret
pop
enter
push
aaa
mov
pop
pop
inc
pop
fwait
xor
icebp
and
call
cmp
cltd
in
in
hlt
push
push
je
inc
mov
out
cmpb
mov
cli
push
dec
lods
imul
lcall
mov
and
inc
mov
cmc
loop
lods
push
xchg
andl
mov
out
rcrl
ljmp
testl
in
es
popf
popf
dec
fists
sub
and
mov
jne
jns
lcall
mov
int
jp
ljmp
ret
mov
lcall
iret
dec
std
jle
or
incl
clc
adc
sbb
data16
aad
cmc
das
sbb
cwtl
push
je
mov
mov
ds
fidivs
movsb
inc
je
call
cli
adc
shrb
and
mov
inc
cld
mov
fucomip
ljmp
dec
sub
inc
sbb
inc
and
mov
mov
movl
xchg
inc
add
ljmp
or
or
push
imulb
fstpt
add
incl
scas
adc
sbb
outsb
xlat
dec
rolb
sub
push
mov
pushl
lds
iret
movsl
je
ret
xchg
rcrb
cmp
fucomp
mov
pushl
loopne
xchg
xchg
mov
in
mov
push
mov
repz
cmp
cmpsb
xor
dec
add
add
int3
shl
call
test
pusha
xor
rcl
aaa
cmp
pop
mov
xchg
stos
add
ljmp
aaa
mov
in
pop
pop
pop
imul
push
mov
fwait
jp
mov
sub
jnp
push
aad
fldt
mov
jg
jg
mov
data16
mov
cmp
repnz
push
dec
mov
ljmp
dec
or
call
cld
fmull
jae
outsl
ret
repz
cmp
xchg
add
lock
inc
xchg
dec
adc
jo
or
push
xor
sub
insb
pop
lds
addr16
iret
dec
jmp
decl
push
shl
sub
fadd
pusha
std
orl
push
pusha
divl
jge
jne
and
hlt
lods
fldl
fisubrs
or
mov
add
inc
sub
pop
in
fldenv
cbtw
scas
sub
std
lcall
sbb
sbb
lods
lods
nop
xchg
sbb
dec
es
icebp
add
inc
jge
sar
pushl
gs
lock
jle
aad
pop
call
clc
mov
leave
adc
jge
jg
mov
add
jge
ja
mov
out
pop
decl
stos
call
int3
sub
jp
loop
mov
pop
or
std
test
push
ljmp
mov
pop
mov
jmp
mov
call
xchg
mov
push
addr16
add
fstp
inc
int
cmp
pop
mov
lcall
jne
cmp
mov
lret
sbb
roll
lret
aam
stos
xchg
movsl
lock
cltd
leave
push
xchg
stos
pop
sti
inc
idivl
fsubp
outsl
aas
xlat
xchg
call
pushf
push
insl
xlat
and
daa
aam
mov
lds
push
inc
scas
fistpl
lcall
aad
popf
into
or
lock
jbe
adc
xchg
lret
push
loop
cld
rcll
call
aaa
cmpsb
aad
jno
dec
mov
ss
mov
lock
jg
xchg
test
popf
dec
xor
push
ss
jmp
pop
jl
shlb
and
outsl
fmul
mov
das
icebp
or
fisttps
xor
int3
and
icebp
decl
imul
mov
pop
aad
xchg
mov
out
cwtl
dec
decb
in
pop
sahf
jge
ss
aaa
xlat
pop
std
fsubs
imul
in
adc
mov
add
dec
xor
imul
dec
cli
lcall
jecxz
shl
movsl
pop
test
mov
jnp
aaa
xchg
out
xchg
sbb
test
cld
pushl
test
cwtl
and
nop
push
movsl
push
pop
xor
ljmp
lcall
inc
push
pushf
and
sbb
inc
adc
jb
imul
mov
mov
cmp
push
fcoml
xor
cmp
hlt
lods
pushl
jmp
add
jl
pop
bound
inc
incl
mov
fdivrs
daa
pop
out
dec
lret
fdiv
dec
fbstp
aaa
cli
adc
push
mov
fistpl
shlb
sub
mov
inc
cmp
pop
cli
pushl
dec
stos
dec
push
adc
aaa
mov
test
aaa
cli
incl
loopne
dec
mov
and
adc
mov
call
inc
and
fs
test
dec
decl
movsb
and
xor
push
shlb
inc
outsb
jl
in
jmp
test
mov
test
lods
jne
lcall
mov
lods
push
je
sbb
cmp
mov
ret
pushl
dec
inc
daa
inc
jbe
mov
scas
xchg
addr16
push
int
les
in
mov
dec
cmovno
cmp
shll
push
inc
rorl
aaa
mov
mov
and
mov
jle
mov
scas
mov
sbb
bound
sti
aaa
movsb
dec
in
call
fs
fs
push
jnp
cli
adc
cs
pop
xchg
mov
int3
and
das
cld
sub
icebp
ds
mov
sub
push
ret
movsb
call
cli
ljmp
cmp
xchg
bound
xor
push
mov
cmc
ljmp
or
add
scas
mov
and
call
incb
ret
stos
das
insb
mov
sub
mov
lods
jecxz
fs
cmpsl
mov
jl
cmp
ret
cli
pushl
ret
loope
lret
jg,pn
sub
mov
cmp
out
loop
outsl
mov
jbe
cltd
cmp
bound
jmp
cltd
mov
lods
insl
incl
icebp
cld
cmp
out
nop
dec
cmp
mov
jb
in
and
daa
aas
insl
xor
adc
inc
sub
cmp
adcb
mov
ss
inc
dec
pushl
cli
mov
xchg
or
or
pop
ljmpw
cli
lcall
mov
add
and
fcoms
lcall
xchg
insb
testl
adc
jle
out
mov
jg
sub
cmova
incb
adc
imul
mov
loopne
inc
mov
mov
mov
in
pushl
call
fwait
daa
dec
adc
fcomps
or
jno
lahf
xchg
clc
call
gs
mov
mov
sub
mov
dec
mov
insb
xlat
xor
aas
ret
in
mov
cmpsb
insb
lcall
clc
jp
stc
das
out
push
cwtl
jns
rcrl
inc
ret
push
std
mov
call
mov
das
pusha
and
mov
jg
sub
push
jo
pop
mov
cld
decl
shl
insb
xchg
mov
sar
lcall
lcall
cmp
or
adc
repz
das
popa
sub
outsl
mov
adc
or
and
jg
add
sub
test
aaa
shlb
ljmp
add
scas
sub
lds
push
jmp
repnz
cli
incl
push
pushf
xor
ds
cwtl
aam
and
test
mov
jmp
pushl
loop
jb
psrld
pop
cltd
and
and
pop
xchg
cmp
add
cli
in
lcall
xor
mov
dec
sub
mov
fisttpl
sub
jl
std
cmp
incl
add
cmp
xor
pop
xor
sub
xor
cli
call
xor
insl
mov
inc
repnz
xorl
sub
sub
aaa
clc
call
cmpsb
fstpt
mov
dec
mov
lret
repnz
movsb
mov
loop
mov
stc
sti
and
shrl
dec
jmp
lcall
sub
add
xchg
and
mov
lods
shlb
sbb
push
inc
mov
mov
fs
sbb
ljmp
std
in
repz
pop
sbb
test
cmp
scas
xor
pop
or
ss
call
ljmp
sbb
loopne
mov
mov
stos
stos
jb
inc
out
test
xchg
test
sbb
inc
fwait
js
imul
dec
xchg
shll
inc
pop
lods
jmp
arpl
push
cmp
in
das
xchg
cmp
mov
and
mov
imul
jl
leave
mov
cmc
cmpsl
inc
std
out
das
cld
call
sub
jge
movsl
pop
xor
jne
and
push
hlt
push
roll
pushl
hlt
leave
fldenv
or
xor
push
mov
cmp
jno
push
cmp
push
sub
fwait
mov
in
pop
mov
xlat
pop
and
fisubs
xchg
clc
dec
imul
es
lods
inc
aas
xchg
aas
aam
sub
mov
dec
scas
inc
inc
sub
or
mov
jg
xchg
gs
mov
loopne
jnp
js
mov
xchg
mov
sbb
pushl
clc
lea
enter
and
mov
jnp
mov
jg
outsl
icebp
mov
xor
mov
adc
sub
ljmp
push
mov
pop
mov
in
sbb
dec
shl
sub
jnp
mov
movsl
ss
push
and
sub
jecxz
cltd
sti
adc
mov
incl
aas
ja
xchg
pop
sub
ja
mov
inc
callw
mov
sbb
dec
lods
or
fsubl
lret
ljmp
push
mov
and
addr16
cmp
lcall
pushl
xor
sar
ret
and
pop
cmp
test
lcall
adc
xorb
xchg
rcrb
ss
push
fistpl
lods
cmp
jne
mov
sub
aaa
and
jecxz
sbb
shrl
xor
cld
mov
fsubrl
xchg
daa
repz
stos
inc
stc
dec
outsb
inc
in
dec
pop
cld
fbstp
loope
jb
test
pop
add
sbb
jmp
mov
push
adc
aas
pop
mov
inc
mov
lock
call
sbb
aaa
ds
and
sbb
movsb
mov
int3
mov
cmc
jg
mov
test
enter
xor
xchg
and
add
out
xor
incl
jbe
pop
scas
or
repz
sub
mov
pop
or
mov
add
xlat
push
into
lret
push
mov
loop
stos
out
call
jg
shrl
cltd
daa
popa
mov
out
xor
cwtl
in
and
incl
jb
popa
cmp
sub
push
bound
sub
mov
pop
aaa
clc
cmp
add
and
imul
mov
popa
xchg
mov
jg
mov
dec
and
jle
xor
pop
adcb
mov
jmp
and
fsubrs
sbb
jno
xchg
sub
sub
and
testb
mulb
popf
and
jmp
add
icebp
pop
xchg
js
sbb
ja
push
push
jbe
in
push
incl
repnz
jne
mov
fidivl
inc
add
dec
pusha
add
loop
lods
jae
in
lcall
cmovb
leave
icebp
incl
pop
xor
jl
push
xchg
imul
xchg
dec
mov
push
push
sbb
push
mov
filds
ja
xor
in
dec
das
xchg
add
unpcklps
mov
pushf
inc
and
push
adc
pop
stos
dec
sbb
jnp
std
je
fcoms
mov
stos
cltd
dec
fisttps
hlt
mov
rcll
loope
inc
jle
or
call
hlt
sub
decl
inc
adc
mov
mov
jae
popa
pop
push
cmp
mov
cli
shrl
fldcw
in
lret
lcall
outsb
fwait
addr16
mov
inc
and
mov
addr16
mov
inc
adc
call
cmp
xchg
out
lock
add
sub
jno
repz
test
test
and
jnp
xor
adc
mov
cmp
mov
xchg
add
jmp
rcrl
push
push
call
jae
test
clc
adcl
lds
jge
in
pop
in
mov
out
es
fcomp
jp
das
icebp
lcall
jb
mov
adc
bnd
or
dec
cmc
mov
icebp
inc
push
stos
cmp
cmp
cmpsb
rolb
incl
jmp
jge
dec
ss
cmp
das
hlt
mov
sbb
xchg
xchg
dec
fwait
aas
out
xor
mov
pushl
push
repz
shlb
cmp
mov
into
std
rcl
pop
jmp
repz
bnd
decl
inc
shrb
rorl
mov
rclb
mov
jg
add
pop
push
jns
mov
cmp
or
insb
inc
jecxz
add
cmp
lcall
inc
mov
xor
incl
adc
ljmp
dec
mov
mov
mov
dec
inc
mov
cld
mov
int
sar
dec
sub
ds
or
cmp
mov
mov
mov
lods
fmul
cs
enter
fadds
and
imul
push
out
imul
icebp
scas
or
insb
insl
arpl
cs
sub
jmp
pop
ds
fs
mov
cmp
imul
nop
das
mov
es
push
ljmp
sub
ss
jg
popa
rolb
xor
test
loopne
movsl
xchg
and
xchg
pusha
mov
scas
imul
or
cmp
sahf
inc
call
ljmp
idiv
mov
popf
xchg
test
pop
out
mov
dec
popf
jae
pop
stos
aam
aad
lods
xchg
clc
jmp
out
and
or
int3
orb
hlt
xor
cwtl
std
jecxz
pop
pop
cmpsl
push
xchg
lea
in
inc
aad
rcrl
sub
inc
decl
shll
orl
xchg
mov
dec
sub
dec
inc
pop
mov
mov
or
dec
ss
cmp
dec
cld
sarb
movsb
int3
test
xor
and
pop
sub
and
cmp
or
ljmp
test
push
sbb
sub
xor
push
xchg
pop
and
shr
or
or
xchg
movsb
mov
lea
sbb
or
out
add
loop
sbbb
mov
sub
incl
lods
outsl
test
inc
sub
mov
lret
arpl
jmp
or
jbe
xchg
cmp
adc
inc
lcall
enter
mov
ficoms
mov
cmc
add
mov
mov
add
mov
sar
ficomps
jle
dec
lods
cmc
lods
iret
push
sbb
fsubl
xchg
pop
sub
xor
adc
pop
and
mov
add
and
add
adc
test
pushl
and
mov
dec
xor
xchg
xor
loope
xor
fwait
add
jg
insl
jg
mov
ret
daa
xchg
or
icebp
mov
add
xchg
mov
pusha
sar
pushl
cli
push
aaa
xor
into
mov
lahf
fistl
xchg
inc
mov
sbb
call
inc
pushf
adc
or
rorb
dec
sbb
cmc
ljmp
std
mov
dec
pop
adc
mov
fcmovb
fstpt
push
mov
ljmp
pop
push
dec
mov
add
inc
adc
insb
dec
out
imul
fs
dec
cmp
fstps
fnstsw
jg
bound
jge
push
scas
pop
sahf
mov
sbb
add
lcall
add
mov
call
inc
cmp
out
int
push
dec
filds
lcall
decl
mov
mov
push
mov
popa
int3
xchg
ja
dec
push
fcmovne
in
or
pop
ds
lret
je
arpl
popa
pop
pop
cmp
outsl
jl
jmp
cmpsb
jecxz
popf
sbb
cs
repz
mov
incl
fs
jae
inc
add
xchg
sbb
dec
lods
adc
aad
incl
xchg
adc
adc
cld
push
mov
fsubs
out
adc
mov
jbe
sbb
clc
decl
lods
orb
jae
sbb
arpl
fidivl
decl
or
jle
cmp
jecxz
cmpsb
cmp
mov
incl
out
sub
out
daa
fmull
nop
sarb
stos
mov
push
cmpsb
aam
xchg
popf
or
sahf
push
adc
ficoms
sbbb
aaa
ljmp
and
repnz
or
repz
sarl
inc
incl
mov
popa
sub
cmpsl
int
repnz
fisttpl
scas
shll
loopne
pop
std
jmp
sbb
push
inc
pop
outsb
xchg
mov
pop
adc
clc
jg
ja
fsubs
inc
jb
mov
divl
mov
loopne
sbb
iret
or
xchg
rorl
xchg
xchg
sbb
incl
ud2
clc
jmp
pop
in
jne
and
jne
push
mov
pop
mov
dec
cmp
xchg
jecxz
adc
push
push
lcall
std
inc
aas
xchg
sbb
jae
insb
lret
or
pop
repnz
inc
jb
inc
and
sbb
cmp
pop
cli
pushl
aad
rolb
in
mov
addr16
adc
in
push
or
jmp
fs
push
push
adc
xchg
inc
inc
leave
test
inc
cmp
fbld
pop
push
jae
mov
in
adc
mov
mov
int
jg
rclb
add
in
cmpsl
lret
mov
loopne
fsts
out
push
cmc
dec
jns
inc
dec
test
inc
cmp
lock
lcall
add
jp
cmp
sbb
lods
adc
or
out
xchg
inc
jo
ljmp
mov
push
sbb
in
iret
mov
pop
push
pop
outsb
pop
adc
and
pop
ljmp
pop
jecxz
add
pushl
scas
movsl
jp
testb
mov
mov
jg
mov
push
sbb
sbb
std
call
push
fcompp
xor
pop
or
stos
int
cltd
jae
lock
clc
cmp
jg
sbb
dec
les
out
into
rcll
mov
test
push
inc
add
jmp
lret
add
and
lret
lcall
in
daa
vpmaxub
push
mov
inc
test
into
sub
jmp
xchg
sub
push
outsb
cwtl
jb
push
shll
inc
push
mov
notl
jg
or
decl
ret
sub
psubb
and
mov
xlat
fiaddl
lcall
mov
fwait
in
adc
push
jne
aad
ljmp
and
sub
rol
incl
sub
and
cmp
outsb
fldenv
int
or
lcall
and
mov
cmp
jbe
sbb
cltd
push
cmp
jp
aaa
clc
jg
mov
add
mov
sub
mov
es
incl
inc
les
xor
or
jge
inc
mov
in
call
jg
push
dec
lcall
jae
add
jmp
pop
sbb
in
lea
aam
jg
ljmp
outsl
mov
imul
add
aam
lcall
std
movsb
and
fisubl
popf
dec
mov
ljmp
jbe
mov
xor
sarb
and
mov
dec
jb
pop
popa
fisubl
lret
sti
lret
ficoms
enter
outsl
mov
xchg
iretw
or
sbb
and
dec
inc
lcallw
jmp
inc
sti
ret
inc
das
and
mov
adc
sbb
pusha
jmp
cli
cld
and
pop
fdivrl
mov
sub
sbb
jmp
lods
test
mov
sahf
and
iret
mov
add
xchg
out
xchg
decl
mov
hlt
cltd
pop
adc
add
jbe
dec
push
and
shlb
cmc
jmp
jge
jl
lea
xor
ja
jge
mov
or
sub
loopne
adc
xchg
adc
jnp
add
decl
adc
sub
adc
cmc
cmpsb
shll
imul
xor
clc
lea
mov
inc
jno
call
jp
push
lock
pushl
and
xor
sub
lea
or
jbe
add
lcall
add
add
cltd
xchg
jae
fcomps
ss
mov
cli
hlt
out
push
push
insb
mov
jg
mov
sbb
push
sysret
stos
xor
adc
or
mov
pop
cmp
dec
xor
lds
movsl
inc
xchg
pop
xchg
push
xchg
dec
movsl
outsl
cmpsl
xor
movsl
out
decb
and
sbb
mov
lds
sub
decl
std
xchg
or
test
cmc
addr16
test
or
clc
mov
call
fildll
sahf
incb
xlat
pushf
mov
add
mov
jmp
lea
pop
cmp
lcall
mov
and
call
ss
stos
push
lcall
cmpsl
xlat
push
pop
or
outsl
lcall
in
shlb
mov
adc
sub
pop
mov
test
aaa
inc
outsl
aaa
jmp
scas
cmpsb
cli
in
rcll
scas
into
hlt
jg
cld
fildll
movsl
xor
lcall
cld
xor
movsb
mov
adc
pop
dec
add
pop
dec
cmpsb
pop
jne
out
mov
lods
es
ret
lods
jno
dec
inc
inc
test
pushf
pop
aaa
cli
loopne
jge
pop
ljmp
shll
push
mov
adcb
pop
push
ja
lcall
pop
xlat
subl
mov
les
cs
pop
cmpsb
test
imulb
lock
pop
gs
adc
out
je
cmc
mov
jp
and
movsl
jbe
adc
mov
lock
mov
mov
out
leave
sbb
call
aas
jecxz
or
arpl
outsb
pop
mov
fst
inc
jmp
add
dec
icebp
mov
popf
mov
call
mov
pop
jo
negb
notl
packssdw
xchg
rolb
dec
mov
lea
decl
adc
fistpl
das
shl
inc
pop
xlat
jg
les
or
or
mov
jmp
iret
call
adc
data16
shrl
stos
divb
mov
xchg
roll
cmp
les
jg
cld
test
and
ret
aad
mov
negl
xchg
xchg
aaa
mov
ljmp
movsl
stc
sub
xlat
aam
inc
cltd
xchg
loopne
arpl
int3
mov
mov
cld
incl
fs
or
mov
negb
mov
daa
mov
ljmp
scas
hlt
mov
lret
ljmp
jg
mov
jge
sub
shrl
xchg
push
mov
xchg
jle
hlt
jp
lcall
cld
jle
xchg
sub
push
mov
mov
fsubrs
incl
mov
pop
leave
sub
xor
mov
push
scas
sub
jmp
xor
outsl
fsts
fmull
xor
add
fists
out
ljmp
jne
fs
pop
sub
aad
bound
push
pop
mov
fldenv
jnp
cwtl
shlb
inc
mov
loopne
call
inc
xor
and
movsl
adc
stos
dec
pop
pop
loope
push
pop
dec
int
nop
add
jmp
pop
pop
call
lahf
xchg
push
outsl
xchg
inc
jnp
push
cmp
es
mov
lods
ljmp
inc
icebp
loopne
push
pop
test
inc
xor
daa
popf
loope
lods
inc
fcompl
pushl
into
idivl
mov
jb
lahf
jle
das
sti
sub
mov
notb
rolb
dec
aaa
clc
jg
pop
pop
lcall
sarb
xor
jg
outsl
icebp
test
or
mov
test
lret
mov
lods
mov
pop
or
shlb
popa
pop
inc
or
movsb
ret
shl
pop
push
inc
add
add
fistpll
mov
cli
sbb
mov
adc
mov
outsb
jne
shl
sbb
out
or
mov
cwtl
adc
out
fwait
pop
lss
jp
sbb
add
les
push
dec
mov
repz
out
sub
sub
ds
inc
fisubl
fbld
mov
push
je
or
inc
jno
adc
pop
cmpsl
push
cmpsb
xorl
ljmp
fsubrs
inc
xchg
mov
arpl
icebp
sub
pop
mov
in
out
cmp
fstp
mov
clc
sar
push
mov
sahf
loope
adc
xor
orps
repz
sub
mov
enter
out
adc
ljmp
mov
xor
xchg
xor
jl
lret
icebp
inc
ljmp
out
mov
jg
decl
push
jmp
add
lcall
adc
jmp
add
call
jmp
fadd
mov
in
lods
int
and
call
lcall
popf
adc
dec
xor
sub
call
push
js
call
pop
loope
pop
loopne
aad
mov
enter
jp
mov
pusha
hlt
fcmovne
mov
lcall
push
mov
shlb
inc
pop
mov
popf
icebp
pop
enter
ljmp
xchg
fstpl
insl
inc
mov
sbb
mov
adcb
push
push
push
std
lcall
sar
adc
and
cmp
lods
psubsw
fcoml
push
mov
jmp
inc
testl
sub
add
pusha
std
scas
popa
pusha
cli
push
cld
xchg
sti
stos
lcall
ljmp
or
rclb
jge
call
bound
rorb
fsts
mov
dec
out
int
shlb
add
sub
iret
cwtl
fnstsw
jmp
push
and
fsubrl
gs
decl
mov
jg
mov
or
fnstsw
jl
ret
aad
or
sahf
pop
add
gs
clc
cli
inc
fsubr
rorl
aaa
dec
loope
and
cmp
cmc
ret
mov
out
loop
jmp
std
test
adc
pop
jne
in
les
test
ljmp
cmc
pop
mull
ds
in
in
aad
sub
je
xchg
mov
rclb
jg
mov
mov
sub
mov
inc
ds
cmp
decl
arpl
mov
lods
mov
in
jecxz
cmc
fldln2
int
iret
inc
lods
cmp
jg
addw
sahf
dec
jo
xchg
xor
pusha
xor
adc
lods
push
lods
jl
sub
jo
outsl
or
xor
cwtl
lock
jecxz
stos
movsb
call
jmp
cltd
push
mov
xchg
fbld
push
lret
sbb
cli
mov
mov
adc
inc
xlat
pop
repz
push
sbb
push
or
jnp
push
lcall
hlt
sbb
jmp
cmp
lock
add
in
mov
andl
ljmp
decl
jno
dec
and
aad
loop
adc
leave
pushf
xchg
jl
loop
imulb
xor
xchg
or
sbbl
push
push
subl
mov
rcr
stos
out
ljmp
mov
xor
inc
dec
popa
cs
dec
cs
out
jl
add
pop
mov
add
and
addr16
movsl
call
in
sub
lock
mov
xor
ljmp
mov
dec
pop
mov
sbb
stos
xlat
jle
add
jmp
xchg
cli
lods
pop
ret
std
inc
stc
add
mov
pop
jge
pop
xchg
repnz
mov
pushf
push
lret
in
push
pop
jg
dec
xchg
ror
jge
cmpl
rcl
push
out
mov
push
inc
mov
mov
lods
inc
or
cmp
adcb
pop
mov
fnstsw
stos
dec
pop
jg
ss
push
int3
out
imul
lcall
or
or
ret
outsb
loope
add
mov
pop
loope
fstpt
arpl
xchg
push
decb
and
and
popf
pop
shrb
and
movsl
jmp
sub
mov
es
lock
xor
xchg
aaa
jmp
into
lea
push
cmp
sti
mov
shl
iret
mov
mov
add
imul
xlat
mov
aas
jno
mov
pop
pushl
dec
adc
xorl
jmp
or
add
push
scas
call
std
jg
dec
cli
clc
push
adc
lret
and
lcall
jno
push
xchg
addl
pushf
inc
mov
lock
sub
cld
dec
std
call
mov
int
inc
push
sub
jo
iret
loope
bound
aad
jg
lcall
push
int
pop
adcl
mov
bound
xchg
in
cmp
push
hlt
push
adc
xchg
stos
mov
push
ljmp
repz
imul
cmp
mov
dec
roll
jb
aam
cltd
in
mov
fldenv
xchg
xchg
mov
popf
adcl
decl
push
vmptrst
in
rolb
push
dec
mov
mov
aam
push
les
xchg
popf
jmp
jns
pop
and
mov
push
outsb
pushf
cmpsl
pop
jae
push
add
pusha
xchg
mov
into
mov
sarb
pop
inc
fcoml
repz
decl
pop
clc
fldt
cmc
adc
inc
leave
add
movsl
mov
dec
ljmp
push
jo
in
lcall
pushl
inc
in
cmp
subb
ret
mov
xchg
or
jg
or
int3
test
popa
rol
in
mov
fmuls
outsl
ljmp
cld
call
or
jmp
mov
je
or
push
xorl
mov
out
cld
mov
jns
mulb
decl
or
ret
jecxz
movsl
loopne
out
pop
call
cmc
ja
ljmp
mov
push
cmp
push
mov
sub
scas
cld
pushf
sub
fiaddl
or
pushl
xchg
gs
jl
ror
in
adc
cmc
jo
cmp
xchg
and
testb
pop
adc
mov
add
decb
or
mov
sub
push
ljmp
cmc
jmp
ret
das
cmpsl
ljmp
ja
test
add
mov
mov
push
pushl
fwait
pop
mov
call
xchg
aad
outsl
out
jae
mov
fidivs
push
cs
ret
sahf
daa
fucomip
jg
push
enter
mov
mov
sub
mov
cld
ja
movsl
mov
sbb
js
add
mov
add
jmp
cmpsb
lcall
or
push
lock
pushf
data16
jb
movsl
or
jge
or
movsl
inc
int3
fisttpll
sbb
xchg
mov
sar
sub
sahf
insl
jne
cmp
in
in
in
rcr
push
movsb
call
int
inc
sub
jle
imul
mov
pop
loop
lcall
inc
jo
lahf
jl
sbb
add
mov
scas
movsl
scas
xchg
outsl
lock
add
insb
pop
xchg
dec
stos
fnsave
xor
jg
add
scas
lock
or
mov
scas
dec
add
mov
adc
and
add
pop
ljmp
subb
jae
xor
inc
or
ss
mov
mov
gs
repz
xchg
mov
loope
mov
mov
ljmp
adc
inc
pop
ja
fcoms
ja
addb
or
and
xchg
nop
loop
dec
loopne
ljmp
in
push
test
pop
cld
aaa
test
mov
xor
cmp
push
xor
bound
fnstenv
ror
push
mov
psubusw
mov
push
sub
lds
sbb
ja
lcall
cmp
mov
sahf
aam
cli
ret
or
lock
xchg
out
or
test
clc
insb
pop
mov
mov
sahf
loopne
shll
movsl
test
pop
leave
jecxz
out
xor
jmp
addb
push
popa
movsb
mov
adc
push
stos
mov
inc
dec
sarl
mov
fwait
cwtl
and
pop
cmp
adc
sub
stc
sahf
hlt
pop
rolb
cmp
or
cmpsl
divl
shlb
xchg
mov
add
aas
call
es
sub
mov
dec
pop
nop
daa
imul
cmp
pop
inc
push
scas
call
jg
call
sub
bound
adc
mov
pushl
sub
mov
out
std
mov
mov
pop
rcr
pushl
pusha
int3
pop
inc
push
and
sbb
jmp
cmp
or
pop
ljmp
sub
jp
lock
sub
insl
aam
ljmp
push
flds
push
in
je
int
aas
cmp
add
aas
mov
imul
gs
push
xchg
or
inc
call
enter
mov
jl
mov
xor
mov
mov
call
pushl
or
sbb
movsb
sub
fistpll
test
add
in
aas
cli
push
out
jmp
mov
mov
xor
arpl
mov
clc
call
pop
dec
inc
addr16
sahf
ret
loop
jno
jg
repz
popa
cmp
push
push
loopne
ljmp
pop
and
sub
aaa
nop
lret
or
icebp
jecxz
cmpsl
adcb
xor
pop
loop
ljmp
sbb
jle
xor
dec
outsb
xchg
into
stos
lcall
into
or
add
sarl
test
fs
cs
jg
mov
inc
mov
fisubrs
mov
sahf
or
xchg
adc
dec
pop
dec
add
mov
testl
aad
cli
push
lods
cmp
xor
test
sahf
mov
jno
push
and
push
push
or
popa
inc
mov
adc
cmpl
xchg
adc
jg
jmp
data16
xor
mov
mov
cltd
pusha
mov
imul
das
sbb
ljmp
jns
test
inc
mov
aam
inc
or
imul
cmp
adc
dec
mov
mov
or
ret
orb
arpl
inc
push
sub
sub
jnp
mov
push
lcall
dec
sub
adc
ret
mov
aaa
push
bound
adc
push
dec
cld
jmp
mov
fneni(8087
sub
adc
jp
dec
int
push
loop
incl
pop
bound
ja
xor
adc
rcrb
xchg
xchg
scas
fbstp
ret
movsl
loope
gs
das
xchg
repz
notb
mov
lea
clc
decl
xor
xor
inc
mov
inc
ljmp
cmp
cmpsl
int3
in
mov
push
ds
in
gs
add
jmp
pushf
insb
or
mov
cld
mov
ret
sub
cli
imul
sbbl
incl
mov
dec
cmp
inc
xchg
mov
roll
dec
pushl
push
aaa
and
fistps
mov
andl
sbb
cmp
mov
lods
push
lock
cmpsl
inc
outsl
jle
sbb
mov
sahf
inc
mov
sbb
cmpb
sub
aam
jb
test
test
call
add
push
sbb
mov
loop
lret
jp
clc
mov
loop
inc
adc
mov
roll
fidivl
std
aaa
xchg
call
pushl
lods
sahf
in
mov
out
xchg
add
xchg
dec
out
xchg
jb
xor
out
fwait
dec
adc
cmp
shll
lret
xor
cltd
sub
ds
addr16
inc
mov
repz
decl
mov
mov
jecxz
ja
and
mov
dec
dec
jne
mov
inc
loope
push
mov
and
out
mov
push
std
push
add
daa
icebp
fwait
scas
out
outsl
cmc
or
mov
cli
cld
mov
je
jmp
pop
fbld
ljmp
out
mov
imul
mov
iret
lds
pushf
jg
lret
xor
cmp
mov
cmpsb
ja
or
cmp
push
sub
insb
fidivrl
mov
push
dec
jg
ret
sti
aaa
or
fldl
dec
movsb
ss
adc
mov
rcrl
pop
xorb
cmp
mov
insb
xchg
movsl
sar
leave
xlat
and
push
ret
lock
clc
lock
hlt
mov
inc
and
jg
dec
jp
ja
stc
cmpsb
sub
xor
adc
sub
sbb
pop
call
jnp
fstp
pop
sahf
or
mov
std
adc
js
jg
call
sub
jns
inc
inc
sub
and
lcall
jmp
xor
jmp
cmp
lods
mov
pop
jnp
jge
outsl
fwait
iret
cmp
jp
cs
mov
mov
test
addr16
or
test
leave
enter
incl
insb
cmpsl
jno
out
push
pop
dec
pusha
pop
add
jb
ljmp
inc
pop
cs
mov
scas
loopne
push
sbb
mov
pop
inc
mov
or
xor
insb
insl
adc
call
incl
das
arpl
cmp
mov
imulb
aas
fildl
adc
push
mov
in
jno
fs
inc
push
andl
push
outsl
dec
mov
arpl
or
sbb
loop
in
out
adc
push
ds
xorb
and
add
sbb
lock
inc
std
call
clc
sub
cs
fwait
sbb
xlat
out
into
add
sub
addl
adc
pushf
dec
xor
iret
nop
push
dec
inc
loop
jl
xchg
push
sbb
push
test
addr16
ss
mov
jne
fcoml
push
push
inc
data16
and
and
sbb
test
packssdw
ja
pop
pop
jae
call
push
dec
clc
cmp
outsl
call
sbb
arpl
rolb
test
inc
adcb
sub
xchg
movb
push
shlb
jbe
fsts
pop
fstl
fimuls
push
or
lea
std
loopne
fldt
mov
mov
xor
cmpl
scas
orb
add
mov
fs
adc
sub
imul
clc
pop
loop
cmp
pop
pop
xchg
fldt
adc
mov
std
push
mov
jmp
jle
xor
int3
push
mov
fcomip
sbbl
mov
lret
dec
into
jmp
pop
add
mov
jmp
js
sub
fadds
insb
aam
test
inc
sbb
adc
insl
mov
adc
or
into
testb
dec
notl
ret
lock
sub
fldlg2
mulb
stc
ret
push
mov
or
mov
push
inc
mov
jecxz
call
mov
ljmp
pop
mov
lret
cmc
in
add
das
jecxz
jecxz
sub
jle
incl
js
xchg
adc
mov
jno
int3
mov
outsb
insb
out
test
jg
inc
icebp
sbb
rolb
cmp
fs
mov
ljmp
hlt
call
sub
pop
or
stos
jbe
loopne
aam
mov
or
cmp
shr
mov
repz
aas
mov
cmc
ss
mov
xchg
and
decl
mov
into
pop
adc
outsl
mov
incl
push
loop
mov
sbb
cmp
popa
xor
jl
lret
shl
call
aaa
aam
dec
cli
int3
roll
arpl
call
cmp
fcoms
aas
and
xchg
cltd
mov
jmp
movsb
xor
mov
mov
out
push
shufps
aam
neg
mov
push
sub
mov
mov
nop
pop
clc
call
inc
xchg
insl
adcb
aaa
xor
sbbl
nop
jo
cwtl
stc
jae
aaa
sti
loop
lock
imul
jbe
ja
enter
icebp
int3
icebp
jg
fbstp
cmp
stos
jae
jmp
dec
inc
test
popf
test
pop
ret
fwait
mov
push
cmc
lods
shlb
xor
jmp
scas
xor
sub
mov
and
aad
inc
and
repz
lret
push
mov
jge
add
cld
add
dec
mov
sti
subb
cltd
repnz
mov
xorb
jge
pop
sarb
xchg
or
inc
dec
bound
sbb
and
test
incl
cmc
mov
adc
xor
cltd
or
fidivs
decl
stos
or
aad
std
sarl
cmp
dec
and
out
adc
outsl
cmc
decl
mov
pop
sar
xlat
pop
adc
or
int
jg
in
lock
ja
hlt
mov
pop
mov
jmp
adc
jecxz
mov
aaa
stos
iret
je
out
cmp
lods
rolb
add
ljmp
adc
sbb
pop
mov
stc
dec
mov
ds
imul
jmp
movsb
dec
or
jbe
rcrb
cmpsb
jmp
ret
jg
fmull
mov
mov
dec
mov
cmp
out
mov
test
and
fldt
daa
mov
mov
mov
std
xchg
sbb
mov
inc
mov
lock
jg
aam
push
mov
xlat
cs
push
cmc
jl
aas
inc
jecxz
ds
in
push
pop
std
pop
sub
lret
cld
or
stc
push
xchg
call
stos
adcb
or
es
mov
pusha
push
dec
outsl
icebp
pushl
jo
xor
push
in
jne
addb
xor
pushl
pop
dec
dec
xchg
and
mov
cmp
sti
iret
enter
cmp
dec
fsubrl
je
lock
pushf
hlt
inc
mov
mov
dec
fwait
jp
jmp
aaa
fidivs
and
xchg
jmp
pushf
test
ljmp
std
rorb
pop
add
pop
add
repz
dec
push
lret
mov
ret
jg
stos
outsl
jl
sbb
cmp
js
add
adcl
pop
xchg
xchg
in
dec
fucomip
mov
mov
jno
test
dec
call
insl
ds
test
call
inc
stc
lret
daa
std
mov
jp
push
pop
pop
adc
jmp
aam
mov
dec
sbb
movl
movsl
mov
mov
lods
pop
pop
dec
ficompl
dec
nop
xor
sahf
cmp
pushl
sbb
enter
xchg
sbb
test
jno
movsb
in
leave
inc
fstl
mov
cmpl
cmp
cwtl
rcrb
jmp
arpl
jo
xor
in
push
sbb
clc
cld
jbe
jne
dec
in
xchg
dec
sbb
push
lret
test
pop
std
ljmp
pop
insl
adcl
mov
jne
mov
push
sti
pop
loop
jmp
movsl
fptan
jno
icebp
mov
outsb
lret
lods
lods
adc
push
lcall
cld
call
adc
in
pop
push
scas
jle
mov
mov
mov
add
js
loopne
std
in
jl
lea
incb
lahf
cmc
dec
mov
cmc
stc
addr16
sbb
js
cmp
orb
jmp
dec
fcoms
mov
push
or
pop
and
in
xlat
lds
xor
decl
push
ret
xor
adc
push
fidivl
pop
js
mov
fs
lcall
or
aaa
mov
xchg
cmp
xchg
jp
add
mov
adc
fucomip
decl
adc
sbb
icebp
outsl
inc
mov
rep
test
stc
mov
cmc
jmp
dec
xor
jmp
sub
mov
jg
call
inc
mov
in
and
aaa
fiadds
jg
sarb
push
inc
loopne
pop
stos
mov
icebp
ljmp
sahf
rolb
in
and
add
scas
inc
sub
popa
fwait
and
mov
ret
mov
daa
push
pushf
cli
aas
lcall
std
push
xlat
mov
ja
mov
adc
mov
cmovle
pop
loope
xchg
outsb
mov
pushl
mov
js
mov
adc
ljmp
out
ljmp
fnstenv
lods
jne
fdiv
fstpt
fsubrl
std
push
imul
mov
adc
xchg
sbb
cmpsl
popl
mov
add
aaa
mov
jle
daa
add
fcomps
mov
ja
scas
shlb
decl
std
jge
je
movsb
cli
pushf
jp
popa
inc
cltd
int
jp
mov
sub
pop
enter
aas
shr
push
out
leave
lcall
hlt
sbb
cmpsl
cmpsb
xor
lcall
aad
popf
loop
cld
push
pushl
sbb
jmp
mov
cmp
loop
jns
minps
lahf
loope
loopne
das
xor
pop
xchg
mov
or
sub
cmc
add
fs
jge
jmp
jmp
mov
mov
lods
lahf
inc
aam
enter
fiaddl
mov
ja
push
xchg
mov
and
xor
ss
fcoml
test
jo
addr16
inc
in
stos
outsb
xchg
xchg
pop
gs
rol
into
decl
test
xor
outsl
pop
scas
inc
outsl
lret
push
pushf
dec
cld
sub
cmp
jg
dec
cld
loopne
add
lahf
sub
stc
bound
inc
inc
adc
cmc
lcall
mov
add
and
pop
js
pushf
fcoms
mov
imul
mov
sub
push
sbb
ss
shrb
ljmp
icebp
decl
pop
mov
push
and
cltd
cltd
mov
adc
jae
call
shll
mov
mov
pop
xchg
push
lds
pop
xchg
cltd
xchg
call
lcall
ret
jne
out
lcall
aad
pop
decb
inc
dec
cmpsl
enter
pop
ljmp
jg
jb
aaa
dec
pop
lret
mov
inc
js
loopne
inc
jno
mov
cmp
adc
sar
pop
lds
push
jecxz
sub
out
movsb
lods
rorl
xchg
or
test
out
add
add
imul
add
popa
adc
lods
vmptrld
inc
adc
pop
pop
jl
rcr
xor
xchg
inc
rorb
inc
adc
jg
xchg
xor
jns
out
cmp
loopne
sbb
decl
loope
cmp
in
lret
mov
push
in
lods
mov
mov
fcmovnb
mov
cmc
fisubl
add
lock
push
pop
mov
test
insl
out
inc
adc
loop
dec
jg
shr
repz
add
sub
fstpt
jle
lock
inc
les
mov
pop
sbbl
lcall
or
aaa
jle
filds
ss
insb
mov
loope
mov
out
ret
sbb
arpl
mov
aad
jmp
fcoms
mov
push
jg
mov
add
dec
scas
xchg
jmp
jmp
scas
jno
jbe
jg
dec
in
dec
cmp
xchg
add
scas
cmc
xlat
jae
daa
mov
ja
negl
jmp
mov
cmc
enter
sti
data16
icebp
mov
mov
adc
mov
mov
pop
mov
mov
outsl
xchg
mov
cmc
adc
testl
inc
lret
or
cmp
lods
test
and
jg
lcall
jae
sti
jns
mov
stos
loop
aas
stos
lods
les
das
cmp
test
int3
add
lcall
pop
add
testl
and
jns
pop
push
mov
mov
dec
pop
dec
clc
pop
add
in
mov
fwait
lds
add
std
jb
clc
adc
mov
test
call
jae
adc
shrb
mov
lahf
insb
icebp
das
push
cli
adc
fnstenv
lock
ret
push
or
outsl
mov
cmp
mull
sti
adc
les
sbb
les
std
mov
movsb
or
cli
jmp
inc
mov
xlat
jb
repz
pop
adc
shrb
pushw
in
sbb
mov
jo
xor
bound
call
inc
cwtl
and
loope
jae
rcrl
mov
xchg
lds
adc
cli
xchg
cmp
xchg
adc
pop
xchg
sbb
incl
aaa
mov
outsb
cmp
xchg
lea
std
pop
sbb
rcrb
cld
nop
xchg
movsb
js
dec
cmpb
jcxz
lahf
xor
jmp
loopne
rcrl
lods
fnstcw
orb
mov
cmpsb
and
decl
movsl
fdivs
aas
bound
push
cltd
outsb
in
xor
pop
or
sub
call
in
ja
mov
ja
ljmp
lret
popa
mov
stc
cltd
call
jecxz
jb
cli
sahf
push
shrb
outsl
loope
dec
cmc
std
xor
pop
aaa
decl
sub
xchg
mov
jp
cli
dec
xchg
push
xchg
cmc
ljmp
ss
jmp
jl
outsb
inc
mov
dec
xor
dec
cmpb
mov
sub
std
push
sbb
xchg
loop
sbb
adc
xchg
pop
lods
out
cwtl
mov
xor
cmp
cmp
pop
inc
or
in
js
pop
push
mov
lods
jg
mov
xchg
mov
pop
push
cmpl
scas
sbb
sbb
xchg
jl
push
mov
add
sub
ljmp
cli
jne
das
and
cli
out
pop
pop
push
mov
js
sub
insl
adc
clc
je
jmp
cwtl
and
and
aam
out
or
dec
lret
mov
add
jl
mov
mov
mov
sahf
loopne
stos
mov
into
and
aas
sar
jp
or
clc
pop
push
fdiv
std
lret
mov
mov
fildll
push
test
les
jbe
loopne
jb
mov
and
and
outsl
icebp
lcall
jb
orl
or
repnz
mov
mov
ljmp
push
lods
mov
lcall
subl
call
push
adc
fsts
mov
imul
aas
jns
daa
lahf
jg
mov
sub
jne
ret
or
sti
add
lahf
in
scas
sahf
ljmp
outsl
lea
inc
in
test
repnz
in
push
cwtl
aas
xor
ljmp
jo
jle
popa
mov
testl
and
xchg
gs
add
mov
mov
mov
data16
xor
pushl
mov
mov
cli
into
pop
jmp
cmpb
in
lret
stos
arpl
sbb
inc
sub
or
addr16
fidivs
inc
or
mov
fwait
xchg
in
iret
cmpsl
pop
mov
mov
int3
xor
clc
call
in
loopne
inc
mov
sub
loope
push
adcl
fmulp
loope
stc
ljmp
fstl
lds
jb
mov
popa
mov
jb
in
inc
aaa
clc
loopne
in
fistpl
jns
xor
out
xchg
jg
lcall
stos
jmp
test
push
sahf
ja
sub
jecxz
mov
call
sub
xchg
push
pause
enter
loop
dec
sbb
sbb
decl
pusha
dec
sbb
lods
hlt
stc
sbb
in
faddl
es
andb
stos
or
loope
lea
mov
orl
pop
add
adc
cmp
jg
mov
xor
dec
jo
pop
cld
push
adc
aad
push
cmp
cmp
pop
ljmp
ret
ljmp
add
mov
push
sbb
nop
cmp
add
sbb
in
cmp
dec
shll
scas
inc
push
rcl
pop
push
into
shlb
or
xchg
push
inc
xor
mov
push
and
daa
cmp
je
stos
pushf
aaa
or
adc
mov
jp
adc
ret
dec
test
hlt
lea
inc
lret
xorb
push
mov
ret
mov
inc
jmp
pop
xor
jmp
jne
sub
inc
outsb
das
push
xor
pop
jecxz
and
dec
cld
ljmp
mov
cmc
es
push
pop
es
dec
xor
xor
clc
jmp
fsubr
cmpl
and
test
scas
test
adcl
push
pop
xchg
stos
inc
xchg
int
dec
xchg
aaa
pop
lcall
das
cmc
mov
popl
mov
aaa
jecxz
decl
std
test
aas
adc
andb
lcall
ljmp
clc
adc
decl
mov
fnstsw
jmp
mov
divb
mov
jmp
cmp
lcall
push
pop
fiadds
mov
bound
sub
mov
lcall
cmp
add
icebp
mov
sub
adc
push
daa
scas
mov
mov
loope
sahf
mov
lods
pop
mov
push
mulb
das
push
std
and
clc
movsb
jg
mov
roll
sbb
lods
fdivr
incl
pop
inc
ss
pop
hlt
pusha
pusha
push
lods
push
xor
int
out
or
outsb
add
push
ficomps
mov
xchg
or
aas
add
xchg
jg
lret
sbb
xchg
pop
inc
push
add
std
addr16
ljmp
fs
mov
pop
mov
xchg
or
rcrb
ljmp
cltd
cld
jmp
in
mov
dec
xchg
mov
dec
mov
push
inc
xchg
push
xchg
int
sbb
lea
pop
mov
cmp
inc
hlt
call
dec
insb
xlat
cmpb
add
incl
outsb
scas
lahf
jae
or
mov
inc
add
call
inc
push
int
nop
push
xlat
cmp
fsubrl
xchg
mov
sub
jmp
sahf
mov
sbb
repz
mov
mov
fldenv
mov
sti
jbe
or
nop
arpl
loopne
std
mov
pop
xchg
and
mov
sbb
cltd
or
fildll
pusha
xor
cld
pop
stos
mov
push
fidivs
push
xchg
and
mov
pop
mov
inc
loop
je
xor
test
lcall
in
les
loop
jnp
lods
pusha
addr16
mov
pop
adc
ror
and
cmpsb
inc
adc
movsl
incl
adc
or
cld
and
inc
repz
and
mov
mov
pushl
sub
idivl
jno
add
leave
out
test
push
jne
dec
cmpsb
lds
flds
decl
adc
dec
dec
decb
dec
jp
mov
push
mov
cmp
loopne
adc
and
mov
and
jge
jmp
sti
inc
imul
jmp
jmp
adc
lds
add
call
pop
sti
fwait
and
push
mov
pop
ds
mov
aad
call
mov
inc
lock
and
pop
insl
mov
mov
mov
sbb
xorl
fcom
fisubrl
stc
sub
test
add
mov
push
icebp
jg
sbb
pop
orl
push
das
or
cmp
jg
das
cwtl
stos
and
xor
jp
mov
push
cmp
push
cli
out
scas
and
lahf
push
sbb
in
cmpsl
jp
push
loop
jmp
loopne
cmp
jb
daa
dec
xor
jecxz
mov
scas
pushl
ficoms
into
sahf
cmc
or
inc
gs
scas
mov
cs
fmull
pop
loop
jo
fiadds
out
das
aaa
mov
cmp
and
mov
xor
mov
sbb
icebp
cs
cld
sub
in
push
outsl
std
xchg
push
adc
or
outsl
mov
loop
sub
and
sbb
add
call
sbb
jns
movsb
adc
jmp
nop
mov
cmp
cwtl
mov
xor
push
jbe
adc
sar
call
xor
in
or
dec
ja
je
pop
mov
stc
in
test
ja
call
mov
js
iret
repnz
or
iret
push
nop
lock
jmp
push
sub
cs
call
cwtl
loope
push
mov
mov
and
insl
dec
roll
xlat
adc
push
jno
xor
jmp
incl
xor
je
dec
in
mov
push
daa
fsub
jae
std
jg
dec
adc
jl
outsl
imul
mov
mov
out
push
outsl
mov
decl
xchg
fcmovb
or
xor
insb
test
jg
arpl
fucomip
fdiv
cmp
mov
imul
leave
mov
jmp
dec
lods
fidivrs
cmpsb
mov
loop
xchg
jge
mov
hlt
loope
pop
jno
xor
mov
mov
out
mov
add
push
clc
stos
inc
mov
rcrb
inc
lahf
ret
cmp
sbb
adc
cld
cmpsl
cli
push
fsubr
cld
xlat
rol
inc
in
fisttps
in
or
push
push
dec
shr
stos
test
xchg
nop
lcall
xchg
mov
inc
shrl
loope
scas
repz
pop
inc
ds
jns
pop
gs
mov
addr16
sbb
call
sub
int
sbb
mov
jg
xor
ljmp
loope
sti
add
sub
mov
mov
adc
mov
pop
xchg
dec
das
rorb
dec
movsb
inc
outsl
aas
pop
arpl
xchg
mov
ss
push
cli
sti
je
test
lods
or
stos
jge
ret
xor
outsl
and
dec
xchg
cli
xor
pop
adc
sub
into
adc
decl
nop
jns
pop
cmp
mov
cmp
and
jg
ljmp
aam
push
dec
in
in
sti
jg
imul
dec
cli
ds
in
sbb
cld
mov
jns
arpl
xrelease
adc
ja
mulb
mov
fnsave
fisubs
lcall
fistl
mulb
das
cmc
push
rcr
or
jb
inc
push
pop
jp
mov
pop
clc
aas
incl
pop
push
mov
aas
popf
aad
mov
xchg
mov
addr16
les
stc
sbb
js
pop
ljmp
jo
or
fsubp
pusha
mov
push
sub
adc
sbb
test
movb
fnstenv
sahf
mov
inc
outsl
push
sbb
cmp
lds
stc
mov
push
mov
add
arpl
mov
pushw
testb
mov
or
dec
repz
xchg
out
or
clc
lcall
gs
mov
popf
in
cmc
iret
dec
jns
icebp
pop
mov
or
dec
and
mov
inc
xor
imul
pushf
jge
push
push
xchg
cmp
push
daa
xor
incl
dec
adc
pusha
insb
sub
pop
cmp
je
popa
pop
sub
or
or
adc
call
mov
mov
xorb
mov
push
pushl
and
gs
out
hlt
ret
xor
dec
jmp
ret
test
gs
cltd
lcall
mov
adc
aaa
dec
into
dec
sub
out
sub
pop
sbbb
jmp
add
hlt
dec
shrb
xchg
dec
inc
inc
mov
xchg
loopne
inc
aam
ljmp
cltd
sbb
sbb
notb
sahf
cltd
pop
xchg
xchg
push
out
xor
push
and
call
rorl
idivl
mov
cmpsb
hlt
pop
test
mov
mov
rcr
xchg
sbb
dec
ljmp
lcall
push
ror
mov
cmpsl
fbld
sarb
add
or
ljmp
lock
push
cwtl
incl
loop
fcmovnbe
clc
fsubrl
inc
sahf
das
loope
mov
mov
loope
cmp
cmp
mov
jnp
nop
popf
rorb
sub
pop
sub
mov
inc
out
jg
bound
pop
inc
frstor
or
pushl
cmp
mov
cld
xor
mov
or
jle
lea
sub
pop
cmp
cmc
sbb
hlt
aaa
les
dec
aaa
ljmp
cmp
test
push
std
adc
push
jae
pop
push
add
xor
dec
adc
addr16
clc
mov
mov
in
into
enter
cmp
in
add
lcall
adc
cmp
jo
sahf
popa
mov
iret
jbe
stos
cmp
sahf
fdivr
xchg
out
cli
incl
adc
xor
dec
cmc
mov
outsl
movsl
pop
scas
push
adc
ret
lods
loop
mov
sub
lods
aaa
sbb
js
or
int
sub
test
das
xchg
out
push
dec
stc
jbe
inc
push
mov
sub
ljmp
aad
decl
lods
fwait
cmpsb
sbb
in
push
mov
std
xchg
aas
dec
mull
ffree
jne
inc
and
lock
mov
adc
scas
aaa
clc
decl
xchg
repnz
mov
mov
nop
push
pop
insl
xchg
arpl
jmp
pop
and
jmp
loop
mov
das
mov
and
lods
lcall
sub
dec
fnsave
lock
fisttps
in
outsl
jl
inc
pushl
incb
inc
lret
test
lds
or
inc
sub
scas
adc
or
outsb
mov
mov
decl
leave
xor
incl
push
jb
dec
jae
sbb
or
and
pushf
jle
xchg
icebp
lcall
std
jge
cmpsb
jle
xor
pop
in
ror
popf
cmp
or
mov
in
inc
push
sar
call
or
cltd
int3
mov
lods
fs
loop
push
es
incl
cld
in
test
sub
jmp
mov
jno
add
jns
imul
int
xchg
cwtl
dec
inc
mov
insb
shrb
dec
cwtl
xchg
shr
fidivs
jp
jl
add
mov
ljmp
lock
sub
mov
or
pop
clc
fistpll
cmc
fs
lea
sti
lock
jge
incl
mov
mov
inc
pusha
repnz
andl
repnz
jl
call
dec
jmp
imull
lcall
ret
aam
jg
jmp
cmp
mov
add
fprem1
lss
pop
add
pop
mov
pop
daa
repnz
push
call
sub
fdiv
in
dec
push
dec
push
sbb
jg
call
cmp
cld
jge
xor
or
fmul
cmp
lock
jg
inc
mov
rcrb
dec
mov
push
xchg
pop
loop
jmp
xchg
pop
ljmp
fildl
jmp
dec
mov
dec
mov
out
nop
sbb
xor
adc
es
inc
inc
sbb
add
in
and
icebp
push
push
pop
inc
decl
call
pop
fnstsw
stos
add
movsl
call
ss
pushl
push
sbb
xor
mov
test
inc
sub
loopne
stos
test
gs
mov
mov
clc
imul
ret
loope
rcrl
adc
xchg
adc
decl
push
loope
or
scas
test
lcall
aam
sub
cmp
or
lret
pop
xor
fsubrs
enter
pushl
cmovle
pop
push
mov
adc
inc
jnp
xchg
mov
adc
aaa
mov
mov
movsl
movsl
mov
jb
push
xchg
jle
ficomps
adc
in
icebp
pushl
incb
pushf
insb
shl
sub
xchg
dec
push
arpl
rorb
ljmp
sbb
inc
xchg
mov
fidivrs
popa
fwait
fstps
icebp
jge
jno
lcall
jns
sub
jae
lahf
loope
sub
int3
sub
stos
out
dec
or
ljmp
pop
mov
nop
jecxz
xor
and
or
xchg
mov
test
push
cltd
inc
scas
lds
lods
inc
fidivl
lcall
sub
andl
scas
push
xor
pop
cmp
add
call
push
dec
dec
pop
popf
movsb
popa
xor
ds
sbb
mov
xor
mov
das
repnz
mov
lcall
das
cmpsb
js
sub
inc
mov
stos
incl
repnz
fdivl
out
ficoms
popf
aaa
insb
lea
ljmp
test
mov
pop
int
movsl
fmulp
add
push
cmpsl
in
or
pop
loopne
outsl
mov
imul
js
pop
add
fwait
pop
inc
daa
mov
loop
jg
jnp
pop
and
sub
or
test
jg
mov
fadd
sub
test
jg
lcall
dec
int3
inc
or
mov
add
inc
adc
decl
jae
inc
dec
stos
aaa
insl
xchg
out
out
sub
jno
daa
mov
aam
hlt
pop
loopne
push
scas
pusha
inc
cmc
les
call
pop
pushl
jge
push
ljmp
fistps
jmp
call
loop
inc
enter
inc
inc
mov
lods
orl
jnp
adc
loop
jp
scas
xchg
mov
je
pusha
xor
ljmp
fbld
jg
outsb
daa
data16
adc
fadd
or
cmp
xor
sub
cmp
inc
mov
call
cmp
mov
add
pushl
cmp
adc
fimull
pop
mov
movsl
rcll
std
fwait
das
add
pop
call
out
mov
std
adc
xorl
lods
pop
icebp
mov
call
pop
mov
shll
and
mov
fsts
adc
cmp
ret
icebp
ljmp
addr16
xchg
fisubrl
push
sbb
push
fadd
stos
rcrb
ljmp
movsb
cltd
fistl
pop
sarl
imull
repz
call
scas
inc
imul
cmp
sub
mov
incl
hlt
hlt
fcomps
ljmp
dec
jmp
icebp
mov
lret
in
xchg
push
ret
cmpb
push
test
cs
das
cmc
lcall
fdivrl
dec
push
data16
stos
negb
fisttpl
dec
dec
cld
ljmp
adc
cli
movsb
inc
mov
pop
adc
call
clc
or
and
sbb
add
data16
imul
decl
push
xchg
cmpsl
sbb
or
rcrb
dec
adc
jmp
mov
and
in
jb
cwtl
in
jl
mov
dec
adc
mov
mov
subb
rolb
imul
fnsave
icebp
call
cwtl
stc
lret
mov
xor
sub
in
aam
call
pop
xor
cmp
xor
ljmp
out
mov
mov
sbb
or
test
arpl
pop
pop
add
adc
adc
lods
xchg
and
push
nop
mov
xchg
arpl
incl
pop
fistps
in
stc
cs
daa
jnp
or
data16
popa
sbb
arpl
arpl
addr16
pop
sar
lcall
decl
out
loopne
add
rcll
push
xor
scas
lcall
jge
loop
les
or
iret
xchg
cmp
mov
mov
clc
sahf
xorb
xor
test
xorl
inc
fmuls
pop
xchg
in
out
add
das
mov
roll
call
xor
xchg
roll
push
add
and
clc
ret
jecxz
xchg
adc
incl
out
and
rorl
and
sub
lcall
jmp
mov
cmp
mov
test
daa
not
and
pop
and
callw
in
pushf
xchg
pop
into
icebp
cmp
call
movsb
push
lcall
incl
bound
and
pop
roll
nop
or
stos
jg
mov
and
mov
test
jp
mov
inc
decl
pop
push
or
mov
outsb
into
pop
ss
inc
mov
push
push
jge
mov
lcall
in
add
mov
stc
icebp
mov
call
sbb
push
negl
in
mov
xchg
cmc
or
bound
jmp
lcall
cmp
push
insb
pop
inc
sbb
pop
fistpl
lds
lds
mov
test
aad
sbb
enter
push
push
or
mov
mov
pop
mov
imul
stos
gs
jmp
insb
push
push
movsl
lcall
sbb
shrb
push
repz
incl
sub
loop
lcall
outsb
jne
mov
inc
xchg
jbe
jmp
je
xor
lcall
loopne
push
fsubrl
xor
addr16
sub
jl
sahf
leave
in
cmp
or
or
adc
and
mov
xchg
aad
incl
mov
push
lea
inc
xor
aam
stc
sub
imul
hlt
dec
and
jg
jne
ret
sub
stos
test
push
xchg
daa
push
and
stc
mov
je
decl
mov
rcrl
and
mov
or
push
pushl
jecxz
test
imulb
ret
xchg
das
cmp
imul
call
mov
popa
jmp
push
outsl
mov
sti
dec
pop
and
jg
mov
mov
in
arpl
and
sbb
in
lods
xor
std
call
xor
mov
add
sbb
add
std
ret
cs
jb
call
jne
xor
cmp
call
pop
mov
cmp
xchg
sbb
sbb
int3
pop
jae
inc
lret
add
and
xchg
cld
jae
inc
lock
ljmp
xchg
xchg
mov
mov
aaa
push
lea
cmpsb
inc
mov
adc
jge
mov
decl
mov
adc
cwtl
and
pop
pop
mov
cmc
cmp
pop
cwtl
mov
adc
roll
sti
aad
add
inc
lret
incl
in
mov
cltd
and
cs
mov
push
sbb
fdivrp
push
push
jmp
add
repz
icebp
int3
out
pop
jmp
pop
jb
cmp
mov
mov
cltd
or
out
fimuls
inc
je
push
insl
ljmp
mov
sar
jae
les
jae
or
leave
pop
cmp
push
call
xchg
sub
out
pop
inc
mov
xchg
nop
pop
test
lcall
add
sbb
add
mov
sub
adc
mov
cmp
xchg
add
mov
decl
pop
bound
mov
and
mov
mov
dec
call
decl
jmp
dec
add
or
ret
jns
push
jno
fidivrl
lods
rcl
call
cmp
push
es
in
mov
hlt
sub
jge
std
sub
test
push
out
filds
call
sbb
loopne
cwtl
mov
sbb
jg
cmpsl
add
shll
addr16
in
repnz
or
jb
mov
push
mov
dec
mov
call
ljmp
cld
push
mov
fbstp
mov
test
push
shlb
jmp
lret
add
sub
addl
xchg
pop
cmp
xchg
int3
dec
or
adc
xchg
mov
sub
adc
lar
sbb
in
enter
js
sahf
rcrl
call
jg
outsl
mov
adc
push
pop
mov
xor
jmp
test
cmpb
lcall
ja
mov
pop
dec
xchg
and
mov
nop
cmpsl
push
or
ljmp
hlt
xlat
pop
shl
adc
pop
and
in
adc
and
lods
incl
inc
mov
std
notb
loope
arpl
dec
lret
jge
lea
mov
loopne
sbb
cli
ret
aam
js
pop
push
daa
test
sub
outsl
jge
insb
dec
xchg
cmc
out
mov
dec
out
daa
and
aaa
dec
jp
inc
popf
icebp
mulb
sarl
xor
mov
in
clc
mov
testb
add
inc
rcl
js
test
mov
inc
add
insb
add
and
lret
ret
in
std
arpl
call
imul
cmpsl
cwtd
pushf
leave
push
shll
pop
mov
mov
mov
out
mov
adc
pop
xchg
xorl
rolb
cli
mov
ljmp
dec
mov
cmc
orb
adc
or
gs
into
dec
stc
les
call
cltd
aaa
sarl
test
test
mov
mov
repz
enter
xor
xchg
das
xor
popf
loop
das
cmc
aaa
clc
icebp
js
das
mov
pop
call
pop
clc
xor
mov
inc
iret
jne
jmp
cmp
adc
dec
insl
cmc
pushl
sahf
in
push
pop
xchg
push
insl
repnz
or
dec
and
icebp
cmpb
xor
mov
cmp
cmc
xchg
mov
sbb
fistps
call
push
fs
fiaddl
stos
adc
call
adc
idivl
lahf
inc
xor
jbe
dec
dec
into
pop
cwtl
jge
cwtl
lea
inc
xor
hlt
mov
and
jg
popa
jle
cmp
pusha
add
sbb
pop
mov
inc
sub
mov
scas
add
pop
or
pushl
inc
pop
mov
cwtl
imul
leave
repz
inc
and
or
addr16
inc
shll
mov
xor
add
add
and
jb
ss
ja
push
pop
jle
jg
sbb
andl
mov
push
fidivrl
xor
cmpl
jg
xor
xor
and
xor
cmp
divb
arpl
or
and
test
call
jb
sbb
jl
js
jo
xor
pop
in
pop
in
and
int3
std
pop
lods
xchg
in
fs
xchg
cmpsl
popf
ja
or
adc
or
in
std
out
and
movsb
outsl
stos
dec
xchg
cmpsb
and
ret
nop
dec
stc
iret
xchg
xlat
ret
imul
lret
dec
cltd
ljmp
jg
loopne
dec
sub
in
aas
idiv
jl
lods
and
xchg
sbb
dec
mov
add
ljmp
sub
xchg
fcom
jno
jo
push
ljmp
movlps
orl
xor
lret
jns
loopne
std
sub
xor
addr16
out
sub
fisubl
lods
jl
dec
ds
xchg
repz
dec
inc
std
dec
push
outsl
cmc
inc
shlb
orb
lcall
pop
ljmp
loope
pop
pop
ret
loopne
xchg
push
stc
ss
inc
outsl
mov
pushf
pop
repz
enter
dec
out
loop
jo
std
jmp
in
jne
pop
push
adc
out
jmp
test
call
clc
popf
dec
lcall
jl
push
rcll
push
icebp
cmp
decl
xchg
mov
dec
aaa
xor
cmp
gs
aad
dec
add
outsb
mov
cmp
lods
xor
aad
xchg
lahf
in
mov
mov
insb
xchg
or
out
adc
in
mov
lret
dec
mov
dec
xor
mov
leave
addr16
or
pop
jle
sarb
ljmp
pop
enter
out
pop
stc
push
lods
in
mov
pop
adc
mov
test
jg
jmp
push
in
mov
adc
push
cwtl
fisttps
arpl
xchg
test
and
ljmp
pop
jle
data16
ljmp
sbb
push
adc
arpl
cmc
mulb
jecxz
dec
inc
dec
es
in
lcall
push
fldcw
loope
jbe
mov
cli
xchg
xor
call
xchg
call
call
ret
out
iret
jb
inc
imul
pop
push
out
lods
decl
ret
jnp
cmpsl
and
push
negl
ljmp
sub
hlt
cmp
dec
fucom
jmp
cmp
add
nop
xchg
xor
dec
call
add
jg
aad
mov
xchg
ljmp
mov
outsb
cmp
push
mov
pop
push
leave
inc
dec
std
call
js
shrl
add
push
jb
xchg
repnz
loop
xchg
stos
stos
and
sub
cmc
int
or
mov
mov
push
jmp
lds
ss
mov
je
mov
push
loop
lods
mov
push
das
hlt
ljmp
sti
js
inc
cmpsb
dec
push
nop
jns
xchg
decl
jg
inc
sub
xorl
test
mov
fistps
insb
lret
cli
dec
popf
in
lret
clc
sbb
rcll
shll
cmp
ret
cli
xchg
jmp
lahf
stc
mov
stos
mov
mov
push
lods
lcall
mov
and
xchg
decl
jmp
rorb
cli
or
add
dec
pop
aad
insl
jl
xchg
adc
loope
fsubs
mov
push
pusha
jno
and
int3
jae
mov
push
and
test
jmp
into
jl
addl
popf
dec
xlat
roll
inc
dec
push
call
test
xchg
insb
aam
jo
dec
add
aad
shr
jmp
icebp
inc
add
test
mov
mov
filds
test
stos
xchg
decl
sbb
shll
mov
ret
dec
hlt
jg
inc
and
hlt
cli
push
out
aam
xchg
mov
xor
daa
and
cmc
inc
leave
pop
call
repz
jbe
jno
push
push
xorb
mov
adc
and
or
xor
incl
push
add
pop
jbe
dec
mov
cmp
sbb
xchg
xchg
repz
jg
jecxz
fwait
mov
inc
pop
jmp
mov
cltd
cmp
lcall
xchg
data16
cmp
fcomps
ljmp
aaa
pop
sub
and
pushl
inc
xchg
mov
loope
push
imull
aas
loopne
mov
ja
lcall
cmp
popf
sub
data16
std
adc
stos
test
mov
out
fmull
popa
add
or
pop
mov
mov
je
mov
jns
decl
cmp
mov
push
je
test
mov
clc
roll
daa
shl
jns
cmc
arpl
fucomip
out
cmpsl
sahf
movsb
push
mov
jmp
popa
out
cmp
decl
shlb
mov
xor
dec
cltd
js
imull
je
lret
stc
push
lret
inc
hlt
fdivr
decl
lcall
test
or
xchg
jecxz
std
decl
mov
xlat
mov
jb
and
incl
push
aas
mov
mov
aaa
stc
inc
push
ret
add
mov
mov
gs
jbe
cmpsb
rcrb
xchg
fs
mov
push
pop
ljmp
cmc
lcall
pushf
aaa
clc
aaa
clc
ficomps
repnz
and
mov
outsl
cmc
incl
rorl
mov
sbb
stos
dec
int
lret
mov
sub
push
scas
or
imul
add
adc
pushl
mov
int
jg
xchg
push
pop
cwtl
hlt
add
adc
loop
jb
adc
int
fwait
and
sbb
insl
cmc
cmp
test
rolb
rorb
lcall
inc
cld
or
clc
push
in
ja
pushf
jo
dec
inc
sbb
cli
pushl
js
es
fdivrl
pop
xchg
mov
inc
ret
lods
mov
out
jg
jmp
fldlg2
stc
dec
pop
in
jnp
pop
flds
jo
imul
ljmp
inc
jns
sub
cltd
add
cli
jmp
cli
clc
adc
or
dec
dec
test
sub
decl
pop
mov
cld
les
ljmp
dec
jp
jge
xor
imul
incl
rorb
fldt
ss
out
jno
cmp
lret
push
or
je
loopne
mov
lds
rolb
jae
add
lods
pop
clc
push
mov
enter
lds
inc
mov
je
gs
test
mov
or
mov
mov
incl
sub
fbld
mov
xor
xchg
sar
mov
mov
jmp
das
push
daa
in
arpl
dec
adc
sub
aam
aaa
les
xchg
psubq
inc
add
jmp
iret
push
test
fistps
pop
push
stos
pop
iret
sub
or
push
stos
cwtl
mov
js
or
decl
dec
imul
bsf
psubb
sbb
cli
and
pop
pushf
sbb
cmp
or
or
sub
inc
push
gs
in
test
pushf
mov
adc
decl
jp
adc
cmp
std
out
adc
push
gs
add
mov
pushl
mov
and
mov
push
adc
dec
xchg
mov
and
movsb
xor
sti
mov
push
mov
inc
fldcw
push
xor
jno
repnz
xor
pop
ds
add
mov
into
das
mov
or
mov
sbb
jp
clc
fisttps
call
cli
shlb
xor
mov
xchg
xchg
imul
jp
dec
sub
int3
or
mov
lcall
fstp
push
rcrb
xchg
ficompl
dec
fistpll
pop
jge
imul
sbb
cld
das
xlat
scas
test
mov
in
mov
jg
jmp
xchg
jbe
shll
movsb
jb
jo
mov
decl
adc
cmc
dec
xchg
sbb
shlb
in
sub
mov
dec
mov
mov
push
ljmp
outsb
cli
fcmovbe
inc
fcmovnbe
mov
sbb
pop
loop
iret
jg
lcall
sub
out
push
inc
das
andb
xchg
sub
decl
imulb
icebp
arpl
clc
es
out
mov
insb
imul
ljmp
bound
add
scas
clc
testb
sbb
sbb
adc
loop
sub
mov
dec
sub
out
jmp
and
push
mov
ss
lods
imul
pop
inc
adc
lods
test
int3
fcmovnu
jg
aas
xchg
and
shll
sbb
cli
push
push
jbe
dec
aas
daa
insl
pop
mov
inc
push
loope
out
sub
add
gs
fists
movsb
or
mov
push
mov
push
sbb
jmp
fildll
pop
into
cwtl
outsl
imulb
mov
lret
jg
fisubrs
pushl
sti
dec
aas
jmp
shll
cmp
cmpb
lods
fs
jg
mov
jb
adc
repz
mov
add
jg
pushl
pushf
jno
xchg
cmpsl
test
jnp
pop
ret
ret
int3
shrl
jnp
cmp
and
fistps
bound
ljmp
hlt
decl
push
lahf
and
pop
stc
xchg
adc
cmpl
test
add
jae
clc
add
mov
mov
das
lcall
pop
mov
dec
and
mov
lcall
sbb
pop
shrb
mov
pop
add
movsb
nop
repz
in
lds
ljmp
lea
int3
and
mov
cld
push
jge
cs
daa
jmp
inc
mov
test
adc
push
sbb
popf
outsb
imul
enter
jg
jg
and
push
jl
das
sahf
or
dec
dec
cli
push
lahf
xlat
jecxz
clc
cli
stc
movsl
int3
dec
xchg
xchg
lret
lods
sub
jns
bound
xchg
sub
mov
ret
inc
hlt
cmp
add
decl
mov
loop
push
jmp
inc
cmp
dec
clc
and
shrb
cmp
jp
mov
xchg
xchg
aam
fimull
ljmp
test
mov
mov
xchg
scas
inc
cmp
shr
fnsave
jb
cmp
or
call
cli
cmp
iret
sbb
sbb
cwtl
pop
lcall
pop
inc
pop
or
fsubl
std
xchg
cmp
jmp
xchg
push
movsb
aam
xchg
and
aas
mov
xchg
cli
inc
movl
mov
test
jae
add
nop
mov
lods
ficompl
cmp
rcl
xchg
and
lods
andb
pop
xor
mov
ljmp
je
adc
and
fsubs
pop
xchg
loopne
ret
daa
xor
lods
and
mov
dec
pop
sbb
cld
call
dec
cmpsl
es
xlat
pop
push
call
aaa
xor
aaa
dec
and
fcomip
nop
cs
adc
int3
fnstsw
stc
ljmp
std
jmp
or
in
dec
push
mov
lahf
popf
cli
mov
dec
js
lods
or
jg
mov
pop
cmp
imul
jg
inc
xchg
xor
jnp
and
ja
in
xor
mov
lods
push
push
fistps
mov
push
sub
pop
mov
push
sbb
adc
lahf
xchg
ret
in
and
frstpm(287
sbb
mov
sub
js
imul
das
push
call
es
mov
cld
push
daa
fwait
xchg
lcall
daa
sub
outsl
sbb
cltd
popa
and
daa
adc
mov
rcl
push
add
mov
sbb
ffreep
dec
add
scas
cwtl
call
imul
movsb
or
jbe
lods
or
xor
or
jno
cmpsb
popa
and
js
add
and
jecxz
nop
add
dec
cs
sbbl
in
outsl
jns
xchg
mov
jp
sbb
xor
lret
cmpsb
jo
stos
into
leave
xor
adc
mov
call
shlb
fwait
mov
stc
sub
call
loope
rorl
dec
push
cli
push
mov
xchg
lret
roll
stos
fcomp
cmp
les
shll
mov
fdecstp
std
sbb
pop
fs
cwtl
lahf
mov
popl
sbb
outsl
fadd
clc
mov
into
mov
ljmp
pop
fistl
aaa
in
pop
in
cli
fdivl
outsb
insl
jg
jae
in
jno
in
std
xchg
jg
pop
loop
push
jo
pop
ret
cli
xchg
push
push
jmp
inc
stos
int
fadds
xchg
push
push
insb
repz
mov
popa
pushl
sti
xchg
mov
pop
sub
cs
lret
loopne
mov
cmp
push
push
loope
std
jae
fnstcw
call
inc
sbb
leave
mov
dec
loopne
std
jg
xor
fstl
jl
jnp
icebp
enter
xor
xchg
pop
cs
lds
cmc
mov
xchg
ret
shll
cld
ljmp
mov
lcall
xchg
xchg
jmp
decl
cmpb
pop
and
sbb
aaa
pushl
push
fsubl
lea
aaa
mov
fbstp
adc
cmp
mov
cld
int3
insl
arpl
mov
jl
jnp
clc
dec
sbb
cmp
into
jmp
mov
pop
iret
xor
hlt
mov
xchg
adc
cmp
inc
negl
ljmp
inc
ret
mov
cs
mov
pushl
xchg
dec
xchg
cmp
xchg
cld
sbb
in
out
xchg
adc
imul
push
es
call
stos
push
or
push
cmp
bound
and
aas
add
incl
movsl
push
xor
rcrb
in
jns
jb
fisttpll
loope
jg
mov
insl
push
es
cmp
jg
fistps
jne
cmp
leave
xchg
jmp
pusha
dec
ret
xchg
or
fidivs
mov
je
dec
mov
xchg
sub
scas
repnz
lcall
xchg
cltd
les
mov
repnz
jg
lcall
push
int
mov
fimull
aaa
cmp
daa
sbb
mov
out
sub
sub
xchg
xchg
scas
lret
inc
dec
enter
jbe
aas
adc
call
sub
pop
sti
sub
jecxz
not
ds
or
sbb
dec
push
cmp
pop
loopne
fcoml
fdivs
aaa
sub
je
repz
sbb
cmp
leave
mov
adc
movsl
mov
shl
mov
xchg
sbb
decl
mov
dec
cli
dec
adc
mov
jno
cmc
sti
sbb
mov
lcall
add
mov
jg
cmp
mov
xor
sub
sub
mov
or
inc
in
cmpb
sbb
add
mov
out
lahf
jbe
mov
loop
xchg
gs
sbb
call
cli
pop
lock
sub
rorb
push
xchg
inc
xor
mov
call
insl
push
jp
jae
mov
mov
push
out
jl
mov
call
imul
lcall
in
bound
xchg
clc
shrl
int
pop
subl
add
call
cltd
xchg
paddq
inc
dec
add
int3
jno
sbb
xchg
je
mov
idivb
cmpb
push
dec
dec
les
adc
sti
fwait
cmp
mov
mov
shll
ss
dec
sbb
cld
sbb
loopne
loop
outsl
ss
sahf
jnp
pusha
mov
into
mov
mov
pop
icebp
dec
push
sub
pushf
je
pop
adc
call
cmp
cmpsb
push
sub
enter
xchg
and
hlt
fdivrp
and
sub
hlt
jg
dec
test
adc
jp
arpl
cmp
fistps
test
add
ror
pop
addr16
fwait
ljmp
std
and
push
andb
sub
push
jg
adc
loopne
pop
add
mov
and
call
push
jg
addr16
sbb
into
push
or
cmp
fcoml
push
add
sbb
decl
pop
mov
jg
mov
push
adc
xchg
imul
jmp
jecxz
das
test
aaa
pop
iret
jle
sub
rcrl
les
jg
out
sub
sbb
incl
cmp
aam
sub
pop
mov
add
orb
lock
je
mov
lret
lcall
mov
test
pop
and
pop
stos
cmpsl
stos
movsb
std
incl
jle
fists
insb
push
test
jno
cld
fldl
in
adc
pop
aad
jne
fildll
cli
dec
imul
sub
jp
insb
popa
sarb
test
pop
loop
pop
dec
int
dec
cmp
or
les
call
shll
lds
xchg
outsl
cld
clc
rcrb
mov
scas
mov
ljmp
inc
rorl
lock
fiaddl
es
mov
and
mov
loope
adc
mov
mov
fcoml
and
mov
repnz
out
xchg
dec
notl
int3
out
scas
jmp
or
hlt
scas
outsb
in
rclb
decl
and
inc
lret
out
jmp
dec
call
push
mov
and
ljmp
std
mov
test
movsb
sub
daa
pop
add
sub
lcall
cld
jne
pop
into
sbb
push
or
push
movsb
jno
aam
into
aam
inc
cmp
into
fcoms
inc
jae
dec
lret
shll
pop
and
mov
mov
jmp
inc
std
mov
sub
xchg
sub
mov
jg
movsl
cmpsb
je
ret
rclb
icebp
sbb
mov
push
mov
dec
mov
not
push
push
ffreep
decl
adc
dec
lods
mov
cmp
std
inc
and
cmpsl
pushf
mov
lods
lret
fwait
cs
dec
sbb
das
data16
leave
adc
loop
test
ret
call
daa
mov
cmc
fbstp
faddl
push
xchg
pop
fcmovu
pop
pop
mov
not
lds
xor
jmp
inc
cli
cmp
xchg
gs
loop
clc
es
out
jmp
les
push
pop
pop
hlt
movsl
mov
decl
mov
test
in
xor
inc
stos
adc
outsl
mov
outsb
mov
cli
pop
push
adc
jno
mov
jl
sahf
lds
icebp
jmp
or
jmp
or
jmp
ret
fsubrs
sbb
cmpsl
dec
push
pop
xor
jle
mov
add
mov
fisubrl
in
pop
pop
out
cmp
jg
call
dec
inc
test
jp
in
popf
jmp
pop
cmp
sarl
jmp
leave
sub
aas
jae
sarl
repnz
test
or
mov
sub
pavgb
aaa
data16
bnd
push
lcall
cld
and
std
scas
ret
andb
test
test
call
incl
sub
adc
pop
pop
jecxz
push
loopne
dec
ret
inc
xchg
rclb
jg
xchg
push
jbe
mov
add
cld
mov
ljmp
cmp
push
push
in
mov
rorl
pop
cld
test
call
mov
cmp
sbb
and
aam
por
cmpl
mov
negl
pusha
call
call
lods
xchg
jbe
pop
push
mov
ret
aam
mov
jg
ljmp
pop
mov
out
out
fdivp
and
lcall
lock
pushl
stc
push
in
call
mov
xor
xchg
pop
sbb
sub
mov
pop
pusha
scas
lcall
rcll
dec
fmuls
lahf
into
mov
addb
xlat
add
lcall
arpl
ds
cmpl
dec
add
nop
sub
out
les
lock
sub
cmpsb
int3
jb
lcall
cmpb
fisubl
outsl
lahf
sbb
movsb
outsl
std
mov
dec
std
and
push
mov
aas
lahf
and
pushf
push
call
test
and
rcr
mov
movsb
pop
dec
int
cmpsb
fldt
mov
loopne
pop
idiv
mov
insl
aad
xor
das
xlat
inc
testb
cwtl
leave
loop
or
jmp
lea
clc
call
mov
ret
mov
out
ret
pop
cs
call
test
iret
les
test
adc
mov
inc
push
ljmp
inc
decl
push
or
outsb
lret
les
iret
push
int
push
std
mov
idivl
fsubrl
icebp
lcall
into
or
cmpsb
bound
es
lcall
mov
int
jno
out
inc
lods
add
cwtl
mov
loope
gs
incl
mov
push
or
aaa
lea
mov
and
sbb
pop
clc
stc
fs
ret
insb
adc
push
fsubr
cwtl
arpl
adc
sub
fidivrs
stos
push
jmp
rorl
xchg
lahf
incl
adc
ret
mov
clc
imul
mov
les
fbld
cli
call
and
xor
and
insb
mov
mov
call
mov
subb
test
mov
adc
dec
std
in
data16
fsubrs
cwtl
xorl
mov
jp
xchg
xchg
out
in
push
dec
pushf
and
ljmp
in
jmp
int
mov
inc
int3
lcall
pop
stos
push
incl
sbb
repnz
arpl
push
inc
nop
inc
sub
and
mov
pop
cmc
jp
pop
decl
decl
push
aas
es
clc
dec
cmp
add
dec
xchg
lcall
inc
cmpsl
push
mov
add
cmpsb
stos
decl
decl
xchg
and
sub
pop
jae
mov
xor
pop
inc
pop
shlb
outsl
jge
jmp
cmpb
pop
ret
xor
add
jmp
cmp
or
sub
pushl
or
inc
mov
lret
addb
in
adc
sar
aaa
cli
jmp
xchg
test
gs
or
jno
adc
adc
pushl
mov
mov
push
inc
dec
mov
or
out
add
std
jg
ffreep
test
or
into
inc
adc
mov
jnp
imul
and
sbb
sub
sub
adcb
push
jl
clc
ljmp
xor
cmpl
stos
fcompl
xchg
cmp
push
jp
call
lods
hlt
add
add
fldl
push
jb
scas
or
jg
aaa
sahf
aad
jbe
ds
fists
test
adc
inc
and
jle
loop
push
stc
test
gs
lods
mov
dec
sub
lods
cmp
ljmp
cmc
fcomi
pop
stos
mov
and
inc
rclb
shl
insb
scas
popf
push
jg
sbbb
adc
push
mov
mov
push
imull
pop
mov
call
adc
dec
push
test
sbb
dec
mov
movsl
jg
call
insl
jle
mov
int3
fcmovnbe
imull
or
cli
ret
imul
mov
push
cmp
jmp
fstps
inc
imul
nop
mov
inc
in
add
fidivrl
lcall
sti
pushf
mov
ljmp
out
repnz
xor
arpl
sbb
mov
clc
jg
hlt
clc
jne
mov
mov
cmpsl
add
cmpb
inc
xchg
push
fildll
cmpsb
sar
ljmp
mov
cmp
mov
scas
pop
pop
andl
ret
cmpsl
cmp
repz
mov
out
cwtl
rclb
pushl
sbb
nop
inc
aad
add
dec
popf
pop
dec
xor
call
cmp
cmp
adc
sub
xlat
popa
jmp
imulb
cli
sar
pop
cmp
pop
iret
jmp
mov
fsubr
call
movsl
loop
popf
cmp
adc
or
mov
cmc
movsl
out
les
mov
jo
mov
mov
and
test
mov
pop
cmp
push
setb
das
add
decl
je
in
lahf
sub
inc
decl
mov
test
push
in
jl
jp
lods
cmp
ljmp
cmp
arpl
mov
test
jge
xorb
call
stos
daa
xchg
scas
hlt
out
cmpsl
push
sub
cmpl
add
fsubs
loopne
xchg
shl
push
and
out
sahf
push
lcall
dec
roll
call
fwait
sbb
lods
cmovae
into
mov
addr16
shr
jge
or
mov
push
mov
std
in
incl
aaa
js
dec
in
push
xor
es
sar
rolb
fmuls
jge
lock
xor
xor
pop
ds
decl
and
xor
add
mov
jge
int
pop
ds
incl
ljmp
cmc
sub
mov
nop
sbb
dec
lods
lahf
cmp
jl
in
push
sbb
jmp
popa
dec
or
mov
xchg
repz
scas
inc
jb
push
lods
add
mov
jg
call
and
sbb
int
lods
rolb
mov
xchg
lcall
adc
dec
cmpsl
test
push
inc
sbb
lcall
daa
sbb
aam
jmp
hlt
or
outsb
ret
jecxz
mov
mov
test
decl
dec
cmpl
sub
and
aam
cwtl
fstpl
sbb
jno
fnstsw
push
leave
fwait
xor
sti
cmp
xchg
inc
incl
cmpsb
aad
jne
or
sahf
scas
imul
sub
jno
push
or
mov
daa
outsb
std
ret
dec
mov
pop
pop
mov
push
sbb
call
xchg
cmp
or
cmp
push
xchg
adc
outsl
mov
bound
div
mov
insl
adc
adc
incl
arpl
cs
and
ret
push
lcall
lahf
out
mov
pop
fcompl
rol
and
push
sub
mov
or
inc
je
fidivrs
out
fwait
jp
mov
ret
movb
jmp
shrb
hlt
xlat
sbb
xchg
xor
ficoml
pusha
out
cld
jg
ljmp
mov
push
mov
outsb
ja
scas
push
push
insb
xor
into
push
mov
xchg
mov
insl
add
jg
jg
mov
sbb
inc
test
cmc
push
lcall
cmp
pusha
cs
xor
cmp
or
jg
push
repz
incl
jno
es
cmpsb
sbb
xlat
lea
cwtl
xchg
cld
sub
inc
stos
pop
add
es
stc
and
mov
clc
dec
inc
cmpsl
mov
mov
addr16
xor
jne
inc
out
sbb
ret
test
mov
cmp
pop
cmc
lahf
or
repz
bound
call
dec
data16
sub
aam
inc
add
jg
decl
cmp
push
xchg
cmp
mov
mov
clc
dec
lods
push
sub
mov
fidivrs
xor
pushl
idivl
out
rcr
ret
pop
add
fistps
lods
cmp
sbb
fucomp
mov
push
push
sub
dec
ljmp
push
jl
int
or
or
pop
ljmp
jmp
ret
inc
dec
lret
adc
mulb
insl
pop
pop
jg
leave
out
sahf
sub
mov
sub
repnz
lcall
push
pop
sbb
or
fcomps
ljmp
mov
cmp
pop
jb
xor
dec
mov
repnz
daa
sub
gs
pushf
pop
in
mov
aam
add
mov
or
outsl
mov
lcall
fs
sbb
sub
xchg
clc
das
rcl
ret
inc
fdivrs
repz
jmp
inc
fildl
mov
push
clc
sahf
xchg
ret
mov
and
mov
lea
add
fidivrl
push
pop
mov
sar
lea
add
out
add
add
mov
jmp
mov
xor
std
movsl
jg
rorb
les
inc
daa
std
pop
fwait
mov
ljmp
icebp
push
sub
gs
andb
jne
pop
scas
xchg
push
mov
fucomip
sbb
jecxz
fdivs
dec
pop
xchg
enter
jb
mov
cmp
loop
mov
jbe
fs
mov
scas
fcomps
icebp
add
mov
aad
decl
mov
mov
fildll
mov
incl
mov
add
mov
mov
or
roll
pop
je
jg
pop
out
dec
adc
mov
mov
xor
xor
fucomip
cmp
push
mov
or
adc
add
ljmp
clc
mov
es
popa
gs
push
cmp
bound
jno
lahf
pushf
or
and
cmp
pop
lds
sub
pop
mov
add
outsl
icebp
incl
or
in
sbb
insl
mov
xchg
jg
push
stos
call
add
bound
mov
lahf
fnstsw
lcall
and
lret
out
call
lcall
and
cli
lods
or
xor
push
dec
jo
jmp
cltd
push
jg
movsl
shl
cmp
mov
aaa
dec
pop
loop
push
insb
mov
ljmp
cmp
call
icebp
sar
je
es
mov
dec
dec
sbb
fidivrs
inc
cmp
jb
pop
mov
xchg
out
movsl
mov
adc
dec
pop
ds
sbb
xchg
ret
xchg
mov
mov
iret
enter
loop
mov
adc
dec
nop
aad
fisubrl
test
test
clc
pop
nop
clc
pop
mov
jecxz
lods
mov
jmp
cli
in
push
cmc
jbe
xchg
or
imul
cmp
pusha
cmpb
cmp
decl
iret
inc
repz
test
xchg
push
jo
xchg
push
in
lea
rclb
or
incl
jmp
xor
push
add
enter
push
or
mov
test
cltd
int3
ljmp
dec
sbb
push
jecxz
and
cmpsl
pushl
sub
test
mov
jno
loope
adc
lock
lock
dec
mov
loop
jge
mov
mov
mov
sub
push
lock
pop
adc
xchg
scas
mov
sti
out
push
jns
jo
pop
lret
xor
sub
mov
xchg
js
movsl
xor
or
and
adc
into
arpl
mov
mov
std
mov
cli
cmp
sub
pop
repnz
outsl
ds
inc
push
cmpsw
aas
push
js
jge
movsb
call
mov
push
in
add
xor
jp
pop
inc
mov
imul
add
xlat
rsm
pextrw
daa
mov
stc
xchg
xchg
jg
lret
pop
push
mov
ljmp
xor
jbe
je
arpl
pop
shl
call
adc
cmp
lret
lods
xor
sbb
fucompp
gs
call
cmp
sbb
jno
fadds
lret
mov
in
dec
add
push
mov
jne
ret
sahf
mov
mov
and
cmp
lcall
ret
xor
decl
out
sub
pop
outsl
xorl
in
arpl
and
pop
jl
scas
pusha
dec
outsl
pop
or
fdiv
imull
inc
push
cmp
and
xor
lea
js
test
inc
call
out
enter
and
jb
mov
jg
xlat
notb
jne
lea
bound
push
mov
adcb
mov
mov
popf
add
cld
and
jmp
ss
jne
jbe
add
adc
cltd
mov
lcall
jae
sti
pop
ret
mov
test
jp
dec
and
push
ljmp
test
sbb
pop
dec
leave
push
dec
mov
cmp
nop
out
sub
lcall
mov
ret
ss
add
cmp
dec
loop,pn
inc
fwait
mov
push
mov
fildll
and
rcr
sub
xchg
lcall
mov
test
insb
jg
addb
sbb
mov
xor
or
ljmp
mov
cltd
sbb
dec
cltd
or
popa
xor
mov
push
sar
call
xor
jecxz
jmp
jecxz
mov
loopne
leave
mov
and
lcall
xchg
insl
add
fcmovu
fwait
inc
loopne
icebp
sarb
jp
mov
xlat
adc
cmp
fsub
fsubrs
pop
fdivrp
ljmp
lret
call
add
test
loope
loope
xor
mov
shlb
ret
outsb
xchg
cmp
scas
in
pushl
mov
push
cmp
mov
stos
pusha
pop
xchg
mov
inc
pop
sar
hlt
add
xor
xor
jle
sbb
inc
inc
mov
pop
std
frstor
cmc
dec
cli
adc
xor
lcall
mov
mov
add
stc
jae
jmp
mov
inc
add
lcall
mov
pusha
movsb
ljmp
das
adc
jae
mov
pop
adc
mov
sub
and
loope
pushl
movsl
xor
mov
dec
outsb
and
and
dec
pop
ds
loopne
outsb
test
fdivs
sar
mov
mov
das
rcrb
pop
movsl
pop
sub
push
jp
lds
sbb
jmp
inc
in
or
cli
in
pop
lret
pop
mov
dec
and
xor
lock
lock
fcmove
xchg
push
push
popa
ljmp
jb
stc
cli
test
mov
aad
push
jmp
mov
inc
sub
add
xlat
out
pop
add
and
sbb
sarb
pusha
out
xor
mov
leave
imul
cmc
jg
dec
jne
xchg
adc
insb
clc
sbb
jno
rolb
aaa
jmp
jo
jb
outsb
dec
cmp
pusha
jae
jge
mov
push
into
add
in
lcall
fs
cmp
cmp
test
xchg
jns
xchg
mov
ljmp
pop
inc
or
sbb
incb
xchg
inc
lea
xchg
pop
cmp
jle
neg
inc
inc
cmc
call
sub
jmp
or
nop
call
mov
and
push
bound
push
pop
call
arpl
jbe
aam
add
push
or
ljmp
xorb
mov
push
fldl
out
push
xchg
cmp
inc
call
dec
pop
inc
aaa
stos
add
cmp
in
xchg
push
inc
xchg
popf
dec
in
std
lcall
cmp
dec
in
pop
icebp
addr16
xlat
fstps
mov
and
pop
jg
stos
das
mov
dec
and
stc
mov
fnstsw
sbb
addl
jp
scas
mov
cltd
fbstp
popf
incl
call
mov
out
mov
div
lret
fimull
shll
popa
cld
inc
add
cld
push
test
outsl
ljmp
adc
pushf
lcall
sub
or
xlat
xchg
inc
icebp
imul
mov
imul
scas
or
rorl
adc
add
inc
adc
popa
movd
mov
hlt
mov
loopne
dec
sbb
stc
adc
repz
cmp
xchg
jbe
jmp
mov
stc
fcoml
jae
and
pusha
cmp
in
fbstp
lea
aam
addr16
lds
push
leave
imul
aaa
push
fwait
pop
cwtl
repz
movq
add
mov
adc
js
xor
mov
aas
test
jecxz
sti
inc
jge
shlb
scas
lcall
call
scas
pmaxsw
stos
stos
fst
and
mov
in
ljmp
sub
pushf
mov
jo
lods
pop
inc
ret
shlb
fisttpl
sub
mov
jb
aaa
mov
jae
call
and
jmp
jns
push
outsl
add
fists
inc
xchg
cwtl
aam
daa
aad
push
stos
sbb
outsl
dec
push
cmp
repnz
fwait
das
icebp
rcrl
inc
popf
lea
xor
outsl
jae
push
popf
insl
mov
sub
mov
pushl
out
xor
and
cmp
push
inc
cmp
pop
nop
test
rcll
decl
loop
les
rclb
scas
and
mov
call
mov
movsb
and
xchg
insl
pop
xor
lea
or
decl
mov
inc
inc
lcall
ja
decb
mov
mov
movsb
push
sar
call
push
cli
mov
cmp
fwait
xchg
and
jg
jmp
popa
push
jbe
cmpsl
js
bnd
inc
les
xchg
int
repz
ljmp
push
out
xor
pop
shll
sub
inc
mov
outsl
in
pushl
ret
sarb
scas
pop
fwait
push
jl
sbb
pop
mov
imul
and
pop
std
inc
in
add
inc
dec
sar
call
adc
into
outsb
jp
jecxz
add
data16
or
in
repnz
jg
call
sbb
xchg
add
std
dec
cmp
fwait
xor
pop
mov
jg
shll
jmp
adc
repz
push
sbbb
pop
jg
xchg
cmp
rorl
sbb
push
sbb
sbb
push
mov
and
jbe
mov
lcall
or
cmp
push
scas
rorb
and
fimuls
ret
cltd
call
fistpl
fisubs
rclb
aam
cmpsl
push
push
imul
push
call
cmc
dec
pop
iret
xchg
fidivrs
lds
sub
add
sbb
das
jno
rorb
mov
mov
mov
xor
loopne
pop
test
pop
cli
add
testl
jecxz
std
jmp
pop
stos
incb
inc
push
rcll
iret
jne
stos
sbb
lods
jle
stc
data16
or
pushl
fsubl
orb
outsl
push
stc
mov
sub
outsl
test
mov
or
scas
fnsave
movsb
shlb
rcrb
ljmp
icebp
aaa
and
loop
add
jno
aam
dec
sbb
js
ds
int
lahf
test
xchg
test
loope
cmp
cmp
mov
je
pop
mov
shl
outsb
pop
loop
jl
jg
loop
mov
cli
int
insl
test
xorb
pushf
and
incl
push
jo,pt
hlt
es
aad
fadd
inc
repz
repz
scas
mov
mov
mov
xchg
xchg
stos
lret
dec
jp
iret
mov
orb
fidivl
add
insl
or
or
cltd
jecxz
pop
pop
testl
out
lods
in
aad
call
shrw
int
repnz
out
cltd
setle
lret
or
xchg
or
call
jns
mov
icebp
or
icebp
lahf
in
ljmp
cld
aam
xor
lea
incl
loop
jge
in
cmp
push
mov
iret
pusha
adc
addr16
jne
sub
out
pushl
inc
js
cmpsb
dec
mov
sub
stos
repnz
sbbl
icebp
decl
push
lahf
jp
mov
cmpsl
sbb
adc
inc
mov
pop
adc
icebp
mov
jo
mov
in
mov
daa
lds
fistps
cmp
clc
outsl
icebp
fcmovu
and
dec
enter
das
in
lea
xchg
cld
lcall
sub
jb
xor
movsb
adc
mov
xchg
mov
loopne
int3
sub
in
sbb
inc
adc
incl
neg
in
cli
stc
push
sub
outsl
push
mov
imul
sbb
pop
jmp
xchg
push
hlt
aad
pushl
mov
xchg
out
mov
mov
fdivs
popf
jb
add
enter
aam
loope
sbb
mov
not
out
mov
push
ds
mov
sub
push
cmp
sbb
mov
test
dec
iret
mov
pop
inc
inc
push
or
mov
pushl
mov
inc
loop
mov
jg
mov
pusha
mov
nop
fidivs
jbe
mov
scas
sbb
mov
jb
lcall
sub
fisubl
mov
mov
mov
and
test
jle
inc
popa
aam
xchg
je
mov
mov
pop
cli
incl
nop
jp
in
fwait
cmp
lods
repnz
out
ds
incl
push
and
daa
pushf
imul
loop
cmpsl
xchg
cmpsl
sub
sahf
pushf
out
ds
mov
out
and
sbb
gs
lret
inc
xchg
xchg
cmp
sti
push
out
out
sub
jb
mov
xorb
cmc
mov
or
adc
mov
in
je
dec
outsl
scas
incl
les
ja
cwtl
lret
outsb
adcb
sub
jp
jmp
sbb
fnstsw
rorl
pop
sbbb
mov
cmp
cmp
xor
dec
pop
sti
incl
add
cmp
and
or
jmp
mov
decl
jl
nop
js
adc
int
and
dec
cmpsb
or
ja
cmp
decl
push
mov
inc
or
or
aaa
mov
sub
add
mov
aaa
clc
decl
inc
pop
sub
popa
mov
in
inc
cli
cmp
rclb
add
push
push
sar
dec
fwait
xchg
push
xchg
int3
inc
push
in
push
out
dec
push
jge
call
lcall
int3
lock
cltd
scas
jg
push
add
ret
xchg
xchg
or
call
outsl
cld
inc
loop
add
int
xchg
fwait
xchg
jne
int3
xor
decl
iret
and
std
mov
push
or
or
pop
cli
lcall
mov
aaa
cld
out
push
xor
sub
test
js
jno
sub
dec
sub
stos
ret
inc
jmp
je
xor
fidivl
ret
arpl
jnp
notb
adc
repz
push
pop
in
add
shlb
jg
lcall
xchg
adc
daa
mov
mov
mov
dec
cmp
mov
aad
inc
lea
sub
sbb
sbb
sub
add
add
pop
fists
sbb
xor
pop
ss
sahf
daa
xor
outsl
hlt
incl
jo
add
pop
inc
out
push
lods
mov
jmp
ret
subl
push
inc
mov
fnstsw
decl
cmp
cs
cmpsb
sbb
sub
mov
aaa
mov
xor
jl
inc
cmpsb
testb
invd
not
dec
mov
clc
cmp
mov
loope
adc
lea
and
cli
xchg
push
jg
jo
fldl
push
clc
inc
loope
xor
mov
add
imul
push
cmp
imul
cld
sarl
xchg
fistpl
vmaxps
enter
inc
decl
fcoml
out
add
push
pop
fdivr
pushl
push
sbb
addl
out
lea
inc
push
pop
aad
aam
sub
fisttps
decl
cld
outsb
repz
or
popl
loope
ficoms
sub
popa
fdivrp
call
clc
cmp
jnp
jl
pop
pop
stc
mov
adc
jno
mov
clc
xchg
push
inc
pop
insl
cmovbe
mov
push
shrb
rcrb
ret
ljmp
mov
sub
push
cmpsl
xor
cmp
push
cli
fbstp
andb
stos
loopne
out
sarl
cmpsb
or
outsl
hlt
mov
iret
in
cmpsb
in
repnz
inc
inc
mov
and
push
lods
in
mov
pop
out
adc
cli
inc
mov
mov
sbb
aad
sub
cmpsb
dec
inc
pushl
call
clc
cwtl
push
dec
mov
mov
xchg
loop
pop
xchg
aad
mov
add
cli
sub
popf
adc
pop
pushf
in
je
jmp
cmp
inc
outsl
mov
vpmulhw
movsl
call
pop
cli
pushl
lods
in
subb
sbb
sbb
mov
cmp
icebp
cmc
call
ljmp
in
and
xchg
xchg
cmc
or
aas
fcmovnb
call
shrl
in
loopne
cmp
jnp
push
incb
pop
test
jne
xchg
cs
and
xlat
push
test
mov
or
loope
pop
fstp
test
pop
mov
outsl
xor
je
inc
jg
add
and
adc
mov
je
lahf
push
jecxz
xchg
dec
cmpsb
aad
gs
mov
mov
ljmp
add
rclb
hlt
mov
mov
aad
mov
loope
mov
cmpsb
and
mov
mov
cmpsl
out
mov
add
clc
push
scas
fcoms
cmp
ljmp
xchg
loopne
or
stos
xchg
call
add
adc
call
ljmp
sti
xchg
or
movsb
repz
inc
insb
mov
fsubrp
fs
pop
int
jae
test
nop
mov
stc
inc
mov
mov
popa
jbe
dec
adc
stos
mov
and
lcall
cld
lds
add
or
jl
cs
leave
mov
hlt
jmp
add
fsubs
sub
into
lock
fcompl
adc
sbb
ret
cwtl
or
lcall
les
jno
mov
and
mov
outsl
cmc
cmp
sbb
test
popl
xchg
push
incl
push
sahf
call
loope
cmpsb
pusha
icebp
xchg
mov
das
sub
aad
fimuls
xor
pop
push
cld
adc
adc
jb
xchg
shl
testb
cli
ljmp
mov
rcrb
push
cltd
mov
scas
or
aaa
decl
int3
ss
sti
std
jb
pop
cld
pop
pop
dec
test
imul
cmp
hlt
xor
daa
sub
lahf
add
xchg
dec
sbb
outsl
cld
mov
imul
sbb
pop
dec
dec
xchg
cli
add
loop
fucomip
test
adc
ffree
xchg
test
add
idivb
fcomip
int
pop
xor
popw
ja
and
add
mov
jge
dec
lret
mov
rolb
lcall
xor
xor
cmp
xchg
sub
mov
cld
xor
call
jmp
fcompl
in
mov
push
sub
dec
jne
and
xor
icebp
cmp
ss
ljmp
or
sub
lea
dec
mov
lcall
cmp
sbb
imull
test
inc
push
scas
incl
out
push
sbb
mov
stc
cmp
pushl
add
mov
enter
cmp
mov
jbe
dec
xor
lret
lcall
test
or
insb
ja
lahf
jbe
cmp
movsl
push
sbb
or
mov
or
jg
aad
stos
in
cmc
inc
shr
out
rcrl
test
fs
or
ret
cs
sub
dec
shr
jb
mov
sbb
loopne
pop
mov
jnp
lods
dec
or
aas
negl
sbb
fildl
pop
xchg
ljmp
sbb
inc
jmp
je
es
push
dec
and
inc
adc
das
ret
cmp
push
das
hlt
lcall
mov
cmc
mov
call
fwait
or
movsl
idiv
jns
xchg
inc
aas
or
dec
ja
lea
nop
mov
pushf
mov
rorl
stc
add
fdivrp
out
out
pop
jge
jecxz
mov
push
ljmp
repnz
mov
dec
mov
sti
aas
fsubrs
lock
dec
xor
loop
add
xor
cmp
dec
cmp
out
sbb
arpl
cmp
add
bound
or
jg
sub
sub
aad
sub
xor
push
mov
jbe
sub
fbstp
jnp
ds
cs
fcmovu
stc
and
clc
fs
cld
sti
lcall
dec
sbb
mov
jmp
outsl
pop
in
shrl
push
sub
adc
lcall
cld
jp
push
pop
insb
adc
pop
orb
loope
insb
lcall
in
imul
adc
pop
fisubl
dec
imul
pop
sub
pushl
dec
sub
and
mov
dec
sbb
add
xchg
cmp
ret
inc
and
cltd
mov
aam
loopne
mov
xchg
pop
outsb
daa
mov
push
xor
stos
jmp
mov
sahf
fstl
int
mov
aam
test
pop
cmpsl
inc
outsb
outsl
add
xchg
ficoml
cs
mov
mov
push
cmpsb
loopne
mov
subb
aam
sbb
cwtl
or
dec
nop
pushl
clc
pop
jg
or
cmpl
jns
jmp
mov
rorl
movsl
loop
jp
adc
gs
movsb
sti
cwtl
sar
pop
ja
jb
outsb
sub
push
je
fcomp
push
jle
loop
mov
jno
std
xchg
add
push
int
xchg
popf
mov
pop
pop
out
fisubrl
add
push
cmp
cld
mov
es
test
push
cwtl
loopne
pop
loopne
cli
xor
inc
fisttpll
insb
mov
in
fnstsw
in
lcall
rorl
in
pushf
das
rolb
push
loope
outsl
inc
stos
or
add
sti
jge
dec
shlb
dec
add
lahf
loope
loop
mov
adc
ret
lock
mov
pop
or
mov
std
mov
mov
sbb
sub
in
lret
mov
mov
xchg
cli
idiv
sti
out
in
in
js
mov
cmp
xchg
xor
clc
call
or
lds
push
cli
clc
sub
mov
jmp
xlat
or
jg
ljmp
push
mov
xchg
pop
inc
xor
mov
jo
mov
pop
or
daa
jno
push
jecxz
in
fs
outsl
incl
iret
rorb
aaa
inc
fs
xchg
jecxz
mov
pushl
dec
inc
push
xchg
and
push
sub
push
add
sbb
ljmp
addr16
push
mov
dec
pop
stos
mov
mov
or
mov
jecxz
lcall
mov
fwait
in
push
pusha
push
jmp
loope
jecxz
subb
test
incl
inc
jo
and
cmpsb
dec
mov
pop
push
mov
jmp
sub
add
mov
into
sub
cmpl
mov
add
call
pushl
clc
and
aam
mov
in
or
fldenv
or
ds
dec
rclb
dec
outsb
add
movsb
add
jmp
lret
or
inc
mov
jo
mov
fistps
clc
fucomip
pop
flds
mov
daa
fwait
jb
cmp
movsb
imul
orb
scas
xlat
inc
cld
lcall
or
mov
jb
fnstsw
xchg
sub
sub
enter
sbb
jmp
in
movsl
sub
nop
pop
cmp
xor
test
scas
sub
fs
add
out
fisubrl
ljmp
icebp
xchg
push
iret
mov
mov
lret
jae
aas
les
sbb
adc
stc
sbbb
push
sahf
fistps
add
inc
fdivp
mov
ds
mov
jmp
insl
dec
bswap
leave
mov
mov
fsubr
popw
dec
in
les
dec
aaa
sub
js
adc
jl
mov
inc
xorl
fstl
push
cld
call
test
imul
dec
in
xchg
rcl
lock
push
xchg
js
pop
adc
xchg
mov
mov
mov
mov
xchg
sarl
xor
les
push
jmp
adc
ljmp
call
leave
in
cmp
loop
mov
or
decl
inc
aam
mov
push
mov
clc
jno
pop
xchg
xor
or
call
rorb
shrl
call
in
dec
ljmp
in
mov
popa
dec
mov
mov
fcomip
out
insb
sbb
jg
mov
dec
lods
push
cld
ds
daa
enter
lcall
adc
bound
sahf
cmp
push
xor
push
push
pushf
push
push
dec
movsb
mov
sbb
ljmp
imul
push
mov
pop
dec
xchg
mov
stos
mov
push
out
pop
sarb
sbb
sub
mov
xor
fst
outsb
icebp
imul
test
mov
jne
jae
inc
nop
and
ljmp
std
dec
insl
push
mov
test
rcl
or
xchg
jo
lcall
loop
mov
loopne
dec
jo
adc
cmpsl
fnstsw
jmp
pop
xor
dec
fisubrl
aad
loope
idivl
cmc
ss
mov
and
sub
lcall
lret
test
bound
xlat
fdivs
add
mov
mov
ljmp
divl
aam
fsubl
mov
jg
adc
shrb
lea
jle
cmp
repz
mov
jg
jnp
mov
push
stos
scas
fucomip
cwtl
insb
jmp
into
and
inc
sbb
xchg
stos
jmp
les
fldenv
pop
std
pusha
cmp
mov
jp
popf
jmp
and
jae
dec
mov
add
cmp
mov
mov
add
dec
std
jmp
int3
jae
push
jl
int3
cmp
je
jp
es
push
jg
and
ds
and
and
xchg
pop
cwtl
cmpsl
adcl
and
sub
movl
push
sahf
pushl
lahf
in
outsl
bound
sbb
adc
in
enter
inc
gs
jbe
lret
pop
clc
pop
sub
cld
decl
xchg
fdivs
xchg
sub
orl
and
inc
mov
call
fwait
push
rclb
adc
inc
int3
xlat
jbe
or
or
xor
lcall
sbb
pop
jb
aam
pop
out
out
and
xor
mov
jne
or
push
aas
dec
ficomps
outsb
pop
addr16
stos
add
cmp
mov
fistpll
ds
inc
mov
mov
adc
and
xchg
rcll
es
loopne
cwtl
cmp
jecxz
enter
rcr
sbb
cs
inc
cwtl
repnz
xchg
mov
xchg
lock
imul
sbb
xor
cmp
cmp
dec
subb
mov
repnz
mov
lret
cs
sti
repnz
jns
shlb
nop
sub
mov
incl
jns
cmp
cmp
idivl
mov
mov
dec
cwtl
mov
jg
lds
sub
xor
popa
je
dec
mov
push
decl
loopne
call
cmp
adc
inc
or
jmp
mov
push
jmp
xor
dec
sub
insb
dec
es
int3
sbb
push
dec
push
pop
lcall
movb
push
rclb
cmpsl
sbb
mov
ljmp
mov
insl
lahf
jl
fstpl
mov
xor
mov
decl
aaa
pop
sub
dec
repnz
jg
xchg
cmpsl
cs
ljmp
jle
lcall
mov
dec
gs
mov
shr
incl
sub
into
movsb
enter
xorl
mov
movsl
mov
sahf
xor
push
out
xchg
jns
add
jge
add
rorb
dec
and
ljmp
je
pop
pop
push
js
adc
mov
inc
dec
jo
lcall
cmp
sbb
repz
mov
sbb
mov
test
loop
mov
inc
and
cmpl
lcall
jmp
add
add
mov
out
popa
cmp
pop
dec
repz
adc
fcmovnu
clc
cltd
inc
popf
jno
imul
mov
arpl
call
test
dec
push
xchg
adc
mov
mov
mov
jo
fs
in
jl
rcr
insb
ret
or
clc
pushl
insl
jo
adc
cmp
icebp
and
cltd
push
xchg
push
test
incb
xchg
incl
jecxz
jne
xchg
test
cmc
dec
inc
pop
fsubr
testl
adc
mov
hlt
lods
push
xchg
outsb
daa
insl
ret
fstpt
pop
pop
call
ljmp
iret
scas
lcall
cmp
cmc
ret
ljmp
rclb
xchg
adc
fimuls
std
das
jo
xchg
mov
cmp
inc
das
hlt
add
movsl
nop
faddp
orb
mov
js
push
pop
aaa
clc
call
add
push
add
loop
call
jg
or
mov
cmp
stc
decb
fists
cmp
or
jmp
dec
cmp
dec
loope
xlat
cmpsb
aam
lds
sub
ljmp
imul
stos
ret
lds
push
pop
aad
and
stos
sbb
jno
xor
pop
xchg
xchg
inc
inc
call
in
shll
xor
lahf
cs
jl
inc
je
push
loopne
test
loopne
rcr
subl
iret
dec
loope
ja
frstor
sub
stos
fists
add
clc
out
and
popa
adc
sub
jno
test
mov
mov
pop
call
pop
jae
mov
inc
mov
hlt
aas
xor
ljmp
lcall
adc
sbb
pop
out
inc
mov
scas
inc
insb
or
fstpl
flds
mov
popa
lahf
pushf
fwait
mov
imul
cmp
dec
sarl
push
sub
push
test
pop
out
sub
dec
mov
clc
xchg
ss
pushl
fdivrs
mov
xor
xlat
movsb
xchg
in
xchg
das
push
clc
clc
repnz
push
jge
decl
aad
push
mov
leave
xchg
adc
or
fdivl
xchg
add
lret
into
shll
adc
jmp
add
clc
push
add
push
test
ljmp
or
outsb
int3
pop
or
aaa
inc
rcrb
decl
call
mov
mov
stos
shlb
jg
push
add
adc
in
in
aam
out
push
das
dec
inc
cmp
lock
fildl
push
leave
outsl
aam
and
jecxz
jmp
jnp
and
inc
and
xor
call
scas
jp
jp
hlt
xchg
sub
jl
sbb
enter
outsl
call
or
xor
int
jmp
arpl
pop
jl
sub
pushl
in
sahf
jo
pop
push
mov
lcall
jmp
imul
hlt
push
scas
push
push
call
jecxz
mov
out
rcrl
jg
lods
adc
test
arpl
js
pop
imul
inc
pop
add
pop
mov
mov
push
add
ds
test
mov
fcmovb
into
inc
fwait
add
xchg
jg
mov
daa
and
aad
pop
mov
push
xchg
test
or
jns
decl
push
jle
jnp
mov
pop
inc
pop
jle
dec
cwtl
sbb
dec
sub
mov
aaa
js
jge
sbb
xchg
jmp
in
jbe
adc
mov
add
mov
outsl
dec
mov
les
mov
notl
sbb
xor
mov
leave
jg
mov
mov
stc
je
push
and
pop
in
shrl
andl
push
stc
mov
ljmp
loope
sbb
in
push
out
dec
mov
xchg
cli
pop
mov
ljmp
movsb
ret
test
ljmp
push
pop
xor
ss
daa
adc
cmpsl
cwtl
fcompl
stos
cmp
adc
setb
decl
xchg
mov
es
cmp
sub
fistpll
dec
xchg
mov
sub
mov
fdivrs
jae
popa
push
jae
clc
dec
ficomps
imul
in
xor
lcall
hlt
sub
mov
call
dec
cmpsb
xchg
ja
iret
jmp
sbb
fistpll
xor
in
push
clc
lahf
rcr
push
nop
in
mov
jge
or
cld
mov
xchg
das
lock
pushl
imul
int
sub
xchg
xlat
mov
mov
cmpsb
xchg
push
pushf
xchg
cs
mov
pushl
jmp
xchg
xor
jo
or
xchg
rorb
fcoms
add
pushl
and
lret
lar
pop
jnp
adc
jo
push
cmpl
fucomip
decl
pop
scas
or
add
xchg
inc
dec
pop
mov
imul
jmp
imul
inc
adc
hlt
test
lret
add
push
cmp
mov
push
jns
pop
lret
push
mov
push
aad
push
shrl
out
lret
loope
out
jo
outsl
xor
cmp
movsl
inc
fcmovne
out
inc
das
jno
test
iret
decl
sub
mov
repnz
inc
cmp
and
into
mov
mov
inc
xchg
dec
add
push
sub
ret
dec
cmc
xor
lods
aas
and
jg
mov
fstpl
add
outsb
stos
push
sar
int
and
clc
cmp
cmc
shll
push
mov
and
sub
inc
mov
inc
cmpsb
imul
decl
into
lret
sub
mov
fildll
jge
dec
aad
out
mov
or
mulb
mov
lock
lahf
xor
clc
lods
call
mov
out
sti
push
mov
mov
mov
pop
and
pop
test
aaa
imul
lret
or
adc
and
outsl
cmc
jmp
add
jmp
popf
lds
out
sbb
ljmp
mov
pop
sbb
daa
inc
mov
xor
mov
rcrl
imul
jecxz
mov
jg
sbb
sub
int3
das
xorb
add
call
fwait
incl
jmp
pusha
pop
int
xor
inc
jno
mov
dec
push
mov
ss
dec
add
jo
clc
push
pop
pushf
push
or
fistps
cs
jmp
clc
ret
mov
mov
stos
ljmp
incb
mov
inc
test
nop
push
mov
mov
test
cs
sbb
in
push
cmp
fsts
push
stos
push
push
pop
jecxz
dec
adc
xor
lahf
pushl
clc
xor
in
stos
xchg
sbb
xor
in
insl
repz
std
test
pop
cli
fidivs
xchg
jg
outsb
jecxz
or
mov
lcall
lret
cmp
pop
push
cmp
pushf
test
fincstp
out
or
pop
push
pop
mov
jbe
adc
out
jbe
stos
or
aaa
sub
mov
addb
dec
lds
cmp
aas
out
add
add
xchg
daa
xchg
jl
dec
xchg
push
lcall
mov
repnz
fimuls
test
adc
aam
sub
adc
sbb
fmuls
mov
fidivl
daa
aam
dec
out
das
push
push
jmp
adc
shrb
testb
pop
negl
jb
jne
push
sti
push
adc
xchg
int3
and
mov
incl
xorl
sarl
jp
icebp
sub
cli
sbb
adc
mov
incl
icebp
in
jl
cmp
mov
dec
cltd
mov
jmp
imul
lods
sub
push
pop
call
addl
mov
sbb
ss
lea
inc
xchg
icebp
push
sbbl
roll
jp
mov
push
outsb
jg
xchg
and
mov
lcall
cld
pop
outsl
scas
dec
fs
jb
mov
icebp
add
adc
fwait
jns
push
movsb
lcall
leave
insb
and
out
aad
sti
xchg
jmp
addr16
adc
mov
mov
xchg
and
adc
lods
sar
sbb
loop
jnp
shrb
mov
out
lret
ficomps
cld
sbb
jl
add
xchg
aaa
jnp
jl
mov
imul
les
decl
pop
push
pop
jmp
test
aad
mov
int
test
mov
push
andl
push
adc
add
push
cli
outsl
lock
adc
test
cmp
loop
inc
jno
sub
xchg
jp
pop
out
lods
adc
cmp
outsl
iret
fistpl
in
xchg
jmp
and
inc
aad
daa
aaa
mov
int3
push
ljmp
incl
xchg
sub
xchg
pop
sbb
addl
add
mov
test
ljmp
mov
out
dec
jle
mulb
jl
add
lahf
gs
ljmp
jbe
stos
out
cmpsb
cmc
mov
pop
call
ja
add
fneni(8087
xchg
add
jnp
adc
lods
decl
mov
cmp
jns
pushf
mov
stos
lods
push
lock
int
pushl
clc
mov
pop
adc
js
mov
dec
mov
outsl
je
cmpsl
das
sub
dec
mov
mov
lcall
or
mov
out
addr16
nop
xchg
jle
mov
add
push
jmp
ljmp
iret
loop
mov
or
fstl
in
xor
outsb
dec
lds
mov
jne
pop
xchg
xchg
mov
decl
repnz
sbb
mov
push
mov
mov
popf
and
aaa
jge
jg
and
out
in
adc
mov
je
jge
inc
or
pop
xchg
popf
inc
mov
clc
xchg
and
test
int
aas
ljmp
shlb
push
dec
add
sar
pop
clc
incl
cmp
cltd
mov
cmp
in
adc
faddl
xorl
pop
adc
xchg
pop
pop
add
aad
lods
imul
sbb
call
mov
ds
insl
out
in
nop
imul
adc
mov
xor
push
xorb
xor
mov
fisttps
xchg
pop
dec
sub
push
push
mov
es
insl
push
jb
pop
and
lods
pop
cmp
test
nop
ljmp
xor
dec
out
inc
xchg
adc
push
jno
mov
das
in
hlt
dec
jns
pop
insl
inc
sub
mov
sub
mov
or
sub
lods
mov
sub
movsb
or
jp
gs
lock
pushl
adc
cmc
outsl
pop
je
dec
in
rcrb
push
lret
and
sahf
xchg
mov
into
test
pushl
jge
sbb
fbld
push
repnz
in
mov
aaa
dec
adc
lcall
adc
xchg
add
lcall
std
rclb
sub
inc
aad
pop
sub
fwait
xchg
xor
fistl
xor
pop
or
fdivs
hlt
or
push
mov
das
mov
movsl
ljmp
icebp
and
bound
je
jp
mov
jnp
add
mov
cld
call
pop
inc
cmp
sbb
subb
sar
xor
sub
dec
and
leave
cwtl
fbld
mov
mov
mov
les
jmp
out
in
inc
or
gs
mov
lcall
je
in
mov
inc
lea
push
push
scas
and
lcall
shlb
mov
fsubrs
adc
push
mov
movsl
pop
outsb
stos
fsubrl
inc
push
and
stc
sub
and
rolb
icebp
mov
pop
ljmp
orl
lret
or
cld
loop
rcll
and
outsb
cmp
jmp
push
mov
lock
inc
xchg
push
mov
rcl
push
das
pop
leave
loopne
mov
xchg
popf
mov
hlt
inc
sub
cmp
sub
fwait
inc
nop
fdivr
decl
std
mov
icebp
popf
dec
ja
cltd
jo
mov
pushf
fs
xor
pop
std
sbb
xchg
ss
xchg
movsl
out
pop
jo
lret
jmp
mov
sahf
lret
ret
repnz
fcompl
dec
rcrb
outsl
inc
jle
mov
jle
dec
dec
jg
and
push
lret
in
dec
and
pusha
or
lret
xchg
xchg
pop
jne
decl
and
repz
xchg
inc
lods
in
push
sbb
inc
out
aam
pop
cltd
cmp
pop
xchg
decl
xlat
bound
je
jl
fsubl
pop
xor
jns
dec
dec
sahf
cmp
dec
rcl
sar
mov
inc
mov
lds
imul
adcb
inc
mov
popa
iret
jmp
mull
pop
les
cmp
mov
mov
add
sub
adc
decl
lds
pushf
pop
inc
sub
mov
mov
fldenv
shll
mov
mov
jb
sub
addl
sub
incl
push
or
jnp
xchg
icebp
push
out
push
and
ljmp
xchg
cmpl
mov
sarb
lcall
lcall
xchg
dec
lods
jl
jmp
sub
mov
in
xor
sti
add
xor
lcall
out
bound
push
pop
test
adc
push
outsl
xchg
xchg
data16
cmp
call
je
mov
mov
sub
loop
add
outsb
cmc
mov
sbb
incl
lcall
insl
ds
jo
insl
adc
xor
mov
cmp
dec
std
xor
leave
lds
push
push
imul
aaa
fstpl
dec
out
inc
lret
fsts
loop
mov
mov
lret
into
adc
enter
mov
adc
int3
outsl
add
add
imul
lcall
insb
mov
or
xchg
and
dec
mov
cmp
jns
inc
es
rcrl
mov
push
repnz
pop
leave
pop
dec
adc
or
call
or
cltd
movsb
and
mov
rcrl
xor
cld
fiadds
decl
fnstcw
fisubs
dec
fildl
ret
jo
data16
jp
jg
decl
cmpsl
mov
sbb
jae
xchg
cmp
aam
xor
js
sbb
pop
cli
add
adc
pop
inc
outsb
push
mov
scas
mov
mov
popa
nop
outsl
clc
js
addr16
jno
pop
cmc
xchg
mov
decb
xchg
out
mov
mov
loop
into
roll
ds
sub
sub
or
fdivs
lret
pop
test
fisttpl
jae
pusha
stos
call
cs
ror
mov
pop
movl
call
lea
fisttpll
mov
loope
pop
jp
cli
fiadds
xchg
and
inc
popa
mov
call
dec
test
mov
push
cmpsb
pop
xor
mov
or
push
notl
clc
scas
xor
iret
sbb
sbb
dec
and
aad
mov
shrb
out
scas
push
ljmp
add
mov
inc
in
pop
loop
xorl
aam
mov
ljmp
cmpsb
test
mov
cmp
pop
cmp
and
sbb
enter
dec
out
mov
cmp
mov
popa
fwait
in
adc
and
sarl
cmpsl
sub
jmp
push
sub
jne
jg
pop
repz
jge
fsubrs
out
or
decl
push
jbe
adc
fdivr
ss
sub
je,pt
cmpsl
push
xchg
sahf
dec
sbbb
mov
sbb
add
xor
cwtl
dec
call
incl
sbb
sbb
sub
sbb
fists
jg
mov
push
cmp
fstl
xchg
inc
in
mov
fs
lret
loopne
inc
push
test
jge
clc
loop
inc
mov
push
jge
jg
cmp
pop
mov
les
lcall
xchg
mov
mov
orb
push
xchg
imul
andl
mov
mov
cmp
or
cmp
stos
xor
pusha
ret
movsl
mov
pop
or
das
daa
pop
cld
decl
cmpsb
cwtl
dec
cmc
sub
lret
ror
mov
xchg
mov
ljmp
push
mov
sub
mov
push
push
arpl
mov
lods
lcall
push
mov
lods
mov
sbbb
add
leave
pop
adc
inc
addb
in
fdivp
pop
mov
cmpsb
negb
inc
ljmp
repz
je
bound
xchg
dec
push
movsb
movsb
or
cli
call
xchg
cmpb
sbb
lods
mov
idiv
pop
cmp
out
andl
mov
ja
jg
mov
pop
mov
push
popf
jae
in
rcrl
push
mov
dec
in
pop
call
les
sub
fs
jo
stc
mov
sub
icebp
ljmp
cmc
outsl
andb
lret
lret
mov
sub
in
movsb
shlb
dec
sub
adc
ret
dec
lods
push
pop
sub
mov
inc
cmp
mov
sbb
fsts
mov
aad
dec
shll
inc
jl
cmp
ds
out
addr16
mov
ljmp
jle
inc
push
xlat
cli
mov
and
mov
and
jg
ljmp
out
inc
call
and
popf
leave
stos
cmp
pop
xchg
or
dec
pop
sbb
and
pop
clc
decl
xchg
mov
in
iret
cli
hlt
hlt
or
fsts
iret
push
dec
aam
ljmp
or
adc
dec
out
repz
adc
flds
inc
jmp
mov
es
xchg
push
or
in
test
jle
lods
or
outsb
enter
hlt
lret
sbb
jl
ja
sub
and
mov
sub
pushl
and
jae
sub
lret
sub
sbb
push
les
sahf
add
jbe
ljmp
mov
hlt
sbb
cld
pop
cmp
xor
inc
incl
std
lret
cmp
sbbb
andl
call
dec
sbb
in
fistpl
lock
and
mov
fs
decl
push
dec
mov
pop
jns
inc
cmp
xchg
xor
or
int3
lret
jno
filds
dec
dec
lds
lret
mov
int
sbb
js
mov
scas
incl
jg
lret
fistpl
xchg
inc
inc
out
xor
aas
mov
push
push
mov
cmc
pushl
jbe
into
outsl
sbb
fs
inc
mov
add
std
or
dec
mov
mov
cmc
lcall
xor
mov
inc
xor
sahf
les
ljmp
dec
imul
mov
daa
pop
movsl
fsubl
jns
ljmp
inc
icebp
pusha
sahf
and
sar
sbb
sub
mov
jnp
int
mov
call
dec
ljmp
pop
inc
hlt
cld
push
xor
ja
jmp
or
ljmp
add
hlt
arpl
dec
shlb
out
nop
pop
adc
mov
dec
mov
pop
std
call
mov
stos
repnz
xchg
xor
mov
imul
pushl
sti
push
ds
push
sbb
or
mov
call
push
test
pusha
jecxz
cli
imul
xchg
or
mov
jno
lods
imul
mov
ret
sti
mov
dec
jns
lods
daa
test
xor
jmp
clc
fisttps
test
ror
mov
push
inc
xor
test
movsl
jmp
mov
xor
and
adc
inc
adc
pop
pop
loope
add
add
mov
or
cmp
mov
cltd
mov
jg
and
mov
shlb
cmpsb
lock
xlat
or
xor
push
push
call
das
inc
hlt
xor
mov
dec
cs
mov
or
outsl
lock
push
inc
or
sar
push
jge
test
iret
loopne
mov
push
adc
xchg
lods
adc
rclb
hlt
fnstsw
adc
inc
pop
test
xor
lcall
xor
cmc
fldpi
jg
add
ss
pop
into
or
lcall
lcall
dec
pop
push
xchg
pop
xor
pop
pushf
xchg
push
nop
mov
mov
adc
call
push
xor
insb
arpl
into
into
les
int
or
filds
clc
xchg
jmp
pop
sbb
cs
call
sti
add
sbb
test
xor
mov
push
mov
repz
stc
ljmp
xor
fcompl
mov
and
sarb
in
popf
lcall
mov
enter
pop
xor
or
call
inc
mov
pop
out
das
and
push
loop
loop
mov
xchg
outsl
das
xchg
mov
leave
adcb
sub
stos
ljmp
test
call
lock
adc
outsb
addl
pop
rcl
mov
mov
mov
mov
push
lahf
sbb
jnp
push
and
push
cmpsl
shrb
dec
cmp
sub
jecxz
mov
and
rcrl
test
xchg
cmpsl
and
dec
push
icebp
jnp
push
mov
and
test
out
jno
add
sti
mov
cmp
int3
pop
jb
nop
jp
jb
cmp
outsl
rolb
dec
dec
hlt
mov
jmp
adc
subl
cwtl
sub
subb
or
mov
clc
addr16
jecxz
int
mov
pop
jbe
add
mov
sbb
adc
mov
mov
movsl
flds
stos
lods
add
testl
clc
pushl
pop
cmp
inc
les
inc
mov
cmp
and
push
into
pushl
jno
movsb
fisubrs
cmpsl
mov
ja
or
enter
and
fcos
mov
aas
rcrb
cmc
sub
mov
rcrb
adc
cwtl
jbe
add
push
and
jmp
xchg
shll
sbb
mov
mov
jl
sub
cmpsl
popf
repnz
sub
mov
rorb
fcoms
mov
add
decl
roll
aas
leave
dec
mov
scas
cmp
test
or
ljmp
fnstsw
jmp
dec
sub
nop
sub
adc
mov
movsl
enter
decl
out
aas
movsb
lods
jns
sbb
jmp
icebp
adc
mov
mov
xor
lds
sti
jge
xor
lods
sub
mov
mov
arpl
push
aad
ljmp
xor
insl
leave
jb
adc
vpshufd
fldt
testl
lret
jl
fnstenv
xchg
sbb
fst
jnp
aas
lods
out
stc
cmp
jg
ljmp
aas
es
into
iret
loopne
jle
je
dec
add
mov
aam
push
pop
and
mov
pop
xchg
pop
pop
adc
mov
fcoml
insl
fstps
xchg
jp
cmp
add
adc
call
push
xchg
scas
mov
cmp
xchg
sti
sti
push
in
sub
mov
or
add
pop
int3
fmul
lea
jg
xor
cwtl
pop
fld
jecxz
adc
mov
push
pushf
cmp
dec
sahf
xchg
push
inc
enter
adc
int
sahf
inc
lret
xchg
leave
sar
pushl
rclb
mov
dec
shll
jg
xor
loopne
int
scas
sbb
push
leave
mov
pop
jnp
int3
das
sub
mov
ret
fldcw
jmp
aaa
pop
mov
and
jmp
jb
cwtl
daa
test
pop
sbb
adc
cld
dec
pop
jns
aad
lock
sbb
pop
push
jle
mov
pop
mov
xchg
lods
ja
movsl
hlt
test
aaa
xchg
push
test
js
add
jl
dec
push
dec
xchg
loop
inc
dec
int3
addb
mov
mov
inc
movsl
mov
mov
push
sub
out
pop
rcr
test
fildll
add
into
lds
pop
call
dec
sarl
mov
fs
lret
addl
pop
cld
sahf
xchg
sbb
syscall
add
adc
icebp
sub
add
sbb
push
ljmp
mov
mov
mov
insl
andl
int
out
inc
div
scas
xor
xchg
cli
fistl
inc
out
lds
sub
inc
mov
and
and
icebp
jmp
decl
jmp
lret
inc
std
fdivs
arpl
pop
neg
in
xor
xor
ret
pop
std
ljmp
mov
xchg
xchg
inc
or
hlt
adc
in
add
fwait
aas
mov
je
fdivr
cmp
repnz
mov
mov
popf
cwtl
inc
test
inc
mov
idiv
push
fistpll
pop
andb
daa
xchg
add
jbe
adc
sub
push
push
outsl
add
jae
add
movsb
sahf
xchg
repz
sub
jmp
ret
push
cmc
arpl
test
mov
repz
loop
mov
pop
sbb
mov
mov
push
mov
imul
lods
xor
xchg
sbb
mov
mov
dec
mov
mov
push
xor
jge
sti
sub
stos
jmp
iret
mov
std
inc
jmp
push
dec
cltd
rcll
in
mov
rorb
push
mov
sahf
scas
int
add
fists
jns
mov
gs
les
sub
out
loop
rorb
outsl
xchg
stos
add
inc
in
sbb
pushl
mov
cmc
or
add
pop
and
pop
push
jns
lret
jnp
jg
mov
clc
add
sarb
sub
decl
inc
mov
mov
inc
nop
ljmp
icebp
or
les
add
daa
lods
lods
dec
repz
movsb
inc
mov
decl
iret
push
repnz
jle
int3
cmc
jge
jmp
decl
lcall
mov
xor
in
ds
out
lcall
mov
lret
mov
aad
arpl
jbe
hlt
jmp
jmp
mov
sub
aas
mov
adc
jae
mov
mov
jg
jl
call
rorb
orb
add
rorl
lods
insl
mov
fcmove
or
ljmp
xchg
mov
pop
popf
and
xchg
adc
dec
repnz
xlat
adc
jne
aaa
clc
pushl
xchg
in
pop
cltd
cs
rol
push
cmp
insl
inc
stc
lcall
inc
lods
mov
repnz
adcl
push
sub
sub
fs
dec
enter
push
mov
mov
xchg
pop
mov
jne
out
push
and
pop
shlb
clc
stos
filds
fildll
inc
icebp
mov
jo
xchg
jae
cmpb
negb
movsl
mov
ljmp
xor
aad
adc
je
je
push
insb
or
sbb
ds
in
aaa
stc
iret
rorl
pop
std
outsl
pusha
or
ja
imul
ljmp
lea
and
xor
jae
jecxz
outsl
jge
pop
push
fdivrl
pop
ds
pop
pop
and
mov
fildll
mov
cmp
or
pusha
push
mov
push
fbld
popf
inc
mov
loope
call
jo
push
jge
push
lahf
je
adc
test
stos
jae
in
dec
and
incl
lods
xchg
gs
mov
xor
lods
test
and
fidivrl
inc
push
cmc
decl
cld
pushf
xor
inc
cmpsb
mov
loopne
mov
xor
lcall
inc
adc
push
cli
ret
inc
add
loopne
mov
dec
test
push
hlt
pushl
punpckhdq
xchg
add
das
adc
decl
out
and
pop
xor
les
fs
or
and
pushl
push
push
jle
test
loope
sbb
mov
or
insl
cmp
loopne
add
jmp
popa
or
insl
aaa
mov
pop
ds
and
inc
aas
call
les
push
pushf
hlt
mov
fcoms
mov
filds
jne
mov
das
call
add
jl
ljmp
testb
pop
add
ljmp
cld
mov
adc
lea
inc
sbb
mov
call
jmp
cld
aad
add
fisttpl
push
loope
xor
inc
test
push
push
or
or
or
mov
sub
pop
aaa
jle
sub
push
inc
jmp
cltd
jmp
rorl
jns
jnp
in
or
mov
pop
scas
stos
cld
pop
ljmp
pop
iret
cmpb
jge
fistps
adc
jno
rcll
fcmovnbe
mov
fs
sbb
mov
stos
pop
sub
push
enter
inc
les
jg
into
arpl
fsts
in
mov
xchg
adc
xor
pushf
jmp
mov
mov
std
and
gs
add
outsl
cld
lahf
push
ret
out
lcall
sub
inc
aas
sbb
cwtl
dec
sub
xchg
fildll
lods
xor
push
pop
adc
mov
nop
jno,pn
push
sub
decl
enter
outsl
mov
fsubrp
inc
push
arpl
rol
pop
mov
iret
jl
js
cmpsl
pop
pop
call
dec
push
mov
xchg
or
and
rcll
xchg
aam
in
cmp
into
lcall
mov
cmp
and
dec
jge
jecxz
inc
jg
sbb
iret
rcpps
sub
punpckldq
call
out
test
mov
sub
scas
insb
popa
xchg
aad
or
mov
mov
jne
mov
mov
or
outsl
adc
lods
fcomps
lods
cmp
incl
out
aaa
jmp
lods
xor
das
inc
rclb
cmpsb
jno
dec
scas
xlat
imulb
fbstp
fsts
sbb
in
push
xor
bound
loopne
scas
jo
xor
clc
pop
ljmp
mov
out
adcb
add
stos
loop
pop
outsl
ss
shll
mov
adc
pushl
imul
pusha
jbe
iret
jno
mov
ret
sarb
pop
pushl
jle
inc
test
or
xchg
adc
add
push
subb
jge
mov
inc
jecxz
or
xchg
xlat
decl
ja
cltd
add
rcll
mov
mov
loope
dec
pop
scas
dec
pusha
rolb
add
sti
dec
sti
ss
cwtl
test
push
out
shll
mov
int
pop
outsl
pushl
sub
xor
mov
xchg
xor
int3
fxch
stos
or
jg
mov
and
add
mov
xchg
mov
fst
mov
mov
fdivr
cmc
mov
fstl
ret
js
jb
inc
xlat
xor
pushl
or
nop
xchg
mov
or
ror
inc
jg
andb
lods
idiv
pop
cli
lcall
icebp
dec
push
mov
jecxz
and
pushf
lret
jno
cmc
lock
push
add
negb
xlat
push
mov
ss
fldcw
xchg
hlt
fs
mov
mov
add
aaa
mov
not
dec
xor
push
sti
xor
push
call
shrb
fs
and
xor
xor
nop
movsl
lcall
js
pop
adc
fistpl
loop
add
push
sub
lcall
mov
fdivrs
jns
jmp
popf
cmp
adc
push
mov
incl
xor
add
push
xorb
mov
sbb
or
add
pushl
rcrl
pop
sbb
push
scas
pop
mov
lcall
decl
push
mov
xor
dec
push
loopne
adc
mov
lds
clc
sti
mov
out
hlt
or
rep
mov
cmp
idivl
pop
xchg
orb
bound
dec
jg
jg
mov
and
jae
pusha
mov
or
mov
aad
outsb
jecxz
dec
test
and
xor
jl
jl
push
jne
repnz
lds
jmp
in
getsec
mov
and
sub
sbbl
arpl
imul
lcall
fistpll
cmp
xchg
dec
or
sub
scas
sub
imul
test
add
iret
pushf
push
add
push
mov
pop
jge
jb
and
loopne
incl
arpl
mov
rclb
loop
iret
out
pop
xchg
jmp
fucomp
pop
add
fwait
pop
push
js
pushw
sbb
mov
scas
sbb
mov
cmp
fucomip
cmp
xchg
fdiv
or
and
push
cvtps2pd
cmc
jb
xor
call
test
push
add
fcom
sahf
fstp
sbb
jge
shrb
sbb
stos
mov
pushl
xor
dec
xor
inc
lret
test
insb
fisttpll
cmpl
js
fisttpll
das
ss
call
mov
or
insb
cmp
jae
add
popa
mov
push
hlt
cmp
and
or
test
pop
cmp
adc
imul
lea
jns
jae
repz
cld
cld
into
mov
fwait
sub
loop
pop
mov
add
arpl
enter
jecxz
pop
mov
dec
aam
cmp
cmpsb
xor
inc
es
cmp
mov
pop
clc
adc
xor
push
xchg
movsb
rcrb
fcomi
pop
addb
cmp
cli
ffreep
ljmp
mov
dec
mov
mov
push
or
pushl
sbb
aam
inc
fistpll
xchg
cmp
xor
stos
mov
inc
xor
mov
ss
xchg
xor
in
xchg
mov
mov
xor
std
ljmp
mov
and
or
sub
test
outsl
ljmp
test
lods
dec
test
mov
pop
mov
push
ja
aas
xor
jmp
inc
xor
xorl
add
jmp
or
cmp
pop
mov
dec
push
or
xchg
sti
jmp
andps
add
mov
arpl
inc
outsb
push
jmp
lcall
sub
jge
push
out
or
mov
fisubl
xor
icebp
pop
outsb
aam
cld
incl
adc
out
mov
scas
adc
cmc
ljmp
icebp
adc
imulb
fwait
push
and
mov
ss
pushf
adc
dec
xorl
xchg
inc
push
sub
std
arpl
adc
jne,pn
stc
lea
xchg
call
sar
mov
mov
add
jae
lds
icebp
lret
and
jl
pop
xchg
insl
add
and
mov
ljmp
push
cmpsb
cltd
in
mov
stos
and
push
mov
mov
daa
sahf
mov
mov
xorb
and
je
pushl
icebp
mov
mov
cmc
pop
mov
aad
adc
push
dec
gs
stos
adc
pop
call
std
xchg
gs
jecxz
js
cmp
rcll
loop
insl
jno
jecxz
xchg
ret
adc
cmp
sub
fsubrl
fldcw
sub
add
imul
push
js
mov
sbb
sbb
aaa
inc
decl
cmp
out
push
sbb
lret
movsl
add
enter
jle
sbb
and
xor
add
cmpsl
mov
cltd
fildl
push
sub
shll
mov
inc
xor
fsubs
mov
je
das
icebp
pop
clc
xchg
and
mov
xchg
int3
lods
mov
out
or
pushl
mov
cli
or
jge
dec
sbb
aas
or
adc
sbb
xchg
or
adc
dec
inc
dec
xor
mov
cltd
pop
or
jb
mov
ljmp
mov
dec
push
xor
xorl
call
push
push
ds
mov
xchg
jg
sub
xchg
insl
push
insb
dec
addr16
lds
adc
cmp
jmp
push
ljmpw
inc
fsts
decl
into
inc
dec
cmp
call
sub
add
or
mov
sbb
adc
daa
push
call
call
xchg
sbbl
lea
push
cmp
pop
jnp
jns
orb
inc
int
iret
adc
sbb
mov
nop
sub
mov
out
or
inc
lock
ds
xlat
xlat
xchg
das
lock
call
adc
fildll
sbb
dec
jl
and
dec
dec
int3
fcompl
lds
mov
stos
js
adc
sbb
mov
dec
cmp
in
stos
mov
std
fmull
decl
and
rorb
cmpsl
mov
mov
and
and
addb
sbb
and
sbb
lcall
mov
xor
cmc
icebp
ss
adc
push
and
mov
jmp
sarb
xchg
dec
notl
sbb
out
lds
decl
insb
xchg
lret
adc
mov
dec
ret
push
jo
mov
cmp
std
inc
in
jae
ficoms
cli
out
rorl
inc
orb
sbb
push
aaa
lods
inc
jmp
ss
pushf
xchg
and
movsl
sbb
enter
lcall
adc
outsl
mov
add
hlt
sub
call
cmp
xchg
inc
add
jmp
add
sbb
jmp
sahf
pusha
mov
pushl
in
ljmp
cltd
xchg
cmc
lods
call
fstpt
inc
test
fbld
movsb
test
popf
hlt
lcall
es
mov
sub
lea
fwait
decl
es
movsl
cmp
les
lock
push
outsb
xchg
ljmp
sub
out
scas
in
mov
call
sbb
xchg
es
lods
dec
mov
out
insl
mov
movsb
stc
push
push
into
outsb
aad
decl
cld
test
jno
pusha
mov
xchg
enter
inc
sbbl
jmp
jns
xchg
out
dec
inc
das
out
push
ss
pop
sbb
fs
decl
std
popl
xor
clc
in
xchg
scas
inc
fcomp
or
ficompl
lds
lahf
stos
pop
mov
rorb
sarl
cwtl
xchg
inc
push
shrb
aaa
incl
push
pop
testb
fnsave
xor
xor
loop
xchg
jle
les
stc
mov
jge
decl
ret
mov
shll
and
adc
xor
mov
cld
incl
mov
xchg
ffreep
test
clc
jnp
dec
jb
ljmp
in
push
pushl
sbb
jge
rolb
or
mov
sub
adc
lret
jge
test
pop
jg
push
pop
loop
stos
inc
ss
test
dec
jbe
enter
mov
dec
jecxz
mov
cmp
adc
call
add
test
repnz
mov
cmc
cs
imul
adc
std
call
xchg
sbb
data16
mov
sub
pop
lods
or
mov
inc
mov
sahf
pop
cmp
mov
ljmp
mov
mov
into
lret
stc
out
mov
mov
cmp
sbb
jo
shll
arpl
js
mov
rol
or
jg
nop
out
mov
aas
dec
jbe
add
sbb
lcall
lcall
xchg
dec
sahf
shl
in
inc
testb
jg
cmp
add
pusha
test
fdivrl
sbb
aad
and
jmp
push
ljmp
jb
jbe
lcall
add
lds
xchg
pop
test
add
call
pusha
inc
xor
lods
movb
outsb
dec
adcb
bt
or
ja
jbe
mov
addb
mov
lods
roll
xchg
xchg
jne
jg
pop
in
sub
outsl
inc
lds
icebp
cmp
incl
or
rcr
sub
adc
loopne
fucomip
into
push
js
dec
popf
fdivl
popf
fisubl
jp
cli
fildll
mov
adc
jbe
xchg
cs
fdivl
out
mov
les
lds
sub
push
jge
aas
mov
push
pop
push
call
mov
ret
ja
andl
cmp
out
push
inc
and
ret
push
pop
lea
mov
mov
ljmp
and
add
lods
sbb
das
stos
leave
jg
cs
pop
subl
dec
cld
incl
push
imul
shlb
sub
data16
jmp
test
xchg
fistpll
mov
inc
xchg
mov
ljmp
jns
outsl
cld
call
xor
inc
daa
nop
push
dec
in
mov
aaa
mov
lret
ds
xchg
push
nop
sbb
mov
adc
mov
lods
les
cwtl
xchg
push
test
hlt
jmp
sbb
mov
push
sbb
sti
cmp
mov
jge
jae
loopne
push
stos
pop
lcall
movsl
movl
lods
adc
xor
mov
push
sbb
in
ret
mov
sub
incl
loope
adc
loopne
dec
das
jg
js
push
sbb
in
outsb
lea
pop
movsl
mov
pushl
xor
nop
mov
add
movsl
mov
lods
jnp
cs
std
inc
lods
out
sbb
jecxz
addl
je
cmp
incl
xor
mov
fucomi
or
jae
add
mov
mov
mov
and
ret
inc
jge
adc
cmc
pushl
sub
pop
push
nopl
fnstenv
add
stos
dec
mov
mov
jg
call
clc
mov
dec
icebp
xchg
int
dec
cli
orb
enter
or
mov
ljmp
dec
stos
jg
push
dec
inc
dec
push
test
cmp
aam
xchg
scas
shl
in
decl
std
ljmp
cmp
jo
inc
cmpsl
ja
jnp
fcmovu
pop
jae
fcomp
mov
hlt
sbb
inc
fcmovnu
cli
incl
mov
jns
xor
ret
aaa
sub
ja
sbb
shrb
ret
ss
inc
jmp
daa
xchg
gs
mov
cltd
adc
outsl
cld
jg
mov
aad
test
lahf
insl
test
cmp
sbb
add
mov
and
jmp
mov
mov
cmp
sbb
push
jmp
or
adc
xor
scas
xchg
pop
mov
ja
mov
push
pop
adc
rcrl
fninit
repz
mov
fwait
ss
addr16
cld
pushl
test
repz
loop
in
scas
pop
push
dec
test
test
and
test
jecxz
adc
jmp
adc
xlat
mov
out
xor
ss
jg
out
out
jg
jle
sbb
dec
std
inc
aad
lret
add
test
xorb
inc
dec
lcall
lcall
mov
push
int3
aas
shll
and
test
pusha
adc
outsl
lock
fnstsw
push
dec
movsb
jnp
int
popf
call
mov
movsl
repz
js
pusha
push
imul
lahf
cltd
mov
adc
fwait
xlat
fisubrs
mov
add
mov
mov
and
mov
dec
std
incl
daa
mov
pop
inc
adcb
subb
ljmp
js
jo
js
icebp
lahf
popa
mov
pop
add
sub
mov
fildl
insb
or
push
outsl
xchg
jno
iret
jne
cli
test
sbb
hlt
add
sti
cwtl
movsb
jecxz
inc
imul
and
call
orb
clc
sbb
insb
mov
pop
ja
sub
ljmp
push
mov
inc
push
add
insb
lock
and
stos
bound
xlat
mov
call
incl
pusha
mov
fists
pop
inc
cld
icebp
mov
stc
test
push
pop
call
push
lahf
sbbl
cs
std
sub
dec
mov
enter
adc
test
inc
dec
inc
and
and
jp
movsl
les
or
mov
pop
sub
loopne
ss
je
mov
shll
lock
call
popa
inc
jns
lods
cmp
mov
mov
scas
jle
cmp
sti
movsl
divb
jg
das
and
scas
cmpsb
sarb
cmp
popl
incl
adc
inc
imul
aam
xor
cli
add
ljmp
adc
jle
sidtl
mov
lcall
push
ds
stc
lahf
fsubrl
mov
das
xchg
mov
das
data16
mov
insl
adc
sbb
pop
std
add
insb
adc
dec
mov
add
jg
call
mov
jp
rclb
xchg
jle
cmp
ljmp
hlt
imul
cli
fnsave
xchg
clc
aas
neg
fdivl
scas
dec
inc
fstpt
push
loopne
adc
mov
cmc
xor
mov
lock
pushl
test
ds
cld
dec
mul
jae
dec
jno
mov
cwtl
jmp
lcall
outsb
shlb
fstl
aaa
add
pushl
insb
jmp
out
sbb
lods
testl
pop
push
sub
int
movsl
mov
ja
mov
ljmp
pop
xchg
xor
pop
mov
adc
das
adc
pop
xlat
test
dec
stos
ret
andb
aaa
cli
pop
ret
lahf
sub
adc
adc
fistpll
jnp
xor
hlt
ret
loopne
insb
mov
out
cltd
addl
add
rorb
lcall
fildl
fs
add
mov
call
pop
mov
pop
ds
bound
ficomps
adc
mov
pop
mov
mov
inc
xchg
imul
sbb
push
sbb
ljmp
cmp
daa
add
into
fwait
inc
mov
sbb
add
or
mov
fdivrp
or
test
leave
jge
and
mov
loope
xchg
adc
and
xchg
shll
rcrb
std
ja
mov
mov
adc
sarl
movsl
ljmp
inc
in
out
stos
push
fs
cmp
outsl
mov
pop
int
aas
sub
or
xchg
movsl
cmp
incl
pushl
push
mov
push
out
sub
rolb
jg
rolb
outsb
cmpsl
mov
les
hlt
in
clc
insl
dec
mov
sub
inc
lcall
dec
nop
mov
hlt
cmp
cmp
repz
insb
insb
sub
mov
mov
call
lahf
dec
cld
call
or
sarl
ror
pop
push
inc
pushl
xchg
sbb
ds
and
and
jmp
lds
incl
xlat
loop
xchg
inc
cli
pop
test
pop
adc
call
mov
dec
sahf
lock
icebp
or
mov
stos
ljmp
lock
inc
fcomip
loope
lret
adc
std
xchg
dec
xchg
lahf
jns
addr16
jp
sar
or
bound
out
jns
and
jns
pushf
ljmp
pop
call
inc
test
cmc
mov
call
int3
mov
subb
lahf
out
arpl
hlt
hlt
ljmp
icebp
mulb
sahf
pop
cli
jns
pop
call
ret
cs
mov
xchg
popf
fisubs
repz
cltd
xor
call
rorb
je
rorl
js
pop
push
sub
ja
or
stos
jbe
cmp
sub
and
xor
shrl
push
int3
stc
add
das
lock
in
add
pop
sahf
push
call
cmp
jae
or
jmp
mov
cmpsb
adc
mov
adc
jg,pt
sub
pushf
mov
fcoml
mov
pushl
scas
fmull
and
or
nop
fimull
out
pop
fwait
aam
jp
inc
jp
cmp
dec
push
push
cld
mov
push
and
shlb
rcrb
push
mov
xchg
int
aad
pop
sbb
lcall
arpl
jle
mov
outsl
mov
inc
stc
in
fsub
out
xchg
inc
push
inc
sahf
inc
mov
lcall
scas
mov
repnz
pushf
xor
pushl
mov
or
jecxz
dec
out
mov
pop
mov
add
cld
inc
in
decl
sahf
std
mov
orl
sub
pop
dec
mov
pop
lcall
aas
sahf
sti
inc
and
jle
or
mov
int3
in
mov
inc
xchg
rcll
std
jg
inc
lea
enter
insl
xchg
insl
mov
pushl
sbbb
add
mov
pusha
mov
andl
xchg
call
pushl
add
outsb
movsl
pop
cld
xor
rorl
push
bound
jae
xchg
dec
mov
cmp
mov
or
out
sub
or
fdivl
inc
loopne
bound
jle
test
and
mov
fucomip
mov
and
cmp
in
mov
push
mov
and
jge
ljmp
stos
sub
push
pop
mov
cmp
mov
rolb
adc
js
sar
push
xchg
push
fistpll
popa
in
lds
push
outsl
or
pop
lahf
or
aaa
jmp
cltd
xor
push
lcall
jb
adc
icebp
xchg
mov
cmc
pop
adc
mov
jmp
adc
mov
adc
test
mov
dec
lahf
inc
loope
pushf
repnz
addl
jg
mov
xor
ja
insb
pop
leave
lcall
xchg
pop
adc
movsb
mov
hlt
jns
mov
add
mulb
pop
div
push
pop
mov
in
mov
jmp
inc
mov
mov
movsl
popf
adc
push
lret
shlb
std
inc
cmc
pushl
ficoms
push
xchg
adc
add
or
test
imul
pop
es
out
mov
movsb
lahf
inc
push
sahf
loope
dec
adc
fiadds
add
subl
jmp
lods
arpl
mov
popa
jge
push
pop
ljmp
pop
inc
sub
rolb
cmp
mov
dec
movhps
jb
das
cld
decl
popa
push
mov
jge
stos
xor
push
xor
rclb
in
pusha
aad
ljmp
adc
xor
dec
or
push
loope
arpl
outsl
std
fbld
or
lret
lret
push
ss
pop
xor
xor
push
movsb
push
ret
decl
add
daa
hlt
into
lea
in
or
incl
xchg
fsubrs
popf
mov
or
mov
pop
jno
lods
dec
mov
cli
aam
mov
mov
rol
rorb
add
lock
jl
les
das
shr
jno
cli
mov
out
or
dec
repz
mov
je
dec
xchg
sub
daa
and
dec
movsb
sub
mov
mov
loopne
std
or
push
xor
pop
mov
cmpsl
in
outsl
mov
decl
fidivl
stos
test
sbb
ret
add
mov
jl
lret
ret
adc
dec
mov
dec
lods
stos
stc
fbld
lcall
lock
mov
jae
stc
push
push
cmp
mov
jmp
pushl
jb
or
test
inc
jo
call
repnz
jl
ffree
or
sub
idiv
or
add
adcb
leave
test
jne
push
scas
lods
cmp
mov
xor
adc
loopne
and
out
loope
mov
jo
out
xlat
and
xchg
fwait
sbb
scas
add
outsb
inc
iret
xchg
aam
les
pop
pushf
xchg
jle
cltd
or
out
xchg
addw
pushl
clc
xlat
aam
adc
pushf
pushf
mov
xchg
aam
push
dec
mov
data16
push
ljmp
jns
pushf
xorb
inc
ss
fadds
jg
mov
loop
and
arpl
or
dec
jmp
pop
pop
icebp
mov
inc
mov
flds
addr16
aam
fisttpl
pop
jl
aas
xor
insb
sub
inc
push
mov
jno
pop
sahf
xor
push
inc
add
xchg
inc
pop
push
cltd
push
mov
int
ss
and
xor
or
mov
leave
imul
mov
jp
xor
xchg
in
call
xlat
adc
jb
jnp
idiv
or
fistpll
mov
leave
jge
iret
cmpsl
repnz
and
inc
pop
fimuls
das
rorl
outsl
lcall
pusha
mov
adc
test
xchg
adc
lcall
push
jmp
sbb
loopne
rcll
jg
pop
cld
test
sahf
out
int3
mov
mov
dec
add
mov
in
out
push
aam
xchg
xchg
cmpsl
lret
jbe
mov
xchg
mov
outsl
cld
adc
jle
loopne
jg
orb
repnz
in
jo
pop
xchg
and
xchg
push
or
sti
or
lea
movsl
jge
mov
cmpsb
push
bound
push
call
or
sbb
pop
ljmp
adc
mov
jecxz,pn
call
test
and
push
inc
and
in
jge
call
sbb
dec
std
adcl
int3
call
xor
bound
lcall
jns
inc
icebp
in
idivb
jno
dec
inc
pusha
sbb
jg
incl
in
xchg
pop
dec
stc
daa
scas
sub
arpl
push
cmp
aas
dec
push
lret
movsl
call
sbb
jecxz
sub
mov
loop
lcall
lcall
and
shl
push
cwtl
lcall
lcall
insb
sub
addl
and
jne
cmp
leave
aas
mov
mov
push
dec
or
dec
jb
or
mov
xorl
out
pop
imul
lcall
cmp
stc
mov
das
hlt
and
aad
cmp
imul
sbbb
inc
sbb
mov
shl
dec
icebp
and
out
cmc
aas
aam
or
ljmp
jne
lret
sbb
inc
sub
sbb
mov
jmp
ljmp
xor
dec
hlt
xchg
jl
xchg
inc
xchg
inc
je
roll
or
sarl
add
jp
inc
mov
xchg
call
cld
jg
adc
xchg
sub
decl
dec
or
loop
cwtl
inc
or
ja
fnstenv
lcall
pop
lahf
add
pop
cmpsb
repz
cmp
repnz
fildll
sar
call
outsb
nop
rcrl
loope
test
mov
and
popf
cmp
pushl
arpl
xor
movsl
jmp
movsb
dec
rcr
jae
or
sub
mov
lds
fdivrl
xchg
sub
mov
pop
rcr
pop
mov
lods
jnp
int3
or
out
adc
mov
movsb
cmpsb
cli
jg
pop
stc
lret
xchg
push
lea
mov
pop
jae
lock
adc
sbb
clc
xchg
hlt
cmc
jge
pop
jl
ret
fcoms
add
push
lods
mov
mov
lods
fwait
xchg
sahf
sbb
js
jnp
dec
jne
xor
dec
daa
mov
mov
es
jns
pusha
cs
iret
popl
push
scas
adc
icebp
outsl
jo
test
xor
ljmp
fs
fistl
arpl
sbb
filds
test
pop
cmp
aaa
or
out
sbb
loopne
ljmp
push
and
cmp
sbbb
into
sub
call
std
call
fidivl
stos
push
pop
jg
jmp
push
jl
decl
pop
jnp
popa
cld
xchg
scas
xor
inc
into
cmpsb
push
iret
push
cmp
xchg
mov
mov
pushl
mov
ds
lods
inc
and
in
shlb
push
inc
test
cmp
mov
mov
stc
dec
mov
inc
fcoml
lods
test
cmp
push
decl
sub
test
orl
mov
mov
ds
pop
mov
out
sbb
shll
add
lret
and
push
call
sub
pop
cli
test
pop
cmp
adc
scas
adc
add
call
sub
hlt
mov
aad
cmp
test
cmpsb
call
test
int
cmpsl
cli
dec
rcrb
cmp
push
inc
rcll
out
outsb
mov
or
incl
sbb
adc
adc
out
cmp
test
push
add
and
clc
decl
xcrypt-ecb
cmpsl
dec
cmp
fs
and
add
clc
mov
lcall
jecxz
call
repz
pusha
and
ret
fs
ljmp
pop
add
jns
jbe
xor
xorb
mov
adc
adc
clc
out
sub
mov
cmpl
cld
adc
test
fwait
call
xchg
icebp
dec
lea
xchg
outsl
jno
mov
push
sub
js
cmp
add
insl
sbb
cli
pop
push
aaa
adc
clc
adc
cmc
or
jmp
pop
dec
or
imul
fbld
mov
push
adc
pop
or
dec
arpl
and
outsl
lock
sbb
loopne
xor
daa
mov
lcall
mov
mov
xchg
xchg
testl
and
loop
in
repz
ds
or
jg
movsb
sbbl
cmp
jg
adcb
mov
icebp
lret
sar
jmp
andl
push
cmpb
ss
jecxz
pop
mov
mov
dec
cmc
inc
inc
nop
int3
out
push
js
pop
sub
inc
sub
xchg
cli
call
adc
pop
js
lahf
or
ja
fstl
push
mov
xor
push
xlat
mov
decl
and
out
dec
std
and
out
sahf
ss
mov
mov
rorl
jmp
jae
add
mov
nop
jnp
cmp
out
cmpsl
cmc
cmpsb
ds
adc
lcall
dec
data16
fildl
pushf
pandn
mov
jmp
adcl
inc
or
fucomip
call
aad
out
jnp
dec
inc
ds
scas
pop
ja
out
add
dec
push
pop
jmp
je
mov
xchg
iret
push
and
fwait
mov
sub
ljmp
or
adc
pop
loopne
push
inc
es
jp
insb
jae
pop
arpl
cmp
pop
fnstsw
mov
xlat
repnz
cmp
bound
adc
mov
mov
jg
pop
ds
or
push
jb
mov
fwait
jnp
jo
out
mov
outsl
mov
out
das
lock
mov
sbb
icebp
rorl
ss
jbe
mov
xchg
std
pop
inc
dec
add
clc
dec
cwtl
sbb
shlb
mov
cmp
add
push
das
lock
pushl
xchg
pop
mov
dec
in
inc
iret
sub
mov
adcb
clc
push
scas
sbb
sbb
xchg
rcll
into
clc
push
mov
cmpsb
adc
call
jmp
adcl
mov
push
je
sub
std
loop
decl
mov
adc
and
xchg
lods
cmp
aad
fldl
fcomps
idivb
cli
adc
cmp
add
pop
rcr
insb
lret
mov
jmp
xchg
ds
test
lods
imulb
fdiv
sub
std
jg
das
mov
std
outsb
inc
ret
pop
adc
mov
xchg
das
outsb
jmp
outsb
mov
adcb
incb
mov
out
inc
jmp
in
jmp
hlt
xor
out
push
mov
scas
jle
mov
enter
into
mov
inc
ljmp
sbbl
push
shlb
push
jle
addl
pop
dec
xchg
or
inc
sbb
inc
sub
enter
test
fadd
stc
call
inc
movsl
sti
addr16
ret
cwtl
imul
ret
aas
jle
pop
add
pop
inc
jg
decl
fwait
cltd
ja
je
cmp
cmpl
mov
stos
adc
add
mov
inc
ja
out
mov
notb
dec
popa
push
mov
aad
repnz
inc
mov
pop
scas
adc
call
mov
insb
pop
dec
and
jecxz
repz
loope
rolb
fwait
cmpsb
decl
into
int3
jb
data16
dec
push
aam
fadds
fsubs
xchg
jnp
clc
push
outsl
hlt
pop
sub
shrl
xchg
loop
outsb
or
push
cli
idiv
or
out
mov
lods
popl
mov
or
incl
jns
iret
push
movsl
dec
pusha
cltd
mov
frstor
xchg
repnz
decl
jmp
cmp
adc
outsl
xlat
cmc
faddp
or
cmovb
sbb
ljmp
pop
xchg
in
call
mov
into
jne
aaa
xorb
xor
adc
je
out
sbbb
roll
das
xchg
dec
dec
jle
std
pop
clc
inc
cmc
je
lret
sbb
js
imul
push
cltd
addr16
or
ljmp
adc
mov
clc
pop
std
jg
icebp
fpatan
sti
mov
in
cmp
mov
pushl
pop
xor
neg
arpl
ljmp
push
jo
mov
xor
ljmp
sbb
mov
jae
push
js
stc
push
jl
popa
pop
decb
cmp
stc
jbe
js
rcll
mov
pushl
mov
xchg
outsb
inc
or
fisubrs
pop
sbb
pushl
ret
xchg
lods
shll
mov
pop
aad
out
call
jg
mov
into
sbb
cmpsl
inc
scas
jmp
xor
cmpl
adc
adc
stos
adc
int3
sahf
shrl
or
inc
xchg
pop
data16
dec
mov
sub
inc
jg
out
xchg
xor
xor
aam
stos
dec
in
aad
in
cwtl
nop
icebp
mov
jne
arpl
movsl
xchg
pop
lret
in
jno
repnz
lret
push
fisubrl
fnsave
xor
jb
cmp
loopne
ljmp
push
pop
in
scas
push
rorb
gs
call
jno,pt
inc
decl
or
inc
sub
andl
addr16
sbb
ljmp
adc
hlt
outsl
lret
xor
sub
cmp
das
mov
pushl
push
inc
lds
adc
das
sub
jmp
insb
and
pop
aam
repnz
movsb
jb
push
test
pop
or
mov
mov
decl
pop
call
jno
mov
loope
fdivrs
cli
lcall
fwait
xchg
cmpsl
sub
adc
test
fsts
in
xchg
std
mov
stos
stos
repnz
lret
xlat
adcb
mov
xchg
sub
aad
inc
stc
sbb
fsubrp
lcall
and
test
add
mov
sbb
inc
inc
or
mov
jmp
mov
cs
mov
das
cld
outsl
test
jne
add
cld
xor
inc
add
cmp
rcrb
aas
aam
sbb
push
addr16
sti
fstl
mov
adc
mov
push
adc
cs
xchg
pop
push
popl
mov
fadds
das
std
mov
xchg
mov
mov
mov
pop
icebp
mov
lahf
jmp
jg
dec
gs
into
call
jo
dec
lock
or
addr16
fildl
xchg
and
xorb
sub
bound
mov
or
das
je
addb
dec
mov
xchg
mov
jg
icebp
fmull
mov
xchg
sub
out
ljmp
mov
inc
je
das
mov
cmp
pushl
inc
xor
xchg
jns
aam
add
ret
adc
inc
jmp
ljmp
inc
adc
add
into
xor
cmp
cmp
in
pushl
jmp
mov
and
mov
push
mov
cltd
cli
imul
mov
pop
test
stc
mov
ljmp
xor
inc
gs
pop
js
or
das
jno
movsb
sar
jg
rcll
lods
mov
or
rol
sub
je
cwtl
dec
ljmp
aas
add
mov
cmp
push
shlb
dec
aaa
lds
jle
fistpl
in
dec
out
cmpsl
or
add
sbb
xchg
or
sbb
pushl
cmc
add
into
jp
push
mov
adc
or
push
rcr
es
ljmp
es
aad
pop
sbb
es
mov
insl
dec
push
fmull
jg
xchg
clc
decl
cmp
or
cmp
dec
jnp
jnp
insl
adc
cmp
js
jno
adc
and
je
add
stos
lret
pop
and
mov
movsl
fnstsw
mov
adc
jbe
scas
fnstsw
stc
adc
fwait
add
shl
push
stc
popf
mov
sub
lahf
rclb
push
and
pushf
testb
arpl
pop
push
sbb
fsubrl
inc
cwtl
ret
mov
mov
dec
inc
lahf
into
data16
dec
bound
sarl
sub
icebp
lret
jbe
or
aaa
sbb
mov
leave
adc
sbb
mov
mov
int3
cld
xchg
clc
aaa
sbb
inc
cmpsb
stc
negb
lcall
adc
int3
jecxz
roll
mov
movsl
add
call
mov
xchg
pop
fnstenv
add
cld
into
jne
mov
mov
mov
jmp
sti
lods
lahf
add
pushf
adc
leave
ret
jg
lods
adc
xchg
inc
std
or
add
fs
pushl
xchg
mov
pop
test
mov
mov
xor
jne
insb
sbb
jg
call
in
sbb
cmp
imul
mov
jns
into
lods
mov
aaa
clc
xchg
test
adc
into
push
and
jbe
outsl
pop
call
pop
dec
inc
jmp
ja
jg,pt
out
pop
cs
and
lahf
adc
mov
out
es
mov
or
adc
stos
jnp
or
pop
call
pop
lret
inc
in
dec
add
jl
cwtl
scas
ss
dec
js
movsb
pop
outsl
outsl
cld
xchg
incb
mov
sahf
loop
mov
cltd
nop
dec
mov
fnstsw
incl
aad
outsb
xor
out
sbb
pop
adc
ljmp
sub
ljmp
pusha
push
ficompl
test
ret
sub
ljmp
pop
pushf
outsb
aad
xchg
popf
jp
scas
inc
mov
adc
mov
lcall
jle
rol
jl
daa
push
jne
loope,pt
leave
dec
in
incl
and
hlt
lds
je
outsl
aad
mov
mov
sbb
decl
idivl
sbb
inc
dec
aam
cmpsb
mov
outsl
hlt
jb
push
jne
and
adc
pushl
cmpb
jb
cs
rcll
dec
jmp
adc
out
jb
adc
push
lds
mov
out
pop
pop
rcl
lahf
test
xor
fildl
dec
xchg
stos
and
pop
or
xor
cmc
mov
jmp
mov
pop
mov
cmp
xlat
es
mov
imul
inc
lcall
ret
dec
sarl
movsl
fdivl
jle
std
jns
or
or
hlt
xor
or
int
ljmp
dec
mov
shlb
testl
pop
adc
jmp
mov
mov
push
mov
decb
sub
push
inc
push
test
mov
dec
pop
add
ja
jg
mov
mov
or
push
or
outsl
inc
rcrl
out
sti
mov
gs
outsl
cmp
movsl
decl
add
imul
inc
shlb
decl
jg
pop
rclb
lahf
mov
add
adc
js
jge
push
mov
cli
icebp
loop,pt
mov
inc
cmp
xor
dec
pushf
dec
jmp
adc
sbb
ret
xchg
pop
dec
pop
leave
add
loop
fisttps
outsl
lock
daa
push
add
jne
imul
in
shl
sbb
push
ljmp
mov
mov
insb
jg
into
popf
data16
jo
add
and
shl
pop
cmpl
add
jp
cmp
adc
and
sbb
xchg
jnp
lahf
sub
sbb
push
adc
das
or
addr16
fistl
ds
pushf
xor
std
push
push
jne
and
fistpl
push
sbb
and
rclb
dec
loop
loope
mov
pop
clc
dec
pop
popl
dec
inc
out
mov
mov
call
nop
pop
out
or
xor
mov
out
sub
pop
pop
jne
xchg
and
inc
les
call
sbb
mov
ljmp
pop
sti
dec
jp
fmull
jecxz
jg
insb
xchg
aad
scas
mov
testl
jg
pushf
mov
in
adcb
mov
jns
push
and
call
cmp
xchg
movsb
aam
lret
pushl
add
jae
jp
inc
mov
mov
ljmp
push
les
pop
jmp
neg
loop
jae
mov
fwait
inc
pop
cmp
decl
xchg
adc
mov
adc
insl
xlat
daa
cmp
inc
xchg
mov
mov
lcall
mov
lods
cmp
in
jl
inc
in
pop
js
andb
lcall
dec
movsl
push
out
push
mov
cmp
mov
imul
mov
stos
ret
adc
cmpsb
repnz
pushl
sub
sets
push
and
and
adc
jmp
scas
inc
inc
jle
out
addr16
jb
or
ret
std
mov
cmp
mov
orl
fcmovu
daa
int3
in
fisubrl
sti
fists
dec
loope
call
xchg
push
cmp
scas
xchg
js
imul
lcall
ljmp
sub
mov
inc
cmp
bound
jo
inc
mov
in
and
sbbl
enter
rcrl
neg
and
sub
insl
fs
dec
jl
jno
adc
ret
fsubrl
test
fwait
scas
test
jmp
and
ret
jbe
and
jmp
std
in
mov
and
and
jns
jmp
pop
cli
cli
outsl
push
ret
or
adc
ljmp
mov
mov
mov
aas
std
dec
mov
lea
loope
jns
mov
fcoms
adc
jle
call
pushf
scas
mov
jb
xchg
das
shrl
sbb
mov
leave
fistpll
pushl
inc
out
push
mov
aaa
lret
mov
jmp
pop
jge
divl
push
push
fcomip
je
jno
mov
pop
daa
add
arpl
fldt
imul
push
pushl
aas
or
pop
add
movsb
adc
sbb
call
outsl
std
pushl
lret
and
fadds
scas
aaa
jmp
incl
imul
fmul
sbb
insl
out
cmc
sbb
or
dec
fs
jbe
sub
xchg
fisubrl
pop
pop
mov
lahf
cmp
push
jo
test
xchg
adc
fnstsw
jg
inc
sbb
movl
or
shlb
test
incl
jle
pop
in
je
into
fsubp
pop
mov
jb
jne
aas
mov
filds
je
mov
sub
inc
xchg
fstpt
insl
dec
and
loope
std
mov
add
jp
xor
inc
lock
jmp
xlat
lods
sub
and
xchg
fsubs
sarl
mov
movsb
scas
jmp
inc
jmp
cmpsb
pop
movb
push
mov
dec
addr16
push
icebp
xchg
icebp
mov
jg
ret
mov
push
les
je
les
and
cmc
jne
js
popf
lock
cmp
int
adc
mov
inc
sti
cmc
js
mov
nop
cld
les
xchg
cld
ret
mov
push
int
sbb
adc
stos
mov
sbb
loope
adc
inc
jmp
xchg
mov
adc
xor
cmp
ret
stos
mov
stc
lcall
dec
xor
add
mov
push
or
in
sub
pop
mov
cltd
or
pushf
inc
push
pop
mov
loope
std
pusha
xchg
dec
sbbb
mov
cwtl
sbb
inc
fbld
pop
scas
loope
out
xchg
lods
jge,pn
pop
adc
pop
xchg
call
sbb
or
xor
lcall
loopne
sbb
jae
jmp
icebp
xor
mov
jle
in
xor
stos
xchg
shr
sub
cmp
sub
push
iret
jae
jno
lds
jle
mov
inc
rorb
subb
dec
xor
popl
aaa
call
roll
outsl
pusha
dec
fwait
addr16
mov
jge
das
push
cld
data16
and
int3
lret
jne
or
idivb
shrl
fcomp
push
rcr
ret
mov
adc
jne
jmp
dec
scas
and
adc
and
inc
decl
xchg
mov
add
mov
jp
vrsqrtps
decl
mov
jl
mov
mov
or
cmp
daa
ret
adc
imul
sub
mov
mov
dec
dec
scas
sahf
sub
sbbl
adc
push
incl
sbb
dec
faddl
in
inc
mov
js
out
xchg
jp
cli
mov
jg
sbb
xchg
cli
push
dec
push
pop
cmp
je
mov
dec
lea
incl
jg
xlat
ret
fcomps
mov
ds
dec
xor
mov
mov
adc
mov
adc
inc
out
call
lcall
lea
add
or
insb
pop
dec
fwait
xchg
movsl
arpl
jge
push
pop
adc
xlat
scas
mov
mov
mov
and
jg
mov
adc
call
jg
fsubrs
xor
mov
add
pop
cmpl
mov
sti
int
add
add
rcll
jbe
aaa
mov
and
mov
inc
sbb
inc
inc
jno
lea
jge
jo
insl
and
cmp
adc
jg
outsl
cmc
inc
push
movsl
xor
outsl
sbb
fiaddl
jmp
fcomps
pop
int
adc
inc
jns
and
mov
cmp
xchg
clc
push
push
mov
push
xchg
xor
mov
inc
popf
enter
in
sub
jae
jmp
mov
rolb
stos
add
fcmovnbe
cmp
decl
xchg
pop
int
leave
add
xchg
cmp
push
push
xchg
icebp
sbb
jo
pop
mov
cwtl
frstor
pop
xor
aam
xchg
repz
push
mov
cmp
pop
ss
outsb
bound
sbb
dec
movsb
pop
adc
dec
loope
icebp
lds
adc
mov
push
or
push
cmp
pop
xor
dec
sub
push
pop
lret
jecxz
xor
mov
out
scas
shl
add
add
add
mov
mov
inc
addr16
in
dec
sbb
into
daa
movsl
adc
into
inc
roll
push
jmp
push
pop
test
out
sub
mov
cli
push
mov
clc
mov
fstp
loop
incl
sub
jmp
xchg
sbb
pop
mov
xor
daa
fnstsw
lcall
bound
cmpsl
push
push
lret
push
mov
push
les
xor
ljmp
dec
call
lret
jecxz
fldcw
mov
fwait
int3
inc
sbb
das
icebp
lcall
in
lds
pop
icebp
cmove
dec
and
rorb
icebp
fcmove
inc
cmp
push
and
loope
repz
in
adc
mov
stc
sahf
cmp
pop
outsb
in
jp
icebp
add
sarb
ds
lahf
das
jne
stos
sbb
addl
lahf
push
xchg
xchg
fimull
dec
mov
ljmp
pop
sub
sbb
xchg
aaa
dec
mov
jecxz
jg
rcr
xor
mov
ficomps
ret
pop
adc
gs
sbb
sub
test
sar
push
dec
xchg
paddw
adc
mov
adc
ja
xor
mov
test
out
dec
jo
pop
jg
sub
cmp
aam
cmp
nop
es
adc
and
shr
xchg
cmp
bound
jmp
mov
repnz
sub
sti
cld
jmp
sub
mov
inc
push
mov
push
in
sub
xchg
mov
ljmp
jge
jne
or
repnz
imul
sub
add
js
sti
inc
and
inc
push
pop
nop
jge
xchg
dec
fwait
xor
fistpl
jns
loopne
scas
mov
leave
int3
outsb
add
add
pop
mov
xchg
jae
outsl
or
jl
add
das
pop
mulb
dec
enter
das
ljmp
mov
push
mov
dec
das
rcll
mov
and
scas
add
or
sbb
cld
decl
push
push
jns
je
cmp
mov
test
jge
adc
clc
jg
inc
cltd
subl
ret
hlt
push
pop
mov
inc
cmpsl
mov
push
movsl
push
daa
adc
aas
scas
mov
ret
cs
stos
mov
adc
mov
popf
icebp
jbe
mov
adc
pop
loop
sbb
xor
mov
push
or
lods
cld
mov
inc
dec
xor
and
ret
call
ljmp
inc
mov
add
or
das
inc
aad
sub
sbb
mov
mov
loopne
pop
cld
inc
inc
jp
sbb
add
push
xor
mov
fisttps
std
mov
jecxz
mov
mov
call
call
mov
fsubrs
and
das
outsl
cmp
mov
cmc
pop
loopne
jb
mov
movsl
jle
or
and
dec
add
das
jecxz
arpl
aad
clc
mov
jge
je
ljmp
push
lahf
pusha
mov
pop
aam
stc
or
cld
sbb
or
stc
lods
mov
movsb
jge
pop
cmp
push
incb
jl
ja
mov
mov
aaa
incb
and
cmp
idivl
cwtl
fadds
jg
lcall
jbe
push
mov
sti
call
test
jo
cmpsl
les
rclb
sub
nop
call
or
icebp
into
jmp
or
inc
lahf
xor
loop
cli
cmp
push
xchg
cli
out
loope
xchg
push
mov
sub
mov
and
dec
pop
jg
mov
cli
xor
sbb
dec
push
fsubs
jg
jecxz
adc
outsb
inc
arpl
es
in
xchg
inc
mov
mov
jge
cld
cmp
in
std
out
adc
sbb
jle
aam
stos
and
adc
and
inc
testl
push
push
cmp
push
or
mov
outsl
mov
mov
imul
jnp
push
aas
testb
pop
cli
ljmp
lds
sub
out
mov
push
stos
je
in
rolb
fdivrp
ljmp
int
dec
andb
shll
jp
cmc
ljmp
inc
aaa
mov
xor
adc
clc
ljmp
sub
inc
xchg
sub
jecxz
mov
loopne
pop
or
add
clc
jp
jle
mov
fwait
xchg
mov
nop
sbb
push
js
bound
sbb
adc
jl
incl
pop
xor
bound
aad
loop
int
in
cs
and
cmp
jnp
outsl
aaa
cli
decl
and
inc
rorb
mov
fwait
sbb
jl
leave
fstps
pop
mov
movsb
jns
test
test
push
test
lret
xchg
push
mov
sbb
xchg
das
aaa
repz
adcl
cmp
fmul
mov
pop
mov
mov
movsl
subb
cmp
loope
adc
subl
ljmp
ret
adc
loopne
int
lret
shll
xchg
jb
cmp
ljmp
psllw
sbb
cmpsl
push
xor
scas
aam
std
add
mov
or
in
jmp
jo
jb
sbb
insb
mov
out
stc
ja
push
incl
in
shl
je
mov
xor
lds
outsl
jo
in
shll
mov
mov
call
clc
mov
xor
insl
and
mov
rorl
pop
xchg
incl
idivb
jmp
pop
pop
mov
icebp
sub
jo
sbb
and
and
xlat
das
xchg
mov
or
mov
in
into
mov
push
loope
fbstp
mov
mov
aad
jne
fucomip
decl
xchg
jns
cmp
ja
inc
push
mov
lods
fsubrl
pushl
xchg
mov
rcr
jl
add
inc
mov
je
scas
jg
mov
mov
in
ljmp
adc
xchg
bound
inc
pop
popf
inc
and
sar
jo
mov
fsubrs
pushl
jmp
xchg
lods
or
into
pop
and
fsubl
push
aam
jmp
loop
pusha
inc
iret
mov
add
aaa
adcl
add
push
push
out
cmp
out
daa
push
outsl
cld
jge
mov
sub
or
lret
pop
mov
out
adc
cwtl
imul
movsl
mov
incl
push
jecxz
je
mov
out
lea
cmc
call
and
and
negb
mov
gs
inc
mov
sub
movsl
push
frstor
jno
push
enter
mulps
out
mov
call
lea
mov
cmc
fisubrs
sub
fistpl
pop
ljmp
mov
iret
shlb
jb
fdiv
lret
js
sub
data16
aam
in
sub
inc
xchg
cmp
aam
dec
sub
aam
sbb
and
js
daa
pusha
cmpsl
or
nop
push
arpl
or
push
jbe
mov
fbld
mov
cmpsl
fistpll
dec
jp
xchg
jp
mov
xor
pushl
jge
inc
lret
jge
cmc
push
jle
mov
test
or
xor
xor
or
das
ljmp
ret
jno
movsl
jbe
adc
sti
lret
lret
or
loop
enter
rcr
ljmp
aam
test
scas
jp
iret
mov
decl
call
iret
imulb
mov
jmp
pop
aam
cltd
js
sbb
imul
testb
movsb
lret
scas
xchg
and
pushl
jae
adcl
sub
xor
fiaddl
incl
mov
mov
loop
lahf
or
xchg
test
or
lcall
fs
loop
dec
popf
inc
and
mov
fscale
mov
test
rorb
sub
cmp
testl
fmull
ss
inc
jecxz
cmp
mov
mov
mov
cmp
repz
push
fdivrp
fbstp
cli
pop
or
mov
mov
shl
mov
fstpt
lock
xchg
inc
xchg
cmpsl
jg
decl
cmc
mov
mov
ja
pop
pop
sbb
jb
nop
sar
leave
js
in
or
lods
mov
sub
jae
imul
cli
pusha
rcr
data16
insl
adc
repnz
pop
ljmp
mov
sub
in
sbb
sti
pop
xchg
lock
pushl
mull
test
into
sub
lds
repz
and
xchg
test
jo
mov
sar
mov
je
jo
mov
push
push
jns
fstpt
aaa
cli
push
cmp
and
inc
das
sub
loop
notl
add
mov
aam
incl
xor
iret
xor
aad
mov
arpl
lea
add
ja
push
bound
std
call
jns
push
inc
mov
jbe
sbb
ret
enter
ljmp
mov
lock
adc
mov
jno
icebp
mov
das
std
sar
pop
idivb
sbb
in
push
or
jo
stos
aas
lods
fdivp
sub
aaa
cli
lcall
imul
sub
cmp
and
outsl
hlt
cld
stos
aaa
ds
and
inc
mulb
pop
cli
inc
aaa
cmp
enter
pop
popl
shll
adcl
lcall
jmp
pushf
lods
xchg
out
jbe
xchg
push
mov
stos
stos
jb
mov
xchg
jmp
cli
and
ret
lret
repnz
icebp
jne
je
mov
jle
ss
hlt
sub
mov
and
jg
dec
fsubrl
xor
movsb
imul
dec
fld
and
popl
mov
call
sub
and
push
mov
lret
call
inc
inc
jo
frstor
dec
push
sbb
mov
pushl
fstps
loopne
jne
mov
std
xchg
xchg
into
insb
push
pushf
mov
push
mov
sbb
dec
lods
inc
cwtl
imull
xchg
pop
jg
pop
mov
sub
bound
mov
pop
push
movsl
mov
stos
decl
insl
or
cs
push
inc
sub
dec
jg
mov
pusha
xchg
jno
jb
aad
push
xor
dec
call
xor
xor
in
pushf
and
push
out
adc
aas
jnp
out
add
xor
rcrb
xchg
xchg
lds
adc
outsl
lock
push
std
push
add
and
push
inc
jns
jae
dec
ljmp
sub
outsb
mov
cwtl
jp
jns
inc
xor
outsl
pop
loopne
push
lcall
gs
push
insb
mov
adc
jg
hlt
push
nop
jle
mov
jg
aas
sub
call
and
jp
xorb
xor
xor
push
mov
popa
jo
or
ds
mov
cmp
je
mov
mov
mov
adc
test
cmc
jns
adc
rcll
jbe
pop
out
cmp
mov
push
insl
or
mov
pop
mov
aas
and
jp
xor
jecxz
repnz
push
sbb
xor
test
test
xchg
int3
mov
leave
cmc
outsl
jmp
std
out
aad
inc
xchg
jg
mov
loopne
push
lock
push
sti
lock
das
fwait
xlat
es
xchg
ljmp
aam
or
cmpl
push
sub
std
jl
fiaddl
pop
push
negl
in
out
stos
aad
lret
negb
sub
scas
sbb
cmp
sbb
mov
mov
repz
inc
and
inc
mov
mov
xchg
shrd
pop
sahf
stc
mov
adc
mov
sbb
outsl
lock
pushl
fidivrl
dec
insl
cmc
mov
shlb
jp
mov
push
shrb
jmp
dec
and
pop
push
sbb
mov
pop
jmp
add
inc
cmp
call
mov
pop
popf
mov
lcall
mov
popa
rcrl
cmp
push
lea
filds
fcomi
lcall
fstpl
aas
in
ja
mov
jnp,pt
stos
pusha
into
call
andl
inc
pop
pop
and
mov
dec
jle
mov
lret
call
arpl
stc
rol
xor
cld
fistps
ret
jbe
sbb
xor
jne
pusha
sub
rcl
pushf
jg
decl
push
out
pusha
loope
mov
adc
inc
mov
fiaddl
out
fcompl
and
lcall
cmpsl
ljmp
dec
out
test
cs
and
adc
call
test
jg
decl
adc
data16
mov
inc
and
jmp
sub
test
push
leave
xchg
cld
xor
inc
addb
mov
cmpsl
dec
dec
xchg
fmull
test
pop
ja
dec
xor
rclb
cld
jg
or
jle
or
mov
sbb
je
sbb
jecxz
jp
decl
stos
inc
mov
std
cmp
sub
loop
sar
adc
mov
mov
fnstcw
rcll
sarl
mov
aaa
outsb
push
sbb
int
and
ret
cmp
add
dec
es
out
mov
jg
imul
insl
aaa
icebp
pop
cmp
jne
jne
pop
jbe
dec
push
adc
test
mov
decl
stos
sti
out
mov
rorb
mov
loope
jb
jg
fnstsw
orb
pop
negl
adc
andb
out
dec
or
xor
lahf
mov
in
inc
dec
pop
mov
mov
push
add
sub
repz
js
outsl
rolb
call
cmpsl
mov
repz
rclb
mov
or
jg
shl
roll
mov
pop
incl
and
ljmp
sti
nop
push
stos
xchg
popf
inc
fs
mov
mov
lret
dec
and
xor
in
clc
out
popa
shlb
pop
inc
dec
jae
ret
mov
and
das
push
or
test
cmp
xchg
mov
push
dec
ret
stos
jbe
arpl
js
and
jg
push
jno
fistl
jg
jne
mov
mov
add
fucomip
lahf
decl
adc
in
sub
in
dec
fldl
in
push
adc
cli
ret
inc
add
enter
mov
cli
push
subb
xor
xor
scas
fisttpl
dec
std
pop
adc
bound
out
int3
xchg
xchg
xchg
jge
add
fcomps
xchg
loop
lock
mov
add
mov
rolb
push
je
xchg
jns
fs
out
addr16
inc
xlat
lock
xor
cli
jmp
pushf
or
rorl
test
inc
outsl
cmp
adc
inc
incl
cmp
rsqrtps
fildll
mov
sbb
sub
addr16
sahf
or
call
push
or
mov
fistpll
icebp
fisubrl
jae
xchg
popf
lods
loope
stos
les
lock
sbb
pushl
dec
pop
xor
es
mov
inc
mov
shll
scas
loop
and
xchg
dec
fcoms
jle
push
and
scas
lods
adc
jbe
lods
in
push
pop
mov
jmp
lret
data16
in
aam
lock
dec
mov
incl
les
mov
mov
and
pop
push
sub
gs
dec
and
ljmp
int
jl
ret
sbb
cmp
pop
xchg
push
stos
and
add
sti
pushl
xlat
test
xchg
push
lea
jg
into
stc
add
lock
push
loop
mov
mov
xor
adc
ret
dec
in
test
push
sub
cwtl
ljmp
icebp
jmp
outsl
popf
shlb
cli
or
lods
ss
jne
sub
jp
mov
roll
dec
add
xchg
xor
push
mov
gs
iret
decl
clc
cwtl
adc
es
cmpsb
cmp
fsts
loop
lods
add
inc
add
push
dec
adc
out
cli
scas
sub
dec
jl
cli
inc
lods
cmc
fistpll
decl
repz
pop
jp
call
add
cmpsl
add
mov
or
ljmp
inc
fcoms
pop
sti
mov
addr16
add
jg
jne
adc
xchg
pusha
sub
xchg
dec
in
add
stos
outsl
pop
scas
inc
and
mov
lock
incl
jne
push
stos
aam
jae
arpl
jbe
lahf
in
mov
ds
jmp
mov
sahf
sbb
xchg
fisubl
jo
incl
lcall
test
push
push
push
inc
hlt
adcw
aam
outsb
aam
sbb
mov
call
call
sub
cmp
cmp
adc
std
cs
cwtl
xor
or
pop
jmp
and
dec
rolb
mov
std
cmp
and
loopne
lock
push
jg
xchg
pop
sbb
xchg
pop
sub
inc
dec
cli
jg
call
sbb
insb
addb
in
xchg
call
pushl
dec
pop
push
not
sbb
mov
push
or
insb
dec
dec
mov
pop
cmpsb
mov
lcall
call
mov
popf
mov
mov
jne
pop
mov
xchg
mov
test
pop
jg
xor
mov
cmp
icebp
es
mov
and
cli
jmp
sub
loope
cmp
pop
cs
mov
icebp
ss
pop
fcomip
mov
xchg
into
inc
stos
dec
sahf
dec
and
in
push
lods
jl
xchg
cmp
incl
imul
push
jg
dec
pop
xor
sub
lcall
dec
test
sbb
daa
jp
jbe
outsl
test
dec
addb
cmp
mov
fdivrl
es
cmp
pop
cmp
jae
inc
lcall
lcall
inc
xchg
repz
xchg
and
mov
sub
adc
inc
lcall
movsb
arpl
daa
pop
loop
rolb
in
iret
push
push
enter
sar
fistps
insl
scas
ja
test
and
popa
or
int
mov
mov
jg
mov
imul
or
mov
xor
lret
jno
outsl
add
jecxz
repz
shrb
and
mov
lea
sbb
popf
xor
ljmp
adc
mov
lds
pop
ds
or
iret
or
xor
pushl
adc
mov
subb
lock
test
inc
bound
add
and
jg
xor
mov
aad
pushf
dec
adc
fwait
std
mov
mov
aas
jecxz
lods
sbb
adc
dec
cs
shrl
loop
adc
pop
jg
jb
jae
ficoml
adc
fimull
mov
loopne
inc
push
mov
jmp
mov
adc
cmpsl
dec
loopne
popf
icebp
outsl
pop
rolb
ljmp
push
stos
jo
mov
lret
lcall
push
rorl
mov
xchg
or
inc
mov
xorb
cmc
mov
fiaddl
mov
mov
mov
inc
mov
clc
add
stos
in
insb
inc
add
jecxz
decl
les
sahf
jb
leave
sbb
mov
bnd
rol
lock
and
mov
lcall
xchg
dec
xor
pop
mov
xchg
mov
js
sub
mov
pushl
out
adc
enter
pop
push
stos
cld
jecxz
push
mov
push
cmp
lcall
pop
rcr
push
cltd
out
int
sbb
mov
les
cmp
xchg
iret
pop
jge
clc
call
dec
das
mov
push
nop
xchg
cmp
js
ret
or
mov
xchg
adc
sbb
cmp
mov
xor
clc
adc
xchg
std
jmp
daa
stos
mov
pusha
gs
mov
mov
in
mov
sub
add
aaa
jae
sbb
aad
test
jmp
nop
xchg
fwait
aad
add
insl
sarb
dec
dec
sarl
leave
in
push
loope
or
fwait
ljmp
icebp
push
adc
rcll
lods
rcr
ja
sub
cli
jmp
aad
jo
arpl
ds
lock
ss
mov
jne
fisttpl
mov
hlt
adcb
call
or
add
fstps
fs
mov
aam
lock
nop
int
mov
xchg
dec
das
cmp
dec
jb
int3
sbb
out
lods
xchg
or
loop
push
stos
dec
push
mov
cmc
das
icebp
pushl
pop
test
testl
cld
or
loope
stc
lea
xchg
dec
push
aas
clc
sbb
push
jbe
xchg
scas
lods
outsb
push
test
mov
in
mov
hlt
sub
add
jmp
clc
mov
xchg
fistps
scas
mov
jge
mov
mov
int3
cltd
stc
cmc
push
jmp
mov
scas
mov
mov
lea
test
dec
sbb
xor
daa
popf
ljmp
jp
lcall
xchg
add
mov
inc
adc
addr16
lods
pop
mov
test
jmp
mov
nop
leave
rcrl
and
test
mov
xchg
inc
pop
and
ljmp
loopne
jg
sub
dec
scas
mov
pop
sub
insb
or
sbbl
decl
inc
cmpsl
and
in
rcr
pop
incl
sub
cmpsb
mov
push
pop
icebp
outsl
cmc
test
sbbl
push
ja
movsl
ret
mulb
iret
add
adc
xor
mov
adc
decl
std
decl
add
mov
mov
andl
mov
xor
jnp
add
xor
push
cmp
or
inc
stos
fistps
or
jp
movsl
and
dec
std
pop
sub
adc
push
push
fucomi
lcall
inc
aad
jg
sub
pop
aas
int
call
and
outsl
jmp
xlat
jmp
mov
mov
mov
inc
jg
jg,pt
std
stos
jbe
movsl
movsb
adc
adc
sar
mov
jns
popa
stos
mov
jns
mov
sub
mov
cmp
aaa
jno
popf
movsl
lcallw
xchg
cli
sub
sub
xchg
sbb
cmp
push
lahf
cwtl
insl
pop
sbb
faddl
and
stos
ja
adc
iret
js
stos
sbbb
jl
cld
mov
jmp
inc
scas
and
cmp
icebp
pop
insl
cmp
cmp
out
jmp
inc
int
call
xchg
gs
add
jg
mov
adc
outsl
ja
mov
enter
aam
dec
in
mov
test
leave
aaa
and
fiaddl
incl
fbstp
out
or
push
jno
icebp
out
ret
iret
mov
xor
out
mov
insl
pop
pop
stos
sub
in
or
out
dec
xchg
dec
cs
fwait
addl
in
add
cmpsb
cmp
test
sub
call
es
push
jnp
xchg
fisubrl
xor
divb
pushf
inc
xor
or
mov
mov
and
xchg
add
push
repz
pop
mov
jg
repnz
cmpb
or
jl
idiv
je
clc
lock
adc
add
andb
mov
dec
push
push
movsl
inc
jne
pop
and
or
ljmp
rcrb
pop
cld
subb
sub
mov
ja
outsb
movsl
jp
lcall
fwait
xchg
inc
cltd
push
and
scas
cltd
jg
cmc
fstp
xchg
fildl
jg
dec
lock
stc
loop
jns
xchg
mov
out
scas
repnz
test
or
add
add
cmp
adc
out
in
inc
sbb
xor
mov
loope
cwtl
clc
pop
sbb
sbb
incl
and
mov
sahf
cltd
mov
int
ss
std
imul
mov
mov
addr16
push
call
aas
xor
xor
mov
test
das
rolb
sahf
or
test
xor
dec
mov
push
shlb
mov
and
ficoms
imulb
jg
out
testb
adc
lcall
std
lcall
in
inc
xchg
test
icebp
pop
push
pop
in
bound
rolb
insb
jno
lret
push
hlt
outsl
mov
lcall
push
push
jl
add
sbbl
sbbb
shll
ljmp
icebp
call
je
push
shlb
lahf
int
out
scas
xchg
pop
inc
jle
mov
fstps
jo
pop
arpl
gs
sub
sbb
lahf
ja
and
decl
das
pop
testl
sub
incl
inc
xchg
movl
and
dec
push
or
jg
lcall
mov
jmp
inc
sub
pop
xchg
lret
adc
jmp
xchg
das
idivb
js
nop
ljmp
inc
or
mov
xor
call
xchg
aas
sbb
mov
pop
aad
jge
xchg
ret
xchg
sbb
pop
es
adc
jmp
push
add
push
std
mov
xor
decb
jae
clc
popf
cmpsb
outsl
icebp
test
sub
out
sub
mov
xorl
fidivrs
mov
sbb
data16
jo
jbe
xchg
mov
loop
lock
rcrl
clc
mov
xchg
inc
stos
jp
div
cmp
js
push
push
adc
call
push
inc
shlb
addl
and
pop
in
cmp
push
incl
out
inc
xchg
and
fidivl
loopne
xor
fstp
mov
jmp
mov
pop
clc
inc
xlat
outsl
sub
incl
bound
or
clc
lcall
mov
adcl
jo
and
mov
pushl
aad
xchg
std
or
les
pop
and
push
jp
inc
cwtl
pop
and
pop
dec
rcrb
test
clc
push
mov
jp
aaa
push
ror
aam
repz
push
gs
int
icebp
ljmp
popf
shll
cmp
pop
jecxz
sub
nop
sbb
mov
das
rorb
mov
in
int
lock
dec
pop
and
insl
cmp
xor
outsl
repnz
push
mov
test
xchg
dec
lret
lods
and
xor
mov
lcall
ret
sub
cli
and
dec
xchg
mov
add
adc
lods
dec
testb
lcall
loope
mov
cmp
mov
cmp
test
movsl
sub
pop
daa
push
incl
in
sbb
out
cld
and
cwtl
lea
pop
clc
or
inc
pop
imul
adc
add
lret
sub
decl
inc
ds
xchg
add
scas
icebp
fistpl
mov
ljmp
xlat
shrb
dec
es
mov
into
pushf
addr16
movsl
jno
lcall
imulb
mov
pop
and
rorb
ret
jbe
xorb
dec
push
shlb
mov
push
add
insl
test
xor
out
fistl
aam
movsl
xor
ljmp
std
xor
je
std
push
inc
inc
sti
cwtl
nop
cmp
lods
cmp
call
pop
jecxz
cmpsb
movsb
js
cmp
stc
and
ds
cmc
mov
das
ret
adc
adc
fucomip
push
mov
adc
pop
inc
ja
out
mov
push
inc
xor
sar
lcall
xchg
fdivrs
pop
sbb
inc
xorl
and
in
sub
stc
sub
pop
imul
hlt
lea
pop
jmp
pop
call
push
sub
bound
adc
mov
or
outsl
icebp
push
mov
div
rcr
jne
mov
xor
dec
loop
out
mov
decl
aaa
xor
loope
push
pusha
mov
ljmp
int
mov
scas
cld
subb
jle
sti
jg
and
mov
stos
pusha
xchg
cmp
jae
pushl
push
mov
lea
out
mov
xchg
ljmp
sbb
leave
stos
xor
cld
enter
mov
push
repz
inc
cli
lea
mov
ljmp
inc
movl
mov
cmc
xor
and
cld
cmp
addr16
jg
push
data16
cld
imul
popa
adc
push
inc
decb
sub
inc
cmpsl
mov
repz
jg
and
jge
or
ljmp
or
das
cld
sbb
in
fs
cmp
mov
push
sbb
and
adc
and
inc
repz
adc
ljmp
stos
sub
mov
hlt
hlt
xlat
testb
outsb
shll
adc
cmp
inc
pushl
movsb
mov
inc
test
shlb
pop
ljmp
leave
daa
push
loop
mov
fisttps
bound
stos
dec
or
jbe
push
into
mov
icebp
loope
lahf
dec
ds
pop
call
popf
xor
fldenv
outsl
xchg
sahf
aas
stos
sbb
cwtl
sub
pushf
xor
out
inc
ljmp
lock
fsubrp
lahf
ret
add
add
out
push
mov
or
or
inc
ja
xchg
shrl
movsb
pop
pop
pop
clc
and
and
jae
xor
add
or
lahf
sub
popa
loope
into
dec
mov
inc
sbb
cltd
mov
adc
cli
movsb
dec
jle
sbb
inc
andb
out
enter
mov
sbb
jb
mov
add
jge
push
mov
lcall
fists
pop
sub
ljmp
push
jo
xlat
in
sub
fwait
lods
aad
mov
cvttps2pi
nop
out
push
or
dec
lds
mov
dec
pushf
adc
xor
inc
jb
test
jle
cmovae
lcall
std
push
adc
imul
xlat
mov
adc
arpl
bound
add
lock
iret
mov
mov
mov
scas
jno
decl
fsubl
or
dec
pop
into
inc
sbb
outsb
mov
mov
pop
popa
adc
mov
xchg
xchg
pop
inc
jl
out
sahf
cmpsw
scas
sbbb
jg
or
test
imul
cmp
or
sbb
pop
mov
xchg
push
adc
test
call
cli
call
das
xchg
negb
push
aad
pushf
popa
imul
mov
and
ljmp
into
lds
je
cmp
jle
pushf
fcmovnbe
pop
adc
pop
in
mov
push
sub
sub
or
daa
lret
add
sbb
popa
inc
scas
int
out
or
cmc
out
pushl
jge
vcvtsd2si
dec
pop
sbb
lods
mov
xchg
add
add
mov
fldlg2
mov
pop
cmc
test
fdivrs
aaa
aam
mov
orl
jl
jo
sub
leave
fsts
xchg
ret
std
ljmp
adc
inc
jbe
out
int3
in
mov
mov
stos
popf
fdivp
sub
into
and
push
sub
mov
cwtl
outsb
mov
sub
repnz
les
and
decl
add
mov
cmp
pushl
in
xchg
cmpsb
jmp
insl
inc
and
pushf
lahf
mov
sbb
mov
insl
ficomps
cmp
aas
mov
xchg
adc
pop
mov
movsb
add
ror
sbb
pop
and
jp
pop
mov
pop
ss
in
sti
lods
cmp
lods
mov
stos
enter
cmpsl
jbe,pn
ljmp
or
shl
loopne
jmp
cmpsl
loop
pop
movsl
mov
jg
mov
push
lds
dec
xchg
and
int3
adc
mov
lods
fcoms
sbb
fnstenv
out
sbb
add
call
inc
scas
pusha
pop
scas
jmp
fiaddl
sub
jo,pt
xor
jle
lock
mov
loop
cmpsb
sbb
mov
mov
int
pop
cwtl
sbb
adc
fdivs
cs
add
jo
out
out
sbb
incl
sbb
lret
pop
lcall
in
jmp
loope
hlt
outsb
fcmovb
adc
movsl
cmpsb
adc
test
mov
js
adc
cmp
add
dec
stos
test
popa
popl
repnz
jnp
iret
fs
pushl
in
dec
addr16
cltd
mov
les
flds
xchg
popf
or
stos
je
sti
in
push
jns
rolb
cwtl
cwtl
fwait
sub
mov
jo
insl
cld
decl
addl
or
loop
repnz
add
popa
lcall
mov
jle
ret
ret
mov
dec
mov
sub
dec
pop
lock
xchg
imul
dec
adcb
adc
movsl
outsl
lock
and
push
mov
jbe
mov
add
push
mov
frstor
out
lret
daa
lods
popa
out
arpl
mov
test
pop
jne
aaa
mov
incl
push
cmp
pop
ss
imul
adc
inc
cmp
jl
mov
mov
jmp
fldl
sbb
and
lea
mov
mov
incl
pop
inc
xchg
leave
jne
xchg
dec
jl
in
data16
or
call
xchg
xchg
test
pop
ja
inc
nop
mov
jle
das
inc
les
adc
aam
stos
popa
lret
pop
aad
mov
decl
xorl
sbb
add
nop
neg
xor
jg
hlt
inc
outsb
jmp
js
sbb
mov
jmp
mov
sbb
adc
test
push
inc
popa
aam
cmp
push
mov
nop
lret
and
pushl
nopl
add
inc
bound
leave
repz
mov
popa
cwtl
dec
push
lods
pushf
jne
and
pop
or
or
lcall
icebp
inc
cmp
cmp
call
sub
pop
cmp
add
xchg
mov
mov
mov
hlt
mov
mov
iret
push
cmpsl
imul
pop
je
xor
outsl
mov
mov
daa
addb
dec
mov
dec
mov
cltd
push
daa
bound
mov
outsl
adc
jno
cmpsb
std
fdivl
mov
cmpsb
jmp
mov
jns
std
insl
sbb
popl
sub
dec
sbb
iret
cmc
push
loopne
mov
popa
mov
mov
push
jae
sub
movsl
imulb
movsl
or
lcall
orb
shr
out
push
xchg
sub
lcall
ror
sbb
mov
test
cmp
shl
test
adc
add
mov
pop
xor
jp
dec
sub
sub
push
out
ljmp
mov
mov
adc
dec
je
jmp
dec
imul
inc
and
out
shlb
pop
jp
pop
or
xchg
jge
pop
in
mov
xor
clc
test
and
mov
repz
and
mov
cmp
les
aaa
stos
or
jmp
push
movsl
pop
loopne
cmc
jae
cmpsl
or
lret
inc
xor
fcmovu
add
outsl
cmc
dec
pop
movsb
icebp
out
dec
adc
popa
and
fildll
scas
dec
inc
data16
imul
mov
dec
add
lahf
mov
sbb
mov
and
aam
incl
mov
in
lock
daa
pusha
stos
or
dec
xchg
adcb
call
mov
sub
les
sub
iret
pop
sar
mov
inc
cmpl
cwtl
cmp
add
cld
into
jae
mov
rcrl
adc
es
dec
dec
insl
in
test
call
stos
dec
clc
sub
dec
sahf
js
mov
hlt
mov
test
bnd
pop
clc
sbb
dec
dec
out
mov
jl
inc
ret
and
lcall
adc
pop
les
mov
push
in
sub
in
test
cld
movsb
mov
add
sub
lea
mov
sub
mov
xchg
mov
push
ljmp
sub
jl
scas
mov
sub
cmp
mov
fidivs
or
in
incl
aad
ret
callw
mov
jne
jo
jecxz
test
ljmp
dec
stc
and
push
mov
rcrb
outsl
inc
ret
mov
cli
mov
cmp
popf
and
pushl
or
scas
lret
ljmp
and
mov
dec
dec
and
shl
loopne
rolb
into
das
push
loope
lods
int3
insl
jmp
push
das
jl
jg
jge
add
shrl
or
call
int
adc
jp
aad
sbb
loopne
or
xchg
icebp
ljmp
add
jmp
out
xor
movsb
cs
sub
das
hlt
movb
gs
dec
cmp
dec
or
adc
test
xchg
or
outsb
cmp
je
xchg
mov
add
je
in
repnz
addr16
iret
cli
adc
mov
outsl
push
pop
decb
es
sbb
jg
test
ret
inc
inc
mov
aas
ljmp
iret
pop
scas
sbb
mov
inc
lret
lods
mov
or
adc
incl
std
pop
incl
jle
dec
in
pop
jmp
inc
or
dec
adc
mov
lea
mov
and
ficomps
pop
insb
push
cmp
xlat
lds
xchg
outsl
sbb
leave
je
ljmp
sbb
pop
divb
inc
add
and
xor
pop
or
push
inc
cld
mov
fisubl
adc
fwait
clc
adc
lock
incl
mov
in
and
cmp
mov
mov
push
push
aaa
pop
or
cli
fcmovnu
xchg
mov
arpl
and
jns
fsubs
lods
pop
dec
xchg
jl
mov
cli
call
test
jae
jb
js
lock
test
xor
cs
test
aad
sbb
push
decl
pop
movswl
cltd
push
xchg
loopne
jge
or
ljmp
push
inc
pop
pop
lahf
push
mov
push
cmp
sub
mov
pop
sub
pop
mov
push
mov
jae
sub
dec
lods
dec
xchg
mov
fstpl
sbb
mov
mov
sahf
inc
ja
dec
inc
mov
xchg
sbb
dec
repnz
jg
decl
mov
jl
pop
scas
cli
fnsave
xchg
cmp
xlat
or
mov
jmp
fisubs
popa
adcb
lods
pop
int3
xlat
sarb
mov
xchg
mov
xor
rorl
add
arpl
xor
mov
jne
inc
das
cld
movsl
das
out
jb
pusha
push
mov
cli
cmp
dec
push
sub
sub
push
mov
pop
dec
inc
jnp
sbb
cmp
inc
xor
popa
cmp
cmp
iret
xlat
icebp
outsl
std
imul
mov
les
adc
mov
mov
mov
jg
push
jg
add
xor
pop
or
mov
xchg
push
xchg
xor
mov
sbb
mov
pushl
mov
lds
jb,pt
sbb
lcall
cmpsb
mov
xchg
push
int3
mov
mov
and
aaa
and
dec
fisubs
mov
fdivrp
jg
ret
inc
mov
cmp
or
and
inc
sti
or
mov
ljmp
insl
sub
cmp
mov
not
fnstenv
lods
inc
and
sti
xchg
xor
orb
stos
cli
inc
adc
ret
xor
sub
jmp
add
mov
xchg
adcl
cmp
inc
rep
mov
pop
es
lods
call
dec
mov
adc
xchg
aas
test
mov
lcall
ret
fmull
dec
outsl
mov
or
out
rcrb
jle
call
inc
into
popf
adc
call
popf
jo
and
out
stc
call
outsl
in
jl
add
inc
js
push
cmc
push
inc
test
pop
cmp
call
divb
sbb
gs
jb
xor
mov
faddl
dec
ret
les
notl
jle
movsb
test
xchg
pushf
jl
mov
lcall
std
out
hlt
bound
lock
testb
cltd
in
insl
pop
sahf
pushl
sbb
testb
xchg
xchg
add
mov
sbb
in
add
xor
adc
insl
lcall
pushl
testb
jnp
jnp
jo
jp
add
call
sbb
pop
js
fdivrp
adc
cwtl
test
imulb
pop
iret
push
sar
rolb
xchg
mov
stc
dec
push
cltd
je
cmpsb
jno
and
jmp
out
adc
add
mov
xor
ret
mov
xor
pop
sbb
cld
jmp
pop
mov
mov
or
xchg
lcall
xor
das
fimuls
adc
adc
pushf
cwtl
sahf
icebp
cwtl
jmp
roll
adc
lret
sbb
dec
push
or
lock
iret
aad
and
scas
jmp
gs
mov
sub
scas
fstpt
jge
ret
lret
cmpl
adc
std
xchg
fistpll
cmc
add
xor
incl
int
es
hlt
out
popa
lret
adc
inc
les
mov
incl
push
pop
fwait
lret
repz
mov
das
int
call
pop
dec
push
test
and
lock
stos
js
cmp
xchg
test
and
sub
mov
inc
andl
push
mov
stos
xor
xor
push
add
out
lock
pushl
add
dec
loop
and
and
fdivrl
addb
je
mov
std
std
add
shlb
xchg
ds
mov
sbb
in
sub
repnz
or
inc
aad
sbb
movsb
inc
bound
mov
add
jmp
lcall
push
fwait
sub
imul
mov
mov
add
andb
add
adc
inc
lcall
ret
fyl2xp1
ljmp
jmp
int3
or
inc
lcall
movsl
call
lods
jb
push
pop
jl
out
mov
cmp
bound
test
add
jne
pop
inc
jmp
popf
or
idiv
lret
inc
pop
daa
mov
mov
incl
push
xchg
push
xchg
xor
cwtl
jne
push
jl
sar
pop
stos
ret
dec
repnz
add
fbstp
test
mov
loopne
rorl
cmp
ds
xchg
push
adc
ljmp
mov
pop
lcall
push
outsb
inc
or
sub
arpl
pop
pop
lock
call
dec
imul
jg
cwtl
cmp
dec
ljmp
jb
fstps
add
mov
lods
outsl
iret
xor
sub
pushl
jns
pop
push
imul
mov
mov
mov
and
ja
jg
js
aam
xchg
push
dec
test
and
jp
ret
fs
xchg
mov
insl
push
push
mov
xor
scas
jnp
shlb
sbb
insl
ds
cmp
movsb
push
ficompl
test
in
dec
popf
sbb
cwtl
icebp
jge
or
cli
mov
xor
jle
mov
ret
cli
call
mov
cmc
and
sub
mov
outsb
sub
jmp
xor
pop
mov
or
pusha
adc
inc
jno
pop
xor
hlt
das
std
push
loope
mov
iret
test
je
shrb
sti
jg
push
push
arpl
fiaddl
jle
in
loopne
ss
fidivrs
cli
fcmove
pusha
fwait
aam
ljmp
loope
xchg
push
mov
popf
push
adc
sarl
cmpsl
pop
push
out
mov
jg
out
xchg
pop
xchg
addr16
int3
and
xor
arpl
jg
and
pusha
ljmp
pop
adc
mov
cmp
mov
and
and
sbb
cmp
mov
pop
pop
cmp
xchg
scas
outsb
adc
call
add
popa
test
mov
lret
pop
mov
mov
mov
pushl
pop
insb
adcb
test
ds
push
das
es
mov
test
pushl
clc
imulb
in
mov
xchg
sub
in
add
or
repnz
push
xchg
jp
enter
enter
call
sub
sub
and
or
call
imul
sub
xor
mov
dec
stc
cmp
jne
sub
push
hlt
or
pop
or
sbb
xchg
popf
fisttps
int
iret
pop
cld
or
push
cld
add
mov
pushl
insb
incb
in
xor
repnz
lcall
mov
and
insb
xchg
mov
push
stos
pusha
mov
pop
adc
jge
cmpsb
sar
jg
jmp
shr
loop
mov
xchg
pop
push
loop
pop
jle
jmp
pushf
mov
lods
xlat
and
add
out
add
jmp
xor
repz
xor
jno
jecxz
mov
pop
mov
sbb
add
xor
incl
adc
scas
aaa
sub
aas
and
pop
aad
push
cmc
fwait
repz
lods
shrl
dec
lock
xor
into
mov
lods
sbb
xchg
push
ljmp
loopne
inc
inc
lods
pushf
adc
lock
fildll
lret
sub
sbb
add
pop
lds
sub
js
in
imul
jge
or
mov
decl
jns
pop
sbbb
lods
and
lret
push
fadds
mov
incl
data16
out
fwait
or
dec
jg
lds
mov
mov
lds
fs
or
mov
pop
aas
push
rcll
mov
sbb
sub
push
fbld
push
adc
in
sub
push
dec
sub
bound
mov
inc
pop
jno
loope
or
cltd
dec
call
xchg
enter
insl
sub
lcall
lcall
xchg
and
inc
out
sete
push
arpl
sub
mov
in
mov
adc
pop
xlat
aad
mov
push
bound
ret
loopne
mov
dec
int3
dec
xor
int
jg
mov
int3
mov
fnstsw
mov
and
inc
pop
scas
loop
jb
pop
decl
mov
inc
dec
sbb
pop
push
sti
mov
fs
dec
cmp
xchg
subb
shll
sti
add
imul
adc
scas
mov
pushl
mov
jne
rorb
icebp
adc
leave
lahf
ljmp
mov
pushl
out
jg
adc
pusha
mov
dec
xchg
pop
sbb
fisubl
arpl
es
pop
std
incl
and
cli
sub
shll
xchg
outsb
call
mov
roll
in
cmpsb
cmc
or
js
jmp
adc
lods
dec
jmp
sub
or
lods
and
jnp
mov
pop
cli
xor
lret
in
hlt
scas
mov
incl
lock
ds
jbe
fcompp
and
adc
fcompl
sub
jg
orl
mov
xor
bound
movsb
cmpsl
mov
jbe
std
in
ljmp
adc
test
movl
add
sbb
jle
jmp
jl
in
sbb
jne
in
push
mov
jne
std
out
dec
call
clc
aas
cmpsl
jecxz
add
add
pop
cmp
mov
inc
inc
popa
mov
int
pop
lods
fnstsw
cmp
popf
shl
pushf
leave
popf
lock
call
sub
inc
inc
xchg
andl
xchg
int3
movsl
ljmp
fucomip
data16
jp
das
mov
xchg
push
jb
ljmp
dec
fists
cmp
mov
mov
pop
push
jl
cs
into
dec
cli
call
mov
aas
daa
enter
adc
sbb
lcall
pop
push
xchg
mov
sub
stos
mov
mov
ret
jne
dec
push
jns
clc
pop
aaa
mov
pop
lcall
sti
mov
adc
xor
ds
incl
jno
pop
inc
cmpsb
push
fnstsw
add
mov
push
decl
hlt
or
das
add
add
sub
mov
int3
xchg
jmp
sub
call
in
in
push
je
mov
subb
shrb
push
push
push
fnstcw
iret
in
add
decl
cld
fwait
sub
dec
sub
xchg
mov
ret
fcmovnb
in
inc
fwait
push
decl
cld
iret
insb
push
sbb
sub
inc
dec
jp
sub
adc
imul
addr16
add
out
out
and
cwtl
push
sar
xchg
stc
mov
mov
mov
lock
and
ljmp
ret
repz
pusha
xchg
das
lcall
call
jmp
fildll
push
in
jae
adcb
push
imul
jo
inc
xchg
das
mov
xchg
lds
in
adc
out
jne
mov
inc
adc
jmp
xchg
out
pop
sbb
dec
ljmp
push
cld
mov
vmovups
mov
incl
or
int3
pop
xchg
sbbb
jno
mov
sbb
decl
lock
and
inc
dec
pop
add
pop
xor
je
jns
push
shll
sbb
jnp
adc
push
outsb
and
sti
stos
stos
mov
fcomip
pop
add
ljmp
xor
lcall
adc
mov
push
adc
in
lock
aad
push
adc
addr16
jmp
fcom
arpl
jnp
mov
cmp
pop
adc
or
cld
std
add
sub
cld
aas
mov
in
popa
or
jecxz
mov
sub
outsb
inc
repnz
imul
sub
fucomip
popf
cwtl
cmp
loop
inc
iret
lcall
xchg
incl
imul
add
js
fucomip
incl
in
fmull
jb
decb
xchg
lods
push
std
mov
rorb
out
sub
dec
add
mov
cmp
decl
jnp
push
mov
xor
lcall
pop
pop
lcall
push
out
in
cld
jmp
jae
sbb
mov
rcl
stos
call
inc
xchg
xor
shl
das
mov
mov
pop
xor
aas
dec
mov
pop
mov
ss
inc
decl
in
pop
xor
pop
ret
imul
lret
lock
repz
dec
sar
inc
test
movsb
jle
push
or
fsubrp
fcmovne
xchg
insl
aad
mov
or
dec
addr16
mov
mov
jo
ljmp
jb
ss
sub
aaa
jg
test
andb
dec
and
int3
dec
clc
imul
sbb
xor
sti
add
jecxz
push
dec
lods
jg
ljmp
mov
jmp
aam
push
out
sti
cmp
pop
rol
xor
jmp
outsl
xor
add
les
sbbl
out
aaa
inc
mov
push
push
loope
mov
incl
movsl
pop
pop
stc
lahf
cmp
testb
lea
push
sub
add
cmp
repz
lods
insl
into
movsb
or
ljmp
ljmp
int3
fiaddl
aaa
call
jo
pop
inc
jp
dec
sbb
aaa
clc
mov
xchg
push
test
test
sub
mov
xor
cmc
pop
push
pushl
pop
xlat
mov
cmp
les
je
cmp
int
incl
fisubs
stos
cmp
push
daa
in
add
or
pushl
clc
dec
test
fs
into
scas
aam
das
jge
cmp
and
inc
mov
out
iret
mov
je
and
mov
inc
jg
sahf
decl
push
test
repz
repz
or
pop
clc
ja
push
insl
jle
push
jge
hlt
dec
pop
jle
decl
icebp
xor
pop
sub
jns
mov
add
sub
jo
jns
fucomip
outsl
cmp
push
fcompl
popf
out
cmc
sar
fildll
es
dec
mov
inc
iret
or
cmp
inc
fs
cli
ljmp
sub
jo
pop
out
je
fmul
inc
loope
dec
lods
mov
stos
incl
cmpsl
dec
sbb
mov
insl
mov
xchg
outsl
mov
jbe
xchg
lock
inc
decl
cmc
bound
mov
je
mov
and
lock
sti
shrb
mov
rorl
mov
jp
adc
push
jg
ljmp
lcall
shr
cld
or
push
jge
mov
pop
cli
cmp
orb
cmp
cmp
repnz
and
outsl
cld
decl
push
xor
cmpsb
andl
mov
sar
loopne
xor
enter
std
and
sbb
sbb
idiv
mov
aaa
pushf
xchg
mov
aas
mov
test
not
push
mov
loopne
cmpsl
push
pop
call
gs
jbe
inc
push
inc
fsubrl
mov
mov
lods
stos
xor
mov
incl
fwait
xor
enter
mov
pop
push
xorl
fimull
lret
loop
ljmp
icebp
addr16
add
aam
push
mov
mov
lock
xlat
call
decl
loope
ja
and
mov
scas
cmpl
inc
out
mov
lods
sub
lcall
or
das
mov
daa
or
add
aaa
and
and
das
flds
sbb
mov
inc
xchg
arpl
push
out
shlb
rcl
cmp
popf
push
jns
shrl
out
cli
mov
mov
adc
jp
out
push
mov
sub
std
mov
out
cmpsb
cmp
ja
jbe
mov
xchg
push
scas
adc
outsb
shl
and
call
cmp
push
dec
leave
and
jbe
stos
inc
outsl
ljmp
pop
dec
arpl
daa
test
imul
xlat
adc
sub
flds
fildll
xchg
loope
sub
loop
jle
cld
mov
mov
clc
mov
das
adc
jno
adc
and
or
mov
jg
ret
adc
enter
pop
in
cmp
pushl
insb
jge
pop
push
mov
dec
comiss
sti
sarl
subl
jnp
movsl
mov
div
mov
mov
ljmp
mov
ret
adc
xchg
push
repnz
dec
popl
fs
shr
jge
and
stos
or
gs
decl
orb
imul
ds
push
dec
enter
sub
push
sub
ljmp
icebp
pop
iret
and
test
xchg
orb
xchg
outsb
jno
roll
icebp
ljmp
mov
mov
ret
test
push
inc
adc
aad
pop
dec
aam
sbb
and
loope
sub
jne
leave
imul
mov
inc
sbb
push
inc
ljmp
ljmp
adc
fimuls
sti
fldt
sti
bound
xchg
jo
data16
cmpps
lret
cmp
andb
stos
push
mov
ds
fs
mov
ss
cmc
inc
cli
mov
cwtl
fsubl
faddl
out
mov
fs
mov
lcall
dec
mov
test
cwtl
call
addl
call
jns
add
pusha
sbb
push
push
cwtl
inc
jg
pushl
out
mov
mov
sub
dec
shl
orb
push
sub
hlt
xchg
mov
cs
inc
in
add
int3
lods
jmp
cmp
decl
xchg
xchg
faddl
xchg
add
mov
out
jae
les
lcall
jge
inc
clc
mov
add
xor
mov
lret
mov
mov
cli
lcall
hlt
leave
xchg
jp
notl
push
cltd
dec
push
cmp
or
sub
call
outsb
aaa
insl
in
xorb
or
test
cli
ja
or
mov
lods
or
adc
ljmp
nop
gs
inc
andb
aad
lcall
xchg
add
popa
push
out
sub
jae
jae
out
movsl
clc
loope
adc
push
mov
add
cmp
test
pushf
imull
test
jo
ret
adcl
cli
enter
mov
pop
add
xor
jg
scas
jge
mov
jae
xor
sar
inc
pushl
movsb
fdivrp
addr16
mov
lock
test
cmp
outsb
and
call
cli
mov
cmc
outsl
mov
in
cmp
lods
decb
or
ljmp
push
das
push
lret
repz
cmp
and
mov
test
jne
xlat
jbe
xchg
xchg
out
dec
out
cmp
decl
or
jo
loope
test
inc
jecxz
lock
lcall
sub
add
mov
xor
or
xchg
adc
test
clc
decl
sbb
xchg
insb
jmp
push
not
lret
out
add
jmp
dec
call
clc
mov
lahf
push
xor
xchg
fistpl
stos
dec
out
push
jp
movsb
aad
mov
add
sti
mov
cli
xor
imul
sbb
call
and
mov
sbb
and
not
js
sub
cld
call
pop
xor
mov
cmp
mov
add
or
jmp
das
push
cli
mov
filds
popf
sahf
ss
rol
jbe
pusha
xchg
xchg
js
call
or
adc
scas
lahf
arpl
std
mov
pushl
cmp
rolb
jge
roll
lcall
les
mov
jle
jb
dec
je
adcb
call
mov
xor
rcrl
imul
xor
push
decl
jne
jge
inc
test
test
lcall
sbb
jmp
jae
xor
insb
xchg
pop
push
mov
push
add
cld
cmpsb
jmp
cmp
cli
pusha
call
mov
and
push
push
out
test
fbld
xchg
pop
in
ljmp
jnp
mov
mov
subl
loope
iret
ffree
xor
pusha
adc
jg
pushl
xor
cld
xchg
xchg
aam
cmp
xchg
add
decl
imul
mov
rclb
cmpl
or
out
ljmp
mov
mov
test
jecxz
sbb
dec
sub
roll
and
test
jge
or
jg
jmp
in
repnz
inc
pop
cld
out
roll
jns
ljmp
dec
dec
gs
jg
loopne
cli
xor
mov
cmpsl
xorb
push
mov
mov
sub
repnz
mov
lods
aam
push
inc
xchg
jle
fcoml
fsubl
jmp
fs
lods
add
call
or
jnp
add
iret
arpl
mov
pop
fdivrl
or
pop
iret
ss
nop
incl
add
in
aad
arpl
push
push
je
xor
cli
int3
aad
jne
jns
dec
test
bound
inc
push
xchg
jp
aam
out
mov
imul
incl
lods
xchg
or
add
gs
push
mov
push
xchg
mov
addr16
add
sarb
in
push
clc
movsl
jle
jmp
sbb
mov
sarl
test
inc
lock
lret
icebp
sarb
icebp
lcall
sti
shr
fildll
jle
mov
sbb
hlt
or
jbe,pn
add
lods
sub
sbb
cmpsb
ja
cmp
sub
sbb
xor
cmp
lret
mov
jmp
cwtl
ja
lock
mov
or
lods
cld
mov
ja
pop
leave
sub
cld
xlat
fs
cld
outsl
inc
add
repnz
push
movsl
sub
decl
leave
xor
jnp
push
es
mov
inc
inc
inc
sbb
xchg
test
inc
adc
pop
lods
call
daa
aaa
decb
orl
and
out
cltd
call
inc
sub
pushf
clc
enter
cli
fsts
mov
pop
cltd
mov
pusha
fwait
mov
lret
push
sbb
add
incl
cld
xchg
mov
push
sub
adc
mov
mov
lret
lods
outsl
dec
mov
out
push
adc
inc
mov
decl
push
addr16
loop
dec
push
cmp
mov
push
fsubl
aad
pushl
push
xchg
loop
pusha
xor
mov
cmovp
mov
gs
dec
dec
inc
outsl
fldenv
mov
cmpsb
repnz
jp
xchg
jmp
das
mov
scas
test
cli
cmp
push
jle
push
pop
shr
sbb
mov
arpl
out
sub
jp
imul
mov
subl
jnp
jno
outsb
ret
xchg
pushf
pop
push
add
and
pop
mov
ja
in
dec
pop
loop
xor
mov
jb
pminub
lcall
out
cs
jb
imul
es
subl
movsb
scas
aad
mov
sarl
subl
pop
mov
roll
sbbl
pushl
or
out
btr
fildl
push
mov
js
mov
rcrb
cmp
adc
clc
movsl
stc
cmpsb
xlat
sbb
and
cmp
sbb
mov
adc
mov
shl
loop
imul
adc
aam
and
or
xchg
shrb
push
ret
into
and
jg
adc
add
dec
cmc
pop
lea
jl
xor
stos
rcll
jne
ficomps
loopne
inc
mov
inc
xor
inc
sbb
add
stc
data16
nop
mov
and
adc
out
je
cmp
fcmovnbe
jg
lret
aam
iret
xor
or
cmp
inc
inc
or
xor
ljmp
mov
shll
mov
mov
push
adc
mov
sub
ficoml
ljmp
mov
and
idivb
enter
inc
and
aas
xchg
xchg
sti
leave
data16
mov
cwtl
decl
std
sahf
sbb
lret
xchg
dec
mov
mov
jg
fbstp
xorb
sub
call
cs
cmp
mov
sbb
sub
push
cmp
mov
push
test
cmp
fs
push
inc
xchg
in
repnz
hlt
jo
xchg
movsl
push
fstpl
lds
clc
add
pop
arpl
cli
es
std
popf
stos
or
pop
mov
popa
or
mov
shrl
and
call
sub
add
shrl
pop
stos
cli
mov
mov
and
lcall
rclb
push
cld
cmp
das
ljmp
add
cltd
imull
int3
sahf
dec
or
xor
decl
mov
push
sbb
sub
mov
dec
mov
aaa
incb
jecxz
xor
push
nop
mov
mov
ljmp
lcall
xchg
shrl
or
pop
mov
std
das
std
lods
xchg
pop
cmc
repnz
clc
push
fs
lods
iret
clc
incl
inc
sbb
pop
decb
mov
mov
jg
ljmp
or
inc
push
push
or
add
cmpb
fimull
cli
mov
or
add
test
es
sahf
xchg
mov
ljmp
mov
xchg
xchg
aaa
pop
jnp
and
push
rcrl
arpl
inc
dec
imul
dec
mov
xor
adc
mov
add
sub
outsb
sbb
insb
movl
mov
push
adc
or
ret
std
mov
xchg
movsb
sub
repnz
das
addb
popa
mov
inc
ja
aam
mov
in
pushl
adc
mov
xchg
addr16
insb
ss
jecxz
cli
testl
sar
cli
aam
in
rcll
fchs
into
sti
xor
and
lcall
lret
ret
mov
out
push
aas
add
in
push
push
pop
lcall
decl
pusha
cmp
push
mov
popa
aaa
je
fsubl
push
lock
nop
lahf
sbb
incl
int3
mov
lods
lds
cmpsb
ljmp
cwtl
add
adc
scas
cmc
mov
xor
mov
cli
rcrl
ja
pushl
jbe
inc
out
out
dec
std
lcall
js
out
mov
in
dec
pushf
popf
sbb
outsl
push
dec
rclb
stos
lcall
mov
and
cmp
jecxz
jg
dec
out
mov
xlat
inc
out
stos
push
ds
inc
test
sbbb
mov
call
cmp
ljmp
in
inc
js
push
xor
mov
lods
cs
adc
inc
dec
loopne
arpl
sub
jmp
push
sub
sub
std
test
orb
insl
ret
test
incl
jmp
shlb
sbbb
sub
cwtl
sbb
mov
adc
sbb
push
jo
cli
pop
cld
rcrb
pushf
in
xor
orl
test
jmp
and
push
ja
xchg
jecxz
and
loop
rcl
mov
or
sbb
or
divb
sub
sub
push
push
pop
dec
loopne
hlt
daa
dec
lock
fdivl
mov
mov
push
out
das
ss
xor
push
push
or
cmp
jp
jns
stc
aad
push
mov
fisubrs
js
jnp
or
jmp
push
pop
xchg
bound
inc
pop
sarb
xchg
insl
mov
jecxz
xor
cmpsb
inc
into
clc
and
xchg
xchg
jmp
cli
icebp
xor
pop
ljmp
bound
ljmp
es
sbb
js
lods
or
fcomp
shl
movsb
clc
cmp
jae
jbe
jecxz
mov
mov
bound
mov
lock
out
incl
dec
scas
jbe
jno
pop
mov
stos
pop
mov
insl
pop
adc
and
or
ret
mov
mov
lods
adc
movsl
insl
loopne
scas
pop
std
jg
lea
movsb
mov
imul
add
or
sub
das
add
inc
adc
xchg
mov
adc
pop
mov
sbb
mov
lahf
add
pop
inc
enter
fildll
or
js
add
dec
outsb
jg
std
shll
mov
xor
sbb
incl
pop
xor
cltd
and
mov
cli
daa
mov
in
jmp
loopne
xchg
cli
push
iret
dec
clc
aam
dec
fcom
sub
mov
incb
cltd
aad
jge
pushl
cld
push
addr16
scas
jae
in
push
mov
sysenter
dec
adc
add
pushl
sbb
mov
cmp
iret
outsb
pusha
das
cmp
mov
lock
pop
xor
cld
sub
aam
fcoml
adc
neg
and
pop
mov
adc
cmp
clc
decl
push
cmpsb
sarl
jmp
adc
mov
or
pop
in
les
int
insb
repz
sbb
aam
test
inc
sub
jg
arpl
xor
cs
dec
hlt
mov
roll
push
rorl
jbe
scas
arpl
xlat
sub
xchg
jne
fcomps
jnp
mov
push
lds
in
test
mov
movsb
or
jg
movsl
lret
std
cmp
mov
pop
cmpsb
lea
mov
jp
sahf
jb
inc
mov
jno
push
into
or
mov
outsb
push
mov
call
push
xchg
iret
sbb
sbb
push
sub
adc
inc
sti
cmp
jg
incl
xchg
fwait
sahf
add
shr
push
sbb
daa
imul
push
mov
lcall
pop
mov
or
push
cmp
daa
cmpsl
add
sub
int3
outsl
cmp
nop
jae
push
adc
sub
imul
ja
push
stos
mov
out
fs
call
jne
dec
aad
mov
adc
and
mov
ljmp
sub
outsl
xchg
jecxz
adc
sbb
subb
jmp
mov
cs
sub
popa
imul
mov
xor
mov
fucomip
jg
add
sub
mov
nop
push
jnp
mov
lds
das
lock
jmp
xchg
lcall
adc
push
aas
mov
mov
rorb
pop
loope
sub
jmp
ds
je
xor
notl
and
loopne
test
incl
sub
push
and
inc
icebp
dec
cmp
es
cs
mov
mov
jns
cs
cs
jg
movsb
sarl
bound
lock
inc
xor
jno
cmp
outsb
mov
cmp
mov
in
push
inc
jge
mov
lahf
or
adc
idiv
call
in
and
xlat
aas
xlat
int
pop
shl
pusha
xchg
xlat
pop
test
xchg
das
xchg
loopne
xchg
shll
call
cltd
or
pop
imul
push
inc
dec
mov
imul
fbld
sub
adc
and
lods
jg
xchg
ss
xchg
dec
sahf
pop
dec
fbld
pop
push
inc
and
mov
ret
ljmp
pop
xlat
adc
add
sbb
push
mov
call
int3
or
iret
cld
or
lahf
mov
je
mov
inc
hlt
adc
sbb
sbb
ret
ljmp
mov
loop
jp
decl
insl
in
pop
in
mov
xchg
mov
cmp
mov
aas
or
xchg
out
icebp
ljmp
mov
push
testl
loop
rcrl
add
lcall
mov
imul
cld
mov
lods
jns
push
cmpl
adc
lcall
fists
or
jp
sub
add
adc
mov
sub
mov
test
shlb
mov
jg
std
pop
insl
jp
mov
cmc
out
jp
add
inc
sbb
incl
mov
push
xchg
ss
cmp
scas
mov
adc
iret
pop
stc
leave
sub
mov
ret
jmp
stos
lea
push
loopne
sub
xchg
sbb
pushf
and
xchg
sbb
or
in
fistl
stos
pop
pushf
add
xlat
cmp
gs
mov
popa
sub
fnstcw
sahf
and
sbb
inc
cwtl
clc
mov
push
andb
cli
dec
jnp
cli
ljmp
push
lcall
add
cld
jmp
out
or
push
adcl
jg
and
lcall
cld
xlat
mov
adc
dec
cmpsb
and
loop
mov
lcall
ljmp
sahf
ret
fdiv
adc
jmp
outsl
jle
pop
sub
dec
clc
decl
mov
fs
mov
jae
push
and
mov
sbbl
test
cmp
clc
jg
in
ficoms
sub
or
in
ja
jle
movsb
cwtl
icebp
fisttps
scas
sar
decl
bound
lods
sti
jne
sub
sbbl
jp
ljmp
outsb
lods
ja
iret
das
mov
inc
inc
out
mov
sar
mov
aaa
push
jmp
icebp
fucomip
and
xor
fimull
pushf
cmp
push
lock
cmc
lcall
xchg
mov
std
jg
inc
jbe
sar
ljmp
addr16
mov
fsubrs
stos
leave
out
test
int3
std
insb
or
inc
mov
mov
sub
jge
and
mov
xchg
ja
jo
add
xchg
jo
rcll
ret
and
stc
add
sbb
int3
popf
cmp
xor
cmc
fsub
shl
jp
sub
cld
xchg
lret
adc
aaa
rorb
jg
fincstp
cmp
cmpsl
sbb
scas
outsl
sbbb
inc
mov
mov
daa
add
lcall
lcall
pop
dec
fidivl
les
pushf
mov
test
inc
dec
pushl
cwtl
cmp
adc
adc
aaa
call
pushf
jb
aad
fcmovb
cmc
xor
pop
dec
add
or
cwtl
aam
adc
ljmp
ss
lret
xchg
clc
jae
sub
jno
and
cld
mov
sti
test
jmp
push
out
lods
xchg
adc
jl
xchg
data16
fdivs
cli
xchg
jo
cmc
lock
mov
cmp
jg
aad
push
hlt
test
movsb
imul
pop
lods
lcall
je
or
cli
sbb
enter
sub
mov
jg
testb
push
or
adc
filds
movsl
and
call
incl
rcll
movsl
push
push
insb
adc
ret
jmp
fisttpl
cmp
lahf
rcl
adc
xor
jp
jg
inc
sub
sahf
push
aam
cmp
in
pushl
jnp
xchg
mov
push
mov
xor
icebp
jg
add
add
loopne
arpl
repnz
push
cmpsl
jecxz
lock
ljmp
mov
in
out
es
adc
pop
mov
mov
mov
rcrl
mov
jno
out
dec
mov
jno
inc
movsl
adc
mov
pushl
cli
adc
out
and
out
lea
js
or
pop
out
incl
push
inc
pushf
jge
rolb
insb
sarb
ljmp
cmpsb
mov
out
ret
lret
add
pop
das
xchg
mov
cmp
inc
lods
mov
scas
bound
mov
out
in
int3
ljmp
mov
mov
lods
into
movsb
jg
pushf
add
int3
insb
sbb
insb
pusha
imul
pushl
or
sbb
sti
movsb
xor
pop
popa
inc
mov
adcb
xchg
cli
lcall
pushf
sti
aaa
arpl
aad
fisubrl
jns
add
sub
out
ret
inc
mov
shlb
dec
push
and
cmc
sar
das
std
or
pop
test
sbb
addb
fs
arpl
into
lcall
xchg
scas
cmp
cmp
xor
fcoml
xchg
mov
mov
cli
ljmp
cld
mov
aam
mov
inc
dec
fbstp
or
fistps
and
mov
sahf
mov
mov
xchg
mov
pushl
xchg
dec
repz
loope
pushf
imul
sub
fists
loop
mov
sub
xchg
xlat
xor
xchg
mov
mov
das
fidivl
fs
mov
mov
or
rcl
adc
jg
jle
push
ficoml
inc
mov
sbb
sti
sub
ret
cmp
pushl
sub
rcll
pop
loope
test
imul
pop
mov
leave
or
out
dec
les
push
data16
popa
push
adc
pop
push
inc
lret
dec
aaa
add
mov
cmpb
loopne
clc
daa
xor
add
pop
popa
add
or
clc
aad
fsubp
in
mov
ds
xchg
hlt
movb
jg
xchg
push
cmp
pop
inc
pop
aad
sub
add
cmc
call
insl
jecxz
dec
gs
push
push
shl
mov
mov
jns
xor
aaa
clc
outsl
into
mov
ja
jne
xchg
dec
adc
pop
gs
adc
call
cwtl
gs
shl
add
int3
into
or
add
inc
xchg
call
xor
xor
sti
adc
adc
jmp
push
xchg
aas
pushf
add
jns
cmp
pop
and
orl
enter
and
fldenv
imul
sub
push
cld
movsb
dec
dec
push
xchg
xchg
into
pushf
decl
mov
addr16
sub
outsl
and
out
pop
mov
push
out
push
pushf
sarl
pop
push
mov
test
shlb
mov
ljmp
mov
lcall
hlt
outsl
mov
hlt
stos
lret
fnstcw
lret
or
mov
movsl
pop
or
mov
and
jns
push
inc
sbb
hlt
fucomip
jl
pusha
repnz
push
pop
mov
push
dec
cmp
mov
or
dec
lret
arpl
jg
fldt
push
mov
push
std
jae
mov
or
jle
inc
xchg
mov
add
pop
jle
fmull
mov
mov
ljmp
je
or
inc
in
out
dec
push
orb
imul
shlb
mov
cltd
mov
pop
mov
lcall
ss
lahf
decl
lret
pop
xchg
dec
decl
movsl
arpl
mov
add
jmp
or
ja
loopne
sub
incl
sbb
xor
scas
pop
jns
cmp
or
pop
dec
inc
fnsetpm(287
fwait
stos
xchg
and
and
add
or
dec
jle
jg
adc
dec
repz
mov
cmp
test
outsl
incl
outsl
cmp
xor
jle
cmp
adc
mov
mov
inc
jge
nop
fmuls
pop
pop
enter
jb
cmp
adc
pop
rclb
ljmp
pop
add
sbb
mov
inc
add
dec
pop
nop
rcrb
repnz
dec
movsl
ja
and
lods
jecxz
in
cli
insb
xchg
scas
mov
dec
loopne
lods
clc
xchg
sub
ds
inc
lds
frstor
das
mov
xlat
lods
inc
xor
pop
pop
popa
mov
mov
ficoml
inc
jp
sub
push
sahf
inc
aaa
out
sub
fistl
mov
mov
push
add
jmp
mov
and
add
sub
or
or
push
adc
adc
jge
hlt
push
sbb
dec
mov
lods
dec
and
mov
jne
fcmove
lock
scas
mov
mov
dec
sub
jmp
pushl
mov
sti
into
cld
jbe
and
outsl
aaa
sub
cmp
xlat
fs
xchg
adc
cmp
sub
pop
jnp
xchg
mov
xchg
pop
incl
push
push
in
sbb
sarb
mov
jb
mov
inc
call
jmp
and
hlt
sbb
sbb
mov
repz
sarb
mov
jg
jle
push
pusha
es
or
into
xchg
out
aas
jnp
das
hlt
decl
pusha
lcall
out
xlat
mov
fcmovnu
mov
push
sub
add
xchg
popf
push
cmp
push
test
repz
fwait
cmp
clc
stc
dec
mov
and
inc
xchg
dec
cli
cmp
loop
dec
sar
cmp
mov
ja
in
js
mov
xor
mull
pop
sarb
mov
call
or
rcll
inc
repnz
dec
jecxz
iret
mov
jecxz
add
and
call
mov
pusha
ret
hlt
adc
mov
push
pop
mov
mov
mov
jmp
cld
and
ret
test
pop
sub
outsb
sbb
inc
add
dec
sub
sbb
mov
pushl
test
adc
push
push
das
mov
bound
mov
hlt
ljmp
sbb
rcl
cmp
lock
pushl
stc
in
jge
loop
das
cmp
adc
insb
sub
mov
fs
pop
movsl
inc
outsb
or
adc
xchg
popf
adc
jg
ljmp
mov
sbb
fwait
rcrl
mov
mov
fadds
ljmp
mov
add
pop
adc
test
sub
pop
incb
add
pushf
ret
arpl
sbb
jle
push
push
push
mov
inc
jl
push
sub
insl
repnz
and
mov
shlb
std
ljmp
fxch
je
mov
cld
pop
pop
repz
jg
lods
push
sbb
cmp
or
in
jl
xchg
je
loop
inc
push
cli
jg
inc
fs
in
jno
mov
data16
nopl
mov
add
dec
push
push
xor
test
std
add
adcl
push
push
pop
xlat
in
mov
lcall
inc
in
xchg
jbe
jmp
xor
ret
push
cmp
sar
fucomip
inc
or
add
lcall
test
sub
sar
mov
in
lds
adc
xlat
imul
pop
jp
push
cmp
jmp
pop
ret
and
or
sub
fwait
fwait
mov
in
hlt
xor
repnz
mov
mov
xchg
or
jo
mov
or
xchg
add
mov
mov
jecxz
xchg
les
sub
loop
jl
daa
mov
mov
data16
pop
mov
xchg
push
or
pop
cmc
mov
adc
incl
pop
xor
bound
sub
clc
or
sbbl
and
mov
test
jbe
xchg
scas
jmp
mov
or
outsl
test
dec
sub
decl
push
push
sbb
in
test
push
pushl
pushf
xchg
pushl
jle
loop
cmp
nop
jnp
outsl
jnp
adc
adc
repnz
inc
xor
iret
pusha
shlb
push
jle
mov
pop
cmp
scas
pandn
fcmovb
push
jbe
repz
incl
add
sbb
stc
jecxz
ja
call
mov
pusha
mov
imul
push
iret
ret
pop
es
or
sbb
call
fadds
sub
jmp
mov
je
dec
pushl
ret
or
or
add
loopne
lods
dec
cwtl
int3
ljmp
loope
jle
push
mov
insb
imul
or
outsl
std
jg
cs
mov
xchg
jo
mov
mov
add
stos
push
push
aaa
cli
sub
das
jns
push
mov
cli
mov
inc
rorb
lods
inc
ljmp
dec
mov
rorb
leave
lcall
fldl
insl
call
mov
pop
xchg
add
pushf
push
inc
out
out
call
ds
shlb
cmp
add
sub
xchg
std
push
jne
mov
adc
mov
or
jg
test
fisubrs
and
ss
in
jns
push
mov
dec
std
ljmp
aaa
mov
aaa
outsb
xchg
push
mov
pop
add
flds
sub
scas
shr
jmp
jge
xor
and
push
mov
or
aaa
clc
lcall
mov
in
dec
lods
enter
pop
lret
inc
add
lds
in
cwtl
push
fidivrl
lcall
sub
sub
imul
and
sub
mov
aaa
mov
mov
jge
test
sbb
scas
insl
mov
mov
test
jp
sub
dec
fisubrl
cmp
dec
push
rol
xor
sar
std
dec
pop
xor
sbb
outsb
inc
sub
ffree
enter
cld
out
jo
lock
inc
fildll
repnz
rorb
mov
sub
dec
imul
aam
sub
arpl
mov
push
addr16
add
add
add
sar
adc
in
mov
lret
addb
les
test
scas
das
inc
xchg
pop
aaa
clc
decl
lock
imul
sbb
daa
mov
sub
call
mov
jecxz
adc
push
insl
or
sub
int3
lods
nop
mov
pop
cld
jns
xor
xor
inc
jmp
add
xor
xor
cltd
sahf
dec
push
jl
ljmp
cmp
cmp
ja
enter
test
lods
fnstcw
xchg
call
xor
mov
mov
lea
or
and
xor
decl
and
rcll
jecxz
inc
sub
inc
xchg
mov
or
incb
sub
stc
addr16
mov
pop
outsb
inc
sub
dec
into
mov
ljmp
int3
push
mov
data16
jl
and
jl
clc
in
lods
pusha
jle
add
sbb
xchg
lcall
icebp
scas
cmc
inc
mov
rclb
fwait
stc
push
outsl
clc
inc
xlat
push
xchg
jmp
imul
sub
jle
loope
cmpsl
fstpl
jno
push
adc
xchg
lahf
fwait
call
movl
sbb
adc
gs
jbe
adcl
loopne
outsl
xchg
pushl
decl
and
movsb
fsubl
stos
sub
adc
flds
gs
jg
loop
sub
lock
loop
jo
inc
sbb
jmp
inc
out
in
incl
gs
mov
fnstsw
test
dec
test
pusha
sub
jb
sbb
cmpl
test
adc
pop
push
fnsave
jbe
cli
jg
punpckhbw
in
sub
andl
adc
or
pop
fldt
gs
jno
jle
icebp
add
ljmp
jp
fisttpll
fsubs
and
xchg
ficomps
lret
inc
enter
cmp
xchg
sub
scas
into
add
call
nop
int
popa
dec
and
outsl
jo
lret
xor
insb
xor
adc
sbb
fucomip
stos
nop
sub
mov
mov
sub
mov
iret
cmp
push
pop
cmp
mov
popa
cmp
hlt
dec
nop
push
mov
pop
or
xchg
fldz
fwait
inc
lds
decb
xchg
cli
push
cmp
jecxz
add
mov
jmp
sbb
inc
mov
fistps
mov
out
jecxz
stos
mov
mov
mov
call
dec
xor
cwtl
dec
jp
in
shll
aam
ret
mov
es
sbb
inc
mov
decb
cmp
bound
mov
mov
ss
sahf
mov
fwait
out
dec
push
subl
movsb
inc
push
ret
scas
mov
xchg
sub
dec
jmp
loop
icebp
xor
ss
sub
mov
ljmp
jg
fbld
das
cwtl
pop
inc
jmp
in
jg
cmp
mov
add
cmp
inc
inc
lahf
sub
mov
fsts
dec
jl
pop
push
cmp
lret
rolb
and
sub
jg
test
mov
jp
pop
lods
aam
sub
out
movsl
or
xchg
pop
call
les
sbb
pop
dec
leave
sahf
jo
add
icebp
push
cmp
adc
pop
push
sahf
jns
iret
jge
xchg
lcall
or
sub
cmp
js
jnp
addr16
jle
inc
outsl
shlb
xchg
ljmp
ljmp
loope
enter
pop
aaa
insl
jne
dec
inc
ljmp
das
cld
lcall
into
daa
pop
xchg
test
loope
or
dec
dec
lods
mov
adc
ljmp
pop
sub
sbb
cmc
es
and
and
clc
ds
and
cmpsl
mov
xchg
lea
scas
or
mov
pop
dec
in
xlat
mov
pop
and
mov
pop
ljmp
je
or
mov
movsl
or
cmc
or
sub
fsubl
mov
mov
mov
aaa
mov
mov
pop
and
fwait
cmpsl
call
dec
add
or
push
pusha
imul
and
add
xor
loop
jg
push
xchg
out
hlt
mov
movsb
ffree
out
sbb
mov
jmp
dec
xor
mov
mov
add
ret
sahf
subb
fidivrs
lock
xor
jbe
ret
outsb
inc
cmpb
jle
xchg
js
inc
movsl
aad
in
xlat
push
pop
in
pusha
xchg
clc
nop
stos
shr
xor
inc
lahf
neg
and
lock
popf
pop
loop
mov
std
xchg
lahf
mov
push
xchg
rcl
mov
add
in
pushl
fldl
pushl
pusha
xchg
pop
orb
cmp
cs
call
push
mov
jg
call
dec
xor
rorb
movb
sbb
cmp
push
insl
incl
xchg
jne
mov
lret
jge
fxtract
mov
push
arpl
call
jmp
sbb
insl
inc
test
mov
aas
inc
mov
clc
mov
jecxz
loope
in
and
push
js
mov
mov
mov
lods
pop
cmpsl
jl
push
mov
loopne
jb
aaa
ds
in
fcoml
add
adc
decl
pop
cmpb
imul
scas
dec
les
add
or
push
ljmp
push
add
dec
sbb
mov
cli
into
or
push
push
inc
imul
mov
bswap
lock
lahf
ljmp
sar
xor
mov
test
jnp
sub
cmpsl
mov
pushl
xchg
mov
mov
fxch
xor
lret
cmp
outsb
test
sub
xchg
push
es
inc
aad
xor
fnstenv
mov
ret
add
pop
cmp
ret
or
test
pop
shl
pop
mov
call
cmpsb
xlat
pop
lods
jo
roll
push
mov
pop
imul
mov
pop
dec
xor
and
aad
ljmp
int3
add
insl
iret
pushf
cmp
in
xchg
or
divl
pushl
stos
pop
cmp
jmp
xchg
cmc
pusha
pop
push
xor
imul
orb
cmp
xor
in
inc
stos
and
pop
out
mov
cmp
imul
call
xchg
test
out
or
ret
sub
aam
push
cs
ret
in
fbstp
into
decl
xchg
xor
aaa
pop
mov
data16
sub
imul
cmpsl
into
into
mov
fwait
jg
and
cmp
hlt
movsl
fcoms
lods
stos
cli
dec
out
xorl
push
fnstsw
adc
fstpt
js
aas
xor
pop
push
adc
adc
xchg
add
shll
push
adc
sti
pop
inc
push
sbb
test
adc
jmp
mov
cmp
or
call
dec
xchg
xchg
xchg
stos
clc
mov
lret
sbb
push
jmp
xor
addb
decb
jns
xchg
dec
loop
xor
jg
or
ss
inc
pop
movsl
stc
cmp
inc
sbb
jnp
loop
ljmp
pop
mov
xlat
adc
cmpsb
das
int
not
push
xor
cld
mov
jg
fdivrs
iret
call
dec
and
adc
jnp
push
addr16
cli
add
jbe
mov
icebp
cld
mov
fmuls
push
js
push
dec
mov
adc
das
jg
dec
jp
mov
outsb
movsb
psrlw
cmpsl
push
xor
insl
fsts
lods
push
fidivs
jge
mov
movsb
sar
mov
les
or
and
mov
dec
mov
lret
call
sbb
aam
jne
call
dec
das
jg
mov
push
sbb
lods
push
lea
xchg
mov
cmpsb
xchg
in
sub
push
data16
adc
mov
fistpll
pop
pushl
dec
inc
ret
fisttps
pusha
insb
mov
aam
leave
inc
or
xor
xchg
add
ja
push
mov
dec
mov
aaa
clc
sub
and
xchg
ret
pop
xor
cmpsl
es
mov
pop
cli
ljmp
imul
dec
mov
cwtl
cmc
rorb
cmp
sbb
mov
jbe
push
int3
sbb
jns
pushl
push
sahf
js
jb
pushf
mov
sarl
inc
adc
mov
mov
mov
mov
daa
or
fimull
cs
pop
xor
push
nop
aas
dec
fsubs
outsb
jg
aaa
sarl
add
push
pop
aas
icebp
cltd
jg
cmp
test
das
cld
fucomip
sub
cmp
add
scas
sbb
xor
xlat
sub
cmc
decl
xchg
cwtl
je
sbb
fisttps
movsl
movsb
jnp
lods
addr16
inc
mov
das
mov
popa
arpl
adc
xchg
popf
cli
pop
fmuls
test
push
test
push
in
decl
stos
xor
push
and
dec
pushf
in
popa
add
xor
icebp
pop
loop
out
push
mov
adc
adc
pop
jecxz
dec
mov
loope
sti
imul
adc
inc
cmp
ja
sbb
xchg
mov
push
mov
mov
or
jne
mov
push
dec
cmc
aam
pop
lock
mov
rclb
mov
lds
loop
jge
dec
sbb
mov
xor
mov
aam
mov
in
jae
addr16
jb
inc
pop
loopne
clc
and
pop
xor
pop
cmp
mov
cmp
and
ret
pop
lea
aaa
hlt
xchg
xchg
popa
repz
jg
fistl
ret
mov
testb
mov
fildl
lcall
mov
in
pop
in
or
jae
test
jg
jg
test
pop
add
sub
pop
jg
pop
test
test
xchg
fildl
int3
mov
mov
xor
das
std
mov
xchg
movsb
push
cmpsb
les
iret
add
lea
cli
test
adc
out
add
lcall
scas
xor
lods
xchg
push
dec
xchg
ret
mov
pusha
mov
lcall
lcall
cmp
arpl
cmp
lds
shrb
mov
imull
xor
jg
ljmp
roll
fsub
shl
or
add
dec
hlt
dec
push
hlt
inc
sahf
ja
mov
jnp
jmp
push
call
fidivrl
fistpll
enter
gs
cmp
ljmp
adc
xchg
movsl
mov
add
jl
push
jg
xchg
ds
out
adc
aam
aaa
adcl
pop
adc
xchg
ficoms
std
inc
push
std
scas
adcb
decl
pop
lods
mov
fcoms
sub
out
lcall
dec
rcll
ljmp
loopne
movsb
mov
dec
ljmp
std
pusha
add
hlt
inc
call
rcl
mov
cmp
inc
addr16
je
jno
loope
decl
stc
sbb
test
aad
mov
popa
addl
mov
outsb
mov
aad
mov
mov
pushf
fisttpll
mov
cwtl
pop
repnz
stc
mov
in
mov
pop
xchg
insb
fildl
sbb
decl
mov
enter
sti
gs
pop
das
jp
push
xlat
dec
sarl
xor
lea
mov
js
mov
and
mov
pop
ret
mov
add
sbb
mov
sahf
xor
ljmp
es
in
cwtl
mov
sbb
jecxz
sbbl
add
cld
jge
mov
pop
leave
jne
ja
mov
stos
cmp
leave
push
add
sbb
cmp
mov
test
jns
lods
mov
lds
push
addr16
sub
adc
pop
decl
in
lods
lds
push
icebp
aad
push
ret
lret
and
inc
push
pop
leave
outsl
push
lock
shl
sbb
mov
cs
loopne
ljmp
mov
icebp
outsl
jns
push
ljmp
xchg
pop
inc
ds
call
in
les
adc
ret
push
mov
add
cmpl
repnz
subb
push
addl
cld
lods
mov
mov
dec
push
outsb
aaa
lcall
das
mov
out
cmp
fs
sub
idivb
insl
pop
or
mov
lcall
sbb
les
adc
add
es
inc
sbb
ds
push
out
ss
outsl
icebp
jmp
icebp
push
pop
shll
dec
clc
mov
lock
xchg
mov
aad
sbb
xchg
sbb
or
in
pop
pavgw
add
jmp
test
inc
pushf
mov
bound
loop
xchg
cmp
sub
in
in
adc
inc
inc
popa
je
ret
das
pop
cwtl
dec
loope
dec
jae
sarb
adcl
loope
lds
dec
shl
cs
dec
aaa
incl
inc
outsb
push
mov
outsb
into
dec
or
sub
aas
lret
xchg
out
cltd
mov
push
incl
mov
xchg
mov
mov
jp
stos
arpl
dec
lods
call
mov
pop
adc
add
cltd
imul
lret
pop
test
mov
mov
fsubr
test
inc
das
xor
mov
stos
fadds
jmp
fldt
jne
adc
inc
jg
inc
sub
fdivr
push
adc
stc
out
frstor
mov
jmp
mov
pushf
push
push
shl
jg
incl
jns
stc
lds
jmp
lods
adc
repz
adc
call
lret
xchg
jmp
lds
cmpl
aas
cld
dec
inc
fwait
jp
sti
test
movl
out
insb
cmp
pop
push
orl
rclb
xor
inc
cmp
fisubl
jmp
xchg
scas
add
fcmovbe
arpl
cmp
incl
push
inc
clc
xchg
xchg
sarb
jb
adc
pushf
or
mov
mov
jecxz
and
fsubl
jb
pop
sbb
stos
cmc
shrl
lea
mov
sbb
fsubrs
nop
mov
jo
push
call
mov
dec
shll
mov
and
xchg
pop
inc
jo
xchg
mov
popa
adc
lcall
xor
adc
inc
push
ljmp
dec
fwait
cmp
push
mov
ret
sti
cmp
aam
mov
push
sbb
cmp
xor
push
mov
lahf
pop
iret
jl
mov
aad
jmp
cltd
std
jg
jmp
dec
and
or
jnp
push
mov
lock
mov
repnz
insb
ss
xchg
jae
pop
loope
jecxz
ss
popw
movb
outsb
arpl
ljmp
aas
jg
das
xchg
or
mov
push
imul
jecxz
mov
loop
js
lock
popa
xchg
xor
mov
mov
rcll
inc
mov
lcall
jle
add
arpl
mov
or
lahf
and
orl
push
lcall
movsb
push
sarb
loopne
mov
in
mov
add
das
xchg
js
imul
incl
les
imull
inc
jmp
leave
stos
shll
lret
fnstsw
int3
or
sub
mov
ret
sbbb
and
ds
xor
mov
negb
xchg
jae
insl
xchg
outsl
hlt
ljmp
sbb
mov
sbb
xlat
mov
decl
lock
andl
xchg
lods
lcall
fwait
or
decl
mov
addr16
xchg
mov
xchg
adc
inc
fisubrs
incl
bound
xchg
push
sbb
sub
mov
dec
xchg
sti
pusha
push
fsubs
xor
push
jae
data16
decl
pop
xrelease
cmp
xor
dec
mov
lods
incl
sbb
fnstcw
xchg
sbb
lock
adc
mov
push
jmp
cmp
adc
mov
cltd
cmp
inc
fbstp
lret
scas
mov
cmc
mov
xchg
adc
fnsave
stos
iret
imul
mul
dec
pop
dec
pop
lock
sub
scas
xlat
pmulhw
mov
stos
repz
cmc
scas
ljmp
outsl
jne
fimuls
pop
outsl
hlt
ret
add
movsb
mov
call
jns
sbb
ret
bound
add
aam
imul
pop
test
pop
fwait
xchg
xchg
into
sbb
cmp
or
jg
sub
add
cmpsb
in
or
and
mov
pop
xchg
mov
sbb
daa
out
jle
cld
test
sbbb
adc
jmp
sbb
or
mov
jb
cmp
mov
fs
mov
fnstsw
clc
test
push
dec
xor
js
mov
xor
dec
faddl
adc
inc
sbb
push
bound
mov
test
add
lock
xlat
orb
mov
fiadds
sub
int
dec
in
clc
aas
pop
adc
clc
inc
lock
outsb
add
add
aaa
mov
in
adc
je
movsb
loop
pop
jns
je
lcall
lret
pop
pop
rol
xchg
pop
jne
lock
aas
test
je
pop
inc
clc
cmpsl
in
xor
outsl
cld
ljmp
xchg
repz
out
mov
jle
lds
add
jg
mov
mov
lahf
stc
mov
pop
mov
clc
ret
mov
aad
adc
inc
cld
lcall
push
inc
dec
subb
mov
mov
popa
in
lcall
icebp
adc
data16
mov
mov
xchg
mov
decl
out
jns
jne
push
xchg
mov
push
das
loop
mov
inc
xor
decl
cmpsb
push
or
aad
bound
inc
jns
sub
pop
imul
std
pushl
sbb
mov
or
mov
mov
xor
pop
scas
sub
mov
decl
fs
adc
call
mov
jmp
dec
std
jbe
loopne
repnz
dec
pop
in
repnz
stos
cmpsl
mov
gs
mov
dec
push
xchg
arpl
das
pop
inc
sbb
out
mov
aaa
xor
loope
gs
shlb
mov
mov
fisttps
ret
mov
test
push
mov
std
and
xchg
out
mov
data16
mov
lds
call
mov
inc
push
cld
decl
sub
dec
stc
cs
xchg
hlt
pop
call
ja
fwait
mov
insl
test
mov
loope
cld
or
outsl
cli
arpl
sbb
mov
inc
cmp
push
decl
loope
push
mov
mov
shlb
adc
cs
decl
jno
pushf
cmp
pushf
sti
out
test
xor
push
cltd
inc
mov
jecxz
outsl
std
outsl
lea
nop
mov
and
mov
dec
add
das
lret
clc
jb
mov
mov
cs
mov
lahf
gs
jmp
adc
jno
jb
pop
adc
movb
out
jb,pn
jns
sarb
or
call
out
push
negl
les
sarb
sub
clc
inc
ror
fstps
cmp
xor
cmpsl
xor
ja
jbe
xchg
jmp
jge
je
mov
inc
or
std
pop
add
pop
push
cmp
or
jg
aam
sti
movsl
movsl
mov
mov
sbb
adc
scas
cwtl
aas
mov
mov
inc
bound
and
xor
mov
xchg
jge
mov
or
ja
call
aaa
fildl
or
mov
test
sbb
push
push
scas
clc
repnz
jno
and
sub
jmp
sub
and
pop
dec
cmp
xchg
in
dec
jne
xlat
mov
lahf
enter
jae
jmp
jle
inc
roll
mov
cmp
cmpb
xchg
data16
imul
dec
push
clc
mov
lcall
lret
inc
pop
mov
push
aam
adc
aad
and
jg
loop
push
xor
aam
cli
pushl
ljmp
fsubl
je
lods
cmp
sbb
dec
pop
bound
push
cwtl
jg
sti
or
jmp
out
xor
out
call
mov
movsl
jmp
sub
into
mov
clc
jg
pop
cwtl
call
and
shll
decl
push
inc
xor
sbb
add
sub
inc
std
les
div
movl
jmp
push
rcll
ds
xchg
sahf
dec
nop
pop
add
push
iret
gs
adcl
dec
rcl
cmp
jmp
add
cwtl
dec
sub
mov
xor
and
call
push
mov
and
mov
icebp
icebp
xor
push
jg
ds
test
mov
pushf
lods
fnsave
movsb
push
fxch
call
xor
pop
xchg
cli
in
lods
mov
xchg
test
cmpb
cmp
lret
cmp
mov
movsb
out
repnz
test
mov
lea
dec
inc
mov
js
push
fstp
mov
out
mov
arpl
mov
es
mov
fucomip
lcall
adc
jecxz
pop
mov
cwtl
sub
mov
mov
mov
pop
ficoms
inc
push
mov
xor
inc
loop
gs
pop
push
sub
jb
subb
add
adc
in
inc
mov
pop
mov
cmp
push
sbb
xlat
adc
cmp
mov
or
xchg
xor
mov
xchg
out
addr16
push
call
cmpsb
insl
and
test
incl
xchg
mov
mov
push
mov
or
sbb
cmp
incl
lcall
cmpsb
out
pop
rcll
out
call
jne
test
mov
mov
push
inc
adc
test
lock
call
mov
decl
cmpsl
mov
mov
mov
dec
xchg
or
aaa
sbb
cld
xchg
adc
pop
jge
pop
fwait
arpl
or
dec
dec
xor
addr16
lcall
ror
movsl
push
mov
andl
pop
sub
daa
mov
mov
cmpb
cmp
inc
lods
jmp
push
or
arpl
call
cli
mov
xor
sti
int3
fs
lcall
hlt
ljmp
into
aas
adc
sbb
sbb
ljmp
cmc
mov
aam
inc
jne
inc
test
imul
mov
cmp
pusha
lcall
jg
jge
push
lret
es
pop
movb
decl
cld
sub
sbb
sbb
sub
mov
push
add
jecxz
lcall
cmp
xor
mov
mov
out
fdivrs
and
out
lods
pop
das
icebp
inc
dec
push
dec
stos
repnz
rcl
data16
fdivp
or
std
and
icebp
lds
lret
cmp
lret
iret
iret
dec
dec
push
push
popf
dec
or
push
call
cli
outsl
xchg
push
bound
xchg
cli
leave
pop
xchg
push
mov
lcall
hlt
rcrl
imul
jbe
pop
scas
loope
cli
cmp
notb
jp
cmp
cld
pushl
lcall
in
xchg
adc
fiaddl
dec
idivl
cmpsl
xchg
jno
pop
loop
pop
and
lods
incl
ds
insl
inc
jmp
mov
icebp
mov
hlt
dec
mov
cli
ret
cmp
pop
sbb
and
jp
xchg
test
inc
add
mov
sar
call
jae
or
not
push
popa
push
jg
popa
addl
lods
rcrb
pop
sub
push
jecxz
les
pushl
fstps
fcmovnb
out
add
adc
lods
xor
ud0
add
pop
sbb
push
push
mov
push
cltd
push
and
add
jns
js
ljmp
fsubs
call
lret
fildll
sub
mov
mov
sbb
mov
mov
decl
mov
popf
dec
and
daa
inc
sti
faddl
xor
nop
jns
jp
loopne
lock
cmpsl
insl
push
sub
mov
decl
int
pop
pop
or
and
pop
jo
lods
fidivs
mov
lea
popf
in
ret
fbld
or
mov
jg
pop
lcall
cli
jnp
imul
mov
mov
outsb
jge
adc
test
div
mov
or
cmp
or
pop
incb
sbb
and
clc
sub
push
test
fisubrs
les
out
test
hlt
idivl
dec
clc
inc
bound
sub
push
lcall
pop
shr
xchg
test
loope
cmpsl
test
push
pushf
jg
dec
enter
adc
shlb
lahf
adcl
pop
loopne
testl
sub
inc
push
ja
push
icebp
test
lcall
cmp
push
push
xchg
fwait
ret
and
fbstp
mov
pop
xor
sub
mov
ficompl
jae
call
imul
mov
stc
add
out
bound
ret
stos
push
add
mov
lcall
inc
adc
sub
in
mov
inc
dec
jge
or
ljmp
ljmp
mov
sub
mov
or
add
jmp
shrl
sbb
cltd
inc
or
jae
and
ss
or
lcall
clc
sub
pushl
ljmp
push
shrl
push
mov
popl
aaa
icebp
imul
push
sarl
decl
jle
add
popf
xor
fwait
movsl
out
std
mov
sbb
call
inc
lcall
lcall
shl
and
adc
bound
cmpb
out
pop
mov
jne
sub
dec
add
pushf
pusha
and
loope
xor
sub
dec
cmc
fistps
bnd
lcall
push
cltd
mov
mov
clc
enter
mov
xor
dec
add
inc
fsubl
daa
adcb
xor
clc
jg
jmp
sbb
aas
xor
shl
push
out
pop
dec
or
xchg
test
arpl
mov
add
push
mov
mov
movsl
dec
mov
jmp
or
jmp
cmpps
xor
push
xor
popf
cli
fdivrl
aas
push
cs
mov
adc
clc
stos
out
or
testb
stos
cli
in
leave
in
out
cmpsl
addr16
decl
fistl
pop
or
xchg
or
loopne
fwait
das
adcb
sbb
and
ret
fldenv
lahf
cmc
cmp
sub
jbe
call
stos
inc
ss
das
out
sbb
ss
lret
mov
loope
mov
mov
add
dec
inc
fstpl
push
sahf
jne
xchg
js
pushl
jle
idivl
hlt
ss
into
ss
out
sbb
outsl
jge
movsb
xlat
rep
jne
xor
jns
and
pop
or
push
cmpb
loopne
cmp
shlb
pushf
cmpsb
and
sbb
ljmp
std
pop
push
mov
pop
adc
pop
push
stos
mov
jg
inc
movsb
jnp
push
insl
mov
jg
call
add
lds
int3
inc
jnp
fcomps
movsb
dec
cmc
aaa
cli
xchg
cli
sub
or
outsl
sbbb
dec
mov
mov
or
dec
nop
nop
inc
push
xchg
rolb
repnz
mov
ja
sub
lcall
cmpsl
ficoml
icebp
hlt
daa
cmp
push
repnz
jg
xor
xor
xor
cmp
inc
cwtl
cmp
xchg
xor
sub
movsb
push
pop
xchg
pusha
arpl
iret
jl
out
mov
aas
mov
and
jg
fnstcw
sub
ljmp
dec
pop
cwtl
out
fs
in
and
jmp
pop
lods
divb
lds
xchg
test
lods
das
mov
scas
cmp
sti
ret
repnz
std
pushl
or
fwait
es
cltd
jmp
clc
jl
mov
ljmp
lea
lds
stc
push
adc
fwait
mov
xchg
fimuls
push
jecxz
mov
iret
or
xchg
jno
push
and
push
jb
mov
mov
xchg
call
js
sub
mov
and
jne
push
xor
or
xchg
push
cmp
xor
dec
inc
mov
daa
push
adc
das
push
cmp
into
mov
sarl
std
mov
arpl
in
les
das
and
jp
lods
inc
cmp
decl
jae
jg
loope
loopne
push
aaa
loope
test
dec
std
enter
cmpsl
aas
xchg
arpl
push
inc
orb
cmp
pushl
mov
lahf
test
dec
inc
data16
mov
imul
cli
fs
jp
and
fdivrs
dec
add
ljmp
sbb
cmc
cmpsl
int3
sahf
inc
enter
mov
lcall
std
call
and
push
xor
js
sub
cmpsb
add
into
xor
push
inc
cld
jg
insb
mov
call
and
dec
scas
jmp
rorb
adc
enter
jp,pt
aam
mov
mov
pop
loopne
lcall
cmpb
push
adc
insb
mov
mov
hlt
inc
pusha
fwait
pop
mov
mov
jg
xor
pushl
clc
insl
push
rolb
test
ds
cmp
mov
xchg
fsubrs
popf
jmp
xchg
dec
jmp
mov
aad
aam
sbb
incl
xchg
notl
dec
lock
dec
out
jb
jecxz
lcall
es
pushl
cli
sarb
movsl
stos
repz
cwtl
inc
jle
popa
in
je
mov
inc
popf
or
mov
ret
xor
add
or
addl
mov
add
xor
pop
inc
pop
pop
push
add
loop
or
into
add
jle
push
mov
inc
xchg
jo
decb
roll
or
in
cmpsl
and
cmp
pop
stos
xor
call
dec
jg
imul
loop
pop
inc
lcall
sub
mov
cmp
mov
shrl
mov
jg
std
test
mov
idiv
call
sub
mov
fwait
fwait
aas
iret
inc
sub
mov
ljmp
aaa
mov
jl
jg
int3
and
cld
xor
jg
popa
jg
jae
jmp
std
imul
or
ljmp
aad
xchg
mov
adc
addps
sbb
fimull
call
dec
push
out
sti
and
int
comiss
and
out
fdivl
push
jo
jge
or
lods
fidivl
cmpsl
les
mov
sbb
das
lock
pop
jo
mov
stc
adc
push
divb
mov
jne
std
dec
adc
push
out
sub
std
lcall
pop
push
fdivp
mov
iret
scas
sti
out
push
call
int
data16
mov
imul
ss
test
decl
cmp
fnsave
aad
lods
jp
insb
sbb
xor
call
sub
lret
dec
sar
enter
mov
xor
cmp
xchg
std
ljmp
sti
xchg
icebp
test
rorl
add
sbb
lcall
lret
lahf
push
cmp
mov
inc
hlt
xchg
xchg
push
and
cld
jg
rorb
mov
lea
xchg
mov
push
insb
aaa
pop
icebp
stc
aaa
push
ljmp
orb
push
mov
or
das
scas
jmp
movsb
mov
pop
sub
sti
mov
fmuls
pusha
js
mov
loope
subb
mov
iret
sub
dec
std
dec
cmp
ljmp
daa
aam
hlt
aaa
stos
stc
pusha
xchg
fidivl
icebp
call
push
clc
dec
data16
cwtl
enter
jns
shlb
cld
mov
xor
add
inc
andb
das
clc
adc
jns
add
push
in
test
mov
mov
ss
push
jle
jle
lcall
std
adc
mov
popl
sbb
fcompl
dec
pop
in
jnp
pop
cli
fistl
sahf
scas
mov
fwait
popf
int3
rorb
jb
add
addb
xchg
mov
cmp
fldenv
fs
and
call
or
scas
mov
mov
lret
test
les
cmp
lret
mov
nop
add
dec
cmpsl
inc
out
cli
iret
xchg
push
push
inc
int3
ret
cld
add
fiaddl
popa
out
sub
push
test
lret
lods
mov
mov
mov
push
mul
loop
pushf
mov
frndint
mov
test
leave
inc
pushl
mov
dec
xchg
cmp
dec
lock
mov
sbb
stc
xchg
add
call
aam
dec
out
out
push
cmpsl
xchg
enter
adc
xacquire
mov
adc
jmp
mov
loope
inc
dec
pop
push
jecxz
cmp
mov
xchg
iret
cmp
cmpsb
cld
mov
jp
mov
pop
insl
mov
pop
add
shlb
fistpll
cmp
in
push
cmpsl
xchg
jp
sarl
idivb
adcl
lcall
add
leave
cmc
or
movsl
dec
filds
dec
add
mov
roll
fsubp
lret
sub
test
xor
lcall
pop
pop
push
inc
or
stos
jno
lods
clc
xor
pop
lods
mov
cs
cmp
mov
adc
dec
lea
fcmovnbe
popa
xlat
stos
loop
pop
bound
jae
push
add
sub
scas
mov
fistpll
adc
gs
sarl
xor
stos
and
pushl
sbb
out
jnp
or
lods
mov
fdivrl
cs
jnp
test
xchg
sub
into
add
xor
mov
push
repnz
ja
xchg
jbe
pop
or
jg
xor
mov
les
scas
flds
clc
adc
scas
xor
fsubrl
nop
mov
or
inc
call
cmp
cli
movsl
xor
fsts
xor
pop
hlt
or
pop
push
push
xlat
icebp
mov
mov
nop
pop
ror
fs
adc
xchg
pop
outsb
ljmp
std
lcall
xchg
sub
stos
sarb
or
inc
incl
adc
cmpsl
or
rcr
jle
negl
and
icebp
outsl
cld
jmp
es
lcall
pushf
pop
nop
inc
das
jno
in
xchg
decl
jmp
and
popf
ss
cmc
and
shlb
mov
push
loope
sahf
adc
clc
imul
leave
xlat
pop
inc
mov
inc
xor
jbe
dec
in
rcll
orl
cwtl
adc
mov
ret
mov
popf
jge
jg
incl
inc
mov
dec
mov
cmpl
call
lret
scas
and
mov
mov
push
pop
mov
pushf
xlat
sahf
cli
repz
cltd
adcb
call
je
mov
insl
inc
ljmp
add
lock
imul
jnp
or
cltd
dec
cmc
fidivs
das
fcoms
movsl
pushf
decl
sti
in
and
nop
pop
and
rolb
sbb
lock
inc
jne
addr16
aam
incl
int3
call
out
cmp
cwtl
pusha
ret
loopne
and
pop
rcll
jb
mov
mov
daa
idivb
aas
fsubrs
push
push
cmpb
or
xchg
push
imul
lret
cmp
and
fsts
push
rcl
inc
sub
incl
icebp
pop
lret
lret
sub
out
xor
into
fstpt
mov
mov
sub
insb
add
je
popf
ret
mov
mov
push
fiaddl
clc
in
fcoms
or
push
mov
inc
mov
jmp
lahf
mov
fsubr
xchg
dec
mov
push
push
push
fldl
cmp
xchg
incl
ror
int3
sub
xor
cs
rclb
test
mov
and
xor
mov
outsb
iret
inc
sub
jae
shlb
jnp
xor
insl
sbb
jecxz
push
jg
decl
sub
loope
test
sbb
pop
movsb
in
xchg
dec
sti
clc
outsl
scas
hlt
rclb
dec
mov
inc
jmp
int
dec
push
cmpsl
call
add
or
cmp
push
hlt
xchg
cli
sub
cmp
pop
std
dec
popa
pusha
cs
ficomps
jg
cwtl
xchg
les
movsl
push
shr
mov
jmp
mov
aad
adc
adc
cmp
push
adc
jl
outsl
jmp
sbb
es
icebp
or
dec
pop
dec
out
hlt
arpl
jecxz
sub
ljmp
adc
inc
arpl
hlt
lret
outsl
fwait
imul
adc
dec
jb
jns
add
aaa
clc
fists
mov
jo
std
stos
xchg
ret
icebp
inc
mov
mov
mov
aad
cmp
mov
mov
test
leave
jle
in
xchg
ja
mov
lahf
stc
arpl
push
call
cmp
xor
mov
or
rolb
mov
or
pusha
inc
inc
sbb
add
incl
outsl
sbb
push
xchg
stc
inc
push
mov
call
mov
sub
dec
adc
sub
testb
adc
xlat
xor
decl
pop
jno
andb
outsl
mov
scas
sbb
outsb
loope
sub
lods
scas
cltd
xor
or
jle
push
mov
imul
xchg
mov
xor
fadd
imul
incl
xchg
jnp
ret
sti
cmpsl
mov
jns
inc
dec
ljmp
dec
and
scas
push
out
jmp
push
int3
or
insb
jns
fsubrs
andb
decl
arpl
mov
push
mov
add
pushl
orb
xor
push
push
xlat
cmpsb
jge
or
fnstenv
jge
jg
incl
popf
cmc
inc
jecxz
push
jno
and
lret
pop
push
sbb
movsl
nop
subl
cld
fbstp
mull
cwtl
in
sarl
inc
push
adc
test
mov
adcb
cmp
or
aaa
adcl
jle
pop
push
data16
test
and
ljmp
jg
sbb
push
pop
gs
sbb
lock
or
or
sbb
cmc
not
sbb
cmpsl
cltd
out
lock
cltd
pushf
daa
fsubrp
pop
sub
xor
std
dec
push
popa
loopne
imul
xor
clc
pop
in
leave
fnstcw
cli
jl
fldenv
cmp
jae
dec
mov
lea
pop
add
or
out
ss
and
push
dec
hlt
icebp
frstor
roll
mov
call
cmp
lret
orb
fsub
mov
xor
out
lock
les
jl
and
aaa
inc
push
andl
jns
push
mov
push
inc
cmpsb
xorb
ljmp
lods
inc
adc
pop
jp
xchg
mov
cmc
cmp
int3
xor
nop
xor
cld
sbb
fistps
dec
or
push
adc
sub
and
dec
mov
xor
inc
sbb
cli
jmp
and
fsubr
sub
in
iret
pop
ret
push
cmp
pushl
xchg
jp
jns
adc
inc
add
mov
pop
andb
lock
incl
xor
sbb
push
cmp
cltd
sbb
ljmp
divl
adc
jb
xor
addr16
mov
call
sub
and
sbb
dec
and
daa
imul
add
scas
arpl
sahf
sti
mov
jle
in
mov
sub
pop
leave
and
in
sbb
out
add
into
bound
notl
mov
stos
arpl
cmp
push
add
xchg
leave
jge
xor
sar
cmpsb
leave
outsl
xor
call
and
lret
cmc
pop
adc
pusha
push
mov
iret
adc
push
xor
lcall
js
lea
inc
add
cmpsl
cmp
test
mov
insb
mov
movsb
in
mov
js
push
invd
or
and
pop
loopne
ret
and
lods
sub
outsl
decl
mov
cmp
ds
js
push
les
adc
mov
mov
pushl
call
fcmovnu
mov
cmp
dec
push
and
cmp
dec
xchg
in
pop
and
sarb
mull
leave
inc
mull
nop
push
xchg
xor
dec
leave
and
fistpll
sbb
jg
and
xchg
jp
dec
xchg
das
cld
rcrl
cld
lcall
mov
addr16
bound
xor
mov
inc
daa
sbb
inc
jmp
sub
push
pop
lock
dec
jmp
bound
cli
incl
pop
mov
lods
pop
pusha
xorl
pop
jp
orb
xchg
jle
lods
jmp
lcall
jmp
out
xor
inc
incl
cmc
xchg
mov
aam
mov
or
mov
cmp
mov
test
mov
out
lea
arpl
mov
jecxz
pop
ja
mov
mov
fwait
push
mov
ds
xor
cmp
out
ret
pop
dec
pusha
add
sub
pop
push
in
loop
pop
push
aad
or
push
stc
cmp
adc
test
cmpsb
pushf
lods
decl
xlat
mov
dec
pop
jle
jae
add
in
sub
mov
cs
cmp
loope
mov
inc
sbb
sub
cmp
sar
cli
call
ja
mov
aas
pop
mov
jne
xchg
leave
pop
int3
enter
ljmp
scas
je
insl
dec
cmp
mov
xchg
lcall
hlt
call
push
sbb
mov
lods
cwtl
fcoml
jns
cmp
aas
call
cmp
xor
repnz
inc
or
ja
push
add
lcall
pushl
int3
jns
out
and
and
push
cli
pushf
movsl
nop
cld
jle
push
pop
aad
sti
decl
mov
push
mov
jl
fisttpl
xchg
push
jnp
decl
shl
jae
jp
jp
or
loop
cmpl
ljmp
call
flds
insb
pop
mov
stc
mov
jmp
pop
push
mov
in
lods
inc
arpl
lock
mov
inc
mov
test
mov
loop
mov
add
xorb
imul
mov
push
enter
stos
stos
sub
leave
call
cld
adc
jbe
xchg
shlb
movsl
movsl
xor
fistps
sahf
pop
je
add
sbb
mov
clc
sbb
or
jp
outsl
pop
std
lcall
push
lods
pop
arpl
imul
dec
push
jg
pushl
push
insl
push
dec
jae
cltd
int
cmp
jo
and
mov
xchg
mov
lahf
les
mov
lahf
loop
out
cmp
daa
inc
mov
test
mov
mov
aam
jno
jge
test
dec
hlt
lods
sub
icebp
inc
scas
imul
sbb
xchg
cltd
pop
lret
pushf
jnp
lcall
mov
xor
sub
psllw
dec
sub
mov
mov
daa
in
loopne
cld
fbld
jae
jl
test
in
add
xor
jmp
cmpsb
pop
in
sub
jg
js
xchg
test
addr16
mov
pop
rcrb
mov
mov
mov
jl
adc
jmp
or
les
cmp
mov
stos
pop
adc
ss
enter
pop
cli
push
incl
aam
popa
mov
int3
ret
mov
sub
test
jg
cmp
push
icebp
adc
adc
mov
popa
mov
xchg
repnz
xor
push
sbb
cld
imul
push
mov
push
xorb
pop
adc
jg
repz
repnz
cmp
bound
pop
test
fisubrs
add
pop
jnp
pop
aam
jne
cmp
jp
scas
test
ret
lods
or
out
addl
rcl
scas
gs
mov
stos
loop,pn
sbb
pop
call
sarb
mov
jnp
call
or
add
repnz
jg
idiv
fistl
aam
adc
std
lea
cld
fisubrl
lea
mov
nop
xor
mov
sub
push
jmp
jo
inc
roll
rcll
push
xchg
mov
mov
cmp
push
cmp
rorb
call
lcall
adc
xchg
or
or
mov
push
xor
xchg
mov
sbbl
mov
pop
rorl
mov
scas
inc
rcl
sub
in
fsubp
daa
clc
das
jno
divl
jne
pop
jbe
or
out
sahf
insl
sti
ret
jno
lock
das
add
call
lock
cltd
test
enter
and
movsb
pushl
inc
xor
and
mull
insb
sbb
adc
add
ljmp
test
jle
and
pop
in
push
and
rolb
jmp
mov
lcall
pushf
and
inc
dec
mov
and
jle
out
push
add
xor
pop
test
out
pop
pop
xchg
mov
rcr
jecxz
or
xor
push
icebp
je
jecxz
xchg
ljmp
lods
mov
add
push
cmc
push
xchg
movsb
insb
dec
dec
mov
ja
fnstcw
sbb
int
out
pop
dec
dec
decl
sub
fisubrl
test
cwtl
pop
jmp
push
mov
faddl
dec
inc
out
bound
adc
or
sti
inc
lcall
lcall
add
dec
add
mov
cld
sti
mov
sbb
pushl
leave
mov
test
or
xlat
xor
jns
orl
cli
lcall
aad
gs
pop
repnz
fnsave
sti
jg
dec
test
mov
adcl
jo
inc
xor
cmp
das
jno
mov
in
dec
adc
lods
inc
je
push
mov
mov
xor
stos
mov
enter
out
cmp
ljmp
in
xchg
xor
popf
loop
jb
out
jno
jp
xor
shrl
dec
data16
cmp
jmp
inc
pop
mov
inc
adc
jae
inc
add
cmp
xor
outsl
push
leave
pop
ljmp
fisttpll
xchg
add
movsl
insl
pop
pop
xchg
mov
int3
push
ret
sbb
add
cmp
cmp
xorl
ret
mov
jl
fmuls
call
jg
jg
scas
cld
push
lods
psadbw
scas
cmp
mov
mov
outsl
cld
test
push
gs
rcll
mov
push
jl
pop
adc
cld
ljmp
cmp
enter
jge
cmp
daa
mov
movsb
cld
pop
push
inc
incl
fnstsw
icebp
jl
lret
mov
mov
ds
out
mov
mov
dec
dec
lock
mov
aad
in
icebp
mov
bound
lods
sub
mov
int3
hlt
shrl
or
clc
mov
lods
test
stc
push
jge
and
popa
cmp
decl
cwtl
jmp
out
jne
dec
cmc
and
outsb
push
xchg
pop
mov
imulb
lock
jge
andl
lods
pop
cli
test
inc
daa
cltd
out
inc
inc
push
cmp
mov
pop
test
popf
push
js
es
sbbl
fnstsw
inc
repnz
mov
push
xchg
and
xchg
fs
cltd
or
xchg
fs
fadds
pop
adc
or
mov
mov
andl
incl
dec
ljmp
je
ds
push
popf
push
mov
popf
inc
mov
xchg
cli
lcall
add
and
cmp
adc
sub
mov
pop
xor
xchg
adc
push
out
fstpt
insb
mov
add
andb
inc
pop
in
and
and
das
fldenv
scas
xor
sbb
ljmp
inc
jae
rcrl
xor
add
decl
xchg
inc
int
out
dec
xchg
sbb
jecxz
dec
loop
addr16
pop
clc
incl
sbb
xorl
push
xchg
pop
sbb
lcall
mov
sbb
outsb
mov
subb
pop
sub
xlat
mov
aas
sbb
mov
mov
and
pop
and
imul
leave
add
jp
ljmp
push
mov
push
adc
je
pop
flds
test
xchg
fldcw
push
test
pop
xchg
ja
or
and
and
lea
mov
out
in
ljmp
mov
outsl
cmpsb
ffree
in
mov
clc
es
cmpsb
cmpsb
outsb
aaa
leave
sbb
cmpsb
scas
test
pushl
loopne
cld
cli
lret
mov
rol
sub
pop
xlat
push
mov
pop
std
pop
jb
cmp
int
mov
pushf
in
xchg
push
mov
ret
and
insl
mov
fwait
pop
cmpsl
cli
cmp
out
ss
insl
scas
push
inc
push
xor
jp
inc
mov
sti
or
fimuls
mov
int3
jl
adc
push
fistps
mov
popf
xor
pop
inc
loopne
sub
mov
mov
sahf
push
push
out
lock
movsl
or
mov
push
jmp
insl
pop
cmpsl
cmpsb
lret
push
leave
mov
jae
clc
sub
inc
aad
xor
add
xor
adc
ljmp
inc
xor
std
push
mov
mov
mov
ret
fisubl
mov
out
lea
test
outsl
in
aas
iret
or
mov
xchg
mov
enter
cli
sbb
insl
jmp
sub
mov
dec
test
bound
hlt
xchg
jmp
es
cmpsl
out
jo
adc
rcrl
mov
stos
pop
mov
push
jbe
shll
or
pop
dec
iret
lahf
mov
fincstp
mov
mov
mov
jecxz
lds
ss
cmp
push
push
jge
ja
pop
fwait
out
std
dec
shlb
aaa
adc
mov
in
into
xor
cmp
aaa
decb
aaa
ss
into
inc
lret
xor
push
mov
pushl
lcall
stos
or
pushf
orl
mulb
cmp
sbb
push
xchg
cli
pop
cld
lcall
ljmp
lock
pop
lds
movsl
stos
aad
lods
mov
iret
xor
jg
insl
and
dec
lods
bound
xchg
push
cmp
shr
ljmp
sbb
xor
add
test
mov
cmpsb
pop
sbb
sub
sti
xor
jg
insl
mov
jo
jg
shlb
test
aas
xchg
or
ljmp
cmp
mov
rolb
push
pushf
movsl
ficoms
fiadds
pushl
inc
jl
pop
dec
sbb
cmp
movsl
xor
xchg
and
pop
mov
mov
call
mov
popf
push
loop
jmp
cmp
movsl
stos
push
imul
pop
icebp
xor
pop
and
jge
pop
daa
divb
mov
shll
pushl
jecxz
xor
stos
aam
sub
int
adc
jbe
loopne
pop
hlt
adc
pop
call
bound
xor
push
jl
dec
add
loopne
aas
mov
lcall
dec
je
ljmp
push
out
rclb
mov
in
pop
cli
arpl
fwait
outsl
std
jmp
std
sti
lea
fisttps
sbb
lret
js
std
mov
lahf
imul
sbb
pop
outsl
cld
lods
pop
andl
adc
xchg
in
cmp
fmuls
pop
mov
in
mov
and
popf
xor
jns
dec
ret
cmpb
rorb
add
sub
inc
shl
pusha
neg
fildll
push
push
cld
xlat
inc
pop
fildl
jmp
push
pop
es
sbb
jle
jle
cmp
fwait
sub
call
ja
out
mov
cmc
gs
xor
jecxz
mov
int
sti
dec
test
sbb
jns
call
inc
and
xor
sbb
sbb
add
lds
add
mov
jmp
test
add
push
fistps
repnz
mov
lcall
mov
mov
xchg
mov
iret
popa
stos
pop
push
mov
out
out
iret
movsl
mov
das
hlt
pop
mov
outsl
je
mov
sar
jecxz
rorb
scas
sahf
xchg
movsb
mov
ja
decl
pop
xchg
arpl
int
das
xchg
mov
ss
mov
clc
negb
fstpt
call
iret
and
inc
popf
mov
add
ret
cli
mov
mov
stos
mov
enter
mov
outsl
icebp
pop
clc
mov
inc
adc
enter
jnp
movsb
adcl
lods
cld
push
jnp
out
adc
sbb
hlt
mov
lods
sarb
push
pop
lds
ds
cmp
push
loop
ljmp
bound
mov
in
push
mov
mov
movsb
push
lea
inc
call
insb
xor
mov
lahf
movsb
sub
ds
mov
loop
lcall
js
adc
insl
test
les
adcl
or
fstp
maskmovq
testl
repnz
out
dec
scas
sub
mov
es
test
jp
lcall
lahf
jmp
add
into
sbb
ljmp
cld
decl
icebp
push
mov
cwtl
jl
test
aaa
jae
mov
xor
enter
jae
sbb
inc
incl
sbb
loope
aam
call
mov
jae
sub
add
call
push
clc
inc
push
add
lods
outsl
adc
jb
ror
addr16
test
mov
fistpl
fwait
dec
xchg
mov
jb
jg
cmp
pop
lods
jnp
out
jg
fsub
xlat
cltd
shll
mov
das
push
popf
repnz
insl
in
stc
pop
call
adc
inc
push
add
or
push
in
add
fstpt
shll
call
and
lods
or
inc
cmp
in
pop
cli
ljmp
cld
call
fistps
lds
aas
inc
dec
adc
shl
pop
les
sub
test
call
cld
hlt
sub
dec
lds
stos
sbb
arpl
nop
adc
sti
jl
mov
enter
call
push
mov
cmpsl
in
popf
insl
jg
lods
adc
lcall
pop
push
xor
idivl
pushl
ret
xor
test
sbb
jnp
cmp
cs
mov
test
decl
std
lret
push
test
lods
dec
aaa
mov
add
stc
and
pushl
les
push
nop
fdivr
lods
fwait
test
push
xchg
fwait
inc
cmpsb
bound
mov
xor
pop
mov
inc
loop
insb
cmc
incl
out
in
and
ficompl
ds
mov
nop
sbb
inc
lea
hlt
sbb
push
lea
fisttps
movsb
mov
dec
sub
pop
rorl
call
cmp
or
push
cmc
decl
sub
pop
adc
cmp
sarb
pop
aam
xchg
sbb
int3
mov
pop
out
shr
sbb
cli
push
jnp
mov
jmp
or
pop
sbb
into
fimuls
ljmp
or
xchg
mov
xchg
shlb
out
lcall
xchg
rclb
xchg
lcall
cmp
dec
dec
mov
sub
sbb
sub
jg
pushl
sub
in
stc
dec
push
mov
negl
push
nop
inc
jp
pop
cli
das
sar
leave
test
in
fdivr
aaa
push
mov
in
mov
push
mov
pop
clc
mov
scas
push
push
fs
outsl
sub
fnstsw
test
cltd
jnp,pn
or
lea
jle
xchg
adc
ja
test
shl
aad
daa
in
pop
sub
xchg
xchg
cmp
push
adc
int
pop
into
cltd
or
pop
call
and
fwait
test
inc
lods
mov
call
clc
incl
inc
clc
movsl
jns
addr16
lret
push
cmp
jo
mov
arpl
idiv
or
fcomi
lods
cmp
in
out
add
in
cmp
stc
and
fnstsw
pushl
adc
lock
or
idivb
enter
cld
aas
popf
mov
cmc
mov
mov
test
repz
mov
int
dec
in
sbbb
incl
jmp
sahf
int3
mov
std
clc
pushf
movsb
shll
xchg
lods
insb
scas
ret
loopne
mov
dec
imull
adc
decl
sub
sub
popa
fldcw
inc
ja
fistps
lods
in
lock
ja
bound
cli
call
or
pop
mov
and
rolb
xchg
mov
test
decl
in
adc
repz
rcrl
loope
mov
shrb
lea
pusha
push
mov
mov
xlat
dec
adc
xchg
lods
lea
jl
or
loop
add
stc
mov
cmpsl
hlt
incl
sbb
push
shl
push
jmp
leave
loope
arpl
dec
jg
das
inc
push
push
stos
in
add
rcll
cmp
mov
fbstp
aaa
decl
ljmp
mov
xor
movsb
push
hlt
lods
in
pop
dec
neg
mov
call
jb
and
sahf
adc
insb
and
sub
xor
pop
cmpsb
clc
ljmp
add
je
lods
and
or
cmp
adc
data16
pushl
xor
mov
push
mov
fisubrs
jnp
jb
jp
mov
sub
fmull
add
mov
rcrl
pop
mov
jg
call
sti
loop
ficoml
dec
cmp
inc
sbb
hlt
or
decb
pushl
mov
pop
xchg
jle
lret
inc
jecxz
outsb
fs
or
hlt
mov
mov
and
lret
dec
insl
in
ss
scas
xchg
mov
gs
sarb
pop
jo
xchg
ret
push
inc
int
mov
inc
cli
cmc
repnz
cmp
data16
xrelease
sub
add
adc
push
std
push
decl
pop
imul
test
das
enter
sahf
jbe
pop
cmc
push
add
lds
mov
inc
mov
in
outsb
and
sbb
popa
ljmp
inc
pushl
jg
sbb
imul
add
scas
cwtl
popa
adc
push
push
les
call
stos
aad
cmp
and
test
and
pop
scas
pop
lahf
mov
or
jmp
incl
cwtl
adc
jmp
cmc
das
call
sbb
sarl
or
js
clc
or
pop
fwait
xchg
mov
inc
lods
jmp
imul
ljmp
pmuludq
sbb
inc
es
cmp
add
mov
mov
cltd
popf
js
sar
incl
clc
hlt
cmpsl
fdivr
outsl
addr16
stc
call
cmp
es
xor
cmpl
push
xchg
std
xor
repnz
lods
adc
mov
inc
daa
loop
push
scas
stos
aam
cmpsl
mull
mov
decl
push
jb
loope
js
push
and
repz
inc
jnp
lock
jecxz
push
xor
ds
sbb
adc
daa
out
lods
das
push
pop
cmpl
lahf
dec
pop
sbb
scas
sti
sarb
sbb
xchg
sbbb
test
push
jecxz
cmp
rorb
test
insl
shll
rcl
incl
mov
imul
jp
sub
out
inc
and
ds
lahf
rorl
test
pushl
fldt
outsl
sar
call
fldl
test
push
lods
daa
pushl
and
ds
popa
pop
into
scas
lahf
out
sub
incl
pop
mov
nop
test
test
and
lods
jmp
hlt
in
mov
jecxz
pop
or
daa
cltd
jecxz
adc
sub
loop
int
test
setb
push
mov
ss
out
push
jmp
fs
ret
data16
out
sarl
sub
repz
aaa
cli
movsb
aas
mov
lcall
inc
loop
negb
dec
mov
jnp
ret
jo
clc
or
pop
adc
add
fwait
mov
or
or
jl
xlat
lahf
into
popa
aas
lret
push
lret
xor
dec
hlt
repnz
jp
mov
inc
jge
push
mov
jmp
inc
rolb
stos
aaa
gs
add
adc
gs
lret
xchg
jmp
test
ljmp
dec
mov
sbb
pop
push
push
pop
mov
and
and
jge
mov
cmp
mov
fsubs
test
pop
loopne
cmp
aam
fcomps
lcall
mov
xor
movsl
stos
loopne
out
mov
subl
and
fisubl
adc
pop
and
cmp
adc
add
sti
push
sbb
adc
dec
inc
or
xor
push
unpckhps
sar
push
inc
xchg
ret
nop
fdivl
pop
shll
sbb
hlt
das
std
mov
push
sbbb
inc
cmpsl
int3
adc
decl
inc
ret
xchg
xchg
or
mov
mov
in
loopne
push
popf
mov
mov
adc
leave
testb
outsl
push
inc
xchg
ljmp
mov
int
enter
enter
xor
sub
pop
test
lcall
dec
cld
stc
rolb
xchg
fsub
ljmp
repz
xchg
hlt
not
iret
mov
sub
incl
les
aaa
std
sub
hlt
sbb
pop
dec
jecxz
sub
or
out
jmp
movsl
fidivl
jl
push
sub
lcall
cmp
movsb
inc
aaa
lods
js
incl
adc
nop
adc
hlt
mov
adcl
in
ljmp
das
inc
call
fstps
call
mov
and
add
in
dec
jns
out
xor
popf
bound
push
lock
sub
xchg
mov
or
jns
movsl
fs
rorb
adc
aas
call
add
loopne
and
xor
jnp
fcompl
movsb
mov
repz
jno
ljmp
cmp
out
shll
mov
rolb
jg
call
nop
and
push
mov
and
mov
and
pop
cli
jmp
stos
out
mov
loope
sub
xchg
mov
add
mov
cmp
incl
aad
outsl
jl
xchg
or
jle
filds
divl
mov
fs
dec
loope
jnp
outsb
mov
incl
dec
xchg
dec
jae
stos
dec
add
int
xchg
and
mov
sbb
decl
mov
clc
inc
xchg
xchg
mov
cmp
inc
xchg
lock
lcall
xor
shlb
add
pop
jnp
push
xchg
fbstp
fisubs
xor
push
dec
xchg
pop
mov
ret
pop
add
sbb
jp
and
addr16
fs
jmp
lcall
mov
or
ljmp
sbb
cmp
rorb
icebp
mov
mov
mov
pop
pop
mov
xor
lods
xchg
add
iret
sbb
aas
pusha
jb
jmp
cmpsb
push
les
fldenv
jg
lcall
rclb
pop
xchg
xchg
imull
mov
daa
fdivp
mov
das
or
jp
imul
jb
pop
clc
incl
shufps
xor
dec
xorb
push
test
ljmp
mov
pop
mov
cmpb
adc
call
mov
push
cmp
xchg
nopl
jno
imul
lcall
mov
stos
mov
push
rcr
add
decb
clc
dec
pop
ljmp
outsl
and
movsb
les
pop
rclb
fnstsw
roll
mov
add
stc
mov
popf
mov
in
mov
sbb
jg
mov
pushf
mov
js
ja
or
xor
mov
clc
das
je
aaa
inc
loop
insb
jns
dec
pop
dec
mov
std
jmp
es
fists
frstor
inc
xchg
ds
imul
das
lock
mov
xchg
cmp
ljmp
test
je
dec
popf
xchg
aad
std
ss
icebp
jb
sub
nop
out
dec
nop
xchg
jecxz
outsl
pop
or
out
inc
push
pusha
pop
fwait
int
daa
or
mov
call
jg
and
mov
jmp
adc
mov
loope
out
cmp
push
mov
xlat
hlt
dec
jp
loop
std
les
icebp
xor
pop
sti
or
push
filds
mov
scas
push
ss
jg
shlb
aam
stc
dec
sbb
jmp
inc
pop
cld
pop
shl
aaa
cmc
push
lcall
loope
pop
gs
in
cmp
mov
sbb
sbb
lods
aas
loop
xor
str
mov
pop
sub
das
stos
int
hlt
add
jns
pop
dec
int
pop
insl
lcall
cld
sti
lds
pop
and
jp
or
loope
repz
cmp
popf
clc
or
ljmp
icebp
cmpsb
call
jle
cmp
sub
pop
add
pop
dec
xor
or
xor
outsl
ljmp
call
mov
in
int3
add
out
mov
std
rclb
mov
aad
bound
push
xchg
mov
aad
leave
mov
xchg
dec
incl
sub
jle
inc
in
in
sti
lea
popa
xor
popf
loope
imul
cmp
cmp
xchg
jge
xchg
aam
stc
sub
gs
in
dec
es
ljmp
jne
cmpsb
mov
adcb
lret
mov
scas
sbb
push
je
fistl
push
negb
or
dec
sub
ret
pop
or
mov
outsl
jmp
push
mov
xchg
or
mov
arpl
outsl
or
rcll
push
and
call
int
dec
dec
in
cmp
pop
inc
sub
sub
mov
sub
inc
sbb
sub
adc
inc
ficomps
push
xor
cld
jg
call
mov
data16
sarl
add
add
or
fidivs
lds
dec
pop
aam
mov
pop
dec
cmp
pushf
inc
popl
das
shll
mov
cmp
into
insb
arpl
movsl
add
rcll
sbb
mov
pop
dec
push
mov
mov
icebp
inc
roll
out
imul
nop
cmpsl
add
mov
sbb
fistpll
sub
adc
and
jp
xor
das
lock
xor
stos
jae
lret
imul
ja
incl
in
mov
test
rclb
add
pop
daa
sbb
scas
faddl
adc
ffreep
inc
pop
mov
aaa
in
int3
mov
inc
fstpt
aas
loope
roll
cmc
mov
pusha
cmp
mov
mov
les
dec
loope
notl
out
mov
or
sbb
call
jg
rcrl
stos
cmp
lret
inc
dec
push
mov
xorl
lcall
rolb
push
faddl
inc
outsb
push
ja
mov
aaa
repnz
pushl
add
mov
leave
hlt
add
push
repnz
push
out
jg
int3
mov
movsl
mov
push
mov
adc
sar
lcall
inc
mov
ljmp
lahf
sub
cmpsb
mov
jmp
push
sub
test
inc
jmp
daa
adc
push
outsb
ds
scas
push
mov
fldenv
push
dec
push
incl
lcall
int3
push
push
xor
insb
pop
sahf
jmp
xchg
sbb
ret
jb
cmpsl
push
bound
add
sbb
int
fnstsw
nop
shrb
adc
popf
scas
lds
fimull
std
fildll
cmp
notl
int3
cli
fidivs
je
sub
push
mov
in
mov
sub
pop
lcall
test
sub
ja
and
subl
sub
hlt
jno
and
inc
xor
jno
dec
mov
in
adc
xlat
xor
cwtl
stc
sar
aaa
icebp
clc
cmpb
and
mov
js
pop
or
mov
mov
push
adc
xchg
loop
andl
fcmovu
adc
stos
lock
lea
mov
inc
adc
std
push
or
mov
repz
decl
inc
inc
sarb
push
leave
pop
lea
jb
insb
sub
mov
int3
sahf
mov
adc
pop
xchg
pushf
push
or
cld
cmpsl
fnstenv
test
hlt
call
cmpsb
jl
xor
xchg
call
das
mov
cmc
inc
subb
dec
dec
add
jge
dec
pop
pushf
cmp
sub
pop
pop
pop
clc
jg
jno
jns
dec
idivb
or
in
loopne
pushf
std
in
clc
and
mull
add
sbb
push
clc
jg
das
mov
mov
adc
loop
mov
fisubrl
jbe
jns
fisubs
xor
call
add
imul
filds
jmp
push
xor
out
mov
rcrl
mov
jae
ljmp
adc
inc
xchg
mov
pushl
inc
sbb
mov
je
adc
ljmp
aad
in
pop
test
mov
ds
dec
in
xorl
test
outsl
dec
add
popa
push
test
pushl
mov
enter
popf
adc
pop
add
xlat
mov
push
sub
jne
jmp
ljmp
icebp
int3
pop
cmp
adc
fcmovnb
sbb
jns
inc
test
mov
mov
mov
pop
push
stos
imul
cli
jg
aaa
cmp
inc
jnp
mov
je
cmp
xchg
and
mov
insl
das
into
add
push
push
pushl
cld
popa
scas
cmpsb
inc
cmpsb
jp
ljmp
mov
in
mov
out
imul
dec
push
scas
inc
je
push
cmp
add
inc
xchg
out
das
hlt
jg
sbb
lds
int3
in
push
dec
testb
je
decl
incl
mov
testb
sub
mov
jbe
mov
fs
jg
mov
stc
int3
push
pop
faddl
add
test
xor
mov
aam
jmp
push
push
cld
scas
subb
icebp
cmp
mov
xchg
lret
sahf
mov
jmp
jns
je
cwtl
xchg
imul
rolb
pop
pop
out
sbb
inc
mov
jne
jg
incl
ja
in
xchg
add
dec
aad
stc
xchg
mov
mov
cld
dec
dec
lahf
pop
xor
aaa
and
pushl
je
mov
sub
cli
ficoml
iret
lea
jg
xchg
inc
mov
pop
cmp
xchg
inc
dec
dec
pushf
lods
jl
sbb
in
pushl
mov
jno
fs
fnstenv
mov
test
scas
movsb
pop
xchg
inc
fisttpl
int
inc
dec
in
lahf
push
mov
and
or
adc
incl
sbb
xor
ud0
mov
sbb
inc
sti
pop
jge
mov
adc
mov
and
jle
xchg
lcall
adc
xor
lcall
lods
call
stos
jle
cltd
sbb
xchg
xchg
xor
sub
xor
test
adc
call
fsubl
cmpsl
jns
sub
or
pop
cmpsl
aas
daa
in
xor
mov
and
jbe
or
das
inc
jo
cmp
in
insb
lods
scas
jg
decl
push
and
and
stos
or
sbb
push
dec
xchg
call
add
xchg
pop
lea
leave
outsb
xchg
mov
inc
outsb
testb
rorl
xor
leave
push
bound
jne
sbb
pop
nop
jp
movsl
test
and
jmp
sbb
mov
lods
lcall
adcl
push
sbb
cld
scas
mov
in
pushl
cmp
popa
iret
push
and
scas
or
jb
popf
mov
loope,pn
sub
mov
add
mov
aam
inc
insl
jno
cld
ret
cli
push
xchg
pop
loope
sub
decl
and
cmpsl
fistl
mov
into
cmpsb
mov
imul
push
adc
ljmp
inc
and
iret
imul
iret
imul
pusha
add
and
xlat
push
mov
decl
call
shlb
add
sbb
arpl
pop
decl
mov
daa
add
jge
dec
and
in
sub
call
into
andl
subl
clc
mov
loopne
stos
shrb
push
pop
xor
mov
xchg
repz
ljmp
dec
add
push
test
rep
jg
mov
mov
mov
or
fsubs
stos
fstl
outsl
xor
sbb
or
mov
push
repz
push
ljmp
cmc
jmp
sub
jmp
add
xchg
adc
rcr
sbb
jecxz
gs
jmp
jnp
xchg
lods
pop
mov
add
aaa
sbb
push
sbb
push
pop
and
pushl
mov
push
jg
stos
xor
xchg
push
mov
stos
xor
mov
jne
dec
outsb
mov
aad
cmpsl
fs
leave
das
add
in
testl
jne
or
sub
cld
add
dec
incl
xchg
xchg
fcmove
mov
xor
lods
es
xor
decl
aaa
int3
mov
in
jbe
sbb
clc
inc
pop
mov
aad
and
or
pop
mov
mov
lcall
cmc
pop
inc
adc
repnz
es
cld
add
xchg
push
xor
enter
fisttps
or
cmpsl
push
or
inc
jnp
mov
inc
inc
jl
ljmp
sub
test
insl
push
or
pushl
mov
daa
jbe
mov
hlt
fwait
movsb
je
cld
daa
cmpsl
cmp
jmp
lret
sub
lea
lods
jno
pop
or
es
sub
or
aad
xchg
mov
icebp
jmp
nop
int3
cmp
and
mov
fdivp
aaa
jp
or
adc
fisubrl
addr16
jne
fstpt
xchg
popf
dec
int3
loopne
dec
dec
jmp
stc
int3
mov
incl
iret
out
xchg
push
lea
mov
fwait
sub
les
mov
ret
ljmp
jmp
ret
arpl
adc
jmp
push
push
aam
mov
or
outsl
icebp
decl
cltd
das
not
xor
push
ficoms
mov
fbld
push
xchg
fidivl
test
xchg
dec
jg
add
jle
adc
sub
aad
xor
outsb
mov
xchg
fsub
incl
aad
leave
mov
push
jo
fsubl
xchg
lds
and
incl
jne
call
loope
xchg
mov
lahf
pushf
push
fcmovne
jl
sarl
decl
pop
outsb
inc
repz
jae
push
je
lret
out
add
or
hlt
and
add
jno
inc
loope
jg
lret
adc
loopne
adc
enter
pop
out
cltd
outsl
cmpsl
xchg
jle
jg
jg
cmpsl
push
mov
cwtl
les
jbe
ljmp
jne
or
sub
scas
sub
out
mov
popa
inc
sub
decl
ja
ljmp
insb
jnp
pop
stos
sarl
lcall
repz
neg
adc
inc
adc
ljmp
into
cli
sti
or
mov
or
add
filds
rorb
in
and
xor
sahf
ljmp
mov
cmp
xchg
sbb
cld
cmp
dec
lret
pop
arpl
loope
cmp
aad
jo
int
cmpsl
iret
add
and
adc
or
xchg
ficomps
outsl
fadd
jl
mov
adc
jmp
mov
outsl
add
lret
xchg
fildll
movsl
pushl
repnz
mov
xor
in
movsl
divl
mov
lcall
jecxz
stos
or
in
mov
aad
mov
js
mov
inc
inc
pop
sbb
stc
pop
inc
insl
mov
aas
add
outsb
and
cmp
pop
push
cltd
subl
call
stos
push
orl
movsl
jbe
sbb
pop
sub
push
mov
data16
adcl
icebp
mov
daa
inc
dec
fwait
dec
sub
incl
push
jp
xor
pushaw
and
cli
loope
xor
inc
das
mov
xchg
insl
shrl
icebp
sbb
dec
jno
jb
mov
std
add
or
push
dec
call
mov
jno
pop
mov
mov
mov
cmc
xor
xlat
lock
mov
out
sbb
sbb
loopne
inc
mov
jg
pusha
mov
mov
test
xor
cmpb
mov
cli
pop
pop
ds
nop
sub
andb
out
jle
mov
or
or
call
adc
test
lret
jl
scas
lret
add
sub
cltd
lods
jp
jg
adc
sbb
jg
mov
inc
jb
lret
mov
pop
ljmp
sbb
xor
jbe
scas
mov
add
sub
in
sbb
icebp
jg
test
mov
push
leave
out
jmp
mov
call
mov
sub
sbb
test
mov
jp
xchg
cmpb
pop
std
scas
nop
aaa
gs
std
inc
out
out
lahf
pop
jbe
ljmp
das
hlt
adc
cmpb
push
and
lret
pop
jp
stos
sbb
lock
adc
mov
push
in
pop
in
jmp
pop
jnp
push
dec
mov
pop
pop
icebp
pop
lea
adc
xchg
xchg
jp
sub
loopne
loope
sub
ljmp
decl
stos
test
test
mov
mov
andl
xchg
jns
shrl
sti
insl
add
iret
and
sub
decl
lcall
push
in
xchg
push
in
mov
jnp
mov
repnz
cli
pop
decl
or
int3
mov
test
fucomp
add
repnz
pop
inc
ret
jnp
sub
sub
nop
mov
ja
mov
fsts
or
mov
cwtl
push
pop
sub
pop
dec
pop
lods
inc
addr16
sbb
bound
pop
xor
movsb
je
insl
pop
dec
mov
hlt
xchg
roll
std
cmp
add
es
xchg
insl
xchg
iret
ret
mov
or
out
adc
xlat
and
outsl
inc
mov
lcall
sbb
xchg
pop
push
cli
xor
push
ss
imul
or
sbb
notl
decl
dec
push
lcall
fcmovu
js
incl
sub
inc
pop
lahf
inc
cmp
cmp
xchg
push
jle
pop
lock
pushf
fiadds
pop
mov
or
lcall
mov
xor
pop
push
ljmp
test
push
xchg
add
das
pop
leave
fwait
cwtl
in
jmp
rorl
cmpsb
les
adc
jmp
push
sbb
cmpsb
mov
xor
int3
data16
shr
jmp
sbb
lret
or
xchg
pop
mov
mov
or
divb
push
cli
add
sbb
loopne
je
xor
mov
cli
inc
mov
sbb
pusha
or
gs
xchg
int
sbb
lcall
rorb
cwtl
negl
arpl
xor
inc
movsb
test
addr16
xchg
fs
mov
pop
xor
adc
fisttps
or
int
mov
jl
arpl
mov
or
repz
sub
jns
push
sub
xor
sub
pushl
dec
fists
call
incb
pop
cmp
cli
mov
icebp
decl
in
jo
lods
xor
lods
sub
into
hlt
mov
mov
incl
ja
sbb
cmpsb
daa
sbb
and
ds
xchg
mov
jmp
xor
xor
sub
inc
mov
jnp
aaa
xchg
sahf
push
mov
pushl
inc
dec
xor
shrb
dec
sub
mov
jecxz
and
decl
shll
sub
out
sub
inc
out
cmpsl
outsb
loop
xor
cmpl
mov
in
js
aad
test
and
pop
popa
pop
cmp
decl
or
inc
mov
cmp
fucomp
bnd
add
repnz
xchg
jg
das
aaa
jne
jp
hlt
inc
arpl
lock
push
or
jg
sub
ljmp
jne
int3
jno
and
fldt
repnz
mov
testl
xchg
ds
js
sub
fidivrs
and
push
jne
fcomip
push
jne
aaa
je
xlat
xchg
nop
push
cmp
movsb
cltd
testl
and
test
add
jg
mov
mov
push
mov
call
dec
in
cmp
std
pop
mov
sub
and
fcomps
insl
push
sbb
lods
pop
sub
jge
sti
mov
and
js
mov
jmp
aaa
pop
mov
fcmovne
lods
fucomip
stos
or
xor
cmp
fwait
inc
adc
sub
xor
stc
repnz
ss
jmp
in
in
pop
mov
sub
adc
cmp
mov
lods
outsl
add
call
notb
insb
icebp
ljmp
rcll
pop
inc
sbb
push
dec
daa
lods
imul
outsl
adc
bound
pushf
pop
add
fs
gs
decl
jmp
mov
push
mov
lock
repz
out
mov
mov
pushl
roll
push
pusha
movl
mov
xchg
xchg
inc
int
lcall
iret
ret
dec
and
movsb
push
data16
pop
or
test
lret
or
ss
lcall
data16
cwtl
add
sbb
std
or
or
out
inc
and
outsl
cmc
ljmp
inc
inc
sbb
mov
in
jbe
and
out
push
cmpsl
into
inc
jns
imul
popf
fs
dec
decb
cs
mov
push
jae
xor
and
fwait
decl
push
shlb
jbe
and
xchg
mov
add
mov
js
fists
inc
inc
out
mov
cld
loope
add
pop
int3
inc
out
ret
sbb
lret
shll
fistps
jmp
insb
mov
sbb
inc
dec
pop
jne
mov
pop
shr
fcomps
xor
clc
jmp
test
xchg
cmp
ret
pop
les
lcall
cld
std
mov
popf
cli
dec
out
movsb
add
xchg
xchg
addr16
mov
sub
pushl
ljmp
loop
adc
mov
mov
call
dec
cwtl
mov
push
add
dec
xchg
out
aam
lret
out
mov
jp
inc
fstps
lock
mov
js
pop
insl
mov
test
dec
mov
inc
test
jg
lcall
inc
popa
and
jge
cltd
push
xchg
jge
pop
frstor
mov
jmp
ret
cmpsb
adc
lret
sahf
jge
cmp
popa
jnp,pt
pop
lcall
mov
test
jne
pushf
in
xchg
imul
fbld
movsb
orl
jg
das
icebp
mov
int3
shlb
lret
lret
pop
aaa
pop
xor
pushl
lds
ds
negl
inc
xchg
cwtl
stc
sub
ret
loop
mov
ret
and
call
cmp
sarl
ljmp
jle
out
jns
or
popf
sub
sbb
cmp
mov
and
mov
dec
pushl
cmp
loop
lahf
sahf
test
inc
mov
jl
dec
xchg
cli
call
lret
push
pop
imul
ja
and
dec
xor
xchg
incl
scas
push
cld
outsb
lret
nop
mov
jge
xchg
inc
jl
push
and
cmc
adc
ljmp
out
push
xor
divl
nop
hlt
pop
aam
sbb
inc
jg
vunpcklpd
inc
scas
loopne
outsl
lock
or
fistps
dec
test
push
fsubrl
jmp
adc
stc
xchg
int
push
dec
sub
loope
pop
xchg
repz
loop
aam
ljmp
pop
scas
dec
sub
jbe
xchg
or
popf
inc
add
or
popa
outsl
adc
ljmp
repz
cltd
or
rorb
jmp
xor
mov
icebp
pushl
outsl
pop
mov
jmp
mov
out
sbb
jbe
pop
movsb
lcall
rorb
mov
or
inc
daa
lea
mov
mov
cmp
cld
inc
paddb
popa
lret
pop
ljmp
push
xor
sbb
andb
sub
stos
lret
sub
fistps
repz
lods
xor
in
mov
jle
leave
inc
sbb
jns
xor
je
ja
dec
std
inc
xchg
int
mov
xor
or
cmp
sbb
mov
jl
jno
int3
xchg
test
mov
jnp
bound
or
loop
movsl
outsb
lock
jl
cld
pop
incb
and
mov
xlat
cmpsb
insb
aad
dec
or
notb
decl
push
test
pop
pushf
pop
xorl
daa
fadd
mov
nop
jns
or
add
mov
cs
stos
enter
stos
mov
fwait
imull
cli
call
cld
jo
push
negl
push
jb
out
aas
dec
mov
insl
jmp
aad
pop
mov
lods
inc
cmp
out
jle
cmpl
ljmp
sub
cmp
daa
loope
lahf
or
xor
jo
cld
jg
jge
push
icebp
sbb
jnp
xchg
mov
in
dec
jecxz
and
decl
inc
leave
xor
push
sbb
adc
and
dec
cld
ljmp
out
insl
dec
xor
mov
test
idiv
mov
sbb
ret
pop
test
ret
push
sahf
inc
sub
hlt
sub
xor
lret
dec
pop
push
arpl
cmpl
mov
out
sarb
decl
jp
lcall
xchg
mov
shlb
and
inc
lcallw
mov
mov
loope
inc
out
rcrb
inc
lcall
jle
dec
loopne
xorl
cmpsb
mov
add
add
jo
enter
mov
mov
mov
dec
mov
jg
or
mov
and
jmp
imul
push
call
test
pushf
push
or
enter
sbb
mulb
xor
into
popf
and
repnz
cmc
cmp
fdivl
mov
rorb
popf
decl
push
xor
mov
mov
scas
cli
mov
call
data16
lret
idiv
mov
lock
sbb
add
xlat
sub
faddl
test
adc
xbegin
inc
sbb
or
jae
add
outsl
sub
cmp
cmp
push
es
mov
pushl
cmp
test
jle
pop
pusha
mov
mov
fs
hlt
pushl
ficoms
and
imul
into
repz
sub
push
pop
in
jne
sub
sbbb
jmp
inc
shlb
mov
pop
rcl
inc
push
cmc
fldcw
lcall
icebp
hlt
dec
mov
pop
cwtd
dec
jae
pop
cld
mov
es
std
into
mov
dec
mov
jae
inc
or
xchg
sub
push
or
mov
xor
in
mov
inc
pop
xchg
inc
call
int3
out
bound
int
mov
adc
push
adc
fbld
icebp
mov
pop
test
jg
mov
or
mov
shll
jg
adcb
adc
popa
ficomps
sbb
jl
add
rcr
loop
paddq
imull
cltd
mov
fwait
push
or
add
gs
xchg
mulb
leave
pop
or
cs
movsb
adc
andl
jg
popf
rcrb
incl
mov
fisttps
sti
outsl
cmc
push
or
outsl
push
mov
mov
push
mov
jnp
rcll
daa
int3
js
in
inc
sar
out
mov
mov
push
pop
sbb
mov
ljmp
ss
pop
mov
lcall
lds
test
cli
pop
push
test
decb
rol
aam
outsl
or
addr16
lds
call
push
add
test
insb
imul
mov
sbb
mov
stc
lock
je
mov
pop
or
lret
lock
outsl
mov
decl
fldenv
orb
mov
or
xchg
fdiv
insb
cmpsb
jl
cmp
cld
or
cwtl
xchg
mov
shrb
adc
jg
or
xor
aaa
int3
lea
in
cmp
int
mov
dec
jbe
in
or
loop
in
push
mov
mov
sarl
jnp
sub
testb
lahf
sbb
mov
lds
ljmp
lock
jg
pop
out
in
setl
ja
ljmp
sbb
pandn
fdivrp
xchg
and
out
test
iret
mov
cmc
clc
aam
jnp
adc
arpl
mov
pushl
dec
pop
push
daa
mov
in
dec
movsb
or
pop
js
iret
inc
inc
mov
pop
cld
incl
mov
es
dec
cmp
push
aas
cwtl
jp
inc
ja
lcall
pop
lea
xchg
ds
mov
push
push
push
mov
mov
sbb
incl
test
mov
cli
add
es
scas
jmp
stos
in
adc
lahf
mov
jp
movsl
orb
cld
lret
movsl
mov
adc
jmp
sub
call
xor
movb
mov
push
fs
xor
push
jmp
and
incl
int3
pop
add
add
fisttpll
jb
call
ds
decl
cmpsl
aad
jnp
pop
icebp
xor
mov
jae
pop
stos
mov
out
push
push
pop
in
push
xchg
mov
pop
sub
pop
inc
mov
cmp
js
fnstcw
inc
lods
sbb
ret
mov
decl
sti
xchg
in
or
cmpsb
and
mov
call
mov
std
push
fucomip
mov
xchg
idivb
sub
idiv
push
call
sub
cwtl
call
adcl
bound
call
pushl
hlt
pop
loope
je
sahf
fcompl
adc
mov
mov
rcrb
xchg
outsb
adc
push
movsl
scas
mov
loopne
jb
divb
sar
inc
js
call
clc
xchg
cwtl
lock
fldcw
jae
jae
mov
push
dec
inc
jg
pop
js
out
mov
jo
jg
lahf
pusha
cwtl
fucomi
mov
stos
mov
push
sarl
jbe
xor
jg
add
mov
sub
mov
sbb
aad
jmp
lahf
xor
call
jo
pop
out
pop
sub
xor
pop
test
in
mov
sti
rcl
jnp
dec
pop
ss
cmp
fistps
push
xchg
loopne
cmc
add
jo
fcoms
rcll
call
stc
add
mov
or
push
pop
pop
mov
xchg
js
dec
pop
cwtl
jnp
cmp
lret
xorl
pop
addr16
mov
mov
clc
les
cmp
ljmp
mov
and
lea
insb
and
pop
subl
stos
outsl
outsl
in
inc
pop
mov
insl
adc
sbb
pop
cmp
jmp
ljmp
mov
mov
daa
pop
pop
cmp
mov
inc
inc
loopne
jg
mov
shrb
mov
push
cmp
lcall
push
inc
filds
dec
jnp
call
es
ljmp
out
push
push
ds
pop
cld
jp
add
out
sub
into
out
mov
lcall
xor
and
jne
ret
mov
repnz
mov
lcall
enter
in
lcall
and
cmp
decl
adc
and
xchg
pop
mov
movsb
int3
jne
lock
jp
pop
andl
rcr
cltd
enter
and
fistpll
inc
mov
jno
enter
fsts
add
xchg
out
rorl
clc
fs
in
adc
mov
in
ljmp
les
pop
jmp
sub
sub
lcall
std
xor
jne
loope
dec
cmpsl
out
jg
clc
mov
pop
incb
pusha
in
loop
stc
cltd
cmp
cmc
in
scas
in
or
jae
test
in
dec
daa
push
insl
sti
addl
cmp
inc
outsl
xor
mov
in
mov
movsl
xchg
loop
and
bound
push
mov
js
push
insb
in
pop
mov
incl
orb
mov
mov
pop
sti
lcall
fimuls
lods
inc
mov
lods
cmpsl
sub
sbb
jae
and
xchg
jg
jl
dec
sbb
in
add
das
xor
in
std
stos
or
leave
mov
jg
and
lret
inc
xchg
rclb
incl
cmpsl
mov
push
mov
lcall
cltd
mov
incl
mov
jne,pn
xor
lcall
call
add
add
xor
fld
jnp
outsl
idivb
fnstcw
call
in
pop
mov
xchg
ret
push
in
sbb
idivb
fstpl
test
dec
pop
clc
pushl
jle
cvtps2pd
mov
dec
push
xor
sub
dec
sub
jecxz
lret
popa
je
imull
push
cltd
ljmp
lcall
clc
sar
inc
movsb
xor
inc
push
inc
in
shrl
sbb
movsl
mov
push
in
jo
je
xchg
and
mov
ljmp
loop
push
xor
pop
mov
push
cmp
shl
ljmp
aas
pop
cmpl
hlt
push
movsb
add
xor
jne
lods
mov
shlb
mov
outsl
push
ljmp
sbb
daa
sar
ljmp
sub
lock
pop
cmp
adc
incl
fs
mov
xlat
movsl
imul
out
lock
jge
mov
fwait
ljmp
insl
das
popa
testl
and
call
ds
es
pushl
dec
fsubl
pop
rol
or
pop
or
movsb
negb
ret
jecxz
jnp
mov
mov
or
xchg
mov
mov
loop
dec
sbb
push
shll
call
lds
sahf
adc
mov
adc
lcall
clc
inc
sbb
pop
stos
fisttps
je
lods
testl
push
sub
add
xor
dec
mov
cmpsb
add
xor
dec
mov
sti
popf
sti
mov
out
pop
dec
inc
cmp
leave
fldenv
sub
cmc
mov
subb
mov
inc
call
xor
mov
imul
jns
sbb
fmull
mov
jne
fsubrp
cmc
fneni(8087
mov
jmp
call
push
jecxz
inc
mov
test
ret
sbb
cmp
cs
add
int3
pop
sub
push
mov
clc
mov
lea
pop
clc
adc
push
test
inc
and
rcll
call
clc
mov
leave
stc
inc
dec
or
int
les
pushf
sbb
cld
decl
cld
inc
jne
jne
negb
mov
inc
push
fnstenv
sbb
cmp
js
les
mov
pushf
jae
push
push
push
sti
sbb
or
ljmp
jns
pop
cmp
shr
lret
xchg
imul
jg
mov
jle
inc
stc
outsb
int3
mov
icebp
push
clc
xchg
outsl
lcall
sub
jg
jecxz
cmpsb
andl
pushf
shr
mov
std
lcall
dec
mov
sub
mov
xchg
xor
xchg
cli
inc
out
xchg
jecxz
pop
cs
les
call
or
lea
dec
nop
fildll
mov
push
mov
sbb
test
mov
lahf
pop
sti
xchg
add
pushl
mov
xchg
sbb
cmp
repz
movsb
cmp
push
pop
xor
push
inc
ljmp
pop
or
enter
fstl
pusha
sub
int
xchg
scas
and
jne
pop
lock
ret
int
and
lds
outsb
ljmp
lcall
pop
nop
or
mov
xchg
inc
roll
mov
test
es
adc
ret
or
xor
xor
push
sub
sbb
push
jmp
mov
ret
lds
push
hlt
les
dec
mov
in
push
out
push
mov
call
push
mov
ds
jp
aad
dec
push
mov
leave
adc
ss
mov
test
loop
in
decl
cmc
mov
mov
cwtl
test
push
int
pop
test
lods
sbb
pop
idiv
decl
outsb
pop
and
xor
out
inc
pushf
add
and
mov
sbb
adcb
imul
rcrl
pop
rolb
dec
ljmp
add
cmp
pushl
or
call
stos
jg
xchg
jmp
call
sub
xor
outsl
nop
mov
pop
push
iret
lods
or
out
pusha
cli
or
add
js
daa
out
out
xor
jne
push
sbb
sti
adc
cmpsb
decl
ja
imull
aad
push
cmp
cmp
add
sbb
jg
pushf
mov
or
inc
pop
adc
inc
jne
pop
push
cltd
mov
ret
lock
out
int3
sti
icebp
xchg
mov
imul
cmp
cmp
icebp
inc
mov
js
decb
jle
mov
lcall
aam
in
dec
xchg
jmp
out
and
fmul
push
jg
orl
or
daa
lret
daa
adc
mov
loop
cmpsb
iret
jmp
out
xor
cli
mov
inc
xchg
jl
pop
sub
jp
fsubrl
sti
sub
les
add
sbb
stos
mov
rorb
rolb
or
adc
daa
mov
incl
test
xchg
dec
push
aas
lock
call
ja
push
mov
shlb
sub
imul
jmp
lret
push
adc
and
xor
add
or
pushl
ss
jbe
inc
or
xchg
scas
or
stos
and
ljmp
into
xlat
mov
xchg
call
xor
pop
or
push
mov
mov
lahf
push
sti
inc
in
cmp
add
incl
decl
aas
inc
or
sbb
aam
or
enter
fmull
stos
inc
adc
fbstp
xchg
popa
inc
hlt
and
in
pop
fs
inc
call
push
iret
mov
fiaddl
push
sub
fmull
sbb
pop
mov
decl
fisttpll
mull
inc
lods
pop
orl
test
je
int3
ret
cmc
jbe
cmp
mov
add
cld
sbb
cmp
lcall
out
or
ljmp
cmp
in
popf
push
test
cli
xchg
sbb
mov
lret
sub
andb
push
call
and
pop
add
int3
jge
hlt
fbld
lcall
decb
bound
and
jae
inc
outsb
movsl
mov
mov
popa
mov
pop
xchg
call
xchg
jle
lcall
push
test
psllw
shrb
jbe
iret
in
push
and
push
jnp
jmp
mov
mov
shlb
mov
add
nop
dec
jmp
out
lds
xor
js
sar
inc
call
or
or
jae
adc
jnp
sub
push
xchg
std
out
cld
into
stos
aam
call
into
subl
loopne
gs
roll
jge
scas
stc
ret
notb
lcall
mov
lods
neg
lods
decl
push
flds
shrl
icebp
and
dec
loopne
addb
call
stc
xchg
or
idivl
mov
pushf
or
call
adc
mov
cmp
test
add
lcall
icebp
lods
mov
test
cld
test
jmp
sub
mov
add
stos
mov
loop
push
std
outsl
jmp
xor
stos
or
jl
cmp
imul
mov
push
jge
sub
shll
cli
out
daa
pop
sub
ret
pop
dec
ret
in
les
call
inc
mov
cwtl
dec
fnstsw
icebp
lcall
add
mov
dec
test
dec
mov
test
mov
add
or
inc
xor
jg
int
fists
pop
movl
sbb
pop
xchg
jge
lcall
imul
push
out
cmp
fwait
fs
imul
inc
jbe
sarl
pop
cmpsl
data16
addr16
mov
loope
ljmp
nop
cli
and
sbb
dec
mov
fildl
rolb
scas
xchg
add
repz
sahf
outsb
scas
mov
fwait
cmpsb
repz
adc
xchg
outsb
loop
insb
pop
test
sbb
xchg
jg
jnp
call
jge
lahf
loopne
xchg
cltd
outsb
into
push
jl
std
add
js
pop
call
jae
xor
stc
mov
mov
dec
data16
jge
mov
jmp
aad
inc
pop
rcrl
lcallw
lds
mov
aaa
daa
incl
sbb
cltd
mov
ljmp
incl
cmp
pushw
rorl
pop
cmp
jle
inc
dec
ficoml
clc
pop
pop
sub
sbb
lret
dec
stos
xchg
in
js
enter
fdivrs
cwtl
out
mov
xor
stos
sarl
inc
mov
mov
sub
xor
cmp
fildl
in
inc
fsub
xlat
push
cmp
mov
lret
sub
sbb
jl
lds
stos
jecxz
loop
test
mov
rclb
dec
frstor
lcall
jnp
dec
out
mov
jno
jmp
loope
out
sub
jg
mov
ret
mov
in
jbe
cmpsl
fisubl
iret
fnsave
lcall
scas
aas
mov
mov
insb
cmp
mov
push
gs
inc
sar
ror
push
ds
pop
add
cltd
mov
lea
ljmp
and
push
xchg
test
imulb
les
inc
dec
jg
pop
inc
orl
push
loopne
pop
push
sbb
out
pushl
jg
jne
arpl
cmpsl
sbb
push
outsl
hlt
push
fwait
iret
aas
mov
imul
dec
enter
incl
fsubrs
xchg
add
jle
in
dec
inc
js
push
insb
fwait
scas
cld
jb
jnp
push
enter
sbb
call
dec
subl
inc
fldenv
shrl
fwait
dec
aas
jae
roll
fildll
icebp
pushl
sub
cmp
out
cld
in
mull
rclb
testl
mov
lahf
outsl
and
mov
mov
test
xor
inc
scas
mov
sar
adc
jbe
dec
sub
xorl
pop
lret
push
pop
lret
cmc
fidivrl
mov
rcll
mov
loope
cmp
fwait
scas
jg
inc
mov
stos
inc
lcall
pop
fisttpll
daa
jmp
add
js
pop
pop
adc
jmp
decl
pop
pmuludq
cmp
ja
ror
mov
pop
jne
sbb
xchg
xchg
fidivrs
jg
sub
lret
movsb
ds
addr16
mov
cmp
sbb
cmp
cmp
push
ljmp
dec
and
mov
xor
call
sbb
lods
cld
xor
sar
add
xchg
add
adc
mov
or
mov
mov
mov
das
xchg
add
cmp
push
in
adc
mov
test
ljmp
inc
and
sahf
pop
push
pop
in
jg
lret
push
scas
fistpl
sub
js
mov
lahf
add
cmc
call
scas
js
adcl
cltd
lods
nop
lock
xor
jg
mulb
mov
inc
decl
pushl
fs
jge
int3
aas
cmc
jl
adc
icebp
mov
call
jae
mov
xor
dec
inc
or
es
pop
bound
pop
pop
dec
fists
sub
cmp
incl
divl
stc
mov
into
outsb
jb
aaa
jle
pop
xor
ds
shl
aad
scas
and
add
push
mov
dec
xchg
mov
or
pushf
mov
xchg
test
cs
out
adc
incl
arpl
xor
cmp
mov
dec
paddsw
data16
jmp
aam
dec
jne
xchg
into
cmpsl
or
add
cmpsl
and
fwait
cmp
outsl
icebp
cmp
loop
lret
jns
mov
mov
icebp
add
cwtl
test
call
popa
jne
fucomi
inc
lock
mov
movl
and
jle
jmp
jne
je
pop
loopne
loope
xor
adc
sbb
jns
cli
mov
sbb
aas
mov
mov
or
add
inc
jnp
icebp
mov
mov
xchg
xchg
mov
and
fisubrs
int3
inc
sub
ljmp
mov
addb
std
mov
out
jns
adc
pop
inc
call
or
les
das
js
add
mov
call
mov
fldenv
cmc
mov
data16
cmpsb
adc
incl
inc
mov
in
inc
int3
jecxz
js
push
rorl
pop
lret
and
add
dec
mov
ss
mov
hlt
daa
mov
sbb
or
jecxz
jo
mov
gs
cld
mov
std
lret
out
sbb
jo
or
vfnmadd132sd
mov
mov
call
jmp
pushl
out
mov
cld
xor
fstpl
push
or
xor
and
sbb
pusha
imulb
out
incl
push
xchg
stos
or
test
call
and
dec
test
inc
dec
mov
cmp
call
pushl
fsubs
xchg
mov
push
insb
and
pushl
cs
cmp
loope
sti
in
cmp
push
lcall
aaa
mov
xor
adc
jg
lcall
ret
stc
clc
add
das
push
test
xor
jmp
shl
int3
adc
inc
jg
sub
dec
repz
xchg
mov
ljmp
inc
lods
mov
es
clc
sub
xor
ret
and
jg
lcall
jo
ljmp
sbb
mov
fidivl
shll
xlat
jne
dec
cltd
gs
xchg
outsb
outsl
xor
lcall
cmp
push
jecxz
lods
jle
or
pop
fs
adc
jne
out
mov
mov
inc
inc
mov
imul
stc
sbb
sbb
sar
xchg
sub
fwait
pop
dec
mov
test
lods
sbb
das
hlt
fisttpll
imul
sub
gs
shrl
icebp
mov
xor
mov
push
push
lods
in
outsl
mov
out
cmc
lods
into
sub
push
push
fbld
xchg
js
mov
adc
inc
movsb
lds
repnz
out
aaa
lcall
mov
push
dec
enter
rorb
loope
cmpsl
push
jg
jg
mov
fisubs
cwtl
fildll
inc
das
pop
aaa
decl
adc
mov
xor
and
aad
aam
lcall
push
testb
out
inc
fldl
cmp
daa
je
mov
out
ljmp
push
cmp
test
jg
add
cmp
rcrb
ret
xchg
sbb
jecxz
popa
sbbl
or
jmp
or
ljmp
lock
iret
xlat
fsubrs
sbb
stos
or
mov
mov
sub
inc
dec
lea
mov
and
lods
inc
sbb
call
mov
mov
mov
ljmp
adc
movsb
jmp
inc
lcall
in
pop
fwait
jbe
dec
lds
push
out
leave
xchg
add
jmp
pop
ljmp
and
mov
jnp
adc
jb
outsl
cs
js
sar
jae
lds
rorb
ret
mov
add
mov
fstpt
push
fwait
lock
cmc
pop
mov
jmp
sbb
sub
insb
cld
lea
jp
sub
cmc
lret
dec
pop
mov
push
lcall
ret
shll
and
mov
mov
rcrl
mov
pop
lcall
iret
push
addr16
addr16
lds
cmp
jne
jge
adc
pushl
decb
adc
sub
mov
shl
loope
cmp
add
pushl
push
fdivp
scas
sbbb
rol
adc
outsb
insl
stos
js
test
fdivr
pop
std
call
cmp
fs
call
sahf
xchg
subl
pushl
repnz
lret
or
dec
cwtl
stc
enter
popf
aaa
mov
pop
fisubs
clc
data16
fdivrl
dec
mov
mov
or
cld
push
inc
outsl
cmp
push
imul
mov
jb
gs
sub
in
mov
jnp
subl
xchg
ret
fwait
push
stos
sbb
das
jg
das
pusha
rcr
or
xchg
out
pop
lea
add
test
fucomip
mov
cmp
mov
pop
xchg
pop
lahf
aaa
outsb
mov
lcall
int3
cmp
push
ss
scas
popf
lret
xchg
lods
push
cmp
ret
cmp
lcall
sub
gs
cld
lcall
mov
repz
mov
pop
aam
mov
and
cmpsl
imul
testl
cmp
mov
mov
pushl
fwait
gs
rol
aam
int
aam
push
loope
push
out
fdivr
mov
clc
jmp
inc
rcrb
inc
adc
adc
insb
fnstsw
call
xlat
cmp
jno
add
pop
jp
lahf
pop
jge
out
fsubrs
in
and
xchg
mov
jb
mov
pushf
sbb
outsb
mov
mov
ss
jg
dec
pop
jne
xchg
in
mov
add
sbb
call
adc
and
dec
inc
jle
xor
mov
hlt
mov
ds
stc
aad
loopne
mov
outsl
loope
cltd
jg
pop
fildl
and
fists
jl
pop
arpl
xchg
push
and
mov
fildll
cli
jg
rclb
mov
sub
int
or
xor
jg
lret
lret
test
pop
cmp
pop
push
jp
mov
ret
insl
xchg
xor
shrb
incl
in
jns
add
fadds
mov
ljmp
das
mov
insl
pop
push
ljmp
std
incl
jno
decb
cmpsl
xor
loopne
cmc
out
dec
in
and
jb
rorb
sahf
mov
xorb
loop
or
int
insb
xor
mov
out
pusha
ds
call
cli
int3
or
je
xor
fildll
ljmp
inc
xchg
fucom
jg
cmp
mov
push
out
mov
mov
pop
decl
fnstsw
aam
push
lahf
xorl
xor
andl
sbb
out
stc
movsl
loopne
mov
fcmovb
out
mov
mov
outsl
push
jnp
mov
sbb
and
cmp
lcall
popa
lea
ss
hlt
push
mov
jnp
xchg
inc
ljmp
dec
ss
inc
push
push
jecxz
rcrb
xchg
clc
mov
sub
into
sub
iret
jle
and
notl
pushl
mov
fcompl
cmpsb
xchg
add
cmp
mov
push
enter
test
pop
nop
xlat
mov
fistpll
inc
pop
mov
test
in
loop
mov
ljmp
or
jmp
out
mov
decl
jg
jecxz
dec
in
pop
mov
xchg
xor
aaa
mov
xchg
pop
mov
mov
lcall
push
push
or
jbe
mov
sub
jp
incl
stos
mov
fwait
sbb
or
lcall
call
sub
data16
jno
ja
sub
sbbb
mov
fildl
popf
inc
sub
repz
insl
in
in
incl
cs
cmc
icebp
out
std
mov
push
push
inc
fwait
xchg
cmp
xor
push
push
xor
fdivr
or
adc
pop
ljmp
in
dec
jg
xchg
inc
call
clc
push
mov
or
lods
mov
cmp
dec
xor
cmpsb
xorb
daa
push
stos
inc
xor
add
lcall
xchg
mov
fdivr
jns
push
sti
rclb
sahf
add
mov
fwait
sti
push
fcompl
dec
cli
orl
mov
fidivs
imul
sub
inc
cwtl
aad
js
inc
loope
ljmp
jbe
stos
movsl
icebp
popa
sbb
push
fldt
adc
cmp
jg
mov
fnstsw
jmp
fucomi
and
test
cld
ret
or
fsubrl
xchg
pop
std
incl
inc
add
inc
inc
ficoms
xlat
inc
sub
nop
cli
push
mov
dec
aaa
and
test
lcall
int3
into
out
cs
cmp
push
mov
xor
push
xor
and
int3
mov
lock
dec
jns
gs
xor
inc
jl
pop
std
cs
mov
rcrb
push
or
lahf
sub
js
lahf
pop
sbb
pop
addr16
lcall
dec
int
add
arpl
jl
into
inc
js
xchg
jecxz
jmp
lcall
aaa
xor
sub
pop
mov
pop
popf
pop
sbb
into
mov
lret
pop
mov
ljmp
add
mov
mov
ds
sbb
pushf
cmp
mov
sub
sahf
movsb
scas
or
decl
push
ret
daa
in
std
dec
test
ljmp
call
sbb
xchg
mov
add
mov
jg
divb
xchg
cwtl
out
xor
jmp
jg
bound
je
or
sub
dec
inc
sahf
outsb
pop
jnp
out
jge
test
decl
or
nop
push
pushf
pop
aaa
cmp
lds
xor
sub
sti
or
lods
loop
jae
into
roll
push
lea
mov
test
pushl
insl
int3
ja
cmp
dec
xor
decl
lea
mov
xor
sarb
sahf
jecxz
jg
pop
add
data16
xchg
test
pop
inc
jmp
sub
push
mov
dec
in
pop
inc
sbb
cli
jp
xlat
and
pop
js
pushl
pop
and
scas
pop
in
sbb
scas
dec
fcos
xchg
clc
jmp
and
sti
ja
cmp
pop
jl
clc
neg
pushl
icebp
scas
scas
incl
jbe
lcall
enter
pushf
or
ret
hlt
call
and
mov
and
push
xchg
xchg
jnp
mov
jbe
aam
lcall
jmp
add
adc
incl
dec
test
xor
dec
jo
into
mov
xchg
out
loopne
pushl
pop
inc
data16
xchg
ds
stos
addps
add
add
jmp
dec
and
cmpsl
and
insb
adc
filds
pop
xchg
sbb
outsl
std
inc
jg
mov
ret
inc
mov
xchg
mov
call
icebp
jae
push
or
insb
or
sbb
aas
rolb
mov
in
dec
pmaxsw
xchg
dec
js
dec
stc
xchg
mov
xorl
test
lret
fstpt
mov
and
pop
shl
mov
repnz
xor
mov
inc
inc
incl
mov
cmp
dec
and
pop
push
sbb
jne
test
fdivrs
jmp
gs
and
jb
stos
sub
push
scas
int3
dec
jno
icebp
popf
addr16
iret
push
jp
lods
cmc
sbb
dec
inc
mov
hlt
xor
jg
scas
ret
sar
outsl
xor
out
xor
fisttpll
in
out
pop
sub
aaa
cli
das
je
cmp
scas
jo
loop
aam
mov
hlt
incb
or
test
add
cmc
ljmp
adc
lds
xor
add
jecxz
cmp
das
inc
incl
loopne
aam
mov
jge
lods
cmp
inc
pushf
shl
push
repz
lock
cmp
pop
adc
call
enter
hlt
icebp
lcall
jo
pop
aas
cli
mov
sti
sbb
mov
jns
pop
nop
sbb
ljmp
les
ret
sub
std
divl
in
das
les
in
mov
cli
outsl
hlt
jmp
test
icebp
inc
in
ret
push
rcr
les
adc
mov
aaa
or
sti
sbb
ud0
call
hlt
mov
sbb
scas
sub
mov
cmpsb
test
or
push
cmp
jmp
jmp
push
jbe
pop
pop
dec
incl
pop
aas
aaa
inc
jns
sub
jnp
cmc
xchg
pop
sub
mov
add
call
mov
pop
cs
mov
repnz
decl
push
dec
adc
fbstp
add
enter
push
xor
mov
ljmp
out
out
cmpsb
into
aam
mov
xlat
fwait
mov
add
inc
mov
call
xor
push
inc
jmp
repnz
pop
mov
sbb
sub
cmp
call
jmp
pop
cmc
pop
jle
mov
jge
inc
mov
out
xor
enter
mov
inc
add
stos
out
push
incl
inc
test
mov
pop
jmp
xlat
popf
xchg
sub
mov
loop
mov
out
dec
mov
hlt
out
jno
pop
aam
push
enter
mov
test
sub
xlat
insb
hlt
fisttps
sbb
das
cmpsb
dec
push
incl
lcall
push
adc
sbb
pusha
xor
popf
iret
mov
inc
call
sub
or
inc
jle
sbb
test
and
in
pop
call
cs
or
mov
push
pop
lret
push
lods
std
xor
lds
sbb
outsl
lock
and
mov
popa
mov
xlat
mov
or
rolb
lock
push
push
dec
lods
clc
or
mov
repnz
push
lcall
sub
xchg
inc
test
lds
jae
das
cmc
sbb
idiv
shll
repz
sub
lock
sbb
pushl
xor
std
in
mov
add
push
nop
mov
or
lods
pop
add
cmc
mov
pop
add
dec
cmc
pop
pusha
fisttps
outsl
push
and
push
pop
daa
sub
ljmp
outsl
ret
cld
mov
test
pop
xchg
mov
call
outsb
mov
cmpsb
movsb
mov
loop
inc
loop
inc
mov
fnstenv
push
inc
in
sub
mov
outsl
jno
stc
out
dec
fistps
sub
je
cmc
decl
stos
std
dec
and
aaa
pusha
mov
shlb
push
aad
jo
pusha
jns
mov
jmp
mov
or
xchg
and
pop
push
enter
pushl
cmpb
push
and
jno
cli
sub
jno
negb
dec
inc
jg
lcall
xchg
test
cmp
es
add
adc
lret
mov
mov
push
decl
lret
push
out
fimuls
mov
out
sub
lcall
iret
sub
ss
data16
adc
cmpsl
in
fdivr
jg
inc
xor
mov
xor
lret
daa
cli
xchg
sub
inc
imul
mov
pop
loop
rclb
adcl
lret
movsb
decb
push
lcall
fsubl
mov
lds
add
jle
ljmp
in
idiv
mov
or
sti
je
pushf
push
adc
xchg
clc
jmp
adc
inc
sarb
leave
xor
iret
jo
sub
incl
mov
addb
cwtl
cs
xchg
cmpsb
push
shrl
and
stc
push
inc
adc
stc
mov
dec
data16
cmp
cld
ljmp
pop
xor
arpl
xchg
mov
jo
and
dec
mov
call
dec
dec
aad
mul
gs
jmp
lahf
pushf
pop
leave
je
mov
xor
push
or
cmc
cli
inc
aas
nop
ficomps
dec
xchg
cmp
fwait
daa
sbb
hlt
add
dec
pop
enter
aaa
fsubrs
mov
or
fldl
add
ret
fnstcw
cmp
incl
mov
cmp
jo
mov
push
mov
fnstsw
xor
std
int3
out
mov
adc
jb
mov
aas
add
cs
push
inc
dec
inc
jge
cld
or
aam
xchg
or
hlt
daa
pop
dec
mov
dec
push
notl
and
call
adc
lock
cltd
push
popf
jmp
mov
pop
sbb
lods
mov
outsl
sar
xchg
icebp
or
dec
ja
cwtl
movsl
push
pusha
sbb
jmp
pop
scas
fmuls
aad
inc
mov
fwait
jge
cmp
add
mov
movsb
test
add
dec
outsb
loope
ret
push
repnz
ja
shll
dec
ljmp
pusha
pusha
xor
test
mov
jno
stos
mov
filds
mov
jns
mov
xchg
jnp
push
lock
pop
xchg
fbstp
mov
push
push
push
daa
movsb
sub
pop
inc
sbb
ret
dec
cmpsb
shrb
js
push
aad
and
sahf
and
cwtl
call
inc
test
ret
sub
rcrl
mov
shll
pop
outsb
loop
add
and
cmp
cmp
call
movsl
aad
cmpsl
sbb
mov
imul
outsl
cmp
decl
movsl
int3
inc
inc
cmc
jge
mov
sub
lock
imul
sub
adc
fidivrl
popa
and
sbb
xchg
sbb
jle
call
shr
cwtl
ficoml
or
mov
cli
push
das
icebp
pop
insl
xor
or
cmp
arpl
test
dec
es
nop
ljmp
lock
adc
pop
aad
inc
mov
mov
das
ljmp
decl
mov
push
dec
out
add
mov
movsb
inc
aaa
xor
push
xchg
icebp
fisttpll
xor
sbb
movl
jle
jmp
jmp
bound
test
xor
movsl
inc
jns
push
mov
inc
iret
in
dec
pop
and
lcall
adc
decb
std
insb
mov
add
push
jg
lcall
xchg
sahf
imul
stos
mov
jp
adc
cmc
cmp
jnp
cltd
sub
fstpt
jmp
out
int3
fldl
inc
jns
sbb
aam
mov
outsl
movsl
test
cltd
jns
rolb
sub
or
xlat
and
mov
xchg
ljmp
subb
insl
inc
mov
jne
aaa
inc
pop
sub
lock
sbb
or
jmp
adc
iret
sbb
pop
push
xor
mov
jmp
aad
push
jmp
xchg
adc
scas
pop
jb
and
insb
es
mov
sbb
adc
jnp
dec
out
cmc
or
mov
mov
movsl
xchg
fcoml
incl
test
adc
stos
repnz
fdivr
jg
mov
jb
inc
adc
cli
add
sub
test
jnp
dec
ja
adc
xor
adc
or
sbb
lock
sbb
scas
inc
sub
mov
data16
decl
cmpsb
shrb
femms
scas
sbbb
mov
lods
inc
push
rcrl
jle
popf
lds
test
dec
dec
negl
enter
adc
in
out
mov
int
push
lcall
cli
addb
lea
sarb
inc
jle
or
mov
pop
lret
dec
gs
mov
push
arpl
aas
dec
xchg
cli
ljmp
aam
sub
xor
pop
ss
rcl
aam
in
imul
push
pop
and
jno
cmc
and
outsl
pushf
orl
sub
aad
dec
rolb
mov
sbb
lahf
sub
dec
lcall
fdivrl
repnz
sbb
push
adc
in
sbb
sbb
pushl
ret
dec
out
ficomps
xchg
add
in
xor
sbb
std
call
pushf
iretw
test
adc
add
pop
adc
cltd
outsb
icebp
lcall
mov
daa
push
addr16
push
or
leave
xor
adc
negl
ljmp
fcmovne
add
mov
ret
out
mov
es
pop
aad
vphadddq
sahf
lods
out
jl
dec
adcb
adc
or
les
jl
test
lods
dec
sbb
fsubrp
sti
movsl
insb
ljmp
jg
out
es
cmpsl
repz
sbb
mov
incl
or
pop
icebp
sti
inc
test
push
into
faddl
nop
sub
push
pop
push
or
xchg
pusha
jecxz
das
mov
mov
mov
xchg
dec
das
je
pop
cwtl
ds
push
jo
mov
jmp
pop
xor
push
mov
fldl
or
jge
dec
rcrl
xor
lods
mov
push
mov
idiv
incl
stos
clc
popa
data16
add
in
sbb
call
jl
xlat
cmp
sub
jmp
movsl
cli
jmp
jge
cmp
das
incl
out
cmp
out
lods
adc
dec
push
mov
scas
ljmp
or
ljmp
jmp
adcl
call
popf
xor
clc
push
inc
lods
test
add
decl
jp
add
movsl
jp
inc
ret
movsb
add
sub
gs
xchg
aam
push
rorb
bound
mov
es
xor
lret
add
add
decl
sub
push
rcrl
sub
inc
add
mov
sub
in
loop
inc
pop
popa
sbb
pop
test
cld
scas
xchg
scas
push
xor
or
rorl
rclb
outsl
icebp
incl
jle
int3
movb
mov
mov
add
dec
mov
in
aad
or
add
sbb
lds
or
xchg
rclb
lock
jg
xlat
dec
jae
data16
fadd
inc
out
sbb
pushl
sbbb
out
adc
shll
inc
push
mov
mov
add
into
xchg
jno
hlt
faddl
aad
mov
loopne
rcr
lds
fmull
mov
inc
pop
cmp
mov
repz
call
lcall
stos
jbe
and
bound
push
cmpsb
jmp
stos
mov
leave
mov
les
mov
das
jbe
and
push
lret
add
jmp
push
std
jg
sbb
faddl
xor
mov
adc
ljmp
fsts
loop
mov
mov
cwtl
out
cmpsl
gs
adc
dec
sbb
insl
mov
gs
fidivl
lea
xor
incl
xchg
pop
adcl
dec
je
cmp
pop
jae
rcr
and
push
std
pop
mov
pop
xchg
mov
and
mov
js
sarl
xor
jl
xchg
ret
mov
fcomps
fistps
mov
mov
popf
and
test
stos
cmpsl
jo
sbb
stc
jge
xchg
clc
xlat
push
scas
dec
xor
loopne
pop
sbb
mov
mov
test
xor
push
out
ds
mov
mov
call
out
adc
ss
sub
pop
jp
imul
ffreep
inc
outsb
ss
test
call
jmp
add
rolb
movsl
fisttps
pop
pop
jb
sbb
or
nop
test
js
movsl
rolb
lods
cli
shll
jl
inc
pop
cld
sti
out
rcrb
rclb
mov
xchg
sbb
outsb
sbb
xchg
mov
or
mov
fsubrp
popa
out
cmp
scas
sub
roll
xor
aaa
cli
jmp
cmp
aaa
inc
dec
aad
mov
mov
or
popf
clc
push
cmpl
testl
jmp
mov
push
jmp
imul
repnz
xchg
inc
stos
dec
call
or
std
inc
push
add
cmc
jo
mov
adc
lods
fucomip
mov
xchg
sub
xor
out
cmp
adc
scas
or
ljmp
cld
movsb
mov
inc
in
sbb
sarb
call
call
inc
jo
repz
push
jge,pt
out
or
cld
lcall
int
mov
inc
jb
icebp
push
lahf
pop
in
in
rolb
mov
sbb
mov
add
enter
mov
pop
jl
adc
jbe
jecxz
mov
pop
dec
pop
std
jge
enter
daa
jg
xchg
ds
cmp
clc
fdivrl
sbb
cltd
loope
iret
or
les
andb
loope
ja
fdivl
sub
shr
lret
setns
mov
push
sub
cli
push
filds
hlt
xchg
in
mov
pushf
xchg
mov
mov
pop
cli
xchg
push
sbb
lcall
xchg
testl
pushl
imul
sub
fsubrs
subl
push
or
lcall
lret
scas
or
xchg
inc
mov
movsl
add
notb
lods
mov
lods
lcall
ja
mov
pushf
cmp
jle
ss
mov
fisttps
push
call
adc
test
inc
popa
or
pop
je
jmp
outsb
mov
sahf
lahf
dec
push
mov
mov
sbb
cltd
add
dec
xchg
xor
pop
push
pushf
andl
jg
inc
sbb
popa
subb
int3
dec
in
jge
jb
adc
ljmp
inc
ljmp
pusha
loopne
into
dec
jp
or
inc
popf
mov
pop
pushf
loop
shrb
push
push
push
mov
ficoms
call
mov
sti
mov
pop
mov
jg
cld
aad
ja
in
andl
clc
call
rol
rorb
cli
pop
jg
pop
popa
pushf
vshufps
data16
call
jg
mov
repz
mov
sbb
aam
repnz
and
ret
jns,pt
ljmp
adc
sub
mov
mov
jb
pop
jne
mov
add
and
fildll
jg
add
push
jmp
inc
push
jmp
rolb
stc
jmp
mov
adc
jp
jno
call
test
arpl
outsb
xchg
insl
adc
out
cltd
lret
out
mov
lcall
adc
js
cmp
ljmp
sub
stos
decl
lret
jl
and
lods
mov
inc
inc
add
je
lea
dec
fiadds
mov
fstpt
or
cli
lret
xchg
and
push
xchg
xor
mov
addb
xchg
or
mov
sub
sub
xor
nop
ja
sbb
out
pusha
sbb
aaa
outsb
fisubrl
rcrl
movb
and
mov
jo
push
hlt
movsl
sub
jg
ds
mull
das
push
or
xor
mov
out
hlt
idiv
call
push
data16
adcl
imul
decl
ficoml
nop
and
add
adc
fsubs
mov
sbb
pop
incl
les
or
sub
mov
mov
push
pop
je
fnsave
int3
mov
aam
lcall
xor
mov
mov
mov
out
add
daa
pop
jae
stos
sub
sbb
jge
jae
mov
pusha
inc
push
mov
out
scas
fwait
ret
pop
bound
rolb
imul
sub
fbld
sbb
dec
xlat
fldcw
sub
imul
dec
out
ljmp
inc
in
pand
push
xorl
repz
push
mov
push
decl
inc
pop
mov
xchg
or
or
cs
mov
mov
decl
mov
cmp
mov
cli
jbe
pop
adc
and
dec
call
lds
lods
std
into
mov
outsl
icebp
mov
fstl
je
add
cmp
decl
imul
hlt
pop
sbb
adc
mov
push
shrl
lods
mov
stc
jae
xor
addb
lcall
cmp
add
mov
lcall
pop
ljmp
sbb
xchg
into
mov
mov
incl
stos
push
sahf
adc
mov
in
loope
bound
pop
sbbb
call
or
les
mov
call
push
arpl
push
sub
rolb
cmc
xchg
in
lea
jbe
pop
pop
imul
mov
jmp
inc
lods
aaa
pop
or
mov
pop
cli
jmp
xorb
clc
jmp
sbb
push
js
sub
outsb
imul
call
arpl
mov
shlb
or
pop
out
jbe
xor
ljmp
movsl
hlt
test
push
jno
sbb
dec
testb
adc
testl
call
xor
dec
js
dec
cmp
int
test
cmp
mov
dec
cmpb
and
decl
jb
pop
cwtl
lods
repz
adcb
mov
imul
cmc
lcall
dec
mov
sti
out
adc
loopne,pn
adc
out
lock
in
outsl
sub
scas
aaa
sahf
stos
pop
push
push
push
inc
test
mov
movsl
popf
loop
sahf
btr
and
jo
jmp
repnz
sti
inc
add
inc
xor
jg
jmp
inc
lds
mov
out
lods
aas
cmpsl
jnp
mov
repnz
repz
lds
ds
adc
test
aaa
icebp
add
rolb
or
cmc
mov
test
cltd
xchg
dec
and
jnp,pt
jo
fists
inc
daa
mov
cld
add
inc
cmp
pusha
mov
pop
rclb
icebp
pop
js
out
adc
sub
insb
jp
sub
cmpsb
push
incl
inc
data16
inc
or
mov
jbe
ret
pop
mov
sbb
in
aam
call
and
pusha
sub
filds
pop
std
sahf
out
cwtl
lods
call
pop
jnp
mov
add
out
mov
push
addl
mov
push
xchg
enter
or
xor
pop
dec
pop
lcall
jno
lods
pop
lds
movsb
fs
and
xchg
xchg
and
div
cs
out
movsl
cmp
ljmp
std
sarb
lds
push
out
movsb
xor
daa
movl
jl
aas
sbb
incl
push
loope
adc
out
sub
daa
insb
mov
sti
cmp
int3
pop
push
cmc
popa
fwait
xor
pop
loop
and
sti
cmpsb
pop
lea
aam
or
das
incl
pop
push
sub
aas
pop
cmp
fisubs
lahf
stc
jne
out
dec
cmp
leave
ret
outsb
xor
loope
mov
das
adc
cmp
std
sbb
dec
fists
jl
jb
adc
mov
in
jmp
test
mov
jge
push
pop
and
mov
xchg
insb
test
fs
adc
and
pushf
idivb
inc
sbb
lcall
adc
push
fldenv
enter
pop
sahf
xor
in
lock
decl
das
mov
leave
out
test
test
inc
out
cwtl
jne
cmp
jl
pop
call
cmp
push
xor
das
push
mov
stc
pop
clc
pushl
xchg
mov
ds
dec
mov
add
loope
sbb
std
add
jbe
jmp
mov
mov
clc
call
adc
and
leave
int3
stos
leave
and
ja
jns
pushf
and
add
pop
stc
push
lcall
jbe
test
and
and
add
mov
leave
or
in
mov
loop
inc
data16
jnp
sbb
pop
cli
incl
mov
cmp
fdivrl
scas
fldenv
out
pushl
push
xor
das
repnz
inc
sarl
test
xchg
mov
call
adc
mov
push
cs
mov
ljmp
sti
mov
mov
mov
xchg
xor
fcmovb
aam
sbb
lea
jle
sbb
mov
mov
and
mov
jnp
mov
les
incl
push
push
int
push
cmp
int3
mov
into
shll
pushl
bound
jne
pop
pop
xchg
popa
mov
sub
sub
push
call
nop
outsl
roll
sar
jmp
shlb
pop
jmp
pushf
leave
jg
adc
std
mov
fnsave
scas
pushf
ret
mov
xchg
inc
pusha
jp
ja
jge
je
into
sub
outsl
icebp
outsl
aaa
dec
mov
push
mov
sub
pop
dec
sub
jg
inc
jp
cmc
or
dec
sbb
xchg
pop
jl
dec
fsts
out
movsb
loope
pop
dec
hlt
ljmp
insl
jo
out
call
push
negl
push
jbe
mov
pop
lods
inc
jmp
xchg
icebp
rcll
and
inc
std
pop
mov
inc
pop
mov
jg
fistps
xlat
mov
mov
mov
daa
in
push
lea
adc
sub
inc
sti
jno
ds
push
pop
xchg
into
xchg
lock
jl
in
push
cld
pushf
fistps
cmc
inc
insb
or
cmp
jg
xchg
ds
sub
cli
enter
fcmove
xor
and
out
mov
call
xchg
inc
out
xchg
cs
and
clc
jae
inc
jbe
je
das
icebp
or
mov
mov
mov
enter
dec
jmp
mov
ret
push
leave
xchg
jo
cmp
mov
out
cmp
sub
sub
insl
push
stc
mov
pop
adc
sahf
stos
xchg
cli
sbb
shl
xchg
mov
cmpl
pushf
jbe
sbbb
push
fildll
in
test
push
sub
lret
mov
arpl
std
mov
aad
jnp
movsb
adc
mov
repnz
addr16
xchg
pushl
push
jne
jmp
sub
in
adc
mov
push
data16
addb
dec
shrb
dec
xchg
sbb
push
addb
pop
enter
das
rorb
rcll
mov
js
hlt
dec
test
jb
pop
adc
jg
and
scas
enter
jmp
mov
mov
jg
inc
popa
call
pop
mov
add
je
enter
in
mov
incl
iret
daa
and
ret
lret
adc
xchg
repz
sub
imull
gs
ljmp
xor
jecxz
inc
cmp
add
test
push
sub
push
call
mov
mov
mov
adc
push
xchg
mov
mov
mov
mov
mov
jg
lock
iret
adc
fidivrs
jp
and
fldl
jne
inc
and
cltd
push
or
push
jge
jmp
sub
ret
push
rorw
cmp
into
fld
dec
ljmp
pop
decl
rol
mov
push
repz
push
pop
cmp
hlt
xchg
movl
inc
inc
hlt
pop
sub
sub
push
mov
mov
fildl
fs
mov
ret
cmp
out
pop
lcall
cwtl
push
in
jns
jecxz
xchg
jbe
fldl
flds
out
rorb
dec
add
pop
adc
lock
lret
inc
fwait
scas
pushl
pusha
jmp
jp,pt
js
push
sar
aaa
cmp
stc
sti
insb
in
lds
mov
test
negl
std
and
push
push
cmp
adc
mov
xchg
pop
call
jmp
cwtl
orl
mov
jge
jae
aam
data16
push
cmpsl
leave
push
add
incl
pop
sub
hlt
jl
mov
lods
lods
dec
adc
xchg
outsl
jp
aaa
and
mov
ljmp
xor
stos
sub
pop
in
sub
sbb
or
das
inc
std
insl
gs
pop
dec
add
sti
inc
jg
int
sarb
add
je
cs
add
rcl
rorb
adc
fucomip
ret
push
incl
sub
push
mov
in
xchg
mov
es
out
cld
lret
icebp
test
test
mov
jmp
and
fistl
pop
addb
ljmp
lods
cwtl
jae
iret
idivl
jb
je
xchg
lcall
sub
icebp
fcoml
inc
call
std
out
clc
sub
dec
inc
cmpsl
std
pop
mov
lds
inc
lcall
or
aas
inc
loop
repnz
or
adc
adc
je
xor
push
outsl
aam
jecxz
push
mov
lcall
pop
pop
icebp
outsl
imul
mov
loop
jb
fcmovne
or
arpl
push
lods
test
jbe
shl
mov
pop
std
pushl
stos
add
pop
rorl
dec
pop
aad
lret
mov
call
stc
mov
pusha
fld
push
sahf
sub
into
jecxz
ljmp
add
mov
mov
add
shl
sub
inc
and
or
into
adc
jle
lcall
movsl
dec
in
inc
mov
pop
pop
mov
sub
mov
mov
test
bound
push
jbe
mov
loopne
mov
sub
inc
dec
cmpsl
sbb
aad
fsubrs
out
incl
add
mov
push
out
push
arpl
sub
cmp
sarb
cmp
in
jmp
sbbb
loopne
cmp
xor
mov
std
jmp
dec
sub
ljmp
xchg
mov
into
pop
push
scas
je
xchg
xchg
clc
jle
test
aam
fst
pop
and
dec
cltd
lods
adc
push
imul
inc
out
and
gs
hlt
mov
test
xor
mull
dec
imul
mov
ljmp
xchg
pushf
mov
jo
icebp
add
cmp
leave
cmp
xchg
jmp
xchg
mov
jge
ljmp
test
adc
inc
mov
mov
lcall
test
dec
mov
lods
flds
fpatan
jno
leave
inc
test
mov
sub
rcrb
dec
jg
stc
and
repnz
jmp
das
mov
xchg
popf
and
ljmp
sbb
pinsrw
and
lahf
mov
repnz
and
sub
lcall
cmp
outsb
aad
in
xor
enter
cmp
loopne
mov
push
imul
sub
sub
xchg
pushf
scas
lahf
push
pop
push
mov
cmp
push
lea
sti
fisttps
push
and
push
cmc
cwtl
ss
lods
adc
icebp
js
xchg
shlb
imul
aad
and
imul
adc
dec
std
cmpsb
xlat
cmp
fmull
pop
rolb
lcall
pop
or
fmull
mov
jnp
mov
cmp
lcall
sub
and
cmpsl
stos
jns
in
frstor
ss
lret
enter
mov
rolb
inc
insl
subl
cwtl
add
mov
pop
call
aam
ss
aas
lea
cmp
mov
ds
xchg
inc
or
pop
daa
ljmp
mov
ss
and
inc
add
pop
mov
out
or
inc
jbe
sbb
pop
pop
add
or
decl
xchg
in
inc
std
mov
dec
fcmovnb
repnz
rorb
push
fld1
aaa
sbb
ljmp
pop
test
push
test
ja
pop
xchg
ja
addl
xchg
out
pop
imul
std
push
jl
andl
inc
sub
jnp
mov
mov
jmp
sbbl
pop
jecxz
sbb
mov
out
int3
push
je
sbb
ljmp
pop
inc
aas
xlat
sbb
xchg
xor
es
mov
repz
enter
cld
mov
jge
adcl
aad
mov
cmp
jnp
jo
jne
stos
cmp
pop
jmp
test
mov
clc
push
jmp
fwait
xchg
or
pop
and
pop
leave
inc
dec
cmp
jns
inc
lods
call
or
mov
jbe
sbb
sub
mov
pop
mov
mov
incl
pop
vmread
cmp
repnz
aas
pop
mov
aam
in
stos
pop
mov
test
pop
jg
xor
out
jp
jne
xchg
push
pop
jge
xchg
decb
out
notb
inc
js
in
push
xor
ret
sbb
pop
dec
repz
arpl
movsb
xchg
and
push
pusha
repz
shrb
loop
into
jmp
nop
lcall
and
pop
fwait
rcll
clc
lcall
inc
xchg
xorl
outsl
xchg
adc
sub
or
pop
leave
jo
in
pmullw
pushl
and
mov
lock
mov
mov
fidivrs
mov
ret
popa
lock
cld
jl
mov
incl
loopne
jl
and
mov
add
push
daa
stos
repz
pop
ret
rolb
loope
and
xchg
add
push
dec
pop
add
cmpsl
addr16
test
xchg
cmp
pop
cli
incl
test
adc
addl
push
fucomi
ficompl
jg
call
cmpsl
mov
or
repnz
mov
lcall
pushl
scas
sub
mov
push
and
or
test
pop
mov
clc
lods
loope
mov
jbe
cmc
decl
leave
pop
fwait
pop
adcb
cmp
mov
sbb
incl
repnz
nop
stos
xchg
aaa
inc
out
sub
and
adc
mov
decl
sub
iret
pop
sub
vmovdqu
fcmovbe
enter
mov
cld
outsl
cmc
das
push
aaa
add
loop
or
pop
add
pop
call
or
xchg
mov
xor
mov
jbe
incl
lahf
push
push
xchg
sub
js
ret
lahf
inc
insl
pop
jmp
cld
jae
scas
xor
sub
or
call
scas
inc
add
jne
sbb
test
mov
sbb
mov
push
dec
cmp
xor
shrb
sbb
call
lds
mov
cli
je
xchg
and
adc
jbe
mov
mov
cld
inc
lahf
xor
insl
clc
mov
xorl
xor
jo
pop
test
lds
sub
and
or
adc
adc
in
xor
xor
movsl
insl
pop
insl
pop
inc
icebp
push
add
pop
or
or
pop
sub
mov
lcall
push
jl
mov
cmovne
pop
js
shr
bound
scas
and
sub
push
shl
fsts
or
fidivs
push
popa
jle
pop
mov
out
dec
jg
push
xor
jl
dec
daa
lds
imul
nop
mov
sbb
enter
sbb
mov
dec
mov
or
mov
mov
shl
lahf
cmpsb
jg
add
inc
pusha
adc
pop
mov
xchg
ffreep
dec
jbe
int
mov
push
ljmp
inc
adc
cli
sbbl
pop
xchg
ffree
push
std
mov
dec
aaa
mov
pop
loopne
xchg
jmp
lret
popa
test
mov
and
das
mov
aaa
ljmp
push
xchg
mov
das
fidivrs
inc
jno
in
in
mov
mov
imul
lcall
cld
pushl
mov
imul
xchg
xchg
jge
int3
rcr
fidivl
jmp
add
xchg
lds
mov
push
inc
or
jnp
or
jmp
jmp
and
sarl
fstpt
or
push
sti
loope
insb
xchg
lcall
cld
fucomp
mov
inc
mov
addb
xchg
xlat
cli
into
les
and
fsin
inc
outsl
in
mov
xchg
subb
or
clc
mov
fisttps
xchg
cltd
aas
cmp
jg
cs
insl
pushf
ds
cmp
out
sbb
sarb
divb
faddl
and
in
or
mov
lea
xchg
out
movsb
icebp
jg
test
jns
inc
pushf
js
or
cmp
pop
inc
sar
ljmp
inc
mov
addb
and
lock
xor
inc
ljmp
jl
or
out
pop
movsl
xchg
fildll
outsb
jns
imul
mov
cmc
addr16
pop
pop
movsl
lret
mov
xor
lock
or
mov
mov
loopne
inc
sub
add
or
incl
loopne
mov
sub
or
or
inc
mov
xor
push
aam
js
jg
push
pusha
mov
xchg
inc
cmp
cli
pop
push
jecxz
addr16
adc
test
and
add
call
mov
mov
and
pop
fs
loop
repnz
imul
outsl
cld
jmp
hlt
cmp
dec
je
fmull
jge
cli
aas
les
enter
mov
or
ljmp
popf
addl
cmpsb
hlt
sub
or
jae
fistps
jmp
scas
xor
ljmp
test
push
pop
fdivrs
and
test
nop
arpl
sub
dec
jae
jo
adc
xchg
jl
inc
cmc
pop
clc
sub
push
xor
sbb
shlb
pop
int3
adc
mov
xchg
in
mov
icebp
jg
and
add
cmpsb
aad
mov
mov
loopne
add
cli
mov
cmp
add
popa
std
xorl
cld
dec
and
stos
push
in
push
dec
cs
pop
mov
sbb
and
mov
sti
lcall
repnz
xchg
imul
mov
sahf
mov
roll
mov
jmp
adc
ljmp
movsb
das
aaa
xor
adc
pop
mov
vpaddusw
jg
push
jne
fldl
jb
nop
or
push
outsb
sub
stos
gs
lock
ret
call
lods
dec
aam
mul
lods
scas
xor
les
adc
pop
clc
ljmp
jno
xchg
fwait
mov
data16
add
cmpsb
lcall
incl
xor
dec
xor
jb
sub
add
cmp
dec
mov
mov
cmp
int3
mov
mov
je
call
int3
push
aaa
rcr
mov
lea
incl
mov
xchg
repnz
cmpsl
fiaddl
scas
jl
push
outsb
and
jns
out
fsubrs
dec
sahf
in
fcmovnu
jl
mov
dec
popa
popa
xchg
out
cmp
mov
add
pushl
pop
call
xchg
mov
in
adc
jae
lods
jg
lcall
jbe
in
cs
xchg
push
xchg
jg
dec
jne
arpl
dec
iret
xchg
mov
fs
enter
jns
fst
clc
imul
xchg
inc
loopne
scas
and
dec
ljmp
pop
push
jg
lods
sti
into
fwait
mov
cmpsb
in
add
orb
xchg
sub
add
push
mov
std
fcoms
lea
lcall
imul
pop
jnp
mov
mov
push
lds
fsubs
pop
je
clc
incl
aam
xchg
pop
cmp
pop
pushf
shlb
inc
dec
loope
dec
mov
cwtl
cmp
lcall
jbe
xchg
jg
lret
mov
mov
into
scas
loope
scas
loop
dec
mov
cmp
inc
shll
ret
sbb
fmuls
outsl
movsb
inc
outsl
jl
mov
fistl
or
pushf
mov
roll
cwtl
icebp
std
add
out
ss
xor
mov
jmp
push
add
pop
jnp
popf
lea
dec
pusha
pushl
decl
mov
pop
mov
xor
or
xchg
jecxz
push
adc
mov
jmp
out
out
adc
icebp
idivb
inc
insl
adc
push
aam
xchg
in
xchg
ret
ljmp
mov
xchg
mov
sbb
xchg
cmpsb
push
js
and
notb
jmp
iret
call
jecxz
out
cmp
adc
add
sbb
negb
lcall
inc
and
xchg
pusha
jbe
inc
std
push
cmc
not
repnz
int
fdivl
idivb
test
mov
sbb
ficomps
mov
lock
decl
pop
scas
cmpb
inc
xor
pop
mov
dec
arpl
mov
mov
js
sub
adc
sbb
inc
cmp
add
add
sbb
lock
inc
mov
insb
fstpl
add
arpl
mov
pop
xchg
mov
dec
jl
test
push
cmpl
arpl
fdivrl
fsub
cmpsl
mov
ja
in
xchg
cmp
cmp
mov
mov
inc
int3
push
mov
in
xor
jg
pop
mov
std
pop
mov
pop
mov
lret
jns
pop
popa
loope
add
ljmp
pop
shrl
inc
aam
rcrb
scas
pop
lret
lods
sub
jb
mov
int3
adc
mov
jmp
out
enter
xor
and
je
lds
lods
jg
out
cld
mov
mov
arpl
xchg
jl
mov
add
jg
jmp
cs
lcall
jp
jbe
movsb
cltd
push
test
imul
cmp
jmp
push
or
add
adc
orl
adc
call
test
flds
mov
in
mov
pop
lcall
mov
mov
pop
xlat
in
fildl
mov
loop
lcall
sbb
xchg
cmc
pop
cmp
pop
mov
mov
cld
call
inc
in
ljmp
adc
mov
mov
inc
adc
imul
shl
ret
jmp
imul
incl
pop
iret
stos
jmp
jmp
xchg
pop
scas
or
jle
lcall
cmovbe
aad
xchg
mov
add
or
cmp
cld
ss
inc
fbld
push
imul
ljmp
rcll
pop
pop
sti
in
jg
decl
insl
jnp
lods
mov
inc
cltd
xchg
mov
jmp
fwait
xlat
loop
mov
dec
movsb
int3
xchg
shl
xchg
xor
out
pop
cmp
sar
test
int
nop
int3
aam
movsl
xor
pop
push
jp
stc
dec
inc
pop
or
adcb
data16
or
cmp
and
xchg
xchg
dec
mov
out
enter
xchg
pushf
push
shrb
sub
icebp
mov
dec
pop
leave
stos
hlt
pop
lahf
jbe
push
fistps
gs
aas
es
fistl
xchg
push
shlb
cmc
std
mov
push
ss
lcall
adc
mov
mov
xchg
pop
test
ret
into
ds
out
in
push
add
xor
incl
jmp
add
sub
or
cltd
xchg
fdivs
cmpsb
not
stc
stc
jmp
ljmp
dec
ficoms
pop
call
loope
ljmp
and
mov
sbb
out
cltd
stos
mov
xchg
enter
xor
insb
fdivs
push
mov
negb
addr16
aad
sahf
pop
test
test
insb
push
and
ret
dec
xor
jge
cmp
xor
inc
mov
and
push
loop
fs
lret
loopne
ljmp
mov
and
add
push
cmp
pop
clc
incl
sbb
jae
test
dec
cmp
lock
jae
es
lcall
insl
cld
adcl
in
mov
jae
testl
adc
and
lret
int3
into
jo
xorl
cltd
ljmp
inc
cld
push
mov
scas
push
mov
jmp
cltd
stos
imul
cmp
in
lcall
into
addb
iret
lods
jg
cltd
lea
jns
cmp
pop
popf
mov
int
call
call
jns
xor
xor
sti
imul
icebp
sbb
mov
push
dec
cld
push
pop
mov
cld
add
bound
and
hlt
decl
out
dec
jecxz
pop
sbb
notl
add
aaa
andnps
lcall
rcrl
and
sub
push
arpl
push
pop
stos
mov
test
xor
or
sub
out
int3
cmp
inc
or
movsb
decl
push
fnsave
jnp
mov
mov
cmp
mov
addr16
rcrl
push
ljmp
leave
mov
test
sub
mov
in
dec
fbld
mov
sbb
push
pushf
and
add
rclb
dec
pushf
pop
ds
incb
mov
enter
jmp
ja
mov
jnp
xchg
sub
sar
mov
xchg
pop
je
loop
cs
out
xchg
xchg
rorl
jle
dec
shrb
jnp
scas
shlb
add
incb
decl
and
rclb
ss
lods
xchg
imul
inc
mov
scas
arpl
popa
mov
dec
out
in
mov
jg
cmp
jle
stos
in
lds
sti
mov
ja
cmpl
sbb
decl
push
add
dec
pop
imul
dec
mov
enter
lcall
test
sbbb
jg
mov
sbb
mov
xchg
cli
adc
and
loope
aad
mov
stos
sbb
fimuls
std
adc
mov
test
jl
jg
pop
push
jp
cmp
rcrb
fdivr
inc
outsb
popf
repnz
scas
stc
adc
inc
enter
hlt
daa
rcr
in
call
cmp
mov
scas
lahf
mov
cld
cmp
xchg
sbb
pop
fiaddl
pop
or
push
push
incl
cmpsb
mov
add
popf
andb
sbb
decl
push
in
cmpb
lods
xor
ret
push
testb
lods
call
mov
push
pop
mov
inc
filds
call
shl
sub
outsb
insl
jp
sarb
xchg
fcompl
cmpb
lods
lea
clc
xchg
and
mov
adc
lret
call
push
jnp
or
lcall
xor
push
cmpsb
in
pushf
dec
in
adc
or
ljmp
cs
sub
shll
adc
sbb
jmp
mov
xor
xor
adc
insb
hlt
cmpsl
jle
pop
cmpsl
xchg
sub
or
lods
sbb
jg
sub
std
inc
mov
cli
pop
ljmp
popw
add
test
inc
insl
cmpsl
data16
jecxz
iret
test
das
mov
pop
decl
lret
pop
sarl
push
sbb
jmp
push
xchg
ds
mov
decb
std
repz
iret
inc
xor
push
lcall
loopne
sbb
call
bound
mov
adc
hlt
push
je
data16
sub
adc
outsb
icebp
cli
cli
lahf
xchg
inc
roll
insb
adc
fmull
mov
rorl
ss
outsl
mov
out
int
mov
pop
mov
cli
mov
lds
cmpsb
mov
push
shlb
mov
jae
jmp
int3
push
movsb
jns
mov
or
jl
jmp
ljmp
fidivrs
xchg
or
sub
popa
bound
pop
adc
cs
inc
daa
in
push
imul
clc
rcrb
cmpb
push
out
cs
inc
push
loopne
aas
rcl
dec
sub
incb
stc
and
adc
cmp
idivb
or
jg
outsl
cmc
xchg
push
cmp
adc
xchg
mov
adc
incl
mov
push
mov
pop
insl
mov
mov
jbe
je
jae
or
mov
cmp
fstps
mov
ja
xchg
cmp
fnstsw
lcall
pop
inc
or
rcll
lret
pusha
sbb
pushl
mov
std
inc
jmp
in
out
bound
lock
xchg
jecxz
das
out
lock
mov
movsl
mov
xchg
mov
repnz
pop
popl
fisttps
xor
xor
fcoml
pop
and
mov
mov
jmp
in
jb
jge
lds
mov
stos
mov
pop
test
xor
ljmp
lcall
movl
clc
cld
std
leave
dec
xchg
or
mov
imul
mov
pop
movsb
lods
cmp
jmp
cmp
movsb
push
in
mov
bound
out
sbb
notl
orb
push
leave
sub
adc
lcall
xor
inc
lods
xlat
or
or
push
push
out
or
or
call
mov
pusha
je,pt
xlat
sub
fs
cltd
mov
arpl
pop
ss
xchg
jg
push
call
loope
movsb
jno
movsb
repnz
jbe
push
pop
aad
je
pop
ja
mov
adc
lods
fbld
push
mov
iret
xor
cmp
mov
cmovb
cli
mov
jnp
mov
add
xchg
mov
call
js
push
out
mov
push
lods
dec
aas
xchg
cltd
jns
mov
push
xor
pop
ret
mov
test
fisubrl
pushl
sbb
shrl
pusha
lods
mov
push
fcoml
les
test
dec
cmp
adc
mull
pushf
mov
popa
pop
iret
daa
ljmp
jg
pop
movsb
lds
lods
jno
adc
cmc
test
in
pop
pushl
cli
fnstenv
cltd
sbb
into
fstl
cmpl
mov
loopne
lahf
push
lret
sub
dec
mov
lds
pop
loop
mov
lods
jmp
adc
outsl
lock
shll
sub
mov
inc
in
adc
decl
out
push
and
dec
add
rclb
mov
lods
cli
testl
sarl
jb
add
adc
push
push
lcall
sbb
mov
pop
dec
or
rorl
xchg
dec
das
icebp
ljmp
dec
dec
outsb
jnp
sbb
pop
mov
push
mov
adc
pop
loopne
cmc
popf
stos
mov
pop
jecxz
jne
add
mov
fcmovne
or
lcall
neg
adc
insl
push
cmpsl
add
ljmp
rclb
mov
inc
push
jg
popf
aas
dec
mov
incl
arpl
xchg
mov
stc
sub
cs
incl
pushf
sbb
imul
ret
jge
sub
mov
push
enter
inc
mov
cmpsb
roll
sub
repz
xchg
leave
ss
jno
loop
or
pop
loopne
mov
mov
dec
jo
std
mov
jmp
stc
aaa
or
movsl
mov
push
push
fwait
aaa
xor
push
xchg
and
ljmp
add
sbb
lods
pop
out
inc
ss
addl
jmp
enter
fsts
dec
or
fcmovnu
mov
xchg
dec
and
sub
cmp
leave
and
sub
decl
mov
pop
pop
xchg
sub
jl
sub
fmull
mov
mov
mov
jmp
mov
bound
das
in
nop
sub
dec
or
or
adc
fs
incl
sbb
hlt
arpl
in
shr
stos
out
mov
xor
jae
cmc
cwtl
mov
mov
ljmp
lret
out
mov
or
loope
in
push
xchg
in
es
xor
lret
out
hlt
mov
cmp
cmpsb
and
inc
in
push
lods
loop
adc
pop
repz
lea
call
fsubs
mov
sub
push
mov
popf
lret
es
mov
into
nop
out
and
movsl
mov
cmpsl
or
incl
aaa
mov
dec
mov
iret
imul
xor
jo
mov
call
pushf
call
aas
mov
sbb
pop
shl
icebp
fimull
cmp
push
push
mov
cmpsl
push
notl
aam
dec
xchg
push
out
scas
movsl
outsl
adc
aam
ljmp
enter
mov
mov
inc
int3
jbe
xlat
xor
mov
incl
dec
jmp
and
mov
js
stc
push
clc
loopne
out
jg
decl
lret
cmp
cmc
mov
mov
loopne
xchg
addr16
lea
nop
in
pushl
pop
aam
insb
and
ret
lods
pop
les
dec
iret
or
mov
jbe
lods
or
and
pushl
jb
shrl
fldenv
loop
les
lret
repnz
mov
or
push
movups
dec
je
insl
dec
bound
xchg
test
adc
dec
sti
xor
pop
stos
loop
rol
inc
mov
mov
mov
ljmp
movsb
mov
mov
cmpsb
insb
mov
push
cwtl
inc
les
iret
add
xor
mov
jmp
popf
sub
mov
fbstp
lods
movsb
lret
clc
fcoml
pop
into
cmp
mov
je
cmp
add
xor
in
xchg
xchg
sub
bound
ret
clc
gs
dec
js
adc
cli
ljmp
cld
fdiv
psubq
fbstp
rorl
pop
and
fisubl
call
mov
aaa
hlt
ret
mov
xor
sbb
daa
ljmp
add
mov
std
mov
inc
mov
mov
push
cmpsb
adcl
sub
push
push
push
xlat
jno
push
mov
loopne
shll
addl
into
dec
lods
cmp
lcall
mov
cmp
fmull
jp
xchg
fldl
sti
lret
outsb
jle
pop
lret
fwait
arpl
mov
and
das
sub
and
repz
sub
shrb
stc
mov
ljmp
hlt
mov
pop
inc
lods
enter
pop
popf
rol
fiaddl
shll
ljmp
loope
inc
clc
out
cmc
loop
test
mov
pop
or
add
cmp
push
movsl
incb
adc
sbbl
std
std
xchg
mov
std
lea
or
shrl
stos
sub
ljmp
add
repz
ret
cmp
and
and
sti
shll
and
imul
or
push
mov
cmpsb
shlb
aad
xchg
loope
idivl
mov
jmp
shr
mov
int
pop
mov
das
in
lret
pop
int
sarl
dec
lret
ss
lods
push
cmc
sbb
cmc
out
jp
add
cmp
pop
push
push
mov
lcall
xchg
mov
popa
shrb
xchg
gs
push
jmp
push
push
mov
pop
out
incl
cld
bound
add
popa
adc
adc
jp
test
pop
dec
sub
mov
jo
mov
decl
jno
mov
das
imul
hlt
jmp
lods
sub
out
xchg
leave
dec
mov
adc
inc
jle
lahf
mov
inc
fsubrl
or
and
add
idiv
jg
call
cmpsb
cwtl
add
xor
outsb
lock
push
sbb
jg
aas
jo
adc
inc
fnstsw
fucompp
push
pop
and
add
jp
jg
pushf
inc
or
jl
cli
scas
mov
jo
jbe
das
push
sbb
test
pushl
sbb
int
push
jmp
mov
xchg
pop
sub
jg
ljmp
test
lods
push
push
cmp
shr
xchg
adcb
popa
mov
fbld
mov
je
out
mov
dec
mov
push
dec
jmp
sub
mov
lods
incl
jg
loopne
adc
movsb
inc
jae
push
cmp
or
insb
or
lcall
nop
lret
mov
sbb
cltd
in
push
mov
je
pushl
cmc
popa
je
push
fldenv
clc
xchg
mov
sub
dec
loopne
fcmove
divl
mov
movsl
add
and
stc
jne
jg
decl
loopne
or
and
sbb
fisttpll
push
pop
xor
loopne
pushl
mov
int
ret
test
test
mov
or
addr16
push
fists
xor
pop
std
test
loop
xor
sahf
aam
inc
xchg
mov
divl
pusha
dec
cmpsb
fcos
jg
cwtl
lcall
cmp
mov
mov
mov
jns
mov
dec
xchg
sbb
jmp
dec
into
pop
cmp
gs
mov
mov
fmulp
imul
pop
push
mov
fstpl
push
add
loop
aaa
cli
push
lock
es
aam
sbb
stos
or
cli
sbb
add
mov
insl
mov
mov
inc
das
pop
fisttps
push
adc
push
fcomp
xlat
enter
jp
iret
sbb
bound
arpl
cltd
insl
cli
das
add
in
ss
js
jnp
ret
lcall
and
loopne
xlat
inc
pop
test
icebp
pushf
lods
aam
ret
into
fwait
mov
jmp
cmp
scas
movl
dec
cmp
mov
fidivrs
jmp
loop
or
jg
insl
aas
in
sbb
pop
or
add
jae
fwait
lds
dec
ljmp
icebp
ds
cmpb
dec
jnp
std
xchg
int3
inc
sbb
int3
jp
adc
or
inc
add
xorb
inc
push
in
out
incl
pushf
or
mov
stos
xchg
enter
test
cmp
bound
add
mov
test
mov
jmp
dec
xor
cmp
dec
sub
decl
fbld
mov
sub
loopne
fucomip
or
jns
sti
popa
jne
dec
inc
aaa
jg
psubw
dec
jecxz
pop
lock
xlat
and
push
add
mov
decl
inc
push
push
imul
or
add
aaa
push
mov
in
inc
jle
cs
mov
jns
ret
insl
xchg
inc
dec
mov
mov
fcompl
aad
push
imulb
jae
add
and
lret
insl
adc
cmc
jmp
inc
mov
aas
flds
out
jbe
xchg
xchg
enter
jg
jg
movsl
sub
clc
popa
ret
repnz
pop
xchg
mov
push
pop
lret
call
nop
push
push
in
mov
repz
fists
xor
daa
bound
sbb
pop
fisttpll
negl
xorb
dec
inc
dec
sarl
inc
add
dec
inc
xor
add
dec
xchg
pop
add
cmc
aas
add
out
movb
scas
pop
mov
rcrl
jp
jmp
ss
divl
jmp
fimull
out
dec
mov
dec
mov
insb
fbstp
dec
popa
sub
sub
jg
call
xor
dec
jbe
xchg
pop
arpl
das
call
adc
pop
stos
mov
jns
jge
cmpsb
jg
arpl
mov
orb
out
mov
cmp
hlt
pop
jg
incl
pushf
lcall
pop
mov
push
lock
shl
rcr
inc
mov
dec
aam
icebp
cwtl
icebp
leave
or
jp
lcall
pop
jbe
pop
sbb
aaa
repz
push
push
into
jecxz
sub
inc
jmp
adc
call
bound
pop
clc
mov
push
decb
jnp
mov
mov
cmc
sub
xchg
incl
jae
ret
cmp
jge
popf
loopne
xor
inc
adc
fcmovne
les
jecxz
adc
and
int3
mov
jmp
add
pop
cld
ljmp
aam
cmp
or
add
icebp
xor
ret
jg
mov
push
push
mov
sbb
sub
mov
shr
int
mov
sub
mov
push
sub
fiadds
test
idiv
xchg
jg
jbe
cmpsl
mov
cld
sbb
daa
xchg
hlt
int
or
lock
incl
inc
arpl
gs
aas
sub
cmpsb
subps
push
push
adc
sbb
decl
or
jae
cmpsb
loop
lock
cmp
mov
xchg
lea
out
pop
loopne
pop
dec
push
mov
cmp
fmulp
js
sarl
hlt
dec
xchg
in
loopne
cmp
jne
or
adc
add
decl
mov
add
mov
jb
pop
mov
pop
xor
mov
out
mov
add
xchg
adcl
scas
xor
pop
test
mov
lcall
pop
push
pop
sahf
bound
jb
inc
js
lds
or
out
xor
cld
andl
sahf
sub
push
test
int
jecxz
test
lret
mov
adc
rol
sub
cmc
and
sub
pop
dec
xor
inc
cmc
pop
loop
movsl
mov
pop
aas
les
pop
push
or
pop
ljmp
imul
repz
dec
in
call
lock
push
pushl
clc
popf
lcall
cmp
int3
add
mov
and
decl
xchg
adc
dec
movsb
decl
mov
xchg
xor
test
cltd
dec
sub
nop
or
test
lahf
imul
mov
mov
xchg
test
orb
test
movsb
mov
add
std
ljmp
cld
push
inc
jae
fisttpll
mov
inc
outsl
ljmp
and
sub
xlat
add
inc
cmp
jne
shll
popa
ss
arpl
call
fcmovne
test
je
ja
outsl
dec
addr16
add
or
out
cmp
xchg
lods
jle
jg
ljmp
cmp
push
aaa
fadds
push
mov
mov
add
andb
setbe
push
xor
xor
clc
mov
sub
aad
xchg
sbb
outsb
test
jns
pop
inc
out
dec
mov
repnz
in
lods
rep
mov
fs
test
inc
xor
dec
idiv
scas
fmull
ja
adc
mov
or
clc
cwtl
dec
stos
jb
mov
inc
popa
or
or
sti
mov
icebp
jns
fildl
sub
fwait
lods
ss
insl
pop
negb
out
cbtw
rolb
and
cwtl
or
ret
insb
andl
jno
inc
aam
xlat
lods
iret
cld
jmp
test
nop
xchg
stos
jno
ljmp
incl
mulb
clc
aad
cmp
dec
adc
mov
push
inc
jmp
orl
jae
xor
push
mov
cld
sbb
test
pop
ljmp
rcrb
pop
js
lea
les
fucomip
call
loop
mov
add
xchg
js
nop
loop
fmul
mov
jmp
pop
js
inc
push
sub
iret
lock
jne
mov
adc
mov
mov
jmp
pop
bound
jecxz
das
lret
mov
nop
outsl
mov
mov
cld
ret
rolb
repz
mov
mul
mov
incl
add
mov
lea
hlt
cld
xor
mov
xor
aam
lcall
shlb
je
dec
mov
jmp
mov
ljmp
push
jbe
lods
push
or
sbb
fidivs
jmp
loope
lret
and
mulb
std
aaa
mov
cli
test
mov
mov
mov
sbb
inc
cmp
pushf
push
xchg
and
test
nop
roll
cmpsb
lcall
shr
sti
ljmp
adc
das
mov
jg
cmp
das
mov
stos
arpl
fcmovnu
sarl
icebp
sub
pop
stos
jle
scas
push
sub
sub
mov
mov
mov
cmp
dec
prefetch
jmp
and
lcall
shll
dec
sbbb
in
call
jo
jo
pop
pop
jle
or
xchg
out
and
mov
decl
call
push
or
dec
jl
mov
or
pop
repnz
pop
ljmp
fildll
mov
push
jbe
insb
sub
push
flds
mov
sti
pop
dec
insl
adcl
and
das
icebp
jg
or
imulb
jmp
dec
mov
mov
mov
pop
call
xchg
int
insl
push
xor
in
push
ss
call
cmp
fldcw
in
cli
imul
stos
cs
cmp
push
call
insl
mov
decl
mov
mov
inc
je
lret
push
xchg
adc
add
into
loop
lcall
arpl
cltd
jne
push
inc
add
sub
pop
repnz
scas
movsb
or
mov
cmp
xor
sbb
sbb
js
push
and
mov
jl
sarl
cmp
lods
call
jb
push
sub
or
leave
jecxz
call
push
fwait
rolb
bnd
dec
std
lods
pop
xchg
xor
mov
stos
hlt
out
ljmp
icebp
dec
outsb
les
xchg
sub
dec
mov
dec
div
cltd
out
dec
fdivr
movsl
incl
loope
loope
push
inc
xor
and
lods
lcall
fadd
mov
sub
push
lods
and
lahf
clc
push
lock
call
add
add
add
mov
adc
call
ljmp
dec
fnstenv
mov
push
push
xor
leave
les
loope
push
lret
xchg
adc
lcall
dec
inc
fists
and
imul
stc
and
sub
lret
es
inc
subb
mov
cmpsl
adcl
lcall
cmpb
push
sbb
sub
jg
and
cmp
movsb
inc
jecxz
push
pushf
js
ljmp
dec
sbb
scas
add
mov
ljmp
jg
inc
xchg
xor
scas
cld
mov
add
and
xchg
fyl2x
call
cli
push
cltd
lret
je
out
test
xchg
in
lds
jecxz
fnstsw
jge
xchg
js
xchg
pop
mov
imul
cmc
cmp
leave
int3
jecxz
push
and
call
rol
jns
subb
call
ja
ljmp
fisttps
sub
loop
jmp
aas
insb
sub
sub
xchg
sarl
add
and
dec
ljmp
fcomip
mov
test
adc
jle
subl
cmpsl
fbld
rorb
arpl
ja
dec
or
mov
dec
push
ljmp
inc
jno
add
dec
dec
push
scas
push
and
dec
ret
outsb
lds
dec
stos
inc
fucomip
call
jne
data16
push
call
cwtl
sti
lcall
cmp
push
lcall
adc
add
cmpsb
rcll
xor
rclb
pop
xor
push
enter
ljmp
pop
pop
sti
in
leave
std
xor
call
cmp
add
pop
in
out
notb
pop
js
call
and
iret
dec
add
jnp
call
call
push
insb
loop
mov
stos
xlat
jb
jno
or
inc
insl
repnz
push
inc
repnz
lret
leave
mov
bound
dec
mov
add
mov
and
decl
mov
cmp
insl
jecxz
repnz
pop
adc
pop
xchg
ret
push
call
lds
insb
lock
fistl
outsl
dec
je
push
push
popa
call
xchg
sub
push
sub
and
and
sbb
pop
inc
dec
test
or
jg
loop
aam
idivl
push
mov
ret
ret
in
outsb
xchg
xchg
xor
call
add
jmp
int3
fwait
push
shlb
sbb
push
jg
and
xchg
cli
mov
movsb
add
fdivrl
push
rclb
mov
add
pop
cld
or
das
inc
mov
cmp
lahf
imul
jg
lock
or
push
mov
mov
mov
mov
cmp
fsub
loopne
inc
repnz
inc
decb
mov
adc
pop
mov
cmpsb
push
test
push
fdivrl
test
loop
xchg
jg
cmp
and
outsl
xchg
rcl
repnz
loope
mov
andl
push
dec
fdivs
sti
sub
es
mov
jg
shrl
and
dec
lret
xor
ljmp
sub
xchg
add
inc
cmp
stos
add
out
shl
mov
mov
js
imul
cs
xchg
mov
jmp
inc
sbb
mov
fs
pop
test
lds
sarl
pushl
xchg
mov
mov
sub
mov
fdivrp
push
or
nop
outsl
mov
sbb
mov
aas
mov
cld
mov
and
inc
loope
fdivp
xor
dec
mov
xchg
clc
insb
stos
pop
dec
mov
call
jae
enter
ficoms
mov
push
mov
aam
jb
cmpsb
sbb
call
cli
sub
or
or
mov
pushf
stos
mov
iret
das
rol
xor
jg
adc
adc
movsl
stos
fisttpll
sub
pop
sbb
add
sub
mov
lcall
inc
popa
xchg
adc
outsl
adc
pop
jecxz
cmpsb
fsubr
cld
ljmp
iret
fs
mov
or
insb
mov
inc
add
mov
and
cmp
cmpsb
jne
dec
dec
and
pop
adc
leave
lret
add
imul
cmpsb
sbb
in
popf
daa
mov
sub
mov
and
f2xm1
subb
js
inc
push
das
ret
push
jb
jl
cmp
bound
mov
in
cmp
lret
xor
hlt
fcompp
shl
movsl
push
outsb
mul
mov
mov
ret
popa
dec
pop
mov
inc
mov
repz
add
je
mov
pop
dec
cmp
ret
cmp
cmp
sahf
fdivr
decl
movsl
movb
inc
or
pop
and
in
add
xchg
cmp
xchg
add
jne
dec
pushf
mov
pop
xlat
push
in
jg
shlb
fwait
inc
jo
push
xchg
or
stos
in
jne
push
shrl
fldcw
pop
pop
mov
pop
aam
or
mov
jo
ja
push
jecxz
bound
or
and
jg
ljmp
mov
cwtl
sub
jnp
pop
adc
ja
jg
jns
sub
ljmp
add
adc
fildll
mov
or
or
add
std
das
cld
inc
out
not
pop
mov
xchg
imul
testb
pushl
das
std
lods
mov
sbb
mov
sarb
in
dec
jp
lcall
mov
stos
movb
adc
inc
mov
pop
or
push
jbe
cmp
jge
xlat
cmp
rcrl
dec
cmc
lock
shlb
hlt
mov
or
lea
cmpsl
jle
lret
mov
mov
sub
out
adcl
pop
sub
dec
ss
mov
jg
cmp
pusha
add
cld
push
addl
sbb
int3
aad
adc
mov
or
sbb
cld
jmp
mov
aad
outsl
outsb
cwtl
lret
out
mov
aaa
pop
jne
mov
and
sbbb
mov
test
xchg
pop
out
pop
lods
jecxz
fdivr
jbe
das
sbb
jae
cltd
sbb
mov
xor
inc
outsl
aam
movsb
lds
jmp
scas
mov
out
pop
push
inc
movsl
mov
sidtl
cmp
pushl
xor
sbb
imul
mov
test
cmc
inc
add
pusha
loop
jg
inc
dec
testl
push
jb
lods
cmp
jne
cmp
dec
js
jmp
aad
xorl
ss
jo
js
cmp
incl
mov
dec
pop
test
pop
int
push
aam
ljmp
jb
xchg
add
dec
and
aam
or
xor
xor
orb
inc
fcoms
dec
inc
mov
fiaddl
pop
int3
xor
popf
test
or
lods
dec
mov
call
xchg
insb
mov
mov
inc
fcomp
lahf
lcall
incl
mov
clc
mov
xchg
in
sbb
cli
push
xor
mov
mov
sub
mov
les
enter
sub
and
add
mov
incl
data16
cwtl
call
dec
sbb
dec
or
incl
cmp
test
mov
and
sub
push
add
xor
lcall
clc
lret
push
adcl
mov
dec
inc
and
mov
cli
ljmp
pop
cwtl
mov
psubusb
fstps
fisttps
into
in
sbb
je
mov
dec
stc
jle
in
jg
xor
inc
or
lods
in
je
lret
xchg
cmpsb
jecxz
gs
rorl
lcall
loope
lods
movsb
xchg
xorb
call
inc
push
push
fs
das
icebp
or
loopne
fistpll
je
or
sub
push
push
mov
lcall
push
cmp
and
sbb
push
aad
nop
test
adc
enter
mov
mov
scas
lods
pushl
call
fimuls
adc
pop
pop
cwtl
data16
ud0
add
mov
xchg
add
or
test
and
pop
ret
imul
mov
repz
push
mov
imul
jp
cmp
or
cmc
insl
cli
mov
sbb
jecxz
lea
int3
xor
sar
jg
cmp
mulb
iret
fadds
stos
call
xchg
outsl
dec
xchg
test
jmp
push
push
jo
ds
xlat
inc
cmpsb
enter
jmp
inc
flds
test
lods
ds
lods
or
cmp
and
dec
pushl
out
mov
cmp
cmp
call
sbb
daa
jae
decl
jl
inc
inc
das
add
dec
mov
inc
mov
arpl
in
incl
cmp
fcompl
pop
xchg
add
int3
in
sbb
negl
das
insl
lock
testb
mov
call
aad
xchg
into
pop
movsl
sarl
xlat
jno
out
xchg
add
inc
mov
mov
mov
ljmp
sbb
mov
stc
pushl
outsl
insb
shlb
adc
mov
ret
cmp
addb
repnz
int
pop
jae
out
dec
jmp
jns
xor
decl
fucomi
xor
push
jnp
in
jmp
aaa
push
ja
jl
or
ljmp
xchg
or
shrb
fs
stos
arpl
cmpsb
dec
dec
dec
sbb
jg
ljmp
ret
rcr
adc
mov
sti
in
cltd
aas
adc
mov
mov
xor
push
push
ljmp
or
js
add
dec
adc
mov
bnd
push
jns
jno
push
or
xor
outsl
popa
jno
icebp
or
lods
aad
call
push
std
mov
xchg
dec
dec
push
pop
call
lret
mov
xchg
lock
push
das
icebp
es
addr16
mov
sub
pop
push
or
dec
add
ret
adc
push
test
pop
dec
jmp
xchg
ljmp
or
ja
dec
hlt
mov
sbb
enter
sub
fimull
test
sahf
adc
incl
fiaddl
xchg
cmp
inc
push
push
lcall
push
repz
mov
cmp
fstpl
dec
fcompl
out
test
add
mov
mov
mov
add
push
repz
sbb
faddl
fdivrs
sbbl
shrl
fucomip
lcall
dec
nop
in
xor
or
push
ss
inc
add
aam
insl
lods
and
outsl
lock
call
xchg
test
sub
ret
adc
or
mov
loop
inc
pop
or
insb
mov
push
pop
ljmp
add
cmpsb
mov
push
mov
lret
push
cmpsb
out
inc
call
outsb
push
lret
pop
clc
push
cld
jmp
and
iret
mov
dec
rcrb
jne
or
inc
push
inc
scas
add
adc
dec
xorb
jge
es
dec
bound
hlt
ljmp
inc
pushf
push
inc
cmp
test
dec
adc
popf
dec
std
xchg
cli
in
les
push
scas
jne
pop
push
lods
and
push
pushl
cmpsb
push
jmp
push
imul
stc
mov
xchg
sub
call
push
jl
leave
cmp
xchg
in
cmc
rcr
mov
xchg
push
mov
add
lret
xor
and
mov
call
pop
push
scas
add
sahf
cmp
in
movb
mov
dec
sub
pop
push
inc
test
cs
lahf
dec
push
cli
xor
sbb
rcll
testb
stos
adc
call
and
pop
sbb
in
xchg
xor
xchg
add
and
test
ljmp
lock
xor
in
out
sbb
testl
push
outsl
daa
adc
mov
imul
dec
xor
sbb
add
outsl
sub
fldt
aam
inc
inc
adc
mov
int
pop
mov
inc
bound
inc
cmp
bnd
das
lock
inc
addr16
mov
sbb
inc
inc
outsl
stos
mov
test
sarb
adc
call
lret
or
jae
mov
mov
xchg
jg
adc
push
and
test
ds
outsl
mov
das
hlt
inc
aad
andl
push
test
les
orl
rclb
aad
xchg
jb
adc
decl
jnp
dec
lds
orb
call
lahf
movb
out
dec
pop
test
sbb
inc
mov
sbb
hlt
push
fisttpll
lret
and
jmp
push
mov
xchg
insl
xchg
fisubl
jecxz
dec
cmpsb
imul
ss
out
lods
jno
pop
int
fisttps
iret
orl
xor
pusha
xor
jmp
cmp
pop
scas
jmp
lret
pushf
mov
mov
gs
incl
push
fadds
adc
mov
lock
jmp
jmp
cmpsb
and
pop
fcomps
adc
or
pop
mov
inc
loop
jg
call
jne
clc
out
lea
outsl
nop
ja
add
cwtl
out
dec
insb
iret
mov
push
fisttps
jmp
jb
test
test
and
lock
stos
jg
xor
and
flds
inc
pop
testb
call
lds
push
jo
inc
or
lcall
icebp
add
cmp
in
icebp
jmp
imul
mov
add
vmovd
lock
mov
ljmp
inc
jnp
push
test
aaa
inc
roll
mov
mov
rcl
jns
scas
icebp
call
mov
mov
inc
lea
mov
andb
jbe
inc
or
incb
pop
push
sbb
or
xor
mov
inc
inc
scas
lret
dec
test
je
jae
mov
dec
daa
nopl
pushf
pop
imul
sbb
jb
jnp
pop
enter
jae
add
cli
push
and
dec
incl
push
xchg
sti
mov
aam
nop
je
mov
adc
pushl
push
mov
in
enter
jle
inc
jne
sub
cld
dec
cmp
in
dec
push
jge
jne
jl
sarb
sub
lahf
jmp
adc
into
pushl
cli
js
pushf
mov
dec
rcrb
inc
lret
xorb
leave
mov
pop
dec
and
scas
xor
xor
xchg
shl
jle
mov
fbld
push
shrl
insl
mov
in
fdivrp
outsl
jge
loopne
jnp
inc
add
add
add
xchg
xchg
cs
inc
imulb
dec
decl
mov
in
xchg
cwtl
jae
sbb
and
adc
decb
lea
pop
mov
inc
scas
add
and
rep
enter
call
adc
jbe,pn
cli
mov
hlt
xchg
sbb
add
insl
data16
jno
fstpt
dec
mov
in
add
dec
inc
mul
loop
cmp
lahf
testl
mov
mov
add
xor
xor
sbb
inc
sbb
repz
ljmp
std
pop
push
xchg
xchg
popf
or
outsl
idivl
sbbl
lea
arpl
inc
call
pop
ja
mov
push
mov
rorl
jae
adc
jbe
adcl
xor
out
sbb
decl
mov
mov
fwait
stos
stos
cld
jle
adc
shlb
lcall
jns
cwtl
pop
inc
out
mov
rclb
aaa
adc
jmp
scas
enter
out
pop
adc
jb
mov
call
sub
sub
incl
pop
push
inc
lock
pop
dec
adc
inc
ret
into
clc
jmp
mov
rcr
xchg
jb
das
push
outsb
andb
sbb
fistps
push
add
mov
jmp
cmpsb
jle
mov
or
mov
sub
inc
nopl
icebp
cld
and
cmp
add
xor
pop
mov
pop
clc
in
je
fdivrl
mov
and
jg
push
cltd
std
adc
jge
jbe
push
cmp
pop
sbb
lock
jle
call
pop
enter
mov
adc
and
scas
mov
and
daa
xchg
or
aam
in
test
push
insl
sahf
inc
sarl
outsb
add
hlt
mov
adc
insb
xor
sub
repz
inc
mov
std
jne
pop
popa
sarl
jb
mov
fwait
sahf
out
jns
mov
mov
sar
leave
cwtl
das
adcb
cmc
mov
pop
or
aas
insl
int
incb
das
inc
aam
mov
into
les
lock
adc
insl
mov
or
sbb
sbb
mov
push
push
loop
jmp
push
in
mov
pop
sub
mov
aad
clc
mov
fcomip
pop
xor
jae
pushf
mov
scas
pop
call
mov
sbb
jbe
stos
mov
mov
pusha
ret
dec
jno
sub
xchg
andl
lahf
testb
popa
data16
jg
jg
add
je
mov
hlt
in
cmp
cltd
pop
sbb
fisubs
jecxz
sbb
shll
fnstenv
push
imul
add
mov
call
jmp
vsqrtss
outsb
shr
push
sub
add
mov
int3
add
fs
cli
xchg
shlb
pop
jno
cmp
adc
adc
jg
mov
enter
cmp
mov
cmp
ret
mov
mov
sti
mov
adc
sahf
mov
enter
sub
inc
push
and
and
mov
xchg
enter
add
iret
xchg
pop
fimull
jne
or
movsl
popf
cmp
loop
jecxz
pop
jl
add
pop
lea
addl
std
call
push
push
into
adc
das
cmpsl
rclb
test
add
out
inc
or
outsl
jo
push
lcall
iret
mov
iret
das
sti
stc
sbb
decl
in
je
cmp
clc
sbb
pop
decl
or
jno
fsts
nop
add
dec
pop
ss
decl
xchg
fnstsw
in
out
jge
cmp
call
scas
divb
sub
leave
mov
repz
or
shrl
dec
add
xchg
lods
cltd
mov
imul
rclb
fsub
and
xchg
pop
fstpl
movsl
stc
call
ljmp
lock
dec
dec
adc
push
cli
xor
push
xchg
fsubrl
clc
leave
decl
sbb
arpl
mov
and
mov
mov
dec
jnp
movsl
cmc
sub
fistpll
inc
scas
loope
xor
pop
dec
popa
scas
jo
lea
push
rolb
sarb
lods
daa
cld
or
inc
xchg
inc
jge
xchg
jae
jle
inc
pop
loope
pushl
mov
in
adc
cltd
sbb
call
cld
push
pop
jle
xor
repnz
rorl
repnz
js
fst
decl
rol
cmp
stos
dec
add
push
adc
fnstenv
lods
mov
fildll
mov
xchg
sti
in
dec
jecxz
js
fisttpll
filds
sbb
xchg
fwait
movsb
jno
aaa
iret
insl
add
outsl
cld
outsl
sub
mov
jb
aas
aaa
movsl
adc
lcall
cld
rcrl
sti
loop
lahf
mov
add
insb
jle
cmp
es
add
cmpsb
fidivl
ss
divps
mov
or
and
or
and
sbb
pop
xchg
mov
mov
cmp
push
call
rcl
bound
movsb
jge
xchg
adc
cmp
jge
jae
cmp
sbb
adc
mov
fs
xchg
mul
push
xchg
jae
cmpsb
lahf
test
ss
repz
cmc
mov
mov
dec
adc
add
mov
add
je
sub
jmp
dec
mov
or
ficoms
imul
mov
push
aam
int3
dec
aas
xchg
mov
pop
mov
shrl
lahf
or
adc
push
in
scas
subb
sbb
es
pop
sub
xor
data16
das
std
filds
fcmovnb
sub
mov
add
push
call
mov
pusha
stos
mov
push
jle
jne
lods
pop
test
sub
in
jmp
adc
add
pop
cld
pop
jb
cmpsl
dec
subl
pushl
pop
lds
lds
xchg
faddl
ja
xchg
inc
pop
mov
push
data16
call
push
and
stos
cmpsl
stc
into
cmp
cs
lret
in
add
mov
mov
sbb
inc
mov
sub
mov
pop
pushf
dec
inc
stos
in
pop
pop
add
std
pop
mov
stos
aaa
jb
int3
add
ljmp
fmuls
insb
stos
mov
add
mov
mov
lcall
imul
xchg
imul
xor
jno
adc
decl
scas
sub
xor
lret
xor
lcall
test
mov
dec
pop
imul
pop
add
cmp
ja
in
repz
arpl
notl
or
push
and
call
aam
and
sub
sarb
inc
and
js
push
outsb
andb
hlt
jb
jb
cmpsb
pop
shrb
mov
mov
decl
or
popa
xlat
outsl
xor
mov
shl
leave
mov
pop
test
mov
test
scas
pop
or
pop
mov
pushl
cs
jno
out
or
mov
pop
sbb
sbbl
mov
jbe
in
sbb
call
pop
xor
adc
mov
and
incl
das
arpl
jne
fidivrs
jle
rclb
cmp
loop
fcmove
nop
mov
test
inc
es
loopne
jg
outsl
add
lods
call
stc
mov
dec
dec
bound
cs
imul
jg
mov
cli
push
pop
mov
pop
xor
adc
add
fistpll
test
xchg
inc
xchg
iret
cwtl
and
fcoms
xlat
pop
push
dec
out
incl
add
rolb
jno
lods
pusha
push
xchg
push
inc
push
mov
add
inc
cmp
mov
dec
es
adc
inc
jbe
add
push
lret
sarb
jne
push
adc
incl
xchg
aad
out
pmulhw
leave
ds
ljmp
add
sbb
repz
mov
pop
push
jnp
incl
in
dec
cld
inc
push
fsubs
movsb
xchg
ficoml
ds
incl
mov
mov
sarl
pop
xor
and
decl
xchg
add
stos
xlat
leave
and
test
jge
mov
xchg
and
andb
xchg
fbstp
pop
call
jl
je
mov
inc
lock
addr16
test
dec
xor
outsl
lock
hlt
push
sub
hlt
jmp
add
test
adc
pushl
cmp
imul
lods
or
pop
js
or
push
cmpsl
aaa
push
xor
lret
lods
loopne
lea
shl
mov
cpuid
stos
dec
jge
out
xor
ljmp
or
mov
int3
clc
negb
fbstp
inc
cmp
mov
fldlg2
mov
icebp
sub
push
test
cli
mov
jmp
pop
xor
sub
push
icebp
xchg
cmp
mov
test
jg
incl
popa
adc
push
cmpl
cltd
push
add
ljmp
divl
imul
cmp
lods
scas
icebp
adc
jg
mov
movsl
xor
movntq
xchg
test
stos
bound
ljmp
arpl
ret
mov
rclb
mov
jno
dec
mov
scas
or
mov
decl
mov
out
call
call
cs
mov
push
int
movsl
add
pushf
sub
and
adc
cmc
mov
test
xchg
jmp
jo
mov
imul
pushl
mov
arpl
xor
ret
ja
stos
lods
jo
mov
mov
mov
mov
fists
call
jns
jns
mov
mov
mov
and
nop
repz
sub
ljmp
cld
sub
sub
add
ret
push
inc
xor
jne
call
jns
pushl
cli
mov
outsl
fcoms
pop
or
or
adc
jmp
daa
pop
xlat
push
push
mov
shlb
mov
pop
clc
mov
mov
jo
and
mov
jg
and
pop
xor
scas
js
push
addr16
ss
insb
incl
pop
dec
cmp
sbb
ror
jg
or
insb
les
notb
xor
shll
sub
fdivp
pop
es
fldt
std
jmp
inc
jno
mov
sub
cld
sub
ds
ds
aas
out
pushl
call
mov
nop
shll
sbb
les
test
pushf
mov
fs
push
jecxz
cmp
mov
out
lods
adc
pop
push
mov
incl
jge
into
push
enter
xchg
aaa
test
icebp
jo
lcall
xor
xchg
push
mov
aad
out
aaa
nop
and
mov
jno
stos
pop
cmc
imul
bts
scas
out
lcall
add
fdivrs
jb
dec
or
sbb
inc
std
fs
xchg
lods
hlt
mov
jae
pop
pop
or
aam
cmc
daa
pop
sub
xchg
call
aaa
clc
mov
jae
cmp
xchg
cmp
das
mov
pop
or
push
incl
pop
pop
jae
cltd
xor
adc
jmp
out
push
mov
sti
cmp
push
sub
mov
mov
fistps
mov
sub
jae
lahf
mov
lret
jg
xchg
js
data16
test
adc
outsl
hlt
jns
mov
pop
imul
pop
pop
aad
mov
jne
test
push
cwtl
movsl
xchg
lea
pop
jge
fsincos
xlat
push
es
inc
xchg
pop
or
dec
test
movsl
fsubp
xchg
xor
mov
call
cmp
pop
mov
dec
inc
fisttps
dec
xorl
jg
lcall
ret
arpl
lahf
or
jmp
jnp
jns
sub
mov
and
add
shll
sub
sbb
insb
mov
roll
or
cmp
outsb
sarl
lret
das
hlt
pushl
out
or
xorb
popa
into
xor
xchg
lock
fisttps
data16
mov
add
jb
in
jb,pt
test
iret
push
paddusw
ljmp
inc
push
xchg
loopne
fwait
adc
dec
data16
shll
mov
sbb
lods
repz
adc
mov
mov
imul
inc
inc
push
imul
push
sbb
call
inc
cmpsb
test
cmp
aas
sbb
decl
sbb
ds
and
sub
lcall
scas
popa
pop
cs
pushl
xor
in
pushf
stos
pushf
movb
cmpb
xchg
mov
pop
cwtl
sti
pop
test
mov
mov
das
mov
push
bound
cmp
sarb
dec
ljmp
xor
adc
mov
xor
sbb
or
cli
decl
xchg
cmp
jmp
lret
and
and
add
inc
popf
xchg
xchg
lods
sbb
clc
cli
mov
inc
push
leave
ja
dec
mov
insl
jo
les
lea
out
lret
imul
icebp
xor
xchg
push
int3
iret
push
inc
inc
and
jae
mov
call
rclb
sub
or
mov
imul
pop
stos
and
cltd
mov
xor
ljmp
sub
ss
filds
jecxz
pop
outsl
iret
test
mov
cmc
xor
pop
xor
fstp
lea
out
sub
jb
je
or
fidivrs
enter
sbb
jne
dec
push
cmc
jnp
jmp
lahf
jbe
fidivl
mov
sbb
call
jge
mov
mov
push
jge
iret
lock
mov
mov
push
or
and
call
jbe
mov
mov
ljmp
fidivl
enter
clc
call
pop
inc
mov
mov
and
or
sbb
aas
inc
lcall
xchg
sbb
iret
push
lret
or
mov
lahf
fdivr
and
pusha
jl
imul
scas
jmp
fidivl
xchg
std
sub
popa
or
je
xchg
sbb
lods
loopne
mov
dec
std
nop
les
loopne
and
inc
inc
pusha
fbld
movsl
repz
popl
int
lock
push
call
shll
jne
jg
jg
repnz
jmp
pop
movsb
mov
pop
test
jno
incl
rcl
xchg
push
xor
sub
loope
mov
pop
pop
dec
mov
dec
adc
lcall
lret
sub
int3
push
out
and
cltd
adc
jno
sub
and
nop
rcrl
notb
jmp
int
push
mov
xorb
imul
mov
ja
lods
es
out
dec
aad
bound
sbb
pushf
mov
pop
cltd
ret
pushl
inc
mov
and
adc
push
cmp
pop
loope
dec
cld
mov
xchg
nop
test
js
jg
adc
or
es
mov
int
lods
xchg
push
repnz
push
add
out
loopne
and
cmpsb
andl
imul
cmp
mov
sbb
fmulp
adc
cmc
ljmp
imul
dec
mov
mov
add
mov
and
popl
or
test
jl
add
xor
dec
mov
jle
cmpsb
in
fucomip
outsb
push
out
std
int
lods
pshufw
ljmp
push
push
xorl
repz
shrl
xchg
jecxz
test
call
sub
sbb
mov
inc
aas
repnz
stos
cli
scas
mov
test
inc
test
jns
jnp
jo
push
int
pop
dec
movsb
ds
jp
outsb
les
xchg
insb
imul
das
jb
outsb
pop
inc
xor
imul
lcall
pop
dec
xchg
mov
int
movsl
scas
je
jnp
jle
and
push
or
jbe
icebp
xchg
add
xchg
sahf
cwtl
mov
mov
mull
lea
lods
xor
dec
pop
lcall
test
adc
adc
nop
gs
mov
jmp
xchg
pop
xlat
imul
xchg
rcll
jne
pop
xchg
lea
out
insb
dec
jmp
aas
lea
pop
adc
dec
cld
push
imul
adc
add
pop
mov
je
and
cli
pop
ja
pushf
out
std
es
xor
int
fistpl
add
cmp
mov
sarb
xchg
lret
lret
pop
mov
xchg
bound
aad
ja
xchg
mov
jbe
jg
out
jns
daa
mov
or
cmp
cmp
mov
dec
jae
and
sub
repz
sub
jl
cmc
jp
xchg
test
test
jg
pop
xor
mov
cmp
rolb
fiadds
dec
push
pop
cld
sahf
fcomps
test
es
rcll
leave
movsb
mov
jmp
ja
es
repnz
pop
inc
fisubl
mov
jne
outsl
hlt
fucomip
adc
lea
pop
ljmp
ja
xchg
lcall
ljmp
lret
sbb
push
xor
fsts
shll
sar
adc
roll
xchg
imul
pushl
loopne
rcll
rcr
adc
sbb
mov
decl
mov
adcl
add
inc
fucomp
mov
or
stc
jecxz
dec
lahf
enter
into
aaa
out
inc
mov
sbb
jmp
dec
mov
test
jge
hlt
ret
rolb
lcall
repnz
xor
es
int3
outsl
sbb
jg
pop
lcall
in
cmp
mov
jns
jno
negl
mov
add
push
jb
arpl
mov
arpl
pop
dec
mov
mov
mov
lods
pop
pusha
jg
incl
mov
or
push
cwtl
or
pop
push
pop
jp
movsb
jg
lcall
jge
mov
aaa
sbb
arpl
lea
ret
mov
bound
lods
or
call
aas
xor
aaa
stc
test
adc
xchg
mov
cmp
sbb
inc
xchg
movsb
adc
mov
movb
add
clc
or
lods
xor
cmpsb
stos
call
stos
icebp
lea
xchg
jo
outsl
lods
je
xor
lret
xchg
sar
lret
sbb
mov
sbb
cmp
push
and
push
out
aas
hlt
adc
and
mov
inc
pop
cli
loope
mov
pop
jmp
push
decl
sub
lods
sbb
add
mov
push
jmp
pop
out
test
lcall
and
cmp
test
lods
movsl
mov
lods
push
fistps
sti
bound
cmpsb
aaa
push
std
push
decl
pop
pusha
fidivrs
xchg
fistps
dec
sbb
jecxz
jle
decl
int3
insl
add
ljmp
push
aam
incl
js
int
push
lcall
pop
lods
pop
lret
aaa
clc
out
popa
stos
pop
rorl
adc
lcall
mov
fisttps
or
int
and
add
sbb
xchg
mov
sbb
xor
cmp
in
loopne
mov
cmp
pushl
dec
sbb
pop
adc
stos
lret
into
pop
sub
sahf
icebp
add
dec
mov
push
mov
dec
je
lcall
scas
subb
push
mov
add
add
in
sbb
mov
shll
insb
fistps
imul
push
jl
pop
daa
cmp
into
add
stc
divb
jp
mov
int
in
jge
icebp
popa
jle
sub
cli
cltd
std
ffreep
jnp
xor
jae
in
pop
nop
xchg
sbb
ljmp
loop
pop
stos
jmp
fbstp
fsub
inc
mov
lcall
add
xorl
test
sti
pop
cmp
xchg
sti
sbb
mov
fisubl
ret
adc
test
jae
mov
stc
push
mov
in
das
mov
add
sub
mov
inc
hlt
or
in
cmpsl
cld
lcall
std
out
and
lea
pop
mov
adc
dec
in
ljmp
test
jmp
out
int3
pop
mov
ja
sbb
jbe
popf
xchg
loopne
fisubrs
cmc
pop
mov
push
adc
mov
mulb
dec
mov
xchg
in
push
mov
cmp
sbb
lock
addr16
movsb
add
xchg
mov
pop
pop
push
cmpsl
mov
sub
sbb
bound
pop
std
push
pushl
pop
ficoms
ret
cmpsb
aas
jbe
ljmp
xor
scas
jg
xchg
cmp
mov
out
in
inc
stc
loop
jb
mov
hlt
and
add
dec
in
mov
sbb
jne
and
pushl
jns
cmp
add
nop
call
rclb
inc
fld
fsubrl
add
bound
sub
adc
orl
icebp
cmp
cs
inc
dec
or
xchg
pop
subb
pop
jo
lret
cld
negl
lcall
add
pushf
test
mov
push
insl
sbb
lret
insb
mov
push
sahf
repnz
mov
ret
imul
ljmp
jbe
sbb
or
cmp
scas
test
jb
cltd
shlb
hlt
ljmp
lods
arpl
hlt
fwait
cmp
or
xchg
mov
sar
mov
inc
fcmovnbe
cmp
or
jmp
movsb
xchg
call
mov
das
lret
in
jg
cmp
add
add
outsl
cld
pushl
mov
sar
mov
jp
leave
loop
adc
incl
add
pop
aas
adc
sub
cld
jmp
xor
dec
scas
inc
iret
clc
mov
subl
ds
jno
ds
add
imulb
scas
xorb
idiv
mov
and
xor
stc
add
ja
push
fisubrs
sub
sub
or
das
mov
addr16
inc
jb
jg
xlat
sar
rcrl
sub
int
leave
jle
inc
or
adc
ficoml
ljmp
loope
loopne
cli
and
xor
dec
movsl
mov
push
pusha
idivb
daa
inc
sbb
push
mov
je
xor
pop
mov
inc
pop
hlt
je
ret
ja
nop
xchg
into
mov
ficoml
add
jbe
fwait
pop
sub
ret
sbb
sbb
mov
sbb
push
xor
mov
adc
cli
int3
add
popa
pop
push
add
mulb
cmp
adc
mov
mov
std
or
aam
cmc
push
loope
mov
push
clc
mov
cmc
popw
arpl
mov
jmp
xchg
repz
das
insl
cwtl
sub
xchg
mov
pushl
jne
mov
lret
cwtl
repz
lock
mov
dec
flds
incl
decl
call
add
mov
iret
xchg
cld
sahf
cmpl
pushl
mov
gs
sbb
pushf
and
popa
inc
popf
xor
mov
loop
shlb
rorl
pop
int
sbb
scas
or
cmp
jg
icebp
push
jge
lcall
rolb
mov
lods
mov
popa
sahf
mov
jecxz
mov
xor
pop
cli
mov
fwait
bound
popf
cmp
out
ds
dec
adc
cli
mov
lea
push
inc
cmp
inc
cwtl
pop
js
jno
mov
jmp
dec
mov
mov
cltd
inc
push
es
xchg
jecxz
pop
xor
popf
cmp
jnp
sbb
rol
pop
orb
sarb
add
pop
cli
incl
mov
out
sbb
cmp
sub
repnz
or
jecxz
inc
mov
add
cmc
xchg
inc
jg
fimull
jmp
call
out
pop
or
pop
xor
rol
mov
cs
pushl
test
test
mov
xchg
stos
mov
and
arpl
mov
add
inc
pop
cli
xchg
mov
jne
gs
xchg
sar
push
jo
and
fidivrs
ret
ror
pop
cmc
push
enter
sub
mov
adc
sub
cmp
lods
test
and
sub
push
inc
ss
cltd
popf
add
cmp
lods
push
sbbl
xchg
push
lret
dec
mov
jns
loopne
dec
jge
adc
out
add
jne
pop
sub
adc
mov
dec
lret
sbb
jmp
popf
push
inc
punpckhbw
cwtl
shll
sbb
inc
fs
lcall
cs
push
add
pop
gs
push
inc
push
nop
mov
jmp
rclb
inc
and
push
jge
dec
cltd
sub
hlt
loope
mov
cmpsl
xchg
mov
jl
xchg
decl
mov
adc
ds
mov
push
sbb
jmp
hlt
inc
dec
ret
cs
loopne
push
jb
adc
adc
or
fsubs
inc
in
in
sbb
jmp
push
cmpsb
inc
push
jp
aad
pusha
and
movsb
cmp
xor
sbb
mov
or
xchg
loope
lods
je
cs
dec
decl
push
mov
push
test
fld
adc
std
dec
shlb
aaa
imul
jle
in
testl
adc
jle
inc
sbb
fs
mov
idivb
xchg
or
pop
pushl
adc
adc
fimull
int3
jecxz
call
cli
ljmp
and
mov
sti
mov
sub
mov
cli
fisubs
xchg
stos
pop
add
inc
lock
dec
dec
pushl
or
lahf
push
cmp
ja
or
xchg
mov
call
cli
fldcw
jns
dec
add
andl
icebp
dec
idiv
lcall
aam
and
jge
fists
sahf
push
mov
jmp
or
inc
loopne
and
inc
sahf
mov
dec
xor
sbb
pushl
out
ja
incl
sti
cwtl
dec
cld
sub
push
fmul
aam
sbb
test
inc
sub
ficomps
pop
push
mov
mov
pop
jle
or
sbb
mov
dec
jl
int
adc
sbbb
incl
fdivrl
jo
mov
push
cmpsb
sahf
xchg
daa
or
in
outsl
push
pop
rcll
push
mov
xor
sar
imul
dec
xlat
popa
sub
push
movsb
jnp
mov
mov
xchg
sub
dec
cmp
lock
dec
jae
loopne
clc
das
fcoml
in
data16
push
xlat
sub
fbstp
mov
mov
call
les
fs
lea
add
shll
and
incl
jle
inc
mov
inc
cmp
dec
inc
mov
hlt
dec
fnstsw
jmp
subl
sbb
popa
adc
lods
cmpsl
jl
add
xorl
xor
jae
movsl
mov
loop
out
and
cltd
or
sub
push
pop
fs
pushl
mov
cltd
in
repz
xor
jmp
push
push
js
sar
push
test
xor
stc
sub
scas
or
xor
mov
sbb
in
mov
jns
jnp
pop
jae
xchg
dec
jbe
push
sbb
cmp
jp
neg
call
adc
mov
cli
jge
push
ret
dec
mov
pop
ss
mov
lcall
lds
xlat
inc
mov
mov
popf
push
dec
jl
ss
pop
fldt
rorl
lahf
lret
dec
jecxz
clc
test
lahf
push
sbb
sub
push
cltd
aaa
pop
push
adc
cmc
stos
in
cmpsb
stos
test
xlat
fwait
adc
ja
fnstsw
jg
cmpsb
sbb
adc
fcmovnu
inc
mov
xchg
lret
je
clc
pop
cli
push
insb
xor
push
out
sahf
ret
cmp
ret
adc
push
mov
enter
pop
sbb
jg
jg
es
popa
mov
mov
xchg
sarl
aam
mov
push
stc
loope
xlat
and
mov
xor
or
jl
xchg
imul
inc
push
mov
cmpsl
ret
lret
idivl
jg
mov
sbb
fs
pop
inc
in
mov
subb
test
mov
cmp
pop
jle
dec
cmpsl
aaa
lods
cmp
in
bnd
decl
dec
pushf
outsb
or
sti
loope
jmp
or
sub
xchg
lods
cli
inc
xor
popf
scas
add
xchg
sub
and
icebp
lcall
pop
xlat
cmp
and
scas
jl
movsb
into
sbb
in
jae
lcall
add
pop
fiaddl
nop
cmp
pop
insl
aaa
ud0
and
mov
jle
fistl
cld
pusha
mov
clc
js
sarl
cli
mov
add
jne
ror
push
add
fstps
adc
jl
jo
and
xor
test
pop
js
test
lret
mov
mov
jmp
mov
mov
jge
adc
dec
xor
adc
mov
xchg
call
jg
clc
sti
pop
cli
pop
sbb
out
ljmp
or
cli
jb
dec
cld
jge
outsb
nop
add
fistps
cmc
call
mov
xor
or
jge
lcall
sar
scas
lea
jge
dec
xor
sbb
aaa
clc
or
int
nop
pop
sbb
or
mov
into
jnp
mov
ljmp
mov
add
incl
int3
data16
jecxz
and
in
mov
sub
dec
lods
jo
out
mov
add
xor
xchg
cli
adc
adc
mov
insl
xchg
push
outsb
jg
or
mov
cmp
into
xchg
pop
pop
push
aas
xor
aaa
clc
mov
test
mov
loope
jle
and
incl
roll
leave
mov
sub
js
test
in
fists
aaa
mov
inc
cltd
jmp
add
jg
cmpb
jno
rcrl
les
lcall
sbb
loopne
std
ror
rol
sub
mul
sbb
push
sub
xchg
add
call
mov
popa
mov
and
inc
xor
pushf
add
sub
lret
lcall
rol
dec
stos
ror
or
loopne
ljmp
je
xor
add
sbb
std
mov
pop
jge
push
outsb
lods
fiaddl
jl
xchg
xor
aaa
inc
adc
dec
into
sub
and
jle
sub
xadd
int
js
dec
enter
clc
fistps
lret
jp
cmp
int
mov
push
lea
pushl
mov
or
out
or
les
insb
out
adc
mov
clc
fildll
fndisi(8087
inc
sarb
imull
cwtl
test
push
sbb
arpl
je
lret
sahf
dec
jmp
ljmp
add
loope
mov
jo
nop
cmpsl
push
int
pop
aas
xchg
stos
ljmp
adc
aad
addr16
sti
mov
in
out
mov
aas
es
and
push
gs
dec
push
push
or
push
adc
jecxz
mov
fldenv
popa
or
cmp
test
mov
jg
xchg
add
jbe
mov
inc
jg
push
inc
lret
push
sbb
jno
hlt
call
idivl
mov
push
jne
mov
push
outsl
inc
mov
pop
and
sub
outsl
insl
dec
outsl
jmp
jg
test
cli
push
jmp
imulb
xchg
cmp
dec
test
sbb
hlt
incl
sub
adc
cmp
arpl
push
xchg
stos
jecxz
xchg
data16
incl
ret
jl
and
lcall
xor
movsb
imul
ljmp
push
lock
adc
pop
dec
xchg
fwait
or
and
mov
or
jecxz
or
decl
jae
insl
mov
and
dec
sbb
daa
jb
call
pop
mov
imul
icebp
insb
in
scas
pop
aaa
push
repz
xor
fstp
sub
jne
mov
in
es
mov
insl
inc
inc
and
pop
inc
mov
in
lock
pop
mulb
inc
cmp
and
in
adc
pop
jge
sub
nop
dec
push
scas
js,pn
xchg
jge
jg
dec
mov
ja
push
adc
mov
les
int
rorb
dec
xchg
sub
jg
mov
mov
mov
dec
add
cmc
push
ljmp
in
mov
pop
inc
lea
imul
jmp
dec
and
ljmp
cld
decl
jo
or
and
mov
push
in
ja
mov
xchg
jg
add
cmp
mov
into
adc
loop
lret
in
rcrb
dec
xor
pop
jmp
out
mov
fnstsw
cwtl
xor
in
out
xchg
pushf
fwait
dec
outsb
xchg
ss
aaa
int
mov
xchg
out
jg
jmp
repnz
xchg
inc
hlt
pop
inc
jae
fistpl
adc
clc
mov
lds
int
add
sub
inc
cmpb
hlt
int
xchg
daa
aas
mov
incl
loope
jno
repnz
aam
lcall
movsl
jmp
and
mov
xor
call
lds
adc
cmpl
mov
adc
jmp
mov
mov
mov
mov
jle
sub
cs
jmp
fdiv
pusha
jne
push
pop
imul
pop
fs
sub
sti
inc
js
mov
in
pushf
out
push
ja
xchg
xchg
addb
jmp
int
pop
movsl
movsl
fiaddl
lahf
push
mov
divb
sbb
ret
jmp
ret
es
das
pop
ret
adc
adc
jg
repz
xlat
sbb
jno
int
jg
inc
xlat
js
mov
fnstcw
das
cld
mov
jo
jecxz
dec
sahf
push
repnz
mov
shrl
loopne
cmp
loopne
push
iret
sbb
aam
scas
mov
std
cmp
into
cmp
pushf
daa
or
inc
dec
cmp
or
addr16
xchg
insl
add
xor
sbb
sbb
and
jle
lcall
inc
inc
mov
jmp
scas
movsb
xchg
or
lods
dec
scas
mov
push
mov
imul
je
stc
mov
mov
pop
and
jp
xchg
cmp
shrl
sbb
cmc
ljmp
jmp
rolb
and
pop
jge
inc
mov
add
push
mov
lods
test
jg
fimuls
xchg
mov
jge
mov
mov
gs
push
push
pop
mov
ljmp
dec
jne
jmp
xchg
mov
inc
or
icebp
inc
iret
sbb
call
push
lds
into
movsb
lods
pusha
xor
and
push
call
sbb
sbb
dec
xchg
jb
pop
jo
cld
loop
xor
repnz
adc
push
incl
mov
cld
add
into
mov
clc
mov
fidivrs
daa
pop
jg
shrb
mov
stos
loopne
or
loopne
xor
mov
xor
out
mov
push
out
popf
test
fstpt
sub
inc
pop
mov
mov
xor
jg
mov
sub
push
cmp
lcall
leave
pop
cld
fmull
in
bswap
sub
adc
mov
cld
ljmp
jae
dec
cmp
push
in
mov
push
mov
cld
imul
jecxz
push
in
xchg
sar
ljmp
frstor
outsl
bound
push
inc
test
push
dec
mov
incl
and
sub
movsl
int3
incb
cmp
mov
das
icebp
pop
hlt
outsb
ficomps
push
jle
out
movsb
js
adc
xchg
adc
lret
stos
vcvttps2dq
pop
xchg
mov
sbb
xor
fldl
test
pop
loopne
decl
loope
lcall
stos
jno
push
rcrb
jg
add
and
out
jo
lret
das
arpl
lahf
dec
data16
xor
call
jmp
addl
adc
pop
insb
aaa
out
stos
out
shlb
pop
lods
pop
pusha
fcoml
dec
sbb
iret
cmp
lret
iret
clc
add
inc
adc
or
push
cwtl
jecxz
fisttps
add
fisubrl
subb
out
mov
xor
fs
jg
sbb
je
shll
pop
inc
mov
sbb
lcall
fwait
dec
jge
cmp
xor
and
inc
mov
push
out
adc
rorb
outsb
out
jno
icebp
call
gs
adc
mov
or
lods
cmp
or
sub
iret
sar
mov
adc
xchg
das
je
push
or
cmpsl
loop
push
dec
sahf
stc
xor
mov
lcall
jo
xchg
sub
cmp
xor
jno
lods
popa
fcomp
or
stc
lret
outsl
lock
mov
daa
mov
lea
sbb
jmp
imul
inc
cmp
or
or
ffreep
sti
dec
mov
dec
mov
sbbb
sbb
mov
enter
xchg
adc
jg
sub
pop
nop
xor
testl
push
inc
call
ljmp
dec
cmpsl
fmul
pop
lods
xor
xchg
lock
repz
mov
push
cmp
ljmp
cmc
lcall
inc
sahf
iret
iret
push
inc
das
mov
dec
jl
aaa
fsub
push
inc
jecxz
decl
out
stos
inc
jecxz
in
or
add
std
mov
cmp
loopne
in
jg
cmpsb
push
sbb
mov
dec
dec
loope
call
mov
sbb
jl
mov
add
jl
outsl
incl
mov
jl
xor
imul
rol
mov
push
dec
mov
push
add
js
repnz
pop
shll
lcall
test
clc
je
mov
ud1
cmc
jg
jecxz
das
test
mov
sub
xchg
xor
in
nop
call
xchg
cmp
and
int
sbbb
sub
stc
stos
and
jecxz
mov
ja
clc
fs
mov
mov
adc
jp
push
cmp
stc
mov
inc
out
sahf
sbb
dec
lods
gs
pop
pushl
xor
cmp
add
jns
shl
pop
xor
clc
pop
imul
mov
std
xchg
in
call
sahf
xchg
into
sub
adc
sti
jg
test
bound
outsl
mov
mov
dec
lret
popf
add
add
push
push
test
ljmp
shrb
push
xchg
adc
repnz
daa
jcxz
call
in
jg
xor
pop
pop
sahf
cmpsb
add
aas
dec
mov
mov
adc
scas
les
mov
in
lock
mov
bound
cmp
out
mov
scas
fsubp
adc
std
fists
dec
sbb
jl
sub
hlt
jecxz
shl
jnp
mov
pop
in
notb
pop
sahf
dec
jmp
push
sub
cld
inc
and
dec
jno
test
and
push
and
jle
inc
xchg
lahf
cwtl
loop
mov
hlt
cmpsl
pop
cmp
aaa
mov
xor
inc
ret
nop
iret
popf
mov
lcall
aaa
imul
int3
lock
mov
cmp
imul
cmp
aaa
dec
mov
cld
cmp
push
sub
inc
push
and
std
test
imul
mov
dec
push
int
enter
cwtl
lea
test
clc
ljmp
xor
fwait
dec
fistpll
mov
pop
stos
clc
jg
lcall
pushf
mov
ud2
cltd
push
and
ljmp
mov
mov
mov
test
mov
mov
loop
imul
adc
cli
cld
push
fmull
imul
fwait
add
outsb
cmp
pushl
push
mov
inc
mov
cmp
sub
mov
lea
mov
ljmp
mov
idivl
insb
dec
cmpsb
ljmp
mov
push
inc
arpl
adcb
in
adc
xor
cmp
orl
ljmp
and
subl
add
arpl
decl
std
loopne
jo
les
adc
cs
in
arpl
call
mov
inc
mov
in
les
dec
outsb
xlat
push
insb
lcall
cld
decl
mov
jl
cwtl
adc
adc
mov
inc
incl
push
shll
bound
fwait
insl
jmp
lahf
add
lcall
test
scas
cmp
mov
das
mov
mov
mov
inc
mov
sub
das
ds
int
lock
cmc
dec
dec
outsb
inc
add
sub
movsl
stos
incl
mov
inc
cld
mov
dec
lock
sbb
int
xchg
inc
or
jecxz
jl
scas
out
mov
hlt
test
jg
scas
push
dec
lock
cmp
dec
ljmp
mov
icebp
jns
shl
mov
jp
or
mov
or
loop
bound
ljmp
movsbl
cmp
add
jns
add
ja
jmp
mov
pop
mov
addl
popf
mov
adc
cmp
mov
xchg
loope
into
fsubl
imul
xchg
lods
mov
dec
dec
sbb
inc
jbe
ss
stos
std
dec
add
jmp
mov
je
jmp
adc
enter
jle
push
mov
sub
pop
cmp
out
stos
or
push
out
add
mov
adc
mov
cli
and
mov
mov
sbb
or
sbb
int
mov
cmp
loope
outsb
jb
outsb
loopne
mov
or
mov
and
leave
push
inc
pushl
mov
jb
sbb
aaa
loop
popa
mov
clc
push
push
ror
insb
adc
dec
aam
es
and
lcall
mov
in
jl
call
in
dec
repz
out
sbb
sub
xchg
outsb
ret
stos
out
and
pop
sbb
idiv
cmp
mov
iret
sbb
pop
xor
lahf
hlt
das
pop
mov
popf
fcomi
xorl
sub
cmpsb
sbb
mov
mov
mov
push
cmp
int
sarb
cld
pop
xor
incl
inc
push
jae
add
rolb
sbb
fs
cmpsl
aad
jg
pop
cmp
insl
pop
aad
shll
inc
adc
ret
scas
data16
ljmp
hlt
push
lods
mov
pushf
lcall
stos
xchg
js
dec
lahf
jmp
lcall
bound
pop
jbe
stos
xchg
xchg
lahf
out
push
inc
add
pop
inc
push
xchg
cld
call
test
add
test
push
movsl
lahf
inc
jmp
sub
loop
ljmp
nop
scas
jp
jg
les
jae
dec
data16
sbb
or
lcall
out
enter
ds
sub
mov
lcall
xchg
sub
loopne
call
dec
cli
or
dec
das
fs
in
leave
subl
popa
xor
test
mov
incl
xchg
adc
rcr
stc
pop
retw
jg
dec
ljmp
adc
mov
push
stc
pop
adc
aaa
movsb
aam
add
inc
rorb
inc
sbb
ljmp
icebp
iret
lret
jecxz
in
push
jae
dec
scas
mov
push
mov
lcall
cltd
outsl
or
cmp
cmp
add
jecxz
inc
sub
shlb
adc
call
and
das
push
out
scas
fs
pop
sub
push
lret
mov
int
mov
cltd
cmp
mov
lret
mov
loop
outsb
add
add
icebp
ja
cli
push
int3
js
inc
add
imul
cmp
stos
stos
lea
mov
scas
push
cmc
mov
ss
inc
inc
xor
data16
fucomip
inc
fmull
fs
push
dec
sahf
enter
lahf
jl
or
pop
repz
lcall
cld
scas
and
jae
jecxz
inc
shll
add
call
xchg
popf
decl
pop
dec
imul
pop
testb
shrb
mov
jg
incl
inc
sbb
xchg
push
sbb
mov
leave
add
sbb
sbb
mov
sbbb
jno
mov
mov
jg
pop
xchg
xor
negb
clc
aaa
sbb
pushf
int
sar
mov
pop
cli
ljmp
fstpt
sbb
rclb
stos
jge
xorl
mov
mov
dec
popa
mov
gs
dec
aam
shlb
mov
sbb
incl
pop
mov
fs
lods
adc
inc
push
faddp
fcomps
pop
mov
aad
iret
push
in
addl
and
cmc
mov
xchg
iret
jg
mov
popf
ds
jl
clc
jmp
and
ss
push
mov
jg
xchg
adc
js
jge
ljmp
das
jmp
jge
sbb
mov
fucomip
inc
push
xchg
or
dec
cli
fcmovnu
ljmp
lret
cmp
xor
call
xchg
sub
cmp
aam
cli
dec
ljmp
loopne
decl
popa
fisttpl
pushf
iret
pop
sahf
push
xchg
pushl
insb
xchg
and
ss
bound
lahf
iret
cld
shrl
into
sarb
scas
fnstsw
das
sub
gs
and
mov
jle
cmp
jecxz
pop
stos
loop
jae
jne
push
jg
ret
adc
pop
leave
decb
mov
push
xchg
adc
mov
lds
add
or
aad
jg
dec
mov
js
scas
sub
fwait
nop
out
pop
cmp
push
pop
and
ja
jmp
std
push
xor
sahf
imul
xor
cmp
scas
sahf
aam
mov
mov
cmp
add
and
scas
ret
xchg
push
sbb
jg
push
les
cld
adc
ret
sub
incl
cli
lods
pop
push
sbb
fdivr
cmp
jnp
filds
jbe
mov
decl
outsl
test
je
repnz
xor
test
lods
jl
xor
ss
arpl
stos
mov
fucomip
jmp
sbb
vcvttss2si
sub
or
jo
ljmp
mov
lods
insb
lods
jp
lods
das
sub
and
pop
xchg
outsl
push
aas
clc
xor
adc
mov
inc
mov
and
xor
stc
jecxz
dec
push
lock
xlat
ds
into
aam
call
lea
mov
bound
aaa
fwait
push
js
adc
cmpsb
rolb
call
inc
cmp
test
icebp
sub
sub
lcall
int3
cld
cmp
inc
clc
xchg
popf
insb
jnp
sbb
dec
jae
jl
outsb
inc
icebp
mov
push
icebp
mov
insb
adc
mov
adc
out
sarb
lock
add
loop
dec
adc
jmp
ficoms
jb
push
lock
push
mov
sbb
dec
add
icebp
lock
pop
adc
test
mov
mov
xor
adc
push
mov
or
shr
cmp
daa
int
call
stc
lock
and
adc
adc
push
fistps
mov
sbb
adc
pushl
dec
xchg
in
cmp
ja
fisttpl
pop
cmp
out
scas
int
ljmp
mov
ffree
pop
push
in
sub
aam
sbb
lds
cmp
inc
mov
daa
fsubrl
and
lret
pop
pop
std
mov
cmp
cld
adc
push
imul
lods
cmp
sahf
mov
stos
inc
dec
mov
inc
std
sbbb
xchg
jb
cmp
pushl
scas
cs
cwtl
add
mov
add
push
movsl
jb
das
dec
fisubs
cmpsl
aad
adc
dec
ljmp
lret
test
lcall
mov
nop
inc
push
xchg
daa
pop
cmp
pop
sahf
jg
mov
lcall
sub
xchg
jmp
nop
pop
inc
out
inc
out
sub
pushl
mov
lahf
mov
add
insb
test
cltd
loopne
rcll
pop
ljmp
mov
push
pushf
inc
push
dec
cmpsl
add
push
test
sub
mov
test
out
pushf
rorl
and
jns
les
jnp
jp
nop
adc
test
je
cwtl
mov
sub
inc
clc
jmp
out
pop
push
inc
scas
jmp
fsubrs
xchg
hlt
jno
adc
mov
sbb
fcmove
hlt
shlb
test
mov
or
pop
mull
pop
jp
push
mov
mov
jmp
mov
and
sub
xchg
mov
or
pop
pushl
or
pushf
aas
mov
cmp
mov
test
mov
rcrb
ja
sub
lret
push
jp
jb
imul
aaa
jbe
or
daa
push
adc
fstl
in
mov
call
les
outsb
mov
add
and
cmp
add
call
jmp
dec
sbb
xor
fsubs
lcall
mov
decl
xor
les
nop
arpl
int
lret
sub
add
rorb
mov
aas
push
outsb
test
add
jmp
ljmp
pop
ljmp
call
mov
dec
sub
fdivl
lods
inc
dec
js
ja
jb
ljmp
push
nop
cli
rorl
mov
mov
aam
sub
stc
jne
or
mov
mov
decl
jne
das
xchg
xchg
addr16
add
call
mov
cmp
pop
rol
and
inc
into
cmp
pop
fs
dec
movsb
sub
xor
hlt
push
bnd
mov
popf
sbb
jmp
sub
out
or
add
test
shlb
sub
fisubl
cmc
rclb
test
jmp
pop
push
sub
and
jecxz
aaa
mov
mov
mov
mov
or
lcall
push
xchg
mov
outsb
cmpsl
mov
sar
lfs
sbb
jecxz
ljmp
push
pop
das
popa
or
pop
sbb
lcall
mov
xchg
cli
in
pusha
or
inc
test
jns
shufps
mov
fmull
rcrb
inc
sub
inc
and
in
std
inc
pushl
fdivrs
cmpsb
lret
insb
stos
mov
cwtl
scas
adc
mov
or
pushl
add
sbb
fptan
das
and
pusha
mov
jg
lcall
xchg
push
sbb
inc
call
mov
rcr
xchg
mov
dec
xchg
xor
ret
sbb
dec
mov
jl
mov
mov
jbe
rcll
call
call
or
daa
outsl
mov
xchg
push
xor
mov
out
xchg
dec
mov
into
dec
outsl
dec
jo
mov
dec
sahf
stos
sbbb
mov
dec
movsb
outsb
outsl
int3
out
or
jae
in
fsts
sub
mov
dec
pop
mov
adc
gs
call
mov
inc
ds
xchg
icebp
fs
leave
hlt
xor
add
mov
fldt
xchg
mov
push
ljmpw
inc
outsl
por
loopne
mov
xchg
cli
jmp
and
and
test
pop
push
sbb
call
in
int
mov
mov
aam
popf
data16
inc
jae
ljmp
dec
pop
add
or
mov
push
mov
pusha
push
cmp
sub
inc
out
loop
adc
stc
xor
mov
xchg
pop
cli
ljmp
std
or
push
mov
mov
call
or
sub
aaa
call
dec
xchg
imulb
loop
pushl
xor
subl
jno
inc
push
dec
aaa
inc
call
push
popf
movl
mov
mov
decl
out
dec
call
cmp
add
jo
lahf
sbb
sub
pushl
and
push
pop
mov
xlat
or
dec
inc
movsb
mov
pushl
hlt
xor
bound
mov
mov
cli
dec
mov
aas
xor
mov
push
mov
arpl
in
nop
or
ljmp
mov
jnp
and
outsl
xchg
mov
jbe
dec
arpl
cmp
xchg
jg
decl
nop
mov
inc
sub
leave
xchg
sub
lcall
test
lahf
sbb
or
pop
pop
adc
lods
dec
incl
test
xchg
mov
fsub
aam
sbb
jbe
push
pop
pop
xlat
shrl
int
push
divw
sbb
iret
adc
lret
movsb
add
add
popf
lods
in
fwait
mov
nop
jle
jb
ficoml
test
movsb
das
icebp
incl
int
mov
xor
sahf
ljmp
scas
out
aad
hlt
dec
out
jbe
shr
add
inc
out
sub
push
mov
dec
sti
in
cmp
in
or
lcall
lock
decl
jno
repnz
fdivl
les
call
xchg
sbb
and
pop
sbb
push
sbb
imul
pop
incl
and
cmp
sub
mov
mov
push
cmc
jg
cmp
pop
call
dec
iret
mov
js
cltd
adc
mov
sub
push
sub
xchg
cli
push
add
adc
hlt
xchg
push
or
or
ret
loopne
mov
add
or
xchg
adc
outsl
std
jg
les
jo
xor
scas
outsl
and
std
or
popa
inc
pop
aas
imul
fwait
lret
in
jg
divb
fs
les
jae
dec
inc
xchg
loope
subl
push
xor
arpl
mov
imul
adc
cld
ljmp
jb
sub
jge
pop
push
pop
mov
adc
pop
test
movsl
sub
lcall
inc
mov
or
push
adc
ss
mov
inc
or
push
fcoml
push
call
mov
add
test
into
andb
ljmp
lods
std
adc
push
into
xor
in
sub
jl
mov
sub
mov
sbb
lcall
fld
xor
mov
sub
lds
mov
inc
sbb
dec
and
les
adc
sbbl
mov
mov
decl
push
insb
mov
pop
hlt
ret
gs
stos
xor
pop
xchg
mov
jmp
pop
inc
xorl
test
pop
rep
dec
loop
mov
aam
push
mov
je
fstl
fistpll
test
dec
fcoms
and
mov
adc
mov
sbb
and
push
jns
ret
add
in
lret
mov
jg
inc
mov
ljmp
jmp
push
mov
out
jmp
out
add
xchg
movsl
pushl
clc
adc
sub
add
mov
xchg
mov
test
repz
test
enter
pop
lock
jg
mov
stos
gs
cltd
dec
cmc
add
adc
ljmp
jg
dec
add
sar
mov
das
roll
xor
and
cld
fnstenv
inc
outsl
xchg
adc
pushw
clc
std
dec
adc
mov
sbb
int3
sarb
inc
insl
inc
jl
mov
stos
stos
sub
xchg
mov
out
jge
push
mov
pop
sub
aaa
clc
adc
jl
cmpsl
cmp
cmpsb
pop
mov
ja
inc
rcrl
add
dec
call
mov
ljmp
pop
cmp
mov
xor
mov
push
pushl
aas
pop
dec
add
sbb
lcall
jge
call
je
int
fcomps
incl
outsl
pop
sub
mov
sbb
xor
cmp
adc
or
test
stos
push
ja
jne
push
mov
jnp
sbbb
int3
fidivrs
loopne
adc
in
js
adc
ret
jg
push
movl
lcall
std
sahf
push
sarb
xor
sub
jmp
cmp
push
xor
jl
fadds
jo
clc
outsl
std
mov
dec
ja
ror
sar
ljmp
jg
call
mov
xor
stc
out
add
aam
fadds
jb
mov
jg
jge
aam
pop
movsb
jmp
nop
mov
pusha
or
lar
mov
lock
dec
out
mov
push
fmuls
negb
sarb
jmp
or
mov
push
or
sub
or
sub
sahf
jp
or
pop
es
outsl
icebp
data16
imul
out
pop
das
hlt
mov
into
mulb
mov
fcompl
outsl
add
incl
xor
push
jge
inc
cmp
pop
divb
outsb
decl
cld
incl
insl
rolb
inc
mov
add
cld
lahf
jmp
sub
inc
sar
push
loop
lahf
fiadds
xchg
out
push
ret
clc
mov
popf
icebp
lahf
imul
jb
cmc
popa
and
push
aam
pushl
outsl
mov
sahf
ret
pop
gs
subb
push
insl
push
pusha
lahf
fdivr
rolb
js
sub
test
cmp
sahf
outsl
shlb
jmp
bound
pop
shlb
push
push
roll
pop
inc
add
mov
lcall
popa
fdivrs
mov
mov
xchg
ja
jo
dec
enter
test
push
inc
push
call
ret
loope
ja
sub
jno
add
cmp
ljmp
decl
jmp
jnp
inc
mov
push
fcomip
mov
outsl
int3
loop
sahf
sbb
mov
lea
or
mov
mov
jg
jg
pop
js
xor
daa
mov
lods
int3
push
sahf
pop
jmp
ljmp
or
aam
add
leavew
in
test
pushl
cmp
pop
clc
cltd
daa
or
mov
adc
outsl
or
in
jns
dec
adcl
sbb
fsubp
int
push
lods
bnd
ss
sub
mov
lds
sbb
hlt
jg
pushl
shrb
mov
push
and
loop
popa
ds
push
mov
das
add
or
jnp
scas
shl
clc
jge
xor
ja
mov
shrl
mov
mov
call
jns
jge
les
xor
mov
int3
loopne
repz
lcall
sbb
movsl
pop
aam
pop
mov
loope
sbbl
xor
ljmp
push
mov
push
adc
test
lock
lcall
jge
in
inc
imul
add
push
out
ds
jg
fsubl
dec
fcoms
call
fwait
sar
ds
jmp
lret
std
pop
ljmp
mov
sbb
das
jbe
adc
test
loop
pop
inc
cmp
int
sub
mov
icebp
lcall
outsb
arpl
jmp
sbb
mov
test
pushl
push
pop
jmp
mov
cmc
subb
mov
movsl
pushl
stos
inc
aaa
pusha
ljmp
in
fsubrl
or
add
lds
incl
stos
adc
mov
mov
fisubs
mov
call
cmp
fcoms
orl
or
clc
jmp
jmp
test
sub
mov
or
cmp
out
sub
shll
sbb
outsl
xchg
fldl
add
cmp
jns
cwtl
and
incl
gs
mov
mov
sub
mov
pushf
fs
cmp
ret
rcrl
sbb
xchg
out
enter
fucomip
jg
int3
in
imul
outsl
mov
mov
xchg
insl
add
add
mov
inc
stos
jbe
rcrl
fcomp
aaa
into
jo
dec
cmc
push
jg
loop
aam
subl
xor
ljmp
outsl
pop
sub
sar
xor
cwtl
or
xor
out
jl
dec
cwtl
call
cmp
pop
add
icebp
sub
dec
rcrl
add
mov
pop
incl
stos
jl
cltd
scas
sti
jbe
icebp
mov
addb
and
das
xor
shrl
pop
decl
ficomps
jg
and
pop
dec
inc
in
jno
call
push
mov
in
dec
pop
mov
lret
dec
mov
sbb
xor
ja
xor
mulb
call
jae
lcall
push
mov
pop
inc
outsl
fdivs
cli
idivb
sub
popf
pop
daa
mov
test
xchg
mov
shlb
push
push
aas
mov
icebp
fucomi
adc
jmp
mov
hlt
mov
cmp
inc
cmc
xchg
or
cmp
push
test
call
stos
das
neg
test
jns
fdivrl
inc
sub
and
ljmp
call
or
jge,pt
fidivl
xor
fdivrs
push
aam
xchg
pop
inc
incl
sub
xor
ficomps
add
or
mov
mov
mov
xor
out
pop
incl
shr
mov
paddq
stc
hlt
jecxz
lods
jns
decl
shlb
sub
inc
rcrb
clc
incl
ds
adc
mov
hlt
jbe
cltd
mov
int3
push
aaa
jae
mov
clc
pop
arpl
add
and
mov
adc
dec
scas
aad
mov
mov
pop
xor
gs
pop
sub
call
cli
xchg
mov
sub
xchg
rdmsr
cmc
out
sqrtps
popf
add
ljmp
xor
sbb
xchg
test
cmpl
shll
and
xchg
xchg
ret
clc
mov
xchg
sbb
mov
xor
and
repnz
test
jg
pushl
sbb
jne
dec
je
cmp
push
ljmp
addr16
out
dec
push
aam
lret
ret
inc
ja
data16
and
inc
aad
inc
icebp
out
cli
clc
test
leave
mov
incl
jg
xchg
cs
ficoml
pop
lods
sbb
popa
xlat
lds
inc
das
push
hlt
mov
ret
je
mov
cmp
je
mov
and
insb
pop
pop
mov
mov
dec
lret
push
repnz
adc
jae
mov
sub
aad
xchg
sub
mov
lds
pushl
insb
xor
cli
mov
pop
stc
pop
loope
out
ret
nopl
inc
push
je
inc
jne
bound
decl
pop
mov
push
pushf
and
arpl
mov
push
enter
stos
inc
add
pusha
mov
jg
fcmovnbe
iret
loop
and
sarl
jnp
lret
jnp
imul
sbb
adc
call
mov
addr16
xchg
mov
daa
nop
xchg
push
cmp
fistpl
cmp
xchg
cmp
xchg
cmp
insl
sub
mov
loopne
jnp
sub
clc
incl
test
jno
xlat
mov
add
pushf
decl
add
int3
mov
cli
xor
int3
call
ja
or
lret
sub
sub
jnp
mov
cmpb
sti
stc
ljmp
gs
jmp
lret
int
xchg
sub
sub
jnp
xlat
imulb
mov
cmp
outsl
mov
jmp
jle
cmp
dec
cmp
dec
stc
stos
out
jns
ds
and
idiv
jg
rolb
leave
add
sti
outsb
mov
inc
scas
mov
pushl
aad
ss
mov
aaa
mov
jl
rorb
or
lahf
ljmp
dec
xchg
inc
jno
orl
adc
mov
aas
jge
pop
jge
or
inc
imul
cld
dec
sbb
out
addr16
or
incl
xchg
add
imul
and
pushf
add
dec
push
ds
cmpsl
popa
pop
ljmp
cmp
or
and
in
clc
fdivl
loope
xchg
mov
xchg
sbb
aaa
pushl
mov
push
loope
sub
pushl
insl
or
inc
mov
dec
adc
push
leave
fs
sub
divl
std
lcall
stos
cli
xchg
loopne
popa
mov
ljmp
push
mov
movsl
adc
hlt
sti
xor
cld
mov
pop
test
mov
movsl
sbb
test
jl
xor
ljmp
nop
ljmp
lock
movsl
inc
cmovle
ds
pop
ja
ljmp
adc
sub
jg
xchg
pushf
jmp
or
and
out
fcmovne
in
pop
loopne
mov
push
pop
pushf
xchg
sub
push
outsl
jns
add
jmp
xchg
push
rcrl
mov
sub
mov
movb
shll
je
cmp
jne
sbb
iret
sarl
or
cmc
add
pushf
iret
fidivrl
and
cmc
pop
sbb
fildll
pop
les
cld
decl
popa
sbb
out
repz
mov
push
cs
lahf
lcall
das
mov
cld
scas
insb
push
cld
push
cmpsb
adc
sbb
lcall
stos
push
pop
bound
sbb
jl
into
xor
incl
or
jp
mov
das
xchg
out
sbb
mov
mov
and
and
les
add
xchg
fwait
cmp
js
nop
gs
outsb
push
or
call
jo
leave
ret
test
scas
xor
or
scas
pop
mov
xchg
ds
ret
repnz
fldpi
mov
fdivrp
adcb
cmp
cli
cwtl
insb
jecxz
call
add
cmp
jno
adc
mov
pop
push
mov
idivl
stos
jne
ljmp
push
and
mov
add
je
sti
mov
add
notb
add
fucomip
sbb
and
cmp
xchg
es
xchg
movsb
jg
pop
mov
push
addr16
inc
xchg
push
dec
mov
pop
sub
xchg
pop
xchg
cli
lcall
cmc
shr
repz
lret
sahf
cwtl
sub
xchg
pop
or
mov
fistl
cmc
decl
std
call
jo
lahf
mov
addl
pop
mull
sub
jmp
pop
pop
mov
dec
add
inc
enter
sub
dec
jmp
push
add
incl
cmp
mov
fisttps
imul
jecxz
in
call
pop
cmp
aad
popa
sbb
loopne
mov
mov
rclb
or
in
popa
inc
sbb
or
outsb
in
fmuls
aad
push
mov
rorl
jg
sbb
push
cwtl
js
adc
dec
je
dec
pop
mov
jge
or
aad
les
stc
roll
sbb
dec
push
mov
sti
scas
pop
call
je
lea
inc
or
push
or
cs
jno
mov
call
rcrb
pop
lds
adc
lock
in
fildll
jl
add
jbe
es
test
sub
push
mov
sbb
mov
cmp
cli
call
add
rclb
inc
mov
mov
movsb
jge
cmp
loope
addr16
cwtl
lds
ljmp
push
and
repz
pop
xchg
mov
xor
pop
jmp
mulb
std
or
xor
sub
ret
or
loop
into
and
subl
icebp
sbb
or
adc
sub
jg
mov
mov
lcall
xchg
test
push
xchg
jns
cmp
and
cwtl
imull
jg
fldt
mov
push
xchg
mov
bound
aaa
ljmp
call
dec
sbb
push
jmp
push
shl
test
jge
enter
lahf
mov
in
jle
xchg
pop
ds
xor
mov
and
inc
mov
out
fisttps
loopne
outsb
xor
cwtl
sarl
fbld
stos
cmp
das
pop
push
mov
leave
test
jo
imul
fnstsw
jg
inc
jae
fistpll
in
or
sub
xchg
add
out
inc
out
pusha
loop
push
es
sarl
pop
mov
pop
cs
mov
push
dec
dec
pop
loope
lcall
jg
add
int
cld
push
mov
gs
xor
jmp
cmc
scas
loopne
inc
mov
mov
mov
push
loopne
push
mov
xorb
mov
push
jp
fucomi
push
pop
rolb
pushl
ljmp
mov
cwtl
dec
mov
xchg
bound
pushl
mov
daa
rcll
aas
ljmp
dec
jl
cs
int3
cli
push
pop
icebp
push
filds
out
xchg
or
xchg
add
outsl
call
inc
push
pop
jecxz
push
xor
push
add
lcall
test
movsl
sub
push
insb
pop
repnz
sub
test
popf
and
nop
lcall
dec
lds
jl
pop
lret
push
add
in
popa
cmp
mov
ljmp
push
ds
jne
lret
push
cld
fwait
sub
decb
cmpsl
incl
push
jecxz
mov
shrl
dec
ja
add
cmp
mov
xchg
mov
mov
mov
pop
push
pusha
repnz
std
decb
fcmove
mov
mov
cltd
sbbb
jo
lret
sub
decl
mov
bsf
or
dec
xchg
insb
jle
lcall
sub
push
push
hlt
pop
xchg
jb
je
push
sbb
aaa
clc
ljmp
int3
mov
lret
mov
pop
or
insl
xor
mov
lods
push
push
sub
sbb
mov
jo
ljmp
cmp
orl
mov
andb
adc
dec
and
jbe
sbb
sub
clc
stos
inc
aad
leave
std
clc
pop
push
jg
imul
lcall
popf
setno
insl
add
mov
stc
or
scas
lea
shrl
aam
cli
cmp
inc
lods
inc
ljmp
dec
outsb
mov
mov
inc
std
pop
push
mov
and
cwtl
mov
fbld
sub
xor
and
stc
mull
lcall
je
mov
push
push
xchg
adc
and
add
sbb
adc
mov
loop
pop
jb
pop
cli
pushf
pop
jne
lock
shr
add
aaa
outsb
pop
jp
dec
incb
pop
add
test
les
lret
ds
push
xchg
loop
adc
pop
push
insb
sub
push
ss
jo
cmpsl
lahf
inc
pop
adc
sbb
push
fildl
pop
cmpsb
std
sahf
jg
out
xchg
mov
cmp
sarl
mov
scas
jp
enter
mov
xor
in
dec
clc
js
stos
dec
cmp
lock
lods
ljmp
stc
pop
rcll
nop
rcl
out
mov
pop
aaa
pop
out
and
sub
shll
fistps
sub
jecxz
add
xchg
mov
add
imulb
fmull
or
push
inc
in
aad
das
inc
inc
push
fwait
incb
mov
repnz
ljmp
jle
shll
and
sbbl
fsubl
aaa
pop
xor
cmp
je
add
in
and
fists
call
arpl
push
ret
add
icebp
mov
jmp
xchg
dec
xor
shll
ljmp
jmp
stos
cwtl
je
in
out
push
imulb
cmc
lcall
push
mov
ja
call
push
xorl
pop
ret
lret
cli
add
cli
outsl
pop
jl
in
pop
pop
popf
sti
adc
sbb
jnp
pop
cli
pushl
or
outsl
dec
sub
rorb
xchg
push
adc
enter
inc
aaa
inc
stos
jl
jmp
fcoms
test
stos
clc
repnz
aam
inc
ljmp
jno
call
adc
mov
mov
adc
ljmp
imul
sbb
outsl
xchg
sub
mov
jb
pushl
int3
xchg
inc
cmp
mov
icebp
pushl
iret
pop
enter
xchg
fisttpll
call
adc
outsl
loope
mull
and
mov
xor
iret
stos
cmpsb
sbb
and
push
dec
inc
dec
loopne
lods
and
push
outsl
lock
sar
xchg
stos
lods
daa
inc
pop
int3
jbe
inc
cmp
cwtl
push
sbbb
cmp
adc
push
mov
cltd
inc
add
inc
mov
jne
xor
out
push
mov
add
stos
adcl
cmpsl
xor
aam
sarl
inc
mov
sbb
sti
sbb
mov
loopne
add
rcrb
jmp
mov
test
pop
push
scas
int
mov
nop
sbb
fldenv
cmpsb
cmp
jmp
lcall
lds
and
cmpsb
xor
lock
cs
mov
decl
add
jo
add
ljmp
addr16
and
or
dec
mov
mov
pushl
cmpsl
arpl
out
push
data16
dec
fsubrs
repnz
xchg
mov
mov
pop
cli
pushl
sub
test
data16
push
lret
gs
cmp
mov
std
push
cli
cmp
xchg
dec
add
or
addb
setns
add
mov
jmp
hlt
sbb
nop
ret
movsb
cs
stos
addr16
sahf
mov
std
fs
mov
out
movb
sub
arpl
daa
jmp
cld
aam
insb
lret
pop
lods
imul
fwait
aad
xor
repnz
sub
cmp
pop
jg
sub
pop
gs
mov
xor
dec
sbb
decl
pusha
test
mov
ret
dec
stc
fidivl
jmp
mov
lcall
incl
insb
xchg
shll
lods
movsl
dec
lcall
pop
jno
inc
clc
dec
shr
pop
hlt
mov
cltd
in
cmpsb
sti
or
sbb
mov
out
mov
lcall
and
int
push
push
movsb
in
decb
mov
test
inc
gs
test
inc
cld
pop
push
fcom
mov
or
mov
enter
jmp
jecxz
aad
scas
popf
in
loop
shlb
xchg
sbb
cmp
add
ss
std
ljmp
js
pop
push
das
add
cs
out
add
lea
std
sar
push
jl
jle
add
out
rorl
test
loop
mov
inc
inc
std
dec
cmpsb
push
and
add
leave
xor
mov
cli
and
call
lret
add
out
popa
mov
loope
out
hlt
mov
jecxz
test
cmc
pop
mov
add
call
push
xor
fcoml
dec
push
cs
int3
sahf
mov
pop
xchg
rcrl
jg
push
xor
lods
jmp
aaa
push
ret
cmp
or
shlb
pop
jo
pop
pop
rcl
push
cmp
rcr
in
dec
inc
les
adcb
incl
push
leave
sbb
pusha
add
mov
insb
push
xchg
clc
ljmp
cmc
pushf
add
and
ljmp
sbb
push
ret
mov
mov
dec
call
fdiv
out
push
lcall
jmp
push
lea
movb
lea
stos
out
sarl
cwtl
and
int
sbb
mov
repz
cwtl
repnz
ljmp
mov
mov
jecxz
sub
into
lcall
pop
mov
mov
mov
lahf
mov
push
aad
lahf
dec
jo
ss
decl
daa
movsl
pop
ret
dec
sahf
iret
adc
sti
push
fdivrl
push
push
popl
mov
ljmp
call
lret
aam
lods
hlt
out
mov
cld
clc
pushl
int3
or
jp
imul
loop
loope
or
lods
call
out
ljmp
dec
xchg
xchg
stc
mov
loope
mov
scas
xlat
es
fdivs
jo
sub
sub
adc
sbb
sub
data16
mov
mov
push
mov
sbb
push
int3
into
add
mov
jns
and
orl
int3
push
xchg
mov
stos
push
fistpll
add
leave
fs
jmp
insl
cmpsb
cmp
insb
cmp
push
mov
cmove
push
outsb
testb
mov
sti
test
adc
inc
mov
cs
jg
mov
aad
jne
fldl
and
daa
dec
sbb
or
jmp
cmp
mov
jmp
call
xchg
xchg
fstpl
into
mov
sub
fdivl
aas
cmp
in
mov
pusha
or
leave
fwait
in
mov
rorb
jge
jo
iret
pop
mov
lock
mov
out
push
push
dec
cmp
lea
or
pusha
sbb
ljmp
jb
add
xchg
rcrl
lods
mov
push
mov
cmc
or
jg
subb
and
xor
stos
inc
lret
rep
adc
jmp
cmp
add
pop
mov
sbb
outsl
ret
inc
push
mov
inc
jmp
lds
mov
iret
popf
add
dec
addr16
sub
cmp
xor
mov
pop
in
fdivl
lcall
gs
mov
push
out
mov
movsb
ljmp
xchg
and
push
inc
xor
cmp
rolb
fnstenv
xor
jmp
mov
jmp
mov
call
lds
mov
sbb
cmp
sbb
lret
jae
jb
pop
xchg
sub
pop
hlt
xchg
sub
add
ja
fildll
test
jno
xor
jae
test
jb
dec
and
ljmp
pop
pop
mov
imul
inc
inc
ficompl
jmp
cld
inc
and
xchg
add
cmc
jmp
and
sub
dec
into
push
dec
jns
ljmp
inc
sub
or
mov
mov
in
xchg
pop
cmp
dec
std
adc
test
lret
pop
mov
push
sbb
or
ljmp
idivb
push
sub
das
icebp
out
xchg
cmovo
mov
daa
outsl
sbb
insl
push
int
pop
xchg
cmp
dec
std
insl
negl
jno
mov
ja
incl
lcall
cmp
xor
adcb
dec
jle
jnp
imul
lock
icebp
xor
xchg
ret
icebp
fdivrs
je
or
jmp
or
pop
xor
mov
jmp
inc
shl
out
push
and
push
xlat
xchg
test
cmc
incl
incl
or
loopne
push
sarl
popa
mov
lea
decl
pusha
dec
int3
adc
scas
add
lret
jmp
mov
jb
mov
repnz
lods
mov
in
subl
cli
decl
push
sub
sbb
jmp
out
or
call
fidivrl
imul
mov
loopne
inc
add
inc
sar
mov
cs
out
in
clc
outsb
push
pop
pop
fimull
add
lea
mov
aas
repz
inc
fwait
jmp
xchg
loope
cmp
lret
test
ds
jbe
cmp
decl
sub
int
dec
fimull
lock
push
test
and
push
jae
xchg
ds
cmp
pusha
pop
cmp
adc
clc
aas
ficompl
xchg
mov
or
pushl
loopne
mov
push
int
mov
jle
jmp
sahf
jo
fwait
push
insb
insb
out
sti
mov
popa
popa
pop
cwtl
fistpl
repz
clc
add
std
dec
pop
movsl
or
lds
ret
nop
mov
adc
lahf
push
xor
lcall
sbb
xor
push
dec
mov
jge
mov
sti
cmp
mov
jb
das
cld
ljmp
js
add
les
jb
adc
ljmp
mov
sub
xchg
arpl
pop
and
lds
and
jmp
outsl
inc
push
fldl
rorl
push
loope
add
lock
pop
addr16
push
stos
or
mov
ljmp
pop
xchg
inc
fsubrp
iret
mov
in
cmp
pusha
andl
sub
inc
mov
add
mov
or
mov
js
cmp
mov
adc
sbb
sahf
fwait
xor
ja
mov
mov
mov
mov
xchg
inc
and
testb
aam
in
imul
push
jno
dec
and
cmp
mov
movsb
and
rol
loop
data16
sub
pushf
xchg
xchg
loope
es
mov
cmp
mov
add
out
lret
out
or
pop
inc
icebp
ljmp
inc
dec
fistpll
sub
dec
jmp
sub
cmc
jl
ds
pop
cli
outsl
jae
or
push
sub
mov
jb
mov
ljmp
mov
test
sbb
xor
sarl
or
or
dec
rol
or
aas
nop
ret
insl
in
fadd
mov
push
add
out
or
aad
xor
jg
or
ds
into
testl
push
mov
mov
pop
leave
mov
incl
jae
ds
cmpsb
xchg
sbb
popf
mov
jbe
inc
dec
int3
sub
jno
cmp
movsl
mov
jg
ja
mov
pop
dec
mov
adc
dec
rcl
leave
push
les
inc
lea
adc
add
push
incl
inc
xchg
sbb
movsb
icebp
and
pusha
sbb
mov
dec
movsl
mov
stc
repz
mov
pop
cltd
test
xor
inc
in
fwait
out
mov
jecxz
mov
mov
cli
mov
mov
out
insb
inc
sahf
stos
xchg
cwtl
iret
xor
ret
mov
outsl
xchg
push
push
scas
repnz
xor
inc
fwait
push
pushl
cli
call
fdivs
cmp
mov
ja
push
loope
adc
leave
mov
movsb
or
mov
cmp
xchg
loope
cli
fbld
arpl
sub
sub
cmp
imul
push
inc
xchg
decl
inc
dec
lods
les
lea
jle
or
dec
jae
xchg
xchg
fdivl
xchg
insl
push
mov
mov
mov
cmp
mov
enter
ja
fcomps
in
xchg
popf
xchg
add
or
shrl
mov
sub
and
xor
outsl
in
lcall
cmc
cmpsl
cmpsb
rcrl
subl
pop
jmp
add
enter
jno
fiadds
inc
lock
cwtl
rcr
lods
in
xlat
inc
stc
xchg
ljmp
incl
mov
lcall
xor
pop
jb
jne
pop
mov
mov
dec
push
sahf
out
scas
je
stos
jne
and
push
addl
push
xor
cmpb
and
push
std
lea
dec
lcall
fistl
rolb
jp
insb
movsl
sbb
popf
nop
jne
nop
mov
call
call
int3
mov
push
dec
inc
mov
mov
les
call
das
xor
movsb
sarl
cmc
sub
jb
mov
sahf
das
hlt
lcall
shlb
ret
sub
inc
push
sti
aad
xor
jg
lcall
push
jo
mov
mov
mov
popa
cmp
ret
rol
mov
decl
push
pop
outsb
xlat
mov
push
ret
lret
out
mov
inc
ljmp
fadds
pop
shlb
and
mov
and
sbb
arpl
xchg
shr
fwait
out
cmp
mov
cmp
pushl
xor
xchg
mov
jle
and
mov
xchg
test
cmp
push
cli
pushl
fdivp
cmpsl
in
ret
mov
loope
sub
jge
movsl
sbb
mov
push
jo
fs
lcall
xor
sub
or
fcompl
scas
gs
leave
sub
jmp
clc
into
and
jae
jg
lcall
cld
jl
or
push
js
mov
ret
jns
pop
cmp
ja
add
hlt
and
push
test
sub
pop
jbe
jae
pop
popf
jecxz
arpl
imul
call
jbe
insb
xchg
mov
push
loop
mov
adc
mov
incl
xchg
out
mov
lods
jecxz
cs
or
pop
cmp
push
cmc
incl
lds
arpl
arpl
or
cmc
push
aam
xor
fwait
pop
pushl
clc
or
cmpsl
mov
rcl
and
ret
je
xchg
stos
ljmp
mov
xor
aad
shrb
push
bnd
sbb
mov
hlt
inc
bound
out
cs
sbb
sbb
inc
popf
cmpsl
mov
jmp
test
adc
sub
and
xchg
bound
fisttps
xor
xchg
cs
repz
cmp
sub
fwait
mov
aam
je
lock
inc
bnd
cmp
jp
inc
jge
jge
andl
out
xchg
cmp
lcall
outsl
cmp
aad
ja
xchg
fcoms
mov
mov
sbb
scas
xchg
ljmp
inc
popf
incl
lea
sub
push
dec
adc
push
xchg
xor
inc
pop
std
movsl
jns
jbe
mov
fwait
test
xor
jl
orl
andl
or
pop
pop
add
fs
xorb
mov
cmp
mov
aam
addr16
fcomp
dec
cmp
addr16
jmp
pushl
ds
ss
insb
fs
add
mov
decl
std
stos
inc
cmc
ds
jno
pushf
out
inc
ja
push
cmc
test
xlat
cmp
inc
or
icebp
ds
pop
and
imul
fildl
fisubrs
int3
mov
inc
add
inc
adcb
cmp
mov
push
jl
adc
mov
mov
sbb
leave
cli
fidivl
call
cmp
call
add
dec
mov
jge
imulb
jg
jns
lock
pop
lock
xchg
fisubl
test
cmp
enter
bound
mov
add
cmp
push
xchg
addl
loope
cwtl
insb
call
sbb
mov
adc
cmpsl
mov
or
pop
test
bnd
add
sbb
cmpsb
mov
shrl
jae
pop
sbb
mov
clc
pop
call
hlt
fs
xchg
lret
adc
mov
das
les
push
lcall
sbb
fwait
push
pop
cmp
jmp
sub
jbe
fcmovb
pop
pop
jnp
or
mov
xor
fs
dec
add
xlat
push
scas
scas
shll
call
cmp
iret
aad
mov
lock
test
cli
ljmp
push
je
sbb
inc
jb
cmp
pop
or
fbstp
mov
push
loop
fwait
sti
out
aaa
fdivr
jmp
and
push
shrb
aad
mov
out
lahf
xchg
lea
ljmp
inc
sahf
leave
xor
cmp
jp
cs
adc
out
inc
push
pop
and
ds
or
call
mov
out
sub
mov
xchg
sti
cmp
pop
inc
scas
aad
int3
mov
or
loope
imul
push
add
test
jno
jmp
jp
push
fwait
mov
xrelease
in
fists
test
es
test
cmp
notb
outsb
icebp
and
lcall
cld
mov
mov
cmp
xor
lcall
test
cmp
cmc
ljmp
mov
xchg
faddl
fsts
call
movb
sub
sti
lahf
gs
ret
pop
push
fldcw
out
sarb
fcmovnu
mov
xor
enter
subl
shll
cmp
mov
lock
sbb
out
ljmp
mov
or
mov
jne
filds
inc
ds
test
icebp
repnz
imul
push
and
cs
es
outsl
test
int3
sbb
pushf
movsl
dec
lcall
sub
popf
inc
xchg
jg
jp
pop
lcall
xchg
xor
xor
cli
mov
and
xor
loope
pushl
ret
xbegin
add
fdivs
inc
jg
jg
out
into
mov
cmpsb
sub
cmpsl
inc
lret
addb
jmp
mov
lods
inc
outsl
aam
mov
jecxz
loopne
ljmp
cwtl
xor
xchg
incb
fwait
push
ljmp
push
cmp
lcall
ret
xor
pop
sub
inc
inc
ljmp
ss
pop
lock
leave
push
stos
mov
jns
movsb
aaa
fldt
adcl
cmp
mov
fdivrl
mov
stos
add
xchg
ss
sub
add
lcall
inc
and
xchg
mov
gs
andb
sub
lret
test
lods
fdivrp
fcomip
jmp
inc
mov
sub
enter
sbb
add
add
call
add
es
mov
dec
mov
lock
clc
pushl
sbb
enter
adc
xor
cld
jg
mov
insb
shr
sub
ljmp
subb
adc
adc
cmpsb
inc
xor
ljmp
sbb
add
xor
dec
push
out
ret
call
sbb
in
mov
push
xchg
ret
fistl
fs
aam
add
ficompl
adc
xchg
pop
dec
js
lahf
ret
ficoml
mov
jmp
inc
clc
out
pop
in
in
add
roll
in
in
repnz
pop
adc
xchg
ljmp
push
mov
pop
mov
test
mov
out
cmpsl
mov
test
jecxz
repnz
jnp
incl
push
fmuls
sahf
fdivl
cmp
and
add
test
or
popa
mov
outsl
and
les
cltd
and
add
pop
xor
jle
push
sbb
fimull
mov
dec
je
jle
pop
mul
shrd
dec
aad
jmp
and
inc
mov
dec
stc
jns
repz
rol
into
int
xchg
in
iret
inc
lcall
sbb
xor
les
fnstsw
cmpsl
dec
jnp
ljmp
inc
fcomi
ret
hlt
mov
aaa
loopne
add
dec
jp
imul
push
mov
ljmp
jl
jbe
int
jecxz
loop
fldcw
push
add
jg
adc
aaa
icebp
bound
jg
cli
call
icebp
jp
out
xchg
and
ljmp
inc
loope
push
jge
sub
fcomip
inc
sti
outsl
pop
jbe
jne
xlat
dec
cmp
jno
in
dec
xor
rol
xchg
xchg
dec
or
and
lret
jnp
cmovl
andl
shrb
sbb
jo
call
imull
push
fbld
gs
mov
nop
pop
test
xchg
repnz
lods
popf
mov
dec
lret
and
and
cmc
jecxz
lret
nop
sbbl
jg
fs
cmc
ret
popa
cs
test
jmp
fxch
lret
adc
xchg
aas
popf
lock
dec
and
dec
rcll
ljmp
cli
pushl
outsl
jle
int3
das
sbb
outsb
push
pop
in
mov
incl
push
xchg
cmpl
shr
cmp
xchg
mov
ljmp
std
ljmp
sub
mov
nop
cmc
push
ret
mov
cmp
ds
in
fnstsw
or
gs
pushf
test
jg
dec
test
andb
mov
gs
jmp
fwait
sub
loope
es
mov
decl
mov
sahf
fadds
loop
rorl
mov
ljmp
or
or
sbb
repnz
out
pop
aam
xchg
push
push
std
mov
repnz
sti
mov
lcall
ret
or
mov
das
aas
xchg
scas
out
mov
decb
popa
xchg
push
or
pop
or
hlt
pop
jne
sti
mov
out
shll
fdivr
aam
inc
movsl
loope
gs
push
in
leave
mov
or
in
jg
sahf
movsb
jge
cmp
pop
lahf
sbb
push
pop
mov
scas
scas
push
add
ljmp
in
fiadds
mov
sub
sbb
into
popf
loope
fistps
push
cmp
call
dec
mov
dec
sub
test
pop
push
repz
add
xchg
mov
mov
cld
lcall
add
or
lret
cmp
xchg
dec
mov
dec
incb
mov
mov
ljmp
xchg
pop
mov
ret
lret
and
mov
in
scas
pextrw
add
shlb
divb
jmp
out
cmp
xchg
daa
mov
outsb
dec
loope
mov
push
cmc
mov
scas
mov
mov
dec
icebp
jae
xor
lcall
sub
xchg
and
pop
mov
pop
cmpsl
lds
adcb
fidivrs
sub
or
mov
jmp
in
hlt
cli
test
sub
push
inc
inc
scas
gs
mov
jl
icebp
dec
mov
fwait
outsb
push
bound
inc
cs
dec
pusha
fldt
xor
and
push
mov
in
and
dec
gs
sbb
mov
jle
xchg
pop
adc
andl
mov
les
cmovp
dec
sahf
sub
les
mov
outsb
sub
incl
jge
and
es
mov
stc
mov
test
call
incl
pusha
cmp
movntps
in
dec
push
adc
mov
fisttps
fcoms
xchg
add
cmp
stos
lret
fsubrl
jnp
lcall
jmp
and
idiv
bound
push
pop
cmp
dec
and
add
fnstsw
lcall
test
cld
stos
dec
or
pushl
fisubl
hlt
add
or
adc
dec
das
sub
xchg
lods
dec
aaa
jg
call
dec
cmp
rclb
cld
sarl
mov
mov
mov
lcall
mov
clc
or
push
and
loop
call
ss
repz
sarb
addl
mov
rcr
push
mov
mov
bound
mov
lods
mov
adc
call
repnz
aad
stos
mov
fdivrs
xchg
xchg
outsl
icebp
ljmp
roll
std
popf
mov
cmp
mov
mov
xlat
jg
mov
mov
jmp
inc
cmpsb
lret
dec
ret
fdivrp
lcall
cld
es
push
mov
jge
ret
push
mov
add
push
push
mov
jo
ror
stos
shrw
movaps
inc
push
jge
pop
push
lcall
mov
lahf
jg
repnz
call
jo
add
push
movsb
movsb
orl
lret
mov
notl
loopne
mov
das
icebp
cmovs
dec
ret
xchg
mov
cmpsl
mov
mov
mov
loopne
enter
and
xchg
stos
add
add
call
in
mov
je
add
data16
or
push
jg
mov
push
mov
lods
negl
cmp
negl
ljmp
xor
jnp
inc
or
popf
sub
inc
cs
push
ret
jne
mov
pop
jg
stc
mov
add
mov
xchg
arpl
ret
ss
inc
and
push
inc
pop
mov
mov
cs
cli
pop
out
stc
lods
in
movsl
or
mov
jo
xor
in
pop
mov
fbstp
adcb
sbb
cld
incl
icebp
fcoml
pop
es
and
cli
dec
jecxz
out
incl
aad
dec
int3
mov
fistl
mov
lods
or
sub
jb
ja
xlat
sbb
jl
pushl
rcr
movsl
pop
and
pop
jp
clc
stos
mov
hlt
clc
jmp
inc
iret
ret
rcll
ss
jmp
pusha
std
in
idiv
push
add
and
add
xchg
sar
mov
dec
mov
or
les
pusha
push
add
add
jmp
in
jmp
loopne
lea
pop
lea
sbb
adc
mov
push
add
jno
cld
in
add
push
xchg
pop
aam
popa
lods
pop
rcrb
xlat
push
pushl
mov
inc
ja
mov
jbe
stos
subl
jmp
mov
aaa
push
push
in
mov
or
stos
and
int3
pop
stos
aad
mov
or
xlat
xchg
clc
movsl
je
or
xchg
and
jg
incl
enter
std
dec
xchg
inc
insb
cmpsl
sub
xor
mov
in
outsl
lock
or
or
inc
xchg
jno
sbb
sbb
decl
add
fisubrl
inc
or
push
lock
mov
jg
pop
adc
jmp
ja
insl
leave
jl
mov
mov
xchg
push
or
insl
pusha
or
das
cld
loope
and
loopne
jo
pop
inc
jb
ret
into
cld
jg
stos
leave
mov
aas
repz
ffree
add
cmc
jl
lds
std
adc
dec
push
hlt
jg
call
in
push
xchg
rep
push
movsl
pop
aad
mov
dec
pop
fsts
cld
rorl
push
sbb
cwtl
loope
xlat
aaa
add
sub
fnstcw
jo
ljmp
test
mov
mov
movsb
jl
movsb
sub
dec
aam
push
cld
jg
aam
push
push
pop
mov
stc
test
and
sahf
mov
shrb
mov
sahf
push
cld
ljmp
js
les
frstor
push
push
sbb
loopne
xchg
rorl
jb
test
pop
lret
cmp
and
push
fdivrs
jno
pop
clc
jmp
orl
pop
out
in
out
aam
jns
shll
jmp
adc
add
pop
dec
and
and
ja
jne
dec
mov
fldenv
js
test
sbb
ret
fs
stc
add
mov
add
pop
dec
icebp
test
jg
pop
pop
in
inc
iret
xor
add
inc
loope
ljmp
jge
push
aad
js
jle
push
xor
test
jmp
mov
cmpsl
inc
push
out
add
pop
out
je
lret
outsb
jb
sub
sar
incl
pop
and
push
cmp
fidivs
and
out
call
fistpll
jle
mov
mov
and
out
fst
adc
push
jnp
scas
sub
adc
pushl
sti
pop
xchg
xchg
hlt
fcoms
or
and
movsl
ljmp
mov
mov
or
xchg
es
inc
jnp
mov
jmp
push
and
fs
call
push
push
cmpsb
xchg
les
jnp
fistps
add
jmp
stos
cmpsl
ret
movsl
push
mov
dec
dec
andl
sub
push
outsb
es
js
cmpsb
dec
iret
add
stos
jnp
scas
push
cltd
hlt
fwait
loope
inc
mov
jmp
jns
std
movsb
adc
cmp
ljmp
dec
addr16
std
pusha
inc
outsl
hlt
jmp
insl
fcompl
aas
xor
or
sub
mov
stos
fwait
int3
shrl
fisubrl
ljmp
sub
popf
lds
mov
in
cbtw
and
insl
out
sub
sub
push
push
jne
cmpsb
jmpw
in
test
mov
add
shlb
pop
test
mov
sti
in
sbb
rcl
aas
mov
test
sbb
cmc
int
and
dec
cs
push
cmp
sub
std
or
jmp
fimuls
mov
or
mov
sub
decl
je
inc
repnz
imul
pusha
sbb
mov
ljmp
decl
dec
rolb
aad
cmp
mov
dec
je
push
cmp
or
mov
pushl
shlb
in
mov
add
push
pop
adcb
push
jg
clc
jg
add
sti
and
xchg
xchg
subb
xor
adc
lcall
popf
daa
rorl
mov
mov
lds
xchg
testl
bound
inc
sub
mov
and
pushf
test
jp
or
or
stos
xchg
jne
cmp
es
jne
in
push
lods
lret
mov
push
call
ljmp
jp
sub
xor
dec
jecxz
cmp
popf
sub
call
sbb
cli
sub
mov
icebp
xchg
sub
mov
outsb
lock
push
dec
mov
aaa
clc
mov
mov
js
cmpsb
sub
in
or
cmpsb
std
mov
mov
addr16
pop
jbe
inc
push
ss
call
adc
adc
aaa
mov
cmp
repnz
std
jo
mov
jmp
push
nop
fsts
in
sbb
jnp
loope
in
inc
add
out
cmp
jne
out
cmp
in
dec
or
xchg
data16
sub
lahf
add
or
aaa
xor
shrb
ljmp
ja
clc
mov
lods
nopl
jp
int3
jle
loop
mov
add
jo
mov
ja
push
pop
and
pushl
and
or
mov
bt
lods
outsl
hlt
decl
sbb
data16
mov
dec
mov
and
aaa
jp
int
mov
es
adc
loopne
jmp
mov
das
imul
rol
dec
int
sub
testb
fsubp
ja
ljmp
push
loope
add
fwait
mov
mov
cltd
push
stc
inc
rclb
push
mov
adcb
or
ljmp
mov
xlat
sub
and
push
lret
or
adc
pop
xor
movb
xchg
mov
pop
lods
repnz
mov
lcall
mov
scas
add
cmp
loop
aam
loope
incl
lcall
mov
mov
add
daa
cmp
int
outsl
cld
lcall
aam
xor
sub
scas
sub
xor
push
pushl
mov
pop
inc
jns
imul
mov
fnstsw
xchg
sub
imul
fcompl
or
or
call
shlb
in
push
xor
mov
ss
out
das
aam
jmp
xor
jmp
and
push
dec
dec
insb
xchg
imul
xchg
sbb
inc
fwait
push
cmp
ljmp
cmc
into
mov
shrl
push
std
inc
and
jno
rolb
lret
sbb
xor
test
dec
mov
dec
push
leave
and
inc
test
loope
push
and
mov
or
lcall
mov
jl
xchg
js
jo
pusha
fs
jg
ljmp
rclb
jo
sub
fdivrp
xchg
cmpsb
fwait
xor
cmp
shll
test
xor
pop
std
inc
imul
inc
gs
pop
ljmp
int3
sbb
xlat
cmpsl
cmp
and
sub
icebp
jne
mov
inc
mov
lock
jg
dec
jnp
jno
int3
cwtl
mov
andl
push
xor
sbb
sub
outsb
sub
mov
out
jg
incl
xchg
pop
bound
movsb
aas
jnp
add
sbb
lock
call
divb
mov
sbb
dec
fwait
in
push
sub
cs
cmp
cs
aaa
sub
jp
test
inc
push
sbb
mov
repz
idivb
fisubrl
lret
cs
repz
std
test
stos
xor
inc
test
lcall
pushf
cmp
mov
in
xchg
arpl
xor
mov
insl
add
push
das
dec
mov
outsb
sub
or
outsl
fdivl
dec
and
adc
jge
jg
lahf
pop
ljmp
sbb
gs
cmpsb
test
xor
das
adc
insb
out
push
or
ljmp
popf
jg
push
rorl
jge
movsb
sbb
test
pop
loope
pop
clc
jg
imul
notb
inc
movsl
mov
mov
das
jbe
rcll
shl
inc
push
sbb
xchg
lock
sub
sar
cli
adc
pop
mov
pop
xchg
sub
add
aas
adcl
sbb
mov
insl
cmc
jmp
dec
push
fs
mov
jg
pop
sbb
repz
mov
jno
std
hlt
movsl
rolb
push
ret
call
pushf
and
dec
ficoml
xor
jbe
pop
sbbb
mov
sar
incl
jno
adc
mov
js
imul
movsl
bound
mov
dec
sub
loop
aad
fdivrl
call
jg
fsubrs
cli
cmp
sbb
xchg
sbb
ljmp
cmp
dec
inc
rcrb
test
dec
adc
cmp
jl
in
addr16
pop
ret
mov
push
fisubrs
xchg
fcomip
jns
mov
movsl
outsb
xchg
ljmp
fsubs
ret
inc
adc
lcall
and
xor
jnp
cli
mov
ficoml
cld
decl
dec
gs
sub
inc
push
sub
mov
pop
and
add
xchg
sahf
jecxz
decl
fdivs
jmp
jge
std
add
call
cli
outsl
div
xor
test
mov
jle
inc
sar
or
addb
mov
dec
rcrb
gs
lcall
mov
popw
xchg
lcall
in
push
and
and
cld
mov
push
dec
and
cmpb
aad
dec
mov
stos
jae
push
jo
ljmp
mov
negb
cld
adc
int3
pop
fcmovnb
movsl
bound
into
sti
stos
mov
loope
jns
xchg
xchg
lods
lret
loopne
dec
push
and
arpl
repz
pop
push
cmp
cmp
mov
mov
outsl
jp
add
lods
xchg
xchg
mov
cmpb
pop
adc
cwtl
movsb
loope
pushl
xchg
arpl
mov
fwait
adc
push
xor
inc
cmc
cmp
jmp
or
pop
jmp
or
dec
and
and
jae
test
mov
stc
inc
cmc
sahf
xor
push
popa
addr16
mov
int
subl
shrl
and
jp
jno
movsb
cmp
jg
mov
push
rolb
fs
mov
hlt
dec
sti
repz
xchg
pushl
into
movsl
ljmp
inc
pushf
jecxz
enter
pushf
stc
std
xor
out
orb
call
push
or
cmp
cmp
outsl
out
adc
ljmp
cltd
mov
mov
roll
or
into
sub
aaa
dec
inc
sub
movb
inc
les
lret
cmp
fists
flds
add
incl
in
shlb
mov
pushf
dec
sbb
xor
ret
daa
mov
xchg
les
stos
sbb
sbb
push
dec
mov
movsl
sbb
lahf
cmp
sub
push
test
fwait
sahf
int3
pop
int
insl
sbb
add
call
jae
mov
mov
arpl
sub
fstpt
loop
xor
sbbb
rcrb
shll
jmp
lds
pop
pop
mov
push
push
push
gs
pop
addr16
inc
lock
das
lret
fdiv
iret
outsl
fdivs
sarb
xchg
adc
call
fimuls
push
filds
or
jge
mov
mov
movsl
jg
mov
dec
sbb
in
xchg
mov
sbb
mov
push
scas
adc
test
std
cltd
mov
xor
lahf
out
cli
inc
in
cwtl
lea
push
scas
adc
ljmp
hlt
mov
push
imul
push
jae
nop
pop
mov
dec
std
push
les
cmc
sub
sub
or
adc
jecxz
adc
push
jg
mov
or
adc
in
pop
test
sbb
cmp
jae
xchg
decl
std
inc
movsb
pop
ds
mov
dec
mov
adc
lds
lret
push
lock
push
lcall
js
inc
cli
mov
adc
xchg
push
das
mov
xor
mov
ljmp
fisttps
call
cmpsl
mov
mov
mov
decl
std
lcall
sete
sub
divl
jbe
sub
call
iret
arpl
pop
cmpsb
push
xor
jae
cld
adc
push
push
mov
sub
cmp
inc
mov
imul
js
inc
es
sub
sti
sbb
mov
xor
inc
dec
cld
das
cmc
int
and
inc
jno
or
cltd
xchg
pusha
inc
sbb
leave
xchg
mov
lahf
sub
decl
pop
inc
in
into
scas
into
jbe
hlt
ds
mov
imul
cmpsb
fs
shlb
add
push
outsb
rcll
dec
rclb
mov
incl
rcl
aam
insl
dec
jle
mov
mov
jo
mulb
dec
push
push
or
xchg
xor
push
push
arpl
mov
decl
xchg
inc
jge
mov
andl
lret
mov
test
mov
adc
sbb
lahf
pop
js
adc
out
jbe
jle
inc
mov
movsb
out
rcl
fidivl
xor
mov
mov
int3
imul
retw
in
lcall
xchg
clc
or
pop
scas
sti
mov
repnz
outsl
cmpsb
push
mov
dec
adc
call
xchg
movsb
fildl
jp
out
xchg
push
jmp
mov
xor
and
dec
or
lock
mov
in
jecxz
push
fs
out
lods
xchg
xchg
mov
push
outsl
mov
inc
lods
mov
sub
es
jmp
std
ret
pop
mov
or
mov
dec
sbb
aad
or
pushl
cmpsl
movsb
loop
and
mov
pop
jne
push
jno
push
sub
in
sub
cmpsb
sub
jmp
lock
sbb
jl
pop
ss
inc
push
sub
es
imul
jg
aam
or
mov
push
pop
push
ljmp
mov
adc
outsb
add
and
adc
shll
pushl
movsl
sbb
lret
es
in
push
or
arpl
xor
adc
add
cwtl
mov
dec
imul
push
jg
cmp
aas
je
mov
jge
jl
dec
pop
test
mov
lcall
jl
cwtl
fwait
dec
or
subb
cli
add
cmpsb
mov
pop
and
orb
xchg
mov
movsb
mov
adc
inc
pop
sub
jg
pop
ljmp
out
in
dec
testb
cltd
adc
sbb
and
call
sbb
xor
daa
push
icebp
ja
mov
cs
fwait
hlt
adc
dec
xor
test
jl
gs
ss
sbb
loopne
adc
mov
push
ljmp
lods
sub
xchg
mov
in
cmp
iret
mov
mov
mov
lcall
jae
insb
call
idiv
repz
pop
add
adcl
pop
cli
sahf
repnz
xchg
stc
mov
imul
pushl
nop
out
cltd
and
jg
add
push
xor
std
dec
and
sarb
fwait
repnz
and
rcr
lds
clc
cld
lcall
hlt
xchg
push
add
out
fisubl
pop
subb
inc
xor
push
dec
mov
daa
bound
and
clc
jg
sub
lcall
cmp
test
cmc
call
inc
sub
icebp
push
xor
xchg
add
in
addr16
incl
mov
inc
jecxz
daa
push
fstps
xor
aas
pop
ret
cli
add
mov
jns
jle
loop
xchg
and
xchg
and
jns
or
push
sub
and
mov
push
je
push
sbb
adc
sti
add
inc
popa
sub
push
push
pusha
mov
sbb
lcall
imul
sub
cli
int3
mov
ljmp
add
jl
fbstp
jg
cltd
daa
inc
pop
movsb
add
xlat
cmp
xor
scas
cld
das
cld
incl
pop
iret
adc
mov
and
scas
lret
jne
push
sbb
jns
pop
lcall
pop
cmp
sbb
and
xchg
nop
bound
mov
subl
mov
stc
ret
and
jp
push
mov
mov
fistpll
pop
lds
dec
xor
jae
push
call
push
inc
lcall
roll
lret
shrl
jmp
dec
bound
sbb
mov
sbb
xchg
push
mov
decl
nop
or
xorl
fwait
popf
pop
push
adc
or
hlt
out
pop
add
icebp
mov
data16
add
shll
ficompl
roll
test
loopne
mov
sub
jbe
ret
sahf
nop
cld
lret
call
xchg
in
mov
fsubrs
cmp
or
mov
jp
mov
lahf
pushl
adc
push
lea
inc
sub
stos
incl
cmp
adc
mov
ljmp
js
mov
mov
test
clc
push
adc
adc
data16
loope
sub
andl
jae
insb
movsl
push
xorb
xchg
pop
ja
clc
jg
pop
mov
push
mov
mov
adc
in
sub
jnp
inc
inc
incl
decl
mov
mov
and
aam
xchg
std
in
jbe
lcall
push
cmpsl
and
je
mov
nop
jle
fdivrs
cld
call
clc
add
push
or
scas
mov
stc
adc
ljmp
gs
pushl
pop
pop
and
fsubs
adc
mov
rcl
out
sub
mov
aam
nop
fisttps
mov
enter
leave
inc
ret
test
arpl
jg
jmp
push
fs
or
lods
bound
movsb
dec
pop
cs
fwait
ret
add
cld
incl
pop
bound
test
mov
and
loope
fs
add
push
jno
int
sub
lea
pop
ljmp
mov
jno
mov
aam
jmp
pop
clc
fwait
and
push
mov
push
and
loopne
cld
dec
clc
mov
mov
jl
and
mov
inc
clc
js
mov
sub
insb
nop
adc
and
ret
ficomps
repz
xor
call
push
shrb
xchg
add
cwtl
sub
leave
pop
pop
mov
jg
pushl
xor
sbb
divl
jne
in
ret
pushl
pop
fists
mov
push
mov
push
hlt
adc
jg
mov
aam
inc
sbb
sti
dec
ss
punpcklwd
test
jmp
jg
mov
test
dec
sbb
stos
xlat
jg
push
xchg
daa
jg
scas
nop
cmp
js
and
jp
je
inc
popa
xor
jle
mov
cmp
lock
ljmp
cltd
in
sbb
push
pusha
push
push
cmc
mov
mov
cmp
iret
push
aam
lcall
gs
mov
mov
cld
xchg
or
mov
pop
clc
mov
xchg
icebp
ret
push
daa
into
cmp
mov
push
jmp
call
push
mov
sbb
mov
cli
js
fsts
incl
xor
pop
ficomps
cmpsl
push
dec
sbb
and
jbe
out
adc
pushl
jle
sub
orl
mov
lods
mov
in
int
int
outsl
lock
mov
sbb
in
sub
mov
aad
jp
xchg
repnz
xor
ljmp
dec
mov
lcall
int3
ret
decl
mov
inc
xchg
sub
fadds
mov
mov
sbb
push
pop
nop
push
lcall
rclb
xchg
lret
testb
aam
jo
out
decl
fdiv
add
int3
pop
inc
mov
xchg
push
cltd
mov
ror
or
outsb
mov
out
cmp
xchg
fidivs
mov
outsb
jg
jg
push
call
imul
push
dec
ret
hlt
mov
fadds
push
sti
aaa
in
or
test
loop
imul
loope
push
mov
das
in
rorl
out
scas
int
std
leave
jle
add
cmp
fcmovu
call
mov
in
xor
or
hlt
mov
loope
lds
mov
scas
ss
jp
cli
mov
jae
addr16
adcb
adc
ljmp
inc
sbb
pop
sbb
and
enter
loopne
stos
scas
inc
outsb
mov
jge
mov
incl
cld
push
xchg
jbe
out
jbe
or
std
mov
inc
adc
call
dec
xchg
aaa
movsl
mov
cmc
addr16
call
sahf
pop
lret
pop
shl
dec
dec
inc
ss
jmp
xorb
mov
jecxz
outsb
mov
in
imul
les
sbb
add
lods
dec
test
inc
push
inc
pop
fisttps
jnp
sub
cmp
in
sbb
cli
pushl
and
sbb
faddl
and
cli
data16
call
pop
int
jbe
adc
int3
add
xor
lea
fstps
mov
shll
insb
sbb
pop
or
stos
push
adc
mov
pop
and
adc
sti
scas
fisttpl
cmp
aad
outsb
jbe
outsl
jne
mov
sub
rcll
jp
faddl
nop
jbe
mov
cwtl
sub
mov
out
add
or
into
outsl
add
push
jg
pop
jmp
inc
xlat
and
or
push
mov
lock
js
inc
mov
sbb
or
sbb
inc
mov
mov
pop
ljmp
mov
pminub
pushl
mov
jl
inc
xchg
push
adc
push
movsb
arpl
mov
jg
icebp
mov
int3
test
subb
je
filds
dec
js
iret
sti
jl
call
fisubl
imulb
loopne,pt
imul
out
dec
cmp
sub
jmp
or
xor
xor
imul
clc
xchg
push
test
jge
stc
push
xchg
aas
int
movsl
adc
ret
lret
pushl
sbb
cmp
dec
mov
push
dec
mov
out
aad
out
inc
adc
pushl
out
out
adc
push
push
push
popa
inc
cmp
jmp
xor
push
loope
insl
decl
jg
lea
dec
xor
jbe
sbb
fildll
lock
cmp
movb
out
in
lods
mov
add
stc
mov
fadds
leave
sbb
pushl
sub
test
scas
inc
mov
jne
fs
dec
fiaddl
sbb
fnstsw
inc
sub
daa
hlt
jp
dec
lea
adc
jb
and
adc
cli
insb
cmp
loop
les
clc
cmpl
mov
lcall
aam
sbb
fmull
jmp
jbe
inc
aaa
push
out
mov
outsl
push
dec
mov
decl
aad
mov
das
adc
sbb
jae
push
inc
jecxz
add
les
cmp
dec
mov
add
ror
jg
movsb
andb
push
stos
fstpt
and
dec
mov
jnp
stos
sub
mov
rcpps
ja
mov
loopne
and
subb
mov
inc
cmp
inc
call
hlt
xor
jge
aaa
inc
lds
dec
xchg
popf
add
orb
xor
xchg
test
cmp
mov
loopne
shr
das
xor
sahf
pop
push
mov
outsl
mov
outsl
mov
fmuls
mov
rclb
pop
cmpsl
fld
pop
jne
ror
outsl
icebp
lcall
mov
or
xchg
das
jae
insl
mov
mov
sti
inc
jg
pop
std
sarb
xor
sub
xlat
and
lock
adc
stc
das
shl
fists
cmp
lods
clc
push
ret
mov
cmp
pop
mov
mov
push
ljmp
cld
jl
xor
cld
or
jo
repnz
lods
xor
lea
jmp
stos
lcall
int
js
in
pusha
or
sbb
jo
cmc
cs
mov
out
ds
mov
aaa
clc
incl
xchg
or
and
leave
js
cld
jge
cltd
cmp
push
lock
lcall
sub
test
sbb
lea
inc
into
cli
jbe,pn
adc
pop
adc
inc
gs
lcall
pop
adc
arpl
xchg
jne
dec
icebp
xchg
pop
clc
out
pop
mov
fistpl
xor
cmp
pop
call
xchg
ljmp
sbb
out
dec
dec
ljmp
mov
mov
fsts
lea
jb
decl
fwait
adc
in
xchg
add
clc
arpl
aaa
and
js
sub
sub
sbb
mov
sbb
add
dec
gs
mov
lret
xchg
pusha
cld
mov
enter
or
fsqrt
dec
js
pushl
out
xchg
mov
jle
icebp
rclb
call
mov
mov
std
sbb
shrl
push
insb
push
imul
jmp
adc
adc
cmp
std
mov
push
push
notl
decl
sub
aad
adc
sbb
sahf
lcall
mov
or
xadd
fwait
mov
ljmp
ret
push
dec
and
mov
outsl
fldenv
ds
fistps
mov
pop
mov
std
xor
js
jno
sub
adc
pop
jl
push
sahf
fcoml
or
sub
pushf
rcrl
pop
stos
xlat
pop
xchg
mov
std
jg
stc
call
addr16
outsl
cmp
jae
push
lock
dec
enter
and
decl
and
pop
mulb
mov
xchg
sub
xlat
adc
adc
jmp
stos
lock
addr16
int
outsl
cwtl
mov
wbinvd
pop
jmp
call
pop
xor
xorl
popf
push
pop
lret
aaa
movsb
jae
pop
cli
jmp
jecxz
not
or
inc
push
pop
test
mov
xor
jg
dec
add
inc
fdivrp
mov
call
jge
mov
xchg
mov
or
aaa
cmp
xchg
les
subb
addr16
push
filds
push
arpl
inc
jle
repnz
and
mov
xchg
in
sbb
mov
popa
inc
sbb
jae
mov
pop
dec
imul
mov
push
cmp
pop
jmp
std
ret
mov
xchg
pop
mov
lods
mov
cmpsb
pop
mov
imul
outsl
pop
ljmp
aam
jae
enter
insb
jle
lcall
fistpll
sub
inc
pop
push
sub
arpl
xchg
mov
incl
and
mov
mov
xor
ja
jnp
mov
pop
jns
cli
jnp
push
decl
in
test
push
xchg
xchg
and
insb
fisubs
das
mov
mov
and
divb
mov
call
cli
call
sbb
adc
add
inc
outsl
and
repz
dec
cwtl
xor
mov
call
xlat
cli
clc
mov
out
mov
arpl
or
xlat
inc
jge
dec
xor
sbb
xchg
sub
xchg
jno
cs
or
mov
mov
mov
int3
pop
jo
loop
mov
dec
or
cltd
mov
pop
lahf
cwtl
sti
test
rcrb
mov
push
sti
pop
lcall
sub
test
outsl
je
push
fwait
in
mov
jp
push
andb
or
ljmp
je
bound
mov
cltd
dec
dec
mov
mov
lods
in
ss
fbld
loopne
pop
orb
pushl
mov
add
cltd
cld
das
push
in
insl
popa
sub
add
mov
jmp
jmp
es
adc
mov
decl
popf
inc
xor
sbb
mov
and
out
test
iret
dec
sti
icebp
leave
pop
cmp
push
and
push
ljmp
jge
cmp
sub
gs
jmp
idivb
or
insl
in
sbb
push
mov
pop
cli
mov
aad
int
push
mov
xchg
sub
adc
and
ljmp
jno,pn
roll
inc
mov
push
cmpsl
ret
adc
aad
cltd
loopne
call
cmp
cmp
push
daa
mov
mov
je
add
movsl
jmp
les
sahf
sbb
test
pop
jp
or
xor
movl
test
pushf
xor
cld
cmovo
decl
push
cmc
dec
mov
or
lcall
push
js
mov
iret
ja
test
enter
out
je
inc
ja
hlt
pushl
add
and
and
xchg
push
push
in
cmp
insl
mov
sub
daa
pop
push
and
sarl
xlat
jb
jne
xchg
cli
decl
add
test
xor
add
push
pop
jp
mov
stos
dec
jb
incl
xor
stos
popa
lods
cmc
outsb
cld
and
push
push
sbb
popf
negl
push
inc
jmp
xor
jno
popa
lcall
and
les
xchg
or
add
mov
pop
cmp
sub
sbb
mov
mov
push
pop
pop
out
cmp
cmp
xchg
outsl
bswap
repz
test
sbb
arpl
cmp
pop
lock
decl
xchg
mov
aad
cmp
scas
push
mov
insb
cmp
mov
ficoms
mov
dec
mov
shrb
orl
mov
arpl
jbe
dec
dec
decl
int3
sub
xchg
hlt
sbb
sahf
lock
push
jnp
cmp
aam
mov
ds
in
cmpsb
or
mov
ljmp
adc
mov
sbb
leave
out
and
rcr
cmpsl
hlt
bound
sub
inc
std
mov
into
dec
inc
adc
stc
and
sar
js
mov
in
into
das
dec
dec
aaa
ficoms
gs
incl
pop
out
adc
add
mov
jmp
or
fistpl
mov
or
jg
fbstp
cmp
aaa
sti
stos
dec
sar
push
ljmp
ss
jle
lcall
sbb
call
inc
scas
nop
push
les
mov
push
sbb
pop
repnz
mov
call
pmaxsw
loopne
mov
xchg
fmull
jecxz
jg
loop
or
xor
fdivrs
add
decl
jno
or
mov
and
dec
out
repz
loopne
mov
fucomip
push
fcomps
aam
ret
jno
sahf
test
lret
call
and
cs
cmp
jnp
or
sbb
sbb
adc
ljmp
inc
fldcw
fcmovu
adc
jns
and
lods
int3
clc
sub
popf
xchg
aas
arpl
data16
in
jecxz
je
push
into
jb
test
jns
sbb
mov
shlb
pop
aad
inc
jno
out
inc
mov
dec
int3
cli
mov
inc
adcb
imul
inc
jl
adc
into
mov
mov
movsl
push
cltd
jge
into
jbe
or
jmp
nop
int3
pop
popa
mov
jle
lcall
sbb
xchg
sub
push
dec
fcmovnb
mov
mov
mov
mov
adc
xchg
pop
and
or
std
in
sub
faddp
lret
jno
mov
or
mov
testl
dec
outsl
sahf
mov
lcall
das
cmp
lods
mov
sbb
mov
adc
pop
mov
cmp
dec
inc
lock
clc
call
dec
xor
pop
and
shr
push
mov
xchg
jmp
pop
leave
in
fbld
sarl
push
out
icebp
pop
repnz
inc
fucomp
std
idivb
jle
push
lods
lea
add
sti
in
lcall
imul
repz
out
cmc
idivb
pop
sbb
test
int3
pusha
sub
jg
loopne
repz
pop
xor
xchg
pop
jp
cmp
cmp
jg
pushl
arpl
mov
add
jo
call
orl
add
mov
and
adc
cmp
sub
and
and
in
cmp
sub
lea
cli
lcall
xor
sbb
ljmp
decl
fucom
pop
jmp
popa
mov
ja
stc
js
xor
inc
or
push
adc
in
shll
lds
xchg
std
stos
sbb
outsl
jg
push
sarb
sub
and
fwait
cmp
stos
std
sbb
loop
or
lret
aam
decl
or
dec
mov
sub
int3
je
and
lcall
lahf
pop
sub
cmp
mov
in
lcall
push
sbb
mov
test
push
add
out
ss
lretw
xor
sbb
outsb
jmp
aam
and
pop
xor
out
adc
jmp
pop
outsl
ret
fidivrl
out
adc
cmc
adc
in
pop
ss
scas
repz
jmp
lods
movl
pop
ljmp
test
mov
jo
pusha
and
in
pushl
push
cmp
outsl
sub
lret
mov
mov
push
je
mov
mov
repnz
mov
jp
jne
mov
push
cs
jg
mov
aas
bound
repz
test
cld
test
incl
popf
sbb
xor
aas
dec
sub
pop
shll
sub
leave
jl
mov
jp
mov
stos
lds
mov
mov
xor
pop
dec
mov
sahf
psubw
lcall
in
and
ja
jecxz
mov
shrb
inc
testb
push
pop
pushl
decl
out
inc
mov
repnz
mov
sbb
insl
das
cmc
call
jae
adc
arpl
fwait
rorl
movsb
mov
fdivr
jmp
jmp
and
outsb
dec
xor
xchg
sub
inc
lret
mov
cld
sub
imulb
outsb
cmc
rcll
adc
icebp
test
imul
std
cmpsb
dec
sbb
pushf
mov
xorl
clc
mov
mov
jnp
fs
pop
je
mov
pop
or
les
xchg
lret
movsl
xchg
test
cmpsl
xor
loop
cli
push
jg
push
mov
adc
repz
mov
cmc
outsl
xchg
or
mov
out
add
xchg
cmpsl
aaa
jge
fsubp
fdiv
push
cmp
sbb
cwtl
leave
pop
dec
test
iret
lea
incl
es
mov
xchg
fldl
inc
ss
cmp
fldl
dec
mov
adc
decl
xorb
subps
arpl
jl
repnz
xor
mov
call
or
pusha
xor
int3
jbe
test
loop
mov
or
pushl
out
sbb
jge
mov
mov
dec
in
cmpsl
rcr
adc
loop
push
loopne
vandnps
cmp
lds
decl
scas
pop
dec
std
xchg
sbb
and
adc
push
in
sbbb
popf
xchg
pop
or
jns
test
frstor
ss
or
decl
dec
ficoml
popf
mov
cmp
adc
test
movsb
sbb
out
cli
call
stos
lret
or
movsl
ret
lret
push
dec
mov
push
xor
xchg
sbb
les
push
call
decl
rorl
add
lcall
push
push
sbb
or
and
hlt
mov
test
shlb
cmp
incl
stc
imul
jbe
rclb
mov
test
dec
pushl
jl
sub
das
push
jno
push
push
les
repz
jns
mov
and
ficoml
fildl
mov
call
ret
adc
push
xlat
test
popl
lahf
fstpl
movsl
jne
repz
sahf
sbb
imul
lcall
outsl
adc
bound
ret
jae
mov
loop
inc
aas
cltd
loope
mov
test
push
xor
pop
and
les
shll
sbb
leave
mov
fdivs
cmpb
pushl
mov
sub
or
mov
popf
mov
mov
subb
out
xor
inc
sub
mov
repz
ljmp
imul
lret
cli
lahf
mov
xchg
inc
jmp
scas
lahf
sub
lahf
jle,pt
sbb
iret
movb
fidivrl
add
xchg
lea
es
pushf
fnstenv
ljmp
fcoml
lods
cmpsl
xchg
enter
ljmp
ds
cmp
fadds
xor
adc
xchg
stos
stos
in
cld
mov
cmpsl
sub
out
mov
arpl
das
mov
lret
fdivp
push
sbb
ljmp
mov
loopne
scas
pop
push
xor
inc
sarb
dec
push
mov
repnz
and
mov
xchg
daa
shlb
pushf
mov
cs
sbb
into
sbb
adc
lcall
jno
mov
mov
les
inc
scas
cs
aas
jge
pop
sti
lahf
rorl
mov
inc
cmc
fisttpl
cmpsl
imul
inc
xor
inc
leave
xchg
imul
mov
or
aad
dec
out
push
aam
jbe
out
decl
rol
lret
jp
adcl
push
pop
int3
in
stos
cs
mov
scas
mov
xor
inc
dec
mov
mov
sbb
xlat
mov
xor
dec
mov
adc
jp
in
cmp
mov
dec
andb
lcall
mov
or
test
jbe
insl
inc
sub
arpl
push
mov
mov
mov
push
movsb
and
lods
xchg
dec
outsl
pop
call
pop
pop
es
nop
cli
stos
lods
sbb
sbb
filds
xor
sub
test
cmp
aas
int3
inc
sahf
mov
mov
aaa
repnz
mov
bnd
icebp
push
push
pop
push
mov
scas
std
mov
orl
decl
sub
push
movsb
insb
add
sbb
xchg
xlat
inc
dec
mov
inc
and
jne
jb
jne
sub
sub
out
repz
incl
mov
sarb
pop
sbb
call
data16
add
repnz
cmp
jb
incl
clc
pop
sbb
mov
xchg
xchg
fisubrs
push
enter
dec
push
xor
xchg
adc
mov
addr16
shr
cld
repz
sub
mov
pop
lret
sbb
dec
mov
lds
push
rorb
test
mov
push
leave
jno
fs
mov
sbb
cld
sbb
ljmp
add
data16
jg
and
xor
xchg
xlat
lret
sub
lods
popa
daa
rcrl
push
icebp
jl
mov
pop
mov
movsb
add
ret
pop
in
lcall
pop
pop
inc
push
dec
movsb
test
sbb
daa
adc
addr16
fwait
mov
mov
push
jns
mov
xchg
sub
push
mov
jg
cmp
inc
or
into
pop
lods
outsl
lock
popl
out
in
sub
xchg
sti
incl
fs
push
icebp
add
mov
rcrl
inc
pushl
shr
dec
or
dec
das
adc
add
decl
std
scas
push
jle
std
sbb
dec
mov
imul
dec
ljmp
adc
sbb
dec
sbb
mov
sbbb
mov
add
ds
cs
xchg
jp
mov
sti
into
lods
mov
call
add
mov
fwait
lret
popf
inc
jae
std
enter
pop
inc
push
jmp
adc
pushf
inc
pop
lock
divl
call
dec
out
sbb
inc
push
mov
xchg
call
push
je
or
int3
mov
jbe
insb
popa
cmp
addr16
dec
jg
out
jp
sbb
sti
jl
in
inc
add
add
xchg
mov
mov
mov
call
mov
push
in
icebp
pop
adc
mov
les
cmpsb
call
and
jp
inc
rcr
inc
mov
xchg
xor
xor
lds
stc
jg
je
stos
in
lahf
xchg
les
pop
scas
push
push
cmp
or
push
pop
push
mov
je,pn
dec
dec
cld
rcl
loope
dec
into
push
push
push
mov
mov
push
fdivrl
cli
test
lock
inc
stc
cmp
in
inc
inc
out
pop
lret
sbb
call
inc
xor
mov
std
sub
ficoms
loope
ficoms
loopne
fildl
je
pop
incl
ljmp
int3
test
xchg
xchg
inc
and
cmc
aaa
clc
jg
push
pop
pop
ret
aaa
loop
pusha
xchg
fldcw
incl
inc
xorl
in
inc
test
dec
pop
outsb
inc
mov
cmp
adcl
add
pop
inc
mov
sub
push
rcr
xor
fisubrs
add
repnz
lcall
sub
pop
mov
lods
xor
jle
cmp
idivl
jmp
jle
mov
cmp
ljmp
cld
cmpsl
sub
sub
fiadds
mov
mov
out
dec
je
pushl
test
xchg
lcall
mov
jns
xor
and
call
pop
pop
in
je
add
mov
sahf
sub
mov
sar
lcall
inc
and
dec
mov
rcll
nop
mov
mov
mov
ret
xor
xor
lret
inc
arpl
xor
push
inc
sub
lcall
mov
mov
pop
pop
repnz
push
mov
jo
sbb
pop
cli
lcall
mov
enter
mov
ret
fistps
add
jns
loop
jmp
cli
sub
mov
jno
jb
inc
mov
jb
jg
outsl
pop
inc
sub
inc
hlt
mov
mov
xchg
inc
cmpsl
fldt
xchg
push
hlt
outsl
mov
and
pop
es
cli
ljmp
and
xor
dec
mov
jmp
out
lret
negl
and
push
push
jae
add
call
popa
pop
sarl
rcrl
sbb
hlt
test
jmp
mov
fistpl
mov
mov
mov
mov
sbb
cmp
jne
cmp
fildll
shr
js
mov
in
test
sub
push
into
mov
incl
inc
xchg
imul
pop
jno
lcall
data16
inc
push
negl
jno
ljmp
dec
push
fwait
lock
inc
xor
outsb
mov
stos
orb
push
call
xchg
xor
aad
pop
sarb
incl
fmull
inc
jo
push
dec
pop
mov
add
mov
ret
stos
and
pop
movsl
push
push
cli
in
mov
decl
outsb
shlb
push
jno
fistpl
std
cmp
stc
addl
cwtl
idiv
incl
test
sbb
add
fisubl
test
jmp
mov
inc
test
dec
rorb
arpl
lahf
mov
cld
fistpll
inc
aam
push
push
aas
mov
sub
lcall
push
xor
cltd
sub
leave
push
sarb
lock
ljmp
lock
lahf
dec
push
lock
mov
add
mov
jge
lcall
sti
mov
loopne
or
and
in
or
mov
pop
test
push
fadd
lods
push
sbb
push
cmp
dec
jmp
sar
pop
loop
pop
pop
mov
movq
mov
sub
pop
push
call
enter
jmp
mov
loopne
mov
jae
push
dec
dec
push
mov
and
sahf
push
lock
dec
lods
orl
jmp
pop
inc
jb
jbe
mov
dec
dec
and
aam
jne
bound
lods
cmp
std
jg
add
mov
repnz
mov
cltd
fdivs
pop
cmpsl
mov
cld
aaa
lcall
mov
clc
mov
aaa
xorl
scas
inc
pop
xchg
pop
es
jl
adc
mov
fwait
addr16
lcall
insb
push
popf
inc
cmpb
add
cwtl
inc
pop
mov
sub
mov
dec
rorl
dec
pop
xchg
test
mov
and
fists
dec
jne
inc
cld
ljmp
cld
jns
push
mov
hlt
mov
jecxz
pop
dec
out
sbb
xchg
cld
fdivs
ljmp
rcrb
or
adc
add
pop
xchg
or
adc
shrl
pop
leave
and
sbb
mov
add
pushf
divb
filds
fiaddl
insb
ljmp
push
xchg
enter
fcompl
jmp
cld
fucomip
pushl
jns
xchg
jmp
test
test
push
add
es
adc
xchg
sub
scas
pop
mov
jmp
inc
pop
mov
leave
test
xchg
pop
mov
pop
mov
imul
jp
mov
or
jl
inc
push
imul
or
inc
cmpsl
std
lret
repz
jmp
stc
nop
sbb
jg
mov
mov
mull
in
scas
in
jecxz
ljmp
int3
adc
insl
shl
lock
mov
cwtl
push
fwait
dec
incl
jno
push
aas
lea
jbe
ja
rorl
cmc
xchg
jle
insl
push
or
fistl
add
mov
aas
inc
scas
or
inc
push
inc
xchg
test
bound
dec
loop
pop
out
cmc
add
mov
and
xchg
xor
sarb
pop
je
ja
push
jp
das
pop
fwait
jmp
mov
sbb
out
xorb
and
inc
insl
pop
test
mov
fnstsw
ljmp
add
cmp
dec
xchg
sub
xlat
movb
jg
mov
xchg
jnp
adc
dec
imul
icebp
push
lcall
fwait
xor
lea
push
or
lock
ljmp
imulb
or
ja
sahf
dec
fistpll
shrl
lock
cmp
push
jge
push
dec
cli
icebp
mov
mov
mov
and
ljmp
dec
or
add
inc
or
mulb
scas
decl
int
arpl
loopne
ret
movsb
cmpsb
or
enter
fcomip
push
or
shr
pushl
les
stos
dec
out
out
shlb
xchg
jne
mov
mov
xchg
add
test
sub
cld
push
lahf
jo
push
loop
cmp
loope
sub
jne
or
int
lock
lcall
es
cs
pop
pop
fistps
xchg
push
mov
or
lahf
in
flds
xor
lods
sub
mov
fildll
call
fiadds
lret
push
mov
jl
or
pop
ljmp
mov
hlt
mov
ret
push
sub
hlt
ds
in
lods
mov
rclb
add
lahf
leave
mov
repnz
mov
jmp
or
xor
ret
lret
loopnew
xchg
call
jg
or
popa
addr16
stos
pop
adc
mov
loop
push
push
outsl
lcall
add
test
sbb
inc
pop
sub
lret
add
jmp
push
mov
cmp
loope
mov
xchg
inc
and
add
scas
cmp
mov
ljmp
adc
jne
mov
lahf
cs
insb
mov
lds
rolb
lcall
icebp
xchg
addr16
mov
xlat
sti
cmp
hlt
test
out
ja
loope
enter
inc
bound
fisubs
sub
push
sub
orl
jae
or
loopne
pusha
jb
ljmp
add
popa
mov
pop
mov
inc
or
dec
mov
cld
in
pop
fcomp
insl
out
push
xchg
lahf
imul
cmp
sbb
push
mov
jb
fstl
outsb
ja
pushl
add
mov
xchg
test
adc
add
push
xchg
jg
add
cmpsb
mov
mov
std
push
sub
jmp
jp
sbb
adc
push
sub
fs
jns
fsts
lahf
fnstcw
cli
mov
push
jnp
int
jno
xchg
shll
jg
mov
lcall
cld
stos
jmp
out
loop
or
dec
movsl
inc
aas
xor
cmp
mov
inc
xchg
lock
mov
sub
mov
push
jae
or
call
popl
stc
outsl
or
out
push
outsb
pop
js
sub
std
mov
imul
inc
call
andl
sbb
push
pop
xor
or
decl
dec
mov
imul
lret
and
lods
jl
daa
outsl
lock
jg
inc
or
pop
daa
adc
jnp
inc
das
xor
repz
je
sub
out
rol
mov
addl
jmp
test
inc
daa
out
pop
insb
insb
cwtl
sub
cmova
sbb
jmp
jg
arpl
sbb
sbb
in
movsb
dec
mov
dec
push
stos
arpl
fildl
mov
nop
pushl
stos
call
hlt
daa
cli
es
jg
pop
or
pop
mov
dec
or
jbe
out
jmp
inc
loope
cli
jl
out
shll
test
sbb
cld
lcall
in
in
aas
dec
call
mov
cmc
in
stc
je
dec
push
jnp
ja
test
pop
mov
mov
mov
pop
lret
int3
xor
arpl
sub
fucomip
mov
outsl
pop
push
add
sarl
pop
enter
call
mov
adc
repz
lret
fadd
mov
sub
sub
mov
sub
xchg
and
dec
pop
lcall
jp
pop
aaa
mov
mov
jno
lock
dec
imul
sbb
lods
shrb
jae
xchg
pushf
call
add
dec
xchg
jg
or
inc
add
stc
iret
and
mov
test
gs
test
and
loopne
jne
out
shl
pushl
push
xlat
mov
inc
stos
or
lods
adc
lret
pop
stc
in
jmp
outsl
cmpsl
jmp
push
xor
pop
jmp
or
cld
pop
mov
add
mov
fcmovu
incl
lcall
out
in
loope
pop
push
gs
test
inc
pop
nop
push
mov
cmc
decl
sti
xchg
movsb
adcl
dec
test
das
add
adcl
ficomps
loopne
shrl
ljmp
lcall
push
inc
sbb
leave
xchg
js
test
pushf
pop
leave
imul
pop
clc
popf
sbb
fldcw
jno
push
out
push
adc
scas
scas
xor
icebp
loop
jg
push
cmp
pop
adc
orl
int3
repnz
movsb
add
mov
popf
call
in
pop
xchg
shrl
add
call
aas
aas
or
cmp
call
push
pop
pop
and
xor
jle
imul
pop
cli
fadd
jecxz
insb
mov
push
mov
out
outsb
xor
jmp
pop
decl
jne
jnp
sub
scas
mov
popa
jbe
test
movsb
xchg
jp
jge
add
sti
jmp
sarl
repnz
int3
mov
dec
addb
test
mov
jg
cmovnp
repz
aam
dec
shll
fildl
lcall
add
popa
xchg
mov
ds
mov
push
sub
mov
incl
cmpsb
test
iret
xor
stos
mov
loopew
std
push
jb
cmc
jbe
jg
add
jne
jns
and
pop
arpl
mov
jp
fwait
jne
js
out
mov
pop
call
pushf
mov
xchg
cld
and
dec
jl
xchg
addl
aas
addps
loope
js
lds
gs
in
adc
mov
enter
jmp
cwtl
or
cli
mov
pop
sbb
sbbl
movsl
imul
pop
arpl
add
insb
or
xchg
mov
inc
xchg
sub
xchg
ficoms
decl
ret
aas
lods
sti
pop
loope
movsl
lcall
pop
shlb
je
hlt
mov
jne
xchg
clc
jecxz
jp
inc
mov
add
jge,pt
movsb
rcrb
xor
inc
std
loopne
ja
mov
xchg
test
mov
pop
shl
pop
out
push
add
jmp
and
adc
mov
pop
pushf
repnz
sbb
push
int3
or
jle
xor
in
sar
pushl
mov
mov
mov
dec
or
insb
jnp
into
shr
ja
push
mov
std
jmp
push
inc
xchg
fwait
sub
mov
loopne
sarl
push
cmp
decl
jae
pop
xchg
pop
adc
pusha
rcrl
decl
or
and
sbbb
and
cmp
pop
test
aas
out
push
inc
pop
popa
popf
inc
lods
call
jl
add
push
jns
mov
int3
jl
mov
dec
jmp
fisubs
pop
mov
notl
and
shlb
mov
push
mov
lcall
stos
cmp
mov
popa
mov
mov
lods
mov
clc
ljmp
sbb
inc
sbb
cmp
shl
sbb
jl
mov
sbb
js
lret
dec
cmp
mov
stos
lcall
test
ret
and
mov
inc
ljmp
clc
outsl
std
and
mov
pmulhw
push
jbe
jbe
and
mov
lea
mov
jo
into
push
lahf
pop
lcall
inc
or
repz
popa
xchg
xchg
mov
adcb
pushl
pop
ret
mov
cli
cmc
push
mov
inc
mov
inc
fsqrt
jmp
rolb
inc
xor
xchg
adc
in
call
sub
mov
xchg
mov
mov
dec
mov
test
out
xlat
divl
fs
lcall
inc
lret
cmc
js
dec
arpl
cs
negb
sti
out
icebp
popa
scas
filds
xor
or
fnstcw
call
and
push
and
outsl
push
mov
lock
call
decl
scas
out
ljmp
fbstp
mov
pop
cli
jmp
pop
or
shl
and
inc
aad
cmp
mov
pushl
mov
or
sub
fdivr
popf
and
shll
fidivs
test
movsl
dec
xchg
cmovae
jne,pt
lds
incl
xor
addr16
inc
sbb
dec
lahf
jne
cmp
or
call
lcall
out
mov
jns
ss
dec
test
pop
out
push
push
mov
ljmp
mov
roll
mov
mov
lcall
and
lods
in
mov
or
insb
pop
je
fidivs
in
dec
aam
sbb
jge
xchg
jle
cli
jnp
xchg
jmp
gs
fistpll
sub
fbld
insl
lret
inc
sub
push
pushl
faddl
jge
stos
jg
outsl
test
push
cmpsl
pop
mov
cs
mov
and
mov
or
jae
mov
stos
pop
mov
jmp
push
nop
push
loope
sbb
sub
lds
in
and
or
lcall
jmp
dec
sbb
sbb
es
push
lds
pop
xor
add
decl
mulb
call
and
mov
inc
mov
mov
stos
mulb
xor
and
pop
int
inc
xchg
ret
mov
sarb
pop
push
or
dec
mov
test
jns
ret
and
sub
mov
push
mov
dec
test
push
dec
ret
or
scas
mov
sbb
or
adc
add
pop
jl
push
jbe
and
dec
adc
divb
sbb
mov
sub
xor
aaa
sub
lods
jle
mov
mov
sbb
aas
pop
adc
test
sub
decl
mov
sub
lds
xor
jbe
clc
mov
ss
cmc
xor
pop
push
inc
les
gs
push
rorl
pop
or
shrl
dec
dec
arpl
add
decl
push
lret
xchg
push
daa
xlat
sbb
or
pop
or
insb
sbb
cmp
outsb
jno
jne
fcmovbe
mov
mov
xchg
inc
sarl
sub
sbb
xchg
mov
mov
mov
cs
xchg
pushl
outsl
or
fadds
addr16
leave
push
cmp
jns
sub
movsl
decl
sub
fcmovnu
je
mov
jmp
mov
repnz
je
inc
dec
sub
in
movsl
sbb
sti
cs
ficomps
data16
mov
jbe
cmpsl
out
push
cmp
push
add
lods
lcall
std
push
add
aaa
sub
scas
jmp
mov
xor
js
mov
das
hlt
outsl
fmul
sarl
mov
js
or
iret
loopne
jle
push
mov
push
sub
js
icebp
lods
mov
fists
mov
dec
ljmp
fnstcw
call
scas
push
xor
dec
inc
push
adc
jno
and
sub
mov
jo
xchg
mov
push
sbb
jne
enter
dec
or
fsubrs
push
call
mov
jmp
push
int
push
add
xchg
cmp
lds
shr
push
mov
mov
int
push
stc
cmp
lcall
inc
adc
sbb
mov
test
test
xor
aaa
pop
push
jmp
outsl
icebp
mov
cmp
sub
dec
jg
call
push
or
insl
insl
out
data16
ljmp
into
insb
inc
icebp
iret
loopne
add
sbb
out
test
xchg
cmp
jbe
xlat
jo
pushl
mov
testl
xchg
test
cwtl
cmp
ss
jg
jg
xchg
push
mov
arpl
or
or
popa
loope
mov
pavgb
xor
mov
inc
out
aad
out
sbb
repz
inc
dec
inc
arpl
clc
test
mov
mov
mov
push
or
sbb
loop
fwait
dec
movhps
pushl
pop
jno
pop
sub
pop
pop
adc
push
jle
lcall
cld
push
or
loop
or
out
jmp
mov
lar
jmp
cli
adc
imul
push
mov
cmc
cli
jecxz
call
add
ss
comiss
popa
fnstenv
jmp
fidivrl
ss
aad
add
mov
sbb
or
stc
scas
cmpsl
fsubl
pop
push
pop
mov
notb
add
fs
sub
data16
pop
ljmp
lods
sbb
inc
jle
push
faddl
int
out
loopne
dec
pop
std
stc
repz
and
sub
dec
test
jg
xor
repnz
xchg
xor
addr16
or
dec
xchg
clc
divb
jne
rolb
aam
addr16
incl
cwtl
shrl
push
cmp
push
add
addb
mov
ljmp
shll
inc
das
lods
mov
std
cmpsb
lret
jle
lods
dec
or
xchg
cli
sbb
movsl
jle
imul
lods
fs
mov
pop
mov
jg
inc
jae
ljmp
roll
xlat
idiv
int
add
decl
lcall
mov
addr16
movsb
cmc
add
in
insb
pop
mov
movsb
dec
xchg
xlat
setp
jecxz
jmp
test
pop
pusha
rcl
and
arpl
inc
jb
ljmp
adc
pusha
outsb
repz
in
cmp
sub
dec
ljmp
push
call
pop
sti
je
push
dec
push
ljmp
inc
imul
jmp
adc
cltd
cltd
xchg
shl
mov
daa
mov
aas
inc
test
and
in
lods
xor
aad
jg
ljmp
into
adc
pusha
aad
cltd
jo
pushf
pop
xlat
in
fucomi
sahf
sbbl
and
aas
fucomp
int
jg
xlat
push
mov
testl
ljmp
sub
sub
test
mov
pop
dec
add
lcall
adc
imul
push
aaa
stos
cli
push
movsl
cmp
enter
scas
idivl
test
rclb
jmp
test
cmc
xor
jge
loopne
cmc
adc
pusha
mov
add
decl
and
mov
insl
push
mov
inc
pop
std
or
pushaw
lock
xchg
pop
xchg
ret
imul
cli
das
mov
and
jnp
imul
int3
xchg
int3
cs
pushl
push
adc
das
mov
push
pop
xchg
xchg
inc
loopne
pushf
push
jmp
fisubrs
inc
fldcw
gs
xor
jp
inc
pop
sbb
in
scas
mov
xchg
fwait
jmp
adc
das
pop
push
repnz
push
pop
or
or
imul
imul
cli
add
mov
mov
pop
sbb
mov
out
enter
fcomi
add
sahf
decl
aas
xchg
cmpb
xchg
ja
push
daa
repnz
and
popa
idivb
lds
cwtl
push
push
mov
call
loope
mov
mov
push
pop
push
imul
test
sti
ljmp
push
hlt
decl
cmc
mov
ret
ja
fldenv
jg
popf
flds
pushl
mov
std
cmp
lcall
gs
stos
nop
mov
dec
xor
jg
sub
scas
xchg
cmp
mov
incb
push
pop
pop
cs
inc
pushf
xor
fwait
or
adc
inc
aas
lret
mov
popf
loopne,pn
jo
pushl
and
push
and
jae
sub
bound
dec
or
pop
call
add
xchg
adc
mov
imul
popf
imul
add
cltd
test
dec
in
shrl
push
dec
pop
fsubrl
cmc
pop
std
lcall
into
jb
mov
clc
vphadduwq
je
jno
aad
call
pop
cmp
fistpll
mov
std
push
movsl
or
ljmp
stos
cmp
mov
orb
out
mov
xchg
iret
shlb
ss
dec
cld
enter
adc
mov
or
push
orb
mov
pop
loope
notl
and
daa
pop
out
xrelease
mov
jmp
decl
shll
lret
pop
mov
mov
jg
xor
nop
dec
cltd
or
xlat
jmp
push
negl
push
outsb
shll
cmc
jmp
arpl
inc
mov
mov
inc
in
cltd
sahf
mov
push
mov
mov
mov
xor
out
push
call
adc
rol
sarb
rcl
mov
lods
push
jg
adc
mov
stos
push
jmp
sahf
or
sbb
xchg
ror
aad
push
out
flds
loopne
jmp
iret
fmull
sbb
outsb
mov
loop
sahf
scas
lcall
mov
cmc
sbb
pop
scas
test
popa
inc
jg
incl
test
sar
cmp
subl
iret
and
xorl
xchg
sub
push
cwtl
rolb
pop
jne
iret
lods
fldcw
mov
adc
pop
inc
call
das
cmc
add
in
cmpsl
jae
ljmp
mov
das
popa
xor
addb
mov
popf
push
lcall
mov
jae
cltd
aad
pusha
push
test
bnd
shl
dec
in
ljmp
mov
ljmp
fsubl
mov
cmp
jg
add
xor
ljmp
cmp
pop
push
outsb
sub
lock
dec
mov
loope
stc
aaa
lcall
mov
inc
imul
hlt
loop
les
jecxz
and
enter
loopne
adc
pushl
fidivrl
sti
fadds
scas
lret
aad
pop
es
jae
out
pop
out
cmp
mov
inc
pop
cmp
push
dec
mov
or
mov
test
ljmp
push
popa
flds
xor
push
dec
out
cli
mov
dec
daa
add
xor
sub
or
es
inc
sbb
dec
sbb
pushf
fidivl
sub
or
fucom
gs
push
pop
out
mov
lods
repz
cltd
hlt
leave
sub
mov
cld
pop
stc
add
cmp
pop
cmpsl
ja
idiv
loopw
xor
cmp
xchg
lea
cs
loope
sarb
inc
std
jge
aam
mov
test
fisttps
mov
dec
fcomip
gs
sbb
into
in
rcll
push
jg
mov
outsb
popf
into
jns
stc
mov
cmc
mov
subb
test
xchg
cltd
inc
mov
flds
leave
adc
jg
mov
lret
aam
das
jnp
incl
dec
xor
inc
stc
loope
shlb
mov
test
mov
aaa
jns
xorl
decb
mov
or
inc
jg
push
cmp
mov
inc
rclb
js
dec
and
sar
jl
pop
movsb
lods
fisubrl
mov
movl
inc
mov
fsub
jnp
cmc
push
fwait
adc
jl
sti
test
ret
pop
ja
or
ljmp
push
cmc
or
cmp
aam
ljmp
adc
call
pop
in
xchg
cmp
cmovs
mov
mov
inc
cltd
emms
bound
cmc
loopne
mov
outsb
push
add
js
mov
sub
in
xchg
pusha
cmp
insl
inc
push
test
incl
stos
test
sbb
gs
mov
sub
fwait
or
add
dec
stos
icebp
add
bound
add
test
iret
test
inc
js
push
mov
pop
push
jnp
add
popa
bound
out
in
jb
dec
gs
jo
imul
fs
add
daa
dec
add
sbb
test
nop
push
pop
or
push
add
or
js
mov
and
arpl
test
inc
insb
ret
notb
push
out
and
movsl
sub
xchg
sti
add
lds
xchg
pop
push
or
jo
mov
sub
imul
jbe
ss
push
add
dec
roll
fwait
push
jg
adc
and
jb
or
das
or
js
add
cltd
or
xor
and
or
mov
push
inc
mov
sub
ss
popa
add
add
xor
pop
or
mov
and
xor
xor
popf
pusha
sub
popa
or
sbb
subb
or
or
fadds
mov
js
adc
test
and
addb
and
mov
gs
dec
add
ret
movsb
push
test
addr16
and
add
add
inc
popa
pop
or
adc
pusha
fisubrl
dec
cmp
nop
push
pusha
xchg
mov
add
pop
aad
adc
test
inc
popa
push
push
add
shrb
push
sub
test
int3
test
xorl
out
sbb
add
lea
push
and
add
jae
movsb
inc
or
sbb
xchg
cmp
xchg
jmp
xchg
adc
or
int3
sub
pop
xchg
les
or
pop
test
nop
sub
add
or
add
cmp
or
bound
add
adc
dec
pushf
sbb
or
je
jae
lds
addb
xchg
add
or
pop
xorl
scas
out
inc
and
adc
and
sub
inc
or
nop
cmp
mov
bound
add
add
jle
roll
inc
pop
cmp
repnz
mov
or
push
sub
addl
add
xor
sub
inc
fs
push
cmp
nop
inc
mov
inc
lcall
add
xchg
adc
test
test
popf
in
test
mov
outsl
mov
lds
pop
or
pop
xchg
sub
dec
xchg
mov
out
and
addb
scas
inc
and
pop
xor
push
test
mov
pusha
add
inc
std
mov
inc
mov
test
or
mov
cmpb
pusha
push
push
add
mov
movsb
xorl
movsl
ret
or
push
jbe
popa
add
aad
push
and
or
gs
add
or
inc
add
and
push
movsl
lods
push
pusha
add
push
adcl
lds
dec
addb
adc
popa
rcrb
and
or
xchg
push
sub
das
add
xchg
dec
rorl
adc
fs
int
sbb
pop
rorl
adc
inc
test
inc
add
fs
push
sub
popa
add
cmp
sbb
inc
stos
xchg
hlt
roll
sbb
int
lods
pop
test
bound
shl
xor
sub
adc
shrb
and
rcll
addl
or
int
xor
add
movsb
and
jmp
sub
test
sub
rorb
sub
pop
adc
jp
mov
or
addb
xchg
add
xor
sub
addb
jae
and
and
sbb
ja
add
mov
xorb
inc
and
aad
rolb
stc
xor
and
divl
mov
add
pop
inc
add
push
fildll
inc
or
lods
cld
mov
nop
mov
mov
or
pop
push
and
and
adcb
test
adc
fwait
shlb
push
or
mov
test
dec
add
or
or
inc
and
inc
das
or
test
cltd
push
add
sub
sub
inc
cmp
popa
push
dec
nop
add
cs
xchg
or
push
sbb
addb
adcb
adc
mov
jb
dec
add
cmpl
or
call
adc
int
or
inc
add
add
imul
pop
adc
aad
mov
bound
out
adcb
add
add
adc
or
add
or
sub
popa
adc
nop
adc
and
sub
inc
or
or
nop
mov
and
orb
enter
fdivrp
stos
push
or
mov
into
mov
mov
xchg
add
mov
cmp
popf
or
mov
push
pop
sub
add
out
jl
jb
outsb
jae
es
push
into
jo
inc
mov
mov
and
inc
inc
adc
bound
lods
mov
test
test
adc
shl
shrl
sbb
dec
je
jo
and
insb
adc
arpl
movsb
dec
inc
push
mov
jns
outsl
outsb
imul
adc
push
fiadds
sbb
add
ret
add
sbb
adc
repnz
and
loopne
inc
popa
inc
mov
nop
xor
shlb
adc
sub
sub
mov
sbb
push
inc
add
add
mov
popl
jge
add
or
adc
test
add
and
movsb
fwait
sbb
pop
mov
leave
outsb
or
push
push
add
loopne
fnstenv
pusha
push
shr
pop
adc
push
shr
adcb
add
in
ja
je
rolb
mov
les
and
rolb
mov
pop
leave
mov
popa
xchg
out
push
add
xlat
jne
jnp
cs
add
pusha
add
daa
jb
nop
and
mov
add
popf
pop
jo
jle
lock
xchg
fildl
jl
daa
jae
arpl
adc
imul
or
sbb
add
flds
fwait
aaa
verr
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
jo
add
add
add
add
add
add
add
add
add
add
mov
add
or
ltr
add
add
add
add
add
add
add
add
add
mov
add
sub
ltr
add
add
add
add
add
add
add
add
add
fadds
add
dec
jno
add
add
add
add
add
call
sbbb
clc
dec
insb
adc
cmp
data16
jp
cs
inc
inc
add
push
add
mov
sahf
clc
dec
insb
adc
cmp
data16
jp
cs
inc
inc
and
push
add
mov
sahf
clc
dec
insb
adc
cmp
data16
jp
cs
inc
inc
cmp
push
add
mov
cwtl
cmp
inc
xor
push
push
inc
rolb
cld
das
sub
xor
push
ret
call
cmpsb
or
pusha
aad
pop
push
fsubl
sub
adc
xor
mov
pop
loopne
xchg
cmp
xor
cmp
adc
xchg
test
add
gs
adc
fincstp
insl
push
adc
shll
es
jecxz
inc
xchg
loop
mov
add
xchg
xchg
out
imul
stos
push
popf
les
ja
cld
enter
or
sub
daa
ja
mov
fld
or
sub
leave
lds
imul
int3
adc
sbb
jo
sbb
add
imull
notb
adc
mov
in
adc
pop
lcall
cs
push
fisttps
dec
jo
and
xchg
das
mov
sbb
push
dec
repnz
adc
fwait
rol
push
aaa
into
lret
sbb
std
call
into
inc
daa
scas
pop
sub
cli
mov
int
inc
pop
loope
out
inc
mov
cmp
dec
cmpsl
mov
pop
in
and
loopne
fstpt
out
hlt
out
pusha
inc
insb
leave
enter
icebp
dec
sti
cmp
cld
popa
insl
out
jecxz
jne
push
cld
out
popf
adc
stos
loop
mov
in
sbb
pusha
push
push
cmpb
popa
dec
fnstsw
jp
cmpsl
stos
jp
loope
xchg
mov
inc
cld
sbb
roll
inc
ficompl
ret
mov
sub
or
rcrb
paddusb
sbb
aad
lcall
adc
es
xlat
lcall
shll
sbb
pusha
lock
imul
mov
or
icebp
add
aaa
test
cmc
push
repz
push
xchg
sahf
mull
stos
into
jns
int
push
push
loop
xchg
push
insl
inc
pop
pop
orl
mov
lds
push
add
sub
cld
pop
xor
add
repz
test
pusha
ret
rorb
jmp
adc
aas
addl
xor
into
gs
aaa
and
and
lcall
gs
imul
or
popf
loop
rolb
scas
cmp
xor
fsubr
lds
int3
cs
popf
adc
pushf
loope
les
cltd
mov
scas
mov
data16
xor
mov
xchg
cmpsl
fucomip
sbb
cmp
lret
call
pop
aaa
inc
fiaddl
dec
mov
pop
dec
ret
test
fildl
dec
push
lock
push
xor
cmp
movsl
or
xchg
pop
jae
stos
pusha
addl
mov
inc
xchg
mov
mov
into
test
outsl
sub
and
jne
hlt
and
xor
pusha
cwtl
lods
mov
out
lock
add
test
adc
xor
inc
idivl
xor
cltd
and
scas
dec
out
cmp
add
out
fs
cmpsl
inc
outsl
cltd
xor
dec
adc
pop
sbb
movsl
in
hlt
jp
mov
inc
mov
test
ds
dec
adc
sub
jg
inc
xchg
flds
sub
cltd
xchg
mov
fisubrs
xchg
rcrl
sbb
xor
mov
jae
in
pushf
cli
ja
sub
or
gs
inc
jnp
imulb
aas
loopne
push
out
dec
mov
push
dec
mov
shll
jns
and
push
scas
dec
cmp
jb
xchg
aaa
mov
in
cltd
pop
das
ss
pop
mov
inc
push
lcall
sub
push
add
in
fidivl
aad
sbb
loop
jle
loope
in
cmp
cmp
xchg
jecxz
jno
xchg
fstpl
xor
mov
inc
fisubl
push
leave
lock
inc
jecxz
outsb
add
dec
push
aad
jbe
je
sti
subb
dec
pop
test
bound
pusha
test
das
js
or
pop
dec
in
daa
ret
push
push
ss
shlb
test
jecxz
push
int3
sti
in
shlb
xchg
into
popf
add
scas
aam
push
scas
imul
mov
xor
or
adc
shl
jnp
adc
mov
mov
nop
scas
and
sbb
jge
insl
push
jmp
xchg
fbld
add
lcall
into
and
mov
mov
mov
mov
push
jecxz
pop
xor
push
dec
push
push
call
jbe
add
jbe
add
jbe
add
ja
add
jbe
add
ja
add
jbe
add
ja
add
verw
cmp
str
ltr
sldt
add
add
sldt
add
add
sldt
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jne
jb
pop
push
add
push
gs
imul
imul
jb
arpl
jb
