inc
adc
jle
ss
int3
nop
nop
decl
and
inc
jle
lods
xchg
cmc
cs
jmp
shrb
lahf
mov
push
jnp
pmaxsw
cmp
ret
orl
sub
xor
aas
pop
adc
iret
xor
ss
xor
cs
cmp
movl
repz
scas
faddl
mov
gs
aam
fdivrp
lea
dec
and
or
add
lods
mov
push
dec
add
clc
popf
sbb
ret
std
jp
inc
mov
dec
iret
adc
stc
cld
add
repz
aam
dec
jle
dec
leave
xlat
or
in
and
adc
push
push
jae
xor
lods
lret
pusha
xchg
push
or
sbb
loopne
js
jmp
pop
pop
mov
sub
add
cmp
jne
dec
push
cmpsl
orl
popa
enter
cltd
dec
inc
imul
cmp
dec
fs
icebp
cmp
cmc
fldt
lea
enter
mov
cmpsl
jecxz
mov
adc
inc
mov
xor
test
aam
xchg
arpl
movsb
and
dec
mov
cmp
lcall
mov
stos
es
clc
shr
jae
pop
jle
jge
in
xor
out
cmp
add
xchg
pop
push
mov
or
aam
int
jo
and
stc
out
cmp
int
lret
push
testb
outsb
jg
addr16
pop
pop
add
dec
push
xchg
and
sbb
xor
and
scas
test
pushf
jecxz
scas
cmpl
push
pop
sub
in
in
test
in
mov
add
imul
jno
movsl
imul
addl
fcompl
mov
jnp
sub
dec
push
aaa
testl
mov
jb
add
fs
sbb
dec
jns
fmuls
sbb
and
jnp
or
inc
push
inc
mov
scas
sti
lods
adc
movsl
cmc
ffree
cmp
into
lret
mov
or
mov
fstpl
adc
adc
jnp
popf
adc
inc
sti
mov
dec
mov
jecxz
ret
pop
fst
add
xchg
dec
add
xchg
std
test
pop
pop
add
out
ja
mov
imul
loope
push
pop
iret
cmp
out
dec
insb
or
mov
data16
adcl
test
in
jg
into
pop
cmp
scas
mov
push
cmp
or
sub
scas
sub
repz
divl
inc
daa
stos
sub
xor
call
fs
lret
mov
push
cs
mov
test
mov
jmp
lea
in
int
fildll
and
adc
mov
leave
pushf
scas
and
imul
ficomps
mov
incl
lahf
lret
pop
or
imul
push
pop
rcll
ret
cmp
cmovb
outsb
push
call
fwait
lcall
inc
mov
int
dec
dec
add
xor
and
jle
mov
or
mov
or
sub
mov
in
insl
mov
int3
push
test
xchg
mov
out
or
mov
pop
nop
lret
in
sar
push
dec
mov
rorb
xchg
scas
jnp
andb
cltd
jb
daa
xor
cmpsl
adc
push
aaa
fisttpl
sbb
leave
lock
arpl
jb
mov
dec
pop
xchg
mov
push
lods
cmp
mov
popa
ret
cli
mov
xchg
push
xor
jl
loopne
clc
insb
mov
jmp
scas
cmp
xchg
das
mov
jmp
jmp
jae
aaa
ljmp
ss
sub
xchg
inc
daa
fs
adc
stc
notl
sub
rol
adc
arpl
insl
dec
inc
cltd
fstl
jl
xor
int
adc
addb
fimuls
scas
inc
xchg
mov
mov
sub
xchg
push
lds
daa
fcmovnbe
enter
iret
and
aas
push
clc
imul
add
repz
adc
fisubs
or
push
leave
lret
xchg
pushf
xchg
cmp
test
dec
fistpl
loope
ss
sub
mov
dec
xchg
and
int
mov
push
call
pusha
sub
sub
pop
mov
mov
scas
test
int3
cmp
fstps
nop
sub
rcll
pop
sbb
fwait
and
sbb
mov
mov
dec
ret
inc
push
mov
rclb
stos
and
cmpsb
inc
out
fisubrl
scas
sub
and
xchg
jp
sbb
dec
jle
aas
add
mov
ficoms
mov
rorl
movsb
xor
jb
shll
jg
push
clc
adc
rorl
lcall
sbb
push
push
inc
pop
and
xor
and
cmp
mov
inc
cli
clc
jno
jno
ss
mov
cmpsl
in
out
dec
es
flds
mov
sub
les
cmc
xchg
out
xchg
mov
mov
pop
pop
cmp
add
inc
les
icebp
sti
outsb
cmp
sbb
cmp
int
in
lods
sub
or
or
xchg
in
or
push
lods
sbb
lret
in
adc
mov
xchg
imul
xor
add
jg
pop
mov
ss
xor
imul
pop
jmp
mov
hlt
adc
hlt
mov
push
arpl
jo
push
popa
jnp
movsl
ljmp
pop
out
fnstenv
lods
dec
pop
lods
icebp
adc
mov
xor
aaa
mov
or
push
fisttpl
pop
insb
jbe
lahf
loop
je
add
pop
dec
sbb
pop
shlb
dec
mov
mov
push
psllw
add
jbe
mov
and
sub
ja
pop
pushw
jae
nop
and
jmp
or
dec
jge
aaa
outsb
jmp
jnp
cmc
mov
ss
cwtl
cld
js
mov
xchg
lds
popa
lahf
inc
outsb
push
and
rcrl
insb
fs
loop
adc
add
sbb
lods
jmp
stos
lahf
test
rcl
sbb
xchg
pop
jb
lds
fisttpll
ja
mov
repnz
std
clc
jle
xchg
inc
cmp
aam
pop
mov
inc
test
cs
movsb
pushl
inc
mov
xchg
mov
stc
aad
mov
aaa
cmpsb
lret
fidivs
call
or
cmc
dec
cmp
mov
jg
repz
xchg
mov
shll
sbb
xchg
bound
sub
mov
scas
rcr
or
fstl
sbb
out
bswap
addb
ja
dec
loopne
sbb
pop
into
inc
scas
or
push
sbb
push
or
std
jle
cmp
jne
jne
fwait
sub
pop
xchg
and
xchg
xor
jge
mov
dec
xchg
repnz
dec
loop
jnp
lods
jno
movl
cmp
xchg
jl
daa
ret
mov
pushf
das
cmp
test
cmp
inc
adc
je
jns
lcall
dec
add
jp
lret
cmp
pop
data16
add
data16
mov
or
pop
insl
lea
in
cmp
cmp
lcall
or
fs
ja
push
push
dec
inc
xor
jnp
pop
mov
push
ljmp
fwait
nop
insl
pop
mov
ljmp
pop
fucom
sbb
int3
popf
mov
mov
cwtl
xadd
pushf
js
and
insb
cs
loope
xor
push
sbb
repz
aaa
stos
fildll
gs
xchg
into
lahf
lahf
in
pop
mov
push
scas
data16
ldmxcsr
push
xchg
insb
pop
ds
xorl
jbe
xchg
or
inc
repnz
cmp
sub
add
inc
push
and
sarb
stos
mov
jno
daa
mov
test
pop
lcall
pop
jmp
pop
int3
add
rorl
dec
pop
mov
mov
jno
jae
mov
fwait
sahf
ds
push
lahf
mov
iret
negl
pop
leave
sbb
inc
hlt
or
xchg
pop
ja
mov
pop
fcoml
inc
pop
sbb
data16
mov
inc
xorl
add
cmp
push
insl
fcmovne
xor
xor
movsb
adc
pop
jge
dec
pop
repnz
test
jle
mov
ss
lock
mov
clc
pop
and
clc
sub
add
fwait
out
sub
nop
xchg
mov
test
je
adc
je
cmpsl
rolb
xchg
or
ja
mov
je
cmpsb
sub
lock
xchg
or
dec
push
push
cmp
pop
cwtl
xchg
cmp
int3
decl
adc
data16
cmp
inc
hlt
jnp
mov
jge
or
xchg
in
adc
mov
pop
fwait
dec
aas
inc
imul
test
out
popf
stc
mov
out
pop
outsl
imul
flds
aaa
dec
shl
xchg
in
dec
xchg
sub
mov
test
je
jmp
mov
and
push
push
cmp
in
mov
cmp
pop
xchg
movsl
pop
adc
rorb
and
push
xchg
std
popf
cmpsl
addr16
outsb
push
mov
enter
lds
mov
fs
repnz
insl
sbb
callw
push
shl
out
gs
fdecstp
pushf
add
movsd
test
push
iret
bound
sbb
in
adc
or
mov
cmpb
movb
int3
sbb
inc
inc
mov
push
xor
ss
mov
movsl
leave
int
iret
sbb
jbe
and
jl
popa
fistl
fdivs
fdivrp
cmp
mov
imul
xchg
loopne
or
xchg
loop
add
dec
dec
movsl
pop
in
test
pop
push
mov
cld
shr
xchg
xor
inc
jl
sub
or
sbb
push
sbb
mov
or
mov
adc
movsb
js
jle
sub
sub
outsl
ret
mov
mov
mov
mov
xor
and
and
rorb
xchg
rcll
popf
call
jg
inc
cmp
jbe
mov
mov
in
adc
daa
sahf
xchg
sub
sub
test
jnp
dec
fwait
push
cmp
faddp
int
mov
push
cmovnp
ljmp
mov
push
push
std
daa
leave
lods
lods
dec
add
xchg
stos
xchg
orb
test
xor
dec
mov
std
sub
out
test
faddl
aam
dec
mov
fildll
cmp
mov
lock
xchg
sbb
pop
pop
cmp
add
pop
push
adc
push
fisttpl
mov
and
mov
dec
sub
vcvtsd2ss
loope
ffree
xchg
lahf
jns
xor
or
hlt
pop
movsb
lods
lret
ljmp
fbld
cmp
inc
lods
add
sbb
lock
mov
add
loop
fnstsw
mov
iret
inc
aas
xor
gs
adcb
mov
movsb
stos
test
xor
xchg
xor
dec
inc
push
push
adc
and
cli
mov
es
sti
push
sub
mov
loopne
and
push
sub
xchg
adc
push
loopne
sub
lods
pop
repnz
das
pop
pop
nop
cmp
data16
ret
inc
dec
push
pop
in
aam
jae
test
mov
pop
cmp
mov
out
mov
loopne
enter
add
mov
aaa
xchg
popl
push
cmc
ficomps
pop
in
xchg
jnp
xor
push
dec
mov
and
fists
dec
dec
fwait
inc
aaa
in
xor
out
sub
fdiv
repz
mov
test
es
cmc
insl
mov
sbb
xchg
adcb
pop
inc
mov
aas
aas
sub
addl
add
cmp
popf
mov
fdivr
pushf
pusha
fadd
inc
lret
out
in
and
jmp
nop
test
addr16
jnp
and
push
and
add
nop
nop
adc
nop
and
sbb
add
xor
subb
int3
int3
add
add
call
jnp
inc
xchg
incl
add
incl
add
int3
jbe
add
jp
adc
jmp
inc
dec
sub
cmp
and
jg
add
add
incl
add
push
inc
add
add
add
add
add
dec
nop
nop
add
nop
nop
add
adc
adc
add
pushl
sub
jb
nop
outsl
cmp
nop
nop
push
add
jae
inc
push
adc
pop
sub
int3
int3
add
int3
int3
nop
nop
add
add
int3
ljmp
aaa
add
test
xor
cmp
adc
add
add
int3
incl
add
add
das
add
add
nop
nop
nop
and
jg
add
mov
nop
sub
push
jl
add
push
int3
int3
ljmp
inc
pop
add
mov
call
nop
nop
dec
arpl
add
mov
pop
insl
nop
sub
push
jl
xchg
add
add
sbb
sub
add
add
add
add
adc
call
jb
pop
ret
int3
int3
int3
push
mov
sub
push
push
push
movw
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
lea
mov
lea
sub
sub
dec
mov
sub
mov
movl
movzwl
movzwl
lea
mov
mov
mov
mov
movzwl
movzwl
lea
cmp
jl
movzwl
movzwl
lea
mov
movzwl
movzbl
lea
mov
movzwl
mov
lea
cmp
jb
movzwl
mov
lea
mov
mov
sub
mov
movzwl
movzwl
lea
mov
movl
jmp
mov
sub
mov
cmpl
jle
movzwl
mov
lea
movzwl
cmp
jne
movzwl
add
movzwl
sub
mov
movzwl
cmp
jne
movzwl
mov
lea
movzwl
cmp
jne
movzwl
add
movzwl
sub
mov
movzwl
movzwl
lea
mov
movzwl
movzwl
cmp
jne
movzwl
movzwl
cltd
mov
idiv
cmp
je
movzwl
movzwl
lea
mov
jmp
movzwl
movzwl
lea
mov
movzwl
movzwl
cltd
mov
idiv
cmp
je
movzwl
movzwl
lea
mov
jmp
movzwl
movzwl
lea
mov
jmp
call
movl
jmp
mov
sub
mov
cmpl
jle
movzwl
mov
lea
movzwl
cmp
jne
movzwl
add
sub
mov
movzwl
movzwl
cmp
jne
movzwl
mov
lea
movzwl
cmp
jne
movzwl
add
sub
mov
movzwl
mov
lea
mov
movzwl
movzwl
cmp
jne
movzwl
mov
xor
mov
div
cmp
je
movzwl
mov
lea
mov
jmp
movzwl
mov
lea
mov
movzwl
mov
xor
mov
div
cmp
je
movzwl
mov
lea
mov
jmp
movzwl
mov
lea
mov
jmp
movzwl
mov
lea
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
movzbl
mov
lea
mov
movb
mov
sub
mov
movl
jmp
mov
sub
mov
cmpl
jle
movzwl
movzwl
lea
movzwl
cmp
jne
movzwl
add
movzwl
sub
mov
movzwl
movzwl
cmp
jne
movzwl
movzwl
lea
movzwl
cmp
jne
movzwl
add
movzwl
sub
mov
movzwl
movzwl
lea
mov
movzwl
movzwl
cmp
jne
movzwl
movzwl
cltd
mov
idiv
cmp
je
movzwl
movzwl
lea
mov
jmp
movzwl
movzwl
lea
mov
movzwl
movzwl
cltd
mov
idiv
cmp
je
movzwl
movzwl
lea
mov
jmp
movzwl
movzwl
lea
mov
jmp
movl
movzwl
movzwl
add
movzwl
sub
mov
mov
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
movzbl
test
jne
movzwl
add
movzwl
sub
mov
cmpl
jbe
mov
add
mov
jmp
mov
add
mov
movzwl
mov
lea
mov
movb
jmp
movb
movzwl
cmp
jge
movzbl
mov
lea
mov
mov
sub
mov
movzwl
not
mov
jmp
movzwl
not
mov
mov
sub
mov
movzbl
mov
lea
mov
mov
add
movzwl
sub
mov
mov
add
mov
mov
jmp
movzbl
mov
lea
mov
movzwl
movzwl
lea
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
movzbl
mov
lea
mov
movb
mov
sub
mov
movl
movzwl
add
movzwl
sub
sub
mov
mov
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
movzbl
test
jne
movzwl
movzwl
lea
mov
cmpl
jbe
mov
add
mov
jmp
mov
add
mov
mov
add
movzwl
sub
mov
movb
jmp
movb
cmpl
jae
mov
add
movzwl
sub
mov
mov
sub
mov
mov
not
mov
jmp
mov
not
mov
mov
sub
mov
mov
add
movzwl
sub
sub
mov
movzwl
mov
lea
mov
mov
add
mov
mov
jmp
movzwl
mov
lea
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
lea
mov
movl
jmp
mov
add
mov
cmpl
jae
movzwl
movzbl
lea
mov
mov
xor
mov
div
test
jne
push
push
call
add
mov
cmpl
je
push
call
add
push
push
mov
push
mov
push
call
add
mov
add
movzwl
sub
mov
jmp
movzwl
movzwl
lea
cmp
jl
movzwl
movzwl
lea
mov
mov
add
sub
movzwl
sub
mov
movl
jmp
mov
add
mov
cmpl
jae
push
push
mov
push
mov
push
call
add
movzwl
add
sub
sub
mov
jmp
movzwl
add
movzwl
sub
mov
movzwl
cltd
mov
idiv
cmp
jle
movzwl
movzbl
lea
mov
push
mov
push
call
add
movzwl
mov
lea
mov
movzwl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movw
mov
mov
lea
mov
movl
movzwl
movzbl
lea
mov
movzwl
cltd
mov
idiv
cmp
je
movzwl
mov
lea
mov
jmp
movzwl
mov
lea
mov
mov
add
sub
mov
movzwl
mov
lea
mov
movzwl
movzbl
lea
mov
movzwl
push
mov
push
call
add
mov
movzwl
movzwl
lea
mov
mov
mov
mov
add
movzwl
sub
mov
xor
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shrb
inc
add
sub
and
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
sub
mov
inc
add
sub
jo
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
shrb
inc
add
sub
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
sub
add
sub
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cld
sub
add
inc
add
inc
add
inc
add
sub
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
sub
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
jmp
push
push
push
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
mov
test
je
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
push
mov
mov
push
or
test
je
or
jmp
test
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
mov
andl
pop
pop
ret
push
mov
push
push
push
mov
push
mov
imul
test
mov
mov
mov
jne
xor
jmp
push
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
mov
sub
xor
divl
jmp
orl
jmp
push
mov
mov
test
push
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
test
pop
jns
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
xor
add
cmp
setne
dec
mov
jmp
movl
or
pop
pop
ret
call
test
jne
movl
ret
push
pushl
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
push
push
mov
push
call
mov
lea
push
pushl
push
call
push
push
mov
call
add
pop
pop
mov
pop
ret
call
test
jne
movl
ret
push
pushl
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
sar
mov
and
lea
mov
shl
testb
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
cmp
pop
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
test
mov
pop
movb
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
jns
and
mov
jmp
orl
or
pop
mov
andl
mov
pop
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
pop
neg
sbb
pop
ret
xor
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmpl
mov
je
mov
pop
pop
pop
ret
push
call
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
sub
push
push
mov
cmp
push
jae
mov
sar
lea
mov
and
shl
add
mov
test
je
andl
cmpl
mov
mov
je
test
jne
test
je
cmpb
je
mov
mov
decl
mov
mov
lea
movl
movb
push
lea
push
pushl
mov
push
pushl
call
test
jne
call
push
pop
cmp
jne
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
testb
je
test
je
cmpb
jne
mov
lea
orb
jmp
mov
lea
andb
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
mov
jmp
incl
push
lea
push
push
lea
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
testb
jne
lea
orb
sub
mov
mov
jmp
andl
movl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
add
inc
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
inc
add
aas
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
aas
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pop
inc
inc
add
add
add
add
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
inc
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
cmp
push
push
push
jae
mov
sar
mov
and
lea
mov
shl
testb
je
push
call
cmp
pop
je
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
lea
andb
mov
jmp
andl
movl
or
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
sar
mov
mov
and
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
cmp
jb
cmpl
jne
mov
jmp
test
js
movl
or
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
and
lea
mov
shl
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
jmp
cmpb
jne
incl
inc
cmp
jb
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
xor
inc
jmp
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
je
xor
jmp
movl
or
jmp
test
jne
or
inc
mov
cmp
jne
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
push
push
mov
xor
xor
xor
cmp
jle
mov
mov
cmp
je
testb
je
inc
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
orl
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
push
mov
pushl
call
test
pop
je
cmp
jne
xor
jmp
cmp
jne
xor
inc
incl
testw
jne
push
push
lea
cmpl
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
orw
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmpl
push
je
mov
testb
je
push
call
andb
andl
andl
andl
jmp
mov
testb
je
push
call
pop
pop
ret
testb
je
cmpl
je
push
pushl
call
cmp
pop
pop
jne
orl
ret
incl
ret
push
mov
push
mov
jmp
pushl
mov
decl
call
cmpl
pop
je
cmpl
jg
pop
pop
ret
testb
push
push
mov
mov
je
cmpl
jne
mov
add
jmp
decl
xor
mov
push
mov
call
inc
inc
cmpl
pop
je
cmpl
jg
pop
pop
ret
addl
mov
mov
ret
addl
mov
mov
mov
ret
push
lea
sub
mov
mov
mov
xor
push
mov
xor
cmp
mov
mov
mov
je
push
push
jmp
mov
push
pop
add
cmpl
jl
push
pop
cmp
jb
cmp
ja
movzwl
movsbl
and
jmp
xor
movsbl
push
sar
pop
cmp
mov
ja
jmp
xor
orl
mov
mov
mov
mov
mov
mov
jmp
movzwl
sub
je
sub
je
sub
je
sub
je
sub
jne
orl
jmp
orl
jmp
orl
jmp
orb
jmp
or
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
negl
jmp
mov
movzwl
lea
lea
mov
jmp
andl
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
jmp
mov
movzwl
lea
lea
mov
jmp
movzwl
cmp
je
cmp
je
cmp
je
cmp
jne
orb
jmp
orl
jmp
or
jmp
mov
mov
cmp
jne
mov
cmpw
jne
addl
orb
jmp
cmp
jne
mov
cmpw
jne
addl
andb
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
andl
mov
push
lea
movl
call
jmp
movzwl
cmp
jg
cmp
jge
cmp
jg
je
sub
je
sub
je
sub
je
sub
jne
testw
jne
or
mov
cmp
jne
mov
addl
testb
mov
mov
mov
je
test
jne
mov
mov
andl
test
mov
jle
mov
test
je
mov
movzbl
testb
je
inc
inc
incl
cmp
jl
jmp
movl
add
orl
cmpl
lea
mov
jge
movl
jmp
testw
jne
or
addl
mov
movzwl
xor
inc
testb
mov
mov
je
pushl
mov
lea
push
lea
push
movb
call
add
test
jge
mov
jmp
sub
je
sub
je
dec
jne
orl
movl
mov
mov
test
je
mov
mov
mov
add
mov
jmp
mov
lea
mov
mov
jmp
addl
mov
mov
test
je
mov
test
je
testb
movswl
mov
je
cltd
sub
sar
movl
jmp
andl
jmp
mov
mov
push
jmp
jne
cmp
jne
movl
jmp
mov
cmp
jle
mov
mov
cmp
jle
mov
add
push
call
test
pop
mov
je
mov
mov
jmp
mov
mov
mov
pushl
add
pushl
mov
mov
mov
movsbl
push
lea
push
push
mov
call
mov
add
and
je
cmpl
jne
push
call
pop
cmp
jne
test
jne
push
call
pop
cmpb
jne
orb
inc
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
sub
je
sub
jne
movl
jmp
test
jne
mov
mov
mov
movl
jmp
dec
cmpw
je
add
test
jne
sub
sar
jmp
movl
mov
testb
movl
je
mov
add
movw
mov
mov
jmp
testb
movl
je
orb
jmp
addl
testb
mov
mov
je
mov
mov
jmp
mov
mov
movl
jmp
addl
test
mov
je
test
je
movswl
cltd
jmp
movzwl
jmp
test
mov
jne
xor
test
je
test
jg
jl
test
jae
neg
adc
neg
orb
test
mov
mov
jne
xor
cmpl
jge
movl
jmp
andl
mov
cmp
jle
mov
mov
or
jne
andl
lea
mov
decl
test
jg
mov
or
je
mov
cltd
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
testb
mov
mov
je
mov
cmpb
jne
test
jne
decl
mov
movb
inc
mov
cmpl
jne
mov
test
je
test
je
movw
jmp
test
je
movw
jmp
test
je
movw
movl
mov
sub
sub
testb
jne
pushl
lea
push
push
call
add
pushl
mov
lea
lea
call
testb
pop
je
testb
jne
push
push
push
lea
call
add
cmpl
jne
mov
test
jle
mov
mov
pushl
decl
lea
push
push
call
add
test
mov
jle
pushl
mov
lea
call
add
cmpl
pop
jg
jmp
pushl
mov
lea
call
pop
testb
je
pushl
lea
push
push
call
add
cmpl
je
pushl
call
andl
pop
mov
mov
test
jne
pop
pop
mov
mov
pop
call
add
leave
ret
arpl
add
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
ret
mov
test
push
push
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
test
pop
pop
mov
jne
push
push
mov
call
test
pop
pop
mov
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
xor
mov
mov
sar
mov
mov
and
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
xor
pop
ret
call
cmpb
je
jmp
ret
push
mov
push
push
mov
movzwl
push
xor
cmp
push
mov
mov
mov
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
xor
inc
jmp
cmp
je
movzwl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
je
xor
jmp
movl
or
jmp
test
jne
or
inc
inc
mov
cmp
jne
push
pushl
push
pushl
call
add
mov
cmp
pop
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
mov
xor
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
inc
inc
jmp
cmp
ja
inc
inc
mov
test
jne
ret
push
push
mov
push
xor
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
jmp
push
call
mov
inc
cmpw
pop
je
lea
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
lea
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
push
mov
mov
mov
xor
cmp
mov
movl
mov
je
mov
addl
mov
push
pop
cmpw
jne
mov
xor
test
sete
push
add
mov
pop
jmp
incl
test
je
mov
mov
add
mov
add
test
je
test
jne
cmp
je
cmp
jne
test
je
andw
andl
xor
cmp
je
mov
cmp
je
cmp
jne
add
jmp
sub
jmp
cmp
je
cmp
je
mov
addl
mov
mov
incl
xor
inc
xor
jmp
add
inc
cmpw
je
cmpw
jne
test
jne
cmpl
je
lea
cmpw
jne
mov
jmp
xor
xor
cmp
push
sete
pop
mov
shr
test
je
test
je
movw
add
mov
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
mov
add
mov
incl
add
jmp
test
je
andw
add
mov
incl
jmp
mov
cmp
pop
pop
pop
je
mov
mov
incl
pop
ret
push
mov
push
push
push
push
push
push
mov
xor
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
lea
push
lea
push
push
push
xor
call
mov
mov
lea
shl
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
push
lea
push
call
mov
add
dec
mov
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
cmp
pop
jne
xor
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
mov
je
push
push
push
push
push
push
call
cmp
je
push
add
call
lea
cmp
pop
jne
inc
lea
push
mov
call
cmp
pop
mov
je
cmp
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
push
call
test
je
push
call
push
lea
call
cmp
pop
pop
lea
jne
push
mov
call
mov
pop
pop
pop
pop
pop
pop
ret
pushl
call
pop
push
call
jmp
mov
push
xor
cmp
push
mov
jne
call
test
je
movl
jmp
call
cmp
jne
movl
jmp
xor
jmp
cmp
jne
call
jmp
cmp
jne
push
push
call
mov
push
push
push
mov
push
push
push
call
mov
cmp
je
lea
push
call
mov
test
pop
je
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
jmp
mov
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
mov
ret
mov
ret
mov
mov
movzwl
and
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
xor
cmp
je
inc
cmp
jb
cmp
jb
cmp
ja
movl
ret
mov
mov
ret
cmp
jb
cmp
movl
jbe
movl
ret
push
push
push
push
or
xor
xor
mov
mov
mov
test
je
lea
jmp
testb
je
mov
add
add
cmp
jb
jmp
orl
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
push
call
test
pop
je
addl
lea
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
shl
mov
pop
pop
pop
mov
pop
ret
mov
cmp
push
push
jae
mov
sar
mov
and
lea
mov
shl
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
andl
movl
or
pop
pop
ret
mov
cmp
push
push
jae
mov
sar
mov
lea
mov
and
shl
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
andl
movl
or
pop
pop
ret
mov
cmp
jae
mov
sar
mov
and
lea
testb
je
mov
ret
andl
movl
or
ret
push
mov
push
xor
testb
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
or
jmp
cmp
jne
or
jmp
cmp
jne
or
push
call
mov
or
cmp
jne
andl
movl
jmp
pushl
push
call
pop
mov
sar
mov
pop
or
mov
and
mov
mov
pop
pop
pop
ret
push
lea
sub
mov
cmp
mov
push
push
mov
push
jae
mov
sar
lea
mov
mov
and
shl
mov
test
mov
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
push
call
add
mov
add
testb
je
cmp
mov
mov
mov
jbe
mov
sub
lea
cmp
jae
mov
incl
mov
inc
cmp
jne
incl
movb
inc
inc
mov
mov
inc
inc
cmp
jl
mov
lea
sub
push
lea
push
push
lea
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
xor
cmp
jb
jmp
call
mov
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
jmp
push
lea
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
je
movl
mov
jmp
sub
jmp
andl
movl
or
mov
pop
pop
pop
call
add
leave
ret
mov
cmp
jae
mov
sar
mov
mov
and
testb
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
movl
or
ret
incl
push
call
test
pop
mov
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
push
mov
sub
mov
push
xor
test
push
movl
mov
jns
mov
movb
jmp
movl
movb
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
jne
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
or
jmp
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
push
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
movl
mov
or
jmp
movl
jmp
movl
mov
test
mov
je
mov
not
and
test
js
xor
inc
test
je
orb
or
cmpl
jne
orl
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
andl
movl
mov
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
mov
pop
pop
mov
sar
or
mov
and
lea
mov
shl
mov
andb
mov
jne
test
jns
testb
je
push
push
push
call
add
cmp
mov
jne
cmpl
jne
cmpb
jne
testb
je
mov
lea
orb
mov
pop
pop
pop
leave
ret
push
lea
push
push
movb
call
add
test
jne
cmpb
jne
pushl
push
call
cmp
pop
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
jmp
pushl
push
pushl
pushl
call
add
ret
mov
cmp
jb
xor
ret
mov
sar
mov
and
movsbl
and
ret
push
mov
sub
mov
push
push
mov
testb
mov
push
jne
mov
cmp
je
mov
sar
mov
and
lea
jmp
mov
testb
je
pushl
lea
push
call
mov
cmp
pop
pop
jne
movl
or
jmp
xor
test
jle
decl
js
mov
mov
mov
mov
movzbl
inc
mov
jmp
movsbl
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
addl
js
mov
mov
mov
addl
jmp
movzwl
push
push
call
pop
pop
mov
pop
pop
pop
call
leave
ret
jmp
testb
je
cmpl
je
decl
js
mov
mov
incl
movzbl
jmp
movsbl
push
push
call
pop
pop
cmp
jne
or
ret
incl
ret
push
mov
push
mov
jmp
mov
mov
decl
call
cmpl
je
cmpl
jg
pop
pop
ret
testb
push
push
mov
mov
je
cmpl
jne
mov
add
jmp
mov
decl
mov
call
inc
cmpl
je
cmpl
jg
pop
pop
ret
addl
mov
mov
ret
addl
mov
mov
mov
ret
addl
mov
mov
ret
push
lea
sub
mov
mov
xor
mov
mov
mov
mov
push
mov
xor
test
je
push
push
mov
jmp
mov
inc
cmpl
mov
jl
cmp
jl
cmp
jg
movsbl
movsbl
and
jmp
xor
movsbl
push
sar
pop
cmp
mov
ja
jmp
xor
orl
mov
mov
mov
mov
mov
mov
jmp
movsbl
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
orl
jmp
orl
jmp
orl
jmp
orb
jmp
orl
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
negl
jmp
mov
movsbl
lea
lea
mov
jmp
andl
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
jmp
mov
movsbl
lea
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
orb
jmp
orl
jmp
orl
jmp
mov
cmp
jne
cmpb
jne
inc
inc
orb
mov
jmp
cmp
jne
cmpb
jne
inc
inc
andb
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
andl
mov
andl
movzbl
testb
je
mov
lea
mov
call
mov
inc
mov
mov
lea
mov
call
jmp
movsbl
cmp
jg
cmp
jge
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
sub
jne
testw
jne
orb
mov
cmp
jne
mov
addl
testw
mov
mov
mov
je
test
jne
mov
mov
mov
movl
jmp
movl
add
orl
cmpl
lea
mov
jge
movl
jmp
testw
jne
orb
addl
testw
mov
je
movswl
push
lea
push
call
test
pop
pop
mov
jge
movl
jmp
sub
je
sub
je
dec
jne
orl
movl
mov
mov
test
je
mov
mov
mov
add
mov
jmp
mov
mov
movl
lea
mov
jmp
addl
mov
mov
test
je
mov
test
je
testb
movswl
mov
je
cltd
sub
sar
movl
jmp
andl
jmp
mov
mov
push
jmp
jne
cmp
jne
movl
jmp
mov
cmp
jle
mov
mov
cmp
jle
mov
add
push
call
test
pop
mov
je
mov
mov
jmp
mov
mov
mov
pushl
add
pushl
mov
mov
mov
movsbl
push
lea
push
push
mov
call
mov
add
and
je
cmpl
jne
push
call
pop
cmp
jne
test
jne
push
call
pop
cmpb
jne
orb
inc
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
dec
dec
je
sub
jne
movl
jmp
dec
cmpw
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmpb
je
inc
test
jne
sub
jmp
movl
mov
testb
movl
je
mov
add
movb
mov
movl
jmp
testb
movl
je
orb
jmp
addl
testb
mov
mov
je
mov
mov
jmp
mov
mov
movl
jmp
addl
test
mov
je
test
je
movswl
cltd
jmp
movzwl
jmp
test
mov
jne
xor
test
je
test
jg
jl
test
jae
neg
adc
neg
orb
test
mov
mov
jne
xor
cmpl
jge
movl
jmp
andl
mov
cmp
jle
mov
mov
or
jne
andl
lea
mov
decl
test
jg
mov
or
je
mov
cltd
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
testb
mov
mov
je
mov
cmpb
jne
test
jne
decl
mov
movb
inc
mov
cmpl
jne
mov
test
je
test
je
movb
jmp
test
je
movb
jmp
test
je
movb
movl
mov
sub
sub
test
jne
pushl
lea
push
push
call
add
pushl
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmpl
je
cmpl
jle
mov
mov
mov
decl
xor
mov
push
lea
push
call
inc
pop
inc
test
pop
jle
mov
push
lea
lea
call
cmpl
pop
jne
jmp
pushl
mov
lea
call
pop
testb
je
pushl
lea
push
push
call
add
cmpl
je
pushl
call
andl
pop
mov
mov
test
jne
pop
pop
mov
mov
pop
call
add
leave
ret
mov
addb
addb
addb
addb
addb
addl
push
mov
push
push
mov
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
mov
xor
pop
pop
pop
ret
cmp
jne
mov
cmp
je
movzbw
mov
xor
inc
jmp
mov
movzbl
testb
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
mov
jne
cmp
jb
cmp
jne
movl
or
jmp
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
jne
jmp
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
push
pop
xor
cmp
jle
mov
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
pushl
call
mov
andl
pop
inc
cmp
jl
mov
pop
pop
ret
push
mov
sub
mov
push
xor
test
push
movl
mov
jns
mov
movb
jmp
movl
movb
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
jne
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
or
jmp
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
push
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
movl
mov
or
jmp
movl
jmp
movl
mov
test
mov
je
mov
not
and
test
js
xor
inc
test
je
orb
or
cmpl
jne
orl
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
andl
movl
mov
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
mov
pop
pop
mov
sar
or
mov
and
lea
mov
shl
mov
andb
mov
jne
test
jns
testb
je
push
push
push
call
add
cmp
mov
jne
cmpl
jne
cmpb
jne
testb
je
mov
lea
orb
mov
pop
pop
pop
leave
ret
andl
push
lea
push
push
call
add
test
jne
cmpw
jne
pushl
push
call
cmp
pop
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
jmp
pushl
push
pushl
pushl
call
add
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
mov
cmpw
mov
je
inc
inc
cmpw
jne
push
mov
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
ret
mov
mov
inc
inc
test
jne
sub
sar
dec
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
mov
push
push
mov
cmp
push
push
jae
mov
sar
mov
and
lea
mov
shl
testb
je
mov
mov
mov
push
mov
call
cmp
pop
je
pushl
lea
push
pushl
push
call
cmp
mov
jne
call
test
je
push
call
pop
jmp
mov
lea
andb
mov
mov
jmp
andl
movl
or
or
pop
pop
leave
ret
push
mov
mov
call
mov
push
mov
push
xor
cmp
mov
jae
mov
sar
mov
mov
and
testb
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jg
jmp
cmpl
jne
movl
or
pushl
push
call
pop
pop
jmp
jge
push
pushl
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
movl
call
mov
push
pushl
push
call
add
mov
pop
jmp
movl
or
mov
pop
pop
call
leave
ret
push
mov
push
push
push
mov
mov
test
mov
mov
je
test
jne
xor
test
je
test
mov
je
mov
and
mov
mov
mov
and
or
test
mov
mov
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
mov
testw
push
je
mov
mov
lea
mov
mov
sub
dec
dec
cmp
mov
jle
push
push
push
call
mov
jmp
cmp
je
mov
sar
mov
mov
and
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
mov
push
pop
push
lea
push
push
mov
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
mov
pop
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
lea
mov
mov
sub
dec
test
mov
jle
push
push
push
call
mov
jmp
cmp
je
mov
sar
mov
mov
and
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
xor
inc
push
lea
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
mov
push
xor
cmp
jne
xor
jmp
cmp
jne
mov
cmp
ja
mov
xor
inc
jmp
lea
push
push
pushl
mov
push
push
lea
push
push
pushl
call
cmp
je
cmp
je
movl
or
pop
pop
ret
push
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
mov
mov
mov
ret
push
push
call
pop
pop
ret
mov
mov
mov
ret
mov
cmp
push
jae
mov
and
shl
sar
lea
mov
mov
movsbl
test
je
mov
and
cmp
jne
mov
lea
andb
jmp
cmpl
jne
mov
lea
orb
neg
sbb
and
add
pop
ret
movl
jmp
movl
or
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpl
je
movb
inc
neg
push
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
push
mov
push
xor
cmp
mov
mov
push
je
movb
inc
neg
adc
neg
mov
mov
pushl
pushl
push
push
call
cmp
mov
mov
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
xor
inc
push
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
mov
push
pushl
pushl
pushl
call
mov
pop
ret
insb
sbb
add
add
push
sbb
add
add
sub
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
push
sbb
add
add
sub
add
sbb
add
or
add
add
add
hlt
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
sbb
add
add
aam
add
call
sbb
add
add
and
add
xor
add
inc
sbb
add
add
pop
sbb
add
add
mov
add
sahf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
add
test
add
xchg
sbb
add
sbb
add
add
add
add
or
add
hlt
pop
add
loopne
add
add
add
jo
add
add
add
nop
pop
add
mov
pop
add
add
add
aaa
add
orb
add
adc
add
or
add
inc
pop
add
xor
add
push
pop
add
add
add
add
add
repnz
add
ficoms
add
into
push
add
mov
add
add
sti
int3
dec
add
add
add
add
sub
add
fs
add
add
add
add
pop
shlb
mov
mov
je
leave
sub
jmp
xchg
orb
das
pushf
fsubrl
xchg
clc
call
mov
cs
decl
jno
cmp
lods
inc
push
fucomip
and
mov
rclb
and
aam
inc
xor
dec
adcb
sbb
ficompl
into
jno
and
enter
fisubrl
loop
push
test
mov
sbb
push
bound
insb
or
xor
adc
inc
paddw
out
addr16
popa
pop
scas
aas
aad
mov
xchg
test
xchg
pop
ljmp
mov
lds
fnstcw
or
adc
sbb
enter
push
or
add
pop
dec
fsubr
out
loopne
mov
push
lods
fldl
xor
mov
jecxz
fsubl
xchg
dec
bound
test
scas
adc
int3
inc
push
into
sarb
ret
orl
push
sub
jecxz
xor
stos
or
jae
push
sub
dec
pop
fnstenv
leave
fildll
or
mov
jge
cmc
das
ja
mov
fwait
pop
jb
pop
mov
loop
inc
adc
pop
out
mov
adcb
clc
and
scas
push
xor
xchg
sahf
mov
mov
sub
in
fst
adc
and
sub
ret
xlat
inc
xchg
mov
inc
js
mov
pop
mov
cmp
and
insl
add
mov
mov
pop
pop
sub
mov
lds
add
das
push
hlt
test
es
lahf
inc
inc
lcall
mov
mov
or
mov
mov
jbe
test
ror
mov
inc
test
testl
ds
ja
adc
mov
cmpsb
sub
fbstp
push
sub
push
lret
cmpsl
jmp
xchg
push
fildll
into
sub
add
dec
push
test
pop
arpl
call
insl
fisubl
and
pop
test
xchg
or
mov
aad
hlt
fimull
ret
hlt
and
xchg
push
addr16
jns
das
fisttpll
mov
pop
dec
xor
stos
and
fwait
inc
sub
mov
outsl
ret
sub
lret
movsb
jmp
jmp
clc
enter
popf
icebp
arpl
inc
and
inc
roll
mov
jg
xchg
or
repz
sbb
mov
xor
leave
sbb
xchg
pop
aaa
out
iret
jbe
cltd
mov
sbb
xchg
cwtl
fstpl
and
imulb
mov
es
std
fcoms
into
mov
shll
fdivs
lods
ds
int3
mov
dec
xor
es
or
mov
aaa
flds
mov
scas
jo
adc
fimuls
add
lods
and
adc
and
xor
lret
std
repz
jmp
push
out
jno
add
inc
or
pop
lcall
cmpsl
mov
aad
xchg
xorl
pop
and
std
stos
dec
mov
sub
mov
ret
les
pop
push
push
add
shrl
lds
cli
add
mov
push
mov
pushf
dec
push
nop
shl
jb
push
adc
nop
rorl
push
jno
xor
shll
sub
jge
pop
loopne
inc
loop
push
hlt
mov
cmp
xchg
xor
repnz
cmpsl
mov
mov
inc
push
jo
andb
shr
cmp
or
fs
lret
mov
pop
add
xchg
and
xchg
das
ja
lcall
and
cld
dec
push
rcr
sub
dec
arpl
repnz
jle
shlb
iret
or
aas
test
bound
mov
cli
mov
repz
jo
and
mov
aaa
xor
cmp
adc
aas
rcrl
xor
pushf
cmp
sub
lods
clc
gs
js
jnp
in
repz
push
jne
cld
and
inc
movsl
iret
aas
xchg
xchg
xchg
lea
ljmp
outsl
cmp
shlb
dec
ds
mov
cmpb
mov
push
in
outsb
sbb
and
mov
rcrb
sbbb
fnstcw
mull
xchg
mov
sbb
out
dec
addr16
imul
popf
outsl
shll
cmp
jo
test
jmp
notl
js
xor
icebp
or
add
adc
addr16
int
xor
xchg
nop
iret
call
dec
pop
test
pop
inc
xor
or
jb
sbb
xchg
push
dec
shr
addr16
cmp
scas
inc
lret
jecxz
pop
movsl
dec
and
bound
test
mov
and
mov
imul
lret
loop
sbb
or
dec
xchg
fldt
push
aaa
mov
or
or
lcall
lods
mov
lods
and
or
dec
fisubl
out
test
adc
cmpsl
mov
hlt
or
xor
jo
pop
and
ja
loopne
aam
add
sbbl
inc
std
fs
js
pop
or
sbb
jp
mov
lret
outsb
loopne
outsb
cmpsb
inc
loopne
repnz
jl,pt
dec
stc
sti
subl
mov
jb
xor
insb
daa
test
inc
xchg
fwait
adc
mov
dec
sub
cld
adc
mov
outsb
jg
or
out
jge
push
xor
add
jg,pn
les
mov
or
in
fldt
mov
lcall
inc
and
mov
push
iret
xor
xor
icebp
fsubrl
ret
inc
adc
push
movsl
pop
push
cmp
dec
mov
outsb
pushf
lcall
es
mov
hlt
push
fsubl
iret
jge
or
sub
add
sub
sahf
rol
fnstsw
jge
addb
imul
out
push
lret
mov
pop
fnstenv
jns
xor
mov
dec
push
mov
sub
xor
jb
cmp
test
ficompl
and
movsl
or
sub
out
fs
into
mov
enter
push
shll
getsec
lods
pmullw
cmp
out
shlb
jo
inc
dec
xchg
cmpsl
mov
xchg
sbb
mov
or
aad
add
adc
sub
dec
xor
aad
inc
shlb
mov
xchg
sahf
jno
mov
sbb
sub
xchg
cmpsb
clc
out
pushf
dec
aad
out
inc
sbb
leave
pop
inc
mov
es
in
ret
rol
cmc
clc
enter
and
jns
sti
das
cmpsb
fisttps
pop
lcall
repz
adc
pop
inc
test
push
call
daa
mov
sbb
imul
lock
sti
es
push
mov
sub
in
jecxz
jle
das
aaa
test
loopne
mov
mov
mov
cmpsb
filds
es
in
jle
cmp
repz
mov
movd
push
push
push
gs
fs
cmpsl
mov
cmp
push
fstpt
or
inc
repz
mov
push
nop
or
test
push
std
ss
bound
loopne
dec
mov
es
push
jns
movsb
vmovshdup
mov
sbb
mov
clc
fisubs
xor
movsb
in
xchg
orb
cli
pushf
bound
cs
cmp
xchg
inc
xor
fcoml
xchg
mov
cld
mov
inc
icebp
sbb
jae,pn
push
jo
push
imul
sub
xchg
or
xchg
jbe
sub
test
mov
cmp
sub
rorb
andl
or
out
push
or
pushf
inc
mov
lret
ds
xchg
add
lea
adc
les
loop
inc
sub
psubsw
jnp
push
lcall
fldcw
or
push
pop
rolb
mov
and
rclb
movl
jge
mov
fsts
lret
and
pop
add
and
repz
add
mov
leave
cmp
cmp
dec
aas
mov
dec
sbb
sub
xor
pop
xchg
cwtl
or
mov
lahf
dec
out
sbb
and
push
int
icebp
fildl
sbb
mov
lods
addr16
dec
mov
pop
negb
xor
add
les
rcr
je
mov
inc
mov
mov
mov
ret
fwait
mov
incb
test
jo
arpl
out
mov
lcall
fstl
mov
pop
cli
adc
hlt
daa
jae
cmpsl
and
popa
jge
jmp
scas
divb
cmp
add
pop
push
pop
pop
mov
aad
test
fisttpll
dec
push
sub
fucomp
shrl
mov
pop
mov
ja
adc
jbe
ljmp
mov
pushf
ljmp
in
adc
ds
ret
sub
jnp
scas
adc
stos
mov
cmp
in
pop
mov
jmp
pop
js
cltd
stos
aas
push
mov
lcall
in
pop
sub
sbb
icebp
pop
push
inc
mov
dec
sbb
sahf
inc
movsl
rolb
hlt
adc
in
push
mov
mulb
xor
mov
pushf
in
jne
loope
pop
fistpll
sub
inc
hlt
dec
fisubs
sbb
dec
bound
jo
xchg
aas
xor
es
jge
mov
cwtl
add
mov
xor
jb
enter
xchg
jle
cmp
loope
sub
mov
jo
in
aaa
xchg
or
insl
ljmp
ficoml
aad
lods
hlt
fcompl
and
shlb
aaa
cs
psubd
icebp
dec
sbb
outsl
dec
repnz
sub
adc
lds
push
clc
outsb
pavgb
mov
add
xchg
std
data16
inc
in
mov
push
sahf
lcall
xchg
and
sbb
fcmovnb
mov
idivl
out
mov
cmc
mov
sub
shrb
push
out
repnz
mov
pop
mov
movsl
or
test
sub
adc
pop
and
dec
dec
movsl
or
aaa
sbb
pushf
sub
movsb
ret
xor
cmp
out
add
add
fsubl
and
and
push
mov
sti
cmpsl
mov
jle
out
xchg
mull
xchg
inc
jg
push
inc
push
repnz
add
push
adcl
cmpsb
sarl
mov
rorl
sub
push
in
push
jae
mov
or
xchg
sbb
mov
push
add
mov
hlt
dec
push
ret
pop
imul
sbb
fwait
fwait
je
sbb
mov
jo
not
aam
sub
pop
lds
mov
xchg
cmp
adc
lods
repnz
ret
inc
xchg
testb
call
cmp
sbbb
outsb
jb
das
dec
pop
cs
sbb
jnp
dec
pop
addr16
xor
test
out
fwait
das
xchg
es
roll
test
je
push
sbb
sbb
and
leave
cltd
jbe
scas
bnd
aaa
sbb
imul
fisubl
ss
in
cmp
mov
call
cmp
cmp
add
xor
jne
lods
int
inc
lahf
xchg
cmpsb
dec
mov
push
cmp
inc
or
jo
mov
mov
outsl
fs
add
mov
decl
and
popa
mov
cs
pop
test
sub
rcrl
sub
notl
mov
xor
out
adc
ret
lcall
popf
dec
adc
xlat
js
test
mov
lds
xchg
xchg
and
lock
gs
pop
loop
push
push
inc
push
adc
xchg
inc
mov
cmp
scas
xchg
cmp
and
rcll
push
xchg
mov
cmp
push
push
sbbb
dec
sbb
pushf
adc
and
addr16
adc
mov
jmp
das
fmuls
xchg
cmp
mov
push
in
mov
mov
mov
fs
push
rcll
movsb
sbb
jmp
rcrl
imul
imul
and
cmc
ror
jnp
and
je
jg
out
fldcw
int3
movb
add
mov
inc
push
ret
pop
mov
in
mov
jge
xchg
test
std
mov
or
xchg
iret
aaa
imul
int
in
add
jge
xchg
mov
dec
pop
inc
cmp
mov
push
and
dec
jmp
insl
mov
movsl
cmp
roll
add
call
mov
or
adc
icebp
cmp
loope
inc
or
sbb
jge
inc
cmpsl
imul
inc
dec
imull
pop
xor
xor
pop
jp
aas
mov
cs
and
push
pusha
lcall
lahf
lret
jg
daa
out
in
iret
lock
dec
pop
nop
mov
loop
sbb
cmp
or
pop
dec
push
es
pop
dec
out
mov
xchg
cli
jmp
repz
cli
addl
jmp
std
push
pusha
pop
push
push
in
bound
cmp
mov
jns
mov
cmp
ljmp
pop
xor
sahf
or
mov
fcoml
fcomps
xchg
or
maxps
mov
out
mov
cmc
xchg
in
push
sub
xorb
add
adc
sbb
and
dec
dec
in
add
sahf
xorb
or
daa
xor
add
jae
js
cwtl
gs
loop
addr16
push
inc
add
pop
pusha
or
popa
out
sub
cmpsl
movsb
negb
int3
mov
xchg
add
fs
mov
pop
xlat
cmc
ds
mov
and
test
insb
rcll
dec
aaa
in
lods
leave
sub
inc
mov
mov
aaa
sub
rolb
nop
add
mov
ds
enter
cmp
add
test
test
cmp
out
lret
dec
out
je
cwtl
add
xor
xorb
cmp
mov
pop
mov
mov
add
rorb
push
mov
xor
outsb
cmp
movsb
pushf
adc
mov
push
sbb
idivb
orb
xchg
xchg
mov
push
xchg
loopne
or
inc
and
add
mov
mov
dec
inc
push
out
rorb
dec
rcl
push
jge
daa
pop
ret
lcall
aad
mov
daa
icebp
mov
pusha
ja
jns
pushf
jg
dec
add
add
stos
call
or
jp
cli
fwait
sub
repz
inc
or
push
mov
repnz
rclb
xchg
mov
pusha
mov
mov
lods
mov
scas
xor
movsb
and
pop
movsl
aad
popa
sub
in
sbb
inc
cld
stos
jmp
dec
sahf
data16
insl
stos
jle
call
mov
loop
dec
xchg
data16
xlat
xor
ds
push
mov
jg
incl
in
movsb
xor
lcall
movsb
push
or
dec
push
xorl
test
jle
js
or
jge
cwtl
roll
dec
pop
rclb
xor
sbb
dec
and
sub
jo
cltd
fnstenv
xchg
loopne
jecxz
in
mov
dec
mov
arpl
dec
xor
mov
int
out
push
cld
pop
pop
xchg
inc
cmpsb
loop
dec
inc
push
jl
sub
sub
sahf
push
xchg
mov
repz
cmp
daa
and
xor
sbb
inc
bound
bound
insl
cltd
es
xchg
fidivrl
adc
or
or
test
scas
mov
or
enter
lret
adc
mov
sub
es
divl
push
pop
xor
xor
push
dec
xor
cwtl
js
ret
pop
rcl
sbb
mov
gs
xor
mov
xchg
int3
fdivrs
stos
mov
sti
lock
pop
dec
mov
mov
push
and
mov
dec
data16
scas
lahf
xchg
loop
imul
mov
sub
call
push
inc
neg
mov
mov
push
dec
int3
movsb
out
std
push
rcl
frstor
mov
jmp
sub
mov
pop
insl
push
rcl
mov
dec
lcall
jle
outsb
mov
xor
hlt
pop
adc
icebp
mov
mov
pop
push
jo
dec
lea
add
lock
cmc
mov
sbb
addr16
mov
adc
add
dec
loopne
loope
inc
jmp
inc
fsts
ret
and
ds
flds
mov
mov
add
fdivs
and
fdivl
add
dec
adc
add
jge
movsl
pusha
mov
mov
bound
imul
scas
aam
jo
test
imul
push
repnz
push
push
mov
jb
add
ds
lret
push
xor
notb
sbb
xor
sub
add
cmp
mov
mov
cmp
sbb
adc
shlb
pop
adc
int3
ds
cmpsb
sarl
push
mov
mov
lcall
daa
bound
pop
cwtl
add
mov
in
sub
mov
call
add
ret
in
fidivs
addr16
lods
pop
out
cmp
aad
adc
jne
loopne
sahf
pop
aas
es
ror
cs
dec
hlt
enter
repz
repnz
mov
dec
andb
xorb
xlat
out
nop
or
push
pop
lods
inc
xor
mov
fiaddl
sub
jae
cli
pop
mov
gs
jne
inc
repnz
fwait
push
in
add
pop
pop
mov
pushl
mov
test
daa
cmp
out
test
roll
out
push
sbbl
loop
xchg
jmp
lret
xchg
pop
and
or
out
inc
mov
icebp
cmpsl
dec
scas
jns
movsb
xor
xchg
inc
cs
push
jns
add
jp
dec
cs
inc
xlat
pop
aaa
outsb
or
cli
adc
dec
or
cmp
adc
pop
push
out
mov
push
negl
push
jbe
inc
mov
movsb
mov
mov
insb
cmp
jmp
gs
xor
out
jb
dec
repnz
pop
data16
inc
lret
push
or
jle
aaa
outsl
clc
mov
pusha
add
mov
sub
mov
add
shl
test
std
cltd
push
imul
repnz
inc
dec
dec
sbb
test
push
popf
sub
push
jb
loope
sar
pop
sbb
out
xchg
call
mov
xchg
add
popa
inc
xchg
xor
pop
xlat
sarb
dec
pop
enter
pop
dec
jnp
mov
popa
lret
xchg
popa
jmp
cmpsb
data16
xchg
xchg
test
cwtl
sti
dec
mov
push
cmp
pop
sub
ss
call
scas
movsl
cwtl
repnz
jecxz
dec
ficompl
iret
add
sbb
jecxz
pop
mov
sbb
aaa
xor
push
hlt
inc
sub
sti
sbb
sarb
jle
mov
popf
cmp
mov
shr
out
adc
sbb
inc
or
aaa
stc
add
es
in
idivb
inc
and
out
out
shll
icebp
call
jne
insl
pop
push
cmp
rcll
push
xchg
nop
xor
sbb
test
add
adc
xor
cwtl
fists
lahf
cli
outsl
jno
xor
push
iret
idivl
push
fsubrs
outsb
ss
add
test
jae
mov
xchg
push
add
adc
cs
cmp
loopne
outsb
ret
pop
sbb
jp
movsl
mov
in
push
rcl
mov
mov
cmp
inc
cs
jno
push
stos
je
and
pop
push
jl
cmp
mov
pop
sbb
mov
pushf
mov
test
fs
jns
mov
insb
dec
add
dec
sbbb
sbb
in
push
mov
leave
mov
xchg
sbb
into
data16
outsb
jecxz
xor
rcrb
fsts
dec
mov
shrl
and
push
int3
int
cli
xlat
scas
flds
test
push
fs
or
cmp
inc
call
shrb
and
aad
add
aas
lock
bound
adc
or
jb
push
nop
xchg
dec
or
sti
repnz
out
pop
movsb
gs
or
lahf
or
shl
xchg
inc
mov
shlb
std
mov
in
ljmp
add
xchg
pop
push
jle
cli
popf
inc
adc
daa
rol
gs
sub
pop
arpl
inc
scas
and
push
xchg
jbe
lods
mov
fcomp
mov
xor
fildll
sub
add
inc
loop
mov
stc
into
dec
add
cmp
inc
jle
cmp
adc
mov
push
xchg
push
lds
mov
jo
xor
pop
push
hlt
mov
or
inc
jb
dec
fdivrs
pop
xchg
loopne
fnstsw
sbb
adc
lods
or
inc
repnz
daa
insl
js
das
out
add
jnp
dec
cmc
jo
sahf
and
inc
cmc
outsb
inc
add
outsl
out
mov
pop
out
pop
push
and
js
aaa
push
into
in
mov
inc
sbb
and
pusha
mov
adcb
das
push
sar
scas
mov
mov
mov
sub
dec
pop
rdpmc
dec
cmp
faddl
add
mov
or
mov
cltd
cmpsl
inc
dec
cmp
rcrb
push
inc
scas
cli
loop
and
jnp
lcall
jmp
sbb
push
mov
mov
aas
xor
mov
mov
cmp
cltd
push
sub
rcr
std
sub
imul
roll
lret
es
xchg
dec
jns
notl
or
aas
cmp
les
movsl
movsb
jmp
adc
rcr
setae
les
int
push
jmp
pop
out
push
cmpl
arpl
sub
and
test
orl
in
lret
sbb
negb
mov
and
sahf
xchg
in
push
hlt
test
lea
mov
dec
lret
xchg
int
insl
push
cmp
outsb
jmp
adcl
push
enter
mov
adc
cld
cmc
push
adc
jb
outsl
xchg
inc
insl
scas
xchg
cmp
out
add
mov
push
or
xchg
inc
add
adcb
cmp
das
daa
and
cmp
lock
lods
push
mov
and
jb
mov
out
sub
dec
jl
sahf
dec
fstpt
jg
cmpsb
fwait
js
push
dec
mov
inc
jg
fnsave
sbb
neg
imul
push
cmp
orb
adc
call
xchg
fs
inc
sbb
sub
cmp
div
jmp
mov
inc
cs
outsb
add
lahf
call
cld
xchg
popf
inc
pop
bound
jo
stos
ds
int3
jnp
addr16
sbb
jno
pop
adcl
add
adc
aas
outsb
xor
iret
out
push
inc
jl
sub
push
ret
ds
sbb
les
xchg
mov
adc
mov
and
cmp
les
lods
sbb
data16
adc
call
mov
add
pushw
das
adc
pop
fldl
shll
jle
xchg
pop
test
dec
xchg
mov
ret
aam
jle
movntq
in
mov
inc
sbb
jae
cwtl
icebp
pop
lods
push
ret
aad
mov
dec
pop
hlt
sbbl
xchg
std
inc
mov
test
mov
cmpsb
dec
in
negb
dec
and
xor
mov
jnp
gs
or
mov
dec
jg
fsubrl
push
sub
pop
loopne
addr16
out
mov
jg
mov
cmc
cli
scas
push
repnz
outsl
test
lcall
popf
add
pop
xchg
loope
cmp
jl
scas
xor
sbbl
bnd
adcl
jg
popa
icebp
cs
mov
hlt
mov
decb
add
jle
jmp
adc
cs
int3
das
inc
sbb
pop
pop
xor
pusha
mov
xchg
mov
fldcw
out
test
inc
fsub
dec
cmp
mov
ljmp
pop
xchg
cld
lahf
and
cltd
pop
push
hlt
or
andl
push
mov
rcrb
or
xchg
pop
pop
leave
iret
dec
or
sar
test
test
fwait
add
jns
add
fidivs
xor
mov
mov
jns
sub
sahf
nop
rcrl
call
movsb
cwtl
mov
les
mov
pusha
lcall
repnz
rorl
add
push
dec
adc
add
jns
inc
mov
imul
iret
xor
mov
pop
aam
xchg
out
es
scas
xlat
call
out
lea
cmp
fwait
jno
in
in
sub
dec
nop
lock
inc
push
xor
mov
mov
xchg
pop
pop
cmp
fidivrl
pop
rcl
lods
lahf
push
inc
inc
xchg
push
imul
dec
stos
leave
insl
scas
push
add
or
jo
and
ss
sub
mov
cli
loope
leave
sub
insb
lcall
outsb
lock
sbb
out
dec
cmc
repnz
pop
ror
test
mov
stos
outsl
je
push
pop
inc
sbb
push
pop
fstps
adc
mov
cli
jle
mov
shlb
xchg
dec
push
in
aas
jb
mov
adc
loop
or
movsb
mov
movsl
push
mov
mov
cmp
jne
sub
insb
xchg
negl
jecxz
push
push
mov
repz
push
fstp
pushf
das
xor
rolb
xor
stos
cs
sbb
and
sbbb
xorb
shll
lock
pop
and
dec
cmp
sti
dec
xor
xlat
daa
pop
imul
mov
cld
iret
movsb
rorl
arpl
xor
test
lcall
subl
and
test
fsts
notl
sti
outsb
cmp
arpl
pop
mov
cmpsb
jge
dec
shll
out
repz
mov
push
lret
xor
fisttpl
adc
repnz
pop
cmp
mov
xchg
sahf
jb
sub
xchg
out
or
jbe
push
ljmp
mov
mov
sbb
mov
icebp
xchg
add
adc
jns
sti
in
test
xor
push
pop
sbb
xor
fwait
cmp
mov
inc
ljmp
push
dec
fstpt
daa
jmp
testb
fisubl
sti
roll
jnp
fstpt
ds
or
jge
gs
adc
jg
leave
jne
add
xor
lods
enter
pop
add
aam
cmc
sbb
cmp
bound
mov
jle
ficomps
cmpb
jnp
or
jb
fwait
jp
scas
insb
push
xchg
mov
ss
inc
addr16
inc
aas
popa
arpl
into
lret
call
sub
sub
addr16
sbb
out
out
dec
mov
aad
push
rcrb
lahf
iret
dec
adc
sub
inc
pop
jmp
and
and
mov
stos
xchg
xchg
les
jae
ficompl
jns
mov
push
mov
inc
pop
dec
mov
shlb
jle
sbb
inc
data16
scas
mov
ret
jle
arpl
push
pop
sbb
push
test
or
mov
cmp
sub
mov
mov
ja
pop
pop
leave
sti
sar
dec
inc
adc
xchg
xchg
pusha
sbb
test
and
stos
jg
adc
dec
dec
inc
mov
sub
dec
ret
mov
pop
pop
xlat
or
orl
ret
das
cmp
sbb
dec
sahf
pop
dec
mov
popa
rol
in
cmc
fdivrs
xchg
sbb
ss
mov
push
pop
ljmp
push
dec
sbb
loopne
cmp
in
insb
ss
aad
loope
out
mov
mov
push
mov
adc
add
sub
mov
mov
out
add
cmpsl
jnp
add
fstpt
jb
inc
cmp
fbstp
sub
fwait
rcll
sub
cmpsl
inc
test
out
mov
and
dec
ret
loop
lcall
outsb
int3
sbb
js
scas
add
dec
or
cmpsb
loope
jmp
sbb
les
adc
rorl
mov
jbe
dec
inc
negb
test
inc
jge
insb
mov
sbb
xor
stc
lret
inc
inc
or
mov
mov
popa
stos
inc
xor
repnz
movsl
push
icebp
adc
push
sbb
iret
fists
clc
mov
xor
mov
cmp
repz
xchg
call
inc
xchg
xor
mov
insl
push
xor
sbb
cmp
fstps
pop
loop
stos
cltd
pop
xchg
and
hlt
cmp
sub
and
push
fiaddl
fiaddl
mov
pop
push
movsb
mov
adc
cmpsb
cmp
test
popf
insl
and
sub
into
push
dec
push
mov
sub
ljmp
les
inc
jbe
pop
mov
jecxz
push
and
orb
subb
int3
in
or
aad
push
cltd
add
cmp
adc
inc
cld
push
inc
mov
cmp
pop
push
xor
leave
mov
in
fcmovnb
out
fcomps
inc
shrl
mov
or
pop
sahf
jae
dec
cmp
xchg
jmp
xchg
rcl
std
dec
pop
cmp
js
inc
dec
inc
and
xchg
mov
sub
rolb
in
mov
pop
das
js
adc
jp
loopne
shll
outsl
sbb
add
xchg
aaa
std
mov
cmc
cwtl
popa
cmc
xor
mov
repnz
and
popf
cs
out
pushl
sbb
xchg
mov
mov
inc
cli
xor
iret
and
ljmp
add
mov
mov
inc
stc
imul
push
cltd
cmp
fsubrs
imul
mov
push
in
outsl
add
test
in
out
or
push
mov
adc
jmp
lret
lods
xchg
push
add
pop
ljmp
mov
push
sti
int
cmp
stc
sub
sti
pop
or
daa
lea
push
cmpl
lods
sub
loop
fsubrl
rcrb
xchg
or
sahf
lock
push
lods
insl
ss
leave
dec
shrb
test
cmp
push
mov
push
mov
loope,pn
out
mov
cmpsl
inc
sbb
cmp
pop
add
je
or
mov
add
or
cmp
mov
mov
icebp
add
testb
and
cmpsb
dec
das
insl
push
sbb
insb
out
sbb
pushf
and
adc
adc
outsl
mov
inc
fcompl
jne
xor
add
push
ret
pop
push
nop
loopne
or
ds
push
lods
mov
ret
mov
dec
mov
mov
mov
imull
sbb
ljmp
dec
test
sub
jne
aad
xor
lcall
sub
cmp
addb
jne
cmpsl
mov
cmp
mov
in
mov
pop
mov
rorb
aam
push
pop
mov
and
dec
push
mov
cli
push
xchg
mov
and
inc
mov
imul
cld
dec
cmp
cmp
mov
push
sahf
test
inc
and
mov
lahf
push
scas
mov
rorl
sbb
sub
ret
pushf
test
and
adc
out
mov
loop
pushf
sbb
push
sbb
pop
nop
mov
jp
scas
sbb
or
iret
adc
subl
push
iret
repnz
aaa
fnstsw
sahf
scas
out
push
je
jle
pop
or
cmp
xchg
cmpsb
cmp
mov
mov
ja
pop
stos
sub
mov
call
rorb
cmpsb
nop
in
mov
mov
aaa
ret
xchg
ret
mov
fisttpl
data16
fs
aad
mov
rcrb
lock
repz
pminsw
or
sbb
xor
es
addb
inc
mov
in
push
dec
xchg
jae
push
or
mov
out
adc
mov
mov
jbe
pop
vmwrite
cwtl
inc
and
pushf
aam
movsl
ljmp
lods
mov
es
dec
xchg
outsl
xor
jmp
add
shl
das
iret
pop
dec
xchg
mov
fistpll
bound
sbb
xchg
ljmp
loop
cmp
rclb
imul
je
bound
sub
cs
shufps
dec
jmp
test
jle
inc
iret
mov
xor
jmp
cmp
popa
xor
movsb
mov
dec
push
pop
leave
out
adc
cmp
mov
xchg
cmpsl
mov
cld
cltd
movl
mov
cmp
fs
xchg
jmp
xchg
push
xchg
cltd
insb
ds
push
jge
shl
ret
pop
inc
daa
shlb
jbe
data16
fbstp
out
popf
inc
mov
cmc
dec
push
enter
adc
xor
cmc
sarl
and
cmp
push
shll
inc
fucom
push
pushf
shrl
push
lcall
sub
cmp
mov
pop
xchg
call
mov
rorl
push
jae
lds
fs
lcall
xchg
fstpt
add
mov
pop
rcll
push
cmp
sbb
sub
push
xor
sbb
stos
xchg
fwait
leave
mov
lock
repz
cmp
and
jns
mov
icebp
jg
push
add
pop
jno
xchg
negb
imul
xor
and
std
jle
das
jae
push
mov
stc
in
out
push
int
sub
lret
dec
fabs
in
aas
push
inc
xor
jo
sarl
std
cltd
in
in
xor
cmpsb
xchg
xchg
gs
push
mov
outsb
nop
add
xchg
pop
mov
lods
and
hlt
rcr
sarl
pop
mov
adc
dec
fnstenv
pop
daa
cmp
mov
rorl
and
push
mov
insl
cmp
xor
sub
mov
ds
jne
or
stc
push
sarl
pop
jle
js
lret
test
stos
sbb
jbe
test
mov
addr16
shrl
xchg
cmp
jecxz
cmp
and
mov
out
cmc
xlat
inc
icebp
sbb
in
adc
lea
dec
jecxz
insl
sbb
xchg
das
pop
addr16
mov
dec
adc
inc
xor
repnz
je
iret
fimull
aad
ret
sub
fadd
addr16
sti
xchg
sbb
filds
pop
call
adcb
jne,pn
push
movsb
sub
mov
mov
mov
aaa
lea
aaa
mov
mov
subb
adc
es
sub
pop
addl
test
outsl
xchg
es
in
adc
out
sub
mov
bound
js
sbb
mov
jle
lahf
hlt
inc
mov
aas
arpl
xchg
adc
jmp
insl
data16
cmp
ja
andb
popl
mov
or
push
add
ljmp
out
pusha
mov
xchg
sbb
jge
int3
jae
jo
jno
das
outsl
pop
das
add
cmc
lods
jnp
lret
push
lods
or
xor
dec
and
push
je
dec
ds
push
lret
call
lcall
xor
push
movb
mov
imull
sub
jp
icebp
pop
adcb
inc
add
jl
ret
jg
push
xlat
icebp
andb
in
lds
push
mov
cwtl
in
jl
sub
jb
leave
adc
jle
mov
xchg
mov
cmp
add
cmpl
inc
dec
imul
xor
mulb
inc
mov
insb
icebp
mov
popa
cmp
pop
mov
adc
scas
shrl
mov
adcb
popa
lods
out
int3
pop
popa
and
aad
push
testb
fisttpl
imul
add
xor
cwtl
lret
xchg
ds
pop
repnz
int
aas
test
leave
cli
cmp
xchg
mov
sarl
lret
fwait
lret
fs
pop
mov
xchg
xlat
jnp
jne
mov
data16
repnz
mov
pop
xchg
inc
mov
cmpsb
mov
stos
sahf
pop
lahf
daa
les
add
cmp
add
sarb
icebp
fadds
mov
mov
xor
imul
andb
in
sub
pop
addr16
xchg
cltd
adc
xor
fldlg2
fs
cmp
mov
ret
cld
icebp
push
sbb
sbb
inc
jnp
dec
xor
out
jo
arpl
fndisi(8087
inc
int
gs
dec
push
cs
mov
gs
inc
mov
add
and
jecxz
push
pushf
fsts
in
arpl
push
ss
xor
jae
shlb
imul
hlt
add
dec
lahf
incl
inc
fwait
mov
add
fmulp
jecxz
push
sbb
loope
mov
pop
mov
pop
xorb
shrb
fs
pop
popf
js
lret
int3
es
sub
jg
inc
sti
sbb
add
test
repz
inc
je
or
sub
repnz
inc
cmp
pop
xchg
popa
push
pop
test
adc
addr16
cs
lret
cmp
pop
mov
addr16
inc
jp
fbstp
out
jne
mov
mov
mov
ljmp
cs
data16
jno
mov
js
sub
cs
in
dec
ds
hlt
xchg
rolb
sub
scas
mov
lds
pop
cli
inc
mov
cmp
jl
push
or
xor
scas
cmpsl
mull
jne
xor
in
loope
adc
jb
or
pop
movsb
inc
clc
cwtl
ret
jp
cmp
les
jmp
out
sub
rcll
xor
pushf
cmpsl
pop
loope
jg
jmp
xlat
sbb
push
sub
mov
xchg
jns
leave
jmp
lret
mov
fcos
push
xchg
fwait
pop
mov
xor
pop
test
sub
and
mov
mov
inc
ds
sbb
loop
push
inc
outsb
dec
out
sti
or
push
div
xchg
push
and
and
pop
shll
xchg
scas
inc
fwait
aad
xchg
inc
loop
lcall
cli
jmp
xchg
and
mov
xlat
xchg
cmp
jmp
fsubrs
jnp
add
bound
fistpll
mov
xor
cmp
bound
call
jne
repz
mov
pop
mov
mov
sarb
adc
pusha
je
pop
leave
dec
lds
scas
std
pushf
xor
mov
push
and
insl
jns
stc
pop
pop
mov
jmp
adc
fstl
mov
add
jno
pushf
adc
and
lods
or
fidivs
add
loopne
sbb
inc
sbb
mov
in
int
stos
rcrb
jb
push
popf
daa
mov
adc
inc
cmp
test
int3
dec
and
iret
js
pop
pop
pop
mov
or
mov
aaa
int
mov
popa
mov
mov
jnp
jmp
sarb
jns
xchg
push
lret
add
out
pop
xchg
outsl
and
fneni(8087
xlat
inc
iret
xchg
out
lahf
mov
mov
call
lret
jecxz
fbstp
or
dec
enter
outsl
rcrl
jl
mov
adc
out
mov
adc
test
mov
in
xchg
and
sbb
shrb
nop
addr16
cmp
fwait
pop
sti
ficoml
test
jmp
stc
cmc
inc
std
and
inc
push
mov
incb
pop
int3
inc
cwtl
xor
nop
push
xchg
cs
mov
sbb
lea
sbbl
xchg
mov
pop
jg
adc
add
adc
in
outsl
mov
sbb
in
push
pop
imulb
jmp
and
imul
fisubrl
sbb
ja
or
aad
adc
sbb
iret
mov
lds
mov
xchg
cmc
jg
ret
and
gs
stos
in
cmpl
daa
sub
mov
adc
iret
xor
cmc
push
divl
test
cmc
lock
jle
adc
dec
data16
sub
sub
shl
or
push
stc
ficomps
sbb
lcall
mov
jmp
lret
push
mov
gs
add
iret
push
mov
out
lret
test
sahf
mov
cmp
pop
pop
rolb
jae
lods
push
ret
mov
mov
in
pop
xchg
push
aad
sahf
test
out
xchg
mov
mov
push
add
fiadds
mov
xor
sbb
mov
mov
mov
andb
jbe
and
stos
inc
sub
pushf
scas
cmpsl
nop
sbb
dec
and
fisttpll
mov
inc
xchg
subl
mov
cmp
cmpsb
jno
ja
orl
jne
jmp
leave
add
and
mulb
adcl
imul
ljmp
cmp
sub
cmpsl
and
aas
inc
adc
int3
call
in
sti
add
ret
push
add
inc
orl
ficoms
cmp
js
mov
mov
lods
push
jns
sub
arpl
add
scas
jmp
mov
leave
insl
pushf
cmpsb
or
xor
jno
mov
rcll
cmp
out
sbb
jp
add
dec
nop
cmp
pop
add
jg
adc
jne
clc
sbb
dec
popa
test
fwait
into
sbb
xor
fldl
popf
fbstp
fs
outsl
push
hlt
xor
adc
dec
jns
pop
xlat
xlat
test
lock
test
lds
mov
subl
dec
mov
push
pop
mov
xchg
add
lock
out
push
and
pushf
inc
cmc
push
xor
pop
add
rcr
cmp
push
fisubl
adc
mov
add
jl
sbb
ja
ja
lds
push
in
pop
cmp
or
hlt
lea
aad
push
icebp
mov
add
adc
aam
mov
in
es
adc
daa
cli
pop
pushf
cmp
cmpsl
pop
inc
les
mov
dec
repz
sbb
sbb
push
test
lea
inc
jo
inc
push
inc
inc
jno
sub
jl
jbe
icebp
dec
test
cmp
mov
enter
je
add
fcmovnu
pop
mov
add
out
mov
lods
push
fdiv
cmp
push
sbbl
xchg
and
fisttpll
dec
mov
push
or
pop
mov
hlt
jne
subl
and
in
xchg
icebp
add
push
lods
icebp
idivb
add
push
adc
pop
and
in
xor
xchg
rolb
out
dec
lods
xchg
add
fcmovu
mov
or
sub
sbb
adc
or
fsincos
or
mov
in
inc
mov
jb
cmp
jb
pop
fwait
loop
jg
lods
aas
icebp
xchg
mov
mov
imul
setne
adc
jle
outsb
mov
stos
jns
cltd
push
imul
stos
addr16
dec
push
dec
cmp
inc
in
mov
out
sbb
stc
jl
xor
push
and
test
xor
cmp
scas
push
sub
cwtl
popa
push
push
dec
inc
stos
dec
je
adc
sbb
add
push
std
push
jge
pop
scas
adc
inc
fwait
push
cmp
mov
mov
cld
fdivrp
inc
and
sbb
ret
rorb
push
lahf
or
inc
inc
jg
sub
dec
add
std
cmp
adc
das
mov
adcl
arpl
hlt
mov
push
out
pusha
rcrb
xchg
scas
pop
hlt
fidivs
sbb
sub
lea
test
ret
xchg
cltd
pop
jnp
mov
inc
aas
lcall
sub
scas
test
add
mov
test
inc
push
jecxz
mov
xor
in
out
jb
loopne
gs
jo
xor
cmc
jle
sbb
xor
sbb
mov
arpl
shll
rcl
sti
sarl
notl
pop
je
and
and
xchg
jno
mov
xor
int
xor
sbb
jge
add
insb
jg
push
jle
test
pop
xor
test
add
sbb
pop
in
xchg
push
xor
xor
dec
jne
sbb
js
je
daa
or
ja
and
sub
pop
dec
pop
lea
hlt
adc
dec
das
js
sub
pushf
notl
popf
mov
outsl
pop
mov
dec
xchg
fstpl
pop
mov
xor
fldl
pop
movsb
dec
lods
sbb
roll
imul
inc
leave
or
ret
stos
iret
clc
xchg
pop
dec
sub
sarb
fmull
jmp
dec
inc
pop
jecxz
stos
jnp
jle
mov
int
add
aam
rolb
pushf
enter
xchg
out
enter
pop
pop
fildll
push
in
or
jle
push
stos
mov
jo
stc
rorl
xor
pop
loope
jecxz
sub
add
bound
pop
xchg
pop
add
inc
js
xor
pop
xchg
xchg
pop
xchg
notb
xchg
jmp
dec
lods
ret
or
sub
push
xchg
sub
aam
xchg
aas
push
inc
in
inc
push
gs
ds
ja
in
mov
jae
pop
pop
int
lahf
xchg
test
call
jnp
and
or
mov
fsubrs
push
or
int
cs
mov
ss
xchg
stc
adc
push
daa
inc
jg
xor
imul
sbb
lods
cmp
mov
mov
shll
test
mov
gs
add
shlb
daa
xlat
xorl
out
cs
mov
pop
pop
sti
shlb
rcrb
das
and
add
sahf
fcompl
jge
xchg
idivb
mov
mov
repnz
adc
insl
adc
xchg
sbb
mov
imulb
insb
das
pushf
push
ja
cmc
add
test
mov
ss
pop
repz
push
cmp
lret
sbb
mov
push
lahf
insb
cmpsb
or
cmpsb
inc
inc
add
mov
cmpsl
je
sarb
call
push
cmpsl
jo
icebp
jg
xor
loope
cld
xchg
mov
rolb
lret
inc
and
adc
popf
in
jl
add
push
mov
xlat
cld
adc
and
mov
jb
movsl
scas
sub
cmp
int
push
ret
pusha
jne
lret
data16
cmp
xchg
push
cmpsb
sub
lret
ret
pusha
fs
ss
shl
push
jne
rorl
and
pop
push
loop
ds
sbb
inc
cmp
fwait
push
out
push
mov
punpcklbw
push
dec
cltd
mov
add
and
xchg
xor
faddl
roll
leave
ss
pusha
sar
je
enter
add
repz
movsl
loop
jb
and
sub
add
movsl
mov
decl
les
push
sub
jp
jne
cltd
pop
cs
push
lret
adc
adc
sub
mov
or
lret
sbb
ds
lret
sbb
sti
and
pushf
or
pop
repz
jg
in
int3
in
insb
jne
in
adc
push
stos
sbb
iret
jno
xor
rcr
mov
orb
mov
jmp
jnp
lock
xor
jnp
jb
pop
iret
xor
pop
jns
test
shlb
in
xor
out
in
cmp
int3
arpl
mov
adc
imul
adc
pop
mov
dec
sbb
loope
cmp
ret
inc
push
cmc
dec
mov
cmp
aas
mov
std
push
fsubrl
les
mov
daa
jb
jmp
les
jg
or
out
fsubl
gs
xor
xchg
imul
push
xor
test
cmpsl
mov
jns
mov
fists
in
lret
pop
sti
cmpsl
aam
xorl
sbb
mov
inc
mov
add
fnstenv
lcall
cmp
pop
pop
sbb
sub
repnz
shl
adc
lcall
fadd
dec
int3
xor
adc
clc
sbb
add
loopne
add
pop
addr16
dec
xor
push
mov
enter
call
xchg
mov
sbb
push
jl
pop
je
insb
insl
inc
jbe
movsl
sti
lds
aaa
out
fnstenv
hlt
repnz
rol
addr16
scas
fbld
sub
addr16
sahf
lcall
idiv
jae
mov
xchg
scas
scas
adc
lds
mov
shll
cltd
xchg
loope
out
insb
lret
sbb
xchg
inc
add
js
jb
fadd
leave
in
lods
fsubp
sbb
pop
push
mov
movsb
fisubs
sbb
add
mov
sub
mov
int
jne
sbb
outsl
push
inc
jo
outsb
hlt
mov
sbb
test
mov
jns
std
mov
dec
jp
sub
loopne
xchg
divb
or
mov
mov
pop
adc
cltd
clc
jl
outsb
andb
rcrb
xor
sti
pop
lock
jecxz
or
add
scas
pushf
xchg
mov
iret
lret
dec
push
aaa
addr16
dec
add
inc
in
mov
sub
je
xor
in
push
mov
xchg
cmpsl
mov
push
push
movb
push
xor
cmp
sub
inc
cld
mov
idivb
int3
push
ret
pop
add
pcmpeqw
rorl
ds
cmc
xor
icebp
jle
pop
xor
icebp
fsubl
into
mov
in
or
add
push
lock
daa
xor
fwait
lods
and
cmp
xchg
into
or
je
mov
call
repz
testl
rol
cmp
mov
xchg
and
stc
std
ret
mov
xchg
outsb
inc
int3
adc
insb
fdivr
or
push
mov
cvtps2pi
add
pop
jae
leave
xchg
cmc
mov
mov
outsl
fisttpll
pop
cmp
cmpsl
xchg
ja
sbb
xchg
out
xchg
mov
push
sbb
pop
jne
xor
aas
cmp
cwtl
int
xchg
and
xor
push
ret
sarb
in
xchg
daa
mov
sub
mov
jg
or
cmp
mov
mov
jle
andl
fldcw
clc
push
pop
nop
sahf
pop
adc
sub
pop
add
dec
inc
out
xor
ja
jnp
fistps
mov
push
xchg
mov
cmp
gs
or
push
mov
loope
mov
mov
jmp
xor
mov
pop
sarb
cmpsl
inc
repz
sub
outsb
imull
jg
xor
sub
test
dec
xchg
adc
mov
lods
pop
dec
cmp
cmp
stos
cmpsl
test
xchg
pop
into
rclb
xor
sti
xor
inc
scas
mov
add
dec
sbb
repnz
fsts
push
adc
dec
sbb
pop
inc
jmp
arpl
push
lods
cli
inc
ds
jg
fidivrs
pop
idivb
jp
jecxz
in
dec
scas
mov
data16
xor
int3
add
mov
stos
xchg
sub
ret
das
add
cmp
enter
es
sahf
sbb
cmpsl
mov
nop
or
dec
and
mov
dec
leave
inc
js
dec
and
jne
xchg
lock
frstor
or
ficomps
push
mov
push
sbbb
jne
stc
and
add
notl
test
or
xchg
adc
decb
xchg
cmpl
scas
cmp
cli
inc
mov
sub
add
lahf
popa
cmpsl
add
jb
xor
mov
gs
std
or
add
gs
mov
rclb
cmp
fistl
outsl
test
push
sub
push
push
ret
sub
cmp
rcrl
repz
cmp
fnstcw
jb
fsubrs
push
mov
test
popf
cs
push
or
lret
aad
out
fwait
or
add
hlt
mov
pusha
sub
dec
imul
pop
lret
adc
xor
adc
cmp
adc
pushf
pop
mov
les
cld
test
cmp
in
jle
das
and
push
jmp
pop
jne
mov
mov
dec
jno
adc
vmovaps
fwait
sbb
xchg
dec
es
mov
sbb
adc
push
and
je
repnz
ljmp
mov
push
adcb
pusha
pop
stc
push
cs
shll
jg
es
and
jge
test
xchg
fldcw
and
repnz
sbb
aaa
movsl
and
mov
xor
xor
stc
pop
addb
jbe
test
inc
das
movsl
mov
test
cmc
cmc
clc
rolb
jo
negl
cmp
je
adc
dec
fwait
test
outsb
fnstcw
std
push
push
cmpsb
dec
xchg
popa
push
jl
xor
mov
jmp
lods
scas
inc
loope
addl
dec
loope
faddp
hlt
xchg
mov
sbb
imul
adc
jno
cmc
adc
in
ljmp
call
aas
call
mov
push
mov
push
push
inc
imul
dec
adc
pop
sub
out
xchg
or
pop
daa
mov
arpl
sarl
aam
mov
lods
scas
pop
dec
sub
jns
nop
lds
jo
and
pop
fldt
pushf
loope
or
adc
test
call
and
push
scas
xchg
cltd
mov
mulb
les
ss
cmpsl
popf
xlat
gs
mov
pop
and
imull
cmpsl
mov
fneni(8087
rclb
insb
aas
mov
je
mov
cmpsl
lods
push
test
ret
imul
iret
mov
and
sbb
or
xchg
mov
sti
ss
dec
sub
xlat
int3
adc
push
pop
and
icebp
repnz
popa
mov
int
subl
fs
aaa
inc
into
mov
cmp
cmp
rol
clc
jo
fisubl
scas
gs
rclb
xor
jge
repz
mov
xchg
push
push
and
push
dec
inc
inc
aad
add
mov
xchg
incb
fsubl
cmpsb
mov
adc
inc
sbb
pop
movsl
iret
sti
aad
and
pop
mov
loope
xchg
xlat
adc
xchg
lods
pop
push
dec
pop
adc
add
push
cwtl
fs
cltd
in
cmpl
lds
push
add
push
jbe
repnz
scas
pushf
mov
mov
cmp
add
sahf
xlat
push
ror
testl
cmp
lods
and
and
movsb
imul
dec
andl
and
pop
daa
jmp
push
mov
fwait
rcrl
ss
add
jle
pop
addr16
inc
movsl
divl
bound
and
testl
pop
dec
adc
pop
out
fisttpl
sbb
mov
jno
sub
in
out
rcrl
ficompl
lods
xor
loope
xor
scas
mov
pop
fisubs
movsl
inc
test
fidivs
popa
cmpsb
cli
cmp
inc
icebp
adcl
cmp
or
sub
dec
int
and
outsl
sti
inc
sub
pop
test
popf
test
fstl
cmp
sub
enter
call
int3
mov
push
mov
jmp
daa
aad
roll
push
jmp
aaa
push
lds
popf
jge
cmpsl
fwait
mov
cs
rcll
std
dec
mov
cmc
insl
pop
pop
cli
or
fisubrs
push
out
xchg
std
test
mov
imul
mov
sub
punpcklbw
imul
dec
add
lods
repz
xchg
and
adc
or
cmpsb
sbb
shl
insl
ds
and
arpl
dec
lret
in
pop
push
in
mov
mov
xchg
stc
scas
inc
xor
in
and
mov
xchg
sub
pop
dec
call
lea
pop
aas
xor
ljmp
shrb
std
mov
or
lea
mov
bound
jecxz
rorl
push
dec
and
es
sti
ljmp
in
scas
das
inc
stos
xchg
inc
adc
sbb
adc
pop
xlat
testb
push
and
sbb
hlt
sub
jmp
jg
sbb
pop
sbb
in
push
je
cmc
mov
push
cld
xlat
rorl
dec
inc
mov
pop
and
xor
jnp
arpl
cmp
dec
mov
or
push
inc
lahf
pop
jns
lahf
xor
cmp
pop
adc
push
mov
pop
test
bound
cmp
adc
stc
ret
insl
out
add
sarb
ss
cs
pop
jne
fdivs
adc
loopne
xchg
movzbl
mov
mov
push
loopne
ljmp
dec
outsb
or
push
fidivrs
mov
fisubrs
sbb
sbb
cmp
fstpl
outsb
xchg
les
inc
or
movsb
les
sti
sub
push
jmp
or
daa
sub
dec
mov
clc
pop
xchg
mov
shlb
lock
mov
and
bound
and
sub
inc
xor
xchg
aaa
mov
jmp
sbb
frstors
mov
ss
outsb
sar
or
pop
jl
fdivl
imul
dec
ja
xchg
or
sbb
jl
sarl
ljmp
adc
cld
not
iret
movsb
sbb
es
ljmp
leave
faddl
in
inc
mov
shlb
cmpsb
testl
sub
mov
mov
push
push
mov
mov
xor
jp
jp
jnp
or
and
push
dec
das
je
fstp
pop
lods
push
cltd
jg
sahf
cmpsl
mov
mov
nop
xchg
push
ja
push
xchg
jo
sub
out
rcrl
adcl
lods
sbb
xchg
outsb
pop
stos
test
dec
les
popa
sub
es
lret
xchg
sub
inc
test
sarl
in
jecxz
mov
rolb
jmpw
push
jg
mov
xchg
sbb
inc
imul
pop
cld
jnp
push
sar
mov
adc
xor
jne
cmc
sub
notl
jge
adc
jb
add
loop
negb
imul
inc
rclb
fbld
sub
inc
rol
mov
mov
fnstcw
sbb
jle
xchg
or
mov
adcb
lret
jp
cmp
sub
jns
adc
cmp
dec
cmp
lds
shr
add
mov
jp
sub
es
sar
cmpsb
and
movsl
push
leave
orl
push
fldt
sbb
ret
push
push
movsl
jb
jne
or
pop
shrl
add
cs
cltd
lock
xchg
and
aas
inc
sbb
mov
jmp
mov
ljmp
or
dec
cs
decb
fiadds
stc
lds
jo
add
inc
insb
out
imul
icebp
cld
xchg
and
adc
push
addb
lock
pushf
fnsave
lret
push
pop
jbe
negb
mov
adcb
mov
sahf
xchg
clc
lds
fimull
mov
jmp
ljmp
arpl
xchg
lea
jg
mov
fdivrs
call
mov
lret
pop
std
push
sub
lds
pop
dec
lods
xor
subb
repz
adc
adc
stc
fmuls
inc
imul
lds
lods
out
or
push
pop
xorl
jecxz
xchg
in
mov
mov
incl
dec
lahf
fs
loopne
std
mov
pop
stc
and
addr16
sbb
add
mov
rolb
and
shrb
mov
dec
push
inc
push
lcall
cmp
fwait
outsl
test
sbb
test
lea
sub
icebp
and
push
out
sub
fwait
adcb
push
cltd
lret
push
cmp
adc
test
xor
inc
int
loop
sahf
lods
rolb
dec
xchg
stos
jmp
fistpl
mov
jmp
frstor
xor
insl
adc
inc
or
daa
ja
int3
shrb
icebp
or
rclb
pop
mov
mov
pop
jecxz
or
fsubl
push
es
mov
inc
cmp
mov
inc
in
outsl
xchg
sbb
jne
pop
jl
add
pop
jo
push
loopne
pop
pop
or
sbb
jmp
je
sub
outsl
sti
sbb
mov
mov
jecxz
xchg
mov
push
repz
and
mov
popl
fwait
aam
add
shrb
ljmp
sbb
hlt
or
in
dec
shlb
dec
and
hlt
cs
leave
aas
pop
das
push
and
je
mov
push
bound
cld
fistps
paddsb
jnp
pop
in
hlt
mov
xchg
dec
jl
mov
hlt
inc
sahf
pop
xlat
fdivr
dec
test
adc
mov
jae
lock
mov
outsl
scas
test
bnd
pushf
mov
sbb
stc
clc
pop
inc
setnp
fimuls
out
mov
clc
pushf
add
jnp
mov
push
or
mov
ret
adc
push
loope
xchg
in
pop
fstp
xchg
inc
arpl
dec
call
fiadds
loope
jbe
xchg
test
push
xchg
jbe
mov
pushf
out
or
xor
lcall
roll
scas
mov
jle
aad
inc
ret
aam
mov
jne
mov
fnstsw
add
adc
jne
add
sub
cmpsl
mov
sbb
sub
mov
sti
test
bound
mov
out
and
movsb
adc
jns
inc
jo
xchg
pop
insb
pop
push
push
aad
jmp
mov
adcl
cs
pop
or
mov
mov
lods
mov
fwait
pop
xchg
lret
in
insb
ljmpw
xchg
sahf
dec
test
sbb
scas
into
sub
pop
mov
test
lret
ljmp
std
lcall
cltd
addr16
pushf
pop
dec
pop
scas
lcall
gs
pushf
lock
imul
xchg
leave
push
jae
std
mov
into
icebp
push
pop
push
jae
push
cmp
mov
lahf
mov
xor
pop
and
ffreep
pop
cmp
lods
aad
or
or
dec
aas
sub
add
dec
jns
dec
pop
sbb
pop
lods
mov
mov
nop
cmc
in
mov
jns
or
js
mov
sti
imull
mov
jnp
iret
sub
mov
lret
mov
lea
xlat
roll
add
and
ja
stos
mov
xor
pop
add
dec
punpckhbw
mov
lcall
add
minps
pushw
pop
into
pop
xchg
mov
inc
pop
push
adc
and
aam
xchg
hlt
rcrl
xlat
mov
mov
out
xchg
mov
xchg
jecxz
mov
ss
outsb
jecxz
ret
mov
stos
inc
testb
imul
push
pushf
push
push
adc
inc
pop
lock
iret
decl
ss
xor
jne
in
test
pop
mov
or
jge
pusha
push
nop
mov
sbb
sub
push
loopne
mov
lea
into
pusha
test
pop
cmp
sahf
lcall
sbb
addb
mov
and
aam
add
aas
add
inc
jecxz
push
in
lods
or
sub
adc
call
loopne
mov
add
or
pushf
dec
sbb
and
imul
add
neg
jnp
sti
fsubrs
or
adc
fs
test
cmpsl
iret
jle
mov
inc
jecxz
cltd
je
sub
fwait
addb
mov
mov
repz
scas
sub
adc
or
fdivrp
xchg
popa
xorl
loope
lahf
addr16
xchg
mov
lods
mov
push
lret
scas
data16
test
inc
test
push
push
sbb
insb
lahf
cmc
xchg
mov
cmp
enter
jl
stos
aas
repz
mov
cmp
fsubr
dec
mov
inc
and
adc
or
cmc
rcr
cld
or
lcall
js
je
mov
inc
fwait
push
shll
inc
mov
sti
inc
int
push
mov
fcoms
cld
testb
mov
sbb
cltd
dec
and
iret
roll
rcr
rorb
pop
adc
out
and
cmp
mov
pop
out
xor
xor
int3
arpl
cwtl
daa
out
in
sbb
into
adc
sub
aaa
jmp
and
in
mov
in
xor
cmp
jno
xchg
push
mov
push
jb
dec
shr
dec
scas
mov
jb
bound
inc
repnz
add
xchg
adc
int3
fstpt
pop
fcmovne
rclb
jb
movsl
push
movsb
lret
sub
in
push
pop
pushl
mov
lods
addb
lret
incl
mov
cwtl
dec
in
or
mov
je
xor
adc
mov
daa
fisubl
add
xor
jecxz
repnz
popf
adc
mov
xor
cmp
call
dec
jge
ret
shrd
nop
and
xchg
inc
imul
mov
dec
mov
push
arpl
stos
pop
bound
inc
call
bswap
inc
xor
mov
in
xchg
and
xor
addr16
cmpb
push
mov
daa
loopne
mov
icebp
push
fldl
fnstenv
inc
adc
mov
dec
mov
mov
test
pop
mov
test
popa
dec
sub
rcr
lock
data16
pop
and
std
pop
sti
pop
inc
outsb
xchg
mov
outsl
scas
rcrl
movsl
xchg
push
out
and
inc
mov
sub
push
xchg
mov
sub
mov
aaa
mov
jno
pop
and
ret
push
sbb
icebp
dec
dec
mov
push
js
in
iret
mov
pop
jno
sbb
add
or
push
loope
sbb
std
dec
std
outsl
pop
enter
jle
leave
jecxz
rolb
mov
pop
repnz
imull
repnz
es
cwtl
clc
push
es
jmp
lods
push
add
pop
sbb
xchg
mov
std
loope
push
mov
and
ljmp
fmuls
xor
sub
sbb
pop
lret
fsubs
cmp
pop
sarb
add
inc
and
sub
xchg
jbe
pop
aas
sbb
add
js
dec
cmpsb
push
enter
jl
push
test
neg
outsl
jmp
mov
fcompl
pop
dec
jl
push
shlb
lahf
adc
movsb
insl
pop
lret
imul
leave
scas
or
pop
fsubs
int3
mov
push
jmp
mov
call
push
das
mov
fidivs
and
imul
jmp
xor
add
cltd
cli
and
fsubrl
cmp
inc
push
push
es
add
imul
pushf
lea
mov
shlb
in
in
pop
out
xor
outsl
cmpsl
xor
sbb
xor
sub
push
out
xchg
neg
pop
lahf
lds
sldt
dec
clc
lods
xchg
scas
mov
pop
sbb
rcrb
adc
leave
scas
jg
and
imul
add
xor
sar
push
addr16
aad
in
mov
mov
cltd
iret
mov
enter
inc
lods
jl
mov
inc
xor
fmull
and
add
inc
cld
push
ds
push
pop
pop
sbb
sbb
ret
ss
mov
jno
fcmovnb
daa
xchg
int3
lods
or
mov
clc
call
sbb
pop
and
xor
mov
xor
dec
push
jns
sar
inc
addr16
add
stos
sub
in
add
add
into
into
push
loopne
add
fdivl
or
pop
add
jb
mov
pop
jbe
test
xor
sub
push
mov
or
lock
cli
or
pop
xor
mov
jge
mov
mov
or
mov
movsb
gs
fdivrs
sbb
cmpsb
ficoml
push
andb
sub
xchg
pushl
sub
and
push
mov
push
pop
adc
sbb
in
push
push
mov
inc
mov
pop
mov
dec
jbe
inc
dec
sarl
repnz
neg
mov
lret
shlb
mov
das
ret
add
psubq
xor
das
sbb
jns
or
es
sti
fbstp
test
mov
in
out
mov
xchg
dec
pop
stos
cltd
iret
jne
bound
lods
mov
push
jbe
inc
addl
lret
sub
fs
std
or
in
or
cmpsb
mov
js
mov
ds
les
push
outsl
jle
mov
popf
ds
into
jmp
pop
fnstenv
mov
fisubrs
fistpll
mov
mov
mov
hlt
cwtl
popl
mov
adc
add
aad
cmpsl
xchg
dec
xor
sahf
cmc
gs
lds
jg
xchg
mov
or
das
icebp
mov
or
mov
mov
inc
jno
insl
sub
ljmp
mov
cmp
aam
push
add
push
cmc
jmp
scas
leave
and
push
int3
fisubrl
mov
fmuls
arpl
mov
out
mov
cmp
xorb
xchg
dec
aam
jae
sub
push
add
jb
iret
es
imul
lret
jns
in
push
js
into
inc
lods
push
shrb
out
das
xchg
fidivs
xchg
dec
jmp
sarb
imul
outsl
pusha
cmp
add
push
rcll
mov
ret
pxor
push
lods
fdivrs
int
out
or
pop
or
xchg
push
push
jo
js
jle
lods
mov
mov
lds
push
mov
dec
inc
js
push
paddsb
mov
xor
dec
cmc
push
add
les
test
dec
fstl
pop
cmc
jnp
hlt
fwait
dec
xor
jmp
sti
and
loope
jecxz
hlt
mov
fdivr
adc
xchg
xchg
xchg
pop
out
into
fists
pop
addb
mov
inc
sbb
imulb
sub
push
jns
sahf
cs
push
out
loopne
mov
enter
aas
sub
pop
rcrb
push
dec
out
dec
cli
leave
jns
inc
inc
pop
bound
push
and
pop
and
inc
mov
jp
push
mov
inc
out
jno
jle
repnz
pop
fcoms
neg
setb
mov
jg
mov
cmp
or
pop
cmp
push
daa
cmp
jne
lea
cmp
daa
xchg
adc
in
mov
mov
xor
lock
cmp
nop
repnz
pop
xor
test
insl
dec
imul
cld
aad
aas
jmp
cmp
fisttpll
in
fdivl
or
ss
imul
sbb
ja
int3
pop
das
cmpsb
push
add
push
in
ljmp
jp
daa
xchg
fcmovnb
aaa
popf
je
xor
pop
insl
push
jle,pn
out
dec
push
jnp
add
jae
jge
add
les
hlt
mov
adc
insb
xor
push
mov
out
outsl
and
cmp
cmp
mov
rcrb
aas
dec
xchg
mov
adc
dec
fwait
cmc
cwtl
loopne
lahf
push
add
and
adc
out
push
scas
gs
dec
test
rclb
jmp
add
clc
sahf
xchg
adc
cmp
or
mov
lret
pop
sbb
in
mov
xchg
in
or
jge
mov
loope
pushf
les
repz
xlat
add
and
loop
sub
test
pop
sbb
sbb
cmp
lods
push
popl
xchg
sbb
icebp
push
push
jge
clc
hlt
icebp
mov
mov
pextrw
enter
push
mov
in
aaa
push
out
cwtl
push
ja
enter
mov
inc
in
lock
xchg
pop
cmp
push
inc
push
idivb
cs
outsb
sub
inc
shrl
xchg
push
xchg
mov
in
into
cltd
sub
cmp
lods
test
cli
jle
cltd
movsl
sbb
jb
pop
dec
sti
lea
or
fdivs
jl
idivl
pop
lret
in
jecxz
loopne
cmp
adc
repnz
cmp
cmp
lahf
or
ds
cli
xchg
cmc
sub
daa
popf
sti
add
call
cmp
sbb
fs
xchg
mov
fildl
scas
push
arpl
lea
cmpsl
inc
sbb
ljmp
stos
lods
stos
mov
xlat
iret
mov
push
clc
pop
je
adcl
adc
pop
ficomps
pop
and
jae
cmc
icebp
inc
inc
enter
pushf
xchg
out
aad
lock
lods
sub
add
mov
mov
into
or
aam
je
xchg
je
imul
je
ret
ret
xor
data16
cwtl
popf
fldl
outsl
sbb
xor
flds
mov
stc
mov
jb
cmp
outsl
mov
notl
imul
dec
add
and
xchg
ss
jnp
push
dec
mov
bound
in
xor
mov
cltd
sub
mov
push
fidivrs
jmp
out
nop
xor
pop
stos
pop
add
mov
add
xor
test
cmc
cmp
dec
gs
pop
mov
sub
loopne
js
popf
cltd
sbb
cs
xor
push
fmull
int3
iret
cmp
lret
jno
xchg
mov
push
sbb
jle
ljmp
ret
dec
sbb
clc
mov
xchg
jl
dec
setge
cltd
jmp
nop
fildl
inc
pop
popl
jns
cmp
push
bound
jae
xor
cmp
aam
adc
push
bnd
sub
aam
mov
dec
shrb
icebp
jp
pushf
fs
shll
pop
inc
push
ret
sbb
in
repnz
adc
ds
mov
adc
or
adc
cli
xchg
cmpsl
jno
xchg
imul
dec
inc
mov
and
or
fidivs
inc
outsl
addr16
jp
je
jno
insl
jns
add
popa
push
js
addr16
add
outsb
add
jo
popa
add
jns
add
add
add
popa
add
jns
jp
popa
add
add
popa
add
jns
insb
add
imul
add
jne
jno
popa
add
jne
add
push
add
add
add
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
call
ss
add
add
add
pushl
inc
add
aaa
inc
add
add
add
js
inc
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
jmp
popa
inc
add
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
add
add
jg
inc
add
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
fstl
add
add
add
pushl
lcall
xor
inc
add
incl
cltd
inc
add
inc
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
cmp
inc
add
inc
push
sti
inc
lcall
push
nop
lcall
add
inc
cmp
data16
push
imul
add
movsb
push
add
adc
add
push
mov
add
add
fs
add
sub
add
test
add
adc
add
aam
add
sbb
add
xor
add
cld
mov
add
add
jle
add
add
add
insb
sbb
add
add
push
sbb
add
add
sub
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
push
sbb
add
add
sub
add
sbb
add
or
add
add
add
hlt
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
sbb
add
add
aam
add
call
sbb
add
add
and
add
xor
add
inc
sbb
add
add
pop
sbb
add
add
mov
add
sahf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
add
test
add
xchg
sbb
add
sbb
add
add
add
add
or
add
hlt
pop
add
loopne
add
add
add
jo
add
add
add
nop
pop
add
mov
pop
add
add
add
aaa
add
orb
add
adc
add
or
add
inc
pop
add
xor
add
push
pop
add
add
add
add
add
repnz
add
ficoms
add
into
push
add
mov
add
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
outsl
push
popa
jae
dec
gs
inc
jb
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
inc
outsl
push
outsb
imul
imul
inc
outsl
dec
outsb
imul
add
outsl
insb
xor
cs
insb
add
add
inc
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
inc
fs
jae
push
outsl
push
je
imul
push
push
inc
inc
outsl
outsb
outsb
arpl
adc
push
push
inc
inc
insb
outsl
jae
inc
jbe
outsb
je
push
push
xor
xor
fs
insb
add
sub
push
outsb
insb
outsl
popa
fs
jae
jb
jb
imul
inc
push
inc
dec
push
cs
insb
add
add
outsl
jae
push
push
popa
je
add
or
push
push
popa
arpl
jb
jne
fs
imul
inc
gs
push
gs
inc
js
outsb
je
add
push
push
fs
insb
add
add
je
jo
insb
outsl
jae
dec
outsb
inc
imul
je
jo
imul
dec
imul
gs
jo
gs
imul
push
add
jne
inc
imul
je
imul
push
push
push
inc
push
dec
cs
insb
add
dec
add
fs
imul
add
scas
add
imul
jae
imul
jne
je
inc
jns
gs
outsl
push
imul
jbe
inc
gs
outsl
fs
gs
imul
add
xchg
add
imul
insb
gs
add
push
jb
arpl
fs
jae
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
rolb
gs
jns
je
insl
push
imul
insb
gs
imul
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
gs
imul
or
dec
gs
jo
jb
add
imul
popa
jae
inc
jb
outsl
jb
add
add
outsl
jae
dec
popa
outsb
fs
add
fs
imul
gs
imul
gs
add
gs
imul
je
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
or
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
popa
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
jbe
push
imul
jb
add
add
popa
jo
gs
insb
insb
outsl
arpl
push
add
popa
jo
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
cmc
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
push
imul
insb
insb
outsl
arpl
add
dec
jae
popa
fs
jb
je
push
je
add
add
je
je
dec
popa
outsb
fs
add
in
inc
insb
jne
push
inc
jne
data16
add
dec
add
gs
je
inc
imul
jb
popa
je
inc
imul
outsl
popa
fs
imul
add
lret
je
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jne
jb
add
insb
add
je
outsl
arpl
gs
outsb
outsw
inc
add
xchg
push
imul
outsl
dec
jne
je
inc
jns
add
push
imul
jb
je
arpl
mov
push
jns
je
insl
dec
outsb
outsw
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
outsb
fs
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
push
dec
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
insb
add
add
popf
lahf
inc
add
ss
add
inc
add
inc
add
dec
inc
add
jo
popa
add
add
add
add
insb
add
jb
add
add
add
mov
add
add
jno
jp
jecxz
push
push
test
cmc
gs
push
and
or
xchg
dec
fisttpll
jo
mov
shlb
push
pop
mov
and
iret
and
mov
xchg
cmpsb
jp
jae
fnsave
push
sti
imul
loopne
pop
mov
mov
sub
xchg
subl
pop
ret
sbb
insl
test
nop
mov
gs
mov
out
test
cld
lcall
lret
inc
jg
fcomps
incl
cmp
rcrb
ds
stos
inc
push
dec
mov
fisttpll
inc
xchg
push
orb
ss
xchg
sti
mov
insb
add
push
in
fs
pusha
jo
push
inc
loope
aad
push
dec
mov
ja
adc
sahf
mov
ds
bound
adc
mov
stos
ds
repnz
arpl
or
cwtl
mov
clc
dec
repz
mov
aam
ljmp
in
dec
cmp
popw
ljmp
or
jecxz
data16
mov
insb
in
js
pushl
imul
add
jno
mov
mov
ret
jae
or
cmp
aam
stos
popa
call
addr16
aas
add
in
fsubrl
lds
fnstsw
popl
sbb
mov
dec
cmpsb
jb
repz
sbb
xor
in
leave
cwtl
jns
pop
mov
and
les
push
sbb
cltd
push
lds
fisttpl
push
mov
fldz
sbbl
cld
xor
or
jge
mov
fst
imul
stos
push
shlb
mov
fcmovnb
pop
out
test
jle
and
mov
fstpt
dec
inc
dec
lahf
push
fs
std
xor
add
insb
push
push
jo
dec
xchg
xchg
add
std
sar
mov
ret
adc
stos
divb
or
adc
xchg
scas
and
inc
leave
jge
xchg
push
inc
lods
mov
add
sbb
cmc
or
lods
ljmp
cmc
jae
inc
fwait
cmp
inc
adc
and
mov
lea
cwtl
adc
sbb
mov
jno
dec
inc
or
inc
mov
scas
sbb
jno
sbb
mov
std
fwait
jp
mov
ljmp
into
insb
or
sahf
jg
adc
shrb
lea
shll
and
scas
or
scas
lea
mov
popa
pop
cli
scas
sbb
rorb
adc
mov
jle
gs
pop
int
std
jno
sub
cwtl
xchg
or
sub
pushf
je
pop
cld
cmp
xor
negl
lods
pushf
test
inc
xor
aad
es
push
and
dec
scas
mov
test
ljmp
lahf
rorb
das
int3
scas
hlt
mov
pop
jmp
stc
or
dec
scas
add
push
push
and
mov
flds
pop
mov
inc
dec
or
cltd
inc
or
sbb
popa
xchg
scas
orl
push
subb
xor
jb
es
in
inc
xor
pushf
push
cld
dec
testb
push
or
dec
inc
pop
ret
pop
imul
lea
fadd
lods
or
push
jmp
adc
cld
repnz
mov
mov
test
ror
add
mov
testb
iret
mov
xor
jmp
lods
mov
scas
outsb
or
iret
pusha
jb
scas
data16
jne
cmp
pop
xchg
push
cmp
xor
and
cmp
cmp
and
clc
loope
and
or
iret
dec
imul
sub
xlat
rcll
cmp
jl
data16
lods
mov
pushf
iret
in
shr
or
lret
and
cmp
mov
cld
mull
movsb
sbb
test
push
cwtl
in
or
lret
ljmp
inc
int3
mov
xchg
xor
dec
fcoml
stos
movsl
roll
push
in
shlb
fldenv
mov
sbb
lcall
je
psubsb
mov
xchg
cmp
insb
push
sarl
jbe
pop
mov
movb
mov
cmp
jge
mov
pop
mov
stos
mov
dec
inc
shr
cmp
hlt
jl
imul
push
adc
mov
mov
gs
cwtl
movsb
rcrl
repz
lret
mov
and
cwtl
mov
sbb
jne
ror
jae
or
jae
sbb
mov
push
stc
adc
or
and
push
pop
cmp
lods
or
lock
mov
insl
jbe
jo
xchg
movsl
addb
das
dec
push
xchg
jne
fucom
mov
add
pop
daa
cmp
nop
mov
es
push
cs
andb
push
xor
mov
inc
and
jp
push
add
mov
xchg
xchg
je
mov
push
enter
mov
cmpsb
roll
push
je
sbb
fadds
mov
cmp
andb
adc
sahf
movsb
fs
and
stc
ds
and
orb
or
xchg
pop
cmc
test
pop
enter
cltd
add
fsubr
stc
mov
push
into
movsb
dec
cmc
ret
mov
loope
cmp
or
push
mov
xchg
xor
aaa
lea
xchg
cmpb
fstl
jns
xchg
push
xchg
xchg
pop
inc
push
mov
cmp
je
mov
jne
dec
lock
push
xor
outsl
push
mov
inc
cmpsl
call
in
cmp
sti
pushf
es
dec
mov
jg
inc
add
pop
mov
xchg
cmp
ficoml
lahf
shrl
xchg
sub
loope
icebp
js
push
pop
clc
jl
jg
xchg
enter
sbb
fidivl
xor
pop
ret
das
mov
pushf
push
push
fcmovu
dec
leave
loop
iret
push
sbb
push
sti
mov
jne
mov
xchg
sahf
icebp
imul
inc
dec
mov
les
jb
mov
icebp
jnp
loope
sub
rolb
inc
pop
pop
je
out
and
stc
mov
sbb
cwtl
sahf
inc
cmpsb
popa
fwait
adc
aam
mov
pcmpgtw
xchg
adc
mov
sbb
jecxz
jne
xor
cmp
les
test
int3
lock
xchg
pop
test
mov
mov
inc
mov
push
push
cmpsl
pop
idiv
add
or
lods
sbb
xor
mov
nop
fst
outsl
jae
sbb
idivl
sub
mov
ss
add
fmull
xor
mov
shr
push
in
mov
ljmp
inc
test
repnz
sbb
mov
pop
clc
xorl
jecxz
imul
cmp
adc
pop
xchg
jns
xchg
mov
popa
fs
loop
movsl
adc
pop
adc
push
out
jecxz
push
dec
mov
enter
repz
pop
sahf
adc
pop
inc
push
mov
icebp
faddl
mov
push
sbbl
xor
or
push
lock
lods
cmp
xor
iret
stos
nop
jno
push
shlb
xor
shlb
pop
cltd
nop
pusha
mov
xchg
adc
ficoms
sub
ret
stos
mov
jbe
ret
sahf
aad
sbb
sbb
insb
mov
adc
mov
int3
cmpl
fistpl
xor
orl
mov
jo
subl
xor
cltd
mov
adc
orl
into
and
ss
stos
test
pop
mov
xor
mov
imul
lea
lock
stos
ljmp
stc
mov
fbld
adc
xchg
add
pop
cmp
pop
cmp
cld
mov
int3
pusha
sub
ror
icebp
sbb
sub
popa
imul
jo
popf
or
adc
test
rolb
loop
pop
int
mov
rclb
js
aaa
and
das
lea
or
movsl
lret
icebp
jp
inc
arpl
popa
aas
sarl
xor
xor
inc
adc
in
mov
push
clc
std
out
sub
mov
mov
adc
jecxz
sarl
stc
loope
or
jnp
xor
adcb
aas
addr16
clc
adc
pop
ja
push
pop
test
pop
jae
jg
and
imul
jp
add
xor
mov
mov
xor
pushf
fcompl
dec
cmpb
mov
imulb
xchg
rclb
push
push
sbb
xchg
or
mov
dec
sub
mov
cmpsl
scas
lock
push
xlat
push
inc
es
pop
dec
dec
mov
cmp
out
adc
in
adc
mov
in
mov
push
aaa
sbb
pop
popf
leave
pop
sbb
stos
movsb
aaa
call
mov
sbb
sbb
cmp
xchg
xor
int
mov
movsb
cmc
and
mov
insb
mov
shlb
push
je
stc
pop
mov
sub
jg
call
rcrl
jnp
pop
sub
jmp
lahf
scas
cmc
es
cmp
fmul
xchg
in
pop
ljmp
loop
sbb
adc
pop
repz
mov
xor
adc
inc
je
dec
sbbl
test
or
sbb
insb
xor
jbe
sub
adc
sahf
add
xor
push
hlt
push
sub
jbe
cmp
mov
imul
outsb
xchg
test
adc
fcmovnb
ss
dec
mov
and
mov
pop
popa
mul
je
addb
pshufw
je
imul
addr16
cmpsl
aas
add
pop
das
lods
mov
sbb
mov
xchg
mov
leave
xabort
push
cmc
cmp
pushl
jae
cmp
xchg
add
lds
aaa
cltd
add
popa
dec
dec
cmp
mov
mov
out
lods
cld
cmp
fadds
gs
xchg
fcompl
inc
mov
pop
xchg
lcall
bound
mov
lret
icebp
cld
fidivrl
add
sub
jle
movaps
in
xchg
stos
push
das
pusha
xor
xorl
mov
adc
insl
and
ss
and
jns
push
insb
cmp
mov
xor
int3
pop
mov
cmp
in
insl
incl
in
push
xor
or
mov
sbb
dec
mov
adc
pop
mov
mov
and
pop
dec
adc
pop
cmp
xor
cmp
leave
iret
out
pop
fdivs
mov
subl
pushf
clc
in
jecxz
in
and
jle
jns
lds
lcall
jno
pop
jg
jecxz
mov
lods
xor
mov
nop
pop
aad
and
add
cmp
lods
in
xchg
cli
dec
adc
xor
cmp
fstpl
mov
cmp
clc
aam
in
pop
mov
mov
test
idiv
pop
pop
inc
std
pop
add
dec
push
cs
fnsave
mov
cmpsb
push
aaa
stos
inc
rcll
mov
pushl
xchg
test
cmp
into
mov
imul
enter
imul
and
mov
sub
jne
cmc
pop
dec
mov
scas
dec
gs
and
jne
pusha
xor
or
jmp
mov
mov
mov
jo
push
lods
mov
jbe
adc
daa
int3
stc
xor
jp
dec
mov
imul
out
pop
add
pop
or
loopne
lret
or
inc
jns
lret
push
mov
dec
sahf
jae
movlps
or
loop
ljmp
sub
mov
mov
sahf
lock
movsb
out
add
fcoml
xor
es
dec
xchg
cmp
mov
jle,pn
mov
sahf
cli
add
sub
enter
imul
sub
stc
sub
xor
aas
fmull
call
cmp
ss
add
fimull
rcr
and
ficomps
out
stos
lds
sub
test
pop
jmp
xchg
mov
xor
loopne
push
lods
xchg
or
adc
or
movsl
lcall
xor
cmp
sbb
xchg
lahf
mov
mov
pop
loopne
mov
mov
negb
adc
xor
cmp
fldcw
or
popl
mov
or
jbe
mov
adc
cmp
push
fldcw
dec
scas
push
out
pop
push
mov
and
dec
in
dec
cmp
pop
jle
sahf
cli
mov
in
mov
jp,pn
mov
adc
loop
add
mov
imul
pusha
int
lret
and
cmpsb
bound
mov
jp
add
test
sti
shll
jo
test
js
and
sbb
dec
sbb
xchg
sbbl
inc
out
fadd
fnstcw
fs
lret
inc
mov
aam
sub
lods
xor
dec
mov
dec
jp
mov
outsl
lock
adc
adc
ja
in
sbb
xor
or
sub
pop
pop
cmc
push
dec
sub
mov
mov
adc
imul
pop
push
out
jo
popf
sarb
popa
outsl
lods
inc
sub
fbstp
mov
cwtl
pop
dec
add
cmp
xchg
pushf
lds
movsb
rcrl
xchg
fld
orb
pop
mov
inc
mov
outsl
mov
cld
xor
xchg
outsb
adc
lret
jb
jmp
daa
cmp
and
inc
push
stc
outsb
pop
inc
cmp
and
cmp
cmp
and
nop
shrb
ja
add
fwait
mov
sub
sub
fcomps
xchg
mulb
xor
sbb
fs
xchg
pusha
lret
ljmp
add
xchg
and
imul
or
mov
lods
mov
cs
into
inc
and
push
mov
pop
sbb
mov
shrb
dec
lcall
les
cmp
jecxz
adc
orb
jne
movsb
test
iret
shl
xchg
js
loopne
aaa
aad
push
cli
stc
xchg
pop
insl
pop
adc
pop
sub
cmc
jbe
scas
les
sbbl
ficomps
iret
add
mov
loop
fstl
repz
roll
or
mov
mov
jmp
lea
add
sub
xchg
xchg
and
pop
sbb
mov
outsl
rcr
out
pop
push
jae
pop
in
je
cmp
add
xor
xchg
loop
data16
cmp
sub
mov
mov
sbb
cmp
mov
inc
lret
test
xlat
adc
hlt
xchg
sbb
mov
xor
push
sbb
out
add
mov
scas
inc
pop
lds
mov
movq
inc
lock
aad
jo
fimull
mov
mov
push
mov
outsl
inc
fldenv
add
sub
ret
call
lods
int
jge
adcl
inc
arpl
loop
dec
lret
dec
adc
sbb
aam
push
push
outsb
rorl
in
roll
je
sub
jmp
xchg
sbb
sub
inc
add
ss
xor
daa
aam
popa
enter
cmpb
and
pop
inc
dec
fs
leave
movsb
push
addr16
sbb
xchg
pop
mov
roll
pop
xchg
int3
js
fisttpll
stc
mov
inc
pushl
jno
inc
xor
inc
push
push
pop
inc
cwtl
mov
cmp
les
push
jl
pushf
lcall
lock
call
imul
daa
popf
sbb
loope
daa
fidivs
jae
push
arpl
cmpsb
rorl
loopne
fidivs
mov
test
mov
sbb
cmc
xchg
mov
cs
jge
sbb
es
inc
nop
out
and
scas
cli
dec
xchg
enter
jne
movsb
inc
ret
insb
jae
lahf
ljmp
pusha
filds
les
fs
mov
mov
jno
jmp
ret
loopne
mov
fistpll
jns
push
mov
clc
pop
lret
dec
mov
fcoml
pop
jecxz
xor
bswap
sbb
stos
cmp
pop
jg
push
stos
int
aaa
popf
sahf
rorl
sbb
lea
lock
add
jns
test
js
ret
rolb
inc
out
dec
cmpsb
dec
adc
into
hlt
int3
arpl
cmp
cmc
and
or
std
addb
movsb
sti
dec
outsl
out
rcrl
mov
icebp
lret
jmp
movsb
mov
hlt
sbb
pop
scas
inc
mov
jns
cmp
lods
cmc
dec
outsl
adc
movsl
fists
call
mov
pushf
adc
in
jnp
scas
pop
in
pushf
idiv
mov
rol
mov
jge
pushf
add
cmp
int
mov
or
roll
imul
mov
lods
mov
call
or
popa
dec
in
inc
mov
mov
sub
test
cmc
lcall
mov
rclb
jmp
movsl
scas
test
cli
mov
icebp
aas
adc
add
daa
xchg
lods
arpl
loope
jle
scas
mov
lret
insb
and
or
fisubs
mov
mov
aad
fnstenv
dec
sti
xlat
cld
xchg
cmp
data16
push
pop
outsl
pop
imull
dec
pop
cmp
dec
mov
sbb
mov
dec
or
lea
xchg
xchg
push
cmp
std
or
dec
push
loopne
roll
inc
sbb
stc
pop
mov
push
in
lahf
data16
add
mov
fsubr
call
adc
add
aas
jae
fs
imul
jge
pop
jmp
mov
enter
repz
testb
cmpsl
loop
fstps
into
inc
inc
imul
cli
jae
pop
pop
movsb
lcall
shrl
frstor
push
mov
out
scas
xorl
adc
mov
ror
mov
fsubrs
mov
rorb
mov
and
or
mov
and
adc
add
sub
into
mov
push
int3
inc
mov
mov
add
jne
int
call
pop
mov
push
mov
and
adc
jb
sub
pop
sti
outsl
out
mov
icebp
das
push
xchg
lahf
scas
mov
or
imul
xchg
out
jae
out
xor
mov
pop
pop
pop
xchg
hlt
insl
ljmp
mov
out
add
or
sub
cmpsl
aaa
int
dec
mov
mov
lods
sub
ret
inc
and
jmp
xor
push
pop
cld
mov
jnp
stos
and
push
mov
js
pop
insl
cmp
in
lret
out
and
jmp
sahf
jg
mov
cwtl
mov
xchg
cmp
xchg
aam
in
dec
push
and
add
in
push
fadd
out
notb
jns
loope
hlt
inc
das
mov
fisubrs
test
mov
mov
jae
add
pusha
adc
sbb
aas
cld
push
jb
leave
push
mov
imul
sbb
push
cmp
rclb
fwait
sub
jo
fcmovnb
xor
idivl
adc
push
mov
pop
push
mov
leave
lds
dec
xor
dec
xchg
bound
cmp
and
iret
repz
test
inc
outsl
jb
jae
mov
xlat
in
mov
push
pop
das
std
mov
lea
cs
jp
cmp
mov
lcall
jmp
mov
outsl
pop
fs
mov
dec
jge
aam
cmp
test
out
xchg
call
mov
mov
insl
jns
jle
sub
push
jp
inc
and
push
ret
int
mov
outsb
das
cmp
fucomip
push
mov
lock
mov
mov
lret
or
or
lahf
lahf
sarb
mov
add
lock
in
dec
je
aas
cmp
xor
cmpsl
pushf
push
jno
outsl
jo
jg
popf
or
aam
fsubl
imul
mov
mov
push
sbb
pushf
data16
andl
pop
xchg
iret
jmp
shl
mov
pop
cmp
push
mov
iret
dec
std
inc
maxps
in
add
loope
ja
pop
rcl
jns
leave
pop
lea
rclb
push
lfs
lcall
movsl
pop
shll
xor
outsl
loope
test
jnp
inc
xor
test
cmc
fwait
stos
xchg
bound
mov
popl
out
lds
pop
mov
enter
fldt
lcall
dec
or
inc
or
dec
icebp
mov
inc
mov
jns
sbb
xor
outsb
sbb
or
xor
xor
mov
movsl
inc
xor
mov
inc
fdivl
add
xchg
incb
sbb
dec
push
xchg
aam
stos
addr16
call
or
mov
dec
or
loopne
das
loope
scas
pusha
sub
mov
adc
pusha
repz
and
fisttps
jecxz
and
sub
fbld
add
and
add
adc
mov
jbe
jb
and
in
js
insb
xchg
add
dec
or
scas
cmp
push
mov
aam
xchg
cwtl
pop
jnp
iret
jecxz
cmpsl
adc
mov
inc
enter
dec
xchg
sbb
jecxz
and
hlt
sub
jnp
mov
or
outsl
leave
mov
je
pop
jl
push
insb
andl
inc
pop
xchg
sbb
nop
adcb
sti
or
jae
mov
adc
roll
outsb
lock
sub
or
inc
jge
mov
sub
inc
arpl
or
lock
out
mov
pop
inc
enter
lods
mov
cmp
xor
pop
mov
lods
out
add
ror
jp
jmp
pushl
xor
mov
dec
out
aaa
push
jle
lods
inc
push
push
xchg
inc
pop
cmpsl
and
fisubrl
aam
aam
addr16
mov
push
fmuls
fsubp
arpl
cmc
add
addr16
shl
dec
mov
xchg
pop
jmp
mov
mov
mov
ficoml
xchg
shlb
and
push
sbb
mov
movsb
imul
inc
cmp
adc
ljmp
cwtl
in
and
xor
or
das
test
inc
adc
incb
loopne
int3
daa
adc
add
cmp
or
adcb
out
testb
lds
mov
or
mov
push
adc
dec
sti
sub
loope
jnp
mov
mov
dec
ss
aaa
data16
add
push
adc
in
mov
mov
lahf
lret
fmul
push
xor
sub
inc
pop
jl
and
out
sti
and
adc
add
push
push
mov
inc
leave
dec
daa
mov
xchg
sbb
inc
mov
imul
mov
das
push
pushf
or
inc
xor
into
push
out
dec
inc
test
test
xor
adc
jo
js
jge
add
int3
es
int
xchg
mov
clc
aam
fbstp
dec
pop
int
aas
add
cmp
jle
addb
in
jo
lods
or
movsb
dec
pop
aam
push
out
mov
outsl
stos
fmuls
pop
enter
push
enter
aaa
lods
jo
push
out
int3
mov
test
cmp
sbb
push
xchg
mov
jnp
or
mov
jae
xor
inc
xchg
gs
xchg
addr16
mov
lahf
or
orb
leave
add
loopne
shll
stos
and
sbb
orl
sahf
sub
dec
ret
add
cmp
flds
mov
out
xchg
and
lods
mov
cmc
js
es
movsl
pushl
pop
pop
incl
cmpl
xchg
sub
bound
jge
jecxz
inc
xchg
push
pop
mov
addr16
sti
out
mov
sub
int3
jge
test
out
aad
movsl
mov
std
fs
daa
or
roll
cmp
fildll
mov
test
insl
dec
and
clc
scas
stos
loop
xchg
xchg
inc
push
je
jp
scas
out
iret
lahf
shll
out
cmp
jb
sar
inc
sti
xlat
xchg
mov
dec
gs
ja
jbe
cltd
lods
xchg
fisubrs
test
mov
mov
lds
sarl
mov
sub
inc
mov
push
lret
xor
xor
sahf
push
loop
pop
ja
testl
mov
repnz
xor
adc
lods
pop
js,pn
sub
xchg
lea
popa
xchg
loopne
push
bsr
repz
jmp
inc
test
jns
pop
add
loopne
js
imul
pop
lcall
add
loope
mov
test
add
inc
push
and
xchg
jp
loop
and
cmpsl
lret
out
and
loop
int3
test
xlat
addr16
mov
adc
lds
fmull
push
dec
pop
cmp
sub
xor
dec
pop
add
sub
pop
xchg
testl
mov
jo
mov
daa
or
div
sbb
sti
sub
or
cltd
xchg
std
lds
inc
dec
lcall
cmp
je
mov
call
pop
out
and
jmp
and
and
pop
inc
mov
aam
xchg
lret
push
push
jo
imul
sub
imul
mov
nop
dec
mov
jno
jns
or
punpckhdq
inc
sbb
ljmp
nop
loope
add
or
inc
lret
dec
adc
ds
push
jp
mov
mov
outsb
test
out
sbb
inc
cli
cmc
xchg
cmp
je
sbb
cs
int3
mov
scas
add
ds
push
mov
movsb
sbb
mov
dec
mov
aad
jnp
jecxz
sahf
fsubl
out
pop
movsl
sub
push
frstor
mov
pop
daa
pusha
xchg
mov
int
add
nop
pop
addr16
mov
int3
and
shll
xor
shrb
sahf
mov
addl
gs
push
cmp
pop
call
cwtl
cmp
push
fbld
jnp
and
jns
fmuls
pop
adc
cmp
arpl
popa
inc
push
push
stos
pop
adc
gs
addl
out
or
and
in
fldt
data16
mov
xor
out
dec
outsl
fndisi(8087
sub
fbld
dec
inc
lods
dec
push
dec
jnp
notl
lods
pop
pop
cmp
inc
xchg
loop
mov
inc
jp
dec
pop
hlt
ror
inc
push
xchg
daa
outsb
fmul
xor
jb
mov
push
sub
or
bound
sbb
ja
xor
sbb
jmp
adc
xor
icebp
or
ds
push
jns
std
inc
push
pop
ficompl
jle
sub
loop
xchg
cmpsl
sbb
movsl
pop
or
hlt
xchg
mov
cmp
shl
out
add
rcll
dec
dec
mov
lahf
mov
xlat
sbb
xor
dec
test
lcall
aam
mov
les
popa
imul
cmp
outsb
inc
cld
pop
sahf
sbb
cltd
lahf
push
push
icebp
test
cmp
push
jbe
pop
push
add
lcall
push
push
mov
sbb
pop
lret
lock
rcr
mov
add
jle
sysret
pop
mov
adc
test
push
and
xlat
cmp
cmp
push
adc
or
adc
adc
scas
mov
and
push
sub
hlt
test
push
leave
in
scas
lea
xchg
pop
cmp
scas
lea
xlat
mov
lods
je
call
cwtl
in
jne
sub
in
xchg
pop
mov
rcrb
ret
pop
popf
xchg
hlt
out
idivb
stos
xor
stc
test
xlat
nop
and
mov
sbb
ret
or
into
paddd
inc
xor
test
xor
sarl
fsubs
pop
aam
cmpsb
insl
sarl
loopne
ljmp
xor
xor
mov
sbb
jne
nop
call
fbstp
std
pusha
sbb
sahf
dec
lahf
jecxz
or
test
lods
pop
pop
mov
adc
rcl
leave
cmp
xchg
test
jp
ret
mov
jo
pop
or
adc
out
inc
rorl
pusha
aaa
jno
mul
out
mov
sbb
push
pop
or
popa
cmpl
int
jmp
pop
inc
pop
push
rorb
xchg
jecxz
mov
cwtl
pop
cmp
imul
add
js
fisubs
cmc
cmp
std
xor
mov
pop
inc
pop
in
jns
loopne
stos
hlt
in
pusha
and
icebp
cmpsl
bound
dec
rorb
xchg
setp
cmp
cmpsl
out
gs
dec
sbb
push
pop
popf
repz
test
addr16
mov
imul
popa
adc
mov
mov
data16
xchg
lret
adc
orb
mov
add
scas
push
inc
or
mov
shr
repz
out
push
mov
xchg
ss
dec
fadd
mulb
pushf
lds
push
arpl
pushf
shlb
jb
and
and
cmpsb
push
dec
std
sbb
iret
imull
outsl
scas
xlat
in
test
xchg
pusha
xor
mov
mov
mov
mov
adc
test
out
or
sbb
xor
js
es
inc
sbb
loopne
mov
insl
lcall
cmp
mov
adc
xor
pop
mov
sti
push
mov
ret
data16
clc
ds
mov
lea
xchg
sub
jg
in
and
pop
jb
jp
mov
ret
leave
pop
out
pushf
sbb
dec
subl
adc
inc
dec
enter
int
hlt
sti
sub
pop
mov
sbb
movsb
add
lret
pop
dec
pop
pop
stos
inc
pop
mov
shrb
push
mov
dec
in
cmpsl
and
xchg
fimull
and
cs
lahf
mov
fbstp
ja
inc
and
and
repz
and
lea
push
roll
xor
sbb
fdivrl
fildl
cmp
shl
jns
push
adc
mov
sbb
mov
add
and
ljmp
pop
shl
inc
ds
enter
pop
mulb
das
ja
stos
adc
cmp
mov
fwait
repnz
sbb
out
add
test
fs
scas
mov
cmp
sbb
out
xchg
into
dec
mov
inc
or
pop
mov
dec
fidivrs
cltd
cmp
loope
fwait
xlat
stc
popf
pop
dec
add
dec
or
ljmp
fstp
rclb
sbb
test
lahf
inc
xchg
cld
ret
pop
pop
out
inc
ret
pop
sub
push
js
jbe
inc
es
pop
sub
testl
hlt
mov
outsb
mov
js
inc
fwait
add
mov
cmp
lock
adc
insb
pushf
push
pop
data16
cmp
push
mov
mov
adc
cmp
dec
jmp
clc
mov
cmc
inc
mov
aas
idivl
sub
xor
pop
loopne
push
pusha
fnstenv
push
cmp
jne
inc
xor
pop
adc
or
pop
push
fbstp
pop
xor
fsubs
dec
xchg
cmpsb
mov
push
mov
xchg
sub
sbb
xchg
outsl
cmp
hlt
inc
jg
adc
xor
mov
and
push
dec
mov
xor
mov
xchg
mov
mov
and
aaa
in
imul
cmp
cmp
fstpt
call
mov
jmp
push
sub
bound
shlb
push
movsl
push
mov
loope
pop
arpl
jge
in
add
popf
arpl
inc
ljmp
cmp
test
lahf
dec
jbe
pop
mov
fisttpll
iret
int3
cwtl
scas
daa
rorl
or
lods
jl
inc
sbb
dec
sub
dec
outsb
sub
sahf
sbb
sub
ljmp
mov
lret
fcmove
jne
pop
mov
add
pop
mov
adc
test
inc
lea
jnp
mov
int
bound
add
clc
xor
cmp
mov
aas
repz
add
push
adc
das
dec
clc
and
dec
add
test
jnp
dec
sti
arpl
out
lcall
cmp
shlb
aas
ret
add
mov
out
mov
push
lcall
mov
or
aaa
inc
fmul
push
lahf
sbb
inc
popa
pusha
loopne
test
popa
int3
mov
dec
jge
and
sahf
in
or
dec
dec
adc
addr16
in
clc
mov
js
cmp
push
sbb
and
xor
das
lods
jp
xchg
fldenv
jo
repz
add
out
push
inc
mov
push
imul
sub
fisubl
adc
scas
mov
adc
mov
cmpl
mov
dec
adc
cltd
inc
fucom
iret
cmp
lret
cli
sahf
cld
outsl
fisttpl
shlb
dec
adc
stos
push
fdivrl
ss
fst
adc
add
cld
mov
mov
ret
mov
pop
in
sub
xchg
mov
pushf
hlt
dec
dec
pop
jo
cld
in
repnz
jae
outsl
jmp
int3
pop
arpl
inc
mov
cmp
push
fldln2
dec
hlt
jmp
xchg
fbstp
inc
push
stc
stos
lods
mov
pop
or
add
adc
pop
dec
daa
mov
lret
testb
int
adc
addr16
jbe
push
xor
fcoml
mov
jno
xor
jp
fistl
loop
mov
adc
push
cli
js
add
imul
cltd
xlat
adc
push
mov
aas
jecxz
loop
mov
push
dec
mov
outsl
cld
xor
enter
jl
sub
cmp
inc
push
push
out
rolb
test
es
push
xchg
and
rcl
ret
push
popl
or
and
leave
or
stos
jbe
adc
sub
data16
pop
and
push
repnz
jecxz
or
sub
cmp
xchg
push
sub
jmp
mov
cld
iret
neg
shrb
mov
mov
orl
or
std
outsl
aas
popl
pop
adc
jge
rolb
xor
imul
mov
xor
mov
jae
fists
lcall
icebp
aaa
addr16
inc
je
mov
es
add
adc
call
sahf
xchg
shlb
and
rorl
and
out
scas
aas
es
loop
mov
pop
sti
int
loope
gs
jo
nop
xchg
scas
or
out
and
xchg
cwtl
fdivrs
aaa
pop
push
pushf
mov
lods
jl
xchg
jbe
or
mov
push
loop
mov
mov
addr16
xor
ret
pop
adc
stos
sub
inc
mov
dec
mov
loope
pop
dec
add
xchg
mov
xor
cmp
dec
fs
mov
mov
xchg
mov
insl
popl
xchg
sbb
mov
mov
in
shll
add
outsl
mov
idiv
je
xchg
dec
out
lcall
pushf
push
insb
insl
dec
cmp
mov
xor
cmp
xchg
and
pop
xchg
mov
add
scas
fwait
out
mov
add
shlb
push
mov
mov
popa
in
xor
and
mov
outsb
push
and
push
or
aaa
jmp
mov
shlb
lcall
jbe
push
mov
inc
xor
adcb
insb
rorl
or
das
pop
test
add
cmp
das
out
cli
xor
add
in
test
push
jg
test
enter
or
inc
daa
stos
lahf
lcall
jnp
dec
leave
loop
and
jmp
popa
ret
xor
add
adc
sub
ds
push
aaa
mov
cmp
lret
add
xchg
adc
xlat
cld
out
mov
push
cmp
jle
mov
lret
ja
pop
insb
and
popl
mov
inc
out
mov
add
push
mov
add
stos
jo
jnp
test
xchg
cmp
inc
inc
mov
push
or
rcr
out
inc
or
mov
mov
dec
movsb
inc
cmp
or
arpl
ss
dec
adc
ja
out
test
inc
jne
outsb
sub
jle
xor
sbb
mov
jbe
xor
lea
mov
nop
addl
and
or
push
sub
inc
inc
and
pop
add
sub
mov
sbb
jl
or
cmp
adc
out
and
js
adc
mov
xor
adc
mov
loopne
imul
adc
xchg
cmp
lret
fbstp
mov
call
popl
jmp
int
cmpsb
xor
jle
mov
ljmp
add
cmpb
aam
cmp
sahf
sbb
aad
out
or
pop
sbb
je
fisubs
inc
pop
or
jnp
xor
lds
inc
outsl
pusha
xor
mov
mov
or
sahf
scas
stos
adc
xchg
or
mov
inc
inc
push
lahf
jle
sbb
jnp
xchg
in
cmp
pop
mov
popa
insb
xchg
aas
dec
pop
dec
sbb
insl
iret
push
fld1
dec
xor
cld
stos
test
in
push
mov
call
ss
jbe
mov
movsl
sub
fbstp
xor
loope
mov
and
in
loope
xor
dec
or
xor
popf
sbb
mov
mov
push
scas
repz
in
xor
call
fdivl
cmp
icebp
mov
cld
aas
ror
pop
mov
ds
push
pop
loopne
cld
lea
dec
xchg
clc
int
jnp
outsl
mov
lea
cmc
inc
sbb
xchg
pop
sbb
jns
pop
xchg
push
sub
sub
test
add
insb
adc
or
out
xchg
sti
cmpsb
fcoml
pushl
sub
mov
pop
pusha
or
nop
xchg
cmp
jns
fnsave
ret
pop
shll
pusha
and
xchg
add
in
nop
sub
cmp
test
in
dec
sub
pop
fwait
aam
sub
adc
jge
in
dec
cli
mov
imul
add
ret
adc
insl
and
lahf
fcompl
daa
sub
shrb
mov
out
sub
aam
push
mov
inc
aaa
cwtl
scas
add
pop
sbb
cwtl
xor
lahf
lds
add
sub
cmp
inc
jle
mov
xchg
mov
nop
xchg
dec
dec
mov
cli
into
xchg
sbb
mov
subps
mov
add
sub
or
pop
push
stos
dec
adc
les
mov
jp
pop
ja
addr16
add
jmp
cmp
pop
pop
jb
mov
xchg
sub
scas
aad
and
sbb
push
mov
repnz
lods
lcall
mov
push
mov
pushf
dec
mov
in
rcrl
sbb
or
imulb
jmp
fdivs
pop
adc
nopl
int
outsl
and
pop
lahf
mov
dec
fldenv
test
idivl
imulb
jnp
inc
insl
jp
fldcw
roll
mov
stos
pop
das
xchg
sub
lahf
gs
lds
shlb
mov
in
dec
inc
daa
adc
and
sti
cmpsl
test
adc
ss
mov
sub
mov
out
aas
aam
dec
inc
xor
stc
ds
nop
ljmp
and
jp
lahf
mov
popf
out
jecxz
in
stos
sbb
cwtl
movb
loope
mov
loope
jecxz
inc
scas
stos
int3
into
cmp
jl
pop
xor
xchg
inc
adc
fdivl
ja
mov
sub
sarl
js
dec
in
pop
dec
aaa
inc
sbb
jge
jnp
jp
cs
movsl
dec
es
mov
and
sar
fdiv
sub
lahf
dec
sub
imul
loopne
icebp
and
xchg
cltd
pop
aas
or
and
test
js
xchg
jne
or
push
pop
pop
in
gs
sbb
push
std
lock
push
or
call
xchg
xor
fadds
cmp
lahf
jmp
in
adc
xor
sub
imul
xchg
jns
inc
jns
jne
fwait
mov
sub
inc
xor
cmp
cltd
test
jae
add
jns
push
sub
cmpsl
mov
sbb
sbb
jmp
and
jae
jbe
and
jns
mov
or
inc
sbb
mov
imul
call
inc
arpl
pop
insb
mov
stc
dec
pop
gs
shrl
xor
outsl
data16
cmp
fnstenv
jns
mov
sahf
icebp
jp
dec
call
cmp
push
jbe
clc
mov
xor
pop
ror
pop
nop
and
shrl
mov
cmp
sbb
xlat
stos
or
jl
insl
popa
test
stos
jns
lahf
cli
pop
fwait
movsb
daa
xor
rcrl
cmp
aaa
movsb
shr
mov
mov
call
sbb
jns
test
aad
jno
xlat
xchg
mov
sahf
sbb
mov
in
inc
sti
mov
insl
xlat
mov
add
jmp
xchg
mov
lea
loope
add
add
pop
or
out
jecxz
daa
je
add
xor
in
fldt
dec
sub
and
enter
cmpsl
mov
loopne
pushf
cmp
dec
rol
jge
andb
addr16
cmp
mov
fsubp
in
sub
and
pop
iret
out
scas
lahf
lods
sbb
lods
sbb
cmp
xchg
sub
xchg
clc
popf
shlb
mov
in
daa
push
mov
loope
call
ret
adc
ret
mov
loopne
adc
idiv
ja
mov
cmpsl
mov
mull
jecxz
mov
cld
push
or
and
xchg
pop
stos
jne
and
in
mov
mov
adc
shrb
dec
sbb
loopne
daa
push
pop
push
mov
push
int3
cmpb
xorl
fadd
jb
shrb
jge
test
push
or
into
mov
jo
add
dec
loopne
and
mov
in
mov
and
inc
xor
std
jns
mov
cmp
outsl
std
inc
xchg
xchg
stc
lcall
mov
sub
test
movsl
stos
rcrl
cmpsb
xor
fidivl
cmp
push
fwait
add
and
jo
shl
lods
push
mov
subl
std
ja
icebp
xchg
inc
iret
mov
adc
sbb
stos
push
mov
and
stos
inc
xchg
les
arpl
in
out
inc
xor
lods
inc
pusha
push
adc
push
adc
dec
lea
test
call
jns
mov
imul
xor
pop
xor
push
mov
mov
jns
pop
out
imul
mov
punpckhwd
hlt
dec
xchg
sar
push
and
lods
xchg
xchg
and
dec
mov
xchg
push
fldcw
inc
jmp
xor
or
leave
xchg
inc
pop
lret
mull
test
xchg
insb
fbld
or
imul
jne
cmp
imul
js
roll
repz
push
test
lret
xchg
movsb
test
sbb
xchg
fisubrl
push
xchg
and
inc
inc
fcompl
cmp
outsl
outsl
mov
push
std
xchg
cmp
xchg
fs
mul
ret
push
repz
sbbb
insb
daa
fs
jecxz
xlat
insb
or
repnz
adc
pop
or
cli
es
xchg
rorl
jne
xchg
scas
pop
fwait
test
mov
mov
arpl
add
dec
lret
sub
mov
mov
sub
in
add
cmpsb
lret
aam
sbb
and
icebp
cmpsl
sbb
into
pusha
jo
mov
jbe
sarl
mov
push
test
insb
push
rcrl
cmpsb
sahf
cmpsb
push
jmp
adc
out
push
mov
jge
inc
inc
popa
mov
arpl
adc
and
push
rol
cmc
sti
scas
dec
andps
push
dec
sbb
and
lret
sub
adc
in
pop
mov
mov
push
lods
inc
sti
pop
and
pop
pop
je
jle
pop
mov
xchg
xchg
mov
lcall
xor
sbbl
mov
or
xchg
or
adc
repnz
mov
mov
add
mov
mov
xor
insb
hlt
sub
aam
mov
lods
sahf
xor
and
dec
push
in
xlat
sub
mov
ret
ud1
inc
lcall
push
bswap
jp
xchg
push
and
andl
insb
arpl
lods
pusha
sbb
adc
test
test
push
mov
movswl
sub
mov
mov
rolb
or
xchg
shll
into
jle
xor
lea
adc
xlat
sub
ljmp
stos
insl
inc
push
aam
and
cmp
stc
out
xor
jno
dec
mov
sti
jmp
add
ja
jmp
negl
ljmp
addl
xchg
call
movsl
cs
in
add
pop
clc
adc
dec
mov
cmp
jge
mov
add
pop
or
popf
imull
popf
lcall
loopne
push
mov
data16
in
rcrl
in
lret
or
nop
adc
insb
push
jmp
ss
movsb
out
inc
cmpsl
jne
jbe
mov
loope
mov
mov
mov
mov
gs
fcoml
jge
adc
and
mov
out
adc
and
pop
inc
sub
push
aam
dec
lahf
mov
das
inc
and
or
sbb
gs
mov
adc
jnp
movsb
loope
inc
into
fiadds
aam
pop
xor
shll
ret
pop
pop
leave
repz
jp
mov
testb
repz
xchg
jp
movsb
insb
mov
addr16
rorl
mov
jnp
add
rcll
fs
mov
jl
bound
jae
mov
xlat
addr16
fwait
jo
lcall
sarl
vmwrite
sub
pushf
jns
fsts
sbb
adc
sub
aas
xor
cmp
mov
mov
mov
sahf
repnz
imul
add
push
xchg
or
icebp
inc
mov
or
xchg
incl
lret
enter
cmp
add
clc
adc
pop
clc
lock
pop
adc
or
in
es
scas
lret
and
cwtl
sub
sbb
mov
push
xor
fwait
mov
ret
data16
cmp
lret
add
adc
in
in
rcrb
sub
cmp
jne
mov
add
jae
mov
mov
movl
in
jl
mov
fdiv
cli
sub
sub
and
lock
les
mov
dec
sub
mov
sti
and
es
arpl
pop
aam
std
gs
je
inc
shrl
lahf
sub
in
into
loope
sarl
and
sbb
mov
mov
lret
xor
push
push
xor
add
mov
mov
dec
sbb
hlt
xchg
cmpsl
push
cmp
test
dec
es
add
jno
outsl
pusha
jle
pop
into
shll
int3
sub
mov
imul
in
out
and
jnp
cmp
or
data16
addr16
add
mov
push
cli
mov
dec
mov
mov
test
ja
test
repnz
add
cld
cmpl
stos
mov
lsl
lret
xor
xchg
adc
add
sub
push
sarb
and
dec
add
mov
js
out
mov
aaa
add
shl
imul
mov
pop
cmpsb
outsl
imul
test
ficoml
les
pop
and
push
daa
imul
dec
das
in
xor
sbb
iret
test
xor
adc
repz
sti
jns
push
ret
in
add
inc
jnp
fldt
dec
inc
mov
mov
int
xor
mov
mov
xchg
jmp
call
adcl
aad
pop
jb
or
push
and
icebp
xchg
pop
insb
add
insb
lods
adc
and
out
xlat
jp
cmp
xor
push
sub
mov
jecxz
pop
xchg
je
loopne
sbb
les
loopne
inc
lcall
lea
pop
mov
subb
fldt
sub
dec
adc
pop
rclb
stos
inc
mov
test
fs
pop
sbb
fs
fdivrl
test
out
xchg
dec
and
lods
aam
or
cltd
cmp
in
in
pop
fimuls
cmp
lahf
int
aad
xorb
in
in
sarb
push
rorl
lret
push
mov
mulb
pop
xor
fidivs
insl
das
xchg
mov
sahf
fisttpll
pop
pop
mov
push
sbb
popa
xorb
dec
xor
cmp
les
xchg
xchg
jmp
push
lcall
es
cwtl
dec
push
xor
lret
jnp
inc
dec
jne
test
inc
popf
dec
mov
in
inc
outsb
dec
loop
push
pop
nop
mov
repz
mov
dec
lods
cmpsl
pop
push
xchg
popl
in
cmpsl
das
mov
in
mov
mov
out
mov
xchg
push
sub
lea
pusha
fidivl
aam
mov
xchg
subl
dec
test
lahf
and
push
mov
inc
xchg
inc
pop
push
inc
iret
bound
std
cltd
sub
mov
outsb
outsl
int3
roll
jge
add
insl
mov
lret
outsb
mov
add
das
or
das
sbb
in
in
mov
cmp
adc
adc
cmpsl
lcall
mov
pop
dec
jns
fimull
into
gs
mov
fstl
and
or
mov
jmp
adc
test
push
faddl
jne
cs
cmp
iret
push
pop
test
js
mov
ja
add
movsb
and
ret
loopne
push
lret
cmp
pop
addr16
in
mov
jno
jl
arpl
adc
ss
sub
test
test
pop
movb
mov
mov
xor
sbb
cmp
xchg
mov
xchg
xchg
sub
imul
jle
xchg
jo
push
lds
ret
mov
stos
sub
mov
mov
adc
xchg
or
out
sbb
cli
xor
mov
subl
xor
outsb
or
add
lret
out
push
out
and
sub
jg
pushf
mov
or
ret
es
push
sub
sub
divl
and
pop
push
push
and
fxch
mov
outsb
shrb
mov
scas
mov
shll
xor
jno
sub
movl
outsl
pop
push
pushf
jg
mov
push
repz
inc
and
jbe
std
mov
movsb
out
movsb
push
lcall
mov
jae
mov
scas
or
arpl
ds
adc
hlt
test
in
imul
das
cmp
je
lret
jp
aam
addl
lret
lods
enter
daa
fwait
jno
sbb
push
mov
and
and
pop
cmp
outsl
mov
adc
sbb
push
aam
and
cmc
jbe
movsl
push
je
xchg
xchg
cmp
call
xchg
inc
pop
jle
inc
jno
test
dec
in
mov
and
ds
rol
ljmp
cmp
mov
ret
test
loop
jno
popa
into
adc
imul
push
addb
or
and
xchg
fimuls
and
outsb
mov
sub
call
ds
pop
jbe
add
push
cs
mov
popf
mov
out
cwtl
lret
mov
in
xor
mov
cmpsl
adc
fwait
fs
sub
sahf
mov
fidivrs
fwait
in
jp
and
xlat
pop
mov
mov
sbb
rclb
in
jns
arpl
jmp
je
out
pop
inc
rcll
es
sub
cmpsl
adc
xorb
xchg
adc
push
mov
ss
and
popa
jbe
pop
ret
sub
push
je
xchg
cld
mov
pushf
push
nop
push
lea
push
fdivrl
ret
inc
popf
out
pop
int
mov
mov
stos
call
mov
dec
js
test
lods
call
daa
je
jl
jo
std
fsubl
cmp
out
lahf
jno
sahf
sbb
push
fnsave
and
push
push
mov
mov
jne
test
mov
xorl
and
or
pop
ss
es
pop
mov
rorl
lahf
mov
pop
push
jl
xor
add
aam
jecxz
push
mov
cmpsl
mov
cmp
dec
fistpl
lret
mov
push
in
imul
mov
push
xchg
adc
into
test
nop
or
std
scas
test
in
adc
mov
bound
pop
jl
rclb
cmp
mov
jge
xor
inc
mov
dec
icebp
add
mov
mov
mov
sar
sbb
adc
cmpsl
lea
mov
push
cmp
hlt
xchg
lea
push
mov
aaa
pushf
cltd
flds
int
pop
lret
sti
out
add
je
loop
sbb
mov
cmp
insl
mov
jp
push
in
jmp
adc
xlat
add
cmp
jg
jecxz
ret
sbb
aaa
and
loop
pop
aas
or
xchg
mov
int3
dec
mov
cwtl
adc
mov
cwtl
fistpl
mov
in
in
out
jmp
clc
and
leave
inc
or
xor
out
fsin
dec
stos
jp
mov
aaa
repz
pop
cs
in
loope
mov
xlat
dec
stc
mov
sub
xor
test
mov
pusha
and
mov
je
fdivrs
cmp
xlat
xor
mov
jle
adc
fistl
mov
data16
pop
stos
pop
in
in
jmp
pop
adc
xchg
xor
es
out
and
loopw
int
xchg
cmp
xchg
cmp
jg
into
mov
jae
cmpsb
test
fwait
push
aad
addr16
xchg
mov
fcmove
adc
cmp
push
or
int
jmp
lds
or
dec
loope
into
mov
fldenv
inc
pop
into
jecxz
fisttpll
arpl
rol
lret
out
stc
dec
outsb
test
mov
xor
sub
mov
mov
fistpll
inc
stos
ljmp
xor
jl
adc
dec
test
xchg
push
out
or
cmc
add
test
hlt
cld
clc
call
repz
xchg
hlt
les
xor
xchg
pop
enter
orb
fldt
mov
and
push
push
insl
movsb
and
mov
mov
dec
leave
cmp
test
add
inc
jno
ss
pop
xchg
cmpsb
mov
adc
rolb
adc
sbbb
mov
insb
sbb
mov
test
in
mov
ljmp
mov
jmp
sahf
test
stc
mov
push
outsb
testb
sub
inc
js
pop
ja
mov
roll
mov
and
div
pop
inc
jns
cmp
test
cmp
popa
add
jae
ret
jnp
inc
ds
in
sbb
fnstsw
incb
in
or
rorl
jge
mov
xchg
inc
jmp
fucomip
or
or
mov
pop
jle
js
push
inc
adc
or
inc
sbb
aaa
xchg
lock
jle
ljmp
jg
sbb
leave
inc
stos
xlat
add
dec
xor
dec
pop
mov
xor
pop
mov
scas
xor
jne
repz
in
sbb
lods
dec
jo
jo
sti
adc
mov
xchg
and
js
cs
jp,pn
pop
inc
push
imul
pop
enter
pop
xor
and
mov
adc
add
test
or
mov
mov
cmpsb
test
xchg
lods
shrl
aaa
les
in
insl
cmpsl
repz
movsb
fadds
add
pushf
leave
mov
add
or
and
sbbl
cli
sub
fcoml
popf
cmpsb
cmp
and
ds
xchg
fcompl
adc
imulb
mov
mov
pop
add
pop
dec
loopne
orb
inc
movsl
ret
sbb
out
test
push
pop
pop
add
cmp
push
sbb
or
imul
mov
ss
out
mov
stos
ret
xor
mov
or
mov
mov
nop
xchg
imul
lds
push
mov
out
add
nop
or
xchg
inc
stos
cmpsl
in
add
cmp
add
mov
movsl
mov
fs
dec
add
aaa
fldenv
cmp
inc
sub
mov
sub
sub
push
stos
testb
std
loopne
sub
or
fimull
cmp
jecxz
lahf
or
sbb
mov
mov
out
dec
das
cmp
insl
loop
lret
push
repz
gs
cmp
out
adcb
lods
into
cwtl
ret
sub
ljmp
xor
sti
dec
lock
adc
mov
fwait
cmp
je
jle
test
or
ss
and
jmp
dec
pop
sub
es
jmp
jle
pop
adc
clc
imul
insb
cmp
leave
xchg
push
inc
inc
push
mov
lret
dec
cmc
push
inc
mov
mov
imul
inc
mov
aad
pop
int
sbb
shrb
gs
inc
dec
stos
add
clc
inc
ds
mov
test
or
movsb
inc
sbbb
pop
jne
jbe
mov
inc
mov
insb
cltd
loop
adc
cmp
sbb
dec
pop
mov
inc
dec
mov
es
or
xchg
xor
xchg
bound
das
clc
out
pop
neg
jp
pop
aas
jne
xor
jns
pop
test
ficoml
and
popa
outsb
xchg
and
jl
rep
aas
das
out
mov
jmp
mov
mov
jl
add
fs
hlt
dec
hlt
test
mov
aad
jp
lea
jo,pn
mov
jle
stc
aad
imul
sti
xor
pop
xchg
or
pop
frstor
bnd
lahf
lock
hlt
or
pop
insl
or
ds
mov
add
jecxz
imul
sti
mov
cmc
jno
das
out
push
mov
loope
and
je
sbb
adc
fdivrs
out
dec
lea
or
sub
pop
nop
das
add
loopne
jnp
jmp
adc
cwtl
rclb
push
xor
dec
xor
stos
adc
mov
push
bound
mov
mov
rcrb
shll
mov
popa
adc
xor
fwait
adc
fs
sbb
ds
stos
jg
cmp
add
ret
test
mov
ds
scas
es
outsl
push
lahf
stos
mov
jp
add
andl
jmp
dec
out
inc
leave
nop
mov
push
lods
xor
outsl
inc
loope
es
pop
movsl
leave
cmp
pusha
enter
xor
sub
mov
mov
out
out
fmul
xor
xchg
inc
adc
and
adc
xchg
xchg
stc
mov
inc
cltd
sarb
orb
sub
mov
loop
add
xchg
pop
dec
mov
pop
pop
jno
xorb
mov
cmp
push
scas
jmp
out
cmc
push
subb
mov
dec
iret
cmp
inc
sbb
mov
xor
mov
arpl
mov
sbb
rcrl
leave
xchg
dec
and
xchg
scas
push
jmp
adc
mov
mov
dec
jnp
push
cmp
pusha
adc
sbb
imul
mov
xlat
ljmp
sub
ret
cld
aad
mov
movsb
adc
pop
aaa
jg
cmp
or
rcl
jne
cmpsb
jecxz
loop
pop
push
cltd
mov
fwait
xchg
jne
mov
mov
add
enter
mov
jmp
push
in
lea
shr
mov
shr
cmpb
shl
pop
adc
or
pop
insl
dec
jae
ja
jecxz
stc
adc
nop
cltd
in
xchg
push
cmpsl
sub
xor
pop
fs
inc
add
mov
adc
fs
cmp
jae
data16
inc
insl
mov
sub
mov
movsl
cmp
std
sub
adc
stos
cmp
in
lahf
lods
push
sahf
mov
xchg
loope
fiadds
push
shl
xor
adc
nop
cmc
movsl
lea
adc
mov
jl
imull
cmp
int3
repnz
into
and
sub
ret
lods
add
out
mov
mov
loope
mov
fisubl
hlt
jnp
das
aam
or
jbe
jle
ret
xchg
enter
sarb
sub
es
sbb
adc
and
xchg
cmp
out
cmp
pop
mov
iret
js
pop
dec
dec
push
ffreep
pop
sub
rorw
dec
and
into
das
test
push
test
inc
mov
push
es
mov
add
lods
icebp
mov
fldt
and
sbb
ja
mov
sub
add
xor
mov
flds
xor
scas
int
xor
rcr
pop
xchg
test
mov
mov
pop
push
mov
adc
sbb
sub
aaa
lds
addr16
and
dec
jp
mov
outsl
pop
dec
xchg
lods
push
pop
psraw
jg
dec
mov
inc
hlt
mov
jmp
pop
outsl
jno
in
adc
pop
xchg
dec
dec
je
xchg
ret
lds
loope
xor
into
insl
mov
ds
pushf
into
mov
push
inc
mov
test
cld
and
or
out
pusha
fnstsw
clc
dec
jo
popa
mov
cs
mov
or
je
mov
mov
xchg
pop
arpl
pop
test
cmpsb
jno
mov
jl
lret
adc
xchg
shll
pop
jo
sti
jg
and
xchg
add
lret
jmp
and
dec
sub
pop
hlt
adc
out
lea
and
pop
test
push
xchg
call
hlt
sub
jae
xor
and
pop
mov
push
fidivrl
movsb
push
cmpsl
jge
lods
xor
jl
out
sbb
in
fdivrl
cmp
cmpsl
mov
subb
push
jbe
lea
popa
shlb
int
lar
adc
aas
xchg
imul
lock
cmp
pop
repz
dec
inc
cmc
fdiv
xlat
stc
inc
sbb
mov
or
cmp
mov
jnp
fcmovnbe
cmp
sbb
mov
dec
xchg
and
aam
dec
cli
push
loop
in
sbb
cmpsb
inc
push
mov
lahf
pushf
mov
mov
pop
mov
add
stc
aam
call
adc
cli
pop
push
mov
aam
scas
arpl
pop
inc
aam
ss
lahf
mov
mov
mull
or
flds
jecxz
mov
pushf
lcall
jo
ljmp
mov
popa
dec
and
imul
js
mov
mov
fiaddl
in
sti
fidivl
xor
outsb
mov
cmp
cltd
pushf
sub
int3
movsb
addr16
rolb
jbe
pop
int3
inc
das
ds
sbb
mov
pop
iret
adc
and
sbb
add
pop
mov
sbb
pop
mov
and
mov
push
in
mov
jae
mov
cld
outsb
int3
std
jge
out
inc
mov
inc
cmp
mov
inc
push
adc
add
into
pop
stos
lahf
push
ja
lret
add
jmp
rorl
mov
lahf
push
push
enter
lahf
mov
push
pop
pop
aas
neg
lods
data16
push
repnz
mov
repnz
int
mov
inc
cltd
push
cmp
xchg
in
inc
mov
mov
test
jle
adc
sahf
xor
in
inc
and
cltd
and
mov
cmc
dec
xor
cld
les
rcrb
fdivrl
or
push
sahf
push
call
aaa
test
add
ret
inc
or
aas
icebp
pop
sahf
xchg
orl
adc
push
shlb
xchg
jecxz
out
or
jg
ljmp
sarl
data16
mov
sub
jno
test
je
faddl
sub
sub
pop
rclb
lcall
test
cmp
pushf
cli
lds
mov
testb
nop
xor
jnp
jge
ret
dec
call
mov
mov
jle
mov
or
pop
movsb
dec
data16
add
or
sti
mov
in
jno
sub
iret
or
add
mov
sbb
mov
sbb
in
push
sbb
fbstp
adc
mov
mov
and
jns
test
aas
inc
xchg
ljmp
sarl
xor
aas
dec
sub
movsl
mov
ficompl
cld
mov
sub
in
ljmp
dec
fnstcw
and
pop
xor
xchg
jns
lock
inc
mov
ret
mov
cmp
rolb
lds
mov
stos
mov
sbb
test
jae
xchg
mov
jg
aad
int
test
xor
jnp
push
ljmp
cwtl
mov
aad
mov
rolb
inc
mov
cmp
ret
cltd
push
mov
jnp
aas
out
push
icebp
inc
mov
and
bt
stos
mov
fmuls
push
mov
or
xchg
out
rep
fisttpll
ffreep
add
mov
aaa
push
jae
scas
decb
sub
pop
jae
mov
cmp
or
push
sub
call
dec
xor
and
mov
push
aam
adc
aaa
fs
add
sahf
bound
fbstp
mov
xor
dec
stc
add
js
clc
fisubrs
rorb
mov
insl
inc
jmp
inc
std
jne
jno
push
icebp
jmp
outsl
pushf
lds
hlt
dec
mov
stos
iret
or
adc
inc
push
lock
test
loope
mov
fstpt
mov
sbb
pushf
les
lea
xchg
xor
adc
sbb
inc
in
js
int3
imul
push
lret
popa
cltd
cltd
fwait
sub
loop
push
push
jp
mov
lods
xor
fs
adc
scas
pop
jecxz
jns
loope
jge
mov
imul
cmpl
in
fisttps
cmp
jmp
rcll
jp
mov
call
lods
insb
jo
xor
jnp
push
pop
pop
lret
push
stos
cltd
cmpsb
jle
stos
add
rcrb
mov
adc
pop
pop
cwtl
inc
es
mov
outsb
cmp
cmp
ret
push
insb
dec
cmp
fnstcw
xchg
das
ret
sbb
imul
sbb
inc
mov
sbb
fildl
aas
aam
mov
loope
mov
inc
dec
jbe
insl
enter
add
dec
dec
aad
jnp
iret
ret
shl
mov
mov
sub
xchg
loopne
xor
bound
hlt
sub
or
jmp
outsb
jg
ja
mov
jge
mov
cmp
rcrl
cmp
sarl
cmpsb
dec
jb
ret
sub
xor
loopne
xchg
inc
dec
pushf
cmpsl
iret
leave
sti
xchg
mov
les
add
xor
pop
daa
pop
dec
xchg
stc
imul
xchg
mov
push
in
outsl
imul
push
sbbb
dec
insb
pop
jns
push
push
and
pop
lcall
mov
or
insb
adc
fldt
inc
sti
sbb
lods
pop
fs
das
jg
mov
scas
sub
ss
jg
jb
or
sub
insb
inc
sahf
push
pop
stos
aam
fidivrl
inc
lods
mov
pause
cmpsb
mov
push
inc
xchg
xlat
mov
lods
adc
cmpsb
ret
xor
rol
test
adc
or
les
cmp
push
inc
xor
enter
push
mov
loope
lea
and
xlat
sbb
jnp
repz
jp
mov
cvttps2pi
lret
sub
mov
and
xlat
inc
push
add
pop
cmp
out
into
sti
outsl
pushf
sub
icebp
adc
push
cmpsb
mov
cmp
pop
adc
bnd
and
mov
jmp
sub
out
in
and
call
lret
out
imul
fsub
xchg
and
enter
dec
sti
out
pop
lods
jge
fisttps
movsl
stos
pop
mov
stos
push
jl
cli
jmp
jecxz
jg
test
and
lahf
sub
add
inc
mov
rorb
stos
cmpsl
je
pop
add
test
mov
pop
aaa
mov
insb
shll
data16
adc
sbb
inc
cmp
adcl
xchg
add
das
in
or
adc
in
icebp
out
inc
imul
sbbl
and
cld
lods
pop
jle
lods
add
movsl
sbb
pushf
mov
insl
clc
test
sbb
cs
scas
mov
sti
or
adc
gs
or
pop
push
inc
hlt
scas
sahf
movsl
fwait
lret
add
adc
adc
mov
mov
js,pn
dec
xchg
hlt
or
fnstcw
sub
add
add
and
add
jnp
imul
mov
mov
pop
jge
inc
fadds
cld
push
icebp
xlat
jl
ss
lock
and
dec
mov
divb
push
icebp
mov
sbb
rorb
jo
inc
xchg
mov
push
ljmp
jge
mov
adc
aaa
add
xor
insl
mov
push
leave
addl
call
test
gs
stos
test
int3
lea
ds
leave
xor
add
loopne
fimuls
inc
xor
insb
aam
fwait
pop
aas
lds
imul
xchg
ss
dec
pop
push
mov
sti
das
xchg
or
add
dec
ss
rorl
aas
decb
insl
loop
insb
cs
cs
sbb
rcl
cmpsl
movsb
add
pop
mov
fistpl
add
or
mov
mov
out
fs
das
push
inc
gs
daa
bound
shrb
fnsave
sub
jo
repz
mov
dec
subb
push
cmc
push
fcmovnu
rcl
jne
push
lock
in
shll
roll
arpl
mov
add
out
cs
inc
and
nop
pop
repnz
or
inc
aam
cmpsl
pop
popf
add
ds
xor
adc
xor
mov
fisttps
add
push
jne,pn
ffree
sti
gs
inc
out
inc
push
in
inc
pop
bnd
pop
fs
push
add
dec
outsb
out
sbb
std
ljmp
inc
icebp
loope,pt
mov
jle
ficoml
inc
rcrl
jne
pop
jno
xchg
xchg
dec
lds
aaa
lds
xor
test
mov
popa
mov
call
add
lahf
and
or
lock
cli
bound
jns
cmpsb
push
fistpll
fstpt
jns
xchg
mov
fcoml
mov
cmp
xor
sti
cmpl
je
lods
clc
decb
clc
push
pusha
push
int
mov
cld
enter
nop
push
mov
dec
push
jecxz
fidivs
daa
sbb
cmc
imul
insl
into
dec
mov
adc
and
pop
adc
sub
mov
pop
and
sbb
rol
mov
push
sbb
fldl
lret
jl
int3
add
pop
sbb
mov
xchg
mov
inc
and
lret
rcrb
lcall
nop
cmp
pop
mov
mov
inc
ds
std
add
xor
sbb
data16
pusha
push
add
add
inc
add
lock
xchg
icebp
outsl
sti
and
in
std
sarl
mov
inc
jmp
jo
imul
mov
add
add
stc
sbb
inc
push
sub
lds
jle
xchg
in
push
popa
ja
ret
sbb
cs
lret
lods
xlat
shrl
js
popa
stos
in
dec
test
lock
adc
jmp
ljmp
push
sub
arpl
incl
push
aad
jecxz
cmpb
push
sbb
jno
test
xchg
xorb
inc
mov
cli
repnz
xchg
sbb
add
add
test
xor
mulb
scas
bound
imul
ljmp
adc
inc
movsl
test
pop
mov
jae
sbb
addb
int
mov
mov
stc
mov
jg
adc
arpl
push
push
cmp
cmp
scas
push
lret
rcrl
push
imul
int3
add
pop
mov
and
shrb
adc
sbb
sub
les
mov
jns
js
xchg
call
int
dec
lret
mov
popf
lock
loopne
test
mov
aam
mov
pop
xor
mov
in
cwtl
icebp
aas
lods
shlb
inc
mov
mov
xchg
adc
testl
add
add
rclb
inc
mov
inc
jo
jle
jp
jbe
sub
repz
adc
jg
or
fdivrs
jecxz
mov
in
mov
fmuls
imul
rolb
xchg
mov
sbb
mov
adc
xchg
scas
arpl
add
xor
fs
sub
test
pop
mov
jmp
leave
ljmp
ss
repz
iret
lahf
add
add
push
cltd
xchg
stos
xchg
loopne
dec
xor
pause
jp
ret
mov
loope
jmp
dec
popa
pop
out
or
pop
add
cli
mov
loope
ficompl
fs
test
inc
jmp
xor
pop
aad
dec
jae
cmc
insl
mov
or
and
cmp
rcrl
xchg
or
ja
hlt
loopne
idivl
xchg
in
fsubrl
mov
pop
mov
mov
sub
rorl
cmpsb
stc
adc
test
outsb
xchg
xchg
xchg
cmpsb
sub
es
or
cli
xchg
loop
pop
adc
stos
jb
jnp
dec
ss
fidivrs
imul
xchg
add
clc
popf
leave
inc
addr16
jae
out
mov
dec
adc
push
ret
std
mov
ljmp
jno
cmpsl
cmpsl
or
cli
cmp
push
insl
fdivr
cmpsl
xor
incl
xorl
mov
pop
push
rorl
push
out
jns
push
fadd
insl
stos
ljmp
sti
xchg
add
ja
mov
mov
sub
xchg
mov
fcomip
pop
lea
shll
mov
adc
inc
imul
std
jg
pop
es
cmp
mov
dec
out
pushf
inc
and
pop
scas
imul
rorb
add
jp
jg
lock
inc
loope
sub
xchg
int
loopne
sbb
fidivs
aas
rcl
sub
push
fistpll
icebp
add
jecxz
sti
decb
add
mov
mov
push
fidivrl
cmp
or
imul
xor
and
jnp
inc
sysret
ds
adc
sbb
mov
add
sub
and
cmp
stos
mov
mov
lds
test
push
xchg
and
pop
daa
je
add
add
cmpsl
leave
pusha
enter
dec
cli
in
inc
imul
mov
cmc
lds
jnp
stos
iret
frstor
data16
call
cs
lods
lods
ret
inc
xchg
adc
jg
or
push
fwait
sbb
cmp
jnp
aam
shrb
fmull
pushf
cmp
cmp
stos
push
xor
pop
push
pop
inc
ds
pop
movsl
cmp
push
inc
daa
xor
das
das
mov
adc
idivb
mov
pop
jl
loop
ret
jno
xchg
mov
pushf
call
js
pushf
push
cmpsl
fsubrl
lcall
scas
xchg
adc
fs
adc
cld
cmp
and
loopne
add
add
or
and
mov
mov
ror
outsb
or
mov
pop
rcl
data16
out
in
adc
lahf
sub
incl
adc
push
sbb
adc
sbb
mulb
nop
and
adc
std
ret
fsubp
leave
into
xchg
xor
mov
data16
cltd
mov
in
xorl
out
jecxz
mov
inc
or
cmp
jns
mov
dec
inc
xlat
repz
or
mov
lods
lret
shlb
add
cmp
mov
lret
ds
inc
add
add
cli
pop
adc
cld
outsb
aam
xor
adc
push
add
imul
xchg
jmp
add
push
adc
dec
lahf
mov
mov
mov
dec
dec
or
jmp
test
fadds
xchg
mov
call
dec
cmc
xor
xorb
sbb
test
sub
out
ret
jne
cmp
int
shrb
faddp
mov
add
rclb
daa
cs
into
pop
sahf
je
std
pop
out
mov
out
call
xor
loope
dec
push
data16
popf
push
adc
jp
add
add
stc
add
pop
inc
push
roll
mov
xlat
and
pop
aaa
push
sub
sbb
cmp
or
popf
mov
test
mov
jae
ds
cmp
pop
movsb
data16
test
pop
nop
insb
nopl
in
sub
jge
mov
punpckhwd
pop
push
pusha
and
pop
insb
loop
inc
in
sbb
pop
pop
mov
jae
cli
rclb
adc
jecxz
fstpl
xor
repnz
call
and
jg
or
sti
sub
mov
sbb
add
cmp
cmpsl
out
xchg
cmpsl
je
mov
and
add
add
gs
add
addr16
inc
mov
push
xchg
xchg
addr16
mov
insb
insl
or
xchg
int
stc
sub
out
cwtl
jns
mov
decb
fldenv
pop
or
ds
lods
in
sub
xor
sbb
out
leave
xchg
ret
pop
cltd
jecxz
lods
push
add
add
stc
sbb
jge
lods
fildll
in
cli
les
mov
loopne
ja
mov
sub
cmp
jb
out
push
mov
and
and
pop
or
lret
push
fsubp
mov
jge
aam
jns
out
adc
ja
mov
les
add
lahf
push
fldenv
pushl
jne
cmp
push
pop
cmpsl
jp
push
adc
cmovge
imul
push
pop
add
cwtl
push
or
and
js
jmp
leave
lods
rorb
xor
cmpsl
inc
jne
mov
sub
lret
pushf
mov
and
push
push
shr
pop
pop
scas
xorl
xchg
fistpl
pop
or
push
fwait
and
outsl
or
lea
pop
add
add
and
test
fwait
inc
pop
mov
into
sub
sub
mov
xlat
pop
aas
lcall
call
add
jge
jnp
jb
addl
loope
xchg
hlt
push
cltd
repnz
pop
loop
stos
in
mov
fcoml
setp
ret
mov
je
add
sub
fs
add
add
dec
leave
gs
add
push
pop
data16
sub
pop
pushf
cmp
mov
ds
addr16
mov
imul
stos
pushf
in
xor
pop
inc
mov
add
and
andl
ret
arpl
int
scas
dec
pop
push
inc
out
jno
jbe
dec
sti
emms
xchg
fcomip
aaa
and
int3
xchg
xchg
test
adc
add
testb
lcall
push
add
add
aam
push
add
jge
xor
shrb
rol
rorl
inc
xor
xchg
xchg
cmpsl
or
push
jmp
push
push
movsl
dec
xor
scas
sbb
dec
out
cmp
fsubrl
enter
daa
push
out
xor
outsl
cmp
inc
add
mov
dec
push
xlat
js
ficoml
scas
mov
cmpb
sti
divb
int3
add
push
push
popf
and
xchg
call
jmp
cs
in
int3
push
push
push
fldpi
mov
xchg
call
repz
fldcw
xor
xor
repz
or
mov
test
insb
xor
movsl
sub
out
sub
jae
dec
in
push
sub
lret
xchg
xchg
loope
popf
push
xor
cmpsl
xchg
ret
cmp
push
lock
mov
jne
push
test
cwtl
add
nop
add
add
or
in
mov
repnz
inc
cmpsb
and
daa
pop
ret
mov
addr16
lret
xor
jnp
es
pop
mov
lcall
pop
aam
or
or
jbe
sbb
mov
int3
or
sub
stc
daa
pop
pop
inc
lsl
mov
add
in
push
ja
sub
cld
mov
outsb
sbb
jp
shlb
out
and
pop
mov
add
add
inc
pop
loope
mov
mov
outsl
jns
xor
mov
mov
nop
add
cmpsb
hlt
into
lea
aad
sarb
test
in
push
xchg
xor
out
xor
repz
arpl
repz
adc
push
mov
hlt
jmp
inc
xlat
or
xchg
cmp
mov
mov
mov
popa
cmp
pop
mov
or
jge
in
mov
jp
pop
gs
mov
mov
pop
test
mov
jg
inc
mov
leave
iret
sub
adc
mov
sbb
test
mov
sub
inc
push
mov
decl
and
lods
popf
push
ss
and
pop
and
test
mov
sub
sbb
and
push
push
clc
fsubrp
inc
add
pusha
dec
xlat
mov
sub
jb,pn
loopne
jbe
jo
pop
sbb
xor
filds
call
sbbb
sbb
arpl
jno
popa
mov
add
xor
sbb
test
fcompl
jae
push
rcl
addr16
scas
mov
push
or
mov
jmp
flds
lret
add
ds
push
mov
scas
xor
push
xchg
std
pop
imulb
jp
lock
adc
push
cli
lret
loope
mov
jno
popa
jl
push
rorl
enter
inc
jge
subb
lock
fwait
and
mov
int3
add
cs
xchg
jg
call
loope
pop
pop
insb
and
xchg
mov
xchg
fisubrl
or
push
pop
push
xor
in
adcb
je
mov
cmp
or
add
inc
mov
dec
add
add
or
loope
pop
add
je
das
adcl
inc
movsb
pop
lahf
jl
jns
inc
outsb
int
pop
and
pop
fnstsw
cwtl
push
xor
int
or
stc
ds
xchg
out
sub
mov
push
mov
xchg
cli
xchg
pop
insl
cmp
jmp
popa
cmp
stos
mov
stos
push
cmp
inc
in
cmp
sub
rcrb
add
test
aad
jb
out
xor
mov
adc
adc
repz
cli
mov
jae
push
mov
andl
cmpsl
fimull
mov
lds
les
fcomp
dec
mov
pushf
aaa
and
subl
iret
jbe
xor
fdivrp
xchg
mov
cmc
ja
dec
fnstcw
movsb
pop
pop
cmp
lock
sysexit
xor
push
imul
dec
popf
jae
add
inc
add
xchg
dec
add
outsl
shlb
pushf
push
aam
cwtl
mov
mov
and
arpl
lret
mov
inc
mov
rcll
ret
ja
loope
and
add
jmp
push
jecxz
inc
push
push
dec
xor
fsub
sti
xchg
sub
jecxz
mov
adcb
xchg
adcl
and
xchg
mov
dec
cwtl
clc
mov
push
mov
into
add
add
adc
outsb
out
mov
xchg
incl
pushl
cld
cmpsl
xchg
mov
test
mov
and
and
lock
or
sbb
bound
xchg
xor
nop
jecxz
int3
add
insl
cmp
dec
cmc
cmp
shl
pop
scas
popa
loopne
hlt
dec
mov
fwait
rcrl
pop
in
bound
add
dec
addl
cmp
mov
clc
nop
cmpsl
mov
xchg
push
out
leave
out
daa
xor
mov
pushf
hlt
adc
xor
jle
stos
lcall
data16
xchg
add
add
es
xor
push
lahf
add
fstpt
push
dec
into
jp
jo
jbe
test
stos
movq
jecxz
cmp
xchg
ljmp
imul
pop
mul
jp
loope
int
aam
or
pop
outsb
jp
insl
fwait
leave
lret
add
out
xor
mov
mov
loop
clc
lock
mov
push
andb
pop
mov
jecxz
add
add
pop
aaa
ja
adc
jg
add
stos
fwait
ljmp
repnz
movsl
pop
movsl
ljmp
cmc
or
shl
fs
jecxz
test
push
test
mov
mov
xchg
mov
sub
pop
xchg
jmp
out
ss
fisttps
mov
fiaddl
push
hlt
fisubrl
pusha
out
rcrl
incl
fwait
xchg
and
cs
jecxz
arpl
frstor
inc
dec
movsb
test
ret
int
push
call
int3
add
mov
sti
cmp
arpl
and
loop
imul
inc
movsl
dec
ret
push
out
mov
mov
fsts
int
jo
jecxz
adc
fadds
jno
mov
jle
mov
rclb
inc
pop
sub
adc
out
movsl
int3
loop
hlt
xor
cs
add
add
negb
cmpsb
out
shr
cld
lret
or
pop
adc
sbb
sahf
cmp
jp
inc
in
push
test
push
je
out
frstor
and
adc
roll
mov
pop
jnp
pop
popa
jp
inc
jge
cmp
mov
scas
fstpt
mov
setne
outsl
fstpl
out
std
jns
add
ss
push
xorb
cmp
and
push
pop
mov
mov
xchg
outsb
xchg
andb
mov
sbb
adc
bound
mov
in
cmp
xchg
aad
enter
jg
jp
test
and
dec
mov
test
mov
movsl
inc
scas
mov
add
cwtl
repz
mov
inc
push
inc
in
push
in
sub
add
or
push
pop
jecxz
popf
ror
xchg
in
sbb
leave
mov
mov
dec
adc
cmpsb
xor
lock
or
loop
xlat
jmp
mov
or
push
daa
mov
imulb
je
sub
cltd
mov
push
sub
hlt
push
mov
push
mov
sbb
jp
in
or
push
inc
scas
cmc
add
nop
add
mov
pop
sbb
and
mulb
mov
cld
rcll
lret
arpl
fwait
or
outsl
mov
push
dec
cmp
pop
pop
ljmp
push
iret
mov
test
je
arpl
mov
imul
add
push
jno
test
cmp
cmp
sub
mov
mov
jl
and
jecxz
jl
sub
inc
lods
inc
subl
loop
scas
mov
pushf
jno
mov
mov
fists
push
aas
arpl
addr16
cltd
mov
out
mov
sub
fiaddl
fldenv
mov
add
fdiv
scas
call
mov
xchg
shrl
fmul
mov
test
nop
add
aas
out
insb
adcb
adc
mov
aad
int3
subl
cmpsl
xchg
pop
test
lret
decl
adc
pop
cmc
inc
stos
xchg
jns
adc
add
sbb
xchg
mov
xchg
or
inc
push
adc
out
sub
notb
push
popa
cmp
pushf
fldl
xchg
test
jecxz
pop
faddl
int3
add
imul
frstor
decb
dec
popl
out
or
adc
in
cmp
andb
adc
addb
sub
in
dec
scas
in
mov
pop
xor
adc
test
ljmp
lds
and
pop
scas
fwait
aam
sbb
scas
scas
add
add
mov
mov
adc
jbe
xchg
or
hlt
dec
daa
push
out
pop
int3
aad
stos
cmpsl
orl
ds
insb
ret
bound
sub
pop
mov
call
xor
in
jbe
sub
nop
mov
inc
cmpsl
in
mov
int3
add
mov
adc
test
je
dec
inc
and
sbb
test
mov
in
jecxz
fs
pop
cmp
push
fmul
aaa
xor
dec
addb
pop
or
or
je
lahf
out
data16
fucom
jge
jecxz
jg
int3
add
ss
daa
jmp
aaa
addb
add
push
dec
es
xchg
lds
add
daa
cmp
les
mov
pop
pop
pop
xorl
shr
add
lret
clc
or
pop
lahf
dec
pop
mov
lret
nop
aaa
out
jnp
cmp
jae
orb
sbb
mov
aas
std
popfw
push
push
addb
pop
mov
jecxz
filds
incl
ljmp
xchg
and
push
lret
xlat
insb
stos
dec
jge
or
sub
push
fimuls
in
mov
stos
cmp
and
subl
adc
mov
scas
insb
add
sarl
cmp
adc
mov
mov
les
add
cmpsb
mulb
xlat
or
mov
pop
fsubl
adc
jb
xchg
fsubr
cmpsl
in
or
add
add
xchg
mov
das
int
push
pop
cld
xchg
and
push
push
cmp
or
aaa
jge
xor
out
repz
dec
mov
xchg
iret
in
stc
loopne
incl
pushl
and
push
push
mov
insb
fbld
inc
xor
int3
add
dec
and
or
lods
push
xchg
outsl
in
scas
ljmp
out
fstpl
and
out
inc
ficoml
sbb
shl
xor
int3
jno
cmpsb
std
rolb
incl
dec
jecxz,pt
adc
add
sub
adc
push
mov
enter
aas
pop
scas
cmp
test
in
call
cmp
xchg
cmp
mov
iret
mov
mov
test
adc
mov
fmul
into
lods
fnsave
arpl
mov
mov
pop
sbb
inc
loope
jns
cld
scas
insl
mov
aad
push
shlb
in
add
mov
icebp
test
jnp
sub
lret
jge
mov
int3
add
cli
pop
and
stos
xor
adc
fcompl
or
push
push
dec
mov
mov
xchg
lcall
iret
fiaddl
leave
mov
insl
mov
pop
shl
fstps
adc
je
sahf
sti
add
mov
insl
inc
int
ret
or
mov
add
movsl
xchg
or
lahf
arpl
mov
jmp
int
add
sub
inc
int3
movsb
inc
pop
mov
inc
push
mov
loope
shr
cmpsl
dec
gs
repnz
dec
inc
pop
pop
and
in
fsubr
cs
xchg
push
push
test
sbb
jge
add
push
xchg
cmp
mov
dec
sti
jmp
cmpb
rcl
nop
xchg
add
pop
test
pop
jne
addr16
and
nop
mov
lahf
fs
push
test
repz
dec
fwait
xchg
sub
cmp
xchg
cld
dec
xchg
xchg
sahf
cmp
push
pop
push
cmpsl
insl
test
cmpsl
shr
data16
gs
cwtl
shr
in
add
jbe
mov
xor
ss
mov
fcmovnu
xchg
add
add
aaa
into
pop
lahf
jbe
sbb
mov
imul
popa
ja
mov
mov
mov
jle
int3
mov
jo
jmp
iret
out
xor
cmp
adc
add
fwait
ds
mov
std
pop
outsl
test
out
and
push
cpuid
fisttpl
jmp
cmp
ljmp
mov
adc
push
lcall
add
add
mov
xchg
dec
xor
lods
pop
clc
xchg
mov
and
push
hlt
outsl
popa
adc
sub
sbb
test
pusha
sar
pop
loope
pop
lods
mov
test
mov
jns
sub
push
loop
xor
inc
sub
out
sbb
loopne
cmp
outsb
cmp
mov
inc
stos
cld
pop
pop
addr16
out
xchg
adc
fisttpl
sbb
or
ror
add
pop
mov
stos
add
aad
popa
jge
and
fstpt
daa
adc
mov
ljmp
adc
idivb
pop
jns
dec
rcrb
mov
xchg
addb
test
add
sub
push
xchg
outsb
push
mov
pop
xchg
ljmp
xor
or
js
jecxz
out
mov
lcall
into
dec
je
testb
hlt
leave
add
add
jae
clc
notl
ja
int
sbb
fisttpll
lods
je
std
add
hlt
rolb
mov
and
fisttpll
mov
jge
sbb
xor
sbb
cmp
add
test
mov
fs
pop
leave
int
or
mov
shrb
mov
mov
jb
test
in
add
mov
std
pop
stc
insl
xchg
push
add
add
inc
leave
scas
stos
jb
pop
mov
adc
add
rcrl
push
sahf
ds
push
fs
push
std
arpl
jns
or
roll
jp
hlt
mov
and
mulb
bound
pop
clc
mov
fcmovne
rcrl
ljmp
pop
xor
sub
call
xlat
inc
call
jecxz
add
enter
rcrl
cmp
or
stos
addps
push
nop
inc
pop
hlt
test
push
mov
and
daa
out
dec
mov
xor
jp
inc
mov
fiaddl
call
js
or
imul
es
and
mov
clc
adc
push
mov
movsl
jle
add
cli
pop
scas
aaa
xor
cmp
mov
pop
sub
inc
mov
sbb
aaa
fisubs
fwait
int
out
jp
jge
mov
xchg
in
and
es
cmp
jge
sbb
call
pop
sbb
sub
insl
mov
out
rcrl
cmpsl
or
mov
add
scas
mov
push
pop
test
and
dec
out
adc
jns
out
je
cmpsl
pop
cmp
cli
cmp
sub
test
outsb
sub
sub
out
xchg
es
cmp
and
jg
incl
jge
mov
xchg
jecxz
idivb
divb
loope
xchg
xchg
xor
pop
fsubs
mov
test
jno
pop
nop
jmp
ljmp
cmpsl
mov
fstpt
sbb
lret
push
imul
loop
cmp
xor
stos
xor
insl
repz
repz
dec
cmp
mov
scas
test
jge
pusha
fmulp
sbb
or
loop
stos
into
lahf
mov
push
xchg
hlt
arpl
mov
and
gs
addr16
add
mov
insl
push
add
ja
and
xorl
inc
mov
jecxz
and
test
cmc
xor
adc
stos
in
imul
sbb
dec
push
xchg
int
mov
mov
sbb
aas
inc
cmp
mov
repz
bound
aaa
daa
ljmp
pop
add
pop
adc
inc
mov
jo
xor
jnp
ljmp
jmp
mov
adc
push
cwtl
hlt
sub
int3
add
repnz
pop
adcb
inc
push
inc
mov
outsb
mov
fstpt
jno
cmp
arpl
aam
mov
cmpsb
inc
mov
or
loop
cmp
mov
out
inc
in
pop
testb
inc
loope
lds
ret
inc
std
bound
xchg
cmc
mov
mov
out
rcl
add
fwait
dec
shlb
in
sbb
rcrl
lret
sub
and
sbb
push
jl
push
sbb
jne
push
cmp
mov
clc
repz
xchg
mov
mov
mov
cmc
je
lds
aaa
in
xchg
inc
ret
mov
push
or
xchg
fnstcw
mov
pop
push
out
fildll
cmc
fistpl
rorl
add
add
mul
inc
repnz
add
jg
jle
dec
mov
fstpl
sahf
cmp
xor
mov
fabs
add
sbb
and
push
lds
push
xchg
shlb
jae
imul
aam
sbb
mov
pop
sbb
push
repz
lcall
js
mov
fyl2xp1
dec
mov
out
add
add
jecxz
icebp
movsl
mov
jl
je
mov
push
in
push
inc
sub
dec
mov
js
cmp
outsl
sub
rcl
and
push
mov
pop
int
push
cmpsl
dec
movsb
addr16
int
mov
mov
das
lahf
stos
sub
xchg
popa
in
push
imul
fbstp
scas
int3
scas
or
in
sub
mov
jnp
pop
push
or
mov
ja
add
ja
dec
pop
ret
xchg
lret
sbb
int3
add
pop
es
ljmp
cmp
and
ja
stc
push
cltd
popa
out
loope
xchg
mov
pop
sub
jns
xor
push
add
and
inc
fdivrs
push
jl
jb
lcall
mov
cs
aam
mov
jmp
incl
incl
fnstenv
aam
hlt
adc
xor
cli
roll
mov
sub
loopne
in
test
bswap
imul
xor
testl
inc
pop
test
jno
ss
inc
cmp
jl
pop
repz
pop
sarb
sarl
pop
imul
movl
movsb
pusha
push
divb
cmp
arpl
dec
jg
orl
mov
xchg
cmc
out
out
and
mov
call
add
test
addr16
mov
in
cmp
std
adc
fwait
cltd
inc
pop
aaa
call
cmc
add
mov
jl
aas
jne
clc
push
pusha
xor
test
adc
ds
add
lods
inc
ljmp
sar
orl
mov
mov
arpl
int3
sti
out
cmpl
mov
xchg
or
lds
add
in
add
incl
cli
and
and
dec
mov
jg
jmp
xorl
pop
jbe
loopne
pop
mov
mov
cmp
inc
pop
shll
xchg
and
iret
jno
pop
aaa
xor
int3
add
cltd
push
inc
in
xor
addr16
xchg
pop
movsl
bound
stos
sbb
mov
stos
in
xchg
adc
xchg
xchg
nop
xor
jge
out
xchg
jle
dec
imul
mov
fiaddl
xchg
pop
aad
lret
test
jo
xchg
rcl
add
mov
add
jo
add
pop
push
dec
addl
and
pop
test
mov
jbe
lahf
movsb
mov
popl
stos
sbb
outsl
imul
mov
icebp
xor
in
aaa
jo
aad
xor
inc
mov
jns
je
setnp
pop
popa
test
add
mov
push
adc
out
flds
sub
add
add
inc
fisubrl
pop
cmpsl
sbbl
hlt
ss
or
xchg
fiaddl
mul
inc
test
and
mov
in
inc
xchg
cmpsb
push
dec
jge
lock
scas
int
jecxz
xor
or
pop
sbb
dec
add
iret
scas
mov
cmpsb
inc
cmp
and
popa
lds
mov
or
pop
mov
and
les
outsl
jno
in
add
imul
scas
sbb
mov
pop
lret
adc
leave
ljmp
iret
js
scas
xchg
adc
imul
jnp
repz
cld
mov
xor
int
xor
lods
add
test
add
inc
xchg
cwtl
pusha
mov
xchg
lods
or
pop
lcall
cmp
bnd
push
fadds
int3
add
cmp
sahf
cmp
lret
popa
xchg
push
stos
mov
repz
fwait
mov
lds
inc
rolb
test
mov
rcll
inc
arpl
push
testb
test
push
pop
inc
in
inc
lods
pop
xchg
ffree
out
and
cmp
loope
lahf
mov
mov
les
call
in
inc
pushf
push
popa
add
sbb
testl
or
fcomip
lret
adc
mov
aas
lds
add
xchg
and
inc
inc
dec
adc
jecxz
inc
mov
lea
fadds
jnp
clc
lods
or
outsl
push
cmp
js
dec
cmc
lds
xor
incl
lock
jecxz
push
lock
out
fidivrs
fwait
jns
movsb
push
mov
xor
mov
outsl
cs
repnz
jnp
mov
loope
mov
lahf
mov
popa
adc
adc
jnp
xor
pop
ret
lods
adc
aas
jmp
ljmp
mov
jno
sub
mov
leave
push
in
iret
mov
int
ficomps
into
mov
pop
shlb
jmp
shr
ficomps
mov
mov
nop
cmp
aam
add
pop
or
sub
add
adc
or
jmp
add
lcall
in
subl
pop
or
popf
repz
scas
inc
inc
test
or
pop
jbe
insl
pop
std
out
adc
es
fwait
push
add
jmp
sub
test
scas
jnp
mov
data16
add
add
xchg
cmp
movsb
lea
mov
mov
data16
pop
cmp
sbb
dec
push
addl
fistpll
lret
pushf
dec
test
pop
xchg
mov
or
cmpl
cmpb
adc
pop
in
dec
inc
cmpl
cltd
mov
sbb
std
jo
inc
inc
xlat
daa
inc
int
cwtl
mov
nop
xchg
add
add
xlat
rclb
je
imul
lret
insl
push
inc
push
jbe
sbb
pop
andb
ficoms
jl
sahf
push
aas
lea
iret
sub
add
pop
push
pop
cmp
add
push
sbb
cmc
xor
and
pop
loopne
inc
jp
mov
xchg
lea
and
hlt
add
mov
je
mov
dec
cmpsb
add
in
fwait
aad
sbbl
gs
out
push
loopne
sub
mov
add
lods
decb
or
mov
std
sub
and
xor
pop
or
and
mov
sbb
pop
fwait
jp
imul
jns
inc
mov
cmpsl
mov
cmpsb
scas
push
push
loope
jae
mov
scas
cmp
fisubs
pop
jae
das
pop
call
mov
test
or
mov
pop
arpl
cld
repnz
or
adc
and
and
out
fwait
imul
loope
aad
es
nop
add
cmpsb
sub
jne
enter
mov
add
jge
rol
adc
stc
int3
ret
mov
jecxz
mov
scas
pop
add
add
ljmp
femms
lahf
sub
xlat
fsub
incl
dec
out
fstps
call
add
es
xchg
movsl
or
pushf
xor
repnz
cld
push
insl
pushf
inc
mov
negl
adc
jl
lods
lret
jl
mov
cmpsb
hlt
inc
jp
bnd
jne
mov
imul
in
mov
cmc
mov
cmp
inc
pop
ret
sub
lds
aam
pop
les
inc
mov
mov
add
pop
sbb
mov
push
sub
addb
add
xchg
jno
aaa
fidivl
or
pop
pop
fsubrl
jne
sbb
pop
mov
js
push
arpl
xchg
ds
sbb
dec
gs
xor
outsb
imul
add
and
in
pop
jne
jb
pop
adc
int3
in
imul
xor
dec
xchg
orb
fsubrl
fcomi
jae
jge
sahf
negl
cmp
pop
cmp
int
xor
xchg
add
add
sbb
sub
mov
sbbb
xchg
push
xchg
mov
mov
add
mov
sbb
adc
in
jp
mov
into
out
rcrl
fisttps
push
pop
push
jecxz
or
dec
xchg
xchg
xchg
sbb
repz
lods
movsl
mov
push
test
pop
and
repnz
mov
clts
cmp
xor
cltd
jne
fistpl
and
in
fucomi
adc
add
cmp
xor
sbb
das
push
sarl
out
add
out
pop
push
cmpsb
cmp
dec
test
outsl
ds
sbbl
fistpl
and
sar
inc
call
in
adc
mov
out
lcall
sub
pop
mov
cmp
push
mov
das
or
adc
jecxz
fwait
sub
shll
lods
call
mov
dec
das
push
cmp
sahf
adc
daa
pop
cmpsb
inc
sbb
stos
mov
and
xchg
enter
call
fnstenv
push
aad
dec
xlat
push
fiadds
cmpsb
mov
repz
ss
gs
or
outsb
push
fs
inc
repz
mov
clc
xorb
out
fisttpl
dec
mov
sub
incl
incl
xor
jo
pop
cmp
mov
xchg
dec
pusha
outsb
out
lret
lea
sub
ret
sti
nop
inc
sbbb
jge
insb
sub
cwtl
cmc
movsb
sar
gs
add
xchg
shr
lret
adc
in
dec
in
mov
mov
dec
in
stc
test
mov
mov
jmp
hlt
xor
scas
cli
add
add
int3
mov
loope
cmp
inc
push
ret
lods
sub
and
sub
or
aad
cmp
and
test
jle
xorb
insb
adcl
lods
dec
outsl
lcall
pop
mov
mov
dec
fldcw
xchg
cmpsb
add
push
sbb
cmp
mov
push
enter
test
mov
add
mov
xor
mov
sbb
cmp
das
sub
in
mov
add
xor
test
pop
push
jno
or
movsl
pop
mov
ss
or
rcll
xchg
clc
pop
sbb
xorb
rorl
shrb
xor
xchg
imul
jb
and
rclb
push
jnp
pop
push
pop
push
sbb
cmpsl
xchg
xor
aaa
jns
xchg
add
inc
mov
dec
mov
fcoml
call
mov
xor
cmpsl
lret
shll
negl
in
jbe
pop
adc
xor
mov
mov
fisubl
mov
jns
repnz
jne
in
int3
add
dec
stos
iret
inc
or
aam
cmp
push
flds
sti
and
xor
popa
movsb
cmp
xchg
andl
adc
adc
lret
inc
arpl
gs
sbb
sbb
and
int3
jmp
cmp
or
push
jno
fistpl
ja
mov
ds
pop
je
pop
xchg
scas
int3
aam
stos
adc
dec
test
pop
imul
popa
jp
dec
mov
lret
mov
jle
xor
incl
call
stos
mov
push
sbb
inc
mov
int3
add
out
lahf
lret
aam
dec
cmpsb
mov
cmp
push
pop
insl
mov
cmp
pop
es
jg
jnp
or
icebp
pop
sbb
das
ror
hlt
xchg
sbbb
pop
es
add
xchg
das
jle
add
test
mov
fldz
jge
dec
cmp
je
and
iret
outsl
lock
in
lret
dec
sbbl
sub
ss
fcomps
xchg
in
add
mov
sbb
pop
xchg
mov
xchg
out
inc
aaa
into
mov
dec
dec
push
or
shrb
mov
ljmp
in
addr16
push
cs
add
dec
test
ja
mov
data16
enter
mov
jl,pn
pop
push
pop
push
fimull
push
cmp
mov
mov
jp
and
push
mov
sbb
outsl
lcall
cld
pop
movsb
sub
std
test
cmp
repnz
dec
dec
dec
stc
stos
sbb
ret
cmc
test
sbb
outsb
mov
jle
adc
add
repz
push
shr
fcoml
movsb
pop
loope
jmp
clc
into
scas
insb
adc
mov
mov
jge
or
sbb
cwtl
test
xor
xchg
and
xchg
test
mov
shrl
lret
sti
ja
nop
add
mov
inc
mov
inc
rcrl
mov
int
push
or
inc
dec
int3
adc
jl
pop
loope
and
lret
cld
cld
in
jp
aam
and
lret
fidivl
jne
xchg
scas
cmpsb
add
shlb
push
pusha
push
fisttpll
or
ljmp
fstps
cs
inc
push
inc
xchg
ds
lock
cmp
adc
push
mov
incl
lds
and
inc
jl
mov
lea
and
rclb
or
rcrl
adc
pop
push
addl
push
mov
inc
or
imul
or
push
mov
mov
out
dec
enter
jge
das
iret
scas
pusha
sub
cs
pop
xor
ret
test
jle
cmp
mov
stos
pop
or
push
mov
lcall
icebp
xchg
sbb
incl
sbb
mov
int
mov
lds
add
jg
mov
cmc
mov
in
aaa
mov
repz
dec
push
fwait
imul
idivb
xchg
outsl
mov
incl
int3
add
inc
jnp
fmull
outsl
mov
cwtl
push
das
xor
subl
addr16
dec
xlat
jae
pop
mov
mov
dec
sbb
mov
push
loop
cmpl
mov
popf
mov
sbb
fcompl
ja
xchg
fiaddl
jge
pop
mov
cld
sbb
cli
out
lods
jp
mov
pusha
out
mov
stos
imul
call
scas
cmp
outsl
aad
jb
jbe
mov
addr16
popf
ret
inc
push
out
or
xor
movsb
push
sbbb
adc
loop
pop
xchg
cltd
das
jmp
aaa
jbe
pop
test
gs
mov
movsl
dec
mov
mov
jmp
jo
cmc
test
xchg
push
daa
cmpsl
test
dec
loope
sbb
nop
add
add
jnp
and
lea
or
nop
add
push
int3
cltd
add
mov
mov
lea
fcmovb
cmc
sub
sub
add
add
pushf
mov
dec
insl
sub
xchg
cmpsl
out
lcall
popa
daa
and
pop
sub
mov
mov
cld
lods
or
jecxz
cmp
scas
or
rcrl
rcrl
sbb
jo
push
add
add
leave
cmp
lea
mov
pop
imul
xchg
nop
add
inc
inc
mov
or
mov
dec
sub
pop
push
and
dec
lods
ljmp
popf
pop
das
jge
or
pusha
cltd
test
add
dec
push
push
out
and
xor
les
aad
xchg
data16
cli
stos
jns
and
push
cli
add
cmc
jo
cmp
xor
aaa
cwtl
fcoml
jmp
xchg
data16
jl
mov
lock
in
dec
dec
aad
push
mov
daa
lds
and
sub
out
mov
xor
mov
lods
jge
cmp
cltd
lods
xor
add
mov
cld
sub
add
add
pop
pushf
into
dec
mov
pop
in
shll
xor
cmp
or
or
adc
ret
pop
dec
pop
aaa
fldl
call
mov
iret
push
js
roll
into
push
ror
mov
push
arpl
js
pusha
inc
sahf
cmp
mov
dec
lcall
sub
mov
stos
mov
iret
sbb
lret
cld
xchg
scas
jbe
add
cmp
sub
aad
xchg
jbe
fidivrl
stc
insb
fisubl
stos
lret
outsl
adc
dec
add
imul
loop
push
or
lods
insl
sbb
cmp
adc
gs
sbb
sub
push
adc
and
xchg
enter
insb
dec
dec
push
in
pop
ljmp
lock
jl
mov
fwait
sbb
adc
sti
and
dec
add
add
adc
jecxz
test
push
xchg
sbb
and
jnp
test
arpl
jnp
mov
mov
add
iret
push
jns
jne
sub
jecxz
in
outsl
or
xor
call
test
sahf
loop
inc
and
and
sbb
stos
lods
mov
add
imul
push
mov
lods
inc
jne
mov
sub
adc
pop
nop
out
mov
clc
and
fcmove
lock
mov
pop
xor
or
bound
push
fisubrl
mov
jns
pop
mov
pop
loope
inc
mov
leave
loope
jo
xchg
rclb
int
nop
fistl
insl
int
inc
xlat
cmp
and
or
test
fldt
pop
sub
enter
fsubrp
xor
fs
xchg
pop
sub
stos
into
imul
mov
adc
ss
fcomps
push
push
cs
or
test
iret
out
in
int3
mull
andb
data16
push
add
mov
xor
fs
fdivrp
sbb
jb
loop
mov
mov
in
call
addr16
repz
dec
and
pop
cmpsl
xor
add
cld
pop
cmp
imul
test
sbb
sub
fwait
mov
jns
sub
ret
pop
fs
xor
adc
hlt
add
add
insl
push
mov
outsl
add
cmp
cmp
lret
and
jle
inc
decl
dec
pop
cmc
ljmp
mov
mov
movsb
mov
movsl
lods
mov
movsl
mov
out
rcrb
dec
add
stc
cli
test
popf
fxch
and
add
add
add
add
cmp
push
push
ret
jno
loop
sub
adc
add
mov
xchg
jle
pop
pop
or
jne
arpl
xchg
scas
repnz
mov
shl
adc
aaa
cmp
xchg
pop
lea
and
mov
push
and
cmp
and
insb
pop
movsb
jne
mov
dec
lret
or
cld
add
mov
arpl
imul
cmp
scas
jno
imul
inc
cmpsb
xor
mull
push
pusha
mov
int3
mov
dec
popf
xchg
xor
pusha
adc
jno
loope
jnp
test
std
arpl
or
add
push
icebp
pop
jle
clc
push
or
cli
push
stc
pop
adc
cltd
mov
fsubrs
out
mov
jp
push
push
mov
xor
cmp
sbb
sbb
add
mov
dec
daa
ss
fisubs
loop
jle
jmp
nop
imul
rcll
xor
jae
jge
mov
push
or
pusha
mov
mov
sub
pop
scas
push
pop
into
dec
sub
out
std
mov
xchg
mov
fdivrl
ja
push
test
inc
clc
cmp
or
stc
or
rcr
dec
mov
dec
std
mov
and
scas
inc
jg
push
cmpsl
jb
mov
mov
sub
push
pop
dec
mov
lahf
arpl
adc
sbb
xor
add
mov
stc
and
and
roll
orb
xor
jb
clc
adc
xor
mov
repz
in
outsl
push
add
repz
test
enter
sbb
jno
lret
and
xchg
fidivrs
dec
test
pop
cltd
add
add
jmp
pusha
lcall
adc
add
xchg
lods
daa
mov
add
jmp
mov
pop
sub
int3
add
mov
mov
jnp
inc
push
pop
or
mov
xchg
sbb
cwtl
std
pop
push
inc
xor
cmpsl
cmp
jle
mov
int
cmp
cld
cmp
cltd
xchg
jne
fadds
out
rcrb
mov
sbb
push
gs
sub
mov
fwait
mov
loopne
xor
dec
mov
inc
nop
das
fdivrs
out
xchg
dec
dec
inc
jns
mov
pop
add
push
test
dec
lcall
lock
sbb
cmpl
jge
inc
xchg
add
shrl
mov
dec
lcall
pop
arpl
mov
ret
test
dec
mulb
aas
pop
xor
cmc
pop
ret
fmull
adc
xchg
sarl
jne
jns
inc
mov
das
or
xor
sub
add
add
mov
inc
sub
rorl
mov
adc
cld
arpl
cli
cmp
repz
enter
push
jb
int3
mov
or
nop
add
cltd
inc
arpl
std
in
xor
in
jp
scas
fldl
ljmp
add
fwait
inc
jno
adc
add
xor
shll
or
inc
cwtl
xor
push
mov
sub
into
arpl
xchg
adc
sbb
xchg
jbe
aaa
push
subb
and
into
movsl
ficompl
out
mov
ffree
adc
jle
dec
outsb
inc
out
fwait
mov
out
xchg
pop
test
mov
mov
sbb
cmc
mov
insl
push
lods
dec
mov
mov
sbb
pop
xchg
mov
testb
outsb
add
shrb
cmp
pop
addr16
repz
sub
incl
lcall
xor
pop
sub
add
fisttpll
adc
xchg
shlb
out
mov
dec
repnz
sbb
add
lods
pop
and
loopne
data16
cvtpi2ps
sbb
mov
sub
mov
jns
mov
psubd
add
add
addb
mov
enter
es
cltd
sub
cmp
daa
push
js
incl
pusha
fxch
fldenv
adc
call
icebp
fprem
jnp
xor
fists
pop
movsl
sbb
lock
jb
jg
or
aad
mov
adc
hlt
lods
lds
inc
int
ljmp
push
adc
adc
pop
push
xchg
lret
je
mov
mov
cmp
add
add
fildl
adc
dec
jbe
push
aad
ret
cmp
testb
aas
cmpsb
jo
icebp
cmpsl
add
je
xor
and
fwait
ds
pop
push
add
mov
sahf
fdivrl
subb
mov
cmovs
xchg
sub
sub
add
add
in
pop
out
push
pusha
dec
adc
xor
xchg
inc
pop
lahf
cltd
or
mov
dec
repz
addr16
mov
fsubl
push
pop
scas
xchg
fcoms
adc
push
mov
mov
movsb
add
out
pop
clc
int3
dec
push
xchg
mov
stos
ror
push
pushf
loopne
jp
push
sub
sahf
push
lret
add
icebp
into
rcrb
jns
in
mov
popf
call
mov
outsl
aaa
adc
lock
jge
int3
add
das
test
mov
mov
mov
clc
sbb
or
nop
clc
xchg
mov
jno
cltd
test
movsl
inc
fs
pop
mov
fs
add
mov
mov
adc
mov
incb
insl
push
andl
xor
insl
dec
ja
inc
or
mov
movsb
inc
fcmovnb
mov
sar
inc
jg,pt
rclb
cmp
add
add
mov
add
push
repnz
cmpsl
xchg
negl
mov
lretw
ficomps
and
cmp
js
inc
sbb
add
add
je
xor
jne
clc
movsl
inc
cmc
xchg
sbb
dec
sbb
mov
sarl
lods
cmpsl
cmpsl
cmp
push
sti
mov
push
jle
mov
out
mov
sub
cmpsb
add
add
fucomi
push
test
fistpll
cmpsb
ja
or
xorb
mov
add
add
dec
add
add
mov
push
push
lds
cli
stos
gs
movsb
movsb
inc
mov
inc
loope
mov
xor
jbe
sbb
or
fidivl
push
sahf
test
inc
int3
popa
mov
push
adc
xchg
fwait
lock
dec
push
cwtl
add
add
loopne
or
ficoml
ret
push
icebp
aad
xchg
mov
sti
cmp
or
fistl
dec
outsb
hlt
cmp
mov
mov
adc
and
rcrb
fs
dec
jo
call
in
mov
out
add
add
mov
fildll
sub
cmp
dec
adc
and
push
test
lret
bound
add
in
stos
andb
repz
push
add
mov
fisttps
mov
mov
lods
ficoms
jno
pop
adc
dec
sti
pop
pop
mov
inc
sahf
pop
sti
xor
mov
mov
cld
add
mov
cmpsl
loope
mov
lods
das
or
xor
cli
adc
popa
orl
pop
ljmp
shll
cwtl
test
adcl
movsl
add
add
cltd
lcall
pop
inc
adc
movsb
test
addb
ficoml
lods
sahf
stos
adc
pop
mov
and
push
test
inc
mov
add
adc
insl
mov
fsubrs
sub
jl
jle
mov
fs
dec
push
mov
dec
stc
dec
das
std
cmp
xchg
ds
xor
cld
mov
push
outsb
cmp
rcrl
sahf
lcall
and
outsl
clc
mov
xor
and
sbb
cmp
or
adc
inc
mov
daa
xchg
popf
in
adc
gs
data16
fs
adc
incl
push
mov
cltd
xlat
mov
cmpsl
push
add
add
lods
mov
es
pop
cwtl
mov
ss
pop
dec
das
and
clc
pusha
pop
cmp
lret
add
int
cmp
pop
decl
push
sbb
push
add
lods
inc
sbb
push
mov
jns
ret
xor
push
mov
es
movsb
dec
xor
andb
call
jno
orl
cmc
lcall
push
mov
dec
loopne
or
faddl
incl
decl
addl
or
push
lods
sbb
repz
or
jnp
aad
testb
add
xchg
rorb
das
push
add
push
add
add
lret
push
and
lahf
jnp
adc
mov
xchg
sub
sti
call
fst
addb
jg
ds
inc
in
dec
or
lods
mov
dec
mov
lahf
pop
pop
xor
inc
stc
push
xchg
negb
add
arpl
mov
cmpsb
add
add
pop
lret
test
jl
loope
jae
xchg
or
inc
cmpsb
mov
fsubrl
xor
mov
mov
in
sub
and
sbb
incl
fistps
sbb
incl
xchg
and
arpl
rcrb
xchg
cmp
arpl
inc
xchg
cmp
jo
sahf
pop
add
jmp
ret
insl
cmp
mov
pop
movsl
fdivs
cmp
xchg
jg
adc
int
sbb
incl
scas
cmpl
inc
adcb
lfs
push
xchg
in
fcomi
lods
nop
dec
bound
notl
xchg
dec
cli
adc
or
inc
popf
push
jl
and
cmp
outsl
dec
popa
mov
dec
mov
push
mov
mov
shrb
movsl
mov
jmp
pop
fmull
nop
mov
push
xchg
into
iret
fst
mov
je
andl
aad
inc
push
dec
arpl
add
movsl
adc
xor
cmp
add
mov
sarl
scas
je
xor
inc
mov
shrl
sbb
fwait
dec
repnz
shll
mov
dec
shr
mov
call
sahf
lock
push
mov
or
loopne
ret
dec
ret
fcompl
lcall
loope
gs
pop
sarl
sbb
mov
cli
pop
fst
movsl
aas
xchg
and
sbb
mov
stc
add
inc
pop
aam
dec
add
add
les
mov
xchg
into
sub
inc
hlt
js
jecxz
mov
mov
stos
int
aam
lret
pop
mov
loope
std
jbe
fists
or
xor
jae
movsb
or
mov
stos
imul
lret
inc
rorb
add
inc
mov
test
fwait
dec
fiadds
cwtl
outsl
daa
pop
push
and
inc
scas
cmp
mov
clc
fld
cmpsb
pop
les
ja
add
push
fcmovnbe
pop
dec
insl
push
hlt
xchg
dec
arpl
xchg
xor
fmull
jae
cmpsl
jg
add
fwait
inc
mov
cmpsl
lock
mov
ret
jp
incl
leave
enter
not
mov
lret
sbb
scas
repz
sbb
or
je
iret
loop
sbb
jle
pop
pop
sbbl
jge
iret
cmp
iret
add
insb
xor
dec
mov
test
cmpsl
dec
enter
inc
lods
sbb
pop
movsb
ud2
imul
cld
sar
call
scas
int3
iret
lret
mov
bound
stc
or
ljmp
in
push
std
lahf
scas
add
fimuls
addb
mov
lea
incl
notl
aas
mov
fldt
pop
icebp
sbb
nop
jle
adc
pop
lods
arpl
push
xor
add
add
sbb
das
jo
pop
xchg
in
sbb
in
popa
andl
mov
inc
jns
xchg
jge
fsubr
pop
je
xchg
fwait
psrlq
mov
or
pushf
cwtl
lahf
and
pop
mov
out
loop
int
and
push
enter
jnp
jmp
xorb
add
mov
mov
ret
cmpsb
cld
jae
dec
aad
jl
mov
loop
aaa
and
inc
jnp
cmp
inc
fsubrl
adc
add
add
cltd
mov
movsl
pushf
adc
cmpsl
repz
pusha
mov
mov
or
js
inc
mov
push
pop
push
loope
mov
jmp
or
dec
jne
mov
movsb
ret
int
and
mov
push
lcall
lock
jae
xlat
outsb
int
cwtl
call
jbe
mov
pop
cmc
in
pushf
pushf
out
shll
xor
jb
sti
xorb
or
stos
dec
lock
int3
add
popa
fcoml
fs
cld
pop
out
and
xor
mov
mov
scas
jmp
fs
aaa
xor
negb
cmp
shlb
push
mov
xor
mov
push
xor
cmpsb
aaa
sub
sbb
decl
inc
bound
leave
mov
sbbl
add
add
inc
inc
add
outsb
adc
pop
ds
lret
shlb
std
push
les
pushl
jnp
out
adc
mov
lods
push
cmp
out
xor
push
mov
xor
mov
inc
int
in
imul
adc
clc
cltd
xor
outsb
ds
fnstenv
mov
mov
int3
enter
mov
dec
lock
jmp
sbb
pop
mov
push
push
pop
lock
hlt
push
mov
adc
pop
out
add
mov
mov
les
or
mov
or
out
mov
imul
bound
jg
test
cmc
xchg
sbbb
dec
lret
sbb
divl
or
ds
xor
leave
es
jp
pop
sbb
and
dec
xor
jbe
mov
add
mov
inc
mov
call
aad
test
out
dec
xor
and
les
cmp
cmpsl
push
test
arpl
dec
lahf
outsl
lea
add
add
push
push
clc
pushl
bound
arpl
jnp
mov
and
push
ret
ficoml
out
loop
js
fdivrl
dec
xor
sahf
loopne
int3
dec
sbb
nop
add
call
hlt
jl
das
dec
arpl
shr
jmp
xchg
or
decb
icebp
jle
cli
mov
fistpl
adc
pop
loop
mov
and
xchg
jae
addr16
outsl
lea
imul
add
repnz
pop
dec
loop
das
dec
add
add
dec
fwait
addl
lods
adc
lea
inc
lret
bound
popa
sbb
int3
pminub
pop
jle
rcll
inc
push
enter
xchg
aaa
mov
dec
xor
sbb
dec
dec
stc
repz
pop
cltd
aam
or
cwtl
popa
jbe
jg
cmp
jle
jge
mov
xor
in
iret
aas
ss
out
push
aad
movsb
popf
std
xor
and
and
call
adc
sub
xor
incl
incl
std
test
iret
add
push
dec
rclb
pop
mov
mov
inc
sub
mov
subb
push
or
stc
mov
jbe
aaa
jg
fs
cmpsb
adc
popl
call
ret
pop
pop
dec
sub
add
fcoml
xchg
push
loopne
mov
cli
inc
xorb
pusha
xchg
jg
sub
pop
pop
fidivrs
add
add
fdiv
nop
enter
pop
lcall
xchg
iret
push
sub
adc
jb
push
retw
push
lea
mov
push
cmpsb
sti
mov
cmpsb
pop
ror
test
add
lcall
aaa
test
fists
shrb
mov
imul
sbb
call
cmpsb
cmpsb
pop
inc
pop
xor
data16
stc
mov
das
and
mov
ret
pop
and
sbb
adc
mov
and
outsb
and
cmpsb
pop
add
or
out
iret
mov
lods
sbb
ds
adc
loope
mov
test
adc
test
mov
mov
mov
mov
dec
cmpsl
cmpsl
popa
adc
jecxz
in
inc
shlb
stos
repnz
aam
sub
xor
iret
test
out
jmp
mov
xchg
push
mov
ljmp
jle
mov
xor
test
stc
fsub
lods
dec
jno
dec
into
dec
imul
js
imul
in
adc
sbb
sub
add
lods
xor
in
mov
mov
mov
cltd
sbb
xchg
jl
imul
enter
mov
test
jo
mov
xor
pop
push
mov
cmp
mov
xchg
adcb
push
push
test
or
or
dec
push
shrl
in
xor
mov
or
add
mov
in
rorl
sbbl
fistpll
movsb
flds
in
out
call
mov
jge
and
mov
stos
gs
pushf
inc
adc
imull
flds
jl
movsb
gs
add
add
lea
incb
iret
mov
jb
jnp
sub
lret
jne
mov
sub
adc
ret
jb
sub
dec
push
xchg
ljmp
or
inc
dec
mov
mov
cmc
leave
pmuludq
jb
shrl
xchg
sarb
andl
cmp
mov
inc
sub
data16
leave
outsl
sbb
push
and
sahf
jne
sub
mov
sub
imul
add
add
add
cmp
shll
push
push
or
adc
lods
lods
shl
sbb
add
inc
sahf
mull
repz
in
andb
jp
push
stc
inc
cmp
int3
add
roll
into
int
push
mov
je
push
and
pop
pushf
xchg
or
lds
push
add
push
inc
adc
sbb
ds
jbe
cmp
xor
daa
pusha
jle
jae
stc
rcll
mov
lea
data16
dec
sti
or
mov
cmp
shll
add
add
push
xchg
sbb
inc
test
movaps
or
into
jb
les
jno
int
shrl
leave
jo
fstpt
and
jo
lods
mov
mov
stos
jp
outsl
inc
pop
jmp
pop
dec
and
ja
mov
mov
cmp
push
push
xchg
sub
inc
push
mov
test
xor
repz
and
jl
inc
cmp
pop
jb
arpl
cmp
iret
jl
mov
cmp
out
push
lcall
sahf
sbb
push
mov
call
push
shl
adc
movsl
push
dec
lock
das
loop
push
jg
add
stos
pop
inc
hlt
aas
add
mov
jnp
push
adc
fadds
dec
xchg
movsl
mov
popa
pop
cmpsl
icebp
ret
mov
out
je
call
mov
add
add
adc
cmp
enter
leave
mov
int
mov
lods
ss
inc
js
cmc
xchg
iret
xchg
mov
test
xchg
sbb
lods
mov
inc
dec
jns
test
add
xor
mov
mov
push
add
xchg
in
mov
cmp
inc
mov
sub
aad
pop
jmp
inc
aas
adc
repnz
mov
jb
xchg
add
add
dec
leave
cmp
iret
stos
push
lcall
and
lret
push
pop
xchg
xchg
fistpll
cmc
test
enter
jg
or
aam
jb
xchg
mov
inc
nop
cmp
jg
adc
ja
mov
sub
stos
pop
insb
push
push
popf
shll
into
mov
push
clc
pushf
inc
fdivrs
and
or
mov
popf
rcrl
lea
fdiv
xor
mov
addr16
popf
inc
shll
cmp
js
popf
add
stos
fs
cltd
shll
add
add
je
adc
mov
loop
mov
int3
add
out
std
stos
cmpb
insl
mov
in
insl
ret
push
mull
in
iret
xchg
cmpsl
std
fnstenv
enter
stos
dec
enter
std
xor
xchg
subb
cmp
mov
mov
cmp
jne
jp
sub
sub
mov
adc
bnd
inc
out
sub
xor
pop
mov
repz
pop
add
mov
loop
cld
int3
sbb
jp
arpl
notl
add
add
mov
dec
ret
mov
movsl
ss
rcl
cltd
inc
repz
pop
or
push
out
adc
push
mov
pop
sti
cwtl
andnps
dec
movsl
sbb
loope
lahf
lods
jae
pusha
loope
int
or
jne
fwait
loopne
mov
add
add
lret
insb
mov
incl
mov
inc
jnp
fsubrl
add
in
sbb
xchg
pop
and
mov
pop
dec
movsb
jmp
outsl
dec
das
push
cmp
mov
in
inc
mov
lds
dec
xor
add
inc
ljmp
push
test
mov
cmpsl
lret
xlat
or
loope,pn
jecxz
and
xlat
mov
sub
pop
mov
js
inc
ficompl
rcll
call
and
enter
jmp
pop
dec
inc
jae
nop
add
and
jno
decb
add
mov
stos
pop
sar
js
pushf
clc
and
mov
add
add
jne
cmp
in
add
call
sub
xlat
fs
cmp
fiaddl
loope
mov
push
xchg
dec
shrl
pushl
push
xchg
pop
fsubrl
push
jp
rclb
pushf
push
push
repz
xchg
repnz
add
pushf
dec
and
and
dec
or
xchg
call
in
cltd
shrl
inc
scas
addr16
outsl
mov
jge
jmp
test
cmp
jp
pop
hlt
mov
xchg
rcrb
jmp
bound
gs
nop
stc
push
add
fildl
cmp
pop
and
dec
add
sbb
adc
inc
js
pop
xchg
xchg
mov
imul
loopne
clc
mov
adc
add
ljmp
mov
incl
ljmp
xchg
xor
dec
cs
fbstp
inc
add
add
imul
or
cmp
daa
dec
push
into
frstor
cltd
push
dec
das
xchg
fadds
or
nop
inc
xor
in
pop
adc
mov
pop
ret
ret
jbe
sub
mov
movsb
out
jle
add
lcall
aam
lock
adc
stc
inc
enter
jo
pop
push
mov
and
out
xchg
arpl
mov
mov
in
jae
dec
bswap
lds
int
inc
adc
scas
cs
add
add
test
sbb
push
add
cli
mov
mov
movsl
or
fisubrl
inc
push
loop
fists
insl
rcrl
stc
xor
jnp
sahf
jae
mov
lock
add
adc
std
jns
jns
mov
sub
es
add
add
out
mov
shll
fbld
popa
jmp
pop
add
or
and
mov
and
decb
sbb
mov
cmp
xchg
cmpb
xchg
ja
push
lcall
mov
cld
adcb
rorb
daa
add
add
mov
outsb
dec
repz
outsb
cwtl
hlt
test
add
push
inc
add
mov
iret
cltd
repnz
and
call
fucom
cmc
jae
mov
dec
iret
inc
lcall
sub
lcall
sbb
popl
cmp
lcall
add
and
pop
pop
mov
nop
push
mov
sbb
fstpl
push
inc
and
dec
pop
inc
icebp
xchg
ss
mov
or
mov
push
mov
dec
testb
arpl
sub
pop
mov
mov
and
push
push
out
stc
jno
sub
fld1
xor
int
sub
test
push
cli
cwtl
add
mov
sub
cmp
adc
insb
xchg
scas
sarl
mov
and
mov
mov
mov
adc
mov
dec
xchg
lret
data16
xor
fbld
adc
cmc
and
int
out
mov
jo
cs
in
lret
enter
stos
rolb
fdivrl
lods
sti
push
push
lock
xchg
cmpsl
pop
mov
inc
js
push
into
lock
cvttps2pi
out
test
out
dec
add
sbb
sti
mov
lahf
xchg
sarb
fstps
or
mov
mov
popa
in
inc
dec
jnp
lock
xor
jl
pop
push
int
je
cmc
xchg
fiadds
lods
pop
add
divb
insl
pop
lock
mov
dec
sub
rclb
nop
xchg
std
xchg
xchg
hlt
lahf
inc
aad
jne
into
stos
sahf
mov
mov
sub
cli
popf
adc
bound
dec
fdivrl
lods
sbb
fisttps
sub
in
int3
mov
call
subl
and
out
mov
fmul
faddp
mov
mov
dec
or
inc
lods
push
adc
push
cmp
enter
mov
clc
dec
xchg
repz
inc
cmp
add
mul
in
in
hlt
repnz
cltd
dec
subl
int3
push
in
out
inc
and
test
add
xor
ficoms
cmp
dec
lds
dec
sbb
inc
push
aas
ja
in
xchg
mov
rcrl
clc
mov
pop
cli
fildll
xlat
mov
stc
ds
jl
stc
fldenv
push
pushf
mov
pop
add
js
js
xchg
inc
stos
cld
lret
int3
mov
out
mov
daa
xchg
xchg
test
dec
test
mov
cmp
xchg
fwait
test
inc
mov
add
filds
mov
add
add
out
xchg
outsb
icebp
dec
mov
add
add
and
mov
addb
ret
jbe
sbb
dec
ret
mov
lea
cmc
cmpsl
push
call
lods
inc
std
fidivs
popf
addl
inc
pushf
fisubrl
aaa
ja
inc
enter
in
or
and
mov
sbb
aaa
xlat
sbb
xchg
sub
dec
mov
ret
sbb
xor
fnstcw
inc
movsl
adc
and
subb
xlat
mov
add
and
sbb
mov
stos
xorl
lea
faddp
xor
fimuls
cs
in
punpcklbw
das
or
or
dec
out
nop
dec
push
adc
decb
shl
sbb
clc
sbb
and
adc
sub
aas
cmpsl
push
mov
insl
loope
test
add
sub
shrb
jle
jge
jl
in
push
jae
adc
xor
dec
mov
add
dec
movsl
cltd
aaa
or
mov
jb,pn
outsb
dec
mov
xor
add
add
mov
imul
cmc
lods
jle
test
mov
cmp
inc
cli
faddl
sub
fidivs
inc
out
push
psrlw
fwait
pop
sbb
dec
pop
dec
fildll
cli
pop
push
pop
in
mov
loope
das
ds
add
mov
mov
add
mov
rol
rorl
in
lea
push
mov
mov
int
dec
mov
cmp
scas
push
add
in
mov
popa
insb
pop
dec
pop
movsb
cmpb
sbb
mov
sub
cmpsb
xor
sbb
in
sbb
add
cmp
or
adc
pop
int
stos
int3
sbb
pop
xchg
ret
scas
in
std
lret
int
ss
test
lock
cmp
cltd
add
das
add
add
jae
test
jmp
sbb
push
mov
sbb
mov
add
xchg
mov
mov
pusha
mov
outsl
repnz
insb
negl
ret
jo
cmc
popa
daa
imul
pusha
xchg
loope
xchg
in
lcall
lcall
pop
mov
popf
ret
aam
ret
xchg
add
add
dec
jle
subl
out
push
stos
fidivs
lods
push
mov
inc
and
scas
pop
pop
sahf
jmp
ret
or
out
bound
repz
add
add
lock
sub
js
inc
add
adc
pop
cmpsl
push
or
incl
lods
pushf
xor
cmp
xchg
ja,pn
fnstcw
repz
cmc
inc
adc
jl
mov
insb
rolb
js
push
jno
pop
cmpb
pop
out
pushf
add
inc
xor
cmp
or
int3
pusha
mov
or
lret
mov
fdivrs
jnp
movsl
jle
jp
add
add
xor
xchg
int3
inc
mov
mov
xchg
mov
pop
aad
sub
inc
mulb
sbb
popf
mov
pop
repnz
xchg
inc
aas
cli
pop
cmpb
filds
call
and
push
jl
sub
ja
fwait
outsb
jmp
cs
arpl
sub
xor
push
into
repz
push
cli
mov
lea
addr16
lods
add
inc
ja
or
mov
hlt
mov
add
add
pusha
pop
mov
push
push
pop
sub
repnz
nop
lea
adc
notl
nop
add
adc
sub
popa
movsl
or
insb
insl
fcoml
test
nop
and
xorl
stc
dec
rolb
pop
jp
adc
xchg
outsl
out
add
cmp
insl
and
roll
lcall
dec
xor
inc
fdivrp
cmc
gs
fldl
nop
mov
add
fs
mov
xchg
jbe
jmp
iret
mov
mov
push
and
lahf
inc
cmpsl
cmp
mov
mov
add
jle
mov
mov
divb
ror
rcr
loop
mov
mov
outsb
dec
icebp
test
mov
popa
xor
pushf
mov
push
inc
cli
negl
lods
in
lret
frndint
inc
xor
sbb
add
out
ljmp
add
cmpsb
js
jae
jl
mov
xchg
in
in
testl
xchg
and
std
negl
cmp
and
subb
cmpsb
sbb
inc
out
push
daa
xor
out
fs
inc
push
and
stos
xchg
jmp
fwait
cmpsl
push
add
add
mov
mov
inc
inc
and
xchg
sbb
scas
mov
mov
mov
fadds
lret
add
imul
cmp
lcall
or
push
repnz
or
loop
cli
xlat
cld
shrb
mov
push
jg
and
xor
lret
fwait
pushf
sarl
nop
sbb
or
sbb
add
sbb
cli
xchg
inc
xor
in
rcll
inc
dec
adc
mov
mov
std
andb
sub
add
leave
mov
imul
fcmove
lahf
or
outsb
xor
scas
dec
push
lcall
les
test
dec
jno
pop
ss
insl
fidivl
dec
adc
icebp
add
xor
sub
pusha
cmc
lock
dec
cltd
cs
pop
pop
and
imul
dec
ja
fists
out
out
jmp
js
lea
pop
mov
adc
inc
test
sub
in
pop
outsb
or
add
and
push
fidivrl
dec
mov
clc
adc
testl
and
shll
add
aad
outsl
pop
inc
std
in
push
jns
mov
pop
lods
and
call
orl
sub
fdivs
mov
repz
aaa
sub
mov
fisttps
push
testl
mov
imul
je
push
and
dec
jne
inc
jb
in
jle
add
add
and
cmpsl
xchg
mov
imul
mov
out
shrl
adc
sub
sti
pop
mov
fcomps
sarb
andl
push
jle
pop
pusha
cmp
jne
sbb
enter
ret
daa
add
add
sbb
mov
dec
cmp
inc
hlt
cmp
das
mov
lcall
sbb
cs
push
out
shrb
add
scas
mov
pop
push
and
push
xchg
in
dec
std
fcomps
scas
es
or
push
lock
add
insl
push
mov
xchg
lods
movsl
mov
hlt
outsb
aas
sahf
adc
mov
mov
mov
enter
add
stc
mov
cli
clc
cld
orb
not
repnz
xchg
xor
mov
fadd
cld
xorb
or
arpl
cmp
aaa
add
mov
mov
push
mov
sbb
mov
adc
mov
sbb
lds
push
dec
cs
pop
and
mov
test
or
sti
and
fidivs
insb
inc
bound
clc
fldt
daa
xor
jo
mov
roll
sahf
loopne
mov
mov
ss
adc
pop
shr
mov
inc
and
lods
jo
test
repz
dec
push
fisubl
sbb
incl
jecxz
enter
lcall
scas
cmp
add
or
ja
push
std
mov
movsl
jo
cld
mov
psubusw
and
cwtl
into
pop
imul
push
xor
push
int3
test
andl
or
faddl
dec
inc
into
fnstsw
xchg
pop
mov
out
dec
or
popf
rorb
mov
into
push
ds
ds
inc
xchg
jne
cmp
xchg
add
lock
xor
and
adc
fldcw
mov
cmp
inc
lcall
mov
not
out
add
test
xchg
cmp
jb
dec
or
mov
fldl
jp
add
stos
pop
mov
aaa
aas
adc
xor
xchg
cli
pop
add
sarb
push
rclb
jl
mov
pop
sub
cmc
dec
or
cmpsb
pop
popa
in
or
push
jns
sub
neg
out
xchg
das
addl
arpl
push
adc
int
out
leave
stos
addl
push
fwait
shrb
cmp
xor
out
rcrl
sti
out
sub
call
ja
mov
cmc
loop
mov
call
pop
pop
jp
out
iret
push
or
inc
push
imul
push
pop
cmp
ss
das
rclb
push
es
data16
adc
xchg
sarl
js
sub
sub
xchg
into
jl
ja
sahf
repnz
dec
lods
jae
test
adc
je
lds
jmp
mov
outsl
dec
stos
imul
inc
enter
push
mov
rclb
test
lret
mov
sub
dec
add
add
dec
mov
mov
and
inc
sbb
les
jge
shrl
push
in
mov
sbbl
or
popf
dec
mov
jns
and
ss
push
fisttps
mov
push
outsb
sub
xchg
mov
ds
push
and
mov
pusha
mov
cli
mov
xchg
sbb
arpl
push
icebp
movsl
xchg
cmp
movsl
ljmp
xor
adc
insl
sahf
shrb
pop
add
loopne
adc
xchg
sbb
lret
sarl
test
scas
decl
in
jl
or
pop
xor
push
push
mov
adc
dec
std
push
mov
xor
mov
pop
in
jecxz
cmp
and
dec
dec
dec
mov
aad
prefetcht0
cs
test
add
xchg
fwait
ljmp
inc
and
adc
test
aam
sub
movsb
sbb
out
cmp
cltd
xchg
ljmp
pop
push
mov
push
out
mov
insl
rcll
push
pop
xchg
and
lock
xchg
xchg
popf
movsb
mov
aam
test
sti
inc
xchg
call
data16
sub
or
mov
cmc
dec
or
xor
sar
test
add
sub
xor
adc
in
in
mov
sbb
sub
push
pushf
add
xchg
xchg
aad
rcl
adc
pop
pop
sti
int
jb
pusha
cmp
push
push
cs
or
aad
dec
scas
add
std
inc
je
arpl
sbb
ficoml
and
stos
dec
adc
inc
rcl
adc
testb
in
stos
cmp
push
jp
push
and
inc
ja
cmp
push
pushf
push
out
incl
ljmp
stc
xor
sub
scas
ss
mov
mov
in
jle
adc
out
mov
outsb
je
cmp
rcrb
xor
jno
mov
cmp
in
arpl
arpl
push
mov
out
xor
imul
ret
push
mov
push
fwait
out
sub
int3
cmpsl
xchg
cmp
cmpb
add
add
sub
mov
loopne
push
or
ljmp
roll
jns
ss
loop
xchg
inc
loop
or
movsb
in
inc
xchg
cli
push
js
adc
rclb
std
mov
call
push
xor
out
lahf
or
imul
cmp
inc
test
aam
pop
adc
shll
mov
jl
pop
inc
daa
std
and
adc
push
jns
or
sbb
fnstcw
jnp
mov
mov
push
jae
in
add
jl
flds
pop
mov
add
mov
cmp
xchg
ret
cmc
push
cmp
loop
rcll
sbb
sahf
inc
aam
add
mov
insb
jae
stc
lds
add
add
push
arpl
mov
lods
adcb
stos
jnp
pop
and
mov
push
mov
add
push
lret
adc
lods
pop
cmp
loopne
mov
aas
fidivs
popf
rcll
dec
ja
lret
dec
mov
push
xor
enter
xor
cwtl
pop
mov
in
rcrb
xor
lods
push
cmp
imul
pop
incl
cmp
pop
push
pop
add
subb
dec
outsl
test
popf
add
dec
mov
in
pop
mov
int3
sbb
movsl
out
xor
aam
cs
mov
lea
nop
add
pop
lcall
cmp
adc
xchg
jp
mov
call
mov
es
push
xchg
push
mov
dec
jmp
pop
xchg
cmp
dec
adc
jno
mov
dec
in
adcb
inc
adc
xor
mov
mov
jmp
mov
filds
into
cwtl
add
scas
xlat
ss
add
out
mov
mov
xchg
sub
mov
mov
inc
pop
pop
lcall
jle
divb
popa
loope
mov
inc
pop
pushl
negl
test
int
adc
leave
stos
dec
cwtl
mov
cmp
push
dec
cmpsl
mov
pop
mov
push
add
sbb
and
pop
dec
stos
lock
stos
push
pushf
sti
fbld
les
bound
sbb
jns
shll
stc
fisubrs
add
add
xor
in
inc
xor
xor
push
adc
fldl
cmpsb
pop
and
aaa
aam
xchg
test
push
sbb
pushf
push
movsb
mov
add
mov
mov
roll
push
xchg
ret
rcll
lods
mov
dec
and
hlt
dec
shll
xchg
stc
test
jmp
xlat
fiaddl
lds
sub
rorl
sub
sbb
nop
loopne
movsl
movsb
sbb
or
add
add
xchg
mov
sbb
movsl
jb
ss
fwait
shrl
mov
xchg
jge
jne
mov
mov
inc
pop
into
in
push
inc
jnp
xor
and
outsb
jmp
dec
adc
aaa
lock
andl
and
mov
sbb
lahf
mov
mov
cs
dec
stc
xchg
cmp
sub
nop
add
adc
pop
mov
push
pop
dec
jg
dec
or
shll
aaa
out
test
cltd
jle
mov
add
bound
mov
xor
add
and
incl
popf
dec
xor
out
nop
dec
xor
or
dec
aaa
xchg
loopne
je
push
roll
pop
stos
outsb
mov
or
test
pop
sub
gs
xchg
adc
push
pop
movsb
push
orb
test
sbb
add
cmp
hlt
inc
mov
jl
jp
scas
pop
adc
mov
pop
and
jle
jnp
mov
jne
jnp
mov
movsl
xor
scas
xchg
push
test
fmuls
fisubrl
addr16
mov
call
rorb
ret
cmc
sti
dec
xor
cmp
nop
adc
mov
sahf
fsin
xlat
cmp
in
cmp
arpl
xchg
pop
mov
jnp
sub
lds
pop
outsb
mov
lods
bound
lret
hlt
push
out
or
inc
scas
into
adc
mov
xor
fcmovnu
mov
or
mov
mov
xchg
sarl
add
pop
xorb
scas
adc
jg
outsl
or
jo
rcr
ljmp
scas
jo
xor
cwtl
aad
inc
mov
and
cmpsl
mov
clc
inc
cmpsb
inc
lds
push
call
and
out
lea
movsl
jnp
push
pop
cli
cmp
adcb
jle
pop
sub
in
xor
movsl
ret
sbbb
mov
and
dec
or
aam
insl
sbb
aad
add
add
mov
test
xchg
add
popa
jne
out
and
adc
xchg
mov
fstps
imul
imul
loop
xor
mov
xchg
idivl
sti
stos
ret
jne
das
loopne
popf
dec
add
sub
ljmp
mov
incl
ja
fdivrs
mov
loop
push
xlat
jo
insb
mov
jbe
mov
mov
sub
imul
fists
sub
and
fdivrs
das
dec
inc
and
pushf
stos
mov
int
add
and
xchg
jl
pop
add
rorb
jmp
add
xchg
sbb
mov
jg
sbb
sbb
test
jne
mov
jge
js
imul
loope
cld
add
add
imul
sub
xlat
sbb
mov
enter
add
out
add
sub
push
std
xor
icebp
into
cmpsb
mov
ds
inc
mov
fwait
pusha
aad
sub
add
cmpsb
aaa
pop
in
cmp
add
inc
xor
lahf
movl
daa
ja
mov
pushf
push
xor
clc
adc
ljmp
loop
add
dec
xor
dec
aas
or
cmova
nop
mov
xchg
inc
sub
cmp
and
repz
push
sub
das
hlt
pop
aas
jnp
seta
aaa
sub
and
jl
lahf
adc
hlt
jne
ljmp
leave
stc
xchg
xchg
cmp
data16
insb
loopne
iret
insb
jmp
fcomps
adc
jge
pushl
jae
pop
and
daa
xchg
dec
sub
sahf
es
add
add
cmp
sbb
xchg
ret
pop
xor
out
testb
mov
shlb
testl
jmp
call
imul
sbb
popf
cmpsb
sub
loope
lret
push
fmuls
scas
outsl
mov
cwtl
inc
fstps
out
add
shlb
adc
mov
popf
jb
adc
shrl
gs
sub
arpl
inc
xchg
pop
jnp
das
pop
push
or
mov
popf
push
sub
mov
jmp
das
jmp
nop
jae
or
sbb
dec
mov
sbb
xchg
pushf
sbb
adc
or
cmpsl
xor
pop
pop
addr16
or
xor
xchg
dec
mov
mov
pcmpgtd
inc
fdivrs
sbb
es
jg
push
adc
inc
sbb
mov
jp
sbb
pusha
or
shlb
dec
dec
mov
add
stc
mov
pop
jmp
add
add
iret
orl
add
lock
aad
cmp
pushl
or
cmpsb
das
in
mov
xor
sahf
test
inc
arpl
and
dec
cltd
jnp
mov
aas
adc
fstpt
xchg
sub
mov
fstpl
loopne
push
stc
xor
jns
out
out
lock
mulps
ficoms
pop
pop
lock
mov
add
daa
adc
test
jecxz
test
popf
out
cmp
mov
adc
pop
subb
test
xchg
inc
mov
lahf
sbb
xor
out
sbb
push
add
adc
and
test
cli
jle
in
outsb
clc
test
sbb
add
add
or
scas
inc
xor
sub
into
pushf
dec
fmuls
mov
xor
xchg
dec
mov
push
ret
sahf
lahf
out
inc
cwtl
add
aas
stos
mov
jae
fidivl
inc
mull
fildl
test
nop
in
jb
pop
out
adc
fisttpll
repz
cltd
dec
in
addr16
je
lods
test
scas
xor
push
inc
fimuls
fnstcw
mov
test
andb
or
movsl
xchg
mov
and
in
mov
xor
in
xor
mov
aad
cmc
insl
es
lea
cmpsb
and
inc
jge
pop
pop
inc
mov
ds
gs
orb
test
jb
es
sbb
mov
clc
rcrb
jbe
cli
hlt
add
cmp
into
scas
stos
jo
ja
jmp
or
lret
andb
xchg
int
inc
mov
repz
inc
add
dec
mov
clc
xor
add
add
inc
mov
in
arpl
sbb
or
cld
sub
scas
mov
mov
dec
cmp
add
dec
pop
test
push
js
inc
std
mov
xchg
mov
loope
fwait
outsb
test
repz
jle
fnstenv
adc
add
aas
std
scas
adc
cmp
push
negl
adc
adc
add
adc
mov
dec
daa
das
sahf
scas
and
imul
sub
fcmove
sbb
pushf
jns
or
mov
insl
fiadds
jne
rorl
mov
push
les
sbb
xchg
inc
jae
push
add
movsl
leave
or
notb
mov
cmp
fwait
mov
test
aaa
popl
and
xchg
cmp
dec
into
add
add
stc
push
jns,pt
int
repz
js
out
pop
test
rolb
sub
int
xor
sub
inc
arpl
inc
inc
jl
jle
xchg
cmpsb
jge
xor
arpl
xchg
mov
aad
mov
sub
xlat
push
repz
cs
cmp
movsl
mov
cmp
ljmp
and
adc
int3
add
pop
pop
jne
adc
dec
int3
push
inc
push
mov
push
sub
cwtl
add
rcr
shrb
cmp
pushf
xor
xchg
or
cltd
pushf
popa
out
ja
and
test
loop
adc
or
xor
cmp
pop
xchg
loop
lods
and
cmpl
xchg
push
cltd
mov
lock
stos
mov
mov
xlat
nop
in
int3
push
and
sbb
jge
or
pop
lds
imul
int
cmp
and
enter
test
scas
jns
lea
std
es
jl
and
mov
shrl
adc
pop
movzbl
test
std
cmpsl
xlat
hlt
cmp
shr
push
sub
movsb
mov
xchg
jle
scas
mov
out
stos
loope
jo
int3
add
shlb
push
jmp
add
int3
test
xchg
stos
adc
xor
sub
jg
cli
jecxz
rcll
addps
rcrl
inc
out
adc
out
shlb
fisubrl
push
mov
or
fisubs
add
cmp
jo
es
push
push
sbbl
sub
mov
fdivrl
and
jae
stc
mov
mov
insb
adc
leave
rolb
nop
add
fcompl
xor
mov
jle
mov
sbb
aas
sub
xchg
rcl
lahf
mov
test
pop
xor
repnz
aaa
es
imul
sub
jne
push
lods
cmpsb
filds
nop
movsl
loope
int
loopne
inc
mov
or
fcmovbe
add
adc
aam
int
sarl
in
iret
dec
jo
out
push
mov
push
add
imul
add
add
xchg
sti
inc
mov
pushf
push
cld
cltd
inc
xor
sbb
hlt
je
xchg
xchg
cwtl
int
into
lret
rorb
insl
xor
gs
fmuls
sti
iret
mov
test
repz
imulb
into
arpl
push
cli
jge
xchg
popf
cmp
std
xchg
out
enter
ljmp
repnz
mov
and
aaa
add
notl
call
mov
pop
test
pop
inc
or
sub
push
dec
mov
sub
test
cwtl
rolb
bound
fcompl
fcmovne
icebp
cmpsb
mov
xor
inc
andb
xor
mov
mov
mov
sub
incl
decl
jae
pop
and
cmpsl
aaa
je
or
fs
scas
stc
or
fisubl
mov
adc
subb
pop
lock
arpl
shlb
pop
popf
sub
inc
in
mov
lahf
mov
mov
aaa
cmpb
lret
xor
popf
imul
sti
js
shrb
mov
in
push
sbb
dec
mov
mov
out
or
mov
xor
clc
and
test
std
add
add
or
dec
lret
jbe
pop
jae
sub
mov
mulb
xorl
cltd
icebp
mov
pop
lods
shll
add
add
add
sub
mov
inc
xchg
xor
xlat
dec
fistpl
add
notl
mov
mov
add
add
inc
inc
jae
jmp
pop
push
dec
sbb
ja
scas
jns
stc
rcll
adc
jecxz
mov
js
in
out
sbb
lock
xchg
xlat
push
xchg
test
jmp
jle
testb
add
push
inc
and
and
hlt
ror
jg
jb
int3
cwtl
cmpsb
cmpb
sub
push
fucomip
rcrl
xchg
or
daa
and
mov
addr16
sbbl
pop
ret
out
jmp
jns
js
addr16
pop
jne
xchg
jne
std
out
xchg
decl
xor
mov
ficompl
jmp
xlat
push
and
stc
int
cmpsb
fcoms
add
add
sbb
es
and
arpl
sub
add
mov
push
inc
add
sub
das
push
scas
dec
ljmp
repz
gs
fimull
rol
or
jo
fxch
push
aaa
or
fcmovb
cs
insl
data16
hlt
push
pop
test
fdivrs
rcr
or
aam
cmp
xchg
negl
push
nop
add
dec
xor
pop
and
lods
xchg
push
in
or
cmp
pop
push
loope
sar
mov
pop
mov
cmp
gs
hlt
inc
adc
insb
mov
sub
mov
pop
clc
sbb
fsts
push
les
jle
xchg
in
jne
dec
jl
movsb
add
xchg
sub
bound
push
mov
pop
incl
mov
add
add
add
fldenv
fs
mov
int3
add
in
jno
cmp
pop
addr16
dec
push
pop
inc
mov
sbb
cmp
add
or
mov
mov
mov
xchg
mov
or
push
dec
fcomps
pusha
mov
add
sub
xor
call
lret
dec
and
push
out
add
mov
fiaddl
out
add
pop
sbb
add
add
xor
imul
cmpsb
jnp
into
insb
test
data16
ds
jmp
je
mov
xchg
add
insl
dec
jecxz
cltd
cmpsl
cltd
data16
cmp
loopne
incl
and
add
fwait
push
mov
add
mov
addr16
dec
movsb
idiv
sub
test
stos
test
jl
ficompl
and
dec
sbb
and
or
inc
xor
mov
popl
pop
test
mov
in
stos
inc
mov
notl
mov
add
cld
pop
sub
sub
xchg
inc
pop
ljmp
and
pop
add
add
sub
and
sub
and
mov
and
add
repnz
rcrb
inc
jmp
jle
daa
dec
fidivl
xor
fbstp
ss
mov
aad
jmp
add
cmp
lret
filds
inc
rcrb
push
xchg
jnp
cld
mov
and
dec
aaa
mov
jae
daa
add
add
cli
cs
push
je
jb
sarb
cli
jns
pop
inc
paddb
mov
adc
sub
fwait
add
pop
add
push
call
aam
call
dec
cwtl
stos
icebp
pop
and
ret
add
std
xchg
loope
inc
xchg
sub
push
xor
sub
sbb
inc
test
das
add
cld
dec
ret
les
in
mov
pop
aam
pop
dec
cmp
pop
test
leave
popa
mov
add
inc
jle
fdivs
lock
pushf
cmc
fstpl
cmp
lret
and
ss
imul
loope
adc
xchg
inc
push
incl
cld
test
xor
test
cmpsb
sbb
repz
pop
dec
mov
ret
inc
xor
push
loopne
or
jnp
sub
mov
cmp
fs
cltd
sti
lret
mov
xchg
or
add
sub
add
fimull
mov
mov
incl
aas
inc
cs
adc
or
and
addl
insl
push
xorb
rorb
add
negb
data16
jge
and
mov
cltd
aad
sub
arpl
push
add
add
mov
loopne
cld
sub
shlb
dec
popf
rolb
enter
jns
daa
xor
outsl
repz
jno
add
push
shl
popa
cmp
add
dec
test
roll
add
lret
divl
fadd
lret
in
div
inc
dec
lcall
mov
hlt
fidivl
jl
out
add
add
lret
pop
jg
daa
xor
rcr
jp
cs
xchg
iret
inc
mov
ror
sbbb
cs
add
push
push
mov
dec
test
aaa
out
jmp
sub
mov
loop
movsb
lock
test
movb
push
dec
data16
jb
je
mov
outsb
pop
and
lods
mov
push
add
ja
sar
jmp
sbb
jae
or
leave
pushf
add
xchg
adc
lcall
cmpxchg8b
into
jmp
mov
rorb
dec
js
add
lret
pop
test
shl
mov
jmp
mov
or
mov
dec
imul
cmpsl
mov
adc
bound
adc
sbb
jp
sahf
aam
push
call
pop
lcall
push
dec
les
fldenv
and
loope
mov
jecxz
xor
hlt
xor
pcmpgtw
push
imul
loopne
fdivl
xchg
pop
and
add
cmpsb
xchg
mov
int3
add
fisubrs
out
dec
mov
and
adc
add
hlt
push
insl
sarl
add
faddp
lods
ds
ja
adc
push
push
insb
fisttpll
add
out
add
sahf
xor
mov
nop
stc
xor
sbb
cmp
sbb
pop
es
lock
dec
mov
movsb
mov
in
lea
mov
sti
dec
inc
mov
xchg
icebp
das
ja
in
out
or
scas
push
clc
push
movsl
xor
xor
sbb
outsb
cmp
push
xchg
leave
lock
adc
cmp
call
aam
ror
sub
hlt
or
cs
add
test
cmpsb
mov
jb
xlat
lea
rcrb
enter
or
aad
add
add
push
cmpsb
jae
jl
stc
rcll
sbb
and
add
xchg
test
ss
cmp
js
mov
mov
push
lret
pusha
rclb
fcompl
aam
mov
clc
fstps
cmp
fwait
das
jl
decb
jg
mov
cwtl
xchg
xor
sbb
insb
jmp
mulb
test
adc
add
and
fadds
incl
decl
loopne
mov
nop
sub
push
sbb
jecxz
xchg
inc
sbb
jg
pushf
frstor
mov
xor
xor
adc
pop
ja
movsl
push
adc
aas
test
fistpl
push
mov
dec
iret
int3
inc
push
mov
sbb
pop
dec
aam
sub
movsb
shr
dec
js,pn
xchg
popf
enter
cmp
int3
out
mov
loop
out
xchg
mov
push
jg
mov
cmp
add
add
inc
scas
inc
test
sub
mov
mov
mov
arpl
dec
adc
popaw
outsb
data16
stos
sahf
fwait
repnz
jb
push
mov
add
add
or
loop
dec
hlt
insb
and
popf
adc
and
pop
mov
push
je
or
jne
xrelease
add
add
ds
jle
push
push
stos
or
and
outsb
add
xchg
add
int3
test
cmp
jg
int
xor
xlat
cwtl
test
fstpt
jle
sarb
and
sub
xchg
inc
fwait
xor
jecxz
sub
add
jae
jecxz
sub
frstor
repnz
add
pop
or
cmpsb
fadds
cmc
mov
inc
dec
mov
or
imul
dec
pop
shl
ljmp
stc
inc
test
test
popa
test
sub
clc
sub
add
pushf
idivb
shll
dec
mov
mov
push
add
in
imul
lcall
pop
rcr
daa
movb
movsb
in
add
pop
leave
insl
outsl
jecxz
sarl
and
push
adc
xchg
lods
pop
cmp
xor
mov
lcall
sub
fwait
je
out
xchg
lret
cmp
lret
add
pop
jecxz
xlat
cmp
lock
sarb
jb
fstps
addr16
gs
jg
sub
pushf
das
insl
addr16
xchg
xlat
sub
and
cli
popa
mov
subl
lahf
add
add
pop
aas
push
rcll
and
aas
mov
jne
dec
push
into
fildl
or
mov
arpl
cmp
arpl
mov
xor
leave
cmpl
arpl
sub
roll
mov
add
add
mov
adc
sub
dec
push
xor
leave
sbb
xor
add
jp
gs
fistl
mov
jle
mov
fildl
adc
fadds
in
test
fldenv
lods
out
push
je
dec
pop
pop
nop
pop
leave
scas
inc
push
ret
ficompl
lahf
sub
jns
jb
frstor
es
int3
mov
or
jle
les
inc
pop
xchg
add
pop
or
iret
pusha
xor
shr
jl
mov
or
nop
fwait
mov
shl
sarl
mov
aas
jl
mov
inc
push
mov
cmc
fsubs
jae
cltd
or
xchg
cli
push
pop
cmpsb
fnstsw
test
pop
lret
jae
push
add
loope
xchg
adc
push
mov
or
mov
pop
cs
mov
jnp
xchg
loop
or
xchg
imul
add
fdivl
imul
icebp
mov
movsb
pop
aas
mov
int3
loopne
shll
dec
std
aas
pusha
aaa
shrb
and
or
and
mov
jle
sub
stos
mov
ss
add
fwait
pop
sbb
cmp
movsl
sub
xchg
mov
inc
sahf
xchg
addr16
push
fcomip
fcmovbe
xor
jmp
push
cltd
hlt
aam
dec
in
xchg
test
sbb
dec
cmpsb
mov
sub
orb
rcr
bnd
or
decl
daa
jle
icebp
imul
pop
aas
sbb
add
shll
bound
dec
std
jb
pop
test
orl
xor
mov
fidivrs
pop
inc
mov
or
shll
iret
mov
in
push
mov
jmp
sub
jno
jae
xorl
pop
add
adc
fistl
fsubrs
loope
loope
push
aas
or
sub
pop
cmp
lods
add
imul
jge
and
adc
test
mov
push
imul
and
aas
fwait
xor
inc
insl
mov
dec
dec
in
loopne
in
les
dec
ja
xor
int3
add
nop
and
lods
xchg
add
mov
inc
out
sahf
mov
popa
or
xor
lods
ret
test
lret
out
stos
sbb
cwtl
stc
inc
jns
mov
hlt
lea
ret
fld
stos
rol
jp
cmpsl
iret
sub
xchg
sub
jae
push
mov
push
and
in
adc
mov
lods
xchg
cmp
xchg
dec
push
mov
jbe
nop
bound
call
push
pushl
xchg
mov
mov
mov
pop
nop
stc
sbb
nop
add
stc
repz
sti
out
mov
stc
add
add
pop
stos
xchg
xchg
xor
add
and
insb
add
sbb
inc
add
hlt
pushf
mov
dec
mov
es
cltd
cmc
icebp
dec
cmc
scas
stc
orl
or
xchg
psadbw
cli
jmp
dec
and
addb
divl
add
add
dec
test
pop
mov
mov
ja
pop
mov
mov
test
out
popa
mov
jle
outsl
rcrb
pop
or
sbb
sar
and
jne
lods
pop
test
or
fidivrl
add
add
push
das
mov
shrl
sbb
push
mov
or
jecxz
mov
jno
into
bound
out
ja
stc
jmp
and
cmp
stos
add
mov
xchg
dec
jp
or
mov
mov
lea
jmp
pop
add
mov
int3
bound
inc
dec
ret
pop
adc
pop
xchg
add
popa
inc
add
add
les
in
xchg
adc
std
pop
pushl
xor
js
pushf
xlat
addl
inc
sub
call
mul
add
fcmove
repnz
leave
mov
mov
push
fsubrl
cltd
jbe
mov
mov
mov
push
mov
xor
test
dec
repnz
enter
sbb
cmpl
stc
pop
fwait
xchg
std
test
add
ret
ds
lods
lahf
pop
mov
pop
cmp
mov
pusha
inc
sub
out
add
mov
add
dec
add
adc
push
rcr
pop
shl
add
scas
cmp
and
xchg
push
cmp
mov
gs
es
adc
stos
insb
pop
faddl
mov
mov
push
test
lock
stos
sbb
jmp
push
push
mov
es
cmpsl
adc
scas
add
mov
addb
rol
mov
lcall
add
add
xor
sahf
mov
push
adc
arpl
mov
adc
lds
pop
daa
mov
cld
das
outsb
mov
jp
aad
jo
mov
mov
sub
popf
shr
add
add
sahf
sbb
adc
mov
adc
mov
jle
sbb
dec
add
test
xchg
repnz
out
cs
sbb
mov
cltd
sbb
jp
insb
fstps
shrb
adc
push
or
ja
mov
cli
in
inc
daa
inc
add
mov
jb
or
cmpsl
jae
or
jle
sbb
or
push
test
loop
jbe
or
adc
lods
xchg
nop
add
adc
push
lods
and
adc
iret
scas
sbb
mov
insb
or
addl
add
movsb
test
mov
std
dec
pop
aad
jb
jne
stc
and
dec
jge
xchg
xor
add
cmp
lahf
mov
xchg
pusha
movsb
fwait
lcall
out
fidivl
out
addr16
icebp
mov
push
mov
cs
negb
fldcw
arpl
sub
call
flds
in
repnz
orb
shrl
and
pop
shlb
push
mulb
jle
aad
cs
xchg
dec
pop
add
in
mov
lea
loop
and
mov
push
mov
cmpsl
mov
jmp
mov
add
xchg
repnz
xchg
xchg
pop
pop
and
aaa
mov
stc
aam
int
add
add
enter
daa
fcoms
fisttpll
push
add
add
xchg
xchg
lea
cmp
inc
loop
inc
adcl
sub
and
and
loop
insb
mov
sbb
mov
addb
mov
data16
adc
mov
mov
jo
dec
out
or
push
adc
push
ficoml
mov
js
pop
and
jge
push
or
dec
push
mov
adc
push
dec
mov
ss
jl
ja
mov
imul
sarb
in
push
xchg
push
lcall
mov
sub
and
xor
sbb
jp
mull
int3
add
arpl
outsl
cwtl
frstor
push
aaa
out
call
adc
les
in
fmul
in
or
add
push
cmp
inc
mov
mov
jle
sub
mov
int
dec
push
imulb
jo
outsl
xchg
hlt
cmp
mov
cltd
fsub
push
cli
inc
outsb
sub
jg
jbe
fiaddl
nop
cmp
push
mov
pop
lock
fadds
int3
add
andb
mov
jmp
subl
adc
dec
outsb
lret
imul
sub
xchg
add
pop
in
mov
mov
ss
cmp
mov
nop
jbe
js
or
lret
dec
sbb
subb
jge
mov
jmp
or
icebp
sbbl
and
adc
pop
fldl
cltd
aas
dec
xor
shl
mov
mov
les
mov
nop
push
push
jle
popa
inc
out
test
cmp
out
ja
loopne
inc
inc
push
pusha
inc
push
cltd
stc
scas
add
add
movsb
pop
shl
mov
adc
pop
pusha
mov
fisttps
rcrb
scas
rcll
fwait
sub
push
lahf
call
jno
scas
shl
dec
lock
cltd
mov
xchg
mov
inc
imul
or
xor
in
jno
add
add
mov
movl
cmpl
push
dec
inc
shlb
cmp
pushf
xor
int
sti
jbe
cmp
popa
pop
push
mov
pop
cmp
gs
aam
jo
or
lods
aas
mov
ljmp
cmpsl
or
jo
sub
insl
xchg
mov
mov
in
dec
dec
sti
insb
add
pushf
and
jae
int3
add
lock
cmpsb
sbb
test
out
mov
dec
popa
mov
icebp
or
add
xorb
mov
and
mov
subl
xor
mov
cmp
mov
insl
cmp
andl
jmp
loope
mov
xlat
stos
jg
lods
ljmp
lahf
push
lods
cwtl
adc
test
ffreep
js
mov
mov
mov
add
cltd
mov
cli
ss
pop
pop
js
cmp
add
xor
push
adc
test
sub
sub
incl
inc
add
pop
lock
inc
adc
add
cmpsl
test
lods
sub
nop
movsb
lahf
mov
jbe
jnp
sbb
pop
gs
lea
cmp
sti
add
int3
add
sbbl
pop
sbb
cmp
dec
stc
stos
inc
jnp
add
inc
int
xlat
call
pop
mov
lea
addr16
mov
xchg
cmp
add
pop
aas
dec
mov
or
or
mov
scas
add
mov
add
push
repnz
clc
les
sub
and
aam
aam
xchg
xchg
xchg
jecxz
bound
xchg
push
lret
xchg
or
das
push
xchg
aad
push
test
mov
imul
lret
mov
call
mov
and
popa
jno
and
mov
ljmp
pop
daa
aaa
jbe
or
add
inc
mov
cmp
enter
out
xor
push
lahf
in
inc
mov
push
inc
mov
cmc
jge
int
jecxz
sbb
cmp
sbb
sbb
dec
imul
leave
cmpsl
fimuls
fidivl
dec
insl
mov
and
xchg
mov
pusha
jo
roll
dec
jne
or
pop
mov
fsubl
sbbb
inc
jns
add
add
filds
test
and
gs
mov
incl
ret
arpl
int3
add
pop
sti
xchg
insb
outsl
cwtl
mov
sbb
add
add
mov
sbb
daa
aam
xor
data16
fwait
jns
scas
xchg
cmp
jmp
std
xchg
mov
jl
add
add
jo
shl
mov
scas
xchg
dec
jmp
jno
ja
lret
jl
aaa
dec
dec
repz
adcl
pop
pop
sbb
add
mov
lea
jp
mov
or
out
popa
pusha
sub
sbb
xor
cs
add
sbb
out
or
mov
and
pop
xlat
shr
lret
fmul
fucomi
in
push
rcrb
push
rorb
mov
in
jp
dec
fadds
clc
and
cli
test
inc
sbb
shl
mov
mov
and
out
mov
jo
aas
inc
sub
jp
mov
cmp
stos
jbe
cmp
dec
shrl
xchg
xchg
ret
mov
inc
mov
incl
mov
xchg
inc
mov
cmpsl
push
test
int3
xchg
cmp
mov
inc
shlb
push
cwtl
and
jnp
cld
test
jnp
test
xchg
pop
sbb
lock
jmp
or
lods
jns
push
cld
cmp
mov
cmp
dec
and
add
stos
shrl
mov
repz
pushf
loop
mov
add
dec
adc
cli
sbb
xor
add
sbb
sub
or
scas
add
add
sbb
loope
rcl
mov
mov
mov
ret
cmp
dec
je
scas
inc
xchg
rcr
sarl
xor
pushf
push
and
out
pop
sub
mov
push
sbb
add
shl
cli
das
xchg
inc
sbb
and
mov
shl
idivl
imull
inc
dec
fmulp
inc
pusha
shlb
sbb
lods
in
lret
jl
xlat
decb
xor
xchg
or
add
mov
and
lahf
pop
jg
xor
sbb
aad
add
mov
pop
xchg
or
sub
inc
in
fistl
mov
ja
pusha
push
imul
pop
into
jg
mov
adc
push
jnp
mov
loopne
sbb
fisubrs
fistps
xor
or
cmp
pop
outsl
shl
fisubrl
cmc
add
add
push
xor
jb
cs
and
cwtl
xlat
popa
je
jne
dec
mov
add
add
cld
jl
mov
aad
fisubrs
out
in
dec
shlb
mov
mov
mov
pop
cmp
fmul
mov
jb
call
add
sbb
imul
cli
xor
jno
jl
add
dec
stos
cltd
adc
fiaddl
in
int3
sub
xchg
pop
mov
and
jmp
mov
sbb
hlt
ret
rcrb
jle
jecxz
sub
fwait
in
in
stos
mov
inc
sbb
and
add
mov
push
sub
add
shrb
cmp
stc
dec
pop
sbbb
out
movsl
daa
outsb
outsb
and
add
and
sbb
jl
stos
adc
inc
jo
pop
sub
pop
cmpsb
xchg
xchg
dec
je
lret
mov
sti
sti
ds
fwait
push
xchg
or
cltd
std
hlt
daa
dec
arpl
pop
fisttps
cmc
add
iret
fcomps
insl
outsb
push
sbb
jnp
mov
mov
xchg
fwait
aas
loop
pushf
frstor
daa
mov
decb
lahf
cmp
lods
int
or
in
xor
fsubrl
ss
addr16
adc
cmp
pushf
lods
jmp
push
imul
ja
loop
mov
repnz
mov
mov
sbb
rolb
jns
fildll
lahf
pop
sub
ljmp
push
call
mov
mov
loop
stos
rorb
ljmp
push
inc
jb
xchg
xlat
pop
mov
jo
cwtl
pop
xchg
flds
inc
push
or
jmp
push
cmp
mov
movsb
cmp
les
std
cltd
xor
add
and
add
incl
sbbb
cmc
mov
ja
jns
aaa
and
jno
xor
adc
ss
pop
xchg
inc
mov
nop
in
int3
dec
jl
cwtl
sbb
xor
xchg
test
fldcw
and
jle
popf
adc
mov
jecxz
push
sub
adc
push
movsb
jmp
scas
jno
aaa
cmp
sub
out
imul
jo
jg
fs
cmpsl
pop
lods
xchg
ret
cmp
dec
xchg
sub
sub
es
cmp
xor
mov
mov
pushl
testb
xchg
mov
mov
imul
dec
jb
jae
xchg
xor
cs
jecxz
loope
mov
xchg
das
mov
imul
call
sbb
mov
sti
daa
push
std
adc
sbb
push
cmp
pop
movsl
and
mov
test
test
mov
test
popf
push
mov
lods
mov
sahf
rolb
shrl
dec
inc
jmp
aas
test
jg
int3
add
jle
mov
out
jne
decl
sub
inc
pop
xor
fucomip
addr16
je
ret
cmpsb
push
rcl
call
push
mov
ret
lds
shll
jg
or
jns
push
and
or
int3
insl
add
add
stc
cmpsb
repnz
pop
mov
add
or
xor
and
out
sti
dec
in
push
test
icebp
add
push
cltd
cmp
loope
les
sub
xchg
inc
pop
syscall
cmp
std
push
cmpsl
jnp
xor
pop
hlt
cmp
xor
je
ror
or
xchg
sti
xchg
jge
int3
add
pop
ficoms
xor
clc
stc
movsb
dec
and
and
jge
and
add
mov
pop
fyl2x
cs
push
sub
je
mov
add
aas
mov
shl
mov
jle
mov
test
pop
push
dec
mov
leave
xchg
dec
in
fsubs
in
sbb
mov
bound
lahf
xor
enter
add
and
and
lods
add
out
cmp
ds
test
outsb
stc
adc
scas
sbb
lret
aad
add
add
add
adc
fucomip
mov
cmp
ja
push
adc
dec
mov
add
stos
in
push
mov
loope
cmp
xor
outsl
call
les
lcall
jns
cmp
popf
mov
dec
mov
jg
jnp
dec
roll
add
inc
outsl
sbb
sbb
lock
mov
push
icebp
mov
inc
mov
int3
cmp
xchg
mov
dec
test
ljmp
sbb
addb
push
sbb
rorb
adc
pop
mov
ds
in
jge
push
adc
xor
orl
jge
jmp
add
push
loope
imulb
pop
mov
loope
pop
and
loopne
sbb
adc
movsb
xorl
sub
arpl
push
iret
pusha
mov
ror
cmpsb
jge
mov
fisttpll
ja
mov
jb
in
xchg
push
test
mov
push
insl
mov
xor
outsl
aam
mov
fcompl
sbb
popf
push
sar
out
leave
mov
and
push
xchg
adc
push
popf
mov
std
ds
lock
xchg
out
lea
xlat
jmp
cmpsl
daa
jns
imul
outsl
sub
fldcw
andb
jo
jnp
push
lods
xlat
dec
mov
fldcw
pop
aaa
or
mul
jno
dec
popa
mov
stos
xor
jnp
pop
aaa
mov
stos
sbb
lods
xor
xor
cmp
xor
imul
add
cmpsb
fnstenv
and
in
jno
lds
sbb
fdivl
mov
sbb
imul
es
incl
std
test
mov
mov
imul
das
lds
lods
imul
push
and
lcall
fildl
cmp
adc
push
sub
jp
push
dec
push
mov
mov
adc
jle
push
adc
pop
lcall
call
cmp
enter
pop
fmuls
jo
mov
imul
addr16
jno
jne
sbb
adc
xchg
cmc
sbb
mov
push
mov
xor
push
add
dec
sub
aaa
push
inc
nop
jae
jg
cmc
and
mov
jge
jns
pop
jle
add
jae
dec
lods
mov
mov
mov
mov
cmp
mov
popf
ss
inc
mov
int3
add
stos
jae
mov
incl
jb
sahf
mov
jp
lret
in
dec
pop
insb
outsb
imulb
iret
jno
mov
inc
push
loope
inc
jns
test
mov
push
xchg
arpl
int3
add
or
scas
imul
cltd
jmp
outsl
sub
fistpll
mov
cmp
daa
orb
xor
jb
mov
into
movsl
pop
aas
jns
in
int
jae
dec
cmp
mov
pop
xchg
xchg
mov
adc
and
add
imul
jle
gs
push
push
je
pushf
iret
pop
xor
out
inc
cmp
dec
and
xlat
adcl
push
sbbl
adc
jg
pop
sti
fcompl
insb
fcmove
movsl
sub
push
int
jae
ljmp
pop
dec
stos
cmc
lret
adcb
xchg
out
aas
out
pop
pop
rcrl
mov
fsubs
insb
inc
test
repnz
popf
dec
add
adc
dec
mov
or
lahf
scas
lahf
sbb
imul
insb
imul
sub
pop
and
mov
jmp
pop
xchg
lods
or
test
sbb
push
je
dec
jae
xchg
mov
aam
sbb
jle
or
xchg
mov
inc
push
ss
adc
mov
insb
xor
cmpsl
fisubrs
outsl
sbb
mov
add
add
pop
push
ret
cmp
add
sbb
sub
jns
jge
fstpt
repnz
popa
sub
sub
stos
movsl
cmp
cmp
sbb
inc
xor
cmp
mov
adc
cld
lods
jns
nop
imul
or
lret
xchg
or
and
sbb
cmp
pop
mov
fnstcw
sbb
mov
or
dec
leave
mov
fs
popl
enter
insl
stos
stos
cmp
and
cmp
mov
add
mov
add
sub
not
leave
stos
and
push
jecxz
jp
ror
jne
adc
xor
std
out
pushl
adc
and
mov
add
pop
cmp
shll
lock
mov
push
shll
push
fildl
add
xchg
test
push
scas
lods
and
and
mov
add
leave
xor
ret
or
adc
pop
sbb
cmp
aad
imul
cmpsb
ss
xor
mov
mov
xor
je
movsb
cmp
ds
pop
sub
mov
sahf
and
xchg
in
and
xorl
adc
push
clc
fiadds
pop
subl
sbb
popa
mov
fs
jnp
xor
adc
pusha
mov
and
lock
mov
scas
ljmp
sub
mov
dec
jl
cli
divl
icebp
xchg
jge
pop
adc
add
push
ja
int3
push
fsubrs
pop
push
mov
xchg
lcall
aas
stos
movsb
mov
sbb
cli
dec
xor
mov
add
add
add
inc
dec
mov
out
xor
gs
or
lahf
jmp
incl
incl
arpl
cltd
outsb
mov
jbe
mov
scas
xchg
subb
jno
sub
or
roll
aas
aam
and
sub
imul
cmp
xchg
lahf
testl
xor
jp
sti
mov
lret
call
sub
pop
mov
dec
inc
cltd
push
rep
mov
int
pop
out
cli
inc
jbe
xchg
lcall
jnp
jno
mov
cmp
xlat
fbld
leave
mov
pushf
loop
or
jne
inc
fcomp
fstl
cmp
push
dec
mov
cli
call
pusha
pushf
add
inc
xor
xchg
adc
incl
sub
mov
jecxz
xor
lods
lods
sub
ss
push
sub
sub
iret
fcoms
cmp
aad
and
mov
scas
into
jne
cltd
bound
cwtl
cmc
lds
cmp
and
push
and
inc
jl
jo
mov
xchg
adc
dec
push
xor
repnz
js
cltd
repz
ss
xchg
cld
and
xchg
xlat
xor
int3
add
fimull
pop
dec
xchg
imul
pavgw
sbb
sub
add
add
ret
jns
popf
mov
out
sbb
mov
mov
sbb
pop
jne
mov
mov
mov
cmp
test
mov
mov
push
or
lds
insb
or
testb
leave
sub
insl
pop
add
pop
xchg
sbb
jnp
and
jp
and
adc
shlb
ds
pusha
cld
push
sbbb
clc
add
arpl
cld
aaa
and
mov
dec
jo
jle
loopne
mov
jae
xchg
loop
pusha
das
in
cli
dec
sbb
out
daa
dec
jne
lods
psubusw
xchg
mov
mov
cmp
inc
ss
addr16
mov
pop
mov
mov
popf
cmp
xchg
out
je
subl
mov
mov
jmp
cmpsb
mov
cmc
jp
fldenv
es
jbe
sbb
std
fdivs
pop
mov
jmp
jno
rcr
sub
adc
icebp
jbe
add
add
adc
jg
mov
leave
cmp
je
xor
in
incl
imul
test
push
inc
insb
lods
push
xor
push
dec
lods
pop
loope
sbb
pushf
or
in
cmpsl
mov
mov
pop
or
in
xchg
sahf
outsb
notb
fcoms
rcll
test
sub
sub
jp
or
add
cmp
adc
fidivrl
jle
mov
mov
call
dec
mov
cwtl
xchg
adc
fwait
aad
jp
adc
call
adc
and
jl
jecxz
repnz
sbb
repnz
push
inc
ret
xchg
fidivrl
popf
or
cmpsl
push
jle
incl
jmp
dec
insl
pop
fwait
mov
aam
push
add
add
rcrb
rclb
ds
inc
pop
jge
int
mov
outsb
cmp
push
fcmovne
mov
xor
dec
rorl
and
mov
jb
arpl
cmc
sub
mov
leave
jmp
pop
xchg
push
and
ret
jno
dec
in
mov
aas
sbb
push
mov
nop
add
push
push
or
call
popf
xchg
jl
add
lods
cmp
lea
add
lds
shr
daa
push
int3
adc
repnz
cmp
lcall
sub
mov
das
cmc
das
xchg
mov
jl
test
loop
orl
fs
mov
out
dec
mov
popa
in
mov
mov
mov
mov
fiadds
int3
add
sbb
sub
xchg
lods
or
aas
pop
popa
lcall
jno,pt
pop
std
push
stos
mov
cmpsb
in
jnp
ret
jno
fcoml
mov
enter
and
jecxz
repnz
jg
sti
jae
ret
mov
out
xor
mov
sbbl
jmp
inc
jns
pop
sbb
mov
loope
incl
mov
xchg
out
imul
sarl
sar
mov
xor
mov
and
popa
shl
stc
lods
leave
mov
xchg
xlat
mov
pop
mov
mov
jmp
test
dec
jmp
scas
std
cmp
xchg
cld
test
pop
sbb
pop
or
ja
cmc
jle
mov
icebp
mov
scas
mov
out
xor
scas
sub
movsl
dec
xor
dec
add
sbb
fs
jmp
push
cmp
stos
xlat
cmp
jmp
xchg
add
mov
int3
cmp
les
aad
push
mov
mov
in
clc
pop
pop
or
push
iret
add
jne
xor
xchg
lea
idivl
add
sub
in
ret
pop
ficoms
iret
inc
fldenv
repz
add
add
mov
mov
mov
mov
dec
bound
out
pop
out
loopne
iret
test
ja
cli
cwtl
fldcw
pop
xor
mov
stos
adc
jl
addr16
mov
push
ja
das
adc
pop
aam
cmpsl
jp
dec
div
xchg
dec
pop
xchg
lahf
outsl
fs
add
xor
testl
push
jg
push
mov
adc
inc
pop
xchg
insb
movsl
cmc
mov
sbb
std
in
ds
test
lahf
rorl
mov
jo
lock
add
test
or
les
inc
loope
mov
ljmp
push
sub
imul
mov
shrl
jp
xchg
arpl
adc
jge
outsb
lret
mov
push
mov
call
sbb
lahf
inc
adc
jg
push
mov
jae
xor
adc
sub
lcall
cmpsb
inc
cltd
add
lahf
xchg
push
jmp
insl
test
xor
sub
cmpsb
dec
pushl
xchg
fyl2xp1
icebp
cli
data16
imul
or
pop
mov
fucom
add
in
mov
dec
jae
cmc
and
and
mov
jbe
xlat
mov
stos
pminub
mov
les
and
or
faddl
lea
inc
xchg
or
or
push
outsb
fimull
dec
je
mov
popf
nop
mov
push
fstl
jecxz
xor
mov
xor
mov
jle
popf
test
push
cld
enter
sbb
fldenv
out
outsb
mov
add
add
pop
mov
jge
cltd
cmp
xor
push
test
or
mov
fbld
cmc
fildll
mov
inc
stc
out
jmp
data16
xchg
adc
ds
pop
add
push
sahf
xchg
dec
mov
inc
call
call
add
add
cmp
ret
cmc
mov
int
out
testl
scas
xorb
cmp
int
mov
mov
popa
test
add
xchg
inc
insl
mov
repz
testb
jne
fldt
test
js
adc
xor
push
inc
inc
mov
aad
mov
push
inc
dec
inc
add
xchg
pushf
mov
xlat
movsb
add
cmpsl
frstor
cwtl
xorl
jecxz
cmp
lcall
dec
push
push
test
int3
add
pop
push
daa
cmpsb
roll
aas
cmp
dec
sti
cltd
adc
sub
dec
call
xor
dec
xchg
cmp
loop
pushl
adc
pop
jle
lock
lahf
add
sub
movsl
dec
sbb
pop
push
enter
or
pop
loope
hlt
int3
xor
cmp
and
int3
add
in
and
or
jns
rcrl
cmp
and
mov
repz
pushf
xor
jle
jbe
inc
jp
pop
sbb
mov
dec
or
aaa
adc
ret
dec
imul
or
stc
testl
mov
cs
mov
cwtl
mov
out
fistl
shll
mov
cmc
pop
sbb
call
pop
cltd
mov
ljmp
mov
adc
mov
rclb
push
shlb
sbb
mov
sti
add
xor
cmp
add
xlat
ljmp
arpl
fwait
int3
cmp
mov
repnz
in
sbb
and
cmp
sbb
mov
add
xorl
fsubs
fistpl
adc
adcl
std
or
push
xchg
dec
roll
out
mov
add
add
pop
mov
inc
push
aad
popa
leave
jne
call
xchg
jg
push
mov
leave
scas
bound
test
jle
push
push
in
lock
mov
cwtl
pextrw
or
les
or
pop
or
popa
add
out
jo
and
mov
jb
sub
pusha
push
fildll
in
add
fstpl
inc
sbb
movsb
pop
xor
es
mov
out
push
sbb
cmp
jbe
hlt
fidivs
pop
mov
sub
imul
pop
aad
fsubl
jno
sub
mov
inc
jb
ret
lahf
jp
cmp
xchg
gs
push
mov
jmp
adc
mov
mov
xor
adc
add
mov
into
aas
mov
push
fnsetpm(287
movsb
xchg
movsb
xchg
lods
dec
mov
pop
dec
push
adc
inc
aaa
sub
mov
jbe
imul
sbb
es
outsl
jbe
push
test
xor
insl
pop
pop
outsb
cs
loop
aaa
mov
mov
or
call
in
mov
and
jecxz
stos
bound
and
aad
loope
push
xor
mov
mov
and
sbbb
cmp
int3
lods
fsts
lahf
push
cmp
cmpsl
adc
mov
mov
int3
bound
xor
clc
jnp
push
mov
adc
sbb
mov
sub
mov
mov
xor
push
pop
insl
pop
mov
mov
and
cs
in
shl
xor
or
or
stos
mov
aaa
sbb
mov
adc
fcoms
fbld
movl
outsb
dec
sbbl
divb
add
add
fadds
cmp
sub
call
dec
test
dec
sub
cltd
fcompl
cwtl
jns
sti
xor
insb
enter
mov
stos
inc
dec
hlt
xchg
punpckhwd
pusha
fwait
mov
cld
ret
xor
push
cmc
fldt
ret
inc
dec
addb
in
lods
lea
or
add
add
add
adc
mov
leave
rcll
dec
fcmovnbe
icebp
das
push
inc
pop
cmp
fistpl
cli
sbbl
or
or
rolb
shlb
push
outsl
insb
inc
dec
mov
lcall
add
dec
filds
call
insb
adc
sbb
dec
jle
xchg
in
fwait
jp
fists
jbe
repz
stos
fistps
inc
pop
aaa
sub
xlat
rorl
mov
icebp
lea
or
rcrl
test
mov
sahf
clc
cli
lods
into
or
ret
shll
mov
mov
in
push
xlat
shl
adc
push
sub
xlat
ja
int
enter
shll
scas
dec
mov
xor
dec
sub
rolb
fstpl
jno
sti
inc
ret
cmp
jb
lock
int
cmp
iret
shll
add
pop
cli
sub
insl
pop
ret
inc
sub
and
mov
add
lea
mov
aam
es
or
cmp
fldcw
fucomp
add
cmpsl
insl
es
lods
xchg
mov
push
dec
icebp
add
add
outsb
push
jbe
mov
pop
arpl
out
roll
sahf
test
fwait
cli
or
dec
ljmp
jno
adc
jne
pop
es
mov
jae
xor
sub
dec
insb
jo
js
adc
cmp
nop
ret
shl
scas
cmp
stc
and
cmp
add
add
outsl
mov
das
aam
mov
jo
inc
faddl
das
or
dec
lret
inc
push
mov
sbb
loopne
incl
insl
arpl
xchg
push
xlat
test
xor
sub
std
cmpsl
pop
xor
xchg
repnz
or
and
mov
mov
int3
sub
sbb
test
jb
mov
dec
ja
mov
mov
mov
incb
negb
mov
xchg
jns
add
add
out
and
aaa
bound
add
mov
jg
adc
sarl
pop
lcall
cmp
jno
stos
dec
sbb
adc
add
dec
out
mov
mov
mov
xchg
jbe
les
mov
movsl
pop
jl
inc
push
fnsave
inc
mov
aam
out
je
rcl
mov
aas
jb
mov
sub
pop
fsts
jp
mov
push
std
fmul
jae
sbb
lods
out
adc
cli
arpl
js
mov
dec
mov
jp
ret
lret
fnstcw
jge
add
call
mov
sub
mov
xchg
enter
sbb
lcall
in
out
sbb
and
and
loopne
cmp
outsl
jno
dec
jle
or
cld
add
jb
mov
add
add
ljmp
mov
lods
loope
sub
xchg
iret
xchg
stos
adc
outsl
or
add
mov
in
ret
movsl
in
orl
mov
mov
add
or
mov
or
popf
lds
push
adc
sub
push
add
aad
jbe
out
mov
mov
fimuls
out
test
cmp
lods
mov
sub
xorb
dec
sbb
subl
arpl
xor
pop
push
mov
ljmp
xchg
jns
leave
iret
push
cmp
call
and
ljmp
xchg
js
mov
imul
je
jmp
push
sub
jb
jns
sti
mov
cs
lea
mov
fs
in
loop
inc
stos
sub
mov
or
or
jns
mov
or
or
imul
sub
xor
dec
in
mov
add
fldenv
mov
int3
add
imul
ficoms
mov
mov
inc
push
sub
lock
mov
push
dec
insb
push
inc
mov
mov
pop
xchg
in
dec
ds
dec
daa
pop
cwtl
xlat
or
mov
pusha
sbb
int3
xorb
add
adc
sti
movsl
dec
jp
mov
mov
xor
shrl
mov
in
rcrb
pand
int3
add
sbb
leave
lret
lahf
out
dec
jb
insb
mov
int3
int3
mov
add
add
setbe
mov
stos
sahf
jl
mov
outsl
adcb
push
or
test
push
lcall
adc
xor
int3
add
adc
nop
push
adc
scas
pop
jl
sbb
adc
gs
mov
jbe
add
or
xchg
leave
pop
movsl
cmp
cmp
imull
jno
dec
pop
mov
jbe
testb
or
sahf
insl
in
int
cmp
stos
mov
iret
sub
xor
jmp
or
cmp
xor
xchg
jae
les
cmp
inc
xchg
mov
push
push
xchg
cmpsb
ljmp
dec
lcall
fwait
loopne
call
dec
ja
repnz
mov
sbb
fidivs
mov
shrb
xchg
lea
test
push
sub
mov
xor
cmp
shll
pop
subl
mov
movsl
mov
cmp
rcrb
push
popa
adc
mov
cmpsb
xor
cmp
popa
jle
jmp
cld
fsubrs
inc
or
scas
push
pusha
dec
ret
sub
jae
mov
ljmp
xor
mov
ja
outsl
popl
adcb
or
aad
out
mov
les
call
cmp
mov
fbstp
jnp
in
inc
inc
add
mov
test
pop
mov
pop
out
or
inc
add
mov
jp
ss
aaa
pushf
mov
push
aas
in
jb
xchg
ja
ret
shl
xchg
xchg
or
iret
sbb
icebp
test
jbe
dec
sub
test
mov
test
repnz
scas
lret
push
lret
add
repnz
cmc
xchg
pop
cwtl
or
orb
or
mov
mov
call
dec
mov
dec
xor
dec
stos
adcb
jno
mov
sub
cld
loope
pop
scas
fnsave
sub
pop
sahf
out
xchg
xor
int3
add
or
fwait
pop
pop
jmp
add
or
outsb
rcll
rcrl
adc
inc
lods
aad
xor
jge
and
ljmp
xchg
insb
or
in
mov
incl
jmp
iret
sbb
mov
fmulp
mov
iret
call
jg
xchg
or
xor
add
adc
jmp
fcoms
imul
inc
inc
sbb
insb
add
add
pop
in
xor
lcall
lods
loopne
mov
mov
dec
adc
decb
int3
add
out
cwtl
aad
pushf
dec
repz
xchg
adc
push
int
es
lds
mov
lcall
sbb
jae
mov
adc
movsl
cmp
mov
sbb
sub
stos
aaa
fwait
mov
repnz
sub
push
push
aad
mov
cwtl
jbe
hlt
fildl
mov
xchg
shll
lock
inc
mov
test
iret
rcrl
movsb
sahf
sbb
xor
nop
add
mov
push
add
jp
push
add
mov
mov
mov
adc
jg
or
pop
pop
fisubl
lods
pop
psllw
mov
cltd
pxor
sahf
mov
enter
insl
sbb
and
add
add
movsb
xchg
xlat
fcoml
mov
jne
mov
mov
pusha
lret
cmp
xchg
flds
int
stos
loope
add
addr16
push
outsl
out
xchg
and
int3
add
push
mov
int
std
inc
inc
sub
cltd
insb
push
fcmovne
cli
jno
rol
iret
mul
scas
std
cs
mov
mov
lock
add
sbb
pop
lahf
test
test
add
inc
xchg
lret
movsl
pop
or
push
and
and
bound
out
dec
adc
mov
das
dec
cs
add
jmp
mov
outsl
sbb
add
add
xchg
xchg
jne
cltd
sub
mov
sbb
scas
xor
mov
iret
jne
push
shlb
and
sbb
and
xor
cmp
push
imull
fwait
add
and
xor
add
cmp
pop
push
arpl
push
push
cld
ja
test
test
jo
and
mov
popf
inc
push
cmpsl
sub
mov
add
aam
addr16
pusha
xor
fistpll
inc
or
push
jecxz
cmp
or
mov
or
ret
push
rol
pop
cmp
cmpsl
cltd
int
sahf
pop
clc
andb
dec
push
js
mov
push
stos
mov
or
cmp
cld
test
pop
ljmp
pushf
loop
cltd
fwait
and
nop
add
mov
inc
adc
lods
sub
test
add
inc
mov
adc
or
addr16
rclb
imul
imul
inc
push
cmpsl
sub
test
mov
and
push
cmpsl
lcall
cltd
mov
incl
add
cmp
dec
lret
mov
repz
add
sbb
ss
sub
aad
out
push
pop
pop
outsb
sub
psubb
ja
inc
aad
sarb
mov
sub
mov
dec
pop
ja
out
inc
push
mov
cltd
pop
inc
rcrb
jb
sbb
dec
mov
pop
lods
xchg
jmp
jno
popf
pop
lret
push
daa
rorl
mov
pop
leave
push
cmp
push
js
lds
sbb
adc
or
loope
enter
push
dec
and
sti
mov
add
int
add
and
sbb
jbe
pushf
test
bound
fnstenv
jge
fistps
cwtl
push
push
mov
pop
std
inc
popf
daa
and
mov
add
push
cmp
dec
sub
cmp
pop
into
out
aam
mov
sbb
and
je
and
inc
repnz
pop
and
sub
rcr
inc
mov
in
sbb
stc
mov
pop
adc
aaa
push
and
jp
lea
nop
add
mov
mov
call
shr
scas
inc
mov
popf
dec
mov
rorl
xchg
bound
adc
inc
mov
pushf
mov
pushf
mov
push
push
xor
push
mov
aaa
and
inc
addl
add
loope
in
out
add
out
mov
flds
push
or
in
xor
mov
cmpb
loopnew
mov
cli
ljmp
pop
cmc
mov
daa
int
imul
iret
addl
lds
inc
ja
dec
aaa
mov
test
call
mov
es
cmp
pop
jnp
aad
push
inc
nop
mov
dec
sbb
jae
insb
jp
dec
cld
cmp
mov
cmpsl
outsb
push
rorl
mov
int
int3
cmc
rolb
add
imul
aad
add
aad
pop
test
push
lods
mov
pop
push
out
ret
fldenv
pop
push
sub
arpl
test
negl
ret
add
add
push
rclb
data16
jge
jecxz
adc
push
std
cmpsl
enter
pop
ja
mov
jge
push
dec
iret
and
sbb
jl
outsb
cmpsb
fadds
mov
mov
or
int3
sub
cld
and
iret
movsb
mov
mov
jmp
mov
stos
scas
mov
cmp
int3
add
sub
flds
sub
pusha
cmp
cmpsl
adc
jns
test
push
mov
inc
jle
inc
push
scas
jle
sub
push
outsb
pop
pop
int
mov
loope
inc
mov
jmp
fbstp
xor
sub
call
in
popf
mov
or
ja
aad
aas
in
mov
cmpl
addr16
inc
mov
andl
stos
jp
sub
inc
add
out
adc
add
pop
xchg
xchg
pop
scas
icebp
scas
pop
lock
xor
ljmp
dec
das
es
jo
xor
pop
jp
add
test
aad
mov
and
push
sbb
das
int3
cmp
pop
add
cmp
leave
movsb
pop
dec
push
lret
shll
xchg
cmp
loop
loop
dec
or
fistl
jne
int3
sbb
rcrb
jb
in
mov
std
pop
loop
clc
loope
aaa
test
data16
int
cld
or
fimull
xchg
mov
fldt
incl
sbb
loope
imul
push
mov
inc
inc
or
pop
jnp
std
sub
hlt
into
mov
lds
shlb
popf
xchg
mov
cli
dec
aam
sub
outsb
push
lds
insb
icebp
sbb
inc
insl
jns
pop
fimuls
ds
xor
pop
insb
std
adc
popl
lret
lcall
mov
aaa
cmovle
mov
push
nop
and
mov
or
fs
mov
ret
subb
dec
mov
cmp
out
stos
aad
mov
aaa
xlat
push
out
pop
pop
sbb
inc
repnz
add
inc
lcall
adc
fdiv
jae
push
adc
mov
outsl
inc
repnz
sub
test
lahf
insb
cmpsl
jno
cwtl
inc
xchg
xor
movsb
sbb
sti
mov
movsb
pop
cmp
push
jl
cld
pop
add
hlt
mull
stc
test
mov
cltd
jbe
ss
ds
inc
xor
dec
arpl
gs
inc
int3
ret
not
gs
mov
aaa
pop
add
add
jle
jmp
ljmp
imul
mov
mov
loop
and
shlb
pushf
mov
or
stc
xchg
or
pop
sub
inc
inc
mov
lea
int3
add
mov
cmpl
xchg
mov
inc
icebp
cmp
insb
bound
pop
cmp
cmp
add
add
push
stc
xchg
or
inc
inc
mov
xor
cltd
mov
rcll
add
cmpb
add
jbe
add
std
mov
xchg
imul
cmpsl
lods
icebp
aaa
sar
push
and
cmp
imul
and
loopne
pop
aam
jmp
or
add
clc
ret
sub
flds
pop
or
jmp
adc
push
das
push
divl
aam
daa
mov
stos
in
pop
mov
xor
dec
mov
js
call
imul
cmpsb
adc
cmpsl
aaa
fdivl
xor
setnp
call
adc
ljmp
push
add
and
xchg
mov
in
in
push
add
shlb
xchg
arpl
outsl
sbb
scas
jnp
inc
pushf
es
les
aad
sub
ds
out
outsb
mov
pop
orl
mov
xor
fwait
andl
jb
push
negl
dec
cli
pusha
xorl
int
loopne
cmp
sbb
jae
mov
push
jl
incl
call
jno
sub
or
loopne
mov
or
ljmp
leave
mov
mov
sbb
in
jp
xor
scas
clc
int
or
cmp
cmpsl
add
add
ljmp
jo
dec
lahf
mov
daa
cmpsb
or
mov
xor
fadds
mov
frstor
fdivrl
lock
pop
push
loop
add
mov
jg
lret
lods
cmp
jnp
sub
mov
das
sbb
hlt
xor
pop
push
lahf
jno
mov
loope
xor
xor
adc
xchg
in
int3
add
fwait
sbb
enter
lds
push
test
loopne
sbb
push
push
mov
dec
dec
daa
fsubs
mov
sub
mulb
stos
jecxz
cld
pop
inc
and
int3
adc
xchg
arpl
jo
xchg
jne
adc
lds
inc
roll
xchg
decl
cmp
cltd
dec
sbb
sahf
lcall
lcall
cs
dec
movsl
pop
mov
or
add
in
or
into
movsb
mov
and
xor
mov
cltd
test
mov
jg
jg
sbb
call
pop
sub
ss
push
and
stos
push
ljmp
xchg
daa
xchg
push
xchg
or
add
add
test
ja
stos
sub
mov
cmpsl
pop
push
jle
icebp
cltd
mov
and
loope
cmc
sarb
cmpsl
dec
push
xchg
pop
bound
jg
enter
sbb
jno
cld
std
or
cli
dec
push
mov
xchg
mov
ljmp
out
hlt
ds
repz
xlat
out
out
mov
pop
cmpsb
cs
cmp
stc
mov
fs
push
in
les
mov
or
ljmp
inc
dec
sbb
shrl
inc
filds
nop
add
imul
outsb
outsl
imul
sbb
adc
mov
cmpsl
adc
jo
cld
ret
in
xlat
stos
dec
aad
cmp
push
gs
xchg
jmp
out
mov
jnp
cmp
call
addr16
das
or
sahf
and
mov
xlat
stos
sub
iret
jle
lret
movsb
cmc
dec
xchg
cmp
sub
cltd
into
fmull
jno
add
add
sti
xor
ja
mov
mov
jne
daa
jl
inc
mov
je
inc
lret
ss
sub
fwait
mov
adc
mov
pop
call
aaa
pop
mov
test
add
inc
xor
das
dec
daa
mov
dec
xlat
add
ficoms
add
add
push
and
mov
std
jl
adc
out
xor
push
mov
cmpl
scas
loopne
xor
pminsw
leave
push
xchg
scas
adc
lret
xor
ss
ret
hlt
pop
lea
pop
lds
repnz
dec
scas
dec
rcrl
mov
cmp
outsl
mov
mov
lea
sub
jmp
pushf
xor
mov
push
xor
sbb
test
lret
mov
sbb
pop
mov
rcll
dec
inc
push
repz
xor
out
add
and
int3
lret
push
inc
shrb
mov
mov
push
je
add
add
out
cmp
jbe
cwtl
loop
sub
dec
pop
xchg
push
int
cmpl
and
das
aam
sbb
je
cltd
mov
fistps
sbb
cltd
fisttps
aaa
test
push
ss
aaa
inc
add
cmp
lea
andl
inc
cmpsl
pop
pop
call
inc
mov
arpl
adc
enter
lds
xchg
and
aad
inc
data16
add
sub
add
dec
jle
mov
and
cmp
lock
std
xchg
stos
aam
sbbl
nop
add
pop
and
movsl
scas
xchg
in
enter
out
icebp
jns
push
test
iret
stc
aad
adc
ret
pop
fcmovnb
movsl
mov
jl
push
adc
push
test
mulb
mov
lahf
sub
add
popa
shlb
fidivrs
out
push
sub
jecxz
or
les
in
stos
pop
pop
bound
mov
outsl
pop
mov
movsl
adcl
mov
xchg
jg
adc
enter
addr16
sbb
mov
scas
in
mov
icebp
xor
outsl
enter
dec
jbe
jecxz
sti
jmp
ret
fiadds
int3
add
popa
push
mov
scas
sbb
rcl
movsb
orb
mov
mov
cld
mov
leave
adc
inc
in
pop
pop
sbb
insb
jb
pushf
in
je
arpl
add
fildl
gs
shll
lods
jge
mov
jecxz
pop
aaa
jmp
sbb
jl
scas
or
pop
int
mov
mov
mov
in
push
inc
mov
loop
std
add
inc
pop
addr16
xor
or
cmp
inc
lret
add
add
sub
sbbl
sbb
pop
mov
cli
xchg
push
xchg
jecxz
imul
xor
loopne
pop
dec
and
shlb
enter
jae
and
sub
xchg
jge
ret
jns
cmp
dec
push
mov
sahf
xchg
pop
jp
jno
jg
jg
inc
call
fnclex
ja
add
add
add
and
mov
lahf
mov
pop
repz
ret
shll
xchg
push
mov
fistps
in
stos
adcb
xchg
mov
lods
sbb
icebp
orb
sub
fld
inc
icebp
adc
or
sub
push
and
loopne
adc
add
push
add
and
adc
add
add
add
pop
outsb
inc
cmpl
fiadds
mov
jo
pop
jno
testb
or
cmp
jg
lods
push
daa
xchg
mov
fwait
test
mov
aam
xlat
arpl
mov
cli
out
xor
adcl
mov
cmp
mov
push
addr16
into
cmp
rcll
jo
sbbb
sub
cmp
lret
out
push
cmp
lods
jno
dec
insl
add
incl
arpl
dec
sub
jge
movsl
xchg
sub
sub
cmpsb
das
xor
and
dec
test
call
rcll
inc
pop
iret
data16
cwtl
xor
out
iret
pop
addr16
push
push
mov
cmp
ljmp
and
adc
lret
leave
xchg
inc
pop
mov
aam
fwait
dec
rol
add
add
jg
push
dec
adc
or
adc
notb
and
push
xchg
stos
cmpsb
xchg
and
mov
imul
cltd
popa
lods
or
out
dec
hlt
adc
outsb
mov
fs
cmp
cmp
mov
adc
repnz
bound
push
adc
adc
push
add
push
push
pop
adc
subl
inc
xchg
and
adc
sub
cmpsb
std
clc
xchg
aad
add
add
add
add
das
inc
add
add
add
dec
add
add
add
dec
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
or
or
add
mov
inc
add
add
add
add
add
or
adc
add
les
inc
add
add
add
add
jo
inc
add
add
add
add
add
add
inc
add
add
add
or
sbb
add
lods
or
sbb
add
je
inc
add
add
dec
or
sbb
or
js
add
cwtl
or
jns
add
mov
inc
add
add
js
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
hlt
adc
in
inc
add
inc
add
inc
add
inc
add
inc
mov
and
add
add
