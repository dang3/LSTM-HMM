sar
adc
sar
dec
or
jmp
cltd
sbb
xchg
jge
shrb
jp
and
mov
shl
and
into
dec
pop
jmp
fildl
mov
not
out
repz
jb
cmp
dec
and
loop
cld
xor
add
add
ja
test
adc
push
lds
stos
add
int
pop
mov
xor
add
and
mov
fldl2t
movsl
hlt
cli
add
add
lds
jp
rcll
add
or
sbb
add
mov
add
call
add
add
loopne
jecxz
add
xor
rorl
imul
lea
dec
add
push
add
add
cmc
push
adc
add
ljmp
aas
insl
add
jmp
add
repnz
xchg
sub
shll
in
mov
ret
add
mov
add
sbb
and
adc
xchg
ret
mov
mov
add
dec
mov
mov
or
sub
pushf
add
add
push
add
push
mov
add
int3
mov
lea
mov
dec
inc
pop
mov
pop
cld
push
stos
add
test
add
add
sub
push
push
clc
pop
roll
pop
mov
jno
add
add
add
fldcw
mov
add
mov
cltd
enter
mov
lahf
add
mov
mov
sbb
shl
xchg
cmp
out
xchg
push
xchg
adc
lcall
add
sub
add
in
sbb
inc
cli
or
dec
or
mov
enter
cvtpi2ps
mov
dec
fisubrs
jae
jnp,pn
inc
add
push
xor
and
add
dec
mov
fcompl
push
daa
test
mov
xor
arpl
les
jae
ret
loop
in
jg
scas
add
sub
rcrb
in
bound
xor
sub
loopne
xchg
mov
add
jb
add
pop
aas
mov
ror
xorb
cld
stos
ficompl
xchg
ret
es
adc
and
dec
int3
xor
int
push
jb
xor
movsl
nop
push
jmp
mov
int
clc
push
add
leave
lea
mov
das
and
xchg
jecxz
push
jns
repnz
add
jns
and
cmp
or
sbb
cwtl
and
dec
push
enter
mov
test
cltd
insl
ror
repnz
shrb
movsl
cmp
ja
pusha
sub
cmpsl
outsl
nop
ltr
in
mov
add
add
add
out
add
aaa
cmc
div
xor
int3
adc
inc
dec
inc
mov
cmpb
je
cmp
je
xor
inc
dec
add
ror
loop
push
push
push
push
call
push
call
push
push
push
push
call
call
push
call
ret
mov
pusha
xor
fcomi
xchg
add
ror
mov
add
inc
xor
cmp
je
test
add
mov
ror
popa
loop
lea
xor
sub
or
jne
lea
sub
cmp
jne
add
add
add
adc
add
add
mov
add
rolb
add
call
add
add
add
sbbb
add
sbb
add
xor
add
dec
add
sbbb
add
add
js
add
nop
add
sbbb
add
test
add
rolb
andb
add
fadds
add
lock
andb
add
or
add
and
add
cmp
add
push
add
andb
add
push
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
addb
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
and
add
loopne
add
add
add
add
add
pop
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
xor
add
and
add
add
add
add
add
add
add
adc
add
xor
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
arpl
add
push
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
cmp
add
jo
add
add
add
add
add
cmp
add
addb
add
add
add
add
add
add
and
add
nop
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
rolb
add
test
add
in
add
add
add
mov
add
test
add
in
add
add
add
xor
add
and
add
in
add
add
add
push
aas
add
mov
add
add
add
add
inc
add
jbe
add
in
add
add
add
insb
inc
add
loopne
add
in
add
add
add
dec
bound
add
sbb
add
add
add
add
add
add
loopne
add
in
add
add
add
or
add
loopne
add
in
add
add
add
in
mov
add
in
add
add
add
int3
aad
add
sbb
add
add
add
add
add
add
in
add
add
add
mov
add
loopne
add
in
add
add
add
insb
sub
add
sbb
add
add
add
add
add
add
sbb
add
add
add
add
add
add
loopne
add
in
add
add
add
or
add
loopne
add
in
add
add
add
in
lahf
add
loopne
add
in
add
add
add
int3
mov
add
in
add
add
add
lods
flds
add
sbb
add
add
add
add
add
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
lock
rcl
add
add
add
loopne
add
push
call
add
fcomp
add
add
into
into
add
fcomip
add
in
int
xchg
xchg
xchg
add
fcmovu
add
mov
icebp
add
add
div
add
mov
faddl
add
repz
mov
add
lods
push
add
cmp
add
add
add
hlt
hlt
add
jns
mov
mov
or
roll
pop
xchg
in
add
frstor
add
add
clc
clc
clc
add
leave
add
lahf
dec
add
sub
add
add
push
add
cmp
add
dec
add
jle
add
stos
sbb
jge
jge
pop
pop
pop
add
cli
cli
add
jne
gs
les
push
push
push
add
in
add
incb
ret
mov
mov
lret
lods
xor
mov
adc
push
push
mov
add
popa
popa
popa
add
outsb
add
dec
add
cmc
add
add
add
jb
pop
jg
add
ret
loop
jle
pop
pop
pop
add
jecxz
add
adc
add
add
add
mov
add
rol
sbb
fwait
add
pop
mov
ret
add
enter
mov
mov
lahf
jne
add
or
add
rolb
add
je
add
movsl
verr
iret
addb
add
add
inc
incl
in
mov
sub
incl
loop
addl
dec
push
incl
and
rolb
sbb
add
ud0
clc
hlt
jecxz
cmc
out
aam
push
pop
incl
inc
incl
pop
incl
icebp
jmp
aam
data16
add
incl
in
in
in
add
out
add
out
out
add
in
add
jnp
add
incl
in
in
in
add
out
add
ljmp
repnz
jecxz
add
in
add
out
out
add
jmp
add
loop
add
add
add
jmp
aad
jp
incl
repz
icebp
fiaddl
jmp
test
mov
ja
add
lahf
add
mov
add
rcrl
add
cld
cld
add
mul
add
incl
sub
out
mov
add
adc
add
add
add
ret
shll
mov
and
cli
add
loopne
add
aad
add
fadds
js
incl
ror
add
push
movb
cwtl
add
ds
add
mov
add
out
add
ret
add
leave
xchg
add
scas
daa
add
mov
add
mov
add
sti
add
mov
mov
add
aam
add
push
enter
mov
or
incl
inc
inc
faddl
lahf
xchg
xchg
add
mov
out
add
incb
push
leave
repnz
xor
push
idiv
add
cmp
add
flds
call
scas
jmp
femms
mov
add
mov
cmp
xchg
jmp
add
lahf
add
test
fildl
add
lds
daa
movsb
out
add
ret
cli
add
enter
repz
add
insl
or
or
icebp
ljmp
jb
enter
mov
add
in
add
xlat
xchg
add
sbb
add
add
clc
add
inc
testl
cmp
popl
sub
xchg
add
iret
repz
out
add
jo
add
add
ret
xchg
add
add
ret
mov
incl
add
add
pushl
ss
pushl
test
sub
pushl
ss
xchg
jle
pushl
ss
jl
decb
xor
pushl
ss
jle
test
add
pushl
ss
mov
decb
pushl
ss
adc
mov
xor
addl
cmp
aaa
daa
adc
jle
mov
jl
cmp
daa
adc
jle
mov
cmp
test
ljmp
daa
adc
jle
test
add
ljmp
adc
cmpl
mov
add
cmp
decl
xchg
mov
mov
dec
decb
decl
add
mov
add
dec
decb
pushl
add
mov
sub
incb
pushl
jle
test
or
or
incb
incl
xchg
das
das
das
and
lea
cmp
mov
test
lea
pop
ss
cmp
add
decb
cmp
mov
incb
aaa
mov
or
incl
mov
xchg
jl
aaa
pop
or
cmp
incl
add
or
add
or
incl
mov
push
push
or
mov
incb
push
jle
or
incl
pop
push
or
or
jl
aaa
push
or
add
decl
push
or
or
and
or
and
inc
decl
or
xchg
jns
and
xchg
push
adcl
add
cmp
or
sub
add
or
and
add
lcall
or
and
add
add
lcall
jns
and
and
add
add
pushl
add
add
incl
add
jle
jge
and
add
lcall
add
add
incl
add
jmp
incl
clc
add
loopne
jg
addb
incb
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
clc
add
clc
add
clc
add
clc
add
incl
lcall
ljmp
add
add
add
add
add
add
and
push
push
push
aas
push
push
push
lahf
pop
pop
pop
call
push
push
incl
add
add
push
pop
push
push
push
jg
push
push
fbstp
jbe
mov
jmp
push
repz
push
incl
add
add
add
add
add
pop
pop
pop
dec
pop
pop
pop
scas
arpl
call
fcmovnu
push
cmc
cmc
push
hlt
hlt
push
repz
icebp
icebp
lcall
pop
call
push
aas
inc
inc
inc
mov
inc
jg
add
add
add
pop
pop
pop
pop
pop
pop
pop
jg
pop
pop
fistpll
jp
rol
out
out
out
push
div
push
cmc
cmc
push
repz
repz
icebp
icebp
out
out
out
lcall
pop
call
pop
lcall
sbb
aas
add
add
add
add
pop
pop
pop
dec
pop
pop
pop
scas
addr16
fdivrp
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
repz
repnz
icebp
icebp
out
out
out
out
out
out
lcall
push
repz
popa
lcall
sbb
aas
add
add
add
add
add
add
pop
jg
pop
pop
fisttps
cld
cld
cld
cli
cli
cli
clc
clc
clc
clc
clc
clc
push
div
push
hlt
hlt
push
repz
repnz
lock
out
out
out
out
out
out
in
in
in
lcall
pop
push
repnz
pop
incl
add
xor
add
sub
add
add
add
add
pusha
jmp
jmp
std
std
std
sti
sti
sti
cli
cli
cli
clc
clc
clc
push
div
push
div
push
hlt
hlt
push
repz
repnz
lock
out
out
out
out
out
out
in
in
in
ljmp
push
lock
pop
incl
add
add
add
bound
std
std
std
sti
sti
sti
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
repz
icebp
icebp
push
lock
out
out
out
in
in
in
in
in
in
ljmp
jmp
out
out
out
lcall
pop
incl
add
add
sti
sti
sti
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
repz
repz
icebp
icebp
out
out
out
out
out
out
in
in
in
jmp
jmp
ljmp
call
fs
out
out
out
lcall
pop
incl
add
add
data16
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
repz
repnz
icebp
icebp
out
out
out
out
out
out
in
in
in
jmp
jmp
jmp
call
out
out
out
data16
in
in
in
jmp
popa
incl
add
add
imul
div
idiv
hlt
hlt
hlt
push
repz
repnz
lock
out
out
out
out
out
out
in
in
in
jmp
jmp
jmp
call
out
in
in
in
in
imul
ljmp
incl
add
add
imul
div
push
hlt
hlt
push
repz
repnz
lock
out
out
out
out
out
out
in
in
in
ljmp
call
out
jmp
in
jmp
jecxz
jmp
jecxz
ljmp
imul
jmp
gs
add
add
insl
push
hlt
hlt
push
repz
icebp
icebp
push
lock
out
out
out
in
in
in
in
in
in
ljmp
call
out
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
ljmp
insl
call
addr16
add
add
outsl
push
repz
icebp
icebp
out
out
out
out
out
out
in
in
in
jmp
jmp
ljmp
fstp
rcl
sar
in
in
jecxz
jecxz
loop
loop
loopne
loopne
outsl
outsl
outsl
jmp
out
ljmp
imul
jno
jno
icebp
icebp
icebp
out
out
out
out
out
out
in
in
in
jmp
jmp
ljmp
jmp
out
call
aam
lcall
mov
call
rcl
jmp
loopne
fdivrp
fstp
jno
jno
jmp
in
ljmp
incl
add
add
jae
out
out
out
out
out
out
in
in
in
jmp
jmp
jmp
call
out
in
in
xlat
xlat
xlat
ljmp
lods
ljmp
mov
fdivr
jae
jae
jmp
jecxz
ljmp
outsb
incl
add
add
jne
out
out
out
in
in
in
jmp
jmp
jmp
call
out
call
repnz
jmp
jmp
fcmovnu
fcmovnu
jecxz
jecxz
in
in
in
in
in
in
pushl
cltd
cltd
sti
sti
sti
jmp
loop
pushl
jo
ja
ja
in
in
in
ljmp
call
out
jmp
in
jmp
jecxz
jmp
out
jg
jg
out
out
out
call
loopne
pushl
jb
jns
jns
ljmp
call
out
jmp
in
jmp
jecxz
jmp
loop
stc
stc
stc
call
push
repnz
loopne
je
je
jp
jp
call
out
jmp
out
jmp
in
jmp
jecxz
jmp
loop
jmp
loopne
push
cmc
cmc
mov
popf
popf
sti
sti
sti
jmp
loop
fdivrp
fstp
jbe
jbe
jl
jl
out
out
in
in
in
in
jecxz
jecxz
loop
loop
loopne
loopne
fdivrp
out
out
out
call
test
call
fstp
fdivr
js
js
jle
jle
in
in
in
in
jecxz
jecxz
loope
loope
loopne
loopne
fdivrp
fstp
in
in
lcall
leave
leave
push
icebp
icebp
fdivrp
fstp
fdivr
fcmovu
jp
jp
addb
jmp
jecxz
jmp
loope
fdivrp
fstp
fcmovnu
fdivrp
inc
ret
mov
sti
sti
jmp
loopne
fstp
fcmovnu
fcmovu
fcos
jl
jl
addb
jmp
loope
fstp
fstp
fcmovnu
fcos
fcomp
fdivr
std
std
std
call
mov
jmp
out
fstp
fcmovnu
fcmovu
fcomp
fdivr
xlat
xlat
xlat
jle
jle
test
fstp
fdivr
fcmovnu
fcos
xlat
xlat
xlat
call
xlat
xlat
push
hlt
hlt
lcall
lret
lret
push
lock
fdivr
fcmovnu
fcos
fcomp
fdivr
xlat
xlat
xlat
call
incl
add
add
fstp
fdivr
fcmovu
fcos
xlat
xlat
xlat
call
call
rcl
jmp
lods
lods
cli
cli
cli
fdivrp
fcmovnu
fcos
fcomp
fdivr
xlat
xlat
xlat
call
dec
lret
lret
incl
add
add
fstp
fdivr
fcmovu
fcomp
fdivr
xlat
xlat
xlat
dec
enter
cmpsb
cmpsb
decl
mov
clc
clc
clc
jmp
in
fcmovu
fcos
xlat
xlat
xlat
call
rcl
mov
lcall
test
add
fcmovnu
fcmovu
fcomp
fdivr
mov
lcall
int
int
clc
clc
clc
push
hlt
hlt
jmp
in
fcmovu
fcos
mov
movsl
movsl
incl
xchg
dec
lea
sar
mov
mov
xchg
xchg
xchg
ljmp
std
std
std
push
lock
loope
fcmovnu
lret
lret
lret
ljmp
lea
mov
mov
add
mov
mov
movsb
movsb
movsb
scas
icebp
icebp
icebp
clc
clc
clc
ljmp
call
rcl
mov
xchg
xchg
decl
mov
pop
mov
mov
inc
rol
mov
mov
mov
add
mov
decl
lea
add
incl
jg
lock
incl
add
clc
add
psubb
add
clc
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
clc
add
clc
add
incb
decb
incl
add
add
add
and
add
add
add
add
and
add
add
add
add
mov
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
faddl
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
stos
add
add
inc
add
insl
add
add
je
jae
add
dec
add
jb
outsl
add
add
popa
add
imul
add
add
and
dec
add
bound
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
and
jne
jae
add
add
jae
and
bound
popa
add
imul
add
and
jae
arpl
push
add
insb
add
jb
and
bound
jns
and
dec
add
jb
outsl
add
add
popa
add
imul
add
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
outsl
add
je
ja
popa
add
add
add
inc
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jb
outsl
add
add
popa
add
imul
add
add
and
push
add
push
add
insb
add
jb
and
inc
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
add
add
add
sbb
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
outsl
add
add
popa
add
imul
add
add
and
push
add
push
add
insb
add
jb
add
xchg
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
arpl
sub
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
outsl
add
je
ja
popa
add
add
add
outsb
add
add
je
jae
and
insb
add
arpl
add
jae
outsl
add
jae
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
dec
add
add
pop
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
push
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jb
outsl
add
add
popa
add
imul
add
add
and
push
add
push
add
insb
add
jb
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
add
add
add
add
add
push
add
add
imul
inc
add
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
or
popa
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
or
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
or
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
repz
add
add
add
add
add
add
add
add
add
add
jae
xchg
sti
add
insb
cli
mov
int
leave
lret
add
pop
outsl
mov
sbb
insl
and
loop
ljmp
add
add
add
add
cmp
fsts
add
in
sbb
loope
mov
out
daa
pop
cwtl
ret
mov
bound
cmp
add
add
add
add
add
cs
sub
add
add
add
cmpsl
add
mov
add
add
add
add
dec
add
pop
add
add
add
mov
add
popf
add
add
add
add
and
add
cli
add
add
add
out
add
add
add
add
mov
pop
add
mov
add
rolb
add
add
add
add
add
and
sbb
push
jge
add
add
xlat
add
add
add
add
add
add
add
lods
add
leave
jge
aam
add
add
fiaddl
add
mov
add
pushf
add
add
add
sbb
add
add
add
je
add
push
add
in
add
add
add
cmp
add
ss
mov
popa
iret
add
pop
add
add
add
loop
add
inc
test
mov
ret
in
repz
ret
shl
jmp
rolb
mov
lods
mov
pop
xchg
mov
add
leave
and
dec
jnp
inc
push
stos
jae
xor
xor
jp
pop
xchg
stos
mov
and
insl
mov
lods
stos
mov
fadd
shlb
insb
cmp
or
insl
sub
add
iret
jb
adcb
mov
xchg
pand
movsl
shll
and
xchg
or
pusha
cmp
int
sub
xlat
or
cmp
test
mov
aas
cmp
mov
fs
xor
add
jg
mov
stc
data16
es
dec
out
sbb
sbb
je
and
scas
mov
dec
mov
xor
pop
mov
and
inc
es
jns
insl
inc
xchg
pop
testb
fistpll
cmc
out
xlat
jge
xchg
xchg
loop
aad
or
lods
cmp
mov
cwtl
aaa
add
push
or
cmp
mov
stos
sbb
or
fcoml
jmp
dec
sti
mov
mov
cmc
leave
inc
jne
popa
dec
xchg
icebp
rcr
mov
lea
xor
lods
nop
xchg
outsl
mov
test
and
ffree
add
xchg
mov
cmpl
js
cld
adc
out
add
loope
sbb
roll
add
aad
mov
xor
or
push
es
fdivs
repnz
xchg
test
sti
push
and
aam
jo
jge
btc
in
testl
dec
scas
add
sub
shll
sbb
mov
call
and
in
stos
mov
dec
pop
inc
pop
and
jecxz
mov
jecxz,pn
movsb
scas
sahf
mov
sbb
pop
test
sbb
out
das
loope
int3
mov
fadds
mov
sti
nop/reserved
out
sahf
test
dec
fisttpl
mov
loop
outsb
xchg
xor
movsb
popf
add
in
mov
cmp
xor
mov
or
js
shlb
add
dec
xchg
or
cltd
loopne
pop
clc
ja
lods
pop
inc
int
nop
adc
cltd
je
or
lcall
nop
clc
jmp
dec
cwtl
push
push
lahf
aad
add
lret
mov
imul
or
jne
movsb
mov
sub
hlt
jecxz
add
add
sbb
scas
sbb
sub
inc
add
cmp
je
dec
repz
inc
scas
push
fldcw
icebp
int
js
push
sbb
roll
dec
and
jle
pop
jmp
push
loop
lods
xor
mov
sbb
fnsave
cmp
inc
scas
inc
pop
cmp
cltd
cld
ljmp
dec
xchg
ret
mov
add
mov
cmpsb
into
mov
mov
or
ja
clc
dec
lods
and
das
addr16
call
xchg
test
jle
add
sbb
jp
or
data16
lcall
xchg
dec
cmpsb
sub
sub
mov
inc
jnp
in
cmp
mov
imul
jle
pop
adc
push
pop
fstp
and
pop
cs
sbb
mov
addb
inc
pop
pop
rorb
in
pop
sahf
daa
push
addr16
ljmp
mov
lods
out
nop
sbb
comiss
or
sub
pop
xchg
or
jno
ljmp
mov
xchg
jmp
stos
mov
fcom
es
enter
dec
xor
mov
stos
adc
rep
push
lahf
mov
xchg
nop
fwait
mov
xchg
xor
mov
movsl
mov
xor
pop
xor
adc
outsl
ffree
rorb
dec
clc
push
cmp
mov
ja
jle
jae
clc
hlt
mov
mov
loope
mov
mov
push
fs
dec
sbb
roll
jnp
xchg
sbb
or
adc
sub
ds
xchg
stc
jno
or
inc
pop
jmp
jle
stos
aad
mov
dec
mov
or
push
or
enter
push
inc
test
xchg
jl
out
lea
jmp
cmpsb
pop
inc
outsb
bound
sti
ss
mov
mov
gs
cmp
xlat
into
test
addb
sbb
cmp
js
sbb
adc
push
push
inc
cmp
jbe
leave
pop
aam
add
push
fdivp
adc
cltd
loopne
mov
cld
sbb
popa
jo
xchg
sub
mov
into
jmp
bnd
pushf
cmp
jb
mov
add
sub
pusha
cmpsb
gs
pop
dec
in
or
nop
js
sahf
ret
lods
in
push
push
imul
xchg
leave
cmpsb
adc
enter
mov
jbe
pop
jne
sbbl
test
addl
adc
mov
xchg
add
and
pushf
out
cwtl
or
or
loope
push
jle
insl
mov
int
inc
and
sub
pop
fwait
jne,pn
jnp
popf
fisubl
divl
xor
into
in
inc
jp
sub
jo,pn
and
incb
cli
mov
lahf
shlb
je
out
test
repz
dec
and
jg
sub
outsl
adc
push
lret
cli
movsl
pop
push
mov
sub
jb
hlt
sbbb
cmc
test
or
loopne
dec
sbb
fcmovb
stc
mov
mov
add
addr16
addb
fnstenv
faddl
and
aad
adc
mov
incl
mov
fiaddl
jmp
lcall
cmpb
int3
daa
pop
sar
lods
cmp
xor
mov
aas
pop
mov
cltd
add
std
xor
sub
out
shll
xchg
sbb
add
push
push
dec
mov
cmpsl
imul
loope
jg
pop
outsl
imul
mov
cmpsl
repnz
movsb
shr
loopne
out
aas
repz
mov
aad
xchg
fsubl
push
inc
inc
dec
icebp
jp
loopne
and
mov
adc
cld
pop
inc
and
jns
js
cmc
popa
hlt
aam
cmpsl
or
and
mov
push
aam
jl
or
mov
fmulp
sbb
sbb
xchg
push
aaa
adc
adc
lahf
mov
xor
push
add
ret
mov
add
jo
mov
push
cld
dec
pop
outsl
and
inc
in
in
mov
out
jecxz
mov
cli
call
and
mov
mov
cld
out
mov
cwtl
outsb
imul
dec
imul
xor
add
insl
inc
popa
dec
dec
cmp
cltd
dec
adc
in
daa
adc
sarb
push
cwtl
cmp
mov
cs
mov
pop
add
add
je
cwtl
jge
aas
insb
push
arpl
cmc
and
and
out
loop
and
dec
cs
push
sbb
mov
pop
insb
mov
push
push
sbb
imul
ficoms
ljmp
mov
int3
mov
pushf
ficoml
int3
fldl
sbb
adc
dec
lea
sub
xchg
push
lea
jl
outsb
mov
mov
xchg
jo
sbb
push
push
std
adc
sbb
jb
shr
cmp
fmulp
lahf
aam
data16
mov
push
shrl
cmpsl
lock
roll
call
es
leave
fldenv
cli
xchg
ret
cmp
insl
or
or
sti
inc
movsl
pusha
ja
cld
mov
mov
in
mov
lret
int3
mov
aaa
pop
cmp
inc
daa
mov
mov
and
pushf
or
jp
aam
pop
loopne
insl
pop
sub
jb
mov
add
jae
pop
pop
frstor
cmpsb
jmp
rolb
jns
add
sub
jg
jl
out
jae
push
and
push
loope
aad
in
lret
pop
and
adc
in
fistpll
xchg
cmp
pushf
scas
jle
push
imul
outsl
jb
lcall
in
sub
lcall
sub
xor
xchg
push
add
dec
int3
insb
dec
test
imul
push
pop
stos
add
cmp
iret
pop
xorl
jae
push
xchg
incl
stos
lret
jne
addr16
jnp
push
mov
call
daa
out
mov
jge
imul
loope
fcmovb
pop
in
dec
adc
pusha
xor
sti
pop
mov
jge
mov
fbstp
add
jp
int3
movsb
adc
jne
and
mov
mov
gs
inc
rcrl
rcrb
roll
adc
add
ss
nop
loopne
xor
leave
mov
sub
shll
ret
push
aam
shll
xlat
push
push
jge
lods
pop
jb
and
pop
adc
push
aaa
shl
notl
adc
aaa
insb
xor
fs
push
push
lea
jmp
mov
add
cld
push
pop
aad
lret
cmp
orb
xchg
aas
cmp
fcomps
cmp
xor
insb
insl
imul
inc
fstl
mov
mov
sub
cwtl
xlat
pop
cmp
and
inc
jmp
data16
sub
out
andl
sub
and
dec
push
nop
dec
lods
leave
add
jns
rdmsr
mov
test
cltd
inc
pop
inc
out
lds
out
clc
push
call
xchg
xchg
int3
iret
mov
ds
repnz
dec
jl
mov
sarb
sbb
jmp
fsubrl
sub
xchg
pop
repnz
mov
mov
pop
jp
xchg
test
pop
add
add
test
les
test
fsubs
jle
int
mov
icebp
cwtl
mov
fisubrs
mov
bound
pop
dec
pop
inc
jg
mov
xor
stos
into
sarl
fcompl
mov
imul
dec
daa
das
cwtl
ja
clc
mov
lds
cs
jp
pop
test
mov
add
imul
sti
je
xor
sldt
xor
clc
or
std
cmp
or
sub
movb
pop
aas
ja
loope
xlat
jae
pop
aas
cmp
push
rorb
xor
test
add
cld
inc
jle
pusha
mov
push
mov
xor
add
and
xor
and
les
sub
pop
xor
mov
jno
pushl
shl
or
jecxz
ret
pop
mov
loope
test
inc
cltd
ret
inc
and
jbe
xchg
xor
sub
out
sti
iret
sbb
mov
fildl
lahf
ds
gs
sbb
movsb
lret
rol
ror
in
out
fadd
in
xor
movsl
fmull
out
repz
pop
xor
loope
xor
sbb
in
cwtl
es
or
dec
lods
xor
sbb
mov
insb
pushf
scas
lea
aas
jno
lock
sti
cmpsl
jo
pop
pop
jecxz
ds
aaa
imul
mov
cmc
sub
xor
data16
popf
push
or
negl
out
sbb
das
lret
jbe
add
jae
inc
cmp
inc
sbb
mov
adcb
jp
add
aad
inc
mov
xchg
out
jge
rorb
xor
int3
mov
lock
stos
pop
dec
jecxz
adc
xor
or
push
ffree
lock
sbb
in
cs
mov
movsb
imul
daa
add
call
mov
mov
in
dec
xchg
cli
aad
stc
lret
mov
cmc
inc
or
mov
mov
xchg
and
add
nop
lods
fbld
dec
mov
push
push
push
adc
add
xlat
xor
int3
mov
loop
xor
mov
pushf
dec
jns
stos
push
lds
sahf
jecxz
in
scas
loopne
mov
rolb
out
mov
jl
arpl
push
ja
and
cld
mov
cmp
cmp
dec
out
jnp
aaa
insl
inc
aas
fisttpl
shrb
pop
icebp
and
sti
mov
push
fisubs
arpl
das
xor
gs
xlat
es
stc
arpl
testb
pop
hlt
xor
add
icebp
iret
xchg
lock
or
mov
cli
inc
or
es
in
popa
stos
mov
jle
mov
aas
sahf
cmc
test
rcr
icebp
jle
mov
xchg
jmp
xor
out
mov
loop
out
adc
add
jnp
dec
xchg
pop
gs
shll
mov
popf
sbb
arpl
sbb
and
add
outsb
jecxz
aad
sub
stos
test
sti
lcall
dec
mov
xchg
cs
lods
roll
repnz
sbb
sar
xor
and
mov
mov
mov
push
ss
std
jmp
flds
sub
fadd
js
fwait
das
jns
mov
jae
mov
push
add
test
std
rcl
ret
and
scas
pusha
bnd
inc
pop
gs
sbb
bswap
jnp
or
sub
xor
iret
dec
jb
mov
out
sti
sahf
push
sub
arpl
rcll
pop
aaa
cmpsl
stc
push
mov
roll
push
pusha
pop
pop
pop
ja
in
in
xor
or
dec
dec
or
dec
cltd
jmp
out
sahf
lret
out
push
ja
fistl
mov
inc
sbb
cmp
jmp
leave
jno
xchg
inc
aaa
int3
sbb
popf
mov
fildll
xlat
jnp
or
shrb
cwtl
lahf
dec
dec
nop
js
sub
mov
test
int
outsb
jne
or
insb
add
ret
insl
lods
fsubrl
cmpsb
add
push
fildll
inc
out
inc
push
sub
jg
add
push
pop
arpl
mov
arpl
ss
jne
pop
fdivs
clc
jmp
sti
mov
pop
jns
cmp
sbb
jecxz
sub
push
loopne
mov
aam
inc
inc
and
adc
add
xchg
test
das
pop
sbbb
cli
push
repnz
adc
loop
jmp
insl
mov
loopne
inc
dec
and
inc
add
adc
insl
movsb
mov
jb
mov
mov
stos
hlt
xor
fwait
pop
or
xchg
mov
adc
push
cmp
push
push
mov
cltd
cmc
int3
sub
xor
icebp
lret
jle
int3
mov
aam
mov
fiaddl
and
jae
mov
cmp
mov
xchg
xchg
dec
fcomps
add
lea
mov
fsts
xor
push
mov
sub
add
dec
in
rcrb
sub
enter
adc
sub
shlb
jne
addl
pop
popf
aam
cmc
out
out
iret
push
out
movsb
fsubrs
stos
outsb
out
ljmp
add
lock
sub
or
mov
pop
or
jnp
repnz
imul
repz
enter
mov
jns
stos
fists
adc
scas
mov
xchg
cmc
add
xchg
rol
in
fdivrp
sub
add
aaa
cmpsl
jmp
cmp
bound
add
lds
sbb
out
xchg
and
adc
pop
mov
pop
dec
jnp
add
cmpsb
fwait
test
ljmp
gs
push
pop
arpl
jne
xchg
nop
into
xorb
iret
shll
mov
pop
insb
fisttpll
or
fsubrp
mull
aas
cmpsl
cmc
ja
arpl
jge
jmp
leave
dec
add
lcall
sub
out
pop
or
popf
inc
ret
jno
sub
mov
adc
call
out
jo
nop
stc
xchg
out
lcall
addb
decl
sub
mov
adc
cmp
aam
lret
adc
call
push
pop
out
mov
leave
push
cmp
fistps
imul
test
add
xor
sbb
add
mov
adc
fimuls
sbb
das
shl
jg
ljmp
idivl
pop
xorl
xchg
inc
dec
sub
shll
push
pop
add
cmp
lock
xchg
adc
xchg
pop
sbb
jmp
mov
jmp
scas
or
push
out
pop
repz
shl
lahf
add
fildll
cmp
ja
dec
add
test
bound
ret
xchg
push
mov
mov
test
jno
xchg
popf
sbb
and
ret
push
xor
loop
data16
jbe
cmpsb
xor
jge
cmp
dec
bswap
mov
into
sbb
ds
or
mov
stc
lret
es
fistpl
lods
pop
mov
cmp
negb
sub
push
xchg
cs
add
jle
jmp
mov
pusha
iret
js
aaa
ja
lcall
push
ficoml
test
ret
fs
fidivrl
insb
xchg
inc
je
in
sti
adc
je
add
jmp
dec
sahf
movsb
mov
xchg
or
xor
mov
imul
ljmp
mov
int3
add
or
shll
inc
add
nop
sbb
mov
xchg
lret
cmp
sbb
dec
sub
scas
add
dec
mov
and
adc
push
jge
lds
mov
leave
or
sub
mov
add
icebp
or
xchg
add
dec
aaa
movsb
adc
imul
jmp
push
aad
in
jecxz
outsb
pop
test
pop
add
inc
xor
mov
push
cmp
ljmp
inc
xchg
mov
fcompl
fidivrl
sbb
inc
mov
inc
push
cmpsl
jno
popf
xchg
push
imul
push
fldcw
and
adc
popa
mov
fsubr
mov
sub
xor
scas
enter
loop
mov
sti
lods
xor
and
and
mov
cmp
ljmp
mov
jle
fistps
pop
call
inc
add
ss
mov
add
cmp
sahf
cmp
mov
fistpll
enter
push
outsl
shlb
lahf
mov
pop
adc
sbb
gs
mov
add
sbb
add
cs
rcr
and
lret
bound
js
ja
fs
xchg
fisubrs
mov
stos
or
sbbl
out
mov
cwtl
lea
push
mov
enter
mov
insb
inc
rorb
xor
stos
movsl
movsl
scas
xlat
int3
arpl
mov
jo
jle
out
and
mov
lcall
stos
mov
fildll
dec
lret
bound
jle
call
xlat
xor
push
mov
xchg
xor
jae
pop
lock
fidivrs
lret
jge
push
fsubrs
and
push
flds
shlb
outsl
outsb
cmp
loopne
stos
mov
mov
inc
xor
sub
mov
mov
add
add
add
dec
xchg
add
add
sbb
push
mov
popf
fsubs
jbe
pop
js
mov
dec
paddq
test
in
sbb
mov
push
jno
das
sbb
jecxz
jne,pn
shlb
xor
repnz
stc
mov
mov
ss
cmp
xchg
scas
lret
jge
mov
inc
or
adc
lret
dec
daa
mov
cmp
pop
adc
or
jp
mov
in
sbb
test
mov
inc
push
mov
xchg
lods
xchg
push
jo
into
ja
aas
xchg
xchg
jo
or
cmpsb
mov
shrb
cs
loope
mov
dec
lods
sbb
shr
in
lods
imul
out
stos
outsl
jmp
les
loop
dec
imul
add
add
jae
cmp
mov
push
sub
push
ret
xchg
dec
add
lods
call
repnz
xchg
add
add
mov
add
mov
add
add
add
add
pop
mov
pop
icebp
fwait
xor
add
dec
cmp
fistl
das
popf
jno
jmp
and
stos
sbb
adc
popf
add
jecxz
pushf
pusha
scas
push
ja
and
ja
pop
add
add
sbb
std
add
inc
jo
aas
xor
jbe
fildl
add
push
mov
lahf
adc
mov
out
jmp
in
movsb
or
sti
cld
stc
push
jns
lret
and
andl
add
es
les
inc
fdivs
add
subb
shrl
add
add
sub
add
mulb
add
leave
push
add
cmp
add
add
add
add
ret
movsl
add
cmpsl
inc
mov
jle
inc
add
int
ret
mov
inc
add
add
sarl
mov
jo
cltd
insl
add
push
push
cmp
or
or
push
push
sbb
add
jo
iretw
sti
xchg
push
ret
call
add
pop
pop
xor
cmp
and
and
and
add
sahf
out
xchg
loope
imulb
xor
add
in
jnp
mov
pop
pop
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
mov
add
repnz
dec
dec
add
add
add
add
add
sbb
add
lret
add
stos
add
add
add
xchg
fwait
test
std
mov
xor
jg
cs
dec
iret
rolb
mov
add
dec
add
mov
and
mov
add
sub
arpl
add
push
imul
out
loop
add
or
sarl
ret
inc
add
dec
add
add
cwtl
add
xchg
out
push
add
pusha
lea
test
adc
test
pop
repnz
and
cmpsl
add
pop
movsb
notl
jb
push
jb
inc
sbbl
js
add
sub
or
sti
lret
add
add
mov
out
add
add
sub
mov
push
lds
add
leave
or
add
cmp
int3
xor
ret
mov
add
mov
mov
cltd
inc
stc
xor
addb
nop
add
into
add
lret
add
enter
les
add
add
add
add
mov
and
in
add
add
add
jo
gs
add
dec
add
push
push
add
add
xchg
and
sub
pop
mov
add
add
pop
dec
mov
add
jl
inc
add
pop
add
mov
sbb
jb
lret
icebp
and
sub
xchg
dec
add
dec
add
test
loope
add
inc
push
add
mov
add
outsb
add
imul
call
jno
jge
sub
add
add
add
aaa
addb
popl
jmp
push
in
add
mov
dec
inc
add
sahf
mov
dec
push
add
add
add
fcom
add
add
add
add
pushf
sub
xor
or
add
push
imul
rol
add
inc
scas
add
dec
add
mov
xor
add
adc
mov
mov
scas
fucomi
add
add
faddl
mov
add
mov
in
or
lods
mov
add
pop
ss
sti
add
insb
add
inc
imull
add
sbb
xchg
mov
mov
orl
dec
pop
dec
add
dec
add
repz
clc
faddl
rcl
add
cltd
xchg
add
add
outsl
add
fldcw
pop
call
inc
or
fwait
out
lock
int3
add
int
mov
add
add
add
mov
sub
cwtl
lds
es
and
or
pop
scas
add
stos
add
add
loop
add
test
mov
add
add
jns
add
or
loop
push
pop
add
adc
adc
xchg
fisubrs
out
mov
mov
add
add
add
shl
dec
push
and
insb
repz
outsb
add
or
movl
int3
fs
jmp
add
add
add
pop
sub
inc
sub
jno
push
jb
add
mov
cmp
scas
dec
add
add
add
add
lcall
loop
lods
pusha
cmp
add
outsb
add
pop
outsb
add
add
aad
cmp
add
movsl
add
mov
stc
test
aad
add
mov
icebp
mov
add
cmpsb
mov
add
lock
add
and
adc
dec
lods
add
cmp
add
add
hlt
add
add
jno
pop
dec
sbb
dec
lods
jno
add
add
dec
pop
add
add
das
adc
fsubr
add
jmp
stos
push
jecxz
or
and
popf
add
add
pop
add
pop
add
add
xlat
add
data16
add
jecxz
inc
roll
and
mov
jg
icebp
cmp
loop
add
push
mov
out
add
loopne
icebp
faddl
cli
js
add
sahf
sub
ret
pop
or
jl
add
add
mov
ljmp
pop
roll
add
add
add
add
add
cld
bound
test
add
filds
neg
add
xchg
and
add
verw
inc
repnz
dec
pop
dec
mov
mov
add
add
add
adc
icebp
das
add
adc
cmp
lcall
add
out
std
xchg
add
add
add
xor
add
add
mov
jno
xchg
add
add
pop
add
add
jnp
add
pop
insl
dec
push
jmp
daa
sub
idiv
add
add
jle
mov
iret
out
ss
and
leave
test
mov
leave
adc
adc
and
add
popf
add
test
adc
add
call
add
xchg
mov
div
add
fcompl
xchg
and
add
cmpsb
add
notb
add
pop
add
ljmp
xchg
add
xor
add
add
out
add
fs
jle
add
aaa
add
inc
out
add
nop
mov
add
adc
push
hlt
pop
add
fiaddl
mov
and
add
add
add
add
push
cmp
or
add
add
add
faddl
inc
mov
add
pop
add
add
das
cmp
in
add
add
sbb
stos
nop
pusha
add
andb
sub
xor
gs
add
add
push
xchg
add
add
movsl
add
mov
xor
add
add
adc
ffree
add
movsb
sub
push
add
jb
xchg
jg
dec
add
add
add
and
add
sub
imul
jl
add
add
add
testb
stos
daa
add
add
mov
mov
add
xor
repnz
add
mov
pop
mov
dec
add
bound
daa
add
add
or
jb
add
fiaddl
add
mov
mov
test
xchg
xor
shlb
add
add
decl
mov
add
add
add
pusha
mov
mov
add
add
add
sbb
push
xor
add
ret
icebp
cld
and
dec
or
add
add
testl
incb
jle
lret
iret
pushf
add
popf
adc
pop
add
pop
add
cmp
imul
add
add
div
add
psadbw
dec
add
stc
clc
add
pop
add
mov
pop
add
mov
pop
lcall
add
add
add
es
pop
add
aad
or
add
add
mov
cmp
dec
cmpsl
and
add
add
shr
data16
add
add
add
pop
push
loopne
inc
add
and
add
add
add
lahf
push
add
popa
add
jg
pop
pop
add
ss
pop
add
imul
xchg
add
add
add
jo
movsbl
aas
add
cmp
or
movb
add
mov
pushf
clc
popa
add
pop
add
pop
add
add
jle
xor
dec
xor
cmpsb
adc
mov
pusha
cmp
add
jg
jmp
lea
xor
fdivr
add
loopne
mov
stc
mov
es
add
jg
pop
mov
outsl
mov
push
xchg
and
aad
sbb
add
rcl
fstpt
dec
cmp
int
jg
movsl
add
add
aas
add
loop
ret
loope
lret
and
lods
stc
mov
scas
out
aad
scas
add
les
into
mov
lldt
or
add
inc
incb
add
and
add
add
xchg
jg
or
xor
cltd
mov
rcrb
sbb
repnz
push
sub
and
je
popl
es
add
iret
add
add
aas
add
add
inc
add
jge
testb
push
outsl
in
push
aam
adc
daa
push
pop
add
sub
add
cmp
stos
add
ljmp
movsb
add
jb
dec
incb
jg
data16
mov
or
sbb
mov
add
add
ret
inc
push
sahf
add
fwait
call
cmc
add
imul
push
add
aam
cld
ret
sub
add
mov
cld
xchg
sub
inc
nop
outsl
add
push
outsl
cltd
rolb
sub
pop
stos
push
xchg
in
add
pop
stos
push
repz
add
shrb
add
aaa
out
add
lcall
scas
jns
out
add
das
std
sub
add
jle
push
pop
add
sbb
add
movsl
add
stc
inc
scas
push
add
popf
add
push
and
push
add
push
aas
add
dec
movb
leave
ja
imul
roll
mov
jl
add
pop
add
add
cli
add
add
fiadds
aad
addb
push
addr16
cmpsl
mov
add
cmpsl
repz
mov
xor
icebp
and
mov
leave
sbb
lods
adc
add
dec
jmp
addl
in
mov
popa
add
add
add
add
mov
movl
mov
add
add
lcall
cltd
xchg
jmp
xor
mov
add
and
loopne
and
test
sub
xorl
lret
add
lret
jg
std
add
xor
add
rolb
test
adc
add
pop
sub
jo
jmp
popa
jecxz
add
loopne
cwtl
fldenv
add
add
add
add
add
add
lcall
test
inc
add
adc
add
add
add
add
add
xchg
add
add
add
add
sbb
add
push
cmp
test
int3
add
push
add
lea
push
add
jmp
add
add
fisubrl
add
add
cld
pop
in
mov
testl
add
cmp
add
add
pop
jnp
add
xchg
ljmp
add
add
in
add
add
add
jae
dec
roll
into
vpmadcswd
mov
push
ret
and
adcb
jmp
outsl
shrb
fsubrl
imul
cmp
jbe
mov
mov
mov
inc
sub
dec
adc
dec
cs
cmc
leave
std
out
insl
or
js
sub
lock
shlb
sub
ljmp
sub
sub
cmpsl
scas
inc
stos
imul
ljmp
add
fisttpll
dec
psubusb
lahf
addr16
sbb
clc
inc
decb
xor
out
aad
or
in
jmp
jmp
jb
out
lock
out
outsl
stos
jl,pt
push
mov
mov
cmp
int
lret
xor
out
int
add
push
dec
out
xchg
xchg
std
outsl
xor
mov
add
pop
jecxz
mov
jecxz
das
inc
cmc
jo
dec
lret
xor
orl
js
sbb
inc
movaps
repnz
mov
outsl
mov
outsl
cwtl
outsb
dec
imul
mov
subl
mov
xchg
inc
bound
dec
je
out
pop
dec
loop
movsl
out
das
sarl
dec
nop
sub
sub
in
stos
and
das
xchg
sub
das
xchg
das
dec
sub
fcomps
sub
lret
icebp
xchg
int3
add
pmaxub
pandn
inc
or
mov
insb
fistps
inc
rorl
lods
ss
out
add
clc
out
add
shr
jmp
daa
ja
push
pop
or
push
and
outsb
xlat
jno,pt
sub
iret
mov
icebp
out
insb
enter
dec
or
testb
xor
jg
lret
pop
cmpsb
or
add
push
lcall
stos
loop
test
rcll
sub
jge
xchg
aas
mov
cmp
sub
inc
cmp
sub
lods
icebp
sub
out
out
lcall
pop
xlat
imul
aam
ficompl
insb
push
push
jle
push
mov
ret
mov
jg
mov
jle
dec
lock
dec
mov
int3
inc
push
call
or
scas
sub
outsl
fst
es
out
loop
in
in
jecxz
call
jp
jno,pn
repnz
pop
std
ds
aam
fisttps
sarb
fmull
jmp
fisttpl
sbb
push
pusha
jno
mov
outsl
jp
mov
aaa
jmp
fidivs
jmp
xor
mov
fidivs
ss
in
mov
and
rsqrtps
push
arpl
ret
enter
int3
jbe
sbb
adc
es
int3
popw
sbb
cmpsl
sbb
cmpsl
mov
popa
lods
mov
jnp
or
jne
dec
stc
xorb
mov
mov
mov
ja
movsb
stc
mov
dec
or
clc
push
shrb
test
push
mov
insl
fbld
pushf
shll
cmpsb
sahf
call
test
roll
dec
lods
dec
or
test
int
loopne
test
test
add
daa
pusha
sub
sub
sub
les
sbb
data16
test
jns
not
lret
add
pop
or
or
stos
mov
sbb
push
xlat
inc
mov
aam
test
inc
jmp
mov
inc
out
cmp
sub
push
repnz
jecxz
and
imul
and
out
jle
int
jg
enter
push
loop
or
sarb
inc
add
dec
sbbb
xchg
and
movsb
mov
stos
pop
stos
mov
mov
adc
mov
mov
je
dec
mov
les
dec
mov
bound
mov
xor
pop
or
push
xlat
sub
imul
mov
xchg
inc
push
fstpl
ret
xor
or
inc
jne
sahf
dec
dec
dec
lahf
dec
or
into
loop
push
dec
xchg
inc
cmpb
xor
leave
and
sub
sub
sub
repnz
mov
clc
and
pop
loopne
mov
leave
adc
or
or
or
or
push
ljmp
or
add
cmp
mov
pop
dec
aam
test
push
jmp
repnz
add
jge
jmp
out
sbb
imul
inc
aad
ds
loopne
aas
lret
cmp
loop
lret
aaa
arpl
sub
sbb
movsb
xchg
push
stos
mov
mov
pop
cmpsb
fiaddl
inc
cli
mov
cs
rolb
pop
lea
mov
mov
jnp
andl
jae
xor
push
dec
cs
gs
shrl
ret
dec
fsubrs
and
in
pop
jno
leave
jmp
mov
xchg
dec
clc
dec
orl
xchg
iret
dec
in
sub
jge
lret
xchg
popf
sub
ss
shlb
mov
sub
das
mov
and
test
aad
push
pop
hlt
stos
jp
add
push
into
cmp
xchg
or
pop
gs
jo
sub
fidivrs
jns
scas
add
call
dec
jmp
pop
mov
aad
sbb
imul
jnp
sub
jle
das
dec
mov
mov
adc
xor
cmp
jp
adc
inc
stos
push
test
lret
xchg
imul
dec
addb
lea
dec
mov
andl
jnp
mov
mov
push
repz
dec
int3
add
fs
dec
int3
pusha
movb
push
jl
aad
sbbb
dec
in
insl
in
aam
loope
imul
in
setns
adc
mov
lods
sub
xchg
daa
dec
or
and
or
and
test
cmpb
in
add
mov
sub
pop
fldt
ret
add
sub
andb
cs
pop
movb
or
ror
out
int3
xor
ret
enter
add
jl
sub
int3
cmp
xor
jbe
lods
dec
lret
adc
in
ljmp
xchg
ret
aaa
inc
mov
cmp
cmp
stos
mov
inc
movsl
mov
inc
mov
outsl
cmpsl
jl
psubw
pop
xor
jg
aaa
test
xor
fistps
fcompl
or
gs
dec
iret
imul
push
loope
push
push
ljmp
sahf
lods
cmp
sub
out
pop
outsb
out
pop
push
ret
mov
cmp
push
mov
mov
and
jl
pushf
and
push
mov
jge
cmpsb
out
jo
xchg
in
dec
or
sub
mov
and
lret
inc
jno
repz
sub
daa
sbb
fildl
sbb
stc
enter
lret
and
pop
iret
daa
loop
add
and
sbb
inc
cmp
mov
mov
xlat
out
sbb
shr
sbb
stc
ljmp
jp
jno
xchg
inc
inc
cmp
test
mov
add
dec
mov
out
push
push
stos
pop
es
scas
jnp
imul
and
scas
pusha
add
inc
pop
mov
jbe
jle
popf
jo
and
pop
orb
push
dec
dec
pushf
dec
dec
fwait
movb
sahf
call
mov
std
cmp
push
mov
inc
insb
mov
xchg
lds
shrb
sbb
mov
push
add
daa
add
andb
test
sbb
pop
psubd
add
add
sub
pop
sahf
sub
andl
pop
inc
in
aaa
stc
jo
lret
jl
or
push
int3
adc
dec
enter
push
in
mov
push
push
pusha
jno
push
into
push
lret
sub
sbb
sub
sbb
jecxz
rcrb
ss
pop
sbb
scas
jbe
inc
mov
jne
inc
movsb
js
push
test
addr16
neg
dec
daa
cmp
test
push
jnp
insl
jle
mov
inc
cltd
jl
mov
mov
rep
push
pusha
leave
popa
outsl
fs
gs
jecxz
fstl
cwtl
inc
rclb
cmp
add
inc
inc
inc
loope
inc
inc
in
mov
mov
and
nop
pop
sbb
jecxz
das
cmp
pushf
and
cltd
and
and
and
test
dec
add
jo
cld
popf
ret
dec
movups
mov
adc
mov
pop
add
test
push
arpl
imul
faddl
adc
enter
int3
loopne
loope
in
in
sub
insl
cwtl
jl
jno
xor
xor
insl
cmpl
rolb
rolb
out
add
sub
fwait
orl
hlt
or
adc
scas
cwtl
mov
jns
lahf
movsb
jl
xchg
test
imul
lock
jl
inc
stos
mov
push
xorb
imul
mov
js
inc
ror
pop
mov
pusha
mov
pusha
mov
andl
push
fldl
xchg
nop
out
mov
cmp
add
dec
pop
inc
mov
inc
sbb
aad
data16
loop
es
scas
push
nop
sbb
das
jge
xlat
and
aam
jb
mov
push
xchg
lret
push
add
push
outsb
pushl
aas
test
cmp
movsl
add
cmp
xchg
jne
jg
dec
or
fistps
jg
aam
inc
loope
fistps
stos
fistpl
es
mov
imul
ds
mov
js
mov
jne
cmp
inc
dec
xlat
outsl
inc
dec
push
sub
iret
das
lahf
imul
loopne
insl
mov
notb
mov
inc
jmp
mov
jl
mov
mov
inc
adc
inc
push
push
push
mov
data16
push
add
mov
pop
mov
bound
pop
mov
iret
cld
dec
mov
scas
in
scas
fidivrs
insl
sbb
dec
loopne
cwtl
inc
in
xchg
inc
out
nop
sub
iret
mov
sbb
xchg
mov
ss
adc
aas
lock
enter
pop
mov
stos
push
or
outsl
cs
cmp
pop
call
add
ja
push
xchg
mov
call
add
fbld
out
loope
fistps
out
pop
ja
je
pop
lret
shrl
push
gs
movd
inc
cmp
inc
pushl
inc
div
scas
add
inc
jne
fdivrs
das
xlat
xorb
mov
scas
adc
mov
mov
xchg
movsb
mov
push
or
fsubrp
push
mov
scas
sub
and
pop
pushf
xor
xchg
ss
and
add
xchg
add
add
add
add
leave
add
add
mov
add
sbb
add
and
add
push
mov
add
add
mov
add
mov
faddl
add
add
mov
and
add
add
or
add
inc
inc
add
mov
add
adc
add
rolb
add
pop
lock
das
or
add
push
sbb
add
xor
add
lret
add
add
add
add
add
cmc
add
leave
add
aad
add
loopne
add
mov
add
dec
xor
add
add
add
add
faddl
add
divps
add
dec
add
cli
outsb
add
loope
add
cmp
add
add
push
add
xlat
add
add
jg
add
add
add
mov
add
add
sbb
add
testl
add
lahf
add
mov
scas
add
jns
add
pause
add
dec
add
add
xchg
add
add
add
add
xchg
into
add
cmp
mov
add
add
aaa
add
cmp
add
push
loopne
add
add
add
add
jp
add
adc
add
add
test
add
mov
add
jae
add
push
add
add
add
lock
insl
add
add
add
add
and
add
add
sbb
add
mov
add
pop
adc
add
pop
add
loopne
add
sub
add
add
add
add
add
add
movsl
add
add
add
cmp
add
les
add
outsb
add
loopne
add
outsl
push
add
filds
add
push
add
add
add
add
add
add
add
sti
add
add
add
mov
add
in
scas
add
sub
add
cmpsl
nop
add
pop
add
add
add
add
les
add
into
add
dec
add
add
add
add
add
cmp
add
flds
add
and
add
nop
add
add
rolb
add
xlat
add
out
add
pop
add
add
sbb
add
je
add
fcomi
add
mov
add
fdivl
add
and
add
dec
add
jo
add
or
add
dec
add
les
add
cli
add
in
add
adc
rcrb
in
repnz
and
cmc
xchg
add
mov
fwait
inc
add
add
push
ret
dec
inc
xor
jp
and
push
add
add
imul
jb
jo
and
jns
add
jmp
add
add
and
push
fiadds
aad
xor
lock
lds
add
popf
repnz
into
pop
in
stc
sub
mov
lock
xchg
sbb
push
add
mov
popl
adc
jp
adc
not
add
rol
cmp
insb
js
outsl
iret
sub
xor
add
inc
into
jns
das
popa
add
fs
icebp
mov
xchg
xlat
add
call
jg
cld
inc
cmc
lahf
scas
add
jg
movsl
inc
data16
add
enter
xchg
add
inc
sub
in
xor
add
and
sub
mov
xlat
pop
xchg
aam
add
es
xlat
sahf
insb
std
loopne
push
jl
ds
in
add
cltd
rcrb
test
pop
cmp
out
sbb
pop
mov
push
in
mov
call
jo
sub
ficoms
lcall
movsb
inc
aaa
incb
std
cmp
and
into
push
add
fisttpl
add
popa
mov
add
sub
push
and
mov
addr16
mov
out
les
dec
insb
fldcw
ljmp
cmp
adc
mov
pop
mov
scas
jp
leave
pop
add
adc
fstpl
dec
add
decb
add
sub
sbb
aad
loopne
add
push
js
outsb
pop
xchg
fildl
jnp
add
fwait
enter
roll
fsub
lret
jbe
mov
add
icebp
pop
and
pop
add
cmp
mov
shrl
dec
leave
dec
stc
add
inc
push
stos
filds
call
add
xchg
mov
sbb
jae
add
ja
pusha
ja
pop
push
xchg
add
adc
pusha
and
pop
add
sbb
add
aad
dec
add
jnp
add
xor
xchg
imul
into
xchg
std
cmp
loopne
pop
push
push
add
and
imull
gs
clc
or
dec
add
push
jns
andb
shll
pop
push
add
push
nop
repz
mov
add
js
cwtl
rclb
add
and
std
add
xor
mov
or
inc
data16
add
das
add
cs
lods
outsl
lcall
imul
add
adc
inc
in
xor
jb
out
je
jge
xor
imul
pop
add
sub
jle
ret
push
and
fwait
xchg
add
xor
iret
add
push
add
in
lock
negb
add
cs
add
jae
insl
jne
add
repnz
dec
add
insb
sahf
fwait
add
mov
mov
loope
pop
pop
inc
add
mov
out
inc
jae
movsl
add
pop
push
lods
add
mov
dec
push
add
add
mov
in
aas
add
inc
outsl
add
add
jnp
jbe
inc
shrb
add
daa
shrb
sbb
add
or
pop
push
dec
jle
gs
add
sahf
pop
jl
lcall
mov
xchg
jmp
out
mov
mov
imul
std
pop
push
dec
mov
call
cmpsl
add
cmpsb
mov
sub
fwait
pop
push
push
jb
inc
mov
nop
and
scas
cmpsl
movsb
mov
mov
mov
fcmovb
enter
out
je
insl
mov
dec
or
adc
jmp
in
jmp
addb
out
ljmp
add
mov
xchg
pop
adc
ret
insb
add
jge
ljmpw
sub
sub
add
push
in
sbb
add
pop
inc
sub
sub
loope
jo
push
jno
outsb
int
mov
mov
add
cmpsl
jmp
outsl
mov
add
jl
int3
rorl
iret
xchg
call
out
pop
pop
add
lods
adcl
jnp
add
pcmpgtw
sbb
mov
push
pop
insb
push
add
inc
jae
stos
sub
mov
fstl
lods
cmpsb
mov
jmp
dec
div
jnp
jae
das
jno
sub
mov
stos
mov
mov
lret
xchg
xchg
andb
push
pushf
dec
add
pushf
popf
or
add
test
push
mov
inc
or
lods
xlat
inc
add
sub
dec
xor
lea
jecxz
cli
call
sar
aam
and
test
or
dec
dec
sbbl
or
sub
outsb
loopne
inc
test
dec
popa
add
sub
add
xor
push
scas
dec
push
cmp
stos
dec
test
push
add
add
add
std
insl
pop
outsl
mov
add
add
add
push
dec
add
scas
jne
pop
dec
into
add
add
add
out
add
sub
cmp
mov
add
add
add
hlt
ds
add
in
add
popl
jmp
mov
adcl
add
aad
out
testl
add
add
movsb
imul
leave
mulb
or
pusha
pop
movsl
in
lret
mov
fiaddl
test
mov
add
pop
adc
inc
sub
lret
out
jecxz
mov
sbb
pop
and
movsb
and
add
or
dec
dec
dec
pop
add
bound
push
mov
lret
dec
je
inc
sarb
stos
sub
into
movntps
add
and
sbb
push
sbb
cmp
inc
adc
push
pushf
clc
je,pt
jb
or
or
or
mov
inc
add
lds
arpl
sbb
mov
mov
sub
daa
insl
or
xor
das
lock
add
push
mov
inc
loope
pop
jmp
pop
lea
add
aad
mov
ja
lret
aaa
push
fidivrl
in
push
aaa
int
mov
mov
dec
pushf
test
cmp
xchg
push
sbb
jle
mov
or
or
add
xchg
add
ret
add
add
stos
inc
inc
add
ret
add
add
cmp
add
add
cld
fsubs
mov
adc
add
mov
add
jecxz
or
test
xchg
fwait
and
xor
add
push
or
pop
inc
inc
sub
dec
stos
out
cld
fs
ret
sub
andl
pop
add
dec
imul
add
data16
es
add
mov
add
bound
bound
add
jns
mov
dec
pop
add
aad
cli
jo
add
ror
add
mov
gs
add
lds
cmc
or
std
xchg
cli
add
add
add
add
cmp
fldl
inc
mov
popa
mov
add
sub
enter
mov
clc
mov
lahf
mov
xchg
outsl
jg
mov
mov
lret
jns
ja
pop
int3
add
stos
leave
add
add
bound
idiv
fiadds
or
add
dec
xchg
add
mov
daa
std
dec
outsb
rolb
and
add
mov
mov
xor
and
add
sti
push
das
add
pop
or
aam
add
sar
add
jge
add
out
flds
fisubl
dec
add
scas
mov
scas
test
push
lock
je
mov
lods
jg
clc
int3
js
add
sti
call
stc
ljmp
xor
cmc
pop
add
cmpb
push
testl
fcmovu
add
fildl
in
or
fwait
loop
aas
mov
outsb
pop
mov
jecxz
addb
jmp
sub
or
lea
movsl
call
enter
into
mov
gs
fs
add
adc
aaa
test
gs
push
pop
xor
pop
xchg
jmp
fmul
enter
out
add
pop
scas
xor
aaa
addl
aad
into
fisttps
rcr
pop
pop
fs
das
add
jg
aad
shll
pop
sbb
sbb
jp
adc
in
add
push
mov
mov
mov
imul
outsb
jno
add
mov
movsb
je
add
out
add
push
fsubl
add
cs
sub
pusha
add
push
inc
push
dec
inc
dec
inc
addb
dec
enter
push
jp
sbb
xor
mov
int
push
jns
push
aas
mov
mov
popf
pop
mov
adc
xor
data16
outsl
pusha
push
outsl
bound
xor
dec
xor
add
dec
in
shl
mov
jl
sub
add
ljmp
andl
mov
cmp
xchg
mov
push
add
dec
dec
push
dec
icebp
push
add
cmp
iret
jno
mov
inc
cmp
xor
in
push
pop
sub
icebp
jp
push
xor
nop
mov
pop
add
dec
int3
into
add
aam
das
add
mov
lods
xchg
jle
mov
sub
lret
add
shr
rcl
testb
pop
cld
das
faddl
lods
mov
push
add
jbe
add
pusha
fs
push
ljmp
cmp
or
pop
add
add
push
or
inc
add
add
pusha
roll
add
mov
ds
xor
or
sbb
xor
dec
sbb
dec
inc
inc
add
add
push
es
icebp
gs
sub
mov
add
sbb
or
add
mov
out
cmp
add
cmpsl
test
add
sub
cs
fs
add
add
jne
cmp
out
ja
add
push
loop
ljmp
pusha
mov
pop
add
add
dec
or
or
add
mov
movsl
mov
out
push
push
loope
add
add
call
into
fiaddl
xchg
rol
rcll
daa
shrl
lahf
mov
aaa
or
add
xchg
add
and
and
decl
mov
mov
mov
add
mov
pop
lahf
jecxz
rcr
lret
fxch
shr
out
scas
add
sbb
aad
pop
mov
mov
cltd
mov
fcmovbe
aad
sahf
mov
add
add
cwtl
jmp
add
sahf
call
movsl
and
int3
fcomi
leave
roll
aad
lret
lret
add
mov
push
add
or
or
ret
fld
fst
enter
aas
daa
xor
testb
dec
lock
lock
sub
mov
add
stc
adc
popf
sti
lods
adc
scas
push
cmp
fcmovb
aad
aad
int3
icebp
ffree
lret
outsb
xchg
and
xchg
repnz
inc
leave
lea
inc
inc
dec
add
mov
mov
sub
cmp
pop
jmp
fwait
add
jo
cmp
cli
call
repnz
add
jg
xchg
push
scas
idivb
mov
lock
mov
test
pop
pop
add
je
dec
add
jge
sti
mov
fwait
add
mov
xor
insl
or
add
xchg
pop
cwtl
into
jle
mov
outsl
xchg
push
cmp
or
mov
std
inc
push
in
enter
xchg
subb
cwtl
scas
add
std
bswap
inc
loope
add
cmpsl
das
mov
lds
mov
dec
dec
jns
inc
inc
mov
mov
hlt
pop
cmp
fldl
inc
test
mov
add
mov
nop
xchg
add
xchg
rorl
xchg
pop
add
pop
pushf
push
cmpsb
fwait
pusha
test
icebp
shr
cld
out
cmc
incl
icebp
add
sbb
jns
add
outsl
es
mov
or
pushf
fwait
adc
sbb
sbb
test
std
lret
mov
or
add
xchg
test
stos
add
sbb
pop
mov
aad
jge
fstpl
add
inc
pop
dec
dec
dec
dec
dec
add
add
lods
add
test
movsl
inc
rolb
int3
dec
push
in
daa
pop
add
arpl
jno
cmp
xor
add
xchg
add
xor
test
push
inc
push
stos
add
scas
sahf
mov
adc
add
push
out
or
xor
sub
cmp
xor
aam
js
aas
add
fldt
loope
mov
int
repnz
hlt
push
cmp
lcall
add
loope
fldpi
popl
add
inc
dec
pop
pop
dec
pop
dec
fildl
jecxz
add
cmp
add
inc
sub
adc
add
sub
sbb
inc
mov
jo
scas
loope
shl
cltd
lret
add
pop
push
add
push
nopl
xlat
xor
or
adc
mov
sub
add
outsl
dec
pop
inc
pop
inc
pop
dec
stc
outsl
fmull
ss
add
and
add
add
rol
rol
sar
push
sarl
adc
dec
fdiv
add
add
sub
stos
pop
adc
sub
cmp
and
mov
jb
cmp
in
test
icebp
add
add
leave
into
mov
lock
sbb
add
sbb
fisttps
add
into
hlt
cld
call
push
sbb
add
push
mov
push
adcb
cmp
mov
add
add
add
or
enter
arpl
and
movsb
xchg
xchg
scas
mov
dec
pop
dec
dec
inc
scas
sbb
cmp
bound
test
in
add
add
adc
add
sbb
add
xor
ret
and
jg
mov
sub
and
cmp
and
outsb
and
cmp
cmpsl
mov
add
dec
aas
sub
sub
ds
aas
ds
pop
add
aaa
or
add
xor
jb
nop
loope
mov
jmp
fstp
rcr
movsl
data16
push
lcall
lret
jne
lods
mov
mov
test
cwtl
fdivl
jb
add
and
cmpsb
adc
mov
xor
das
push
add
xor
xor
add
sub
leave
add
pop
shlb
lea
daa
das
sub
cmp
mov
sarl
test
push
jp
cmc
or
out
in
outsb
icebp
icebp
scas
das
pop
js
test
stos
out
add
cwtl
inc
mov
sub
jne
cwtl
xchg
test
psraw
add
or
cmp
xor
dec
push
nop
jns
add
jg
add
push
add
dec
push
add
mov
mov
cmpsb
mov
stos
mov
add
cmp
cld
and
jae
jp
push
sub
mov
add
bound
add
adc
sub
lods
sub
mov
testb
lret
mov
bnd
add
in
std
add
add
add
add
dec
sbb
mov
inc
fiadds
sbb
push
and
movsl
pop
xchg
in
lret
lods
outsl
mov
pop
add
adc
jecxz
mov
aaa
dec
inc
mov
sbb
fnstenv
in
push
sbb
rclb
sbb
add
xchg
xchg
mov
xchg
push
cli
add
ret
and
outsl
loop
jle
lds
iret
or
sbb
xchg
cmpsb
sub
push
dec
cmp
cltd
fsts
add
adc
and
aas
and
das
xor
mov
add
and
jb
dec
add
add
dec
jp
dec
pop
ret
or
adc
push
int
adc
or
sahf
add
lea
push
add
dec
lods
lahf
inc
enter
add
loop
rol
movb
fdivp
std
jmp
rolb
iret
fsts
add
mov
sub
mov
add
out
int3
ret
pop
jg
icebp
add
das
mov
inc
mov
push
shlb
push
pushf
mov
adc
add
jg
shll
add
loope
clc
add
fucomp
mov
xchg
inc
cwtl
nop
dec
cld
pop
add
test
lcall
pop
inc
or
inc
dec
adc
scas
xor
adcl
xchg
andl
mov
mov
or
add
add
lods
cmp
sub
out
pop
jbe
gs
bound
add
jae
lock
push
mov
fsubrs
add
mov
orl
idivl
add
and
pushf
pop
add
scas
inc
loope
inc
bound
and
insb
jae
add
es
lods
int
add
or
cmp
add
jmp
fadds
push
repnz
add
add
or
cmp
scas
repz
xchg
mov
or
add
sbb
sbb
mov
mov
add
pop
cmp
inc
repnz
rol
movb
lock
push
adc
add
mov
int3
pop
add
jno
dec
add
and
mov
add
pop
cmpsb
or
stos
add
dec
cs
add
ret
rcr
add
int
jge
movsb
hlt
dec
add
in
push
scas
addr16
inc
and
sbb
add
pop
push
and
pop
add
loope
loopne
push
sahf
xor
pop
scas
cmp
adcl
add
lret
pop
or
add
adc
enter
xchg
inc
orl
orb
ja
cli
ljmp
mov
jmp
push
andl
ret
and
stos
je
gs
movsb
movsl
xchg
xchg
dec
pop
add
push
faddl
jo
rolb
add
adcb
mov
popa
mov
mov
add
fsubrl
cmc
shll
stos
scas
stos
mov
mov
pop
js
mov
xor
mov
mov
xchg
mov
cmp
cmp
mov
add
bound
pop
jno
sub
add
testb
cmp
mov
imul
pop
aas
or
add
or
add
push
adc
or
jo
out
scas
aad
add
pop
push
add
pop
pop
push
add
xchg
ret
iret
pop
push
jno
cmp
faddl
or
inc
pop
cmpsl
dec
jge
dec
mov
add
cs
push
rcrb
push
add
scas
aad
add
push
imul
add
test
punpcklbw
add
adc
dec
test
jns
ljmp
popf
mov
mov
add
pop
stos
test
inc
push
movl
scas
jnp
mov
jmp
std
div
jmp
jmp
and
mov
hlt
lds
pop
add
push
popfw
mov
subl
mov
mov
test
ljmp
in
mov
jo
dec
jge
data16
add
add
sub
jl
mov
lock
adc
repz
add
scas
mov
inc
lods
pushf
mov
stos
and
pop
add
add
stc
loop
add
clc
div
cmp
loopne
repnz
out
popa
lods
mov
and
mov
mov
ret
mov
movsb
mov
hlt
mov
hlt
mov
push
inc
add
lcall
mov
loope
rcl
add
adc
inc
loope
cmp
mov
test
xchg
xchg
xchg
add
mov
push
sahf
mov
fisubrs
icebp
add
jecxz
nop
mov
lea
and
orb
test
add
or
add
push
imul
add
add
shl
in
mov
ss
adc
or
ljmp
add
cmpsl
bound
xor
add
imul
and
lods
xchg
add
xor
sub
add
dec
jl
pop
add
leave
add
lods
or
sbb
push
push
adc
sbb
pop
and
popf
iret
add
dec
cld
lea
mov
imul
jmp
add
add
xchg
mov
bound
sbbl
out
out
in
in
imul
or
add
mov
jne
push
add
rolb
adc
xor
mov
int
fcmovne
lret
cli
movsl
adcl
shll
xchg
std
loopne
pop
add
xchg
xorb
sub
daa
aaa
xor
aaa
add
jne
hlt
and
add
sbb
jmp
lea
jns
add
jnp
xor
cmp
insb
into
mov
outsb
add
fisubrl
test
push
decb
pop
or
or
or
add
push
imul
xor
add
loopne
pop
cmp
cmp
bound
push
xor
add
or
push
filds
mov
add
add
lds
sahf
in
mov
test
lods
add
test
pop
pushf
mov
add
outsl
ret
lret
add
pop
add
add
ljmp
push
add
mov
mov
dec
pop
je
or
add
lret
pop
mov
add
push
add
add
sub
mov
pop
push
pop
lods
sub
add
pop
add
pop
outsb
pop
outsb
cmp
inc
popl
xor
pop
aas
in
add
sarb
mov
push
sbb
sub
mov
iret
pushf
jns
xor
paddq
in
inc
inc
dec
stos
dec
add
das
jp
inc
pop
sbb
add
xor
mov
sbb
dec
shrb
add
outsl
imul
jg
push
jo
mulb
sub
pop
sahf
adc
imul
je
and
mov
in
lods
out
add
dec
ret
xor
addl
add
das
enter
jne
pop
inc
and
fcoms
mov
xchg
push
dec
cltd
add
out
ror
int
push
sub
cmp
lret
sahf
sbb
and
add
mov
push
popf
lods
add
test
lds
jp
or
pop
add
pop
add
sub
and
movsb
add
rcrl
inc
je
fs
lcall
push
cmp
movsl
rclb
das
addr16
fadd
lcall
add
cmp
das
add
arpl
fsubl
pusha
jmp
add
iret
ret
lods
lock
add
push
inc
dec
add
pop
loop
cltd
inc
or
icebp
out
pop
add
stc
dec
mov
test
lret
out
gs
add
in
addr16
pop
and
sub
in
pop
sub
roll
inc
cli
int
xor
jp
fmuls
clc
xchg
je
repnz
in
flds
add
dec
push
aad
dec
in
push
stos
mov
stos
push
mov
arpl
add
adc
push
sbb
or
mov
add
add
imul
mov
and
and
mov
nop
sbb
fisubrl
daa
sub
lcall
xchg
loope
mov
sbb
add
inc
rorl
add
and
sub
lea
xchg
pop
push
pop
outsb
jmp
pop
cmp
pop
cmp
add
pop
and
mov
add
arpl
out
xchg
loope
stc
add
jmp
jnp
add
inc
cld
int3
rolb
xor
push
mov
xchg
add
fs
mov
std
push
adc
fs
mov
add
adc
test
mov
mov
data16
cmpsl
xor
mov
mov
shrl
inc
push
sbb
add
movsb
jp
or
mov
add
dec
pop
movsl
lods
jl
ret
aam
dec
mov
add
adc
cmp
adc
jmp
popa
or
xchg
sub
mov
inc
enter
mov
in
dec
add
add
cmp
sbb
add
scas
dec
movsl
dec
iret
lret
add
stc
sbb
push
lret
sbb
push
mov
pusha
add
pop
adc
call
or
or
push
dec
add
cld
push
or
add
hlt
cmpsb
xchg
adc
mov
or
lods
pop
mov
push
cmp
sbb
mov
out
arpl
data16
jo
jno
in
mov
movsl
iret
jge
cmp
dec
xor
mov
xlat
dec
ja
out
sahf
jp
dec
adc
xchg
xor
scas
aas
cmpsb
fsts
sub
loopne
mov
adc
dec
pop
cmp
and
ftst
scas
sub
fwait
mov
mov
mov
dec
add
shrl
pusha
outsb
pusha
fdivs
jle
outsl
loopne
dec
inc
loop
inc
pop
dec
fisubl
dec
into
test
aas
lods
push
out
sub
inc
aas
push
movl
rolb
gs
push
jg
and
rcl
jg
xchg
lods
cmp
pop
and
cmpsl
mov
push
cmp
mov
sbb
shl
ret
stos
int
hlt
das
push
mov
add
adc
popf
mov
jns
movsl
stos
cmpsb
and
in
mov
dec
ds
cwtl
outsl
dec
jg
stos
or
lds
add
pop
sbb
movsl
into
movsb
add
shl
add
daa
xor
sbb
outsb
xlat
mov
inc
aas
ficoml
push
imul
andb
mov
and
mov
aaa
out
pop
jle
or
stos
fadds
cmpsl
in
xchg
push
mov
shlb
pop
scas
test
imul
push
xchg
mov
cs
jne
sti
push
js
into
cmp
test
inc
inc
lret
inc
or
mov
out
and
addl
add
jns
adc
rcl
push
movsb
ljmp
cmp
cltd
add
enter
aad
or
add
orb
jecxz
push
jecxz
mov
add
inc
sbb
inc
adc
in
imul
out
or
ljmp
adc
add
insl
mov
or
test
add
or
mov
cmp
dec
int
cld
and
sahf
sub
and
pop
rcrl
sub
repz
cli
inc
pop
inc
scas
add
iret
scas
scas
orb
xorb
bound
add
inc
mov
movsl
push
ljmp
sti
and
push
stos
push
outsl
loopne
ja
scas
inc
or
cmp
test
mov
iret
pop
mov
push
rorb
add
sahf
popa
daa
xor
add
lds
xchg
and
cmpsl
jb
lods
dec
fldl
sub
inc
es
jecxz
add
or
mov
inc
cmpsl
lock
mov
addr16
or
ret
add
mov
jae
mov
fwait
roll
fsubl
fldenv
cld
adc
call
dec
iret
out
add
pushf
lea
jbe
add
add
cmp
inc
mov
add
inc
mov
dec
mov
loope
mov
sti
add
ds
add
add
loop
mov
add
outsb
add
and
jns
ja
jae
add
dec
sarb
add
mov
popl
lret
add
je
movsb
pop
scas
adc
pop
pop
add
inc
inc
sub
mov
add
outsl
add
outsl
pop
add
loope
add
mov
push
inc
mov
adc
cmc
clc
subl
sbb
pop
cli
dec
or
add
fisttpll
adc
fimuls
rcll
and
lcall
outsb
sub
add
pop
and
add
and
add
dec
cmpsb
pop
das
pop
leave
dec
movsb
aaa
mov
rolb
call
sbb
xor
shr
frstor
or
jmp
aaa
insl
nop
adc
lahf
or
xor
aam
sub
cltd
add
add
jns
lcall
dec
ret
in
jno
sub
add
in
sub
add
push
mov
add
ret
stc
add
test
scas
das
gs
sub
pop
in
mov
push
repz
mov
sub
add
addr16
sub
in
jge
std
cs
aaa
fnsave
pop
and
ss
xchg
arpl
in
arpl
in
ljmp
mov
jns
dec
sahf
mov
adc
lret
inc
add
inc
int3
fcmovne
inc
mov
add
xlat
mov
add
or
hlt
add
add
cmpsb
outsl
and
jg
lret
cmp
out
scas
mov
fprem
ret
mov
xor
adc
add
or
dec
add
jle
stos
das
add
insb
pop
push
orl
push
mov
jg,pn
or
cli
loop
movsb
fldenv
jo
int3
call
cmp
dec
inc
in
mov
inc
pop
inc
int3
rorl
adc
add
jp
outsb
xchg
es
movsl
test
mov
xchg
jge
jb
bound
pop
clc
xchg
xchg
stos
xchg
jo
repnz
xor
sbb
pop
add
lods
adc
add
cmp
lods
in
pop
andb
flds
jnp
add
jp
add
pop
and
into
push
mov
je
cmp
dec
sbb
ret
push
test
mov
fldt
push
iret
addr16
mov
shrb
imul
jp
adc
xor
imul
xlat
pop
in
mov
xor
icebp
sbb
mov
lret
dec
inc
cmp
jne
dec
sti
add
sbb
mov
mov
jmp
dec
mov
mov
clc
imul
cmp
bound
leave
dec
mov
lret
inc
add
cmp
data16
call
sbb
adc
in
nop
mov
call
lahf
test
mov
mov
sub
push
btr
inc
adc
fldenv
jo
in
jae
dec
push
xchg
xchg
shll
push
mov
jl
out
jno
pop
jbe
sbb
int
jnp
sbb
sub
jo
fdivl
cmc
add
bsr
dec
xor
add
sbb
mov
add
xchg
fwait
out
pushf
adc
aaa
add
cwtl
lods
push
mov
pop
ljmp
and
lahf
sub
mov
out
xchg
imul
jge
lea
cltd
hlt
pop
push
pop
outsl
or
jno
push
orl
jbe
je
mov
add
roll
ds
sub
adc
sub
out
add
and
pop
test
or
lret
mov
pop
hlt
cmp
scas
fisttpl
lcall
push
testl
jns
jecxz
shl
in
pop
ljmp
dec
sbb
jmp
out
mov
faddp
adc
mov
sbb
dec
lods
mov
mov
inc
or
movsl
cmp
cmp
shrl
addr16
out
outsl
ljmp
ficomps
bound
dec
imul
enter
jno
movzbl
mov
mov
push
mov
hlt
add
in
cmc
and
adc
sub
sub
lock
add
adc
sahf
int3
mov
cmp
jbe
sub
imul
xlat
es
stos
and
or
mov
add
push
enter
js
es
mov
mov
loop
fwait
aaa
inc
dec
outsl
ret
inc
xchg
cmp
or
sbb
or
sarb
xchg
outsb
pop
sub
stos
push
test
inc
sub
mull
pusha
leave
fisubs
mov
add
bound
or
inc
or
xchg
inc
inc
jnp
into
test
cmp
sbb
outsl
and
lods
lods
push
jbe
outsl
movsb
ret
fwait
sub
mov
mov
pop
mov
pop
das
scas
jns
jbe
adc
sub
decl
add
add
xor
adc
popf
sub
sbb
push
jmp
scas
sub
xchg
push
outsl
inc
add
xor
inc
adc
push
scas
add
aas
arpl
or
or
ss
js
xchg
lea
and
or
lret
outsl
add
fsubl
out
and
add
push
adc
or
jmp
add
fadds
add
shrl
shll
in
adc
mov
jbe
rcrl
mov
leave
aas
add
insl
ja
adc
shlb
out
xchg
or
fldcw
cmc
repnz
or
xchg
dec
pop
repnz
sbb
xchg
xchg
fisubl
test
xlat
xor
pop
leave
outsb
jae
push
and
cmp
icebp
inc
jg
into
fisttpll
dec
les
pop
xchg
icebp
inc
add
cltd
pop
clc
dec
ret
push
pop
es
pop
jo
mov
andl
add
add
or
iret
das
add
repnz
mov
adc
cs
mov
int3
mov
push
stos
lcall
in
lods
outsl
imull
and
xlat
add
lahf
add
subl
inc
movl
cmc
cld
push
dec
add
sahf
jae
nop
hlt
enter
add
lcall
push
pusha
and
xchg
add
filds
pushf
sbb
sahf
xor
jno
rorl
xchg
add
add
jg
cwtl
and
cmc
jge
adc
xchg
aad
mov
fdivrs
out
jg
aaa
js
add
jo
dec
je
add
xchg
cld
lods
dec
mov
out
add
sbb
sbb
sbb
mov
dec
cmp
rcrb
arpl
mov
cwtl
add
in
out
and
stc
fmull
adc
pop
cmp
shld
sub
sub
sbb
add
mov
or
inc
sbb
add
cli
pop
push
add
jns
mov
loope
movsb
in
mov
in
int3
sarl
out
out
jmp
je
fstpt
mov
dec
popf
cltd
movsl
ret
jns
nop
xchg
mov
ja
pop
int
push
scas
adc
jno
adc
hlt
push
adc
out
cltd
mov
stos
stc
sub
mov
add
mov
mov
in
mov
or
outsb
adc
mov
fs
or
test
aas
mov
popa
ret
pop
mov
mov
sbb
idivl
out
in
outsb
ret
mov
sbb
inc
push
in
add
insl
adc
mov
rorb
sbb
mov
lret
les
add
loop
xchg
sbb
mov
mov
jns
loopne
push
lock
lock
int
in
faddl
xchg
pop
cmpl
bound
mov
and
push
add
rcrl
add
test
inc
cmp
fiadds
mov
inc
adc
xor
sbb
mov
es
mov
dec
insb
lods
xor
push
mov
lret
sub
adcb
mov
dec
rcll
sub
xchg
or
mov
mov
jl
ja
cmc
movl
jp
jbe
add
add
test
repnz
mov
or
inc
xlat
fildl
or
push
add
and
fsts
jnp
testl
pop
xlat
xorb
jge
movsl
cmp
push
sahf
or
pop
pushf
cmc
xchg
jmp
mov
or
inc
in
mov
stc
add
add
or
mov
lock
adc
dec
cmp
or
pop
test
loopne
xor
and
adc
dec
sub
and
into
in
in
sbb
mov
pop
push
lret
cmpb
mov
loop
sahf
cwtl
jmp
sub
push
push
lret
add
jp
jns
push
ljmp
mov
xchg
out
jmp
pop
push
std
mov
jg
inc
leave
mov
shlb
rolb
in
mov
mov
mov
data16
sub
movsb
add
daa
mov
push
add
outsl
subb
add
cmp
adc
call
repnz
mov
mov
add
inc
dec
and
ss
or
lock
jle
cli
jns
jge
or
cmpsl
sbb
add
adc
add
std
dec
int3
insb
jbe
jae
outsb
pop
adc
jbe
push
mov
or
test
imul
jmp
mov
push
pop
push
ljmp
cmp
lret
stos
xor
mov
andb
cmp
sub
xor
into
es
scas
xchg
dec
enter
xor
pusha
or
dec
add
sbb
imul
mov
jae
inc
movmskps
add
mov
jle
pop
arpl
pop
push
mov
pop
lret
or
loopne
xor
outsb
ret
std
int3
dec
add
imul
insl
sarb
scas
jnp
mov
daa
xchg
add
xor
dec
je
rcr
dec
xor
cwtl
adc
insb
dec
xchg
mov
cld
push
out
ret
push
lahf
jno
pop
xor
mov
test
test
xchg
sub
data16
push
cmpsl
add
or
pushf
out
add
loope
add
push
addr16
add
dec
lock
std
lods
dec
std
or
push
leave
add
imul
in
test
je
xchg
fs
sbb
add
add
mov
les
sbb
addr16
xor
adc
test
xor
and
inc
and
lods
movsb
inc
mov
sub
pushf
lock
dec
repnz
rcrb
push
fimuls
push
add
xor
xor
mov
mov
roll
adc
jmp
in
cmp
jns
cmpsl
scas
rcll
mov
and
sub
cmp
dec
add
inc
int
lods
jmp
mov
push
add
add
ljmp
push
cmp
pop
iret
movsb
add
icebp
add
add
mov
shll
add
inc
lcall
or
leave
dec
adc
mov
imul
jo
cmp
ret
add
xor
popa
es
bound
out
add
and
push
add
dec
mov
mov
add
out
inc
push
das
push
add
and
pushf
push
sbb
test
in
stos
inc
lods
mov
cmc
repnz
add
dec
pop
mov
pop
daa
push
mov
pop
mov
add
add
mov
jb
jg
cmp
add
add
mov
loop
add
sub
mov
mov
incl
add
pop
add
stos
add
movsl
lahf
les
pop
add
rorl
movl
add
mov
and
arpl
add
add
loope
std
imull
arpl
sahf
cmc
adc
mov
adc
sub
mov
test
orb
fwait
cmp
sub
mov
mov
ljmp
mov
xor
das
insl
adc
movsl
aam
clc
add
popa
add
inc
mov
aaa
dec
push
ret
lret
add
add
xchg
add
mov
mov
mov
pushf
es
add
mov
add
fs
jmp
dec
adc
pop
and
sarl
rolb
test
dec
mov
cmp
xor
out
lods
dec
add
push
pop
fs
outsb
imul
loope
jle
jmp
cmpsl
xchg
xor
pop
dec
int
pop
into
push
mov
add
mov
nop
scas
or
push
lods
and
sub
and
jb
and
fs
pop
mov
mov
push
xor
test
loop
int
or
xlat
loopne
mov
add
add
mov
xor
mov
stos
mov
repz
xor
out
dec
jmp
cs
dec
idivl
or
jge
dec
mov
cltd
psadbw
stc
aam
in
or
add
fstl
ret
xchg
jp
into
pushl
push
add
test
push
inc
loop
mov
add
shll
add
xor
mov
dec
mov
xchg
sahf
jg
inc
push
test
inc
call
pop
roll
cmp
popf
inc
lahf
cmp
sub
outsl
dec
das
in
stc
in
mov
mov
push
lock
jle
pop
ret
pop
idiv
inc
add
or
lret
adc
adc
cmpsb
sbb
loop
fs
and
jnp
cs
sub
mov
adc
lods
inc
fldl
add
scas
or
inc
lds
add
std
aaa
cmc
add
nop
dec
test
movhlps
xchg
fwait
pop
mov
and
in
les
xchg
in
add
popa
es
and
insl
jne
sbb
hlt
repz
jo
mov
and
lret
add
cltd
push
mov
mov
lcall
loope
imul
pop
add
mov
adc
ljmp
test
movzbl
add
les
stc
add
jle
lret
and
popaw
jmp
dec
add
push
lods
push
sub
add
inc
loop
in
lea
add
add
mov
mov
inc
imul
xor
push
push
mov
out
push
and
push
and
add
leave
add
jle
and
sub
mov
jno
add
cmp
int3
or
mov
dec
into
repz
add
lcall
repnz
jne
in
scas
xchg
scas
inc
js
jno
cmpsl
and
inc
xchg
dec
jb
inc
adc
lea
inc
ss
or
ljmp
xchg
aas
movsb
fnsave
popa
cmp
in
mov
inc
les
push
lods
call
sub
cli
out
push
xorl
pop
dec
sub
add
pop
push
sti
mov
mov
inc
inc
and
add
sti
cld
fsubrl
addr16
outsb
iret
insb
insb
sub
xchg
call
in
loop
add
ss
aas
inc
lret
iret
xor
pop
dec
rcrl
adc
add
inc
xor
add
stc
movl
out
adc
xor
pop
add
add
ret
dec
or
ja
or
fstpt
jae
push
lods
or
sbb
loope
js
push
in
jmp
popa
test
jnp
loop
fiadds
xchg
and
imul
sub
arpl
test
out
ret
cmovbe
xchg
inc
in
xor
je
lret
inc
sub
imul
add
mov
mov
mov
or
imul
cli
stos
mov
arpl
cli
cmp
push
push
xchg
xchg
mov
imul
sub
cmp
dec
jno
jmp
jno
sub
hlt
sbb
leave
data16
xchg
int
or
ret
pop
dec
dec
inc
or
cmp
push
cwtl
xchg
push
loopne
mov
mov
lret
cmpsb
xlat
sub
ss
imul
xchg
mov
push
lds
xor
xchg
pop
aad
cmc
cmpsl
repnz
pop
out
dec
sbb
dec
add
cmp
mov
les
push
add
les
mov
into
out
sbb
add
lock
bnd
mov
dec
mov
xor
mov
and
loope
add
out
rclb
orl
subb
insb
loop
cmpsb
mov
and
fisttpl
xor
scas
movsb
push
lods
fs
clc
nop
mov
mov
adc
cmpsb
mov
faddp
fldenv
sub
arpl
decb
mov
jb
mov
cld
dec
pop
jbe
and
jae
test
mov
aam
add
adc
add
add
add
lahf
fnstcw
outsl
push
mov
inc
lret
ret
mov
add
out
jecxz
icebp
sub
cmpsl
push
pop
pop
mov
or
push
add
adc
imul
inc
add
and
sbb
std
xlat
jmp
lock
mov
or
cld
sub
add
jmp
fildl
cmpsb
mov
fnstenv
xchg
mov
mov
sbb
sub
fisubs
les
jne
mov
sbb
das
xchg
into
scas
out
loop
sub
or
mov
dec
icebp
or
lea
orb
jnp
bnd
add
in
stos
mov
mov
js
jl
mov
rcr
mov
sbb
incl
and
inc
mov
mov
push
stos
xor
dec
mov
lds
jge
pop
mov
ret
mov
test
daa
outsl
gs
les
cld
popf
jmp
push
push
and
adc
mov
sub
rorl
fs
sbb
push
add
imul
ljmp
jns
adc
test
scas
and
cmpsl
push
imul
inc
lahf
ljmp
cli
adc
add
push
rol
fs
jae
sbb
dec
push
daa
mov
lods
fiadds
lret
pusha
fldl
outsl
test
loopne
xchg
stc
jl
add
daa
call
cli
and
enter
add
jbe
lds
mov
add
add
add
jns
enter
roll
xor
leave
cwtl
push
mov
and
sub
mov
and
xor
jp
inc
ret
add
xor
or
dec
mov
loopne
inc
add
shlb
stos
add
mov
cmp
add
scas
loope
and
xor
xchg
lock
aad
mov
das
pop
or
es
repz
xchg
stos
pushf
lods
adc
add
cmp
cmc
xor
scas
cmp
test
jg
outsb
add
in
mov
das
stos
add
std
lods
cmp
aaa
es
add
add
xchg
mov
lea
inc
jne
fsubrl
imul
test
cmpsb
inc
scas
cmp
sub
mov
arpl
pop
mov
subl
cltd
xorl
lods
xchg
mov
movsb
dec
adc
lds
pop
jl
mov
pop
pop
aas
xchg
sbb
cmp
xchg
loop
popa
and
mov
mov
ds
mov
mov
push
sbb
jl
sbb
imul
mov
or
mov
loopne
pop
out
push
cmp
ja
cmpsb
jb
mov
adc
and
pop
insl
int3
test
sub
std
jg
movsb
pop
into
add
add
les
in
cmp
sarl
xor
add
jmp
sub
sub
adc
cmp
pop
add
gs
add
movsl
lcallw
inc
add
dec
lea
dec
add
dec
popl
inc
jl
add
mov
pop
scas
sahf
es
fiadds
int
jl
jl
in
enter
insb
testb
fstpl
mov
stc
mov
jle
mov
sahf
fisttpll
jae
add
pop
inc
add
mov
jo
xchg
add
nop
add
add
movsb
scas
add
test
incb
pop
lahf
cmpsb
rcrl
sub
mov
add
lret
add
xchg
rclb
js
push
xor
push
sbb
pusha
jecxz
cld
mov
int3
scas
add
sub
pop
add
and
mov
test
jnp
add
pop
pop
addr16
or
cmp
add
jb
ljmp
pop
dec
inc
sub
add
mov
add
fists
popf
lahf
out
adc
ficompl
int3
dec
or
test
push
mov
loop
pushf
push
push
xchg
sarb
add
adc
xchg
sbb
popl
cmp
push
sbb
dec
inc
lcall
bound
lea
or
scas
mov
pushf
jmp
cli
jle
mov
pop
arpl
loop
jle
add
mov
xor
add
aas
lock
pop
lcall
bound
cltd
mov
loope
in
popa
loop
add
push
pushf
add
gs
sbb
jl
scas
lcall
ss
repnz
outsb
xor
push
dec
lock
add
mov
add
idiv
aas
ss
fisttps
or
lods
mov
and
out
mov
pushf
xor
into
dec
jge
mov
cmpl
pushf
lret
adc
cmp
fcompl
lahf
adc
int
dec
int3
inc
and
fidivl
cmp
je
repz
mov
mov
inc
clc
mov
xor
or
iret
lret
mov
mov
mov
dec
add
pop
jne
dec
mov
mov
scas
cmc
nop
mov
add
stos
pop
imul
decl
cld
pop
add
cli
jbe
sbb
inc
fdivrl
jo
fiaddl
sbb
push
cmpsw
stos
push
cmp
in
in
adc
scas
pop
sbb
pop
and
and
int
cltd
pop
jle
repz
jns
push
or
or
inc
mov
pop
and
hlt
or
leave
les
fs
or
mov
jbe
mov
outsl
push
imul
dec
jae
clc
int3
jae
mov
pop
xchg
mov
push
out
aaa
mov
inc
jmp
cmp
test
movsl
mov
mov
test
jnp
push
jle
stos
fwait
add
mov
push
jecxz
sub
sub
jne
add
push
rcl
inc
dec
add
mov
and
sub
stos
push
add
and
xchg
sbb
push
xchg
add
sbb
add
sub
lea
in
mulb
mov
aaa
add
jbe
cmp
push
testb
inc
loop
popa
int
add
mov
mov
pop
add
sahf
jnp
pop
xchg
mov
jle
add
add
cmp
add
dec
dec
dec
arpl
test
add
or
or
pop
addb
add
xchg
clc
icebp
xchg
pop
mov
add
mov
jmp
sub
int
out
jmp
xchg
add
jbe
jo
ja
enter
xor
aad
mov
add
jmp
add
sarb
add
add
loopne
fstp
jecxz
sbb
add
scas
das
incl
pop
dec
xor
add
mov
xchg
insl
int3
xchg
sahf
pop
sahf
inc
je
add
jle
push
fisubrs
pop
cs
test
push
push
sub
jbe
push
scas
sub
gs
pop
jnp
dec
rorb
fcmovnu
or
push
dec
outsb
dec
dec
movsb
inc
dec
insb
dec
and
or
shll
cmp
hlt
add
nop
lret
je
add
test
dec
popa
out
lcall
inc
mov
sbb
sub
repnz
outsl
add
sub
gs
stos
add
jg
in
in
add
mov
add
aam
and
nop
mulb
inc
nop
fdivrs
mov
mov
fsubrl
add
pushf
inc
leave
mov
dec
xchg
jp
push
dec
fildll
jp
insl
sub
imul
aam
add
out
sub
mov
mov
shrb
fs
faddl
add
adc
ret
sti
push
xor
mov
sbbb
in
pop
repnz
dec
arpl
and
add
jns
das
dec
out
xchg
xchg
push
dec
sub
fldl2t
add
push
or
push
pop
fcomps
add
inc
mov
pop
push
xchg
mov
mov
fstl
xchg
push
ljmp
fs
pop
mov
sub
outsl
xor
add
and
notb
dec
leave
xchg
or
add
imul
add
add
inc
lahf
sbb
dec
scas
xchg
jmp
mov
adc
add
mov
movsb
nop
mov
add
inc
jmp
add
in
dec
xchg
pop
aas
jnp
mov
repz
popf
add
adc
cmp
mov
cltd
add
pop
ret
adc
addb
add
jg
or
stos
arpl
sub
test
push
pop
jo
out
xor
out
mov
cmp
divl
testl
lret
cmp
add
das
pop
ljmp
dec
or
dec
in
in
hlt
jmp
cmp
bound
lret
add
sbb
dec
adc
mov
sqrtps
testl
not
sub
cmp
in
out
sbb
push
and
stos
mov
mov
mov
xchg
enter
pop
icebp
dec
xchg
dec
mov
loop
dec
das
orb
pusha
outsb
push
notb
fsub
ret
pop
add
add
outsb
into
ljmp
add
push
mov
mov
jg
add
je
add
fildl
add
lcall
add
sbb
push
lret
inc
mov
stc
jg
and
daa
add
xlat
xor
ret
sbb
inc
pusha
push
push
mov
das
cmpsb
add
adc
dec
loope
add
and
pop
popf
mov
mov
bound
push
sub
outsl
cmpsb
fiaddl
push
and
dec
xor
sbb
pop
arpl
imul
out
test
dec
cmp
and
es
hlt
pop
mov
aaa
sbb
lods
adc
fisubrl
frstor
cmp
jmp
push
repnz
idivb
sub
or
outsl
cmp
iret
and
fwait
add
ss
test
fisttpl
data16
mov
mov
cmpsl
add
dec
es
call
ficoml
pop
xor
loopne
loope
jmp
daa
jb
fisttpll
cmpsl
mov
cmpsb
mov
loopne
pop
adc
fisttpll
mull
enter
lret
and
lahf
addl
gs
and
lcall
sub
sbb
and
ret
jno
cmp
mov
push
gs
scas
test
jo
push
test
push
xchg
xor
pop
cwtl
add
cmp
xchg
mov
mov
les
dec
sldt
rcrl
add
iret
cmc
add
jecxz
lds
sbb
jno
out
das
add
out
out
clc
outsb
fyl2xp1
pop
push
sub
mov
in
dec
or
mov
icebp
jns
dec
dec
mov
pusha
inc
aaa
out
mov
setno
ret
mov
out
push
cld
int
repnz
stos
lret
pop
fdivrs
dec
add
or
mov
clc
push
lahf
insb
mov
xor
xlat
lock
add
mov
cmpsb
add
icebp
inc
cs
fs
dec
mov
popa
testl
or
orb
je
jp
mov
aas
push
dec
outsb
aad
jae
lret
inc
int
sub
out
and
mov
sbb
mov
je
xchg
cli
add
dec
dec
leave
jo
add
mov
inc
int3
dec
sub
and
incb
add
add
mov
add
and
stos
push
sub
test
aam
jb
sub
xor
test
outsb
or
icebp
pop
jge
inc
add
xchg
mov
cli
std
clc
push
lcall
out
iret
mov
sub
outsb
xor
xchg
push
sbb
mov
aam
fcmovbe
add
or
enter
out
sti
lea
iret
lret
es
lcall
or
mov
ss
add
mov
sub
push
or
jns
push
pushf
repnz
add
jge
fwait
mov
sahf
popl
add
cli
mov
adc
jp
jge
das
sahf
mov
out
mov
in
xchg
outsl
ljmp
cld
inc
xor
testl
ds
ret
dec
dec
inc
lret
fidivrs
or
int
xchg
out
push
hlt
out
clc
add
sahf
aad
add
js
sub
lods
push
sub
add
and
sbb
clc
in
aaa
movsb
push
pop
dec
add
testb
pop
cwtl
mov
xor
jg
clc
mov
or
jmp
sbb
outsl
push
mov
push
pop
fwait
mov
mov
dec
stos
rclb
xchg
jg
mov
mov
jmp
jb
call
stos
dec
cmp
mov
sbb
add
push
lret
cs
enter
ret
and
cld
out
push
fnstenv
mov
or
or
xchg
or
fxch
sbb
sbb
je
inc
mov
frstor
push
and
xchg
sbb
outsl
jno
outsl
sbb
lret
les
pop
imul
rorl
in
mov
add
pop
mov
imul
test
cmc
push
pop
push
aaa
sahf
jg
xor
and
jo
aam
pop
and
flds
sub
cmp
dec
shrb
pop
daa
das
and
sub
add
inc
dec
loope
cmc
movsl
bound
fst
popa
sub
mov
push
outsl
adc
out
add
out
fwait
add
xchg
inc
shll
mov
ret
and
add
cmpb
mov
cli
sub
mov
in
cld
jae
xchg
std
hlt
iret
movsl
mov
sub
lods
sub
shrl
adc
outsl
inc
sub
mov
xchg
jo
mov
add
cmpl
loopne
ljmp
sbbl
add
add
sbb
js
daa
scas
push
sub
cltd
movsb
les
pusha
leave
dec
lret
add
adc
dec
sbb
bnd
pop
mov
jg
lcall
push
pop
add
loop
cwtl
out
adc
add
add
and
out
xor
cmp
mov
adc
add
cltd
mov
scas
cmc
sti
clc
iret
jp
push
push
popa
test
lcall
scas
ljmp
pop
add
aaa
add
inc
mulb
cltd
pop
xchg
lret
loope
inc
iret
mov
add
or
pop
cmp
pop
movl
inc
push
gs
bound
movsl
cmp
mov
inc
stc
mov
cs
push
dec
fmull
push
inc
dec
je
push
scas
pop
push
fs
add
cmp
sarl
icebp
and
addr16
daa
ficoml
inc
bound
and
push
lods
jp
xchg
leave
imul
jno
jbe
add
jg
in
inc
push
or
push
add
js
mov
add
jmp
in
add
add
mov
out
and
jae
fisubrs
sbb
imul
push
outsb
mov
stos
add
xchg
add
divl
iret
add
pop
mov
jge
call
roll
ljmp
call
ret
jns
mov
sarb
pop
movsb
ljmp
mov
out
mov
add
inc
xor
cmp
add
dec
xchg
inc
in
xchg
lock
inc
xchg
scas
je
call
mov
mov
add
xchg
inc
mov
aas
bound
jp
push
subb
cs
stos
jae
test
ret
shld
fwait
fs
cmpsb
xor
push
gs
addr16
push
lahf
je
sbb
jecxz
xor
or
or
add
outsl
popf
aas
adc
sbb
mov
lret
shlb
mov
adc
add
jb
push
ret
test
outsl
add
sbb
jns
adc
jae
push
mov
std
movsl
mov
out
icebp
mov
hlt
inc
data16
push
lock
xchg
push
fiaddl
pop
imul
rcrb
inc
jbe
dec
mov
jbe
subb
out
add
stos
stc
push
ss
js
sbb
pop
rcr
dec
mov
shl
lahf
daa
out
jle
xor
cmpsb
and
mov
pop
ss
push
xor
and
fistpll
fwait
mov
cmpsb
call
stos
cld
sbb
stc
inc
add
stos
push
lret
cmp
mov
testl
leave
and
or
stos
movsb
adc
sbb
out
adc
push
fs
mov
dec
dec
pop
mov
mov
rorl
or
push
ss
inc
cwtl
insl
add
mov
xor
add
ja
push
sub
jp
outsb
sub
pop
sub
js
sub
push
inc
sub
dec
pop
pop
in
cmpsb
xchg
fistl
add
dec
jg
or
inc
or
mov
push
cmp
imul
lcall
shll
pop
xchg
adc
dec
out
inc
cli
les
add
dec
ds
call
iret
shlb
ret
pop
add
dec
loop
lea
pushf
outsl
ret
cmp
push
inc
xor
test
inc
bound
pop
push
test
add
inc
add
pusha
out
rolb
adc
test
mov
in
pop
or
je
jo
mov
pop
pop
push
adc
mov
xchg
out
sarl
insl
pop
jnp
add
imul
loope
cmp
int
mov
movsl
jns
xchg
or
ret
mov
cmpsb
lds
jne
push
add
aam
pop
stos
inc
aaa
xor
cmp
add
cmp
rol
aad
push
push
popa
push
push
out
cltd
fsubrs
int
push
into
icebp
cli
xor
or
add
pop
fists
ficoms
sahf
test
rclb
addr16
popa
adc
loopne
push
push
mov
sub
ds
mov
js
jns
mov
inc
inc
aas
mov
fists
jp
fstps
mov
faddl
fildll
add
inc
push
add
mov
add
stos
add
out
fildll
xchg
add
icebp
add
iret
add
add
add
add
add
sub
iret
roll
push
pop
add
scas
adc
insl
jb
test
add
mov
aaa
jg
add
jae
cmp
mov
les
scas
add
sbb
imul
push
adc
enter
add
insb
add
aam
mov
mov
add
xrelease
add
loop
dec
add
add
int3
ret
add
mov
mov
mov
incl
jmp
jecxz
aas
push
mov
bound
dec
push
pushfw
dec
pop
push
sbb
push
mov
enter
cltd
ljmp
add
add
mov
outsl
sbb
add
sub
mov
sbb
and
xor
inc
jge
mov
adcl
lea
pop
push
sbbb
xrelease
hlt
lock
sahf
scas
mov
aad
jo
test
add
into
jp
add
lods
loope
aas
add
cltd
adc
add
and
inc
mov
lret
dec
movsb
jl
clc
jl
out
int
jno
ljmp
inc
cmpsb
pop
es
insl
mov
and
daa
cld
push
sar
jno
testl
add
daa
add
mov
gs
fadds
test
in
out
cwtl
mov
daa
bound
adc
popa
outsl
bound
add
cmp
out
in
cmpl
and
xor
dec
or
arpl
jnp
in
stc
ljmp
add
xor
mov
push
add
adc
mov
jmp
xor
mov
ss
push
xlat
jl
cmp
notb
sbb
fisttpll
adc
dec
sahf
in
dec
jle
jb
adc
push
adc
dec
add
cltd
dec
xor
insb
out
fcomps
cs
bound
into
xchg
cmp
inc
push
jp
pop
dec
out
cltd
and
inc
gs
xor
outsl
push
scas
into
imul
add
mov
add
incl
clc
fs
xchg
dec
push
or
aaa
mov
xor
add
sbb
add
in
shll
outsl
mov
addr16
push
or
gs
xchg
enter
cltd
pop
arpl
lds
faddl
fadds
fisttpll
push
xor
jp
test
cmp
mov
lods
pop
cmp
outsb
test
sub
inc
jno
mov
add
out
pop
aas
adc
bnd
dec
xor
wrmsr
or
or
jg
mov
xor
xor
or
out
xor
das
sub
cmp
inc
call
fwait
pop
popf
add
mov
lock
push
mov
sub
pop
add
dec
or
jo
ja
mov
jbe
in
inc
add
xlat
ret
push
and
adc
mov
xchg
pop
test
cmpb
xchg
add
ss
fnsave
or
add
cmp
leave
dec
lods
sbb
push
sbb
enter
out
sti
mov
scas
add
faddl
lods
rolb
add
add
shlb
shlb
dec
mov
stos
int3
test
push
mov
insl
movsb
or
jmp
or
pop
ja
jns
inc
jnp
loopne
mov
cmpl
mov
daa
add
aas
cmpsl
ss
and
sub
cwtl
push
scas
jae
pop
lret
out
ja
add
clc
sub
mov
pop
mov
roll
xor
sbb
dec
adc
scas
add
sbb
push
lahf
xchg
daa
fildl
mov
sarb
sbb
mov
jl
sbb
or
mov
sbb
sbb
jo
jecxz
data16
and
pop
xor
pop
sub
adc
sub
loopne
xchg
add
insl
pop
sub
pop
test
lods
add
pushf
repnz
rorb
pop
mov
mov
movsb
fstl
arpl
sub
xor
mov
roll
push
pusha
dec
add
inc
aaa
cmc
ss
dec
or
enter
in
ss
xor
mov
xchg
cmc
lock
outsl
hlt
cltd
int3
fwait
test
mov
test
repz
cmp
cwtl
inc
daa
insb
addl
jo
fsubs
cmpl
adc
jne
aaa
popa
and
inc
jge
aas
xchg
inc
jl
add
or
inc
daa
pop
test
jle
and
push
jb
fstps
or
mov
in
push
outsb
popa
dec
in
loopne
bound
call
popf
xor
cwtl
cmp
and
dec
mov
insb
test
addr16
pop
add
push
test
sbb
sbb
add
mov
iret
lcall
test
and
scas
dec
ljmp
mov
cwtl
xor
cmpl
add
into
rorl
inc
mov
repnz
ret
loope
add
mov
sbb
inc
insl
mov
mov
cli
in
xchg
lret
icebp
push
add
mov
sbb
or
jge
je
fsubrl
or
xchg
int3
lret
sbb
lea
add
inc
mov
cmc
sub
roll
in
stc
pop
outsl
xchg
add
cmp
jnp
jecxz
out
push
fwait
push
push
nop
dec
mov
lock
add
mov
shlb
js
adc
lock
and
ljmp
sti
mov
scas
lods
or
iret
data16
push
mov
outsb
xlat
int3
jne
lcall
add
sbb
dec
mov
push
lahf
sbb
mov
fnsave
add
pop
dec
push
movsl
cmc
imul
and
roll
cmp
cmpl
mov
pushf
xchg
jmp
lret
in
mov
aas
dec
outsl
cmpsb
aam
mov
or
fnstsw
inc
mov
stos
std
sub
push
fildl
mov
push
sarb
mov
sbb
inc
push
les
scas
mov
add
adc
dec
hlt
pop
enter
mov
dec
icebp
mov
sbb
inc
shrl
push
jecxz
outsb
in
inc
flds
imul
lods
fwait
mov
jbe
cmp
dec
inc
cld
push
add
xor
xor
call
mov
add
adc
scas
nop
mov
add
cld
ss
and
sub
mov
adc
test
inc
jle
sub
lea
mov
repnz
insl
test
and
outsb
xor
iret
shll
ja
add
jae
ret
scas
fs
pop
out
xlat
iret
out
jge
outsb
push
mov
ficoml
mov
sbb
add
leave
int
int3
aas
iret
mov
xchg
pop
fisubrs
shl
aaa
enter
aaa
xor
sub
xor
mov
mov
and
movsb
notb
and
or
or
mov
fwait
xchg
fisttpl
jle
mov
xor
jg
shrl
stos
adc
lahf
cmp
add
push
add
xor
jne
ljmp
inc
ret
xor
stc
ss
dec
cmp
xor
jl
mov
mov
add
add
dec
lods
pop
and
out
ja
scas
and
sub
xor
addr16
mov
pop
mov
pop
roll
lods
xchg
repz
jp
dec
lea
mov
lea
fwait
push
loopne
adc
jg
add
and
outsb
jge
lds
fldlg2
cmpsb
adc
insb
test
aad
pusha
stc
andb
mov
test
xchg
inc
jnp
push
cmp
nop
sbb
sarb
out
mov
inc
pushf
and
test
lret
int
lods
fistl
rcr
pop
loopne
jo
inc
and
cli
add
cmp
lds
xor
dec
dec
jb
or
push
push
add
imul
sbb
pop
outsb
sbb
and
push
jge
mov
and
jle
cmpsl
lahf
cmp
and
add
xor
push
pop
les
mov
and
pop
cmp
mov
jno
and
stos
pop
out
cmpsl
fstpt
hlt
loop
adc
loopne
push
add
add
cmp
aaa
jno
das
push
jg
dec
xchg
sahf
lods
add
and
int
cmpsb
xchg
and
fiadds
pop
cmp
pop
cmpsb
or
lret
int
jb
cmp
call
popf
lahf
inc
mov
xchg
xchg
adc
push
add
int3
mov
and
imul
add
test
int3
sub
scas
loope
xor
or
mov
cltd
cmp
cmc
in
or
xchg
add
pop
sti
push
cltd
pop
or
push
dec
ret
or
icebp
sbb
or
ljmp
mov
js
add
cli
fildl
mulb
cmp
add
jns
leave
add
orb
mov
lods
push
dec
push
sbb
test
mov
rcrb
cmpsb
add
scas
mov
add
inc
pop
xor
pop
hlt
cmc
test
add
xchg
popf
pop
repz
inc
sbbb
add
pop
pop
pop
sub
jecxz
and
scas
dec
sbb
or
mov
fisubl
fildll
scas
out
in
adc
cwtl
push
repz
and
xlat
movb
fwait
pusha
sub
insb
lret
inc
std
jmp
ljmp
push
aas
adc
xlat
mov
movsb
sub
mov
sub
inc
mov
scas
in
adc
adc
outsl
mov
pop
mov
xchg
icebp
sbbl
mov
jo
xorb
jp
pop
ret
push
pop
xchg
mov
sbb
gs
mov
hlt
pop
iret
xchg
xchg
add
mov
mov
add
jo
les
mov
add
push
mov
imul
cs
ficoms
add
add
pop
add
test
out
and
push
sbb
orb
icebp
and
int3
add
dec
divb
test
ds
insb
sbbb
jecxz
leave
sub
push
hlt
jge
xchg
subb
push
scas
call
xor
add
adc
add
leave
cmp
add
and
add
lock
sub
add
xorl
arpl
leave
test
jo
les
lret
mov
and
movsl
arpl
jae
adc
cmp
jns
sub
xchg
into
pop
or
mov
dec
lret
mov
and
les
loope
push
inc
jne
xor
jge
dec
sub
push
push
pop
insl
cmp
out
ds
mov
sub
dec
cmp
iret
add
dec
cmpsl
mov
pop
mov
cmp
xchg
dec
subl
push
pop
adc
or
lret
adc
sub
data16
inc
gs
push
dec
test
stc
andl
pop
pop
orl
cwtl
aaa
js
jne
loopne
fcmovbe
leave
cli
pusha
jo
aad
jecxz
in
fsubp
or
cmp
das
in
gs
sub
lar
pop
mov
mov
push
aas
inc
mov
and
add
add
inc
mov
movsl
mov
dec
push
test
js
sub
das
push
and
mov
inc
outsl
or
mov
and
icebp
mov
xor
jbe
std
lock
sbbl
dec
lock
fidivrl
out
loope
mov
mov
pop
rcrl
es
nop
dec
sbb
xchg
add
insb
sub
cmp
add
push
jns
popf
out
mov
mov
rorl
dec
add
aas
and
push
push
inc
test
in
sub
mov
repnz
sub
sub
sub
and
icebp
repz
and
mov
cld
add
daa
push
jnp
dec
dec
xor
js
mov
inc
add
adc
jno
mov
and
in
mov
in
pop
adc
out
pop
adc
pop
cltd
das
lock
mov
sub
add
movb
add
xor
xor
or
inc
sub
pusha
test
popf
data16
daa
jmp
add
push
test
mov
mov
and
test
cli
sbb
or
or
fisttpll
addl
pop
pop
add
mov
test
loop
sbb
mov
jno
data16
call
sti
lods
dec
dec
lret
fistpl
pop
jl
add
mov
add
movsb
or
add
lcall
sbb
cmpsb
add
shrl
and
pushf
mov
add
and
or
mov
adc
xchg
int3
js
mov
sbb
cmc
add
or
aad
fiaddl
push
xchg
imul
push
jge
push
push
cmp
push
sbb
jmp
lods
data16
adc
push
push
pop
jle
loope
sub
push
dec
pop
adc
out
mov
out
inc
int3
lret
push
iret
xchg
add
enter
daa
sbb
enter
data16
lods
les
pop
sbbb
test
pop
movsl
add
ja
mov
dec
daa
pop
push
pop
pop
pop
push
test
dec
jb
dec
xchg
push
add
cmpb
sbb
xchg
push
scas
sub
inc
add
jne
xchg
aaa
fcompl
shrb
add
gs
sbb
ficomps
in
fwait
sub
mov
lahf
inc
dec
or
cmp
add
cmp
cli
or
mov
push
das
xor
dec
mov
filds
lods
popa
popa
popf
sub
sbb
add
jmp
call
ret
jne
loop
jg
jns
out
mov
mov
pop
add
mov
js
in
lods
jbe
andb
mov
and
jne
lret
nop
leave
pop
cltd
pop
test
mov
or
mov
dec
mov
filds
mov
adc
loop
shl
add
jmp
and
and
xchg
popa
rcrb
icebp
hlt
insl
stos
add
sub
in
xchg
loope
add
push
ret
add
cmp
xorb
or
movb
push
xchg
sar
pop
clc
cmp
cmp
call
data16
sub
and
dec
aad
dec
adc
jmp
push
or
mov
and
int
repz
in
push
push
add
sbb
push
repz
add
in
push
fs
out
add
test
pop
sub
mov
dec
rcrl
daa
adc
xchg
sbb
mov
or
sub
cmc
cli
inc
jmp
lods
mov
mov
push
push
push
add
mov
mov
iret
add
sbb
std
xchg
bound
dec
into
pop
clc
add
push
xorb
enter
add
dec
xor
fimull
sbb
pop
add
test
sbb
push
fldl
mov
imul
subl
ljmp
incl
add
pop
data16
mov
dec
roll
add
cld
incb
add
in
and
and
sub
dec
xchg
sbb
psrld
pop
pop
xor
rclb
sbb
cmovb
iret
pop
dec
dec
mov
mull
add
enter
add
roll
mov
rorl
jecxz
push
sub
movsb
push
jb
jo
and
sub
lds
fwait
pop
push
pop
pop
xchg
sbb
loopne
test
pop
test
insl
pop
sbb
mov
xchg
sahf
mov
xchg
pop
and
dec
pop
xor
mov
int
pop
loopne
in
stos
leave
test
in
fisttps
xor
mov
lods
dec
test
dec
repz
cmp
jle
daa
insl
js
int
jne
push
cwtl
test
mov
push
jp
push
mov
pop
test
add
in
push
stc
clc
push
dec
adc
xchg
sbb
xchg
xchg
addr16
mov
nop
inc
add
push
js
add
jg
mov
mov
in
stos
lods
pop
dec
jge
dec
movb
mov
mov
fstl
mov
adc
jecxz
pusha
shr
dec
mov
dec
insl
call
sbb
add
adc
mov
cmpsl
test
adc
lret
subb
sub
imul
add
xor
push
out
jnp
repz
or
ja
or
xchg
addl
mov
cmp
xor
add
xchg
test
and
adcl
cltd
movsl
mov
sbb
xor
mov
lret
test
insl
push
and
xorb
ss
push
lods
lret
les
xchg
push
xor
inc
scas
mov
xchg
pop
stos
pop
add
fimuls
jae
and
inc
jl
out
lock
add
xchg
popf
nop
add
subb
movsb
xchg
jg
push
jae
jp
jmp
add
xchg
int3
dec
lcall
fldt
in
test
scas
mov
into
lcall
add
dec
inc
cmp
imul
mov
pop
xchg
add
aam
ja
pop
addl
mov
enter
or
add
mov
jnp
mov
out
daa
fcmove
nop
imul
push
adc
cmc
aaa
stos
dec
add
test
rolb
mov
lods
inc
bound
sub
das
call
popl
mov
add
aas
add
pushf
cmp
inc
test
mov
leave
scas
jno
xchg
add
add
and
add
sub
sub
sub
cmpsl
or
movsb
or
mov
mov
iret
mov
sti
xorb
popa
lods
inc
jbe
mov
cmp
movsl
sbb
add
sbb
gs
inc
jmp
sbb
mov
les
add
ja
dec
or
pop
mov
pop
or
ret
into
xchg
inc
push
sbb
cwtl
and
and
jmp
in
fdiv
xor
or
es
fs
xchg
or
ljmp
nop
and
sbb
ja
push
js
sbb
aam
pop
in
mov
pop
push
fwait
bound
in
pop
stc
loopne
pop
out
lods
lods
scas
cmp
out
outsb
fwait
lcall
and
mov
aad
add
les
out
stos
ror
cltd
sarb
je
movsb
add
scas
fsubrl
das
sbb
cld
std
stc
push
mov
inc
and
fldl
push
rolb
push
jl
or
fldcw
jge
aas
call
pop
bound
sbb
mov
sub
add
push
iret
insb
inc
cwtl
cmp
testl
mov
and
or
add
bound
dec
or
push
pop
cli
add
jnp
jle
dec
adcb
test
push
and
sbb
push
fcom
fsubs
push
mov
mov
icebp
test
scas
andb
or
or
cs
cmp
or
push
jns
or
add
mov
das
pushf
or
out
scas
aad
push
andb
js
push
mov
cld
ret
push
xchg
sub
mov
out
int3
inc
mov
jp
or
addr16
mov
add
lret
jp
loop
add
push
add
movsl
das
push
adc
fildll
xor
pop
aaa
mov
pop
mov
gs
or
ret
mov
cld
pop
lret
cmp
add
cmp
sub
push
stos
das
pop
mov
mov
clc
gs
les
sbb
xor
out
add
sbb
pop
cmpsl
repnz
lret
inc
mov
cmp
push
xor
cltd
cmp
dec
cmp
jge
pop
add
loope
add
pop
int3
push
sbb
insb
pusha
xor
mov
dec
mov
loope
sub
add
jmp
lock
sahf
fists
mov
cld
mov
xor
arpl
sarl
or
jno
repnz
inc
mov
iret
add
pop
sub
in
mov
ret
iret
dec
and
mov
lcall
out
mov
inc
fisubrl
sub
cmpsl
movsl
jno
insl
xorb
adc
xchg
or
leave
test
sbb
or
add
test
mov
lock
cmp
cmpsb
cld
push
mov
outsl
lahf
data16
or
add
pop
sbb
xchg
stc
add
dec
adc
test
and
ret
add
mov
sbb
add
in
loop
push
test
add
movsl
insl
xor
movsb
mov
mov
stos
push
ds
int
add
and
dec
lahf
pusha
int
addb
inc
mov
dec
stos
fldcw
enter
mov
std
dec
cwtl
sub
aad
in
jecxz
add
jmp
and
aad
add
movb
jbe
cmp
jae
add
ret
cmp
lds
xchg
adc
pop
sub
push
cld
shrb
mov
das
lods
inc
scas
mov
sbb
push
mov
ss
add
and
lret
int3
in
xchg
add
inc
mov
aam
xchg
sub
add
push
test
xlat
pop
sbb
sub
jbe
lods
cmp
loope
adc
and
xor
gs
bound
cltd
cld
xchg
iret
pop
fcomps
cmp
lret
dec
inc
inc
lret
add
add
jmp
mov
mov
fwait
pop
jbe
adc
fisubrs
pop
add
cmp
and
out
divl
mov
jge
idiv
fs
and
pop
dec
test
xchg
jmp
movsb
ret
push
lods
xchg
push
mov
hlt
push
mov
inc
repz
incl
adc
call
xor
xchg
shlb
shrb
sub
int
inc
adc
dec
cmp
add
mov
in
dec
add
cmp
push
out
dec
test
dec
xchg
and
jnp
and
ljmp
cli
cltd
cmp
std
dec
push
nop
loop
dec
lret
out
xchg
mov
xor
mov
cmp
cmp
loop
push
xor
adc
cmpsl
add
adc
mov
cmp
cmp
ror
add
dec
hlt
loope
leave
test
lock
sti
dec
lods
mov
je
pop
mov
aam
push
jg
das
push
sbb
mov
mov
loope
roll
leave
ja
mov
xchg
repnz
push
xorb
ds
add
test
add
jg
cmpsl
icebp
cltd
add
sub
and
daa
pop
jmp
sbb
mov
add
xchg
test
stos
ret
push
xbegin
ret
clc
push
pop
jmp
cmc
insl
lds
add
xchg
and
arpl
add
inc
mov
ret
ljmp
jo
sbb
push
jo
cld
insb
gs
lcall
add
jb
pop
adc
idivb
lods
jge
inc
fldcw
and
cmp
stos
fs
imul
pop
or
sub
loop
sub
data16
dec
inc
cmp
int
cld
mov
int3
imull
in
out
mov
or
pusha
jae
mov
add
add
imul
lods
out
add
lds
sahf
jnp
inc
add
in
adc
or
mov
adc
out
cltd
lret
frstor
mov
add
jg
xcrypt-cbc
cmpsl
cwtl
iret
loop
pushf
jp
mov
add
jle
inc
enter
sbb
fimull
enter
fildl
jno
add
ret
fnstenv
cmp
insl
in
jnp
lcall
test
inc
in
roll
shlb
nop
rolb
add
cmp
lahf
mov
cli
mov
sub
outsb
add
and
xchg
inc
jbe
add
dec
inc
mov
imul
outsl
sbb
popa
sbb
stc
mov
dec
xlat
scas
cld
xor
add
dec
inc
into
retw
dec
mov
dec
jb
add
insl
cmp
cwtl
jmp
add
sbb
adc
jmp
and
movsb
cmp
loopne
flds
in
nop
dec
jne
fisttps
jb
lock
int
xor
jp
xchg
loope
add
add
mov
js
xor
movl
jmp
add
data16
add
push
call
add
jbe
mov
xor
into
inc
fildl
iret
lahf
aaa
add
sbb
lods
in
add
shrb
add
lahf
adc
lods
pop
add
add
add
mov
xor
jle
cmp
arpl
mov
and
push
cmp
mov
adc
add
add
adc
add
add
xchg
sbb
add
xor
add
add
sahf
push
cli
into
int3
popf
xor
or
add
pop
pushf
adc
inc
ret
mov
in
and
inc
or
xchg
sub
pop
adc
and
mov
add
mov
push
leave
add
enter
pop
cmp
hlt
std
jg
add
add
repz
sub
mov
cmpsl
mov
stc
add
rclb
pop
add
imul
add
mov
outsw
jo
add
add
inc
add
mov
aaa
mov
lahf
cltd
or
add
in
neg
add
popa
pushf
je
insl
imul
ja
movsl
sub
inc
std
scas
subb
mov
bound
aad
adc
sbb
xchg
and
stos
jno
out
add
xchg
or
jo
lock
xor
xor
call
daa
xchg
out
ss
sub
arpl
pop
push
jo
lret
bound
sbb
dec
mov
xlat
dec
inc
inc
aaa
xchg
out
add
neg
mov
mov
pusha
insb
loop
imul
cmp
aad
repz
or
jo
jnp
nop
xchg
jns
mov
or
flds
cmp
dec
sbb
add
test
dec
arpl
inc
in
ret
adc
lret
adc
add
push
lods
cmp
imul
adc
mov
lret
in
fildl
hlt
add
or
addr16
out
push
add
mov
in
push
mov
add
test
cmpsl
addl
xlat
aad
sub
mov
data16
ret
out
pop
push
mov
fstpt
mov
mov
dec
jno
adc
add
lods
add
scas
cmpsb
outsb
scas
out
xchg
aas
pop
cs
stos
pop
cmp
xor
add
dec
push
int3
mov
or
push
les
jecxz
or
das
es
mov
mov
dec
imul
sub
jnp
imul
in
adc
pop
mov
shr
insb
adcl
in
lock
xchg
or
inc
lock
in
or
scas
pusha
scas
jnp
push
arpl
enter
fwait
jbe
add
jg
inc
xchg
lcall
mov
repz
lret
add
push
clc
xchg
int
addb
flds
add
push
sub
sub
jno
add
imul
int
nop
ljmp
or
xor
or
dec
orb
into
clc
lcall
imul
fs
das
xlat
xchg
clc
mov
insb
push
push
scas
push
add
push
push
ret
mov
add
mov
sub
or
cwtl
outsl
divl
testb
mov
fcmovnbe
add
scas
addr16
mov
mov
cmp
mov
add
xchg
add
mov
add
lret
xor
sarb
pop
loop
sbb
sub
es
jmp
scas
adc
leave
cld
cwtl
and
inc
jno
adcb
ret
mov
inc
enter
scas
xor
push
int
insb
adc
sub
sbb
add
push
fimull
mov
jmp
mov
and
sahf
mov
push
inc
jbe
jb
dec
stc
add
mov
add
fildl
pcmpeqw
cmpsb
lret
mov
pop
add
pop
ret
or
push
mov
xchg
dec
xchg
xchg
orb
add
lret
pop
in
mov
or
int
sub
dec
dec
cmpsb
dec
jns
orb
mov
add
add
dec
add
inc
lret
lock
add
gs
add
test
and
pusha
dec
jbe
jne
in
or
in
ret
add
xchg
xchg
sub
loope
lds
mov
xor
xor
stos
cmp
faddl
outsl
repnz
addr16
sub
pop
cwtl
out
scas
lock
xlat
popf
sbb
add
hlt
add
jb
pop
aaa
insb
fsubrl
sub
fdivrp
insl
xchg
in
shll
stos
lahf
dec
cmp
cmpsl
push
mov
in
test
add
push
jle
aam
dec
and
and
lret
mov
mov
or
sub
into
xor
mov
jnp
loope
add
inc
push
push
add
or
cmp
push
cmpsl
xchg
and
mov
xor
shrb
xor
pop
lock
pop
push
add
xchg
pop
jbe
aas
or
lods
in
loop
add
lods
xor
testl
add
add
pop
add
icebp
mov
shrb
and
xchg
dec
repz
pop
xor
or
jmp
cmp
pop
cmp
mov
sbb
leave
push
enter
jecxz
lds
shrb
fsts
scas
mov
in
xchg
push
add
push
adc
dec
inc
mov
dec
mov
lret
dec
mov
ss
xchg
stc
or
jae
stos
push
js
xor
iret
into
movsl
repz
scas
dec
aas
test
repnz
cmc
cmp
sbb
push
sbb
or
xchg
in
pop
mov
fs
mov
add
mov
add
push
sbb
add
out
sub
xchg
fildl
icebp
add
shrl
xchg
add
lds
push
bound
and
das
dec
loopne
add
inc
xor
xor
sub
sbb
mov
inc
ljmp
rolb
xor
popf
add
xor
js
inc
mov
ss
call
cmc
fs
nop
popa
mov
bswap
das
fwait
jmp
sub
stc
sbb
sbb
aas
sbb
xor
or
add
aas
aam
leave
notl
mov
test
and
adc
sbbb
mov
jmp
and
sub
push
outsb
in
pop
aaa
add
stos
mull
fidivs
adc
mov
flds
lcall
jbe
mov
adc
cmp
sub
imul
insb
or
adc
mov
mov
jb
cmp
cltd
sbb
iret
cmovae
jmp
jne
fcoml
add
and
xchg
fsubl
popa
iret
sub
call
adc
lret
popf
add
fldenv
sbb
inc
out
mov
push
bnd
mov
aam
lods
inc
pushf
das
shll
flds
mov
adc
stos
add
push
leave
lret
xchg
in
xor
sti
mov
mov
int3
jg
out
iret
les
sbb
cs
iret
pop
jo
fisubrs
xchg
clc
push
fdivrs
insb
in
push
add
fwait
sub
xor
add
mov
push
bound
ret
jge
pusha
mov
add
xchg
push
mov
push
or
add
push
push
in
lods
add
nop
add
dec
in
gs
sbb
xchg
inc
sub
popf
push
int
mov
test
xor
add
or
or
dec
mov
aad
push
add
mov
adc
lcall
push
push
sub
aad
inc
push
jg
popf
pop
aam
mov
pop
cwtl
in
jae
pcmpeqw
icebp
js
lock
call
xchg
les
jmp
mov
push
nop
adc
xorb
cmp
pusha
lods
sarl
sarb
scas
mov
mov
jl
inc
mov
add
xor
mov
add
lods
scas
add
push
sub
mov
inc
imul
dec
inc
mov
loop
dec
fmuls
and
xchg
jl
or
add
in
mov
out
aaa
add
pop
into
sub
scas
mov
scas
loop
cmp
in
lcall
clc
les
popf
sub
xor
sbb
pop
int3
xchg
mov
call
cmp
lret
loop
sahf
shrb
rol
pop
hlt
in
addr16
cmp
cmpsl
pop
insb
sti
mov
aad
in
shrb
testb
pop
mov
add
loope
xor
stc
add
add
jmp
in
push
das
mov
pop
lahf
mov
adc
adc
outsl
pop
stc
es
scas
add
jno
cmpsl
pop
jmp
sbb
add
lahf
and
or
mov
jecxz
lret
or
mov
std
clc
scas
sub
xor
add
sbb
inc
mov
inc
ret
loopne
fadds
lret
faddl
mov
cmpsb
imul
add
adc
mov
pop
in
fnstsw
push
les
or
addl
testl
les
add
sbb
ret
push
push
mov
sub
jae
mov
gs
mov
out
ljmp
inc
add
roll
pop
pop
lahf
fbstp
adc
add
negb
iretw
push
xchg
sbb
add
add
call
test
lods
adc
arpl
in
fs
out
add
popa
mov
loopne
hlt
fs
xor
jnp
movl
pcmpeqd
dec
mov
xchg
mov
iret
sub
pop
fwait
mov
mov
arpl
sahf
shrb
mull
icebp
repnz
xchg
jmp
xchg
add
inc
cmp
imul
add
add
mov
test
icebp
sbb
cmp
jg
xor
jmp
xor
jmp
in
stc
lret
sahf
pop
loop
jo
mov
mov
mov
sbb
inc
lret
sahf
iret
add
cmpb
inc
subl
cmpsb
add
das
rolb
imul
rcrb
and
fs
dec
add
cmpsl
inc
cmpsb
mov
out
scas
push
pop
lea
inc
xchg
pop
add
push
pop
add
cld
imul
mov
arpl
js
mov
add
add
movsb
mov
mov
mov
pop
push
out
dec
gs
cmovle
in
jl
and
add
ljmp
in
and
dec
adc
mov
ss
dec
std
mov
dec
or
pop
adc
and
push
jae
shll
or
imul
pop
xchg
loop
xor
or
jb
mov
adc
fs
stos
in
add
add
xor
lahf
jmp
iret
inc
fdivl
add
dec
inc
sub
jns
pop
and
loope
sub
cwtl
dec
daa
mov
out
or
les
jb
lock
add
divb
pop
add
cmp
rolb
pop
je
rcll
aam
in
sahf
test
in
push
imull
lods
fsubl
dec
ja
sbb
cmp
add
aad
and
push
inc
aaa
shl
fstps
loop
lds
xor
test
push
call
and
sti
xchg
xchg
outsb
rcll
pop
mov
add
stc
push
inc
pop
adc
into
iret
dec
xchg
pop
leave
lret
addl
dec
vpshaw
jmp
aad
jg
push
push
push
push
in
test
stos
out
xor
popa
mov
sahf
add
sahf
std
push
mov
jae
cmp
inc
mov
pop
add
mov
and
mov
stos
testl
jmp
cmp
mov
daa
cmp
add
mov
add
or
dec
repz
test
add
push
sub
cmpsb
lahf
ds
lock
filds
pusha
mov
arpl
jecxz
add
push
xlat
repnz
mov
roll
movl
int
js
inc
cwtl
fiaddl
dec
inc
add
xchg
cmp
cld
cmpsl
lods
cmp
xchg
sbb
sub
pop
sub
mov
stos
test
add
pop
add
filds
mov
lahf
loopne
aam
dec
decb
dec
jmp
mov
lcall
scas
popf
xchg
in
arpl
xchg
sbb
or
js
repnz
aaa
dec
dec
or
mov
or
or
jns
enter
push
outsl
push
push
loopne
hlt
inc
pop
xchg
fcoml
mov
pop
sub
js
add
mov
add
fdivr
sbb
push
mov
mov
add
jle
out
mov
add
shrb
pop
cmp
fsubs
add
les
repz
ret
mov
std
push
cmpsb
pushl
add
inc
ud0
dec
xchg
add
dec
add
add
enter
sub
xchg
jl
sub
call
xor
insl
xchg
add
inc
cld
das
sub
mov
jp
pmuludq
mov
add
mov
jg
mov
popf
insb
mov
push
push
lds
lahf
ds
xchg
mov
iret
arpl
mov
lahf
out
sbb
sub
mov
or
mov
ss
mov
mov
add
dec
sbb
ret
inc
fiaddl
add
and
jl
and
add
add
lods
std
rolb
pop
mov
aaa
sub
sub
stc
sub
icebp
jnp
sbb
jge
enter
or
test
push
xlat
add
pop
mov
movsl
jg
xchg
jae
ret
sub
ret
add
stos
hlt
xchg
in
lahf
scas
add
push
mov
inc
adc
pushf
lock
add
inc
mov
cmp
cltd
mov
cmp
add
push
add
add
sub
inc
sub
or
dec
je
jb
lret
add
xchg
jno
jb
push
rolb
in
jns
fistps
pop
push
ljmp
sbb
aaa
jmp
movsl
sbb
outsl
jne
pop
inc
repnz
jno
shlb
jns
or
cmp
mov
cmp
add
pushf
mov
pop
pop
add
repz
cmp
movsb
jl
add
test
adc
xor
cmpsb
add
push
test
lret
jecxz
iret
add
int3
in
data16
je
and
popa
aam
and
lods
mov
loope
shll
out
mov
add
and
dec
cmc
rcrl
inc
dec
lahf
stc
fnstenv
push
imul
ljmp
add
mov
flds
jbe
sub
add
or
sahf
rolb
dec
add
int3
ror
jge
push
jnp
pop
inc
loop
lret
aaa
add
cmpsl
cmp
adc
popa
pop
nop
xchg
insl
call
sub
xchg
dec
adc
loopne
lret
sbb
jl
movb
mov
pop
or
repnz
test
call
add
dec
es
fdiv
lods
scas
in
sub
sub
outsl
xchg
test
inc
or
mov
add
repnz
dec
sbb
jb
int3
jmp
mov
xchg
movsl
pop
add
fsubrl
scas
scas
test
xor
fmull
sub
movsb
add
mov
out
dec
hlt
dec
xor
cmp
inc
cs
test
push
movsl
sbbl
add
insl
inc
sbb
lcall
and
stos
and
dec
mov
stc
jbe
add
das
add
mov
mov
imul
movb
inc
xchg
push
mov
or
add
dec
inc
mov
addr16
mov
mov
testl
dec
adc
testl
add
add
add
mov
mov
ret
add
outsb
or
push
or
sub
jmp
jecxz
repnz
cmpsb
pusha
jo
inc
icebp
jns
xchg
ljmp
push
and
leave
xchg
cmc
addl
aaa
add
add
sbb
pushl
add
xor
loop
insl
decl
in
fmuls
outsl
xchg
xor
mov
dec
fsubrs
insb
addl
jp
add
test
push
popf
push
push
daa
sbb
clc
push
mov
dec
cmp
cmc
jne
mov
add
ret
sub
push
mov
xchg
loop
dec
adcb
insb
lea
add
or
in
adc
cmp
insl
call
fs
sub
dec
inc
out
lahf
adc
jmp
add
sub
sub
mov
dec
imul
inc
adc
repz
mov
aas
push
add
and
add
cs
xor
pop
pop
fwait
xchg
cmp
test
add
inc
jmp
or
out
jbe
cs
mov
sub
xor
xchg
movl
push
xchg
popa
sub
into
outsl
popa
sahf
ror
jecxz
pop
aad
in
aaa
dec
jnp
add
xchg
and
mov
cmpsl
cld
out
int
or
add
add
ret
js
sub
sti
call
add
inc
cmp
stos
das
lcall
movl
cmp
jecxz
add
je
mov
int
insb
stos
push
shlb
add
jne
sbb
dec
test
cltd
nop
sub
pop
stos
mov
lret
lods
add
nop
xchg
cmp
push
aas
inc
jbe
sbb
dec
lods
inc
cmp
loope
jnp
mov
add
push
jo
clc
push
jo
lret
push
cmp
mov
ror
inc
push
sbb
imul
in
xchg
loop
bound
mov
jp
repz
arpl
inc
jbe
xorl
and
xchg
inc
add
xchg
inc
mov
or
imul
pop
inc
add
jl
mov
mov
ljmp
or
jb
aam
push
stos
push
popl
out
lea
xchg
add
iret
arpl
pop
fucomi
mov
jne
xor
inc
cmp
test
stos
inc
fwait
lret
jp
mov
add
jbe
add
les
rcll
add
mov
insl
add
arpl
test
lods
lea
jmp
les
test
pop
sub
inc
pop
inc
mov
or
and
pop
inc
and
cwtl
cmpsl
mov
xchg
xlat
mulb
in
fcomps
mov
jp
imul
push
and
out
std
dec
imul
xor
cmp
mov
inc
testb
stc
aam
inc
testb
insb
shrl
in
aad
shr
aam
stos
push
sti
fs
lea
stc
mov
cmpb
sub
inc
adc
cmc
inc
cwtl
xor
icebp
fwait
ret
nop
xchg
inc
ffree
les
mov
pop
insb
and
add
into
cmp
xlat
add
cmpsb
fldt
nop
jnp
fcom
ljmp
int3
cltd
popf
mov
lods
loope
mov
xor
add
jle
scas
mov
inc
and
and
add
xor
mov
cmp
loope
sahf
pop
mov
aad
sbbl
dec
sbb
rcr
dec
cmp
cmpsl
inc
ljmp
aam
xchg
int
and
cmp
int
sub
sti
add
and
gs
fstp
pop
movsb
cltd
inc
mov
xchg
lret
mov
add
dec
pop
and
mov
jae
fdivrs
dec
ret
sbbl
sub
cmp
aam
cli
mov
mov
adc
push
or
ss
jb
frstor
xor
add
lock
cmp
popa
add
pop
add
and
cli
and
scas
mov
adcl
lea
sbb
mov
addr16
and
insb
ret
sbb
aam
fwait
lret
jg
or
sub
js
add
ret
shll
sbb
mov
in
sub
mov
aas
cmp
insl
lret
gs
pop
invd
adc
nop
cmpsl
fsts
pop
mov
jmp
inc
movsb
popa
les
add
mov
mov
cmpsl
add
repnz
push
xor
sub
mov
jno
test
pop
jnp
or
lret
jo
pop
test
imul
cltd
xchg
pop
push
cmp
aaa
sbb
mov
scas
cmp
mov
adc
lcall
sbb
push
add
aam
cmp
mov
adc
out
mov
push
push
push
scas
sub
inc
push
pushf
pop
leave
mov
adc
add
add
daa
insb
cmc
jmp
inc
mov
movsl
dec
into
imul
scas
loopne
je
and
and
add
jbe
mov
repz
cld
cli
sbb
rcrb
inc
fwait
push
scas
adc
loopne
jmp
stos
clc
addb
add
lds
je
shll
loopne
xor
nop
dec
add
subl
adc
mov
out
and
mov
mov
or
jbe
push
pop
ror
sti
sub
loope
iret
rorl
pop
stos
call
test
aad
mov
icebp
sti
dec
mov
imul
cli
loopne
cmp
pop
mov
pop
into
inc
cmpsb
pop
ds
sub
shrb
add
add
loope
pop
cltd
cmp
pop
test
int
out
int
sub
inc
mov
pushf
inc
dec
mov
cmp
ror
loope
stos
dec
call
stos
daa
cmp
call
aam
stos
aad
jno
enter
add
roll
jne
scas
mov
aad
mov
rolb
enter
das
sub
scas
sub
push
loope
cs
jne
pop
mov
movsl
mov
lock
dec
je
pop
mov
mov
lret
mov
push
push
mov
mov
sub
inc
fistl
jmp
inc
das
scas
out
or
jge
xor
jns
cwtl
xor
popa
pop
out
pop
rorb
xchg
in
and
pop
push
outsb
iret
add
xor
jle
mov
hlt
notl
shl
mov
mov
fidivrs
or
add
gs
cmp
fisubl
push
mov
pushf
cmp
ljmp
out
xor
sub
jecxz
jae
dec
data16
ds
jg
dec
js
out
adc
inc
stos
incl
and
mov
xchg
lds
lcall
sti
or
in
sbb
add
add
not
out
add
rorl
mov
or
sti
add
shr
xchg
aas
jg
aas
add
or
jecxz
adc
jns
mov
push
lock
lock
dec
jg
cmp
push
adc
sbb
mov
xor
out
aas
fistpl
lock
insb
pop
mov
xor
push
arpl
pop
dec
push
test
add
add
in
mov
cmp
int3
or
inc
lea
add
or
push
mov
push
mov
insb
movsl
in
xchg
add
inc
lcall
lods
dec
lock
fimuls
jecxz
xchg
or
lds
or
fdivrs
sahf
add
popf
pop
xor
mov
je
jecxz
sbb
push
inc
mov
enter
ljmp
test
stos
pop
pop
pop
adc
or
loopne
popa
xor
mov
sahf
filds
cmpsl
int3
out
push
mov
cmpsl
flds
test
iret
push
xor
xchg
jg
jmp
push
mov
and
not
and
movsb
add
mov
dec
clc
pop
add
push
add
jae
imul
cmp
add
adc
outsl
mov
stos
ljmp
add
daa
jle
pop
and
sti
cwtl
xor
push
add
testl
sbbb
inc
sbb
sbb
push
push
or
add
test
add
pop
fildl
add
and
push
adc
adc
inc
or
or
adc
std
mov
cld
and
mov
sbb
xorb
add
inc
or
outsl
sbbb
jmp
push
sti
shrb
add
fdivrs
sbb
jp
out
iret
pop
shlb
divl
rorl
popa
mov
sub
and
fcoml
cs
es
xchg
rcll
loopne
add
call
ds
cmp
mov
adc
dec
add
push
mov
out
pop
outsl
mov
sbb
or
in
sub
adc
and
roll
push
push
push
out
sbb
mov
cmpl
movhps
lea
mov
pop
mov
int
dec
or
cmc
add
pop
cld
ret
add
fiaddl
jmp
fcoms
stc
jecxz
clc
call
or
add
or
mov
fildl
std
cwtl
dec
fdivrs
in
out
andb
cld
lods
mov
and
push
mov
mov
xor
inc
add
sbb
mov
pushf
iret
add
add
sub
add
mov
mov
or
mov
inc
ljmp
in
outsb
add
mov
xchg
ss
inc
aaa
iret
xchg
repz
data16
insb
add
dec
cmp
or
mov
aas
add
out
adc
stc
nop
bound
push
or
xor
fucomi
sbb
xor
int
insl
inc
sub
dec
aam
ret
lcall
xlat
lock
add
lret
and
dec
pop
daa
sbb
mull
mov
pop
daa
mov
jmp
mov
stc
pop
xchg
add
js
ret
fmul
cmp
fwait
jmp
bswap
sbb
or
xchg
or
addr16
test
or
cmp
stos
out
mov
movsb
fldenv
pop
loopne
leave
lea
gs
push
sbb
or
lcall
xchg
fwait
addl
in
lods
jecxz
add
data16
jne
aaa
pop
and
insb
scas
jb
lcall
cmp
addl
add
testl
bound
dec
inc
add
sahf
sahf
cmpsb
mov
push
xchg
inc
cmpl
movsb
cmp
scas
add
sbb
sub
pop
and
add
cmc
repz
push
pop
scas
stos
inc
lret
mov
add
inc
push
add
pop
jle
xchg
rsqrtps
les
lods
sarl
ss
add
xchg
or
outsl
out
scas
add
insb
in
imul
arpl
cmpsl
lock
scas
div
cwtl
aaa
push
xchg
add
add
ret
testl
jno
adc
leave
sub
add
inc
mov
jmp
mov
add
pop
leave
or
mov
adc
lea
rorb
fimull
mov
jno
cmp
sbb
dec
fiadds
leave
sbb
aad
pop
inc
add
xor
xor
test
add
sbbl
cmc
rcrl
inc
pop
mov
dec
mov
imul
add
arpl
pop
xlat
test
sub
jmp
dec
and
fisubs
jg
jno
aad
int
pushf
push
lret
pusha
nop
inc
jg
ljmp
in
push
arpl
cmpsb
adc
mov
iret
pop
adc
add
mov
pop
pop
adc
adc
sub
fadds
adc
mov
xchg
add
add
mov
xchg
xchg
sub
cmc
pop
dec
addb
mov
mov
int3
push
push
push
loope
rcll
int3
adc
xchg
jl
jge
enter
or
sbb
add
es
ljmp
aaa
xor
xor
or
aam
jne
ret
jmp
nop
add
pop
out
pushf
sbb
in
jo
jecxz
mov
xchg
dec
jle
sub
sub
mov
pop
ret
rorl
sub
mov
sahf
test
loop
outsl
cli
leave
mov
pusha
mov
daa
xor
es
cmp
sub
lret
inc
xlat
lea
push
addr16
add
mov
or
aaa
sub
ss
psrlw
test
mov
mov
inc
dec
int
sub
test
outsl
popf
into
sbbb
mov
ljmp
lods
shrl
enter
lock
sub
inc
lods
push
add
aas
inc
loope
and
call
pushf
das
rcrb
repz
das
imul
push
and
test
dec
mov
outsl
add
add
mov
add
cmp
fcmovb
push
and
bound
iret
xchg
add
scas
push
pushf
test
insl
xor
or
mov
xchg
gs
cmp
push
andb
cmpsl
add
pop
or
mov
add
ss
fstpt
jae
adcb
and
mov
bound
in
loopne
outsl
cmp
mov
pop
and
mov
adc
inc
mov
insb
xchg
push
mov
mov
jl
inc
sub
add
out
jle
pop
cmp
add
popa
loop,pn
iret
push
push
pop
das
mov
xchg
jle
add
or
mov
xchg
add
insl
dec
outsl
int3
testb
dec
inc
test
ret
jne
aaa
add
or
aas
mov
xchg
mov
int
jge
sbb
in
xchg
cs
test
lret
sbb
push
fdecstp
add
or
dec
mov
mov
lods
std
mov
stos
xor
ja
js
add
outsb
pusha
pop
xor
insl
filds
inc
and
mov
and
jnp
jmp
pop
xchg
pop
cld
scas
ss
dec
stos
ljmp
cmpsb
pushf
add
add
push
push
dec
js
scas
pop
imul
xlat
popf
in
xor
loope
add
and
mov
stos
fsubs
test
stos
imul
hlt
mov
shl
movsb
ret
aam
lods
sahf
push
orb
add
mov
and
jmp
pop
sub
subl
mov
cli
pusha
pusha
adc
mov
sub
mov
addr16
and
rcrl
mov
lret
orps
sbb
adcl
sub
add
arpl
add
in
add
jmp
jp
xchg
cmpsl
pop
repz
add
jg
repz
imul
mov
mov
cmpl
jle
xchg
int3
jmp
mov
jae
or
and
add
cmp
add
leave
dec
jbe
sub
xchg
aas
push
in
out
add
dec
je
ss
jae
pop
in
or
ljmp
clc
lret
loopne
rcrb
test
insb
out
inc
push
insb
mov
dec
add
mov
sarb
in
test
cld
aaa
lcall
lret
js
and
inc
shll
scas
add
mov
loopne
cmp
imulb
movsb
mov
or
xchg
cmpsb
les
xor
xlat
mov
cltd
loope
pop
inc
jne
inc
in
push
pop
sbb
inc
shll
popf
and
and
iret
int3
inc
mov
mov
insb
sbb
xchg
rcl
cmp
mov
sub
pop
hlt
fistpll
pop
fsubr
and
loope
dec
xacquire
mov
stos
loopne
outsl
fildl
aad
sub
andl
arpl
sarl
mov
das
and
orl
xchg
mov
xor
inc
fstpl
scas
add
call
jmp
xor
gs
pop
fnstcw
xor
inc
mov
push
pop
push
in
or
push
iret
jnp
mov
mov
push
lods
cmp
push
addr16
xor
int
add
add
scas
jns
dec
stc
bnd
roll
int3
add
push
ret
les
add
or
cmc
sarl
dec
inc
inc
push
int3
cmp
out
adc
jbe
std
rclb
xchg
daa
add
mov
fimuls
push
add
orb
cmpl
add
jno
stos
mov
mov
add
dec
shrl
aad
insb
pop
adcl
and
insb
insb
add
sub
push
not
xchg
gs
sbb
pcmpeqb
mov
push
inc
cs
imul
pop
sbb
repnz
es
dec
or
repnz
xor
pop
loopne
push
mov
shr
repz
and
or
jns
lods
add
das
pushf
cmp
and
add
mov
test
or
add
jle
sbb
and
mov
or
imul
add
fisubs
aam
fisubs
lods
out
filds
out
xor
push
jb
inc
adc
rorl
lds
ret
gs
and
add
dec
pushf
bound
lret
fstl
cld
mov
jecxz
jecxz
inc
push
sbb
add
pop
jb
or
inc
xchg
or
mov
andl
out
jne
push
push
pop
sub
data16
aam
push
add
sbb
inc
mov
jle
sahf
and
pop
cltd
stos
adc
fwait
or
jecxz
movsl
or
add
scas
add
jae
pushf
jmp
dec
lret
sahf
inc
lret
cmp
xchg
test
stos
nop
jb
cmp
cmp
mov
stc
adc
cmpsl
inc
fs
arpl
inc
jbe
xor
xor
sub
sbb
arpl
jmp
dec
xchg
sbbb
nop
scas
inc
in
lret
push
cld
mov
jecxz
stos
jecxz
mov
xchg
fs
add
xchg
mov
clc
mov
add
and
push
lret
daa
mov
adc
xchg
jae
hlt
dec
ja
cmp
xchg
mov
ljmp
inc
fnstsw
jp
jbe
shl
aad
xchg
xor
jecxz
and
mov
add
mov
movsb
xchg
or
daa
jge
xlat
cmp
popa
stos
inc
inc
mov
xlat
in
xchg
inc
xchg
insl
mov
pop
popf
call
sbb
inc
loope
mov
ret
pushf
notl
add
fsubs
inc
mov
test
add
xchg
outsl
inc
xor
cltd
push
fbstp
aam
cli
adc
mov
cmpsl
add
lods
push
shrb
pop
sete
sarb
testb
inc
testl
inc
mov
or
add
shlb
add
enter
push
rcll
add
fs
push
in
in
jnp
lret
into
andb
push
test
fs
cmp
test
cld
add
xchg
mov
mov
xchg
mov
jo
add
out
stos
mov
add
pop
sbb
jno
adc
add
sbb
andl
xlat
repnz
dec
mov
cwtl
add
push
test
jecxz
push
push
insl
mov
sub
insl
call
ja
rorl
add
or
stos
and
ds
push
out
push
popa
pop
add
dec
fadd
push
xchg
sub
pop
clc
shrl
jl
sbb
scas
into
cmp
lods
clc
sub
imul
aas
fsubl
lahf
xchg
add
ret
pop
lahf
jge
pop
pop
add
pop
pop
pop
bound
in
add
test
dec
subl
add
mov
add
lahf
outsb
xchg
add
loope
push
cmp
sbb
pop
adc
cmc
xor
mov
add
xor
cmp
cmp
xchg
in
xlat
hlt
dec
add
arpl
xchg
adc
push
lret
imul
out
push
test
out
bound
add
int
add
push
or
lea
add
add
fnstsw
icebp
add
sub
lret
add
mov
xchg
jo
add
in
sbb
sub
mov
push
dec
pop
jg
add
add
add
in
and
mov
push
popa
iret
mov
mov
in
movsl
sub
lock
aas
add
add
push
pop
xor
add
iret
jo
ljmp
or
jne
hlt
xor
icebp
jmp
add
sbb
mov
not
sbb
pop
xchg
xchg
push
enter
mov
out
push
add
sbb
add
inc
in
aaa
inc
push
fistps
or
add
inc
fwait
lret
sar
movl
dec
jb
and
xchg
enter
adcb
adc
lods
add
lods
lldt
jl
lods
mov
adc
xchg
push
bnd
cwtl
add
mov
lret
push
fs
stos
inc
mov
add
imul
add
pop
aam
data16
add
in
in
test
sub
bound
xor
add
push
outsb
or
and
into
mov
es
mov
mov
or
mov
fadds
add
and
push
and
scas
jl
aam
aad
dec
cmp
testl
pop
push
ja
hlt
and
add
or
js
cs
add
cmp
adc
ljmp
add
in
mov
hlt
jmp
mov
pusha
dec
xchg
enter
mov
pop
add
xor
ja
into
lahf
clc
adc
adc
data16
es
movsb
fistpll
xor
int3
xchg
mov
mov
sti
es
ficompl
fidivs
jge
in
dec
xchg
xchg
push
pop
push
jne
sub
into
in
add
mov
add
push
fisubs
fldenv
in
xor
out
ss
add
shlb
add
fcoms
add
iret
lock
push
cli
dec
add
add
insl
int
mov
add
aad
mov
gs
addr16
add
adc
jmp
add
mov
sub
add
fildl
jg
push
or
test
loop
add
mov
adc
mov
enter
jo
hlt
cmp
xlat
and
add
in
outsb
aaa
outsl
jmp
jnp
lods
mov
inc
jnp
pop
push
mov
dec
adc
push
add
dec
push
dec
cltd
add
push
lahf
ret
shlb
push
xchg
lods
test
lahf
add
inc
fiaddl
stos
das
push
inc
fldenv
mov
insb
clc
outsl
mov
xor
add
mov
aas
add
fsubs
add
add
dec
xchg
arpl
les
and
dec
loopne
xor
je
stc
nop
sbb
test
and
aaa
inc
mov
popl
enter
pop
add
daa
jmp
or
lcall
sbb
add
insb
mov
jb
adc
dec
ret
xor
jmp
shll
cmpsl
outsb
shrb
fiadds
ss
and
mov
hlt
add
aaa
cwtl
mov
push
add
cmp
popa
xchg
shrd
cwtl
add
pushf
mov
stos
pop
ljmp
aas
iret
arpl
fdivrs
roll
clc
xchg
sbb
mov
add
xchg
mov
add
mov
bound
add
mov
sbb
add
fildll
fistpl
fs
dec
std
add
movsl
test
add
in
or
inc
stc
lahf
or
je
add
movsl
popf
xchg
add
lret
imul
cmpsl
push
add
mov
arpl
jmp
push
xchg
enter
jne
sbb
mov
ss
mov
add
mov
jmp
add
mov
movsl
add
mov
arpl
out
add
xchg
cmc
mov
test
xor
jno
inc
xor
inc
pop
imul
mov
scas
faddl
or
in
sub
adc
xchg
xchg
adc
rorl
arpl
xchg
add
and
out
add
inc
mov
dec
fildll
mov
xor
sub
sub
shrl
xchg
mov
add
mov
or
adc
daa
scas
push
jmp
push
rcrb
aas
lret
adc
popa
cmc
mov
bound
int3
add
push
or
popa
add
test
xor
sub
mov
loopne
repz
add
mov
popf
les
add
add
enter
aam
cmp
iret
lret
dec
jne
cmp
sub
lock
pop
xor
test
sbb
add
in
inc
add
mov
mov
and
rorb
in
xor
icebp
ret
fisubs
iret
enter
or
xchg
mov
mov
mov
imull
add
data16
fs
sbb
stos
arpl
mov
loop
dec
js
xchg
aaa
cmp
iret
inc
add
lret
cmp
les
dec
xchg
add
ret
jge
cmp
andl
xlat
pop
popf
divl
in
add
xor
push
lcall
dec
aad
addl
xchg
js
xchg
decl
cmp
fstpl
cmpsb
sahf
inc
lret
xor
fadds
xchg
cmpsl
mov
inc
pop
add
std
jae
add
sub
dec
js
test
outsb
mov
leave
xchg
sbb
int
mov
add
outsl
mov
add
and
sbb
and
sub
sub
adc
dec
mov
out
xchg
cmpsl
jnp
ds
cmp
int3
mov
jl
add
add
aaa
xor
mov
sbb
stc
inc
adc
ret
shrl
jns
sbb
mov
mov
add
int3
and
mov
jle
or
ret
sarb
icebp
mov
enter
loope
lea
aad
xchg
xor
enter
xor
das
lods
pop
push
scas
add
add
push
hlt
ljmp
add
push
movb
mov
dec
cwtl
dec
scas
mov
scas
enter
xchg
add
sahf
rolb
ljmp
jnp
push
ja
scas
aam
mov
dec
add
test
divb
dec
fisttps
jg
inc
lret
daa
add
push
in
loop
out
out
and
les
cmpsb
stos
outsb
imul
push
loopne
cli
popf
dec
lds
dec
xor
jnp
xor
pop
jg
pop
or
xchg
fdivl
xchg
push
xchg
mov
movsb
loopne
mov
icebp
insb
stos
push
call
dec
int3
push
jg
lods
leave
lret
lods
ficompl
add
rcl
mov
rorb
lret
leave
xchg
dec
dec
sub
or
cmp
mov
mov
subl
mov
add
and
jmp
mov
xchg
or
sbb
hlt
or
pop
push
lret
adc
bound
cld
mov
pop
add
into
mov
jne
lcall
cmp
or
jle
das
jne
adc
xlat
add
aas
xchg
lods
inc
mov
add
add
inc
in
lret
dec
cmp
lds
test
imul
lret
rorl
fistl
test
mov
cmp
ljmp
push
mov
mov
pop
das
test
in
lret
pop
jl
iret
clc
add
ret
push
loopne
fcompl
call
lcall
cmp
xchg
add
add
aas
iret
adc
repnz
into
out
cmp
sbb
pop
inc
in
cmp
adc
bound
popf
add
loope
and
fnsave
ret
add
and
int
cld
add
jo
stc
pop
jp
enter
imul
jo
xchg
inc
add
sub
mov
or
mov
mov
mov
loope
jo
out
mov
xor
enter
add
xorl
mov
dec
mov
xor
sar
rolb
loope
and
lcall
arpl
cmp
fsubrp
fdivrp
mov
mov
sahf
push
imul
add
iret
icebp
repnz
jle
push
jno
pop
mov
nop
mull
jb
and
les
fs
movsb
cmp
pop
popf
testb
std
dec
enter
out
popa
cmp
cld
cltd
fsubrs
cmp
adc
add
xlat
add
lret
cwtl
das
sahf
cmpsb
aas
sti
xchg
imul
xchg
mov
shlb
out
mov
jno
inc
hlt
push
or
mov
test
jne
lods
in
sarb
pushf
mov
shlb
stos
ss
sub
das
cltd
pop
stos
fidivl
inc
xor
or
xor
test
xor
pop
or
outsl
dec
jo
movsb
arpl
dec
lret
bnd
cld
xchg
aam
add
sub
sahf
add
sub
cs
jns
and
add
ljmp
or
decl
jnp
add
push
dec
pop
add
jae
jle
inc
cmp
dec
loope
jl
aas
out
add
add
inc
jnp
mov
scas
pushl
cmp
icebp
leave
lea
mov
icebp
mov
arpl
jae
movsl
jmp
cmp
xchg
lods
mov
pop
dec
xor
jg
into
jecxz
xchg
add
loop
add
repz
out
pushf
sub
inc
orb
dec
jae
or
enter
int
lods
xchg
cltd
call
out
mov
lods
test
test
fiaddl
sub
xchg
es
addl
mov
add
lcall
dec
movb
mov
mov
ljmp
clc
inc
xlat
sub
ret
jb
int
pop
sub
lahf
sub
mov
data16
jmp
movsl
and
push
mov
prefetchw
cmp
jno
push
sub
sahf
pusha
mov
sbbb
cld
and
push
in
adc
in
sbb
fwait
subl
dec
leave
lret
loopne
outsl
sbb
xchg
out
mov
ds
dec
mov
sarl
mov
push
or
fxtract
shlb
enter
out
fiadds
sub
js
mov
and
mov
imul
inc
outsb
mov
je
test
or
jno
jo
rorb
test
pop
int3
xchg
push
iret
mov
pop
loope
pop
add
iretw
js
jp
xor
xchg
push
je
les
add
sbb
or
cltd
lock
and
rcrl
sbb
ljmp
and
or
mov
xchg
call
push
jp
outsl
ror
jb
mov
push
inc
dec
add
out
daa
hlt
push
xchg
or
sub
push
inc
mov
and
ret
xor
jbe
and
pop
loop
push
gs
lcall
and
mov
and
add
fmulp
add
add
push
dec
xor
push
mov
pop
daa
dec
in
cld
test
mov
dec
loop
and
sbb
xchg
pop
dec
mov
add
dec
scas
cmc
add
imulb
stos
or
add
out
xchg
movsb
add
loopne
add
mov
fstl
push
mov
pop
xchg
or
pop
popa
add
push
push
gs
leave
movl
addr16
adc
push
push
fcmove
popl
shrb
lcall
pop
clc
aam
jecxz
push
imul
outsl
and
or
or
mov
add
add
xchg
xorl
lahf
cmpsl
add
mov
filds
mov
mov
ljmp
call
mov
call
sbb
mov
rorl
add
mov
add
xor
add
inc
add
push
imul
xchg
jbe
dec
add
lret
pusha
mov
add
mov
add
mov
xchg
cmp
xchg
pop
add
cmp
add
dec
orb
add
push
dec
and
add
mov
ljmp
add
in
cli
add
add
pop
add
xor
add
add
ud1
xor
cld
xor
ficoms
jg
mov
outsl
fidivrs
jg
test
sub
jns
cwtl
push
adc
add
sbb
mov
sbb
into
jp
or
dec
testl
subl
xor
sub
add
mov
das
call
adc
cmpsb
add
iret
xor
mov
lret
test
dec
add
dec
ret
add
inc
mov
mov
adc
out
add
pop
fisubrl
sub
daa
addr16
loop
inc
insb
in
imul
movl
call
cwtl
int3
or
or
cmp
cwtl
dec
lods
add
rcr
sub
repz
pop
add
xchg
add
push
sub
test
xor
xor
lock
jns
push
lock
push
xor
add
sbb
les
insl
xlat
fcompp
stc
in
add
xor
push
jg
and
cmpl
sbb
and
add
std
mov
mov
inc
das
dec
or
enter
sub
mov
test
inc
mov
jge
mov
clc
scas
scas
lock
add
js
xchg
hlt
clc
xchg
popl
lea
nop
rcrb
xchg
inc
sub
les
pop
into
sub
jbe
jp
cmc
js
xchg
jne
and
lea
mov
loope
mov
sbb
out
test
divl
enter
pop
sar
dec
inc
mov
dec
xchg
add
orb
dec
mov
xchg
pop
hlt
shr
faddl
push
pop
cli
arpl
pop
dec
sbb
inc
testb
push
out
push
stos
dec
add
sub
dec
cld
es
add
add
stos
pop
cmp
lea
ds
jb
repnz
sub
sub
adc
add
and
scas
mov
les
push
flds
int3
jb
pop
hlt
cld
cli
rcll
cmpsl
fdivrs
and
pop
or
mov
add
cmpsb
adc
test
add
lods
movsb
movsl
scas
fs
ljmp
add
daa
xor
adc
xchg
loopne
mov
xor
inc
jmp
addr16
shll
cmp
lret
shlb
int
sub
mov
push
repnz
add
cmc
push
add
cmp
cmp
ja
clc
lret
push
jo
mov
xchg
dec
xchg
aas
test
inc
loopne
adc
ljmp
jmp
sub
jp
cmpb
fdiv
mov
stos
movl
stc
xor
dec
bound
dec
dec
adc
pop
push
mov
mov
and
xchg
outsl
shll
mov
inc
test
xlat
cld
and
cmc
mov
jl
movsb
fbld
add
jg
bound
cmp
add
js
jae
int
push
mov
push
jle
je
xor
rcrl
repnz
pusha
or
mov
mov
mov
in
add
mov
mov
sub
addb
ret
cmp
mov
packsswb
cmp
les
or
stos
jg
add
subl
cmpsb
mov
mov
mov
dec
popa
int
add
sti
mov
inc
push
stc
lds
rolb
outsb
sub
cmpsl
dec
pushf
jnp
pop
inc
arpl
adc
add
loope
xchg
in
insb
lods
adc
mov
add
pop
add
mov
xor
scas
adc
les
add
je
add
imul
mov
ret
lock
addr16
sub
or
scas
sbb
inc
pop
push
movsl
inc
cmp
out
inc
xlat
sub
iret
push
mov
push
add
and
or
ficompl
movsb
loope
pop
xchg
stos
sarl
add
stos
pop
fs
imul
sbb
leave
sub
dec
mov
stos
mov
rcr
xor
outsl
and
mov
outsl
loop
sbb
ljmp
pop
push
jge
flds
mov
add
mov
cmpsl
jne
fidivrl
add
cwtl
cs
insb
shrb
mov
jl
and
mov
iret
mov
jmp
in
jns
stos
jp
shrl
jle
sub
mov
cmp
add
repz
movsl
pop
les
jbe
enter
iret
aam
data16
sbb
inc
pop
mov
stc
call
outsl
and
prefetch
jp
outsl
movsb
daa
test
lret
jmp
jbe
sub
dec
imul
dec
or
das
orl
pop
test
fstpt
sbb
dec
rolb
mov
out
adc
in
fwait
loopne
mov
jmp
lret
pop
lea
adc
in
add
mov
arpl
dec
inc
in
cmpb
sub
adc
inc
jl
sub
mov
les
jbe
mov
sub
data16
mov
or
shll
notb
aad
lcall
add
push
cld
cmp
mov
sub
arpl
imul
arpl
add
mov
into
jg
or
int3
mov
inc
cmpsl
out
jb
pop
aaa
jae
cltd
pop
cmp
pop
repz
push
aaa
add
add
arpl
inc
add
es
add
jnp
ljmp
dec
aaa
inc
movsb
lds
loope
neg
icebp
andb
shlb
js
paddw
jecxz
add
push
daa
rorb
add
xchg
pop
add
cli
cmp
imulb
das
ljmp
pmullw
int3
adcl
dec
xor
fs
outsb
push
add
inc
cmp
add
into
imul
lods
dec
add
out
out
stos
and
mov
std
andl
xor
mov
jecxz
jne
call
or
sahf
ret
ret
lret
das
fisttpll
lret
xchg
repz
aas
insl
mov
mov
nop
mov
daa
xchg
sub
inc
loop
mov
mov
popa
cmp
in
pop
aam
adc
jbe
sub
stos
icebp
sti
in
popa
push
sbb
xor
add
add
stos
sbb
sub
adc
mov
push
and
adc
mov
mov
lods
cmp
xor
adc
daa
and
jecxz
cmpsl
push
loop
pop
outsl
or
insl
aas
fsubrl
sbb
ret
int3
inc
push
add
and
outsl
add
jmp
hlt
sbb
scas
mov
mov
dec
sahf
cmp
pop
in
mov
add
int3
dec
int
leave
ss
mov
sbb
push
jmp
test
in
push
out
mov
mov
aas
cmpsl
mov
aas
jb
movsl
cltd
cmp
dec
adc
aad
enter
je
clc
fiaddl
inc
fists
xchg
push
jmp
clc
push
and
loope
jbe
add
ss
and
lcall
les
adc
xchg
js
pop
fdivs
inc
lar
jge
ljmp
add
or
cmp
pop
and
stos
int3
cli
fs
enter
jns
lea
sub
lcall
and
aaa
mov
or
xorb
push
loop
sti
push
lahf
sbb
das
roll
push
mov
rep
mov
sti
pop
cmpsl
add
mov
sbb
jnp
in
push
rcrl
or
dec
add
xor
sahf
mov
mov
or
cmp
gs
push
cld
std
movsb
xor
pop
add
mov
repnz
push
mov
add
cmp
and
cmp
adc
mov
mov
loopne
push
pop
sbb
add
dec
ds
xor
rcl
roll
add
xchg
fisubl
repz
adc
xor
add
int3
add
sbb
ret
sbb
push
and
xor
stc
pop
dec
fdiv
push
in
add
out
aas
pop
cmp
push
sub
push
and
jmp
ds
and
jl
ja
lret
pop
or
push
hlt
sub
or
in
lahf
mov
imul
push
fdivs
inc
jp
jmp
dec
fnstsw
out
push
dec
call
mov
xor
pop
arpl
xor
jge
insl
das
jecxz
nop
sarb
repz
outsl
lahf
pop
inc
or
out
push
push
cmpl
imulb
xchg
sbb
pop
enter
mov
dec
lock
add
lods
inc
outsl
repnz
pop
pop
mov
push
sahf
cld
add
xchg
and
jns
movsb
fldenv
test
add
outsb
in
push
mov
mov
jmp
mov
inc
rclb
sub
push
lods
push
inc
enter
add
testl
outsb
out
and
movsl
popa
imull
sub
popl
jmp
and
mov
stos
xor
adc
adc
jns
push
int
mov
push
sub
xlat
out
push
inc
sub
negl
pop
jl
jne
xchg
cmp
xor
movsl
ljmp
bound
lods
rcr
hlt
xlat
xchg
test
jecxz
sub
lret
std
push
or
clc
mov
mov
jmp
in
xchg
in
xchg
sub
dec
arpl
or
jo
cli
movsb
jmp
cmp
stos
ja
mov
imul
inc
add
stos
adc
lahf
push
or
xchg
sti
nop
dec
not
add
pop
mulb
mov
mov
test
cli
add
add
jae
jbe
or
stos
inc
insb
sub
mov
aaa
jmp
into
sub
push
pop
add
cmovle
aad
sbb
add
or
push
incl
add
in
imul
call
std
sub
in
loop
and
jp
and
mov
inc
sbb
fcomps
movsb
sarl
pop
push
mov
mov
pop
xchg
insb
aaa
lods
loop
inc
mov
or
jb
mov
push
push
jge
pushf
fs
dec
lds
loopne
fs
jae
xor
mov
lcall
adc
sbb
mov
dec
push
cs
push
jb
push
mov
leave
add
sbb
mov
mov
pop
or
push
addr16
jb
push
aam
test
outsl
popl
dec
in
mov
mov
and
cltd
sub
cmc
inc
out
mov
mov
push
or
inc
out
xchg
cmp
cmp
cltd
add
das
or
in
add
dec
repnz
jae
adc
push
mov
jecxz
push
enter
pop
add
out
xchg
pop
add
or
mov
mov
movb
in
sbb
add
scas
cmp
ret
lret
insb
je
mov
add
mov
lods
dec
insl
nop
mov
mov
cld
imul
daa
popf
mov
mov
dec
mov
sub
out
aas
dec
in
mov
mov
lods
or
scas
iret
cmpsl
adc
mov
mov
aaa
mov
add
mov
push
out
daa
leave
inc
ret
push
push
mov
orb
fs
out
mov
add
insl
adc
lds
xchg
aaa
stos
ss
add
lret
mov
fwait
mov
mov
dec
and
insb
add
outsl
sub
add
aas
add
jmp
add
sti
mov
mov
xor
icebp
or
enter
mov
add
mov
lds
sti
sbb
pop
jnp
jp
add
bnd
cwtl
add
add
cmpb
outsl
inc
sarb
mov
add
repz
pop
daa
ret
andb
sahf
cmpsl
inc
mov
stc
add
xchg
lock
xchg
rorl
push
push
cmp
mov
mov
decl
adc
pop
add
arpl
pop
rdtsc
test
add
push
push
fistpl
mov
imul
imul
pop
and
add
arpl
push
jge
pop
jno
add
and
push
add
das
rclb
fldenv
xchg
add
lahf
lods
xchg
mov
xor
and
mov
add
jae
loop
add
add
sbb
fs
loope
pusha
push
je
outsb
add
imul
rolb
lock
add
dec
loopne
rcll
inc
lret
mov
shll
add
aad
jmp
add
call
out
and
push
aas
sub
arpl
cld
lret
add
cld
mov
mov
xor
add
aad
ret
add
loop
cvtps2pi
loopne
add
pop
push
loopne
les
lahf
incl
mov
lret
and
ret
jne
int3
loopne
xor
inc
sub
int3
or
lock
imul
fwait
mov
mov
pop
add
mov
out
mov
cli
stos
xchg
mov
movsl
mov
add
es
add
jne
mov
xchg
cli
test
add
lea
pop
lret
mov
mov
mov
mov
pop
add
cmp
sub
xor
mov
xorb
add
xor
rorl
mov
lds
pop
popa
add
mov
xchg
pop
dec
sub
dec
fst
sub
out
lods
cmp
add
mov
mov
jbe
frstor
and
pusha
or
iret
cmp
outsl
add
gs
push
inc
repz
int
sub
add
jecxz
add
lret
stos
add
add
adc
mov
jae
mov
dec
int3
fcomps
or
inc
pop
ja
gs
ret
xlat
dec
cmpsb
jns
xor
push
es
mov
mov
imul
addr16
mov
in
mov
xchg
or
jg
mov
jne
iret
jbe
test
pop
clc
test
push
lret
aad
xrelease
test
add
sub
stos
xchg
outsl
pop
scas
das
test
stos
mov
jge
add
add
aad
stc
mov
mov
add
cmp
leave
mov
add
mov
pop
mov
jle
int3
sbb
insb
adc
shlb
lods
imul
arpl
in
inc
aas
add
mov
add
mov
or
addb
sub
or
add
sub
or
sbb
push
sub
adc
scas
out
data16
jecxz
out
orl
xchg
cmp
paddd
xor
add
sarl
lds
fwait
xchg
dec
mov
scas
push
pushf
stos
into
jl
lret
add
test
lods
mov
mov
stos
loopne
shl
and
or
mov
cmp
enter
mov
add
sbb
add
test
ja
mov
sbb
icebp
dec
sub
xchg
ljmp
and
xchg
clc
mov
int
xor
inc
repz
mov
mov
push
sbb
push
pop
mov
and
pop
sbb
mov
jp
mov
inc
adc
inc
mov
pop
push
or
jno
cmc
sbb
sbb
lea
fists
dec
add
adc
lret
test
push
aad
add
movsb
push
mov
lahf
add
add
subb
jae
xor
loope
or
and
iret
xchg
ja
into
int3
hlt
add
sahf
cwtl
movsl
das
dec
popf
add
addr16
addl
jmp
adc
das
imull
mov
fcompl
mov
inc
jg
pusha
loopne
add
and
imull
out
lret
int
xor
xchg
inc
sub
push
stc
xchg
ret
movsb
xlat
xlat
scas
ret
jp
push
iret
outsl
out
stos
outsl
add
xchg
jno
adc
add
sub
cmpsb
fwait
cmovle
add
aas
sbb
leave
in
add
add
xor
cmp
push
push
flds
mov
lret
pop
daa
pop
cmp
stos
push
xchg
insb
or
decl
mov
sbb
sar
or
add
jg
shrb
mov
or
hlt
push
sub
out
out
mov
bound
int
int3
cmc
dec
sbb
into
leave
adc
mov
jae
dec
test
dec
or
add
frndint
adc
push
sbb
sub
es
mov
jnp
mov
movsl
movsb
les
lret
sub
neg
stos
add
mull
aad
rcl
or
or
ffreep
popf
add
xchg
shll
push
leave
cmc
mov
jno
repz
xor
dec
sub
inc
out
subb
pop
repz
or
dec
inc
popa
xlat
mov
mov
inc
mov
sub
mov
inc
into
push
leave
inc
bound
cmpsb
mov
inc
loop
add
add
cmp
adc
mov
push
lret
imul
roll
call
rclb
or
mov
or
jae
pushf
stc
mov
inc
fistps
xlat
xchg
add
push
push
or
xchg
out
jmp
inc
xchg
or
fs
notl
xchg
xchg
xchg
stos
lahf
dec
popf
mov
mov
enter
dec
add
sahf
add
mov
and
xchg
jo
dec
ss
cmp
and
daa
sbb
pop
push
push
add
push
xlat
mov
mov
shrb
sti
mov
mov
add
lock
fmull
shr
mov
push
insl
sbb
les
repz
add
sub
in
sub
mov
call
pop
and
loopne
push
lods
adc
xchg
or
movsb
mov
add
call
movsb
sbb
pop
adc
jg
add
or
dec
lods
dec
jle
sbb
in
pusha
movb
cmp
test
lods
jge
addl
mov
jns
pop
pop
loope
inc
mov
fyl2x
sbb
inc
xchg
icebp
dec
lock
in
test
lea
jecxz
lods
add
imull
mov
stos
out
test
dec
lret
insb
jle
inc
rol
mov
lret
lret
sarl
das
mov
push
mov
add
leave
or
arpl
test
es
ret
mul
jnp
cs
arpl
fildll
jne
xor
daa
push
lcall
shl
sub
das
and
pop
jns
bound
xor
xchg
xchg
sub
cmp
aas
dec
dec
gs
cmp
mov
add
push
pop
dec
test
mov
or
shlb
jne
cld
fwait
mov
sbb
sub
dec
and
pop
stos
inc
add
inc
mov
inc
mov
out
push
fcmovnb
fnstenv
push
repz
add
add
scas
stos
shlb
out
outsb
adc
xchg
mov
out
gs
rorl
add
pop
in
es
stc
dec
add
inc
add
fistpl
sbb
mov
mov
inc
aad
je
xor
shlb
cmp
mov
or
mov
mov
xchg
fsubrp
ret
mov
jae
movsl
stos
cmp
cmp
fst
dec
or
je
data16
mov
aam
adc
pop
add
mov
stc
rcrb
xchg
sub
jg
test
popa
cmp
add
dec
testb
add
das
lds
mov
and
pop
rorl
xchg
xor
cld
shl
xchg
add
repz
jle
and
cmpsb
jnp
xor
decb
mov
jo
inc
push
rorl
inc
sbb
push
lock
out
or
out
or
add
push
push
add
test
sub
pop
pushf
xchg
movsb
inc
add
xchg
fbld
in
mov
lahf
stc
adc
daa
jne
lcall
add
jo
mov
and
bswap
dec
cld
lret
mov
add
or
popf
jecxz
lods
or
push
and
mov
jnp
push
jl
jle
mov
addr16
xchg
push
bound
cmc
pop
add
xor
test
aam
add
xchg
orb
repz
jae
lret
push
out
pop
mov
gs
jge
test
fists
and
cmc
jp
pop
add
and
jns
leave
or
inc
mov
rorb
call
jbe
xlat
jge
add
jbe
add
and
pop
sub
sub
push
push
dec
ud1
decl
jg
icebp
lahf
dec
into
sahf
dec
insl
ss
xor
js
mov
xchg
jno
push
lods
sarl
xchg
push
gs
out
xchg
pop
dec
shll
js
xlat
xchg
pop
icebp
and
or
pusha
pusha
and
jb
add
cmpsb
add
imul
cld
pop
or
and
mov
xor
addb
xchg
xor
out
fistpl
sbb
outsb
insb
loope
add
sbb
or
sbb
pop
jae
sub
mov
lret
stc
jae
popa
mov
inc
push
xchg
int3
adc
pop
rolb
add
in
xchg
out
add
loopne
in
sahf
sti
pop
push
pop
sub
add
and
ret
out
pop
into
fs
stos
jno
ss
fwait
outsl
bound
stc
add
xor
add
int
lcall
ja
je
je
repnz
inc
repz
push
out
xchg
add
mov
xchg
int3
inc
add
sarl
mov
mov
mov
fcmovbe
cmp
mov
outsl
xchg
mov
mov
mov
sub
popa
popf
decl
sub
jo
lret
add
adc
js
mov
mov
stc
inc
lret
imul
jge
inc
cmovns
jbe
scas
pslld
fdivr
orl
sbb
mov
inc
jg
add
das
and
add
sbb
fsubl
mov
fists
sbb
ja
add
dec
inc
sub
into
push
sub
mov
imul
push
popa
add
sahf
mov
mov
subl
callw
dec
flds
push
ficomps
loop
jg
mov
lret
or
fimull
sbb
into
pushf
movsl
add
add
dec
mov
inc
shrl
pop
mov
adc
imul
imul
add
push
add
call
test
ja
jp
jo
jmp
mov
pop
loopne
inc
xchg
lcall
jb
mov
add
jle
jnp
shlb
inc
push
sbb
dec
les
fcoms
lret
es
maskmovq
mull
xlat
addr16
jge
xor
mov
out
scas
jns
mov
jo
pop
jge
xor
pop
out
pop
insb
jp
sbb
popf
ljmp
popa
sub
pop
sub
or
lea
or
add
addr16
int
nop
xchg
jge
push
scas
insb
jne
leave
adc
mov
ss
das
mov
add
xor
inc
mov
add
adc
js
cli
mov
add
jns
orl
daa
das
roll
mov
inc
test
mov
roll
scas
sbb
std
out
xor
cmc
jp
jecxz
lea
mov
cmp
cmp
rol
jmp
dec
xchg
fucomp
popf
push
orl
xor
in
ljmp
fistpll
rorb
mov
fwait
enter
cmp
or
lcall
mov
jns
cmp
aad
iret
fcmovnb
stos
les
jp
push
movl
repnz
sub
or
jb
pop
and
neg
push
or
pop
push
shufps
repz
jno
daa
inc
cmpsb
sub
jle
xchg
sbb
inc
and
or
add
xchg
arpl
add
mov
pop
and
xor
jo
and
clc
push
add
lods
test
repz
xor
push
push
xor
mov
or
pop
mov
loopne
fwait
out
adc
cmp
sbb
and
add
nop
add
add
std
mov
xor
mov
and
add
nop
inc
clc
adc
push
adc
mov
jne
cmp
cmp
xchg
mov
add
outsb
add
ss
push
push
lret
xchg
xchg
flds
les
dec
and
adc
adc
pusha
or
fiaddl
xchg
sub
sub
out
xadd
dec
cmp
jg
sub
cmp
xchg
jl
mov
add
push
inc
or
inc
idivl
cmp
cmp
lret
adc
lea
cmpsl
outsl
call
mov
fcmovnbe
scas
add
lcall
cmp
movsb
mov
in
fldt
jmp
push
mov
fimuls
loopne
adc
mov
xchg
add
mov
fnstcw
dec
xor
rorl
jnp
fsubs
daa
cltd
mov
mov
ljmp
dec
adc
repz
pop
inc
xchg
xlat
dec
aad
ret
dec
movsb
add
dec
sti
repz
outsl
xlat
jecxz
sub
ss
dec
lcall
insb
xchg
mov
test
inc
daa
loop
in
add
mov
xor
add
dec
add
add
aas
scas
push
lret
test
leave
dec
mov
xchg
cmp
sub
add
test
xchg
push
test
jmp
adc
and
mov
inc
sbb
mov
mov
xor
adc
add
cmpsl
jmp
add
shlb
sbb
test
imul
jno
jbe
mov
fcmovu
or
add
or
verr
xchg
aad
add
push
repnz
push
shrl
imul
outsb
mov
add
call
add
adc
faddl
dec
sbb
dec
add
pushf
xor
xor
js
fmull
out
dec
inc
pushw
test
pop
int
add
in
lods
loop
add
in
cmp
add
loope
loope
and
das
cmp
mov
mov
lds
xchg
inc
lret
movsb
hlt
imul
lret
jbe
sub
pop
arpl
adc
cmp
pop
jp
fistpl
mov
repnz
add
ds
call
inc
rol
add
add
push
inc
rcrb
outsl
fistpll
ret
stos
mov
outsb
adc
xlat
movsl
and
data16
xchg
sub
sub
ja
add
mov
int
add
test
jb
test
out
je
int3
jnp
pop
add
stos
adc
xchg
ja
ds
cs
add
stos
xlat
xchg
cli
xchg
lcall
mov
xor
cmc
inc
ds
push
add
dec
mov
add
and
movsb
ds
test
add
add
fidivrs
je
pushf
add
in
add
add
loope
and
insl
movsl
int
sub
jle
mov
pop
test
subl
pop
andl
xor
fcomps
add
mov
mov
pop
jbe
loop
insl
add
outsl
out
push
repnz
add
or
mov
es
lods
mov
aam
inc
stos
adc
add
dec
mov
inc
jle
add
sbb
add
inc
scas
jg
or
and
cld
shl
and
das
repz
stos
pop
test
inc
pusha
pop
pop
test
inc
movsl
add
fildl
sub
ljmp
les
into
mov
mov
loope
data16
xchg
push
push
stc
in
roll
clc
add
out
pusha
mov
test
xor
cwtl
nop
push
sub
test
stc
push
sbb
jb
daa
cmpsl
and
repnz
pushf
mov
mov
out
push
xorl
andb
cs
popl
mov
hlt
push
scas
int
popa
add
adc
pop
add
sub
pusha
imul
lods
pop
inc
mov
and
mov
xor
andl
dec
pop
or
fadds
aas
outsb
or
cltd
or
iret
rcrb
out
sub
jmp
mull
fs
push
mov
jbe
sub
cmp
nop
lahf
add
mov
sti
imul
and
add
jnp
pop
outsl
push
into
add
shr
pop
ds
cmc
sub
adc
in
cli
mov
ds
jl
pop
dec
pop
aad
mov
pop
add
add
mov
mov
dec
out
xchg
verr
popa
adc
sbb
add
jmp
push
loop
in
das
add
dec
add
jge
and
sbb
repnz
add
mov
nop
cmp
lods
hlt
addb
jo
fcomps
dec
add
repz
pop
das
add
adc
ljmp
dec
push
loope
arpl
cmc
xchg
pop
add
lock
mov
in
rorb
iret
push
xor
xorl
sahf
insl
pop
push
stos
mov
mov
lds
sub
ds
mov
add
lea
inc
push
push
push
pop
mov
mov
js
mov
test
add
jno
loope
and
cmc
jmp
sub
fbstp
adc
imul
dec
xlat
add
xchg
mov
mov
pop
arpl
pop
fcomip
mov
push
addr16
push
lret
outsl
dec
ja
addr16
or
stc
dec
icebp
and
icebp
sbb
add
jns
test
xor
lods
mov
sub
jae
orb
pop
aaa
mov
fstpl
sbb
cmc
push
notb
add
shrl
fnsave
loopne
adc
adc
sub
inc
sub
push
pop
cmc
iret
add
adc
aaa
push
lds
add
pop
xor
push
xchg
mov
clc
cmpsl
adc
and
ficomps
lock
sahf
xor
out
push
int
and
data16
push
aad
add
lahf
inc
ror
and
dec
imul
xor
test
pop
clc
and
add
into
nop
imul
scas
mov
or
xchg
cmp
out
or
in
cmp
call
out
push
fwait
or
out
push
test
iret
lea
repz
inc
mov
fstp
mov
imul
mov
das
xor
aas
jb
je
outsb
nop
jnp
ljmp
jl
int3
add
out
inc
and
loopne
pop
xor
add
mov
jne
mov
xor
cmp
pop
das
mov
aaa
cltd
pop
adc
sub
push
mov
push
call
jb
arpl
test
pusha
mov
sarb
push
int
xchg
enter
cmc
ja
fdivrs
in
jmp
cmp
aad
sub
xlat
bndldx
mov
xchg
inc
dec
sub
sbb
mov
mov
cli
mov
lods
add
aaa
add
mov
out
leave
imul
arpl
mov
lock
or
sbb
ja
lds
mov
or
fadds
fsubrl
mov
or
xor
movsb
mov
add
aaa
adc
xchg
jle
xchg
dec
xchg
call
sub
scas
adc
cmp
rcl
std
cmp
ret
add
push
cli
mov
enter
ret
in
in
push
les
mov
adc
adc
outsl
pushf
push
mov
push
xchg
add
rorl
mov
jl
mov
cld
xchg
xchg
out
dec
pop
dec
mov
dec
repz
movsb
repz
push
lods
test
aaa
outsl
sbb
push
add
fidivrs
ficoms
jno
insl
sub
xchg
int3
daa
dec
jbe
mov
cmp
pop
xor
sbb
push
pop
lock
pop
dec
test
jne
enter
jl
lcall
xchg
add
sbb
pusha
in
xchg
leave
fucomip
icebp
lods
adc
addr16
jmpw
in
mov
xorb
or
imul
fimuls
xor
aas
add
mov
lret
mov
jae
imul
fcoml
loope
pop
jmp
dec
dec
popf
or
fsubl
cwtl
mov
addr16
insl
mov
jns
jo
mov
je
xor
outsl
outsl
xor
push
test
insb
cmp
cmp
lret
xor
mov
jne
add
add
cmp
xchg
cltd
pop
outsl
mov
jge
pop
add
out
inc
outsl
outsb
mov
and
cmpsb
mov
push
cmpxchg
aaa
adc
ljmp
jmp
sbb
data16
pop
popa
das
adc
or
fsubl
or
pop
xchg
sbb
jnp
sbb
ljmp
popl
and
sub
movsl
outsl
mov
es
sbb
sbb
test
gs
jbe
gs
out
sbb
jmp
es
rorb
xlat
mov
jl
out
inc
and
int3
add
ljmp
repnz
outsl
lds
lret
push
jge
pop
shrb
in
ret
mov
xor
das
mov
aad
mov
push
addr16
out
daa
mov
xchg
mov
adc
mov
inc
ss
inc
pop
push
pushf
sbb
and
lcall
jmp
xchg
adc
inc
xor
adc
add
push
sbb
adc
mov
push
xchg
dec
sarl
mov
or
fisttps
inc
mov
lret
push
mull
test
inc
out
adc
xlat
mov
xchg
jecxz
xchg
mov
sti
fwait
push
in
stos
jl
push
adc
movl
adc
dec
dec
sbbb
inc
dec
lods
mov
cli
enter
xchg
movl
aas
inc
push
cmp
xchg
xlat
cmpsb
popf
je
xchg
repz
movsl
jecxz
xchg
repnz
xor
stos
pop
add
aaa
lcall
int3
popl
inc
pop
add
test
mov
mov
pop
mov
xchg
outsl
imul
xchg
cmc
pop
mov
sub
adc
or
test
lret
cmovb
inc
int
mov
js
push
add
aam
sub
push
loope
add
mov
cs
lods
shrl
add
add
mov
mov
add
inc
add
jnp
dec
or
pop
dec
xchg
movl
pop
cwtl
loopne
mov
jle
jnp
pop
mov
add
and
pop
cmp
lods
inc
cmp
leave
add
mov
js
inc
mov
inc
mov
add
inc
mov
add
imul
adc
xlat
add
mov
add
movsl
mov
add
xor
dec
add
pop
sbb
out
xor
add
pop
xor
cwtl
add
das
pop
lcall
sbb
and
sub
jp
rolb
push
add
cmp
insb
int
aaa
mov
stc
add
jle
or
imul
data16
std
add
mov
xchg
and
add
lods
adc
dec
ret
rolb
add
adc
lret
movnti
aam
pop
das
sbb
insb
jnp
mov
in
outsl
jno
cmc
scas
aad
sub
cwtl
push
imul
lahf
push
mov
loopne
add
iret
insb
xor
js
jmp
dec
out
lcall
jae
xchg
leave
add
push
cmpsb
add
sbb
imulb
sahf
add
imul
ljmp
test
leave
jmp
adc
push
or
cmc
mov
mov
mov
mov
add
mov
mov
rol
cld
mov
ret
add
add
add
or
mov
inc
insb
push
enter
inc
int3
iret
add
dec
jle
or
dec
jnp
sbb
mov
add
loope
fmuls
push
xchg
cltd
push
movsb
add
add
jl
xchg
movl
add
into
xor
cli
lret
iret
or
or
adc
fmull
push
xor
mov
ljmp
xchg
push
mov
adc
jmp
push
push
outsl
lock
ffree
add
push
je
test
dec
mov
push
inc
lcall
mov
xchg
sahf
pop
test
and
sub
jmp
stos
and
push
insb
fwait
add
xchg
lret
ds
or
mov
fdivl
jno
sbb
addl
fs
and
xchg
sar
mov
push
int3
mov
add
or
sub
bound
push
pop
cmpsb
jne
rol
or
je
std
lock
icebp
cmpl
aas
fisubs
dec
mov
arpl
rorl
pop
and
stos
sbb
sub
ljmp
and
sbb
popa
mov
inc
cltd
add
sti
add
push
int3
xchg
add
mov
pop
xchg
or
mov
inc
push
mov
insl
and
push
inc
pop
push
adc
push
das
cltd
add
jecxz
pusha
jbe
in
inc
or
mov
mov
dec
enter
mov
or
push
add
test
add
cmp
or
bound
and
mov
and
scas
inc
rorl
loopne
pop
shlb
sti
add
xchg
add
addb
movsl
sbb
pop
add
int3
sub
sub
sub
test
test
outsl
popa
dec
popa
enter
add
jae
dec
cmp
imul
scas
add
add
repnz
sub
add
add
das
push
pop
or
mov
xor
push
mov
add
dec
add
lsl
jge
and
add
pop
xchg
loope
pop
fsubr
jae
loop
leave
xchg
out
mov
mov
inc
pop
subl
add
js
inc
js
push
aam
sub
mov
add
lds
pusha
mov
or
aad
cmpsb
jmp
pop
in
ljmp
and
mov
lods
scas
mov
cmpsl
ret
sbb
xchg
mov
pop
dec
es
lock
mov
jle
ret
xchg
mov
xor
pop
dec
or
add
sub
test
lret
fs
mov
pop
test
outsb
and
incb
mov
or
or
or
xchg
cs
out
pop
test
loope
outsb
adc
jecxz
jecxz
push
jecxz
shr
fs
fimuls
sub
cwtl
mov
dec
mov
fucomip
xlat
jae
icebp
push
push
out
inc
scas
add
adc
sahf
stc
dec
repz
mov
sub
int3
lea
in
das
call
add
js
out
les
js
sub
xor
mov
rol
into
xchg
inc
or
int3
and
call
mov
add
int3
insb
cmpsl
xor
pop
outsl
add
aad
inc
mov
push
push
add
mov
sub
sbb
xlat
push
mov
pushl
add
out
mov
mov
test
inc
inc
mov
mov
xor
vpmacssdql
xchg
add
imul
popf
out
loope
cmp
add
and
pop
scas
xchg
sub
adc
rorb
inc
lahf
mov
mov
out
dec
insl
fistpll
loope
or
mov
adc
movsb
pop
rcl
add
lods
dec
xchg
int3
stos
sub
add
dec
mov
cmpsl
add
shl
out
pop
mov
mov
outsb
cmc
or
jae
add
addl
ficompl
or
scas
cmpsl
mov
ret
jo
or
mov
cld
and
insl
repz
add
mov
outsl
mov
inc
dec
bswap
add
daa
iret
mov
aad
inc
mov
mov
test
jb
mov
lds
mov
lcall
loopne
leave
outsl
mov
out
lods
sti
je
notl
pop
mov
pop
js
or
sti
fbld
lods
decb
dec
int3
lods
pop
lods
shrb
sbb
jnp
jo
and
mov
popa
jmp
push
add
pop
mov
cs
xor
xor
out
push
maskmovq
testl
sub
pop
xchg
pop
inc
int3
inc
movl
cli
inc
mov
in
stos
imul
cmpsb
jb
movsb
add
mov
xchg
ja
jge
add
mov
dec
jae
lret
stos
lock
repz
push
or
mov
add
and
loopne
in
fwait
sti
add
lahf
std
xchg
add
popa
jle
add
inc
push
cwtl
cmp
fs
adc
mov
enter
push
dec
or
push
in
push
mov
pop
ja,pt
shlb
out
mov
out
pop
test
sub
callw
adc
push
subb
or
popf
jo
shlb
addb
int3
inc
fadd
add
adc
pop
xor
das
xchg
insl
in
sub
mov
jecxz
push
add
dec
adc
add
lcall
sub
xchg
add
mov
out
insl
lock
jecxz
cmp
std
or
pop
push
arpl
mov
add
adc
jb
adc
in
shl
xchg
insb
push
add
addr16
push
jns
popf
xchg
jp
push
jns
cltd
mov
push
imul
mov
int3
cmp
jle
mov
adc
stos
aad
mov
push
mov
cmp
cli
adc
out
inc
imul
pop
loope
fcomip
jne
insb
dec
popa
insl
pushf
add
sti
imul
push
cld
cmp
mov
fidivl
adc
ja
aas
repnz
ja
cwtl
jb
and
jmp
scas
jge
or
add
push
inc
jbe
es
ss
pop
or
fwait
sbb
add
xor
add
mov
int
inc
les
add
stos
dec
iret
lods
dec
je
add
imul
add
inc
enter
mov
push
loop
push
lds
and
aas
sub
mov
movsb
into
add
repz
stos
iret
add
lret
push
sub
push
das
or
inc
xor
add
es
or
daa
ss
push
mov
sbb
insl
and
pusha
mov
sbb
pushf
adc
jle
jmp
sbb
add
cmpb
sti
pop
lahf
es
incl
cmc
xor
mov
jns
dec
push
iret
adc
inc
mov
je
fsubrp
mov
stos
in
mov
out
xor
data16
mov
xchg
mov
stos
push
insb
or
sbbb
es
sub
fldenv
add
subl
pop
sub
cmp
loope
cmpl
mov
rcr
fsubs
pop
incl
add
dec
jns
add
fbld
jg
cs
add
pop
sub
daa
pop
add
pop
sbb
call
shl
pop
inc
cmp
call
lcall
and
jg
inc
les
imul
mov
mov
mov
inc
scas
pushf
jmp
insb
idivl
jne
mov
xor
mov
mov
inc
mov
subb
adc
imul
mov
lods
lock
lods
stos
clc
push
lcall
push
and
repz
cmp
imul
data16
dec
aas
js
add
outsl
mov
pop
test
dec
cmpsl
push
cld
dec
or
pop
loop
mov
or
mov
inc
outsl
outsb
jns
popa
cltd
popa
xchg
or
mov
int
inc
mov
repz
sub
scas
cld
sub
add
inc
rol
sub
pop
test
les
jecxz
sub
add
es
and
dec
mov
xor
stos
push
or
add
ret
jne
icebp
icebp
lock
add
jecxz
fs
cmp
test
xchg
and
mov
inc
adc
add
add
mov
push
sbb
jge
sbb
sti
lds
mov
lret
movsb
dec
mov
inc
in
mov
jae
test
add
aam
adc
add
mov
adc
mov
sbb
sarb
add
inc
cltd
mov
xlat
or
inc
mov
add
dec
popl
int
loope
xor
add
loop
jl
das
cmp
les
push
icebp
fnstsw
sub
leave
mov
pop
mov
mov
add
test
fs
cmp
mov
insl
xchg
int3
outsb
test
js
in
lahf
in
or
jp
lods
jns
fs
lods
xor
add
addl
daa
jg
faddp
push
mov
dec
lods
pushf
ja
shrb
dec
push
add
jl
jle
jp
or
xor
iret
add
push
cmp
xor
adc
test
enter
add
sub
sti
sub
sub
pop
fildll
xchg
adc
mov
nop
cmp
test
fiadds
jmp
daa
and
mov
add
mov
mov
mov
fiaddl
cmpl
inc
mov
loopne
fstp
inc
arpl
xor
icebp
mov
pop
lds
xchg
fwait
mov
stos
cmc
mov
mov
xchg
pop
push
jmp
inc
scas
loopne
adc
add
and
lcall
stos
xchg
das
and
lock
ljmp
sub
test
or
sbb
add
lret
xchg
jb,pt
fidivs
cmpsl
data16
fs
aas
xchg
jb
inc
push
inc
jg
iret
or
das
orb
mov
ret
test
mov
xor
mov
stos
ljmp
insl
aam
imul
into
arpl
daa
cmc
add
cmp
orl
fdivs
mov
out
outsb
sbb
pusha
gs
xchg
test
js
lods
mov
and
push
sub
std
cmp
popa
fs
shlb
cmp
dec
sti
mov
sti
push
scas
inc
push
repz
into
jb
push
call
xchg
xchg
lret
call
push
adc
test
outsb
jecxz
pop
nop
xchg
stos
sub
loopne
xchg
or
jbe
shll
xchg
fildl
jmp
adc
dec
jnp
dec
ljmp
cmp
sahf
in
and
test
add
add
and
rcrl
daa
movb
aad
movsb
ja
inc
mov
jno
add
decl
and
icebp
pop
out
add
xchg
not
sbb
dec
dec
add
jl
and
inc
nop
outsl
daa
xchg
out
mov
out
in
push
fdivs
xor
arpl
add
cld
addr16
cmp
inc
add
mov
xor
push
into
add
add
fisttps
leave
sbb
push
pusha
stos
add
xchg
and
filds
testl
imul
decb
ja
add
test
dec
pop
inc
add
in
add
repz
xor
add
add
loope
xchg
ljmp
dec
out
repz
xlat
add
mov
addr16
jbe
repz
push
outsb
pop
dec
test
outsb
sub
add
and
add
push
add
jns
iret
jae
lods
inc
jg
and
adc
cmp
cmp
mov
pop
cmp
jnp
and
jp
or
and
stc
bnd
orl
sub
lea
cmp
add
imul
add
mov
pop
mov
sub
add
fidivrl
mov
movb
dec
or
add
jp
push
dec
add
adc
xchg
add
add
sbb
add
add
dec
lret
add
mov
ds
lret
popw
dec
aad
add
inc
mov
jp
orl
mov
scas
push
dec
xor
add
mov
in
adc
fldenv
and
sub
test
xor
roll
fcomps
mov
xor
add
mov
mov
add
int
jb
dec
movl
popf
ljmp
stos
int
out
sbb
test
and
rolb
mov
je
ret
test
xor
add
hlt
jl
add
inc
aad
sub
xor
aad
ljmp
mov
mov
gs
xorl
add
out
xor
mov
push
xor
out
in
push
inc
cmp
insl
ret
sbb
pop
bound
mov
pop
stos
mov
addr16
shrl
mov
sub
ret
push
and
add
jb
arpl
or
xor
add
mov
fs
adc
insb
push
lods
mov
insb
cmp
mov
add
test
shll
pop
or
fadd
add
mov
pop
dec
lahf
pushl
popa
xor
cltd
xchg
lahf
pop
and
shrl
scas
mov
add
icebp
inc
push
jo
daa
fnstenv
dec
int3
iret
inc
mov
or
or
adc
aad
jg
xchg
lock
mov
adc
lods
cmp
scas
ja
in
cmpsl
enter
and
mov
push
stc
or
adc
mov
frstor
insb
lret
test
sub
out
xchg
jle
test
call
push
outsb
adcl
in
loop
cmp
pop
out
jae
inc
add
sub
ror
jno
jnp
rorl
loopne
fs
hlt
lock
mov
xor
cmpsl
add
jnp
cmpsl
push
dec
sti
dec
imul
sbb
dec
fadd
xchg
jo
or
jne
rcrl
les
mov
ss
fwait
imul
xchg
add
cs
shrb
and
scas
pop
and
stos
lahf
lret
jb
pop
orl
scas
jl
clc
mul
dec
dec
fs
xchg
dec
cmp
out
cmovg
scas
mov
add
xchg
out
adc
in
loope
ljmp
mov
sbb
cmp
mov
or
xor
cs
enter
dec
and
xchg
sbb
dec
cwtl
imul
push
cmp
mov
push
cli
and
inc
jne
xor
push
stos
add
adcb
add
lods
in
sti
outsl
lea
out
dec
lret
scas
les
daa
sub
cmp
pop
cmp
sub
pop
add
sbb
out
adc
jmp
insl
test
add
jno
and
ljmp
xor
mov
dec
pushf
ds
and
pop
sbb
and
popa
or
outsl
out
std
rol
jp
add
aad
or
xchg
inc
sub
add
add
rcrb
stos
lea
dec
incl
gs
add
jnp
ja
stos
pop
insb
adc
xchg
and
imul
cmp
mulb
push
adcb
pop
dec
xchg
jb
pop
enter
into
inc
cld
adc
aad
repz
addl
cmp
dec
sbb
sbb
push
add
cmpsl
das
push
nop
flds
sub
add
add
sub
add
sbb
add
mov
fdiv
cmp
cmp
push
jne
xchg
std
lock
sub
fwait
test
push
sub
sub
in
shrb
lcall
xor
push
pop
dec
mov
xlat
jb
ret
dec
add
insl
push
mov
add
push
xor
and
sub
mov
or
gs
cmpsb
out
adcl
roll
jnp
lea
or
dec
or
dec
jmp
pusha
cli
data16
xchg
cmp
pop
push
lcall
outsl
jmp
rclb
sub
ss
mov
or
aam
add
popf
pushf
push
int3
add
int3
lahf
das
int
push
mov
dec
aam
insl
in
add
test
dec
addr16
sti
inc
mov
and
mov
jp
inc
dec
sbb
inc
jg
adc
xchg
push
or
push
dec
addr16
in
pushf
fsubs
mov
and
add
push
xor
adc
outsb
jecxz
outsb
insl
test
dec
cmp
jecxz
gs
xchg
mov
lods
out
mov
pop
adc
outsb
push
scas
icebp
push
sbb
or
jno
outsl
out
mov
jecxz
mov
cmpsl
add
dec
movsl
sub
adc
aaa
push
add
jae
or
adc
dec
pop
shr
mov
xchg
cli
add
or
or
mov
cmc
movsb
sub
xchg
sub
add
mov
lret
lea
ljmp
sbb
mov
mov
push
ja
mov
jle
iret
daa
pop
inc
dec
int3
test
int
call
push
jns
push
push
imul
sbb
and
inc
sub
mov
stos
sub
gs
add
sub
push
inc
adc
sahf
cltd
mov
push
mov
xchg
mov
cmp
loopne
rolb
push
dec
jl
add
sbb
dec
mov
jb
pop
pop
sub
dec
in
orl
sbb
adc
fildl
insl
add
leave
sub
xor
sub
pushw
bound
and
cmp
or
imul
dec
cmp
mov
push
stos
jmp
insb
add
or
jmp
loop
sbb
inc
xor
mov
pop
push
push
push
dec
jmp
stos
stc
call
lahf
imul
adc
lods
pushf
inc
and
mov
xchg
iret
mov
mov
or
insl
jge
xor
push
inc
out
out
add
test
test
mov
ret
out
inc
dec
pop
xchg
inc
imulb
dec
ret
xor
fistpll
add
cmpsl
push
mov
mov
orb
xchg
addl
nop
insl
push
and
icebp
cld
push
sub
adc
fs
popa
in
or
push
call
mov
flds
pop
fistpl
lock
push
adc
pop
cmp
fptan
adc
lret
mov
jo
and
sbb
mov
pop
xor
imul
fidivs
pop
fcoml
xor
cmp
fdivs
cltd
mov
mov
fstl
jns
ja
inc
fmull
add
aas
xchg
pop
add
ljmp
mov
out
stc
and
les
fldcw
insl
out
shl
lods
mov
ljmp
dec
add
aam
add
addr16
xlat
in
xchg
adc
xchg
push
dec
dec
minps
std
stos
mov
pop
loopne
mov
xchg
mov
ja
arpl
sub
push
or
sub
push
out
inc
jae
push
jle
dec
pop
in
sahf
out
add
jge
repz
xchg
mov
loopne
mov
dec
add
jne
add
or
xchg
mov
xchg
cmp
push
test
in
add
and
add
filds
dec
pop
sub
cmp
out
mov
inc
jge
mov
ds
cld
push
or
pop
add
or
mov
mov
ret
ret
scas
dec
test
bound
pop
fsubrp
das
pop
loope
cli
call
pop
fistpll
sbbl
jbe
jecxz
mov
test
mov
lret
add
sbb
pop
test
lods
mov
insb
roll
pop
dec
inc
pop
pop
test
cmp
mov
sub
add
flds
insl
xchg
imul
xor
mov
js
scas
mov
push
inc
ret
and
add
insl
frstor
loope
cmp
pop
mov
lahf
add
imul
dec
ss
inc
cs
pop
fisttps
push
xchg
addr16
mov
push
movsb
push
aaa
dec
add
adc
test
push
test
dec
pop
pop
pop
pusha
insl
hlt
or
xchg
jbe
lock
pop
dec
test
in
rolb
cmpsb
sub
pop
sub
pop
repz
pop
pusha
dec
js
inc
les
test
in
test
xchg
cli
gs
jmp
out
cs
jecxz
and
movsb
add
cmp
add
mov
jae
xchg
loop
int3
pop
add
inc
ret
int3
and
pop
jecxz
inc
or
adc
mov
or
cmpsl
sbb
dec
mov
mov
and
inc
dec
pop
decb
lret
test
mov
dec
cwtl
or
mov
cmpsb
cmpb
sub
sub
popf
hlt
shll
fistpl
lcall
cmp
dec
add
aam
and
jae
sbb
rol
testb
setg
int
pop
add
leave
mov
xchg
insb
mov
scas
loopne
sbb
sub
jle
and
out
add
idiv
aam
xchg
fistpl
orb
or
pop
daa
add
cmp
dec
fbstp
mov
or
fucomip
mov
push
stos
or
cmpsb
pop
mov
jo
std
sahf
outsl
pusha
push
repz
lock
mov
mov
out
dec
imulb
push
push
add
gs
adc
add
into
cmpsb
inc
push
jle
das
outsl
outsb
mov
jmp
and
lea
xchg
push
cmpsl
dec
xchg
sbbl
int
push
mov
xlat
sarb
std
dec
mov
cmp
cmpsl
xchg
xor
insl
out
pop
cmpsl
jge
adcl
mov
hlt
in
push
shlb
xchg
into
xchg
add
cli
jnp
dec
into
dec
mov
mov
cmp
sub
test
mov
xorl
pop
add
dec
call
out
jge
jnp
sbb
mov
lret
fs
stos
adc
and
mov
ds
cmp
sbb
inc
mov
jg
xlat
movsl
mov
add
pop
inc
sar
add
mov
adc
outsb
outsl
xchg
shlb
data16
adc
and
jg
shlb
adc
aas
add
push
adc
fwait
pop
int
cwtl
in
lock
outsl
xor
mov
and
pop
and
inc
call
push
loop
and
push
jge
jmp
mov
bound
add
add
mov
jge
lds
adc
cmp
mov
add
mov
sbb
jnp
cld
rolb
pushl
xchg
pop
fs
adc
orl
jle
sub
js
dec
leave
mov
lock
mov
dec
js
cmpsb
xchg
fmuls
jbe
sbb
call
sub
add
cmpsb
add
fbld
inc
mov
loopne
enter
or
add
xor
pop
add
add
cmp
adc
ja
add
cwtl
pop
add
insl
mov
add
sub
bound
add
mov
mov
test
xchg
xor
dec
mov
add
mov
into
jbe
std
in
add
sarl
add
jns
addb
imul
add
cs
cs
jle
cmp
and
rcr
add
addb
dec
inc
cld
pop
add
les
add
push
shrb
pop
inc
testb
dec
pusha
mul
add
mov
add
cmp
lods
fstpl
dec
push
aaa
xchg
add
ss
stc
call
movsl
add
xchg
in
and
mov
mov
add
insb
in
sbb
inc
int3
pop
cmp
pop
add
jmp
jbe
rolb
or
adc
popl
pop
mov
call
or
ret
mov
add
add
test
xor
mov
pop
das
shll
fwait
mov
loop
mov
shr
or
cmp
gs
inc
inc
dec
adc
cld
cwtl
bound
dec
xorl
jmp
mov
icebp
push
mov
mov
stos
shl
xchg
jl
cmpsb
mov
aas
faddp
mov
jo
dec
add
and
mov
testb
dec
stc
mov
push
popa
addb
and
int3
push
stos
push
inc
inc
pop
dec
add
sub
inc
add
call
xchg
xor
xchg
inc
mov
sbb
or
pushf
push
add
adc
and
xor
add
subb
loop
mov
jle
movsb
outsb
es
cmp
push
mov
add
int3
stc
sbb
lcall
out
outsb
popa
popl
loopne
pop
cmp
pop
sub
add
adc
mov
mov
inc
sahf
push
push
insb
xor
push
icebp
loope
stos
xchg
bswap
jb
out
sbb
add
jns
inc
lret
or
fildl
mov
jnp
aad
sub
inc
jmp
nop
cmc
out
imul
test
add
and
pusha
in
mov
ss
or
insl
add
jge
jg
ret
lea
cld
mov
in
add
jno
lcall
jne
mov
sub
arpl
jmp
sub
or
jge
loop
daa
sub
pop
mov
mov
lret
je
adc
push
sbb
dec
mov
sub
add
jge
in
out
sbb
pop
call
and
push
jg
jns
pusha
insb
push
sbb
mov
cmpsb
int3
lea
adc
add
adc
test
test
out
in
bound
in
scas
in
sub
add
jo
in
mov
adc
jmp
icebp
mov
adc
mov
in
andb
hlt
mov
mov
adc
addb
lahf
int3
or
xor
cmp
mov
icebp
xchg
adc
and
mov
insl
in
dec
pop
stos
daa
inc
movsl
and
sbb
lods
int3
mov
outsl
lds
stc
iret
add
jmp
rorl
sub
aas
mov
mov
test
jnp
test
movl
mov
cmp
jge
lock
jno
cmp
sbb
inc
add
cmpsl
ret
add
test
push
mov
ret
iret
sub
sub
data16
scas
push
jp
repz
inc
jnp
les
add
pop
mov
add
sahf
scas
push
mov
into
mov
in
jne
mov
add
sbb
add
call
jo
fiaddl
int
and
jo
add
or
push
in
mov
out
int
and
nop
cmpl
mov
add
push
adc
add
mov
stos
loopne
inc
jl
sub
xchg
es
out
inc
jno
roll
add
je
add
dec
dec
lret
test
mov
dec
ret
and
loopne
mov
add
out
xchg
sub
je
insl
cmpb
test
sub
adc
imul
roll
int3
inc
rolb
fadd
inc
loopne
test
sbb
clc
loop
scas
sbb
mov
lods
popa
sbb
ja
aam
cld
lcall
xchg
cmpsb
or
aas
pop
adc
jnp
push
pusha
jne
adc
inc
mov
ljmp
add
push
movb
pusha
add
jo
push
cltd
add
lock
xchg
push
add
dec
mov
stos
loop
add
pop
scas
ret
rorl
rorb
cmp
mov
inc
lods
add
repnz
fisttpl
mov
mov
mov
pop
add
adc
cmpsb
gs
cmc
push
cwtl
xor
pusha
call
mov
ljmp
mov
sub
mov
imul
sub
sub
mov
arpl
add
cwtl
add
add
push
add
pop
mov
xchg
or
cmpsl
mov
xor
xor
jp
add
daa
in
push
jno
mov
sahf
cs
lds
inc
mov
sub
call
inc
aaa
imul
jecxz
jp
pop
cmp
in
add
cld
and
subl
rclb
outsl
outsb
push
outsb
cmpb
pusha
mov
or
shr
mov
nop
addl
dec
ljmp
aad
dec
outsl
push
out
dec
pop
push
loop
call
dec
sub
data16
lea
mov
ds
and
ljmp
aam
iret
xor
or
push
ror
push
jp
sub
aad
sub
and
pop
xor
pop
xchg
pop
lods
sub
jp
cld
inc
lods
in
xor
call
add
inc
in
cmp
les
pop
sbb
inc
ja
fs
push
test
lret
into
dec
pop
sub
test
jns
flds
ja
shrb
or
imul
mov
int3
jmp
pop
or
out
push
jg
cmp
and
adc
rolb
or
aam
fwait
stc
filds
sbb
aas
iret
loopne
xchg
fdiv
insl
xorb
sub
imul
int
outsb
add
sbb
add
jo
stos
sbb
loope
pop
pop
enter
pop
out
mov
in
call
mov
cmp
data16
sbb
add
mov
sbb
push
jge
add
sub
add
jnp
fsubr
dec
mov
add
mov
clc
into
rclb
push
sbb
aam
fildl
stos
adc
inc
arpl
dec
pop
sbb
dec
add
dec
mov
incl
shrb
loope
mov
cltd
jns
das
sbb
loop
call
sub
scas
loope
mov
mov
inc
cld
test
cmc
dec
aas
and
testl
add
mov
test
push
pop
fstpt
jecxz
push
fucomip
push
lea
inc
sbbb
fwait
cmp
xchg
xorl
in
rorb
mov
add
push
or
add
push
fistps
out
adc
shrb
inc
sbb
mov
push
xor
push
or
add
or
dec
jno
sbb
lret
or
and
bound
repz
popa
ret
nopl
fadds
gs
add
cmpsb
pop
divl
filds
std
mov
adc
ds
or
push
es
sub
mov
mov
pop
in
push
addr16
pop
and
outsb
cmp
mov
leave
sub
pop
test
sti
dec
xchg
and
sub
out
adcl
cmpsb
out
mov
mov
loop
add
or
test
filds
adc
jge
xchg
or
std
push
mov
pop
aaa
xor
mov
sahf
ret
mov
jg
pusha
cltd
add
fs
pop
and
add
out
std
add
iret
mov
add
out
mov
inc
inc
cmpsl
je
push
add
cmp
outsb
pop
fistpl
dec
xor
fcompl
sbb
mov
scas
xor
xor
pop
xchg
fcomip
jg
test
test
lret
push
dec
cmp
sbb
cmpsl
jnp
dec
sarb
dec
cmp
and
fcoml
fisubrl
push
cmpsb
xchg
sub
cmpsb
gs
fisubrs
lds
pop
pop
push
rcrl
imul
int3
aad
aas
add
mov
add
push
pop
pop
icebp
sbb
call
inc
test
fxch
mov
and
mov
cs
lret
sarb
jnp
out
rol
fnstenv
stos
out
incb
enter
rcrb
push
loope
dec
rol
lcall
dec
ss
add
dec
mov
stc
and
and
push
sbb
pop
cmp
add
add
imul
jns
or
fadd
xchg
jmp
add
je
or
add
test
adc
cltd
pop
mov
adc
inc
fadds
mov
scas
cli
jno
imul
mov
data16
into
or
mov
inc
dec
dec
test
mov
adc
sub
stc
sbbl
jecxz
ss
ljmp
add
jnp
cmpsl
fs
popl
js
mov
add
cltd
shl
rcl
or
add
dec
lock
or
add
push
add
test
mov
fadds
ret
scas
imul
dec
dec
jle
in
cmp
mov
mov
mov
mov
in
add
add
dec
rorl
movsl
push
lock
mov
push
js
in
lds
add
add
fistpll
jp
addr16
imulb
test
pop
jmp
iret
xchg
out
outsl
mov
pop
push
pusha
push
pextrw
mov
test
add
stc
mov
xor
arpl
aaa
cmp
or
aad
stos
adc
xor
fstps
and
or
out
lds
lret
pop
inc
das
or
pop
jns
sti
hlt
mov
cmc
daa
push
mov
repz
arpl
les
pop
cmp
and
clc
push
pop
mov
ret
shl
adc
adc
sbb
mov
sbb
sub
in
inc
jmp
jmp
inc
mov
inc
in
pop
add
inc
mov
adc
inc
icebp
fcomps
xor
sahf
div
inc
mov
mov
pcmpgtd
add
inc
xchg
cwtl
mov
das
movsl
push
clc
xor
xor
cwtl
adc
cmc
aas
inc
repnz
ja
inc
mov
dec
test
push
ss
sbb
fwait
pop
xchg
loop
mov
pop
adc
fcmovnu
mov
and
sbb
imul
pop
adc
jns
push
jecxz
cmc
sub
sbb
inc
inc
fiadds
imul
dec
jmp
jge
adcl
inc
aaa
insb
mov
pop
sti
shrb
stos
les
mov
push
inc
shll
xchg
stos
movsl
mul
scas
mov
push
test
mov
rolb
aam
xchg
xchg
incl
jns
ds
xchg
pushf
loope
pop
repnz
dec
add
stc
dec
fiaddl
jmp
stos
nop
js
cmpsl
add
mov
stos
das
jbe
sbb
mov
test
pushf
out
or
out
xchg
decb
xor
loope
and
or
inc
dec
cmp
xor
xor
add
imul
xchg
sbb
aaa
pop
pusha
cmpsb
add
cli
and
sub
mov
xchg
jecxz
pop
ja
repnz
adc
mov
xor
fistpll
lea
filds
inc
add
xor
add
sub
push
cmp
repnz
hlt
or
inc
out
loopne
xchg
call
lea
pusha
sub
pop
add
iret
or
stos
into
enter
dec
sbb
aam
movsl
add
add
ljmp
add
inc
sub
imul
add
adc
jae
fwait
push
push
mov
aaa
add
xor
jbe
pop
lock
add
mov
adc
addr16
push
add
add
or
inc
int3
bound
add
loope
ret
addr16
lds
scas
xchg
add
add
jbe
sub
mov
push
lret
adc
add
in
data16
or
mov
jl
aas
pop
mov
insl
add
cltd
jb
unpcklps
cmp
insl
notb
add
or
jb
invd
lock
pop
dec
bound
pop
pop
pop
push
cli
scas
scas
lods
in
push
in
sahf
xlat
scas
push
lcall
popf
push
dec
add
shll
add
lods
xlat
add
add
rclb
data16
jne
push
sbb
mov
xchg
add
sub
divb
out
decb
xchg
add
shrb
dec
sbb
test
add
add
inc
push
mov
call
or
mov
ret
add
xor
shrb
and
shl
movsb
mov
adc
clc
cmp
popl
fs
es
push
dec
jl
arpl
add
loopne
sub
cmp
ret
dec
or
push
out
bound
movl
or
in
xchg
and
insb
lock
rep
mov
mov
dec
jae
add
jg
add
add
or
or
push
add
cmc
aad
dec
pop
bound
scas
enter
push
and
add
lods
cs
xchg
add
adc
pop
pushf
leave
in
mov
sub
mov
pop
test
mov
orl
dec
add
mov
xchg
mov
ja
in
sub
fcompl
add
xor
cmp
movsw
outsb
and
sub
mov
add
mov
sub
lea
roll
xchg
push
dec
fs
pop
pop
icebp
fmulp
dec
add
xor
out
imul
das
add
out
fwait
sti
fs
aad
clc
pop
sahf
outsb
addl
dec
hlt
cmp
add
inc
cmp
out
or
add
sub
ret
cmp
mov
add
fildl
and
dec
cmp
pop
pop
aad
pop
movsl
add
in
mov
mov
mov
lret
outsl
fadds
arpl
mov
roll
imul
push
adc
add
push
lret
or
cs
push
lds
sub
shrl
mov
pop
mov
imul
xor
lea
pop
into
push
jbe
addr16
inc
insb
jp
inc
out
xor
or
cmp
jle
mov
aad
mov
adc
pop
rcrb
mov
popf
jno
pop
jo
sub
daa
pop
pop
test
xchg
popf
jecxz
addl
mov
adc
or
ds
inc
subb
pop
dec
repz
cmpsb
lea
add
sub
leave
shlb
sbb
sub
cs
inc
mov
and
cmp
sub
jo
add
jge
ret
adc
push
mov
cli
std
mov
movsb
stos
es
dec
loope
mov
sub
sub
lea
int3
scas
inc
xchg
scas
push
outsb
test
lahf
sahf
sub
sbb
or
push
je
das
mov
lahf
frstor
push
dec
lods
add
inc
pop
xchg
push
mov
lods
lahf
add
mov
shrl
cs
mov
jmp
mov
icebp
fsubrl
add
jnp
into
xchg
pop
sti
jno
test
inc
or
push
add
and
jb
inc
and
add
jmp
bound
aad
je
pop
in
add
inc
or
cmc
inc
nop
aam
lfs
rclb
mov
lock
int3
mov
or
fwait
push
out
fidivrl
sbb
xor
cmpsl
out
fwait
sbb
dec
jecxz
cmp
or
test
push
jne
adc
psadbw
mov
stos
or
mov
mov
sbb
call
jne
gs
push
outsb
adc
pop
ret
imul
cli
dec
pop
stc
popf
jb
push
xor
bound
punpcklwd
sub
ljmp
in
data16
sbb
jg
adc
dec
add
pop
cwtl
into
pop
lods
lods
mov
mov
lods
push
int3
xor
lock
adc
movhps
mov
ret
sub
dec
mov
outsl
sub
fwait
cwtl
in
add
outsl
jno
cld
adc
pusha
fsubs
ljmp
add
fbstp
mov
or
pop
dec
in
push
jecxz
daa
push
test
push
or
xor
sub
into
movsl
fildl
inc
adc
add
gs
test
jmp
dec
xor
push
xchg
outsl
inc
lret
out
lcall
mov
sub
pushf
jg
adc
data16
push
adc
or
lret
pop
das
push
lods
outsl
mov
sub
ret
inc
mov
jl
hlt
or
clc
mov
and
lea
jnp
mov
add
shll
push
adcl
jmp
lcall
in
mov
sti
jb
jecxz
daa
lcall
mov
sbb
sbb
jno
push
insb
scas
sub
sub
mov
out
or
fucomip
imul
add
rol
clc
push
out
lds
push
dec
mov
mov
cmpl
xlat
pop
fbstp
dec
jne
mov
cld
pop
rclb
shl
ret
and
outsl
pushf
xorl
jb
xor
sub
nop
jb
je
mov
cwtl
int3
mov
push
xor
ljmp
imul
sub
mov
stos
fnsave
out
test
cltd
lods
nop
push
xor
jne
mov
mov
lahf
pop
mov
inc
xor
jmp
dec
std
imul
sub
inc
push
jno
mov
out
or
rolb
dec
jg
movsl
test
out
mov
and
or
fidivrl
es
dec
dec
ret
mov
jmp
jae
add
pop
mov
neg
fwait
jecxz
shr
sbb
movsl
push
adc
sti
and
push
dec
xchg
xchg
cmp
es
out
add
push
fwait
bound
add
add
add
mov
andb
nop
ficomps
dec
jae
int3
pop
mov
daa
popf
pop
pop
iret
dec
mov
mov
xchg
inc
sbb
data16
ss
and
add
xor
in
incl
xchg
test
outsl
ret
add
test
sbb
add
pop
push
add
insl
xchg
imul
add
in
into
mov
iret
ja
ss
add
or
mov
pop
scas
sub
add
adc
mov
scas
sub
sub
mov
fadd
repnz
out
mov
add
popf
rorl
out
dec
hlt
cmc
push
clc
inc
push
int3
jno
push
fwait
in
or
mull
test
add
lds
ja
in
sub
cmp
imul
xor
cmpsl
sub
mov
aas
int
mov
mov
pop
cmp
es
push
inc
into
js
mov
test
scas
cli
cwtl
ljmp
out
jp
imul
dec
jno
or
scas
addl
ss
dec
stc
std
jecxz
stc
inc
mov
push
dec
in
jmp
add
xchg
aas
loop
lret
dec
in
into
cmp
mov
xchg
cmpl
iret
cmp
dec
sub
mov
mov
je
or
and
loopne
icebp
inc
lods
jle
sub
jecxz
push
test
mov
cmp
jae
mov
dec
call
lock
add
test
lahf
push
dec
mov
adcl
and
rcll
pop
add
push
mov
mov
lea
nop
add
inc
test
addr16
pavgw
movsl
int3
lret
add
dec
or
cld
cmp
into
mov
add
add
rolb
dec
ret
lret
sub
cli
scas
mov
lods
sub
xchg
jmp
inc
xor
cmpsb
inc
rol
lret
sbb
push
movsl
es
pop
fistpl
mov
mov
adc
or
out
and
sbb
insl
outsb
insl
cmp
mov
sub
ljmp
mov
dec
pop
mov
aaa
push
or
dec
mov
sbb
push
cmp
mov
data16
mov
inc
mov
xchg
cld
loopne
stos
fcompl
inc
sub
cmovno
push
push
std
loope
lcall
clc
adc
push
dec
push
or
out
or
lea
out
popa
push
push
out
add
loop
test
repz
pop
mov
stc
lods
sub
aaa
push
dec
xchg
pusha
jge
or
dec
cmpsl
fildll
enter
push
push
inc
add
int
dec
mov
mov
test
add
add
dec
cmpb
mov
movsl
insb
mov
add
sub
sbb
add
mov
jb
pop
push
push
add
add
inc
add
sbb
into
cs
lods
outsb
pop
imul
movsb
xchg
lods
mov
into
inc
mov
in
or
decl
out
incl
lea
mov
add
arpl
mov
ss
jg
jns
add
push
adc
xor
inc
mov
mov
cmc
movsb
jnp
sbb
sub
and
add
cmpsb
xor
test
in
add
inc
cmpsb
xchg
aad
mov
sahf
cmp
sub
pop
ljmp
es
sbb
testb
cmp
aaa
scas
loopne
and
jg
lods
and
addr16
push
push
shrl
xchg
cmp
aas
gs
js
cli
jecxz
fisubrs
outsl
mov
test
out
fs
and
roll
loopne
sbb
add
je
stc
xchg
add
mov
mov
lds
cs
inc
push
push
pop
push
loop
andb
add
call
insb
push
in
sbb
js
rolb
iret
mov
sbb
pushf
push
jbe
popa
mov
xchg
stos
push
add
jne
movsb
inc
add
and
pop
or
adc
lods
fdivrl
cld
push
xor
das
cwtl
mov
js
ret
jl
js
dec
icebp
pop
out
xor
loope
aaa
add
xchg
add
enter
xchg
sub
addr16
repnz
fwait
scas
in
fisubrs
enter
add
pop
and
push
sub
mov
jg
or
dec
fstps
pusha
lds
fldenv
cld
inc
cmp
mov
cs
insb
mov
ljmp
jge
mov
arpl
dec
mov
cmp
movl
add
das
daa
xchg
aas
xor
int
mov
push
sub
popf
jae
xchg
in
sbb
jns
sbb
aas
jne
leave
movsb
into
cs
or
adc
arpl
ret
cmp
mov
and
enter
es
shrb
inc
cmpsl
mov
pop
lret
xbegin
cmp
lcall
fs
pop
lret
xor
call
lock
icebp
sbb
dec
add
bndstx
lea
add
nop
mov
aad
add
movsb
mov
sbb
outsb
adc
pushf
lock
clc
add
inc
cmp
dec
xchg
push
add
jnp
lret
add
and
cmpsl
int
pushf
add
adcb
clc
xor
add
jbe
out
push
add
arpl
scas
sub
movsl
mov
out
add
lock
mov
add
lret
inc
dec
arpl
and
cmp
or
add
test
xchg
rcl
add
lods
xchg
orb
jns
add
push
fmuls
inc
dec
test
add
dec
dec
inc
sbb
cmpsl
lret
movsl
rolb
lds
add
fwait
jns
loope
add
jnp
add
xor
das
pop
add
cmp
sub
mov
mov
test
repz
test
scas
cmp
mov
mov
incl
jg
scas
add
outsb
sbb
sbb
test
insl
push
mov
dec
adc
sbb
add
dec
les
rolb
gs
pop
add
fistl
dec
add
in
icebp
dec
dec
sub
stc
mov
xchg
roll
lods
adc
add
sub
pop
addl
mov
jge
lea
xor
lret
das
dec
cmp
add
add
mov
cmp
pop
scas
ds
cmp
xchg
jl
mov
je
scas
add
test
sub
ljmp
shlb
int3
xor
mov
and
xlat
out
adc
jnp
pop
mov
mulb
mov
xor
and
mov
testl
test
jns
icebp
jp
xorb
pusha
xchg
push
iret
fs
fists
add
stos
push
mov
outsl
in
jmp
daa
jle
or
das
emms
add
add
fadds
je
add
movsb
fists
mov
outsb
push
and
mov
jno
sub
ret
xchg
and
push
push
sti
jmp
mov
inc
or
mov
ror
out
add
or
lock
jge
or
add
loopne
sbb
add
sub
cmp
jbe
test
xchg
mov
jge
mov
jae
add
inc
cmp
add
xchg
cmp
outsb
aas
fmull
loopne
xor
jecxz
xchg
fs
sub
rcrl
push
cmpsb
jecxz
cmpsl
pop
pop
bound
insb
imul
aaa
jo
repz
into
iret
or
pop
pop
popa
or
xchg
dec
imul
in
aad
cmc
in
add
scas
rolb
out
fistpl
outsl
sub
jnp
cmc
pushf
stos
test
lcall
aam
mov
mov
mov
mov
mov
adc
scas
jg
call
cmpsb
add
es
fsubr
xlat
add
cmp
lods
inc
mov
add
pop
lret
mov
cmp
add
jl
sbb
pop
or
jnp
push
inc
inc
add
mov
push
push
and
push
push
bound
cmp
jb
xchg
bound
pop
xchg
mov
fsub
or
ret
lds
mov
pusha
nop
loop
push
jle
into
push
sahf
dec
add
cmp
data16
pop
mov
xchg
lea
cld
and
scas
repnz
test
jge
xlat
in
xchg
addb
add
add
imul
push
dec
inc
jecxz
out
loop
ljmp
lea
loope
lahf
cmp
xchg
push
mov
ds
mov
lret
xor
mov
clc
add
sub
mov
aad
out
dec
inc
in
add
arpl
aam
test
int
adc
add
movsb
insb
iret
fwait
push
lret
lret
stos
xchg
sub
mov
sub
mov
inc
add
pop
shlb
fstpt
jnp
mov
out
dec
pop
sub
xor
aam
push
rclb
xor
mov
leave
add
dec
lahf
outsl
adc
add
mov
int3
imulb
add
cltd
sub
aas
add
cmp
lcall
jb
cmp
jne
mov
add
add
loope
insb
data16
inc
pop
es
adcb
repnz
jmp
mov
add
add
pop
fidivrl
xor
mov
pop
dec
sub
inc
adc
add
and
repnz
cmp
adc
add
xor
mov
test
dec
cmpsl
sub
mov
add
sub
dec
cmp
add
scas
outsl
add
insl
add
xchg
mov
movsb
stos
adc
sbb
scas
insl
add
lods
mov
xor
or
fsubs
cmp
stos
mov
aaa
pop
cmp
fsubrs
or
subb
xorl
cmp
fmul
shl
xor
add
dec
aad
sbb
out
into
jne
into
ja
icebp
iret
push
jne
in
jle
popf
or
nop
arpl
push
outsl
or
dec
push
mov
cld
push
fsts
jmp
dec
mov
das
div
into
in
add
mov
outsl
push
dec
in
push
sub
push
jne
dec
or
enter
mov
call
int3
inc
dec
xchg
imul
pop
daa
data16
mov
push
sub
cmpsb
or
movsb
scas
inc
inc
pushf
sub
les
out
mov
cmc
arpl
add
sbb
stos
orb
lcall
or
pop
mov
jmp
cmp
adc
das
mov
jle
imul
xor
sub
xchg
dec
lock
inc
out
xor
xor
mov
pop
dec
test
fidivs
add
stos
xchg
adc
pop
lods
add
push
add
imul
test
sbb
mov
sub
lods
js
je
add
ud1
negb
xchg
in
inc
jecxz
sub
mov
test
aam
add
xor
add
add
jnp
mov
push
addl
xor
mov
imul
add
dec
add
stc
in
xchg
lret
sbb
push
lahf
cmpsb
arpl
test
and
outsl
fwait
inc
les
and
mov
jne
leave
loopne
sbb
jns
push
out
aad
std
add
shrl
sbb
mov
repnz
nop
roll
and
pop
pop
mov
gs
jecxz
test
sar
sbb
in
adc
adc
pop
and
dec
cmpsl
xor
fxch
in
jp
and
out
fcomps
adc
stos
sbb
xor
jmp
rcrb
test
xor
cmp
repz
mov
decl
mov
cli
lret
sbb
sahf
pop
nop
push
cmp
push
lods
jno
and
out
pop
add
push
je
jge
sub
movb
enter
or
pop
inc
xchg
add
scas
sarl
sbb
push
cmc
push
test
call
jge
lods
push
fisubrl
subl
ljmp
popf
mov
jne
mov
push
push
xlat
xchg
pop
aad
popa
pop
clc
int3
push
sbb
pop
pop
fnstcw
mov
xchg
mov
arpl
insl
jp
insl
aaa
or
arpl
iret
ljmp
scas
inc
dec
inc
movhps
xorb
iret
cmp
cmp
adcl
das
or
iret
test
out
mov
ljmp
push
stc
cmpsl
add
ja
add
arpl
xlat
push
add
or
test
or
mov
add
cmpsb
add
pusha
sub
push
mov
ret
clc
jnp
sub
leave
arpl
cltd
sti
push
xchg
and
cmp
push
sahf
add
mov
mov
cwtl
push
sbb
mov
cli
mov
xchg
movsl
adc
adcb
inc
dec
orl
xchg
aaa
mov
enter
xlat
fiadds
pusha
fsubl
aas
xchg
or
or
inc
cmpsl
push
dec
daa
cmpsl
xchg
in
mov
bound
jno
jmp
sahf
out
mov
stos
jmp
xorb
jl
or
or
jns
es
mov
mov
cwtl
dec
cmpsl
cmp
fbld
aas
push
sbb
mov
jmp
sub
aaa
add
pop
in
ret
push
lods
aas
out
mov
mov
rorb
xchg
jge
mov
jnp
jno
hlt
sbb
inc
ret
test
in
or
andb
cvtdq2ps
cli
std
dec
sbb
je
int3
lahf
xchg
dec
add
fisttps
add
out
fisttps
js
lds
or
add
push
mov
and
sbb
cwtl
push
neg
inc
and
cmp
icebp
test
movsb
loopne
inc
push
dec
stc
pop
adc
add
or
loop
add
xchg
int3
sahf
or
dec
insb
pop
jb
enter
arpl
push
push
das
push
lds
pusha
test
xlat
insb
add
rcll
add
inc
add
mov
dec
movsb
fmul
push
mov
aaa
add
rcrb
sub
pop
shrb
daa
and
and
ljmp
dec
mov
add
push
xchg
cmc
xor
addl
pop
pop
mov
push
push
int3
call
ljmp
xchg
daa
xchg
xor
sub
aam
lahf
mov
imul
mov
push
fs
out
or
jle
jg
jle
loope
es
sub
xlat
fwait
adc
jbe
mov
aad
mov
stos
and
mov
jmp
out
xor
pop
popa
adcl
or
lea
xorb
test
mov
xchg
xor
imul
mov
out
fildll
popf
test
mov
fiaddl
ja
mov
xor
in
cmp
mov
add
arpl
xor
xlat
sarl
outsb
cmp
jp
shll
in
lock
push
sarb
pop
lcall
push
jge
addr16
cmp
addr16
mov
jecxz
or
xchg
and
push
iret
fmul
and
mov
test
fsubrs
and
lock
insl
and
push
mov
scas
xchg
xor
mov
cmp
add
inc
insb
mov
out
pop
jb
mov
fnstcw
fcoms
add
and
mov
xchg
mov
shll
xchg
dec
adc
lds
bound
mov
mov
int
out
js
or
mov
nop
inc
sub
out
sub
and
push
cmp
add
hlt
sti
cmpsl
lahf
mov
cmp
dec
jns
ljmp
int
or
inc
ficompl
lds
mov
or
pop
or
push
jno
cs
aad
add
stc
test
je
adc
sbb
sub
xchg
repz
push
or
or
shrb
dec
push
in
jmp
stos
inc
sub
repnz
lods
pop
jecxz
mov
call
fs
add
mov
inc
jno
daa
lahf
adc
adc
lret
pop
fidivs
mov
and
imul
sbb
out
pop
aad
xchg
test
repnz
inc
push
push
imul
sbb
or
cmc
sbb
pop
add
jmp
push
sub
or
adc
cmp
cmp
in
add
popa
add
xchg
and
jae
arpl
gs
divb
in
inc
leave
mov
dec
lret
jle
inc
lret
add
add
lods
insl
sbb
notb
add
pop
out
in
add
add
shrb
ret
sub
and
mov
imul
add
push
movb
add
dec
add
pop
cmc
jl
andb
push
add
add
sbb
add
mov
xchg
out
insb
daa
adc
call
out
insb
mov
rcl
arpl
add
pop
inc
mov
cmp
fld
inc
adc
sbb
xor
pushf
add
mov
pop
push
popf
stos
sub
fldcw
imul
add
xchg
lds
icebp
xor
jl
js
sbb
mov
rorb
pushf
lret
push
xchg
push
cmpsb
mov
mov
loope
add
sbb
scas
imul
and
jns
andnps
pop
xor
comiss
test
lea
add
add
add
push
xor
je
push
xor
add
out
es
into
and
add
xorb
stc
mov
xor
or
push
test
add
into
jns
add
and
in
das
lcall
scas
add
xchg
adc
scas
sbb
in
cmpsb
or
mulb
rcr
or
ds
dec
mov
leave
mov
leave
ja
adc
add
sub
jge
adc
push
incl
xchg
fisubrs
add
add
dec
loope
fxch
adc
lods
sub
add
enter
pop
fisubs
add
adc
in
lock
sub
mov
test
stos
pop
pop
addr16
xchg
insb
loope
mov
cmc
addr16
jns
stos
mov
inc
das
dec
pop
sbb
movb
leave
mov
repnz
mov
pop
lret
dec
scas
push
fisubl
sub
aam
add
and
mov
inc
hlt
and
pop
mov
or
int3
insb
fcomip
or
pop
test
in
mov
push
cmpsl
in
ret
add
loope
subl
idiv
sahf
in
test
add
js
imul
mov
add
dec
pop
inc
mov
pop
and
pop
inc
call
jo
xchg
test
lods
xchg
js
lsl
scas
fisubl
jmp
aam
xor
or
xchg
out
add
jl
add
sti
sbb
orl
popa
cs
dec
jb
push
add
xchg
mov
mov
loop
dec
jle
loope
popa
call
mov
es
mov
cld
iret
cmp
sbb
dec
dec
into
dec
sub
pop
rcll
xchg
or
in
jle
hlt
test
sub
ss
movsl
aad
and
outsb
nop
in
xor
xchg
pop
jge
fs
dec
incb
cmp
xor
push
xchg
jp
add
add
or
lods
add
mov
add
lcall
mov
or
mov
add
push
or
mov
cwtl
lock
idiv
test
mov
roll
mov
imul
or
sbb
iret
add
rcrb
data16
insb
add
fmull
or
xchg
sub
sti
add
mov
pop
push
add
data16
int3
into
iret
mov
mov
jle
subb
lcall
lahf
pop
ljmp
pop
push
inc
pop
mov
into
jl
push
cmp
mov
dec
add
js
add
movsb
xor
dec
decb
cmpsb
push
add
jns
scas
add
mov
or
jle
sbb
cld
mov
and
rolb
dec
mov
xor
loop
xor
test
push
mov
mov
loop
push
jmp
lods
wrmsr
sub
emms
push
push
add
rcll
mov
sub
test
fiaddl
add
test
mov
ds
in
jle
add
xor
xor
icebp
lret
dec
inc
mov
inc
inc
mov
dec
add
add
ja
sub
push
out
das
fucomi
test
idivb
shrl
dec
es
ds
aaa
or
pushf
add
into
jp
add
mov
addb
dec
jno
sub
mov
out
shll
aam
or
jp
out
dec
push
xchg
out
mov
negb
cmp
dec
arpl
pop
jno
inc
lret
imul
movl
jp
xor
andb
mov
mov
fisubs
iret
sub
push
dec
adc
je
push
dec
aaa
add
xor
add
xchg
add
push
andb
out
add
add
clc
das
push
lods
into
mov
inc
addr16
adc
add
inc
add
pop
jle
inc
call
mov
add
scas
fimull
mov
inc
ja
repz
dec
add
sub
sbb
jo
outsl
inc
daa
fildl
lods
sbb
scas
jmp
jmp
sti
add
lcall
jnp
pinsrw
push
jno
mov
adc
dec
lcall
xor
loope
stos
or
push
movsl
adc
lds
add
add
adc
mov
jecxz
add
pop
popa
jne
xor
in
mov
dec
inc
outsl
dec
jmp
dec
arpl
lods
aaa
repnz
test
cmpb
shr
mov
sbb
aad
fcmovnu
add
ss
imul
dec
lret
iret
inc
dec
out
imul
fsubp
xor
enter
mov
loope
dec
rorb
cld
mov
shl
mov
mov
lock
in
add
xchg
or
test
push
aam
out
jae
adc
iret
in
add
test
outsl
scas
jmp
cwtl
lods
rcr
scas
stos
jle
outsb
add
cld
mov
add
add
sbb
mov
lahf
adc
add
fldl
out
cmp
leave
add
mov
cmpsl
int3
loope
fnstsw
cli
test
and
ret
mov
cmp
and
in
jge
fidivrs
rorb
push
pop
addr16
pushf
mov
mov
ss
ds
cmpsl
jnp
je
dec
push
add
clc
insb
outsb
fdiv
loopne
insb
je
enter
mov
add
sub
fildll
insb
or
jnp
dec
push
fcoml
mov
inc
mov
xchg
test
dec
mov
neg
mov
dec
push
iret
jnp
insb
add
or
into
dec
loopne
lea
shrl
lock
push
and
lcall
cmp
cmp
add
aad
arpl
dec
nop
dec
test
ret
jmp
cmp
pop
inc
push
or
fmull
lea
test
sbb
mov
sub
push
cmp
in
xchg
push
xchg
popa
push
ja
mov
pop
push
sbb
fcompl
or
jecxz
add
mov
arpl
pop
add
xchg
push
out
into
in
push
arpl
jo
cmp
push
mov
dec
pop
push
dec
inc
adc
jg
inc
pop
mov
xchg
sbb
ret
repz
push
xor
pop
cmp
pop
cmp
mov
in
jnp
ret
xchg
pop
rcrl
ss
xor
pop
xchg
lret
daa
repnz
add
idivl
in
jg
loope
jae
scas
loope
xchg
jp
add
dec
or
out
xchg
ja
bswap
sti
stos
jno
xlat
ret
pop
insl
dec
cs
pushf
mov
iret
cmp
sbbl
movsl
test
ror
mov
cmp
scas
and
mov
lcall
roll
add
std
loopne
jg
fbld
add
cmc
data16
push
cmp
aaa
inc
mov
xlat
cmp
dec
push
adc
bound
dec
fs
xchg
pop
flds
adc
bound
cltd
inc
dec
jmp
enter
outsl
sbb
and
mov
sub
call
out
insl
pop
pusha
jmp
mov
test
je
push
in
inc
bound
dec
rcr
or
push
fmull
loop
add
fiadds
add
jp
adc
push
sbb
dec
mov
shll
and
cld
rol
out
adc
test
std
add
addr16
push
add
push
fstl
lret
jno
mov
jnp
movl
mov
scas
mov
dec
or
push
sub
jp
dec
cmp
clc
add
es
push
mov
jl
xchg
std
jle
mov
jecxz
jnp
test
mov
icebp
aad
lods
pop
or
outsl
cld
pop
cltd
dec
inc
loopne
dec
and
ror
xchg
jnp
sbb
cld
test
in
shll
lds
mov
dec
cld
popl
pop
mov
pop
bound
nop
xchg
sbbl
cwtl
jmp
ffree
mov
inc
add
ljmp
jo
nop
test
mov
jbe
out
sub
pushf
call
popl
leave
pop
or
es
loopne
das
inc
mov
push
test
adc
pop
out
bound
in
and
dec
jmp
sbb
dec
pusha
incb
xchg
cld
out
lahf
pop
inc
xlat
rorl
int3
cmp
scas
icebp
dec
lock
inc
out
and
xchg
test
adc
scas
mov
xchg
dec
lods
cli
stos
daa
inc
mov
cltd
lret
mov
mov
popa
rolb
mov
sahf
cwtl
flds
mov
jecxz
push
stos
decl
das
aaa
mov
inc
jmp
in
popa
test
jl
add
cmpsb
fincstp
dec
add
ljmp
push
inc
iret
dec
pop
pop
cmpsb
pushf
das
or
push
imul
add
repnz
test
xlat
lods
call
or
mov
fistl
sub
dec
nop
mov
sbb
int
xchg
mov
adc
orl
pop
arpl
sub
test
and
xchg
sub
jg
mov
xchg
es
xchg
push
jl
or
mov
cmp
or
mov
inc
or
jnp
jge
and
rcll
clc
mov
add
and
fldt
xchg
out
cmp
loopne
sbb
mov
out
jae
cmpsl
jl
cmp
lahf
push
sahf
push
dec
stos
daa
or
add
mov
xchg
jb
fsub
and
pop
jns
das
rcrb
push
xchg
outsl
dec
sahf
xlat
and
xchg
repnz
pop
xchg
mov
ds
add
or
add
inc
testl
outsl
rolb
add
jg
and
mov
push
adc
adc
pushf
or
add
lcall
das
add
test
arpl
add
mov
fidivl
dec
and
movsl
ljmp
loopne
pusha
cmpsl
loope
in
mov
xor
in
xor
xor
clc
mov
or
add
dec
mov
mov
add
sbb
mov
or
aas
add
cmpsb
push
test
add
hlt
daa
in
adc
inc
arpl
jl
add
xchg
add
fwait
iret
add
in
fcmove
add
xchg
pushf
mov
pop
add
pusha
mov
mov
arpl
mov
insb
dec
jg
sbb
pushf
cmpsb
and
out
inc
mov
lcall
addr16
sub
push
dec
fimull
testl
mov
mov
test
cs
and
int
dec
mov
jbe
pop
sti
int
xchg
or
xchg
push
add
sbb
inc
lods
lret
arpl
mov
lods
fxch
jmp
inc
aaa
out
out
in
loop
call
filds
lret
dec
adc
mov
lret
out
leave
mov
loop
int
sub
in
add
and
sub
push
mov
test
sub
sub
lods
call
loopne
orb
mov
push
mov
jns
push
ret
jl
lods
cld
sbb
jmp
push
sub
bound
fsub
outsb
lds
in
pop
jb
in
lahf
push
jl
iret
or
es
add
add
cmp
jb
dec
cmpsl
add
mov
mov
mov
rolb
mov
add
mov
scas
add
and
mov
fs
dec
fsubr
add
fsubrs
orb
loopne
repz
repnz
mov
cld
push
cmp
mov
push
cmpsl
pop
lds
xchg
jecxz
out
scas
out
pop
flds
adc
arpl
in
cmp
roll
popa
or
movsb
dec
icebp
add
stos
dec
ljmp
jmp
pop
movsb
mov
xchg
outsl
es
out
mov
fistl
sub
inc
add
add
add
add
movsb
jb
lret
addr16
jb
aam
mov
and
push
sbbl
shll
cmp
jg
sub
adc
jns
xchg
adc
or
mov
daa
inc
jns
shld
jle
adc
arpl
ljmp
push
pop
std
iret
call
in
pop
cmpsb
push
scas
cmp
xchg
add
dec
xchg
lcall
cld
push
mov
xchg
mov
mov
add
push
push
cwtl
or
ret
aaa
fisubrl
mov
mov
add
test
filds
pop
jbe
fildl
mov
loope
xchg
sub
inc
xor
mov
enter
dec
jb
mov
cmp
mov
add
fisttpl
call
cmp
lods
fwait
mov
insb
cmp
jmp
ss
add
lcall
adc
aas
ja
lea
fistl
fs
movsl
fstpl
scas
mov
inc
sub
pop
add
or
pushf
add
jno
sub
lahf
mov
inc
icebp
mov
fisttpl
or
jno
cmp
jns
add
inc
outsl
popa
mov
xchg
add
lods
push
sbb
loope
loopne
sub
out
sub
jo
cmp
andb
mov
loop
out
mov
icebp
mov
xchg
into
ror
inc
and
movsb
loope
mov
roll
mov
stos
sbb
test
or
das
sub
xor
testb
dec
sbb
loopne
xor
add
daa
and
leave
xor
push
test
in
xchg
aam
add
cmc
inc
jecxz
scas
loopne
es
das
and
cmp
mov
dec
xor
leave
xor
insl
add
and
xchg
sbb
dec
and
xchg
mov
xor
add
jge
rcr
sub
adc
fsubrs
iret
dec
insb
in
cmp
out
daa
cmpsb
jg
iret
in
fbld
fs
int3
mov
cmp
dec
ret
lds
or
clc
sahf
insb
hlt
pop
gs
outsl
popa
insb
xchg
xor
push
sub
add
add
mov
mov
xor
aam
test
xchg
add
cs
out
mov
insb
sub
imul
hlt
enter
hlt
leave
rcll
mov
scas
mov
js
out
mov
push
jmp
pop
jno
lahf
add
stc
cmp
mov
ja
arpl
jo
dec
or
fisubs
sub
inc
add
adc
push
outsl
lahf
movsb
into
or
into
mov
popf
or
lcall
bound
dec
add
ret
and
scas
mov
popa
dec
inc
inc
int3
mov
pop
xchg
ret
aas
leave
jbe
imul
imul
push
dec
les
adc
push
aaa
dec
divl
pop
add
cmp
movb
dec
and
js
xchg
or
mov
iret
incl
adc
push
aas
outsl
xor
jle
pop
and
inc
pop
pop
sti
add
adcb
jnp
or
add
dec
arpl
dec
adc
stos
jns
and
mov
sahf
pop
push
cmp
mov
test
iret
lcall
xor
add
cmp
add
adc
lcall
add
xchg
imul
pushf
scas
rcr
test
mov
lret
test
fwait
dec
pop
subl
cmp
add
xor
data16
das
movsb
dec
inc
leave
addr16
dec
add
adcb
jle
lcall
jnp
ret
shll
cmpb
aas
leave
jg
mov
in
je
cli
mov
leave
jle
divl
into
inc
cmp
add
ss
icebp
fisttps
insl
sbb
push
push
aad
in
pop
adc
cs
out
sub
inc
sub
add
xor
cmp
sahf
xor
xor
dec
popa
dec
fwait
dec
push
dec
arpl
push
iret
cmpsl
test
sbb
mov
cmp
insl
pop
out
insb
stc
out
leave
mov
xchg
andb
add
mov
aas
arpl
add
jp
frstor
xor
dec
lret
xor
mov
dec
loopne
push
leave
loopne
pop
lea
add
pop
ljmp
int3
in
insb
in
mov
cmp
jnp
ja
clc
add
add
or
xchg
pop
or
sbb
cmp
mov
lret
xor
add
cs
test
test
jl
cli
into
outsb
cmpsb
sub
dec
mov
fiadds
pop
sbb
dec
mov
pop
sub
std
dec
jmp
mov
sub
iret
pop
inc
add
fwait
in
jno
cmp
jg
pop
push
jle
fnsave
xor
out
lock
in
mov
dec
inc
mulb
lret
jl
add
out
adc
fs
cmp
xor
dec
mov
lcall
std
mov
jae
insl
popa
clc
push
sbb
int
repz
xchg
xchg
int
ret
in
divb
xchg
lods
sub
push
hlt
adc
lcall
fstpt
hlt
inc
scas
into
xchg
xlat
orl
fdivl
cmp
shrl
add
mov
sub
clc
sub
int3
lahf
and
xchg
mov
mov
aad
mov
sub
xchg
xchg
mov
test
or
cmp
sub
les
clc
add
mov
or
decl
mov
dec
add
or
xchg
hlt
stc
aad
outsw
mov
in
andl
bound
pushf
add
ja
dec
int3
cld
sarb
xlat
cmp
add
test
test
push
cwtl
add
ret
xchg
inc
loopne
pop
aad
add
mov
pushf
inc
arpl
in
stos
mov
sub
sbb
ss
pushf
jle
jecxz
stos
cmpsb
arpl
xor
stos
pop
xor
pop
rcr
stos
ret
jle
outsb
popf
cmp
das
out
push
or
add
cwtl
push
popa
cli
subb
frstor
add
aad
push
inc
lods
sarl
push
mov
push
inc
nop
in
movl
pop
ds
out
xorl
mulb
shll
fucom
fwait
outsl
das
daa
add
dec
je
dec
push
and
or
pop
insl
pushf
in
sub
cmpsb
inc
js
jnp
cmpsl
fdivrl
mov
shl
clc
xor
mov
fcomip
std
stos
popf
cld
aam
ret
sub
cwtl
es
js
out
add
adc
pop
lods
mov
jns
mov
iret
push
xchg
pop
xchg
inc
aad
push
cmp
leave
cmpsl
mov
test
clc
mov
pop
pop
adc
imul
pop
xchg
mov
mov
jbe
add
sub
push
iret
cmp
sbb
adc
decl
leave
lahf
les
cmp
mov
add
popf
add
fcoml
add
cvtps2pi
push
add
int
cmpsb
aad
cmp
sbb
imul
add
popf
xlat
fs
lods
jns
in
xchg
hlt
lret
pop
mov
jne
jns
adc
cmp
cmp
popa
lahf
cmp
add
cmc
lret
xor
xor
sub
cs
dec
movsl
adc
sub
mov
je
push
push
mov
sub
daa
cmpsl
fsubrl
mov
fdivl
lds
xchg
call
add
dec
das
jbe
xchg
push
push
adcl
pop
jmp
loop
cmp
movsb
xchg
and
fs
mov
mov
mov
ret
mov
loopne
xor
ja
xchg
repnz
jb
dec
inc
fnstcw
popl
out
in
add
mov
fwait
xchg
add
jmp
popf
adc
sbb
jmp
and
add
lahf
mov
jl
movsb
daa
push
and
fnstcw
fmuls
cmc
ss
adc
mov
je
or
imul
in
pushf
and
gs
sahf
stos
add
sbb
ret
loopne
adc
jg
dec
or
ret
cmp
push
outsb
addl
or
jecxz
mov
xor
jl
dec
add
add
cmpsl
cmpsl
daa
mov
loope
dec
pop
movsb
cmp
outsl
dec
mov
loop
scas
add
or
cmp
add
jne
mov
cmpsl
pop
out
rorl
enter
mov
insl
repnz
lret
mov
and
add
fnsave
je
add
and
lahf
add
push
add
add
xchg
outsl
dec
add
int
push
call
fucomi
ficomps
add
ljmp
jne
ja
add
xchg
aad
push
push
add
dec
enter
enter
aad
add
in
loop
dec
roll
add
gs
and
int3
add
jbe
lods
add
rorl
add
cli
ss
jbe,pt
push
add
cmp
adc
xor
sbb
xor
cltd
sbb
inc
push
push
add
lret
add
cld
jo
push
add
push
dec
je
mov
insb
bound
xor
sarl
jae
ret
dec
jmp
add
mov
out
mov
iret
cli
mov
xchg
and
add
add
call
cmp
mov
outsb
lahf
pushf
xor
in
dec
adc
pop
orl
imul
jne
addr16
pushf
mov
jns
sub
aaa
xchg
leave
ds
xlat
pusha
fisubs
pop
jmp
mov
cmpsb
xchg
in
sete
inc
cmp
xchg
stos
leave
cltd
cld
jnp
hlt
sub
dec
addr16
add
xchg
out
outsb
dec
in
int3
dec
jl
adc
xor
jg
mov
add
les
int
arpl
ficoms
out
mov
add
into
push
out
mov
push
and
and
cmp
outsl
mov
jb
ss
mov
repz
dec
mov
push
dec
or
out
add
cmp
icebp
or
pop
add
imul
sbb
das
mov
lret
jmp
enter
xor
aad
jnp
divb
inc
push
icebp
inc
lods
loopne
mov
jmp
lahf
es
fidivl
push
mov
cltd
in
and
xorb
lods
push
jmp
jmp
mov
lods
in
jle
or
test
pop
add
xchg
bound
lods
int3
mov
leave
sub
lds
mov
jae
push
fs
xchg
cmp
jmp
cli
mov
add
dec
mov
pop
pop
adc
pop
cmpsb
push
add
popl
in
outsb
fmull
cmc
or
rclb
xor
fisttps
cmp
add
and
loop
cld
sti
push
or
adc
mov
jp
pop
adc
pop
or
jecxz
or
xor
sbb
ss
sbb
push
pop
push
add
and
in
dec
sub
inc
lods
popa
hlt
jecxz
ret
add
loopne
call
inc
int3
or
clc
inc
pop
inc
loop
flds
or
out
lahf
sub
mov
clc
and
cs
lahf
jge
add
cmp
jg
frstor
sbb
xor
test
or
mov
add
add
inc
and
insl
popa
jecxz
jmp
in
add
xchg
in
xchg
xchg
push
adc
vsubsd
push
sub
dec
xor
xorl
sbb
or
add
fsubr
and
pop
mov
and
mov
add
arpl
jae
cvtps2pd
jne
out
imul
ljmp
or
int3
jmp
push
sbbl
sub
leave
add
xchg
jae
call
xlat
ljmp
adc
imul
adc
adc
ror
and
inc
int3
mov
sub
dec
ljmp
pop
pop
lcall
out
dec
push
or
add
cld
push
nop
stos
in
pop
es
sub
or
mov
and
test
popf
leave
jne
dec
cmc
inc
std
movsb
test
mov
test
mov
inc
mov
outsb
add
outsb
bound
test
mov
dec
jp
aas
cmp
icebp
rcrb
adc
lods
negl
mov
fdiv
stos
pop
movsb
dec
dec
scas
or
add
dec
inc
xchg
in
xchg
std
adc
add
add
ret
iret
outsb
dec
jo
push
movsb
sbb
sbb
adc
sbb
sahf
xchg
xchg
lret
addb
test
lds
and
cmp
stc
flds
push
loop
sub
jmp
lret
add
mov
add
cltd
pop
cld
test
xchg
sbb
dec
cli
ljmp
mov
in
mov
push
push
xor
sbb
mov
sub
dec
sub
pop
push
xchg
rorb
outsl
dec
in
shl
shl
push
jbe
pop
sbb
xchg
lods
sbb
mov
mov
jo
movsl
or
testb
dec
out
sub
je
out
lods
outsb
pop
out
push
or
scas
ljmp
insb
test
pushf
ret
jle
and
xchg
div
iret
mov
mov
lret
lret
outsl
mov
add
pop
and
inc
push
gs
popa
movsb
pop
sub
push
pop
outsb
and
aam
mov
cmp
dec
hlt
ljmp
xchg
repnz
add
mov
cmpb
mov
scas
cmc
int
outsl
insb
test
fcoml
or
orb
aam
add
or
fsubrl
inc
lods
popf
test
inc
fisttps
xchg
push
or
xchg
and
popf
mov
sbb
inc
add
fildll
and
daa
jg
hlt
popa
shll
or
pushw
iret
mov
lock
in
sbb
andb
lods
das
mov
push
jae
out
outsl
ss
lret
into
sub
subl
in
pop
jmp
push
sar
jae
dec
push
sahf
mov
lret
pushf
add
gs
cmpb
out
pop
sbb
addr16
jecxz
test
out
sub
pop
add
aaa
xor
shr
mov
loop
xlat
or
fdivrp
inc
mov
or
pop
pop
out
and
dec
or
pop
test
and
ja
add
loopne
push
and
scas
sbb
push
mov
jecxz
push
rcl
movsb
sub
es
fcmovb
dec
movsb
jb
ficomps
and
iret
popf
cs
push
data16
xor
push
and
push
mov
push
sahf
sbb
adc
push
maskmovq
negl
xchg
fdivl
cmp
adc
mov
cmp
mov
add
push
jns
shll
push
jp
push
mov
cwtl
out
sub
jg
sbb
jp
jbe
mov
loopne
rorl
out
mov
dec
sbb
or
mov
add
fwait
lahf
cmp
xsaves
mov
sub
xchg
lds
aam
add
sbb
call
fwait
jae
adc
dec
sub
outsl
popa
addr16
aad
popf
xor
fstl
adc
in
lea
mov
shl
and
mov
add
loopne
stos
sub
add
push
dec
jge
mov
cmp
shlb
lods
xchg
icebp
sbb
in
mov
mov
sub
into
jnp
and
outsb
repz
inc
jmp
arpl
push
mov
aad
fidivl
notl
xchg
sbb
mov
popa
repz
scas
mov
fistpl
add
js
jp
mov
adc
jmp
incl
xor
add
mov
push
inc
push
inc
adc
jbe
loop
stos
clc
fs
xor
cmp
insb
stos
add
lods
jg
add
cmp
popa
aaa
stc
les
scas
and
add
cmp
fsincos
int3
pop
aas
mov
add
xchg
sbb
rcrb
push
mov
call
and
push
inc
imul
test
mov
incl
mov
mov
mov
rcrb
mov
pop
sbb
mov
adc
clc
jmp
aam
mov
adc
shrl
daa
frstor
mov
sub
mov
negb
cmp
and
cmp
icebp
nop
add
inc
and
jmp
dec
test
in
clc
cltd
push
int3
ljmp
sbb
test
mov
lret
jno
add
jl
push
inc
nop
sbb
pop
push
les
and
ret
mov
mov
push
fnsave
lret
sub
adc
mov
inc
scas
push
adc
xchg
xor
or
adc
add
push
add
enter
jno,pn
xor
and
dec
mov
popf
inc
aas
xchg
nop
inc
fwait
ret
jne
and
int3
push
clc
cmc
mov
pop
arpl
jae
mov
add
test
push
in
jp
cmp
mov
and
push
hlt
call
mov
cli
repz
mov
jne
out
mov
push
fsubrl
dec
inc
into
cmp
repnz
add
add
bound
xchg
ret
push
xor
jl
sbb
loope
mov
xchg
cltd
sbb
test
mov
lret
out
shlb
and
ret
lods
xchg
xor
sub
inc
pop
lock
clc
aaa
dec
xor
lcall
xor
jge
call
push
iret
sbb
cs
add
out
pop
scas
push
or
mov
leave
loope
add
adc
aas
lret
insb
add
xor
push
in
imul
rcr
sub
push
or
sub
data16
pop
jno
mov
fcompl
adc
int
mov
add
sub
mov
stos
xor
jns
mov
add
dec
out
out
push
icebp
dec
cmp
or
popa
movsl
or
and
add
add
fwait
outsl
stc
push
popa
add
fisubrl
dec
sbb
add
pop
aas
mov
cmp
lods
filds
mov
ret
fmull
dec
icebp
hlt
ret
leave
cmp
in
inc
rolb
arpl
sub
into
mov
push
in
das
ljmp
lea
push
lods
lock
adc
add
cmp
out
addl
mov
dec
shlb
pop
scas
push
pop
adc
jmp
xchg
stos
nop
mov
mov
cmp
nop
out
lret
xor
decb
testl
rcll
push
push
or
mov
int
das
jbe
mov
mov
subb
xchg
scas
fisubl
and
cs
adc
cmp
jle
pop
in
sbb
or
loope
pop
pop
lock
ss
out
xchg
je
test
iret
push
sub
push
lods
int
enter
call
jp
xlat
push
es
gs
shll
xor
mov
mulb
sti
inc
lcall
arpl
dec
neg
fisttpll
inc
repnz
in
fs
aas
push
inc
imul
das
pop
lahf
cwtl
ljmp
sub
aas
xchg
mov
and
cli
loope
test
jl
repnz
jmp
cltd
insl
test
repnz
dec
xchg
pop
or
mov
push
sbb
mov
add
ds
into
pop
cs
pop
xlat
push
outsb
out
int3
add
rclb
std
add
push
lahf
ret
jo
jbe
std
testl
or
inc
lea
mov
fisttpl
int3
or
mov
xchg
xor
sub
mov
ja
outsl
mov
inc
mov
ss
shll
mov
fdivs
stos
mov
aad
movzwl
iret
cld
sub
mov
aaa
aad
jmp
push
adc
push
movsb
les
pop
add
pop
jge
or
jnp
cmp
push
sub
push
inc
repnz
xchg
jne,pt
sahf
xchg
or
stos
adc
in
loopne
insb
sub
xchg
adc
or
push
inc
ja
push
jl
or
pop
jecxz
sub
xchg
ret
sbb
add
packuswb
push
adc
sub
or
test
pop
push
sub
aad
outsl
or
jb
sti
in
les
mov
and
sub
int
or
xor
xchg
pushf
add
jbe
call
fstl
xchg
pushf
outsl
sub
andl
movsb
mov
iret
mov
mov
or
push
mov
mov
ljmp
rolb
xchg
adc
int3
jp
mov
pop
sub
push
add
movsl
test
add
add
cmpsb
add
cmp
adc
leave
mov
xchg
cmpsl
dec
ror
push
mov
mov
mov
cmp
add
xchg
scas
jle
or
movsb
in
lock
push
cmp
outsb
daa
sbbb
adc
add
lock
pop
loope
pop
fsts
ss
adc
fsubr
stc
fsubs
push
imul
in
sub
cmp
jo
mov
inc
cmc
add
add
dec
lret
stc
adc
iret
or
mov
testb
rorl
sub
fucompp
xchg
xchg
sbb
std
push
std
mov
stos
sub
mov
xchg
leave
xchg
popa
imul
pop
inc
add
jne
adc
inc
gs
mov
mov
pop
or
cmp
hlt
xchg
sub
mov
in
iret
addr16
stc
into
pusha
ljmp
mov
and
jne,pt
add
iret
aas
repnz
cmpsl
rorb
xchg
fs
adc
push
xor
sub
popf
pop
dec
lret
sub
scas
add
int
scas
xor
outsl
cmpl
daa
push
test
loope
pop
and
rcrl
out
cs
repnz
lahf
xchg
adc
jns
aaa
xchg
call
jmp
lret
in
out
xlat
lahf
xchg
rclb
lods
stc
lret
push
mov
cmp
jl
add
xor
xor
enter
push
mov
push
sbb
test
imul
xor
and
inc
add
test
sbb
pcmpgtd
rcrl
add
leave
stos
addb
push
sbb
data16
cmovg
addl
int
sub
rcll
data16
pushf
lcall
out
pusha
adc
hlt
pop
mov
adc
std
dec
push
push
leave
jns
stos
mov
adc
imul
int
add
popa
pop
or
or
loopne
clc
pop
adc
in
sub
scas
jl
push
and
outsl
scas
add
add
push
jl
lcall
push
in
or
sbb
cmp
mov
fimull
ss
iret
fcmovu
ror
cmp
stos
out
xchg
bound
aaa
test
imul
sub
dec
sbb
add
leave
sbb
and
dec
clc
cmp
test
xor
push
sti
in
pause
shrb
pop
out
scas
sub
fstpl
sbb
rorl
cmc
adc
jp
mov
fiaddl
leave
add
push
sbb
test
gs
repz
add
adc
out
sub
gs
pop
sti
pop
jmp
sbb
cmpsb
imul
mov
jo
lret
add
and
add
insb
add
add
sbb
roll
sub
inc
fimull
sub
mov
jmp
push
add
testb
push
pusha
or
leave
out
sbb
add
sub
add
in
fcoml
mov
shll
mov
cld
in
cwtl
add
shrl
sbb
push
or
addr16
jl
inc
mov
xor
and
ret
add
aam
out
or
insb
in
push
stos
dec
inc
sub
call
lods
inc
mov
aam
sbb
cmc
lods
xor
xlat
inc
add
cli
and
add
sbb
lea
inc
fucom
add
mov
movl
cmpsl
fdivrs
sub
scas
outsb
jge
xchg
sbb
lret
sbbl
std
aad
push
imul
xchg
jbe
adc
jbe
je
popf
add
add
adc
or
leave
cwtl
add
cmpsl
stos
sbb
sub
flds
or
aad
mov
std
loopne
jl
ret
sahf
or
sub
fiadds
add
xchg
lods
adc
rcll
imul
mov
mov
add
mov
ljmp
mov
sub
ds
dec
xor
inc
push
push
in
adc
adc
add
pop
outsl
jge
push
adc
lahf
test
pop
mov
dec
dec
jl
outsl
movsb
fnstenv
push
add
fmull
fdivs
scas
lahf
int3
add
push
pop
das
xchg
add
add
jae
xchg
push
add
insb
imul
insb
dec
sub
movl
sarb
add
dec
pop
int3
mov
stos
sbb
add
v4fmaddss
cmp
out
and
jns
jg
cs
cmpsl
inc
push
imul
and
add
scas
nop
out
adc
pop
pop
cmp
pop
cmpl
push
add
pop
mov
cmp
adc
dec
mov
pop
aam
fwait
mov
add
hlt
sbb
pop
std
mov
jp
aaa
fnstsw
lret
daa
out
lcall
cmp
sbb
enter
in
xchg
jno
sub
inc
addb
shrl
mov
mov
lock
push
repz
push
cmp
idivb
push
mov
mov
cltd
jne
stos
pop
dec
in
add
cmp
outsl
fistl
push
push
add
adc
inc
add
push
out
js
imul
lods
mov
cmp
push
lea
cmpsl
sahf
das
push
or
call
inc
loopne
pop
xchg
adc
and
mov
or
pushf
adc
sub
test
inc
stc
dec
mov
les
push
add
pop
out
sub
jmp
cmp
jno
push
pop
sub
cmp
movsl
cmp
movsb
into
mov
gs
out
xor
push
and
cld
cs
sub
jo
in
pop
pushl
fbld
ficompl
sbb
push
int3
cmp
xchg
or
xorb
or
jno
sbb
adcb
scas
jg
sahf
push
cwtl
push
adc
add
cs
xor
cmp
divl
lock
loopne
int
add
clc
push
pmullw
mov
jge
lds
mov
and
sbb
and
outsb
ucomiss
mov
scas
and
nop
insb
je
lock
adc
push
or
add
sbb
in
add
insl
add
lret
insb
int3
inc
xchg
inc
cmpsl
push
xchg
inc
and
pop
ret
xchg
out
lods
add
rcl
dec
push
cmp
or
cmp
cmpl
xor
dec
pop
cld
add
sub
push
mov
outsb
stc
out
inc
xchg
clc
out
jge
ljmp
es
test
shl
add
mov
div
outsb
lret
mov
enter
in
jno
and
fs
arpl
sub
sub
dec
scas
fidivrl
fsubs
gs
int
aas
aam
stc
xchg
jb
std
cmp
stos
jo
rcrb
xlat
push
add
sub
cmp
xchg
fcoms
or
arpl
xor
xchg
addr16
into
mov
movsl
hlt
cmc
xor
mov
or
and
inc
xor
inc
dec
dec
jg
jmp
dec
hlt
test
pop
into
mov
cmpsl
jbe
pop
mov
out
sub
jg
add
ret
icebp
out
xlat
ret
data16
call
push
adc
inc
imul
sub
sbb
scas
lret
add
dec
adc
hlt
mov
push
xchg
call
and
fs
rep
xlat
add
test
jno
add
imul
jecxz
iret
fildl
add
movsb
inc
mov
loope
testb
lea
data16
lcall
lods
fwait
mov
sbb
add
xlat
dec
fdiv
xchg
pop
add
push
sbb
cmp
pop
orb
mov
aad
mov
test
roll
icebp
dec
lds
int3
push
xchg
push
cltd
lea
mov
movsb
cmp
cmp
adc
cmp
add
or
cmp
mov
inc
mov
add
mov
xchg
push
arpl
lds
pop
add
pop
and
adc
lcall
cmp
out
idivb
stos
incb
repz
add
xchg
sahf
add
std
add
hlt
or
bound
mov
fs
cmpsl
cmp
push
push
add
test
push
cmp
int3
popf
cmpsl
int
push
in
xchg
pop
sbbl
adc
jecxz
mov
mov
push
es
cmp
xor
push
pusha
xchg
xor
outsl
add
add
popf
jb
jb
testb
cli
pop
loopne
outsl
repz
test
mov
lret
push
subb
imull
xchg
nop
pop
jp
outsl
sub
mov
add
dec
pop
sbb
pop
add
xchg
in
dec
andb
je
iret
cmp
mov
add
push
hlt
out
jbe
adc
insl
lret
push
aad
or
mov
add
jae
add
stos
lds
test
pop
out
mov
fisttpl
mov
inc
jl
mov
add
or
mov
out
add
sub
push
or
or
loopne
repz
int3
or
iret
jno
add
aas
enter
lods
out
lcall
fdivs
clc
push
mov
sbb
sbb
jl
jge
ss
add
ljmp
aas
cmp
fdivl
js
push
ljmp
ret
push
add
mov
iret
add
pop
add
cmp
push
add
add
aas
mov
sbb
repz
popa
add
outsb
scas
and
lods
xchg
pop
xchg
std
out
lods
add
inc
outsb
adc
divl
sub
into
mov
imul
add
and
lcall
push
push
and
loopne
stc
add
xor
cmp
cmpsb
xor
add
pop
or
pop
scas
repz
mov
sbb
mov
add
add
dec
sub
out
or
add
inc
out
rclb
fnsave
ret
push
popa
fistpll
add
sbb
out
xchg
mov
repnz
cmc
ror
rorl
or
cli
call
and
jo
outsl
js
push
insl
pop
push
stos
cmp
sub
jmp
sti
mov
daa
add
das
testb
es
aam
xchg
gs
jno
push
or
repz
add
adc
shr
push
out
inc
add
add
int3
add
add
dec
xchg
or
scas
cmpsl
adc
add
dec
add
cmpsl
inc
or
and
in
out
nop
jmp
movsl
push
xchg
push
js
sub
add
xchg
in
and
mov
bound
outsb
xchg
mov
das
pop
dec
cmp
add
test
add
je
jae
mov
xlat
mov
push
cld
shrb
outsl
fldt
loope
or
lods
in
or
sub
mov
dec
add
xchg
daa
jge
cmpsb
dec
into
mov
fadd
testl
pop
loope
mov
movsb
decb
shr
mov
cld
add
aad
dec
pop
cmp
add
les
add
in
fmul
fisttpll
add
cs
push
add
and
add
push
ret
add
popa
cmp
pop
cld
jns
add
and
popa
in
or
jecxz
sub
cmpl
mov
pop
dec
mov
pop
add
xor
sbb
sub
icebp
popa
cmpsl
xor
mov
fnstsw
sbb
add
sub
aam
rcrl
cmpsb
pop
xor
fsubrl
icebp
add
outsl
test
push
iret
lock
add
pop
jae
rclb
or
cli
and
cmp
stc
adc
sti
jns
in
outsl
sub
movb
jb
pop
sub
imul
cmc
mov
sahf
inc
mov
sahf
or
add
shlb
pop
pop
fs
cld
push
xchg
int3
xchg
sub
jecxz
pop
push
std
clc
adc
out
cmpsb
jmp
pop
jle
inc
int
dec
adc
and
mov
xchg
cmc
shr
int
jge
xchg
int
cli
xchg
lods
dec
bound
scas
add
add
nop
and
frstor
pop
xchg
add
fcmovu
das
jp
das
jnp
sbb
rcrl
test
add
xlat
lahf
stos
testl
mov
or
in
aas
or
out
sti
inc
out
fisubrl
pop
bound
hlt
add
popl
rcl
lods
xlat
shrl
cmp
out
fidivs
shrb
dec
mov
repz
push
dec
pop
mov
xor
mov
outsb
add
test
ja
cs
sub
rolb
orl
xor
orb
sub
nop
mov
clc
add
insl
roll
push
iret
mov
lret
cltd
lcall
jge
ret
test
mov
push
cmc
filds
jge
aas
inc
rolb
cmp
xor
mov
cltd
and
sahf
in
mov
fldl
push
cmp
call
xchg
add
inc
and
imul
fistpll
repnz
pop
ficompl
mov
sahf
dec
ljmp
mov
inc
pop
mov
sbb
arpl
sbb
outsl
mov
lods
inc
jno
sbb
int
sti
stos
enter
jo
js
hlt
ljmp
pushf
add
cwtl
or
jne
xchg
mov
cmpsl
dec
jmp
ljmp
add
sub
cmp
pop
pusha
add
xchg
mov
adc
inc
push
mov
ret
fldcw
pop
sub
add
insl
xchg
out
fwait
clc
test
push
aad
movsb
mov
add
push
lds
cmp
fstps
dec
test
or
mov
dec
outsl
push
clc
inc
add
pop
jge
sbb
dec
inc
cmpsb
and
dec
inc
scas
sub
xlat
jno
in
lods
add
and
test
subl
lods
and
xchg
lret
orb
sbb
ret
push
fldl2t
nop
mov
xor
mov
and
insb
ljmp
test
push
adcb
add
sbb
insl
test
push
nop
jo
test
ret
arpl
dec
sbb
push
cwtl
mov
xchg
dec
xlat
pop
xor
aam
arpl
loope
popf
cmpsl
mov
aam
das
and
jle
fstp
das
cmp
add
inc
jge
push
pop
pop
pop
cmpb
iret
iret
fldl2e
rolb
mov
cs
push
clc
cmp
dec
sbbb
das
push
push
or
add
cltd
xchg
adcl
insb
je
out
xchg
mov
inc
ljmp
xchg
stos
add
sti
je
xor
clc
add
adc
mov
paddb
sub
push
or
jg
sub
lcall
int
int3
cld
mov
jns
ja
stc
xchg
or
add
or
cmpsl
hlt
outsl
iret
testb
lea
adc
out
push
out
leave
cmpb
fistpll
movsl
jno
or
popa
mov
mov
loopne
in
popa
imul
movsb
mov
push
insb
or
and
mov
jae
daa
pop
and
mov
add
xor
pop
xchg
mov
nop
lcall
pushf
jle
sub
or
mov
popf
cmp
orl
mov
in
add
out
es
cs
addl
xorb
int3
les
enter
mov
cmp
inc
aas
dec
cmp
mov
testl
movsl
add
outsl
mov
mov
add
shlb
shrb
sbb
add
or
notb
cmpsl
cmp
orb
dec
lahf
fsubp
popf
rcrl
mov
xchg
rcl
push
adc
aam
add
add
xchg
lea
inc
in
mov
mov
mov
inc
cmpsl
xor
or
jnp
xor
add
dec
push
jl
mov
mov
inc
sbb
and
fsts
in
test
ret
add
mov
scas
fnstcw
dec
cmp
lods
or
aam
jp
stos
cmp
mov
push
or
stos
loop
or
mull
inc
roll
add
stos
fisubs
add
lret
imul
sbb
in
mov
add
jo
add
lret
add
dec
dec
data16
cmp
cmp
dec
push
and
add
scas
lods
movsb
mov
jbe
cmp
testb
int3
mov
jl
mov
cli
dec
xchg
scas
mov
xchg
sub
add
sub
cmp
xlat
jl
movsb
add
gs
fs
add
push
inc
mov
rcrb
cs
push
inc
push
add
and
inc
cmp
push
jno
dec
or
xlat
and
add
xchg
xchg
loop
and
addr16
or
arpl
clc
loopne
aas
out
and
jbe
cmp
cmp
lcall
mov
xchg
mov
icebp
imul
js
call
jle
aas
cmp
sub
add
or
pop
cwtl
adc
mov
arpl
in
lock
rorl
xor
push
icebp
jg
pop
movsl
xor
cwtl
stos
sub
fsubl
lock
iret
int3
pop
leave
negb
je
mov
fldcw
cwtl
push
push
add
fwait
dec
dec
mov
mov
adc
sarb
cli
and
cmpsl
mov
mov
stos
dec
add
stos
popa
add
scas
icebp
xor
scas
sbb
dec
push
call
push
fdivr
dec
in
push
jle
jmp
mov
pop
dec
mov
xchg
repz
and
xchg
jg
sbb
mov
or
mov
xchg
jge
add
inc
sub
push
sbb
cmp
aad
add
out
add
sub
ljmp
icebp
or
xchg
movsl
cltd
outsb
div
and
test
movl
outsl
xchg
lret
lret
out
fsubs
dec
or
xor
loop
pop
jne
and
or
cmp
mov
mov
lea
add
call
imul
int
xlat
std
int3
sbb
sub
mov
rorl
call
in
daa
ret
stos
scas
test
dec
test
test
xor
or
in
dec
popf
jg
out
arpl
push
fsubs
inc
mov
xchg
sub
pop
xor
xor
fstpl
inc
leave
shrl
ja
jge
aam
rcrl
and
repnz
adc
cmpl
aas
pop
inc
add
adcb
xchg
xchg
mov
sub
adc
jb
sub
cmc
fldenv
push
aas
mov
fildl
dec
nop
xchg
loop
sar
push
repz
jmp
adc
or
add
ja
ds
mov
jmp
and
int
clc
mov
xchg
stc
push
in
arpl
cld
lods
mov
fcoms
iret
add
je
mov
inc
cmp
xorl
inc
outsb
jecxz
iret
or
and
dec
lret
jg
dec
lret
mov
fidivrl
add
jge
sbb
or
mov
scas
dec
add
jmp
jge
pop
add
shrl
add
jno
aaa
std
jae
xor
out
jns
dec
std
pop
dec
int3
iret
mov
cmp
mov
jmp
jg
mov
lods
dec
adc
pushf
lds
fldt
imul
test
hlt
in
xchg
into
fsubl
loope
add
sub
cld
lcall
xor
sbb
sub
or
cld
jecxz
add
sbb
lea
mov
pop
jbe
mov
dec
out
bnd
out
push
or
adc
es
dec
addr16
and
dec
push
mov
lret
mov
inc
mov
cmp
xor
xchg
fbstp
or
shl
add
in
xchg
or
aaa
pusha
add
popa
dec
push
add
cmp
rcrl
fs
or
xchg
in
lret
insl
mov
jno
inc
jle
cmp
int3
sub
mov
cwtl
incb
adc
daa
ficoml
add
fwait
inc
mov
and
repnz
cltd
ficomps
ljmp
addl
add
xchg
popl
mov
cmpl
stos
daa
xchg
aas
push
out
add
mov
push
pushf
das
xchg
add
cmp
stos
xor
pop
std
dec
sbb
xchg
cmpsl
sbb
xor
push
filds
mov
push
inc
mov
iret
cmpsb
add
mov
mov
cli
loope
jae
mov
jae
shl
fstpl
mov
mov
arpl
js
ret
pop
repnz
ret
test
dec
je
dec
and
bound
scas
orb
sti
add
xor
pop
push
and
nop
ret
pop
call
scas
add
out
in
scas
push
cmp
repz
xchg
mov
std
mov
aas
mov
fmuls
ljmp
cmp
mov
add
pop
jecxz
add
aam
xchg
arpl
sbb
sub
popa
cmp
push
ja
popl
push
push
dec
push
xchg
add
aam
add
enter
loop
jbe
fldl2e
push
add
ja
add
imul
and
dec
add
imul
in
add
mov
aas
scas
pop
shll
or
add
cmp
jmp
and
add
std
loop
pop
jbe
add
stos
loope
pop
inc
xchg
add
sahf
std
daa
add
ret
mov
cld
cmc
add
sub
les
ret
add
stos
lahf
sbbb
dec
add
scas
fstps
add
outsl
push
insl
insb
out
add
pop
je
les
out
adc
add
pop
add
add
or
xor
add
std
iret
cmc
iret
cmp
jo
iret
mov
lret
rolb
inc
and
add
out
inc
sbb
add
lret
pop
rolb
loopne
lods
cltd
push
push
xor
mov
addr16
xor
inc
data16
dec
sub
stc
and
add
movhps
xor
or
inc
jno
fmul
fdivs
add
xlat
xchg
daa
push
push
jne
mov
sahf
add
fs
add
jnp
ret
fisttps
xor
mov
aam
fildl
inc
lea
mov
cmpsl
cmp
mov
stos
xchg
rolb
cmp
mov
cmpsl
ds
sahf
sub
and
bound
sbb
ja
add
mov
cmpl
in
add
out
add
push
insl
jnp
adc
rcl
xorb
popf
imul
popf
scas
and
sub
lret
shl
xchg
mov
arpl
mov
lea
lret
pop
xor
fwait
outsl
xor
daa
adc
xchg
and
sarl
sub
arpl
lods
push
jb
scas
stc
stos
mov
in
subb
lcall
lock
add
cmp
xchg
in
test
and
hlt
push
stos
paddusw
cltd
mov
add
insl
in
lock
enter
mov
cwtl
mov
imul
inc
ret
ret
lcall
cmp
sub
lock
inc
subb
cwtl
les
subl
and
nop
cmpsl
ljmp
mov
xadd
fisubs
or
lods
or
out
std
lret
inc
test
and
insl
sub
add
int
outsb
push
cmp
int3
scas
mov
loope
pop
mov
xor
xor
jno
mov
adc
cmp
sbb
mov
jno
je
aam
lods
pcmpeqw
add
in
sub
scas
cmpsl
jecxz
add
and
repz
mov
lds
add
mov
xor
jge
data16
push
out
into
xor
jl
pushf
pop
jns
icebp
cs
fsubrl
ja
adc
or
mov
jecxz
mov
das
add
xor
cmp
sub
inc
dec
jl
stos
inc
adcb
jle
add
xor
jbe
xchg
outsl
inc
add
les
fmuls
sub
sbb
lcall
mov
pop
stos
sti
mov
testb
jecxz
xor
ret
test
mov
xor
mov
dec
jno
outsb
scas
insl
in
xchg
js
lret
sub
scas
add
jne
add
add
lock
add
pop
inc
inc
jbe
and
insl
shlb
movsl
lahf
loopne
dec
popf
sub
pop
inc
lods
push
and
pop
dec
test
cwtl
rcrl
out
fldenv
mov
add
pop
orb
sub
out
add
ss
addr16
inc
inc
xor
nop
iret
imul
in
add
mov
int3
add
jl
inc
xor
popf
orl
inc
orl
or
dec
out
fadds
sub
repnz
cmp
pop
push
jecxz
test
ljmp
movsb
inc
adc
mov
sub
inc
add
adc
test
xorb
add
cld
jnp
cmc
ret
xor
pop
mov
pop
out
sbb
push
out
add
je
xchg
cmpb
dec
mov
mov
mov
fbld
out
mov
arpl
xchg
mov
sbb
xchg
and
jns
xchg
sti
scas
push
pop
mov
mov
daa
and
sub
xlat
push
fwait
cmp
ljmp
in
add
xchg
inc
shr
xchg
inc
sub
add
sub
and
mov
add
or
or
cmpsl
mov
dec
inc
clc
mov
daa
pushf
add
daa
daa
ret
pop
push
fcomps
and
es
push
jecxz
filds
idivb
lods
int3
outsb
imul
xor
push
and
and
add
gs
dec
fdivrl
insb
lods
inc
jmp
mov
add
ds
fdivrs
gs
test
cwtl
call
popa
xchg
push
push
stc
dec
xor
dec
xor
clc
mov
loop
mov
mov
dec
sbb
lea
xchg
fsubp
xor
imul
ret
sub
xchg
jne
stos
nop
sahf
cmp
push
mov
or
or
lds
dec
add
test
leave
js
pop
lock
add
ljmp
pop
mov
jmp
pop
xor
out
rol
mov
gs
leave
or
push
rep
inc
insb
cmpsb
lods
add
test
push
mov
dec
push
pop
jo
or
add
std
xor
cmp
repz
add
addr16
outsl
call
les
mov
add
call
jae
stos
dec
xchg
inc
mov
inc
iret
push
sbb
repnz
jne
pushw
fsub
add
sbb
ret
mov
mov
lods
xchg
lods
xchg
mov
adc
sbb
add
cmp
sub
cmp
ljmp
dec
test
fidivrl
add
jns
cmp
pop
dec
dec
ljmp
fs
cmp
adc
push
js
and
push
aaa
add
mov
mov
adc
dec
push
xchg
fwait
xchg
add
in
rorb
pop
or
stos
or
ret
clc
shlb
lcall
idiv
rcl
jmp
fucomip
data16
cld
out
ret
je
mov
addr16
repnz
inc
mov
aad
lret
inc
repnz
add
rcrl
lds
in
ds
test
add
sbb
xchg
lods
cld
cli
push
fdivrl
mov
sti
fsubl
pop
fdivs
jo
jle
addr16
mov
test
adc
scas
xchg
lods
cmpsl
pop
jmp
or
jmp
adc
and
scas
xchg
sub
out
add
xor
cs
xchg
testl
hlt
mov
or
adc
dec
xor
dec
push
ret
ret
add
adc
jmp
push
clc
xor
mov
xor
imul
pop
dec
ja
ljmp
aad
addr16
fimuls
mov
jp
fmul
pusha
and
cmp
popf
push
testl
lcall
shlb
imul
sub
in
xchg
and
mov
xor
in
mov
in
xor
dec
adc
out
sbb
fwait
movsb
cmp
mov
out
xor
cmpsb
lods
dec
mov
cmc
stos
add
xchg
inc
movsb
mov
mov
and
add
stos
call
adc
jno
adc
jg
jae
scas
push
repz
negl
outsb
push
cmp
pop
repnz
and
mov
cmc
and
repz
cmp
jecxz
call
dec
push
cld
fildl
sub
hlt
jmp
xlat
std
enter
mov
inc
cmp
lcall
adc
stc
mov
jmp
cmp
sbb
mov
pop
mov
mov
sub
jg
addl
xor
pusha
add
add
mov
rorl
mov
add
xlat
push
test
push
pop
and
lock
xor
lods
shlb
int3
inc
or
and
dec
fldenv
gs
xchg
mov
cli
or
add
add
mov
mov
shrl
sbb
inc
hlt
push
dec
add
lcall
mov
fistpl
push
testb
sub
and
cmp
mov
dec
add
insl
fimull
arpl
lret
aas
in
fimull
inc
pop
mov
cmp
iret
test
push
fdiv
cwtl
sbbb
out
xlat
mov
adc
add
js
int3
adc
xchg
add
fstl
and
mov
xor
adc
add
pop
ds
fldcw
adc
inc
jle
cld
or
pusha
mov
adc
xor
adc
pop
xor
mov
mov
add
pop
bound
sub
mov
rcll
mov
hlt
test
mov
jmp
sbb
int
mov
in
fisttps
xor
nop
sbb
sbb
add
es
add
sti
mov
movsl
stos
sub
or
add
and
test
fistps
mov
pop
mov
jno
clc
cmp
lds
das
xor
mov
mov
cmp
rorb
jmp
imul
loope
pop
add
adc
cmp
and
call
cmp
dec
dec
dec
inc
mov
add
add
xchg
push
add
and
jne
scas
sbb
dec
pop
cmp
add
xor
adc
xchg
roll
pop
loope
out
int
in
js
int
std
cmp
outsb
push
jp
mov
push
shlb
push
adc
xchg
inc
cmpsl
inc
test
repnz
fs
add
adc
psubusb
addr16
aad
pop
adc
push
icebp
xor
dec
pushl
call
lret
std
xchg
add
cmp
aam
sub
cld
inc
mov
xor
arpl
jmp
ljmp
mov
call
jmp
adc
dec
xor
pop
inc
ror
add
fisttpll
test
adcl
outsl
or
add
and
push
andl
or
cmp
lea
xchg
mov
cld
mov
inc
iret
out
push
push
add
push
cld
add
mov
repnz
mov
push
lret
cmp
add
hlt
fbstp
cmpb
add
push
add
mov
cmc
jno
xor
or
hlt
push
loopne
aaa
jbe
mov
test
pusha
subl
pop
in
outsb
popf
pop
shl
push
add
sub
add
test
cmp
mov
pop
fwait
ret
fdecstp
add
insb
int
mov
sti
adc
imul
iret
cmp
pop
add
fcoml
pop
sbb
cwtl
push
jno
inc
nop
sub
sbb
fimuls
ja
insl
jno
fdivl
xchg
std
ret
stos
mov
adc
aaa
sbb
out
je
pop
insl
push
adc
fs
imul
adc
xchg
cmpsl
jl
adc
mov
dec
pop
lods
inc
lret
mov
outsl
xlat
or
in
test
divb
push
push
fidivs
or
add
mov
arpl
or
add
std
or
jle
add
pop
arpl
dec
xchg
aad
add
inc
sub
add
mov
mov
add
pop
ds
sti
arpl
out
xor
test
addr16
ficomps
inc
add
jmp
inc
cltd
add
add
out
clc
fwait
xor
pop
jbe
xchg
add
xchg
test
push
lcall
ljmp
mov
popa
add
jl
repz
sub
int
mov
mov
cmp
int3
mov
mov
jae
mov
jns
jg
nop
nop
nop
sub
jl
jp
popf
stos
add
mov
cmc
mov
sbb
inc
sbb
add
lea
dec
add
inc
mov
data16
and
insl
add
push
jmp
mov
jge
call
and
outsl
xor
push
xor
adc
bound
in
dec
fwait
push
inc
and
xor
mov
add
pop
pop
add
mov
movl
cmp
mov
jnp
repnz
roll
lods
jle
jnp
lret
inc
test
cmpsb
js
push
dec
aas
ret
sbb
into
sbb
inc
adc
or
sub
add
dec
xchg
int3
bound
dec
xchg
xor
in
scas
mov
and
scas
mov
call
inc
addr16
pop
adc
cmp
lret
mov
jb
xorb
sbb
pop
jl
jecxz
test
inc
scas
imul
sub
js
pop
jp
cmc
in
mov
jo
cmpsb
cmpsl
dec
clc
decl
or
repnz
or
jbe
gs
push
aad
sahf
or
jecxz
and
call
lahf
daa
outsl
repz
or
or
xchg
xor
and
jbe
sub
insl
or
in
popl
pop
out
add
repnz
orl
add
push
jg
fdivrl
mov
popa
adc
cmp
int3
imul
fwait
gs
adc
lahf
ljmp
sub
mov
inc
hlt
mov
xor
xor
mov
cmc
in
adc
inc
insl
mov
lcall
pusha
mov
cmpsl
pop
xchg
stos
or
push
xlat
ret
clc
xchg
cmpsb
stos
and
and
add
sub
int
out
pop
jae
cwtd
jmp
add
cmp
adc
jae
xor
mov
add
into
add
call
xlat
daa
mov
add
and
add
add
push
add
sbb
inc
out
shrl
xor
add
add
add
add
add
xor
cld
add
add
add
add
loop
add
nop
add
outsb
or
pop
in
add
ljmp
add
ljmp
int3
sarb
aas
mov
aaa
popl
cmp
bt
movl
xor
add
scas
add
dec
sub
lahf
test
cmpsl
push
aam
add
sbb
or
ret
inc
test
add
int3
test
cmpsb
add
cmp
repnz
nop
add
add
out
add
pusha
cltd
ljmp
cmpsb
imul
add
add
dec
add
xor
dec
push
add
add
add
jno
add
add
jne
or
add
push
add
mov
add
add
and
add
pop
ja
xchg
or
ret
dec
add
or
inc
stc
int3
outsb
pop
test
imul
pop
mov
add
add
inc
add
add
dec
add
add
ret
enter
add
add
add
add
add
add
add
adc
and
jg
loopne
stos
add
add
xchg
jo
add
mov
mov
or
add
test
lret
xchg
test
add
xchg
add
mov
popf
inc
mov
add
add
imul
cmpsl
add
add
mov
cli
stos
sbb
sbbb
pop
add
pop
add
mov
add
jae
test
add
add
jge
jecxz
add
cmc
jns
add
pop
add
cmp
mov
fldt
hlt
lahf
add
sbb
popf
jl
outsb
and
loope
add
test
rcr
add
add
add
jnp
dec
mov
jae
bound
mov
add
add
rolb
lds
sbb
pusha
fnstenv
lds
jbe
add
fistpl
add
cmp
aas
std
cmp
add
cmp
dec
cmp
and
mov
add
inc
add
dec
adc
dec
xchg
add
add
insl
lcall
add
ret
shll
push
mov
fdiv
add
jl
add
mov
test
add
cmp
adc
repz
add
out
ret
adc
fadd
bound
push
xchg
add
jbe
add
call
cmp
jge
ss
add
pop
jp
outsb
rclb
push
mov
add
add
fadds
xor
pop
add
pop
add
js
add
sbb
ja
add
test
pop
mov
add
cmpsb
push
cli
adc
add
ds
cmp
in
ja
std
mov
mov
add
loopne
rcr
add
filds
inc
add
pop
and
mov
mov
movsl
add
add
add
insl
cld
lret
add
mov
dec
cmc
push
add
cwtl
dec
pop
add
cmp
add
jne
add
fwait
add
add
add
add
inc
add
ret
add
mov
mov
add
loop
and
add
add
add
dec
pop
add
add
add
xchg
add
add
addb
mov
add
repz
dec
mov
mov
add
add
pop
add
adc
sub
add
sbb
lcall
add
sbb
add
add
jns
push
push
mov
dec
cld
add
cmp
cmpsl
pop
aas
add
add
push
cltd
in
adc
pop
iret
pop
adc
cmp
pop
push
add
fiaddl
outsl
filds
xchg
fldl
or
add
add
add
repz
push
mov
outsb
cli
add
lds
add
add
add
aaa
gs
sbb
cmpsl
stos
inc
push
popf
xchg
pop
faddl
lcall
mov
add
test
divl
add
mov
add
sub
add
jg
mov
add
add
add
adc
dec
mov
add
add
add
pop
add
mov
mov
mov
cmpsb
xchg
xor
out
jg
sarl
aam
add
pop
mov
push
add
jno
add
sahf
xor
sahf
add
inc
cwtl
add
add
add
flds
shl
add
xor
pop
aas
add
add
shlb
ja
in
add
xchg
push
imul
loopne
lret
repz
inc
hlt
fildl
std
pop
add
lds
sub
dec
in
add
cmp
incl
cmp
add
add
jl
andb
mov
add
inc
add
dec
adc
inc
xchg
add
add
add
ret
in
xchg
add
add
ret
shll
shlb
fdivl
add
mov
js
sarb
loop
test
arpl
add
push
add
pop
add
pop
add
pop
add
push
jae
movl
sbb
sbb
sbb
test
add
pop
add
add
cmpsl
add
neg
add
sbb
mov
sub
sbb
add
jbe
xchg
push
add
mov
stos
cmp
daa
cmp
jns
mov
fs
sub
xchg
add
add
lds
cwtl
add
push
add
lahf
add
faddl
sbb
into
mov
in
inc
add
sbb
push
mov
pop
incb
push
lcall
js
cld
in
adc
and
inc
mov
frstor
add
lahf
add
sahf
add
fwait
add
xchg
shrl
pop
add
ret
pop
add
xor
stc
mov
or
add
mov
loopne
add
xchg
mov
mov
add
roll
out
pop
add
pop
add
pop
add
pop
add
mov
dec
xchg
add
add
cmp
push
cmp
int3
jp
lds
enter
enter
push
add
in
push
lahf
add
fadds
leave
faddl
inc
jg
add
add
add
add
adc
pop
test
dec
mov
add
add
cmp
cmp
insl
xchg
add
sar
dec
test
mov
add
filds
std
fiadds
loop
add
pop
add
mov
add
add
jae
inc
repnz
incl
and
cli
add
add
xchg
add
add
add
lahf
add
adc
add
jns
add
add
mov
inc
add
push
jl
and
adc
add
xchg
add
add
filds
push
sbb
popf
sbb
sbb
sbb
pop
add
pop
add
add
mov
mov
xor
jmp
add
add
jle
add
pop
jl
or
jb
outsl
add
lds
mov
cli
add
add
add
aaa
add
add
or
imul
jge
add
add
popf
add
add
or
add
add
mov
mov
mov
mov
add
test
loop
call
aaa
add
cmp
outsb
cmc
add
mov
add
add
jo
int3
jns
int
add
fs
add
add
add
dec
add
repnz
cli
add
cli
add
add
inc
add
cltd
adc
lret
cmpb
cmp
add
and
mov
add
pop
add
add
pusha
add
sbb
das
push
add
out
outsb
push
cmp
insl
push
ljmp
cmpsb
sub
or
add
into
xor
or
inc
or
push
iret
dec
pop
int
pop
lret
xlat
popa
add
lods
fs
outsl
push
or
cli
jne
push
nop
cmpsb
push
nop
and
scas
fnstsw
sub
stos
sub
sub
mov
test
add
jbe
jo
push
movsl
orb
push
lds
lret
ffree
daa
stos
or
push
shrb
and
xlat
test
test
mov
ljmp
aas
jb
xor
test
xor
dec
dec
into
hlt
dec
cli
dec
lret
enter
dec
imul
lds
push
or
and
adc
cli
lods
sub
xor
enter
xor
jp
inc
add
cmpsb
dec
add
int3
add
adc
push
mov
stc
pusha
pop
add
add
add
imul
add
mov
repnz
add
addl
ja
fiaddl
add
pop
mov
lods
popl
nop
lea
xchg
mov
push
andb
insl
add
movsb
cli
xor
shlb
xchg
out
add
jmp
fwait
push
int
mov
adc
add
add
ret
iret
add
add
dec
add
xchg
add
or
adc
mov
subb
test
add
out
stos
lods
add
addr16
add
add
testl
or
int3
xor
add
hlt
pushf
mov
fcoml
fistl
inc
push
add
add
outsb
add
add
jne
jmp
test
dec
mov
mov
inc
jns
add
add
pop
add
add
adc
testb
mov
add
add
stos
add
add
mov
addl
ja
addb
sahf
pop
mov
in
add
lea
jmp
cmpsb
add
add
add
sub
sub
movsb
ljmp
in
add
add
xchg
fisubs
add
add
or
loope
add
add
add
add
add
jae
add
add
mov
xchg
mov
fmull
ret
mov
add
xchg
add
leave
add
add
add
fwait
scas
add
scas
add
stos
add
sub
sbb
add
add
ret
iret
add
add
lret
xchg
arpl
xchg
add
cmp
add
add
out
add
mov
cmpsl
add
add
add
xchg
mov
into
mov
add
or
stc
cld
or
add
add
jmp
add
push
xor
add
sbb
add
sub
sub
add
push
add
mov
jne
add
mov
in
mov
add
add
add
enter
add
add
add
nop
add
nop
add
outsb
add
pop
outsb
add
imul
call
dec
icebp
xor
sahf
test
stos
mov
push
test
sbb
pop
cmp
add
add
push
add
add
add
add
sahf
int3
add
xlat
test
pop
push
add
sti
xor
xchg
dec
add
or
es
push
add
add
lret
xchg
inc
dec
add
jecxz
mov
add
add
out
add
add
add
cmpsl
add
add
leave
add
add
mov
add
or
fimuls
add
or
add
out
mov
jno
push
add
push
xchg
add
xchg
bound
mov
dec
popl
iret
jmp
jp
repnz
aad
movl
adc
bound
add
push
scas
aam
pop
das
sub
jo
dec
lcall
test
jg
mov
add
daa
movaps
mov
mov
inc
pop
movl
sahf
dec
sbb
and
adc
in
in
out
ljmp
and
add
add
fists
cmp
xchg
dec
add
int3
inc
mov
cmovnp
dec
xor
xchg
mov
and
jb
sub
mov
add
lret
out
repz
inc
out
or
iret
lods
or
lods
mov
lret
lds
ret
mov
dec
mov
lret
insl
data16
enter
imul
out
stos
sbb
and
ja
jne
jecxz
dec
inc
push
dec
mov
int3
dec
or
cmp
xchg
int
cmpsb
xchg
sub
rcrl
cmp
or
add
xchg
jbe
hlt
lods
and
test
mov
imul
or
out
mov
and
pop
shll
nop
adc
mov
shr
psubd
mulb
pop
mov
xchg
xchg
mov
push
popf
xor
loop
hlt
sub
int3
or
aam
iret
mov
ret
dec
add
jge
push
je
ljmp
mov
mov
scas
xchg
mov
add
jecxz,pt
mov
push
push
ja
sub
popf
jno
cmp
jnp
mov
add
sbb
movsl
mov
in
xchg
add
mov
sub
push
jp
xchg
xchg
mov
push
addb
add
int
or
cmpsb
lock
dec
std
ss
add
add
call
daa
lock
ja
add
clc
add
test
xor
add
les
stc
test
push
push
inc
pop
sbbb
add
rclb
mov
lock
lock
in
add
push
andl
inc
cmp
push
mov
or
and
pushf
jmp
xchg
clc
xor
and
mov
push
sahf
mov
xlat
int
fmulp
dec
stos
lret
mov
out
fmuls
mov
shlb
jbe
dec
dec
pop
add
std
scas
test
mov
jge
psubq
lret
aaa
js
or
ds
jg
mov
dec
cwtl
or
orl
add
xchg
mov
adc
and
push
in
mov
ds
outsb
insb
sbb
add
mov
movsl
sub
xchg
std
std
push
and
or
add
dec
cmp
cwtl
outsl
cwtl
andl
inc
and
and
jmp
in
or
les
pop
and
and
sub
scas
add
mov
adcb
push
xorb
lea
dec
int3
or
or
cltd
sbb
pop
jge
pusha
push
sub
pop
mov
cmp
jmp
out
dec
pop
add
fwait
jecxz
xchg
add
mov
or
add
xor
mov
mov
mov
jmp
mov
into
mov
in
sub
adc
sbb
sub
add
mov
inc
mov
enter
xor
mov
in
xlat
lret
cld
imul
mov
mov
mov
insb
cmp
iret
jae
mov
in
leave
sub
shll
dec
lret
data16
iret
gs
push
adc
push
or
cmp
test
push
inc
mov
addr16
out
pop
dec
jmp
rcl
push
push
in
and
loopne
fists
add
push
out
or
dec
sub
pop
or
mov
rolb
adc
lahf
aam
cmp
add
pop
push
andl
enter
adc
add
cs
pop
fcoms
add
test
insb
nop
sahf
mov
int3
lret
cmpl
mov
iret
dec
insl
lret
in
push
mov
sub
push
rolb
jg,pn
add
inc
in
add
scas
cmp
popf
push
add
in
ret
or
sub
mov
data16
jl
jbe
rorl
fcoms
adc
sbb
sub
pop
repnz
pop
xchg
pusha
mov
into
mov
sub
xor
in
es
iret
inc
insl
ret
inc
mov
in
popf
add
xchg
add
add
popa
cld
ret
and
icebp
mov
sbb
mov
mov
aas
mov
mov
inc
mov
or
or
xor
add
dec
sbb
add
iret
fbld
push
inc
aam
push
add
arpl
call
mov
lds
mov
arpl
or
fs
repnz
jae
jmp
aad
std
mov
xchg
mov
into
mov
lea
out
mov
out
cmc
addl
add
lea
add
or
mov
add
adc
or
adc
test
shrl
nop
addr16
arpl
adc
cmp
mov
xor
add
mov
jo
xor
std
add
pop
cmpsl
inc
mov
mov
popa
sub
outsl
out
push
or
add
notb
or
jmp
out
cmp
add
cltd
out
lds
and
jbe
hlt
mov
pop
xchg
into
add
or
movsl
add
rcrl
insl
add
roll
sub
lahf
mov
add
mov
add
cmp
add
add
mov
lret
mov
into
lret
aad
xchg
mov
jns
and
movsb
jle
stos
jbe
dec
cltd
push
sahf
mov
inc
popa
lods
mov
xlat
add
sub
out
add
jns
add
test
lea
mov
jmp
mov
push
sahf
and
fsubs
push
rcrl
or
jb
insl
sbb
sbb
fs
mov
dec
add
or
sbb
push
push
push
pop
xor
mov
push
dec
xor
or
aam
jae
rorb
jl
inc
mov
sbb
xchg
cmc
clc
sub
sub
sbb
les
int3
jnp
cmpsb
inc
cmp
enter
aam
dec
mov
loop
push
adc
add
mov
cmp
std
filds
test
sub
adc
imull
lret
cmpsl
push
cmp
xor
mov
scas
mov
mov
out
pop
pop
dec
int3
sarl
scas
shll
popa
sbb
lahf
mov
adcb
arpl
dec
test
sub
sub
jle
movl
add
mov
add
jno
js
add
xor
dec
mov
dec
mov
dec
outsb
pushf
pusha
add
roll
les
add
loopne
push
dec
push
mov
insl
mov
mov
fwait
pusha
xchg
in
xor
add
pusha
and
push
lret
inc
add
das
inc
xchg
stos
sbb
fwait
xchg
outsl
loopne
jg
imul
push
adc
bound
loop
add
inc
lds
aad
dec
stos
lret
es
shufps
mov
add
mov
into
rorb
cmp
add
add
add
daa
add
dec
add
add
add
data16
add
mov
lcall
out
add
mov
add
add
add
cmc
add
rolb
jle
add
fwait
scas
jmp
stos
add
sub
adc
shr
add
inc
add
ret
iret
add
test
enter
add
add
add
mov
lods
jae
ljmp
in
add
jmp
repnz
inc
add
add
xor
ss
add
add
je
adc
xchg
add
jne
out
push
add
push
add
out
add
add
add
out
repnz
addr16
add
mov
xchg
lahf
dec
add
dec
add
decb
andl
jl
pushf
call
mov
or
jnp
add
add
icebp
inc
add
add
add
mov
roll
lret
inc
rorl
or
insb
xchg
add
leave
add
cmc
add
add
jb
add
scas
add
add
out
int
add
add
add
ret
popa
sub
add
dec
mov
cmc
lret
xchg
mov
fsubrs
pop
xchg
add
arpl
jo
popl
imul
and
add
cmp
push
add
add
add
lds
add
add
add
cli
repnz
adc
add
push
add
add
das
add
add
test
insb
xor
add
inc
add
testl
inc
add
add
add
pop
add
pop
add
add
arpl
fstl
add
lods
xchg
out
add
outsl
add
insl
add
inc
add
daa
add
dec
add
enter
add
aad
lea
out
add
and
mov
add
inc
out
and
scas
add
push
add
sub
add
call
xor
stos
inc
add
iret
add
stos
testb
inc
test
rcll
lock
add
movb
mov
sub
shll
enter
cwtl
push
add
pop
add
rcrb
pop
add
icebp
faddl
scas
mov
inc
xchg
js
add
jg
push
jge
dec
jp
push
dec
aam
shl
add
and
bound
add
dec
pop
add
push
add
jns
lret
xor
add
icebp
add
push
sarl
cmpsl
ret
mov
add
add
test
lret
loopne
inc
rcr
add
fiadds
into
fildl
stc
pop
add
add
add
mov
add
repnz
cmpsl
incb
jle
cli
add
push
cmp
mov
rcl
add
add
mov
push
popf
add
sbb
mov
add
mov
or
add
mov
scas
mov
add
add
jecxz
filds
inc
sbb
popa
sbb
adc
lds
pop
add
pop
add
pop
add
xor
popf
les
adc
mov
add
xor
push
jle
cmp
ret
mov
add
add
add
lds
sbb
add
and
cli
pop
sub
pushf
fs
sbb
jbe
and
hlt
add
add
clc
add
ds
decb
add
cmp
and
add
sbb
dec
roll
pop
daa
cwtl
add
pushf
add
fmulp
inc
lret
in
add
add
xor
aas
arpl
add
es
add
scas
cltd
dec
dec
fwait
mov
dec
xor
xchg
xchg
add
ret
int
scas
push
add
fildl
leave
dec
addr16
inc
out
jle
cmpl
fistpll
cmp
mov
mov
mov
ljmp
pop
scas
dec
mov
jno
sub
pop
mov
and
dec
add
or
cmp
or
sbb
roll
add
add
loope
andb
popa
add
mov
inc
add
jecxz
dec
mov
cmp
add
add
add
add
jmp
movb
bound
dec
insb
push
add
xor
add
pop
sbb
test
add
add
add
add
push
add
arpl
jp
add
dec
mov
int
pop
loope
add
repz
add
scas
in
jnp
stos
test
add
sbb
ret
inc
in
jecxz
scas
mov
cld
sahf
mov
mov
inc
add
stos
cmp
rorb
jbe
incb
cmc
add
shlb
test
int3
dec
xchg
fiadds
daa
jecxz
decl
aad
cmp
ja
add
mov
loopne
mov
add
add
fbstp
push
out
test
dec
cmp
dec
mov
push
loope
inc
in
add
aaa
dec
jl
fs
mov
outsb
es
and
mov
es
add
pop
dec
and
cmp
shll
dec
dec
cmp
jge
push
fisubs
adc
add
lds
adc
mov
ljmp
bound
dec
xor
pop
jne
add
pop
leave
mov
mov
orb
add
xchg
adc
jbe
lods
inc
loopne
mov
mov
lcall
xchg
add
pop
push
testb
aam
scas
stc
outsl
cmpsl
dec
mov
add
mov
call
and
push
out
sbb
outsb
sbb
push
mov
add
cmp
mov
loopne
cmpsl
lds
adc
sbb
jge
xchg
jae
outsl
pop
arpl
repz
xchg
stc
addl
cwtl
inc
and
add
adc
arpl
add
jmp
mov
push
xchg
mov
mov
add
cs
cmp
insl
adc
mov
adc
loopne
loop
xchg
leave
mov
or
stos
or
jg
insb
dec
inc
test
addl
jae
sub
push
scas
shl
jg
iret
stos
orb
add
js
cmpb
jbe
rorl
xor
xchg
movsl
dec
movl
sub
push
mov
jb
shrl
verr
ja
aam
or
mov
fsubrl
add
add
mov
or
addr16
mov
fcmovbe
sti
mov
test
testl
sub
lods
push
push
push
xor
sub
or
aas
add
or
ret
adc
jns
movsb
mov
xor
or
leave
or
push
cmpsl
incb
lret
adc
adc
repz
xlat
and
push
adc
mov
add
inc
fdivl
int3
or
test
filds
stos
iret
je
clc
xlat
mov
dec
std
or
jle
cmp
js
divw
mov
sar
cld
loop
ss
mov
decl
cltd
mov
jb
hlt
mov
mov
pop
add
mov
loope
mov
xchg
xlat
decl
sti
lds
add
aas
add
cs
add
into
iret
cli
mov
cli
sub
dec
mov
mov
jae
negl
add
out
xchg
loopne
mov
rol
arpl
add
xor
add
add
jg
add
jo
add
push
add
add
fmuls
cmp
sbb
cmpsl
in
add
mov
add
adc
mov
add
pop
pop
inc
dec
pop
pop
add
adc
add
les
xor
mov
mov
mov
add
push
push
dec
ja
or
dec
dec
addr16
cs
jp
addr16
aaa
inc
loopne
add
xor
mov
add
insl
callw
sbb
icebp
popa
sub
xchg
ret
add
mov
mov
lret
daa
arpl
xchg
cwtl
aam
shrl
push
add
int3
iret
fcmovb
add
out
dec
xchg
cmpsl
rorb
addr16
dec
jbe
testl
pop
sbb
add
into
in
sti
add
cli
out
leave
out
mov
int
mov
xor
outsl
insb
jecxz
push
mov
and
cmp
add
sbb
add
outsl
add
add
out
xchg
add
add
or
dec
int
pop
and
lods
rolb
xchg
mov
test
add
mov
sub
inc
stos
pop
imul
adc
test
push
pop
int3
dec
sub
jge
orb
add
mov
es
mov
stos
test
cs
in
mov
orb
add
and
xor
je
iret
xor
or
mov
sar
inc
or
mov
pop
add
and
push
add
pop
adc
add
out
loop
popf
or
add
out
jle
and
jnp
repz
inc
imul
in
loopne
clc
or
jmp
pop
inc
in
stc
jnp
add
xchg
xor
es
sbb
or
cmp
loope
pmaxsw
mov
cmpsl
add
xchg
gs
jge
mov
jl
or
inc
add
das
pop
add
dec
call
movsl
mov
hlt
jl
fcompl
dec
adc
ss
add
aaa
sub
jns
add
add
test
add
mov
jno
mov
pusha
jge
mov
add
push
incb
or
stos
xchg
adc
mov
cltd
insl
in
enter
in
cmp
jb
idivb
aad
data16
iret
mov
repnz
faddl
inc
mov
or
out
add
adc
sub
pop
or
dec
scas
mov
into
fldcw
add
dec
xchg
or
outsl
dec
add
add
lret
jecxz
jmp
lods
mov
loopne
mov
add
xchg
dec
and
inc
popf
inc
jns
mov
add
lret
jmp
popf
mov
pop
and
xlat
sti
insl
push
xchg
imul
outsl
inc
add
daa
mov
ret
out
add
into
sub
lock
jg
dec
inc
cmp
daa
insb
pop
or
add
ret
mov
jge
push
adc
jle
push
inc
outsl
data16
jp
sahf
daa
aad
sub
ss
stc
or
icebp
imul
add
in
orl
inc
les
add
xor
fld
into
ret
xchg
push
stos
iret
int
pushf
call
add
adc
rolb
ret
add
sub
mov
mov
sub
mov
insb
movsb
cmpsb
mov
mov
adc
insl
jae
xchg
jmp
xchg
insb
mov
mov
in
add
fcmovnu
lea
ret
add
add
add
int
dec
jnp
test
je
scas
arpl
add
cld
add
lret
aas
shrb
daa
push
arpl
lea
jg
mov
int
add
xchg
sti
test
push
or
sub
sbb
mov
shrd
shr
or
mov
into
or
dec
add
xor
popa
jecxz
add
mov
ss
xchg
insb
int3
fsubr
jmp
imulb
mov
sbb
xchg
sbb
add
add
into
sub
fwait
mov
sub
movsb
movsb
scas
insb
lret
pop
insl
ret
or
addb
add
xchg
fisubrl
dec
or
movsb
mov
inc
lahf
movsl
add
hlt
bound
scas
jle
add
out
pushf
orl
in
into
movsl
lock
xor
inc
pusha
in
add
gs
fs
in
mov
jle
ret
andnps
jp
pop
mov
add
dec
push
jae
pop
jmp
sbb
inc
aas
std
xchg
add
testl
push
add
inc
int3
push
jmp
loope
je
add
xchg
into
push
add
stc
icebp
push
syscall
incb
lea
out
addr16
pop
jl
aad
call
add
lret
mov
lcall
stos
pop
out
or
sub
fnsave
test
std
jne
les
pop
pop
mov
ffreep
mov
mov
fadd
aaa
mov
inc
add
inc
test
cmp
ds
test
lods
jecxz
ret
lret
ffreep
lea
mov
inc
add
lea
test
sbb
pusha
cli
nop
lods
dec
lahf
cltd
hlt
cld
incl
jmp
cmpsb
out
cmc
sub
pop
adc
pop
jl
mov
pop
cmp
dec
insb
scas
lods
data16
sbb
jl
push
pop
pop
imull
mov
xor
and
mov
push
dec
int3
aad
push
mov
cld
xabort
jb
lods
mov
out
xchg
cmp
sbb
and
sub
pop
inc
or
pop
xor
les
mov
xchg
mov
add
jge
sahf
mov
push
clc
lds
inc
cmpsb
mov
call
and
nop
into
xchg
sbb
stos
pop
mov
inc
call
out
dec
mov
lea
nop
mov
jge
mov
add
cs
add
xorl
dec
pop
mov
test
lods
stc
and
loop
push
mov
mov
cmpsb
inc
les
rorl
xchg
out
push
add
add
or
hlt
or
inc
pop
push
insb
add
cmp
repz
mov
add
pop
mov
loop
cld
adc
add
pop
cmp
aas
js
and
jmp
or
test
adc
pop
inc
stc
sub
xor
xor
cs
add
cltd
test
or
jb
add
or
sub
jmp
mov
mov
fidivrs
mov
add
sbb
movsl
jno
add
inc
and
mov
ret
cwtl
fidivs
jns
mov
add
mov
or
xor
fs
add
out
imul
scas
cld
lret
jnp
scas
lds
popf
sub
fistl
jp
push
je
ljmp
ret
sti
jg
xchg
test
mov
pop
ljmp
push
inc
add
daa
dec
fs
add
mov
inc
xor
scas
adc
add
ret
jnp
imul
add
xchg
add
add
jp
std
mov
jge
ret
sub
jge
add
xor
jns
cmpsl
fdivl
clc
je
or
lahf
out
test
jo
add
push
push
or
pop
dec
jno
insb
push
adc
pop
stc
insb
and
ficoml
loopne
add
and
mov
jl
cmp
test
mov
ja
ret
lcall
fcompl
les
add
add
ds
mov
add
xchg
dec
push
sub
test
stos
shlb
add
jle
sahf
add
mov
push
cmp
cltd
xor
push
jno
sub
in
jecxz
int3
in
cli
sub
add
jnp
icebp
fldl
insl
add
sahf
insb
sbb
sub
fldl
or
add
cli
rcrl
aam
mov
call
movsl
int
add
dec
mov
fists
mov
xor
push
add
cli
mull
hlt
add
cwtl
jmp
mov
inc
inc
insb
inc
fstl
clc
clc
outsb
xchg
jo
mov
add
test
mov
add
call
fists
hlt
dec
add
loope
gs
lret
movsb
add
pop
add
mov
mov
xchg
add
jl
inc
loope
out
add
cmpsl
ret
inc
mov
sahf
iret
test
push
out
xchg
pusha
push
add
loopne
aad
pop
mov
js
mov
popa
fcmovnbe
mov
insb
mov
inc
jmp
xlat
mov
push
add
add
xlat
loopne
xchg
lea
movsl
mov
daa
push
jmp
dec
dec
push
add
or
add
outsl
sbb
sub
aad
xor
cmc
xchg
inc
scas
jl
or
lods
bound
cmp
pop
dec
sbb
mov
or
mov
or
pop
add
aam
dec
add
inc
inc
add
je
bound
pop
pop
add
add
insb
iret
xchg
add
addb
add
add
jnp
bound
outsl
sbb
incb
and
dec
mov
cmp
add
stos
ret
add
xchg
ret
and
xchg
jns
shrb
add
mov
mov
fldcw
add
jle
out
inc
pop
movsl
adc
add
xchg
lods
jmp
out
fadd
into
add
jnp
mov
xchg
sbb
ja
sub
inc
daa
add
lret
ljmp
insl
movsl
movsl
mov
and
insl
push
or
inc
sub
sub
sbb
ljmp
xor
add
mov
insl
inc
aaa
cmp
or
and
das
int3
lret
scas
in
jecxz
out
and
fucomp
in
sbb
jg
mov
aas
arpl
call
mov
xor
add
add
dec
dec
cmc
outsl
mov
cmpl
pusha
or
jp
lret
add
and
adc
icebp
lods
add
test
fldenv
add
insl
call
pop
xchg
dec
sbb
mov
out
mov
push
jg
fisttpll
pop
into
cltd
jle
dec
dec
sbb
adc
sbb
cld
insl
mov
aas
inc
scas
add
scas
pop
inc
stos
mov
loopne
sub
inc
daa
and
mov
insb
xor
pop
arpl
aam
movb
std
testl
dec
aad
push
subl
push
test
in
cmpsb
lds
inc
dec
test
inc
xchg
insb
fcmovnb
outsb
faddl
mov
dec
ja
mov
pop
stos
scas
setno
lcall
pop
testb
gs
das
mov
cs
sub
pusha
fldcw
in
call
in
jge
add
pop
jg
or
in
jbe
je
inc
call
rorl
aad
xor
int3
cmp
add
or
shr
or
sub
mov
sbb
fisubrl
add
add
add
pop
test
jmp
cli
cmp
sti
xchg
cli
scas
cld
movsl
jle
add
xor
loopne
bound
int3
cmpsb
pop
and
pushf
adc
js
pushf
jne
add
pop
sbb
add
xor
add
jnp
mov
mov
mov
pop
add
mov
xchg
add
mov
lret
pop
ret
pop
flds
pop
pop
sub
dec
inc
cmp
xor
adc
scas
clc
loope
aas
int3
hlt
or
dec
jb
add
jbe
je
jb
add
test
cmp
xchg
scas
test
xlat
add
pop
adc
add
adc
add
dec
lea
adc
addr16
sbb
incb
aaa
repz
or
xor
add
imul
sub
mov
mov
adc
add
nop
shrb
in
xchg
add
mov
ja
lods
mov
push
add
adc
sub
and
aas
add
mov
loop
inc
cmp
mov
adc
sbb
out
loop
sti
add
adc
ror
push
std
add
scas
jbe
add
inc
mov
add
jns
xor
call
jecxz
ret
add
pop
je
inc
push
pop
add
sub
push
mov
ret
aas
fidivs
xor
mov
jne
je
jne
add
jb
mov
fisttps
xor
iret
xchg
add
shr
cwtl
call
add
xor
or
pop
push
sbb
call
add
pop
mov
dec
movsb
int3
testl
xor
xchg
lods
mov
sbb
in
test
fistpll
xchg
rcll
shr
shl
imul
mov
add
mov
add
xlat
sti
roll
ljmp
add
fsubl
add
adc
cld
shrl
xchg
adc
fwait
dec
popf
test
lcall
add
cmp
add
loope
xchg
add
or
xchg
push
je
shll
xchg
outsb
cmpsl
push
mov
push
adcb
addr16
je
cwtl
mov
scas
cwtl
dec
in
push
ds
mov
divl
jo
jo
insl
jae
jne
test
add
add
adc
xchg
fcompl
dec
push
pop
add
scas
sbb
pop
add
popf
sub
sbb
add
cmc
in
stc
data16
add
mov
cmp
add
cmpb
jne
daa
sub
xchg
xor
std
cli
mov
fwait
inc
push
adc
add
fcmovu
fadds
faddp
adcb
pop
cmp
pushf
test
add
test
add
sub
jle
mov
fadds
push
cli
fistps
mov
push
repnz
lcall
xchg
xchg
sub
adc
lahf
add
mov
mov
mov
push
mov
add
push
lods
adcb
insl
pop
xor
add
fcomps
push
rsqrtps
add
push
jl
ficompl
cmp
mov
push
loope
sub
push
idivb
add
jle
jl
jp
mov
xchg
push
or
xor
mov
les
sub
push
aas
pushf
inc
jb
cwtl
pop
add
sbbb
les
std
aaa
adc
mov
mov
aas
push
mov
jno
mov
popa
mov
jecxz
ficompl
fisttpl
faddp
adc
ss
jns
jne
jbe
out
mov
cli
mov
add
inc
repz
icebp
loope
push
add
je
das
mov
add
dec
sbb
stos
dec
add
sbb
fstps
xor
arpl
testb
xchg
cmp
dec
inc
xor
or
test
mov
xor
cltd
jns
filds
add
cltd
shlb
inc
pop
aas
add
pop
jmp
clc
xchg
and
xor
stos
mov
xchg
testl
jnp
jnp
add
jl
mov
pusha
hlt
xchg
shr
pop
dec
fldenv
ret
mov
pop
cmp
aas
sbb
xchg
mov
inc
lods
aaa
jmp
jb
rcrb
mov
hlt
mov
rcrb
ds
add
add
add
dec
mov
sub
add
sbb
add
push
fldl
fsub
filds
mov
repnz
leave
adc
repz
add
cmp
sbb
jb
sub
xor
int
loopne
mov
jbe
aas
mov
pop
adc
or
jne
pop
fwait
mov
push
rorl
sahf
incl
enter
js
and
pusha
xchg
inc
mov
mov
push
mov
pop
push
add
cwtl
cmpsl
add
insl
and
aas
pop
pop
push
sbb
sub
or
sbb
sub
jne
mov
jp
sub
in
xor
adc
add
je
jbe
jo
repnz
fldt
ja
arpl
fiadds
iret
movsb
roll
mov
test
in
adc
adc
add
pop
xor
xlat
pop
dec
add
lds
mov
sub
pop
or
gs
jns
add
shl
mov
rclb
fisttpll
outsb
rolb
add
add
add
popa
lds
pop
adc
mov
jg
cwtl
sbbl
push
adc
ret
jp
aam
add
sub
mov
addl
sahf
push
cwtl
sbb
or
std
push
add
mov
push
mov
mov
sbb
sbb
aas
mov
lahf
out
jg
lahf
insb
stos
add
sbb
add
push
add
add
pusha
cmpsb
ss
xchg
out
xchg
dec
add
cmc
out
jp
jns
js
jns
jnp
add
mov
pop
rclb
xor
xchg
shlb
data16
mov
cltd
adc
adc
adc
sbb
movsb
jge
lods
push
mov
aad
mov
add
push
mov
out
xor
aaa
push
add
sub
jp
outsl
lock
or
push
out
inc
add
aam
rorl
xchg
aam
push
xchg
jne
sbb
or
outsb
push
aas
add
mov
mov
pop
popa
cld
mov
or
push
fistpl
cmp
adc
mov
sbb
lcall
ja
cli
add
jnp
xor
xchg
cmpl
mov
popf
dec
jge
fistl
sbb
xlat
int3
fs
pop
push
cmp
sti
pop
jbe
imull
test
pop
cmp
inc
add
jns
js
jp
add
mov
divb
mov
js
insl
fildll
aam
sbb
pop
push
aas
dec
pop
cmp
cmp
seta
cmp
roll
aaa
mov
les
xor
xor
sub
jnp
sub
jnp
orb
add
data16
xchg
bound
add
xor
lret
rolb
mov
cmp
or
jns
add
pop
mov
pop
pushf
loope
cli
aaa
call
add
cmp
stc
xchg
jnp
add
outsl
xor
cmpsb
pusha
std
add
xlat
and
movsb
in
pop
push
loop
into
cwtl
push
pushf
ljmp
xlat
sub
or
add
data16
mov
sub
mov
xor
pushf
iret
or
dec
and
mov
pop
xor
adc
add
push
cmp
add
mov
sub
ss
inc
popl
je
push
cmc
add
jae
jne
mull
push
add
cmp
cmp
cltd
add
sbb
sbb
sbb
sbb
fstps
lea
lret
inc
idivl
cmp
xor
add
jnp
mov
jmp
test
xchg
add
pop
mov
mov
fldl
fstpl
rcll
aam
nop
sbb
add
add
lods
repz
movsl
or
in
repnz
movsl
add
mov
clc
add
shlb
faddl
add
adc
lret
add
push
fwait
cmp
popf
ss
popf
sarl
out
sub
cmp
add
xor
dec
loopne
pop
add
xchg
mov
add
call
call
aad
in
mov
inc
add
push
mov
add
push
pop
rcl
mov
mov
outsb
jg
adc
xchg
add
dec
or
jb
jae
jno
je
add
mov
add
sub
aam
xchg
adc
sub
add
pop
push
enter
fdivs
les
rol
mov
ret
ss
xor
sbb
mov
sbb
add
outsl
fnstenv
fdivl
inc
add
dec
ret
or
jbe
sbb
xchg
fidivl
int
or
mov
dec
add
test
pushf
je
ficompl
cmp
cs
push
sub
lods
xchg
push
dec
lahf
mov
ss
or
daa
fcoms
int
add
xor
enter
dec
lock
cmp
mov
push
xchg
jo
loopne
loopne
es
pop
add
cmp
stc
push
lods
pop
mov
push
pop
xchg
pop
push
add
divl
xchg
es
add
je
jae
jno
add
hlt
pop
pop
test
test
mov
test
movsb
rorb
sbb
scas
push
movsl
add
cli
adc
adc
xchg
sbb
add
dec
add
clc
and
add
cmp
xchg
add
sub
daa
dec
jae
add
popa
xor
push
adc
push
stos
mov
xlat
xchg
add
jo
xor
mov
push
add
mov
scas
cs
js
lock
add
mov
lock
testb
jno
and
dec
push
mov
cmp
insl
xchg
add
popa
popf
inc
add
ss
sbb
cmc
add
cmp
add
jnp
mov
mov
mov
mov
mov
add
ja
mov
mov
add
stc
pop
lret
pop
aas
pop
or
add
pop
push
xchg
add
pop
sbb
sub
inc
add
js
jge
aad
mov
js
cli
add
mov
mov
pushf
pushf
movsb
jns
add
add
aaa
sbb
nopl
pushf
es
cwtl
add
aaa
adc
add
cmp
es
cmp
sti
cmp
cmp
adc
je
sub
xchg
mov
xor
aas
filds
fscale
fcmovne
rcr
pop
ja
sbbb
mov
in
lahf
jg
xorl
xchg
je
xchg
dec
stc
inc
sti
pop
std
push
jg
dec
xchg
test
push
rcr
mov
push
ljmp
inc
xchg
mov
lcall
adc
xchg
push
sbb
add
jbe
mov
scas
and
leave
inc
push
popf
add
cld
out
jmp
iret
out
in
imull
in
std
mov
pushf
push
xchg
push
nop
push
imul
std
fwait
adc
repz
or
jbe
jae
jae
push
jo
jbe
hlt
aad
add
call
stos
cwtl
rolb
sub
push
add
adc
fisttpl
push
pop
arpl
leave
xchg
pop
ret
adc
dec
or
pop
push
int3
add
xor
dec
into
add
mov
sbb
mov
cwtl
add
test
fisubrs
pop
xchg
add
shl
rolb
lret
aam
sbb
int
sbb
add
test
mov
jle
lea
stos
repz
icebp
add
call
aam
jmp
push
mov
loope
psadbw
add
xchg
ficompl
mov
add
hlt
lds
add
jne
cmp
add
mov
mov
mov
enter
sbb
call
add
adc
pop
outsl
pop
sub
add
fbld
add
xlat
das
ljmp
push
jae
push
outsb
movb
dec
add
addr16
cmp
pop
in
adc
gs
sbbb
sbb
outsl
or
pop
test
xor
add
aam
nop
nop
lds
xor
cmp
cmp
cmp
cmp
xchg
es
add
pop
xchg
pushf
xchg
in
fsubrp
add
rcr
mov
js
cwtl
rcl
in
ljmp
dec
mov
hlt
jmp
stc
sbb
xchg
sub
hlt
dec
jnp
add
fwait
inc
lods
sub
addr16
xchg
ja
dec
nop
dec
pushf
inc
sahf
fnop
xor
sbb
jae
icebp
cmp
out
jo
cmp
dec
roll
mov
mov
mov
mov
add
stos
in
add
iret
out
and
sub
or
add
fistl
sahf
push
add
inc
cmp
dec
add
cmpsb
xor
stc
cmp
add
je
jne
je
jbe
add
mov
dec
xchg
push
adc
gs
iret
xchg
rcrl
push
adc
push
push
adc
and
test
rorl
das
rolb
xor
add
adc
aaa
xor
dec
rorb
add
in
aam
insl
fisubrs
stos
shll
scas
cmp
xor
insb
addr16
push
dec
mov
xorl
jge
mov
lock
icebp
xchg
lock
fidivrl
jle
loopne
aad
xlat
xchg
mov
adc
scas
xchg
xchg
rclb
inc
lret
add
dec
ret
loopne
cmp
incb
jle
mov
add
mov
rolb
xchg
xchg
lret
pop
stos
mov
xchg
mov
cmp
pop
mov
clc
pop
rcr
pop
mov
test
jg
xor
inc
dec
push
sarb
jne
scas
daa
add
jnp
jge
decl
fsubrl
dec
insb
push
rol
ret
lret
adc
dec
scas
push
inc
pop
out
adc
outsl
pop
jo
lock
call
ret
negl
sbb
add
jnp
pop
push
addb
imul
xchg
aam
shrl
jno
inc
aam
push
idivb
add
dec
mov
xchg
pusha
mov
std
dec
cld
lock
lock
repnz
sub
dec
cmp
cltd
ljmp
ja
add
mull
stos
mov
icebp
jns
popf
push
fwait
add
sbb
je
jmp
push
mov
fs
jns
lods
jge
mov
mov
mov
pusha
cmc
add
ds
push
pop
fwait
mov
lds
inc
shrb
pusha
xor
lcall
pop
repz
xlat
pop
dec
mov
scas
mov
or
pop
xchg
mov
xchg
testl
aam
jnp
bnd
jl
mov
arpl
scas
pop
cmpl
push
es
mov
leave
dec
fs
adc
push
pop
add
jo
rolb
xor
mov
xor
xor
xor
xchg
push
jge
imul
ret
call
aam
aam
data16
test
movl
push
mov
pop
mov
test
shl
add
icebp
lahf
imull
cmp
das
push
imul
mov
xchg
add
xchg
das
nop
cmp
fstps
mov
dec
push
push
les
push
enter
add
mov
aas
mov
cmp
stos
sbb
sbb
imul
pop
pusha
ficompl
add
pop
jnp
ja
dec
test
scas
inc
ret
inc
fwait
mov
jb
and
cmp
add
add
aaa
jg
push
jge
pop
jp
clc
lret
xchg
aad
mov
add
cmp
add
ret
outsb
pop
xor
push
sbb
test
xor
add
sarl
cmp
add
jecxz
repnz
cmp
add
or
rcll
xchg
lcall
fsubl
fnsave
add
in
fsts
negb
cmpsb
lret
mov
aad
ror
ror
ror
xor
enter
aam
push
jnp
notb
mov
xchg
cmp
mov
mov
mov
mov
push
aaa
out
mov
out
repz
xor
call
outsl
adcl
xchg
lea
xchg
adc
cmp
mov
push
lock
sub
rorl
jne
jo
jo
jb
je
jbe
mov
sbb
rclb
or
ret
mov
push
dec
push
dec
push
dec
push
leave
cwtl
addr16
int
sti
xchg
jbe
push
and
nop
add
adc
adc
pop
or
xchg
inc
js
nop
inc
cli
es
lcall
loopne
test
pusha
das
data16
jge
fs
jmp
inc
jno
xor
es
mov
mov
clc
ds
mov
mov
mov
test
sbb
je
add
pop
xchg
loopne
cld
jp
ret
nop
cmpl
mov
or
cmp
fldcw
popf
pop
dec
xor
int3
dec
add
fcmove
lret
or
xchg
cltd
adc
clc
ret
and
ds
dec
lods
mov
mov
mov
mov
aam
xchg
loopne
push
cmp
stos
bound
xor
sub
and
xor
lods
out
enter
inc
test
outsb
sbb
mov
adc
or
push
add
adc
mov
sub
pushf
mov
jnp
movsl
lods
push
ljmp
popaw
imul
or
xorb
cli
scas
pop
xlat
test
mov
dec
dec
inc
inc
dec
push
push
pop
dec
dec
int3
push
push
push
pusha
fimull
in
xchg
sub
xchg
mov
stos
stos
cmpsb
mov
stos
lods
sub
dec
mov
data16
out
fwait
pop
lds
hlt
or
notl
orl
xchg
sbb
and
sbb
sti
ja
push
sub
push
xlat
bnd
jmp
loope
cmc
hlt
sti
jmp
insb
scas
mov
jl
inc
mov
jp
fistl
mov
xor
add
ror
lret
ror
aam
lret
int
mov
rcrb
xchg
loopne
push
cmp
stos
bound
xor
sub
and
xor
lods
out
enter
inc
test
outsb
sbb
mov
adc
or
push
add
adc
mov
sub
pushf
mov
jnp
movsl
lods
push
ljmp
popaw
imul
or
xorb
cli
scas
pop
xlat
test
mov
dec
dec
inc
inc
dec
push
push
pop
dec
dec
int3
push
push
push
dec
fs
dec
ja
push
sub
push
inc
jae
shlb
sbb
mov
pusha
outsb
sbb
fcompl
fnstenv
cwtl
imulb
jg
jp
movb
addr16
lahf
sub
sub
cmpsb
and
in
jmp
jge
and
dec
fisubs
out
jnp
stc
cmp
jge
push
mov
mov
adc
adc
aam
pop
mov
out
sub
ret
fisubrl
mov
stc
dec
arpl
dec
loopne
insb
or
sbb
pop
pop
mov
lcall
std
jne
adc
add
dec
mov
jp
jo
inc
idivl
es
fstps
fcomip
adc
jb
or
or
jmp
cmp
xor
addr16
mov
or
mov
mov
jmp
mull
jne
clc
push
aas
popa
xorl
add
cld
mov
jne
lcall
lahf
inc
dec
subb
fdivrs
dec
fnstsw
repz
pop
loop
add
mov
and
loopne
sub
imul
fcoms
lahf
rclb
mov
out
fdivp
test
into
mov
iret
adc
push
push
adc
test
mov
aam
imul
add
xor
sub
popf
imul
lret
mov
push
addl
dec
jo
fiaddl
xor
lea
daa
sub
push
sbb
repnz
and
movsb
xorb
jecxz
jb
mov
jnp
cmp
sar
imul
aaa
mov
pushf
push
pop
out
mov
dec
dec
and
cmp
movb
lret
lret
addl
lods
popa
leave
add
mov
or
push
adc
fcmovnbe
adc
ja
