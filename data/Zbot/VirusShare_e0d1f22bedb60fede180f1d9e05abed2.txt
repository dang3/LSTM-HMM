push
mov
sub
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
cmp
je
sub
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
jmp
mov
pop
ret
add
add
lret
inc
es
mov
shlb
pop
add
call
add
orb
leave
inc
mov
pop
or
jge
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
int3
arpl
jno
notl
in
sub
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
mov
mov
xor
test
cmpsl
jle
and
fistl
mov
pushf
or
sub
fdivs
sbb
rorb
outsl
inc
fwait
mov
fs
out
stos
loopne
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
mov
das
jg
mov
mov
pop
gs
push
jb
add
jl
lret
cmp
mov
jmp
xchg
push
fildll
clc
ret
and
decb
mov
mov
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
es
mov
fld
mov
jnp
ds
icebp
mov
les
pop
in
sbbb
xor
mov
out
inc
mov
push
push
push
inc
jne
daa
cli
cmc
sub
test
in
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
int
sbb
add
pop
call
fsts
ds
out
in
xchg
loope
stc
mov
stos
insl
sbb
or
lea
dec
inc
ja
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
mov
pop
pop
fimuls
xchg
sub
lret
inc
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
mov
pop
addr16
ret
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
aam
add
loop
add
mov
add
pushf
and
add
and
add
and
add
and
add
and
add
and
add
add
pusha
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
inc
and
add
add
and
add
jp
add
cli
and
add
and
add
add
enter
out
and
add
add
add
and
add
and
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
sub
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
pusha
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
inc
and
add
add
and
add
jp
add
cli
and
add
and
add
add
enter
out
and
add
add
add
and
add
and
add
and
add
add
add
add
sti
add
insb
gs
jae
dec
jne
gs
add
jb
push
inc
add
add
imul
jb
je
arpl
das
add
outsb
fs
je
insl
push
add
add
insb
jae
gs
popa
insb
jne
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jb
jbe
push
jns
gs
add
inc
gs
je
imul
push
add
dec
add
insb
outsb
inc
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
gs
roll
dec
gs
jo
jb
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
imul
jbe
jae
add
add
gs
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
inc
js
outsl
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
outsl
ja
gs
outsl
jb
push
dec
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jnp
lods
lods
stos
add
cmpsl
push
mov
mov
mov
lret
lret
into
into
rcl
in
rcl
shl
rcl
shl
into
int3
into
hlt
leave
enter
enter
in
mov
mov
lods
lods
lods
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
lret
rcl
sar
xlat
std
xlat
xlat
xlat
fcom
aad
aad
ror
sar
into
int
aam
aam
rcl
sar
mov
mov
scas
iret
movsl
movsl
mov
dec
xor
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
rcl
aam
xlat
fcomp
xlat
call
aad
dec
int
dec
int3
int3
call
aad
dec
int
inc
mov
mov
ljmp
test
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int3
call
rcl
call
fcomp
xlat
call
aam
int
into
dec
leave
lret
int
inc
sarl
pushl
cmpsb
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
fs
sbb
das
push
or
sbb
cmp
aaa
cmp
and
adc
push
push
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
mov
ret
dec
enter
ror
call
aad
call
aam
dec
ror
dec
enter
inc
mov
mov
lods
scas
lods
jmp
popf
pushf
xchg
xchg
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jg
jg
jo
jb
arpl
mov
cmp
cmp
pop
pop
pop
stos
jo
jo
popa
bound
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
lret
leave
leave
inc
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
xchg
xchg
fwait
lcall
aas
cmp
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
pusha
nop
nop
fcoms
addb
jp
jp
outsb
jo
out
data16
push
ret
jge
jp
js
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsl
lcall
incl
addb
xchg
xchg
xchg
lahf
lahf
sahf
sti
mov
xchg
cwtl
mov
js
jp
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
mov
jle
jb
jno
jne
je
jg
jle
addb
push
cmp
ss
and
jge
jg
lcall
shrb
lods
lods
sti
stos
lods
lods
lods
lods
lods
stos
stos
test
std
lcall
incl
jge
jp
jp
jl
jns
mov
xchg
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
xchg
lea
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
push
push
push
femms
xor
inc
dec
insl
insb
insb
jl
xchg
leave
lcall
out
cltd
cltd
lcall
mov
decl
mov
lcall
cmpsb
movsl
ljmp
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
scas
call
lcall
incl
mov
xchg
xchg
xchg
sahf
popf
sahf
std
mov
mov
xchg
in
nop
xchg
nop
in
test
jne
or
add
inc
sub
sub
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
mov
call
sahf
sahf
jmp
test
scas
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cltd
lcall
mov
call
nop
xchg
xchg
xchg
popf
pushf
sahf
movsl
movsl
movsl
stos
test
mov
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
jne
jnp
jge
test
int
nop
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
ja
mov
movsb
mov
mov
lods
lods
mov
mov
add
mov
pop
pusha
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
cwtl
cwtl
lcall
mov
movsl
movsl
std
mov
lcall
mov
cwtl
aad
xchg
lcall
xchg
cmc
nop
mov
cld
xchg
adcl
mov
dec
cmp
inc
jl
mov
jp
mov
jb
mov
outsl
ljmp
adc
stos
or
or
mov
jle
mov
mov
lods
pushf
movsl
mov
movsb
add
mov
add
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
lcall
sahf
sahf
lcall
xchg
cwtl
decl
xchg
xchg
call
xchg
lcall
lcall
sahf
mov
xchg
insb
xchg
xchg
push
jge
cwtl
dec
jp
fwait
je,pt
fwait
sub
popf
and
sahf
pop
jmp
adc
adc
lods
adc
lods
adc
scas
adc
mov
imul
mov
imul
ds
mov
scas
scas
scas
movsl
movsb
movsb
sub
movsb
movsl
mov
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
lcall
movsb
movsl
jmp
mov
xchg
decl
mov
decl
ja
lcall
xchg
push
jnp
xchg
cmp
call
pop
call
or
pop
call
pop
lcall
adc
stos
sbb
pushl
pop
jno
mov
outsl
mov
and
mov
and
sarb
inc
xchg
lods
mov
lods
scas
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
lods
mov
shll
lcall
mov
cmpsb
jmp
stos
test
lcall
jle
decl
inc
outsl
decl
sub
mov
pusha
decl
or
addb
incl
add
lea
push
call
add
lcall
ljmp
pop
outsb
pushl
sub
mov
sub
ret
inc
sub
jg
enter
movl
sarb
lret
mov
add
add
add
add
add
push
adc
test
ljmp
popf
jmp
stos
stos
ljmp
lods
lods
pushl
lods
scas
jmp
jo
incl
or
incl
or
addl
addl
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
imul
shll
inc
aaa
test
enter
leave
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsb
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
cltd
lahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
mov
mov
push
decl
adc
mov
push
incl
add
mov
push
decl
add
xchg
add
sahf
add
add
add
lods
add
sbb
inc
cmp
dec
inc
call
inc
mov
rolb
call
dec
xchg
fmuls
fimull
fisttpll
ficoml
call
xchg
mov
mov
movsb
movsb
movsb
arpl
mov
add
add
add
fwait
cwtl
lcall
jp
jl
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
insl
decl
sbb
nop
sbb
lea
pop
decl
pop
push
decl
add
xchg
add
sahf
add
add
test
pop
ljmp
push
gs
and
call
push
xchg
call
push
cltd
fistl
fistpl
jmp
pop
sahf
fists
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
cmpsb
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
ja
mov
mov
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
callw
sbb
nop
or
nop
add
xchg
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
call
pop
fwait
fldenv
jmp
arpl
jmp
fs
jecxz
cmpsb
jmp
data16
call
test
push
mov
int
mov
cmpsl
cmpsb
mov
sahf
mov
add
add
add
inc
inc
adc
jp
xchg
cwtl
call
lahf
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
push
call
add
fwait
add
mov
add
lods
add
mov
pushw
adc
roll
jmp
jo
jmp
jno
jmp
jb
call
jne
in
jne
out
je
in
jbe
out
jb
jmp
mov
mov
cmpsb
cmpsl
lcall
sahf
add
add
imul
lea
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
xor
mov
cmp
lahf
xor
lcall
call
add
add
test
pop
pushl
add
mov
sbb
fsts
in
mov
ljmp
jmp
mov
in
cmpl
push
xchg
push
test
call
mov
inc
mov
test
popf
pushf
popf
daa
lahf
sahf
mov
add
add
add
pusha
add
ss
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
mov
lcall
cmp
movsl
inc
jge
movsb
inc
jge
movsb
cmp
lcall
lcall
add
add
scas
add
mov
data16
mov
add
call
es
data16
ljmp
in
mov
push
pop
push
nop
ret
push
nop
sar
xchg
ret
push
xchg
push
xchg
push
mov
out
nop
sar
mov
inc
clc
stos
lods
test
xor
pushf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
mov
mov
jge
lcall
dec
cmp
dec
test
mov
punpcklbw
fwait
add
mov
add
lods
add
mov
mov
add
enter
xor
mov
out
xchg
ret
push
lcall
repz
push
pushf
lret
fwait
enter
lret
sti
popf
int
sti
lahf
into
sti
cwtl
lret
xchg
ret
mov
dec
mov
mov
mov
xchg
nop
add
add
add
aaa
add
cmp
outsb
push
dec
dec
jecxz
pop
popa
call
mov
mov
mov
mov
inc
inc
leave
inc
mov
mov
ljmp
dec
mov
movsl
sub
fwait
pop
pop
lcall
pop
ljmp
mov
add
movl
je
loopne
xchg
out
lea
push
movsl
int3
push
movsb
int
stc
cmpsl
into
sti
cmpsl
sar
cli
movsl
iret
cld
cmpsl
into
std
stos
iret
cld
test
sar
negb
lret
leave
int
mov
mov
sahf
sahf
mov
add
lcall
xor
xor
or
inc
bound
pop
xlat
je
jo
mov
rol
rol
mov
inc
vpaddd
leave
inc
ret
mov
test
mov
push
mov
lods
dec
test
mov
add
movsb
add
stos
add
mov
mov
add
int3
add
fadds
jb
fists
jnp
in
pop
cmpsb
push
lahf
leave
sti
scas
sar
cld
mov
sti
mov
cld
scas
sar
cld
mov
mov
mov
mov
std
mov
std
mov
push
movsl
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
push
add
dec
dec
ss
jo
cltd
cltd
lcall
xlat
xlat
jmp
fcom
not
rcl
std
lret
int
dec
lret
lret
dec
leave
lret
inc
leave
mov
scas
jmp
push
mov
lods
cmp
lcall
add
stos
add
mov
mov
add
roll
outsl
call
add
fiadds
je
jmp
jb
cld
lods
aam
std
mov
cld
mov
fdivr
std
mov
xlat
cld
mov
xlat
inc
std
mov
lret
jmp
mov
call
lret
int3
mov
mov
xchg
or
add
add
xor
add
add
pop
or
enter
jecxz
pop
out
out
in
out
loop
loop
fsub
fsubp
fdiv
xlat
cli
aam
xlat
std
int
sar
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
leave
add
aam
jae
faddl
jne
jecxz
js
out
xor
cli
mov
std
ret
loope
inc
loopne
inc
inc
dec
inc
fdivrp
std
fdivrp
std
enter
lret
loope
sti
mov
enter
iret
mov
mov
xchg
adc
add
add
std
incb
incb
std
std
add
cmc
cmc
or
out
in
pop
in
out
in
sub
in
in
dec
call
call
call
aad
fstp
jmp
mov
xchg
cmpsl
cmp
movsl
adc
jmp
popa
pushl
add
les
imul
fadds
je
fiadds
jbe
ljmp
sti
mov
jecxz
std
lret
jecxz
dec
in
dec
in
dec
jecxz
std
int3
loope
dec
loopne
call
loop
dec
loop
call
in
call
jecxz
sti
ret
fcos
out
mov
xlat
inc
test
mov
xchg
cwtl
add
add
add
incb
std
incl
idiv
clc
add
repnz
repnz
push
out
lock
pop
out
lock
cmp
out
in
pop
fsubp
loope
lds
xchg
sti
mov
add
pop
ljmp
add
add
movl
jo
fildl
jbe
in
jnp
jmp
jle
negl
sti
mov
std
shl
shl
shr
call
out
shl
call
fsub
fucomi
std
iret
loopne
bnd
in
fcos
leave
lret
test
test
xchg
xchg
xchg
and
cwtl
cwtl
add
std
sti
add
clc
add
cli
stc
add
div
or
aam
xor
mov
xchg
negb
add
test
pop
ljmp
add
les
push
call
add
fildl
jne
call
sbb
cld
cld
xlat
ljmp
fldlg2
std
fldpi
fucomi
std
fucomp
std
fucomi
fucomp
std
loopne
fucomip
std
loopne
shl
push
jmp
aam
dec
iret
sar
stos
lods
lods
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
add
loope
add
mov
cwtl
repnz
and
mov
add
mov
popa
mov
add
int
outsb
call
add
loopne
je
call
sub
std
shl
fsubrp
fucomp
fucompp
std
fucomi
fsubr
cld
aam
std
shl
cli
shl
sti
shl
clc
into
clc
int3
fdivrp
cmc
ret
aad
in
mov
call
fdivr
mov
mov
lcall
add
add
add
xlat
add
leave
adc
scas
mov
lcall
add
mov
arpl
mov
add
rolb
jo
fadds
jae
loope
js
ljmp
cld
xchg
enter
cli
lret
cli
clc
mov
aam
repz
into
push
mov
int
jmp
mov
iret
std
ljmp
imul
fneni(8087
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
lret
add
sarb
mov
add
ljmp
add
mov
add
int
jno
rorl
jne
fisttpl
js
loope
cmp
inc
xchg
ljmp
ljmp
std
loop
ret
cld
fidivs
neg
mov
lret
ret
int3
in
leave
rcr
xlat
shl
aad
out
loope
in
out
test
out
lock
jmp
leave
lret
lods
lods
adc
cmpsb
cmpsl
cmpsb
add
ret
mov
lahf
lods
aam
dec
jg
sahf
sbb
test
insb
scas
and
mov
ja
mov
inc
test
ret
stc
leave
gs
test
mov
shll
rcl
ror
aam
int3
rcl
lret
mov
iret
shll
rcl
jg
fcmovnu
jb
gs
in
call
out
in
xor
div
mulb
lock
repnz
fcmovnu
or
mov
int3
add
add
add
sarb
mov
xchg
stos
jne
ljmp
mov
sarb
test
mov
mov
cmpsl
mov
enter
lret
jp
into
into
addr16
rcl
push
iret
rcl
dec
xlat
aad
aam
aad
aam
xlat
daa
fcomp
ficompl
ficoms
fucom
jecxz
loopne
in
call
lock
add
cld
cmc
add
std
std
add
std
add
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandw
enter
into
lret
ror
and
aad
sbb
aam
iret
aam
aam
aad
rcr
fadds
add
add
in
add
in
jmp
lret
add
std
add
mov
add
ret
ret
sub
mov
mov
push
rol
or
enter
leave
add
int3
leave
add
aam
add
xlat
aad
aam
add
fcom
add
fadds
fcmovbe
loopne
aad
flds
loopne
loopne
fiadds
in
out
repnz
lock
incb
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
shlb
into
iret
jmp
rcl
cmc
rcl
sar
into
into
sar
int
int
lret
lret
lret
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
cld
rcl
sar
aad
xlat
call
aad
call
iret
sar
iret
int
dec
int3
lret
mov
mov
cld
stos
lods
stos
icebp
cwtl
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
je
jae
fs
inc
dec
inc
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
lret
int3
call
rcl
call
rcl
dec
lret
inc
sarb
test
test
sahf
popf
popf
xchg
cwtl
xchg
jmp
jno
xchg
pop
adc
add
add
add
add
add
addb
test
jns
push
imul
push
push
stos
push
insb
insl
push
pop
pop
cmp
cmp
pop
jno
outsl
adc
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
cltd
cltd
fwait
out
test
dec
adc
adc
add
add
add
add
add
pop
fwait
fwait
lcall
xchg
cltd
fcoml
addb
jnp
jnp
jp
jns
jnp
jns
jns
jns
jb
je
push
push
push
cmp
jae
popf
sahf
sahf
mov
scas
scas
repz
lods
scas
sti
scas
scas
scas
std
cmpsl
cmpsl
test
popf
popf
popf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
cmpsb
movsb
cltd
jae
je
adc
adc
add
add
add
add
outsb
outsb
outsl
pop
lods
movsl
test
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsb
outsl
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsb
test
mov
mov
mov
scas
mov
xlat
cmpsb
movsb
movsl
pop
jg
jg
pop
pusha
pop
or
lods
mov
movsl
sahf
mov
decl
nop
nop
lcall
lahf
sahf
sti
mov
cwtl
lcall
push
push
jo
pop
push
outsl
insb
outsb
outsl
xchg
subl
mov
lcall
pushf
pushl
outsb
xchg
mov
push
mov
mov
mov
out
scas
stos
insl
stos
stos
test
add
add
add
pop
or
mov
in
movsb
test
xchg
nop
nop
call
xchg
lcall
cltd
cltd
lcall
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
lea
out
xchg
ja
notb
pop
cmp
dec
jnp
movsb
inc
js
scas
aaa
js
mov
jb
mov
outsb
pushl
sbb
mov
lods
mov
mov
mov
movsl
movsl
movsl
push
pusha
pop
pusha
or
mov
lcall
lahf
popf
jmp
mov
cwtl
decl
orl
xchg
jno
cld
cwtl
popa
cmp
dec
jp
xchg
cmp
nop
daa
push
call
punpcklwd
test
sbb
mov
outsb
pushl
sbb
je
mov
test
lods
xchg
lahf
popf
lahf
adc
add
add
pusha
pop
popa
or
lods
mov
stos
movsb
cmpsl
jmp
cmpsb
test
test
cmpsl
test
decl
cmp
mov
decl
adc
xchg
pop
decl
add
xchg
add
popf
add
cmpsb
or
pushl
jnp
mov
xor
xor
dec
pop
cwtl
inc
test
scas
movsb
test
test
popa
pop
pusha
or
cmpsb
test
test
cmpsl
ljmp
scas
scas
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
decl
add
xchg
add
lahf
add
movsl
add
mov
outsb
inc
cmp
dec
inc
mov
rolb
call
inc
nop
fmuls
call
popa
sahf
dec
cmpsb
mov
mov
movsb
movsl
daa
std
std
add
add
add
popa
or
mov
ljmp
mov
pushl
mov
ljmp
jl
nop
sbb
popa
decl
or
decl
add
lahf
add
test
pop
ljmp
and
rorl
fcomps
ficompl
fistps
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
lods
cmpsl
xor
add
add
dec
pop
jle
jp
fwait
xchg
lcall
lods
mov
mov
mov
mov
mov
mov
lahf
mov
xchg
sub
insl
call
adc
xchg
add
popf
add
cmpsb
add
scas
add
mov
xor
fisubl
jmp
insl
test
ljmp
out
jno
jmp
test
mov
test
test
jg
jg
add
add
dec
dec
dec
pop
insl
outsl
imul
test
cltd
cltd
cwtl
ljmp
mov
mov
mov
je
lcall
cmp
pushf
sub
call
add
movsl
add
lods
add
mov
inc
or
call
inc
xchg
jmp
jns
jmp
test
push
xchg
push
mov
mov
cmpsl
cmpsb
push
fwait
fwait
cltd
add
sub
sub
push
push
dec
pop
imul
test
mov
mov
mov
mov
mov
xchg
ljmp
sub
lcall
ljmp
add
mov
push
jne
fistps
in
xchg
sar
xchg
ret
push
cltd
push
cwtl
clc
fwait
enter
lret
xchg
lods
inc
mov
lods
popa
mov
add
add
xor
add
pop
pop
push
fisttpl
mov
mov
rol
xchg
cmpsl
jmp
dec
cmp
and
add
cmpsl
add
mov
arpl
mov
add
and
push
mov
into
cli
test
sar
cld
stos
sar
stos
sar
cli
cmpsb
int
out
inc
rol
stos
test
pushf
or
add
add
dec
push
push
aaa
je
jae
test
into
int
lret
cmc
leave
int3
int3
sti
leave
lret
lret
leave
leave
mov
mov
stos
pusha
mov
stos
inc
jle
mov
add
mov
gs
add
iret
add
fiaddl
ljmp
std
mov
cld
mov
fdivr
cld
mov
xlat
mov
sar
ljmp
repz
scas
mov
add
add
add
add
pop
or
aam
dec
loope
jecxz
loopne
loope
fstp
fcmovnb
fcmovnu
fcmovnu
aam
fsubr
shlb
test
pop
pop
ljmp
add
enter
xlat
add
jecxz
jl
icebp
dec
mov
sti
loopne
inc
loope
std
enter
leave
std
enter
lret
cld
out
mov
leave
divb
pushf
sahf
sbb
add
add
incb
std
incb
jmp
in
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
mov
arpl
ret
dec
add
fildl
je
jmp
outsb
mov
sti
ret
cld
shl
call
in
shl
shl
std
aad
xlat
out
cld
shl
push
enter
int3
sar
mov
mov
mov
add
add
incb
incb
std
cld
cld
pop
aam
mov
pop
mov
sahf
or
test
pusha
pushl
add
rolb
outsl
fiadds
ja
out
and
cld
shl
std
std
fsubr
cld
fsub
std
fldl2t
sti
std
xlat
out
cld
aad
push
jmp
iret
sti
mov
lahf
sahf
das
add
add
into
into
int
mov
bound
ljmp
add
movl
jae
loopne
jns
out
xor
sti
int3
loope
clc
leave
loopne
test
repz
icebp
ret
lock
out
sar
in
aad
in
shl
jecxz
fsubrp
leave
test
incb
aam
push
mov
jae
or
insl
inc
sbb
lret
and
xlat
cs
ficoms
clc
in
mov
out
loop
lret
mov
loope
mov
lret
leave
fmulp
iret
mov
in
fcompl
in
call
rorl
mov
add
stos
lods
stos
add
xchg
movsb
les
push
xchg
mov
xchg
fidivrl
jg
rol
stos
mov
mov
ret
ror
aam
int3
insl
aad
into
pop
ror
rorl
xlat
fnstcw
loopne
jecxz
fsubl
jecxz
icebp
adc
in
jmp
fcmovu
fiaddl
std
incl
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
enter
rcl
pop
rol
adc
rcl
or
loope
or
int
add
std
add
incl
lcall
pextrw
or
int
into
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
mov
xchg
enter
mov
ret
mov
scas
mov
insb
stos
lods
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
aad
rcl
sar
into
iret
iret
std
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jae
jae
push
inc
inc
das
cs
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aad
dec
into
into
dec
enter
mov
scas
lcall
mov
push
add
add
add
add
jae
jne
xchg
aad
outsb
outsb
ret
bound
insl
insl
outsl
jb
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jno
es
add
add
add
je
jae
popf
xchg
pushf
mov
test
mov
xchg
test
addl
push
push
push
inc
mov
popf
into
movsb
mov
mov
decb
lcall
stos
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
test
mov
xchg
xchg
xchg
cld
popf
pushf
sahf
cmc
cltd
cltd
cwtl
in
addl
imul
jle
mov
xchg
notl
mov
mov
cltd
mov
jo
mov
scas
lods
push
stos
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
jne
out
nop
fs
push
jl
pushf
inc
ja
movsl
ss
scas
sub
pushl
sbb
cmp
mov
mov
imul
int3
add
xchg
pop
scas
cmpsb
lods
test
popf
pushf
lahf
jmp
movsl
cmpsb
call
push
decl
je
lea
push
lea
arpl
xchg
adc
xchg
or
or
ljmp
and
mov
sub
ret
aas
test
rcrl
subl
je
push
mov
movsb
test
cmpsl
cmpsl
test
scas
mov
pushl
xchg
decl
or
xchg
push
decl
add
mov
adc
ret
dec
ds
iret
inc
mov
aad
call
push
xchg
dec
lcall
mov
add
add
imul
cmpsb
mov
scas
pushl
mov
movsl
call
push
decl
or
xchg
add
mov
add
mov
push
xchg
fcompl
loope
mov
jmp
cmpsb
call
pushf
mov
mov
cmpsb
cmpsb
pop
add
add
popa
popa
arpl
pushf
pushf
lcall
mov
mov
lcall
jo
cltd
and
xchg
or
lahf
add
stos
add
mov
xor
jmp
outsl
stos
jmp
jnp
out
jge
out
jle
fstps
mov
movsb
mov
add
dec
dec
dec
adc
imul
mov
mov
mov
ret
sar
mov
jmp
inc
jl
mov
add
test
pusha
pushl
or
dec
xchg
in
lea
push
xchg
clc
xchg
enter
enter
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
inc
mov
xchg
ljmp
sbb
movsl
add
mov
arpl
les
imul
adc
ljmp
cli
lods
sar
sti
lods
sar
cld
lods
sar
scas
sar
jmp
leave
inc
mov
cmpsb
ds
incl
xor
xor
inc
scas
mov
mov
aad
aam
aad
rcl
shr
lret
cli
mov
mov
jmp
fs
add
aam
jno
out
xchg
stc
pop
std
mov
std
ret
std
rcr
inc
fcos
out
mov
ret
in
test
addb
add
add
in
in
or
call
in
outsb
fcomp
fisubl
movsb
outsb
ljmp
add
lret
add
fldl
out
aaa
xchg
sti
scas
aad
cld
int
call
in
call
in
call
out
call
out
test
call
into
in
scas
lods
scas
popa
addl
add
incl
std
push
int3
lret
shrb
lahf
sbb
lods
add
mov
add
loop
jp
hlt
push
cmpsb
std
loopne
aad
std
out
std
shl
sti
aam
sti
shl
push
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
les
mov
push
gs
mov
push
jae
fstpl
cmp
out
mov
shl
ljmp
jmp
out
rcl
ljmp
scas
cltd
fwait
lcall
add
add
rol
mov
lods
xchg
inc
and
ret
int3
lret
mov
fdivrs
lret
adc
int
xlat
int
pop
xlat
dec
in
fistpll
out
call
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
ret
ror
fisttpll
int
int
aad
incl
jg
jg
std
std
add
add
add
rol
std
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
adc
mov
or
stc
jl
dec
stc
adc
out
scas
mov
out
adc
sub
into
insl
clc
loopne
adc
mov
cmpsl
pop
push
arpl
in
call
in
fmull
fisttps
mov
mov
mov
sbb
fisttpll
jo
push
loopne
stc
dec
aam
push
cmp
and
xchg
enter
repz
repz
ret
out
xlat
adc
ret
add
lret
mov
push
aam
mov
pop
inc
push
movsb
ljmp
sub
orl
in
dec
out
std
lods
out
or
shlb
getsec
mov
jge
arpl
lcall
negb
out
sub
lahf
shll
in
addr16
and
add
xor
inc
jns
jp
xchg
les
cs
xor
add
jns
xchg
roll
insb
movsl
mov
and
or
push
lret
dec
adc
sub
mov
add
add
stc
test
std
mov
cs
cmp
clc
inc
into
xchg
jle
orb
pop
lret
je
rep
dec
movsl
xchg
push
jb
xchg
pop
and
pop
xchg
cmpsl
movsl
call
push
xor
in
cmp
sbb
rorl
gs
jmp
sbb
mov
and
mov
inc
jns
test
dec
xchg
lods
fdivrs
xor
cmp
pop
das
fnstenv
xchg
andb
repz
ds
out
hlt
pop
mov
aaa
test
daa
inc
pop
jns
in
movsl
loope
fistpl
idivl
pop
leave
push
outsb
pop
push
test
leave
jno
inc
in
inc
std
les
add
inc
dec
mov
cmpsl
aad
orl
fildll
mov
cmp
xor
bound
bnd
lods
mov
data16
mov
or
clc
sarb
cld
bound
mov
test
mov
push
mov
test
fistpl
adc
cld
jne
pop
jns
cmp
in
mov
out
push
sbb
aad
adcb
mov
loop
ss
push
lods
sbb
je
leave
push
adc
insw
in
mov
outsb
in
lods
lods
xchg
mov
cmp
add
outsl
push
or
stos
iret
je
and
ret
popf
sub
stc
mov
mull
adc
and
mov
aas
mov
jnp
pop
and
add
cs
xchg
adc
xchg
adc
insb
out
dec
push
mov
hlt
adc
push
mov
jp
dec
jp
cltd
out
pusha
and
xchg
repnz
icebp
daa
iret
xchg
inc
or
push
out
xchg
cwtl
add
jmp
mov
lods
inc
push
fdivr
cltd
sti
cltd
into
iret
nop
loopne
jo
int3
xchg
ficoms
cmp
es
and
jp
pop
pop
jnp
std
pop
xchg
push
sti
pop
mov
cmpsl
cltd
cmp
movsl
in
add
xlat
andb
xchg
inc
dec
cmp
ljmp
or
shl
cmp
jle
mov
adc
scas
jecxz
cs
lea
adc
lods
js
xor
lods
mov
jo
hlt
xchg
cmp
sahf
mov
cmp
clc
pop
mull
mov
dec
outsl
arpl
pop
popf
mov
mov
pop
mov
xor
inc
cmp
lahf
sub
roll
sbb
imul
outsl
mov
das
dec
inc
mov
std
or
hlt
add
and
fisttpl
arpl
fdivl
push
pop
fwait
cmp
push
jnp
mov
lcall
mov
ret
push
push
sbb
xor
xor
xchg
insb
mov
adc
xor
or
out
jp
into
or
jns
cmpb
jge
push
jp
push
push
mov
outsl
or
fldenv
mov
fs
enter
imul
popf
subl
adc
fs
sbb
cmc
jl
js
cmp
jmp
push
adc
imul
andl
in
js
inc
dec
mov
popa
mov
cmp
mov
pop
xor
lahf
pop
cmpsl
push
out
push
xor
jge
dec
dec
sbb
xor
test
and
aas
outsl
ljmp
push
inc
pop
cmp
xor
xor
cmc
test
jno
ss
adc
mov
and
sti
add
iret
jmp
scas
leave
out
pop
push
and
cmp
fcompl
mov
sbb
xor
add
setg
test
mov
sti
sahf
inc
add
insl
aam
repnz
jns
jp
mov
popf
repz
popa
imul
sarl
flds
xchg
xchg
mov
mov
clc
out
mov
stc
dec
cmp
push
es
lret
sbb
movsb
movsb
fdivs
sub
sub
xchg
mov
leave
mov
lods
lock
pop
jnp
sub
mov
int3
xchg
frstor
movsl
cmp
decb
das
jne
pop
cmpsl
dec
sub
jg
loop
cli
sahf
dec
loopne
sbb
lcall
and
sbb
fpatan
xchg
mov
add
adc
nop
sbb
ficoms
fwait
mov
sarl
inc
cld
data16
jle
pop
or
sarl
vmovq
xchg
fldl
lock
popa
popf
sbb
jl
sub
push
mov
cmp
cmpsb
xor
mov
jge
cltd
movsb
and
mov
sbb
xchg
jl
stos
dec
sbbl
inc
xchg
mov
fnstenv
inc
aam
or
mov
cmp
inc
jl
or
mov
das
ret
adc
inc
fcoml
jg
jb
bound
fcomps
insb
inc
cmpl
stos
daa
mov
mov
fistpl
cmpsl
mov
outsb
sbb
mov
mov
mov
jbe
lret
xchg
sti
fwait
popf
push
pop
xrelease
jle
loopne
cmp
cmp
mov
dec
dec
popa
or
cwtl
test
fcoms
add
fmull
pop
leave
inc
or
loope
mov
rcl
dec
loope
popa
cmp
in
sub
sub
or
add
xchg
in
dec
sbb
popa
cltd
jno
pop
add
push
xor
movsl
add
test
imul
lds
jns
mov
cmpsb
enter
or
mov
mov
jg
sbb
lods
add
fcom
cs
jl
cwtl
add
fs
mov
ljmp
pop
pusha
jnp
or
cmp
in
shlb
inc
dec
popa
cmp
xchg
xchg
jl
lea
nop
fidivrl
fnsave
lret
cmpsl
sbb
fcompl
cmp
add
cli
and
leave
sbb
pop
sarb
pusha
push
leave
add
push
cld
lcall
and
cmp
aas
pop
pop
dec
in
jnp
hlt
lods
scas
insb
add
int
adc
add
xor
push
test
insb
fs
repz
fsts
test
push
add
add
es
loope
cmc
cmp
ljmp
lret
xchg
lret
push
movsl
cmp
in
xchg
daa
inc
rorb
add
inc
cltd
and
push
mov
test
or
mov
mov
pop
nop
in
ret
jp
jecxz
lcall
and
push
xchg
dec
stos
into
aam
arpl
iret
cmpsl
test
mov
xlat
xsha1
cmpsb
or
jne
dec
sub
sbb
sbb
imul
imul
pop
dec
mov
cmp
push
test
lods
iret
stos
imul
shlb
push
out
not
adc
dec
sub
imul
out
cs
sub
dec
add
push
scas
and
push
rcr
mov
std
addl
push
shll
add
fnstenv
and
testl
dec
lret
mov
dec
sahf
push
fsubrs
mov
testb
les
cmc
adc
aaa
scas
inc
jmp
pop
loope
cmp
inc
je
popf
push
jmp
adc
xor
push
dec
scas
push
nop
and
enter
pop
scas
dec
add
xchg
dec
js
mov
xchg
mov
adc
aaa
push
adc
ss
sub
ja
xor
mov
dec
in
ljmp
cs
mov
adcl
ret
test
sub
loopne
imul
xchg
mov
fstpl
push
out
and
popa
inc
ds
sbbb
xchg
pop
repz
aam
or
sbb
xchg
sub
cwtl
das
imul
lods
mov
addr16
aam
adc
out
test
mov
or
cmpsb
xchg
cmpsl
mov
sar
out
rcrb
sbb
dec
cmp
insb
ja
sahf
inc
pop
icebp
jbe
lret
xchg
ja
leave
adc
xchg
pop
pcmpgtd
mov
ret
bound
fimull
mov
cmp
pop
dec
in
ret
sbbl
bound
shrl
lret
push
xchg
mov
adc
ret
cmp
rolb
iret
add
ret
not
fnstenv
pmuludq
enter
sub
aam
jle
fwait
and
mov
into
gs
ljmp
mov
sbb
add
lret
fbstp
out
dec
fldenv
mov
in
into
and
jg
cmp
icebp
adc
sahf
mov
les
mov
mov
call
mov
and
ljmp
pop
std
xchg
sub
popf
sbbl
sbb
mov
movsb
mov
push
cwtl
lds
cmpsl
ds
lret
mov
fdivrl
ror
ret
or
ret
xchg
test
add
jne
rcrl
or
cwtl
lods
inc
sub
ret
jp
sub
dec
out
inc
mov
jne
push
mov
test
je
leave
gs
pop
mov
xchg
mov
mov
mov
mov
int
push
mov
sub
ret
pop
hlt
ret
mov
aam
arpl
or
mov
movsb
lret
or
test
cld
fwait
dec
out
mov
push
lahf
rcr
add
or
ret
sbb
or
mov
or
cli
mov
in
into
outsl
push
cld
or
jno
adc
mov
mov
inc
movl
int
push
popf
lret
xor
add
in
std
lods
inc
out
mov
cwtl
rcll
iret
fwait
xor
movsb
xchg
push
xchg
sbb
test
mov
sub
pop
hlt
mov
fsubl
int
pop
repz
out
insl
add
pop
mov
jge
push
jmp
and
inc
jo
push
add
or
push
mov
mov
lea
adc
mov
xchg
dec
insl
jo
scas
popa
lock
sbb
adc
mov
mov
hlt
sbb
iret
lods
xlat
jne
add
pop
hlt
rcrb
rcl
mov
pmuludq
in
out
aad
mov
push
or
mov
mov
mov
xchg
sub
push
or
int3
or
xchg
push
xchg
pop
ret
and
jns
or
ret
rcrl
add
sbb
xlat
outsb
roll
in
int
test
push
mov
xlat
push
xchg
pop
leave
or
outsl
lahf
daa
mov
add
aam
and
loop
mov
jne
adc
insl
cmp
mov
outsb
dec
shr
cmc
outsb
jno
pusha
xchg
inc
xlat
ret
cmpl
mov
inc
aam
jg
jl
sbb
mov
or
int3
testb
loopne
inc
shlb
pusha
mul
bound
jbe
sub
inc
xchg
lds
mov
pop
sub
jge
mov
in
mov
push
movsl
inc
push
fidivl
arpl
mov
pop
jne
mov
sub
xchg
sub
sbb
mov
leave
sbb
ds
pop
mov
push
lods
push
shll
ret
pop
xor
and
lds
movsl
mov
fimuls
pop
mov
xorb
pushf
xor
or
lock
rcrl
mov
xor
js
mov
lds
adc
xlat
loopne
add
stc
sbb
repz
jge
xchg
xchg
sub
sahf
jno
adc
je
cli
xchg
mov
les
iret
and
jae
lret
xchg
stc
jmp
in
fcompl
and
je
rorl
aaa
push
and
adc
pop
inc
xor
add
je
mov
stc
int3
jp
adc
xor
shrb
loope
xor
adc
test
loope
sbb
push
mov
gs
fwait
lret
jle
mov
fidivrs
push
daa
repnz
in
inc
fdivr
add
stos
inc
mov
pusha
aad
mov
sbb
pushf
push
shrl
mov
mov
outsl
dec
adc
xor
xchg
stc
or
insb
add
lock
mov
test
test
push
sahf
scas
es
imul
inc
cmp
pop
scas
inc
fsts
scas
adc
mov
jmp
test
push
sti
xchg
enter
cld
insl
jmp
dec
popl
xchg
js
mov
and
push
mov
inc
fidivl
faddl
push
pop
sahf
inc
xchg
dec
in
push
fs
scas
jnp
subl
int
mov
cmp
push
and
xchg
sub
mov
mov
mov
test
dec
inc
inc
xlat
sahf
insb
pop
sahf
pop
cmp
outsl
jle
mov
in
test
mov
add
outsl
push
sub
int3
or
mov
in
dec
aad
cmp
pop
mov
testb
in
jge
sbb
lcall
jno
fldt
sti
xchg
movsb
cmp
dec
jnp
jg
rcrb
je
dec
gs
cmpsb
cmp
testl
push
lods
fstpl
adc
lahf
inc
sbb
mov
jns
dec
sarl
jp
out
inc
fnstcw
fbstp
lea
cmp
mov
and
adc
inc
fsubl
cmp
mov
les
fmul
fs
mov
fcompl
iret
out
imul
test
inc
in
cmpl
clc
adc
pop
scas
cmp
xchg
cmpsl
cmp
or
lods
inc
mov
fcoml
int
inc
fdivl
pop
pop
scas
addl
jge
pop
xchg
js
push
div
mov
sub
test
mov
add
aas
popa
mov
int3
push
inc
ja
fnsave
into
gs
test
xchg
mov
in
shrl
ja
jecxz
inc
mov
fs
cli
xchg
pusha
jecxz
loope
pop
fwait
xor
mov
bound
cmp
pop
lods
inc
dec
ljmp
xor
and
ret
sahf
mov
psubq
push
orl
rcrl
es
mov
insl
jmp
shrl
jno
add
push
cmc
dec
testb
lds
jmp
mov
xchg
and
inc
sub
dec
out
cli
jl
add
rcrl
das
or
arpl
js
add
xor
insl
jge
sbb
add
pop
adc
scas
cmp
xchg
cmp
pushf
insb
add
lcall
xchg
push
cli
pop
ljmp
xor
sub
mov
es
pop
push
sarl
adc
scas
test
sti
push
dec
cmpsl
pop
notl
notb
aaa
test
jmp
xchg
ja
jnp
cwtl
jp
test
pop
add
imul
nop
lret
xchg
rorl
fidivrl
inc
and
test
jns
xor
js
cltd
lahf
xor
mov
and
outsl
iret
ja
loope
ja
andb
cwtl
test
jns
lcall
imul
cltd
cmp
xchg
xchg
or
mov
cwtl
inc
push
or
adcb
es
iret
stos
daa
mov
das
jo
int3
arpl
mov
ret
sub
mov
aam
push
xlat
or
push
es
popf
jo
mov
push
mov
push
xor
outsl
push
mov
add
cli
das
adc
scas
arpl
shlb
ljmp
pop
roll
out
and
xchg
out
sbb
scas
iret
aaa
repz
into
push
pop
pop
xlat
outsb
push
lahf
scas
inc
adc
xor
enter
xchg
cmpb
or
mov
ret
repz
fsubrl
shlb
add
out
and
add
jne
cmpsl
or
and
enter
pop
stos
inc
xchg
sbb
jae
mov
pop
in
cli
xchg
mov
rcrl
repnz
add
into
inc
stos
and
xchg
cld
inc
fsubrs
dec
pop
idivb
xchg
sub
jecxz
cmp
insl
sub
jle
cmp
insl
dec
dec
les
cmp
jns
dec
sub
mov
ret
adc
movsb
and
push
cmpsl
cmp
js
lret
addr16
sub
cwtl
xchg
out
test
xchg
or
mov
dec
cmp
or
pop
sub
cld
lcall
in
and
outsb
add
cmp
sub
mov
stos
inc
or
inc
sub
gs
das
and
sbb
movsb
mov
mov
sub
xlat
stos
dec
fnsave
pop
cmc
cld
popf
sti
xchg
iret
sbb
sbb
mov
les
in
lds
fsubrs
out
or
imul
popf
cmp
stos
out
mov
lret
int
adc
sbb
rcll
or
xor
mov
test
mov
xlat
mul
jnp
stc
cmc
mov
dec
dec
in
inc
repz
dec
cwtl
mov
pop
adc
xchg
push
imul
outsl
mov
ret
loope
in
push
push
sub
pop
lock
mov
xchg
or
mov
js
je
fdivrp
sbb
out
inc
sarl
out
dec
mov
jp
cmp
cmp
or
dec
fildl
pop
ss
sub
xchg
cmp
jo
and
loop
mov
ss
xor
cld
fisubrs
gs
pop
enter
cmp
mov
loop
mov
out
add
sarb
push
xchg
addb
shll
cmpsb
xor
and
aad
out
stos
mov
sbbl
adc
nop
flds
jbe
fisubrl
pop
lds
mov
cmovo
aad
lock
sbbl
cmpsb
es
push
shlb
push
cmp
fucom
lds
ret
mov
fimull
pop
movsl
leavew
je
xlat
jg
sahf
push
jecxz
sbb
loope
dec
ljmp
lock
cltd
aad
inc
sub
adc
fsub
cmp
push
movsb
pop
mov
and
daa
sub
push
add
in
push
lds
insb
add
loopne
and
add
xchg
pop
and
in
inc
or
jge
add
xor
add
subb
aaa
fstp
pop
mov
add
pop
push
fdivl
jnp
jmp
fcmovne
outsl
add
stc
push
mov
sbb
aad
insl
mov
in
ror
repnz
js
and
ss
pop
scas
cwtl
xchg
mov
sub
fbstp
fst
push
mov
mov
xchg
add
jae
enter
int
jle
pop
out
jae
mov
andb
push
add
jo
lock
leave
push
insb
xor
mov
testb
ss
adc
je
iret
outsb
fisttpl
cmp
fimull
or
emms
outsb
call
mov
in
dec
push
push
out
sbb
push
xlat
pusha
fnstenv
xchg
into
testl
jl
pop
jmp
std
xchg
jbe
sbb
mov
mov
push
mov
add
add
mov
jb
mulb
xchg
sub
incl
sahf
lock
outsb
outsl
push
pusha
fs
mov
xor
loop
inc
jne
mov
les
mov
fisubs
outsl
dec
or
dec
pushf
dec
sub
jns
pop
addr16
mov
fcomi
xchg
xor
fmuls
jge
xchg
mov
jne
filds
pop
aam
into
dec
mov
cmc
rolb
cmp
mov
jmp
test
or
loopne
xchg
mov
add
lcall
xor
pop
push
jae
cltd
jnp
xchg
leave
pusha
fldt
shll
loope
mov
mov
rclb
test
aad
test
add
test
adc
xchg
inc
mov
jl
xchg
adc
fistl
or
rol
mov
scas
adc
jo
mov
scas
inc
inc
scas
cwtl
das
arpl
xchg
xchg
cs
xchg
sub
lds
or
js
pop
lock
cltd
lea
cmpsl
aaa
into
pop
sub
xchg
lcall
xor
pop
cmp
dec
fcomip
mov
imul
xor
test
sub
rcrl
daa
mov
xchg
cmp
stos
inc
lret
adc
sbbb
fsubrp
insb
in
sahf
push
leavew
mov
mov
and
jo
loop
add
shl
and
scas
inc
and
es
adc
or
insl
outsl
push
pop
ljmp
mov
les
mov
out
sub
pop
je
cmp
pop
icebp
mov
dec
out
mov
pop
push
ss
cmp
sbbb
ja
in
dec
fists
ljmp
ret
hlt
insb
push
out
adc
sbb
das
push
pop
hlt
outsl
push
aam
dec
nop
sbb
arpl
fisubrs
lret
jno
sub
dec
ret
pop
popf
jnp
popa
lods
mov
sahf
xor
popa
or
push
xchg
addb
or
cmp
ret
pop
js
jne
lea
inc
fcmovnu
jle
or
lret
out
mov
in
addr16
sbb
test
jg
mov
inc
adc
xchg
arpl
test
cmp
pop
stos
push
inc
fadds
cmp
test
pop
idivb
mov
dec
les
std
loope
popa
mov
repz
pop
enter
and
push
loope,pn
arpl
and
adc
popa
jns
xchg
and
jbe
dec
cmp
fidivrl
jge
cmp
jge
icebp
scas
ud2
add
cmc
or
pop
sahf
mov
push
popf
dec
sub
xchg
pop
insl
aaa
into
mov
in
test
das
sti
in
pop
fstpl
mov
xchg
sub
movsb
jb
rcrl
fwait
xor
mov
outsb
add
mov
xchg
sbb
add
insl
into
rcrl
mov
mov
lds
hlt
testb
inc
and
cld
ljmp
cmp
into
gs
adc
rolb
and
ljmp
mov
fnstsw
xor
jae
inc
push
cli
lods
push
pusha
mov
cmp
mov
sbb
jae
leave
pusha
jmp
mov
cmp
in
negb
imul
sbb
sub
jbe
loop
jmp
inc
xor
clc
mov
mov
pop
mov
xchg
push
xchg
fcmovnb
test
jbe
adc
orb
mov
outsb
dec
jl
push
call
aad
adc
and
daa
mov
aas
xchg
push
inc
sub
pop
xchg
push
sbb
out
sbb
nop
pop
jnp
pop
push
cmp
mov
or
dec
pop
shr
or
movsb
imul
mov
xor
sbb
stos
dec
push
sub
icebp
sub
popa
xor
es
sahf
pop
shll
shll
sbb
enter
xchg
jne
rcrl
or
xor
mov
icebp
mov
sub
sub
inc
js
lods
sbb
xchg
mov
daa
out
pop
out
jmp
icebp
ds
mov
sub
add
xor
xor
hlt
daa
lcall
int3
pop
aas
pop
adc
mov
arpl
dec
cmpsl
add
adcl
push
fcompl
inc
push
out
out
mov
xor
mov
loopne
mov
and
xor
pusha
imul
inc
test
jne
inc
pop
popa
adc
sti
sbb
aam
hlt
push
jmp
mov
sub
int3
xchg
gs
testl
rcrb
dec
shrl
loope
sbb
mov
and
jmp
aaa
xchg
out
pop
fwait
leave
xchg
add
ljmp
out
filds
mov
data16
cmova
js
insb
push
add
mov
cmp
cmpsb
ljmp
scas
or
jp
inc
ficompl
cli
mov
lret
xor
out
fdivl
jmp
movsl
cmp
andps
sub
int3
mov
sbb
les
iret
test
dec
fwait
loop
mov
mov
orb
push
jns
and
push
adcl
mov
xchg
adc
fsubl
push
loope
jmp
dec
loope
pop
hlt
imul
mov
jae
sbb
mov
adc
pushf
fnstcw
ret
pop
mov
sub
mov
lahf
dec
jnp
pop
adc
out
cs
mov
ds
outsl
in
outsl
mov
int3
arpl
stos
testb
out
sahf
sub
xchg
dec
mov
or
stos
dec
aaa
mov
jne
lds
fimull
add
pop
push
adcl
rclb
or
mov
loope
and
xchg
mov
jns
xchg
ret
ficoms
xor
ret
out
ljmp
scas
inc
in
sub
push
scas
add
scas
movsb
xor
cwtl
nop
jbe
xor
in
adc
loopne
rcll
in
sti
rorb
dec
push
adc
mov
dec
mov
andl
mov
adc
and
outsl
mov
je
ds
in
pusha
mov
fsub
jge
xchg
jmp
mov
movb
nop
clc
pop
inc
pushf
mov
outsb
movsl
mov
dec
out
mov
inc
cs
jb
sub
sbb
call
dec
loopne
add
in
cmp
mov
cld
push
mov
orl
sub
test
xchg
adcl
xor
in
jp
movsl
sub
push
lods
add
mov
fidivrs
hlt
inc
mov
cmpsb
inc
sar
or
sub
repz
ss
xchg
clc
lcall
sbb
push
sarl
jno
jb
jecxz
repnz
pop
mov
test
pop
add
lcall
jnp
sbb
mov
jmp
sub
sbb
inc
xchg
mov
inc
divb
enter
fs
push
into
roll
sub
cmp
mov
sbb
int
dec
popa
sbb
cmpsb
sbbl
int3
inc
push
inc
arpl
stos
and
outsb
mov
xor
xchg
insl
sbb
or
or
je
lahf
aam
lret
mov
sub
push
movzbl
fwait
add
je
sbb
jne
stc
xor
adc
dec
int3
mov
loope
inc
jp
sub
jo
mov
inc
xchg
fs
cmp
or
push
sub
nop
movsb
es
jge
cmp
mov
sahf
mov
fwait
test
mov
push
ja
test
popf
call
rcrl
insb
loop
sbb
out
test
mov
pop
repnz
leave
adc
xlat
fwait
imul
mov
mov
sub
adc
outsb
mov
test
cmp
sarl
sbb
daa
and
inc
fadds
jg
pop
dec
jae
cmpl
inc
jecxz
gs
daa
push
cld
dec
out
fidivs
test
cwtl
sbb
xor
insl
aas
xchg
out
imul
jge
repnz
mov
push
push
mov
hlt
adc
out
inc
sub
lret
out
hlt
repnz
sbb
out
sti
adc
pop
cmc
sbb
sbbb
arpl
xchg
in
mov
es
adc
mov
into
rcrb
popf
cltd
sbb
dec
sbb
movsb
cmp
data16
pop
push
mov
jge
insb
adc
jle
scas
inc
js
pop
push
popf
push
lock
adc
sahf
sbbb
and
insl
scas
push
lcall
or
sbb
mov
cmp
dec
cli
test
into
scas
je
push
xchg
mov
lods
push
sub
cld
mov
xchg
in
inc
lret
bound
scas
fdiv
mov
inc
ss
repz
imul
mov
jp
xor
je
addr16
sub
pop
es
adc
scas
push
gs
scas
and
ja
js
cld
cwtl
xor
pop
mov
pop
push
xchg
jnp
xor
sub
push
inc
aad
gs
cmc
push
jle
adc
repz
cmpsl
int3
loope
ja
mov
inc
inc
cwtl
das
je
and
push
mov
inc
es
mov
dec
push
in
jnp
test
xchg
jge
iret
ja
push
lock
sbb
jle
adc
mov
push
popf
imul
popa
sub
stos
sub
inc
jo
sub
pop
pop
xchg
inc
daa
pushw
jae
int
add
xor
mov
in
cltd
test
mov
call
lods
rcl
scas
xor
adc
jp
add
iret
cmp
dec
jnp
lods
lods
imul
add
inc
fsubl
adc
add
pop
arpl
adc
cmc
pop
aaa
mov
xchg
mov
iret
mov
mov
sahf
cmp
jp
sbb
lods
dec
outsl
int3
inc
dec
dec
sbb
outsb
pop
mov
test
fadds
lret
or
pushf
jb
push
cltd
sub
clc
jnp
push
rolb
xchg
shlb
sti
xchg
cmp
call
mov
addr16
xchg
std
inc
mov
mov
xor
pop
cwtl
cld
and
js
imul
mov
cmp
movsb
popf
cli
xchg
mov
mov
test
and
jnp
push
lods
cmovae
je
inc
enter
dec
push
and
jmp
sbb
push
adcb
lock
sbb
sub
cmp
and
inc
dec
std
cmpsl
nop
xchg
daa
shrl
mov
inc
add
push
inc
mov
cmp
iret
lcall
cmp
adc
aaa
arpl
aaa
jle
rorl
inc
sbb
ljmp
and
mov
ljmp
mov
sub
xor
lock
scas
xorl
push
sbbb
lds
inc
movsb
pop
sbb
and
mov
pop
cmp
xor
movsl
sbbl
fistpl
sti
lock
into
xchg
gs
push
add
or
or
test
loop
jb
out
push
mov
pop
lahf
adc
gs
fs
xchg
and
adc
lcall
mov
hlt
in
cmp
xchg
cli
mov
inc
mov
xchg
add
pop
pop
jbe
dec
test
pop
xchg
js
sub
push
mov
rclb
sub
adc
mov
test
xchg
icebp
testb
pushf
jns
adc
gs
addr16
lods
inc
jge
lea
cmp
cmp
rclb
addr16
mov
adc
lods
jb
pop
stos
jne
push
stos
dec
xor
mov
in
enter
and
mov
xchg
sub
cltd
fsub
aaa
les
push
jp
cmc
cld
mov
orl
mov
jno
add
popa
popf
loopne
mov
sar
das
ret
test
lret
loope
addb
mov
push
je
inc
adc
rolb
mov
in
inc
mov
mov
adc
inc
sbb
xchg
sarb
or
mov
xlat
out
gs
sbb
cmp
and
adcb
xchg
lea
mov
test
and
pusha
jp
and
push
pop
lods
dec
jg
in
repz
and
push
lahf
fistps
daa
test
cli
daa
mov
aas
ret
lods
mov
jb
push
jecxz
and
imul
repnz
inc
jb
dec
movsb
gs
add
es
rcrb
aad
and
push
sbb
sub
scas
mov
cmp
sub
mov
mov
ficoml
out
repz
pop
int
jp
mov
mov
dec
clc
jmpw
test
ljmp
lahf
fcomp
dec
mov
out
mov
inc
adc
clc
popa
cmpsb
add
int3
xor
sbb
cmp
lret
mov
das
inc
and
notb
bound
jmp
cmc
xor
rolb
mov
fsubr
mov
aam
out
shl
ss
and
mov
xor
push
fdivs
je
add
inc
push
sti
inc
inc
and
sub
cmp
add
scas
rolb
cld
into
mov
or
mov
lods
je
pop
test
in
mov
pushf
xor
out
cmp
mov
add
xor
mov
push
adc
aad
and
insb
dec
ret
xor
ja
fmuls
adc
pushf
mov
icebp
xor
stc
or
mov
cli
dec
xlat
sub
addr16
dec
out
mov
stc
cmp
cmp
inc
jmp
movapd
jb
je
ljmp
insl
add
jmp
xchg
mov
daa
mov
mov
sub
sbb
insb
iret
jecxz
mov
loopne
xor
or
cmpsl
fnstenv
cmp
in
roll
jae
inc
je
push
sarb
jno
shll
sti
mov
mov
or
cmpsb
jns
mov
mov
movsl
sub
xor
cmp
mov
test
cmp
iret
in
stos
adc
and
dec
push
inc
or
insb
and
jb
mov
inc
popa
pop
daa
dec
lock
or
mov
and
mov
push
pusha
testl
push
adc
dec
dec
push
xchg
inc
aas
mov
pop
aad
std
push
out
enter
rclw
push
out
repnz
rclb
mov
in
sub
test
into
fs
out
xor
fistps
dec
mov
push
xrelease
jbe
test
rcl
push
lahf
lcall
out
imul
xlat
pop
lods
and
addl
shr
sub
fstps
scas
jp
sbbl
sub
call
jnp
test
dec
jecxz
adc
xbegin
and
test
ficompl
adc
jnp
xchg
lock
mov
push
imul
jmp
les
or
push
in
cs
jne
out
je
mov
stos
imul
out
cmpsl
xchg
enter
lea
mov
out
sbb
jg
xlat
push
cwtl
call
xchg
jecxz
pop
rcrb
xor
jae
xor
mov
pop
mov
popa
adc
std
xchg
sbb
cld
pushf
xor
inc
mov
pop
js
shrl
cltd
mov
pop
rcl
mov
pop
pop
fwait
lret
pop
push
inc
fldl
push
sub
stos
mov
es
mov
xchg
lret
mov
dec
pop
xchg
shrb
cld
jmp
push
repnz
xchg
jecxz
rcll
lods
push
xchg
es
mov
pop
jmp
rcr
jbe
movsl
jb
nop
lahf
pop
hlt
fdivrs
rol
lahf
jno
mov
mov
mov
test
xlat
enter
mov
push
test
xchg
inc
int
inc
add
shlb
pop
cmp
out
out
fstpl
arpl
mov
jb
mov
adc
sub
sbb
ds
xlat
fistpl
nop
notl
push
lods
lock
xchg
testb
sub
test
dec
cwtl
mov
mov
xlat
call
cmp
inc
cmp
add
push
jmp
cmpsb
pop
jp
int
cli
cmp
test
cmp
pop
xor
jns
test
push
sbb
fidivs
cmp
xor
jecxz
cmp
add
sbb
insb
aad
sahf
and
dec
fcmovnbe
xchg
adc
scas
sub
lds
sub
xchg
sub
sbb
jle
das
adc
push
pop
mov
mov
push
daa
js
cmpsb
push
or
sbb
mov
leave
mov
lea
in
into
mov
xchg
mov
cmp
sub
adc
push
add
popf
out
dec
psubq
mov
and
mov
xchg
inc
jge
out
imul
ja
push
mov
pop
movsl
dec
dec
mov
xlat
outsb
or
les
imul
pop
jae
gs
pop
ljmp
jnp
aaa
lods
popf
add
add
arpl
in
pusha
aad
xor
movsb
mov
jge
jnp
incb
push
mov
mov
ret
mov
or
inc
jbe
bound
in
mov
xor
repz
sbb
in
xchg
mov
push
mov
jo
jb
out
sub
xor
or
dec
cltd
mov
cs
or
push
cmpsb
mov
jbe
and
mov
sub
movsb
subb
test
push
pop
into
mov
lods
xor
fiadds
sub
adc
and
xor
jge
stos
inc
pushf
gs
int
xor
inc
out
adc
cmp
pop
je
add
test
and
mov
outsb
push
pusha
dec
push
fwait
push
dec
mov
imul
lods
je
out
push
out
mov
xor
cwtl
mov
enter
jbe
dec
data16
into
adcb
int3
repnz
enter
mov
repnz
xchg
daa
mov
mov
sbb
cmp
mov
push
mov
mov
scas
inc
dec
test
sahf
sbb
push
jmp
inc
daa
mov
or
ljmp
or
cmpsb
rorl
montmul
cmpsb
ds
fsubrs
sub
int3
loop
lds
push
jmp
addr16
cmpsb
inc
mov
push
out
and
xor
mov
push
sub
arpl
divl
xor
mov
xor
jge
dec
loopne
sahf
add
cmp
or
fs
imul
pop
mov
adc
xchg
sub
push
lods
andl
std
les
pop
icebp
push
std
rclb
dec
loopne
bound
push
cmc
add
addr16
adc
sub
mov
push
pop
ljmp
push
push
jb
shrl
sub
popa
jp
xchg
sub
mov
ja
inc
lea
aad
ja
je
data16
or
xchg
push
mov
bound
or
jecxz
aaa
jmp
add
in
vcmpps
pop
adc
pop
test
pop
stc
cmp
in
and
jg
sub
sahf
add
push
scas
jle
loope
sbb
dec
fs
sbb
mov
ss
sub
xchg
lcall
and
fisubrl
lret
scas
fwait
xor
iret
push
push
sub
fadds
imul
mov
mov
xchg
stc
outsl
push
jmp
ret
pop
cmp
inc
xlat
das
std
jbe
filds
inc
fadds
repnz
mov
mov
lock
mov
sub
enter
scas
out
jge
inc
mov
jne
add
sub
sub
call
lahf
daa
mov
fnstcw
pusha
negl
mov
fldenv
pop
outsb
push
inc
fucomip
shrb
outsb
das
pop
imul
out
loop
sbb
mov
popf
lcall
xchg
sub
xor
mov
xor
test
pop
repnz
mov
stos
es
dec
inc
xor
inc
mov
adc
add
outsb
add
pop
hlt
fsubrs
jle
push
pusha
mov
sub
adc
and
mov
out
xchg
popa
mov
adcb
dec
icebp
inc
fwait
lock
jbe
pop
adc
or
repnz
and
std
inc
mov
sbb
cmp
mov
xchg
pop
mov
xor
cwtl
sbb
sbbb
inc
scas
mov
les
lcall
pop
lods
call
or
loop
ljmp
subl
pop
cmpsb
and
mov
push
push
dec
pushf
das
or
scas
ljmp
out
xchg
loopne
adc
inc
and
xor
ret
aaa
adc
lret
bound
or
mov
sbb
cmpsb
ja
outsb
test
cld
mov
fadd
iret
into
aaa
fadd
ds
stc
xlat
cmp
movsb
daa
mov
sarb
sarl
out
xchg
pop
adc
jecxz
ljmp
pop
fdivl
dec
and
mov
sub
add
jp
lret
cmc
jnp
or
js
fwait
cmpsl
loopne
push
enter
dec
mov
push
xchg
enter
dec
popf
xor
sub
popfw
or
jg
inc
xor
dec
test
roll
mov
lea
movsb
into
mov
je
jnp
clc
xor
movsb
fidivrl
jge
mov
scas
add
inc
push
shrl
push
mov
xchg
pop
aas
and
push
scas
inc
push
ret
mov
inc
inc
inc
push
mov
fstpl
es
cmp
inc
mov
sub
test
jne
in
les
cmp
sahf
jge
mov
hlt
mov
mov
call
adc
cld
add
push
repz
sbb
ss
push
fidivl
outsl
mov
mov
ret
repz
adc
fsts
mov
mov
popl
jnp
fcmovbe
mov
mov
sbb
das
push
stos
pop
cltd
xchg
pop
clc
and
les
insl
fbstp
in
pop
bound
fmuls
mov
fcoml
pushf
xchg
push
fldl
sbb
xlat
cmpsb
cmp
mov
pop
adc
mov
and
pop
push
or
loop
jp
mov
fdivrl
fisubrl
ljmp
test
sbb
into
stos
xchg
lret
mov
adc
clc
jns
xor
push
push
loop
push
xor
sub
add
data16
stc
push
cmpsl
sub
popf
sub
addr16
aas
cmpsl
loop
push
dec
push
ljmp
dec
loop
popf
and
lods
fstpl
push
add
xchg
popf
or
inc
enter
xchg
add
sbb
dec
inc
fidivrs
std
xchg
les
aam
into
jg
in
sbb
fs
cli
dec
das
jle
sbb
inc
xchg
push
lock
fstl
data16
jmp
mov
sbb
mov
int
cltd
xor
mov
pop
jecxz
stc
and
les
outsl
subb
mov
nop
mov
sub
xchg
sub
arpl
arpl
rclb
jae
inc
fstpl
mov
jecxz
jecxz
mov
dec
mov
sub
xchg
rolb
mov
sti
lret
cmc
loop
into
rolb
aad
cmc
daa
fst
push
shl
aam
xor
mov
jmp
mov
daa
xor
jp
xor
jno
out
into
cmp
fsub
sub
ret
cmc
in
shlb
lock
or
aam
call
js
popf
dec
xchg
repnz
imul
sbb
lret
loopne
aaa
into
in
add
leave
xchg
ror
in
and
pushf
adc
mov
out
les
mov
notl
vcvtps2dq
or
outsb
aad
nop
cmp
and
testl
scas
mov
xor
pop
dec
push
push
ljmp
xor
popa
mov
cltd
cli
sbbb
add
std
jg
sbb
lods
add
es
jp
pop
mov
pushf
icebp
mov
dec
dec
fbstp
push
adc
xor
stc
dec
push
dec
in
insl
adc
push
push
or
push
ja
adc
enter
lcall
jge
negb
pop
pop
out
xchg
loopne
test
int
into
fmull
lcall
xchg
xchg
insb
add
push
pusha
jae
xchg
das
cmp
dec
pop
xchg
and
inc
rol
ret
inc
and
dec
mov
arpl
insl
jle
xor
sub
push
in
sub
cltd
pop
filds
cltd
in
jp
adc
popf
data16
or
fnsave
clc
vpmacssdql
test
cli
xchg
int3
adc
scas
in
imul
add
xchg
shlb
sbb
mov
shll
jecxz
imul
mov
lds
int
sub
mov
sub
movsl
lods
add
fdivr
test
stc
or
mov
fnstenv
add
sub
dec
ja
sti
xchg
leave
cwtl
ret
jmp
sbb
ds
jl
scas
inc
dec
popf
outsl
push
es
stos
inc
lahf
inc
out
xchg
mov
loopne
jp
inc
add
jg
mov
dec
or
xor
jle
mov
pop
rcll
ret
pop
ret
inc
insb
jecxz
push
add
add
jo
pop
mov
xchg
ljmp
dec
ss
scas
adc
jmp
add
pop
or
or
pop
cmc
pop
and
jno
inc
fsubs
inc
cmp
data16
sbb
adc
arpl
mov
mov
ficomps
or
sbb
mov
pop
adc
pop
mov
and
out
adc
inc
xor
aas
xchg
cmpsb
pop
repnz
daa
arpl
jae
xor
push
xchg
sbbl
cmp
pop
stc
jp
or
scas
inc
add
or
push
and
jp
jne
fldenv
sbb
pop
mov
movsb
mov
sub
fiaddl
mov
loopne
push
xlat
outsb
xchg
jle
cmc
mov
lahf
test
cli
adc
and
inc
rcrl
dec
out
cltd
fbstp
icebp
insl
add
cld
mov
and
dec
xlat
outsb
sbbl
andb
mov
cmc
push
pop
add
leave
jno
icebp
mov
pop
dec
push
enter
xor
shrb
push
pop
or
pop
mov
nop
adc
test
jns
push
inc
loope
sti
adc
inc
loop
mov
call
inc
out
dec
push
popf
cmp
push
xchg
loopne
cmc
pushf
cmovbe
js
movsb
into
add
insl
lret
push
mov
xlat
push
movsl
xor
popf
adc
or
and
sub
mov
hlt
dec
repnz
loope
cmp
insl
add
jmp
mov
cmp
mov
arpl
jae
into
andb
xor
movsb
test
mov
mov
or
loopne
push
stos
xchg
xor
push
mov
add
dec
xchg
cmp
lret
mov
dec
es
leave
rclb
ret
dec
xchg
sub
ret
pop
mov
enter
int3
arpl
mov
jmp
cli
aaa
into
jmp
xor
andl
lcall
or
lock
inc
idivb
leave
mov
ja
jmp
mov
adc
mov
iret
lret
dec
dec
mov
jmp
cwtl
out
cmp
mov
xchg
aas
or
das
sbb
into
mov
js
inc
lret
adc
pop
ret
push
mov
lods
les
and
daa
adc
loop
push
inc
stos
pushl
sub
xchg
jle
les
push
in
dec
in
xor
xor
push
push
push
jno
pop
lods
mov
das
scas
ss
cltd
xchg
fldcw
jnp
mov
cmp
mov
mov
out
into
gs
mov
adc
push
in
sub
je
jmp
loopne
and
push
sub
sub
aas
jns
jb
rorb
sbb
xor
je
addr16
leave
adc
andb
sub
mov
hlt
rorl
jle
pop
icebp
mov
ds
in
mov
jno
push
es
sbb
mov
mov
jle
add
adc
push
insl
lea
out
xor
pop
sahf
pop
out
aas
fbstp
and
int3
jl
subl
fimull
push
jne
jb
mov
loope
push
and
sti
xchg
jo
shlb
sbb
mov
mov
test
sahf
cmp
call
sub
movsb
shl
xchg
or
mov
mov
stc
nop
sub
mov
fidivs
pusha
cmpb
test
sahf
xlat
shl
popa
xchg
ret
xorb
sbb
xchg
rorb
fdivs
mov
pop
loope
orl
mov
repnz
in
loope
ja
scas
lds
cld
gs
mov
xor
xor
push
sbb
jns
outsb
add
mov
out
decb
lret
mov
stos
mov
in
jle
cmp
insl
dec
stos
jnp
cmpxchg
notb
cmp
mov
nop
jmp
cmp
imulb
mov
inc
fcoml
mov
mov
inc
inc
and
adc
push
jg
out
mov
insl
add
test
scas
and
mov
inc
adc
ret
mov
cmp
add
das
jl
adc
jns
mov
enter
lcall
vcvtsd2ss
adc
pop
push
xor
psrad
popa
lahf
mov
xchg
rcll
loop
in
and
daa
lods
push
outsb
add
xchg
f2xm1
test
popf
push
cmpb
sub
jp
lock
decl
push
cmp
fstpt
add
mov
push
inc
fst
jg
or
push
je
sahf
fwait
sub
inc
mov
hlt
mov
push
fs
add
mov
push
pop
add
js
bound
mov
pusha
or
incl
call
shr
aas
xchg
add
insl
sub
and
mov
dec
hlt
sub
mov
sar
imul
inc
in
test
insb
in
lcall
in
aas
mov
dec
mov
jge
stc
stos
aas
ds
aas
loope
pop
push
outsl
xchg
pop
jp
or
xor
jbe
xor
mov
xor
leave
xchg
push
inc
push
push
mov
xlat
insl
repz
xor
into
hlt
mov
or
sbb
test
mov
cli
adc
cmp
out
out
sarl
js
push
mov
imul
loop
add
dec
xchg
inc
ds
movsl
hlt
int
dec
xor
mulb
jge
or
push
mov
dec
sahf
xlat
andb
test
aaa
mov
xlat
inc
inc
data16
js
mov
xchg
mov
loopne
cmpl
aas
mov
mov
fisubrl
and
xlat
cmpsb
aas
mov
test
jg
add
mov
andb
cmp
push
xor
cltd
shlb
mov
mov
mov
lds
mov
adc
repz
les
sub
addr16
mov
push
and
mov
inc
mov
aam
out
lahf
scas
xchg
mov
cmp
js
rcl
rclb
inc
in
rol
pop
imul
ret
icebp
push
pop
pop
or
mov
mov
int
add
mov
jle
jb
rcrb
dec
push
arpl
push
inc
scas
dec
fcomip
gs
pop
lcall
jb
fs
out
mov
jne
fisubrs
cmpsb
push
jne
lcall
or
andl
mov
shrb
shl
mov
mov
xchg
pop
sahf
rcll
xlat
push
sti
pop
xchg
insb
cmp
iret
daa
sub
jno
add
mov
mov
mov
fisubs
mov
into
int
scas
call
fildl
push
or
adc
insb
mov
mov
mov
xlat
daa
inc
or
out
jp
push
lods
punpckhdq
add
in
push
push
lcall
movsl
sahf
orb
out
clc
adcb
pusha
divl
sub
pop
sbb
in
jg
mov
or
mov
cmpsb
mov
push
jg
adc
aad
sub
cld
icebp
lds
fmuls
mov
rcrl
inc
mov
cmp
jmp
dec
sbb
cmp
movd
cmp
mov
loopne
clc
mov
pop
std
and
jb
repnz
mov
dec
incb
orb
add
jb
adc
fnsave
sbb
dec
sbb
leave
nop
out
jecxz
call
sub
stos
pop
sub
dec
repnz
dec
cwtl
incl
out
cmpsb
out
ss
out
aad
stos
adcl
sbb
jl
jg
lods
and
popf
lods
xchg
jecxz
mov
push
dec
lret
rcr
jno
in
jb
out
imul
shl
into
das
out
mov
das
sbb
sub
or
ljmp
icebp
mov
out
mov
ret
pop
jb
js
pop
mov
sub
or
lcall
and
mov
shl
repz
es
les
adc
lahf
xor
lahf
lret
out
mov
cli
negl
and
ja
jo,pn
xor
dec
mov
sarl
xchg
cmpsl
testl
cld
jl
popf
xor
or
insl
xchg
mov
jae
daa
cmpsb
int
inc
repnz
jne
push
xor
jg
jnp
push
nop
inc
ds
jge
inc
push
dec
mov
push
sub
insb
cmp
popf
mov
jmp
push
pop
jae
addb
in
dec
jl
jnp
insl
mov
jg
cmp
mov
rep
or
push
push
xor
ljmp
arpl
xor
mov
int3
cli
jne
into
mov
pop
mov
adc
add
pop
pop
stc
inc
push
sbb
mov
arpl
sbb
scas
sbb
fisubl
push
xchg
icebp
movsl
and
jb
pop
aaa
mov
and
lret
xchg
imul
adc
and
adc
pop
das
jo
adc
aaa
or
fdiv
shr
add
mov
add
sti
cmpsl
sbb
cwtl
nop
aaa
add
sbb
dec
pusha
mov
fnstcw
pop
xchg
push
pop
inc
scas
mov
jp
xchg
loopne
jns
add
jmp
pop
sbb
add
jecxz
or
cmp
push
loope
testb
add
mov
sbb
push
or
dec
out
dec
ror
inc
pop
outsb
jne
push
jmp
es
jo
jnp
jne
lcall
pop
mov
push
frstor
loope
and
test
add
push
pop
test
popf
std
adcb
sub
dec
or
pusha
xlat
outsb
xchg
stos
mov
pop
incb
aas
and
out
jg
pop
or
pop
push
push
dec
push
jp
xchg
mov
pop
mov
mov
lds
mov
sbb
sarb
dec
in
mov
jl
imul
aaa
pop
scas
push
and
add
stos
sub
fcoms
lahf
mov
movsb
push
cs
pusha
scas
sub
fistps
push
cltd
jp
dec
xor
lret
cltd
das
sbb
ds
jo
and
dec
or
inc
outsl
lret
movsb
sub
aad
testb
int3
adc
int
clc
cmpsl
les
xchg
push
lahf
orb
xchg
cld
or
or
call
cmp
xchg
push
out
pop
add
mov
jno
mov
sbb
fistl
inc
or
test
gs
mov
scas
and
adc
mov
xchg
dec
shll
stos
and
sub
in
imul
outsl
stos
add
loope
ja
ret
mov
sub
outsb
int
repnz
mov
xchg
sbb
sti
xchg
rolb
push
fbstp
and
xchg
call
xor
cmp
xor
pop
jp
lock
xorb
imul
add
lods
pop
mov
icebp
mov
mov
adc
cld
adc
mov
mov
cmc
leave
xor
fs
jg
ret
adc
stc
lock
xor
adc
xor
sarl
pop
and
loop
sahf
addr16
pop
inc
pop
nop
leave
adc
ljmp
mov
sbb
sahf
adc
aam
mov
jnp
out
xchg
or
sbb
inc
fcmovb
ficoml
js
in
test
lcall
loope
out
push
ljmp
addl
mov
pop
pop
push
outsb
int3
jge
aas
scas
in
imul
jae
adc
mov
mov
insb
jg
adc
adc
in
pop
fwait
test
and
mov
cld
or
mov
jns
aas
sti
mov
test
cs
icebp
mov
adc
and
call
mov
fwait
loop
pushf
add
rorl
xchg
mov
mov
in
iret
jl
mov
das
call
test
mov
push
jecxz
test
or
xchg
adc
out
ja
xor
test
adc
jmp
sti
addb
lahf
sbb
sti
fdivrp
and
xchg
add
mov
rol
push
and
repz
lea
loopne
sbb
jmp
loop
hlt
sub
and
int3
jnp
jbe
sub
sahf
xchg
cltd
test
aas
je
pop
mov
in
dec
fildl
ljmp
hlt
jmp
cmpsb
incl
scas
pop
ja
xchg
inc
stc
ss
out
sbb
dec
lock
ja
mov
mov
es
test
and
or
clc
sub
lock
fcoms
inc
lcall
cs
dec
repz
dec
in
test
inc
inc
int
cmc
cmp
out
dec
pop
add
xchg
sti
fucom
enter
das
adc
pop
test
scas
lahf
jne
pop
aam
dec
lea
fstpt
bound
jg
pop
loop
xlat
out
decb
jle
pusha
addr16
sub
xor
jnp
mov
test
in
xchg
sbb
out
sub
int
xor
cmpb
push
ret
mov
xchg
dec
rolb
out
dec
cmpsb
pop
outsl
fmull
jo
mov
dec
mov
lods
testb
sub
mul
addr16
ror
jnp
sbb
jb
xor
cwtl
or
and
adc
mov
ja
sub
pop
or
sbbb
js
mov
jp
xchg
mov
mov
pop
adc
xchg
fwait
xor
mov
xchg
pop
push
shrb
mov
sub
cmp
push
mov
sbb
lods
fisubs
mov
push
push
add
adc
iret
pop
hlt
sub
jnp
mov
ficomps
cs
out
mov
mov
sbb
loope
push
mov
sbb
dec
add
dec
aaa
jg
sti
xchg
jle
es
shlb
into
adc
or
push
pushf
cmp
dec
inc
hlt
ljmp
dec
push
out
push
ds
test
outsb
loope
sub
cmpsb
mov
mov
mov
aas
sar
rcl
outsb
stos
xor
data16
cmc
mov
sub
stos
les
mov
in
nop
pop
sarb
add
mov
les
mov
sbb
inc
xor
and
mov
pushf
stc
push
dec
scas
and
push
lcall
inc
sbb
pop
jnp
jb
pop
imul
mov
sbb
sub
xor
lods
xchg
sub
dec
mov
nop
mov
or
rcrb
mov
aam
sbb
testl
lret
jnp
xchg
outsb
add
push
ret
jns
enter
mov
dec
cmp
stc
call
std
fs
xchg
shlb
clc
fwait
pop
mov
or
mov
clc
cmpsl
outsb
pop
xor
mov
jns
push
xchg
mov
dec
int3
aas
das
out
icebp
stc
sub
fidivrs
and
mov
aad
mov
pop
pop
sahf
cmp
fnsave
cltd
out
mov
inc
clc
dec
and
xchg
inc
inc
xchg
sub
cli
add
insl
mov
inc
sahf
je
fs
int3
lcall
cwtl
test
or
push
mov
cmp
je
and
repnz
inc
popa
sub
xor
xchg
add
pop
dec
pusha
stos
sbb
push
inc
xor
stos
and
mov
jmp
cli
pop
aas
in
inc
scas
iret
sub
pusha
inc
insl
enter
sub
jb
jnp
jns
xchg
out
aam
fidivrl
pop
popa
jl
mov
xor
fldt
cmp
add
push
jl
mov
sbb
cwtl
cmp
push
sar
xchg
and
in
loopne
dec
fstl
frstor
mov
imul
je
adc
adc
xor
push
mov
lods
and
dec
pop
jle
stos
test
rolb
inc
loop
cmc
lcall
movsb
int
sbb
pop
sbbb
stc
lret
cltd
lods
cmp
or
div
mov
aas
add
ret
hlt
lahf
mov
sub
bound
dec
out
imul
or
jns
scas
and
loope
test
gs
adc
mov
cmp
and
jns
jbe
lahf
stos
mov
pop
call
ret
dec
mov
adc
mov
fwait
jne
shll
lock
out
jns
add
mov
adc
das
sbb
push
je
or
mov
or
or
rcrl
push
je
jnp
orb
push
xchg
adc
pop
adc
dec
add
stos
sarl
iret
mov
rcll
jbe
push
jne
lea
cmpsb
mov
insl
jmp
test
xchg
out
xchg
es
push
pop
out
aas
push
pop
repz
mov
call
pop
dec
sbb
xor
aas
xor
int
mov
cld
negl
cmc
push
ret
lds
pop
xlat
dec
shlb
add
sbb
adc
mov
push
faddl
jmp
jb
aad
add
cmp
xchg
stos
mov
cmp
or
add
shr
aaa
outsb
repz
pop
pop
cmp
int3
and
pop
in
push
out
test
push
sbb
inc
scas
push
xor
sbb
pusha
icebp
cmp
cmp
cmp
test
xorl
pop
jecxz
data16
lcall
jne
cltd
daa
arpl
flds
xchg
and
push
scas
mov
dec
lcall
bound
push
dec
cmp
imul
inc
mov
pop
add
mov
arpl
test
fstl
sbbl
inc
enter
out
or
xchg
dec
call
or
out
push
adc
jb
stos
push
mov
fistps
mov
and
sti
xchg
fldl2t
adc
dec
add
addr16
loopne
in
inc
cli
inc
dec
test
inc
and
repz
pushf
leave
lret
mov
pushf
test
or
lea
shlb
and
lcall
jno
inc
sbb
mov
int3
mov
push
pop
repnz
stc
and
push
sub
mov
out
inc
out
outsb
lds
dec
mov
leave
imul
cld
mov
pop
stc
popf
sub
rolb
popf
mov
sbb
scas
out
inc
sti
jg
pop
sbb
push
dec
xchg
push
stos
pop
cwtl
dec
and
insb
jmp
fnsave
in
add
cmp
mov
es
xchg
jmp
test
outsb
iret
xchg
mov
int3
fs
dec
in
cs
pop
cs
jle
outsl
xor
pushf
mov
lods
ljmp
mov
jmp
popf
xor
or
in
push
pop
push
scas
cmp
data16
jecxz
sbb
push
pop
fisubrl
push
fsubs
jecxz
out
lds
bound
xor
push
xchg
loop
or
mov
or
mov
jmp
scas
inc
jb
dec
mov
es
sub
cmp
sysexit
sbb
stc
cmp
rorl
incl
leave
pusha
int3
data16
shlb
mov
adc
es
xor
sti
inc
jb
dec
pop
mov
inc
je
shll
rorb
sbb
sub
adc
jne
push
mov
lahf
ds
sbb
mov
out
and
adc
pop
in
test
lods
ret
xchg
cmpsb
xor
xchg
pushf
sub
jns
cmpsl
mov
xchg
pop
cld
mov
sub
imulb
cmp
pusha
and
popa
call
cmp
dec
add
rclb
mov
push
mov
loopne
aas
outsl
andb
cmp
inc
xlat
xchg
jp
ss
ret
fildll
sub
and
mov
aad
dec
mov
repnz
adc
sbb
test
lret
cld
or
xchg
jmp
mov
xor
dec
bound
in
adc
push
inc
sti
push
dec
lahf
cmpl
adc
xchg
pop
fdivl
push
leave
jg
jg
mov
pop
pop
mov
daa
lret
movsl
out
jo
adc
insb
ror
mov
ds
aad
push
out
mov
inc
out
outsb
loope
xor
repnz
and
js
and
ss
xchg
out
std
add
inc
cmc
lahf
repnz
cmpl
dec
pop
in
cmp
cmp
lcall
push
fsubr
cmpl
push
lret
stos
js
adc
popa
imul
add
pop
adc
ret
addr16
jecxz
stc
adc
in
jl
into
stc
popf
jl
add
xchg
jo
sbb
xchg
icebp
mov
daa
out
pushl
daa
fistps
stos
inc
fisubrs
adc
mov
mov
mov
roll
popl
in
or
jae
fdivs
sarl
xchg
shrl
xchg
fwait
xor
xor
aad
scas
mov
mov
jbe
loope
shlb
popf
jmp
pop
jo
div
notl
daa
ds
dec
cmp
mov
dec
sub
inc
int3
dec
dec
out
lea
gs
inc
lea
push
int3
loopne
call
hlt
in
cmpsl
ds
jmp
lds
rol
cli
sub
and
xchg
sbb
ljmp
es
stos
mov
shrb
hlt
push
cmc
dec
fldt
or
inc
scas
fmull
mov
cwtl
pop
mov
dec
cmp
stos
mov
push
dec
bnd
jns
jae
sbb
add
sub
inc
outsb
adcb
jb
es
lea
jp
call
cmp
pop
jl
nop
xchg
test
mov
sti
pop
adc
stos
jp
or
cs
insl
jmp
or
jns
xlat
negl
lds
jl
fistps
daa
dec
loopne
cmp
insb
sub
cwtl
push
xor
jo
aas
lcall
push
xor
and
icebp
sbb
push
mov
cmpb
adc
stos
cmp
sbb
in
stos
ret
cmpsl
add
or
out
sub
std
adc
sarb
insb
fistpll
cltd
jg
xor
cmp
mov
into
daa
hlt
ja
out
mov
int3
sbb
cmovge
call
mov
jp
out
push
mov
add
xor
cmp
push
dec
bound
scas
push
mov
and
inc
push
dec
sub
mov
test
pop
jmp
mov
mov
cli
mov
cmc
mov
fdivrp
mov
sub
leave
pop
xor
cmp
loopne
jp
pushf
mov
jo
mov
lods
pop
pop
mov
out
jp
adc
push
inc
jecxz
jbe
mov
push
lret
in
add
test
mov
dec
adc
stos
sahf
xor
inc
mov
cs
or
rclb
insb
insl
mov
in
and
lret
adc
pop
insb
sbb
fs
imull
fisubs
ret
jmp
add
hlt
push
lea
mov
fnstcw
cmp
int
jmp
pop
inc
and
outsl
xchg
sub
fnsave
aaa
hlt
xor
jl
pop
jns
mov
cmp
add
pop
aaa
mov
mov
cmp
jecxz
adc
sbb
cwtl
fidivs
add
push
jo
lods
dec
push
sub
and
inc
mov
addr16
in
ja
pushf
mov
push
mov
test
mov
sbb
enter
repnz
cmp
mov
loopne
jmp
adcb
cwtl
push
ljmp
sarb
cli
mov
jae
xchg
es
sbb
int3
ret
xchg
xor
sub
jae
test
adc
pop
sbb
dec
sub
aam
enter
stos
dec
mov
push
std
sbb
das
js
dec
ror
fcoml
dec
aad
repz
inc
lods
andl
or
in
jo
ret
mov
add
dec
mov
fs
mov
mov
xchg
popa
mov
jae
pop
in
xchg
out
leave
or
mov
shll
cmp
sub
hlt
clc
ja
sub
dec
cmp
shrl
lock
loope
lcall
stc
addb
mov
ds
repz
or
shlb
push
mov
xchg
adc
in
push
scas
out
or
lea
in
insl
mov
mov
mov
cmp
lcall
cwtl
xor
mov
fwait
mov
cs
adc
xchg
inc
jbe
dec
xor
lcall
lea
dec
mov
push
jle
fs
mov
idivl
xlat
cli
or
fwait
or
mov
dec
mov
mov
push
in
les
dec
fiaddl
jns
jmp
aaa
xor
lret
lock
xchg
daa
xchg
jmp
iret
xchg
inc
mov
ror
cli
loope
cmc
lock
push
jae
adc
sbb
or
cmp
adcb
inc
add
js
stc
sub
xchg
jo
dec
enter
pushl
push
jecxz
pushf
sahf
jp
int3
sti
mov
test
dec
cmpsb
in
test
push
xchg
xlat
jo
inc
in
dec
push
push
ror
arpl
aaa
sub
or
daa
je
loop
aad
stos
cld
fmull
mov
xchg
cmpsl
jmp
enter
loope
outsb
push
daa
out
or
dec
xor
fld
push
hlt
cmp
sahf
mov
pushf
pop
xchg
sub
das
movsb
and
call
out
ss
shll
hlt
aas
mov
dec
test
pop
mov
lret
sbb
aam
repz
fdivrl
pop
sub
cmp
jnp
fadds
mov
stc
dec
hlt
xor
sub
jae
or
cmp
cld
cli
xchg
sub
out
sub
sahf
dec
push
inc
lock
jge
pop
hlt
dec
std
fbld
sbb
adc
addr16
xor
xor
pusha
jnp
mov
pop
mov
aaa
add
sbb
pushf
sbb
mov
adc
pop
xchg
jmp
pop
mov
inc
cwtl
inc
out
stc
ja
push
lods
xchg
push
jge
inc
cmp
mov
scas
xor
das
adc
daa
divb
pusha
ret
bound
mov
or
repz
jb
mov
xor
add
cld
pop
mov
fsubrl
ficoml
cmp
mov
fstl
ja
outsl
addr16
xchg
iret
mov
sbb
insb
iret
push
data16
pop
repz
xchg
sub
push
cmp
cmpsb
outsl
and
dec
jg
adc
mov
jl
pushf
xchg
ljmp
lock
jp
pop
nop
lea
ret
inc
fs
mov
sub
xchg
or
pop
jg
add
test
xchg
scas
cmp
rorb
dec
or
aam
ret
shlb
repz
ss
mov
sbb
inc
jmp
cmp
pop
neg
es
xor
stc
jle
lds
arpl
jg
rclb
test
int
out
jge
push
mov
stc
je
pop
xor
int
repz
sub
sbb
or
cmc
inc
xchg
ds
aas
jb
popf
scas
dec
pop
es
push
cld
out
sbb
sbb
cmpl
and
inc
fldt
lea
adc
aad
out
push
mov
mov
fistl
aas
cli
cli
pop
insb
push
xchg
lds
ljmp
pop
mov
mov
sbb
or
sahf
fmuls
faddl
lock
stos
fidivs
rorl
cmp
sbb
dec
cmpl
sbb
inc
loope
popf
xor
mov
js
mov
jp
cmp
jp
cmpsl
and
negl
cwtl
shr
leave
xor
cmp
test
sbb
das
sub
cmp
and
sbb
dec
dec
rclb
mov
and
jecxz
andl
je
push
xor
cmp
pusha
sbb
in
push
in
cmpsb
imul
jnp
jae
call
or
stc
adc
das
js
das
inc
jns
add
lea
or
adc
pop
ds
test
mov
aas
push
or
shrb
xor
leave
pop
pop
loope
sbb
int3
enter
ret
cs
push
or
xchg
sbb
enter
outsb
ljmp
fwait
xchg
push
or
push
mov
jno
stc
notb
xchg
in
dec
ds
int3
jnp
mov
push
cmpsb
jne
cld
mov
or
int
call
ror
pop
lods
add
stos
mov
fisttpll
shrb
lret
or
test
push
addr16
enter
popf
jl
sbb
add
sti
add
je
or
repz
or
push
imul
mov
std
ror
and
jl
pop
imul
mov
out
aas
xchg
push
add
pop
jp
pop
xor
push
push
inc
jno
mov
adc
dec
ljmp
das
lret
hlt
inc
adc
repz
xchg
push
sub
daa
gs
push
jns
or
sbb
lods
gs
in
test
mov
stos
sub
jns
call
stos
ret
push
arpl
fmul
fcomip
adc
mov
out
push
cmp
mov
movsb
addr16
js
aas
and
dec
mov
lods
movsl
mov
sbb
adc
clc
sub
xor
insb
xchg
pop
sbb
mov
xor
jp
adc
xchg
add
ret
call
mov
mov
in
inc
fnstsw
sub
mov
sti
lods
inc
sub
push
dec
dec
sub
aaa
inc
gs
cmp
popf
mov
pop
sub
sahf
in
mov
push
push
test
sub
jne
sbb
addb
aad
sbb
insl
loopne
daa
jmp
cmp
pop
add
out
aaa
cmc
loop,pt
push
pop
adc
stc
xchg
sbb
scas
and
sub
push
cld
shll
cmpsb
js
frstor
shrl
movsl
das
mov
jecxz
sbb
cmp
add
fbstp
cmpsl
adc
cmp
xchg
iret
push
stc
adcl
adc
fisubs
lock
cmp
sahf
testb
and
iret
sub
add
shlb
lock
xchg
test
add
sub
mov
ret
push
scas
add
mov
test
loop
jg
mov
arpl
outsb
pop
shrl
dec
sbb
jns,pt
gs
adcb
insl
inc
sbb
inc
scas
and
add
and
aam
jg
push
insb
out
push
sbb
les
push
inc
cmp
mov
lods
cmpsl
aaa
mov
sbb
dec
push
xchg
stos
adc
outsl
xchg
loopne
dec
xchg
mov
jp
mov
ljmp
pop
mov
jae
ficompl
cmp
push
insb
add
and
xor
mov
jl
stc
push
lock
mov
and
sti
push
cmp
imul
out
bound
adc
mov
jg
inc
add
stos
push
mov
or
rolb
movsl
mov
sub
sub
jmp
sub
cmp
mov
insl
sbb
ret
dec
mov
push
bound
add
cmp
movl
shrb
fsubrl
dec
arpl
or
jl
test
movl
dec
out
sbb
insl
sub
cltd
arpl
cli
enter
sub
in
scas
call
dec
dec
andb
stos
or
in
jns
adc
pop
rcl
or
mov
push
lret
insl
std
jne
xchg
call
fwait
add
aaa
mov
pop
in
mov
test
add
cmovge
popf
xor
jmp
mov
xor
and
pop
sarb
cs
test
call
dec
sbb
pop
les
pusha
mov
inc
mov
cmc
ljmp
xchg
fbstp
lea
xchg
xchg
lds
jbe,pt
icebp
mov
mov
push
inc
adc
xchg
xor
stc
mov
ljmp
out
jecxz
rorl
call
inc
and
lods
pop
fbld
ret
pop
enter
sbb
cmp
cmp
lahf
and
add
mov
popf
setne
adc
out
in
loopne
jmp
rolb
cmpsb
pop
loope
cmpsl
mov
jg
jne
andl
mov
mov
mov
inc
adc
mov
xchg
leave
dec
pop
sti
mov
in
adc
repz
xor
adc
rolb
imul
sub
test
add
mov
or
pop
lock
mov
mov
fimull
add
sub
sti
pop
adc
inc
sti
xor
sub
cmp
xchg
add
data16
sub
add
movsb
adc
inc
int
adc
fsubp
add
insb
mov
jno
cmpsb
and
je
sbb
mov
faddl
sub
fwait
std
mov
das
std
sbb
aas
aam
test
js
add
inc
and
int3
jl
movsl
mov
jmp
aad
movsb
cmc
adc
xor
jecxz
lea
push
outsb
popf
bound
jae
or
jb
xchg
xchg
insl
leave
mov
rcrl
jne
mov
and
xor
add
les
sbb
cmpsb
cmp
dec
add
dec
sub
lds
lret
sub
insl
push
inc
push
xor
lahf
mov
into
test
out
lea
inc
ja
ljmp
xchg
ja
in
push
mov
xchg
pop
xor
mov
lret
sbb
in
loopne
mov
fisttpl
sti
dec
jno
out
push
cmp
lods
ja
mov
jbe
aaa
push
cmpsb
or
imul
in
dec
sti
mov
scas
pop
inc
aaa
ret
sbb
xor
lret
push
vpsadbw
add
mov
pop
dec
cmp
out
sbb
xor
cli
idivb
daa
sbb
outsb
stc
nop
imul
popf
mov
push
icebp
clc
adc
into
out
mov
adc
imul
je
pop
repz
repnz
std
pop
popa
xchg
add
out
cmp
adc
xchg
insl
or
mov
pop
and
xchg
inc
mov
mov
test
xor
mov
mov
cmp
aam
inc
sub
jnp
ljmp
lret
lods
or
mov
lahf
pushl
sbb
inc
in
fcompl
iret
loop
inc
mov
adc
add
jg
cmp
xlat
dec
mov
enter
sahf
std
or
aaa
hlt
inc
lock
aad
test
cmp
out
xchg
xchg
mov
shlb
bound
popf
lds
mov
jge
ljmp
or
test
mov
push
add
repnz
xchg
push
mov
mov
test
lods
inc
xor
jge
pop
dec
popa
dec
aaa
negb
cmp
mov
dec
lcall
jbe
xor
push
gs
fsubl
ds
and
cmp
jg
push
mov
pop
test
dec
in
adc
mov
inc
dec
jmp
fsubrl
push
add
jg
jp
mov
into
adc
jno
out
in
mov
movsb
pop
ljmp
cmp
inc
test
sahf
rorl
and
pcmpgtd
loopne
das
lea
mov
xor
mov
fbstp
pop
dec
push
or
enter
in
subb
mov
or
outsb
jne
cmp
popa
jl
inc
jge
add
or
cmpsb
inc
pop
jno
mov
and
das
mov
lods
cmp
lahf
pop
adc
sbb
cs
jle
mov
add
btl
addr16
xchg
sub
dec
mov
pop
inc
inc
pop
hlt
jge
shr
and
inc
sbb
jle
inc
sub
fs
cmpsl
scas
and
push
ret
addl
jg
inc
bound
add
loop
lods
lds
fmuls
movsl
sbb
mov
sub
mov
stc
cltd
out
mov
mov
clc
inc
pop
inc
int3
pop
cwtl
cmp
in
test
arpl
gs
push
jecxz
out
xor
sub
inc
xor
into
pop
clc
movsb
addr16
shrb
int
daa
test
push
mov
stos
adc
pushf
add
js
iret
js
cmp
pop
mov
negl
xchg
cwtl
pop
push
push
iret
inc
jnp
sbb
inc
sbb
je
lock
aam
mov
out
movsb
rolb
push
rcrl
jmp
mov
adc
fs
outsb
andl
mov
jnp
mov
pushf
call
sub
jbe
and
lea
ds
call
test
mov
repz
fwait
es
int
sub
pop
shrb
lahf
loope
repnz
cmpsl
ds
sbb
push
inc
jb
int
and
icebp
push
jmp
rep
xchg
in
out
pop
int
sub
jge
or
pop
inc
pop
xchg
scas
dec
stos
mov
pop
popa
cmpb
stc
movsl
cmp
cmp
mov
jl
adc
mov
xchg
out
mov
mov
push
imul
xchg
sub
test
adc
iret
pop
cmp
into
add
in
adc
bt
mov
adc
mov
xor
xchg
push
sbb
pop
push
pop
movsl
cmp
ret
fcompl
dec
ljmp
push
push
cmc
in
jae
jp
cmp
push
fs
lahf
shrl
out
sahf
hlt
mov
std
push
or
repnz
movsb
sti
push
adc
and
lods
jnp
inc
xlat
stos
or
sbb
outsb
in
and
add
sub
dec
incl
lods
adc
sar
nop
dec
lods
jnp
or
dec
pop
xchg
cld
xchg
outsb
sub
and
or
sti
dec
xor
jno
or
dec
pop
adc
shrl
es
jnp
sbb
xchg
test
dec
pop
mov
jge
cmpsl
mov
ja
mov
xor
mov
rcll
mov
jl
pop
mov
mov
arpl
mov
aas
dec
inc
fldl
mov
cld
cltd
idivb
dec
cmp
mov
daa
lcall
sbb
adc
jbe
and
sub
sub
iret
imul
mov
adcl
push
mov
or
mov
xchg
ljmp
orb
cltd
shrb
enter
mov
dec
mov
lcall
mov
pop
pop
fdivs
or
adc
inc
sbb
pusha
jge
mov
pop
loop
inc
sub
adc
sar
stc
stos
dec
jbe
mov
mov
cmp
push
dec
jp
add
xor
insb
and
jno
pop
xacquire
add
mov
add
into
enter
jns
dec
aam
icebp
mov
pop
daa
and
imul
sub
mov
push
xchg
sbb
fidivl
cmp
and
pop
mov
or
mov
in
mov
push
add
jno
out
push
popa
leave
jbe
xchg
scas
sbb
and
adc
inc
int
into
push
cmp
inc
imul
pop
xchg
pop
lea
xchg
push
pop
lock
push
sbb
inc
jg
xchg
sbb
rcrw
pop
das
call
fidivs
mov
jl
test
or
pop
shrb
jle
dec
pop
xchg
inc
mov
mov
ficoms
clc
mov
push
cli
jge
cltd
gs
xchg
dec
jge
jae
inc
pop
dec
cmc
scas
ds
stos
test
es
movsl
mov
lret
adc
push
mov
mov
mov
adc
jle
stos
sahf
push
dec
adc
and
inc
sub
movsb
loopne
sbb
lahf
add
rcrb
ds
lds
pop
adc
xchg
jmp
xchg
hlt
jo
aaa
add
xlat
mov
inc
mov
mov
and
adc
mov
jne
pop
in
iret
lahf
jl
pop
movsl
adc
out
or
adc
repz
xor
pop
cmc
stc
rcpps
inc
testl
cld
lds
jnp
repz
xchg
in
jbe
filds
xor
movsl
add
insb
mov
sub
pop
pop
xlat
outsb
dec
insl
add
mov
xchg
adc
orb
xchg
stos
mov
sarb
pop
add
jno
adc
push
insb
aaa
push
insb
jle
xor
rol
aad
pop
fsubr
jb
sbb
dec
ja
fstpl
cmc
fnstsw
sub
or
incl
xor
adc
push
js
mov
ss
test
imul
cmp
ja
outsl
outsl
loop
cltd
push
mov
and
push
push
sub
add
push
out
xor
outsb
jno
lods
mov
in
movsb
and
xlat
mov
scas
mov
aad
cld
dec
inc
testb
fidivrl
scas
mov
jnp
test
cmc
adc
inc
pop
imul
shr
mov
mov
fs
add
shlb
push
test
lahf
dec
adc
fcompl
out
imul
add
les
dec
mov
inc
fidivl
cmpsb
add
loopne
jecxz
inc
fst
mov
fidivrl
cmpsl
and
test
insb
enter
mov
loope
shr
inc
adc
cs
push
out
int3
xchg
sbb
out
mov
mov
lods
fldcw
add
mov
adc
pop
sysenter
nop
scas
out
inc
mov
jne
cmp
out
subb
mov
add
inc
pop
popa
inc
push
cmp
js
add
iret
in
xchg
push
cmc
iret
cmp
mov
inc
lods
sbb
push
jns
mov
inc
dec
push
mov
lods
das
sbb
dec
sub
loop
adcl
into
adcl
or
sub
push
imul
orl
mov
int3
fs
test
adc
out
sahf
mov
push
or
push
add
test
sub
test
sub
add
imul
in
xchg
data16
xchg
xchg
mov
xchg
test
into
push
lock
and
rorb
xor
mov
push
pushf
xchg
add
fidivrs
in
lahf
int3
lcall
mov
pop
shlb
xchg
cmp
inc
sub
incl
popa
into
mov
cmp
lods
sbbl
lret
mov
jle
into
push
or
jle
add
adc
xchg
xchg
fdivs
nop
mov
in
stos
aad
in
bound
jp
cmp
xchg
cmp
sahf
cmc
mov
or
cmp
pop
cmp
mov
fwait
movsb
inc
aam
repnz
jmp
rorl
addr16
dec
mov
mov
lock
inc
imul
jae
mov
lods
dec
rolb
mov
rcl
shll
mov
sbb
test
popf
aas
insl
out
orb
mov
fisubl
mov
cmp
pop
add
jo
cwtl
and
sub
push
dec
scas
xor
addr16
lock
adc
enter
aas
lods
loope
fisttpl
dec
jno
sbb
lock
sub
scas
xlat
test
pop
pop
dec
jp
push
fisttpll
cld
xchg
cli
dec
shrb
add
lret
pop
test
cmp
and
lods
shr
xor
cmp
shl
xchg
sbb
mov
lret
in
inc
std
inc
inc
mov
mov
push
lock
cld
push
push
flds
rorb
insb
jo
pushf
xor
xor
fdivs
jbe
insl
xor
sahf
mov
xchg
stc
jg
xchg
mov
lret
data16
cmpsl
mov
pop
les
jl
lret
pop
adc
out
shrb
popf
push
pushf
ret
inc
inc
jecxz
inc
lcall
mov
loope
aad
pop
aas
cld
push
sbb
das
flds
movsb
pop
cmc
pop
jmp
notl
dec
outsb
movsl
mov
and
adc
push
out
out
mov
inc
stos
add
xchg
jae
cmpsl
sti
out
aad
hlt
xchg
add
test
mov
pop
jp
mull
cwtl
das
mov
mov
lret
in
outsb
jmp
or
jbe
fnstcw
fldt
insb
adc
arpl
dec
ljmp
xor
test
fs
int
fidivs
std
fildll
mov
call
addb
movsb
ja
fcoms
xchg
shlb
cmp
out
xchg
pop
in
mov
sbb
inc
sub
fst
mov
nop
mov
sbb
aam
shlb
mov
sub
rorl
adc
cmc
mov
fidivrs
sub
xchg
dec
in
clc
push
aas
dec
sahf
out
sbb
xchg
and
ljmp
outsb
gs
iret
push
loope
mov
fcos
mov
fxch
mov
subb
cmp
cmpsl
shl
xor
and
out
gs
jmp
dec
stos
mov
loopne
push
sahf
movsb
cmpsl
mov
ljmp
pop
aaa
int
andl
enter
and
push
sub
mov
fcmovnu
in
mov
data16
jo
sbb
lret
xchg
imul
lock
fwait
sahf
sub
cmpsb
pop
ss
fcomi
lret
mov
push
pop
sbb
mov
out
mov
xchg
mov
inc
mov
notl
dec
dec
fsubrs
lock
fsubrl
loopne
andl
jge
pop
xchg
or
lds
gs
icebp
xchg
in
mov
dec
push
stos
js
sbb
cli
fs
cli
sbb
mov
push
jbe
ret
mov
lods
test
mov
add
xchg
xchg
mov
data16
pop
jp
cmp
push
add
roll
mov
adc
popa
mov
mov
lods
mov
push
enter
mov
push
and
lea
aaa
add
ss
xor
adc
pop
xchg
xchg
pop
mov
add
pop
mov
mov
imul
sarl
mov
call
test
jno
dec
push
jp
rolb
xlat
lock
mov
dec
scas
lret
xor
add
dec
arpl
and
repz
cli
or
jno
push
je
xchg
add
sahf
out
negl
pop
iret
pop
cmp
inc
pop
mov
pop
rcrl
jle
repnz
adc
adc
mov
inc
cltd
push
mov
add
imul
and
jmp
fidivl
cmp
js
mov
outsl
add
aam
jno
popl
ss
mov
mov
fiaddl
shrb
testb
or
xor
dec
ja
cmp
xor
inc
push
or
stos
push
sarb
dec
adc
or
adc
cltd
add
mov
fsubrl
jp
push
pop
test
xor
imul
xor
jbe
xor
fstpl
testb
in
movsb
repnz
mov
out
jge
enter
inc
out
sbb
je
pop
cmp
popa
adcl
loop
sub
pusha
sbb
jg
adcl
dec
adc
std
gs
int3
popf
push
xor
test
lods
jmp
xor
adcl
xor
push
or
pushf
push
jno
push
dec
rcrb
insl
or
repnz
bound
mov
leave
pusha
jl
adc
sub
cmp
pop
scas
fs
inc
cmp
ss
rclb
jge
mov
jmp
test
pop
stos
hlt
or
adc
mov
sbb
dec
iret
ja
cmp
mov
cmpsl
sti
push
mov
xor
aad
cmpsl
sub
mov
xor
adc
test
lods
ret
aaa
jp
inc
in
jle
scas
cmp
subb
pop
mov
pop
das
popf
xchg
push
fwait
xchg
xor
mov
dec
add
fwait
push
ja
scas
jno
adc
push
mov
leave
nop
or
outsl
or
fldcw
sbbl
push
mov
and
sti
or
or
pop
mov
inc
jnp
xor
nop
lahf
push
dec
adc
scas
jbe
movsb
aaa
lods
das
cmp
jle
add
xchg
pusha
xor
lock
les
fldenv
pop
mov
loop
and
cmp
arpl
xchg
pop
xchg
psrlq
rcll
in
mov
out
cld
cli
xor
xchg
add
mov
setl
ljmp
lock
sahf
sub
mov
fbstp
loop
test
lret
pop
cmc
jo
cmc
ss
enter
pop
lods
and
xchg
jb
mov
jae
int3
adc
pop
mov
scas
les
imull
fsubl
mov
scas
aad
and
sub
dec
push
insl
lods
ret
and
hlt
or
pop
outsb
movsb
mov
mov
adc
mov
jg
and
and
clc
mov
sub
imul
adc
je
push
aad
sub
aam
test
push
sub
fcmovnbe
into
and
in
cmp
in
pop
push
je
fwait
sub
inc
sahf
push
inc
lods
mov
mov
xor
scas
or
xlat
hlt
popf
daa
es
pop
mov
dec
scas
rcrl
dec
pop
sbb
adc
mov
fcoms
sbb
sbb
cmpsl
jb
cmp
fidivs
add
jmp
jae
add
fstl
pop
push
test
sub
sti
mov
and
cld
dec
shrb
repz
lahf
push
leave
fsubl
arpl
push
outsl
subb
notb
xchg
cmpsb
loope
out
out
lods
push
mov
imul
popa
push
fwait
and
inc
adc
jge
and
push
adc
xor
in
call
sbb
hlt
outsb
adc
ds
ftst
aaa
fdivrs
test
jne
cld
out
sub
sub
inc
pop
dec
dec
xor
dec
addr16
fldcw
push
jbe
cmp
sbb
aas
nop
out
or
jb
dec
test
push
in
shl
push
jbe
inc
mov
or
imul
lods
pop
outsl
push
mov
xchg
xchg
in
repz
adc
fmul
fadd
rcll
dec
adc
push
mov
fnsave
cmpsb
mov
addr16
bound
mov
sub
dec
ljmp
sbb
lret
imul
xor
xor
sub
cmc
ss
iret
movsb
test
aad
mov
pop
lcall
jbe
cmc
stos
rclb
jl
gs
push
cmp
rcr
and
shr
fildll
pusha
jnp
xchg
mov
mov
stos
sub
jb
in
xchg
jbe
das
ja
add
fwait
repnz
clc
mov
sub
xchg
jp
leave
insl
call
sub
std
leave
clc
ret
xchg
pop
cmp
dec
sub
sub
dec
push
sub
push
dec
dec
sbb
and
adc
dec
test
scas
sahf
pusha
aad
stos
mov
cmp
mov
mov
mov
pop
iret
pop
sarb
push
adc
pop
add
mov
in
sbb
or
or
cwtl
fildl
outsb
clc
or
inc
inc
jo
push
in
push
adc
sbb
add
add
mov
jge
adc
loopne
pop
out
cmpb
icebp
mov
pop
scas
les
ret
mov
ss
xor
push
jge
push
mov
mov
icebp
in
js
pop
iret
outsl
jmp
add
lret
inc
das
imul
sbb
xchg
stos
mov
sbb
sub
into
add
sbb
divl
add
jge
add
and
or
mov
xor
not
pop
lods
lds
mov
vmread
push
cmp
inc
repnz
jne
cli
gs
in
xchg
cld
mov
sbb
inc
loopne
ja
xchg
shr
push
add
push
cli
add
rorb
pop
sbb
xchg
bound
xchg
jnp
les
mov
int
add
aad
fs
imul
jg
add
dec
sub
push
pop
add
loopne
out
push
pop
xchg
in
xchg
sbb
cmp
addr16
mov
subb
cmp
lahf
add
jo
and
pop
pop
test
fnsave
xlat
jmp
or
and
addr16
cltd
in
add
mov
lahf
pop
add
es
dec
inc
inc
idiv
out
lock
sti
xorb
mov
rorl
dec
stos
lods
mov
popa
int3
aam
rorb
xchg
sub
mov
sti
dec
fildll
mov
jp
stc
inc
mov
andl
std
xchg
js
mov
inc
jns
cmp
inc
in
sti
pop
dec
inc
dec
mov
jl
call
lahf
dec
lahf
shrl
xchg
lcall
sbb
in
pop
mov
fadd
or
pusha
clc
in
cmp
push
cmc
or
cli
fwait
or
sahf
out
cld
pop
in
jp
jmp
test
lock
fwait
xor
popa
fidivl
pop
pop
dec
mov
jb
pop
testb
int
pop
loop
mov
dec
pushf
sti
inc
adcl
sbb
lds
inc
iret
subb
xchg
mov
scas
movsb
sub
cli
fadd
ss
jno
pop
imul
mov
bound
mov
jmp
rol
add
mov
mov
push
rorl
pop
mov
jo
inc
xchg
dec
repnz
mov
es
adc
daa
pop
xor
lcall
xlat
jns
xlat
inc
std
mov
jmp
inc
cmp
pop
ljmp
mov
xchg
dec
and
sbb
addl
xchg
ds
cmpsb
inc
js
stos
sub
pusha
push
jae
xchg
mov
out
cmp
clc
bound
int3
pop
xchg
outsb
jl
aad
and
call
lds
cmp
int3
sbb
xchg
call
sub
outsb
adc
pop
pushf
jbe
testb
popa
mov
icebp
jo
out
jno
sbb
pop
mov
int3
inc
popa
sub
int3
fidivrs
aad
cmp
stos
rclb
xchg
cmp
call
into
shll
xchg
sarl
dec
add
popa
xorl
mov
clc
xchg
aam
lcall
sbb
pushf
nop
das
mov
movsl
mov
subl
ss
dec
arpl
stos
jle
loope
testb
or
sti
xchg
rorl
jno
xor
sbb
fsubl
mov
bound
rolb
inc
loop
in
test
adc
bswap
sub
pusha
cli
out
jns
dec
outsb
jmp
push
outsl
test
jge
push
adc
das
mov
xchg
push
aas
dec
pop
xor
outsl
movb
push
jp
cmp
out
popa
xchg
xor
out
inc
sti
outsl
sub
jmp
jmp
mov
push
les
or
push
push
lods
aas
stos
fisubs
fadds
cld
andb
in
jge
pop
mov
pop
adc
lret
mov
mov
ja
arpl
les
mov
scas
pop
mov
subl
iret
inc
icebp
dec
mov
jae
icebp
iret
inc
cmp
fwait
std
push
aaa
and
add
inc
add
ror
mov
jne
ret
outsb
repnz
ss
mov
leave
int3
shrl
in
push
sub
in
daa
inc
sahf
dec
cltd
pop
push
lock
in
jns
cmp
sub
xchg
sbb
inc
cmp
ljmp
rcrb
testb
push
testl
jmp
or
lods
stc
jecxz
inc
adc
inc
add
aaa
ljmp
mov
push
lods
dec
mov
lods
inc
pusha
ljmp
xchg
dec
jne
popf
loope
push
xchg
mov
mov
dec
jo
rcrb
add
fistpl
mov
iret
mov
jne
lods
push
in
ficomps
jecxz
jae
xchg
cmp
mov
outsb
sbb
les
fwait
lahf
pop
push
dec
int
cmpsl
cmpb
mov
mov
test
pop
xchg
pop
xor
nop
into
out
add
dec
in
call
lods
stos
or
cmp
xor
je
mov
dec
jns
fisttpll
mov
add
popa
xchg
xchg
add
xor
movsl
mov
std
loopne
pop
popa
clc
out
dec
fucomip
and
enter
ljmpw
loopne
and
mov
push
daa
push
orl
mov
inc
test
sahf
andl
aas
adc
bound
mov
add
int
cmovo
jmp
sub
sbb
aaa
jae
pop
lcall
clc
jae
stos
jb
fnsave
jns
imul
iret
out
or
dec
ljmp
mov
jp
mov
cld
mov
lret
shrb
sbb
xchg
ja
movsb
cli
cwtl
loope
idiv
leave
xlat
lock
incl
cmc
sbb
test
addb
mov
sbb
pop
hlt
dec
cmp
ds
sbb
sub
imul
repz
push
mov
loopne
sub
xor
and
mov
or
daa
outsl
pushf
sahf
mov
jle
inc
mov
hlt
cmp
stos
adc
popa
clc
es
mov
or
shrl
sub
test
inc
push
sub
pop
push
jae
enter
ficoms
inc
or
popf
rep
mov
cwtl
lea
or
lea
icebp
fisubrl
ja
adc
xchg
and
xchg
dec
dec
mov
sarb
lret
mov
xchg
inc
fildll
data16
or
in
in
test
push
std
mov
ret
push
xlat
sbb
cmp
or
incl
xchg
sub
stos
ds
in
inc
and
jne
cmp
push
mov
std
cmp
push
notb
icebp
dec
in
push
stc
adc
movsb
imul
jno
aad
sbb
fsubr
mov
pop
push
adc
and
cmp
inc
outsb
xlat
aas
rol
stc
aad
and
and
inc
div
into
std
xchg
add
and
adc
es
pop
insb
push
shl
inc
stc
xchg
jp
lret
fdivl
dec
enter
cli
xchg
mov
dec
insl
adc
sub
xlat
sub
mov
adc
in
cmpsb
xor
xlat
or
mov
push
in
sbb
fsubl
xchg
mov
out
std
inc
pop
test
push
jmp
into
inc
jo
cld
sti
test
movsb
or
or
loopne
rclb
push
movsl
loop
jge
add
sub
pop
jp
xchg
sbb
dec
and
sbb
cmp
cmp
jge
testb
sub
jb
fstl
push
shl
jg
repnz
cs
push
inc
int3
push
cmp
out
mov
pop
jmp
dec
pop
adc
push
pop
mov
in
test
sbb
imul
aas
iret
mov
mov
and
jne
psubsw
enter
jp
shlb
enter
pop
jmp
jb
push
push
mov
lods
mov
add
scas
and
mov
fldl
pop
xor
iret
fisttpl
mov
or
daa
cmp
jo
ss
cs
mov
in
js
jno
jge
shrl
or
pop
out
mov
nop
mov
aaa
push
cltd
pminsw
pushl
aad
or
aad
xchg
out
add
xor
leave
mov
cmp
and
testl
cmp
sbb
aad
mov
adc
outsb
cmpsb
bsf
cld
jne
inc
lret
xchg
mov
fstps
xchg
pop
xlat
cmp
bound
mov
and
push
push
test
xchg
orl
jp
fildll
jmp
lret
pop
adc
gs
xchg
adc
in
ja
rep
pcmpeqd
inc
int3
push
test
fiadds
sub
test
push
pop
pop
dec
inc
js
ljmp
shrl
xchg
sub
cmp
popf
int
test
inc
mov
xchg
pop
mov
sub
insl
pop
adc
jg
pusha
imul
mov
or
int3
insb
dec
scas
xchg
outsl
repz
ret
mov
add
add
mov
mov
inc
mov
mov
and
xchg
pop
dec
inc
data16
mov
jmp
mov
jae
mov
sbb
pop
out
loopne
inc
lcall
arpl
or
or
pop
sbb
das
jbe
and
outsb
aam
xlat
jmp
jo
pop
cmc
das
ja
adc
xor
adc
pop
scas
push
lcall
mov
jae
adcl
push
add
in
jg
iret
sub
sub
xchg
pop
cltd
pop
cld
mov
leave
inc
bound
movsl
lods
mov
loopne
jns
dec
cmc
inc
xlat
lods
jmp
scas
fldl
cmp
adc
jl
fdivs
push
imul
mov
jne
pop
outsl
mov
cmpsb
cmp
fildll
xchg
jle
jge
lret
lds
aam
dec
aam
dec
or
and
lcall
mov
push
aas
xchg
call
dec
cli
out
xor
sbb
inc
repz
dec
mov
xor
jg
pop
cmp
mov
mov
test
cltd
mov
pusha
int
sbb
push
out
call
sub
xor
sarl
mov
cmp
inc
rol
repnz
out
lods
lahf
sub
ror
jbe
lock
sub
subb
or
out
sarl
repnz
push
nop
push
hlt
jp
ficoml
cltd
xor
sbb
or
mov
xor
rcrb
aas
push
out
pop
mov
jne
dec
or
push
cltd
xor
add
inc
jno
arpl
test
adc
inc
add
enter
das
pop
ljmp
push
jae
jmp
aam
test
out
sti
cmp
push
sub
mov
push
jnp
movsb
sarl
pop
push
mov
add
fstps
icebp
pop
sti
pop
lods
mov
push
pop
mov
push
cmp
in
pop
jg
jecxz
xchg
xor
enter
jle
adc
stos
mov
adc
idivl
xor
int
push
jmp
pop
add
in
inc
push
insl
movsb
out
js
test
mov
addr16
jmp
scas
popl
pop
in
xor
mov
test
jmp
adc
sub
adc
lock
pop
sbb
and
dec
test
ss
outsb
ja
je
xchg
sub
adc
pop
lock
js
ja
sbb
pop
push
and
mov
clc
jp
repnz
ds
imulb
xchg
add
arpl
test
lds
xor
and
int
sbbl
inc
lods
xor
call
lea
push
jp
sti
xchg
add
xor
sub
push
leave
lahf
push
dec
inc
or
or
sbb
or
sbb
ds
or
nop
add
mov
subl
int3
adc
dec
pop
rorl
cmp
jecxz
jge
inc
addl
adc
rcl
jmp
xor
pop
pop
xchg
push
and
fdivl
dec
or
outsl
dec
fs
in
aad
pop
aad
sub
add
add
aam
mov
popa
into
xchg
push
push
sub
xorl
iret
dec
adc
sbb
jnp
call
mov
or
and
xchg
aaa
or
lcall
es
insl
sub
loop
mov
mull
dec
idiv
pop
pop
mov
sub
jae
clc
jns
fidivs
pop
arpl
addr16
dec
jo
mov
adc
outsl
sub
arpl
repnz
ret
lcall
push
int3
cld
leave
repz
mov
pop
stos
test
mov
add
pop
or
dec
addr16
sbb
jmp
aad
fcoml
xor
jae
das
jnp
inc
pushf
xor
ficomps
lods
dec
ds
mov
test
jns
and
fidivs
fsts
jecxz
pop
scas
add
xchg
jo
cs
das
push
inc
jae
sti
jg
daa
mov
jo
adc
inc
inc
dec
cmpsb
popf
push
cmpsl
addr16
push
bound
or
xor
movsb
loope
cmp
xchg
jmp
call
cwtd
sub
push
mov
inc
mov
sbb
dec
cltd
iret
loopne
mov
dec
call
dec
add
icebp
mov
pop
jo
pop
adc
mov
push
xchg
fdivrp
scas
or
or
lods
xchg
aaa
rcll
cmp
sub
jb
dec
insl
or
add
nop
inc
call
movsl
movsb
fbstp
or
jb
cli
jp
and
icebp
shl
push
add
inc
add
pop
pop
cmp
ret
mov
sub
push
lds
insb
into
mov
comiss
fidivrl
push
sbb
pop
push
inc
jge
sahf
mov
push
sbb
jle
xorl
and
ja
push
rep
into
add
and
je
cmp
ss
push
rcrl
mov
cmc
push
out
mov
mov
adc
pop
mov
xor
scas
cmp
sar
popf
pop
dec
ret
push
xlat
rcrl
xor
cmpsb
xchg
xor
pop
fdivl
push
outsl
mov
dec
mov
and
ret
js
jle
in
xchg
test
sbb
out
sub
inc
add
daa
jecxz
pop
bound
out
scas
lea
mov
pop
jle
xchg
xor
mov
fbld
cmpb
add
in
cmp
inc
call
or
mov
pop
popf
clc
push
pusha
cmpsb
add
jns
sbb
inc
cwtl
insl
cli
and
mov
pop
ss
push
insl
pushf
es
or
xchg
in
push
lods
cltd
data16
adc
hlt
mov
cmpsl
out
mov
mov
out
push
or
cltd
andl
sub
mov
jne
pop
stos
mov
mov
arpl
mov
bound
and
pushf
push
mov
mov
xor
int3
imul
jge
cwtl
sbb
sbb
add
add
decb
or
stos
ret
imull
or
dec
mov
fbld
jl
cmovb
aam
adc
scas
shr
mov
dec
jno
add
in
lahf
sub
idivb
pop
repz
cli
cwtl
adc
out
test
mov
inc
mov
pop
sarb
mov
push
mov
push
jns
ja
push
rcr
xchg
sarb
adc
sub
scas
nop
dec
push
fdiv
mov
pop
ljmp
call
pop
dec
jecxz
push
addr16
lret
lods
pop
gs
inc
gs
dec
mov
movsl
out
aad
dec
mov
cmpsb
push
pop
test
add
ds
arpl
mov
inc
sub
fstps
mov
xor
mov
push
mov
mov
decl
add
popf
and
data16
push
test
xorl
sub
jl
dec
rcll
or
cmp
nop
xchg
push
xor
mov
fs
xchg
leave
xlat
fists
sbb
mov
shll
mov
xor
fidivs
mov
add
mov
cmp
xlat
mov
jnp
jg
std
sub
scas
dec
sarb
mov
or
addr16
mov
mov
loopne
and
dec
adc
mov
jno
mov
inc
popa
jl
jle
sub
push
daa
incb
jmp
sbb
push
test
jmp
pop
repz
add
jp
jmp
pop
adc
add
stos
push
jae
inc
movsl
cmp
sbb
fisttps
imul
add
cmpsb
int3
sti
add
mov
mov
fildl
jo
pop
pop
out
jg
inc
scas
or
xor
rcll
inc
add
inc
pop
inc
mov
repz
mov
nop
sbb
pop
push
push
lret
and
ds
call
out
dec
cmpsb
mov
aad
mov
or
outsb
scas
add
cli
mov
fs
sub
sahf
repnz
sbb
dec
inc
xor
fwait
lea
sahf
xchg
movsb
das
ljmp
pop
loop
addr16
ja
add
hlt
lret
pop
cwtl
cmp
scas
dec
and
scas
mov
xor
dec
mov
popf
dec
mov
mov
sub
or
jmp
fbld
icebp
jb
dec
je
in
in
bound
pop
dec
fisttps
pop
push
and
movsl
inc
adc
push
jno
sbb
jp
add
test
inc
add
mov
jb
mov
daa
cmp
xor
stos
mov
mulb
cmpsl
shrb
das
add
xor
pop
push
in
ret
shll
loopne
mov
bound
mov
sub
loop
aam
jp
lcall
test
push
cmp
lea
std
mov
aam
out
fnstenv
cmp
ljmp
jge
push
inc
sahf
enter
dec
daa
pushf
lods
mov
pop
icebp
sub
outsl
inc
cs
cmp
ja
daa
mov
push
data16
shrb
in
jns
das
adc
and
popa
jnp
aad
out
in
adc
aaa
xor
xchg
sahf
xor
jb
mov
stos
cmp
sub
test
sub
adcb
test
ret
cli
jecxz
lahf
and
std
or
push
clc
xor
sub
xchg
mov
bound
stc
xchg
mov
ret
or
jp
push
cwtl
sub
mov
xor
push
shr
mov
ret
mov
push
es
dec
leave
fnstsw
incl
adc
mov
nop
ljmp
jmp
and
dec
push
push
out
in
loop
sub
pcmpeqd
push
fistps
out
jne
pop
cmc
stos
pop
adc
mov
xchg
test
sbb
sub
in
pop
jecxz
lods
cmp
jne
icebp
fs
cmp
mov
and
sub
or
in
push
and
imul
insb
xchg
or
mov
pop
adc
adc
gs
outsl
cmpsb
sbb
sub
pop
cmp
punpckldq
xchg
sahf
es
pusha
fdivl
sbb
or
sarb
cwtl
and
dec
mov
sbb
fs
pop
into
fstpl
sbbl
pop
xor
xchg
addr16
dec
sbb
cmp
xchg
rcrl
loop
mov
sub
or
mov
xchg
xchg
mov
lret
pop
imul
and
push
lods
dec
and
mov
mov
icebp
xor
xor
push
xchg
mov
cmp
out
imul
fbstp
repz
inc
loopne
shl
and
pop
pusha
jb
xchg
jg
fiadds
push
and
in
adcl
cmpsb
call
addb
cmp
mov
add
mov
cld
xchg
int
in
pushf
aaa
imul
mov
daa
and
fiadds
lcall
mov
sbb
insl
jbe
lahf
add
pop
mov
leave
test
insl
es
adc
gs
pusha
enter
inc
mov
xorb
sarl
paddb
xchg
inc
pop
mov
add
mov
inc
add
movsl
shlb
insb
out
mov
out
mov
mov
out
cmp
mov
dec
out
hlt
pop
leave
dec
js
in
mov
idivb
pop
cmp
cmpsl
sub
push
sub
ret
xchg
and
pop
dec
fstpl
hlt
repnz
test
rorb
ja
sbb
das
in
sub
inc
icebp
inc
pop
and
xchg
xchg
faddl
std
stos
loope
push
and
pusha
ss
jmp
lretw
es
sub
loope
mov
jmp
xlat
jle
fldcw
loopne
xor
lcall
dec
data16
add
xchg
and
rcrb
out
int3
stos
andb
mov
jge
rcll
in
and
call
std
rol
and
jl
jp
xor
cmp
pushf
iret
or
jg
xchg
pop
insb
aad
or
and
sub
lahf
lods
mov
pop
mov
outsl
mov
push
cmc
push
ja
imull
pop
int3
xchg
or
or
out
or
jmp
lods
pop
cmpsb
push
bound
sbb
or
pop
je
dec
push
test
or
fildll
mov
lock
fnstenv
scas
fs
fbstp
outsl
popw
sbbl
adc
sub
aaa
mov
nop
call
sub
testl
sahf
add
sub
inc
pop
aas
push
or
mov
ss
repz
push
mov
fistl
sbb
or
fidivrl
adc
or
out
lds
cmp
xor
inc
addr16
jmp
scas
add
clc
jg
dec
jbe
or
insb
adc
cmp
mov
push
push
cwtl
jg
or
nop
in
out
cld
sbb
add
std
adc
cmpsb
cmp
inc
lret
dec
scas
cld
xchg
sarl
popa
mov
sahf
sub
sbb
leave
aaa
mov
inc
mov
xchg
add
ja
sbb
xchg
cmp
rcrl
cs
and
cmp
jecxz
push
aad
int
testb
push
popf
or
xlat
push
lahf
stos
into
stc
or
in
mov
pushf
loope
or
mov
xchg
addr16
mov
add
and
sbbb
xor
mov
imul
push
push
and
mov
js
inc
sti
pop
pop
pop
mov
aaa
dec
sbb
aad
sbbl
adc
add
cs
test
das
sub
mov
jl
into
and
in
cmp
ret
jle
xchg
dec
dec
repnz
jg
scas
int3
out
dec
sbb
sub
fnstsw
popa
xor
push
fwait
add
push
iret
mov
out
scas
mov
addr16
push
or
out
rclb
cmc
mov
add
into
addl
ja
adc
cmp
pushf
push
pop
in
add
repnz
add
pop
xchg
sub
test
les
push
dec
dec
xchg
or
jae
int
outsb
sbb
jns
add
jo
cmp
dec
imul
xchg
dec
call
cmc
push
cwtl
aad
es
outsb
xchg
add
xor
push
or
cmpsb
mov
in
inc
sbb
enter
inc
jo
orb
sbb
cmp
call
and
popf
xchg
sub
dec
sarb
rorb
loop
push
lds
sti
pop
fcmovnbe
cmc
dec
inc
std
xchg
aam
lods
pop
std
mov
xchg
das
xchg
inc
and
mov
frstor
jbe
imul
mov
lods
popa
pop
push
test
lea
cmp
mov
pushf
mov
ljmp
xor
and
lods
inc
push
fists
in
or
and
adc
push
int
pop
mov
mov
ss
scas
pop
push
pop
rorb
fsubs
and
cli
jnp
inc
sub
push
bound
andw
aam
jp
pop
jnp
sub
int
movsl
dec
pushw
lahf
adc
and
add
push
lods
dec
insb
lods
dec
jp
lods
enter
xchg
add
scas
sbb
push
negl
xchg
jbe
andb
or
xor
fsubrs
pop
sbb
push
dec
cmc
or
icebp
adc
or
xchg
test
adc
imul
mov
push
js
pop
pop
pop
loope
sub
add
loopne
mov
mov
push
mov
outsl
xchg
adc
lahf
pop
clc
xorl
aas
mov
outsb
clc
push
or
and
adc
xchg
aad
gs
ja
loopne
jo
add
dec
test
mov
dec
fdivrl
adc
imul
pop
mov
icebp
scas
test
push
inc
sbb
pushl
xchg
add
mov
shlb
add
add
out
cmp
fists
sbb
imul
pop
pushl
clc
popa
mov
xlat
pop
xchg
inc
push
or
push
sbb
jns
loope
xor
push
lcall
jg
incb
xchg
inc
insl
das
mov
mov
pusha
sarb
mov
icebp
dec
fdivrs
cltd
push
pop
lea
push
sub
fbstp
int3
sub
test
xchg
dec
addb
xor
jo,pt
fwait
cli
pop
push
les
movsl
sub
fwait
test
cli
xchg
sti
and
sub
stos
adcl
xor
push
jge
mov
ja
jl
int3
mov
test
push
rep
sbb
jge
push
notl
mov
push
test
fucomp
clc
jg
xchg
sti
xchg
in
jmp
xchg
imul
push
cmp
pop
repnz
arpl
sahf
sub
or
sub
mov
cmp
sub
cs
sub
subb
lods
inc
in
mov
aam
fdivl
mov
sbb
sbbb
gs
adc
dec
mov
jbe
rol
aad
in
fldl
xchg
hlt
sub
pop
repnz
shll
jns
imul
fwait
mov
loop
mov
add
ja
je
sbbl
add
aas
or
xchg
js
out
inc
xor
outsb
fstl
pop
cmp
aaa
lods
fistpl
hlt
push
daa
jno
xchg
hlt
xchg
fidivrl
hlt
mov
nop
pop
cli
scas
pop
xlat
xchg
jne
add
nop
sub
es
xchg
sub
incl
or
sub
xchg
push
movsb
xchg
sahf
les
dec
cmc
jmp
jle
jl
clc
xor
das
lret
int
mov
pushf
push
adc
cli
inc
mov
mov
xchg
lods
add
and
add
mov
jns
test
call
lret
nop
and
in
daa
lcall
adc
testl
cli
sub
sub
cmpsb
dec
xchg
sub
jecxz
fs
mov
push
divl
lds
sahf
into
testb
out
pop
sar
std
aad
decl
jae
sahf
nop
inc
decl
dec
cmpsb
mov
adc
pop
xchg
cmp
adc
jno
lahf
lahf
push
adc
aaa
add
outsl
xor
mov
loopne
and
mov
test
mov
ficomps
pushf
pop
xchg
sub
mov
add
stos
xchg
in
push
int3
pop
add
add
insb
xor
mov
adc
mov
es
jmp
outsl
not
out
push
xchg
hlt
jle
mov
mov
call
mov
add
lcall
ja
pop
lds
bndstx
loope
popa
fisubrs
daa
fiaddl
out
addb
mov
or
adc
dec
xor
sti
imul
arpl
mov
jae
out
xchg
lods
inc
mov
sbb
lea
shrd
mov
jne
xorl
sbb
fwait
pop
ret
arpl
mov
lods
fistl
jb
sarl
adc
push
pop
outsb
push
mov
mov
ficompl
nop
fiadds
push
nop
xor
imul
adcl
jb
cld
rol
jns
std
js
ret
push
leave
int
pop
adc
fs
mov
not
sti
repnz
pop
loopne
push
aas
jns
repz
mov
shrl
cmp
or
repnz
test
lock
rep
mov
xchg
add
scas
jle
pop
pop
nop
stos
rol
in
cld
sti
fnstcw
pusha
out
es
adc
mov
jmp
aaa
movsb
inc
imul
dec
or
mov
data16
aas
test
icebp
and
aas
cmc
cmp
test
stc
adc
fsubs
jo
shlb
int
adc
jnp
adc
loope
cs
jecxz
add
cs
cli
pushf
sahf
cwtl
sbb
pop
mov
mov
cmp
pop
mov
cs
stc
pushf
mov
xchg
negl
repz
and
shrl
mov
and
xchg
fsubr
shlb
lret
test
fs
xchg
pop
in
shl
scas
ds
stc
sahf
xlat
inc
lock
mov
adc
mov
mov
mov
js
inc
cs
mov
std
xlat
cmc
pop
dec
pop
int3
xor
shlb
nop
push
fcomps
sbb
jnp
mov
out
inc
js
xchg
mov
cwtl
cld
nop
test
and
nop
mov
mov
xor
add
mov
jl
pop
mov
movsl
push
sub
jg
dec
mov
mov
jbe
push
inc
add
stos
shlb
inc
fcoml
push
adcb
insb
add
and
xor
mov
mov
or
lock
adc
push
mov
xor
xchg
mov
push
loopne
sub
sar
stos
inc
xor
leave
dec
and
out
nop
push
dec
fbstp
lea
pop
or
cld
xchg
stos
dec
jo
call
aad
jmp
push
fcoml
lret
cmpl
movsb
mov
jp
pop
add
lret
sub
xorl
mov
scas
mov
or
and
xor
sub
lea
icebp
fwait
mov
js
adc
mov
les
pushf
inc
mov
cmp
push
notb
inc
jns
jae
adc
cmp
jmp
ja
sub
dec
arpl
xchg
dec
pop
mov
sub
push
mov
add
inc
shlb
loop
add
or
aaa
imul
nop
daa
xchg
fchs
mov
stc
das
or
roll
xor
sub
jge
jbe
xchg
mov
cli
in
dec
xchg
inc
sbb
dec
cmp
subb
add
jnp
aaa
fstps
mov
ljmp
outsl
push
or
or
fbld
jns
shrb
push
adc
xor
sub
pop
push
adc
fsub
aaa
sbb
incb
rcr
loop
cmc
push
leave
fs
jmp
movaps
xchg
es
jp
pusha
mov
jb
pop
ljmp
pop
or
scas
cmp
dec
xchg
cli
or
cmp
push
lret
bound
push
jmp
repz
push
popf
fwait
pop
sbb
mov
xchg
mov
or
insl
cwtl
imul
add
pand
mov
std
xchg
dec
add
out
sub
inc
fiaddl
mov
fs
int
out
push
in
cmpl
jmp
popf
push
mov
arpl
icebp
ljmp
cmp
stos
rol
xchg
dec
loop
ret
roll
aas
cltd
pop
dec
cmpsl
fbstp
fldcw
out
lods
in
test
mov
or
xor
mov
and
mov
lahf
mov
fisubs
mov
jg
inc
int3
call
test
aad
xchg
dec
xchg
sti
aam
sub
int3
fs
sub
dec
sarl
jmp
mov
cmpsb
push
push
pop
cmp
mov
insb
ffree
loope
repnz
incl
jns
add
es
fs
mov
aas
ss
pop
ljmp
test
jg
sbb
fisttpll
inc
push
pop
inc
cld
pop
mov
xor
xchg
and
loop
adcb
shll
lods
rorb
cmp
add
or
mov
pop
sbb
jns
mov
daa
ja
xchg
jl
or
jbe
cltd
pushf
bound
movsl
jmpw
add
jmp
xor
out
cmpsl
out
inc
mov
jmp
inc
scas
jo
loope
dec
cmpsb
in
mov
repnz
pop
xchg
pop
xor
sub
pop
insl
add
in
inc
push
in
pushw
scas
imul
push
mov
mov
rcrl
cmp
mov
push
xchg
pop
sar
sahf
cmp
call
ja
scas
imul
add
hlt
and
xlat
dec
adc
inc
adc
rcll
jnp
cld
pop
xor
push
push
and
pop
mov
mov
sbb
hlt
rorb
inc
movsl
cmp
lods
jo
jg
add
jl
js
mov
push
mov
shrl
imul
mov
inc
mov
jnp
xor
das
addr16
and
fcmovnbe
mov
xchg
inc
push
popf
jbe
cld
aaa
ret
lods
adc
mov
jl
or
cmc
and
jb
fidivrl
add
sbb
adc
sahf
pop
cmp
inc
outsl
pop
movsl
or
sbb
and
or
repz
dec
icebp
push
add
sbb
push
out
mov
in
pop
fisubrl
ja
pop
mov
xchg
imul
lock
call
mov
sub
insl
js
push
stos
mov
insb
and
jnp
adc
cmp
mov
push
and
hlt
pop
cmc
mov
icebp
add
dec
pop
adc
fcom
bound
xchg
cmp
pop
jecxz
mov
sbb
dec
fwait
cwtl
cs
aam
test
repnz
repnz
dec
mov
dec
cmpsl
push
ss
scas
addr16
sub
das
jbe
mov
sub
pop
lcall
inc
mov
repz
xchg
lea
mov
lock
fsubrl
cmpsl
mov
arpl
ds
xor
mov
mov
and
xor
mov
and
lret
cld
in
cmp
cmp
lds
add
mov
mov
push
jne
imul
sub
cmp
xchg
mov
sbb
mov
idivb
arpl
xorb
inc
loope
call
or
popf
cmp
enter
or
jae
mov
fidivrs
and
mov
adc
sub
mov
fnsave
jmp
cli
xchg
daa
cmp
cmpsl
add
or
rcl
fs
jl
int3
mov
sti
and
shll
pusha
repnz
xor
movsb
inc
dec
pop
jge
hlt
xchg
mov
stos
cmp
cmpsl
cld
xchg
roll
sbb
xor
jp
inc
xchg
push
loope
adc
out
add
call
or
mov
popa
imul
lret
or
or
cmp
jo
pop
in
xor
inc
ds
leave
cmp
cs
lods
call
sbb
xor
rclb
test
pop
adc
cwtl
js
sbb
ja
addr16
loope
xchg
out
cmp
adc
push
in
in
aam
add
xchg
cld
pop
lods
fwait
pop
mov
fsub
pop
lcall
or
pop
inc
mov
inc
lea
stos
xor
fidivl
sbb
fbstp
pop
pop
into
shll
pop
cmp
mov
test
enter
jecxz
sub
xchg
sub
outsl
fidivrl
pop
and
sub
aad
gs
adc
fistps
or
dec
mov
pop
mov
add
call
mov
ficoml
loop
xchg
pop
addl
loopne
mov
iret
fidivl
outsl
xchg
popf
dec
mov
mov
adc
or
pop
rcrl
inc
fwait
xchg
mov
inc
push
mov
inc
xchg
jmp
ja
out
xchg
inc
notb
ja
and
cwtl
add
sub
inc
rol
jns
mov
xchg
shl
sub
aam
jbe
cmp
js
shll
test
pop
lds
adc
mov
fs
call
cltd
xor
es
ret
shr
inc
mov
jns
stc
xchg
les
push
push
rcrb
scas
mov
les
ss
xchg
sahf
cmp
xor
pop
icebp
test
xor
mov
movsb
nop
int
cltd
in
mov
lahf
mov
popl
mov
push
mov
and
dec
push
call
or
cmpl
cwtl
xchg
or
jg
out
xchg
imul
xor
sbb
jg
sti
and
hlt
push
jmp
ret
rclb
mov
test
mov
sub
cltd
push
nop
push
mov
int
mov
ret
test
gs
in
lret
and
or
inc
mov
test
ljmp
mov
inc
lds
insb
fnstcw
inc
mov
inc
shlb
loop
test
or
jae
inc
push
stos
ret
mov
jno
cmpsl
xlat
into
xchg
and
pop
mov
das
pmaxub
adc
imul
mov
clc
jae
mov
out
aaa
out
popf
push
fiaddl
mov
int
fcoml
cli
pop
cmc
jmp
out
cmp
mov
cmpsl
loopne
push
adc
xchg
sub
inc
xchg
inc
fistpll
mov
testl
xor
test
repz
sub
into
cmp
fmuls
cmp
pop
mov
out
inc
jmp
adc
ret
mov
push
mov
sub
fs
sub
ss
pop
sar
ficoms
clc
or
stos
xchg
jne
sub
in
cmpsl
sub
add
add
aam
and
lret
fdivrs
stos
dec
mov
xchg
jl
call
fdivr
outsb
loope
dec
jle
jp
inc
mov
push
pushf
pop
repz
pop
enter
jnp
xlat
xchg
push
leave
divl
shll
adc
and
cs
pop
call
pop
shlb
cmpsl
jge
cmp
adc
out
mov
insb
mov
rcll
cmc
ficoml
mov
mov
lock
jp
stos
mov
mov
jb
push
mov
pop
jo
xchg
xor
lods
sub
jno
sbb
andl
jl
and
push
sbb
fldcw
call
jno
add
pop
pop
push
push
xor
add
mov
bound
xor
pusha
and
xchg
stos
xor
mov
rcr
dec
mov
jp
cwtl
imul
test
or
in
and
xor
cs
test
mov
mov
enter
xor
inc
divl
in
iret
pushw
push
xor
mov
fdivrs
push
mov
leave
cmpsb
lock
sub
mov
test
gs
adc
cmp
dec
aas
mov
lock
subb
rcrb
fisttpl
or
arpl
int3
sub
test
insl
pushl
pop
fs
mov
lcall
stc
pop
jne
add
xchg
xor
mov
inc
dec
in
lds
in
aam
mov
stos
pop
in
hlt
ljmp
pop
es
jbe
loope
add
pop
setne
dec
fcomps
mov
ret
outsb
icebp
mov
xchg
mov
enter
mov
lret
pop
pop
outsl
je
mov
push
or
and
push
aam
xchg
xor
cmc
push
inc
daa
enter
and
pop
pop
out
add
ss
or
fdivrl
push
mov
mov
stos
inc
and
sbb
mov
lea
test
lahf
iret
fwait
add
xlat
add
mov
mov
xchg
xchg
ja
ljmp
aad
das
int3
adc
pop
jg
jae
jb
xor
stc
mov
stc
nop
mov
sub
mov
or
sub
addr16
push
out
xchg
sbb
lock
jae
cmp
out
lods
adc
sub
add
adc
scas
out
xchg
pop
jmp
aaa
sub
add
dec
dec
loopne
push
jl
addr16
sbb
pop
dec
mov
fbstp
imul
addb
test
nop
test
lcall
and
xchg
xor
add
pushf
loope
insb
push
mov
nop
cmpsl
outsl
pop
adc
dec
testb
sub
mov
icebp
frstpm(287
jl
adc
in
dec
add
rclb
ret
adc
and
inc
mov
jge
add
sub
dec
xlat
or
mov
jbe
ffreep
fnstcw
ds
int
popa
in
pusha
push
movsb
mov
jo
and
sbbl
incl
cmp
mov
mov
pop
mov
cltd
pop
repz
mov
dec
mov
pusha
insl
arpl
mov
dec
mov
mov
jbe
mov
fisttpl
mov
ja
stc
and
jns
or
pop
cld
sub
rcl
push
mov
mov
jo
and
adc
cmpb
lahf
xor
sahf
stos
push
push
int
inc
fnstcw
and
mov
xor
into
icebp
movsl
jecxz
push
sub
fnstenv
aam
lds
mov
shl
mov
jp
pop
fsubrl
xchg
mov
fsubr
pop
fcoms
mov
add
or
outsl
jge
push
loop
jbe
mov
sbb
cwtl
sub
rcll
mov
push
and
xor
icebp
cmc
mov
jne
inc
fidivl
mov
xor
stc
cmp
mov
rclb
push
ss
lods
mov
filds
pop
adc
xor
xor
xchg
inc
push
enter
hlt
addr16
mov
scas
mov
or
jg
sbb
call
xchg
sarl
cmp
mov
inc
jecxz
icebp
pop
jbe
fnstenv
add
es
inc
fisttpll
pop
xchg
adc
out
inc
or
insl
jne
pop
fs
hlt
popf
mov
repz
jno
andb
pop
cmp
call
test
sub
xchg
clc
or
out
dec
pop
add
outsl
push
rol
rorl
call
pop
cmp
push
inc
loope
cmp
clc
adc
xchg
cmp
call
push
ss
jp
lret
leave
pusha
add
sbb
jl
fidivrl
push
stos
enter
push
lea
mov
jle
sbb
das
fidivl
mov
and
sbb
pop
xor
lahf
mov
sahf
fsubrs
in
pop
sahf
fsubrp
pop
mov
and
xchg
pop
insl
push
imul
sbb
adc
nop
sbb
je
xchg
mov
push
jg
jb
stos
inc
ror
lret
bound
pop
repnz
push
call
xchg
inc
push
test
arpl
aad
mov
inc
dec
in
data16
xchg
pop
hlt
inc
frstpm(287
loopne
mov
and
push
xchg
push
sbb
add
push
mov
add
loope
dec
pusha
idivl
shlb
hlt
movsb
cmp
jns
inc
imul
and
repnz
sbb
mov
xchg
in
addl
popf
xor
add
sar
cmp
xchg
aas
sub
add
xchg
jl
cmp
and
push
pop
sbb
rorl
mov
cmc
js
mov
mov
jnp
add
sbb
mov
mov
data16
push
call
push
movsl
jb
pop
lock
jnp
js
dec
sahf
sbb
pop
fildll
fstl
clc
sub
xchg
gs
xor
jmp
mov
xchg
jae
cli
lds
pop
pop
icebp
jb
xchg
push
adc
scas
fildll
loop
and
jge
je
mov
pop
mov
lds
leave
fdivrl
lcall
sub
sub
sub
setge
rcr
in
aad
arpl
xchg
cs
scas
lock
cwtl
testb
or
outsb
jp
pop
repz
mov
out
and
stc
fsubl
shrb
inc
fidivs
lcall
out
or
jns
push
jmp
mov
test
xchg
xchg
sub
ja
cmp
lods
mov
jp
xor
adc
sarb
pop
imul
lds
mov
and
insb
dec
int3
arpl
out
lcall
cmp
stos
xor
enter
or
gs
jo
mov
sub
pop
icebp
sbb
or
jns
mov
movsl
mov
xchg
jo
insl
add
stos
aaa
into
sbb
mov
push
mov
sbb
fnsave
lock
call
sti
dec
orb
in
icebp
fdivl
outsb
add
lret
or
mov
or
push
sbb
shlb
jb
rcrl
push
shll
dec
add
jns
jge
mov
sahf
jp
vmovhps
and
cmpl
pop
repz
lcall
jbe
repnz
gs
xlat
inc
push
fnstenv
mov
sub
xor
cs
pop
pusha
sub
scas
gs
jno
push
add
out
mov
mov
aas
cld
outsl
aad
ss
notl
in
in
je
add
mov
xor
lahf
or
jecxz
mov
mov
bound
push
or
mov
ds
push
and
push
jmp
cld
les
stos
ficoml
dec
ljmp
notb
clc
lret
std
fsubrs
call
stos
inc
fidivrs
fisubl
pop
cmc
lods
mov
inc
cld
lock
xor
mov
cwtl
sbb
nop
pop
stos
dec
pushf
inc
mov
xchg
adc
movsl
jle
and
dec
clc
add
jnp
cltd
test
cld
lods
mov
push
xchg
and
sub
push
imul
xor
inc
mov
mov
jmp
add
mov
mov
std
cmc
pop
pop
scas
repz
stos
adc
aam
lea
xor
xor
mov
pop
cmp
mov
xchg
inc
je
cld
xchg
pop
xchg
pop
xor
jnp
out
mov
popa
mov
das
in
std
pusha
and
lahf
cli
ret
jl
inc
fimull
es
cmp
xor
cmp
push
push
icebp
in
call
pop
lock
ret
sbb
insb
pusha
stc
lock
cmpl
ja
mov
shrl
shl
push
loopne
xchg
inc
jne
int
jmp
adc
pop
es
add
jae
fwait
cltd
fs
lret
test
sbbb
das
out
cmp
pop
xor
push
jnp
xchg
int
and
rol
lods
inc
cmc
movups
lods
adc
inc
or
sti
pop
icebp
sub
inc
data16
js
lahf
stos
or
scas
stos
jg
cmp
jecxz
jecxz
jl
jl
mov
lds
mov
xor
inc
test
or
sub
mov
xchg
imul
jge
imul
mov
mov
les
jo
scas
out
mov
cltd
mov
jno
call
sar
stc
jmp
sbb
psrld
mov
push
daa
outsl
ficoms
mov
outsl
sub
add
mov
sbbb
fldt
mov
lea
jnp
xor
and
inc
xchg
pushf
xor
inc
inc
pusha
jne
test
cwtl
sbb
shlb
push
hlt
cwtd
add
aam
inc
and
jbe
inc
repz
or
mov
ljmp
imul
jne
mov
mov
add
scas
push
ds
arpl
xchg
pushf
push
dec
ljmp
arpl
jp
mov
js
imul
imul
xchg
and
call
or
movsb
pop
pop
add
dec
jg
lret
mov
cs
lea
repnz
jmp
or
pop
mov
shl
ja
mov
sahf
cwtl
cmp
mov
out
jp
push
lods
jle
stc
jo
fsubr
ss
sti
xor
outsl
mov
sub
adc
sub
sub
out
push
cltd
sti
pop
call
shrb
mov
mov
cmp
sub
repz
movsb
pop
inc
push
jp
sub
cwtl
sbb
cmp
xchg
pop
arpl
in
pop
mov
out
and
cmp
enter
inc
cwtl
add
aaa
inc
mov
add
cwtl
orl
push
int
push
push
rcrl
jmp
sbb
jp
cmp
dec
dec
js
mov
outsb
add
sub
inc
and
lock
cmc
scas
lcall
cmp
xchg
or
fidivrl
xlat
adc
lcall
mov
int
cltd
add
mov
xchg
or
jg
gs
iret
gs
shrl
dec
iret
adc
mov
jle
sbb
mov
push
push
into
int
int3
add
ja
inc
int3
in
push
daa
jne
add
bound
sti
push
pop
lods
inc
pop
stc
and
mov
sbb
pushf
xor
fcoml
sub
arpl
xor
out
push
push
adc
imul
adc
leave
lock
dec
push
cmp
xchg
inc
test
arpl
mov
imul
mov
mov
out
lcall
ret
push
inc
jb
into
gs
in
jmp
push
in
addl
and
jbe
push
xchg
jne,pn
jae
sub
jle
lea
mov
stc
cmp
adc
sbb
push
mov
and
sbb
popa
xorl
fstp
jo
add
pop
push
je
inc
xor
xor
push
xchg
in
push
add
pop
out
dec
test
xchg
stos
test
repz
xor
add
push
enter
add
shrl
ret
xchg
dec
push
dec
dec
dec
gs
movsb
mov
ja
int
lods
popa
test
dec
sub
push
pushf
insb
scas
mov
imulb
cli
xchg
xchg
push
add
push
mov
out
shll
pop
xchg
xor
into
push
jae
stos
mov
std
xor
push
inc
mov
icebp
jae
mov
loope
inc
rorb
lcall
test
cmc
pop
push
add
mov
aaa
or
ds
lock
dec
popf
jo
mov
clc
sub
out
pop
push
xchg
movsb
jmp
xor
cmp
mov
sbb
shlb
push
push
fildll
mov
fcoms
mov
notl
jg
bound
int3
adc
lahf
in
xor
push
or
cmp
mov
mov
sub
pop
fwait
movsb
jno
lea
fdivrs
mov
or
rorb
ds
push
stc
pop
aam
xorl
xor
enter
fistpll
adc
out
cld
xchg
and
pop
mov
cmpsb
jmp
mov
push
inc
pop
rclb
mul
int3
scas
aam
jp
or
movsb
cmp
test
outsl
dec
insb
add
insl
xor
mov
test
push
mov
das
shlb
mov
sbb
pop
lock
push
call
sub
outsb
add
sbb
cld
pop
sub
popf
ret
cld
jp
lods
in
mov
in
pop
lods
jl
push
bound
push
int
cld
pop
lods
cmp
lret
sub
rcll
inc
push
adc
mov
stos
lret
rclb
ljmp
outsb
jl
ret
jmp
hlt
fildl
sahf
or
out
subl
lods
pushf
imul
cmp
push
and
popa
mov
jle
pop
fldenv
scas
std
xchg
and
into
fcompl
push
lahf
ss
fnstcw
cmp
mov
hlt
or
shr
mov
add
or
jg
jecxz
push
adc
adc
icebp
enter
push
add
add
mov
shlb
and
add
sub
or
sbb
pop
cli
imul
adc
mov
mov
pop
mov
inc
sti
or
lods
aas
add
mov
addr16
dec
xchg
mov
push
xor
movsl
mov
scas
jge
ja
mov
aas
xchg
sti
mov
inc
xchg
sahf
rcrl
jmp
jbe
mov
pop
xlat
sbb
xchg
dec
mov
jns
sbb
add
test
ss
mov
xor
pop
fld
pop
add
les
push
push
jmp
loopne
arpl
fisttpll
mov
orb
pop
mov
pop
rcrl
pop
cmp
pop
scas
cmp
ret
mov
ret
popl
cmp
jg
lcall
push
ret
xchg
add
dec
call
or
std
sub
daa
nop
ret
push
sbb
rorl
jecxz
inc
out
jae
mov
sub
or
jg
inc
fiadds
dec
fs
loop
pop
xchg
sub
xchg
jg
ds
cmp
gs
shl
adc
sub
ljmp
and
mov
insl
pop
out
fistpl
into
fdiv
test
pop
add
lcall
inc
xor
and
xchg
aaa
shll
pop
mov
popl
inc
sarb
pop
and
sub
pusha
les
add
inc
or
arpl
addr16
xchg
fldt
sti
pop
inc
sub
bound
pop
mov
stc
cmpsl
push
push
dec
insb
stc
je
cmp
xchg
into
orl
mov
ja
add
push
call
xchg
push
adc
push
outsl
mov
insl
pop
aas
add
pop
ret
incl
shlb
or
loop
aam
push
in
sbb
or
arpl
sub
test
mov
sub
mov
fldcw
lret
movsb
fnsave
mov
iret
lret
mov
dec
cmpsb
add
sub
cmpsb
inc
das
rcrb
pushl
sbb
sbb
shrl
dec
fdivrl
sub
xor
push
add
or
jle
out
outsl
fstpl
loope
push
cmp
ds
loop
test
jae
mov
cli
pusha
stos
dec
inc
int3
xorl
pop
pop
or
xchg
jecxz
cs
or
pop
pop
mov
addr16
jge
inc
fmull
jnp
or
es
arpl
fildll
sbb
pop
push
jne
mov
jns
in
inc
adc
dec
and
sti
mov
jp
call
lods
mov
jge
cmc
test
jbe
lea
dec
adc
mov
mov
shrl
mov
arpl
dec
sub
push
add
aaa
movsl
icebp
jecxz
mov
xor
fdivl
cmp
test
std
push
aam
addr16
cwtl
jp
dec
jp
mov
mov
inc
sbb
subl
or
mov
dec
xor
mulb
rol
movsb
lret
or
pop
fnstcw
shr
mov
push
jne
std
clc
xchg
xor
rcrb
inc
icebp
xchg
sbb
adc
scas
cmc
dec
out
je
inc
fs
inc
pop
mov
adc
or
jbe
mov
outsl
lds
call
mov
or
xchg
shrl
mov
fwait
test
pop
scas
xchg
mov
test
out
jae
imul
push
xchg
shll
xchg
icebp
and
adc
mov
mov
add
cs
in
pop
dec
mov
cmp
mov
dec
and
testl
leave
std
push
jmp
mov
jns
jge
js
jnp
inc
jge
xor
adc
inc
adc
pusha
inc
arpl
pushf
push
mov
push
sbb
pop
push
xchg
add
jns
jno
addr16
add
push
mov
ret
sub
jbe
and
inc
popa
jl
mov
sub
std
mov
aam
mov
cmp
xor
filds
icebp
adc
mov
icebp
jl
fs
lods
addb
pop
cmc
dec
xchg
mov
aam
sahf
in
cli
mov
addr16
test
xchg
out
push
movsl
adc
scas
aam
imul
out
jns
les
lds
enter
lea
jp
add
inc
mov
gs
scas
sti
and
jae
and
adc
inc
sbb
jp
or
mov
pop
pop
xor
stos
out
les
negb
and
test
into
xchg
scas
inc
enter
imul
dec
xor
cltd
add
mov
mov
mov
in
mov
or
insb
jl
sbb
test
mov
orl
fcmove
and
xchg
sbb
js
dec
loop
cltd
push
cmp
xor
sbbb
xchg
sarb
mov
adc
icebp
stos
sti
out
jns
sbb
xchg
repz
jb
and
jle
pusha
jl
pop
leave
mov
jge
cmp
xchg
adc
mov
in
in
cwtl
adc
inc
add
xor
cmp
cli
leave
pop
ja
es
xchg
je
insb
xor
pop
mov
mov
cmp
mov
andb
push
sbbb
cmp
mov
les
leave
testl
adc
sbbl
hlt
add
stos
xor
outsl
in
cmpsl
push
sbb
enter
or
mov
fwait
cmpsl
inc
add
lods
insb
bound
out
icebp
adc
les
lret
mov
jmp
jecxz
clc
adc
push
pushf
fbstp
bound
pop
bound
in
mov
fists
xor
int
int3
mov
mov
pop
pop
inc
testl
data16
and
divb
mov
jg
xchg
into
andl
jp
mov
xor
movlps
add
xchg
pop
es
test
outsl
push
jb
js
lcall
push
dec
add
push
in
and
out
cmp
aas
idivl
inc
pusha
xchg
adc
ja
xor
sbb
or
mov
jo
jae
mov
aam
cli
js
pusha
ds
loop
test
je
inc
fcmovu
sub
and
pop
cmpsl
das
addr16
insl
pop
pushf
and
mov
add
or
xor
add
add
mov
jnp
hlt
xchg
insl
push
stc
test
push
or
pop
jne
in
jg
lods
out
or
xor
stc
stc
pop
icebp
aaa
xchg
lods
cmp
xor
add
xor
shrb
and
fwait
popa
pop
icebp
insb
jne
outsb
clc
or
clc
or
in
dec
das
sbb
pushf
test
jl
daa
daa
pop
sbb
inc
mov
loopne
mov
mov
or
fidivs
out
cmpsb
adc
sub
xchg
xchg
push
sub
mov
cmpsb
or
mov
push
mov
insl
mov
mov
mov
xor
shll
cmp
adc
xor
mov
gs
or
testl
mov
dec
mov
in
and
in
loop
mov
repz
jmp
or
aad
cmp
mov
sub
cmp
scas
cmp
push
cld
mov
bound
and
rclb
jmp
pop
xor
mulb
push
sub
push
test
leave
xor
push
pop
mov
pop
in
stos
pop
mov
pop
outsb
inc
or
fisttpl
inc
imul
out
mov
xlat
loopne
aad
cmp
jg
adc
movsl
aaa
lret
fcmovnb
fwait
push
rolb
movsb
dec
ror
lea
pop
std
sarl
into
movsl
dec
xchg
ret
addr16
push
push
pop
or
mov
lods
pushf
push
stos
in
test
stos
and
enter
out
std
jb
mov
fsubrl
cmc
push
loopne
push
mov
inc
push
movsl
insl
sahf
jbe
repnz
lret
add
rorb
cld
push
jns
pop
repnz
in
shl
or
cmc
inc
arpl
mov
inc
cmp
outsl
xchg
rol
xchg
out
test
mov
mov
lock
roll
mov
xchg
xor
pusha
cmc
mov
jne
mov
mov
xchg
jg
mov
add
test
sahf
xchg
adc
jg
add
mov
cmpsl
push
popa
cmp
mov
mov
fisubrs
in
das
add
jle
insl
pop
movsl
cmp
sub
pop
dec
movsl
xor
cmpsb
xor
test
push
pop
cld
subl
sbb
je
lock
movsl
mov
xor
xchg
cmp
push
pusha
push
cmp
or
and
iret
daa
mov
push
inc
sti
cmc
pop
sbb
aad
das
mov
jg
icebp
add
hlt
inc
out
mov
cmp
test
fiaddl
sti
rcrb
loopne
adcb
rcrl
push
cmpsb
ret
js
xor
stos
jmp
lods
hlt
sbb
cmp
sar
dec
mov
imulb
mov
psubq
cmp
xor
xchg
or
int3
fisubl
testb
jle
mov
inc
mov
push
jge
pop
jmp
fcomip
push
add
fldenv
sbb
mov
into
cmp
das
fwait
nop
mov
cmp
jecxz
xchg
scas
js
outsl
mov
test
nop
arpl
inc
clc
dec
mov
push
pop
jne
cltd
or
mov
icebp
cmp
jnp
lcall
add
jb
dec
out
xchg
jmp
jmp
adc
stos
cmp
dec
loopne
sbb
cmpsb
cwtl
outsl
lods
mov
notb
rolb
sbb
rcll
test
ret
int3
xchg
clc
in
icebp
inc
in
jge
iret
stc
nop
add
add
jb
sbb
push
xchg
mov
fwait
shrb
and
inc
jle
jns
sub
fsubs
mov
push
shrl
in
cld
lds
bound
in
sub
adc
sbb
dec
add
scas
push
pushf
shll
dec
add
sub
and
ss
or
dec
add
mov
lcall
je
mov
adc
mov
adc
sbb
xor
ss
or
pop
inc
lahf
add
call
fdivp
xchg
repz
addr16
stc
inc
into
call
add
mov
jmp
clc
and
cmp
xchg
inc
pop
pop
add
sbb
adc
out
add
sub
in
ljmp
fsub
and
loop
xor
mov
add
lret
gs
mov
jl
xor
in
and
fbld
inc
mov
test
repnz
cltd
and
in
mov
dec
push
mov
dec
inc
cmpsl
mov
outsb
add
leave
push
cvtps2pd
xchg
dec
movsl
loop
shrl
xor
pushf
push
stos
mov
das
test
push
fnstenv
jno
outsl
ret
push
push
mov
int3
scas
jbe
sahf
mov
das
adc
rcll
sub
in
leave
mov
adc
movsl
in
inc
andb
and
mov
test
dec
out
mov
xchg
cmp
enter
jno
enter
clc
cli
mov
jmp
mov
ljmp
addr16
sub
push
jecxz
sbb
cs
push
add
into
mov
rcrb
testl
xor
sbb
sbb
stc
inc
cltd
sub
daa
sub
mov
pop
pushf
sbb
adc
pop
insl
jge
call
rcrb
shll
popf
bound
jmp
inc
cmp
stos
or
inc
ljmp
xor
fcoml
xchg
mov
iret
loop
inc
dec
and
lret
sub
jmp
aas
cmc
scas
sub
push
push
add
imul
or
push
sti
sahf
movsb
xor
jecxz
inc
adc
into
mov
leave
fyl2x
cli
jns
adc
outsl
sbb
jno
add
outsb
arpl
orl
sahf
sub
sbb
clc
mov
xor
dec
mov
push
mov
add
adc
lret
mov
gs
lea
and
mov
into
test
popa
push
ficompl
inc
fs
stos
add
sarl
ds
xlat
mov
pop
lock
cli
dec
adc
jb
sub
sub
lcall
cmpsb
cmp
leave
xor
or
or
mov
push
or
cltd
test
mov
ss
mov
cld
cmp
addb
pop
push
scas
pop
jg
subl
or
jecxz
das
mov
imul
jg
ja
addr16
xor
pop
mov
sub
js
xor
mov
pop
add
ret
xchg
xchg
hlt
clc
xchg
inc
xchg
or
jbe
or
sub
inc
add
lret
mov
xor
push
dec
cmc
and
or
mov
adc
out
es
andl
je
push
frstor
dec
fs
push
in
adc
adc
inc
test
sbb
push
aas
inc
gs
cmpsb
push
cmp
stc
or
test
dec
in
arpl
flds
cltd
dec
cs
shlb
je
out
xor
icebp
dec
cmpsl
loopne
and
dec
iret
dec
jg
jae
mov
outsl
sub
and
ret
dec
arpl
rep
imul
pusha
cltd
push
jmp
lds
nop
cli
cmp
and
jns
mov
or
cmp
xor
mov
xor
sbb
push
pushf
xor
sbb
bound
ficomps
sbb
push
add
loope
sbb
fcmovnu
pushf
arpl
out
bound
sbb
xchg
lods
sbb
mov
adc
and
mov
dec
mov
orb
and
jge
bound
xchg
cmpsb
out
pop
ljmp
mov
or
lods
push
movsl
push
pop
or
test
xchg
pop
mov
xor
fwait
rcl
and
xchg
cmp
movsl
insl
push
shl
shlb
inc
ljmp
int3
shll
sbbl
add
push
jb
fs
fsubl
sub
cmp
sbb
punpckhdq
mov
inc
or
test
test
and
je
cmp
push
mov
push
jno
cvttps2pi
dec
sarl
shlb
rcl
jmp
jae
pop
adc
add
int3
fisubs
ds
je
mov
inc
mov
mov
xor
sar
sbb
pop
into
mov
xchg
in
subb
jl
sbb
pushf
pop
jne
push
jb
push
xor
sahf
lock
aad
cmpsl
or
ret
loop
rorb
pop
test
xor
push
fstl
iret
clc
jae
mov
fidivrs
mov
jmp
out
inc
jns
jmp
adc
jno
ja
mov
lods
imul
outsb
jl
sti
mov
movsl
inc
jmp
je
subl
mov
fmull
ds
cmp
in
push
mov
mov
xchg
sub
or
dec
sbb
notl
imul
out
inc
pop
ds
sbb
lret
es
sahf
sub
iret
test
mov
add
pop
lcall
sub
cwtl
add
push
movsl
out
popf
lahf
pop
hlt
mov
xacquire
or
sbb
rcrl
mov
fidivl
mov
dec
popa
jg
cmp
addr16
cmc
jg
or
mov
ret
imul
in
jl
test
inc
sbb
mov
and
sahf
xor
jg
mov
jno
xchg
imul
fwait
test
dec
and
jp
loope
lods
pushf
ds
scas
data16
and
and
dec
mov
test
xor
int
les
addl
add
testb
popf
inc
push
mov
aas
add
and
sti
arpl
push
and
fiaddl
aas
outsb
xor
fidivrl
arpl
outsl
jmp
sbbb
cmp
inc
sub
xchg
pop
cmp
popf
push
xchg
push
inc
lds
push
repnz
pop
out
jns
mov
xchg
cmpw
das
jne
jle
xchg
int3
push
scas
idiv
or
shlb
mov
and
addr16
mov
push
push
dec
ljmp
add
and
adc
push
ds
arpl
push
insl
ficomps
adc
ret
jle
jo
imul
daa
imul
lods
mov
loopne
repnz
outsb
dec
pushw
test
out
xchg
pop
repnz
mov
xchg
stos
shr
das
sti
ret
jl
mov
xchg
jle
lds
pop
mov
mov
cmp
xor
cmpsl
stos
sarb
mov
nop
xor
mov
mov
mov
popf
add
lods
lds
out
cmp
add
loope
test
mov
scas
xor
add
mov
mov
pusha
dec
ret
iret
data16
gs
insl
roll
mov
sbb
loope
and
int
inc
xrelease
push
pushf
xor
rcrl
jl
mov
sti
imul
jp
ds
push
mov
gs
adc
stos
in
scas
add
andl
sub
sbbl
cltd
jnp
push
call
xchg
cltd
test
pop
lret
cli
stos
cmp
sbb
xchg
stos
push
sarb
sahf
loopne
in
fcmovb
in
mov
add
daa
andl
std
lcall
sub
inc
test
sub
sub
cltd
inc
repz
test
lret
ret
jns
push
jns
lcall
lcall
mov
and
leave
pop
mov
fbld
test
mov
cmpl
pop
shlb
xor
or
in
mov
stos
in
js
imulb
test
cwtl
decl
shll
and
push
adc
or
xlat
aad
leave
and
push
scas
inc
dec
pushf
xor
fcompl
shr
dec
pushf
mov
xchg
cmp
or
ret
and
rcll
mov
jl
scas
inc
loope
sbb
adc
cmpb
stos
mov
out
push
push
data16
jae
subl
inc
sub
xchg
adc
inc
sbb
and
enter
jle
jmp
push
out
fldcw
cmc
inc
inc
addr16
mov
push
dec
fisttpll
dec
jle
adc
icebp
repz
cwtl
push
test
xlat
call
pop
jge
xchg
inc
inc
jp
or
xlat
out
leave
je
movsb
fidivs
sub
mov
std
sub
pop
xor
dec
mov
mov
cmpsl
pop
push
popf
outsb
cmpb
sti
inc
es
jp
sahf
adcl
xor
xor
lret
lret
cld
sahf
xor
mov
iret
into
loop
cmp
fwait
mov
jb
dec
xor
xor
pop
out
cmp
pop
mov
fcmovb
clc
shrb
mov
flds
mov
ljmp
jae
outsl
sub
nop
or
cmp
hlt
cmp
inc
dec
test
inc
cli
cld
push
mov
inc
test
lock
insl
lea
sub
jp
cmp
in
addl
lea
leave
add
test
or
sti
xchg
int
dec
cmp
lahf
shll
xor
jbe
subb
adc
mov
sahf
or
mov
or
in
sahf
pop
scas
inc
pop
jae
lock
int
imul
fs
and
fndisi(8087
lods
push
xor
pushf
out
test
sbb
xchg
rolb
outsl
add
mov
idivl
jg
cld
fwait
test
inc
lahf
jne
or
mov
dec
fcomip
mov
push
sahf
outsl
insb
lret
sti
int
pusha
push
fwait
cmc
cmp
je
in
pop
cmp
push
mov
mov
fstl
lods
adc
cmpsl
shll
mov
ret
jo
jecxz
icebp
in
mov
ja
sbb
cwtl
scas
out
and
les
inc
jb
in
lahf
int3
arpl
sbb
inc
mulb
ffree
fwait
fs
aad
mov
clc
cmpl
je
dec
add
sahf
push
cmp
jnp
fmull
ljmp
push
popf
decb
imul
push
mov
sbb
cltd
mov
pop
xchg
movsb
add
movsl
pusha
dec
jne
mov
stos
stc
mov
sahf
or
pop
popa
daa
push
js
mov
sti
dec
xchg
fidivl
inc
lcall
mov
dec
and
jg
mov
adc
outsb
orb
shll
lahf
repnz
test
xor
xor
or
mov
push
sub
es
inc
test
add
addr16
push
xchg
add
jmp
jno
lea
jmp
shl
inc
popa
call
mov
fwait
negb
aaa
addl
mov
add
dec
sti
push
repz
shlb
ljmp
sub
xor
mov
lods
daa
out
cltd
pop
and
mov
add
ficompl
mov
sbb
cwtl
ret
jno
lret
cld
cltd
cld
cmp
mov
pop
outsl
loopne
aam
faddl
push
aam
leave
ret
xchg
adc
out
movsb
mov
mov
test
orl
data16
xchg
arpl
in
jne
inc
mov
popf
dec
loopne
mov
dec
xchg
and
push
adc
leave
test
or
jns
sti
mov
cmp
pushf
orl
adc
or
cltd
loop
fs
mov
push
lds
pop
xlat
popf
jno
fisubs
sub
stc
test
sbb
clc
pusha
fisubrl
testl
or
mov
int3
popa
sarb
call
hlt
and
out
arpl
pushf
out
movsb
addr16
mov
sbb
lret
sti
mov
mov
cwtl
rcrb
cmp
xchg
mov
sar
push
mov
btl
jno
int
jne
lock
inc
bound
xor
mov
adc
outsb
sub
in
pop
jge
xchg
sub
push
insl
dec
xchg
pop
mov
mov
inc
testb
push
inc
sub
inc
loop
inc
xlat
pushl
call
pop
dec
nop
stc
push
cmp
or
xor
jmp
mov
sti
call
sub
sbb
stc
push
shr
add
ja
dec
and
mov
or
test
sub
int3
ficoms
out
andb
in
loop
in
fs
scas
in
pushf
xchg
mov
jb
adc
int3
lahf
test
fsubr
mov
dec
sbb
lea
mov
call
arpl
push
lea
mov
dec
mov
xchg
pop
or
xlat
xchg
pop
ds
pusha
out
cmp
lret
ds
notb
pop
aad
ljmp
mov
mov
in
scas
push
sub
movsl
sub
sbb
add
addl
xchg
add
add
test
loopne
fucomp
mov
adc
sub
add
and
pop
or
cmpsl
sub
scas
lcall
inc
lahf
cmpl
out
addr16
movsl
lods
inc
ss
je
adc
adc
sbb
xor
push
sbb
push
jge
push
jns
mov
adc
push
or
pushw
xchg
inc
data16
cmp
xchg
lods
hlt
push
sub
paddw
dec
es
insl
gs
sbb
mov
xchg
inc
xor
out
mov
adc
outsb
push
imul
pop
xor
xchg
and
pop
sub
lea
loop
cli
insl
sub
loop
movsl
hlt
movsb
inc
outsb
cld
mov
mov
push
mov
int
es
cmpsb
jecxz
add
push
add
stos
aas
test
pushf
leave
xchg
lret
jmp
and
mov
test
mov
cltd
fisubrl
arpl
popa
mov
fistpll
xchg
push
xchg
fistl
cmpl
inc
add
push
cli
and
inc
xchg
test
arpl
sbb
cmp
lahf
xlat
mov
or
mov
cmpsb
aad
jecxz
sub
cmpsb
lods
inc
enter
adc
idivl
aam
mov
mov
mov
xlat
stc
and
loopne
xor
shlb
jp
fdivl
mov
dec
xchg
imul
add
fmuls
les
xchg
arpl
push
idivl
sti
pop
ss
or
or
dec
inc
rcrl
jge
xchg
adc
mov
add
jecxz,pn
cmp
push
shll
aas
mov
jo
test
jbe
jbe
push
into
daa
sbbl
out
test
cmp
lock
icebp
inc
lds
into
cmpsl
aas
xor
jns
in
pop
out
cmp
xor
xchg
mov
movsl
sti
in
jns
inc
mov
in
push
ja
xchg
mov
mov
fsubl
cld
push
ljmp
testb
push
imul
ds
fs
les
cmp
jmp
xchg
xchg
fadds
jns
test
mov
out
icebp
loop
cli
adc
and
stc
shlb
mov
adc
mov
loopne
std
imul
in
push
jmp
lods
xor
js
call
xlat
lret
mov
inc
pop
xchg
dec
nop
hlt
imulb
lahf
test
scas
mov
jmp
inc
fbstp
mov
xchg
push
mov
xor
sahf
cmpl
jmp
dec
bound
xchg
inc
dec
push
dec
adcl
sbb
xchg
dec
add
mov
pop
ret
mov
jb
and
push
mov
pop
mov
pop
aas
mov
cmp
clc
into
nop
out
movsb
inc
imul
stc
xchg
adc
mov
fimull
push
dec
cmp
sub
fsubs
sbb
inc
push
mov
aas
in
arpl
repnz
pop
jb
lcall
inc
push
dec
popf
mov
iret
lea
inc
in
scas
fcoms
rcrb
xor
movsb
lods
or
pop
adc
pushf
xchg
mov
dec
testl
mov
fwait
dec
xchg
faddl
mov
xchg
and
popf
stc
loopne
push
insl
push
push
stc
outsb
add
inc
cmpsb
cwtl
test
arpl
fs
in
andps
xor
test
das
cmp
notl
movsl
pop
xchg
jle
add
add
dec
dec
sbbl
cmpsl
imul
and
cld
or
imul
das
lahf
gs
jge
fisttpl
mov
aas
fisttpll
add
and
jecxz
pop
cmp
cmpsb
fdiv
mov
sub
scas
inc
sahf
mov
dec
mov
push
pusha
cmp
push
mov
movsl
push
pop
in
fsts
and
std
pop
and
dec
and
and
inc
or
js
fisttps
or
arpl
es
fcoml
pop
movl
sub
pusha
lods
xor
fsubs
dec
packsswb
inc
in
mov
push
mov
in
aaa
enter
xchg
fs
enter
pop
lret
mov
scas
cmp
add
ds
add
and
das
cld
and
jmp
aas
mov
dec
repz
pop
stos
addb
ds
or
mov
jge
insb
mov
cmpsb
jmp
dec
insl
sub
daa
pop
dec
sbb
cmc
pop
lcall
push
fpatan
aaa
sbb
ss
adc
add
add
mov
mov
hlt
frstor
jno
push
cli
mov
popf
and
int
in
or
cld
pop
jbe
leave
cmpsb
jg
into
loopne
dec
mov
mov
in
inc
data16
mov
xor
jmp
add
jne
cmc
das
in
mov
and
sbb
add
adc
loop
repz
pop
pop
cmc
cmp
mov
jl
inc
sbb
enter
lahf
jmp
jmp
movaps
mov
fcomps
fildl
es
lods
fmul
and
jne
and
clc
and
push
loopne
aas
xchg
add
cmpsl
fwait
cs
leave
pushf
push
decl
ret
stos
xchg
dec
rcl
iret
aaa
push
mov
jge
mov
mov
mov
cmpb
push
test
cs
das
ret
mov
aaa
into
jnp
mov
push
sub
pop
and
inc
pop
cmp
lret
dec
or
or
push
jmp
sub
pusha
fstpt
sub
dec
lods
push
mov
pushf
mov
or
movsb
aaa
int
je
sbb
ss
in
sub
popf
outsb
adc
std
sarl
push
or
imul
dec
or
cwtl
outsb
or
ret
cltd
out
dec
mov
test
adc
cmc
and
sbb
xchg
mov
cmp
push
sub
fnstsw
jg
pop
inc
leave
xlat
je
fildl
adc
dec
int
sub
iret
xor
mov
dec
adc
mov
mov
or
cmp
hlt
push
call
jmp
hlt
mov
lret
std
sar
rcll
pop
sbb
int3
mov
insl
add
adc
mov
mov
pop
push
xchg
jl
je
sub
sarl
outsb
xlat
xor
js
femms
sbb
mov
cmp
sahf
stc
test
popf
cmc
mov
jg
test
ret
mov
jle
and
clc
cmpsl
inc
scas
inc
ja
mov
pop
inc
sti
inc
inc
pop
shlb
bound
lret
das
inc
dec
fdivr
add
cmpsb
mov
in
movsb
xchg
pop
sub
ljmp
dec
andl
lret
in
push
addb
dec
dec
jl
push
stos
and
jecxz
inc
xor
testb
dec
push
enter
or
pop
pusha
dec
fwait
or
pop
pop
repnz
jns
cmp
ljmp
aas
mov
repnz
testb
stc
outsb
jle
insl
dec
dec
out
andb
pop
jbe
mov
mov
cs
pop
outsb
push
dec
jnp
in
imul
dec
jo
mov
nop
sub
int3
std
push
shll
cli
pminub
jnp
pop
cmpsb
jmp
jb
loope
mov
inc
hlt
dec
loop
or
push
montmul
cmpsb
test
fwait
sbb
sti
sbb
and
int
fidivs
pop
mov
stos
mov
lret
xchg
les
cmpsl
sub
sub
mov
lock
pop
sahf
js
gs
mov
push
jno
add
insl
cmp
les
scas
inc
dec
jbe
movsb
ret
es
dec
repz
lods
imul
push
rcll
push
fidivrl
push
push
in
mov
call
lock
push
push
popf
lods
xor
in
les
push
cmp
loopne
popf
adc
pushf
hlt
cli
popf
xor
adc
out
testb
test
xchg
lcall
ret
inc
scas
add
sbb
clc
cmpsl
pop
cmpsb
test
push
xchg
jge
js
mov
ss
mov
lcall
jl
cmpl
in
jle
cli
push
fists
mov
repz
pop
pop
orl
stos
adc
add
fnsave
pop
add
pop
add
xchg
shll
add
inc
leave
repz
adc
stc
mov
shlb
mov
inc
movsb
test
push
roll
fnstenv
cmp
lahf
cltd
and
nop
iret
pop
sub
push
hlt
pop
sahf
add
or
test
push
pushf
shl
cmp
insl
cltd
sti
orb
mov
data16
xchg
pop
pushf
jg
idivb
rorb
lock
xor
popa
add
lret
mov
pushf
lods
add
inc
js
movsl
pusha
and
jp
test
nop
lock
cmp
in
rolb
add
lret
mov
add
cmp
adc
inc
into
lcall
xor
push
sub
ret
and
iret
dec
lods
inc
xor
ds
dec
or
push
inc
xchg
sub
aam
in
mov
dec
add
shll
pop
adc
mov
leave
into
xchg
repz
lock
sub
xchg
stos
imul
sbb
mov
sbbl
rorb
fists
aas
push
pop
cmp
aaa
scas
cmp
xchg
repnz
xor
insl
or
rolb
subl
jae
enter
out
xchg
notb
xchg
mov
or
dec
pop
icebp
or
sbb
or
mov
std
sub
pusha
addb
dec
movsb
add
pop
andb
mov
iret
fistl
mov
test
inc
hlt
push
mov
popa
add
arpl
add
sub
and
cwtl
cli
mov
pop
jmp
jl,pt
fs
out
cli
enter
cmpb
mov
xchg
fsubl
inc
add
mov
pop
add
xchg
cmp
mov
ljmp
adc
xchg
xor
scas
inc
add
mov
pop
loope
jp
loope
mov
xchg
out
sbb
xchg
xorb
fidivl
sahf
add
inc
call
inc
mov
mov
lock
fimuls
movsl
xcrypt-cbc
ficoms
ds
jne
bswap
repz
and
into
adc
pop
ret
inc
std
sbb
notl
push
sbb
xchg
cmp
inc
outsl
pop
ds
shll
cmp
add
je
das
iret
fsubl
mov
lock
jl
test
mov
mov
stos
in
fwait
test
lcall
adc
dec
jmp
cli
add
sbbl
negl
jnp
dec
sbb
sbb
mov
insb
leave
jns
sub
fdivp
mov
mov
xchg
arpl
sbb
fimull
loop
push
or
out
mov
dec
pop
fdivr
and
std
jae
lret
aaa
ss
out
pop
push
call
jmp
adc
outsl
xchg
mov
cmc
mov
xor
out
dec
push
mov
mov
ret
add
lods
inc
in
sarl
mov
mov
and
scas
adc
or
je
and
xchg
mov
leave
mov
cli
mov
iret
stos
adc
frstor
and
fmull
lods
inc
push
or
mov
sub
dec
aam
push
jle
shl
stc
sub
and
inc
mov
jne
in
push
mov
jl
push
ljmp
subl
loopne
cwtl
adc
adc
mov
xchg
mov
mov
decb
push
push
mov
mov
mov
or
mull
adcl
aam
scas
xor
sub
pop
jg
or
out
mov
jo
inc
mov
inc
push
or
or
mov
xorl
scas
adc
mov
imul
ret
sarb
cltd
xchg
dec
push
and
push
mov
pop
in
sub
cmc
inc
and
cld
pop
inc
flds
push
movsl
or
in
cwtl
test
adc
mov
imul
or
cmp
sbbb
lret
jae
mov
ret
movsl
lock
and
push
xchg
xchg
decb
adc
inc
pop
dec
outsl
jmp
or
or
call
ret
icebp
popa
and
add
adc
cmp
and
fmul
mov
dec
push
sub
jge
imulb
and
lea
call
jg
push
fsubrp
ja
mov
int3
fs
frstor
xchg
int
pop
jg
dec
lods
in
pop
je
into
nop
daa
add
xchg
push
sbb
adc
and
mov
out
popa
icebp
jmp
repnz
adc
addb
push
push
sbb
dec
int
or
insl
subb
mov
dec
fs
pop
inc
mov
in
adcl
andb
or
sarl
or
dec
rorl
add
dec
mov
jle
pop
push
in
or
js
pop
ret
xchg
cmp
mov
sbb
cmp
outsl
mov
dec
test
push
lcall
ja
xor
or
sub
adc
pop
into
sahf
mov
hlt
sbbb
xor
jbe
rclb
pop
add
mov
enter
scas
shrl
xchg
inc
icebp
or
cld
and
xor
cltd
cmp
aam
popa
testb
popa
jae
arpl
rol
or
in
out
push
jl
out
mov
ret
gs
sub
adc
lds
arpl
xchg
and
lcall
push
fiaddl
xor
lds
rcr
mov
cltd
push
lods
add
jbe
adc
adc
cwtl
mov
fbld
loop
inc
cmp
mov
pop
gs
xchg
xchg
jge
cmp
sub
out
xor
aad
cltd
lock
popf
xor
mov
aad
xchg
mov
jmp
das
mov
push
xchg
nop
xor
imul
add
push
sbb
add
leave
sbb
popa
fdivl
das
adcl
xchg
cmp
popf
popf
loop
or
jg
push
sub
inc
push
jecxz
xchg
adc
enter
pop
pushf
mov
mov
shll
add
inc
sbb
enter
fbld
jle
repnz
xlat
movsb
dec
and
fwait
xchg
push
gs
cltd
addr16
enter
or
jmp
cmp
jmp
call
into
fwait
sti
sti
stc
scas
test
dec
or
jg
in
sub
rcrl
icebp
clc
dec
push
mov
adc
sub
and
pop
pop
add
or
cmp
fdivs
out
lcall
cmp
inc
and
or
or
loope
mov
mov
and
sub
dec
iret
push
jmp
mov
sti
in
xchg
std
xchg
repnz
ds
mov
dec
pop
push
xchg
xor
mov
sbb
inc
and
inc
mov
in
cmp
clc
cltd
xor
inc
adcb
inc
sbb
mov
add
pop
xchg
sub
xor
and
mov
jmp
jnp
jnp
cmpl
adc
test
sub
js
fldcw
fdivrp
inc
jmp
stos
xor
jne
sbb
add
jne
sub
push
pop
call
or
jecxz
xor
test
xlat
hlt
arpl
mov
push
scas
xchg
mov
xor
pop
lds
push
inc
mov
fsubl
adc
sbb
and
sbb
ja
insl
test
ret
mov
push
push
movsl
call
fldenv
lods
ljmp
es
fimuls
cld
push
dec
pop
push
ret
fists
or
mov
andb
lret
mov
fstpt
repnz
jns
inc
lock
lret
jbe
idivl
lcall
stc
xchg
lods
sub
mov
xor
mov
ja
and
cltd
loopne
mov
cmp
repnz
flds
mov
fs
addr16
xor
sbb
fimull
enter
fsubrs
das
les
add
or
add
sbb
mov
xlat
jo
arpl
pop
jp
mov
inc
sbb
ret
stos
jb
add
int3
shrl
dec
add
xor
cltd
xor
push
xor
cmp
jmp
std
xchg
mov
jns
sti
cmpsb
jns
rcr
jmp
dec
jnp
add
and
add
pop
xchg
test
shl
sbb
lods
iret
jae
in
lea
xor
lahf
or
jae
inc
movsb
xlat
mov
dec
push
popf
xor
scas
aaa
mov
xor
mov
add
cmp
jo
stos
andb
rcll
inc
mov
outsl
jns
add
enter
pop
ljmp
mov
les
loopne
stos
imul
bound
xor
jl
rclb
mov
fldl
outsb
cmpsb
lds
pop
push
enter
lods
in
ficoms
inc
or
ja
lea
shr
push
cmc
std
xchg
daa
ja
sbb
stc
dec
lods
fsubrs
scas
lods
mov
ss
sti
pushf
sub
mov
adc
notl
adc
xchg
pop
sub
push
mov
pop
mov
imul
or
mov
mov
call
cmp
clc
push
xchg
sub
cli
mov
sub
dec
loop
lret
jb
imul
lock
cmp
pop
xor
pushf
mov
pop
mov
fnstsw
fisttps
mov
mov
and
fldpi
js
mov
xchg
and
nop
clc
test
daa
inc
or
sahf
xor
lods
lea
mov
mov
mov
out
fistpl
shl
push
inc
je
cld
cmc
xchg
xchg
fstps
sbb
pop
fdivrl
les
sbb
sti
sbb
in
cmp
fsubr
sbb
pop
pushf
stos
xchg
test
mov
ljmp
jne
movl
push
ljmp
jno
add
jle
or
dec
loopne
dec
imul
ja
jmp
aam
ret
adc
pop
call
sub
jecxz
sub
cmp
adc
xchg
lock
push
ja
mov
in
addr16
loope
imul
jecxz
pop
push
xchg
mov
mov
mov
mov
fsubrl
ror
jmp
test
xchg
mov
xchg
fbstp
cltd
xor
sti
mov
xchg
mov
add
sbbb
mov
js
jbe
pop
pop
fsubl
sar
fnstenv
aaa
aas
js
jno
cmp
lret
fsts
push
stc
stc
iret
lods
inc
rorl
test
xchg
mov
xor
xlat
xor
test
lds
add
scas
xor
ret
js
stos
inc
inc
lcall
fidivl
and
adcb
fs
lds
cmp
pop
push
sbb
add
es
lcall
aam
jge
lret
fisubrl
or
mov
push
clc
xchg
dec
sti
loopne
loop
xor
in
jecxz
mov
mov
sbbb
lret
pop
xchg
jmp
rorl
daa
jecxz
pop
in
inc
sbb
push
jmp
daa
inc
jo
cli
xor
xchg
bound
dec
push
mov
lahf
mov
mov
bound
mov
shll
mov
not
sahf
cmp
add
or
movsl
data16
jmp
ss
hlt
lock
or
jns
pop
out
fwait
ret
mov
mov
push
mov
addb
ja
mov
in
xor
lret
or
loop
rcl
add
hlt
popf
mov
movsl
dec
movb
mov
inc
out
sbb
push
in
jecxz
inc
lret
icebp
movsb
mov
and
xlat
fnsave
cs
rolb
loop
cmp
push
imul
sbb
cmp
das
dec
ffreep
and
sti
mov
sahf
out
cli
ds
call
pop
sub
jl
adcl
jno
pop
mov
and
and
add
dec
lds
loop
or
add
std
push
or
xchg
jmp
mov
test
pop
nop
mov
dec
fdivs
in
pop
lods
xor
push
xor
btsl
in
sub
jnp
int
adcl
add
lock
push
push
push
lods
not
mov
ficompl
mov
loope
xlat
shlb
test
jg
push
daa
mov
pop
jmp
movsl
in
mov
adc
lods
add
popf
movsb
mov
imul
aaa
stos
inc
xor
bound
enter
cmp
xlat
mov
inc
ja
call
fmul
outsl
push
cld
stc
push
punpckldq
xchg
xor
repz
xor
dec
mov
pop
ret
jno
jecxz
jge
pop
fsub
add
fwait
fwait
and
and
sbb
mov
or
sub
and
cmp
test
cs
jmp
hlt
shlb
insl
popf
mov
loopne
fcompl
add
aad
adc
mov
and
cmpsl
jb,pt
inc
inc
and
sti
mov
dec
xor
out
roll
jge
xchg
sub
jnp
stos
dec
mov
jecxz
leave
test
andl
faddl
push
mov
fistpl
fldenv
mov
xchg
imul
test
stc
in
mov
fnstenv
pop
and
daa
push
mov
add
inc
mov
jle
inc
push
icebp
push
adc
mov
daa
xchg
pop
adc
dec
push
push
inc
mov
add
and
insb
or
imulb
iret
fxch
lea
aas
or
mov
xchg
mov
aaa
adc
fcom
mov
lods
mov
xchg
sub
dec
mov
unpcklps
arpl
dec
xor
fwait
xor
add
bound
icebp
jmp
lock
or
pop
cli
mov
dec
pop
cmp
mov
clc
push
rcr
icebp
xor
nop
fs
xchg
fs
pop
push
sub
dec
jbe
aaa
roll
xor
test
cltd
xor
je
ss
ficomps
leave
addr16
fwait
sti
jbe
mov
aas
fcomip
aad
push
cmp
mov
stos
cmp
push
dec
stos
push
cld
dec
call
insb
out
cmpsl
or
pop
lret
push
test
mov
jno
lods
sub
mov
mov
rorb
enter
andl
pop
cmc
inc
fcmovnu
jno
xor
ficoms
mov
add
mov
mov
dec
mov
and
jg
cmp
daa
cmc
and
pop
icebp
push
in
mov
lds
imul
sub
dec
pop
or
lods
jmp
inc
imul
adc
add
xchg
cmpsb
imulb
mov
and
test
cltd
arpl
xor
sub
dec
das
add
sub
jecxz
pop
dec
add
rol
or
push
push
mov
cmp
mov
mov
jbe,pt
call
into
movl
sub
lock
mov
push
lcall
jmp
or
sub
pusha
stos
xchg
sbb
cmp
adc
cmc
cmp
in
popf
stos
mov
in
sub
jno
mov
dec
aas
and
push
pop
adc
lret
adc
xor
pop
inc
push
fiaddl
adc
and
adc
dec
sub
dec
pop
dec
iret
xchg
jge
adc
mov
clc
stos
jne
adc
inc
inc
fcoms
movntq
adc
je
dec
jge
es
aaa
sahf
pop
imul
xorl
nop
pmulhuw
lds
jno
push
int3
adcl
pop
cmc
mov
mov
bndstx
mov
xor
outsl
fistpll
fadd
dec
dec
adc
add
dec
cmp
xchg
cltd
mov
push
notl
cltd
outsb
jmp
or
jbe
cmpsb
push
lea
xor
cmpsb
xor
rcrl
bswap
sub
sti
jnp
das
and
jns
mov
dec
pop
xchg
fwait
scas
cld
mov
pop
dec
dec
inc
jmp
inc
xor
mov
xchg
pop
daa
sub
daa
dec
push
sub
or
jns
stos
mov
in
ja
repz
lods
ja
jbe
inc
xorb
je
xchg
sub
cmpsl
cld
push
fists
out
fwait
mov
inc
setge
call
push
aad
aam
stc
pop
das
sub
xor
nop
lock
add
mov
subl
jge
popf
cli
or
push
out
ret
pop
jecxz
push
cmp
cmp
scas
nop
ror
ret
scas
das
inc
mov
mov
adc
inc
jmp
mov
jbe
xchg
iret
mov
mov
cmp
sarb
cmc
dec
pop
es
aam
push
jne
dec
out
test
mov
mov
fisttpll
inc
fidivrl
clc
push
sub
add
dec
mov
dec
xor
inc
and
xor
iret
jbe
fdivr
cmp
int3
flds
add
mov
push
xchg
cli
xor
sub
fnstenv
lds
stos
sub
mov
cmpsl
repz
inc
loope
sub
stos
lea
push
movsl
and
das
addr16
inc
pop
mov
jb
icebp
arpl
fmull
or
loopne
inc
loop
fisttpll
hlt
daa
add
push
out
int
mov
adc
ds
repnz
pop
adc
test
cltd
repnz
packuswb
leave
in
sti
arpl
int
dec
fs
mov
and
je
iret
data16
xlat
sarb
adc
jo
cmp
mov
call
adc
inc
pop
or
xchg
fstpl
cmp
arpl
insb
sarl
xchg
in
jns
loope
fucomp
jg
inc
sub
shr
fdivp
mov
rclb
mov
pop
jb
hlt
aaa
mov
fldenvs
mov
shl
adc
daa
repz
xorb
call
or
push
mov
fwait
sete
push
push
adc
jns
out
ret
call
lret
in
dec
iret
and
sarb
and
push
or
lret
xor
xchg
in
push
fdivl
mov
fdivl
inc
sub
pop
arpl
into
push
sbb
js
xor
movsl
je
cmp
and
push
mov
movsl
leave
pusha
lahf
mov
out
pop
arpl
fld
testb
pop
mov
into
lahf
cwtl
lock
adc
in
insl
xor
test
xchg
pop
lods
outsb
inc
pop
pop
ljmp
sbb
rolb
ss
pop
mov
inc
cmpl
mov
xchg
and
sbb
rcrb
aam
push
sbb
mov
int
int
loop
shrb
sbbb
sbb
mov
push
mov
mov
xorb
xchg
jmp
push
pop
popf
lea
scas
jp
and
or
push
ljmp
cmc
mov
mov
repz
mov
pop
sub
shll
bound
jmp
rcl
adc
mov
push
call
outsl
ret
and
fsubrs
xchg
push
and
mov
xor
outsl
nop
aam
stos
lds
test
xchg
scas
sbb
inc
push
push
jae
push
dec
out
inc
test
or
xor
popf
push
jge
notb
dec
aaa
scas
nop
inc
push
rcrb
inc
popf
cmp
and
subl
xchg
pop
jb
in
sbb
push
cmp
lock
lock
mov
mov
jg
das
mov
and
das
inc
add
dec
push
pop
xor
jp
cmpsl
aas
les
leave
or
jno
or
push
jg
push
sbb
fsubrs
out
inc
in
rorl
inc
into
cmpsb
out
in
mov
lret
xchg
jb
cmpl
loope
push
cmp
jbe
mov
dec
dec
repnz
fnsave
shrb
subl
sti
fcompl
hlt
icebp
pop
push
mov
mov
rcll
fptan
sub
mov
or
icebp
pop
push
push
data16
imul
pusha
xchg
push
xchg
sub
iret
inc
mov
jecxz
pusha
xchg
push
inc
inc
aad
stos
jno
stos
out
mov
xor
cmc
jns
push
xor
mov
adc
adc
sub
out
push
and
ret
sbb
mov
sbb
or
out
nop
mov
inc
lret
pop
cmpsb
nop
cmp
sahf
std
out
push
fmull
cs
or
ja
in
int3
gs
add
jae
lret
mov
push
adc
sbb
add
test
pop
sub
std
and
ds
inc
les
popa
ljmp
add
loop
and
outsl
lds
je
fisttps
scas
insl
add
pop
vpcmpeqw
and
fsubl
or
and
std
nop
sub
jbe
insb
lcall
sub
repnz
lea
xchg
sub
ss
decb
repnz
pop
jns
or
in
cmpsl
xchg
fxch
mov
push
sbb
adc
das
bound
pop
cmpsb
pusha
adc
inc
ja
jl
cmovb
dec
out
loope
mov
xchg
push
or
mov
fwait
push
rorb
pop
sbb
inc
add
xor
sub
mov
scas
inc
fneni(8087
sbb
nop
and
xchg
or
in
mov
jle
dec
xor
enter
ret
cltd
xor
mov
cmp
arpl
dec
dec
cs
outsb
lds
sub
stos
cmp
mov
mov
pop
sbb
mov
mov
scas
add
or
movsl
push
inc
jge
loope
mov
icebp
or
and
and
pop
cmp
into
cld
test
jns
push
push
clc
cmp
insl
sub
mov
xor
jge
jnp
mov
cmp
sub
inc
xchg
loope
mov
stc
ljmp
and
or
mov
pop
mov
jno
in
adc
jmp
popa
in
mov
lock
or
insb
add
push
imul
push
jns
testl
sbb
in
orl
cmp
adc
pop
mov
xor
mov
add
push
lea
mov
push
mov
cld
jmp
xchg
test
les
and
in
fwait
jae
out
xchg
ljmp
fsubrp
std
mov
mov
sbb
fwait
dec
shrb
sbb
push
and
int
sbbb
test
mov
or
adc
outsl
inc
fadd
fistps
pop
arpl
add
testb
and
les
icebp
xchg
and
or
outsb
adc
mov
jge
cwtl
fwait
xor
jecxz
pop
gs
mov
mov
push
movsl
sbb
mov
test
test
in
mov
and
fcoms
jl
pop
cmc
push
popf
out
push
jmp
ljmp
mov
and
arpl
je
out
insb
push
shll
sub
inc
sbbl
call
rorb
lea
stos
pop
mov
pop
adc
dec
jb
push
xlat
mov
adc
mov
inc
sbb
loopne
push
iret
inc
in
pop
ss
mov
xchg
jge
mov
mov
inc
popa
ffreep
mov
scas
sbb
iret
jge
test
cmp
jge
mov
std
xchg
and
outsb
insl
pop
shll
push
mov
mov
andb
imul
cmp
les
fwait
mov
adc
testl
std
xchg
pop
out
insl
iret
in
jp
xchg
fsubl
leave
fsts
or
sti
adc
cmp
lds
das
rcrl
loopne
sti
in
mov
ds
jno
add
testl
push
push
aas
and
xor
gs
movsb
fisttpll
push
and
shr
adc
ftst
test
sub
sub
adc
jo
repnz
dec
inc
xlat
adc
jmp
inc
mov
aad
outsl
loop
and
push
sub
xor
xor
loopne
pop
adc
dec
push
or
stos
mov
outsl
and
std
dec
push
lods
jnp
mov
int3
inc
dec
xor
insb
mov
js
mov
mov
bound
rcrl
push
cltd
sub
jmp
add
push
cmpsb
inc
in
mov
inc
jo
enter
loopne
lahf
push
dec
xchg
ret
leave
test
mov
loop
push
xchg
insb
movsb
jp
inc
int3
outsb
jl
out
pop
ret
aaa
cmp
loope
ljmp
cld
pop
lock
lds
rcrb
jmp
xorb
lods
xor
or
pop
dec
pop
xor
and
mov
outsl
jge
std
push
push
and
test
push
and
push
mov
roll
xchg
aam
adc
loop
cmpsl
xchg
cwtl
inc
scas
icebp
inc
and
out
pop
mov
shl
icebp
insl
inc
xlat
popf
add
jne
mov
mov
insb
xchg
mov
mov
bound
add
stos
mov
negl
jbe
mov
sbb
shrb
mov
ret
loope
jmp
dec
add
dec
cmpsl
lods
lock
mov
ret
ja
lds
sub
mov
jmp
hlt
lret
inc
insl
adc
in
lret
pop
push
push
xchg
test
dec
sbb
aaa
iret
push
inc
rorl
and
xor
dec
jb
jbe
adc
xchg
lds
push
in
sbb
lret
dec
cmp
push
jmp
cli
cmc
loopne
imul
and
lods
push
movsl
pop
ret
popa
mov
dec
and
dec
loop
mov
sbb
xchg
jl
cmc
leave
pop
push
sub
shrb
mov
xchg
sub
aas
or
add
pushf
inc
sub
jg
fisttps
mov
push
lods
jecxz
imul
xchg
enter
js
roll
fmuls
bound
mov
mov
sub
dec
outsb
fcmovnbe
fldenv
or
lds
sub
xchg
data16
jo
lds
iret
pop
lcall
sahf
jb
iret
scas
dec
adc
adc
jno
add
scas
inc
cld
mov
int
jns
mov
repz
addr16
jb
push
cs
xor
loopne
pop
mov
mov
push
push
das
insb
sbb
mov
lea
inc
jmp
push
xchg
pop
iret
push
fstl
js
jbe
inc
gs
sti
addps
sbb
stos
cmp
les
add
gs
int3
xchg
imulb
ror
push
mov
lahf
cmp
es
test
sbb
dec
or
fsts
es
dec
xchg
xor
stc
sub
shlb
mov
pop
xor
xor
mov
push
fnsave
shll
inc
adc
push
mov
pop
sbb
and
inc
xor
in
mov
mov
mov
push
sub
test
and
push
daa
inc
push
insl
mov
into
cmpsl
dec
loop
jns
and
jl
jns
pop
mov
mov
xchg
mov
not
cmp
xor
shrl
out
mov
adc
test
std
or
mov
rcll
pop
mov
mov
push
inc
and
dec
scas
inc
enter
dec
movsl
mov
and
mov
or
cs
fimuls
xor
mov
loopne
mov
insl
and
xchg
test
loop
and
ss
enter
xchg
push
mov
lock
je
push
out
jg
adc
test
sbbl
mov
outsl
pop
je
dec
insb
push
inc
lds
dec
dec
sub
or
inc
cmp
xchg
loop
loop
int3
lcall
in
sbb
mov
fidivl
and
popf
das
cmpb
jnp
mov
push
test
int
inc
loope
pop
cmp
mov
jbe
jg
sub
pop
xchg
fiadds
pushf
je
or
inc
xchg
pop
js
je
xchg
lcall
mov
ss
inc
push
or
jne
sbb
adc
cmp
and
cltd
scas
xchg
mov
and
aaa
add
xor
cmp
ss
rclb
ret
add
cmp
dec
cwtl
stos
jp
fsubs
adc
cs
cs
mov
fs
aaa
mov
loopne
and
loope
insb
xor
cmpsl
mov
adc
hlt
sbb
enter
iret
movsb
jecxz
shr
int
ret
std
iret
mov
dec
lods
push
addb
je
push
out
repz
mov
push
pop
xor
cltd
popa
jl
stos
xchg
stos
loopne
pop
mov
cmp
xor
sti
cmpsl
scas
sub
lock
mov
mov
fdivs
mov
adc
mov
jo
cmpsl
out
pop
push
clc
cmp
stos
pop
iret
pop
pop
lret
stos
jmp
dec
sub
jns
xchg
push
lods
and
jb
cmp
dec
and
mov
or
data16
imul
leave
sbb
sbb
aas
cmp
popa
clc
outsl
pop
popa
or
nop
sbb
test
sub
cld
xchg
pop
cli
xchg
pusha
aaa
popf
hlt
xchg
iret
push
pop
sbb
outsl
jne
mov
ret
cmp
xlat
add
push
dec
xchg
aaa
or
sbb
bound
mov
divl
in
or
xchg
push
or
pusha
lahf
cmc
rcl
popf
cmc
dec
rep
in
cmp
dec
mov
mov
mov
inc
jp
shll
xchg
das
inc
cltd
aas
out
jae
or
cmp
je
pop
push
pop
dec
icebp
xchg
repz
in
imul
pop
int3
sbb
push
mov
or
cmp
insl
mov
jmp
or
adc
rcrb
imul
sbbl
sub
lret
and
cmp
mov
push
insl
and
jbe
push
cli
jne
add
jno
xor
jae
xlat
test
and
inc
inc
push
cltd
xor
push
adc
imul
movsl
sbb
outsb
adc
or
iret
adc
sub
std
or
les
add
ss
imul
add
imul
imul
and
out
rorl
popf
xchg
xor
xor
xor
push
push
outsb
fwait
mov
shlb
and
shrl
sbb
mov
mov
insl
add
xchg
pop
hlt
cmpsl
adc
push
jnp
sarl
aaa
roll
lcall
pop
sbb
jns
mov
sub
inc
enter
cmp
test
es
and
push
popa
sbbb
inc
sbb
outsl
sbb
mov
push
inc
and
sub
sarl
cltd
or
shlb
aad
jae
add
out
xchg
adcl
test
and
daa
adc
or
fnstenv
arpl
jne
xlat
sbb
repnz
aad
int3
lcall
insb
cmpsl
int3
fs
sbb
imul
xor
adc
add
push
test
fcmovnb
fisubl
sbb
mov
pop
lds
movsb
cmpsb
mov
sub
jmp
inc
popa
iret
lock
mov
aas
stc
imul
movsb
addb
pop
dec
loopne
mov
or
inc
dec
add
pop
xchg
frstor
adc
popf
xor
test
jno
xor
out
xor
call
data16
mov
xchg
mov
adc
adc
cmp
pop
mov
in
sub
pop
inc
mov
push
cmp
outsb
loope
push
mov
sbb
mov
push
ds
fists
mov
mov
push
push
addr16
cmp
imul
mov
sbb
ret
movsl
jecxz
jecxz
cmpsb
pop
fsts
xchg
loopne
faddp
inc
rcrb
mov
sub
jecxz
bound
test
rcrb
loope
inc
lret
xchg
roll
inc
push
imul
arpl
aaa
mov
xchg
repz
adc
mov
pop
xchg
inc
fsubrl
nop
imul
arpl
mov
sub
pop
sub
repnz
in
aam
lret
imul
pop
fsubr
jae
jge
jbe
pop
xor
out
dec
rol
xor
jne
mov
mov
inc
jmp
cs
pusha
pop
int3
or
pop
cmp
mov
mov
dec
int
pop
adc
and
shlb
pop
jge
cmp
mov
out
xchg
cmpsl
imul
xchg
or
hlt
andb
sahf
es
inc
sbb
cmp
jno
inc
sub
movsl
cmp
in
das
pop
sbb
push
jae
es
imul
call
into
insl
inc
pop
xchg
pop
inc
fimuls
std
fcmove
cli
div
mov
popf
sbb
mov
mov
or
imul
xchg
push
add
adc
es
in
push
dec
aas
lds
lock
divl
mov
lds
and
sbb
lds
les
in
int
in
in
mov
test
add
pop
mov
xchg
push
or
pop
into
dec
mov
push
in
push
popf
clc
lods
dec
pop
out
test
dec
je
jnp
jge
xchg
xor
fs
or
xor
js
jl
test
mov
scas
jecxz
test
pop
nop
ss
imull
sbb
fwait
and
mov
xor
call
inc
jle
inc
inc
ja
nop
daa
lods
pop
andb
jae
push
movsl
in
movsl
jl
outsb
and
pop
pop
add
nop
sub
rclb
icebp
pusha
or
mov
faddl
and
xor
dec
std
jp
push
jl
adc
mov
sub
out
popf
les
mov
and
jle
mov
mov
mov
pop
outsb
scas
fwait
mov
mov
mov
ds
inc
les
and
mov
fcompl
fldenv
mov
pop
adc
mov
push
sbb
lods
call
or
test
mov
or
std
cltd
popf
lret
cmp
in
push
sub
in
test
sbb
aad
push
scas
dec
ja
push
push
cmp
ret
mov
adc
cmp
push
sub
dec
out
movsl
pop
in
xchg
inc
mov
pop
mov
adc
mov
shrl
adc
fiaddl
jecxz
cmp
imul
cmp
or
dec
sub
mov
lret
xor
mov
out
jmp
fiaddl
stos
inc
jns
loopne
lahf
ret
insl
cmp
xor
sahf
scas
ret
dec
inc
adc
mov
cld
xor
pop
data16
cld
imul
popf
jmp
push
sbb
icebp
pusha
test
popa
aad
dec
push
xchg
xor
cltd
stos
sbb
jns
cmp
stc
orl
cld
movsb
inc
rcrl
jo
ret
imul
hlt
fwait
sti
fdivs
mov
stos
sub
or
popf
or
sub
subl
add
sub
push
pushf
and
mov
repnz
pushf
xchg
loopne
dec
dec
loope
imul
mov
mov
cmp
jge
or
cmpsl
es
jecxz
push
or
test
sbb
btc
cmp
and
jne
ss
aad
jne
sbb
lret
jle
stos
xor
das
scas
out
aad
jp
mov
cwtl
jecxz
cwtl
sub
imul
xchg
and
mov
ds
cmpb
ds
fcomip
pop
dec
loop
add
push
mov
mov
cmp
mov
fadds
call
xchg
icebp
jp
push
js
or
je
jmp
xchg
pop
fwait
push
dec
stos
jne
pop
aas
int
mov
jmp
imul
dec
out
stos
jmp
scas
or
sbb
or
or
in
popf
mov
push
or
dec
sahf
inc
imul
xchg
jne
cmp
mov
sbb
stos
flds
mov
imul
lcall
aam
mov
add
mov
mov
lea
clc
sbb
fsubrp
inc
std
inc
iret
jecxz
jne
xchg
mov
or
or
pop
loopne
stc
adc
lea
jbe
pop
fbld
stc
fildl
inc
push
imul
ss
lods
xor
pop
or
mov
mov
loope
mov
xor
nop
jecxz,pn
dec
insb
jae
dec
scas
leave
pusha
adc
out
mov
mov
rcrl
push
sbb
enter
cli
ret
enter
leave
mov
pop
add
xor
xor
sub
pop
lods
xchg
push
pop
and
inc
movsb
imul
sbb
sti
xchg
fsubrl
loope
cmp
int3
movsl
outsl
cli
cmpl
mov
add
and
dec
mov
stc
out
enter
stc
inc
jmp
jne
call
fldl2t
out
test
je
jle
xor
xchg
or
mov
jbe
jmp
icebp
in
cld
enter
and
jnp
test
push
jbe
and
notb
or
lock
sub
push
sub
mov
fnstenv
push
adc
cmc
pop
sbb
and
jns
sub
mov
fdivp
jbe
add
out
sbb
push
imul
fistpl
stos
sbbl
jecxz
sarb
imul
xchg
add
stos
ret
sub
ficoml
push
push
mov
in
ljmp
adc
out
pop
mov
and
in
mov
pop
xchg
outsb
sbb
xchg
adc
negb
dec
mov
cmp
push
icebp
jnp
xchg
ret
pop
add
mov
sub
inc
jno
je
xchg
xchg
lret
int
cmp
sahf
mov
mov
ja
xor
addr16
call
in
inc
aam
pop
mov
into
iret
fs
xchg
xchg
jecxz
lahf
lods
mov
sbb
mov
or
xor
es
leave
fdivrp
cmp
xor
ret
sub
push
mov
pusha
ret
pop
add
and
jae
dec
shlb
inc
mov
jb
jne
inc
lods
add
andl
add
push
icebp
movsb
and
push
push
or
mov
test
push
icebp
xor
dec
insl
adc
aad
imul
cmp
test
mov
and
pop
and
add
mov
and
sbbb
ja
xchg
inc
cmpsl
pop
cli
jne
sbb
movzbl
sub
xchg
xor
mov
imul
rclb
sbb
jae
fs
pop
add
adc
aaa
scas
cmp
adc
leave
inc
fwait
inc
inc
xchg
push
out
test
cmp
mov
dec
pop
imulb
gs
add
mov
pop
andb
test
int3
xor
xchg
mov
ds
push
stc
test
test
out
inc
dec
in
setne
adcb
idivb
lock
notl
inc
leave
jl
jmp
fs
pop
or
pop
stos
jle
popf
movl
inc
and
mov
fwait
shlb
add
jecxz
repz
decb
adc
dec
cmpsl
out
pop
and
sbb
dec
push
sub
inc
flds
inc
lods
lcall
jg
stc
jle
jns
fiaddl
cmpsl
push
sub
and
in
std
push
clc
add
fwait
push
xor
lods
mov
fcmovu
inc
enter
and
fstl
or
inc
adc
sahf
test
inc
fdivr
lret
adcb
movsb
dec
mov
mov
mov
loopne
mov
pop
out
xchg
or
sbb
inc
push
sbb
pusha
pusha
sub
pop
je
sti
dec
push
xchg
in
scas
daa
icebp
adc
sbb
and
in
test
sub
inc
push
add
cmp
inc
mov
pop
jg
aad
movsb
adc
and
imul
inc
js
sahf
mov
ja
fbstp
in
movhps
or
xchg
sub
or
hlt
pop
clc
hlt
mov
jmp
inc
mov
addr16
fucomi
rclb
pop
mov
in
imulb
nopl
mov
icebp
jbe
call
mov
js
das
mov
add
push
pop
push
iret
cmpsl
sbb
push
nop
divb
movsl
sbb
push
mov
jle
xchg
lock
ljmp
push
mov
mov
das
fmuls
lock
dec
out
cmc
movsl
subb
sub
mov
or
push
jae
jb
arpl
push
aad
xchg
pop
movsb
xor
dec
scas
bnd
int3
and
push
inc
push
lcall
inc
pop
mov
out
pop
mov
dec
movl
movsl
sbb
xchg
gs
jb
fldenv
jne
cli
add
test
adcl
add
or
mov
jnp
mov
mov
xchg
dec
pop
xor
cli
sub
xchg
sub
mov
leave
push
fwait
lret
jbe
fimull
push
xchg
popa
int
cmp
xchg
fildl
adc
mov
bswap
ret
mov
mov
push
aad
or
inc
test
imul
mov
fnstcw
mov
xchg
mov
mov
mov
xchg
aam
movsl
xchg
add
mov
lcall
jbe
push
lods
js
das
cltd
ss
mov
aad
push
adc
aad
mov
cli
sub
cmpl
lds
rorl
adc
sbb
mov
push
xchg
inc
fdivrl
scas
or
fisubs
fistps
int3
pop
lcall
int3
sbb
dec
push
dec
cmc
mov
add
pop
scas
pop
add
mov
xor
repnz
push
or
mov
clc
pop
xchg
int3
xchg
pop
inc
cwtl
push
popa
incb
inc
pop
scas
dec
cmpsl
sbbl
sub
repz
or
arpl
adc
outsl
fs
push
dec
les
ss
pop
jecxz
ss
in
aaa
imul
inc
mov
or
movsb
sbb
ljmp
mov
or
xorl
cmc
pop
jl
fld
shrl
jmp
pop
lahf
dec
shrl
cmp
lret
ss
shl
enter
inc
ss
jmp
addr16
mov
js
pop
xchg
sub
sbb
xor
push
mov
test
sahf
push
subl
add
ljmp
jl
aad
ficoml
xchg
sbb
adc
in
jo
add
add
test
rorl
pop
xor
and
mov
insb
cmpsb
in
pusha
dec
cli
sarb
cwtl
test
dec
pop
xchg
jo
sub
out
fwait
es
and
and
ljmp
rorl
push
or
testb
cmpsb
adc
shll
cmp
jp
mov
jmp
fstl
orb
cmpsl
cmp
ds
mov
and
pop
jmp
push
pop
rcrb
popf
out
sbb
dec
orb
int
adc
loop
xchg
jo
add
cmp
and
outsl
cli
and
jmpw
incb
sub
mov
cmp
in
pop
jge
inc
adcb
test
xchg
stos
in
cwtl
mov
mov
out
mov
push
aam
pop
pop
jno
xchg
shrl
addb
cmc
icebp
clc
aad
xor
push
xorb
pop
xor
pop
addb
repz
xor
and
pop
imul
mov
push
pop
xor
inc
mov
sub
lret
out
mov
jb
cmpsl
sub
arpl
inc
sbb
add
xchg
mov
cltd
push
inc
and
mov
fidivrs
xlat
pop
add
adc
shlb
inc
in
icebp
popa
mov
mov
dec
iret
fistpll
xor
mov
lods
fistps
jnp
inc
popa
push
xchg
dec
dec
or
mov
es
lret
mov
cmc
sub
loop
mov
or
lods
add
jle
sbb
fxch
and
xor
mov
and
loopne
repz
xor
lods
xlat
mov
mov
loopne
mov
xor
int
cmpsb
les
or
ds
lcall
out
iret
and
mov
mov
repz
gs
nop
jne
mov
cmpsb
pop
adc
scas
and
inc
mov
mov
iret
and
cmp
shll
xor
loopne
mov
add
jle
add
dec
lods
jmp
xor
out
xchg
shrb
rcl
xchg
int
out
loop
stos
pop
outsb
jl
push
stos
cmp
push
inc
xchg
mov
pop
aaa
mov
es
gs
sub
loope
xor
int3
inc
and
dec
movsl
cltd
repz
ljmp
insb
divb
cmp
mov
mov
push
cmp
jae
xchg
adc
sbb
fbstp
mov
push
xchg
pop
hlt
push
xchg
pop
xchg
das
jnp
popa
test
test
xchg
and
fsubrs
xchg
fistpl
movsl
sbb
loopne
mov
jnp
popf
nop
mov
cs
lods
inc
scas
and
inc
jmp
inc
and
xor
jmp
xchg
mov
sub
and
adcl
jmp
fsubs
cltd
cmpsl
dec
inc
jb
xchg
mov
xlat
gs
cltd
ja
mov
fsubrp
idivl
mov
shrb
mov
xchg
out
mov
lds
pop
xlat
sbb
arpl
lock
cmpsb
push
ds
cmp
cmpsb
jno
sub
xchg
repz
mov
and
add
mov
sbb
mov
mov
out
or
jle
add
and
mov
sub
scas
sbb
imul
imulb
dec
pop
jmp
and
pop
lods
lods
add
insl
ret
or
sbbb
pop
js
loopne
push
fidivrl
ret
lods
outsl
pop
lret
mov
mov
mov
add
loope
loopne
vpshufd
sbbl
imulb
icebp
push
gs
sbb
mov
dec
adc
aas
pop
xor
sahf
and
pushw
cmp
sbb
jno
push
inc
xor
into
sahf
mov
ret
inc
mov
sub
aam
jge
imul
lcall
mov
lea
jmp
rolb
mov
push
and
fs
adc
mov
mov
into
xor
into
pushf
or
lret
fsubl
push
or
xorl
pop
sahf
jnp
cmp
adc
jne
es
sbb
movsb
and
lods
adc
mov
out
scas
cmp
scas
clc
mov
call
in
mov
iret
fwait
into
leave
jo
sbb
out
out
lret
push
cmp
sahf
cmp
sbb
bound
push
fs
or
cmpsl
sbb
test
sbb
jbe
inc
leave
das
jg
push
fistpll
mov
popf
movsl
adc
pop
int
xchg
lahf
adc
shrl
cmc
or
sub
add
loopne
sbb
adc
mov
sub
and
mov
inc
cmp
jle
scas
inc
mov
lea
lods
inc
fadds
mov
stc
and
jo
xor
div
mov
loope
ljmp
or
scas
inc
ja
push
mov
adc
popa
add
adc
call
nop
adc
shrl
pop
sahf
push
pop
out
test
std
gs
mov
and
daa
outsl
add
cmpsl
cltd
sbb
in
inc
xchg
cs
jno
das
jle
sbb
mov
rcl
imul
dec
adc
lret
stos
ret
lods
mov
xchg
push
and
cmc
mov
rclb
xchg
fucomi
lcall
and
pop
ds
sub
flds
sub
sbb
in
mov
lcall
cmpb
xor
mov
push
insl
mov
arpl
mov
xchg
jns
ret
pop
xchg
inc
pop
dec
jg
pushl
fistl
sti
ret
es
and
adc
lods
mov
in
mov
loopne
push
sarb
fistl
fs
clc
stos
test
push
sbb
xlat
mov
in
xor
cwtl
jmp
pop
mov
lcall
sub
and
lahf
shrl
aaa
sub
xchg
shr
xchg
pop
mov
cld
outsb
insb
rclb
mov
mov
xor
pop
push
mov
out
mov
in
mov
sbb
mov
xor
decb
fldcw
imulb
ds
shr
sbb
xor
rol
insb
sbb
cwtl
inc
mov
sub
and
xchg
call
add
inc
outsb
test
jo
or
stos
mov
movsl
in
fs
add
jbe
pushf
or
fcoml
out
jge
add
sahf
hlt
mov
and
ss
pop
imul
adcb
pop
pop
sbb
jl
loope
and
jnp
ds
pop
inc
mov
rcrl
rcrl
inc
fsubrs
stos
lock
add
das
jne
andl
mov
jp
sbb
push
aaa
bound
xchg
inc
mov
cmc
mov
cmc
push
add
dec
shll
cli
push
cmc
pop
pop
mov
loope
dec
dec
nop
ja
xor
mov
enter
sbb
and
sarl
mov
mov
xchg
aaa
pop
aam
mov
aam
lock
or
dec
ucomiss
inc
imul
adc
pop
loope
in
dec
adc
add
out
mov
cmp
fs
mov
stc
push
insl
shll
int
std
push
repz
or
mov
push
xor
sahf
testl
stc
add
add
mov
mov
sbb
adc
mov
iret
in
push
cld
cli
lods
xor
lret
ss
stc
bound
movsb
or
inc
sub
pop
out
pop
inc
ficoms
fsubrl
hlt
pop
dec
add
jne
mov
push
push
xlat
push
mov
outsl
add
test
bound
jmp
lcall
movsl
fnsave
fildll
cmpsb
ret
jge
adc
stos
jge
addr16
jo
rsm
out
cli
xlat
xchg
loop
adc
pop
cmc
inc
cmp
sbb
inc
jl
mov
lds
outsb
mov
vmovdqa
call
inc
sahf
das
jae
gs
pop
xchg
repnz
fwait
pop
xor
cs
fadds
sbb
or
cmc
addr16
jnp
lods
mov
fstpl
xor
daa
pop
sub
jg
lret
fidivrs
fldenv
fmull
adc
std
push
sub
inc
test
inc
mov
rcll
pop
mov
mov
int3
cmp
outsb
sub
sbb
xchg
insb
test
mov
data16
out
jp
into
xchg
mov
sti
mov
adc
sar
fnstsw
sti
in
jp
dec
fstpt
movsb
jmp
add
subb
mov
cld
mov
sbb
fxch
mov
xchg
adc
xchg
fwait
negl
sti
adc
std
xchg
or
pop
adc
rol
xchg
jge
fistpl
bound
dec
jno
sbb
fwait
dec
push
lods
jl
mov
fwait
repnz
inc
inc
xchg
mov
stc
outsl
sub
cwtl
and
jae
out
mov
das
pop
mov
rcrl
adc
shr
stos
mov
fstpl
out
out
subb
lods
test
cmc
xchg
gs
clc
inc
inc
push
std
scas
push
mov
inc
test
lea
std
lcall
cmp
pop
adc
mov
lds
or
adc
inc
daa
in
xor
and
xor
das
ljmp
loop
out
int
mov
shll
mov
cmp
arpl
mov
push
cmpb
lods
pushf
lods
fnsave
jo
dec
in
and
aam
lods
inc
out
mov
daa
cmp
int3
test
inc
mov
adc
adc
out
jge
test
lret
and
insb
inc
inc
sbb
stc
push
dec
out
sti
stos
dec
sarb
dec
gs
mov
imul
pop
mov
xchg
pushf
inc
scas
jmp
jnp
dec
pop
fldenv
imul
push
call
mov
sub
fildll
lcall
in
jns
lcall
and
mov
insl
rolb
fdiv
das
push
jo
jge
cmp
adc
add
or
jmp
pushf
cld
nop
iret
ss
pop
fmull
enter
adc
jo
insl
mov
std
dec
mov
inc
stc
and
xor
nop
imul
dec
cmp
mov
push
mov
jge
sbb
fdivr
pop
pop
add
jo
lods
sti
repz
iret
popa
push
xchg
adc
leave
jne
jle
in
nop
cmp
push
outsb
sbb
and
cmp
dec
in
lcall
cmpsb
movb
leave
in
cli
out
xchg
or
push
ja
scas
mov
jl
jge
rcrl
sbb
loop
cmp
incl
xlat
xchg
dec
and
and
sub
and
test
popa
add
cmpsb
add
mov
fldcw
lds
mov
mov
fwait
rcrl
cmpb
xchg
mov
or
push
push
push
cwtl
dec
adc
push
imul
es
inc
lahf
jae
inc
insb
mov
and
mov
out
test
and
lret
jnp
int3
nop
fdivl
lret
js
shlb
xor
xor
jne
mov
xchg
xchg
sbbl
jecxz
push
cmp
push
xor
fstl
mov
or
xchg
lret
pop
cli
stos
jmp
sub
das
mov
fwait
sub
mov
push
mov
imulb
ljmp
insb
mov
jge
and
jbe
pushf
scas
sub
aad
iret
and
sbb
fisttps
pushf
add
cmp
and
fisttpl
rolb
fcmovne
aad
out
xchg
jae
loop
cmp
xchg
sub
loop
sub
jo
lret
add
test
pop
clc
dec
leave
cwtl
mov
imul
sbb
js
mov
call
sbb
addr16
adc
xchg
mov
pop
cmpsl
ds
aam
cmc
inc
add
cmp
jp
dec
and
jns
cmp
hlt
push
mov
adc
ss
or
lods
outsl
jb
mov
sbb
jb
std
aaa
fldcw
shrb
add
jnp
ret
mov
mov
insl
out
push
gs
mov
inc
outsb
imul
add
push
xchg
cld
sahf
int3
jo
or
lret
mov
push
dec
test
dec
dec
outsb
dec
mov
jmp
into
inc
mov
into
shrl
bound
push
ret
ljmp
xchg
jl
enter
cmpsl
bound
dec
stos
out
loope
or
movsl
ljmp
cmp
push
push
or
cltd
out
mov
adc
mov
or
push
xchg
pop
dec
les
dec
loope
dec
lahf
add
jmp
mov
pusha
sti
pusha
push
mov
and
dec
je
nop
add
clc
xor
bound
mov
push
push
push
sti
sti
shrb
int3
sub
fcoms
or
mov
cmp
jecxz
cmp
mov
xchg
ja
push
test
iret
fnstcw
roll
pushf
cmpsb
sbb
mov
xchg
mov
je
int
cvtps2pd
push
xchg
pop
mov
in
inc
lds
mov
or
push
cmp
out
in
rclb
cmp
add
cli
sub
cwtl
push
or
ror
inc
idivl
fidivrl
mov
jle
aad
es
fnstsw
rorb
lret
adc
shl
bnd
dec
xor
stos
inc
sbb
lret
sbb
jl
jl
dec
sub
mov
xor
cmp
cmpsb
std
pop
jbe
repz
mov
push
xchg
cmp
fcomps
out
orb
cmp
jbe
push
mov
outsl
push
ss
jp
mov
or
pop
jecxz
adc
mov
enter
jne
stc
lret
inc
cmp
push
outsb
addr16
xorl
adc
aad
sbb
mov
mov
or
sbb
xchg
icebp
xchg
nop
stos
repnz
mov
xchg
jge
push
and
jmp
fwait
pop
push
lahf
imul
sahf
and
xchg
jecxz
mov
or
xchg
jle
dec
daa
retw
lods
lret
stos
cmpsl
mov
fisubrs
aas
mov
sub
cmpsb
adc
fsubrl
scas
xchg
pop
pop
cmpsl
sub
clc
dec
xchg
adc
and
xchg
sub
dec
pushf
jl
adc
and
lcall
repnz
push
shlb
or
mov
or
lock
das
pusha
int
push
sbb
les
and
push
loope
xchg
adc
jecxz
cmc
sbb
mov
xchg
dec
xor
repz
xchg
mov
and
mov
sub
ja
out
ret
fwait
xor
push
int
xor
xor
mov
and
shl
jne
sti
and
out
stc
addl
shl
inc
add
pop
fidivs
pushf
lods
arpl
pop
xchg
iret
jne
sbb
jp
lret
cs
fnstsw
in
int
cli
mov
xchg
and
out
and
fstpt
aam
stc
inc
jecxz
jmp
sbb
pop
cmc
mov
and
stos
fiaddl
rcrb
inc
rcl
xchg
insb
jne
cmpsb
lret
jg
dec
in
mov
cmp
xor
xchg
lahf
sbbb
sub
xchg
lret
xchg
fmull
xor
pop
dec
cmc
mov
jge
arpl
cmp
cmpsl
int3
fimuls
mov
jnp
aad
outsb
loopne
fidivs
mov
ds
pop
cmp
add
jl
hlt
xchg
jle
es
xor
mov
stc
and
lods
mov
subb
mov
cmp
xchg
sbb
loope
xchg
imul
and
sbb
mov
mov
push
sbbl
mov
fincstp
or
cmp
ljmp
sti
mov
insl
add
cmp
xchg
loop
js
aad
dec
jge
add
hlt
adc
out
jp
popf
aas
sbb
outsw
pushf
popf
and
pop
jb
aas
add
dec
push
int
mov
adc
xchg
cld
add
adc
or
cmp
insl
sbb
loopne
in
adc
gs
lea
sti
inc
inc
loop
test
dec
pop
hlt
mov
outsb
aad
push
pop
call
push
pop
outsb
inc
xchg
std
xchg
sbb
hlt
arpl
jbe
dec
test
mov
adc
inc
ficompl
xchg
pop
int3
jns
outsl
mov
push
aas
adc
rol
xor
xchg
cltd
sub
ret
add
xor
and
clc
xchg
add
mov
cld
cwtl
icebp
movsl
stc
pop
icebp
insb
lret
popa
icebp
cmpsl
push
int3
ja
xchg
jle
cmp
jecxz
jge
mov
es
into
push
sub
ss
mov
add
push
test
fucomp
adc
or
lret
cmp
dec
cmp
push
lds
shrd
xor
add
mov
int
push
adc
arpl
aas
dec
sbb
dec
mov
sub
ss
leave
daa
ret
pop
push
fwait
and
int3
cmp
popa
insb
sub
das
pop
dec
mov
pop
inc
and
aam
mov
or
mov
fucomp
and
stos
add
push
inc
fldl
sub
insb
pop
xor
loope
xlat
icebp
or
xor
bound
sbb
lock
fwait
mov
mov
stos
push
rorb
push
cmpsb
cmp
data16
sub
mov
shrl
xor
loop
or
test
out
xchg
add
cli
adc
and
cwtl
ja
jno
mov
testl
cmp
mov
or
cld
into
mov
test
mov
pop
sahf
dec
xor
or
or
lods
insl
jns
cmpsl
test
xchg
lods
push
lds
sbb
sahf
fnstenv
sbb
js
jb
je
adc
lods
mov
add
lahf
xchg
mov
pop
cmp
mov
add
stc
test
fcomps
jge
push
ss
push
mov
inc
mov
jno
cmpsb
dec
loopne
push
dec
add
sbb
add
sub
adc
inc
inc
jo
jns
push
int3
xlat
pop
rcl
inc
mov
loopne
xchg
pop
imul
gs
mov
sbb
or
inc
inc
xchg
cmp
cs
shl
lock
mov
idivl
cmc
sub
adc
dec
and
mov
xchg
push
data16
call
lods
aaa
and
add
je
in
xchg
dec
push
test
inc
xor
jb
pop
cmc
imul
mov
cmp
inc
pusha
xchg
push
sbb
test
lret
mov
push
cmp
inc
dec
sbb
push
insb
or
sahf
jb
jg
cld
adc
mov
adc
cwtl
xchg
or
xchg
sub
inc
push
stos
cltd
or
fcmove
clc
imul
cld
lods
sbb
icebp
mov
stc
push
lret
mov
enter
nop
jo
adc
loop
adc
loope
orb
fsubrs
fistps
mov
jge
jo
clc
dec
in
jecxz
rcr
mov
popa
outsb
inc
push
adc
mov
push
scas
movsb
out
cmpsl
and
add
add
adc
fcmovnb
in
jbe
hlt
mov
push
jnp
ljmp
lock
shlb
stos
mov
xchg
push
push
test
mov
xor
xor
jne
xchg
scas
bound
dec
aaa
push
inc
jecxz
pusha
xor
sbb
mov
xchg
mov
jnp
cmc
push
lods
std
outsb
inc
mov
pop
sub
add
xor
mov
xchg
out
adc
ljmp
gs
add
idivl
pop
sub
mov
jno
pop
inc
inc
xor
cmp
pop
stc
and
sbb
js
gs
addb
movhps
shll
clc
xor
sbb
adc
pop
cs
or
mov
and
cmpsl
xor
xchg
cmpl
xchg
call
add
sti
mov
jp
sbb
and
sbb
push
jns
mov
stos
icebp
test
push
les
scas
xchg
imul
mov
or
mov
shld
das
fpatan
or
lods
popf
xchg
ljmp
jae
add
lcall
test
test
rorb
jne
push
pop
dec
aad
cmc
push
cmpsl
mov
es
cmpl
sbb
in
mov
insb
stos
fidivrs
ljmp
mov
pop
pop
push
dec
add
jo
daa
in
retw
jp
scas
je
loope
movsb
dec
xor
scas
pop
pop
dec
out
fdivs
arpl
in
popa
pop
repnz
or
mov
sbb
ds
jo
mov
es
push
orl
mov
sub
sbb
fsubs
ss
inc
aas
je
pop
into
sahf
aam
in
jo
push
dec
xlat
xor
sahf
ss
xchg
mov
xlat
clc
pop
ret
cmp
repnz
mov
mov
dec
ljmp
sub
dec
xchg
pop
sub
add
fucom
cmpsl
mov
pop
pop
and
dec
cmp
loopne
ret
xorl
dec
pop
jg
push
and
jl
bound
adc
push
sbb
pop
sti
jo
std
cltd
xor
cwtl
push
nop
daa
push
int
xor
jp
mov
xchg
aam
mov
push
jnp
jp
fbstp
jle
mov
in
add
out
or
sbb
loopne
jo
adc
cmpsl
addr16
xor
inc
ret
cwtl
sub
loop
and
aaa
aad
into
push
pop
rolb
lds
jg
or
pop
fstpl
xchg
push
xchg
jno
roll
test
hlt
arpl
movsb
ret
or
pop
popf
push
dec
mov
fucomi
arpl
xor
pop
aaa
rcll
ja
sub
lods
fiaddl
test
inc
lcall
dec
mov
aaa
or
jnp
push
insl
rcr
pop
push
lret
pop
in
push
sbb
and
gs
icebp
lret
mov
cmc
enter
in
in
std
push
add
add
testl
dec
and
cltd
xchg
jnp
dec
mov
add
mov
shlb
add
in
loopne
ja
dec
push
int
push
mov
stc
lods
jmp
movsl
cmp
xchg
out
ret
xorl
imul
lret
xor
int3
sbb
mov
pusha
push
mov
in
sbb
mov
adc
push
xchg
sti
xchg
add
leave
xlat
cmp
pop
push
sbb
adc
daa
mov
loopne
ficoml
loopne
lahf
jne
jmp
loopne
mov
mov
xchg
adc
push
and
mov
test
addr16
jmp
fwait
inc
aad
test
mov
pop
pop
or
mov
insl
xchg
mov
js
xchg
out
mov
ret
add
sub
push
and
push
or
add
lea
jmp
stos
jbe
fdivrs
push
add
xlat
repz
out
ds
or
and
pop
add
addr16
test
por
test
push
cs
and
pop
or
leavew
clc
cli
sahf
xor
mov
or
cmp
mov
sub
nop
push
mov
movsl
std
cmpsl
push
push
out
adc
mov
out
cld
stc
or
ret
rclb
add
mov
xchg
cwtl
pop
mov
jo
out
scas
lea
push
movsb
cmp
pop
in
ljmp
out
ret
fildll
jle
scas
lahf
sub
mov
jno
mov
add
lret
std
mov
jmp
shlb
mov
xor
lcall
sbb
gs
adc
frstor
pop
xor
sub
je
add
in
sbb
pop
jns
aaa
fisubl
js
add
inc
mov
pop
int3
mov
mov
pop
sub
fdiv
ljmp
iret
das
es
mov
cmp
jp
sub
rcll
jp
adc
shrl
les
insb
out
cld
push
or
or
or
adc
dec
lcall
jne
sbb
cmp
out
jns
ret
out
lds
addr16
xchg
outsl
jbe
add
mov
dec
repnz
jmp
mov
add
imul
fcomps
jo
dec
jmp
movsl
push
clc
mov
sbb
cltd
ja
pop
sahf
push
sbb
dec
aaa
and
or
imull
cmp
or
fists
mov
cmp
push
jmp
icebp
arpl
mov
int
push
pushl
add
mov
mov
outsl
mul
hlt
das
es
dec
shll
enter
cwtl
dec
pop
lret
data16
pop
dec
sbb
in
std
pop
cmp
adc
jnp
cld
mov
xor
outsl
inc
push
ljmp
repz
and
jle
call
cltd
push
push
fstp
jmp
or
in
in
and
ds
xchg
sbb
xorl
vphsubbw
push
xchg
dec
fidivrl
rorb
adcl
aas
insl
pop
adc
data16
clc
sbb
mov
cmp
mov
fs
pop
inc
in
jne
lret
pop
sub
mov
or
sub
out
adcl
idivl
fwait
mov
jns
push
mov
ja
push
mov
loopne
lds
clc
jnp
add
xor
cwtl
stos
push
dec
add
lahf
out
leave
movsl
cld
jge
insl
add
sbb
ret
jle
repz
dec
bound
mov
adc
or
push
imul
imul
mov
mov
lcall
cmpsb
inc
cmp
jge
sbb
mov
scas
in
sbb
add
mov
outsb
cmp
insl
popa
movsl
cmp
nop
loopne
or
or
lock
lret
xchg
test
push
sub
pop
mov
cmpsb
in
push
lods
loope
mov
fdivrs
pop
push
xchg
jae
pop
cmpsl
mov
dec
iret
jl
jp
dec
in
repz
push
mov
push
adc
test
xchg
xchg
test
fildll
and
movsb
fsubrs
scas
dec
stos
inc
sub
fcmove
xchg
xor
push
pop
sahf
cmp
and
push
and
lock
dec
mov
inc
negb
and
push
inc
enter
and
jnp
push
movsl
std
adc
je
jge
jae
lock
imul
mov
sbb
out
inc
fcoms
cmp
lret
insl
jg
sub
adc
cs
xchg
dec
repnz
mov
aam
loope
push
imul
xor
loop
shrl
dec
xchg
out
xchg
andb
jae
jb
mov
pop
pop
scas
push
loope
pop
popa
pop
repnz
pop
leave
imul
into
lock
sub
mov
push
ds
mov
shll
jle
xor
clc
jae
test
mov
dec
xchg
aas
ret
adc
jg
ja
push
mov
insl
stc
jns
inc
sbb
repz
rep
dec
mov
lret
add
jne
xor
mov
in
popf
mov
xchg
insl
rcrl
dec
mov
inc
inc
mov
into
adc
cmpsb
sbbb
pushf
xor
fstpt
sti
mov
das
push
stc
mov
pop
push
add
dec
add
mov
or
dec
push
fistpll
xor
push
xlat
xor
pushf
xchg
fdivl
fdivs
shl
ja
and
or
lods
sbb
cmp
sub
inc
pop
mov
push
lods
and
ljmp
inc
pop
in
aas
push
inc
push
add
mov
ja
int
jbe
sub
cltd
sub
pushf
push
cmpsl
jmp
mov
dec
loop
pop
fbstp
aaa
add
test
aam
popf
cmp
outsl
out
mov
mov
mov
jnp
xor
xlat
dec
aas
dec
jp
jmp
sub
push
inc
ret
ja
push
ss
scas
adcl
adc
and
mov
jg,pt
xchg
popa
adc
jmp
inc
test
ffreep
pop
adc
sub
loopw
sbb
mov
shrl
hlt
mov
dec
jnp
mov
es
dec
mov
neg
imulb
xor
pop
ds
testl
mov
dec
pop
or
mov
test
sbb
bound
iret
jmp
cmpsb
mov
inc
adc
dec
outsl
pop
cmp
divb
xchg
xchg
ret
in
out
fsubrl
movaps
mov
xlat
cmp
push
xor
popa
inc
clc
pop
mul
cmp
cmpsl
mov
aad
mov
movsb
push
inc
pop
dec
xor
sbb
sahf
data16
pop
mov
inc
mov
jmp
lock
pusha
jecxz
mov
stos
cld
jg
sub
jmp
pop
clc
popf
xchg
arpl
filds
std
je
adc
jl
fstl
scas
addr16
das
inc
lock
mov
cmp
fdivr
or
lods
loope
jne
int3
ficomps
lods
pop
mov
popa
roll
dec
movsl
and
mov
lods
jg
cmc
out
cmpsl
movsb
loop
and
sbb
jge
lods
inc
ficomps
test
add
loop
cmp
addb
sub
lret
es
jg
lret
add
lret
cmp
out
scas
pop
sbb
jecxz
adc
jno
sub
cltd
sbb
xchg
imul
out
add
fsubr
jle
iret
std
or
xor
dec
and
pop
mov
inc
pop
icebp
xor
imul
dec
add
lret
out
in
call
jb
ljmp
mov
lea
mov
pop
jbe
push
mov
fs
movsl
add
jb
adc
cmp
and
pop
add
or
insb
mov
sbb
xchg
pop
data16
inc
mov
int3
arpl
cmp
push
dec
dec
mov
dec
or
in
mov
dec
dec
xchg
cmpb
test
jo
add
repnz
pop
call
mov
jge
xor
or
dec
inc
mov
add
out
xchg
loope
call
out
out
sahf
call
lea
aaa
push
pop
xchg
test
scas
inc
pop
leave
add
sub
js
and
jge
adc
mov
cmp
cmp
out
notb
jmp
inc
test
enter
andb
push
add
out
mov
outsb
push
lock
cs
cmp
add
or
ja
add
pcmpgtb
aas
add
mov
cmp
mov
xlat
push
pop
icebp
nop
shl
outsl
sub
jno
bswap
inc
pop
or
mov
insb
sbb
and
popf
psubsb
lods
xchg
fs
cltd
int
int3
das
lods
scas
in
cmp
data16
mov
loop
les
daa
sbb
shll
add
sbb
adc
call
dec
fstpt
cmp
sub
add
pop
cmp
sub
je
enter
sbb
jb
and
rcrb
flds
pushl
out
push
out
dec
imul
loopne
popf
pop
lahf
ret
cmpl
push
dec
fists
es
mov
fs
enter
or
dec
popa
test
dec
in
cmpsb
cmp
add
fcompl
movsl
fdivp
pop
sahf
mov
adc
pop
mov
mov
xchg
xchg
push
notb
incl
mov
jbe
scas
iret
push
movd
sub
jmp
loop
mov
xchg
mov
mov
sbb
cmc
adc
sub
xchg
aas
sbb
pop
fwait
pop
fwait
out
imul
inc
jnp
pop
pop
lock
xlat
or
cmpsl
test
in
out
xorb
or
sbb
cmp
mov
dec
jae
dec
inc
or
aam
xchg
pop
shlb
mov
jo
ret
push
push
xor
dec
cli
sbb
ret
lret
jmp
mov
push
pushf
jp
jo
rorb
jg
iret
add
jbe
rcr
out
pop
pop
sti
mov
pusha
mov
cs
loopne
dec
icebp
cmpsb
adc
inc
pop
test
loopne
or
mov
push
inc
cmpsl
nop
sub
loop
icebp
leave
mov
hlt
jne
mov
mov
je
sub
xchg
lret
enter
arpl
push
or
add
repz
insb
lcall
icebp
xchg
aad
add
mov
jo
jge
sub
push
lock
lret
cld
xor
fwait
bound
jae
mov
pushf
int
dec
fisubs
cli
mov
and
lahf
jle
adc
push
pop
lahf
mov
cmp
jmp
jns
ss
pop
mov
ret
shlb
push
adc
mov
sub
lret
std
jb
fs
lock
outsl
lods
mov
cmp
nop
lret
lret
gs
pop
lock
into
jno
or
lret
cmp
push
jmp
ljmp
mull
or
xlat
mov
fistpl
orl
test
sbb
dec
push
cltd
adc
enter
lods
jae
pop
and
push
or
adc
in
xchg
push
xchg
loope
popf
adc
sub
popf
fs
hlt
xchg
gs
add
lods
test
sbb
clc
adc
cmp
repnz
cld
mov
and
pop
repz
fs
scas
adc
cs
add
mov
inc
imul
cmp
rol
adc
into
mov
mov
mov
pop
jecxz
adc
xchg
mov
lds
lds
shlb
fnsave
push
iret
out
data16
jo
push
jle
in
arpl
push
or
js
xor
lret
jmp
pop
aad
xchg
pop
lcall
mov
out
fcom
out
leave
or
lock
cmp
push
das
fdivrl
and
jne
lods
ret
mov
aad
xorl
fsubrp
push
js
mov
sub
jnp
or
pop
sub
cmpb
pop
mov
or
sbb
xor
fcmove
shr
decl
das
or
jno
popf
data16
popf
and
dec
jae
testb
pop
adc
xor
push
test
stos
mov
push
and
adc
fs
andb
out
clc
sub
push
into
sbb
sbb
xchg
ss
sub
aaa
mov
jne
cmp
add
dec
mov
push
or
inc
adc
xor
mov
inc
test
adc
or
fsubp
fwait
sbb
jle
es
fldenv
fldt
mov
sbb
pop
mov
loop
jp
pop
add
out
dec
js
jnp
repnz
repz
cli
xchg
push
or
std
adc
cmp
repz
cmp
cmpsb
inc
outsb
popf
mov
call
sahf
jns
push
or
popa
pop
and
push
mov
out
aaa
and
jnp
cmp
or
push
pop
or
push
lret
xchg
xchg
xlat
ljmp
xor
aam
cli
xor
sub
xlat
xor
push
jmp
addr16
hlt
testl
aam
xor
stos
jmp
popl
push
xor
and
movsl
test
inc
std
imul
mov
mov
xor
adc
jbe
push
and
repz
push
lock
jg
stos
xchg
jae
movl
jmp
push
push
sbb
es
jb
push
into
js
dec
notb
fsubrs
and
mov
adc
push
sbb
loop
xchg
cmp
jnp
push
cmp
mov
mov
xor
or
ror
push
ljmp
lock
jo
in
ja
mov
std
xchg
ljmp
lods
stos
aas
jmp
out
xor
sbb
outsb
rol
xchg
pop
int3
icebp
testb
pop
movsl
rorl
cmpsb
les
sti
add
loope
mov
push
xchg
sub
out
add
dec
bound
push
mov
adc
idivl
and
inc
xchg
xor
pop
mov
nop
jnp
and
aam
xchg
incb
mull
mov
mov
sti
xlat
mov
cmpsb
or
imul
jmp
test
popf
jmp
adc
add
jg
cmp
ret
mov
lcall
fwait
cmp
repz
and
cltd
test
aaa
mov
int3
dec
and
and
in
pop
mov
ret
dec
hlt
stos
sub
or
sbb
notl
sub
and
jecxz
adc
imul
push
push
cmc
dec
out
insl
cmp
ret
pushf
mov
inc
frstor
mov
aaa
aaa
cmpb
xor
clc
push
inc
int3
setg
mov
clc
xchg
dec
fidivs
adc
mov
iret
jecxz
scas
xor
lahf
sbb
daa
or
int
jl
out
lods
jns
rorl
sarb
test
nop
jae
lods
movsb
mov
push
leave
or
lods
push
cmp
and
and
test
pshufw
jb
in
adc
dec
pop
lahf
mov
xchg
mov
sub
insl
jl
lods
loopne
in
lret
and
shrl
sub
pop
sub
push
js
lea
push
and
insl
dec
pop
stos
xchg
or
movsl
and
imul
mov
inc
movsl
fstl
pop
mov
cmpsb
out
shl
jmp
out
cmp
sub
dec
cmp
mov
jl
fsts
addb
out
or
sub
push
jbe
mov
clc
icebp
adc
out
js
lcall
cmp
sbb
gs
ret
arpl
lock
stc
pop
jge
xchg
mov
jp
add
popa
clc
xor
sbbb
jg
push
aam
and
pop
mov
imul
cltd
cmpsb
or
adc
sbb
gs
xor
stc
test
inc
fs
test
jg
pusha
testl
push
adc
mov
inc
cmpsl
jns,pt
sbb
fdivs
scas
inc
cwtl
mov
int
xor
pop
adcl
mov
mov
push
fdivs
ret
das
push
push
jns
adc
cmp
jge
sub
push
rcrl
or
shlb
ret
inc
into
loope
aam
sbbl
jnp
xor
pop
stos
inc
lea
stos
inc
and
adc
pushw
in
and
pop
sbb
dec
dec
stc
sbb
push
sub
inc
mov
filds
dec
cmp
test
loop
mov
in
arpl
cmpsb
into
xchg
pop
mov
inc
adc
cli
adc
mov
and
add
dec
mov
cmpsb
cmp
nop
arpl
or
mov
xor
pop
icebp
dec
jp
xor
sarb
lcall
mov
iret
jne
bnd
and
mov
daa
push
jno
fwait
push
sbb
mov
add
jl
pop
mov
xor
xchg
mov
call
es
fstps
testb
xchg
xchg
xor
sbb
rsqrtps
or
push
cld
push
ja
push
and
nop
lcall
cmp
cli
mov
mov
shlb
sete
jge
xchg
popa
and
fmuls
or
pushf
subb
fs
dec
fbld
es
andl
inc
push
cltd
fwait
inc
pop
push
xchg
sbb
daa
ss
xor
or
popa
jp
pop
jb
and
mov
mov
xchg
inc
mov
sub
gs
jnp
pop
insb
sarl
adc
xchg
daa
jmp
test
add
xor
fwait
das
leave
xchg
cmpsl
ret
icebp
mov
ds
or
and
frstor
lock
dec
push
pop
lods
cmpsl
fisubrs
popa
test
pop
push
jbe
push
sub
cmp
test
cmp
insb
and
roll
dec
hlt
data16
mov
idivb
dec
lods
arpl
shrb
iret
pushf
je
jp
add
sahf
dec
push
insl
and
mov
xchg
mov
orl
mov
inc
mov
mov
ret
ror
jge
jb
dec
jp
jno
aaa
mov
test
nop
ret
sti
cwtl
push
jne
add
pop
jnp
sbb
jle
std
testb
cmovle
mov
sub
loope
lahf
popf
sbb
rorb
and
test
loopne
mov
lods
inc
sahf
xchg
mov
mov
insl
test
pusha
or
scas
shl
repz
stc
mov
sub
pop
push
out
pop
nop
mov
testb
data16
dec
and
pop
pop
push
out
xor
test
cld
sti
jne
mov
mov
imulb
test
in
pop
fcomps
fidivrl
jo
jp
adc
jo
adc
cmpsl
and
cmp
clc
cli
clc
popa
push
lods
je
and
sub
repz
in
in
out
fwait
jecxz
fistps
enter
sub
cmp
pop
dec
aaa
mov
fisttpl
and
pop
fisubrs
cmp
push
outsb
test
dec
add
sbb
cwtl
imul
ret
scas
push
hlt
fdivl
loop
sbb
cmp
push
pop
jo
scas
adc
loopne
clc
or
out
push
sub
int
dec
sub
sbb
cs
lret
add
jbe
int3
mov
data16
mov
hlt
out
or
repz
mov
mov
or
jecxz
int
xor
and
sub
fcompl
pop
xchg
mov
mov
lcall
out
out
cmpsl
pushf
push
in
jbe
das
ljmp
push
in
pop
in
xchg
push
inc
jle
test
inc
cli
pop
js
cli
mov
sar
push
lea
mov
es
ret
inc
into
adc
jae
stos
lds
mov
add
ja
pop
lret
pop
pop
mov
sbb
adc
ret
negb
adc
dec
mov
cld
mov
adc
jmp
mov
cli
insb
xchg
xor
sbb
aam
out
pop
mov
decb
fdivrs
dec
pop
aad
insl
nop
adcb
xchg
aas
dec
leave
js
add
loop
adc
test
add
ffree
mov
in
outsb
loopne
insb
cltd
cmpsl
pop
sbb
hlt
push
add
fs
stos
lods
push
sub
inc
sbbl
cmp
ljmp
adc
sbb
push
nop
jnp
mulb
dec
imul
les
mov
mov
cmpsl
out
pop
push
je
out
cmp
cmp
pop
push
dec
xor
clc
jae
jns
add
repnz
and
xor
sub
xor
add
lock
pop
xlat
or
pop
xor
sarl
aas
mov
imul
cwtl
jne
adc
sbb
call
std
shlb
fnsave
ja
mov
add
mov
scas
inc
dec
adc
lret
insb
int
sbb
jbe
cmp
outsb
add
pop
xor
cwtl
mov
mov
es
mov
xchg
imul
sbb
jecxz
and
movsb
or
mov
mov
inc
inc
pop
mov
inc
loopne
cmc
pop
mov
pop
aas
push
lods
in
mov
mov
adc
dec
jnp
fldcw
xchg
add
out
sub
mov
stc
cmp
fwait
and
and
mov
jbe
and
mov
std
imul
jb
int3
jg
sbb
test
mov
fisttps
or
loop
dec
add
mov
jne
fisubrs
pop
pop
mov
idivl
push
dec
cmpsl
jns
int3
stos
enter
mov
aad
scas
adc
sbb
xchg
int
push
push
jecxz
xor
xchg
and
pop
out
or
xchg
rolb
pop
cmc
in
dec
pop
aaa
lahf
in
in
cmp
xor
pop
test
sub
dec
fbld
or
xchg
cmp
inc
insl
mov
jl
cmpsl
adc
pop
xor
or
aas
xchg
sub
and
sbb
cmp
sub
sub
fwait
mov
jae
arpl
data16
adc
fs
jge
pop
mov
mov
sti
xchg
cld
rcrl
mov
insl
sbb
ret
pop
mov
pop
push
jecxz
notl
je
adc
jle
lcall
cltd
xor
imul
jb
push
jo
iret
insl
fstpl
andb
mov
xor
jo
rcll
and
mov
cmc
inc
push
sub
mov
ss
adc
nop
and
insl
or
mov
sbb
arpl
or
leave
jl
mov
dec
jge
test
push
xchg
push
xor
and
lret
cmpsl
sub
int3
pop
insl
sahf
mov
dec
les
jle
daa
adc
xor
or
mov
in
sbb
fwait
and
jne
imul
clc
jo
pop
push
sbb
jae
ror
loop
in
cltd
mov
pop
mov
sbb
nop
popa
clc
shl
rcr
xor
out
ljmp
mov
lcall
movsl
pop
insb
flds
cmp
push
and
push
imul
testb
fisttps
add
mov
mov
inc
cld
and
jno
and
jb
es
pop
push
adc
cmpsl
cmp
xchg
xchg
aad
shrl
jb
inc
push
xchg
out
push
mov
sbb
xchg
xor
pushf
loope
dec
mov
fsts
scas
test
push
pop
ficoml
fcmovu
xor
lds
rorl
out
sub
lods
jl
das
push
ja
sub
mov
and
fldl
sahf
push
jge
mov
outsl
ret
fisubrl
in
leave
and
loopne
sub
into
pop
xor
decb
jg
mov
cmp
cmpsl
mov
stc
sti
and
add
fsubl
push
nop
leave
int3
and
popf
push
in
dec
xlat
add
xlat
mov
imul
daa
cmp
pop
mov
lods
add
test
addr16
lods
mov
inc
mov
sub
lods
mov
call
sti
sbb
fwait
addr16
cs
aad
sbb
push
out
xchg
cmpsb
loop
nop
jge
or
das
lcall
or
sbb
jmp
out
xchg
or
mov
sub
fldt
pop
mov
cmp
adc
push
pop
in
shll
mov
pop
lret
arpl
sub
dec
decl
scas
add
push
enter
cmp
jns
xchg
sub
add
mov
sbbb
nop
mov
cmp
adc
rorb
mov
hlt
addr16
pop
jnp
dec
ret
adc
fs
jnp
push
pop
ljmp
cmpsl
scas
stc
cmp
sub
ret
pop
pop
int
xor
mov
pop
inc
aad
aas
pop
arpl
jns
cmp
pop
xchg
aaa
into
inc
add
push
mov
pop
stc
je
cmp
in
xlat
icebp
pushf
loop
xor
flds
stos
inc
in
out
xor
push
pop
dec
jo
dec
xchg
adc
mulb
insb
push
mov
iret
orb
cltd
dec
sarb
loope
aas
in
xor
cmp
fldl
xchg
push
xchg
dec
cmp
pushf
outsb
dec
pop
mov
imul
lret
push
jl
gs
movsl
mov
andb
lahf
pusha
out
movsb
inc
test
insl
ret
cmc
mov
stc
or
data16
push
xor
jne
push
or
in
jne
in
paddq
dec
mov
pop
loop
mov
or
add
aaa
fyl2xp1
into
sub
scas
mov
insl
jg
add
jo
pop
mov
jecxz
xor
stos
popf
mov
xor
sbb
sub
xchg
sub
outsl
fidivs
push
sbb
jbe
jnp
in
in
pop
push
push
insb
push
in
insb
in
jp
adc
xchg
iret
fcmovnb
xchg
or
add
cmp
pop
adc
dec
add
sbbl
cmp
and
xor
in
mov
mov
xchg
test
cmc
mov
lret
and
mov
inc
inc
decl
inc
arpl
pop
out
mov
xor
fldenv
xchg
xchg
jb
pop
inc
aam
or
lret
push
imul
mov
sti
sub
mov
push
or
add
sbb
inc
into
cmp
ljmp
adcb
xchg
dec
add
lods
nop
test
test
shr
int
fcomps
shl
daa
pusha
xor
cmp
pop
mov
dec
loope
mov
jl
lds
and
insb
cmpsl
data16
push
loopne
fidivs
pop
xchg
aas
jae
mov
fisttpll
imul
dec
fists
imul
es
or
stc
cmp
xor
sub
xor
pop
nop
push
dec
xlat
jne
loop
and
addl
gs
cld
xor
or
cwtl
sar
jno
dec
out
cmp
mov
leave
mov
mov
add
push
fsubr
xor
imul
lods
adc
aad
cmp
or
aaa
clc
jnp
arpl
outsl
xor
xor
aaa
in
sbb
dec
sbb
add
add
stc
popf
cld
pop
mov
adc
jmp
jne
es
mov
roll
adc
jae
mov
rcrb
add
adc
sbb
or
and
pop
xchg
pop
cmc
xlat
outsb
daa
jecxz
inc
movsl
mov
mov
stos
cltd
aam
shlb
sbb
scas
call
xchg
and
dec
hlt
scas
lock
pusha
out
xor
lods
dec
addl
and
mov
stos
je
xchg
dec
jl
clc
movsl
lret
cs
mov
repnz
out
sbb
pop
notb
and
popa
mov
and
sti
sub
outsl
js
shrb
xchg
outsb
push
aas
test
add
mov
cmp
rorb
jmp
icebp
mov
cli
cmp
repz
imul
out
cld
dec
andl
enter
movsb
xchg
inc
jecxz
push
xor
loop
out
fwait
test
int3
push
xor
jge
jl
sbb
xchg
sahf
or
ret
cli
dec
push
add
lret
lock
inc
adc
push
mov
ds
outsb
fildl
mov
scas
mov
popf
mov
ret
add
sbb
mov
pop
jnp
fucom
xchg
cmp
xor
mov
and
push
push
leave
jl
out
scas
cmp
add
or
les
mov
mov
cmp
push
mov
ss
or
imul
cmp
test
mov
mov
ja
jo
es
rorl
dec
cltd
pop
mov
add
push
xchg
cmc
stos
repnz
mov
jle
jb
jge
insl
jl
mov
jge
mov
lahf
js
mov
fcmovnb
sbb
inc
in
mov
idivb
fdiv
sbb
add
in
cld
in
mov
or
lret
mov
sub
pop
es
in
cmp
fidivrs
inc
push
or
insb
cli
int3
addr16
sub
std
ljmp
mov
imul
sub
pop
daa
in
and
pop
lods
or
rcl
les
adc
push
and
xchg
and
sbb
xchg
cmp
subb
xchg
imul
mov
jmp
push
and
aaa
ud2
fs
pop
call
outsb
dec
adc
add
dec
cld
stc
or
roll
dec
xor
xor
icebp
loope,pt
les
in
push
sub
ficompl
jmp
sub
xor
or
daa
cmp
xor
and
ja
dec
lods
in
sti
mov
inc
loopne
xorb
lock
pushf
xor
push
push
fsubl
mov
add
inc
mov
jg
lock
adc
pop
or
lret
scas
pop
cmovge
fwait
js
fwait
scas
adc
out
jbe
xchg
test
subb
je
dec
mov
cmp
in
dec
sub
add
loop
cmp
push
and
scas
push
daa
inc
fwait
stos
in
int
cltd
add
mov
jecxz
insl
jge
int3
sti
pop
or
rcl
cmpsb
movsb
jns
in
cs
mov
es
pop
push
nop
out
cmp
subl
ss
jge
or
inc
fildll
ret
jecxz
mov
sub
pop
mov
xchg
cwtl
std
pop
imul
lock
out
add
jb
add
jns
test
push
ljmp
iret
jne
mov
cld
push
imulb
lcall
and
pop
and
aad
movsb
mov
mov
popf
repnz
adc
shlb
rcll
push
loop
test
cs
mov
xor
cld
jecxz
in
mov
out
lds
std
inc
jmp
std
push
mov
dec
dec
mov
cltd
mov
fistps
cld
cmp
lock
repz
out
xchg
and
or
fmuls
cmp
jo
es
pop
movq
xchg
pop
push
pop
xlat
callw
insb
add
mov
pop
adc
mov
lods
sbb
xlat
mov
lret
push
and
xlat
inc
jbe
pop
aaa
fwait
in
jl
fisubs
or
icebp
dec
adc
push
or
ds
popa
aad
or
addb
xor
xchg
fcompl
loop
pop
enter
mov
repnz
loope
adc
cmp
push
es
pop
test
int3
pop
add
or
add
mov
cmp
sbb
xor
gs
mulb
mov
and
arpl
cwtl
push
cltd
or
cmp
lret
pusha
fcomps
pop
fildl
pushf
add
sub
xor
ljmp
push
push
popf
scas
xchg
data16
insl
lock
loop
mov
pop
add
test
cmp
in
mov
das
pop
jmp
movsb
push
sub
add
sub
dec
jle
rorb
push
int
xchg
and
adc
xor
daa
mov
iret
les
aad
pop
mov
add
xor
pop
js
dec
mov
shl
dec
in
jnp
jp
jmp
cmp
pusha
or
xchg
inc
inc
pop
mov
lods
add
mov
fadds
mov
xchg
pop
lock
jnp
xchg
iret
jecxz
lea
cmpsb
sub
lods
ljmp
xchg
arpl
fs
movsb
mov
adc
add
mov
dec
stos
xor
scas
sub
out
cltd
dec
ret
call
push
shl
arpl
pop
rcrb
leave
mov
xchg
mov
clc
rcrl
xor
and
lret
sbb
dec
mov
les
push
sarl
dec
push
adc
pop
ds
sahf
jne
imul
and
in
popf
dec
popl
xchg
mov
jmp
or
lahf
aad
ret
xchg
addr16
sahf
mov
lret
and
std
and
xchg
pop
insb
repnz
lret
sahf
sub
xchg
push
cmp
mov
mov
ret
rcrl
into
and
inc
add
xchg
jle
xor
xor
pop
pusha
repnz
cmpl
xchg
test
ds
mov
mov
mov
sub
cmp
in
adc
pop
bound
mov
sahf
movsb
sahf
mov
lcall
pop
push
jge
xor
add
sarb
addr16
push
out
xchg
xchg
pop
sub
lahf
data16
pop
cmp
adc
js
call
in
or
sarb
mov
push
loop
cli
mov
fstps
mov
inc
repz
lcall
icebp
pop
loopne
dec
adc
jae
addr16
xor
mov
aad
hlt
fwait
mov
fbstp
lods
mov
decb
lds
inc
xor
pop
jae
call
mov
xchg
xchg
das
imul
inc
fnsave
notl
in
xor
fidivrl
mov
or
js
and
jnp
xchg
hlt
mov
push
or
sub
lods
pop
mov
enter
loope
fnstcw
cmp
xchg
or
dec
daa
js
or
mov
fiadds
sub
xchg
pop
divb
ds
push
cmc
or
mov
pusha
or
or
jae
xchg
pop
orl
lds
inc
ljmp
xor
pop
mov
and
insb
iret
xor
cmc
xchg
lock
fnstcw
pop
jmp
repnz
xchg
xor
dec
jecxz
inc
or
lods
mov
clc
fwait
and
scas
xor
out
add
pop
pop
push
jne
mov
sub
inc
hlt
out
sub
into
cmp
in
jmp
andb
test
fxch
push
pop
push
int
push
ljmp
and
loope
lcall
cmp
add
xor
stos
xor
arpl
cmp
and
cmpsl
pop
cmpb
dec
dec
out
cmp
mov
sbb
fisubl
or
scas
xchg
add
mov
lcall
mov
sbb
loope
cld
dec
dec
xchg
xor
ja
pop
addr16
in
pop
outsl
xor
xor
lods
hlt
ss
pushf
adc
and
pop
arpl
mov
mov
jae
adc
mov
pop
dec
pop
idivb
push
pusha
sbb
ja
pop
mov
jo
lods
pop
pop
cmp
or
loop
ret
cmp
sub
add
rcr
inc
roll
icebp
scas
push
pop
inc
push
or
mov
and
movsb
sti
cmp
mov
mov
decl
mov
inc
fstpl
adc
sbb
xor
ja
inc
out
lods
jbe
negb
cld
push
in
mov
lcall
cmc
lds
jb
fsubr
jbe
sub
push
in
fsubs
sub
pop
adc
test
sbb
jb
mov
jmp
movzbl
sub
push
sbb
aas
push
jl
xchg
sub
xchg
push
popf
scas
ja
jp
iret
and
into
sbb
lea
sbb
dec
dec
sub
push
xchg
xchg
mov
xchg
push
or
or
inc
into
mov
leave
pop
adcb
test
les
mov
test
dec
loop
jp
mov
adc
xlat
ja
repz
out
mov
test
je
out
test
lea
mov
jno
push
aad
test
add
cmc
push
inc
fdivr
push
int3
insb
jecxz
fdivr
std
lods
cs
pop
dec
stos
das
shrb
mov
and
xor
or
cwtl
pop
sbb
jecxz
xor
cli
in
mov
data16
xchg
sbbl
pop
dec
or
xchg
jp
pop
out
shlb
or
xchg
jbe
dec
rcl
shll
mov
aam
outsb
add
sbb
mov
outsl
or
jb
lds
or
or
imul
push
cli
push
das
inc
fadd
mov
jb
sbb
xchg
std
xor
repz
cwtl
in
or
aaa
into
les
push
push
fdivrl
and
dec
xlat
lret
stos
ljmp
les
repnz
xor
mov
stc
adc
in
loop
jl
xlat
fsubs
addr16
xabort
jno
push
dec
cmpsl
cmp
and
xchg
jp
repnz
aas
xchg
mov
cs
sub
or
cltd
aaa
push
xor
mov
xor
arpl
dec
stos
addr16
fnstsw
mov
and
bound
in
mov
cmp
add
jae
push
sbb
push
inc
bound
stos
fadds
orl
lea
jns
push
jle
sbb
mov
jecxz
sbb
mov
roll
arpl
xchg
shll
cmp
inc
insl
rolb
add
mov
pusha
daa
repnz
cmp
adc
push
cmp
sbb
jnp
cmp
pushf
fs
xchg
add
test
mov
test
jno
dec
out
lret
mov
xchg
inc
pop
rclb
lahf
movsl
in
adc
add
xor
cld
xchg
data16
pop
inc
mov
mov
adc
push
clc
mov
mov
fadd
pop
and
adc
xchg
and
dec
cmpsl
mov
mov
movsl
out
daa
sahf
popa
lret
cmpsl
ret
jns
cmp
add
inc
xchg
std
stos
orb
cmp
test
aas
xchg
jne
jp
sbb
sbb
fnstsw
popa
lret
sub
mov
ret
daa
fwait
jle
in
mov
pop
mov
into
iret
and
into
dec
cmpsb
push
imul
popa
xor
sbb
mov
je
out
nop
cmp
jno
mov
xchg
add
sub
rcll
fcompl
mov
pop
hlt
xlat
mov
stc
mov
pop
xchg
sub
xor
push
int3
fidivs
xor
mov
lock
std
loopne
jae
push
cmpsb
lock
std
dec
or
push
js
add
jmp
faddl
and
or
in
ret
outsl
ret
jle
jp
dec
sub
mov
test
leave
add
push
insb
sub
push
in
lcall
cmp
or
je
sub
xchg
jecxz
mov
inc
xlat
mov
mov
xchg
pop
shr
mov
in
mov
inc
xor
inc
jecxz
mov
repz
dec
and
jno
test
adc
lret
sbb
movsl
ret
idivl
adc
mov
jmp
push
add
xchg
jno
fs
jp
fistps
not
dec
int3
lahf
jno
subl
stos
pop
popl
aaa
mov
or
sbb
adc
loopne
lods
and
mov
rolb
adc
jae
sbbb
xchg
xchg
sub
enter
and
sbb
jnp
into
loope
adc
shrb
rcrl
lods
aaa
dec
jmp
dec
out
push
sti
xchg
loope
xchg
sub
mov
push
mov
pop
adcb
jl
lret
jns
lds
out
movsl
cmp
mov
jle
or
add
cmp
lcall
sub
in
shrb
push
dec
pop
mov
pusha
xor
pop
dec
push
dec
cmp
loopne
rcrl
mov
jnp
rorl
or
or
sub
iret
sbb
aas
xchg
xchg
dec
mov
cmpsb
fwait
sbb
mov
or
cmp
xor
push
sub
inc
pop
inc
pop
dec
js
int3
arpl
sti
leave
sub
outsl
push
jp
dec
mov
inc
jae
push
sub
fcom
cltd
pop
jae
shll
mov
mov
out
in
inc
mov
ljmp
loop
jge
call
pop
xor
pop
fiaddl
rolb
cld
jecxz
fisttpl
stos
ss
loope
rcrl
add
faddl
xchg
pop
repnz
inc
cmp
in
pop
cmpsb
mov
jnp
insb
xchg
mov
push
sbb
gs
sub
dec
inc
or
jmp
hlt
add
in
push
cmpsb
jno
push
dec
rorl
pop
faddl
inc
jle
inc
inc
ljmp
jecxz
or
shl
pop
or
lods
inc
inc
dec
repnz
mov
fs
jo
mov
cltd
xor
push
inc
inc
lock
cmp
or
dec
mulb
movsb
out
add
pop
cmp
jecxz
dec
out
add
sti
dec
or
jbe
push
leave
xlat
mov
mov
pop
outsb
loopne
ret
mov
xchg
movsb
push
aad
add
and
test
cld
mov
test
xchg
sbb
mov
insl
cld
pop
filds
xchg
xchg
xchg
pop
mov
fcoml
mov
mov
fwait
clc
mov
or
pop
adc
call
or
add
sbb
in
or
outsb
mov
mov
je
mov
xlat
repz
fistl
sbbb
inc
cmp
outsl
push
call
aas
test
push
rorb
fucomp
inc
jno
gs
jae
inc
lret
test
jne
mov
adc
sahf
push
cltd
mov
outsb
lahf
mov
xor
jnp
mov
mov
xchg
scas
sub
rcrl
das
mov
int3
sub
push
cmp
stc
nop
mov
jge
dec
into
pop
xlat
call
jecxz
js
xchg
mov
dec
mov
mov
or
adc
xor
aas
lret
fsubrs
cmovne
scas
in
hlt
or
test
int
jg
idivb
cmp
loope
aas
push
jge
push
dec
in
mov
pop
xchg
call
pop
ficomps
imul
imul
inc
ret
addr16
adc
pop
mov
stos
pop
fwait
and
jp
inc
mov
std
int3
mov
mov
adc
negb
sbb
cmpsb
icebp
cmp
push
pop
inc
cmpxchg
xchg
daa
movsb
lcall
push
xchg
jg
add
repnz
xchg
push
mov
orl
jae
scas
or
jo
or
mov
and
inc
data16
jle
xlat
std
xchg
movl
jecxz
fistpll
mov
out
jae
in
mov
idivb
popf
lods
and
jecxz
mov
shlb
dec
lret
dec
mov
and
cmp
xor
cld
test
lret
notl
lea
cld
sbb
aad
stos
pop
sub
xor
pusha
push
das
sbb
cmp
movsb
push
orb
push
mov
pop
mov
xor
add
pop
enter
test
mov
call
adc
sub
push
ret
mov
push
subl
xor
bndstx
out
pusha
lret
jns
adc
mov
mov
jb
jle
mov
pop
addr16
and
test
mov
mov
outsb
jns
lahf
out
mov
ret
dec
in
loop
notl
insb
add
into
jns
mov
stc
mov
stc
and
mov
aam
xor
mov
arpl
mov
mov
rcl
out
ljmp
xchg
mov
negl
mov
pop
imul
dec
in
push
inc
jp
dec
pop
outsl
fwait
lahf
mov
insb
xchg
cld
sbb
pop
repnz
xchg
fwait
jns
mov
dec
outsb
jb
sbb
mov
daa
imul
mov
gs
add
xor
data16
shll
test
jl
push
sub
repnz
test
and
mov
mov
jb
int3
outsl
in
inc
push
testb
mov
jmp
inc
rcll
in
test
adc
orb
gs
fs
or
xchg
cmp
or
pop
pop
insl
dec
mov
dec
pusha
fcmovnu
outsl
loopne
push
call
and
jg
add
jle
xor
fcomps
test
mov
inc
clc
nop
pop
jae
int
ret
hlt
clc
fs
ret
adc
scas
add
hlt
pop
or
mov
out
fcmovbe
movsl
lret
rclb
adcb
daa
adc
mov
pushf
xchg
imul
repnz
pop
inc
jns
out
push
jmp
inc
popa
xchg
aas
loop
add
outsb
mov
lahf
test
in
dec
sbb
stos
inc
dec
cli
dec
in
push
fstpl
mov
inc
cmpsl
and
aaa
clc
shl
mov
out
ss
cmp
push
aad
jbe
in
or
mov
repnz
mov
clc
sub
inc
dec
pushf
fisubl
add
mov
adc
mov
pop
das
insl
rcll
jae
test
xchg
jno
adc
shrl
dec
shrl
pop
sbb
ds
out
pushf
xrelease
pushf
fs
ficoms
scas
push
add
sbb
ljmp
into
in
cli
or
imul
adc
les
fmul
int
lcall
in
pushf
cmp
aad
repnz
cltd
imul
idivl
mov
data16
inc
js
and
cltd
push
mov
pusha
movsl
sbb
jmp
sub
xor
dec
xor
sbb
xor
into
mov
sub
insb
jo
imul
xchg
imul
call
in
add
pop
xchg
test
leave
rorl
push
mov
mov
mov
adc
lods
jo
add
xor
dec
jnp
adc
rorb
push
mov
pop
cltd
iret
push
sbb
and
push
xor
adcl
mov
rolb
cmc
les
xchg
notb
cmp
or
dec
and
jecxz
cmp
ret
add
mov
fdivl
push
fsubl
mov
notl
hlt
mov
xchg
addr16
xchg
mov
adc
in
xor
and
pop
lcall
lcall
sub
ret
sub
fwait
dec
lahf
inc
loopne
es
inc
test
cmc
mov
mov
lahf
mov
mov
cmp
ret
pop
outsb
loope
fiaddl
test
dec
addr16
int
pop
mov
jae
inc
sti
cmp
outsb
jl
pushf
add
xor
aad
repz
mov
lods
mov
fbstp
mov
cmp
fwait
push
mov
in
or
in
cs
in
popl
fxam
sub
xchg
in
sub
dec
jp
sbbb
xchg
jecxz
sbb
je
push
xor
jecxz
out
int3
jg
cmp
sub
pop
mov
cmp
sbb
jg
lods
jo
sbb
fistps
or
out
mov
data16
sbb
js
iret
push
sahf
adc
push
inc
pop
sbb
inc
out
scas
xor
add
in
xorl
movsb
fsubrp
ret
ficomps
decl
fistl
push
fwait
scas
fimuls
lods
inc
jge
pop
ljmp
out
bound
jnp
int
call
nop
push
ret
cmpsl
xchg
pop
mov
or
xchg
arpl
cmp
dec
or
aam
sub
add
cmp
cmc
hlt
mov
cmp
cwtl
push
xchg
dec
push
mov
fisttpl
int
lds
ljmp
sarl
leave
or
sahf
mov
add
out
cmp
dec
sahf
mov
loop
lds
pop
test
inc
repnz
or
sub
es
repnz
cmpsb
sbb
pop
jno
mov
cmp
pop
adcb
das
ds
scas
sahf
add
out
stos
xchg
xchg
lock
arpl
or
cmc
test
jecxz
mov
fcomip
popa
mov
add
mov
dec
lock
dec
mov
aaa
testl
cmp
sub
mov
loopne
xor
in
cmp
jb
jnp
cmp
ret
xchg
mov
stc
mov
gs
mov
sub
mov
in
insl
jns
in
mov
lcall
scas
test
lds
shlb
scas
sbb
pop
adc
ss
cmc
icebp
push
fmulp
jg
jnp
xlat
or
roll
in
fisubl
lcall
cmp
jnp
lcall
mov
mov
lahf
negb
cmp
or
jns
xchg
dec
mov
or
mov
xor
push
pop
scas
inc
mov
mov
fldenv
ljmp
ljmp
call
enter
adc
das
lds
bound
jmp
aas
push
fcompl
pop
test
lods
jmp
lods
jg
in
vpackssdw
mov
sti
cmp
mov
js
loop
mov
out
add
in
cmpsl
add
clc
aas
movsb
add
sub
pop
daa
in
mov
out
inc
jle
fildll
mov
push
insl
pop
stos
push
push
fmul
pop
xchg
fisubl
ret
jbe
call
push
test
dec
push
cmc
pop
repz
test
sbb
jnp
adc
daa
ja
fst
movsb
xchg
jl
enter
mov
shlb
pop
fsubrl
push
test
add
in
pushf
and
rcr
mov
data16
xchg
mov
cwtl
sub
cmp
pop
repnz
inc
mov
xor
frstor
ja
sbb
dec
repnz
or
fsubl
mov
decl
and
shr
lock
push
sbb
icebp
das
cmp
aas
or
and
in
cld
lock
testl
push
or
sbb
sub
push
sbb
nop
or
fimull
test
and
notb
push
stos
lret
or
cmc
lods
inc
sub
dec
push
iret
out
xchg
mov
sbb
mov
pushl
fmuls
cltd
les
out
jmp
xchg
sub
aam
fisubs
xor
adc
inc
and
jp
mov
xchg
jno
adc
outsb
rorl
rclb
mov
das
xor
pop
bound
xchg
repnz
les
cmc
in
lods
jl
pop
fs
mov
mov
das
pop
insb
pop
test
fadd
push
addr16
imul
adc
jae
sub
sbb
dec
shl
dec
add
sbb
and
and
mov
sub
and
insb
push
or
hlt
and
sub
lret
test
std
sbb
jle
cs
cli
or
pop
mov
sti
and
je
push
cltd
ror
movd
mov
jo
jo
mov
rol
add
int
cwtl
xor
adc
inc
stos
sub
daa
sub
cmpsl
aas
gs
cld
push
inc
out
cwtl
enter
pop
repz
push
add
jnp
xchg
pop
bound
fidivrl
imul
pop
loope
xlat
outsb
pop
or
or
insb
ret
insb
aaa
jnp
dec
gs
pop
fisttpl
mov
jbe
aas
sbb
cmp
pusha
pop
add
jnp
jmp
aaa
outsb
into
call
lods
jo
lcall
jbe
mov
push
out
add
mov
stos
out
ljmp
shl
scas
mov
ds
gs
popf
mov
rol
repnz
loopne
loope
cmc
push
mov
jl
or
dec
loope
pop
decl
inc
stos
push
sahf
int
jle
jecxz
or
lahf
xchg
insl
inc
cmp
pop
test
mov
mov
cmpsl
xchg
push
adc
mov
lret
mov
and
or
sarb
inc
pop
mov
push
cmp
andl
xor
jne
fs
jbe
fisubrs
inc
psllq
adc
sub
shlb
aad
pusha
sbb
shlb
les
push
in
test
cs
inc
fadd
dec
xchg
addl
mov
pop
lea
push
imul
and
xchg
fadds
add
xor
pop
lock
sahf
ja
rorb
rcr
and
push
inc
push
add
mov
daa
cmp
mov
pusha
repnz
inc
pusha
mov
jge
sbbl
jo
pushf
push
in
into
lea
fidivrl
add
stos
aam
fdivl
jbe
xchg
aad
pop
mov
frstpm(287
xchg
popf
out
cmpsb
inc
mov
sub
jmp
xor
and
psraw
mov
adc
repnz
xor
or
mov
adc
jmp
je
mov
sahf
mov
or
jle
sub
adc
inc
inc
rorb
add
in
cmp
pop
das
repnz
and
pop
hlt
xor
jl
or
pop
fldenv
inc
xor
dec
adc
shl
lret
xlat
and
dec
and
add
test
insb
lock
lock
jecxz
add
xor
mov
in
or
push
inc
and
inc
or
clc
or
testl
icebp
out
pop
and
adc
xchg
shr
in
andl
dec
sub
mov
aaa
loope
lret
push
xor
or
fcomp
add
mov
and
fldl
cmpsb
out
dec
es
inc
scas
jo
aad
and
push
scas
test
iret
scas
sub
pusha
mov
xlat
fildl
or
and
mov
iret
push
std
jg
add
lods
loopne
daa
test
js
or
mov
ret
mov
scas
and
pop
pop
arpl
dec
jo
fwait
mov
data16
pop
sbb
ret
in
lods
mov
push
loope
inc
sahf
hlt
jae
ja
jg
sub
cli
jo
sub
mov
gs
fmul
leave
mov
mov
repnz
hlt
add
xor
test
inc
ljmp
pop
out
mov
fidivs
adc
cld
xchg
xor
inc
sbb
sbb
jecxz
mov
sbb
or
rcrb
mov
in
out
sub
cs
sbb
sbb
sbb
fsubs
jne
adc
add
popf
mov
dec
mov
es
dec
push
fldcw
pop
pop
rorb
xlat
jg
stc
cmp
popf
stc
popf
add
shr
inc
fdivs
pop
icebp
jge
or
ds
sub
or
xchg
mov
ljmp
mov
inc
xor
jbe
addr16
dec
push
push
xchg
enter
cmp
idivb
addb
adc
or
mov
cs
xor
aaa
nop
icebp
mov
aas
stos
inc
and
enter
push
mov
mov
or
mov
enter
lock
ljmp
cld
mov
lcall
gs
lods
arpl
fisubs
mov
sub
rcr
roll
incl
out
repnz
or
fists
or
out
imul
push
push
mov
out
adc
stos
sbb
xor
jnp
mov
lods
test
jns
int
xchg
mov
test
movsb
je
push
in
das
test
imul
mov
leave
sub
sbb
pusha
dec
lss
jg
mov
das
jns
popa
aam
leave
sbb
fnstsw
mov
xchg
cmp
pop
xor
push
paddq
ficomps
mov
ficompl
pop
dec
mov
mov
ss
rcll
test
ljmp
jno
call
ja
mov
ret
sbb
test
lahf
loope
ret
fisttpll
sbb
push
daa
sub
mov
xchg
push
sbbb
mov
or
push
dec
gs
fists
lods
cmc
jecxz
je
mov
out
add
lods
jmp
cltd
enter
xlat
daa
xchg
stos
imul
mov
loop
mov
sbb
dec
data16
cmp
pusha
cli
pop
cmp
inc
mov
dec
rclb
xchg
fst
sbb
cmc
mov
mov
out
or
push
out
push
outsb
fidivrl
sahf
lret
movsb
sti
push
call
and
mov
mov
loope
add
mov
jp
sub
repz
dec
dec
cs
rclb
pop
pop
cltd
popf
or
mov
adc
mov
iret
es
rclb
sub
jb
add
outsl
popa
subb
dec
and
ror
mov
xchg
adc
in
les
hlt
lret
insl
lahf
cmp
xchg
ja
or
mov
or
das
movsb
or
test
outsb
mov
and
xchg
sub
xchg
sahf
push
sahf
mov
mov
icebp
movsl
mov
subl
adc
pop
push
sbbl
push
mov
sub
out
jp
test
adc
outsb
int
js
stos
sti
inc
int3
xor
test
test
push
mov
jnp
cmc
jnp
popl
mov
inc
call
arpl
and
xor
xchg
sti
xor
enter
out
jle
pop
mov
add
xchg
sub
add
cmpsb
cmp
test
aas
movsb
push
bnd
sub
popf
cltd
sar
cmp
or
inc
fisubrs
jmp
mov
xor
addb
sub
mov
mov
in
mov
xorl
clc
xor
ja
jmp
sahf
movsl
and
push
test
mov
icebp
roll
mov
adc
mov
in
pop
fwait
aaa
or
jmp
jb
mov
pop
fstps
fcmove
outsb
sbbb
inc
fwait
sub
add
mov
dec
xchg
pushf
out
inc
pushf
movsl
out
sbb
in
xor
dec
rol
pop
stc
push
outsl
push
pushf
xchg
fucomip
std
lret
lret
fimuls
jnp
adc
push
iret
jns
stc
inc
push
mov
xor
cld
xor
das
pop
test
clc
imulb
mov
call
aad
lcall
inc
scas
hlt
mov
dec
pop
cld
pop
stos
subb
out
lods
and
sub
jg
iret
enter
add
add
mov
push
fwait
mov
addr16
xchg
insl
dec
or
xor
cmp
mov
cmp
aaa
into
jo
xchg
adc
push
adc
outsb
jne
loopne
in
stos
pop
mov
sub
mov
lret
or
fwait
xchg
aas
xchg
pop
add
popf
stc
or
mov
fdiv
or
xor
or
cs
cwtl
scas
daa
gs
or
inc
push
sbb
into
cmp
add
sub
mov
push
xor
jne
test
test
inc
dec
sub
rcrl
movsl
test
pushf
lods
and
pop
test
cmp
lock
xor
mov
push
inc
push
lret
push
sbb
cmc
inc
iret
xchg
dec
in
ficoms
in
popa
dec
adc
ret
fmulp
or
sbb
fisttpll
mov
push
jp
sub
push
push
popa
push
mov
das
loop
stc
jbe
and
push
ja
lret
rorl
xchg
cmp
xor
imul
int3
arpl
movsb
sub
cwtl
add
pop
push
je
adc
mov
jecxz
es
mov
loopne
inc
jnp
push
repnz
filds
pop
ja
push
lahf
add
fwait
dec
jae
cmpl
pop
dec
jmp
adc
inc
lret
out
sbbb
jbe
movsb
sbb
insl
popa
pop
push
pop
je
ret
or
dec
mov
shll
sbb
and
out
ss
test
jmp
test
cmp
repnz
fdivl
xorb
das
out
push
popa
cmp
mov
xchg
out
hlt
cmp
ret
in
lret
mov
mov
inc
fsub
mov
lahf
invd
ds
cmp
add
mov
mov
mov
popf
int3
sub
xchg
in
push
call
cmp
sbb
xchg
loopne
mov
jns
mov
testb
sub
mov
pop
sti
fcompl
outsl
cmc
mov
idivl
sti
and
xchg
inc
mov
mov
shrb
xchg
mov
jmp
outsl
mov
cmc
mov
stos
and
out
sbb
mov
xor
xor
jns
adc
pop
inc
push
mov
test
dec
iret
xchg
dec
xor
cli
mov
test
int3
arpl
insl
mov
mov
enter
testb
fcoml
in
cmp
jl
rolb
jg
jae
sbb
das
jbe
xor
int3
ljmp
and
data16
push
xorl
sar
inc
pop
mov
add
jne
push
inc
or
loopne
adc
pop
adc
jle
push
cmp
lea
mov
popa
and
jmp
mov
mov
add
pop
cld
cmpsl
inc
data16
out
jg
cmpsl
jp
mov
in
test
adc
test
pop
ret
jge
fdivs
stc
dec
popf
movsl
fistps
mov
cmpsl
or
add
mov
cld
push
fmul
int
negb
loope
push
add
jecxz
sbb
imul
movsl
cmp
cmp
outsb
je
inc
clc
pop
and
repz
loopne
sub
lahf
insl
sbb
mov
lods
ficomps
les
daa
lock
lods
sbb
add
out
cmp
push
cmc
sub
sti
es
xor
mov
cmp
loope
push
shr
sub
mov
cmc
ja
dec
loope
xchg
adc
jno
pop
mov
insl
orb
mov
adc
in
sbb
je
xchg
cltd
arpl
test
inc
xchg
jae
cmpb
mov
rcr
outsb
sbb
flds
jae
repz
popa
clc
lds
scas
jns
jg
push
pop
stos
aas
jecxz
jp
push
ss
sub
divb
in
test
mov
outsb
cltd
adc
xchg
movb
mov
pusha
ss
pop
rorb
and
adcl
inc
int
inc
test
or
xchg
cmpsl
mov
sahf
aaa
or
lds
insb
push
je
push
int
inc
repz
adc
stc
pop
cmp
inc
gs
push
movsl
ds
cmp
adc
pop
ficoml
jg
js
push
ljmp
and
mov
jp
mov
cmp
leave
xor
cmpsb
ds
mov
or
mov
push
pop
cmp
xchg
mov
cmpsb
xlat
lret
mov
add
scas
fidivl
cwtl
cmc
or
inc
jl
jae
stc
push
lods
int3
insb
sbb
inc
aas
js
xchg
lods
jno
fidivl
xchg
push
cwtl
push
pop
mov
fcmove
inc
push
xchg
stos
ficoms
loope
jo
sysret
lret
bound
psubd
jmp
int
mov
rcrb
aam
push
insl
push
mov
adc
mov
addr16
and
adc
fisttpll
sbb
and
cld
aad
shl
jne
je
pop
jae
and
mov
dec
mov
push
test
xchg
adc
add
pop
xchg
cmp
stc
xchg
mov
in
cmp
sahf
test
mov
pop
loopne
fwait
ret
xchg
out
cmpsl
inc
push
pop
pop
outsl
fucomip
mov
movsl
hlt
xor
enter
inc
mov
sbb
mov
pop
pop
xor
sub
and
data16
sbb
pusha
in
xor
add
arpl
sahf
cmp
out
push
add
shll
mov
cmp
push
cmp
mov
xchg
pop
mov
xor
out
mov
out
push
lods
pop
mov
out
fucomp
decb
lahf
test
subb
cmp
push
data16
dec
sub
outsb
insl
sub
sbb
adc
cs
mov
xchg
popa
add
ljmp
leave
incb
dec
popa
and
decl
xor
cmc
xchg
xchg
scas
inc
inc
cli
inc
inc
jmp
aaa
outsl
cwtl
test
insb
cli
pusha
cmpsb
adc
out
push
daa
lcall
inc
arpl
nop
push
outsb
scas
and
jl
decb
dec
shrb
rcl
nop
daa
fs
je
iret
lods
scas
xchg
push
lock
push
int3
mov
in
nop
push
inc
add
fwait
jbe
cmp
ficompl
xor
add
sahf
jle
xor
mov
ja
jp
insl
add
mov
mov
xchg
push
adc
mov
push
mov
cmpsl
xchg
and
mov
xor
hlt
aam
xor
hlt
mov
outsl
sarb
adc
test
cmc
ja
pop
je
xchg
jg
imul
or
cmp
arpl
std
pop
jae
dec
push
lods
mov
fistl
out
xchg
add
icebp
inc
out
push
mov
loope
ljmp
hlt
inc
fs
mov
orb
cmc
icebp
add
inc
sub
jno
fwait
jne
sahf
add
sbb
or
push
in
das
clc
inc
dec
out
pushf
mov
push
push
sbb
shlb
dec
cwtl
in
icebp
and
inc
sbb
mov
rorb
add
mov
cmp
push
cmpb
out
stos
push
aam
incb
inc
fdivrs
mov
clc
pop
stos
ret
push
shrb
sub
sbb
insb
and
xchg
mov
shr
or
loopne
ficompl
mov
fwait
xchg
jbe
mov
aas
mov
mov
inc
sbb
arpl
dec
push
push
mov
gs
fwait
pop
mov
loope
cltd
and
cmpsl
push
cmpsl
enter
loopne
mov
push
stc
and
imul
es
out
jge
mov
mov
inc
fisubrl
jb
fistl
lea
adc
mov
insb
adcb
xchg
pop
adc
cmp
mov
xor
rcr
adc
incb
and
push
out
repnz
int3
adc
mov
sub
fsubrs
xor
in
aas
in
lea
sbb
popf
fildl
movsb
sub
jo
push
enter
fdivrl
sub
or
jbe
jg
rcll
sub
lods
fistpll
fnstcw
fcomi
push
dec
sbb
iret
invd
jnp
add
es
clc
cmpl
loop
and
js
adc
add
movsl
pop
cmp
mov
xor
negl
mov
push
xlat
dec
add
outsl
mov
test
mov
xchg
mov
aas
xor
add
es
xchg
sti
stos
int
fnstcw
shll
or
jecxz
jo
adc
into
xchg
inc
mov
mov
popf
pop
cmp
sbb
and
or
inc
aam
jno
xchg
xlat
xchg
sub
or
mov
lods
incl
fsubp
clc
setns
repz
inc
jg
insb
insb
and
hlt
mov
mov
in
fmull
xlat
stos
or
mov
aad
mov
mov
jg
lock
imul
out
xor
and
push
nop
mov
push
sti
jne
int
mov
or
nop
sub
dec
test
jb
movsl
cmpsb
xchg
add
sbb
lret
add
std
cwtl
je
lahf
out
push
or
or
or
jmp
and
push
inc
rcll
and
xchg
js
push
inc
jecxz
pushf
int
clc
ja
and
cmc
mov
iret
lahf
lea
stos
sub
push
popa
xor
jecxz
repz
add
ljmp
aaa
sub
in
pop
out
fcoms
shlb
cmp
iret
cmp
pop
xchg
pop
scas
fmull
pop
cmp
lret
dec
and
int
aad
mov
mov
push
movsb
jecxz
in
icebp
mov
xlat
push
mov
mov
sub
lds
mov
and
lds
mov
jns
out
lcall
jbe
mov
jno
in
scas
je
fnstsw
fs
stos
sub
push
mov
dec
aad
es
mov
jae
mov
loope
aas
xchg
pop
dec
sbb
inc
cli
and
test
cmp
sbb
ja
or
adc
push
js
mov
and
std
cmpsb
repnz
sbb
mov
ficoms
jo
lods
add
mov
repz
imul
xlat
or
mov
jge
aad
cmp
cltd
pop
cmc
xchg
sub
pop
in
orl
je
cmpsb
add
shll
ret
data16
out
and
stos
mov
mov
sbb
jmp
and
jae
test
xchg
adc
fcmove
mov
sarl
lahf
xor
mov
xor
lods
mov
popa
lret
jnp
xchg
outsb
popa
inc
lcall
jns
lcall
imul
hlt
cmp
scas
mov
bound
shl
mov
sarb
rorl
xor
xor
not
fisubrl
rcl
xchg
mov
xor
add
or
popf
pop
sub
loope
jle
jmp
sbb
mov
mov
pop
in
cs
sbb
pop
addr16
rorb
mov
cltd
ret
cmpsb
lret
pop
in
lds
sub
sbb
push
xchg
ljmp
add
dec
cmp
mov
jnp
outsb
into
and
jp
jg
or
out
cmp
pusha
cmp
call
push
pop
sbb
fs
pop
pushf
ljmp
inc
sbb
sub
aad
pop
dec
repz
enter
sahf
pop
xchg
aam
lds
jb
jb
sbb
in
mov
mov
push
in
fsubr
push
push
cmp
lret
aad
push
mov
push
cmp
xchg
cld
divl
mov
jl
cmp
stos
shl
mov
mov
xchg
adc
popa
stos
inc
xchg
xlat
les
mov
mov
mov
ss
fimull
cs
fdivs
push
jl
push
out
push
ret
xchg
jbe
incl
insb
adc
inc
push
les
out
cmpsl
cmp
aas
push
xor
pop
repnz
icebp
mov
pop
imul
dec
cli
mov
out
lods
cmpsb
jl
and
dec
adc
mov
pop
insb
ljmp
lret
sub
fcmove
push
test
imul
or
jle
jmp
mov
loope
popf
and
cmp
cmpsb
or
jg
cmp
pop
cli
test
adc
in
into
icebp
xorb
in
push
cltd
cmp
sti
xor
js
adc
ret
lcall
jbe
mov
adc
lcall
loopne
mov
iret
cwtl
scas
ljmp
mov
pop
mov
fdivl
cmc
sub
movsb
popf
push
inc
movsb
aad
jp
mov
push
mov
stos
jmp
dec
jge
mov
mov
pusha
std
xchg
push
pop
test
mov
sbb
push
jge
mov
dec
xor
and
jecxz
int3
sahf
xor
bound
adc
push
iret
xor
cld
pop
sbb
push
fs
ret
push
xchg
adc
push
lock
jbe
add
and
inc
mov
lods
adcb
add
mov
xlat
or
adc
dec
insb
fwait
insb
sbb
out
xchg
femms
in
adc
lock
ja
push
mov
repz
sub
inc
sbb
cmp
test
adc
adc
xchg
movsb
ja
nop
mov
sub
mov
and
mov
inc
ret
dec
out
int3
jo
shl
les
sti
fwait
outsl
stos
xchg
push
mov
mov
add
xchg
inc
insl
push
repnz
sbb
add
mov
adc
outsb
xchg
push
ret
ja
subb
cmp
push
decl
subl
jno
int
cmpsl
mov
outsl
cmp
negl
adc
enter
test
xlat
outsl
xchg
repz
gs
stos
add
inc
cmp
pusha
inc
cmp
adc
call
mov
pop
arpl
mov
enter
dec
push
add
push
in
add
stos
push
sub
pop
imul
pop
imul
ss
ret
push
stos
push
push
push
xchg
ss
pop
cmp
cwtl
ds
cltd
dec
push
clc
ret
lea
stc
test
adc
inc
sbb
push
sahf
cmp
sti
repz
xor
cmpsb
xor
popf
inc
adc
enter
and
jb
mov
shrl
out
pushf
inc
push
mov
dec
xor
mov
push
scas
push
jbe
pop
mov
hlt
lret
add
pop
adc
mov
jl
leave
rcrb
push
dec
movsl
pop
mov
pop
ret
sub
hlt
xor
out
pop
push
jmp
and
cmp
mov
or
push
icebp
aaa
push
decb
cwtl
insb
scas
cmpsb
out
imul
dec
dec
in
mov
enter
pop
sub
les
pop
negb
jb
sbb
and
jno
ljmp
xchg
and
btc
aad
popa
jecxz
xchg
addr16
or
fiadds
inc
inc
xor
pushf
cli
xchg
movsl
cmp
add
ret
push
mov
push
lods
sarl
dec
arpl
testb
jbe
push
mov
out
js
popf
jge
sbb
outsb
int
mov
push
ljmp
jno
test
divb
arpl
jb
fmul
cwtl
daa
inc
add
cwtl
test
adc
or
jne
mov
icebp
or
xchg
fwait
mov
xlat
cmp
dec
lcall
lds
pop
jns
inc
mov
or
inc
pop
push
xor
lods
mov
test
data16
xor
jbe
pop
or
xchg
dec
mov
loope
jge
mov
mov
mov
sbbb
je
mov
sub
rclb
ret
enter
push
mov
push
call
mov
adc
das
icebp
mov
rcl
fadds
lret
cmpsl
enter
jp
lods
outsb
sahf
clc
imul
rcrb
and
insl
je
addb
xchg
sub
xlat
xchg
stos
jo
sub
fs
cmc
es
aaa
mov
fdivrl
sub
xchg
rcrb
mov
cmp
mov
es
lea
xchg
stc
push
xchg
ja
sbb
mov
fs
push
jmp
repnz
arpl
add
lods
outsb
test
push
into
sub
pop
pop
xlat
test
cs
add
xchg
pusha
pop
arpl
fcoml
adc
popf
sub
outsl
pop
mov
movsl
cmp
push
call
cmp
insl
sub
std
bound
xchg
pushf
cmp
jl
mov
and
add
ljmp
jb
mov
push
pop
notl
inc
cmp
pop
popf
fistps
insl
adc
mov
push
mov
mov
push
adc
ret
jl
scas
xor
mov
mov
ss
int3
or
mov
int
jno
push
inc
push
inc
dec
mov
mov
daa
shlb
adc
pop
je
lods
mov
cmp
imul
sti
mov
pop
sub
mov
pop
mov
fwait
adc
adc
inc
je
hlt
add
xor
inc
pop
mov
cmpps
shll
pusha
ds
push
add
jmp
dec
pop
xlat
or
inc
sar
fucomi
imul
out
pop
jb
les
or
mov
cld
insb
xchg
add
xlat
dec
inc
les
dec
push
cld
stos
push
ljmp
call
into
jo
sahf
cmp
mov
or
cltd
cltd
bound
inc
cmc
mov
testl
mov
call
shrl
or
push
mov
pop
inc
insb
pop
std
das
enter
add
in
in
xchg
mov
xchg
aas
enter
xlat
in
sub
jbe
lcall
inc
movsb
shrl
cmpsl
push
inc
out
add
xorb
push
nop
sarb
mov
jnp
mov
sbb
scas
adc
mov
push
insb
jle
sub
adc
inc
push
pop
pop
mov
cli
xchg
push
or
dec
cmp
sbb
stc
dec
enter
stos
cwtl
cltd
mov
cltd
mov
in
shrb
xchg
mov
aas
dec
mov
rorb
pop
fdivrs
fdivr
and
mov
push
call
into
push
sbb
in
pop
xchg
xchg
mov
cmc
rcr
ror
xor
mov
dec
xor
and
stc
push
hlt
adc
stos
mov
icebp
movsb
int3
pop
xchg
xchg
pop
testb
jge
sbb
in
insb
adc
mov
ss
xor
imulb
les
in
cmp
in
adc
xchg
dec
xor
leave
mov
adc
jmp
mov
fimull
movsb
inc
dec
popa
or
xor
addl
fs
nop
cs
cld
mov
int3
inc
push
jns
sbb
jge
data16
xchg
sbb
pop
mov
int3
in
fwait
sub
mov
jp
jg
ret
inc
cmp
push
dec
jae
mov
popf
pop
andl
out
dec
mov
inc
sbb
xor
cmc
sbb
scas
push
pop
js
leave
es
out
dec
xchg
xor
ret
xchg
das
jmp
in
mov
sbbl
xor
pop
pop
aam
adc
xor
pop
push
push
in
insb
mov
int3
aas
scas
mov
jmp
pop
in
stos
dec
lea
mov
fcoms
fcomps
loopne
xchg
popf
lret
push
movsl
in
dec
std
cltd
call
or
test
cmp
jno
push
fs
cld
subl
cmp
shll
gs
arpl
dec
pcmpgtb
dec
jl
fs
dec
sub
jle
call
cwtl
aad
ret
cmp
out
fidivl
sbb
jmp
aam
jnp
push
test
sub
div
jb
popa
movsb
out
jp
in
mov
sub
mov
mov
stos
repnz
rcrb
stos
add
mov
jge
aas
jl
jo
fwait
aas
xlat
mov
daa
jns
inc
push
subl
out
cltd
xchg
stc
into
sub
lcall
cmp
cmpsl
mov
mov
mov
pop
pop
xor
push
xor
jecxz
jl
push
xor
je
jge
fsts
push
or
sti
shrl
inc
imulb
icebp
insb
fwait
negl
xor
mov
mov
adc
jle
adc
popa
cs
mul
push
jecxz
inc
ret
push
iret
mov
nop
daa
mov
mov
std
lds
jno
fwait
pusha
imull
sbb
or
das
xlat
mov
or
test
repnz
shl
adc
call
xor
pop
cltd
push
loop
dec
jo
out
rcrb
inc
mov
pop
repz
add
add
jb
int
lea
subb
or
repnz
xor
es
and
imul
mov
push
mov
nop
cli
aad
aad
push
repz
aas
outsb
push
adc
inc
push
adc
arpl
inc
stos
addl
fdivl
dec
sbb
inc
subl
cmc
mov
or
test
mov
fcomps
ss
in
push
cwtl
adc
mov
adc
mov
das
ljmp
add
mov
or
mov
pop
mov
adc
jge
cmp
push
imul
mov
jae
lret
mov
mov
pop
dec
inc
push
xchg
mov
cmp
fildll
or
cvtpi2ps
mov
push
movzbl
ljmp
shr
mov
push
pop
jg
outsl
cmp
movsl
dec
cmp
mov
xor
dec
ficoms
xor
inc
hlt
fs
mov
push
cli
mov
mov
or
aad
and
std
ds
sub
dec
dec
cwtl
pop
idivb
subl
fstpt
test
fnstsw
mov
pop
push
pop
lods
push
repnz
out
adc
jno
jns
sbb
mov
jo
js
mov
inc
push
mov
ljmp
sbb
fsubrs
ret
stc
fnstcw
pop
lahf
aas
inc
test
dec
rcl
xchg
pop
cs
div
adc
and
xchg
sbb
arpl
repnz
sub
jo
cltd
imul
lods
add
fistpll
xlat
adc
in
movsb
aad
push
loopne
mulb
mov
repnz
lret
pop
les
test
or
or
imul
and
and
stc
int3
jle
ljmp
add
ss
pop
nop
jne
or
xchg
adc
inc
cmc
push
mov
push
lahf
push
loope,pn
dec
movl
fdivl
xor
mov
idivb
orb
dec
sbb
mov
ret
lret
int
mov
test
sbb
jns
pop
xchg
in
inc
mov
and
mov
cmpsb
scas
push
ljmp
out
xchg
sub
xor
sbb
test
and
and
mov
out
jmp
in
enter
or
sti
mov
sbb
and
push
xchg
ror
test
cmp
lcall
scas
push
mov
arpl
out
xchg
movsl
push
stos
push
push
out
inc
mov
ljmp
shl
fwait
xor
mov
push
xor
sahf
lret
mov
loopne
insl
xchg
cmp
xchg
xor
mov
or
fdiv
mov
xchg
divb
std
push
jo
push
jge
xchg
call
xor
das
pop
rcr
push
push
out
mov
jmp
sbb
aad
lcall
sub
pop
in
sbb
orl
push
fistl
or
out
mov
addb
sub
aaa
popa
mov
dec
arpl
push
jecxz
lds
jmp
mov
in
jns
mov
mov
repz
mov
rcrl
jl
mov
cmpsb
lar
and
push
lods
pop
jns
jbe
test
scas
pop
jae
je
xor
cli
idivb
or
in
xchg
fwait
jecxz
int
or
cmp
or
fdivrl
or
enter
imul
xor
jnp
pop
icebp
loop
and
inc
mov
stc
cmpsl
lods
outsl
cmpsl
popf
push
sbb
loop
imul
lcall
jmp
inc
ficompl
mov
pop
jb
stos
push
insb
fmull
xor
cmp
clc
sahf
rolb
adcl
out
sbb
movsb
xchg
mov
push
and
sub
test
not
pop
loopne
sbb
add
mov
adc
xchg
mov
subb
mov
push
jnp
aad
stos
loope,pt
insl
lea
cli
ja
sbb
jbe
dec
push
xchg
mov
jb
xchg
shlb
sbb
mov
xor
fpatan
shll
pop
cmp
mov
test
movsl
inc
in
insw
imul
test
xor
ja
sbb
mov
and
dec
xchg
jo
faddl
imul
lock
mov
rcrl
mov
sub
pop
cmp
in
pop
inc
cmp
dec
sub
cmp
repz
mov
sar
add
xor
fists
sti
lret
adc
add
pop
in
xor
sub
rclb
push
adc
shrb
cmc
dec
shlb
das
adcl
in
cs
pop
cmc
inc
sub
je
movsl
mov
mov
cmp
scas
push
subb
stos
rcll
pop
add
jecxz
dec
rcr
add
aaa
inc
dec
xchg
stos
cmp
and
and
xor
and
or
cmp
xchg
fpatan
les
mov
xchg
cld
es
mov
fdivr
push
std
inc
stos
aam
fidivrl
int3
xor
jo
cs
mov
xor
lock
insl
imul
push
out
xchg
jbe
in
shll
rorb
push
cltd
es
push
popf
into
subb
popf
pop
sarb
out
call
jl
sbb
jle
push
jno
xchg
fwait
xchg
shrl
rol
lds
popf
and
ret
shrl
lods
push
xchg
or
pop
xchg
stos
sub
jle
das
pop
imul
repnz
and
leave
or
sbb
add
jb
int
lcall
pop
lods
call
and
cwtl
je
cmpsl
aaa
xor
addr16
in
push
xor
pop
dec
and
movsl
int3
aas
mov
cmp
sahf
test
push
pop
mov
into
or
mov
aam
mov
or
dec
bound
popa
cltd
nop
test
lods
sub
sbb
mov
imul
mov
testl
stos
mov
sub
mov
repnz
fsts
lods
or
mov
or
test
pusha
lea
xchg
pop
popa
jmp
xor
orb
sbb
incb
jecxz
test
fprem1
sbbl
inc
sbbl
fsubs
adc
pop
dec
lods
fstpt
loope
mov
adc
dec
lret
mov
fcmovne
inc
fst
test
negl
mov
repz
loope
pop
adc
aas
subb
dec
jb
cli
xchg
icebp
adc
mov
dec
fcompl
mov
in
push
ljmp
imul
pushf
loope
xor
add
lahf
ss
popf
cmp
ljmp
push
and
pop
mov
xchg
sbb
daa
outsl
push
fwait
loope
mov
push
mov
test
popf
xor
and
dec
in
mov
sti
loopne
sahf
add
fs
call
cmpsl
mov
ret
arpl
lods
fcmovnbe
push
dec
cld
xor
inc
jmp
push
sbb
stos
inc
sbb
loopne
cmp
mov
dec
pop
pop
and
pop
in
jno
cld
mov
dec
scas
mov
insl
lret
jg
shrl
sahf
cmp
sbb
push
lahf
pop
sbb
mov
movsl
outsl
hlt
inc
xchg
mov
adc
dec
bound
mov
cld
cli
outsb
sub
ss
xor
adc
ret
xchg
ss
dec
int
add
addr16
in
test
daa
cmpsb
or
jb
movsl
imul
and
sarl
frstor
lret
movsl
sbb
and
into
and
inc
add
in
mov
sub
addr16
addb
cmpb
shlb
inc
fiadds
xorl
sarl
sbb
test
mov
mov
push
push
mov
or
pop
mov
xlat
sbb
xlat
or
popa
in
push
in
sbb
stos
out
fdivr
jp
scas
sbb
mov
std
jp
stos
jno
xor
int3
mov
dec
mov
fisubrl
jmp
or
dec
cmp
pushf
add
sbb
cmp
cmp
std
lods
cmp
inc
push
dec
shlb
inc
out
xor
pop
scas
pop
mov
mov
cmpsl
pop
mov
daa
enter
cmp
vshufps
test
popa
vaddsd
xchg
xchg
dec
mov
clc
mov
icebp
xchg
andl
adcb
ds
sub
or
call
or
xchg
cmp
into
mov
push
add
or
stos
add
pop
stos
mov
jbe
pop
loopne
test
pop
cmp
ret
js
fsubl
movsl
mov
rol
jg
lcall
adc
pop
pop
pop
jecxz
mov
out
inc
fucom
in
and
pop
gs
mov
addr16
aad
cmp
cmp
xchg
cmp
push
xor
cld
push
out
shll
sahf
cmpsb
xchg
sbb
mov
lret
xchg
mov
lret
xchg
imul
arpl
test
hlt
xor
lahf
and
inc
push
das
out
sarl
and
fbld
sub
rcll
lcall
and
xor
test
and
push
push
adc
mov
ja
cmpb
inc
out
pop
push
push
xchg
dec
xchg
sub
xchg
sub
orl
icebp
mov
addb
incl
idiv
sub
push
repnz
iret
push
inc
test
int3
inc
loopne
inc
out
inc
add
pop
push
cmp
jl
mov
pop
stos
lods
push
sbb
xchg
sahf
into
scas
mov
cmpsl
mov
insl
cwtl
lods
xchg
cli
pop
cmc
jle
adc
int
lcall
or
push
aas
movsl
loope
cli
in
xor
sbb
add
xlat
outsl
mov
mov
fxtract
push
sbb
dec
fidivs
sti
xchg
dec
mov
cltd
call
xchg
mov
cmp
push
test
adc
mov
pop
sar
idivl
add
sbb
int3
std
inc
mov
lds
das
mov
dec
lahf
jg
mov
cmp
xlat
hlt
jae
push
jp
dec
sub
xchg
mov
add
shlb
xchg
loop
inc
int3
cmpsl
idiv
imul
aam
xor
and
mov
aam
ficomps
xor
add
lods
adc
stc
cld
inc
pop
in
or
ds
out
inc
add
xchg
ds
int
cmp
push
adcb
xor
call
cs
ja
pop
leave
out
pusha
repz
adc
xchg
enter
mov
int3
stos
fldcw
jp
out
mov
add
push
dec
add
mov
orb
push
pop
mov
jno
lods
out
filds
lods
mov
jp
mov
inc
in
scas
push
filds
add
mov
orb
xor
sti
xchg
ja
nop
pop
sahf
cwtl
push
mov
pop
cmp
xchg
dec
jecxz
out
pop
inc
jnp
jle
loopne
sbb
mov
sbb
or
loop
add
push
dec
loope
test
imul
jle
jb
mov
out
xor
xor
bound
jbe
push
loope
popf
dec
sub
stos
cmp
dec
mov
scas
orb
add
jl
outsl
aam
outsl
push
jle
xor
out
lea
sub
or
jle
inc
adc
stos
enter
dec
sbb
shlb
shl
and
jnp
mov
cmp
pop
pop
mov
adc
mov
pop
mov
xor
mov
fs
in
sub
shr
push
cmc
xor
pop
inc
mov
fdivrl
mov
inc
pop
cmpb
aad
or
xor
sahf
mov
out
mov
add
lock
loopne
inc
insb
jle
xlat
in
jo
mov
cltd
loope
lods
add
loope
mov
sub
cmp
jne
mov
test
or
pop
fidivs
dec
mov
xchg
xchg
test
aam
lea
xchg
stos
stos
xor
cmp
xor
cld
jg
adc
aad
lret
cmp
fstpt
loop
ret
add
cs
jno
popa
dec
mov
outsb
xchg
dec
sti
xchg
fcoms
pop
insb
cmp
sbb
jb
lahf
stos
pop
ja
into
xchg
fwait
jbe
rcrb
je
jmp
lcall
jnp
xchg
in
jbe
push
mov
adc
or
push
mov
frstor
out
je
repz
mov
clc
cld
in
out
add
lahf
dec
imul
lods
mov
cltd
xor
and
mov
xchg
es
daa
mov
or
dec
stos
inc
jge
ja
pop
fimuls
inc
in
insb
xchg
mov
mov
addr16
jns
stos
shrl
in
out
in
push
jno
scas
dec
cmp
or
cmp
arpl
xchg
rorl
dec
mov
addr16
pushf
sub
sbb
std
pop
out
out
inc
jecxz
inc
and
adc
movaps
not
fsubrl
out
gs
mov
in
leave
idivb
outsl
inc
insb
dec
dec
les
lods
inc
sbb
arpl
lret
xchg
mov
push
stc
movsl
xor
pop
or
subb
aas
outsl
stos
in
hlt
lock
mov
sub
push
fwait
cmpsb
cmp
das
aam
ja
or
push
mov
stos
shrb
pop
lods
std
adc
imul
mov
jp
push
lea
rclb
mov
cld
cmp
mov
mov
enter
inc
jae
dec
pop
push
xlat
roll
pop
pop
cmp
sbb
pop
insl
out
xchg
push
sub
cmpsb
xor
lea
fstps
xor
fistps
xchg
mov
pop
test
std
shrl
aam
insb
add
push
sub
mov
fisubrl
outsl
jmp
into
pop
call
or
fidivl
aad
mov
iret
add
repnz
mov
cmpsl
jns
mov
mov
mov
shrl
ret
cmp
mov
add
mov
std
jecxz
jle
sbb
cmp
scas
adc
lcall
jecxz
iret
sub
sub
push
adc
mov
mov
cli
sbb
enter
dec
jmp
dec
dec
cmc
mov
mov
mov
mov
push
xor
dec
push
ss
push
test
pop
int
jmp
lea
ret
out
push
xchg
push
push
mov
ret
cltd
test
hlt
mov
int
les
sbb
adcl
push
sub
sub
aad
add
int
xor
or
loopne
stos
jo
fcmovne
push
cmc
jb
xchg
adc
pop
loope
sub
jle
gs
outsl
xor
push
add
mov
loope
pusha
dec
mov
fwait
push
sti
or
cld
loopne
movsb
sbbb
jne
inc
out
sbb
outsb
not
and
xchg
mov
or
cmp
das
xchg
adc
cmp
fwait
cmp
lcall
ret
mov
jmp
pop
adc
xchg
pop
aas
push
cmp
mov
cmp
mov
loopne
mov
push
mov
sub
sub
pop
out
pusha
aad
aad
sub
ret
adc
lods
ja
pop
inc
fldenv
into
mov
mov
sub
xorb
dec
pop
lea
mov
push
out
xchg
sbb
xchg
lcall
pop
cli
test
out
bound
xchg
fdivrs
insl
test
outsl
lret
mov
xchg
mov
insl
in
pop
icebp
push
cld
jb
sbb
int
and
jecxz
jge
cmpsl
push
pop
push
test
jg
dec
aaa
jbe
jg
add
cmpsl
outsb
mov
mov
fnsave
popa
loope
pushf
mov
fwait
jbe
shll
mov
fiadds
sub
vcmpps
pop
mov
mov
lods
cli
or
scas
in
mov
aad
fwait
push
sub
fcompl
shll
add
xor
outsl
push
mov
loope
xor
xor
ds
adc
xor
xchg
pop
lock
jne
push
sub
push
cmp
jl
hlt
push
sbbb
jnp
loope
pop
cmp
inc
out
in
fcomi
cli
jmp
sar
scas
ret
xlat
sahf
hlt
xchg
dec
mov
mov
outsl
xchg
sub
mull
icebp
int
dec
pop
out
push
and
mov
fldcw
dec
bound
adc
outsb
sarb
inc
lahf
xchg
add
popa
mov
fisubs
mov
pop
pop
pop
cmp
fdivrs
adc
xor
sti
pop
nop
cli
lret
cmp
cli
test
lds
add
xor
lret
hlt
xchg
mov
mov
dec
mov
pop
dec
in
fwait
shll
pop
add
fimuls
inc
mov
fbld
movsl
mov
data16
popf
pop
inc
fmull
test
jecxz
add
pop
push
mov
and
lcall
in
dec
ss
jg
inc
insl
adc
addl
scas
xor
dec
icebp
int3
clc
or
pop
out
mov
lret
pop
or
jo
push
insl
jae
push
push
stc
and
cmp
stos
inc
jae
jl
mov
pop
imul
jae
xchg
dec
test
inc
fstl
out
js
in
aaa
add
scas
fs
repnz
mov
mov
in
push
leave
xor
out
inc
lea
dec
dec
daa
dec
or
mov
lods
pop
mov
bound
std
arpl
mov
cli
dec
mov
cmp
add
dec
cmc
insl
rclb
arpl
jae
mov
leave
cmp
mov
shrb
testl
ja
mov
cmp
cmp
lahf
fstps
push
or
shrb
push
cld
xchg
in
or
adc
add
xchg
and
call
into
jne
cmp
in
sub
ljmp
jb
ja
sti
inc
mov
fidivs
adc
stos
jne
or
jo
pop
adcl
mov
push
shrl
leave
pusha
or
subb
pushf
pop
sub
fstl
shl
push
and
push
pop
shll
loope
daa
outsl
and
cwtl
and
dec
mov
stos
mov
cmp
loop
jae
mov
lock
fwait
cli
mov
adc
sti
push
cld
in
xor
xchg
sub
clc
xchg
fwait
mov
out
mov
popa
cmp
sahf
aas
add
xor
mov
xlat
sub
lahf
mov
push
scas
inc
mov
mov
inc
insb
sbb
push
xlat
ss
jo
sbb
xchg
xchg
push
sahf
dec
cmpsb
pop
cs
jle
call
mov
jg
pop
fwait
repnz
sti
sub
repz
adc
xor
sbb
aaa
jecxz
push
cltd
nop
sub
aam
mov
mov
cs
jg
xchg
mov
cltd
jae
out
popa
mov
es
xchg
ljmp
cmp
cli
scas
push
cmp
jg
dec
mov
je
rcrb
add
sbbl
or
pop
pop
jl
jge
pop
outsb
hlt
pop
jno
rcrb
fstps
mov
out
mov
out
xchg
fbstp
stos
inc
mov
orl
push
pop
jae
test
inc
lods
mov
push
jae
hlt
adc
subb
xor
pop
in
into
aas
mov
mov
xchg
js
out
bound
popf
sub
fstpt
arpl
push
sbb
std
imul
fcmovnb
mov
push
dec
inc
cmp
call
test
mov
fiaddl
push
fnstsw
std
mov
sub
and
mov
fcmovu
cwtl
or
test
dec
movsl
movhps
jl
mov
mov
cltd
xor
repz
cmp
inc
sbb
mov
stc
mov
or
mov
xchg
and
icebp
sbb
mov
jecxz
call
sbb
sub
xorl
enter
fsubrs
gs
arpl
es
push
imulb
sbb
fdivrs
jp
ss
inc
test
or
enter
jge
mov
inc
icebp
mov
lea
into
fs
cwtl
or
in
popa
mov
dec
out
addl
jge
xor
mov
adc
lcall
sbb
push
icebp
dec
pop
rcrb
pop
repz
dec
dec
xchg
cmp
pop
cmpsl
push
push
movsb
test
pop
and
outsb
aad
idivb
loopw
or
dec
and
cmp
fadds
adc
sti
xchg
or
stc
nop
loop
cld
repz
test
loope
fxch
xor
sahf
push
mov
aam
shll
stos
sbb
xchg
cmp
push
dec
adc
adcb
pop
cmp
inc
mov
or
scas
clc
sahf
andl
aas
adc
ljmp
dec
jg
rcrb
fdivs
or
mov
rclb
cmp
jb
xchg
stc
adcl
idivb
imul
xchg
mov
lds
xor
orb
lahf
push
xchg
push
testl
xchg
hlt
push
mov
test
fldenv
imul
adc
mov
test
push
push
dec
sahf
or
test
jns
pushf
insl
push
pop
repz
mov
call
xor
adcl
fmul
pusha
in
out
outsb
push
xlat
ret
fwait
add
mul
push
or
ret
icebp
mov
lods
lock
ror
xor
add
pop
jbe
test
paddb
pop
lods
push
fs
addr16
or
sahf
jne
mov
andl
test
cli
add
imul
ret
and
lahf
push
xchg
aaa
dec
and
and
jae
add
ja
aas
add
mov
adc
cwtl
das
lods
sbb
pop
and
and
inc
scas
mov
dec
mov
dec
sbb
mov
in
test
cmp
push
cmp
jne
movsb
loop
dec
out
loop,pt
cmp
adc
scas
hlt
push
and
mov
loope
mov
jns
shrb
lds
stc
push
mov
andb
mov
dec
dec
push
jmp
fs
ds
fcmovnu
add
adc
xchg
adc
arpl
loope
sbb
in
lret
add
jecxz
mov
inc
lret
xchg
fcomps
ror
ret
dec
fsubs
addr16
das
mov
adc
popa
mov
aam
pop
imul
aas
mov
sbb
sub
inc
imul
out
add
sbb
stos
insl
ja
cs
sbb
or
adc
rorl
in
add
cld
mov
rcrb
push
push
jae
mov
jns
fs
test
sarb
add
xor
loope
das
fdivrl
lds
xchg
mov
imul
repnz
cmc
adc
insb
adc
fwait
sbbb
lahf
out
cmp
and
xor
mov
cmpsb
scas
jp
loopne
mov
pop
add
lea
inc
jno
pusha
adc
out
cmp
push
in
ja
notb
push
jo
ljmp
xchg
add
sub
xor
adc
gs
mov
movsl
xchg
adc
mov
sahf
lods
pop
mov
aaa
mov
jle
scas
nop
mov
ret
shll
or
cmpl
sarl
shlb
sti
sbb
scas
imul
jno
cmp
sub
jno
ret
shlb
mov
sahf
mov
pop
fisubl
std
push
sti
pop
lock
pushf
test
fidivl
dec
pop
fwait
arpl
imul
popf
xor
xchg
enter
xchg
out
lock
xor
push
sbb
cmp
fdivp
fdiv
data16
mov
es
xchg
cwtl
loope
test
sbb
movsb
add
or
or
mov
sbb
rcrl
cmc
jl
and
daa
aam
jmp
mov
out
hlt
out
push
mov
pop
adc
movsl
and
cwtl
jg,pn
loop
xchg
push
jmp
fldl
xor
sahf
shl
cmp
mov
insb
movsb
mov
test
mov
pcmpeqb
push
mov
xchg
sbb
mov
ljmp
mov
pop
dec
fwait
mov
subb
xor
jg
add
xchg
dec
and
iret
xchg
add
jns
cwtl
sub
sbb
mov
inc
inc
cmp
or
xchg
xor
lret
mov
pusha
xor
pop
fwait
xor
das
les
push
inc
mov
outsl
pop
or
std
test
movsl
pop
push
int
cmpsb
mov
test
fwait
sti
pop
rcr
pop
pop
jne
lret
movsl
mov
pop
jg
ds
outsl
sub
cmpsb
push
cmp
jb
cmp
sbb
mov
mov
aas
xor
pop
repnz
mov
hlt
std
sub
and
mov
in
inc
inc
frstor
xlat
ljmp
gs
cmp
sbb
std
unpckhps
shlb
andl
xchg
cmp
leave
pop
cli
mov
in
cmp
pop
inc
mov
loopne
enter
sahf
popa
shll
in
out
popf
push
or
cmp
pop
ljmp
out
popa
jnp
mov
pop
mov
lods
mov
lcall
sahf
outsb
xchg
sub
sti
push
mov
push
in
es
jns
xchg
lret
test
xor
hlt
lcall
sahf
xor
push
push
insl
rcrl
jl
imul
pop
aam
dec
rcll
mov
dec
and
jg
sub
clc
fucomp
shll
pop
push
loop
xchg
clc
inc
sub
cmp
movsl
ret
dec
divl
sarb
fucom
xor
incb
fisubl
jno
stos
inc
loop
test
add
enter
pop
loop
xchg
pop
ffreep
pop
add
popf
push
inc
mov
ret
pop
sbb
rcrb
std
in
pop
repz
sbb
cmc
call
lmsw
movsl
sub
sub
or
lods
aam
xchg
pop
mov
out
pop
adc
add
pop
rcll
into
sub
stos
mov
clc
mov
jo
dec
inc
inc
mov
loop
mov
add
xlat
sub
push
test
jl
sbb
jns
sbbb
ss
push
stos
insb
js
xor
xor
ja
lret
xchg
mov
xchg
inc
sbb
test
and
in
dec
push
outsb
adc
add
dec
sub
push
pop
shlb
cmp
rolb
mov
cmpl
rcll
rorl
jle
arpl
sub
lods
into
and
mov
xchg
jo
fbld
out
stc
pop
inc
xor
ja
ret
mov
int3
xor
clc
scas
push
cmp
xlat
xor
lcall
adc
add
aam
or
test
sub
jbe
push
loop
movb
add
popf
sub
or
cmp
in
pushf
mov
or
repz
insl
stos
popf
add
dec
scas
ds
insl
rcrb
push
mov
das
pop
cld
add
out
mov
out
inc
sub
insl
loopne
ret
int3
gs
jbe
push
das
inc
jmp
gs
and
out
push
ficompl
lret
js
testb
inc
gs
xchg
inc
iret
addb
sbb
out
rclb
xlat
jnp
sbb
loopne
push
inc
fbld
pop
insb
out
faddl
aam
divl
mov
mov
or
pop
jb
mov
jae
sbb
mov
ret
repnz
rcrb
ficompl
mov
xlat
icebp
movsb
aad
cltd
mov
fsts
shlb
ret
clc
mov
test
ja
les
popa
xchg
insl
fsincos
jp
sub
cmpsb
std
stos
neg
imul
push
mov
dec
mov
mov
out
cwtl
das
and
daa
mov
mov
pop
mov
pusha
xchg
jge
cmp
andb
das
sub
sqrtps
sarl
out
push
push
inc
jo
jmp
lock
int
fdivrl
inc
cwtl
call
sbb
cmpsb
jo
out
in
rol
stos
cmc
popa
cmp
jp
outsb
and
arpl
push
add
pop
sub
jg
mov
jl
and
outsb
adc
adc
xor
and
inc
adc
sub
lea
sahf
int3
mov
pushf
lods
iret
push
ret
pop
pop
sbb
jle
mov
daa
mov
shr
aam
xor
shr
pop
mov
mov
mov
out
outsl
sub
imul
into
add
jmp
jmp
icebp
sub
adc
sbb
sbb
dec
xchg
jge
add
sub
loope
fsubrs
add
adc
shr
jg
cli
sbbl
mov
mov
and
ljmp
ja
sub
jo
repnz
lahf
mov
test
js
cmp
pop
and
add
lds
cmc
fwait
cmpsl
sub
jge
repz
mov
nop
pop
jb
bound
int3
sahf
sbb
shr
sub
ret
add
dec
and
pop
in
sub
loop
or
mov
or
or
test
fnsave
sbb
sbb
das
cmp
pop
dec
dec
aam
shll
stc
sub
outsb
scas
stos
dec
add
es
or
leave
and
cmp
into
adcl
cmp
xchg
cmp
std
daa
leave
xor
outsl
push
xchg
inc
sbb
out
mov
jbe
add
or
sub
and
lock
lea
popf
repnz
xlat
enter
out
pop
cmp
call
mov
cmp
and
inc
mov
inc
data16
mov
push
mov
push
or
sub
icebp
mov
pop
mov
or
sti
fstpt
mov
xchg
inc
fmul
stos
and
mov
ret
movsl
mov
sub
int3
icebp
std
xchg
int
cmp
push
outsl
addl
push
or
out
sub
xchg
jge
movsl
repnz
mov
lock
push
out
out
jb
cmp
jne
popf
inc
test
ljmp
stc
add
ret
call
xor
pop
out
jg
aad
pavgb
ret
pop
arpl
ret
inc
jmp
stc
test
mov
rcr
push
pop
rcrb
push
jle
mov
lea
mov
paddb
jno
dec
mov
dec
sbb
repz
test
iret
xchg
gs
pusha
sub
mov
outsl
cmp
fadds
inc
mov
or
mov
jmp
sub
jle
sti
enter
mov
push
popa
ja
push
lret
orb
insb
sub
in
in
jns,pt
xchg
stos
pusha
inc
push
jno
fstpt
fildll
inc
push
inc
addr16
push
jae
inc
in
xor
adc
jmp
ret
rcr
jo
xor
popa
rorb
and
aas
xchg
ud1
and
stos
jbe
stc
inc
jmp
cmp
adc
cmc
pop
mov
add
push
or
mov
adc
pop
jle
adc
or
sbbl
pusha
popa
dec
sbb
xchg
insl
seta
stos
jmp
adc
mov
push
call
xchg
cmp
xchg
sub
pop
insb
dec
addr16
pop
fld
fcoml
aam
addl
int3
fisubrs
xchg
push
add
pop
inc
mov
movsl
cmp
xchg
xor
or
test
sub
jle
sti
and
arpl
inc
lret
clc
popa
rclb
and
mov
lea
xchg
and
sbb
shrl
faddp
or
icebp
xor
int
push
js
pop
sbb
lock
daa
cld
push
adc
or
or
cmp
push
xchg
adc
shrl
jbe
push
cwtl
mov
bnd
fisubrs
pop
mov
enter
mov
mov
jg
sub
push
mov
ss
cwtl
and
lods
and
aas
or
fisubrl
test
repnz
mov
xchg
sbb
lret
ljmp
dec
insl
xchg
les
pop
sub
fistps
inc
movsb
cltd
sub
inc
rcrl
mov
sbb
xchg
in
std
fidivrl
les
mov
pop
rclb
mov
mov
jmp
in
rorb
push
jo
scas
push
lahf
lcall
cmpsb
jmp
cmpsb
sbb
mov
pop
shll
xor
inc
insl
fwait
scas
pop
push
xchg
mov
jno
inc
pop
sub
and
cmp
mov
push
fnsave
mov
xchg
lahf
inc
push
mov
mov
ja
out
pop
stos
jae
jle
adcl
or
loopne
sarl
pop
dec
data16
jb
jne
test
adc
mov
loopne
jnp
out
add
sahf
test
and
jl
mov
lret
pushf
add
cmpsl
fbld
inc
cmc
hlt
addr16
mov
cmp
xor
ret
cmp
fwait
or
xchg
notl
in
sub
iret
ss
adc
jl
jae
jbe
mov
jp
jo
cmp
mov
outsb
mov
jae
ds
dec
pop
pushf
or
in
dec
adc
xchg
adc
mov
jge
pusha
mov
cwtl
pop
sub
daa
int3
jae
daa
mov
dec
sub
stos
fsubrs
and
jmp
add
and
notb
dec
subb
pop
pop
les
or
mov
mov
enter
add
mov
dec
cs
mov
sub
mov
pop
dec
xor
mov
jmp
dec
inc
sarl
into
outsl
pop
aad
mov
shlb
pop
cwtl
jns
fs
loop
in
push
imul
daa
or
into
and
leave
adc
add
fdiv
dec
xchg
mov
push
cmp
pop
xchg
out
imul
mov
ss
mov
add
sahf
repnz
jno
xor
lds
mov
fdivrs
xchg
adc
es
pop
xchg
push
sahf
rorb
xchg
test
dec
dec
out
mov
lahf
jl
negb
or
inc
hlt
push
inc
xchg
jp
jecxz
or
and
mov
shrb
ja
cmpsb
cwtl
dec
shl
jg
stos
out
mov
jmp
push
rcrb
jmp
mov
lcall
aam
test
rcrl
jp
out
push
mov
cld
push
pushf
dec
stc
insb
jns
pop
pop
aad
jnp
cmp
adc
mov
jne
cld
mov
jbe
add
push
jle
push
in
sub
adc
clc
mov
cs
loope
filds
or
test
mov
jb
cmp
push
mov
ss
add
push
icebp
adc
xor
mov
daa
out
mov
jne
jg
imul
sub
or
fists
add
scas
stos
nop
sahf
ljmp
fwait
pop
lret
mov
jns
pop
testb
push
imul
test
xorb
or
mov
outsl
cs
cmc
xor
cld
popa
dec
xor
mov
mov
cs
aam
xorb
and
data16
mov
ss
push
dec
lods
cmp
testl
std
pop
push
insb
pushf
iret
jne
jo
rcr
xor
popa
mov
pop
jo
jbe
sbb
filds
out
inc
cmp
push
dec
dec
cmpl
pop
loopne
shll
jg
arpl
mov
xor
inc
cwtl
gs
sub
mov
cmp
setb
dec
lahf
dec
inc
dec
fdiv
mov
shll
shrl
sub
jl
ds
fldcw
pop
data16
call
sbb
std
pop
jmp
sti
cmpsl
ret
inc
fnstcw
mov
push
addr16
fadds
sbb
das
jo
js
adc
bound
dec
orl
stos
xchg
jge
sbb
adc
addr16
xor
scas
mov
lcall
into
xchg
jl
scas
mov
out
jnp
mov
sbb
loopne
jecxz
or
pop
repnz
stos
sbb
lret
and
xor
mov
int3
dec
call
scas
push
pusha
mov
cld
fcomps
mov
cmpsl
es
push
push
sub
cltd
in
and
inc
popf
sub
xor
jmp
lret
push
in
stos
sbb
mov
pop
int
ds
fisubl
jbe
insb
jb
ss
jmp
rorl
and
cmp
push
add
sbb
and
insb
sbb
push
inc
cmp
lea
sti
jmp
test
loope
xor
cs
divl
outsl
sahf
xchg
and
mov
push
movsb
or
mov
sub
cs
add
neg
int3
movsb
and
aam
mov
dec
loop
mov
lock
lcall
inc
sub
jae
out
jb
cld
roll
leave
cmc
inc
and
sub
cli
je
loope
mov
test
rcl
mov
dec
jno
sbb
fucomip
xchg
mov
cli
rol
repnz
add
sti
test
rorb
push
fldt
in
mov
fdivr
inc
or
into
mov
and
pop
or
mov
inc
cltd
lods
xlat
scas
sarb
jne
push
dec
mov
insb
sbb
pop
push
sbbb
jge
dec
fwait
scas
cmp
gs
cmc
dec
and
clc
inc
sahf
ds
jns
repz
mov
jmp
jo
add
cmpsb
clc
or
pop
loop
jg
lods
jge
xchg
sub
ja
cmp
pusha
pop
stc
xchg
xchg
test
scas
fsubr
das
pop
js
daa
ljmp
popa
mov
sbb
mov
in
push
mov
flds
xchg
add
sti
sarb
cltd
notl
cld
das
fmull
inc
aam
xor
fwait
and
mov
outsl
movsb
cld
rcr
movsb
imul
stc
pop
stc
sbb
es
xor
int
inc
sub
in
dec
mov
int
push
fisubl
jns
dec
mov
dec
lods
es
aad
lea
in
sti
es
data16
in
lods
mov
push
pop
out
jge
push
loope
add
out
mov
clc
jmp
xor
rclb
xchg
jb
test
mov
rorl
out
xchg
insb
mov
imul
stos
adc
pop
inc
xchg
pop
inc
dec
mov
jo
stc
sub
movl
xor
cmp
cli
jge
jnp
adc
jge
int3
xor
xor
sbb
data16
inc
scas
mov
cmp
lret
data16
push
inc
push
push
or
ljmp
es
sbb
xor
fisubrl
inc
cmp
sti
je
lea
fdivrl
lea
inc
call
inc
or
and
inc
push
out
mov
insb
loopne
cmc
insl
push
or
jp
jns
or
sbb
call
iret
fldenv
xchg
out
push
aas
stos
push
xchg
shrb
negl
ret
xchg
cwtl
mov
repnz
mov
jle
jb
cwtl
push
mov
dec
test
jecxz
icebp
sbb
fnstenv
xchg
ss
push
jp
mov
cmp
adc
jp
jg
xchg
pop
loopne
cmp
sbb
push
xlat
shlb
mov
jmp
jle
loopne
mov
dec
mov
pop
int3
pop
subl
aad
mov
loop
nop
pop
cmp
les
cmc
sbb
stc
mov
adc
roll
es
mov
add
pop
roll
cmp
sbb
ret
jbe
fdivrs
mov
jle
lods
test
sub
xor
scas
addr16
jns
add
push
iret
lock
inc
and
movsl
push
shrb
xchg
mov
adc
adcb
adc
popa
negb
int
dec
xor
adc
in
test
jns
bound
inc
mov
loopne
xchg
jnp
imul
sub
bound
add
inc
mov
outsb
repnz
bound
adc
nop
jnp
aam
negb
fbstp
add
mov
and
dec
inc
fscale
cltd
push
fiadds
xchg
xor
aad
adc
jbe
push
popa
in
dec
fs
push
mov
sar
andb
cltd
mov
xorl
xlat
sbb
mov
out
mov
std
or
clc
int3
fwait
mov
outsl
add
mov
jle
mov
icebp
xchg
push
cmp
inc
mov
inc
shlb
popa
adc
ror
into
mov
pop
inc
xchg
jb
lods
jmp
andl
inc
lods
fistps
adcb
mov
jne
ret
sbb
inc
lods
in
mov
mov
in
outsl
push
adc
inc
add
insl
call
dec
insl
inc
stos
xchg
sbb
mov
lret
cli
push
lret
xchg
mov
fldenv
sbb
sbb
xchg
dec
cmp
stc
fdiv
int
pop
jmp
loopne
sub
mov
mov
les
into
int3
mov
inc
fstl
test
insl
cmp
xor
inc
fwait
mov
sysret
lret
cmp
add
sub
out
int3
repz
lret
dec
push
es
and
jge
lcall
test
cld
add
adc
sbb
dec
mov
testb
lock
xorb
mov
adc
test
lcall
cmp
inc
ret
sub
fcomip
loopne
cs
mov
es
ret
xchg
subb
sub
lahf
fcoms
mov
jge
fnstenv
jecxz
pop
ja
jns
jge
inc
adc
iret
insl
add
sahf
lock
cmp
push
inc
in
icebp
xchg
in
fisttpll
xor
xor
pop
lahf
mov
scas
push
in
insb
mov
add
aad
popf
cmp
les
repnz
mov
xchg
fldcw
add
dec
push
add
push
cmpl
repnz
or
in
cwtl
cmp
or
lds
sub
lds
add
sub
test
inc
iret
sub
dec
cmp
inc
xlat
stos
add
in
mov
jecxz
cmp
cmp
push
sbb
and
push
mov
in
jp
mov
xchg
mov
fldt
fnstcw
lea
mov
mov
and
jno
lahf
sub
xchg
aas
sbb
xor
pusha
mov
xchg
mov
icebp
ffree
movsl
push
dec
mov
lret
adc
jb
jmp
or
push
push
lods
jo
and
dec
sub
popa
loopne
xchg
xchg
cmc
subb
xchg
ss
push
aad
sarb
mov
mov
test
add
es
sub
xchg
jae
les
clc
out
mov
push
pusha
ljmp
aas
push
out
shrb
jecxz
out
out
notb
fnstsw
push
out
lods
pop
lock
inc
xor
or
icebp
out
adc
pop
push
in
and
fwait
dec
pop
das
pop
test
xchg
push
mov
inc
inc
cmpsl
hlt
jns
in
lret
fildll
scas
cltd
inc
jl
inc
jmp
stos
sub
imul
push
inc
mov
jae
sub
or
cmp
lock
repnz
outsl
pop
mov
in
bound
test
test
dec
leave
cld
sbb
pop
xor
mov
mov
pop
and
daa
add
pop
mov
loop
scas
mov
out
js
sub
pop
movsl
and
jle
lret
arpl
adc
rcrb
xor
mov
int
adc
inc
loope
mov
mov
add
pop
and
jmp
or
aad
js
inc
xlat
lea
insb
xlat
inc
dec
out
xor
nop
icebp
xchg
cs
fwait
xor
aaa
push
mov
stos
inc
into
cltd
sti
mov
cmp
push
ljmp
pop
aad
add
stos
cmpsb
js
lods
push
int
lcall
fbstp
push
mov
nop
mov
sbbl
fadds
or
add
stc
xchg
repz
popa
xchg
mov
or
cmpsl
ret
test
call
jae
into
rclb
dec
insb
mov
jb
and
ja
jp
mov
dec
push
cmp
cmp
int
stos
ds
pop
lods
ljmp
mov
gs
arpl
es
push
mov
movsb
in
gs
ds
cli
xor
ss
sub
scas
mov
xor
je
pop
out
push
push
call
jbe
mov
test
xchg
fidivl
lret
fstpl
sbb
dec
mov
loope
aas
mov
movsb
nop
loop
push
adc
test
lahf
or
push
out
push
xchg
ljmp
lcall
mov
fidivrl
sbb
lods
cmc
gs
loope
jp
pop
stos
rorl
xor
pop
lahf
push
or
lods
mov
mov
push
std
or
icebp
movsb
jmp
adcl
cmp
adc
xor
fisttps
sbb
lds
xor
jno
in
jmp
sub
sub
imul
or
push
pop
cltd
lds
cmp
jmp
xchg
adc
scas
add
cmp
cmc
pop
sub
pop
js
pusha
or
stos
es
fstl
addr16
stos
gs
xchg
add
xor
cmc
pop
push
leave
jl
dec
xlat
xchg
push
mov
mov
fsubp
cmp
and
fwait
xor
mov
stos
lods
int3
aam
testl
dec
inc
mov
lret
mul
mov
jle
add
push
nop
inc
jns
test
pop
jle
addr16
cmp
mov
jne
or
outsb
mov
addr16
sbb
jns
into
push
jae
mov
push
adc
mov
adc
mov
pusha
push
inc
xlat
imul
sbb
pop
adcb
cmp
mov
bound
fnstenv
lret
mov
inc
mov
push
pop
les
mov
and
sub
jge
outsb
js
jne
fiaddl
imul
insb
mov
dec
lret
and
test
push
jno
test
dec
add
test
stc
add
mov
jmp
stos
sbb
pop
and
fld
int
jno
fnstenv
xor
push
sub
and
cmp
incl
loop
aam
push
mov
test
xlat
pop
iret
push
into
jae
dec
movsl
fwait
pop
sahf
in
lock
inc
loopne
loope
jnp
xchg
mov
stos
jo
xchg
fwait
cli
inc
lcall
mov
lods
jo
sar
popl
add
sbb
or
std
add
insb
mov
call
xchg
inc
xlat
add
jp
pop
or
jo
stos
pusha
loopne
xchg
int3
dec
loop
push
es
lahf
fs
lock
dec
mov
pop
adc
xchg
imul
out
xchg
push
pop
call
pop
sub
pop
outsb
repnz
mov
adc
and
adc
out
imul
loop
cmc
jne
rcrl
fldcw
lahf
push
adcb
push
sbb
fisubl
dec
loop
nop
daa
ret
push
xchg
and
or
mov
pop
add
cwtl
inc
or
jne
add
mov
and
push
fucomi
cmpl
mov
pushf
jg
lret
jecxz
mull
ret
inc
mov
cmp
mov
out
mov
jo
leave
stos
rcr
sub
and
std
lods
or
push
cmp
popa
adc
popa
fcompl
sarl
movsl
lock
fadds
dec
mov
mov
aad
xor
push
inc
inc
loop
testl
jns
das
sarl
lea
lock
sbb
xchg
jecxz
lret
push
in
mov
loope
adc
cmp
movsb
xchg
call
pop
mov
xchg
popa
lods
dec
iret
mov
lret
mov
mov
or
or
fbstp
pop
pop
sub
insl
insb
fsubs
pop
movsb
popa
cld
subb
aas
dec
movsl
rcrl
push
ljmp
inc
fbld
xchg
jae
jo
ja
aam
push
cli
inc
and
fadds
lcall
clc
fwait
cwtl
out
and
mov
stos
jne
push
mov
ljmp
dec
add
inc
jns
loopne
outsl
jnp
inc
loop
in
in
insb
xchg
adc
cmp
shlb
sahf
xchg
xor
out
loopne
mov
adc
in
fsubrl
cmpl
nop
sub
pop
pusha
cmp
push
pushf
mov
adc
lea
mov
sub
loope
and
xchg
push
pop
lock
add
test
lret
std
ds
push
pusha
cli
scas
inc
sub
nop
pop
pop
jns
or
mov
jnp
insb
rorb
xor
aaa
lods
movsb
fistpll
out
dec
loopne
or
inc
sub
ljmp
adc
jecxz
scas
xchg
dec
and
mov
add
adc
cmp
xor
pop
fadds
es
push
aaa
scas
add
imul
sbb
pop
sarb
testl
loop
push
cli
jns
mov
fnsave
mov
push
push
pop
fdivs
jge
addr16
jp
rcl
mov
int
xchg
mov
les
dec
stos
and
test
dec
add
ret
pop
test
sbb
cli
cmc
adc
loop
jno
cli
aad
mov
int
inc
push
rolb
adc
fsts
addl
cmp
mov
add
jp
xlat
mov
add
lcall
cmc
mov
inc
inc
jmp
je
or
pop
popa
mov
lock
xchg
mov
insb
adc
lods
or
xchg
insl
sub
jb
js
cli
aaa
fnstenv
pop
aam
sub
jnp
mov
bound
lcall
pop
sbb
imulb
stos
inc
fwait
and
adc
leave
imul
xorb
into
pop
out
sti
or
ret
jnp
mov
cmpsb
mov
pop
fisubrl
mov
scas
jle
mov
in
rcrb
adc
pop
out
out
mov
mov
inc
push
and
pop
subb
push
inc
jae
mov
inc
add
aad
bound
aas
mov
mov
fcmovu
and
cltd
shl
push
jno
dec
in
cmp
lret
lea
xchg
inc
iret
push
jle
repz
mov
dec
imul
sbb
gs
sbb
sub
test
out
test
fnstenv
mov
rcrl
rclb
stc
ds
out
jno
je
and
stos
sbb
jge
hlt
rolb
mov
bound
leave
gs
cwtl
dec
int3
pop
sbb
xchg
pop
rorb
pop
frstor
loope
cs
xor
fwait
lods
scas
mov
jge
mov
das
addr16
inc
stc
je
fwait
jnp
xchg
hlt
jecxz
add
scas
fsubrl
sahf
pop
in
or
js
jge
jne
xchg
jp
mov
fbld
stc
in
dec
cmp
inc
aam
sub
aas
dec
adc
call
sahf
push
sbb
pop
aaa
pushw
jecxz
mov
outsb
ror
xor
subl
inc
gs
cmp
xor
lcall
xchg
xchg
jmp
push
cmp
int3
cmp
mov
push
xchg
jns
in
cli
pop
mov
fwait
into
dec
mov
mov
mov
lret
pop
add
add
cli
xchg
mov
into
enter
leave
sbb
ds
pop
dec
inc
mov
xchg
mov
dec
adc
les
cmpsb
sbb
add
js
rcrb
dec
xchg
rol
xchg
jg
jbe
mov
mov
dec
xchg
xor
mov
jmp
or
sub
out
stos
push
jbe
dec
push
cltd
sbb
lea
inc
call
cmp
xorb
push
in
pushf
add
xor
mov
and
inc
pop
outsl
jbe
sbbl
lock
aad
and
fwait
mov
scas
push
pop
inc
pop
xor
add
rcrl
dec
adc
sub
push
aam
sbb
decl
rorb
jl
inc
out
lock
ret
out
flds
lods
into
stos
push
jmp
mov
jo
mov
cmp
pop
inc
inc
mull
test
loopne
into
lds
rorl
add
aad
pop
repnz
pop
jns
sbb
fcoml
jns
and
lds
xchg
and
decb
xchg
inc
push
xor
ljmp
test
xor
clc
sub
es
sbb
jle
jmp
pop
in
xchg
lods
jecxz
repz
lock
cmpsb
mov
or
arpl
outsb
mov
ret
push
xor
mov
outsb
add
push
data16
add
sarl
sbb
inc
add
ret
in
nop
rep
loopne
lds
mov
xchg
aas
mov
cltd
cmp
inc
gs
insb
mov
fstpl
mov
orb
repnz
pop
call
ret
xchg
push
push
lcall
orl
and
shll
inc
negb
pop
sbb
fnstenv
or
dec
ret
jle
adcb
push
movsl
repnz
cwtl
call
add
outsl
inc
hlt
daa
jecxz
out
xor
sub
fisubs
out
sub
idivl
fcoml
push
jo
popf
jp
mov
popa
daa
xchg
testb
ja
xchg
jbe
das
ret
add
std
iret
sbbl
data16
shlb
xchg
aam
pop
mov
lret
push
pop
mov
shr
or
dec
jns
out
push
pop
mov
jnp
insb
xorl
cltd
jo
or
jb
jno
mov
or
jo
pop
fidivs
cmp
scas
xor
bnd
bound
es
xchg
xchg
jl
and
insl
xchg
add
lret
call
divb
lcall
test
fwait
add
das
mov
or
test
add
xor
jbe
mov
nop
push
lcall
pop
push
aad
incl
in
in
sarl
test
int
jl
leave
out
pushf
pop
flds
loopne
rcll
mov
leave
sub
pop
imul
stos
or
leave
cli
xchg
call
dec
sub
clc
and
pop
cmp
mov
push
sub
fildll
push
push
adc
sub
or
xchg
pop
xchg
jmp
xchg
xor
push
pushf
pop
cmp
mov
mov
loopne
sarl
lahf
sahf
loope
dec
mov
popf
imul
push
mov
sub
xchg
movsl
js
inc
shrl
or
xchg
jle
sub
enter
sub
sub
lcall
nop
enter
cmc
dec
in
sbb
mov
add
add
push
sub
pop
cwtl
popa
push
stos
dec
scas
popf
sub
xchg
sub
out
dec
das
push
adc
test
pop
inc
pop
xchg
jnp
lahf
xchg
inc
loope
stc
stos
dec
sbb
xchg
sub
std
and
shrl
inc
jb
int
fists
ja
add
adc
rcrl
and
cltd
lock
mov
pop
or
push
into
cs
call
or
add
cmpb
aaa
fchs
and
push
push
inc
inc
out
cmp
lods
push
out
and
jecxz
dec
orl
es
adc
pop
sahf
jmp
fisubrl
dec
addr16
mov
test
cmp
lret
js
add
cltd
jmp
add
scas
mov
and
or
jns
lret
lcall
dec
sbb
push
jle
push
xchg
mov
inc
repz
ds
add
gs
hlt
mov
jno
andl
inc
cmpsl
xchg
jnp
mov
fistpl
repnz
mov
jno
lret
pushf
out
lea
fcoml
mov
lret
fidivl
jb
aas
rclb
jno
push
jl
push
mov
rcll
add
rcrb
ficompl
push
out
nop
mov
push
sbb
outsl
pop
xor
cmp
jl
test
imul
or
in
cmp
enter
jl
lcall
shl
cmp
in
sbb
divb
int3
das
and
or
push
push
push
and
loop
dec
inc
fdivrl
int
or
mov
adc
and
adc
xchg
lcall
xchg
fs
stos
push
mov
pop
ja
addps
inc
lcall
std
jnp
call
sub
jne
clc
jbe
adc
sbb
out
outsl
sub
iret
and
sub
xlat
daa
rcl
clc
jnp
sub
mov
cwtl
sbb
orl
fadds
jns
pop
push
inc
shrb
jecxz
xchg
hlt
test
loope
das
mov
push
addr16
loopne
out
push
js
std
in
pop
bound
inc
sbb
xor
or
jnp
inc
mov
xlat
insb
addr16
pop
insb
push
shld
adc
in
test
ret
jne
pop
dec
push
mov
pushf
jo
adc
xor
inc
mov
dec
loope
xchg
dec
add
imull
sub
ret
stos
xor
loope
inc
int
pop
fs
xor
inc
fcomi
out
cmpsl
mov
arpl
add
xchg
in
je
lea
cmc
rcrb
iret
add
out
lret
lret
and
aas
adc
lcall
and
sbb
inc
fidivs
shlb
add
xor
test
add
data16
lock
je
aaa
pop
stos
pushf
loopne
push
test
dec
mov
ror
cltd
jno
add
add
dec
sub
cmpsb
xchg
iret
add
js
sub
mov
in
add
sub
jecxz
icebp
xor
test
jbe
dec
mov
push
mov
dec
mov
pop
mov
sbb
mov
sub
outsb
loopne
aaa
hlt
add
test
xchg
sub
out
pop
jb
dec
mov
shrl
sub
pop
loope
mov
mov
loop
sub
xor
sub
test
and
xchg
jp
stos
inc
and
xor
adc
ss
cmpsl
xchg
sbb
pop
mov
insb
jecxz
pop
dec
push
cmc
mov
test
call
xchg
je
add
mov
outsl
xor
mov
xor
fldenv
adc
aas
cld
iret
in
adc
dec
pop
mov
mov
pop
insl
dec
cld
mov
cmpsl
dec
lods
sbbl
add
hlt
xor
cmpsl
lods
iret
fisubrl
adc
xor
shr
test
cltd
sub
loop
xchg
inc
adc
mov
stos
filds
movsl
cwtl
xor
dec
add
mov
push
shrd
and
nop
xchg
pop
repnz
xchg
xor
dec
mov
ret
mov
add
fdivrl
jae
andl
jne
inc
jo
insl
std
ja
int3
lds
insb
mov
enter
sti
inc
push
push
stos
cmp
and
xor
test
mov
fiaddl
decl
xor
or
cs
lea
sbb
jge
cmp
fistl
mov
inc
sub
leave
enter
test
mov
push
test
test
ret
jp
stos
roll
scas
inc
stc
and
int
es
cmpsb
inc
cld
xchg
js
mov
dec
jmp
pop
fwait
bswap
xorb
cli
xchg
sbbl
inc
scas
iret
push
das
cli
xchg
or
sbbl
sbb
push
cli
test
xor
arpl
cmpl
lods
outsb
inc
pop
fs
mov
xor
addr16
outsb
mov
sti
mov
movsb
mov
add
cmpsl
xlat
imul
mov
cmp
add
inc
cs
shlb
push
inc
mov
xor
scas
lods
push
cmpb
pop
scas
mov
aam
shll
push
les
pop
pushf
cltd
and
dec
pop
pop
mov
xor
insb
xchg
mov
xor
pop
movsb
cmpsb
mov
push
or
mov
lcall
mov
frstpm(287
adcl
test
out
std
dec
inc
jg
pop
insl
push
adc
xchg
outsb
cli
jl
shrl
cmc
rolb
jg
xor
repnz
mov
sub
mov
inc
mov
add
fidivs
adc
clc
dec
mov
std
mov
les
lock
imul
sbb
mov
popf
dec
loop
mov
pop
out
sub
push
lods
mov
pop
xor
and
dec
sub
dec
dec
add
repnz
dec
daa
mov
add
push
mov
adc
xchg
mov
lahf
int
shll
fcomi
push
mov
inc
sbb
adc
cltd
dec
movsl
in
push
outsl
push
inc
jb
lods
rcll
mov
dec
pop
fists
pop
jg
test
mov
arpl
outsl
sbb
cwtl
das
or
jl
sub
lods
add
sub
addr16
jmp
pop
fbld
adcb
rcrb
aaa
mov
cmp
cmp
repz
lods
pop
mov
cmp
push
add
fistpll
dec
pop
in
mov
mov
mov
data16
call
lret
shl
jae
inc
lods
push
jp
mov
aam
mov
xorl
cmp
push
popf
adc
jmpw
xchg
hlt
dec
dec
cmp
jo
cmp
pop
adc
cmp
shlb
add
das
cmp
stos
stc
push
xor
cmp
add
icebp
bsf
das
call
sbb
movsb
rorb
int
pop
hlt
aas
add
sub
shll
push
xchg
mov
add
xlat
sbb
and
pop
cltd
cmp
add
into
pop
pusha
fcmovne
sbb
pusha
push
dec
xchg
sti
subl
iret
pop
insl
or
test
enter
iret
jmp
pusha
ja
fldl
faddl
icebp
fs
das
inc
pop
popa
jbe
sbb
lcall
or
leave
lcall
out
int
and
testl
or
pop
and
xor
fcmovnu
repz
mov
pop
out
and
jnp
dec
movsl
cmp
test
test
and
hlt
xchg
outsb
loopne
out
push
andl
sbbl
adc
pushf
cltd
sub
or
dec
fisubs
imul
stc
dec
jne
cmc
push
jge
xchg
sub
cltd
sbb
sbbl
and
mov
hlt
ljmp
mov
jmp
inc
frstor
jbe
push
xor
pusha
packssdw
sub
xchg
daa
pop
mov
fisubrl
adcb
inc
jo
jno
sahf
xor
lock
aas
push
mov
aad
popa
ret
mov
sub
mov
stos
daa
rcl
inc
pop
fadd
scas
adc
bound
or
call
mov
push
pop
inc
pop
add
sub
pop
je
push
imul
adc
pop
cli
cmpsl
sub
mov
daa
push
jns
loope
mov
jl
jp
adc
mov
xchg
ret
pop
idivb
add
ds
cmp
push
inc
pop
mov
cld
scas
pop
mov
aam
addr16
sbb
clc
int3
movsb
inc
adc
mov
stc
push
imull
or
popf
lret
mov
mov
add
push
adc
test
cltd
xor
loopne
adc
jae
gs
int
jb
mov
ret
sbb
ja
sub
jb
sbbl
popf
icebp
mov
add
repz
mov
pop
rcrl
pop
jge
fildll
inc
adc
out
call
adc
test
test
lcall
and
mov
mov
cltd
xorl
repz
jb
imul
movb
fisttpll
sbb
outsb
dec
sbb
daa
jmp
inc
adc
sti
push
jne
push
xchg
es
pop
mov
sbb
cwtl
and
jo
test
or
cmc
int3
popa
mov
xchg
and
and
push
icebp
fsub
and
xchg
leave
pop
insb
sti
mov
test
add
and
imul
cmpsb
jg
push
hlt
sbb
test
pushf
in
push
inc
mov
pop
mov
nop
lock
lret
lret
stos
ja
xor
mov
loopne
cmp
ret
loope
out
fldl
imul
sbb
pop
hlt
jbe
adc
lahf
xchg
jnp
mov
mov
pusha
jo
inc
sbb
in
cwtl
das
loopne
aam
popf
xor
inc
jo
lcall
add
xor
jae
xor
fnsave
mov
jae
mov
add
xchg
sub
pop
in
movswl
ljmp
rolb
stos
and
and
rolb
es
or
flds
fsts
mov
ret
int
out
mov
jge
in
adc
repnz
or
mov
mov
jge
cmp
aaa
inc
out
lret
mov
je
mov
push
in
cwtl
pop
es
lods
outsl
out
push
jmp
in
push
push
stos
jno
pop
pushf
test
xor
mov
cmp
mov
clc
jp
mov
sbb
xchg
into
popf
mov
add
or
push
dec
cmp
fstpl
faddl
mov
cmpl
ret
dec
jge
mov
repz
sahf
xor
push
test
push
ss
sub
and
clc
jbe
test
mov
xchg
test
ret
jo
xchg
inc
push
pop
movl
cltd
xchg
pop
nop
sbb
push
jmp
adc
lods
roll
adc
xchg
or
into
arpl
into
push
or
mov
scas
add
xor
sub
std
iret
lock
and
shl
sbb
stos
lock
cmp
jo
adc
or
das
fxch
or
push
cmp
repz
mov
sti
or
loope
push
lods
imul
es
push
push
add
mov
sbb
test
pop
jo
data16
fadds
mov
mov
jo
xor
push
mov
sub
add
sub
push
mov
mov
popf
bound
xchg
push
pushf
adc
rolb
nop
fcomps
shl
jne
cmp
sbb
mul
mov
xorb
inc
jae
dec
in
mov
sti
mov
out
cmpl
or
push
and
dec
es
pop
mov
lods
ljmp
popf
es
or
add
cld
mov
les
push
clc
mov
ret
dec
cmp
vcvtss2sd
mov
jl
lret
pop
cmp
scas
js
dec
mov
xor
xchg
xchg
ret
outsb
fbstp
dec
jno
imul
sbb
mov
cli
popa
js
sti
mov
jno
loop
mov
and
jp
xchg
jg
sbb
sbb
cld
xchg
pop
mov
aas
add
loopne
mov
mov
cmc
insl
bound
dec
mov
pusha
test
dec
data16
js
cmp
xlat
sbbl
add
mov
incb
mov
fsubrp
aam
imul
jo
repnz
in
adc
sub
mulb
xchg
or
add
mov
fdivl
xchg
ret
add
dec
dec
xchg
push
mov
mov
or
sti
push
mov
push
ss
insl
xlat
sahf
idivl
outsb
test
sbb
pop
mov
pop
mulb
or
sub
sub
pop
adc
push
sbb
outsl
loopne
or
test
out
sub
xchg
pop
push
dec
or
ds
test
scas
push
stc
fnstenv
xchg
fwait
xor
jmp
and
inc
dec
xchg
pop
hlt
call
mov
cmpsb
sub
fnsave
xchg
push
pusha
sahf
js
in
inc
pop
xchg
mov
loop
ja
lods
xorb
sub
add
push
das
and
adc
jb
mov
mov
roll
sub
jnp
mov
lret
cmc
loope
push
out
out
mov
popf
lahf
sub
out
lea
cmc
xchg
inc
insb
popf
inc
xlat
pop
leave
or
test
dec
in
inc
int3
inc
lock
adc
sbb
addb
mov
mov
jns
mov
js
scas
xchg
sub
and
cmp
jmp
dec
or
out
mov
pop
sbb
cltd
mov
sub
sub
pop
mov
nop
fdivrp
outsb
adc
testb
pop
gs
xchg
cltd
ds
test
clc
and
dec
pop
jnp
pop
cmp
cmp
pop
push
jns
aad
pop
arpl
cmp
pop
repz
push
push
xor
or
loop
mov
imul
jl
lods
sbb
repz
mov
test
cmp
cmp
jl
aaa
adc
rol
mov
outsl
dec
stos
dec
lcall
popf
addr16
jo
int
add
pusha
testl
fcmovbe
dec
xor
sbb
and
lods
imul
int
mov
xchg
add
adc
fstpl
sub
dec
arpl
fisttpll
ljmp
pop
xchg
xor
in
cld
dec
cmp
push
pusha
ret
jle
cli
fdivl
inc
lea
sub
mov
jnp
pop
xor
fidivl
lock
dec
xchg
sub
loop
adc
xor
cmp
xchg
popf
fsubs
es
faddl
inc
pop
std
addr16
test
inc
adc
inc
mov
aas
push
or
jmp
out
ss
in
or
aaa
loope
sbb
vmovdqu
insb
push
call
scas
inc
cmpsl
mov
int
and
shll
cwtl
or
into
loope
mov
jbe
push
dec
add
div
lcall
xchg
or
adc
mov
scas
mov
jl
sarb
clc
std
fiadds
dec
pop
fidivs
fildl
cmp
enter
mov
decb
loope
test
mov
jno
push
pop
aam
je
dec
push
push
lds
rorl
lcall
cmp
pop
mov
iret
sbb
push
push
mov
and
addb
xor
cld
push
sbb
push
cmc
call
jge
pop
loop
jp
rcrb
mov
cli
cmpsb
sub
push
mov
push
lock
lea
fsubrp
jne
shrb
jb
mov
lret
xchg
inc
mov
into
sub
setnp
pop
hlt
pop
pop
sub
inc
jle
lock
mov
jns
mov
pop
mov
mov
out
xchg
sahf
rolb
out
fs
popa
jg
shll
repnz
pop
fxtract
jg
pop
mov
nop
push
in
rorl
inc
mov
je
sbb
lds
sbb
subb
scas
insb
or
jg
jns
arpl
pop
jg
fucomi
mov
icebp
movsl
test
cli
xchg
pop
mov
mov
js
jns
jl
imul
repz
ret
pop
jne
mov
test
cltd
fdiv
inc
or
cmp
dec
in
cli
fsubr
test
insb
add
movsl
push
in
add
je
or
jmp
cmp
jbe
popa
mov
shr
jo
or
pop
add
addr16
push
xchg
rorl
dec
adc
dec
xchg
sarl
leave
lahf
dec
and
aam
in
xor
mov
push
adc
add
fsubl
mov
popa
pop
shrb
loope
mov
mov
dec
and
loop
push
inc
dec
int3
lods
xlat
xor
or
or
in
xor
mov
jge
mov
int
and
popa
dec
xchg
lret
fxam
jns
jne
ss
stos
in
push
xchg
shlb
sub
mov
js
and
inc
pop
lret
mov
sbb
adc
mov
loop
fwait
pop
loope
movsl
cld
dec
orl
add
imul
imul
mov
cmp
gs
mov
lret
into
dec
mov
pop
or
cmp
sub
pop
scas
and
fnstcw
fbstp
lds
adc
ret
xchg
add
mov
sub
mov
ljmp
mov
adcb
jb
stc
imull
loope
lahf
push
call
add
pop
test
pop
outsl
test
mov
cmpsb
pop
jl
dec
sub
pop
dec
push
test
lods
into
pop
scas
in
lea
xchg
dec
and
jg
fiadds
pushf
outsb
sbb
fnstsw
dec
mov
mov
mov
inc
stc
insl
and
adc
mov
lock
add
ss
jg
sti
nop
mov
enter
xor
mov
inc
lock
stos
cmc
cmc
mov
daa
pop
adcb
add
mov
jmp
sbbb
repnz
lds
fbstp
sbb
nop
push
mov
xor
push
mov
jge
fmull
insb
hlt
lret
nop
lahf
shrb
pop
mov
mov
mov
pop
mov
inc
enter
dec
push
adc
roll
add
aaa
xchg
test
add
rorb
je
rolb
add
addr16
sub
mov
jbe
lahf
cs
inc
push
repnz
cwtl
aas
adc
inc
push
push
jmp
js
xor
test
lret
push
sbb
sbb
fisubrs
enter
clc
mov
mov
sub
data16
cltd
xor
xchg
sub
xlat
xor
int
push
imul
insl
add
jo
cli
imulb
xchg
mov
pop
mov
mov
ds
ja
shlb
dec
dec
je
mov
stc
inc
cld
test
ljmp
movsb
cmp
pop
push
sbb
ret
sbb
test
lds
outsb
xor
lahf
fs
mov
xor
xchg
xchg
jle
loope
jns
jno
sbb
push
aaa
lock
ja
sub
pop
imul
xchg
jge
aad
mov
pop
xor
rcrb
ret
mov
jg
inc
push
loop
mov
popa
xor
jbe
push
dec
jnp
sub
les
ret
dec
das
jmp
inc
shl
in
inc
fnstenv
mov
insl
cmp
stos
lea
sbb
add
jg
insl
and
push
xor
roll
add
sti
xchg
lcallw
insl
xorl
pop
pop
aam
add
jp
cmp
int3
jns
test
mov
ljmp
xchg
mov
sub
mov
mov
scas
rorl
cmovp
add
and
ret
pop
and
mov
repz
loop
loop
pop
ret
into
mov
fadds
ljmp
cmp
dec
xchg
pop
mov
sub
bound
into
shl
loop
arpl
mov
mov
repnz
movsb
mov
xchg
mov
add
xchg
inc
dec
subl
xlat
jmp
orl
int3
push
xchg
mov
fbstp
inc
jb
pop
sub
lods
ret
xchg
jge
lret
mov
aam
mov
out
inc
jae
call
lods
xchg
rcrb
jl
hlt
adc
jo
je
in
in
loope
pop
popl
push
sbb
mull
sub
sub
jnp
leave
leave
inc
outsb
dec
sti
push
mov
in
aad
mov
inc
fsub
stos
lret
aad
call
leave
sub
add
dec
mov
cmp
test
dec
dec
gs
mov
insb
negb
call
in
or
in
gs
and
sbb
clc
adcb
lahf
jb
in
sti
rorl
int
imul
sub
int
aaa
je
ss
aas
into
rorl
push
push
and
ja
in
pop
mov
cmpsb
mov
xor
out
cmp
flds
rol
and
shll
mov
pop
ljmp
dec
movl
jmp
jge
seto
sti
imul
inc
iret
pop
sti
clc
jecxz
cmp
xchg
add
or
pop
and
hlt
xchg
test
sarb
sbb
pop
cmpsb
mov
adc
inc
loop
jbe
push
das
fs
jno
and
jne
out
mov
sbb
scas
out
insl
movsl
in
ljmp
js
cmp
pushf
or
mov
outsb
aam
jnp
sub
ret
xchg
sbb
sbb
popa
adc
and
jg
vpsubsw
aad
repz
push
sbb
mov
xor
fstpl
repz
movsl
sbb
adc
lods
popa
dec
jecxz
test
push
sbb
test
or
stc
cld
sub
jmp
adc
ja
xchg
sub
fstpl
pusha
fildll
rcrb
mov
cmp
and
outsb
idivl
lcall
or
mov
adc
inc
test
stos
inc
movsb
sbb
mov
fptan
sbb
mov
mov
lea
push
mov
pop
jp
xchg
test
lret
aaa
out
in
mov
or
and
mov
out
inc
push
ljmp
jae
lds
mov
outsl
fldl2t
test
ret
jbe
inc
jno
mov
mov
pop
jo
fldenv
mov
xor
fildll
push
xchg
or
mov
push
sahf
dec
push
repz
fwait
inc
lds
stos
adcl
push
icebp
lock
popf
jge
push
xchg
testb
insb
fnstenv
test
or
lock
xchg
mov
or
aam
sub
push
add
or
call
je
out
pop
push
add
mov
out
data16
xlat
mov
xchg
jno
dec
pushl
movsb
cmp
in
nop
xchg
movnti
nop
enter
ds
stos
xchg
dec
loopne
rcrb
xchg
and
inc
sbb
rclb
cmp
pop
gs
sub
aam
or
outsb
cmp
ja
inc
pop
cmc
mov
adc
popa
mov
cld
push
stos
push
outsl
popa
mov
jge
jne
ss
add
loopne
xchg
gs
mov
sub
cmpsb
mov
stos
sbb
imul
push
sti
inc
sbb
sub
js
jecxz
mov
lret
adc
cmc
inc
and
daa
sbb
subb
and
sub
dec
and
sbb
jge
daa
jae
mov
lcall
popa
insl
nop
clc
pop
pop
std
pmullw
andb
imul
sahf
das
iret
sbb
jne
dec
iret
xchg
mov
pop
ficomps
in
and
push
jmp
jge
icebp
sbb
xor
pusha
xor
lods
cs
xchg
pop
int
vcvtsi2sdl
hlt
addr16
push
shrl
pop
loop
pop
dec
xlat
xchg
sub
insb
sub
insl
jns
and
cld
lds
lods
push
pop
out
inc
vpslld
pop
es
scas
inc
cmp
cmp
mov
out
pop
mov
sbb
sbb
test
mov
jno
xchg
jns
mov
stos
and
stc
and
inc
mov
pop
mov
cltd
or
stc
cltd
movsl
xchg
mov
les
lret
mulb
mov
int
mov
movsb
sti
notl
sub
je
addr16
lods
mov
outsl
fisubs
std
dec
mov
aas
jnp
adc
pusha
sub
jne
and
jge
cs
cmp
mov
aaa
loopne
adc
add
jne
fwait
jbe
inc
jge
inc
fldenv
sarb
in
pop
clc
stc
add
adc
or
jle
je
inc
popf
lahf
inc
pop
cmp
inc
fwait
addl
or
push
repz
or
mov
mov
pop
cmp
mov
add
cld
push
xchg
jno
pop
and
inc
mull
popf
mov
movb
test
leave
push
cwtl
push
leave
stos
es
iret
mov
xlat
daa
repnz
xchg
cs
jmp
cmp
ret
add
mov
mov
mov
es
cld
push
sti
mov
adc
in
push
in
bound
insl
sbb
cld
lcall
in
ret
mov
iretw
pop
cltd
iret
push
mov
jb
mov
or
add
adc
imul
or
xchg
jl
pushf
lea
inc
adc
ds
pop
or
mov
iret
and
inc
fnstenv
mov
fldt
sbb
stc
xchg
xor
sbb
jnp
hlt
xor
jnp
and
jge
test
inc
adc
ret
jne
jne
pop
ljmp
testb
lea
mov
int
push
hlt
in
popf
sahf
int3
push
sub
fildl
and
imulb
jno
popa
stos
xchg
sbb
int3
test
testl
inc
inc
mov
enter
inc
pop
rol
icebp
hlt
loope
insb
mov
and
cli
sub
roll
jb
mov
leave
imul
outsb
adc
je
rorb
mov
insb
ret
mov
shll
jmp
insl
scas
adc
data16
imul
sbb
cmp
notb
test
ffree
inc
mov
mov
clc
stos
xchg
xor
out
push
mov
pop
jns
jp
test
mov
pop
mov
cmpsl
sahf
add
and
mov
pop
mov
adc
hlt
adcl
orb
stos
ss
out
and
mov
iret
push
sbbb
inc
aam
push
repz
clc
das
adc
test
daa
ljmp
push
aaa
icebp
and
jl
movsb
int3
sub
sbb
les
bound
mov
jbe
mov
ja
ds
lcall
cli
lods
inc
das
mov
daa
sub
rcrl
mov
jp
mov
xor
adc
test
jne
ret
or
mov
cmp
dec
nop
mov
imul
mov
lods
ja
jl
cmp
leave
fiaddl
clc
pop
aad
dec
xchg
dec
jecxz
cltd
inc
mov
shl
pop
push
pop
jge
pop
jbe
or
jge
sti
mov
mov
in
decb
mov
add
sbb
popa
sub
outsl
movsb
jnp
xchg
test
clc
aaa
sbb
adc
mov
push
aam
inc
les
xor
arpl
inc
vmwrite
divl
lret
add
paddsw
mov
jae
and
ret
int3
cmp
cld
add
mov
sbb
dec
jae
add
xor
pushf
int
ljmp
fimuls
aaa
mov
adc
mov
sbb
rcrl
jmp
packsswb
sbbb
adc
pop
imul
js
xchg
jecxz
push
adc
ret
and
cs
hlt
push
popa
dec
xor
xor
in
adcl
dec
push
loopne
and
mov
subl
mov
pop
lret
xor
or
pop
repnz
lods
test
pop
mov
dec
sub
mov
cmp
dec
inc
cwtl
mov
aam
fnstsw
fisubs
xchg
loop
dec
shll
cmpsb
call
in
push
or
or
xchg
adc
lret
xchg
out
cmpsl
and
add
test
es
cltd
inc
fcoms
test
mov
cltd
in
ss
pushf
ds
das
mov
add
xor
test
lret
add
bound
sub
aad
shlb
mov
pop
push
mov
or
cli
sub
mov
sub
cmp
mov
imul
ret
xchg
int
in
push
add
rclb
shl
jb
jecxz
test
dec
mov
imul
pop
mov
mov
imul
jg
and
push
xchg
inc
sub
lods
xlat
stos
mov
test
mov
dec
movsl
sbb
add
jge
movsb
jno
icebp
mov
jg
cmp
loopne
movsb
adc
call
ud2
jo
pusha
insb
pop
cmc
popf
xor
inc
and
jecxz
cmp
add
test
push
xchg
jbe
clc
mov
aas
shrb
jne
pop
mov
into
and
pop
cmp
jge
pushf
fdivl
nop
lds
cmpsl
nop
les
stc
xor
push
out
sahf
mov
lahf
cmp
pop
jnp
mov
cmp
dec
outsl
xor
sub
mov
ss
sub
sahf
jecxz
xchg
sub
sub
fnstsw
sub
pop
push
es
sbb
jg
jae
insb
in
push
sbb
mov
aam
lahf
adc
scas
mov
mov
in
inc
addr16
ja
add
cld
xchg
inc
cli
or
or
mov
xchg
loopne,pn
cwtl
jae
add
mov
mov
mov
push
inc
mov
mov
cmp
and
nop
xlat
hlt
xor
lret
jno
dec
imul
jne
stc
push
pop
mov
cld
or
ret
into
gs
cmp
setb
xchg
pop
xor
or
add
pop
adc
pop
lods
push
icebp
xchg
std
jg
cmpsb
cli
xchg
sbb
das
lods
pop
xchg
insb
or
mov
inc
lods
out
sahf
dec
outsl
mov
lcall
inc
test
xchg
stos
cwtl
cmc
int3
arpl
xor
orl
fucomp
loop
call
mov
mov
cmc
or
test
aaa
repnz
in
cmp
bound
into
stos
mov
lea
mov
push
in
xor
sbb
mov
inc
lahf
dec
aad
pop
dec
out
or
pop
shll
adc
bound
mov
ds
and
aas
jmp
enter
stc
in
add
stc
adc
and
and
or
outsb
ds
nop
push
in
xchg
sub
pop
out
inc
clc
mov
mov
out
leave
je
adc
pushf
into
mov
inc
mov
hlt
sbb
xchg
aas
xor
mov
test
add
pop
inc
inc
mov
popl
clc
push
push
ljmp
push
xchg
sub
jle
lds
xor
aaa
xor
stc
stos
jb
dec
mov
jnp
mov
std
outsl
out
xchg
pop
push
gs
or
fsubl
and
adc
mov
jl
out
jns
mov
decl
js
pop
and
jnp
push
loope
lcall
lcall
stos
dec
jnp
jl
sub
mov
in
mov
popa
adc
mov
mov
out
mov
pop
pop
outsl
add
or
test
shrb
push
shrb
lahf
insl
in
ret
or
pop
mov
ret
jecxz
pop
mov
adc
ret
jo
sbb
add
xchg
xor
jp
fcoml
std
push
int3
sub
cltd
push
lds
push
mov
sbb
add
insb
sub
mov
mov
cmp
mov
lahf
mulb
scas
sub
mov
outsl
int
pusha
nop
inc
lds
sbb
jnp
mov
mov
ret
sti
jno
ficomps
test
sbb
xchg
lret
jno
ljmp
cmp
sarl
orb
add
pop
jno
lods
in
out
cli
or
mov
movsl
jl
nop
mov
fbstp
andb
pop
hlt
cmp
aad
int3
push
lods
ds
cs
xchg
ds
mov
push
jb
mov
fbstp
jbe
stos
xor
lods
inc
pop
inc
adc
in
jecxz
sub
sbbl
push
push
dec
lods
out
lods
jmp
cmc
je
shrl
inc
push
sti
je
cmp
pop
ret
xor
fistpll
or
add
aad
sub
lret
push
pop
xor
xor
mov
sub
scas
inc
in
ror
pop
xor
and
into
in
push
pop
pop
push
sbb
into
mov
faddl
addr16
cmp
fs
jge
push
insb
popf
icebp
test
in
ret
xlat
add
mov
mov
pop
push
add
push
push
xchg
pushf
inc
push
and
loope
sbb
les
aaa
dec
loopne
push
xor
cmpsb
inc
cmpsl
jecxz
movsl
lds
adcb
inc
in
mov
insl
jb
fs
xchg
jbe
call
push
lea
adc
das
jp
lea
insl
cmpsb
push
sti
sub
sti
hlt
rol
inc
mov
js
lds
push
adc
xchg
sbb
arpl
cmpb
pop
clc
mov
inc
mov
add
push
pop
xchg
call
ret
hlt
dec
add
test
cmp
xchg
jmp
adc
push
ja
cld
push
sbb
iret
adc
lret
aaa
jno
mov
inc
jmp
test
xor
fwait
xchg
shrl
je
mov
fbld
das
cmpsb
adc
outsl
jnp
adc
negl
xor
cmp
in
push
out
adc
jno
pop
mov
push
lret
mov
sbb
and
push
jl
jge
sub
adc
jno
xchg
mov
or
pop
inc
push
je
sbb
and
push
xor
adc
mov
pop
mov
xlat
cld
shll
addr16
mov
inc
jns
mov
jno
repz
adc
lods
xchg
ret
pushf
dec
out
jmp
jg
dec
call
or
insb
xchg
jmp
lret
push
test
xlat
mov
movl
pop
ljmp
out
mov
test
cmpsb
sub
mov
lods
ljmp
pushf
pop
ret
xor
rorl
add
mov
jb
fildll
insb
adc
scas
jecxz
icebp
adc
push
jno
inc
js
jb
aaa
insl
sub
test
ficoml
mov
fld
pop
mov
jecxz
mov
loope
add
pop
xchg
call
mov
add
sub
sub
clc
sbb
sbb
andl
jge
in
bound
arpl
stos
iret
push
aam
inc
notl
jle
imulb
ja
insb
push
in
or
xchg
sarb
pop
sub
mov
addl
mov
cmp
mov
lods
push
inc
cs
mov
fiadds
lock
in
orb
cli
sub
lcall
push
fcom
fs
shr
pusha
fcompl
fistl
pop
ja
les
std
adc
push
xlat
icebp
insb
and
mov
das
aaa
xchg
add
into
test
bound
adc
xchg
or
cmpsb
add
std
out
or
or
mov
arpl
fnsave
push
jge,pn
mov
sbb
in
jae
outsb
mov
imul
cmpsl
int
daa
mov
dec
les
cs
dec
push
push
scas
lahf
jmp
pop
aaa
lods
sbb
inc
fdivrs
xchg
push
je
xor
adc
push
pop
push
faddl
pop
cmpsb
jbe
add
imul
mov
xchg
mov
insl
loopne
fwait
adc
aad
push
ljmp
outsb
popf
and
pusha
and
add
mov
mov
stos
push
mov
mov
addr16
les
xor
push
inc
movsl
cmovnp
inc
shll
vdivsd
lods
pop
adc
jb
repnz
push
add
jo
inc
gs
es
stos
imul
mov
movsl
add
test
ret
data16
mov
insb
test
dec
ljmp
cmp
xor
xor
in
stos
stc
mov
pushl
push
ss
push
sbb
ljmp
mov
mov
mov
cmp
xchg
jmp
cmp
cmc
inc
shll
push
ss
rolb
pop
mov
jae,pn
mov
ret
scas
fisubrl
mov
fstpt
push
insb
jae
es
jg
inc
pusha
leave
mov
pop
push
jge
push
dec
gs
sahf
mov
adc
xchg
push
mov
xchg
mov
call
and
inc
cltd
xor
sub
adc
inc
inc
aaa
call
sbb
clc
xor
add
cmp
cmp
sbb
mov
mov
add
test
push
mov
icebp
ds
lea
mov
push
mov
add
fdivrs
test
xor
nop
sub
pop
push
add
cmpsb
dec
xor
sahf
hlt
mov
or
cmp
daa
cmpsl
cmp
lcall
add
dec
pop
xor
lcall
sub
pop
inc
movsb
repnz
mov
jns
mov
bound
sti
mov
lret
insw
jmp
and
mov
xchg
sub
movsb
xor
jge
fstpt
outsb
imul
fidivs
mov
test
sub
mulb
mov
inc
mov
fs
mov
push
call
push
push
sti
orl
inc
cmp
mov
dec
stc
jg
sub
or
loop
shll
add
pop
inc
je
xor
push
popf
andl
mov
inc
aad
mov
fucomp
sbb
loope
mov
jo
les
push
out
jb
inc
adc
fsubl
mov
repnz
or
pop
dec
pop
mov
mov
mov
push
mov
push
loopne
add
add
mov
insl
sub
sbb
xlat
imul
movsb
jne
mov
push
cmpsl
cmp
jae
adc
xchg
stc
insb
inc
movsl
popl
jle
pop
push
jae
bound
iret
inc
ja
ja
sbb
xchg
adc
adc
xor
insl
icebp
and
or
data16
stos
imulb
xchg
int
iret
adc
movsb
lret
lock
insb
mov
data16
jae
cli
push
sti
data16
pop
adc
fisubrs
dec
pop
mov
sub
mov
popa
xor
xchg
in
into
sub
push
jno
das
inc
and
les
push
sbb
fnsave
pop
cltd
jmp
rorl
mov
les
fwait
movsb
push
ljmp
je
jb
sub
fidivrs
xchg
push
sbb
add
mov
jb
das
xor
xchg
mov
mov
enter
inc
sti
mov
repnz
push
imul
loopne
int3
or
outsb
repz
aas
push
clc
adc
adc
sbb
clc
push
andb
stos
movsbl
shlb
xchg
and
dec
stc
xchg
shrl
xchg
pop
cmp
shl
and
jo
ficoml
fnstsw
adc
js
lea
jecxz
iret
sbb
imul
add
and
cmp
mov
cltd
jmp
shrb
xor
xor
pushf
sti
add
iret
push
pop
or
loop
test
cmp
add
ja
scas
or
imul
arpl
divb
jecxz
imul
pushl
ja
leave
out
mov
into
loop
int
mov
cmpsl
mov
mov
aam
pop
and
out
decb
jnp
aad
xchg
xor
das
adc
mov
mov
jne
leave
das
incb
jno
test
cltd
aas
push
jecxz
imul
pop
insl
insl
add
imul
loop
dec
daa
mov
cmc
lea
cmp
ret
pusha
pop
xchg
ljmp
cmp
shl
shrl
push
cs
mov
cmp
ljmp
mov
fstpt
cmp
mov
stos
ret
repnz
sbb
add
fistpll
adc
pop
inc
fadds
xchg
xor
ret
js
int
pushf
popf
pop
mov
fwait
je
clc
xor
pop
aaa
mov
sbb
push
or
inc
fwait
xchg
outsl
scas
cmpb
aad
fldt
aaa
movq
test
mov
leave
stos
ffreep
ret
or
shlb
ja
das
xchg
xchg
and
shrl
and
push
lcall
push
and
mov
mov
adc
cmp
push
popa
test
push
sub
push
inc
lock
inc
or
fs
xchg
lds
cli
movsb
call
inc
add
and
filds
imul
std
push
jns
insb
outsl
jnp
fs
inc
outsb
stc
popa
jns
add
jl
mov
popf
lahf
test
sbb
add
in
sbb
insl
lods
inc
xchg
mov
dec
push
lcall
pop
ds
das
nop
ja
sarl
mov
ds
adc
rclb
mov
lret
into
dec
fs
idivb
daa
jp
mov
aad
adc
inc
int
dec
pusha
xchg
shr
cmp
sbb
push
jb
adc
cmc
push
fdivrl
and
cmp
fwait
xor
jo
xchg
mov
and
xor
mov
iret
js
jbe
in
inc
lds
pushf
lret
enter
mov
popa
lods
leave
jl
jns
cmp
cli
or
out
lret
std
stos
jbe
scas
mov
and
sbb
push
mov
cmpsl
mov
pop
test
jg
adc
push
sahf
out
test
mov
iret
jo
ljmp
popa
enter
jmp
add
fwait
idivb
jmp
sub
jmp
jmp
icebp
shlb
loopne
lods
xchg
pop
icebp
adc
push
cs
mov
out
insb
dec
sbb
jno
push
adc
int3
repnz
adc
lcall
jg
rcrb
ja
inc
sbb
cmp
cld
fistl
fwait
cwtl
jmp
shll
sub
or
repnz
xchg
mov
and
xchg
fwait
cmp
push
xchg
outsb
cltd
sub
mov
repz
decl
mov
popf
jmp
xlat
adc
mov
fstpl
or
push
fs
fwait
xchg
jp
xorl
ret
dec
lret
and
loop
mov
aaa
xchg
dec
movsb
nop
jg
js
loop
fldenv
dec
das
gs
in
cmp
test
sub
lahf
in
sbb
dec
test
int3
outsl
nop
add
fs
cmc
mov
popa
pop
in
aas
mov
aaa
testl
dec
or
xchg
cmp
std
xchg
cwtl
imul
rcrb
leave
rcrb
pop
sub
lds
sarl
or
jo
sbb
push
xchg
xchg
out
cmpsl
pop
shrb
jg
enter
out
out
cmp
cs
inc
xor
js
out
xchg
dec
inc
lret
stos
cwtl
push
sarb
push
stc
aaa
pop
movsl
xchg
inc
shlb
sbb
insb
sub
adcl
dec
cmp
lods
xor
andb
jle
cltd
test
ss
lds
pop
imul
rcrb
std
or
jae
imul
add
pop
xor
ret
jne
rcrb
xchg
jp
mov
subb
or
hlt
test
cltd
xchg
pushf
subl
jae
xor
sbbb
inc
push
test
mov
call
roll
es
xor
arpl
mov
or
mov
aam
ljmp
rcr
dec
push
out
bound
imul
pop
cmp
popa
dec
cmp
data16
lret
ja
sbb
ret
fistpl
add
jge
insb
xor
es
imul
subl
lcall
sbb
or
lock
and
dec
fs
add
xor
pop
add
sub
pop
xlat
jnp
jecxz
mov
fwait
pop
jge
xchg
mov
adc
sub
out
sbb
adc
stos
and
mov
std
mov
aam
mulb
call
loope
inc
gs
mov
add
call
cmc
fst
xchg
xor
fadd
add
push
scas
aas
in
xchg
arpl
out
imul
sub
jno
cmp
sub
clc
inc
iret
call
xor
mov
fadd
aam
inc
fisubs
adc
adc
cmp
jp
cld
mov
mov
jmp
leave
fldenv
fisttps
fstps
adc
jg
jmp
mov
mov
in
jp
sti
out
lds
and
fnstsw
cmpsb
pushf
mov
data16
cld
cs
xchg
and
cwtl
rcll
pop
jmp
sub
out
test
test
push
in
js
mov
hlt
cmp
ja
lret
and
xchg
sub
mov
add
ja
push
dec
sub
test
fbstp
jle
out
stos
clc
adc
and
dec
push
inc
incb
mov
rolb
sti
cld
stos
in
push
xor
fwait
test
arpl
sbb
push
in
popa
imul
je
cmc
adc
ret
pop
or
jmp
or
into
push
aaa
loop
andl
add
dec
push
xor
mov
jae
sub
outsb
orb
ret
fcomp
xchg
pop
mov
fstpt
mov
push
in
in
mov
nop
jbe
push
jne
push
mov
leave
jno
stc
push
bound
loope
mov
dec
cwtl
jg,pn
xchg
es
and
xor
xchg
scas
and
sbb
or
xor
movsl
in
xchg
adc
hlt
dec
dec
mov
adc
sti
in
data16
dec
sub
jns
sub
xchg
fwait
into
je
loope
add
cmpsb
and
lahf
lods
dec
jecxz
add
out
adc
pop
lock
pop
mov
pop
mov
and
outsl
out
dec
pop
xor
xor
rorl
push
push
loopne,pt
insb
push
push
pop
inc
cmp
dec
popa
mov
xchg
fs
push
pop
sti
mov
imul
jo
and
loop
jbe
add
jne
sub
popl
pop
ret
aad
pop
inc
pop
mov
sub
mov
test
fidivrl
and
push
fdivrp
sub
incb
sbb
mov
nop
data16
jnp
pop
iret
mov
mov
add
es
xchg
push
xchg
mov
jge
push
fwait
stos
xor
sub
mov
sub
jecxz
mov
frstor
mov
nop
jne
adc
int
clc
sub
mov
mov
jnp
mov
out
test
jne
adc
jae
cmpsb
mov
je
ret
lds
dec
imul
mov
lret
pop
cmpsb
sti
add
lds
stos
aaa
pop
pop
negb
cmp
mov
lds
jge
call
aas
or
andl
push
popf
xchg
sbb
notl
test
jne
loop
inc
cmc
sbb
and
nop
xchg
jnp
mov
cwtl
push
and
stos
push
stos
adc
hlt
nop
cmp
lods
test
pusha
ss
cmp
mov
leave
test
jno
mov
mov
pop
cmp
or
call
lock
aaa
arpl
push
and
stc
xchg
pushl
in
xchg
lret
sbb
and
fistps
in
negb
inc
and
mov
arpl
leave
pop
adc
pop
sbb
arpl
inc
mov
push
insl
xor
jmp
jl
mov
push
push
pop
push
outsl
push
dec
dec
loopne
lock
xchg
mov
xchg
pop
daa
insl
pop
imul
jbe
cli
mov
in
mov
jnp
sub
jmp
mov
xor
out
add
adc
stos
push
adc
add
mov
adc
mov
mov
insl
pop
inc
stc
jmp
adc
sub
push
push
addl
sti
outsl
mov
aaa
cld
aas
mov
inc
dec
cmpsl
mov
cmp
mov
enter
out
jp
jne
leave
sub
ret
cmpb
jnp
aaa
mov
idivb
movsl
mov
pop
mov
dec
push
sbb
sbb
fdivrs
mov
sbb
dec
or
xchg
popf
sub
pop
xor
sbb
in
ret
punpckhwd
jg
xlat
jnp
sub
aad
inc
shl
int3
int3
mov
push
ret
mov
add
fidivl
loop
or
jmp
dec
ds
shll
inc
dec
xchg
seto
pushf
cmp
mov
jmp
insb
jmp
cmp
push
xor
mov
int
sbb
dec
cmpb
rolb
ja
mov
shll
pop
incb
mov
add
mov
jle
inc
adc
add
es
into
lods
sbb
jge
lret
jbe
add
inc
in
cmp
mov
add
nop
mov
xor
psrlq
dec
in
sarl
mov
cmp
fnstsw
loop
push
out
ds
mov
push
jge
dec
add
into
xor
dec
push
jae
je
and
stos
push
divb
dec
mov
xor
cli
mov
push
rcrl
lea
or
xor
es
pop
xchg
cmpsb
dec
popf
xor
mov
add
or
sbb
xchg
in
inc
cltd
xchg
mov
dec
fcomps
and
push
cli
xchg
sub
es
xor
call
inc
stos
add
pop
mov
xchg
sub
xchg
cmp
push
xchg
mov
shlb
dec
scas
sbb
repz
mov
das
cmp
mov
das
inc
ljmp
inc
jecxz
in
pop
sti
jb
and
mov
ds
mov
lods
add
jae
outsb
sub
sub
pop
iret
call
stos
lods
mov
scas
xchg
mov
repnz
into
sub
or
pop
inc
icebp
loop
out
xchg
aam
push
mov
mov
ja
gs
lods
xchg
int
dec
mov
fbstp
jle
jle
sbb
and
xor
outsl
bound
pop
xor
loope
and
sub
cld
mov
gs
sub
lret
hlt
inc
ljmp
ror
js
repnz
aam
scas
push
mov
mov
lcall
mov
mov
xchg
inc
cmp
fstpl
mov
adc
bound
or
in
mov
sbb
scas
inc
lret
sub
mov
push
and
out
mov
shlb
adc
cli
add
gs
sti
adc
xchg
sub
xchg
sub
nop
or
adc
jbe
bound
pusha
negl
or
cmp
push
sbb
xchg
fidivl
xchg
adc
je
das
data16
pop
add
cmpsl
sbbb
fstps
cmp
fwait
sti
sub
mov
add
orl
lock
adc
inc
adc
cs
das
cmp
xor
sarb
jle
adc
xlat
ss
ja
mov
xor
in
movsl
mov
fs
int3
sbb
iret
shr
xchg
idiv
cmpsb
push
cli
pop
pop
imul
or
pop
aas
mov
xchg
and
add
fbstp
call
and
lea
cmp
cmpsb
rcll
in
mov
cmpl
daa
push
adc
jne
or
push
mov
add
call
lods
cmp
jae
inc
rcrl
fs
sbb
dec
mov
in
sbb
mov
nop
mov
cmp
lods
sub
ret
outsb
mov
pop
lahf
sub
test
mov
lock
das
and
adc
and
into
mov
push
push
fucomip
push
add
je
xor
jmp
ss
stos
mov
adcl
push
add
pusha
aas
cmpsl
pop
scas
pusha
xchg
cmp
filds
sub
shl
fdivl
nop
add
push
mov
les
aaa
sub
out
fisttpll
rolb
js
mov
push
arpl
fsubl
jmp
imul
cmp
sub
mov
jns
sub
inc
push
stos
xchg
sti
push
test
arpl
fsubs
jb
aaa
fisubrl
dec
add
test
out
test
xchg
pop
mov
push
fsts
stc
cs
push
lods
int
and
inc
test
repz
xor
add
pusha
ss
sbb
pushf
sbb
pop
pop
sub
fs
imul
in
xchg
push
les
out
movsl
enter
adc
and
xchg
sub
daa
loope
mov
lods
push
mov
ss
sar
cwtl
pextrw
xchg
push
mov
or
cmp
loopne
push
xchg
ss
xchg
ret
push
je
pusha
cmpsb
push
aam
xor
loopne
rclb
jbe
ret
das
icebp
or
push
mov
sbb
ja
cmp
pusha
pop
inc
inc
inc
jbe
cld
cmp
arpl
and
ja
push
int3
ss
dec
call
jae
rolb
stos
jge,pn
push
mov
xor
mov
fdivrl
mov
out
fwait
sub
into
mov
inc
and
push
in
nop
out
or
or
stos
mov
push
mov
or
ds
pop
sub
cmpl
test
dec
xor
pop
loope
mov
aaa
xchg
and
rcll
add
sbb
rcl
ret
ficoml
jecxz
inc
pop
add
std
adc
in
add
aad
in
je
loop
lods
xchg
fisubrl
fsubrl
jnp
inc
push
xchg
jne
ret
je
repz
push
ret
ljmp
pushf
cmp
mov
add
mov
sbb
mov
sub
jns
fistps
cmp
mov
sbb
or
and
fistps
cli
push
test
jge
repnz
jb
cmp
sub
push
pop
push
dec
mov
mov
adc
call
lea
js
xchg
loope
data16
mov
fwait
push
clc
xchg
nop
push
pop
test
push
adc
adc
add
aaa
ret
add
pop
bound
push
cmp
xor
jg
aaa
popa
mov
jl
ljmp
cmpsl
sub
cltd
fbld
xchg
aad
fsubrl
imul
jo
daa
and
insl
jmp
add
push
inc
push
das
mov
xchg
incb
jge
sub
sbb
in
push
sbb
mov
or
add
stos
das
ljmp
outsb
inc
xchg
pop
inc
std
or
xchg
mov
mov
sbb
cltd
add
and
push
inc
test
dec
fidivs
lods
lods
in
hlt
ret
mov
stos
push
inc
pop
pop
sbb
mov
gs
loopne
dec
mov
je
scas
xor
or
in
jg
adc
ret
pop
pop
mov
or
pop
test
xchg
sbb
fcoml
mull
inc
and
push
shll
pop
pushf
pusha
xchg
imul
sarl
and
fsub
jge
push
mov
sbb
mov
or
scas
sub
data16
inc
bound
aas
jle
pop
dec
pop
imul
xchg
ja
int3
mov
or
arpl
out
filds
fsts
jns
push
mov
dec
and
ret
aam
xlat
add
mov
pushf
dec
xor
xor
mov
dec
push
iret
jae
xchg
dec
sub
arpl
fisubrl
push
jno
imul
jo
pop
in
js
jl
cmpl
dec
enter
cltd
and
iret
mov
mov
sbb
adc
leave
mov
ja
inc
pop
es
push
out
jge
and
mov
sbb
nop
pop
outsb
xchg
fwait
incb
fsubrl
arpl
pushf
fs
mov
sub
loope
daa
scas
push
mov
add
mov
clc
rclb
or
lods
push
pop
mov
fbld
jb
out
in
and
pop
or
out
popa
out
fsubl
dec
add
xchg
neg
and
mov
push
cmp
arpl
and
xchg
cmpsl
or
xchg
daa
pop
out
xchg
sbb
call
test
and
pop
mov
loopne
mov
scas
popf
push
or
jnp
in
jle
add
inc
lret
jo
int3
xor
insl
pop
pop
inc
aad
add
sub
pop
fwait
and
inc
and
mov
pop
test
mov
scas
mov
adc
gs
xchg
aam
and
mov
pop
mov
int3
cs
sbb
jge
sbb
or
call
ret
aam
and
pop
fistpl
ljmp
or
mov
fcompl
xchg
fidivrs
xchg
imul
repnz
pop
sahf
push
push
inc
xor
inc
mov
cmp
roll
xchg
in
cmpsl
or
iret
loope
scas
push
loopne
jecxz
inc
inc
fnstcw
imul
mov
sub
sub
fwait
inc
test
leave
pop
pop
dec
movsl
dec
idivl
ffreep
xor
dec
mov
xchg
push
inc
xchg
fs
adc
movb
bound
push
sbb
jo
mov
cli
es
test
mov
push
and
imul
mov
sbb
ret
and
cmpsl
xor
adc
mov
jbe
mov
mov
fldenv
aad
outsb
mov
je
mov
pop
inc
pop
cmc
pusha
jno
mov
xor
aad
dec
push
mov
pop
outsl
xor
xchg
out
push
mov
jns
inc
mov
aaa
pop
jo
stc
push
xor
xlat
lea
in
cli
inc
mov
push
mov
mov
addb
mov
les
sub
mov
pop
mull
into
cwtl
popf
pop
mov
push
mov
sbb
clc
lock
dec
xor
in
and
popf
xor
jns
out
ret
rorb
lods
jo
test
mov
pop
and
push
dec
sbb
jae
xchg
mov
lods
push
adc
shrb
jb
lcall
bound
push
and
or
jp
xchg
mov
or
repz
ret
or
fsubs
loop
fwait
inc
adc
mov
adc
fnsave
int3
inc
lret
gs
push
mov
fstl
fbstp
sbb
cmp
in
dec
int
imul
mov
fcmovnu
push
aam
clc
andb
bound
jl
fdivl
inc
mov
mov
xchg
lods
jb
rorl
subl
in
pusha
inc
mov
push
imul
rcrl
test
mov
xchg
adc
sub
cmp
sbb
xchg
into
movsb
std
cmp
cmp
pcmpgtw
ret
sub
sub
lods
jmp
jae
jb
mulb
cmp
push
je
aaa
sub
lcall
loope
cvtdq2ps
test
sub
stos
orb
or
leave
xor
insb
inc
fcoms
sub
cmp
inc
pushf
stc
dec
cmp
cltd
std
stc
enter
xor
cmp
lret
jmp
xchg
mov
mov
insl
mov
enter
push
shrl
xorb
or
ret
sub
xchg
dec
cmp
push
ljmp
or
pop
out
mov
pop
and
xchg
dec
sbbl
pop
or
fcmovb
insb
andb
xorl
jo
das
mov
cmp
aas
int
pop
or
movsl
mov
ss
pop
add
xchg
pop
mov
xlat
sbb
inc
fidivrl
mov
or
mov
sbb
ret
push
repz
pop
and
gs
mov
mov
into
xor
fldz
mov
and
cli
push
xchg
pusha
test
inc
shrl
loop
les
adc
test
pop
xor
shl
or
jns
iret
xor
inc
es
popf
scas
imul
out
add
outsl
and
test
imul
dec
jmp
xlat
adc
aam
int3
mov
pop
cmpb
add
dec
pop
mov
push
jecxz
mov
out
ds
mov
sbb
sub
sub
or
and
rclb
outsl
and
and
ljmp
or
push
ljmp
in
jl
add
mov
movsl
mov
inc
push
xchg
icebp
jnp
xchg
add
ja
in
cmpsb
lods
and
xor
and
sub
xchg
xor
push
outsb
push
inc
out
popa
pop
inc
test
jecxz
mov
sub
mov
or
arpl
push
inc
out
test
stc
ret
push
bound
cmpsl
out
xor
jns
fadds
fiadds
clc
data16
popa
call
jb
pushf
xor
sbb
push
xchg
inc
mov
push
push
mov
or
inc
add
sub
ds
pushf
add
push
icebp
jbe
adcb
mov
jl
mov
cmp
mov
sub
push
pop
jmp
and
fnstenv
xchg
lahf
mov
pop
fwait
test
push
mov
mov
push
push
and
and
jecxz
movsl
sub
fildll
test
test
scas
push
dec
sub
call
mov
dec
add
int
scas
or
cmpsl
xor
inc
ficompl
pop
xor
jae
mov
lret
bound
sub
shll
insb
dec
pop
stos
rcll
mov
stos
fnsave
mov
dec
fcmovnu
jg
mov
adc
add
and
pop
mov
xchg
popa
xlat
jecxz
or
int3
arpl
sub
je
outsl
iret
push
xchg
mov
xchg
pop
push
sub
and
ret
mov
jo
push
in
nop
ret
test
loope
loop
mov
outsl
dec
sbb
add
es
cs
adc
lods
cmp
aam
xchg
adc
cmp
jbe
push
in
sar
inc
jecxz
stc
mov
les
push
inc
and
dec
mov
ret
fcoml
cmp
insb
cmp
push
std
xor
outsb
divb
mov
in
xor
cmpsb
in
or
ret
adc
or
rorb
add
mov
iret
xchg
sub
adc
and
xchg
fcoms
fwait
enter
int
and
cli
push
rorb
jg
stc
mov
pop
mov
fs
xchg
cmp
gs
popa
sub
pop
mov
imul
repz
dec
fistps
mov
data16
pop
in
pop
xor
ret
fistps
ljmp
sbb
inc
imul
and
push
test
mov
inc
scas
jecxz
cmc
or
dec
outsl
push
pushf
insl
aas
cltd
fnstcw
ja
stos
dec
sub
adcb
push
or
xor
fnstcw
jp
and
inc
rol
ljmp
jno
or
ret
outsl
jb
sbb
xor
sbb
xchg
std
cmp
pusha
push
ds
fstpt
and
into
aad
pop
pop
push
xor
adc
dec
xor
push
xchg
std
push
cwtl
xor
mov
jp
in
inc
pop
mov
clc
int3
pop
xchg
sub
stos
mov
clc
into
ss
daa
jecxz
call
jbe
add
and
mov
test
pop
ja
cld
xor
std
sub
add
jnp
push
scas
test
bswap
cld
sbb
xor
cmpsb
lock
int3
xchg
insl
pxor
stos
hlt
lahf
pop
or
sub
stos
js
fucom
aad
loop
push
or
jno
cmpsb
dec
mov
cmc
mov
jno
int
inc
fcompl
xor
mov
adc
mov
sbb
dec
lret
adc
mov
and
mov
or
das
gs
mov
pop
jle
mov
pop
push
or
dec
mov
jl
call
lock
jmp
pop
shll
push
shlb
sbb
addr16
pop
imul
pusha
or
xor
insb
cmpsb
mov
sub
jo
xchg
dec
sub
inc
jbe
loopne
mov
xchg
mov
mov
mov
push
lods
pop
pop
xchg
jp
or
add
mov
jae
mov
jle
push
cmpsl
cmpsb
das
xchg
add
dec
cs
inc
adcb
push
popa
popa
fnstsw
and
mov
xchg
stc
xlat
cltd
jge
fwait
arpl
in
test
lods
sbb
jbe
lret
aas
xchg
daa
xchg
call
imul
outsl
mov
leave
mov
jl
jle
sub
cmc
aad
mov
cltd
jne
lret
cmp
lret
popa
loop
add
push
xor
cwtl
adc
push
outsl
sub
and
cld
jno
fmul
adc
jecxz
xor
mov
adc
and
scas
out
pop
decb
mov
aas
push
stos
rcl
hlt
add
stc
dec
imul
insb
push
add
fyl2x
and
mov
mov
nop
add
sub
adcb
and
sbb
outsb
xor
stos
addb
add
fsubl
mov
inc
jno
dec
aaa
sbb
dec
mov
rcll
in
insb
add
scas
jne
jmp
fcoml
ja
cmp
lods
xor
add
imul
xlat
outsb
add
sbb
xchg
inc
loopne
adc
jb
push
inc
and
or
inc
cmp
jbe
out
cli
jecxz
pop
inc
add
fnstenv
xlat
pusha
testl
iret
decb
arpl
sbb
outsb
cmp
repnz
rcr
and
pop
jae
pop
push
mov
das
ja
xor
jbe
aad
popa
popf
scas
xchg
inc
pop
mov
adc
les
pop
pop
scas
jb
cmp
sbb
int
fld
data16
xor
loopne
jl
jae
mov
or
cli
xchg
lock
mov
dec
dec
push
pop
imul
leave
jmp
inc
dec
mov
xor
dec
hlt
jl
adc
lret
or
adc
clc
pmaxsw
push
aas
push
stos
mov
mov
cli
movsbl
std
insl
fldl
xor
dec
mov
push
outsl
in
adc
pop
ret
dec
sbb
adcl
push
je
mov
rclb
add
push
bound
mov
enter
inc
jp
sub
adc
inc
pop
rcrb
xor
dec
pusha
loopne
cmc
or
mov
icebp
push
jg
xchg
inc
test
cmpsb
adc
addr16
lret
push
mov
xor
sbb
leave
insb
sbb
pop
pop
outsb
scas
push
or
inc
sti
inc
cmc
pop
outsl
outsb
xchg
push
leave
loopne
lcall
daa
rolb
rcrb
and
lret
shr
ss
sahf
or
scas
std
cmpsl
mov
ret
jg
mov
cmp
push
rcll
pop
mov
outsb
ficomps
fldenv
out
pop
sbb
loope
jecxz
mov
push
out
sub
bnd
aaa
movsb
cmp
fisttpl
into
jnp
out
add
andl
pop
ljmp
aas
stos
insb
loop
mov
pop
rcrl
or
sbb
and
and
jp
fsubl
mov
and
mov
test
cltd
xchg
or
cmc
sub
xor
xchg
add
mov
and
cwtl
outsb
mov
pop
fidivrs
setae
inc
cmpsb
xchg
add
rcl
sbb
test
pop
fnstenv
pop
pop
adc
cmp
or
cmpsb
jnp
pop
xor
jle
fs
push
pushf
adcl
sahf
mov
fwait
int
testb
adc
adc
cmpsl
stos
xchg
outsb
loope
inc
cmp
push
xchg
sarl
or
adc
aad
lcall
dec
cmp
jno
lods
mov
mov
cmp
nop
push
cld
jne
ret
stc
stc
popf
out
add
jo
mov
lds
daa
sub
dec
ret
push
push
push
mov
imul
mov
mov
sub
and
icebp
jecxz
popa
and
add
xchg
mov
mov
dec
xor
lret
sti
shrb
sub
mov
push
pop
icebp
push
sub
std
icebp
cli
mov
fwait
test
movsl
mov
mov
and
pop
pushl
add
xchg
sub
fwait
cmp
add
jg
jae
dec
mov
test
mov
cli
and
sbb
mov
cmp
data16
dec
adc
out
jae
pop
jge
popf
in
mov
sub
fstpt
add
fstl
fwait
movsb
mov
lock
push
loopne
jb
lea
inc
add
scas
lret
mov
lods
xchg
push
add
sbb
mov
mov
sbb
xchg
adc
cmp
adc
xchg
fld
stos
sbb
loope
sbb
mov
cmpsb
push
rcrb
movsb
xor
and
inc
jns
inc
into
jg
lret
mov
xchg
daa
aad
pop
mov
fnstcw
pop
xchg
insl
or
cld
and
shrb
cmp
scas
sub
jae
and
in
inc
lods
push
mov
dec
xor
mov
lret
aad
mov
nop
adc
mov
mov
mov
xchg
cwtl
and
cli
repz
imul
mov
pop
dec
mov
xor
sbb
mov
sbb
andb
out
xor
lahf
push
cmp
cmc
out
adc
pusha
in
ror
sbb
sub
fwait
ds
xor
sub
add
divb
mov
jae
js
rcrb
push
xchg
cmp
insb
mov
dec
dec
jnp
sti
ds
cmp
mov
mov
pop
out
movl
dec
out
fidivs
enter
fisttpl
lret
shll
into
sub
xchg
cs
mov
push
cli
mov
aaa
jbe
pop
push
mov
mov
push
jbe
push
xor
sub
cld
andb
imulb
repnz
orl
insb
and
inc
addr16
add
hlt
pop
inc
mulb
mull
arpl
mov
push
dec
sbb
std
jl
out
and
clc
js
mov
xchg
adc
xor
cmpsl
in
popa
fdivrs
sub
mov
scas
lock
jle
mov
lds
sub
sub
jge
inc
xchg
push
mov
imul
sbb
decb
dec
stc
pop
les
mov
rcl
scas
add
rcrl
je
imul
and
adc
and
xchg
insb
pop
push
popf
fs
adc
loopne
int3
adc
stos
push
sbb
add
jae
pop
fwait
jl
fdivrp
or
shrl
push
inc
inc
int3
leave
out
xchg
mov
mov
push
dec
mov
inc
sub
lods
sbb
mov
xchg
outsb
sbb
mov
pop
fsubrp
js
dec
aaa
stos
xor
shlb
ja
push
gs
pop
adc
shll
into
dec
dec
inc
je
ljmp
test
out
sahf
xchg
ss
push
xchg
fimuls
pop
cmp
cs
pop
cmp
xchg
insl
and
nop
shll
insb
add
sub
ja
mov
jmp
inc
outsb
aam
push
push
nop
int
ret
jg
fisubrs
in
xchg
mov
ljmp
jb
jmp
pop
cmp
or
and
stc
shlb
scas
push
pop
mov
fsubs
fs
jg
push
cwtl
xor
cmp
jae
imul
push
sub
mov
imul
and
imul
xor
sti
jg
mov
fsts
mov
xchg
adc
mov
xor
xchg
adc
sbbb
mov
add
out
addr16
fcomps
push
bound
andb
lahf
sub
xchg
fcompl
or
lret
push
jb
mov
adc
enter
sbb
inc
ret
jbe
test
or
aas
mov
xchg
jne
mov
clc
aad
jecxz
xchg
cmp
pop
mov
jge
aad
mov
je
mov
repz
fiaddl
adc
push
or
mov
iret
mov
scas
cwtl
xchg
in
add
inc
pop
test
push
fistpll
xchg
lea
fwait
aam
insb
aam
dec
push
or
sub
or
cmpsl
xchg
sub
pop
movsl
aas
pop
call
push
push
fstps
fimull
mov
bound
fmul
scas
pop
sub
outsb
js
cmp
and
xchg
cmp
and
sbb
fcoml
js
rolb
fnstsw
and
jo
rcll
popa
cmp
cld
inc
cmp
hlt
arpl
push
add
push
loope
in
fisubrl
dec
cwtl
mov
xchg
push
andb
fsub
loop
push
cmp
sbb
sub
pushf
fidivrs
sbb
sub
pop
cmpsl
mov
pusha
dec
loope
or
das
lcall
sbb
push
jl
push
push
imul
pop
rcrl
ds
xorl
dec
shll
test
mov
mov
adc
pop
dec
or
sbb
xchg
dec
and
icebp
adc
pop
ficoms
lods
pop
pop
cmp
inc
fistpll
jmp
out
add
sbb
sahf
jmp
push
rcrl
xor
sub
or
sbb
cmp
daa
inc
jle
inc
je
pop
xor
inc
add
xor
push
in
mov
xchg
cmpsb
or
pusha
cmpsb
fldenv
xchg
pop
insb
int3
clc
xchg
cmp
sahf
subb
scas
cmp
push
cmc
rorl
loopne
lods
xor
arpl
xchg
ja
in
cmp
mov
xchg
nop
and
cmpsl
stos
jl
shl
jg
mov
lds
nop
sbb
adc
or
cmp
push
cmp
push
or
inc
in
pop
dec
jmp
repnz
ss
outsb
ss
ret
aam
xchg
call
adc
comiss
inc
dec
fbstp
xlat
fimull
sub
jp
iret
mov
and
xor
jne
scas
cld
lret
push
cli
loope
enter
daa
dec
cmc
stos
inc
daa
inc
ficomps
dec
test
ja
pop
adc
lds
lods
and
mov
and
xchg
test
nop
movsl
cmp
movsb
call
push
shll
push
out
xorl
xchg
jno
out
pop
notl
icebp
sbb
ret
jnp
xchg
sub
mov
sub
xor
sub
sahf
ret
pop
lock
push
aas
jge
and
mov
jnp
adc
xchg
mov
js
xchg
inc
sbb
jge
or
ficoms
lods
outsl
sbb
lret
add
sahf
and
mov
and
pop
sub
loope
pop
add
push
imul
jge
dec
pop
inc
sub
popa
imul
daa
push
call
push
jmp
mov
inc
mov
lret
mov
pop
jmp
inc
jmp
lods
movsl
mov
out
loope
cld
roll
mov
add
aad
inc
pop
and
jmp
roll
and
sbb
iret
xor
mov
add
sub
sahf
sub
out
add
jge
xor
mov
pop
sbb
rcrb
ds
repnz
pop
test
popa
lret
jns
or
and
outsb
test
push
inc
or
or
inc
and
jno
fldenv
lock
mov
int3
pop
jmp
push
mov
test
imul
outsl
cmp
cld
and
mov
mov
call
add
mov
insb
out
dec
inc
in
outsb
icebp
icebp
xchg
enter
inc
rcl
iret
scas
push
js
movsb
cwtl
and
adcl
xchg
arpl
loopne
inc
inc
cmc
xlat
push
movsl
or
ljmp
nop
inc
popa
jne
sbb
xor
lea
pop
fdivs
mov
pop
arpl
shlb
les
into
xchg
inc
or
lock
and
out
das
daa
je
insb
mov
sbb
mov
xchg
or
loop
ret
cmp
movsb
cmpl
xchg
sbb
adcb
sub
mov
scas
mov
mov
fcmovbe
mov
add
mov
or
iret
stos
push
mov
shlb
pop
cmc
fldenv
pop
jae
cmp
popa
lahf
mov
fisttpl
sub
cs
pop
ljmp
pop
mov
aaa
scas
jge
and
insl
fldenv
out
push
cs
inc
pusha
jg
lods
loope
fistps
cs
js
ret
sub
cmc
scas
or
clc
cmc
loopne
add
mov
scas
cmpsl
imull
mov
cmp
fildll
jge
add
fisubl
xor
or
shlb
and
mov
cwtl
xchg
pop
cmp
mov
add
pop
repz
out
cmp
sub
inc
sub
xchg
jge
std
mov
xor
push
movsb
push
or
imul
sbb
inc
imul
fs
jae
pop
sub
bound
or
sub
dec
lret
lret
pop
push
ss
jmp
mov
and
mov
pop
lods
mov
pop
test
mov
jbe
inc
into
xor
out
aam
ljmp
mov
ds
adc
ss
loop
pop
adcl
sahf
jg
scas
loop
add
inc
lret
cltd
pop
std
popa
dec
mov
lcall
dec
mov
enter
inc
jl
pop
outsl
ret
jle
pop
in
loopne
clc
and
out
jnp
into
xchg
ret
and
cmpsb
xor
sub
mov
out
inc
push
aaa
cmc
mov
out
jecxz
les
cmp
in
xchg
or
das
into
out
adc
fldt
hlt
pushf
dec
mov
mov
mov
out
push
mov
outsl
and
int3
test
cmp
addl
add
aad
fldcw
fmulp
pop
mov
mov
icebp
loopne
inc
fisttpll
push
dec
in
xorl
pop
inc
arpl
data16
jno
dec
jp
in
clc
fdivl
sbbb
dec
cli
into
mov
xorb
cmpsl
push
xor
xor
std
and
aaa
push
mov
add
and
mov
jmp
push
mov
adcl
xchg
mov
out
mov
sub
movsb
push
lods
add
xor
popf
xor
std
sahf
jle
xchg
int3
ss
divb
movsb
mov
xchg
mov
sbb
sbb
popa
sub
pop
xchg
adc
sbb
stos
mov
arpl
mov
hlt
fdivrs
add
repnz
shlb
fiaddl
pop
or
cmp
call
mov
lahf
fsubl
mov
je
lret
popa
outsb
xchg
and
push
pop
adc
clc
int
sub
pop
cmp
xlat
xchg
xor
in
and
mov
cli
test
rcrl
icebp
add
loop
fistps
loopne
jb
jmp
jb
cmp
mov
gs
clc
or
jge
push
xlat
mov
std
xchg
and
or
pop
adc
je
cmpsl
icebp
sbb
xchg
xchg
jmp
in
mov
adc
jmp
ljmp
mov
xor
mov
mov
imul
cmp
fdiv
cld
outsl
mov
or
out
lock
pusha
aad
insl
shrb
jb
clc
lock
std
insl
add
orb
and
xchg
sub
das
aam
or
ret
pop
cmp
dec
gs
cmpsb
les
sub
fsubrs
xchg
add
or
and
test
push
mov
push
testb
rol
scas
add
sbbb
inc
sbb
dec
add
cld
jecxz
sbb
sub
jge
or
xchg
add
mov
clc
sahf
pusha
mov
sbbl
pop
jl
cmp
and
cmc
mov
lret
xor
inc
aam
lcall
movsl
or
ljmp
pop
mov
jb
imul
mov
adc
outsl
addr16
mov
xchg
lcall
and
icebp
movsl
adc
out
xchg
ja
dec
or
push
pop
scas
mov
mov
push
xchg
xor
ret
xor
push
push
stos
into
stos
popf
xor
dec
sub
mov
into
cs
inc
mov
ja
fsubr
cmp
xchg
inc
adc
cwtl
push
pop
mull
add
fstl
jnp
test
inc
loop
ret
mull
xor
rcl
in
lds
mov
xchg
movsl
sbb
aas
decb
cs
fucompp
xchg
cmp
icebp
add
push
insb
dec
adc
cmpsb
jno
in
lret
lds
idiv
mov
mov
and
pop
clc
je
mov
adc
mov
fdivl
jnp
xchg
lods
call
ret
icebp
movsl
ficomps
cmp
inc
mov
adc
push
adc
and
rclb
sarl
cmpsb
dec
sahf
jle
decl
and
add
data16
mov
ret
lret
push
loop
test
inc
ds
out
imul
push
mov
add
mov
repnz
fdivrs
cmpsb
and
or
aaa
mov
fs
faddl
fwait
jno
bound
adc
or
sahf
popa
cwtl
aaa
jle
inc
or
lds
cmpsl
push
jge
push
jns
leave
and
sub
pop
test
fbld
cld
insl
loop
data16
call
fnstenv
pop
out
negl
in
in
cli
jge
jne
jl
loopne
ret
add
mov
push
add
pusha
pop
mov
pushf
and
rol
popa
orl
push
lea
pop
fucomip
nop
dec
lret
inc
sub
lret
mov
scas
mov
add
adc
in
sbb
bound
adc
lods
add
xchg
add
scas
and
rorb
movl
addr16
fisubs
cmpsl
jae
pop
int3
stc
nop
mov
mov
xchg
cmc
sbb
dec
xchg
sub
mov
adc
jmp
xchg
in
in
jle
xor
xchg
sub
or
inc
inc
sti
stos
mov
push
or
movsl
inc
sub
lret
and
lcall
jbe
sub
lahf
outsb
divb
test
ja
outsb
xchg
movsb
xchg
sti
leave
mov
mov
lods
mov
adc
inc
fwait
add
xchg
js
data16
mov
pop
insb
or
lea
or
push
jp
popa
or
push
push
xchg
cmp
adc
movsl
icebp
addl
lea
sbb
pop
jb
shll
or
dec
and
xor
push
sub
arpl
jg
mov
cmc
cmp
test
rorl
jp
mov
and
push
or
ds
add
das
mov
pmulhw
xor
inc
bound
es
inc
mov
mov
loopne
mov
aas
xchg
mov
lahf
imul
pusha
cmp
or
or
inc
xchg
add
xor
jge
clc
shlb
pushf
stos
test
push
inc
divl
inc
movsb
lahf
pop
sbb
inc
cli
or
xchg
add
push
arpl
stos
mov
mov
hlt
push
sbb
xor
rcrl
jecxz
lods
inc
hlt
inc
loopne
fcoms
xor
mov
movb
lea
mov
push
lcall
and
inc
les
add
xchg
mov
push
lahf
idivl
test
fxtract
shrb
mov
adc
sarb
mov
and
cmp
add
push
fmull
sbb
pop
xor
xor
out
mov
xlat
stos
int3
shl
push
jne
pop
and
cmp
fdivs
fbld
sub
add
xor
xor
add
dec
jnp
add
mov
jl
test
mov
xchg
push
adc
dec
out
out
sbb
lret
call
data16
push
shr
dec
lahf
xchg
and
adc
cmpsb
push
jno
mov
xor
and
mov
fnstenv
add
das
or
push
popa
insb
sbb
lahf
jecxz
and
out
jg
icebp
ds
xchg
mov
mov
dec
xor
ja
jp
in
push
inc
in
popf
sbb
or
out
or
inc
gs
jno
sub
hlt
and
or
lods
inc
mov
hlt
lahf
xchg
xor
sub
mov
mov
jno
or
scas
jb
test
aad
fwait
cld
xchg
int
call
fisubrs
mov
jecxz
xor
adc
add
sub
cmp
mov
adc
cmpps
in
addr16
bound
jae
mov
sub
cmp
mov
ds
xchg
sub
repz
mov
adc
adc
aas
aaa
xchg
scas
sub
insb
testl
mov
je
inc
pop
mov
mov
push
popf
cmp
testl
mov
push
repz
mov
cld
loop
jb
inc
inc
inc
xchg
add
push
out
iret
and
pushf
lock
push
mov
xchg
punpcklwd
ja
or
push
int
out
adc
or
inc
pushf
xchg
add
inc
movsb
scas
lods
lret
lret
mov
lret
lods
cld
push
sahf
xchg
xor
dec
and
sahf
push
fsubrs
jp
inc
fwait
jge
sbb
gs
push
adc
pop
dec
mov
addr16
mov
clc
iret
call
cmc
inc
lods
in
lock
cwtl
mov
je
jbe
sbb
xchg
lret
sub
imul
jle
jg
sub
xor
aaa
fsubs
mov
push
mov
call
notb
out
stc
popf
loopne
pop
cmp
push
in
or
pop
jmp
dec
sti
cmp
mov
dec
sbb
loopne
vpsubd
roll
jp
fisttpll
mov
mov
inc
pop
push
inc
jmp
sbb
enter
xchg
mov
add
cmp
cs
sbb
push
ds
jbe
repnz
or
and
mov
lock
xchg
ja
les
or
jns
dec
xchg
sbb
or
out
push
popf
hlt
int3
aad
add
imul
pushf
sbb
cmp
test
inc
xchg
lcall
dec
pop
mov
push
pop
cmp
popa
xor
mov
daa
dec
addr16
cmc
mov
lret
ret
mov
repz
fcomps
sarl
xor
sub
mov
dec
addb
ret
adc
xlat
push
mov
jg
das
in
xor
aam
or
scas
cmp
cmpsl
stos
cwtl
push
xor
mov
je
cmp
mov
or
jmp
or
addl
xchg
jnp
mov
repz
mov
cltd
jae
add
mov
xor
aad
ljmp
bound
cwtl
daa
fnstcw
cs
daa
sbb
xor
aam
add
in
in
stos
mov
insl
mov
fs
jle
daa
iret
pusha
and
xchg
inc
jl
pop
imul
loop
mov
or
lahf
xchg
fucomi
std
stc
popf
dec
repz
mov
mov
sti
sub
mov
fiaddl
xchg
mov
inc
in
lea
gs
rcl
and
outsl
je
cld
pop
xchg
fldcw
lahf
or
lods
jg
mov
clc
xchg
imul
and
aaa
sub
jo
sbb
inc
leave
dec
mov
push
in
or
sbb
jb
pop
testb
cs
cmpsl
xor
pop
push
hlt
repz
cltd
shrb
xor
xchg
and
mov
outsl
lds
mov
fcmovb
or
aaa
push
jnp
inc
bound
shrb
xchg
flds
stc
push
mov
scas
xor
mov
fidivrs
sub
mov
inc
or
hlt
dec
aas
mov
inc
lods
out
xlat
cwtl
jl
psubd
stc
popa
or
stc
leave
test
inc
sub
cmp
jl
dec
pop
fwait
mov
divb
xchg
inc
jp
call
or
xchg
outsl
jb
or
cli
nop
xchg
outsl
or
cltd
push
out
lret
inc
loop
icebp
xchg
jb
fwait
and
out
cmpsl
or
cmp
fstpt
rcrl
dec
mov
or
sub
popf
push
dec
mov
jo
loop
rcrl
shrb
rorl
xchg
fnsave
adc
dec
addr16
cwtl
outsl
cmp
iret
xor
or
lret
mov
jmp
rcl
mov
xchg
or
mov
mov
jl
mov
fstpt
dec
adc
outsl
iret
cltd
rorb
xchg
xor
push
testb
inc
pop
into
and
lahf
jae
dec
ja
outsb
add
sub
sub
push
pop
in
jge
scas
jle
push
mov
rol
adc
lcall
mov
test
ret
sub
dec
imul
scas
lods
push
loopne
xchg
adc
mov
sti
clc
or
lods
sbb
add
stos
int3
or
ficompl
xchg
scas
ja
xlat
test
sbb
lcall
jmp
and
or
and
ret
pop
mov
sbbb
adc
or
jbe
ljmp
gs
xchg
pop
xchg
in
stos
into
pop
add
scas
imul
mov
ret
mov
hlt
xchg
sahf
sbb
sbb
mov
push
mov
mov
mov
divb
int3
fcmovnbe
pushf
sbb
imul
repnz
mov
adc
cmp
cmp
std
jmp
fisubrs
popf
xor
nop
arpl
mov
ret
hlt
out
repnz
adc
pop
repnz
jae
fistl
adc
xchg
out
hlt
sub
hlt
and
cmp
push
mov
daa
inc
int3
sbb
pop
sarb
push
call
rclb
mov
jbe
xchg
out
movsl
pop
push
in
gs
dec
mov
out
cld
inc
test
jb
xorb
and
int
fdivp
or
cltd
mov
xchg
jg
xlat
jmp
mov
and
or
cmpsb
cltd
ljmp
sarl
cs
mov
enter
test
fsubrp
aaa
test
mov
mov
or
add
jge
std
sub
dec
add
jns
sbbl
push
push
adcb
xor
aad
lret
ret
xor
xor
fstpt
inc
push
aad
das
xlat
scas
dec
nopl
xchg
cmp
adc
rol
test
es
adc
iret
mov
jo
insb
imul
and
mov
popf
mov
inc
inc
sarl
scas
notb
mov
bound
pop
int
call
or
shll
pop
ss
or
retw
ljmp
inc
xchg
mov
daa
sbb
std
jne
push
and
and
andl
test
sub
enter
sbb
adc
lods
lret
mov
mov
jl
lahf
testl
nop
lods
rcll
lcall
cltd
mov
pop
inc
push
inc
addr16
ss
mov
push
inc
pop
and
daa
or
adc
xchg
call
or
ss
mov
jnp
outsl
stc
rcrb
and
sub
mov
add
les
les
ret
pop
movsl
rcrb
fnsave
lods
lea
sahf
lret
xor
out
xchg
jle
pop
loope
jmp
insl
ss
or
jle
shll
push
popf
inc
sub
adc
outsl
sarb
shll
adc
cmp
xor
daa
cmp
sub
jge
mov
lea
lods
sti
fistl
mov
repz
sbb
mov
pop
nop
leave
fcmovnb
cmp
lret
aas
jbe
inc
sbb
push
mov
mov
mov
in
rclb
and
fldcw
sbb
adc
fidivrl
pop
outsb
addr16
das
adc
in
and
mov
sbb
xchg
je
stos
xor
es
mov
sub
nop
rcll
scas
fdivl
and
lret
ss
or
xlat
push
test
jb
push
lock
scas
adc
sbb
jb
mov
test
inc
pop
xchg
or
sti
or
sub
cmc
lcall
unpcklps
data16
outsl
addr16
dec
rcll
fdivs
push
ffree
test
xchg
sub
fs
sub
inc
inc
pop
lcall
fwait
hlt
cmp
and
pop
fdivl
mov
stos
mov
ja
add
hlt
lea
pop
mov
rolb
inc
jge
imul
imul
xor
insb
sti
jge
sti
and
subl
pop
stos
gs
sbb
sbb
mov
mov
mov
inc
aam
inc
lcall
jno
roll
jbe
fmul
pop
pop
incl
loop
rclb
sub
jb
sub
push
lea
push
xor
imul
and
xorl
adc
push
repz
dec
cltd
adc
int
inc
push
in
loop
inc
xchg
xor
jae
shlb
imul
pushf
test
sub
sbb
imul
xchg
mov
jmp
mov
mov
imul
add
movsb
outsb
loop
adc
daa
adc
ja
push
mov
fcmovnu
mov
cmc
es
pop
mov
adc
cli
push
cmova
int
fdivrs
add
xchg
cmp
es
dec
add
push
aam
mov
xlat
and
mov
add
sbb
shlb
loope
lea
out
and
mov
mov
mov
xchg
mov
add
jmp
fs
inc
add
mov
and
adc
xchg
dec
movsl
sbbl
mov
into
jb
xchg
add
xchg
sbb
stos
or
xor
imul
dec
pop
sub
jg
adc
xorb
push
mov
jge
push
and
mov
int
ja
popa
gs
inc
jns,pt
dec
das
or
xchg
add
jg
jl
sbb
push
or
cmp
popa
pop
aad
xchg
cmp
add
out
dec
in
push
in
dec
dec
add
addr16
bound
inc
sbb
subl
icebp
popf
sub
dec
enter
mov
pop
push
mov
push
lods
mov
movsl
xor
sub
jg
scas
adc
cmpsl
jo
popf
mov
dec
and
push
cltd
mov
adc
jae
cmc
add
jb
dec
in
std
ficoms
sbbl
imul
sbb
xor
shl
icebp
enter
movsb
int
inc
pop
xor
lret
dec
loopne
icebp
sbb
shl
dec
mov
leave
pusha
fs
pop
pop
add
lahf
js
add
movsl
push
fwait
es
hlt
or
decb
cli
scas
mov
loope
icebp
lea
push
pushf
mov
xor
xchg
jb
stos
filds
enter
cs
sbb
sbb
xchg
jmp
jl
insb
daa
jp
mov
push
jmp
mov
xor
add
pop
rorb
rol
cs
sub
out
add
mov
cmp
outsl
shrl
ja
sub
sub
int
dec
dec
imul
xchg
int3
push
out
mov
icebp
movsl
das
mov
loope
std
xchg
sub
xor
xor
mov
cmpsb
lock
mov
fucompp
cmp
xchg
push
jmp
pusha
inc
lahf
cmp
jne
sub
stos
pop
out
fwait
into
pop
hlt
lcall
subb
adcl
or
iret
call
fidivs
sti
jl
call
pop
out
cli
sti
mov
jns
scas
sub
fisttpll
xor
adc
mov
fisttpl
jns
cld
mov
sbb
sub
in
mov
mov
lds
xchg
pop
sub
arpl
arpl
push
push
in
insb
cmp
mov
sbb
loopne
fwait
negl
push
out
dec
push
inc
rcrb
lods
sbb
cmpsl
out
mov
lcall
push
aam
mov
mov
and
cmp
dec
add
xchg
ret
rorb
lock
pop
mov
shr
xor
aam
mov
dec
cmp
sub
jns
mov
and
mov
sbb
mov
aas
sbb
push
lock
dec
xchg
pop
in
adc
imul
negl
jae
rcl
int3
xlat
pop
sbb
cmp
lret
jg
add
cmp
popa
cmp
mov
jmp
sbb
fwait
mov
nop
cmp
jns
mov
cwtl
sbb
mov
xor
dec
jb
sahf
inc
cmp
es
cmp
cwtl
jns
dec
pop
mov
push
stos
imul
adc
shl
mull
adcb
jg
jns
adc
dec
adc
orb
in
push
push
pushf
loopne
adc
fcom
dec
movsb
and
jns
mov
and
mov
in
adc
and
dec
loopne
sub
icebp
lret
pop
sbb
ds
jb
int
sub
mov
or
and
push
add
or
and
sbb
add
rcrb
test
dec
out
fidivrl
xchg
or
scas
out
pop
adc
inc
inc
clc
xor
cmpsb
ret
das
scas
pop
loop
inc
inc
cmpsl
jp
xor
xchg
or
mov
mov
xchg
sub
mov
in
negb
dec
adc
hlt
inc
scas
rcrb
shll
mov
cli
das
test
bound
pop
outsb
add
dec
cmpsb
daa
mov
aaa
jecxz
enter
aaa
stos
xor
jns
fisubs
dec
movsb
cmp
int
negl
inc
lahf
lds
and
lahf
insl
and
insb
fwait
xlat
aas
into
and
outsb
pushf
and
cmp
cltd
dec
loopne
cmp
dec
push
pop
int
popf
dec
cmp
sarb
outsb
mov
pushf
dec
xlat
sti
xchg
inc
sub
loop
add
push
cmpl
dec
or
cmp
fisttps
dec
cmc
lret
std
push
and
push
aaa
push
jmp
jbe
jo
and
xor
add
mov
jge
mov
scas
bound
or
iret
insb
mov
sbb
fidivs
adc
das
mov
mov
add
jmp
inc
mov
icebp
pop
cs
xchg
xor
hlt
mov
pop
adc
adc
sub
xor
pop
movb
clc
cmp
push
adc
mov
out
xchg
inc
or
lods
jl
pusha
ljmp
add
mov
dec
std
push
mov
sbbb
ret
sub
pop
nop/reserved
js
cmp
popf
xchg
push
lret
addr16
mov
pop
jmp
rolb
mov
in
and
cld
or
xor
push
mov
cmp
adc
push
iret
cmpsb
pop
cmp
push
iret
outsb
aam
lahf
lods
rcrl
fisttpl
mull
xor
inc
into
das
js
dec
push
sahf
lcall
sub
push
pop
adc
nop
mov
jo
aaa
push
or
cmp
xchg
aas
call
adc
xchg
adc
add
cmp
pop
cs
mov
ret
jnp
xchg
mov
insb
add
sbb
inc
pop
sahf
jo
cmp
xorb
xor
je
repz
and
and
xlat
pop
cli
dec
dec
fdivl
xchg
out
js
xchg
mov
subl
outsl
inc
movsb
mov
xchg
adc
lods
mov
or
hlt
sub
movsb
xchg
pmuludq
popf
movsb
sbb
lret
imul
mov
shr
enter
mov
out
mov
adc
arpl
jecxz
mov
and
and
fcomp
adc
jns
negl
mov
mov
sub
xchg
sub
add
imul
xchg
push
cmovbe
loopne
movsl
sarb
pop
fiadds
xchg
mov
movnti
js
lea
in
mov
in
dec
cmp
lahf
jns
sbb
and
pop
sub
or
out
xchg
nop
mov
dec
mov
jle
loop
xor
dec
sbb
jge
sbb
js
push
xor
pop
jbe
pop
cmc
push
push
insl
cmc
iret
cmp
stc
ret
std
mov
or
addr16
pop
cmc
jg
ret
enter
ret
vmovdqu
sbb
sub
daa
lods
enter
jo
sub
fidivs
jg
add
outsb
dec
ret
imul
add
sbb
inc
js
shlb
push
add
dec
mov
inc
xchg
cmp
ljmp
cmpsb
in
out
fs
xor
or
in
fldz
test
xchg
dec
aam
or
jb
cmc
push
outsb
and
mov
in
shll
gs
in
inc
sbb
pop
cs
pusha
inc
pop
imul
scas
test
xchg
lahf
addb
cmp
and
cmp
and
xor
mov
mul
jns
push
fdivl
aam
int
cmp
sti
inc
mov
jecxz
data16
sub
dec
out
add
mov
pop
and
in
pop
icebp
popf
je
jns
jbe
inc
sti
cmp
scas
pop
or
sarb
shrl
cmp
jl
mov
call
mov
in
mov
add
daa
jb
xor
mov
insb
ja
gs
cwtl
mov
cltd
mov
loope
dec
xor
or
pop
push
inc
mov
bound
test
or
stos
push
dec
mov
mov
adc
xor
sub
xor
xchg
scas
enter
ffree
pop
push
frstor
rcrl
push
pop
dec
loopne
jne
jge
nop
or
pusha
orb
div
fwait
repnz
or
jl
fisubrs
addb
scas
mov
xor
stos
sub
call
mov
repz
xchg
clc
into
fs
out
sub
outsb
jmp
data16
imul
nop
sbb
push
test
test
imul
pop
inc
testb
je
dec
xor
testb
mov
in
movsb
pop
loop
lret
jb
sub
xlat
and
xor
aaa
std
xchg
dec
lret
xchg
xchg
sar
ret
mov
divps
jae
jns
imulb
xchg
imul
cli
cmp
sbb
push
dec
pop
push
add
das
xor
sub
xor
js
jle
loopne
push
dec
mov
loop
mov
dec
dec
pop
call
ret
adc
test
ja
pop
pushf
xor
pop
inc
dec
mov
dec
cltd
xor
ds
add
jnp
bound
sub
test
mov
xor
es
testl
inc
stos
scas
sub
filds
pop
jb
mov
repnz
push
imul
jg
jo
push
hlt
push
xor
cli
push
test
pop
sbb
sahf
inc
jo
test
xchg
and
xchg
adc
jmp
test
insl
pop
sbb
mov
jg
mov
pop
loope
icebp
adc
out
imul
sbb
call
test
fstl
in
push
add
inc
mov
mov
pop
pop
cmc
xchg
jle
add
nop
cld
pop
mov
ffreep
sbb
inc
shll
inc
mov
jno
push
aas
push
mov
fisubrs
outsb
jnp
lahf
lcall
push
mov
mov
pop
jmp
insl
insl
add
loope
mov
or
test
sub
les
sbb
mov
popf
lret
dec
repz
inc
testb
lods
lea
sbb
xor
mov
outsl
lret
push
fwait
cld
mov
xchg
xor
out
push
inc
out
add
push
cmc
lret
aad
dec
mov
nop
dec
or
dec
pop
pop
pop
clc
mov
sahf
cmp
das
mov
in
sub
mov
icebp
movsl
pushf
stos
rcl
rcrb
inc
lret
mov
jmp
or
js
xor
xchg
xor
xor
dec
in
inc
pop
push
sarl
xchg
sub
inc
cmp
in
adc
mov
std
xchg
repz
jbe
mov
fiaddl
or
mov
loope
loope
fcoml
fdivrs
call
or
xchg
in
pop
adc
pop
outsb
aad
xor
stos
dec
pop
lock
push
dec
cmp
ja
out
mov
jecxz
ss
lahf
in
ret
pop
inc
fisttps
sub
mov
hlt
scas
push
repz
shll
arpl
sbb
sbb
ja
jmp
ficoml
lock
icebp
pop
cmc
xor
loop
add
xchg
push
lahf
jno
mov
cmp
xchg
jnp
cmpb
jecxz
dec
jbe
dec
cld
cmc
mov
loop
pop
sbb
cli
pushf
jo
dec
shll
push
xchg
dec
sbb
xchg
scas
in
jp
xchg
mov
push
popa
push
mov
inc
adc
dec
and
lock
imul
dec
out
shl
jg
insl
or
fstps
mov
lea
movsb
xchg
sub
enter
inc
scas
inc
mov
inc
dec
addb
popa
xor
sub
ret
adc
sub
pushf
das
outsl
and
popf
fistpl
or
popf
je
jns
sub
mov
adc
mov
inc
dec
into
stc
cmp
psubd
clc
jg
push
pop
frndint
dec
fnstenv
push
mov
push
lret
rcll
int
jns
pushf
push
iret
mov
and
dec
inc
scas
adc
xorb
insb
xor
cmp
negl
xlat
lcall
leave
push
push
icebp
mov
xchg
jecxz
push
out
or
pop
daa
xchg
aaa
testl
pop
call
testb
stos
pop
jp
xor
add
call
pop
or
add
dec
test
pop
divl
mov
scas
pop
mov
and
mov
inc
pusha
lret
call
insb
push
inc
adc
mov
jbe
and
mov
add
jp
sbb
scas
adc
sbb
pop
lock
ja
cmp
and
dec
test
nop
sarl
rcll
or
pop
mov
xchg
sub
pop
inc
call
inc
add
cmp
js
int3
cs
push
or
jne
lret
mov
in
mov
pop
cmp
jecxz
loop
mov
aas
movsb
mov
fsub
ret
push
sub
xor
sub
sbb
add
cmpsl
pop
daa
outsl
int3
sub
pop
xchg
mov
push
jl
lods
cmp
inc
push
mov
jmp
inc
fsubrs
mov
dec
ficoml
and
xor
in
lea
cltd
pop
mov
int
or
push
add
ss
out
aaa
xchg
imul
inc
das
jnp
insb
sub
inc
orb
out
xor
push
cmpsb
icebp
dec
pop
daa
add
adc
push
mov
inc
jecxz
lea
in
jl
xchg
lods
mov
and
jge
sbb
mov
jg
scas
jno
mov
dec
and
cmp
mov
rcl
int3
push
push
outsl
jle
movsl
scas
nop
int
out
cmp
in
loop
mov
mov
add
call
inc
test
les
jmp
lock
mov
lret
ss
xor
pusha
ss
imul
js
mov
adc
dec
lahf
cli
fucomp
addl
cld
cltd
push
push
dec
adc
sbb
in
cmp
jge
pop
pop
add
dec
push
xlat
ja,pn
mov
dec
inc
mov
lock
lcall
rcrl
xor
adc
push
xchg
push
jmp
adc
sub
jo
jno
test
jmp
lcall
cmp
dec
loopne
cmc
mov
test
addr16
fwait
leave
add
mov
fs
lock
push
push
into
mov
ficoms
adcb
daa
int3
shrb
int
adc
dec
les
leave
cmc
push
inc
push
push
aam
sarb
mov
dec
mov
dec
nop
sub
mov
shll
int
lea
mov
cmc
insl
les
inc
dec
call
rcrl
shll
sub
arpl
daa
inc
sahf
addb
ret
add
cmp
out
ret
rcrl
fldcw
jp
inc
sbb
int
mov
out
aad
sub
push
fisttps
adc
or
cmpsl
push
outsl
fdivl
call
push
stc
jb
mov
inc
xchg
imul
mov
mov
dec
shr
inc
cmpsl
stos
push
mov
cmp
cli
jmp
into
daa
je
loop
je
imul
mov
cwtl
mov
loopne
sarb
cmpl
lret
add
mov
or
and
pop
or
andb
cltd
cld
jge
add
xor
rclb
jno
addr16
sub
orb
sub
dec
stc
ljmpw
ret
dec
loope
jae
popa
push
pop
test
or
sbb
stos
and
pop
push
push
test
icebp
push
leave
rcrb
cmp
inc
stos
mov
rcrb
or
and
jns
sbbb
cmp
sub
in
out
je
push
xchg
sbb
push
lds
mov
lahf
mov
pushl
mov
sbbl
seto
pop
sbbb
and
xor
push
mulb
jge
cmp
out
pop
inc
fsubs
pop
jb
xorb
mov
icebp
sbb
ds
andb
sahf
mov
in
scas
push
and
push
adc
cld
mov
ja
loop
xor
mov
pop
cld
in
fptan
xor
sub
and
jae
rcrb
hlt
add
fdivs
mov
std
test
jge
popf
mov
lcall
iret
or
inc
mov
mov
mov
hlt
inc
incb
mov
jmp
loope
and
adc
test
inc
jns
in
jbe,pn
mov
into
lcall
je
enter
js
cmp
cmp
popf
mov
iret
adc
jecxz
in
xchg
scas
ret
in
lods
and
pop
ret
jo
inc
pop
ja
mov
lock
push
push
jo
mov
sub
jmp
xchg
daa
int
mov
xchg
or
arpl
mov
cmp
jge
aam
and
xchg
push
jmp
add
add
push
cmp
ds
scas
insl
fisubrl
adc
pop
xor
data16
test
xor
dec
mov
rol
out
adc
repnz
loope
push
jns
xorl
negb
jae
arpl
push
ret
cmp
sbb
adc
les
xor
inc
loope
mov
sbb
inc
pop
xchg
jecxz
dec
std
cltd
dec
cmpsb
add
and
rcrl
loop
out
mov
cmp
lds
loope
pop
adc
insl
stc
stc
mov
cmp
mov
les
pop
jbe
cwtl
out
mov
push
mov
js
adc
sub
outsb
cmp
lret
mov
mov
sbb
fisttpl
fldt
cmp
xchg
inc
and
mov
das
cmp
adc
xchg
and
fs
pop
mov
push
inc
sbb
dec
arpl
inc
test
cmp
or
out
xchg
sbb
js
ljmp
mov
sub
dec
xorb
pop
pop
lock
mov
inc
jo
ja
jmp
xorl
lods
dec
cli
cmp
fildl
pop
sahf
lds
mov
les
mov
test
mov
pop
xchg
sub
int
scas
cmc
or
sbb
out
in
sub
pop
nop
add
push
pop
inc
xchg
popa
mov
pop
rcrl
lods
cmp
mov
jg
xor
xor
adc
fistl
decb
mov
test
push
sti
rcrl
mov
jmp
cwtl
add
out
mov
cmp
sarl
faddp
xchg
mov
subl
xchg
bound
mov
lds
repnz
and
sahf
adc
pushf
stos
idiv
push
addr16
jbe
mov
ret
or
cld
sub
push
pop
rcrb
icebp
jns
loopne
mov
sub
scas
imul
iret
frstor
mov
xor
fnsave
in
movsb
dec
dec
int
inc
jae
out
pop
sbbb
add
fxtract
mov
js
mov
lea
aad
out
pop
stos
es
imull
jbe
xchg
fisubrl
stos
das
add
rcrb
or
push
in
push
xor
add
xlat
rorb
sti
mov
lea
ret
mov
sub
popa
cmp
ja
inc
enter
shld
add
sub
popa
outsl
out
repnz
mov
pop
insb
or
scas
and
push
xor
sbb
cld
dec
pop
scas
xchg
lret
pop
add
daa
stc
lods
or
jns
dec
pop
sbb
test
clc
push
test
insb
jle
inc
fbstp
fmull
pop
jmp
popa
lret
push
repnz
fisttpl
popa
stos
in
je
pop
inc
lds
and
adcl
pop
dec
out
cli
dec
loope
das
enter
adc
xor
cmpsl
mov
int
jle
mov
das
lret
insb
pop
mov
mov
inc
fidivrl
push
fsubl
out
daa
adc
pop
jbe
or
and
add
mov
push
popf
inc
xchg
ret
xlat
mov
dec
cmp
cmp
jg
ss
loopne
and
cmpsl
cs
adc
jno
xor
lret
aad
loope
aad
loopne
lock
jns
cli
out
inc
sbb
repz
sbb
data16
sbb
sti
jmp
or
flds
sbb
cmpsb
inc
clc
adc
xor
icebp
add
fsubl
cmpsb
in
test
imulb
loop
dec
out
xor
mulb
add
out
and
jns
cltd
shrb
mov
push
and
movsl
ret
push
pop
add
inc
mov
int3
out
push
bound
cmp
mov
clc
mov
xchg
adc
adc
adc
or
outsb
fwait
icebp
adc
sbb
setbe
xor
test
mov
xchg
mov
adc
mov
mov
sbb
dec
mov
jnp
adc
xchg
ja
nop
daa
mov
push
in
inc
push
stc
cmc
fldcw
daa
xor
cwtl
jge
jp
mov
test
push
lods
cltd
and
jae
mov
call
andl
cmp
pusha
mov
mov
pop
imul
pop
cmp
mov
rol
daa
mov
sub
movsl
mov
es
or
and
lahf
lret
jb
test
adc
cmp
jno
shll
movsl
leave
insl
push
cwtl
jle
jno
and
out
push
xchg
cmp
xchg
aas
bound
xchg
pusha
pop
ljmp
cmc
imul
and
jp
movsl
fidivs
add
pop
cltd
sti
xchg
lret
jl
add
mov
jb
test
pusha
push
or
push
or
mov
into
xchg
lods
jecxz
notb
mov
or
popf
xor
xchg
sbb
sub
gs
in
aaa
mov
pop
aad
in
fwait
movsb
fsubr
aad
or
ficoml
inc
int3
aaa
pop
aam
lds
loope
add
or
pushl
aaa
and
int
jo
mov
lock
fnsave
fdivp
push
mov
repz
test
bound
daa
push
lock
fsub
pushf
out
xchg
pop
sbb
mov
aad
jecxz
mov
mov
mov
jo
fucomip
mull
lahf
jo
lds
shl
mov
cmp
dec
movsl
sub
andb
in
mov
test
mov
test
push
jmp
lock
inc
ficoml
dec
fisubl
xchg
push
mov
test
test
enter
shrb
dec
mov
lods
xorl
movsb
push
pop
ret
mov
jo
out
or
mov
lods
popa
or
arpl
lret
scas
mov
adc
or
jge
inc
or
pop
orb
addr16
clc
clc
es
adc
sub
stos
mov
sbb
daa
mov
pop
adc
not
push
jecxz
mov
jg
jb
xor
iret
push
inc
xlat
mov
fwait
test
inc
in
sub
lcall
add
mov
cmp
out
sub
scas
inc
aam
inc
mov
lods
lahf
pusha
fisubrs
xchg
ficoms
or
dec
loopne
inc
adc
cs
scas
xchg
je
xchg
or
and
loope
mov
imul
pop
xchg
scas
mov
idivb
andb
mov
pusha
jecxz
xchg
jp
inc
mov
and
push
or
jae
xor
cli
xchg
test
sbb
lods
add
jle
and
xchg
jg
xchg
pusha
push
gs
mov
rcrl
or
fcomi
mov
jecxz
push
xchg
xchg
pushf
mov
xchg
imul
lock
pop
pop
sahf
dec
jne
xchg
lea
into
push
xchg
js
aas
mov
lock
call
in
and
dec
in
es
push
jl
movsl
loope
iret
mov
mov
jns
xor
aas
mulb
insl
negl
add
push
mov
je
add
aad
mov
in
inc
fxch
dec
dec
pop
fistpll
or
adc
aas
dec
fs
cmp
mov
pop
pop
xor
in
movsb
aad
push
cmpsl
and
mov
push
or
xchg
and
jge
and
pusha
stos
lds
mov
sub
sbb
push
pop
jle
sub
xchg
sub
std
mov
ljmp
jecxz
jae
adc
lods
jp
mov
xchg
cmp
jle
pop
negb
cmpsl
stos
cltd
das
repnz
inc
je
cmpsb
cmc
pop
lods
inc
add
imull
push
fstpl
jecxz
or
sbb
out
pop
popl
dec
adc
repnz
inc
sbb
cmp
jge
fstpt
pop
popl
cmc
mov
loope
pop
cmp
out
sti
aad
roll
cmpl
scas
push
out
leave
shll
repz
test
xor
loopne
sub
jle
popa
xlat
mov
into
gs
or
pop
xlat
in
decl
cwtl
dec
out
sub
xor
and
out
shlb
push
ret
sbb
xchg
push
mov
je
je
shll
xchg
aas
mov
adc
mov
jmp
stos
fistl
repz
mov
hlt
xor
push
adc
sbb
movsb
push
and
js
dec
add
push
or
or
imul
sbb
add
or
lods
sub
mov
insl
gs
cltd
xor
inc
call
adcl
aaa
mov
jnp
cmc
nop
rorb
mov
jge
dec
push
xlat
jp
add
sbb
sbb
sahf
inc
xor
movsb
xor
jae
popf
lods
and
push
push
inc
mov
pop
jae
pop
and
mov
mov
inc
fisttps
fsubr
cmp
mov
mov
cli
mov
flds
adc
insb
xchg
xchg
inc
int
xor
or
mov
jne
andl
push
xchg
fisubs
cld
mov
xor
and
stc
push
pusha
js
xor
test
mov
cmp
rcll
cmp
xchg
ds
or
subb
jecxz
movsl
jb
jg
jg
stos
mov
push
stc
in
bndstx
xor
test
adcb
cmp
cmp
ret
xchg
cmpsl
into
data16
push
icebp
test
cltd
jne
mov
xor
push
loopne
push
dec
lds
jno
fmul
adc
adc
adc
ficoms
hlt
out
sub
mov
jge
aam
mov
mov
mov
int
fmull
jmp
cmp
jle
lret
loopne
jmp
test
mov
xlat
jnp
cli
ss
mov
pushf
adc
test
sbb
xchg
or
mov
ljmp
clc
or
in
adc
in
test
cli
fimuls
fwait
shll
divl
and
add
or
pop
mov
mov
stc
jge
push
ret
in
jge
pop
mov
push
jb
sbb
cmp
mov
pop
dec
ret
xchg
mov
sub
test
lcall
icebp
jns
out
fwait
cmpsl
int3
adc
lcall
stc
and
xor
mov
in
pop
das
pop
jl
fsubrs
dec
fwait
sbb
lcall
add
hlt
xor
cmc
imull
mov
xchg
jo
inc
mov
mov
cmc
mov
xchg
test
cmc
mov
sub
pusha
or
call
mov
fcompl
les
imul
mov
shrl
xchg
call
stc
jne
jge
push
sbb
loopne
sbb
repnz
inc
lds
adc
lock
rolb
ss
or
sarl
cltd
decb
icebp
or
fistpl
mov
out
out
jmp
test
shll
mov
xchg
xor
int
or
cmc
arpl
pop
add
dec
lods
icebp
pushf
cli
jecxz
sub
je
lahf
ljmp
mov
fldl
lcall
mov
int
xor
movsl
cmpsl
popa
or
sub
sub
mov
outsl
xchg
int3
pop
iret
lcall
xor
pusha
inc
lea
mov
xorb
push
jne
les
int
xchg
fisttps
xchg
push
loop
sbbb
lea
pop
movsl
push
movsb
adc
lea
fisubrl
jne
lret
or
push
push
cmp
fnsave
sbb
insb
or
jge
push
pop
jle
test
mov
ret
and
in
fidivl
and
test
jmp
test
ds
int3
sarb
jecxz
jp
mov
push
push
mov
scas
xchg
aas
xchg
ljmp
in
call
pop
orl
sbb
push
outsb
ret
loope
nop
cmpb
hlt
in
cmp
push
out
mov
push
in
lods
fwait
jp
movsl
mov
sbb
xor
and
push
out
cmp
fwait
jp
repz
sbb
push
cld
xchg
lahf
mov
in
mov
pop
fimuls
push
push
cmp
leave
push
push
cltd
jecxz
lret
xlat
xor
jp
push
sti
mov
mov
jno
inc
stos
jno
and
sbb
dec
movsb
das
jl
lds
xor
incb
xchg
cmp
adc
gs
lahf
or
jl
call
and
stos
insl
adc
fwait
xor
jns
iret
cmpsb
and
jnp
push
stos
jnp
cmp
jnp
ljmp
mov
int3
jne
movsb
cmpsb
enter
xor
rcrb
lret
fisttps
push
lret
mov
mov
in
and
add
scas
inc
fcomi
out
imul
andl
lods
adc
mov
jne
roll
push
and
std
jecxz
das
fsubrs
cmp
lods
xor
fmull
xchg
xlat
gs
xchg
negl
gs
push
ds
push
xchg
in
pop
stos
not
scas
or
xchg
mov
mov
and
stos
cmp
cmp
and
inc
pop
rcl
loope
das
jecxz
mov
dec
sub
aas
fcmovbe
shl
mov
rol
sub
mov
push
clc
aas
xor
notl
mov
jno
les
bound
sbb
mov
popa
jb
pop
jg
daa
sub
push
sti
inc
fwait
sbb
mov
cmp
daa
cmp
data16
cmpsb
xlat
mov
leave
ss
sub
mov
les
clc
dec
shr
inc
push
inc
cli
mulb
jno
out
pop
es
pop
dec
repz
sbb
add
mov
push
push
rorb
and
sbb
rclb
sub
mull
ds
push
call
jle
inc
fmull
mov
ja
push
jns
jge
pusha
or
mov
adc
lahf
mov
cmp
mov
test
test
ljmp
mov
push
ja
xlat
outsb
or
cmp
test
lahf
in
rcr
stos
inc
mov
xor
outsb
mov
lock
in
jae
push
sub
sub
cmp
popa
jg
mov
mov
roll
mov
in
xor
adc
sbb
cmp
sub
dec
test
sub
shrl
inc
jl
inc
je
addr16
mov
adc
leave
outsl
pop
cwtl
shlb
cmp
cmc
jns
rcll
push
test
arpl
sbb
mov
scas
xchg
hlt
xor
jmp
arpl
insl
rclb
clc
push
movsl
repnz
out
xchg
stos
adc
pop
lahf
add
je
adc
jb
imul
fmulp
inc
jge
ljmp
inc
sub
or
das
adc
test
mov
xchg
sbbl
pop
shlb
lds
inc
push
les
leave
jmp
push
jb
test
fldenv
bound
jp
xchg
insl
icebp
adc
js
ljmp
sahf
sti
test
sbb
loop
lds
or
imul
push
pop
movsl
cmp
push
test
imul
pop
xor
test
mov
cmp
sbb
push
inc
fnstsw
loop
rol
mov
test
dec
loopne
xor
data16
aad
mov
adc
dec
fdivs
test
jo
test
mov
fists
pusha
scas
inc
xor
ficompl
add
add
insl
pop
xchg
cmp
xor
jmp
inc
mov
arpl
push
mov
out
icebp
ror
xlat
icebp
negb
lods
jb
shl
pop
int3
jg
mov
mov
aad
jnp
cmp
mov
imul
sbb
mov
ja
mov
cmp
sbb
cmp
mov
lods
insl
iret
rcrl
mov
mov
adc
xlat
inc
pop
push
pop
mov
lahf
bound
jno
out
jle
adc
sbb
fsubl
push
adc
add
fwait
and
ret
cmp
js
sub
jae
iret
out
scas
add
fistpl
sub
xor
mov
cli
xchg
jl
dec
push
lods
je
jg
jb
std
mov
lahf
add
add
cmp
inc
aas
dec
outsl
sbb
ret
inc
dec
js
ja
xor
popa
leave
mov
imul
xchg
cmp
inc
add
pop
daa
lds
sbb
fsubrl
inc
ret
pop
and
cmp
cmp
movsl
xlat
jo
lea
stc
sub
ret
icebp
jne
dec
aas
cmp
jecxz
outsl
test
xlat
repz
cmpl
in
inc
adc
or
insb
add
xor
jle
sub
arpl
in
or
dec
mov
cmp
xchg
inc
jne
sub
fdivl
frstor
mov
jge
lock
mov
outsl
shl
pop
fdivl
scas
inc
jo
push
test
adc
shrb
mov
cmc
nop
inc
pop
mov
fdivrl
loop
in
mov
mov
cmp
inc
add
cltd
dec
cmp
shlb
xchg
shrb
mulps
mov
cmpsb
hlt
pushf
jg
fwait
scas
mov
repnz
cmp
or
andl
fisubrl
aam
mov
mov
fiaddl
sub
push
cltd
xlat
pop
stos
ficoms
pop
cltd
add
push
lock
xlat
icebp
pop
mov
inc
and
test
outsb
ret
xor
iret
rcrl
jbe
cmpsb
insb
mov
mov
mov
popf
push
jmp
jnp
addl
dec
jne
jg
cmp
fisttpll
je
movsl
mov
sbb
cmpsb
sub
pop
lcall
js
shrl
enter
inc
sub
or
inc
in
mov
dec
add
inc
jmp
in
xchg
mov
les
or
cmp
aaa
into
cmp
dec
stc
jmp
or
bound
iret
test
int3
inc
sbb
data16
fs
mov
shlb
sarl
xacquire
push
movsl
xchg
sahf
clc
test
mov
mov
cld
adcl
pop
in
adc
xor
push
ljmp
mov
aam
shrl
jno
fidivs
xor
dec
popf
cwtl
xorl
xchg
adc
jb
test
xchg
jecxz
mov
insl
add
neg
jae
push
adc
ds
inc
arpl
es
mov
mov
cmpb
xchg
lods
lret
std
shr
or
sbb
xchg
out
or
sarb
mov
pop
jp
sahf
and
imul
jle
stos
or
inc
pop
incl
dec
jmp
jne
push
mov
mov
cltd
and
push
or
scas
out
mov
xchg
out
xor
js
fsts
and
adc
fistpl
mov
icebp
pop
mov
mov
mov
inc
scas
aad
sahf
in
arpl
sbb
push
iret
ds
xor
push
popa
in
add
rcll
add
das
adc
popf
mov
ja
aas
jle
jno
and
xor
inc
repz
pop
mov
adc
nop
ret
xchg
xchg
pop
dec
popf
cmp
leave
pusha
mov
xchg
jb
jecxz
sub
mov
adc
inc
jg
push
push
movl
cltd
xor
les
or
mov
stc
popf
sbb
push
ljmp
jno
mov
lret
jb
sub
btc
lcall
stc
shlb
pop
pusha
cmpb
popa
jnp
mov
mov
mov
clc
or
addr16
cmp
dec
push
mov
pop
cmc
jns
add
dec
fs
xchg
dec
repnz
mov
rcrl
mov
imul
adc
xchg
std
test
fwait
jno
cmp
repnz
add
fnstenv
mov
cmp
push
std
fcmove
xlat
push
mov
mov
or
mov
adc
push
mov
das
movsl
mov
cmp
pop
scas
loope
sub
mov
pop
nop
add
lods
ror
pop
inc
xchg
test
cmpsl
sahf
fnstenv
cmp
jl
lret
pop
sbb
sub
popa
imul
divl
movsb
mov
xchg
stos
ror
mov
push
in
lock
enter
inc
mov
into
add
es
cmp
jbe
cmp
test
and
mov
xchg
xor
add
insb
inc
mov
cmp
pop
lods
aad
cmp
test
inc
pop
enter
nop
test
repnz
jmp
xor
dec
adc
add
push
stos
repz
enter
cwtl
xchg
add
in
sub
sbb
roll
or
adcl
stos
sbb
adc
inc
sahf
fdivl
popf
mov
and
sub
insl
fdivp
fdivp
test
jp
out
xchg
js
sub
or
shr
orb
imul
test
mov
and
sbb
repz
lods
mov
loopne
add
jb
pusha
lret
in
dec
push
sbb
pushf
hlt
xor
pop
sub
push
movsl
cmp
cmc
sbb
in
fcoms
add
negb
xchg
add
cmp
adc
xchg
mov
add
pop
repz
aam
cltd
fdivrs
and
and
adc
push
movsb
nop
jecxz
pop
subl
xlat
cmpsl
cli
xor
mov
mov
jl
pop
pop
jmp
test
adc
sub
hlt
test
mov
jmp
daa
xchg
pop
je
out
ljmp
loope
fisttps
testl
mov
jp
movsb
mov
mov
cmp
stos
jbe
and
jns
sub
mov
mov
sbb
mov
xchg
das
xchg
inc
fimuls
mov
sbbl
mov
and
mov
imul
std
mov
movsl
std
cmp
fdivl
sarl
xor
mulb
jmp
jne
adc
push
push
jle
int3
mov
adc
add
mov
jo
call
dec
or
sub
dec
js
fildll
aaa
or
clc
mov
clc
bound
xchg
push
sub
addb
add
stos
scas
adc
jg
jbe
fidivrl
nop
adc
inc
sahf
push
lods
sbb
inc
std
xchg
pusha
rcl
cmp
jg
test
nop
test
fmull
in
outsl
repz
addr16
sub
js
adc
cmp
stos
les
inc
fmulp
lahf
fwait
mov
or
or
ret
jbe
push
scas
xchg
pusha
test
arpl
popf
jae
aad
hlt
and
xlat
out
test
mov
xchg
out
push
stos
jo
pop
cs
repz
xor
xchg
arpl
sbb
mov
mov
fldenv
add
jb
pop
mov
add
dec
jnp
mov
cmp
jno
add
xor
aas
insb
shll
adc
lock
test
js
xor
push
leave
sbb
pop
xor
and
jnp
and
aas
jg
inc
repnz
into
pop
int3
cmp
mov
sbb
ss
inc
cmp
add
lea
mov
jge
jne
mov
cmp
fstpl
fs
or
mov
push
inc
or
mov
cmpl
cwtl
sti
inc
xchg
fstpl
push
jb
mov
adcb
cmp
mov
bound
mov
dec
ja
xchg
and
les
icebp
lret
xlat
dec
fnsetpm(287
enter
mov
subb
pop
js
mov
scas
pusha
adc
xor
jmp
imul
lock
stos
lods
push
rcll
inc
insl
clc
inc
mov
jp
fstps
mov
adc
mov
imull
or
das
jg
push
es
cmp
pop
cld
ja
into
lcall
ss
shrb
jmp
cli
faddp
pop
jne
mov
push
insb
fwait
sbb
mov
adc
lds
push
push
daa
or
int
xchg
fldt
adc
inc
or
or
mov
xchg
push
and
lds
subl
mov
push
js
add
sarl
bound
cmp
mov
addr16
int3
adc
mov
xlat
pop
aas
loop
jae
aad
pop
dec
scas
mov
xchg
stos
cmp
and
movb
mov
ret
push
lds
lock
push
inc
lahf
dec
arpl
fs
pop
dec
pop
lods
xchg
cmp
es
dec
jo
cmpsl
pop
fcomps
mov
fmuls
insb
rolb
mov
fimuls
sub
cmpsb
add
outsb
pop
shlb
dec
add
jo
call
cmp
jecxz
mov
sub
divl
stc
adc
cmp
pop
outsl
and
jl
lret
jl
fisubl
push
jle
jp
jne
mov
shl
pop
rcr
jl
stos
add
rcr
xor
sti
lret
mov
sbb
mov
or
inc
mov
push
add
pop
bnd
or
gs
inc
add
hlt
jecxz
test
push
mov
fwait
lahf
adc
pop
push
call
pop
loope
dec
ret
add
push
subb
dec
movsl
inc
sbb
data16
cwtl
jae
or
mov
dec
loopne
push
popf
stc
fildl
lea
mov
push
adc
fs
add
pop
mov
fsubrl
or
out
add
xor
mov
xor
fiadds
or
popa
adc
cmp
sub
loope
or
sub
push
fmul
pop
js
jge
dec
dec
pop
push
cwtl
mov
popf
xor
out
cmp
mov
push
mov
and
test
xor
inc
push
xchg
sub
push
add
jl
movsl
push
icebp
mov
mov
inc
gs
aad
out
sub
xor
in
clc
es
pop
inc
std
icebp
push
test
fcomi
mov
adc
add
mov
cld
pop
test
sub
stc
je
outsl
inc
out
xchg
inc
je
xor
in
pop
inc
in
insl
inc
fidivrl
aas
imul
sbb
rdmsr
popa
mov
jmp
movsb
cltd
push
dec
or
mov
jg
aas
jle
xchg
pop
add
mov
adc
pop
xchg
lds
cmp
mov
xchg
xchg
test
scas
out
and
lret
rol
add
inc
popa
jmp
fstl
push
mov
lock
inc
test
bnd
das
out
adc
lods
inc
lahf
push
dec
rorb
jnp
mov
push
pop
shll
test
fdivp
out
dec
push
or
sbb
es
ret
add
es
loop
sbb
sub
jecxz
pop
repnz
adc
fisubrs
add
cs
clc
jae
push
push
jnp
and
pop
loop
shrb
or
jecxz
cs
cmp
ljmp
test
hlt
push
mov
dec
fs
mov
jl
lretw
add
mov
adc
imul
pusha
adcl
dec
ja
jbe
movsb
xchg
jmp
xor
push
scas
jns
jo
mov
into
scas
lret
js
notb
inc
fists
loope
aas
nop
mull
test
push
sub
in
pop
dec
sbb
add
ds
cmp
lret
rorl
mov
inc
inc
popf
bnd
icebp
scas
pushf
xchg
cmp
sbbl
stc
mov
test
pushl
imul
jo
or
push
mov
addl
or
lahf
cli
xchg
add
mov
mov
mov
hlt
mov
xlat
cs
mov
fcomi
pop
shl
xchg
xchg
sub
dec
icebp
adc
aad
push
fwait
push
je
jl
xchg
out
cltd
dec
inc
fildll
cld
xchg
aam
jae
aaa
cmc
sub
mov
inc
inc
or
outsb
sub
jbe
hlt
inc
sub
negb
lods
dec
pop
add
add
jg
cmpsl
daa
in
jp
add
popf
punpcklbw
xchg
mov
ret
lods
add
ds
mov
ficoms
sbb
mov
push
pop
xor
fwait
mov
push
roll
and
hlt
fdivr
mov
enter
ja
loopne
aad
call
cmp
enter
outsb
sbb
and
mov
outsl
mov
ljmp
and
out
jns
pop
pop
dec
sarl
orb
inc
jle
add
js
dec
ret
sarl
and
push
rorl
jo
cwtl
sub
cmpsb
in
out
sbb
xchg
sbb
pop
inc
and
push
sbb
enter
cmc
push
pop
mov
add
repz
arpl
lret
xchg
pop
lods
lcall
add
mov
sbb
cld
pop
and
cwtl
sbb
imul
bound
repnz
adc
sbbl
adc
lea
incb
rclb
stos
mov
push
fdivs
cltd
js
inc
jecxz
and
aaa
pusha
dec
push
cmp
jnp
mov
fwait
insb
adc
sbbb
fidivrs
in
pusha
stc
jp
addr16
rcll
arpl
sbb
popa
adc
mov
fldenv
pop
leave
xchg
sub
aas
outsb
mov
dec
xor
mov
scas
sub
lods
mov
adc
ss
jge
test
int
fs
and
jg
mov
divl
sarb
sub
pop
pop
rcl
jnp
dec
out
pop
fisubs
or
jae
add
test
xchg
add
in
or
dec
mov
in
je
cwtl
rorb
dec
jb
movsb
cmp
dec
mov
stos
ljmp
cmc
inc
fisubs
lock
and
lahf
fldl
mov
in
ret
mov
fwait
in
iret
imul
sbb
add
data16
sub
push
xor
mov
aad
aaa
out
xchg
sub
and
cmp
mov
jae
aaa
dec
in
daa
imul
ret
cmp
push
out
pop
sbb
scas
inc
cmp
in
imul
adc
jp
pop
mov
jno
scas
push
jp
fcoml
icebp
mulb
es
hlt
outsb
test
jae
mov
ja
mov
mov
sub
mov
mov
sbb
or
movsb
mov
sub
loopne
loopne
mov
inc
adc
inc
cmp
jne
xor
mov
in
mov
cmpsb
inc
loope
push
inc
sbb
xor
mov
pop
fldt
lcall
cltd
mov
and
mov
push
and
jno
jmp
push
les
cmp
in
pop
lahf
lock
cmp
das
jge
data16
sahf
mov
dec
add
fnstenv
xchg
sub
enter
lcall
sahf
xor
lret
adc
in
sti
push
push
push
xor
xchg
push
test
int3
push
aas
cmc
mov
jp
adc
sbb
out
xor
mov
sub
sbbl
stos
pop
push
dec
ret
cli
int3
into
stos
dec
mov
add
sub
pop
out
add
inc
enter
and
push
dec
add
or
iret
ljmp
shlb
inc
bound
leave
stos
cmp
dec
cmp
fnstenv
adc
push
xchg
cltd
bnd
subl
je
addr16
int3
pop
xchg
and
xchg
mov
cmp
xorb
inc
scas
mov
jge
jbe
mov
push
mov
popa
xor
es
shrb
lret
mov
mov
insl
pop
cmpsl
push
mov
out
test
testb
cmc
pop
fcoms
test
aaa
jne
jnp
dec
mov
mov
ljmp
jno
out
dec
dec
push
cmp
lock
arpl
daa
addl
scas
mov
mov
loopne
clc
adc
add
push
sarb
out
mov
xlat
mov
pop
jg
and
lahf
sarl
xchg
xor
pop
cmp
pop
lcall
mov
ficoml
mov
fidivrl
jecxz
jecxz
jno
sti
cmpsb
and
les
es
pop
pop
xor
test
lcall
mov
xor
imul
xor
cmp
fdivrl
pop
icebp
out
test
loopne
imul
add
leave
inc
push
icebp
mov
dec
sbb
ds
adc
pusha
lods
out
lods
cld
inc
mov
fs
cmp
mov
pop
push
test
rcl
mov
ret
xor
lret
pop
ret
dec
dec
push
pop
push
push
xchg
pop
or
out
loopne
inc
mov
shl
push
sahf
jno
ret
and
pop
rcr
test
mov
loop
xorb
subl
pushf
xchg
dec
fs
sbbb
mov
sbb
jecxz
inc
jb
inc
mov
ja
fisubl
or
ljmp
ja
es
aam
sub
sub
insl
push
dec
ret
xor
sbb
lods
fisubs
mov
add
xor
icebp
push
mov
fcmovnu
mov
imul
inc
loop
insl
and
push
adc
stos
adc
test
mov
cltd
jns
jge
mov
adc
cld
faddl
mov
sbb
iret
subb
sbb
fistl
test
sbb
add
inc
fidivs
push
xchg
cmp
mov
mov
dec
cmp
jg
pop
cmp
das
jns
and
adc
pop
mov
cltd
lds
jge
mov
addl
or
pop
xlat
cmp
inc
sub
xchg
sub
mov
cmp
bound
jb
xor
adc
push
or
sub
pop
mov
std
push
and
mov
cmp
inc
mov
inc
aas
or
dec
xor
mov
sbb
add
jg
push
fs
push
push
sub
clc
enter
lods
inc
test
aas
inc
xor
cs
dec
loopne
jle
out
pop
dec
add
sbb
subl
cmc
add
loop
test
pop
mov
or
icebp
add
push
gs
loope
push
jecxz
rolb
push
or
fsubs
stc
subb
mov
call
push
daa
orb
pop
imul
mov
daa
outsl
je
push
into
pop
ss
add
dec
call
icebp
insb
mov
adc
xchg
sub
jg
lock
mov
and
cmpsb
mov
outsl
dec
fldt
fwait
cmp
adc
lods
in
popf
sbb
dec
xchg
push
test
sbb
mov
mov
xor
lret
shrb
inc
push
cmpsb
xor
pop
in
pop
jmp
push
jecxz
pop
fsubrl
clc
add
sub
or
js
iret
adc
pop
adc
or
dec
xchg
add
loope
dec
push
mov
push
in
ljmp
adc
je
xchg
mov
jae
insb
mov
xchg
sub
cltd
std
jmp
or
std
dec
cwtl
call
xor
pushf
addr16
clc
xchg
stos
add
sbb
sub
mov
ljmp
es
pop
fildl
leave
ret
mov
bound
jecxz
and
jmp
and
jmp
icebp
outsl
sti
popa
jb
dec
cmp
repz
adc
je
mov
jns
into
xchg
jg
push
or
shrb
scas
xchg
inc
fsubrs
adc
lcall
pop
mov
sbb
xor
hlt
jg
fisubl
dec
movsb
pop
inc
repz
dec
das
xchg
xor
aad
imul
dec
and
shl
cmp
lcall
cmp
push
insb
sub
rcrb
pop
jns
mov
je
adc
jecxz
iret
dec
push
push
xchg
and
xor
insb
pop
clc
outsl
push
push
pop
cmc
adc
out
movsl
xor
shl
adc
push
xchg
insb
js
mov
xor
and
fidivrl
push
test
mov
mov
dec
rorl
jmp
pop
dec
out
and
mov
popa
loope
out
mov
adc
aad
test
aas
push
xor
add
push
in
xor
push
imul
jge
adcb
dec
cmp
pop
add
and
mov
adc
or
mov
dec
notb
divb
fs
adc
out
aam
test
test
fbstp
or
xor
mov
ljmp
push
or
mov
data16
lea
ljmp
add
pop
enter
outsl
les
cmp
gs
scas
repnz
adc
xchg
add
lret
cmp
mov
jle
mov
dec
fcmovu
lods
xorb
sahf
andl
hlt
insl
ret
scas
push
mov
arpl
mov
pop
repnz
jge
sahf
push
aas
pop
add
stc
in
mov
cli
dec
dec
cmp
mov
cmp
add
aad
push
lds
jns
push
je
mov
dec
adc
stos
ds
mov
inc
in
sub
jbe
mov
mov
testb
es
std
test
mov
arpl
scas
jno
sub
jg
dec
imul
xchg
cmc
push
repz
int
popf
std
mov
dec
jle
and
shrb
pop
mov
pushf
faddl
fwait
mov
and
dec
and
push
push
inc
sub
icebp
mov
cmp
push
or
in
fucomip
push
inc
or
loope
das
cmp
inc
push
pusha
xchg
cmp
popf
add
sahf
lods
lods
idivb
lods
es
dec
or
sbb
fs
pop
imul
out
loope
xor
repnz
jo
inc
fs
mov
lods
inc
out
sub
mov
gs
xchg
sub
out
scas
xchg
sub
data16
xor
in
das
stos
inc
lahf
jb
popa
inc
inc
fdivs
add
mov
sbb
cmpsb
cmp
mov
sub
jo
sub
shlb
sti
and
and
and
rclb
cli
xchg
sub
sub
add
gs
xor
ljmp
outsl
addr16
adc
jmp
jg
subb
xchg
jae
inc
fnstsw
sub
mov
xor
les
rorl
jo
cs
je
jg
sbb
lcall
mov
pushf
xor
jl
jns
in
cltd
xor
inc
aam
ss
cmpsb
pop
gs
xchg
gs
pop
pop
dec
loope
mov
cld
xchg
and
xor
imul
shll
shlb
pushl
test
sbb
leave
adc
jo
pusha
inc
mov
insb
jp
push
push
int
add
mov
dec
testb
xchg
pop
mov
or
aaa
mov
je
js
cmpsb
aad
pop
inc
mov
push
mov
xchg
push
mov
jne
cmp
outsb
jle
mov
jae
cmc
sbb
jb
push
mov
cld
and
dec
inc
and
inc
mov
lock
testb
xor
push
pop
shrl
jbe
pop
mov
cmp
mov
mov
in
jae
shrl
imul
rcrl
pop
ds
mov
xchg
imul
pop
jo
aad
jns
fisttpl
or
mov
fs
dec
xchg
dec
jmp
out
rcl
cmp
push
cmc
cmp
ret
inc
add
or
push
cmp
dec
int3
add
std
out
jecxz
mov
cmpsl
cmp
xchg
in
lds
call
shl
fnstcw
inc
iret
adc
in
mov
sti
and
sub
imul
ja
fwait
xor
pop
into
mov
push
iret
movb
fdivrl
push
pushl
mov
push
mov
sbb
loop
out
push
es
inc
mov
pop
sbb
dec
dec
or
or
popa
js
pop
jge
mov
leave
add
jno
jno
xchg
testl
aad
std
xchg
pop
aas
and
in
shrb
dec
xor
cmp
sbb
sub
iret
test
std
out
loop
int3
jae
orb
jns
mov
sub
inc
push
mov
jl
rcl
je
mov
cmpb
or
dec
pusha
ss
cmp
push
imul
addb
sub
or
loope
ret
pop
add
xchg
fcoml
sbb
mov
pop
dec
call
sbb
ret
adc
sbb
inc
jbe
jp
mov
xorb
lods
call
xor
or
add
push
test
ror
xor
dec
mov
clc
push
movl
test
sub
pusha
stos
jbe
ja
iret
and
stc
loop
or
imul
movsl
cmpsb
cmp
lds
adc
fwait
out
mov
pop
push
mov
xchg
sbb
int
pusha
popa
cmp
loop
or
stos
mov
arpl
scas
testb
xchg
mov
jb
in
aaa
sbbl
push
jmp
les
lret
cld
rcrb
out
or
adc
fistpl
out
mov
shll
xchg
adc
sbbb
push
add
push
xor
pop
pop
popa
add
repnz
in
xchg
cwtl
or
cmpsl
in
jne
iret
xchg
inc
enter
leave
or
jl
imul
lcall
pop
sub
mov
jmp
outsl
mov
xchg
jae
cwtl
roll
pusha
adc
leave
cmp
inc
inc
mov
sbb
push
sbb
jg
pop
mov
repnz
xrelease
daa
je
subl
dec
jecxz
out
cmp
cmp
gs
mov
cmpsb
ja
rcrb
inc
xchg
cmp
ds
jecxz
in
in
push
adc
mov
sub
das
rol
mov
add
mov
pop
mov
addb
icebp
xor
es
adc
in
out
sti
inc
and
mov
inc
ret
imul
ss
dec
movsl
shrl
mov
xor
pop
lret
popf
push
repnz
xchg
sub
adc
enter
negb
xchg
dec
jecxz
aas
xor
jg
or
sbb
jecxz
and
pusha
pop
ljmp
push
dec
jb
pushf
xor
xchg
ljmp
je
mov
sbb
inc
imul
sbbl
sub
test
outsb
dec
sub
in
pop
sbb
inc
fs
jbe
lcall
mov
mov
fldcw
test
add
sub
enter
cmp
pop
insb
xor
dec
movsl
loop
push
shrl
jmp
loopne
jo
push
adc
jae
dec
xchg
decl
push
or
jno
dec
mov
sti
mov
aad
adc
bound
das
inc
daa
mov
or
jnp
add
fs
mov
mov
mov
jle
xchg
sbb
int3
xchg
sti
std
xor
fs
inc
clc
orl
push
mov
dec
loop
pop
inc
lret
or
imul
stc
mov
pop
pop
cmp
or
mov
inc
bound
imul
mov
mov
lds
add
add
dec
mov
add
mov
xchg
mov
push
push
jecxz
cmc
mov
xchg
adc
bound
out
into
pop
jno
xlat
outsb
push
mov
push
push
or
add
nop
leave
rcr
in
or
dec
inc
push
dec
adc
lea
stc
push
fcmovu
sub
jo
lock
add
inc
xchg
xor
add
loope
fsubrl
and
cmp
xchg
jns
notl
and
testl
movsb
insb
insl
pextrw
adc
movl
mov
lea
sbb
or
shl
push
test
cmp
pop
jb
sub
mov
pushf
xorl
inc
das
or
dec
or
mov
out
les
les
popl
xchg
mov
jne
loopne
xchg
fidivl
push
dec
dec
idivb
mov
inc
jmp
add
mov
fnstsw
dec
ja
aam
in
insl
inc
jae
fsubrs
xor
dec
imul
dec
xchg
and
dec
xchg
push
jp
xlat
js
and
or
js
xchg
or
xor
xor
push
adc
fdivs
pop
fcoml
add
pop
jb
into
mov
ds
add
dec
cmp
pop
outsl
mov
clc
lea
xor
shr
push
and
lds
adc
adc
shll
sarl
arpl
fnstsw
and
lret
and
cmpsl
or
mov
std
ljmp
out
xor
mov
imul
add
and
xlat
hlt
and
push
aas
add
loope
mov
sub
or
outsb
adc
mov
mov
pushl
mov
and
inc
dec
add
arpl
sbb
jmp
loop
jns
mov
xor
mov
sahf
std
xchg
int3
mov
dec
out
xchg
in
test
nop
in
push
jecxz
push
in
xchg
mov
or
or
jg
jp
cmpsb
aas
ljmp
das
sbb
xchg
mov
fisubrl
push
scas
add
or
into
shlb
mov
imul
lret
das
ja
or
jo
popf
hlt
xchg
lods
cmp
imul
outsl
mov
insl
sbbl
iret
fbstp
lret
sbb
xchg
adc
dec
in
pusha
dec
cmp
out
xor
push
cmc
dec
hlt
mov
xchg
shl
xor
xchg
lea
aaa
pop
je
inc
mov
cbtw
inc
int3
cmp
sub
insl
adc
cmp
xchg
sub
jecxz
mov
ds
pop
push
jge
roll
fcoms
cmpb
dec
push
int3
mov
pusha
mov
add
sbbb
or
cmp
pop
cld
mov
lods
dec
mov
cmp
add
sub
lods
lret
push
pop
repnz
jae
jmp
push
sub
ret
pop
mov
cltd
add
aam
jae
cli
push
fimuls
xchg
xor
sti
sbb
fsubs
jge
popa
sub
xor
push
insb
fbstp
add
cmp
jmp
dec
fisubs
mov
in
insb
sti
or
es
push
pusha
sbb
dec
jno
inc
les
sbb
es
mov
cs
jp
shrb
clc
nop
leave
xor
std
mov
or
push
inc
jno
fs
sbb
or
sub
aam
push
inc
push
pop
jl
or
inc
bnd
smsw
popa
dec
jle
notl
nop
popa
cmp
jecxz
pop
loop
dec
mov
xchg
push
out
jl
mov
mov
scas
ret
movsb
cmp
cmp
jno
movsb
pop
mov
mov
xor
sbb
jg
lret
pop
nop
loope
into
cmp
sbb
and
shl
lret
jmp
sub
mov
fwait
mov
movsl
icebp
add
ljmp
lret
aam
push
fstpl
push
leave
sub
xor
dec
jecxz
push
push
sarl
push
dec
mov
sbb
push
jo
fidivrs
xchg
sub
dec
hlt
arpl
or
jle
dec
cmp
mov
pusha
inc
outsl
adc
xchg
int
dec
mov
in
jo
mov
mov
fidivrl
inc
lret
jp
cltd
inc
mov
stos
or
adc
inc
add
xchg
loop
clc
add
cmp
out
and
xchg
xchg
cmp
cmpsb
icebp
adc
mov
pop
mov
cmpl
and
sbb
mov
add
loopne
pushf
or
lea
lcall
or
arpl
xchg
xchg
test
lcall
cwtl
inc
decl
dec
or
push
mov
sti
ja
sahf
mov
pop
or
les
test
scas
add
dec
sub
sarl
mov
mov
shrl
and
cmp
lods
ljmp
pushf
cli
inc
pop
fbstp
loop
data16
pop
imulb
outsb
iret
xlat
mov
xchg
in
and
aam
test
sbb
pop
mov
jne
cmp
imul
insl
add
and
pusha
pop
or
es
gs
xchg
outsb
cld
or
mov
int3
lret
mov
and
xor
repnz
insb
lock
fldcw
cmp
imul
test
pusha
mov
ljmp
and
cltd
rclb
mov
pop
mov
pop
sbb
mov
not
sub
into
sub
sarb
sbb
adcl
cmovs
and
mov
rorl
mov
inc
repz
add
in
ja
adc
ds
xchg
push
popf
or
push
insl
dec
mov
dec
jmp
xor
jns
mov
fldcw
xchg
sti
cmp
dec
and
leave
xchg
xchg
sbb
sbb
pusha
ss
faddl
add
lods
sti
and
dec
mov
sub
pusha
xchg
xchg
sarb
add
shll
inc
pop
sub
jp
mov
xorb
cli
push
mov
cmp
hlt
adc
test
fcompp
and
mov
xor
ret
movsb
lahf
mov
pop
lods
pop
test
inc
sbb
jmp
pop
adc
daa
lcall
and
mov
jne
xor
dec
xchg
push
add
adcb
outsl
and
xor
and
cmp
imul
mov
adc
push
pop
outsb
add
xchg
pop
sub
movsb
cmp
adc
sbb
mov
cli
pop
idivl
inc
or
rcll
mov
std
stc
mov
push
and
or
fiadds
sbbl
jmp
insb
subb
jecxz
xor
in
push
clc
cs
xchg
inc
imull
jp
fistpl
and
test
inc
fsts
ja
inc
xchg
pusha
fisttpl
sahf
jge
and
cmpb
xchg
sub
cmpsb
imul
mov
xchg
in
movsb
lea
mov
ret
and
inc
pop
add
adc
add
cltd
jle
mov
mov
fisubs
xor
inc
sahf
jne
push
lahf
inc
and
sti
inc
push
push
stos
push
int3
dec
xor
jmp
adc
cmp
inc
loopne
mov
into
xor
shrl
jl
loope
sbb
scas
cmp
subb
lret
popa
jbe
sub
stos
mov
arpl
dec
push
xlat
inc
jle
stos
inc
andb
cltd
or
mov
push
mov
adc
and
jmp
jne
movsl
fdivrl
icebp
into
fcompl
add
std
add
xchg
pop
sub
sub
jmp
clc
or
mov
out
pusha
or
aad
cli
or
popf
xchg
cld
stos
jae
stc
add
out
ret
xor
gs
xor
ljmp
adc
aaa
ret
inc
lods
hlt
dec
in
cli
cmp
ret
enter
mov
hlt
daa
adcl
insb
cld
inc
stos
test
js
lret
out
sub
out
cmp
jecxz
mov
inc
loop
addr16
xor
shr
xor
nop
loop
call
inc
xor
lret
pushf
cli
jg
test
outsl
outsb
adc
xchg
iret
or
mov
dec
dec
dec
movsl
gs
pusha
mov
or
outsl
roll
insb
add
ljmp
mov
jg
inc
mov
rclb
add
jbe
scas
mov
test
add
fwait
xor
andl
or
and
ret
or
aas
nop
xchg
es
inc
fld
pop
and
mul
dec
jmp
out
jle
push
popf
pop
cmpsb
mov
mov
imul
outsl
pop
or
mov
hlt
dec
cmp
call
sub
ja
je
xchg
xchg
jl
push
mov
jns
js
jno
arpl
decl
add
enter
ss
dec
inc
filds
data16
jbe
aad
lcall
sti
decb
adc
sarb
js
test
push
pop
aaa
scas
ficomps
sbb
mov
jge
xchg
les
in
push
xor
mov
dec
cmp
lds
rcrb
adc
sub
jo
xchg
mov
jbe
inc
xchg
inc
xchg
jb
inc
gs
faddl
add
fldt
fldl2e
xchg
pop
cltd
out
xchg
sahf
mov
add
jno
sbb
sbb
out
mov
cli
cltd
pop
femms
flds
adc
daa
pop
and
mov
scas
add
addr16
test
int
push
inc
leave
mov
in
insl
shl
push
xor
mov
fldenv
ja
imul
rcr
or
lret
cmpsb
lock
mov
fsubrs
nop
test
stos
jbe
in
jbe
nop
pop
or
cmp
fdivl
pop
popa
cli
xchg
jns
lds
sbb
in
and
inc
out
cmc
push
in
cmpsb
mov
inc
adc
fldl
jle
xchg
dec
pop
addr16
out
std
testl
sbb
sbb
xor
inc
pop
cmp
and
mov
fdivrl
cltd
ja
sub
leave
out
sub
jp
and
xchg
adc
icebp
adc
pop
shrl
xchg
cmp
mov
cmp
mov
stc
and
mov
pop
rcrl
mov
sahf
jne
idivl
mov
mov
divps
adc
stos
inc
mov
mov
ja
outsb
ficompl
sti
lea
fsubl
mov
aam
add
mov
xchg
mov
cmp
push
mov
icebp
xchg
mov
push
mov
inc
jge
iret
fdivr
faddp
or
repnz
dec
mov
xchg
add
addr16
xchg
pop
add
adc
push
adc
sahf
pop
decl
pop
in
sub
loopne
mov
addr16
inc
scas
into
loopne
outsl
push
fsubr
fisttpll
xor
js
fwait
in
std
and
inc
xchg
pushl
xor
xchg
sub
xchg
push
mov
dec
les
or
or
jp
stc
pop
cld
mov
or
nop
cmp
notb
fisubrl
filds
or
adc
xchg
lcall
and
cmpsb
dec
jne
add
dec
fsubrs
xor
cmp
sub
add
movsb
xchg
cmp
andb
dec
jnp
mov
fnstenv
subl
cli
orb
pop
and
outsl
loop
iret
aad
mov
or
cwtl
bound
cwtl
fwait
mulb
and
inc
inc
in
xchg
jo
add
pminub
cwtl
dec
fadds
rorb
sub
in
mov
lods
inc
mov
int
or
or
jb
icebp
cmp
mov
inc
cld
xor
xor
cld
mov
pushf
add
or
cmc
cwtl
or
mov
mov
adc
jge
xor
xor
inc
lock
xchg
stos
inc
sbb
mov
out
ds
gs
test
jecxz
repz
mov
movsb
sarb
pop
cmp
jo
xor
in
bound
pop
cmp
bound
test
push
push
fs
lret
test
and
imul
jecxz
mov
ficomps
jno
loopne
cmp
mov
sbb
inc
ficomps
xor
push
xchg
aas
aas
xorl
ss
neg
jmp
mov
ret
ret
or
das
adc
or
hlt
pusha
inc
mov
jbe
cmc
push
push
inc
sbb
je
dec
mov
fnclex
imul
pop
fmuls
dec
mov
lods
cmpsb
or
frstor
popa
mov
in
ljmp
in
push
cmp
mov
mov
sar
int
cld
pop
cmp
nop
lods
pop
push
mov
mov
mov
fidivs
mov
inc
es
fdivrs
or
push
lock
test
sub
scas
adc
or
out
nop
or
scas
mulb
xor
mov
call
mov
xor
push
fwait
cli
mov
mov
rol
sub
mov
pop
cmp
sti
in
les
fstl
push
fxch
add
test
cmp
inc
fldenv
push
imul
iret
pusha
roll
add
xchg
stos
inc
pushf
and
mov
mov
int3
decb
ret
xor
test
aam
inc
pop
dec
or
jmp
push
aad
mov
in
es
iret
sub
fisubs
lret
and
mov
test
cwtl
xor
pop
rorl
cmc
dec
out
or
insl
mov
sub
inc
mov
jmp
test
fcom
arpl
xchg
mov
cld
enter
push
pop
mov
enter
xor
daa
lcall
cwtl
sarl
cmp
xchg
int
mov
mov
mov
jo
and
mov
es
pop
fidivrs
sbb
vshufps
xchg
test
outsl
push
xor
lea
sub
data16
push
ss
fistps
daa
mov
cli
sbb
dec
imul
cmp
and
dec
in
xchg
mov
psadbw
xor
push
push
xchg
je
andb
sub
outsb
into
mov
adc
cmc
mov
movsl
js
push
adc
or
jecxz
xchg
subb
push
out
imul
sbb
inc
jb
push
movsb
push
das
mov
imul
push
inc
andb
add
push
stos
sahf
adc
dec
xor
in
inc
fucomp
jo
fs
pop
sbb
cmp
dec
push
es
ret
ret
jmp
sub
sbb
loop
add
in
cmp
push
push
imul
sbb
mov
jp
call
dec
and
cmp
jns
stos
aad
jbe
xor
xchg
or
std
or
cmp
shl
es
int
in
subl
mov
jne
pushf
mov
sub
xchg
pop
mov
lods
loopne
add
pop
jp
in
lcall
jmp
test
aam
add
aad
lahf
sbb
inc
lods
mov
fistpl
test
cmp
and
lods
adc
or
jp
scas
and
cmpsb
pop
cld
iret
or
ss
arpl
fwait
into
cmc
lahf
daa
cmp
xchg
negb
push
icebp
mov
movaps
mov
out
nop
ss
repz
ret
call
xchg
or
cwtl
jge
jb
jne
rcl
ficoms
adc
cmp
cld
xor
in
and
fs
sub
rdmsr
lret
fs
rol
or
pop
lds
in
xchg
fstps
mov
adc
inc
push
cwtl
and
push
insb
frstor
test
negl
std
addr16
stos
aad
lahf
stos
pop
ret
add
xchg
push
stos
push
inc
mov
js
or
xchg
lock
lret
mov
cmc
push
ficoml
call
repnz
shr
jnp
iret
aad
in
sub
jmp
jno
jo
sub
nop
stos
mov
and
fdivp
lahf
fistpll
out
add
dec
icebp
mov
rol
sbb
imul
scas
dec
sub
mov
ret
andl
or
sahf
daa
test
call
cli
xchg
adcb
jns
or
shll
sbb
sbb
add
mov
inc
push
ja
xchg
in
add
mov
add
insl
sub
les
mov
xor
repz
lret
inc
cwtl
mov
jb
jmp
leave
fucomi
inc
push
xchg
into
dec
add
cld
ret
andl
add
in
lods
jle
popl
movsb
xorb
xlat
outsb
ret
mov
xor
fistpl
mov
xor
sarl
dec
mov
adc
jns
and
push
push
bound
push
adc
fisubl
movnti
jmp
hlt
ja
imul
lock
push
shl
dec
jecxz
jnp
add
popf
push
lret
jmp
and
jmp
mov
shll
adc
adc
xor
test
addr16
or
insl
sbb
scas
inc
pop
jo
cmp
int
shlb
std
dec
lahf
xor
or
ss
dec
stos
mov
fsts
cmp
hlt
out
mov
out
imul
insb
sbb
mov
lahf
mov
xor
xor
inc
mov
xor
nop
std
jbe
test
cltd
jnp
lret
daa
push
bound
outsl
and
xchg
imul
mov
mov
in
cmpsb
in
mov
pop
inc
stos
inc
js
inc
cltd
aad
dec
stos
sar
and
sub
sub
and
or
cmpsl
jge
mov
and
int
and
and
clc
aas
xor
xchg
scas
in
inc
out
xor
notb
push
jne
jae
xlat
repz
js
xor
aaa
subb
flds
ljmp
pop
sarl
sbb
pushf
or
in
or
push
cmp
repnz
cmp
fildl
ljmp
mov
test
adc
aaa
mov
outsb
out
xchg
les
in
ljmp
pop
insb
bound
rcrb
shlb
in
dec
andl
out
loop
sub
out
adc
iret
or
in
lods
cmpsb
lock
or
push
dec
pop
fimuls
and
adc
push
mov
jge
pop
pop
or
mov
out
mov
cmpb
jno
push
adc
cwtl
mov
or
lea
sbb
icebp
xor
mov
insb
jl
loope
ss
out
mov
popf
xor
ljmp
jmp
aad
jne
and
fucomp
inc
daa
pop
sub
mov
dec
or
pushl
xchg
mov
lahf
adc
mov
jno
push
mov
dec
fstl
cmp
dec
repnz
or
mov
and
jo
jae
fnstcw
cmpsb
test
sub
sarl
push
ror
mov
jae
mov
cmovbe
shrl
arpl
aam
insb
pop
scas
and
pop
lahf
insb
add
stos
mov
sbb
into
lcall
inc
ja
mov
push
subl
mov
lock
xchg
cs
adc
lret
sub
cld
pusha
dec
dec
lds
out
dec
imul
lds
pop
cmc
dec
mov
sub
call
std
inc
inc
sub
pop
sbb
iret
data16
jl
in
push
pop
mov
xor
push
fnsave
push
cmovo
icebp
cwtl
inc
fimuls
cmp
jo
test
outsb
cmp
pop
inc
loop
mov
jle,pn
lock
cwtl
sub
mov
shl
mov
pop
xor
clc
imul
adc
jne
ret
and
push
insl
sbb
xor
imul
jne
movsl
les
mov
adc
jb
add
sub
push
imul
xlat
fldcw
sbb
mov
mov
mov
outsl
std
cltd
jo
inc
sbb
mov
mov
shl
in
adc
ret
in
adc
push
cwtl
add
push
mov
loopne
popf
stos
inc
rcpps
frstor
inc
into
sbb
test
adc
pop
call
out
popf
mov
or
push
repz
jno
shll
lcall
dec
mov
adc
loopne
test
divl
inc
fadds
sub
fstl
fiadds
xor
mov
in
cmp
divl
cmpsl
int
mov
and
xor
add
xchg
das
je
xchg
mov
out
cmpsl
dec
fs
push
sar
mov
sbb
leave
int
lea
adcl
sub
mov
cli
hlt
popa
dec
sbb
lret
nop
mov
insb
xlat
insl
sbb
lds
jb
jmp
add
fcomp
fldenv
or
mov
mov
cmp
gs
inc
call
in
adc
rorb
icebp
nop
mov
pop
mov
addl
mov
in
xchg
pop
jle
add
add
scas
jnp
cmpsb
push
pop
or
mov
xchg
cmc
mov
mov
jge
adc
inc
xorl
jmp
cmp
scas
cmpsl
pop
push
nop
subl
js
popf
mov
call
and
sti
pop
mov
iret
clc
or
subl
jae
sti
jne
ret
pop
mov
cs
pop
clc
test
inc
xchg
sub
loop
push
clc
sahf
sub
pop
adc
mov
xor
jp
inc
test
pop
cmp
aam
adc
sub
fldcw
dec
inc
cmc
lcall
inc
mov
out
cmp
icebp
imulb
mov
mov
lcall
inc
jb
xchg
jo
test
icebp
xchg
mov
iret
and
jno
xchg
add
sbb
jno
repz
into
xchg
xchg
xor
or
ja
aaa
insl
jle
in
pop
sub
push
dec
pop
cwtl
push
lods
repz
mov
jno
jns
push
and
popf
cmp
mov
ret
shlb
push
out
and
adc
insb
ret
sub
xchg
sub
loope
dec
out
mov
lods
xchg
jle
das
cmp
cs
add
cli
pop
add
test
out
or
pop
mov
loopne
push
add
rolb
lret
dec
xlat
inc
cmp
mov
fnstenv
test
rcr
sbb
jbe
dec
jg
lahf
lea
inc
push
mov
pop
or
push
xchg
xlat
shlb
xlat
jmp
adc
addr16
in
iret
and
cmp
mov
jmp
imul
aad
fiaddl
jno
int3
data16
cltd
inc
inc
pop
imul
neg
dec
scas
xor
adcl
push
ss
arpl
or
and
jecxz
inc
push
stos
and
sbb
push
aad
imul
pop
mov
les
push
jmp
or
jo
ljmp
lret
and
pop
xlat
pop
push
mov
push
cmp
mov
loopne
inc
adc
sahf
mov
lahf
leave
jae
or
adc
mov
jne
in
adcl
je
push
mov
test
sub
scas
in
push
xchg
mov
jnp
cmp
out
or
mov
cld
sub
cmp
cmc
mov
mov
dec
fists
fisubs
jbe
int
es
inc
inc
fwait
jbe
cli
stos
push
push
nop
icebp
xor
bound
in
xchg
or
jmp
mov
test
negl
cmpl
loopne
aad
rorb
imul
mov
inc
jle
push
insb
out
dec
lahf
mov
aam
push
dec
xchg
mov
popa
jmp
lods
popf
mov
in
addr16
jmp
mov
lcall
testl
addr16
imul
mov
or
xchg
fcomip
ret
stos
sahf
cmc
pusha
lock
movsb
add
cmp
adc
push
lods
xor
loope
cmp
sbb
push
push
fucom
scas
pop
es
cmp
mov
jp
in
gs
cmp
jno
pop
sti
inc
add
cld
clc
stos
inc
push
xchg
mov
test
xor
mov
cli
or
lods
add
jnp
loope
or
je
es
and
aam
mov
jp
push
pusha
pop
ficoms
test
cmp
fwait
data16
imul
cmc
adc
test
es
rcll
test
fwait
sub
js
push
int3
sbb
outsl
pusha
mull
mov
vandps
lds
push
pop
pop
mov
xor
and
pop
mov
out
pop
fnstenv
inc
out
sub
aad
pmaxsw
inc
pop
in
mov
cltd
push
call
mov
jp
sub
mov
push
std
fistpll
insb
adc
push
jb
sub
lods
test
adc
insb
mov
outsl
jns
sahf
xchg
lock
mov
fsubr
and
stos
rcl
or
mov
inc
pop
xchg
or
adc
inc
mov
idiv
or
adc
inc
shll
xor
jb
add
xor
ficoms
mov
stos
inc
sti
pop
stos
sbb
cld
and
frstor
mov
cltd
idivb
bound
xchg
call
test
mov
negb
pop
das
jge
cmp
pop
mov
xor
adc
mov
sarl
push
xchg
pop
fucomi
add
fwait
repnz
jns
jno
repz
bound
xor
jo
ljmp
imul
nop
push
pop
gs
sbb
ja
inc
pop
popf
dec
jp
dec
mov
pop
mov
hlt
sub
pop
sbbl
stc
jae
lretw
mov
jb
popa
xor
or
push
test
xchg
stos
outsl
lret
cld
shll
add
xchg
dec
jmp
mov
jnp
lods
jg
fdivr
hlt
cs
adc
daa
mov
loopne
jno
jl
aam
fwait
mov
dec
arpl
test
pushf
daa
test
mov
cmc
push
mov
lret
add
inc
pop
and
data16
inc
push
pop
daa
adc
mov
adc
xchg
stc
adc
imul
cwtl
test
cld
pop
jbe
lcall
lods
xor
xor
fisttpl
in
pop
es
and
loopne
pop
fwait
push
cmp
add
stc
enter
jnp
stc
fwait
adc
and
dec
rcl
out
ret
ret
dec
jb
xchg
dec
shlb
in
mov
js
mov
adcl
imull
popa
mov
xor
sbb
adc
add
mov
ret
loope
movsb
lods
push
jp
jnp
mov
rcrl
or
and
push
lret
divl
adc
push
adc
ja
push
or
je
jo
push
jbe
pop
sub
lods
mov
jmp
or
dec
or
mov
push
jecxz
repz
hlt
iret
loop
pop
push
cwtl
or
enter
cmp
mov
test
enter
aaa
call
dec
jno
mov
ret
pop
dec
and
and
add
push
out
xor
cmp
sub
mov
cltd
or
jmp
andl
jg
or
cmp
sar
sbb
add
imul
insl
loope
sub
inc
cmp
xchg
add
ds
mov
sub
adc
fmuls
pop
movzwl
addr16
ss
dec
out
push
leave
shl
es
fldt
into
mov
xor
sbb
repnz
lret
js
repz
std
pop
adc
xchg
divl
and
inc
xor
push
sub
nop
mov
mov
sub
cmp
mov
cwtl
stos
add
sbb
cmp
push
pmaxsw
cmp
jmp
mov
movsl
adc
adc
xchg
and
sbb
daa
stc
out
add
dec
or
inc
jnp
das
pop
sbb
add
loop
sub
rcrb
jmp
aaa
call
and
fadd
fisubl
sbb
outsl
adc
push
dec
mov
fdivl
loope
or
and
mov
fcmovnbe
push
cltd
jge
outsb
add
ret
orb
mov
clc
out
arpl
rolb
lods
std
push
adc
fnstcw
cmp
push
mov
in
xchg
addl
dec
sub
adc
xor
jbe
mov
jnp
inc
cwtl
and
inc
or
mov
sub
mov
lcall
sub
dec
dec
outsb
mov
dec
dec
sbb
lock
cs
sar
rorb
movsb
ret
xor
and
mov
cmpsb
lcall
sub
inc
jge
pop
mov
fwait
cs
push
lahf
divl
cmp
pushf
add
pop
fcompl
push
cld
dec
lret
or
ret
in
dec
lret
push
jecxz
xor
cmp
pop
loop
ror
sbb
dec
inc
das
jmp
shrl
dec
clc
adc
xchg
ret
dec
fdivp
adc
ljmp
sbb
dec
pusha
push
ds
outsl
push
xor
jo
mov
mov
gs
lahf
das
out
int
xorb
adc
sub
and
cmpsb
ret
push
iret
or
push
fnstcw
cmp
ror
xor
xchg
ret
jo
pop
loop
roll
mov
fwait
and
in
and
pop
lcall
mov
out
scas
cld
cltd
jp
xchg
push
dec
in
aas
repz
sbb
hlt
cwtl
cmp
cltd
lock
jne
add
rol
stos
das
xchg
notl
mov
jne
adc
pushf
sub
lret
popa
icebp
dec
push
daa
mov
lds
push
xor
dec
out
mov
ljmp
push
or
mov
imul
xor
mov
sbb
mov
in
or
xor
sbb
dec
sbb
mov
add
daa
cwtd
insl
jmp
test
scas
lods
jmp
out
popf
cmp
jecxz
push
jp
lock
mov
cwtl
das
enter
push
add
imul
fiaddl
xchg
lods
int
push
cltd
lods
cmp
out
test
cmpsl
or
mov
dec
dec
mov
into
arpl
cmp
out
scas
mov
outsl
call
scas
sub
sub
clc
fldt
or
pop
add
clc
mov
out
xchg
xor
mov
push
and
lock
pop
xor
idivl
stos
ss
pop
add
mov
and
mov
mov
into
in
sbb
inc
int3
out
sbb
push
dec
lahf
dec
add
sbb
lahf
mov
aad
es
fidivrl
adc
sbb
mov
in
inc
cli
cmp
in
in
or
ds
sub
sbb
xchg
xchg
lcall
scas
cmp
mov
shlb
leave
fimull
jae
cld
xor
mov
inc
mov
je
cltd
sub
and
mov
xchg
aas
movsb
sbb
stos
std
mov
sub
or
or
or
pushf
mov
add
xor
push
repz
aam
inc
sbb
xor
push
out
sti
sahf
inc
lcall
inc
inc
scas
out
jno
sub
cltd
test
andl
lret
test
aad
out
pop
add
and
adc
push
sar
xchg
dec
leave
xchg
mov
cltd
cmpsl
push
scas
cmc
mov
push
sub
pushf
jge
into
mov
outsb
pop
aad
mov
dec
daa
inc
leave
cmp
gs
sbb
push
jg
gs
mov
ret
aam
jmp
mov
inc
sbbb
adc
mov
jmp
jecxz
out
xor
dec
xchg
or
pop
nop
mov
fidivrs
add
fnsetpm(287
insl
adc
jg
sbb
and
and
dec
cli
mov
daa
xor
cld
jmp
cmpsl
adc
shl
inc
lret
sbb
push
call
scas
jno
add
ds
or
cmpsb
imul
add
rcll
out
xchg
mov
mov
lock
sbb
mov
xchg
dec
jnp
push
mov
popa
push
sub
pop
or
movsb
addr16
aaa
jbe
and
test
les
or
imul
loope
lods
add
push
inc
iret
xlat
out
inc
negb
pop
mov
rol
loopne
ret
xor
mov
cltd
ljmp
cwtl
sbb
jmp
pop
das
mov
cli
out
stc
repz
or
bound
dec
test
or
mov
inc
adc
outsl
mov
orl
jp
cmpsb
idivl
in
dec
push
jge
ja
popf
adc
test
sub
out
mov
movsb
fwait
push
xchg
pushf
cmp
aaa
sahf
mov
in
out
test
jp
xchg
adc
push
out
mov
in
aad
decl
inc
in
movsb
push
icebp
adc
cmpsb
cmc
mov
sbb
mov
scas
out
rcrl
jb
push
push
roll
rorl
idivb
push
and
cli
mov
mov
mov
outsb
jecxz
mov
and
insb
comiss
outsl
and
add
xchg
push
shlb
and
push
out
popa
inc
sub
pop
inc
and
jnp
repnz
dec
pop
js
sbb
scas
sbb
lock
sub
adc
mov
or
sub
mov
mov
pusha
fidivrl
xsha256
cmpsb
aam
testb
enter
ret
fisubrl
or
inc
or
notb
bound
shll
mov
xchg
add
jmp
mov
mov
call
mov
addr16
xchg
sub
pop
or
inc
pop
stos
and
sbb
pop
sbb
cmp
mov
repnz
mov
mov
add
adc
fwait
lea
add
add
icebp
int
adc
push
sbb
or
sbb
imul
jnp
lock
scas
rcl
test
loope
mov
jnp
shrb
adcb
xchg
insb
mov
iret
jecxz
shlb
mov
hlt
lahf
nop
sahf
out
test
adc
lret
pop
push
out
xor
and
fs
mov
mov
push
cli
shrl
pop
push
lds
inc
or
mov
cmp
inc
inc
mov
movl
jle
cmc
jne
jnp
xor
push
jl
mov
adcl
popf
cmp
cld
inc
cld
vcvtsd2ss
ficoml
or
imul
pop
sbbb
cmovae
jae
repz
push
and
lods
inc
int3
push
or
jl
mov
shrb
inc
scas
aas
or
push
hlt
test
fwait
sub
cmpl
xor
movaps
jecxz
outsl
jne
jne
daa
cld
insb
jle
sahf
xor
push
mov
arpl
movsl
dec
js
mov
dec
add
aas
or
xchg
call
mov
and
cmp
inc
pusha
cld
sarl
sbb
xor
movsb
add
lahf
sbbb
sti
or
and
push
lcall
aam
ss
lock
mov
int
xchg
push
pop
imul
scas
call
mov
mov
shll
pop
imul
xor
lahf
movsb
cmc
adc
mov
in
xchg
cmp
or
outsl
inc
jp
out
pusha
jbe
push
sbb
mov
jns
xchg
aas
std
jo
mov
sarl
mov
dec
dec
or
adc
lret
mov
int3
aaa
mov
mov
insw
xchg
aad
mov
jecxz
adc
mov
fadd
and
pop
ret
aad
push
mov
movsb
addr16
inc
stos
mov
dec
push
jne
xchg
js
clc
shrl
jecxz
nop
subl
jbe
loopne
pop
jb
add
nop
or
lock
push
sbb
shll
fistpl
xchg
jbe
pop
mov
lds
sbb
adc
orb
pop
sub
or
mov
jno
jnp
mov
mov
popa
call
sbb
cmpsb
subl
aad
lods
sti
xchg
xor
xchg
pushf
or
xor
call
add
sahf
mov
cli
cwtl
in
adc
cmp
test
shr
cmp
lret
data16
mov
mov
dec
in
dec
inc
fdivrs
je
out
rcll
fsubrp
jge
roll
pop
mov
ss
xchg
fwait
sbb
mov
loop
pop
lds
jge
iret
stc
adc
gs
and
aaa
pop
addr16
cmp
mov
repz
pop
rcrl
fs
xor
popa
push
mov
push
push
pop
add
int
mov
adc
or
lods
inc
jb
mov
fs
out
cmp
test
add
and
mov
xor
lds
mov
inc
enter
arpl
fdivp
dec
loop
push
mov
xor
xchg
xor
xor
cmp
mov
xchg
push
dec
add
out
fnstsw
rorb
pop
mov
lods
xchg
loopne
je
shlb
lock
insl
xchg
cwtl
aam
mov
jge
out
sub
jne
stos
pop
adc
add
loop
and
sub
movsl
add
out
push
aad
mov
sbb
pop
movsb
cmp
dec
and
xchg
hlt
jmp
xchg
adc
lcall
and
adc
push
je
inc
mov
sbbb
je
xor
cltd
mov
dec
andl
pop
repz
xchg
pop
sahf
dec
stos
inc
mov
je
shl
iret
xchg
jl
pusha
out
sub
sbbb
pusha
test
jbe
cmp
jbe
mov
enter
in
or
mov
shll
mov
ja
xchg
int
fwait
stc
mov
push
mov
dec
mov
stos
call
push
and
push
dec
jg
repz
sub
pop
or
push
jl
sbb
in
and
push
call
xorb
mov
or
xchg
jns
scas
jnp
ret
je
loop
mov
fbstp
xchg
add
adc
das
movsb
and
ja
xchg
clc
aas
test
pop
test
arpl
call
jge
mov
mov
xor
in
pusha
cmp
sbb
and
cmp
mov
imul
mov
sub
xlat
push
xor
push
add
pop
sub
sbb
jnp
xor
fistps
dec
imul
sahf
adc
ss
call
or
xchg
out
insb
lock
lret
sub
cmp
pop
jbe
pop
jb
shlb
mov
fldenv
sub
nop
pop
cmp
jns
and
das
fadd
mov
fldl
fcmovnu
add
iret
or
sbb
call
or
pop
in
scas
fcompl
adc
mov
shll
mov
daa
sbbb
inc
sub
jecxz
sti
xchg
sub
out
jge
movsl
daa
in
push
jle
adc
stos
xchg
outsb
push
ret
ret
dec
loop
push
imul
das
repnz
lret
adc
or
cs
cltd
sub
ds
out
stc
nop
jbe
into
andl
filds
xor
add
inc
icebp
and
clc
mov
sbb
daa
dec
out
mov
call
cmp
xchg
cli
push
jbe
mov
adc
inc
sti
xchg
decl
jp
pop
cmp
xchg
jp
xchg
pop
loope
add
icebp
adc
mov
jmp
sub
or
inc
push
cmp
xchg
xor
rcr
lcall
jae
pop
push
popf
sbb
inc
jmp
shll
dec
fs
enter
sub
xchg
ret
popf
lea
int3
jg
dec
ja
in
stos
ret
pop
aam
inc
shll
xchg
mov
xchg
jl
repz
jns
jo
push
pop
jmp
imul
pop
ret
sar
imul
pop
and
or
xor
addr16
push
stos
in
int3
sbb
fbld
in
cmp
aaa
leave
leave
jo
aad
push
or
fiaddl
ret
jl
bound
stc
lods
add
push
rcrl
ret
clc
or
pop
push
movsb
jecxz
int3
jecxz
add
or
mov
pusha
xlat
mov
pusha
sub
and
adc
xchg
ror
add
cs
pop
rcr
into
adcb
mov
pop
mov
add
mov
or
xor
mov
sub
push
daa
cmp
mov
aaa
xor
xor
cltd
and
push
jp
fisttps
outsb
add
sbb
or
fistps
out
aas
push
cmc
fidivrl
clc
aaa
jecxz
inc
pop
fnsave
pusha
push
ret
call
iret
mov
adc
aaa
ret
fsubl
push
or
inc
pushf
lret
xlat
shll
repnz
call
clc
push
pop
es
loope
jo
dec
sub
dec
push
sbb
mov
mov
testb
push
jle
xchg
push
setle
rcr
cmp
and
data16
jecxz
xchg
inc
xlat
inc
clc
inc
sbb
jae
out
popa
lahf
sbb
in
ss
fisttpl
jne
lret
adc
stc
sarb
cwtl
test
sbb
or
or
mov
mov
mov
stc
aam
mov
mov
in
sbb
xor
push
xchg
and
jge
xchg
dec
roll
cmp
fsubs
int3
dec
sub
mov
shll
pop
shll
jl
jg
lock
in
push
push
aas
xor
testb
outsl
inc
psubb
mov
sbb
test
rorb
dec
or
insl
imul
sbb
aas
enter
das
mov
call
dec
mov
dec
push
sub
lds
ja
imul
stc
popf
cmp
aaa
jecxz
shll
mov
stos
mov
jbe
push
cmp
clc
int
mov
jns
ss
bnd
fwait
lret
lods
rclb
push
mov
jnp
add
add
rol
xor
lret
mov
cmp
movsb
shrb
in
movsb
stos
adc
jno
fsubrl
stc
outsl
std
int
test
xor
sti
inc
dec
or
daa
mov
sbb
mov
sub
jl
js
addr16
jno
sbb
xchg
cmpsl
pop
dec
push
stc
jl
in
jbe
xor
in
cmpsb
test
fcomip
mov
aam
add
lods
dec
sbbl
or
mov
icebp
pusha
mul
mov
dec
mov
sti
push
and
shrl
sbb
adc
mov
push
mov
js
pusha
lcall
add
and
pop
arpl
popf
sub
add
gs
xor
fiadds
fisubrs
jno
lods
sbb
add
lock
enter
fimuls
hlt
fisubl
mov
sbb
out
enter
push
movsl
add
jg
jecxz
stos
les
adc
inc
loope
inc
lds
enter
cli
and
cmpsl
sub
jmp
pop
adc
ret
es
out
je
loope
fldcw
adc
inc
gs
lahf
in
push
adc
cwtl
addr16
popa
les
out
mov
push
and
adc
sbb
nop
sub
lea
mov
fnsave
or
cltd
and
movhlps
mov
ss
push
jne
scas
mov
xor
stos
jns
xchg
daa
inc
pushf
fldt
sbb
out
xlat
repz
in
xchg
es
es
dec
int3
or
jb
or
pushf
addr16
sahf
mov
inc
and
jbe
pop
in
into
pop
mov
xchg
fmul
movl
pop
je
jl
sti
sub
in
fs
xchg
cmp
inc
ficomps
fbld
jle
icebp
xor
push
push
and
push
mov
inc
std
mov
clc
out
popf
cmp
imul
adc
icebp
add
cmp
jo
pop
fwait
push
ds
popf
cmp
pop
scas
dec
pusha
es
sbb
sub
ds
pop
dec
push
idivl
lock
bound
push
fcmovb
mov
cmp
sbb
mov
int3
pop
inc
push
or
cwtl
stos
testl
sti
rclb
cmpsl
sbb
cmp
lock
add
in
mov
push
rsqrtps
and
mov
movsb
cmp
adc
repnz
fiaddl
push
adc
or
dec
icebp
mov
insl
loopne
adc
ja
ja
std
nop
clc
inc
add
push
inc
pop
push
inc
clc
inc
clc
inc
ljmp
mov
outsl
fisttpl
imul
bound
push
xor
out
jb
arpl
or
enter
xchg
xchg
adc
adc
mov
xchg
hlt
xchg
sub
mov
add
or
xor
pop
icebp
loopne
pushf
arpl
repz
fdivrl
adc
jp
dec
push
inc
frstor
aaa
adc
xlat
mov
xlat
or
adc
fstps
mov
mov
pop
ljmp
loop
sbb
aam
movsl
icebp
sbb
xor
xadd
out
fbstp
mov
repz
cmp
jnp
inc
push
dec
mov
gs
pop
push
xor
jns
es
add
or
sbb
adc
sarl
les
pop
cmp
xchg
pop
rcrb
fldt
stos
or
cmp
jae
scas
push
jl
pop
scas
scas
pop
bound
or
test
mov
mov
or
loope
test
enter
mov
aaa
movzwl
sbb
lcall
out
shlb
fwait
jo
mov
jns
jle
pop
dec
stc
stc
jb
lahf
popf
jb
popa
lahf
outsl
push
ss
vmovdqu
push
xchg
sub
add
out
loop
cmc
fwait
test
faddl
pop
loopne
push
jle
adc
mov
lods
adc
fcomps
mov
ss
adc
sbb
sar
push
sbb
push
adc
mov
movsl
lds
pushf
decb
push
or
fs
fstps
jae
xchg
jnp
cld
out
cmpsl
ret
inc
pop
out
xor
lgdtl
sahf
lret
pop
mov
jb
scas
push
and
mov
arpl
pop
fmuls
out
sbb
into
jge
jl
lock
and
ret
xchg
outsl
loop
out
std
pop
adc
sub
pop
in
sbb
or
idivb
daa
filds
repz
int
xchg
mulb
cmp
jl
xor
push
mov
push
call
mov
outsl
push
call
test
int
jae
aam
mov
cmpsl
std
or
inc
int3
clc
or
push
leave
mov
pop
in
pop
push
pop
out
xchg
jbe
jle
pushf
lods
mov
inc
pusha
cwtl
into
outsl
sarb
test
in
or
xchg
xchg
loopne
not
cmp
ljmp
fwait
bound
out
jbe
sarl
jecxz
pop
and
or
mov
cmc
call
lahf
movsb
pop
or
pop
mov
addr16
add
repnz
mov
xchg
lret
rclb
sub
mov
push
mov
neg
jge
push
in
pop
stos
mov
cli
pushf
test
scas
outsl
loop
dec
in
pusha
pop
fwait
push
or
repnz
mov
jp
arpl
pop
jno
cmovns
cmc
and
into
bound
arpl
imul
test
sarl
loopne
jno
inc
pop
pop
xchg
imul
js
cmp
pop
xchg
cmp
stc
inc
xchg
xor
cltd
je
test
mov
mov
pushf
mov
pop
cmpsb
addr16
mull
lock
fs
gs
and
add
mov
add
inc
fs
mov
add
add
add
inc
push
enter
add
xor
mov
cmpsb
sub
sub
jae
inc
in
fwait
inc
jle
mov
aad
ret
es
iret
push
jae
lea
sti
nop
add
addl
push
inc
imul
dec
pop
inc
outsl
ret
pop
mov
icebp
stos
jl
and
ret
jmp
pop
rcrb
fsubrs
das
pop
dec
ss
scas
sti
jnp
lea
pop
mov
js
data16
mov
call
jecxz
sahf
imul
imul
cmp
add
push
mov
leave
dec
mov
adc
test
scas
add
or
pop
pusha
cmpb
dec
ljmp
adc
mov
lcall
rcrb
cmp
push
mov
push
or
lods
sarb
pop
mov
fildl
das
mov
sbbb
outsl
inc
jb
pop
int3
sahf
shr
xchg
push
data16
or
scas
fimuls
mov
scas
out
or
movsl
iret
adcb
gs
outsb
cltd
push
mov
cmc
ss
add
in
cltd
call
or
pop
mov
push
jo
sbbb
outsb
push
in
dec
and
test
repz
xchg
dec
mov
mov
cmp
xchg
or
ret
cmp
mov
je
je
and
xchg
fs
lods
loopne
rclb
clc
cmp
ret
out
push
lods
xchg
les
jns
adc
pop
pop
jmp
xchg
or
pop
inc
dec
or
sub
xchg
andb
lea
mov
out
cli
inc
lahf
idivl
icebp
addl
cmp
jae
mov
lahf
outsb
mov
ficoml
fldenv
sbb
xor
rolb
xor
mulb
notl
cmp
insl
jns
xchg
mov
repz
mov
dec
cld
add
xchg
popf
push
into
sub
and
push
xor
call
cmp
shrl
xor
incl
stos
ret
xor
xor
andb
pop
aaa
je
inc
push
lock
or
dec
aam
cmc
jnp
scas
aaa
popf
mov
loop
out
scas
mov
adc
push
cmp
push
mov
or
mov
mov
push
repz
sub
shr
loope
popf
add
sbb
mov
pop
or
xchg
adc
push
leave
mov
mov
dec
gs
mov
push
lods
sbb
adc
std
enter
xchg
aad
xor
xlat
jno
inc
dec
cmpsl
dec
mov
sub
aad
gs
and
sti
fdivl
dec
and
mov
add
popa
mov
push
ret
add
jns
and
pop
testb
xchg
out
jle
add
mov
in
jl
mov
rcrb
xlat
call
lds
inc
outsl
mov
movsb
lret
enter
insb
ljmp
shrb
add
xchg
imul
loope
xlat
pop
daa
aam
jmp
pop
addb
inc
movsl
cmp
xchg
in
xlat
stos
push
in
loopne
in
and
sub
pusha
mov
fwait
movsl
ud1
mov
lods
sbb
fstpl
lds
sub
mov
mov
dec
mov
arpl
dec
pop
mov
lods
dec
mov
loopne
je
adc
lret
int3
xchg
add
add
jo
push
or
xor
push
fbstp
ds
sub
inc
fadds
frstor
fidivs
imul
adc
mov
inc
pop
pop
xchg
push
lahf
cld
push
xor
inc
out
ljmp
mov
inc
xchg
lods
lea
mov
xlat
lods
and
stc
test
sub
shrb
pop
xchg
cmp
scas
in
mov
push
jb
sbb
mov
sbb
jno
jp
pop
inc
sahf
jo
hlt
mov
and
fs
movb
aam
shld
jle
ds
pusha
loop
repnz
pop
or
insl
or
jp
out
or
xor
adc
xchg
inc
inc
sub
sub
enter
jne
xchg
mov
xchg
mov
aam
sub
repnz
scas
mov
push
out
jb
arpl
das
addr16
cld
push
lock
sub
or
sbb
loopne
jb
inc
mov
push
inc
dec
xchg
ljmp
fnstsw
inc
hlt
int3
xchg
jle
fisubs
sti
in
pushf
dec
push
push
out
add
ljmp
lcall
stos
jmp
xor
sbb
ss
jb
fisubs
mov
in
ret
xlat
and
test
sbbb
ror
add
push
je
inc
push
sub
mov
test
xchg
popa
xor
inc
adc
jno
das
mov
adc
lret
bound
sti
fwait
jbe
jno
sahf
stos
jmp
fstpt
incl
ds
and
inc
sbb
out
iret
lods
sahf
inc
int3
scas
xchg
push
in
fstpt
mov
imul
push
cmpsl
lcall
adc
inc
xchg
andb
inc
push
daa
out
sub
xchg
lret
int
aaa
jnp
les
sbb
add
lds
or
popa
out
xchg
cmpsb
cmpsl
sbb
cmp
icebp
or
cmp
pop
jo
sahf
andl
mov
outsl
mov
shlb
push
push
cld
aas
adc
lods
xchg
fadds
je
jae
push
fisubrl
xchg
sub
sbb
xchg
cmp
ja
adc
es
mov
inc
shrl
ficoms
dec
fisttps
fisttpl
xchg
loope
xchg
push
adc
test
shl
loop
sub
and
push
mov
nop
dec
sbb
dec
outsl
notb
lock
dec
dec
xchg
sahf
adc
push
mov
popa
cmpsb
jge
jnp
mov
mov
shlb
in
or
sub
shll
dec
mov
jns
xor
sbb
mov
push
lods
adc
aaa
scas
mov
stos
inc
aad
stos
push
inc
cmp
imul
bound
mov
leave
pusha
jne
mov
push
scas
mov
push
xor
rorl
repz
test
cmp
push
arpl
push
ret
outsl
pop
xor
xor
dec
outsl
mov
and
pop
dec
stos
xor
add
pop
popf
or
cmp
aam
je
jno
adcl
inc
and
inc
cmpb
sbb
dec
rcrl
popa
inc
sbb
sbb
mov
mov
inc
sbb
xor
xchg
nop
sub
inc
lea
repz
adc
pop
out
xlat
adc
dec
jb
stc
jo
mov
and
pusha
int
mov
movsl
repz
and
gs
add
add
mov
scas
aaa
cltd
xor
pop
in
mov
mov
and
loopne
push
mov
xchg
lret
fildll
inc
and
and
and
icebp
pusha
loop
sub
push
xchg
aad
cwtl
cwtl
in
scas
rcrl
in
stos
fnstenv
daa
jnp
jle
fcmovu
adcb
add
cmp
arpl
mov
jbe
movsb
inc
mov
lret
push
test
enter
sbb
mov
cltd
xor
ret
mov
aad
lcall
cld
rcr
ss
subl
fs
dec
fimull
lods
pop
dec
inc
repnz
xchg
insb
aad
push
ljmp
inc
jecxz
outsb
shrb
jo
push
mov
subl
test
mov
and
pop
sub
mov
pop
out
in
mov
mov
leave
in
arpl
cmp
inc
dec
ret
jne
push
xor
gs
adc
into
daa
psubd
pop
lods
jne
cwtl
cmpsb
into
jno
fcoms
jecxz
inc
mov
cmpsl
and
fstpt
push
ss
mov
add
cltd
lock
cmp
rorb
add
lods
fimull
mov
sub
cwtl
cmp
add
fistl
mov
rcrl
xor
popa
inc
jbe
adc
inc
push
jl
jno
dec
movsb
xor
int
mov
out
aad
cld
es
sbb
or
into
stos
ja
lret
pop
sti
filds
mov
pop
and
das
cmpsb
es
fs
adc
negl
aas
iret
outsw
sub
mov
mov
gs
xchg
aam
fiaddl
sti
xchg
gs
js
mov
mov
mov
pop
lds
xchg
ja
hlt
push
mov
pop
sti
inc
sbb
cmp
pop
cmc
push
insb
cmp
fdiv
dec
push
mov
jge
test
pop
adc
out
movsb
sahf
mov
add
sti
shr
cmp
xchg
mov
insb
push
jecxz
pop
rorb
mov
sbb
insb
add
adc
dec
pop
push
lea
movl
xchg
data16
add
pop
pop
cmpsb
sbb
jp
aas
pop
arpl
sar
loope
mov
pop
xchg
pushf
sbb
jl
lods
jmp
lea
mov
mov
xchg
maxps
roll
mov
pop
fidivl
sub
mov
out
adc
mov
add
jae
scas
lods
ret
ror
sub
adc
push
cltd
jo
fisubrs
mov
divl
lods
lret
lahf
pop
mov
es
stc
pop
inc
loopne
fwait
lods
inc
jp
hlt
lea
pushf
lret
dec
adc
imul
push
repz
in
daa
pop
xor
pusha
insb
add
out
adc
mov
sbb
faddl
scas
adc
loopne
insb
jg
inc
jg
ljmp
out
repnz
in
jle
mov
jp
jae
ljmp
mov
in
ja
hlt
test
cld
lgs
das
dec
mov
out
neg
loopne
rorb
fbstp
ja
dec
rorb
fs
sbbb
mov
mov
sbbl
sub
stos
xor
out
cmp
jp
lahf
repnz
sbbl
sub
mov
or
cmp
xchg
add
lcall
aad
xchg
push
cli
or
aaa
push
mov
push
sbb
dec
test
ret
pop
mov
stos
out
stc
fisttpl
inc
lcall
fadd
push
out
push
pop
lahf
jp
mov
in
in
in
rcl
aas
insb
mov
fwait
xor
aaa
insl
imul
dec
stos
int
cmpsb
jne
ljmp
es
test
mov
and
jno
cwtl
sub
cmpsl
inc
cltd
inc
sub
imul
mov
out
mov
jae
fdivs
jnp
insl
mov
mov
mov
repz
rcrl
sub
or
adc
imul
inc
jmp
jmp
gs
stos
inc
lock
sti
pop
repnz
insl
loope
das
pop
imul
mov
add
ja
xchg
popf
loope
sub
jmp
jno
arpl
adc
lds
push
and
out
fcoms
nop
sub
mov
rol
js
mov
test
hlt
adc
fsubs
adc
dec
jecxz
outsb
cs
push
mov
sub
dec
add
fldl
pushf
adc
cmp
cmc
mov
pop
xor
mov
cmp
xor
lret
inc
cmp
mov
int3
inc
jle
nop
mov
xchg
dec
xor
gs
inc
rcr
popa
daa
and
push
mov
xchg
or
aas
xchg
lds
dec
and
roll
cmp
dec
out
cmp
mov
repz
or
mov
mov
frstor
mov
jne
pop
jbe
pop
aas
add
sbb
push
icebp
lods
pop
mov
sbb
bound
xor
out
cmp
and
sub
call
mov
ret
jmp
lahf
or
sbb
fistl
xchg
paddb
xor
cmp
pop
xchg
js
fbld
out
in
adc
aaa
repz
add
or
push
xchg
daa
jno
lea
adc
arpl
comiss
jmp
jno
sbbb
jl
out
lcall
sbb
ret
xor
bound
xchg
xor
frstor
adc
pop
mov
mov
pop
lds
pop
sbb
mov
push
sarl
testl
test
lret
jnp
dec
lahf
pop
mov
rcrb
adc
inc
int3
mov
mov
mov
lcallw
pop
insl
inc
nop
sbb
sub
dec
cmc
push
jle
xor
aad
test
pop
cmpps
and
pop
loopne
xor
stos
push
sub
inc
shll
in
adc
xchg
cmp
jecxz
in
lods
sbb
and
push
xor
push
xor
xchg
sub
add
push
xor
jae
movsb
pushf
rclb
dec
imul
cmp
adc
scas
js
not
popa
pop
jo
xchg
mov
addr16
lcall
scas
cli
aad
pop
push
movsl
xchg
lods
cmp
add
push
dec
lds
into
fsubrl
lcall
sbbl
xchg
jp
cmpsb
push
lods
pop
fnstsw
dec
dec
push
jb
jecxz
push
and
nop
shrl
dec
mov
aam
mov
gs
jmp
fidivrs
sub
lahf
add
test
mov
insb
lods
les
cmc
jg
insl
scas
or
hlt
out
mov
aad
cmp
imul
mov
movsl
clc
xchg
jnp
xchg
out
push
mov
jp
js
xchg
insl
add
mov
daa
mov
jmp
iret
fucom
stc
xlat
sub
xchg
mov
je
lea
lret
push
push
int
daa
outsl
sbb
enter
jns
adc
pop
cmpsl
pop
adc
sbb
inc
sbb
sbb
mov
mov
lret
push
loopne
roll
js
stos
jno
test
xor
inc
andl
enter
push
pop
pop
cmp
pop
int3
fnstcw
aam
dec
or
lock
push
push
jmp
mov
or
and
aas
cli
pop
jne
shll
dec
fldcw
cmpsl
stos
pop
mov
mov
shl
xor
jb
inc
sub
aas
ret
std
mov
loope
and
mov
subb
stc
sub
xor
clc
pop
hlt
out
adc
jo
movl
push
aas
xor
xchg
aad
aas
popf
repz
pushf
in
popf
fcomps
shll
out
mov
inc
jbe
je
xchg
inc
lods
stc
jg
test
repz
sbb
push
cld
pusha
addl
and
jge
dec
cld
mov
mov
imul
mov
rol
lds
xor
shll
lods
push
ss
ss
jle
jo
fiadds
inc
jb
out
sub
mov
inc
int3
sub
pop
outsl
inc
mov
iret
xor
movsb
fiadds
sub
push
nop
mov
cmp
xchg
or
shlb
xor
lahf
jns
test
test
mov
js
inc
push
pop
mov
xchg
push
sbb
dec
xchg
nop
sbb
mov
mov
pop
pushf
sbb
jge
mov
cmc
jle
dec
mov
jbe
dec
mov
jne
xchg
call
mov
insl
inc
imul
lret
xor
pop
xor
pusha
sti
lahf
jecxz
xor
adc
out
and
pop
jns
test
dec
icebp
cmp
xchg
add
push
add
es
xchg
cli
cli
cmp
pop
adc
mov
sbbl
not
pxor
call
in
push
xor
cmp
cli
mov
cmp
add
je
jne
push
push
call
out
pop
sahf
clc
aam
dec
adc
adc
inc
rcll
sub
jmp
cmp
mov
dec
rep
jmp
shrl
insb
idivl
es
pop
mov
mov
fidivrl
cmpsb
sbb
push
mov
insl
sub
mov
imull
loop
imul
mov
pusha
sti
xor
gs
idivl
test
enter
movsl
sti
pop
std
mov
xchg
add
lock
xchg
insb
test
mov
test
add
aaa
cwtl
mov
xchg
jle
push
sub
ret
loop
loopne
in
jg
cmp
inc
cmp
mov
add
shl
inc
jb
pop
mov
mov
mov
insb
mov
leave
iret
bound
ret
mov
push
mov
fcoms
sub
repz
loopne
aam
movsl
lcall
pop
movsb
mov
pusha
sub
push
outsb
rclb
dec
lret
fwait
in
jbe
in
adc
lret
mov
movsb
or
sub
les
sub
push
lret
cld
addr16
ds
dec
jle
subb
add
add
movsb
rolb
dec
cmp
dec
daa
mov
adc
bound
fiaddl
int3
mov
fs
jge
icebp
mov
mov
enter
lret
add
inc
jae
je
cmp
cld
or
nopl
pop
ja
sub
in
cwtl
loop
inc
fistl
loop
lret
nop
mov
clc
dec
lds
mov
int
sarl
inc
in
pop
imul
jge
sbb
movsb
sti
pusha
mov
push
out
inc
mov
push
in
dec
imul
jbe
xor
cmp
pop
add
add
cmp
scas
xchg
sbb
sbb
pop
or
push
movsb
pop
mov
adc
xor
testb
fwait
pop
push
dec
pop
dec
sbb
test
sub
neg
mov
gs
lret
push
jp
inc
push
pop
in
jne
jno
sbb
xor
lahf
cmp
filds
sub
xor
xchg
jecxz
push
aaa
jno
insl
mov
dec
xchg
xor
xchg
jp
dec
pop
in
inc
cmp
pop
pusha
sub
add
popf
cmpsl
add
pop
cld
movsb
pop
loop
xchg
jns
mov
xchg
gs
imul
mov
inc
bound
xchg
jb
pop
sub
out
les
xchg
mov
jg
cmc
xor
sahf
xchg
les
js
es
xor
rorb
in
push
mov
push
ss
xchg
ret
xchg
mov
inc
pop
outsl
out
sbb
ja
shr
jle
subb
sahf
push
or
popa
add
mov
mov
mov
outsb
sub
fprem1
fisubs
dec
push
inc
mov
push
addb
add
xchg
mov
flds
pop
aaa
add
lds
push
aas
mov
repz
mov
insb
call
xchg
out
popa
and
jecxz
inc
in
aad
inc
sbb
sbb
mov
or
dec
out
dec
xor
testb
je
pop
sbb
mov
ds
push
fwait
imul
int
sub
push
sbb
xchg
and
repnz
mov
filds
sub
sub
pop
stc
sbb
into
push
inc
pop
addr16
out
xchg
jl
clc
scas
pop
mov
mov
add
scas
and
hlt
repnz
pop
stc
xchg
sub
arpl
imul
mov
pop
and
fdivr
pop
test
adc
inc
aad
and
shlb
clc
leave
and
sahf
test
nop
cmp
adcb
dec
jo
push
popf
aad
test
call
mov
xchg
push
ret
add
rorb
sub
xchg
xchg
mov
dec
lea
movsb
jno
fwait
movsw
addl
popf
or
xorl
std
mov
cmp
mov
sahf
sbb
movb
xor
mov
fisubl
mov
fcmove
fs
aaa
cmp
data16
xor
xor
push
movsb
data16
inc
mov
leave
lahf
push
outsl
popf
add
mov
xchg
sub
xor
subl
jns
jge
push
fcomp
dec
stc
popa
mov
mov
sti
sub
cmpsl
test
jp
test
mov
lods
lods
mov
push
test
nop
bound
sbb
jbe
jno
mov
add
fistl
push
mov
sub
jle
shll
ffreep
mov
lret
in
mov
and
or
lcall
or
out
push
fiadds
push
out
data16
sahf
daa
mov
jno
scas
push
inc
fwait
je
mov
sbb
and
sbb
cs
addb
mov
pushf
xor
jecxz
test
pop
and
movsb
lds
shll
out
aas
sahf
or
jmp
aas
pop
jecxz
or
jmp
fiaddl
sub
pop
sub
dec
and
inc
sub
dec
mov
lods
ret
pop
jmp
push
sbb
mov
into
adc
dec
mov
mov
xor
and
push
into
enter
lods
dec
mov
hlt
ret
dec
roll
movl
pop
mov
mov
or
and
and
jns
adc
enter
sbb
test
inc
mov
pop
jl
lret
or
mov
andb
xchg
sbb
cmc
mov
xchg
in
xchg
lods
inc
and
fld
dec
mov
outsl
or
and
mov
push
add
inc
sbb
push
dec
sub
dec
push
icebp
int3
dec
sbb
fdivl
shrb
or
jg
fnstcw
dec
mov
add
cmp
rol
aaa
or
shll
fdivrl
rorl
hlt
scas
and
jo
call
and
jp
cmp
dec
pop
jmp
push
push
inc
cmp
mov
ljmp
dec
ss
fldcw
fwait
dec
dec
incb
repz
cmp
ret
inc
push
pop
mov
lret
je
inc
sbb
mov
inc
arpl
xor
jl
lods
jmp
jne
popf
sub
pop
jmp
push
enter
or
sbb
mov
push
jbe
outsl
iret
aad
mov
jg
fucomip
push
jo
xor
clc
scas
xchg
push
lods
dec
mov
aas
mov
pop
mov
pop
out
xor
popf
adc
movsl
inc
rcrb
mov
push
jmp
gs
je
fstl
push
int3
js
mov
dec
inc
outsl
push
jb
lods
daa
popf
push
adc
js
push
lock
pop
into
enter
aaa
repz
loope
xchg
aad
lods
xchg
icebp
xchg
fmul
pop
jmp
out
outsb
in
inc
es
adc
cltd
mov
shrb
add
xor
loopne
sub
inc
push
test
or
pushf
jo
dec
mov
mov
stos
dec
sub
icebp
in
mov
or
shlb
lods
jmp
xchg
in
out
aad
ss
jbe
icebp
xchg
pop
and
sahf
xor
pop
mov
dec
les
repnz
sbb
pop
enter
dec
insb
fbstp
adcb
inc
pop
or
int
pop
cmc
push
mov
fdivrl
in
lods
inc
rcl
repnz
xor
pop
xor
xchg
cmp
sub
mov
fimull
push
jecxz
aaa
cmpsl
xchg
inc
pop
push
xchg
cld
or
push
cmpsb
jne
push
or
roll
mov
out
xor
add
lods
dec
and
lahf
mov
mov
les
xchg
adcl
ds
cld
push
repnz
pop
lods
inc
cmp
xchg
loopne
lret
popa
out
andl
psubsw
ljmp
cwtl
neg
addr16
push
jmp
mov
jb
repz
fcoms
dec
pop
cmc
jp
daa
mov
sbb
inc
sbb
mov
lods
pop
adc
push
push
insb
popf
jno
daa
scas
add
jg
popa
lret
popf
testb
adc
stos
xchg
jns
test
cmc
mov
cltd
lds
adc
ror
ret
in
imull
jge
call
inc
or
scas
repz
pop
into
xor
jge
sbb
sahf
mov
scas
mov
mov
and
cltd
mov
cmpsl
push
cmp
jb
or
pop
push
shrl
or
loop
out
fcomps
push
inc
ret
mov
cmpsl
push
stos
and
test
mov
jle
jmp
les
or
cltd
push
or
nop
daa
sahf
push
addr16
sub
mov
repz
mov
sub
mov
or
mov
scas
inc
sbb
ja
mov
push
and
cld
aas
push
aas
adc
notl
fs
fsubl
fcmovb
pop
loop
nop
inc
or
mov
movsb
or
jnp
xor
xor
in
test
push
mov
xorb
stos
lea
aam
aad
cmp
in
push
test
push
testb
or
test
aaa
pop
mov
mov
test
popf
cmp
dec
xor
mov
sub
lea
data16
xchg
and
int3
movsl
int3
ss
test
cmpb
jp
mov
mov
ljmp
je
rorl
insl
inc
xchg
mov
adc
dec
imul
mov
xchg
xchg
aam
inc
adc
mov
repnz
ret
shrl
repnz
aam
cltd
mov
enter
xor
jne
dec
jecxz
popf
insb
negl
add
push
out
mov
scas
pop
bnd
jae
sbb
inc
pop
or
outsl
inc
cmp
mov
in
shl
xor
xor
hlt
popf
jecxz
jmp
add
out
inc
xchg
sub
movsl
inc
xchg
mov
inc
inc
mov
fidivl
mov
lcall
and
je
sub
sahf
das
je
call
iret
and
lahf
addr16
insb
push
enter
inc
add
xchg
das
mov
insl
mov
pop
xor
cli
in
mov
fcomip
adc
sbbl
imul
outsb
sub
sub
cld
leave
cmc
ss
cmp
imul
int3
aas
push
gs
andl
jg
sbb
mov
or
dec
test
icebp
xchg
in
sbb
xchg
sar
pop
lock
mov
adc
xor
pop
jecxz
mov
mov
xor
call
inc
cwtl
out
jmp
incb
ja
shll
insl
mov
jnp
xor
enter
jmp
movsb
shlb
add
xchg
imul
ficompl
loopne
cmp
in
mov
popa
mov
clc
adc
pop
pop
std
out
dec
push
add
cltd
fsts
inc
dec
sub
add
or
je
scas
inc
and
and
int
inc
dec
call
dec
sbb
repz
cmp
test
fwait
addb
xor
sub
mov
into
outsl
mov
mov
loop
xor
and
dec
out
inc
call
ja
push
mov
adc
inc
inc
icebp
sbb
ja
and
rorb
dec
mov
cmc
sbb
xchg
sbb
and
mov
lods
xor
icebp
lods
in
mov
stc
push
out
mov
jbe
mov
arpl
insl
das
cmp
bnd
das
lret
add
adc
pop
in
cmpsb
subb
push
nop
pop
and
push
add
sbb
mov
in
jns
out
stos
jmp
inc
sbb
cmp
add
nop
out
or
xchg
mov
stos
sbb
shlb
shlb
inc
scas
push
jmp
pop
or
lods
jmp
cmp
shll
shlb
pop
lock
mov
dec
out
sbb
ds
xchg
mov
push
pop
rcrb
out
jg
xchg
es
dec
pop
std
push
push
pop
stos
lahf
xor
add
jne
jmp
inc
inc
int
mov
push
mov
in
das
pop
mov
imul
sub
push
adc
xchg
shlb
inc
inc
mov
loop
mov
xchg
loop
arpl
add
pop
ds
and
cmp
inc
scas
xor
cmpb
fists
jbe
xchg
push
sbb
stos
or
data16
notl
pop
cmp
sbb
dec
loope
mov
push
repnz
pop
xchg
xor
js
sbb
or
addr16
ficoms
nop
sbb
jg
sti
test
outsb
push
sbb
dec
inc
sbb
mov
leave
jo
mov
pop
xchg
xlat
imul
and
pop
fstpt
adc
cmp
movsb
in
ret
lea
cmp
rclb
push
jecxz
enter
in
push
sahf
mov
adc
test
jg
adc
nop
lock
dec
iret
pop
shlb
in
push
dec
rcrb
sub
or
cltd
jle
lahf
out
mov
fs
lods
fbstp
nop
data16
xchg
test
aam
pop
wbinvd
pop
fwait
xorb
enter
fsubs
iret
and
lock
dec
xor
adc
jp
test
fstl
sti
push
icebp
ljmp
or
fcmove
xchg
xor
lcall
fucomp
jecxz
lret
pop
gs
sahf
les
push
leave
fsub
pop
mov
std
enter
sbb
cwtl
pop
push
mov
scas
sub
or
stc
xchg
push
jae
and
mov
push
jb
lock
add
add
mov
mov
cmp
xor
out
std
fisubl
pop
insl
add
xchg
out
ja
out
and
lcall
aaa
js
mov
loope
dec
fldt
fstpt
fstl
xchg
pop
into
dec
mov
call
fdiv
or
daa
fcoms
out
xchg
outsb
daa
or
pop
repnz
jp
add
jno
inc
call
aas
jge
call
cmp
jl
hlt
inc
push
repz
imul
fnsave
loope
adc
add
inc
jno
xor
xchg
pop
xor
mov
add
xchg
push
hlt
dec
xor
mov
or
test
xchg
outsl
adc
pop
mov
std
inc
pusha
mul
aas
or
aaa
mov
std
in
mov
push
mov
pop
add
test
mov
enter
pop
insb
insl
jge
hlt
sub
call
jmp
into
enter
scas
sbb
jne
mov
mov
inc
les
dec
push
lods
repnz
addr16
pop
and
xchg
xlat
dec
mov
and
stc
hlt
lods
and
xchg
lods
outsl
imul
mov
iret
pop
sti
xchg
addl
mov
mov
sbb
inc
mov
fildll
jae
push
xchg
sbbb
jno
lods
mov
sbb
in
xor
or
lds
ds
push
lods
mov
sub
push
xchg
add
or
or
and
sbbb
lret
std
mov
aaa
int3
and
mov
pop
imul
loope
cltd
push
mov
xchg
sub
inc
int
flds
into
sub
rorb
push
in
jmp
std
xchg
cmp
out
jle
lods
and
push
cmp
stos
jmp
cmpsb
or
imul
outsl
popf
or
nop
fnstenv
sbb
js
push
hlt
fmull
fsubrl
add
addr16
test
fwait
outsb
push
xchg
fmul
pop
adc
jb
dec
out
gs
push
inc
test
scas
pop
fs
sar
iret
mov
or
fldl
dec
arpl
dec
les
nop
sub
dec
or
notl
mov
shr
sbbl
push
call
outsb
and
xor
mov
mov
and
subl
sarl
xchg
and
pop
xchg
inc
mov
sub
push
mov
mov
push
leave
inc
loope
add
fisubs
cmp
mov
lahf
lods
push
movsl
xchg
jo
sbb
gs
out
xchg
xchg
xchg
lea
mov
cmpsb
sub
subl
lcall
dec
push
pop
ss
gs
sub
xchg
imul
loopne
pusha
outsb
lods
and
jp
call
or
sub
dec
jo
mulb
addr16
inc
push
and
ds
mov
fstpt
mov
in
outsb
pop
stos
and
cmp
pusha
subb
rorb
insb
adc
leave
pusha
popa
out
shll
fcmovnu
inc
sbb
mov
imul
push
pop
or
jg
int3
push
loopne
icebp
pusha
sbb
jns
mov
cltd
repnz
cli
std
cltd
ss
movsl
sbbb
push
mov
add
sti
arpl
inc
jbe
es
add
or
mov
push
inc
mov
in
test
jo
stos
add
cmp
mov
xorl
dec
jns
mov
int3
popf
scas
xor
lods
repz
popa
dec
test
cmc
mov
adc
or
test
dec
das
cmp
out
adc
adc
pop
push
and
mov
add
fs
mov
push
pop
push
mov
adc
and
or
scas
and
dec
sahf
push
xor
lds
adc
cmp
fcomip
cmp
stc
lahf
push
mov
aad
mov
clc
pop
imul
cs
repz
xor
test
xor
adc
cmp
gs
jb
pop
xchg
repnz
cmp
sbb
vpavgb
sbb
scas
lcall
push
add
add
or
mov
mov
jmp
fnsave
sub
fildll
inc
fwait
sbb
push
cmp
cmp
addr16
add
loop
and
icebp
pop
push
in
cmpsl
sbb
lds
cmp
cmp
mov
movsb
outsb
mov
xchg
aas
stos
inc
pop
xchg
aad
lods
xchg
or
hlt
mov
lahf
mov
rorl
clc
jae
xor
or
clc
bound
push
or
divb
aam
outsl
mov
adc
mov
mov
xor
mov
fsts
arpl
es
bt
adc
out
adc
cld
lret
sub
push
push
dec
popa
loop
jns
or
add
pop
mov
mov
lods
pop
add
inc
insb
flds
in
das
fdiv
add
dec
pop
or
dec
mov
jmp
mov
mov
mov
xchg
gs
divl
xchg
xor
push
mov
or
into
in
mov
stos
jne
mov
fmuls
lahf
mov
in
adc
dec
cmp
outsb
adc
or
mov
pop
and
jne
cli
daa
push
leave
xor
mov
mov
pop
fwait
mov
or
mov
aad
mov
xor
dec
in
je
imul
mov
sub
sbb
mov
mov
mov
adc
fucomi
in
inc
int
dec
repnz
jb
aas
test
mov
mov
inc
mov
add
or
dec
mov
addl
sub
adc
test
frstor
out
mov
mov
jne
dec
in
stos
insb
fcmovnb
in
lahf
sbb
in
or
xorb
pop
mov
jecxz
icebp
xor
mov
fnstenv
lahf
cmp
nop
mov
addr16
push
out
in
sub
jnp
xorb
sub
add
jmp
xor
mov
cli
xor
pop
stos
push
lods
popf
aas
aam
inc
mov
lds
xchg
xor
push
out
jp
cs
push
jmp
nop
ret
mov
loope
sub
xor
fwait
jg
popa
xchg
loopne
mov
add
ss
sbb
cmpsl
inc
sti
adc
pop
bnd
push
mov
mov
lcall
or
lods
aaa
scas
mov
adc
xor
movsl
jl
movsl
cmpsb
mov
sbb
ss
and
cmp
rolb
xchg
add
inc
mov
fwait
aad
push
xorl
jmp
dec
std
cli
mov
and
dec
adc
mov
es
push
popa
clc
lock
xchg
mov
testl
xchg
push
movsb
sbb
fdivr
loopne
or
mov
and
std
jl
sbb
lahf
imul
xchg
mov
xchg
stc
ds
inc
xlat
lret
bound
pop
dec
imul
movsb
cli
mov
roll
sbb
enter
leave
jno
push
out
stos
clc
add
and
cmp
mov
mov
or
into
movb
xor
imul
dec
and
mov
arpl
dec
out
add
addr16
sub
popf
insb
scas
sbb
jnp
sub
push
sub
je
push
out
push
ljmp
mov
sbb
xor
push
out
inc
mov
jmp
or
fbld
push
cli
nop
test
das
shlb
in
std
add
fsubr
push
adc
or
test
movsb
movsb
dec
mov
lods
jb
adc
ja
push
test
mov
mov
push
inc
sahf
xor
dec
xor
fwait
insl
inc
jecxz
cld
int3
mov
pop
add
movsb
sti
add
int3
mov
jmp
mov
push
subb
test
or
inc
fisubrl
inc
inc
pushf
incl
and
test
jge
sbb
cld
cmpb
les
pop
inc
or
adc
pusha
and
xor
mov
lret
lcall
outsl
mov
sbb
and
lret
daa
mov
fwait
inc
iret
mov
adc
inc
sub
sbb
sahf
in
inc
in
les
push
push
test
loopne
stos
jmp
xor
insl
cmpsl
xchg
inc
ret
out
int3
inc
sbb
jp
push
in
jecxz
clc
enter
mov
std
cmp
inc
mov
aas
pop
push
scas
xchg
daa
jns
and
push
sub
mov
mov
scas
push
in
mov
ret
xchg
daa
es
mov
dec
inc
shll
lret
roll
je
adc
das
jno
loopne
and
dec
cmp
into
jns
arpl
pop
mov
es
sbb
xor
lds
cltd
pop
mov
rcll
movsl
mov
subl
xchg
int
mov
pop
push
les
lahf
mov
loop
flds
aad
mov
mov
in
push
sarl
pushf
and
repnz
rcrl
mov
mov
pop
pusha
xor
mov
addr16
cwtl
int
pusha
int3
out
and
lock
xchg
mov
test
cmc
xchg
shl
in
aad
cwtl
jns
mov
pop
cpuid
cmpsb
out
sahf
call
or
lds
pop
fbstp
enter
and
push
and
adc
nop
jge
cmp
mov
push
jecxz
scas
inc
call
lret
out
cmpsl
out
xor
push
call
mov
or
dec
mov
out
add
movsb
icebp
xchg
lea
mov
shrl
testl
andl
mov
mov
xor
cwtl
pop
stc
fnstenv
xor
xchg
fists
sbb
lahf
sbb
cld
jmp
jnp
stc
into
gs
ret
outsl
or
jmp
ret
es
add
int
negb
dec
pop
xor
mov
xchg
cs
sbb
insb
xor
pop
add
mov
iret
ss
enter
stos
push
lods
pop
scas
sbb
sti
push
mov
mov
sbb
loope,pt
mov
out
sbb
je
cmp
cmp
mov
ds
mov
pop
test
bound
sub
loope
pop
addr16
movsb
shll
mov
add
testl
clc
xor
xchg
imul
or
nop
adc
adc
out
das
sti
pushf
stos
nop
into
sbb
adc
aam
and
movsbl
xor
add
mov
mov
ds
and
movsb
add
mov
mov
adc
mov
push
stos
fld
dec
loope
out
push
xor
es
xchg
mov
push
sub
je
add
flds
loop
push
inc
pop
adc
cmp
rcrl
mov
cli
jl
fucomp
fistpl
leave
jns
js
std
sbb
aaa
dec
insl
push
outsb
add
mov
loopne
mov
dec
push
jae
subl
mov
imul
xchg
mov
fbld
shll
jnp
fsubrs
aaa
stos
mov
xchg
in
adc
cmp
movsb
add
stos
inc
push
inc
pop
jae
dec
out
xor
pushf
sbb
cmp
dec
dec
repnz
xor
dec
pop
fxch
and
jge
out
jg
scas
mov
mov
sbb
lock
orl
push
pop
nop
mov
rcrb
sub
in
std
enter
lahf
or
rol
push
js
jbe
icebp
aad
and
iret
addb
repz
cmp
and
subl
add
int
test
ja
fistl
xchg
fnstsw
cmp
push
rol
mov
and
mov
icebp
pop
clc
fbstp
cmpsl
imul
mov
in
jo
cltd
int
sahf
fimull
inc
clc
mov
dec
lods
add
cli
daa
lcall
jns
cmp
jge
out
pop
shl
and
adc
adc
push
push
arpl
adcb
jo
shlb
and
jbe
or
xor
scas
stos
jle
test
mov
jle
dec
push
pop
hlt
test
iret
push
repz
repnz
fidivrl
sti
jno
ret
fs
cs
mov
jl
lahf
scas
sub
es
adc
mov
std
sub
pop
pop
pop
aad
pop
xor
loopne
std
push
das
aas
sbbl
cmc
fbstp
divb
setge
aam
jle
push
push
clc
xchg
repz
inc
sub
adc
mov
pop
in
movsl
loope
fs
mov
test
mov
jl
cltd
test
jg
int3
xor
pop
inc
lods
cmpl
mov
adc
dec
loopne
xor
std
cmp
mov
sbb
add
dec
scas
xchg
dec
into
fsubr
leave
aas
dec
movsb
pop
cmp
jecxz
sub
in
sbb
rcrb
scas
xor
lea
push
jbe
fcoml
xor
dec
mov
push
cmp
ret
add
sub
fistpl
loopne
xchg
add
mov
jns
xlat
testl
xchg
and
push
cmp
adc
pop
mov
jo
jl
loop
dec
mov
insl
dec
mov
paddw
xchg
sub
loop
pop
mov
xchg
ret
loope
aas
mov
push
dec
sbb
add
outsl
rcl
movsl
mov
clc
dec
or
push
iret
xchg
dec
mov
push
fstl
push
lock
scas
jg
imul
inc
loopne
add
cmpsl
std
xchg
fcoms
cltd
mov
fstps
ja
and
roll
push
and
insb
mov
push
inc
pop
xchg
add
mov
adc
lds
jbe
repnz
test
movb
cs
adc
mov
inc
stc
cwtl
jb
and
out
clc
jle
push
pop
jmp
pusha
cmpsb
mov
lcall
sbb
xchg
mov
jnp
inc
and
aam
mov
push
add
popa
movsl
mov
pop
cli
icebp
or
pop
pop
leave
mov
sub
jmp
or
hlt
inc
jo
cmpsl
insl
jmp
push
mov
cld
in
ljmp
rcr
mov
cmc
cwtl
or
inc
or
mov
lcall
mov
inc
inc
sub
loopne,pn
sub
cmp
jle
xorb
mov
ds
xchg
mov
test
xor
or
mov
pop
test
mov
xor
mov
and
xchg
mov
lret
dec
loope
jle
ret
mov
adc
cmpsl
sub
lahf
dec
gs
out
pop
insb
ljmp
xchg
enter
cwtl
mulb
and
pop
mov
and
jle
xlat
and
notl
mov
jp
inc
mov
leave
int
fistps
fisubs
popa
mov
shl
dec
and
pop
movb
or
test
lahf
fsts
jl
push
mov
insl
lret
shl
jo
mov
test
inc
cmp
cmp
inc
in
fwait
mov
mov
and
and
lock
mov
mov
xchg
out
xchg
orl
ds
pop
pop
mov
out
add
push
push
jmp
jne
cwtl
mov
cli
dec
clc
xchg
pop
sbb
movsl
test
dec
lcall
inc
adc
mov
adc
lcall
sbbl
push
out
push
inc
fdivp
jb
jge
adc
mov
loopne
in
ja
push
adc
loopne
xor
in
and
movsb
adc
adc
int
ss
pushf
xor
dec
std
inc
in
ljmp
cmp
jo
adc
call
pop
das
mov
test
push
add
mov
inc
push
mov
fstp
test
dec
inc
push
xchg
mov
fdivrl
pop
or
cmp
mov
mov
and
push
lods
dec
out
lods
push
sub
fisubl
out
sub
inc
mov
aam
push
cmp
add
fdiv
mov
cmp
data16
and
inc
clc
divb
and
dec
cli
mov
inc
sbb
iret
or
dec
xchg
or
sbb
adc
in
arpl
arpl
shl
pop
xor
leave
pop
andl
dec
lahf
rcrb
mov
sbb
mov
dec
out
mov
sub
lds
pop
mov
insb
add
notb
fiaddl
call
jo
ljmp
dec
jle
repz
cld
lcall
in
push
mov
outsb
popa
ficompl
loope
nop
insb
mov
lret
icebp
adc
mov
test
lods
push
inc
pop
lret
out
andb
add
mov
out
xor
test
sbb
xchg
jne
push
mov
cs
jno
sub
fsubl
stos
pop
out
adc
mov
mov
inc
int
or
and
sti
jae
sub
jns
scas
push
das
pop
mov
jns
cmp
mov
hlt
jle
sub
xor
out
fst
dec
mov
insb
cli
inc
push
and
out
xor
cltd
cmp
scas
xor
xchg
test
jno
lock
cmpsb
scas
inc
sbb
jl
jle
sub
out
cmp
fstpl
data16
jnp
mov
inc
dec
lea
mov
and
daa
cmp
xchg
mov
js
lcall
pop
jno
faddp
sub
inc
cmp
mov
xchg
in
insl
push
adc
mov
xor
pop
mov
mov
das
inc
rcrb
into
cwtl
das
shlb
fdivrp
xor
cmp
and
mov
dec
dec
ja
movsl
jmp
test
arpl
sbb
mov
mov
push
adc
lods
popa
xor
imul
mov
fs
push
rorb
or
mov
cmp
or
ss
rcrb
cmp
aaa
movsb
xlat
addr16
pop
and
push
aas
pop
mov
jae
or
dec
insl
lret
dec
out
cmpsb
sbb
jl
cmp
add
pop
aas
dec
adc
cmp
stc
sbb
dec
dec
mov
out
das
pop
nop
negb
add
sbb
xchg
mov
sub
gs
cmp
add
sub
shll
aaa
jle
popa
adcl
dec
mov
aaa
test
insb
cmp
stos
dec
outsb
sbb
ret
ret
outsl
push
add
xor
addb
ss
xor
sahf
js
das
sub
out
movsb
cs
inc
jne
call
mov
cmp
xchg
in
test
sbb
outsl
fwait
test
mov
adc
xlat
scas
pop
dec
mov
mov
pop
pop
aas
jo
mov
jp
testb
call
mov
sbb
dec
test
lret
push
in
divb
sub
int
inc
iret
and
push
testb
mov
pop
mov
int
outsb
xor
out
push
cmc
and
shl
inc
fsubs
jne
dec
lcall
and
cmc
mov
mov
outsl
or
pop
mov
insb
cmp
xchg
pusha
mov
movsl
icebp
scas
shrl
pop
cmpsl
push
xor
ja
js
jae
iret
mov
cli
shll
push
adc
adcl
mov
and
and
adc
insl
add
cltd
dec
and
mov
je
sub
movsl
mov
xor
fsubr
sbb
xor
jnp
call
movsb
xchg
imul
aas
mov
in
call
jg
pop
icebp
mov
sbb
mov
xor
daa
xchg
mov
add
mov
push
fnsave
jnp
pop
dec
aam
mov
add
xor
bound
stos
sub
push
cld
dec
je
sbbb
jae
mov
shll
dec
cmpsb
les
jg
jbe
scas
inc
inc
mov
int3
xchg
jno
mov
adcb
mov
inc
movsl
push
repnz
jecxz
adc
std
jo
mov
out
adc
test
lahf
hlt
sbbl
push
clc
sbb
lds
arpl
cmp
js
and
test
add
lcall
lcall
cmp
hlt
mov
cwtl
pop
ja
pushf
mov
inc
mov
push
cmp
mov
in
lods
sbb
xor
dec
movsb
ljmp
and
xchg
xor
push
into
in
sar
xchg
cs
stc
or
push
lods
pop
adc
dec
stos
jb
fdivl
jns
mov
inc
mov
shlb
shrb
xchg
push
mov
jns
xlat
arpl
and
sbb
loop
call
test
xor
shl
push
pop
outsb
jne
aaa
jbe
jb
cmc
mov
sahf
clc
rcl
add
or
nop
subb
or
daa
mov
or
daa
lea
cmp
out
pop
add
mov
adc
lret
pop
stos
cli
fwait
mov
out
mov
orb
or
je
lret
outsb
xchg
lods
shlb
sbb
nop
xchg
jae
scas
and
xor
jae
mov
mov
mov
das
adc
xor
aas
or
repz
in
test
xchg
add
xchg
call
pop
ss
cmp
outsb
decl
pop
ja
sbb
enter
test
adc
lret
imul
orb
sbb
inc
aaa
cli
inc
xchg
push
daa
shl
add
sub
cmpsl
out
enter
popa
jbe
inc
aam
sahf
insl
insb
std
or
jne
dec
push
scas
stos
ficompl
mov
xor
xchg
add
mov
or
xchg
aam
adc
mov
cwtl
push
pop
or
lret
popf
iret
mov
addr16
pop
lahf
ror
fldenv
xor
movsl
push
mov
cmp
fstl
rorl
adc
jns
mov
cmp
repnz
mov
popf
data16
mov
and
mov
dec
aad
mov
shll
jns
or
movsb
ljmp
cmpsb
decl
iret
js
xor
mov
mov
sti
daa
push
out
mov
pop
adc
rol
pop
jne
pop
mov
or
cmp
nop
sub
jo
mov
in
push
lods
mov
xchg
mov
mov
fcmovb
pop
or
push
jmp
xchg
popa
stos
popf
pop
and
les
inc
fsts
mov
es
xchg
jmp
cmp
shll
inc
adc
daa
mov
bound
push
sbb
and
stc
fildl
cld
scas
adc
fimull
faddl
xchg
push
pop
out
sbb
mov
push
ret
or
cltd
adc
out
cli
testb
pop
mov
jge
cmp
fistl
cmpsl
or
push
xchg
das
inc
rcrb
std
test
scas
cmp
and
push
imull
shrl
arpl
dec
imulb
aam
pop
xor
mov
xor
shll
pop
cmp
xor
push
adc
mov
les
jecxz
rcrl
scas
mov
mov
dec
lretw
addl
mov
fisttpl
mov
jno
sub
push
sbbl
push
pop
sbb
jge
ljmp
mov
xlat
xlat
mov
stc
pop
jecxz
scas
mov
adc
or
sbb
pop
das
icebp
rol
pushf
daa
jecxz
imul
mov
int
shll
imul
pop
lods
inc
push
sahf
xchg
lods
mov
fmul
fdivrl
and
stc
pop
cmp
sbb
mov
insb
push
pop
rorl
repz
inc
adc
incl
adc
shlb
jmp
shlb
jno
hlt
sahf
idivl
jae
sbb
fwait
outsl
incl
sub
adc
cwtl
xchg
cmp
inc
xchg
es
lahf
fimull
jnp
xor
sbb
cmp
xor
cltd
and
out
jg
lahf
cli
inc
inc
rcll
sahf
aam
les
les
pop
fs
or
jne
mov
imulb
bound
scas
cmp
sub
push
dec
fildl
mov
adc
mov
data16
movsl
lods
cmp
xor
andb
add
imull
enter
ret
lock
pop
inc
mov
dec
dec
fnsave
iret
mov
cmpl
mov
test
mov
shrb
lds
pop
mov
push
mov
jnp
lret
jno
stos
xchg
mov
inc
inc
mov
cmp
test
mul
out
cmpsl
or
cmp
test
cmp
sub
hlt
mov
dec
mov
jge
cmp
clc
dec
pop
push
aad
adc
pop
push
xor
mov
mov
inc
fmuls
jecxz
sbb
repz
les
sahf
xor
and
dec
loop
mov
mov
jns
mov
andl
outsl
loopne
imul
xor
imul
adc
cmpsb
in
push
nop
jbe
cmp
iret
nop
pop
cmc
cmp
icebp
rcll
dec
fwait
adcl
cmp
icebp
xor
fucomip
cli
addr16
xchg
pop
das
cmpsl
dec
cmp
dec
aaa
mov
lahf
xchg
ja
cltd
or
imul
or
adc
lea
cmp
shrl
push
mov
push
sub
repnz
or
mov
or
movsl
cmp
ret
xor
dec
pop
dec
ffreep
adc
mov
jecxz
std
adc
xchg
dec
mov
loope
cmp
xchg
fmuls
sbb
lods
les
js
lret
in
adc
lds
push
aad
pop
iret
pop
fstpl
adc
das
jg
xor
xor
shrl
test
sub
jl
inc
sbb
insl
pop
dec
pop
mov
jae
mov
in
push
xchg
clc
pop
push
add
out
cmpsl
scas
inc
movsb
int
fbstp
jmp
adcb
test
test
sbb
in
sbb
les
roll
mov
ds
push
sub
cmpsl
in
dec
pop
jecxz
push
out
call
sub
lret
add
add
cmp
jns
out
mov
xlat
repz
jg
arpl
push
leave
test
jo
daa
loop
push
fmull
sub
out
or
fsincos
or
call
out
add
cmp
stos
xchg
mov
dec
dec
loope
jp
stos
jo
imul
sub
pop
xor
fsts
fsubp
or
in
addr16
test
jne
pop
iret
lahf
push
mov
mov
daa
call
test
or
test
pop
imul
out
insb
mov
xor
mov
cmpl
add
or
push
fwait
lcall
shrl
inc
pusha
pop
jbe
push
js
xor
push
shlb
xchg
mov
xchg
test
repz
cmp
mov
popf
inc
mov
in
daa
jne
jns
and
or
out
cmpsl
mov
iret
shlb
mov
push
mov
je
mov
imul
push
pop
movsb
sub
imul
fwait
and
jae
mov
xlat
inc
or
shl
std
push
cmc
add
sub
ret
sub
movsl
push
test
mov
inc
data16
ljmp
mov
jns
or
cmp
and
pop
out
inc
mov
sarb
pop
mov
loopne
jg
out
xor
call
jnp
pop
out
jns
mov
push
sbb
jnp
sub
xchg
fcmovnu
iret
push
pop
mov
std
xchg
pop
xchg
pop
mov
cmpb
jg
imul
inc
xor
jle
int3
movsb
mov
mov
rorl
inc
aam
cmpsb
sub
mov
shlb
sub
push
cmp
aad
cmp
repnz
mov
insl
sub
dec
mov
mov
into
fcmovne
xor
hlt
incl
test
test
mov
sbb
jo
out
cwtl
xchg
sbb
dec
lcall
cmp
das
add
add
jb
xor
and
dec
push
orb
and
outsb
mov
insl
push
mov
cmp
xor
lock
inc
shl
loope
ds
mov
pushf
lea
cmp
aas
push
arpl
shrl
pop
lods
sbbb
lds
mov
jg
jnp
ret
mov
cmp
cmpsl
ds
sub
mov
xchg
sub
hlt
ret
jnp
lret
jp
pop
stos
imul
add
loop
or
mov
and
mov
push
adc
cltd
leave
shlb
jge
jmp
out
popf
inc
sbb
cmpsb
sbb
mov
call
cmp
dec
in
adc
pop
inc
ret
hlt
xor
sub
scas
scas
cld
sbb
jg
sbb
pop
xor
sub
aad
push
push
addl
jne
xchg
adc
fdivl
push
cmp
sub
sahf
cmp
test
xor
dec
std
sub
push
sub
out
cmpsb
inc
cmp
pop
rolb
pop
outsb
inc
js
cmp
inc
jno
mov
add
call
sarb
mov
loope
and
insb
xchg
mov
mov
jg
jnp
mov
ficomps
loopne
push
fisubl
int3
cmpsb
stc
addb
mov
mov
mov
or
mov
add
rcrb
inc
nopl
xchg
es
and
in
mov
fidivs
jne
add
jg
clc
add
xchg
jne
xor
push
dec
mov
jge
lahf
xor
data16
mov
adc
adc
mov
pop
push
ja
add
movsb
cmp
icebp
test
das
pop
or
stc
or
pmulhuw
rolb
in
clc
out
lds
mov
subl
mov
out
test
shl
cmp
repz
ds
mov
pop
testl
jle
arpl
lods
mov
mov
dec
push
adc
sti
jo
sub
aas
mov
mov
mov
mov
push
bnd
pop
sbb
sbb
mov
rcr
inc
push
push
jno
cmp
mov
frstor
aas
sbb
xchg
mov
mov
push
fisttps
popf
mov
xchg
mov
mov
or
std
add
fidivrl
and
aad
out
loop
jge
lds
dec
cmp
sub
sbb
cmp
sbb
rcl
xor
inc
ret
inc
add
xchg
xchg
and
xor
cli
lret
or
and
push
pop
dec
inc
xor
add
cmp
adcl
cmp
stc
ret
inc
jae
fisubl
xchg
cld
cmp
out
xchg
ljmp
mov
push
int3
mov
pop
andl
push
mov
jmp
push
lock
mov
dec
inc
dec
push
iret
cmp
adc
stc
mov
fdivl
sbbb
mov
xchg
mov
pop
jnp
outsl
dec
pop
ret
sbb
or
xchg
shrb
mov
mov
or
pop
out
aaa
inc
dec
data16
movsb
pop
add
add
imul
sub
jo
pop
adc
les
and
pop
cmovns
jns
out
cs
pop
pop
inc
pop
push
cmp
sub
lds
jne
add
xor
sub
push
and
inc
jg
jl
inc
repnz
sahf
lds
out
dec
popa
xor
xor
icebp
push
data16
sub
and
or
mov
dec
inc
jp
shl
out
push
pusha
pusha
aaa
pop
lods
fs
stc
je
push
rcl
adc
mov
aad
dec
ret
lods
add
jo
xor
add
nop
xchg
aam
mov
jle
jne
fistpll
mov
cmpsb
adcl
pop
mov
ds
mov
push
jp
fndisi(8087
cli
xchg
adc
cmp
mov
push
jno
das
insb
jmp
cltd
jo
mov
idivl
lcall
dec
mov
xchg
sub
add
sbb
push
out
lret
jae
push
aad
fisubrl
mov
lds
inc
jns
jns
pop
cmp
mov
ret
adc
or
pop
daa
leave
mov
es
mov
insb
in
lods
test
add
and
imul
adc
cmp
leave
inc
push
data16
push
cmpxchg
xor
and
nop
sbb
call
adc
stc
dec
fcmove
cmp
ffreep
gs
pop
push
movsl
repnz
and
mov
add
lahf
in
cmp
cmp
in
xchg
mov
dec
xchg
shll
hlt
cltd
dec
push
cwtl
adc
cmp
jo
popa
jg
icebp
pop
cmpsl
and
out
repz
push
mov
jns
xchg
incb
ds
adc
pop
pop
cmc
cbtw
nop
pusha
into
mov
jnp
jns
adc
popf
mov
cwtl
out
insb
fistps
pop
mov
xor
arpl
cmp
lret
cwtl
add
mov
faddl
fcmovbe
lahf
xor
jmp
aaa
mov
mov
bound
cmp
xor
adc
add
inc
jb
enter
inc
dec
push
test
push
shl
jae
push
mov
je
mov
fmulp
pop
int3
or
popf
sbb
cmp
es
xor
push
insl
lods
in
xor
inc
or
loop
ret
and
cmp
jecxz
jl
dec
sbb
lahf
lret
lea
aad
and
add
push
inc
rcr
sub
dec
inc
dec
mov
mov
xchg
sarl
mov
cmp
pusha
inc
fld
mov
lahf
popa
imul
fsub
add
push
jb
xchg
cld
push
repnz
xchg
sbb
aas
push
imul
pop
das
mov
push
ss
ds
outsl
pop
repz
jge
cmp
pop
imul
aad
adc
icebp
add
popa
pop
push
jge
test
lret
or
push
jp
mov
iret
xor
cmp
jle
pop
add
mov
js
stc
cs
sbb
iret
fistps
addr16
aaa
cwtl
loopne
fcoml
jbe
xlat
push
sub
mov
es
mov
and
push
scas
inc
inc
aad
mov
or
and
je
cltd
je
out
xlat
add
fcmovb
sbb
sub
pushf
dec
loope
insl
push
clc
ret
cli
cmpsb
cmp
push
lds
cmc
cmp
and
pop
sub
fs
leave
add
push
shrl
pop
dec
sub
adc
fiadds
xchg
dec
cmp
mov
xchg
repnz
int
div
push
mov
lcall
xchg
fmuls
std
mov
cmp
imul
lahf
xchg
es
xor
mov
and
jl
lods
test
xor
daa
pop
mov
pop
dec
jb
scas
jnp
jmp
or
mov
mov
push
add
mov
xor
fcoml
lods
jmp
fldlg2
stos
dec
add
or
fdivrl
xchg
int3
leave
in
and
jne
aas
dec
clc
and
push
cmpsl
addb
out
jo
push
jle
sub
pop
or
adc
jbe
push
cmp
in
shll
sub
fsts
sti
mov
in
cs
pusha
or
dec
les
cmp
aad
push
jae
jg
scas
and
fsubs
fs
movsb
sbb
jns
push
loop
cmp
or
mov
flds
stos
leave
enter
scas
inc
hlt
notl
fs
mov
sbb
jns
ds
mov
rcl
jp
ss
rorl
sbb
mov
mov
movsl
rorl
mov
sub
xchg
sti
ret
dec
iret
jecxz
pop
es
push
rcr
decb
stos
je
sahf
ds
and
push
adcl
cwtl
adc
dec
cmp
pop
cmp
das
jmp
pusha
mov
lods
popf
push
repnz
lds
mov
or
lret
cmpsb
cwtl
xor
mov
ja
es
mov
lea
mov
adc
ljmp
movsl
scas
loope
sbb
enter
idivl
mov
cmp
shlb
shrl
xchg
or
mov
xchg
pop
pop
cltd
adc
cltd
mov
xchg
jl
repz
xchg
push
pop
rorl
sbb
sub
adc
xor
push
and
cmp
popf
sub
mov
dec
out
sbb
rorb
push
out
mov
aas
sub
lea
sub
mov
test
jecxz
test
dec
fsubl
sbb
mov
inc
push
test
repz
mov
push
xor
fstl
movsl
mov
je
aaa
jecxz
test
fidivs
jbe
push
int
push
rol
jnp
mov
xlat
es
fcom
ret
pop
fwait
jbe
inc
lea
jg
push
repz
push
jp
cmpl
in
shll
mov
jns
mov
push
xchg
jo
lcall
shll
fs
ljmp
les
pop
rolb
mov
fwait
ret
cwtl
mov
loopne
jg
ds
aaa
dec
inc
mov
pop
aas
push
mov
leave
jb
das
sub
mov
popa
rcrb
push
jecxz
pop
dec
mov
hlt
clc
cmpsb
cmp
pop
insb
lds
push
pop
outsb
dec
pop
or
mov
and
loope
es
lods
inc
sbb
popf
lea
xchg
add
push
push
cmp
adcl
cmpsb
std
psubsb
inc
mov
in
call
into
out
outsl
outsl
jo
jo
aad
and
cld
out
adc
jge
je
cltd
rolb
xchg
inc
pop
loopne
ljmp
aas
repnz
int3
aad
mov
push
jns
fwait
mov
lods
push
or
jns
mov
or
sub
jecxz,pt
rorl
and
lahf
mov
mov
aaa
gs
add
and
test
pop
ss
cmp
bound
xchg
loope
and
sub
mov
inc
or
lahf
jb
and
pop
ret
lds
lret
gs
mov
ret
add
xchg
std
adc
mov
and
mov
add
jmp
inc
adc
sahf
lret
pop
lret
mov
pop
cmp
test
mov
test
mov
mov
pop
dec
popa
aad
push
sarb
push
pop
insl
xchg
push
clc
fwait
icebp
incb
xchg
dec
push
pop
fnstcw
or
xor
pop
jp
jge
iret
sbb
addl
inc
fsubr
dec
out
aad
in
mov
das
dec
hlt
add
cmpsl
adcb
sub
push
pop
pop
push
dec
rol
ret
sbb
lds
sti
aad
adc
lahf
and
addr16
je
xor
cmpsb
sbb
and
xor
ja
aaa
addl
mov
xchg
lods
inc
fidivl
pop
sub
push
lock
or
mov
xchg
daa
outsl
pop
jne
into
stos
mov
lock
and
dec
inc
jnp
sbb
fnsave
push
in
mov
stos
and
xchg
popa
clc
ret
jg
stc
mov
cmc
xor
dec
bound
pop
in
push
enter
lret
rcl
mov
fdivl
add
and
cmpsl
jne
out
test
push
jl
pop
sbb
lods
dec
jge
shlb
lret
lret
lcall
inc
jmp
sub
cmpsl
incl
lods
xchg
lods
lds
mov
mov
add
rcrl
add
xchg
pop
xor
icebp
enter
in
dec
out
int3
mov
insb
add
sub
push
add
or
daa
fsubs
rorl
stos
sbb
fisttpl
cmp
shrl
out
lock
cltd
fsub
cwtl
ds
and
cli
scas
lea
icebp
mov
arpl
in
sbbb
cmp
xor
sbb
xchg
sub
pop
mov
sub
data16
inc
shlb
nop
cmc
call
pop
jb
push
pop
jo
adc
or
inc
push
fisttpll
jp
ja
jg
rclb
cmpb
jne
inc
repnz
inc
cmc
xchg
pop
jg
cmpb
nop
jle
testb
xchg
add
bnd
mov
and
adc
push
sub
push
push
fwait
add
enter
loopne
les
add
cli
pushf
push
aam
xor
mov
lods
in
mov
sarl
rcl
sub
lcall
in
subl
pop
or
int
mov
sbb
repnz
idivb
push
shl
bound
movsl
les
xor
cmp
jmp
dec
pop
mov
mov
shrl
and
inc
mov
xor
mov
pop
jae
sub
sbb
in
sbb
or
repz
les
mov
push
inc
sbb
loope
lds
std
outsl
push
adc
mov
xchg
dec
xchg
into
fwait
mov
push
fstps
dec
cmp
xchg
addr16
enter
popa
sub
sub
lcall
cli
rcrl
arpl
mov
iret
addb
out
sbb
sbb
pop
mov
push
cltd
enter
xchg
pop
fcmovu
fldenv
mov
pop
icebp
mov
or
jle
mov
and
test
pop
mov
sub
sbb
xchg
lahf
add
dec
dec
movsl
jl
test
xchg
sub
cmp
scas
rclb
and
clc
inc
and
rcrl
outsb
shll
frstor
inc
mov
push
fstpl
out
icebp
fsubs
add
leave
mov
out
ja
pop
mov
and
mov
xorb
ss
xchg
out
fwait
xchg
and
jge
icebp
sbb
sbb
push
fiaddl
cld
adc
mov
and
testl
popa
mov
scas
push
ja
fsubrs
xchg
mov
call
int
cmp
push
jmp
ds
inc
hlt
daa
popf
pop
or
lret
cmp
jle
xchg
pop
add
mov
xchg
pop
notb
nop
stc
jae
cmp
scas
adcb
and
fstpl
in
fcmovbe
lret
adc
loopne
shrl
inc
push
xor
shlb
or
adc
push
aaa
push
pushf
sub
pop
mov
lods
repz
mov
das
ja
xchg
mov
jne
xchg
enter
and
sbb
or
ret
pop
mov
pop
and
shrl
adc
push
mov
imul
dec
jae
daa
dec
push
cmp
js
jb
sub
inc
pop
fistps
arpl
sbb
sahf
testl
push
jl
jae
jge
inc
add
xor
popf
leave
daa
jmp
or
pusha
jl
jmp
outsl
sbb
add
into
je
andl
adc
push
or
mov
xor
outsb
push
ljmp
jno
pop
cwtl
jp
mov
cwtl
mov
outsb
pop
push
sbb
fidivl
lock
bound
icebp
or
filds
jge
sbb
add
xchg
fdivs
movsl
lcall
sub
sahf
jns
cs
pop
std
int3
test
push
cmpsl
out
dec
mov
mov
cwtl
inc
sub
mov
les
fcompl
fisubrl
xchg
push
scas
mov
outsl
pop
fisubs
mov
ljmp
in
lea
mov
outsb
lock
pop
push
nop
mov
sub
out
ds
cmpsl
mov
nop
and
cmp
aad
jmp
xlat
cs
jecxz
clc
pop
sub
loope
imul
push
das
or
sbb
xor
bound
fdiv
inc
popa
xchg
cmp
ljmp
data16
rol
ret
or
lods
lea
fidivrs
cmp
lret
inc
cmp
ds
xor
lret
pop
mov
idivl
add
sarb
out
fsubl
aas
outsb
pop
iret
cltd
std
popa
xchg
or
aad
in
fcoml
ret
or
arpl
negb
mov
adc
testb
mov
jns
push
std
pushf
orb
arpl
mov
sub
sbb
mov
rcrb
das
addr16
js
test
inc
push
sti
jbe
pop
sbb
movsl
pop
jmp
mov
and
xchg
test
scas
imul
inc
inc
inc
test
out
sub
mov
outsb
dec
pop
mov
in
xor
fcom
or
pop
decb
pusha
ljmp
mov
fimull
jl
movsl
inc
js
in
imul
pop
daa
sbb
cli
mov
adc
adc
cli
nop
xchg
and
add
testl
pop
xorb
and
js
sbb
inc
dec
test
fistpl
popa
ljmp
subb
cmp
lahf
inc
xor
out
pop
test
adc
pushf
pop
sub
xlat
mov
out
je
pop
cmpsb
cmovbe
lods
jp
and
je
adc
dec
bound
jp
jo
mov
cmpsl
cs
xchg
adc
mov
fneni(8087
add
pop
cmp
jns
mov
rolb
or
xchg
aaa
in
inc
add
mov
mov
call
cmpsl
cwtl
inc
fldenv
testl
sub
leave
int
shlb
ret
outsb
mov
divb
andb
fidivs
add
mov
stos
jae
push
gs
dec
mov
loopne
mov
adc
mov
jg
adc
incb
mov
xorl
adc
pop
xchg
mov
inc
clc
jns
jo
dec
push
jo
pop
arpl
mov
out
adc
subb
xchg
or
daa
fadds
cmpsl
aas
scas
jae
xor
mov
adc
aaa
cmp
push
ss
xor
and
dec
dec
sbb
jge
jbe
xchg
inc
fcomi
jmp
pop
mov
cmp
adc
pop
cmp
test
das
xchg
movsl
pop
push
loop
incl
pop
mov
xlat
lock
das
and
lock
imul
jne
jo
sbb
pop
ljmp
push
std
xchg
mov
int3
xor
mov
pop
cmp
jb
adc
xor
pop
sahf
pop
aaa
jmp
jge
std
je
pop
fistl
fidivl
mov
mov
adc
dec
sub
ljmp
cmc
mov
inc
mov
xchg
pop
repnz
pop
mov
mov
dec
pop
mov
push
xchg
sub
push
lea
aaa
iret
mov
push
rorl
outsl
add
test
inc
xchg
add
mov
lcall
popa
clc
push
push
pop
pushf
je
pop
inc
inc
notl
push
push
mov
cwtl
fcompl
xchg
adc
inc
jecxz
cmp
out
fsubrp
mov
in
mov
xchg
adc
add
daa
jb
call
xchg
rolb
add
inc
aad
sub
fs
sbb
pushf
js
in
mov
mov
cmp
in
add
imul
shll
cli
ret
jmp
or
ljmp
aas
filds
ds
pop
cmp
int
xchg
fs
mov
je
sahf
sub
test
loope
loopne
scas
xchg
cmpsb
dec
sahf
mov
sbb
add
add
pop
mov
aad
fldl2t
cmp
outsb
jl
repz
gs
jl
xchg
xlat
adc
sub
pop
cli
stos
ja
je
and
xchg
leave
xchg
push
out
fs
and
dec
cmp
jp
nop
scas
mov
xor
adc
xor
jo
mov
mov
mov
pop
aas
icebp
shl
fsubs
dec
shrl
mov
test
xor
cli
jle
fwait
jle
mov
hlt
jp
movsb
dec
mov
inc
negb
sub
fsubrl
or
popf
bound
data16
in
cmc
push
xchg
movsb
cmpsl
sbb
stc
test
mov
xor
dec
test
bound
in
je
and
lods
jnp
cmpsb
and
mov
pop
xor
imul
sub
fs
sub
pop
adc
jae
cmp
lods
arpl
pop
mov
dec
and
push
sbb
out
sarl
push
pop
xor
jge
xor
jns
subb
jmp
jne
dec
aas
xchg
ljmp
adc
repz
jo
sbb
ss
nop
rol
lahf
and
lret
jne
mov
repnz
data16
pop
jae
sub
mov
or
pop
jecxz
mov
pop
mov
pop
sub
or
fdivrs
pop
xor
jns
xor
jle
sub
sbb
ljmp
xchg
cltd
sbb
insl
dec
adc
fdivr
jge
cmp
in
or
adc
sti
lret
repnz
jmp
or
call
insl
stos
ljmp
shlb
lahf
hlt
test
lret
lahf
cmpsb
sti
xor
push
dec
dec
mov
aaa
adc
mov
je
lret
filds
xor
jne
or
pop
cmp
mov
sub
in
out
inc
lcall
das
lods
jl
sub
push
jecxz
add
pop
rcll
cmp
mov
ret
cmpsb
stos
add
add
sbb
fstpl
sti
movsl
push
push
iret
xchg
jnp
or
jge
and
call
xlat
addr16
mov
lret
int3
dec
icebp
mov
or
sub
leave
xor
lret
adc
mov
inc
imul
sbb
jp
in
adc
scas
call
icebp
sub
popa
clc
jbe
fbstp
pop
cmpsl
sbb
fstl
imul
mov
mov
dec
lods
or
xor
dec
mov
fadds
in
and
movsl
push
cmp
in
lods
cmp
inc
das
cmp
xchg
jae
xchg
icebp
dec
test
pop
fisubrs
cmp
and
shll
iret
push
dec
popa
xor
std
mov
frstor
inc
fcoml
filds
xchg
inc
jbe
hlt
sub
aam
lgs
test
jbe
mov
pop
aam
cmp
xchg
mov
pop
lret
mov
fldl
sub
int3
arpl
mov
push
push
cld
dec
mov
decb
xor
jg
xlat
mov
jns
pop
rcrl
pusha
shll
xchg
and
sti
cmpl
mov
mov
iret
in
add
cmp
mov
mov
bound
push
jae
or
pop
dec
dec
mov
loopne
test
push
roll
icebp
cwtl
push
and
inc
xor
cltd
lock
jl
xor
mov
fldl
push
aad
mov
outsb
or
or
adc
out
jns
push
in
in
cmp
ja
sahf
lock
sub
or
imul
dec
stos
jmp
mov
addr16
out
stos
xor
mov
fnstcw
jbe
cwtl
scas
sti
lahf
andl
subb
push
and
pop
out
shlb
js
and
enter
mov
mov
xor
in
sub
sbb
dec
dec
mov
dec
dec
cli
pop
cmp
and
push
cmp
xchg
mov
dec
add
dec
iret
popf
lcall
into
xor
adc
sub
push
insl
jne
test
mov
xor
push
notl
push
lret
js
mov
add
mul
push
movsl
add
add
mov
icebp
add
jp,pt
in
sahf
push
nop
mov
or
shll
mov
sub
int3
mov
push
dec
pop
jp
das
test
xchg
pusha
lods
push
add
sub
rorb
loope
fists
pusha
inc
fs
aaa
data16
ljmp
mov
inc
and
popf
mov
xchg
aaa
jns
xchg
shr
push
mov
pop
jmp
jmp
into
sbb
pop
ja
or
mov
pop
lods
xlat
mov
stos
pxor
popf
icebp
pop
popl
inc
cmc
adc
xlat
pop
lahf
ss
in
mov
cld
xchg
popa
xchg
mov
out
cld
lcall
je
xchg
test
adc
cwtl
push
call
push
mov
jnp
adc
out
cli
mov
mov
sbb
sub
adc
adc
sub
cmp
aas
nop
in
sbbb
cltd
inc
push
adc
imul
mov
jo
mov
sub
or
ret
dec
push
pushf
sarl
pop
rorl
out
sbb
lret
outsl
jnp
xchg
lret
mov
in
pop
orb
mov
or
mov
adc
pop
or
mov
lods
or
or
add
push
pop
cmp
sub
pop
cs
add
cmp
loope
frstor
shll
or
xor
ja
push
cltd
pop
and
jo
fiadds
in
scas
xchg
inc
popa
out
mov
gs
push
push
sbb
js
insl
dec
popf
adc
push
add
out
or
dec
shrl
inc
inc
lods
add
sbb
movsl
addr16
shll
inc
pop
push
add
push
push
iret
fmulp
test
push
mov
cli
push
fistpl
je
fidivs
add
testb
fnstsw
sub
ja
cltd
push
add
xchg
shld
in
sub
xchg
or
and
jecxz
sbb
xchg
add
mov
mov
mov
and
pop
fildl
add
lret
adc
dec
inc
cwtl
add
dec
dec
sbb
xor
sti
mov
pop
xchg
sub
movsl
fadds
sub
sti
lods
jle
fwait
cltd
lea
jl
out
cmp
mov
or
stos
pop
mov
hlt
and
divl
push
test
dec
loope
add
repnz
pop
pop
outsl
fdivp
stos
inc
add
pop
out
jle
or
mov
push
add
inc
fs
cli
mov
test
jns
sar
or
fstps
out
fidivrl
push
lds
scas
jno
repz
stos
js
push
insl
shrl
lock
mov
in
dec
mov
pop
in
xor
push
out
movsb
or
sti
jecxz
das
call
ss
out
mov
push
out
mov
jge
mov
in
push
sbb
cs
jns
push
std
inc
enter
cmpsl
test
jo
outsl
rol
sub
aad
mov
mov
inc
imul
imul
test
adc
int3
je
jmp
push
mov
movsb
xor
jmp
cmpsl
lea
sbb
dec
mov
pop
in
mov
fsubrs
dec
jo
rcl
ja
es
sub
daa
ds
or
dec
pop
decb
out
fs
adc
testb
shll
sbb
mov
in
aam
push
movsb
pop
repnz
cmp
outsb
shr
push
cmp
negb
push
xchg
push
aad
xchg
nop
repnz
cwtl
icebp
fistl
repnz
adc
clc
popf
hlt
mov
movsb
outsl
sub
int3
xchg
add
and
sub
dec
xchg
shl
cmp
inc
std
dec
pop
insb
lock
jno
sub
lcall
in
addl
movsb
adc
mov
sbb
stc
int3
mov
imul
and
insl
insb
or
aam
or
add
icebp
wrmsr
imul
fisubrs
add
mov
mov
xor
in
push
aad
aaa
jp
stos
and
lret
rolb
scas
lods
dec
push
dec
out
js
inc
dec
rcrl
shrb
mov
and
add
insl
mov
dec
stos
sbb
stc
pop
or
add
xchg
out
lock
das
lods
pop
stos
std
ret
sbbb
hlt
pop
cs
mov
aas
sub
lahf
add
icebp
push
add
sub
ss
mov
lea
ud2
rorb
cld
or
pop
into
mov
jg
cmpsl
sbb
lock
jnp
push
jle
int3
cwtl
rol
cwtl
push
hlt
or
push
cmc
sub
jge
ja
cmpsl
loopne
fldcw
jbe
mov
jp
jno
sub
inc
aas
cmp
loope
sbb
or
add
mov
fs
adc
repnz
inc
push
ja
add
imul
je
inc
bound
mov
scas
call
ret
in
repnz
fxch
and
add
xchg
fwait
or
cs
roll
adc
push
inc
out
jmp
push
sbb
mov
mov
jo
iret
outsb
andl
pop
sub
gs
dec
iret
jo
frstpm(287
insl
cmp
dec
inc
in
jmp
fsubl
popa
cld
lret
push
arpl
fdivp
cli
xchg
bound
out
ret
xchg
mov
adc
cmp
mov
jo
imul
dec
gs
lds
mov
inc
loope
icebp
jae
mov
push
xchg
pop
insb
lcall
insb
mov
sbb
mov
mov
int
pop
push
enter
aas
push
jp
fidivs
dec
iret
dec
btc
sbb
mov
or
sbb
out
leave
pop
push
sub
out
mov
lahf
fcomp
mov
xor
cmpsb
insw
xchg
rorb
ret
mov
movsb
mov
push
mov
sbb
iret
jecxz
or
xchg
fidivrs
leave
mov
repz
xchg
lds
je
sub
in
cltd
or
inc
adc
add
mov
fisubl
leave
cmp
jle
inc
cmpsb
nop
rorl
jecxz
pop
xsha1
cmpsb
lea
mov
mov
aad
inc
xor
outsl
xor
in
lea
out
mov
inc
jne
dec
dec
inc
pop
in
popa
sub
push
dec
ret
xchg
push
mov
iret
mov
movsl
shrb
lahf
xchg
sub
mul
xchg
mov
pushf
xor
push
jnp
mov
mov
scas
js
xor
lods
fyl2xp1
sbb
fsubrs
jmp
inc
add
mov
int3
or
inc
pop
stos
pop
xchg
jnp
xlat
stos
dec
mov
out
adc
jne
rcrl
jns
rcr
cmpsl
shlb
mov
mov
mov
pusha
add
ret
data16
cltd
push
push
outsl
and
out
js
ret
hlt
iret
test
inc
xchg
push
jmp
repnz
jno
sub
push
test
mov
or
cmp
dec
fnstsw
mov
push
shll
cs
test
imul
fsubp
test
sahf
cmovns
mov
adc
dec
faddl
cwtl
fldcw
lcall
dec
xor
dec
jmpw
jl
mov
sub
push
inc
pop
cmc
and
push
pop
fmuls
xor
sub
outsl
daa
sti
sbb
fwait
data16
dec
ret
outsl
test
ss
mov
cwtl
pop
inc
xor
sbb
in
inc
int3
pop
nop
clc
pop
xor
lods
inc
mov
fdivrs
adc
sub
repz
or
inc
jne
je
push
sub
cmp
dec
cmp
lods
push
js
xchg
movb
movsb
mov
pop
leave
jecxz
jne
jge
push
sub
ss
fdivs
pop
cmc
inc
xchg
test
into
es
test
js
push
push
mov
iret
addr16
fadds
mov
sub
inc
arpl
sbb
inc
mov
dec
int3
and
int
scas
loope
pop
addr16
bound
mov
fs
popa
and
movsl
cmp
xchg
fidivrl
pop
lods
pop
test
xchg
inc
mov
cwtl
call
leave
or
lret
sbb
fidivs
xor
sub
mov
cmp
call
cmp
push
ss
or
mov
adc
in
loopne
cli
jmp
sub
repnz
jle
cwtl
es
shl
inc
rcll
aas
and
adc
jecxz
xlat
push
insl
adc
or
push
outsl
jno
mov
push
sbb
push
add
dec
xchg
sub
mov
xor
and
test
mov
jl
inc
push
shl
mov
das
or
lods
push
mov
cmp
jl
pop
push
rorl
push
pop
repnz
xor
test
sub
or
insb
push
sub
xchg
sub
mov
jns
js
shrb
pop
inc
and
mov
lcall
add
add
push
or
test
mov
test
inc
aam
aas
mov
fiaddl
lods
xchg
rcrb
in
ret
jae
and
add
andb
mov
das
pop
lock
adc
out
lods
js
adc
lcall
loope
lods
movsl
mov
inc
jne
mov
inc
in
inc
jmp
out
cmp
frndint
dec
jecxz
cli
pop
scas
xlat
mov
jge
mov
dec
or
sahf
xor
xlat
cmp
dec
pushf
clc
insl
add
ds
out
mov
xchg
adc
jnp
mov
mov
rcrb
add
pop
ja
sub
hlt
adc
and
mov
out
mov
mov
int3
jl
push
loope
push
push
and
stc
cld
mulb
or
test
test
add
repz
fcom
xor
mov
sbb
lock
mov
adc
add
and
mov
mov
in
pop
les
fs
sub
fwait
push
or
xchg
jbe
rorl
sub
mov
push
insb
scas
adcl
cmpsl
das
mov
lock
sub
mov
jb
pop
add
sbb
leave
adc
in
xor
dec
pop
jp
scas
testl
jnp
rol
xchg
jge
cmpsl
das
xor
add
jmp
push
xchg
mov
movsb
sti
mov
jno
xchg
cmpsl
push
sub
push
mov
movsb
clc
pop
cmp
pop
jle
dec
aad
adc
out
faddl
and
add
and
data16
lea
push
arpl
fiadds
inc
pop
push
leave
mov
jl
ljmp
testb
jne
rcrl
nop
sbb
dec
daa
push
call
iret
or
mov
gs
sbb
add
pop
pushl
test
stc
cmp
aam
xchg
xorb
or
pop
fnstsw
push
sbb
mov
movsl
arpl
add
inc
test
cmc
mov
mov
insb
das
inc
lcall
mov
jns
xor
xchg
repnz
loop
dec
or
cmp
mov
sub
rcrl
xchg
add
dec
movsb
shlb
sbb
cmp
jecxz
popf
pop
and
scas
mov
mov
leave
push
mov
inc
inc
shrb
outsb
jge
int
ret
sub
in
lods
in
lock
divb
cmp
les
loopne
pop
imul
mov
xchg
pusha
sbbb
push
push
push
mov
fisubl
and
inc
out
jle
fldl
mov
sub
mov
or
outsl
fbstp
push
sub
rcrb
lds
push
inc
mov
and
or
lods
int
es
or
idivl
dec
movsl
shlb
js
popa
mov
jge
xchg
pusha
testl
pop
push
cld
sub
rolb
dec
adc
jle
push
jmp
pop
dec
or
adc
and
adcb
imul
outsl
mov
adc
loop
pop
imul
dec
fs
jmp
and
daa
lret
das
or
shll
scas
push
lds
out
add
push
jmp
dec
and
sbb
mov
ljmp
sbb
shrb
and
les
mov
nop
xor
sti
outsl
nop
insl
add
popl
andb
xchg
mov
cs
addb
dec
and
aas
popf
pop
push
add
sub
mov
cmp
les
pop
push
daa
pop
pop
push
out
nop
sub
mov
aaa
in
push
xchg
fidivrs
iret
cmpl
sub
mov
push
mov
dec
adc
popa
fidivs
subb
pushf
push
fwait
jp
gs
imul
andl
scas
sbb
inc
sbb
mov
sbb
dec
add
xor
imul
mov
stos
lods
mov
popf
incl
or
int3
dec
inc
cmc
mov
push
jmp
loop
aas
imul
fldenv
mov
xchg
push
jbe
and
nop
cmpb
in
push
xchg
mov
out
pop
shlb
mov
lea
mov
lods
out
jmp
pusha
lcall
cltd
cmpsb
adc
jns
insl
data16
push
inc
or
bound
jo
cmp
adc
fs
movsb
cltd
pop
icebp
add
mov
and
xor
xlat
int
cmpsb
cmp
rcrb
rcll
arpl
xchg
jb
out
push
sbb
dec
mov
dec
insl
cli
aam
add
sbb
js
daa
xchg
daa
imul
loopne
and
xchg
sub
jnp
loopne
sbb
sarl
mov
ss
cltd
sbb
addr16
xchg
test
jo
cld
pop
xor
andb
mov
pop
push
clc
push
xor
sbb
inc
push
in
jnp
in
cmp
fwait
lahf
iret
fyl2x
mov
sbbb
and
mov
sub
loope
in
icebp
or
into
test
daa
mov
sbb
cmp
imul
fisubrl
inc
fmul
mov
xlat
movsl
xchg
fcos
sub
sbb
mov
enter
popl
cmc
or
pop
insb
add
and
mov
movsl
cmp
dec
push
fucomi
mov
pop
sub
enter
clc
pop
in
xchg
sub
push
aas
mov
xchg
sub
lcall
xchg
or
test
mov
mov
test
shrb
mov
sbb
orb
mov
xchg
jl
popf
lds
pop
insb
xorl
out
cmp
push
stc
push
addr16
js
in
std
enter
repnz
jns
xchg
pop
outsb
cmpsl
ljmp
sub
or
push
movsl
and
loopne
sahf
clc
push
cld
inc
repz
mov
or
adc
add
pop
mov
and
push
mov
inc
jecxz
lret
cmp
dec
scas
or
xchg
push
popa
cmpsl
test
lcall
in
inc
jo
dec
daa
out
shl
stc
cmp
cmp
cmp
stos
sub
sarl
pop
pop
mov
das
xorl
in
cmp
ja
fistpl
xor
dec
cmp
pop
cmp
je
ljmp
inc
lret
mov
add
xchg
cmpsl
dec
dec
cmc
mov
push
shll
sbbb
mov
into
mov
add
fadds
iret
aad
lcall
in
stos
xchg
pusha
iret
mov
dec
insl
int3
dec
fucomip
xor
rol
mov
jbe
movsl
xchg
ret
rcrl
cmp
js
clc
cmp
shll
js
cmp
pop
pusha
cmp
in
cmc
push
pop
cmp
mov
jge
jnp
add
add
test
lds
js
pop
mov
jae
andl
or
in
or
lcall
repz
fs
jno
push
or
mov
or
push
aas
xchg
sub
xchg
cmp
test
xchg
mov
push
ds
es
sahf
or
fdivp
xor
push
addr16
mov
arpl
pop
aaa
into
aaa
jne
int3
sub
push
fwait
push
idivl
or
in
stos
jmp
and
fcmovnbe
out
adc
push
ss
lods
and
add
sbb
mov
rol
mov
mov
out
fidivs
stc
popa
sub
fcompl
push
mov
lcall
or
inc
jmp
dec
dec
push
out
xchg
add
inc
call
xchg
sbb
xchg
and
movb
jnp
pop
jp
add
cmp
adc
push
cs
sub
sub
aas
xchg
test
or
int
in
scas
sub
daa
mov
rcl
das
lcall
arpl
dec
inc
insl
add
push
das
pop
push
outsl
cmp
lret
cmp
out
mov
sub
pusha
lahf
pop
dec
xchg
rcrb
jno
sbb
push
fnstsw
sbb
jl
mov
pop
dec
adcb
mov
testb
xchg
sub
sbb
sbbb
mov
or
inc
cld
push
icebp
es
sub
imul
test
ret
jmp
push
fwait
sti
rorl
ret
rcrl
xorl
sbb
mov
das
cmp
ret
fldl
std
cltd
pusha
sbb
adc
rol
jno
imul
invd
decl
pop
jnp
je
sbb
jl
lods
adc
sahf
imul
adc
jne
xchg
add
movsl
xor
xchg
jmp
dec
arpl
xchg
push
or
inc
lret
jne
fnstsw
addr16
jbe
fsubrs
imul
add
sti
test
in
push
dec
andb
sbb
outsb
icebp
andl
pop
shlb
pop
std
push
aam
or
int
xchg
xchg
call
or
testl
and
pop
test
dec
stc
sub
ds
icebp
cli
pop
push
dec
pop
imul
push
pop
testb
lea
test
cmp
jne
cltd
mov
pop
addr16
adc
mov
shll
xchg
sub
add
xorb
test
cwtl
pop
jle
pop
mov
mov
inc
iret
mov
jo
jle
jb
dec
imul
lahf
popa
mov
sub
jp
sub
adc
outsl
das
cmp
pop
clc
daa
mov
adcb
mov
inc
mov
inc
pop
sub
not
imul
movsl
mov
or
dec
mov
adc
inc
sub
dec
loop
jg
aas
and
cmp
std
inc
repnz
stos
xchg
xchg
roll
in
xor
push
movsl
dec
ficoms
ljmp
shlb
lods
not
xchg
sub
movsb
mov
push
mov
pop
add
sub
sub
aam
xor
or
cli
gs
sbb
or
push
dec
jbe
and
icebp
sbb
inc
mov
fbld
mov
arpl
adc
in
mov
icebp
movsl
movsb
addr16
cmp
or
repz
jno
mov
clc
loop
aam
add
pop
mov
fcomps
insl
lea
mov
outsl
mov
mov
adc
or
push
xchg
adc
cmc
jmp
fwait
pop
dec
mov
pop
pusha
or
or
mov
and
verr
mov
outsl
rol
sarl
imul
movsl
and
adc
sbb
sti
arpl
sub
add
test
and
mov
les
lods
jge
lods
jecxz
sahf
xor
cmpsl
pop
insb
sbb
filds
add
mov
rcrb
adc
stos
sbb
jne
testl
sub
jmp
jmp
mov
add
fidivrl
lods
sti
cs
or
imul
lock
js
stc
movsb
rorb
inc
push
lds
out
lahf
mov
or
outsl
jnp
pop
lds
inc
fs
push
shrl
xchg
jae
pushf
es
mov
add
es
add
test
inc
inc
fs
das
shrb
mov
mov
movsl
ret
inc
mov
imul
outsl
or
enter
testb
mov
lret
mov
in
jbe
push
dec
shrl
ja
sbb
sahf
hlt
inc
rolb
cmp
mov
or
sarb
push
lods
nop
mov
ret
into
jns
or
scas
adc
inc
stc
xor
mov
jae
imul
inc
dec
inc
jnp
push
and
popa
push
loopne
cmp
and
jl
out
jp
add
inc
add
xchg
push
and
loopne
imul
xchg
mov
pop
mov
cmove
or
xor
fisubrs
int
in
push
popa
addr16
dec
or
fcomps
pop
cmpsl
ds
inc
cmpsb
fdiv
mov
pop
cmpsl
iret
data16
add
loope
stc
sbb
pushf
dec
sbb
aaa
and
aaa
or
cmp
pop
mov
std
xor
sub
stos
add
imul
pop
vminss
adc
and
push
hlt
jnp
es
and
push
xlat
mov
inc
jbe
mov
lahf
jmp
jl
flds
psrad
fwait
add
push
outsb
mov
out
pop
movsb
jg
nop
in
lcall
fwait
pushf
mov
stc
mov
mov
orb
pop
push
pop
or
sbb
xchg
mov
lahf
cmp
jmp
and
scas
cli
popf
sti
inc
jg
arpl
push
cld
lahf
xor
sti
pop
fsts
das
xor
mov
pop
in
sbb
fnstcw
outsl
cmp
ret
cmpsb
mov
cwtl
icebp
aam
jno
icebp
into
das
or
and
repnz
lds
pop
jne
in
sub
inc
test
xor
sbbb
jecxz
imul
cltd
imul
xchg
mov
sbb
or
jecxz
pop
popa
or
push
pop
or
xor
mov
cmp
sub
xchg
imul
and
pop
mov
jne
jnp
ss
xchg
add
fdivl
test
dec
mov
loope
or
sub
cli
jns,pn
push
cmp
pop
mov
imul
inc
or
movsl
icebp
bnd
ds
mov
push
xchg
pushf
fucomp
push
mov
pop
mov
je
setns
cmpsl
testb
cld
xchg
into
lods
loope
jmp
mov
mov
imull
int
jnp
mov
xor
or
pushf
icebp
mov
mov
leave
dec
push
aaa
xor
js
lcall
or
cmp
pop
pop
out
adc
pop
jae
jns
icebp
xchg
xor
cs
out
test
add
stc
and
xlat
push
fcmovnb
xchg
sbb
insl
sbb
ret
dec
lods
add
leave
xlat
movsl
and
jb
lods
xorb
enter
cmp
lock
cli
or
sub
mov
inc
ret
inc
paddq
pushf
scas
pop
ljmp
mov
aam
loopne
fcomps
lret
cmp
sbb
lret
popf
push
sbb
add
test
ja
scas
outsb
movsl
gs
std
dec
movsl
imul
pop
mov
mov
rcrb
dec
xor
inc
int3
rolb
fnstenv
jns
es
lcall
adc
mov
mov
data16
dec
mov
les
in
sbb
fucomp
rorl
and
cmc
sahf
mov
fistps
xchg
xor
ret
out
xchg
inc
repnz
fdivr
xchg
shrl
dec
push
sub
fcomps
es
bound
cld
lcall
out
sbb
test
xor
mov
inc
movsl
mov
fdivl
mov
or
sub
mov
loop
insl
sub
movsl
add
mov
imul
popa
xchg
add
aad
gs
mov
sti
hlt
mov
jg
mov
push
lret
dec
adc
adc
cltd
inc
es
pop
fcmovu
sub
adc
fcompl
mov
vpavgw
and
int3
roll
iret
sub
mov
or
add
xor
imul
mov
xor
or
lahf
xor
imul
add
pushf
xchg
hlt
orl
xorb
out
mov
outsb
inc
outsl
jmp
shl
mov
mov
xor
xchg
cmpsl
mov
or
fdivl
je
out
ror
data16
push
movsb
ja
in
test
loopne
fucomp
mov
xor
loopne
mov
xor
push
sub
pop
or
int
add
push
lahf
push
mov
push
imul
out
dec
mov
ss
popa
orl
shrl
cltd
mov
add
out
pop
fs
jbe
dec
shl
loopne
xlat
loope
sub
sar
mov
xor
xor
add
push
lret
in
inc
mov
xchg
lea
sbb
sahf
adc
or
mov
jmp
adc
adc
inc
dec
sub
jbe
rclb
insb
xchg
dec
xchg
dec
and
lods
mov
push
pop
nop
pop
mov
adc
add
and
dec
andl
test
mov
xchg
dec
popf
lahf
fwait
aaa
dec
aad
test
and
loope
sub
cltd
sub
dec
shrb
sub
add
mov
jg
pop
test
outsl
push
jmp
lock
ds
aas
cmpl
xchg
or
dec
mov
mov
xor
inc
flds
add
dec
mov
clc
pop
popf
movsb
sbb
sbb
dec
fidivrl
shrl
adc
mov
mov
pop
push
lods
ficomps
mov
sbbl
mov
add
fildll
andl
je
sub
cmc
je
test
pop
cmp
mov
pop
mov
ss
jecxz
push
xchg
mov
les
mov
sbb
fmulp
xor
rclb
test
pop
mov
mov
pop
sarl
mov
or
into
and
mov
arpl
inc
mov
imul
and
data16
xor
xlat
xchg
and
cwtl
jmp
cmc
mov
in
jnp
cltd
sub
cmp
xor
add
fs
cmp
adc
lods
mov
jecxz
inc
pop
sub
mov
jnp
and
mov
sbb
mov
pop
movsb
enter
sbb
push
push
ds
scas
jne
fdivl
std
fists
test
adc
bound
jl
push
lods
lea
insb
add
push
mov
stc
imull
fwait
test
adc
mov
sub
push
leave
pop
ss
xchg
jns
int
leave
shll
add
jno
and
pandn
push
and
lret
fidivrl
push
sub
mov
pop
insl
xchg
mov
jmp
ret
or
popf
dec
xchg
lret
pop
enter
leave
and
cmp
arpl
xchg
divb
je
mov
xchg
call
repnz
xchg
in
sbb
test
cmp
or
mov
and
xchg
scas
mov
mov
test
repnz
inc
fcoml
ja
fdiv
outsb
aas
test
dec
loopne
lret
and
push
cmp
jmp
addr16
sbb
out
xchg
lods
cmp
jmp
mov
sub
mov
xchg
in
add
ret
bound
mov
push
aad
insb
xchg
xchg
ja
popa
sti
cmova
loop
leave
addr16
rcrl
fcomps
push
or
jo
cwtl
test
mov
jae
ljmp
inc
pushf
cmp
leave
xchg
popa
dec
loope
inc
sub
stc
rcr
ret
jns
and
or
insl
dec
aam
jb
xor
fwait
xor
push
imul
pop
addr16
das
add
add
and
in
mov
sahf
push
or
movsb
push
mov
xor
repz
sbb
and
enter
leave
pop
test
inc
push
mov
mov
gs
push
mov
insl
cli
xchg
scas
and
lds
mov
mov
jmp
mov
push
cmp
pop
sbb
lea
in
jle
ljmp
jno
movsb
loopne
out
enter
jae
cmp
sub
loope
fcmovnbe
cmc
cld
pop
jmp
dec
jo
hlt
xor
pop
insb
inc
lods
dec
int
dec
js
lea
fstl
aaa
jmp
loopne
or
rcll
mov
js
mov
pop
adc
mov
and
push
in
sbbb
sub
out
jl,pt
mov
xor
mov
xlat
sbb
insl
pop
cmp
sub
xor
popf
sub
fxch
bound
ja
xchg
cs
imul
hlt
mov
jbe
sarb
lock
pop
push
pop
mov
arpl
xchg
pop
lea
sarb
jle
insb
mov
popf
jb
ds
mov
cmp
mov
cld
sub
rolb
jg
das
std
push
ds
shrl
dec
lea
rcll
push
arpl
ret
ret
sub
ror
or
mov
jl
jo
fistl
rcr
shll
mov
xchg
sub
cltd
and
test
pop
and
add
out
add
lahf
xchg
sub
xchg
mov
fistps
push
xchg
repnz
ss
in
wbinvd
ss
jo
cmpsb
shll
inc
mov
xlat
mov
cmp
cmpsl
mov
sub
loopne
jmp
and
shrl
push
arpl
enter
inc
push
lods
dec
aam
mov
fs
stos
scas
scas
add
cmpsl
pop
cmp
loopne
into
arpl
mov
inc
cmpl
scas
xor
pop
sbb
movsl
dec
stos
cmp
test
xchg
test
fdivrl
xchg
scas
dec
dec
xor
mov
sub
adc
xor
loop
mov
arpl
test
outsl
shlb
pop
negb
hlt
aaa
test
test
xchg
xor
insb
push
out
sbb
jns
lock
xor
add
in
arpl
mov
in
xlat
mov
mov
out
xchg
lret
je
adc
cli
xor
lret
jecxz
imul
out
pushf
test
xor
nop
sbb
and
lcall
mov
mov
mov
and
cmpsb
pusha
aaa
inc
pop
ja
hlt
fsubrs
adc
imul
xchg
xchg
pop
out
in
arpl
xchg
xchg
and
push
js
and
add
stos
mov
and
pop
scas
inc
jmp
dec
divl
leave
ficomps
lret
dec
sub
cmp
jle
mov
inc
sbb
sub
add
insl
scas
andl
sti
jmp
aad
shl
ffreep
in
insb
jge
hlt
cmc
mov
mov
clc
call
mov
pusha
and
fimull
adc
fs
inc
lods
jns
add
jne
xrelease
cmpb
push
mov
add
xchg
xchg
push
fdivs
fmuls
or
lcall
cmpsb
cmp
arpl
pop
xchg
jbe
in
cmpsl
sbb
fistpll
dec
aam
imul
aas
push
test
inc
das
mov
cmpsb
dec
dec
mov
ds
xchg
cmc
push
aaa
fildll
test
out
push
pop
inc
jge
bound
loop
mov
or
shl
outsl
in
bound
movsb
or
outsb
jl
lahf
lcall
jmp
push
sub
cmp
mov
fisttpl
mov
or
cwtl
mov
pop
fwait
adc
push
movsb
inc
mov
or
adc
dec
cmc
or
scas
rcll
movb
jne
pop
mov
sbb
ret
sub
mov
repz
shr
xchg
loope
pusha
popf
add
pop
fwait
fs
adc
mov
in
dec
and
outsb
inc
daa
cld
xchg
pop
in
sbb
sbb
icebp
pop
je
sti
dec
in
pusha
and
loop
insb
sbb
repnz
sub
add
movsl
add
xchg
scas
jmp
hlt
xor
shl
mov
xlat
adc
lock
in
xor
mov
xchg
push
xlat
aas
aaa
in
andl
cmp
fdivs
gs
out
shrl
arpl
ret
out
cs
in
movsl
test
in
stc
mov
data16
jb
int3
adc
mov
scas
movsl
add
jmp
movsb
xlat
insl
mov
shll
fisubrs
int3
gs
std
fldt
or
int3
fwait
push
mov
test
fistpl
dec
pop
loop
cli
cmp
and
mov
mov
clc
rcr
sahf
aaa
push
rcl
pop
hlt
imull
push
loopne
jnp
lods
cli
push
je
iret
jmp
bnd
sub
lcall
xor
outsl
insl
add
movsl
lcall
mov
pop
outsb
xchg
or
or
lcall
adc
mov
xchg
bound
push
cmpsl
pop
sbb
cmp
cmpsl
or
mov
dec
cmp
aas
dec
jo
xor
push
popf
lea
ss
in
sbb
jg
mov
adc
mov
inc
cltd
lds
nop
arpl
gs
mov
jnp
mov
or
clc
repnz
mov
dec
dec
inc
mov
inc
mov
fldt
fistpll
aam
rclb
jns
scas
sub
repz
gs
int
lods
int3
into
test
imulb
mov
inc
imul
les
sahf
or
rcrb
jne
mov
test
mov
enter
or
inc
sbb
daa
wrmsr
cmp
push
fdivrp
pop
and
fsubrs
in
outsl
cltd
decl
call
aad
and
mov
ret
push
jmp
loop
aam
mov
rcll
xor
push
sub
je
dec
in
xor
aad
daa
jmp
mov
cmp
inc
lds
imul
inc
add
xor
or
aad
bound
jnp
pop
idivb
push
nop
mov
out
jns
sub
fs
cmp
or
lods
lret
faddp
xchg
mov
jmp
add
jne
cmpsb
bound
js
adc
sbb
adc
fstpt
xor
mov
cmc
movsb
and
sub
jae
add
jo
filds
adc
stos
pop
imul
dec
sbb
lods
sti
gs
aad
das
mov
flds
jg
popa
push
xchg
mov
gs
add
lods
mov
mov
xlat
out
xchg
lret
sub
fs
repz
sbb
or
addr16
loope
mov
lahf
test
decb
mov
idivl
sarb
call
cmp
add
dec
repnz
dec
aaa
jl
sub
add
jbe
jae
test
in
inc
test
lret
stos
test
push
jp
push
inc
orl
push
jns
sub
push
stos
jmp
push
add
or
shll
into
pop
je
lods
pop
and
bound
scas
and
add
insl
jge
mov
ret
repz
test
int3
push
xor
mov
test
mull
aas
mov
je
das
stos
icebp
dec
xor
imul
ret
adc
inc
lret
sbb
les
jl
enter
dec
test
mov
jmp
int
out
jecxz
adc
sbb
lods
jb
dec
add
push
sahf
xor
lods
fwait
repnz
int3
adc
stc
in
jno
arpl
jmp
sbb
push
negl
clc
loop
fbstp
add
inc
lods
mov
hlt
dec
dec
enter
imul
push
or
out
push
dec
pop
adc
inc
repnz
clc
xchg
mov
mov
push
shlb
movb
inc
mov
je
mov
loopne
lods
ret
repz
sub
mov
cwtl
or
lret
ljmp
mov
inc
out
popl
mov
push
lahf
arpl
xchg
mov
sbb
lea
jmp
sbb
fstpl
std
pop
scas
sbb
addr16
imul
xor
das
mov
dec
mov
jge
push
daa
cmpsb
cwtl
pop
out
leave
rorl
pushl
mov
test
dec
mov
mov
mov
xorl
dec
jno
jne
mov
aaa
dec
cmp
adc
add
and
pop
mov
dec
pop
in
push
jl
cmp
jb
add
dec
inc
in
cwtl
js
mov
xor
adc
jne
ljmp
cmc
inc
pusha
testl
inc
dec
es
pop
stos
inc
push
dec
sub
sub
or
imul
push
adcl
cmpsb
sbb
mov
outsb
repnz
shll
push
insl
imulb
rdtsc
pop
das
jp
shll
cs
std
add
ds
popf
hlt
jno
int
jbe
jge
mul
jo
scas
fwait
mov
sbb
add
xchg
pusha
aaa
cmp
jmp
jecxz
in
mov
pop
mov
push
popf
push
je
jecxz
sbb
in
clc
into
rorb
test
jg
dec
fwait
lds
repnz
ret
cmpsb
xchg
pop
jae
lds
mov
dec
add
mov
xor
icebp
jnp
lret
push
adc
lea
lds
test
and
scas
clc
inc
jl
inc
xor
jbe
icebp
fs
call
int
adc
cmp
loop
and
outsl
insl
xor
testl
push
dec
add
and
xchg
inc
cltd
movsb
push
cmp
cli
imul
hlt
das
orb
jae
je
and
inc
fidivrs
ljmp
je
xchg
lock
shl
mov
cmc
dec
out
testb
dec
aaa
icebp
add
or
data16
or
pop
sahf
cmc
or
out
push
or
add
jmp
mov
icebp
bound
inc
add
jno
sbb
sbb
xlat
push
pop
or
mov
notl
xlat
in
scas
push
pop
jne
repz
ds
push
pop
pop
pop
inc
mov
ja
call
or
push
mov
out
dec
loop
les
dec
push
in
movsl
aas
pop
add
mov
imul
sti
or
jle
push
out
insl
jecxz
add
ret
inc
adc
inc
and
repz
rclb
lock
push
jbe
push
inc
mov
shlb
rcrb
adc
sub
testb
xor
push
inc
loopne
mov
push
sbb
dec
push
scas
xchg
inc
je
mov
fsubr
jg
or
cld
push
pusha
testl
sti
mov
pop
clc
inc
mov
jg
mov
fnsave
or
lods
and
mov
xor
repz
loope
sbb
cmp
in
dec
sbb
addr16
mov
pop
jbe
xlat
insl
shrb
or
xor
stos
inc
data16
mov
mov
arpl
cmp
sahf
push
ljmp
cld
or
mov
pop
sub
jg
movsb
aaa
mov
imul
scas
int
push
sub
daa
jp
or
fst
jb
jmp
rclb
shr
outsl
and
std
or
loop
data16
xchg
cwtl
dec
insl
ret
push
repz
pop
hlt
mov
add
mov
popf
dec
hlt
hlt
adc
inc
cmp
push
cltd
inc
push
cltd
pop
andb
adc
shl
pop
xor
loope
imul
xchg
test
jp
adc
xchg
sub
inc
cmp
mov
pop
lret
push
faddp
daa
stc
or
fsubrl
mov
daa
shll
push
pop
dec
ja
jnp
aas
mov
adc
xlat
mov
mov
fisttpl
adc
mov
cmpb
or
mov
adc
pop
and
pop
aas
xchg
ss
mov
and
xchg
jecxz
mov
mov
mov
cmp
push
pop
pushf
adc
pop
jb
xor
icebp
pop
outsb
sub
scas
jl
add
scas
inc
pusha
in
in
imul
cld
push
jno
test
jo
pop
mov
or
aam
xor
repnz
add
fwait
xor
fisubs
push
std
cli
push
shrb
fdivs
int3
push
daa
xor
xchg
daa
mov
fisubrl
imul
xlat
repz
lds
int3
sbb
call
pop
or
lds
dec
dec
mov
loop
ds
rolb
cltd
mov
pop
or
jle
shll
jb
cwtl
sti
pop
mov
ret
fsubs
test
lods
rcl
jb
adc
scas
and
sbb
les
test
es
and
mov
out
mov
stc
adc
add
pop
repnz
fs
jbe
jns
jl
sub
add
sub
mov
fsubl
mov
andb
inc
or
inc
cmp
int
gs
into
jbe
aad
lds
or
out
pop
ss
add
and
icebp
adc
xchg
mov
and
lock
and
loope
mov
outsb
sbb
cmp
sar
jbe
adc
hlt
pop
fisubl
out
add
sarl
js
or
das
fnstcw
fidivrs
mov
inc
xor
lock
xor
adc
inc
insb
cltd
xorb
cmpsb
in
ljmp
adc
or
daa
or
sbb
mov
mov
outsl
imul
es
sub
inc
cld
pop
add
shlb
xchg
loope
loopne
and
lahf
dec
in
dec
mov
mov
mov
pushf
jmp
fcomps
inc
mov
ror
mov
adc
nop
aaa
lea
sti
xchg
or
xchg
clc
test
ljmp
sub
orl
clc
int3
loopnew
pop
sti
push
enter
cmp
dec
lret
cld
insl
pop
cmc
push
sbb
sbb
jbe
nop
stos
cmpsb
cmpsb
cmp
add
xor
outsl
test
push
add
fs
inc
imul
xor
stos
and
lcall
lahf
xchg
pop
mov
mov
add
cmpsl
call
fmuls
cmp
add
sbb
mov
bnd
ja
hlt
and
sbb
xchg
dec
ffreep
add
mov
pop
inc
gs
push
jnp
cmp
inc
out
push
jge
fdivr
xchg
or
xchg
test
outsl
mov
push
rcl
and
push
lods
inc
jns
sub
cvtpi2ps
xor
mov
dec
loopne
jae
lea
mov
push
stos
adc
call
sub
inc
cmc
and
notl
sbb
jmp
mov
sbb
test
mov
xlat
push
sub
or
jbe
aaa
movsl
jnp
jecxz
jno
insl
mov
insb
call
or
outsl
mov
clc
test
mov
inc
insb
add
icebp
push
ss
gs
xchg
cmpb
icebp
dec
and
mov
test
jmp
xor
test
adc
adc
mov
hlt
mov
popa
xor
loop
push
add
rorl
jmp
mov
sub
push
bnd
and
mov
inc
pushf
sbbl
fisubs
les
mov
fdivl
push
push
lcall
xchg
pop
mov
xchg
xor
xlat
sub
sub
stc
js
xor
enter
das
mov
pusha
or
outsl
push
dec
jmp
or
add
int
push
mov
push
dec
and
xchg
cmpl
jae
cmp
xchg
jp
jae,pn
sub
and
negb
dec
ljmp
xor
lock
lea
mov
js
xchg
adc
lods
mov
loop
in
pop
cwtl
sbb
fwait
lahf
mov
inc
fisubrs
out
test
hlt
or
fcompl
insl
shll
hlt
push
mov
cmc
testl
jle
sbb
mov
pop
jl
test
mov
mov
sarb
sub
test
push
iret
xchg
mov
fldl
xor
push
addr16
out
xchg
pusha
pop
push
adcl
lds
orl
notl
jmp
add
jg
sbb
femms
roll
popf
add
and
xor
lds
fimull
jg
outsb
mov
in
lds
shlb
into
add
aam
inc
cmpb
jb
lods
das
aad
repz
imul
data16
fldenv
xchg
pop
push
into
into
enter
stos
into
fcompl
pop
lods
nop
les
or
and
xor
insb
or
xchg
lcall
mov
aad
aad
sub
mov
dec
pop
pop
push
xorl
mov
bound
cli
mov
daa
inc
pusha
call
repnz
mov
and
add
out
add
mov
je
push
and
mov
or
shrb
aam
rcrb
sbb
in
lea
xor
xchg
outsb
fsubl
sub
push
push
movsl
dec
in
fcompl
sub
out
jmp
jns
movsb
in
add
fdivs
mov
xlat
push
jge
jno
jp
and
mov
stos
pop
adc
pop
mov
pop
in
loope
sub
nop
das
cmpsb
and
sbb
lods
cmp
jmp
fstpl
mov
fwait
lock
adc
cs
sbbl
mov
test
test
push
daa
testl
mov
mov
xchg
push
pop
cmp
jg
dec
pop
xchg
sahf
jne
jnp
adc
outsl
cld
cmp
sub
dec
cmp
pop
pusha
ljmp
stos
inc
mov
fwait
add
dec
in
mov
jp
les
fucomp
test
jecxz
sbb
pop
out
ss
jmp
adc
loope
mov
fcos
pop
aaa
xor
dec
push
pop
jae
aad
decb
dec
pushf
inc
sub
inc
mov
icebp
push
sub
push
push
cmp
sarb
cmp
xchg
out
leave
and
in
add
ret
inc
sbbl
jecxz
jae
and
jge
aas
iret
sbbl
inc
in
rol
repnz
xorb
popa
clc
push
push
insl
add
add
int3
imul
loop
stos
stc
inc
mov
lock
xchg
mov
les
xchg
sbb
or
scas
test
mov
xlat
sbb
and
push
in
or
push
adc
push
cld
mov
gs
aaa
push
adc
insb
jb
lea
xchg
xor
nopl
jl
and
repnz
repz
xor
ret
and
and
outsl
shlb
fbld
pop
scas
out
xchg
fs
xlat
mov
aas
sbb
or
push
xchg
cmpsb
jno
inc
lcall
pop
lret
insb
cmp
ret
push
filds
xchg
stos
lods
sub
jae
int3
icebp
mov
sbb
fnstenv
add
cli
mov
notl
cmc
xlat
jae
mov
mov
push
jge
add
rorb
mov
xchg
lahf
jmp
cmp
jle
iret
xor
adc
push
mov
int3
xor
adc
stos
xchg
scas
mov
cmpsb
inc
mov
xchg
sbb
shlb
cli
lea
dec
pop
lret
outsb
add
push
jl
push
jae
mov
fidivl
push
nop
outsb
ret
fprem
dec
rcrl
mov
pop
and
cmp
shl
and
leave
pop
sbb
les
out
jne
inc
cmpsl
out
xchg
xchg
shll
and
test
std
and
mov
daa
repz
sub
ljmp
aas
ds
out
addr16
and
enter
out
ljmp
mov
je
negb
and
fdivrs
testl
cli
xor
mov
xor
popf
adc
mov
stc
nop
pop
mov
testb
cwtl
mov
out
pop
popl
shrl
pop
sub
xchg
outsb
jl
icebp
or
fidivrl
ja
ret
add
cmp
cmp
xor
shr
adcb
es
in
inc
loope
loope
aaa
dec
or
aam
mov
pop
push
int
xlat
iret
pop
sbbb
adc
mov
sbb
xchg
inc
push
pop
pop
outsl
add
pop
sbb
loopne
test
add
sbb
pop
and
dec
xchg
mov
cmp
cmc
push
hlt
xor
out
dec
adc
inc
inc
imull
movsb
nop
cmpsl
jns
inc
stos
rcr
mov
call
inc
inc
mov
push
fwait
aas
xor
pop
call
bound
mov
pop
ljmp
inc
pop
imul
mov
xor
inc
sti
and
fprem
mov
jle
xor
movb
popf
mov
cltd
mov
sub
lahf
pop
dec
adc
mov
scas
lea
mov
sub
sub
mov
movsb
iret
addr16
rcrb
sbb
mov
push
sub
icebp
inc
out
dec
mov
push
cmpl
popa
mov
add
movsl
jns
mov
adc
ret
or
rcll
cmp
in
inc
daa
mov
repz
push
add
scas
jb
or
leave
jne
loopne
lods
inc
leave
pusha
jns
jne
jbe
cmp
in
cmp
xlat
sub
dec
loope
mov
add
lcall
xor
test
addr16
xor
out
jne
jnp
xor
push
sahf
mov
or
movsl
mov
adc
imul
dec
sbbl
pop
popa
jns
pop
sbb
add
jnp
imull
jle
iret
inc
adc
pop
ret
cmp
cmp
mov
push
shll
mov
lods
pop
test
orl
adc
pop
push
xchg
dec
cmpsb
dec
loop
jbe
dec
sti
andb
arpl
ret
pop
and
xchg
pop
mov
push
adc
and
push
pop
out
xchg
inc
bound
xchg
adc
test
fnstenv
shll
mov
add
xchg
sub
pop
xor
xor
jb
cwtl
ret
loop
lea
aam
and
xchg
xor
enter
mov
push
push
inc
test
test
cwtl
jno
mov
adc
xchg
sarb
push
push
je
push
cld
push
adc
test
sbb
cmpsb
pop
insl
sub
out
call
data16
or
jnp
fstps
jbe
push
ret
pop
enter
fsubr
fidivs
xchg
test
lods
or
aad
imul
call
xchg
icebp
inc
or
push
jl
test
xor
bnd
add
mov
mov
push
xchg
push
jmp
jo
mov
ret
sbb
enter
popf
iret
enter
push
jno
mov
in
int
xor
ret
pop
xchg
lret
popa
ret
mov
call
sbb
jnp
movsb
and
cmp
cltd
jo
pusha
dec
inc
shr
data16
inc
repz
js
and
les
or
cmc
mov
dec
out
pop
mov
mov
das
mov
dec
stos
inc
fucomip
addb
das
mov
pushf
pop
cmc
or
sbb
pop
lea
xchg
xchg
xchg
xor
icebp
enter
cmpl
inc
fstpt
fsubl
out
popf
popa
call
and
dec
fcompl
mov
inc
fwait
test
xchg
xchg
leave
cmp
outsb
cld
sbb
and
sbb
int
sar
stc
inc
int
out
pop
loope
pop
xchg
sbb
je
cmc
sub
mov
cli
lods
cs
jecxz
xchg
add
js
aas
call
dec
enter
sub
hlt
xor
inc
dec
rclb
shrb
lahf
fiadds
inc
adc
xchg
cltd
out
popf
lret
fisubs
cld
sub
sbb
mov
pushf
lods
mov
push
pop
cmp
mov
sub
mov
mov
mov
pop
inc
pop
pop
lret
jns
faddl
mov
lcall
jae
in
cmp
dec
dec
pop
in
test
jmp
das
mov
shlb
xor
cwtl
cltd
clc
popa
dec
dec
adc
andb
or
mov
inc
ljmp
jno
pop
aas
inc
mov
push
mov
mov
and
cmp
xchg
cs
xor
stos
lcall
dec
addr16
push
mov
pop
add
repz
imul
stc
mov
sub
bound
push
loop
sub
inc
push
jae
xor
sbb
cli
fsubrl
mov
inc
and
jae
sub
or
jns
xchg
lock
jecxz
cmpsl
ds
lds
testb
sti
flds
cli
xorl
leave
stc
inc
fcomip
insb
add
mov
outsb
adc
jae
inc
mov
adc
enter
cltd
xchg
pushf
inc
push
lock
mov
sub
mov
sbbl
orb
dec
fdivp
aas
nop
fsubrp
les
int
cmp
sbb
jb
inc
in
int
and
and
fadds
push
and
lods
or
fidivrs
xchg
out
jl
cmc
adc
sub
cs
push
sbb
lret
gs
mov
in
jg
jecxz
sub
adc
popa
xor
outsl
cs
arpl
and
or
mov
mov
loope
push
pop
scas
push
shl
or
lods
data16
dec
dec
popf
testl
xor
dec
rcrb
xlat
sub
gs
push
in
jge
jl
mov
pop
lret
outsl
test
ja
mov
jnp
mov
or
stos
xchg
mov
call
jge
or
inc
fisubrs
test
sahf
out
inc
jmp
or
cmpsl
mov
inc
popf
dec
push
out
add
es
gs
cld
les
jns
subl
cld
mov
icebp
stc
nop
and
xchg
add
rcll
jbe
xchg
cwtl
aaa
into
add
adc
ret
and
pop
ss
and
xchg
leave
mov
jne
mov
rcrl
repnz
cmp
add
push
adc
aaa
jecxz
or
fnstsw
push
mov
mov
sbb
bswap
lret
jae
mov
enter
jae
xor
out
popa
sub
movsl
pop
repz
stos
jmp
pop
push
insl
cli
out
jp
ret
mov
clc
and
lock
jae
inc
movsl
push
cmp
inc
add
mov
pop
in
lds
sbb
mov
add
sbb
or
and
xor
xchg
pop
xor
int
mov
cmp
sbbb
push
mov
fucomp
roll
clc
mov
gs
iret
xchg
adc
dec
jae
cmp
push
or
pop
cmc
imul
or
leave
fcoml
cs
xchg
lea
or
cmpsl
loop
popa
jmp
cmc
xchg
cwtl
popf
or
out
add
add
cmp
mov
inc
dec
pop
lock
pop
rcll
add
lret
cli
xchg
std
lret
addr16
mov
ret
mov
mov
xchg
hlt
xchg
xchg
push
in
sub
mov
mov
jo
jne
sbb
add
mov
pop
and
inc
jno
and
add
or
cmp
add
imul
add
xor
rolb
fnstenv
repz
fbstp
push
and
mov
jg
test
stos
jmp
mov
mov
div
out
push
mov
or
stc
aam
test
cli
push
stos
push
or
out
lock
jns
std
xchg
sti
cmpsl
mov
popf
loope
or
lods
xor
push
pop
or
mov
sub
dec
push
call
std
mov
notb
lcall
insl
in
cmpsb
clc
inc
pop
mov
mov
and
test
mov
cmp
sbb
iret
repnz
mov
cld
xchg
add
test
lret
ljmp
push
inc
xor
pop
ljmp
jno
dec
inc
pop
push
les
xchg
sub
out
jecxz
inc
bound
sbb
and
inc
test
cmp
pusha
cli
lret
icebp
lds
mov
test
inc
in
es
arpl
dec
out
mov
adc
jmp
push
push
and
jbe
mov
jbe
or
cmp
shrl
and
leave
rol
jp
cli
and
add
add
out
scas
and
and
daa
test
xor
movsb
cmpsl
push
mov
sbb
ror
hlt
pop
repnz
and
test
dec
mov
punpckhdq
out
stos
arpl
push
out
rcr
jno
stc
xor
scas
add
and
pushf
xor
push
ljmp
cmp
mov
pushf
jb
xchg
je
ret
dec
cmpsb
jecxz
das
sbb
push
mulb
mov
mov
xor
ret
mov
loopne
std
or
mov
jle
inc
pusha
out
dec
movsb
movsl
ja
stos
js
pushf
sti
or
aas
lret
mov
or
sbb
shrb
cmp
ljmp
pop
xor
clc
clc
in
push
sbb
lcall
lcall
sbb
lock
lret
mov
or
adc
add
jmp
les
inc
mov
je
enter
dec
fbld
jl
rcr
imul
test
test
dec
aaa
pop
mov
mov
insl
aas
and
pop
stos
xchg
imul
mov
jno
daa
xchg
out
in
xor
outsb
gs
imul
cmc
push
out
insb
mov
sub
add
lcall
aas
sbb
lods
lcall
xor
jbe
jne
es
lea
mov
mov
cmpb
in
leave
cltd
cwtl
mov
mov
fildll
mov
fdivs
push
dec
cld
xchg
lea
shrb
pop
scas
sbb
pop
push
push
lods
test
lahf
pop
rep
mov
test
and
arpl
push
movsl
cltd
xor
push
add
cmp
outsb
mov
push
lcall
pop
into
adc
inc
sbb
negl
and
lock
aad
sub
push
mov
push
sub
sbb
dec
in
mov
fucom
cltd
aaa
mov
jmp
in
testl
mov
cmp
mov
cmpsb
inc
out
pop
mov
dec
add
add
pop
ret
xor
std
lcall
outsl
mov
icebp
aaa
ds
ss
ja
add
insb
sub
scas
or
sahf
pop
ljmp
or
ljmp
mov
lcall
mov
push
push
fimull
sbb
add
mov
andb
sbb
adc
dec
cmp
sar
pop
jo
mov
aaa
inc
xor
cmpsl
sub
popa
fdivl
jecxz
jns
fisubl
jns
push
fmul
sub
jmp
or
scas
add
push
out
jb
fwait
push
lret
mov
jno
adc
call
bound
push
mulb
stos
xchg
jle
mov
lcall
das
pop
insb
lods
cmp
push
sahf
out
inc
cmpsb
cwtl
je
ja
push
add
cmp
popa
loope
mov
sahf
mov
rolb
mov
lock
lret
sub
push
out
lcall
ds
arpl
cmp
ds
adc
neg
mov
sbbb
jae
inc
mov
mov
pop
pop
stos
sbb
test
das
pop
shrb
int
mov
sahf
sbb
popf
and
xchg
addr16
clc
sbbb
fmull
test
lods
adc
xchg
test
sbbb
std
xchg
jl
int3
fisubrs
sbb
mov
jl
outsl
push
mov
pop
pop
and
jbe
jae
mov
stc
inc
mov
cmp
sbb
sbbb
nop
outsb
cmc
jmp
mov
sub
mov
xchg
cli
data16
sub
jns
jbe
int3
cmpsl
stos
sub
stc
or
sbb
xchg
les
cmp
sub
add
mov
std
adc
cmp
enter
repz
rcrl
jbe
dec
xor
rcrb
pop
mov
arpl
ja
or
pop
insb
sub
imul
in
mov
xor
dec
mov
cmp
stc
and
iret
pop
cmc
add
sbbl
jnp
pushf
js
ss
imul
in
inc
lea
cmp
imul
mov
ret
push
mov
dec
mov
outsb
movsb
fnstenv
bound
pop
insb
notl
xchg
sub
jne
jnp
push
je
push
outsw
add
cltd
ret
and
jl
lods
in
pop
pop
js
sbb
rclb
insl
xchg
std
stos
mov
xchg
fwait
scas
mov
cmp
dec
and
mov
leave
test
cmp
mov
cli
fldt
out
faddl
and
imul
sub
pop
cmp
mov
cltd
inc
fwait
les
arpl
sub
inc
sahf
lea
movsb
cmp
rol
mov
ds
xchg
sbb
orl
and
push
addr16
xchg
xchg
ljmp
jno
adc
je
adc
in
push
fs
jb
mov
sbb
sub
mov
fs
in
xor
fildll
push
pop
stos
or
mov
mov
imul
test
sbb
dec
push
xchg
add
adc
pop
rorb
push
adc
xchg
jecxz
fstps
mov
repz
ror
add
aam
filds
xchg
and
jb
data16
pusha
push
cltd
sbb
inc
sbb
call
sub
xchg
inc
pusha
or
jmp
jbe
ja
cmp
cld
rorl
aad
and
sub
stos
cld
lret
xchg
in
jne
loope
enter
mov
push
call
fs
out
pop
dec
fsubrs
je
das
out
inc
xchg
icebp
jmp
mov
dec
loopne
shlb
movsb
insb
mov
daa
ja
mov
ja
add
ja
out
and
into
cmp
les
fucom
popa
add
dec
pop
xor
adc
ja
xchg
cwtl
jbe
pushl
dec
inc
imul
and
mov
and
mov
in
or
in
jl
mov
aaa
andb
lret
xchg
jbe
mov
xlat
lods
push
pop
xchg
mov
pop
adc
inc
fwait
push
xlat
pop
push
or
arpl
nop
gs
mov
daa
test
xchg
cmp
xchg
insb
dec
xchg
push
xor
push
xor
mov
push
xor
nop
in
push
ljmp
insb
jno
xor
mov
sti
mov
mov
rcrb
sbb
iret
popa
cmp
mov
movsb
mov
mov
iret
and
je
push
dec
jmp
push
jbe
or
je
xor
push
jl
pusha
daa
add
scas
call
xor
scas
and
push
rclb
iret
ljmp
adc
test
dec
mov
data16
mov
sar
mov
movsl
dec
jmp
andl
orb
sub
mov
rorl
pop
push
bound
mov
es
scas
filds
sbb
mov
nop
insb
arpl
cmovbe
out
jp
insb
inc
cmp
xchg
push
stos
dec
les
stos
in
popf
cwtl
repz
aam
mov
sahf
inc
cmp
testb
icebp
int3
push
mov
xchg
mov
imul
pushf
ja
cli
imul
lret
jae
fnstenv
aad
jl
cwtl
negb
pop
ds
in
push
mov
pop
test
adc
or
xchg
jge
mov
ljmp
mov
or
cmp
adc
or
lret
loopne
cmpsl
mov
and
outsl
scas
repnz
ja
mov
mov
pop
into
inc
push
jne
push
sahf
test
sahf
or
jmp
cmp
enter
xor
xlat
out
pop
mov
mov
inc
leave
pop
std
outsb
and
push
test
icebp
aam
pop
ljmp
negb
into
xchg
xor
mov
cmp
mov
push
lods
xchg
das
cmp
addr16
push
pop
push
push
fimull
shrb
shrb
daa
inc
or
xor
pop
movsl
cli
loope
jmp
pop
mov
pusha
cmp
lock
aad
jbe
jo
sub
sbb
daa
lds
mov
in
sbbb
loope
inc
mov
mov
imulb
jae
jnp
popf
outsl
es
and
push
insl
test
loop
sbb
xchg
lods
sbb
add
sub
push
lahf
pop
shll
xchg
pop
test
pop
jmpw
pop
scas
mov
stos
mov
pop
out
push
xor
or
lahf
push
mov
add
es
cmp
les
std
xor
aam
and
lahf
and
fs
insb
dec
xchg
dec
call
push
mov
addb
dec
pusha
jbe
inc
gs
mov
push
lea
sbb
mov
ljmp
imul
lock
jl
mov
fisubs
push
imul
fucomp
outsb
and
xor
pop
outsb
in
test
pop
push
jae
jg
adc
sbb
dec
dec
pop
mov
fisttps
subl
push
cltd
jo
mov
test
data16
inc
out
push
lods
mov
or
inc
in
cmp
sbb
call
je
into
mov
repnz
cmpsb
adc
xchg
jne
or
shlb
pusha
jp
xchg
pop
pop
adc
mov
push
push
leave
aam
xor
jb
pop
xor
mov
outsb
pop
hlt
jne
cmp
in
push
icebp
daa
lds
out
int3
sbb
xchg
mov
insb
gs
inc
lods
imul
add
lea
jns
push
andb
mov
xchg
test
mov
or
jns
mov
push
pop
push
adc
fsubrp
jl
dec
inc
nop
sbb
shrl
jo
jmp
or
pop
adc
movsl
mov
pop
mov
dec
xchg
sbb
inc
insb
daa
fwait
dec
push
xchg
xor
rcrl
pop
sub
dec
cmp
jl
les
sti
inc
pop
cmp
icebp
xchg
stc
mov
mov
adc
sbb
cli
cmpsb
call
sub
faddl
enter
cmpsl
in
call
add
mov
mov
fucomp
es
ficoms
jecxz
ss
cs
adc
mov
or
mov
pop
xrelease
mov
loope
cmp
stos
adc
test
adc
sbb
adc
shll
imul
and
int3
movsb
mov
cmp
sbb
dec
hlt
scas
lds
cltd
shr
mov
jmp
inc
mov
pop
loope
cmpsb
lock
jo
movsl
xlat
fcoms
cmpsl
mov
adc
adc
mov
xchg
insb
inc
fistl
mov
cmpsb
cmp
mov
mov
pop
sahf
mov
jmp
test
sbb
dec
ror
mov
ss
cmpsl
ljmp
mov
xchg
outsl
inc
fcompl
lock
loope
mov
cmp
cmp
cmpsb
ss
cmp
daa
stos
mov
sbb
aas
fidivl
idiv
subl
imul
mov
out
mov
lcall
adc
leave
pusha
mov
cmp
int
and
cmpsl
mov
and
mov
jg
sbb
jne
arpl
dec
pop
movsb
xlat
cmpl
xchg
cmpsb
push
sbb
adc
push
cld
daa
dec
and
outsb
or
sarb
xor
mov
jnp
movsl
bnd
pop
add
jae
push
xor
das
push
mov
test
jns
sbb
jne
ja
in
and
mov
push
fildll
cmp
sub
mov
sahf
xor
add
add
lret
or
mov
addr16
popa
or
mov
repnz
pop
std
enter
push
or
daa
mov
add
pop
adc
cmp
push
sahf
testb
mov
push
stc
popa
xchg
inc
dec
mov
cmp
mov
shll
dec
and
mulb
fsubrl
cmp
orb
add
add
lods
test
rclb
xchg
mul
fimull
pop
dec
dec
shl
in
sbbl
dec
js
jno
push
inc
cwtl
push
or
call
cmp
in
push
sub
mov
adcb
mov
lds
sahf
jecxz
mov
leave
in
or
sbb
fsubl
push
dec
call
or
lahf
xor
cmp
mov
jp
mov
xchg
ljmp
mov
pop
add
inc
inc
aam
dec
jno
and
lods
inc
xlat
fldl
jecxz
sbb
mov
mov
jmp
sar
jne
int
cwtl
sbb
pop
leave
mov
fcoml
push
jmp
pop
and
aaa
scas
or
push
sbb
cmp
push
call
push
xchg
clc
pop
jne
lret
inc
adc
jns
mov
mov
scas
mov
push
out
fdivs
mov
xchg
adc
loope
loop
into
xchg
addb
and
mov
or
int3
call
mov
mov
xchg
pop
inc
fmuls
mov
add
push
shrb
sti
scas
mov
add
add
dec
fcomps
mov
nop
jle
xorl
or
das
push
sub
lret
in
mov
cwtl
in
into
xchg
es
lds
fcoml
mov
mov
loope
iret
icebp
pop
add
push
sbb
xor
add
adc
mov
sahf
sbb
in
popf
lods
jmp
mov
inc
dec
cs
mov
jbe
mov
push
xorb
add
mov
or
imul
dec
lahf
lret
jmp
xchg
orb
fwait
pop
int
pop
xor
fmull
jp
insb
jle
lcall
call
outsl
je
mov
cmp
add
or
inc
adc
mov
es
sub
mov
and
push
pop
inc
xor
jae
jnp
push
jnp
out
and
mov
inc
push
daa
mov
pop
cmp
sub
pop
das
cmp
ss
mov
rcrl
pop
es
push
mov
scas
std
fmul
mov
enter
hlt
lret
xchg
mov
cld
lods
aad
hlt
sub
mov
sbb
jne
jne
sahf
mov
clc
es
addr16
sahf
rolb
jge
loope
adc
or
push
mov
andl
rolb
hlt
dec
or
xor
ret
sbb
imul
xchg
lds
lods
loopne
sbb
or
adc
shll
xchg
loop
fiaddl
mov
cmp
mov
loope
pop
fs
jle
mov
sbb
jnp
hlt
inc
inc
fdivrs
xchg
mov
dec
ficoml
lahf
dec
repnz
mov
pushf
push
sbb
and
negl
mov
loop
sbb
push
scas
mov
int
ret
xchg
xchg
sti
xlat
mov
cli
mov
and
addr16
push
orl
mov
movsb
in
pop
daa
mov
out
adc
out
test
push
mov
ret
cmpsb
leave
jb
icebp
pop
mov
push
and
and
decl
dec
jge
push
movsl
addr16
push
outsl
pop
sub
enter
cmp
mov
sub
fistpll
mov
jmp
inc
loopne
or
mov
pop
pop
imul
int3
pop
hlt
clc
push
mov
adc
adc
cmp
lods
jne
movsl
cmp
cld
repz
or
testl
mov
mov
push
testb
into
xor
xor
mov
push
fs
fisubs
popf
scas
pop
pop
ja
nop
jg
mov
xlat
dec
inc
popa
xchg
ret
jl
mov
and
test
jmp
push
fcomps
movsl
in
sbb
mov
ja
xchg
jl
pop
or
leave
sub
pop
jecxz
es
inc
mov
mov
in
jge
cltd
in
cmp
cli
int
sbb
mov
push
jae
arpl
sub
adc
cmp
pusha
enter
jns
jno
gs
or
xchg
sub
inc
cmp
and
addr16
xor
xor
in
sahf
add
jge
cwtl
cmpsl
adc
jle
mov
ret
hlt
dec
stos
push
dec
popf
sub
outsb
fnsave
bound
xchg
mov
or
cld
or
hlt
into
ds
lds
pop
hlt
push
ss
xchg
mov
test
dec
call
inc
ret
or
imul
xchg
mov
and
jnp
pop
or
ljmp
es
jge
or
test
push
leave
push
sbb
push
aam
and
inc
das
aas
fldcw
cmp
in
loopne
popa
inc
cmp
stos
push
ljmp
inc
hlt
xor
mov
fldt
scas
addr16
popa
add
aaa
dec
sub
xchg
mov
dec
out
add
mov
or
inc
test
mov
sbb
xchg
cmp
add
xchg
out
fwait
xor
mov
fucomip
in
cmp
pop
lea
sbb
jbe
jbe
jg
std
mov
adc
pop
shll
mov
sub
test
out
jb
stc
enter
daa
daa
mov
outsl
imul
jno
jns
jo
in
adc
xor
icebp
push
inc
aas
xchg
inc
inc
inc
lock
pop
mov
leave
dec
xor
pop
jmp
dec
imull
inc
xor
pinsrw
cs
daa
sub
in
mov
pop
inc
jbe
mov
popf
xorl
lock
rep
pop
pushf
push
cmp
lds
inc
jns
sarl
test
jbe
push
mov
add
inc
and
lock
inc
out
mov
fadd
cwtl
cmp
cwtl
mov
fs
push
xor
loope
dec
xchg
les
test
addr16
aad
ret
cmp
shrb
xorb
cmp
and
push
inc
icebp
inc
mov
movsb
push
lods
es
mov
jg
or
lahf
repz
xchg
cld
rcr
push
cmpsb
sti
hlt
inc
loopne
popf
mov
or
mov
repnz
in
sbb
cmp
cmc
clc
push
rol
shll
fcoml
in
adcl
dec
mov
ds
pop
out
cmp
push
movsb
mov
add
addr16
scas
mov
imul
dec
subb
mov
test
pop
mov
dec
js
inc
dec
aad
and
call
cmp
cmp
cmpsl
testl
cmp
jae
jecxz
mov
and
cmp
mov
mov
ret
mov
fwait
rcrb
in
mov
push
jmp
shrb
into
rolb
mov
sub
repz
push
imul
int3
sahf
add
mov
jo
xchg
mov
adc
pusha
and
mov
out
divb
aaa
into
cs
jge
pop
mov
mov
bound
aad
push
xchg
jmp
adc
cmpsb
cli
xchg
fisubrs
sbb
insl
sub
pop
jl
jmp
sbb
pop
mov
cmp
jo
jae
jecxz
int
out
out
test
mov
pop
fmuls
fdivrp
xchg
loopne
mov
out
aaa
push
cld
or
insb
lods
cmp
add
pop
aaa
push
aaa
sti
pop
subl
push
sbb
bound
inc
popf
and
mov
mov
sub
nop
xchg
aam
sbb
adc
mov
lds
mov
or
jge
mov
ret
repz
add
inc
aad
scas
sub
neg
outsb
shlb
push
les
adcb
pop
jmp
pusha
std
xor
dec
ret
sub
cmp
mov
mov
cmpsb
loope
adc
enter
mov
dec
jno
jecxz
pop
mov
mov
mov
mov
jo
xor
ja
stc
mov
sbb
mov
fdivrp
or
jg
xchg
fwait
jae
hlt
adcl
notl
cwtl
stos
inc
lret
cmpsb
push
in
aas
pop
cmp
push
jecxz
cli
xchg
inc
push
jb
shlb
lret
pop
gs
popl
sub
andl
mov
jns
mov
jmp
scas
cli
sar
inc
in
xchg
test
jp
pop
idivb
mov
fmul
and
test
fucom
push
lahf
in
ret
fimull
and
imul
dec
and
push
ds
sbb
fdivrs
or
pusha
idivl
rcrl
or
mov
xor
es
icebp
add
cmp
lods
inc
push
test
sub
lret
fildll
repnz
fbstp
dec
inc
push
sbb
sub
shll
rcll
and
push
mov
pop
outsb
fbld
nop
inc
pop
mov
jo
push
xor
test
filds
cli
mov
and
mov
mov
lcall
lock
xor
sub
jg
popl
clc
xchg
jno
popa
sub
shll
xchg
or
ljmp
bound
adc
sub
mov
clc
dec
decb
adc
or
jmp
cmp
movsl
cmpl
mov
fdiv
cmpsl
pop
mov
je
push
call
les
mov
out
inc
inc
fiadds
gs
mov
xchg
sbb
xchg
mov
add
arpl
rcrl
mov
loop
repz
inc
inc
lock
sbb
jno
dec
add
daa
lret
cld
dec
fsub
hlt
cmp
jp
add
repnz
mov
jnp
arpl
cwtl
xchg
rorl
cmp
jbe
push
push
repz
jno
ss
and
xchg
cwtl
loope
mov
mov
fisubrs
int
leave
fxtract
mov
or
add
shlb
cmp
ret
fwait
rcr
inc
in
out
pop
jns
test
cmpl
hlt
arpl
iret
mov
ds
fucomi
out
push
out
popa
sbb
fldt
idiv
and
push
int
mov
mov
enter
mov
mov
fnsave
int3
adc
shll
jl
or
pop
and
mov
lahf
jno
es
into
imul
jno
mov
mov
jg
cmp
jns
bound
cmp
mov
mov
mov
in
cltd
stos
or
xchg
mov
mov
sub
cmp
xchg
out
add
mov
xchg
scas
pop
add
dec
add
stos
mov
filds
mov
popa
adc
lret
mov
pusha
rcr
dec
repz
arpl
aaa
sbb
stos
mov
xor
jbe
es
or
sbb
out
sti
xchg
sub
sbb
or
call
sub
pushf
cmpl
cmpsb
in
jl
scas
add
out
pop
test
cmovp
mov
enter
sub
enter
imul
out
dec
cmp
or
repz
test
pop
movsl
nop
pop
ret
xor
jl
mov
pop
lea
fmull
test
mov
divl
clc
call
in
je
incb
and
pop
cmp
pop
ja
xor
jb
add
push
sbb
mov
jmp
or
mov
push
add
fimuls
mov
pusha
fnsave
out
test
cmp
xchg
mov
test
stos
in
and
cmpsl
enter
push
cwtl
jo
loope
out
push
pop
loopne
push
xchg
fadds
push
cmpb
je
or
jge
insl
sti
xor
call
les
movsb
and
jge
stos
daa
cld
mov
fmul
hlt
push
fisubrl
dec
pop
sti
or
jg
sub
pop
sbb
imul
div
jnp
adc
xchg
fldcw
popf
push
sti
push
lods
out
adc
je
lods
rolb
mov
fcmovnbe
mov
push
lods
pop
push
sub
data16
imul
ds
sbb
dec
adc
loope
add
jle
mov
cmp
xor
inc
popa
orl
cmp
imul
push
or
call
cmpsl
es
mov
sahf
shl
es
sub
stos
ret
jle
fs
jne
add
dec
decb
das
jle
popa
pushf
jb
dec
sub
aaa
mov
xchg
lret
or
leave
mov
sti
stos
sub
fsubrl
hlt
or
cs
pop
push
cmp
xchg
in
jg
movsl
xchg
mov
testl
jg
jns
add
fbld
stos
and
jo
jg
inc
push
fistl
mov
mov
iret
pop
inc
cmp
lret
adc
ds
fidivrl
mov
xchg
cmp
xchg
out
mov
in
sbb
mov
lret
cld
test
loopne
or
or
add
lcall
popl
insb
push
aam
and
pop
out
test
mov
mov
mov
insb
data16
cmp
mov
pop
ja
push
mov
les
std
js
cmpsl
sbb
in
lds
dec
jecxz
out
dec
inc
cmpsl
out
sti
mov
cmp
cmp
and
mov
movsl
cmp
in
mov
inc
pop
bound
mov
dec
lods
push
sbb
sahf
sbb
movsl
inc
ljmp
jno
bound
jge
xchg
sbb
push
xlat
outsl
mov
ja
frstor
pop
push
test
sbb
pop
sahf
scas
arpl
push
cmp
scas
pop
or
jno
jnp
stc
ss
stc
mov
jge
movsl
pop
es
xchg
test
outsl
and
and
pop
mov
les
mov
adc
jp
cltd
jo
fwait
push
mov
pop
pop
gs
lcall
dec
into
aas
fdivrl
pop
clc
insl
mov
mov
dec
pop
loope
clc
cmovbe
xlat
mov
clc
test
pop
mov
mov
rcrl
jecxz
cmc
lds
and
fnstenv
add
loopne
xor
mov
push
mov
cmp
cmp
xchg
add
es
push
inc
cmp
outsb
mov
xchg
pop
fld
lods
push
or
fisubl
mov
ljmp
and
dec
inc
pop
jge
in
je
and
jnp
movl
and
push
jno
data16
xchg
add
imul
leave
mov
mov
dec
sub
pop
outsl
in
shll
adc
in
push
push
push
stos
adcb
mov
lahf
stos
mov
lret
subb
sub
mov
popa
push
add
pop
adc
add
bound
push
fcoml
addb
sti
les
mov
outsl
and
mov
call
je
pop
popf
and
aas
das
shrb
pusha
scas
mov
in
sub
push
jb
mov
scas
jno
cli
mov
incl
sub
loope
pushf
fldt
rclb
mov
shrb
pop
xor
or
jno
test
xor
inc
push
and
push
mov
in
xlat
adc
lret
sbb
scas
push
test
mov
xchg
fsqrt
pushf
in
mov
xchg
mov
adc
bound
js
xor
fcmovnbe
cmp
jnp
notb
add
lock
pop
sahf
mov
jns
mov
sub
repnz
pop
cmc
cmc
into
gs
stos
cmp
lret
jne
lods
in
adc
das
mov
cmp
jle
std
xor
std
xor
mov
jl
imul
inc
push
cmpsl
sub
cs
xchg
xchg
mov
call
jg
xchg
ret
les
sbb
jne
cmp
fwait
mov
mov
aaa
mov
push
lea
rcll
push
into
cmp
xchg
cmp
cmp
pop
xchg
mov
ds
mov
loopne
in
fcmovbe
fiaddl
push
aaa
xchg
in
cmp
pusha
xor
fwait
gs
xchg
sub
xchg
lods
cs
add
cwtl
jae
push
insb
cmp
adc
ss
jo
mov
bound
dec
aad
jmp
fisubs
pop
out
ss
sub
in
test
push
inc
test
test
adc
push
fsub
movsl
mov
pop
add
mov
push
arpl
test
mov
adc
insb
insl
fisttps
cli
testb
les
mov
xor
icebp
xchg
lock
inc
cli
int
ret
ret
cmpsb
inc
cwtl
mov
mov
vpminub
pusha
mov
es
aam
dec
les
push
in
repnz
push
and
sbb
xchg
sbb
sbb
mov
xor
adc
iret
dec
xor
out
incb
cmp
sahf
fnstenv
lret
mov
or
loopne
jecxz
xor
leave
arpl
push
xor
inc
nop
mov
and
mov
pop
mov
sar
loop
inc
shlb
cld
and
push
xor
or
pop
xchg
or
xchg
scas
movsb
sub
outsb
cmp
and
cltd
pushf
and
fbstp
or
xchg
ds
xchg
xor
xor
jmp
pop
or
stos
stos
mov
flds
add
fnsave
stos
inc
popa
aam
fstp
cmp
mov
adc
jnp
xor
mov
fistpl
lea
mul
outsl
outsb
mov
dec
mov
or
loopne
push
pop
dec
push
lahf
and
pop
jae
inc
es
imul
inc
mov
ret
jnp
incb
xor
add
cwtl
inc
jge
and
dec
sbb
sbb
jmp
roll
movsl
push
xlat
daa
dec
repz
dec
enter
inc
ficoms
cmp
fwait
out
cmp
popf
call
or
das
cmp
arpl
adc
push
outsl
pop
push
test
or
adc
dec
dec
push
imul
sarl
pop
negb
movsl
inc
test
les
inc
stos
jmp
mov
sarl
push
add
inc
push
or
mulb
arpl
movsl
pop
fwait
imul
scas
loop
stc
fcmove
jmp
aaa
adc
lea
icebp
shr
clc
cmp
outsl
out
cld
mov
bound
fnsave
push
lahf
push
dec
movsl
shr
pop
imul
push
or
insb
test
mov
ret
pop
jo
je
cli
mov
and
std
xchg
jae
cmpsl
inc
jmp
or
fstps
inc
jmp
sub
pushl
push
jmp
arpl
adc
adcb
or
sbb
sub
nop
jnp
iret
int3
aam
rcrb
xor
lcall
icebp
in
fnstcw
push
inc
ds
idivl
push
jb
sub
xchg
cmp
shlb
jmp
xchg
ljmp
adc
ret
ja
shrb
unpckhps
loope
dec
pop
fwait
rcll
les
jmp
xlat
lods
push
imul
cmc
push
mov
xor
jo
push
fld
out
and
sub
mov
push
pop
scas
call
mov
cmp
and
jnp
adc
push
jp
xchg
flds
scas
pop
dec
loopne
dec
push
sub
scas
test
add
xor
jg
add
std
inc
and
mov
out
inc
push
pusha
inc
cmp
mov
mov
push
sbb
lret
jbe
jae
lea
nop
in
pop
std
leave
je
jge
cmpsb
scas
clc
sti
xchg
and
scas
jb
sbb
mov
xchg
mulb
popf
js
inc
dec
dec
cmp
outsl
outsb
nop
dec
bound
lods
inc
mov
mov
jns
pop
cwtl
and
or
std
cli
pushf
xor
pop
mov
shrd
test
pusha
add
push
out
and
mov
adc
mov
das
inc
aad
ss
xchg
cmp
sbb
cmp
stos
xor
sbb
adc
cmp
pop
pusha
and
jns
or
movsb
and
push
int
and
int
scas
jmp
loopne
popa
clc
inc
aad
and
sbb
idiv
adc
std
sbb
sub
xchg
or
pop
sub
call
mov
mov
pop
and
push
jge
inc
loopne
push
push
je
add
pop
push
stos
jge
int
xor
or
test
and
andl
ja
movsb
lcall
or
mov
fidivs
cmp
mov
scas
cmp
jb
push
adc
or
mov
mov
adc
or
pushf
push
into
cltd
repnz
xlat
mov
pop
fsubr
loopne
imul
push
lock
shrl
adc
xchg
and
xchg
or
int
mov
push
jo
cmpsb
cli
xchg
fistps
sbb
xorl
sub
lcall
jg
cwtl
icebp
es
in
sbb
push
pushf
xchg
mov
xchg
movb
fdivs
in
repnz
dec
pushl
xor
imul
fisubrs
add
imul
in
cmpsb
leave
mov
cmc
stc
add
mov
jbe
clc
cmp
shll
cld
subl
or
icebp
jge
push
and
inc
int3
gs
jecxz
ror
outsl
adc
mov
addr16
sti
int
sbb
je
add
mov
push
jb
pop
adc
push
sub
invd
insl
icebp
pop
insl
fstps
cli
push
lahf
adc
sub
es
and
in
icebp
pop
inc
dec
in
shl
jnp
cs
cli
jo
jp
test
aam
sub
mov
std
add
sbbl
adc
pusha
pop
icebp
sbb
shll
scas
cmp
daa
in
pushf
ret
ja
mov
addb
sbb
stc
xchg
jns
mov
xchg
ja
jg
arpl
jmp
fldl
dec
push
lret
clc
jl
push
pusha
xor
imul
iret
inc
sbb
lds
lods
mov
xchg
in
nop
mov
cmp
jge
pop
jle
xlat
test
add
into
sub
xorb
cmp
cld
repz
and
and
sub
pop
lods
push
loope
lret
add
push
andb
pop
mov
cli
mov
adc
add
cmpb
inc
stos
and
cltd
ljmp
incb
shl
pop
shrl
mov
out
xchg
in
shlb
ret
pop
es
repz
rcrb
adc
out
outsl
xchg
lea
inc
mov
nop
xor
jb
lret
lods
xchg
jb
stc
mov
stos
xchg
dec
push
out
nop
nop
xlat
pop
or
pop
mov
cmp
sbb
jecxz
fisubs
push
in
xor
inc
sbb
cmp
insl
cmpsb
add
pop
dec
mov
push
xchg
jno
inc
mov
xchg
scas
out
loopne,pt
and
ljmp
lods
clc
mov
push
xor
inc
in
decl
lcall
sub
and
fistps
sub
test
cmp
pop
sbb
leave
push
mov
dec
dec
std
pop
adc
mov
cs
push
xchg
dec
sbb
ds
cmp
dec
popf
das
sbb
pop
jo
addr16
jmp
push
imulb
daa
adc
pop
dec
jge
inc
stos
and
xchg
dec
sbb
stos
push
mov
adc
mov
xchg
lods
leave
loope
mov
dec
cltd
mov
in
aam
in
mov
adc
aam
inc
or
jae,pn
ret
jmp
ss
in
push
in
test
jge
cmp
fisttps
pop
mov
scas
xchg
dec
insb
jb
ss
test
mov
cli
lcall
fsubr
test
push
cmp
fnstenv
jnp
jae
add
or
cmpsb
out
adc
adc
lds
sub
shufps
mov
imul
push
pop
pop
jl
lret
lods
jp
outsl
mov
add
mov
pop
cmc
mov
inc
shlb
xchg
jbe
mov
inc
ret
cmp
mov
sbb
adc
mov
mov
push
adc
sbb
lods
mov
icebp
shl
pop
loope
push
mov
popf
xor
ja
push
push
mov
imul
jl
xchg
mov
popa
in
in
add
push
add
and
adc
mov
pop
mov
loopne
pop
mov
mov
stos
loopne
jge
in
sub
adc
jle
cwtl
sbb
jno
add
fistps
data16
testl
fiadds
jle
jge
insl
inc
sbb
jge
inc
iret
pop
outsb
push
out
movsb
out
jle
mov
and
rol
xchg
xchg
push
jne
pop
dec
xchg
cmp
mov
insl
pop
or
shr
lds
ret
mov
loopne
sub
cmp
scas
add
mov
add
sarb
pop
ds
stos
xchg
daa
icebp
mov
jge
xchg
xchg
jge
cmp
int
testb
ret
repz
sarb
imul
shll
nop
push
imul
pop
or
in
es
fmuls
imul
ss
pop
pop
in
pop
shr
cmpl
add
inc
aas
in
pop
cmp
lahf
popa
xchg
push
test
jmp
or
cmp
testl
inc
mov
outsl
insl
das
ret
lds
nop
sub
pop
imul
mov
dec
jno
mov
xor
pop
mov
jne
xor
add
shrb
imul
subl
xchg
out
dec
push
push
and
jb
xor
jmp
or
sub
insb
inc
fcmovnb
repnz
jbe
cwtl
xor
or
push
imul
jae
shl
pusha
cli
inc
push
push
imul
mov
popa
push
xor
fbstp
push
push
mov
divl
scas
push
adc
sti
jne
loopne
cmp
jbe
cmp
sbb
fadds
insl
add
fstpl
nop
in
mov
icebp
sarb
push
pushf
xor
xor
sub
xchg
xor
mov
rorb
jmp
jne
or
rorl
pop
xor
mov
mov
mov
rorb
mov
cmp
mov
ror
popa
pop
cmp
xor
mov
aad
and
ret
jb
or
aam
loope
and
mov
mov
rorl
mov
xor
repnz
pop
leave
cmpsb
push
adc
addr16
imul
arpl
outsb
jmp
sahf
inc
adc
cmp
std
std
mov
push
mov
mov
add
gs
aas
push
js
aas
dec
sbb
das
data16
imul
iret
push
loopne
pop
inc
add
test
adc
pop
inc
mov
cmp
sub
aam
jae
sub
mov
inc
fiadds
pop
xchg
insb
mov
lahf
pop
add
and
pop
pop
push
sub
in
xchg
aas
fisubrl
lds
popa
bound
loop
or
add
or
and
fcmovnu
inc
lds
rolb
jp
fists
xchg
mov
lods
fildl
scas
cltd
shrb
imul
clc
xor
loope
fdivs
push
and
dec
mov
popa
xchg
out
mov
push
adc
jnp
mov
fs
cmpl
mov
push
int
jne
lods
sub
roll
je
in
es
ss
xchg
imul
lret
xchg
hlt
push
and
lret
pop
pop
and
jns
jl
popf
popf
xchg
les
xor
cmpl
pusha
xchg
sub
iret
ret
and
pop
mov
cs
stos
xlat
outsb
fdivrl
movsl
outsb
js
pop
je
movsb
sub
xchg
push
mov
test
aam
cmpsl
scas
in
test
add
mov
mov
in
jb
jb
stc
jecxz
add
or
pop
scas
movsl
rolb
ljmp
ds
iret
daa
lret
mov
shlb
insb
movsl
lahf
imul
popf
dec
add
loop
stc
inc
cmp
and
xor
mov
xchg
xchg
dec
mov
sub
xchg
jp
lock
jg
addr16
pslld
lret
pop
mov
test
xor
imul
dec
mov
test
inc
lods
idivl
push
jle
dec
jb
test
pushf
xor
add
push
es
sub
test
jo
cmpsb
dec
loop
lcall
sub
sub
push
dec
jmp
jle
pop
jno
add
rcll
jmp
sub
pop
pop
pop
add
mov
shlb
orl
pop
loope
add
js
in
test
pop
jmp
cmp
sarb
test
test
add
cwtl
jmp
shlb
or
push
mov
data16
adc
icebp
movsb
nop
xchg
and
push
xor
xchg
xor
movsl
pop
xchg
daa
or
mov
mov
and
das
mov
pop
lahf
sbb
add
lock
stos
cmp
loop
pop
mov
adc
repz
or
lods
aaa
add
movsl
cwtl
and
fstps
mov
mov
in
movsl
or
adc
dec
pop
mov
test
cmp
dec
cmp
stos
cs
icebp
sub
push
xchg
and
jnp
adc
mov
adc
scas
stos
or
ss
in
or
lcall
std
or
cwtl
cmp
jne
pop
dec
jae
aas
jp
fsubr
mov
fsts
fnstcw
push
sub
loop
popf
dec
ror
les
enter
gs
cltd
jb
adcb
xchg
and
fldcw
add
rcl
imull
fcomp
testl
je
nop
daa
stc
xchg
jecxz
test
into
daa
xor
push
push
cmp
mov
mov
popf
cmp
mov
xor
jnp
cld
aad
push
or
popf
cmp
scas
mov
xchg
pop
int
push
lret
pusha
pop
push
push
adc
xor
xchg
sub
pop
into
mov
jecxz
lds
sub
pop
dec
fisttpll
adc
and
pop
cmp
scas
sbb
fwait
ljmp
leave
pusha
repz
pop
lods
xor
sbb
inc
bound
sub
div
xor
cmp
push
cmp
cmpsl
adc
jb
mov
mov
sbb
std
test
fidivs
testl
push
add
push
jmp
inc
adc
mov
out
adc
xor
sti
mov
push
fst
mov
inc
and
jg
std
mov
and
inc
test
out
push
xchg
jge
adc
pop
lods
mov
jnp
jmp
rcll
push
push
rclb
sahf
mov
jg
out
pop
sbb
jle
in
cmp
jecxz
aas
fcmove
inc
push
pop
ja
frstor
or
push
popf
imul
imul
mov
fwait
stos
clc
in
mov
xor
je
cli
mov
sbb
testl
lds
adc
bound
fdivrs
add
cld
cmp
jnp
or
fildll
inc
das
push
mov
jmp
mov
pop
and
or
orps
cmpsl
imul
aam
call
int
out
insb
pop
dec
xor
ljmp
ja
ret
cwtl
jb
insl
mov
or
jno
sbb
mov
les
sbbb
lret
cmp
lods
aad
xor
stos
fnstcw
pop
add
jae
aas
dec
mov
mov
test
outsl
loop
sbb
or
push
xor
lret
mov
push
mov
jle
mov
or
mov
arpl
cltd
into
mov
push
lcall
and
andl
sub
mov
pop
aam
loopne
adc
jns
rclb
pusha
insl
adc
jle
cmpl
in
fwait
jns
xchg
test
adc
sub
push
mov
mov
cmp
cmp
adc
sahf
xor
outsl
icebp
cmp
push
pop
and
fistpl
bound
cmc
inc
sbb
inc
and
xchg
adc
mov
cmpsb
ficoml
lahf
lahf
and
out
dec
mov
xor
mov
jbe
dec
push
mov
ret
mov
lods
inc
es
push
inc
out
es
push
ljmp
sahf
cli
pusha
push
out
fcmovbe
mov
cmp
test
lea
test
jmp
or
ret
clc
push
iret
mov
or
lret
jecxz
mov
or
sub
mov
and
sbb
jmp
jl
call
adc
xlat
das
cmp
sbb
dec
cmc
jne
scas
insl
add
jne
fwait
push
adc
sbb
out
ror
repz
andb
push
cmp
mov
lahf
ss
xchg
mov
push
or
sub
cs
cmc
test
jb
add
push
daa
outsl
adc
dec
dec
mov
sbb
int3
popf
dec
sub
sbb
outsb
or
inc
cmp
dec
jecxz
pop
insl
test
push
addr16
into
int
std
dec
push
ffreep
clc
xchg
mov
insb
hlt
jbe
fwait
inc
data16
cs
jno
sbb
jo
movsb
imul
imul
inc
adc
lcall
lcall
pop
or
pusha
mull
ss
addl
push
cmp
mov
les
dec
push
mov
mov
repz
aaa
movsl
repnz
push
xchg
lds
arpl
fnstsw
aad
and
mov
out
sub
dec
mov
arpl
xchg
pop
adc
repz
and
inc
sbb
das
popf
insb
fcoms
fwait
push
mov
sarl
cltd
cmpl
push
sbb
or
jno
insb
pop
or
addl
jnp
mov
pop
fnsave
popf
and
dec
fistpl
bnd
movsl
dec
call
stc
dec
xor
xchg
jns
sbbl
jb
je
cmp
aam
jmp
sarb
xchg
inc
pop
sub
pop
hlt
ffree
mov
imull
inc
subl
mov
mov
pop
dec
push
mov
aaa
jp
pop
inc
ret
lret
in
xchg
lods
inc
xchg
int3
lahf
push
iret
pop
pushf
vpcmpgtd
mov
adc
scas
xchg
pushf
inc
shrl
add
xchg
repz
ret
pop
cmpsl
inc
jg
jecxz
int
or
inc
and
and
mov
pop
js
inc
testb
movsb
push
xchg
pop
push
jle
push
scas
cs
push
je
cmpsb
jne
sub
jne
xor
pop
xor
dec
sbb
popf
xchg
movsb
inc
pop
sbbb
xor
leave
pop
push
push
cmpsb
fdivrp
mov
cmpsb
dec
pop
shll
dec
and
push
mov
mov
push
and
enter
pop
lahf
and
out
mov
testl
jae
sub
rorl
repnz
jns
nop
sub
pop
push
dec
daa
mov
je
sbb
push
fnstenv
mov
cmp
testl
sub
repz
aaa
adc
push
ret
call
xor
mov
cmpb
je
add
mov
and
addl
xchg
lcall
andl
lds
and
je
jmp
lret
xor
icebp
enter
mov
jno
dec
fcoms
mov
xchg
xor
incl
imul
pop
cmp
sub
into
and
insb
mov
lret
sbb
mov
inc
movsb
xchg
daa
adc
push
dec
ret
dec
cmp
adc
xchg
inc
push
mov
cmp
mov
mov
outsl
repnz
cli
subb
pop
jmp
mov
dec
push
lock
add
inc
cmp
xchg
fsubr
lods
mov
pushf
sub
stos
enter
and
jne
inc
sub
sbb
test
pushf
xor
add
enter
gs
push
icebp
fs
incb
movsb
push
aam
mov
inc
out
xor
jmp
ret
inc
in
fcom
mov
xchg
addr16
adc
add
fildll
shll
fldt
add
repnz
aas
sub
stos
xor
pop
xor
stos
bound
and
add
out
lret
xchg
fidivl
dec
cmp
ret
test
and
adcl
sub
aam
cmp
mov
fs
aam
cmp
lds
stos
stos
or
jbe
xor
shlb
jne
or
outsl
inc
fnsave
mov
testl
call
div
mov
cmp
push
mov
adc
jle
or
push
inc
mov
dec
lea
out
test
xchg
stos
push
push
mov
popa
icebp
cltd
sbb
mov
stos
fdivl
stos
inc
ljmp
cmpsl
fisubl
loope
cld
lcall
in
xor
dec
dec
ret
sarb
sbb
mov
sub
movsl
cmp
add
cltd
cmp
sub
adc
popa
push
mov
jmp
int3
mov
add
gs
push
jbe
cmp
cli
int3
ficoms
ds
outsl
jl
mov
into
idivb
jns
popf
xor
push
int3
or
cltd
movsb
fsts
cs
and
push
jb
jmp
sti
cmp
movsb
pop
out
adcl
or
xor
std
push
out
pop
mov
push
mov
adc
rol
add
scas
in
lret
pop
cmc
add
outsb
lds
lock
aam
or
cmpsl
je
lea
movq
and
shll
jo
js
add
and
cwtl
mov
cmp
cmp
adc
ja
out
daa
jmp
lds
mov
scas
jmp
lahf
mov
cmp
stc
lahf
fdivrs
lods
lret
aam
xor
cmp
adc
out
push
inc
inc
cmp
daa
and
js
xor
ja
jno
jno
ret
and
les
mov
cwtl
push
rolb
loop
adc
data16
scas
mov
ret
xchg
test
pushf
pop
pop
xor
fidivrs
cvtps2pd
jle
test
insl
mov
or
xchg
mov
cli
mov
xchg
in
insl
or
js
cmp
or
sub
cltd
push
mov
sbb
mov
xor
fsubr
loopne
push
xor
js
jge
adc
enter
pop
pop
out
mov
mov
jne
jmp
xchg
inc
lret
and
bound
jmp
loopne
jno
adc
jb
test
jnp
and
insl
inc
sbb
scas
or
nop
les
pop
or
sbb
addr16
pusha
inc
in
std
out
ss
repnz
movsl
shll
mov
je
dec
fimuls
out
test
addr16
ja
or
xor
dec
arpl
pop
xor
cli
and
rcll
lods
adcl
lea
jno
dec
adc
pushf
scas
and
arpl
lcall
ljmp
dec
inc
dec
outsl
push
aam
cs
testb
popf
outsb
sbbb
and
aas
arpl
movb
repz
or
popa
mov
call
xchg
or
sbb
mov
mov
arpl
loopne
adc
cltd
push
dec
add
pop
ljmp
mov
sub
push
fimull
lret
lret
mov
cmp
pushf
cld
lret
jns
push
cmc
loop
sti
movsb
jbe
dec
push
insb
ror
xor
popa
lods
je
jbe
scas
ret
imul
mov
hlt
push
ljmp
mov
sub
notb
std
shlb
xor
add
xor
daa
ret
inc
jecxz
push
iret
fstpt
scas
out
sahf
popf
aad
sti
pop
test
int
idivl
cli
mov
mov
push
lea
das
iret
fs
cmp
gs
int3
dec
popf
sbb
mov
bnd
aad
pop
lcall
mov
bound
dec
lods
adcl
sub
mov
std
psrlq
push
in
mov
out
pop
sub
sbb
lods
mov
mov
rcrb
leave
es
in
es
fs
cmp
imul
push
mov
xchg
adc
push
fidivl
scas
ret
in
jne
push
sub
mov
cltd
outsb
sbb
mov
cmpsb
xor
test
popf
mov
xor
imul
cmp
inc
pushf
hlt
mov
icebp
clc
or
pushf
daa
jbe
adc
xor
jmp
insl
out
mov
sbb
notb
or
call
into
jl
and
into
fidivrs
aad
les
loop
ret
rcl
jecxz
dec
pushf
mov
pop
sahf
enter
ss
push
mov
int
int3
sub
mov
add
jecxz
or
lret
mov
cld
lcall
bound
dec
pushf
jge
xchg
ss
icebp
mov
js
jecxz
outsb
xor
cmp
iret
cmp
outsl
xchg
add
sub
bndstx
pusha
or
test
jge
jno
jb
dec
lahf
jl
xchg
out
enter
js
lea
ret
jmp
push
or
xchg
cmp
icebp
jl
es
pop
int
aad
cmp
fsubl
pusha
ss
mov
xlat
scas
pop
pop
inc
negl
sti
xlat
and
or
punpcklbw
mov
test
ss
subl
or
mov
setb
mov
mov
hlt
int
mov
xchg
sub
int3
and
orl
push
mov
nop
cmpsl
mov
pop
jp
jp
adc
inc
or
jge
aam
and
jbe
arpl
stc
push
mov
inc
dec
les
or
add
adc
inc
mov
push
push
mov
bound
sub
ret
test
iret
sbb
cmp
lret
out
pushf
aam
mov
add
aaa
clc
cmpsl
jo
adcb
cmp
ljmp
lea
jno
mov
xchg
mov
inc
add
xor
or
sub
in
ss
test
int
sbb
orb
pop
pop
pop
scas
fstl
xchg
xor
or
mov
loopne
mov
jg
mov
xchg
sub
fists
test
in
mov
mov
mov
fcomps
mov
xor
in
stc
or
adc
rclb
test
cmc
sub
fnstenv
pop
mov
call
stos
ret
lock
out
imul
sbb
mov
mov
cwtl
push
mov
and
inc
hlt
xor
les
inc
or
pop
ficompl
leave
aam
fs
cmp
subl
cs
aam
lods
mov
lea
aam
jecxz
push
loope
xlat
fwait
and
pop
or
lods
lret
jbe
and
mov
ja
into
in
fwait
inc
popa
std
sti
mov
jae
es
test
test
mov
push
rolb
repnz
data16
imulb
stos
push
fsts
xorl
adc
and
push
mov
jmp
fcmovu
inc
xlat
flds
mov
jae
insb
jb
lcall
sbb
jge
popa
orl
sub
pop
lret
cld
jnp
jl
loopne
add
ret
inc
pop
fld
jbe
cmc
cli
loope
jo
xchg
out
std
dec
push
jmp
or
movsl
mov
sub
lahf
pop
push
cmp
or
jb
xor
pusha
ss
or
lods
fildl
fisubrl
push
sub
jmp
xchg
xchg
ljmp
aam
scas
mov
arpl
add
mov
dec
test
fcomps
dec
data16
xor
sub
pushf
addr16
stos
repz
pop
inc
incl
mov
and
ds
pop
push
int3
pop
and
push
inc
and
bound
cmp
push
inc
xchg
mov
or
ja
and
rolb
scas
fiadds
cltd
icebp
inc
dec
pop
sub
outsb
insl
cmp
ret
push
sub
dec
cmp
xchg
mov
xchg
jmp
xchg
sub
mov
push
xchg
add
in
imul
and
cmp
add
cltd
xor
lds
or
imul
sub
insb
jnp
ret
push
sbb
arpl
out
jne
xchg
and
call
push
inc
data16
xchg
sbb
cmp
dec
in
pop
jb
mov
inc
push
lea
sbb
xchg
xor
leave
xchg
jl
lahf
lods
mov
aaa
out
imul
aas
lds
iret
xchg
rorb
add
mov
in
loopne
add
xchg
in
mov
cmp
add
xchg
fnstcw
in
cmp
insb
push
imul
push
les
cli
push
in
ret
jmp
jae
fdivs
into
out
push
lods
push
xlat
imul
xlat
loopne
pop
xlat
jg
lds
sbb
cld
ret
outsl
and
cli
dec
pushf
jecxz
pop
jge
cmp
cmp
les
iret
ret
and
lods
inc
inc
fdivrl
dec
pop
jmp
jb
pop
push
pop
adc
ret
ret
shrl
mov
or
test
ja
fbstp
fcoms
gs
xor
mov
rcll
fwait
push
stos
xor
mov
test
jo
jmp
cmp
lea
xchg
jmp
cs
int
movsb
jg
pusha
sbb
jge
push
or
rcrl
leave
mov
jno
xor
mov
dec
mov
outsb
and
mov
dec
cwtl
xor
in
mov
js
or
inc
ja
out
mov
movsl
inc
sub
pop
idivb
mov
fcmovnb
cmp
mov
inc
fdivrs
je
lahf
mov
stos
es
pop
cli
jp
pop
mov
xor
iret
push
mov
pop
mov
add
into
add
fdivs
cmp
xlat
mov
push
into
xor
andl
adc
pop
mov
out
xchg
into
inc
clc
pop
cli
out
pop
hlt
fmull
cmp
mov
iret
and
push
icebp
lret
push
loopne
or
js
mov
push
lock
es
sub
mov
lret
ret
sub
jo
sbbl
xlat
mov
imul
popl
rcrb
add
xor
dec
xchg
mov
sti
inc
mov
in
in
jbe
insl
push
jo
xor
push
jmp
adc
in
push
xchg
push
js
adc
repnz
test
xchg
and
das
dec
jge
sti
scas
inc
push
scas
xchg
ss
ja
sub
pushf
mov
sbb
pushf
xor
push
arpl
pop
sub
fisubl
mov
jb
xchg
push
jl
inc
clc
push
nop
and
lcall
loope
std
mov
jne
sub
cmp
inc
in
mov
mov
sti
sarl
insb
addr16
cmp
or
and
sbb
leave
test
lahf
sbb
inc
pop
imul
push
mov
add
sub
test
jl
notl
scas
sbb
fs
call
sub
fldl
sub
dec
lcall
loop
ja
sbb
jo
pop
imul
xor
addl
push
int3
lahf
ss
mov
and
je
ja
xchg
mov
or
mov
push
jnp
cmp
inc
cmpl
jg
mov
dec
dec
ja
lret
sti
pop
add
push
out
fcoml
jmp
outsb
xchg
mov
pop
fisubrl
push
sub
mov
sbb
mov
inc
mov
rclb
mov
inc
push
xchg
in
pop
lcall
cmp
loope
sbb
mov
fstpt
or
shrl
and
cmpsl
mov
push
cmpsb
sti
lods
mov
jg
fcmovu
dec
cmp
mov
das
std
test
add
daa
scas
cwtl
pop
cmp
dec
mov
sbb
jg
cmpsl
out
inc
mov
cmp
std
cmpsl
inc
mov
clc
cwtl
xchg
add
popa
jbe
rclb
sbbb
push
outsl
inc
push
test
repz
ret
sub
or
and
push
pop
xor
fisubrs
out
cmpl
adc
mov
cmpsl
dec
and
mov
or
mov
aaa
ljmp
push
cmc
pusha
jbe
cmp
in
in
inc
sahf
pop
iret
xchg
xlat
sbb
fs
clc
sbb
inc
sbbb
push
pop
xchg
sbb
push
jo
inc
out
cmp
mov
jp
loope
mov
cmpsb
ret
bound
test
jb
test
rorb
out
movsb
cltd
pop
sub
cmp
outsl
jl
les
mov
push
out
jo
or
jmp
cmp
pop
cmc
lahf
dec
in
loop
movsl
push
sti
adc
scas
pop
nop
daa
dec
fldt
or
xchg
lods
enter
ret
xchg
push
nop
push
test
arpl
clc
iret
mov
out
push
pop
rol
mov
shrl
inc
stc
outsl
shll
rclb
jbe
jle
fsubrp
cmc
scas
pusha
mul
push
imul
fidivrl
mov
xchg
pop
push
cmpsl
sub
popf
jge
add
in
stos
add
push
stos
jle
and
push
fildl
lret
cld
mov
test
mov
cmpsl
xchg
das
jle
pop
cwtl
and
jl
inc
and
mov
sub
repz
inc
dec
ret
in
push
aaa
cltd
push
inc
icebp
cmpsb
push
dec
mov
stos
repz
xchg
mov
add
jmp
add
add
jle
adc
loop
mov
and
xchg
jae
or
jno
ret
xchg
out
cmpsb
lods
ds
xor
call
pop
repnz
jb
mov
adc
sbb
movsl
add
das
jl
cmc
lods
push
shl
jae
dec
movsl
add
xor
jo
popf
xor
mov
mov
adc
aad
xchg
pop
imul
mov
add
ljmp
addr16
mov
inc
fisubs
lock
adc
orb
xor
cld
pushf
mov
hlt
xchg
inc
data16
ss
test
je
test
fisubrl
icebp
add
dec
in
and
adc
sbb
jb
ss
pop
scas
mov
cmc
xorb
sbb
inc
cmc
mov
inc
lock
adc
and
cld
out
insl
sub
cmp
pop
ret
cmp
push
insb
in
mov
mov
es
mov
scas
adc
outsl
and
mov
push
mov
jo
mov
shrb
loope
xor
push
call
sub
rcrb
dec
je
jno
sub
sbb
fdivrl
les
imul
sbb
cmpsb
decb
pop
rolb
lock
ljmp
sti
sbb
xor
xchg
mov
js
je
enter
inc
ficoml
mov
cwtl
das
add
pushf
xor
outsl
push
inc
jo
push
mov
ret
repnz
mov
fdivl
hlt
insl
add
nop
cli
xchg
movb
js
sbb
fldl
int
jnp
sub
or
lds
xchg
xchg
pop
sbb
out
cmp
filds
les
in
and
sbb
xlat
jb
xchg
sub
pop
lret
adc
pop
pushf
xor
mov
push
jmp
sbb
mov
jp
stc
fidivl
shrl
pusha
cmp
xchg
sub
es
mov
in
out
lods
inc
lods
sysexit
int3
inc
fiaddl
or
cmp
add
lock
jne
cmpsb
imul
hlt
cmpsl
mov
jnp
incb
out
cmp
lds
pop
add
lea
dec
jecxz
test
stc
fstps
jl
jle
dec
fistps
mov
in
addr16
pop
pop
stos
inc
cmp
imull
sbbb
pop
lcall
lods
mov
out
cmc
ds
push
arpl
dec
divb
mov
lret
sti
mov
xchg
mov
ficomps
mov
outsl
stc
mov
roll
mov
fcoml
cmpsl
or
aam
sub
pusha
mov
out
loop
scas
inc
mov
fcompl
mov
push
sbb
test
cmp
aad
cmp
scas
clc
mov
cmpsl
sti
dec
pushf
xor
and
cmp
fwait
repnz
loope
mov
shrb
or
jmp
ret
pop
cmp
mov
hlt
mov
mov
add
outsb
pop
xchg
cs
push
jnp
test
sbb
shrl
pop
pop
hlt
jecxz
and
stos
inc
mov
jns
nop
daa
std
lcall
inc
cli
cmc
mov
outsb
jmp
pushf
pop
pop
mov
dec
jecxz
dec
loopne
or
in
cmp
or
xchg
inc
or
das
in
xor
lock
test
dec
aas
jne
insl
stos
or
mov
fidivs
push
das
sbb
dec
clc
pop
imulb
mov
daa
adc
jl
mov
jbe
stc
out
xchg
pop
cmp
arpl
es
dec
sbb
add
xor
mov
sbb
mov
and
das
sub
shrl
repnz
and
loop
xor
cmp
sub
mov
and
add
pop
xor
loope
xor
push
in
and
popa
clc
pop
add
jae
push
les
lock
and
cmp
sbb
pop
pop
hlt
xor
lock
clc
and
pusha
idivl
lds
and
sbb
lret
or
call
sbb
or
cmp
loop
sub
ljmp
inc
or
cmp
mov
cltd
xor
adc
leave
cmp
jecxz
sub
or
push
cmp
loop
adc
pop
out
inc
jecxz
adc
or
shrl
adc
test
fdivr
nop
adc
sub
dec
or
mov
add
and
dec
adc
mov
add
sbbl
push
adc
xchg
dec
shlb
sub
push
adc
mov
std
xlat
out
push
daa
repz
fs
dec
iret
insl
add
sub
push
sub
push
pop
jge
dec
shrl
xlat
mov
mov
adc
inc
mov
pop
and
push
adc
inc
std
xchg
not
add
adc
and
push
leave
push
in
sti
les
int
sub
jb
gs
jno
cld
mov
daa
loop
jne
pop
xor
aaa
into
mov
fnsave
in
jno
xchg
sub
test
cmp
pop
dec
clc
popl
cwtl
sub
int3
sub
pop
pop
les
iret
xchg
cs
lahf
inc
xlat
int
sbbl
mov
and
bound
pop
xchg
mov
mov
insb
bound
mov
xchg
outsb
arpl
aad
mov
lcall
sbb
push
bound
xchg
jl
je
mov
fwait
xor
or
fwait
dec
pop
cmp
insb
and
sahf
mov
stc
loop
rcl
add
xor
push
call
xchg
mov
inc
fsubp
bnd
and
pop
out
ds
add
xchg
xchg
mov
leave
mov
push
in
imul
cmp
mov
loopne
mov
push
out
in
test
add
cmp
movsl
lea
cmp
fwait
xor
mov
sub
pop
scas
addr16
push
jmp
test
jl
cmpsl
xchg
sub
push
clc
push
ds
dec
shlb
jae
pop
test
int
push
sti
clc
loop
and
push
dec
add
mov
jge
jecxz
dec
in
jge
out
movsb
mov
out
test
stc
pop
repz
or
daa
ret
mov
repnz
cmp
sub
mov
jecxz
ret
cld
xchg
repnz
pop
icebp
sub
xor
pop
cmc
sub
daa
les
cmc
dec
dec
fistpll
add
xor
or
mov
mov
lcall
repz
inc
fnstenv
testb
mov
push
sbb
orl
pop
out
xchg
ret
cs
dec
in
sbb
dec
push
sti
xchg
cmp
repz
add
aas
fisttpll
cltd
mov
inc
fldt
bound
xchg
push
jae
xchg
mov
repz
mov
and
movsb
mov
and
repz
in
pop
mov
push
pop
jne
cmp
push
insl
mov
fdivp
mov
loope
adc
gs
and
popa
popf
mov
pushl
sbbl
cmp
int3
push
mov
mov
fistps
imul
cmp
data16
sahf
inc
mov
mov
shll
mov
stos
call
add
mov
jno
pop
cmpsl
pop
test
xchg
int
addr16
mov
xchg
sub
insl
add
push
sti
xchg
or
mov
addb
pop
repz
pop
sahf
push
sub
pusha
js
call
mov
addr16
stc
rcrb
mov
das
insl
pop
jno
push
cmpsl
jl
inc
scas
enter
int
push
icebp
pushf
jg
rol
in
mov
inc
or
xchg
imul
mov
pop
mov
jae
and
das
sub
call
mov
dec
push
mov
push
xchg
pop
ret
sub
dec
push
cmp
dec
push
fisttpl
cli
dec
nop
cmp
mov
dec
stos
mov
xchg
data16
fs
cmp
adc
sub
into
mov
in
lret
icebp
test
les
icebp
mov
add
adc
push
sbb
mov
insl
es
nop
mov
imul
ficoms
pop
push
sub
pusha
leave
out
or
rorl
mov
xor
mov
mov
jns
cltd
inc
dec
jmp
rolb
and
sub
jl
lret
pusha
rcrl
scas
jg
cwtl
push
mov
popf
popa
in
pop
repnz
add
lock
sbb
outsl
cmp
outsl
mov
or
aam
jb
xor
push
aas
call
add
mov
mov
jno
add
cmpsl
mov
test
add
push
outsl
xor
pushf
xor
mov
popa
xchg
push
in
enter
sub
xor
lock
aas
movsl
and
inc
inc
test
dec
push
push
pop
cmp
jmp
sub
imul
gs
adc
std
inc
xchg
mov
mov
and
xchg
sub
jg
je
dec
dec
adcb
test
dec
call
lret
fsubrs
and
lret
mov
mov
fldl
fidivrl
pop
dec
loopne
mov
dec
mov
popa
mov
out
sbb
int3
ss
aam
iret
xor
adc
rcll
enter
and
cmp
ret
int
xchg
jno
and
rcrb
jbe
xchg
mov
adc
js
jecxz
repnz
inc
and
push
add
in
in
sbb
icebp
divl
aam
cmp
inc
negl
stc
dec
sbb
scas
pusha
sbb
stc
aam
hlt
dec
push
rolb
in
inc
lods
pop
pop
mov
mov
mov
sub
aas
sbb
rcrl
adc
jle
xchg
rorl
addr16
xchg
mov
push
popl
and
fidivrl
daa
enter
rcrb
pop
or
push
add
lds
andl
push
cmp
and
dec
sbb
popa
inc
insb
repnz
dec
push
xchg
xchg
push
dec
sti
daa
js
rorl
dec
mov
jp
push
int
dec
fists
inc
fadds
lcallw
outsl
cwtl
outsl
movsl
sub
pop
or
push
aad
cmp
pushf
pop
and
pop
bound
cltd
xor
je
sub
stc
xor
in
repnz
movl
sbb
adc
add
sub
addl
hlt
push
stc
mov
dec
aad
notl
adc
add
iret
xchg
leave
mov
sti
or
int
fiadds
in
mov
in
fcoms
aad
popf
icebp
mov
stos
cmc
popf
xchg
int3
call
sbb
rolb
fcomps
mov
out
hlt
mov
into
out
and
adc
xor
pop
jmp
sub
xor
enter
sbb
sbb
xchg
pop
sahf
jge
loope
insb
mov
mov
mov
jg
pop
or
dec
mov
dec
iret
dec
cmc
ret
aaa
int3
pop
es
fstpt
enter
cmp
jle
fiaddl
out
out
xor
pop
mov
sbb
mov
xor
mov
ds
rolb
push
stos
mov
jmp
movsl
lock
les
adcb
adc
lods
mov
test
or
test
fnsetpm(287
mov
xchg
adc
jp
daa
mov
stos
movsl
dec
dec
mov
shrl
lock
loop
push
mov
fiaddl
push
xor
jl
xchg
add
pusha
pushf
xchg
orb
hlt
outsl
push
es
in
gs
movl
dec
mov
fdivrl
mov
test
adc
divl
cltd
push
jmp
gs
push
and
adc
nop
xor
std
movsb
mov
mov
cltd
nop
push
lret
enter
and
push
int3
lods
jb
inc
out
insb
movsl
sahf
outsb
cli
sub
jge
mov
lret
cmp
mov
cmc
xchg
jnp
add
or
xchg
jb
mov
stos
push
dec
fwait
xor
loop
mov
loop
mov
pop
lods
inc
rcll
inc
dec
iret
xor
xor
in
sub
cmpsb
mov
out
pop
leave
jmp
xchg
scas
sub
sbb
jo
mov
out
gs
and
pop
imull
ret
pop
jg
ja
test
clc
es
das
bound
mov
das
out
and
aam
scas
inc
jbe
cmp
leave
popa
adc
adc
lods
sbbb
ss
insb
mov
jne
ja
or
out
test
xor
nop
jb
mov
xchg
push
pop
aam
adc
adc
xchg
mov
cmp
out
fisttpll
jl
or
stos
pop
leave
jns
cld
dec
scas
mov
cmc
dec
xor
cli
push
lds
adc
cmp
or
sbb
or
pop
jecxz
rcrl
in
sub
jns
sarb
pushf
testl
and
adc
xchg
sbb
or
xchg
roll
shlb
mov
clc
rcll
test
loopne
inc
mov
jne
data16
daa
xor
inc
cmpsb
inc
xlat
sub
mov
inc
jp
outsb
add
lahf
adc
mov
dec
cwtl
mov
mov
sbbb
xchg
orl
pop
cmc
addl
cmp
leave
inc
add
cmp
jmp
mov
movsb
and
sbb
lcall
cmp
pushf
lret
int
sbb
loopne
sbb
call
add
int3
ret
or
mov
xor
lods
cmp
cld
loopne
adc
lcall
fmuls
push
outsb
ficoms
fldcw
stos
outsl
stos
fldl
in
xchg
insb
add
test
loope
and
mov
xchg
stc
sete
mov
hlt
add
xchg
in
mov
adc
add
enter
pop
cmc
mov
add
sub
lds
in
testb
cmp
mov
fsubr
push
xchg
lret
push
adc
add
sbb
rcl
out
sbb
inc
mov
xor
lea
das
std
fdivs
out
mov
lods
pop
push
mov
mov
cli
and
cmp
mov
insb
data16
addr16
push
mov
sbb
sti
pusha
jl
ss
inc
mov
imul
xor
or
or
pop
mov
sbb
sahf
aaa
in
lods
adc
inc
lods
stc
shrb
cli
lds
out
or
mov
out
and
mov
sbb
xlat
jo
test
ss
adc
inc
cmp
xchg
mov
mov
scas
jo
or
jmp
orb
push
test
test
scas
pop
pop
or
pusha
push
jp
mov
dec
popf
cmp
decl
sbb
fldl
fs
add
cmp
out
stos
adc
clc
xchg
adc
xor
orl
dec
loopne
insb
dec
aad
add
in
xchg
insl
sbb
add
gs
das
add
jnp
cmp
aas
sub
lock
fstps
sahf
cld
pop
sbb
dec
mov
out
and
xchg
inc
daa
or
xchg
arpl
outsb
daa
insl
mov
cmp
out
xor
aam
insl
fwait
hlt
rcr
inc
jmp
test
jnp
adc
push
jmp
add
sti
push
xchg
jbe
sub
testb
andl
mov
xchg
lcall
mov
adc
out
stos
jb
and
and
movb
shll
loope
fisttpll
ljmp
or
imul
xor
daa
jg
push
dec
arpl
push
inc
dec
mov
mov
jmp
push
pop
int3
push
popa
cli
sub
xchg
sbb
lods
rorl
loop
mov
bound
enter
cwtl
xchg
xchg
lods
xchg
cmp
xor
add
pop
fbld
xchg
mov
data16
pop
in
test
pop
lock
adc
xor
xchg
repnz
mov
jmp
adc
call
jne
fistl
shll
fs
mov
popf
xor
jl
adc
mov
cmp
lcall
jbe
pop
dec
in
cmp
inc
xchg
xchg
pop
mov
push
dec
cmpb
sbb
jae
xchg
xchg
stos
and
mov
lahf
lock
sbb
subl
push
cmc
dec
pushf
jae
fwait
xor
rorb
jl
xor
scas
inc
test
int3
mov
nop
das
ret
inc
bound
lret
pop
jge
insb
lds
psubd
ret
pop
sbb
xor
je
jmp
xlat
jnp
fidivl
pushf
pop
mov
inc
mov
rclb
lahf
xor
jb
stc
inc
popa
ds
loop
sub
addr16
rclb
ja
popa
and
xchg
dec
xlat
insl
adc
mov
push
cmp
je
xchg
dec
pop
addr16
lea
out
or
scas
pop
or
ror
push
loopne
fwait
jmp
mov
xchg
in
jno
push
jecxz
adc
test
pop
mov
mov
pop
scas
gs
dec
loop
dec
cwtl
orl
rcll
mov
jbe
pop
mov
jmp
cmp
hlt
or
add
call
push
addr16
cmp
ss
shrb
xchg
xchg
xchg
xorl
adc
sub
aas
les
cmp
ret
jle
jnp
add
mov
insl
test
test
push
outsl
mov
or
inc
mov
aam
data16
or
sub
dec
and
dec
jge
xchg
inc
push
shld
gs
inc
jge
popf
push
pop
sub
push
cmpl
in
push
stos
mov
test
push
pop
lret
out
xchg
int3
dec
mov
scas
inc
mov
xchg
nop
stos
out
xchg
ljmp
lret
loope
or
int
jmp
jecxz
sbb
adc
add
clc
add
xor
push
enter
add
call
xchg
jp
rorl
mov
lea
int
out
addr16
push
or
adc
sbb
sub
cmc
shlb
jmp
lret
mov
sti
inc
int3
iret
cmpsl
cmpsb
mov
mov
test
test
repnz
push
fildl
std
push
stc
lds
jge
ret
and
out
mov
xchg
and
add
in
sbb
test
lret
in
push
mov
fistpl
shlb
adc
xor
ret
jecxz
lods
xchg
adc
xchg
fisttps
divb
aaa
insb
dec
nop
ja
inc
lret
inc
lahf
ss
add
scas
xchg
js
adc
cld
and
stc
call
push
xchg
cmp
sbb
add
jae
iret
xlat
insl
je
cli
and
mov
rorl
or
mov
fsubr
mov
int
fwait
add
mov
imul
jmp
das
cli
pop
mov
adc
and
rorl
jle
out
lods
jno
add
sub
mov
sahf
xchg
sbb
hlt
outsb
mov
movsb
push
jmp
xlat
jne
adc
ds
sub
pop
je
push
lock
ljmp
or
scas
call
inc
lret
rcl
jmp
xlat
shrl
shll
adc
mov
popa
stos
js
inc
popf
mov
out
jg
int3
xor
cmc
shlb
cs
ljmp
mov
sahf
aas
icebp
std
call
sbb
jecxz
call
sub
jge
aaa
scas
jg
dec
pushf
pop
popa
mov
sahf
pop
ja
int3
mov
aam
out
fidivrl
fldcw
jge
aam
in
lods
cmc
dec
iret
mov
adc
xchg
into
stos
jbe
sbb
sbb
mov
in
lea
sbb
jge
repz
jno
fiadds
cmp
dec
jbe
or
sbb
or
and
cmp
jnp
dec
dec
into
imul
ss
lock
je
cli
dec
mov
lret
das
repnz
mov
out
cmp
mov
cmp
adc
add
sub
in
jb
add
out
push
push
insl
int
mov
ficoml
ljmp
in
add
test
xchg
addr16
out
aas
or
in
cmc
mov
pop
movsb
idivb
arpl
div
jl
sub
arpl
jmp
adc
sarb
out
into
aaa
xchg
cli
and
and
pop
andl
clc
mov
notl
mov
and
push
icebp
test
inc
repz
and
adc
jecxz
daa
loop
test
jb
jmp
test
sarb
cmp
mov
rorl
mov
repz
pop
shlb
xchg
xchg
mov
dec
mov
out
push
mov
and
pusha
stos
out
inc
pop
les
idiv
ds
sahf
and
xchg
in
adc
aad
adc
shr
sub
stos
or
xchg
or
testl
sub
and
cmp
sub
icebp
sbb
test
or
movsb
es
lret
adcl
add
lret
sbb
int3
fisttps
dec
jp
push
mov
pop
and
popa
movsb
pop
jo
sub
repz
push
test
inc
mov
in
adc
fs
popf
or
clc
jg
sbb
jns
sbb
jecxz,pn
push
fnsave
or
jg
mov
xor
inc
ret
scas
fsubrs
lds
mov
jg
cmp
push
fstl
loope
lret
int3
xchg
int3
cmp
fsubrl
loopne
hlt
nop
lods
inc
sbb
cmp
mov
push
mov
lcall
out
popf
xor
inc
jb
pushw
in
das
mov
adc
sbb
xor
mov
stos
gs
xchg
xchg
mov
xchg
sub
add
call
xchg
loopne
or
xchg
xchg
aam
mov
idiv
dec
dec
rorb
ljmp
in
adc
lock
adc
mov
std
loop
mov
lcall
adc
push
cmpsb
pop
jmp
cwtl
lcall
mov
push
adc
xorl
inc
cmovno
xchg
sub
loope
in
adc
xor
mov
in
mov
sbb
popf
addr16
popf
gs
pop
lret
push
out
subl
fnsave
paddb
mulb
push
dec
mov
std
or
cmp
adcb
sbb
xchg
mov
inc
int
popa
sti
xor
aad
mov
add
cmp
call
dec
xchg
mov
mov
dec
out
dec
lret
mov
xchg
cs
inc
jecxz
outsb
add
push
iret
ljmp
fcomps
enter
imul
andb
inc
jge
fcoms
mov
mov
mov
jg
adc
xchg
add
or
rolb
push
divl
push
notb
call
lret
mov
add
fisubrs
out
mov
cmc
in
adc
fucom
dec
loop
out
out
les
iret
cmp
push
loope
fcomps
xor
mov
add
call
inc
ja
mov
push
inc
pop
lret
push
pushf
icebp
mov
ja
out
int
aam
inc
sbb
lock
mov
popa
lds
inc
mov
jecxz
jb
adc
ret
jmp
imull
mov
out
sarl
dec
pop
lods
jl
ret
cmp
cmpsb
mov
dec
loope
push
ret
cmp
loop
insb
cmp
fnsave
js
mov
dec
das
faddl
sub
sub
mov
out
inc
xchg
mov
lret
aam
xchg
add
arpl
cmp
jo
pop
inc
fwait
pop
or
push
stos
xchg
and
out
xor
xchg
aas
sub
loope
add
sbb
mov
outsl
imul
lea
std
inc
or
loop
pop
js
xchg
sar
mov
mov
mov
stos
gs
mov
push
pop
lahf
ss
aaa
jp
adcl
or
lahf
sub
jae
shlb
adc
mov
cld
push
call
mov
cmpl
xchg
js
rcrl
push
add
jae
push
or
dec
jb
repz
das
adc
or
push
lea
inc
or
pop
push
popa
test
sub
imul
mov
cmp
mov
cmc
daa
cs
test
stc
jle
dec
ds
xchg
sub
jnp
xchg
pop
dec
cwtl
xchg
push
cmp
pop
insl
aad
mov
pop
lahf
sbb
xchg
inc
ficoms
test
dec
call
sti
add
sub
out
aas
xchg
dec
inc
leave
push
out
inc
mov
lock
mov
call
fnstcw
cmp
rorb
dec
pop
vrcpps
pop
stos
pop
pop
mov
imul
mov
pop
and
jl
ja
popa
push
sub
sbbb
push
inc
sub
lcall
mov
outsl
adc
fildl
xor
xchg
sbb
sub
mov
inc
leave
jp
push
in
xor
sub
mov
stos
inc
push
cmpsl
push
call
adc
cmc
sub
pop
push
shrl
aam
cmp
pop
mov
pop
or
jo
je
sahf
push
or
fldl
out
xor
mov
icebp
xchg
sub
fwait
mov
jae
call
sahf
or
fidivrl
hlt
negb
in
dec
mov
add
daa
out
int
push
mov
in
dec
in
lds
mov
stc
inc
ret
jmp
fcoml
cmpsl
xor
fsubs
pop
pop
stc
jecxz
mov
ljmp
inc
add
aaa
jnp
and
dec
aas
lret
pop
or
dec
sbb
inc
dec
dec
sbb
jno
xor
sbb
int3
and
push
stc
nop
jmp
test
sahf
sbbl
subl
mov
push
dec
sbb
popa
imul
push
xchg
mov
das
sub
into
xor
adc
jne
push
filds
movsb
cmpsb
pop
pop
inc
mov
inc
inc
pop
popf
nop
jno
xchg
outsb
bound
adc
xor
sub
loope
aam
fmull
jl
popl
xchg
mov
lahf
inc
dec
jecxz
adc
xor
or
push
mov
dec
pop
mov
dec
mov
mov
cmpsb
pop
out
push
cltd
xor
add
pop
dec
push
lret
lods
fs
adc
jmp
cwtl
fs
dec
aam
jo
sahf
xchg
adc
lea
imul
jo
push
push
das
mov
ds
xchg
mov
faddl
sti
mov
hlt
push
adc
add
inc
xchg
rolb
mov
push
stc
sbb
mov
sub
fs
push
mov
xor
push
outsb
jge
addl
insl
cmpsb
dec
jae
dec
ljmp
push
loopne
jns
dec
mov
popa
mov
add
inc
pop
insl
cmp
dec
xchg
test
adc
cld
inc
lahf
ret
inc
or
dec
loopne
inc
fidivl
mov
and
adc
sub
les
nop
pop
ret
hlt
inc
addr16
pusha
adc
out
and
adc
iret
outsb
mov
fwait
push
sub
pop
lock
les
xor
bound
outsb
pop
xchg
aas
and
and
popa
sti
iret
data16
mov
jge
stc
and
aas
lods
inc
shr
cmpsl
push
mov
xchg
in
sbb
mov
sbb
lret
lahf
xchg
into
aaa
cs
inc
imul
movsb
cmp
je
pop
dec
rcrb
mov
sbbl
popf
add
and
rcll
or
test
out
mov
ljmp
imul
jae
mov
jns
pushf
adc
and
pop
rclb
mov
push
mov
ljmp
inc
fldcw
test
mov
out
xor
push
jns
xchg
xchg
cld
xor
xor
adc
daa
lods
cwtl
inc
ret
shrl
push
mov
jmp
xlat
mov
in
xor
xchg
jmp
mov
push
mov
rorb
cmpsb
fdivl
sub
pop
stc
cli
xchg
sub
push
mov
sbb
add
mov
push
icebp
push
jmp
js
push
jne
out
xchg
xchg
nop
daa
enter
dec
jmp
sub
mov
ret
dec
loope
adc
or
fwait
xor
mov
out
xchg
pinsrw
stc
or
jns
sub
xchg
out
sahf
xor
cmp
mov
aam
and
jno
lods
pop
repnz
adc
lret
sti
push
xchg
test
dec
xlat
outsb
push
ljmp
jno
repz
icebp
mov
nop
daa
inc
sahf
xsha1
cmpsb
iret
scas
inc
cltd
lock
arpl
inc
dec
loop
push
jmp
inc
xchg
imul
xchg
out
push
sbb
cmp
push
inc
fnsave
ret
pop
mov
loopne
js
stos
sbbb
xor
xchg
gs
mov
mov
push
mov
rorb
movsl
fdivl
sub
pop
clc
cli
xchg
sub
push
mov
sbb
add
mov
push
lock
jmp
js
push
je
out
xchg
xchg
nop
daa
push
push
movsl
dec
call
sub
mov
ret
dec
loope
mov
add
loope
lahf
adc
push
fwait
xor
mov
out
test
pinsrw
stc
or
jns
sub
xchg
out
sahf
xor
cmp
mov
aam
and
jno
lods
pop
repnz
cmpsl
jns
xor
push
lods
cli
push
xchg
test
xor
dec
xlat
insl
push
ljmp
jno
repnz
icebp
mov
nop
daa
test
cmpsb
push
in
mov
jae
lds
push
call
inc
adc
out
test
adc
sub
lahf
ss
dec
mov
jg
lods
inc
dec
mov
lret
bound
cltd
mov
pop
push
fnstenv
jns
mov
test
lret
cld
mov
mov
gs
xchg
cmp
aad
mov
adc
mov
fnstsw
cmpsb
adc
dec
loop
xor
dec
loopne
xchg
sarl
fstps
or
xchg
ds
movsl
jl
mov
jmp
lods
add
xor
mov
test
das
push
popf
xor
mov
mov
in
xorl
sub
push
pop
or
jnp
outsb
add
into
data16
ja
pop
test
lret
add
es
mov
shll
xchg
loop
xchg
pop
jl
test
popa
mov
push
dec
imul
xor
sbb
cmp
mov
and
addl
inc
cmp
bound
test
in
arpl
imul
mov
cli
or
in
insb
in
xchg
jg
sub
xor
jbe
test
push
dec
movsl
xor
hlt
mov
packuswb
sub
sub
gs
shlb
sub
cltd
mov
icebp
pop
pusha
jnp
fnstenv
push
out
into
shlb
jae
fwait
lods
xchg
adc
daa
jbe
mov
subl
les
sub
or
cli
inc
cmpb
mov
jl
push
mov
push
jl
sub
and
xorb
dec
pop
idivb
xchg
loop
addr16
jbe
jns
sbb
mov
jl
std
pop
push
ror
mov
scas
cmp
popf
popf
cmp
adc
sbb
sub
xchg
gs
mov
fisttpll
jmp
pop
xchg
xor
adc
outsl
or
xchg
sahf
pop
or
std
dec
add
mov
and
xchg
lock
sbb
push
pop
cmp
xor
add
or
or
lock
sbb
es
jo
ret
sarb
push
and
jnp
dec
subl
pop
sti
jmp
loopne
enter
xchg
lods
cld
test
cltd
pop
mov
pop
out
arpl
cmpsl
cmpsl
xor
aad
mov
leave
scas
inc
fildll
arpl
mov
cmp
fs
nop
dec
aam
ds
push
fcmovne
xchg
lods
cli
pop
sub
or
leave
rolb
and
cld
dec
movsb
xchg
mov
test
mov
jb
or
nop
popa
add
xchg
stos
repnz
push
xor
mov
out
mov
fldt
out
fiadds
orl
sbb
testb
scas
mov
cli
cmp
jl
fwait
inc
cmp
jno
fisubl
mov
sub
ret
mov
jmp
out
movsb
cmp
xor
loop
rcl
pop
scas
add
movsl
cmp
mov
sbbl
mov
dec
loopne
insl
rorb
and
outsl
adc
test
cmp
jae
jno
popf
push
push
in
xor
dec
cmpsb
and
dec
std
xchg
cmp
inc
pusha
in
push
dec
or
aad
mov
jecxz
or
add
mov
jle
insl
or
pop
fldenv
lret
sub
in
jg
push
inc
mov
jne
popf
xor
xchg
loop
cmp
sub
sbb
icebp
pusha
aas
inc
mov
scas
pop
shlb
lea
sub
cmp
rep
xchg
inc
add
ret
pop
outsb
ljmp
fnsave
xchg
out
test
mov
mov
pop
loopne
jg
inc
adc
lock
xchg
dec
fsub
jne
cwtl
gs
xor
loopne
cmc
std
lds
mov
lds
ds
in
mov
xor
out
loopne
jg
inc
adc
lds
mov
mov
and
jbe
stc
les
nop
rol
xchg
inc
shl
jbe
cltd
in
scas
sub
movsl
lss
ja
aam
fiaddl
push
gs
jnp
mov
dec
push
andl
pop
aam
cmpb
imul
inc
mov
push
std
fs
dec
pcmpeqw
push
pop
addr16
or
push
push
clc
mov
scas
mov
inc
jp
mov
sti
insb
fadds
or
mov
mov
sub
ret
pop
mov
jbe
mov
mov
es
loope
cltd
pop
pop
imul
scas
movsl
xchg
cmp
fcmovb
mov
lock
or
in
xor
inc
push
gs
cmp
adc
rol
mov
daa
lods
jb
mov
add
lahf
inc
loopne
gs
mov
scas
xchg
cmp
xlat
lds
jo
xor
pop
pop
gs
xor
sub
mov
cli
xlat
lds
js
mov
add
push
gs
mov
mov
cmp
jge
jb
lds
jl
xor
push
test
xlat
jp
xor
sarb
xchg
cmp
outsl
fldl
and
stos
shll
sbb
pop
jp
cld
cmp
pop
ljmp
mov
orb
sub
lret
lods
push
jae
mov
inc
or
push
gs
sbb
cli
data16
lahf
inc
lahf
dec
pop
push
ror
adc
mov
ja
xor
lret
fs
jecxz
in
je
lock
sti
fiadds
inc
mull
mov
out
jo
movsb
push
shlb
dec
insl
ja
imul
outsb
lock
add
ret
mov
jg
jmp
sub
insl
pusha
lods
sahf
cmp
repz
stc
fcom
or
pop
push
add
icebp
hlt
arpl
mov
xor
add
lret
mov
mov
lea
jl
push
cmp
push
lret
imul
mov
or
mov
test
in
add
xchg
iret
mov
outsl
and
cmp
mov
mov
push
incl
fstpl
lret
lahf
mov
inc
adc
mov
add
into
jb
jo
push
aam
aam
arpl
enter
or
pop
aad
fistpll
add
outsb
push
add
inc
jbe
cmc
sbbl
repnz
push
dec
pop
test
inc
adc
loopne
jo
sar
jbe
xchg
inc
mov
test
icebp
dec
loope
adcl
xchg
test
shr
notl
adc
push
dec
out
mov
xchg
push
add
or
mov
mov
mov
js
jmp
inc
push
int3
xchg
lahf
rolb
and
jae
inc
icebp
arpl
pop
shll
mulb
das
fs
push
push
add
adc
loopne
lds
pop
push
sbb
cli
sub
pusha
hlt
fdivl
rolb
push
fistpll
or
push
cmp
or
outsl
xor
lret
pop
dec
pop
test
dec
pop
loop
fimull
repz
mov
fs
fldt
lret
bound
aad
cmp
mov
icebp
fsubrs
aad
or
and
cmc
arpl
fistpll
push
dec
or
add
push
incl
mov
loop
mov
and
mov
loop
and
pop
incb
xchg
pop
sti
add
mov
pop
jns
test
xchg
inc
adc
pop
sti
pop
xchg
mov
and
xlat
cmpsb
xor
pop
cld
and
mov
jmp
push
rclb
nop
pop
std
std
test
mov
out
mov
out
dec
or
sbb
mov
inc
rclb
je
xchg
pop
ret
stos
insl
pop
ret
ret
sbb
pop
dec
or
sub
inc
dec
xchg
jmp
cld
xchg
cwtl
cmp
loop
inc
shrb
dec
or
adc
mov
jo
out
imul
pop
adc
shrb
inc
adc
pop
and
sbb
test
jns
out
imul
cmpsb
xor
cmp
in
subl
jg
lcall
cli
jno
inc
in
pop
mov
leave
popf
inc
adc
scas
mov
cmp
in
jns
repz
push
xchg
inc
dec
cltd
inc
adc
xchg
pop
cld
imul
iret
mov
sbb
outsl
clc
stc
jecxz
inc
out
ret
dec
lcall
mov
cmpsb
mov
int3
jp
or
out
addr16
jecxz
inc
data16
mov
xchg
dec
pop
cmp
sub
adc
jecxz
dec
in
int
xchg
push
movsl
les
jmp
in
sbbl
jbe
sub
lds
mov
sbb
adc
mov
fwait
imulb
xorl
sahf
inc
jle
cmpsb
sub
fcompl
sbb
std
or
mov
pminub
outsl
icebp
adc
inc
xor
pop
test
mov
lods
jecxz
ds
std
imulb
mov
mov
mov
movsl
popf
xchg
cmp
fnsave
cmp
mov
in
iret
in
testl
jle
jecxz
cmpsl
ss
orb
mov
roll
xchg
inc
xchg
cltd
les
adc
mov
sub
xor
mov
or
push
scas
cs
pushf
xchg
inc
jne
in
imul
lods
into
jp
into
mov
loopne
dec
stos
mov
xchg
ret
jle
outsb
mov
add
icebp
stos
jmp
out
or
cs
inc
xchg
push
je
jmp
dec
mov
inc
add
adcl
aaa
mov
pop
roll
daa
test
fidivrl
lods
jo,pn
stos
sub
int
outsl
pop
sahf
or
mov
mov
mov
mov
cmp
adcb
repnz
imul
pusha
movsb
js
mov
lock
inc
adc
xchg
test
pusha
sub
insb
call
xor
dec
or
mov
rclb
and
popf
aaa
jae
lock
jle
mov
nop
push
push
xchg
lret
fistpll
int
ffree
jnp
das
push
push
inc
adc
call
push
gs
jne
pop
pop
xchg
sub
dec
lcall
es
repz
xchg
popa
jmp
sarl
lods
data16
push
lahf
inc
lds
dec
bndstx
or
push
leave
out
cmp
push
add
xor
ret
mov
or
leave
dec
adc
stc
fldl
enter
cmp
pop
leave
push
stos
or
negl
test
mov
jl
leave
xchg
push
pop
cld
xchg
dec
jnp
adc
ljmp
mov
or
add
lret
stos
cs
inc
jmp
fdivrl
jecxz
out
aas
sub
sub
jmp
dec
cmc
pop
repnz
data16
ret
jo
adc
jp
arpl
fidivrs
jmp
cmp
fnsave
mov
lea
call
dec
fdivs
push
cli
cli
adc
cmpsb
imul
dec
cltd
je
sub
ret
cmp
push
mov
jmp
icebp
ja
aaa
push
mov
dec
das
mov
sub
les
xchg
inc
push
pop
repz
and
jo
pop
sbb
inc
lea
fsubrs
mov
mov
sbb
dec
repz
or
pop
sbb
xchg
pop
xor
fsubrl
orb
xor
pop
push
ljmp
js
sub
ds
cli
arpl
mov
shlb
out
pop
pop
lods
xor
leave
cmp
lret
mov
aam
aad
fsubrl
jecxz
aam
aaa
push
enter
dec
adc
pop
es
cs
mov
sub
add
cmp
lods
pop
aad
ds
pop
into
sub
stc
stos
out
push
jecxz
out
out
stos
sub
je
fnsave
push
add
aam
inc
jne
arpl
pushf
sahf
aaa
or
icebp
data16
lea
stos
cmc
mov
negb
roll
and
and
mov
aaa
into
mov
stos
repnz
cltd
mov
movl
jecxz
out
test
imul
jne
sahf
xlat
data16
pusha
push
lds
jnp
aam
daa
push
inc
adc
or
hlt
sahf
ss
shrb
fnstcw
fdiv
or
cmp
es
pop
add
mov
pop
lahf
inc
mov
std
arpl
enter
negb
in
or
dec
leave
sbb
jl
repnz
sub
aad
adc
pop
mov
fiaddl
sar
insl
repz
scas
push
pusha
shrb
insl
aas
movsl
es
jb
sbb
rorb
adc
xor
cmp
into
sub
adc
and
popa
mov
push
add
popf
inc
fs
int
aas
movsb
mov
mov
add
push
dec
adc
jge
aam
adc
aam
inc
iret
xchg
pop
stc
negl
mov
hlt
fdivrl
pop
les
mov
push
and
jl
xor
aam
and
and
pop
sub
mov
pusha
ljmp
insl
cmc
mov
stos
jo
mov
or
xchg
test
in
enter
popa
lcall
clc
pop
jp
js
xchg
movsb
je
dec
or
rolb
jae
cmpsb
das
inc
out
add
loopne
icebp
cmp
pop
cli
or
dec
or
leave
or
dec
dec
xchg
sub
test
ret
inc
shl
std
mov
lods
or
stos
in
in
ja
sbb
out
into
xchg
jge
ljmpw
sahf
xchg
popf
inc
or
repnz
mov
sub
test
and
push
popf
sub
sbb
and
or
mov
push
imul
cmpsl
push
mov
or
aaa
movsl
sahf
push
lcall
leave
pop
cli
lcall
orb
or
push
rcll
pushf
fdivrs
dec
xor
fists
ret
pop
mov
mov
mov
or
rclb
out
adc
xchg
ss
cmp
sub
addr16
jp
xchg
inc
push
ja
inc
xor
lcall
sub
xchg
aas
sahf
xor
mov
mov
pop
jno
xor
jmp
clc
ds
popa
ret
pop
xchg
dec
and
dec
mov
sbb
pushf
sub
and
sarb
xor
cmp
jmp
fldcw
pop
ret
xchg
jno
pop
mov
movsb
hlt
pusha
popf
lret
adc
mov
loop
fwait
stos
out
sbb
push
inc
fiaddl
into
xchg
xchg
and
pop
xchg
enter
pop
ret
sbb
out
fadds
scas
test
rorb
pop
or
sub
xor
mov
repnz
shll
add
mov
pop
dec
or
icebp
arpl
and
jno
idivb
aaa
insb
cmp
jle
jge
mov
sbb
pop
cmp
arpl
mov
loope
add
mov
rorl
pop
adc
xor
adc
mov
push
add
ljmp
cld
pop
out
xchg
out
clc
dec
push
int3
out
out
adcl
popf
mov
add
in
push
pop
lock
and
cmp
jp
outsb
lods
xchg
adc
sub
ja
stos
cmp
cwtl
jle
adc
cmpsl
insl
xchg
aaa
repz
shlb
test
rorb
inc
aam
sbb
cmp
xlat
in
xchg
arpl
cmpsb
dec
push
insl
or
mov
dec
addr16
inc
adc
and
and
out
loop
ds
lods
sub
sbb
cwtl
cmp
and
xchg
adc
lcall
push
cmpsb
xor
movl
cmpsb
mov
cmp
in
lods
lods
sub
mov
flds
inc
xlat
iret
popf
mov
cmc
add
int3
xchg
push
or
mov
scas
les
xchg
stos
xor
enter
rorb
inc
lret
ss
xor
cltd
sbb
cwtl
cmp
leave
pop
rol
and
xchg
sbbl
cwtl
cmp
xchg
inc
sbb
inc
adc
pop
mov
mov
test
stos
xor
jns
subl
sub
loopne
xor
xchg
xor
mov
mov
aaa
into
mov
pop
std
or
mov
dec
aas
adc
mov
mov
push
fdivrs
mov
pop
mov
js
inc
daa
cmpsl
sbb
rcr
fadds
cltd
popa
lock
sbb
es
or
xchg
push
pusha
dec
or
fmul
mov
pop
dec
push
pop
cld
jns
dec
pop
sbb
cwtl
inc
adc
cmp
outsl
insb
jnp
and
jle
int3
sbb
sbb
mov
mov
lret
xchg
scas
iret
xchg
aad
push
pop
or
mov
aas
jp
dec
jle
mov
outsb
cltd
aaa
outsl
fdivs
movsb
or
add
fnstsw
nop
jecxz
mov
scas
lds
cmp
int3
ret
aaa
and
stos
sbb
push
add
into
mov
shrb
test
loop
aad
adc
xchg
inc
sti
ss
push
lock
xchg
pop
in
and
or
fadds
push
pusha
adc
push
out
sbb
jae
fstps
mov
gs
faddl
aas
ljmp
fs
jg
ret
js
sbb
adc
rcrb
push
stc
in
adc
xchg
jns
mov
les
mov
xlat
les
or
mov
cmp
orb
adc
adc
inc
adc
inc
out
and
xor
mov
aad
jo
fidivrs
jo
inc
add
out
in
adc
sub
xor
je
fildl
imul
mov
jl
pop
pop
rcrl
and
adc
out
pop
mov
test
mov
rorb
pop
push
cmp
push
jle
clc
cs
jns,pn
adc
ljmp
orl
lock
in
mov
testb
in
cmpsb
lcall
sbb
sarl
xchg
pushf
push
dec
or
fidivrs
adc
or
loopne
les
lods
in
out
mov
mov
xor
xorb
xchg
jo
in
mov
mov
cmpsl
sahf
cmp
sbb
pushf
lods
daa
pop
test
mov
insb
or
call
cmc
mov
xor
or
dec
das
insb
call
mov
mov
add
cmpsl
pusha
in
adc
dec
jle
or
and
sub
xor
adc
popf
stos
xor
inc
int
gs
lcall
leave
mov
lea
or
xchg
xlat
jp
std
out
or
pop
cmp
and
and
mov
inc
fsubs
mov
test
mov
or
insl
mov
movsb
aas
rorb
lret
test
mov
or
daa
data16
test
scas
xor
rorl
rcl
es
mov
into
add
lods
xor
mov
test
insb
jp
push
inc
xchg
pop
jecxz
mov
lods
inc
or
scas
sub
gs
jl
cmpb
in
out
insl
pop
aad
xchg
addl
sbb
ret
xchg
cmp
and
add
test
xchg
mov
rolb
dec
dec
movsl
xor
test
mov
into
mov
and
pop
in
xchg
stc
jle
sub
sarl
cmp
inc
aas
js
jo
xor
mov
xchg
cmp
adcb
xor
lea
mov
pop
int3
cmp
push
mov
jmp
adc
xor
in
lret
imul
adc
scas
popf
loope
roll
cmc
data16
aaa
movsb
inc
stc
outsb
jmp
lahf
mov
insb
int3
sti
pop
xchg
ja
ret
jae
call
xchg
inc
scas
cwtl
push
add
mov
movsb
mov
mov
lods
sub
loopne
add
add
in
push
lea
push
aam
test
pop
aam
sub
mov
pop
xchg
mov
mov
fildl
enter
mov
enter
pop
sbb
mov
sahf
fcmovu
filds
mov
mov
mov
push
clc
out
mov
push
cmc
dec
adc
cmpl
hlt
inc
sarl
loop
xor
and
pop
cld
xlat
jns
mov
add
int3
nop
cwtl
push
inc
or
into
lods
xor
adcl
dec
pop
fdivr
add
ret
add
jl
sbb
mov
jbe
clc
push
xor
xor
adc
imul
mov
cmp
mov
inc
and
sub
nop
sub
or
xor
cmp
sub
mov
ljmp
xlat
jne
pop
adc
sti
push
fisttpl
push
jnp
in
push
dec
fstl
mov
loope
fnstsw
add
jecxz
or
inc
jge
inc
out
sub
lahf
add
or
outsb
cmc
push
pop
int3
xchg
movsl
dec
pop
add
sub
cmp
fildl
in
mov
pushf
inc
es
movsl
sub
xor
jns
mov
mov
jae
add
ljmp
movsb
mov
mulb
add
mov
mov
aam
or
shl
jo
std
inc
adc
push
mov
fists
jbe
inc
rorb
mov
xor
xchg
add
scas
pop
pop
mov
sbb
push
dec
or
inc
push
fs
and
fisubl
push
add
mov
jl
mov
add
dec
adc
shlb
cmp
and
lea
faddl
insl
popf
dec
comiss
push
leave
and
and
sar
clc
rclb
xchg
cmp
add
jno
sarl
out
outsb
faddl
push
add
jge
clc
leave
out
lock
adc
xlat
jecxz
xchg
inc
mov
mov
push
push
out
je
lods
clc
clc
daa
mov
loop
cmp
jnp
insb
enter
rcll
mov
sbb
fidivs
jp
xchg
or
mov
int3
or
aam
test
or
sarl
mov
in
and
and
test
hlt
dec
cmp
pop
fwait
test
mov
cmpsl
lock
and
cmc
pop
lret
add
push
sub
jmp
fcomp
or
sub
push
fwait
or
mov
push
dec
sarb
xorb
rol
mov
aad
inc
push
out
jle
sbb
sub
lds
xchg
lcall
in
insb
xchg
movsl
je
das
iret
leave
mov
ss
pop
loop,pn
incl
cmp
push
cmpsb
das
mov
stos
mov
fnstsw
insl
lock
mov
pop
dec
adc
mov
sbb
icebp
cwtl
aaa
cmpsl
in
fistpll
mov
mov
sbb
cmp
push
lcall
lds
sub
lret
mov
clc
ret
mov
mov
dec
mov
inc
test
and
out
and
cmp
mov
mov
test
xlat
push
rcr
add
bound
add
xchg
js
in
sub
pop
stc
sbb
das
lods
repnz
mov
lahf
jmp
jo
setl
jbe
push
dec
or
fwait
and
push
int3
cmp
std
mov
out
jmp
jb
loope
orl
ja
mov
xchg
mov
mov
into
sbbb
out
push
cmp
aad
jnp
in
pop
xor
mov
cwtl
inc
addl
mov
test
repnz
lahf
pop
popf
aas
stc
lret
jl
add
ret
push
lret
outsb
into
nop
fwait
std
out
jo
int
cmpsb
mov
mov
xor
stos
cmp
jno
mov
pop
cltd
adc
pushf
mov
orb
pop
sbb
push
inc
cwtl
cmp
nop
mov
and
pop
hlt
pusha
lea
push
add
inc
js
leave
mov
das
test
xchg
out
xchg
lret
leave
leave
std
pop
dec
pop
js
inc
dec
loopne
jg
adc
das
lea
mov
mov
test
iret
inc
or
hlt
out
mov
call
inc
or
roll
into
push
ss
test
xchg
mov
dec
push
mov
mov
cmp
or
movsb
int
lret
xchg
sbb
add
jbe
push
enter
xchg
cmp
icebp
and
or
pop
push
rclb
xchg
popa
hlt
in
push
insb
add
sbb
dec
sbb
xchg
or
cmc
je
add
call
xchg
inc
inc
mov
sub
repz
sbb
orl
dec
pop
jnp
rclb
adc
gs
and
movsb
push
mov
lcall
fadds
roll
fcmove
mov
inc
adc
pop
insb
repz
mov
sub
xchg
arpl
mov
pop
je
popa
mov
mov
outsb
xor
cmp
pop
in
and
addl
lret
dec
mov
fldl
push
in
lcall
fildl
jecxz
mov
dec
or
mov
jp
cld
or
test
add
int3
dec
pusha
rcll
enter
sub
call
testl
mov
mov
mov
testl
int3
je
hlt
cmp
cs
int
movsl
sub
xor
cmc
pop
imul
sti
int
dec
stos
jmp
cmp
xchg
mov
lds
fistpll
test
or
mov
pusha
sub
std
cmp
lods
sub
dec
dec
or
cmp
lock
stc
pop
je
mov
lea
stc
xchg
dec
push
loop
dec
or
pop
mov
clc
and
push
push
das
xor
cmc
mov
ljmp
mov
mov
arpl
push
popl
lock
jnp
push
test
pop
add
pop
fildl
xchg
mov
gs
popf
inc
ret
or
ja
adc
push
mov
cmp
or
sub
inc
adc
pop
add
inc
fs
loope
mov
popf
cli
push
in
in
imul
mov
in
ret
and
divb
dec
push
ljmp
cmp
stos
xor
sub
dec
xor
mov
lcall
cltd
xor
ror
cli
xchg
adc
ja
enter
pop
dec
or
test
mov
mov
mov
in
repnz
js
in
leave
or
pop
inc
or
je
or
sti
arpl
mov
out
sarb
sub
add
mov
inc
or
mov
dec
adc
filds
enter
incb
scas
xor
cwtl
popf
inc
sahf
pop
inc
or
leave
inc
or
inc
jmp
mov
mov
sarl
mov
faddl
or
jg
sarl
imul
sbb
mov
sbb
pop
jmp
or
dec
inc
or
pop
adc
adc
and
rolb
insl
scas
inc
adc
jbe
iret
push
inc
out
cmpsl
and
sub
jmp
lcall
movsl
mov
adc
adc
rcrl
jl
pop
movsl
mov
aas
in
cmc
into
xchg
xchg
in
xor
sub
xchg
jmp
inc
or
inc
or
scas
mov
and
push
push
call
lahf
cmp
cmp
adc
lods
and
test
and
imul
pop
mov
in
pop
int
out
sub
out
pop
cmp
pushf
xor
ja
inc
xor
mov
jp
movsl
scas
xor
int
fidivrs
lods
sub
xor
sti
pop
cmpsb
sub
test
cwtl
nop
inc
incb
sub
cmpsb
xchg
sub
test
add
dec
scas
inc
jnp
filds
xchg
push
faddl
inc
mov
push
fcoms
jmp
sahf
pop
outsl
repz
into
mov
xchg
push
ret
aas
sahf
push
push
lods
sub
dec
fwait
cmp
sub
adcb
xchg
inc
inc
dec
in
push
lcall
dec
or
mov
outsl
or
sbb
cs
push
and
jmp
filds
aaa
sbb
xor
and
mov
and
and
cwtl
cmp
loope
nop
pop
divb
lret
xor
pop
mov
cmp
adc
and
enter
add
pop
decb
add
or
sbbb
push
mov
fdivl
add
je
mov
imul
popf
rolb
loopne
fildl
sti
xor
mov
scas
mov
push
sub
jo
loop
in
imul
int3
mov
mov
jl
mov
movsl
aam
and
cmp
insb
or
mov
cs
sti
adc
cmpsb
cmp
push
sub
sub
test
bnd
xchg
cmp
fs
sbb
push
mov
inc
sbb
sub
cmpsl
sub
out
xchg
cli
daa
test
and
dec
push
getsec
adcl
add
mov
std
js
shlb
cld
rcrb
xor
dec
add
into
adc
sub
out
sub
and
adc
pop
ret
push
sar
mov
push
cld
or
pop
dec
adc
loop
dec
xor
test
mov
lahf
ds
in
insb
int
dec
pop
xor
aaa
movsb
pusha
pop
insb
in
cmp
xchg
clc
and
pop
jecxz
jne
xor
hlt
aad
test
xchg
xor
inc
xchg
sbb
xor
ss
cmpsl
jle
lcall
adc
in
adc
lret
xchg
dec
adc
add
ficomps
lret
mov
das
sub
push
inc
stc
pop
orl
adc
jbe
pop
std
cli
insl
hlt
gs
lods
sub
jae
stos
sub
push
sti
ljmp
inc
out
push
cmp
test
adc
test
push
stos
mov
lret
adc
xchg
sbb
adc
lret
jo
shl
repz
ds
mov
stc
and
inc
mov
mov
out
and
testb
shrb
nop
inc
lods
xor
xor
or
add
int
mov
pop
and
sarb
sbb
sbb
push
push
in
mov
je
out
add
or
push
movsl
cs
dec
and
mov
rcrl
cmp
xchg
xchg
mov
add
push
in
inc
xor
jg
xchg
mov
dec
mov
lods
fcoml
into
popl
aam
jmp
aam
jg
int
xor
cltd
push
xchg
cmp
iret
mov
loopne
out
jo
clc
cld
bound
mov
pop
add
xchg
mov
cwtl
xor
rep
rcrl
jge
movsb
xor
repnz
insl
sub
mov
lret
xchg
or
test
adc
mov
les
add
push
jb
push
push
or
adc
movsb
vsubsd
mov
aam
fldl
ja
or
xor
jne
fsubrs
jl
mov
mov
jbe
mov
test
lods
inc
adc
iret
inc
adc
sub
call
lret
enter
push
xor
inc
push
dec
jecxz
addr16
add
sub
mov
shrl
out
cwtl
pop
shll
cmp
out
insl
xchg
or
addr16
iret
cmp
push
xchg
add
icebp
fwait
sub
mulb
movsl
das
enter
sub
mov
test
or
xor
cmp
loop
jo
push
sti
xor
iret
xchg
fbld
fistpll
or
sbbb
and
xor
es
data16
fsin
je
pop
or
xlat
addl
adc
mov
fsubr
jne
outsb
ret
mov
ret
repnz
fiaddl
pop
repz
popa
int
repz
sarb
cltd
xlat
xor
xor
jecxz
jnp
inc
or
insl
inc
or
inc
pop
add
jno
jno
and
mov
xor
sarb
add
lret
pop
test
mov
xchg
cmp
pushf
inc
adc
inc
loope
inc
outsl
int
cmp
jo
mov
scas
mov
out
push
add
pop
xchg
enter
sahf
inc
cmp
je
subl
push
push
out
popf
xor
test
xchg
mov
fiaddl
add
js
fwait
push
inc
or
leave
or
mov
orl
std
popa
fisttpl
mov
jle
fidivl
gs
pop
les
jnp
sbb
nop
cmp
stos
sub
mov
jp
sbb
jge
dec
cmp
cli
and
mov
ficompl
mov
push
call
int
mov
mov
test
cmpsl
sub
push
and
sbb
es
dec
out
outsl
lret
out
jno
sbb
pop
mov
js
inc
adc
test
jns
rorl
in
sbb
jbe
enter
mov
and
int
out
cmp
and
dec
jno
adc
push
sar
leave
mov
sub
dec
sbb
or
or
lcall
rolb
dec
cld
pop
js
sub
xor
mov
leave
inc
bound
pusha
mov
lret
lea
sub
bound
dec
loopne
lock
int
push
push
ljmp
cmp
pop
aam
push
stc
scas
or
data16
sbb
imul
and
jg
xor
call
fsts
lds
dec
push
cmc
pop
sub
jo
add
cmp
das
mov
adc
push
jne
jo
xor
mov
sbb
les
sti
lret
nop
loop
ret
jg
jecxz
xchg
adc
push
popf
shll
and
and
inc
inc
fnstenv
pop
icebp
or
js
pop
jmp
adc
mov
pushf
xor
mov
add
shrb
in
outsl
pop
jp
xchg
push
movsl
decb
sub
leave
push
jb
loop
das
push
out
les
testb
pop
dec
aam
and
imul
pop
mov
enter
jecxz
inc
int
jge
add
push
mov
mov
jb
mov
cmp
inc
fdiv
pop
pop
repz
pusha
testl
jle
lcall
xor
push
mov
test
mov
imul
fnstenv
clc
repnz
mov
mov
dec
adc
cmp
xor
mov
dec
jecxz
scas
push
jmp
jae
jno
xor
es
cmpsb
cmp
fnstcw
les
cli
lret
bound
loop
rorb
jg
add
shlb
push
mov
repz
shll
fcomps
or
js
pop
ljmp
mov
popf
xor
shll
ret
and
imul
lock
lret
push
movsl
cld
mov
les
xor
or
cs
call
hlt
subb
adc
lea
es
inc
pop
mov
leave
pusha
stos
pavgw
int3
out
bound
cwtl
xchg
pop
push
popf
push
mov
mov
jno
mov
aaa
ret
inc
fxtract
pop
pop
xrelease
jp
fsubl
push
cltd
std
cwtl
das
das
mov
mov
orb
push
inc
mov
fidivl
div
mov
mov
out
adc
cmp
xor
jecxz
lods
push
ljmp
jno
xor
es
cmpsb
cmp
fdivrs
les
stc
lret
bound
loop
mov
loopne
xchg
adc
push
mov
repnz
shll
xlat
pop
icebp
or
js
pop
jmp
xchg
sub
outsb
shlb
ret
imul
lock
lret
sti
mov
les
xor
or
dec
loop
sub
imul
mov
mov
inc
rorb
cmp
push
mov
leave
pusha
stos
push
jecxz
inc
lret
out
std
popa
add
dec
mov
mov
jo
mov
ss
repz
pop
xrelease
clc
inc
test
jg
cwtl
cld
cwtl
das
cs
mov
orl
fidivl
cmc
repnz
mov
out
adc
cmp
xor
jecxz
lods
push
ljmp
jno
xor
es
cmp
xlat
cmp
pop
push
lret
bound
mov
jns
dec
jmp
xchg
adc
push
mov
icebp
and
shll
pop
icebp
pop
xchg
popa
clc
sub
pop
call
xchg
sub
insl
iret
mov
add
shrb
loop
jo
jbe
xchg
leave
push
movsl
cli
mov
les
lret
dec
loop
sub
call
bnd
push
mov
mov
inc
rorl
cmp
push
mov
leave
pusha
test
lret
cld
pusha
add
dec
mov
mov
outsl
and
mov
roll
push
pop
xrelease
popa
clc
inc
test
adc
gs
xchg
sti
cwtl
das
sub
dec
mov
orb
mov
fidivl
hlt
repnz
mov
in
adc
aaa
cltd
vaddss
jecxz
stos
push
ljmp
jno
das
xchg
mov
ret
push
es
cmp
aaa
les
test
jns
dec
jmp
xchg
setle
sahf
iret
xor
mov
lock
shll
pop
icebp
push
xchg
popa
clc
daa
js
pop
out
push
sbb
sub
insb
into
mov
add
shrb
loope
jo
jne
xchg
enter
xchg
les
xor
or
loop
sub
pop
mov
outsl
push
scas
adc
and
data16
cmp
push
mov
leave
pusha
test
jecxz
ds
out
sti
pop
add
dec
mov
mov
outsb
and
lahf
add
aad
rolb
push
pop
xrelease
popa
clc
inc
cmpsl
jp
fldenv
xchg
cli
cwtl
das
sub
popf
xor
dec
mov
jg
mov
imul
fidivl
repz
inc
adc
ss
vxorpd
jecxz
stos
push
ljmp
jno
cs
mov
ret
es
lods
inc
aad
les
test
sub
jmp
xchg
push
popf
pop
sahf
into
das
push
mov
out
and
shll
aam
icebp
add
es
pop
out
push
sbb
sub
imul
dec
decl
push
jo
je
mov
clc
test
lds
xor
or
popf
sub
pop
mov
outsl
push
lods
adc
and
cmpsl
ds
and
pop
ljmp
jnp
out
stc
pop
add
dec
mov
mov
insb
and
popf
add
xor
pop
hlt
test
popa
clc
inc
cmpsb
jnp
fsubs
push
xchg
stc
cltd
xor
mov
xor
dec
mov
jle
mov
insb
rcrl
mov
repz
clc
loop
adc
xor
das
enter
xchg
dec
in
test
ljmp
jno
sub
mov
rorl
jg
cmpsl
ds
lods
inc
shll
lret
bound
mov
jp
inc
jmp
cwtl
or
cs
mov
in
and
aam
aas
inc
fidivl
pop
repnz
popa
clc
ret
and
jg
push
jns
cs
aaa
popf
xor
int3
mov
decb
aam
push
fstp
jo
jae
mov
adc
mov
das
dec
aad
lret
dec
in
daa
push
call
out
jns
push
stos
adc
and
arpl
inc
push
mov
pop
call
or
jl
negl
lea
pop
sahf
dec
scas
and
fwait
add
xor
cmc
orl
stc
aas
movsb
jl
pusha
adcb
negl
xor
jl
mov
insl
iret
pop
lock
mov
scas
stc
nop
loopne
adc
xor
ss
out
in
cmpsb
push
jmp
cmp
clc
jb
sub
nop
daa
jge
test
adc
pop
gs
arpl
in
mov
fiaddl
cltd
or
and
sbb
ds
cmp
pop
repz
jp
push
loop
pop
adc
cwtl
das
test
lret
cld
mov
dec
fcmovnu
jno
jno
mov
les
test
adcl
movl
dec
in
and
insb
add
ja
pop
test
lret
cld
popa
test
inc
dec
mov
pop
out
lret
bound
ret
jmp
fwait
mov
or
mov
das
mov
pop
cmc
orl
sbbl
daa
mov
ss
mov
push
cmp
fdivl
out
hlt
mov
lods
cli
xchg
filds
test
xor
aaa
into
and
in
movsl
push
in
aaa
insb
add
jae
sub
xchg
sub
aas
adc
pop
arpl
int
and
jmp
jbe
add
leave
sub
mov
ljmp
scas
cmp
fsubrl
pop
repz
jp
push
loope
sbb
jne
das
cmpsl
xor
ss
xchg
insb
dec
fcmovu
jb
outsl
repz
ret
repz
mov
xor
inc
shlb
in
and
ljmp
jno
test
mov
ds
es
pop
test
inc
dec
mov
pop
in
int3
arpl
ret
hlt
pop
add
mov
and
cwtl
cld
inc
xlat
sub
dec
pop
cmc
jg
fs
cmp
pop
sbbb
repz
inc
mov
push
aaa
cltd
insl
lret
pop
fnsave
hlt
mov
lods
sti
xchg
fidivrs
adc
xor
aaa
into
and
in
movsb
push
in
aad
insb
add
jae
sub
xchg
sub
test
setge
pop
lock
and
xorb
cltd
or
and
sbb
lods
cmp
insb
into
pop
repz
jnp
push
filds
xor
mov
stc
test
insl
dec
fcomp
jb
outsb
hlt
mov
rcll
bnd
scas
scas
adc
enter
int3
add
out
and
push
mov
jno
cmpsb
or
stc
pop
stos
inc
nop
sbb
pop
jecxz
int3
arpl
shr
repnz
add
mov
fisubl
mov
sub
inc
fsubr
dec
pop
idivb
fs
cmp
sbbb
repnz
xor
mov
push
ja
mov
outsb
lret
je
jmp
mov
adc
cs
xor
ret
into
and
out
mov
insl
add
hlt
jae
mov
sub
test
inc
int
pop
popa
out
int
and
jmp
jae
add
sub
mov
sbb
lods
cmp
push
pop
hlt
decb
jl
push
fldl
xor
mov
push
mov
xlat
outsb
dec
insl
cmc
mov
rclb
icebp
jl
scas
lods
adc
leave
inc
into
xor
out
and
mov
add
movsb
or
daa
negl
mov
scas
inc
dec
scas
leave
pusha
loope
int
popf
add
jg
mov
push
popf
xchg
or
fsubs
mov
sub
pusha
idivl
cld
cmp
sbbl
lock
xor
scas
mov
push
jne
rclb
fsubrs
push
fidivs
jmp
cld
xchg
fidivrl
stos
insl
sti
sbb
rorb
jle
push
out
mov
outsb
add
and
mov
mov
fisubrl
inc
lret
sub
into
gs
and
xorl
fwait
add
and
push
jns
xlat
stos
aaa
inc
pop
cmc
cld
mov
sbb
sbbb
jno
xor
les
push
mov
fsubrs
aam
jae
imul
popf
daa
cli
xchg
pop
mov
sbb
inc
int3
ss
bound
xchg
push
push
in
dec
mov
push
out
jae
mov
ret
xchg
sub
pop
lods
inc
mov
mov
dec
lods
lret
imul
xorb
in
sub
pop
sahf
test
or
popa
sub
xchg
testl
in
popa
clc
jp
data16
aaa
fwait
jg
int
test
mov
popf
xor
lods
mov
push
jae
rclb
fnstenv
push
fidivs
call
cld
xchg
fdivrs
adc
mov
mov
lret
cmp
jl
push
call
iret
xor
fs
and
xchg
sub
stos
inc
or
leave
pusha
pop
ljmp
mov
in
subl
pushf
add
or
push
jecxz
mov
test
lret
sti
xchg
sbb
adc
or
xor
ret
mov
push
mov
fnstenv
rcr
jae
push
mov
adc
scas
test
lret
sti
popa
push
jmp
dec
mov
pop
in
jae
mov
rcll
mov
inc
inc
lods
lret
fisubs
gs
jmp
sub
pop
sahf
orl
mov
aad
sub
xchg
testb
mov
fsubp
dec
popa
clc
jns
data16
ss
mov
popf
xor
stos
mov
push
jb
rclb
fnstenv
push
fidivs
out
mov
movsl
cld
xchg
xlat
cmp
mov
lea
lret
cmp
jnp
push
call
into
xor
arpl
je
and
xchg
sub
inc
or
leave
pusha
pop
jmp
out
mov
in
subl
pushf
add
and
adc
fsubrs
leave
pop
idiv
xchg
sbb
dec
fadds
xor
ret
hlt
jle
push
mov
fnstenv
rcr
jae
imul
xchg
push
mov
sbb
aas
leave
ss
pusha
push
jmp
dec
mov
pop
in
jae
lahf
add
xchg
sub
pop
lods
inc
mov
mov
inc
stos
lret
frstor
gs
jmp
sub
pop
sahf
orb
mov
nop
cmc
inc
fisubl
mov
fsubp
inc
popa
clc
js
data16
xor
push
test
mov
popf
xor
stos
mov
push
jno
rclb
fnstenv
push
fidivs
out
mov
movsb
cld
xchg
cmp
mov
mov
lret
cmp
jp
push
call
int
outsl
push
out
je
and
sub
stos
inc
or
leave
pusha
pop
call
out
mov
in
subl
pushf
add
and
adc
fsubs
enter
test
sbb
dec
xlat
sbbb
outsb
pushf
xor
sarl
scas
adc
jo
rcr
jae
push
cli
xchg
push
mov
sbb
ds
pop
push
jmp
dec
mov
pop
jecxz
jae
sahf
add
es
lods
inc
mov
mov
inc
stos
lret
fsubl
gs
std
jmp
sub
pop
sahf
orl
mov
hlt
inc
fisubl
inc
popa
clc
ja
data16
xor
jg
lret
sbb
test
mov
push
cs
fnstenv
dec
fidivs
in
mov
mov
adc
mov
mov
lret
cmp
jns
push
call
int3
das
outsl
push
popa
in
je
pop
orl
jb
stos
inc
or
pusha
pop
out
sbb
jle
cmp
subl
add
and
adc
fsubs
pop
idiv
test
sbb
dec
sbbb
insl
pushf
xor
sarb
scas
adc
jo
iret
fdivl
testl
adc
scas
cmpsb
or
lret
cmp
pop
push
jmp
dec
mov
pop
loop
jae
popf
add
sub
push
lods
inc
mov
mov
inc
test
into
gs
cld
jmp
sub
pop
sahf
orb
mov
rcrb
rorb
inc
fsubp
inc
popa
clc
jbe
data16
xor
test
xchg
popf
xor
test
cmp
cmp
rclb
fnstenv
dec
fidivs
in
mov
mov
adc
mov
mov
lret
cmp
js
push
call
lret
outsl
push
pusha
in
je
push
orb
jno
stos
inc
pop
xchg
mov
lds
leave
pusha
pop
out
sbb
scas
cmp
subl
pushf
add
and
adc
movsl
xor
pop
div
andl
jle
dec
aad
sbb
insb
pushf
xor
mov
mov
jo
into
fdivl
testw
adc
scas
movsl
or
cmp
ss
pop
push
jmp
dec
scas
jo
loope
jae
pushf
add
sub
push
lods
inc
xchg
mov
inc
test
fisubl
gs
sti
jmp
sub
pop
sahf
jg
or
rcrl
repnz
fisubl
scas
inc
fsubp
inc
popa
clc
jne
data16
xor
test
test
popf
xor
cmpsl
mov
push
outsb
cli
rclb
fnstenv
dec
fidivs
jecxz
mov
ss
mov
mov
lret
cmp
ja
push
call
lret
push
pop
jmp
or
ds
sub
stos
inc
push
xchg
mov
les
leave
pusha
pop
in
gs
jnp
jle
cmp
subl
pushf
decl
and
push
mov
movsb
das
inc
frstor
pusha
div
andl
roll
xor
mov
push
lock
push
stos
adc
jno
int3
fdivl
fs
xchg
pop
sti
xchg
push
mov
lods
call
or
into
cmc
pop
push
ljmp
jno
fildll
or
mov
scas
inc
test
mov
inc
cmpsb
int3
arpl
popa
iret
xchg
stc
ljmp
dec
or
cmp
sub
mov
inc
lods
dec
inc
stc
jae
data16
xor
test
sub
xor
xlat
cmp
sub
fidivs
loop
adc
cld
xchg
shll
sbb
mov
ficoml
or
jo
pop
jmp
mov
outsb
shrl
ret
popa
pop
jecxz
gs
ss
subl
popf
decb
and
mov
mov
les
cmc
jg
sti
mov
adcb
roll
xor
push
mov
mov
jb
lret
cld
arpl
nop
xchg
sbb
pop
scas
out
sbb
cmp
aaa
into
repz
push
jmp
adc
in
inc
lods
jb
fisubs
or
mov
scas
inc
test
int3
arpl
pusha
iret
xchg
clc
ljmp
dec
or
cmp
sub
mov
inc
lods
dec
inc
stc
jb
data16
das
xchg
adcb
push
test
and
xor
cmp
sub
fidivs
loope
adc
push
lods
gs
sbb
mov
fsts
or
jo
pop
call
mov
insl
shrb
shll
gs
call
andl
popf
std
mov
mov
dec
fisubrl
mov
mov
push
les
stc
xor
jl
or
sub
mov
adc
out
and
inc
jo
inc
dec
imul
push
and
call
pop
jmp
jnp
out
icebp
pop
and
add
adcl
fidivl
and
mov
popa
pop
ret
fsubl
push
xchg
divb
xchg
aam
jbe
push
lods
jecxz
mov
pop
lcall
aad
icebp
test
xchg
sub
hlt
or
push
fmull
stos
and
mov
fcmovnbe
sbb
dec
inc
xchg
testb
jle
or
stos
adc
pop
mov
xor
jne
jp
repz
jg
icebp
clc
shrl
push
outsl
mov
push
ds
sub
add
in
ja
adc
mov
mov
mov
xor
dec
loope
inc
cmc
shl
or
gs
push
rcl
out
icebp
xor
dec
mov
mov
fdivl
out
fistl
leave
sbb
push
xchg
or
inc
pop
andl
loopne
push
and
pusha
out
xor
xchg
cmp
sti
add
std
dec
adc
data16
xchg
mov
jb
sbb
xchg
xchg
cwtl
in
ror
adc
in
jge
insl
sub
sub
mov
rorl
cs
mov
lock
jmp
aad
jne
mov
aam
pop
jb
in
sub
pop
call
lock
cwtl
arpl
add
xor
and
jbe
sahf
mov
das
imul
sti
mov
jge
xchg
sub
fiadds
mov
cmpsb
pop
jp
into
es
jg
push
mov
fs
pusha
and
or
adc
fcompl
aaa
dec
lcall
inc
out
icebp
pop
sahf
shlb
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
js
xor
jle
mov
es
out
jno
mov
mov
mov
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
inc
enter
idivl
xchg
pop
fistl
cwtl
inc
loopne
push
les
lea
fsubrs
adc
sub
outsl
and
mov
and
mov
dec
mov
jmp
mov
orb
mov
dec
pop
mov
jnp
fxch
xlat
mov
jno
mov
jno
cmpsb
insl
jp
push
add
cmpsb
out
inc
jne
popa
aad
xchg
mov
inc
add
jmp
lret
mov
xchg
cmp
or
dec
scas
andl
add
push
jecxz
nop
push
inc
add
or
dec
xchg
sub
out
or
rclb
fstps
or
add
divl
jle
xchg
jb
loope
mov
and
es
nop
cltd
stos
adc
testl
xchg
addr16
push
repz
mov
sub
mov
cld
jbe
pop
cmp
fsubrl
push
push
xor
inc
xor
je
clc
or
lcall
es
pop
popf
fdivrs
popf
into
ret
sarb
out
mov
fnstenv
cmc
mov
pop
pop
lret
mov
push
sub
cmp
cvtpi2ps
mov
and
dec
pop
sub
imul
rcll
pop
ja
mov
mov
cs
jge
jle
icebp
pop
gs
add
movsb
adc
pop
sbb
loope
or
lret
cmp
std
push
ror
mov
lds
xor
ljmp
mov
jecxz
pop
dec
stos
fstl
cmp
sti
xor
push
negb
mov
sub
hlt
inc
pop
or
loop
lahf
xor
jmp
or
adc
addr16
pop
or
mov
divb
adc
dec
popf
jg
sbb
sbb
jnp
rolb
push
cmc
jo
mov
xchg
ret
sbb
