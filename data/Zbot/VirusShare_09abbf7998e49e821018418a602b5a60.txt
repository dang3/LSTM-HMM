call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
pop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
xor
mov
mov
pusha
call
add
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
jmp
ret
std
xor
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
incl
adc
add
in
add
in
add
xchg
and
add
add
add
mov
and
add
and
add
add
and
add
and
add
add
add
add
repnz
add
and
add
and
add
add
push
and
add
add
add
add
xchg
and
add
add
movsb
and
add
add
and
add
and
add
and
add
and
add
add
and
add
add
add
and
add
add
or
add
add
add
add
outsb
and
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
andb
movsb
and
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
add
and
add
and
add
add
add
add
repnz
add
and
add
and
add
add
push
and
add
add
add
add
xchg
and
add
add
movsb
and
add
add
and
add
and
add
and
add
and
add
add
and
add
add
add
and
add
add
or
add
add
add
add
outsb
and
add
add
add
popa
je
inc
jbe
outsb
je
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
je
dec
popa
outsb
fs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
jb
arpl
jae
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
imul
jb
je
arpl
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
dec
outsl
arpl
dec
outsl
arpl
dec
add
insb
outsb
inc
add
roll
dec
gs
jo
jb
add
jge
dec
jo
outsb
dec
jne
gs
add
aad
inc
gs
gs
inc
imul
outsl
popa
fs
imul
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
jne
jb
outsb
je
push
add
rolb
dec
gs
jo
gs
jb
jns
push
push
je
imul
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
push
bound
je
add
insb
imul
outsl
outsb
add
gs
popa
insb
insb
outsl
arpl
and
inc
js
jb
arpl
outsl
outsb
inc
add
push
add
addr16
arpl
jo
inc
imul
dec
inc
gs
gs
imul
inc
insb
insb
push
outsb
jb
imul
jb
gs
mov
push
push
gs
popa
addr16
outsl
js
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
pop
add
addr16
imul
ret
add
inc
jb
add
mov
inc
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
inc
gs
jbe
imul
imul
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
and
push
fsubs
or
aas
jno
data16
imul
pop
cmpsb
adc
movsl
ret
push
hlt
adc
aaa
push
sbbb
aad
sahf
ja
rorl
jl
pop
test
pop
bound
shl
aas
mov
cs
lock
fs
cmp
xor
mov
cmp
adc
mov
pop
mov
pushf
dec
shr
scas
test
mov
or
inc
inc
push
ret
pop
incb
pop
inc
add
ljmp
lahf
inc
sbb
ret
into
sarl
out
dec
test
xor
nop
add
sub
mov
xchg
iret
jp
xor
cmpsb
pop
or
or
dec
or
aas
cltd
sub
sub
test
dec
jmp
popf
pop
movsb
rclb
cli
in
out
push
pop
add
test
mov
mov
adc
sub
cmp
ds
xchg
inc
and
and
mov
mov
leave
inc
mov
lods
jp
and
into
mov
cmpsl
dec
nop
jne
mov
sahf
popf
sub
xchg
and
insl
jle
mov
dec
adc
push
push
enter
and
addb
aam
inc
cmp
push
pop
incb
adc
xlat
push
sbb
push
pop
aaa
dec
xchg
pop
or
jnp
int
cmp
sub
lret
push
imul
push
sub
int3
mov
sbb
jle
adc
jae
mov
fiadds
ljmp
iret
mov
cmc
in
xchg
add
sub
inc
and
hlt
test
jae
cmc
mov
cmp
add
sarb
push
sbb
insl
and
insb
xlat
mov
fdivl
out
decl
hlt
neg
xchg
scas
push
es
es
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
addl
add
cmpsb
add
test
add
mov
or
add
roll
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jle
add
add
xchg
add
mov
inc
mov
lret
lret
int
rcl
in
rcl
shl
rcl
iret
hlt
into
int
hlt
leave
enter
leave
enter
mov
mov
lods
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
out
lret
rcl
sar
fcom
xlat
std
fdivr
fcom
aad
rcl
sar
int3
int
aad
rcl
sar
mov
mov
lods
iret
movsl
mov
xchg
xor
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
leave
call
rcl
aad
fcomp
xlat
fcomp
xlat
call
aam
dec
into
int3
dec
int3
int3
call
aam
dec
into
into
inc
sarb
mov
scas
scas
std
cmpsb
cmpsb
test
xchg
xchg
xchg
mov
pop
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
enter
int
rcl
sar
fdivr
fcom
call
aad
int
int
leave
lret
int3
into
int3
inc
mov
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
bound
pop
fs
ds
sbb
or
sbb
aaa
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
dec
leave
call
iret
iret
call
call
aam
call
iret
sar
enter
inc
ret
ret
mov
mov
lods
scas
scas
jmp
sahf
cwtl
cwtl
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jle
jg
jle
jb
jb
bound
mov
cmp
cmp
inc
inc
inc
mov
jo
outsb
nop
popa
popa
popa
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
lret
leave
dec
leave
inc
mov
mov
scas
scas
lods
jmp
cltd
call
xchg
xchg
cwtl
cwtl
cwtl
cltd
fwait
cltd
in
addb
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jnp
nop
mov
incb
jp
idivb
jmp
outsb
jo
push
data16
jae
jle
jge
jp
js
gs
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
nop
incl
addb
xchg
xchg
lahf
mov
mov
mov
jns
jp
das
das
xor
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
mov
addl
std
mov
jge
jb
jno
jne
je
jge
jg
addb
push
cmp
ss
jg
cmp
movsl
movsl
movsl
shrb
lods
lods
sti
lods
lods
stos
stos
lods
stos
test
stos
std
movsl
mov
cltd
xchg
xchg
xchg
decl
jge
js
jns
jnp
jp
mov
cwtl
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
mov
femms
aaa
or
inc
inc
dec
insl
insb
insb
jl
test
leave
cltd
fwait
cltd
fistps
fwait
cltd
stc
xchg
xchg
xchg
std
mov
mov
mov
mov
mov
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
test
call
cltd
xchg
cltd
incl
xchg
decb
xchg
xchg
sahf
popf
sahf
std
movsl
mov
mov
in
xchg
in
xchg
push
jne
push
cmovp
add
inc
or
inc
daa
sub
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
std
mov
call
mov
test
stos
test
pushl
cmpsl
scas
mov
xchg
stos
std
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
xchg
lcall
mov
decl
nop
xchg
xchg
xchg
sahf
pushf
pushf
mov
test
mov
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pushaw
popa
bound
jb
mov
lahf
orl
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jle
mov
ja
mov
movsl
mov
mov
stos
lods
mov
mov
add
mov
pop
pop
adc
mov
jmp
lea
call
xchg
xchg
call
xchg
xchg
lcall
lahf
lahf
lahf
mov
movsb
movsl
stc
xchg
lcall
mov
xchg
aad
cltd
cltd
in
xchg
cwtl
out
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
jnp
mov
jns
mov
jae
mov
outsb
ljmp
adc
lods
or
lods
or
mov
jg
mov
mov
stos
pushf
movsb
mov
movsl
add
mov
add
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
popf
sahf
lcall
pushf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
lcall
lcall
popf
xchg
xchg
insb
xchg
xchg
pop
jle
xchg
dec
js
lcall
pushf
and
sahf
sbb
adc
jmp
adc
stos
adc
stos
packuswb
scas
adc
mov
imul
mov
imul
ds
mov
scas
lods
scas
mov
movsl
movsb
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
sahf
jmp
movsb
jmp
xchg
xchg
decl
mov
decl
jbe
lcall
xchg
push
jp
xchg
cmp
insb
decl
pop
call
add
push
lcall
pop
pop
ljmp
sbb
pushl
pop
outsl
pushl
pop
je
mov
and
mov
inc
test
ret
xchg
lods
mov
scas
scas
mov
sahf
mov
movsl
add
pop
pop
adc
lods
mov
mov
cltd
popf
lcall
mov
jmp
test
cmpsl
lcall
jg
decl
inc
jno
mov
imul
sub
mov
decl
or
push
incl
add
lea
push
call
add
fwait
add
sahf
add
cmpsb
or
pushl
es
mov
sub
mov
sub
inc
sub
jg
enter
enter
leave
lea
cld
scas
mov
lret
mov
add
add
add
add
add
push
push
adc
test
mov
mov
mov
test
stos
stos
lods
ljmp
mov
scas
scas
lods
jmp
mov
mov
popa
incl
or
xchg
push
incl
push
incl
add
mov
push
decl
push
call
add
sahf
add
add
scas
adc
mov
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
cmpsb
ljmp
sahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
mov
mov
arpl
mov
push
decl
pop
decl
pop
push
incl
add
lea
push
call
add
pushf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
rorl
call
dec
xchg
call
dec
xchg
fisttpl
fisttpl
ficoml
call
test
mov
mov
movsl
movsl
movsl
arpl
mov
add
add
add
fwait
xchg
cwtl
add
dec
adc
jl
popf
mov
jmp
stos
stos
pushl
mov
mov
mov
mov
mov
mov
scas
mov
mov
cmp
lea
pop
call
sbb
mov
pop
decl
push
decl
add
sahf
add
mov
add
stos
add
mov
fs
es
into
dec
nop
call
push
cwtl
fcoms
ficoml
fcompl
fistps
fists
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
lahf
or
cwtl
xchg
cwtl
add
adc
js
sahf
fwait
sahf
jmp
sahf
cltd
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
call
and
xchg
sbb
or
call
add
fwait
add
mov
add
stos
add
mov
gs
mov
xor
fistpl
fisubs
fbld
in
cmpsl
jmp
cmpsl
jmp
cmpsl
ljmp
jmp
test
mov
cmpsb
cmpsb
mov
lahf
sahf
add
inc
aas
adc
jb
cltd
xchg
lcall
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
das
jo
lcall
call
or
xchg
add
cltd
add
mov
add
lods
add
mov
pushl
adc
roll
fsubrl
jmp
outsl
lods
jmp
jo
call
je
in
jne
in
je
in
jne
out
jne
out
je
jmp
mov
mov
test
lcall
lahf
add
jg
cmp
cmp
js
mov
sahf
lcall
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
mov
cmp
lahf
xor
cltd
push
callw
add
lahf
add
mov
add
mov
popa
pushl
add
sbb
fistl
in
mov
jmp
jge
in
jg
in
cmpb
lock
push
cmpl
ljmp
mov
test
cmpsl
pushf
popf
popf
daa
sahf
lahf
sahf
add
add
add
add
aaa
cmp
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
ret
mov
mov
sahf
insl
mov
fwait
cmp
movsb
inc
jge
mov
aaa
jbe
cltd
sbb
add
pushf
add
mov
add
scas
add
add
mov
add
call
es
call
mov
icebp
mov
push
nop
ret
push
nop
xchg
xchg
ret
pop
fidivl
ret
clc
lods
lods
stos
mov
sahf
popf
xor
sahf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
mov
jl
lcall
jg
lods
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
out
xchg
ret
push
lcall
repz
push
fwait
enter
enter
int3
sti
lahf
int3
cld
lahf
int
cli
lcall
loopne
lret
dec
enter
mov
sahf
sahf
sahf
aas
xchg
add
add
add
aaa
aaa
add
das
or
cmp
outsb
push
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
sar
ret
inc
leave
enter
sar
mov
ljmp
xchg
mov
push
pop
lcall
add
lods
add
mov
mov
add
leave
add
or
fiadds
out
mov
push
movsl
int3
push
movsb
int
stc
test
cld
cmpsl
sar
cli
cmpsb
sar
cld
cmpsl
sar
std
stos
iret
std
stos
sar
test
push
sahf
mov
int
mov
mov
mov
xchg
xchg
add
cltd
lcall
xor
add
sub
or
inc
bound
pop
xlat
je
jno
mov
rol
rol
mov
ret
inc
leave
leave
inc
rol
mov
test
movsl
push
test
scas
push
mov
lods
dec
test
sahf
sbb
pop
jmp
pushl
add
ret
add
int
insl
call
add
loopne
jl
in
pop
cmpsl
push
lahf
leave
cld
lods
sar
sti
scas
aam
cld
mov
cld
scas
sar
mov
cld
mov
std
mov
cld
mov
pushl
sar
cmc
cmpsb
mov
call
leave
lret
mov
mov
lahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
add
dec
dec
ss
outsb
mov
mov
xlat
jmp
test
int
dec
lret
lret
dec
lret
lret
enter
mov
mov
scas
push
mov
lods
cmp
popa
jmp
add
mov
arpl
mov
add
roll
jo
xlat
add
filds
jae
call
jae
cli
lods
aad
cld
mov
std
mov
fcos
mov
xlat
mov
fcos
inc
std
mov
lret
jmp
mov
call
lret
into
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
enter
in
pop
out
jmp
test
in
leave
fsub
fcmovnu
fdiv
xlat
fcmovbe
cli
std
int
sar
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
add
fldl
jne
in
jbe
in
das
xchg
stc
mov
cli
mov
std
inc
loope
inc
fdivrp
inc
dec
inc
std
enter
dec
loope
cld
mov
lret
lret
mov
mov
xchg
adc
add
add
std
std
add
std
std
add
std
std
add
div
or
in
jmp
in
out
out
sub
out
in
dec
ljmp
xchg
out
out
in
in
fsubr
ret
stc
stos
jo
test
js
movsl
push
jmp
popa
pushl
add
lds
push
int
insl
call
add
add
jmp
inc
popf
sti
mov
jecxz
std
lret
loop
dec
in
dec
jecxz
dec
jecxz
dec
jecxz
std
int3
loopne
call
in
shl
shl
shl
cli
out
mov
xlat
inc
ret
test
test
xchg
xchg
xchg
sbb
fwait
fwait
add
std
incl
incl
cmc
clc
testl
lock
out
repnz
out
repnz
cmp
in
out
pop
fnstsw
loopne
mov
xchg
sti
sahf
es
sahf
add
pop
ljmp
add
rolb
inc
add
roll
jo
fiaddl
jbe
in
jnp
in
push
pop
stos
cld
mov
dec
in
cld
shl
call
out
std
shr
std
shl
out
fsub
xlat
jmp
fld1
std
fucomi
cld
shl
push
ret
jmp
rcr
dec
leave
lret
repz
stos
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
std
sti
add
stc
add
cli
clc
add
div
or
aam
xor
je
negb
add
cmpsb
add
scas
add
mov
add
leave
add
rolb
jno
fldl
jne
out
ja
in
sbb
stc
je
sti
std
xlat
ljmp
fucomi
fldpi
std
fucompp
fucomi
std
fucomp
std
fsubr
fucomip
fsubrp
std
fsubrp
cld
shl
push
aad
out
rcl
iret
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loopne
add
mov
xchg
lods
jl
repnz
and
sahf
add
add
mov
mov
add
int
outsb
call
add
filds
jae
ljmp
cli
pop
shl
jmp
out
fucomi
std
fldl2t
fucomi
call
out
cld
aam
std
aam
cli
shl
cld
iret
loope
stc
iret
stc
int
push
ret
out
mov
fcos
xlat
fdivr
mov
mov
fwait
cltd
cltd
cmp
fwait
fwait
add
aad
rol
adc
scas
xchg
jmp
add
mov
fs
mov
add
rolb
outsl
call
add
add
jmp
xor
enter
loope
cli
lret
loop
cli
stc
mov
aam
hlt
mov
sar
lock
int3
call
mov
sar
ljmp
imul
fneni(8087
cmc
fsubp
loopne
mov
mov
xchg
add
add
add
int
add
mov
cmpsl
loopne
xor
pop
ljmp
add
mov
add
dec
pop
jb
rorl
jmp
sbb
jmp
scas
int3
jmp
scas
leave
std
loop
cld
fbstp
mov
leave
ljmp
rcr
xlat
shl
xlat
fadd
call
out
test
in
out
popf
call
leave
lret
push
lods
stos
stos
adc
cmpsl
cmpsl
test
sahf
mov
rolb
ret
mov
sahf
stos
aam
dec
cmp
cmpsb
push
push
lods
es
mov
ja
mov
dec
xchg
ret
push
mov
lret
fs
test
mov
out
mov
mov
enter
int3
rcl
int3
mov
iret
shlb
xlat
rcl
jg
fcmovnu
jb
loopne
gs
in
call
in
in
xor
div
mulb
repnz
fcmovnu
or
mov
int
mov
add
mov
sarb
mov
xchg
lock
sbbb
mov
test
mov
test
mov
mov
cmpsl
mov
enter
int3
jp
into
shlb
rcl
push
rcl
rorl
aad
rcr
aam
aad
xlat
daa
fcomp
fistpl
fcmovu
fcoml
fsub
jecxz
fucomip
jecxz
call
repnz
add
cli
testb
std
cld
add
std
incb
std
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
into
lret
daa
int
iret
and
aam
sbb
aam
adc
aam
or
fcom
push
rcr
xlat
add
fstp
add
add
jecxz
add
jmp
add
fcom
add
std
incl
mov
mov
add
ret
ret
sub
mov
mov
push
ret
or
mov
add
int3
lret
rolb
rcl
add
fcom
add
fcom
add
aad
add
add
fildl
loopne
fstp
filds
in
out
repnz
add
incl
std
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
scas
mov
adc
mov
aam
into
into
jmp
rcl
cmc
rcl
aam
iret
into
into
cli
lret
int
stc
int3
lret
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
sar
xlat
call
aad
call
iret
sar
iret
into
int
lret
int3
lret
sarb
stos
stos
stos
icebp
xchg
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
jae
gs
inc
inc
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
call
rcl
call
aam
dec
int3
int3
inc
mov
mov
ljmp
popf
sahf
xchg
cwtl
xchg
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
jg
jnp
jnp
test
jns
imul
movsb
push
push
push
stos
push
outsb
insl
push
pop
pop
cmp
cmp
pop
jo
jno
mov
scas
pop
mov
mov
mov
mov
mov
rol
inc
mov
mov
ljmp
pushf
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
lcall
fwait
xchg
lcall
addb
jge
jl
jp
js
jp
jns
jnp
jns
jb
jae
push
push
push
cmp
aaa
popf
pushf
pushf
mov
scas
lods
repz
lods
scas
sti
scas
scas
scas
std
test
test
call
xchg
call
mov
scas
jmp
scas
lods
leave
cmpsb
cmpsb
cmpsb
cltd
jae
jb
adc
adc
add
add
add
add
insl
outsb
outsl
pop
nop
mov
mov
test
std
mov
xchg
lock
xchg
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
outsl
jo
mov
cltd
cwtl
lcall
mov
mov
xchg
xchg
xchg
lcall
movsl
cmpsl
mov
mov
mov
scas
mov
xlat
cmpsb
movsb
cmpsb
pop
addl
add
popa
pop
popa
or
lods
mov
cmpsl
lahf
mov
decl
nop
mov
xchg
xchg
cwtl
std
sahf
sahf
sahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jle
subb
mov
std
nop
mov
ljmp
jle
pushl
pop
mov
mov
jl
mov
scas
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cltd
lcall
lahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
mov
nop
orb
xchg
push
cld
xchg
pop
jg
pushf
dec
jl
movsl
inc
jns
lods
ss
scas
sub
mov
insl
ljmp
sbb
mov
lods
mov
mov
mov
mov
add
add
add
add
popa
or
mov
call
popf
lahf
jmp
mov
xchg
decl
addl
cld
xchg
pop
cmp
dec
jp
cmp
xchg
sub
xchg
sbb
cltd
maxps
sahf
or
imul
mov
insl
pushl
push
jae
mov
pop
nop
mov
scas
scas
xchg
lahf
lahf
sahf
adc
add
add
popa
pusha
popa
or
lods
mov
stos
movsb
cmpsb
jmp
cmpsb
cmpsb
ljmp
test
cltd
decl
cmp
mov
arpl
mov
pusha
decl
or
mov
call
add
fwait
add
test
arpl
mov
je
mov
jle,pn
ret
jg,pn
enter
lret
xor
inc
test
scas
movsb
cmpsl
cmpsl
test
pusha
pusha
pusha
or
movsb
test
test
test
ljmp
mov
pushl
xchg
mov
decl
xorps
test
push
incl
add
popl
push
call
add
cmpsl
add
mov
insb
inc
aaa
test
int3
inc
mov
rolb
roll
inc
xchg
fadds
call
popa
lahf
inc
cmpsl
mov
mov
mov
movsb
movsl
movsb
daa
std
add
add
add
pusha
or
mov
ljmp
mov
mov
mov
stos
lcall
push
popa
call
push
pop
decl
push
call
add
add
scas
add
mov
dec
xchg
fcomps
fistpl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsb
xor
addl
dec
dec
dec
pop
jl
jl
popf
cwtl
cltd
jecxz
sahf
mov
pushl
mov
mov
lcall
cs
sub
xchg
and
xchg
adc
xchg
add
sahf
add
cmpsl
add
scas
add
mov
xor
jecxz
test
out
lods
jmp
jno
in
jb
jmp
jns
call
cmpsl
mov
shll
addl
pop
outsb
outsb
push
mov
cwtl
pushl
mov
mov
mov
je
lcall
cmp
popf
sub
xchg
or
lcall
add
lods
add
mov
gs
or
aad
xchg
jmp
js
jmp
test
push
xchg
push
xchg
mov
cmpsb
cmpsb
push
cltd
cltd
fwait
add
sub
push
push
push
dec
pop
addr16
test
mov
mov
mov
mov
ret
mov
mov
cmpsl
inc
jg
mov
push
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
push
cwtl
cltd
clc
cltd
leave
sti
fwait
lret
push
cwtl
stos
vcmpss
popa
lahf
mov
add
xor
xor
pop
pop
pop
push
fisttpl
mov
mov
rol
mov
test
cmpsb
pop
xchg
lods
dec
cmp
and
sahf
add
ljmp
add
mov
add
fsubs
cmp
jnp
push
mov
iret
cli
stos
sar
cld
stos
sar
std
stos
iret
std
lods
sar
cli
cmpsb
int3
jmp
mov
dec
rol
stos
stos
test
or
add
add
push
push
push
aaa
je
jb
test
int3
int3
out
into
int
lret
lret
lret
std
enter
mov
mov
stos
inc
jg
mov
add
mov
gs
add
int
outsb
flds
clc
xchg
std
mov
cld
mov
fdivr
std
mov
fdivr
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loopne
jecxz
loopne
fstp
fcmovnb
fcmovnu
fcmovnu
xlat
out
shlb
test
or
mov
popa
mov
add
add
jecxz
jl
repnz
mov
cld
loopne
inc
loop
inc
inc
fdivrp
std
enter
lret
cld
out
mov
lret
mov
xchg
popf
sahf
sahf
sbb
add
add
incl
std
incl
ljmp
jmp
in
xor
loop
in
les
mov
mov
add
pushl
add
into
add
fldl
jbe
ljmp
std
fdivrp
cld
shl
shl
std
shl
call
out
aad
call
jmp
push
fdivr
fcmove
sar
mov
mov
add
std
incb
std
std
incb
std
std
std
pop
aad
push
mov
pop
xchg
popf
or
pusha
pushl
add
rolb
jo
filds
jbe
out
and
cld
shl
std
fsubr
std
fucompp
std
fld1
fsub
sti
xlat
out
cld
xlat
call
push
jmp
iret
xlat
sti
mov
lahf
popf
das
add
add
into
int
or
fs
mov
add
mov
add
add
loopne
ja
in
das
xchg
clc
lcall
cli
lret
cmc
fsin
repz
aad
icebp
ret
out
sar
out
in
ljmp
ljmp
test
add
add
add
aad
push
mov
je
push
addr16
mov
imul
sbb
int3
and
sub
sti
ficoms
clc
loop
mov
out
loop
lret
jmp
fidivrs
lret
sarl
jecxz
fcompl
out
call
rorb
mov
add
stos
stos
lods
add
xchg
movsb
les
xchg
mov
xchg
fidivrl
jg
rol
stos
mov
mov
les
rol
int
aam
iret
pop
aam
rorb
cmp
loopne
das
jecxz
frstor
jecxz
icebp
adc
in
in
or
incb
incb
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
leave
and
aam
pop
mov
rcl
or
loopne
or
int3
into
add
std
incb
std
incb
cltd
fwait
fwait
add
mov
or
int3
into
int
lods
stos
lods
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
fwait
add
rol
mov
xchg
leave
leave
mov
rol
mov
scas
mov
insb
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
enter
sar
aad
rcl
sar
int
int
mov
stc
mov
test
andb
push
add
add
add
add
add
add
add
add
jno
jb
push
inc
inc
das
cs
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
into
call
rcl
dec
into
iret
inc
enter
mov
scas
jmp
mov
push
add
add
add
add
jne
jae
test
adc
outsl
outsb
ret
popa
mov
push
outsb
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
xchg
xchg
lds
jno
es
daa
das
add
add
add
add
je
jb
popf
xchg
pushf
mov
xchg
mov
mov
test
test
imul
push
inc
mov
pushf
into
movsb
movsb
movsb
in
mov
xchg
xchg
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
movsl
test
cld
mov
xchg
xchg
xchg
cld
popf
popf
sahf
cmc
cltd
lcall
push
push
push
imul
jg
mov
testl
xchg
mov
jo
mov
lods
lods
push
stos
stos
stos
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
call
fwait
lcall
lcall
xchg
mov
loope
jne
out
nop
bound
std
fwait
inc
jne
movsl
ss
scas
sub
mov
jno
mov
insl
pushl
sahf
lods
lock
mov
imul
into
add
xchg
pop
lods
movsl
stos
test
popf
pushf
sahf
jmp
movsb
call
push
ja
xchg
inc
jae
mov
imul
xchg
adc
xchg
or
mov
sbb
mov
and
inc
daa
jnp
lds
xchg
rcrb
subl
jae
push
mov
mov
test
scas
scas
scas
pushl
xchg
decl
or
xchg
push
decl
add
mov
adc
ret
dec
ds
rolb
call
inc
mov
aam
xchg
dec
cltd
mov
mov
mov
movsb
movsl
movsb
push
add
add
push
push
test
mov
lods
pushl
mov
movsl
call
sbb
pusha
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsw
call
pushf
mov
mov
mov
test
cmpsl
pop
add
add
popa
bound
mov
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
lcall
lcall
add
mov
xor
jmp
outsb
lods
jmp
jl
out
jl
out
jg
ficompl
mov
movsb
mov
add
dec
dec
dec
adc
push
cmp
mov
mov
rol
mov
fs
cmpsb
inc
jl
mov
add
ljmp
add
ret
or
dec
cwtl
in
mov
hlt
xchg
xchg
leave
clc
xchg
jmp
cmpsl
inc
mov
cmpsb
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
ret
ljmp
dec
cmp
sbb
cmpsb
add
mov
gs
add
aam
ja
in
insl
lods
push
cmpsb
iret
cli
lods
sar
cli
lods
sar
std
lods
sar
lods
sar
in
mov
inc
mov
cmpsb
ds
std
std
add
jo
mov
mov
aam
mov
aad
rcl
out
lret
enter
xchg
jmp
inc
add
add
out
xchg
testl
cld
rcr
cld
rcr
inc
out
mov
ret
in
cmpsl
cmpsl
dec
cmpl
add
jmp
out
call
inc
loope
in
movsb
and
popa
mov
add
add
lock
xchg
sti
scas
std
int
shl
std
shl
std
aam
call
in
hlt
leave
fcos
aad
int
lods
lods
scas
popa
cmpb
std
incb
std
std
push
lret
lret
shrl
mov
add
mov
add
jecxz
jp
cmc
push
cmpsl
cld
enter
aad
std
out
aam
sti
aam
stc
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
mov
cld
scas
add
imul
push
jne
ficomps
jg
ljmp
cli
out
mov
into
bnd
ret
in
rcl
ljmp
scas
vsqrtsd
add
add
popf
lods
xchg
dec
and
push
mov
shll
jbe
mov
xlat
mov
lret
vmovdqa
int
pop
aad
jecxz
loopne
call
out
out
sbb
mov
mov
cmp
mov
scas
push
mov
mov
les
int
fisttpll
into
int3
int
aad
push
incl
jg
jg
std
add
add
add
roll
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
daa
jmp
push
xchg
mov
lods
fsubl
xor
aas
out
sbb
shlb
and
adcb
jns
popa
mov
pop
jo
sbb
stc
xchg
cmp
nop
xchg
or
std
fs
pop
jmp
ja
sub
sbb
loop
dec
aaa
pop
in
xor
sub
fadd
xor
add
pop
xor
jne
addr16
cmc
adc
ja
les
jae
mov
fdivrs
cmpsb
loop
mov
insl
ds
jg
mov
inc
lods
mov
ss
mov
dec
push
in
pop
and
data16
pop
xor
mov
pop
xchg
pop
in
cmp
outsb
pusha
mov
mov
mov
shrl
dec
mul
lcall
leave
test
mov
aam
mov
pop
jecxz
push
inc
loope
add
fs
test
or
icebp
shrl
sarl
pop
mov
vfrczsd
jb
push
or
or
in
pushf
test
mov
push
outsb
aaa
or
cli
lahf
dec
icebp
lahf
subl
fcompl
aad
sub
xchg
push
add
pop
jb
mov
mov
lahf
cmp
mov
sarl
in
xchg
and
or
pop
jnp
sbb
stos
pop
jle
cli
aaa
dec
sarb
xchg
sbb
cld
mov
sub
lret
mov
xchg
les
cli
mov
pusha
push
jle
mov
jl
inc
pop
fld
xchg
mov
jmp
push
xchg
dec
sbb
test
int
cmpsl
movsl
mov
mov
js
scas
das
push
outsl
notb
test
fwait
dec
inc
dec
out
pop
popf
xor
mov
int
xchg
mov
call
mov
and
int
adc
pop
push
pop
stc
jae
adc
repz
push
jne
mov
or
sbb
mov
jmp
gs
or
ret
das
and
jg
cmc
in
add
sbb
out
push
rolb
gs
stos
jnp
dec
or
xor
or
out
add
popa
notb
testl
cmpsb
std
movsl
cmp
orb
popf
mov
add
arpl
inc
adc
jp
mov
add
xchg
mov
adc
jnp
in
jge,pt
mov
in
sub
test
ss
push
pop
sbb
xchg
inc
mov
cmpsb
sarl
loopne
gs
mov
xchg
clc
jno
aam
fadds
dec
pushf
fiadds
jo
push
pusha
mov
loope
cmc
lcall
fstps
mov
adc
lods
clc
xchg
add
mov
dec
test
jl
sbb
bound
jnp
ret
push
mov
adc
adcb
jmp
xchg
nop
jb
inc
sbb
cmpsb
das
ljmp
mov
stos
inc
cli
or
mov
lock
fists
pop
negl
in
addr16
div
sbb
jns
out
inc
sbb
mov
ret
lret
jle
pop
add
mov
divl
sub
out
fwait
repnz
cmp
and
cmc
es
xchg
fldt
into
dec
outsl
add
lret
jl
popf
dec
xlat
mov
es
sbb
out
xchg
inc
icebp
call
mov
in
inc
xchg
mov
add
insb
mov
dec
pop
es
mov
mov
rolb
in
das
cmpsl
fidivrl
sub
sti
mov
push
lock
stos
nop
pop
ljmp
adc
xchg
inc
and
loope
cs
and
sbb
jnp
gs
lock
inc
or
ss
sub
lds
sbb
addr16
jecxz
xor
jle
push
cs
dec
test
mov
inc
sbb
mov
roll
sub
fdivl
je
mov
and
dec
in
xchg
cld
cmp
sbb
mov
fbld
scas
int3
mov
imul
inc
or
enter
lcall
lea
pop
scas
sub
xor
push
insb
ljmp
lea
lock
and
inc
jae
mov
fs
stos
imul
jns
aaa
sahf
mov
test
in
sbb
adc
mull
mov
inc
pop
ja
scas
ss
cmp
test
mov
pop
mov
cmpsl
xor
mov
scas
jns
and
inc
or
pmullw
insb
adc
nop
jl
cmpsb
cs
scas
jno
enter
cmp
scas
add
inc
or
mov
sbb
lock
fs
xor
and
popa
testb
insl
loope
and
out
and
mov
into
or
jle
add
popa
mov
or
loopne
jge
insl
cmc
test
jno
cmp
loope
xor
mov
jb
cld
pop
mov
mov
shrb
leave
outsl
inc
and
jmp
jg
out
jb
arpl
movsl
popf
es
push
movsl
int
and
xorl
int
push
je
fcoml
mov
arpl
in
aam
insl
les
mov
out
stos
nop
int
add
pop
test
repnz
and
xchg
adc
test
imul
mov
jo
js
aad
ds
and
aaa
inc
pusha
in
jl
shrl
popf
pop
or
stos
inc
iret
cmp
adc
mov
sarb
mov
cs
call
jecxz
dec
out
jo
or
push
sub
dec
bound
xor
fstpl
rolb
add
das
sbb
and
test
cmpsb
in
sbb
cwtl
mov
xchg
int
push
rorb
xor
out
loope
fidivl
lods
pop
xor
xchg
daa
jmp
jnp
ret
fwait
lret
bound
xchg
or
das
sbb
pusha
dec
or
mov
sub
iret
rcrl
add
inc
fisubs
es
push
and
fnstenv
xchg
dec
sti
ljmp
dec
or
dec
adc
scas
inc
fsubrs
inc
out
mov
mov
stc
nop
xor
adc
xor
and
push
enter
loope
push
xor
outsl
test
push
sbb
in
xor
jne
addr16
pop
out
test
mov
mov
nop
add
ret
loope
jecxz
dec
loopne
add
xchg
xor
push
push
mov
stc
test
test
mov
icebp
sub
rcrl
js
jg
fbstp
mov
std
xchg
js
mov
es
jns
cmp
sbb
ds
out
outsl
out
push
movsl
pop
xchg
jne
ret
inc
sub
jno
xchg
sub
xchg
dec
loope
aaa
mov
imul
ds
jp
pop
ds
cmpsb
cs
outsb
xchg
push
js
mov
pop
jg
push
mov
jae
cwtl
mov
arpl
test
jg
mov
sbb
sub
pop
sti
mov
das
addr16
pop
sub
ja
negb
xchg
or
xchg
adc
mov
lods
out
cmpsl
aam
or
icebp
dec
fbstp
add
in
test
add
fidivs
and
push
arpl
xchg
xchg
jne
adc
enter
or
sarb
sbb
out
mov
outsb
mov
shl
repz
stos
inc
push
mov
test
leave
cwtl
movsl
iret
data16
mov
in
test
or
push
ds
or
xchg
popf
sub
into
mov
inc
in
inc
fisubs
push
lret
inc
gs
jb
call
sbb
lods
push
popf
fucom
mov
mov
insb
push
inc
aam
mov
outsl
jge
mov
lock
in
addl
int3
es
jge
push
in
sub
xor
cmp
pop
idivb
or
stos
dec
loope
outsl
jge
popa
jno
cmpsl
test
xor
repz
pop
icebp
jnp
mov
xchg
adc
sbb
popa
cmp
push
aas
int
sbb
loope
mov
lods
pop
scas
js
in
std
xchg
mov
dec
sti
xchg
jbe
mov
xorl
aam
lahf
or
sbb
test
les
mov
mov
clc
arpl
jmp
or
push
pushf
mov
push
in
inc
sbb
mov
inc
inc
xor
mov
mov
xor
jbe
out
mov
rcrl
in
test
fnstenv
scas
inc
sub
push
out
or
sbb
mov
arpl
int
testb
fbstp
aaa
pop
sahf
popa
fimull
popa
inc
in
inc
call
cmp
jno
out
in
xchg
or
mov
lds
adc
sub
or
cmp
addr16
adc
cmc
dec
mov
mov
popa
mov
sahf
rolb
loopne
adc
xor
pop
cmpsl
and
sbb
pop
lock
push
ljmp
push
out
mov
faddp
pop
shrb
xchg
icebp
pushf
xor
xor
xchg
pop
add
divl
mov
push
or
sbb
pushf
popf
out
sarl
rclb
mov
imul
rorl
fidivs
jmp
sti
adc
outsb
add
lea
adc
pop
fs
popf
push
inc
testl
inc
fadds
popf
add
les
movsb
nop
daa
loope
add
movsl
lds
nop
daa
movsl
and
adcl
and
out
addr16
das
aaa
add
fisttpl
popa
clc
and
scas
pop
int3
outsl
push
push
jle
lea
test
sub
nop
call
xchg
pop
popa
clc
jne
push
ljmp
popa
clc
cmp
push
jmp
dec
mov
ss
jbe
cmp
icebp
cmp
dec
filds
movsb
nop
daa
push
sti
icebp
mov
cmp
mov
lret
loop
mov
ficoms
mov
icebp
or
loop
jbe
sub
mov
sti
xchg
xchg
or
jmp
cmpsb
mov
mov
inc
aas
daa
je
push
pusha
adcb
decl
sub
xor
gs
mov
or
es
mov
addr16
and
sbb
fidivl
xor
rcll
out
aas
jecxz
out
aam
dec
loopne
imul
xchg
lods
arpl
fimull
jmp
jnp
inc
fsubs
dec
pop
scas
jl
and
sbb
mov
int3
arpl
aam
pop
leave
mov
fldcw
in
in
mov
or
imul
mov
dec
lret
xor
or
test
or
into
inc
flds
cltd
lret
cwtl
sbb
lock
mov
push
cmp
lock
mov
mov
in
adcl
inc
fisubl
enter
repnz
sub
fdivl
les
mov
out
sbbl
leave
add
pusha
je
out
xchg
xchg
test
jns,pt
insl
sub
rcrb
mov
pop
and
iret
test
and
es
or
mov
cmp
divb
jne
pop
jns
mov
fwait
ja
mov
dec
cmp
cmp
cld
ror
push
lret
add
lds
cmc
and
inc
pop
xor
js
jmp
inc
or
ret
pop
mov
push
sbb
xor
shrl
push
fsubrs
div
mov
and
push
sbbl
std
add
aaa
into
filds
adc
mov
loopne
ss
xchg
movsl
push
cli
xchg
dec
dec
lods
inc
mov
dec
xchg
outsl
adc
mov
push
and
jge
mov
lea
jb
sbb
inc
xchg
sub
enter
nop
daa
outsl
movsl
cmp
rcll
test
jmp
mov
lret
sub
callw
cmp
mov
xlat
outsb
mov
loopne
jg
adc
imul
or
repz
test
ret
cwtl
sbb
icebp
lods
sub
pushf
inc
xchg
sub
and
pop
cmp
cmovno
lock
arpl
push
mov
dec
fbld
sbb
cli
inc
data16
jle
mov
lea
or
xchg
and
mov
add
stos
pop
hlt
fcoms
cmp
fbstp
push
push
call
insl
cmc
mov
hlt
lcall
stc
nop
xchg
jne
stos
mov
add
inc
adc
pop
sbb
dec
pop
and
pop
lds
bnd
loop
adcl
mov
dec
pop
repz
lods
inc
xchg
adc
xchg
dec
mov
push
daa
cli
mov
pop
cmp
das
adc
dec
dec
mov
lods
inc
bound
dec
mov
push
sbbl
mov
sub
sbb
sti
xchg
dec
cmp
jge
sti
add
ret
mov
aad
sbb
call
or
jp
sbb
or
inc
fiadds
xor
cmpsl
mov
pusha
divl
enter
out
loop
shlb
mov
sub
or
test
call
cmp
das
sahf
xor
mov
pop
mov
repnz
sbb
push
lods
cmp
cmp
in
lret
or
orb
adc
xorl
movsl
pop
mov
ds
mov
fld
pop
lret
xchg
jb
in
pop
neg
dec
pop
hlt
jae
stos
inc
lock
arpl
adc
jae
int
rorl
push
movsl
push
mov
sbb
in
leave
fnsave
movsb
cmp
ljmp
out
xchg
sub
xor
mov
jb
xchg
out
or
lds
xchg
sub
inc
leave
pusha
jnp
adc
dec
bound
push
ds
jne
es
imul
mov
in
xlat
sbb
lock
popf
scas
test
sub
cmp
int
inc
adc
inc
cmpsl
cmp
fsubs
mov
ljmp
fcomps
pusha
idivl
sbbb
pusha
jge
inc
cmc
cmp
enter
push
sti
xchg
cmp
fimuls
sbb
scas
xchg
push
in
enter
out
dec
loope
pop
stc
nop
cmp
push
loope
repnz
xlat
in
cmp
movsb
jns
montmul
cmpsb
inc
lcall
cmp
mov
pop
sbb
sbb
repz
adc
enter
push
sub
test
push
push
ljmp
push
lods
jae
out
test
dec
loopne
xchg
sbb
sbb
shlb
mov
add
or
cmpsl
pop
pop
in
dec
sbbb
imul
pop
pusha
stos
inc
pop
jp
cld
dec
jl
dec
dec
insl
and
ss
push
jmp
push
mov
add
push
or
cltd
js
jmp
icebp
mov
and
lods
sub
lret
insl
jp
sti
stos
and
mov
test
jae
lods
fs
push
test
movsl
mov
xchg
mov
fbld
mov
push
cmp
add
pop
out
xchg
pop
icebp
shl
push
popf
fdivrs
push
popf
lods
xor
push
cmpsb
xchg
adc
xchg
cmp
mov
or
or
ja
icebp
sub
jl
add
loopne
sub
fiaddl
or
sub
es
pop
divl
flds
cld
xchg
les
adc
mov
push
in
loope
movsb
cmp
add
cwtl
or
bound
mov
iret
data16
jge
cmp
and
and
pushl
loope
stc
shlb
into
shll
fbld
insb
test
pop
int
ljmp
sahf
cmc
or
sarb
mov
jl
sbb
dec
rolb
cltd
and
insb
add
inc
mov
call
push
mov
es
inc
in
adc
fisttpll
jecxz
test
sbb
xor
xlat
cmp
aaa
pop
sbb
rol
dec
ret
popa
or
mov
mov
mov
fstpl
shrl
scas
xor
push
jp
loop
cltd
das
mov
jae
or
lcall
lds
int3
sub
add
std
xchg
adc
ror
and
adc
or
and
movsb
mov
sbb
in
mov
imull
sub
inc
jne
dec
mov
push
sahf
insb
mov
cmp
subl
sarb
dec
popa
sahf
pop
sub
and
addb
jno,pt
jl
sarb
sahf
and
xchg
cmp
lahf
jne
in
xchg
je
jns
xchg
xchg
cld
xchg
sub
dec
jge
scas
cs
jnp
rcrl
inc
fcmovne
pavgb
leave
and
fsubp
mov
lods
cld
aam
sub
xchg
iret
data16
add
fists
adc
das
in
xchg
adc
push
sti
jle
or
stos
scas
imul
fwait
fwait
and
pop
repz
fdivrs
lret
cmovne
jg
loopne
mov
adc
in
dec
loop
push
out
test
sub
pop
xlat
adc
test
xchg
mov
icebp
insb
or
jl
dec
loopne
addr16
loopne
shll
pop
icebp
push
int
int
xor
xchg
mov
mov
fcmovbe
imul
push
lods
pop
xchg
sub
into
in
loope
in
pop
add
jae,pn
pop
or
cs
scas
call
es
iret
data16
leave
pusha
scas
xchg
sub
call
or
imul
add
pop
mov
shrl
scas
mov
loope
mov
sub
cmp
push
xchg
pop
pop
test
nop
fidivrl
cmp
sub
dec
mov
inc
jb
push
gs
pop
icebp
sbb
sbb
ret
loop
mov
popf
dec
popf
xor
sbb
mov
pop
mov
add
pop
jb
jg
mov
cmc
vpaddw
inc
sub
dec
into
inc
pop
mov
mov
xor
pop
mov
mov
lcall
inc
xor
xor
imul
xchg
mov
push
lds
lods
inc
or
ja
call
insl
mov
dec
in
cmp
les
jp
aad
push
imul
adc
test
and
push
leave
pusha
dec
cmpsb
and
ss
sbbb
push
pop
dec
xchg
fbstp
pop
push
jmp
lret
push
push
jmp
in
xlat
outsb
fildll
mov
push
cmpsb
mov
pop
scas
incl
xor
push
inc
fcmovnu
jo
scas
ja
and
stos
inc
fwait
sbb
ja
call
and
jp
xchg
inc
fidivs
mov
fwait
jns,pn
sub
sbbl
aad
stc
shl
das
daa
sti
jnp
sub
pop
adc
fnstsw
pop
and
aaa
into
dec
hlt
call
iret
dec
mov
xchg
dec
call
push
lods
mov
lock
aad
inc
cmc
pusha
mul
pop
loopne
mov
push
scas
inc
inc
or
mov
cld
xor
pop
jmp
cmpsl
movsb
fs
mov
movsl
cmpsb
cmp
xor
ret
std
cltd
xor
push
ljmp
cwtl
rclb
clc
sbb
jg
sbb
aaa
jmp
sub
add
xlat
push
icebp
scas
inc
jecxz
lret
int
pop
sarl
insl
movsl
push
in
sbb
xchg
jg
lret
outsb
popf
pusha
testl
gs
fsub
jl
aad
jge
and
or
xor
gs
arpl
cmp
pop
cmc
and
stos
pop
popa
ds
mov
sbb
dec
xchg
mov
xlat
outsb
cmp
pop
mov
pop
push
push
in
fwait
jg
outsb
ds
cmc
mov
pop
hlt
sahf
xchg
imul
dec
cmc
mov
cmp
or
dec
jmp
imul
or
xorb
mov
adc
fildll
inc
fdivrl
push
call
sub
or
out
dec
inc
fcompl
pop
hlt
xchg
jle
sarb
mov
mov
pop
or
lods
jl
movsl
inc
int
mov
xor
push
out
push
daa
mov
mov
dec
adcb
dec
pop
hlt
push
jmp
movsl
inc
cmp
insl
fs
out
inc
mov
mov
dec
sbbl
lea
xchg
dec
scas
cmp
icebp
outsb
push
shlb
cmp
jecxz
repnz
enter
aaa
jmp
jb
bound
das
mov
xor
lret
enter
add
jle
into
scas
loope
and
rolb
call
or
xor
rcrb
xchg
add
mov
sub
fidivl
mov
mov
inc
sbb
lcall
lcall
and
xsha256
cmpsb
push
jmp
jp
adc
fisubrl
cli
jns
in
test
lcall
pop
cld
and
adc
or
and
or
jae
daa
mov
adc
jmp
xor
mov
pop
xsha1
cmpsb
mov
inc
xchg
lods
or
fs
or
cmp
jecxz
pop
pop
hlt
pop
mov
sahf
sub
js
sahf
cmp
mov
or
xchg
dec
jecxz
test
and
stos
sbb
je
inc
fiadds
mov
shlb
adc
push
pushf
xor
fwait
out
fidivs
pop
jno
push
mov
inc
repz
scas
inc
in
cld
xchg
xor
jo
and
xchg
out
dec
out
sub
add
dec
loope
aam
mov
ss
mov
or
mov
and
filds
cwtl
sti
mov
montmul
cmpsb
inc
add
mov
xchg
push
arpl
test
push
in
cmp
push
lods
dec
jge
mov
inc
push
out
cs
pop
bound
lods
xchg
lea
mov
enter
lods
popa
clc
adc
arpl
xchg
ret
add
loop
push
mov
add
jnp
arpl
lcall
or
test
xchg
daa
cmp
sub
negb
xor
pop
mov
or
xor
into
mov
add
pop
jno
lahf
ss
lahf
ss
scas
inc
test
xor
mov
sub
pop
pop
mov
pop
sahf
cmp
mov
pop
jle
cli
insl
or
mov
sarl
jo
adc
aad
into
enter
cld
lcall
xor
stos
cli
mov
sbb
mov
ret
adc
dec
insl
add
idiv
xchg
out
aaa
into
sarb
fwait
imul
pop
repz
add
mov
mov
div
fsts
out
sbb
stos
into
imul
rorl
icebp
mov
shlb
inc
fidivl
mov
inc
xchg
pop
out
data16
cwtl
call
shrb
and
push
sbb
dec
jecxz
lods
push
call
ljmp
cmp
push
xchg
sub
es
inc
sub
xor
mov
mul
jle
lds
mov
pcmpeqw
pusha
imul
pop
lock
add
pusha
js
xchg
sub
div
lea
sub
cmc
lea
push
int
je
cmp
pop
scas
inc
cmp
xor
mov
faddl
add
cmpsl
add
xchg
jae
lcall
iret
mov
xchg
mov
loopne
call
ret
hlt
loopne
xchg
sub
rcrl
out
push
lds
mov
insb
xor
scas
lcall
sbb
lret
mov
push
jge
dec
enter
and
and
test
daa
sbbb
call
fldt
or
outsb
add
mov
shrb
or
jns
ret
dec
popa
clc
jge
fldenv
and
std
inc
xchg
call
shld
dec
lcall
cmp
call
fisttps
cld
add
pop
xorb
xchg
cwtl
xchg
sub
add
inc
sub
pop
sbb
pop
lcall
push
push
sub
sub
cmpsl
insb
push
fists
push
enter
les
nop
loope
sub
dec
inc
outsb
rclb
dec
mov
pop
dec
mov
pop
imul
pop
je
xchg
sub
ret
push
aad
push
jl
inc
inc
pop
jge
arpl
outsl
data16
dec
shlb
mov
cmc
jg
add
fistl
or
xchg
pop
imul
sub
xor
xchg
or
stos
in
or
icebp
xchg
mov
cmp
add
cmp
test
xchg
jne
push
int3
jb
jle
xchg
push
enter
enter
roll
sbb
gs
aaa
rcr
in
pop
sahf
movsb
add
pusha
pushf
enter
jae
pop
cmpsb
fimull
mov
cli
jg
loopne
aas
int3
and
sbb
fcmovne
lretw
negb
cmp
sahf
incl
out
mov
maskmovq
idivl
jp
shrl
cmp
jo
test
and
xor
push
cwtl
das
movsl
stc
stc
or
jecxz
adc
pusha
negl
nop
jns
dec
or
xchg
and
jne
add
je
cli
sub
in
jge
push
push
mov
sbb
push
mov
mov
xor
negl
out
in
sbb
mov
sub
push
cmp
xchg
sub
decl
or
lods
push
repz
imul
movsl
jno
mov
clc
push
lods
sub
inc
dec
push
in
jnp
lret
cmp
fcoml
insl
es
and
push
fs
fnstsw
js
xor
fwait
xor
jge
push
inc
add
nop
test
pop
xor
ret
roll
out
stc
and
push
roll
sub
inc
mov
jecxz
test
xchg
pop
lock
in
enter
repz
int
sbb
pop
add
out
rcl
rep
rorl
fnstsw
inc
arpl
jo
mov
negl
or
inc
stos
arpl
adc
sbb
xchg
xlat
inc
ds
shl
fcoms
and
shrl
ret
mov
js
xor
inc
das
out
imul
adc
jge
add
xchg
rcll
jge
mov
fistl
shr
add
stos
inc
gs
mov
repnz
out
xor
cmp
enter
int3
test
cs
aam
enter
ljmp
cltd
aas
addr16
pusha
cltd
dec
es
xchg
mov
and
das
stos
or
xchg
cmp
xor
add
out
jmp
mov
xchg
add
test
inc
hlt
lret
std
aas
xorl
jmp
inc
sbb
xchg
cltd
or
imul
std
jl
mov
mov
or
mov
pop
gs
xchg
jl
jne
jb
sar
insl
push
ljmp
mov
jle,pt
imul
and
repnz
sbb
add
test
sbb
dec
dec
jge
imul
push
inc
fisubrl
adc
and
adc
cmpl
cmc
xchg
imul
push
push
mov
nop
in
push
ret
mov
mov
js
daa
ljmp
enter
outsb
mov
sub
adc
add
out
lcallw
pusha
cwtl
loop
faddl
or
jbe
or
in
push
xor
push
mov
sbb
mov
and
jb
fbld
pop
cwtl
add
stos
add
stc
mov
mov
adc
pop
jmp
adc
cmp
and
out
fwait
repz
lret
in
fsubrs
add
cmp
jno
xchg
mov
adc
insl
inc
les
mov
push
shlb
sub
inc
mov
js
add
into
lahf
movl
pop
ss
call
push
mov
ret
test
push
movzbl
popa
dec
mov
jle
nop
sub
xchg
out
xchg
rcrb
sbb
arpl
mov
fdivl
popf
xor
xchg
fdivr
push
cmpsl
xor
or
push
in
xchg
or
and
icebp
mov
mov
xchg
sub
das
push
aaa
sbb
mov
mov
iret
jl
push
push
or
mov
dec
push
jge
mov
adc
mov
jnp
mov
xchg
jmp
adc
into
ds
push
dec
loope
testb
shr
jg
jb
repnz
stos
in
pop
ret
rcll
in
loop
fst
icebp
scas
aas
out
test
xchg
cld
dec
xchg
adc
sub
push
sub
ds
testl
xchg
jge
mov
dec
jbe
rclb
insb
cmp
jl
pop
inc
fstl
cmpsl
lds
pusha
aad
sub
sti
xchg
adc
in
stos
push
add
jbe
rclb
cmp
jecxz
xor
xor
lcall
lahf
mov
shll
arpl
ret
mov
aad
stos
jb
test
cmp
les
jns
or
je
xor
sub
lcall
aaa
enter
jno
dec
sub
add
int3
push
daa
push
hlt
dec
je
out
test
sbb
bswap
aaa
mov
cwtl
cmp
push
outsb
mov
lods
sbb
pop
dec
arpl
mov
sbb
ret
or
push
int3
adc
mov
jle,pn
daa
xchg
sub
scas
push
sbb
push
cmpsl
ds
daa
sub
pop
inc
xchg
adc
xor
rol
pop
add
or
fbld
scas
fcompl
inc
lahf
sub
int3
dec
addr16
jge
mov
lods
xchg
push
jecxz
fadds
lar
or
pop
pusha
mov
mov
shlb
movsl
or
jle
and
iret
repnz
test
pop
pusha
push
or
mov
loope
cli
mov
clc
call
mov
jp
lods
sbb
fiadds
rol
pop
scas
adc
mov
imul
cmp
cmpsb
mov
xchg
cmp
ret
sub
mov
sub
mov
ds
xor
ja
push
popf
into
sub
gs
sti
cmp
sub
pop
hlt
pop
pop
icebp
es
dec
sub
popa
stc
iret
inc
shlb
fdivl
scas
jl
cmp
xor
insl
sub
test
cmp
xor
push
adc
mov
pop
das
inc
adc
dec
fmuls
xor
xor
insl
arpl
push
nop
xchg
jle
int
mov
or
and
negb
out
in
mov
adc
sub
cmc
mov
mov
jns
pop
inc
jmp
les
iret
adc
pusha
ljmp
les
xchg
dec
fcomip
dec
nop
sbb
sbb
mov
inc
clc
lea
mov
sahf
sbb
pop
call
pop
or
aam
fidivrl
sub
arpl
pop
fmull
adc
lcall
add
out
mov
icebp
jb
pusha
mull
lea
sub
pop
iret
nop
in
pop
xchg
ds
outsb
adc
or
cld
aas
xor
xchg
jne
dec
or
cwtl
push
mov
shl
dec
in
mov
movsl
out
imul
jmp
rorb
orb
scas
popa
inc
xchg
mov
mov
push
jno
scas
ficoml
mov
and
icebp
mov
outsb
int
mov
adc
pop
gs
fisttpll
xor
or
lds
mov
fldt
cmp
lahf
pop
stos
lret
aaa
pop
sbb
cmpsl
xor
cmpsb
lea
adc
push
mov
dec
loop
inc
pop
pusha
pop
mov
out
mov
les
or
in
repnz
inc
stos
iret
add
shrl
js
mov
xchg
js
dec
dec
fistpll
fdivs
xchg
push
pop
shl
loop
xor
push
pop
or
lock
imul
icebp
jbe
push
and
cs
push
xor
sbb
or
mov
or
mov
and
fdivl
mov
pusha
shlb
mov
sbb
cli
mov
cmpsb
pop
not
les
sub
das
cmp
stos
fwait
push
lods
repz
xor
pop
lret
push
inc
ja
outsb
xchg
pop
or
je
shll
stos
sbb
dec
xorb
ja
mov
sub
xchg
rcrl
sub
in
lea
xchg
pop
add
xlat
pop
push
sysenter
lret
inc
js
or
or
jg
inc
xor
cmp
in
ds
fldenv
loopne
mov
push
sahf
mov
sahf
fs
in
cmp
dec
xchg
xchg
outsb
lcall
lahf
mov
push
ret
scas
push
stos
or
jb,pn
lret
dec
sahf
adc
push
xor
test
jbe
mov
and
aas
push
mov
dec
std
pop
xor
sbb
roll
xchg
stos
or
or
dec
jecxz
ficomps
out
sbb
add
arpl
jnp
jnp
in
dec
push
fdivl
popa
adc
mov
sub
cmc
ss
das
mov
lea
int3
cmpb
filds
xor
mov
fnstenv
int3
push
lock
mov
pop
xchg
sbb
sbbl
cmp
push
in
cmovle
lcall
into
or
pop
cli
jae
or
jo
int
mov
push
rorl
cwtl
push
pop
mov
xlat
xor
addr16
icebp
and
loopne
out
leave
rcl
pop
scas
add
pop
lods
fisttpll
movsl
adc
in
push
mov
out
mov
and
stos
pop
mov
shlb
sub
pop
adc
lahf
dec
outsb
mov
or
mov
fsubrs
dec
iret
jns
xchg
push
call
mov
cmp
cmp
das
push
or
sbb
icebp
dec
jecxz
enter
mov
or
jecxz
data16
sub
mov
jo
insl
sti
sti
adc
iret
aam
jae
mov
xchg
stos
mov
fs
clc
cli
not
bound
loop
lret
pushf
xor
cld
add
clc
iret
repz
aam
in
dec
pop
push
push
aad
lds
push
inc
xor
inc
and
mov
fidivs
jo
ficomps
lea
or
inc
out
pop
sbb
fildl
roll
pop
mov
lods
add
mov
cmpsb
test
jecxz
shl
out
out
and
and
mov
insl
outsl
hlt
pop
push
int
outsb
jle
cmpsb
enter
pop
shlb
adc
push
movsb
mov
sbb
mov
enter
adc
jle
movsl
arpl
imul
inc
fimull
jle
orl
cmc
inc
int3
xor
popf
pop
adc
adc
enter
adc
fldcw
jbe
lcall
ja
xor
inc
mov
push
mov
mull
dec
jecxz
add
push
or
mov
outsb
call
in
sbbl
xor
shrb
adc
xlat
leave
into
gs
clc
push
or
hlt
cli
xor
push
stos
sub
mov
jmp
outsb
sbb
add
test
mov
addr16
dec
rorb
ret
xor
fisubs
test
pop
cmp
aad
inc
in
mov
push
scas
and
add
jg
jmp
sbb
jae
and
addr16
int3
xchg
xor
test
enter
push
mov
les
into
aas
aam
push
shrl
jmp
scas
mov
rorl
in
push
inc
push
sbb
jecxz
sbb
sub
push
icebp
call
pop
repnz
pop
xchg
mov
mov
loopne
iret
repz
mov
fstps
add
or
push
and
add
into
sbb
fistps
leave
aas
lods
adc
push
mov
jbe
jg
es
mov
lds
jnp
xchg
mov
sbb
mov
jnp
pop
mov
in
sub
fisttps
adc
and
xchg
int3
ficomps
xchg
jo
inc
data16
insb
add
mov
fisttpll
xor
lahf
mov
gs
sub
mov
fisubrl
xor
cs
mov
in
cmpsl
and
inc
shrb
xor
mov
pop
jp
jbe
sahf
xor
iret
inc
mov
test
jl
cmp
push
jae
scas
adcl
dec
mov
and
inc
mov
repnz
lret
pushf
mov
les
jecxz
and
sub
arpl
push
xchg
pushf
dec
and
dec
fists
lock
hlt
and
sub
in
rcl
inc
add
adc
mov
xlat
popf
mov
fcom
pop
xchg
or
or
jle
cmp
insb
push
leave
add
imul
jecxz
push
insl
jp
popf
rol
sbb
loope
arpl
adc
out
mov
sub
fildll
add
inc
aaa
sbb
push
jo
mov
mov
cmp
mov
shrb
push
mov
cmc
xchg
or
cld
push
push
inc
pushf
aas
addl
mov
popf
sti
outsb
test
shlb
fnsave
inc
add
sbb
aaa
dec
sbb
lods
data16
frstor
sub
loope
scas
dec
pushf
sbb
dec
mov
adc
inc
mov
das
or
sbb
outsl
xor
jge
mov
pop
sub
dec
cmc
call
jbe
adc
call
xor
in
insl
lock
out
lds
std
ss
sub
mov
lds
std
ds
fs
dec
pop
mov
xor
aam
lods
mov
in
xorl
pop
cmp
or
mov
cs
jmp
ja
popf
push
dec
cmpsb
js
push
ljmp
pop
arpl
aas
subb
cmp
inc
mov
fistps
pushf
xor
repz
cmp
pop
mov
xorl
clc
inc
pop
inc
mov
xor
cmp
loope
cmp
mov
mov
scas
in
or
rclb
data16
inc
xchg
sub
dec
sub
outsl
cmp
iret
sub
sahf
scas
fmuls
ficompl
mov
loopne
in
mov
mov
mov
popa
mov
pushf
in
inc
mov
cs
sub
sbb
jle
loopne
and
or
dec
adc
push
cwtl
mov
daa
fidivs
push
dec
inc
stos
inc
sbb
cmp
es
mov
insl
dec
add
mov
inc
pop
xorb
cwtl
fcom
mov
lahf
dec
nop
mov
xor
lods
mov
ror
jl
scas
inc
data16
int3
add
in
lcall
or
std
and
fwait
and
movsb
fildl
sti
xchg
sbb
fxch
or
sti
int
scas
hlt
aad
in
rcr
outsl
mov
leave
xor
jmp
aas
mov
adc
cmpsl
adc
dec
loope
test
inc
mov
jno
pushf
sub
add
cmp
js
jno
adc
xor
pop
push
push
in
gs
pop
sbb
pop
into
xchg
inc
jle,pn
sub
scas
mov
add
mov
jge
jnp
and
adc
mov
push
scas
add
subl
xor
shll
loop
jmp
add
gs
cmc
fidivrs
rorl
ja
lods
dec
dec
jns
jbe
dec
shlb
xor
jle
jge
je
stc
xor
cmpsb
mov
loop
adc
cmc
fwait
inc
add
outsb
addr16
ljmp
push
xor
ss
cmp
add
cs
mov
mov
aaa
repz
je
in
test
xchg
orl
cmpl
sub
pusha
es
push
adc
daa
bound
adc
fucomp
orb
fwait
andl
fsubp
cmp
mov
mov
cmp
outsb
das
push
and
inc
jo
loopne
test
xor
dec
int3
and
dec
movsl
rclb
inc
jmp
push
sub
push
sbb
cmp
loopne
mov
out
xchg
repz
xchg
sti
sahf
test
jnp
lahf
xchg
cli
pop
inc
cmc
mov
mov
int
sub
je
icebp
gs
jg
call
lea
popa
out
cmp
stos
xchg
or
iret
and
outsb
add
pop
jno
inc
jne
jo
xlat
jne
jns
pop
pusha
mov
mov
icebp
icebp
and
or
cmp
fcomi
xchg
add
cmp
das
push
adc
push
je
aam
les
dec
push
dec
add
jp
imul
xchg
ret
cmp
or
ljmp
sti
push
shll
add
es
mov
dec
push
mov
cmp
mov
fcmovb
and
dec
cmp
dec
out
popl
and
cmp
pop
inc
mov
mov
ret
xchg
stos
sti
xchg
test
adc
mov
aam
adc
je
xlat
fcomps
inc
inc
and
lods
jmp
pop
sub
dec
out
sub
fwait
daa
mov
ss
lahf
outsb
mov
dec
daa
mov
in
arpl
dec
push
js
pop
jo
lods
dec
jnp
mov
xorps
nop
shlb
hlt
enter
popa
clc
xor
inc
les
mov
dec
sbb
stos
test
subb
mov
mov
js
icebp
imul
sub
cmp
pop
adc
clc
mov
jmp
dec
add
xor
popf
push
imul
mov
mov
fsts
inc
fldl
cmpsl
ds
fs
xchg
dec
lds
sbbb
mov
in
dec
aaa
add
xchg
or
sbb
mov
mov
dec
fs
jno
xchg
sub
test
popf
pop
sub
mov
jle
sahf
lret
mov
std
shl
cmc
aam
mov
inc
cld
sub
imul
sub
sti
cli
inc
sub
popf
scas
shll
xor
mov
xor
repnz
out
pop
jno
sbb
pop
push
repz
mov
push
cwtl
ja
mov
mov
or
and
mov
andb
mov
lahf
mov
fwait
pop
das
push
mov
push
mov
push
inc
inc
fidivrl
fisubl
loope
jmp
cs
or
repz
stos
enter
mov
cmc
lahf
out
fdiv
into
and
cmp
push
cli
fwait
cmova
xchg
rcrl
adc
cmp
decb
dec
mov
pop
xchg
out
pop
pop
lahf
testl
mov
xlat
jbe
inc
mov
sbb
pop
jbe
push
setl
es
ljmp
pop
push
outsb
sub
shrl
ljmp
out
pop
outsl
shr
sbb
mov
xor
lock
push
test
or
jno
cmp
orl
dec
adc
cmp
pop
xchg
xchg
push
xchg
rorb
and
lock
jbe
into
pop
mov
pop
arpl
lcall
push
jmp
xor
add
dec
int3
shll
cmp
pop
repz
adc
mov
xor
and
mov
xor
cmp
out
pop
cmp
mov
lret
std
or
jl
clc
xchg
push
jge
sbb
loopne
notl
push
jmp
push
jg
xchg
movsl
pop
mov
push
mov
test
hlt
je
lea
push
cmp
jg
out
pop
in
popf
in
xchg
sti
push
and
cld
loope
aas
adc
dec
in
bnd
fidivrl
push
cmp
pop
daa
cmp
movsb
in
adc
shrl
data16
ret
or
jae
jg
xor
fadds
xor
fucomp
stc
roll
daa
pusha
stc
std
add
cmp
mov
dec
jno
dec
jp
data16
int
fs
iret
scas
xchg
ja
cmp
adc
loop
roll
jecxz
xchg
inc
scas
outsb
fistpll
int
imul
sub
int
pop
insl
out
dec
jecxz
add
scas
subl
notl
pop
xchg
daa
jns
xchg
stos
inc
fdivl
addb
push
inc
cli
pusha
lock
inc
sti
adc
dec
push
jo
adc
lcall
int
mov
lahf
dec
cmpsb
cmp
lcall
push
aam
xchg
rorb
popa
push
ja
test
arpl
movsl
inc
cmp
jmp
dec
pop
int3
fcompl
ficompl
sub
pop
sub
jp
repz
add
cmpsb
and
xor
flds
dec
pop
into
jnp
jnp
xor
fs
mov
fidivrl
push
xor
pop
mov
pop
add
cmc
xchg
pushf
cmp
imul
loop
jnp
popa
subl
loope
sub
xchg
sub
push
xchg
mov
rcr
and
sbb
xchg
les
rorb
jge
add
xor
adc
and
dec
fsub
imul
pop
sub
mov
aad
xor
inc
xchg
loopne
repz
ret
mov
in
and
cmpsb
jo
shll
xor
mov
push
test
inc
xrelease
aam
cmp
pop
subl
adc
popa
pop
mov
aam
testl
dec
decb
and
push
jmp
cltd
and
inc
pop
out
push
add
inc
xchg
jle
addr16
mov
js
or
lret
push
js
loope
jecxz
mov
lcall
sub
push
push
shrl
jg
mov
xchg
adc
cs
xor
mov
shrl
aad
adc
jl
aam
push
mov
aaa
jo
decb
push
mov
icebp
sbb
fwait
lods
adc
fs
xchg
pop
mov
cmp
cmpl
dec
and
cli
adc
xor
push
and
mov
xchg
mov
rclb
and
subl
xor
stc
dec
fdivrl
xchg
out
lock
push
lret
add
js
movsb
test
or
ds
mov
dec
cmc
out
mov
stos
es
pop
pusha
jle
pushf
adcl
push
xchg
jae
in
pop
into
sbb
loopne
into
sbb
or
mov
inc
mov
lock
dec
mov
xor
loop
nop
fdivrs
sbb
sub
rolb
cwtl
adc
insl
aam
sahf
adc
mov
shl
jmp
sti
out
pusha
mov
int
daa
mov
pop
cmc
cmp
iret
inc
data16
push
sahf
push
push
ss
mov
out
popa
icebp
sbb
jo
push
mov
xchg
sub
mov
or
jp
jecxz
cltd
xchg
sbb
dec
lret
jne
scas
jmp
mov
dec
ds
jbe
xlat
loop
dec
and
out
test
inc
xchg
jmp
ljmp
int
aam
inc
out
or
push
and
mov
and
inc
sbb
jge
lock
data16
adc
push
test
fldcw
dec
and
cltd
or
add
fstpl
add
or
daa
rep
mov
adc
cmp
jg
or
lds
call
jmp
jmp
in
test
ja
call
xchg
mov
loope
aad
movsl
ret
pop
xlat
xchg
push
aad
pop
repz
clc
inc
mov
and
jbe
stos
xor
testl
lahf
and
sbb
jge
cmpsl
cmp
pop
testl
pop
movb
adc
mov
imul
fsts
insb
push
add
scas
mov
mov
dec
test
jge
add
lods
into
fbstp
insl
mov
shl
repnz
aaa
into
and
xor
in
lds
orb
inc
mov
push
leave
in
test
clc
ja
push
insb
rcrb
xor
xor
iret
push
fcmovbe
mov
arpl
add
iret
push
push
push
or
inc
lret
out
pop
adc
or
pop
enter
rcrb
sbb
dec
xor
shlb
out
hlt
adc
dec
hlt
dec
cmc
push
pop
ja
testb
fmuls
loop
in
popa
adc
push
jmp
in
call
sbb
dec
jno
xchg
cli
outsl
push
mov
rolb
add
fidivl
mov
clc
pop
fnsave
sub
lods
push
imul
testb
fsub
pop
into
sarl
aas
leavew
insb
aam
add
mov
mov
arpl
mov
lock
adcb
movsl
sti
mov
ds
xchg
push
or
sbb
ss
aad
rorb
cwtl
mov
pop
ljmp
mov
lea
sahf
mov
int3
call
pop
std
cmp
jnp
adc
mov
pop
xor
and
std
xchg
pop
xor
pusha
inc
mov
mov
cmp
xchg
add
or
mov
nop
dec
stos
mov
and
cmp
mov
push
xchg
sub
push
xor
mov
loopne
fiadds
mov
and
stos
cld
sbbl
std
xlat
out
mov
std
add
data16
outsl
in
lea
xchg
rcrb
popa
cltd
shl
cltd
or
xchg
mov
pop
pop
out
pop
jne
cld
jge
cs
sub
mov
push
jo
cmp
fstpt
mov
loop
or
dec
add
xor
aam
rclb
ss
mov
outsl
push
adcl
cli
fs
pop
and
cmc
ljmp
sub
nop
push
popa
or
pop
daa
jp
cli
sarb
insb
fs
jo
or
jg
addr16
push
or
inc
shlb
ss
lods
loopne
ret
pop
adc
nop
jne
pop
out
scas
cs
mov
dec
pop
jge
in
daa
xchg
mov
xor
lods
inc
jmp
out
inc
fucom
clc
inc
andb
inc
and
xsha256
cmpsb
nop
push
push
fcmovnu
out
xlat
jmp
mov
int3
mov
es
xor
mov
push
ficoml
into
lods
rorl
xchg
inc
cmp
fs
insb
add
mov
mov
cmc
and
xchg
dec
loopne
pop
adc
aad
mov
mov
push
push
ljmp
jb
mov
subl
imulb
cmp
pop
sbb
cmp
daa
loope
pop
inc
nop
gs
aam
pop
shlb
and
lock
sbbl
mov
mov
lret
mov
xlat
dec
les
stos
cmc
insb
cmpsw
popf
adc
cmp
mov
cmp
and
and
cli
incl
xorb
repnz
add
stos
andb
fnstenv
jbe
jne
push
sbb
scas
fnstsw
shlb
mov
xor
mov
stos
mov
aad
jge
push
fwait
in
fdivl
cltd
popf
inc
sbb
dec
in
icebp
mov
adc
and
and
or
cmp
and
xor
sbb
or
pop
test
loopne
pusha
test
push
les
std
nop
in
insl
push
es
mov
std
fwait
sti
xchg
mov
ret
sbb
and
sti
cmp
shlb
or
das
fucomip
pusha
sbb
fwait
or
jp
jnp
mov
jmp
add
or
in
fs
add
xor
shll
pop
mov
dec
adc
push
fcompl
rolb
lcall
or
dec
enter
adc
out
sub
push
sbb
adc
cmp
fmuls
ret
or
std
notb
sub
mov
iret
loope
mov
pop
repnz
add
dec
and
cmp
scas
inc
pop
pop
inc
sub
sub
fs
fsubrp
and
movsb
stos
inc
fdivrs
pop
stos
inc
movsl
xchg
jb
jmp
repz
adc
test
xchg
adc
out
push
out
and
cmpsl
mov
jne
cs
in
das
insl
lret
xchg
scas
cli
sub
mov
jo
push
jmp
repz
mov
and
fsubs
ss
ss
aam
add
or
cmp
xchg
mov
fmull
cmpsb
or
jns
ds
insl
mov
push
dec
cmpsl
cmc
imul
xchg
jo
push
push
pop
addb
xlat
insb
cmp
sbb
fcomip
mov
jle
dec
popf
push
test
repnz
sub
cwtl
test
daa
mov
scas
clc
inc
push
sub
or
repz
lret
xchg
push
push
cmp
sbb
repnz
insl
add
mov
sahf
into
fdivr
xchg
addr16
mov
mov
aad
mov
rcll
mov
pop
ss
aaa
mov
mov
jno
stos
mov
dec
push
jno
mov
cmp
add
or
cmp
add
add
dec
inc
xchg
daa
mov
popf
pop
inc
add
xchg
je
mov
cld
icebp
in
test
lret
test
in
lods
nop
daa
sub
int
or
arpl
sub
and
or
ficoml
aas
mov
sbb
adc
rol
mov
cwtl
fs
jmp
cmp
jne
cli
cs
push
imul
mov
mov
loop
inc
mov
cld
cmpsl
sbb
pop
cmp
jno
ljmp
notb
sbb
sbb
and
ret
xlat
nopl
in
sbb
push
sbb
push
inc
jo
or
aas
jne
push
jne
mov
inc
andnps
jle
cmp
in
mov
xor
cld
push
pop
lods
enter
push
adc
inc
push
int
mov
call
adc
fbstp
mov
test
rolb
dec
mov
int3
mov
sbb
out
orb
subb
sbb
popa
xor
addr16
mov
cmpsb
and
loopne
addr16
mov
xchg
add
cmp
pop
inc
fwait
jno
nop
and
ret
push
push
rclb
pop
fnstcw
sub
jno
test
fldl
cwtl
test
or
mov
aam
pop
sbb
mov
dec
cmp
nop
mov
call
sti
push
rcrl
and
cmp
push
aas
pop
inc
aad
inc
mov
mov
xchg
push
imul
inc
push
adc
xor
pop
sbb
push
ss
inc
loope
or
scas
mov
loopne
mov
out
sbb
mov
pop
pushl
mov
sbb
or
mov
pop
pop
mov
dec
in
bswap
and
inc
inc
push
and
mov
popa
cmp
cld
outsl
enter
int
ret
out
push
lcall
sahf
or
or
call
decl
xor
add
imul
mov
adc
iret
and
fimuls
sub
xor
test
je
push
xor
imul
sbb
add
scas
xor
and
xchg
imul
into
flds
cmpsl
xchg
aad
repz
inc
xchg
cmp
stc
fwait
scas
movsl
and
in
int
test
je
je
sub
ret
mov
inc
scas
rolb
out
jb
dec
mov
xchg
or
push
fwait
ret
sub
insl
sbbl
and
adc
pop
and
int
dec
in
push
aam
iret
mov
add
out
mov
int3
dec
dec
add
jle
push
lcall
cwtl
test
outsl
cmp
jae
add
out
and
lret
mov
jno
lods
cmpsb
mov
push
adc
lods
clc
nop
arpl
rcrl
pop
repz
fs
cmpsb
jge
pusha
clc
xor
mov
mov
mov
insl
lods
popa
outsl
into
jbe
outsb
das
fwait
mov
sahf
or
push
mov
inc
out
inc
push
xor
or
xchg
sub
lret
mov
mov
mov
sarl
test
and
jp,pt
cltd
inc
cmp
cwtl
pop
lods
xchg
and
or
in
mov
lods
inc
emms
xchg
sti
mov
leave
pop
loop
testl
cmp
mov
mov
scas
icebp
leave
out
push
sti
adc
or
lahf
gs
out
test
mov
repz
jno
xchg
cltd
lret
mov
dec
xor
rcll
loope
xor
int3
iret
lret
test
cmp
int3
aad
fisubs
out
push
mov
fimuls
fisttps
cmp
xor
jmp
in
enter
or
add
ret
cmp
sbb
jnp
xchg
cmpsb
sbb
or
pop
shrl
jecxz
cmp
xor
pop
jne
ret
rep
pushf
stc
jbe
xor
xchg
stos
lea
xchg
mov
sbb
into
mov
xchg
add
cs
pop
out
jbe
aad
sub
xor
sbb
push
lods
jns
mov
insl
iret
pop
mov
pop
lahf
pop
aam
dec
mov
push
call
andb
and
sahf
mov
stos
xchg
dec
jmp
hlt
pop
sub
mov
fsubrl
inc
sahf
dec
aas
dec
push
loop
fs
repz
xor
ret
dec
fldl
stos
das
mov
fisttps
add
mov
subb
xchg
xor
sbb
cmc
leave
into
cmp
call
inc
cli
outsl
push
aaa
xchg
js
bound
jne
lock
xchg
mov
scas
stos
mov
in
jne
push
and
out
jg
movsl
sar
ds
dec
sbb
mov
fsubl
dec
inc
push
sub
es
mov
xor
xor
popa
mov
pop
adc
cmp
push
hlt
pop
push
mov
mov
pop
dec
mov
std
ljmp
popf
mov
stc
sub
mov
jbe
int
push
ret
mov
add
in
icebp
rep
out
xchg
pop
mov
test
cmpsb
icebp
repz
jl
mov
add
stc
je
mov
fbstp
and
cmpsl
pusha
sbb
imul
add
mov
repz
adcl
fmul
mov
mov
ljmp
push
lahf
sbb
cmp
ret
pop
xor
je
sbb
dec
or
xor
pop
cld
xor
addl
pop
pop
cmpsb
cmp
mov
fisubs
ret
into
int
fwait
stos
cs
inc
cmpsb
pop
sahf
adc
leave
mov
mov
mov
lea
inc
push
nop
ret
pop
ret
add
loop
dec
jmp
xchg
mov
test
leave
cli
push
divb
pop
inc
mulb
inc
push
sub
rcll
add
and
push
rcrb
out
xlat
xchg
mov
xor
ficoml
cmp
je
inc
cmpsl
mov
push
jl
out
add
popf
fnstsw
pop
jnp
nop
insb
push
mov
jo
cld
lcall
push
out
jo
les
pushf
addr16
sbb
call
clc
jbe
sub
jmp
cmp
lret
pop
cs
or
and
mov
test
cli
or
push
fdivl
aam
dec
in
jne
mov
pop
out
nop
daa
dec
lcall
sbb
je,pt
jge
scas
stc
inc
sbb
dec
adcb
icebp
pop
jnp
cmp
or
mov
lcall
push
fs
int3
xlat
fimull
adc
cmp
pop
lock
or
js
in
out
pushf
cmp
daa
inc
fcoms
call
divb
shlb
mov
sbb
inc
orl
xchg
fisubrl
es
adc
out
cli
jbe
cmp
test
lods
pop
xorb
das
in
popa
inc
movsl
ret
mov
pusha
decl
fisttpl
sbb
arpl
xchg
inc
orb
add
xchg
inc
cvtps2pi
add
inc
inc
jns
jae
bound
into
aam
js
imul
push
repz
lret
dec
scas
cmp
in
fisttpl
hlt
mov
and
stos
outsl
mov
adc
push
sti
cmp
ret
add
push
nop
sbb
imul
into
xor
jmp
or
mov
addb
je
cmp
jnp
inc
jno
xchg
inc
negl
cwtl
rcl
insb
addl
popa
pop
testl
xchg
addb
pop
jp
imul
xor
mov
cwtl
pcmpeqd
sahf
test
inc
imul
aaa
int3
ljmp
ljmp
mov
jae
and
mov
and
jbe
or
jp
push
mov
xor
mov
inc
fistl
add
sbb
push
mov
pop
psubsw
movsl
fs
xchg
movb
mov
mov
repnz
and
mov
outsb
mov
icebp
dec
lea
or
push
cltd
out
inc
bound
cmp
ret
call
cmp
cmp
scas
inc
jns
and
xor
dec
pop
and
scas
mov
cltd
sti
mov
mov
imul
sub
sahf
mov
test
bound
fnsave
mov
mov
and
mov
add
mov
cmc
shlb
jmp
push
and
xchg
sub
fidivl
jnp
xchg
add
sbb
data16
sbb
inc
cmpb
inc
out
push
xchg
aaa
xor
mov
lods
shll
aaa
lret
push
outsl
mov
sbb
dec
aad
pop
push
and
out
les
ret
push
mov
jg
fdivs
into
dec
out
cli
push
or
enter
or
cmpsl
push
lret
xchg
dec
shll
repz
or
sti
jne
loope
data16
popl
jge
mov
test
in
mov
adc
jb
cltd
and
pop
cmpsl
imul
movb
push
jle
enter
fldl
imul
mov
ss
ret
out
sbb
jl
dec
mov
xor
adc
cli
jg
sub
xchg
mov
sub
stos
xor
repz
xlat
popa
sbb
nop
or
sub
aam
lds
pop
sbb
dec
jle
sti
mov
aam
lahf
daa
xor
dec
leave
mov
jae
scas
fwait
jl
js
pop
mov
into
add
rorb
cmp
bswap
mov
inc
mov
ret
rolb
inc
outsb
ret
ds
movsb
outsl
fcmovnu
xor
sub
fnstsw
stos
xchg
pop
xor
mov
inc
ret
pop
adc
addr16
mov
aaa
inc
add
movsl
jbe
ret
inc
je
jns
cmp
into
iret
xchg
cmp
adc
ret
dec
mov
and
or
in
sub
psrlq
cmp
popf
jecxz
sbb
in
pop
movsl
mov
cld
adc
mov
add
mov
dec
call
mov
imul
mov
hlt
push
jge
sub
iret
fistpl
sub
call
mov
in
pop
pop
sub
das
popa
push
adc
or
popf
shll
pop
ds
pop
pop
mov
jl
sbb
xchg
pop
xor
add
cmpsl
ret
inc
jp
in
test
arpl
repnz
xchg
arpl
mov
xchg
inc
inc
cmp
or
vpaddusb
mov
mov
nop
xor
xchg
add
out
inc
fsubrs
dec
pop
adc
sub
loopne,pn
mov
movsb
add
add
outsl
ret
andl
fwait
cmpsb
fistl
jbe
dec
icebp
arpl
lcall
jne
sbb
pop
idiv
pusha
xchg
add
cmp
cmpsl
movsl
ss
push
dec
mov
pop
fsubrs
mov
jnp
jmp
and
cmc
punpckldq
lcall
stc
je
jmp
fsubl
neg
xchg
in
cld
leave
lahf
aad
test
xchg
test
mov
xor
scas
test
test
pop
outsb
fldl
mov
aas
sub
mov
push
mov
pop
repnz
add
mov
jbe
cmp
jb
pop
std
dec
add
mov
mov
repz
jle
sbb
jbe
int3
arpl
stos
xchg
mov
adc
xor
or
sub
cmp
inc
sbb
or
jae
aaa
push
sbb
dec
mov
jg
mov
test
sahf
xorb
add
mov
bound
sub
out
test
sahf
adc
aas
dec
iret
xorb
mov
mov
ret
jp
adc
mov
scas
inc
mov
inc
addl
mov
int3
outsb
enter
dec
into
and
addr16
inc
and
popa
call
fs
jl
adc
mov
sbb
insb
push
sbb
es
jge
inc
repz
dec
icebp
int3
and
inc
push
scas
incl
jnp
pop
push
pop
adc
in
clc
add
arpl
push
fimull
lds
push
ret
in
xlat
fucomi
mov
jbe
cmp
incl
sahf
int
insb
add
ret
ret
sub
push
mov
inc
xor
sub
movb
adc
jl
cmpsl
inc
testb
andb
imul
mov
flds
rol
adc
add
push
xchg
xchg
jmp
inc
fcmove
xchg
call
pop
jmp
fsubrl
xor
sbb
test
mov
arpl
test
out
fwait
aas
adc
xchg
ja
call
in
push
jnp
pop
mov
leave
pop
jmp
xchg
dec
and
jge
jnp
fisubs
mov
lods
mov
cli
mov
add
or
stos
cmp
jl
aas
adc
ja
sbb
xchg
sbb
fsubr
mov
inc
mov
jg
cwtl
iret
lret
mov
les
popa
mov
les
dec
and
dec
mov
into
sub
dec
cmp
lds
inc
fmull
inc
std
js
mov
push
xlat
shlb
test
adc
and
int3
arpl
adc
dec
cmp
sub
pusha
es
cmp
int
loopne
jl
pop
inc
mov
push
mov
and
and
mov
movsl
les
cmc
add
sub
and
cmc
addb
mov
movsl
dec
push
inc
mov
shrl
pushf
cs
pop
cmpsb
xor
in
ja
push
js
adc
lcallw
mov
mov
lret
add
lds
jp
xchg
mov
jmp
adcl
cmp
fldt
cmp
loopne
mov
orb
xchg
jns
lea
mov
mov
or
lret
lds
and
dec
lods
adc
daa
data16
jne
les
cli
jl
scas
filds
stc
pop
mov
pop
mov
fcmovu
jb
leave
and
dec
adc
mov
xor
pop
cmpsl
faddl
aad
leave
mov
pop
mov
push
fs
add
adc
fnstenv
xor
mov
mov
jecxz
sbb
call
xchg
iret
pop
push
xchg
mov
jae
in
mov
stc
sub
jae
shlb
rcr
add
jp
adc
push
mov
rclb
sub
pop
sbb
push
inc
inc
mov
xor
stos
pop
repz
sub
addr16
movsb
push
out
mov
dec
hlt
mov
shll
xor
shll
cli
xchg
xor
ljmp
jae
inc
push
jecxz
adcl
pop
shrl
test
jl
ljmp
push
or
fcomip
or
test
int3
aam
stos
xchg
push
loopne
xchg
insl
mov
int3
jb
push
fimull
or
jns
js
and
jmp
loop
repnz
mov
andb
adc
adc
decl
lods
add
add
aad
in
cwtl
mov
repz
divb
hlt
mov
roll
or
mov
add
xor
sub
stc
jecxz
and
cmpsl
cmp
xchg
jg
popf
das
fwait
xor
int3
dec
cmp
into
das
arpl
enter
out
mov
mov
xchg
ljmp
arpl
push
test
sahf
mov
or
shl
xchg
pop
or
and
mov
cmp
xor
mov
stos
or
xchg
out
push
jge
mov
mov
sahf
or
nop
pop
imul
inc
loop
mov
bound
lret
ljmp
shlb
mulb
pop
addl
add
icebp
fsubrp
arpl
push
sub
cmp
adc
pop
inc
pushf
int3
jo
shll
inc
pop
loop
xlat
mov
or
les
sub
ret
imul
pop
lds
iret
dec
mov
dec
add
subl
subb
push
mov
cwtl
jg
adc
push
adc
push
fxch
cs
lods
ljmp
mov
sub
loopne
adc
mov
clc
mov
sub
lods
xchg
mov
test
dec
fidivl
out
inc
lcall
into
jl
aad
push
dec
add
mov
mov
adc
stc
dec
xor
xchg
xor
movsl
add
sbb
mov
cmc
mov
jmp
ret
lea
iret
mov
fisttpl
movsl
dec
and
adcl
mov
loope
cmp
xor
in
cmpl
adc
pusha
xchg
cs
test
mov
daa
mov
dec
bound
daa
sub
sub
outsl
mov
jle
cmp
pop
xor
pop
jecxz
xlat
cmp
rol
ficompl
add
aaa
jl
cmp
mov
mov
stos
mov
cli
stos
in
inc
ror
mov
stos
movsb
sbb
hlt
lds
xchg
lds
push
div
jl
call
stc
jae
fwait
xchg
inc
and
in
jno
push
mov
xor
xchg
mov
add
xchg
rclb
sub
lods
stos
sub
lds
imul
inc
leave
fcoml
jae
dec
mov
push
sub
subb
and
mov
xchg
jl
call
imul
bound
inc
les
jne
int
in
add
fidivl
mov
aaa
adcl
loopne
adc
int3
jno
test
pop
jno
mov
int3
arpl
dec
hlt
adc
outsl
cmp
mov
loope
cwtl
inc
xchg
mov
insl
cltd
popf
or
mov
jg
fidivrl
hlt
cmp
test
jo
mov
and
outsl
mov
rorl
sbb
dec
outsl
loop
mov
sbbl
fst
repnz
jecxz
sub
pop
mov
mov
or
sub
mov
sahf
sbbb
or
xor
jge
test
push
fwait
lcall
mov
addr16
jb
aaa
and
dec
fisubrs
or
and
push
push
js
test
test
shrb
xorb
mov
rcll
lret
fs
aas
jecxz
daa
mov
fisubrs
movsl
sub
jno
jno
jp
daa
push
in
mov
btc
das
sbb
sub
xor
jnp
jecxz
xchg
in
inc
mov
jge
shlb
lahf
out
inc
les
or
inc
xor
popf
bound
fsubl
data16
push
andl
inc
adc
cmpsb
ret
fimuls
dec
dec
xchg
inc
jle
mov
xchg
adc
mov
jno
xor
nop
clc
push
out
mov
jg
push
aad
leave
mov
insb
xchg
or
sbb
add
jne
aad
sbb
mov
jg
and
addr16
mov
int3
xor
push
dec
std
adc
push
pop
aaa
int
jmp
jmp
adc
xchg
lods
mov
cmp
push
vpperm
scas
mov
mov
leave
pop
adc
mov
les
sub
movsl
test
out
xchg
xor
test
int
or
xor
mov
lcall
clc
mov
push
fimull
xchg
adc
dec
out
js
sub
cmp
out
sbb
fldlg2
xchg
mov
push
pop
js
mov
jl
and
xchg
and
imul
int3
push
jno
inc
jmp
or
fdivrp
pushf
fnstcw
pop
and
jecxz
xor
jmp
inc
mov
ds
cmp
push
lock
mov
jbe
jmp
dec
andb
jl
cs
mov
gs
jecxz
daa
into
jmp
sti
loopne
pop
test
xor
mov
scas
xor
in
inc
mov
shll
into
repz
dec
out
push
es
outsb
xchg
fidivrs
jo
inc
xchg
add
xor
js
sbbl
loopne
daa
jp
fsubr
orl
mov
push
and
out
daa
or
add
mov
lods
sti
shlb
lcall
fwait
pushf
push
movsl
add
xor
sahf
jno
std
cmp
cmp
insb
inc
int3
pop
subl
mov
loopne
outsl
adc
dec
mov
pop
testb
cmpsb
imul
sub
std
pop
jnp
cmp
jo
repnz
in
test
sub
xchg
into
push
sbb
cwtl
lea
adc
mov
sbb
es
lods
sub
mov
ficomps
add
jl
cli
in
inc
lahf
push
jnp
xor
mov
nopl
adc
cmp
pop
mov
lock
cmp
pusha
or
or
out
mov
int
push
clc
cmp
push
in
pushf
pop
dec
or
jmp
in
mov
mov
push
fnstenv
pusha
xchg
jl
out
bound
sub
test
and
iret
and
gs
adc
push
popa
xchg
jecxz
xor
xchg
pop
push
icebp
lods
pushf
in
and
gs
pop
loop
fsubs
sbb
dec
inc
jg
test
mov
add
pop
add
pop
xchg
out
add
pop
mov
movups
insb
inc
jb,pn
add
push
and
mov
mov
scas
mov
mov
xor
jmp
enter
sarb
xor
adcl
pop
int3
lret
nop
lret
jmp
lcall
sahf
in
popa
clc
pop
mov
push
aas
clc
cli
or
jae
adc
repnz
push
mov
pop
and
sub
and
and
xchg
fldenv
push
mov
lock
mov
sbb
sbb
lcall
and
rcrb
sar
nop
ljmp
daa
fnstenv
idivb
fidivrl
hlt
lret
jb
or
sub
pop
stos
lret
imul
loopne
jne
loope
stos
addr16
xor
add
scas
push
xchg
fsubrs
sahf
stc
pop
call
sub
dec
and
cmp
push
sub
loope
in
mov
loop
mov
out
scas
orb
mov
popf
fistpll
pop
rorl
cmpsb
ret
cmpsl
nop
ficoms
sub
mov
jns
xchg
cmc
jle
push
sub
or
fcmovbe
hlt
or
inc
pop
out
test
pop
mov
mov
inc
clc
push
lahf
xlat
arpl
fldenv
fnstsw
sub
jl,pn
shrl
mov
add
xorl
mov
cmpsl
mov
loop
pop
hlt
xor
mov
outsl
divb
movb
imul
js
pop
mov
daa
outsl
sub
pop
mov
fcoms
add
daa
in
outsb
sbb
dec
jl
outsb
mov
push
sti
push
addl
leave
pop
into
dec
mov
jl
pusha
pop
or
stos
inc
dec
dec
jne
jbe
dec
in
xchg
mov
or
pop
cltd
cmp
jecxz
iret
adc
adcl
xchg
or
jle
ret
fbld
lahf
lret
inc
into
lods
mov
push
adc
xor
inc
cmp
jne
test
imul
sbb
xchg
inc
rcr
test
cmpsb
test
jge
clc
dec
sub
aad
push
cmp
xchg
enter
jle
sbb
rcrb
mov
data16
outsb
loope
add
jne
clc
adcb
cld
xchg
mov
js
stos
sbb
cmpsb
pushf
mov
mov
mov
aad
xchg
mov
jmp
push
pop
leave
and
sti
notl
sub
lahf
pop
jns
lods
xor
jns
out
mov
cmp
lret
pop
jae
adc
int
and
mov
adc
shl
push
daa
in
add
pop
xor
or
mov
aam
outsl
clc
hlt
js
cmp
push
imul
popf
add
xorps
icebp
shlb
mov
and
dec
xor
jl
mov
dec
sub
mov
and
test
in
lcall
push
bound
sahf
xchg
aaa
cmp
ret
adc
adc
addr16
js
mov
insl
shlb
in
push
jg
and
nop
inc
cmc
popa
fdivrl
into
mov
sub
jmp
xchg
mov
rdmsr
and
mov
sbb
cmpsb
jns
pop
repz
jle
int3
and
jnp
dec
in
outsl
pop
sbb
cltd
dec
pop
cmp
mov
daa
sub
sbb
gs
hlt
jp
fdivl
push
ret
out
les
adc
push
sti
xchg
jmp
add
sub
pop
popa
sub
sti
nop
movsl
cmp
push
xorb
daa
imul
cmpsl
sbb
mov
jo
in
dec
xor
mov
clc
and
in
xchg
cmp
and
push
rclb
adc
addr16
cltd
pop
insl
les
push
rorl
dec
incl
sub
pop
cwtl
push
sahf
ret
pop
cltd
clc
call
mov
in
pusha
subb
cmovs
and
fdiv
sbb
arpl
jg
das
addr16
data16
insl
insl
jge
sub
or
aaa
add
xchg
xor
lods
push
aaa
sub
cmc
pop
pushf
scas
mov
shrl
sub
cmp
out
mov
push
push
xchg
and
rolb
fcmovnb
xchg
lret
orb
push
cmp
fs
test
inc
push
push
fsubrs
je
int
and
nop
xor
iret
mov
and
inc
push
pop
or
pop
scas
lcall
gs
ja
jo
mov
imul
scas
dec
or
and
ret
add
dec
jecxz
rcrb
lahf
and
js
dec
jmp
jmp
loopne
shlb
xor
loope
fs
inc
push
js
lods
mov
les
mov
jle
fdivs
xchg
sub
fnstenv
and
xor
adc
xchg
ficoml
sbb
jmp
loope
lea
movb
lods
jbe
or
sub
mov
pushf
cmp
or
out
sbb
and
insl
mov
jp
cmp
inc
fnstsw
pop
sarb
fdivp
inc
add
pop
xor
jmp
aas
add
xchg
and
fdivp
in
xor
mov
inc
jmp
pusha
enter
cld
loopne
push
call
scas
aaa
hlt
adc
or
push
xorb
mov
pop
xchg
pop
repz
mov
mov
lret
loope
push
sbb
lahf
divl
sbb
andb
mov
jns
bound
fldt
mov
movsl
add
xor
push
mov
orb
mov
shrl
or
cmpl
sub
daa
xchg
out
shll
or
dec
in
adc
mov
mov
push
jb
xchg
push
mov
repz
xchg
add
mov
in
pushf
fildll
mov
addr16
push
ret
outsl
shl
add
sarb
push
dec
add
push
icebp
loop,pt
jbe
cmpsl
and
ss
jle
xchg
sub
mov
mov
mov
nop
test
fcomps
rclb
pop
cmp
dec
lds
into
test
sti
xchg
shrb
xchg
notb
push
jmp
mov
xor
dec
out
in
shlb
inc
loopne
cmc
ja
in
andb
xchg
cs
es
mov
fsubrs
jnp
xchg
popa
orl
adc
movsl
xchg
scas
jg
fisttpl
and
sub
fcomps
and
inc
jae
inc
iret
jb
popa
loopne
mov
cmp
mov
sbb
mov
in
out
imul
dec
insb
add
add
roll
and
scas
jns
sub
add
dec
lods
pop
int
inc
add
scas
cmp
push
push
cs
cmc
pop
test
andl
jns
dec
and
ficoml
xchg
clc
push
adc
add
xor
jp
pop
xchg
mov
cli
xchg
inc
sti
xchg
xor
push
mov
psrlq
pop
pushf
rolb
sbb
test
mov
mov
mov
push
adc
addr16
cmp
fcmovu
ret
jne
out
inc
pop
and
and
push
ds
bound
inc
enter
mov
pushf
lret
arpl
xchg
push
ljmp
jno
roll
jne
cmp
orl
lods
fimuls
test
pop
mov
iret
rclb
jge
mov
out
or
sbb
dec
sbb
daa
push
test
pop
ror
imul
mov
cwtl
add
je
in
test
lret
cld
push
xchg
pusha
adc
push
out
bnd
or
xor
fwait
and
xlat
push
mov
inc
fstps
jecxz
jge
inc
jno
mov
orb
or
xor
sub
cld
jo
imul
aas
xchg
dec
dec
fwait
enter
push
daa
fstpt
stc
nop
push
test
sub
int
daa
gs
fs
xchg
iret
xor
ja
cmpsl
sub
xchg
jnp
hlt
jecxz
ds
dec
add
test
outsb
fs
popa
or
mov
in
movsb
cmpsl
fwait
and
test
decb
ss
popa
push
pop
fcomps
aas
jo
out
mov
pop
xchg
mov
sbb
cmp
inc
repnz
mov
xchg
mov
lods
icebp
movsl
ficoms
cmp
sbb
cmp
mov
pop
sahf
sbb
sub
and
push
ret
pop
inc
jmp
imull
cld
stc
xor
sub
scas
push
sahf
sub
adc
inc
lds
arpl
xlat
outsb
and
xchg
mov
mov
dec
pop
pop
add
mov
repnz
lds
push
mov
insb
divl
pusha
add
sbb
dec
cmp
and
mov
xchg
fnstcw
ret
cmpsb
dec
loopne
les
bound
xchg
outsb
mov
pusha
cmc
mov
in
daa
inc
xchg
push
in
xchg
test
add
mov
inc
pop
int
cmp
push
stos
add
xchg
xor
pop
sbb
jne
rorb
mov
adc
sbbb
sarl
sbb
sbb
sub
jno
mov
xchg
xchg
mov
add
pop
in
adc
adc
or
dec
pop
ss
bound
adc
in
xchg
cld
fcmovnbe
out
lret
xchg
sub
mov
sarl
arpl
xchg
mov
cltd
pop
pop
push
jnp
pop
or
mov
add
iret
and
test
push
out
mov
mov
insl
adc
aad
mov
pop
push
sub
mov
mov
adc
mov
je
xor
xlat
sbb
pop
jmp
int
jp
add
aaa
mov
inc
xor
push
hlt
in
dec
mov
rolb
jo
push
filds
add
popa
je
fstl
repz
jae
jecxz
test
ror
push
pop
or
pop
shr
lds
lret
out
fsin
lods
inc
xchg
sub
cmp
sub
rolb
scas
lods
cmp
or
addr16
popf
or
xor
fs
filds
push
mov
jecxz
push
pop
xchg
mov
add
push
adc
ljmp
pusha
aaa
loope
gs
fisttpll
mov
jecxz
inc
and
add
or
stos
incb
sub
aad
push
inc
ss
dec
insb
xlat
inc
test
iret
out
xor
shrl
mov
mov
nop
setne
mov
sub
mov
sbb
fiaddl
fistps
or
dec
sbb
mov
jne
enter
es
loope
clc
inc
sub
adc
jle
push
mov
jmp
and
and
inc
in
mov
xchg
xchg
add
sub
cmp
dec
pop
add
and
jg
jbe
les
adc
scas
fwait
pop
pusha
xchg
sbb
iret
xchg
xor
mov
lea
pop
sbb
and
lahf
push
insl
or
mov
testb
push
psllq
and
jb
push
xor
movsb
scas
stc
dec
push
xchg
out
pushf
fiadds
push
mov
inc
push
dec
xor
js
push
fcoml
jnp
pop
std
adc
and
xchg
mov
int3
outsl
icebp
xchg
push
xchg
push
sbb
mov
mov
leave
lock
lret
in
push
ljmp
jno
xchg
add
mov
repnz
mov
ret
shrl
enter
sub
and
call
test
fbstp
fiaddl
adc
out
fsubrl
lea
rclb
xchg
jb
fwait
lods
clc
xchg
pop
cmpsl
add
adc
xor
add
lahf
xchg
add
je
popf
repnz
fsubr
test
adc
fisttpl
jo
cmp
es
lods
jmp
fabs
stc
bound
outsl
ficoml
xor
push
xlat
cmpsb
lock
stos
popa
lods
fadd
cli
lea
fcmovbe
cwtl
int
pop
repz
lcall
ret
mov
pop
je
js
inc
push
lahf
fs
push
mov
fsubrl
pshufw
nop
rcl
ret
fbstp
add
movsb
cmp
js
xchg
sub
in
ja
cli
movsb
mov
rcll
iret
outsw
or
mov
xchg
lock
jb
cmp
pop
adc
sbb
push
lahf
roll
mov
xor
cmp
fldenv
movsb
and
push
sbb
data16
pusha
fs
hlt
test
xchg
lock
andb
push
and
mov
dec
xlat
sbb
clc
in
xor
cmc
test
nop
aaa
addr16
jb
mov
mov
stc
xchg
xorb
sub
push
push
lock
leave
pop
xchg
push
arpl
jl
pop
adc
addb
cmovnp
dec
mov
insl
dec
popa
cltd
mov
inc
jecxz
cmpsb
in
icebp
enter
jle
mov
out
js
sub
ret
testl
inc
pop
dec
sahf
xchg
mov
nop
bnd
or
jo
ja
lret
mov
movsl
loope
lcall
or
sub
mov
mov
mov
add
shrl
mov
cld
adc
cld
mov
aam
inc
fldcw
adc
cmp
pop
into
mov
mov
fdivrp
fldz
mov
fs
dec
shll
lods
enter
lods
bound
inc
xchg
into
fnsave
pop
mov
jp
imul
mov
cwtl
and
fisubrl
sub
mov
pop
ret
hlt
cmp
or
es
in
add
lret
movsl
test
adc
cmpb
mov
clc
xchg
in
xor
or
mov
insb
bt
mov
and
clc
xchg
mov
jo
es
adc
or
cmp
fcoms
fmull
xor
in
inc
jbe
pop
jmp
push
test
fwait
xchg
sbb
pop
mov
das
iret
xorb
sbb
adc
popa
cmp
sbb
sbb
pushf
sbb
jecxz
xchg
or
leave
adc
es
mov
lods
icebp
int
repz
lods
mov
mov
lret
dec
pop
mov
fisubl
in
data16
fcom
jo
imul
es
out
movsb
add
mov
fidivrl
aam
insl
or
insb
jle
xorb
push
mov
or
test
adc
aas
out
xchg
lock
inc
mov
imul
jns
mov
jmp
dec
mov
mov
test
sub
call
test
mov
lds
inc
fs
xor
in
into
jo
iret
mov
mov
mov
scas
push
aaa
push
dec
ror
leave
in
rorb
jecxz
mov
ljmp
pushf
jg
xchg
xor
lcall
std
daa
cmp
mov
mov
pop
add
es
test
sbb
cmpsl
imul
jbe
sti
fcompl
imul
mov
mov
cmp
mov
mov
clc
dec
and
ret
cwtl
push
stc
adc
adc
test
pop
xor
mov
mov
mov
add
and
pop
and
cld
mov
rcrb
push
clc
or
add
mov
aam
pop
popf
int
cmp
inc
adc
stos
jp
adc
sbb
stos
sti
xchg
aad
lret
push
andb
ret
lods
pop
cmc
es
cmp
les
jns
imul
lock
ret
cmp
nop
outsl
cli
or
fstpl
fnstsw
bound
lret
jbe
lret
ja
pop
ljmp
xchg
fcoms
data16
dec
stc
sbb
push
adc
add
lahf
andl
cmp
dec
lea
dec
adc
iret
mov
sahf
mov
and
push
inc
ljmp
push
xchg
hlt
mov
sbb
mov
sbb
jge
aad
mov
jge
push
sub
imul
xor
mov
or
pop
cwtl
mov
int3
in
mov
pop
xor
and
sahf
pop
xchg
outsl
leave
rcrb
ret
fs
inc
pop
jae
cmpsl
addr16
jge
jle
inc
jge
mov
inc
sub
data16
pop
hlt
sbb
xor
lret
insb
fwait
loop
push
call
adc
hlt
or
dec
mov
push
push
sub
idivb
push
inc
cli
cmp
fadds
loopne
jmp
clc
fwait
sub
je
add
and
sbb
in
xor
dec
pop
cmp
and
or
xor
add
and
faddl
mov
out
and
dec
adc
jge
mov
cwtl
aam
stos
cmp
fucom
pop
ljmp
stos
push
cmp
and
mov
dec
ds
inc
in
jmp
cmp
sub
xor
cmc
jns
scas
mov
adc
and
das
inc
daa
pushl
int
dec
dec
test
pop
into
ss
repz
outsb
sti
out
test
sbbb
push
xchg
scas
xchg
xor
mov
mov
fstps
insb
test
cmp
imul
mov
jle
aad
sub
in
addr16
cmp
adc
inc
jb
cmpb
xlat
scas
imul
popa
sti
fisttpl
test
mov
adc
inc
sti
divb
dec
and
or
sub
jp
mov
jb
add
adc
rcrl
sub
mov
add
inc
aaa
xchg
and
gs
or
fs
xchg
sbb
and
adc
std
push
add
cmpsb
push
stos
mov
out
lea
test
outsl
ret
das
call
clc
call
jg
cmp
cmp
and
pop
mov
add
jo
fwait
sub
fadds
push
cli
xor
adc
push
in
int
cmpsb
lds
pop
mov
rcrb
pushf
dec
ficompl
mov
jne
inc
pusha
mov
mov
inc
jle
adc
jle
and
cli
push
inc
fidivrl
fistps
ror
jp
pop
inc
call
or
add
data16
cmpb
pop
subb
mov
enter
mov
inc
lahf
ja,pn
cmp
push
or
in
in
xor
push
mov
push
mov
push
outsl
outsb
lds
mov
sub
outsb
call
mov
xor
add
xbegin
outsb
leave
push
nop
adc
and
xchg
mov
and
ret
stc
mov
jp
sub
aad
nop
inc
std
cmc
and
push
mov
in
mov
mov
mov
sbb
hlt
xor
and
dec
fwait
sarb
hlt
mov
fisubl
cli
xchg
jmp
inc
mov
cmp
sub
xor
scas
in
scas
push
test
jno
mov
test
shrl
push
call
sbb
fiadds
cmp
dec
dec
adc
leave
outsl
shll
jecxz
in
mov
iret
aaa
ret
sub
inc
rorb
movsb
jge
cmc
cltd
subl
sbb
or
scas
cmp
jae
stc
xorl
push
xchg
aaa
push
ret
je
test
mov
in
rcrb
cs
pop
aad
mov
lock
lds
mov
repz
mov
adc
into
lahf
ss
psubsb
sbb
sub
mov
cmp
pusha
jns
add
test
push
fdivs
mov
dec
cmpsb
stc
and
mov
sbb
sbb
jge,pt
in
movsb
shlb
or
sub
sbb
sahf
in
scas
lcall
std
push
mov
mulb
ficompl
mov
inc
sbb
jb
ss
rcll
pop
xor
cwtl
pop
xchg
fs
inc
ds
fdivl
mov
pop
mov
pop
cmp
push
lods
insl
mov
xor
xor
jmp
sbb
mov
sbb
push
xchg
push
or
cld
push
repnz
aam
inc
push
push
icebp
aam
out
pop
and
mov
test
rol
pushf
adcl
mov
rorb
push
dec
pushf
inc
stc
movsl
mov
jnp
push
insl
xor
adc
sbb
xchg
sub
aas
or
jns
sarb
pushf
shlb
iret
out
sti
lret
mov
sahf
xor
mov
sub
aad
pop
pop
fadds
adc
subb
push
lea
pop
inc
shlb
loope
adc
imul
sbb
insl
add
xchg
jns
hlt
xor
ja
or
or
cli
dec
xchg
and
daa
mov
pop
pop
inc
lods
arpl
mov
dec
lods
pop
repz
stos
lcall
ds
push
push
in
dec
and
add
cs
jmp
daa
scas
mov
pushf
loope
pop
rcl
insb
addl
loop
pop
lock
aas
push
rcll
mov
daa
jle
add
dec
shlb
aam
ret
inc
mov
sub
mov
add
out
test
je
add
xchg
decb
mov
int
jge
mov
xchg
jbe
push
push
pushf
cmc
xchg
adc
fimull
xchg
xlat
in
and
dec
inc
negb
aas
movsl
mov
mov
lods
es
enter
pop
push
lock
add
adc
xchg
jbe
jno
inc
pushf
pop
sub
movsb
adc
ret
mov
fnstenv
sbb
nop
or
lret
daa
out
rclb
dec
gs
nop
aaa
sar
ja
cs
leave
and
loopne
fsubl
pop
lods
sub
xchg
mov
pop
pop
mov
add
dec
aas
leave
mov
cmp
xor
and
test
sub
mov
pop
mov
out
addl
daa
fistpl
mov
imul
and
xlat
into
push
xor
fucomi
sub
add
clc
adc
aas
mov
jnp
jp
cmp
and
clc
push
dec
addr16
cmp
das
call
out
icebp
adc
push
jbe
arpl
and
adcb
pushf
cld
mov
sti
lods
pop
outsl
loop
dec
mov
hlt
push
bound
lret
sbb
sub
pop
repz
push
jae
adc
lcall
dec
test
sbb
xchg
jl
sub
or
insl
int
pop
xor
cltd
insl
dec
mov
fisubs
lcall
into
inc
movsb
cmp
not
in
cmp
ret
pop
mov
mov
mov
andb
sti
cld
dec
mov
fcomip
js
or
xchg
popa
lcall
jp
or
nop
sub
rorl
push
mov
xchg
inc
int3
outsl
sarb
out
enter
inc
or
and
dec
jle
in
sub
dec
jae
cmc
dec
and
jbe
jb
xor
and
pop
fdiv
lea
jle
xchg
lcall
nop
jno
scas
mov
je
xchg
mov
cli
mov
dec
or
rolb
lds
push
jno
sbb
addl
leave
jmp
sbb
loop
lret
sysexit
or
sbb
mov
mov
clc
cltd
test
fldenv
test
aaa
andl
jg
inc
push
push
jl
sbb
fnstcw
push
dec
out
mov
imul
jno
ret
jnp
fsubl
or
testl
dec
cmc
or
mov
mov
pop
imul
pop
jg
or
pop
add
int
daa
jmp
mov
cmpsb
pop
xor
adc
mov
add
int
jae
pop
mov
sub
lods
dec
fcomps
dec
adc
sub
mov
push
push
xor
push
mov
jg
mov
sbb
movsb
gs
pusha
and
inc
mov
mov
push
cmc
outsb
test
ja
sub
push
mulb
scas
cs
int
fdivr
jmp
inc
or
cmp
and
fsubp
mov
int
sarl
mov
cld
mov
sbb
sti
pop
and
pop
aaa
push
fistl
dec
test
lods
fs
xchg
ds
adcl
add
cwtl
adc
aad
ret
test
in
mov
sub
push
cwtl
sbb
add
cli
arpl
sbb
pop
lahf
lcall
fstpl
push
push
hlt
xor
outsb
lret
rolb
fwait
test
out
jle
mov
push
shrb
popa
sbb
jb
sbb
xor
mov
leave
mov
fadds
test
or
fisubs
adc
push
rol
jae
mov
mov
mov
xor
inc
aaa
into
jb
mov
mov
lods
ret
lahf
and
xchg
jl
xorl
fildl
mov
aam
jg
outsl
pushf
mov
sahf
push
out
je
add
or
icebp
mov
and
add
outsb
xor
insb
fisttps
mov
imulb
xor
ljmp
xchg
loop
jnp
jns
pop
ss
cltd
inc
push
cwtl
mov
stos
cmpsl
dec
sbb
dec
inc
lods
mov
js
sbb
mov
cmp
mov
leave
shl
ds
dec
mov
movsb
mov
in
std
push
inc
data16
fldcw
xchg
cltd
adc
and
sbb
iret
add
inc
mov
push
xor
adc
gs
pop
in
xor
jle
and
mov
loope
push
jecxz
xor
push
popf
test
and
divb
insl
scas
adcl
add
ljmp
sub
push
adcb
xlat
ret
pop
popf
in
mov
clc
xor
inc
sbb
push
or
xor
push
stos
shlb
repnz
xor
xlat
lea
jle
add
mov
mov
into
sbb
repz
jmp
adc
fsts
sbbl
jge
arpl
pop
jecxz
dec
xor
daa
fcomps
sbb
dec
int
outsl
add
fbld
mov
dec
xchg
cmpsl
pop
fmul
adc
sbb
dec
cmp
mov
xchg
les
jnp
outsb
fldcw
xchg
mov
lret
fistpl
pop
dec
fiaddl
inc
into
mov
arpl
push
scas
and
xlat
icebp
mov
jge
pop
mov
cwtl
test
push
js
ss
sti
out
xchg
add
xor
mov
out
ret
dec
adcl
ss
popf
cmp
cwtl
lods
push
xorl
outsl
pop
imul
lahf
imul
push
test
mov
pop
jmp
aaa
in
pop
in
clc
and
std
ret
data16
mov
and
adcl
push
push
sbb
xor
push
cmp
aaa
shlb
jns
mov
push
jg
sbb
push
ss
dec
xchg
push
mov
test
leave
fnstenv
push
test
mov
sub
ds
and
inc
loope
out
imul
sti
push
fstps
or
adc
mov
jae
fsts
clc
push
call
test
enter
leave
pop
loopne
scas
cli
adc
imul
inc
fmull
in
in
push
dec
or
repnz
popl
cmp
out
leave
pop
imul
test
pop
out
xor
rclb
dec
cmpsl
in
xchg
sub
pop
adc
mov
add
mov
jae
cli
cmp
les
pop
es
sbbl
loopne
roll
pop
lcall
pop
outsb
cmp
iret
out
cmp
add
mov
or
dec
push
mov
imul
subl
enter
push
cmp
es
inc
pushf
lret
push
xchg
in
sarb
add
jecxz
jno
imul
icebp
dec
mov
ja
xchg
jge
and
jge
cmpsl
jl
push
outsb
adc
das
fcompl
cmp
xor
push
pushf
jae
out
mov
pop
pop
sti
adc
std
push
cltd
pop
repz
mov
cmp
fwait
xchg
scas
int3
out
mov
leave
je
je
lahf
jb
js
scas
jl
frstor
inc
dec
xchg
cmp
jg
adc
ss
jae
rsm
ficomps
ss
daa
sbb
add
sbbb
mov
mov
and
mov
or
jno
inc
mov
adc
sub
lock
mov
mov
arpl
push
xchg
xchg
scas
ret
add
dec
mov
push
icebp
out
adc
addr16
pop
dec
aad
mov
lods
lcall
call
mov
pop
into
shlb
enter
mov
ds
in
bound
or
inc
inc
jp
test
hlt
in
or
adc
inc
push
and
mov
rolb
mov
jle
fwait
push
ds
pop
push
xchg
lcall
mov
stos
xchg
imul
cmp
sbb
ds
xchg
ljmp
cmp
and
mov
push
xor
push
mov
enter
inc
dec
sub
les
loop
push
aaa
cmpsl
sub
bnd
inc
mov
jno
push
pop
aas
mov
xchg
mov
mov
mov
mov
push
arpl
js
sarl
int3
adc
add
xchg
fprem
iret
sbb
mov
daa
outsl
jecxz
mov
pusha
xor
xchg
add
sbb
ficoms
inc
xchg
sti
stos
subl
lock
push
mov
cmpsb
mov
xchg
shrl
jbe
push
rcrl
js
clc
rcrl
subb
loope
jg
rorl
add
shr
js
mov
mov
ret
fldt
jg
xor
mov
lcall
std
out
test
lret
js
outsl
cmpl
push
lahf
mov
lds
cld
mov
sub
sub
mov
jae
stos
inc
out
xchg
inc
mul
ret
push
call
mov
outsl
jns
out
xor
mov
fbstp
lea
mov
ja
adc
jge
popa
and
dec
xlat
jmp
inc
xor
cli
mov
js
mov
dec
call
mov
iret
data16
jno
enter
dec
push
xchg
insb
push
outsl
or
mov
rol
mov
scas
notb
and
dec
stos
inc
jge
xchg
pop
inc
push
push
ljmp
jno
fadd
xor
stc
or
test
lret
cld
xchg
cmc
mov
mov
cld
push
push
inc
movl
pop
sub
mov
nopl
outsb
xlat
insl
lods
xchg
insl
push
add
pop
into
sbb
mov
jl
out
push
call
fimull
and
iret
subl
sub
stc
cmp
loop
ljmp
jge
jmp
add
jmp
mov
sub
int
jg
sahf
js
lods
sarb
jl
cwtl
xchg
into
push
cmp
dec
arpl
mov
mov
fisttps
addr16
cmc
ret
or
add
mov
add
jne
pop
pop
cmc
js
pop
mulb
neg
std
mov
push
nop
std
xor
fsubl
pop
or
lods
ljmp
xchg
repnz
lods
bound
in
jg
popa
cmp
gs
mov
add
es
jl
push
adc
rorb
xchg
ja
outsb
in
pop
add
dec
mov
xor
lret
inc
pop
test
mov
loop
xor
push
or
imull
into
das
pushf
sub
mov
xchg
or
pop
jb
mov
pop
sbb
or
cmp
cmpsl
sbb
test
lret
cmp
cmp
inc
sbb
stos
cmc
mov
ds
repz
pop
xchg
mov
pop
fcoms
repz
jge
dec
ss
adc
pop
aad
xlat
sahf
sub
push
fidivrl
loop
sub
fistps
test
scas
jne
pop
xor
and
cmpsb
psrlw
xlat
cwtl
sub
or
pop
xchg
pop
fisubrs
std
mov
mov
mov
scas
insb
mov
xchg
stos
adc
sbb
cmp
jnp
mov
into
fimull
dec
sbb
std
fs
pop
dec
pop
lahf
sub
fbstp
sbb
aad
sbbw
and
cwtl
fsubl
mov
sub
rcrb
jne
or
or
daa
inc
testl
xor
pushl
repz
xchg
jp
inc
xchg
jp
sahf
fistpl
loopne
lds
pushf
outsl
push
dec
add
add
cwtl
xor
clc
in
and
test
pop
xor
and
fcoms
das
mov
cmovnp
nop
mov
subb
je
sub
mov
xchg
test
adc
pop
mov
xor
dec
leave
aas
ljmp
popa
bndstx
test
push
aaa
insl
fadd
outsb
pop
int
mov
outsb
test
enter
ficoms
stos
and
out
rcl
xor
adc
shll
outsl
push
ljmp
jno
mov
ret
inc
pop
cmc
fwait
pop
lahf
stc
stos
cmp
push
iret
push
fistps
pop
ret
fnstenv
push
notl
into
sbb
je
fbstp
push
add
repnz
fidivs
xor
movsb
in
adc
sbb
jl
ss
ret
lea
pop
sahf
stos
add
gs
dec
test
xor
lret
sbb
inc
dec
test
pop
ljmp
inc
clc
aam
add
sbb
stos
repz
mov
xor
icebp
insb
xor
pushl
push
outsl
push
sti
dec
add
cli
sbb
and
dec
loope
inc
popf
jmp
lret
jecxz
adcl
dec
hlt
mov
fnstsw
out
inc
mov
loopne
aas
sbb
popa
and
insb
rcrl
out
add
jle
insl
mov
fdivrs
push
add
nop
jnp
test
out
sbb
add
ret
add
in
jge
stos
inc
sbb
stos
push
frstor
mov
sub
lret
clc
rol
fs
xor
mov
pop
rclb
pop
call
sub
or
in
jp
insl
ror
dec
divb
loope
mov
loop
dec
notl
mov
xlat
decb
cmp
js
mov
mov
inc
daa
dec
sbb
mov
mov
xlat
out
jmp
adc
jnp
lds
stc
jg
xchg
push
or
jne
repz
ljmp
out
cmp
jno
rcl
mov
dec
jl
inc
mov
in
test
xchg
aaa
test
fwait
xor
les
das
mov
and
ret
adc
out
rorl
adcl
and
data16
jmp
jg
and
outsb
into
xchg
mov
pop
dec
sub
rolb
or
add
jl
aad
jno
repnz
mov
xchg
mov
xor
mov
rcl
xchg
test
add
ficoms
aam
push
cmp
and
pop
fwait
push
movntps
repz
adc
movsb
sub
sbb
adcb
push
push
mov
repnz
clc
lret
xchg
std
inc
stc
sti
out
rorl
push
leave
pop
mull
xchg
mov
movsb
add
sub
inc
leave
shll
into
mov
lds
lock
and
add
adcb
xchg
cmp
dec
lods
cmpb
aaa
into
cmpsb
arpl
jbe
inc
lret
jecxz
mov
or
insl
add
ds
xchg
fs
push
adc
pop
lock
rcrl
fcoml
jno
inc
js,pn
adc
and
inc
sbb
cltd
push
ja
clc
and
lock
xor
adc
xor
mov
push
out
int
faddl
aas
les
jne
daa
popa
data16
test
test
sbb
and
roll
imul
pop
ljmp
jno
in
sub
mov
sbb
cmpsb
int
push
call
xchg
sub
lods
add
das
add
lods
mov
jno
cmp
sbb
lock
sub
cmp
stos
push
push
sub
cmpsl
jne
push
cltd
clc
mov
jns
jg
lods
mov
add
jg
push
push
hlt
mov
mov
mov
lcall
callw
fsubr
xor
xor
lret
mov
negl
rcrb
inc
je
jmp
push
nop
pop
nop
jecxz
subl
ret
xor
cmp
imul
xlat
fstpt
jae
repz
pop
out
adc
xchg
add
mov
lods
pop
sbbl
inc
int3
inc
repz
out
test
jne
les
test
inc
push
movsb
pop
ret
jl
mov
add
push
ret
add
xchg
xchg
sbb
je
in
enter
ljmp
lock
sbb
int
fdivl
adc
inc
scas
lret
fs
cmc
inc
pusha
jge
push
jbe
xor
dec
int
jl
and
ret
cwtl
aas
movl
int3
push
imul
xchg
adc
pop
mov
push
dec
xchg
imul
cmp
test
andl
dec
sbbb
sbb
dec
fstl
stos
add
inc
cmp
fdivr
lcall
sahf
lods
out
xor
inc
sub
fisubs
sbbl
aaa
pop
mov
stos
inc
hlt
fidivrl
loope
xchg
leave
call
dec
fistpl
fisubrs
aaa
into
jbe
add
push
adc
and
xchg
xor
test
daa
mov
adc
inc
and
dec
sbb
out
aas
adc
cld
lcall
jbe
popf
or
or
fsubr
xchg
mov
inc
shrl
inc
pop
jb
ja
aaa
xor
lock
and
mov
call
pop
mulb
aad
inc
cli
lcall
in
addl
leave
cli
bound
push
xchg
fildl
pop
pop
adc
mov
sahf
rcr
inc
jnp
push
fmulp
push
push
mov
aas
sub
movsb
push
sahf
xchg
call
scas
movsb
ds
jp
cld
or
or
mov
movsb
ljmp
les
xchg
adc
loope
pop
push
and
or
or
lret
jge
das
pop
cmp
cmc
dec
sti
sub
sub
lahf
lret
and
scas
dec
jnp
jno
dec
adc
cltd
insb
scas
lods
mov
int
ficompl
add
shlb
sti
push
lods
rcrb
add
mov
xchg
xor
pop
mov
lock
fisubrl
xchg
mov
cs
mov
or
pop
jle
sub
pop
pop
add
fildl
cmp
outsb
in
or
push
jnp
mov
push
ds
pop
jnp
adc
sahf
stc
jmp
mov
sbb
sbb
scas
mov
push
mov
pop
mov
mov
mov
repz
fidivrs
cmp
mov
or
pop
ds
cmp
fs
xchg
sub
rcrb
jnp
xor
pop
xor
icebp
gs
jb
and
push
cmp
jo
sbb
nop
push
test
pop
mov
mov
mov
ret
ret
inc
fsubl
xor
loope
jg
pop
addr16
out
ret
jb
rclb
add
sarl
jmp
mov
and
and
imul
cld
jbe
xlat
cmp
ret
inc
sti
or
sbb
cmp
ret
jg
xsha1
cmpsb
jo
add
push
dec
ret
repnz
xchg
sub
rcrl
pop
add
out
icebp
sbb
pmulhw
mov
xchg
rcr
inc
or
popf
cmpsl
mov
stos
in
into
je
data16
pop
xchg
inc
sbb
es
push
mov
icebp
mov
xchg
xor
push
sbb
shr
push
lea
js
adc
and
test
adcl
fcoms
out
jns
cmc
fsubl
daa
ss
pop
inc
les
pop
jae
clc
daa
les
dec
mov
test
aas
dec
pushf
lahf
push
inc
in
push
pop
imul
jle
inc
imul
movsb
dec
cltd
std
cltd
sti
imul
out
ss
in
adc
enter
dec
dec
jmp
test
pop
mov
adc
int
jbe
out
nop
daa
sbb
jmp
and
mov
cld
movsb
push
sbb
test
ja
pop
fnstenv
lret
outsb
mov
les
clc
mov
mov
push
pop
jb
shll
hlt
xchg
fstpl
lds
mov
rcrb
jecxz
lods
push
mov
mov
push
dec
and
mov
inc
into
daa
jle
fsubrp
enter
adc
sub
insb
orb
les
push
loop
ror
add
sbb
add
es
andl
je
mov
push
and
lahf
push
ja
xor
mov
insb
add
lds
dec
xchg
ja
stos
xchg
pushf
je
ljmp
push
adc
mov
out
mov
xrelease
ret
ja
sub
sub
inc
jb
jg
loope
test
cmp
subl
leave
les
xchg
xchg
sbb
jl
repnz
popa
hlt
or
clc
adc
inc
sbb
lahf
mov
or
lahf
pop
jns
iret
cmp
insl
mov
cmp
push
pop
jo
in
xor
in
enter
fcmovb
sbb
out
imul
scas
push
cmp
pop
testb
movsl
mov
insl
enter
mov
jecxz
and
pcmpgtb
test
mov
fwait
jl
jb
xchg
mov
dec
stos
mov
ja
shr
mov
pop
out
push
les
arpl
pop
add
pavgw
sbb
sbb
cmp
scas
jle
insl
lock
ja
cmp
out
inc
lods
dec
cwtl
push
inc
inc
rclb
jmp
pop
insb
int
sbb
and
push
mov
pop
fwait
inc
imul
call
fs
and
sbb
js
nop
dec
cmp
lods
jmp
fldpi
orl
cmp
pop
or
test
xchg
test
adc
test
xchg
mov
inc
push
mov
dec
cmp
aad
clc
push
adc
popf
cmp
pop
mov
mov
or
push
sbb
dec
pusha
mov
idivb
cmp
ss
arpl
push
aam
mov
cld
shll
sub
cmpsb
mov
mov
pop
outsb
jb
cmpsl
jge
xchg
mov
or
mov
and
pop
xchg
jbe
imul
xor
xchg
sbb
pop
outsb
add
es
jmp
je
frstor
ret
pop
push
inc
sahf
mov
xchg
sub
lret
fdivl
dec
jmp
jo
clc
pop
insl
sub
sub
pushf
icebp
cmp
cmp
sub
je
std
pop
push
mov
cmp
or
jae
cmpsl
mov
outsl
in
or
mov
cs
push
and
xor
cli
adc
sub
test
add
xor
popa
xlat
and
jb
mov
mov
jecxz
adc
cwtl
sbb
aas
lea
inc
add
push
dec
movsl
cmp
enter
add
es
push
inc
adc
sbb
rorb
cltd
scas
out
jmp
jmp
out
adc
sub
jl
cmp
adc
cld
pop
adc
sti
xchg
mov
les
test
pop
jne
pop
insb
int
lds
add
imul
cltd
pop
aam
dec
mov
js
fisttps
sub
aam
pop
pop
jg
shll
daa
push
imul
xor
push
xor
xor
or
call
lods
lock
sbb
in
fsubl
ljmp
imul
les
lret
pop
out
fdivrl
add
arpl
cmpb
mov
or
movsb
mov
xchg
sub
cmp
rorl
sahf
or
jne
pop
push
in
clc
mov
test
repnz
stc
in
stos
push
out
jge
insb
insb
cld
jp
jae
sbb
and
xchg
or
sbb
sub
lret
xorb
pushf
movsb
cmc
or
sbb
dec
in
mov
cli
sub
nop
cmp
lea
jns
dec
and
jle
lods
mov
les
push
or
pop
dec
inc
push
sub
out
movsl
jb
mov
movb
notl
and
xor
dec
inc
cmp
leave
in
rcl
inc
cmp
mul
push
out
fisttps
aam
jb
xrelease
hlt
pop
outsb
aam
xchg
pop
push
adc
loope
test
nop
hlt
hlt
aaa
int
adc
and
gs
stc
stos
inc
dec
cwtl
mov
je
sub
testl
jno
pop
mov
pop
scas
in
test
push
nop
xor
mov
insb
aaa
call
or
pop
lods
ficomps
repz
inc
mov
scas
imul
mov
jge
jle
or
rcr
out
xor
lahf
in
insb
inc
xlat
fnstenv
pop
insb
test
cmpsl
out
icebp
stc
and
add
aam
jnp
inc
lods
insb
sub
popf
sbb
and
cmpsb
inc
and
aad
fnstsw
push
mov
pushf
lock
sub
ja
dec
cs
scas
jno
and
xor
jae
sbb
roll
or
jnp
mov
repz
or
enter
sbb
sbb
sbb
ret
xor
testb
lret
jl
movsl
dec
aam
add
ja
cmp
mov
movzbl
sub
outsb
aad
and
pop
push
fwait
sbb
and
pop
cmpsb
sub
dec
push
lcall
or
cs
test
jg
jecxz
ret
ret
push
inc
test
jge
or
mov
pop
pusha
pushf
dec
inc
ret
mov
sub
stos
clc
je
sub
popf
pop
cmp
enter
mov
mov
jne
lcall
je
jle
cli
movsl
fstps
cmpsl
aas
jne,pt
cmpsb
cmpsb
lret
inc
lods
gs
cmp
mov
int
jmp
jne
frstor
mov
lahf
test
fs
adc
jle
shlb
loop
dec
bound
sub
in
fsubrs
jb
dec
out
push
out
xchg
lcall
pop
or
dec
xor
insb
aas
popf
test
push
rcl
aas
aad
xor
pop
out
inc
pushf
sub
fildll
cltd
jmp
ret
fbstp
js
cmpb
push
pop
daa
xchg
xchg
sub
data16
pusha
mov
int3
adcl
mov
jecxz
inc
pop
xlat
fdivr
add
xor
test
loopne
jmp
cmpsl
out
pop
out
sub
ret
filds
lahf
pusha
aaa
dec
inc
sub
add
aaa
outsl
xor
mov
add
xor
mov
inc
push
pop
outsb
push
fs
pushf
cld
or
icebp
imul
cmpsl
inc
add
inc
cmpsl
test
cmp
jnp
xchg
sub
and
dec
sub
aad
push
ss
or
cs
lods
cli
mov
call
es
in
cmp
mov
ficompl
das
fildll
je
int3
fidivs
fsts
pop
out
add
out
dec
dec
bound
fs
push
movsb
adc
and
xchg
jb
cld
mov
filds
jne
sbb
cld
inc
icebp
mov
inc
cmp
imul
push
popf
mov
ret
and
cmc
sbb
sub
repnz
xor
and
add
xlat
jb
sti
push
xchg
cmc
adc
xchg
push
jne
cmp
xor
and
jns
push
adc
clc
add
nop
and
xchg
mov
cmp
or
pop
cmp
dec
mov
mov
pop
jnp
pusha
rolb
xchg
out
bound
loope
dec
loop
loop
cmp
mov
ror
push
mov
lods
out
add
pop
pop
testl
arpl
add
test
mov
jmp
xor
mov
inc
jno
inc
je
in
xor
inc
cwtl
pusha
in
pop
fwait
sub
mov
push
aas
push
lds
cmpb
pop
test
pop
ljmp
push
hlt
adc
out
repz
adc
lods
ret
filds
and
popf
insb
sub
jp
cmpsb
xor
add
and
in
cmc
and
add
cmc
mov
and
inc
pop
leave
adc
cli
xchg
xor
jge
jno
imul
clc
movsw
push
sbb
adc
jmp
dec
and
cmp
pop
push
xchg
sub
cmp
arpl
mov
aam
inc
stos
and
cs
dec
xchg
rcrl
jns
mov
mov
jae
inc
fdivl
push
fisttps
jmp
or
lret
mov
xor
add
xor
dec
ficomps
xchg
imul
popf
testl
sub
push
mov
fsubrp
and
pop
adc
iret
es
push
lods
fsubl
fsubr
ss
or
leave
ja
push
out
jno
jae
push
popf
pop
mov
inc
xor
mov
pop
aas
push
out
inc
ja
test
inc
xchg
dec
cmp
loopne
nop
mov
and
sub
pusha
sbb
pop
cmc
add
out
stc
push
xlat
sub
xchg
cmp
lcall
cld
mov
or
nop
cmp
rcll
mov
mov
roll
xchg
loope
rcll
mov
lods
pushf
inc
inc
es
jae
adc
je
dec
or
popf
insb
adcb
es
fwait
xchg
pop
mov
cmp
sub
ret
or
inc
arpl
push
mov
sahf
adc
sahf
adc
mov
cmpb
stos
push
out
jno
shll
loop
or
or
lret
int
fcoml
stos
or
popa
enter
pop
das
or
test
pop
inc
arpl
mov
xchg
jp
aam
pop
adc
xor
add
xor
or
mov
dec
pushf
push
adc
xchg
in
mov
jle
push
lea
addr16
fs
jnp
push
addl
pop
cmp
dec
icebp
mov
repz
inc
sbbl
sbb
or
mov
bound
and
jnp
push
inc
add
and
stos
out
fildl
xchg
pusha
hlt
or
mov
in
inc
cmpsl
iret
add
jns
in
xchg
and
mov
notl
mov
inc
std
rcl
leave
fwait
cli
jae
mov
mov
dec
into
andl
xor
sub
pop
and
sub
add
push
pop
mov
es
cwtl
add
push
sbbl
xlat
fdivrs
mov
leave
repz
mov
or
xor
add
xchg
inc
cltd
stos
xor
adc
or
ret
das
hlt
int
mov
mov
adc
cmp
add
xchg
sbb
repz
or
cld
outsl
mov
mov
stc
ret
test
loopne
mov
int
add
pop
lock
ja
jo
push
in
sbb
adc
jo
mov
push
sbb
mov
addr16
lods
test
iret
cwtl
dec
mov
js
pusha
jp
adc
and
or
or
lcall
cmpsl
add
push
jb
pop
jmp
adc
fldl
mov
jno
jmp
cli
fisubl
jmp
mov
mov
sub
and
adc
in
out
push
lcall
shrl
mov
xchg
das
push
ficompl
sub
add
jp
mov
jbe
and
shl
ljmp
mov
gs
dec
mov
mov
xchg
mov
mov
pop
rolb
and
dec
in
jge
daa
cmp
pop
mov
jle
gs
call
cmp
adc
add
jmp
dec
inc
gs
lea
sahf
int
nop
fs
cwtl
testl
repnz
push
pop
xor
push
jb
xchg
sub
or
pop
cmpsl
jg
aad
mov
ud0
das
movsb
pusha
adc
popf
mov
fmulp
arpl
js
pop
fs
pushf
call
jb
jne
test
xchg
in
dec
xlat
shl
jo
mov
jle
fdivrs
iret
jmp
push
pop
adc
xchg
sub
ds
jno
insl
loopne
sbb
mov
sub
movsb
stos
push
and
mov
push
repz
iret
dec
iret
pop
inc
adc
jbe
subl
in
pop
jno
mov
sbb
inc
mov
and
lods
cmova
add
xor
or
and
or
adc
dec
pop
sahf
xor
mov
in
fcomps
icebp
lcall
mov
andl
push
gs
mov
roll
jp
lock
adc
and
loop
es
lea
mov
ja
mov
xchg
fwait
add
data16
mov
inc
adc
pop
ret
es
hlt
xor
adc
cmp
pop
lcall
imul
jno
xchg
mov
push
pop
js
out
icebp
iret
fnsave
cwtl
inc
xchg
mov
out
cmpsl
or
ja
hlt
jecxz
inc
cltd
in
cmp
fnsave
nopl
stos
sti
inc
mov
lods
xor
cmpl
fcomp
std
pusha
std
dec
cltd
inc
jp
cli
enter
xchg
jb
outsl
pushf
xor
dec
mov
mov
push
fsubr
cmp
or
pop
scas
popf
xchg
pop
repz
push
or
insl
stc
mov
dec
arpl
mov
cmpsb
cld
out
sub
sti
jne
inc
xchg
xor
sub
mov
leave
push
sbb
inc
stos
lods
xor
jmp
je
mov
inc
lret
dec
loop
push
xchg
dec
fwait
daa
cld
pop
or
jecxz
xchg
xor
rcll
xchg
sub
divps
pop
or
cmc
jnp
xor
add
dec
or
xchg
popa
add
mov
mov
out
mov
js
and
xor
jg
ficoms
rorb
dec
icebp
lods
enter
test
jo
das
jne
xchg
lcall
loop
jp
lods
jno
mov
fsubs
mov
gs
cs
mov
in
cmpl
or
sub
mov
ret
mov
jno
int
aam
scas
rolb
cmpsb
push
inc
mov
sub
push
stos
adcb
mov
sahf
clc
into
out
enter
and
mov
lods
inc
lcall
movsl
pop
ror
fs
mov
inc
mov
mov
inc
add
sbb
inc
jecxz
add
repz
aam
lods
test
inc
mov
fnstenv
mov
inc
pop
mov
mov
mov
outsb
xor
cli
dec
pop
mov
xor
clc
xchg
cmp
stc
out
inc
das
push
nop
mov
cmc
sub
xlat
idivb
bound
std
xchg
pop
mov
mov
and
stos
cld
pop
mov
sbb
mov
pop
xchg
cmp
xor
orb
add
mov
in
cli
shlb
into
mov
mov
out
test
adc
enter
iret
fptan
adc
cmpb
pop
ljmp
push
sub
mov
mov
xchg
jne
lahf
pop
push
and
mov
sbbl
pop
std
adc
mov
mov
push
push
mov
int3
lcall
push
adc
or
jg
mov
sub
sahf
insl
pop
xchg
sub
lahf
arpl
pop
push
scas
fcomi
shlb
pop
stos
aad
push
mov
add
cld
addr16
xor
add
shrb
adc
jp
rorb
mov
jo
imul
pop
ret
jnp
and
sub
mov
mov
adc
fs
imull
xchg
gs
enter
addr16
and
cli
pop
lock
mov
xchg
outsb
and
push
call
inc
adc
push
test
fnstenv
inc
mov
push
cltd
loopne
dec
add
inc
push
insb
addl
test
add
pop
mov
inc
lods
adc
sub
cwtl
xor
fwait
xchg
push
and
push
sbb
cwtl
popf
data16
xchg
mov
inc
push
or
mov
je
lret
cs
mov
das
jbe
pop
jmp
pop
add
add
pop
add
fwait
int3
cmp
pop
cmc
in
or
pop
pop
adc
cmp
adc
daa
lcall
inc
push
sahf
in
rorl
add
sbb
pusha
jl
jge
jle
popf
inc
sar
mov
sub
push
or
pop
cmp
fwait
cmp
movsb
cmpsb
jae
fadd
aas
dec
or
pop
loop
add
loope
xor
call
sbb
sub
dec
mov
xchg
call
mov
call
es
repnz
add
adc
or
and
dec
xor
dec
fisubs
xchg
inc
jns
mov
repnz
mov
hlt
adc
jne
cmp
cmp
adc
test
jle
jno
mov
ja
mov
cmp
inc
jecxz
sbb
insb
inc
jns
repz
subl
pop
fnstsw
mov
repz
test
sbb
jb
loop
ds
inc
adcb
pop
mov
pop
cld
rorb
loopnew
nop
lock
pop
push
lock
pop
dec
jo
fwait
mov
cmp
or
jecxz
fbstp
and
daa
mov
sarb
pop
outsb
fs
lahf
out
xchg
push
jnp
subb
xlat
outsb
cmp
pop
cmc
adc
xor
xor
push
mov
xchg
test
aam
dec
in
cmc
jge
cmp
out
xchg
out
xor
je
add
push
adc
pop
lods
cmpsb
in
inc
test
cmpsl
sbb
lcall
sbb
xchg
repz
pusha
xchg
and
dec
or
jo
cs
imul
insb
addl
cmp
mov
stos
incl
cwtl
xchg
push
call
fnstenv
pop
pop
mov
xchg
xchg
cmp
cs
mov
iret
pop
fnstenv
addb
sbb
mov
orb
int
mov
lea
or
mov
push
popa
jnp
aaa
iret
cmp
add
add
inc
outsl
jecxz
sbb
repz
andl
xchg
call
and
fdivs
ljmp
fsubl
push
mov
dec
mov
into
out
jecxz
mov
stc
mov
cmp
or
xchg
xchg
pop
inc
add
adcl
mov
imul
sbb
addb
xchg
sub
jne
inc
ljmp
jmp
sub
add
push
mov
xchg
pop
call
and
sub
je
jno
sbb
mov
addr16
sti
pop
ja
lods
xchg
push
jo
jo
adc
movsb
aam
push
dec
xor
loop
cli
sbb
xchg
mov
dec
dec
dec
push
sbb
imul
mov
fnstenv
pop
sbb
dec
daa
sub
push
jnp
das
pop
mov
jge
jmp
cld
inc
xchg
sub
push
not
lret
outsl
cmp
enter
add
and
push
gs
pop
bound
mov
leave
divl
movsb
stos
mov
int
add
push
mov
icebp
rcrl
imul
int3
adc
xor
rcrb
add
shrd
xchg
lods
aad
and
sti
out
addr16
and
lahf
in
dec
inc
enter
ds
loop
sahf
pusha
popf
push
lock
xor
lods
js
and
mov
sub
mov
divl
pop
jmp
jecxz
push
cmp
jecxz
xor
cmp
addr16
add
xorb
jge
push
cmp
das
adc
cmp
xchg
push
mov
cmp
stos
and
repz
push
test
into
lods
popf
fsubr
into
into
push
adc
fnstenv
xor
mov
aad
gs
faddl
adc
push
push
pop
push
out
push
rorb
mov
aas
add
fs
or
mov
sbb
xchg
xchg
jnp
cmp
adc
dec
jbe
shlb
dec
dec
loopne
xlat
repz
mov
shrb
pop
sbb
sub
push
dec
test
mov
jle
lret
sbb
jge
xor
dec
push
rcr
add
jge
cmp
add
ljmp
sbb
int
nop
jb
mov
test
mov
iret
out
sub
dec
jno
add
nop
shrl
fnstenv
shrl
sub
inc
pusha
sub
or
jns
dec
jl
test
jb
push
and
sub
dec
inc
repnz
xchg
push
lret
insertq
or
loope
pop
mov
mov
aam
dec
sbb
dec
xchg
push
repnz
add
cmp
push
shrl
push
jae
push
sub
jnp
outsb
inc
fnstenv
mov
sbb
fisubrs
data16
mov
push
and
cmc
push
test
sbbl
call
dec
cmc
cmpsb
sti
fnsave
adc
mov
mov
and
aas
rclb
daa
lea
xchg
call
mov
test
fwait
clc
pop
jnp
int3
xchg
aas
sub
fcoml
fucom
pop
shll
add
lea
mov
sbb
rcr
stos
sbbb
and
jns
jge
loop
mov
push
adc
enter
gs
stc
and
xchg
in
gs
cmpsb
xchg
sub
jge
fsubrs
clc
push
inc
popf
or
cmp
add
sbb
insl
inc
mov
sahf
insl
call
fsubrp
fwait
decb
sti
mov
divl
sbb
add
xchg
dec
ss
test
dec
fisubl
mov
mov
pop
cmp
adc
mov
lahf
lods
sbb
outsl
or
mov
insl
xchg
sbb
cmpsb
cmpl
jge
out
push
push
pop
adc
ds
sahf
aas
mov
pop
adc
mov
fldt
loop
mov
pop
mov
repnz
cmp
jmp
dec
push
mov
movsb
sub
fwait
sub
pop
push
push
in
aas
stos
leave
mov
mov
xlat
xor
inc
cld
xorb
cmp
push
fdivrs
outsb
ret
loopne
scas
pop
rcll
inc
aas
xchg
insb
mov
sbb
adc
sbb
lock
and
std
mov
adc
or
push
loop
pop
loopne
adc
into
rcrl
lds
rcrb
push
inc
fs
fisttps
subl
mov
stc
std
xchg
or
dec
cmpsl
mov
mov
sbb
test
lret
call
or
pop
std
dec
cmp
add
pop
mov
cmovge
cmp
xor
xor
add
ljmp
jp
cmp
in
shrl
inc
cmp
out
pop
inc
jg
push
imul
mov
pop
cmp
or
dec
fmull
std
hlt
push
sub
mov
repnz
mov
movsl
jns
sbb
hlt
scas
mov
scas
sbbb
cmpb
cmp
cmpsb
in
pop
insb
mov
out
pushf
push
fcomps
enter
mov
jg
cmp
push
in
xchg
xor
pop
pusha
mov
lcall
std
scas
mov
js
aaa
jae
test
mov
loopne
mov
add
fsubs
jecxz
outsb
mov
lods
ret
mov
pushf
les
lahf
mov
mov
inc
ficoml
push
xor
push
mov
jp
mov
ret
add
add
std
pop
scas
inc
es
leave
xchg
adc
xlat
outsb
hlt
add
jge
mov
test
movsb
add
push
shll
jo
xchg
sub
cmpsl
jmp
stos
mov
popf
iret
das
std
test
and
test
outsl
inc
adc
mov
popa
mov
dec
in
out
push
or
adc
cmp
inc
adcb
cmp
jb
mov
xchg
mov
sbb
and
push
xor
lret
xor
pop
dec
call
xchg
dec
shr
rcll
xlat
cmp
sbb
rcrb
push
and
mov
mov
jge
outsl
addr16
out
push
jecxz
jns
lea
mov
xchg
gs
leave
arpl
lock
adc
ret
and
dec
cwtl
lea
xchg
lahf
add
leave
adc
call
mov
ret
sub
bnd
sub
stc
pop
cmp
or
xor
inc
test
xchg
add
out
jo
mov
pop
pushl
or
sub
cli
lahf
mov
mov
out
pop
inc
and
push
arpl
or
stc
into
jns
mov
mov
mov
enter
out
mov
jecxz
push
mov
in
test
dec
aas
cmc
subl
das
lods
mov
add
cmp
fcmovb
push
add
sub
enter
xchg
lret
mov
mov
mov
adc
les
xor
mov
jle
mov
cmc
scas
cld
push
dec
fbstp
pop
cmp
adc
int
xor
out
mov
xlat
jl
xlat
repz
mov
std
lret
leave
sub
mov
mov
push
into
push
loope
rcrb
jne
mov
nop
add
pusha
ds
xchg
adc
jnp
outsl
loopne
ficomps
into
gs
data16
jge
in
ret
xchg
fsubl
jae
gs
pusha
sbb
cmp
jmp
pop
fstpt
addl
mov
xor
dec
clc
iret
adc
push
push
in
sbb
dec
nop
out
lcall
cmpsb
pop
mov
pop
fsubrs
jno
aas
cmp
js,pt
pop
sub
in
xchg
dec
mov
mov
or
pusha
jnp
inc
fsubrs
fcmovne
fxch
out
dec
out
pop
ds
cmpsb
pop
rclb
push
add
fiaddl
insl
int3
jg
push
rcrb
sub
lea
outsb
in
jbe
fdivl
sbb
rol
mov
les
dec
lock
mul
ja
mov
push
fdivrp
cmc
outsb
add
or
push
int
gs
arpl
outsl
enter
and
xor
mov
popf
roll
lret
test
repnz
jmp
sahf
cmp
or
js
and
aas
or
mov
mov
mov
lcall
mov
mov
xchg
rep
dec
add
lcall
leave
jbe
inc
test
adc
fs
inc
lds
dec
test
xor
dec
mov
and
mov
iret
xlat
out
inc
insl
aas
mov
nop
das
neg
xchg
repz
sbb
andb
pop
in
dec
jge
and
or
xor
mov
std
jp
inc
lods
push
lods
mov
mov
mov
fisttpll
mov
fs
pop
cld
sbb
cmp
push
incl
nop
xchg
jne
aas
xor
imul
xor
push
sahf
jno
cwtl
sti
and
sarb
and
inc
and
pop
dec
call
jge
dec
pop
testl
xor
xor
repnz
js
xchg
push
mov
add
repnz
ret
xchg
pop
clc
testb
fsts
addr16
ljmp
es
xchg
lcall
mov
or
scas
xor
or
ljmp
es
sbb
xor
subb
adc
pusha
cmp
pop
dec
pop
pop
pushf
xchg
mov
es
arpl
inc
jp
pop
and
mov
aaa
test
jb
fidivrs
xchg
and
xor
push
es
jae
dec
movsl
stos
into
pop
ja
int
cmp
adc
mov
call
sbb
cli
test
inc
orl
mov
pop
ja
inc
movsb
inc
bound
shr
sqrtsd
add
jae
adc
shr
stos
mov
mov
jp
ret
pop
and
jp
xchg
lret
cmp
insl
scas
ret
and
movl
out
xor
pushf
dec
push
push
push
adc
xlat
je
lea
push
aas
sti
fimull
mov
testl
sub
mov
sbb
outsl
mov
mov
mov
insb
xor
mov
mov
xor
adc
and
xor
test
jbe
adc
addl
cmp
inc
rclb
fsubrp
outsl
daa
jmp
lahf
stos
loop
fidivrl
fsubr
lret
adc
lods
into
ficompl
jle
leave
and
mov
test
in
ret
sbb
movsl
add
scas
push
or
imul
into
fs
fimull
push
sub
push
fsubs
xchg
aas
das
add
test
clc
lahf
fisubrl
pusha
add
ss
addr16
xchg
ret
fwait
push
bound
sti
sub
mov
insb
repnz
mov
outsb
jl
leave
jae
or
aad
scas
pop
insb
mov
in
push
push
adc
sbb
shlb
in
ljmp
test
jnp
jnp
inc
leave
popa
les
cmp
mov
in
enter
xchg
add
inc
fstpl
test
xchg
dec
scas
sub
ljmp
insl
cmpsl
xor
jb
aas
jne
add
mov
stos
fcompl
lods
out
or
testb
cmc
xchg
and
push
xchg
mov
repz
add
adc
mov
jecxz
dec
cmp
inc
jbe
xchg
pop
push
leave
pop
cmp
xchg
pushf
clc
cmpsb
mov
mov
cmpsb
push
int
rorb
mov
ss
in
sarb
mov
fst
imul
and
out
and
sub
xor
push
cmpsb
jp
js
in
lds
mov
mov
popa
clc
fwait
push
adc
imul
insl
xor
xchg
push
in
les
mov
aam
hlt
mov
inc
sbb
or
aad
jle
push
out
sub
mov
cmc
jmp
sbb
xor
or
ret
jl
mov
lret
sbb
sub
xchg
sub
in
jp
dec
aad
imul
sbb
call
or
and
add
dec
or
xchg
inc
cld
mov
mov
fiadds
clc
cmpsl
add
int3
push
shrl
lock
jmp
push
mov
jle
sub
fwait
cmpsl
ret
inc
jmp
in
inc
pop
inc
cmp
fstpt
test
insb
inc
adc
jb
fists
outsb
add
out
fcmovnb
cmp
fnstenv
push
dec
negb
movsl
cld
fisttpl
fidivl
rclb
pop
cmp
mov
ret
add
std
int3
jge
bound
inc
std
inc
inc
test
and
jbe
movsl
js
jnp
into
lahf
jae
adc
lret
pop
leave
cld
inc
repz
push
jmp
mov
ret
icebp
fs
mov
adc
sbb
inc
int3
push
add
inc
enter
hlt
in
push
rorl
mov
rcrl
mov
das
lahf
inc
jne
inc
lret
insl
cld
dec
mov
insb
lds
mov
jp
push
dec
addb
mov
push
xor
jns
push
fwait
xor
rorb
in
or
inc
xor
les
dec
dec
lods
aam
in
adcb
pop
fnstcw
xor
xchg
std
cli
and
add
pop
cltd
std
pop
std
xchg
dec
add
fldcw
ret
test
insl
or
and
popa
clc
mov
and
dec
test
mov
shlb
sub
inc
pop
clc
push
bswap
mov
iret
std
xchg
icebp
outsl
sbb
mov
ret
or
xor
pop
add
mov
loopne
mov
in
xor
sahf
mov
adc
inc
xor
adc
inc
mov
loopne
add
aaa
into
jmp
mov
push
test
lret
pusha
popf
cld
sbb
cmc
ficompl
inc
mov
imul
xchg
or
shrl
or
mov
lret
cmpsb
cmp
add
and
add
or
scas
and
cmpsb
xlat
sbb
pushf
sbb
inc
adc
inc
fdivr
fsubrs
and
jge
push
and
insl
les
pop
dec
mov
add
out
nop
loop
ret
cmc
cs
stos
pop
dec
sub
push
out
and
jnp
add
jp
popf
daa
into
and
addb
mov
add
mov
mov
push
sbbb
mov
pop
push
dec
inc
lret
add
jnp
jns
mov
mov
cmp
dec
gs
loope
rcll
daa
or
movsl
inc
es
push
ficoms
fisttpll
stos
pop
adc
xchg
mov
cwtl
lcall
cli
mov
xchg
and
jmp
ret
mov
es
jno
jns
bndldx
mov
cmpl
pusha
or
test
xchg
divl
cmpsb
cmp
ja
stos
inc
add
push
cmp
stos
movl
insb
xchg
cmp
int3
ret
pop
push
andb
fimuls
xor
lahf
mov
lahf
test
mov
jae
ret
popf
mov
in
in
jmp
and
popf
mov
cmpb
aaa
cwtl
xchg
add
aad
shl
xorl
aam
push
mov
hlt
outsl
add
repz
scas
fs
push
inc
call
mov
or
fcoms
mov
outsb
iret
in
cmp
pushf
inc
push
xchg
call
ret
lock
and
out
inc
dec
inc
cwtl
hlt
cmpsb
repnz
fs
ss
pop
sbb
lds
lcall
clc
imul
jp
pop
mov
xor
in
rclb
outsl
inc
pushl
clc
xor
push
aaa
shr
jns
pop
sbbl
mov
lods
jl
pop
jle
inc
and
arpl
addl
mov
cmp
dec
adc
push
or
push
push
inc
jmp
mov
cmpsl
mov
stc
mov
fwait
jnp
lret
stos
xlat
lret
popa
movsb
leave
outsb
xchg
loope
adc
mov
xchg
hlt
stos
fidivrl
sahf
jl
lods
cltd
test
lock
imul
sbb
sbb
jno
inc
cltd
imul
mov
pop
inc
jae
sub
loopne
add
cmpsb
in
sub
xchg
pop
push
sub
pop
mov
int
movsl
jbe
insb
dec
aas
mov
push
rorl
nop
inc
sbb
stc
push
daa
jecxz
nop
pop
fsubrp
ljmp
pop
sub
jmp
and
mov
rcrl
xchg
pusha
add
call
sub
sbb
jmp
subb
inc
stos
xor
and
les
jbe
adc
repz
data16
popf
cmp
inc
adc
lahf
shll
stc
inc
mov
mulb
push
rcrb
add
xorb
mov
popf
adc
and
ret
adc
stos
int3
hlt
mov
xor
unpckhps
jg
adc
loope
sbb
dec
leave
aas
movsl
mov
pop
dec
aaa
lea
inc
in
xchg
stos
test
popa
or
aad
ret
or
iret
ret
mov
dec
push
dec
shrb
cwtl
cmpb
or
xchg
out
pop
out
cmp
mov
xor
xor
ja
into
jb
inc
push
insb
out
jle
das
outsb
mov
test
sub
dec
pusha
data16
cwtl
nop
xor
ret
je
pop
sbb
adc
add
fs
cmp
rclb
ja
outsb
or
mov
lods
hlt
xor
rclb
das
push
push
iret
mov
lret
clc
pop
xchg
or
xor
in
out
push
daa
sub
lret
mov
push
pop
cmp
jo
push
addr16
into
sub
pop
and
in
addr16
cld
pop
pop
pushf
out
xor
mov
xor
inc
mov
mov
push
inc
jecxz
cmc
jnp
xchg
or
mov
and
leave
insl
and
mov
stos
jno
inc
arpl
sub
pop
outsl
sub
aad
mov
mov
aas
scas
lock
pop
stos
sub
fwait
stc
loopne
sub
push
inc
les
sahf
dec
int
fistpll
and
test
cmp
pop
jecxz
out
pop
ja
jecxz
movsl
and
jmp
lahf
loop
mov
test
pop
call
cmp
int
pop
pop
cmc
jmp
lods
mov
jl
cmp
xorl
add
aas
push
test
out
pusha
push
hlt
mov
fwait
lret
clc
loopne
iret
push
sub
mov
es
pop
fs
mov
cmp
xchg
psubsb
jp
repnz
mov
or
add
enter
scas
push
push
fsubrs
in
insb
cmp
outsb
dec
mov
xchg
sub
jno
or
sbb
xlat
mov
into
jnp
xchg
test
adc
xor
incl
imul
add
popf
mov
sbb
ds
jge
push
sub
mov
scas
std
mov
dec
arpl
fsubrs
inc
or
xor
leave
dec
sbbb
clc
out
in
xchg
js
add
xchg
sbb
mov
cltd
xor
insb
or
cmp
fistps
cmp
sub
repz
lret
cmp
jp
or
js
sbb
sahf
pop
sub
lcall
or
jne
fwait
push
mov
mov
push
dec
sarl
mov
ja
or
inc
dec
add
stos
lods
sbb
scas
jnp
testb
fistl
inc
pop
das
stc
xchg
sbb
xchg
mov
dec
je
or
mov
sbb
aas
loop
dec
ret
and
add
insl
repnz
cmp
mov
add
or
cmpsl
ds
mov
lds
mov
or
mov
dec
in
stos
lcall
scas
cmp
xor
lods
mov
or
add
push
call
jbe
repnz
jne
pop
push
ficoms
fildl
xchg
push
fwait
pop
xchg
hlt
test
push
mov
push
bound
mov
xor
xchg
sub
nop
mov
sbb
jns
aam
adc
imul
sti
js
ret
loop
cmpl
add
das
addr16
sbbb
aas
iret
push
sub
aad
xchg
or
mov
ljmp
or
mov
insb
add
and
sti
ss
mov
iret
dec
mov
popa
nop
arpl
roll
lahf
push
std
cwtl
stos
repz
cmp
adc
psrlq
es
cmp
and
das
es
mov
outsb
pop
or
jno
aam
push
push
mov
mov
addb
xchg
das
xlat
shll
push
pop
jno
pop
repz
xchg
push
xchg
add
add
sbbb
xor
inc
repnz
nop
imul
lret
jl
inc
xchg
out
or
sbb
lahf
mov
inc
mov
js
loopne
cmc
dec
into
lret
clc
jecxz
xchg
mov
sbb
ss
inc
test
out
movsl
sub
pop
inc
push
lods
sti
lahf
scas
or
lock
jbe
mov
push
sbb
lds
adc
push
mov
cmp
pop
shl
shl
stos
push
or
sub
and
aaa
test
fimuls
sarb
sbb
push
testl
add
xlat
cmc
add
icebp
inc
push
fucomi
jnp
mov
jecxz
pop
xlat
mov
inc
dec
popa
jb
sub
daa
sub
sub
icebp
mov
in
pop
mov
pop
jo
xor
sbbl
jb
add
dec
cmpsb
cmc
cli
mov
cli
dec
lret
lcall
inc
push
xchg
sahf
ss
es
fldln2
jl
shlb
outsl
popa
aaa
xchg
pop
xchg
sbb
lcall
cmpsb
cmp
out
hlt
sbb
inc
jbe
jns
ja
push
xor
fs
xchg
dec
mov
mov
sub
addr16
and
cs
call
add
push
outsl
jb
dec
xchg
lock
push
bound
aad
mov
lea
enter
mov
cmp
stos
or
add
outsl
sub
rcrb
inc
pop
das
es
ljmp
mov
int3
or
sbbb
mov
mov
mulb
lahf
or
rcrl
lret
or
ret
mov
adc
mov
pop
jb
mov
shl
xchg
repz
or
rorl
cwtl
loope
inc
leave
aaa
or
xchg
sub
mov
mov
fxch
push
out
cmp
dec
mov
sti
in
pop
xlat
add
ficompl
jl
insl
subl
sbbb
push
and
movsl
pinsrw
dec
and
push
dec
loope
clc
push
ss
pop
mov
pop
fsubs
cmp
cmc
pop
std
nopl
cmp
fwait
lods
sub
jns
adc
rep
arpl
int
lds
push
mov
insb
pop
jo
sub
pop
xor
dec
cmpl
add
or
sbb
sub
sub
jns
xchg
aam
fbstp
cli
and
shrl
mov
fldl
adc
dec
push
inc
add
jb
out
cwtl
in
mov
repnz
or
xor
mov
int
sub
sti
push
mov
mov
xor
or
std
jl
pop
mov
xchg
mul
add
xor
loopne
in
sbb
lret
push
mov
std
call
push
xchg
jge
jae
mov
push
adc
mov
push
push
adc
jg
inc
xor
int3
mov
fimuls
loop
add
adc
push
movsl
scas
test
cmp
push
repnz
sbb
popf
lea
jo
lods
popf
mov
div
int3
sar
sti
cs
jnp
enter
dec
sub
adc
ljmp
scas
fldcw
jp
scas
stos
test
fadds
mov
les
mov
xor
test
and
mov
pop
stos
aad
in
pop
roll
adc
mov
push
scas
mov
and
or
ljmp
add
movsl
into
dec
xlat
icebp
add
lods
mov
into
xchg
cmp
inc
stos
pusha
bound
sbb
push
inc
pop
dec
popf
mov
or
sti
ror
stc
sbb
inc
dec
pusha
mov
and
test
inc
out
test
loope
movhps
lea
nop
outsb
lcall
mov
push
jp
movsb
ret
mov
std
push
sbb
mov
outsb
and
add
es
insb
outsl
mov
fadds
popf
adc
in
sub
mov
mov
lea
test
xlat
mov
jg
pop
dec
into
fidivrl
movsb
repnz
test
std
jmp
outsb
mov
popl
or
or
sbb
mov
testb
mov
or
test
rcrb
xor
in
cmp
mov
cmc
les
je
pop
fnstenv
testl
out
or
inc
fldl2t
repz
movb
cli
in
filds
xchg
push
jae
mov
xor
mov
pop
stos
out
inc
ljmp
daa
cmpsb
xchg
ret
or
cmp
sub
adc
add
sahf
test
cmpsb
daa
into
jnp
stos
icebp
dec
and
fwait
mov
in
mull
mov
xorb
cltd
in
lret
popf
xor
imul
int3
push
cs
loop
dec
pushf
jl
dec
hlt
mov
sbb
insb
and
sbb
fdivrl
ficoml
push
cmp
setb
mov
push
push
mov
or
in
das
dec
adc
pop
xor
cwtl
das
sahf
out
sub
pop
shlb
mov
mov
adc
pop
mov
lcall
push
mov
sbb
xor
dec
adc
imul
lret
in
inc
mov
adc
pop
aad
rorb
push
mov
mov
test
ljmp
fcoms
cmp
cmp
pop
mov
add
jns
dec
cmp
adc
cmp
adc
push
push
pop
xchg
xchg
xchg
pop
jge
aaa
mov
mov
call
jle
ja
lcall
sbb
add
cld
int
mov
jl
mov
cmc
repnz
sbb
ror
fsubrs
aaa
rorb
jne
push
pop
add
jbe
xor
jle
movsb
mov
xchg
shlb
mov
pop
out
xchg
inc
testl
loope
adc
push
mov
pop
jns
insb
insb
add
test
loope
mov
psadbw
pop
cmp
adc
push
xchg
pop
mov
lret
push
mov
popa
and
ds
cmp
mov
in
xor
pop
cmpb
xchg
inc
dec
scas
dec
jne
add
jmp
dec
mov
pop
aad
addr16
lods
or
and
sub
nop
pop
mov
pop
fsts
aam
push
aam
and
sbb
xchg
cmp
add
imul
sbb
out
push
addr16
cld
xchg
jg
lds
push
sbb
pop
out
xchg
nop
daa
push
scas
jmp
fcomps
jno
mov
cmp
xor
sub
xchg
sub
jnp
mov
cmc
mov
jns
jbe
sub
lret
bound
daa
fs
xchg
add
rcrb
adc
or
jg
jecxz
mov
movl
dec
lods
fimull
mov
shll
outsl
pop
push
subb
imul
push
pop
jb
mov
cmp
popf
mov
dec
mov
jnp
push
clc
lcall
mov
jne
test
xchg
dec
adc
test
dec
mov
addr16
adc
dec
rorl
loopne
pop
in
sti
add
adcl
jnp
sar
mull
lcall
iret
xchg
popa
add
jge
shl
in
imul
jo
jmp
jl
jo
out
xchg
lret
jbe
shrl
fwait
out
insl
push
test
mov
aas
hlt
pop
jno
enter
dec
dec
push
cltd
in
stos
out
xchg
ret
shl
jmp
int
in
shrl
mov
mov
dec
xchg
or
jne
mov
fdivrs
faddl
mov
mov
add
inc
inc
je
jb
aas
testl
aaa
add
fstpl
fwait
fs
mov
add
insb
stc
pop
add
nop
push
ss
jns
mov
xor
es
mov
dec
xor
and
xor
jmp
cmp
aaa
add
stos
and
clc
lea
jmp
cmp
adc
mov
sbb
fs
mov
add
push
ficomps
cmp
repz
pushl
pop
push
test
mov
and
inc
xor
dec
mov
jl
sbb
dec
mov
int
idivl
mov
daa
inc
xlat
cwtl
mov
leave
mov
ret
iret
test
push
aas
in
jno
pop
enter
shr
inc
clc
sahf
xchg
push
mov
jb
test
nop
sbb
cmpsb
pop
aaa
into
nop
iret
mov
push
lcall
lret
sarb
push
xchg
insb
loop
pop
fwait
lea
arpl
push
sub
mov
or
flds
ret
fisubrs
shl
push
popf
cmpsb
sbb
shlb
inc
mov
stos
mov
or
pop
xor
jl
mov
lds
repnz
sub
fcoml
je
mov
scas
pop
or
pushf
aam
sub
mov
daa
mov
stos
jne
in
jne
push
and
idivb
add
pushf
jmp
sti
adc
push
mov
dec
loopne
enter
in
mov
or
pusha
test
adc
imul
movsl
lret
push
imul
dec
shlb
cmp
int3
or
repnz
add
inc
jge
addl
mov
addr16
pop
inc
mov
mov
sti
xorb
xchg
sub
repnz
repnz
insb
inc
ss
mov
push
adcl
es
pusha
xchg
jmp
out
pop
mov
ss
rcrb
xor
roll
mov
data16
loop
and
jbe
cld
sub
sbb
cmp
cmp
and
push
fistps
int3
cmp
mov
pusha
pop
lret
jb
call
aaa
or
sub
add
or
jle
fistl
popa
push
jne
stc
lret
fisubs
in
andb
nop
cmc
mov
notb
data16
sbbl
jecxz
add
push
push
push
loope
adc
es
dec
movsb
cmpsb
cmp
pushf
xchg
xor
js
mov
or
xchg
jne
pop
jnp
popf
sahf
or
inc
mov
scas
inc
and
std
pushf
js
and
pop
pushf
cli
aam
dec
lcall
cmc
int3
add
dec
mov
dec
aas
or
out
jl
test
imul
mov
xchg
or
std
push
cld
xchg
stos
movsl
cmp
dec
sbb
lods
imul
inc
or
push
ficoms
mov
repz
inc
aas
cmp
mov
inc
dec
enter
aas
jmp
std
or
and
loopne
out
pop
push
jno
pop
mov
inc
pop
cmp
mov
pop
ds
nop
subb
jecxz
call
mov
dec
lock
mov
cltd
mov
add
lahf
pop
xchg
mov
movb
xor
pop
fadds
fdivr
je
les
pop
sbb
iret
js
and
test
ja
add
xlat
leave
fnstenv
push
pop
lock
mov
mov
rclb
and
scas
mov
fstps
call
adc
cmp
pop
mov
add
das
enter
adc
jbe
lret
sti
jbe
adc
mov
les
shlb
repz
test
add
ds
repz
cmpsl
push
arpl
mov
outsl
sbb
out
js
std
add
jno
div
mov
outsb
adc
xor
xchg
mov
push
cli
sbb
out
jl
inc
lcall
and
loop
jl
jle
and
aam
sub
adc
sbb
add
aaa
or
or
ret
dec
jnp
sar
insb
icebp
movsl
cli
loopne
or
int
movsb
incb
repnz
xlat
add
js
std
rorb
or
mov
fsubrl
pusha
addb
insb
rorl
mov
das
inc
jns
aaa
mov
or
cmc
cmp
mov
rorl
inc
in
or
imul
jl
enter
cli
dec
push
sub
sbb
sbb
xor
imul
stos
add
jmp
bound
movsl
mov
lods
lea
hlt
pop
push
mov
cwtl
push
add
pop
xor
popf
cmpsb
cmp
sbb
out
loopne
sbb
jne
insl
sbb
pop
fdiv
call
cmp
daa
sub
ret
and
sbb
sub
push
outsb
imul
push
add
pusha
cld
ret
inc
jo
cs
cmp
fstl
xchg
sub
test
and
out
inc
push
aam
cmp
aas
in
inc
pop
sti
mov
xlat
and
mov
aaa
lret
aaa
dec
jne
pop
mulb
sub
jne
jle
and
xchg
sbb
xchg
cmp
insl
imul
xchg
int
cltd
cltd
or
push
fsubrl
ss
ljmp
hlt
rolb
adcb
push
ficompl
mov
mov
lock
adc
mov
mov
out
push
addl
inc
mov
movsb
adc
xchg
in
mov
lret
imulb
adc
and
sub
inc
sbb
adc
rorl
dec
pop
sub
scas
cli
cmp
lds
inc
xor
and
movsl
inc
imul
jae
in
push
pop
xchg
cli
jne
mov
in
enter
or
scas
jne
push
jp
and
rorl
insb
sbb
inc
inc
testb
push
lods
js
iret
and
xsha1
cmpsb
lret
xchg
add
sub
loope
enter
or
rcll
shrl
sub
mov
pusha
and
fnstcw
lcall
xchg
mov
jae
or
cli
pop
cli
xchg
jb
sub
jo
sbb
out
iret
aaa
mov
std
jo
adc
jg
push
enter
fstpl
inc
test
leave
in
push
mov
fdivl
shll
hlt
imul
inc
cld
js
push
pop
xchg
jae
mov
push
jmp
in
adc
iret
xchg
push
mov
shrb
mov
mov
push
mov
xchg
mov
jle
mov
add
shl
movsb
mov
cmp
pop
xlat
jbe
mov
mov
fnstenv
aam
pop
sbb
aaa
loop
cmp
shr
dec
dec
jb
cmp
dec
cmp
push
cltd
loope
xor
adc
out
iret
push
mov
mov
repz
fs
notl
sub
outsb
cmpsl
mov
in
imul
inc
xlat
pop
jnp
out
out
add
fsubs
pop
pop
dec
add
testl
pop
shl
cmp
test
shr
push
pop
gs
sbb
movsb
in
mov
test
mov
leave
incb
lds
pop
sbb
dec
push
movsl
jge
lds
inc
dec
sub
fcomps
adc
mov
xor
loopne
push
fstps
cld
sub
mov
cwtl
mov
rorb
mov
xchg
sahf
movsb
outsl
cmpsb
cmp
pushf
hlt
aaa
int
cld
outsb
lret
push
aas
dec
jae
jb
outsl
dec
scas
inc
jg
mov
xor
jo
jo
inc
popa
cmpl
lahf
add
push
jge
jno,pn
pusha
dec
and
addr16
fidivrs
and
test
xor
or
xor
push
push
mov
mov
jp
fxsave
lcall
cltd
and
add
mov
sbb
sub
and
dec
dec
dec
inc
sbb
lods
dec
dec
fildll
push
sbb
iret
inc
aam
js
mov
fwait
cli
in
push
pop
es
fisubrs
movsb
repnz
insb
lea
jne
cmpsb
mov
mov
mov
rcrb
mov
inc
lret
xor
cmp
in
push
out
cmp
or
in
cmp
inc
xchg
loope
xor
mov
icebp
shrb
or
mov
jnp
inc
rcrb
mov
rcll
ret
nop
adc
into
movsb
sub
jle
add
cmp
mov
pop
mov
andb
adc
sbb
stos
inc
sbb
fdivrl
ds
imul
adc
add
cmpxchg
mov
aad
cmp
mov
mov
sub
cmp
hlt
into
sbb
lds
sti
jl
inc
adc
jmp
adc
mov
xchg
sti
sbb
into
push
cmp
mov
or
stos
mov
adc
loopne
adc
movsl
sti
rorl
sbb
pop
jae
push
jmp
push
xchg
imul
lea
pop
pop
pop
aaa
cwtl
pop
push
out
adc
push
xchg
loop
adc
push
sarl
je
in
sbb
cmpsb
sub
dec
or
popa
and
mov
push
int
and
sahf
dec
inc
lods
sahf
add
lret
cmp
push
push
call
out
mov
sahf
pop
dec
dec
mov
sbb
mov
jmp
mov
push
rol
sbb
loope
or
push
insb
mov
imull
fsubs
xor
test
inc
out
sbb
repz
in
mov
jmp
adc
addr16
jnp
jmp
mov
xchg
mov
pop
dec
adc
sarb
stc
push
mov
ffree
pop
lret
sti
jns
sub
add
dec
cmp
rcl
repz
sub
mov
and
cmp
pop
in
and
cmp
push
mov
std
aam
orl
incl
mov
pop
pop
add
mov
dec
in
pop
dec
rclb
scas
lret
scas
movsl
cmp
jg
ja
adc
ret
loop
mov
pop
out
jnp
push
xor
mov
mov
push
popa
aad
pushf
out
dec
pop
push
dec
inc
popa
mov
movsl
inc
mov
sahf
into
pop
adc
mov
jl
in
sbb
ret
data16
jle
xchg
mov
sub
push
cmc
and
sub
cmpsb
jb
xchg
push
add
and
out
insb
filds
add
out
sub
sbb
ds
mov
ret
das
sbb
notl
gs
sbb
es
mov
add
mov
pop
out
int
adc
loopne
imul
mov
or
jmp
jecxz
lea
test
mov
test
xorl
in
push
rorb
dec
mov
stos
nop
aam
incl
mov
adcb
inc
xor
rcl
mov
movsl
inc
stos
fs
enter
call
scas
jb
dec
scas
mov
jae
out
adc
imul
sub
inc
pop
pop
call
pop
outsb
adc
int3
pushf
cmpsb
insl
mov
pop
xor
loopne
popa
test
cmpsb
and
test
stos
mov
pop
inc
negb
daa
sub
dec
stc
sbb
mov
lahf
jae
orw
pop
and
inc
fbld
push
movsb
cmp
out
pop
push
insb
or
mov
push
cmp
mov
dec
mov
add
xchg
mov
sub
add
mov
inc
sbb
lret
mov
movsl
bound
jno
sbb
jle
leave
mov
mov
inc
out
push
xchg
ficoml
cmc
in
ret
ret
jle
sub
pushf
outsb
jl
add
ret
dec
push
mov
lcall
push
push
jbe
pushf
or
clc
ja
mov
cltd
sbb
lods
repz
mov
hlt
jge
mov
imul
out
mov
mov
out
dec
adc
ret
add
inc
fcmovb
hlt
push
pop
loop
popa
cld
push
mov
pop
roll
xor
jb
pop
push
cmpsl
xlat
fstpt
or
jmp
rolb
inc
out
or
push
lret
loop
mov
sbb
jno
mov
loopne
pop
inc
fdivl
xchg
outsl
test
push
arpl
jecxz
ss
sbb
mov
inc
decb
in
out
and
loope
push
pusha
pop
cmpsl
rcrl
mov
cmp
mov
mov
cmp
cvttps2pi
sbb
push
and
sub
add
mov
outsl
movsl
mov
loopne
jo
dec
out
jno
sbb
leave
xchg
and
fimuls
adc
and
in
add
lcall
movsb
loope
inc
lods
xor
scas
ret
cmp
test
and
cmp
push
xchg
mov
push
and
imul
and
inc
add
mov
and
out
shll
mov
stos
push
mov
adc
dec
aam
mov
insb
mov
cwtl
jp
xchg
sub
jle
std
pop
hlt
add
dec
mov
lods
out
dec
add
pop
add
xor
mov
inc
push
stos
add
jne
adc
pushf
sbb
lahf
inc
inc
test
push
outsl
cmp
cmp
cmc
sub
mov
xchg
nop
aam
outsl
cmp
loope
jg
mov
xchg
pop
movsb
dec
inc
mov
addr16
add
shrb
hlt
pop
into
aam
push
and
or
dec
pop
out
test
out
lock
inc
idivl
push
xrelease
outsb
loope
lahf
jmp
pop
rorb
adc
fldcw
pop
push
aad
mov
push
aam
lock
or
xchg
jae
inc
mulb
cmp
fimuls
xor
pop
inc
xchg
dec
mov
inc
push
xor
inc
xor
lret
lock
fnstcw
push
daa
cli
enter
test
pop
cmp
xchg
inc
push
add
push
fidivl
stos
fbld
inc
inc
loopne
mov
idivl
lds
jmp
scas
pop
aad
cwtl
pushf
popa
jmp
aaa
mov
mov
test
mov
dec
scas
and
push
push
movsb
dec
rep
fs
in
pop
inc
push
cli
pop
pop
xchg
jl
inc
add
scas
mov
rcrb
xorl
mov
mov
movsb
inc
cmc
loop
insb
xchg
addr16
leave
fsin
jae
sbb
cmp
sub
or
mov
jnp
popf
xor
lret
xchg
push
or
mov
movsl
gs
gs
xor
or
into
pop
add
scas
cld
xor
mov
lret
mov
ud2
mov
gs
sbbl
cmc
mov
bound
adc
or
dec
mov
pop
mov
aas
or
mov
addr16
in
repnz
dec
lods
dec
into
jae
scas
lods
xchg
loope
mov
xor
iret
mov
into
push
stc
pop
idivl
dec
lods
js
movb
jb
mov
push
sarl
inc
out
sbbl
call
xchg
cld
pop
test
into
pop
sub
mov
scas
and
gs
xor
inc
mov
dec
or
ja
sbb
jp
mov
dec
out
pop
push
pop
lea
mov
jg
and
mov
or
xchg
mov
sarb
cmpsb
lds
lret
dec
lret
jno
ds
popa
mov
sti
jbe
pop
push
lcall
or
js
jp
mov
mov
xor
mov
fcompl
sarb
inc
xchg
imul
adc
mov
scas
mov
enter
push
std
out
popa
mov
data16
cwtl
imul
and
mov
mov
jmp
push
rolb
sbb
decb
adc
sub
cmovge
mov
xor
mov
dec
mov
mov
pop
push
push
pop
jne
call
xor
jg
adc
js
fidivrs
sub
mov
ljmp
sub
outsb
jge
aas
cmpsl
subl
pop
dec
pop
movsl
jmp
sbb
or
pop
cmp
out
stos
jae
cld
cwtl
mov
mov
std
clc
jnp
pop
imul
cmc
inc
push
mov
cmpsb
cmp
mov
out
lcall
and
push
cmpsl
sbb
mov
cli
test
push
xor
inc
xor
cmpsl
or
or
call
jmp
cmp
mov
call
cmp
push
rcrl
push
jb
and
into
bound
mov
pop
stos
jbe
fs
sub
lock
shlb
jle
call
or
mov
fadds
rcrb
pop
xor
inc
mov
lds
or
adc
ljmp
shrl
in
sub
out
pop
mov
fisubl
push
repz
out
and
in
jg
inc
ss
cli
sahf
or
enter
cmpsl
sub
jbe
inc
push
aad
inc
xchg
in
fsubp
mov
push
pop
testb
ret
jge
arpl
jo
adc
mov
sbb
push
jge
jp
jnp
xor
jbe
or
push
xor
xor
mov
xlat
stos
or
xchg
sub
jp
pop
cmp
ja
js
rcrb
clc
push
add
loop
inc
test
sub
jbe
adc
inc
repz
mov
dec
and
clc
shlb
fldcw
and
inc
cvtps2pi
and
xor
jo
jns
movsl
lods
or
fwait
scas
xor
inc
out
pop
repnz
add
mov
sub
call
jl
adc
icebp
insb
mov
mov
or
xor
enter
stos
in
js
lea
pop
ret
add
jl
sub
jae
xor
test
insl
gs
int
cmc
mov
aad
int
rcl
imul
stos
lds
mov
stos
lea
repz
adc
and
out
add
inc
mov
sub
xchg
and
sbb
mov
xor
pop
in
fdivr
outsl
lret
xchg
adc
outsb
xchg
icebp
movsl
add
mov
sahf
aaa
int
mov
aas
push
mov
pop
leave
dec
iret
test
out
and
cmp
xchg
fimuls
dec
mov
add
rcll
fwait
xor
cli
mov
jo
fisubs
cmpsb
xor
mov
lret
mov
rclb
xor
les
xchg
mov
les
call
scas
pmullw
mov
out
cld
lcall
popa
insb
sub
inc
sub
ljmp
test
fwait
pop
jo
je
mov
push
inc
stos
shll
xchg
and
addr16
mov
and
dec
pop
jecxz
fmull
test
jb
nop
sub
call
and
jge
pop
imul
jns
mov
sbb
cmp
outsl
sahf
ds
mov
and
sti
push
jnp
mov
or
jge
pop
jb
aam
sbb
mov
pop
cmp
and
dec
xacquire
add
xorb
daa
cmp
clc
push
jl
add
jg
xor
mov
pop
and
xor
sub
dec
nop
arpl
int3
mov
fstl
push
shll
push
inc
mov
cmp
xchg
mov
push
jle
lock
adc
ds
std
imul
xchg
and
lret
inc
pop
add
mov
rcrb
xchg
call
imul
imul
fdivp
dec
movsb
ds
and
inc
mov
ljmp
inc
pushf
rcrl
inc
rol
jmp
sub
xchg
sub
push
add
test
ljmp
push
jne
jno
aam
aas
mov
push
mov
xor
push
xor
jne
mov
sbb
arpl
xchg
jmp
dec
nop
ljmp
imul
leave
loopne
xchg
ljmp
es
outsl
lds
pop
sbb
lods
pop
mov
aad
cwtl
mov
push
pop
shl
pop
in
fcoml
imul
mov
je
outsl
jmp
imul
pop
icebp
js
hlt
repz
mov
repz
test
or
jbe
and
jl
movups
dec
fcomi
xchg
push
jmp
popf
adc
sub
xor
stos
mov
out
fisubrl
mov
push
fdivrs
and
subb
outsb
add
outsl
dec
pop
sahf
sahf
inc
xchg
cld
addb
enter
adc
mov
aaa
mov
dec
inc
jns
js
hlt
mov
out
mov
stc
cmpsl
jmp
icebp
insl
insl
mov
out
insl
xor
rclb
add
push
xchg
xor
and
loope
jne
aam
jae
pop
sbb
ret
xorb
popa
pop
idivb
fdivrs
push
in
or
push
jle
scas
out
add
ljmp
mov
xor
lods
xchg
lods
aaa
push
jmp
aas
push
lahf
adcl
cmp
stos
call
jl
movb
add
repz
push
xor
dec
xor
data16
jp
adc
inc
jbe
arpl
push
lcall
test
je
add
cmp
lret
jb
outsl
fmul
push
add
cli
dec
test
insl
jge
xchg
pop
loope
aas
and
pop
or
jg
addb
lods
push
mov
xor
ds
addr16
inc
lret
pop
adc
cmp
movsb
cltd
xchg
les
xchg
jmp
adcb
int
push
int3
in
mov
mov
and
imul
js,pn
push
shl
sbb
sbb
insl
clc
nop
rcrl
addb
rorl
xchg
insl
ja
dec
and
lcall
push
mov
mov
xchg
cmpsl
mov
sbb
jne
xchg
inc
sbb
push
pop
ffree
pop
dec
aam
and
out
and
pop
xor
mov
mov
jle
pop
aaa
lods
mov
test
cli
ret
shll
inc
sbb
xchg
pop
cwtl
std
int3
pop
lds
roll
fucom
xor
cltd
add
ja
or
sub
and
js
mov
loopne
iret
adc
js
push
mov
cltd
adc
dec
mov
push
or
cmp
jnp
cmp
popa
sub
xchg
lds
cmp
mov
jmp
fistpl
cmp
push
push
cmp
dec
lcall
mov
xchg
rep
sbb
xorb
cmp
sbb
inc
fwait
adc
es
fmul
jns
cmp
fucomip
pop
fimull
mov
sub
cmpsb
shl
push
mov
lock
sti
jle
jo
mov
mov
mov
daa
punpckhwd
enter
fadd
into
stos
push
in
and
lcall
xor
outsl
jmp
jmp
int
sbb
fidivrl
push
repz
arpl
sbb
mov
xchg
dec
cmp
xor
in
xchg
cmp
push
adc
fsubs
pop
ja
add
js
inc
subl
jmp
push
rclb
inc
lock
and
xchg
xchg
shll
into
cmp
jge
in
out
mov
xor
push
xor
in
jne
inc
out
imul
sbb
jo
lods
sub
mov
add
in
mov
inc
imull
dec
push
and
les
neg
and
add
add
adc
dec
jne
stos
subl
or
inc
mov
lods
inc
inc
fdivp
je
pop
movsb
jnp
mov
sbb
push
mov
test
xchg
sub
ss
mov
xor
frstor
lods
mov
mov
sbbl
mov
repz
or
fwait
dec
cmc
add
mov
push
xor
pop
jb
sub
and
ret
mov
pop
test
mov
in
sub
sub
lock
inc
fnstenv
adcl
cwtl
jb
clc
mov
ffreep
in
in
mov
cltd
jl
jno
shlb
mov
xchg
enter
add
and
xchg
cmp
or
call
push
jns
mov
cmp
roll
out
or
lea
js
dec
call
cwtl
fwait
arpl
sbb
xor
loope
hlt
bound
loope
shrb
insl
add
mov
pop
and
and
xchg
jne
in
fwait
je
push
mov
imul
inc
mov
xchg
outsb
jno
repz
pusha
rcrb
gs
inc
in
fwait
xchg
insb
inc
inc
mov
les
outsl
jg
leave
and
mov
push
pop
fnstenv
pop
sbb
pop
mov
movsl
test
mov
ljmp
ljmp
or
mov
stos
les
cmc
lret
stos
in
push
xchg
lds
cltd
cli
in
and
inc
rorl
inc
aam
mov
sub
outsl
mov
lds
jmp
or
cwtl
mov
lea
cmp
stos
inc
loopne
cmp
test
in
data16
xchg
divl
imul
xor
adc
fdivl
pop
shlb
sti
es
arpl
sub
out
aad
mov
jle
scas
daa
rclb
daa
nop
jecxz
ficomps
scas
inc
outsl
lods
aad
push
mov
mov
lea
mov
jbe
sub
xchg
pop
mov
sub
out
jne
int3
jb
pop
out
push
sub
arpl
test
cmovs
inc
sbb
pop
fwait
sub
nopl
mov
mov
and
fbld
xor
or
pop
lds
sbb
pop
adc
mov
dec
in
ljmp
rorb
out
xchg
adc
loop
outsb
int
mov
cmp
lods
pop
aad
pop
dec
arpl
sbb
and
push
jne
cmpsb
sbb
push
in
jecxz
cltd
mov
inc
out
xchg
add
sub
jns
pop
jmp
mov
std
je
fldcw
into
add
daa
pop
xchg
hlt
std
scas
jp
adc
in
push
push
push
aaa
add
clc
mov
clc
xor
sub
aam
mov
enter
sarb
nop
enter
cmpb
fs
and
push
movl
jns
mov
movsl
xchg
cmp
push
sub
enter
fwait
jge
and
imul
sti
jmp
sbb
cwtl
mov
loope
sub
sarl
enter
and
sarb
inc
ret
call
test
push
jbe
push
and
aas
push
mov
sbb
xor
repnz
ret
pop
enter
cmp
imull
adc
xchg
test
lret
sti
cmpsl
js
es
xlat
xor
call
sub
lock
sarl
ja
es
stc
aam
sbbl
jb
enter
imul
jae
out
xlat
ljmp
mov
mov
ja
hlt
mov
mov
add
sub
arpl
int
fldenv
mov
fiaddl
pop
insb
push
mov
cmp
int
adcl
adc
imul
cmp
mov
sub
ret
hlt
repnz
outsb
mov
inc
pop
int
push
ficoml
test
and
std
xchg
push
and
mov
leave
dec
cmc
in
cmp
mov
dec
jno
mov
aam
cmp
popf
dec
push
inc
pop
xorb
es
pop
xor
inc
scas
xchg
xchg
dec
out
icebp
sbb
mov
ret
fsubl
in
sbb
inc
pop
mov
test
push
ljmp
jno
out
xor
out
notb
cmp
inc
cwtl
push
shlb
shl
fprem1
mov
jp
add
xor
das
data16
mov
arpl
cli
cmpb
aad
clc
and
push
push
lods
inc
inc
or
lds
test
cs
sahf
popf
push
add
bound
enter
mov
lock
or
fisubrs
bound
mov
jns
cmp
inc
mov
cmp
sub
mov
sarb
lods
jp
outsl
rol
mov
ja
and
pop
add
mov
xchg
and
int
int3
jne
xchg
jge
adc
mov
mov
or
daa
jmp
sub
inc
and
push
mov
mov
in
xchg
cwtl
aaa
push
cltd
loop
sbbb
stos
arpl
jl
into
ret
pop
mov
xchg
test
mov
pop
jmp
int
push
sbb
cmp
adc
xchg
jp
dec
and
fwait
sbb
and
xor
mov
jae
sbb
and
popa
icebp
movsl
bound
ret
push
insb
roll
xchg
mov
push
cmc
mov
jg
fwait
mov
rcll
int
mov
add
lock
lods
mov
mov
sbb
testb
sbb
jle
fsubr
jne
aam
mov
insl
sbb
scas
out
int3
enter
lods
clc
xor
mov
lods
icebp
fs
cmp
stos
and
mov
add
iret
sbb
mov
loop
sub
cmpsl
ds
pop
lcall
adc
roll
adc
jnp
jae
jno
bound
divb
mov
ljmp
bswap
rolb
adc
xchg
sbb
dec
mov
xchg
lret
cmp
andb
adcb
mov
push
das
pop
loope
cwtl
in
call
sub
jb
mov
stc
rorl
xlat
sbb
rcr
movsb
inc
push
int
cmp
aad
movl
and
add
iret
fnstcw
adc
mov
gs
xchg
ret
aad
js
and
and
fistpl
mov
cld
mov
mov
mov
pop
stos
shlb
mov
push
mov
fwait
pusha
sub
fnsave
push
jno
cltd
in
repz
pusha
test
inc
add
ret
ret
or
nop
stos
push
push
lea
cmc
cmp
imul
psllq
jno
pop
cmc
dec
dec
mov
insl
jl
insb
xor
imul
loop
push
cmp
int3
imul
fcoms
push
lods
movsb
and
ror
ja
push
jmp
js
pop
mov
cmp
shlb
xor
sbb
or
pop
icebp
movsl
rcrl
pop
mov
inc
and
adcb
clc
repz
adc
push
jo
push
xchg
loope
mov
loopne
cld
adc
mov
mov
fwait
test
bound
add
jbe
inc
pop
dec
push
addr16
pop
sub
lret
xor
inc
pop
jb
mov
sbb
out
push
les
sbbl
push
jg
frstor
mov
popa
and
xchg
in
mov
xlat
shl
rcrl
insb
jl
addr16
sbb
and
xor
jecxz
xchg
mov
jge
mov
inc
shrl
orl
mov
xchg
pusha
lods
leave
jae
pop
dec
loop
mov
adc
scas
call
lahf
mov
push
dec
rcr
cmp
jle
sbb
xchg
jle
dec
call
icebp
adc
push
sahf
clc
xchg
loope
jl
cmp
testl
xor
push
mov
int
ret
pop
xchg
mov
mov
lret
sbb
xchg
mov
xor
jmp
test
mov
fcoms
mov
lods
mov
divb
push
in
lahf
pop
pop
incl
or
and
dec
add
push
lods
mov
mov
add
imul
cmp
inc
jno
stos
xlat
lds
fildll
push
mov
add
jmp
adc
xor
cmp
fldcw
jo
cmpsb
jo
push
push
out
and
lock
stc
pop
xor
fnstsw
fst
pop
push
shlb
mov
enter
aad
push
out
pop
jmp
cmpsb
mov
jae
popa
xchg
mov
jne
cmp
jb
sub
lock
daa
mov
sbb
fbld
pop
mov
xchg
adc
jnp
mov
sti
push
js
and
xor
push
sti
push
data16
or
fnsave
leave
stos
lret
clc
inc
fbstp
mov
jmp
xchg
out
aad
mov
call
ljmp
xor
loopne
ret
mov
clc
jle
shl
jmp
xchg
mov
xlat
repz
push
lcall
imul
xor
jmp
rorl
xchg
shl
in
ljmp
mov
cwtl
adc
cltd
shll
and
jmp
mov
mov
outsl
and
xor
push
gs
jg
pop
enter
fcomps
repz
hlt
bound
inc
adc
roll
cmp
js
add
or
insl
and
pop
xchg
test
xchg
ficoml
rol
jl
out
imul
jp
xchg
fwait
cmp
out
les
xchg
and
push
arpl
push
jbe
push
xor
cli
xchg
push
mov
jl
in
repz
push
xchg
aad
jo
ljmp
jno
aad
add
sbb
imul
bound
inc
stos
mov
xor
jnp
insl
in
loope
push
inc
pop
outsb
stc
rolb
test
test
es
jae
stc
sub
insl
push
cwtl
sub
or
outsb
in
insb
sub
cmc
cmp
in
fistl
lds
scas
add
addl
fldcw
or
shll
add
jo
sbb
stos
xchg
adc
cmp
daa
dec
popf
ss
cltd
xchg
adc
and
ja
cmp
jecxz
mov
sbb
ds
imul
stc
inc
jecxz
stos
add
sub
xchg
sub
lahf
mov
xchg
sarb
sub
ja
mov
xchg
mov
and
push
cmp
sarb
mov
vmulps
pop
cmpsl
mov
mov
mov
or
test
es
jns
inc
push
jp
cmp
xor
xchg
xchg
sub
nop
mov
inc
dec
mov
fcmovne
jno
sbb
imul
nop
adc
push
cwtl
js
je
je
mov
inc
aas
movsb
pushf
aaa
shlb
mov
adcb
inc
pop
cmp
imul
pop
shll
push
arpl
push
jmp
jns
lock
adc
jge
pop
mov
inc
pop
aas
push
pop
mov
faddp
ja
cwtl
push
mov
out
inc
push
pmulhuw
inc
mov
sbb
xorb
cmp
cmp
sub
jg
out
shll
int3
and
sbb
or
das
add
jge
xchg
fadd
sbb
and
cmpsb
sub
pop
outsb
addl
cmp
pop
lahf
xchg
xor
repz
mov
and
xlat
mov
out
pop
loop
sbb
in
jbe
jne
in
cmc
xchg
cltd
jbe
sbb
xchg
add
cli
scas
cmp
sub
push
push
xor
cmp
inc
mov
lret
movsb
sbb
xchg
dec
mov
int
and
jl
jecxz
xor
add
inc
lcall
jns
jno
inc
pushf
xchg
std
loope
mov
insl
in
fadd
pop
shl
iret
mov
sbb
cmp
ds
cmc
sub
arpl
shlb
insb
adc
adc
dec
sub
push
out
add
scas
aad
rcl
sbbl
repz
mov
outsb
divb
cmpsl
adc
std
jbe
sub
push
imul
lcall
imul
xor
sbbl
out
enter
sbb
in
push
or
mov
insb
ja
xchg
cs
idivl
hlt
pushf
mov
sub
loop
dec
scas
or
mov
add
sbb
stos
sbb
cmp
sahf
loope
iret
clc
jae
xchg
push
inc
lock
test
xchg
jns
inc
lret
rorb
aam
jmp
sbb
repz
xlat
cmp
cmp
push
pop
in
out
adc
pop
insl
scas
movsb
push
pusha
mov
inc
xchg
movsl
shll
mov
aad
adc
mov
mov
dec
mov
jge
loope
int
and
inc
sub
cmp
jae
cwtl
or
mov
imul
popa
rorl
outsb
dec
mov
mov
jle
push
popf
sbb
cs
sub
rcrb
ret
or
inc
mov
jno,pn
adc
out
in
xchg
sbb
loopne
jbe
stos
xchg
pop
movsb
mov
fstps
sub
aad
push
jne
jg
mov
shrl
add
mov
mov
popf
mov
xor
or
in
push
push
push
inc
mov
popf
lea
dec
popa
pop
loope
cmp
xchg
orl
repnz
sub
mov
mov
imul
fsubrl
adc
ja
mov
cmpsl
push
mov
iret
jns
xchg
push
mov
mov
mov
and
rol
cmp
in
scas
add
and
sbbl
xor
push
or
out
ljmp
cs
add
cmc
movsl
xor
dec
jno
std
insl
jmp
or
mov
sub
pusha
xchg
inc
es
je
push
cmpsl
scas
add
scas
ja
xchg
test
fldenv
mov
jecxz
les
testb
popf
xor
adc
sbb
mov
mov
mov
jecxz
or
imul
jecxz
inc
xchg
mov
xor
xchg
movsl
cwtl
outsl
or
cmp
insb
cmp
cmpsl
jo
lahf
and
add
xchg
xor
and
loopne
pop
lahf
fsts
mov
mov
mov
inc
mov
cli
adc
push
jbe
lds
and
mov
jp
jbe
in
pop
jb
popa
jns
setle
movsb
sub
xchg
mov
push
mov
aad
cmc
sub
lds
popf
cmpsl
cli
pop
push
xor
jno
or
add
cmp
mov
fsub
iret
mov
sub
sbb
or
adc
out
fmuls
mov
mov
pop
jg
ja
movsb
and
jno
lods
and
lcall
adc
mov
ret
push
mov
shl
mov
nop
mov
les
ret
mov
enter
push
sub
out
incb
cmpsb
shr
cmp
push
adc
or
das
add
mov
or
out
dec
sbb
xchg
daa
mov
add
or
jp
mov
icebp
insb
fmuls
idivl
cmp
loop
ret
aas
and
ja
fmulp
fisubs
add
jle
idivb
inc
push
push
ficoml
add
aad
jecxz
sbb
jl
cmp
jle
push
js
lds
test
outsl
and
out
addl
sbb
fiadds
mov
fs
lods
adc
ss
jns
jns
in
and
jle
test
cli
or
ljmp
jo
ret
inc
mov
fucomp
out
or
stos
push
sbb
cmp
sub
icebp
sub
xchg
mov
xor
jae
rcrb
lret
sbbl
int3
and
sub
shll
xchg
mov
loop,pn
out
ffreep
jge
mov
jge
bnd
xor
insl
in
popf
inc
lret
scas
cmp
cmp
push
inc
xor
ljmp
cmp
out
cmpsl
and
xchg
pop
mov
scas
addr16
lea
push
mov
icebp
movswl
lret
out
test
cmp
sub
xlat
decb
and
clc
sbb
xchg
movsl
outsl
xchg
lock
or
xor
mov
cs
fsubr
add
lods
sub
dec
mov
jge
mov
and
popf
or
push
add
push
xchg
mov
mov
cmp
inc
rcl
push
xchg
imul
cli
and
repnz
iret
jo
lds
sbb
data16
loop
ss
mov
out
sarb
sub
cmp
push
dec
push
inc
in
cmp
repz
cmp
divl
or
pop
cmp
adc
push
jb
push
mov
fdiv
lahf
pop
sub
lcall
mov
mov
rcll
adc
sti
fwait
sbb
lahf
xor
pusha
cld
pop
lret
push
push
sub
mov
sub
and
xor
fcmove
repnz
movl
imul
pop
outsb
addl
mov
lock
mov
and
push
jg
push
pop
cmp
mov
xor
ss
inc
ss
ljmp
out
pop
cmp
sbb
inc
cmp
aas
in
or
push
pop
es
outsb
fnstsw
sbb
int3
cltd
shrb
scas
call
xor
mov
fdivl
clc
out
xor
scas
add
dec
dec
inc
fdivrs
sub
stos
in
es
sbb
aas
xchg
cmp
mov
mov
jmp
and
jge
fs
cmp
addl
mov
out
sub
or
dec
mov
sub
jmp
xchg
mov
rcll
cmp
lcall
push
cmc
mov
mov
pushf
hlt
cmp
andb
mov
inc
dec
shll
add
inc
pop
cmp
push
std
sahf
cmc
test
lods
pop
and
push
out
push
jp
in
push
cmp
xor
out
gs
test
outsl
enter
mov
ss
test
repz
pop
push
xor
push
pop
xor
inc
dec
xor
or
push
into
push
shrl
jns
and
jle
add
adc
iret
jo
jo
mov
xlat
into
inc
xchg
pop
stos
enter
fldl2t
ja
shrb
mov
mov
imul
mov
dec
in
scas
lods
jbe
add
out
xchg
push
sub
mov
lcall
mov
cmpsl
mov
adc
divb
or
cmc
pop
insb
push
jne
pop
into
or
dec
sbb
inc
sti
es
jmp
lret
scas
lcall
and
shlb
bound
mov
clc
outsl
ljmp
adc
out
into
fdivl
ja
repnz
mov
mov
or
mov
std
pop
filds
out
dec
xchg
sub
cs
jbe
fldenv
inc
add
rolb
sub
cltd
gs
mov
imul
loope
movsb
dec
jecxz
fcoml
mov
xchg
into
fisubl
pusha
xor
inc
jecxz
out
xor
mov
lar
lea
mov
push
dec
ret
outsl
outsl
mov
mov
imul
jmp
mov
ljmp
cmp
outsb
xchg
jp
or
xchg
adc
jmp
xchg
stc
outsl
mov
dec
pop
xor
mov
fldt
dec
in
aaa
insb
fcompl
iret
push
pop
sub
push
lret
push
dec
jecxz
mov
es
and
push
ja
mov
push
dec
nop
xchg
jp
pushf
mov
shrl
mov
sub
psubsw
fbld
icebp
shrb
das
lods
shlb
faddp
xor
gs
inc
scas
subl
pop
pop
sub
and
leave
ret
pop
sarl
sbb
hlt
icebp
js
jb
repnz
dec
test
sub
mov
push
fs
adc
fists
xor
add
xor
shrb
push
sub
jg
daa
mov
loope
les
inc
or
jb
cmc
dec
cmp
imul
dec
repz
xchg
in
add
add
pop
pop
outsl
cmp
dec
arpl
jbe
and
dec
jl
insb
fisttps
sbb
mov
in
sbb
test
movl
and
and
enter
xor
dec
mov
or
outsb
adc
lock
sarb
pop
or
xchg
cli
lret
or
aad
inc
popa
xorl
jmp
pusha
sub
iret
subl
dec
inc
or
jnp
push
inc
adc
bndstx
rcr
repnz
adc
lahf
popf
mov
arpl
les
clc
iret
cmp
test
jns
push
and
les
xchg
add
repz
aas
and
sti
inc
arpl
dec
lods
sub
pushf
int
lret
cmp
and
add
jmp
scas
add
add
insl
push
ljmp
call
imul
fmul
repnz
iret
push
mov
dec
loopne
jge
clc
and
arpl
or
and
lret
mov
jecxz
sbbl
pusha
mov
out
fiadds
jmp
lods
insl
sub
pop
mov
push
ret
shrb
cmp
stos
mov
aam
or
xor
jno
aas
mov
mov
xchg
jp
or
sub
sti
pop
pop
rorl
adc
jno
loope
xor
dec
cmpsb
pop
mov
or
insb
iret
sub
setp
pmaxub
sbb
dec
adc
mov
cmp
les
xor
test
cwtl
jmp
into
or
mov
mov
xor
imul
pop
mov
lret
test
add
adc
add
lock
out
mov
imul
push
repz
lahf
stos
sub
lret
or
xor
xor
or
inc
push
shrb
lcall
es
dec
xchg
push
push
nop
in
xchg
push
dec
and
cld
or
push
movzwl
cmpsb
xor
push
mov
fidivl
loop
pop
add
xor
scas
mov
pop
sub
repnz
lods
es
mov
lods
xor
sub
cmp
jle
push
jge
dec
stos
jl
int
inc
lods
cmp
fnstenv
lods
jmp
out
fiadds
repz
hlt
jnp
sbb
inc
sbb
enter
test
lods
mov
push
xor
pop
push
jne
ficoms
and
outsl
inc
inc
outsl
mov
jmp
cmp
popf
icebp
dec
cmp
cltd
sbb
mov
dec
and
aaa
arpl
xor
test
lret
int3
scas
sub
sbb
pop
sahf
lods
mov
mov
lds
sbb
adc
inc
cwtl
push
cwtl
inc
jge
mov
adc
and
adc
jns
bound
sub
sbb
cmp
aas
xchg
add
mov
mov
push
xor
fs
pushf
outsl
in
inc
push
notl
shl
leave
adc
inc
inc
ds
imul
pop
insb
icebp
or
fimuls
cld
lcall
sbb
shl
arpl
repnz
xor
outsl
dec
mov
jge
and
mov
cmc
and
cmc
dec
xchg
jbe
jl
jecxz
mov
add
popa
into
pop
dec
and
xchg
aas
or
popa
das
xlat
jmp
js
cmpsl
out
or
in
pushf
jnp
xor
jl
fs
jp
dec
nop
daa
cmp
push
push
lea
shlb
dec
sti
fwait
jp
and
xor
jb
adcl
sbb
sbb
fbld
sub
lods
dec
dec
cltd
daa
sbb
pop
or
or
xor
xor
mov
loop
enter
mov
add
cmpsl
cmp
hlt
in
loop
dec
sub
or
pop
jle
fnstenv
mov
mov
hlt
dec
jecxz
sbb
inc
sbbl
pop
ja
test
mov
rclb
nop
cmpsl
mov
mov
cli
mov
push
lahf
xchg
pop
jg
test
scas
scas
pop
push
sti
in
adc
pop
cmp
dec
ss
repnz
push
inc
mov
jb
imulb
inc
inc
jae
xchg
sub
xchg
loop
lea
mov
adc
push
xor
xlat
xchg
mov
lods
or
jne
add
add
mov
or
mov
xchg
push
dec
ret
les
cld
outsl
adc
cmp
lods
stos
dec
add
or
cmp
lahf
jp
in
xchg
aaa
adc
inc
cmc
jne
fnstcw
push
lods
outsl
enter
out
in
jg
xchg
fdivrl
cwtl
xchg
add
sub
dec
pop
mov
sub
sub
stos
mov
jae
dec
loope
arpl
or
lods
repz
push
xor
or
mov
stos
ret
test
and
cli
fsubl
daa
jne
in
test
mull
popf
pop
lds
xchg
dec
sahf
push
xor
loope
popa
inc
and
dec
cwtl
les
inc
sbb
pop
ret
sbb
movsl
lock
mov
mov
xor
sub
add
pop
mov
cmpsb
dec
jae
les
fwait
stos
mov
fidivl
andl
es
push
jge
scas
test
sbb
test
lods
cmp
shl
pushw
lcall
sub
xchg
or
cmp
sbb
daa
push
cwtl
outsl
insb
cwtl
dec
lret
shrl
jne
xchg
call
adc
cmpsl
sub
ds
fcompl
and
xchg
rcrl
add
imulb
jle,pt
fwait
fcompl
dec
jle
mov
or
sbb
add
call
in
rcrl
aaa
bound
push
call
out
movsl
aas
testl
push
jl
cltd
sub
lcall
loope
xor
mov
adc
inc
in
int
in
mov
test
movsl
add
shrb
mov
sub
pop
pop
repz
sbb
fcomp
ljmp
adc
sbb
push
cmp
mov
jae
pop
sub
mov
push
mov
xchg
pop
pop
mov
xor
dec
jge
ja
mov
test
lds
mov
inc
cwtl
stos
cmpb
pavgw
cltd
xor
push
fsubrp
test
shll
rcll
and
xchg
outsl
jg
adc
inc
loopne
mov
sub
and
or
inc
insb
fbstp
push
push
push
leave
jno
jecxz
arpl
dec
xchg
incl
mov
es
pmullw
cmp
mov
ja
in
jne
push
pop
xacquire
jns
in
mov
push
pop
pop
sub
and
sbb
sub
enter
xchg
sub
xchg
scas
xchg
dec
mov
aam
mov
pop
mov
test
mov
sti
loopne
sbb
and
ja
loope
sbb
rorl
adc
xchg
movsb
cs
inc
testb
test
sbbb
loope
stos
inc
push
dec
mov
popf
ds
es
push
inc
pop
addr16
and
test
push
in
adc
sbb
pop
adc
and
or
mov
push
add
iret
dec
jecxz
jge
call
lock
lods
push
push
into
enter
into
mov
push
push
mov
out
lods
sahf
or
dec
in
or
xchg
mov
cmc
and
dec
adc
pop
jae
nop
loope
mov
xchg
sbb
loopne
mov
sub
push
std
ja
cmp
mul
xor
movsl
je
mov
pushl
jae
out
fsub
and
mov
adcl
test
es
stc
pusha
sbb
xor
fucomp
mov
sbbl
mov
lahf
sub
jb
jge
sub
jnp
cld
jp
xor
inc
lods
mov
inc
dec
out
pop
shlb
enter
push
pop
in
add
xor
jbe
xchg
pop
cwtl
and
and
inc
sub
add
push
mov
in
xchg
out
xchg
xchg
mov
xor
jo
push
xchg
mov
push
pop
mov
cltd
jo
pop
jae
add
ret
push
jbe
cltd
and
inc
lret
popa
popa
inc
icebp
push
incb
xor
subl
cmp
add
ret
leave
int
mov
std
es
sbb
push
mov
out
rep
pop
xchg
test
popf
mov
jb
movb
pop
insb
xor
cmpsb
add
div
add
fldl
cmc
jl
or
pop
daa
inc
inc
cmp
das
ja
inc
inc
or
push
popf
sbb
imul
and
lods
xchg
mov
test
sbb
jne
mov
je
ret
scas
inc
cmc
sbbl
mov
or
addr16
bound
jbe
lods
sub
xchg
call
xor
adc
icebp
xchg
or
inc
fdivrl
js
dec
stos
or
xlat
mov
inc
repz
pop
dec
or
sbb
sbb
inc
or
cmp
add
add
xor
xor
loop
adcb
or
cmp
sub
jo
fstps
cmp
std
pop
test
clc
jns
scas
jp
enter
jns
sbb
pop
cmp
stos
test
mov
cmpsl
mov
lods
inc
mov
and
enter
push
scas
mov
jl
add
movsl
pop
loop
movsb
inc
dec
lds
xchg
mov
jns
lods
push
shl
push
outsb
popf
pop
sahf
int
cwtl
mov
mov
leave
mov
push
lds
push
lods
add
cmp
adc
jo
shl
cmp
add
cltd
push
sub
adc
jge
jle
and
mov
mov
sbb
mov
jo
push
sub
stos
stos
inc
repz
jecxz
xlat
push
xchg
out
stc
add
add
or
push
mov
mov
nop
adc
cmp
mov
adc
cmp
lock
insb
inc
mov
adc
outsb
push
push
sub
xorb
aad
mov
bt
cmp
movsl
pop
cmc
aad
cmp
pop
jl
jmp
or
mov
lods
or
shrl
inc
popf
jae
arpl
inc
adc
jge
outsb
cmc
adc
idiv
das
mov
mov
jns
andb
aas
stos
pop
jl
xchg
adc
dec
pop
call
xchg
jo
mov
ret
es
js
push
daa
fcoml
stc
icebp
mov
lcall
adc
pop
add
fistpl
ret
hlt
cmp
sub
xchg
and
inc
cltd
jb
repz
sbb
pop
jl
inc
out
arpl
add
movd
in
xor
es
or
sbb
inc
inc
cmp
jne
jo
les
adc
cltd
into
das
mov
push
dec
enter
xchg
js
sbb
addb
mov
repnz
mov
in
push
fisubl
scas
xchg
cld
push
fldcw
or
push
pusha
iret
mov
jbe
push
fdivl
ss
fwait
push
inc
lret
aam
jno
sub
in
mov
stc
shll
mov
xchg
rcrl
sbb
sub
cmp
xstore-rng
cmpsl
or
fwait
aaa
int
pushf
and
sbb
das
ds
fnstenv
lods
pusha
sub
vzeroupper
idiv
iret
jb
movsb
adcl
or
dec
inc
ret
sbb
stc
ljmp
clc
shl
xchg
enter
jecxz
pusha
add
sbb
jg
adc
rorl
mov
jne
ficomps
jmp
dec
enter
inc
lods
xchg
pop
sbb
cli
andb
loop
pop
fcomps
shrb
sub
pop
cmp
vrcpps
shll
jg
xchg
pop
orl
call
test
xchg
addr16
leave
mov
lret
insl
push
arpl
pop
pop
push
jo
add
clc
das
jae
ret
inc
adc
inc
mov
ds
fdivrl
xor
fdivp
adc
adc
stos
or
mov
dec
push
mov
test
lods
fsubl
jo
test
std
sub
testl
sub
mov
xchg
loopne
test
jne
sbb
call
xchg
push
cmc
sbb
js
pop
jg
adc
jle
mov
xor
mov
sub
shrb
dec
mov
iret
repz
sar
movsb
mov
pusha
mov
mov
sbb
lea
or
jmp
jnp
lods
jae
adc
stc
xor
mov
xchg
cmpsl
lahf
shl
xchg
add
das
jo
in
sbb
jle
adc
scas
jno
imul
jne
and
insl
rcrl
ljmp
repnz
pop
test
test
xchg
jg
push
pop
test
test
mov
lret
mov
stos
jecxz
ss
xchg
fiaddl
arpl
and
vpmaddwd
rolb
xor
cmpsb
mov
and
push
pop
stos
jmp
mov
loopnew
es
jno
ss
aam
popf
add
idivl
out
ficoms
adcl
or
mov
dec
out
pop
add
lds
inc
sbb
mov
lods
sub
cmp
js
fisubrs
loop
iret
mov
out
mov
cmp
xchg
fwait
xchg
lret
faddl
adc
cmp
inc
pop
cmp
negb
inc
add
inc
std
jne
es
test
pop
cwtl
adc
adcb
xchg
adc
push
daa
pusha
scas
pop
adc
das
enter
mov
mov
iret
fwait
test
and
sti
dec
mov
fst
mov
mov
dec
aaa
shl
push
inc
es
push
lods
xchg
xor
jne
inc
or
xchg
iret
mov
or
mov
data16
or
fiadds
xor
cld
inc
cmp
xorl
je
aam
xor
enter
cli
xchg
mov
fildl
insb
filds
add
loop
popa
push
outsb
xchg
push
or
jge
out
xchg
nop
inc
mov
hlt
mov
sub
std
mov
dec
lods
fdivrl
mov
push
mov
lcall
dec
mov
cmp
jecxz
mov
ret
ror
icebp
movsb
cmp
out
enter
cmpsl
mov
sbb
xchg
mov
dec
lods
ljmp
ret
in
test
jo
ljmp
loopne
fld
adc
leave
inc
pop
ljmp
lcall
fs
xchg
mov
push
aaa
aam
lods
insl
dec
daa
inc
jp
or
cmp
lea
aam
mov
shrb
daa
enter
add
in
inc
sub
push
xchg
sub
das
scas
add
xchg
mov
add
push
adcb
aad
ds
outsb
das
mov
xlat
dec
rol
pop
mov
rcrb
mov
push
sbb
dec
sahf
test
sub
ret
scas
call
inc
xchg
dec
pop
and
jl
xchg
sub
add
cmc
cwtl
sbb
fbstp
or
cli
mov
xchg
mov
fcmovu
lret
mov
test
out
push
inc
pop
cmp
lahf
dec
pop
xchg
push
out
lahf
dec
mov
add
imul
out
sbb
ret
scas
xlat
push
xor
mov
push
xchg
push
imul
jp
mov
jo
add
jg
xchg
pop
pop
or
push
popf
out
mov
int3
xchg
sbb
mov
jecxz
xchg
jne
fistpll
shll
inc
pop
and
out
shrb
mov
fidivrs
out
push
mov
in
mov
stos
cmpl
ljmp
test
sbb
jge
dec
aad
sbb
push
xchg
fs
scas
cmp
lods
fwait
outsb
in
xchg
push
push
adc
dec
pop
mov
mov
lods
roll
fiadds
push
mov
xor
xchg
test
sbb
je
xchg
adc
shl
mov
pop
cmp
mov
aam
mov
or
inc
push
jg
gs
and
push
mov
aaa
sahf
xchg
icebp
xor
ret
in
xchg
cmc
xchg
insl
add
mov
pcmpgtd
fidivrl
lods
call
pushf
pusha
sahf
clc
loope
mov
out
adc
adc
inc
pop
sub
sahf
clc
mov
std
lods
inc
jg
hlt
pop
xor
mov
js
cmp
mov
addl
std
mov
dec
ljmp
add
add
repz
mov
push
and
aas
xchg
pop
scas
outsl
popa
mov
inc
aad
lret
jnp
mov
jno
cmp
test
insb
mov
push
push
inc
push
cs
jle
jbe
test
pop
mov
sbb
stos
lret
test
sbb
mov
or
fists
movsb
aam
dec
je
xchg
fs
mov
pop
jno
repz
cmp
cmpsb
ret
adcb
aam
mov
test
movsl
in
add
gs
insb
pop
pop
cmc
xchg
or
out
inc
xchg
call
and
adc
sbb
add
sub
push
scas
aam
rorb
paddb
jb
push
insl
mov
int3
stc
mov
push
mov
aam
add
insl
ss
jl
sub
cmp
sub
or
push
fwait
pop
push
pop
fdivl
aad
pop
fldt
sbbl
aas
cmp
repz
xchg
out
out
add
cmpl
dec
dec
ficompl
jne,pn
dec
inc
jecxz
cli
lods
incl
cmp
and
cmpsl
sahf
xchg
in
adc
sub
mov
adc
cld
popa
adc
cwtl
cmp
pop
pop
adc
mov
push
cmp
fisttps
stos
es
jecxz
adc
mov
xor
mov
push
lods
daa
sahf
ljmp
sub
push
test
xchg
lock
cltd
pop
shll
sbb
xor
mov
cmp
push
xor
icebp
loope
in
adc
out
sub
jns
xchg
dec
sbb
mov
ss
mov
je
arpl
lods
mov
mov
div
cmp
rcr
xor
rcrl
xor
mov
lock
xor
cmc
iret
mov
jo
mov
jl
cmpsl
jnp
add
or
sbb
pop
xor
dec
gs
out
lret
jne
out
stos
fdivs
mov
scas
jne
in
sbb
xor
daa
outsl
and
js
add
mov
push
mov
loopne
xor
add
and
cld
stos
arpl
pop
mov
mov
mov
rcrl
test
fcomip
lcall
sub
or
push
pop
lahf
stos
addb
les
or
cld
bound
test
aad
mov
mov
xchg
and
cmpsb
call
lret
pop
jp
xchg
test
flds
stc
test
adcb
jns
shr
adc
dec
loop
shll
ds
sub
mov
and
xchg
out
punpckldq
std
mov
bnd
cmp
push
push
cmc
dec
fsts
ss
mull
mov
add
stos
jnp
aad
mov
lret
aaa
je
stc
xchg
mov
jge
mov
into
dec
sub
sbb
inc
mov
testl
lock
and
xlat
outsb
ja
outsb
fidivrl
cmc
mov
lea
jp
mov
stc
fwait
decb
pop
add
pusha
dec
inc
scas
mov
in
aad
leave
pop
push
fidivs
jbe
jge
cmp
pushf
dec
adc
add
cmp
mov
xchg
add
xor
aam
orl
mov
inc
lcall
jns
add
incl
and
repz
inc
js
cltd
xlat
mov
ljmp
rcl
pop
mov
stc
sbb
fldenv
sbb
jg
lock
popl
addr16
jnp
fs
in
shrb
lods
mov
xchg
arpl
xor
add
sbb
mov
dec
loop
mov
cmpsb
imul
loopne
int3
jg
xchg
sub
jmp
mov
inc
test
jbe
bound
mov
cmc
cmp
shlb
sbb
sbb
fisttpll
xchg
mov
pusha
movsb
cmp
xor
or
int
mov
and
or
lods
push
insb
cmp
mov
inc
lcall
xor
push
out
outsb
push
call
cli
xchg
in
or
dec
test
dec
fistps
mov
dec
fcmovb
push
idivl
jmp
cltd
bound
xor
pop
mov
jle
fs
mov
pop
cs
cmp
pop
popl
jbe
stos
inc
orb
sbb
dec
dec
inc
scas
mov
pop
adc
loop
decb
mov
adcb
inc
lock
sbb
sbb
or
add
mov
adc
add
out
dec
mov
jl
xchg
pop
lods
push
test
or
cmc
push
and
aaa
sti
sub
cmpsb
cmp
fbstp
push
adc
dec
cmp
dec
lock
repnz
jmp
xchg
sbb
add
shrb
addr16
adc
shlb
dec
push
push
inc
pop
xchg
mov
out
mov
cld
mov
adcl
clc
inc
lcall
outsl
xor
cmpsl
pop
cmp
dec
pop
movsb
cmc
sbbb
mov
and
mov
and
cwtl
or
dec
ljmp
test
push
mov
lock
hlt
outsl
sub
xor
ds
jge
inc
inc
sbbl
out
jge
out
lret
outsb
add
shrl
cmc
mov
lds
lock
xchg
outsb
fidivs
shrb
es
pop
jo
jno
jo
and
cmc
insb
addb
lea
mov
xlat
dec
repz
repz
icebp
insb
loop
jb
sti
mov
jbe
es
icebp
enter
mov
pop
jne
test
int
pop
pop
xchg
push
ja
shll
xchg
ss
es
add
push
les
enter
aaa
addr16
add
add
cltd
outsb
movsb
cmp
testb
sbb
jge
call
dec
inc
popa
aaa
xchg
or
dec
xchg
sub
loopne
icebp
testl
cmc
sub
out
lahf
xor
rorb
mov
fwait
jmp
addb
cmp
add
iret
mov
add
pop
inc
mov
add
mov
add
imul
xlat
outsb
add
mov
adc
fadd
pop
scas
pop
and
jb
sub
arpl
pop
push
gs
outsl
xorl
insl
mov
ret
out
out
dec
cmpsb
jo
mov
js
and
xchg
push
push
in
lret
scas
or
ss
jnp
dec
test
ja
mov
vmovd
fcmovb
les
fs
mov
lret
pushf
jmp
mov
gs
mov
mov
fsubp
xor
daa
sbb
test
iret
jb
pop
scas
adc
and
ds
and
dec
mov
stos
lcall
ja
movsl
xor
push
loope
sbb
clc
lcall
xchg
mov
loope
sti
and
sub
or
and
cwtl
sub
mov
jno
fwait
push
mov
mov
es
xchg
out
jecxz
pop
and
loope
cmc
xchg
or
cmp
mov
mov
jne
ficoms
sbb
je
das
push
dec
popa
pushf
in
mov
pop
loop
roll
adc
push
out
jne
xor
dec
mov
and
or
sbb
mov
rorl
sbb
mov
movsl
dec
out
mov
les
sbbb
push
or
pop
xchg
pop
dec
or
mov
in
dec
mov
and
cltd
div
or
mov
push
stc
stos
ret
bndstx
mov
jnp
frstor
inc
movsl
xchg
call
rorb
dec
loopne
addb
dec
pop
das
pop
lea
fdivrs
daa
loopne
push
test
pop
scas
pop
sub
inc
jo
adc
xchg
mov
shl
addl
les
dec
arpl
ret
dec
sub
ljmp
scas
out
aad
push
push
lock
sub
aas
je
adc
in
add
arpl
inc
mov
clc
inc
fcoms
mov
cmpsb
testb
daa
inc
insb
dec
clc
and
loopne
sbb
xchg
mov
adc
scas
insb
and
sbb
dec
xlat
cmpps
shl
xor
enter
int3
inc
inc
sbb
in
sub
pusha
enter
push
inc
cltd
movsl
call
and
adc
xchg
sub
push
mov
out
int3
sbb
xchg
mov
fsubrp
arpl
sub
ret
cwtl
lods
xchg
mov
mov
mov
pusha
pop
xor
sub
pop
sbb
jle
jge
mov
jb
ret
adc
adc
adc
dec
lods
and
testb
pop
adc
pop
and
test
mov
mov
adc
add
popf
sbb
cs
lds
dec
repz
mov
xor
sub
insl
lods
js
shlb
out
or
popa
cmc
mov
xchg
in
cli
roll
sub
push
dec
fstpt
mov
mov
and
repnz
sbbb
xor
cmp
shlb
imul
stos
cmc
dec
shlb
imul
lock
push
mov
lahf
pop
xor
push
lods
push
leave
xchg
pushf
arpl
call
or
mov
sahf
cmp
lea
sbb
pop
pop
test
push
in
cwtl
and
mov
outsb
adc
test
jb
jne
add
ficomps
shr
mov
mov
jae
out
int3
outsl
adc
negb
in
adc
mov
dec
adc
jg
mov
roll
sbb
ljmp
leave
insl
leave
jae
std
mov
addl
jmp
in
dec
aaa
cmp
out
cli
rcrb
pop
push
das
or
gs
pop
int3
fisttpl
outsb
int
lahf
clc
pop
pop
cmc
mov
cmc
rcl
cmc
pop
pop
scas
popa
mov
arpl
mov
xchg
aas
dec
sub
sahf
add
lcall
sub
rcrb
jle
test
repz
fucom
cmp
icebp
dec
sbb
insb
js
idiv
lcall
aam
pop
pop
mov
jp
ret
stos
sub
push
scas
pop
sbb
insl
inc
adc
jbe
mov
mov
dec
fs
mov
jp
test
test
jecxz
sub
pop
push
aas
test
dec
lock
xchg
adc
adc
out
dec
imul
inc
adc
jg
and
popf
test
in
inc
sbb
adc
push
add
mov
jo
call
sahf
xchg
lea
push
icebp
mov
or
aas
loope
clc
push
insl
cmpl
xchg
loope
jo
js
jge
xor
xchg
inc
in
ficoms
movups
sbb
fsubrs
mov
dec
xchg
sub
xor
xor
push
dec
push
pop
jecxz
jge
mov
pop
xchg
ss
xor
mov
push
or
pusha
test
jns
aaa
ret
in
add
es
pop
addr16
or
and
push
lcall
lahf
test
shll
lods
stc
psllq
mull
out
out
mov
and
dec
je
inc
cmpsb
dec
je
testl
jmp
lret
xchg
add
and
pop
cmc
or
mov
mov
rol
push
pop
pop
adc
nop
fldt
popa
nop
fadds
jbe
push
xchg
xchg
xor
out
fimuls
cmpsb
sub
mov
pop
gs
inc
outsl
mov
movw
js
or
dec
pop
in
push
repnz
cmp
inc
mov
andb
sbb
hlt
stos
lret
popa
jbe
inc
pop
adc
call
fcmovu
arpl
lock
sub
out
aad
pop
add
repnz
push
bnd
jns
mov
jne
das
mov
arpl
pusha
push
test
enter
fs
fucomi
cmp
aad
adc
xlat
mov
divl
sub
jns
out
xchg
fcmove
and
in
popf
push
ret
out
sub
cld
inc
cld
xor
cmc
cmpb
int
lret
popa
cltd
xor
xor
and
mov
shll
or
mov
cmp
dec
or
push
fistl
mov
mov
icebp
scas
inc
mov
notb
jb
loopne
sub
jo
sbb
in
lods
xorb
xchg
lret
cmp
adc
xchg
push
or
xchg
lcall
inc
clc
add
adc
mov
jo
push
and
push
sub
add
mov
nop
cli
jp
sub
scas
ret
cmp
out
clc
out
pop
sbb
ds
and
lret
inc
hlt
addr16
mov
mov
cvtps2pd
mov
pusha
jnp
insl
fnstenv
push
sub
mov
dec
loop
ds
sub
and
push
xchg
xchg
outsl
dec
daa
mov
adc
mov
or
or
dec
sbb
je
sahf
ss
jge
or
out
mov
push
clc
jg
stos
inc
pop
call
enter
and
cmp
test
jb
adc
sbb
cmp
xchg
push
jae
loop
dec
rclb
and
movsl
fiaddl
outsl
fiadds
dec
std
scas
rolb
repnz
xor
sub
shl
cmp
sarb
aam
in
in
out
popa
fisttpl
daa
stos
sti
std
jl
add
adc
or
xor
out
out
adcb
sti
and
inc
ljmp
mov
addr16
addb
mov
jp
sub
rclb
mov
popf
mov
popf
or
lods
je
es
pop
fstpl
mov
mov
call
mov
iret
cmp
test
mov
xchg
outsl
mov
ds
js
mov
cmc
mov
fnstsw
pop
pop
repz
or
cwtl
jnp
xor
cmp
ret
les
lret
test
in
xorb
mov
lahf
les
jecxz
lret
fidivs
or
inc
cmpb
pop
fldenv
icebp
mov
mov
xchg
jb
push
fsubrs
lds
mov
xor
mov
fisubrl
je
movsb
call
and
sbb
xor
push
mov
push
adc
or
rcl
scas
push
outsl
cmc
pop
fldcw
dec
lods
cld
mov
adc
enter
rcll
daa
cmp
xor
inc
loop
out
stos
in
inc
jns
jg
pop
lcall
add
pop
pop
mov
push
xor
fpatan
push
imul
mov
cmpsb
pop
unpcklps
mov
mov
pop
negb
sub
push
dec
fldt
rclb
hlt
mov
mov
mov
inc
jge
aas
testl
push
xor
and
adc
xchg
xor
scas
mov
cmpsb
fdivl
fsts
mov
negb
mov
push
dec
mov
stos
movsb
pop
xor
outsb
loope
fnstsw
or
fidivrl
sbb
mov
mov
movsl
into
sahf
iret
popa
lods
clc
pop
adcb
or
cmp
popa
aaa
and
mov
xchg
mov
icebp
xchg
jnp
mov
mov
xchg
icebp
push
lock
xlat
and
or
loopne
jbe
es
lret
outsb
andl
sub
jg
dec
pop
dec
dec
adc
push
stos
rorl
cmpsl
jb
je
mov
or
ja
ljmp
fcomps
int3
push
insb
mov
dec
pop
mov
ja
dec
mov
mov
inc
stos
rclb
stos
aam
test
inc
in
mul
jecxz
adc
orb
adc
daa
and
stos
sub
pop
ss
mov
mov
pop
aas
lret
pushf
pop
test
out
leave
popa
jecxz
and
xchg
pop
loopne
scas
pop
jne
fdiv
in
gs
aad
imul
mov
sarl
aad
dec
clc
dec
mov
loopne
nop
adc
fistpl
js
and
mov
xlat
jmp
sbb
sahf
cmp
clc
cmovbe
mov
mov
sbb
subb
bound
cmpsb
stc
data16
inc
cmp
jno
mov
into
mov
fnstsw
pop
in
add
dec
and
push
into
loop
jns
stos
scas
inc
fwait
cmpsl
test
loop
sbb
mov
xlat
mov
ljmp
inc
aaa
add
xchg
loop
mov
dec
dec
cmp
mov
sarl
pop
mov
mov
or
lahf
push
mov
mov
pop
repz
mov
cmpsb
add
aam
adc
inc
fcomps
repnz
aad
mov
cmpb
pop
jae
add
or
push
inc
cmpsb
mov
pop
jbe
insl
int3
pop
aam
cmp
push
mov
mov
call
fsub
jle
int
test
loope
add
aad
mov
ja
in
jmp
xchg
jnp
ret
lret
cmp
ja
sub
push
lret
cmp
push
lahf
fbstp
jl
cmc
insl
push
push
out
fwait
loopne
xchg
push
mov
sbb
mov
aaa
test
sbb
lea
loopne
fnsave
movl
mov
stos
jp
test
xor
mov
xor
lret
xchg
test
orb
faddp
jg
adc
jle
jp
push
bndstx
cmc
jne
js
xor
jp
sti
lods
fsubrs
xor
cmp
or
cs
mov
push
dec
push
push
in
dec
push
jno
mov
lret
andb
sbb
jo
jae
pop
cmp
lods
xchg
pop
jmp
xor
add
mov
lods
add
mov
xchg
pop
arpl
nop
push
mov
push
out
loopne
mov
dec
cmp
jo
into
shr
jae
scas
int3
pop
mov
mov
arpl
fsubr
sti
mov
push
lahf
out
mov
push
jmp
cld
mov
lret
lret
xchg
aas
fwait
test
mov
into
pop
es
mov
test
std
adc
pusha
jb
test
daa
je
sarb
jge
stc
sub
out
inc
cmp
cmc
cmp
ds
xor
sbbl
or
inc
push
jbe
jb
jb
arpl
subb
insl
stc
lea
cmc
int3
jecxz
inc
shlb
cmp
pop
jle
bound
rcll
pusha
movsl
aaa
push
hlt
mov
ljmp
cs
sbb
dec
push
jbe
in
mov
call
mov
jns
add
dec
xchg
adc
xchg
mov
arpl
pop
pop
add
jb
adc
pop
sub
xchg
sti
jecxz
pusha
dec
sub
outsb
jmp
stos
add
adc
xchg
into
in
and
dec
insb
cli
mov
in
aad
fnstenv
pop
jno
cmp
mov
push
movsl
add
dec
mov
fdiv
lea
fcomps
incl
fdivrl
cmp
push
jb
jge,pt
adc
dec
js
and
pop
cmp
jg
jp
sub
xchg
add
lcall
pop
notl
xlat
pop
mov
sub
ret
sbb
shrb
mov
mov
xchg
add
and
es
cmp
inc
pop
movsb
mov
iret
jnp
and
push
sbb
les
sbb
pop
or
arpl
xchg
icebp
scas
fsubs
mov
scas
push
or
xchg
mov
fnstenv
cwtd
xor
lds
js
test
sti
xchg
bound
xor
sahf
clc
jnp
xor
enter
or
cmc
push
xchg
outsl
add
popf
clc
leave
test
aaa
cmp
je
xor
xchg
add
jns
xor
jne
movsb
shlb
stc
addl
xor
frstor
pop
andb
inc
jae
jb
xor
out
and
pushf
inc
mov
test
inc
in
test
sbb
lea
cli
stos
sbb
adc
test
sbb
mov
fmuls
add
daa
dec
fs
xchg
fdivrs
add
jle
and
lea
imul
movsb
cmp
or
fadd
sub
rolb
add
insl
fsts
adc
inc
bound
mov
sbb
jae
cmp
sbb
rcrb
ss
pop
mov
out
ja
fdiv
add
jg
cltd
je
mov
xlat
sub
mov
xchg
mov
mov
out
popa
outsl
jge
dec
xchg
mov
orb
icebp
out
mov
gs
shrl
xlat
mov
jp
mov
cmpsb
arpl
jnp
xor
cmp
movsb
jecxz
rcrb
call
in
push
add
dec
cwtl
cs
fwait
and
call
sarl
jnp
mov
xchg
sbb
fmuls
movsb
cmp
hlt
outsl
inc
je
ret
jle
sbb
sub
ret
xchg
nop
out
sub
xchg
aam
gs
cmpsl
inc
ret
cmpsl
push
pusha
insb
pop
jmp
cmpsl
test
jb
sub
xchg
sub
nop
mov
fsts
movl
or
pop
cltd
cmpsl
les
inc
lahf
add
sarb
push
aad
popf
mov
enter
push
fs
dec
dec
add
lret
pop
xchg
add
les
ficomps
repz
mov
popa
mov
xor
pop
cmp
push
xor
xchg
cmp
dec
mov
stos
cmp
push
mov
push
fisubl
shll
lret
test
std
adc
aaa
test
pop
mov
push
add
jo
pop
lret
and
loope
jo
push
adc
leave
lret
insw
mov
sahf
out
mov
mov
shll
outsb
insl
inc
or
rorb
and
inc
rep
jo
fcoms
loop
inc
jmp
ja
cltd
jp
xor
mov
in
xchg
std
ret
mov
int3
mov
lret
adc
xlat
or
lahf
popf
fmull
or
mov
jbe
push
mov
pop
mov
mov
jns
inc
lds
inc
push
jbe
shld
imul
data16
fwait
cmpsl
pusha
mov
imul
lock
stc
inc
cmpsl
sbb
cmp
mov
pop
and
fdivs
andl
jle
es
frstor
inc
fs
je
insb
jl
and
fnstenv
nop
daa
rcll
daa
movl
rolb
xor
dec
cltd
jbe
imul
das
inc
hlt
mov
mov
les
pop
scas
dec
out
cmp
sub
or
cwtl
sub
and
aam
aas
mov
jnp
lods
inc
fcmovu
fdivs
lret
dec
jle
int
pop
scas
cltd
out
sti
adc
xor
lret
gs
jbe
jnp
mov
xchg
sarb
pushl
push
rol
adc
aas
mov
jns
push
mov
lret
fnstenv
adc
jbe
lods
mov
data16
fisubs
mov
add
lods
cmp
arpl
dec
jl
mov
out
std
icebp
and
jno
pushf
mov
cmp
insb
fwait
add
jb
mov
cs
movd
cmc
pop
pop
or
and
rolb
add
test
jecxz
mov
outsl
sbb
in
push
or
cmpl
add
shll
mov
lahf
jnp
and
popf
rol
rcrb
nop
outsl
jle
dec
mov
cmp
pop
outsl
aaa
pop
push
push
nop
mov
ss
and
mov
pop
unpckhps
xor
mov
and
adc
cwtl
test
inc
cli
xor
dec
iret
xor
mov
jne
insb
xor
js
fidivl
sbb
clc
imul
pop
movsl
inc
push
out
pushf
mov
mov
shrl
jmp
imul
mov
arpl
push
mov
and
xor
mov
mov
pop
mov
dec
std
pop
mov
jne
sbb
je
push
mulb
jb
ds
sbb
dec
push
lea
movsl
ds
lea
push
xchg
call
sub
dec
mov
pop
cmp
out
and
in
mov
andl
jmp
inc
pop
popa
dec
sahf
adc
mov
or
lods
xchg
or
pusha
push
popa
sbb
add
flds
mov
insl
adc
in
shlb
fnstsw
stc
cmp
insl
fidivrl
rolb
pop
xor
das
inc
call
pushf
push
add
addl
jecxz
xor
pop
ljmp
cmp
push
ljmp
mov
imul
cmp
pushf
hlt
pop
je
or
cmp
sub
movsl
fcmovnu
xchg
cs
jns
jg
jne
subb
xchg
jge
xor
arpl
dec
xchg
shll
sbb
fsubl
cmp
ds
push
lcall
mov
loopne
ud2
lahf
in
mov
fstps
mov
mov
cmp
idivl
dec
pop
xor
cmp
cmpb
pop
or
scas
jle
loopne
subb
popf
mov
xlat
gs
push
mov
xor
aas
adc
push
out
xchg
inc
push
shlb
in
push
ret
jecxz
inc
shlb
outsb
les
cmc
adc
cmp
jmp
sub
cmp
cmc
jp
cmp
dec
icebp
jo
xchg
in
loopne
ljmp
add
enter
push
bound
jnp
dec
clc
xchg
xchg
arpl
dec
xor
dec
stos
hlt
pop
loop
adcb
out
arpl
push
mov
pop
bound
cld
cltd
jo
xor
rolb
movlps
adc
sub
shrl
push
testl
lcall
xchg
ds
imul
ss
mov
in
add
adc
filds
sub
mov
push
cmp
insl
xchg
add
sub
or
popf
cld
shrl
int3
add
enter
adc
jecxz
cmpsb
fbstp
push
ja
test
xchg
leave
sbb
sub
js
and
ret
xchg
aad
or
mov
jle
int
push
addl
in
loope
aam
fucomi
ret
call
sbb
mov
sti
sahf
das
add
xchg
ljmp
mov
mov
mov
pushf
mov
jnp
jno
xchg
int
xor
pop
push
inc
test
lds
push
cmp
jecxz
xlat
movsw
fsubs
push
sub
sub
push
cmp
add
sub
out
mov
pop
pop
mov
xor
sarl
cld
lahf
or
cwtl
mov
int
cs
popa
mov
fnstenv
int3
mov
adcb
loopne
jb
inc
pusha
xor
dec
inc
push
call
js
push
jb
lcall
aas
inc
push
ljmp
jb
popa
nop
fs
roll
mov
lret
cwtl
cld
les
mov
insb
ja
sbb
ret
xor
pop
push
and
and
movsl
decb
test
sub
filds
insl
sbb
xor
inc
int3
adc
dec
mov
mov
pop
decl
inc
mov
mov
push
js
popa
sub
loop
pop
lods
iret
cmp
mov
aad
lret
ret
add
test
int3
fdivs
push
decb
in
lahf
fidivrl
pop
pop
cld
aam
inc
scas
aas
mov
sti
push
dec
es
mov
lcall
insb
scas
push
xchg
pop
mov
je
clc
sbb
xor
call
xlat
pop
sahf
stos
push
add
sub
test
dec
bound
xlat
jmp
xor
push
and
ja
cltd
adc
push
push
xor
mov
into
loop
stos
mov
inc
shrl
inc
inc
data16
push
out
leave
ss
add
dec
push
imul
mov
arpl
outsb
stos
popf
and
mov
pop
cmp
ja
jae
or
mov
ss
jno
cmpsl
mov
lret
ja
cmp
int3
cmp
loopne
dec
mov
xor
fdivl
pop
insb
jno
mov
out
sbb
lcall
and
in
into
mov
not
or
cs
cmpl
or
pusha
stc
pusha
jmp
dec
jecxz
push
mov
fsubp
scas
rolb
pop
mov
mov
xorl
mov
fnsave
je
lret
sti
xor
lret
std
cltd
out
test
lea
pop
adc
sbb
sub
mov
jnp
bnd
aaa
adc
sbb
loope
sbb
dec
das
adc
iret
pushw
fmuls
mov
movsb
lahf
shrb
scas
sbb
sub
dec
sbb
divl
rorb
jge
xor
gs
mov
jb
js
mov
bound
jp
bound
leave
pusha
mov
or
jno
f2xm1
addr16
mov
stc
xchg
out
mov
addl
ficompl
icebp
stos
in
popf
ds
jl
lcall
imul
cmp
mov
xchg
scas
adc
cltd
pusha
call
fdivrl
pop
mov
cli
hlt
pop
es
arpl
mov
or
push
fwait
add
xor
dec
sbb
in
or
in
pop
jbe
or
xchg
adc
fstps
mov
lock
in
test
shrl
add
fdivr
imul
ja
ss
and
mov
jbe
xchg
mov
cmpsb
jge
mov
sarb
inc
fstpl
lods
das
inc
test
mov
adc
in
sub
rorl
stc
xchg
addr16
and
push
loope
in
test
sbb
icebp
ds
dec
push
fdivrl
inc
cld
lret
bound
shll
pushl
cmpsl
xchg
testb
lea
cmp
or
or
and
in
sub
xchg
sub
and
inc
mov
jl
rcrl
jno
sbb
notl
or
movl
fcomps
jbe
test
dec
cmp
push
in
mov
call
xorl
pop
xchg
into
cmp
mov
mov
pop
arpl
sub
loop
mov
mov
xchg
dec
add
repz
aaa
inc
popf
xor
mul
mov
inc
xchg
aas
pop
cmpsl
call
fldenvs
add
sbb
lret
into
test
sbb
pop
pop
scas
mov
xor
lret
stos
es
or
mov
mov
cwtl
sbb
ret
pop
mov
dec
in
aad
xchg
and
jb
mov
mov
clc
sbb
push
pop
addr16
mov
cli
repnz
mov
sbbl
rorl
shlb
jb
add
ja
push
aas
cwtl
lret
fildll
adc
jp
sti
xor
push
icebp
int3
sbb
into
idiv
nop
in
mov
pop
jnp
xchg
mov
xor
inc
and
add
or
xlat
insb
lret
and
mov
das
inc
push
mov
push
xchg
arpl
dec
stos
cmp
mov
adc
push
mov
adc
adc
std
lock
popf
add
jmp
mov
jno
addb
dec
pop
xchg
pop
inc
cmp
dec
out
pop
imul
pop
notb
pop
jb
ja
lea
popa
cld
outsl
inc
mov
push
fstps
mov
cmpsb
jl
xlat
imulb
lock
mov
pop
mov
lock
ljmp
pop
cmc
sbb
ss
jl
mov
rep
jge
fwait
in
dec
rcll
lock
fdivrl
int
cwtl
aaa
sarb
sti
xchg
nop
push
out
sbb
mov
rol
inc
mov
js
jl
pop
sahf
push
cmc
pop
xor
sahf
jg
xchg
add
push
dec
xlat
xchg
lcall
jno
push
cs
decb
xchg
pop
jbe
mov
add
leave
ret
movsl
icebp
out
and
xor
imul
or
mov
xor
push
jg
mov
adc
mov
pop
jge
fdivl
lahf
cli
xchg
sarl
sahf
xor
add
dec
aas
ds
out
outsb
in
cmp
orb
jle
pop
nop
addl
sbb
mov
cmp
mov
and
ror
push
cli
lcall
loope
jecxz
pop
imul
dec
popa
sbb
mov
imul
jge
inc
mov
cmp
jg
test
fidivrs
aam
inc
arpl
or
mov
repnz
fisubrl
nop
ja
repnz
lahf
push
xchg
mov
or
pop
cmc
and
push
xchg
xor
mov
scas
loope
cltd
out
lret
scas
out
les
xor
mov
std
ss
mov
sbb
insl
mov
push
sarb
not
jb
and
sub
iret
jno
jle
cmc
scas
insb
add
jae
je
or
sti
repz
add
adcb
push
push
or
cmp
add
into
inc
push
push
je
push
xchg
add
pushf
addb
test
add
inc
cmpsl
xorl
or
inc
push
inc
popa
popa
xor
dec
pop
push
call
lods
mov
fisubrs
jg
hlt
into
dec
jl,pt
mov
jle
mov
mov
xor
sbb
inc
je
loop
or
jns
add
mov
clc
xchg
jmp
pop
insl
les
jb
nopl
jecxz
sub
dec
imul
push
pop
leave
das
rcr
aas
dec
shll
cmp
cld
and
pop
jne
fsts
xor
sub
notl
jmp
das
pop
jge
push
call
push
aas
mov
add
mov
enter
jg
addr16
inc
loopne
iret
int
dec
stos
cmp
fdivl
dec
mov
jbe
out
and
add
add
pop
mov
in
jmp
rol
repnz
in
loop
int
jge
inc
fidivrl
fwait
xlat
rolb
jle
inc
xor
lock
xorb
sbb
daa
cmp
test
xchg
pusha
mov
iret
mov
loope
cld
dec
pop
adc
cmpsl
mov
jae
mulb
mov
adc
aaa
cwtl
call
inc
jmp
push
push
lods
mov
cmpb
and
fcoml
jb
pop
dec
inc
sbb
lods
or
push
mov
mov
sub
xchg
enter
fsubs
ret
xchg
push
jp
cli
mov
sbb
mov
push
aaa
das
lcall
mov
and
addr16
je
pop
mov
fucom
push
addr16
sbb
xchg
mov
int3
fidivrs
jns
roll
out
cmpsb
push
and
stos
sbb
jne
in
pop
popa
sbb
add
repz
mov
into
mov
insl
jecxz
insb
daa
lcall
pop
jmp
pop
popf
dec
lahf
mov
mov
clc
dec
aam
gs
inc
sbb
rol
lods
pop
push
jno
test
lods
fcmovnb
mov
lock
aam
or
add
dec
xchg
mov
shlb
in
adc
mov
es
or
dec
les
push
jne
push
dec
cmp
js
mov
addr16
and
mov
adc
popa
lret
add
call
adc
jno
xchg
nop
sub
call
pop
jle
shll
adc
pop
jl
shll
push
jns
jnp
sti
or
add
inc
aam
mov
test
fstps
leave
pusha
insb
and
inc
mov
sbb
and
cmp
fistl
jns
mov
hlt
xchg
add
jge
xor
add
mov
jb
cltd
daa
lods
dec
pop
sub
sub
mov
sub
mov
lcall
mov
jno
hlt
in
decb
loope
dec
testl
adc
mov
mov
shll
lret
loopne
cmp
cmpsl
testb
nop
bound
push
push
cld
sbb
pop
pop
sbb
pushf
jge
enter
dec
inc
cmpsb
insb
fnsave
jp
dec
ret
cmpsb
leave
cmpsl
jg
dec
pop
add
xchg
add
push
fwait
das
mov
inc
mov
xchg
push
jmp
pushf
jns
lahf
and
inc
pop
nop
mov
and
cmc
loopne
cmp
sub
mov
xchg
push
mov
roll
and
cmp
movsl
pop
div
mov
cmp
sbb
add
mov
rclb
xor
movsl
insb
pop
jp
int
pop
jbe
out
mov
xchg
and
xor
cli
sub
repnz
shll
add
lcall
xor
jl
mov
lock
mov
mov
in
jle
sub
jns
add
jb
cmpb
notl
icebp
push
call
lds
outsb
or
decb
in
xor
sub
fwait
push
add
int3
xor
push
or
sbb
mov
push
enter
pop
mov
lahf
aaa
push
or
or
lahf
cmp
or
lea
jle
cmp
mov
pop
sarb
testl
cwtl
sbb
xor
dec
loope
push
push
push
sahf
loopne
cld
cld
or
mov
sbb
sbb
popl
push
vpcmpgtd
jg
pop
arpl
shll
int
in
dec
inc
std
das
test
mov
mov
xor
imul
or
aad
jmp
ret
and
inc
out
cwtl
sbb
movsb
cmp
mov
cs
cwtl
cli
mov
cltd
sub
cli
test
jb
inc
or
xchg
pop
and
jae
xchg
jno
jge
lret
fisttpll
ret
int3
sbb
fucomp
mov
and
cmp
or
insb
and
shrl
rolb
cmp
lret
sbb
fisubrs
leave
das
xchg
mov
lods
add
mov
mov
sbb
fadds
jp
ret
inc
push
shll
sub
pop
adc
push
aam
arpl
lock
pop
push
std
flds
xchg
sbb
jno
lcall
xchg
push
daa
pushf
daa
adc
imull
test
cmp
out
lods
jnp
clc
insb
mov
sbb
sbb
js
fsubl
inc
adc
jno
push
addb
jl
rcll
dec
fdivrl
inc
mov
cmp
jl
ss
push
xchg
push
sbb
or
mov
sbb
out
sahf
xor
cmp
mov
xchg
pop
push
stos
xchg
aaa
shll
mov
rcrl
push
sbb
mov
or
and
imul
repz
mov
out
insl
fdivrp
cmp
add
push
mov
jle,pn
mov
test
cltd
cmp
insl
pop
pop
aaa
mov
or
ror
fnstcw
and
inc
mov
push
adc
dec
mov
out
mov
outsb
sub
cmp
sub
iret
push
pop
cmp
and
and
scas
sbb
inc
dec
int3
pop
fsts
pop
push
std
fadds
fs
or
andl
cwtl
loop
xchg
out
or
inc
stos
fld
mov
sbb
icebp
cmp
lock
mov
pop
adc
fldcw
pop
addr16
mov
inc
or
jmp
jecxz
mov
cmp
xchg
rorl
and
fistps
psubw
and
inc
jecxz
js
cmp
add
and
push
mov
xor
mov
je
jae
bound
je
or
call
jmp
and
enter
xchg
xor
mov
inc
mov
mov
xor
mov
push
in
enter
shlb
pop
inc
ret
int3
icebp
rolb
or
sub
pop
pop
in
pop
add
cmpsb
sub
sub
adc
insl
inc
pusha
cmpsl
ret
jo
in
push
dec
mov
fimuls
shl
stos
or
punpcklbw
mov
out
shll
call
or
aam
sahf
ljmp
out
mov
push
xchg
call
and
movsb
pop
sbb
loop
push
cmp
sub
and
lods
add
push
add
mov
mov
popa
stos
adc
loop
test
or
mov
jmp
repz
or
dec
ss
test
nop
mov
std
mov
jg
add
aad
pop
daa
aaa
dec
add
ss
mov
pop
jge
rorb
jno
iret
push
imul
cmc
fdivl
fcmovnu
js
dec
mov
adc
mov
ss
dec
mov
daa
data16
aaa
cmp
pop
outsb
sbb
das
inc
aaa
push
xchg
or
out
aas
pop
ret
mov
hlt
lahf
and
call
dec
aad
mov
sub
std
jle
sub
push
movsl
mov
shrl
mov
inc
add
pop
popa
mov
cwtl
int
imul
scas
andb
cwtl
sub
fidivrl
sbb
sub
aas
xor
xor
mov
sub
minps
and
jl
add
int
icebp
lret
mov
sub
sub
subb
cmp
loop
push
mov
ds
aaa
mov
test
sbb
insb
mov
insl
sti
out
and
adc
pop
fwait
ss
xchg
das
add
xor
mov
jl
inc
mov
outsl
gs
jo
jp
mov
lret
test
mov
test
pop
shlb
jne
out
je
test
leave
xchg
pop
movsb
rep
mov
aam
mov
and
fimull
data16
out
rcrl
push
je
aaa
mov
leave
mov
incb
lcall
sbb
icebp
jae
int3
arpl
adc
inc
lret
xor
mov
push
push
jmp
aas
in
mov
adc
xor
imul
dec
decb
inc
fwait
add
and
sarl
sahf
mov
xchg
mov
jge
sub
in
pop
scas
push
lahf
xor
lcall
push
mov
subb
cmp
pop
cmp
sbbl
leave
rorl
pop
rcll
sbbb
add
jge
outsl
lock
xchg
lret
test
push
cmpl
scas
mov
jns
adc
push
cmpsl
pop
je
xchg
sti
sub
mov
rclb
xor
outsl
outsb
xchg
sti
jbe
pop
notl
rcl
fistl
and
jmp
mov
imul
iret
cmp
sbb
shrb
xor
sub
outsl
out
insb
lcall
divb
call
pop
add
arpl
and
and
jmp
mov
lds
lds
mov
dec
mov
mov
mov
inc
scas
mov
cmp
js
push
xchg
stc
cmp
aaa
into
push
push
sub
push
fsubl
push
andb
in
mov
mov
mov
fcompl
cli
nop
or
jge
mov
push
push
jge
add
and
inc
out
dec
fwait
dec
lahf
mov
pop
es
fisttps
dec
fcomp
and
jp
out
or
cmp
mov
roll
mov
push
in
cmp
or
aad
dec
outsl
push
jp
mov
mov
jge
in
cmc
xchg
inc
aad
pop
repnz
outsl
xor
pop
adc
pop
jmp
lock
sbb
mov
sub
mov
push
stos
dec
in
cmp
out
nop
mov
icebp
xor
pop
icebp
xchg
pusha
std
and
fstps
push
lahf
std
rorl
cmp
lds
adc
pop
aaa
pusha
movsb
fsubl
addb
test
and
and
imul
fstpt
ret
fisubrl
pop
sbb
jbe
jae
daa
lods
ljmp
ljmp
scas
cmp
mov
dec
mov
push
mov
into
adc
inc
push
mov
in
std
mov
and
iret
aam
jecxz
fldl2t
pop
arpl
out
push
push
mov
mov
jmp
dec
push
pop
ljmp
push
repz
push
aam
incl
dec
in
sbb
stos
mov
jge
cs
jbe
ss
fwait
lods
rclb
pop
cmp
imulb
imul
cmpsl
mov
cli
insl
sub
sti
repnz
ss
mov
incb
mov
jg
inc
ficoms
fwait
push
mov
fcmovnu
fadd
xchg
cmp
dec
fidivrs
outsl
or
gs
or
jge
in
test
add
or
xor
jg
push
dec
dec
cmp
mov
lds
mov
loop
mul
cmp
insb
dec
int
push
lahf
pop
or
adc
or
push
mov
shl
push
add
inc
leave
pop
dec
pop
jmp
mov
pop
jmp
mov
jne
mov
lods
cmpsb
mov
xor
cltd
cmpsl
cmp
loope
cmp
jno
push
or
sbb
stos
push
cmp
xchg
or
sbb
push
xor
mov
xchg
es
fsubr
mov
jge
outsl
adc
cmpsl
subb
stos
inc
fsubrs
stos
and
out
rcr
rclb
push
mov
dec
jecxz
xchg
or
bound
je
or
xor
out
xchg
inc
dec
out
test
adc
bound
or
dec
movd
ret
roll
in
pop
sar
jno
ret
shl
push
adc
mov
inc
jmp
and
repz
pusha
imul
mov
sbb
mov
aaa
call
cmp
in
adc
clc
push
push
mov
adc
int
movl
add
js
push
cs
dec
gs
dec
popf
inc
nop
or
jle
lcall
xchg
fisttpll
leave
enter
sti
sub
pusha
pop
sbb
mov
dec
es
and
testl
in
test
insb
sub
pop
adc
lcall
pop
je
mov
mov
repnz
das
and
mov
nop
jno
adc
or
push
dec
pop
test
movsb
pop
call
cmp
or
mov
idivb
add
out
push
dec
fwait
xchg
clc
jbe
sub
push
cmp
xchg
mov
mov
aas
and
mov
cmp
outsl
lea
mov
loope
xor
pop
dec
push
sub
xor
pop
dec
out
add
add
sub
push
and
pop
lds
push
mov
popf
xor
outsl
push
mov
int
rcll
sub
ret
addr16
adc
pop
out
outsb
lock
jl
hlt
mov
cmp
jmp
push
push
xchg
xchg
xor
mov
loopne
pop
mov
ret
stos
sarb
mov
out
xor
adc
fs
cmpsb
fcomps
jo
pop
scas
add
jp
push
inc
stos
cmc
insb
lock
cwtl
xchg
and
pop
xorb
enter
or
adc
scas
test
in
add
xor
push
std
jg
mov
rorl
dec
and
gs
inc
xchg
pushf
or
jge
mov
cmc
inc
mov
cmp
lea
cli
cmc
or
out
sahf
sarb
mov
insl
sub
cmp
cmp
fidivl
mov
mov
xchg
jnp
fdivl
or
iret
cmpsb
scas
and
aad
clc
jge
jl
adc
and
divl
mov
sub
jbe
lea
add
ret
inc
nop
insb
sbb
and
pop
dec
ret
push
push
pop
in
sarb
add
movsl
icebp
inc
sbb
fxch
inc
in
cli
shll
mov
fidivrl
xchg
leave
cmp
test
mov
sub
enter
mov
scas
movsl
xor
or
xor
pop
ss
lea
inc
inc
pushf
jo
cmp
das
xchg
and
shll
aam
js
push
arpl
xor
and
sbb
test
lods
out
mov
jg
dec
jae
pop
cmp
sarb
adc
movsl
add
mov
xor
sub
loope
xchg
inc
cmpsl
clc
xchg
sahf
xlat
push
loopne
mov
stc
shlb
dec
cmp
push
insb
xlat
aaa
lret
mov
int3
pop
push
sub
mov
roll
lods
mov
pusha
mov
stos
dec
add
bound
ss
pop
add
cmpsb
les
inc
mov
sbb
xchg
or
and
out
dec
and
add
leave
fldenv
inc
and
cld
pusha
and
xor
mov
push
cwtl
pusha
push
pmaddwd
xchg
call
lods
jl
push
xchg
nop
xor
sar
icebp
mov
ret
imul
xor
icebp
xchg
mov
arpl
sub
pop
add
pop
cltd
std
and
cltd
test
fwait
stos
inc
hlt
loopne
and
test
test
jecxz
ljmp
cmp
stc
push
sub
aas
xchg
push
or
pop
xor
sub
jns
push
in
xchg
mov
lahf
xchg
adc
pop
mov
jbe
leave
and
cmp
lock
cmp
lcall
bswap
jno
loope
pop
and
dec
ljmp
les
bound
popa
xchg
adc
movsb
push
loop
dec
pop
pop
testb
or
mov
jns
pop
xlat
outsl
rorb
mov
lods
dec
sti
shlb
sti
mov
movsb
jge
xlat
popaw
sbb
mov
add
sahf
jne
out
push
sbb
sahf
pop
mov
pop
dec
roll
adc
loope
gs
bound
imul
jbe
lods
push
cmp
sbb
pop
mov
mov
mov
rcr
fdivrp
or
xor
into
xchg
popa
push
lcall
bound
ja
fbstp
stc
mov
jo
add
mov
fsubl
fs
cld
lret
or
leave
mov
aaa
mov
lods
xchg
es
and
jge
adc
js
arpl
pop
dec
insl
in
cmp
jo
movsl
fs
dec
mov
je
sbb
adc
mov
cmpsb
sbb
dec
or
push
jmp
jae
jne
dec
fstp
in
push
lock
loopne
mov
leave
mov
push
xchg
imul
and
bound
clc
cltd
adc
inc
sub
cmp
inc
sbb
xchg
lea
xor
ss
add
mov
movsb
xor
fstl
sbb
les
iret
pusha
divl
loop
stos
xchg
jle
dec
pusha
test
pushf
or
xchg
dec
inc
fwait
fs
cmpsl
jg
pop
and
scas
stos
mov
adc
cmp
xchg
dec
out
stc
mov
push
cmc
xchg
mov
mov
stc
scas
mov
or
sahf
jnp
in
jge
mov
fcmovnbe
add
push
jne
test
cmpsl
rcr
xchg
adc
sbb
and
fucom
sahf
jmp
pop
cltd
fucomi
push
mov
shlb
les
xor
adc
inc
add
add
jb
or
scas
mov
jecxz
ficoms
xchg
jnp
jmp
mov
xchg
cmp
pop
in
cld
push
mov
test
arpl
cmp
in
out
out
jge
jbe
pop
sub
push
inc
jbe
pop
stos
cmp
dec
mov
cs
xor
mov
aas
push
sbb
nop
in
insl
cmp
add
push
sbb
pushf
lret
xchg
bound
fstpl
es
xchg
xor
outsb
and
sub
mov
ja
and
std
arpl
pop
inc
xchg
pop
sar
jmp
nop
ficoms
mov
push
lock
cmp
push
shr
cmp
inc
xchg
std
jo
and
out
add
call
lret
push
jo
and
adc
insl
inc
mov
insb
call
test
outsb
sti
mov
in
sbb
inc
int
add
in
std
leave
imul
addb
inc
jmp
jb
bound
mov
push
in
cmpsl
inc
fwait
lods
dec
movsb
pop
sub
popa
jg
and
fwait
cmpb
mov
dec
pop
push
cwtl
or
int
fwait
mov
push
sub
add
std
inc
pop
and
inc
in
xor
fidivl
popa
in
ret
mov
addr16
dec
sub
xchg
divb
popf
push
inc
mov
adc
repnz
imul
sarb
cs
xchg
pop
inc
les
sti
pop
in
mov
sbb
arpl
xor
fs
pushf
sbb
dec
mov
popf
xor
ret
bound
jns
outsl
fadds
sbbl
sub
fstps
sbb
pop
cwtl
stos
mov
jne
jmp
movsl
dec
add
push
out
pop
iret
sub
loopne
jle
inc
xchg
insb
test
repz
ffreep
add
std
sar
mov
jb
nop
push
mov
mov
in
aas
push
out
cmp
sub
stos
mov
enter
dec
inc
or
jmp
lock
insl
call
sbb
cmpsb
sbb
popa
mov
add
stos
outsb
mov
jnp
lret
pushf
dec
in
jbe
clc
xor
and
sub
outsb
sub
lods
dec
adc
xchg
mov
push
in
push
repnz
das
cmp
adc
lcall
push
jne
mov
nop
mov
lahf
decb
add
out
mov
adc
xor
out
sub
sub
xchg
jp
sub
in
jb
jnp
push
xchg
cmp
add
jb
push
xor
push
fsubl
out
scas
lds
push
test
rcll
push
jecxz
insb
fwait
mov
rcrl
sarb
mov
mov
push
mov
add
cmpsl
call
popa
or
enter
jl
lock
cltd
lods
cmpsb
or
jg
inc
out
lahf
nop
in
test
and
lret
xchg
mov
pop
mov
mov
mov
roll
repz
rol
clc
or
inc
insl
aad
add
stc
pop
xor
cwtl
inc
lretw
mov
rsm
inc
inc
mov
push
fisttpl
aas
bound
scas
sbb
inc
push
jb
nop
mov
testb
mov
adcl
push
loopne
adc
leave
xchg
mov
subl
pop
sub
pop
inc
mov
fbstp
mov
dec
jp
cmpb
dec
push
adc
pop
fstpt
or
jno
clc
adc
daa
mov
aad
jb
data16
adc
fs
pop
adc
pop
insb
insl
xor
icebp
inc
push
push
pushf
rcl
mov
mov
pusha
xor
jbe
xchg
repnz
addr16
je
add
cmp
jecxz
mov
sub
fcompl
push
sub
into
stos
mov
mov
aas
scas
sub
dec
out
lret
ss
push
sub
rcrl
mov
jmp
pop
lret
jle
lret
lds
outsl
std
sbb
mov
mov
pushf
or
adc
xchg
inc
mov
pop
xor
push
sub
mov
daa
push
inc
shlb
out
cltd
xor
iret
xchg
in
das
push
aad
mov
cmp
cmpsb
jp
mov
lods
mov
or
filds
and
in
subl
add
pop
xchg
and
dec
mov
pop
imul
sbb
stos
jbe
subl
imulb
jmp
adc
mov
add
push
js
inc
jno
enter
outsb
daa
mov
sub
leave
sub
cmp
mov
xchg
adc
jb
js
fwait
in
push
add
jl
enter
call
mov
sbb
push
test
xchg
notb
adc
xlat
cs
pop
mov
data16
inc
je
mov
ucomiss
push
or
loope
int3
mov
ja
dec
mov
sbbl
mov
add
xor
xor
xchg
je
arpl
int3
insl
divb
ss
sti
es
test
bound
add
shl
and
mov
scas
and
popf
mov
sbb
loope
xor
flds
sbb
push
push
test
ss
out
mov
loopne
fwait
jle
add
insl
push
dec
std
int
cmp
lods
enter
mov
xorl
sub
jb
and
dec
jae
je
outsl
xchg
pop
popf
push
adc
mov
push
mov
cmc
mov
adc
in
clc
imul
aam
or
fs
insb
push
ljmp
std
add
in
aaa
and
mov
ret
xor
dec
mov
adc
ret
add
sub
inc
rclb
jmp
jae
fildll
sbb
fdivr
mov
je
cltd
cmp
int3
lret
sti
cltd
jno
sbb
pop
xchg
js
dec
imul
cmp
leave
push
in
dec
sarl
sub
sahf
outsl
pushf
add
push
test
xchg
pusha
cld
push
mov
inc
fisubl
js
sbb
inc
push
orl
scas
adc
testl
test
mov
pusha
lcall
enter
dec
roll
pop
pusha
fucomp
xchg
js
or
jp
ret
pop
sub
and
xchg
test
lcall
sbb
mov
inc
ret
stc
std
pushf
xor
jmp
testb
orl
das
cltd
test
jbe
cmp
xor
xorl
lds
push
and
and
mov
arpl
lods
push
daa
cwtl
call
adc
lock
filds
aad
cmp
scas
daa
mov
sbb
sbb
scas
inc
sbb
mov
cmp
aaa
loopne
pop
add
daa
mov
cmp
lock
lea
aaa
imul
out
ja
pusha
cs
insl
adc
pop
es
adc
jb
data16
iret
xchg
dec
pop
push
adc
icebp
mov
mov
ss
divl
push
push
ljmp
inc
sbb
gs
into
dec
mov
lods
cmp
and
cs
xor
sbb
push
jno
in
addl
jo
aad
lret
dec
dec
testb
insb
ss
sbb
cmc
cmp
rclb
xor
push
pushf
in
repz
addr16
or
sub
pop
lret
and
add
jae
mov
repz
stos
cmp
jne
loopne
icebp
fnstcw
mov
fsubrl
ss
scas
fwait
mov
xor
push
mov
outsb
add
jbe
addb
cwtl
divl
cmp
cmp
pop
jmp
iret
dec
out
stc
int
aam
dec
in
lods
outsl
jo
aam
mov
iret
insb
inc
jl
pop
jno
xchg
mov
repnz
test
cmp
loop
loop
push
pmaddwd
and
push
into
or
in
movsb
outsb
jle
fistpll
adc
loope
pop
mov
stos
jns
lea
in
push
aam
repnz
sti
test
xchg
ljmp
daa
fdivrs
daa
leave
test
ficoml
cld
push
adc
and
ja
and
mov
mov
dec
push
movsb
loop
xchg
repnz
test
and
dec
into
mov
jae
sub
mov
mov
insb
jmp
xchg
jge
xchg
xorl
push
les
sbb
lods
xor
add
mov
inc
lret
xchg
sbb
mov
ret
jo
outsb
xchg
fiaddl
or
sti
sub
push
dec
lret
sti
testl
adc
jmp
js
jo
out
ja
and
and
les
cli
push
sbb
shrb
es
test
ret
add
int
push
out
sbb
or
sub
inc
lods
cmp
mov
and
call
test
das
add
mov
test
fiadds
sub
adc
shrl
dec
outsb
add
push
adc
push
push
cmpsb
test
inc
sub
push
push
je
psubq
mov
pop
xlat
push
out
loop
push
aas
icebp
jne
and
mov
and
xchg
mov
push
mov
sub
imul
jne
out
and
hlt
inc
std
mov
xchg
addr16
inc
push
out
adc
pop
push
outsb
or
push
loop
insb
pop
insl
mov
pop
ret
sbb
idivl
aas
lock
and
mov
add
mov
mov
int3
xor
sahf
xchg
sub
iret
jnp
lahf
pop
mov
bound
mov
sbb
add
xchg
and
adc
mov
cmp
ja
push
xor
fcmovnb
jne
in
insl
leave
mov
lds
cld
cmpsb
dec
ret
in
xor
enter
jb
dec
iret
rcrb
inc
aas
sbb
sahf
addr16
pop
loopne
jle
cmp
imul
dec
mov
test
ja
shlb
or
cmp
ds
push
push
xchg
sbb
adc
push
lods
ljmp
loope
xchg
sbb
add
ljmp
mov
inc
gs
xlat
xchg
fs
leave
mov
push
fistl
mov
dec
pusha
push
clc
cmp
or
cs
adc
pop
adc
inc
cld
adc
xor
cmp
push
sahf
in
dec
mov
inc
out
std
push
add
jnp
fidivs
xor
xlat
imul
sub
or
dec
lea
rclb
sbb
pop
in
and
inc
loope
jne
lahf
and
aad
inc
ret
ds
push
in
sbb
or
js
cmpsl
arpl
add
lcall
in
sub
mov
fwait
push
jnp
fs
loopne
addr16
out
sub
insb
pop
xchg
pop
mov
insl
rsqrtps
insl
push
sbb
xchg
rorl
jle
in
fwait
outsl
xchg
incb
sbb
pop
and
add
shrl
push
dec
push
sbb
mov
cmp
lds
ljmp
push
in
pop
mov
mov
pusha
imulb
adc
sti
xlat
add
mov
subb
leave
int
invd
out
aas
mov
aaa
into
mov
xchg
sub
push
in
mov
das
adc
aaa
xor
jg
jp
pop
jmp
aaa
notl
arpl
out
idivw
or
dec
xchg
cwtl
in
int
rep
jmp
or
dec
adc
or
dec
inc
lahf
push
aas
jmp
cmc
xor
es
xor
adc
cltd
jge
cwtl
fsubr
jg
fmulp
xchg
mov
and
xchg
aaa
jmp
pop
sub
out
mov
movsl
push
mov
cmpsl
out
sbbl
in
std
testl
vmovntps
jmp
ss
jns
scas
mov
xor
adcb
stc
and
inc
fidivrs
xchg
shrb
ret
addr16
mov
subb
cld
testl
lods
out
lret
lret
mov
add
gs
inc
in
push
movsl
adc
les
cwtl
stc
loopne
cmpsl
dec
in
cmp
xor
inc
je
push
push
je
jne
dec
push
outsb
ds
ret
loop
loope
mov
les
sti
push
mov
push
xor
add
xlat
jbe
xchg
mov
sbb
movl
addb
icebp
fidivrl
mov
hlt
outsl
push
fs
insb
aaa
nop
sbb
cmp
movsb
mov
loope
dec
call
push
cmp
and
scas
insb
jle
arpl
rclb
lret
cmp
out
cmpsl
xor
lods
jecxz
fistpll
push
in
mov
xchg
mov
push
les
mov
stc
pop
in
cmp
roll
mov
idivl
mov
test
inc
loopne
loop
loope
outsb
mov
mov
mov
mov
fidivs
sub
cld
xchg
or
push
inc
push
fadds
out
orl
outsb
dec
mov
cmp
dec
out
add
mov
faddl
or
mov
lock
mov
mov
negl
pop
add
iret
jae
stos
and
inc
pop
mov
dec
xor
push
out
cwtl
fbstp
inc
addr16
imul
push
test
add
and
jmp
test
test
ret
into
movsb
int3
push
cwtl
mov
fdivp
imull
adc
lods
gs
cmp
xlat
inc
sub
sahf
orb
mov
mov
sub
cmp
pop
icebp
xchg
ror
and
fidivl
hlt
and
jbe
or
fmul
test
jmp
enter
pop
jbe
push
insl
jge
or
jle
mov
out
push
pop
add
push
jae
mov
pop
outsb
push
inc
mov
mov
xlat
in
dec
iret
inc
cmpb
loope
cltd
pop
dec
sub
cmp
or
pop
outsb
aad
ret
sub
das
add
testl
jb
movsb
arpl
aam
or
imul
addr16
or
ficoml
jo
ljmp
lock
sbb
inc
hlt
test
mov
popa
sub
loop
sbb
aam
mov
js
in
aad
inc
push
and
jmp
mov
int
orb
jo
mov
popaw
inc
pop
jo
xor
stos
jmp
and
push
fdivl
sbb
sub
fldt
cmp
mov
cwtl
xor
sbbb
mov
into
ret
jg
data16
jno
call
dec
add
push
shll
inc
lds
loopne
cmp
call
pop
push
aas
aam
imul
pop
outsl
pop
cs
insb
fisubrl
shll
cmp
mov
push
cs
ret
divb
leave
out
mov
inc
nop
jnp
mov
outsl
das
imul
xchg
lcall
mov
pop
das
and
xchg
inc
mov
stos
rcl
repz
cli
stc
ret
sub
pop
arpl
outsb
shll
push
popf
cmpsb
mov
lods
pop
cmpsl
dec
inc
fstpt
test
insl
movsb
xlat
outsb
push
sahf
ret
int3
dec
pop
insl
aad
xor
mov
jae
mov
psubsb
push
xchg
push
push
cmp
push
push
sub
popf
pop
or
les
cmp
xchg
jmp
push
fisubrs
push
push
sub
jnp
out
div
inc
pop
fistpll
adc
into
in
cltd
mov
sub
gs
insl
int3
pop
xchg
dec
call
cmpsl
xor
arpl
nop
mov
push
cld
iret
or
lret
pop
jmp
add
aaa
and
sbb
dec
aas
in
jg
mov
aad
sbb
add
cli
shll
add
sub
push
ror
dec
in
or
subl
imul
pop
jbe
mov
aas
mov
dec
xchg
scas
inc
leave
outsl
dec
out
in
sbb
sub
fwait
mov
or
add
mov
cltd
adc
lret
pop
shrb
pop
vcvtps2dq
cwtl
fidivs
shrl
jl
add
mov
cmpsb
lock
lret
sarl
enter
aas
dec
or
xchg
cmp
int
es
cmp
fs
icebp
sahf
stos
inc
rolb
leave
nop
mov
or
xchg
xchg
dec
add
leave
xor
xchg
fsubs
mov
movsb
aaa
sbb
push
addr16
icebp
jbe
mov
imul
add
pop
arpl
pop
scas
and
xchg
sub
or
pop
les
adc
daa
xchg
mov
jne
aas
std
lods
sbb
jo
pop
in
std
sbb
pop
xor
mov
xchg
jecxz
mov
mov
add
addr16
adc
sub
and
nop
push
aad
test
push
inc
sbb
mov
adc
ret
add
pop
cmp
repnz
rcl
repnz
mov
mov
xchg
stc
shlb
mov
mov
mov
lcall
dec
loop
shlb
or
inc
push
rorl
test
aas
or
and
mov
and
adc
xor
add
lret
lods
mov
pop
push
mov
loopne
ret
dec
mov
or
xor
xor
cld
or
in
jns
data16
imul
jp
or
mov
out
add
in
test
cli
loop
adc
xchg
xor
loope
out
push
out
dec
popf
xchg
sbb
aaa
call
mov
pop
inc
ds
bound
movsl
ja
xchg
fwait
shll
and
scas
mov
mov
mov
xchg
and
lahf
ss
inc
cmpsl
ljmp
mov
andb
sub
loopne
cli
lock
mov
test
push
pop
mov
mov
push
aaa
mov
mov
fildl
xor
jns
mov
movsb
adc
ret
or
mov
or
xor
pop
xchg
mov
push
and
dec
inc
int
outsb
mov
sbb
mov
or
xchg
nop
lds
insb
sti
mov
xor
orl
das
lret
push
mov
cmp
andb
adc
push
insl
clc
jae
daa
mov
mov
shlb
jbe
lods
in
fwait
rorl
jg
push
out
loopne
mov
rolb
mov
adc
mov
sbbl
sub
mov
ret
out
sahf
adc
fsubrs
aas
mov
icebp
and
cmc
sbb
add
jb
xor
in
test
imul
fisttpll
shrl
mov
mov
jb
adc
jno
sbb
xchg
adc
rcr
jbe
inc
push
mov
out
sbbl
mov
cwtl
test
ss
inc
adc
inc
shlb
xor
jb
inc
cmp
outsb
jne
stc
iret
pop
mov
dec
fisttpl
in
adc
cltd
jnp
call
xor
or
pop
jnp
xorl
lock
sti
push
out
sub
movsl
aas
orb
pop
adc
movsb
cmp
mov
cltd
jge
ds
xchg
je
out
mov
lea
lahf
loope
popl
shl
jb
dec
jnp
inc
mov
fnsave
stc
cmp
imul
dec
xchg
push
xchg
test
rol
test
mov
cmp
and
and
imul
std
mov
cmpsl
or
cltd
sub
cwtl
mov
jbe
and
fists
ss
fldenv
arpl
rclb
jmp
arpl
fnstsw
push
leave
mov
sti
or
mov
aad
jecxz
xor
add
sub
xchg
cmpsl
xor
das
in
das
add
ret
jnp
je
push
js
mov
hlt
jp
or
dec
aad
icebp
popa
stos
sbb
pop
adc
mov
mov
gs
push
data16
dec
adc
jle
jnp
pop
cmc
in
test
inc
shrl
add
adc
pop
dec
ds
insl
insl
cmp
dec
imul
shrl
jae
mov
les
mov
or
xlat
jnp
test
clc
mov
rclb
stos
jp
sbb
out
ja
pop
pushl
shufps
std
cmp
mov
hlt
push
mov
add
inc
fsubrs
xlat
cmpsl
pushf
inc
dec
add
ret
mov
sub
mov
jbe
test
pop
jno
popf
push
and
mov
mov
icebp
dec
repnz
bound
sarb
lea
in
or
test
leave
sub
insb
loop
inc
xchg
sbb
xlat
jecxz
lds
repz
mov
add
les
in
subb
or
dec
mov
mov
add
and
mov
inc
data16
jo
mov
cmp
fildl
xlat
jbe
loopne
push
cmp
mov
and
push
ss
add
enter
add
jp
mov
pop
in
call
xchg
mov
cmp
aas
and
inc
fs
mov
xor
popl
fldenv
movsl
xchg
lret
stos
ret
pop
fdivl
fcmovne
dec
pop
or
or
ret
scas
or
jmp
rolb
cltd
and
cltd
js
xchg
push
and
pushf
sbb
rol
fldl
inc
pop
sbb
push
push
insl
stos
sbb
or
out
mov
dec
roll
cwtl
das
mov
adc
sub
add
dec
cli
mov
inc
inc
pop
imul
insb
lock
cmp
lock
xor
lret
test
jbe
and
dec
sbb
cmc
mov
fistl
das
je
sub
sub
dec
cld
mov
cmpsb
xor
jp
ja
xchg
shl
xchg
cmpsl
dec
dec
and
mov
pop
stos
dec
roll
jl
adc
outsl
daa
add
mov
cli
in
lock
xorb
pop
jne
mov
inc
mov
dec
call
decl
inc
xor
cs
out
call
xchg
int
sbb
cmp
xchg
jge
push
pop
addr16
add
cli
push
and
mov
icebp
shlb
adc
fsts
out
jne
popf
jns
dec
jns
lahf
ret
enter
rolb
mov
cs
es
mov
int3
mov
loop
cmp
mov
inc
cmp
dec
stc
or
dec
dec
inc
in
repnz
aaa
xchg
dec
scas
out
jle
xchg
lds
pop
ja
or
lods
fbstp
mov
xchg
cmp
xchg
pop
aam
sbb
scas
cmc
out
daa
into
pushf
daa
in
or
insb
jns
arpl
xor
in
mov
push
rcll
and
sti
push
push
sub
fsubrs
out
adc
popl
and
mov
xchg
mov
lea
ret
mov
mov
je
jmp
leave
mov
mov
add
adc
push
add
mov
inc
inc
pusha
fildll
bound
sbb
int3
pop
popf
xor
cmp
push
cld
aaa
mov
rcrb
sbb
int
cmpl
add
subb
jbe
adc
sub
pop
mov
pop
in
in
pop
jmp
adc
dec
inc
sub
sahf
outsl
sub
or
bound
sub
not
icebp
sbb
mov
fsts
mov
push
fs
dec
cmpsb
xchg
jo
sbb
addr16
fucomip
mov
pop
push
stos
movsb
jne
pop
test
dec
popf
and
push
scas
movhps
xor
inc
pop
mov
mov
pusha
clc
and
push
mov
inc
les
aam
add
cwtl
mov
jo
cmp
add
iret
movsb
jno
int
test
push
sahf
jp
fbstp
jecxz
aas
stc
aad
mov
cmp
fnstenv
sti
aaa
cli
xchg
inc
mov
xchg
out
push
les
pop
inc
jb
data16
mov
popa
cmpsb
stos
test
ffree
jo
cli
daa
and
stc
push
and
lea
scas
mov
sub
hlt
imul
insb
sub
cld
je
negl
push
call
shrb
xor
fsubrl
flds
mov
or
or
scas
mov
push
mov
jle
mov
push
or
addl
sahf
data16
fisttpl
xor
push
push
aad
mov
loopne
pop
lock
je
iret
and
in
add
fucomp
and
gs
cmp
mov
ret
repz
or
icebp
inc
imul
dec
dec
outsl
jae
clc
in
cmp
call
or
ss
popa
cld
fsubl
adcb
fs
or
outsl
adc
xchg
inc
mov
loopne
dec
or
add
cmpl
jo
call
add
outsl
daa
in
sub
arpl
fcmove
das
ja
xor
push
adc
mov
jecxz
ljmp
in
cwtl
lods
or
and
lods
and
orl
test
push
divl
sub
sub
or
push
sub
lret
rorb
cmpsb
cmp
mov
pop
sub
out
mov
clc
xchg
mov
je
push
push
in
loopne
rcrl
test
sbb
fbstp
dec
icebp
fwait
add
outsb
neg
or
add
cmpsb
stc
movsb
data16
pop
stos
inc
mov
outsl
daa
fists
xor
fdivl
push
imul
lods
mov
adc
adcb
out
icebp
mov
test
mov
push
or
sub
xlat
rcll
imul
push
idivl
movsb
int
test
xor
mov
stc
push
or
nop
push
mov
xor
xchg
jmp
hlt
insb
insl
mov
pop
stc
mov
mov
sub
orl
cmpsb
pop
mov
adc
mov
stos
jbe
scas
and
pushf
inc
or
jno
lods
inc
mov
aam
nop
scas
mov
pop
in
cld
fmull
adc
lea
mov
and
pop
push
and
test
sub
ds
in
call
and
ficoml
jl
inc
out
adc
dec
xchg
mov
and
sbb
das
or
mov
ret
xor
cmpsl
pop
imul
adc
sahf
aaa
loope
adc
ljmp
cmp
insb
xchg
add
xchg
pop
cmp
pop
jbe
fisttpl
mov
pop
dec
pop
loope
jp
adc
push
and
xchg
cs
mov
int3
popl
pop
cmp
xchg
xchg
push
lret
sar
mov
sbb
daa
iret
ja
stc
fsubr
addr16
mov
out
fildll
add
mov
mov
stc
or
add
movb
mov
jnp
jmp
popf
sbb
push
sub
andl
jns
jle
sbb
push
and
flds
sub
je
popf
lcall
js
push
mov
mov
lock
lods
popa
shrb
fisubs
ret
jne
jge
fwait
jg
and
sbb
or
les
xchg
adc
sbb
pop
and
jb
sbb
push
mov
push
ficoms
repz
out
jae
mov
adc
jle
data16
jge
add
and
loop
xchg
jmp
test
push
sub
push
imull
xchg
mov
repz
mov
sbb
mov
push
fxtract
cmp
idivb
cmp
add
arpl
sbb
test
aad
out
addr16
cmp
js
cmp
mov
aas
mov
sbb
mov
gs
lods
cli
lods
push
dec
loopne
jb
aad
adc
enter
push
in
mov
cmpl
pushf
loope
pop
xor
mul
mov
mov
fisubrs
aaa
loop
out
jns
ljmp
sub
add
push
movsl
fisubrs
jnp
push
mov
pop
pop
mov
arpl
mov
ficomps
mov
xchg
add
mov
jp
adc
pop
imul
or
cmp
cmp
inc
lret
in
sbb
lods
mov
mov
std
pop
adc
shrb
and
add
inc
cmp
sti
cmpsl
lret
mov
popa
inc
cmp
aas
imul
mov
add
test
sub
jecxz
pop
loop
roll
jbe
push
mov
push
outsb
mov
mov
cmp
mov
mov
fsubl
mov
mov
lret
data16
repz
push
mov
test
xchg
mov
cmc
mov
lret
icebp
mov
inc
stos
mov
mov
push
pop
movsb
xchg
mov
cmpl
loope
cmc
mov
stc
pusha
sbb
sub
enter
push
mov
out
push
out
popf
leave
scas
popf
jo
out
je
lcall
and
ljmp
sbb
and
push
mov
mov
push
int3
imul
jg
or
nop
mov
xchg
mov
pop
dec
mov
cld
cmp
pop
subl
jg
cmp
movsl
push
popa
adc
leave
fsubl
inc
into
push
stc
lods
ljmp
test
loopne
sbb
fnstsw
mov
pop
cmp
lods
sub
fstp
pop
push
mov
adc
movsl
hlt
sbb
adc
mov
sahf
inc
ja,pn
insb
test
xor
xchg
jle
sbb
add
mov
rcll
rol
xor
gs
cmp
ds
add
mov
cmc
in
jecxz
cmp
jecxz
es
xchg
or
in
and
jmp
out
and
mov
in
ljmp
pop
adc
sbb
aad
dec
cmp
loopne
mov
repz
out
xchg
sbb
pop
dec
out
mov
rcl
daa
push
sbb
arpl
pop
xchg
mov
ret
mov
jbe
xchg
mov
pop
movsb
fs
jecxz
fists
push
sbb
sbb
data16
pusha
fldcw
dec
push
push
mov
cmpsb
rorl
pop
jno
pop
mov
pop
ss
fucomi
or
and
mov
jmp
lret
pop
mov
in
loopne
test
adc
rcll
or
pop
xchg
mov
mov
push
adc
cwtl
push
xchg
cld
imul
loopne
jecxz
xchg
mov
or
lock
cmp
sub
in
dec
xlat
add
pop
ficompl
jge
mov
fmul
clc
mov
pop
push
pop
inc
es
sahf
mov
pop
and
sbbb
pusha
daa
push
pushw
cmpsl
mov
pop
into
push
popf
inc
cltd
xor
adc
pop
idivb
xor
movsl
sbb
mov
mov
add
cmpsb
cmp
stos
cmp
loopne
sub
adc
aad
mov
add
xor
inc
and
mov
loopne
mov
lea
and
mov
push
notb
lret
inc
gs
cmp
add
push
pop
das
mov
mov
aaa
stos
xchg
addl
pop
jmp
out
adc
or
repz
mov
jp
xchg
data16
mov
push
stos
js
lods
scas
inc
leave
inc
cld
push
rclb
mov
shr
fnstsw
lds
sbb
mov
fcompl
movsl
out
dec
scas
pop
les
push
lahf
cltd
aam
jl
out
aam
adc
lock
adc
xor
into
pop
push
pop
adc
sbbb
in
ss
mov
aas
dec
pop
lret
xchg
cs
push
in
inc
push
mov
leave
jbe
jmp
scas
dec
and
neg
adcb
add
push
mov
xor
xchg
cmp
pushf
inc
mov
xchg
mov
aad
outsb
inc
push
mov
scas
mov
or
sub
jb
add
jecxz
ret
aaa
push
lods
inc
in
jle
mov
jg
jae
loopne
out
les
mov
pop
lcall
dec
loop
inc
mov
jge
imul
cmp
ljmp
ja
aaa
imul
add
stos
gs
lahf
loopne
mov
sbb
mov
iret
pop
and
mov
scas
gs
push
inc
fsubr
inc
jne
scas
mov
iret
push
xchg
cmc
lret
fsubrp
outsb
out
lock
ja
or
ds
sbb
dec
pop
in
sub
push
divl
lahf
les
addl
popf
cmp
lea
or
mov
aad
dec
movsb
mov
cmp
lds
lret
bound
jbe
loope
shlb
clc
enter
xlat
and
ficoml
movsb
pop
lcall
fistpl
jne
test
sarl
lds
sbbl
mov
decl
test
push
jp
ret
dec
dec
out
inc
imul
pop
or
les
mov
andb
testl
inc
mov
sahf
cmpsl
in
xchg
and
shr
xchg
scas
fdivrp
cwtl
std
test
cld
xchg
scas
dec
cmp
rcrb
js
repz
pop
pop
fisubrs
mov
test
and
xchg
mov
jle
rclb
mov
and
mov
dec
mov
addl
in
in
fnstenv
pop
std
push
cmp
pop
adc
fcom
mov
pushl
in
jae
std
jl
das
and
xor
lret
in
pushf
aaa
xchg
loop
leave
sahf
inc
xor
jns
xchg
xor
jg
mov
int3
test
cld
fldcw
mov
inc
loop
scas
adc
sarl
cli
or
ja
cmp
test
mov
xor
nop
cs
call
sahf
jecxz
mov
das
incb
xchg
inc
push
je
add
jg
das
or
fists
or
inc
ds
xor
mov
icebp
sbbb
or
pop
push
dec
mov
jge
xchg
sub
jl
dec
mov
lret
lret
jne
adc
inc
push
xor
pop
pushf
xor
ja
xor
ret
mov
stos
dec
jecxz
lahf
out
xor
mov
dec
ds
aas
mov
lods
cmp
dec
cmp
jo
and
sbb
or
dec
mov
inc
icebp
cmp
add
xchg
scas
adc
xor
and
adc
inc
pop
sahf
inc
xor
sub
pushf
lea
das
rcl
stos
mov
loope
lods
xchg
or
mov
cltd
xor
mov
test
rorb
pusha
dec
push
movsb
jl
mov
popf
imul
cld
xchg
lret
clc
lds
and
scas
call
mov
mov
or
adc
push
or
cmp
and
iret
stc
xor
dec
cmp
xchg
push
vpmovm2w
mov
lret
cs
std
mov
fsubl
subl
pop
and
scas
loop
sahf
not
push
test
mov
push
inc
je
and
adcl
pop
dec
iret
icebp
mov
cmp
and
mov
dec
lods
mov
outsb
xchg
lret
pop
repz
shll
jae
xor
scas
pop
ljmp
outsl
cld
cmp
lret
cld
nop
lods
jo
adc
out
xchg
clc
negl
aas
int
pop
add
leave
mov
mov
push
or
mov
popf
test
leave
jge
jae
shll
arpl
leave
xchg
fidivrs
add
ss
mov
movsb
loope
or
ret
xchg
imul
xchg
fucomip
inc
and
or
add
in
inc
sbb
ljmp
inc
ret
sub
repnz
mov
les
fidivl
xor
add
mov
fstpl
mov
sbb
test
inc
pusha
data16
dec
mov
std
clc
stc
xchg
add
dec
push
jl
mov
pop
jp
pop
repnz
sbb
pop
sbb
cs
fsubr
mov
push
pop
push
jg
mov
push
mov
flds
in
mov
sub
push
pop
lret
push
cmpsb
popa
fdivs
in
sbb
pop
scas
jmp
mov
sbb
cmpsl
inc
lods
inc
mov
bound
lret
cld
cmpsb
pop
test
jle
adc
lcall
xchg
inc
loop,pt
in
or
fwait
ret
jp
aam
add
out
push
pop
repz
push
push
dec
push
inc
fstpl
pushw
xor
and
stos
and
call
cmp
stos
sub
xchg
loope
aad
push
jg
or
fidivl
arpl
xchg
rorl
push
mov
pop
mov
scas
sahf
push
imul
xor
inc
cmp
mov
sbb
xor
hlt
mov
add
bound
sbb
sahf
sub
or
addr16
ret
clc
fwait
cmpsl
loopne
and
xchg
mov
adc
and
xlat
pop
cltd
xor
outsb
mov
xlat
sbb
pop
jl
cltd
mov
sbb
sahf
roll
out
mov
dec
adc
dec
add
out
lds
inc
ret
sbb
leave
mov
pop
push
cli
jae
jmp
mov
add
in
rorb
aad
sbb
mov
mov
loope
lds
sbb
adc
lods
sbb
dec
outsb
or
insl
jg
movsb
ja
push
rol
test
fidivl
rorb
cltd
pusha
adcb
push
ja
jecxz
dec
iret
cmpb
insl
pop
ja
rorl
stos
sbb
pop
or
xchg
cmp
cwtl
cmc
shrb
scas
add
call
out
add
xchg
sbb
cmc
push
cmp
and
out
cmc
mov
sbb
mov
dec
loope
jnp
mov
and
sbb
pop
add
or
mov
pop
push
leave
mov
aaa
mov
push
cs
int3
xor
test
or
insb
mov
adc
or
pop
dec
add
pushf
jnp
mov
sti
shll
pushf
inc
nop
xchg
sub
dec
cltd
daa
stos
out
and
test
aad
jbe
jb
das
mov
dec
mov
mov
negl
in
add
mov
fcoms
test
pop
sbb
mov
xor
jno
mov
fwait
sahf
sub
and
mov
jmp
jno
mov
test
ja
mov
fwait
push
inc
sti
jnp
jns
out
dec
data16
ja
cli
mov
and
and
inc
inc
inc
aaa
fisubrl
stos
test
je
dec
pop
mov
xchg
cs
mov
ss
jg
xlat
fs
leave
sub
push
or
inc
in
adc
mov
movd
adc
sbb
js
jge
and
clc
fdivrl
inc
or
mov
inc
xor
lcall
push
test
mov
dec
add
mov
cmpsb
push
out
mov
adc
add
insb
and
sub
inc
fs
push
call
sub
outsl
cmpb
inc
mov
mov
inc
sbb
lods
mov
cmp
aam
insb
lea
mov
cmp
pop
mov
or
loop
dec
jo
fsubl
dec
adc
jl
xor
jns
stos
mov
push
xor
dec
lret
and
scas
dec
popa
shlb
fildll
js
mov
jbe
out
cld
frstor
and
dec
push
mov
xchg
subl
fdivl
sarb
mov
cli
inc
aam
test
push
jno
popf
mov
setl
shll
jns
test
lds
cmpsl
dec
lcall
insb
scas
cmp
inc
scas
add
cltd
pop
bound
je
mov
lock
adc
movsb
aaa
jns
pushf
dec
les
test
ret
mov
out
xchg
sbb
xor
push
mov
stos
inc
lret
mov
insb
inc
inc
push
push
fsubl
cmp
ds
shll
or
ret
pop
inc
jae
jae
aaa
pop
cmp
lret
and
cmp
dec
test
ror
test
cli
mov
sarb
push
push
je
inc
mov
mov
push
jns
xor
push
cmpsl
out
pop
pop
popf
xlat
sub
or
dec
sti
nop
push
adc
sub
jp
shl
push
mov
jno
push
mov
movl
lods
inc
lea
popa
or
sbb
stos
mov
xchg
movsl
xchg
rclb
cmpsl
fnstsw
lds
mov
dec
cmp
jecxz
lds
pop
push
mov
mov
mov
pop
daa
int3
jb
mov
or
pop
mov
mov
inc
fbld
push
movsl
fbstp
sub
xor
mov
clc
popa
shlb
or
imul
dec
nop
in
sbb
dec
xchg
insb
aam
fisubl
or
push
cmp
popa
andl
or
gs
inc
int3
add
push
testb
stc
popf
pusha
fidivrl
inc
mov
jl
lods
push
inc
mov
xor
int
push
pushl
imul
pop
mov
js
ret
movsb
inc
fidivs
sub
pop
xchg
test
pop
pop
mov
xchg
mov
arpl
daa
fcoml
sub
les
test
repnz
out
push
pop
repz
jp
out
push
out
dec
pop
lcall
cmp
dec
xchg
push
ficompl
mov
sub
and
mov
inc
insb
pop
push
mov
jle
daa
jle
mov
xchg
add
int3
xlat
mov
test
aam
mov
testb
out
adc
add
pop
xchg
js
int3
lret
inc
pop
lods
aad
fiadds
push
sbb
adcl
sbb
mov
lds
jb
addr16
into
sbb
andb
shlb
adc
dec
pop
sahf
jle
xchg
sub
sbb
mov
jle
adc
jno
fwait
fwait
out
test
inc
das
mov
call
mov
int
sbb
in
test
jle
jbe
aaa
pop
outsl
imul
xor
lock
push
sar
push
outsb
push
sbb
loop
jb
mov
pop
adc
push
fwait
jle
adcl
inc
testl
xor
xchg
pop
inc
fmuls
insl
loop
jnp
push
and
int3
sub
fidivs
jmp
add
data16
fldl
mov
mov
dec
loope
mov
jne
and
jp
into
lds
loopne
cltd
test
xor
jnp
jnp
inc
sub
or
insl
dec
mov
das
cmp
js
mov
sbb
pop
adc
jg
add
pop
fisttps
btr
add
sbb
pop
aaa
out
sbb
lods
inc
stc
pop
mov
xchg
xchg
cs
call
add
pop
aad
pusha
repz
adc
or
ret
mov
loopne
push
es
outsb
jno
push
mov
dec
int
cmp
sub
cmpb
fisttps
cmp
pop
loop
lcall
scas
xchg
jp
or
in
pushf
xchg
movl
insl
aad
xchg
jl
and
or
in
inc
stc
das
cmp
mov
mov
inc
mov
data16
sbb
cli
push
mov
mov
imul
test
cmp
cmp
out
pusha
aad
mov
sti
push
xor
negb
add
jg
mov
push
mov
xchg
inc
sbb
mov
pop
and
lods
in
sub
mov
mov
int
xor
sub
jae
mov
loope
int3
insb
dec
aam
test
or
fxch
int
xlat
mulb
add
mov
fmuls
in
test
mov
add
test
mov
jae
or
stos
push
addb
scas
fistl
imul
pop
enter
xchg
test
adc
mov
sbb
push
adc
jnp
addr16
pop
push
pop
ret
popf
mov
jmp
mov
xor
sub
orb
xchg
push
out
addr16
fcompl
adcl
mov
ret
adc
ret
mov
sbb
lret
int
ja
mov
test
inc
into
inc
mov
mov
inc
imul
mov
inc
ss
sbb
adc
incb
out
cld
or
mov
ljmp
inc
adc
dec
cmp
fcomi
xlat
cmpsb
gs
out
in
inc
adc
insl
push
dec
addr16
mov
xchg
insb
sub
inc
sub
mov
in
push
inc
push
cmp
les
call
mov
sub
lock
xor
int
sarb
adc
lahf
xchg
pushf
arpl
mov
jne
leave
push
sub
aas
dec
mov
cmp
mov
pop
das
inc
stos
inc
lahf
sbb
mov
inc
lock
dec
or
add
push
sbb
dec
add
xchg
les
je
push
push
sti
aas
ds
xchg
mov
dec
pop
mov
sbb
ds
adcb
fstps
lds
repnz
and
hlt
ja
push
loopne
add
mov
loop
movsb
stos
jge
test
sahf
push
mov
stos
data16
push
lds
lret
adc
xorb
in
cltd
mov
push
mov
jno
mov
scas
cmc
mov
inc
call
or
adc
cwtl
cs
outsb
sub
scas
xchg
and
inc
or
push
adc
shlb
and
push
popa
mov
fld1
jb
jge
mov
inc
pop
or
bound
inc
test
icebp
fcompl
leave
mov
jns
pop
and
or
and
sbb
push
repz
push
lds
xchg
cs
xchg
or
faddp
leave
pushf
cli
insl
jp
aad
pop
lea
sub
push
mov
adc
pusha
cmpb
jge
cmp
clc
sub
add
pop
sti
xchg
xlat
lods
cmp
jae
mov
fcoml
fbstp
jae
dec
in
pop
push
push
xor
shlb
iret
mov
notl
mov
in
inc
aas
ss
fdivrp
loope
enter
push
push
lret
fisubs
push
lods
jp
xchg
mov
je
lock
dec
and
xor
std
out
fs
and
lods
add
aaa
jo
add
lcall
sar
xchg
sahf
js
mov
inc
loopne
add
lods
and
subb
sub
mov
push
jo
cmp
mov
mov
fidivl
sbb
fdiv
into
lcall
bound
test
stos
add
inc
scas
fdivl
mov
cmp
mov
aaa
inc
pop
and
or
fnstenv
leave
inc
mov
add
aas
adc
jbe
cmpl
add
xor
push
filds
gs
icebp
cmp
xchg
mov
dec
test
jp
fnsave
aad
pop
inc
mov
jecxz
scas
cmc
notl
or
out
loopne
jle
inc
mov
xchg
ss
mov
sbb
pop
cmp
jp
xchg
cmp
cwtl
ja
out
in
jecxz
dec
pop
adc
mov
in
push
or
mov
cmp
or
std
and
clc
jg
push
test
clc
pop
sti
mov
pop
jnp
inc
inc
or
jo
adc
cld
and
call
push
inc
sub
cli
outsb
jbe
mov
mov
xchg
std
jg
stos
cltd
cli
pop
je
into
jbe
idivb
int
mov
loope
cmp
jbe
pop
sahf
inc
mov
xchg
xchg
inc
sbb
lock
dec
sahf
repz
push
lods
aad
lock
jne
adc
xchg
cltd
test
jno
fwait
mov
ja
mov
in
or
test
pop
mov
adc
sbb
fnsave
fildl
scas
lods
mov
in
mov
scas
sbb
push
xor
mov
std
xchg
repnz
dec
fistpl
mov
sub
sub
out
jg
scas
pop
push
loope
stos
inc
popa
and
pop
data16
cwtl
sbb
xor
pop
decb
ja
and
fstps
jns
mov
data16
jae
call
inc
xchg
out
bound
in
pushf
cli
inc
movsl
leave
and
arpl
xchg
push
xchg
adc
ficoml
fwait
bound
aas
lds
enter
ret
mov
push
icebp
mov
scas
pop
outsb
adcb
mov
lea
pop
or
jge
in
dec
xchg
jge
shrl
mov
scas
cmovle
repz
cmp
imul
in
sub
mov
mov
dec
dec
data16
scas
je
rol
in
jo
insl
into
fmul
pop
clc
fs
mov
jne
cmp
mov
inc
sub
sub
sbb
testl
shlb
or
pop
or
daa
adcb
dec
and
rcr
jl
js
and
lock
push
add
dec
adc
xchg
adc
dec
outsl
mov
mov
insl
and
inc
cld
cmp
and
cld
and
lock
clc
adcl
and
push
icebp
sbb
jno
push
test
mov
mov
dec
pushf
push
sbb
outsb
mov
fcmovnu
jo
lcall
cltd
ss
in
mov
mov
jmp
movsb
cs
adc
popf
xchg
das
inc
int3
andl
mov
mov
ret
test
ffreep
mov
xchg
insb
mov
dec
add
call
add
mov
inc
lret
fstpt
adc
or
mov
or
test
cld
push
mov
popa
jno
add
xchg
cmp
cmp
mov
nop
pop
mov
mov
xchg
insb
mov
shrl
ja
iret
dec
incb
cs
and
inc
or
push
dec
test
pop
jb
shr
pushf
out
outsl
lds
imul
shll
out
add
mov
hlt
bound
cmpsl
ja
gs
rorb
jp
std
cmp
cs
push
test
test
lret
fildll
ss
test
push
stc
js
cmp
aas
push
loope
pop
adc
pop
movsb
mov
jecxz
or
shll
out
mov
cmp
iret
pop
or
add
or
jns
mov
aam
push
push
pop
fcomip
xchg
inc
addb
lret
ss
push
mov
cltd
xchg
lods
rclb
mov
call
pop
es
jno
xchg
sub
pop
pop
testl
insl
sub
lcall
dec
test
cmp
fadds
pop
fistps
aaa
out
dec
cwtl
int3
arpl
enter
lock
aam
fiaddl
or
pop
rcrl
mov
adc
cltd
pop
mov
cmc
pusha
rcl
shll
fisttpl
in
pop
xor
cmp
or
in
imul
xor
sbb
enter
cli
ss
daa
xchg
mov
bound
insb
mov
push
jnp
cmp
outsb
cmpsl
cmp
xlat
jl
fsubs
xor
test
mov
or
push
stos
loop
addl
aam
in
xor
pop
cmp
cmp
inc
sahf
repnz
lods
adc
ret
push
jb
xor
jge
jmp
cmp
xchg
int3
jg
cs
or
lcall
sub
mov
jns
in
icebp
scas
cmpsl
into
shrw
in
insb
or
hlt
adc
xor
push
xlat
pop
jp
xor
inc
outsl
dec
scas
push
in
fbld
shlb
jle
mov
add
xor
pop
jg
lahf
lea
push
adc
jmp
ds
repz
dec
lcall
ret
mov
stc
leavew
mov
xor
pop
ret
jecxz
pop
jo
lods
sbb
sar
and
lock
lods
sub
ljmp
xchg
stos
add
dec
cmp
jl
dec
cmp
std
push
mov
xor
es
out
adc
jno
pushf
xchg
xor
sub
pop
xchg
add
fsubs
push
mov
test
pop
and
xchg
cmpsl
mov
xor
pop
in
and
addr16
fstpt
sbb
jg
popa
mov
cli
repz
fildl
adc
negl
in
push
mov
jmp
sti
cmp
lcall
cli
out
mov
ds
xorl
dec
addr16
jae
xchg
adc
outsl
add
stos
shrb
pop
mov
push
push
adc
inc
push
ds
sbb
fs
mov
lds
cmp
lods
xlat
fmull
inc
sub
mov
inc
xor
or
pop
addr16
pusha
xchg
xlat
pop
loope
pushf
sub
or
pop
inc
movb
repnz
sbb
push
cmp
aaa
shll
pop
insb
and
push
rcll
pop
ljmp
push
cmp
cld
inc
in
pop
fsubrl
call
or
inc
push
dec
add
or
test
sub
and
fsubrs
xor
cmpsb
std
std
das
pop
imul
push
xchg
leave
orl
inc
cltd
popa
ja
test
xchg
add
out
cmp
mov
movsl
call
sub
mov
jo
cmc
mov
jbe
add
pop
out
cmp
adc
and
notb
cld
xchg
lock
aam
filds
aaa
jl
and
and
popa
or
jb
dec
movsl
adc
dec
add
repnz
jl
sarl
jmp
jns
rorb
sbb
movsb
dec
fst
or
cmpl
loopne
scas
jb
mov
cmc
sbb
cmp
mov
push
popf
inc
add
cmp
push
mov
sbbl
or
xor
stc
pop
dec
out
enter
xlat
lcall
sbb
ja
mov
shrl
icebp
xchg
mov
add
mov
mov
rcrb
jmp
and
inc
outsb
add
jbe
lea
adc
outsb
aad
cltd
pop
fildll
lret
es
xor
inc
repnz
jmp
fisubrs
das
or
pop
xor
int3
xor
ljmp
jecxz
cmp
dec
repnz
cli
insl
sbb
lds
sbbl
xor
mov
push
fcoml
dec
test
push
xchg
push
into
push
pop
jbe
inc
push
lods
in
je
icebp
inc
lea
mov
pop
push
push
mov
push
lcall
ja
rep
cli
in
iret
cmp
jns
in
mov
mov
mov
gs
std
mov
cmp
xchg
mov
test
cmp
hlt
cmp
call
dec
mov
rolb
mov
test
dec
jo
inc
shlb
ja
cmp
add
jmp
mov
mov
enter
add
xor
sub
jge
adc
inc
mov
imul
in
pop
cwtl
or
cmp
cmpl
lahf
or
outsl
inc
stc
in
pop
push
cld
xchg
jns
lcall
jo
filds
xor
sarl
dec
mov
cmp
pop
xchg
jmp
sub
divl
lods
ficoms
mov
sbb
test
mov
in
arpl
jmp
cmpl
sbb
mov
sbb
jne
psadbw
popl
shr
sub
or
cld
xchg
sbb
mov
scas
fbld
fxch
add
into
xor
test
ds
push
addr16
mov
cs
pop
jnp
push
clc
dec
loop
aas
jno
mov
ja
and
jb
lock
add
lea
cmp
imul
repnz
jns
jns
mov
sahf
repnz
repnz
inc
and
mov
cmpsl
and
out
sbb
sbb
xchg
mov
cmpsb
cmp
fidivl
ret
mov
fnsave
pop
mov
insb
pop
inc
push
je
call
cmp
hlt
dec
mov
clc
idiv
mov
out
sbbb
ret
clc
mov
jae
sbb
inc
arpl
orb
dec
movsb
cmp
popa
in
xchg
pusha
cmp
imul
mov
sub
jae
daa
lcall
inc
mov
push
xchg
sahf
stos
loopne
fdivrl
cld
pop
repnz
cs
xchg
xchg
and
out
push
mov
add
mov
test
lret
jl
scas
inc
outsl
movsb
mov
in
cwtl
idivb
add
or
les
sbb
dec
sbb
icebp
jo
sub
sbb
subb
cmpsb
lock
xchg
in
fildll
test
lret
jmp
adc
xchg
sub
mov
sub
or
movsl
mov
push
push
inc
inc
jmp
inc
sbb
pop
hlt
lock
mov
fbld
xchg
int
pop
out
mov
stos
cwtl
cmp
leave
iret
pop
push
pop
mov
xor
dec
adc
mov
push
mov
push
cld
inc
push
sub
nop
fmull
lcall
mov
jp
repz
mov
jnp
mov
imul
jae
xchg
mov
fdivs
cli
stc
lds
lret
lret
sub
jmp
jb
cmp
vphsubbw
movb
stc
xor
mov
movsb
test
xor
jae
cmp
stos
movsb
mov
std
inc
xlat
cs
cli
pop
rclb
insb
insb
les
int3
out
in
cmovl
xor
inc
ljmp
inc
jg
in
ja
ret
sub
arpl
shrl
test
pop
test
mov
cmp
lods
inc
ja
sbb
jmp
adc
test
dec
out
inc
test
pop
jp
cmp
adc
in
mov
clc
jg
lcall
push
inc
in
cmpsl
rcrl
mov
inc
dec
cs
rol
pop
repnz
dec
and
ret
inc
xchg
addr16
sub
inc
lods
into
sbb
xor
push
xor
bound
mov
inc
inc
push
ss
sahf
rolb
enter
cmp
adcl
pop
es
sub
mov
test
outsl
imulb
sbb
rcl
mov
outsb
add
xchg
cmpsl
pmaddwd
mov
adc
pushf
bound
int
sub
and
cmp
sub
fnstsw
mov
sti
adc
cltd
stc
decb
mov
ret
pushf
mov
jo
mov
out
mov
mov
cmpsl
mov
movsl
cmp
sbb
inc
les
xchg
xor
loop
inc
call
or
in
sbb
inc
jecxz
pop
cltd
popa
out
add
jge
jmp
fstpl
mov
lret
sahf
mov
inc
loope
jge
and
push
xor
bound
icebp
dec
insl
arpl
dec
aad
rcl
icebp
pop
aad
sti
fwait
pop
mov
sub
sarb
in
mov
jno
sub
pop
loopne
orl
mov
ja
adc
adc
cld
push
ja
dec
and
mov
ror
push
mov
mov
fidivrs
iret
fisubl
pop
cmpsb
xchg
pop
stos
mov
xchg
sub
loop
cmp
andl
xchg
clc
sub
orb
inc
loopne
xchg
popf
aaa
loope
pop
xchg
cwtl
push
sub
cmpsb
cmp
sbb
push
pop
jp
push
cmpsl
in
cld
or
leave
mov
jb
pushf
rcrl
xchg
or
sbb
out
shrl
mov
mov
nop
stos
mov
rcr
lcall
dec
pushf
jmp
mov
xchg
adc
lock
lds
dec
shl
add
jle
dec
or
ljmp
fnsave
rcr
adc
xchg
mov
xor
or
jg
cmp
mov
outsl
fadds
xchg
lock
jno
pop
sub
ret
sbb
imul
icebp
mov
dec
dec
sbbb
add
ss
lcall
pand
sbb
xchg
out
and
inc
fiadds
gs
dec
fpatan
cmp
xorl
xchg
sub
cmc
pop
or
dec
loopne
ds
test
xchg
lods
mov
mov
push
rcl
addr16
dec
lret
and
test
cmpsb
jne
or
insb
mov
arpl
add
in
adc
cmpsb
shlb
divb
lods
jmp
out
push
jmp
loopne
faddl
pop
mov
cld
popa
test
inc
mov
setle
lea
jne
inc
ljmp
mov
xchg
mov
sub
add
shr
or
dec
fs
jmp
xor
push
sub
pop
cmp
insl
les
les
sbb
mov
push
cwtl
subl
mov
popf
adc
cmpsl
pop
shrb
insl
or
es
dec
sub
mov
lahf
pop
cmp
rcl
pushf
xchg
mov
arpl
push
inc
into
xor
imul
das
fsubrs
imul
cmp
cmpsl
adc
add
out
sub
shll
and
jns
call
mov
enter
mov
cmpsb
dec
ret
push
pop
scas
repz
mull
push
push
cmpl
in
mov
or
je
sbb
mov
sub
imul
push
adc
mov
mov
adc
js
mov
ret
jae
int3
jg
pop
mov
xor
lret
data16
jle
or
mov
loopne
daa
cmpsb
push
push
dec
add
cltd
cltd
scas
lahf
pusha
xor
jb
lds
push
call
xchg
divl
jecxz
sub
mov
pop
push
sbb
mov
iret
xorb
jns
sbb
add
fsubl
push
in
xchg
jbe
adc
je
cmc
out
xor
imul
jp
push
inc
imul
insb
enter
movsb
sti
outsl
fcmovnb
test
cli
aam
subl
imul
in
push
sbb
testl
mov
mov
js
push
or
adc
xlat
push
adc
inc
jg
stos
movsl
and
ljmp
lcall
fxch
dec
repnz
mov
aam
loope
aam
dec
fdivrs
push
repnz
sub
and
sahf
mov
mov
ret
pop
rol
mov
jbe
pop
sub
dec
sub
and
jg
repnz
das
and
cmpsb
adc
cmpsb
push
adc
jne
mov
jmp
xchg
xchg
ret
out
and
nop
test
ss
sar
je
movsl
inc
mov
sub
ss
jo
popa
out
mov
fidivl
out
jl
pop
adcb
mov
repz
in
pusha
cmp
xchg
mov
inc
inc
or
mov
push
cmpsl
jne
pusha
jnp
push
mov
and
stos
add
dec
add
in
test
fwait
enter
shrb
mov
and
inc
mov
mov
xchg
mov
mov
int3
xchg
dec
jmp
or
cmc
xchg
lret
mov
data16
test
daa
xchg
xor
in
aas
adc
add
mov
arpl
inc
xchg
xchg
jae
ljmp
les
cmp
pop
mov
xor
lods
ljmp
xchg
fidivrl
jb
dec
jg
bound
mov
sub
dec
adc
nop
pop
ret
jle
xor
sub
int
fistl
pop
cli
xor
sbb
xchg
push
mov
outsb
add
sti
fiaddl
test
push
inc
mov
mov
cmpsb
mov
loope
jne
and
xchg
push
mov
xchg
pop
mov
sbb
push
lods
mov
sbb
scas
cmc
dec
pop
jnp
cmp
shrb
sbb
push
outsl
ret
cli
dec
test
decl
es
dec
lods
or
adc
outsl
push
xor
cmpb
aam
and
mov
mov
shlb
fdivrl
jno
int3
jg
sbb
fidivrl
cmpb
lret
and
data16
pop
pop
cmp
cs
xchg
push
push
pop
in
inc
mov
hlt
aaa
arpl
shr
push
jo
push
xchg
pop
insl
fsubrl
pop
jb
mov
arpl
dec
and
inc
aad
insb
push
add
call
outsl
jbe
std
pop
push
xlat
cmp
mov
test
jecxz
jle
dec
xor
aas
push
test
fcmovu
push
mov
sub
inc
rcr
xchg
xor
push
sub
cmp
mov
lea
loop
aad
adc
cltd
aaa
in
idivl
mov
icebp
xchg
je
jge
inc
fstpl
jbe
dec
push
xor
fld
filds
icebp
adc
repnz
fisttps
pop
mov
rep
sbb
dec
aad
mov
jne
jb
mov
fnstcw
out
icebp
insl
dec
shrb
inc
ja
aaa
inc
int3
push
mov
push
test
lret
fnstsw
mull
or
inc
and
mov
jge
int
adc
dec
sbb
push
subl
repz
and
mov
mov
adc
xor
xor
jae
pop
sub
mov
aad
push
sub
cmp
sub
cmp
jb
aam
add
cld
cmc
xor
cmpsl
sub
push
mov
shlb
adc
sti
xchg
cs
pop
xchg
fbstp
mov
mov
lds
and
inc
sub
fmul
add
cmpsb
pop
adc
inc
dec
push
mov
into
test
jl
cmp
sub
mov
pop
jecxz
fldcw
dec
cmp
jl
testb
jbe
jecxz
mov
arpl
fadd
cmpb
loope
jge
add
rcrb
xchg
mov
das
mov
jmp
in
inc
int3
sarb
mov
mov
loopne
inc
rorb
add
mov
cmp
icebp
cmp
idivl
test
push
fwait
enter
xlat
jmp
test
bound
nop
xor
xchg
xor
xor
cwtl
aaa
stc
cld
arpl
aas
int3
ss
shrb
push
inc
dec
shl
jno
pop
mov
test
scas
pop
cmp
imul
and
xchg
pop
movsl
sti
in
cmp
xchg
adc
arpl
shll
imul
pop
ret
sbb
insb
mov
out
mov
sbb
mov
jo
pop
fs
inc
fsubs
fisttps
jae
mov
in
inc
cli
inc
add
insb
inc
rolb
ja
lret
insb
or
jae
test
fucomip
xchg
leave
nop
push
daa
aad
lret
push
inc
dec
test
shr
dec
in
sub
mov
and
and
dec
fisubrs
mov
cmp
adc
pop
les
mov
jb
dec
loope
sbb
sub
sbbl
lock
sub
mov
leave
mov
decl
or
jns
sub
push
rol
xchg
jns
or
add
notb
repnz
lods
movsl
jns
jnp
push
push
clc
movsb
cld
xchg
sbb
push
repz
dec
add
push
dec
dec
out
mov
cmp
les
dec
jo
inc
xchg
out
inc
dec
sti
push
stos
adc
push
mov
insl
test
sub
jl
add
dec
add
insb
add
sahf
push
movsl
iret
inc
inc
cld
aaa
sub
test
popa
mov
or
iret
adc
jb
dec
jle
dec
enter
mov
movsl
mov
es
push
and
leave
roll
aad
jns
or
jle
shrl
int3
arpl
stos
sbb
ror
negb
shll
in
addr16
add
adc
clc
and
or
push
hlt
addr16
mov
cmp
push
ret
mov
mov
cmp
or
pop
jecxz
or
xor
add
ret
mov
out
cmc
dec
mov
jl
icebp
insb
pop
adc
insb
inc
sub
mov
in
ret
xchg
sub
scas
mov
adc
dec
mov
dec
aad
addr16
sub
xchg
mov
ret
xchg
push
inc
mov
sub
vmovaps
scas
and
aam
push
aad
cmp
movsl
jb
mov
jne
outsl
stos
adc
lcall
sarb
ficompl
ljmp
lahf
shlb
pop
shlb
imul
out
call
mov
or
stos
and
push
xchg
int3
lahf
pop
jg
rolb
push
fisttpll
stos
and
sub
repz
aad
mov
xor
push
jnp
nop
dec
mov
call
movsl
repz
and
cmp
sbb
sub
daa
sbb
or
mov
jmp
test
jp
hlt
push
mov
inc
xlat
mov
aad
push
pop
mov
or
enter
lods
bound
xchg
stos
push
in
loop
mov
sub
push
or
in
xor
std
pop
xor
bound
fnstenv
dec
roll
xchg
repnz
inc
adc
ret
int
fidivs
adc
ror
add
push
mov
out
in
nop
sub
push
or
and
sbb
push
mov
sbb
jnp
andb
mov
pop
jmp
cltd
loopne
inc
testb
xchg
sub
dec
pop
or
cs
push
ds
xor
adc
fs
add
popl
mov
or
mov
mov
sahf
push
push
cmpb
pop
cmc
out
mov
pop
cmc
add
sbb
sbb
mov
sbb
jno
aaa
sbb
dec
addr16
dec
js
cs
and
xlat
sahf
les
cmc
sti
addb
ret
mov
jae
lcall
dec
mov
loopne
and
shr
xchg
push
fisubrl
out
pusha
or
cmpsb
test
mov
pop
fildll
fadd
pop
into
pop
add
test
sbb
ds
xchg
mov
les
cmpsl
movsb
sub
mov
jmp
xor
ljmp
sbb
cmc
lret
xchg
scas
cmp
jbe
sar
jge
rolb
cli
xchg
or
js
fwait
lahf
pop
mov
movsb
mov
loop
cmp
popa
dec
dec
and
sub
inc
or
mov
xor
push
lods
lret
jl
mov
mov
arpl
outsl
shll
ds
clc
into
imul
stc
xor
mov
mov
and
cmp
aaa
lret
stos
inc
jb
push
sub
stos
cltd
repz
es
sub
sub
sbb
pop
cmp
fsubrs
sbb
scas
dec
fiaddl
loopne
bound
mov
aam
out
cmpsl
icebp
dec
mulb
negb
roll
dec
dec
push
in
jge
pop
js
push
out
test
xchg
ds
andb
jg
orl
pop
into
push
lods
jmp
lods
and
xchg
xor
pushf
ret
push
insl
insl
cmp
out
sbbl
mov
mov
jg
xor
imul
push
xchg
cmpsb
adc
fsubr
insb
lret
or
and
cmp
xchg
imul
jecxz
add
xor
je
sbb
outsb
dec
divb
in
enter
jb
sbb
aam
inc
add
or
testl
cld
mov
add
lcall
cld
xchg
jb
inc
sbb
pop
icebp
sub
ja
mov
aad
scas
inc
push
orl
jno
inc
xor
mov
sub
fucomi
add
mov
shrl
mov
mov
mov
movsb
xor
std
sub
sub
mov
xchg
lds
lds
lahf
ss
loopne
cmpsb
jno
repz
sub
out
insb
add
rorb
mov
out
xchg
adc
xchg
lods
inc
sbb
daa
and
mov
das
jb
xor
mov
add
xlat
adc
lcall
sbb
pop
cmc
loop
aam
sub
add
xor
dec
mov
loope
pop
jg
daa
popf
in
adc
inc
scas
xor
push
xlat
pop
jne
aas
and
mov
xchg
lcall
lahf
jmp
lcall
adc
xchg
xchg
fldcw
mov
insb
mov
scas
test
adc
jmp
xchg
push
mov
dec
push
sub
mov
add
push
ljmp
inc
cmp
sbb
mov
xchg
enter
outsb
enter
push
lahf
cwtl
sbb
aas
jge
aaa
pop
push
pop
push
in
xor
mov
lock
and
sbb
push
movsb
mov
jo
mov
lret
sub
test
cmp
mov
jge
aad
push
pop
in
xor
je
lock
sbb
dec
pop
scas
jp
outsl
fidivl
adc
or
xor
mov
dec
int
adc
cs
dec
shrb
gs
ljmp
xor
and
xchg
jmp
stos
data16
fisubs
std
decb
mov
das
shll
repz
cmp
pop
adc
stos
fstps
mov
jg
push
mov
pop
pop
scas
sbbb
iret
aam
lea
push
jbe
rcrb
psrad
cmpsb
scas
out
out
push
lahf
testb
movsb
or
push
push
ret
jo
out
push
aas
jbe
and
push
in
fwait
and
jo
js
iret
mov
lcall
popf
sahf
ret
jecxz
inc
adc
or
ret
loop
mov
stos
push
jmp
sahf
add
xchg
pop
lock
in
inc
pop
imul
addb
cmc
push
cltd
and
add
shll
push
lcall
in
lds
add
sbb
sub
xor
in
sti
dec
es
mov
jo
pop
in
pop
jp
xlat
test
inc
sbb
and
adc
adc
sbb
xor
lahf
pop
jmp
lcall
cwtl
push
xchg
loope
sbb
mov
jo
mov
cmp
jg
nop
inc
fdiv
xchg
sbbl
or
sbb
notl
cmp
dec
cmpsl
shrl
call
add
daa
ret
test
mull
xlat
cmpsl
pop
hlt
in
test
das
push
xchg
jp
mov
or
mov
xor
nop
dec
outsl
sbb
push
cltd
ret
pop
or
jp
sub
lret
xchg
jno
sbb
lds
scas
pop
ja
xorb
mov
pop
sete
mov
xor
mov
inc
xchg
or
xor
test
xlat
xchg
dec
popf
dec
divb
loop
inc
push
mov
mov
filds
pop
repnz
xlat
push
repz
pop
push
sub
inc
cmc
xor
dec
xor
pop
bound
inc
cli
cmpsl
cmpsb
sub
xor
push
xchg
xorl
or
mov
xor
rclb
jno
jo
inc
jae
aas
addr16
sbb
push
xchg
mov
cli
inc
pop
jmp
sti
cmpsb
pop
cmp
lods
or
xlat
cmc
cmp
sub
movsb
mov
lds
add
inc
dec
xor
mov
adc
mov
mov
jp
pop
mov
inc
and
dec
popf
mov
aad
lods
lret
scas
divb
imul
mov
nop
push
and
popa
pop
icebp
aam
imul
lods
es
xor
push
lods
cwtl
lock
cmp
lods
cmp
jmp
ficoml
dec
mov
xor
lods
pop
arpl
adc
imul
cld
loopne
les
push
adc
fidivs
mov
ficoms
xchg
push
lods
adc
push
pop
mov
pop
inc
adc
sub
mov
out
xor
popa
fs
cltd
mov
cld
fsubrs
in
pusha
mov
cmp
ja
push
xor
sbb
dec
xchg
jl
fs
mov
dec
sarb
cmpsl
cmp
fcompp
pop
lds
xchg
lea
jne
aam
mov
adc
mov
xchg
push
jns
dec
in
orl
fmuls
inc
fldenv
xor
scas
mov
fsubrl
loope
nop
arpl
stos
inc
movsl
sub
sub
scas
out
mov
pop
outsl
hlt
inc
mov
rorl
jl
sub
mov
push
sub
mov
add
mov
sbbb
fwait
out
ret
sub
aam
cmp
sbb
scas
mov
mov
nop
stos
mov
mov
ja
adc
cli
insb
mov
sub
sub
xchg
fsubl
enter
mov
xor
shll
or
mov
pushf
gs
ret
and
inc
adc
or
adc
negb
setns
jbe
es
pop
mov
popa
jo
sbb
and
inc
cltd
out
scas
xchg
mov
je
ret
ret
push
mov
pop
xchg
cltd
jecxz
xor
xor
xchg
pop
dec
int
add
adc
sahf
bound
push
xor
push
mull
cmc
cmpl
xchg
pop
arpl
xor
jge
lret
mov
push
out
fnstcw
loop
leave
mov
mov
cltd
mov
adc
xchg
xor
popf
inc
insl
sub
push
pop
fsubrl
xor
mov
jp
ja
ss
sub
cld
aad
xchg
jecxz
repz
pusha
testl
adc
sub
outsl
popf
mov
hlt
adc
mov
hlt
adc
out
rcrb
addr16
adcl
mov
and
adc
adc
lea
in
stc
inc
in
mov
dec
out
xchg
push
rcrb
pop
mov
pop
mov
ja
inc
fadd
sbb
add
mov
adc
decl
or
push
xchg
add
call
mov
aas
sub
push
or
lea
hlt
lods
mov
jg
jnp
movsl
dec
xor
sub
lea
ds
xchg
push
lahf
repnz
dec
xor
loop
mov
dec
mov
pusha
add
mov
fldenv
sub
in
in
push
jp
notb
sub
mov
loopne
das
cli
outsb
rorb
test
add
js
popa
outsl
xlat
cmp
pop
ljmp
push
lret
int3
lret
sbb
lods
frstor
repz
popf
pop
test
adc
pop
repz
aad
push
mov
push
mov
fnstsw
xor
sbb
shrb
outsl
ja
mov
mov
pop
iret
out
inc
or
dec
pop
shl
dec
lods
out
stos
shrl
dec
jl
dec
fadd
sbb
push
xor
jns
lret
outsb
lcall
and
dec
rcrb
testl
bound
arpl
test
pop
mov
je
add
stos
add
mov
aas
inc
sub
clc
lcall
cltd
in
mov
aad
mov
push
sbb
bound
negb
add
sbb
or
or
cmp
sti
pop
mov
imul
in
or
and
pop
lret
push
add
je
push
cwtl
popf
jmp
orb
inc
mov
sarl
xchg
and
jl
aas
mov
int3
arpl
enter
popa
dec
cmp
xchg
mov
and
bound
adc
jo
loop
add
aam
add
mov
mov
in
mov
sbb
fsubs
jmp
push
mov
inc
pop
inc
scas
xor
repnz
sti
sub
xor
cmp
pop
xorb
std
push
test
xor
dec
and
and
sti
shrb
leave
pop
jae
adc
roll
sub
ficompl
adcl
bound
cmp
in
stos
dec
imul
leave
sub
rcrl
dec
push
decb
adc
cmp
pop
insl
lds
jne
dec
stos
repnz
adc
add
mov
pushf
xor
clc
xor
jbe
cli
mov
mov
jne
jae
pusha
sub
shlb
sub
xor
inc
test
add
imul
mov
leave
fmul
jo
out
cltd
xlat
push
fcmovnb
mov
cmpsl
pushf
std
xchg
jo
lock
xchg
das
lea
in
pushf
mov
into
add
xchg
ret
pop
into
add
ret
insl
adc
xchg
jl
aas
xchg
aam
insb
push
mov
hlt
pop
adc
dec
cmp
repz
repz
mov
addr16
ljmp
lret
lret
fisttpl
add
pop
das
mov
dec
add
in
test
push
cmp
insl
xor
cld
add
sub
stos
xchg
ljmp
xor
fiaddl
sbb
sbb
or
mov
das
sbbb
shrb
sub
fwait
cmp
adc
xchg
pushl
push
xor
fwait
cmpsl
xchg
cmp
sub
in
sub
outsb
xor
push
shl
jo
dec
dec
push
lea
sub
lcall
adc
fwait
adc
pop
sbb
and
push
push
mov
cmpsb
jb
int3
pop
enter
outsl
xchg
sti
adc
mov
popa
movsb
inc
dec
mov
out
mov
out
push
lcall
bound
sbb
cmp
ss
addr16
fistps
xchg
mov
jno
xchg
loop
sub
outsl
shl
dec
popf
or
ret
pop
loope
fwait
and
fldl
xor
add
lods
cmp
push
negl
jmp
inc
sbb
jnp
dec
add
push
fbstp
out
add
cmp
or
sbb
mov
pop
jnp
movl
sti
xchg
mov
dec
sbb
inc
mov
mov
cmp
fwait
dec
pop
cli
push
xchg
add
xor
adc
and
cmp
xchg
pop
push
and
mov
mov
hlt
aam
pushf
or
cwtl
xchg
push
mov
icebp
mov
mov
mov
xchg
xor
push
sahf
mov
xchg
scas
inc
rorl
outsb
xchg
add
adc
testl
repnz
inc
or
mov
ljmp
pop
cmc
andl
mov
test
cwtl
pop
int3
ss
out
push
cmp
inc
lods
mov
gs
mov
divb
andb
inc
mov
icebp
movsl
inc
adcl
bound
loope
rorl
inc
fsubrp
jl
jns
push
mov
ret
sub
orb
push
pop
fidivrl
mov
and
popa
leave
pusha
fwait
mov
push
push
ljmp
incl
xchg
mov
sbb
mov
jae
cs
out
push
flds
push
sti
fidivs
cwtl
sbb
sub
rorl
out
xchg
cmp
mov
mov
inc
cmpsl
pop
sbb
sub
fbld
pop
repz
lret
stos
jne
out
jns
fcoml
outsl
push
inc
jns
sub
jne
xchg
mov
outsb
lds
cmc
or
addr16
jmp
ret
mov
fldl
enter
inc
mov
mov
not
ljmp
push
popl
notb
sbb
dec
mov
lods
icebp
ja
rol
dec
xchg
or
mov
pop
sahf
sub
inc
dec
repnz
add
cmpsb
mov
and
aam
out
xchg
add
hlt
pushw
or
icebp
mov
in
mov
imul
jle
cmp
movsb
les
mov
mov
add
daa
cwtl
and
std
cs
and
sub
push
lods
fldl
sub
pushf
clc
in
bound
incb
sti
daa
lds
lret
push
repz
pushf
xor
push
mov
and
xchg
sub
mov
scas
push
popa
cmpsb
lock
push
sbbb
jmp
xlat
xor
icebp
insb
sbb
sahf
imul
or
int3
xor
ja
mov
sbb
idivl
push
call
leave
int
add
lahf
pop
pop
sub
loop
es
mov
out
xchg
repnz
mov
adc
mov
movsl
lret
push
push
dec
icebp
imul
dec
dec
jg
adc
cmpsl
sti
cmp
push
mov
jg
in
outsl
cmp
loopne
fld
in
pop
adcl
mov
out
xor
ljmp
pushf
sti
pop
ret
mov
adc
push
mov
imulb
test
lods
dec
mov
cwtl
xor
push
scas
pusha
lods
loopne
les
mov
shrb
addr16
jg
loop
mov
add
cmp
cmp
adc
nop
in
or
popa
jns
addr16
mov
lods
jle
mov
or
sub
adc
and
je
jbe
idivb
mov
les
lds
add
lods
bound
sbb
lds
or
movsb
popf
mov
jb
pop
jbe
and
mov
mov
jl
xor
nop
in
loopne
sbb
lcall
mov
test
ja
enter
stos
in
xchg
sbb
pop
out
imul
subb
and
jb
roll
notl
sub
lods
jmp
sbb
xor
nop
sbbl
jae
sbb
or
out
fnstsw
pop
loop
test
aam
xor
enter
pop
rcr
repnz
test
push
jb
into
cmp
inc
mov
shll
into
add
ret
adc
das
adc
mov
mov
fcmovnb
push
cli
jge
mov
popa
clc
xchg
add
mov
cltd
in
and
xor
and
jle
insl
icebp
fsubl
and
xor
mov
inc
push
lcall
mov
jns
stos
cmp
cmp
stc
sbb
lret
cmp
test
fmull
and
out
dec
sbb
loop
int
in
sub
xchg
adcl
sbb
in
cld
push
push
sub
aaa
jo
int
and
rcll
lahf
push
icebp
mov
pushl
stc
or
xchg
sbb
xchg
xor
rcll
insl
mov
subl
inc
adc
pop
mov
push
add
xlat
jle
mov
or
mov
addr16
pop
xchg
es
push
sub
cli
test
js
xorl
adc
mov
xchg
ja
add
andb
subb
adc
popa
sbbl
pusha
lds
jle
mov
mov
rcrb
mov
cs
mov
loope
enter
js
lret
dec
jg
xchg
sub
mov
lcall
inc
mov
cmpsl
aas
sbb
insb
dec
pop
jle
lods
sub
xlat
xor
pop
mov
dec
add
mov
pop
xor
in
jnp
out
or
mov
or
cmc
xor
pop
je
jge
divl
push
push
add
jae
xor
or
pop
stos
mov
mov
mov
jle
fdivl
xchg
dec
and
push
inc
mov
in
lods
lret
bound
shll
xorl
sub
mov
mov
sbb
das
bound
push
pop
mov
and
add
rcrl
fucomi
xchg
cmp
in
adc
push
out
lds
mov
adc
out
lds
test
cmp
aas
decl
dec
mov
int3
in
xchg
jmp
leave
add
mov
jo
xchg
jb
ret
ljmp
aaa
dec
movsl
cmp
shr
add
sub
add
push
ljmp
jno
jle
pop
repnz
sbb
stos
jns
jp
or
inc
fisubl
sub
mov
jp
flds
test
xor
and
inc
fcoml
mov
in
cmp
leave
loope
jo
shlb
out
fisubrl
mov
sbb
shll
daa
push
shl
jl
mov
add
jne
popa
xor
dec
sub
pop
fldcw
dec
or
xchg
sub
pushf
push
cmp
pop
cmp
pop
fnsave
es
fwait
call
pusha
fsubl
in
les
xor
cmpsb
and
in
arpl
ret
mov
jns
adc
fimull
add
insb
push
mov
cmp
and
testb
xchg
inc
js
js
adc
imul
xchg
jns
cmp
in
sti
and
adc
sbb
fsin
fidivl
mov
andl
mov
xor
gs
cmpsb
lret
mov
sub
and
cmp
mov
inc
sub
push
jbe
test
aam
rorl
insb
cmp
adc
add
xor
rcrl
mov
mov
sub
dec
in
pushf
dec
aas
inc
or
cmc
mov
or
mov
dec
xlat
fwait
sbb
mov
ret
cmp
adc
pop
in
fs
imul
mov
pop
repz
shll
fwait
sti
mov
push
clc
addr16
and
sahf
imulb
cmp
cmp
les
sbb
ret
popa
daa
test
dec
fmull
push
dec
inc
mov
xlat
and
fsts
add
pop
cmpsb
inc
mov
adc
xor
pop
add
sbb
xor
mov
iret
int3
mov
and
sbb
ja
mov
jg
nop
jae
js
inc
lds
push
sub
jb
cltd
mov
in
repnz
and
lock
push
adc
lcall
lret
out
stos
inc
mov
mov
call
mov
jge
sub
cmpsb
pop
jno
dec
mov
jl
xchg
out
jne
mov
mov
lds
and
xchg
or
lods
sti
xchg
lds
jge
cltd
mov
movsl
fwait
pusha
pop
xor
ret
cmpsb
lcall
test
and
sbb
lret
and
loop
cmpsl
test
pusha
push
cmpsl
jg
cltd
ds
inc
loop
cmp
inc
mov
inc
imul
mov
paddd
and
test
fnstsw
dec
cmpsb
lods
xchg
xchg
push
call
mov
xor
push
into
fcoml
xchg
mov
imulb
or
adc
pop
repnz
jle
lods
adc
and
mov
jmp
add
pop
add
sti
seta
and
xchg
push
subl
loop
cmp
movsb
push
jae
mov
ds
and
lock
popf
push
je
xor
scas
fstpl
add
xor
daa
dec
cmp
push
fdivl
mov
dec
mov
fistl
in
arpl
in
inc
or
aas
lock
push
and
or
int3
clc
inc
sub
shll
mov
and
das
shlb
int3
xor
sub
xlat
aam
ret
xor
scas
push
or
jp
test
into
mov
pop
add
and
cmp
cwtl
jg
push
mov
pushf
xor
popa
aas
imul
mov
das
mov
aam
rolb
es
push
mov
mov
into
xor
dec
pop
and
mov
jmp
and
sub
pushf
out
ret
int
pop
or
and
scas
mov
sbb
pop
dec
cmp
clc
add
mov
mov
jp
sub
mov
cmp
es
mov
and
in
fiaddl
ds
scas
jne
loope
mov
sub
mov
push
insb
pop
cld
pop
add
lods
imul
xchg
gs
sub
clc
mov
movl
gs
push
out
test
cmc
adc
mov
ss
arpl
lds
jl
jmp
cli
dec
enter
lds
push
out
mov
jl
cld
push
lods
adc
or
popf
xchg
sub
cmp
push
sub
aad
add
das
out
mov
xchg
inc
hlt
cmp
add
sbb
sbb
test
cmp
xchg
pop
nop
xchg
lcall
adc
mov
outsl
in
pop
or
sub
or
jle
inc
rolb
insl
les
sbb
pop
sti
jne
imul
daa
mov
cmpsl
adc
aaa
les
xchg
scas
dec
rorl
or
cmc
mov
jno
xor
lods
into
mov
outsl
add
gs
lock
jno
or
das
lds
dec
movsb
ja
cmp
or
jno
shl
mov
loope
movsl
sbb
out
cmp
pop
mov
inc
sbbl
mov
push
xchg
adc
inc
or
add
gs
pop
sub
sbb
das
call
mov
xchg
inc
mov
inc
mov
test
movsb
imul
adc
test
cltd
shl
stos
mov
cmc
and
scas
push
jge
sbbb
dec
sub
pop
sbb
xchg
mov
movsb
dec
or
mov
aad
inc
jl
jb
or
or
pop
fbld
sub
mov
in
test
dec
cmpsb
ja
or
or
sbb
loopne
sti
xchg
bound
jb
sbb
pushf
js
shrl
dec
arpl
or
cmp
into
loope
shll
add
mov
stos
adc
sbb
inc
jg
inc
sub
dec
lcall
jb
mov
test
xor
push
sub
push
mov
xchg
repnz
call
out
dec
pop
xor
fistpl
xchg
mov
iret
add
inc
mov
xchg
inc
stos
int
sub
ljmp
dec
or
call
dec
dec
fldcw
popa
xor
dec
ret
push
cmc
hlt
push
mov
fcmove
mov
and
lret
jmp
aad
mov
fnstenv
mov
out
inc
sbb
dec
cmp
into
sbb
sti
dec
or
jp
cmp
rclb
inc
test
in
ret
repz
dec
sbb
stos
outsb
iret
push
aam
mov
fdivl
mov
xor
cli
jne
fmull
or
stos
jno
ret
enter
das
jg,pt
ja
xchg
sub
stos
ret
adc
out
push
adc
inc
sbb
stos
inc
imul
xor
test
jp
adc
jmp
cli
xor
pop
test
mov
test
lcall
dec
pop
sbb
lret
push
jne
das
mov
add
icebp
les
stos
sub
stos
dec
iret
fadd
or
icebp
iret
adc
sub
sbb
fdivl
cmp
jbe
es
aas
push
push
insl
dec
test
fcompl
test
std
pop
es
mov
into
outsb
mov
fxch
sti
mov
cmc
out
icebp
adc
arpl
sbb
lahf
loope
pushf
shll
push
repnz
jnp
loop
cltd
sbb
scas
sub
mov
and
imul
leave
sub
fwait
sub
and
inc
daa
adc
adc
jne
xor
sbb
mov
cmpb
mov
cwtl
push
xchg
fdivs
xchg
mov
push
sbb
jae
rcr
jbe
add
xchg
jp
mov
fdivrs
inc
mov
xlat
or
and
adc
lret
aas
in
aas
mov
fwait
leave
adc
sbb
lret
fwait
insl
leave
hlt
xchg
push
inc
stos
add
push
xor
lahf
addr16
out
inc
in
pushf
rorl
and
out
stc
jl
cmp
push
dec
divl
sti
pop
adc
lahf
add
sub
or
test
loop
jmp
dec
out
sub
jne
cwtl
jo
inc
jle
lea
into
sbb
and
mov
and
mov
cmc
inc
int
adcb
cs
sbb
stos
mov
outsb
and
insl
mov
or
daa
push
lods
pop
pop
int3
jne
divb
adc
aad
pusha
inc
pop
dec
stos
dec
sub
inc
inc
add
jle
fbld
mov
or
dec
loop
or
or
xlat
repnz
testl
add
jb
cmpsb
test
or
or
jecxz
sub
ljmp
fldcw
dec
xlat
sub
aam
les
dec
sub
incb
sub
inc
fildl
scas
inc
daa
cwtl
lock
int
aam
ficoml
scas
orb
ficoml
add
rol
adcb
in
jp
in
lahf
pop
or
pop
cmpsl
dec
add
loope
cli
cwtl
mov
ja
add
ficoml
cmp
push
out
fisubrs
mov
out
xorb
or
pop
cmp
lods
mov
mov
sti
cmp
aas
movsb
in
flds
movsb
or
mov
add
shrb
mov
mov
sbb
std
xchg
cmp
xchg
fdiv
mov
push
sub
call
leave
jmp
jne
rorl
mov
scas
inc
shll
sbb
mov
sahf
lods
xchg
out
into
dec
packssdw
gs
dec
loop
cs
add
mov
cs
pop
leave
push
jo
jg
enter
and
int3
lret
out
arpl
mov
mov
pop
je
jp
ret
xchg
pop
adc
decl
mov
xchg
popf
pop
test
dec
stos
andb
int3
pop
sahf
aam
in
pop
mov
fisubrl
push
cmp
adc
pop
aas
nop
xchg
or
int3
lcall
xchg
loop,pt
sub
negb
lods
fildll
adc
fdiv
push
jae
inc
pop
pop
cmpsl
pusha
xchg
inc
cmp
mov
mov
ficompl
sub
ret
cmc
jnp
adc
dec
sbb
add
gs
jg
xchg
mov
add
subb
dec
icebp
pop
lcall
jne
sub
leave
push
adc
sbb
push
ficoms
ss
mov
mov
into
xchg
mov
push
push
pop
int
outsb
dec
rclb
mov
adc
ss
cs
imul
mov
sub
mov
roll
and
cmp
jne
outsl
add
iret
inc
stos
sub
sbb
fwait
jne
lea
mov
mov
pop
mov
xlat
lods
cltd
addl
inc
xor
or
test
mov
xchg
add
jbe
jp
test
outsb
in
pop
das
pop
xchg
inc
stos
jl
shlb
and
clc
push
jp
jle
or
push
sbb
shr
dec
sti
adcb
xchg
push
xchg
mov
push
inc
xor
jg
rcrl
les
ret
adc
dec
or
arpl
mov
outsl
fwait
xor
pop
inc
in
xchg
inc
push
out
push
xor
cmp
xlat
jnp
push
fwait
in
in
mov
adc
push
stos
inc
fcmovnbe
xor
outsl
pop
add
push
or
pusha
inc
ret
ja
mov
out
imul
popf
xor
add
cmpsb
cmp
sbb
push
in
cmp
fwait
mov
sub
inc
push
fwait
push
sub
jg
lods
push
jb
ja
push
out
jge
mov
mov
adc
int
add
das
cmc
insb
in
fistps
sub
mov
repz
xor
xor
push
jns
test
mov
ret
mov
adc
addr16
fnsave
mov
pop
adc
inc
enter
mov
shrl
xor
ret
dec
or
jns
sub
scas
push
out
jmp
ret
movsl
cmp
lahf
inc
xchg
mov
aam
add
popf
or
lahf
jl
xor
inc
pop
sub
lods
js
in
pop
push
mov
sub
cs
aaa
bnd
arpl
ret
int
ret
js,pt
add
lcall
sbb
adc
jmp
icebp
push
cmpsb
lock
cmp
pop
cld
xchg
mov
mov
ret
inc
flds
cmc
or
sub
fdivrl
loopne
or
push
jne
mov
xor
lods
test
sbb
xchg
in
mov
inc
mov
movsl
xor
inc
adc
sub
mov
mov
das
pop
daa
jo
xchg
cli
popf
sub
mov
xor
cmpsb
sahf
xor
faddl
loop
xor
lret
jmp
in
adc
loope
outsb
cmp
outsl
sub
or
pop
push
adc
jnp
ljmp
xor
and
xchg
pop
mov
sti
sub
shl
dec
dec
jmp
xchg
arpl
stos
jb
test
es
or
daa
je
xorl
rolb
pop
add
rol
fsub
push
adcl
sub
clc
sbb
push
push
mov
fnsave
das
insl
mov
movsl
pop
sbb
out
ss
sbb
jb
lret
ja
adcl
lret
push
movsl
lock
jle
pop
and
sbb
push
xor
cli
xchg
lcall
add
mov
loopne
out
lea
sub
inc
lret
ss
rolb
sbb
data16
mov
cmp
pop
inc
inc
dec
sarl
fadds
xchg
or
stos
mov
data16
into
std
mov
adc
mov
sbb
add
push
inc
outsb
or
loop
mov
add
out
pop
sbb
in
clc
loopne
into
icebp
clc
adc
scas
pop
push
add
jae
call
pop
inc
outsb
add
repz
mov
inc
je
push
filds
pop
jmp
ljmp
mov
mov
push
mov
divb
les
inc
std
sbb
ds
scas
in
mov
fnclex
jns
sub
pop
adc
and
lock
test
mov
aad
sub
push
enter
ds
pop
test
mov
push
lock
inc
into
fs
dec
mov
fdivs
xchg
jp
and
pop
repnz
iret
test
sub
lods
enter
imul
out
sbb
lods
lds
sub
pop
jecxz
jp
mulb
cmpsb
ds
pop
scas
adc
or
push
cmc
and
popf
aaa
mov
std
push
mov
or
xchg
ret
push
shll
cmp
inc
lock
push
mov
xchg
jp
ret
jecxz
adc
out
divl
fsubs
dec
mov
push
ds
adc
pop
lea
mov
xchg
cli
mov
or
xorl
sub
sahf
mov
pop
cmp
sbb
or
mov
cmpsb
mov
fdivs
and
mov
jle
mov
jmp
mov
aas
xor
adc
mov
adc
or
es
fsubrl
and
les
and
fisubrs
mov
jecxz
sub
jecxz
mov
scas
mov
sbb
mov
mov
jbe
ds
pop
adc
jmp
cmpl
lds
pop
xchg
lds
xchg
and
sbb
stos
pop
sahf
cmp
add
jmp
mov
push
inc
sub
fcoml
xchg
out
mov
dec
in
or
sub
dec
add
test
push
jg
in
out
lock
inc
sbb
sub
in
and
sub
push
fildll
pop
mov
outsb
add
sar
and
testb
inc
push
out
push
popf
mov
mov
push
add
xor
sbb
mov
and
adc
jle
lock
add
std
push
stos
jg
jne
fwait
dec
fstpl
test
and
fs
add
insl
jae
pop
cmc
cld
or
sbb
mov
mov
xchg
xor
xchg
outsb
inc
lods
sbb
movntq
mov
popf
push
pop
mov
into
in
adc
scas
mov
mov
js
adc
roll
aam
imul
lds
inc
sbb
mov
mov
xor
cmc
cmp
cmpsl
adc
jp
call
test
rolb
test
stos
add
int
inc
jmp
sub
popa
cld
xchg
push
int3
testb
mov
sbb
in
out
loopne
push
pop
mov
ds
arpl
fisubl
lods
gs
or
inc
idivb
and
iret
mov
lret
and
popf
pop
mov
xorb
clc
push
or
ljmp
cmc
xchg
lret
mov
cld
loop
mov
add
push
in
jecxz
add
std
aam
sbb
outsl
stc
in
sti
fldt
inc
xchg
adcb
movsl
sub
lahf
inc
je
test
inc
xchg
mov
test
popa
call
test
inc
fisubrs
call
nop
insl
mov
adcl
and
clc
jae
sub
subl
dec
imul
outsl
clc
stos
or
mov
mov
push
decb
movsb
fnstsw
incb
fstps
stos
mov
push
aam
sub
mov
repnz
insb
add
pop
xchg
cmpb
push
out
cmp
mov
mov
push
in
mov
push
cs
dec
sbb
mov
lcall
inc
loopne
test
pop
cmp
push
sbb
inc
jg
push
cmp
push
outsl
aad
xchg
mov
mov
rcll
and
jecxz
xchg
inc
popa
fdivl
aas
add
xchg
sbb
push
mov
cmp
xchg
inc
sub
xchg
xor
mov
cmp
inc
rorl
repz
int
out
cltd
adc
or
das
lds
shl
xchg
dec
jecxz
fidivrs
xchg
sub
pop
ljmp
test
or
dec
test
call
xchg
adc
scas
scas
stos
jne
iret
ljmp
pushf
ds
icebp
dec
pop
outsb
ja
pusha
subl
fdecstp
sub
jne
push
inc
sahf
dec
adc
mov
mov
sbb
mov
cmpps
imul
dec
les
sbb
xchg
je
push
mov
loop
mov
lds
mov
ss
lcall
sub
dec
jp
cmp
addb
mov
out
mov
int3
jae
adc
ja
orb
cld
push
into
je
add
call
outsl
sub
rclb
sub
and
xchg
mov
push
mov
decb
out
test
mov
push
jle
cld
outsl
sub
mov
dec
dec
mov
lcall
inc
inc
cmpsl
push
imul
popf
xor
fnstcw
mov
inc
insl
shrl
inc
inc
push
out
test
inc
ret
in
dec
dec
inc
test
cwtl
std
pop
fnsave
adc
inc
mov
int
push
out
push
cwtl
sti
mov
cmpsb
in
and
push
in
cs
cs
dec
xlat
dec
or
lcall
pushl
push
cmpsb
mov
xchg
jnp
repnz
adc
sub
jl
jecxz
inc
popf
pop
test
inc
cmp
out
pop
imul
sbb
cmp
imul
adc
das
pop
sub
sbb
stos
xlat
jno
sub
or
sbbl
push
pop
mov
dec
movsb
jnp
or
outsl
mov
ja
int
or
in
xchg
inc
fistl
xchg
cmc
notb
outsl
test
jle
in
and
jo
xor
jp
and
mov
mov
xchg
test
imul
fisttpll
mov
mov
add
or
insb
push
xor
or
ss
lret
push
sbb
xlat
lods
mov
iret
pop
outsl
jnp
in
mov
and
and
hlt
fdiv
arpl
adc
pop
out
lds
sahf
jne
or
lds
mov
daa
inc
fst
fldcw
sbb
or
xchg
add
shll
lods
sahf
push
sbb
sbb
push
inc
add
mov
sub
and
mov
mov
aaa
xor
sub
and
adc
push
add
sbbl
fwait
loope
lods
push
dec
fistpll
add
js
mov
mov
aaa
dec
mov
mov
xchg
mov
pop
sbb
jge
cmp
leave
or
test
cmpsb
enter
inc
jp
and
rcrl
xor
in
adc
inc
rol
or
jns
push
mov
add
scas
test
int
nop
pushf
xor
repz
push
or
dec
mov
cmpsl
xchg
sbb
cmc
sub
or
dec
dec
stc
cmp
push
sub
test
test
clc
push
jp
xorl
std
mov
xchg
call
stos
sub
cld
addr16
sbb
jle
jp
in
jo
je
fs
jg
mul
xchg
inc
and
push
add
or
jbe
arpl
shll
pop
sub
outsb
inc
cmp
jo
lods
fdivl
xchg
sbb
iret
data16
or
adc
xchg
push
ja
dec
mov
dec
push
sub
mov
mov
jp
int
push
sbb
les
lea
push
adc
mov
cmpsb
adc
inc
fwait
repnz
arpl
rorl
push
gs
test
adc
aas
push
mov
pusha
gs
mov
inc
xchg
aaa
push
scas
test
cli
push
fmulp
xor
and
subb
lds
repz
mov
add
data16
pop
fbstp
mov
in
fsubrl
and
xchg
scas
mov
inc
fidivrs
or
mov
lods
out
inc
pop
out
ret
mov
shlb
imul
and
jmp
in
mov
mov
and
es
jae
je
scas
js
fiadds
adc
dec
pop
jns
lea
adc
andl
out
fwait
push
addb
jno
push
push
sahf
ret
mov
out
cld
mov
mov
aas
in
lcall
cmp
data16
cld
test
arpl
mov
int3
mov
push
in
in
movsb
fsts
dec
aaa
into
inc
jge
or
and
push
nop
in
aas
shll
add
out
inc
pushf
and
pushl
les
xlat
lock
ret
cli
adc
fs
test
mov
adc
sbb
mov
test
enter
mov
mov
js
sahf
sbbl
iret
or
clc
add
fnstenv
add
xchg
xchg
inc
sbb
add
popf
jno
sub
cmpsl
in
rolb
sbb
add
imul
lret
push
nop
int
shll
mov
push
sbb
jnp
jp
cmc
popa
inc
fadd
cmp
arpl
push
in
push
xchg
jnp
push
mov
daa
mov
in
inc
sub
jno
arpl
mov
mov
jle
and
xchg
fwait
sub
jl
inc
mov
inc
int
clc
sqrtps
pop
lods
dec
jl
mov
jl
mov
out
jns
lcall
aam
mov
pop
mov
xchg
add
ljmp
and
in
loopne
cmp
popf
sti
pop
adc
cwtl
add
mov
fwait
inc
lods
cmc
adc
or
inc
hlt
mov
dec
dec
loop
jp
jmp
jecxz
lds
and
sarl
div
out
xchg
add
int
fndisi(8087
xor
adc
cli
push
std
dec
dec
repnz
ficompl
pop
outsl
push
out
shlb
and
dec
jl
xor
fdivrl
insl
adc
mov
cld
loope
setl
mov
out
int3
fcmove
dec
mov
add
jo
mov
andl
sbb
dec
or
cmp
fstpt
loop
cmp
lea
stos
ds
das
push
ficompl
mov
add
adc
ret
insl
mov
pop
xor
mov
jle
sar
push
lea
inc
sub
push
cld
test
bound
sbb
sbb
sbb
jmp
shl
add
xor
jmp
fwait
adc
hlt
dec
mov
leave
je
lret
shlb
push
scas
adc
jo
iret
ficoms
pusha
cmpsl
or
xlat
push
dec
mov
fistpll
es
inc
or
stos
mov
loopne
ljmp
pop
lcall
popa
mov
pop
loope
scas
std
cmc
int3
dec
jno
xchg
adc
fmuls
or
fidivrs
js
movsl
jbe
sti
ret
hlt
or
ret
pusha
fcmovnb
or
or
push
push
out
sub
jne
ds
mov
sbbl
jp
inc
adc
loopne
push
dec
fstpl
push
fidivs
push
mul
ds
je
lea
mov
push
jecxz
jp
rolb
lea
test
pop
xor
dec
stos
push
out
fwait
or
clc
shlb
pop
sbb
mov
dec
popa
pop
or
mov
lcall
or
xlat
jnp
or
repnz
inc
sub
mov
or
inc
jl
jne
xchg
insb
or
fbld
mov
imul
xor
ja
inc
cli
pusha
fsubrl
mov
js
movsl
or
mov
repz
mov
mov
inc
bound
or
lcall
sbb
test
sbb
pop
fstl
sti
sahf
hlt
push
js
dec
pop
lock
outsl
outsl
cmc
pop
lahf
call
inc
push
xor
je
outsb
push
rcrl
sti
psubq
push
inc
rcll
jg
std
rol
cs
push
jae
fs
lock
out
ja
ret
aaa
ja
pop
fmuls
mov
les
pop
ret
rcr
shll
cmp
fistpl
arpl
mov
mov
and
sti
dec
notl
pop
outsb
rclb
jne
mov
jo
aam
mov
mov
mov
hlt
xchg
xchg
jo
vpdpbusds
sbb
ficoms
loope
loop
loope
add
incl
inc
inc
std
es
sub
jmp
sahf
rcrl
loope
daa
insb
ffreep
lods
push
jns
jbe
popa
mov
pop
mov
lea
iret
pop
push
aaa
lcall
sub
dec
dec
xchg
mov
push
loopne
dec
loop
call
dec
pop
orl
test
xor
out
call
xor
out
and
sbbl
loop
in
sub
lods
dec
cwtl
stos
loop
fmulp
test
insl
cwtl
jmp
jle
push
mov
lret
idiv
iret
xor
mov
in
ffreep
jo
push
mov
gs
dec
fstl
mov
arpl
adc
test
and
cwtl
mov
adc
xchg
push
mov
cmp
shlb
fs
push
xchg
stos
dec
clc
repnz
xbegin
rcl
icebp
sbb
orb
lret
cmp
mov
pop
out
cmpsb
stc
cmp
bndstx
call
fimuls
jecxz
xor
xor
adc
push
testb
cltd
clc
mov
jmp
negb
repnz
sub
jecxz
aam
ljmp
mov
cltd
mov
sti
scas
call
dec
movsb
outsb
sbb
inc
jge
adcl
mov
jg
lods
dec
mov
ficompl
mov
push
iret
roll
outsb
popa
outsb
jb
inc
rcr
mov
mov
insb
outsb
test
mov
cmp
in
mov
jecxz
mov
push
mov
outsl
fwait
iret
mov
popa
mov
dec
int3
rcl
insw
cwtl
push
mov
cmp
pop
inc
aaa
out
sub
fst
insl
push
clc
popa
xor
lods
jmp
or
xchg
add
dec
std
pop
in
or
or
mov
lods
fxtract
shl
lods
ljmp
xor
xchg
divb
rcr
adc
lds
pushf
divb
loop
mov
imul
loop
movzwl
dec
ds
int3
dec
inc
pop
jne
mov
aaa
aam
pop
cmc
cmp
pop
jnp
aam
repz
mov
mov
add
setb
or
xchg
mov
sbb
ljmp
insb
lds
xor
mov
data16
inc
jno
cmp
add
adc
cmp
jns
imul
dec
cmp
mov
add
cs
aam
dec
inc
hlt
out
aad
xchg
jmp
add
dec
in
jg
sbb
mov
pushf
jno
cltd
insl
dec
dec
in
cld
sbb
les
dec
in
das
dec
cmp
das
out
dec
idiv
je
pop
dec
xchg
sbb
inc
data16
ficoms
aam
inc
outsl
nop
aam
ret
int
mov
add
cmp
cmp
and
insl
jno
xor
test
xor
aad
scas
mov
adcb
test
pop
sbb
in
mov
dec
inc
jo
mov
jge
add
xchg
xor
mov
dec
and
jno
ds
bound
and
mov
add
stos
add
ds
mov
cmp
jo
push
nop
mov
add
sbb
aaa
int3
jl
xchg
lods
mov
dec
loope
mov
ss
imul
jl
xchg
xorl
repnz
not
movsl
ss
inc
push
out
andl
arpl
dec
add
mov
pop
orb
dec
out
imul
rcl
stc
je
dec
dec
loop
mov
push
test
jecxz
jb
mov
mov
js
xchg
je
cltd
sbb
pushf
das
test
and
ds
xchg
not
int
ftst
push
lock
incl
push
inc
mov
andl
mov
dec
out
test
out
out
ja
sub
lcall
ja
xchg
xor
push
jge
mov
jnp
aas
in
pop
or
push
pop
cmp
adcb
stos
xor
sbb
mov
mov
rcr
pop
xchg
sub
sbbl
mov
call
mov
inc
mov
iret
mov
ficoms
sub
daa
mov
aas
bound
loope
push
push
jns
xchg
je
insb
icebp
aaa
push
mov
xor
ficomps
pop
lret
mov
ret
pop
push
push
cltd
push
and
jbe
jae
push
movsl
jne
xor
inc
adc
inc
add
inc
fs
adc
and
pop
xor
push
popa
fdivl
roll
mov
add
gs
add
mov
jnp
nop
gs
rcr
xchg
scas
mov
in
lds
test
les
mov
imul
pop
pop
es
stc
pop
push
add
xchg
incb
les
lods
adc
scas
ret
arpl
or
int
call
shrb
or
jp
sub
add
jbe
pop
jp
xchg
inc
xchg
popa
cltd
js
xchg
test
scas
stos
mov
cmp
imul
and
lea
mov
mov
subl
aam
inc
mov
sbb
push
fmul
das
shll
fisttps
sub
adc
popf
xor
or
shlb
ljmp
mov
inc
mov
or
jae
loope
add
cmpsb
inc
and
pop
sbb
adc
inc
iret
mov
scas
stc
test
test
loope
cmc
sub
inc
cmp
div
mov
cmp
xchg
outsl
jb
mov
and
aas
shll
mov
push
in
mov
jb
shrb
ret
iret
enter
rcll
das
mov
mov
add
mov
sarb
loopne
cmp
sub
es
dec
bound
dec
jb
andl
jno
pop
test
cs
inc
sub
xlat
jns
inc
add
pop
jecxz
lods
addr16
inc
or
stos
push
jmp
fs
sub
ficoml
sub
shll
cs
pop
sub
stos
push
sarb
and
push
xor
int3
aas
test
out
mov
in
bound
dec
iret
adc
addr16
aam
push
push
ret
fistpl
mov
cmc
push
pop
mov
in
bound
inc
imulb
lds
mov
dec
loope
inc
fcmovbe
orl
xchg
sub
ja
rcl
push
andb
sbb
mov
mov
fmul
adc
repz
mov
add
ret
lods
inc
mov
daa
mov
jg
jmp
mov
push
mov
loope
decb
push
lcall
ficoms
mov
mov
mov
inc
xor
mov
push
ret
xor
pushf
mov
inc
mov
inc
scas
ja
int3
mov
cltd
mov
sub
adc
mov
xchg
sub
aad
mov
sar
inc
fnsave
pushf
arpl
inc
clc
xchg
and
sbb
ficoml
lods
inc
jb
notl
outsl
mov
into
pop
scas
adc
inc
xchg
ret
call
mov
ret
mov
mov
inc
mov
daa
or
and
cmp
xlat
push
fidivl
or
test
and
adc
pop
adc
cmpsb
pop
cmp
dec
mov
int
jne
cwtl
out
shr
inc
mov
dec
push
mov
mov
sub
inc
mov
push
fptan
movsb
xor
rorl
test
adc
sbb
imul
pop
in
jmp
cli
xor
lret
xlat
es
sbbl
and
ljmp
sub
inc
jb
fwait
sti
and
int
jns
mov
lcall
ja
shlb
in
adc
cli
mov
inc
in
stc
ljmp
mov
int3
inc
mov
dec
fwait
mov
adc
xchg
dec
pop
int3
push
mov
repnz
dec
clc
mov
pop
fbstp
pushf
cwtl
mov
into
dec
ret
jp
stos
mov
paddd
les
ret
mov
jl
loop
scas
loopne
imul
movsb
mov
aam
sbb
add
sahf
xchg
test
mov
loop
inc
fdivrl
push
sbb
mov
cmp
imul
cld
jne
rclb
mov
repz
dec
icebp
in
or
shr
in
cwtl
lock
mov
ss
int
xchg
insb
push
imulb
dec
fdivl
sahf
clc
rorl
push
frstor
inc
sub
test
in
push
stos
inc
cmp
jno
dec
ror
sub
and
int3
push
dec
mov
dec
xchg
jmp
cltd
imul
xor
jge
mov
std
ds
pop
std
sahf
hlt
sti
mov
jg
push
daa
hlt
sub
and
dec
jl
mov
test
cmp
inc
rclb
outsb
or
and
lahf
stos
push
subl
imul
adc
dec
leave
ror
fadds
jmp
shrb
adc
nop
stc
data16
jbe
xor
mov
mov
xor
pop
out
pushf
cmp
or
shrl
push
mov
mov
call
lahf
daa
inc
push
push
ja
mov
icebp
iret
push
insb
pop
cmpsl
sbb
pop
clc
aaa
movsl
sub
pop
cmpsl
push
lock
les
cmc
dec
mov
sbb
sahf
cwtl
movsb
pushf
dec
mov
ss
and
mov
lds
nop
add
out
cmp
pop
out
rcr
sub
stos
jbe
xchg
xor
pushf
adc
push
jbe
iret
int
cmp
inc
pop
lock
sub
div
jno
sub
dec
in
push
mov
das
data16
test
les
adc
and
push
int3
aaa
lret
push
inc
cs
jns
int3
call
imul
enter
scas
sbb
mov
dec
aas
pushf
or
lds
data16
mov
daa
je
pop
sbb
cltd
outsb
sub
pusha
clc
xor
push
push
push
jg
mov
ret
inc
lea
insl
add
push
xor
popf
cmp
dec
dec
and
push
ror
xchg
clc
and
movaps
add
pop
out
fisubrs
in
jp
and
pusha
pop
pusha
xchg
out
jl
mov
jg
in
sti
add
xor
fnsave
pop
adc
sbb
in
jecxz
cmp
cltd
sub
inc
loopne
aam
cmpb
rcrb
daa
rcll
dec
bound
cli
sbb
mov
shlb
enter
sbbl
inc
xor
sbb
das
in
rcl
dec
xor
inc
outsb
jmp
movsb
jno
int
hlt
xchg
sub
lahf
inc
or
divb
sub
and
xchg
mov
stos
cmp
stos
lahf
mov
cld
dec
sub
jae
mov
pop
clc
sub
stos
sahf
xchg
xchg
dec
or
inc
fs
add
jecxz
xchg
icebp
mov
inc
aaa
add
popf
pop
pop
imul
sbb
pusha
jmp
mov
outsl
cmpsb
xor
das
mov
scas
std
fsubs
sbb
clc
pop
push
scas
mov
mov
es
xchg
stos
inc
mov
and
dec
xchg
imul
aas
and
sub
imul
repnz
or
mov
daa
add
movsb
xor
or
add
inc
dec
adc
out
jp
jbe
xchg
jle
xchg
cwtl
stos
cltd
push
adc
rcrb
stos
test
pushf
mov
xchg
add
adc
dec
jp
aaa
sbb
pushf
shrl
sub
shlb
imulb
fnstcw
movsl
jmp
lods
mov
push
pop
jbe
cmp
mov
adc
and
daa
or
xorl
fsubrs
jno
out
insb
stc
xlat
adc
jns
mov
add
stc
mov
stos
push
xchg
xchg
or
lods
cld
jb
mov
jnp
lcall
and
mov
dec
mov
cmp
dec
jl
jae
outsb
inc
push
mov
movsl
imul
add
dec
fistps
inc
push
test
insb
outsl
outsb
inc
adcb
push
shlb
mov
mov
les
sub
fwait
jle
movsb
lods
pop
push
lret
sbb
in
pminsw
pop
lret
pop
mov
jae
dec
out
je
in
push
aas
mov
mov
repnz
mov
cmpsl
push
ja
sbb
pop
les
daa
mov
cmp
addr16
sbb
sub
inc
push
imul
cmp
mov
incb
or
sti
mov
fnstenv
sar
jo
into
and
push
push
lods
inc
xorb
sub
data16
xchg
mov
dec
incl
add
lret
sbb
push
addr16
pop
mov
pop
cwtl
hlt
mov
mov
xor
cmpb
out
pop
cmc
and
je
loopne
movsl
adc
cld
xor
mov
clc
dec
repz
loope
add
in
cmpsb
addr16
sub
fsubr
xchg
dec
test
adc
fwait
add
xchg
pusha
adcl
jb
nop
movsb
clc
pop
lods
aad
fwait
fcomip
xor
out
sbb
or
mov
cmpsl
sub
xor
push
lds
pop
adc
sbb
enter
ret
fldt
inc
push
dec
jno
popf
or
daa
cmp
xor
pop
cltd
inc
popf
dec
xor
sbb
aam
aas
and
mov
pop
jle
mov
bnd
adc
outsb
mov
add
sti
inc
in
jmp
or
pop
inc
mov
fbld
imul
iret
sbb
out
test
or
std
scas
lock
sub
shll
sbb
xor
es
push
jmp
stos
mov
jg
pop
jecxz
push
cmp
pop
movsl
leave
addl
stos
sub
sub
je
dec
dec
xchg
call
aad
push
xchg
add
outsb
jb
cmc
inc
addr16
mov
mov
adc
adc
sbb
into
repz
pop
mov
xchg
movsl
js
sar
adc
jecxz
adc
or
daa
in
ljmp
xchg
sbb
mov
inc
out
xor
stc
inc
mov
mov
inc
cli
xor
push
jb
enter
fwait
sub
push
jo
dec
lret
repz
jae
xchg
sub
scas
cmpb
pop
pop
sub
mov
mov
cmpsl
push
cmp
xchg
pop
or
mov
int
sti
int
in
jne
in
arpl
pop
dec
inc
int3
add
dec
push
into
faddl
sub
int
repz
or
aaa
icebp
lea
outsb
es
sahf
popf
push
mov
adc
jbe
cmp
xor
lret
cld
das
lret
mov
jbe
dec
and
dec
test
dec
or
pop
lret
mov
mov
outsb
add
sub
add
repnz
jp
rcrb
lock
cli
pop
adc
xlat
or
pop
push
aas
adc
lock
xor
lret
pop
ja
fnstcw
adc
sub
mov
aad
push
jae
fidivl
gs
sti
xchg
push
aam
mov
adc
sbb
mov
cmc
cmpsb
jge
leave
add
fisttps
pop
int3
fstps
jno
daa
outsb
jl
lret
das
inc
mov
and
ljmp
int
mov
popl
xor
ljmp
mov
add
mov
mov
cs
aaa
into
mov
mov
sti
push
lret
sbb
dec
lret
iret
adcl
ja
popa
xor
popf
jo
ret
jp
fcomi
call
mov
and
xor
push
dec
dec
orb
sti
jecxz
insl
ret
mov
sub
jne
pop
dec
ss
rorb
adc
pop
mov
push
jmp
je
cmp
or
sbb
dec
movsb
dec
adc
add
cmp
mov
cmpsl
pop
mov
sbb
inc
aas
ret
cmp
or
int
xor
imul
repnz
sub
or
push
or
and
ret
stc
mov
inc
xchg
and
pop
fdivl
push
repz
arpl
cltd
aas
adc
dec
push
stos
xchg
xor
sahf
and
dec
insl
xchg
mov
loop
sub
push
jmp
xor
scas
test
add
and
or
push
jb
andl
adc
outsl
push
std
mov
push
sub
add
test
ds
sub
push
xor
imul
add
push
push
test
mov
xchg
loop
fnstsw
adc
add
lcall
testb
and
idivl
jle
je
scas
addl
or
cmpsl
shll
daa
out
mov
xchg
addr16
inc
xchg
movsb
lock
inc
xor
push
repz
es
push
sbb
test
xchg
xor
add
loopne
movsl
sub
loope
jp
cltd
sbb
xor
jp
xchg
mov
or
push
scas
sbb
andl
xor
mov
push
xor
data16
movsb
sub
lods
or
xorb
inc
mov
std
jle
jo
ja
int3
push
or
dec
in
push
jmp
push
shrl
outsb
enter
mov
dec
movsb
mov
sub
jbe
jno
and
push
stos
movsb
imul
ja
xor
cmpsl
mov
push
xchg
push
mov
icebp
dec
mov
ja
pop
and
sub
push
test
jmp
xor
pop
imul
imul
mov
xlat
jnp
sub
jmp
xchg
inc
adc
xchg
xor
aaa
dec
in
jo
hlt
mov
push
test
xchg
fnsave
or
jbe
in
push
nop
imul
outsl
das
add
jnp
sub
mov
sub
inc
sahf
fstl
jmp
test
jo
orb
jnp
imul
cmp
dec
add
pop
movsl
xorb
sub
push
outsl
jnp
add
pop
xorb
cmp
scas
call
jb
ljmp
arpl
inc
sbb
movsl
adc
out
sbb
add
test
mov
push
out
jno
cmc
mov
ds
mov
dec
mov
jbe
xchg
dec
jns
stos
inc
push
cltd
scas
out
in
add
pop
adc
ja
mov
jg
xchg
test
mov
mov
lahf
pop
scas
inc
ljmp
add
push
arpl
test
call
or
jle
or
inc
inc
mov
inc
fsub
add
in
jbe
stos
ja
cs
xlat
je
jae
clc
dec
add
rolb
xor
pop
dec
fldt
incb
std
xchg
push
insb
jle
jns
cmpsb
les
fwait
aas
xchg
inc
cmp
das
mov
adc
dec
into
cmp
daa
sbbb
aam
lea
loopne
into
add
add
hlt
xchg
mov
les
ja
mov
cmp
jne
xor
scas
sbb
out
dec
iret
adcb
nop
icebp
or
jb
xor
sub
mov
sbb
iret
ja
pop
and
push
out
in
add
or
inc
pop
and
sahf
or
mov
lea
lea
cmpsb
jp
scas
adc
stc
adc
loopne
push
adc
fcoms
mov
fdivl
aam
mov
xchg
nop
jmp
lea
mov
jo
mov
popa
mov
test
pop
rcll
or
mov
fwait
xor
lods
in
fwait
sahf
push
inc
popa
sti
ficomps
mov
add
rcrb
es
addl
loopne
fsubr
nop
add
push
scas
aad
mov
ret
dec
in
aam
stos
cltd
sahf
imul
mov
adc
arpl
xor
sbb
push
add
dec
cmp
jge
xchg
scas
clc
adc
in
xchg
sub
outsl
ljmp
lret
ss
fwait
je
mov
cmc
iret
xchg
xor
push
cmp
xchg
ja
scas
pop
lods
rorb
cltd
xor
pop
js
scas
pusha
inc
xlat
mov
pop
cmc
lock
mov
add
scas
sub
pop
mov
dec
inc
mov
scas
fnstsw
xchg
and
and
ljmp
pop
lds
popa
adc
push
cmc
adc
out
inc
xor
and
mov
mov
sub
fstpl
loop
jnp
pop
pop
pop
test
mov
add
out
and
ss
sti
push
movsb
cmp
inc
adc
cmp
cmc
jp
daa
popa
in
pop
rcrb
ljmp
je
popa
cltd
mov
sub
adc
lods
sbbb
mov
xchg
aas
mov
dec
jmp
xor
idivl
inc
fisttpl
rol
enter
inc
mov
pop
cld
push
lea
pop
and
repnz
pop
push
test
out
pusha
or
mov
fnsave
xchg
lret
jno
rorl
cmp
jmp
cmpsb
lret
imul
scas
inc
mov
ss
addb
out
cwtl
test
push
mov
dec
jo
push
ficoml
loope
push
js
rorb
scas
pop
jne
add
inc
outsb
xlat
mov
xchg
stc
or
ja
or
xchg
push
push
cld
push
mov
loopne
es
xchg
movsb
cltd
aaa
pusha
sub
xlat
dec
sub
pop
sub
and
nop
dec
xor
jns
in
inc
cmp
xchg
push
push
fdivp
jbe
mov
test
xor
cmp
xchg
sbb
ss
sbb
leave
cli
dec
xchg
daa
add
jns
or
push
cmp
mov
andl
mov
and
and
int
mov
push
jne
cmpsl
mov
sbb
test
dec
sub
inc
dec
loop
push
jno
lock
lods
adc
and
call
pop
xlat
or
dec
mov
in
addr16
outsb
cmpsl
orb
dec
mov
push
repnz
nop
mov
imul
push
shrl
mov
adc
xchg
stc
add
xor
aad
sbb
mov
add
fstp
dec
xor
lret
lods
pop
rcl
hlt
or
repnz
aam
xchg
inc
pop
mov
imul
mov
aad
xor
in
xor
mov
push
out
cmp
js
sub
cmpb
sub
lods
cmp
adc
mov
sarb
lahf
jb
rcll
xor
or
outsb
sti
push
pop
adcb
or
add
sub
aaa
xchg
gs
ficoms
mov
test
or
push
xchg
or
lods
fiaddl
mov
jo
adc
test
pop
dec
pushf
pop
repz
or
sbb
adc
je
xorl
mov
dec
test
stos
shrl
pop
cli
or
xchg
lods
sub
jns
push
cli
mov
in
dec
and
jecxz
cmpsl
xor
or
sbb
imul
fiaddl
and
or
mov
lds
adc
enter
int3
rcrl
arpl
push
dec
in
das
sbb
mov
dec
es
push
in
je
dec
mov
arpl
dec
cwtl
lret
cmp
imulb
orb
clc
dec
jmp
add
out
enter
lods
aad
inc
push
cmp
push
mov
pushf
loopne
adc
sbb
xchg
popf
loope
dec
and
shlb
insb
aas
dec
frstor
lcall
add
hlt
cmp
jns
mov
adc
jecxz
icebp
stos
inc
pop
inc
fiadds
add
pusha
scas
add
mov
adc
jle
adc
mov
mov
jmp
popa
dec
nopl
dec
pop
aam
loopne
lods
out
daa
jo
ret
shr
hlt
mov
lahf
mov
or
sbb
sub
cmp
fnstsw
cld
sub
int
sbb
int
cmpsl
mov
dec
stos
loop
sbbl
dec
push
adc
dec
sarb
icebp
in
jmp
popf
insl
push
jbe
out
mov
push
sbb
add
stc
jae
sub
andb
nop
adc
sub
jp
add
loop
lods
inc
lret
or
ret
mov
pop
push
lods
add
pusha
xor
push
ror
fildl
cmp
mov
adc
dec
push
or
fnstcw
fisubs
add
ret
inc
int3
pusha
or
movsb
pop
das
jo
mov
mov
xchg
push
pusha
xor
rol
clc
cwtl
mov
cs
sub
jnp
cmpsl
jne
flds
or
xor
and
nop
fs
xchg
in
sbb
testb
jmp
sub
cmpsl
jo
sub
mov
mov
inc
mov
adc
cltd
mov
sbb
mov
mov
in
mulb
pop
pop
cmp
push
mov
dec
in
sbb
mov
push
mov
xlat
inc
and
jp
out
adc
imulb
lock
imul
je
std
mov
aad
loop
pop
sbb
sbb
xchg
adc
dec
pop
out
shl
and
arpl
xor
mov
mov
sahf
test
loopne
adc
test
out
test
lret
push
fidivs
xchg
cmpsl
test
popa
mov
lea
mov
cmp
imul
loopne
cmpl
pop
or
push
hlt
test
fldcw
shl
jp
mul
or
xchg
push
dec
sub
dec
retw
aaa
out
xchg
shrb
push
sbb
repnz
out
mov
jg
pushl
push
out
test
inc
push
icebp
jle
stos
mov
notb
scas
sbb
inc
fistpl
sarl
inc
lock
dec
or
or
jl
sti
adc
mov
pop
lds
scas
aad
and
stos
push
push
dec
cmpsb
jae
inc
cmc
inc
movsl
sub
jp
fnstenv
dec
sti
stos
subb
jbe
mov
add
lods
iret
dec
insb
add
popf
mov
or
movsl
adc
jge
or
or
dec
in
push
jnp
xchg
pop
pop
movsl
cmpsb
fimuls
imul
pop
aad
mov
ds
ret
ss
lahf
pop
lds
fcmovnb
pop
addr16
ret
sbb
pop
mov
lahf
mov
aaa
mov
fucomip
aam
mov
inc
mov
addb
imul
push
push
mov
aas
pop
mov
inc
lahf
adc
mov
test
in
push
jns
popf
ret
cmp
in
mov
popf
sbbb
or
outsl
out
jp
xchg
inc
push
sbb
cmp
jg
mov
imul
repz
daa
nop
imul
pop
scas
fs
mov
les
or
nop
adc
adc
mov
iret
xor
out
rcll
popf
xor
mov
dec
gs
jb
rcrb
pop
into
jno
and
and
sub
dec
push
push
and
lea
adc
jg
xor
pop
xchg
push
push
fucomp
out
fidivl
sub
jb
pusha
sub
jb
dec
dec
ja,pn
imul
dec
jecxz
jb
hlt
sarl
aas
shlb
push
jle
cmpl
pop
icebp
pushf
sbb
adc
mov
jecxz
jge
and
sbb
aam
push
stos
mov
jns
repnz
jae
imul
cmpsb
scas
jge
pop
xor
rcrb
loope
mov
sbb
in
mov
inc
test
inc
loopne
imul
mov
push
ja
jp
aaa
lods
es
xchg
pop
xor
cmp
movsl
add
cmp
stos
dec
mov
dec
test
in
xor
fldl
mov
mov
jne
sub
push
pushf
adcb
rolb
adc
jecxz
mov
xor
xchg
stos
pop
in
pusha
mull
pop
bound
mov
into
adc
hlt
dec
lds
leave
cmp
mov
xor
xlat
xchg
sub
mov
push
int3
mull
sub
inc
mov
fadd
sahf
mov
jae
lods
sbb
mov
adc
sarb
mov
ljmp
mov
dec
pop
sub
stc
or
push
ja
sbbb
into
das
xchg
push
int3
lret
pop
push
ljmp
or
dec
test
popf
fldcw
cmp
mov
rorb
adc
pop
mov
xor
popa
push
sbb
and
in
push
mov
jl
mov
std
dec
ss
inc
xchg
xor
and
shll
add
cld
sbb
les
mov
mov
into
movsl
xchg
or
cmpsb
aad
sbb
cmp
adc
sub
das
adc
int3
push
mov
dec
loope
call
dec
mov
mov
xchg
or
xchg
mov
mov
jnp
fdivrl
or
loope
push
fcmovb
loopne
test
jnp
pop
sub
lret
pop
push
inc
fisubl
mov
sub
ret
inc
pop
mov
mov
inc
das
ss
mov
mov
and
dec
data16
and
popf
jb
aas
rcrb
pop
ss
mov
jnp
imulb
sub
cmp
dec
cmp
cs
pop
sbb
xor
push
push
cmp
cs
add
xor
sub
jmp
sbb
mov
insl
es
dec
mov
sarb
cwtl
lret
into
inc
movsl
mov
ss
sub
lahf
mov
xor
pop
mov
and
mov
mov
shl
mov
dec
push
cmp
rcl
pop
sbb
mov
jp
int3
es
in
stos
cmp
mov
jo
inc
inc
js
shlb
aam
sub
push
imul
dec
mov
andb
cld
push
movsl
cmp
add
mov
push
or
mov
enter
mov
jnp
test
shrl
xchg
lods
js
clc
xchg
subb
das
ds
inc
push
hlt
test
out
mov
arpl
push
lret
stos
fnstsw
pop
mov
mov
sahf
mov
lods
mov
lcall
aad
and
xor
lods
mov
dec
and
xchg
sbb
outsl
icebp
sbb
xor
rcrb
inc
fisubrs
out
aad
ret
fucompp
hlt
sbb
das
cmp
cmp
mov
imul
mov
in
test
test
imul
jge
push
xor
gs
jle
call
push
cli
jno
fnstcw
cli
xchg
mov
lods
mov
push
fstl
ret
fs
out
mov
jae
imul
xor
ret
scas
es
inc
xlat
test
inc
fwait
pop
fs
xchg
xlat
in
or
icebp
clc
xor
mov
dec
xchg
insb
ret
mov
cmpsl
dec
fisubrl
lcall
subb
jne
inc
in
mov
lcall
out
inc
das
pop
roll
jbe
cltd
repnz
les
ret
clc
out
insb
sbb
imul
sahf
or
inc
push
out
fwait
pop
push
in
test
pop
mov
aam
pop
outsl
xor
push
out
out
add
xor
xor
mov
mov
jne
sbb
mov
outsl
or
jle
cmp
adcb
nop
popf
inc
or
mov
out
subl
mov
cmp
pop
fisubs
shrb
aaa
cli
shr
mov
sbb
int
add
je
sbb
cwtl
daa
test
xchg
push
dec
in
roll
sarb
imul
pusha
sti
fs
in
fsts
mov
mov
sbb
add
inc
mov
xchg
icebp
sahf
jl
mov
in
sbb
pop
and
and
popa
push
call
jg
in
sub
lods
cmp
add
cltd
push
outsl
dec
in
rclb
add
subl
lea
jb
mov
xchg
sub
insb
shll
add
xchg
jno
push
or
jmp
mov
mov
outsb
mov
push
mov
sbb
xchg
shr
ficoml
push
adc
mov
or
pop
jo,pt
push
lock
jmp
cli
callw
xchg
xor
add
sub
scas
jae
mov
jns
in
mov
sbb
leave
les
fistpll
test
sub
lahf
test
aad
cmp
and
push
xor
stos
pushf
jbe
xchg
pop
subb
cmp
xchg
dec
lcall
pusha
push
ja
clts
inc
push
add
inc
enter
call
dec
or
or
mov
mov
and
sub
jp
jnp
js
add
mov
inc
xor
push
push
ss
pop
in
jne
rcrl
fisttpl
out
jl
add
pop
repz
jno
sub
jnp
repz
inc
mov
cmp
xor
jnp
pop
out
bound
imul
inc
mov
cli
out
mov
xor
stc
mov
lods
inc
jmp
and
cmp
pushf
into
cmpsl
mov
fs
inc
and
rcl
out
sub
leave
fadd
aam
incl
mov
lret
mov
xchg
sub
push
jge
jl
ffreep
shll
sar
or
dec
fisubrs
sbbb
adc
push
clc
jecxz
movsb
jbe
fists
ret
data16
push
int
cmpl
mov
pop
pop
popl
and
dec
in
and
inc
cmp
stos
jb
bound
test
popf
stc
xchg
cli
popl
mov
stc
cmpsl
std
fdivr
nop
or
pop
jne
jp
in
jp
test
shrl
cli
lret
mov
loop
lock
ret
pop
mov
push
call
mov
cwtl
testb
sbb
sub
and
daa
mov
adc
xchg
orl
bound
push
adc
mov
xlat
pop
push
sti
enter
add
dec
mov
and
leave
mov
sahf
sbb
js
jb
out
sub
inc
pop
cltd
xor
into
add
or
dec
pusha
icebp
adc
inc
cs
jne
xor
xchg
add
test
lret
mov
inc
mov
xchg
mov
dec
fadds
iret
xchg
pusha
pushf
mov
and
cli
dec
fsubrs
mulb
mov
in
xchg
push
mov
adc
les
mov
mov
xor
xor
repz
icebp
ret
xchg
push
inc
mov
loope
in
outsl
notb
jns
ret
pop
movsl
adc
or
mov
cmp
outsb
add
aas
popa
faddl
ja
and
push
cltd
mov
inc
pop
sbb
dec
pop
xchg
sbb
mov
mov
xchg
inc
pop
rol
je
ja
out
cmp
inc
decl
push
push
dec
repz
dec
and
jp
sbb
push
fidivs
jno
inc
pop
cmp
inc
inc
lcall
push
jno
push
adc
jno
shll
inc
psadbw
mov
add
add
push
and
mov
mov
mov
aam
sahf
push
xor
mov
imul
push
pop
cmpsl
and
sti
mov
stos
cmpsb
xchg
mov
jb
xor
in
mov
mov
vaddsd
subl
enter
outsb
mov
sbb
test
sbb
pop
popf
sbb
rol
xor
shlb
inc
or
jne
gs
sahf
xor
ss
push
inc
mov
mov
fildll
and
lcall
sub
mov
cmp
xchg
cmp
xchg
movsb
pop
incl
stos
mov
cmpsl
mov
mov
mov
push
mov
add
pop
mov
mov
pop
nop
outsl
mov
jns
aam
sarl
fadds
cs
mov
sub
icebp
popa
popa
data16
xchg
mov
adc
jge
clc
xchg
adc
lahf
jb
jbe
sub
jecxz
jmp
jbe
lock
push
aad
adc
faddl
test
jae
dec
nop
mov
xor
xchg
dec
fldcw
decb
aas
dec
fsubrp
push
or
gs
outsl
mov
loope
and
sti
shl
adc
ds
jo
lea
dec
pop
inc
fxch
out
popl
out
pusha
jae
iret
aam
add
add
popa
mov
inc
insl
sub
ret
and
shrb
test
or
leave
dec
sub
stos
lock
xchg
dec
mov
repnz
shrl
mov
subl
dec
movsl
cmp
shrb
lods
enter
or
je
imul
sub
pop
cmp
lds
dec
lahf
or
rcrl
mov
mov
mov
imul
sub
jbe
xor
lods
jno
xor
adc
arpl
lods
jmp
or
xor
les
outsb
imul
in
sbb
xor
test
push
inc
mov
mov
sbb
nop
mov
pop
jecxz
dec
mov
pmulhw
xchg
xor
arpl
push
lcall
dec
rep
xchg
int
loope
out
arpl
repz
xchg
adc
sarb
mov
cmpsl
cmp
sarl
adc
daa
mov
push
inc
aad
add
lcall
mov
jbe
loop
or
jmp
mov
mov
inc
xor
repz
xlat
addb
adc
das
xchg
inc
mov
repz
shll
push
add
push
xor
fcoml
rol
mov
lret
sbb
mov
jbe
mov
inc
push
fnsave
or
test
fmull
xchg
iret
add
dec
cmp
movsl
repnz
hlt
shr
ror
xchg
das
mov
movsl
push
aas
pushf
xor
jmp
je
popa
out
dec
cmp
aaa
stos
test
push
test
jo
ja
adc
pop
xor
push
mov
sbb
into
gs
fwait
lods
sbb
pop
xor
bound
xor
xchg
lods
sub
and
jnp
pop
adc
inc
push
cli
cwtl
mov
les
xorl
scas
cmc
je
loop
ds
repnz
cwtl
mov
xor
sub
addr16
cmp
addr16
sbb
pop
push
jo
push
mov
push
nop
popf
stos
xchg
lret
hlt
xlat
sbb
mov
movb
in
je
cmp
jmp
sbb
push
lods
push
push
jb
and
inc
lds
inc
push
xchg
movsb
jmp
pop
cmpsb
add
jnp
sbb
clc
jge
lds
sbb
mov
push
mov
fisubrs
lahf
pop
repz
imul
mov
lahf
push
movsb
cwtl
jge
aam
mov
arpl
dec
push
into
movl
cs
pop
xchg
push
aam
fst
mov
adc
xor
push
cs
mov
xchg
sub
insl
push
insl
mov
add
outsl
les
stc
lds
out
rolb
jge
jnp
test
daa
add
push
imul
push
add
pushf
imul
std
inc
test
inc
mov
scas
pushf
jg
cmp
mov
and
mov
push
in
jp
push
aas
inc
add
sbb
cmp
mov
jmp
sahf
loop
shlb
cmp
jmp
pop
cmc
roll
pop
pop
mov
mov
scas
cmp
cs
fdivrs
dec
lahf
jns
inc
xor
iret
movsb
sti
jl
and
cmovno
fdivr
cmp
gs
arpl
rolb
mov
rcrb
std
pop
sub
pop
mov
mov
outsl
test
ret
or
iret
sub
cld
sbbl
nop
in
popa
repz
jmp
jae
sbb
fadds
jg
push
outsb
push
hlt
jo
rclb
mov
pop
mov
inc
iret
in
sbb
nop
dec
mul
and
push
fsub
jnp
faddl
push
cmp
ss
add
mov
dec
pop
inc
pop
jne
subl
inc
fimuls
mov
dec
fldcw
jg
xlat
sub
rol
inc
bound
aad
sbb
mov
test
jo
xor
in
mov
repz
fisttpll
inc
fdivs
imul
mov
jb
pcmpeqw
inc
mov
add
scas
orl
sub
xchg
cwtl
push
je
mov
hlt
cmp
mov
in
dec
xchg
add
push
add
stos
sub
mov
or
dec
mov
and
fsubrl
dec
jo
dec
dec
xchg
add
adc
xchg
stos
sub
jae
push
inc
sub
adc
jecxz
push
lds
jg
mov
into
loop
jbe
roll
lods
mov
gs
jo
pop
cmc
push
xchg
imul
dec
jno
push
into
sbb
lret
mov
arpl
loop
data16
movsb
fwait
sub
fcoms
lret
imul
fwait
jo
cmp
add
test
pop
inc
in
repnz
or
add
adcl
xor
outsl
sbb
loope
das
pop
mov
dec
add
int
cs
repnz
ja
and
mov
decb
xchg
mov
test
mov
or
xchg
jl
not
mov
push
sbb
lret
xor
test
fucomp
popf
test
and
xchg
cmpsl
incb
addr16
xor
js
or
cmp
inc
inc
mov
loopne
sub
pop
xchg
sub
xchg
mov
ljmp
inc
shld
repz
push
dec
or
cmpsb
repnz
loopne
pop
pop
test
push
ret
pop
xor
jecxz
or
lahf
sub
cwtl
das
dec
pusha
movsb
mov
fisubrl
cmp
adc
testl
inc
cmc
jo
mov
stos
insl
lea
fldcw
pusha
mov
sub
cmp
loopne
js
lods
cmp
icebp
daa
hlt
arpl
rcrb
mov
sbb
jg
fldenv
push
sbb
xchg
mov
repnz
rclb
pop
adc
lods
xor
push
dec
pushf
xchg
das
mov
mov
imul
mov
adc
sub
shll
dec
loopne
xchg
mov
jo
inc
shrb
jg
fs
dec
mov
decb
bound
mov
insl
add
cs
neg
push
xor
sbb
add
sbb
mov
cmp
push
sar
nop
ret
and
inc
dec
cmp
cmp
iret
push
icebp
ja
push
lods
lcall
ljmp
dec
cmp
mov
mov
out
pushf
lahf
iret
jnp
std
test
icebp
cli
lds
pop
lock
add
pop
test
ljmp
ljmp
xor
sub
mov
push
data16
xor
push
repz
daa
jl
jns
repnz
incl
cltd
imul
mov
mov
mov
fnsave
dec
divl
lcall
push
js
sbb
mov
pop
aad
gs
mov
jecxz
and
mov
mov
mov
jmp
mov
cmpb
mov
add
hlt
jg
pop
lods
lds
icebp
enter
pop
sub
clc
and
aaa
pop
push
lea
enter
cwtl
mov
sahf
lcall
out
mov
test
inc
mov
mov
ffree
pop
pop
test
jo
aad
jmp
lcall
cmp
sbb
cmpb
jne
inc
in
scas
and
ficomps
je
int
jmp
add
jno
sbb
sub
xor
sahf
inc
fldl
dec
pop
mov
in
fisttpll
adc
jne
shlb
and
inc
loop
je
cli
inc
xorb
shlb
mov
cmp
punpckldq
push
scas
test
mov
dec
adc
stc
pop
rcl
std
push
fidivs
movsb
dec
in
inc
gs
jl
adc
add
leave
inc
pop
int3
out
jp
imulb
arpl
in
push
mov
pusha
adc
sub
clc
dec
call
pop
mov
unpcklps
add
xchg
lock
jecxz
adc
sbbl
push
push
cltd
outsb
mov
jp
or
aam
sbbb
repz
jbe
mov
pop
xchg
cltd
std
cltd
ret
inc
out
cmp
sub
push
jne
test
or
test
int3
and
mov
std
dec
je
dec
sbb
xor
dec
jno
inc
popa
xchg
xchg
jns
lods
fidivl
in
cmp
das
outsl
mov
pop
pushw
sub
sub
arpl
sub
imul
fdivs
adc
adc
pop
popa
xchg
push
ret
imul
arpl
stos
jnp
mov
int
and
lret
pop
fiaddl
or
clc
mov
inc
cmpb
leave
sbb
je
xchg
add
decb
mov
andb
add
shll
frstor
xchg
mov
pop
sub
in
cmp
cmp
popa
push
mov
int3
enter
and
stos
lea
push
inc
sbb
dec
loopne
mov
sbb
mov
cltd
fildll
sti
loopne
jns
cmc
mov
rcrl
insl
or
jmp
fadd
popa
xor
imull
mov
jo
jnp
ja
fs
sbb
xchg
daa
cmp
or
sub
sti
xchg
xor
sbb
mov
mov
stos
mov
xchg
imul
add
mov
lods
inc
jne
fcoml
jmp
jmp
and
jp
adc
test
fadds
push
shll
jno
push
pop
sbb
aas
shll
mov
icebp
adc
decb
jecxz
sbb
shlb
cmp
mov
mov
or
dec
jle
shl
xor
push
jg
push
sahf
movsl
mov
jge
xchg
lods
mov
mov
or
jmp
jl
pop
popf
pop
cmpsl
ds
cmp
push
stos
dec
ja
fcompl
push
adc
sbb
ja
mov
ja
pop
push
decb
cmpsl
and
sbb
dec
mov
jnp
loop
xchg
fxch
testb
cmpsb
adc
sbb
and
cli
inc
lahf
mov
sbb
nop
or
sbb
jae
pop
lret
jge
adc
pop
lock
shlb
cs
clc
cs
fiaddl
sub
ljmp
sbb
imul
mov
inc
lods
leave
inc
into
fstps
fcomp
mov
xor
mov
add
jecxz
xlat
and
iret
push
jle
inc
mov
movsl
icebp
in
imul
push
popa
fdivl
xchg
daa
dec
out
mov
insl
add
leave
sti
xchg
out
pop
or
cmp
mov
add
ljmp
cmc
mov
pop
push
mov
jle
out
pop
jmp
enter
cmpb
sub
and
fs
fisubs
pop
inc
pop
mov
mov
in
mov
test
leave
arpl
movl
mov
test
push
test
popf
aas
mov
andl
xchg
shlb
pop
cmp
cli
add
mov
and
insb
jl
aas
and
pop
cmpsl
out
fcomp
in
sub
jmp
adc
pop
pop
jne
push
loop
movsb
cmp
jns
in
aaa
ret
lahf
icebp
mov
adc
out
gs
mov
jge
push
cs
mov
jb
out
mov
mov
dec
ljmp
pop
jo
dec
cltd
adcl
sub
pop
and
addl
mov
jnp
dec
push
sub
or
mov
fcomip
pop
lret
inc
cwtl
jae
mov
lods
mov
cmp
sbb
jmp
aaa
xchg
pop
scas
sbb
or
mov
das
pop
sahf
pusha
pusha
lock
push
mov
cmp
mov
popa
add
add
mov
xchg
mov
test
icebp
cmp
xor
stos
add
add
fstpt
cli
mov
dec
in
adc
pop
adc
insb
add
mov
push
jmp
add
in
pop
in
lods
mov
sub
paddsb
jecxz
xchg
pop
mov
clc
jp
xor
xchg
out
imul
xor
jg
sbbl
push
pop
adc
and
push
data16
sub
xor
adc
push
repnz
xchg
mov
inc
cld
hlt
iret
jecxz
cmp
fwait
push
xchg
pop
js
shrl
mov
lds
or
iret
imul
mov
repnz
std
aaa
adc
pusha
or
orl
and
mov
xor
shrb
fdivs
call
in
mov
in
mov
mov
test
lret
out
stos
ljmp
xor
test
lret
inc
loope
movsl
enter
icebp
adc
insl
stos
jbe
nop
gs
dec
add
jne
push
movsl
lds
iret
adc
cltd
mov
mov
testl
inc
mov
aaa
jecxz
negb
xor
outsb
pop
add
sbb
jge
mov
jg
jmp
sub
aas
out
repz
add
aad
fmul
shr
inc
mov
in
dec
loopne
jp
xor
cltd
test
ja
pushf
mov
gs
enter
adc
sub
cltd
testl
rep
out
pop
repz
or
inc
inc
xor
out
in
fcmovbe
push
jne
xor
jp
aam
pushf
sub
rorl
xchg
pop
bound
test
inc
adc
xor
cld
stos
repz
cmpsb
or
in
cmp
into
movsb
jge
jnp
mov
jnp
inc
ljmp
aas
push
fildll
cmp
mov
sahf
jg
mov
or
insl
repnz
outsb
std
test
hlt
dec
leave
jp
jo
popa
int
shl
out
loopne
mov
cmp
jp
push
aam
sahf
fadd
adc
repnz
aas
add
add
sbb
push
lock
call
add
pop
mov
push
cmpsl
adc
jo
fs
lret
cltd
pop
stos
punpckldq
aad
insb
stos
push
jp
fistpll
fisttpll
test
mov
lcall
cwtl
mov
inc
push
sub
sub
mov
jbe
adc
scas
sbb
xchg
mov
jns
loopne
aad
cli
mov
jl
add
adc
jbe
push
loop
mov
and
mov
mov
sub
mov
xor
push
rcl
pop
sub
mov
pop
jne
shl
and
dec
insb
gs
xchg
cmp
lods
loope
mov
mov
mov
jbe
fsts
fcmovb
xor
into
xor
xor
adc
ja
push
inc
mov
mov
mov
sbb
rcrb
shrb
inc
push
xchg
ja
daa
sub
std
adc
pop
lds
mov
push
adc
sub
jae
mov
cmp
mov
xor
repnz
insl
push
repz
ficoml
xchg
and
in
cmp
and
shl
leave
xlat
adc
adcb
adc
mov
sbb
cmp
pop
push
not
lods
es
adc
lcall
and
cmp
xchg
xor
add
sbb
sbb
cmp
inc
pop
out
adc
add
sub
mov
popf
cmp
sbb
lret
daa
enter
sahf
fs
negl
mov
fucomip
xor
pop
xor
pop
arpl
mov
xchg
andb
pop
xor
jle
jg
aaa
mov
repnz
mov
hlt
pusha
fwait
cli
es
push
xchg
pop
jb
cmp
jo
mov
push
sub
mov
mov
imul
scas
mov
test
and
int
push
addb
lods
and
mov
xor
int
fstl
pop
cmp
jmp
fcomi
lea
mov
in
pop
or
push
call
inc
imul
orl
sbb
mov
cltd
or
pop
push
inc
jno
sti
mov
insb
mov
xor
mov
sbb
or
mull
jne
fs
jbe
in
adc
push
loopne
rolb
data16
lret
in
inc
or
popf
dec
rcrl
dec
cmp
stos
inc
xor
or
push
dec
cmpsb
lds
cmp
mov
je
push
pop
repz
sarb
aad
ja
push
test
aam
push
in
xchg
addr16
dec
ficoms
jne
enter
jae
aam
pop
test
or
fmul
out
inc
and
sub
ret
pop
cmp
mov
pop
popf
or
dec
dec
inc
out
or
wbinvd
inc
push
sub
jle
in
inc
enter
jns
xchg
jbe
fs
aad
ja
jge
or
pop
add
das
ret
lea
xchg
push
mov
cmp
mov
iret
ss
test
not
stos
mov
mov
int
nop
pop
out
xchg
mov
cwtl
repz
adc
jbe
mov
pop
push
shlb
push
aam
dec
sbb
push
mov
cli
push
out
inc
aam
dec
sarl
dec
pshufw
in
mov
dec
mov
or
inc
mov
clc
ljmp
add
dec
inc
sbb
push
lret
lret
shll
sub
insb
add
mov
or
dec
pop
mov
lret
mov
stos
xchg
test
fldenv
adc
rcrl
jne
cmp
inc
sbb
mov
outsl
jle
rcrl
ljmp
cmpsl
mov
mov
scas
inc
fnstsw
dec
pop
fwait
int3
jge
fs
xor
fists
sbb
jb
addr16
mov
movsl
dec
jbe
sbb
in
fcmovnbe
loopne
psrlw
mov
scas
popf
dec
cmp
push
push
mov
scas
jecxz
mov
movsl
pop
fadds
jmp
into
mov
pop
scas
int3
pop
sarl
mov
std
mov
adc
dec
xchg
jle
jnp
call
lret
andb
sti
leave
sub
cmp
push
inc
fildl
test
adc
iret
popa
repnz
dec
push
sub
das
hlt
sbb
ret
push
cmp
inc
jno
jb
mov
and
fidivl
push
popa
clc
movsb
xor
dec
adc
push
outsb
pop
mov
sahf
fcoms
push
adc
push
loopne
jae
xchg
inc
inc
mov
ds
pop
jo
cli
sbb
pop
mov
sub
outsb
add
ljmp
mov
jg
push
fnstsw
pop
and
add
adc
jge
pand
add
hlt
mov
push
cwtl
jnp
xchg
adc
nop
test
sub
test
lret
cld
cmpsb
push
stos
loop
add
iret
in
mov
int
or
add
ret
sub
push
and
adcl
jo
mov
arpl
push
adc
insb
add
pop
roll
mov
push
andb
and
mov
stc
mov
push
sub
and
adc
jmp
pop
mov
fstl
into
gs
ss
or
mov
daa
stos
lods
test
push
push
int3
xchg
sbb
dec
mulb
push
push
or
insb
imul
lds
xor
push
hlt
adcl
cmp
add
lods
mov
fdivrl
pushf
and
cmp
in
dec
mov
fidivl
pop
pop
stos
popa
popf
lds
pop
insb
xchg
fiadds
std
cmp
inc
jmp
lahf
ret
mov
cltd
push
outsl
jbe
jmp
and
sbb
shrl
mov
pop
mov
out
subb
inc
mov
in
fstpt
push
or
test
pushf
pop
arpl
lock
push
and
ds
inc
lahf
outsb
lea
cwtl
lcall
aam
mov
out
cmp
add
and
repz
movsl
dec
dec
and
clc
mov
xchg
imul
or
xchg
int
mov
pop
add
scas
xchg
cmp
cmp
in
xchg
hlt
and
ja
sbb
jmp
mov
xor
pop
orl
out
cmp
out
psllq
movsl
in
loope
sub
xor
dec
aam
fadd
les
push
lahf
push
sbb
jne
dec
pop
cwtl
inc
faddl
sbb
adc
xor
cmp
inc
je
mov
dec
mov
js
mov
push
mov
mov
outsb
adc
call
add
sti
cmp
shlb
and
inc
pop
sahf
enter
mov
dec
scas
dec
rorb
sub
in
xchg
arpl
push
test
icebp
push
in
xchg
ljmp
add
mov
push
mov
and
mov
pop
sub
int3
out
push
aas
outsb
incl
add
cmp
pop
ret
pop
dec
aas
push
xor
mov
mov
les
roll
ja
mov
pop
or
xor
xlat
popf
mov
cli
fists
test
mov
or
jle
test
dec
mov
stos
sbb
add
sahf
enter
test
popa
insl
jmp
cmpsl
cmp
pop
pop
add
and
cmpb
int3
idivl
jo
clc
aaa
pop
sahf
push
add
outsl
loopne
std
push
fwait
shl
imul
jnp
ja
insl
rorb
add
jl
or
push
sub
loopne
test
loopne
test
inc
or
ja
mov
inc
call
pop
gs
das
cs
fs
mov
mov
jl
cmp
ret
daa
mov
in
scas
ret
aaa
push
pop
cmp
popa
inc
sbb
mov
dec
lret
insb
mov
or
mov
cmp
into
jo
daa
dec
cmpsl
cmp
jmp
shr
sub
dec
pop
xchg
xchg
std
pop
mov
insl
nop
daa
mov
adc
mov
scas
adc
popa
inc
mov
jbe
out
jg
and
negl
pop
cmp
in
mov
cli
jp
mov
in
fildll
adc
fildll
into
mov
lret
rcrl
push
jb
add
inc
pop
mov
cmpsl
xor
mov
adc
outsb
fwait
mov
push
jns
in
in
insl
test
pextrw
pop
andl
aaa
insb
clc
test
mov
pop
cli
clc
scas
andb
mov
xchg
in
dec
push
mov
mov
lock
xchg
std
adc
mov
aam
xor
je
xor
mov
fidivrs
push
pusha
js
jp
into
mov
mov
out
out
xchg
inc
pop
sbb
and
lret
bound
sbbb
jl
jecxz
add
pop
das
pop
and
pop
lods
ret
popa
stc
jl
jg
fidivs
mov
mov
pop
lods
icebp
dec
dec
jbe
outsb
mov
gs
call
or
popa
scas
addr16
mov
lret
cld
mov
push
jmp
push
lods
mov
pop
add
in
out
sahf
fmull
subb
xchg
cli
es
pop
cmp
lods
mov
ljmp
mov
and
sub
adc
call
or
ds
fdivrs
lock
jne
pop
sbb
xorl
and
fadds
popa
stos
aaa
ljmp
mov
push
cmp
jmp
inc
imul
jb
pop
mov
je
and
xor
outsl
xor
mov
and
sub
in
sub
mov
insb
xor
pop
or
pop
in
pop
and
push
movsl
cmp
dec
dec
lock
dec
push
dec
pop
adc
aaa
sbb
sarb
fstpl
sub
dec
nop
mov
fcmovb
sub
or
cli
es
test
cld
cwtl
stos
xchg
mov
cltd
and
daa
inc
call
or
in
or
xchg
loop
loope
sahf
jnp
fdivrl
gs
mov
jg
rcl
jne
imul
push
and
jg
jne
pop
cmpsl
adc
sub
mov
xchg
sbb
mov
adc
outsb
push
loopne
xorb
cs
mov
cmp
imul
ss
add
scas
xchg
adc
inc
jl
jo
adc
mov
addb
cmpsb
cltd
pusha
addr16
jp
sub
in
inc
std
in
or
lret
lret
aam
and
out
mov
or
sbb
ret
push
packsswb
and
cmp
neg
cmpb
outsl
cwtl
cmpsl
mov
mov
loopne
sarb
shl
out
xor
loopne
or
push
pop
fs
test
dec
cmpsl
movsb
repz
and
adc
mov
fldl
sbb
fcomi
jg
sub
repnz
cmp
inc
lods
and
sub
mov
xor
inc
je
mov
sbb
pop
shl
jnp
and
inc
mov
cmpsb
mov
es
popa
add
jns
xor
xchg
fcomi
imul
cld
into
fnsave
lock
insb
or
xchg
cmp
das
dec
pop
shlb
stos
clc
adc
repz
or
stos
sahf
lahf
sarl
mov
out
dec
mov
jne
push
mov
push
fiaddl
push
jne
push
xchg
leave
mov
repz
daa
xlat
iret
xor
scas
test
icebp
sbb
out
dec
pop
fbld
add
cld
outsl
daa
cmp
rorb
mov
fcmove
xchg
add
pop
push
cmp
sarl
jnp
dec
fisttpl
data16
sub
mov
dec
add
jmp
fdivrs
clc
mov
cs
int3
adc
xchg
push
test
and
push
adc
inc
cmp
or
pop
cmpsb
negl
pop
cmp
out
jno
rcrb
jp
mov
xor
add
dec
in
out
ds
popf
cmp
into
mov
dec
pop
adc
ds
lods
and
push
push
add
out
add
rcr
sbb
xchg
pop
xor
dec
mov
dec
pusha
sti
nop
cmp
pop
jg
outsb
testb
icebp
inc
push
lret
add
imul
scas
add
push
andb
sbb
bnd
sarl
xchg
fld
ret
sub
pusha
pop
xlat
mov
jb
scas
mov
jmp
popf
xlat
jp
lds
push
rol
movsl
mov
pop
insb
adcb
mov
sub
adc
dec
inc
test
mov
test
pop
xchg
scas
and
cmp
fcmovnb
rcrl
aad
insb
adc
hlt
dec
add
push
stos
push
sub
shlb
jo
push
adc
insb
push
aaa
repz
leave
icebp
dec
and
xchg
pushf
pop
out
sub
mov
ja
int3
movsl
xchg
fs
test
repz
mov
or
and
lea
incl
cmc
mov
in
mov
jl
ja
push
adc
push
loop
pop
es
mov
movsl
xchg
lret
xchg
into
scas
adc
fcom
filds
lods
push
mov
ret
popf
int3
shrb
sub
test
js
inc
std
mov
or
lods
inc
mov
test
iret
in
les
add
mov
cmp
lods
xchg
push
pop
dec
hlt
shrl
lret
pop
jecxz
aas
iret
rcl
push
mov
dec
add
fs
push
push
push
add
orb
jnp
mov
xor
mov
dec
mov
or
fldenv
dec
lahf
push
test
fstpt
dec
or
mov
jl
mov
push
xchg
in
test
cmpb
pop
mov
popf
dec
mov
stc
mov
orb
and
mov
mov
leave
lret
in
rorb
push
add
clc
push
repnz
leave
xchg
aad
mov
popf
int3
push
xchg
aas
dec
fstpt
jecxz
inc
into
stos
outsl
in
cmp
cmp
jecxz
movsl
sub
lea
inc
call
dec
lcall
loopne
stos
xchg
inc
sub
repz
sti
push
sub
les
scas
jae
sbb
inc
imul
mov
bound
adc
fpatan
mov
mov
in
vcvtpd2ps
jle
fstpt
fdivl
insb
popf
adc
fisttpll
stos
mov
shl
add
jnp
sti
xchg
xor
mov
xor
push
adc
adc
hlt
add
cmpsl
std
out
movsl
fsts
aad
mov
sbb
or
imul
cltd
movsl
pusha
mov
push
hlt
jge
fldt
cltd
test
test
and
jecxz
xor
sub
lret
sti
fcoml
pop
jecxz
xor
fbld
gs
dec
mov
inc
xor
out
jle
rcrl
sbb
and
imul
outsb
sar
jne
inc
and
push
inc
ds
or
xchg
test
cmp
movsb
jle
xchg
sbb
adc
or
mov
outsb
mov
pop
xor
into
mov
roll
hlt
das
xor
gs
insl
inc
inc
jbe
lret
mov
or
mov
or
cs
mov
sbb
and
sbb
jmp
cmpsl
pop
xlat
rcl
dec
addr16
cmp
mov
pop
out
fs
cwtl
jns
jnp
xor
adc
in
in
sbb
jmp
jg
mov
inc
xor
out
dec
adcb
cmc
fadds
sub
roll
mov
push
pop
push
jnp
sahf
hlt
xchg
jbe
addb
loope
jmp
shl
repnz
jmp
cs
out
push
test
adc
add
jo
in
lret
dec
xchg
dec
ds
aam
icebp
pop
shrb
das
xchg
add
inc
xor
sti
xchg
imul
icebp
mov
mov
xchg
add
cmp
clc
pop
lock
jle
mov
and
push
mov
popf
and
mov
lret
or
jno
and
jge
dec
mov
adc
loop
inc
and
cmpsb
shr
les
loopne
sub
add
pusha
inc
pop
xchg
mov
loop
je
das
ret
cld
or
dec
ja
testb
shlb
jb
and
loop
push
xor
push
shl
lods
lcall
ret
pop
hlt
jo
push
movb
inc
push
je
lret
dec
mov
inc
incl
test
xor
mov
in
pop
cli
sub
add
shl
sbb
addr16
jmp
jle
lock
pop
sub
popf
push
repz
leave
mov
dec
clc
add
dec
mov
mov
stc
adc
jnp
pop
xchg
sub
push
add
sti
call
out
lahf
mov
repz
xlat
mov
inc
stos
call
push
sti
mov
or
andl
popa
rorb
arpl
popa
pop
mov
or
out
stos
in
outsb
add
sbb
lods
mov
in
out
sub
movsb
mov
insl
lds
loop
xlat
xchg
sbb
icebp
insb
mov
adc
loope
push
sbb
mov
add
dec
adc
jnp
xor
pop
arpl
xchg
lds
in
add
jnp
sbb
fwait
adc
sahf
cmp
xlat
das
mov
jae
lds
push
stos
out
or
je
lahf
xor
fidivrs
mov
imul
lcall
clc
daa
ja
fsubrs
adc
pop
adc
sub
dec
orb
push
jle
lret
mov
mov
push
and
fnstenv
fistpll
push
dec
mov
repz
dec
cmpsl
inc
dec
cmp
andl
ret
or
mov
popfw
mov
xchg
sbb
mov
hlt
jge
jae
ret
adc
jle
push
cld
inc
inc
sbb
or
clc
decl
push
cmp
fsubrs
stos
jge
loopne
insl
jnp
in
scas
cltd
in
xor
cmp
imul
mov
add
dec
xchg
int3
xor
rcll
call
loopne
pop
push
pop
xchg
into
cmc
xchg
daa
jae
cli
leave
or
pop
mov
rcrl
hlt
loope
mov
fistpll
xchg
stc
or
jl,pn
aam
out
in
movsl
dec
mov
loopne
sub
cmp
clc
or
ss
es
push
stos
out
inc
fsts
xchg
data16
push
mov
or
and
pop
subb
cmc
bound
sbb
loope,pt
add
dec
sarb
fdiv
mov
pusha
int
popa
lods
jge
push
mov
jb
in
jo
pop
add
push
jmp
flds
jne
sub
ret
push
and
mov
les
jnp
add
cld
sti
aas
sbb
jns
sub
inc
fimuls
adc
sbb
add
rorl
add
dec
lods
repz
and
movsl
aam
loop
int3
orb
prefetchwt1
sbb
insl
add
out
shlb
inc
stos
addr16
clc
in
xchg
fdivrl
dec
push
aaa
mov
xor
les
pop
das
dec
pop
mov
xchg
ds
clc
inc
xchg
dec
outsb
pushf
xchg
jecxz
jo
xchg
in
inc
mov
jge
cltd
mov
sti
push
loopne
jg
pop
or
popf
rolb
dec
mov
loop
out
cmpsl
mov
xchg
jp
lret
sbb
cmp
clc
movsl
cmpsb
lock
popl
push
mov
lahf
xchg
add
bnd
xor
lcall
out
loop
pop
mov
jae
sahf
or
sub
imul
jo
jge
stos
jbe
popf
pop
dec
cli
sbb
data16
fstps
lcall
xlat
mov
aad
push
ljmp
inc
in
loopne
push
cmp
std
add
xor
enter
outsb
fnstsw
dec
clc
inc
cmpsb
sbb
jmp
das
sti
xchg
iret
cmp
mov
enter
scas
xor
push
shrb
inc
mov
fdivrs
movsb
or
pop
fists
aaa
push
mov
outsb
inc
or
fmull
mov
pop
and
stc
xor
les
xor
xlat
ret
jo
adc
add
mov
jne
js
jo,pt
lahf
gs
xor
cmp
xlat
sub
movsl
fbstp
add
inc
cwtl
mov
cwtl
cwtl
mov
lcall
and
push
jbe
gs
mov
and
sbb
mov
test
jno
movsb
fs
imul
pop
lods
addb
lods
inc
sti
add
cld
mov
pop
icebp
fdivl
clc
inc
cld
pop
pop
fimull
inc
sbb
jns
imul
pop
data16
movsb
repnz
xorb
xchg
jge
insl
and
iret
in
in
xor
or
mov
mov
jge
xor
cs
std
and
push
fwait
imul
insl
sub
test
add
sub
sahf
lods
sbb
jge
sub
leave
mov
hlt
clc
sub
xor
jns
in
lret
mov
cmp
adc
rcl
flds
sub
dec
std
cmc
mov
lods
cmp
in
pop
xchg
jmp
mov
imul
gs
pushf
mov
lods
add
call
dec
pop
cmp
out
mov
cmpsl
ret
xor
lea
lahf
rcr
mov
loope
dec
aas
insb
insb
add
in
mov
or
pop
dec
push
sub
pushf
adc
xchg
mov
les
dec
fs
dec
pop
dec
cmc
es
mov
push
out
stos
out
ljmp
les
xchg
inc
jne
int3
bound
es
test
imul
inc
lods
scas
mov
scas
out
imul
movsl
int3
push
rcl
mov
dec
fmuls
cs
pop
out
cwtl
jno
xorl
mov
push
sbb
mov
loopne
pop
out
aad
and
mov
arpl
in
ljmp
pushf
mov
aam
pop
mov
adc
mov
add
sbb
pop
in
push
iret
cmp
sar
test
and
movsl
pusha
subb
jge
xchg
outsb
in
dec
push
jae
cmpsl
xchg
addl
loopne
sub
mov
not
jae
xor
out
mov
es
loop
out
sbb
fsts
inc
cmpsl
cmp
lahf
out
jno
cs
inc
test
add
adc
gs
push
in
ja
fucomip
clc
je
fsubl
ja
int3
fdivl
loope
cmp
aad
jne
mov
mov
lret
insl
in
dec
arpl
sbb
sub
pop
dec
push
shl
repz
fidivrs
and
mov
mov
xor
aam
shll
mov
call
add
les
xor
mov
pslld
push
rorb
push
pop
idivb
js
dec
mov
pop
sub
orb
mov
add
and
add
notl
lahf
xor
sbb
inc
test
scas
ret
bound
pop
xor
xchg
adc
test
and
mov
pop
jmp
fwait
outsb
lock
and
iret
arpl
inc
movsl
mov
jle
loopne
sub
pop
pop
dec
aad
and
pop
dec
dec
insl
xchg
sub
lcall
or
push
sbb
sahf
ret
pop
je
fsub
fmulp
sbb
movsl
jo
jg
ret
fistpll
aam
inc
add
inc
jbe
sub
outsb
cmc
mov
pop
inc
aam
in
add
popf
in
dec
inc
dec
jmp
mov
lahf
loop
fidivrl
jno
push
mov
push
pusha
cmpb
pop
adc
xchg
mov
pop
sbb
insl
fwait
aaa
inc
push
movsl
test
jne
shlb
push
inc
sub
ret
mov
inc
stos
dec
xchg
test
jle
icebp
inc
fldt
push
inc
sbb
mov
sti
xchg
mov
add
jmp
push
gs
rcrl
repnz
faddp
jbe
js
stos
lea
scas
inc
ret
mov
adc
scas
mov
ljmp
mov
fisubl
pop
sbb
sbb
es
inc
test
shrb
adc
xchg
sbb
mov
mov
bnd
inc
pop
sbb
add
lea
std
scas
jae
insb
negl
testl
ss
jmp
cltd
out
cwtl
or
aas
and
ret
or
mov
push
je
inc
data16
imul
mov
pop
push
data16
insb
mov
push
aaa
xchg
pop
xor
outsl
jl
dec
push
push
mov
pop
pop
repz
jmp
test
mov
or
sbb
call
inc
mov
jns
adcl
mov
clc
mov
sahf
xchg
jnp
adc
vzeroupper
adc
std
xchg
data16
loop
mov
inc
stos
xchg
pop
adc
inc
fcoml
xchg
pop
cmpsl
jb
xlat
xchg
jne
pop
hlt
fsts
sti
adc
leave
xchg
pop
outsb
leave
ljmp
push
and
pusha
bound
out
jp
inc
pop
rolb
mov
add
mov
mov
cs
mov
scas
cwtl
push
sbb
sbbb
mov
icebp
mov
xchg
cmc
imul
add
cmpsl
sub
addr16
sbb
imul
insl
aam
mov
clc
shrl
outsl
add
and
and
movsl
movsb
aas
mov
outsl
sub
push
rep
pop
loope
cwtl
bound
lret
std
push
ret
mov
rorl
inc
popf
loopne
pop
popf
or
and
in
jmp
adcb
std
mov
pop
lea
adc
xlat
inc
xor
into
add
pop
or
inc
popa
and
fstpt
jecxz
test
bound
lds
notb
mov
std
adc
clc
cmpsb
jne
xchg
mov
mov
dec
or
pop
mov
mov
lret
push
or
and
dec
adc
cmp
int3
lret
pop
mov
xchg
test
test
and
push
and
lahf
outsl
xchg
jno
lods
nop
es
ret
cs
dec
cmp
push
and
push
pop
sbb
xchg
mov
daa
mov
test
test
lods
and
sbb
lea
and
adc
inc
mov
jno
pop
sub
dec
jl
into
xor
mov
outsb
popa
les
es
xlat
and
add
ret
sbb
enter
adc
jo
xchg
loop
xchg
push
ss
cmp
insb
mov
fists
and
and
inc
icebp
dec
cli
or
lock
xchg
sbb
push
and
push
jg
push
push
out
pop
addl
outsb
jp
adc
xor
pop
adc
in
inc
and
aam
scas
dec
mov
loope
sbb
xorl
adcb
jle
push
jge
jae
xor
pop
shld
fwait
stos
fs
xor
repz
aas
add
dec
or
jmp
and
jo
pop
inc
jge
xor
mov
shrb
test
out
xchg
mov
push
aas
jge
dec
xor
mov
xor
pop
inc
idivb
shll
and
jmp
out
or
xchg
nop
bswap
stos
or
mov
sbb
out
les
stc
xchg
and
out
jns
shll
xchg
push
stos
in
neg
xor
xchg
mov
sbb
dec
stos
xchg
dec
adc
cmp
js
fbstp
aaa
gs
cmp
mov
dec
fsubs
ljmp
jb
pop
stc
mov
jl
mov
jecxz
loop
push
mov
dec
sub
loop
scas
and
das
jmp
hlt
add
jl
pop
mov
shrb
pop
popa
cwtl
mov
lock
xlat
sbb
or
jmp
push
mov
dec
movl
xchg
dec
in
push
dec
and
sbb
dec
mov
cmp
and
jne
decl
xchg
push
fcmovnbe
imul
jbe
and
jp
inc
mov
movsb
jmp
or
jmp
cmp
iret
dec
imul
push
out
push
in
xchg
loopne
pop
popf
mov
out
xor
call
scas
mov
jecxz
jmp
or
xor
pop
jmp
inc
std
add
cwtl
pop
ljmp
dec
push
lods
add
aad
ret
outsb
insl
std
or
stc
mov
stos
into
cmp
ja
xor
push
test
cmp
or
fadds
xchg
or
aam
pushf
mov
sti
push
mov
loope
sbb
in
adc
sbb
or
jnp
daa
cmpsl
cmp
cmpsl
xlat
inc
jecxz
dec
popa
xor
and
inc
push
dec
sbb
push
mov
out
cmpb
lcall
imul
push
pop
icebp
subb
pop
mov
dec
in
xchg
xchg
das
int3
pop
out
test
lret
or
sti
pop
fdivrl
add
outsl
jnp
lea
add
cmp
insl
or
rorl
aam
cmp
lcall
arpl
pusha
imul
sub
iret
shll
dec
dec
in
imul
inc
test
cmp
into
gs
sub
push
ret
pop
test
lods
subb
lret
pushf
sub
ret
leave
fldcw
push
outsl
loop
cmp
imul
mov
addr16
xchg
scas
mov
subb
out
and
fcompl
call
nop
dec
repnz
les
jo
pop
cmc
pop
jp
and
cld
mov
sub
xchg
scas
out
fst
cmp
jbe
push
shl
push
adcl
push
add
ja
or
mov
loope
add
aas
rolb
loop
inc
fwait
sbb
add
cld
dec
pop
add
xchg
shl
in
sbb
add
aam
dec
loope
push
mov
xlat
je
iret
popa
jge
imul
out
jle
cmpsb
sbb
jp
xor
xor
arpl
mov
call
add
lahf
out
inc
add
lret
sub
inc
and
lea
xor
and
sub
fcompl
xchg
sti
push
or
jbe
into
jns
xor
add
arpl
int
out
sbb
sbb
inc
lahf
shrl
in
sbb
pop
adc
push
sbb
es
mov
out
inc
sub
push
adc
vorps
fldenv
mov
push
inc
lock
scas
ds
jge
shlb
and
mov
pop
daa
into
mov
addr16
cs
or
fidivrl
sub
xor
int3
push
nop
adc
je
addr16
add
pop
and
mov
mov
pusha
add
mov
cld
or
mov
fcmovbe
add
repnz
adc
sub
xchg
sub
scas
sub
jge
inc
xlat
sub
xor
jecxz
jl
xlat
xchg
and
shll
mov
sbb
scas
mov
mov
repz
daa
lods
mov
add
inc
hlt
cmpl
mov
ret
test
adc
leave
mov
or
mov
cltd
push
andl
jb
cmp
aam
push
mov
jge
sub
fbld
cmpps
pop
sub
adc
je
dec
pop
stos
test
movsb
sub
ss
and
cmp
ret
and
dec
data16
pop
mov
and
lcall
pop
jo
add
xlat
outsb
mov
div
push
scas
clc
xchg
xor
dec
in
decb
fcomps
nop
and
mov
or
push
adc
push
pop
or
int
je
jnp
jmp
in
xchg
arpl
mov
sub
ljmp
js
les
sbb
aad
and
cmp
or
fcmovnb
in
jbe
sbb
mov
mov
daa
movsb
mov
mov
stc
fdiv
daa
subl
dec
xchg
inc
cmp
inc
movsl
cmp
rol
pop
add
inc
movsl
fnstcw
dec
ja
adc
bound
xor
aad
ds
mov
and
rcrb
fldenv
ljmp
cmc
js
inc
push
aas
mov
pop
sub
and
fsts
stos
cmp
jge
popf
xor
xchg
xchg
jge
stc
pushf
pop
and
arpl
add
push
imul
mov
loopne
aam
jmp
mov
or
jmp
pop
pushf
mov
xorb
jae
pusha
not
adc
mov
lods
mov
out
and
inc
into
shrl
es
or
push
jle
aad
sub
ljmp
pop
jb
mulb
mov
rcl
sbb
jne
or
push
test
dec
cmc
add
out
incl
mov
aas
clc
xor
or
push
xor
cmp
clc
pop
mov
dec
dec
scas
ret
xchg
and
jecxz
stos
mov
insb
mov
mov
mov
xor
scas
xor
jno
push
orb
shrl
pushf
adcb
mov
sbb
adc
mov
cmp
mov
popf
and
movsb
pop
into
testl
add
mov
lds
push
insb
sbb
pop
and
cmpsb
cmp
sti
xor
xor
fiaddl
inc
mov
push
fwait
adc
movsl
in
pusha
jb,pn
push
stos
in
ret
ficoml
imul
inc
sbb
dec
xor
push
jmp
loop
lahf
sbb
scas
xor
repz
or
cmpsl
mov
aaa
je
negl
xchg
push
xchg
sub
test
adc
rorb
sub
stos
pop
cmp
cmp
xor
add
je
mov
rol
xor
sti
mov
push
ret
jmp
outsl
icebp
adc
ljmp
insb
jge
popf
sbb
mov
fldcw
aad
hlt
fidivs
or
fsubrp
mov
pop
xchg
sbb
mov
xor
in
std
add
mov
jb
out
push
sbb
push
ss
mov
mov
xchg
movsl
test
push
mov
dec
pop
or
clc
adc
in
jg
sti
repnz
cmpb
aas
fiaddl
sub
lea
rcr
scas
push
mov
arpl
addr16
push
test
pop
mov
popf
sbb
and
inc
push
xchg
mov
test
out
repnz
fnstsw
rcrb
and
scas
fdiv
fdivl
dec
push
leave
xchg
jp
imul
hlt
rep
jno
lahf
mov
xchg
sti
jb
dec
xchg
add
out
cmp
test
orb
dec
mov
stos
sub
inc
mov
out
mov
cmp
cmpsb
hlt
inc
fmulp
ret
js
and
out
jecxz
inc
xor
in
dec
cmp
xchg
stos
cmp
aas
and
push
nop
sahf
test
inc
jnp
adc
dec
pop
inc
lahf
cltd
pop
jmp
popf
cmp
add
dec
jmp
push
fisttpll
scas
fs
testb
sub
pop
dec
add
dec
adc
sbb
jl
les
mov
push
xor
loopne
add
mov
insl
in
mov
inc
mov
add
nop
pop
test
xor
rclb
cltd
test
hlt
pop
fs
loope
inc
push
jmp
adc
fdivr
mov
jmp
mov
js
addr16
lods
shlb
fistpl
adc
cmp
jl
repnz
mov
xorb
jb
cmpb
add
lahf
fdivs
sbb
and
stos
data16
xchg
inc
das
cmpsl
ret
stos
cld
aad
sbb
mov
ret
inc
ja
xor
arpl
and
xor
sahf
in
or
sbb
push
loop
addr16
mov
push
xor
nop
mov
inc
and
cwtl
add
cmpsb
jp
and
cmpsl
adc
push
jns
stos
inc
popf
sbb
mov
in
sub
sbb
dec
mov
lea
mov
cltd
push
sub
mov
fdivrl
cmp
aas
and
daa
push
ret
jnp
fldcw
test
mov
test
mov
notb
xchg
movsl
adcl
frstor
test
cmp
sub
cmp
subl
xchg
cmp
aam
xor
xor
mov
lods
mov
cld
cmp
lock
pushf
cli
or
jnp
inc
outsb
int3
mov
pop
sarl
imul
pop
xchg
push
adc
test
pop
add
sub
push
push
sahf
sti
cmp
sahf
cmp
pushf
test
mov
push
pop
adc
stc
je
or
xchg
push
sbb
enter
xor
lahf
mov
cmp
sub
clc
xchg
imul
sub
mov
sarl
fwait
sbb
pop
add
gs
jnp
lret
std
jo
loopne
or
pop
mov
jp
aad
fs
lods
and
jecxz
ss
pop
mov
leave
lea
in
or
add
std
adc
ret
shlb
shlb
cmp
lcall
gs
das
lds
iret
lds
rcl
cmpsl
aas
lcall
cmpsb
mov
pop
je
sub
lods
add
adc
fsubl
xor
cmp
jno
out
inc
pop
inc
add
pop
pop
mov
lea
movsb
lods
mov
out
addb
cld
sub
stos
es
or
mov
pusha
mov
sbb
lahf
lcall
adc
cs
or
testb
adcl
lock
pop
mov
mov
test
dec
pop
pushf
dec
push
call
xchg
sub
aam
test
mov
mov
xor
jge
and
lea
scas
jp
imul
mov
add
into
xor
sbb
inc
xchg
xchg
jnp
jecxz
push
fwait
add
enter
cwtl
dec
pop
cmp
fincstp
les
leave
mov
push
push
mov
rolb
mov
fnstcw
test
jl
xor
mov
filds
inc
lods
nop
sbb
fs
cmpsl
fs
and
mov
cmp
mov
cwtl
push
lret
fimuls
out
xor
pop
cmpsl
addl
int3
mov
mov
ffree
jnp
je
xchg
adcb
sub
cmp
ja
inc
out
sti
push
fldt
mov
leave
push
pusha
push
repnz
dec
or
add
xor
lods
cs
mov
outsl
cmp
lret
add
adc
sti
cld
push
push
push
add
mov
and
sub
or
jecxz
sub
sbb
push
add
adc
loopne
and
ljmp
sub
xlat
cmp
jae
test
adc
mov
sbb
push
jb
shl
push
sub
jmp
das
push
test
push
int
adc
int
add
fsubrp
sub
lcall
cmpsb
in
mov
mov
mov
sub
iret
ret
dec
dec
add
sub
aam
test
fisttps
dec
data16
mov
je
push
leave
mov
lock
ljmp
fistl
lahf
stos
jb
xchg
pop
cmpsl
pop
pop
repnz
pop
hlt
gs
jl
jns
add
inc
xchg
cmpsb
push
lds
aam
call
or
pop
sarb
andb
imull
in
inc
adc
dec
jae
xchg
cltd
nop
call
mov
lcall
cld
jmp
js
dec
lret
mov
mov
adcb
xchg
cmc
jne
hlt
xor
outsb
sahf
inc
jl
inc
or
pop
push
xchg
clc
fisubs
in
mov
mov
jae
add
popf
mov
rorl
push
aad
cmp
loop
cmpsb
in
lock
push
lods
pop
outsb
add
push
pop
mov
clc
scas
out
loopne
mov
out
mov
mov
jg
dec
aaa
stos
xor
pushl
inc
clc
mov
dec
dec
add
xchg
movd
sub
inc
nop
in
inc
or
in
lods
lcall
or
mov
add
pop
jns,pn
pop
xor
pop
arpl
dec
lea
fidivrl
lret
lods
jns
xchg
dec
les
fbstp
rcrb
lret
push
int3
es
dec
pop
in
pop
test
sahf
xchg
imul
aam
or
sbb
ficoms
or
dec
mov
cmp
push
shlb
nop
ret
pop
dec
cmc
mov
jge
xchg
inc
or
cld
jge
fcmovnbe
loop
daa
leave
shll
inc
fisubrl
xor
repnz
or
jmp
sahf
xchg
cltd
xchg
outsb
in
sbb
mov
icebp
sarl
lods
jnp
lods
cmc
scas
jae
mov
xor
add
js
add
push
sbbb
pop
mov
mov
movsb
aas
and
out
in
andb
cmp
mov
insb
shll
fwait
js
and
fiaddl
xor
mov
mov
push
pushl
or
lea
mov
push
jge
cmp
out
push
fidivrs
lret
lods
cltd
xor
xlat
mov
jne
sub
inc
imull
xchg
mov
adc
xchg
mov
and
imul
pusha
mov
lahf
stos
shll
imul
sbb
mov
mov
mul
call
jle
mov
xor
nop
scas
dec
jns
inc
adc
jg
and
mov
lret
mov
and
adc
mov
cmp
mov
cli
fwait
mov
daa
mov
es
push
mov
or
mov
movsb
xlat
outsb
add
loope
testb
push
stos
or
xchg
ljmp
insb
out
pop
xlat
xor
sbb
cwtl
and
movsb
xchg
adc
aam
loop
and
cmp
in
insl
dec
add
xchg
jge
stc
shll
xchg
les
dec
test
lcall
pop
push
sub
or
je
int
add
mov
jo
lods
pop
in
pop
in
sbb
add
sbb
inc
aam
push
repnz
jle
imul
adc
sbb
sahf
sub
int
das
ljmp
add
dec
sub
pop
cmpsb
les
cmp
jb,pn
pop
sub
sbb
rorb
jno
daa
cmpsl
loopne
fmuls
inc
mov
enter
add
mov
lret
clc
mov
test
cmpl
inc
loopne
and
aam
mov
sbb
sub
imul
fwait
insl
and
fistpl
jmp
adc
pop
out
inc
icebp
out
xchg
jbe
icebp
outsb
xor
push
pop
jno
fidivs
hlt
inc
in
ljmp
insl
in
lea
mov
push
or
adcl
clc
jp
sbb
mov
xchg
pop
or
and
and
pushf
stos
jle
and
sbb
xor
addr16
bnd
out
xchg
in
jns
into
cmp
jb
mov
xor
mov
das
pop
fadds
jl
dec
pop
movsl
shrl
sub
ja
pushw
sub
add
sbb
rol
mov
cmpsl
xor
in
adc
push
in
adc
jno
dec
add
scas
imul
stc
cmp
ror
adcl
cmp
push
push
in
xchg
in
test
adc
push
xchg
stc
loopne
xor
out
das
cmp
mov
popf
jp
iret
outsb
cld
das
xchg
push
int
xchg
js
sbb
mov
push
test
stos
mov
call
ret
fwait
andl
pop
fs
mov
sbb
cltd
rcll
lret
or
js
jne
mov
push
arpl
movsb
test
mov
imul
loopne
inc
nop
ss
sub
sti
pop
cltd
stos
pop
jge
adc
icebp
inc
std
cmp
mov
rcrl
mov
jmp
fdivl
out
xor
test
shll
dec
mov
xor
std
adc
mov
insb
fbld
repz
sbb
shl
jge
imul
repnz
jp
movsb
ljmp
mov
add
jnp
aad
adc
je
inc
ljmp
or
mov
jl
add
sti
cmp
loop
js
pusha
xlat
out
mov
loopne
and
sahf
idivl
adc
gs
push
inc
fcoml
cmp
xor
or
or
test
push
xchg
and
cmp
mov
pop
roll
les
xor
push
nop
sbb
xor
out
and
xchg
pop
and
jle
push
add
xor
inc
mov
fsubrl
stos
cwtl
or
xor
xor
out
arpl
clc
adc
adc
clc
and
pop
push
or
fnstcw
pop
adc
loop
repnz
out
cmp
xchg
jmp
lds
enter
testl
xchg
ficomps
cli
dec
popa
sub
shrl
or
sub
sbb
dec
jecxz
pop
inc
rolb
in
out
dec
mov
sbb
aam
clc
iret
mov
pop
hlt
cltd
sub
jnp
in
jns
mov
mov
or
imul
dec
enter
lahf
idivb
pop
xorb
stos
cmp
fidivs
pop
or
dec
jbe
xchg
sub
movsl
stc
popf
mov
dec
add
icebp
fwait
mov
jecxz
movsl
adc
sbb
pushf
mov
cmp
leavew
mov
fucomp
mov
mov
push
out
inc
aas
push
xchg
icebp
aaa
or
out
cmp
mov
out
mov
sahf
xchg
cmc
dec
sbbl
pushf
lods
cmp
in
pop
out
pop
or
testb
inc
push
push
push
xor
int3
push
out
std
xor
inc
lret
and
xor
stos
repz
and
ficoml
jmp
xor
or
in
mov
int
fiaddl
push
jo
or
xchg
sub
lea
add
test
je
lcall
cmp
ljmp
mov
dec
aaa
xor
stc
cmp
sub
or
stos
xchg
popf
xor
mull
mov
sahf
and
shlb
mov
push
loopne
cmp
adc
daa
push
cmpsl
mov
orl
adc
movsb
not
outsl
pop
adc
cmc
andb
pop
jns
jecxz
leave
add
sti
mov
out
loope
andb
inc
cli
mov
jne
call
push
push
push
xchg
xor
fs
sub
scas
aaa
stos
and
cmp
hlt
into
sub
icebp
cmpsb
cmp
sbb
les
cmp
cmp
pop
xchg
mov
test
xchg
icebp
aam
mov
xchg
and
inc
adc
sbb
sbb
mov
jne
jl
xor
mov
cltd
jecxz
cmp
xchg
mov
push
and
in
test
and
add
pop
aaa
mov
aad
sbb
cmp
jns
and
mov
or
scas
jnp
loope
xchg
sub
out
scas
jb
addl
xchg
push
in
mov
pop
scas
xor
mov
out
lods
clc
xchg
push
sbbl
cmp
cmp
and
dec
adc
loop
rcr
inc
inc
adc
inc
outsl
or
lret
rorl
or
mov
adc
sub
pushf
xchg
or
jbe
mov
and
add
cmpsl
push
in
mov
into
loopne
xchg
adc
data16
mov
xor
xchg
sbb
jg
xchg
push
pushf
nop
dec
adc
xchg
mov
cmpsb
cmp
insl
add
sub
mov
daa
mov
lret
std
cmp
es
mov
push
repnz
xchg
xchg
and
sbb
xor
les
addl
mov
gs
lret
mov
lcall
int
lret
fs
push
adc
je
mov
sti
xchg
fstl
cmpsb
movsl
out
stos
push
jne
mov
sub
push
fldcw
scas
sbb
cli
jne
mov
mov
dec
inc
xchg
bound
mov
pop
nop
xor
negb
fstl
xor
xchg
sub
ret
shll
shlb
and
push
in
scas
or
lods
pop
arpl
stos
sbb
mov
loope
xchg
mov
in
hlt
mov
inc
push
cltd
cmp
adc
fistpl
cli
mov
out
sub
add
inc
gs
dec
jg
pop
hlt
dec
cmp
cmpsb
jne
jnp
testl
push
xchg
xor
xor
pop
xchg
outsl
dec
add
into
outsl
jg
les
sbb
imul
in
test
add
inc
inc
js
jbe
dec
add
pop
sbbb
jo
adc
lret
jae
fstps
sub
dec
lret
xor
mov
pop
mov
mov
cwtl
das
xchg
hlt
fs
add
pop
subl
or
dec
pop
push
les
test
ror
mov
mov
inc
hlt
jo
out
aaa
sub
cmp
pop
fs
sub
pusha
xchg
add
lcall
psrad
nop
inc
jnp
jbe
imul
dec
mov
jecxz
sahf
mov
or
or
push
mov
outsb
xor
ja
add
and
mov
pushf
cmp
into
adc
cltd
xchg
loope
mov
xlat
push
in
andb
mov
dec
aaa
mov
orl
pop
and
or
push
nop
stos
dec
test
jae
mov
pop
push
jo
dec
jp
mov
inc
push
add
scas
stos
daa
lret
xor
pop
mov
enter
adc
aas
lret
ret
outsl
dec
inc
aas
jge
or
hlt
in
xchg
aam
pop
hlt
adc
jmp
into
in
mov
push
in
mov
sub
sub
mov
xchg
shll
fcompl
mov
sbb
mov
push
int3
out
mov
sub
fcoml
xchg
jge
in
sahf
xchg
jb
lds
pop
rcrb
rol
jg
xor
mov
cwtl
test
push
lret
pop
sub
test
scas
sub
repz
rcrb
lods
mov
inc
xor
jp
std
fs
jp
adc
dec
mov
dec
ja
ss
aas
popl
xchg
push
push
cld
insb
lods
cmp
mov
or
out
cmpsb
out
out
dec
jle
out
out
hlt
adc
lahf
add
mov
mov
push
jl
dec
and
cmp
push
fwait
mov
push
shl
jne
sbb
in
inc
rorl
fstps
inc
lods
std
add
pushf
inc
pusha
cmc
pushf
pop
frstor
mov
inc
in
ja
sti
pop
repnz
or
repz
dec
icebp
loope
aaa
jge
sub
es
push
insb
insb
jns
inc
scas
cmp
dec
cltd
or
jae
mov
jg
stc
or
in
leave
das
add
dec
adc
mov
stc
or
cmp
and
out
xchg
call
icebp
nop
cmp
pop
xor
and
mov
add
sub
test
jle
adc
out
mov
push
inc
ja
push
test
addr16
rcrl
insb
dec
push
sbb
sbb
mov
mov
fistpll
pop
mov
int
sub
sub
dec
shrb
add
aaa
adc
test
fidivrl
mov
sbbl
push
push
repnz
popa
pop
loopne
lds
xor
iret
lds
loopne
ss
xchg
les
int
addr16
sbb
push
popa
loopne
inc
inc
dec
cld
dec
not
xchg
scas
add
or
cmp
es
int
or
iret
cmp
lret
push
mov
leave
push
and
push
mov
mov
adc
ds
inc
push
xchg
loope
gs
fs
adc
out
sub
fidivs
insb
lea
outsb
jbe
xor
inc
int3
jecxz
xchg
push
mov
and
mov
xchg
xchg
sbb
popf
scas
dec
aaa
and
cmpsb
push
int3
xchg
bnd
lret
jb
xchg
xor
fistps
xchg
cmp
pushf
call
les
inc
popf
xlat
sub
or
movsl
in
ss
sahf
gs
popa
pop
dec
loopne
cmp
das
in
sbb
push
nop
repnz
pop
xchg
sub
rcl
jb
enter
cmpsl
scas
inc
fwait
push
insb
push
dec
push
add
xor
or
add
arpl
notb
inc
push
iret
jl
loopne
stos
push
xor
popa
jge
sti
pop
mov
mov
pop
filds
in
repz
inc
cmpsb
clc
mov
and
push
loope
mov
mov
xchg
mov
sub
lock
jg
mov
out
cld
stos
adc
into
les
mov
push
inc
dec
mov
adc
mov
cmpsb
jbe
sbb
dec
movsb
insl
jb
jne
dec
inc
in
xor
sub
aaa
rcll
dec
add
dec
mov
cmc
inc
lret
gs
pop
shll
dec
or
ja
dec
and
xchg
mov
roll
inc
mul
loop
lcall
mov
dec
add
sbb
xchg
lods
mov
clc
repz
mov
scas
ret
pop
jns
jne
ss
test
mov
mov
and
add
mov
or
sub
or
mov
mov
pop
lret
cmpsl
or
pop
mov
lahf
pop
lret
sbb
mov
sbb
pop
out
mov
shlb
test
jmp
and
mov
es
sub
push
or
ret
mov
jecxz
faddp
xchg
jno
jns
mov
mov
mov
mov
push
les
fiaddl
cmpsl
pusha
incb
mov
mov
nop
mov
popf
jnp
or
and
js
and
jns
sahf
pop
mov
sbb
mov
mov
mov
mov
or
sub
adcb
cli
test
cmp
pop
xor
cmpsb
jmp
cmp
pop
out
cs
lret
mov
mov
enter
fimuls
popa
repnz
scas
mov
ja
cltd
mov
add
inc
xchg
dec
sbb
jb
or
pop
fsubr
ds
imul
pop
sbb
in
shld
xchg
and
ds
popf
mov
dec
test
and
push
popf
or
dec
jp
into
sub
and
pop
fdivrp
mov
push
jbe
xor
loop
aad
sbb
xor
jne
push
mov
mov
fisubl
andb
es
fmuls
mov
subl
sub
mov
lods
mov
addl
mov
pusha
jmp
shl
sti
xchg
push
push
lds
mov
add
jnp
and
ret
leave
lcall
dec
push
cli
dec
xchg
push
stos
sahf
scas
mov
jno
mov
hlt
or
scas
cmpsb
shll
mov
in
and
push
cmp
insb
popf
mov
ljmp
xchg
mov
pop
push
sub
dec
cli
mov
or
mov
fwait
xor
pop
jbe
roll
mov
in
lods
dec
mov
imul
fldcw
xchg
xchg
xor
cmpsb
out
xor
bound
mov
pop
es
fidivrs
inc
mov
mov
mov
aaa
push
ficomps
aaa
push
xor
cmpsl
pop
dec
push
mov
mov
jp
jle
xor
jns
xchg
ja
push
mov
call
sbb
cmpsl
xchg
ds
adc
pop
adc
sbb
xchg
mov
pop
pop
incb
ja
jb
jns
xchg
push
jp
pop
mov
lahf
pop
fcmove
dec
cmp
pop
call
adc
mov
add
pop
sarl
test
mov
push
test
xlat
adc
sub
fisttpl
xor
nop
cmp
outsb
out
stos
aaa
out
and
cltd
pop
in
push
add
pushf
add
loope
push
aaa
int
gs
sub
pop
or
xlat
cmp
dec
arpl
jle
sbb
jp
inc
call
cwtl
lods
das
sbb
push
test
nop
dec
in
pop
and
pushf
and
pop
pushf
mov
scas
in
cmpsb
jns
leave
xor
mov
add
add
push
mov
xchg
jmp
es
sub
or
xchg
add
mov
pop
aam
pushf
push
add
sar
fs
int3
pop
adc
cmp
orl
sbb
jmp
mov
insl
add
fs
in
mov
mov
jp
testb
cwtl
das
xchg
mov
dec
or
push
add
les
in
and
push
pushf
sbb
adc
add
enter
lock
test
xor
sub
mov
lcall
sbb
dec
cmp
add
inc
push
jae
leave
movsb
je
jp
add
jecxz
pop
add
xchg
mov
mov
mov
cli
xchg
test
sbb
mov
sbb
sbbl
xor
cmp
loope
sbb
xor
or
enter
cmp
sbb
rclb
int3
fdivrs
mov
mov
inc
sbb
leave
jno
xor
or
sbb
lock
add
test
test
mov
mov
ret
roll
xor
lret
push
lods
inc
in
imull
jo
pop
fs
cmpsl
mul
fidivs
fwait
sub
mov
insb
sbb
jecxz
dec
pop
mov
insl
sub
pusha
popf
inc
sbb
loopne
inc
shl
mov
sbb
leave
and
adc
push
dec
xchg
fldenv
xchg
fcomps
lock
test
decl
test
ds
adc
outsl
mov
rcl
push
cmp
fildl
fbstp
rol
rorl
int3
xor
in
inc
lock
out
jmp
push
popf
mov
mov
flds
mov
aam
push
adcl
mov
push
sbb
mov
dec
cmp
jle
sub
push
pop
mov
pushf
outsb
xchg
adc
xchg
and
popf
pop
cld
push
sarl
sbb
in
jmp
adc
pop
push
adcb
add
xor
pop
divl
mov
jne
xor
gs
cli
in
mov
insb
xor
imul
sahf
lea
outsl
lret
push
inc
mov
das
stos
inc
pop
popa
add
mov
jmp
mov
ss
mov
sti
fidivl
dec
js
jmp
push
inc
in
cmpsl
repnz
or
jecxz
scas
sub
mov
cmp
and
insb
outsb
push
jne
nop
adc
mov
repz
cmpsb
nop
push
pop
aam
lcall
adc
and
ljmp
icebp
xor
jno
or
cmp
nop
xchg
fmuls
or
and
in
aas
xchg
cltd
sbbl
adc
adc
xor
fs
shl
cmc
lods
sbbl
inc
icebp
mov
mov
jmp
sub
hlt
call
aad
aad
insl
daa
dec
mov
add
fistpll
in
adcb
pusha
mov
adc
mov
in
push
adc
mov
sarl
sub
cmp
insl
xlat
mov
xor
outsb
push
addr16
mov
rcll
and
js
push
jmp
add
popa
adc
sub
divl
dec
cmp
cmpsl
fs
sub
into
fisttpl
pusha
lods
cmp
es
mul
xor
faddl
je
mov
xor
test
xchg
inc
in
ss
shlb
push
push
jno
insb
cmpsl
repz
dec
cli
call
call
cld
push
sbb
add
aad
repnz
aas
push
out
add
fdiv
add
adc
aad
pop
sarl
outsl
inc
push
fcompp
and
pop
fcmovbe
in
add
mov
icebp
push
mov
mov
adc
jle
push
inc
mov
mov
jno
xchg
fadds
xorb
adc
fidivrs
add
mov
add
in
das
cmp
jecxz
pop
xchg
pop
loop
hlt
test
enter
inc
sahf
test
inc
sbb
push
push
popa
jno
push
insl
lret
shrl
orb
pop
push
add
push
outsl
add
mov
cmp
loop
addr16
xchg
mov
jg
mov
loope
test
mov
xlat
mov
mov
xor
fdivs
cmp
inc
xlat
mov
or
insb
fs
dec
mov
repz
mov
stos
arpl
mov
jb
dec
loop
fs
and
imul
shlb
xor
pop
popa
sub
or
mov
popl
jno
sbb
inc
fucomp
dec
pop
mov
add
push
push
jno
arpl
fnsave
cmp
test
push
ret
jg
sub
pushf
xor
into
dec
decb
xor
push
insb
lods
mov
mov
sahf
add
sbb
mov
mov
add
xchg
packuswb
sub
fwait
xor
fnsave
call
into
or
xchg
mov
out
dec
mov
je
jmp
sub
icebp
xor
cmpsl
mov
mov
sbb
sbb
and
rolb
fs
xchg
jecxz
in
cltd
mov
xor
mov
inc
in
test
pop
mov
into
addr16
lret
das
das
push
insl
pusha
shrl
lea
out
adc
mov
xor
jmp
cmp
xor
ljmp
rcrl
sub
adc
sub
mov
and
pop
jae
bound
push
aam
xor
sahf
inc
rolb
pop
lods
push
mov
incb
insl
out
fisttps
out
insl
icebp
mov
lds
loop
push
cmp
test
loop,pt
dec
clc
jae
xor
mov
dec
push
or
aad
mov
test
dec
loopne
jo
pushf
cwtl
leave
cmpsl
scas
add
jp
xor
loope
fimuls
data16
mov
lea
sbb
lds
or
mov
xor
es
push
jns
shlb
pop
sbb
sbb
rol
and
cmp
push
xchg
or
jp
jle
decl
fwait
lods
lcall
sbb
pop
je
leave
xor
mov
jmp
pop
inc
bndstx
rorl
add
iret
and
dec
pop
lret
xor
cs
push
addr16
ret
adc
sbb
ss
or
iret
fldenv
bound
push
cwtl
out
test
subl
pop
mov
push
loop
jo
xchg
faddl
jo
fnstenv
into
ficoms
call
pop
jo
jns
pop
std
icebp
inc
shlb
dec
aam
pop
inc
in
aad
js
je
movsb
jecxz
aad
rcrb
xchg
jge
xor
add
cmp
outsl
cwtl
negl
pop
jle
sub
aaa
pop
out
insb
xchg
lcall
cmpsb
jecxz
pushf
sbb
mov
test
sub
insl
cltd
mov
jnp
ret
and
sub
outsb
mov
sub
xchg
lahf
das
and
pop
or
xchg
stos
test
movsb
mov
cmp
or
or
gs
pushf
mov
cmp
add
das
pop
insl
dec
pop
mov
call
test
adc
cmpsb
les
jae
lahf
arpl
ficoms
or
push
jo
cmp
fsubrl
testl
mov
add
les
and
pop
cmpsl
jns
inc
sbb
push
push
mov
loope
fwait
xor
fs
lret
jb
jecxz
and
lods
aas
stos
mov
adc
call
lahf
or
cmp
push
push
lret
cld
fwait
cld
scas
in
fnsave
test
pop
jnp
or
push
sub
add
cs
xchg
test
mov
aas
pusha
fnstenv
or
insb
rcll
pop
test
call
pop
lahf
data16
sbb
push
sbb
aas
stos
jno
popf
mov
sarl
addr16
das
orl
daa
outsl
jae
pop
out
outsl
clc
add
mov
ret
int
fucomi
insl
mov
lcall
xorb
cmpsb
cmpl
mov
in
les
out
lea
dec
add
shrl
ljmp
mov
push
popf
lds
mov
test
mov
ret
sbb
sbb
cs
inc
jne
ljmp
or
push
jns
dec
fs
roll
cmp
lahf
cmp
sub
xchg
pop
ljmp
cmc
inc
cld
loop
outsl
shll
pop
testb
dec
cmp
cmpb
sub
jns
adc
les
pop
cli
rclb
push
fs
insl
in
sbbb
icebp
insb
push
cld
mov
inc
cmpsb
dec
int
mov
xchg
jmp
lea
pop
and
icebp
pop
mov
nop
sub
mov
fisubl
data16
fldt
mov
jnp
lahf
xor
clc
incb
dec
js
jmp
adc
adc
dec
ss
push
fs
mov
in
adc
or
jne
xchg
daa
or
mov
fsub
les
rorb
adc
jne
ss
dec
push
cmp
push
lcall
and
and
push
xor
das
jg
movsb
es
mov
adc
pop
lahf
test
dec
xor
adc
scas
cmp
xchg
mov
in
dec
sbb
test
xchg
movsl
cmp
inc
xor
gs
shll
stos
add
popa
or
push
ljmp
popa
movsl
or
mov
cwtl
and
popf
jge
ljmp
in
sahf
xor
or
cmp
test
insb
fs
cmp
loop
inc
push
inc
cmpsl
mov
push
push
sti
cld
cwtl
test
push
stos
imul
rcll
imul
add
mov
add
jle
sarl
add
stos
test
xor
or
push
fisubl
mov
lahf
xor
pop
test
or
dec
inc
mov
push
pusha
mov
and
loop
lods
inc
mov
lods
nop
xor
ss
mov
dec
mov
jl
rep
cmp
into
dec
loop
mov
insb
jmp
jmp
cmp
add
out
inc
sbb
sub
lret
fdivl
arpl
sub
add
inc
popa
push
inc
add
mov
cmpsb
es
mov
inc
fwait
adc
inc
inc
leave
out
popf
push
test
cmpsl
je
and
iret
jno
or
je
push
insl
lds
imul
ljmp
adc
aaa
fwait
cmpsl
push
add
xchg
jb
clc
or
mov
iret
fstpl
pop
and
int3
jae
into
sub
icebp
sahf
push
dec
push
out
mov
dec
push
xchg
jl
jbe
lock
pop
mov
sbb
lock
dec
inc
lods
call
subl
je
sub
push
and
jp
xor
inc
int3
jns
jmp
or
push
xchg
dec
sbb
mov
fadds
imul
mov
clc
enter
mov
addr16
jns
jmp
or
inc
cwtl
int
cltd
ljmp
sbb
push
imul
gs
outsl
add
ret
jl
nop
dec
push
mov
daa
pusha
mov
cmpsl
stc
push
ret
loopne
cmp
js
xlat
push
pop
clc
xchg
jns
test
jo
push
loopne
imul
cs
scas
inc
outsl
mov
inc
hlt
inc
sbb
in
push
cmp
add
pop
xchg
xor
fwait
daa
or
sub
push
mov
popf
xchg
push
lods
sbb
push
rclb
jge
imul
jo
in
icebp
inc
sbb
pop
sbbb
test
push
push
es
fwait
gs
scas
loope
dec
add
sub
aam
lcall
and
inc
fmul
lods
push
cmp
push
push
xor
vunpcklps
jbe
inc
out
push
push
data16
loope
mov
xchg
pop
int3
cwtl
aaa
or
pop
xchg
mov
shll
add
shlb
andb
inc
imul
arpl
or
movsl
pop
pop
xor
scas
or
lods
imul
data16
jb
dec
nop
aad
mov
inc
xchg
and
mov
xor
enter
mov
add
out
pop
lret
xchg
cs
fs
push
and
inc
nop
xchg
ja
popa
adc
sbb
mov
xchg
stos
pop
fdivl
fsin
cwtl
cs
adc
add
add
pop
adc
inc
xor
and
mov
sub
enter
test
rcrl
push
jmp
outsb
shll
pop
and
addb
je
out
sub
into
pop
adc
imul
adcb
cli
nop
lods
xor
pop
scas
decb
xchg
dec
out
and
mov
mov
test
ds
repnz
test
in
dec
in
pop
mov
cmp
out
cli
pop
dec
repz
xchg
iret
ja
adc
xchg
adc
jmp
sbb
dec
dec
popa
xor
pop
rcl
cmc
mov
inc
and
pop
jmp
adc
push
lret
subb
out
es
xor
push
fsubs
inc
add
insl
add
xchg
jo
jae
in
sbb
push
dec
jmp
aas
outsb
fisubl
inc
or
outsl
test
in
inc
lret
mov
lea
sbbb
cwtl
dec
mov
aad
mov
call
iret
xchg
idivb
and
fwait
lahf
push
ror
or
decb
push
in
fnstsw
loopne
mov
mov
mov
mov
mov
add
insl
xor
in
hlt
or
jns
xor
mov
mov
arpl
push
leave
test
nop
lock
addr16
add
lcall
and
aam
iret
jae
leave
mov
std
cmp
pushf
cmc
faddl
pop
mov
dec
and
and
sub
push
jnp
out
lods
xor
mov
lds
imul
mull
push
lahf
bound
cmp
icebp
dec
push
mov
dec
add
lcall
in
mov
dec
fsubl
push
ret
arpl
clc
or
cmp
sbb
lds
xchg
dec
or
jbe
repz
aas
push
inc
pop
mov
lahf
ss
scas
dec
fmull
cmp
sub
mov
iret
data16
mov
hlt
fcoms
dec
call
adc
mov
lret
xorl
or
insl
jecxz
sub
in
mov
mov
popf
flds
test
pop
lret
data16
daa
test
mov
cwtl
movsb
xlat
mov
roll
xchg
push
inc
pushf
mov
cwtl
outsl
push
dec
adc
lcall
and
jg
mov
jg
push
add
in
addl
int
push
mov
in
xchg
and
and
mov
aas
fistpl
je
loope
paddsb
mov
xor
push
ljmp
loope
push
adc
add
fcomip
mov
add
or
test
cli
std
mov
sbbb
in
xchg
mov
mov
push
ss
xchg
or
mov
pop
jmp
or
je
xchg
cmp
and
adc
cmp
mov
xor
jns
cmp
or
ficompl
pop
cmpsb
or
pop
dec
gs
push
push
cmpsb
in
inc
cmp
xor
xchg
fs
std
hlt
pop
cmpsb
pop
push
sahf
jns
add
and
std
setg
jne
les
lds
jmp
sarl
pop
jge
mov
stos
data16
xor
test
sub
js,pt
es
mov
scas
fdiv
mov
dec
fisttps
push
test
jnp
cmp
andl
icebp
mov
stos
push
mov
cmp
add
dec
fistl
in
fsubr
add
insl
add
jno
les
loope
das
lea
inc
mov
fmul
lahf
mov
mov
mov
movsb
adc
inc
int
adc
ja
adc
ljmp
and
cs
add
scas
xchg
add
inc
inc
orb
rorb
inc
fcmovnu
repz
push
mov
ret
lret
mov
or
jecxz,pn
paddusb
jmp
sub
push
xchg
xor
shrb
cwtl
popa
test
xchg
stos
adc
sbb
mov
jge
xlat
arpl
pop
rcll
dec
stc
xchg
push
imul
jnp
dec
mov
cmp
xor
or
pop
sbb
das
cmp
mov
jmp
loop
or
add
or
rcrl
or
sub
and
aad
inc
add
loope
ret
insl
movsb
jb
popa
call
testl
insb
lcall
loop
xchg
jb
push
movsb
mov
pushf
imul
jmp
inc
aas
jecxz
jo
mov
xor
out
xchg
cmpsl
in
and
and
inc
lss
inc
arpl
imul
lahf
lods
push
in
in
pop
dec
cmp
jecxz
ljmp
adc
shl
pop
xchg
test
lods
je
pop
cmpsb
into
inc
push
in
and
stos
or
add
inc
push
cli
adc
jmp
pop
xor
aam
adc
int
jl
and
dec
jb
jle
jl
xchg
scas
shrb
add
jbe
jnp
lret
sub
pop
fnstsw
xchg
cmp
jge
inc
push
lahf
cmp
das
xor
jb
dec
test
inc
aam
jne
dec
loopne
mov
movl
popl
leave
jg
stos
mov
andl
lds
outsb
jge
fcmovnu
shrb
imul
in
push
adc
add
inc
adc
dec
fists
jbe
test
fimuls
test
sub
pop
fadds
lret
rcl
and
inc
ficoml
xor
je
adc
sub
out
xchg
mov
ret
ss
daa
lret
in
mov
cltd
push
call
xor
lcall
fstpl
out
dec
in
fimull
or
inc
or
bound
pop
dec
inc
gs
jl
dec
scas
sbb
sbb
mov
jp
shr
sub
sbb
or
div
mov
sub
test
sbb
mov
cltd
cmpsl
fs
mov
popa
push
addr16
push
sbb
xorl
iret
mov
xchg
xor
mov
jnp
xchg
pusha
push
push
cltd
cmp
sub
adc
arpl
xor
pop
addr16
cld
shr
je
mov
sub
jecxz
jo
or
adcl
insb
adc
stos
sub
jle
jge
aam
sub
inc
scas
ret
ret
jnp
adcl
cwtl
enter
test
aas
lock
movsl
fnsave
pop
notb
and
std
mov
adc
inc
int
xor
sub
push
mov
xlat
stos
dec
loopne
ds
add
push
hlt
fsubl
mov
aam
mov
in
lea
or
imull
stc
xchg
test
in
pushf
into
fiadds
repz
mov
or
jns
xor
sbb
ja
dec
cmp
loope
adc
lods
mov
stos
daa
sub
sub
rcrb
insb
mov
fwait
xor
xchg
into
orb
mov
cs
in
pop
dec
xchg
je
shr
adc
mov
into
aaa
and
repnz
cli
mov
hlt
pop
cmp
jae
dec
inc
fisttps
add
mov
lods
into
enter
mov
mov
mov
ljmp
xchg
ja
ror
fadd
bound
popl
adc
and
and
in
cmpsb
pop
mov
int
push
jge
addr16
ficompl
mov
insl
cmp
dec
fstl
mov
push
add
xlat
cs
mov
imul
pop
xchg
in
inc
push
xor
jle
daa
mov
fisubs
xor
jb
pop
inc
ja
nop
fdivrs
lds
dec
pop
push
stos
pop
daa
es
js
ds
call
push
cmp
lcall
xchg
dec
mov
and
xchg
jae
mov
out
xor
and
sub
mov
cmp
pop
xchg
and
push
cmovno
cli
or
not
insl
into
shr
push
push
lods
addr16
test
push
out
jnp
cmp
call
cmp
test
shll
fcomps
xchg
jl
jge
and
lds
js
adc
add
lahf
xchg
push
mov
or
leave
adc
push
insb
test
pop
mov
ja
stos
test
icebp
inc
add
cmpsl
inc
sub
leave
fldenv
adc
mov
dec
push
out
lret
add
ds
in
jne
sbb
fbstp
pushf
enter
add
dec
jo
dec
adc
jne
xorb
iret
sbb
sub
mov
outsl
aad
jge
adc
jge
mov
mov
or
pop
hlt
out
jns
shrb
inc
add
lods
xor
std
or
ds
xchg
dec
fldl
mov
sbb
adc
jno
aaa
xchg
add
xchg
inc
or
lock
lods
test
cmpsb
cmp
loop
fidivl
sub
or
dec
dec
shl
test
movsl
and
dec
pop
sub
lods
jmp
fsts
sub
sub
push
orb
jl
lock
jno
and
add
in
sub
pop
inc
mov
fiaddl
jbe,pt
int
and
lock
addr16
pop
dec
push
insl
sti
scas
pop
out
push
and
and
jo
je
test
xor
int3
fisubrs
stos
or
or
scas
cmc
dec
pushf
loopne
xchg
sar
xchg
add
mov
sbb
jae
in
incl
sbb
inc
insl
xchg
lahf
arpl
out
sbb
dec
mov
or
mov
iret
xor
add
sbb
mov
pop
rolb
add
pusha
clc
and
leave
inc
cli
adc
push
fsubrl
scas
call
int
mov
xchg
inc
jno
mov
mov
es
sbb
in
and
pop
mov
std
out
ret
mov
rcr
mov
mov
ret
in
jecxz
or
push
or
sti
pop
das
mov
lea
aas
pop
lods
test
mov
out
scas
cltd
out
cmp
push
cmp
into
mov
gs
daa
dec
popa
pop
int
shl
and
js
or
xchg
cmp
sub
mov
lret
adc
cmp
sahf
icebp
dec
sar
fwait
push
iret
lret
dec
pop
test
mov
mov
shr
xchg
nop
test
inc
xor
sbb
lret
jb
adc
fmuls
xchg
jp
push
adc
fcompl
fcmovnbe
shll
ret
inc
and
jmp
and
pop
dec
pushl
gs
repz
in
shrb
push
add
mov
ret
outsb
call
xchg
add
push
lods
sbb
adc
cmp
sbbb
pop
test
int
jns
shr
je
lods
popa
lock
jecxz
mov
int
dec
fpatan
jnp
and
popa
xor
icebp
adc
aad
cmp
mov
lcall
mov
loope
cwtl
and
shll
push
push
es
outsb
add
fldcw
loope
xchg
lahf
xor
lret
stc
pop
mov
dec
push
cmp
sub
and
nop
push
xchg
sbb
mov
dec
mov
push
xor
xchg
sub
fbstp
mov
in
jno
into
dec
fiadds
add
in
xchg
repz
mov
sbb
or
xor
leave
xor
add
das
es
add
xor
push
rcll
xor
sbb
xor
subb
adc
mov
bound
mov
les
fstl
and
loop
cli
sarl
add
sarl
sbb
inc
arpl
dec
mov
push
xor
xchg
jle
shr
out
pop
inc
xchg
fsts
pop
popf
dec
pop
iret
and
push
jo
xchg
jae
lcall
add
mov
nop
and
in
jecxz
hlt
in
enter
xchg
xlat
dec
dec
pop
mov
movsl
ret
daa
nop
fstpl
mov
fisubrl
mov
xor
xor
push
add
hlt
cmp
jnp
jecxz
cmp
add
push
or
lods
push
sub
loopne
jno
push
in
xchg
sarb
xchg
sub
pop
lea
cmpsb
into
push
mov
cmp
sub
je
lret
xchg
push
in
int3
ficoms
dec
or
jae
add
push
add
push
inc
and
lea
jecxz
dec
out
gs
stos
lods
cmp
cmpl
mov
cwtl
icebp
iret
insb
int
xor
inc
lcall
and
jb
shll
inc
mov
repz
push
sbb
int3
fdivrs
inc
popa
adc
and
xor
lods
ljmp
es
mov
pop
sub
in
jo
inc
jmp
jmp
cli
push
shr
sbb
or
sbb
and
push
xchg
lods
pop
cmp
addl
fbld
mov
ds
pop
shll
mov
adc
js
mov
movsl
cld
push
xlat
mov
ljmp
popf
hlt
into
cmp
or
scas
sahf
stos
in
add
jge
fs
out
xchg
pop
lea
cmpsb
push
dec
lret
pop
out
sub
imul
testb
dec
sub
test
pusha
daa
lock
push
xor
out
mov
mull
ficompl
sahf
dec
mov
std
sbb
and
dec
rep
cmp
in
dec
dec
inc
push
dec
mov
bound
mov
adc
pop
or
lock
jo
adc
lret
adc
jge
pop
xchg
mov
je
loop
pop
sahf
xor
cltd
push
mov
mov
jnp
push
ss
das
or
and
mov
xor
inc
inc
inc
mov
inc
fsubrs
inc
ds
mov
jmp
push
imul
in
shl
xor
test
xor
les
popl
cmpsl
push
orb
mov
cmp
and
fs
jmp
int
dec
push
dec
and
and
add
inc
sub
push
mov
imul
shlb
jne
inc
jno
mov
adc
nop
pop
cmp
cli
rcrl
add
jnp
adc
loope
xor
scas
fcomps
xor
pop
movsl
fpatan
push
rep
xchg
stos
mov
in
aas
inc
test
cli
pusha
into
data16
dec
xorb
lods
popa
or
rorl
jle
call
jmp
dec
inc
jne
int3
stos
out
leave
pusha
and
lods
in
adc
inc
inc
ds
jns
fistpll
mov
dec
shr
inc
mov
repz
inc
lock
push
pop
mov
fucomi
cs
nop
adc
addr16
shlb
arpl
add
std
nop
enter
aad
movzwl
jmp
out
mov
movsb
test
xchg
outsl
mov
int
cmpsl
inc
rclb
push
imul
cmp
pushf
cli
jge
outsl
aaa
fsubs
adc
fstps
xor
ret
sbb
popf
xchg
jno
ja
pop
rcrb
dec
pop
sbb
cmp
dec
jecxz
out
mov
xchg
lods
cli
adc
fisttpl
std
xchg
loop
hlt
addr16
mov
fcmovbe
sbb
sahf
rcl
inc
xchg
mov
dec
gs
push
call
int3
pop
xorb
and
das
jns
rcr
andb
mov
jmp
cli
or
dec
pop
movsl
xchg
clc
cld
popf
outsb
sbb
test
adc
gs
jae
and
mov
aam
mov
sub
into
add
out
push
shl
dec
cli
push
cmc
cmpsl
push
mov
push
stc
or
mov
int3
lret
push
fidivs
rorb
xchg
and
mov
and
repz
dec
mov
cmp
xchg
xor
inc
or
rol
pop
sub
mov
aaa
jmp
jp
mov
and
adcb
xchg
xchg
inc
cmp
lret
mov
mov
lret
cmpsl
imul
xor
or
jle
dec
loopne
mov
jnp
jl
pusha
testl
das
adcl
push
inc
mov
je
addr16
shrl
adc
sub
and
movsb
fisubs
test
jnp
popf
arpl
popf
sbb
mov
push
mov
cmp
pusha
sub
mov
xlat
push
mov
push
mov
outsb
out
gs
xor
cmp
xchg
call
movb
dec
ret
mov
mov
loop
arpl
fcompl
mov
stos
jo
xchg
push
cmp
xchg
sub
xor
push
call
xchg
mov
mov
fnstsw
shll
mov
call
push
pop
stos
xchg
das
adc
in
inc
xchg
jb
add
cld
cltd
add
lret
pop
mov
rol
jbe
sub
mov
nop
fstpt
and
sbb
rol
rcrb
sub
cmpsl
das
out
push
jns
popf
das
jg
in
mov
and
push
ds
push
adc
hlt
push
sub
jl
sub
test
test
pop
fyl2xp1
or
sub
negb
shr
xchg
xor
push
jmp
rol
push
mov
shlb
jnp
cmp
jnp
sbb
mov
cmp
lea
dec
movsb
mov
xchg
scas
fbld
ss
add
lds
in
rorl
adc
iret
xor
adc
popf
and
fwait
outsb
or
dec
shrl
cmc
pop
in
lret
cli
test
clc
xor
mov
imul
ss
xchg
int
mov
hlt
leave
mov
movsl
adc
jae
ficoml
loopne
iret
jmpw
in
jne
in
std
loop
das
cmp
xchg
jb
dec
fidivrs
js
lret
and
pop
out
pop
jbe
into
les
sub
jnp
les
dec
jp
add
push
adc
push
push
addr16
xchg
test
and
sub
xchg
in
cmp
imul
pop
das
mov
mov
and
in
pop
ljmp
jno
mov
mov
xor
push
lahf
mov
inc
mov
subl
subb
and
mov
shll
fidivrs
das
mov
mov
out
enter
std
jmp
lahf
mull
setl
dec
stos
add
sbb
les
push
jge
mov
cli
mov
sbb
inc
outsb
movsl
jg
mov
or
stos
loope
lock
pop
je
clc
mov
mov
jmp
sti
mov
pop
inc
test
dec
jb
sarl
ror
and
lock
cmp
ss
xchg
pop
jae
cmp
lret
bound
imul
jo
dec
rcrl
rorl
repnz
xchg
pop
in
jns
or
js
xchg
fmull
in
and
js
in
or
jnp
pop
dec
jecxz
pop
fstpt
test
mov
fidivrl
outsb
push
out
icebp
cmpsb
mov
or
xor
mov
es
xor
mov
aas
add
cli
and
push
ds
ljmp
inc
jp
sbb
push
or
sub
mov
inc
or
pop
push
stc
lock
jmp
cmpsl
xchg
and
test
xlat
adc
xchg
xchg
and
jp
pop
cld
sbb
sbb
dec
data16
jnp
inc
sub
sub
jg
test
test
xchg
cmp
sub
cli
pop
inc
lock
jmp
into
dec
add
push
push
test
adc
add
jmp
rorb
or
mov
mov
and
mov
sub
adc
scas
fsts
inc
mov
pop
cmp
repz
jmp
rcrb
pop
push
ljmp
mov
or
xchg
rcll
mov
or
dec
imul
xchg
push
stc
orl
dec
and
sar
add
stos
jecxz
and
cmpsl
push
cmp
repz
xchg
scas
pop
push
push
cwtl
sti
or
add
cmpsb
sub
shrl
sbb
mov
jbe
lods
aad
dec
and
cmp
fucomip
pop
aaa
data16
push
inc
repz
and
clc
mov
pop
orb
popa
and
or
and
int3
jle
gs
push
movsl
push
cwtl
and
mov
sti
push
repnz
adc
or
sub
sbb
mov
add
stos
pop
sbb
gs
pop
adc
xor
add
push
das
stc
inc
xlat
sub
sub
arpl
sbb
mov
sahf
and
cltd
cmp
ss
shl
mov
int3
cmpsl
out
jl
lods
lods
cltd
add
test
in
xor
outsb
ss
sbb
dec
lret
outsb
in
data16
push
clc
pop
xor
test
push
scas
pop
jno
shrl
push
mov
bound
repz
scas
leave
inc
int3
xor
adc
and
out
pushf
jecxz
or
cmp
pop
jbe
jns
fnstenv
xchg
iret
inc
std
mull
in
and
test
xchg
or
loope
insb
pop
outsb
xchg
mov
lock
fwait
or
xchg
addr16
push
imul
ss
movsl
in
push
sbb
mov
push
call
addl
adc
sub
mov
mov
ja
sub
push
pop
cmpl
jne
adc
sub
mov
mov
pop
push
popf
imull
in
cmp
xchg
cmp
push
enter
add
rep
add
mov
and
dec
sub
lret
cmp
repnz
xor
addl
out
dec
add
sub
fildl
dec
mov
or
outsb
std
xchg
mov
pusha
cmc
insl
mov
fbld
test
mov
roll
repz
lret
pop
bnd
testl
mov
outsl
ja
xchg
rcrl
sarb
push
mov
and
jne
ret
lock
je
mov
pop
inc
test
stos
mov
xchg
sub
bound
mov
cmp
daa
cli
push
push
cltd
test
xchg
dec
or
aaa
or
adc
mov
sub
fisttpl
inc
sbb
jl
pop
xor
addr16
push
sahf
xchg
dec
adc
push
jl
and
cmp
jle
ja
inc
out
aad
jno
xchg
pop
jbe
ret
orl
cmpsl
adc
push
ss
push
add
mov
or
in
dec
das
jcxz
jne
std
enter
pop
sbb
call
or
xorb
in
xor
push
rcll
mov
push
xchg
push
xchg
mov
sub
cmpsl
sbb
aas
add
popf
xor
fnstsw
push
adc
leave
ljmp
lods
gs
in
add
sub
enter
add
mov
mov
lret
pop
cmp
sbb
fsts
rclb
or
repz
or
xchg
cmp
outsb
stos
mov
and
sub
and
pop
xchg
test
and
mov
jl
int3
adc
nop
nop
data16
lret
ss
into
push
cmpsb
sbb
stos
nop
sbb
iret
push
ljmp
notb
roll
xor
mov
push
or
nop
aad
aam
mov
xlat
jecxz
imul
jp
push
das
fstl
sub
ret
mov
stos
shll
mov
mov
jne
enter
mov
int
jnp
call
or
jbe
ljmp
adcl
xchg
gs
outsb
inc
mov
into
xchg
add
ja
sahf
mov
ss
xchg
icebp
pushf
push
sbb
push
lcall
testb
dec
fucom
cmp
xchg
sub
dec
pop
clc
into
mov
inc
lods
mov
xor
jns
cmp
cwtl
test
es
ja
sub
add
push
mov
orb
push
mov
xor
decl
call
in
cwtl
shrb
cs
repnz
xor
sbb
loop
lcall
movsb
push
clc
bound
mov
xor
test
mov
xlat
jo
mov
arpl
sbb
mov
push
pop
or
add
jp
xor
jmp
xor
jno
mov
scas
inc
sub
jmp
hlt
mov
mov
or
and
adc
mov
nop
mov
scas
dec
and
int
aam
push
push
das
rcr
daa
mov
and
mov
aas
jne
negl
mov
or
in
cwtl
aas
in
cmp
sbb
fwait
addr16
fmulp
mov
popa
clc
xchg
adc
in
jle
rcrb
mov
stc
mov
pop
cld
inc
scas
test
cmp
push
push
xchg
insb
mov
mov
xor
bound
cmp
ret
ljmp
and
push
aas
lods
or
and
sti
ret
jae
sub
and
pop
in
add
jmp
in
cld
popf
dec
stc
and
cmp
enter
or
fldt
adcb
mov
ror
fisubs
jne
jns
jns
stos
mov
jae
xchg
shr
adc
sbb
jp
imulb
cmp
repz
cmpsl
or
jb
and
sub
xchg
lret
or
dec
pop
xchg
xor
jb
aam
call
mov
jle
xor
stc
lahf
and
dec
pop
xchg
mov
insl
lret
outsb
cmpl
mov
sub
xchg
hlt
aaa
mov
testl
and
sbb
outsl
loopne
notb
cmpsb
xlat
add
xchg
push
adc
mov
das
mov
lret
loopne
jmp
pushf
sbb
xchg
xchg
sbb
sub
push
clc
mov
mov
sub
cld
leave
test
mov
jno
sbb
jae
inc
pop
ret
insl
out
and
pop
push
adc
inc
xlat
xchg
ljmp
jno
push
sbb
fildll
hlt
sbb
in
test
xor
movsl
stos
je
adc
mov
repz
inc
pop
movsl
sub
pop
inc
cli
es
es
loope
adc
popa
aad
mov
cmc
ss
jnp
xchg
or
pop
fdivr
cltd
or
das
cmp
repnz
sub
push
pop
inc
inc
mov
int3
xor
repnz
fs
shll
test
fildl
xchg
push
int
pop
mov
push
jmp
sti
fsubrp
mov
push
jbe
inc
jecxz
and
push
mov
cwtl
xchg
jns
lret
dec
pop
push
lret
xchg
sbb
icebp
outsb
les
das
lock
cmp
dec
mov
pop
and
imul
add
pop
jne
lea
jge
lods
dec
lahf
mov
out
jle
jo
jno
cmc
mov
or
in
stc
mov
sbb
add
mov
addr16
fs
fldcw
mov
movsl
add
add
into
test
lods
push
lcall
ja
or
adc
pop
mov
and
iret
cld
mov
into
jmp
jecxz
mov
fbstp
movsl
sbb
sbb
dec
stos
xchg
sub
push
mov
add
pop
xor
sahf
and
add
inc
popf
adc
stos
lea
enter
or
out
push
or
mov
lods
addr16
inc
push
cmpsl
mov
jae
xchg
mov
jecxz
test
add
mov
icebp
insb
idivl
pop
cmp
iret
fucom
and
push
xchg
call
fbstp
xchg
xor
fs
addr16
push
les
xor
subl
jo
inc
jecxz
imul
xchg
sub
out
mov
notb
jns
call
in
lahf
mov
fisubrs
lret
jle
inc
fsubrl
inc
sbbb
es
xor
aas
dec
push
leave
subb
add
mov
pop
sbb
sysexit
sar
cld
or
push
out
daa
or
lods
cmpl
add
test
lret
jne
push
loope
mov
pop
cmp
scas
mov
dec
sarl
scas
pop
sahf
fbld
cmpsl
aas
arpl
inc
in
xor
jecxz
daa
imul
xchg
mov
cmpb
add
lret
jo
sbb
mov
in
lds
mov
aas
out
sub
lret
xor
jbe
mov
lret
mov
mov
addr16
xchg
mov
jg
mov
xor
mov
sbb
push
imul
mov
pusha
sbb
nop
cli
push
lds
push
jp
mov
or
jecxz
ret
mov
xchg
and
and
out
cld
dec
xlat
pop
xor
jmp
mov
hlt
sub
xchg
inc
jp
cmp
insb
sahf
mov
or
jae
ret
mov
mov
add
gs
push
pushf
hlt
outsl
jnp
or
ds
inc
call
sahf
aas
orb
pop
xchg
testb
sti
pushf
popa
jae
inc
mov
xchg
push
lret
scas
cmp
mov
pop
lret
shrd
pop
push
jbe
push
dec
xor
xchg
outsb
inc
dec
es
sbb
shrb
es
mov
outsl
cmp
mov
shrl
sub
call
adc
aas
mov
mov
and
mov
loop
cmc
dec
mov
jnp
and
lcall
adc
push
lret
scas
mov
pushf
das
pop
push
sub
pop
fsubrl
fldcw
xchg
mov
dec
push
push
cmp
cmp
or
fisubrs
scas
sbb
push
insl
int3
jecxz
lcall
sub
mov
mov
jae
xlat
xchg
or
pop
lahf
cltd
in
cwtl
in
cmpsb
jl
mov
adc
into
insb
lret
push
dec
lods
xchg
or
pop
daa
push
std
subl
pusha
fistpl
xor
loopne
mov
push
outsl
jge
ds
or
cmp
cmp
and
inc
or
sub
fyl2x
insb
out
cmp
popw
cli
inc
inc
and
mov
clc
movsl
xchg
mov
insb
js
pop
dec
and
shll
rol
mov
out
mov
hlt
daa
out
adc
hlt
outsb
jge
iret
std
xchg
je
loope
push
mov
std
in
jmp
xchg
push
scas
aad
pop
xor
sub
mov
shrl
sti
jp
cmpsb
shl
outsb
imulb
jle
clc
outsl
jmp
mov
int
popf
push
add
pushf
pushf
jp
in
lret
dec
inc
cmpsl
push
ljmp
lock
in
icebp
mov
add
jp
stc
jo
insb
xorb
testl
pushf
pop
push
dec
addr16
loope
mov
gs
xchg
xchg
push
pop
test
jg
jb
sti
sbb
and
mov
clc
or
mov
sub
test
lods
leave
inc
stos
popa
dec
inc
std
mov
outsl
mov
sbb
cmp
test
inc
xchg
pop
push
addr16
cltd
insb
cmpsl
push
xor
ret
xchg
cmc
insl
jge
ret
daa
adc
in
lret
mov
scas
xor
jmp
ljmp
ret
pop
mov
inc
push
cmp
jne
clc
cmpsb
scas
push
or
lcall
in
in
adc
in
aam
mov
das
add
cmp
popa
xor
iret
add
jmp
in
or
jnp
lds
xchg
inc
add
and
xchg
mov
inc
into
add
cmp
xor
dec
mov
je
popa
fwait
xor
loop
jg
test
cmp
std
icebp
mov
test
outsl
and
les
mov
js
jecxz
and
push
inc
scas
push
popl
cltd
stos
shll
inc
cmpsl
cmp
dec
or
ds
mov
pop
sbb
pusha
test
loope,pt
jo
mov
lea
xchg
mov
mov
aaa
adc
push
adc
in
jno
jg
mov
fstps
ffree
lods
inc
bound
in
sti
pop
stc
insb
movsb
push
pop
loopne
xor
push
and
xchg
aaa
add
cli
in
fiaddl
adc
cmpsl
lock
mov
sbb
fwait
jnp
movsb
js
stos
mov
cltd
mov
data16
rol
push
add
add
scas
add
dec
add
pop
xor
cwtl
mov
lahf
adc
dec
nop
aaa
daa
mov
fsubs
leave
fmuls
dec
outsl
clc
jg
outsb
sub
pop
sarl
mov
dec
fbstp
xchg
xlat
xchg
inc
data16
je
inc
insl
imul
hlt
mov
adc
dec
cmp
mov
lock
pop
xor
je
cmp
fsubrs
adc
inc
aam
inc
xchg
fwait
xor
in
jecxz
push
mov
mov
push
pop
out
jnp
sbb
inc
mov
shr
dec
fsts
or
mov
mov
ds
test
mov
je
mov
cmp
ja
mov
mov
adc
push
or
push
mov
pop
push
mov
call
cmp
mov
jb
cmp
jle
sbb
bnd
insb
in
add
inc
sbb
and
fs
xor
or
dec
mov
xchg
cmp
pop
lock
popf
fwait
scas
into
pop
icebp
push
add
repnz
and
in
stos
mov
scas
scas
lcall
xlat
adc
mov
subb
cmpsb
mov
cmpsb
add
rol
lret
dec
lds
in
and
and
pop
xor
cltd
pop
fimull
push
cmpsb
pop
jo
xor
jg
movsl
jle
dec
les
add
in
ret
sub
insl
les
nop
push
inc
dec
xor
push
popa
icebp
adc
repnz
xor
mov
push
or
mov
les
cmp
sub
cmc
inc
scas
es
repnz
sub
icebp
and
inc
xchg
popf
xchg
mov
mov
mov
xchg
mov
out
test
ret
insl
dec
bound
lret
out
les
dec
enter
push
rcll
stos
iret
xchg
dec
aaa
sub
cs
stc
imul
inc
mov
rcrb
xor
js
addr16
mov
add
cmp
push
out
push
mov
jmp
jle
push
aas
movsl
lahf
dec
movsl
mov
push
sub
or
mov
lret
mov
lds
pop
and
xchg
enter
add
pop
in
xor
aam
addb
jg
mov
stc
and
add
mov
sub
insl
dec
hlt
aas
movsb
adc
es
push
fwait
pushl
adc
ds
add
add
dec
out
inc
jmp
andb
pop
lods
cmp
psubsb
mov
and
push
ja
scas
test
xchg
adcl
push
jnp
and
test
int3
xor
mov
fsubl
mov
add
lods
sbb
lea
lods
dec
std
xchg
aas
mov
sbb
jno
fldenv
dec
jbe
cmp
ljmp
jge
fisttps
out
xchg
pop
cld
jo
ljmp
dec
xor
fldcw
loop
mov
and
sarb
out
lcall
mov
xchg
adc
pop
mov
pop
insl
scas
xlat
add
daa
sub
cmp
jmp
icebp
dec
push
push
xchg
add
xchg
iret
and
xchg
xor
std
mov
push
adc
in
xor
aam
mov
or
popf
out
xchg
or
inc
movsl
insb
pop
fsubs
and
cwtl
pusha
pop
mov
adc
idivl
ja
jge
jno
dec
jns
xchg
and
aaa
and
push
jle
les
and
mov
rolb
cmp
out
leave
push
cltd
repz
in
mov
push
adc
and
outsl
pushf
add
mov
rcrb
mov
adc
clc
sarb
and
fistl
dec
lds
fwait
xor
popa
jmp
cmpsb
std
push
movsb
ror
ret
cmp
test
rcl
outsb
enter
je
mov
jle
dec
mov
mov
shll
and
fmulp
fdivrp
rclb
cmp
inc
lcall
out
addr16
adc
flds
xchg
push
rcl
dec
xor
mul
jnp
xor
mov
in
test
push
lods
add
lret
movsl
je
jbe
jnp
adc
adc
divb
int3
faddp
inc
mov
push
notl
orb
or
mov
arpl
into
push
out
push
sbb
shlb
xchg
adc
popl
sbb
sahf
cmp
dec
jne
jno
pusha
jb
xlat
mov
inc
fwait
xor
adc
mov
negb
mov
daa
jo
jge
mov
shl
ret
ret
fnstcw
and
dec
test
mov
mov
mov
push
dec
mov
movsl
sbb
pop
rol
and
sti
ret
push
leave
int
mov
inc
push
mov
cmp
xchg
inc
cltd
sub
rcrb
mov
nop
sbb
testl
xor
pusha
push
inc
cmp
and
ret
pop
je
xchg
xchg
xchg
inc
pop
or
jmp
loopne
xor
mov
mov
sub
sahf
popf
xchg
cmp
popl
mov
add
rclb
xchg
pop
mov
lods
xor
in
popa
adcl
adc
push
je
mov
or
push
cli
cmpsb
in
add
ja
add
push
cmp
sahf
int3
jbe
icebp
push
into
sbb
inc
xchg
cmp
lods
cmp
mov
and
mov
rorl
mov
iret
sbb
mov
push
jl
lock
pop
adc
je
pop
adc
stos
imul
daa
repz
cmp
xor
fcoms
push
xchg
out
shr
and
cld
sub
push
movsl
nop
pop
and
shrb
test
popa
lock
push
call
test
hlt
aam
cltd
lret
lret
mov
pop
inc
cmp
stos
jp
aas
in
mov
call
xor
hlt
sbb
push
cs
scas
mov
in
push
and
cmp
adc
pop
dec
lret
cld
mov
xor
pop
ffree
rcll
dec
lds
addb
dec
cli
adc
mov
and
out
push
cmp
pusha
push
outsl
jmp
sbbl
mov
mov
cwtl
sbb
out
mov
fwait
ds
sub
aad
sbb
xchg
dec
pop
sar
test
xor
push
test
in
imul
inc
sbb
addl
mov
inc
lds
xchg
dec
cmpsl
clc
jle
mov
popl
inc
mov
les
mov
dec
js
xchg
int
rcrb
cmpsl
push
test
js
fnstsw
lret
call
cmc
jns
adc
push
lret
andl
dec
stc
fwait
daa
scas
dec
xor
sti
or
and
push
cmp
xor
push
sub
in
and
aam
ljmp
add
inc
pop
in
jle
mov
mov
fucomp
out
mov
in
sti
and
mov
orb
in
sub
lock
call
iret
subb
sbb
and
pop
jmp
dec
fdivp
loope
sbb
cli
jno
mov
rorl
fidivrl
lods
into
push
add
pop
add
jp
sar
call
mov
cwtl
aaa
leave
nop
mov
dec
in
hlt
dec
gs
adc
pop
sub
nop
adc
inc
int3
cwtl
icebp
test
push
enter
adc
es
add
cli
shrb
dec
pop
jo
dec
out
mov
cli
into
js
mov
xchg
cmc
adc
xor
cmp
cltd
mov
mov
daa
rolb
xor
scas
lock
mov
jmp
sub
mov
arpl
std
pop
adc
mov
push
vpaddusw
or
popf
sub
jns
call
ja
jecxz
ljmp
shlb
mov
aas
cmpl
sub
aad
lcall
fistpll
fnstenv
dec
mov
push
jmp
push
jmp
adc
jno
xchg
iret
jp
add
in
data16
push
mov
ds
jns
pop
sub
sub
sbb
fmull
jl
fisubrs
stos
xorb
bound
insb
or
cmp
sti
or
sti
shrl
testl
push
aad
flds
mov
arpl
pusha
or
outsl
sbb
sub
popf
jbe
push
adc
fldenv
test
hlt
bound
mov
mov
sbb
lahf
inc
pop
push
in
enter
mov
nop
fidivrl
or
dec
xchg
popf
jmp
ja
jnp
fld
sahf
jbe
out
jp
xor
test
std
cmp
imul
sub
mov
js
xor
xchg
mov
aad
in
outsl
les
mulb
xor
pop
jmp
add
hlt
adc
adc
fsubrl
lahf
pushf
mov
xor
movsb
aam
outsl
cmc
xor
sub
pop
jne
add
xchg
js
jns
cmpsb
sbb
pop
cmp
dec
scas
adc
pop
imul
cwtl
jle
mov
push
icebp
push
push
dec
loope
xchg
cld
movsb
dec
ss
xorl
sub
add
icebp
lods
push
mov
scas
jmp
incl
cwtl
das
aas
inc
add
pop
fimull
pop
sub
sarb
mov
sub
mov
fsub
shl
mov
call
dec
int
repnz
lods
sbbb
push
dec
sbb
les
daa
sbb
adc
inc
imul
test
mov
xor
pop
cmp
lods
mov
mov
pop
stos
sbbb
fs
xor
mov
sbb
in
lds
int3
mov
sahf
test
jb
setbe
mov
pusha
repnz
lods
sbbl
xor
inc
add
inc
fnstsw
int
jne
push
sub
lret
insb
jmp
mov
addr16
insl
adc
data16
inc
in
push
sub
ds
mov
fnsave
adc
pop
out
mov
xor
jne
and
mov
dec
stos
mov
mov
sub
cmp
pop
dec
out
inc
adc
out
mov
mov
pop
imul
cmp
add
loope
jno
aas
pop
ret
in
mov
mov
or
popf
pop
int
call
ja
fisubrl
insl
sub
pop
loopne
push
popf
and
ret
xor
jne
mov
rcll
fstpt
mov
mov
mov
inc
push
iret
sbb
jne
inc
fnstsw
pop
js
fwait
pop
jno
lret
sub
mov
push
or
lea
sub
cmc
insl
jg
cld
mov
pop
cmpsl
cmp
insb
rol
sbb
mov
jle
loope
or
cld
jp
test
ja
dec
mov
sub
rorb
int3
mov
xlat
mov
jge
sbb
scas
sub
mov
test
add
mov
std
stos
mov
int
insl
sub
jbe
lea
int3
or
add
mov
rcrl
cs
daa
inc
dec
jp
mov
pop
push
adc
cmpsb
and
adc
sarl
cmpsl
es
fwait
dec
pop
dec
lret
jg
lret
xor
notl
repnz
pop
jecxz
lods
mov
jne
sub
jns
pushf
test
lcall
or
mov
and
test
fsubrp
js
xchg
push
js
sub
pop
add
stos
pop
push
jle
jp
or
nop
cmp
add
fmul
and
push
sbb
xor
ja
xchg
mov
pop
aaa
pop
pushf
sbb
mov
dec
js
pusha
ret
icebp
and
fcoms
mov
fstl
xorl
int
test
jbe
outsl
push
lea
loop
hlt
jbe
dec
jb
in
sbb
dec
mov
mov
add
js
mov
sbb
xchg
xorl
ret
xor
ja
adc
fisubrl
xor
cmp
jecxz
rorl
sarb
xlat
mov
ja
ficomps
xor
xchg
js
cmp
iret
flds
dec
pop
pop
inc
xor
cld
jbe
jbe
int3
mov
test
dec
cmp
lahf
dec
mov
xchg
fisubl
cltd
std
adc
add
mov
fcomps
sbb
imul
arpl
mov
daa
mov
ljmp
push
cmp
inc
bound
icebp
roll
scas
inc
cmp
push
in
xor
mov
xchg
lods
rcrl
inc
leave
cs
out
out
dec
movb
sub
push
sahf
je
push
jbe
and
leave
inc
mov
fldl
mov
mov
inc
fiaddl
je
int3
out
sbb
push
sbb
sub
pop
scas
fiadds
test
aad
mov
dec
adc
and
outsl
mov
fistpll
cmp
mov
fistpl
mov
jmp
xchg
imul
sti
adc
test
sub
repnz
ds
pop
ja
adc
jmp
adc
lods
xor
xchg
add
sub
test
ficompl
sbb
test
mov
push
scas
and
xor
mov
rorl
lcall
imul
lods
jo
mov
cmp
push
rorb
out
popa
mov
adc
or
fnsave
idivb
pop
movsl
jl
fldt
stos
push
ss
sub
daa
add
cmpsl
pop
outsl
fcmove
and
sti
push
inc
lods
adc
call
sbb
jp
cmp
lcall
bound
push
jecxz
mov
push
scas
out
stos
ret
mov
xlat
imul
int3
jge
xchg
dec
fstps
cli
rol
stos
lret
or
cld
int3
aad
cmp
sbb
jnp
sahf
sub
push
pop
cmpl
adc
ret
fstl
movsl
lods
mov
sbb
jg
sub
or
aas
sub
push
imul
xchg
mov
inc
sbb
hlt
push
jae
add
and
rorb
adc
out
test
mov
mov
adc
mov
fstpt
xchg
test
es
int
xor
mov
jno
ds
cmp
imul
les
lods
jecxz
fmul
xchg
stos
std
std
test
mov
push
mov
and
pop
cld
pop
adc
dec
fbld
arpl
pop
mov
xor
into
pop
aad
aaa
outsb
stc
dec
sti
jl
add
lcall
pop
xor
iret
push
mov
inc
cli
clc
pop
rorl
adc
push
cmp
arpl
cmpsl
dec
dec
test
mov
jns
or
lods
xchg
sbb
repz
sub
cltd
loopne
mov
mov
call
or
xchg
adc
sti
sbb
dec
icebp
pop
sub
movsl
pop
imul
fwait
cmp
mov
mov
adcl
mov
outsl
cs
scas
inc
pop
sarb
lock
inc
ljmp
push
movsl
mov
dec
lret
mov
lods
mov
mov
pop
out
dec
mov
ljmp
fcom
insl
or
leave
inc
add
mov
fistpl
sub
pop
out
out
fs
jecxz
and
aam
clc
jnp
push
mov
and
sub
mov
jb
lods
and
dec
add
xor
inc
jmp
orl
or
dec
cmpsl
out
call
xor
inc
mov
pop
lds
loopne
push
and
or
in
int
mov
bound
lods
leave
push
movsb
pop
xor
cmp
and
or
sub
in
hlt
int
call
pop
hlt
cmp
or
cld
and
out
xchg
or
and
dec
pop
push
mov
push
outsl
inc
iret
sbb
xor
cmpsb
jp
sub
clc
push
push
jl
mov
shll
mov
call
xor
hlt
pop
shl
pop
mov
inc
and
mov
or
out
inc
mov
pop
rclb
mov
mov
rorl
push
shll
xor
aam
sub
xor
xchg
call
xor
push
pop
xor
sbb
mov
cmc
mov
repz
jge
jns
inc
test
or
in
push
lods
inc
inc
and
test
jecxz
bound
mov
subb
mov
mov
fsubs
or
push
inc
sub
les
add
mov
lock
adc
mov
lcall
call
out
std
xchg
pop
data16
xchg
scas
mov
mov
imul
sbb
xchg
sub
and
pushf
xor
repnz
repnz
lods
sbb
std
xchg
add
mov
xlat
bound
sbb
fimuls
cmp
sub
jecxz
pop
mov
test
aaa
xor
dec
gs
daa
shr
hlt
xchg
cmp
xor
test
jmp
in
mov
das
std
lods
movsl
jb
daa
ss
imul
cvtps2pi
push
cmp
cwtl
adc
pcmpgtw
and
xchg
fldcw
push
xor
xchg
mov
sub
repz
sti
and
stos
adc
data16
pop
push
in
int3
or
pop
js
mov
insl
xchg
mov
iret
cmp
mulb
mov
xor
adc
pop
outsb
sbb
cmp
lcall
test
pop
jnp
in
add
adc
fcomip
push
dec
push
jg
out
icebp
pop
outsl
sbb
je
jge
cmpsb
jecxz
xor
vunpckhps
out
dec
mov
test
sbb
shrb
or
pusha
fsubr
out
mov
xlat
stc
fwait
les
pop
testb
sahf
lock
je
arpl
mov
mov
jno
test
ljmp
mov
mov
pop
outsb
add
jbe
hlt
mov
or
ss
cmp
pop
mov
and
in
stos
sbb
gs
add
in
lods
or
pushf
shll
mov
jl
sbb
adc
daa
insb
in
pusha
loope
and
test
mov
stos
inc
dec
sbb
dec
nop
shlb
scas
or
fadds
and
push
int
jns
xchg
test
mov
mov
or
fldl
out
jp
push
jmp
pop
shl
loope
mov
imul
xchg
cld
pop
aas
xor
in
cmp
or
imul
push
out
shll
rcrl
adc
rcr
or
mov
dec
fucomp
cwtl
sbb
imul
inc
cmp
in
into
icebp
cs
sti
pop
mov
jns
sbb
pop
cmpsl
mov
in
inc
repz
sub
movsl
mov
data16
mov
adcl
and
lds
testb
dec
push
xchg
movsb
test
insb
lock
xor
cs
scas
pop
outsl
loopne
cmp
or
sbb
inc
das
lret
pop
push
fdivrl
cld
xorb
nop
adc
ja
mov
cwtl
lret
dec
inc
shr
jnp
shr
sub
lcall
movsb
cmp
xlat
scas
sub
sbb
push
insl
ficoms
jns
dec
hlt
sbb
notl
mov
fnstenv
cmp
hlt
or
push
push
push
sbb
inc
in
sahf
iret
orb
xchg
cmp
testb
xchg
ss
iret
mov
mov
leave
je
mov
adc
xchg
mov
ficomps
lret
jns
scas
lods
push
and
pop
sub
push
mov
xchg
adc
sbbl
xor
fs
jmp
push
orb
adc
inc
jne
inc
test
popf
adc
or
sbb
pop
lcall
mov
mov
jne
lret
pop
test
rcrl
gs
sbb
jle
sti
mov
sti
push
fcoml
pop
repnz
jns
dec
push
lods
sub
sub
in
hlt
add
ficomps
insb
sbb
pop
jl
lock
into
enter
mov
aad
leave
lea
pop
push
mov
and
push
ret
inc
das
mov
and
cmp
nop
add
cli
movsl
scas
inc
xlat
pop
lock
or
cmp
pusha
sbbb
xchg
outsl
rcrb
ret
cli
aam
and
clc
xor
insl
push
and
rcl
cmpsb
sbb
pop
std
sub
push
push
inc
inc
pop
test
push
sbb
test
sti
pop
sbb
dec
inc
addl
wrmsr
mov
xchg
stos
inc
orb
popa
aad
jno
xor
ljmp
xchg
add
and
repnz
adc
mov
mov
inc
cwtl
jmp
mov
outsb
xor
mov
push
mov
dec
add
aam
xor
sbb
test
mov
iret
sbb
popf
jge
insb
add
in
mov
inc
lss
jl
rcrb
or
push
jp
push
out
jmp
push
hlt
inc
lock
out
js
sub
nop
xor
mov
xchg
pop
jno,pn
sub
cld
jl
sub
lcall
aam
push
fs
pop
out
jns
push
cli
xchg
dec
out
lock
inc
pop
fdivl
pop
fmull
rorb
aad
loopne
clc
stos
clc
adc
les
je
push
jmp
adc
sub
and
movsl
mov
jp
je
leave
pop
icebp
cld
dec
lods
jg
movsl
push
mov
int
sub
push
je
aaa
add
js
sbb
xchg
andb
cmpsl
mov
sbb
loope
or
pop
cltd
stc
push
and
lcall
or
hlt
frstor
imul
stc
and
movsb
cmp
fmull
lock
sarl
imul
pop
xor
mov
lcall
sbb
fwait
jge
add
cmp
imul
lods
xchg
shll
xchg
add
cmpsb
add
sub
daa
cli
in
test
aam
fnsave
add
fwait
dec
fcomi
mov
mov
in
out
and
jp
inc
in
push
aam
scas
jo
cwtl
in
jmp
jns
sbb
cmc
fwait
orl
sub
jp
adc
inc
mov
push
jne
pop
inc
gs
call
inc
leave
sub
or
pop
in
dec
xchg
and
xor
xchg
in
or
dec
mov
pop
cmc
daa
push
testl
sub
les
adc
bound
pop
lock
mov
push
icebp
cwtl
dec
cmp
adc
sub
sbb
cli
xchg
cwtl
idivl
push
jl
fsubrp
cmc
mov
sbb
stc
dec
inc
jecxz
sub
push
ficoms
xchg
cltd
and
jmp
mov
jae
and
push
mov
xchg
idivl
je
sbb
arpl
notl
nop
pop
aaa
lods
ljmp
fwait
stc
xchg
pop
mov
andb
addb
pop
mov
int3
add
ss
cmc
divl
lock
fdivp
mov
mov
ja
sub
cmp
sbb
pop
pop
addb
popf
lods
cwtl
cmovo
pushf
xchg
ljmp
insb
cmp
cltd
cmp
mov
jae
add
or
repnz
fnsave
sbb
mov
repz
ficomps
jge
mov
pop
in
pop
insl
cld
xchg
dec
dec
sub
sub
leave
cmp
scas
in
sbb
sub
stc
icebp
adc
xadd
pop
clc
movsb
mov
jge
shr
pushf
call
xor
loop
testl
hlt
sbb
ja
cs
adc
sub
fsubrl
mov
aas
testb
negb
mov
stos
push
cmp
loopne
lret
mov
out
insl
sub
ret
add
dec
dec
popa
imul
adc
outsb
push
bound
int3
pop
sbb
lods
data16
sbb
jle
lods
push
adcl
daa
jmp
sub
cmp
sub
mov
jg
das
xor
push
fldl
dec
xchg
popa
jg
rorb
and
fs
pop
enter
sbb
jg
cmc
dec
pop
cmc
cmp
xchg
xchg
cltd
xor
ret
mov
dec
in
roll
inc
or
idivl
fs
stos
pushf
and
leave
daa
add
jne
insl
mov
sub
jg
aas
or
cmp
pop
push
int3
lahf
cmp
das
loope
jp
es
sti
test
or
outsl
push
cmp
jb
inc
movsb
cmp
xchg
mov
fidivl
lods
scas
jmp
mov
xchg
imul
cmp
bound
cmp
lcall
cmp
insl
sbb
xchg
cmpsl
arpl
mov
mov
xor
std
insl
mov
xchg
push
sub
xchg
sti
mov
push
mov
scas
bound
lock
out
or
mov
jmp
aaa
aam
in
jle
sub
es
pop
and
fs
lret
adc
inc
inc
es
xchg
mov
ror
adc
dec
rclb
shl
mov
ret
adc
lds
fcoms
mov
emms
mov
mov
sets
inc
pop
jb
jge
insb
movsb
sbb
test
je
int3
mov
popa
mov
rcrb
rcrl
inc
cmp
movsl
data16
std
cltd
das
push
xor
cld
sbb
jne
mov
xchg
cmpb
jbe
sub
loopne
add
cmp
popa
cmc
pop
ret
and
sub
lret
mov
sbb
loopne
out
sub
add
loopne
stos
lods
add
mov
xor
ljmp
lock
cld
xor
xor
cwtd
jnp
into
scas
add
shlb
and
sbb
xchg
fcompl
cmc
dec
loop
pop
cmpsb
int
in
dec
lods
out
pushf
and
mov
fstp
mov
lahf
xchg
gs
mov
dec
insl
jg
dec
fwait
cmp
pop
lock
loopne
jne
dec
cmp
or
or
pusha
jns
pop
jno
push
sub
mov
repnz
adc
sbb
mov
dec
pop
in
lea
outsb
loope
loop
mov
jb
mov
inc
or
and
pusha
gs
pop
mov
rcr
in
add
or
pop
or
push
mov
in
xlat
jo
mov
ja
inc
adc
sahf
inc
int
and
and
mov
bound
insl
int3
shrl
repnz
or
inc
aad
mov
push
shrl
jge
xchg
popf
inc
xor
jno
add
les
push
cmp
xchg
adc
dec
mov
jge
pop
lds
sub
push
mov
inc
pop
cltd
popf
std
pinsrw
fnsave
lret
bound
shlb
lret
xchg
pop
lods
xor
fidivrs
pushf
dec
into
out
adc
xor
aaa
cmp
leave
mov
cwtl
jne
and
xorb
clc
xchg
pop
cmpsb
notl
in
fldl
pop
or
cmp
jp
xchg
in
jnp
sahf
cld
push
mov
fst
mov
push
jecxz
in
call
add
jecxz
popa
push
push
stos
xchg
sub
popf
dec
push
xchg
std
fcoms
das
stos
dec
cmp
pop
call
inc
lea
subl
inc
adc
jae
cs
movsl
inc
push
out
jne
andb
push
scas
pop
pmulhuw
out
jecxz
mov
fcoms
xor
xor
add
sahf
test
lods
xchg
into
and
add
or
lcall
stc
outsl
push
mov
mov
add
pushf
xor
pop
or
mov
cmp
sub
addr16
loope
inc
ss
arpl
push
test
push
adc
adc
pop
add
imul
dec
adc
mov
daa
sahf
inc
lods
lcall
popa
bound
xchg
data16
pop
push
xor
xchg
mov
inc
sbb
cmp
in
sarl
sub
popf
cmc
mov
mov
scas
and
dec
mov
imul
and
add
sub
xchg
add
and
hlt
jle
mov
out
adc
add
mov
xchg
ds
jnp
push
clc
aaa
arpl
mov
jl
sbb
lds
sub
fs
push
int
cmp
push
mov
cmp
push
je
dec
and
xchg
xlat
aad
push
in
test
sub
enter
and
dec
cld
mov
cld
pop
in
pop
ljmp
xchg
shrb
clc
inc
sbb
fcompl
sub
jecxz
sti
ljmp
jae
and
test
stc
js
mov
mov
decb
jnp
jg
inc
inc
mov
aas
nop
test
push
push
dec
movsl
pop
cmp
inc
push
xchg
push
pop
adc
xor
dec
add
scas
pop
add
insl
flds
popa
cltd
test
dec
cmp
adc
stos
je
dec
cmpsb
int3
das
les
pop
adc
xchg
push
push
fcmovnu
in
xor
inc
bound
dec
cmp
pop
or
pop
cmp
cs
mov
push
cwtl
pop
nop
daa
mov
push
xchg
scas
jno
iret
or
push
push
mov
js
insb
mov
push
or
pop
out
jmp
aaa
dec
inc
fsubrp
add
push
pop
sbb
jb
xchg
inc
dec
andl
and
bound
push
jne
pop
jo
mov
test
lea
aam
xchg
jl
lahf
pop
pop
scas
sub
xor
add
add
or
mov
es
or
iret
adc
repnz
ret
jnp
mov
repnz
dec
fdivr
int
imul
sbb
mov
out
shlb
adc
lahf
mov
clc
addr16
cltd
sbb
sbbb
mov
out
xchg
mov
cmp
insb
sub
insb
pop
inc
adc
push
fimull
fdivrs
mov
xor
mov
lcall
stc
stos
clc
dec
push
daa
jno
fldenv
imul
add
test
adc
fs
dec
push
and
xchg
push
testb
add
mov
dec
cmc
xor
out
out
mov
dec
cwtl
aas
insb
fidivrs
dec
mov
mull
jno
int3
mov
popl
inc
cmp
dec
das
adc
inc
xlat
cwtl
push
outsl
mov
mov
rcr
mov
cwtl
adc
and
jbe
int3
jo
mov
imul
pusha
sbb
push
mov
mov
mov
rorl
inc
mov
mov
mov
cmp
mov
sahf
sub
arpl
sbb
adc
inc
test
adc
call
cmp
inc
rolb
shll
and
es
out
push
adcb
jb
int3
sub
jbe
hlt
rolb
dec
mov
dec
add
loop
pop
out
xchg
ss
fldcw
scas
cmc
mov
cmpsl
and
adcl
cmc
dec
mov
repnz
shlb
add
sub
pop
dec
dec
loope
ss
xor
mov
jbe
stc
cmp
movsb
call
pusha
subl
insb
popa
or
jge
adc
idivb
mov
lock
leave
test
out
scas
lea
cmp
dec
clc
jmp
lcall
sbb
push
mov
cmc
mov
int3
pop
ret
sub
mov
pop
inc
push
loopne
ja
xchg
xorl
jns
repz
js
cld
pop
mov
inc
pop
frstor
rorb
pushf
hlt
lret
out
add
mov
mov
loop
jbe
dec
dec
lcall
xchg
or
mov
outsb
clc
and
lahf
stos
push
and
mov
cmp
sub
les
test
sbb
and
ficomps
mov
add
sbb
add
push
push
pop
sub
lock
das
ljmp
sbb
pop
jmp
mov
test
push
sub
mov
sbb
je
mov
pop
xchg
add
push
mov
ljmp
or
mov
jns
push
mov
rorl
imul
cmp
and
es
fsubp
push
call
jge
outsl
add
xchg
in
ret
movsb
xchg
mov
jge
adc
jne
add
loopne
jg
push
xchg
mov
popa
cmpxchg
fcmovbe
rcrb
sbb
and
lahf
ss
outsl
sub
sub
push
scas
jg
mov
push
outsb
push
xchg
pop
pop
in
es
push
mov
xor
pop
cltd
inc
and
or
sqrtps
stos
inc
sub
stos
jno
pop
mov
pop
stc
mov
int
fbld
cmp
pop
iret
stos
cmp
jecxz
xor
add
iret
or
push
imul
in
test
xchg
das
and
rcrl
xor
xchg
or
mov
inc
jecxz
imul
out
jae
lcall
in
addr16
ret
mov
cmc
jb
inc
cmp
fld
imul
fnstcw
adc
cmp
add
and
sbb
xor
je
test
sub
mov
pusha
add
inc
icebp
xchg
cmp
stos
insb
add
pop
ja
add
jb
push
mov
xor
mov
aaa
push
mov
sarb
push
sti
iret
fwait
sub
imul
xlat
mov
fcompl
jle
xchg
jns
std
cmc
or
mov
add
xchg
pop
jecxz
pop
je
cld
xor
call
mov
popf
jb
in
xchg
pop
aad
in
sti
add
test
dec
ds
out
mov
push
mov
mov
dec
cmp
pop
cmc
sarb
or
and
mov
push
jp
popa
outsb
sti
push
mov
cmp
jmp
or
add
mov
push
rcl
test
sub
add
xor
ljmp
jno
js
mov
imul
pop
mov
repnz
mov
adc
pop
repnz
sub
pop
dec
or
sub
inc
cmpsl
mov
fucomp
jge
xchg
movsl
inc
xlat
aad
sub
fdivs
hlt
test
addl
arpl
shlb
inc
xchg
adc
sti
lret
jo
push
fisubs
pop
aas
cmpsl
out
icebp
mov
sti
add
xchg
cli
push
fstp
arpl
stos
inc
pop
popf
push
or
pop
call
add
adc
mov
inc
lock
into
ja
ja
data16
dec
mov
or
fdivl
jne
push
cmpsb
cmp
sbb
xchg
mov
jae
add
dec
loop
lods
outsb
add
fwait
repnz
loop
sti
xchg
add
mull
ja
sbb
cmp
or
fdivl
testb
repz
sahf
xchg
ja
inc
mov
mov
lock
inc
fisubl
insl
insb
and
int3
arpl
cli
mov
ljmp
pop
scas
and
jo
add
sbb
or
jb
jg
hlt
mov
xchg
mov
out
xor
mov
jnp
imul
arpl
mov
xor
repnz
fwait
pop
repnz
inc
mov
outsl
lods
inc
pop
xchg
cmpsl
ds
int3
repz
adc
sahf
adcb
inc
cwtl
mov
or
dec
in
sbb
dec
sahf
ret
fiaddl
leave
sbb
jo
std
lcall
imul
iret
nop
rcrb
xorl
nop
jb
and
push
sbb
out
int
jo
aam
cmp
sti
inc
xchg
xlat
imul
repz
add
sbb
xlat
hlt
xchg
shll
cmpsb
repz
fs
lock
xchg
add
cmpsl
sti
fabs
adc
repnz
in
sbb
bound
lods
jbe
xchg
aas
xchg
popa
push
stc
das
insb
bound
cld
cmp
or
dec
and
lds
shl
inc
pop
fistpl
jns
xor
xor
jl
test
push
lods
fs
inc
pop
add
or
mov
jg
rcl
jns
push
call
xor
das
push
or
fst
dec
dec
sub
pop
adc
jmp
sahf
pop
sub
mov
mov
pop
sbb
mov
adcl
icebp
dec
mov
enter
add
sub
fstps
xor
lock
mov
push
mov
push
imul
xor
xchg
into
in
sbb
push
nop
jmp
pushf
add
xorb
inc
pop
pop
repz
and
push
iret
out
dec
lahf
cli
sbb
clc
loopne
inc
push
push
jmp
iret
and
sbb
sub
push
push
sub
jno
in
dec
pop
filds
xor
es
mov
mov
lea
inc
call
jno
in
fcoms
push
xchg
dec
js
adc
sbb
rcrb
iret
dec
lods
in
pusha
fists
adc
cmp
clc
loop
in
sbb
xchg
es
or
cs
add
insl
mov
ficomps
mov
divl
or
notl
push
pop
sub
and
and
ret
push
xor
mov
mov
int3
iret
mov
movsl
xchg
adc
add
add
dec
add
jne
adc
ficoml
xchg
mov
push
or
or
xchg
mov
pop
cmpl
sub
push
sti
cs
loopne
stc
and
or
mov
lcall
test
mov
xchg
pop
icebp
shrl
push
pushf
and
movsb
out
jl
xchg
adc
stos
inc
or
cmp
dec
pop
roll
jg
push
pushf
repz
xorl
xchg
fbstp
push
push
cltd
push
fisubs
inc
cmpsb
and
pusha
ss
test
sub
clc
cmp
sub
xor
ljmp
jno
out
pop
add
int3
insb
mul
xchg
pop
lahf
lods
mov
pusha
mov
jno
es
insb
outsl
pusha
imul
fwait
loope
add
nop
cli
pusha
xor
fwait
movsl
cmp
mov
pop
mov
icebp
imul
ja
cltd
lea
xchg
int
fcoml
sub
inc
jae
push
test
cmpsb
inc
loop
xchg
add
loopne
sbb
push
pushf
scas
xor
sahf
sub
call
mov
cltd
or
xchg
mov
xorb
mov
fnstsw
loop
dec
shrl
nop
cmp
icebp
sar
mov
mov
leave
lods
pop
lcall
dec
loop
aad
pop
imul
lods
in
mov
out
sbbb
cmp
lea
jecxz
cltd
pop
mov
jle
sbb
sbb
xchg
add
es
addr16
jae
cmp
mov
add
movsb
jns
fiadds
or
pop
enter
mov
jbe
mov
mov
mov
cmpb
mov
outsl
ljmp
test
xlat
daa
pop
and
inc
cs
cmp
sbb
enter
jg
xchg
sbb
push
lds
xchg
pop
sahf
add
test
fstpt
mov
fidivl
add
sbbl
xor
or
testb
lahf
aaa
lret
je
pusha
mov
adc
adc
mov
cmp
cmp
cwtl
or
dec
dec
mov
adc
enter
mov
xlat
jmp
outsb
mov
lahf
cs
int3
cwtl
mov
dec
push
mov
cmpsb
negl
xchg
jo
mov
cmp
sbb
or
out
sbbb
mov
int3
rol
loop
shlb
dec
insb
movsl
cld
lcall
mov
fadds
out
pop
inc
aaa
pop
push
lret
cmp
popa
jp
aam
inc
repnz
dec
dec
push
push
jmp
sbb
lock
into
aas
mov
inc
push
inc
fnstenv
jmp
pop
xchg
ja
sbb
enter
cmp
mov
lcall
mov
pop
outsb
sti
jle
ljmp
stos
xor
fcmovnbe
call
les
mov
xchg
sub
jae
add
lret
and
jbe
in
jns
leave
int
push
cmp
lds
mov
mov
into
xor
cld
xchg
iret
pop
cmp
jl
into
fidivrl
aad
pop
jmp
push
push
cmp
mov
in
outsl
sub
ljmp
shlb
je
and
mov
cmpsl
cmpsl
leave
xor
jb
mov
mov
sbb
rorb
icebp
jg
movsb
aad
aad
sbbl
lds
jge
add
push
ss
mov
mov
test
shr
imul
rep
mov
inc
imull
add
scas
mov
divl
ja
add
mov
rclb
sbb
mov
out
xchg
sbb
lret
lds
push
cmpsb
and
xchg
xchg
scas
clc
cli
adc
lock
xor
pop
repnz
adc
sub
adc
jbe
pop
scas
inc
mov
mov
sub
inc
repnz
sti
fsub
push
sub
sarb
jmp
aas
mov
fnstsw
push
xchg
sub
push
mov
xor
mov
imul
lret
popa
lds
es
out
sub
mov
stos
push
in
push
in
jae
adc
mov
sub
pop
int3
mov
pop
xchg
aad
stc
push
pop
pop
and
adcl
dec
add
sbb
jle
loopne
sbb
add
in
dec
fstl
xlat
call
daa
outsl
push
push
iret
mov
xchg
lcall
dec
adc
fisubs
gs
arpl
stos
rcrl
nop
ds
or
xchg
mov
lret
packuswb
cltd
jo
leave
xor
aaa
outsl
push
jae
inc
into
orb
cli
ret
jno
mov
loopne
es
dec
push
cmpsl
stc
lods
inc
stc
inc
loope
test
lret
push
or
push
mov
or
ret
jge
push
pop
clc
dec
bound
pop
data16
mov
std
adc
inc
push
inc
dec
pop
dec
jecxz
out
aam
cmp
mov
sahf
mov
push
es
clc
daa
push
fdivs
jb
movsl
xchg
pop
adc
les
roll
mov
mov
lock
adc
out
fdivs
imul
lret
rorb
mov
and
mov
jnp
jo
sub
sbb
jne
lods
xchg
push
in
test
cmp
add
inc
pop
test
pushw
sti
xlat
dec
cli
push
stc
ret
and
aas
jb
icebp
mov
ja
pop
test
pop
adc
pop
xor
cmp
or
mov
sbb
orb
inc
mov
inc
adc
adc
push
scas
les
add
push
add
lock
dec
jae
aas
sub
lahf
aad
adc
xor
xchg
sbb
rcll
mov
movl
rcrl
cmp
pop
lcall
sub
ret
or
mov
negb
stos
mov
sarb
pop
inc
push
repnz
pop
cmc
das
in
inc
ffree
jl
sti
dec
xor
pop
cltd
lcall
nop
mov
inc
mov
cmpsb
sub
mov
jae
sbb
add
stos
mov
lret
enter
add
pcmpeqb
xor
cmp
pop
loope
mov
sbb
xchg
inc
pop
loop
je
jns
xchg
scas
int3
arpl
pop
adc
xchg
mov
and
les
mov
push
imul
and
adcb
xor
cmp
xor
cmc
fidivrl
repnz
mov
xchg
stc
outsb
frstor
and
push
mov
pop
in
dec
push
js
pop
or
rorb
mov
jae
pop
xchg
push
sbb
and
cli
jg
mov
ss
xor
pop
andnps
lcall
in
or
mov
std
mov
in
movsb
cmp
xchg
xchg
add
jp
ljmp
lea
shll
inc
fisttpll
mov
cmpsb
test
psadbw
cmp
dec
mov
aad
pop
test
mov
mov
enter
xor
popa
pop
jbe
mov
mov
push
aaa
dec
xchg
pop
xor
mov
cmp
mov
loop
mov
mull
in
cmp
sbb
xlat
cmp
call
push
jmp
or
movsb
pop
xor
xlat
outsl
sti
xchg
push
call
jl
outsl
add
pop
mov
push
sub
jmp
out
arpl
dec
test
inc
rcrl
inc
cmpsl
cmp
jmp
inc
ja
clc
in
cwtl
aas
aad
mov
xlat
addb
xor
pop
mov
cltd
xor
ljmp
test
into
jnp
jne
imul
cmp
ljmp
testl
mov
and
fldl
pop
cltd
xor
shlb
jno
jmp
nop
mov
sbb
pop
mov
inc
in
jo
adc
mov
push
push
call
cmp
popa
pop
vmovups
pop
push
ja
lahf
mov
cwtl
fiadds
adcb
addr16
movsb
ret
mov
arpl
mov
arpl
sub
cmc
pop
scas
dec
mov
push
cmpsl
xchg
adc
data16
push
push
loope
cmp
es
or
xor
mov
and
mov
xchg
xchg
add
adc
mov
push
enter
adc
xor
or
dec
jl
jg
mov
cmpsb
jl
jne
repnz
sbb
mov
imul
or
arpl
fmuls
xor
mov
data16
push
mov
dec
clc
inc
icebp
push
push
inc
fimull
mov
mov
fbstp
mov
sub
call
ret
sbbl
sub
push
adc
test
and
mov
pop
mov
sub
lea
aaa
xor
jecxz
int
movsb
add
mov
in
xor
arpl
xchg
sub
mov
mov
insb
xor
cmp
repnz
pop
xchg
mov
dec
cld
sbb
andb
es
imul
pop
sub
nop
ds
inc
insb
repz
shrl
imul
clc
xchg
ljmp
and
xlat
jb
gs
daa
sahf
stos
inc
jecxz
cmp
xchg
or
mov
sub
or
xor
movsb
jo
dec
and
jne
call
mov
outsb
imul
sub
popf
and
xor
push
xor
fidivrs
xor
cmc
repz
mov
xchg
adc
mov
add
sbb
dec
subl
xor
adc
push
das
push
test
pop
pushf
jnp
jo
cmpsb
pushf
arpl
into
stos
jbe
push
out
adcl
sub
sbb
leave
das
mov
test
xchg
pop
fiadds
or
mov
or
imul
cmpsb
jge
pop
push
sbb
popa
add
pop
xor
popa
cmp
lahf
adc
data16
fnsave
es
sbb
cmp
cmp
xchg
dec
sbb
mov
mov
std
xor
add
popa
pop
out
jnp
sbb
icebp
pop
adc
mov
fidivl
adc
add
mov
and
js
dec
loopne
cli
inc
mov
xchg
sbb
sbb
ds
rorb
mov
fucomi
mov
sbb
aas
mov
push
inc
xor
pushf
ja
lea
test
jmp
inc
inc
sbb
push
in
xor
sub
loop
fstl
in
mov
test
lret
and
stos
test
xchg
mov
int3
mov
mov
dec
xor
aam
clc
or
mov
enter
pusha
ljmp
into
pop
mov
xchg
or
mov
mov
mov
push
cmpsb
pop
jge
xchg
fnstsw
add
sub
mov
out
xor
loopne
sbb
jb
scas
call
inc
sbb
push
ret
sti
xchg
dec
mov
or
out
std
push
dec
mov
sbb
xor
mov
push
test
mov
mov
push
jno
mov
jbe
cmp
stos
or
xchg
adc
push
jno
or
pop
cmp
or
and
test
jnp
dec
movsb
jnp
fs
or
nop
adc
stos
sbb
testb
inc
sbb
cmp
sbb
int
loopne
sbb
call
aas
pop
cmp
pop
arpl
cmpsb
sbb
push
jp
pop
sub
inc
fnstcw
fisubl
lret
xor
sti
mov
ret
js
shll
mov
mov
ja
add
or
and
rol
pop
push
inc
or
ret
loop
stc
repz
push
mov
jbe
pop
idivl
imul
and
pop
or
push
fs
mov
rcrl
insl
add
pcmpgtw
adc
jno
pop
pop
dec
cmp
icebp
shrl
inc
xor
pop
out
inc
jle
negl
mov
xor
cli
shlb
in
push
ret
orb
xor
add
cmp
notb
lcall
add
push
mov
pop
lcall
lods
sbb
fs
cmc
lds
xchg
sbb
insb
rcrl
mov
add
pop
push
xchg
ja
bound
aad
inc
push
sub
dec
dec
mov
jno
fs
xor
or
mov
int3
dec
mov
push
mov
inc
or
icebp
sub
cmpsl
repnz
xor
dec
sub
scas
mov
ss
sti
pop
repnz
dec
in
push
push
cmp
sahf
in
and
in
jno
out
out
jae
sub
lcall
cmp
xchg
dec
out
cmp
sbb
sbb
sbbb
inc
pop
mov
mov
out
and
xchg
or
adc
push
inc
fisubl
loopne
icebp
xor
ds
inc
xor
sub
lock
icebp
xor
es
fisubl
mov
inc
dec
pop
xchg
fwait
mov
lcall
sub
push
dec
fidivl
std
repnz
sbb
rorb
or
jl
shrb
sarb
mov
scas
xchg
push
orb
int
ljmp
lds
mov
xchg
dec
or
sbb
imul
mov
sub
inc
sub
inc
and
pusha
adc
lcall
gs
and
mov
hlt
dec
mov
clc
push
sbb
lods
xor
loope
push
je
js
je
bound
xor
mov
mov
push
adc
sbbl
test
fcom
sub
mov
or
orl
fmulp
gs
fwait
sti
out
xor
inc
ljmp
inc
push
pop
sahf
xchg
sub
inc
inc
fdivrl
mov
push
push
mov
and
movd
jne
aaa
fs
and
ss
push
lods
jmp
xorb
xor
adc
mov
sbbb
mov
lods
cld
push
decl
bound
int3
fiadds
scas
mov
inc
ret
repnz
std
jo
xor
call
sarb
mov
aad
sub
sub
mov
mov
sbb
ja
or
mov
pop
outsl
orl
push
pushf
data16
fisubl
test
shlb
mov
movsl
xchg
ljmp
ljmp
push
outsb
pop
pop
popa
imul
cmp
gs
cld
in
add
adc
test
xlat
and
inc
hlt
dec
sbb
les
lcall
lahf
add
repz
sbb
pop
ret
lcall
stos
enter
xlat
and
and
xor
or
jle
insb
inc
jne
push
scas
push
sbb
lea
lock
jmp
insl
inc
sahf
xor
lea
xor
adc
xchg
dec
jp
mov
in
imul
ds
mov
dec
push
arpl
lods
ja
pop
cmp
xchg
mov
rol
ja
fdivp
pop
aam
xlat
clc
inc
mov
js
cmp
xchg
lcall
jmp
mov
lods
xor
mov
push
in
add
dec
popa
xchg
jle
lahf
rcrb
mov
in
loop
rol
pushf
outsl
lock
out
rcl
or
fimuls
inc
add
sbb
mov
addr16
cmp
sub
sahf
inc
outsb
pop
loop
jecxz
jle
inc
call
adc
leave
cmp
push
test
dec
lods
or
mov
add
xchg
icebp
or
fistps
adc
adc
sbb
aad
mov
mov
hlt
sbb
pop
sahf
cmp
mov
cmp
jg
shlb
cmp
shl
jmp
sti
in
or
jbe
jmp
icebp
dec
push
out
sub
ffreep
sbb
data16
and
add
es
push
xor
adc
aaa
fs
xchg
mov
cld
and
mov
test
sbb
mov
in
jge
in
ja
mov
popf
jno
pop
adc
loopne
and
xor
and
inc
dec
inc
lea
fisubl
cld
adc
inc
jnp
xor
aas
test
fnsave
jnp
mov
dec
adc
push
movsl
into
and
mov
addl
ja
add
cltd
push
test
inc
test
scas
add
ja
fs
or
mov
iret
lods
and
sub
lods
jmp
insb
in
popf
fmull
mov
push
outsb
sbbl
push
out
adc
sub
negb
cmp
jno
cmp
or
dec
adc
ret
ret
inc
shlb
push
sub
aaa
xchg
and
fdivl
inc
pop
xor
ds
push
in
stos
fdivrl
pop
hlt
test
push
pusha
pop
cmc
mov
lret
sti
mov
dec
inc
adcl
and
ljmp
je
je
mov
div
cmc
fldcw
sbb
or
inc
fmuls
imul
xchg
cmp
repz
push
xlat
pop
fcompl
inc
push
ljmp
inc
mov
in
outsb
int
lahf
xchg
das
mov
cmpsl
sub
jg
or
jae
lock
leave
and
push
cmp
jne
stos
incl
xor
fldenv
push
dec
cmp
push
cmpsb
lock
xchg
xor
out
cwtl
ljmp
push
or
sub
mov
aas
js
xor
mov
sub
std
loopne
stos
inc
sbb
iret
dec
push
jbe
and
bound
xlat
fisubs
or
mov
aaa
and
jne
dec
jl
jle
mov
subb
sahf
push
push
call
and
repnz
ja
ret
pop
xlat
push
jnp
xchg
xchg
xchg
mov
sub
hlt
insb
cmp
call
mov
sub
pop
or
mov
fs
popa
or
pusha
mov
pop
outsl
cmp
andl
test
pop
mov
pusha
aad
push
adc
stos
fcoml
push
pushf
test
fmul
imul
lock
pop
test
mov
sub
mov
rorl
popf
mov
push
arpl
push
mov
popf
mov
roll
mov
pop
imul
push
cmp
mov
pushf
cmp
out
out
sbb
push
dec
jp
outsl
rclb
daa
cmc
daa
testl
jne
insb
or
rclb
faddl
and
test
negb
loopne
hlt
sub
fbstp
int3
loope
jnp
xchg
add
cmp
sbb
jmp
fisttps
cmpsl
rcll
enter
jmp
out
push
imul
jnp
stc
adc
push
inc
pop
pop
jae
ljmp
inc
adc
mov
popa
jmp
sarb
hlt
xchg
adc
sub
cmp
push
lahf
and
inc
rorl
int
push
out
mov
jmp
pop
ret
lret
mov
sti
outsb
push
xor
push
fstpl
jmp
es
add
cmp
jns
mov
jo
and
scas
jg
ja
dec
push
repnz
mov
jne
mov
add
rcrb
inc
or
sbb
xlat
and
xor
push
lods
repz
xchg
ja
push
iret
mov
push
xor
or
and
jns
pushl
shrb
lret
sub
mov
dec
out
sbb
ret
sbb
push
mov
sub
dec
fdivp
mov
push
fisttpl
testb
xchg
inc
int
inc
popa
clc
pop
scas
jo
orb
sbb
cmp
push
movb
mov
call
xor
dec
pop
lds
cmp
dec
sub
push
push
sub
sahf
pop
xor
test
pusha
pushl
jns
pop
jbe
xchg
pop
jno
popa
data16
lods
cmp
test
sub
cmpsl
mov
jle
int3
iret
popf
lea
ret
fstpt
cld
mov
rorb
xchg
ret
jns
add
ror
loop
inc
call
inc
lock
ds
lret
ljmp
dec
cmp
cld
test
cmp
cwtl
out
test
sub
lea
cs
outsl
inc
sub
loopne
and
fmul
enter
sbb
dec
mov
les
imul
out
adc
jno
sahf
mov
xchg
gs
adc
lea
sub
and
push
stc
mov
push
inc
cs
jl
fnstcw
xor
imul
xchg
sub
push
mov
das
rolb
sub
mov
push
cmp
inc
cmpsl
mov
popa
mov
mov
mov
loop
lock
dec
sub
or
xlat
cmc
or
rorb
clc
dec
dec
jmp
jne
or
xchg
enter
jae
fisubrs
xchg
clc
and
in
mov
scas
adc
lods
jecxz
shl
sbb
sbb
ja,pn
mov
iret
pop
jae
push
mov
or
nop
mov
or
mov
pop
fbld
inc
sub
gs
dec
inc
mov
mov
add
insb
dec
rep
push
jne
push
xlat
leave
adc
mov
push
hlt
sbb
aaa
mov
adc
jg
icebp
bound
dec
xchg
cwtl
dec
daa
mov
add
or
or
addl
lods
sub
adc
dec
dec
in
pop
add
add
fwait
out
lahf
testl
mov
fdivl
pop
call
mov
add
mov
or
mov
lcall
sub
cmp
mov
jge
adc
lret
push
sbb
addr16
popa
jg
cld
and
in
pop
dec
scas
cmp
xlat
cs
inc
jno
mov
mov
mov
xchg
mov
ret
fildll
clc
cltd
inc
mov
in
lods
sahf
test
fldenv
pop
das
in
into
dec
sub
int
imul
fsubs
lock
mov
hlt
and
fildl
mov
and
fnsave
daa
adc
stc
inc
iret
mov
add
pop
repz
dec
jae
mov
movsb
sbb
lret
mov
iret
jbe
sbb
xchg
lret
nop
mov
mov
cmc
cmpsb
and
sbb
inc
mov
inc
jmp
xchg
leave
jo
xor
lret
push
and
test
adc
and
fldl
or
aam
xchg
push
sub
shll
jmp
lret
data16
xor
scas
xchg
dec
call
inc
stos
pop
test
test
mov
jmp
imul
mov
shrb
ds
mov
add
push
insb
add
adc
or
add
mov
pop
and
pop
jmp
mov
movsb
sti
and
add
sbb
scas
adc
stc
sbbl
adc
repz
aas
cmpsb
fldenv
iret
ss
ljmp
idivb
arpl
xorl
mov
incb
vmovhpd
sub
jne
leave
int
or
adc
outsl
fnstsw
pop
scas
cmpsl
movsb
inc
and
xor
pop
xor
xor
sub
sti
ficoms
in
pop
sub
out
cmp
dec
gs
adc
dec
testl
sub
xor
adc
sub
jg
push
xchg
pop
inc
jp
daa
or
sub
cs
cmpsl
jg
sbb
outsl
adc
movsb
mov
out
jecxz
test
push
and
jne
mov
aam
ficompl
scas
jge
mov
dec
jle
mov
adc
loopne
fs
and
xchg
std
adc
add
lcall
pop
mov
push
mov
sti
or
aad
iret
aam
rcll
nop
outsl
adc
mov
jle
adcb
or
sub
cltd
fsts
pop
cmp
cmp
cld
imul
pop
nop
push
dec
mov
xchg
outsl
insl
les
pop
adc
sbb
xchg
das
add
or
pop
push
jno
adcb
lahf
ret
ficoms
push
cmpsb
rcrl
push
mov
flds
xchg
sub
out
adc
mul
movsb
xor
icebp
lods
sti
fldt
sbbb
shl
in
cmp
lock
stos
fdivrp
cltd
push
push
int
stos
xor
sbb
xchg
jo
sbb
mov
adc
clc
shr
lea
nop
ss
fcomps
pop
ficompl
sub
movsb
fdivr
lods
shlb
enter
xchg
push
xor
leave
int
mov
cmp
fimull
push
xor
adc
int3
sbb
sub
mov
lds
add
lret
pop
and
hlt
lods
and
xor
mov
sub
fimuls
stc
mov
pop
mov
rclb
mov
mov
sarl
mov
int3
push
jnp
in
lods
data16
mov
into
repnz
bound
mov
adc
into
xor
xchg
jmp
popf
test
into
mov
mov
clc
jmp
out
sub
ss
mov
add
shlb
pop
and
or
dec
xchg
mov
adc
movsl
xlat
cmp
jno
fsubr
outsl
scas
pop
lock
push
mov
or
ja
fisubrs
loope
je
adc
mov
push
addl
ljmp
push
mov
xor
and
test
cmpsl
mov
testb
jnp
fldenv
movsl
mov
imul
push
add
popf
adc
push
mov
jbe
test
das
lret
mov
je
test
test
mov
and
and
jae
mov
inc
ficoms
repnz
mov
dec
decl
inc
lahf
stos
fs
fbld
add
scas
data16
ret
cmp
loopne
fstps
daa
mov
je
xor
jo
iret
sub
rcrl
insb
enter
cmp
pop
mov
leave
sti
fidivrs
icebp
adc
ja
loope
sub
mov
les
pop
xor
aas
stos
mov
push
popa
int
jmp
dec
dec
cwtl
sub
les
roll
jg
jbe
jo
adc
jp
shl
lret
lret
sbb
imul
sbb
adc
adc
in
or
mov
insb
jle
loopne
test
leave
mov
jp
test
pop
lods
test
sti
cld
gs
inc
cwtl
and
dec
add
leave
nop
in
jae
xchg
cs
cmp
jl
test
stos
cmp
test
sub
lret
bound
mov
insl
cs
aam
pop
or
movsb
pop
push
jns
stc
cmpsl
pop
lods
dec
pop
mov
lahf
adc
out
lock
jo
adc
xchg
cmpsl
jmp
dec
movsb
and
xor
xlat
and
dec
gs
dec
pop
stos
fidivrl
cmp
aas
sub
in
rorb
add
mov
push
mov
push
fsubrs
mov
mov
je
mov
rcrl
or
mov
sbbl
dec
push
lahf
cwtl
pop
outsl
data16
mov
test
cmpsl
fprem1
mov
mov
fs
or
add
cmp
imul
or
cmp
jns
cmp
xchg
dec
popa
mov
sbb
push
shr
ja
dec
dec
xor
add
lret
mov
loopne
cmp
sbb
mov
in
addl
mov
pop
sub
add
call
pop
sti
jbe
sbb
inc
shrl
jb
adc
imul
clc
fwait
scas
add
cwtl
sub
or
fnstenv
mov
push
popa
pop
xchg
jb
stc
pop
pextrw
mov
or
adc
insb
jle
xor
xlat
in
cmp
dec
loop
mov
add
dec
xchg
jl
add
cmp
push
jmp
popa
jb
loope
jle
adc
lret
mov
arpl
mov
repz
dec
stos
ret
insl
push
xchg
and
das
pop
add
imul
mov
push
repnz
push
mov
jns
cmpsl
in
adc
rolb
hlt
push
lods
mov
mov
scas
push
mov
out
imul
das
call
mov
dec
stos
fadd
jns
jle
jmp
roll
mov
jl
loope
mov
xchg
mov
dec
xchg
jbe
hlt
inc
pop
sbb
add
adc
sbb
jnp
pushf
adc
iret
push
adcb
fisttps
mov
and
dec
xor
sub
sub
xchg
xchg
cli
scas
out
add
sbb
push
pop
add
and
and
scas
sbb
int3
adc
stos
jbe
icebp
pop
xchg
sbb
inc
xlat
lret
jp
lret
lods
mov
jae
cs
or
xor
push
sar
rcrb
out
out
fsubrl
and
mov
gs
cmp
jb
xor
in
mov
pop
aaa
fxch
mov
std
sahf
pop
out
add
lea
mov
loopne
lret
add
aam
movsb
les
mov
sbb
jl
push
test
cmp
dec
icebp
adc
loopne,pt
les
jb
cmpsb
cmp
lds
pop
mov
cmc
loopne
mov
out
sbb
push
dec
pop
push
mov
lahf
jb
loopne
std
mov
and
es
mov
jmp
andb
movsl
sarl
xor
mov
sahf
xorb
iret
enter
xchg
pop
nop
popa
mov
ja
pop
adc
sbb
enter
add
mov
fwait
or
mov
xor
mov
cmpl
aad
push
repz
mov
or
mov
and
outsl
imulb
sarb
in
xchg
mov
fcmovbe
fsubl
add
xor
jbe
cmpsl
js
sub
mov
incl
xor
jmp
and
cmpb
jle
jae
or
daa
mov
std
jns
push
mov
popa
jg
shl
dec
loop
repnz
js
cmpsb
mov
daa
adc
or
jge
push
cmovb
push
mov
inc
aaa
leave
xor
cmp
in
and
arpl
sti
push
sub
ret
hlt
mov
jge
fdivrl
push
fbld
stc
pop
jnp
loope
inc
push
test
out
dec
leavew
fsubrp
int
cwtl
pop
pop
outsl
xchg
clc
nop
daa
mov
scas
sahf
fdivp
aas
xchg
movsl
inc
ljmp
in
or
xchg
int3
arpl
sub
imul
cmp
jecxz
inc
loope
add
lret
jmp
fcmovnu
push
out
cmc
iret
fildl
cmc
dec
mov
dec
sub
push
gs
inc
outsl
push
je
push
rorb
xchg
pop
or
adc
loop
xchg
jle
out
in
int3
mov
popf
pop
fidivrl
add
cmp
fs
inc
push
add
data16
sbb
js
add
xchg
sub
sbb
jbe
rcr
pop
mov
inc
test
adc
mov
pop
lods
ljmp
cmc
fsubs
adc
hlt
iret
lods
int3
jp
dec
fwait
repnz
fs
or
push
jle
mov
xchg
in
outsb
ds
pop
ds
negb
call
add
dec
inc
mov
je
push
xor
and
iret
cmp
push
mov
cmp
jbe
sub
stos
pop
push
imul
mov
mov
mov
xchg
jmp
outsl
adc
ret
iret
jmp
cltd
int
mov
test
adc
ljmp
cmp
xchg
pop
inc
dec
loope
je
ljmp
rolb
js
insl
out
dec
roll
cs
sbb
adc
push
mov
push
divl
and
fdivs
lret
lcall
pop
clc
mov
pusha
mov
fs
push
std
mov
adc
loope
hlt
or
iret
and
lods
mov
xchg
dec
mov
mov
push
ja
xchg
cmpsb
les
loop
sbb
aaa
test
jecxz
push
pop
mov
cltd
loopne
push
popf
ja
jno
push
sbb
jnp
mov
mov
nop
hlt
mov
ja
push
sbb
and
dec
out
jmp
repz
sub
mov
lcall
jmp
mov
and
push
aas
test
jae
rcl
push
jns
test
xchg
xchg
add
dec
pop
lds
aaa
xchg
sti
jl
lods
lods
cwtl
arpl
ds
xor
iret
sub
cmp
xchg
sub
add
ss
push
jmp
dec
add
int3
sbb
and
push
mov
inc
push
loope
les
ss
ret
loopne
mov
mull
dec
mov
and
mov
push
or
test
stos
fiaddl
pop
mov
enter
loope
mov
test
icebp
sahf
shll
addr16
fldl
dec
jae
jecxz
scas
adc
cli
jne
or
xor
pushf
sub
mov
andl
add
lods
jle
mov
cmpsb
rcrb
mov
pusha
clc
jae
or
mov
cli
andb
pop
push
mov
aaa
push
push
dec
in
popf
pop
sahf
fndisi(8087
mov
outsl
push
ficoml
test
jnp
mov
pusha
lret
jo
out
pushf
xor
adc
push
mov
mov
out
mov
out
add
es
or
sub
mov
mov
mov
in
fs
jmp
lret
loopne
jmp
lods
sbb
ljmp
mov
mov
adc
jne
push
mov
or
ret
in
sub
sub
inc
fstpt
pop
mov
in
sahf
out
dec
leave
lcall
lcall
dec
inc
xor
outsb
int
mov
push
out
pop
rcrl
cmpsl
pushf
mov
mov
sarl
outsl
and
dec
pop
shll
ficomps
sbb
or
mov
mov
arpl
outsb
insl
sub
movsl
scas
es
sub
mov
adc
cwtl
push
addr16
inc
mov
and
jne
cmp
test
arpl
out
sbb
jp
movd
scas
shrl
movsb
pop
jmp
sub
in
ret
hlt
or
jge
cmp
call
mov
adc
aaa
stos
fldenv
mov
adc
loop
push
outsb
popa
cs
xor
outsb
bound
jns
imull
mov
add
daa
cmp
pavgb
inc
scas
jb
xchg
fs
jns
jnp
sub
mov
es
mov
leave
pop
daa
inc
cwtl
aam
push
and
pop
pop
mov
hlt
bound
xchg
ja
pop
mov
mov
lods
sti
pushf
xor
out
sti
stc
dec
movsb
mov
mov
mov
pushf
push
inc
sbb
sub
mov
shl
inc
pop
sub
sbb
push
sub
ret
push
ljmp
jno
sub
enter
jmp
nop
sbb
cld
mov
xor
mov
pop
mov
ds
gs
or
shl
inc
and
inc
sbbl
shl
xchg
inc
pop
orl
outsl
cmp
jo
fistl
lret
sahf
cmp
mov
jb
orb
inc
js
repz
xchg
adc
mov
call
mov
jae
or
cmp
shr
jb
cmc
mov
mov
inc
shll
sbb
loope
push
jns
xchg
add
xor
inc
fldenv
inc
cmp
xorb
cmpsl
pop
mov
mov
negb
movsl
pop
sub
jnp
rclb
add
adc
cmp
into
jge
out
cld
subl
test
jno
fidivs
testl
push
leave
hlt
arpl
pop
push
xor
aam
xchg
add
test
xor
add
and
jg
ljmp
adc
lret
in
out
pop
jns
icebp
pop
hlt
jne
fldcw
popa
and
or
push
mov
shrl
scas
movsl
stos
mov
inc
les
leave
pop
sbb
mov
xor
aaa
or
adc
fmul
sbb
mov
and
mov
mov
cld
xor
ds
stos
out
xchg
ds
cs
dec
dec
rcrl
jge
and
cmp
inc
adc
sub
dec
xchg
and
rorb
add
xor
mov
or
or
movsl
mov
xlat
outsb
adc
imul
insb
xorl
xorb
popf
sub
cld
mov
shrb
fs
mov
xor
adc
loope
inc
pop
sub
jmp
mov
sahf
fistpll
xor
push
sbb
jmp
ja
jo
loop
aad
nop
sbb
stos
int3
mov
sub
cli
xor
push
rorb
cld
jnp
rcll
das
or
scas
and
pop
pop
mov
mov
testl
sarb
xor
mov
mov
jl
cwtl
cs
pusha
add
pop
inc
xchg
dec
sub
add
addr16
mov
test
dec
or
imul
push
jmp
les
jp
cmp
mov
sub
movsb
sbb
push
fwait
aaa
adc
mov
dec
das
imul
mov
test
loope
fucom
cmp
cmp
mov
push
inc
jg
shrd
cld
mov
cld
lcall
in
fimuls
test
rcll
int
push
notl
cmpsb
mov
mov
aam
sarl
adc
pop
mov
mov
shl
aad
dec
push
or
inc
fildl
jo
sahf
push
jmp
add
call
cmp
pushf
pop
test
and
xor
ror
insb
jecxz
mov
lock
imul
jns
test
and
inc
lret
xor
sub
adc
jnp
cs
es
pusha
cli
negb
pop
jo
daa
jnp
fidivl
or
call
fwait
dec
sahf
imul
or
mulb
xor
mov
inc
cwtl
mov
insb
xchg
dec
xor
mov
sbb
hlt
or
push
and
dec
adc
sbb
mov
xorl
ja
sahf
or
int
sbbl
dec
or
scas
cmc
mov
pop
flds
xor
das
aas
lods
mov
xlat
or
jp
xor
xor
xchg
dec
push
fcomps
jo
dec
fiaddl
push
mov
subl
or
or
aam
cmc
lea
lock
shll
cltd
in
in
xchg
mov
lock
aaa
xor
jnp
into
aas
sti
mov
push
mov
mov
adc
testl
lods
add
sub
aas
adc
ret
ds
cwtl
and
lret
mov
mov
insl
inc
fwait
jo
cmp
shlb
push
dec
js
xchg
push
gs
stc
jmp
out
hlt
mov
pop
arpl
mov
std
test
popa
mov
adc
data16
icebp
mov
and
imul
xchg
push
nop
in
popa
push
jb
je
xchg
lock
movsb
jns
xor
jno
mov
add
lds
dec
lds
xor
inc
or
es
lret
sbb
mov
scas
add
out
jmp
sti
jp
mov
push
jle
dec
cmpsl
lock
xor
aas
outsb
out
push
sub
out
ret
push
xor
movsb
mov
je
inc
imul
bound
inc
mov
jecxz
int
mov
or
imul
mov
add
dec
xor
aad
insb
sbb
lds
mov
into
loop
lahf
push
inc
inc
sahf
dec
out
les
rcrl
sbb
push
push
xor
mov
andb
adc
fs
or
mov
dec
fsubl
aas
sbb
sub
adc
mov
xchg
sub
rclb
aad
insb
insl
jge
inc
mov
sahf
test
lahf
pushf
cli
stos
scas
or
cmp
sbb
or
mov
dec
stos
aad
pusha
pop
int3
or
and
ss
enter
xchg
jmp
mov
nop
lods
push
ret
jbe
jnp
cs
add
lahf
lds
sbb
inc
inc
pushf
sbb
movsl
jns
clc
mov
int3
arpl
das
ljmp
pop
adc
das
xchg
and
pop
sub
clc
add
enter
outsl
daa
xchg
fistps
shl
pushf
dec
lret
jns
and
mov
add
inc
rorb
dec
mov
fisubrs
or
mov
in
ljmp
cmp
push
fwait
mov
lds
movsb
enter
pop
pushf
push
rcrl
mov
gs
adc
or
mov
sti
pop
jle
shrb
arpl
mov
add
cmp
pop
hlt
lock
fimull
mov
mov
xchg
lea
movsb
mov
loop
push
adc
adcb
aaa
jae
inc
push
cwtl
mov
dec
mov
scas
call
sahf
andl
dec
jmp
and
jo
shrb
xor
pusha
scas
xor
push
daa
mov
jp
dec
aam
xchg
mov
jmp
repz
dec
jecxz
sub
cmp
lret
sbb
jmp
je
and
mov
loopne
jp
mov
xchg
mov
fwait
icebp
cwtl
inc
addl
xchg
jp
dec
in
sbb
inc
xor
xchg
cwtl
in
sbb
call
popa
sbb
pop
sbb
sub
imul
pop
sub
push
inc
and
add
mov
mov
addr16
adc
jmp
outsl
repz
jle
sub
scas
addb
sub
inc
fistpll
xchg
sub
push
lcall
fmuls
xchg
stos
dec
je
jbe
mov
popa
add
and
mov
rcr
mov
lods
jecxz
fnsave
inc
enter
repnz
jns
fstpt
sbb
stos
clc
push
push
bound
xchg
jg
or
cmp
gs
or
xor
dec
push
jecxz
jge
js
mov
jb
sbb
sbb
sub
sti
push
mov
fsubrl
data16
mov
test
cld
in
or
std
xorb
push
data16
lock
jecxz
enter
push
fldenv
cld
pop
repnz
lea
pop
sbb
rcll
mov
or
add
cmp
dec
dec
rclb
add
arpl
push
mov
xchg
test
jg
pop
or
pushf
push
or
dec
out
ds
and
in
cltd
loopne
sub
xorl
inc
sub
mov
subl
insb
inc
mov
jp
jecxz
das
mov
lods
cmp
test
pop
cmpsb
xchg
das
cmp
cmp
mov
shll
add
rcll
xor
cmp
push
jae
dec
dec
and
clc
jno
jl
aas
jp
fsubl
push
xchg
xor
cmp
fidivl
fnstenv
xchg
aaa
jbe
mov
sahf
push
xchg
cld
lcall
in
dec
inc
jl
push
scas
outsb
adc
xchg
jp
fdivrs
cwtl
inc
xor
and
adc
inc
inc
test
add
pop
and
sub
aad
xchg
or
dec
stc
dec
pop
push
lcall
rcl
mov
mov
lods
ds
pop
rcrb
popf
lcall
lods
insb
pop
jno
xor
add
js
test
fwait
inc
mov
int3
loopne
jmp
sub
adc
pushf
push
jmp
mov
inc
data16
push
fstp
call
push
cli
xor
pusha
push
jae
test
rcl
mov
ds
jno
ret
jne
inc
push
jns
in
pop
test
cmp
dec
and
mov
dec
rol
jl
or
dec
cmp
test
mov
inc
sbb
pop
cmpsl
dec
pusha
xchg
mov
cmpb
imul
pop
icebp
cmp
rcl
sub
cli
jne
ret
pop
scas
jnp
fnstenv
adc
mov
subb
sub
jl
pop
in
movsb
cmp
not
push
ror
ret
pop
rcrl
mov
aas
enter
loope
fiaddl
popf
xchg
mov
or
pop
mov
jg
shlb
ret
pop
outsb
sarb
xor
fidivrs
imul
push
stc
cmpsb
andb
xor
imul
cltd
pop
lcall
fildll
scas
mov
mul
mov
clc
add
idivl
inc
jb
pop
inc
jecxz
jp
out
cmpsb
out
fisubs
lea
outsb
arpl
inc
leave
sar
pop
mov
push
push
pop
fistps
sub
lcall
loope
push
cmp
push
gs
xchg
mov
negl
or
adc
mov
jne
inc
push
or
inc
arpl
aas
dec
pop
pop
push
repnz
xchg
add
sarl
stos
xchg
fisttpl
jno
sbb
daa
mov
lods
cmp
pop
push
fimuls
popf
sub
xlat
ret
ret
leave
xor
ljmp
mov
test
mov
dec
add
jmp
loop
cmpsl
jmp
movsb
aas
mov
fbld
mov
stos
ss
pop
mov
mov
jecxz
mov
pop
cmpsb
hlt
jmp
mov
push
fildl
xchg
repz
mov
repnz
arpl
test
es
adc
les
inc
mov
dec
insl
mov
shll
mov
loopne
cmp
addb
fists
lea
mov
movsl
dec
mov
pop
test
dec
icebp
lea
add
sbb
push
rcrb
sbb
sahf
adc
mov
adc
mov
int3
jae
add
sub
jge
aad
xchg
dec
aad
dec
jg
cld
pop
rorl
xor
mov
rolb
dec
push
mov
sbb
into
pop
mov
lahf
jmp
mov
popa
xchg
fdivp
lcall
add
lret
fdivrs
inc
test
ja
lahf
stos
adc
mov
pop
push
das
or
sub
jae
les
shll
outsb
hlt
js
lret
mov
dec
cmp
or
aam
and
jnp
out
ja
das
adc
dec
ret
mov
cmc
cs
faddp
insl
cmp
call
mov
mov
clc
sub
lcall
mov
mov
movsl
lcall
les
scas
dec
mov
imull
xchg
scas
cld
dec
pop
mov
xor
es
mov
ds
fs
sbb
xor
and
shrl
imul
jae
xor
push
xchg
jge
mov
shl
adc
pop
inc
insb
hlt
stc
cmpsl
iret
fildll
jns
jp
mov
adc
mov
pop
mov
inc
fcoms
push
jge
hlt
jae
cmp
pop
in
push
imul
sub
and
gs
cmp
sbbb
mov
lds
cmp
addr16
jbe
jnp
pop
sub
cmpsb
dec
es
int
xchg
lret
cmp
push
jmp
pop
ds
sbb
jb
pop
movsb
jae
sarl
or
and
nopl
stos
mov
sub
jecxz
filds
fwait
jle
mov
or
mov
push
icebp
lret
push
pusha
pusha
and
sbb
jbe
sarb
pop
sbb
js
repz
push
mov
arpl
loope
or
xor
jb
aam
rcrb
addr16
mulb
sub
mov
icebp
adc
or
adc
sub
dec
enter
mov
ret
sub
fisttps
push
adc
dec
sbb
fs
mov
ja
jo
pop
xchg
or
in
jg
lahf
shl
dec
int
pop
js
add
out
icebp
mov
loope
repnz
bswap
shrb
shrb
or
out
or
jle
loope
pop
pop
fcomi
shlb
xchg
addb
xchg
and
sti
mov
scas
mov
jae
repz
int
into
adc
imul
xchg
sub
push
mov
cmpsl
push
jne
inc
sbb
bound
movsb
outsl
shll
dec
and
pop
sub
cmp
push
fnstcw
aaa
xchg
add
lods
mov
add
sub
scas
xchg
movsb
imulb
cmp
into
add
sbb
jecxz
or
out
inc
jne
mov
cmc
sub
mov
out
cld
adc
ljmp
xchg
cs
out
or
fisttpll
sbbl
jle
into
int3
fdivrp
sbb
punpckhbw
adc
test
shrl
sub
sub
in
les
pop
pushf
std
jbe
mov
dec
popf
inc
imull
out
inc
cwtl
cwtl
dec
pop
jmp
daa
cmp
stos
lea
and
jb
popa
inc
push
addr16
mov
das
mov
push
aad
pop
popf
or
pop
outsb
xchg
mov
sysret
notb
lret
sbb
out
mov
push
jno
pushf
cli
sub
mov
test
fsubl
fiaddl
mov
popa
testl
mov
adc
mov
push
xchg
and
fiadds
das
jg
and
push
mov
mov
shr
pop
inc
sbb
shll
or
jno
outsb
popf
mov
xchg
jle
sbb
mov
mov
scas
xchg
push
lcall
jle
cld
jle
sbb
push
xor
mov
inc
pop
insl
scas
xchg
insb
out
movsb
mov
fdivrl
dec
repnz
push
push
div
xchg
mov
hlt
icebp
paddd
shrb
insl
and
jp
imul
cltd
out
jo
push
cmpsb
fs
in
sbb
mov
filds
addr16
dec
loop
mov
sub
push
xor
ds
add
mov
test
test
cmc
push
push
cmpsl
sbb
and
pop
mov
int
clc
xchg
outsl
movsl
adc
jne
shlb
mov
jno
mov
aam
sbb
adc
mov
xchg
add
adc
pop
cmc
addr16
xor
sti
push
sub
divb
pop
cs
push
sbb
and
cmpsb
arpl
inc
sbb
sti
js
inc
daa
cmc
pop
lret
sub
dec
lods
mov
dec
pop
mov
mov
mov
test
aad
inc
lods
and
push
or
fimull
fwait
sbb
gs
testl
rolb
shrl
ret
sbb
jno,pt
fs
jbe
mov
pop
lcall
xchg
jmp
ret
sbb
push
cmpsb
frstor
adc
gs
add
imul
aad
test
mov
jbe
mov
sbb
aas
mov
clc
aad
into
test
fnstcw
jl
dec
pop
subl
mov
pop
pop
sub
jg
jno
je
and
stos
std
xchg
fmull
cmpsl
cmpsb
mov
sub
add
test
lcall
jecxz
xchg
cwtl
xor
adc
stos
insl
sbb
out
xor
popf
jo
cmp
cmpsl
orl
lock
adc
cmovb
pop
push
lret
xchg
cltd
xchg
lods
inc
jbe
xor
and
es
cmp
cmp
lds
adc
lret
aam
into
ja
xor
push
mov
adc
pop
cmpsb
leave
cli
push
jb
out
jecxz
clc
inc
inc
push
stc
test
jge
test
xchg
cld
jg
call
aam
inc
or
mov
dec
push
repnz
in
fsub
repz
pop
sub
int
add
sub
jne
imul
fbld
sbb
sbbb
rolb
andl
std
in
fildl
inc
insl
cmp
push
or
adc
mov
pusha
es
mov
lea
jno
adc
inc
mov
dec
out
loope
jmp
cld
insl
sub
mov
jo
pop
lock
add
jns
mov
pop
push
ror
xor
dec
mov
sub
daa
outsl
sbb
cli
push
sbb
jo
ds
mov
imul
mov
cmp
mov
imul
out
loope,pt
shll
mov
fnstenv
mov
mov
enter
mov
and
stc
or
cltd
shlb
aad
je
add
fdivrl
sbb
fwait
mov
mov
fs
adc
je
lods
push
xor
cwtl
sbb
leave
test
cmpsb
fucomi
insl
inc
out
subb
ficompl
subl
sub
pop
mov
insb
fisttpl
out
mov
cmp
xlat
lret
and
mov
mov
call
dec
dec
fistpll
mov
into
jno
test
adc
cmp
jns
inc
les
pop
sub
cmp
insl
mov
jno
fistpl
mov
and
stc
add
scas
daa
pop
sub
cld
movsl
cmp
fcompl
fisttpl
jp
mov
ffreep
add
mov
and
sbb
mov
std
cwtl
xor
mov
stc
aam
fsubrp
rol
mov
push
pop
imul
out
sti
push
enter
and
stos
cmp
cmp
daa
mov
jge
rcrl
fdivl
hlt
dec
cltd
outsb
mov
mov
jle
shll
mov
arpl
adc
fs
adc
xor
insl
mov
and
shlb
sbb
xchg
or
xor
mov
in
enter
ja
mov
cmpsb
je
and
lea
int3
push
loop
and
cltd
std
pop
cmp
clc
jae
repnz
scas
fcomi
out
inc
stos
out
pop
xchg
in
sahf
in
pop
lods
cmp
ds
popa
clc
loopne
and
out
push
cli
loopne
xor
mov
movsb
adc
push
jle
cs
add
scas
js
push
popf
pushf
xchg
leave
test
cmp
jg
inc
inc
repnz
mov
lods
xlat
and
test
gs
pushf
jo
sub
mov
loopne
dec
pop
sub
stos
jo
fcompl
jae
sbb
push
lods
jns
add
jnp
shl
shll
scas
and
mov
nop
mov
inc
push
pushf
cmp
ja
fisttps
inc
cld
pushf
dec
inc
adc
mov
push
leave
ret
lods
imull
out
xchg
je
or
data16
test
xor
jl
push
inc
enter
stos
aaa
mov
test
and
or
mov
sarl
push
cmc
dec
xchg
xchg
repz
sbb
push
add
mov
stc
orl
or
dec
mov
or
insb
insl
mov
sub
push
jmp
arpl
in
push
jb
and
push
fisubrs
lahf
push
push
imul
sub
inc
cmp
mov
add
movsb
int3
xchg
lret
les
test
dec
jmp
in
xor
shll
aad
or
jne
push
mov
outsl
push
dec
or
out
jmp
popa
xor
xchg
pushl
sub
sub
fdivl
mov
ror
sub
clc
cmpsl
sub
ja
cld
xchg
aam
cmpb
shl
pop
in
dec
add
test
shll
jecxz
lds
or
aad
xchg
adc
imul
adc
add
jmp
mov
fsubl
pushf
fldcw
cmp
outsb
dec
aaa
subl
jo
popa
push
inc
cmpsl
push
sbb
push
pushf
pop
dec
aad
sahf
lods
jle
xlat
testl
nop
data16
imul
scas
adc
enter
lret
push
mov
ja
fs
cwtl
jne
sarb
popf
mov
inc
push
sub
jnp
or
dec
outsb
or
shlb
jge
mov
and
cmp
call
push
jnp
jno
push
inc
popf
xchg
xor
addr16
pop
xchg
sbb
push
jns
cmp
movsl
es
lret
xor
mov
test
jmp
xchg
jmp
int3
pop
or
pop
stos
ret
call
cmp
in
add
dec
jecxz
inc
and
xchg
fsub
pop
out
aaa
pop
mov
jl
sub
add
sbb
loopne
out
test
inc
cmp
xor
sarl
mov
ficompl
sub
adc
aaa
arpl
or
aaa
int
push
popf
inc
out
js
mov
mov
pop
jp
and
mov
js
ror
jp
pxor
lret
adc
pop
dec
cmp
mov
push
fisttpl
ror
jge
ficoms
cmpsb
pop
in
pusha
jp
mov
test
and
cs
jb
jecxz
scas
pop
nop
call
jmp
dec
rorb
xchg
arpl
pop
dec
jb
jecxz
inc
fnstcw
inc
add
loopne
adc
mov
popw
arpl
out
adc
pusha
cmpsb
jp
add
jno
pop
xchg
lea
mov
cmpsl
dec
fisttpll
popa
sub
adc
mov
mov
inc
arpl
loop
addr16
scas
jge
xor
fwait
and
cwtl
ja
fwait
bound
arpl
orl
stos
stos
mov
xchg
rclb
shlb
in
cltd
mov
or
adc
mov
repz
aaa
into
pop
adc
insb
mov
fstpl
xchg
imul
cmpsb
jno
mov
adc
mov
mov
mov
xchg
mov
test
jecxz
xchg
lret
xlat
leave
lret
pop
imul
xchg
cmp
popf
xor
jne
clc
into
add
push
jno
jns
stc
test
inc
cmp
and
mov
ljmp
xlat
cmp
jp
dec
shll
add
xorl
xor
sbb
jno
xor
push
mov
adc
pop
xlat
cld
mov
adc
sbb
aad
sub
jl
movsb
out
xchg
sbb
neg
sub
out
adc
xor
xor
xorb
aas
mov
in
pop
adc
dec
or
stos
mov
stos
lods
jp
divb
call
mov
push
inc
lcall
xchg
repz
in
mov
xorb
rcl
and
push
mov
stos
or
stc
or
mov
lcall
and
add
cld
mov
rcrb
mov
xor
adc
push
xchg
in
xor
jg
imul
jbe
fdivr
fwait
daa
ret
xor
jmp
loop
insb
mov
bound
add
xor
cmpsb
out
ljmp
mov
pop
shlb
dec
int
fsubr
mov
cwtl
mov
dec
pop
imul
and
dec
int
mov
out
xor
push
fsubr
int
into
fidivl
sub
shlb
or
clc
jle
mov
in
pop
int
jmp
jecxz
test
add
xor
add
push
lods
jo
enter
jecxz
orb
mov
xchg
int
pop
les
adc
aas
push
add
or
aad
sbb
stos
rolb
loop
std
push
lods
scas
push
je
adc
xor
mov
add
cmc
les
jl
sub
outsb
mov
shlb
mov
sti
inc
sub
aaa
dec
jae
sbb
lods
push
and
push
cmpsb
mov
push
xchg
mov
test
mov
and
addb
mov
hlt
mov
aam
aad
pop
das
mov
pop
rorl
jl
jo
push
call
pusha
ss
xchg
stos
mov
pop
icebp
dec
icebp
nop
cli
dec
insb
enter
add
pop
fisttpl
cld
push
inc
repz
ljmp
cmpsl
xchg
pop
pmulhw
lods
ss
aam
dec
and
lds
aam
stos
add
bound
sbb
and
push
sub
loop
sbb
into
xlat
push
inc
cmp
push
add
sub
xchg
ja
dec
fldl2t
push
leave
fisubrl
fldcw
cwtl
mov
xor
inc
sub
cmpsb
mov
pop
ja
and
addps
jnp
push
arpl
test
or
mov
inc
daa
clc
fnstsw
mov
mov
and
nop
rorl
popf
pusha
cmp
pushf
cli
xchg
mov
push
loop
lods
loop
fisubs
pushf
outsl
xor
jne
pop
cld
test
or
loop
nop
pop
mov
or
daa
daa
jnp
or
or
or
fildll
jecxz
mov
mov
mov
cmpsl
pop
mov
mov
add
sbb
and
dec
sbb
or
lods
mov
fs
outsl
dec
add
push
sub
lock
andl
mov
and
fmuls
cs
shll
xor
sarb
jg
icebp
cmp
loope
mov
shl
dec
in
sbbl
mov
adc
scas
addb
sahf
clc
sahf
xchg
data16
jmp
mov
inc
xor
xchg
arpl
push
jns
mov
cs
fcoml
adc
icebp
xor
pushw
push
mov
jmp
sbb
dec
fwait
mov
inc
xor
je
push
mov
ljmp
jbe
enter
and
mov
push
fisttpll
push
xchg
mov
xchg
cs
rcrl
sub
je
jb
loop
xchg
mov
jp
stos
cwtl
arpl
leave
mov
push
mov
mov
cmp
les
or
xor
jge
sarb
lret
fidivs
sub
int
xor
enter
aas
mov
jge
cltd
push
jns
push
add
ja
sub
ljmp
imul
mov
test
enter
pop
ret
lahf
xor
jo
shr
out
loope
sub
aas
inc
outsb
fwait
addr16
jp
or
outsb
shll
mov
rcrl
lar
xchg
pop
pop
cmp
arpl
in
dec
and
sbb
xor
inc
decl
cmc
loopne
push
pop
je
sub
inc
rol
out
and
pop
shr
inc
jg
fnstenv
inc
xchg
or
xchg
mov
xor
mov
jae
sub
outsb
mov
daa
outsl
cltd
inc
fucomp
nop
add
shll
loop
push
dec
push
in
inc
in
sub
lret
lcall
fstpt
loope
mov
jnp
xchg
insl
add
xchg
jne
mov
mov
test
imul
jp
popl
and
fadds
int
sti
jbe
push
dec
add
aad
and
xlat
mov
dec
imull
cmp
xorb
das
rorb
movsl
xchg
xor
lcall
inc
jl
adc
xchg
test
mov
ja
jp
pop
je
out
mov
xor
getsec
scas
sbb
pop
loop
fildl
add
cmpsl
push
cmp
dec
orb
loope
nop
jmp
out
movsl
mov
ljmp
repnz
stos
push
mov
push
xchg
cmpb
sbb
or
enter
loop
and
cmp
clc
cs
and
mov
adc
dec
pop
jecxz,pt
pushf
dec
cmp
push
sub
fldenv
jb
test
outsb
xor
or
adc
std
xchg
fimuls
stos
cmp
shlb
inc
jecxz
in
scas
jecxz
mov
mov
cli
scas
xchg
mov
icebp
or
dec
mov
inc
cwtl
jne
jge
arpl
mov
lods
jo
or
xor
sub
push
or
ret
ret
xor
xor
jg
push
push
push
or
push
ds
xor
lfs
rcrb
enterw
add
and
nop
push
fiaddl
mull
and
repz
jmp
and
mov
push
pop
mov
and
pop
fdivrl
xchg
push
pop
mov
sarl
pinsrw
add
lods
push
ljmp
out
fistps
sub
pop
push
idivl
sub
xchg
adc
mov
sbb
cli
lods
push
pop
mov
shlb
imul
push
push
mov
or
mov
xor
mov
stc
xchg
sbbb
push
inc
mov
dec
sbb
push
mov
iret
iret
and
scas
push
mov
xor
pop
add
adc
mov
or
loope
addr16
dec
mov
ss
pop
dec
lods
add
je
inc
ds
xchg
push
jecxz
mov
sahf
outsb
sub
pop
pop
and
pop
and
mov
test
adc
dec
inc
dec
sbb
add
fadds
shll
xchg
add
mov
cmp
ljmp
push
shll
push
inc
jns
push
inc
lahf
push
mov
fistpl
repnz
in
fstpt
loopne
int3
sub
xlat
cmpsl
out
push
push
cwtl
loop
mov
mov
cmp
ljmp
cwtl
fmul
test
and
fcomps
and
imul
pop
jmp
push
mov
std
xchg
addb
movsb
mov
jnp
andl
push
scas
out
pop
inc
scas
xor
movsb
leave
gs
sub
add
repnz
std
mov
push
pop
sbb
inc
mov
inc
sub
popf
sub
dec
ljmp
mov
out
movsl
in
jle
aaa
and
xchg
mov
stos
jmp
mov
or
lcall
aad
mov
mov
xchg
or
sbb
ret
enter
addb
lock
aaa
orl
sbb
cmp
lret
xlat
scas
mov
ret
pop
lea
loop
cli
mov
repz
stos
test
dec
iret
mov
imul
sub
and
sti
stos
inc
leave
push
aas
push
mov
jmp
out
or
dec
decl
or
pop
xor
scas
mov
cmp
rorb
cltd
mov
mov
adc
push
sti
jae
mov
mulb
aam
sub
cmp
out
mov
loop
add
xor
xchg
cmp
gs
cmpb
cmp
lret
insl
les
adc
pushf
jae
leave
mov
aam
iret
add
xor
inc
mov
and
sbb
push
sbb
int
lods
cmp
push
xchg
xchg
out
ljmp
jmp
pop
or
cmpsl
jle
push
test
in
sub
hlt
jb
cmp
imul
mov
les
insl
lret
loopne
sub
in
sbbl
push
cmpsb
mov
or
sbbl
adc
mov
ret
mov
out
lock
sub
cmp
jle
xchg
mov
xlat
mov
movsb
mull
insb
iret
push
outsb
or
and
fcomps
shl
int
and
hlt
push
je
mov
out
ss
lcall
push
sub
enter
mul
jge
test
mov
add
pop
push
and
nop
add
mov
lods
jo
je
and
es
mov
dec
pop
cmp
cmpsb
mov
mov
adc
das
shll
les
mov
jbe
popa
sub
sbb
into
cmc
or
add
mov
push
mov
clc
or
lods
push
clc
clc
push
movsb
push
push
sbb
lods
mov
xor
or
cmpsb
int
mov
push
addr16
std
cmc
ss
fs
lock
popf
les
in
out
cmp
sub
pop
push
rcrb
or
sub
mov
outsb
mov
xchg
mov
jnp
imull
pop
arpl
popf
in
rorb
xor
iret
add
jne
clc
shrl
inc
data16
and
xlat
mov
mov
ret
jg
cmp
fimull
pop
shr
lods
mov
xadd
jns
sub
icebp
cmc
rcrl
outsl
sub
gs
fwait
mov
mov
popf
dec
mov
paddq
inc
rorl
imul
jmp
jecxz
mov
das
jno
imul
dec
test
lods
mov
imul
icebp
outsb
dec
ficompl
cs
adc
pop
addb
pop
ret
jp
dec
aam
and
into
dec
sub
enter
mov
sub
outsl
les
mov
dec
mov
jmp
mov
daa
bound
sti
in
lahf
xor
adc
icebp
mov
dec
loopne
aam
and
scas
and
lret
mov
pop
xor
ds
rcrl
sarl
fwait
in
movsl
push
daa
adc
rcrb
std
in
or
push
mov
lret
ja
loop
and
pop
cmc
xchg
add
cmp
ficompl
repnz
pop
imul
popa
jnp
adc
shll
inc
pop
scas
push
or
push
addr16
sub
inc
push
lahf
mov
fcmovne
jbe
aam
xchg
and
test
loop,pt
repnz
je,pn
cmpsl
das
xor
enter
hlt
xchg
xlat
clc
mov
cmp
adc
cld
and
test
shrl
sti
jg
fiaddl
cmp
sbb
add
or
sbbl
test
dec
out
sub
add
enter
inc
pop
lock
mov
stos
test
push
add
hlt
dec
and
aam
fiaddl
bound
pop
sub
adcb
es
and
repnz
adc
outsl
loop
loop
dec
cmp
jp
jne
ret
imul
scas
stos
pop
addr16
mov
xchg
xor
adc
cmp
lea
ljmp
iret
and
jbe
add
xchg
mov
movsb
adc
or
adc
fldenv
les
cmc
ficoml
repz
jl
inc
add
ficoml
xchg
lea
mov
call
sub
outsl
push
mov
dec
and
stc
popf
rolb
push
inc
lret
popa
xor
jo
push
jno
add
idivl
mov
push
out
neg
ret
jne,pt
sub
xchg
cmp
data16
xchg
or
mov
lea
mov
leave
outsl
mov
loope
rep
pop
mov
cmp
stc
mov
fdiv
mov
push
montmul
cmpsb
add
jp
add
sub
jp
dec
pop
cmp
fcompl
add
dec
aaa
shl
xchg
int3
jp
imul
ljmp
xor
pushf
cmpsb
lock
pop
test
sahf
ja
sbb
jae
mov
add
loop
bound
mov
xor
pop
pop
pop
pop
mov
and
jmp
fwait
clc
sahf
nop
or
xor
lret
ffreep
jg
lahf
and
popa
or
sub
cld
pop
or
jmp
mov
mov
lods
sar
in
mov
popf
jle
cmp
sub
dec
xchg
in
ss
lret
push
call
mov
and
jbe
pop
push
stos
decb
jne
outsb
rcrb
leave
mov
mov
pushf
dec
rcll
cmp
or
mov
stos
jmp
pusha
test
mov
stos
adc
pushf
mov
sbbb
jae
outsb
lods
aas
dec
mov
dec
ret
jae
mov
push
call
in
les
les
iret
loope
repz
iret
pop
dec
loop
mov
imul
or
mov
outsl
popa
xchg
pop
cmp
jnp
popf
daa
or
call
add
jge
in
mov
xchg
mov
es
push
xchg
je
xor
fcmovne
xchg
push
aaa
push
cmp
mov
inc
xor
cmpl
pop
xor
push
scas
push
pop
xchg
inc
inc
push
jmp
mov
mov
inc
enter
mov
push
mov
out
xor
andl
lock
add
je
sub
mov
xor
jecxz
pop
in
mov
dec
cmp
jle
cmp
cltd
data16
lret
push
mov
cmpsl
mov
fists
mov
xor
pop
mov
mov
xchg
or
sti
xor
jg
mov
pop
loop
adc
pushf
and
dec
or
dec
shlb
shl
je
pop
stos
xorb
xor
inc
ds
inc
fcmovne
push
xor
leave
into
sbb
pusha
inc
fdivrl
add
dec
jecxz
sbb
pop
jecxz
ljmp
mov
insl
pop
adcb
mov
sahf
xor
xchg
cs
je
mov
scas
adc
xor
add
inc
cmp
ss
test
ret
xlat
or
sub
aad
mov
lds
or
mov
fwait
xchg
sbbb
or
inc
mov
add
mov
mov
enter
jo
xor
lods
dec
push
ljmp
jno
pop
xchg
ss
lahf
std
fdivrl
sbb
cmp
mov
dec
dec
addps
jp
in
inc
and
xlat
sub
lahf
das
lret
int
out
ljmp
repz
test
or
mov
jp
cli
or
mov
sahf
push
xlat
and
loope
mov
and
mov
inc
adc
mov
divl
sub
mov
scas
test
movsl
sub
sub
mul
lea
bound
jl
lods
mov
jge
jne
dec
mov
lea
jp
dec
inc
enter
ss
aas
adc
xchg
jae
dec
fs
int3
inc
pushf
xor
jmp
mov
jmp
xchg
sbb
das
test
or
sbbb
cli
jb
xor
and
mov
pop
das
jg
pop
dec
das
jnp
adc
lods
adc
or
jl
js
dec
fldenv
ljmp
jb
adcb
push
sarl
adc
out
iret
sbb
dec
or
cmpsl
fnsave
cs
sti
ss
push
test
test
stos
inc
lea
leave
ss
jmp
scas
adc
sarl
mov
inc
inc
xor
cmpsb
cmpsl
and
xchg
scas
and
std
aam
xlat
data16
popf
cwtl
xor
leave
mov
add
gs
rorb
xchg
or
fisubrs
insb
aaa
fcmovb
push
push
pop
rcrl
adc
xorl
movb
push
dec
jmp
cwtl
inc
xlat
ss
and
push
insb
out
lods
inc
lret
pop
add
enter
int3
sub
sarb
adc
stc
or
cwtl
das
jne
dec
icebp
loope
push
out
add
push
aas
sbb
orl
lcall
in
das
mov
or
pusha
jle
mov
dec
popl
stos
mov
test
inc
pop
scas
pop
cwtl
je
or
jg
xchg
sbbl
xor
dec
outsb
rcrl
dec
mov
adc
arpl
xchg
insl
or
ret
mov
mov
icebp
pop
das
mov
sarl
popf
xchg
or
loopne
aaa
and
inc
push
jmp
test
mov
aas
xor
push
sub
cmp
fsubr
call
sti
jle
fildll
mov
stos
add
mov
ficomps
mov
ret
rcrb
or
push
inc
imul
adc
jmp
mov
pop
icebp
adc
mov
aas
test
and
fdivrs
mov
enter
push
icebp
outsb
cmpsb
loop
pop
js
xchg
xchg
ss
push
fcom
mov
push
sub
push
xor
mov
pop
daa
add
sub
sbb
mov
loope
data16
dec
or
xor
std
xchg
xchg
cmp
sub
rcrl
imul
jbe
jecxz
lret
mov
mov
add
xchg
je
jo
call
lock
cmpsb
xor
add
call
jb
mov
pop
in
inc
decb
enter
cwtl
lods
xchg
sub
in
adc
out
fs
sub
test
mov
sarl
ret
sub
cmpsb
and
jb
xor
shll
dec
ja
mov
ljmp
inc
jbe
add
mov
lods
cmp
loopne
fst
sub
or
push
lds
jge
stc
je
movsb
add
jg
xlat
shlb
psrlq
jnp
loope
movsl
xchg
pop
mov
inc
jo
cmp
jle
inc
sub
lcall
or
dec
push
xchg
int3
jno
lods
inc
pop
sub
lret
mov
shlb
pop
imul
aas
lods
ljmp
call
and
lret
dec
decb
fimuls
sbb
mov
outsl
xor
fxch
aaa
mov
fldl
dec
and
cltd
fsubrs
jmp
adc
inc
popf
push
adc
push
stos
lock
rolb
xchg
insl
jnp
pop
xor
les
out
cwtl
std
add
and
xchg
repnz
data16
jl
xchg
mov
xor
sub
mov
cmpsl
ret
stc
jno
iret
sub
push
popf
sub
dec
decb
inc
dec
repz
rep
dec
dec
loope
cmp
dec
test
hlt
out
push
push
lcall
jbe
mov
jo
dec
dec
fldenv
cmp
imul
jecxz
xor
xchg
aam
in
out
outsl
jnp
in
out
arpl
jp
adc
cmp
insb
ljmp
enter
sti
cmp
loop
scas
outsl
mov
iret
xchg
inc
mov
push
push
adc
mov
outsl
adc
add
push
mov
leave
dec
lret
inc
popa
add
mov
xor
cwtl
and
sbb
push
loopne
pop
dec
mov
rorl
dec
xor
mull
jbe
adc
adc
mov
push
sahf
mov
push
inc
jecxz
ljmp
ds
adc
aas
xor
xlat
outsb
mov
adc
dec
or
inc
xor
repnz
inc
adcl
or
pop
in
std
xlat
outsb
out
push
and
sarl
jl
jmp
jle
push
lods
dec
popa
test
pop
jae
push
sub
sub
pop
dec
int
je
mov
cmpsl
dec
ret
addr16
jne
dec
xor
adc
jmp
sub
sbb
outsb
xor
pop
jecxz
mov
jo
adc
mov
shrl
inc
sti
adc
xchg
data16
xchg
arpl
dec
add
or
in
daa
inc
cli
xor
int3
call
and
cmp
or
in
sbb
lret
cs
in
outsl
fld
adc
out
into
pop
enter
and
iret
mov
mov
fnstsw
mov
push
rolb
xor
add
push
stos
dec
and
arpl
nop
loope
pop
divl
add
mov
insb
jnp
loope
lds
hlt
iret
push
sub
test
pop
cmc
in
mov
mov
pusha
mov
push
push
jecxz
or
pop
pcmpeqb
btr
push
idivl
mov
shrb
mov
mov
push
insl
ret
cltd
std
sbb
bound
add
push
fstps
in
loop
xchg
ret
mov
test
mov
mov
movsl
hlt
xchg
xchg
adc
xor
popf
lret
out
jno
jae
sarl
cmp
or
add
loope
pop
cltd
in
mov
adc
fnstenv
mov
mov
mov
xchg
pusha
enter
fsub
push
and
mov
sbb
adc
and
mov
aaa
test
inc
mov
push
popf
mov
mov
mov
mov
cltd
aad
xor
popf
mov
sub
and
mov
xchg
mov
cmpsb
inc
push
imul
in
jb
adc
bound
shll
jbe
jns
out
test
pusha
popa
scas
push
sbb
mov
sbb
jg
push
push
repnz
xor
xor
add
loopne
push
inc
dec
adc
sub
popf
clc
mov
test
mov
fcomip
mov
mov
and
mov
ss
dec
mov
xchg
add
or
stc
stos
movsb
jno
xor
out
les
xchg
and
push
mov
push
insb
pusha
cmp
into
mov
pusha
test
or
sub
notb
pusha
icebp
fldpi
xor
sub
cltd
in
xor
mov
mov
add
cmp
mov
popa
and
fldcw
inc
push
xchg
jne
sub
mov
push
cmpsl
pop
insl
mov
jle
std
sub
inc
stos
or
fnstsw
cmc
mov
fisubrl
pop
pusha
nop
and
push
fistpll
xor
cwtl
mov
inc
cmpsb
adc
mov
xlat
jne
lea
mov
ror
repz
hlt
push
hlt
push
pop
cmp
out
cs
test
test
movsl
xchg
sbb
aam
jb
lahf
cmc
icebp
xchg
sub
sqrtps
jb
test
push
add
xchg
or
lea
inc
pop
cwtl
jmp
test
jb
scas
pop
mov
cld
in
mov
and
scas
out
cmc
and
lods
mov
lcall
mov
js
inc
int3
sub
aas
mov
pop
xchg
inc
push
imulb
jmp
xor
in
cmp
adc
cmc
xchg
stos
xor
fldcw
inc
fs
scas
jo
movups
xchg
xor
aas
inc
push
addb
xchg
or
leave
push
and
or
insl
mov
scas
mov
xchg
mov
push
xchg
mov
jmp
test
int
xor
aad
lods
lods
fwait
cmpsl
mov
jnp
inc
push
ss
daa
jmp
push
scas
sub
pop
vrcpps
or
cmp
pop
inc
inc
loopne
cmp
lods
mov
xlat
stos
add
mov
out
mov
inc
add
push
fisttpl
cmpsl
xor
fdivs
inc
xor
or
cmp
sbb
xor
xchg
imul
aad
cmp
in
int3
sbb
and
jo
push
stos
sub
jp
jmp
jb
shll
push
mov
or
pop
in
lcall
popa
add
mov
fwait
jecxz
or
mov
popf
fisubrs
and
pop
cli
ret
mov
pop
ja
pop
and
add
or
data16
mov
xchg
adcb
sbb
insl
jae
jo
cmpsl
leave
sub
lahf
call
repz
sub
cltd
or
cli
xchg
adc
stc
inc
cmp
mov
seto
xchg
in
jle
add
testl
jnp
add
insl
imul
inc
icebp
addr16
in
pop
adc
outsl
cmp
mov
mov
push
jmp
iret
stos
lea
pop
jle
adc
pushf
stos
in
jl
push
int
ja
xchg
xor
out
jmp
cmpsl
stos
cld
jl
jns
out
test
dec
or
out
xchg
or
cmpsl
inc
cmp
in
imul
pushf
push
testl
stc
xchg
in
and
xchg
sar
divl
stos
sbb
adc
arpl
pop
mov
and
cmp
lods
test
dec
pop
arpl
lods
cmc
scas
movsb
movsl
lds
gs
adcl
push
sub
mov
imul
mov
rorb
int3
mov
mov
cmp
sub
cmc
pop
or
add
lcall
cld
inc
test
xor
xchg
mov
movsb
or
dec
test
rorb
hlt
push
fcompl
cmpsb
or
xor
fcmovnu
repnz
cwtl
and
cs
jno
push
pop
dec
cli
cli
les
lods
fwait
daa
jp
aam
push
adc
sub
outsb
dec
add
js
mov
jge
xlat
mov
loope
mov
push
pop
jns
sti
stos
cmp
inc
jecxz
inc
pop
icebp
mov
jle
sbb
jbe
push
clc
and
pop
adc
mov
adc
scas
push
lods
outsl
lret
sbb
cmp
xlat
je
pop
ja
hlt
movsb
mov
mov
mov
mov
rol
jae
mov
stos
fmul
pop
pop
xchg
inc
imul
or
inc
stos
les
pop
clc
and
out
adc
xchg
test
fnsave
adc
add
fidivrl
loop
out
or
mov
add
xor
add
js
lock
movsl
push
daa
add
adc
pushf
mov
mov
and
pop
repnz
cmpsl
test
ret
cmp
pusha
ror
aas
xor
jo
dec
test
mov
pop
testl
inc
je
out
mov
les
enter
mov
ret
roll
dec
gs
jp
ljmp
lock
jns
aaa
subps
or
jae
xchg
xchg
test
jmp
pop
cmpsl
mov
lea
repnz
mov
js
pop
ljmp
cmp
pop
scas
js
pop
cmpb
stos
pop
cli
shlb
adc
and
fs
lea
ret
xchg
pop
lock
cmc
decl
xor
aad
pop
mov
arpl
adc
mov
sarl
mov
or
xor
imul
mov
mov
cmp
push
push
jns
mov
rclb
pop
sub
push
dec
xchg
ja
xor
jo
out
push
sahf
inc
push
xor
xor
pushf
sub
out
pop
hlt
stos
lds
mov
mov
cmp
ds
inc
sti
out
add
orb
mov
hlt
cmp
mov
dec
pop
jmp
dec
arpl
mov
cmp
das
pop
dec
inc
cmpsb
lock
shll
adc
lahf
bound
pop
cwtl
dec
dec
cltd
ret
idivl
push
popa
jno
ds
push
fs
shl
jno
stc
dec
aam
xchg
stos
leave
pop
mov
andl
mov
cltd
std
xor
push
mov
lahf
sbb
xchg
xor
sti
ljmp
jbe
fdivp
and
inc
adcb
dec
xlat
ljmp
cmp
fsts
sbbl
call
or
dec
adc
push
jmp
jle
repnz
pop
aas
ret
adc
pop
and
or
jns
xchg
ret
and
add
pop
in
les
dec
sbb
cmpsl
mov
sti
dec
gs
push
add
fisttpl
pop
incb
fs
mov
mov
mov
test
call
stos
rorb
mov
fcmovb
stos
xor
push
inc
sbb
in
or
mov
ffree
iret
leave
push
and
inc
arpl
es
arpl
sbb
loop
mov
add
and
push
dec
mov
jae
scas
pop
jno
push
andb
lea
aaa
call
lea
out
js
cs
sbb
loopne
mov
lods
mov
mov
xchg
xor
dec
mov
fcoms
dec
dec
test
and
push
out
or
cmp
xlat
pop
mov
push
sub
jle
and
adc
pusha
adc
ljmp
jb
or
sti
sahf
jbe
and
sbb
push
sbb
mov
mov
push
push
xor
cmc
xchg
pop
aam
add
shll
inc
and
cwtl
mov
cmp
idiv
fninit
mov
rorl
loope
movsb
mov
mov
mov
dec
leave
pusha
jnp
iret
push
mov
mov
push
or
dec
mov
jl
dec
adc
and
mov
jae
popf
jle
or
std
mov
fbstp
cmp
adc
dec
cmc
xchg
imul
inc
push
gs
div
pop
xor
movsb
push
cli
push
or
int
stc
mov
and
or
in
dec
push
ret
dec
fnstsw
xlat
ficomps
out
and
lret
js
fdivs
mov
jno
dec
cmpsl
call
xor
cmc
adc
aaa
jne
in
mov
leave
addr16
int
or
jo
sbb
jle
cmpsb
push
xor
mov
mov
into
pop
mov
and
jae
cmpsb
test
ja
add
pop
shrl
imul
jmp
push
repnz
fs
mov
subl
lods
sub
hlt
lret
iret
pop
mov
push
out
inc
fs
fs
inc
sbb
mov
nop
inc
iret
push
aaa
int3
call
sbbl
xchg
push
push
shl
bndstx
jae
jp
inc
and
jp
out
mov
adc
or
insl
cld
push
mov
adc
add
insl
rcl
push
cmp
insl
add
pop
out
int
outsl
orl
add
mov
test
pop
cli
sub
stos
into
lret
iret
popa
cmp
inc
push
mov
pop
or
mov
ja
shlb
in
mov
dec
nop
and
iret
pop
lahf
and
aaa
cmpsl
cltd
cmc
mov
ss
rcrl
popa
adc
mov
aas
insb
xchg
cmc
loopne
icebp
aam
dec
shlb
pop
jge
add
outsb
or
sub
sbb
shll
shrl
addr16
je
cwtl
loope
pop
mov
inc
dec
mov
mov
shl
shl
inc
shlb
lahf
mov
das
faddl
mov
in
dec
arpl
push
push
mov
in
or
pusha
cmp
xchg
mov
insb
xor
pop
xor
fwait
insb
add
sar
cmp
mov
and
or
data16
pop
jne
fucomi
mov
push
pop
dec
pop
stc
pop
xlat
and
xchg
cli
xchg
leave
sub
in
sbb
sbb
push
mov
notb
mov
add
sbb
out
aas
mov
daa
jl
jns
std
movsb
inc
fstl
cmp
gs
scas
cmc
mov
mov
mov
adc
sbb
push
test
jle
pop
in
inc
cmp
or
mov
dec
das
scas
sub
loope
aad
subb
fwait
or
jl
aaa
jge
mov
les
leave
xchg
jp
hlt
mov
xchg
or
add
aad
mov
push
sub
xlat
test
fstcw
push
cmp
xorb
rcr
daa
sbb
mov
shll
je
and
adc
or
inc
pusha
das
lcall
loope
mov
push
hlt
jne
push
add
mov
mov
adc
jmp
out
dec
pop
in
push
mov
adc
flds
mov
lcall
or
addr16
or
mov
rolb
xor
add
push
addl
push
mov
cmp
xchg
cmp
jge
dec
mov
mov
jo
mov
mov
cli
mov
neg
mov
lcall
jne
dec
pop
jp
aam
fadds
cmp
iret
hlt
sbb
xchg
lret
adc
cmp
xchg
scas
mov
mov
xchg
push
and
jl
fisttpl
mov
xor
jns
inc
rdtsc
fists
jp
and
and
inc
fldt
sahf
fistpl
xchg
jecxz
maxps
shl
cli
adc
shrb
inc
lcall
or
push
das
or
mov
sbb
lods
stos
xchg
lcall
cmpsl
hlt
stc
or
add
and
stos
xchg
popf
mov
in
mov
mov
popf
stc
xor
adc
pop
sbb
leave
mov
leave
pop
mov
sahf
xor
filds
test
and
sub
sbb
call
cmp
pop
mov
dec
rcrl
lret
cltd
dec
and
imul
adc
inc
xchg
mov
outsb
adc
cmp
imul
insl
in
sub
cwtl
xchg
sbb
addr16
sti
pop
insl
add
cmpl
inc
dec
dec
push
sub
cmp
cli
frstpm(287
xchg
repnz
or
xor
shlb
in
ljmp
aaa
jmp
scas
inc
pop
push
int3
out
cmp
mov
stos
subl
cmp
jnp
iret
rolb
in
pop
scas
leave
mov
inc
adc
or
xchg
pop
push
and
push
inc
xlat
and
mov
imul
bound
mov
mov
mov
push
jns
out
inc
jae
or
cmp
mov
ds
call
sbb
cmp
dec
or
cs
fwait
pop
adc
pop
sub
jle
jecxz
jae
insl
pop
adc
xlat
ss
hlt
mov
leave
flds
adc
fdiv
xor
mov
popf
andl
mov
call
mov
push
dec
or
mov
dec
cmp
stos
inc
push
adc
aas
lds
jae
pop
out
push
sbb
xor
cmp
imul
inc
shlb
mov
add
jg
inc
dec
sarl
push
popa
jl
ret
sbb
movsb
xchg
rcrb
push
mov
inc
fisubrs
push
subb
dec
incl
pop
mov
xchg
pop
rcrb
xor
or
sub
fsub
dec
jno
xchg
mov
inc
movsl
mov
testb
add
scas
mov
call
fmuls
pop
insl
xor
lcall
xor
jle
fwait
inc
fisttps
loop
int3
fsubl
or
xchg
push
dec
dec
mov
lock
shlb
adc
dec
push
lcall
cs
xchg
sbb
lahf
add
dec
repnz
jbe
int
and
int3
lods
adc
add
pop
inc
out
dec
repnz
push
jbe
sbb
mov
dec
pop
add
mov
inc
jb
sub
sbb
push
pop
outsb
add
xchg
xor
test
adc
sbb
and
pushf
mov
xor
js
pop
stc
das
sub
add
movsb
out
nop
addb
mov
mov
dec
mov
cltd
shl
gs
push
or
jle
enter
or
cmpb
xor
repz
outsb
add
shll
push
mov
outsb
sub
js
cmp
add
add
andl
lea
stos
sub
cmp
ss
sbb
and
ss
jo
jo
mov
cmpl
lods
and
push
xor
or
jg
jp
jne
sbb
sbb
enter
in
loop
jmp
subb
sub
dec
inc
inc
xchg
add
sub
jg
sub
dec
daa
cmp
push
lods
rcrb
pop
notb
aas
or
imul
push
or
xchg
pop
das
sub
pop
mov
xchg
rolb
jne
ret
and
mov
xchg
in
in
outsl
push
pop
lds
mov
outsl
insb
dec
scas
xchg
int3
lds
lock
dec
pop
push
xchg
arpl
das
out
mov
insb
stc
cld
adc
or
cmp
imul
int
xchg
adc
jnp
sbb
push
lock
inc
sbb
repnz
pop
lock
das
xchg
cmpsl
add
ja
jge
ljmp
out
mov
add
mov
insb
shll
dec
dec
lret
loopne
bound
enter
sbbl
aaa
in
push
outsb
repnz
ljmp
add
imul
xor
xchg
testl
cmc
xor
ljmp
xor
into
xchg
aas
fldcw
jbe
adc
inc
in
pusha
hlt
pop
lods
mov
sub
inc
mov
imul
add
aad
mov
popf
ja
mov
push
pop
mov
add
lret
pop
test
and
stos
inc
push
enter
mov
pop
jle
cmp
jnp
sub
sub
push
add
dec
call
mov
xor
cmpsb
ljmp
jecxz
jecxz
jns
jb
jb
enter
adc
sarl
loope
lcall
mov
sarb
mov
mov
xlat
cmp
decl
movsl
out
out
jnp
out
daa
out
insb
dec
stc
cwtl
aaa
mov
sbb
pop
xlat
pop
cmp
and
outsl
xor
pop
testb
rcrl
sub
add
or
shll
enter
mov
push
dec
cwtl
pop
mov
adc
mov
out
sub
xor
mov
inc
and
rclb
imull
cmp
mov
bound
fnsave
push
xlat
repz
add
in
sti
lock
xor
cli
out
add
pop
mov
mov
cwtl
mov
fidivs
mov
lret
push
dec
push
mov
cld
sub
ret
cmp
ret
scas
repnz
mov
dec
scas
nop
out
repnz
dec
dec
pop
and
sbb
sub
and
test
mov
in
ret
sbb
push
nop
jge
xor
mov
adc
lods
ja
pop
mov
pop
jg
push
fistpll
push
sbb
fucomi
add
cmc
cmp
xchg
cmp
and
jnp
clc
rorb
aam
mov
cmc
out
cmpsl
sbb
mov
dec
ret
in
push
cld
or
loop
jle
cmp
jb
push
or
std
cltd
jne
sahf
stos
xchg
inc
cltd
test
mov
dec
data16
in
out
dec
out
lcall
pushf
inc
push
xchg
lds
repz
jno
test
push
push
jge
adc
xchg
stos
jmp
mov
add
xor
testb
jle
push
inc
cmc
out
inc
lahf
sub
push
and
mov
fs
pop
inc
push
call
cmp
out
add
xchg
mov
icebp
movsb
mov
cmp
in
mov
cli
jno
dec
cs
mov
push
enter
pop
xor
aad
xor
stos
sub
dec
orb
aam
imul
std
and
push
xlat
mov
jl
iret
jnp
push
cmp
pop
and
dec
imul
xchg
pop
cmp
pop
jg
int
xchg
adc
dec
call
push
xchg
int
adc
mov
sbb
inc
jmp
testl
clc
daa
push
cmp
out
dec
mov
push
sbb
in
outsb
push
mov
shlb
and
sti
adc
mov
xorb
add
adc
fists
jmp
movsl
lcall
and
scas
gs
pop
mov
out
test
jb
pop
loopne
lret
rcrl
loopne
mov
fcoml
ret
in
xchg
decl
andb
cld
call
jle
into
dec
xor
and
shll
xchg
int3
pop
cmpsl
adcl
jecxz
loopne
jl
jmp
mov
popa
mov
andb
mov
adc
fimuls
out
jmp
or
and
xchg
add
push
jmp
cmp
mov
test
xchg
jns
sub
adc
dec
xchg
sub
rcrl
xor
sahf
pop
stos
inc
mov
enter
daa
clc
iret
int
cmp
add
add
jg
adc
mov
pop
aad
xchg
jmp
lods
and
xchg
jae
push
icebp
jg
in
and
les
loop
jo
sbb
xchg
and
subl
addb
stos
inc
arpl
stos
in
pushl
jae
insl
out
sub
loop
arpl
mov
mov
movsb
push
mov
add
push
imulb
jmp
and
popa
jg
aaa
dec
mov
imul
dec
mov
add
dec
pop
dec
loope
outsb
xchg
xchg
or
mov
adc
mov
gs
sahf
xor
popa
xor
loope
enter
stos
inc
sbb
mov
enter
add
ja
mov
cmp
fwait
jge
pop
imul
lds
fisubs
inc
mov
sti
xchg
xor
lret
xchg
sub
clc
lret
xlat
and
scas
divl
push
and
push
out
iret
lahf
icebp
mov
mov
inc
jne
hlt
fs
mov
pop
bnd
or
hlt
or
adc
out
das
bound
dec
idivb
test
adc
lret
mov
psubd
sbbl
std
xchg
int
sbb
sbb
fcomps
sub
mov
jg
in
mov
pop
xor
inc
in
mov
pop
sub
xchg
das
cwtl
push
lret
cmp
sbb
xor
fidivs
xchg
ljmp
lcall
lods
arpl
sbb
jne
dec
fldenv
lahf
ss
and
in
mov
std
inc
lods
fwait
test
push
mov
add
loope
cmpsl
ds
jp
lret
lds
jno
jno
stos
test
xchg
ja
cmp
dec
xor
shll
and
rcrb
xchg
mov
pushf
mov
push
xor
mov
inc
lahf
mov
les
mov
lods
movsl
fdivrs
xor
push
xlat
inc
pop
adc
sub
cvtps2pd
popa
stos
fimuls
push
imul
pop
sub
jmp
push
add
lret
mov
ret
lret
cmp
sbb
je
ljmp
mov
add
dec
inc
fsubs
loop
test
pusha
imul
inc
lret
jbe
push
test
test
iret
jae
mov
ljmp
jno
adc
scas
inc
in
hlt
sbb
push
into
gs
xchg
mov
jl
ljmp
xor
lahf
arpl
dec
sbb
jbe
in
adc
ds
dec
pop
cmp
adc
dec
adc
cmp
sbb
aad
imul
sub
mov
fistpl
jecxz
leave
fwait
xchg
jbe
push
imul
sub
mov
xchg
push
xchg
mov
lea
mov
push
dec
adc
jns
les
fcoml
sti
inc
aam
stc
out
imul
pop
shrl
addl
mov
jne
pop
pop
cli
lds
repnz
mov
or
adc
sbb
std
pop
mov
es
rclb
cmp
cld
adc
xor
mov
or
sahf
gs
push
jno
dec
fdivr
fwait
std
pop
shrb
jle
adc
or
inc
fs
or
xchg
sbb
loope
call
mov
test
into
pop
mov
sahf
icebp
sbb
adc
call
or
popa
aaa
dec
mov
xchg
in
mov
sbb
pushf
cmp
inc
xchg
sub
push
jne
xchg
aas
dec
les
xchg
lock
fs
inc
das
inc
fdivrl
ss
rorb
adc
sahf
sbb
or
push
stos
mov
cmp
pop
pop
push
cmc
int
xchg
add
jl
lret
rorl
bound
xchg
fiaddl
xor
in
push
mov
xor
lods
fdiv
dec
test
cmp
xchg
lock
ss
sub
les
add
fisubl
dec
lods
sahf
inc
rcrb
jb
mov
push
imul
adc
mov
sarl
sbb
das
bound
xchg
mov
or
addr16
inc
mov
adc
cmp
pushf
cmp
into
and
packsswb
imul
xlat
mov
repz
adc
outsb
stc
jne
into
loop
faddl
and
bound
xchg
movsl
cmc
mov
test
repz
inc
rolb
jp
and
fldt
xor
and
lds
cmp
jmp
jb
and
loopne
int3
pop
or
rcll
clc
and
stos
and
sti
sarl
xchg
ret
xchg
push
test
xchg
divb
out
mov
xlat
clc
and
pop
div
aaa
push
lods
push
push
xor
int
xchg
out
push
and
popf
pop
mov
fsubs
dec
push
das
jmp
push
popa
push
push
ljmp
sub
and
inc
xor
or
decl
cmpsl
fimull
mov
push
notb
clc
orl
aas
adc
add
in
jle
into
fdivrs
incl
fbld
adc
jno
sub
push
adc
les
shlb
repnz
hlt
inc
add
xchg
in
cmp
lahf
shr
dec
mov
ficoml
mov
pop
mov
push
jno
sbb
call
mov
das
jecxz
aas
dec
repz
push
outsb
or
aam
adc
lahf
ljmp
inc
or
fimull
es
inc
imul
cmp
leave
adc
inc
filds
je
xor
addr16
add
ss
fcompl
lods
ss
xlat
test
scas
daa
jmp
hlt
iret
icebp
mov
and
lds
push
jbe
in
push
dec
movl
rcrl
jmp
push
loope,pt
jb
dec
mov
ret
fmull
mov
mov
stos
aas
ss
inc
loop
push
rcr
adc
jge
mov
ja
hlt
lret
push
mov
inc
xchg
es
xor
ret
push
xchg
mov
xchg
mov
icebp
jo
pop
dec
pop
mov
aad
stc
enter
int
add
movsb
lods
xchg
mov
nop
repnz
loope
outsb
or
xchg
mov
mov
adcb
lcall
outsb
sub
push
and
add
dec
lods
jmp
rcll
roll
movsb
pop
push
pop
push
mov
arpl
adc
inc
pop
addr16
or
insb
push
inc
mov
push
xchg
lods
mov
loopne
in
ljmp
cmp
push
jbe
sub
dec
aad
mov
inc
test
push
imull
pop
sub
pop
popl
sti
cmc
icebp
leave
fistpl
adc
cmp
dec
mov
push
dec
fistl
ja
mov
stos
sub
pusha
mov
sbb
ret
mov
loop
push
add
mov
adc
mov
and
dec
or
mov
jge
stos
jnp
fcoml
sbb
es
subb
cmpsb
sbb
xlat
or
aas
clc
lods
loopne
dec
sbb
mov
popf
sub
dec
orb
test
andb
stc
js
adc
jbe
jmp
popf
pop
sbb
popf
dec
jge
inc
xor
je
addb
pop
lahf
mov
jp
dec
data16
mov
fsts
filds
jb
inc
out
adc
loope
jo
loop
or
mov
ja
jp
js
add
shl
mov
dec
adc
data16
scas
xchg
icebp
inc
jbe
addr16
push
sub
xor
movsl
js
rcrb
adc
cmc
jne,pt
cmp
imul
xchg
push
jns
rclb
out
xchg
pop
push
add
fwait
rep
shll
or
std
push
call
insl
out
mov
mov
mov
lret
cmp
bound
outsb
test
jmp
jb
sahf
jo
daa
pop
add
mov
cltd
and
add
dec
jb
push
jge
jle
add
paddd
insb
jmp
inc
jo
cmp
fs
data16
pop
subl
xchg
in
loope
pmaddwd
or
imul
mov
cmp
fwait
mov
xor
push
fdivrs
flds
fwait
sbb
int
rclb
xor
push
ljmp
into
sti
xchg
mov
loope
dec
adc
int3
pop
jmp
rol
and
cmp
sti
sbb
notl
or
imul
xorb
lret
rcrl
loopne
jns
cltd
pop
imul
clc
xchg
mov
add
mov
loop
sub
inc
out
jne
fistl
mov
insl
leave
inc
jle
in
mov
jae
jno
push
mov
mov
iret
cmpsb
lods
mov
mov
dec
inc
out
inc
cli
adc
pushf
push
aas
xchg
out
push
addb
push
xchg
xchg
adc
dec
mov
fwait
and
imul
dec
cmp
mov
xchg
int
shll
andl
hlt
xor
addr16
loope
sbb
stos
fsubrs
out
push
sahf
test
hlt
xor
stos
mov
mov
sub
dec
pop
dec
push
jg
mov
jb
mov
inc
push
xchg
pop
addr16
leave
ss
jno
xor
loope
or
lahf
cmp
push
push
fisubl
mov
xchg
into
cmpsb
imul
in
sbb
stos
fildll
fistpl
xchg
jno
inc
sub
movsb
dec
mov
cld
push
inc
in
in
cltd
inc
in
inc
cmp
fisttpl
in
push
in
xor
and
dec
fists
jmp
jbe
mov
dec
fwait
mov
int
repnz
sbb
pop
jmp
xchg
neg
sub
lds
insb
sub
sub
xor
mov
scas
scas
aaa
and
int3
out
add
rcrw
xor
les
fnstenv
lahf
sub
sub
incl
popf
dec
loopne
in
das
scas
cmp
fcomps
sar
mov
xor
mov
daa
cmp
pop
cwtl
mov
jg
in
in
jle
pop
dec
test
mov
or
pop
xor
mov
mov
inc
sysenter
adc
pop
inc
push
nop
add
lods
mov
jecxz
jp
xor
sub
movsl
pop
mov
ds
addb
xor
xor
fcomps
mov
cld
mov
pop
cmp
pushl
sub
cmp
inc
jo
cld
sbb
test
sbb
jae
das
sub
xchg
rol
cmp
mov
test
popa
jmp
cmpsb
mov
lahf
movl
adc
popf
inc
rorb
jb
mov
mov
cltd
xor
dec
fldl
mov
rcl
push
cmpsl
mov
sar
and
push
pushf
jno
sub
div
addr16
or
fs
mov
ljmp
loopne
jb
out
data16
lods
xchg
mov
add
pop
jb
and
stos
inc
outsl
adcb
nop
sbb
repz
repnz
inc
sbb
pop
loope
out
outsb
sbb
movsl
sbb
aaa
pop
mov
add
aad
mov
insb
movsl
das
push
fsubrl
sbb
into
xchg
lock
and
inc
push
ja
fucom
inc
pusha
fbstp
lods
pop
call
xlat
pop
mov
int
outsb
lods
mov
repz
or
sbb
fs
test
jl
icebp
ret
push
lret
shlb
insb
lret
lds
jg
sbb
scas
movsl
faddl
or
les
xor
test
out
dec
jg
lcall
imul
jge
fs
sbb
sti
push
pop
mov
inc
aaa
stc
sub
jmp
cs
scas
and
jae
fstps
lahf
scas
jecxz
pop
add
add
lods
clc
test
test
or
xchg
arpl
popf
mov
and
loope
shr
xchg
jecxz
movsl
adc
add
addr16
lret
lods
adc
xchg
clc
rclb
loop
adcb
decl
adc
jb
repz
in
xor
movsl
enter
bound
sub
pop
cmc
fiaddl
cmpsl
mov
push
orl
mov
fyl2x
cmp
or
jecxz
mov
shll
sbb
jns
cmpb
insb
cmp
jbe
xchg
xor
aas
aad
aas
addb
popf
subb
inc
stos
sarb
enter
test
jl
jae
mov
test
dec
popa
mov
add
clc
or
add
dec
int3
mov
push
mov
xor
or
les
scas
xor
stos
xchg
push
ffree
subl
sub
insl
scas
cli
cmp
and
jbe
leave
pop
scas
cli
mov
mov
push
repz
fildll
in
shll
jmp
inc
test
mov
push
xor
jecxz
or
mov
mov
dec
fdivr
or
popa
cmpsb
divb
jl
popf
mov
sub
outsb
pushf
mov
adc
dec
idivl
jl
mov
lret
pop
jl
add
cltd
pop
lock
inc
push
enter
pop
ret
arpl
cli
pop
mov
leave
push
stos
mov
arpl
ficoms
sbb
and
aas
fsubrl
sbb
pop
cmp
mov
dec
nop
jnp
add
pushf
in
loope
xor
lret
fmull
mov
out
sbb
dec
in
adcb
cmpsl
shrb
lods
pop
scas
frstor
sbb
pop
ss
xlat
mov
or
test
xchg
imul
cmp
add
jae
loopne
dec
xchg
imul
in
jg
lods
mov
bound
xchg
pop
mov
xor
xlat
xlat
insl
in
ret
push
cmc
jne
xor
jbe
addb
or
loope
movsl
mov
adc
ret
repnz
ja
jb
adcl
dec
fsubrl
outsl
cltd
mov
shl
not
or
pop
cmc
push
rcrb
adc
mov
dec
push
sbb
decl
aad
and
add
inc
out
xchg
sub
mov
in
xchg
sbb
pop
jne
xor
jnp
into
and
repz
pop
cmpsl
push
push
addb
add
in
xor
shr
adc
jae
cld
xor
add
adcl
mov
stc
push
adc
inc
jle
pop
mov
stc
dec
pusha
jmp
cmp
push
lret
xlat
xchg
stos
shrb
and
lahf
js
jge
loop
jno
push
and
mov
orl
cmp
js
pusha
scas
cmc
cmp
jp
test
ficoms
lods
xor
sub
inc
xchg
popa
dec
push
popf
jp
sbb
cmp
aam
push
out
test
sbb
movsl
add
or
jle
cli
and
popa
or
lea
or
pop
cmp
and
sahf
xchg
mov
cmp
insl
jecxz
jg
push
dec
jne
sarl
pop
mov
pop
in
push
aad
add
sbb
or
sbb
data16
jg
mov
mov
push
jae
jo
rcrl
dec
jne
inc
fwait
xor
pop
loope
sbb
pop
fldcw
push
hlt
mov
add
popa
icebp
imul
xchg
push
jno
xor
lret
mov
cmp
lret
lods
iret
mov
iret
fstpt
aad
in
hlt
in
cmp
jne
dec
mov
xchg
icebp
or
dec
lahf
addr16
xchg
pop
xchg
cmp
dec
pop
scas
pop
xor
or
inc
xchg
cmc
dec
dec
bound
loope
sbbb
add
mov
xchg
xor
cli
push
pop
and
imul
loope
mov
sub
pop
cmpsb
les
mov
push
aas
sbb
test
lret
push
jmp
sbb
pop
lret
das
sbb
mov
fidivrl
or
cmp
fwait
sub
shlb
inc
add
mov
xchg
mov
into
cmp
repnz
repnz
test
lahf
xor
inc
push
mov
mov
inc
sub
mov
sub
fnsave
dec
mov
mov
or
cmp
jb
mov
add
ja
inc
sbb
or
sti
inc
add
dec
pop
xchg
bound
xor
mov
sbb
push
rcr
adc
out
adc
stos
and
push
lods
jns
jns
adc
mov
or
insb
testb
inc
or
dec
nop
aad
std
scas
in
mov
push
arpl
jns
gs
adc
xor
ror
test
cli
mov
cmp
pop
dec
pop
int
pop
push
pop
xrelease
mov
mov
cli
sahf
loope
dec
adc
andb
mov
scas
add
jnp
pop
ret
fwait
push
add
lds
mov
mov
xchg
push
lods
ss
inc
test
mov
adc
movb
gs
cmc
xchg
loopne
movsl
adc
lret
mov
or
pop
fists
pop
lods
inc
mov
sarl
xor
add
icebp
into
pop
xchg
inc
dec
lock
repnz
mov
out
lock
lock
jnp
mov
repnz
cli
fistpll
and
push
xor
movsb
pop
sub
dec
pop
and
loope
imul
mov
mov
lods
or
into
fdivrp
push
pushl
aam
inc
fmull
enter
icebp
sub
stos
push
pop
imull
rorb
jmp
adc
call
push
sbbb
mov
jnp
scas
test
mov
and
stos
iret
repz
in
mov
push
inc
jno
jle
popa
jecxz
test
inc
add
mov
fidivl
mov
fstp
scas
jp
push
out
aad
or
clc
cmpl
daa
push
mov
out
push
sbb
test
sub
mov
test
xchg
mov
aas
mov
xor
inc
cmp
add
cmp
cmp
fstl
dec
xor
in
mov
into
vpunpckldq
pop
mov
or
lods
popf
es
in
jmp
and
or
or
cmp
pop
fisubrs
add
cmc
fwait
rorl
mov
in
xchg
lcall
es
stos
add
push
cltd
dec
adc
in
and
sbb
sbb
pop
pop
pop
xor
mov
leave
or
std
imul
cmp
jne
jno
push
out
adc
mov
jg
and
dec
dec
mov
aas
sub
cwtl
das
push
stos
or
movaps
ficoml
shlb
jp
dec
nop
xchg
push
fs
out
sbb
add
repz
pandn
and
insb
mov
or
lock
ret
pusha
sbb
push
lcall
in
inc
sub
jp
popf
sti
pop
lods
mov
dec
sbb
xlat
and
out
inc
jnp
into
xchg
mov
cli
bnd
add
sbb
jo
movsb
mov
out
push
sbb
cmp
lahf
mov
dec
filds
cmpsl
test
xchg
pushf
adc
stos
mov
xor
mov
cli
hlt
inc
outsb
decl
jle
push
xchg
mov
adcl
stos
sbb
jno
mov
add
or
inc
shll
xor
lret
fcomi
dec
test
pushf
sub
add
gs
call
and
jb
push
sub
movsb
ret
cmpsl
ds
xchg
sub
inc
mov
xor
in
and
mov
cltd
scas
jmp
fisttps
mov
pop
into
andl
repnz
xchg
mov
aad
iret
inc
add
xchg
xchg
and
mov
sub
cwtl
push
stos
add
sub
dec
in
or
push
mov
dec
add
dec
adc
ds
and
jb
mov
stc
nop
push
sbb
repz
mov
push
lcall
dec
dec
adc
fnstenv
jecxz
dec
pop
arpl
out
mov
out
inc
shl
dec
outsb
lock
sub
outsl
cs
popl
sub
out
cmpsl
mov
dec
test
les
jl
adc
or
jne
cmc
sbb
dec
adc
enter
adcb
or
inc
push
jae
cwtl
mov
pop
adc
push
lods
mov
rclb
mov
ficoms
cmp
pop
iret
aas
sarb
inc
jbe
jge
xchg
test
int3
leave
out
or
xchg
addr16
inc
imul
xchg
lret
push
in
dec
fcoml
cmp
mov
pop
push
incl
jae
inc
shll
decb
xchg
test
pop
sbb
fs
sbb
add
cmp
fs
repz
and
mov
or
push
js
repnz
jns
mov
inc
pop
jo
add
mov
leave
pop
scas
mov
fsubrp
sti
sti
jno
aaa
sub
inc
in
stos
cli
call
testb
mov
gs
das
cmpb
scas
jge
or
inc
mov
push
icebp
ja
adc
jae
outsb
xchg
outsl
pop
mov
out
xchg
fdivrp
shl
sbb
ss
into
jp
cmpsb
les
push
inc
dec
inc
adc
jbe
aam
mov
and
mov
arpl
sbb
jmp
js
push
mov
arpl
pop
jge
pushf
lcall
sahf
jecxz
push
mov
inc
adc
sbb
mov
sub
pop
nop
cmpsl
clc
jp
inc
bswap
ret
shrb
sub
adc
xchg
stos
or
mov
add
jmp
or
and
scas
add
clc
cmp
data16
mov
test
dec
or
bound
adc
adc
fstps
daa
scas
mov
scas
mov
mov
dec
lea
xchg
movsl
divb
imul
loopne
clc
dec
mov
sub
in
into
push
in
mov
fbstp
xor
punpckhbw
mov
jo
loop
dec
xchg
xchg
mov
insb
add
adc
xor
and
sbbl
nop
insl
xor
clc
or
add
push
repz
in
stos
or
out
xchg
cld
dec
pop
sbb
in
ja
xor
cld
div
sbb
mov
cld
adc
dec
mov
pop
mov
test
or
call
and
xchg
lods
movsl
cmpsb
adc
cltd
into
int3
arpl
pop
aad
mov
adc
and
rorb
mov
mov
inc
sub
push
fdivs
push
and
pop
clc
mov
scas
inc
das
aad
cmp
or
jnp
inc
and
insl
jns
mov
enter
sahf
dec
ret
mov
push
mov
push
insl
sub
into
sub
dec
and
jns
lds
mov
or
dec
xor
pop
jp
ret
pop
inc
sbb
enter
rcrb
or
cld
cmc
add
lcall
cwtl
jne
ret
fstpl
fnstsw
mov
ret
into
dec
aad
jbe
imul
in
lcall
cwtl
aas
lods
mov
pop
nop
push
notl
mov
and
fdivl
movsb
add
sub
push
cltd
mov
lock
sbbl
sti
inc
pushf
sub
mov
xchg
mov
sbb
iret
pop
js
jae
in
in
subb
mov
outsb
xor
sarb
int
inc
push
sbb
xchg
cs
and
lahf
cmp
pop
stos
dec
aas
in
daa
negb
in
test
movsl
stc
mov
fldl
nop
sub
out
jmp
and
jge
pop
jg
nop
dec
subb
cmp
cmp
jae
add
popf
pop
lods
jo
shr
xor
mov
cmpsl
ret
jmp
add
add
pop
push
mov
add
add
xor
inc
sub
inc
dec
sarb
sahf
push
sbb
js
inc
arpl
sahf
jle
push
outsl
jb
cmp
or
out
pop
dec
aaa
loopne
les
jl
xchg
sub
xor
xchg
in
incb
push
cmp
push
out
sbb
lock
inc
and
push
and
xchg
mov
mov
loopne
int3
xchg
int
dec
in
ret
adc
sub
push
cmp
int
ja
xchg
xchg
pop
int
inc
cmp
ret
pop
and
mov
mov
scas
out
lahf
inc
lods
xor
xor
cmpsl
cld
dec
mov
xor
test
popf
lods
into
scas
jecxz
push
sti
jb
sub
js
lods
les
adc
in
popa
je
sbb
rorb
jmp
cs
js
xchg
sbb
xchg
xor
popa
add
mov
ss
mov
test
push
mov
inc
iret
fs
add
xor
out
add
jae
pop
js
pop
or
subl
mov
sub
data16
outsb
mov
in
test
pop
loopne
jne
sbb
ret
into
imul
add
cmpsb
repz
es
ss
mov
inc
dec
inc
push
out
push
in
or
pop
mov
jae
jbe
jb
test
mov
sahf
pop
hlt
lret
inc
mov
scas
or
cwtl
push
and
mov
sbb
mov
sarl
xorb
sub
jns
pop
sub
aaa
add
jns
gs
movsb
dec
stos
aad
mov
push
testb
lock
sub
scas
inc
fsub
jmp
xor
cltd
mov
and
mov
dec
pop
and
lahf
inc
inc
into
jae
mov
pop
stc
dec
sub
push
add
andb
fsubrs
push
sub
lret
cmp
and
inc
dec
sub
repz
or
xor
or
push
stos
and
push
lret
or
outsl
or
mov
fsub
jg
push
in
das
dec
roll
mov
jmp
mov
dec
pop
sahf
jg
mov
mov
pop
ret
inc
adc
aaa
sbb
dec
pop
lahf
repz
bound
movsb
icebp
jno
pusha
cmpsl
push
scas
inc
loopne
mov
popa
lret
mov
xor
mov
adc
dec
aas
mov
xchg
and
adc
pushf
cmp
fsubrl
popa
dec
dec
and
dec
aad
xchg
lods
addr16
lcall
fs
dec
je
clc
loop
aas
adc
vmovapd
pop
out
int3
mov
or
jmp
xor
pushf
cmpsl
lea
loop
jnp
dec
mov
push
imul
adc
je
lds
or
popf
cld
mov
test
and
jp
mov
fs
or
or
cmp
push
jecxz
mov
inc
mov
cmp
shl
rcrb
pop
dec
cmc
movsb
test
cmp
nop
clc
shll
sbb
push
push
cmpsl
mov
shlb
pop
cmp
xchg
adc
jo
and
test
sbb
sar
out
jae
and
push
xor
jns
mov
in
mov
xchg
push
fiaddl
lds
fwait
cltd
repnz
xchg
dec
scas
dec
adc
sub
and
pop
cli
xchg
std
cltd
cltd
cmp
clc
ja
test
scas
pop
bnd
lods
add
outsl
repnz
pop
mov
stc
jns
mov
xchg
xor
or
jl
jns
imul
mov
shlb
lds
ds
ljmp
das
mov
pushf
cmc
fnsave
test
pushf
inc
xchg
and
cltd
jno
lods
mov
test
popa
cmp
adc
lods
xchg
mov
xchg
dec
inc
dec
mov
int
push
inc
out
enter
sti
sub
aas
aad
lret
pop
test
jb
lds
test
or
and
repz
fdivs
aaa
push
xchg
jp
lahf
mov
stc
nop
in
hlt
jnp
xchg
xor
das
jns
cwtl
incb
xchg
inc
sbb
mulb
das
adc
pop
lods
inc
pop
test
sub
xchg
aas
jnp
sti
adc
stos
xchg
jmp
and
movl
aaa
adc
push
js
sbb
out
movsb
jmp
push
sbbl
movsl
repnz
inc
in
add
in
les
lea
das
jle
and
jnp
cwtl
and
aaa
mov
mov
cmc
in
add
cli
adc
loope
dec
jge
jno
in
mov
jl
std
repz
stos
repnz
or
inc
sbb
xchg
mov
push
in
stos
rclb
mov
inc
fs
dec
shrb
imul
mov
dec
fidivrl
adc
push
jl
andl
mov
ret
jbe
jns
outsl
xchg
enter
dec
dec
push
icebp
and
mov
pop
xor
loopne
cmpb
sub
add
jbe
mov
mov
inc
xchg
stos
aaa
es
sbbb
mov
popa
das
or
insb
or
add
cmc
push
ret
insb
in
test
or
rcrl
jbe
jo
mov
ss
aam
or
mov
add
lret
ret
xlat
dec
dec
into
pop
shrl
popf
jl
jl
jmp
jae
lret
push
dec
cli
cmp
loopne
fiaddl
jns
pop
shlb
bound
fistps
call
dec
fnsave
jo
add
push
cli
jg
pop
lds
cltd
test
cs
loopne
insl
int
inc
jns
lock
push
stos
mov
loopne
jge
adc
sub
adc
sbb
test
stos
out
cli
enter
jp
cli
and
sub
aaa
push
pop
sub
xor
in
aaa
fsubp
xchg
push
push
sbb
sub
adc
push
sbb
mov
das
mov
in
gs
je
mov
xchg
or
stos
frstor
mov
vminps
or
xchg
dec
ret
pop
mov
cmpsl
jb
js
lods
inc
push
and
sti
xor
sub
inc
push
jne
jbe
imul
daa
outsl
call
and
mov
mov
lret
pop
stos
iret
mov
or
push
ds
das
inc
push
test
dec
lds
shrb
ficoml
mov
mull
outsb
pop
cmp
add
jo
mov
jge
pop
xchg
add
dec
sub
mov
loope
mov
push
push
cmpsl
shrb
pop
sahf
sub
xchg
sub
fwait
cmp
fwait
mov
jg
jnp
jo
pop
out
inc
add
inc
sbb
loope
mov
xor
ljmp
mov
or
mov
and
shr
test
stos
xor
lcall
je
lock
dec
inc
push
adc
movsl
insl
pop
fwait
shr
movsl
cmp
push
xchg
loopne
aas
lret
ss
mov
sbb
mov
sbb
scas
xchg
xor
jmp
pop
loop
xor
sub
test
lds
mov
sub
pusha
sbb
jno
sub
out
in
sbb
xor
xchg
cld
and
xor
xor
inc
mov
xchg
lods
lods
xchg
push
jb
dec
in
sbb
pop
testb
je
ret
adc
dec
adcb
adc
mov
in
inc
xor
scas
jno
mov
arpl
popf
cmc
or
fstps
adc
fsubrl
lcall
or
xlat
sbb
dec
std
clc
add
insl
mov
push
jge
or
pop
mov
aam
incb
sub
push
mov
or
rclb
mov
xor
mov
filds
cwtl
sub
add
xchg
push
loop
std
xchg
imul
sbb
mov
mov
lods
sbb
sub
addl
pushf
xchg
sub
or
push
popf
fstpl
int
cmp
xchg
jecxz
jle
lds
insb
int3
in
and
mov
cltd
inc
add
sbb
pop
jmp
adcl
scas
xchg
adc
cmpsb
cwtl
nop
daa
mov
pop
scas
sahf
or
cltd
mov
sub
adc
mov
fcmovne
mov
dec
and
mov
mov
dec
cli
inc
jnp
dec
pop
jb
push
scas
std
scas
lahf
pusha
ficoml
jb
js
cmc
lods
xor
into
gs
xchg
repnz
sbb
ja
sub
sub
pop
sub
ljmp
outsb
add
in
mov
sbb
jl
pop
push
fdivp
mov
aad
sarl
repz
mov
mov
jns
sub
push
clc
ss
inc
fsts
add
xor
pop
ret
je
ljmp
cmp
pop
mov
jge
addb
scas
xor
inc
fdivp
mov
data16
inc
add
leave
push
and
xchg
push
arpl
repnz
lahf
div
cmp
mov
lds
div
cmp
push
aaa
rorb
add
stc
jmp
jb
repnz
aas
xchg
adc
jb
hlt
or
sbb
or
jo
jbe
adc
sbbl
inc
pop
mov
mov
iret
das
mov
xchg
jae
jl
xor
xchg
decl
sbb
dec
in
cmp
cmp
movsl
adc
xchg
fdivrs
inc
push
sahf
je
push
xchg
sbb
jns
mov
cmp
inc
inc
pop
sbb
je
dec
test
in
cmpl
pop
in
pop
icebp
pop
dec
adc
out
sub
pushf
or
mov
jle
jno
xor
or
xor
sub
or
gs
inc
xchg
js
loopne
adc
cs
mov
cmp
pop
xor
inc
loopne
xchg
iret
sub
shl
imul
loopne
ljmp
lret
pop
cmc
pop
push
jo
xor
call
add
or
mov
outsl
loopne
xchg
xor
sub
push
scas
dec
inc
jle
inc
jg
add
repz
or
jle
jmp
mov
jo
mov
sub
pop
lods
daa
mov
clc
repnz
cli
daa
sub
sub
add
mov
je
inc
mov
jnp
and
jl
test
inc
jns
xchg
push
mov
jb
in
mov
test
xchg
push
shrl
push
fistpl
sbb
std
fstpl
imul
out
js
aaa
scas
adc
out
ljmp
cmp
add
aam
xchg
cmpl
roll
fistps
js
cli
pop
imul
mov
dec
add
shlb
rcrl
ljmp
imul
and
cmpl
nop
pop
add
mov
mov
int3
add
xor
push
and
aaa
adc
mov
fnclex
mov
mov
push
lds
sub
xchg
pop
mov
shl
xchg
sub
sub
or
insl
inc
imul
shll
test
cld
fsubrl
jbe
jmp
in
cld
push
mov
jge
sub
inc
cmp
jl
mov
pop
xchg
or
aad
mov
pop
outsb
out
lret
outsb
jle
pushf
mov
mov
jbe
cmpsb
mov
int3
loope
xchg
cli
mov
push
out
les
push
outsb
add
nop
loop
out
lea
stos
cmp
add
out
outsb
add
sbb
mov
sub
cmp
xchg
add
cltd
jo
test
loope
dec
insl
ljmp
popa
addl
lods
lret
in
icebp
cmp
jge
movsb
cwtl
repz
dec
stos
mov
inc
dec
cmp
xchg
and
dec
nop
mov
int
divl
jle
xchg
inc
jbe
test
mov
xor
mov
fidivrl
add
andl
xchg
in
loopne
lock
ret
ss
push
movsl
jns
push
call
xchg
cltd
addr16
aaa
jo
jl
test
stos
xor
inc
leave
pusha
cmp
cwtl
lods
negb
inc
jg
lock
mov
jp
or
adc
sahf
xchg
jb
fsubs
pushf
sub
or
les
imul
call
xchg
cli
aaa
mov
scas
adcb
das
lret
sub
aam
loop
flds
shr
mov
jg
push
ss
stc
movsb
sti
pop
hlt
cmp
pop
push
mov
stos
ljmp
insb
stc
mov
sbb
dec
in
js
repz
insb
add
adc
roll
mov
push
iret
mov
add
cmp
ficompl
jb
mov
fisubs
push
ds
js
adc
fidivrl
xchg
loopne
shrl
into
loopne
dec
sub
cltd
stos
dec
fmuls
roll
cmp
lods
test
out
sbb
fists
mov
mov
movzbl
mov
mov
lock
push
aas
je
jp
mov
cmp
push
sbb
cmp
out
aas
mov
push
scas
inc
fidivl
jp
xchg
loope
enter
and
or
cld
mov
add
add
mov
cs
pop
mov
fistpl
sub
adc
mov
or
stos
iret
adc
loopne
call
int3
xor
jns
jno
jno
popf
ja
xchg
pop
xor
mov
popa
xorb
lds
and
jge
dec
push
mov
jnp
cmp
pop
xor
mov
testb
sub
lahf
mov
cmp
jg
shll
test
shrl
add
std
xchg
and
sbb
js
sbb
loopne
mov
lret
or
xchg
lock
fnsave
rol
stos
xchg
cmp
loop
movsb
cmc
ret
mov
call
pusha
dec
nop
mov
test
push
lcall
rcrl
or
push
loopne
ljmp
fdivrl
dec
loopne
pop
nop
xchg
adc
sarl
fcmovne
hlt
bndstx
ljmp
aas
ds
mov
mov
pop
pushf
xlat
or
out
add
sub
add
add
pop
sub
xchg
sub
movsl
mov
pushf
xor
enter
test
sub
or
and
mov
cmc
je
sub
aaa
lret
hlt
loop
pop
es
adc
clc
ss
cmpsl
add
test
mov
ds
sbb
mov
dec
cmpsb
mov
push
out
xchg
sub
loopne
in
dec
fadds
push
insl
fs
aaa
lds
xor
stos
addr16
repz
lea
mov
mov
adc
das
jle
mov
push
adc
pop
es
sub
subl
mov
mov
push
sbb
popa
inc
cli
rolb
adc
pop
jmp
cmp
xchg
push
testl
pop
jb
aam
mov
sarb
pop
insl
push
push
cli
andb
scas
sub
jb
sbb
fstl
jae
mov
xchg
xchg
mov
rolb
out
jne
iret
fldt
jne
push
dec
and
mov
mov
cltd
jns
inc
push
xchg
iret
scas
mov
out
and
add
mov
adc
cmp
mov
ret
shlb
mov
pop
test
sbbb
movsb
repz
push
cmp
cwtl
test
jae
and
add
mov
pushf
sub
mov
int
jecxz
push
push
pop
stos
pop
and
sti
or
adc
test
or
and
mov
jo
cld
mov
faddl
outsb
pop
xor
into
push
daa
cmp
xchg
cmp
pop
repz
mov
test
mov
mov
sbb
xor
sysret
cwtl
das
cmp
jmp
rcll
push
lock
and
mov
lret
jecxz
add
rol
mov
dec
faddl
js
scas
mov
push
fidivl
pop
scas
inc
push
pop
mov
xlat
divl
popl
push
jp
push
repz
xchg
int3
mov
movsb
clc
inc
int
or
repz
mov
sub
mov
pop
push
int3
xor
enter
mov
sbb
jle
roll
mov
push
data16
xchg
or
cmpsl
jmp
lahf
xor
cwtl
data16
mov
jecxz
xchg
lret
and
adcb
dec
aad
outsb
inc
test
adc
loopne,pn
push
push
sbb
inc
sub
push
pop
ja
mov
ret
inc
aas
push
jp
rclb
aaa
es
shlb
add
ja
add
or
ret
jbe
cwtl
iret
mov
mov
shll
sub
mov
cmpb
pushf
mov
adc
xchg
xchg
pop
scas
dec
cwtl
sub
sbb
lods
mov
bound
xchg
imul
mov
pop
les
xor
repnz
cmpsl
fdivs
ds
cmc
or
imul
int3
cmp
and
push
xchg
popf
scas
mov
stos
adc
mov
xor
out
popf
and
xor
ret
dec
adc
pop
push
jo
dec
outsl
rorb
addr16
bt
ret
cmpsb
out
add
push
mov
xchg
in
decl
push
push
adc
scas
imulb
and
pusha
or
xchg
cmp
rcrb
lods
and
mov
ret
gs
pop
mov
je
xor
mov
inc
jnp
jo
scas
ret
sub
mov
ret
popf
stc
jns
add
cmc
sub
inc
push
push
and
mov
ljmp
out
cmp
mov
aad
outsl
mov
pushf
fsincos
mov
xor
or
movsl
and
xchg
int3
cmp
insb
js
cmp
es
repz
lret
inc
ret
and
push
andb
jge
imul
add
test
fs
or
lcall
mov
mov
or
shr
test
lret
fisttps
sbb
cmp
jmp
push
cli
sahf
and
xlat
gs
mov
lret
pop
xchg
mov
lds
adc
jge
mov
push
addr16
mov
mov
adc
loope
dec
add
rol
push
addr16
xor
out
jnp
sub
or
sub
jnp
xchg
insb
fnstcw
lret
mov
lods
scas
fnsave
push
fs
xchg
mov
shll
add
in
ljmp
pop
adc
fldenv
adc
mov
push
sub
sahf
lock
stos
xor
or
mov
mov
and
test
stc
jl
lods
test
xchg
test
out
test
shrb
adc
cmp
inc
fldl
daa
icebp
sbb
int
cmp
scas
lret
cmpsb
sub
into
fcompl
mov
sub
stos
incl
aas
pushl
call
adcb
mov
or
mov
enter
out
mov
xchg
lods
rclb
js
gs
paddb
xchg
add
xchg
xchg
jmp
or
pop
out
test
mov
push
movsb
ss
mov
enter
in
sub
push
push
and
xchg
orl
das
push
andl
arpl
imul
into
imul
jmp
pusha
pop
in
outsl
jge
int3
and
loopne
fcmovne
iret
dec
aad
xor
dec
or
rcr
pusha
dec
and
test
test
jmp
sbb
jb
pop
sub
inc
jp
fscale
stc
ja
push
sbb
cwtl
push
mov
cmc
and
inc
dec
push
cmp
sbb
outsb
in
or
inc
cmc
dec
daa
rorl
xchg
iret
and
clc
dec
fidivs
popa
fcoml
orl
inc
mov
testl
or
xor
mov
xchg
mov
outsl
mov
fidivl
ds
push
dec
clc
adc
je
dec
das
negl
push
mov
fdivrl
xchg
fidivs
dec
popf
xchg
xor
xor
lcall
je
imul
pop
add
ret
sahf
xchg
or
jg
and
and
cmp
dec
arpl
mov
push
mov
testb
adc
into
and
push
out
dec
es
shrl
or
insl
sub
sbb
adc
xor
dec
jne
loopne
sub
ss
xlat
daa
outsl
sar
repnz
dec
aas
inc
pop
and
sub
lds
dec
aad
mov
cmpsb
push
mov
inc
push
inc
xlat
fstps
andb
or
mov
pop
inc
mov
outsb
jo
lock
ret
ja
mov
fisubrs
push
lods
sub
or
ja
mov
mov
cmp
stos
shlb
add
push
sub
outsb
pusha
mov
inc
mov
inc
and
ret
xor
in
loop
pop
negb
cli
jecxz
jl
sbb
push
out
lret
repz
mov
mov
jbe
das
pop
loopne
jge
roll
divl
inc
in
and
sub
mov
sub
dec
cmpsb
inc
fadds
lds
mov
mov
loope
sub
xchg
in
dec
imul
mov
int
cmp
xchg
in
xchg
lahf
aad
mov
cmp
xorl
add
popa
aaa
fbstp
sub
stos
or
ret
xchg
and
iret
clc
push
gs
fcompp
aam
add
scas
sti
fwait
stc
lret
fs
movsl
call
mov
adcl
cmp
insb
jmp
mov
adc
cs
mov
stc
sbb
xchg
pushf
sbb
push
addr16
call
cmpsl
mov
ret
pop
inc
fdivl
jne
inc
mov
xchg
push
xor
cmp
xchg
xchg
sub
dec
in
dec
cmpsl
dec
push
xchg
scas
aaa
outsb
sub
or
add
add
sbb
xchg
imul
and
mov
sbb
test
out
fimuls
stc
repnz
and
pop
lods
adc
mov
adc
add
add
dec
or
push
fsubs
push
pop
mov
lods
inc
test
pop
mov
popa
push
loope
into
cmp
ljmp
js
out
into
fcoml
push
ds
or
ss
jb
shlb
out
adc
pop
test
jle
les
mov
dec
mov
cmp
lret
add
scas
aam
shl
inc
mov
cmp
std
pop
mov
pop
sub
je
push
xchg
push
cli
or
jge
shrl
jmp
add
das
jb
sbb
pushf
mov
repz
push
clc
jg
call
in
or
sbb
jae
rcrb
push
int3
das
jnp
or
pop
push
jmp
cltd
lret
push
insb
add
cli
jmp
xor
cmp
xchg
jne
mov
sub
int3
push
mov
inc
lock
andb
mov
out
aas
iret
pop
or
cmp
stc
lods
dec
mov
fs
add
lea
incl
add
xchg
xor
jb
mov
and
add
adc
push
mov
xchg
sub
lahf
fs
jp
cmp
push
test
push
mov
pop
and
xor
faddl
fimuls
mov
mov
jae
add
jne
push
and
dec
add
or
shll
jmp
mov
add
adc
jbe
dec
loopne
stos
push
dec
popf
data16
mov
bound
mov
jle
nop
pop
test
xchg
imul
cli
push
roll
jp
push
fildll
sub
das
mov
jg
inc
pop
and
test
inc
mov
mov
xor
sub
loopne
ss
sbbb
repz
pop
jge
into
inc
popf
mov
aas
pop
dec
mov
rcll
clc
test
mov
sbb
jg
jo
rorb
shlb
jno
lock
adcb
aas
xchg
pusha
sti
stos
pop
daa
inc
or
stos
push
jecxz
xchg
mov
fsubs
andb
push
xchg
add
loopne,pt
xchg
test
hlt
gs
sahf
ret
mov
hlt
mov
daa
mov
adc
xchg
sti
mov
adc
lock
loopne
mov
lods
jge
sub
mov
sub
loope
fists
pop
add
cmpsl
icebp
mov
lods
fiadds
test
adc
aas
mov
or
lahf
jmp
mov
ret
mov
xchg
sbbb
jp
fbstp
test
adc
std
cltd
cmc
adc
jecxz
mov
test
idiv
scas
inc
out
fildl
add
or
sub
jno
xchg
scas
sbbl
repz
adc
xor
mov
ret
pusha
addb
js
cmp
pop
int3
add
pop
mov
lds
hlt
jbe
cwtl
xor
data16
xor
test
pop
out
and
ds
stos
or
xchg
push
sbb
dec
cwtl
mov
pop
and
insb
shll
movsl
adc
jns
rcrl
scas
sub
inc
xsha1
movsb
xor
mov
pop
add
out
popa
dec
mov
fcmove
int
pushf
jae
repz
fnstsw
add
dec
and
fwait
xor
mov
adc
sub
pop
hlt
fcmovnu
stc
leave
fs
call
arpl
das
rcrb
outsb
add
pop
xor
mov
pusha
dec
loope
popa
out
push
ljmp
bound
aad
push
jmp
sahf
xor
push
gs
test
test
push
mov
sbb
es
and
and
sub
mov
sbb
insb
add
jnp
aas
push
inc
fsubrl
jns
lea
mov
dec
das
push
pop
fadds
hlt
sbb
mov
loop
fidivs
mov
cmpsb
sub
andl
mov
mov
push
or
imul
popf
js
cmp
jbe
adcb
cwtl
lods
mov
imul
adc
lock
mov
jb
cmpsl
add
fbld
gs
fisubrs
mov
sub
add
sub
popa
pop
outsb
aam
lretw
stos
jns
pusha
dec
mov
adc
sbb
sbb
xchg
stc
fsubl
out
repnz
dec
push
outsl
rcl
pop
fstl
ss
jecxz
pop
idivl
cmp
add
lret
xchg
sub
and
and
pop
outsb
hlt
jnp
jns
fisubs
push
pushw
jge,pn
test
sbb
mov
ret
rcll
mov
and
or
mov
push
cmpsl
ret
ljmp
fidivrl
push
pop
out
pop
push
and
cmp
jnp
xor
les
xor
xchg
push
mov
push
stos
repnz
repz
lds
cltd
in
into
fistl
out
in
out
inc
test
xor
ljmp
xchg
sti
movsl
dec
jg
add
sar
xchg
add
fists
xor
pop
mov
add
test
jb
or
iret
shll
pop
sbbl
add
sub
mov
addb
add
mov
cmp
test
scas
push
inc
pop
in
jbe
push
push
pushf
or
xchg
pop
mov
sbb
or
pcmpgtw
pushf
ret
shr
das
adc
popa
or
fldl
fdiv
daa
jbe
push
test
sahf
lcall
rol
pop
xorl
stos
std
nop
dec
mov
sbb
inc
push
xchg
mov
pop
insl
into
pop
or
sbb
push
popf
add
and
cmp
sbbb
pop
push
push
clc
sbb
movsl
in
shrl
movsl
inc
inc
aam
xchg
popa
clc
ja
iret
inc
push
fchs
pop
mov
popf
jne
mov
loope
xor
mov
icebp
or
out
jae
or
mov
cld
testl
jge
scas
adc
iret
lds
pop
das
mov
add
bnd
and
sub
inc
outsl
daa
fisubrl
push
mov
in
in
push
or
cltd
add
xchg
push
lret
cmc
cmp
adc
jecxz
loopne
push
or
cmp
push
adc
lea
mov
scas
jbe
and
xor
sbb
sub
mov
mov
jmp
lds
push
sbb
mov
jae
push
pop
bound
out
pop
in
popa
dec
data16
call
or
sub
xor
roll
jo
inc
sti
pop
xchg
mov
mov
sub
ja
stos
pop
dec
std
sub
sahf
xchg
dec
inc
sbb
inc
jmp
xchg
mov
or
push
test
in
pop
mov
mov
pop
cmpsl
pop
lock
mov
bound
int3
sub
fs
add
fmul
pop
sub
mov
outsl
jge
pop
lds
jae
movsb
cli
sbb
mov
ret
shrb
rcrl
push
cmp
inc
loop
cmp
mov
mov
ret
cltd
aad
iret
mov
pusha
sahf
xor
test
mov
and
mov
push
cmpsb
sahf
repnz
negl
cmp
movsb
jg
out
sarb
adc
roll
cmp
adc
adc
cmpb
push
sub
mov
mov
repnz
or
sbb
iret
sub
pop
or
or
fcompl
pop
xchg
pop
cmp
pop
imul
ffreep
ljmp
or
or
push
cmp
inc
cmp
mov
addps
jmp
xor
push
shlb
daa
jae
lods
aas
leave
adc
xchg
adc
inc
imul
or
lock
fsubrl
cld
cmp
mov
mov
lahf
jbe
push
xor
fisubrl
and
add
xor
rcrl
push
loop
test
mov
into
movsl
pop
xchg
sub
mov
xor
cmp
push
and
pop
repnz
jae
dec
cmpsl
test
and
jb
mov
into
out
jge
lods
cmpsl
ror
bound
xor
out
mov
loope
adc
jge
fsubl
push
sahf
insb
cvtdq2ps
std
jne
arpl
loope
test
mov
fistl
test
push
cwtl
xor
inc
daa
cmpsb
cmp
add
out
and
dec
sahf
jmp
xor
sbb
cld
lcall
les
or
movb
jno
pop
loope
sbb
mov
aam
push
xchg
je
add
jae
inc
push
ss
xchg
sbbl
push
bound
cmp
out
out
sti
jp
push
ss
xor
inc
js
sub
cmp
or
push
add
fs
rorl
stos
pop
icebp
fldt
decl
cs
shlb
inc
int
cmp
jbe
les
jnp
lock
sub
shl
gs
daa
cli
push
fcmovu
sar
add
repnz
aad
or
jg
cmp
pop
sbb
push
mov
cmp
test
repnz
add
or
push
pop
add
mov
cltd
nop
iret
inc
mov
mov
jcxz
dec
loope
dec
jecxz
mov
cs
push
mov
push
xchg
cmpsb
gs
data16
xchg
inc
adcb
arpl
pop
push
sbb
mov
test
inc
add
imul
arpl
sub
lret
scas
and
aaa
dec
push
pop
hlt
cmp
das
push
sarl
pop
repz
je
out
add
pop
cmp
or
or
cmp
fdivl
int
sbb
add
jnp
sbb
push
fwait
xor
lea
iret
call
aas
inc
loopne
pop
loope
mov
incb
pop
mov
pop
outsb
outsb
les
psubsw
mov
push
push
lods
nop
xor
lods
push
jns
nop
aas
shrb
inc
add
xchg
cmpsb
cmpsl
and
pop
push
enter
cmp
mov
loop
test
inc
sahf
fbld
cltd
mov
pop
jno
mov
nop
push
ret
jnp
inc
in
inc
addr16
std
cmc
and
fnstcw
cmpsb
fdivs
fisttps
dec
insl
inc
xor
xor
lods
cs
mov
add
jmp
pop
fldcw
sub
sti
mull
cld
bound
lahf
stos
and
xor
out
dec
cli
aam
nop
push
xor
hlt
adc
sbbb
mov
sbb
mov
cmp
push
mov
outsl
xchg
jle
jne
or
loope
es
mov
pushl
sub
js
push
test
or
stos
push
xor
xchg
sbb
jne
lea
lcall
sbb
xor
sbb
stc
lods
popa
and
and
jg
ret
repz
fwait
outsb
fwait
lds
xlat
movsl
cmp
int3
data16
out
movsl
ret
xchg
iret
sbb
jnp
divl
sub
push
and
mov
pop
sub
hlt
push
xor
negl
pushf
add
int
fnsave
outsl
xor
fimull
lock
imul
lret
mov
pop
out
push
loop
sbb
xor
loop
and
and
sbb
stos
adc
inc
lret
sarl
insb
or
sahf
xchg
decl
fs
xchg
inc
add
leave
mov
loop
push
fwait
sbb
ljmp
cmpsb
inc
cmpsb
jo
sti
mov
add
xor
das
dec
sbb
lock
in
adc
or
idivb
mov
pushf
dec
stc
int
aaa
loopne
pop
mov
rorl
mov
jbe
arpl
and
shr
mov
fsubrs
fdivl
cltd
out
mov
iret
mov
loopne
adc
std
repnz
dec
sbb
xlat
mov
pop
sbb
sarb
push
jbe
stos
sbb
xchg
xor
sbb
sub
pop
inc
dec
mov
jae
aas
ja
mov
fstps
mov
stos
mov
mov
and
iret
gs
fucomp
fisttpll
stos
fs
add
xor
push
push
loop
mov
xor
jne
mov
nop
xor
dec
pop
dec
push
and
mov
sbb
xlat
lods
xchg
mov
jo
cmpsl
and
shrb
xchg
dec
pop
mov
inc
outsb
rcr
lcall
cmp
xlat
pop
enter
icebp
pop
xchg
loope
jg
pop
sbb
shlb
pop
cmpsl
ret
mov
sbb
add
cmp
test
pop
imul
gs
outsb
hlt
pop
jge
mov
mov
dec
bound
xchg
jg
clc
daa
imul
and
jg
lea
cmpsb
xchg
push
and
mov
and
inc
lahf
mov
addr16
popa
inc
daa
cmp
mov
shrl
cmc
cmp
push
xchg
ret
pop
jl
or
or
popf
sub
movsb
inc
daa
sti
push
outsl
and
scas
inc
jl
push
jne
push
jmp
ljmp
lcall
xor
push
test
or
push
cmp
loop
popa
es
sbb
test
lea
movsl
add
jg
mov
sbb
mov
xor
sti
data16
sbb
xor
mov
jp
jo
movsl
lds
xor
lea
xchg
negl
mov
andl
sbb
fmull
adc
fcmovnu
lret
movsb
pop
iret
lahf
testl
mov
daa
enter
outsl
xor
hlt
xchg
lods
lcall
mov
ljmp
jno
repnz
push
imulb
adc
and
leave
enter
stos
mov
enter
popa
adc
push
aad
mov
sbb
and
enter
icebp
jmp
lret
movsb
test
lea
push
lea
xor
out
mov
and
inc
in
test
adc
mov
jae
ret
push
mov
hlt
dec
xchg
addr16
out
adc
xchg
push
add
fdivl
mov
inc
pop
lods
vprotb
imul
add
xor
fsubp
mov
mov
sub
or
mov
loope
pop
sbb
xor
mov
mov
out
iret
mov
test
adc
add
pushl
aaa
cmpsl
dec
add
or
cwtl
lahf
add
stos
inc
or
cmp
cmp
sbb
cs
adc
mov
xor
and
adc
adc
mov
mov
sti
mov
ja
or
in
ret
arpl
fcmovne
dec
dec
mov
push
dec
sbb
sbb
sbb
sbb
or
xor
push
fiadds
mov
sarl
cmp
pop
mov
out
inc
sbb
ds
fs
orl
iret
jb
xor
dec
shrb
mov
outsb
loop
mov
int3
mov
inc
cld
mov
lcall
and
sub
arpl
cmc
dec
lods
lods
divl
adc
push
ret
mov
loopne
push
inc
sti
xchg
cmpl
xor
xchg
add
fs
repz
add
outsl
fwait
adc
jne
xor
jns
lds
fmull
mov
jmp
xchg
sub
sbb
ss
adc
cmp
sbb
mov
fdivrp
xchg
mov
pop
in
aas
xchg
ljmp
je
mov
clc
shl
bound
movsb
iret
or
and
push
movsb
aaa
test
cmc
fisubrl
sbbb
mov
sub
cld
fidivl
call
cmp
xchg
cltd
outsl
xchg
test
lahf
mov
push
or
movsl
add
jb
jmp
push
cltd
test
cltd
xor
sub
fwait
ret
hlt
mov
shl
inc
sbb
scas
test
adc
xchg
fidivl
iret
mov
pop
int3
pop
pop
dec
inc
in
inc
daa
aad
shl
out
daa
lods
icebp
loope
icebp
dec
mov
fwait
or
cmp
scas
mov
addl
mov
and
outsl
std
xor
dec
inc
call
repnz
adc
and
loop
lods
adc
test
push
jb
mov
movsb
adc
hlt
movsl
adc
movsb
icebp
in
mov
mov
and
cmpsb
mov
dec
cmp
repz
pop
aad
xor
les
xor
fsubrp
sub
push
add
fsub
mov
lret
bound
in
loopne
ljmp
push
ja
clc
xor
roll
push
add
xchg
xchg
jmp
pop
cmp
outsb
jns
call
rcll
out
repnz
popf
xchg
pop
push
in
iret
fxch
lret
int
and
xor
sbb
add
xchg
fs
mov
and
dec
and
add
add
mov
jg
sbb
xchg
sub
pop
adc
stc
mov
in
pop
pop
js
ljmp
xchg
sub
mov
stc
inc
mov
jne
sbb
jb
mov
fldl
outsb
dec
fwait
sbb
insl
mov
inc
jno
pop
dec
data16
out
adc
jbe
in
mov
les
cmpsl
add
cs
jb
mov
ds
fldenv
aam
shld
aas
jbe
jno
push
das
in
inc
pushf
pop
shlb
mov
in
sti
les
or
cmp
pop
loopne
sbb
jno
sbb
ja
add
mov
andb
push
mov
ret
icebp
daa
jmp
jbe
mov
inc
stos
fnsetpm(287
pop
das
and
ret
mov
push
inc
xchg
movsl
shr
cmp
sub
add
movsl
arpl
stos
loopne
push
push
adc
sbbb
dec
pop
and
inc
in
xchg
sbb
ja
pop
loope
adc
xor
adcl
mov
movsb
popf
ds
into
pushf
xor
shrb
mov
adc
in
test
xchg
xlat
lds
divb
xor
mov
mov
cmp
add
scas
xor
sub
fadds
jl
loop
dec
lods
mov
or
insl
pop
adc
les
mov
sub
xchg
fnstenvs
xchg
notl
dec
mov
leave
fsub
inc
mov
mov
out
mov
inc
lods
inc
jge
sahf
das
mov
ja
movsb
mov
xlat
loop
or
int3
push
mov
push
mulps
fadds
sbb
fidivrs
adc
leave
inc
aas
mov
sbb
sub
pop
arpl
xor
neg
ljmp
inc
in
dec
sub
std
jecxz
imul
jae
rolb
movb
insb
ret
mov
dec
push
xor
test
inc
mov
add
es
outsl
cmp
mov
push
ds
sbb
mov
dec
cmp
pop
mov
mov
loopne
repz
sahf
xor
movsl
jecxz
mov
xchg
and
leave
push
cmpsb
dec
mov
dec
pop
cmp
xchg
push
inc
dec
mov
mov
push
sub
and
loopne
scas
push
push
inc
insl
ds
aas
push
push
jo
and
and
inc
xor
fisubs
enter
mov
mov
add
ret
inc
int
out
pushf
push
xchg
sub
mov
cmp
sub
xor
cmp
sbb
jns
lea
ljmp
out
xchg
sbb
mov
mov
shrb
pop
inc
loope
inc
and
mov
aas
ffreep
ds
or
in
push
mov
adc
int
hlt
fbld
insl
sub
mov
mov
lods
fcmovnb
xlat
in
inc
xchg
push
mov
fcom
movsl
clc
loop
jns
cmp
lcall
lret
push
lret
sarb
in
imul
mov
aam
pusha
popf
mov
jno
mov
and
ss
pushf
stc
imul
or
or
repz
repz
testb
in
ljmp
jge
ret
test
inc
xchg
movsl
xchg
sbb
jns
fdivs
and
xchg
jmp
and
jge
push
nop
aam
mov
or
mov
shrb
mov
mov
or
xchg
daa
mov
rorl
mov
xor
cmp
pop
aam
ret
repz
dec
loop
popa
adc
aam
add
out
xchg
test
imul
clc
mov
stos
push
outsl
and
push
sub
pop
and
mov
int
sub
inc
jecxz
push
dec
fidivrl
fstpl
movb
xchg
and
test
addl
movsb
imul
movsb
push
popa
sbb
mov
ds
mov
loopne
xor
clc
int
scas
jno
addr16
mov
pusha
and
cmpl
imul
idivl
mov
scas
mov
aam
shrb
mov
loop
negl
mov
repz
cmp
cld
outsb
and
pop
mov
andl
and
mov
mov
dec
cmp
shr
imul
jns
ficoms
movsb
in
aaa
pushf
dec
push
and
mov
lret
fists
mov
jo
aaa
lds
sub
cmovne
cmc
xchg
ret
push
lcall
inc
rcr
and
lock
jge
adc
mov
cmpsb
lods
push
or
inc
mov
inc
aas
xchg
cmp
and
mov
icebp
cli
sub
enter
es
inc
pop
idiv
inc
gs
xchg
imul
jp
mov
adc
push
fwait
push
lods
and
test
add
dec
push
int
iret
arpl
or
add
xor
mov
pop
adc
sub
lcall
repnz
ffree
push
mov
out
fs
fnsave
ja
repnz
stos
insl
call
lret
jb
xlat
out
lahf
outsl
push
rcll
movb
je
cltd
xor
ret
bound
mov
ficoms
and
mov
pop
pop
xor
sub
mov
aas
std
into
dec
sbb
jp
out
loopne
cmc
push
sbb
mov
or
sbb
mov
pop
and
cmc
cmp
xchg
push
jae
mov
aas
push
mov
push
push
ret
sahf
sub
inc
das
cs
sbb
add
or
pop
jae
mov
dec
lcall
adc
inc
cmp
cltd
push
or
hlt
xor
sbb
orb
addr16
or
adc
mov
xor
loope
xchg
lcall
mov
sbb
leave
vpmaddwd
jo
push
out
popf
mov
or
outsb
cld
ss
adc
movups
inc
and
ret
outsl
inc
bound
sbb
dec
cmp
outsl
push
shll
mov
mov
pop
xchg
cli
ljmp
popa
adc
push
push
out
jge
sti
lods
inc
iret
pusha
arpl
cmp
loopne
test
in
dec
outsb
lods
hlt
lcall
cwtl
pop
test
fdivs
or
jns
repz
mov
stc
and
movsl
lods
negl
xor
add
imul
fsts
dec
cmp
inc
push
cmpsl
loopne
and
mov
test
xor
xchg
xchg
testb
in
stos
adc
cmp
negl
push
movsb
lds
jae
or
xor
loopne
pop
add
mov
mov
sub
fwait
ds
adc
dec
idiv
test
sub
jno
pop
movsl
aad
xchg
mov
cmc
add
idivl
loope
jl
loop
mov
nop
xchg
and
jecxz
lods
add
sbb
jno
or
test
mov
adc
cmp
push
sbb
clc
sub
shr
cld
arpl
les
push
jbe
and
stos
lock
sti
cmp
daa
mov
lods
mov
insb
and
subl
ja
or
xchg
mov
dec
scas
jge
dec
cmc
js
sbb
adc
jo
or
nop
es
ficoms
fcomip
cmpsl
fs
xchg
jns
push
stos
mov
arpl
jb
lahf
bound
ds
xchg
pop
mov
movsl
popa
negb
mov
mov
pop
or
jg
inc
addr16
je
jae
imul
and
repnz
adc
in
adc
leave
pop
cld
or
pop
mov
xor
daa
daa
inc
push
ret
dec
jge
popa
das
xor
pop
incb
dec
loopne
and
repz
push
addl
cmpsb
or
xlat
int
or
jnp
push
mov
jp
xchg
ret
mov
cmp
dec
in
mov
dec
jb
add
leave
cmpsb
lods
orl
or
aam
xchg
pop
nop
data16
mov
les
je
fisubrl
pop
pop
sbbb
push
mov
in
pop
in
pop
ret
movsb
mov
jne
jg
in
push
or
pop
xchg
sub
imull
fwait
ja
mov
xchg
xchg
aad
repnz
mov
clc
or
test
mov
cld
sub
add
xchg
mov
pop
xchg
sub
cmp
fldenv
pop
stc
push
scas
ss
sbb
cli
dec
sahf
cmp
adc
jp
mov
andb
cltd
cs
cli
sarl
jae
dec
mov
mov
xchg
fnstenv
or
mov
push
scas
adc
sbb
adc
xor
push
jbe
imul
std
lods
insl
mov
dec
add
stos
mov
and
call
arpl
mov
push
jnp
sbbl
mov
scas
xchg
jae
dec
jmp
cld
add
and
lea
ss
sub
in
leave
push
xchg
xchg
sbb
sub
adc
inc
inc
dec
add
cmc
testb
rclb
xor
imul
pop
pop
out
popa
std
inc
sbb
insl
xchg
sub
jo
mov
clc
rorl
push
cmc
xor
xor
or
insl
cmp
daa
hlt
cld
test
cmp
add
clc
sbb
inc
xchg
cmc
adc
outsl
testb
les
out
aas
daa
fdivs
insl
adc
pop
aaa
mov
cltd
sub
xchg
cmc
xchg
and
mov
imul
aaa
push
pop
out
xchg
lcall
fidivl
pushf
addl
inc
sub
mov
jp
aaa
pushf
xor
dec
popa
mov
daa
mov
add
mov
mov
loope
ds
xor
sbb
subb
pop
cmp
test
scas
xchg
mov
sbb
jo
in
lds
cmc
sbb
pop
jg
loopne
sbb
add
mov
push
pop
imul
mov
leave
aas
arpl
outsl
xchg
dec
clc
test
out
mov
cwtl
push
mov
cwtl
pop
es
xchg
xchg
add
shlb
jecxz
add
or
dec
repnz
sub
push
aam
push
push
je
loopne
fs
xchg
fisubl
push
inc
xor
jae
mov
mov
jl
fmuls
fidivrl
sub
int
stc
shlb
inc
lods
cmp
xchg
aaa
push
lahf
mov
icebp
aam
dec
ja
cmpl
fcmovnu
xlat
imul
outsl
push
xor
mov
insb
jle
out
out
mov
idivb
fs
aam
hlt
icebp
xor
add
loop
lock
add
sbb
cmp
insb
pop
clc
adc
test
inc
fsts
je
ja
jmp
sbb
mov
dec
in
sbb
jns
stos
movsb
jl
cmpsb
inc
mov
inc
jo
add
lds
and
pop
xchg
aad
pushf
jnp
out
mov
pop
out
fucomip
dec
rcrl
addr16
adc
pop
cmp
mov
add
mov
or
test
fdivrs
pop
jmp
fucom
push
pushf
push
jg
cmp
mov
push
sbb
mov
push
lods
adc
xor
push
jnp
inc
mov
scas
jge,pt
dec
pop
xor
pop
das
jne
jecxz
sbbb
repnz
shrl
mov
icebp
adc
mov
add
inc
repz
icebp
aad
popf
in
jb
dec
mov
xor
loop
fisubl
iret
popa
xor
pushf
and
mov
cmp
sbb
cmp
mov
push
lea
jmp
jl
rcll
fsts
sub
or
out
jb
mov
add
pop
add
pop
pop
daa
int
cltd
cmp
xchg
adc
aam
aad
cltd
test
add
sbb
fwait
enter
divl
cmp
cmp
stc
and
imul
mov
fistpl
dec
dec
push
jns
cmpb
jl
dec
lea
and
int
lea
dec
stos
inc
loop
adc
xorl
out
movsl
mov
lret
aaa
mov
jecxz
xor
jae
xor
xchg
es
jecxz
test
sub
pushf
dec
jmp
sbb
test
gs
fwait
stc
sub
in
jmp
cmp
dec
mov
jbe
and
jo
cmp
and
movl
lret
dec
aam
dec
or
cs
mov
jo
stos
sub
loop
push
int
sub
imul
push
mov
cld
and
jl
add
push
dec
rcr
push
fsubl
or
inc
rcrl
fwait
xchg
roll
pop
hlt
push
fs
mov
mov
sub
mov
jmp
mov
lods
push
out
dec
fcmovnu
je
jo
shl
jl
fnsave
ficompl
scas
jg
test
pop
fcompl
push
jg
pusha
sti
jp
pop
mov
testl
shll
inc
push
fdivs
push
jnp
shll
int3
mov
aaa
sub
fdivrs
insb
dec
test
mov
out
jne
mov
cmp
icebp
mov
pushf
or
and
das
push
pop
mov
or
movsb
gs
jecxz
mov
or
idivl
testl
sub
or
xchg
daa
clc
scas
nop
orb
loop
sbb
inc
push
inc
fldcw
bound
add
daa
pop
mov
sub
sub
inc
pop
icebp
out
movsl
mov
push
sub
icebp
cmova
out
sub
cld
xchg
sub
out
js
jecxz
icebp
pushf
lret
xor
pop
inc
fstl
add
xor
mov
sbb
mov
lret
pop
xor
push
insb
roll
in
in
dec
lahf
sub
out
addl
rolb
inc
sub
in
mov
xchg
ds
fcom
scas
dec
adc
call
cmp
mov
ds
rcll
fisubrl
scas
push
das
xchg
ljmp
subb
mov
jne
int
mov
inc
in
jg
sbb
dec
sbb
scas
adcb
incb
adc
xor
shll
fdiv
insl
cmp
aad
cltd
pop
hlt
push
stos
xchg
and
fnstcw
out
mov
jl
or
sbb
or
mov
popa
lret
push
sub
out
dec
in
jmp
notb
roll
mov
inc
insb
sub
ss
bnd
icebp
test
sub
dec
adc
int3
jns
shll
rcrl
adc
lea
pushf
xor
jbe
fwait
sbb
adc
mov
push
adc
std
or
xor
fldenv
dec
mov
mov
stos
adc
lcall
or
repnz
rcr
ja
ja
push
cltd
inc
mov
mov
push
mov
add
xor
pop
and
jp
fwait
inc
mov
loop
lods
outsl
push
pop
mov
ljmp
push
out
or
push
jp
jmp
mov
fwait
mov
sti
loop
sub
cmp
jmp
bound
pusha
sub
inc
gs
xchg
stos
xchg
cmc
fsubrp
cs
xchg
rorl
pop
sar
or
cmpsl
dec
sub
loopne
mov
push
test
test
enter
mov
arpl
nop
outsl
jnp
sti
xchg
dec
inc
or
adc
fnstsw
arpl
pop
insb
xchg
scas
mov
sub
dec
shl
xor
pop
or
clc
addr16
jmp
jno
ret
mov
push
insl
dec
pop
push
lods
inc
call
xor
cwtl
cmp
test
mov
ss
or
cmp
pop
mov
lods
bound
fnstenv
add
lods
add
cmp
mov
lods
arpl
fnstenv
sarl
lods
outsl
sbb
leave
ss
jo
ljmp
rcrb
lret
fnstenv
dec
mov
mov
cmp
clc
das
aad
add
les
pop
push
nop
adc
xor
movsl
mov
push
loopne
pop
aaa
ret
fbld
mov
mov
xor
dec
std
ds
or
push
mov
dec
xlat
mov
mov
addb
xchg
jb
outsl
pop
int
push
or
aas
xchg
pop
mov
pop
pop
out
push
stos
cwtl
das
fnsave
and
mov
jo
jp
inc
jne
imul
nop
fisttps
inc
mov
xchg
jo
push
xor
jle
cmp
push
add
rcll
shlb
rorl
mov
mov
pop
sub
or
cmpsb
mov
xorb
out
cli
leave
xchg
cs
test
js
xor
pushf
nop
sbb
sbb
push
adc
cmovbe
mov
and
add
rolb
jae
cmp
mull
or
pusha
hlt
cmpsb
push
lea
xlat
cmp
imul
cmp
fmul
sbbb
lahf
ss
cmp
rcll
pop
mov
sahf
mov
add
jg
cmc
add
cmp
mov
cld
xchg
sub
imul
stos
and
jl
cltd
xorl
pop
xchg
out
add
cmp
mov
xor
pop
in
ret
popa
mov
adc
jo
xchg
sub
mov
shlb
dec
adc
mov
sub
cmp
sub
pop
repz
push
mov
div
aam
pushf
and
push
out
repnz
std
std
outsb
inc
mov
or
mov
and
aas
jmp
cmc
lock
xor
es
mov
push
fisubl
call
nop
sub
movsl
scas
or
mov
lock
pop
jle
push
add
cmpsb
and
and
lods
jbe
mov
nop
mov
mov
cmpb
mov
xor
sub
movsb
jp
in
inc
sub
sbb
lahf
mov
mov
rclb
lcall
push
cmp
dec
lock
mov
jae
xlat
cmpsl
incl
adc
add
es
repnz
dec
mov
imul
mov
insl
shlb
inc
mov
ljmp
adc
xor
xchg
enter
into
fstpl
pop
pop
dec
sbb
and
int
sbb
mov
push
or
cmc
cmp
shll
sbb
jle
stc
scas
je
and
cmpsl
xor
push
xchg
test
sbb
shrb
fldt
adc
lock
notb
mov
and
push
mov
or
call
mov
pusha
inc
popa
jp
ret
cmpsb
cmp
dec
pusha
lds
fwait
push
jmp
shlb
mov
pop
xchg
push
fists
sub
xor
dec
cmp
leave
scas
in
adc
cmpb
jge
xchg
mov
pop
loopne
jle
cltd
mov
inc
inc
mov
in
and
inc
in
mov
stos
gs
inc
cmc
sbb
mov
xchg
push
inc
xchg
mov
pop
cmp
jl
mov
fsubrl
stos
pop
adc
push
mov
add
pop
xchg
xchg
scas
mov
insb
jno
push
xor
push
mov
into
pop
mov
adc
rcrb
push
sbb
mov
in
hlt
fmuls
cmp
mov
mov
in
out
cmc
pop
pop
jecxz
mov
sbb
inc
sahf
cli
andl
add
or
dec
and
jno
inc
jmp
mov
fimuls
cld
push
pop
icebp
and
mov
aas
dec
cmpsl
addr16
jecxz
ja
mov
push
mov
fcoml
dec
into
in
cmp
mov
incl
cmpl
add
inc
xor
lods
aam
ja
aad
int3
fbld
test
sbb
and
sti
xchg
stc
lea
outsl
jp
sbb
adc
mull
mov
lock
mov
lcall
and
sbb
cmp
push
outsl
fildl
and
and
push
int
sub
das
lcall
cwtl
xor
mov
cmp
mov
push
mov
sbb
cmpsl
aaa
jle
lahf
scas
sub
jo
aas
or
add
sbb
int3
jbe
xor
dec
dec
jl
and
pushw
lcall
lret
push
out
orl
mov
cmpsb
dec
gs
pop
sub
int
ret
push
sub
pop
jo
sub
mov
mov
rcrb
js
jno
pop
cmp
scas
push
jle
subb
lret
divl
mov
mov
adc
or
pop
dec
repz
into
xchg
aad
xchg
mov
sahf
in
pop
push
dec
push
jb
pop
adc
push
pop
or
dec
mov
push
leave
adc
jno
xor
outsb
xchg
jle
sbb
cmpsl
sbb
rorl
imul
inc
popa
mov
adc
imul
shl
jbe
inc
jns
mov
jmp
inc
rcll
hlt
mov
mov
in
rcll
testl
mov
ss
pop
mov
enter
loope
dec
adc
dec
iret
push
in
aaa
lods
pop
sahf
ficomps
leave
add
std
lret
mov
je
and
iret
push
jmp
jmp
icebp
sbb
pop
mov
push
dec
fistl
mov
in
sub
xchg
lods
es
inc
insb
std
add
xor
test
jnp
addr16
ss
ja
lea
xchg
mov
pop
ds
sbb
add
and
jns
icebp
aas
out
sarl
add
andl
pop
inc
sbbl
add
jle
aas
push
in
and
test
lret
xchg
mov
mov
sub
mov
ja
push
mov
stc
test
dec
push
ljmp
popa
outsl
rcrl
sub
sbbl
mov
out
outsl
or
add
in
enter
sub
arpl
insb
xchg
les
cmpsb
ljmp
enter
mov
pop
pushf
xor
or
andb
nop
lds
imul
stos
shr
daa
jp
mov
stos
cmp
fildll
xchg
mov
leave
cmp
addr16
and
dec
cltd
cmc
sbb
jle
sub
adc
test
das
sub
movsb
cmp
ljmp
mov
or
cmp
arpl
cmp
repz
fmuls
jle
cld
inc
fisubrl
outsb
or
push
popa
clc
movsl
xchg
pop
stos
adc
in
pop
xor
imul
ror
outsl
in
jnp
shlb
pop
add
adc
movsb
mov
gs
std
gs
pop
pushf
jo
ret
sub
repnz
bound
dec
loop
out
das
sbb
shlb
loop
push
outsb
addr16
lods
fcmovb
adc
pop
leave
cmp
ss
pushf
jb
ret
inc
stc
lea
inc
pop
jne
fwait
sarl
jo
and
ds
lret
xor
mov
mov
cwtl
inc
cltd
dec
lds
gs
repz
mov
lock
lcall
popa
mov
scas
aas
jle
shlb
icebp
dec
mov
sub
pop
popa
clc
dec
xlat
mov
pop
imul
aad
adc
push
imul
int3
xor
std
lcall
leave
pop
and
pop
loopne
xchg
add
inc
or
dec
inc
push
ss
scas
lock
rcrb
ljmp
cld
fnsave
mov
sbb
pop
lock
lahf
es
aam
jl
iret
fbstp
cld
add
pop
out
pusha
lahf
iret
sti
mov
xor
ret
arpl
lods
pop
call
mov
dec
add
xchg
inc
lds
mov
xchg
ret
nop
jecxz
fs
xchg
cmp
cmp
in
scas
and
add
jb
call
cmpsl
mov
or
enter
cli
push
jge
pop
mov
adc
mov
pop
out
cltd
test
mov
fcmovbe
lods
and
popa
xor
inc
faddl
xor
rol
xchg
jns
jbe
call
or
outsl
inc
rolb
mov
neg
pop
cmc
inc
testb
aad
lods
sbbb
mov
adc
cmp
or
or
jmp
or
cmpsl
lret
data16
int3
cmc
add
xor
sbb
loope
int3
je
jbe
sbb
mov
inc
repz
sbbl
into
packuswb
push
movsl
cmpsb
ret
bound
aaa
dec
lahf
out
dec
repnz
inc
lods
sahf
adc
insl
pushf
test
mov
xchg
adc
cmp
mov
test
in
adc
mov
jnp
add
andl
out
in
or
or
std
push
daa
je
pop
jnp
dec
and
cwtl
pushf
enter
in
jmp
and
push
mov
push
adc
push
dec
cmpsb
dec
mov
xchg
jg
sub
std
inc
fidivs
sbb
inc
xchg
jo
inc
mov
in
push
add
setbe
pop
out
mov
hlt
fistpl
addl
sysret
dec
cmpsb
cmp
pop
pushf
out
jl
cmp
ljmp
std
rclb
pop
out
sbb
mov
ret
jne
jg
cltd
cwtl
pop
scas
mov
stos
ss
push
mov
add
lret
dec
adc
jae
push
push
inc
mov
push
mov
test
xchg
mov
pop
adcl
jp
and
js
mov
push
xchg
fcompl
cli
or
fcmovbe
ret
sub
cli
push
mov
dec
sbb
lret
lods
mov
outsl
roll
fiadds
test
cmp
ret
xchg
fstpt
shr
xor
ljmp
fisttpl
movsl
cmp
cmp
sub
test
cli
mov
negl
mov
add
pop
das
pop
ret
pop
lds
adc
leave
pushf
aaa
push
add
hlt
or
gs
sub
mov
loopne
es
int3
sbb
xchg
fsubs
mov
pmaddwd
jo
inc
scas
inc
outsb
jle
fcmovb
pop
lds
gs
push
adc
cli
loope
push
sub
adcl
pusha
das
dec
push
out
adc
inc
loopne
sbb
mov
andb
mov
hlt
fxch
dec
pop
add
jmp
push
sbb
movsb
sub
out
push
cmp
xor
pop
add
in
std
je
jecxz
orb
mov
xchg
hlt
rcrb
lret
fwait
lahf
cli
xchg
movsl
cmp
xlat
call
mov
mov
jmp
aas
in
shlb
and
or
cmp
ret
adc
lret
push
out
idivl
add
sbb
mov
cmp
bound
push
dec
pop
call
fs
mov
stos
xchg
aaa
sti
cmp
jae
loope
xor
lods
in
inc
mov
ja
xor
mov
mov
out
push
jg
xchg
and
sbb
lahf
out
into
inc
outsb
int
enter
cltd
repnz
icebp
xor
int3
pop
jno
test
mov
jecxz
addb
pop
cmp
push
in
popfw
pop
lret
loopne
outsl
push
imul
xchg
fnstcw
out
mov
sbb
sub
xchg
mov
arpl
jb
push
xchg
shrb
inc
inc
es
and
fldl
mov
clc
add
add
xchg
inc
sub
xchg
xlat
xor
clc
in
cltd
test
sub
repz
mov
sbb
lahf
ja
pop
jle
pop
imul
lock
xlat
jae
lea
icebp
aam
ljmp
jecxz
mov
aaa
sbb
xor
add
arpl
mov
test
mov
arpl
clc
mov
or
mov
push
out
mov
mov
jge
pinsrw
insb
cltd
adc
sub
insl
sbb
shrl
movsl
xor
add
jge,pt
popf
xchg
mov
jmp
pop
ret
cld
push
or
std
pushf
or
shll
dec
mov
iret
cmpsb
in
hlt
xchg
imul
push
addb
cmp
ljmp
jl
adc
pop
push
xchg
pop
stos
cmp
pop
outsb
jne
call
mov
pop
sbb
jp
add
clc
cmpsl
add
mov
test
ret
mov
mov
jns
pusha
adc
incb
aas
xchg
test
mov
xor
lahf
lods
or
fucompp
popa
push
jo
adc
jne
jne
xor
mov
pop
mov
xor
mov
or
les
iret
ret
sub
adc
js
push
in
or
or
pop
sub
fidivrs
icebp
test
mov
out
out
ret
rorl
std
nop
adc
xor
push
sub
dec
mov
imul
xchg
movsl
xor
cmc
lret
and
jg
push
inc
out
mov
or
iret
and
mov
push
add
push
xor
or
push
cmpsl
mov
sub
cmc
mov
int
and
adcb
int3
pop
jne
dec
xchg
push
inc
push
xchg
xor
les
rorb
adc
js
sub
cmp
inc
enter
cmpsl
pop
cmp
hlt
add
test
sub
cmp
aaa
add
mov
push
mov
and
fimuls
in
imul
jl
cltd
std
icebp
movsb
lcall
or
cltd
nop
push
pop
cmp
leave
pusha
pop
hlt
mov
mov
inc
dec
inc
out
inc
sahf
and
ret
jle
inc
jns
movd
das
fnstcw
fildl
jbe
pop
xor
push
push
in
cli
dec
lods
repnz
lcall
in
jb
sbb
shufps
nop
adc
clc
cmc
xchg
sub
leave
clc
and
in
loope
pop
mov
mov
dec
pop
sub
or
lods
mov
mov
lods
shrb
addb
mov
adcb
cwtl
push
lret
stos
mulb
aaa
cmpsl
repz
add
dec
push
xchg
sub
push
repnz
in
cmp
push
cmp
shll
in
add
cmpsl
loop
in
aas
fistpl
push
sbb
mov
xor
xchg
mov
cmpsl
nop
push
sbb
test
adc
bound
fimuls
es
jns
popf
cmp
inc
jp
jnp
add
mov
xchg
mov
or
std
in
dec
out
sub
inc
mov
mov
jns
mov
sbb
jecxz
push
sbb
pop
es
add
icebp
push
push
xlat
dec
scas
andb
add
je
xchg
pop
xor
in
clc
ss
mov
sub
andb
push
push
orl
add
lahf
adc
iret
or
mov
cmp
stos
cwtl
mov
into
or
pop
ds
iret
and
cmp
icebp
mov
scas
dec
idivl
adc
insl
daa
in
stos
dec
cmpsb
inc
sbb
fsubrl
sub
daa
push
jecxz
bound
imul
stc
xor
push
aas
sbb
loopne
push
aad
fcoml
cmp
mov
pop
xchg
add
mov
add
mov
lds
sub
pop
sbb
loopne
pop
add
inc
addr16
mov
xchg
std
or
or
lods
test
pop
or
cmpsb
data16
mov
push
jnp
xchg
inc
inc
aas
adc
mov
ret
std
lock
pop
pop
mov
leave
adc
mov
mov
xchg
in
mov
cs
sub
inc
jl
cmp
and
movsl
inc
sub
mov
xchg
repnz
push
inc
and
dec
popf
rorb
daa
dec
jp
stos
jp
stos
ds
cmpl
aas
sub
aad
shrl
popa
std
jecxz
cmpsb
mov
jbe
fsts
fimuls
es
stc
test
mov
cmpsb
add
mov
push
mov
sub
jns
xor
scas
sbb
adc
lahf
sbbb
xor
mull
sti
sbb
sahf
mov
pushf
scas
std
push
xor
sbb
push
sbb
pop
leave
jns
mov
adc
mov
pushf
adc
icebp
shr
int3
and
xor
sbbb
scas
push
add
test
outsb
call
stc
cmp
rorl
mov
pop
enter
nop
sub
push
insl
rdpmc
pop
lds
pop
insb
pop
scas
int
ja
test
lds
xchg
cmp
xor
dec
push
je
dec
mov
inc
daa
das
pop
out
xchg
int
jbe
jg
push
pop
lock
sub
inc
sub
cmp
ret
rcrb
imul
mov
leave
jle
or
pop
jecxz
movsl
inc
mov
pushf
cli
xor
std
mov
nop
and
popf
inc
int
mov
push
push
or
mov
adc
sbb
andb
jmp
rcl
or
mov
stc
je
pop
pop
mov
inc
mov
std
mov
push
inc
inc
add
stos
cmc
out
insl
loopne
lahf
cmp
pusha
daa
inc
ljmp
cld
insl
inc
outsl
jnp
pop
inc
gs
movswl
dec
xchg
mov
pop
orb
arpl
pop
sbb
jns
out
inc
adc
daa
ror
mov
ja
mov
dec
gs
jge
inc
enter
cmpl
xchg
std
xor
xlat
lods
add
movsb
fistpl
test
popa
xchg
dec
jge
repz
inc
and
subl
pop
push
jecxz
inc
icebp
mov
ss
and
daa
mov
in
test
and
cmpsb
push
xchg
pop
jecxz
jns
aam
in
add
ficoml
xchg
pop
pop
mov
push
ret
clc
add
sub
clc
push
jmp
out
nopl
sbb
scas
adc
shlb
push
mov
fadds
cmp
stc
xchg
dec
mov
cld
fsubrs
aam
jg
pop
push
and
addr16
imul
mov
jmp
inc
push
test
pop
mov
fcoml
scas
xlat
ret
jns
jns
in
fistpl
pop
xchg
call
cmpsb
js
inc
cmpsb
and
sub
add
push
addr16
cmp
mov
lds
pop
es
andl
adc
icebp
cmpl
dec
cmpsl
imul
sbb
leave
cld
xchg
push
xor
cwtl
mov
adc
mov
inc
rclb
jmp
xor
out
cmp
jno
test
sarl
insb
jle
cmp
arpl
stos
adc
and
cmp
imul
xchg
test
xchg
sub
xchg
push
int3
into
inc
test
xor
xor
dec
cmp
aaa
jp
xor
je
mov
cs
push
xor
mov
pop
and
pop
push
popf
leave
mov
and
iret
adc
sahf
inc
lods
mov
mov
pop
add
loopne
pop
adc
rcrb
cmp
mov
xchg
addr16
mov
push
pop
inc
and
shrl
xchg
mov
dec
add
into
dec
push
jne
jmp
add
mov
pop
sub
dec
lock
jp
push
mov
leave
add
inc
xorb
push
mov
and
fs
xchg
xor
adc
adc
push
sub
push
pop
inc
xchg
push
sub
mov
add
cs
push
test
cmp
inc
enter
aas
sbb
inc
sahf
pop
mov
add
sub
add
fcmovnu
ja
add
and
lock
icebp
jbe
sub
add
xchg
cltd
cltd
lock
in
or
xchg
xchg
stos
mov
xchg
jecxz
or
int
sub
cs
adc
lea
mov
dec
lahf
xchg
stc
pop
mulb
rcl
out
outsb
xor
gs
mov
sbb
jno
xor
aam
inc
in
adcb
shl
jae
stos
sub
sub
les
stc
cmp
psrld
repz
lret
adc
stos
ret
pop
adc
mov
sub
sbb
mov
rcrl
xor
jno
dec
sub
aam
cmc
or
pop
and
sbbb
pop
and
cmpsb
in
cltd
sbb
nop
cmpl
adc
xchg
and
jnp
sub
imul
cwtl
adc
sbb
jg
insb
adc
jbe
inc
popf
sbb
les
int3
insb
xchg
enter
pop
mov
sub
lds
and
or
cmp
sbb
out
xchg
dec
lods
daa
into
mov
test
xlat
xchg
call
push
enter
mov
pusha
subl
push
sahf
push
aaa
or
iret
cmp
out
sub
pop
mov
dec
and
mov
jae
ss
int3
xchg
xor
and
rorl
ret
mov
xlat
outsb
push
push
mov
pop
cwtl
xlat
fwait
inc
int
cmpsb
ja
idivl
dec
mov
lcall
andl
push
shrb
test
imul
cmp
mov
std
test
push
cwtl
xor
xchg
sub
stos
cmpsl
jmp
jp
inc
shll
lret
or
add
add
or
mov
xor
push
inc
fcoms
ds
mov
popf
out
dec
pop
inc
cs
outsl
xchg
jge
cvtps2pd
xchg
sub
ret
andb
sarl
pusha
xchg
dec
in
movsl
jp
sbb
mov
imul
dec
in
enter
scas
mov
mov
scas
pop
fsubrs
in
rclb
mulb
jno
and
fdivrs
push
pop
mov
adc
in
int3
pop
idiv
or
nop
daa
xchg
lds
cmp
imul
mov
sub
mov
sub
adc
mov
mov
cld
xchg
pop
dec
insb
sub
ret
repz
fnsave
xchg
decl
lods
adc
sub
pop
out
mov
hlt
or
and
pop
sub
gs
mov
dec
in
dec
sub
int3
mov
leave
or
jp
jbe
push
inc
add
jne
sbb
dec
loopne
mov
addr16
in
in
aas
cltd
add
imulb
and
sub
fwait
mov
jnp
pop
dec
negl
mov
inc
outsb
add
std
cmpsl
sbbl
inc
add
or
addr16
fnsave
or
movsl
and
push
sub
je
shrb
fdivrs
xchg
sub
pop
test
mov
popf
inc
pop
scas
jbe
xchg
fadd
popa
clc
icebp
std
movsl
cmp
adc
jp
je
sbb
sbb
movsb
cmp
cmp
test
lret
fildll
push
xor
popa
bound
xchg
sub
call
in
popf
adc
or
inc
ds
outsl
in
sbb
cmp
into
jl
adc
movsb
ret
push
jl
dec
in
ret
lcall
test
loop
and
mov
xchg
jae
mov
addl
and
fildll
scas
pop
test
outsl
shlb
leave
add
push
out
jecxz
test
xchg
push
adc
jo
lret
fnsave
fnstenv
idivb
daa
sub
mov
pop
hlt
jge
scas
inc
stos
mov
sarb
fistpl
or
sub
loope
leave
pusha
bound
jle
inc
stos
push
out
xor
mov
scas
inc
mov
adc
fidivs
lds
fisubrl
adc
lret
xor
xchg
sub
fs
xchg
out
adc
in
xlat
outsb
outsb
adc
inc
cmc
mov
xchg
xchg
loop
stos
adc
xor
push
mov
lcall
lahf
ss
inc
fisubrs
repz
mov
mov
inc
daa
mov
insl
movsb
shrl
mov
mov
inc
jnp
jb
jnp
outsl
stos
add
call
xor
jbe
stos
imul
mov
nop
loop
jns
jae
aad
insb
stos
arpl
fidivl
loope
je
in
test
sbbl
in
add
jne
pop
neg
mov
push
js
jmp
sbb
lods
in
loopne
pop
lock
inc
fisubrs
ja
rorb
std
xchg
sub
movsl
cmp
dec
xor
jp
mov
in
mov
mov
loope
or
inc
pop
hlt
jno
or
mov
mov
frstor
mov
insb
sub
mov
mov
faddl
cmp
jp
adc
jp
cs
or
and
jmp
out
xchg
mov
popf
lock
clc
mov
xchg
jmp
sub
jb
pop
sub
repnz
dec
popa
clc
jp
pop
icebp
sub
adc
xor
sub
mov
jo
cmp
push
je
sub
imul
xor
loope
xor
enter
add
lea
sub
pop
out
pop
push
lret
and
cmp
dec
popa
out
fwait
xor
mov
mov
or
cmp
inc
fsubs
push
in
and
imul
and
fbstp
clc
xor
sub
xchg
out
aam
sub
or
das
mov
and
pushf
xor
xor
xchg
std
rclb
cmp
in
ljmp
or
cmp
jae
cmc
out
pop
mov
and
nop
pop
or
and
out
insb
add
sub
mov
cmp
cmc
mov
in
popf
xor
sub
xor
and
nop
sub
push
in
push
sti
cltd
xor
cmp
idiv
testl
sub
std
loope
xor
gs
pop
loop
loop
rcl
push
add
insb
add
cmpsb
cmp
or
sbb
rcrl
int
adc
add
inc
add
xor
and
push
sbb
mov
jo
fnstsw
repnz
dec
jecxz
or
push
mov
shlb
add
imul
adc
pusha
dec
jecxz
push
adc
lret
bound
add
jge
push
es
and
in
out
test
out
fistl
sbb
push
jmp
std
sbb
mov
mov
sbb
test
addr16
clc
dec
in
cmp
insb
cmp
fldenv
jae
lea
pop
xchg
sarl
cmp
mov
or
dec
adc
rolb
mov
sahf
push
push
jmp
mov
mov
cmp
scas
lds
pop
shr
lea
gs
scas
imul
xor
outsb
jno
loopne
pop
mov
mov
jne
fnstenv
test
sti
adc
std
or
jae
or
in
dec
fildll
cmp
fidivs
mov
es
pop
out
cs
dec
loopne
icebp
pusha
mull
mov
push
in
mov
add
js
sub
xchg
sub
sub
test
mov
push
jmp
addr16
dec
jecxz
mov
test
and
jp
cmp
mov
xor
in
pop
and
in
test
in
jae
xchg
sub
lods
mov
loope
insl
cmp
cwtl
imul
outsl
sbb
add
testl
out
push
or
out
jno
rorb
hlt
or
sub
cmp
sbb
push
xchg
sub
mov
xchg
xchg
pop
cwtl
das
lea
mov
fmull
jo
add
cmp
mov
cwtl
loope
fiadds
or
sub
testb
test
xchg
sub
incb
enter
mov
jbe
cmpsb
mov
leave
testb
jmp
sub
dec
shl
jnp
mov
outsl
pushf
push
out
leave
icebp
or
ljmp
pop
inc
and
js
pop
repnz
mov
push
insl
and
mov
add
popa
jns
mov
xchg
jp
scas
lock
xchg
shll
stc
jns
xchg
lods
pop
lcall
lods
in
adc
sbb
popa
js
cmp
insl
and
sbb
icebp
or
je
mov
loope
cmpsl
adc
fs
xor
sbb
lcall
jae
lcall
sahf
cmc
xor
ret
mov
dec
xor
mov
fnstsw
and
xor
out
or
mov
insl
add
jnp
xchg
stos
xchg
ret
pop
ret
notb
sahf
arpl
iret
add
test
sarl
pop
jle
sbbl
mov
movsb
cmp
dec
add
dec
dec
cltd
sbb
imul
xor
push
xchg
jge
sahf
fnstenv
jne
fistpll
cltd
ret
push
das
jnp
into
lods
fs
xor
int
icebp
fnstcw
int
test
cmp
jecxz
add
push
xchg
pop
lods
enter
stos
iret
dec
mov
jmp
cmp
imull
cmp
fsubrp
push
aad
loop
leave
roll
sar
fidivrl
sarb
ljmp
push
sbb
mov
es
mov
sub
popa
pop
inc
popf
mov
jle
cmpb
test
inc
andb
dec
gs
jns
push
lret
pop
cltd
imul
sbb
cltd
js
sub
repz
or
push
push
call
sub
fists
pusha
iret
aaa
cmp
push
or
sub
mov
sub
das
jle
lea
push
shrl
dec
mov
adc
push
mov
sub
push
xchg
in
push
mov
pop
je
test
fwait
add
imul
lods
es
lds
movsb
dec
cld
std
jmp
shl
ret
add
loope
push
xchg
mov
fwait
in
xor
out
and
mov
in
adc
repnz
bound
cs
and
xor
pusha
mov
push
sbb
jnp
mov
ss
inc
roll
push
xchg
inc
sub
xor
sbb
sub
sub
sbb
imul
mov
xor
aaa
jmp
or
xor
out
fisttpl
cmp
popf
xlat
in
cmc
mov
popf
mov
mov
adc
mov
push
out
sbb
scas
stos
jne
fadds
jno
das
cmp
loop
adc
clc
stc
xchg
push
jge
ret
cmp
out
jl
int
sub
cmpsl
jle
inc
rcrl
sub
mov
ret
dec
addr16
ret
xor
mov
lahf
jge
cwtl
cli
and
add
out
dec
mov
or
lock
push
cwtl
mov
ds
or
xchg
adc
popf
shll
enter
test
fidivrs
or
fbstp
repz
xor
jbe
push
movsl
or
adc
adc
shlb
push
int
jg
lods
jbe
dec
rcrb
pop
lock
popf
mov
ret
inc
ds
jle
mov
xchg
sub
es
test
xor
add
cltd
movsb
pop
mov
movsb
jmp
mov
xchg
jl
movl
sbb
and
and
shlb
mov
cld
sti
push
cli
sarb
into
stos
frstor
insl
fwait
jge
adc
xor
ljmp
inc
shl
cmp
add
or
es
adc
aad
ljmp
lds
push
aad
add
sub
popa
lahf
loope
icebp
dec
dec
mov
mov
nop
sub
lea
cltd
jae
pop
dec
mov
ret
loopne
rcrb
mov
in
dec
mov
stc
mov
jbe
pop
enter
xlat
xchg
sub
fcomip
cmp
enter
lret
jno
mov
mov
fadds
mov
pop
mov
fistps
lret
mov
loopne
pop
iret
pushl
shrl
rorl
sbb
nop
inc
sbb
repz
insl
fwait
inc
mov
jge
pusha
xchg
sub
sub
sbbb
dec
push
push
out
jnp
inc
mov
mov
push
jle
lods
inc
cmp
pusha
mov
inc
or
rorb
or
and
add
push
sbb
in
xchg
add
sub
fwait
jmp
push
pop
mov
push
cmp
jo
pop
inc
sub
mov
mov
xchg
data16
int
fldl
jg
fidivrs
mov
sbb
or
cli
cmc
xchg
push
pop
mov
push
cmpsl
mov
clc
push
mov
adc
popf
push
out
adc
sub
cltd
in
repnz
or
jae
popf
jg
sti
xor
imul
mov
pop
stos
gs
mov
xor
add
pop
scas
dec
xchg
mov
and
js
movsb
inc
push
inc
les
jo
push
es
into
mov
ret
fildl
fs
fstps
addr16
into
out
jnp
mov
sti
dec
rol
sub
mov
xchg
mov
add
das
loope
push
scas
jae
test
mov
or
sub
movsl
mov
add
movsb
sbb
loopne
std
or
mov
lret
xor
mov
dec
mov
sbb
ds
jge
cs
cmp
lret
movsb
ja
pop
loope
jle
xchg
and
xchg
sub
push
int3
inc
mov
pop
and
adcl
pop
sbb
lods
cmp
fildl
jnp
stos
dec
nop
mov
ret
stos
xchg
in
mov
sbb
inc
test
jne
xor
mov
stos
pop
or
loopne
out
repnz
sbb
sbb
xchg
cmp
test
xchg
jnp
push
pop
add
pop
jo
xchg
daa
hlt
xchg
ret
and
stc
dec
inc
test
xchg
lods
addr16
sbb
pop
mov
dec
add
pop
arpl
rcll
cmpsb
in
push
into
mov
jb
clc
sti
frstor
jo
cltd
jb
lods
aaa
stc
pop
mov
cmp
pop
push
enter
loopne
inc
xor
data16
movsl
add
mov
adc
xor
inc
insl
cmp
pop
icebp
outsl
mov
aas
and
xchg
or
roll
dec
cmp
scas
lret
sti
jmp
call
lods
stos
and
cld
push
push
out
dec
int3
or
lds
sbb
add
in
pop
addl
or
mov
movsl
outsb
xchg
out
jae
call
divl
mov
insl
mov
jmp
dec
mov
cli
mov
hlt
jb
sahf
xchg
outsl
cmp
stc
jge
xchg
ss
add
test
add
xchg
mov
clc
mov
fyl2x
lods
jo
neg
jb
shll
jo
push
mov
xor
push
das
sti
xor
adc
int3
inc
test
lret
cmpsb
adc
pop
add
xchg
mov
mov
repnz
or
stc
call
scas
sbbb
outsl
sti
xor
popa
sub
and
jbe
jne
int
inc
and
jge
ficoms
cmp
fldcw
cmp
in
jg
dec
insl
push
or
inc
sub
mov
pop
jle
pop
popf
insb
mov
jge
jge
jno
loopne
sub
aam
addr16
mov
in
sahf
ret
sbbb
bound
jp
jno
adc
fdivrl
xchg
adc
adc
imulb
adc
adc
xchg
jbe
pop
repnz
mov
stc
sbb
repnz
xchg
push
pop
xlat
sbb
sbb
xor
mul
pop
lret
mov
in
iret
and
jp
sub
loopne
shrb
mov
push
pop
popa
xchg
insb
inc
mov
addl
int3
repnz
inc
lds
cmp
decl
inc
adc
jge
icebp
lea
movsb
mov
xchg
sub
das
repnz
jb
imulb
mov
int
mov
lret
scas
les
std
push
mov
push
sub
jp
adcb
popf
xchg
jae
dec
dec
push
jns
xchg
pop
mov
ljmp
pop
adc
xchg
or
fdivr
xor
jbe
xchg
int
xor
add
mov
sbb
mov
out
cs
pop
cmc
dec
loope
aam
cmp
fldt
or
xchg
xchg
or
cwtl
adc
lcallw
addb
je
mov
ds
mov
push
add
mov
inc
or
pop
pop
das
cmp
rcll
jl
std
das
loop
jp
xchg
pop
lock
xor
in
mov
mov
mov
jle
pop
sti
pop
out
fstpt
mov
jmp
xchg
or
mov
sub
inc
lea
jo
mov
daa
sub
cwtl
xchg
lea
fs
scas
sbb
or
mov
fisubrs
dec
gs
cmp
jne
test
adc
les
das
add
push
push
loope
lock
das
lidtl
std
cld
sub
pop
xor
dec
mov
stc
ret
pop
loopne
add
into
add
pop
stc
divb
int3
lods
out
sbb
pusha
cwtl
mov
cld
jge
mov
repnz
iret
pop
mov
lods
lret
add
ljmp
stos
push
aad
or
subl
mov
push
lret
sbb
inc
lret
lret
ret
or
push
into
mov
or
and
and
out
outsl
fildl
int3
sbb
inc
pop
clc
jmp
outsl
imul
mov
sbb
mov
insb
adc
xchg
pop
sub
nop
addr16
out
dec
pop
push
xor
push
xor
nop
inc
or
cmpsl
popa
xchg
repz
sub
xchg
cltd
cs
dec
mov
fadd
enterw
loope
or
cltd
outsl
sub
dec
pop
jge
dec
sub
adc
imul
inc
inc
mov
xor
popf
lods
push
stos
jo
add
mov
cmc
je
daa
jns
pusha
insb
dec
mov
jbe
dec
pushf
xor
mov
sti
xor
push
out
xchg
xchg
push
pushf
fidivs
dec
shl
mov
repnz
adc
cli
jns
mov
lock
mov
mov
mov
push
mov
enter
daa
insl
fs
fsts
mov
lods
popa
dec
jbe
mov
mov
push
jo
stos
mov
pop
rcrb
push
daa
mov
bound
adc
sti
sahf
js
sub
faddl
xorl
dec
mov
mov
rolb
aaa
jmp
addr16
fnstenv
xlat
cmp
inc
mov
loopne
inc
mov
movlps
jmp
rorb
adc
inc
arpl
sbb
pop
lods
jb
jne
push
dec
push
mov
cs
push
add
dec
pop
pop
out
push
adc
and
pop
jae
and
into
ds
dec
divl
mov
fcoms
xchg
mov
add
mov
mov
jge
jl
xor
mov
cmp
add
movsb
fisttps
ret
jle
into
lret
xor
mov
sahf
xchg
mov
mov
les
aam
leave
push
fsts
cmpl
mov
pop
call
jnp
repz
in
scas
xlat
pop
mov
push
or
pop
mov
pop
aad
mov
xor
and
fisttps
repz
pop
cmp
mov
adc
mov
jecxz
lods
adc
jp
cs
je
insl
mov
jg
bound
cltd
cmp
lods
mov
pop
aam
xchg
flds
fdivs
or
outsl
pusha
sub
xchg
cld
jns
insl
mov
stc
incl
inc
push
fcoml
in
mov
cmp
sbb
sbb
sbb
idivl
pop
mov
call
call
loopne
adc
lds
add
repz
jmp
sbb
ja
jecxz
jle
lods
int
and
adc
inc
jae
das
bound
push
aaa
enter
mov
cmp
ret
pop
cmp
or
pop
movsl
inc
cltd
decb
xlat
pop
stos
jg
sbb
push
mov
jno
data16
fldl
dec
mov
lahf
pop
aam
mov
aam
test
daa
in
lahf
or
and
cwtl
bound
insl
mov
sub
stos
lock
icebp
sti
lods
adc
push
ret
rcrb
cs
mov
fwait
jg
adc
imull
or
mov
push
es
push
mov
push
jmp
lds
fiadds
imul
push
jecxz,pt
mov
adc
mov
xor
push
or
in
pop
mov
adc
ja
xor
add
pop
mov
sbbb
popa
fwait
lock
cmp
fstps
adc
xchg
xchg
movsl
cmpsl
cmp
repz
lret
scas
add
xchg
mov
adc
pop
jmp
cwtl
cs
adc
adc
ficomps
call
adc
rorl
ljmp
xchg
iret
xor
xchg
loope
sbb
enter
lret
cmp
rcl
out
aad
cld
or
lods
mov
jnp
mov
sbb
rorl
adc
dec
push
add
push
rorl
daa
out
sbb
scas
inc
cmp
repz
loopne
pusha
in
inc
shlb
push
je
mov
testl
mov
in
repz
pop
icebp
xor
xor
mov
repz
mov
push
sub
or
adc
xchg
cmp
jle
cli
aaa
dec
jb
outsb
ja
cli
push
jg,pt
jo
cmp
push
out
push
add
mov
lret
aas
rcll
out
inc
mov
jmp
stos
pop
sbb
jmp
fistpll
shlb
gs
dec
xor
or
fcoms
or
adc
adc
jmp
sub
sti
xor
lret
sub
jb
out
jg
jmp
xchg
sub
btc
fidivrl
push
cli
xchg
mov
pop
fnsave
loope
stos
rolb
pop
shll
ret
pop
xchg
inc
jecxz
sarl
pop
cli
mov
mov
cli
sub
iret
dec
dec
or
pop
sub
xor
sub
inc
mul
jle
addr16
inc
xchg
mov
push
pop
push
scas
jno
adc
mov
test
cltd
sbb
ret
dec
push
pop
xsha256
cmpsb
push
jo
adcl
jl
cmp
dec
inc
outsl
dec
les
jne
popa
cmp
fiaddl
cmc
inc
test
xor
mov
fldl
push
add
cmp
jb
cmc
mov
outsb
arpl
and
dec
mov
gs
mov
and
jp
cmp
repz
outsb
jg
imul
push
orl
lcall
aas
dec
xchg
sub
jo
and
jbe
js
sub
or
xchg
mov
jge
inc
dec
aad
sbb
xor
dec
mov
in
imul
mov
mov
dec
daa
cmpsl
fwait
mov
sub
cmpsb
xorl
mov
push
loopne
fists
ja
pop
dec
cltd
and
das
inc
lds
push
imulb
inc
xor
gs
xchg
test
xor
sbb
shrl
imulb
adcl
mov
mov
int
pop
movl
sub
push
or
jne
in
sbb
sub
xchg
loop
lret
push
sub
mov
inc
sahf
push
out
inc
xchg
xor
jnp
mov
sbb
mov
imul
inc
dec
mov
inc
jns
test
je,pt
jnp
push
int3
ss
xchg
out
cmp
mov
pop
enter
pandn
push
lods
and
lds
jo
cmpsl
xor
jl
cmpsl
push
cmp
pop
jns
xlat
push
aaa
mov
ret
popa
adc
xchg
gs
and
sbb
adc
add
xchg
scas
inc
ret
xlat
leave
cmp
mov
lcall
jno
or
mov
adc
nop
cmp
nop
aad
imul
pop
enter
adc
add
xchg
cli
pusha
pushf
call
iret
js
sarl
in
mov
shll
sbb
stc
stos
bound
push
mov
mov
adc
jb
mov
mov
jmp
out
xchg
cmp
cmpb
xchg
pop
adc
adc
or
loop
mov
xchg
jge
rcl
dec
fnstcw
lahf
ss
test
sbb
cmp
push
mov
pusha
mov
mov
pop
scas
jge
mov
adc
lcall
inc
insb
loope
aaa
push
xchg
test
cmp
mov
outsb
mov
lods
subl
outsb
shlb
push
push
cmpsl
dec
stos
mov
pop
pop
dec
mov
adc
xchg
in
add
pop
movsl
movsb
in
shlb
sarl
jb
enter
xlat
imull
enter
rcr
insb
mov
fistpll
sub
aad
mov
outsl
lret
cmpsl
sbbb
outsl
mov
aad
inc
fldenv
mov
dec
jmp
mov
lock
nop
mov
aaa
mov
fdivrl
inc
push
lret
imul
int
mov
movsb
cmpsb
push
scas
jnp
sti
rorl
int
mov
stos
cmc
sbb
aas
mov
jb
xlat
not
aaa
xlat
fsts
call
or
jge
mov
mov
cmc
dec
push
and
sbbb
outsb
adc
mov
out
dec
sbb
stos
mov
jp
adc
test
jle
shlb
add
mov
cmp
fldt
jl
fistpll
hlt
out
pushf
jno
mov
out
push
mov
or
mov
sbb
test
pop
pop
rcrl
insl
xchg
push
jmp
mov
repz
arpl
mov
dec
mov
xchg
mov
or
adc
adc
mov
cmp
mov
fidivl
stos
or
or
mov
cmp
mov
mov
cmp
addr16
arpl
sbb
push
and
inc
stos
shll
into
inc
jbe
data16
push
xor
stos
mov
mov
dec
mov
jmp
dec
scas
xchg
or
jmp
jge
out
sbb
push
fiaddl
int
in
ljmp
or
movsl
in
sub
and
stos
popf
jg
and
sbb
sbb
cmc
mov
xchg
jge
jae
scas
push
ss
mov
add
pop
scas
inc
sub
sub
xor
clc
xchg
or
push
inc
xchg
xchg
bound
xor
aaa
jp
orl
jge
dec
mov
sbb
mov
adc
cmp
leave
lahf
jo
pop
jmp
mov
orl
loope
mov
xchg
mov
fstps
ror
lret
jmp
cs
movsl
stc
jno
mov
push
adc
mov
pop
or
lods
jg
sbb
outsb
fiadds
leave
sub
out
inc
scas
inc
pop
adc
pop
popa
sbb
xor
divb
ret
ds
or
jae
loop
cmpsb
aaa
add
xchg
in
inc
leave
push
and
rcl
js
out
mov
shll
push
scas
xorb
loope
jle
test
inc
adc
inc
inc
je
fwait
xchg
imul
sbb
xchg
jle
int3
repz
lret
lods
inc
mov
les
popf
cltd
ret
mov
jne
movsl
clc
js
into
clc
pop
idivb
cmp
cmp
std
xchg
jo
ficoms
popa
ljmp
dec
loop
movsb
xchg
insl
add
nop
push
sbb
ja
mov
inc
negl
push
inc
fcoml
and
mov
jbe
addr16
xorl
jns
dec
or
andl
push
cltd
subl
cmpsb
pusha
pop
insl
lahf
dec
subl
xchg
xorb
push
or
pop
adc
push
adc
loopne
arpl
sbbl
and
xor
cwtl
popa
jb
mov
xchg
pop
sub
imul
dec
sahf
xchg
push
test
cmpb
inc
int3
push
cwtl
xor
in
cmp
loope
inc
lock
add
sbb
mov
jecxz
pop
pop
fisttpl
xchg
pop
inc
jb
dec
cmp
outsl
mov
fimuls
arpl
incb
sahf
jg
outsb
hlt
mov
mov
sbb
mov
mov
loope
pop
clc
gs
jge
inc
mov
and
mov
sub
in
outsl
mov
in
mov
sub
pop
rcrl
rorb
jne
addr16
ljmp
push
fbstp
cmp
mov
mov
cld
lods
pop
lds
push
mov
push
arpl
cmpsl
movsb
jo
icebp
ljmp
mull
xor
mov
js
and
fmull
sbb
cmpsb
bound
inc
in
out
adc
ss
push
mov
inc
cmp
mov
push
pop
int
das
iret
popaw
mov
and
in
test
or
xchg
sub
pop
test
fstp
jns
fisubrs
int3
gs
std
dec
sbbb
push
test
push
lahf
mov
cmp
vxorps
inc
fdivl
sbb
jbe
push
or
sbb
cmp
cmp
sub
xchg
cmp
outsb
add
mov
mov
fabs
xor
push
mov
ret
fidivs
push
or
inc
push
cli
xchg
dec
push
pop
inc
pop
mov
jns
xchg
jno
add
mov
in
xchg
addr16
movsl
cmp
push
hlt
mov
cltd
std
push
mov
mov
jl
orl
sbb
mov
and
into
gs
shll
dec
filds
dec
data16
jp
sbb
pop
sarb
loop
and
pop
mov
cli
add
xchg
jno
push
lods
insl
xchg
jl
les
lret
aam
sub
jl
aas
mov
rol
repnz
mov
ret
adc
hlt
fdivp
inc
stc
imul
popf
sbb
popf
mov
or
add
xor
xchg
jl
mov
mov
imul
push
imull
inc
cltd
insl
add
adc
xchg
or
add
and
and
push
testl
xchg
cs
and
xor
das
in
in
inc
pop
mov
push
in
test
repz
call
adc
pop
xor
daa
arpl
sub
into
or
sub
xor
cwtl
fstpl
mov
scas
and
jmp
push
push
lret
mov
sbbl
lock
fadds
or
sbb
addb
in
adc
cmp
stos
pusha
repnz
sbb
add
xlat
mov
arpl
addr16
jae
loopne,pn
stos
stc
mov
arpl
or
in
push
sbb
sub
shlb
add
mov
stos
jl
xor
repz
ss
bound
push
nop
iret
add
outsl
bound
jae
mov
cltd
jno
add
pusha
aad
xchg
ja
popa
into
xor
mov
jl
icebp
int3
inc
loope
jmp
mov
test
ljmp
gs
clc
push
xor
scas
daa
sub
sub
cmc
mov
add
dec
push
cmp
cli
pop
jecxz
daa
or
into
mov
adc
jb
fs
cmp
mov
pop
pop
xor
xorb
xlat
scas
fnstsw
mov
mov
inc
adc
cmp
arpl
mov
pop
clc
mov
enter
test
mov
mov
adc
xor
outsl
and
push
cmp
cli
es
fnstsw
das
cwtl
loope
jecxz
roll
loope
pop
in
mov
jbe
mov
inc
pusha
push
test
push
subl
stos
adc
jp
inc
jnp
frstor
pop
adc
and
cmp
jae
sub
and
xor
jb
hlt
adc
mov
scas
mov
enter
cmpsb
xchg
xor
popa
mov
dec
in
repnz
mov
inc
repnz
lock
call
mov
inc
rcrl
or
leave
mov
cmc
mov
ja
mov
pop
cmp
sbb
repnz
ss
push
ljmp
mov
sub
arpl
mov
pop
jno
dec
ret
mov
cmpsl
loop,pt
add
das
pop
xlat
outsb
dec
jb
repnz
inc
lods
inc
mov
mov
dec
out
pop
mov
push
dec
loopne
mov
es
jo
mov
addb
adc
les
cmc
hlt
xchg
inc
stos
out
std
pop
jl
arpl
inc
gs
loop
rcll
or
scas
cmp
pop
nop
sub
scas
or
pop
sti
xchg
daa
mov
fdivr
pop
jbe
lods
sub
iret
cmc
popa
lds
lea
dec
cmc
popa
clc
into
push
add
sub
popa
fxch
hlt
bound
cmp
leave
xchg
inc
hlt
mov
push
out
xchg
lret
inc
push
mov
or
add
jne
out
push
into
xchg
inc
jnp
or
js
adc
inc
loop
or
in
push
jp
push
call
stc
pop
add
icebp
pop
xor
jecxz
jo
jge
gs
aam
nop
jne
push
imul
and
dec
add
mov
xchg
cmp
xchg
cmp
xor
stos
movq
pop
mov
push
testl
mov
fimull
push
or
push
xor
mov
loop
xchg
orl
push
jae
arpl
addr16
jecxz
in
inc
cmp
push
add
enter
dec
je
push
negl
in
jbe
pop
add
data16
pop
repnz
loopne
lds
mov
stos
jecxz
push
jl
adc
xlat
loopne
dec
loop
ljmp
inc
or
mov
orb
mov
out
out
or
rorl
dec
adc
cwtl
mov
pusha
shll
xor
insb
out
mov
mov
jge
imul
add
sbb
jbe
hlt
dec
push
sti
je
fs
cmpb
std
cmp
jne
lret
cs
or
pop
or
movsb
mov
jno
mov
mov
push
jl
sti
cmpsw
sub
out
lret
xchg
test
and
push
rcr
test
addl
mov
mov
in
pusha
hlt
pop
scas
cld
and
mov
and
das
xchg
orb
fs
in
hlt
pop
and
xor
dec
mov
lods
adc
mov
mov
imul
hlt
pop
mov
mov
aam
push
sbb
mov
jb
rcrb
xchg
and
jge
sti
pop
jbe
mov
add
jge
in
and
dec
mov
xor
negl
mov
or
sbb
addr16
and
dec
sub
nop
xchg
adc
inc
lret
fwait
roll
xchg
imul
adc
jmp
xchg
dec
xchg
inc
jl
sbb
adc
cmpb
test
push
stos
sbb
xor
push
shl
sbb
jno
roll
or
mov
dec
push
sbb
mov
jae
cmpsb
lods
call
aas
jmp
sbb
div
mov
test
dec
push
sbb
ss
loop
cs
imul
in
sbb
jge
sub
add
pusha
sbb
in
jp
jmp
jmp
push
daa
sub
insl
cmp
cmp
jb
movsl
ja
xchg
inc
add
pop
xchg
inc
jo
jbe
xor
mov
sbb
and
out
dec
xor
inc
sub
jb
lcall
jo
sub
push
test
lret
push
jle
mov
mov
aam
push
loop
push
shlb
cmp
dec
inc
add
dec
loop
imul
add
pop
mov
jae
or
mov
adc
aam
out
xchg
xchg
fidivl
inc
out
jg
or
xchg
iret
les
xchg
adc
push
inc
pop
adcb
and
fnstenv
lret
mov
add
or
push
xchg
or
lea
sbb
jo
cmovge
int
adcl
sbb
push
lea
or
sbb
inc
in
jne
into
cmp
add
mov
lods
xchg
insl
sub
bswap
cmp
loopne
pop
sub
mov
adc
inc
adc
push
lea
xchg
mov
loope
add
xor
in
push
jb
xchg
aas
test
aas
lcall
xchg
inc
filds
mov
fildll
xor
and
jns
outsl
pop
leave
adc
fiadds
aaa
lahf
mov
test
cmp
add
out
pop
mov
popa
dec
cli
pop
fistpll
fwait
mov
movsb
out
test
arpl
xchg
cmc
fdivrs
jo
or
jp
xchg
xchg
hlt
pop
or
sub
rcrb
cmp
scas
jp
ja
rorl
mov
push
bound
sub
mov
popf
xlat
jle
cmc
add
sub
add
or
push
xchg
xchg
mov
mov
pop
sbb
xchg
cltd
aas
xor
and
jmp
fwait
lods
mov
xchg
lret
cmp
dec
les
pop
lcall
mov
adc
mov
mov
sbb
int3
jo
sarl
push
lcall
mov
mov
mov
sbb
movsb
push
jns
lds
xchg
rclb
mov
and
and
std
xor
sbb
mov
inc
push
mov
xchg
cmp
cmpsb
adc
das
jp
cs
cmp
jno
bound
push
decb
jae
mov
pop
xchg
cmp
push
adc
das
xor
stos
ds
push
mov
mov
push
or
pop
test
aad
pop
daa
stos
and
movsl
sub
cmp
jg
pop
inc
or
cmpsb
sub
dec
jno
cmpsl
and
es
and
cli
data16
ss
idivl
cltd
inc
mov
mov
dec
adc
stos
pop
add
mov
adc
adc
test
mov
add
and
cmpsl
adc
sub
out
outsl
xor
std
popa
lret
adc
and
cmp
lahf
xor
adcb
push
jne
and
mov
cmpsb
jp
ret
daa
sub
xchg
jo
or
xor
cmp
jg
add
adcb
jecxz
and
test
cmp
or
in
jno
push
xor
mov
jnp
pop
clc
fbld
push
mov
test
stos
test
push
push
insl
fbstp
mov
sahf
pusha
cmp
les
cmpsb
xor
push
call
outsl
inc
ja
xor
cltd
jbe
mov
adc
pop
shlb
inc
mov
outsb
in
add
and
jo
dec
movb
adc
push
adc
cmp
push
push
mov
mov
xchg
mov
push
leave
mov
or
inc
sti
lods
push
mov
out
ja
mov
push
imul
or
push
aad
dec
leave
pop
iret
mov
push
push
add
loope
imul
mov
mov
dec
adc
xchg
ficoms
mov
cld
xlat
popa
clc
or
aaa
sahf
push
add
mov
fimuls
cmp
jno
jo
push
mov
mov
test
xor
lret
pop
inc
or
mov
inc
jp
and
lods
inc
lds
stos
inc
cmp
xchg
xor
jo
push
push
clc
testl
mov
adc
inc
nop
inc
dec
out
mov
jae
lcall
jle
cmpsl
call
imull
adc
out
rorl
addb
xchg
mov
stos
insb
hlt
repnz
pop
sub
inc
arpl
or
lods
aas
lock
inc
pop
push
mov
and
orb
sbb
mov
xor
cs
pop
jmp
or
ret
sbb
sbbb
ljmp
jno
fs
mov
in
sbbl
jge
lock
pop
mov
jbe
addr16
and
shl
imul
dec
adc
mov
pushf
cmpsl
sub
repz
mov
jne
mov
push
pop
pop
jmp
test
loopne
mov
divb
into
add
fcom
mov
mov
push
aam
sub
push
mov
mov
test
mov
icebp
orb
pop
add
fnstcw
clc
jno
pop
xchg
icebp
dec
lock
sub
scas
cmp
test
mull
aad
sti
xor
jmp
sub
cmp
fs
imul
xchg
add
xchg
dec
dec
int
cmpsl
xchg
inc
adc
mov
cli
push
jb
in
outsb
imul
push
mov
cmpsb
mov
cmpsb
das
stos
push
add
ret
rolb
ficompl
mov
pop
imul
adc
sbb
adc
dec
hlt
bound
fcmovbe
jg
push
aas
xchg
sbb
pop
cld
das
dec
fidivs
adc
jecxz
pushf
inc
loope
xor
dec
push
les
pop
stos
adc
jmp
das
cmp
das
ljmp
nop
loopne
xchg
stos
ss
jbe
or
or
loopne
xor
out
adc
xchg
mov
test
loopne
test
clc
push
add
sti
int3
mov
sbbl
or
sub
aaa
sub
push
xchg
add
je
fstl
pop
sti
add
push
lods
daa
dec
mov
je
xchg
cmpsb
xor
idivb
imul
lret
pop
std
ja
xchg
sub
je
dec
cmpsb
mov
je
cmp
fstpt
lods
mov
lcall
xlat
jns
fisttpll
and
addr16
out
jg
gs
mov
fs
mov
jbe
xor
pop
fwait
dec
lods
sub
out
leave
mov
cwtl
cmp
cltd
add
cmp
and
mov
jae
repnz
pop
mov
popa
icebp
gs
xchg
lods
sub
addr16
cltd
pop
leave
nop
sub
ds
nop
js
jmp
ret
jecxz
mov
scas
cmp
jns
mov
xor
cltd
mov
stos
jnp
mov
mov
in
sbb
call
mov
cwtl
sahf
stos
xor
sub
aam
mov
mov
cmp
es
jl
and
cwtl
cmp
scas
outsb
in
fimuls
subl
xor
adc
xchg
adc
or
xor
add
orb
xchg
xchg
les
adc
imul
dec
pop
add
jb
mov
adc
mov
jo
insl
in
out
imul
inc
pushl
mov
pop
adc
jnp
sbb
cmpsl
flds
lds
pop
inc
or
xor
mov
ret
pop
push
sbb
cwtl
mov
or
mov
dec
pop
rclb
in
fs
repnz
xorb
dec
dec
or
jmp
jbe
adc
dec
jb
pushf
push
sbb
add
test
outsl
add
xor
adc
popf
aaa
imul
movsb
rep
out
mov
push
movsl
pusha
cmc
sub
xor
jle
sbb
and
rclb
outsl
rcll
push
roll
add
pop
push
push
cmp
pop
cli
loope
in
pop
fnsave
add
ljmp
mov
xchg
ret
faddp
mov
mov
dec
adc
xchg
sbb
push
adc
xchg
cmp
pushf
or
cmp
sub
pop
std
inc
repz
ja
sub
sbb
push
cli
orl
mov
xchg
shrb
je
adcl
pop
mov
and
loope
pop
xor
cmp
push
add
daa
clc
pop
out
pop
aam
incb
pusha
aad
imul
mov
push
mov
out
xor
int
adcb
add
rcrb
and
push
incl
push
add
std
pop
outsl
xchg
pop
mov
jge
inc
add
pop
adcl
mov
outsl
pop
xor
test
xchg
test
sbb
mov
lods
mov
mov
or
stos
mov
cld
push
std
gs
xor
lret
ss
mov
scas
jae
xchg
movsl
jbe
mov
ret
mov
pop
add
fimull
dec
sbb
jno
pop
inc
adc
test
mov
leave
mov
mov
sbb
mov
sbbl
cmp
jp
jae
pop
pop
xchg
mov
sub
aas
lock
fidivs
mov
je
stos
outsb
in
and
mov
xor
jns
lcall
cwtl
dec
popf
xchg
cmp
mov
loope
mov
mov
fisubl
popf
cmp
mov
daa
mov
xor
push
rolb
push
sbb
dec
ss
push
jp
mov
movsb
or
inc
pop
divps
sahf
adcl
in
mov
mov
xor
pop
and
push
jbe
xor
mov
cmpsl
enter
inc
adc
push
fmull
enter
fdivl
or
xchg
aad
aam
test
xchg
outsb
adc
int
xor
push
jo
mov
mov
fcomps
xor
cmpsb
or
jnp
sarb
imul
das
sbb
test
scas
xor
rcrb
lods
jmp
lcall
ja
jmp
dec
or
hlt
fisubl
xchg
cmp
or
call
icebp
push
jns
loop
dec
int
lds
inc
cmp
rolb
fldt
lods
push
cs
mov
sub
lret
jns
adc
mov
mov
adcl
or
cmp
pop
sbb
lret
sub
mov
push
mov
dec
out
xchg
cmp
repz
mov
das
mov
je
shll
and
adcb
mov
test
sub
fistpll
in
mov
or
xchg
jbe
popf
xchg
pop
stc
rcr
sub
sbb
mov
movsb
lret
mov
and
cmp
fsincos
pushf
cmp
aad
out
mov
mov
out
cmp
pop
cli
pusha
negb
ret
xchg
mov
icebp
sbb
sub
cmp
mov
pop
add
and
incl
aam
lea
jl
idiv
pop
mov
inc
ficoms
mov
jle
dec
cwtl
pop
or
clc
iret
mov
xor
xor
jnp
repz
mov
add
int3
xchg
cs
or
lret
int3
in
adc
adc
cwtl
das
ljmp
enter
cli
fcompl
xchg
xchg
cmpsl
sub
out
pop
test
daa
nop
nop
pop
rcrl
dec
adc
call
mov
cmp
dec
cmp
pop
cmp
mov
sub
sub
int
lcall
imul
xor
jl
lock
adcl
fmull
int
repz
xchg
mov
nop
lcall
pop
inc
adc
data16
pop
cltd
dec
pop
sti
gs
iret
jp
outsl
or
ds
push
nop
daa
mov
add
jmp
adc
jne
cmp
mov
stos
add
cmpsl
xlat
inc
or
mov
and
les
pop
jb
add
cmp
cmc
test
add
mov
jno
movb
sub
mull
lea
jb
dec
add
dec
lahf
loope
xchg
popa
shrl
xor
nop
int
sarl
pop
inc
push
enter
dec
adc
dec
aaa
xchg
addr16
lret
jno
dec
mov
cmpsb
fnstcw
lss
icebp
pop
idivb
out
mov
inc
adc
stc
add
sbb
data16
adc
insb
sbb
push
decl
stos
daa
pusha
xchg
daa
mov
jle
ds
pop
aad
rcrb
jmp
push
add
xor
imul
cld
es
out
outsb
repz
imul
outsl
int3
xchg
jmp
sti
sbb
test
mov
imul
sub
dec
rsqrtps
cmpsb
add
push
jmp
test
cmpsb
insl
lcall
pop
xor
xchg
mov
pop
rcll
lret
mov
and
leave
pusha
outsb
mov
addr16
pushf
idivb
mov
adc
fwait
xor
sti
sbb
cmp
push
cmpsl
dec
adc
flds
icebp
js
and
call
dec
adc
mov
or
or
or
pop
cld
pop
popa
mulb
mov
arpl
mov
xchg
shll
mov
daa
aaa
sbb
scas
mull
mov
call
fnstsw
jo
dec
add
inc
lret
inc
pop
cmp
pop
insl
jge
sub
jle
ja
negb
push
fs
push
jnp
pop
cs
jge
cmpb
loope
xlat
jge
dec
or
test
xchg
cmp
sarl
bound
dec
sbb
mov
cmpsb
xor
or
pop
loopne
xor
jl
shll
popf
aad
ret
pop
pop
add
mov
aam
jne
and
mov
in
dec
fs
pop
sbb
imul
xchg
cs
pop
push
ret
flds
dec
incl
push
int
call
cmc
frstor
mov
push
sub
push
in
mov
ljmp
loopne
mov
push
mov
sbb
pop
sbb
ljmp
inc
sub
jb
dec
les
xchg
mov
js
out
daa
dec
adc
dec
sarb
adc
xchg
cmc
stos
xor
inc
imul
rol
push
jmp
xor
addr16
gs
icebp
pop
cmp
xor
jae
jg
scas
incb
jae
add
mov
and
out
ss
dec
push
cwtl
ficompl
outsb
fidivs
cwtl
inc
in
fs
lock
or
mov
cmpb
push
mov
pop
add
arpl
mov
jne
push
leave
data16
fldl
inc
jg
hlt
cmp
dec
adc
psrld
xchg
and
fs
popa
mov
mov
xchg
flds
and
rcrb
and
bound
mov
jo
adc
rorb
shlb
cmp
sub
or
fwait
sbb
mov
ficoml
mov
xor
movsb
sbb
shll
call
popf
xchg
fdivrs
enter
sahf
addr16
jle
pop
sti
leave
mov
adc
repz
cmp
data16
lods
push
gs
std
ret
mov
mov
or
pop
jge
jae
test
mov
push
sub
ja
icebp
xlat
imul
mov
sbb
in
dec
push
lds
sub
push
int
xchg
cmp
mov
pop
add
mov
cmp
movsb
pop
push
aas
mov
dec
scas
sub
shlb
cs
sub
xchg
xor
dec
fcoms
ja
pop
lds
hlt
test
in
jmp
lcall
std
xchg
and
sbb
pop
roll
mov
mov
cmpsb
cmp
xor
daa
icebp
pop
cmp
mov
mov
ja
das
mov
gs
add
lods
lds
mov
lods
xchg
aaa
lahf
mov
jns
dec
rclb
and
dec
adc
sub
outsb
lock
lahf
pop
add
int
loop
and
loopne
jle
xor
fbld
xor
fwait
inc
dec
dec
cld
bound
xchg
cmp
cltd
mov
jae
ds
xchg
sbbl
faddl
jb
xchg
cmp
jle
divl
mov
loope
xchg
sbbb
daa
aad
scas
xor
and
in
call
and
scas
dec
or
popf
dec
or
jecxz
insb
int3
inc
push
aad
adc
xlat
xchg
int3
lcall
enter
sub
loopne
mov
dec
movsb
pop
in
or
inc
btcl
clc
jnp
pop
cli
push
fs
cmp
mov
push
inc
cmpsl
lret
fwait
mov
repnz
scas
fidivs
mov
xchg
repz
mov
push
mov
mov
jae
and
jns
imul
push
pop
jbe
xchg
mov
lods
ljmpw
pop
pop
mov
cmpb
stos
dec
pop
das
mov
or
cmp
mov
push
xor
loope
lret
jne
adc
push
nop
adc
pop
mov
or
lds
out
mov
sti
xchg
inc
lods
xor
pop
int
sar
pusha
out
out
mov
enter
insl
sbb
pop
sub
pushf
inc
data16
sbb
shl
imul
xor
cwtl
adc
aaa
into
cmp
je
sbb
adc
or
dec
sbb
aam
xchg
cmp
sbb
pop
sahf
inc
xchg
mov
dec
and
add
inc
aaa
inc
or
xchg
negl
pop
add
jno
mov
xchg
mov
negl
sbb
ret
nop
ss
jbe
les
jno
xchg
cmpsb
arpl
xchg
mov
lret
lahf
add
jnp
into
pushf
aas
xor
rclb
mov
stc
hlt
out
lcall
jmp
lret
insl
cmpsb
xor
cmp
sub
or
aam
jne
mov
test
int3
nop
cmp
sub
and
dec
loope
and
flds
or
sarb
sarb
xchg
push
lods
push
sub
dec
pop
test
xor
mov
cltd
js
pop
cld
les
cwtl
cmp
imul
push
jbe
inc
lea
xchg
inc
xchg
mov
mov
mov
pop
mulb
fdivl
cmp
imul
add
mov
push
push
mov
jmp
loope
stos
adc
xor
icebp
push
stc
outsb
hlt
lea
jne
jle
lods
sbb
push
icebp
fwait
inc
outsb
pop
loope
cmpsl
jl
scas
fbstp
ss
sti
mov
in
xor
fadds
sbb
jmp
push
add
jp
xchg
cltd
subb
das
stos
enter
push
adc
cli
pop
test
push
iret
insb
mov
jae
je
loopne
cmp
or
xor
fidivrl
xor
pusha
add
add
xor
sbb
and
xchg
dec
lcall
ret
int3
mov
cmp
cmp
outsl
jmp
pusha
and
dec
pop
adc
inc
jns
sbb
xchg
mov
in
mov
push
aad
ja
cltd
inc
fbld
out
or
adc
mov
xchg
andb
cli
fcmovnu
push
mov
cli
mov
hlt
popa
imul
outsl
aas
addl
or
lods
roll
push
mov
and
pop
testb
mov
jae
dec
jp
jmp
sahf
cmc
pop
sub
xor
mov
mov
and
hlt
popa
cltd
inc
xchg
out
cs
out
je
inc
add
and
popa
in
mov
xchg
cmpsb
and
addl
jecxz
rorb
push
xor
xlat
movswl
jns
sbb
loope
push
lds
test
xchg
enter
adc
dec
cmp
bswap
scas
and
ds
test
jo
cmp
aad
mov
fnstsw
xchg
mov
movsl
or
cmc
fnstcw
loope
data16
mov
mov
fldt
add
cmp
push
out
jecxz
xchg
daa
lods
sarl
imul
mov
mov
or
xchg
push
cli
and
cwtl
fbstp
xlat
xchg
movsl
jae
or
roll
aam
xlat
adcl
daa
mov
dec
scas
sub
cmpsl
push
call
inc
fidivrs
dec
cmp
aad
lods
sub
or
test
daa
mov
pop
pop
addr16
popf
mov
addr16
inc
push
idivb
mov
mov
jo
pop
cltd
and
mov
pusha
xchg
aas
movsl
sub
mov
jnp
stc
mov
push
sbb
pop
jmp
adc
jae
hlt
gs
imul
int
js
xchg
das
test
fdivl
adc
cs
or
cmp
add
orl
pop
jnp
icebp
pop
shrb
and
push
sti
loop
jecxz
shl
nop
sbb
cwtl
cld
jae
imul
imul
movsl
and
mov
clc
and
out
mov
test
hlt
in
clc
jno
shlb
andl
pop
shrl
pop
je
mov
shlb
xchg
mov
movsb
test
ror
fistps
cmp
cmpsl
das
test
mov
stos
imul
test
fcomip
push
popa
call
dec
pop
mov
popf
aam
fwait
inc
inc
add
les
out
sub
xlat
ja
aas
jle
pop
ret
filds
dec
pop
cmpsl
inc
dec
or
rorb
jge
or
lods
data16
dec
mov
jnp
xchg
js
aad
add
ja
lods
das
push
addr16
aas
inc
cmpl
dec
sub
push
push
into
xor
pop
pushf
fdivrs
leave
arpl
jbe
jns
movq
aam
push
enter
sti
push
pop
inc
test
in
sub
sbb
xor
stc
pop
sbb
or
sarb
imul
or
cmp
sub
popa
or
cmp
inc
pushf
and
jecxz
pop
js
mov
stos
ficoml
lds
mov
or
xor
dec
or
das
push
mov
aam
pusha
repz
or
int
lods
enter
dec
or
cli
sbb
push
sbb
test
inc
fucomi
leave
push
lds
inc
or
dec
loope
rorl
aaa
fwait
cmp
mov
bound
icebp
pop
out
ja
mov
mov
or
repz
int3
push
in
mov
out
dec
aas
aad
in
xchg
or
popa
clc
movsl
ss
jl
iret
scas
mov
or
xor
sti
mov
lret
adc
push
mov
clc
dec
rcl
jg
xchg
push
rcrl
loope
test
push
xlat
mov
outsl
sbb
push
es
or
push
cmp
push
add
mov
cmpsl
jns
aam
int3
mov
mov
and
icebp
and
test
mov
test
add
popf
pusha
mov
das
xor
fldl
adc
stos
xor
inc
addl
mov
mov
mov
movsl
pop
fmull
hlt
dec
adc
push
jmp
cld
xor
lock
arpl
adc
xchg
cmp
xor
adc
sub
cmc
pop
les
xor
inc
pop
xor
fiadds
jge
je
jle
cmpsb
daa
imul
jno
stc
cmp
jl
jg
lcall
mov
xor
pop
stc
leave
sub
outsb
mov
loop
loopne
xchg
stc
inc
adc
scas
cs
xchg
adcb
mov
or
mov
movsl
frstor
shl
scas
sarl
ljmp
xchg
cmp
clc
loopne
in
and
jae
push
cmp
inc
fildll
cmpsl
out
in
insb
addr16
xchg
or
push
je
inc
adc
cwtl
cmp
add
push
sub
mov
ds
or
cmp
cs
jmp
adc
inc
or
pusha
jle
mov
sbb
or
sbb
sbb
or
adc
inc
sub
mov
ret
mov
aad
xor
jl
pop
jle
add
rcl
ja
dec
test
out
jecxz
xchg
and
cwtl
out
jge
call
stc
fidivl
lea
mov
scas
pop
add
mov
sub
sbb
sahf
inc
pop
dec
mov
sahf
mov
add
lds
xchg
loope
xchg
inc
into
sbb
or
ret
jno
clc
jg
adc
out
shlb
pop
push
add
imul
sub
push
insl
sbb
dec
sbb
dec
imul
in
repnz
shl
imul
add
je
pop
adc
jno
add
imul
outsb
mov
repz
jl
pop
sbb
dec
adc
mov
stos
movsl
sub
int
testb
pop
movsb
sahf
mov
pop
mov
pop
test
daa
mov
rcrl
nop
ds
sub
lret
or
push
xchg
add
fidivl
int
pushf
mov
into
sub
mov
std
xchg
inc
sbb
adc
sahf
sbb
in
mov
clc
and
xchg
out
adc
mov
adc
jg
mov
addl
mov
lods
call
jb
loope
fistpll
notl
dec
loopne
movsl
mov
je
cmp
push
adc
cmp
ds
pop
std
mov
movsl
add
adc
inc
or
inc
adc
bound
mov
jnp
fs
xor
or
stos
movsb
cmp
pop
xor
xchg
or
fcomp
loop
mov
test
mov
imul
je
and
add
cmp
pop
into
pop
pop
mov
fdivrs
xchg
inc
mov
mov
stos
daa
jno
xchg
inc
push
insb
jp
mov
test
mov
int
cmp
add
cltd
cmp
lahf
cmpsb
xchg
scas
sub
mov
mull
pop
mov
xor
push
shrb
pop
mov
dec
jecxz
adc
xchg
sub
shr
fnstsw
cmp
mov
dec
adc
frstor
popf
add
shrl
cmp
push
stc
dec
jo
xchg
mov
sub
or
and
arpl
mov
push
idivl
mov
mov
xchg
sti
lods
xor
adc
fnsetpm(287
add
fadds
lcall
cli
xchg
aad
int3
arpl
mov
add
fdivrs
movsl
popf
sbb
xchg
rolb
mov
ret
gs
dec
cwtl
inc
sub
loop
cmp
test
sub
mov
xor
nop
and
lds
dec
aaa
cs
lahf
jg
movsl
sub
out
mov
fiaddl
sub
loop
add
adc
mov
sub
popa
popa
out
sbbb
push
xchg
aad
push
mov
mov
outsb
add
leave
xchg
rclb
cmc
pop
mov
out
test
icebp
aam
xchg
call
loope
add
inc
pop
pusha
push
sbb
ja
xchg
cmp
popa
pusha
notl
mov
shl
loope
sbb
pop
push
loopne
lret
pop
hlt
loope
into
mov
sub
lea
cmp
xchg
jmp
mov
jne
lcall
lret
fwait
and
push
leave
loop
stos
scas
dec
adc
stos
pushf
xor
pushf
xlat
fldl
popa
xchg
loopne
lods
jae
cmp
cmpsl
push
ljmp
jno
sub
xchg
dec
es
push
inc
rorl
xchg
cmp
lret
bound
movsl
cmp
inc
jmp
pop
loope
pop
sahf
leave
add
jns
ljmp
xchg
fisubrl
push
mov
mov
mov
loope
push
adc
icebp
jle
popf
xor
lahf
js
roll
xchg
sub
or
testl
mov
lock
aam
lret
push
movsl
jno
push
call
ret
js
push
stos
in
loope
int3
lea
ss
inc
push
mov
popa
movsb
clc
cs
sbb
sahf
dec
and
mov
push
mov
sbb
pop
adc
inc
jns
shrl
lret
pop
out
cld
mov
xor
dec
or
sub
pop
ret
mov
cmc
scas
stc
nop
loopne
shrb
add
scas
xor
xchg
mov
push
jmp
push
sub
or
popa
dec
loop
dec
nop
daa
jl
imul
iret
push
mov
cmp
int3
arpl
pop
cmpsb
cmp
jne
les
xchg
or
xor
es
test
inc
fldt
pop
mov
mov
mov
filds
bnd
sahf
xor
iret
test
and
fidivl
inc
mov
jbe
clc
pop
xchg
shrl
jg
lods
mov
icebp
mov
xor
add
outsl
and
jmp
shll
test
dec
loop
lret
cld
xor
add
lods
inc
dec
xchg
bound
jmp
pop
pop
pop
or
mov
es
add
es
cli
aas
js
shrb
lret
sti
mov
ss
js
dec
push
mov
sub
mov
mov
hlt
lods
cli
xchg
ficoms
sbb
fwait
push
ss
mov
push
jmp
push
lds
cmc
jb
daa
popa
dec
jecxz
dec
nop
daa
jp
push
in
scas
inc
int
mov
cmp
int3
arpl
pop
cmpsl
mov
xorl
or
xor
es
test
inc
fldt
and
mov
fldl
repz
sahf
xor
iret
cmpl
xlat
fidivl
inc
mov
jbe
clc
pop
xchg
aam
leave
jge
lods
scas
ljmp
add
adc
push
nop
vpcmpeqb
cmpsb
loop
jecxz
enter
xor
add
lods
inc
dec
xchg
bound
ret
hlt
sub
or
mov
es
add
inc
fucomi
and
arpl
cmp
pop
sbbl
cli
mov
ss
jns
dec
add
push
outsb
xchg
mov
shll
fcoml
imul
scas
cs
ss
mov
push
jmp
or
jb
and
inc
nop
daa
js
imul
cltd
scas
inc
lret
add
int3
arpl
pop
test
mov
ljmp
xchg
or
xor
es
test
inc
fldt
and
mov
faddl
repz
sahf
xor
into
cmpb
fidivl
inc
mov
jne
clc
pop
xchg
aam
enter
lods
jmp
xor
add
push
jmp
shlb
movsl
loope
jecxz
mov
sbb
pop
mov
fldenv
xor
les
adc
lahf
inc
jg
jns
es
add
ljmp
cli
cmp
cmp
cmpsl
pop
sbbl
stc
mov
ss
jns
dec
add
cs
push
fdivl
shlb
fistl
aam
inc
cld
sbb
cltd
dec
ss
mov
push
jmp
or
cmp
pop
dec
in
inc
nop
daa
ja
imul
cwtl
scas
inc
lret
and
jmp
arpl
ds
xchg
or
xor
es
xorl
and
mov
fildl
repz
sahf
xor
int
mov
das
and
fidivl
inc
mov
je
clc
pop
xchg
aam
jnp
lods
lods
call
xor
cmp
cmpsl
insb
and
push
lea
lds
fisttps
es
xor
arpl
scas
inc
dec
test
arpl
shr
repnz
pop
pop
adc
mov
scas
gs
mov
add
push
mov
or
je
shll
pop
icebp
imull
jns
dec
add
cs
push
fnsave
mov
lock
xchg
ficoml
aam
inc
sti
sbb
xchg
dec
aaa
into
jle
adc
rorb
das
cmp
jae
and
in
inc
xchg
sub
imul
xchg
scas
inc
leave
add
fs
test
mov
pop
fistl
in
jecxz,pn
mov
xorl
arpl
mov
fiaddl
repz
lahf
ss
cltd
jp
lret
cmpb
push
aam
jb
inc
mov
jb
stc
nop
pop
xchg
aam
lds
scas
stos
out
mov
int
int3
cmp
cmpsl
push
push
jmp
mov
lds
dec
jecxz
lds
add
scas
inc
dec
orb
popf
aad
cmp
icebp
sub
pop
pop
adc
mov
lods
sub
pushl
pop
mov
or
cmp
aam
pop
sbbl
les
cmc
lods
mov
adc
rclb
cwtl
das
fwait
push
fidivs
mov
cld
xchg
fmuls
aad
inc
stc
sbb
xchg
dec
cmp
jl
adc
into
or
cmp
je
and
in
inc
xchg
sub
add
xchg
mov
movl
into
sbb
xchg
in
subl
pop
in
sub
sub
jg
inc
frstor
mov
mov
aas
and
sbbb
inc
pop
hlt
jbe
mov
adc
jle
push
mov
cltd
xor
fdivl
ds
jo
cli
xchg
push
xchg
aad
ret
js
scas
test
lret
ss
aaa
adc
dec
mov
mov
fisttpl
or
xchg
sub
sub
mov
dec
orb
fwait
shll
sub
lds
or
stos
bound
rclb
inc
fsubp
push
and
aaa
jo
aad
pop
test
mov
pop
repz
mov
adc
rclb
cltd
xor
mov
cld
xchg
push
insl
inc
negl
mov
hlt
mov
adc
int3
pop
xor
cmp
je
pop
pop
dec
out
inc
xchg
sub
insl
add
xchg
mov
and
out
sbb
inc
test
in
subl
fmuls
in
sub
sub
jle
inc
frstor
and
mov
aas
and
sbbb
inc
pop
hlt
jne
mov
adc
jge
push
scas
jmp
fdivl
cmp
cli
xchg
push
nop
aad
ret
scas
test
repz
adc
dec
mov
mov
fimull
or
xchg
sub
sub
add
mov
inc
jg
and
shlb
sub
lds
or
stos
popa
sub
xchg
lret
add
in
and
outsl
ds
push
test
mov
pop
rep
mov
adc
rclb
cltd
xor
mov
cld
xchg
aad
insl
aas
negb
mov
popa
hlt
mov
mov
test
lret
push
xor
aaa
in
je
push
pop
dec
out
aas
xchg
sub
insl
add
xchg
mov
decb
sbb
inc
test
in
subl
pop
xlat
mov
mov
sub
sub
jge
inc
frstor
and
mov
aas
and
sbbb
inc
pop
hlt
je
mov
adc
jl
push
scas
call
fdivl
cmp
dec
outsb
and
xchg
push
aad
shll
cmpsl
loop
mov
ss
xor
push
in
dec
xchg
mov
or
xchg
sub
sub
pop
adc
inc
inc
jle
and
shll
sub
lds
or
test
lret
sti
mov
fsubp
sbb
mov
add
std
xor
push
test
mov
pop
repz
test
jnp
inc
cld
rclb
cltd
xor
mov
cld
xchg
aam
insl
ds
sbb
xchg
inc
cmp
js
adc
lret
enter
or
ds
sub
insl
add
xchg
mov
ret
std
mov
das
in
gs
push
test
subl
pop
mov
mov
sub
sub
jl
inc
frstor
and
mov
aas
and
sbbb
inc
pop
hlt
jae
mov
adc
jnp
push
lods
out
xor
iret
fdivl
cmp
xchg
push
mov
insb
shlb
cmpsb
loope
mov
enter
xor
test
sbb
dec
xchg
mov
jae
sahf
fmuls
or
xchg
sub
sub
pop
adc
and
shlb
sub
lds
or
test
sub
nop
leave
add
loop
and
xor
ds
push
test
xchg
mov
adc
rclb
cltd
xor
mov
cld
xchg
rorl
insl
cmp
pop
hlt
mov
mov
test
leave
add
enter
or
dec
out
cmp
insl
add
nop
mov
ret
and
in
gs
push
test
subl
pop
aad
or
sub
sub
jnp
inc
frstor
and
mov
aas
pop
aam
sbb
inc
pop
hlt
jb
mov
adc
jp
push
lods
out
xor
into
fdivl
cmp
xchg
push
aad
mov
loopne
mov
ss
xor
test
sbb
dec
test
mov
jae
popf
xlat
dec
in
mov
imul
adc
and
iret
cmpsl
add
lds
or
cmpsl
pop
sub
stc
mov
fsubp
sbb
mov
add
xor
popf
push
test
xchg
mov
adc
rclb
cltd
xor
mov
dec
jmp
or
insl
cmp
sbb
nop
inc
cmp
jbe
adc
enter
xor
je
sbb
out
cmp
sub
insl
add
mov
sar
and
dec
test
subl
pop
aam
or
daa
fsubrl
mov
jp
inc
fstpl
and
mov
aas
push
roll
hlt
jno
mov
adc
jns
push
stos
in
xor
int
jae
cmp
xchg
push
mov
insb
mov
fdivp
mov
aaa
into
divl
adc
dec
subl
mov
je
pushf
aad
in
mov
imul
adc
and
cmpsl
pushl
pop
push
or
cmp
jnp
pop
sub
movb
imull
and
xor
fwait
push
test
mov
mov
adc
rcrl
lcall
mov
dec
out
std
xchg
rorb
xlat
outsb
cmp
sbb
mov
shlb
stos
loopne
push
out
movb
leave
xor
jne
sbb
test
xchg
sub
add
mov
loope
adc
inc
jg
in
test
enter
or
and
inc
add
js
inc
ficomps
and
scas
jmp
xlat
sbb
sbbl
ds
cmc
outsl
and
cmp
jl
ret
push
test
lret
fnsave
mov
xchg
push
mov
insl
mov
fdiv
mov
les
iret
cmc
das
adc
inc
xorl
or
rorl
add
xchg
sub
and
mov
inc
js
and
lret
test
std
mov
test
push
pop
push
or
jl
pop
sub
mov
add
fstl
and
das
imul
cmpb
cmp
or
rcrl
fwait
xor
mov
push
out
std
xchg
into
pop
fsubrs
out
sbb
lea
shlb
adc
fists
xor
xor
jne
pop
push
push
call
push
outsl
push
xlat
mov
and
adc
jle
in
test
pusha
roll
out
and
sub
or
pushf
ja
inc
ficomps
and
lods
ljmp
add
mov
adc
jne
push
cmpsl
loop
xor
fnsave
mov
xchg
dec
mov
outsb
mov
fcomi
mov
adc
inc
xorb
mov
jne
cwtl
rorb
add
insl
add
or
mov
test
lret
cld
mov
test
sbb
or
jge
pop
sub
mov
add
hlt
stos
dec
loopne
adc
addr16
sub
dec
test
mov
mov
adc
es
pushf
xor
mov
push
in
std
xchg
int3
push
fnstenv
in
sbb
mov
cmp
jo
adc
out
ret
lret
jne
push
push
push
call
imul
and
fmulp
data16
inc
jge
in
test
leave
pusha
rolb
jle
xlat
sub
or
pushf
jbe
inc
ficomps
and
lods
jmp
sbbl
cmp
imulb
mov
adc
je
push
cmpsb
loope
xor
enter
xor
push
sbb
xchg
dec
xchg
outsb
mov
mov
cmp
repnz
push
out
inc
jg
enter
or
rorl
add
insl
add
or
dec
jbe,pt
and
leave
test
test
sbb
pop
dec
add
out
mov
ret
repz
and
sub
inc
fcomps
mov
mov
adc
and
inc
fbstp
mov
push
in
std
xchg
lret
add
sbb
mov
cmp
outsl
lods
adc
out
sar
lret
jne
adc
ss
sub
outsl
push
aad
mov
mov
cmovp
test
leave
pusha
iret
orl
mov
out
and
sub
pop
inc
add
ficomps
and
stos
call
sbbl
cmp
imul
cmp
jge
mov
fistps
jne
xor
xchg
dec
test
outsb
mov
sbb
or
cmp
icebp
sub
stos
pop
adc
inc
jge
enter
or
add
insl
add
or
and
test
xchg
sbb
pop
dec
add
movsl
xor
push
sub
xchg
add
icebp
test
loope
adc
mov
sub
fcoms
mov
imul
lahf
movsb
cmp
or
cmp
ret
pop
pushf
xor
mov
push
loop
xchg
lret
jo
jmp
mov
push
testl
fisttpl
xor
sub
dec
push
call
addr16
rorl
lea
addr16
dec
stos
inc
jp
out
test
leave
pusha
int
or
mov
out
and
sub
push
inc
add
fistps
and
stos
out
fcoms
int3
test
cmp
imul
jge
mov
fstpl
jbe
xor
xchg
dec
adc
mov
sbb
popf
cmc
mov
mov
adc
inc
jnp
enter
push
xchg
int
out
mov
sub
pop
outsb
add
cmp
and
stos
inc
imull
leave
pusha
dec
add
cmpsb
xor
jle
push
sub
pushf
out
cmpsb
dec
loop
adc
inc
clc
imul
xchg
dec
xchg
jge
pusha
mul
sahf
movsl
cmp
pop
jg
cmp
ret
pop
and
xor
inc
loope
jbe
mov
xchg
leave
add
jno
ljmp
xchg
shrb
push
lods
xor
sub
ja
adc
jmp
data16
jo
roll
mov
or
cs
xchg
lret
orl
ret
push
popf
jno
dec
loopne
xchg
and
ret
js
test
lret
test
push
movsb
cmp
jle
mov
fistpl
imull
mov
xchg
dec
sbb
mov
aam
lea
mov
adc
pop
adc
inc
jns
leave
stos
bound
xchg
lret
push
out
mov
sub
dec
or
and
pop
shrl
ret
stos
inc
cmc
scas
icebp
mov
push
lret
add
cmpsl
xor
jg
push
lds
dec
jecxz
push
and
rorl
movsb
sbbb
test
loope,pn
in
mov
add
sub
jae
insb
and
jl
mov
inc
xchg
mov
lods
mov
sbb
aaa
sub
sbb
repnz
adc
fnstcw
stos
jno
in
sahf
js
ljmp
adc
jl
push
lods
aas
xchg
push
in
repnz
dec
mov
mov
mov
test
jno
test
mov
pop
push
sub
mov
int3
dec
enter
pushf
push
mov
shlb
out
mov
js
and
xor
mov
dec
adc
mov
fldt
js
ja
dec
daa
jnp
movsl
mov
push
mov
test
pusha
mov
sbb
mov
ret
add
leave
push
aaa
in
sbb
lea
pop
test
cmpsl
jecxz
push
push
fs
cli
sbb
xorb
sbb
insl
mov
adc
push
xchg
dec
mov
daa
and
dec
adc
popf
orb
cmp
xchg
movsb
mov
mov
shr
inc
mov
int
push
pop
icebp
call
push
lods
bound
repnz
pop
mov
pop
repz
add
int3
push
ljmp
lret
movsl
push
loop
pop
sahf
push
dec
inc
imul
mov
sbb
push
mov
in
mov
pop
push
jl
leave
aam
nop
nop
mov
mov
and
push
in
bound
jno
leave
push
jnp
inc
jmp
xchg
sub
aad
cmp
xchg
sbb
lods
clc
fisubrs
push
adc
shl
xchg
lods
push
fsubr
out
clc
xor
sti
call
xor
dec
repnz
push
rolb
in
jecxz
pop
ja
jecxz
inc
push
mov
repnz
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
push
int3
movsl
fwait
cmpsl
and
xchg
mov
pop
cmp
xor
xchg
add
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
fistps
and
fldcw
jle
sub
xor
or
movsb
idivl
sti
and
lods
inc
pop
ja
lods
jne
aaa
in
hlt
xor
