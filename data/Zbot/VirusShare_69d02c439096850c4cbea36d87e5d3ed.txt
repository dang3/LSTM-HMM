sbb
add
shrl
adc
je
sbb
jbe
popa
jl
cmc
mov
ret
sub
je
cs
repz
sbb
fisttpl
mov
sti
enter
sub
or
scas
gs
movsb
adc
lea
test
lret
daa
leave
decl
xor
test
pop
fstps
lea
mov
test
rclb
ljmp
push
pop
mov
mov
push
cld
dec
cmp
out
shll
mov
nop
idiv
push
roll
test
xchg
adc
mov
test
inc
addr16
mov
adc
jge
outsb
and
aad
adc
cmpl
repz
outsb
push
data16
leave
cmpsb
cld
test
mov
mov
sub
gs
add
add
fnstsw
adcl
mov
dec
mov
cld
ret
adc
pushf
dec
out
mov
data16
lea
jbe
or
aaa
sub
jbe
jge
dec
shrb
clc
mov
mov
dec
dec
xchg
xchg
xor
mov
cmp
xchg
fldt
pop
inc
repz
daa
pop
mov
sbb
jle
loope
xor
pop
and
imul
mov
or
movsb
jo
rolb
inc
rcrb
dec
insl
cmpsw
lret
adc
sti
mov
dec
cmp
mov
sbb
mov
add
in
sti
push
or
sub
and
mov
je
insl
mov
mov
add
add
cwtl
fstpt
scas
adc
sub
mov
cmp
or
cli
fyl2xp1
lcall
xchg
xor
stos
fldcw
mov
insb
std
jns
cmp
mov
fcompl
test
mov
pusha
add
mov
and
mov
pop
jae
and
jmp
insl
mov
push
inc
inc
mov
inc
mov
inc
lcall
mov
adc
dec
mov
cwtl
push
arpl
adc
mov
mov
xlat
jno
jp
stc
popa
movsw
dec
addr16
or
sub
add
mov
pop
adc
popf
or
sub
mov
pushf
movsb
imul
dec
in
mov
mov
pop
pop
cmp
cmp
inc
xchg
sub
xchg
mov
xchg
xlat
adc
and
xchg
add
aam
out
popf
or
stos
mov
out
cwtl
popa
sub
mov
xchg
inc
mov
rcrb
mov
jge
in
and
cmpsl
push
nop
push
xor
jbe
xchg
push
test
pop
push
in
xor
sarb
fcom
xor
rorl
cmp
ret
push
roll
nop
hlt
nop
push
or
loop
cmp
loop
jge
mov
sbb
xchg
jle
pop
mov
lret
add
lds
cmp
cli
shlb
fucom
inc
stos
iret
inc
les
call
ret
hlt
lahf
jns
push
dec
out
sub
data16
jnp
repz
clc
mov
cli
ljmp
int
lea
or
inc
jmp
sub
mov
imull
bound
xchg
dec
jecxz
adc
rcll
lock
inc
ficoml
lods
arpl
inc
jg
loop
cmpsl
mov
mov
sub
arpl
push
cmp
daa
test
fistpll
sbb
das
lods
or
mov
les
and
add
or
mov
pusha
add
push
insb
imul
fcmovbe
jo
mov
inc
sbb
loop
cmpsb
idivl
pop
xchg
push
stc
addl
push
ret
jae
pushf
fildl
dec
sub
pop
into
addr16
inc
lahf
mov
or
sbb
pop
icebp
dec
pop
fcomi
jne
dec
adc
cmpsb
mov
cltd
incb
test
pop
add
pop
aas
sub
cmc
mov
jge
and
pop
int
lcall
or
xchg
ja
add
pop
sbb
cltd
sub
lea
outsb
mov
mov
mov
add
jle
gs
mov
push
push
push
or
pcmpeqd
adc
std
das
sbb
mov
imul
push
data16
aas
stos
pop
sahf
div
nop
jmp
sub
jg
mov
push
pushf
ja
stos
scas
sbb
push
insb
push
push
xor
mov
adc
daa
cli
jns
push
call
pop
insl
sbb
in
lods
popf
arpl
enter
les
enter
shrl
jg
mov
popf
inc
or
mov
inc
aam
dec
fcmovb
cmpsl
push
cmp
insb
pop
inc
inc
mov
mov
and
ja
insb
out
lods
jno
inc
pop
add
out
iret
test
je
add
xchg
shrl
hlt
sbb
imul
xchg
sub
jle
jb
and
or
fisttpl
dec
sbb
push
movsl
scas
dec
in
jle
imul
daa
lretw
arpl
xchg
push
ret
jae
jb
lds
pusha
mov
mov
outsl
popa
sahf
fstps
les
data16
cmpsl
mov
call
fiadds
xor
dec
mov
cmpsl
sub
daa
jns
jno
dec
dec
subl
lds
enter
jno
inc
js
jge
inc
aaa
inc
cmpb
inc
push
mov
bound
xchg
push
arpl
insb
inc
inc
xlat
xor
call
movsb
jbe
lahf
icebp
dec
orb
mov
xchg
lcall
fwait
mov
mov
daa
daa
adc
mov
xchg
xor
add
cmp
clc
testl
xchg
mov
mov
lahf
push
arpl
pop
das
outsb
dec
cmp
sbb
leave
in
cmc
test
cltd
loopne
dec
neg
jae
into
or
in
outsb
sbb
pop
aas
jno
mov
pop
dec
shlb
sub
ja
fimuls
test
lods
scas
push
jl
xchg
sbb
xchg
cmp
push
int3
xor
ret
shlb
leave
jae
mov
adc
std
outsb
push
jnp
nop
pop
dec
jmp
inc
mov
push
mov
xor
jle
xorl
or
dec
or
inc
aam
adc
xchg
adc
and
mov
push
sub
sahf
sub
je
xchg
or
out
cmpsl
ret
adc
mov
roll
adc
pop
jp
clc
mov
push
cmpsb
ds
add
sahf
push
pushf
xchg
test
cld
push
bound
jecxz
popa
ret
icebp
inc
sub
jno
jno
dec
call
ficoml
movsl
jge
mov
nop
imul
sahf
mov
xchg
mov
into
xchg
and
cs
xchg
out
jp
filds
jge
pop
pop
add
mov
mov
mov
pushf
imul
xchg
sub
mov
nop
cmp
sbb
mov
aam
cmpsb
mov
ficoml
stos
push
mov
cmp
insl
ja
jp
and
sub
in
xchg
gs
sbb
sub
stc
mov
int3
jp
jle
stos
sahf
push
jbe
jno
pop
push
cmpl
mov
or
movsl
jle
cld
mov
fstps
rorl
adc
outsl
push
pusha
push
dec
pop
mov
add
aaa
sahf
fscale
and
jb
or
xor
lods
and
sub
jne
jle
fcoms
cmc
rclb
xchg
sub
stos
push
xlat
fmulp
movsl
std
sbbb
mov
xor
dec
lds
add
add
test
cltd
repz
adc
sub
mov
push
sub
dec
xchg
adc
insl
dec
out
and
inc
add
data16
add
rcll
fisttpll
lea
and
sbb
ret
leave
mov
fadds
mov
daa
cmp
jl
addl
jne
aaa
jecxz
nop
and
pop
cwtl
cli
rolb
dec
cwtl
lret
aam
or
jmp
pushf
dec
idivl
adc
adc
ds
xchg
hlt
pminsw
fwait
arpl
xlat
xor
jbe
push
lods
pushf
cli
out
je
add
mov
adc
js
in
test
or
test
mov
movsb
mov
fnstsw
jo
pop
add
shrb
call
insl
xchg
push
pop
popf
cmp
mov
adc
jns
shl
mov
or
scas
or
xor
ss
jns
rorb
sbb
cli
movb
stc
sbb
scas
shrb
jnp
cli
daa
out
mov
add
call
into
cmp
push
rclb
sub
mov
pop
adc
or
frstor
sti
xchg
jno
mov
jecxz
outsl
lret
sbb
shlb
fdivs
pop
sub
pop
scas
cs
jecxz
mov
jecxz,pt
dec
cmp
cmp
fbstp
ljmp
pop
out
adcb
pop
int
lods
mov
push
mov
xchg
mov
nop
ljmp
in
dec
pop
add
or
out
bound
sbb
das
push
nop
and
sub
cmc
sbb
aas
inc
shll
mov
out
push
mov
inc
inc
test
mov
pop
test
andb
sbb
nop
outsb
sbb
inc
filds
pop
sbb
stos
hlt
clc
subb
aas
in
inc
jno
adc
enter
adc
cltd
cmpsb
clc
daa
cmp
shlb
pop
mov
lds
xchg
mov
dec
out
cmp
insb
or
sarl
sbb
mov
nop
and
mov
xchg
sub
fldcw
push
enter
das
cmp
daa
or
pop
incl
data16
adcb
xor
vshufps
push
repnz
inc
hlt
mov
and
ficoms
aam
stos
nop
enter
arpl
movsl
imul
test
xor
in
pop
mov
icebp
mov
lods
pusha
xor
add
nop
adc
std
sub
rcll
outsb
xorb
pop
push
inc
mov
sbb
test
mov
insl
pop
rolb
and
or
pop
push
push
and
loop
and
mov
out
pop
sub
adc
fdivl
outsb
js
out
mov
out
mov
fiadds
stos
jns
pop
outsl
popf
js
in
push
outsb
pop
pop
jo
mov
jp
in
lret
xchg
xchg
subb
rolb
pop
mov
arpl
mov
jns
addr16
mov
lret
int3
sbb
xchg
fnstenv
inc
fsubs
xor
inc
shrb
adc
and
cmp
mov
mov
pop
add
cli
xchg
popl
jns
aas
daa
inc
push
mov
enter
push
loop
bound
pop
dec
hlt
push
lds
mov
cli
mov
movb
fstl
xor
mov
mov
dec
adcb
aaa
mov
ficompl
push
imul
dec
sarl
fistps
rclb
cmpsb
add
or
pop
insb
sub
les
aad
cmp
cmpsl
sub
or
and
sbb
std
xchg
popf
and
popl
in
cmp
test
roll
mov
fsubl
xor
imul
cmpsl
daa
push
mov
lret
stos
sarl
mov
dec
daa
xchg
js
adc
cmpsb
sbb
testl
sub
xchg
aam
jle
fildll
push
mov
jnp
push
pop
insl
add
dec
xor
or
test
xor
xor
out
mov
jbe
lahf
repnz
sbbb
mov
jle
xor
loopne
cli
sahf
cld
cmp
adc
insl
int
repnz
leave
das
fmuls
mov
dec
dec
scas
and
cs
fldl
jno
pop
inc
jo
scas
gs
inc
fdivrl
fdiv
adc
inc
cld
fwait
jecxz
dec
push
pop
mov
lds
adc
add
cmp
inc
int
xchg
clc
inc
sbb
arpl
shlb
adc
adc
jo
pop
jbe
sbb
test
jb
fst
sbb
jmp
daa
andl
xor
mov
arpl
scas
sub
aas
lcall
ds
mov
addl
or
loopne
imul
dec
cmp
ret
sbb
orl
push
in
jecxz
xchg
dec
repz
pop
outsl
shll
psrlq
xlat
in
ds
test
cmp
out
movsl
daa
push
or
inc
push
std
push
ror
jl,pt
mov
ja
aad
mov
enter
fsubrp
fcmovbe
mov
cmpsl
jno
mov
cmp
roll
daa
les
adc
pop
add
or
rcrb
test
aad
imul
dec
movsl
add
push
xor
dec
pop
mov
mov
inc
test
pushf
push
cli
repnz
jl
mov
sbbb
jmp
test
bound
dec
mov
addr16
push
subl
pop
push
pop
cmp
adc
out
ficoml
push
and
xlat
fcomip
mov
adc
mov
cwtl
cmpsl
popa
sub
jae
addr16
xor
lods
fucomp
repz
ret
jge
pop
mov
ret
leave
fwait
mov
mov
mov
pop
push
pop
push
loope
pop
out
shll
mov
pop
sbb
loopne
stc
fdivrs
xchg
jl
in
out
cmp
inc
sub
xchg
test
sbb
sbb
mov
or
shrl
xchg
movsl
xchg
mov
je
cli
push
push
movsl
xor
add
insb
mov
dec
ret
adc
xchg
cli
mov
fmul
jg
push
mov
xor
dec
rclb
xchg
xor
lret
les
mov
aaa
jns
fsubrl
mov
jno
je
cmp
jp
push
cs
cli
fwait
mov
inc
insb
shl
shrb
cmp
inc
test
test
and
in
ja
ret
mov
sub
push
push
fimuls
call
adc
addr16
test
xor
pushf
cmp
lcall
or
in
test
das
mov
sar
inc
xor
movsb
lock
insl
mov
jns
xor
and
add
aam
xor
pop
push
ja
test
mov
inc
lahf
sbb
repz
adc
and
int3
dec
lods
repnz
hlt
sbb
orb
cmp
inc
sub
jecxz
inc
or
mov
push
out
enter
adc
addr16
xchg
and
sbbl
scas
fbstp
repz
mov
icebp
loope
sbb
in
or
or
pop
orl
shl
sub
fcmovnu
packuswb
repz
lods
iret
in
ffreep
mov
or
pop
fisttpl
mov
loop
mov
pushf
sbb
mov
and
jmp
xchg
sahf
loope
jl
daa
xor
mov
subl
xor
xor
mov
data16
jnp
cs
ret
fidivl
cmp
js
xchg
sarb
mov
mov
push
into
push
je
repz
daa
sar
sbb
bound
inc
inc
pop
aas
insb
in
lea
sbb
movsb
inc
cltd
stos
mov
in
popa
test
pop
sub
mov
shlb
into
pop
inc
mov
imul
sarl
adc
mov
mov
pop
sub
mov
sub
inc
mov
and
xchg
cmpsl
test
pop
pop
cwtl
pop
out
cmc
repnz
mov
stos
cmpsb
inc
fisubrl
test
pop
jge
loop
mov
inc
pop
add
push
dec
or
cmp
fstpl
add
mov
push
jmp
mov
aam
outsl
pop
push
fwait
orl
or
ljmp
or
cmp
clc
mov
fiadds
mov
mov
xchg
cmp
and
mov
sub
insb
call
popa
pop
push
sarl
push
mov
cwtl
aas
cmpsl
xchg
sbb
pop
xor
leave
mov
fsts
out
inc
jno
mov
jb
js
lret
push
pushf
add
cmp
push
dec
and
pop
xor
cmp
cmp
add
cmpsl
push
fldenv
int
test
mov
test
mov
out
lcall
ret
negb
inc
gs
or
sahf
addl
nop
jle
cwtl
mov
mov
mov
repz
sbb
mov
es
push
pop
ljmp
mov
cmp
mov
jmp
scas
int
test
sub
arpl
sbb
je
cmp
push
stos
lret
cli
ret
in
sbb
sbb
leave
inc
dec
out
inc
and
leave
push
ds
xchg
mov
jecxz
out
call
jnp
inc
fildl
inc
lock
fidivrs
fldt
int3
cmpsl
negl
xchg
imul
fwait
add
stos
cli
inc
cli
mov
aas
les
pop
sub
push
sbb
mov
scas
imul
adc
and
mov
mov
mov
add
mov
and
sbb
out
loopne
and
fnstcw
sbb
sub
pop
or
sbb
xchg
mov
fcomps
in
test
cmp
mov
cmpsl
dec
sub
mov
mov
xor
aas
in
in
adc
fcmovbe
and
stos
and
jo
jo
movsb
jecxz
xor
rcrb
and
pop
lahf
insb
dec
push
dec
pop
push
dec
sarb
adc
push
lock
adc
xchg
xor
nop
cmc
ret
push
std
dec
sub
das
pusha
movsl
ret
jg
dec
adc
adc
sbb
subl
stc
mov
inc
rcl
pop
cli
loopne,pn
gs
pop
push
mov
data16
xchg
mov
adcl
mov
cltd
in
or
xchg
das
mov
addr16
cmc
push
sbb
scas
sub
inc
aas
mov
push
mov
outsl
fbld
popf
and
daa
inc
lahf
mov
mov
fidivl
test
fistpll
sub
ret
or
mov
xor
cmp
sub
imul
adc
outsb
fistpll
shll
std
ja
les
fidivl
stc
jecxz
xor
icebp
fs
push
xchg
push
jge
sbb
push
and
sub
jecxz
xor
rorl
sahf
push
xchg
push
mov
stos
lret
xchg
das
pop
push
mov
pop
lods
sbb
xchg
or
dec
fsubs
es
add
ret
sbb
sti
jae
aad
mov
pop
mov
push
insl
adc
in
sub
aaa
scas
daa
popf
mov
pop
dec
jbe
or
pmullw
inc
push
xchg
loope
cwtl
adc
dec
cmp
loope
cmovns
popf
jl
add
inc
pop
aas
add
pop
mov
in
lock
ret
out
sti
cmpsl
movsl
popa
jmp
mov
pop
sbbl
lret
pop
cmp
lcall
clc
mov
out
dec
fs
fwait
cld
xchg
shll
sub
movsl
cltd
cltd
das
push
loopne
les
xchg
jmp
jne
dec
rcrl
fcomp
xlat
setge
mov
out
outsb
mov
mov
sbb
leave
add
cmp
dec
jae
push
dec
or
push
sar
dec
lahf
dec
aas
mov
or
std
cmp
filds
sbb
push
adc
lds
jmp
sbb
lret
lret
je
inc
ret
xchg
push
dec
out
jg
fimuls
jg
notb
std
lret
shl
addr16
push
adc
in
loope
push
mov
mov
in
cmp
outsl
and
mov
add
loopne
test
aam
bound
out
int
lods
adc
das
lock
jg
xchg
sub
aad
cmc
aam
adc
jne
jb
inc
xchg
in
stos
jg
cmpsl
es
sbb
jns
fbld
mov
xchg
icebp
repnz
xor
push
mov
add
cmp
std
scas
pop
pop
xchg
lods
outsb
lds
in
les
pmulhuw
clc
pop
lds
lret
ljmp
inc
xchg
adc
fwait
ss
js
adc
daa
icebp
pop
xchg
gs
testl
mov
sub
jmp
pop
pop
mov
add
mov
cmpl
call
adc
xor
js
sbb
xchg
test
enter
inc
cmovl
into
ja
xchg
pop
xlat
sub
int
in
xchg
inc
adc
mov
in
movsl
aaa
fsubl
fldt
ret
bound
aas
mov
xor
test
mov
cmp
push
aad
dec
imul
cmc
cmp
imul
pop
imul
inc
or
enter
push
or
pop
pop
push
test
daa
dec
movsl
pop
int
xor
jp
mov
test
nop
inc
in
add
jl
iret
sub
loope
jecxz
notl
lret
filds
sahf
mov
clc
movsb
push
push
es
ret
sbb
or
in
movsb
push
pop
push
movsl
and
lods
outsb
adc
pop
pop
ret
mov
inc
or
in
insb
cltd
insl
and
jmp
xchg
in
lcall
sbb
push
push
ljmp
add
movsb
push
add
int3
mov
aam
jmp
stc
or
stos
jnp
iret
jae
clc
sahf
xor
dec
sbb
test
add
inc
sbb
sahf
notl
ret
imul
cld
sbb
lods
sub
fadd
aas
mov
pop
ret
repz
dec
ret
shlb
insl
out
in
sahf
in
mov
xor
and
mov
adc
xor
jecxz
jp
add
sbb
mov
cmp
sub
in
cmp
xchg
add
out
ds
shrb
rclb
sub
icebp
test
pusha
dec
pop
ja
add
pop
xor
push
insb
push
je
fmull
leave
inc
add
cmp
inc
inc
push
jmp
das
nop
and
or
xlat
loop
sub
push
mov
jnp
jecxz
mov
insb
jne
dec
pop
push
xor
pusha
mov
sbb
adc
insb
fdivl
jbe
and
call
pop
adc
lods
js
fnstcw
xchg
rorb
test
test
fistps
mov
and
outsb
fsts
pop
lret
in
sub
jl
aad
inc
xchg
pop
pop
or
add
pop
adc
scas
hlt
fucomp
out
pop
jp
pop
cmpsl
lea
inc
stos
movsl
nop
mov
mov
add
je
shl
sub
les
xchg
cmp
push
shl
jnp
mov
jmp
inc
lea
movsb
insb
rcr
addr16
xchg
cmp
imul
pop
or
call
lods
dec
ja
gs
int
push
add
or
addr16
mov
cmpsl
adc
or
push
hlt
idiv
inc
mov
jmp
iret
inc
mov
adc
jbe
in
out
call
and
insb
add
outsl
test
adc
and
ret
in
movsl
sub
imul
mov
outsb
pusha
lock
jbe
movsb
xchg
xor
mov
aad
mov
nop
shrl
in
movsl
jnp
cmpsb
cmp
sub
cmpsl
lcall
adc
outsl
mov
lcall
sub
mov
es
add
popa
ja
xor
int3
sbb
add
loopne
adc
je
mov
and
xor
push
sbb
pop
mov
insb
or
xchg
pop
mov
cmp
stos
in
fmuls
jno
stc
mov
daa
dec
data16
stos
sub
movsb
insb
xchg
adc
ss
mov
adcl
xchg
or
jmp
push
in
lods
ror
mov
addl
insl
inc
and
std
push
mov
xchg
lahf
cltd
mov
fwait
std
mov
insb
jnp
aam
or
lods
xor
arpl
sbb
ret
jmp
mov
xorl
sbb
mov
adc
cs
testl
hlt
pop
xchg
sbb
fs
in
push
in
test
mov
cmp
jno
popa
ss
loop
outsb
cs
inc
sahf
repz
or
mov
hlt
call
aaa
test
cmp
jge
pop
mov
xor
adc
cltd
dec
das
out
inc
add
cmpl
pop
das
pop
cld
adc
rcll
xlat
jmp
inc
and
mov
push
push
jge
int
cmpsl
dec
aam
jl
mov
ss
mov
add
xlat
mov
daa
push
insb
pop
insl
in
mov
cmp
sub
mov
test
andb
lock
arpl
adc
mov
fld
enter
sub
out
push
xor
bound
push
ljmp
cwtl
push
sti
mov
out
inc
cmp
in
in
pop
push
inc
outsb
std
das
add
adc
cmc
scas
push
xchg
mov
lods
jae
lods
push
clc
decb
sbb
in
movsl
hlt
shll
xchg
inc
cmp
movsl
nop
add
stc
adc
inc
add
push
insb
xor
fcomp
jmp
mov
mov
dec
in
sbb
repz
xlat
or
pop
les
jl
pop
cmp
mov
xor
fstpt
rclb
ljmp
and
divb
clc
icebp
push
cld
fs
inc
cmp
scas
xchg
outsl
xchg
inc
and
push
or
jmp
or
arpl
sbb
mov
pop
nop
sbb
lods
test
push
inc
rorb
call
mov
in
xchg
adcb
aas
repz
sub
loop
mov
ja
cli
sbb
dec
sbb
xchg
mov
push
push
xchg
xchg
xchg
mov
sahf
jecxz
push
jg
jp
mov
fnstsw
and
test
and
inc
je
fcmovnb
mov
push
fidivs
mov
sbb
aam
pop
jmp
adc
push
cmp
mov
repnz
cmp
xor
add
stc
sbb
pop
test
insl
push
fadd
dec
push
jle
jns
mulb
inc
adc
gs
mov
das
aaa
lcall
out
nop
xchg
sbb
inc
adc
push
push
ds
out
xchg
popa
mov
mov
repnz
inc
les
pop
scas
jp
xchg
insb
fisubrl
imul
mov
lea
mov
adc
xchg
es
aaa
out
lret
in
and
ss
mov
dec
sub
push
xor
outsl
push
add
shl
das
ret
pop
mov
orl
dec
rcr
flds
sbb
add
sbb
sub
jge
test
mov
jecxz
cwtl
xchg
pop
push
jg
or
jmp
fwait
in
dec
cmp
popa
sub
shll
call
jle
xchg
hlt
xlat
pushf
insb
js
or
pop
addb
test
cltd
popa
push
mov
leave
mov
lods
push
ss
enter
adc
sbb
ret
add
xor
dec
adc
push
xchg
jne
outsb
pop
popf
daa
sbb
lock
sbb
xchg
jns
mov
nop
and
mov
je
rol
inc
mov
lahf
je
xor
push
outsl
mov
cmp
adc
mov
clc
out
test
xlat
cmp
push
mov
aaa
push
mov
add
int
mov
xor
push
sub
adc
int3
xor
hlt
sbb
addb
jmp
outsb
cmp
or
xchg
mov
mov
mov
orb
xlat
or
in
add
insb
cld
inc
lret
xchg
fsubrp
aad
mov
lahf
adcl
insl
sar
mov
inc
repz
clc
ret
xchg
ljmp
mov
push
jae
jae
jmp
sub
jmp
sbb
int3
sbb
mov
xor
cmpsb
scas
cmpsb
jmp
test
out
loopne
pop
sahf
sbb
xchg
cmpsb
sbb
ret
mov
mov
sbb
dec
shrl
icebp
dec
jmp
divb
inc
iret
mov
xchg
jae
cli
cmp
sbb
test
imul
jg
cmp
xchg
arpl
outsb
fstpt
mov
pop
loop
aaa
xchg
xor
lods
push
mov
outsl
pop
sub
lods
lock
lock
mov
scas
ret
mov
add
cmp
jge
fs
or
imul
lods
out
lods
mov
mov
cmp
mov
stos
nop
add
subb
push
add
pop
jae
insl
addps
lock
cmp
push
mov
jne
lret
mov
cmpsl
int3
subb
mov
mov
repz
dec
adc
loop
imul
shr
sbbb
dec
aas
out
fs
test
inc
push
xlat
xor
lcall
mov
adc
cmp
mov
pop
dec
pop
pushf
call
in
in
mov
xchg
rcr
test
aad
movsb
cmpsl
divb
and
mov
ficompl
ja
inc
jbe
aam
mov
or
lret
cli
mov
and
ljmp
out
push
in
push
inc
adcl
ljmp
outsl
inc
out
jb
test
pop
imul
cmp
shll
ror
sub
pop
xchg
cmp
call
rol
sbb
xchg
or
adc
dec
mov
mov
cmpsb
adc
push
fbstp
jl
sahf
mov
insb
xchg
jne
mov
test
test
scas
pop
test
jno
cmp
repnz
push
shr
into
nop
pop
stos
or
sbb
adc
test
pop
sti
mov
sbb
or
jecxz
in
dec
bound
sub
add
sbb
lock
fwait
sub
pop
fwait
jl
sbb
xor
jge
sarb
jecxz
cwtl
enter
add
cmp
jbe
ljmp
scas
in
fdiv
leave
inc
cmp
mov
mov
stc
mov
std
clc
mov
decl
out
cmp
push
push
sbb
pop
jle
cmpsb
pusha
lret
xlat
push
and
xchg
pop
mov
rcrl
and
das
addr16
xor
cmp
loop
sti
push
jno
push
adc
fcompl
jnp
push
pop
shlb
inc
daa
cwtl
xchg
sub
xlat
jmp
inc
outsb
cld
cmp
imul
dec
jmp
mov
jb
dec
mov
mov
push
lret
ret
in
fcmovnbe
test
mov
mov
ss
sti
pop
dec
sarb
out
out
jno
dec
pop
cmc
es
lods
lahf
add
mov
lock
adc
sub
mov
sub
roll
lret
jle
pop
sbb
or
in
inc
cmpsb
xchg
mov
mov
pop
fmul
dec
mov
in
add
in
adc
push
jae
add
test
xchg
leave
jle
adc
and
inc
mov
test
in
cmpsb
cmp
add
dec
fwait
lahf
add
frstor
inc
fisubs
cmp
stos
scas
sub
sbb
xchg
pop
fs
inc
sbb
popf
fwait
adc
xchg
adc
mov
ja
pop
fldenv
ja
pop
rcll
jg
push
xchg
mov
imul
dec
xorl
push
push
inc
inc
mov
xor
cmp
addb
sub
pop
insb
fdivrs
cli
mov
aad
add
arpl
fstpt
aad
mov
pusha
imul
insb
jns
inc
mov
mov
cmp
cs
dec
or
mov
and
sub
xchg
jmp
adc
xchg
xchg
inc
fdivrs
mov
jne
std
and
sbb
psrad
stos
xchg
xor
mov
rorb
xchg
push
xchg
and
fildll
jb
mov
scas
shr
rorb
add
test
fsub
mov
sti
inc
xchg
stos
xor
lcall
jg
ret
sbb
pop
xchg
cld
gs
pop
cwtl
out
xchg
mov
je
add
adc
mov
test
nop
lcall
mov
mov
push
aaa
adc
xorb
test
les
das
scas
xchg
hlt
or
ds
xorb
dec
adc
inc
cmpsb
lods
outsl
fdivs
mov
add
ret
addr16
jg
push
or
divb
sbb
push
es
fstl
or
lcall
aam
xchg
iret
nop
cmpsb
scas
mov
outsb
pop
push
mov
add
mov
dec
mov
nop
mov
jo
pusha
jne
iret
insb
shrb
mov
aad
fs
pop
mov
pop
movsb
push
icebp
int3
lods
cld
jne
test
push
std
mov
add
popf
dec
add
adc
pop
pushf
mov
inc
mov
push
add
inc
and
push
or
or
inc
in
push
stos
in
inc
popf
cmp
shlb
add
mov
loopne
add
lea
dec
adc
mov
mov
dec
push
cli
test
rcll
shll
lret
adc
and
dec
mov
js
mov
mov
pop
lods
bound
cli
dec
add
push
adc
jmp
jns
mov
lods
es
mov
cmp
jae
outsl
aam
mov
pop
pop
pop
leave
nop
loopne
sub
jb
test
add
push
mov
xchg
insb
pop
inc
fidivs
daa
aaa
lret
push
and
ret
fucomi
xchg
arpl
repnz
mov
dec
mov
lret
fldt
orl
sarl
pop
mulb
sbb
stos
push
add
mov
lods
test
jmp
mov
mov
loope
push
push
sbb
movsb
sti
mov
push
jnp
mov
jbe
and
jb
push
push
stos
mov
pop
dec
add
icebp
sbb
push
loope
shl
pop
sub
rcl
imul
jmp
insl
inc
out
jbe
pop
fbstp
add
xor
cli
dec
je
fiaddl
ljmp
out
pop
or
cmp
movb
enter
jbe
jp
push
out
push
jbe
push
movsl
outsb
push
iret
aas
cmp
jae,pt
xchg
into
movsb
push
mov
add
xchg
sbb
mov
cltd
push
sahf
cmpsb
xor
pop
nop
jmp
and
mov
pop
push
push
xchg
scas
push
daa
or
subb
mov
adc
lret
mov
lods
iret
inc
cmpsb
lret
jne
inc
sub
push
add
in
sbb
cwtl
mov
fiaddl
enter
ss
pushf
xor
add
jle
sub
mov
out
lret
cltd
ret
loop
mov
test
lock
fs
inc
mov
push
aas
jmp
incl
pop
sarl
shll
inc
aad
iret
divb
test
cmc
jg
mov
dec
mov
scas
lcall
ljmp
inc
js
sub
insb
cmp
fcomps
jns
ret
pushf
mov
or
inc
or
pop
sbb
pushf
cld
jnp
lret
clc
rcll
scas
lcall
mov
pop
stos
dec
rsqrtps
mov
inc
lock
enter
cs
das
out
adc
adc
sub
jg
cmc
fwait
sbb
mov
sbb
pushf
jae
shl
dec
xchg
imul
inc
cmc
fwait
outsb
adc
push
mov
outsl
fistl
xor
jg
cmc
push
fmuls
test
je
mov
dec
aas
das
add
inc
sbb
mov
inc
loopne
inc
jl
scas
adc
pop
fs
mov
add
inc
sub
mov
or
cld
and
add
xor
pop
enter
nop
movsb
pop
jno
idivl
pop
jns
and
lock
and
mov
inc
pop
xchg
mov
or
xchg
inc
push
pop
jae
push
hlt
mov
mov
and
inc
mov
xchg
xor
es
in
push
add
iret
leave
cmp
cltd
movsb
testl
or
inc
xchg
push
xlat
xchg
dec
ljmp
test
jl
mov
xor
adcl
das
into
push
repz
lock
cmp
fmul
jnp
stos
pop
mov
clc
add
test
sub
cmp
imul
rclb
outsb
mov
pop
or
inc
stc
incl
xchg
hlt
mov
jb
loope
stos
mov
mov
inc
push
cmpsl
fldl
cmp
mov
lcall
in
test
mov
fxch
xor
cwtl
cs
push
aam
adc
mov
pop
ficoms
add
xor
pop
pusha
adc
add
sub
or
inc
sti
js
cltd
mov
mov
jne
jbe
in
push
cmp
mov
cmc
sub
cltd
mov
push
jb
xchg
fistl
mov
push
shlb
adc
leave
or
into
es
pop
fcompl
in
and
lahf
push
jno
mov
xchg
fldt
or
addr16
pop
push
testb
add
mov
sbb
mov
jne
cmp
cmpsb
dec
push
mov
das
inc
adc
sbb
repz
xchg
je
popf
cmp
leave
in
into
xor
scas
mov
pop
je
ret
and
es
loop
sbb
mov
mov
push
lahf
sbb
lahf
out
imul
stc
add
scas
sbb
push
loop
pop
xchg
in
push
rcr
stos
jbe
cmp
fdiv
jge
inc
mov
std
push
mov
shll
popa
push
leave
loopne
jge
into
aas
and
clc
sbb
xchg
jns
xor
popa
ret
mov
pusha
cmpsl
fdivr
sub
mov
push
and
adc
insl
je
mov
mov
arpl
in
jae
mov
sub
jno
fwait
popf
adc
or
rclb
or
adc
sbb
sbb
sub
fimull
jmp
arpl
mov
mov
add
std
inc
push
push
outsb
inc
adc
cli
lds
mov
daa
mov
addr16
ja
cwtl
ret
mov
add
xchg
xchg
ds
jno
sub
stos
shlb
push
inc
je
and
fwait
cwtl
outsb
push
adc
inc
pop
js
shr
mov
sbb
repnz
xor
cmp
rcll
out
sti
pop
dec
xlat
cli
bnd
sbb
in
mov
push
pop
adc
ss
fmull
push
dec
mov
sub
mov
repnz
mov
jge
cmp
cmp
shlb
adc
orb
mov
mov
xor
enter
loopne
cmpsb
gs
push
shl
or
out
xchg
inc
lds
cmpsb
add
dec
adc
or
les
cmp
push
lcall
loop
std
ror
push
stc
in
lock
xor
push
mov
movsl
out
mov
xchg
add
leave
in
stos
push
add
push
rcrb
dec
stos
sbb
aaa
push
xchg
pop
add
pop
pop
fisubrs
push
cltd
sbb
jae
jge
test
and
stos
jb
xchg
mov
xor
jne
push
mov
mov
adc
cmpsl
jp
add
mov
jmp
jne
xchg
add
movsb
mov
test
cli
cld
ljmp
mov
scas
and
and
and
xor
scas
inc
dec
mov
inc
xchg
cwtl
mov
xor
add
fcmovu
push
call
pop
scas
jg
out
xor
pop
stc
imul
pop
jmp
cmp
mov
xchg
loop
pop
lret
jmp
insb
lahf
and
enter
out
dec
bnd
mov
mov
subb
fdivrl
ds
je
mov
cmpsb
add
mov
xor
xchg
das
scas
add
testl
out
inc
push
scas
scas
lahf
lcall
push
clc
jne
fldl
movsb
xchg
xchg
xor
mov
add
jecxz
test
iret
int
mov
pusha
cmc
sti
dec
mov
dec
mov
outsl
test
xchg
mov
cmpsb
mov
rcrl
lret
out
daa
insb
add
sub
mov
inc
lcall
imul
jns
out
scas
dec
mov
mov
xchg
fidivs
mov
xchg
push
add
adcb
pop
test
mov
adc
mov
das
sbb
lods
xor
xchg
sbb
movsl
mov
or
cltd
jl
or
xor
out
jno
in
sub
dec
test
scas
add
gs
dec
sahf
cld
imul
mov
pop
leave
neg
repnz
in
push
pop
out
rclb
sub
js
into
test
xchg
cmp
insb
fnsave
aad
fs
adc
mov
lret
dec
in
testb
js
filds
cwtl
mov
sbb
mov
adc
jl
sbb
sbb
enter
lret
aaa
pop
scas
mov
xor
mov
and
sbb
sub
push
jo
movsb
push
cmpsb
std
loopne
mov
dec
fnstcw
add
push
sub
push
and
cmp
idiv
mov
repnz
jge
out
aad
nop
cli
divb
loop
popf
xchg
call
or
dec
xchg
popf
lods
nop
add
aaa
adc
or
pop
cli
dec
mov
cmpl
inc
add
add
push
pop
xchg
inc
pop
mov
sbb
inc
lahf
sbb
dec
mov
ret
xor
dec
and
sbb
cmp
mov
inc
hlt
xor
repz
fwait
dec
mov
jb
fnstenv
sub
xchg
push
mov
adc
out
in
jns
popf
ret
in
sti
call
insb
lds
fs
lret
ss
rorb
pop
popa
jle
loopne
stc
repz
or
ds
leave
jo
cld
loope
fs
pop
xchg
add
fwait
sub
enter
orl
push
out
push
jbe
push
xchg
hlt
xchg
xor
push
dec
aaa
pop
xchg
jecxz
out
dec
sub
mov
ja
out
mov
sbb
cmp
into
and
and
cmp
mulb
lock
and
inc
ret
or
pop
add
leave
add
inc
cmpsl
clc
pop
cltd
dec
push
gs
lret
test
xchg
scas
aaa
xchg
scas
in
dec
lds
out
sbb
movsl
lret
jno
xor
xor
inc
cmp
popf
xlat
or
mov
pop
dec
push
insl
adc
jo
cmc
push
int3
xchg
scas
push
xor
jns
icebp
cmp
cmp
gs
jne
lds
lret
fldcw
es
xchg
sarb
dec
ss
roll
cli
jg
or
push
pop
loopne
or
hlt
jb
jl
out
lock
cltd
and
es
mov
xor
jge
sbb
or
test
aad
sbb
sub
add
fmul
mov
das
movhps
xor
insb
ljmp
fidivs
mov
pop
or
sub
int
pop
dec
jg
shlb
loope
and
dec
mov
inc
push
das
hlt
jnp
jno
sbbb
jo
loop
fwait
ja
and
cltd
push
pop
sbbb
adc
insb
cwtl
xchg
push
mov
lods
dec
sti
push
add
loope
jo
push
pop
adc
dec
je
arpl
jae
sti
movsl
cltd
mov
je
cmp
add
xchg
xor
repnz
mov
mov
aas
dec
bound
outsl
pop
sahf
es
dec
pop
inc
push
aam
sbb
in
add
dec
cmp
cmp
cmp
fnsave
orb
jnp
in
cmpsb
fistl
and
jne
sub
jae
lea
in
inc
ja
test
dec
jne
sub
loope
push
jns
pop
cmp
insb
das
xchg
shl
test
cmpsb
test
push
les
jecxz
ret
jecxz
mov
jnp
push
jecxz
ror
sbb
loop
push
aad
incb
icebp
mov
pop
dec
scas
or
in
lret
mov
xchg
addr16
cmp
es
mov
int
xor
jge
pop
aaa
jns
add
in
xor
add
pop
add
and
lret
jp
pop
dec
cmp
cmpsb
ds
aas
or
mov
popf
aas
or
lahf
or
repz
cmp
insb
repnz
scas
arpl
mov
push
or
stos
push
in
movsl
shrb
pop
enter
mov
inc
daa
push
mov
cltd
enter
sbb
jle
fwait
mov
test
sbb
jne
sub
testl
stos
or
subl
xchg
popf
add
mov
sbb
shl
cmp
pop
fisubrs
out
repnz
inc
or
call
rorl
mov
sbb
xchg
xchg
aad
push
or
rcll
popf
dec
add
cwtl
mov
gs
dec
int
cmp
sbb
mov
sub
sub
jmp
jle
testb
repnz
push
jge
pop
mov
sub
stc
and
mov
xchg
ss
cmp
cmpsb
mov
xchg
gs
push
aad
push
test
subb
jno
in
mov
inc
stc
inc
in
shrb
inc
decl
lret
fsubrp
push
push
outsl
add
sbb
xchg
roll
pop
xchg
jl
cmp
inc
jge
fwait
sbbl
push
push
xchg
int3
in
and
mov
mov
or
xchg
stc
iret
sbb
cmp
push
incb
pop
jge
mov
sbb
mov
cmp
not
nop
push
mov
addr16
cmp
jbe
testl
jmp
je
lret
push
push
mov
push
sbb
pop
ljmp
xorl
jle
mov
popf
and
je
leave
incl
mov
and
push
mov
andl
cmp
fdivs
jle
out
dec
jle
lods
mov
inc
adcl
and
push
cmp
pusha
push
mov
repz
lea
scas
jecxz
mov
out
fstpt
pusha
push
das
int3
in
mov
jnp
jb
mov
shlb
xchg
jbe
mov
out
inc
push
adc
addr16
xor
adc
dec
leave
gs
jbe
jle
aam
push
xor
lods
cmp
and
inc
leave
push
adc
lret
mov
mov
fcompl
pop
ss
aad
cmp
scas
xchg
lahf
sub
lret
cmp
or
lea
imul
imul
clc
out
divb
fwait
in
fwait
xchg
clc
jge
mov
jl
in
jne
pop
and
mov
lods
shrb
xor
das
mov
iret
add
jg
mov
js
xor
sub
loopne
nop
inc
cmp
add
ss
lods
push
push
in
loope
bound
popf
jae
xchg
push
stos
sti
insl
mov
rol
idivb
mov
add
gs
push
test
and
lcall
mov
std
repz
dec
mov
inc
xlat
decl
sahf
cmp
jae
inc
in
cmp
and
ds
iret
movsl
xchg
mov
dec
mov
mov
or
cmp
leave
mov
and
and
add
mov
adc
cmp
xchg
jle
movsl
adc
push
popa
addb
sbb
jbe
jne
sub
movsl
lcall
in
jae
subb
repz
hlt
mov
cmp
cmc
jmp
cmp
sahf
xor
sub
cmp
shll
xchg
testl
ret
mov
imul
arpl
inc
mov
dec
jb
cmp
mov
mov
sub
jmp
jp
jmp
cltd
jo
sbb
pop
sub
subb
sub
in
stos
and
test
dec
ss
cli
das
sbb
hlt
sbb
inc
dec
cmpsb
mov
in
xor
hlt
xchg
sub
jo
mov
out
cmp
cmp
cmp
lret
popa
sahf
or
add
and
out
out
adc
add
ja
push
cmp
adc
dec
aaa
scas
stos
ficoms
or
push
add
dec
push
sub
pop
insl
orl
outsb
adc
nop
stc
inc
loope
aad
fnstcw
incl
ret
push
ficoml
lret
shr
mov
and
or
insl
dec
les
push
jmp
movsl
push
cld
scas
mov
and
popf
nop
xor
int
xor
movsl
jb
ret
sbb
fadds
nop
dec
sarl
cli
xchg
cmp
and
iret
call
or
push
mov
out
frstor
mov
jne
cli
rolb
jl
jecxz
movsb
clc
insb
xchg
fbld
jb
xchg
mov
add
fwait
jg
add
inc
cld
mov
jg
or
and
hlt
movsl
in
je
lock
xor
test
push
mov
stc
sbb
pop
fisubl
push
aad
aam
mov
in
cmp
popf
aas
sub
scas
nop
popa
xchg
dec
and
or
insb
out
mov
insb
pop
repnz
enter
inc
aam
dec
xchg
jnp
xor
iret
push
fmul
js
push
xchg
sbb
dec
pop
iret
icebp
xchg
jo
push
rolb
dec
mov
cmp
pop
std
icebp
cmpsl
inc
pop
fnstsw
add
call
test
mov
jmp
dec
out
test
adc
xor
mov
push
adc
lret
sbb
sbb
push
mov
pop
push
pop
lock
xor
arpl
push
movsl
inc
test
fwait
push
cmc
in
dec
mov
mov
rorl
inc
ret
movsb
sub
add
daa
pop
gs
out
adc
lods
adcl
out
inc
cmpsb
nop
sbb
hlt
icebp
push
fsubl
mov
sub
fwait
xchg
xor
jns
dec
in
into
loop
loope
sub
cmp
aad
inc
add
jle
mov
mov
fcmove
pop
mov
mov
mov
fstps
push
jmp
cmp
leave
push
out
mov
bnd
mov
jp
jle
cmp
lods
xor
shlb
in
clc
mov
fdivl
into
out
lret
scas
sahf
dec
xor
test
movsb
or
cmpsl
fcmovne
imul
ljmp
shl
xor
lods
add
sarb
aad
in
mov
jne
jbe
sub
lret
xchg
jo
dec
mov
add
jo
inc
fcoml
insb
adc
cmp
sub
gs
pop
xchg
pop
xchg
lds
xlat
add
and
pop
cmp
dec
lock
cmpsl
xor
jns
pushf
inc
xor
imulb
mov
or
stc
shr
xchg
mov
nop
fidivrl
pop
adc
rclb
adc
out
lds
fsts
fwait
xor
in
mov
pop
pop
push
je
cmp
dec
sbb
loope
iret
inc
xchg
out
rcrl
es
jl
iret
push
mov
mov
cmpsb
sub
int
or
xlat
sub
into
push
xchg
enter
jo
aas
add
mov
mov
xchg
gs
mov
bound
je
and
in
mov
push
stc
pop
aad
out
cli
roll
nop
cli
js
sbb
mov
xchg
pop
cmpsb
ffree
insl
or
hlt
into
rolb
inc
lock
xchg
sbb
outsl
or
sbb
push
push
stos
dec
mov
les
dec
or
sbb
mov
std
dec
std
sbb
sbb
stc
and
aas
mov
dec
roll
and
aad
cmpb
andb
or
inc
xchg
mov
lods
pop
inc
shll
pop
gs
popf
and
push
xchg
movsb
les
adc
lods
jmp
into
arpl
add
cld
sbb
in
add
mov
icebp
and
adc
dec
add
stc
loopne
scas
iret
push
xorb
and
xchg
aad
xor
cmp
popf
jb
gs
lret
loopne
ja
dec
addr16
jb
mov
loope
inc
inc
gs
sti
cs
mov
push
sub
inc
sbb
pop
aam
pop
je
mov
sbb
mov
fsub
mov
sub
cltd
in
and
mov
cmp
adc
adc
shrl
sbb
int
sub
push
jo
inc
pushf
sub
gs
jno
shr
mov
push
cwtl
js
out
push
scas
lahf
cmpsl
push
sub
pop
enter
jg
in
mov
mov
jmp
cmp
sub
or
adc
push
shrl
add
add
inc
stos
or
ret
loopne
sub
jg
cmp
adc
in
mov
inc
dec
mov
sub
pusha
ret
jbe
mov
dec
in
jg
and
dec
insl
pop
scas
inc
bound
lods
sbb
jno
push
in
loop
aas
cltd
loope
adc
jl
xchg
xor
bound
pushl
jae
adc
dec
jno
cmpb
pop
inc
mov
les
lock
filds
or
or
adc
dec
fsubr
fstl
dec
adc
add
inc
pop
jb
and
into
js
sbb
xchg
hlt
imul
faddl
push
imul
cmp
outsl
sbb
xchg
ss
add
fcoms
cmp
inc
rcrb
add
aad
sub
jmp
jle
jmp
ret
mov
call
je
sbb
shl
push
pop
sub
adc
cltd
jne
in
inc
mov
insl
test
mov
dec
mov
dec
adc
jbe
sub
enter
adc
mov
xchg
push
movsb
fsts
mov
push
mov
lret
pop
popa
cmp
xlat
inc
incl
out
out
mov
test
arpl
add
cmpsl
sbb
mov
xchg
rol
ret
xlat
push
mov
movsl
adc
mov
test
cmp
add
push
pop
xchg
jge
sti
jno
jns
mov
iret
jae
jno
sbb
imul
mov
lahf
push
inc
inc
and
pop
mov
cmp
fildll
xor
les
lret
adc
or
test
ljmp
jge
nop
data16
dec
int
dec
add
stos
add
sbb
mov
scas
imul
xor
pop
rcr
mov
lcall
xor
insb
or
xlat
xchg
or
mov
js
call
push
sbb
mov
bound
add
js
mov
cwtl
popl
fnstsw
aaa
fdivrl
fsubs
daa
es
cmpsl
adc
out
sub
xor
jge
ss
bswap
jmp
lods
mov
cli
stos
and
add
dec
jb
test
call
int
in
ljmp
int
fwait
push
movsb
sbb
les
std
mov
mov
fwait
int3
mov
jne
inc
cmpb
or
pop
mov
test
stc
mov
mov
nop
lea
lahf
push
stos
arpl
push
int3
mov
aaa
and
dec
cld
loope
adc
adc
jle
lods
pushf
adc
xorb
jb
and
sub
fimuls
xchg
jne
das
pop
mov
push
enter
imul
xor
cmpsl
aas
pop
adc
xchg
push
and
pop
popf
negb
imulb
std
jp
cmp
or
lretw
out
adc
mov
cmpsl
orb
dec
xor
push
or
sbb
gs
loopne
add
or
mov
cmp
test
or
xorw
or
jp
adc
dec
cmp
or
fcos
pop
pop
pop
mov
in
fs
push
mov
scas
dec
rcrb
mov
and
xchg
add
mov
push
xor
xchg
aaa
inc
sbb
pop
add
mov
loopne
and
push
movsb
adc
push
add
push
mov
mov
sub
mov
fildll
cmpsl
movnti
inc
mov
and
movsb
in
aaa
xchg
imul
sbb
xchg
sbb
cmp
mov
pop
inc
jo
fisubrs
xchg
xchg
xchg
bound
push
in
jmp
inc
cmpsb
sub
or
pop
loopne
sub
lea
cmc
lock
lea
or
jp
sub
cmp
mov
cli
mov
fs
int
pop
out
subl
sti
sbb
pusha
loope
inc
rorl
int3
xor
fiadds
scas
pop
push
push
loope
sub
push
jns
dec
fbld
push
lea
jl
inc
out
or
pop
xor
iret
pop
js
imul
fistpl
leave
imul
outsb
ret
and
std
sub
jne
jle
std
push
stc
xchg
iret
mov
std
daa
data16
mov
mov
push
add
mov
in
dec
xor
dec
bnd
adc
cltd
sub
add
adc
jno
rorl
lret
lods
dec
sub
xor
in
mov
pop
xchg
mov
fidivrs
xor
loope
xor
daa
clc
jecxz
or
out
adc
fiaddl
div
popa
jecxz
pop
pushf
adcl
enter
dec
imull
insb
push
fucomip
inc
xchg
and
sbb
mov
fldenv
sbb
jbe
inc
and
loopne
pushf
aad
fwait
jmp
test
push
inc
enter
inc
push
add
or
es
inc
cmp
addr16
fimuls
push
pop
insb
fs
mov
xchg
cld
xchg
jg
pop
fwait
sbb
ljmp
mov
rcr
xor
pop
adc
outsb
or
sbb
test
dec
and
cmc
inc
cmp
or
mov
mov
dec
inc
decl
inc
or
mov
cmp
pop
xor
lret
loop
push
repnz
lahf
pop
dec
pop
fs
iret
movsl
fldenv
mov
add
and
jecxz
push
mov
pop
loopne
xchg
aaa
xor
popf
sub
bnd
addr16
cmp
cld
pop
test
idivb
mov
jg
call
sub
test
add
pop
daa
push
mov
dec
push
aad
mov
xchg
inc
xor
out
mov
aas
dec
add
pop
sbb
push
cmp
push
icebp
movsb
mov
aaa
outsl
push
xchg
mov
or
movb
fldenv
jl
jge
faddl
pop
xor
outsb
cs
out
test
lock
andb
pusha
cmc
mov
lods
pop
cmpsb
lret
jmp
fisubs
pop
shrl
xchg
call
lret
int3
mov
add
andl
stos
lea
mov
mov
es
dec
dec
ljmp
clc
add
ficompl
or
lock
inc
out
and
push
fwait
lahf
jl
jo
pop
sub
test
nop
xchg
clc
mov
xchg
psrlq
stc
or
jmp
cmp
leave
lds
xchg
sbb
sbb
mov
adcl
or
dec
loopne
xor
loopne
je
in
pop
test
mov
xchg
neg
lahf
aas
inc
in
mov
push
jb
test
fsincos
int
into
gs
jmp
lds
sbb
mov
inc
rolb
pop
cmp
xlat
mov
or
push
addr16
or
in
jno
sbb
xor
xorb
mov
mov
push
sub
cli
sbb
fwait
addl
insl
stc
lds
push
xchg
cwtl
outsl
rcrb
adc
dec
outsb
or
jne
std
add
cmc
cld
in
push
cmp
sub
push
and
pop
pop
insb
mov
je
rcrl
push
sbb
adc
loopne
sbb
cmp
call
sbb
cmp
mov
add
dec
fmull
jae
prefetch
or
mov
loope
adc
dec
jmp
or
test
add
jno
push
xchg
loopne
xchg
nop
xor
dec
ffreep
icebp
push
add
mov
jle
mov
stc
scas
and
mov
repnz
nop
xchg
stos
dec
sub
sbbl
stos
mov
dec
das
out
test
lahf
mov
out
inc
pop
js
mov
xchg
sub
test
jle
dec
mov
mov
je
test
outsb
mov
gs
ja
mov
icebp
and
je,pt
push
sbb
pop
cld
sbb
and
loopne
sbb
xchg
sahf
inc
in
push
pop
or
aaa
sbb
add
mov
cmpsb
outsb
pop
mov
push
sub
xchg
xchg
shlb
push
mov
fcmovnbe
aaa
movsl
insb
push
cmp
mov
stos
stc
das
mov
cltd
jp
scas
inc
mov
inc
xor
insb
xor
stos
xor
dec
popa
push
inc
sub
in
xor
push
iret
rcrb
out
or
adc
leave
jge
pop
outsl
xchg
outsl
xchg
imul
cmp
movsl
lock
sub
mov
out
push
orb
mov
cmc
xlat
or
pop
inc
jns
cmp
dec
in
mov
sbb
mov
pop
mov
jne
rcrb
adc
fstpl
jbe
movsl
sbb
cmovle
mov
addb
xor
dec
cmp
add
push
mov
dec
dec
push
xor
call
pop
inc
cwtl
mov
daa
inc
int3
test
in
iret
adcb
xor
push
mov
lock
icebp
test
mov
cmp
aaa
stos
daa
gs
inc
test
sub
mov
jae
push
imul
cmpsl
add
bnd
push
push
nop
dec
sub
xchg
jno
mov
mov
mov
aas
mov
mov
mov
xchg
add
cli
adc
cwtl
push
jmp
mov
cmp
and
push
out
je
das
rcl
stos
cmpsl
jecxz
and
pop
sbb
repz
jne
les
push
dec
inc
test
and
imul
cltd
jnp
mov
mov
sub
mov
loop
aas
jg
mov
pushf
fsubrl
ret
out
mul
cmpl
loop
xchg
pop
ret
lahf
and
stc
fwait
mov
mov
mov
stos
inc
sbb
xchg
rcrl
adc
add
daa
aad
push
sub
je
or
sbb
xchg
call
xor
cltd
sbb
leave
mov
dec
inc
jno
push
and
out
pop
mov
aaa
and
lret
sarb
js
push
jo
fisttpl
outsb
inc
xor
hlt
mov
sbb
pusha
xor
add
add
mov
jp
push
lods
in
imul
or
pusha
mov
mov
jmp
in
push
mov
pop
sub
hlt
in
lds
inc
and
or
and
xchg
add
lahf
ss
jp
inc
fistl
loopne
inc
push
mov
mov
shr
pop
shll
repnz
repz
daa
loope
les
gs
sub
call
aad
test
lds
js
shr
popf
cmp
sub
std
nop
das
mov
cli
sahf
testl
icebp
lds
loop
test
cs
cmpsb
dec
cmp
and
xchg
mov
dec
out
js
das
xchg
cld
cwtl
mov
cmp
int
sub
mov
jbe
mov
je
xorl
pop
rorl
sub
rcrl
sbb
int
mov
add
fwait
popa
fwait
rcr
adc
mov
pop
or
stos
outsl
pop
push
cmpsl
les
roll
pusha
xor
push
pop
ret
jmp
push
mov
xor
dec
sub
and
jne
sahf
or
stos
push
cmc
ja
movsb
out
je
mov
push
loope
lret
shl
iret
aaa
xchg
js
xchg
in
mov
ja
pop
std
inc
xlat
outsb
mov
mov
rol
jl
inc
pushl
ffree
icebp
mov
jno
mov
mov
fwait
push
mov
lods
ucomiss
adc
jnp
pusha
jmp
sbb
adc
incb
outsl
mov
mov
repz
dec
jno
jo
add
loope
rcll
inc
push
loope
push
push
in
xchg
imul
jecxz
std
fcomps
sti
lds
sbb
lea
cltd
repz
xor
xor
test
sub
out
cltd
push
scas
lea
arpl
out
xchg
nop
cmp
xchg
pop
inc
pop
pop
jl
aad
sbb
xorb
les
ja
outsl
insb
jnp
pop
cli
mov
and
adc
cmc
popa
inc
movl
cmp
adc
push
xor
jns
in
subb
dec
out
aad
lahf
fcompl
loope
mov
cltd
mov
int
sub
inc
sbb
int
pop
mov
fs
outsb
push
mov
dec
push
fildl
add
jnp
lahf
xchg
hlt
shrl
pop
stc
in
sub
mov
push
and
lret
mov
cmp
dec
xorl
sub
stc
insb
jp
loop
loopne
das
in
fistps
mov
nop
xchg
lcall
data16
int3
jno
pop
cmp
outsl
mov
cmpl
gs
add
shll
scas
sub
inc
test
or
xor
push
ljmp
out
inc
mov
cmp
inc
stos
cmpb
adc
dec
xor
pop
rorl
mov
mov
loop
iret
daa
jmp
cmp
faddl
inc
cld
push
xor
sbb
push
stc
pop
std
cmp
mov
xor
push
and
dec
jae
sbb
shll
shl
ja
xor
pushl
mov
in
dec
pop
popf
inc
setg
cwtl
ljmp
xlat
add
inc
das
lahf
fsubr
xchg
into
inc
xchg
or
into
loopne
and
push
dec
inc
jle
out
jle
bound
and
cmc
clc
mov
out
push
pop
mov
ret
inc
repnz
stos
mov
ficomps
adc
xor
jne
mov
mov
xor
insb
jbe
icebp
popa
pusha
and
sub
fucompp
in
inc
pop
inc
mov
fs
jge
xchg
xchg
loop
int3
push
inc
inc
out
test
mov
aaa
fs
stos
gs
in
sub
les
cmp
cld
cmpsb
mov
mov
and
fcom
shll
cltd
push
push
sub
out
fstps
test
rcl
ja
aas
jns
add
daa
push
xchg
ficoml
mov
dec
nop
push
int
rcll
xor
loope
push
sahf
rol
xlat
mov
outsb
inc
push
xlat
in
mov
sahf
mov
mov
push
mov
mov
inc
jns
xlat
xor
cltd
jg
adc
push
scas
inc
mov
pop
add
jmp
or
fistps
loope
lcall
mov
movsb
xchg
es
loopne
and
es
outsl
pop
adc
inc
sub
mov
fnstenv
mov
loopne
gs
iret
pusha
or
inc
daa
ja
fs
mov
rolb
inc
mov
jmp
fcom
andl
mov
push
jl
pop
popa
lcall
lret
or
push
push
insl
je
push
nop
mov
std
push
xchg
sub
fadds
mov
push
repz
xchg
pop
mov
std
les
in
sub
or
sub
inc
cmp
jp
stc
xchg
daa
repnz
mov
dec
fs
jb
fs
in
int3
lods
jecxz
pop
and
inc
pop
movsb
sahf
or
dec
lods
shrl
stos
lods
or
rolb
cmp
fnstcw
sbbl
xchg
and
mov
sbbb
mov
inc
in
pop
xlat
imul
mov
push
xchg
xor
into
sub
cmp
push
or
add
sub
and
mov
out
jo
outsl
and
jg
notl
sub
push
mov
fistl
fdiv
clc
lods
push
xlat
pop
nop
dec
inc
push
mov
mov
outsb
mov
stc
or
int3
xchg
mov
imul
jle
sbb
pop
cmc
iret
mov
jg
aas
rcrb
jp
cmpsl
adc
cmp
cmp
mov
add
pop
adc
jge
daa
and
or
cmp
mov
aas
stc
lret
movsl
add
xchg
repnz
push
and
loopne
jb
push
mov
xlat
jecxz
xchg
jnp
lcall
mov
add
loopne
and
xchg
out
pusha
subl
dec
push
imul
ficoml
leave
inc
or
xor
aaa
xor
adc
ret
nopl
pop
push
daa
push
push
scas
or
hlt
mov
scas
jmp
pop
and
ljmp
xor
jns
add
addr16
fimull
add
repnz
jp
push
add
inc
das
jmp
and
in
sbb
dec
sbb
loop
dec
dec
addr16
sub
adc
aaa
sub
sbb
xor
jno
mov
je
fwait
je
adc
aaa
dec
lahf
movsb
and
pop
cli
xchg
mov
dec
adc
pop
dec
jnp
push
adc
test
cmp
in
fldt
pop
movsl
pushf
cmp
jbe
pusha
lret
std
xchg
push
testb
pop
test
mov
pop
mov
test
jmp
mov
push
push
out
testb
fs
pop
dec
mov
mov
inc
shr
xor
or
mov
jle
leave
out
call
push
dec
lret
cmpsl
sti
sbb
and
mov
pop
scas
mov
cmpsl
and
push
shll
or
lea
sub
xor
cld
fistpl
dec
jb
adc
pushf
sahf
jecxz
dec
lcall
mov
fcmovnu
ja
iret
call
popa
push
out
arpl
jbe
lock
mov
push
aaa
idivl
int3
adc
out
mov
pop
jb
xchg
in
jae
shll
ret
xchg
cmc
xchg
pushf
mov
aas
lock
mov
nop
dec
popa
mov
or
mov
arpl
pop
mov
xchg
iret
icebp
mov
cli
jg
xor
in
and
mov
vmread
cmp
fldt
ss
fcmovnu
insl
popf
sahf
xchg
cmp
push
or
mov
push
cmc
ret
dec
mov
enter
sbb
cmp
mov
sahf
sbbl
data16
adcl
xor
outsl
sbb
pop
stos
mov
sahf
mov
test
shrb
nop
call
stos
hlt
daa
pushf
pop
pushf
mov
xor
mov
mov
jbe
mov
orb
mov
insb
xor
inc
orl
mov
push
push
xchg
mov
stos
test
pop
es
les
pop
insl
push
jge
push
inc
fcoms
pop
pop
stos
or
lahf
push
int3
loope
inc
cs
sbb
loop
mov
xor
push
mov
dec
xchg
sbb
adc
add
mov
mov
test
jnp
add
enter
stc
jge
pusha
xchg
adc
adc
cltd
mov
aaa
add
sbb
andb
repz
test
dec
mov
sti
pop
jl
cltd
and
fisttpll
lods
rcrl
add
pop
adcl
shll
nop
sbb
pushf
repnz
subl
bound
dec
out
pop
inc
pop
add
adcb
jae
adc
jp
mov
mov
ljmp
jns
sahf
or
add
lcall
pop
cmp
movsl
mov
shll
push
add
and
mov
icebp
jg
inc
ficoms
lcall
dec
pusha
xchg
inc
push
fbld
call
hlt
clc
push
add
push
pop
insb
les
lods
cmp
idiv
push
fisttps
pop
adc
jb
stos
roll
test
cmp
fsubp
cwtl
rolb
xchg
dec
decb
clc
sbb
cmp
ljmp
jle
sub
bnd
je
xor
and
pop
lods
orl
sti
and
sub
adc
stc
sbbl
xor
dec
in
or
pusha
push
push
pop
push
rcl
push
adcl
sbb
dec
adc
scas
mov
out
push
lcall
jns
repnz
das
dec
sti
xchg
or
dec
jl
mov
mov
adc
bound
mov
mov
lds
fs
arpl
jp
testl
mov
cs
inc
les
adcl
loop
cmpsb
andnps
cmp
je
jae
orb
sub
add
pop
push
jge
inc
std
pop
call
js
aas
rcrl
cmp
scas
mov
xor
mov
xor
cmpsl
inc
adc
mov
loop
cmpsl
jae
add
cli
push
sarb
xchg
rolb
or
loop
shr
lock
sub
lds
push
jg
push
xor
sbb
pop
test
and
pmullw
xlat
iret
xor
loope
add
dec
or
sub
imull
scas
stos
cmp
rcll
pop
mov
mov
jecxz
xchg
dec
adc
sub
cmp
sub
insb
and
rcr
into
outsb
roll
fnstsw
sbb
das
lret
daa
inc
aad
sub
call
lret
lds
popf
sub
dec
flds
push
mov
push
in
jmp
and
cltd
jp
mov
nop
adc
sbb
mov
in
lea
rolb
or
xchg
fnsave
out
loope
pop
daa
mov
iret
aam
fnsave
jmp
adc
fcmovb
cmp
mov
out
mov
sbb
xchg
mov
fisubrl
call
push
adc
sti
inc
out
mov
aam
insl
or
nop
xor
xorl
jp
rcr
ret
popa
dec
fdivrp
jnp
jge
dec
and
fistpl
push
xor
mov
mov
or
cmp
mov
push
cld
sub
les
in
dec
ret
ljmp
pop
dec
cmpsb
out
fnstsw
xor
xchg
stc
jo
addr16
daa
stos
sub
sarl
adc
mov
inc
cmpsl
mov
pop
mov
fsts
adc
test
cwtl
jecxz
loope
mov
sub
mov
or
in
mov
fwait
das
mov
mov
dec
jb
inc
insl
imul
fdiv
xchg
aad
pop
es
dec
or
xchg
lcall
icebp
sbb
mov
mov
int
lods
inc
daa
mov
mov
lret
outsb
cmp
movl
xchg
xchg
adc
xchg
loop
jecxz
cmc
mov
jge
add
cmpb
xchg
aad
mov
test
mov
inc
divps
mov
mov
stos
push
cmp
push
mov
popa
repnz
jae
daa
loopne
mov
divb
cli
orb
inc
sbb
dec
sbb
or
sub
ret
mov
sub
out
xor
jnp
je
push
ss
mov
inc
movhps
mov
fsts
test
sub
adc
call
divl
cmpsb
jp
fsubrp
xlat
je
arpl
dec
fcomip
call
repz
mov
adc
push
lds
push
pop
lock
pop
push
mov
add
inc
insb
mov
mov
push
jecxz
outsl
fisttps
lret
insl
mov
clc
adc
add
push
addb
pop
mov
xchg
cs
add
and
or
lret
mov
pop
cmpsl
ficomps
xchg
inc
jg
cmp
xor
jl
mov
inc
mov
and
jecxz
insb
lahf
sbb
mov
addr16
cmpsb
sahf
adc
insb
sahf
mov
aad
sub
int3
pop
movb
push
sub
mov
mov
repz
scas
sub
and
push
stos
mov
dec
inc
mov
pop
popf
push
or
pop
ljmp
pop
loop
adc
add
fsubs
pusha
inc
jns
sub
jne
mov
mov
adc
push
push
imul
pop
mov
in
mov
repnz
imul
shrb
nop
pop
lock
mov
cmpsl
call
call
mov
sbb
pushf
je
xorb
sbb
fldcw
incl
mov
in
and
xchg
aaa
push
cli
xlat
cmp
jle
pop
imul
bound
mov
and
mov
neg
xor
mov
sbb
add
mov
fdivl
lret
outsl
adc
pop
cmp
adc
iret
jne
iret
pop
mov
dec
dec
idivl
daa
sub
stos
xchg
lods
pop
push
or
jno
adcb
xor
dec
lahf
sub
fwait
scas
dec
repnz
xchg
imul
jmp
xchg
out
es
add
pop
stos
in
mov
adc
out
xlat
in
adc
push
pop
sub
sti
adc
adcl
push
and
or
hlt
dec
imulb
out
cmc
xchg
add
inc
les
cmpsb
sub
dec
xor
test
out
mov
sar
lahf
mov
mov
inc
jmp
mov
push
dec
aaa
sub
cmp
movsb
mov
pushf
cmp
mov
pushf
adc
out
jecxz
lods
xlat
jo
lock
ds
mov
sbb
popa
pop
jne
movsb
add
out
pop
pusha
adc
stc
out
jg
mov
stos
scas
adcl
push
insb
sarb
or
stc
jns
jge
sbb
adc
push
flds
ret
dec
lds
push
pop
or
out
dec
gs
push
insl
ret
in
ss
test
scas
xor
mov
push
pop
std
cwtl
cmpb
push
or
inc
mov
mov
mov
pop
and
sub
lock
fistpll
lds
mov
mov
pop
mov
xchg
loopne
add
ret
jbe,pn
mov
mov
scas
in
in
mov
iret
in
cmpsb
cwtl
mov
stos
cmp
movsl
xchg
push
mov
inc
movsl
movsb
arpl
lds
xchg
loopne
mov
out
dec
popf
sbb
das
cmovnp
shrb
add
test
and
inc
inc
nop
cwtl
pushf
jo
fcmovu
jl
inc
push
in
out
mov
push
dec
pop
push
jae
adc
test
add
fsubl
xchg
mov
sti
pop
xchg
int3
and
push
jge
insb
or
hlt
sub
into
ljmp
push
sbb
ja
xchg
dec
lahf
jg
ficomps
xchg
jb
and
pushf
addb
push
add
dec
xor
rolb
jle
jae
mov
mov
mov
dec
jnp
push
mov
lods
mov
nop
add
test
push
pop
cmpsb
popf
clc
or
add
cld
cmpsl
sbb
test
push
scas
and
aam
insl
add
xchg
mov
inc
adc
sub
or
sbb
pop
xchg
fidivs
cmp
sbb
push
add
sub
mov
addr16
mov
icebp
add
sahf
push
pop
push
cmp
xchg
pushf
imul
lods
mov
icebp
call
add
subb
xchg
movsl
push
cmp
clc
mov
pop
fdivs
pop
adc
jmp
ja
push
or
push
dec
push
aas
adc
dec
bound
mov
sub
sbbl
mov
inc
and
dec
enter
jb
loopne
inc
movsl
mov
and
sub
sub
add
mov
movsb
cmpsl
push
mov
lock
ss
jno
add
sbb
dec
or
out
push
inc
mov
imul
aam
cltd
dec
loope
or
mov
xchg
sti
je
mov
jecxz
mov
sub
filds
xor
sbb
mov
pop
mov
or
addl
xchg
push
test
mov
iret
cwtl
je
sbb
sbb
push
fistps
and
mov
test
mov
test
add
test
loopne
xor
adc
sub
fcoms
add
test
dec
mov
adc
loop
fimuls
aas
jmp
pop
xor
insb
sbb
scas
add
jno
sbb
sbbb
aad
mov
push
lret
push
push
subps
loop
inc
sub
mov
popf
mov
inc
scas
dec
test
push
xchg
ficomps
push
push
sti
jle
xchg
xchg
insl
movsb
call
into
xor
push
or
xor
inc
cld
int3
cmc
sub
push
es
jg
in
arpl
aam
and
xchg
dec
jns
out
add
adc
ficoms
xchg
sbb
repz
cmp
daa
mov
jp
dec
or
popl
ds
in
ss
outsb
scas
outsb
pop
ret
imul
das
mov
sbbb
jae
out
mov
fcmovne
popa
lods
dec
movsl
mov
mov
inc
jmp
fisubrl
mov
hlt
negb
dec
cmp
movsb
scas
cltd
xor
xchg
sub
jecxz
or
fidivrs
add
out
das
std
fwait
and
arpl
xchg
adc
adc
cli
test
in
int3
xchg
stos
jle
js
repnz
xchg
dec
mov
std
pop
mov
xchg
loope
lods
daa
jp
pop
cmc
out
imul
cltd
pop
fucomp
rclb
jecxz
bound
lods
negl
cmpsl
aam
icebp
jb
inc
dec
xor
mov
jmp
cmp
xor
mov
sub
jg
mov
jg
aad
ss
js
cmp
mov
add
fcompl
mov
out
js
push
mov
inc
rcll
out
xor
pop
pop
test
pop
mov
xor
push
xor
add
leave
nop
in
mov
adc
out
mov
or
dec
cmp
cmp
mov
add
js
testb
test
lcall
adc
inc
fsubp
mov
mov
testb
jb
in
repnz
test
repnz
adc
push
lock
inc
lods
pushf
fcompl
cmp
inc
cld
sub
into
cmc
movsb
mov
cmp
mov
in
push
push
shll
into
repz
push
push
and
xchg
mov
cmpsb
imul
lret
push
mov
adc
push
rclb
arpl
mov
mov
pop
jno
add
mov
xchg
cmp
clc
add
stc
mov
arpl
test
jg
jmp
dec
std
repnz
adc
push
sbb
sarl
sub
push
int
dec
movsl
lods
in
push
out
test
cmp
xor
pushf
jb
jno
andl
jne
xor
push
loopne
leave
jmp
sbb
decb
loopne
xor
clc
cmp
xor
cmp
cmp
sbb
movsl
pop
cmp
arpl
aas
jns
addr16
jecxz
jbe
xchg
sub
movsb
imul
cltd
mov
movsl
xor
push
ret
fadds
loopne
cmpsb
sub
inc
jecxz
das
xor
mov
popa
push
aas
fcoms
add
add
pop
jl
scas
mov
cs
popf
xor
sbbl
cmp
fistps
xor
movsb
stc
pop
sbb
sub
rcll
imul
sahf
test
loop
cld
call
dec
and
mov
mov
test
mov
mov
addr16
add
aaa
jp
aam
hlt
jae
out
arpl
pop
aaa
jb
pushl
inc
jp
out
push
inc
jmp
enter
call
mov
movsb
mov
fwait
rolb
into
mov
ljmp
rorl
shr
mov
into
ja
fdiv
enter
scas
jne
movsl
leave
pop
sub
aad
out
addr16
push
add
sbb
adc
dec
popf
scas
icebp
mov
sbb
in
cmp
sbb
mov
loopne
or
arpl
dec
add
dec
cmpsl
shll
sbb
loop
xchg
pop
and
mov
jle
cld
adc
xor
inc
inc
mov
dec
imul
ret
dec
dec
mov
in
imul
pop
into
mov
cmp
xor
je
out
sub
repnz
addr16
lahf
lret
aas
iret
add
cli
pop
je
jns
dec
pop
mov
xchg
jl
pop
jnp
push
mov
or
mov
mov
mov
mov
dec
pop
and
cwtl
inc
mov
mov
shlb
ljmp
sbb
dec
scas
adc
add
lods
adc
sub
aas
data16
push
add
adc
xor
pop
lret
mov
iret
mov
jl
loope
scas
mov
and
popa
lods
jle
xchg
xchg
push
je
inc
mov
mov
and
pusha
adc
ss
subb
xor
insb
adc
xchg
jl
in
mov
inc
cmc
bound
mov
mov
cld
adc
mov
scas
imul
sti
movsl
or
pop
cld
dec
loopne
loop
stos
fbld
stos
mov
cwtl
inc
ds
repnz
jp
dec
mov
scas
pop
mov
ljmp
fndisi(8087
lcall
lock
pop
sub
inc
inc
or
xchg
cmp
xchg
les
fs
in
mov
sbb
stos
push
lds
pop
sbb
mov
dec
loopne
cs
cltd
movsl
xor
hlt
push
test
lret
or
out
sarl
arpl
sarb
add
push
loopne,pn
cmp
add
int3
pop
add
pushf
adc
int
sbb
xchg
in
push
out
dec
inc
shlb
sbb
sub
and
and
fcomps
outsl
add
daa
pushf
fcmovu
and
ljmp
rcrb
lds
push
xchg
pop
sub
mov
les
popa
jns
in
enter
mov
shufps
lcallw
repnz
movb
fldl
cmp
adc
jg
ret
mov
push
jbe
and
jp
mov
leave
arpl
sub
inc
bnd
movd
fs
hlt
or
sarb
fsub
subb
mov
push
les
ret
fisubs
ret
loop
push
or
mov
das
stos
cmpl
jb
psubd
popa
adc
cmp
push
cs
jg
or
lds
mov
movsb
bound
push
sbb
cmp
jg
inc
cmp
iret
data16
xchg
mov
mov
sbb
stos
sub
push
jb
sbb
jnp
imul
adc
cmp
int
in
mov
mov
lret
adc
mov
es
das
xchg
shl
jge
push
dec
sub
int
movsb
repz
out
in
mov
scas
cmp
xchg
inc
jnp
shlb
cs
inc
xor
or
stos
jecxz
popf
cmpsl
inc
sub
fcmovnbe
push
sbb
cwtl
cmp
into
xchg
fdivs
xchg
js
test
popa
push
push
jecxz
mov
xchg
cld
or
insb
cmpsb
nop
jl
mov
pop
sarl
icebp
mov
ret
push
test
js
xchg
lcall
testl
jmp
icebp
push
in
lea
mov
arpl
sbb
jle
xchg
stos
repz
xor
insl
dec
sbb
pushf
sbb
fwait
pushf
add
roll
xchg
xor
std
call
out
push
test
mov
pop
cmp
adc
cltd
sub
adc
ret
push
out
std
fdivl
andl
push
bound
mov
sbb
ret
sbb
adc
sub
and
in
out
mov
adc
cwtl
push
mov
arpl
cld
cmp
inc
outsl
add
add
call
out
push
mov
jae
data16
xor
adc
es
mov
nop
xor
mov
std
push
xchg
imul
fwait
adc
adc
add
inc
cmp
and
jge
lods
cmp
mov
dec
xor
in
or
clc
insl
cmc
daa
xor
orl
test
mov
rcrb
mov
sbb
adc
aaa
xor
shrb
lret
mov
lods
xor
xor
mov
add
push
and
mov
test
push
sub
iret
cmp
sbb
or
jmp
scas
repz
sub
jmp
xchg
jo
xchg
clc
mov
ljmp
adcl
outsl
jmp
mov
cmp
cli
mov
sub
rol
or
or
mov
jae
enter
in
cmpsb
push
sub
fsubrs
aaa
cmp
push
add
pop
aaa
dec
xor
gs
sub
out
push
sub
lret
stos
notl
lahf
adc
sbb
mov
and
call
xchg
push
pushl
leave
test
mov
mov
mov
or
mov
ljmp
dec
jle
into
in
dec
out
push
cltd
mov
pop
jp
fwait
sbb
jmp
mov
out
arpl
daa
mov
insl
push
test
adc
xor
xchg
les
dec
mov
bound
add
add
adc
lods
sub
fstps
dec
mov
ret
outsb
xchg
jae
xchg
in
adc
sbb
mov
stos
leave
inc
or
popa
in
movsl
jno
adc
arpl
sub
mov
in
jg
xchg
into
mov
scas
ret
int3
fucom
cmp
xlat
inc
xor
fs
enter
out
pop
jnp
mov
xchg
pop
cmp
std
data16
mov
push
fistl
xor
insl
sbb
insb
inc
leave
cltd
pop
sbbb
xchg
mov
ja
mov
adc
ds
fs
dec
xor
ja
hlt
clc
fistl
cltd
popf
push
arpl
punpckhdq
nop
adc
pop
mov
jns
nop
in
scas
adc
xchg
push
jp
sub
jg
xchg
arpl
into
aam
mov
stc
xlat
es
jmp
jp
std
cwtl
sub
or
inc
or
mov
inc
ret
sub
push
repnz
pusha
stc
or
sti
mov
pop
mov
xor
or
and
push
or
adc
insl
lock
mov
pusha
insl
push
cmp
add
repnz
rolb
scas
insb
fwait
data16
pop
aas
nop
das
mov
mov
xabort
push
imul
xor
inc
jle
cmp
sub
es
xchg
mov
cld
sub
xor
and
aad
or
pop
push
dec
into
dec
std
jmp
xchg
jg
cmpsl
sti
push
and
dec
pop
popa
jb
ret
insl
xchg
jmp
xor
xor
mul
js
push
lret
mov
ja
pop
xchg
add
leave
add
out
xor
mov
fnstenv
not
mov
insb
repnz
and
cmp
les
mov
xchg
std
cmpsb
or
lock
mov
stos
fstpl
ja
dec
pop
jno
daa
loope
pushf
push
sbb
adc
lea
mov
jno
mov
negl
fdivrl
dec
ds
and
xorl
iret
pop
dec
daa
adc
sbb
scas
ret
frstor
test
repz
leave
nop
xorb
dec
jp
mov
dec
mov
js
and
sbb
addr16
mov
xchg
cwtl
jp
mov
push
popa
fcomp
jno
test
adc
test
ret
push
cli
sahf
scas
mov
fdivs
mov
adc
and
and
ret
pop
cmp
xchg
test
mov
shl
mov
dec
add
and
int3
sbb
cmpb
hlt
call
xor
js
mov
sbb
ss
xor
mov
in
mov
dec
and
pop
and
rcll
xor
push
and
push
inc
xchg
insl
xchg
repnz
call
inc
shlb
or
xor
scas
inc
aad
in
stc
test
les
stc
iret
in
sbb
mov
andl
cltd
mov
xor
push
cmp
repnz
push
inc
cmpsb
push
lcall
jle
jnp
test
arpl
inc
mov
sahf
push
cmpsb
out
inc
popa
adc
popf
push
xchg
xchg
push
lock
rcrl
push
adc
push
or
int3
insl
add
imul
jl
das
mov
mov
pop
mov
dec
clc
data16
xchg
out
sbb
sbb
cld
mov
rolb
push
mov
xor
push
fistps
movsb
rcrb
loop
mov
mov
sbb
xor
test
bound
imul
enter
inc
pop
loope
mov
popf
int
fmuls
mov
and
nop
add
and
fsubs
adc
mov
jl
gs
test
dec
xlat
int3
es
out
pop
pop
push
ds
lret
bound
add
das
fimuls
sub
sbb
or
lock
subw
push
mov
mov
cltd
imul
push
jns
cwtl
mov
or
sbb
mov
ss
data16
test
call
mov
lock
sbb
jg
shll
pop
loope
les
mov
std
mov
pop
mov
sub
rcrb
addl
js
mov
cwtl
add
xchg
test
sub
gs
sub
jle
mov
push
divl
int
jns
adc
in
push
pop
fwait
pop
mov
mov
pusha
add
jle
out
pop
jmp
imul
mov
call
mov
push
ret
xorl
inc
movsl
enter
test
jb
lcall
into
test
jecxz
pop
andb
xchg
lahf
mulb
push
mov
xor
cmp
sub
jl
mov
sub
lahf
xchg
shll
bound
add
mov
stc
loopne
test
ss
sarb
cwtl
lock
je
push
pop
ficomps
ja
mov
loope
mov
cld
dec
arpl
movsb
pop
add
sahf
je
ss
fadds
adc
pop
test
mov
mov
pushf
push
stos
inc
mov
mov
add
push
push
sti
sbb
lahf
add
iret
adc
rol
mov
and
cli
lahf
xchg
and
ret
fdivp
lock
jg
call
mov
mov
cs
mov
rcrl
mov
jo
add
jne
popa
add
ljmp
add
mov
fsubrl
push
jecxz
inc
lahf
lahf
dec
aaa
xchg
pop
dec
sbb
or
fsin
mov
pop
scas
and
addr16
add
sub
outsl
or
loopnew
movsb
lods
or
out
lahf
push
jbe
dec
sub
fildl
sbb
mov
ret
add
xchg
jns
add
outsl
jmp
or
mov
adc
lret
xor
mov
inc
add
popf
and
mov
aam
sbb
xchg
pop
lahf
repnz
test
add
and
dec
popf
lock
lcall
mov
lret
imul
call
addr16
and
jg
xchg
push
pop
lds
iret
xchg
jge
sbb
add
jle
jecxz
fcomps
aaa
repnz
xchg
add
test
aad
inc
sbb
pop
push
pusha
add
add
sub
dec
ss
sub
fimuls
mull
mov
or
insb
jge
inc
outsb
cmpl
push
movsl
aas
push
adc
pusha
test
pop
xor
fs
and
shrl
jmp
jmp
je
mov
cmp
out
sub
dec
lods
add
jl
pop
cwtl
cmp
lock
jle
out
mov
or
cmpsb
mov
in
fidivs
mov
in
and
mov
jne
pop
xor
sub
mov
cltd
sub
loopne
xchg
in
sbb
or
and
mov
loopne
push
pusha
jle
insb
pop
adc
sub
test
push
clc
fisubrs
int
xchg
rolb
cmp
test
xlat
xor
pusha
push
add
and
sub
push
cmpsl
neg
mov
xor
cmc
dec
xchg
push
sahf
dec
enter
imul
lods
dec
icebp
into
adc
gs
mov
pusha
insl
jne
push
hlt
int
xchg
cmc
movzbl
cmpb
and
fdiv
out
or
pop
sub
xchg
adc
add
fnstcw
sbb
jo
push
fimuls
xor
inc
pause
xlat
sti
fdivrl
and
sbb
and
outsl
out
jae
out
xor
fdiv
cmp
cmp
enter
jl
movsl
pop
adc
jno
inc
xor
stc
pop
loopne
xchg
push
mov
ret
cld
js
gs
jae
imul
fidivrs
xor
push
add
adc
adc
mov
jae
into
adc
pop
test
test
cli
or
inc
or
fs
xlat
dec
gs
std
lret
jo
sti
and
cli
hlt
push
jmp
pop
ret
mov
adc
or
cmp
cld
sbb
imul
ss
imul
enter
add
aas
rcl
cmp
rcll
js
lcall
adc
ds
xor
outsl
jmp
cmp
rorl
mov
push
enter
idiv
movsb
outsb
pop
daa
fs
pop
data16
incb
and
lcall
fst
movsl
mov
mov
aaa
sarl
inc
adc
lcall
loopne
imul
ljmp
loope
sbbb
ds
lods
and
and
orl
cmpsl
adc
sub
stos
jmp
adc
sbb
cs
mov
push
and
jecxz
dec
xor
sub
mov
mov
jnp
adc
insl
mov
xor
test
xlat
cli
sahf
fs
push
dec
rcr
add
std
mov
int3
xchg
lods
xor
or
xchg
bound
lods
rorb
cltd
mov
ss
shrb
int3
pop
jns
daa
jnp
sbb
mov
movsl
fdivs
mov
adcl
sub
jp
data16
or
addr16
sti
push
push
mov
or
loopne
cld
call
sbb
cmpsl
jmp
ljmp
ss
sub
arpl
into
mov
das
push
ficompl
inc
inc
xchg
loop
data16
das
mov
fidivrs
test
mov
push
xchg
rorb
test
out
pop
pop
mov
ficomps
push
ljmp
pop
mov
ljmp
movsb
push
outsb
lock
mov
incl
dec
add
adc
outsb
out
rcll
int3
mov
fdivrs
mov
insl
add
dec
std
rcrl
pushf
push
push
add
pop
pushl
sub
incb
lods
inc
jae
aas
jb
add
sub
push
mov
push
push
lock
and
mov
push
cmp
or
fs
testl
cmpl
test
gs
sahf
fs
mov
lods
dec
xor
punpckhbw
sbb
les
xor
rclb
mov
mov
mov
xchg
lahf
andb
ret
or
insl
je
adc
add
jne
sub
leave
mov
pusha
arpl
imul
pop
lcall
filds
sbb
inc
xchg
loope
cmp
cli
mov
sahf
dec
repnz
leave
dec
inc
mov
icebp
in
xchg
mov
in
inc
jge
movsb
sbb
or
js
dec
dec
popf
lods
mov
adc
das
popa
mov
dec
test
sbb
mov
xor
mov
popl
movsb
je
xorl
aas
mov
inc
andl
cmc
mov
cmp
ljmp
mov
jb
mov
ret
sub
sub
fldcw
imul
mov
fisubrl
or
jne
iret
mov
jl
arpl
iretw
call
jmp
mov
pop
int
xchg
pop
xchg
pop
xchg
push
sti
int3
add
imul
fsubs
test
scas
cmpsb
enter
xor
rcrb
test
incl
aam
cmc
loope
enter
sbb
push
imul
jno
ja
inc
xchg
adc
push
push
cs
cwtl
mov
int3
pop
jae
sbb
jb
aad
negb
add
pop
gs
iret
pop
dec
jl
or
and
adc
in
loope
xchg
and
jecxz,pt
aad
cmp
pushw
add
ret
in
pop
cmpsb
add
jo
sub
cmpl
mov
jo
push
adc
outsb
adc
into
imul
xor
loop,pn
cltd
enter
stos
lods
call
pop
add
sbb
push
push
cmpsl
cmp
popl
cwtl
stos
popf
shrl
clc
sub
inc
gs
cs
ja
dec
lahf
pusha
jg
insl
sbb
std
mov
lock
mov
cmc
inc
testb
dec
push
push
push
out
inc
mov
pop
xchg
xor
rorb
inc
out
iret
mov
xchg
and
fistpl
in
pop
cmp
repnz
mov
cmp
minps
repnz
cmpsb
inc
rolb
repz
dec
xor
int
dec
xor
mov
pop
out
lock
pop
out
jo
add
jl
or
popf
rorb
cmpsb
add
loope
idivb
cmp
outsl
or
pop
mov
addr16
pop
jp
scas
jns
jns
cwtl
add
pop
dec
sub
sub
push
dec
xchg
jns
repnz
sbb
dec
lods
loop
pop
aam
cmp
jae
pop
aas
push
clc
popa
sub
rcrl
mov
cmpsb
push
mov
in
jmp
imul
dec
pushf
sbb
xchg
cltd
pop
in
push
stos
mov
inc
cs
repnz
xor
dec
cmp
sarb
jp
clc
mov
test
scas
fsubr
imull
mov
inc
daa
xchg
sbb
clc
xchg
ja
mov
rcrb
int3
neg
ret
mov
rcrb
inc
or
adc
in
sub
ljmp
aad
mov
adc
repz
xchg
sbb
cli
and
cmp
push
cmp
xor
cmp
sbb
add
and
lret
test
adc
and
mov
test
xor
and
ljmp
rcll
lock
dec
aas
sub
pop
loop
jb
aas
jo
out
fdivl
sbb
adc
pop
xor
xor
subl
mov
jp
stos
stos
stos
imul
nop
pop
testb
jmp
push
pop
nop
lds
filds
mov
mov
xor
iret
and
dec
jb
outsl
xrelease
dec
dec
or
out
xor
aaa
repnz
xchg
mov
ss
push
push
inc
fbld
inc
and
or
paddsb
sar
jns
stos
out
outsl
mov
imul
mov
pushf
jle
mov
or
stos
aas
ljmp
mov
mov
add
cwtl
pop
out
sahf
hlt
push
outsl
sbb
std
scas
shr
jle
fldenv
cmpsb
rorb
js
mov
sub
cld
lods
lods
mov
loop
clc
bound
insb
mov
xchg
mov
mov
push
push
scas
adc
xorl
jnp
in
mov
insl
jp
lahf
fstpl
jbe
xlat
jmp
cmp
inc
pop
pop
xchg
pop
cmp
xchg
or
aam
jbe
cmp
addr16
out
jno
loope
cmp
sub
loopne
pop
jle
push
mov
jge
testl
insl
fs
jg
imul
sub
leave
inc
inc
repz
scas
mov
and
inc
xor
and
daa
in
fs
mov
lea
sub
sub
mov
pop
adc
and
jg
adc
mov
lcall
sub
pop
push
rclb
int
daa
jno
or
int3
aam
ss
mov
loopne
add
inc
popa
loopne
and
cltd
and
add
ret
adc
add
cwtl
dec
mov
or
mov
lea
inc
test
ret
add
notb
mov
xchg
mov
aam
sub
jge
jp
orb
xchg
cltd
ficomps
mov
xadd
jae
jmp
pop
cld
dec
and
gs
das
subl
fadd
pop
mov
imul
fisubl
aaa
imul
lret
pop
push
lods
push
repnz
xchg
xchg
mov
push
fbld
lcall
xchg
fisubs
xchg
shrl
push
pop
adc
enter
push
pop
or
data16
xchg
dec
test
ss
pop
mov
or
es
mov
dec
xchg
sub
xchg
mov
arpl
pop
pop
inc
mov
or
pop
mov
push
movb
inc
cmp
push
repz
jae
cld
ret
fsubrs
sbb
pop
sahf
pop
sub
rcrb
push
rorl
dec
mov
inc
xchg
dec
repz
mov
ja
sbb
or
xchg
fwait
fs
ret
push
adc
leave
xchg
aam
cmp
fsubrs
psllw
ret
jecxz
fwait
pop
cmpsl
pop
movsl
pop
fwait
sti
decb
pop
aaa
ss
xchg
inc
push
sub
stos
test
fisubrs
mov
push
addl
lahf
cltd
outsl
imul
addr16
xchg
pusha
cmp
cmp
cmp
cmc
adc
xor
pop
and
popa
jo
shll
outsl
sbb
pushf
mov
shlb
lret
xchg
js
pop
jo
cmp
shll
mov
or
sbb
mov
add
in
icebp
aam
cltd
jecxz
pop
loope
mov
out
cwtl
pop
add
mov
dec
lds
jne
fcoms
mov
mov
stc
xchg
push
out
lcall
cmpsb
dec
push
mov
xor
ja
jp
ljmp
insb
ljmp
lea
dec
pop
cld
mov
fisttps
stc
lods
rcrb
lods
scas
mov
mov
mov
enter
mov
mov
lock
dec
xchg
jb
cltd
pop
dec
xchg
xor
ficompl
mov
scas
jnp
fsubrl
test
jns
push
sbbl
fistpll
mov
daa
test
lahf
dec
and
lret
verr
or
sub
gs
sbbb
xchg
mov
adc
outsb
movsl
mov
orb
repz
mov
and
icebp
pop
xchg
and
test
and
push
or
sbb
xchg
in
dec
negl
dec
pushf
sbb
mov
fwait
std
ret
sbb
in
xchg
xchg
mov
sarb
jmp
xor
test
push
daa
add
or
iret
loopne
mov
outsl
cwtl
imul
push
push
orl
fdivrs
test
sub
test
mov
jne,pt
mov
jns
add
cmp
jl
cwtl
sub
sarb
das
in
sub
lods
sub
adc
int
fidivrs
inc
mov
lods
adc
scas
xchg
addr16
popa
xchg
adc
pop
pop
movsb
sub
insl
push
sub
and
xor
in
push
dec
mov
add
in
mov
iret
ret
inc
sarl
sbb
js
push
in
inc
inc
lea
or
sub
pop
inc
scas
test
push
xor
int3
cmpsb
scas
ret
decb
adc
cli
xchg
insl
loop
lods
adc
jae
pushf
jmp
mov
push
popl
dec
pushf
das
lret
push
int3
outsb
sub
pop
cmp
test
lret
pop
inc
insb
mov
adc
pop
dec
cwtl
in
add
xchg
jg
ret
inc
sbb
cli
dec
adc
mov
lret
lods
iret
leave
scas
js
fucomp
mov
shll
mov
aas
mov
cmc
test
popf
push
lret
test
add
pop
stos
add
loope
enter
jbe
dec
adc
repz
int
cli
movsl
scas
subl
icebp
outsb
repz
push
sahf
xor
add
adc
adc
orb
xchg
js
lcall
mov
pop
sbb
pushf
fldcw
mov
mov
xchg
dec
mov
jp,pt
lret
in
icebp
push
insb
test
jns
add
jae
das
add
mov
and
in
ljmp
or
call
push
iret
sub
ljmp
jle
clc
xchg
push
in
pop
movsb
sub
sub
xchg
mov
push
outsb
dec
mov
pop
or
inc
mov
push
outsb
mov
xlat
push
lds
loopne
lret
mov
inc
movsb
sahf
push
insl
add
ret
lahf
lock
sbb
out
int3
lds
sbb
or
call
mov
cmc
xchg
inc
scas
and
mov
mov
cmp
fldl
mov
mov
in
mov
pop
xor
orl
cmpsb
dec
sbb
fldcw
les
mov
add
inc
xchg
cld
add
jae
aaa
icebp
fucomi
jne
adc
icebp
neg
and
adc
sub
mov
movsl
scas
loope
mov
scas
ljmp
ljmp
cmp
out
call
pop
sub
int3
jo
mov
adc
out
adc
jnp
loopne
mov
xchg
pop
sub
dec
push
notb
movsb
push
add
orl
cmpsl
push
sbb
xor
adc
pop
mov
lcall
push
ds
sbb
insl
fadds
inc
jge
inc
fsubrs
aam
loop
and
xor
jb
add
push
or
push
add
aad
dec
mul
push
pusha
movsb
mov
shrb
jns
fwait
es
inc
insb
jp
push
mov
notl
pusha
mov
and
out
fwait
aam
jo
sbb
call
xchg
jg
int3
mov
and
popa
xchg
xor
mov
mov
pop
repnz
mov
shl
ror
mov
and
add
cmp
add
jmp
dec
jg
cmpsl
into
push
jge
mov
cmp
or
and
imul
add
hlt
adc
in
xchg
xchg
xor
add
outsb
sbb
call
adc
cmpsl
ret
xchg
mov
cmp
pcmpgtb
enter
aaa
push
mov
shrl
cltd
shlb
cmp
nop
or
add
mov
mov
sub
xchg
aas
mov
loop
stos
and
int
fcmovne
shufps
out
pushf
loop
jp
shll
sub
xor
adcl
and
add
jge
pop
lcall
sahf
dec
shrb
cli
andl
mov
adc
dec
in
push
outsl
insl
test
aad
mov
and
push
jmp
popa
cld
enter
jmp
repz
xorl
add
mov
xchg
testb
mov
inc
into
xchg
pop
popf
inc
dec
ret
ljmp
jno
daa
lods
imul
xchg
subl
dec
into
lds
fadd
sarl
movsb
dec
hlt
lcall
bound
dec
lea
sbb
nop/reserved
ja
xor
mov
ret
adc
mov
mov
test
ret
xchg
mov
add
adcl
repz
notl
sub
lds
sbb
adc
push
push
mov
es
fisubrl
jns
or
dec
ret
jmp
int
in
leave
into
push
pop
mov
mov
movsb
dec
arpl
jl
nop
sub
adc
dec
cmpsb
inc
push
push
int
push
movsb
xchg
out
pop
rcr
aas
loopne
lods
shlb
bound
push
cmpsl
cmpsb
pop
popa
xor
loopne
popf
xchg
sbb
push
mull
int3
mov
aas
jno
adc
jg
ror
fsts
xor
dec
jp
xor
sub
mov
iret
push
add
push
stos
inc
pushf
cld
and
call
movsl
flds
cwtl
xchg
arpl
outsl
inc
rcl
xchg
int
mov
mov
xor
scas
xor
das
pop
inc
xchg
in
cmpl
ss
scas
dec
inc
lods
ljmp
cmp
push
cmp
loop
push
inc
in
lcall
nop
xchg
push
sub
outsb
cmp
jo
xchg
or
dec
cmp
sub
jg
ss
repz
in
pop
cli
mov
loop
pushf
mov
add
mov
scas
jge
popa
xchg
in
mov
xchg
xor
xchg
xchg
cmc
xchg
nop
dec
and
xchg
sub
andl
aaa
mov
jo
mov
ss
lock
fildl
in
nop
mov
jmp
adc
xor
stos
cmc
test
add
xor
cs
xor
leave
ret
push
inc
pop
jae
add
mov
cmp
sarl
and
add
add
orb
xchg
mov
push
sbb
enter
addr16
or
das
fs
fwait
popf
push
mov
arpl
cmpl
push
jnp
cmp
ret
cmp
push
lahf
stc
jp
cmp
jecxz
push
ljmp
xor
fcmovne
les
ja
fidivs
in
je
test
cld
lret
ljmp
stos
xor
lret
pop
push
sub
fs
pop
cmpsb
aaa
xor
mov
pop
dec
jne
je
pop
cli
xorb
xor
mov
test
sub
das
xor
int
mov
and
adc
mov
dec
xchg
mov
lods
pop
xchg
mov
pop
xor
sbb
out
fmul
or
popf
in
daa
roll
mov
clc
mov
cmp
dec
shll
sub
cmp
sbbl
jmp
xchg
icebp
mov
push
and
into
adc
sbb
mov
inc
mov
inc
gs
loope
push
lcall
pop
sbb
repz
sub
adcb
mov
int
ret
movb
divl
stos
lahf
pop
jne
cmp
and
cmp
xor
and
mov
sub
pop
inc
mov
aam
or
mov
jbe
sub
sbbl
sbb
cld
mov
or
out
mov
push
iret
dec
loope
lret
jp
outsl
add
jle
sub
mov
outsl
movsl
sbb
xchg
and
data16
aad
and
jbe
repz
mov
xchg
cmpsl
jge
imul
cli
sti
inc
adc
cmp
std
fimull
jno
repnz
jle
jbe
es
mov
and
and
mov
pushl
ret
shll
add
scas
push
lret
aad
jbe
lea
push
cmp
xor
aam
fnstenv
imul
popw
cld
cmp
decl
cmp
popa
pop
aam
mov
and
in
jae
push
inc
mov
cli
mov
into
mov
in
cmp
out
bound
jne
xchg
dec
lods
sahf
mov
stos
jecxz
fistl
mov
mov
push
vcvtps2pd
or
hlt
add
dec
mov
loop
mov
ficoml
cmp
xchg
pop
popf
lcall
add
outsb
push
and
adc
enter
imul
mov
in
je
loop
inc
or
mov
cmp
inc
shll
sbb
sub
ljmp
mov
hlt
mov
iret
dec
dec
xchg
sbb
imul
aas
mov
xchg
add
inc
and
cmpsl
or
in
nop
sbb
out
data16
jae
jnp
jns
out
push
mov
jnp
push
mov
aam
call
hlt
aam
call
clc
psubusb
inc
or
out
fwait
xchg
lret
mov
pop
ror
pop
add
mov
test
sub
mov
sbbl
pop
fwait
movsb
out
gs
push
mov
incl
in
adc
pop
nop
adcb
ret
shrl
add
adc
je
inc
mov
cmp
daa
xchg
stos
add
cmp
in
shr
lods
push
adc
or
outsl
cmpsb
xorl
or
pusha
and
js
mov
push
dec
leave
inc
xchg
fadd
inc
outsl
push
sbb
mov
cmpsl
mov
cmp
cli
fs
mov
rcll
fldenv
mov
fnstcw
jmp
lea
scas
cwtl
jae
and
repz
jp
gs
mov
mov
rorl
xchg
call
adc
cwtl
mov
xchg
out
xchg
jb
mov
je
arpl
adcb
mov
nop
std
hlt
mov
out
xorl
mov
es
and
and
mov
pop
sbb
jb
fstp
dec
push
adc
in
mov
inc
loopne
push
push
mov
xor
pop
xchg
ret
sbb
sbbb
leave
cmpb
sahf
stos
stc
mov
mov
movsb
adc
jg
xor
pop
jge
scas
and
mov
pop
adc
dec
xchg
test
jge
push
test
push
pusha
ljmp
scas
add
inc
dec
arpl
adcb
pop
sbb
mov
dec
xchg
sbb
inc
xchg
push
mov
jle
dec
cmpsl
mov
lods
pop
subl
mov
push
sub
mov
aad
mov
push
mov
ja
pop
push
nop
xor
frstor
aam
sub
stos
or
sarb
cmp
cs
addr16
adc
stos
test
mov
adc
lock
loope
js
inc
loop
scas
cmp
sub
rcr
xor
shll
push
orb
jns
lods
pop
test
push
dec
mov
fcmovbe
mov
cmc
shlb
inc
scas
repnz
adcl
jne
adc
dec
lret
push
mov
outsl
lcall
icebp
js
iret
lret
mov
test
push
insb
xor
push
mov
ror
fimuls
jae
gs
stos
das
dec
test
and
dec
fistpl
lds
lret
xlat
addr16
jbe
out
and
clc
je
gs
ds
jbe
mov
jns
andb
adc
imul
shll
jg
cmc
xchg
test
lods
xor
sub
adc
pop
cmp
cmp
cmpsl
lret
xor
or
call
fwait
pushf
inc
outsl
push
ret
fistpll
mov
pop
mov
cmp
inc
mov
push
xchg
mov
and
repnz
leave
test
subl
jl
rorl
andl
insb
cmp
fildl
mov
arpl
add
mov
xor
lea
jno
dec
divl
les
popa
xchg
mov
xchg
sbb
or
or
insl
divl
sti
cmp
xor
inc
cltd
addr16
sbb
sub
cltd
lar
fwait
ret
jl
outsb
stos
pop
inc
xchg
xchg
xchg
js
test
aaa
stc
fcompp
mov
or
and
mov
psubusb
jae
sub
mov
inc
lahf
jo
xor
fnstenv
inc
xchg
xchg
dec
enter
mov
cmp
cmp
inc
mov
adc
fsubrs
sub
in
bswap
mov
mov
lret
push
ljmp
push
movsl
and
mov
add
cmc
hlt
pusha
mov
test
sbb
stos
cli
jmp
cmp
and
mov
icebp
cmp
loope
mov
add
ficoml
sahf
cli
mov
loop
repz
clc
cmp
jb
mov
or
adc
xor
or
jbe
push
dec
lret
sahf
push
in
shrl
mov
dec
clc
outsl
ja
mov
lods
clc
es
sbb
sbb
js
sub
call
scas
inc
arpl
xchg
mov
adc
mov
aas
mov
out
sarb
lods
pop
mov
adc
cmc
xchg
pop
aaa
faddl
dec
xor
addr16
or
movsl
jmp
scas
mov
pop
xchg
lds
cmp
ja
xchg
adc
cmp
repz
jae
sbb
push
and
inc
stos
jge
pop
dec
fs
sbb
cmc
ja
adc
sbb
arpl
jge
inc
dec
jno
pop
xor
mov
xchg
sub
daa
jmp
js
push
cmpsl
mov
dec
xchg
in
in
in
addl
push
cli
je
bound
call
lock
shr
jne
cli
mov
cltd
xor
xor
int3
cmc
xchg
sbb
pushf
scas
mov
in
imul
push
lds
cs
arpl
outsl
dec
in
out
popf
pop
cs
or
and
popa
cld
aam
lahf
lock
lea
mov
add
and
cmpsb
aad
mov
mov
sbb
dec
stos
pushf
jo
imul
mov
hlt
rorl
mov
lea
and
scas
add
arpl
xor
outsl
xchg
jmp
dec
dec
dec
std
jmp
sub
mov
inc
mov
daa
xchg
xor
pop
sub
adc
inc
and
sti
sbb
ljmp
mov
mov
fwait
sarl
cli
ret
jo
push
lret
sbb
add
lcall
icebp
jae
int3
sub
addb
in
inc
stos
popf
out
stos
repz
bound
sbb
dec
sub
xchg
mov
mov
mov
cmp
xor
cs
mov
mov
pop
pushf
mov
out
les
xchg
lret
lds
pop
pop
push
jmp
cli
sti
stos
fistl
movsb
jl
adc
jo
imul
test
das
jb
dec
mov
jnp,pn
or
mov
jl
jae
adc
insl
or
add
jg
movsb
shl
sbb
sti
inc
cmp
mov
movsl
push
in
xor
mov
xorl
out
sarl
jge
sub
inc
aas
adc
mov
inc
xchg
xchg
mov
insl
sbb
push
movsb
pop
and
pop
jae
sbb
xlat
push
aad
cmp
xchg
sub
scas
mov
or
xchg
out
sbb
sbb
lret
mov
lret
inc
fsubs
mov
imul
xchg
or
rorl
negl
fs
inc
mov
pop
sbb
push
ret
ret
iret
push
dec
pusha
add
into
jns
xchg
jp
orb
mov
xchg
xlat
stos
add
cs
repz
outsl
int
sub
mov
ret
sub
imul
ror
xor
mov
aas
xchg
push
push
shl
sbb
xor
dec
cmp
out
jmp
fs
aaa
inc
mov
outsb
push
mul
inc
cs
jb
xchg
mov
xor
mov
test
repnz
gs
decb
inc
xor
xchg
mov
faddl
push
push
or
mov
and
cs
popf
cmpsl
adcb
call
xchg
test
js
jae
sbb
inc
xlat
sub
imul
mov
adc
pop
push
lret
xchg
std
cli
jb
out
xchg
mov
lock
jecxz
stc
push
fwait
jo
ja
std
faddl
and
pop
xlat
jmp
sub
add
xchg
ljmp
jmp
add
fmull
xchg
adc
movsb
jg
or
sahf
std
adc
xchg
aas
setg
fwait
cmp
cltd
mov
add
rolb
out
test
pop
or
push
sbb
scas
mov
mov
push
mov
popa
push
cmpsl
sbb
lods
pop
jne
jl
mov
push
mov
xor
xchg
inc
mov
sub
enter
lcall
and
outsl
push
and
int3
fs
outsb
stc
pop
dec
sub
push
xor
fcomps
into
cmp
mov
xchg
popa
sub
xor
call
push
outsb
mov
out
mov
insb
lds
mov
sbb
pop
pop
aad
pop
ljmp
cmp
adc
sub
lock
push
pop
push
aas
shrb
pop
in
sbb
fucomip
jae
sub
test
sub
loopne
stc
adc
iret
mov
ja
mov
paddq
cmp
shll
jne
pop
lret
stos
xor
xchg
lock
sub
outsl
push
pop
mov
pop
xor
xchg
mov
jecxz
outsl
insb
fsubl
into
orb
and
inc
and
test
inc
mov
fstpl
iret
int
dec
or
mov
lods
sub
inc
cmp
mov
push
jne
cmp
js
ss
or
repnz
fcomps
push
mov
mov
sub
sbb
sub
push
cmpsl
shlb
and
insl
js
xchg
insb
dec
jo
in
subb
jg
les
push
dec
add
push
daa
adc
or
mov
insb
sub
pop
sbb
or
xchg
pushf
cmp
jle
insb
sbb
loope
sub
cmpl
sub
pusha
out
dec
sbb
mov
shrl
jmp
xchg
int
fcoml
lea
sbbl
pop
push
pop
stos
mov
dec
add
adcl
pop
push
pop
sub
test
stos
dec
int3
pop
jbe
ror
test
lock
testb
push
hlt
jp
lret
push
sbb
xor
sub
jmp
mov
mov
xor
pop
pop
or
sbb
cmpsl
and
push
xchg
sbb
das
pop
out
mov
out
push
mov
insl
jne
xor
enter
imul
sub
dec
mov
xchg
add
sub
cmpsb
mov
inc
mov
xor
xor
jb
push
out
push
fsubl
xchg
sti
xor
aas
mov
mov
adc
dec
lock
out
sar
divl
mov
sub
lret
inc
aad
lret
mov
sbb
stc
jmp
pop
and
clc
sahf
lahf
xchg
stos
mov
cmp
dec
je
mov
sbb
stc
sub
hlt
jge
daa
inc
inc
adc
jb
adc
jnp
or
xor
jns
cmpsb
idivl
movsl
mov
scas
repz
cmc
or
or
and
inc
aam
ror
flds
inc
xchg
nop
adc
addr16
or
dec
xor
jo
test
icebp
push
out
aam
jmp
les
lcall
pop
aaa
add
pushf
sub
sarb
je
mov
insl
fwait
test
cwtl
xor
test
xor
or
ljmp
jns
inc
lds
mov
pushf
pop
adc
sbb
insb
push
xor
add
xchg
mov
add
data16
jns
stos
push
xchg
push
outsl
loopne
sbb
inc
lea
test
adc
mov
fldcw
cs
sub
vlddqu
test
pusha
push
std
sahf
xchg
arpl
mov
add
into
cmpb
dec
call
pushf
xchg
sub
mov
sub
adc
xor
ret
jne
frndint
sbb
pop
push
mov
xor
in
mov
pop
jo
pusha
cs
cld
mov
imul
dec
iret
add
pop
lahf
lds
pop
jg
idiv
mov
scas
dec
int3
cmc
pop
cli
push
and
test
inc
in
add
xchg
mov
outsl
sti
add
in
mov
repz
mov
clc
out
lret
in
mov
fsubr
sub
ficompl
cmpsb
dec
and
adc
jmp
push
inc
movsl
in
inc
cmp
push
jg
sbb
dec
push
iret
sub
outsl
pop
dec
frstor
enter
lods
mov
dec
and
int
subb
loopne
push
xchg
pop
ljmp
mov
cmp
dec
cmpsb
mov
inc
stc
gs
orl
inc
mov
pop
mov
inc
cmp
mov
jg
popf
mov
cmc
and
sub
xor
mov
enter
adc
sbb
loopne
add
add
add
push
dec
cltd
popa
mov
in
xor
sub
das
xchg
in
xchg
test
push
shl
js
and
pusha
lahf
call
nop
test
dec
rolb
pop
dec
aad
xchg
sbb
xchg
xor
pop
daa
sub
popa
cmp
pop
outsl
pop
call
or
cld
mov
jecxz
hlt
mov
repnz
out
imul
daa
ret
cwtl
aas
sbbb
fwait
notl
lds
jl
and
sti
jecxz
inc
aad
cld
pop
xchg
mov
or
out
sub
mov
inc
push
and
std
das
xor
ljmp
stos
subl
clc
lock
inc
loopne
sbb
out
push
outsl
pop
mov
add
fimull
mov
sbb
dec
or
add
loop
in
sub
sbb
xlat
jle
inc
mov
sbb
stos
pop
es
lock
mov
push
mov
jmp
xchg
cmp
stos
or
dec
cmp
cmpsb
fsin
pop
sbb
shrl
add
and
ret
xchg
sbb
and
lret
sub
adc
repnz
daa
fnclex
xchg
jnp
dec
data16
xchg
cmp
stos
adc
xchg
add
dec
xor
outsb
xchg
clc
xchg
cld
dec
mov
sbb
in
test
or
pop
test
enter
jbe
xor
xchg
xor
enter
loop
adc
outsl
xlat
jne
or
or
cmp
push
mov
call
mov
enter
movsl
pop
cvtps2pd
xchg
mov
lds
enter
pop
push
jns
rclb
test
mov
sysexit
add
loope
add
addr16
xor
jns
ret
xchg
sub
xor
je
repnz
mov
filds
in
inc
push
sarb
es
mov
mov
or
lret
dec
mov
in
cmc
and
inc
ss
pop
test
std
dec
loopne
lret
mov
push
xor
xchg
mov
xchg
xchg
das
or
mov
enter
inc
inc
sbb
faddp
sbb
fists
leave
movsl
incb
and
sub
cltd
sarl
sbb
or
adc
pop
jns
cmp
dec
jge
xchg
sti
xlat
lock
aas
and
stos
cmp
mov
dec
pop
int3
out
fwait
and
jmp
adc
sub
xchg
inc
cld
mov
push
dec
mov
add
std
sbb
imul
push
push
lock
cltd
xor
stos
or
adc
xchg
jg
inc
mov
mov
fs
iret
ds
pop
daa
jns
xchg
fs
loope
add
shll
das
push
mov
das
es
orl
in
cmp
and
dec
xlat
mov
xchg
gs
and
lret
pop
cmc
lock
js
add
js
leave
jg
and
lds
sahf
sti
jmp
je
cmp
aam
fmuls
shl
xchg
add
pop
fs
rcll
test
lret
imul
ss
hlt
dec
cs
xchg
das
dec
ljmp
cli
lret
add
push
jbe
shrl
rolb
push
addr16
adc
out
add
add
add
inc
pusha
icebp
pop
cmpb
lahf
push
mov
cmp
pop
mov
pop
outsb
icebp
pop
mov
out
arpl
mov
arpl
xor
test
sti
repnz
or
nopl
iret
push
movl
lahf
scas
fldl
fildll
test
xchg
mov
sbbb
lds
scas
fsubrs
aam
cli
push
push
pushf
pop
mov
movsl
adc
and
movsb
idivb
xlat
imul
dec
inc
sti
jecxz
movsb
int3
push
and
test
scas
iret
rolb
add
xor
pop
xchg
ss
addl
push
lret
dec
cwtl
push
movsb
jbe
fdivs
pop
test
cwtl
dec
out
jno
mov
loop
mov
or
nop
shrb
jbe
sub
adc
mov
sub
stos
pop
push
pop
gs
dec
pop
cld
fisubs
cmp
fistps
and
jno
jo
ret
pop
dec
pop
cmc
xor
leave
push
xor
xchg
mov
adc
mov
and
jg
hlt
stc
stc
rorl
cmp
inc
sub
lds
dec
hlt
int
fidivrl
not
loop
aas
dec
mov
bound
pop
jecxz
lahf
std
fcomp
repz
or
mov
aas
push
cmpl
sbb
sbbl
cmpsl
jno
xor
dec
jmp
dec
rol
test
arpl
push
test
push
jo
jmp
je
out
jmp
push
mov
fisttps
adc
mov
je
std
xlat
mov
sbb
dec
or
mov
negb
pusha
pop
ret
cmp
xchg
outsl
push
je
mov
inc
imul
scas
and
pop
add
mov
clc
push
ror
adc
loope
cltd
out
xchg
push
push
sbb
dec
call
mov
repz
daa
ret
jne
scas
mov
xor
pop
es
inc
add
cmp
je
fs
in
pop
add
add
imul
inc
sub
push
lods
dec
adc
mov
popa
ss
pop
pop
xor
mov
lret
push
aad
cltd
maxps
rcl
jecxz
jge
add
mov
jg
mov
push
jl
scas
mov
push
fnsave
or
int3
add
add
mov
aaa
aaa
cmc
mov
cmp
dec
adc
mov
adc
frstor
icebp
inc
pusha
pop
int
jbe
xlat
fiadds
icebp
subb
in
sbb
cwtl
arpl
mov
sbb
xor
cmpsl
inc
adc
add
in
and
or
mov
dec
sahf
add
jnp
dec
out
icebp
shlb
enter
lcall
cld
cmc
je
into
inc
dec
mov
sbb
jmp
jmp
cld
outsl
push
fsubr
jg
or
or
pop
mov
xor
insb
push
stos
jno
shrl
jp
jl
add
mov
xor
cmp
inc
mov
fsubrl
mov
aad
sbb
push
cmpsl
loop
xchg
inc
pop
push
jle
enter
inc
movsb
scas
mov
les
testl
cmpsb
sbb
sub
add
xor
mov
jne
sarl
outsb
lods
sbb
push
pop
lcall
pop
inc
std
outsl
insl
in
stos
inc
das
movsl
es
pop
jl
ror
push
pushl
js
xor
xor
js
add
mov
sbb
in
ds
jnp
sbb
ret
mov
sbb
mov
mov
push
ljmp
jmp
jp
adc
mov
push
jns
js
mov
add
add
cmp
hlt
pop
jmp
xor
xchg
cmp
mov
lahf
fmull
jnp
jmp
scas
dec
push
sahf
js
mov
insl
xor
push
jne
add
pop
mov
lock
cs
loop
cmp
sti
test
rcl
mov
enter
mov
sahf
pop
inc
jns
cmpsl
mov
js
jg
push
cld
sbb
pusha
inc
xchg
adc
and
cmpsb
clc
into
data16
jl
push
mov
ret
add
jge,pn
pop
ret
push
add
pop
sbb
cmpsb
xchg
sub
ss
pop
push
std
push
adc
xchg
fimull
add
lcall
movsl
or
stos
sub
cwtl
push
cmp
xor
and
pop
ljmp
mov
mov
sub
pop
stc
leave
or
jnp
and
movsb
lahf
or
je
fcmovb
stos
cmp
movsl
mov
fsub
stos
scas
bound
lds
pop
sub
mov
out
jmp
adc
mov
jno
or
dec
xor
mov
sub
aam
sub
rcrl
xor
mov
sub
aad
test
mov
test
push
mov
xor
sub
fidivrl
in
loop
pusha
or
add
add
jns
xchg
int
jle
ret
rorb
test
push
sub
scas
outsl
mov
out
jo
inc
sahf
rcll
dec
subl
aam
jp
and
push
dec
xor
into
cld
loope
fimuls
addb
sub
fs
add
xchg
mov
or
xchg
or
sub
shrl
popa
mov
test
into
inc
mov
jbe
insb
into
sub
loope
call
popa
imul
sub
or
push
or
test
shlb
out
mulb
adc
mov
ds
mov
jle
jecxz
in
mov
jb
je
inc
xchg
or
leave
jae
and
into
inc
lods
cmp
jecxz
js
push
in
bound
rcl
mov
sbb
inc
dec
repz
add
je
iret
xor
fwait
pop
jp
jne
jmp
fsts
and
pop
in
push
dec
and
dec
mov
test
sbb
es
in
hlt
sahf
popl
jb
cmp
dec
inc
ret
push
hlt
sahf
mov
fcom
xchg
jecxz
mov
sub
adc
lret
push
jne
ret
repnz
push
iret
xchg
fbld
and
sub
mov
and
or
cli
fldcw
shl
fildl
xor
sbb
int
rclb
cmp
shlb
pop
scas
dec
arpl
sbb
lods
adc
arpl
sub
daa
in
lock
adc
shlb
pushf
pop
dec
loope
xchg
mov
int3
mov
pushf
dec
loop
lahf
dec
add
mov
addr16
jo
and
mov
popa
ret
repnz
jge
or
pop
xchg
sti
mov
sub
dec
inc
xor
adc
or
mov
inc
lock
hlt
mov
fisubrs
outsb
cmc
rcr
sbb
and
rol
aas
or
ret
xchg
ficompl
call
inc
outsb
outsl
xchg
sahf
xor
test
popa
add
pop
push
dec
ror
andb
int
dec
adc
pop
push
mov
in
das
jle
cs
push
cmp
jg
add
pop
gs
mov
ds
gs
lock
out
shrb
js
shll
in
pop
push
in
cmpsb
pop
lahf
daa
lods
mov
loope
scas
xchg
ds
xchg
add
xchg
add
mov
lods
jl
jmp
in
pushf
hlt
lds
jb
into
arpl
mov
push
pushl
push
and
cltd
pushf
cmpb
mov
cld
sub
or
mov
xchg
xor
pusha
nop
dec
mov
cmp
adc
sub
mov
cltd
cwtl
inc
rcr
cwtl
add
adc
js
adc
jo
fstps
sub
mov
aaa
and
jnp
std
inc
test
dec
loope
mov
std
clc
jo
inc
das
loope
mov
xor
call
cmp
inc
insl
mov
mov
test
fwait
mov
and
popa
andl
mov
dec
scas
adc
addr16
out
or
lds
pop
dec
push
enter
imul
fldcw
sbb
enter
aas
sti
inc
xchg
mov
inc
and
sub
mov
xor
icebp
add
push
stos
pop
jae
rcrl
xchg
je
push
ljmp
sub
add
pop
lods
inc
lahf
stos
jnp
mov
fmull
or
or
divl
and
cmp
mov
mov
mov
jg
int
pop
and
jl
fwait
movl
pop
icebp
loopne
dec
mov
fs
lds
adc
sti
xor
flds
fs
stc
push
lret
hlt
lea
adc
in
lds
sub
test
mov
sub
sub
or
cs
popf
std
inc
scas
pop
sbbl
mov
mov
aad
inc
or
je
push
mov
repz
ret
fsubrs
mov
sub
stos
lret
or
dec
mov
stc
mov
out
adc
pop
xor
add
movsl
icebp
clc
xor
adc
fdivs
cltd
outsl
jne
mov
lret
add
pop
mov
mov
rol
pop
in
icebp
lods
and
not
scas
hlt
gs
and
dec
xchg
mov
cwtl
pop
sub
push
fwait
mov
lcall
xchg
push
ja
jp
mov
scas
xchg
enter
or
jl
push
add
pop
jne
jo
repnz
mov
jl
sbb
inc
inc
push
sti
lea
jb
loope
popf
test
push
pop
and
stos
mov
jl
popf
or
int
mov
ret
jecxz,pn
ror
testb
pop
fisttps
jecxz
mov
aaa
aas
mov
or
jb
mov
cmp
mov
shl
mov
pop
mov
sub
imul
dec
or
mov
sbb
addb
popf
push
jg
jecxz
sub
mov
sbb
rcrl
sbb
fs
cmp
aam
out
leave
aas
int
loopne
stos
aam
mov
stc
popf
lahf
sbb
js
adc
cmp
leave
pusha
jae
sub
pop
dec
and
int3
xor
stos
xchg
repz
gs
xchg
mov
sub
pop
mov
stc
aas
popf
fwait
dec
loopne
bound
mov
sti
pop
pop
pop
pop
into
pop
stos
or
add
sub
add
mov
xor
test
jne
iret
xchg
fsubrp
cli
mov
adc
imul
lret
jnp
cmpsb
pop
xor
negl
imul
insl
pop
push
pop
adc
xchg
mov
scas
xor
std
pop
imul
pop
shrd
cmpl
xchg
pop
pusha
lcall
movsl
jns
jo
lds
movsb
roll
push
mov
out
ja
insb
lods
fwait
mov
jmp
jecxz
insb
je
push
mov
xchg
lds
jns
mov
leave
cwtl
movsb
mov
insb
mov
cli
out
sub
cli
neg
mov
cwtl
xchg
cmpsl
inc
cmp
adcl
mov
push
xchg
cmp
leave
fdivrl
mov
data16
mov
stos
inc
mov
mov
in
mov
insb
mov
fwait
in
lret
dec
sub
sbb
mov
inc
daa
mov
pop
push
mov
mov
jl
mov
ds
out
jne
pop
rolb
xor
test
xor
sbb
jb
mov
in
xchg
ficomps
lea
into
mov
sub
js
mov
decl
js
pop
scas
inc
cltd
stc
negl
mov
les
mov
sti
fstp
enter
popf
sti
push
aaa
fisttps
shrb
bound
shll
fsubp
mov
jns
fnsave
into
mov
fidivrs
pop
clc
fdivp
out
sub
mov
push
shl
xor
leave
inc
jge
out
xchg
fcoms
in
lcall
rcrl
call
lods
int
insl
jmp
mov
cltd
xchg
pop
bound
add
clc
and
pop
cmpl
sub
imul
inc
pop
xchg
int3
jmp
and
jle
outsl
jo
repz
pop
cmp
popf
jg
xor
push
daa
xchg
inc
pop
or
test
mov
in
pop
push
mov
jae
adc
pushf
sbb
cmpsl
mov
mov
cmp
icebp
mov
mov
mov
pop
push
lock
and
loopne
out
jns
adc
enter
bound
sub
insl
jne
adcl
mov
cmp
faddl
push
jmp
xchg
popf
loopne
je
cmp
mov
jecxz
rol
mov
fisttpll
out
dec
pop
aaa
xchg
cmp
mov
mov
and
dec
imul
jns
and
mov
and
js
fwait
sub
adc
mov
fs
or
push
outsb
pusha
jl
and
addl
jle
pop
popf
enter
and
in
add
add
sub
in
push
inc
stos
stos
pop
cltd
jge
call
sub
xchg
xlat
xchg
dec
inc
fdivrl
push
cmpsb
xor
xor
sbb
push
pop
or
aad
mov
call
or
lea
stos
xchg
pop
xlat
fisubs
stos
addr16
cmp
jmp
jle
ljmp
or
arpl
xchg
pop
pushf
out
sbb
repz
xchg
xor
lea
jno
sbb
cmp
ljmp
dec
add
int3
and
add
mov
add
cs
push
fadds
mov
jecxz
mov
js
cmp
push
leave
out
mov
test
xor
cs
in
sub
lock
stos
ljmp
xchg
push
inc
imull
scas
mov
mov
lcall
lods
pop
cwtl
jnp
xor
imul
jmp
clc
pop
push
aad
repz
pop
imul
cmp
test
adc
xchg
movsb
les
jbe
das
ja
popa
cmpsl
aam
sbb
inc
jns
mov
mov
dec
es
push
xchg
es
mov
mov
add
xchg
in
sbb
mov
xor
cmpsl
in
xchg
sub
gs
rorl
insb
in
ret
daa
or
push
mov
push
fs
out
inc
jp
aas
sub
jb
popa
pop
leave
dec
pop
push
mov
pop
or
and
jne
lcall
add
fwait
push
in
imul
pop
adc
sub
mov
sbb
ja
loopne
mov
pop
adcb
cmp
repnz
jmp
in
ja
xor
es
aad
inc
out
inc
scas
fwait
mov
sbb
mov
outsl
repz
int3
loop
sub
mov
cmp
in
enter
adc
and
add
mov
add
in
ret
aas
outsb
fidivl
in
cmp
sub
inc
xor
pop
push
mov
arpl
inc
loop
test
mov
jl
jns
pop
pusha
andl
push
mov
mov
popa
test
xor
inc
loope
lock
lock
inc
mov
cmp
and
mov
idivb
repz
xlat
cwtl
inc
cmpsl
xor
icebp
or
cltd
jno
xor
mov
adc
je
jle
fisttps
jmp
or
lret
popf
mov
push
inc
test
push
and
mov
mov
js
mov
jns
lret
scas
xchg
mov
icebp
pop
jg
cltd
xchg
mov
das
shrl
push
ja
in
sbb
fcoms
mov
lcall
out
mov
out
lret
loop
jle
adc
lcall
pusha
js
test
sbb
mov
lcall
mov
mov
das
adc
rol
loopne
sub
je
das
faddl
icebp
fsubrl
mov
in
testl
add
jecxz
fwait
xor
ja
testb
gs
movl
in
mov
in
imul
movsl
xor
stos
mov
insb
push
cmpsl
and
insl
pop
dec
hlt
pop
sub
pop
orb
inc
add
xlat
xchg
push
sarb
frstor
jbe
ficoml
adc
cmp
cmp
add
cmpsb
ret
xor
xchg
test
xor
push
cmp
insb
mov
cmp
movsb
insl
loopne
pop
lods
mov
movb
faddl
aad
out
jae
ja
cwtl
jnp
subb
imul
push
cmpsl
and
pop
movl
pop
int
cmpsb
mov
neg
js
push
pusha
ret
sbb
je
mov
pop
or
pusha
push
or
cmpsl
sbb
js
nop
sub
inc
lahf
xor
std
scas
inc
xor
hlt
ret
subb
loopnew
add
xor
xchg
cmp
push
mov
ret
fidivs
push
add
clc
scas
or
ja
inc
std
dec
jns
popa
mov
mov
lock
fcmovnbe
mov
and
xchg
inc
mov
xchg
inc
ja
scas
rcl
cltd
stos
cmp
xor
stos
pxor
fcoml
fadd
or
sub
fsincos
mov
pusha
dec
popl
orb
xor
xchg
xor
inc
mov
cmp
xor
adc
push
mul
xchg
cmpsl
jp
cmp
xor
push
int3
stos
test
aaa
test
lods
pusha
jns
jo
or
fimull
push
adc
jp
ret
cmp
jno
sbb
or
push
rolb
test
imull
jne
and
or
pop
lods
in
aam
mov
mov
mov
sbb
xor
inc
test
insb
inc
cmpsb
icebp
dec
popf
les
and
inc
in
cmp
mov
pop
cwtl
test
sub
pop
push
and
leave
aad
pop
nop
and
cli
inc
mov
lea
mov
jns
rcrb
cmpsb
mov
std
call
aad
shlb
mov
dec
cmpsb
xchg
cs
push
adc
sbb
lds
xor
mov
imul
scas
mov
popa
add
ja
cld
pop
xchg
in
cli
mov
push
inc
xor
in
push
dec
sub
js
xor
sub
push
mov
mov
loope
insb
jle
dec
push
rclb
cwtl
inc
inc
push
je
dec
mov
popf
enter
por
stos
fildll
imul
pushf
rep
js
adc
dec
xor
pop
jbe
cmp
popa
mov
adc
xchg
mov
cwtl
inc
out
stos
add
and
mov
mov
pusha
aas
popa
xchg
ret
mov
fistpll
or
jle
lea
imul
data16
stos
xor
cli
or
push
lock
and
fisubs
xchg
inc
sarb
outsl
dec
add
push
adc
call
aad
mov
mov
mov
scas
mov
pop
cmp
xor
xacquire
adc
mov
jb
xchg
mov
inc
out
in
xchg
idivb
scas
jne
mov
push
cmpsl
push
dec
pop
mov
je
repz
lret
inc
mov
js
sbbl
fldl
call
lret
pop
add
test
out
lret
js
js
stos
ss
xchg
psubw
pop
jns
sbb
and
xor
jno
sarl
xor
je
add
pop
dec
cld
push
sub
pop
sbbl
or
fidivrl
dec
pop
dec
jp
push
scas
pusha
test
lods
ljmp
insb
jg
and
sbb
mov
lods
and
imul
andl
cli
cmc
mov
sbb
push
fs
push
fstl
cwtl
mov
push
sbb
dec
inc
mov
add
cmp
ljmp
sar
sarl
xchg
aad
jno
sub
dec
jb
outsl
adc
adcl
nop
jge
xchg
dec
sub
int
jg
in
sub
push
xor
adc
mov
jge
cmovs
stos
lods
outsl
test
sbb
fidivrl
xor
mov
inc
jae
mov
fwait
inc
jno
pop
mov
in
cmpsb
mov
cmpsl
push
lcall
inc
fiaddl
and
cli
mov
loopne
inc
pop
push
xchg
mov
fucomp
mov
xor
in
lea
sub
jge
jle
out
std
in
icebp
in
or
shlb
ljmp
and
ret
sbb
sub
scas
pop
dec
inc
and
lret
addr16
jp
icebp
scas
adc
lret
cli
sub
or
cwtl
fbld
or
clc
fnsave
jne,pt
lahf
and
mov
rclb
mov
fucomi
clc
jge
sbb
sub
ret
xor
sbbb
lret
and
ret
pop
ja
mov
lds
in
aad
ret
sub
add
in
and
cld
sub
cld
mov
mov
xor
popf
lods
data16
outsl
adc
fs
cmp
cmp
adc
push
arpl
xor
add
pusha
nop
inc
mov
or
jbe
pop
xor
mov
mov
sub
push
fisubs
pop
inc
pushf
idivl
sbb
dec
jbe
adc
inc
out
cmp
sub
fwait
fcomps
sbb
xchg
lret
and
in
into
sarb
dec
iret
mov
test
pop
js
daa
pop
jge
js
imul
mov
adc
popf
cli
fildll
std
rolb
push
outsb
std
jne
inc
mov
add
pop
repz
mov
imul
dec
mov
mov
daa
inc
out
inc
push
mov
xor
cld
cmp
aam
into
and
imul
std
andb
gs
adc
push
call
mov
mov
cmp
movsl
dec
ljmp
int
cs
into
insb
dec
push
sub
fbld
inc
lods
mov
sub
cmpsl
mov
mov
fcoml
int
bound
sbb
push
out
add
inc
ja
popf
clc
jg
jg
push
ds
mov
mov
leave
or
and
aas
or
or
jle
stc
gs
sub
mov
mov
or
movsb
pop
aaa
cmpsb
icebp
xchg
pop
push
jno
pop
inc
add
out
and
mul
dec
pop
and
fmull
or
add
ret
mov
loop
rorb
and
adc
adc
icebp
div
sbb
or
aaa
lret
es
andl
fimull
xchg
stc
sti
dec
cmpsl
leave
test
or
xchg
sub
je,pt
lds
mov
mov
adc
push
mov
ret
xor
repz
bound
push
test
nop
push
es
cmp
hlt
into
or
jae
adc
and
xchg
push
xor
fisubrl
rcrl
pusha
pop
packsswb
adc
pusha
push
stc
mov
scas
xor
jno
pop
outsb
incl
jp
mov
inc
xlat
mov
repz
jnp
cltd
jb
sub
mov
cmp
fnsave
pop
sbb
pop
adc
xchg
std
cmp
xor
lods
xor
sub
clc
sbb
mov
cmp
pop
pop
add
lret
sahf
test
stos
mov
aaa
jne
lods
lahf
cld
jge
push
mov
mov
dec
subl
insl
js
mov
xor
pusha
popa
and
sub
and
repz
inc
out
jmp
fwait
push
add
in
and
and
inc
icebp
cld
mov
add
pusha
mov
mov
sub
and
test
sahf
pop
sbb
jecxz
sahf
xchg
xor
jo,pn
lock
cmp
mull
xchg
push
mov
pushf
call
xchg
push
outsb
idivl
jle
lds
hlt
sub
test
xor
sbb
mov
dec
in
or
push
and
lds
ror
js
mov
add
das
aam
fistl
fstps
aaa
ret
int3
push
mov
cmpsb
aaa
ret
shlb
push
inc
cmp
sbb
fnstenv
adc
mov
push
pop
xchg
pop
push
fwait
jge
pop
xlat
xchg
and
dec
filds
cmpsb
cmp
inc
push
fistl
cltd
bound
mov
imul
lods
sub
add
lea
pop
pop
lea
repnz
into
mov
lea
frstor
mov
dec
jns
mov
pop
imul
mov
iret
and
test
jae
incb
push
clc
cmpsb
and
leave
enter
out
vzeroall
ret
mull
pushf
ljmp
push
jg
das
xor
mov
idiv
popa
mov
cmp
push
incl
ret
out
adc
sbb
scas
jbe
sub
and
adc
cmc
daa
daa
orb
nop
sbb
or
push
push
xor
jb
cmp
pop
xor
dec
adc
jae
cltd
out
mov
xor
xlat
or
mov
mov
lods
and
clc
mov
mov
mov
mov
test
mov
dec
bound
loopne
scas
dec
jle
or
dec
fstpt
cmpl
pop
data16
jbe
and
imul
jno
fstpt
and
das
inc
je
xchg
jbe
mov
lods
fstl
stos
outsb
leave
lret
push
lret
adc
push
push
loop
and
test
push
adc
xchg
mov
cmpsl
shrb
sub
mov
imul
dec
push
lret
lcall
and
daa
pusha
cmp
or
xorl
mov
in
mov
test
xchg
or
push
dec
test
mov
jo
call
rclb
ljmp
sbb
mov
xchg
adc
pop
fwait
and
leave
fisubrs
xchg
fucomp
lods
scas
outsb
movsl
xor
mov
adc
push
adc
adc
xor
gs
fildl
cmpsb
stc
adcb
clc
xchg
jne
out
les
adc
imul
fs
mov
add
add
xchg
sbbb
mov
adc
push
xchg
jbe
sahf
out
in
sbb
mov
inc
lods
push
pop
xor
fsubrl
fcompl
scas
mov
mov
mov
pop
mov
xor
and
pushf
ud0
push
adc
lret
mov
lea
lcall
cltd
xchg
add
pop
add
adc
xor
dec
xchg
mov
dec
imul
sti
add
cmc
inc
inc
in
cmp
push
add
ja
sub
cmpsl
je
or
jae
adc
mov
clc
dec
addl
or
loope
cmp
cmpsb
or
push
push
int3
fs
adc
push
js
mov
inc
call
jge
cmp
cmpsl
inc
mov
mov
add
stc
repz
ss
push
dec
dec
or
jl
pop
pop
insb
mov
add
sbb
popf
or
loop
lock
push
incl
out
push
popf
and
nop
mov
in
inc
mov
mov
leave
call
ds
mov
inc
push
fbld
outsl
fisubl
shlb
sahf
jno
xchg
sbb
ficomps
mov
jns
out
shrb
cmp
lods
push
lea
xchg
push
ret
xchg
and
and
mov
fs
sub
sarl
ffreep
mov
stc
adc
adc
lret
mov
xlat
adc
cld
and
mov
jb
out
test
and
sub
das
setae
enter
insb
shll
test
sbb
sahf
jne
adc
jno
outsl
jb
test
cli
clc
clc
xchg
enter
cmp
data16
jl
testl
pusha
and
std
push
mov
ss
je
sarb
jae
push
cli
mov
or
loopne
cmp
das
cmp
pop
lcall
aas
and
cmp
jb
shr
push
dec
fisubrl
mov
mov
std
xchg
pop
outsl
mov
jbe
sar
fdivs
mov
pop
push
loop
cmp
imul
xchg
and
mov
pop
adc
mov
sti
mov
daa
gs
add
loopne
outsb
or
ficoml
pop
sub
or
idivb
loop
mov
pop
call
pop
xor
inc
dec
rcll
jmp
and
stos
xchg
loopne
adc
mov
int
jae
adc
mov
aas
inc
int3
sub
sub
outsl
outsl
lods
int3
jl
or
xor
aam
aaa
xchg
dec
push
sahf
jp
push
es
js
sub
mov
xchg
dec
dec
add
mov
and
arpl
jbe
adcb
repz
andb
sub
stos
sahf
insl
inc
outsl
mov
ret
pop
imul
in
adc
push
push
insl
jno
in
lods
jmp
cmp
mov
leave
xchg
push
push
enter
or
xor
xchg
sbb
sarb
xchg
pusha
inc
test
in
sbb
inc
out
sbb
bound
jne
daa
ja
enter
adc
cltd
fdivrl
mov
pop
pop
outsb
es
stos
xlat
imul
sbb
xchg
test
and
xor
jmp
enter
out
in
sbb
xchg
or
mov
stos
sarb
inc
popa
outsl
lods
push
xor
push
pop
sub
sar
lods
add
ret
int
fildl
or
and
ds
or
or
or
je
jmp
aaa
push
adc
int3
fldl
mov
in
xor
fwait
and
xor
stos
pop
sbb
test
jg
out
cmp
sbb
push
sahf
pop
lahf
mov
repz
inc
push
pop
mov
loopne
adc
xor
addr16
das
sar
add
into
mov
fists
push
lret
xchg
hlt
sub
jge
das
or
dec
int
mov
push
cmp
lds
xchg
dec
pop
pop
adc
das
cli
add
out
and
cli
push
jo
lret
inc
es
es
sbb
cmp
jge
loope
mov
leave
outsl
cmp
mov
lret
xor
out
lret
je
xchg
cmpsb
test
mov
sbb
inc
in
cmp
mov
test
mov
cmp
out
dec
ds
add
fdivrs
xorb
outsl
mov
sti
mov
add
add
add
lock
inc
arpl
xchg
fs
pop
popf
pop
fdivr
push
sbb
or
pusha
lret
mov
add
or
xlat
or
mov
push
pop
sub
test
inc
xor
mov
test
mov
push
xchg
fsubl
add
popf
jmp
mul
iret
int3
test
lret
fsubl
fwait
jae
dec
or
mov
jb
aaa
mov
push
push
inc
dec
sub
adc
inc
sub
enter
ja
inc
adc
lods
or
jnp
dec
pop
aas
inc
jmp
into
fildl
in
inc
pusha
jae
popa
cmc
repz
dec
je
jmp
pop
adc
js
mov
in
nop
mov
shll
xor
fdivl
aad
xor
aaa
test
dec
dec
pushf
pop
hlt
lea
ljmp
push
outsb
dec
sahf
aam
mov
idivb
xor
adc
jecxz
sub
or
sub
mov
mov
dec
push
fadd
mov
mov
bound
xor
mov
dec
mov
jmp
jo
repnz
adcb
aad
pop
icebp
cli
and
jne
sbb
xchg
out
xor
pusha
pop
ret
inc
enter
lods
ror
inc
push
inc
pop
lcall
insb
mov
jne
sub
dec
inc
cmpsb
scas
cltd
xchg
adc
or
xchg
push
add
push
push
push
or
inc
outsl
stc
daa
or
outsb
push
inc
push
jmp
xor
nop
pop
pushf
subb
and
push
aaa
mov
daa
sub
es
or
adc
outsb
mov
cs
lea
adc
xchg
jge
xchg
outsl
into
xchg
ljmp
jae
adc
shll
xor
orb
fs
jno
mov
push
mov
jo
inc
xlat
push
packuswb
std
out
jle
pop
int
xchg
ds
sbb
fmuls
test
loop
dec
or
xchg
lret
jecxz
icebp
lds
xor
push
test
sub
js
dec
arpl
pop
add
loop
jg
int3
shrb
and
jno
push
insl
aas
mov
cmpsl
enter
push
or
pop
stos
lret
fprem
fmuls
mov
gs
jbe
scas
push
cmp
or
inc
jb
mov
mov
sti
xchg
inc
repnz
in
int
adc
fs
xchg
jbe
jp
add
push
mov
cmp
cmp
in
dec
repz
push
inc
pop
std
jle
xor
addr16
mov
dec
mov
xor
push
sbb
mov
dec
test
jae
shlb
and
dec
add
sbb
or
insb
push
pop
push
sub
aas
loope
cmp
pop
push
andl
lret
popf
and
daa
push
dec
jnp
sub
arpl
int
loop
cmp
mov
mov
mov
sub
or
xchg
sar
out
pop
xor
mov
sahf
cmovns
mov
jae
jns
jne
loopne
je
and
and
or
shlb
int3
sub
loopne
pop
mov
push
fsubrs
pminub
test
inc
pop
sub
aaa
out
push
push
fwait
dec
sti
pop
blcic
pop
test
hlt
sub
push
sub
xchg
xor
dec
imul
cli
inc
xor
sbb
mov
popa
ja
icebp
cmp
int3
int3
inc
cmp
sbb
jnp
das
adc
mov
jne
mov
data16
insb
andb
or
mov
jge
cltd
fcmovb
push
mov
popl
stos
push
jb
lds
and
mov
pop
cwtl
in
cmp
stos
ficoml
les
and
jmp
push
addr16
pop
mov
jnp
mov
adc
enter
or
xor
push
mov
stos
adc
and
shll
outsl
clc
xchg
push
sub
les
jae
xlat
lock
loope
nop
popf
cmpb
mov
fwait
pop
push
fistpl
mov
movl
shl
cmp
scas
lea
popa
mov
loop
ficompl
xor
xchg
je
pop
dec
in
ret
mov
xchg
stos
popf
cmpsl
jmp
pushf
sbb
jbe
cld
and
aad
nop
jns
lret
ret
cmc
in
ljmp
cmp
nop
jae
push
out
adc
icebp
dec
and
jg
rol
fsts
cmp
ficomps
loop
pop
mov
rorb
or
lcall
dec
mov
scas
and
outsl
rcr
xchg
cli
jne
js
mov
out
lods
cli
fwait
push
mov
cmc
mov
outsl
fistps
cmp
adc
push
adcl
loopne
jl
loop
inc
dec
hlt
and
dec
xlat
sub
mov
xchg
sub
fbld
add
push
loopne
xlat
das
and
icebp
icebp
inc
inc
int
fdiv
rcll
imul
leave
lock
arpl
and
jne
cmp
ja
jecxz
mov
mov
insl
jno
pusha
mov
fcomip
xchg
outsl
data16
jae
nop
pop
ja
add
xor
xor
push
jl
lahf
push
shrl
add
xchg
fsubrp
and
ss
pop
push
les
jne
jae
roll
sbb
push
cmp
mov
jle
jge
les
clc
jne
leave
push
cmp
and
push
mov
std
jg
stos
sbb
jl
push
clc
outsb
pop
loopne
push
inc
mov
mov
jnp
mov
inc
or
push
xchg
rorb
jle
outsl
cli
rorb
and
sbb
js
add
dec
xchg
pushf
xchg
or
jmp
mov
nop
lods
rorb
lds
lret
push
sbb
add
mov
adc
lock
outsb
ret
sbb
pop
mov
sbb
stos
repz
mov
fcomps
out
clc
xlat
es
push
mov
xlat
push
pop
xchg
in
icebp
stc
push
adc
loopne
dec
js
and
mov
or
sub
xorb
loopne
push
jmp
xchg
stos
sbb
fsubrs
out
mov
and
xorb
push
add
xor
les
cmp
pop
stos
push
js
repz
rcr
lds
sbb
or
test
cmp
jle
push
jmp
mov
dec
adc
inc
push
jne
push
lret
mov
mov
push
sbb
adc
leave
fcomps
pop
jno
inc
mov
clc
stos
pop
imul
pop
ret
into
push
imul
add
call
je
adc
sbb
pushf
push
sbb
mov
inc
mov
das
in
sbb
cld
cld
ds
inc
dec
mov
testb
xchg
mov
icebp
insl
jp
or
push
and
mov
xor
mulb
pop
cmp
push
lea
stos
test
in
mov
scas
dec
ficomps
cmpl
xchg
mov
mov
ss
add
leave
mov
popf
sbb
leave
popa
inc
or
addb
sbb
fnstcw
push
sbb
push
imul
add
repnz
lahf
fldcw
mov
mov
sbb
js
sub
push
mov
mov
adc
test
ret
mov
or
sbb
lea
inc
aas
jmp
or
dec
jne
xlat
xchg
in
and
pop
mov
adc
cwtl
cmp
and
add
int3
inc
xchg
nop
sub
outsl
fdivr
aaa
enter
xchg
cmc
jg
xchg
mov
xchg
movsb
push
mov
shlb
ljmp
mov
inc
nop
ljmp
pop
push
ja
mov
xor
pushf
xchg
ret
loope
mov
xchg
push
mov
cmpsl
xchg
divb
pop
sbb
pop
stos
jle
jmp
mov
sub
cmpsl
shlb
fsubrl
dec
jmp
jp
jnp
pop
ficomps
nop
mov
cmpsl
in
mov
lret
xchg
pop
dec
imul
fistpl
mov
xchg
js
push
inc
test
jp
sbb
cmp
ss
sub
jne
pop
lahf
scas
loop
add
push
insb
add
jne
dec
dec
fs
xchg
fucomp
jp
sbb
dec
add
bound
xor
cli
out
sbb
leave
dec
inc
xor
testb
and
inc
jb
jne
push
sti
and
nop
adc
xchg
sub
test
jb
mov
and
mov
test
nop
xor
aas
pop
mov
imul
sahf
jb
imul
sub
es
incl
and
xchg
ficoms
or
stos
xchg
or
pop
pop
inc
sub
insb
inc
mov
pop
push
adc
lock
aam
bound
or
dec
out
mov
mov
or
mov
dec
sub
mov
decl
pop
ds
jp
hlt
imul
stos
adc
mov
popa
push
push
shl
xor
mov
push
mov
hlt
xchg
xchg
add
sub
fisttpl
roll
rcr
adc
adc
cli
push
mov
ljmp
inc
mov
inc
push
rorb
pop
fistpll
push
mov
jp
add
test
add
inc
movsl
std
cmp
jge
bound
popa
imul
jae
cli
rcl
fstl
add
dec
int
mov
xor
lret
lods
outsl
jecxz
jo
cltd
ja
nop
lret
repz
pop
inc
push
add
aad
jmp
mov
daa
lds
out
je
mov
dec
mov
loop
insb
lcall
mov
inc
mov
pop
cld
sbb
jl
pop
addl
lock
mov
loopne
in
adc
xchg
jns
iret
xchg
dec
les
fnstcw
cmp
dec
aam
outsl
cmpsl
adcb
jl
fs
adc
repz
in
push
lock
sarl
fs
xlat
ds
push
push
pop
dec
dec
jb
or
aad
rcr
call
movsl
pop
call
testb
sub
mov
or
jp
enter
pop
ret
sub
push
std
adc
xor
scas
enter
mov
lret
dec
mov
lahf
cmp
adc
mov
mov
xchg
and
in
mov
and
or
movsb
push
dec
setae
xorl
les
push
adc
mov
aam
sub
jnp
and
push
movsb
dec
adc
pop
cmp
mov
es
dec
data16
sub
outsl
adc
and
xchg
mov
push
enter
lahf
jb
rorl
dec
sbb
xor
jge
sbb
aas
and
and
cmp
andb
mov
add
int3
jecxz
repnz
leave
int3
repnz
mov
dec
pop
cmpsb
lods
ficoms
icebp
inc
lods
pop
loop
pop
and
mov
mov
aas
cmp
and
lahf
shll
xor
xchg
cmp
push
pushf
xchg
push
mov
mov
inc
ss
push
push
and
mov
in
sarl
test
xlat
lods
repnz
fstpl
dec
mov
roll
jns
dec
inc
push
int3
push
insb
xchg
xor
stc
dec
sub
lods
out
sub
and
jl
cld
jns
shrl
fwait
int
mov
xchg
add
les
sti
pop
imul
jns
stc
push
and
and
add
out
cmp
aad
pop
mov
rolb
add
aaa
mov
shrl
fidivrl
mov
mov
xor
sub
popa
mov
ds
sub
lods
inc
mov
push
lods
pop
xor
loope
ja
pusha
daa
scas
std
cli
fimull
and
notb
xor
aad
pop
dec
in
push
dec
push
ss
pop
data16
and
mov
push
jno
ror
sbb
repnz
and
pop
scas
testb
aam
dec
rcr
int3
cmp
out
and
push
orl
fbstp
in
lods
pop
xchg
cmc
dec
mov
pop
mov
mov
pop
mov
mov
lds
outsb
mov
mov
ljmp
or
push
inc
outsl
xorl
sahf
push
xchg
sar
xor
xor
rolb
xor
adc
push
repnz
es
xchg
xchg
add
xchg
jmp
xchg
xchg
or
xchg
xchg
sub
xchg
lea
scas
cmp
test
jne
es
dec
xchg
je
mov
imul
push
fnstcw
fcmovu
cli
adc
mov
push
ljmp
clc
es
sub
inc
subl
or
push
sub
jp
dec
add
hlt
inc
into
adc
push
mov
inc
xlat
xchg
movsl
jle
add
or
filds
or
fisttpll
jns
push
repz
inc
add
pushf
dec
fs
ja
or
dec
xchg
mov
aad
aad
mov
inc
ss
aas
fidivs
add
pusha
fsts
pop
cmp
movsb
inc
bswap
in
mov
cmc
sbb
jge
test
xchg
icebp
idivb
or
cs
das
or
rep
xchg
out
adc
outsb
inc
mov
lret
and
xbegin
push
lods
rolb
lock
mov
pop
pop
in
shlw
mov
xchg
cmc
pop
sub
in
rcrb
loope
cmp
and
ja
push
out
stos
insb
call
push
out
xchg
inc
ret
jbe
mov
jmp
sti
popa
xlat
push
shrl
das
mov
dec
jg
add
aaa
fistpl
mov
jne
inc
mov
or
or
das
cmp
jmp
push
jno
inc
push
and
arpl
inc
enter
jnp
jnp
popa
rclb
sbb
push
pop
inc
leave
scas
push
xchg
sbb
mov
push
call
imul
mov
je
jo
std
mov
iret
and
sub
xor
jp
sub
add
lcall
outsl
aas
ss
lds
add
lcall
out
cmp
sub
adc
cs
out
into
xchg
sbbb
push
xlat
push
mov
mov
mov
incl
cltd
mov
popa
out
add
or
adc
fisttpl
jo
shrl
mov
outsb
mov
clc
jp
lcall
xchg
sub
lea
inc
shll
or
pop
jp
insl
fstpl
pop
mov
push
pushf
or
into
cmp
test
rcrl
adc
bound
jecxz
add
mulb
sub
inc
loopne
movsb
addr16
cli
popa
or
push
ret
negb
std
or
xchg
pop
or
push
push
mov
sbb
lock
mov
in
inc
xchg
and
sub
xchg
cmp
scas
mov
mov
outsl
daa
cwtl
rcl
mov
leave
call
lods
dec
mov
jge
inc
jo
add
fistps
into
or
inc
mov
add
lret
imul
xchg
mov
shll
ljmp
movsb
pushf
test
adc
mov
jns
inc
stos
lret
jl
jbe
bound
cmp
push
jp
sbb
xor
push
and
inc
andl
push
push
mov
mov
cmpsl
bound
push
sbb
stos
cmpsl
sub
push
loop
xchg
scas
ss
jo
mulb
or
xor
xchg
cmpsb
cltd
cltd
inc
arpl
out
loopne
xor
cmp
mov
add
push
push
ss
stc
push
stc
bound
in
repz
mov
inc
not
ja
addr16
rol
or
mov
test
pop
cmp
sbb
ss
xor
mov
ret
sub
jp
pop
stos
sar
inc
sti
pop
push
ja
std
cs
ss
rorb
lret
js
ljmp
sub
xor
shrb
repz
sbb
in
cmpsl
cmovp
push
movsb
jbe
or
jmp
loop
or
cmp
sbbl
repnz
pop
push
mov
inc
movb
xor
hlt
fsubrs
dec
aas
inc
mov
outsl
xor
or
into
push
mov
inc
and
mov
add
cmp
in
mov
jge
or
push
pop
cwtl
daa
loop
mov
aad
xchg
movsb
scas
lds
movsb
mov
fisttps
pop
sub
xor
mov
pop
mov
add
nop
out
out
xchg
loope
jae
push
popf
btc
xlat
mov
rcrl
ds
mov
sub
mov
shlb
lods
std
push
popf
enter
mov
dec
cmp
xor
cwtl
sbb
jne
ret
rorb
jp
roll
int
pop
es
pop
push
push
int
jb
sbb
lods
rorb
jbe
pushl
mov
dec
push
popa
cmc
inc
inc
or
daa
orl
lea
and
xchg
lea
dec
lock
cmp
test
scas
cmp
mov
ret
aad
inc
mov
in
add
inc
lds
jns
push
jno
loopne
sbb
jbe
test
sti
pop
sbbb
adc
xchg
les
add
addw
push
mov
jecxz
cmp
in
adc
push
dec
ror
fnstenv
inc
and
adc
xchg
push
cmp
mov
push
xchg
dec
jp
aaa
jb
ret
jb
and
xlat
pop
in
add
mov
or
scas
into
in
daa
dec
jnp
add
aaa
pop
mov
mov
dec
xchg
outsb
cmp
dec
test
fnstenv
jns
pop
inc
push
xor
test
test
insb
mov
push
and
xlat
les
pop
jecxz
adc
in
loop
fidivrs
mov
call
sbb
adc
sbb
inc
imul
pop
inc
test
push
xchg
cmp
jge
ss
and
insl
flds
and
sti
and
fs
clc
mov
std
cmc
pop
in
mov
add
pop
jne
repnz
jnp
pop
in
mov
add
or
sub
or
std
imulb
stc
inc
sbb
push
and
pop
mov
aad
fistl
mov
adc
pop
dec
and
aam
cmp
movsb
fwait
xchg
jno
mov
fdivl
xor
imul
cwtl
sarb
popa
fisubrl
hlt
mov
leave
xchg
mov
in
aas
pushf
leave
mov
push
pop
fistpll
mov
jl
int3
aaa
sbb
jle
mov
jo
sbb
arpl
mov
aas
ds
sarb
fcompl
std
ja
mov
dec
div
sbb
test
cld
clc
adc
movsl
xor
lea
loop
dec
push
xor
mov
inc
jnp
icebp
jne
int3
mov
jge
pop
and
ficoms
mov
pop
jae
rcll
and
jbe
lret
in
adc
jne
add
pop
mov
and
mov
mov
icebp
or
lods
out
inc
out
dec
les
ret
cmp
and
push
add
adc
or
jno
enter
pop
fstpl
jmp
adc
add
pop
test
fisubl
ljmp
lahf
stc
push
mov
out
mov
fnstenv
cmpsl
mov
fadd
mov
lock
cmp
bts
xchg
add
xor
jae
add
inc
ja
jns
inc
int3
dec
les
mov
mov
dec
xor
aam
dec
sarb
in
dec
ljmp
sahf
cmp
in
jno
addb
jb
xchg
mov
repz
push
jp
push
icebp
mov
dec
jo
jmp
fidivl
repz
mov
xchg
mov
jb
rclb
fs
and
or
push
fs
scas
stos
mov
outsb
stos
lret
cs
mov
jo
or
push
add
lret
testb
jbe
scas
adc
cmc
xor
fwait
xchg
adc
shrl
hlt
push
cld
insb
jbe
mov
pushf
dec
inc
inc
jl
lods
lods
cmc
jge
shll
int3
mov
test
jno
fistl
addb
clc
aas
pop
jg
out
mov
enter
cli
psllw
shrb
jmp
sub
in
movsl
fsubrl
mov
je
pop
sub
jle
push
cs
fnstsw
or
and
sub
cmpl
adc
pop
clc
pushf
dec
call
clc
xchg
add
fs
jmp
pop
mov
sahf
test
testb
jo
rcrb
out
adc
frstor
mov
shl
xor
dec
fisubs
movsl
cmpsb
jmp
in
dec
ja
iret
and
scas
sub
inc
enter
xor
cmp
xchg
xchg
addr16
mov
mov
mov
dec
jecxz
subl
add
jle
mov
push
nop
mov
xor
or
rcll
jmp
decl
das
jg
mov
inc
mov
xor
imul
add
jge
sbb
lret
imul
and
mov
add
outsl
jo
jnp,pn
enter
lods
sbb
mov
push
dec
cmp
gs
xchg
rol
imul
sub
test
dec
jg
lcall
sarl
scas
add
xor
add
jns
or
or
mov
sbb
cltd
sub
loopne
mov
in
inc
sahf
shll
fiaddl
aad
out
xorl
xchg
inc
fwait
in
int3
push
loopne
or
or
xor
sbb
mov
cvtdq2ps
loop
sbb
mov
dec
rorb
mov
stos
dec
sub
jecxz
and
and
outsl
andb
xchg
lea
dec
cmp
add
cltd
test
nop
test
std
pushl
cmp
popf
fdivrl
enter
mov
js
sub
sub
adc
mov
dec
cmp
add
sbb
mov
cmpsb
dec
in
fs
es
mov
pop
js
or
mov
mov
add
mov
stos
ss
test
xchg
pop
push
in
or
jge
ss
pop
mov
jne
shl
call
sbb
popa
pop
loop
insl
bound
or
je
fs
xor
lahf
jb
mov
add
repz
data16
jns
test
mov
lods
into
jb
out
movb
adc
xchg
inc
imul
loop
clc
arpl
cmpsb
push
icebp
or
jge
lds
cli
bound
mov
je
inc
sarb
inc
fxrstor
loop
je
mov
mov
sbb
mov
test
add
dec
cmp
dec
pusha
test
gs
sub
outsb
fs
loope
sbb
leave
and
jle
and
fcmovb
inc
jne
add
pop
mov
insl
rclb
sbb
sub
js
jp
cmp
call
outsb
mov
add
jo
xor
adc
cmp
fsubl
add
arpl
push
gs
sbb
mov
lret
push
push
lea
sahf
or
push
sti
mov
adc
fisttpll
mov
xchg
daa
add
test
int
idiv
repz
mov
lods
adc
fisttpll
jmp
dec
cmp
sub
and
or
or
imul
ds
movsl
fwait
or
stc
xchg
jae
stos
test
cmp
je
test
and
andl
mov
clc
in
das
mov
and
subl
fucom
int3
mov
mov
sub
and
mov
and
push
repnz
pop
ja
data16
lds
dec
test
pushf
and
pop
pop
rorb
cmp
jecxz
add
ficoml
ret
sub
orl
ret
in
mov
dec
in
or
xlat
jnp
sbb
out
pop
scas
mov
aaa
mov
rol
mov
sub
fisttpl
inc
mov
into
rolb
push
jecxz
js
cmp
lods
mov
adc
and
mov
movsl
mov
lret
sti
stos
int3
and
mov
xlat
push
push
add
nop
test
dec
jmp
fisttps
and
enter
in
fcomi
testb
lock
jb
ret
mov
dec
test
notb
jo
xor
add
jp
cmp
movsb
xchg
fmulp
cmpsl
xchg
test
mov
pop
aaa
inc
ret
or
loop
enter
pop
cld
in
sub
hlt
mov
fwait
mov
pusha
pop
jl
mov
push
add
js
cld
fildll
mov
dec
insl
aam
cmp
xchg
nop
xchg
inc
stos
xchg
pusha
in
arpl
les
aas
push
pusha
mov
mov
mov
mov
push
sbbl
std
adcb
std
cs
popa
mov
out
subl
sbb
data16
movsl
std
inc
pushf
repz
test
push
pop
lret
or
xor
mov
shll
sbb
push
icebp
cmpsl
mov
cmp
rorb
mov
push
fwait
dec
mov
mov
mov
pop
scas
in
mov
call
arpl
loopne
insb
cmc
jb
cmc
or
lea
inc
adc
lret
in
jge
xchg
test
adc
pop
xchg
mov
pop
rep
les
fildl
sub
nop
cmp
insl
icebp
mov
in
mov
pushf
xlat
mov
adc
push
xchg
sbb
data16
ss
call
scas
cwtl
loope
sub
stos
int3
or
jbe
ljmp
cmp
push
jg
mov
inc
sbbb
cmp
mov
pop
push
je
mov
adc
push
sub
inc
cld
jge
adc
cmpsb
sub
xchg
and
and
je
into
pop
cmp
mov
mov
test
push
pop
or
add
sbb
xchg
vphaddbq
push
shll
jno
or
jecxz
sub
fiadds
or
mov
cmc
addr16
and
jno
stos
out
addb
dec
les
mov
jle
adcl
push
pop
jns
adc
popf
es
gs
jb
mov
cmp
loope
stos
outsb
cmp
sub
pop
scas
negl
mov
dec
iret
mov
mov
dec
fcmovnbe
push
add
popa
xchg
hlt
shlb
mov
std
fmuls
stc
addr16
imul
xor
mov
mov
adc
mov
adc
lcall
sbb
stc
mov
ljmp
pop
xchg
std
jle
pop
cmpl
xchg
mov
mov
add
in
jo
call
jg
dec
in
in
fcos
repnz
arpl
arpl
fldenv
int3
das
jl
push
sbb
sarl
fistpl
sbb
adc
cmpsl
mov
cmp
mov
mov
jge
mov
cmp
xchg
jp
call
int3
sbb
es
mov
shl
hlt
popf
popf
outsb
pop
scas
ss
mov
shr
imul
add
gs
inc
push
mov
sbb
xchg
xchg
pop
arpl
jp
call
std
stc
outsl
pop
imulb
mov
test
sbb
sub
mov
inc
inc
push
jg
out
xor
test
call
mov
enter
dec
lret
add
aaa
add
mov
mov
pop
rcrb
mov
cmp
in
dec
rcr
push
mov
fnsave
xchg
popa
out
mov
in
testl
out
inc
stc
daa
cmc
xchg
adc
sub
aam
mov
xchg
cmp
cs
shll
adc
sub
inc
int
mov
mov
xor
mov
mov
shrb
or
xor
mov
push
xchg
pop
int3
xor
ficoml
xchg
rorl
push
mov
lods
mov
mov
int
and
mov
lock
push
shlb
sbb
cmp
out
xor
insl
push
sbb
dec
loope
lret
in
call
jnp
icebp
cmp
imul
xchg
aad
shll
ja
mov
sub
xchg
aas
sahf
fcoml
enter
std
push
cs
dec
fstl
les
lods
cmp
pop
jmp
xor
cli
push
int
mov
inc
xor
mov
test
sbbb
xor
adc
mov
les
push
sti
push
cwtl
pushf
jmp
shrl
xor
push
pop
jbe
add
xchg
mov
rclb
adc
ret
jge
dec
in
test
push
mov
mov
inc
jae
aas
lods
sbb
and
bound
push
jns
repnz
aaa
mov
or
loopne
cmpb
push
cmp
orb
cmc
into
js
hlt
clc
addr16
and
hlt
and
into
inc
out
mov
jns
cmpsb
push
push
aad
pop
std
addl
sbbl
ret
sahf
lods
lock
jmp
push
inc
test
dec
push
or
cli
push
lock
fcoms
cmpsb
jnp
ss
pop
enter
mov
loopne
icebp
push
pop
cli
popa
enter
jmp
push
or
ret
jae
add
sub
in
dec
sti
adc
cmpsl
or
clc
aam
shlb
jecxz
add
scas
sbbl
pop
in
sarl
dec
adc
inc
subb
cli
xor
cs
xchg
xchg
dec
mov
or
push
add
repz
dec
sbb
xchg
pop
jg
test
cmp
jb
test
js
cmp
aad
test
inc
jg
ljmp
push
push
sub
xchg
shl
sbb
pop
mov
ljmp
decb
sti
mov
subl
add
test
adcb
mov
dec
mov
sbbb
xchg
in
ret
data16
movsb
sub
ret
into
outsb
mov
push
movsb
inc
sub
cmpsb
jecxz
jo
xchg
mov
push
loop,pn
out
mov
jne
cmp
das
arpl
adc
gs
xlat
adc
push
aad
push
mov
cld
add
pop
aam
xchg
jge
int3
pop
sbb
test
pusha
dec
aad
jg
aam
stos
jb
jl
adc
or
pop
popa
adc
cltd
pushl
faddl
adc
sub
fs
out
cmpsl
or
inc
cmp
and
pop
inc
mov
icebp
lds
or
sub
sub
stc
out
loop
add
nop
dec
xor
inc
cmpsl
cmp
push
add
cmp
pop
imul
cli
js
loopne
fisttps
pop
add
sub
mov
mov
cmp
mov
cmc
lret
pop
arpl
mov
shlb
gs
scas
inc
inc
mov
fbstp
inc
pop
loop
or
rorl
rcr
mov
arpl
call
mov
add
leave
mov
cli
lcall
outsl
pop
bound
loope
add
jle
jp
test
ret
addl
rorl
cmc
daa
lea
imul
xchg
sub
jnp
mov
jl
fwait
dec
sub
cs
pop
cmpsb
ja
lock
inc
addr16
ffreep
fldt
sbb
cmp
std
std
loopne
dec
sbb
mov
stc
push
and
and
xchg
jns
js
cmp
xor
pushf
lahf
gs
movsl
mov
mov
mov
mov
ror
loop
mov
lods
fdivrs
mov
sbbl
cwtl
in
pop
adc
sbb
adc
lods
sbb
lret
test
aad
mov
orb
sahf
inc
adc
sbb
out
into
mov
sbb
xchg
sbb
stos
push
es
lods
fwait
and
inc
dec
cld
or
int3
addr16
mov
movsb
dec
push
push
stos
pop
sbb
mov
fmulp
and
mov
repz
mov
scas
add
rorb
je
xchg
sbb
clc
and
pusha
ja
cs
xchg
cmpsb
inc
out
es
dec
outsl
mov
sbb
or
mov
pop
mov
js
jmp
dec
cld
pushf
jne
xor
jns
jecxz
stc
mov
adc
push
push
insb
stos
ror
clc
js
mov
sub
loope
push
fidivl
push
lds
xchg
mov
sbb
divb
and
and
cs
subb
lcall
sets
ficoms
fistpll
xor
xor
aas
pop
pop
imul
mov
and
das
mov
xor
push
mov
sbb
lods
xlat
fnstcw
lods
cmp
in
push
rcrl
add
or
sbb
cmp
out
lods
jl
mov
xlat
jbe
fisttpl
mov
test
sub
inc
movsl
rcll
cmpsb
xor
fdiv
cmpxchg
movl
leave
in
adc
arpl
mov
lcall
ret
subb
dec
jp
pop
sahf
push
in
loop
sbb
mov
mov
add
mov
adc
cmp
adc
mov
iret
scas
ds
ljmp
fwait
mov
pop
jmp
repnz
adc
call
mov
add
int
movl
push
dec
test
jmp
jl
scas
rclb
push
jg
sbb
push
lds
pop
int3
lahf
call
repz
lock
pop
dec
fimull
sahf
lods
mov
lcall
fnstcw
pop
dec
mov
repz
sub
pop
push
call
inc
and
out
ret
lahf
stc
sub
shll
cwtl
popf
in
mov
cmpsl
mov
movsl
stc
lock
addr16
xchg
into
mov
pop
dec
mov
scas
xor
pop
and
shrb
adc
mov
loope
inc
std
push
mov
jl
arpl
mov
add
lcall
stos
push
sub
mov
xchg
adc
aad
idivb
inc
push
pop
aas
pop
mov
cld
jb
lds
pop
imul
inc
movaps
mov
or
and
enter
shll
lret
xchg
cld
xlat
andl
sbb
mov
scas
jmp
les
add
pusha
sar
cs
inc
stc
mov
jae
daa
stos
and
popf
xchg
cmp
lods
rcrl
fisubl
fisttps
mov
mov
ficompl
dec
ret
pop
test
jns
movsl
mov
fucomip
sub
test
xchg
and
pop
iret
daa
cmp
test
test
and
and
in
dec
jge
imul
dec
push
or
and
popa
loope
add
ds
mov
jno
mov
mov
hlt
pop
lcall
cmpsb
ret
or
xchg
adc
push
cmp
aaa
addr16
inc
mov
mov
je
sub
loope
push
push
xchg
fsubrl
in
cli
shrl
jns
pop
mov
add
sub
je
iret
push
xor
lock
leave
enter
mov
add
cmp
lods
pop
adc
cmp
loopne
pop
jmp
push
push
fidivrs
mov
nop
inc
call
stos
out
push
xor
adc
pop
lock
out
or
jecxz
dec
dec
test
xor
sub
roll
push
fs
pop
or
loopne
call
das
es
and
and
add
test
scas
cltd
fs
rcr
leave
hlt
pop
pop
out
mov
cmc
jecxz
and
pop
rclb
jmp
xchg
pandn
push
lcall
push
call
test
lods
push
iret
cwtl
sahf
lea
cmp
fsubrl
mov
dec
shlb
lcall
jl
add
aam
pop
sub
call
in
mov
and
and
jnp
sbb
pusha
notl
sbb
stos
aam
or
ficoml
cmp
mov
lods
addl
call
shrl
popa
inc
jmp
icebp
and
sbb
test
add
icebp
pop
lea
add
leave
adc
add
js
inc
mov
int3
xor
dec
push
outsb
js
push
xchg
jl
pushl
sbb
iret
icebp
ss
fsubrl
ret
sbb
pop
lods
lahf
cmp
mov
jnp
sbb
ret
loop,pn
inc
out
mov
or
dec
repz
xchg
dec
lods
sti
data16
fcmove
addr16
addl
or
popf
jo
cmp
fsubs
subl
mov
outsl
ficomps
insb
add
jno
push
push
aad
inc
pop
add
outsb
xor
dec
rcl
pop
cli
movsl
sti
xor
pop
outsl
mov
popf
test
daa
jle
sbb
push
or
jb
stos
cwtl
mov
es
xor
cmc
dec
movsb
add
inc
inc
into
aad
xchg
incb
sbb
or
scas
add
and
jo
mov
jnp
rclb
inc
iret
push
pop
jno
sbb
sbb
push
mov
pushf
push
cmpsb
js
push
jbe
xor
nop
and
fs
inc
add
jg
in
jecxz
sbb
sub
popf
jno
xor
mov
adc
loopne
adc
or
fwait
lock
lods
subb
mov
or
scas
nop
pop
cs
test
aad
add
ret
lcall
aam
mov
adc
stos
icebp
movsl
leave
lahf
mov
sub
in
mov
hlt
mov
and
js
add
jo
jle
sub
std
and
aad
xchg
xor
and
mov
sbb
jb
aam
pop
mov
push
cmpsb
push
pop
movsl
scas
dec
rcrb
pop
in
shll
push
jo
push
mov
push
mov
adc
cmp
cmpsb
sbb
xor
cmc
loopne
pop
imul
mov
fs
or
imul
dec
or
inc
inc
jp
inc
bound
mov
jge
xor
sub
pop
cltd
mov
add
popf
inc
jbe
out
cmp
mov
push
fsub
aam
xchg
pop
sti
inc
xchg
push
mov
xchg
lock
int3
mov
scas
adc
jge
or
loopne
push
mov
jb
test
cmp
inc
inc
pop
jecxz
cmp
adc
sub
push
cmc
push
lds
mov
fstpt
test
mov
xor
and
fdivr
and
out
test
sub
xchg
inc
in
pushf
addb
cmp
sbb
lock
repnz
or
xor
pop
xchg
xchg
cwtl
into
test
mov
nop
js
lds
xchg
or
inc
xor
daa
test
sbb
add
cltd
pop
pop
repz
dec
cmp
movsl
mov
sub
or
rcr
loop
fiadds
divb
push
data16
mov
mov
pusha
in
out
daa
dec
ficomps
and
xorb
mov
adc
shll
push
pusha
iret
loop
pop
out
test
hlt
fwait
in
clc
mov
fstps
jmp
pop
mov
cmpsb
fmulp
mov
movsl
loopne
fdiv
pushf
repz
mov
mov
in
cmp
sarb
aad
sti
cmpsb
cmpsb
jecxz
jo
mov
and
aaa
dec
and
mov
sahf
pop
testl
adc
outsb
pusha
and
gs
jle
pop
xchg
aam
ss
andl
arpl
pop
sub
lock
scas
test
inc
pop
mov
out
cltd
repz
cmp
mov
xor
ss
inc
jl
cmp
sub
mov
test
mov
mov
add
out
ja
repz
fstps
mov
sbb
enter
pusha
sub
test
cmp
adc
adc
sub
mov
shrl
dec
hlt
decl
inc
movsb
dec
mov
in
and
add
xchg
fwait
and
cwtl
int3
outsb
outsl
addr16
fcompl
arpl
std
cli
cld
or
shlb
and
imul
sub
insb
outsl
or
outsl
add
add
jp
ret
xlat
sub
fiaddl
bound
negl
stos
inc
ja
sub
or
les
mov
sub
mov
xlat
add
dec
fldl
push
mov
arpl
out
dec
inc
mov
shr
add
push
jl
adc
gs
or
and
xchg
dec
and
adc
jge
shll
loope
fcoml
mov
mov
mov
sub
mov
fstpt
dec
leave
dec
jle
push
in
sbb
outsb
lods
jo
xchg
mov
aad
and
and
scas
adcb
fwait
adc
jb
pop
xor
jne
cmp
sbb
aad
add
test
dec
cmp
or
xor
pop
jbe
int3
in
and
push
sbb
adc
jno
or
inc
out
jge
sahf
aaa
std
push
inc
add
xchg
pop
mov
mov
xchg
fdivrs
cli
aas
lock
loopne
fildl
mov
and
out
pushl
sbb
ficoms
push
outsb
xor
mov
sbb
xor
out
stos
insb
cmp
je
and
or
inc
loop
fwait
push
arpl
cwtl
cmp
sbb
or
int
push
inc
push
jg
in
fsub
push
adc
sub
ja
arpl
cmp
mov
xchg
pop
shr
cmp
mov
push
cmp
lret
lock
xchg
or
adc
adc
and
shll
loope
mov
shl
aad
jp
inc
mov
add
in
cmpxchg
dec
daa
sbb
push
dec
cmpsb
sbb
mov
rorl
add
fldl
pushf
mov
mov
stos
add
mov
scas
notl
clc
dec
dec
testl
test
out
ficoms
add
dec
xchg
insb
sub
push
das
inc
push
cmp
pop
push
cmp
std
mov
mov
popa
pop
adc
push
jbe
pushf
sub
cld
inc
adc
xchg
movl
repnz
sbb
js
mov
fstl
add
aaa
xchg
cmp
shrb
test
decb
sbb
cmc
and
add
pop
xor
push
int
or
mulb
or
pop
hlt
jnp
mov
std
jo
out
hlt
dec
and
inc
aas
not
out
add
xor
dec
lahf
mov
jecxz
adc
jle
mov
jl
xchg
mov
in
push
adc
fs
inc
push
orl
sbb
cs
and
xchg
inc
out
outsl
pop
inc
enter
mov
dec
les
fsts
inc
test
dec
xor
sbb
push
hlt
add
sbb
mov
addl
adc
mov
jno
sar
pop
xchg
ficomps
xlat
js
mov
sub
push
mov
mov
mov
sbb
repz
outsl
cwtl
push
js
mov
ret
inc
test
mov
jae
pop
sub
arpl
and
movsl
push
bound
sbb
jno
add
sarb
pop
xchg
mov
xchg
dec
xlat
fists
leave
mov
int
rorl
cmp
out
addr16
jl
movsb
xor
inc
std
clc
jmp
scas
cmc
push
or
push
stos
pop
ret
push
xchg
or
outsl
or
dec
cwtl
sbb
pop
add
cmc
je
pop
jmp
mov
mov
imul
scas
sub
lock
das
cmp
jle
inc
lret
push
pusha
ds
pop
js
push
fiaddl
fs
add
popa
jmp
test
adc
push
jbe
cltd
in
sub
test
ds
nop
sbb
mov
iret
jns
jle
add
in
sbb
pushw
cmp
dec
push
xchg
sub
xchg
decl
cmp
sub
cltd
xchg
idivl
fwait
inc
mov
sub
cwtl
mov
pop
pop
arpl
pop
mulb
das
dec
call
mov
push
and
mov
enter
sub
push
jo
push
imul
cmc
or
mov
dec
dec
inc
cmp
movsl
fadds
sub
inc
sub
rcr
leave
in
out
add
push
push
cmpsb
scas
rcr
mov
xchg
nop
sarb
or
or
out
in
xchg
in
jo
cmp
lods
data16
leave
je
push
sbb
or
jbe
repz
scas
std
xor
mov
stos
lock
pop
popf
cmp
andl
push
bound
xchg
sub
into
lock
and
mov
jp
ja
cld
lds
sbb
movl
insb
jns
test
insl
lcall
ficoms
das
pop
ret
push
in
into
outsl
push
inc
cmp
insb
sub
dec
shlb
shlb
xor
ss
repz
dec
xchg
xchg
xchg
lret
mov
and
mov
cmp
scas
in
mov
shl
pusha
flds
sub
jp
daa
aaa
xorl
sbb
repz
xchg
cmc
in
mov
lods
cld
and
repnz
fisttpl
mov
sbb
into
push
push
dec
xchg
mov
iret
push
rclb
test
les
je,pt
inc
addr16
sarb
nop
jo
bound
bound
push
out
mov
xor
jns
out
lds
jns
ret
movsl
loope
insb
mov
lahf
push
add
mov
es
repz
xor
sbb
rcll
inc
das
sbb
sub
push
sbb
outsb
xchg
fwait
rolb
lret
stc
int3
inc
cvtps2pd
add
aad
lret
fcoml
fdivr
mov
ss
int3
ss
and
mov
sarl
loope
sbbl
push
xchg
stos
pop
inc
cli
popa
cltd
mov
inc
lods
pop
scas
xor
xchg
sub
dec
subb
call
rorl
pop
mov
cmp
cmp
jmp
push
inc
mov
es
jae
cli
insl
xor
push
sub
add
push
jecxz
fwait
push
pop
xchg
std
movsb
aaa
jg
dec
mov
xchg
sub
cs
fistl
icebp
rorb
ret
inc
sub
inc
xor
jo
stc
jnp
repz
pop
ret
mov
dec
sub
stos
inc
pop
push
test
dec
mov
cld
push
mov
inc
test
out
ftst
sub
shrb
mov
aaa
xchg
fisttpll
sbb
orl
push
jne
popl
fimull
ds
or
sbb
cmpsb
pop
jns
stos
dec
dec
call
cs
cli
jo
cltd
and
bound
mov
cld
das
call
mov
scas
test
loope
jno
adc
cmp
cmp
lods
sbb
push
cltd
sbbl
mov
mov
sub
pop
sub
ret
pop
popf
mov
xchg
les
lds
sahf
cmp
cld
cmpsl
repnz
cld
jmp
pop
lret
outsl
loopne
mov
mov
scas
jle
add
imul
push
scas
or
and
rclb
sarb
dec
jp
mov
push
add
mov
ljmp
or
adc
mov
sub
pop
mov
push
pop
jecxz
add
push
cmp
scas
mov
pop
addr16
das
mov
cmp
mov
xchg
loopne
push
jno
je
xchg
or
in
cmp
mov
das
cmp
stc
xchg
sbb
shlb
xchg
outsb
clc
mov
bound
push
inc
xchg
out
test
cs
jg
xchg
jnp
js
xor
les
pop
pop
adc
jne
sarb
mov
sbb
or
imul
push
lret
pusha
push
insb
sub
push
leave
cmp
ficomps
ss
lahf
mov
push
fmull
push
inc
jp
ljmp
fcmove
and
xchg
je
jge
and
movsb
into
cmp
mov
ror
jle
fsubs
je
leave
in
or
sbb
push
movaps
mov
push
dec
adc
out
mov
pusha
mov
repnz
inc
test
sub
xlat
jmp
cwtl
ret
jecxz
mov
cmp
inc
push
lret
dec
push
movsl
mov
and
mov
sti
push
repnz
stos
dec
stos
add
or
xchg
outsl
pop
sbb
mov
xchg
cmp
sub
leave
or
adc
push
cltd
addb
pop
stos
rcrb
pushf
cmp
cmp
popa
jg
sarl
test
lcall
cmp
fs
cli
mov
or
orl
push
sahf
cltd
je
mov
mov
push
or
pop
sub
and
push
dec
es
add
mov
out
call
neg
fwait
sbb
mov
sub
and
mov
inc
lods
aas
push
fiadds
lds
adc
lods
sbb
test
insb
adc
mov
movsb
dec
stos
out
rolb
ljmp
std
dec
inc
lfs
loope
xchg
push
cld
cmpsl
lahf
cmp
std
push
inc
sub
aas
pop
dec
xchg
pop
nop
jns
xchg
test
or
aad
pop
or
mov
fsubp
or
nop
popa
pop
jnp
or
and
hlt
mov
scas
loopne
out
orl
sub
push
stos
arpl
push
movsb
leave
je
stc
loop
mov
mov
jbe
fs
mov
push
rcpps
sbb
pop
stos
push
adc
shl
cmp
cltd
mov
inc
movsb
add
test
push
pop
pop
cld
pop
call
lcall
jg
mov
into
into
flds
imul
sbb
xor
or
jmp
pop
or
call
xchg
and
mov
sarb
in
shlb
lret
push
rcrl
or
mov
pusha
aas
xchg
xchg
fdivrs
lds
mov
insb
mov
jb
test
cwtl
mov
mov
adc
test
pop
xchg
and
push
xlat
lret
jno
movsl
push
xor
ficompl
inc
mov
push
sbb
loopne
sub
repnz
sbb
ret
jl
shll
push
je
ret
xor
std
mov
adc
adcl
leave
fwait
xor
fsts
enter
adc
cltd
loop
mov
sahf
hlt
push
inc
xchg
dec
ljmp
mov
popa
cs
jle
jne
xor
lea
cmpsb
clc
imul
xchg
out
imul
daa
incl
std
je
out
mov
dec
push
aas
negl
inc
push
js
out
xor
push
xchg
sbb
push
mov
pop
cmpsb
or
test
dec
cwtl
or
push
ds
pusha
push
mov
and
push
adc
cmp
mov
inc
sub
adc
test
pushf
mov
cmp
iret
mov
dec
in
mov
aaa
incl
or
stc
insb
lcall
es
dec
inc
inc
popf
jbe
pop
lret
aas
cmp
sbb
in
stc
xor
inc
lds
outsl
mov
faddl
cs
das
sbb
jmp
lock
mov
or
cwtl
cltd
xor
xor
adcl
or
daa
mov
push
ret
clc
in
inc
enter
jecxz
push
les
std
and
add
jl
mov
rolb
xchg
mov
fsubl
in
inc
sbb
cmp
int3
scas
xor
or
call
xor
fstpl
outsb
sbb
add
pop
daa
ds
jl
jnp
hlt
sub
mov
xchg
rcr
aam
lods
jbe
cs
rcrb
ret
lret
pop
rorb
inc
out
sbb
dec
fiadds
mov
cmpsl
fwait
xlat
jae
test
dec
push
xchg
mov
adc
ffree
in
call
jle
inc
dec
mov
push
bound
je
cvtps2pd
inc
inc
cmp
xor
insb
inc
ljmp
add
xchg
js
in
loop
xchg
dec
inc
xor
sbb
jecxz
imul
icebp
mov
popa
cwtl
das
mov
cmp
xchg
jle
dec
or
cs
fwait
push
jecxz
sti
mov
mov
jl
xchg
cmpsl
dec
mov
divl
imull
imul
or
mov
test
js
out
adc
cmp
xor
cmp
push
pop
lret
das
mov
scas
push
scas
push
push
cmp
mov
cmp
in
sub
lock
out
adc
scas
push
mov
jb
popa
cmp
push
cmp
movhps
mov
in
lahf
fisubl
and
je
inc
pop
dec
cmc
lcall
inc
push
call
push
cmp
rcr
les
ja
jg
cmc
inc
scas
cmp
lret
pop
xor
jnp
lods
jp
call
sbb
xchg
in
cli
lcall
pop
push
ljmp
or
out
pushf
cli
jae
repz
inc
cltd
mov
sbb
lock
scas
in
sbb
mov
repnz
fs
aam
dec
int3
mov
dec
dec
sub
and
enter
mov
adc
sbb
pop
lock
or
clc
ret
cmp
leave
fdivs
stc
mov
cltd
arpl
rcr
mov
xlat
mov
mov
jmp
mov
cmpsb
xchg
clc
insl
popa
lret
add
adc
mov
cs
cs
mov
pop
pop
ret
lcall
test
cmp
cmpxchg
mov
test
pop
dec
sarl
xor
stos
iret
inc
lods
pusha
sbb
cmp
pop
cmp
out
mov
xchg
xchg
addr16
mov
into
cmpsb
mov
je
dec
out
stc
jle
ds
mov
sub
call
push
imul
sbb
imul
outsl
xchg
mov
mov
lea
ret
stos
lcall
add
add
lods
test
push
stos
fldenv
xor
insb
or
leave
xchg
push
lret
sub
pop
dec
dec
fbld
dec
out
cmp
shll
roll
leave
notb
adcl
in
jge
mov
lahf
adc
mov
or
adc
mov
imul
addr16
xlat
movsl
cld
jno,pt
pop
and
sbb
adc
into
xor
pusha
into
movsl
sbb
lcall
fcoms
es
jns
mov
addr16
add
jle,pn
adc
add
addr16
je
jns,pn
jmp
push
mov
scas
jns
negb
and
mov
ret
and
imul
mov
jp
xlat
aad
push
test
xor
cmpsl
mov
stos
or
xor
inc
push
outsb
sbb
jnp
shl
jg
cwtl
mov
fsubr
fdivl
sahf
std
jbe
mov
push
add
stc
push
out
cmpsb
or
pop
outsl
mov
std
insb
popa
xchg
loop
mov
mov
mov
out
mov
pop
or
aam
inc
cmpb
pop
loop
jle
out
cmc
ds
push
cmc
cmc
fs
push
pop
add
outsl
decl
outsl
test
les
mulb
dec
cmp
sub
cmpb
jle
js
loopne
jns
fildll
cld
negb
mov
push
cli
pop
cmp
mov
cs
add
lcall
jbe
mov
push
jns
or
mov
out
jo
jp
cltd
lds
in
ret
push
fwait
push
mov
inc
in
jns
shrb
push
orl
lret
dec
stc
push
arpl
enter
in
xchg
push
rcll
or
sbb
pop
xor
addr16
and
fildll
in
lods
sarb
pop
push
push
mov
hlt
or
leave
xor
cmp
pop
movsl
add
pop
push
jnp
cmp
jne
iret
pop
pop
mov
jecxz
sbb
test
mov
lcall
or
iret
push
nop
lea
or
pusha
nop
xchg
mov
adc
test
mov
cmp
sbb
rcrb
inc
cmpsb
mov
sarb
mov
adc
mov
or
jnp
jo
loope
ja
push
fnstcw
ds
jge
pop
pop
fdivs
lahf
pop
inc
dec
cmp
push
lahf
or
mov
or
sub
hlt
sbbb
sub
ficoml
and
stc
xchg
xchg
pop
mov
dec
dec
xor
hlt
lret
shrb
das
sub
push
sarb
cli
jo
cli
inc
and
dec
xor
lods
imul
cmp
fmul
xor
ret
cmc
stos
cli
dec
adc
in
pushf
mov
pop
and
jmp
in
in
mov
or
pop
notb
mov
xchg
sbb
add
lret
call
mov
xchg
push
xor
out
clc
inc
xchg
push
clc
push
mov
adc
push
js
call
xlat
or
stc
mov
fs
or
push
loope
imul
cmp
jbe
repnz
data16
mov
icebp
mov
icebp
or
movsl
jb
jne
fnstcw
dec
mov
cld
or
pop
mov
mov
pop
dec
push
and
xor
aad
or
inc
xor
mov
imul
sub
or
out
adc
cltd
call
cmp
jb
pop
jle
mov
jne
mov
push
sbbb
aaa
fwait
mov
popa
test
mov
inc
cmpsl
jnp
or
mov
cli
ret
sbb
test
mov
and
push
ss
jmp
mov
pop
jo
cltd
dec
xchg
push
mov
cmp
xlat
cld
aaa
mov
inc
cld
dec
push
aas
loopne
fidivrl
pop
sbb
cmp
pop
xlat
jg
mov
mov
shll
daa
out
int
cltd
ret
iret
sub
cmp
aaa
lcall
xchg
cmp
data16
push
sub
adc
shr
pop
js
mov
cs
or
inc
mov
sub
pop
nop
iret
mov
fsubrs
fwait
sarb
add
push
aas
lock
pop
repnz
lods
xchg
cltd
or
flds
repnz
xor
stos
dec
xchg
cli
mov
push
jno
dec
iret
mov
mov
mov
pop
addr16
mov
leave
cmp
mov
in
mov
dec
into
add
fcmovbe
movsl
icebp
add
shl
inc
inc
mov
popa
es
scas
xor
pop
mov
lods
aaa
ss
mov
aas
ljmp
inc
fcoml
adc
dec
sub
adcb
lahf
mov
in
sarl
inc
xor
lods
test
and
mov
cmc
jo
xor
fidivl
in
fcmovnb
aam
mov
movsl
sarb
ljmp
xor
lret
leave
jecxz
inc
sbb
jmp
stos
xchg
test
and
insb
cmp
or
xchg
xlat
xchg
nop
repz
mov
xchg
adc
cmp
rorl
mov
test
xor
mov
xchg
xor
enter
sarl
lcall
divl
imul
sub
inc
sub
xchg
cli
pop
fsubp
imul
pop
inc
pop
jg
inc
mov
push
enter
test
mov
xor
push
fcoms
jmp
mov
push
lret
enter
fiaddl
mov
xchg
rol
iret
popf
ljmp
inc
data16
cltd
jo,pn
and
xor
sub
loopne
xor
dec
rclb
or
jmp
into
jecxz
fwait
test
lds
je
lds
into
cmp
push
jbe
cmc
leave
mov
dec
dec
sbb
pop
cmp
dec
cmp
shlb
stc
add
mov
push
pusha
mov
pop
mov
jno
clc
mov
adc
lods
jg
mov
and
push
loop
cwtl
and
xchg
out
movsl
mov
vhaddps
and
jmp
shrb
xchg
cmc
xor
dec
mov
jmp
and
movsl
test
js
daa
sub
sbb
in
push
or
push
daa
dec
cmpsl
xlat
pop
arpl
inc
inc
fsts
out
xor
mov
lds
insb
pop
inc
sub
mov
es
movsb
cmp
das
insl
idivl
push
dec
mov
mov
inc
fistl
popa
inc
xchg
xchg
call
rclb
jnp
fstl
dec
imul
push
call
fiadds
lret
stos
xlat
inc
sub
xchg
repnz
push
iret
arpl
in
loop
or
mov
scas
repz
xlat
rorl
lock
cmp
inc
xchg
xor
pop
jecxz
cmp
mov
adc
cmp
rolb
adc
xor
ja
sbb
imul
jmp
jb
ficoml
push
test
data16
dec
xchg
fs
and
sub
mov
push
add
sub
lahf
stc
xchg
nop
lods
fwait
rcrb
fs
aaa
or
js
das
rcll
dec
pop
and
push
test
sti
aas
insl
dec
sbb
xchg
mov
jl
cli
xchg
mov
mov
int
mov
or
mov
incb
gs
inc
pop
and
mov
add
mov
cmp
dec
mov
jg
cmpsl
aad
pushf
cltd
nop
arpl
mov
or
xor
push
insb
mov
incb
sub
addr16
pop
movsb
sti
aam
dec
add
in
lret
stc
dec
jae
mov
adc
sub
adc
sti
jae
push
sbbb
fiadds
dec
pusha
xorl
sbbb
lods
rcll
sahf
push
add
xor
xchg
mov
divb
add
and
jle
out
in
mov
xchg
shlb
jle
in
cmc
popa
inc
xor
loope
mov
cwtl
scas
nop
lea
leave
xor
out
ret
stos
xchg
pop
repnz
add
mov
dec
and
addr16
push
imul
sbb
push
rcrl
sbb
dec
and
aas
xchg
push
push
pop
fimull
xchg
xchg
insl
daa
jne
int3
call
push
nop
jp
ret
out
cmp
sbb
xchg
dec
push
cmp
cs
mov
test
sub
inc
jo
pop
mov
jp
push
leave
pop
add
push
icebp
int
dec
add
mov
leave
xchg
pop
adc
aam
bound
mov
jle
adc
rol
sbb
lea
mov
popf
andb
addr16
test
lock
sub
leave
adc
cmp
xor
cmpb
insl
dec
xchg
int
imul
test
or
addl
test
xor
lock
push
jp
xor
mov
push
push
shl
xchg
xorl
cmp
sbbl
sub
mov
jae
mov
sub
cmp
and
sti
cmp
adc
xchg
lahf
mov
mov
xchg
pop
mov
jnp
fildll
test
pop
adc
aaa
in
mov
jnp
push
sbb
leave
or
cmp
clc
sbb
and
mulb
sub
mov
push
and
and
ss
dec
cmc
cmc
sub
shr
or
sub
fsts
adc
sahf
push
xor
jae
pop
mov
cmp
xlat
mov
and
cmp
call
enter
sub
inc
and
sub
enter
add
test
popa
dec
pop
jb
mov
xor
pop
mov
jmp
movsb
loopne,pn
push
xchg
aas
mov
xchg
fidivrs
and
adc
mov
daa
pushf
mov
and
imull
enter
pop
stos
lods
xchg
sub
lret
xchg
cmp
inc
jmp
ljmp
js
cld
cli
iret
bnd
in
fadd
cmp
mov
inc
mov
psubusb
test
push
repz
pop
pop
mov
jnp
add
fbld
iret
lret
pop
stc
loop
inc
imul
sbb
mov
rolb
lahf
out
add
addr16
mov
and
stos
add
or
clc
pop
or
push
bound
xchg
cmp
stos
iret
xchg
in
fucomi
int3
call
stc
filds
rcrb
rcr
fs
fmul
shll
repnz
loop
sbb
gs
mov
pop
xor
xorl
push
sahf
push
aas
push
ffree
bsr
icebp
mov
insb
out
push
sbb
mov
jae
insl
outsl
testb
daa
dec
mov
sti
jle
sub
movsl
jbe,pn
mov
in
fistpll
mov
add
in
lea
mov
xchg
dec
mov
mov
daa
aas
inc
imul
movb
ds
lds
aad
xor
xchg
inc
xor
inc
sti
add
add
jbe
mov
xchg
lea
cmc
enter
in
lods
jmp
les
lcall
loop
inc
cmp
test
icebp
jg
test
pop
mov
fstpl
clc
fcomps
aas
push
fwait
nop
fstpl
sti
imull
xchg
sbb
push
loopne
sbb
fistl
pop
in
sbb
xchg
or
mov
push
lods
ds
shl
rclb
and
sub
in
int3
lods
pop
inc
fs
clc
int3
cmpsb
dec
dec
xchg
inc
call
dec
mov
inc
out
and
cs
cmp
adc
fwait
lock
adc
xchg
in
add
mov
sarb
xchg
mov
jnp
cli
daa
push
sbb
or
xchg
lahf
inc
lea
out
lahf
call
iret
es
sub
in
aas
xorb
pop
or
mov
aas
cmp
ss
jns
aaa
les
insl
dec
push
and
fdivrl
sbb
ret
mov
pop
scas
call
mov
into
leave
ret
movb
inc
mov
test
cmp
or
xchg
call
ss
pop
out
lods
mov
inc
add
leave
loope
xor
cmp
mov
cmp
shr
dec
inc
jb
pop
cmp
lods
sbb
mov
mov
call
rcrb
fsubl
jmp
scas
ror
stos
and
xchg
adc
repz
adc
dec
adc
scas
sub
xchg
add
push
ficomps
mull
cmp
mov
clc
mov
out
push
sub
dec
or
or
insb
in
pop
push
mov
push
enter
xchg
mov
fxch
faddl
stos
shrb
dec
sbb
sahf
ja
cmp
arpl
cmp
adc
enter
mov
or
dec
subl
sbb
sub
dec
dec
int
mov
fnsave
addr16
push
nop
push
jg
inc
pop
pop
stos
mov
sbb
sub
push
ret
in
cmp
pusha
xchg
stc
movsb
jo
push
repz
mov
cmp
add
and
mov
mov
ja
into
or
lcall
jmp
fidivrs
in
sbb
cmpsl
xchg
cmp
sahf
xchg
cmp
lods
iret
pop
xchg
mov
sub
test
lret
push
xchg
push
cmp
and
into
int
inc
insl
mov
in
jne
jecxz
jecxz
hlt
stc
mov
add
add
mov
mov
jmp
cmp
fidivl
clc
clc
adc
loop
ja
fldenv
movsb
addr16
or
icebp
sub
push
rol
insb
sub
jbe
les
movsb
imul
cmpsl
pop
shlb
xchg
add
loop
mov
sbb
and
lret
add
xchg
xor
and
xlat
sbb
jo
and
pop
popa
xor
movsl
les
jmp
adc
mov
lea
push
and
rcll
lret
mov
jbe
jbe
xlat
inc
mov
pavgb
xchg
mov
or
ret
movsb
outsl
jge
call
mov
mov
pop
rclb
nop
xor
rcll
scas
inc
fucom
jbe
rolb
mov
pop
inc
popa
dec
mov
jle
mov
cwtl
and
es
movsb
lds
loope
adc
repnz
shll
sbb
push
push
mov
xchg
mov
daa
jmp
xlat
xor
aam
test
pop
jmp
out
or
xlat
jle
cs
pop
das
pop
fists
popf
mov
lahf
jae
icebp
cmp
jp
lds
xchg
xchg
das
jns
sahf
mov
insl
and
sbb
push
lret
out
mov
xor
aam
xor
loope
mov
jg
int
adc
mov
movsb
sub
cmp
dec
push
add
push
cmp
fisubl
jle
sub
out
aad
sub
fsubl
orl
xchg
xlat
jp
lea
and
adc
jae
pop
pop
out
xchg
iret
jl
mov
aam
sbbb
sbb
mov
arpl
xor
mov
cmpsb
je
daa
cmp
inc
xchg
inc
mov
aad
ds
popa
ficoml
and
cwtl
ds
dec
xorl
xor
dec
clc
or
aam
mov
xchg
push
in
dec
cwtl
clc
cmpsl
cmc
mov
stos
xchg
lret
arpl
data16
and
lds
xchg
mov
iret
cmp
sbb
lret
dec
popa
dec
insl
hlt
xchg
enter
mov
xor
push
and
mov
jg
and
fidivl
lods
hlt
sarl
cmp
jo
outsb
in
divb
mov
xchg
lock
dec
mov
maskmovq
imull
cmp
hlt
insb
pop
xor
fsubr
mov
arpl
sbb
mov
adc
pop
add
lret
jp
sub
aad
inc
pop
cmpsl
loope
stos
mov
loope
iret
push
xchg
into
aam
addr16
or
jp
jno
into
cmp
stc
pop
pop
add
inc
cmp
pushf
xor
push
xchg
in
ljmp
mov
jl
rcl
jle
test
fildll
sbb
xchg
xchg
stos
dec
aad
test
lret
pop
jb
push
add
jmp
scas
adc
xchg
cmp
mov
sub
adc
movsl
jnp
lods
jecxz
jnp
stos
scas
pop
jnp
pop
push
ficoms
hlt
dec
mov
in
sbb
mov
lds
push
stos
xchg
pop
or
divl
pop
scas
cli
imul
mov
fs
adc
mov
loop
ficomps
ficomps
arpl
mov
pop
enter
call
cmc
cmp
dec
pop
cli
push
shrl
bound
and
arpl
inc
xchg
por
push
popf
push
icebp
mov
cmp
jge
sub
cmp
divl
cld
int3
mov
gs
icebp
mov
in
cwtl
sbb
xchg
aas
loop,pn
arpl
push
jb
or
sub
pop
iret
pop
push
pop
jge
xchg
gs
ret
and
out
sbb
test
in
loopne
fdivs
lcall
cs
popa
aas
inc
xchg
inc
orl
pop
mov
jecxz
test
js
lahf
lods
repz
stos
out
mov
mov
push
push
sbb
lods
adc
int
jno
dec
xchg
loop
int
push
out
lret
data16
sub
mov
lcall
popa
inc
inc
outsb
push
jp
adc
fsubrp
leave
pop
push
xchg
movsb
pop
dec
mov
adc
rep
pop
and
insl
cmpb
test
test
mov
addr16
aad
leave
dec
push
xchg
inc
dec
dec
insb
cltd
fstp
pop
ret
fwait
cmpsl
cmp
push
pop
xchg
pop
daa
xchg
sbb
out
flds
push
int
cli
sub
or
test
and
mov
enter
rorl
mov
inc
clc
sbb
addl
adc
dec
dec
mov
sbb
add
add
pusha
mov
sarb
in
test
sbb
push
pop
mov
fwait
jle
sbb
fnstenv
xor
xor
or
jno
mov
in
push
dec
out
fsubs
movsl
pop
push
fsubrl
mov
lock
mov
cli
mov
dec
jge
inc
ret
jl
or
xor
test
ds
sahf
jae
inc
inc
sti
mov
clc
jb
pop
decb
or
jo
idivb
lock
cmpsl
cmp
sub
add
dec
jmp
fs
mov
lods
cmp
mov
and
scas
sbb
cmp
push
call
or
mov
fnstsw
ficoms
dec
mov
jge
dec
cs
xor
mov
aad
jb
push
inc
pop
adc
adc
icebp
sbb
dec
fwait
cmp
scas
jecxz
xor
jmp
sbb
lea
and
imul
jae
cmp
sbb
xchg
xchg
pop
stos
cmp
cmpsl
sahf
sub
dec
pop
mov
xchg
stc
ss
xor
shll
dec
push
dec
cs
and
sub
insl
je
loop
fwait
push
xchg
in
mov
add
aaa
imul
jl
and
push
and
mov
mov
repz
push
adc
xor
bound
lods
inc
or
ret
pushf
jno
pop
rcll
xchg
outsb
mov
add
push
movsb
jge
in
ljmp
mov
daa
or
sub
es
into
adc
ficoms
shll
fsubl
cmp
adc
inc
dec
data16
pop
and
enter
sbb
cwtl
fdivr
mov
fildl
mov
push
sub
ljmp
jno
fcomps
scas
sbb
lods
add
mov
frstor
jle
nop
arpl
push
imul
cmpsb
sub
iret
lahf
xchg
pop
bound
adcl
jp
scas
xor
adc
push
jle
sub
test
jmp
push
push
das
jb
lods
xorl
mov
xor
adc
idivb
and
in
das
xchg
insl
in
push
aaa
cwtl
js
sbb
sub
jmp
inc
int
sub
xchg
and
out
aaa
push
push
adc
xor
xchg
js
ljmp
clc
inc
shll
lea
dec
and
fwait
and
xor
fmull
fnstenv
mov
mov
fimull
andl
xchg
add
rcr
fwait
jbe
outsb
mov
hlt
lea
mov
mov
int
jnp
adc
movsb
xor
jmp
in
xchg
push
add
lds
std
mov
inc
cmpsl
scas
mov
cmp
jp
lcall
leave
adc
sbb
cwtl
and
pushf
sub
dec
inc
jg
pop
fwait
add
and
mov
cmp
jo
imul
mov
mov
fldcw
popa
pop
jecxz
or
push
out
mov
call
rolb
lock
hlt
fcmovbe
jbe
pop
cmp
ja
cmp
dec
push
rolb
lock
lock
js
mov
sbb
das
cmp
shl
dec
aaa
sbb
aad
fldcw
aas
dec
xchg
mov
jmp
cmc
subl
mov
mov
fnstcw
mov
pushl
hlt
xor
imul
enter
es
imul
popf
jg
cmp
cmc
psrlw
or
les
mov
sub
xlat
pusha
cmp
sub
dec
push
or
lods
daa
xchg
sbb
push
scas
in
mov
or
xor
nop
add
pop
jnp
add
inc
add
loopne
fdivrl
inc
xlat
push
icebp
mov
loopne
xchg
pop
add
xchg
push
fsubr
push
adc
lods
dec
push
cmp
xchg
cwtl
in
fisubrl
xchg
adc
xor
ficomps
cwtl
arpl
cld
inc
arpl
lret
mov
sub
in
and
icebp
ss
sub
push
scas
mov
popf
int
sub
std
and
sti
jp
iret
sbb
scas
jbe
pop
lret
insb
mov
lods
lea
lret
pop
leave
shll
push
mov
mov
pushf
cltd
xchg
and
xor
push
jecxz
mov
addb
test
push
ljmp
imul
push
sub
dec
xchg
out
fsubs
popf
push
jecxz
mov
inc
pushf
push
and
and
cs
ljmp
push
cmpsb
pop
pop
adc
fwait
xor
mov
out
mov
xchg
push
cmp
lods
mov
xchg
ds
cli
in
sbb
int3
rcll
enter
dec
mov
pop
pop
scas
into
mov
adc
xlat
out
add
lods
inc
in
in
add
insb
lock
lea
lret
popa
jle
mov
insl
push
xor
and
fistpll
jmp
add
scas
inc
cmpsb
in
cmpsl
or
ds
call
adc
dec
pop
xchg
into
pop
xchg
pop
lock
stos
mov
cmpsl
fcomps
mov
cmpsl
fidivs
jbe
stos
xor
test
mov
scas
sub
stc
jb
lea
ret
lods
fnstsw
pusha
pushf
jnp
cld
leave
aaa
lock
mov
es
data16
aaa
aas
out
push
adc
in
aas
push
push
or
jno
mov
je
dec
cmp
fiadds
xchg
int
jle
aaa
jl
mov
mov
fnsave
cli
sub
call
call
and
imul
jbe
sbb
sub
dec
insb
fisubl
andb
sub
rcrb
in
rolb
in
push
xor
xchg
iret
data16
and
jle
inc
dec
dec
xchg
or
push
sub
pop
sbb
fwait
idivb
je
lcall
push
sub
hlt
xchg
dec
aam
xor
lcall
xor
cs
iret
mov
xlat
and
jb
mov
push
fistpl
sahf
mov
icebp
scas
lods
and
sub
fucom
fwait
cltd
ret
fwait
ljmp
fs
push
pop
mov
adc
lahf
sub
jns
xor
scas
or
insl
lret
add
cld
ss
xlat
pop
and
hlt
xchg
cmp
adc
test
movsb
mov
dec
pop
ss
or
fisubrs
mov
rcr
pop
mov
clc
push
gs
sub
xor
mov
iret
cli
fistpl
sbb
xor
pop
leave
or
js
add
stc
bnd
callw
push
test
dec
mov
mov
sbb
xor
mov
ficomps
dec
aam
sub
xchg
fstps
addr16
pop
das
bound
ret
mov
pop
add
hlt
sti
mov
pop
dec
inc
cmc
pop
inc
iretw
nop
sahf
or
lods
cmpsb
lds
xor
fs
lcall
mov
push
adc
mov
xchg
or
cli
in
fsub
dec
mov
adc
push
es
dec
clc
adc
iret
pop
iret
outsl
lret
xchg
scas
push
mov
cmpsb
and
pop
pop
add
test
dec
xchg
mov
lds
dec
dec
xor
adc
add
cli
pop
sub
push
mov
sub
pop
mov
mov
mov
mov
insb
and
ficoml
rcll
insl
sbb
leave
mov
leave
dec
cmp
xchg
inc
lods
and
push
dec
cli
push
ljmp
lock
pop
gs
add
dec
imul
and
popf
inc
xor
movsl
sub
cltd
loope
pop
fcompl
inc
fistl
mov
inc
arpl
imul
test
push
mov
in
adc
dec
cmp
repz
mov
xchg
dec
pop
mov
push
imul
pop
push
testl
icebp
sub
cmp
cmp
in
dec
xor
clc
pop
js
mov
insl
lcall
outsl
sarl
cmp
and
pop
and
pop
mov
jg
fnstenv
xchg
add
ret
or
xor
js
shrl
loope
imul
iret
cltd
int3
xchg
jae
mov
jmp
mov
repz
pop
outsb
lret
jle
lahf
aaa
cld
add
jnp
cli
and
mov
adc
std
add
mov
add
adc
push
les
pop
or
insb
rcl
cli
in
ffreep
pop
mov
mov
fsts
cmp
aas
mov
pop
mov
mov
sub
fisttpl
sbb
in
ret
add
mov
adc
cmp
mov
xchg
and
call
sbb
mov
leave
inc
test
loope
mov
mov
push
push
dec
pop
mov
call
fstpl
mov
dec
call
xchg
hlt
push
xchg
cmpsb
push
inc
add
rcl
cmp
pusha
addr16
ret
adc
out
mov
xchg
sbb
jl
popf
sub
pop
mov
fistps
ficoml
mov
adc
mov
push
or
mov
imul
xchg
inc
sub
lcall
js
cs
jmp
and
push
adc
fldcw
ffree
inc
icebp
mov
xorb
add
call
cmpsl
jbe
int3
adcb
outsb
frstor
mov
mov
pop
lock
shlb
adc
test
or
sub
iret
clc
adc
fldt
lret
ret
lret
lods
mov
in
adc
xchg
stc
adc
inc
pop
xchg
insl
sbb
pop
mov
aas
leave
mov
jns
sti
mov
inc
mov
sbb
dec
sbb
cmp
cmpsl
scas
fucom
cmc
sbb
jnp
in
lahf
das
adc
add
test
push
jl
ret
mov
xchg
inc
in
daa
pusha
mov
and
pop
sbb
mov
mov
sahf
in
jge
sahf
in
test
mov
push
aas
std
mov
lds
sub
scas
xor
aad
xor
xlat
lods
jbe
daa
jae
mov
lods
out
dec
popf
xor
mov
push
shrl
clc
cmpsb
push
add
inc
movb
add
push
movsl
int
push
nop
jg
insl
test
lock
orb
test
mov
and
and
push
popf
cmp
les
out
aas
push
mov
and
sti
sub
repz
xchg
push
sub
adc
aad
fdivrl
cmp
fs
mov
mov
andb
inc
xchg
xlat
jecxz
imul
insb
jl
push
stos
test
mulb
in
mov
pop
dec
or
ljmp
js
aad
into
mov
or
mov
leave
loopne
and
repnz
dec
testl
scas
add
scas
pushf
mov
lahf
xchg
mov
and
test
sub
ja
inc
nop
and
pop
sub
mov
dec
xor
cmp
sub
scas
iret
jle
or
sbb
jb
mov
mov
xchg
jle
mov
hlt
pop
add
fwait
mov
arpl
mov
xor
pop
push
cli
jbe,pn
adc
mov
pushf
pop
lret
out
movsb
add
and
cltd
outsl
fdivs
outsb
inc
and
fs
or
orl
mov
or
lods
lcall
push
sti
jno
add
inc
mov
out
pop
mov
imul
jmp
cs
adc
sub
mov
push
aas
mov
mov
sti
mov
inc
iret
fwait
mov
loope
mov
je
cmp
mov
xor
decb
push
mov
and
pop
push
mov
and
dec
into
pop
test
lret
sub
mov
cmp
or
mov
dec
cmc
in
cwtl
test
fdivrl
int
mov
lea
inc
sti
js
push
push
jecxz
sti
mov
testb
in
jnp
add
xor
push
push
stos
dec
out
hlt
pop
pusha
idivl
mov
cmpsl
mov
cmp
pop
aad
lahf
push
scas
add
lahf
xor
push
mov
mov
pushf
and
hlt
data16
lcall
jbe
cld
xor
xlat
mov
les
adc
xlat
push
mov
dec
add
test
adc
test
out
in
jl
stc
pop
in
mull
cld
in
push
push
movsl
mov
and
les
cmp
clc
clc
sbb
js
rorb
mov
xor
sbb
and
ja,pn
dec
xor
mov
lahf
ficoml
fildll
fstps
loop
inc
mov
push
movsl
dec
pop
or
leave
jecxz
dec
aaa
sub
cmp
in
stos
aad
dec
lahf
jmp
std
lret
jmp
adcb
xchg
xchg
imul
sub
les
pop
adc
fdivrs
mov
xchg
xor
ret
mov
cli
xorl
dec
js
cmp
fs
fsub
mov
in
sub
ret
repnz
lds
test
xchg
and
test
filds
inc
inc
mov
pop
push
xor
sti
ljmp
jp
lock
sub
out
insl
mov
inc
aaa
inc
mov
lds
je
rclb
adc
sub
in
inc
int
add
adc
push
dec
and
fwait
std
push
push
sbb
out
mov
jecxz
fs
stos
scas
push
popa
dec
jle
scas
mov
mov
hlt
lcall
cmp
xor
push
mov
stos
stos
dec
jns
fnsave
test
dec
pop
sbb
add
xor
mull
mov
out
sub
sub
dec
test
cmp
push
mov
push
adc
adc
pop
push
hlt
mov
add
and
or
js
fwait
iret
fdivs
mov
xchg
stos
add
ja
jno
mov
xor
cmp
mov
clc
xchg
notl
fcomp
ss
inc
ficoms
mov
add
insb
sahf
add
out
testb
fistpl
adc
pop
push
enter
std
mov
jno
popa
dec
jmp
sti
mov
add
push
adc
and
test
and
std
mov
cmp
pop
adc
pop
mov
insb
cmp
dec
outsl
pop
test
fs
jmp
sti
int
call
lds
mov
or
and
dec
jge
mov
mov
cmp
neg
sbb
push
mov
dec
ja
sbb
inc
mov
or
inc
lret
add
fldl
sub
test
repz
movsb
cltd
inc
loopne
mov
lods
jae
cwtl
cmp
movsl
rcr
das
lds
jg
out
push
add
arpl
inc
jae
in
adc
imulb
jecxz
daa
insl
xlat
enter
jno
lods
jno
and
add
dec
mov
and
mov
hlt
jae
or
xlat
cmp
sub
aad
rcll
inc
pushf
pusha
inc
aaa
xchg
add
aam
cs
and
cmpsl
je
add
jmp
xchg
jmp
fwait
test
hlt
mov
aas
mov
jl
lcall
test
jmp
pop
sub
adc
dec
fstps
push
or
push
or
jecxz
jbe
xor
fwait
mov
cmp
sub
pop
pop
ljmp
xchg
push
test
int
nop
inc
push
lahf
and
jg
out
mov
cmp
test
or
push
mov
jae
aam
cld
cld
in
les
cmc
lret
xchg
sub
jp
inc
loop
aas
lods
lret
push
sbb
sahf
mov
jl
mov
xor
shl
sbb
or
pop
mov
fisubl
testl
imul
lret
jo
stos
in
popl
push
ficoml
bound
and
cs
mov
xchg
jae
xchg
add
push
mov
fs
push
loopne
push
arpl
lea
pusha
adc
sbb
or
inc
inc
sub
xor
add
pop
or
jge
movsb
mov
aas
pop
dec
cmp
aad
daa
into
or
cmp
divl
shll
xor
push
and
mov
clc
inc
ja
pushf
ja
mov
mov
lea
fs
inc
mov
es
rolb
jbe
cmp
mov
mov
and
mov
lahf
push
push
or
pop
sbb
jge
jae
add
xchg
mov
jmp
push
cld
push
lea
sub
cmpsl
and
jp
in
std
jge
sbb
les
fistpl
adc
add
jbe
or
fldt
jle
addr16
test
add
scas
jne
mov
mov
adc
out
mov
sbbb
sbb
cmp
and
adc
and
jo
inc
nop
sub
lock
or
int
adc
xchg
aaa
dec
cmpsb
jle
loop
lods
std
add
hlt
in
out
or
aam
jl
jne
or
stc
inc
repz
mov
and
leave
sahf
push
shl
out
jmp
xchg
jb
lahf
mov
rcll
sub
xchg
or
push
and
and
pusha
outsb
pop
movq
les
loop
movl
adc
repnz
jl
mov
sub
les
jo
out
pop
adc
insb
js
mov
ja
popf
mov
fs
icebp
cld
out
add
mov
inc
xor
pop
dec
fildll
jl
pop
subb
cmp
lcall
sbb
or
cltd
fdivr
insl
cmp
or
jg
push
cmp
cmc
and
ja
inc
out
push
les
fbld
pop
cmpsb
adc
imul
sbb
xchg
cmp
repnz
ret
mov
dec
cltd
int3
inc
sbb
mov
mov
daa
xchg
jno
ds
mov
mov
push
mov
mov
enter
ficompl
scas
fcmovnb
loopne
cmp
loope
xor
pop
or
ret
ret
jns
mulps
and
mov
inc
xchg
into
push
mov
jnp
inc
outsb
imul
pop
popf
repnz
adcl
jne
adcb
sbb
lods
mov
or
popf
inc
inc
pop
stc
mov
in
jns
and
xchg
das
xlat
xor
mov
shll
push
sub
mov
mov
stos
mov
push
inc
adc
call
adc
pusha
or
cmc
push
scas
popa
sub
scas
or
jle
add
mov
and
push
xor
adc
pushf
push
lret
sub
sub
push
sbb
cmc
int
sbb
mov
sti
out
cmp
and
lret
test
mov
and
push
and
inc
mov
bound
cwtl
cmp
ss
mov
xchg
pop
movsb
mov
cmpl
sbb
lahf
lds
enter
pop
xor
inc
jg
jp
icebp
pusha
loope
andl
pushf
out
mov
mov
iret
data16
loopne
jno,pt
adc
cmp
ja
mov
add
sbb
imul
idivb
xchg
push
fcmovnb
ja
cmc
adc
pop
fsts
roll
loop
ret
or
mov
lcall
jb
filds
enter
inc
shlb
xor
mov
inc
movsl
inc
push
jae
cmp
cld
popa
in
jg
pushf
sbb
int
arpl
or
sbb
push
dec
mov
xor
out
adc
mov
xchg
out
sub
jp
mov
xor
add
dec
push
ret
cli
dec
nop
sub
andb
mov
stc
inc
stos
dec
xchg
sbb
cs
pusha
sti
mov
dec
test
jne
test
pusha
mov
mov
xchg
jbe
sub
sub
jbe
sub
in
xor
sbb
xlat
push
sbb
rorl
xchg
inc
imull
gs
rolb
out
cmpsl
enter
loop
arpl
push
push
hlt
jmp
pop
dec
cmc
outsl
outsl
enter
popa
sbb
xlat
pop
imul
pop
orl
insb
lea
arpl
daa
aam
movsl
aas
dec
insb
add
xlat
dec
aad
hlt
movsb
jg
pop
lock
pop
add
aad
and
daa
adc
out
sub
xor
lock
cmpsl
cmp
xchg
push
xor
pusha
push
ds
fistps
enter
xor
mov
std
jmp
divl
sarl
push
leave
xor
sbb
jno
mov
cs
push
ss
push
loop
ds
lods
lds
dec
cmpsb
and
dec
aaa
pop
jno
mov
sarl
ds
push
inc
push
stc
imull
rcrb
adc
aam
mov
xlat
xorb
mov
cmc
fwait
pop
js
cmpb
and
push
push
stc
rolb
xchg
or
jbe
cmp
jmp
loope
and
pop
mov
pop
xchg
bound
cmp
jno
mov
push
cmp
out
nop
test
and
lds
lcall
or
sti
mov
out
clc
mov
inc
push
mov
jae
notb
sub
rcrl
cmc
or
sar
push
sub
nop
pop
inc
push
imul
repnz
or
add
ja
cmpsb
lcall
mov
xchg
adc
lods
roll
pushf
pxor
fidivrs
jmp
cmpl
mov
pop
out
cmp
dec
ljmp
jp
mov
stc
jp
mov
mov
xchg
fs
push
jno
cmpsb
lcall
pushf
and
xchg
jb
pop
jecxz
dec
xchg
ja
ss
inc
cmp
sbb
inc
rcrl
jmp
and
push
cmp
lcall
add
adc
mov
dec
and
dec
lea
mov
pop
cwtl
lods
lock
outsb
push
add
xor
lahf
mov
movsl
js
sub
push
ljmp
mov
sbb
testl
jb
cmp
mov
sbb
daa
fcomp
imul
inc
aaa
adc
sub
lret
and
add
test
sarl
jge
aaa
mov
xor
das
scas
or
sbb
divl
cmpb
mov
jp
fxch
push
leave
mov
cwtl
jmp
pop
mov
stc
jg
xchg
das
jne
sbb
imul
pop
mov
cwtl
mov
adc
loop
adc
data16
out
js
stos
jno
xor
jl
add
std
push
pop
inc
mov
sbb
into
xchg
jmp
mov
mov
imul
or
shl
pop
imul
adcb
divl
cmp
pop
jg
pop
icebp
fs
adc
dec
cmp
jns
pop
vhaddpd
mov
cs
xchg
dec
cs
mov
mov
pop
ja
pop
mov
insl
lock
and
add
scas
mov
cltd
jb
inc
lret
jmp
je
and
stc
pop
cmpsb
and
mov
cmp
push
mov
mov
mov
adc
loope
fisttpl
ficompl
cli
aam
mov
mov
xor
ds
adc
pop
mov
pop
jle
imul
mov
add
xchg
mov
repnz
outsl
push
fidivrl
inc
subl
insl
test
std
mov
xchg
and
lcall
mov
rorl
pop
dec
mov
leave
jge
rolb
mov
and
std
mov
sbb
insl
cmpsb
xor
jbe
pcmpeqb
mov
cmp
aam
mov
outsl
out
fildl
les
and
mov
inc
jp
jl
arpl
jne
jnp
ret
pop
popf
xchg
push
and
pusha
inc
lods
and
stc
movsl
inc
adc
jne
imul
and
adc
enter
and
push
xor
jmp
addb
movsl
popf
xchg
sub
sbb
bound
pop
out
rolb
fs
cmpsl
test
push
xchg
popf
or
push
cli
je
jecxz
mov
ja
loope
pop
cmc
lret
sub
repnz
and
jg
es
sbb
bound
insl
fnstenv
sub
cltd
pop
xor
cwtl
adc
push
bound
loop
ret
les
inc
cmpsb
ss
sub
jg
jge
adc
lods
fstpl
and
mov
sub
mov
push
cmp
call
cli
cmp
aam
push
movsb
movb
mov
out
nop
dec
cmp
insb
mov
lock
pop
mov
fsub
mov
shrl
and
test
jnp
push
sub
bound
sbb
shll
jbe
test
sahf
sbb
dec
add
mov
sbbb
or
scas
cld
jae
push
jl
or
popa
mov
add
pop
test
jne
cltd
mov
lock
adc
jo
sbb
dec
in
popa
pushf
sbb
dec
dec
leave
negl
test
scas
arpl
movb
jb
inc
jb
adc
dec
mov
sub
movsb
add
or
dec
jne
xor
inc
sub
in
or
xchg
scas
gs
cmp
pop
shll
xchg
push
stos
inc
sub
popa
aad
adc
inc
dec
out
dec
and
movsb
sbb
mov
pop
or
dec
mov
cmp
test
in
inc
sub
in
or
insb
inc
loopne
pop
out
sub
pop
cwtl
add
mov
lea
sti
hlt
jmp
dec
inc
mov
out
xor
sbb
dec
mov
push
shr
cld
add
notl
es
adc
inc
cmpsb
jbe
xor
cmp
insb
hlt
mov
xor
popl
leave
dec
fs
and
dec
imul
lock
cli
nop
test
scas
rorb
mov
shll
hlt
imul
in
out
data16
fwait
push
cmp
mov
jo
xchg
imul
pop
add
in
loopne
fdivs
lods
dec
inc
push
fdivs
lds
sarl
push
sub
mov
outsl
sbb
xor
fxch
out
shrl
rcrb
bound
out
sbb
jp
pop
scas
js
cmp
scas
push
pop
call
out
rcrb
fstpt
sub
fimuls
lret
iret
test
popf
xor
test
cmpsb
dec
pop
dec
mov
jb
rorl
iret
enter
pop
dec
xchg
cmc
nop
jns
in
lcall
movsl
inc
adc
imul
dec
push
sbb
xchg
ds
mov
inc
lods
loope
mov
xor
pop
orb
addb
jae
jle
or
or
or
xor
xchg
pop
aas
adc
orps
pop
or
sbb
mov
xchg
xlat
cmpsl
cmpsl
add
aam
jnp
dec
nop
popl
das
push
es
scas
inc
repz
enter
jle
cmc
pop
mov
lock
test
imul
loope
xchg
and
aaa
jb
arpl
daa
loopne
fldl2e
aad
or
jl
pop
stc
jnp
or
push
add
leave
adc
cltd
rcll
filds
jno
lea
mov
xchg
int
cmp
push
push
xor
mov
in
incb
das
pop
cld
xchg
fisubl
push
jl
xchg
xchg
sbb
xchg
xor
and
out
popf
sar
aaa
mov
imull
imul
nop
push
xor
dec
mov
xchg
lret
push
adcb
mov
pop
jbe
and
push
adc
in
dec
jno
das
and
test
and
rclb
rclb
daa
push
add
xchg
aad
push
xchg
gs
js
jg
jo
fsts
arpl
sbb
jecxz
and
xchg
sub
mov
or
push
pop
sbb
cmc
or
out
xchg
sbb
aam
xchg
sub
jae
in
addr16
jg
sbb
stos
sbb
lea
add
int3
xchg
mov
push
insb
jp
pop
push
lret
xchg
out
shl
push
aad
std
das
sub
push
lcall
adc
xchg
popl
push
mov
ds
push
cmp
lcall
push
push
rclb
and
into
dec
cltd
sahf
pop
cld
and
jbe
lea
lret
push
hlt
pop
stos
add
pop
scas
rcll
xor
mov
mov
out
mov
add
add
imul
mov
dec
jb
fdivrp
ja
lahf
jns
popf
mov
stc
ss
push
xchg
sub
adc
pusha
cld
js
hlt
sahf
adc
test
arpl
pop
xor
clc
push
mov
arpl
rcrb
loop
mov
dec
inc
xlat
ret
dec
ds
adc
mov
inc
stos
dec
inc
adc
lahf
out
in
mov
into
lcall
jge
psubw
stos
aaa
lea
push
cmpsl
pop
aas
scas
jmp
cld
sbb
cld
xchg
subb
cmp
dec
cwtl
sbb
addr16
ds
or
das
lea
rorl
in
mov
add
mov
arpl
in
daa
mov
mov
mov
mov
insl
pop
jnp
xor
insb
mov
shl
sbb
hlt
jnp
loopne
out
std
pop
notb
push
mov
sbb
push
jae
fldl
pop
scas
sar
loopne
setle
jo
sub
das
mov
xlat
push
icebp
iret
nop
mov
negb
mov
hlt
fimuls
cltd
inc
mov
dec
aad
lret
mov
mov
jb
aam
insl
or
mov
enter
stos
mov
icebp
inc
int3
ficoml
xlat
popf
push
and
rolb
push
sbb
in
in
stos
pop
sbb
orl
test
arpl
push
dec
pusha
and
pop
mov
jle
and
push
inc
js
jno
xchg
cli
nop
sub
cmpb
scas
dec
jbe
push
dec
add
xchg
and
or
cltd
sub
js
xchg
cli
jo
cwtl
in
add
and
mov
mov
shrl
pop
sbb
sarl
aaa
icebp
cmp
sub
or
dec
mov
pop
mov
mulb
sub
lods
sub
push
fs
cmp
push
xor
mov
stc
movsl
aas
rcr
dec
pop
pop
aam
cmp
fs
inc
pop
push
je
aad
mov
mov
fadds
xchg
cwtl
xor
sbb
push
clc
dec
push
inc
push
mov
ficoms
iret
pop
test
cmp
js
and
mov
mov
mov
sub
andb
and
ficompl
insb
lahf
sbb
inc
gs
inc
push
aas
rolb
bound
ds
repnz
xchg
jmp
mov
mov
ja
aaa
and
lds
mov
gs
mov
in
push
dec
sbb
push
lret
repnz
cmp
cmpb
pop
cmpsb
push
lahf
jge
dec
xchg
sbb
das
xor
je
inc
imul
sub
iret
in
mov
mov
adc
or
cmp
xchg
nop
push
sti
add
addl
repz
or
push
mov
xor
xchg
std
in
mov
out
test
xor
cltd
pop
imul
dec
gs
lods
cs
bound
xchg
clc
add
std
ret
and
sub
addr16
xor
sub
xor
shll
inc
fcomps
movsb
push
xor
lock
and
or
add
dec
cld
sbb
xor
pop
mov
fwait
xor
push
cmp
adc
jbe
jnp
mov
loopne
ds
xor
leave
and
lock
mov
inc
inc
arpl
insl
mov
mov
mov
jl
cmp
loope
cmpl
sti
call
aas
or
gs
cmp
jge
mov
int
icebp
movsb
mov
imul
fnstenv
mov
rcr
addb
dec
test
cld
dec
addl
ja
mov
push
mov
or
mov
push
add
shrl
cmp
loop
mov
jo,pt
mov
adc
push
rolb
cmpsl
or
pop
andb
push
pop
push
jl
frstor
lret
mov
outsb
mov
push
insl
mov
decl
fnsave
mov
adc
inc
int
push
xlat
inc
and
or
ret
add
loop
imull
fs
or
jmp
push
jge
test
movsl
test
push
lods
popl
fwait
adc
je
mov
push
adc
pop
xor
dec
inc
stos
add
cmp
sti
popa
mov
adc
hlt
push
or
pop
or
dec
lcall
stos
scas
pop
xor
xchg
mov
add
imul
jecxz
add
mov
shrb
lcall
pop
hlt
add
imul
mov
stc
gs
aas
outsl
lock
fdivs
or
or
xor
xor
cmp
mov
cs
cmp
inc
int
inc
incb
adc
cmp
jp
jns
push
mov
adc
sbb
negl
jle
xchg
lods
mov
scas
es
push
cltd
ret
jecxz
jmp
push
scas
pusha
arpl
jb
add
jge
cwtl
or
shlb
ret
and
cmpsb
imul
fcomip
pop
mov
outsl
fbld
nop
shll
mov
movsb
jmp
ja
test
inc
ret
movsl
movsl
jnp
push
push
pop
jo
mov
mov
fsts
push
test
out
or
mov
dec
add
divb
cld
cmp
clc
xor
pop
test
xchg
rorb
push
js
mov
out
fistpl
xchg
push
sbb
mov
xlat
xchg
and
dec
add
popa
cmp
inc
scas
or
sub
pop
push
mov
xlat
cwtl
insl
movsb
outsl
pop
jmp
xor
mov
lea
lods
or
cwtl
xchg
adc
cltd
inc
cmp
clc
pop
mov
add
mov
mov
adc
sbb
mov
loope
ret
adc
ud1
fmuls
xchg
outsb
aad
push
lods
in
insb
dec
aas
mov
lds
sbb
outsl
or
sub
out
in
mov
and
dec
jecxz
sbb
adc
fnsave
bound
stc
int3
push
pop
fucom
mov
sub
out
test
mov
pop
jle
lret
ret
jno
je
sub
sub
test
add
in
jnp
insb
loope
fmul
das
sbb
jns
int
and
daa
mov
mov
dec
decl
or
sub
xchg
inc
cwtl
and
lret
aas
daa
adc
int
xchg
jmp
popf
stos
scas
stos
les
lahf
fidivrs
sahf
in
adc
in
jno
mov
sti
sub
cltd
lods
push
push
xorl
mov
mov
jmp
in
mov
xchg
test
mov
mov
jl
dec
ds
mov
pushf
cwtl
iret
mov
add
dec
pop
mov
lahf
inc
inc
aad
das
popl
ljmp
add
sbb
xchg
addr16
dec
and
mov
sbb
in
lea
cwtl
cmc
jb,pt
imul
lret
lret
sub
pop
jecxz
jne
das
xchg
insb
aad
into
xor
mov
bound
adc
push
mov
das
xchg
push
sti
fnstsw
nop
xchg
cmp
mov
push
cmpsl
mov
add
push
int
and
pushf
pop
mov
lret
ja
into
fidivl
jg
jno
push
adc
xchg
rclb
cmp
push
add
jo
xchg
stc
jg
push
das
cltd
or
cmp
jns
loop
cmpl
sbb
jl
fs
bound
cmp
rcrb
inc
mov
pushf
jp
push
fwait
stc
mov
ljmp
or
sti
rclb
sbb
xchg
dec
and
sbb
js
jne
dec
inc
mov
pop
pop
adc
jp
into
jne
pop
jne
or
jns
dec
and
pop
xchg
mov
fsts
outsb
ja
nop
roll
cmp
test
mov
imul
movsb
loop
xchg
adc
cmp
add
fs
mov
inc
jge
jg
out
int
or
dec
aas
add
push
in
cmp
mov
sub
addr16
jp
push
inc
mov
mov
xor
sbb
sbb
lods
test
jbe
cmc
push
xchg
flds
rol
cmp
or
inc
add
xchg
cwtl
ja
and
push
dec
jecxz
stos
rcrb
mov
push
notl
in
popa
add
xor
and
or
pop
xor
test
dec
xor
cmp
dec
orl
fadds
adcb
fsts
in
aaa
ja
int3
std
fisubs
fwait
loope
scas
stc
dec
sub
stos
orb
mov
jp
cmp
ds
adcl
dec
mov
sbb
loop
push
in
mov
add
movsl
mov
push
pop
and
mov
and
lock
jge
xor
or
cmp
pop
mov
daa
xchg
mov
cmp
and
cmp
push
fcomps
jbe
xchg
std
stos
add
enter
sub
jno
dec
sbb
jo
dec
aad
fwait
sub
addb
jb
mov
cmp
sub
and
push
aas
sub
mov
repnz
loop
dec
or
sub
lahf
cmp
cmp
ret
leave
nop
pusha
cltd
std
mov
or
jmp
xor
and
jp
enter
std
fbld
push
outsl
cs
sub
add
push
js
sub
inc
stos
lcall
sti
xchg
add
dec
nop
add
cmpsb
xchg
lds
add
xor
movsl
mov
jo
stc
cmp
push
out
jecxz
jnp
int
stos
push
dec
ret
cmpsl
dec
sbb
push
cmp
test
xor
add
imul
shll
dec
test
xchg
gs
roll
push
mov
nop
jnp
into
jns
mov
fcompl
xchg
andl
add
inc
adc
or
mov
jo
es
xchg
push
add
in
jp
cwtl
xor
mov
mov
pop
call
push
cmp
cwtl
jne
dec
sbb
or
ficomps
scas
sub
sbb
fidivl
push
jns
popa
decb
sbb
orb
push
movsb
pop
hlt
fisubl
jnp
add
shlb
jnp
in
xor
mov
js
mov
das
mov
popa
xchg
jmp
dec
mov
pop
jmp
xchg
out
dec
scas
and
xor
mov
dec
jbe
push
adc
loope
les
jno
lods
or
dec
sbb
inc
inc
cmp
shll
jb
aas
inc
mov
cmc
push
rcr
cltd
adc
mov
jge
js
movsb
lods
lds
ret
xchg
jmp
out
mov
add
jo
imul
fisubl
push
out
or
mov
push
in
les
cmp
jbe
test
jnp
jnp
pop
and
or
add
push
aas
cmp
pushf
sbb
adc
sti
lret
or
xchg
call
nop
dec
xchg
xor
jb
cmp
insl
stos
notb
pop
push
sarl
sub
mov
ret
imul
sbb
mov
xor
imul
push
test
out
dec
fisubs
pushf
push
into
repz
lods
aaa
jno
mov
in
xchg
jge
pop
push
xor
lea
sub
sub
adc
or
adc
or
pop
lods
mov
jge
fisubrs
hlt
lcall
xor
rolb
mov
cmp
sbb
aam
cmc
mov
mov
dec
popf
jns
js
sub
std
iret
ja
sbb
aam
pop
push
gs
mov
mov
pop
lret
cwtl
sub
or
pop
fs
cmp
add
add
push
cs
daa
push
stos
scas
adc
nop
sahf
imul
addr16
jbe
bound
push
add
sub
fstl
pop
xchg
test
fwait
inc
sbb
pop
mov
push
clc
inc
in
mov
mov
and
ljmp
jmp
mov
jo
or
push
sub
push
add
and
sbb
add
popf
dec
adc
inc
out
xor
sahf
jl
mov
jnp
cmpsb
jl
xor
lcall
into
and
or
frstor
add
inc
test
inc
jo
sbb
jae
jecxz
adcb
cmp
sub
imul
shlb
add
pop
mov
xor
sbb
push
out
pop
or
push
mov
xor
xchg
mov
insb
jbe
pop
sub
mov
cwtd
jo
outsb
xlat
jae
push
cmp
es
das
shll
movsl
je
in
nop
and
andb
das
or
inc
mov
dec
xchg
ret
repnz
ljmp
adc
in
dec
push
ljmp
xchg
cmpsl
movsl
clc
lods
loopne
mov
fs
rep
jno
push
in
add
jbe
mov
push
push
mov
xchg
je
bound
pop
cltd
stc
cmp
into
and
addb
lods
mov
in
aaa
mov
cld
push
jae
test
js
rcrl
or
loopne
loop
cli
sub
push
adc
pop
cli
add
hlt
mov
mov
andl
push
pop
inc
adc
xlat
in
mov
mov
adc
sub
jns
aam
and
inc
push
mov
imul
decb
rorb
lret
lcall
sub
pushf
insl
mov
dec
movsl
mov
pop
decl
rclb
dec
bound
js
sub
xchg
shr
cmp
mov
xchg
repz
and
dec
mov
lods
sbb
mov
mov
sub
jne
sbb
bound
cmpsb
pop
rol
and
adc
fistpl
or
out
mov
sub
arpl
xlat
or
sub
xchg
cmc
dec
pop
sbb
mov
xor
pop
ds
sbb
in
xchg
push
int3
or
bound
in
xchg
jge
shll
ret
stmxcsr
mov
stos
cmp
fmul
lret
cmp
std
xchg
or
mov
aaa
mov
loope
xlat
inc
add
add
xchg
push
dec
pusha
sbb
or
ss
fnstsw
pop
xchg
and
rcrl
inc
sti
inc
push
stc
mov
dec
push
push
mov
lds
popf
repz
mov
aad
pop
and
sub
jge
adc
push
fisttpl
add
mov
add
fcmovnbe
sub
xchg
mov
and
xor
mov
add
lcall
sub
int3
jbe
add
push
ficoms
jmp
and
xor
mov
xor
insl
jno
test
mov
add
mov
int3
mov
fistpl
mov
xor
xchg
stc
cmp
push
inc
bound
out
daa
in
adc
mov
adc
pop
xor
pusha
mov
sbb
test
aam
or
dec
daa
or
jb
mov
cld
or
lods
lret
jg
push
pop
addr16
stc
xchg
pop
testl
arpl
mov
push
mov
xchg
inc
inc
lock
mov
push
int
mov
pushf
cwtl
sti
repnz
xorl
bswap
inc
int3
jnp
jmp
ljmp
in
push
out
mov
stc
add
mov
push
pop
mov
ljmp
mov
test
push
sahf
sar
pop
mov
out
cmc
jns
jbe
jl
sbb
and
cmp
jbe
bound
cmp
push
lahf
and
mov
mov
jmp
xchg
call
jmp
add
cli
jb
push
insb
inc
in
xchg
xchg
pop
call
mov
pop
aam
aam
hlt
or
int3
ret
fs
hlt
sbb
xchg
stos
les
enter
imul
dec
xor
mov
jmp
sti
dec
adcb
das
jp
and
mov
test
mov
shlb
sub
je
or
jmp
xchg
stc
pop
in
sbb
rorl
xchg
and
jle
pop
test
addr16
into
into
subl
and
test
das
mov
sbb
leave
stos
push
or
xchg
cs
in
mov
test
mov
mov
sub
pushf
lret
mov
in
xchg
adc
call
jbe
and
imul
adc
pop
xor
cli
stc
rorb
mov
sahf
movsb
gs
push
xor
sub
lea
xchg
or
decl
test
or
mov
cmpsl
and
movsl
and
or
ljmp
int3
popa
or
dec
adc
xchg
test
mov
jge
jbe
loop
add
cmp
add
push
movsl
pop
adc
adc
shl
dec
outsl
cmp
hlt
repz
in
lock
pusha
mov
rorl
hlt
push
decl
fcompl
push
popf
lahf
jecxz
pop
sub
stc
aas
sub
imul
ror
sar
add
pop
xor
enter
test
addb
add
cltd
xchg
and
sub
or
xor
call
xor
ja
lret
mov
adc
dec
inc
ret
cld
fwait
iret
adc
jg
aad
cmc
sahf
ja,pn
mov
ret
ja
xchg
repz
push
notb
ret
mov
jae
xor
fldt
mov
jns
adc
nop
or
jge
add
push
mov
idiv
sub
iret
mov
add
repnz
jo
dec
dec
sub
rcl
subb
enter
std
in
sub
xchg
dec
mov
adc
xchg
enter
cmp
test
push
into
rcll
or
xor
in
pop
jl
mov
mov
cli
mov
sub
mov
xor
inc
xor
imull
cmp
dec
mov
push
or
pop
shrb
push
jp
dec
or
jae
pop
jns
jnp
mov
jbe
mov
dec
jnp
lods
stos
in
ss
iret
and
adc
sub
iret
inc
scas
rorl
int
dec
jl
in
jnp
pop
and
mov
jge
in
mov
test
or
xchg
sti
hlt
add
shrl
fmuls
push
in
mul
xor
sahf
fs
imul
xor
scas
mull
push
and
aad
fsubrs
pop
mov
aas
xor
add
push
loope
sti
loopne
rolb
jg
sbb
bound
xchg
nop
ja
movsl
xchg
insb
mov
stc
sti
jb
and
cmc
push
cmp
adc
cs
push
pop
adc
push
sub
loope
test
push
rcrl
adc
adc
ja
pop
xchg
fmulp
mov
sub
addr16
inc
mov
aam
adc
mov
push
call
icebp
add
adc
mov
mov
adc
mov
push
aam
mov
mulb
jns
popa
mov
scas
fidivs
stos
inc
sti
rcrl
mov
leave
add
ret
cmp
pop
sbb
xchg
xchg
shll
in
xchg
sbb
dec
ficomps
loope
mull
sbb
in
popf
mov
push
xor
cli
scas
and
insl
push
and
lahf
dec
adc
dec
inc
lds
or
in
mov
inc
cmp
push
imull
stc
aaa
dec
sbb
fldenv
sub
pop
adc
push
scas
mov
cs
scas
mov
dec
jb,pt
xchg
push
js
xlat
pusha
pop
leave
cs
cmpsb
pusha
movsl
or
inc
call
xor
jno
enter
xchg
ret
out
ss
sahf
loop
push
lds
pop
clc
pop
and
inc
pop
jbe
subl
nop
jmp
out
push
push
insb
jo
xor
xor
mov
dec
call
jno
data16
scas
push
leave
adc
mov
push
push
inc
dec
mov
pusha
mov
push
jo
pushf
inc
mov
cmp
out
sub
cmpsl
mov
inc
inc
mov
mov
push
mov
dec
test
push
xchg
stos
out
loope
into
iret
lret
aaa
mov
cmp
dec
xchg
pop
movsl
inc
mov
cmpsl
cwtl
inc
mov
mov
jmp
ror
cli
sbb
movsl
dec
fwait
gs
pop
aam
mov
sbbl
push
icebp
je
dec
mov
mov
cld
test
and
es
dec
dec
imulb
add
mov
pop
or
add
test
repz
pop
daa
jg
cmp
pushf
adc
aas
addr16
loopne
inc
xor
aam
mov
sbb
mov
xchg
xchg
mov
mov
sub
test
imul
addr16
mov
pop
cmp
lock
test
das
outsl
mov
stos
pushf
mov
stos
sbb
in
xchg
jecxz
adc
mov
add
inc
sub
mov
inc
and
inc
je
cmpsl
jae
aas
jne
outsb
and
jne,pt
out
leave
jecxz
adc
or
test
popf
xchg
cmp
lcall
pop
jns
adc
xchg
add
ljmp
test
pop
pop
aad
push
popf
std
xor
mov
xlat
stos
cld
xor
push
cmpsb
xor
pop
jae
inc
clc
jg
andb
xchg
xchg
adc
sarl
adc
jge
inc
and
mov
cmp
adc
hlt
adc
stos
sub
lock
push
gs
pop
popf
lcall
mov
cmp
pop
pop
sub
into
mov
pop
lcall
test
sbb
inc
test
sbb
in
std
and
dec
mov
stos
cmp
je
cltd
sub
in
int3
lahf
adc
test
xchg
add
jl
cs
pmullw
push
imul
xlat
or
lock
sti
sub
sbb
aaa
sub
es
test
cmp
add
push
cmpl
cmc
std
out
addr16
iret
cli
sub
fnstsw
in
push
and
dec
stos
xor
mov
lods
lcall
cs
fcomps
enter
inc
fildll
popa
mov
fld
cmp
cmp
and
les
mov
fmuls
jno
mov
jp
jecxz
push
and
imul
mov
mov
les
xchg
mov
push
inc
test
push
imul
sbb
mov
and
xor
and
cmpsb
cmpsl
insl
cmp
and
fcomps
repz
nop
orl
sub
ret
push
popf
sti
fistl
cmc
sti
xchg
lea
cmp
cmpsl
inc
pop
lds
mov
jne
mov
push
mov
lock
jnp
scas
movsl
jge
call
lds
mov
mov
push
jp
jb
popa
sbb
mov
inc
mov
fstpt
movsl
loop
ljmp
in
or
mov
cltd
aas
loopne
mov
xchg
inc
adc
stc
arpl
or
dec
xchg
cmp
jbe
push
push
pop
gs
sub
jno
push
and
rcpps
insb
xor
dec
mov
or
pop
int
or
jns
sub
test
adc
push
enter
repz
xchg
jbe
mov
in
es
mov
mov
movsl
xchg
ffree
out
fimuls
stc
js
dec
inc
sbb
outsl
sub
test
lret
imul
jbe
xchg
sbb
or
lret
pop
mov
andb
fwait
gs
and
cwtl
jmp
jmp
ljmp
leave
and
hlt
out
imul
outsb
out
cmp
pop
lcall
cmp
or
push
fadds
movsb
dec
shrl
ret
popf
mov
or
xor
pushf
incb
jge
sbb
push
jne
jns
pop
cmp
xchg
clc
stc
sbb
xor
adc
push
fwait
jle
fs
clc
jb
scas
test
xor
xor
stos
stos
dec
xlat
xor
and
add
fisubs
and
pop
mov
mov
jmp
call
mov
pop
movsb
sub
mov
js
dec
stos
scas
dec
add
pusha
fcomi
repz
lret
push
inc
jns
aas
push
inc
shl
and
loop
test
xchg
cmpsl
js
hlt
sub
faddl
aad
mov
pop
popa
andl
lret
mov
in
jo
test
xchg
and
jae
out
shl
xor
and
add
sbb
fistl
pop
aaa
adc
pop
lods
push
mov
pop
cmpb
adc
push
je
pop
sbb
hlt
push
cmpsb
and
mov
xchg
outsb
mov
test
cwtl
fdivp
mov
or
hlt
lock
dec
lods
pop
lret
push
lods
pop
call
mov
pop
aam
aad
gs
mov
jecxz
pop
pop
or
cmp
movsb
call
out
sbb
cmpsl
insb
lret
sbb
cmp
mov
and
mov
scas
cmp
cwtl
push
out
dec
jecxz
adc
push
inc
jno
and
sub
ret
mov
jbe
pop
fisttps
or
nop
fucomp
in
pop
lcall
adcb
pop
sub
mov
sahf
popa
clc
das
das
shlb
xor
stos
push
sbb
mov
dec
and
fiaddl
adc
scas
pop
stc
inc
stos
fnclex
and
xchg
iret
adc
sub
xor
dec
xchg
mov
jp
cmpsb
xchg
mov
mov
imul
notb
mov
mov
xorl
hlt
shl
test
aas
and
xor
and
add
out
jae
out
push
jmp
cltd
add
cmp
mov
pop
sbb
sub
mov
jl
jbe
out
in
stc
aam
mov
push
in
je
and
sbb
scas
in
cmp
outsl
mov
mov
push
adc
mov
test
dec
xchg
in
nop
or
push
or
leave
popf
push
mov
lea
cmp
and
repnz
xor
dec
scas
hlt
and
test
jae
or
shl
rcl
cmp
mov
pop
imul
jp
or
inc
hlt
mov
dec
out
rcrb
je
inc
inc
aad
call
aam
mov
out
rolb
mov
andl
test
pop
dec
push
jbe
clc
fiaddl
mov
cmp
pop
push
les
adc
xchg
cmp
xchg
add
dec
push
aaa
inc
nop
jo
mov
aad
imul
mov
ss
inc
add
jge
repnz
outsl
daa
in
js
pop
adc
ljmp
dec
lods
sbb
and
jno
add
and
sbb
mov
in
adc
xchg
push
mov
es
dec
popf
gs
and
mov
jecxz
int3
pop
xor
outsb
push
push
sbb
ss
jg
popf
fistpll
xor
adc
out
into
xor
adcl
cmp
push
fisttps
shll
adc
mov
repz
gs
sbb
sbb
sbb
mov
and
mov
dec
jp
pop
cmp
fistps
add
or
adc
fnsave
adc
fistpl
pop
jecxz
inc
inc
lret
mov
mov
dec
mov
inc
mov
pusha
or
pusha
dec
add
mov
popf
xchg
pusha
in
cwtl
jge
or
xor
mov
and
xlat
jo
test
sbb
sbb
push
outsb
les
sbb
add
jbe
xchg
sahf
cs
movsl
sub
in
xor
jae
loope
in
mov
loope
lcall
sbb
and
test
ja
xchg
xchg
sbb
inc
push
clc
cltd
je
fistpll
filds
test
repz
test
xor
mov
out
sub
adc
repz
lret
movsl
pop
jle
mov
xchg
lret
dec
dec
or
push
mov
lods
mov
lahf
mov
or
cmc
or
rcrl
out
fstpt
aaa
cmpsb
push
imul
jg
outsb
shlb
xchg
dec
stos
add
cmp
imul
in
mov
jo
iret
push
adc
sbb
and
pop
push
add
inc
xchg
iret
push
jne
mov
xchg
jmp
sub
jnp
sub
daa
leave
stos
pop
pop
xchg
add
repz
sub
adc
xlat
mov
mov
dec
pop
mov
popa
mov
insl
hlt
aam
pop
jbe
jg
and
push
stos
scas
sbb
test
push
cmp
out
jmp
jbe
push
int3
sti
inc
in
in
xchg
insb
bound
pop
fs
jns
jmp
mov
xor
aas
stos
sbb
pop
jecxz
xlat
dec
sbb
add
stos
add
icebp
mov
nop
add
add
inc
adc
xchg
add
mov
cmp
or
enter
fnstsw
shlb
jp
inc
jle
outsl
arpl
xor
bound
popa
sub
int
nop
rcrb
dec
nop
or
les
inc
sarb
fnstsw
data16
mov
imul
int
int3
cmc
imul
dec
dec
push
bound
fistl
jb
nop
repz
enter
xor
js
pop
decl
fistpll
sbb
inc
jge
and
or
daa
popa
mov
lods
inc
pop
or
push
sub
jae
jge
cmp
cwtl
mov
xchg
pushf
mov
dec
aaa
add
mov
or
inc
das
adc
push
mov
scas
xchg
sbb
pop
dec
dec
dec
and
ljmp
das
xor
hlt
jmp
jmp
adc
lods
or
pop
hlt
and
aam
mov
mov
js
rcll
das
lret
cmpl
xor
dec
sub
mov
mov
jp
pop
scas
pop
and
orl
in
ljmp
iret
lock
mov
mov
icebp
add
push
sbb
cld
jae
dec
outsb
jb
ss
sub
dec
and
pop
mov
xor
sahf
pop
std
call
mov
mov
dec
sahf
je
shrb
test
mov
sub
fidivrs
jle,pn
daa
inc
or
cmpsb
pop
lods
icebp
aad
jecxz
hlt
jg
push
mov
xchg
int
dec
jg
sbbl
adc
cmp
sbb
les
lods
cmpsb
mov
insl
icebp
aad
or
stc
cltd
pop
dec
mov
mov
xor
and
cmp
sub
or
stos
scas
adc
pushf
enter
mov
clc
adc
bound
push
inc
call
lahf
jg
jl
cmp
out
inc
mov
mov
ret
loopne
add
jl
push
mov
call
adc
idivb
xor
neg
mov
dec
and
shl
add
fldcw
jecxz
les
sti
in
incl
in
mov
ja
les
xor
dec
int3
out
mov
imul
and
arpl
scas
fistps
jne
push
ror
lret
fisttpl
pop
stos
int3
sub
mov
lds
shrl
sarb
add
lret
mov
icebp
cmpsl
jmp
js
arpl
jmp
and
or
and
xchg
test
negb
icebp
jg
mov
mov
pushf
push
push
xchg
mov
pushf
inc
ss
jbe
insl
push
aaa
notb
jmp
sahf
ds
rolb
sub
jne
xchg
or
stos
mov
or
int
or
rorl
cmpsb
jae
movsb
lods
dec
pop
jns
fcomip
sub
inc
xchg
aas
adc
scas
xchg
or
or
dec
cmp
dec
fidivl
xor
cmp
push
mov
jnp
sbb
in
and
shrl
ret
dec
cmp
mov
push
pusha
jns
inc
mov
stos
std
hlt
xor
pushf
dec
ret
jb
cmp
enter
in
scas
sub
mov
mov
push
cmpsl
cmpsb
xor
sub
adcl
add
call
cli
in
int3
xlat
pop
xor
mov
fildl
inc
jno
lcall
mov
add
adc
lods
mov
js
mov
aaa
out
and
test
aad
jne
cmp
xchg
jne
jle
push
in
or
xchg
xor
repnz
push
in
rorl
and
sahf
xor
push
push
fcoml
mov
mov
pop
iret
fnsave
xor
mov
test
sub
les
nop
mov
jno
sbb
hlt
les
sbb
sahf
pop
xchg
jnp
push
repnz
pop
push
xchg
or
xchg
das
rorb
dec
xchg
or
push
ret
mov
lcall
sarl
jecxz
jo
fwait
push
arpl
aad
pushf
test
mov
mov
xchg
nop
mov
xor
movsl
dec
add
jo
sbb
and
dec
fwait
cwtl
pop
cld
sbb
rcrl
xor
addb
addr16
mov
dec
xchg
sub
mov
cmp
daa
dec
xchg
lret
cld
cwtl
mov
imul
pop
call
adc
bnd
cwtl
mov
aas
rcrb
mov
fistl
dec
xchg
inc
sbb
add
push
insb
insl
cmp
aad
sbb
mov
lea
dec
inc
inc
sbb
cmp
push
sub
cmp
sbb
loope
sub
xor
popa
mov
and
and
jecxz
sub
push
and
dec
and
push
dec
mov
sub
jp
mov
adc
lret
into
ja
ret
into
dec
lods
push
push
fnsave
cmpsl
and
inc
cmpsb
cmpsl
jge
sub
sub
or
jbe
and
push
sub
iret
lods
add
fs
adc
pop
push
je
cli
sahf
xchg
lret
lcall
mov
rorl
je
shlb
daa
lret
adc
cmp
das
and
insb
cli
xor
pop
inc
inc
loope
mov
dec
mov
sbb
mov
dec
pusha
fs
add
cmp
lret
loopne
icebp
push
shlb
fbstp
push
mov
pop
mov
popf
sahf
and
lahf
setns
scas
dec
or
outsb
xor
sbb
fsubr
out
dec
inc
sahf
je
dec
rorl
or
cmc
jne
test
jg
xor
mov
inc
fdivrs
fsubl
data16
jnp
dec
push
or
mov
jg
cmp
shlb
cmp
or
mov
shlb
xor
or
imul
adc
lahf
jmp
cmp
push
cmc
andb
loope
ja
mov
aas
xor
dec
dec
mov
hlt
mov
mov
sub
jb
jl
pop
jge
dec
scas
dec
sbb
imul
stos
enter
cli
xchg
and
cmpsb
lds
test
imul
roll
xchg
jmp
jle
sysret
sub
shl
stos
in
jmp
sbb
mov
rcrl
in
outsl
and
outsb
cmp
out
mov
movsb
or
mov
cmp
aaa
ljmp
dec
cld
cmp
inc
mul
jmp
shll
movsb
pushf
cmpsl
arpl
mov
add
fldcw
add
pusha
push
negb
aad
ffree
stos
clc
aad
add
sbb
out
pop
xchg
cmovae
pop
mov
cmpsb
dec
lock
sahf
push
dec
dec
bsf
test
push
mov
fldenv
into
dec
fwait
push
inc
xchg
push
jg
loop
movsb
adc
fists
sub
inc
out
int
dec
fisttpl
mov
pop
add
filds
js
push
push
arpl
fnstenv
xchg
mov
rcr
in
por
leave
jns
js
add
jg
in
ja
jbe
mov
xchg
cmp
jmp
sbb
mov
sub
out
cmp
pop
inc
add
cmpl
mov
test
or
mov
pop
add
jg
notl
outsb
pop
pop
dec
fsubs
sbb
jno
popa
cs
fs
out
and
jae
inc
int
xor
or
xor
cmpsl
je
mov
jp
and
cmp
pop
lcall
scas
jg
addr16
jnp
push
cmp
mov
push
repz
xlat
and
jno
int3
icebp
xchg
pushw
adc
mov
insl
cwtl
jge
inc
xchg
es
int
add
sub
cmc
jl
mov
repz
jno
shlb
adc
jne
std
sbb
fwait
shrl
cmpsb
call
dec
pusha
aas
loop
lcall
jne
outsb
adc
pop
jmp
and
inc
in
jge
adc
mov
pop
int
push
decl
aad
add
inc
mov
mov
add
pop
pusha
mov
add
pop
test
cli
or
lods
jmp
inc
adc
cmp
xchg
jne
js
push
test
inc
lds
push
sub
add
cwtl
ret
add
inc
pop
push
iret
sarl
out
shl
sti
stc
ss
sbb
pop
fwait
outsb
aas
out
aad
in
dec
mov
jp
lea
push
mov
adc
adc
pop
jnp
push
jbe
das
hlt
pop
mov
imul
lahf
cwtl
and
aaa
jle
test
pop
jge
test
hlt
xchg
cmp
je
mov
mov
scas
enter
cwtl
cmpsb
hlt
and
mov
dec
repz
jecxz
xor
inc
andl
add
aam
pop
push
dec
clc
fidivs
or
inc
das
inc
pop
leave
and
and
pop
add
mov
sbb
push
dec
repz
jo
ss
xor
mov
cld
xchg
mov
dec
fistpl
mov
je
dec
popa
xchg
cmp
out
jmp
and
mov
sub
icebp
xchg
lods
push
shlb
mov
test
lcall
sbb
inc
pop
mov
adc
es
testl
insl
dec
push
dec
leave
ljmp
pop
dec
dec
inc
mov
cltd
rorl
mov
pusha
call
xor
or
fnstcw
imul
imul
pop
fcompl
jae
jecxz
fsubrl
repz
mov
add
jne
test
pop
dec
loopne
jp
insl
fldcw
mov
xor
call
mov
pop
mov
pop
out
mov
mov
dec
test
lods
lock
cli
and
out
mov
pushf
or
pop
test
jo
mov
jne
add
or
daa
cmpsb
mov
inc
and
inc
jo
adc
nop
stc
jo
cmc
sbb
add
dec
sbb
das
enter
daa
outsb
and
cltd
sbb
cmc
int3
inc
mov
xor
or
push
js
cmp
xchg
cmpsl
int3
loope
adc
js
or
inc
pop
or
rorl
sbb
and
inc
adc
cmpsl
daa
je
fwait
test
sbb
push
jg
push
xchg
cmp
pop
lret
add
shrb
shlb
pop
insl
xor
inc
sub
in
test
movsl
sarl
pop
fs
pop
inc
subb
adc
mov
jnp
mov
sub
popf
jle
xchg
cmp
aad
push
mov
divps
sti
lret
mov
xor
xor
push
sarl
dec
sbb
fildl
mov
pop
dec
adc
mov
mov
xchg
stc
xor
in
in
ret
xchg
ret
mov
bound
or
inc
scas
pop
dec
sbb
popf
jno
mov
mov
shr
in
jmp
inc
pop
ss
or
pop
sub
mov
aas
lods
xlat
pop
loope
sbb
push
lcall
xor
shll
nop
sbb
mov
ja
fisttpl
mov
pop
sbb
jne
inc
sar
pop
lret
loopne
mov
pop
adcb
cs
mov
inc
in
mov
cs
cmpsb
xchg
adc
jecxz
jp
addl
lods
pop
lcall
rcll
mov
dec
loop
in
mov
and
jns
xchg
mov
aaa
bound
jo
movsl
pushf
insl
jmp
movb
jo
pop
sahf
jmp
or
mov
addb
dec
sbb
add
sub
stc
popf
inc
and
es
fcompl
in
call
push
aas
icebp
arpl
jp
notl
popa
push
lods
clc
or
pushf
popa
mov
int
add
sub
jge
shll
enter
adcb
std
lret
sub
insl
xchg
cli
cld
mov
push
lea
repz
mov
rcll
idiv
pop
aad
icebp
push
repnz
jb
pop
add
dec
xor
addr16
test
mov
inc
push
call
scas
push
mov
xchg
test
lahf
dec
inc
inc
adc
loope
testl
mov
aaa
loope
xchg
sysenter
dec
inc
inc
and
jg
sbb
push
mov
aas
pop
add
or
fs
xchg
and
or
push
out
andl
es
pop
pusha
mov
inc
pop
mov
sbb
out
ds
insb
js
mov
jno
in
jae
jo
jno
addb
test
cmc
das
adc
dec
cmp
movmskps
clc
adc
jo
push
loop
adc
and
sarl
or
rcrb
cwtl
int3
mov
add
xor
mov
sbb
ret
test
dec
push
out
loope
lea
movb
push
into
mov
xchg
sub
movsb
dec
test
scas
xchg
aad
ret
inc
mov
ret
call
and
mov
inc
mov
in
xor
jns
and
lock
addr16
or
push
imul
in
vcmpsd
mov
mov
mov
fbstp
sti
xor
xchg
or
dec
data16
mov
dec
push
dec
mov
mov
test
xor
push
popf
in
test
push
sbb
lods
jmp
mov
incb
movsl
shll
jo
arpl
add
out
jae
and
lds
push
push
sub
pop
mov
lods
mov
adc
cmp
jle
dec
clc
cmpsb
or
das
stos
mov
or
push
mov
jnp
xor
pop
mov
je
dec
mov
mov
imul
daa
jnp
xchg
jp
cmpb
test
push
xchg
fsubrl
test
lcall
push
or
push
scas
roll
fsubs
mov
andl
dec
pop
xor
xchg
stos
or
pop
sbb
jmp
inc
lds
mov
gs
push
cmp
sub
les
popf
jge
movsl
sahf
push
jo
fsubs
fs
jmp
xor
pushf
push
fsubrs
bound
sbb
mov
pushf
xor
xchg
in
push
jecxz
sbb
ljmp
push
push
adc
pop
mov
adc
and
gs
lods
dec
sbb
xlat
pop
repz
cltd
aaa
pop
outsl
movsl
jnp
stc
sti
pushf
out
add
pusha
pop
or
push
sbb
out
lock
mov
cmp
mov
mov
shl
push
aam
inc
pop
flds
push
nop
pop
into
adc
jg
push
push
div
in
add
xchg
lahf
in
pop
fs
inc
cmpsl
add
or
jae
mov
mov
mov
arpl
jp
mov
std
addb
inc
stos
xchg
xchg
icebp
pop
sbb
adc
jg
clc
push
shll
xor
cmpsb
ret
in
fdivr
cmp
and
jno
sbb
test
jb
push
inc
cmp
in
stos
or
popf
jecxz
out
lods
cs
mov
xor
fmul
fs
lcall
out
test
sti
fnstenv
imul
xchg
fwait
out
dec
cld
outsl
test
clc
cli
dec
fnstsw
data16
out
daa
sbb
jge
dec
ret
sub
mov
jb
jl
jecxz
adc
loope
fucomi
pop
xor
cltd
movsl
lcall
icebp
adc
insl
dec
push
clc
xor
push
ljmp
jns
pop
adc
rep
adc
cltd
or
sub
mov
js
add
mov
ja
cltd
adc
push
shl
aaa
in
decl
push
decb
and
adcl
sbb
imul
data16
mov
lret
outsb
cld
fildll
rcrb
push
xor
rorb
mov
mov
mov
int3
or
arpl
xchg
jp
fidivs
std
pop
push
into
leave
pop
sub
lds
aam
in
out
pop
sub
shll
fistpl
repz
adc
and
mov
aas
fstpl
sbb
inc
mov
scas
xchg
mov
aas
or
js
jecxz
xor
push
jp
inc
sbb
in
sub
and
data16
out
sub
mov
lds
fcoms
jae
loope
nop
js
jmp
dec
jmp
fisubrl
int3
sub
cmp
dec
fnsave
out
xor
ret
aam
push
push
mov
push
add
lret
out
mulb
aas
rclb
push
pop
in
push
sub
jnp
push
add
lods
mov
movsb
repnz
pop
and
pusha
mov
nop
ffree
jae
and
and
inc
ret
xchg
addr16
nop
aaa
repz
nop
sbb
push
jb
xchg
jge
mov
stc
jcxz
dec
push
mov
dec
jne
ljmp
imul
shr
inc
or
jo
aam
sahf
dec
inc
ret
sarl
arpl
scas
std
add
mov
hlt
scas
xor
mov
aam
push
inc
das
shr
mov
fbstp
or
in
or
in
xor
xchg
adc
or
cmp
xchg
pop
dec
mov
lcall
scas
sbb
mov
bound
xchg
aaa
mov
je
es
mov
jl
jge
outsl
add
mov
jne
adc
nop
cmp
repnz
or
dec
testb
adc
clc
mov
lods
lods
push
cmp
and
sbb
pop
test
push
push
add
cmpsb
mov
and
push
fs
dec
aad
repnz
dec
cmp
mov
sub
sarb
inc
xchg
cmp
sti
enter
jecxz
pop
outsb
les
aaa
sub
pop
hlt
fsincos
adc
mov
cmpsb
stos
cmc
mov
jecxz
mov
inc
cmp
int
and
pop
mov
mov
pop
ret
jne
push
jp
and
into
xor
popf
das
xchg
xchg
mov
movsl
cmp
cmp
and
push
or
imul
inc
lods
nop
dec
fmull
mov
aas
mov
push
shl
ljmp
cmp
mov
popf
testl
add
jmp
cmp
mov
jecxz
call
push
fsubrl
movsb
xchg
jbe
add
scas
call
fs
xor
icebp
inc
and
fimull
sti
pop
or
ret
add
xchg
mov
addb
int
insl
cld
add
inc
ret
xchg
sbb
movsl
mov
cld
popf
ror
imul
test
stc
pop
inc
inc
icebp
icebp
in
fisttpl
xor
mov
pushf
or
xchg
sbb
shlb
xchg
sub
sub
adc
cwtl
sbb
pop
push
cltd
ret
jmp
pop
xor
fistps
cmpsl
pop
test
mov
mov
frstor
xchg
rclb
push
sahf
cld
push
lea
mov
lahf
xchg
dec
aaa
fcomip
clc
loop
jmp
hlt
mov
fldenv
or
xchg
jb
push
mov
cmc
push
imul
movsb
dec
inc
ret
push
cltd
mov
shlb
jle
imul
ss
ljmp
mov
push
sub
and
and
push
xchg
dec
cmp
mov
sbb
push
jae
push
cmp
sbb
fwait
add
jecxz
fbstp
adc
jno
xchg
jno
daa
filds
insb
int3
adc
aaa
or
scas
dec
cmc
pop
sti
cmpsl
jmp
push
daa
call
pop
repz
mov
mov
pop
push
push
jns
rolb
inc
cmp
iret
imul
rolb
mov
mov
ljmp
mov
fs
or
or
fistpl
or
sti
sbb
inc
xor
mov
outsl
loope
pop
push
sbb
xchg
nop
in
inc
and
addb
es
mov
jmp
inc
xlat
into
push
sbb
clc
pushf
sbb
and
inc
pop
sub
lds
arpl
imul
repz
mov
lret
gs
mov
push
dec
cmp
dec
mov
dec
dec
roll
and
test
aaa
fwait
test
mov
pop
loope
fildll
cltd
adc
pop
mov
or
fistps
xor
xchg
int3
or
sbbl
call
dec
mov
movsb
push
je
mov
scas
dec
jmp
xchg
jb
mov
outsl
daa
xor
pushf
cmc
insl
jns
push
adc
negl
inc
lds
test
pop
mov
pop
rcll
push
xor
cmp
jg
test
inc
sbb
les
cwtl
roll
adc
repz
mov
cwtl
arpl
or
inc
push
nop
mov
cmp
out
notl
cltd
ljmp
sub
test
xchg
es
test
fiaddl
dec
cmp
decl
aad
daa
sub
je
das
cmp
loope
arpl
outsl
fldt
or
or
inc
sbb
inc
repz
ret
daa
mov
je
pushf
fmuls
repnz
sbb
aas
inc
sahf
sbb
addr16
jbe
adc
inc
mov
pop
sub
mov
adc
xlat
push
cmpsl
std
inc
les
iret
test
out
push
ja
ljmp
push
push
push
sahf
fstps
cmpsb
sarl
icebp
clc
or
aad
faddl
out
mov
mov
loopne
fsubrl
cltd
pop
and
ds
fcmove
or
por
gs
pop
jmp
sub
inc
jne
mov
fucomi
insb
adc
jmp
insl
mov
sub
adc
sahf
dec
mov
lock
jle
or
nop
lcall
push
cld
fdiv
xchg
jg
cmp
xchg
ret
xor
add
ret
pop
or
insl
mov
movsb
test
add
or
insl
enter
jmp
mov
hlt
ja
sahf
xchg
popa
stc
mov
into
out
mov
sbb
lods
andb
nop
outsb
inc
pop
pop
rcl
mov
movsb
movsl
jns
xor
sbb
cmpsb
loop
lret
lret
fs
push
pushf
xor
mov
hlt
xchg
insl
popf
inc
jns
cmp
pushf
jge
pop
sahf
dec
sbb
es
fsubrp
outsl
xlat
je
sahf
jnp
sbb
gs
imulb
idiv
cmp
sbb
cmc
push
cmp
hlt
inc
jp
cli
ret
or
test
cmp
jp
and
sub
push
out
pop
add
inc
loope
cmpsl
xor
jno
sbb
fs
cmpsl
inc
push
mov
xor
dec
add
add
pop
push
jnp
loop
testl
adc
sbb
add
pop
cmp
mov
inc
std
call
jo
dec
pop
aas
fadds
or
cld
int3
sub
pop
int
outsb
js
sbb
rol
mov
mov
push
icebp
and
arpl
pop
and
out
dec
pop
xor
pop
xchg
inc
add
and
outsb
sbb
adc
or
and
psllw
mov
push
cs
mov
jo,pn
push
fidivrl
sub
jp
mov
dec
lock
mov
clc
xor
rorb
fs
int3
divb
test
mov
mov
cmp
outsl
testl
dec
and
mov
aaa
leave
scas
outsb
insl
std
mov
sti
pop
sbb
xor
xchg
push
ss
add
push
dec
std
sbb
testb
clc
push
mov
testb
sub
ljmp
sub
fdivrl
aad
dec
pop
add
push
cs
fnstsw
cltd
icebp
sub
jb
leave
cmp
mov
jns
mov
xchg
mov
pusha
jns
dec
ljmp
mov
xchg
and
add
test
or
cwtl
outsl
imul
lea
add
push
push
xor
loop
call
sbb
xchg
in
cmp
std
sti
sub
popa
pop
test
inc
lds
pop
xchg
in
mov
mov
mov
lret
sbb
nop
cmp
lods
roll
pop
inc
cmpsl
xchg
data16
sbb
insb
or
mov
mov
sbb
or
stos
negb
dec
or
mov
icebp
jecxz
scas
push
sbb
adc
repnz
loope
rorb
loopne
aad
inc
rorb
sub
int3
insb
xchg
mov
je
sbb
mov
imul
imul
dec
sub
orl
add
pop
mov
add
shr
or
inc
push
repz
bound
sbb
xlat
cld
outsl
ds
push
mov
jne
pop
imul
xchg
mov
sub
xor
pusha
out
and
pushl
dec
mov
test
push
out
repnz
jg
mov
xchg
pop
mov
and
out
jmp
mov
dec
sbb
jne
mov
push
popa
hlt
inc
xchg
sbb
jno
xor
cmp
stos
insl
mov
in
mov
leave
dec
movb
aam
sub
outsb
xor
lds
push
je
push
jp
ds
push
jo
int3
mov
pop
mov
lods
icebp
rcrl
mov
add
fidivrs
xor
loop
call
jns
adc
xor
ret
xor
xchg
fwait
adc
insl
mov
mov
cmp
push
shrb
call
daa
test
inc
test
xor
lds
mov
mov
fsubl
xchg
push
mov
dec
fwait
jbe
aaa
and
or
sar
clc
add
insl
fmull
jmp
je
mov
dec
jb
sub
fs
sub
xor
mov
insl
bound
ja
push
int3
ss
xor
push
lds
movsb
sub
gs
xlat
test
dec
sbb
data16
push
shrl
incl
mov
dec
leave
jnp
cmpb
pop
stos
neg
push
pop
cwtl
push
or
cmp
js
sbb
dec
mov
inc
lcall
push
mov
pop
or
xchg
scas
adc
add
aam
fdivs
shll
fcoms
iret
sbb
xchg
enter
push
fiadds
aad
or
addb
pop
sub
cli
pop
in
outsb
mov
adc
icebp
repz
aaa
pop
nop
mov
stos
dec
int3
lret
stos
hlt
icebp
repz
push
mov
andb
adc
out
add
test
aad
jmp
mov
popa
sbb
and
mov
rol
lds
pop
mov
lcall
repnz
jne
scas
adc
sti
aaa
mov
aam
lret
and
je
and
add
out
stc
pop
dec
push
insb
push
mov
sub
mov
dec
lods
je
jb
sbb
mull
popf
popf
mov
sar
repz
sbb
cmpsl
out
push
nop
and
adc
pop
call
testb
and
sub
jl
clc
mov
loop
test
cli
xchg
nop
jb
or
jge,pn
or
lea
mov
js
jne
mov
inc
sub
inc
adc
dec
mov
movsb
pop
jmp
rolb
dec
scas
jp
repnz
sbb
icebp
and
and
pop
and
jl
xchg
test
jmp
bound
lods
jno
jmp
mov
iret
or
sbb
lods
mov
out
push
mov
js
dec
push
push
lahf
pop
push
rorl
int3
out
stc
stc
lahf
lea
xchg
mov
add
jne
mov
dec
das
rcrl
mov
repnz
leave
adc
fs
push
enter
imul
fldt
aam
es
bound
and
adc
mov
lcall
aam
add
or
imul
leave
dec
cmpsb
push
icebp
stos
cwtl
jo
mov
or
and
inc
dec
mov
icebp
ret
xor
or
or
jns
dec
rol
out
sbb
xor
cmp
pop
sub
repz
fdivrs
jno
aas
or
pop
shlb
aas
aas
lods
xor
loop
test
jl
out
lret
add
dec
inc
pop
bound
cmp
or
pop
dec
repnz
adc
jecxz
scas
arpl
fucomp
sbb
mov
xchg
adc
loopne
sub
adc
test
sbb
and
lds
or
push
iret
call
pop
push
outsl
mov
or
sbb
insl
mov
or
cld
cld
inc
mov
sub
xchg
jmp
mov
mov
and
pushf
jno
jle
xchg
xchg
pusha
nop
in
cli
aas
or
push
xchg
in
in
mov
xor
sub
imul
in
repnz
mov
out
jge
and
out
shrl
cwtl
in
imul
and
loopne
xor
push
lret
mov
scas
imul
in
push
imul
fcomi
or
arpl
inc
push
add
iret
xchg
sub
pop
xchg
push
shlb
dec
mov
aas
mov
enter
les
mov
fmulp
cmpsl
movsb
mov
fcompl
dec
dec
xchg
jmp
dec
insl
mov
fsubrl
in
fmuls
push
stos
inc
mov
sub
in
mov
mov
pop
add
jo
jl
jl
jmp
xlat
and
clc
or
mov
ljmp
fbstp
cmp
fimull
dec
mov
push
fidivrl
imulb
xchg
lret
xor
lock
nop
punpcklwd
data16
pop
and
lahf
mov
test
enter
nop
add
insb
jl
sub
and
mov
ficoml
dec
pop
sub
data16
cwtl
pusha
fdivrl
clc
outsl
xchg
sahf
inc
rcrl
lods
or
addl
pop
into
test
arpl
xor
out
fldl
inc
mov
mov
loopne
or
sbb
shlb
push
dec
hlt
and
in
outsl
fbstp
sub
jne
pop
fisttpl
xchg
mov
adc
jb
push
xor
int
cmp
mov
sbb
sbb
xor
sar
fs
cltd
and
loope
xor
jp
add
int
lods
or
loop
stos
out
iret
push
mov
inc
jle
adc
int
cli
test
outsl
inc
subl
dec
fidivs
or
jecxz
cld
outsl
shrb
pop
lcall
xchg
push
es
call
and
inc
mov
daa
aas
mov
pop
rorb
push
xchg
sbb
stc
sub
jae
push
add
cli
mov
xchg
subb
xchg
nop
je
mov
inc
outsl
sti
mov
push
mov
ds
pop
pop
ds
lret
or
jecxz
push
add
adc
sub
mov
bound
negb
aam
jb
inc
sbb
jle
test
push
inc
adc
mov
popa
mov
lret
lods
jne
pop
testl
cmp
mov
push
and
fcompl
ret
popf
jne
xchg
add
outsb
dec
mov
pop
das
lret
sti
lcall
xor
dec
and
test
mov
and
and
out
add
add
and
loopne
insl
mov
push
adc
adc
mov
aas
sub
cmp
jl
xor
jnp
decb
xlat
jle
dec
sbb
int
ljmp
add
addr16
inc
repz
xor
test
pop
shlb
pop
andl
out
lcall
imul
pop
push
ss
jno
push
nop
roll
xchg
ss
or
pop
movsl
add
sbb
adc
and
xchg
sub
stos
xchg
mov
test
das
push
sub
enter
pop
aas
leave
mov
push
emms
lcall
movsl
daa
lahf
add
or
sub
mov
jo
scas
xchg
xor
hlt
ror
int
std
out
aam
outsl
test
xchg
rcr
call
sub
xchg
xchg
xchg
or
mov
sbb
les
and
icebp
and
xchg
addb
push
xchg
pop
fcoml
jl
sub
lcall
idiv
nop
jno
adc
mov
mov
aad
mov
cmp
vpsubb
and
or
movsb
xchg
sbb
push
sub
into
and
mov
test
test
add
xchg
dec
mov
lea
daa
rclb
pop
mov
dec
sub
or
imul
stos
push
mov
inc
mov
mov
push
bnd
jb
jg
push
jl
xor
fsubl
ret
in
loopne
mov
jno
scas
movsl
mull
pop
cmp
test
js
dec
nop
out
inc
imul
or
xchg
xor
mov
sub
fistl
push
jno
lock
mov
in
lods
ficoms
fdivl
call
daa
shll
lret
mov
outsl
outsb
push
mov
popa
sub
daa
cmp
add
movsl
sub
xor
mov
fcom
pop
jecxz
jl
and
pop
xor
arpl
dec
inc
fwait
mov
in
adcb
pop
shl
xchg
out
pop
mov
xchg
mov
mov
or
xorb
jge,pt
je
mov
push
jae
movsl
icebp
and
adc
fstl
cmc
pop
push
jp
leave
clc
and
adc
popa
cmc
lock
sarl
fcomip
or
add
andb
faddl
int3
aam
loop
cmpsl
dec
test
aad
jae
mov
ret
enter
fs
jb
or
push
cld
lods
sti
imul
inc
add
arpl
cmc
push
loope
ljmp
and
in
lahf
xor
jl
cmp
mov
jmp
dec
insb
xchg
and
pop
shll
outsl
mov
xchg
xor
cmp
xchg
cmc
lahf
jmp
pop
pop
xor
xorl
mov
ror
movsb
mov
and
cmp
imul
loopne
push
xchg
mov
mov
lret
push
bound
xor
dec
addr16
cmpl
jle
repnz
pop
jmp
jno
sbbb
pusha
scas
push
pop
cmp
movsl
into
cld
push
mov
ffree
cld
xor
fs
jp
push
inc
je
mov
mov
lret
pop
std
aam
pop
pop
adc
loope
xchg
inc
arpl
pop
nop
xor
cmpsb
jbe
and
adc
mov
lcall
cmp
aad
jg
adc
ja
dec
clc
pop
test
aam
jbe
xor
jb
mov
adc
in
out
lea
mov
mov
outsl
push
ficomps
sub
scas
hlt
sbb
out
addr16
mov
frstor
add
adcl
dec
out
or
aas
loopne
push
fldl
adcb
lret
lds
inc
lret
cltd
jnp
jmp
ss
or
addr16
lahf
or
pop
or
jbe
or
cld
sub
jne
pusha
cmp
inc
jecxz
sub
aas
je
xlat
xchg
or
add
popf
ret
lock
ret
icebp
xor
pop
cs
repz
mov
push
mov
mulb
dec
add
mov
or
pop
or
inc
sbb
dec
shlb
dec
arpl
scas
mov
mov
mov
and
pop
xor
ja
add
loop
fdivs
fcomps
int3
cmp
cmpsl
sti
jo
and
dec
sbb
leave
mov
or
inc
imul
aam
push
loop
push
int
in
repz
fld1
push
add
pop
aad
test
clc
iret
jbe
les
push
leave
int3
mov
es
dec
push
fnstsw
or
insl
movsl
mov
bound
inc
in
mov
dec
mov
call
push
cmc
mov
xor
movl
cld
adc
fidivrs
imul
and
xor
jb
sti
inc
rol
inc
loop
mov
out
mov
sbb
xchg
fildll
adc
and
jns
outsl
hlt
outsb
mov
sub
int
arpl
loop
pop
scas
es
push
mov
daa
div
repz
stos
push
int3
icebp
cmpsl
sti
das
out
mov
inc
sbb
in
imul
push
sbb
in
jne
cs
sub
jmp
les
dec
orb
jmp
inc
xor
sbb
leave
jecxz
roll
js
pop
or
mov
movsb
xor
sahf
in
aam
fwait
call
push
mov
pop
xchg
int
push
xchg
mov
mov
je
jecxz
adc
scas
loope
in
mov
cmp
jle
sbb
or
sub
sbb
dec
es
in
mov
adc
pop
cmp
int3
fldt
mov
add
cwtl
fidivs
aad
add
stc
ljmp
and
cmp
rcrb
xchg
mov
sbb
xchg
add
into
sub
fwait
xchg
incb
loop
xchg
icebp
and
aad
pop
lock
pop
inc
ss
sbb
xlat
jmpw
or
dec
fsts
mov
mov
fbstp
aam
pop
hlt
or
sbb
and
mov
pop
inc
or
in
pop
lea
insl
cmp
push
inc
mov
add
test
push
fisubrl
push
mov
xchg
sbb
and
cmp
xchg
test
call
inc
mov
ss
mov
addb
jmp
and
bound
mov
imul
push
insl
and
pop
mov
sbb
aad
inc
sbb
mov
lds
in
push
lock
or
test
xchg
inc
call
sub
lods
pop
les
in
into
push
int
imul
sbb
xor
mov
cmp
push
add
ja
gs
adc
jle
push
je
push
adc
adc
pushf
push
cltd
xor
loop
mov
into
or
std
add
jb
jmp
test
bound
mov
push
pop
or
jbe
ss
or
imul
sbb
push
or
jns
mov
bound
ds
mov
cltd
pop
add
fbstp
push
push
in
inc
pop
insl
mov
cmpb
stos
pop
cltd
fcompl
mov
mov
push
ds
mov
adc
int3
pop
dec
xchg
fwait
adc
mov
ss
popf
test
adc
jo
pop
dec
add
push
sbb
jnp
jmp
or
inc
fdivrl
dec
fdivrs
xor
cmpsl
inc
jle
sarb
mov
rorl
insl
lcall
jl
mov
push
pop
arpl
cmpsb
xchg
cmp
aas
leave
sub
cmp
inc
shr
or
aam
sti
mov
xor
hlt
or
cli
xlat
fmull
lret
inc
pop
jmp
xor
jg
hlt
out
and
mov
jl
and
dec
pop
mov
mov
sbb
mov
in
jecxz
popl
pop
push
adc
int
push
mov
pop
ret
lods
push
jno
fcoml
insl
outsl
dec
lahf
andb
jae
arpl
cmpsb
cmp
das
cmp
sub
push
fwait
adc
xchg
daa
dec
fwait
pop
arpl
sbb
dec
lret
push
js
jp
and
leave
cmp
ret
imull
mov
add
test
rcrl
mov
enter
jmp
mov
sub
mov
clc
mov
cmp
aas
mov
mov
inc
cmc
sar
out
lock
sub
std
pop
cli
ret
daa
push
lods
or
lods
jo
push
movsb
add
mov
fninit
and
xchg
push
cwtl
pop
ds
out
xchg
test
icebp
push
fwait
cmp
out
lcall
sbb
sub
cld
enter
jne
mov
outsb
mov
push
push
inc
add
sarb
outsb
inc
test
adc
fs
imul
clc
or
fildll
jne
inc
stc
lcall
cltd
jae
fisttpll
mov
lret
xchg
mov
filds
addr16
mov
and
pop
dec
xlat
mov
cwtl
push
in
jo
mov
icebp
cmp
test
cmpsb
insb
loopne
cmp
sub
test
fistpll
sbbb
jp
lock
push
adc
or
ss
push
dec
cld
fdivp
pop
in
xchg
popa
sub
je
jmp
je
sbb
adc
mov
cli
std
cwtl
xorl
adc
lahf
bound
pushl
push
adc
arpl
arpl
out
movsl
and
pop
mov
xchg
cltd
adc
and
cs
or
adc
jmp
jle
xlat
punpckhbw
dec
xchg
xlat
adc
orl
xchg
add
leave
dec
daa
ljmp
cmp
xor
xchg
or
mov
scas
imul
cmpsb
stos
fists
lods
mov
mov
push
and
mov
xor
sub
mov
jne
xor
jp
pop
mov
pop
sbb
out
insl
das
dec
sti
enter
cmc
mov
cmp
inc
or
popaw
inc
pop
pop
and
cmp
push
stos
pop
mov
mov
cmp
sbb
std
push
dec
scas
inc
adc
pop
iret
xor
enter
sahf
movsl
cmp
sbb
add
mov
hlt
adc
xor
inc
pop
push
jecxz
pop
xlat
push
jl
enter
mov
and
xor
jo
and
icebp
sub
sub
rcrl
cmp
jecxz
push
in
loope
lods
pop
xchg
outsb
add
or
inc
out
fcmovnb
aam
sbbb
sub
adc
ljmp
ja
into
rcrb
mov
outsb
mov
test
mov
iret
xor
cmp
cmpl
scas
lcall
jo
lahf
popf
add
sub
int3
mov
mov
pop
jae
insb
jno
int
sub
mov
sti
loop
ja
nop
sarl
mov
lea
jmp
pop
pop
mov
in
arpl
jmp
inc
inc
test
jmp
aaa
fsub
sub
outsb
ds
es
dec
jmp
rclb
or
mov
sbb
movsl
cmc
jl
not
sbb
je
xor
sbb
jecxz
mov
shll
fldl
cwtl
icebp
aas
cmp
jno
pop
adc
jne
cmpsl
push
cmp
aad
ret
lcall
ffree
clc
ret
lcall
insl
jno
lock
xor
sbb
sahf
pop
loopne
in
jge
add
cmp
xchg
scas
add
adc
fidivl
sbb
mov
mov
sub
cmp
or
js
adc
gs
add
push
pop
xor
inc
mov
mov
push
stos
out
sbb
push
test
dec
add
fnclex
add
arpl
push
and
cmp
in
mov
data16
inc
out
and
das
or
mov
and
mov
inc
sub
and
lcall
sub
test
and
ljmp
mov
ret
mov
fwait
iret
inc
mov
and
dec
stos
mov
outsl
mov
push
sbb
outsb
out
jnp
jnp
rcrb
or
inc
cmc
push
movsl
mov
aam
and
jmp
nop
adc
and
int3
pop
sbb
stos
and
lock
add
xchg
ret
iret
inc
nop
push
dec
add
push
push
cmp
add
test
shlb
mov
popf
mov
jns
pop
test
sti
arpl
clc
adc
test
pop
mov
xor
xchg
adc
jne
scas
push
mov
xchg
jae
cs
xlat
pop
clc
jb
fcmovbe
cmc
or
sarb
mov
mov
test
dec
cmpsb
aas
stos
xchg
push
pop
stos
lods
pusha
loopne
gs
pop
add
cmp
push
sbb
or
add
and
pusha
mov
mov
adc
in
mov
sbb
push
in
sub
testl
jne
mov
je
or
lret
xchg
cmpsl
pop
pusha
enter
orb
inc
popf
adc
sub
jmp
iret
rcrb
jmp
push
and
std
jl
cltd
es
fnsave
cli
dec
mov
and
sbb
insb
enter
xor
push
push
out
cld
in
sub
fwait
push
sbb
stos
mov
stc
inc
movsb
subl
popa
dec
popa
jg
int3
push
scas
cmc
leave
aaa
lahf
jo
ljmp
inc
sbb
out
subl
pop
test
adc
adc
fcoml
xlat
sahf
add
xchg
pop
add
or
std
fidivrs
icebp
outsl
std
les
ret
sub
popa
push
mov
icebp
out
je
loop
ficoml
mov
mov
mov
xchg
dec
cmpsl
push
scas
adc
sub
or
mov
push
jg
data16
repz
es
add
outsb
push
fdivrl
and
pop
cmp
and
rorb
jl
mov
rorl
mov
cltd
cmp
xchg
in
out
mov
or
mov
xchg
add
and
push
push
mov
jo
sub
into
lock
out
popf
and
push
sbb
cltd
mov
rorb
xor
shrl
lds
fwait
pop
aas
sbb
das
mov
mov
sub
adc
scas
jo
dec
out
jns
or
dec
movsb
push
jmp
je
xor
add
mov
dec
sar
sti
jns
imul
jo
scas
imul
cmc
add
movsl
mov
das
int
dec
lret
jmp
sbb
push
inc
in
cmpb
dec
jns
push
add
pop
fsubr
xchg
push
lret
jo
mov
fs
xchg
mov
cmpb
mov
push
enter
mov
ret
loope
sub
mov
iret
lcall
int3
pop
push
arpl
jp
push
lods
inc
xor
sbb
test
cmp
add
adcb
mov
test
push
addl
jmp
sbbb
sub
sti
enter
mov
mov
stos
add
jns
sbb
inc
jno
bound
push
das
je
loope
movsl
test
in
gs
or
scas
loope
divb
and
dec
push
ja
arpl
xor
ljmp
pop
cmpsl
mov
aaa
es
jg
and
add
mov
inc
rolb
loope
inc
cld
mov
xor
sub
jmp
pusha
mov
clc
mov
jg
push
lret
int
xlat
jecxz
cmpb
xor
xchg
aaa
outsb
pop
dec
fiaddl
repnz
pop
ss
aaa
xor
pushf
popa
or
dec
push
es
sbb
cmpsb
and
int3
sbb
sbb
ljmp
or
mov
imul
dec
push
nop
lods
xor
call
cmp
sbb
es
repz
pop
mov
push
push
lds
push
cmp
cmp
cmpsb
test
lea
jp
jmp
xchg
jecxz
add
mov
inc
sahf
xchg
or
mov
adc
sub
shll
hlt
orl
xchg
push
stos
push
mov
ffreep
xchg
mov
push
dec
and
jns
out
jne
cmpsb
out
hlt
clc
pop
xor
push
mov
push
pop
punpckldq
insb
in
mov
stos
jp
into
outsl
insb
ret
inc
dec
sbb
lods
ja
out
mov
pop
xchg
or
cmp
cmpsb
insb
test
rolb
test
nop
mov
jbe
lret
mov
jo
pop
mov
cli
pop
rorl
popa
and
aaa
xchg
mov
repnz
sub
mov
mov
push
imul
push
fmuls
sub
mov
jmp
push
neg
xchg
sbb
das
in
jae
push
lret
or
mov
lcall
stos
add
andb
jno
cli
mov
aas
sub
jb
push
dec
pop
add
imul
xchg
clc
dec
xor
aaa
cltd
or
rorl
jno
sub
push
jnp
orb
add
jecxz
mov
clc
jno
call
popa
push
mov
dec
int
insb
jns
push
ss
cmp
or
xchg
adc
ljmp
cmpsl
ss
test
cmp
push
int
mov
push
mov
xchg
in
lea
clc
adc
xchg
sub
xchg
add
int
bound
sub
jmp
bound
fisttpll
push
inc
mov
xchg
les
clc
sub
rorb
adc
cld
pop
inc
jle
out
pop
mov
inc
push
sub
movsl
jb
add
outsl
stos
push
xlat
lahf
cs
ret
lret
pop
push
or
test
test
subb
adc
add
out
adc
lds
out
faddl
mov
inc
mov
sbbl
jge
rorb
shl
push
jmp
or
xchg
icebp
loope
cmp
movhlps
mull
pop
or
ret
decl
cmc
mov
fld
pushf
popa
repz
andb
in
cmovne
push
push
repnz
mov
xchg
push
or
cld
sbb
scas
inc
insb
shlb
xchg
sub
push
ficomps
addr16
sti
xchg
aaa
mov
fsub
call
fwait
push
in
mov
dec
aam
xor
data16
sahf
enter
lahf
sub
mov
mov
lods
jle
out
jmp
out
mov
jb
rcrb
lds
psrad
orb
jns
jno
mov
shrl
mov
inc
in
icebp
cwtl
push
cmc
mov
push
pop
mov
outsl
sbb
mov
enter
fnsave
pusha
dec
inc
and
add
insb
pop
and
xor
or
mov
pop
xor
xchg
out
aad
inc
pop
in
inc
shrb
and
mov
push
dec
adc
inc
pop
imul
jo
sub
bound
mov
add
xor
ret
sti
repz
or
mov
mov
and
jge
movsl
je
pusha
push
jno
addr16
mov
shr
mov
repz
pop
shll
nop
lods
pop
pushf
int
and
push
dec
enter
inc
popf
repnz
push
outsb
lock
or
jo
jle
push
in
pop
inc
push
add
std
mov
mov
dec
arpl
mov
jo
in
dec
and
loop
mov
jle
mov
adc
hlt
stc
leave
addr16
cld
add
sub
icebp
sub
dec
jmp
aas
sub
mov
scas
mov
in
cmpl
xchg
and
repnz
jbe
hlt
xchg
mov
xor
lret
push
lcall
dec
fistps
jae
and
lea
inc
push
ret
int3
jb
jle
jmp
sub
inc
jecxz
imul
or
fdivrl
push
or
sbb
push
aas
jne
dec
cmp
xchg
add
cli
lcall
idiv
or
push
test
insl
dec
dec
mov
ret
outsb
add
hlt
dec
loop
fdivrs
adc
xchg
cli
into
inc
xor
cmp
add
dec
push
pop
jne
jge
and
fwait
xlat
loopne
push
pop
fidivl
push
sbb
rep
decb
in
leave
je
or
orb
cli
loopne
mov
mov
je
imul
mov
xor
jae
or
sbb
mov
ficoml
pop
adc
stos
ret
out
jno
push
add
pop
lea
divb
aad
cmp
cltd
ljmp
arpl
dec
jo
sbb
mov
arpl
xchg
mov
aas
cmp
test
fchs
jp
dec
ret
out
pop
pop
pop
adc
mov
cmp
imul
or
dec
cwtl
mov
cmp
int
dec
enter
cmp
dec
push
repnz
repnz
lahf
pusha
push
pop
repnz
mov
push
or
pop
adc
cli
cmp
cmp
and
mov
loope
rolb
shlb
mov
pop
adc
lahf
xchg
sub
in
push
pop
add
pop
cmp
push
xchg
add
rorb
out
xor
mov
mov
sbb
jmp
mov
push
dec
cmc
push
xor
lea
pop
outsl
sub
pop
xchg
mov
xchg
into
pop
rorl
sub
cmc
fidivrl
in
rol
add
dec
test
add
or
stos
sbbl
push
or
inc
cmp
scas
and
jnp
call
mov
cs
test
xor
mov
jp
sub
nop
decl
cld
add
xchg
dec
mov
aas
test
dec
push
mov
movsl
addr16
or
lds
sar
mov
dec
arpl
mov
add
mov
sbb
shrl
cmc
out
adc
mov
or
movl
push
dec
sbb
mov
push
rcrb
in
cmp
sar
adc
decb
or
js
jp
sbb
loopne
repnz
mov
mov
gs
lea
adc
dec
das
fidivl
mov
sbb
xor
scas
das
push
loop
push
je
insb
mov
das
inc
loop
or
add
cwtl
mov
pop
es
fidivrs
push
push
in
call
cmp
xchg
mov
or
xor
sbb
ss
andb
loopne
sbb
push
std
mov
pop
mov
xor
mov
and
push
push
adc
inc
lods
insb
sub
cmp
fstps
add
sahf
inc
pop
rclb
mov
out
xor
add
pop
xchg
inc
inc
out
rolb
jae
rcrb
movsl
popa
pop
cwtl
cwtl
xchg
and
pop
popa
pop
cltd
and
les
aad
push
adc
push
aaa
insb
fidivrl
outsb
jmp
pop
mov
les
mov
fs
cmp
enter
add
mov
push
enter
push
jg
xor
dec
lods
into
xchg
adc
push
int
in
pop
jecxz
add
gs
out
jnp
jg
jecxz
loope
negb
pop
xlat
mov
fisttps
rcll
adcl
into
scas
mov
xchg
cmp
xor
pop
in
roll
cltd
xchg
pop
cmp
xor
movl
pop
test
cmpsl
stos
pop
outsl
scas
ljmp
or
push
push
xor
xor
pop
xchg
loop
outsl
fimuls
sbb
inc
int3
out
mov
mov
sbb
mov
inc
adc
or
scas
xchg
mov
xchg
fcompl
add
xchg
sbb
std
shlb
rolb
add
and
loop
xchg
scas
mov
sti
xchg
je
popf
add
loop
mov
cld
mov
test
mov
in
mov
js
or
in
dec
test
dec
jnp
nop
loopne
sbb
fsubl
xchg
or
mov
xlat
cwtl
sub
pop
ja
insl
dec
imul
stc
dec
sub
out
fcomi
push
xor
lcall
push
adc
sbb
inc
xor
or
fstps
jae
rcll
and
pop
jno
inc
popa
cltd
mov
sahf
push
les
lods
sbb
dec
jle
and
lea
adc
bound
dec
std
jb
mov
cmpsl
iret
sub
vmovdqu
lcall
insb
mov
jge
jae
jmp
push
xlat
idivb
cmp
rcll
and
mov
jne
push
push
push
mov
into
mov
add
pop
std
stos
movsl
cmp
adc
sti
dec
and
mov
mov
sub
or
scas
out
add
mov
or
gs
arpl
sub
mov
cmp
hlt
gs
xor
push
dec
dec
push
lock
adc
push
sub
movzbl
sbb
sbb
inc
pop
cmc
loop
mov
mov
sub
int
mov
popf
daa
lods
pop
sbb
jmp
dec
dec
jns
mov
pushf
pop
sub
inc
test
aam
or
adc
xchg
imul
mov
imul
mov
lods
icebp
fs
cltd
xchg
loopne
push
dec
xchg
inc
test
add
mov
dec
aaa
add
sbb
stos
xlat
outsb
sbb
sbb
dec
popa
cmc
jne
and
inc
hlt
push
sahf
mov
jnp
and
and
inc
pop
std
ret
push
insl
or
icebp
inc
jns
jg
jnp
lea
int
sbb
dec
pcmpeqw
lods
mov
arpl
shll
xchg
es
leave
dec
mov
add
test
or
cmp
pop
stos
xor
fcmovnb
cmp
ljmp
sub
inc
sysret
jp
int
push
xchg
mov
sub
jmp
cmp
pop
fwait
sub
ljmp
xchg
push
push
xchg
xchg
test
ret
mov
add
hlt
jmp
inc
test
add
mov
inc
add
xchg
pop
add
mov
jg
xor
std
stos
mov
xchg
add
rolb
lds
cmp
lds
jg
lock
sub
popf
sbb
fwait
mov
scas
ja
les
mov
jg
xor
mov
arpl
popf
pop
add
cltd
or
jnp
xchg
hlt
bsf
jg
or
cwtl
sbbl
call
add
mov
push
int3
mov
inc
pop
jbe
fs
jg
xchg
lret
xchg
mov
lds
inc
imul
ja
scas
push
in
pop
loop
mov
cwtl
movsb
iret
out
sbb
adc
jo
jg
xor
movsb
movsl
xor
pop
pop
inc
daa
mov
jno
ret
pop
loope
jl
mov
xchg
xchg
lret
out
xchg
adc
stos
outsl
mov
xor
hlt
movsb
mov
mov
xchg
lds
nop
xchg
in
dec
mov
cli
ret
cmc
jge
and
cmp
scas
jo
mov
sbb
imul
ss
and
jbe
test
xchg
inc
xchg
inc
popf
shll
test
mov
push
mov
xchg
shr
adc
leave
ret
cmp
jae
fcmovb
adc
orps
ret
leave
ja
rorl
loopne
in
pop
testb
mov
xchg
jno
jge
push
out
mov
dec
sti
loopne
sbb
sub
loopne
pop
imul
aas
ja
loope
push
cmpl
pop
cmpb
loopne
fs
or
jecxz
clc
cmc
aad
mov
adc
push
dec
push
daa
aaa
xchg
bound
mov
pushf
out
mov
ret
inc
insl
and
fs
stc
or
sub
pushf
mov
cmp
xor
in
fidivl
and
mov
cmp
fs
ret
lret
inc
in
jo
repnz
sti
in
stos
jno
cld
orb
rorl
pop
ja
push
and
in
sub
cs
pusha
stos
fdivrs
cwtl
jae
add
pop
push
or
jno
lret
in
xchg
popf
jo
add
pop
rolb
fcmovnbe
xorb
ret
xor
sarl
mov
nop
and
mul
inc
movsb
jo
pop
popf
repnz
lret
inc
nop
das
and
cmp
cmpsl
shl
fildl
scas
xchg
jb
fistps
movsl
aas
icebp
xor
xor
sbb
ss
pop
test
mov
or
xchg
lods
cwtl
mov
jnp
sar
in
lods
add
mov
push
inc
push
cmp
enter
out
or
push
lret
xchg
dec
sbb
loop
dec
sub
mov
jp
sahf
test
mov
cmp
dec
enter
stos
dec
mov
or
mov
cmpsb
es
xchg
in
scas
mov
add
pop
adcl
test
dec
jae
adc
incb
shr
push
inc
xorl
aam
fs
lock
mov
les
cli
push
push
jecxz
xor
ret
jle
in
adc
testl
in
push
pop
stos
mov
cld
and
dec
lret
out
shlb
pop
pop
in
pusha
out
sub
and
mov
inc
jecxz
xor
fwait
xchg
clc
rorb
dec
movsl
or
jmp
push
bound
mov
fcmovnb
stc
mov
inc
mov
add
scas
pop
in
cli
jae
sub
mov
popl
or
int
cmp
icebp
das
adc
aas
jp
shll
mov
push
dec
cwtl
cmpsb
shrl
sub
loopne
inc
repnz
xorl
nop
xor
lods
orb
push
dec
add
je
jecxz
popa
ss
push
mov
lret
push
out
sub
xor
fwait
push
aaa
iret
xchg
pop
xor
daa
and
sub
cmp
adc
pop
js
mov
call
push
aam
cmc
out
and
xor
inc
mov
jmp
mov
sub
pop
sub
or
and
dec
mov
sbb
movsl
into
pop
fisttpll
add
xchg
addr16
test
pop
inc
jns
cmc
mov
movsb
xor
and
cld
xchg
mov
jno
testb
cmpb
inc
ret
shll
mov
lcall
ljmp
jg
push
cmp
or
mov
cmpsb
cmp
scas
nop
sub
pop
jns
sbb
ss
out
into
pop
mov
and
push
call
rcrl
and
sbb
lea
xchg
cmc
mov
mov
xor
or
mov
pop
lea
adc
inc
xchg
les
sbb
jp
xchg
mov
xchg
shll
int3
andw
jp
xor
fcompl
xchg
outsl
mov
jbe
push
push
bound
sbb
divb
xorb
jp
push
pop
xchg
jmp
out
shrb
arpl
push
xlat
mov
adc
and
mov
movsb
fists
aas
ret
mov
stc
or
pushf
pop
push
es
gs
repnz
stos
hlt
lret
into
daa
pop
std
cmpsl
cmp
pop
lea
push
push
rcll
arpl
ljmp
fs
dec
insb
arpl
pop
nop
inc
mov
ja
jmp
push
sub
jmp
fstl
cmpsb
mov
imul
inc
xor
fistpl
add
into
mov
lret
test
orl
xor
mov
imul
ja
ljmp
movsl
dec
xor
lods
jg
in
lds
or
cmp
or
mov
fmull
aas
jl
push
bnd
xchg
dec
movsl
cs
movsb
pop
sbb
ljmp
mov
xchg
stos
dec
sub
or
mov
sbbb
adc
aaa
or
push
mov
aas
mov
mov
or
xlat
clc
loop
cs
inc
pushf
out
lea
in
sbb
insl
cs
ja
mov
push
cli
jbe
mov
jg
fs
stc
push
sub
jmp
mov
mov
sub
xor
fistpl
aas
lret
adc
and
or
mov
popf
cmpb
aas
roll
ret
fxch
jo
popf
sbb
mov
cmp
jno
adc
jmp
push
fs
jb
lahf
push
push
sbb
cmp
rcrb
cmp
xchg
orl
repz
mov
sahf
test
pushl
data16
ljmp
in
call
adc
ds
cs
jecxz
add
pop
inc
iret
adc
movsb
jl
pop
and
aam
pop
sbb
mov
or
inc
rclb
imul
inc
cmpsl
jl
and
out
fistpl
cmc
dec
sbb
in
test
jns
sub
in
xchg
fdivrl
stos
xchg
in
dec
daa
xorb
mov
adc
mov
mov
cmp
mov
or
adcl
xor
mov
adc
loopne
xor
cmc
push
push
loop
repnz
hlt
bound
shl
in
rclb
push
movl
mov
sbb
mov
test
hlt
sbb
sub
pushf
or
or
pusha
xlat
pop
pop
and
and
out
clc
jecxz
sbb
xlat
jp
aad
pop
dec
pop
into
mov
rcrl
stc
mov
jl
scas
push
dec
mov
imul
imul
inc
dec
sahf
test
jl
hlt
and
repnz
sub
cwtl
scas
cwtl
jge
or
push
and
test
jecxz
and
enter
fcompl
cmp
outsl
lahf
stos
mov
adc
add
cwtl
faddl
push
hlt
mov
rorb
inc
mov
xor
add
ljmp
lret
sub
pop
xor
fisubrs
jge
xchg
repnz
je
out
add
add
cmp
push
sbb
mov
xchg
mov
inc
or
imull
nop
aas
std
cli
or
into
sbb
popa
adc
data16
jge
js
arpl
pushf
mov
sbb
cmp
int
pop
mov
mov
rorb
sahf
gs
leave
test
std
in
int3
add
movsl
push
lea
ficoml
cmpl
sbb
push
jmp
sbb
shll
mov
cs
lret
or
lds
js
sbb
mov
sbb
ret
jge
scas
or
add
pop
repz
lcall
mov
lock
xchg
ss
clc
add
cli
jo
mov
scas
lods
hlt
pop
insb
scas
test
push
cmc
cmp
vmovntpd
rol
out
das
xor
push
mov
lea
lret
inc
cwtl
div
andb
adc
test
jmp
es
ficompl
mov
fdivr
cmpl
ret
push
mov
repz
jecxz
sahf
cmpl
addr16
insb
mov
ljmp
pop
enter
or
xchg
or
fs
cltd
fcoms
mov
inc
add
repnz
push
js
inc
sub
sub
inc
cmp
xchg
test
stos
xchg
push
xchg
fldl
inc
mov
ja
orl
mov
xor
cmp
daa
imul
mov
fdivrs
sbb
pop
push
push
pop
inc
inc
dec
sub
rorb
xchg
dec
pop
mov
pop
fisubrs
xchg
sub
push
loopne
aaa
xchg
dec
sub
and
inc
das
push
repz
sub
out
das
xchg
js
dec
inc
jb
cmp
and
movsb
sbb
cmp
jno
push
fwait
xchg
testl
xor
push
inc
shr
pop
dec
cli
cmp
mov
or
sub
into
pushf
aad
xchg
sub
push
scas
xchg
dec
push
sbb
mov
push
jns
in
cmp
imul
out
lods
xchg
int
lds
sbb
arpl
icebp
fwait
pop
mov
mov
and
pop
ljmp
icebp
jo
push
test
or
nop
mov
mov
out
fisubrl
xlat
cmp
inc
xlat
fninit
sahf
daa
and
and
sbb
out
adc
in
sub
out
and
xor
xor
inc
das
and
movsb
lcall
jnp
ret
test
stos
es
sbb
sub
vmovaps
cmp
xchg
mov
push
ja
dec
pop
pop
mov
aas
std
in
pop
in
cld
jge
cli
xchg
and
dec
pop
add
or
sub
sbb
test
mov
and
xchg
mulb
int3
loop
xchg
xor
pop
lcall
sahf
or
and
pop
or
inc
push
add
or
loope
jbe
insb
gs
dec
cmpsl
ss
push
sub
das
jns
and
mov
jp
jmp
fisubrs
push
std
sub
add
adc
insl
and
sbb
add
mov
push
fmull
xchg
sub
mov
and
fnstcw
adc
les
mov
jns
push
dec
sub
inc
sub
movsb
mov
imul
fmuls
mov
es
fildll
loope
testl
xchg
sbb
jb
xor
xchg
ljmp
cmpsl
mov
jle
push
xchg
xor
mov
std
jle
adc
shll
jle
hlt
pop
jg
dec
add
sub
stos
and
out
sarl
notl
gs
ja
sti
push
sbb
adc
sub
rol
aaa
lret
dec
pop
sbb
cs
add
xor
and
mov
inc
adc
psubusw
fisubl
aaa
nop
inc
pop
mov
dec
push
stos
idivl
mov
pop
mov
adc
sub
pop
inc
in
ret
insb
jbe
fnstenv
cmc
dec
sbb
scas
push
pop
mov
inc
sub
cld
dec
add
add
cmp
push
xor
sbb
out
aaa
scas
or
dec
iret
jne
rclb
or
shrb
pop
push
dec
arpl
cwtl
xchg
lahf
sub
js
pop
adc
xor
jo
jl
jp
inc
les
int
stc
pusha
inc
push
std
sub
mov
inc
jnp
sahf
jns
sbb
sbb
jns
aam
sbb
or
push
adc
out
inc
cmpsl
sbb
sti
sbb
aad
and
or
jge,pn
inc
ljmp
ret
mov
imul
sub
pop
pop
xchg
sbb
mov
inc
dec
mov
add
xor
mov
xor
and
fcompl
sbb
in
sub
mov
mov
cmp
fdivrp
fwait
aas
xorl
sahf
into
mov
jne
sub
clc
mov
bound
daa
sahf
cltd
mov
ljmp
fucomip
and
sahf
gs
arpl
lret
insb
push
and
and
mov
jno
retw
stos
xor
ja
sbb
jns
add
test
pop
test
or
inc
add
ljmp
xor
xlat
mulb
cmp
pop
sbb
insb
or
stos
mov
pop
test
mov
stos
adc
sbb
jne
scas
lock
jnp
push
push
int
jge
lods
lock
xchg
aas
jp
jbe
gs
cmp
dec
mov
fs
cmp
out
mov
ret
out
psubsw
inc
sbb
pop
cwtl
xchg
test
in
cld
ss
movsl
sub
les
out
lods
in
mov
ret
ffreep
mov
rcll
fcomp
and
and
mov
popf
push
fsubr
push
scas
and
sub
nop
add
out
push
adc
lods
adc
jle
pop
pop
icebp
mov
cmpsb
out
stc
shlb
lds
ret
mov
mov
push
insb
push
or
loop
or
faddl
adc
dec
testl
arpl
loopne
dec
les
mov
aaa
in
addr16
jbe
push
cmc
xor
add
cmp
sub
sbb
and
lods
mov
scas
inc
pop
jb
xor
xor
sahf
pop
xchg
lods
jge
add
sub
adc
ljmp
xlat
nop
out
adc
mov
insl
hlt
dec
fstl
inc
ljmp
daa
mov
mov
xchg
dec
pop
adc
push
mov
sbb
xor
into
push
test
xchg
negl
scas
dec
ss
push
sbb
jne
jmp
mov
mov
push
xchg
jne
jecxz
xchg
mov
or
imul
adc
mov
add
and
mov
sbbl
mov
out
cwtl
lds
outsl
inc
pop
insb
and
mov
xlat
inc
ret
fildl
mov
bswap
subl
or
cmp
daa
mov
fnstsw
jne
data16
cmp
divb
pop
fldt
ss
and
sub
cld
jns
add
jle
shl
sub
ds
pop
mov
xor
bndldx
addl
lret
jo
lds
shll
sti
sbb
into
xchg
push
xchg
cmp
xor
fistl
je
jae
adc
enter
in
lea
jge
inc
jns
jp
mov
lret
push
lods
scas
je
push
bound
lret
sbb
lea
mov
test
fldt
sti
push
test
add
mov
pop
cli
mov
jns
xlat
outsl
add
es
cmp
std
cmpsl
sub
cmp
xchg
test
sahf
mov
lock
loope
sub
icebp
loopne
xchg
push
cli
mov
call
mov
sbb
cmpsb
add
jecxz
mov
jae
or
inc
push
aas
mov
rcr
mov
push
dec
and
mov
dec
push
call
test
pop
and
jecxz,pn
push
mov
jnp
jp
sub
or
xchg
pop
je
nop
jl
mov
jb
or
pop
pop
adc
and
pushl
jb
mov
and
add
jmp
sbb
fisubl
je,pt
mov
sub
sbb
jge
push
scas
cs
mov
pop
ret
gs
jmp
sbb
inc
out
cmp
adc
pop
mov
mov
rclb
rol
pop
dec
fidivrs
rorb
std
hlt
iret
cld
lock
std
sub
jl
xchg
stos
push
ficoms
insl
mov
jmp
mov
lock
adc
sbb
or
stc
jnp
xorb
fs
push
in
es
dec
mov
fstl
cmc
sub
insl
mov
movsb
andb
pop
dec
pusha
sub
sti
sbb
loopne
add
mov
jg
sbb
cmp
mov
nop
fsubl
dec
sub
test
jbe
inc
and
adc
inc
fwait
jmp
fmuls
movsb
jns
lret
scas
push
shrl
repz
inc
test
lea
xor
cmp
and
loop
adc
sbb
push
lds
mov
loop
lods
and
ja
mov
inc
scas
push
xor
mov
mov
sti
add
repnz
data16
sbb
and
or
dec
jae
rolb
or
je
or
push
lcall
and
mov
outsb
xor
or
push
mov
movsb
sbb
xor
push
xchg
push
pop
mov
iret
mov
mov
xor
roll
cmpsl
adc
push
xor
adc
pop
sahf
cmp
out
pop
outsb
mov
push
loope
std
stos
cltd
push
cmp
hlt
mov
mov
negl
mov
and
loope
push
sub
mov
dec
xchg
mov
inc
repz
push
mov
add
aad
pushf
out
and
mov
pop
repz
sti
pop
dec
mov
jp
leave
inc
jnp
movsb
movsb
inc
inc
movsb
in
addl
lcall
mov
aas
sub
sub
push
sub
cmp
or
add
fistpll
pop
fsubrp
mov
insl
sahf
push
inc
jle
nop
xchg
mov
dec
jecxz
mov
add
sbb
gs
xchg
mov
jecxz
or
pop
inc
push
pop
push
in
inc
push
or
sub
inc
xchg
mov
sahf
xlat
sub
repz
push
adc
ret
popa
dec
adc
sbb
or
lcall
jo
orb
fisubl
ds
cltd
cmp
dec
lods
hlt
mov
push
and
fcmovbe
nop
or
hlt
fisttps
addr16
lcall
inc
lods
jmp
rorb
adc
inc
dec
stc
cmp
fldcw
xor
mov
out
sbb
mov
push
push
cmp
mov
pop
inc
aaa
shll
jmp
orl
pop
insl
loopne
xor
jnp
mov
stc
mov
lds
out
pop
sbb
mov
or
cmc
jle
sbb
and
stc
xor
lahf
movsl
orl
into
xchg
dec
mov
popa
test
xchg
insl
aas
mov
jmp
pop
mov
pusha
cmc
inc
mov
in
je
mov
aad
and
cmp
xchg
pop
push
test
insl
add
pusha
ss
cmpsb
icebp
mov
test
pop
xlat
jg
cmp
cld
lret
adc
mov
and
icebp
mov
pop
je
sbb
lods
mov
out
repz
mov
mov
mov
cli
iret
lea
int3
mov
fnstenv
inc
mov
push
popa
pop
movsb
jg
push
pop
push
cmp
xchg
sarl
push
repnz
stos
jbe
pop
aaa
sarb
mov
rcl
inc
mov
mov
fwait
int
mov
mov
mov
dec
dec
jle
cld
and
aaa
xchg
cmp
arpl
scas
scas
loopne
out
sbb
out
rclb
not
psubd
dec
icebp
movl
jge
in
jb
les
mov
stos
mov
into
out
mov
mov
mov
sarl
bnd
mov
jae
jbe
inc
mov
cltd
sbb
pop
out
mov
into
jmp
push
nop
out
cmp
popf
mov
xchg
test
int
push
pop
mov
pop
inc
or
mull
and
adc
clc
repnz
add
imul
insl
data16
cmp
sbb
mov
jae
mov
loope
lea
in
lods
push
push
dec
sub
mov
loop
out
mov
call
rorl
repnz
xor
jnp
jp
xor
cmpb
pop
adc
hlt
and
leave
dec
or
fisttps
scas
xor
sbb
inc
inc
rorb
add
xchg
inc
push
fstl
or
je
adc
jne
rcr
add
ret
decl
or
pop
stc
or
cld
mov
sti
cmpsl
stc
test
sti
pop
mov
sbb
push
pushl
decb
ret
lods
sub
iret
dec
xlat
and
lret
jno
orl
mov
fcmove
inc
mov
push
loope
in
sbb
jge
loopne
out
int
loope
dec
in
idivb
mov
das
cld
push
jg
pop
test
pop
inc
cmpsb
or
lea
leave
dec
fadds
outsb
ljmp
popa
mul
lea
jg
ljmp
mov
outsb
mov
mov
add
or
pop
add
stc
repnz
push
orl
mov
sti
repnz
arpl
ret
les
fs
aaa
or
xchg
ja
fs
test
in
jge
sahf
or
mov
mov
push
push
cmp
stos
aas
push
aam
dec
sbb
fidivrs
test
inc
ret
stos
dec
popf
nop
xor
mov
in
cmpsb
mov
mov
mov
and
push
and
ret
push
shrb
mov
or
sub
xchg
roll
mov
pop
in
dec
movsb
leave
and
mov
call
inc
or
imul
mov
pop
in
lods
faddl
pop
in
jle
repz
lds
je
push
mov
xor
cmp
mov
lret
mov
testl
cwtl
aas
popl
leave
std
pop
and
xlat
lods
inc
popf
out
hlt
icebp
ret
inc
mov
pop
pop
inc
sti
out
push
call
or
and
or
and
sti
int
jg
in
dec
xor
add
lea
sub
sti
outsl
jno
mov
xor
aad
lods
sub
sbb
fstl
scas
mov
or
and
pop
sbb
cmc
pop
jb
mov
out
pop
inc
jne
dec
cmp
or
sub
adc
pop
push
data16
scas
divb
dec
sti
adc
imul
ret
out
add
cs
pushf
arpl
not
std
pop
mov
imul
push
loopne
pop
xor
arpl
mov
nop
scas
loope
lds
push
add
rcrb
adc
aad
sbb
scas
xchg
divw
cmp
jae
shrl
popa
popa
mov
movsb
insl
mov
ja
mov
add
cmp
inc
adc
mov
adc
inc
jle
jns
push
test
sti
mov
push
pop
push
and
mov
btc
mov
jp
mov
sub
jnp
gs
imul
stc
into
push
xchg
and
cld
fistpl
push
test
inc
mov
adc
pusha
popf
xchg
or
es
sub
mov
or
push
fcomi
idivl
movsb
push
mov
mov
mov
push
ja
fnstsw
lcall
cmp
bound
mov
add
and
sbb
push
pop
ret
clc
mov
cmpsl
or
scas
push
mov
xchg
sbb
push
xor
cmpsb
lods
inc
loope
mov
xor
iret
call
shlb
and
add
loope
fbstp
push
cmp
pop
aas
sbb
jns
push
insb
std
pushf
daa
repnz
cltd
xchg
cmp
add
jmp
cs
fcomps
mov
cmp
xchg
sub
xchg
xchg
in
das
mov
xchg
andl
push
ficoml
sbb
push
adc
mov
je
xchg
icebp
movsb
sub
fisubrs
ss
stos
sub
fidivrl
mov
loope
ficompl
repnz
leave
pop
bound
popa
enter
and
mov
je
popf
test
pop
imul
or
xor
cld
xchg
fsubrl
add
hlt
or
mov
fwait
mov
scas
outsb
mov
xlat
clc
lea
sbb
mov
test
dec
pop
inc
add
sub
inc
lds
jnp
test
cmp
test
xchg
xlat
stos
mov
stos
cmc
lret
lcall
adc
cmp
in
shll
mov
fwait
push
lret
insb
adc
mov
sbb
ficompl
mov
aas
or
mov
lret
cwtl
cwtl
and
int
cmpsl
ss
js
jbe,pt
fstps
and
icebp
push
push
rorb
mov
fs
mov
leave
and
imul
int3
xchg
ljmp
push
js
mov
fwait
in
stc
fcoms
xchg
mov
jl
pop
push
mov
push
mov
shr
lret
sub
sbb
sbb
jb
jne
scas
sub
imul
or
mov
movb
mov
filds
lea
test
pop
movsl
mov
mov
lods
sub
js
mov
and
cli
dec
xor
popf
les
or
rol
cmc
jno
cmpl
test
data16
and
in
mov
sbb
push
jno
cmp
xchg
sbb
mov
in
inc
inc
pop
idiv
mull
hlt
movsl
shlb
mov
shll
in
nop
loopne
add
mov
fstps
and
aas
push
inc
pop
idivl
ds
jbe
mov
stos
xor
push
cmpsl
outsb
jge
movsl
push
pop
push
and
jne
push
lea
mov
iret
and
and
inc
cmc
sti
stc
stos
fistl
cmpsl
add
rclb
addr16
sbb
inc
xor
lock
sbb
out
pop
fbld
xchg
pop
cs
mov
add
pop
outsb
lods
cmp
mov
imul
rcrb
mov
icebp
clc
aam
rorb
dec
stos
ret
outsb
lock
clc
fwait
xchg
ds
sbb
sub
ds
lret
push
jno
dec
ret
ss
loopne
sub
jne
cmpsb
cmp
mov
sub
cltd
jmp
cmc
dec
adc
insb
nop
push
movsb
xor
push
and
out
add
xorb
add
loop
mov
cmp
jb
fcomps
mov
pop
out
sbb
rcll
stos
cmc
xor
addb
pop
lcall
add
ljmp
jp
jg
icebp
adc
loope
pop
pop
repz
mov
dec
mov
lret
loop
mov
xorl
push
lods
mov
inc
fnstcw
add
icebp
ret
or
mov
pop
mov
jbe
sub
pop
sti
mov
push
addb
mov
mov
push
fdivr
ja
xrelease
vmread
aaa
loopne
add
mov
pusha
in
orb
mov
jecxz
adc
dec
aaa
fnstsw
jae
in
mov
mov
or
sub
dec
xchg
jnp
pop
mov
lods
scas
and
psllq
mov
add
adc
test
cmpsb
mov
sub
sbb
cmp
repz
fnstcw
inc
xor
out
jo
xor
dec
les
arpl
mov
jl
sbb
mov
jecxz
xchg
test
mov
jno
test
lcall
fs
je
leave
jbe
xchg
mov
daa
xchg
xchg
and
iret
stos
and
cmp
nopl
dec
repz
lret
out
xchg
adc
xor
mov
push
adcl
ficoml
insl
and
loope
or
xor
sub
push
stc
out
movsb
pop
into
call
stos
push
add
ss
push
push
js
sbb
mov
inc
cmpsb
sbb
or
js
shlb
aam
out
fwait
cmp
call
decl
lret
pop
loope
sub
inc
sbb
xor
xor
out
and
ret
call
mov
inc
sahf
imul
inc
mov
fdivp
jno
std
pop
stc
shrl
xchg
das
mov
arpl
xchg
in
stos
xor
aad
add
punpckhbw
mov
xor
cmp
addb
mov
cmpl
inc
arpl
mov
rcll
fs
jge
aam
movsl
pop
repnz
jmp
add
sbb
push
sbbb
sub
je
sub
cwtl
mov
mov
inc
dec
fsubrs
leave
fdivs
inc
cmpsb
push
mov
dec
andl
stc
push
jb
loop
inc
adcl
lds
in
sti
push
scas
sub
fistpl
pop
iret
pop
pusha
pop
xchg
sub
test
adc
and
enter
lcall
jne
mov
jo
mov
shll
mov
or
lea
add
lods
xchg
sarl
dec
inc
mov
sbb
fisttpll
int3
xor
jecxz
in
inc
popaw
adc
mov
push
cmpsb
scas
stc
jp
shlb
mov
pop
sub
insl
leave
mov
jb
cs
mov
mov
sbb
adc
loop
cmp
mov
popa
dec
and
sub
jl
jmp
bnd
pushf
xchg
xchg
sub
hlt
iret
push
loopne
jns
std
insb
push
dec
sbbb
mov
pop
imul
insb
or
shr
and
lds
xor
pop
xor
jp
test
adc
ss
daa
push
adc
jne
nop
pusha
fsubl
jnp
fimull
loopne
dec
aam
push
xor
push
pop
cli
aad
inc
or
adc
sbb
xchg
ss
adc
iret
lods
not
stos
addb
sbb
fcoml
add
push
add
adc
pusha
inc
mov
cmp
cld
das
adc
data16
mov
jp
inc
ds
fstl
jle
or
mov
jns
lret
pop
clc
sub
adc
roll
jo
pop
rorl
popa
clc
ljmp
mov
mov
out
push
movsb
mov
inc
sub
jae
and
pop
js
push
mov
push
or
mov
sbb
xor
mov
loopne
dec
mov
xlat
popa
xchg
nop
rcll
xchg
push
pop
das
imul
cmp
mov
mov
cmp
jo
enter
test
movsl
inc
ljmp
xor
imul
sarb
mov
mov
lea
push
push
fincstp
push
in
ret
je
movsb
and
push
jge
cli
fidivl
fildll
mov
ljmp
sub
push
lret
cs
pop
mov
and
mov
fcoms
push
dec
faddl
sbb
stos
scas
sub
or
lret
pop
jne
push
or
aaa
in
fidivs
lcall
adc
hlt
nop
add
nop
push
fstpl
sbb
cmpsb
mov
push
jge
sbb
inc
into
fstpt
mov
fimuls
lock
mov
cmp
fs
jg
jno
and
and
stc
dec
pop
cmpsb
jp
fdiv
ficomps
lods
pop
aad
sbb
popa
out
mov
frstor
loope
push
loope
mov
ret
push
ljmp
push
ds
fdiv
pop
or
push
imul
mov
pop
test
sbb
test
dec
outsb
or
test
jl
dec
jp
lock
mov
test
jp
xchg
loope
xorb
jo
sahf
sub
fs
cmpl
cld
xchg
mov
mov
cli
mov
jae
or
loope
test
inc
loop
mov
xor
aam
loopne
das
jl
scas
inc
adcl
add
pop
in
and
enter
les
pushf
dec
gs
imul
add
aaa
sub
addr16
jo
cli
lods
or
aam
add
jae
daa
and
sbb
out
pushf
xchg
shrl
test
pop
cli
lods
push
jb
xor
scas
pop
mov
rcr
xchg
push
aad
sbb
rol
fwait
adc
adc
dec
sahf
lods
jo
int3
push
xor
adc
jne
lods
and
les
xchg
push
out
pusha
test
mov
imul
enter
pop
negb
sbb
jmp
jnp
add
ret
das
xchg
add
pushf
leave
jns
aas
push
cmp
fistps
jmp
sbb
inc
cmp
mov
into
les
icebp
inc
test
cli
dec
leave
jb
or
mov
mov
ficoml
xchg
push
jg
push
jbe
jbe
ret
pop
sub
or
adc
pop
arpl
lcall
adc
inc
shll
dec
lret
lds
xchg
shlb
test
arpl
loopne
loopne
or
push
cmp
mov
roll
adc
cli
dec
icebp
imul
pop
or
in
aaa
pop
sub
js
inc
mov
cltd
orb
xor
movsb
clc
ret
lods
ffreep
or
ret
push
or
mov
test
in
or
sbb
cmpsb
push
mov
leave
cli
popf
out
cs
cmp
stos
out
push
sbb
aaa
and
push
ret
jb
cwtl
out
inc
cli
inc
hlt
mov
mov
lock
inc
lea
sahf
test
out
dec
pop
xchg
std
or
outsl
into
sbb
dec
cmpl
lea
sub
xchg
cmpsb
lods
out
sub
pushf
cs
mul
xorl
cmp
mov
push
pusha
insl
pushf
lods
pop
lds
pop
cs
push
dec
repnz
divb
stos
out
add
nop
mov
xchg
push
mov
push
pop
push
mov
push
popa
fwait
or
adc
aas
fdivrl
push
and
inc
push
jp
mov
mov
cltd
cmpsb
mov
inc
dec
std
int
adc
stos
popf
xor
scas
es
push
mov
mov
call
in
mov
fucom
and
lret
data16
jle
xchg
fbld
push
cmp
jnp
insb
dec
mov
nop
xchg
scas
aam
push
shl
ja
imull
adc
iret
cli
gs
mov
and
lds
test
daa
in
bound
pusha
pop
sbb
in
in
mov
pushf
xchg
popf
test
arpl
mov
testb
idivb
ds
inc
repz
sub
pop
ds
jle
decb
aaa
jge
fdivrl
cmp
pop
xchg
test
incl
add
xchg
sbb
adc
das
insl
lods
mov
xchg
sar
in
xchg
negl
cli
adc
cld
xlat
jge
decl
cmp
clc
push
ficomps
test
cmp
in
and
cld
dec
test
mov
inc
mov
mov
mov
push
push
in
and
loop
int
ret
jno
icebp
push
adc
fcmove
cwtl
data16
in
hlt
mov
loopne
lds
lods
cmp
je
cmp
stc
or
enter
aad
rcr
int3
inc
cmpsb
and
xchg
mov
repz
or
fsub
xchg
jbe
fs
sar
xchg
adc
cmc
lahf
xchg
jae
mov
enter
jo
push
in
push
lcall
in
inc
bound
inc
add
lods
and
shrl
mov
aam
cmp
xchg
movl
xchg
mov
js
cmpsl
xchg
xchg
xchg
jb
mov
lds
push
cli
fcoms
test
in
and
mov
dec
mov
repnz
adc
jp
lods
ret
enter
xchg
fistps
mov
sbb
xor
adc
inc
js
js
jbe
out
sbb
mov
push
int3
arpl
pop
mov
js
rclb
or
push
cmpsb
lea
popa
je
pop
es
add
repz
das
scas
test
sahf
ja
sbb
roll
sbb
mov
add
ss
xchg
or
push
adc
xchg
stos
cmpsl
sub
lods
xlat
mov
sarb
sub
les
pop
popf
sti
mov
es
adc
xchg
enter
cmp
dec
cs
lahf
stos
push
je
sbbl
xchg
pushf
fbstp
mov
scas
repnz
adc
push
push
fiadds
inc
cmpsb
imul
icebp
popa
enter
rcrl
test
sarl
bound
pusha
mov
test
dec
mov
stos
scas
mov
inc
mov
arpl
mov
xchg
out
dec
test
rorl
xchg
and
sbb
pop
cmp
mov
loopne
mov
sub
sti
fsubrl
stc
clc
mov
mov
shlb
adc
or
and
jne
ret
imul
sbb
push
aas
push
cmp
pop
push
mov
add
ja
fdivrl
add
leave
and
mov
pusha
mov
inc
dec
push
inc
cmpsb
fldenv
jg
popa
pop
xchg
or
push
cmpsb
es
test
xchg
inc
jl
jbe
ljmp
mov
inc
loop
mov
cltd
cli
pusha
sahf
mov
aam
cmpsb
xchg
jp
das
fsub
in
fwait
ret
shlb
push
iret
stc
adc
push
addr16
loope
or
cmp
sub
mov
xor
sahf
les
out
push
lcall
xchg
mov
ljmp
xchg
mov
loope
pop
jl
lret
mov
xor
imul
sub
dec
xor
or
mov
mov
jge
ret
roll
gs
das
cltd
mov
dec
gs
bound
out
int
jno
je
and
jb
cmc
stc
sarl
fnstcw
inc
cwtl
push
xor
push
bound
popa
negl
pop
xchg
mov
aam
and
mov
mov
pusha
push
pusha
adc
stc
sub
add
pop
iret
nop
push
lahf
lock
xor
outsl
adc
and
repnz
pop
push
or
ret
inc
mov
jbe
pop
adc
lea
test
push
sti
imul
and
mov
mov
mov
inc
and
mov
jne
daa
sub
dec
pop
mov
push
clc
lods
fnsave
cld
lahf
cmp
clc
je
int
cltd
mov
lods
inc
push
jae
sub
in
mov
rcl
push
test
add
sbb
xor
stc
jmp
insl
cmc
cld
out
into
dec
ret
or
add
mov
push
outsb
push
js
test
fcomp
scas
nopl
sbb
sub
and
ficomps
mov
ret
push
in
xchg
jbe
sub
arpl
arpl
ficoml
aas
adc
cmp
pop
sti
fnstenv
mov
mov
or
adc
add
jp
imul
das
mov
insl
sbb
out
testb
mov
pop
add
fidivrs
inc
fstps
jb
pop
jle
or
push
aas
push
aas
in
mov
dec
ret
mov
or
incl
cli
stos
lea
adc
mov
pop
cltd
push
jle
fldpi
add
aas
ja
push
aas
cmpsb
mov
cmpb
in
adc
jecxz
lods
jecxz
sbb
jp
xchg
andb
add
int3
lds
dec
test
loop
mov
jecxz
pushf
pop
add
nop
dec
push
sti
decb
les
das
mov
dec
lds
mov
movsb
adcb
push
mov
inc
adc
dec
dec
mov
and
cmp
aas
call
jns
fs
out
iret
cmp
into
xor
fnstcw
ja
popa
jne
lea
test
mov
cld
in
fwait
mov
push
jno
test
adc
push
das
loopne
fildll
push
pop
pop
adcl
ret
je
inc
lcall
jle
add
popa
arpl
mov
or
dec
aam
mov
out
dec
dec
pop
in
icebp
js
jmp
or
inc
push
inc
jb
cmpsl
add
fs
aas
scas
out
mov
rcll
mov
mov
lods
jg
inc
cmpl
outsl
jne
popa
int
jp
addr16
mov
pop
adc
sbb
push
push
dec
loope
sub
mov
sub
cwtl
mov
jle
pop
cmc
inc
ljmp
jp
or
fistpll
add
or
nop
add
and
nop
pop
mov
inc
nop
add
scas
mov
shll
in
out
repz
out
out
or
lahf
sbb
sti
jbe
and
and
mov
dec
gs
or
pop
pop
jns
pop
sub
or
idivl
ja
test
cli
pop
push
jns
filds
lahf
mov
movl
push
jg
jge
pop
push
test
sarb
ja
mov
jo
das
movsb
push
jb
xor
sub
aas
adc
shrb
popl
dec
mov
fsubs
and
lock
sub
in
inc
dec
jnp
lret
fisubs
or
push
xchg
fwait
add
fsub
std
sub
imul
pop
aas
dec
js
clc
push
imul
outsl
fwait
rclb
xchg
stos
xchg
and
int3
std
and
mov
in
push
das
lods
adc
test
pop
fsubs
shrl
pushf
call
repnz
scas
mul
mov
out
add
popa
cmp
imul
imull
loope
stos
lahf
fdivrl
pop
inc
mov
jno
sbb
outsb
mov
add
in
add
scas
and
fildl
test
hlt
cmpsl
xchg
xor
and
nop
sub
lea
jge
or
int3
mov
dec
lea
repz
stos
out
movsl
pop
mov
mov
jp
pop
mov
arpl
mov
icebp
mov
add
jne
or
loope
insb
push
sub
pushf
test
rclb
dec
cmpsb
adc
enter
outsl
inc
jmp
fs
sub
sahf
ds
cmp
fbstp
inc
push
push
cmp
jo
test
mov
pop
sub
ficoms
scas
mov
push
jns
aas
out
daa
xor
sahf
mov
or
cmp
ja
xchg
inc
inc
enter
xorb
xchg
int3
aad
xor
push
and
mov
push
lods
aad
xlat
xchg
aas
sbb
cmpsb
dec
jmp
push
push
sub
sub
xchg
sub
sti
push
pushf
fimull
mov
mov
mov
jbe
lods
xor
ja
sub
in
cmp
pusha
and
in
mov
adc
mov
out
in
sub
ljmp
adc
imulb
rclb
lret
aas
loop
imul
push
adc
in
mov
adc
xor
clc
add
pop
test
test
xor
dec
add
inc
in
cmpsb
out
pop
clc
out
into
cmpsb
xchg
mov
stc
xor
adc
pop
xor
into
jmp
add
fnstcw
testl
or
adcb
mov
mov
pop
jns
mov
pop
xorb
bound
out
clc
mov
cmp
gs
cmpsb
push
fcomps
bound
enter
aad
jmp
cld
aam
insl
sbb
pop
ret
add
rcrb
push
cvtpi2ps
mov
std
adc
mov
xlat
imul
out
jle
stc
sub
negl
mov
popa
stc
stc
push
sbb
movsb
hlt
mov
cwtl
out
scas
adc
outsl
gs
insl
add
sbb
rcll
gs
pavgb
or
into
outsl
xor
mov
jmp
cmpxchg
cld
xchg
das
cmp
and
lea
pop
ss
idivl
pop
xchg
fnstsw
std
nop
pop
leave
add
cmp
lods
and
pop
idivl
xchg
push
iret
mov
dec
jo
lcall
jae
mov
pushl
add
xor
aam
repz
imul
pop
popa
clc
jle
mov
adc
lock
jmp
and
cld
iret
hlt
pop
jge
mov
icebp
es
fisttps
mov
test
es
inc
lcall
sahf
cmp
jae
les
mov
push
shll
ja
xor
faddp
adc
pop
cmp
and
outsl
xchg
add
mov
aam
ja
lcall
lods
cld
pop
rorl
cmpsl
cmp
and
dec
xor
shll
and
in
xchg
mov
jge
leave
movsl
orb
mov
test
sub
insb
and
dec
in
jmp
xor
fistl
pop
cwtl
fiadds
pushf
mov
xchg
and
lock
les
xor
sub
bound
sbb
lea
and
shrl
mov
mov
jge
lahf
lea
mov
pop
fimull
cmp
pop
jmp
test
lahf
mov
lea
inc
into
adc
mov
cmpsl
outsl
test
shl
and
xacquire
lcall
mov
decl
cmp
sub
movsb
mov
lahf
dec
lret
mov
fs
mull
jl
clc
mov
hlt
sub
mov
out
mov
and
and
adcb
into
xor
testl
adc
inc
ja
push
sub
insb
xchg
xor
cmpsl
lock
sarl
int3
orl
mov
outsl
push
fs
pushf
inc
push
popf
in
mov
push
mov
xchg
jge
mov
mov
addr16
inc
movsb
jb
cmp
testl
cwtl
fistpl
inc
dec
lods
out
or
aam
push
movsl
gs
xchg
rorb
mov
popf
scas
jle
pushf
hlt
insl
jl
add
cmc
sahf
stc
or
test
dec
jg
sub
pop
jne
frstor
push
cmp
fcmovnb
sahf
sbb
push
pusha
fnsave
je
dec
sub
cmpsb
in
lret
add
xchg
sub
fisttps
mov
loope
xchg
dec
insl
pop
sub
xchg
inc
push
addb
push
xchg
stos
outsb
aad
mov
inc
xchg
push
out
xchg
rcrl
cmp
je
ret
imul
fwait
stc
push
sub
inc
dec
inc
pop
add
imul
fistps
sti
xor
inc
shrl
cwtl
cmp
jle
add
divl
jp
gs
mov
in
mov
lret
call
or
push
das
cmp
xchg
dec
rcrl
ret
stos
and
popa
loopne
cwtl
jbe
lret
sub
mov
test
pop
inc
in
push
push
inc
mov
cmp
jle
and
push
psubw
sahf
xchg
icebp
movl
hlt
mov
in
sbb
push
aad
fcomps
fmull
add
pop
sarl
test
cmpb
rorl
insb
pop
push
jge
aam
fsubrs
in
dec
andb
mov
ss
dec
sbb
mov
or
pop
js
jns
sbb
push
mov
and
test
sub
sub
lahf
sub
sub
fisttps
pop
out
mov
adc
xchg
mov
cmp
rcll
inc
loopne
popa
les
inc
icebp
cmp
pop
fdivrs
jmp
jb
leave
inc
cmp
adc
pop
inc
push
dec
mov
sub
scas
and
outsl
cmpsb
imul
xlat
in
lods
ret
outsl
push
jae
mov
or
ret
xor
scas
or
pop
or
insl
inc
clc
cld
push
gs
xlat
jle
sub
cmp
lods
jnp
dec
mov
sub
jns
or
mov
movsb
pop
mov
rclb
mov
xchg
mov
ret
decl
sahf
mov
gs
cmp
mov
pop
mov
in
out
fcompl
and
ret
xchg
insb
dec
lcall
xor
into
mov
add
leave
add
xchg
jae
in
icebp
sub
popf
rolb
lods
cltd
adc
ss
inc
stc
mov
aad
shll
repz
rcrb
jecxz
popf
adc
sub
xchg
xchg
in
mov
xor
insb
add
fsubrl
lock
movsw
fwait
loopne
cmp
or
pop
lahf
int
daa
sub
or
pop
and
bswap
pop
sub
paddb
and
dec
xchg
dec
push
std
mov
mov
hlt
mov
aaa
xor
in
fsubs
mov
mov
dec
aaa
add
setl
daa
addr16
xchg
pcmpgtw
xchg
pop
out
push
add
clc
add
test
and
push
mov
push
cmpsb
lea
popf
mov
loop
movsl
push
ret
xor
inc
in
pop
xchg
sbb
pop
test
iret
cmpsl
mov
push
jmp
mov
roll
jp
sahf
ss
data16
rcrl
imul
push
xor
jle
pop
ret
jo
pop
push
nop
sub
das
mov
dec
cmp
sub
xchg
adc
jne
push
fdivs
sub
push
mov
inc
out
shll
mov
rorl
xor
or
mov
xchg
inc
xchg
pop
mov
or
cmp
cltd
and
lea
pop
out
and
dec
jg
out
sbb
jmp
sub
sahf
in
lcall
icebp
jnp
int3
pop
mov
jle
loop
sub
cmp
hlt
pop
sahf
mov
add
pop
jecxz
pusha
cmp
adc
pop
and
ret
mov
rorb
outsb
mov
dec
aaa
dec
ret
ja
pop
lea
dec
adc
in
ret
xchg
inc
daa
pop
cmp
sub
inc
addr16
xchg
aas
jl
test
and
dec
mov
add
cs
sub
mov
or
sarl
sub
cmp
fcoms
mov
out
inc
cmp
push
int
shll
mov
adcl
jmp
mov
nop
mov
or
pop
xchg
xor
and
lret
orl
cld
jge
mov
jno
adc
pop
outsl
movsl
cmp
inc
into
rcll
test
shll
test
insl
adcb
inc
les
test
inc
xlat
hlt
cmpsb
filds
adc
flds
pusha
rorb
xchg
lds
xchg
pushf
sub
stos
dec
cmpsb
sub
cwtl
arpl
pop
scas
push
stos
mov
lods
add
push
add
negl
cmpsl
call
sub
bnd
vmwrite
mov
popf
mov
sbb
push
sbb
fwait
push
push
jmp
adc
sarb
push
cld
push
les
push
mov
loope
movsl
shll
fwait
mov
xchg
loop
jno
mov
rorb
cmp
push
loopne
and
jno
sbbl
insl
in
or
mov
daa
push
movsl
mov
fcomi
push
inc
out
cmp
ficompl
data16
in
stc
adc
mov
adc
inc
sbb
adc
add
mov
and
pop
icebp
pop
stos
mov
mov
scas
and
jb
stos
leave
pop
test
lcall
gs
aad
mov
pop
jns
push
adc
outsl
mov
dec
test
popa
vmulss
xlat
addr16
jnp
rolb
cmpsl
shrl
js
pop
add
les
cli
into
pop
cmp
test
and
inc
mov
cli
addr16
fs
iret
xor
shl
and
aas
repz
add
pop
jo
inc
cltd
pop
mov
mov
jge
dec
cmp
inc
je
bound
pusha
test
leave
bound
xor
xor
jl
jge
rol
les
pop
pop
call
cld
out
dec
mov
push
stos
data16
arpl
sbb
inc
cmp
mov
loop
sbb
cmc
test
xor
adc
dec
add
pop
inc
loopne
jne
stos
sahf
add
sub
dec
pop
pop
cmp
xchg
xchg
loop
jb
in
jp
xor
adc
jecxz
gs
cwtl
push
test
sub
out
das
call
or
mov
pusha
mov
or
mov
lock
cmp
outsb
inc
or
push
xchg
popf
xor
pop
dec
test
xor
sbb
pop
repz
dec
and
leave
mov
xchg
xor
jno
popa
jbe
decl
std
mov
xchg
pusha
adc
subl
mov
jge
fstpl
sbb
sub
add
adc
xchg
fsubrp
nop
jp
adc
mov
popa
jnp
outsb
jp
int
sbb
cmc
cmp
lods
push
inc
iret
ss
lahf
fildl
cmp
mov
inc
push
pop
xchg
bound
cmp
cwtl
std
enter
mov
dec
mov
fwait
test
xchg
pop
lret
push
insb
xor
pushf
cs
lods
dec
adc
dec
insl
negb
pop
push
test
fmull
xchg
mov
call
cld
cs
call
js
push
and
pop
mov
fdivrp
insl
cmpl
icebp
xor
mov
cmp
adc
or
adc
and
pushf
stos
inc
push
out
pop
rorl
push
push
add
pop
dec
jnp
mov
ljmp
shrl
xchg
cmpb
inc
sahf
xchg
mov
into
pop
or
adc
xor
push
sar
jb
ds
adc
pop
push
inc
stos
lret
jecxz
ret
fidivrs
adc
out
push
and
sahf
jle
sub
addr16
hlt
inc
fdivrl
stos
jg
fwait
out
xchg
mov
xchg
lods
inc
mov
repz
dec
jp
int3
push
or
inc
jbe
sub
es
je
push
ret
pop
es
sahf
push
adc
pushf
rorl
sub
cmp
and
gs
repnz
xchg
das
out
mov
inc
adc
jo
jb
pop
jns
scas
imul
mov
mov
bound
jnp
or
add
mov
mov
dec
lds
lret
sbb
hlt
sarl
jo
test
cmpl
jge
lock
mov
clc
add
cli
cmp
or
daa
mov
push
out
sti
sbb
jl
cmc
inc
jle
in
cld
lcall
pop
push
xchg
cmp
fcmovb
cmp
popa
xor
ja
xlat
mov
icebp
dec
mov
cwtl
imul
mov
xchg
pop
sub
in
cmc
aaa
dec
mov
jmp
ret
aaa
dec
movsl
pop
pop
and
xor
xor
cmc
fidivrl
pop
and
pop
leave
jo
out
xor
mov
mov
sub
into
add
lcall
cmp
inc
test
lods
mov
pop
cmp
fcomp
mov
lea
jg
dec
sub
clc
dec
xlat
stc
push
dec
mov
out
adc
push
pop
mov
jns
xor
cmp
add
push
aaa
into
clc
mov
outsl
pop
ds
dec
mov
push
out
adc
jb
xchg
bound
fs
ficompl
cmc
outsb
inc
mov
in
xchg
aad
mov
ret
inc
lahf
or
imul
dec
xor
mov
mov
mov
movsb
mov
sub
loop
add
sbb
push
jmp
dec
add
loopne
in
adc
fsubrp
adc
in
nop
daa
dec
daa
push
cmpsb
movsl
mov
pop
adc
and
mov
jge
mov
bound
fisubrs
aam
xchg
and
fstps
mov
jo
shll
mov
cmpsl
pop
shlb
or
mov
pop
jmp
ret
add
hlt
hlt
cld
mov
insb
fcomi
xor
pop
jo
fstps
shll
arpl
jne
pusha
mov
cmp
cltd
pushf
rcll
cmpb
idivb
arpl
cld
scas
int3
ja
jmp
xchg
mov
and
int
das
cltd
jge
adc
push
out
test
negb
jl
call
jecxz
mov
movsl
push
or
jp
dec
adc
inc
and
or
addl
ficoml
dec
dec
ror
jg
ss
xchg
scas
lret
aad
adc
fsubp
or
xor
xchg
push
add
pushf
mov
out
inc
sbb
jne
pop
popf
clc
test
sub
cmp
mov
and
cltd
sarl
or
xchg
out
int
cmpsl
xchg
fnsave
shlb
xchg
call
pop
adc
das
pop
data16
xor
or
sub
xchg
outsl
push
push
mull
out
jp
sub
ror
sub
sarb
dec
fnsave
arpl
sti
mov
lock
fmull
out
mov
cmp
cmpl
or
lret
adc
push
push
or
adc
ret
or
iret
sbb
mov
sub
inc
call
mov
cld
std
mov
in
add
cmp
pcmpgtb
dec
xchg
arpl
cmp
add
mov
push
adc
cmp
cltd
lret
cmc
mov
cmpsb
popa
jmp
add
pop
test
or
cli
inc
cwtl
adc
xchg
sbb
gs
shr
sub
add
ljmp
test
mov
pusha
mov
lret
bound
lret
bound
and
mov
lods
xchg
std
jne
adc
clc
rclb
ljmp
sbb
mov
xor
or
bound
icebp
rol
xchg
sbb
imulb
and
ret
mov
fmull
pop
roll
fidivrl
mov
push
mov
subb
cltd
sbb
bound
mov
mov
mov
loope
fbstp
in
testb
mov
cs
adc
adc
loopne
test
dec
jmp
mov
int
int3
gs
mov
das
cltd
adc
mov
mov
ffree
jecxz
sub
mov
ret
xchg
stos
in
hlt
dec
mov
mov
inc
sub
sbb
cmp
fwait
movsb
stos
fcoml
dec
cmp
sbb
mov
aaa
lret
cli
jb
call
test
xlat
mov
jg
xlat
push
movnti
cld
stos
insb
mov
xchg
pop
mov
mov
lret
inc
bound
mov
cmc
adc
dec
xchg
sbbl
mov
cmc
jp
inc
mov
sub
mov
xchg
cwtl
cmpsb
mov
xchg
fwait
push
arpl
lcall
test
lret
or
int3
add
rorb
cmp
cwtl
push
push
cmp
mov
clc
pushf
mov
add
ja
std
add
mov
and
sbb
cmp
adc
mov
shlb
cmp
jns
enter
push
loop
fcomps
mov
mov
sbb
push
nop
roll
aam
inc
into
xchg
jecxz
sub
leave
in
xchg
push
xchg
inc
xchg
mov
mov
push
cmp
sbb
stos
jno
mov
or
jne
push
ror
mov
xor
fnstcw
push
mov
fcompl
test
and
mov
jne
xor
loope
adc
cwtl
lea
xor
pop
shlb
cmp
fs
ror
mov
scas
inc
jnp
adc
test
push
test
repnz
and
dec
rcll
jb
mov
dec
dec
jbe
dec
addl
sub
push
outsl
sbb
xor
mov
push
fwait
scas
imul
xchg
and
mov
ds
ss
fnsave
add
and
loope
ret
mov
add
mull
nop
push
inc
and
pop
lock
andb
daa
jp
in
xchg
xchg
jbe
popf
sub
or
into
and
cmpsb
fabs
mov
jno
mov
inc
or
in
imul
aam
fildl
xchg
aad
loopne
fwait
loopne
cmp
jp
mov
or
lock
sbb
mov
out
fdivs
pop
add
mov
fidivrl
or
jl
add
adc
or
shrl
cs
adc
pusha
fcom
dec
xor
pop
pop
sub
cmp
inc
jg
nop
sbb
stos
jbe
test
ret
stos
dec
ficoml
xchg
lret
push
shlb
lods
add
xor
scas
loope
loop
inc
mov
fcmovu
xchg
jge
bound
negl
add
add
push
aas
ja
arpl
out
test
lds
dec
pop
dec
jnp
out
jl
cmp
hlt
pop
rorl
push
mov
push
cmpsl
add
pop
ror
mov
xchg
pop
cmpsb
cmp
ljmp
jae
sahf
es
xchg
xchg
inc
sahf
aam
xchg
lods
mov
fidivl
adc
push
call
popa
adc
push
fmul
push
pop
sbb
add
sbb
or
xchg
mov
sbb
push
lods
jnp
mov
js
adc
push
jmp
mov
aas
rclb
std
xor
cld
cmpsb
add
sahf
mov
cmp
cmp
iret
in
aam
mov
mov
pop
adc
xor
dec
pushf
jp
mov
cmp
hlt
in
repnz
add
lea
cmp
sbb
dec
call
repz
les
mov
std
mov
xchg
sbb
test
rorl
push
mov
scas
in
mov
cmc
and
orl
mov
pop
jnp
mov
pop
in
test
imul
loop
std
cmc
jns
xor
and
mov
or
fmul
lahf
ret
dec
jno
jbe
or
test
jnp
call
nop
inc
xchg
inc
notl
jmp
push
icebp
pop
and
or
imul
fildll
xchg
insl
jp
std
jns
sub
inc
ljmp
pop
adc
mov
ja
fdivr
pop
mov
and
pop
pop
push
test
movsl
test
xlat
xor
mov
push
xor
lret
cmp
cmp
sahf
and
pop
pop
pop
sbb
inc
add
rcr
xchg
enter
sbb
xor
mov
push
lods
stos
or
push
or
or
adc
test
stos
cltd
test
stc
dec
cmp
add
fcoms
jge
lods
push
push
push
aas
xlat
fistps
sub
cltd
loopne
cmp
sarl
stc
jns
out
lcall
test
pop
daa
and
lods
jno
test
dec
clc
call
sub
xor
out
lea
and
aam
ret
sub
hlt
cmpsl
loop
pop
and
insl
cmp
jno
out
or
pushf
jmp
nop
jno
shrb
frstor
and
stos
aam
inc
sub
hlt
and
out
insl
or
inc
loopne
scas
mov
sbb
sbb
xchg
outsl
mov
cmp
mov
sti
mov
stc
pop
cmp
stos
stc
into
push
xor
jb
xchg
adc
jnp
into
push
adc
js
push
add
int
addr16
lret
cmp
mov
push
add
adc
xchg
insb
inc
sti
in
cld
inc
mov
pop
jecxz
jle
sub
pop
adc
xchg
mov
mov
mov
imul
sub
and
pop
fs
sbb
out
push
ja
push
sbbb
cmpsb
mov
mov
fdivrs
mov
xchg
fstps
jle
iret
mov
jne
ret
or
add
push
and
sub
or
push
jnp
out
add
dec
in
rcrb
stos
pushf
xchg
dec
push
lods
lcall
and
jbe
pop
mov
out
loopne
mov
inc
push
xchg
sbb
adc
mov
dec
sub
imul
or
out
mov
and
xor
add
add
inc
inc
ja
push
xchg
lret
xor
dec
cmpsl
daa
dec
rol
and
sbb
inc
std
ret
cmpsl
and
adc
inc
inc
sbb
scas
push
xlat
pop
jb
cmp
and
xchg
std
add
fbld
push
jmp
sbb
dec
insl
mov
out
movl
insb
clc
cmpsl
stos
stc
xor
push
xchg
sbb
sub
mov
loope
sbb
test
jo
comiss
imul
and
jb
xchg
adc
jo
pop
test
push
outsl
pop
cmc
mov
std
orl
xchg
and
imul
out
repnz
icebp
loopne
push
xchg
sbb
cmp
sbb
inc
add
and
jne
scas
sub
xlat
jmp
inc
stc
jne
lds
rcrb
pusha
in
pop
pushf
sbb
mov
pop
lods
xor
jae
mov
mov
movsl
mov
aad
or
lds
test
cmp
mov
or
jno
sub
adc
cs
scas
xchg
lods
push
mov
sub
test
cmc
pop
gs
mov
test
xchg
nop
pushf
sub
mov
ss
mov
sub
mov
dec
pusha
xchg
or
adc
std
ret
sbb
adc
test
cwtl
mov
dec
lods
inc
dec
mov
insb
lahf
mov
or
push
std
jmp
cmp
add
adc
in
or
call
adc
lahf
outsb
std
sbb
push
pop
addb
dec
cld
xchg
in
std
add
mov
imul
stc
push
jne
mov
sti
adc
clc
sub
xchg
cwtl
sbb
cmp
js
sbb
or
mov
dec
lods
inc
and
jecxz
add
pop
int3
ret
push
bound
xchg
mov
push
or
js
mov
xchg
ret
iret
ja
mov
sbb
popa
dec
cltd
mov
cmp
pop
frstor
cli
testl
mov
leave
fcoml
or
cwtl
mov
nop
and
mov
and
add
xchg
js
iret
xchg
xchg
cli
std
or
lret
loope
clc
xor
out
xor
dec
push
inc
jne
inc
jno
into
cmp
fcmovne
jecxz
add
cmp
adc
mov
subb
stc
jnp
jmp
xor
sbb
sub
pop
loop
clc
mov
pop
pop
fs
add
xchg
mov
adc
add
xor
or
xchg
pop
nop
sub
push
aas
mov
stos
imul
jmp
xchg
cmp
xor
ljmp
ljmp
nop
xchg
cmp
inc
in
jnp
imul
aam
xlat
aas
aam
mov
adc
fisttpll
scas
cmp
movsb
rcrl
mov
cmp
cmp
pop
dec
lahf
and
xchg
and
push
dec
hlt
aam
pop
scas
bound
out
std
in
adc
sub
out
cltd
dec
test
or
bound
in
or
cmp
rcr
out
xchg
dec
xchg
push
rorb
aas
mov
dec
iret
jbe
push
push
add
in
scas
mov
adc
sub
icebp
mov
mov
jle
add
lcall
shlb
xor
cltd
loopne
test
addr16
stos
push
outsl
inc
dec
bound
cmp
push
mov
aam
in
movsb
and
jle
pop
sti
push
mov
lahf
js,pt
xor
ljmp
fadds
rcll
aas
in
cmp
outsl
shrb
adc
fdivl
mov
or
pop
or
ror
and
pop
jge
pop
adc
inc
mov
adc
jl
rcrl
mov
or
je
int
inc
fsubl
jbe
xchg
adc
ja
stc
sbb
xor
push
lea
and
sahf
not
push
cmpsb
mov
push
ljmp
lods
cwtl
movsl
push
sbb
repnz
jo
jnp
and
int
mov
aas
pop
nop
popf
mov
xor
lock
mov
in
or
cwtl
push
repnz
gs
pop
or
sbb
stos
push
jmp
push
adc
mov
and
mov
outsl
jle
iret
fisttpl
xchg
mov
push
movsl
hlt
dec
sbb
lds
les
sbbl
mov
inc
roll
addr16
add
inc
or
push
jmp
xor
js
cmc
cmp
movsb
ror
aam
cli
rclb
jle
xchg
sahf
ss
dec
movsl
dec
jg
leave
mov
ret
push
add
add
lods
in
fwait
addl
sbb
popa
pop
daa
mov
pop
aaa
imul
mov
es
xchg
stos
scas
lea
sub
js
push
iret
fisttpll
in
jae
and
in
lret
int
cmp
jo
adc
and
mov
ficomps
loope
pushf
sbbb
adc
outsb
sbb
mov
roll
jnp
sti
stc
hlt
jo
ret
or
xor
add
aam
mov
pop
ret
jno
add
roll
mov
cli
ret
ss
mov
dec
pop
shl
fwait
mov
aas
inc
mov
lods
sbb
sbbb
inc
inc
add
adc
xor
xor
sbb
or
insb
dec
mov
push
aaa
bound
mov
mov
jp
call
clc
or
es
inc
xor
mov
pop
aaa
scas
or
js
or
inc
aad
xchg
mov
ja
sti
shll
push
fndisi(8087
add
ror
and
out
jecxz
inc
pcmpeqb
sarb
mov
xchg
cmp
outsl
int
xchg
mov
lods
sbb
inc
cmp
adc
adc
cli
inc
xchg
xchg
test
or
add
fidivrl
ljmp
nop
call
loopne
pushf
push
jp
mov
js
jno
cwtl
mov
and
insb
shrl
je
or
clc
pop
adc
lcall
add
mov
lods
mov
cmpsb
jnp
stos
sub
pop
adc
fnstenv
mov
nop
jl
dec
int3
or
xchg
mov
adc
movsb
loopne
dec
cld
fcmovb
std
mov
lcall
xchg
ret
mov
ja
pop
repz
xchg
lret
aas
xor
fnstenv
adc
jmp
leave
add
sub
inc
testb
sbb
nop
xor
push
adc
inc
fs
les
xchg
push
mov
int
cmp
call
in
dec
repnz
sub
xchg
jge
dec
push
clc
idiv
loop
mov
pushf
pop
test
xchg
addr16
inc
in
and
xchg
insb
aas
xchg
dec
sub
ret
in
iret
mov
fdivrl
and
push
jno
pop
cmc
ret
jl
xlat
into
cltd
lahf
mov
je
je
xlat
jbe
sub
ds
and
adc
sub
loope
or
out
std
inc
cmp
xchg
mov
outsl
pop
mov
adc
or
adc
out
push
addr16
test
lldt
insl
and
sbb
cwtl
inc
pop
push
insl
orb
call
mov
add
lods
push
mov
push
hlt
cwtl
aam
adc
in
xchg
jns
icebp
outsb
ror
out
mov
cltd
xchg
cmp
xchg
fwait
pop
lahf
and
dec
popa
add
ljmp
inc
pop
ljmp
scas
sbb
adc
aas
stos
ret
sub
dec
faddp
pop
hlt
jl
mov
or
mov
pop
sub
stos
xchg
cmp
and
repz
in
mov
mov
jle
mov
repnz
adcb
les
loopne
cmp
mov
xor
ss
fmull
mov
adc
and
movsl
das
adc
push
int
dec
inc
xchg
dec
xchg
fcmovnu
je
cmpsb
das
jmp
mov
rcll
add
mov
xchg
icebp
dec
fxch
in
data16
andb
js
dec
cmp
mov
mov
jg
jge
push
cmp
push
call
cmp
dec
pop
hlt
mov
idivb
adc
mov
dec
push
je
stos
xchg
dec
sub
xor
insb
out
ror
xchg
dec
pop
fsubrl
popa
sti
negl
cmp
mov
jmp
jno
pop
adc
mov
sub
ss
dec
and
rcl
movsl
pusha
xlat
test
xchg
fsubrs
fcomps
fst
add
jno
jmp
nop
rclb
mov
je
out
in
pop
lea
mov
ret
or
jg
jne
xlat
jecxz
xor
sti
cmp
clc
mov
cs
mov
test
pop
outsb
fildl
xchg
addb
mov
jmp
loop
push
cld
das
sbb
into
dec
add
leave
jp
fcmovnu
sbb
lds
bound
lret
sub
dec
pop
aas
jle
inc
lock
dec
push
fisttpll
dec
dec
sbb
mov
mov
sbb
mov
cs
stos
add
subl
lods
je
mov
mov
in
lcall
addps
fildl
add
rol
mov
lock
push
gs
movsb
in
mov
mov
stos
jge
xor
mov
xchg
outsl
jmp
pop
ja
and
dec
lods
stos
divb
dec
and
test
sbb
mov
das
mov
popf
inc
cmp
jb
and
mov
sahf
mov
out
ljmp
fsts
push
mov
jmp
movsb
mov
push
mov
mov
mov
sbb
shll
jle
in
adc
sbb
adc
imul
dec
les
sbb
inc
sti
mov
mov
or
push
repnz
jge
jae
push
jmp
test
or
or
pop
xor
movsl
mov
imul
pop
mov
imul
rorl
mov
jmp
push
sub
fisubs
enter
in
test
not
in
out
pop
dec
stos
das
adc
add
push
cwtl
push
and
mov
sbb
dec
inc
out
std
adc
push
pop
xor
push
int3
sbb
sub
dec
jae,pt
lods
fs
insl
cltd
or
or
cwtl
mov
push
or
sbb
dec
outsb
ja
shlb
push
xchg
imul
pop
les
fstpt
xor
enter
add
outsl
fstp
fdivl
or
ja
scas
cmp
pop
dec
popf
mov
mov
outsb
inc
hlt
mov
xchg
inc
mov
incl
cmp
and
xchg
stc
into
and
lcall
xor
cmp
movsl
lcall
lret
mov
or
push
rorl
call
mov
ret
lret
pop
xor
sub
push
cmp
test
pushf
cwtl
jmp
sti
xor
rolb
out
push
lock
repnz
adc
jecxz
imull
adc
imul
or
loopne
and
mov
pop
ss
xlat
sbbb
rorb
imul
xchg
daa
dec
pop
mov
mov
mov
mov
xor
cmpsl
mov
fisttps
mov
jns
mov
sub
sub
push
pop
push
sub
mov
inc
dec
out
mov
jp
repnz
inc
iret
pusha
xchg
stos
stc
daa
dec
and
push
std
sbb
scas
push
lahf
call
lods
jge
jno
mov
ror
push
fsubl
fistpl
leave
sbb
es
dec
push
stos
xor
sbb
xor
xor
movsb
loope
jb
stos
xchg
jne
pushf
pop
jo
pop
xor
and
jp
mov
adc
test
jns
sarl
addb
cli
jb
mov
aas
jmp
outsb
xor
pop
jo
adc
fmulp
out
xchg
sarl
roll
scas
lods
sub
nop
xchg
in
cmp
jne
jp
pop
mov
stos
in
ret
testb
mov
mov
rol
sbb
pusha
scas
mov
insb
mov
in
js
shl
in
xchg
push
sub
mov
dec
xchg
cmpsb
xchg
outsl
out
xlat
jecxz
xchg
sbb
cmpsl
fs
adcl
popa
xchg
sub
jns
adc
popf
lret
je
enter
fstl
into
cmp
std
or
adc
mov
mov
cmp
hlt
push
dec
jbe
inc
loopne
sub
std
pop
stos
push
bound
cli
xchg
xor
lcall
dec
clc
mov
stc
adc
mov
adcb
jmp
in
lock
cmc
and
xchg
in
pop
filds
enter
pop
ja
stc
mov
cmc
mov
popa
or
push
aad
repz
sbb
or
pop
jne
or
add
cmpsb
lcall
dec
mov
sub
ret
shll
clc
sub
mov
rol
xchg
popa
pop
mov
lahf
push
insb
inc
dec
out
enter
test
mov
inc
xor
sub
cmp
jno
gs
das
lahf
cmp
cmp
dec
adc
xchg
inc
inc
insl
sub
clc
int
inc
push
cli
dec
xor
cmpsb
add
xor
js
adc
pop
pushf
pop
inc
dec
enter
push
dec
cmp
xchg
push
cmc
xchg
add
mov
mov
or
test
or
sbb
dec
mov
mov
js
out
mov
ss
add
inc
or
aad
sub
clc
std
sbb
adc
ljmp
or
popf
lcall
lcall
add
pop
jae
xchg
cmpsl
hlt
out
sbb
sahf
aam
jno
shrb
push
incb
and
lcall
in
shlb
sub
mov
mov
xor
fimull
push
divl
ds
mov
mov
push
adc
adc
out
sub
sti
mov
fbld
dec
mov
mov
and
gs
mov
mov
das
cwtl
mull
xchg
inc
add
sbbl
popf
cmp
daa
sti
es
adc
out
push
pop
and
jno
lods
ja
sub
pop
int
jecxz
sti
hlt
xor
insb
loopne
lock
add
dec
sbb
mov
cmp
das
sub
dec
push
fsubrp
add
adc
mov
pusha
adc
jb
mov
mov
in
lret
pop
neg
dec
mov
bound
imul
adc
push
ljmp
test
dec
inc
dec
clc
ss
scas
pop
rorb
mov
rcll
out
adc
lahf
loopne
cmp
rcrb
xchg
sub
jmp
push
outsb
pop
sbb
aam
or
popf
rcrl
fisttps
pop
test
dec
iret
adc
shlb
enter
adc
lret
jb
test
fsubs
scas
pushf
sbb
nop
outsl
rorl
out
inc
enter
push
flds
fs
pusha
subb
inc
lret
jns
popf
aas
or
push
xchg
test
inc
dec
aas
outsb
arpl
cli
xchg
sbb
dec
inc
pop
xchg
inc
shrb
enter
in
mov
sbb
js
lret
imull
sub
mov
push
jne
inc
jne
push
cmc
xor
cmp
sti
mov
clc
lahf
ret
sti
mov
dec
iret
xor
push
lods
fwait
or
rclb
sbb
pop
ret
push
push
mov
lahf
xchg
movsl
sub
bswap
lea
and
or
ror
adc
addr16
dec
xchg
mov
mov
fldenv
mov
dec
sahf
les
std
jne
stc
mov
out
not
cmp
inc
jnp
call
clc
addr16
arpl
dec
mov
mov
cs
lods
mov
push
ret
push
inc
xor
jns
int
dec
cmpsb
cli
jno
lds
ljmp
push
adc
cmpsl
mov
mov
leave
add
xchg
xchg
in
ljmp
shll
scas
out
scas
mov
aaa
pop
rorl
iret
and
xchg
std
fs
call
aaa
xorb
mov
mov
xchg
mov
sub
add
lods
push
pop
jmp
cmp
push
int
jbe
xchg
xchg
leave
mov
inc
dec
or
mov
mov
call
pop
iret
and
cmp
ret
shll
fsts
mov
ss
lar
mov
scas
dec
push
gs
xchg
popf
mov
lods
pop
mov
pushf
mov
mov
pop
and
adc
add
push
dec
jp
dec
sbb
sarl
rorl
mov
pop
clc
inc
jnp
aaa
mov
sar
xchg
pop
xor
jmp
orb
pop
int3
lret
cli
mov
aaa
rcrl
pusha
cwtl
mov
int
gs
push
and
sbb
push
push
xchg
mov
or
inc
stos
bound
pop
dec
int3
ljmp
mov
inc
js
fisubs
adc
in
loop
cli
push
xor
and
fsubrs
and
lret
icebp
enter
test
arpl
test
push
cmp
ret
pop
adcb
pop
scas
mov
adc
mov
add
dec
pop
popf
inc
push
pop
xadd
jno
add
enter
enter
ljmp
xchg
stc
cltd
hlt
scas
ret
jb
or
adc
cmp
out
push
inc
call
insb
lds
hlt
js
into
inc
iret
push
push
jno
jge
out
scas
aam
cmp
xchg
mov
lcall
xchg
gs
add
lock
roll
cmpsl
inc
mov
cmc
mov
call
test
adc
pop
inc
ficoml
comiss
sub
push
jb
in
jnp
std
adc
sarb
add
sub
pusha
jno
mov
not
dec
sbb
mov
mov
mov
adc
mov
mov
and
hlt
stos
repz
push
das
in
popf
gs
inc
loopne
dec
test
inc
xchg
cmp
out
add
mov
inc
push
pop
jne
das
bound
shl
loopne
pop
xor
in
adc
shll
mov
jge
mov
jbe
jg
jne
sahf
push
dec
sub
test
sbb
fstpl
push
lcall
inc
nop
movsb
and
sbb
inc
jne
repnz
push
mov
imul
adc
adc
jp
negb
xchg
xchg
mov
sub
add
xchg
push
arpl
dec
sub
or
sub
xchg
cmpsl
loop
pushf
stos
cmpsb
push
jne
adc
fcomi
mov
orl
or
mov
mov
and
and
clc
adc
test
mov
jb
add
xor
aaa
xchg
fstpt
xchg
lds
sbb
popl
dec
cmovs
push
sub
pop
sub
mov
cs
test
push
lret
movsb
jecxz
orl
push
enter
pop
movsb
or
int
ljmp
fildll
test
outsl
gs
and
js
gs
sbb
iret
scas
mov
jb
mov
push
sbb
enter
xchg
dec
rolb
loope
iret
push
rol
mov
aaa
into
lods
mov
fwait
icebp
sbb
ret
repz
dec
xor
lret
test
test
inc
lret
lret
notl
add
cwtl
fcmovnbe
cmp
int3
cmp
and
jl
sub
jecxz
adc
int
test
push
mov
mov
inc
or
sub
pop
adc
arpl
out
sbb
xor
adc
cs
inc
mov
mov
pop
adc
bound
pushf
in
test
aaa
cli
mov
loop
xchg
daa
sub
sarl
aad
and
and
cmpsb
es
cld
inc
mov
jmp
cwtl
out
mov
orb
std
inc
dec
pushf
pop
ficompl
lock
sub
sarb
jmp
or
pop
sbb
mov
fsubrl
cltd
dec
jp
push
push
pop
mov
jne
cmp
push
jnp
shrb
jp
lods
mov
push
imul
sti
sbb
cmp
jno
cmpsl
ljmp
push
pop
push
pop
in
je
jne
or
inc
iret
jle
leave
aaa
test
dec
mov
inc
ficoml
and
cmp
jne
jne
pop
lods
push
enter
lahf
push
and
stos
movsb
adc
movsb
lcall
jp
aad
sti
cmp
jge
hlt
popf
mov
pushf
je
xor
rorl
in
cmpsl
es
stos
mov
pop
mov
fists
aas
pop
fisttpl
cmpsl
and
or
cmpsl
inc
dec
jno
and
negl
and
mov
push
out
imul
xchg
pop
jo
dec
sbb
lea
jno
cltd
sub
daa
adc
mov
jae
fdivrp
push
pop
cli
push
aad
daa
pop
cmc
jmp
adc
push
cs
jmp
gs
mov
adc
aas
mov
and
je
xor
cmpsl
lret
pop
pop
jns
pushl
pop
cmp
je
dec
mov
add
adc
xchg
stos
push
fcmovnb
out
jae
dec
lret
sub
gs
push
aad
sub
mul
push
je
repz
jns
ss
sub
inc
adc
in
in
hlt
add
gs
pushl
cmpb
jnp
aad
xor
lcall
lcall
and
test
push
adcb
leave
jb
fisttps
fnstenv
negb
and
and
iret
mov
scas
and
mov
psubusb
std
popf
popa
sub
test
insb
dec
xchg
pop
arpl
push
jne
mov
scas
cmpsl
xorl
in
mov
ret
mov
xchg
sbb
mov
sbb
jo
pusha
inc
vblendvps
clc
in
repnz
jne
dec
dec
rcl
stos
cmp
pop
ds
fildl
xor
loop
pop
adc
nop
popf
mov
inc
mov
jp
adc
shlb
out
aam
jnp
jecxz
repz
push
pop
add
cmp
pcmpgtw
jno
xor
in
cmpsl
nop
or
jno
xor
int
push
xchg
xchg
mov
or
xchg
scas
lcall
jge
insb
mov
jae
dec
arpl
out
mov
repnz
bound
jne
push
jge
rolb
xchg
mov
fiadds
push
movl
pop
out
inc
xor
fists
push
sub
shr
icebp
or
loopne
and
pop
mov
mov
cli
sarl
lock
mov
push
jne
xchg
jcxz
mov
mov
mov
mov
addr16
popa
adc
and
pushf
sbb
lods
mov
mov
inc
push
inc
addr16
frstor
mov
testb
popf
mov
adc
sbb
imul
shr
ds
test
sub
lret
ret
xchg
loop
shl
out
add
pusha
negl
cld
add
cmpsl
es
xchg
bound
iret
pop
out
mov
pop
jno
mov
into
outsb
test
data16
jl
iret
icebp
fs
ret
outsl
fisubs
add
lds
and
add
pop
push
cmp
stos
push
add
jecxz
loope
clc
pop
mov
js
jle
scas
inc
dec
rol
ds
adc
cmpsb
mov
and
or
into
adc
nop
cmpsb
lods
enter
push
inc
push
popa
fistps
xor
push
in
mov
cmp
negb
jp
std
mov
sbb
add
orb
pop
in
sbb
pop
and
push
pop
sub
mov
aad
nop
icebp
or
movsl
jns
and
inc
out
mov
test
jae
lret
ja
nopl
rolb
pop
imul
dec
mov
mulb
jp
jle
push
lods
push
mov
daa
lods
add
jle
sbb
in
sbb
dec
rcrb
mov
bound
fistpl
nop
cwtl
xor
aas
insl
xchg
stc
jl
push
cmp
jns
sub
pop
gs
jns
pushf
cmp
jmp
pop
into
sbb
jmp
inc
clc
sbb
test
mov
jmp
push
and
adc
faddl
ror
mov
aas
iret
int3
ja
pop
cmp
jecxz
out
dec
in
shll
cmp
pop
out
pop
lods
stc
mov
insb
into
mov
pop
xchg
xor
mov
mov
adcl
xchg
pop
cli
test
push
jge
mov
and
lea
cld
inc
pop
pop
sub
outsl
jns
and
pop
push
fists
add
loop
pop
test
push
xchg
out
mov
pop
pop
xchg
dec
out
int3
fs
gs
gs
js
fdiv
mov
fisttpll
or
lahf
and
sbb
subl
push
jne
mov
pop
xor
fildl
pop
lcall
sahf
into
adc
xor
rorl
mov
cmp
inc
push
jl
push
cmp
outsb
push
jbe
mov
shl
mov
adc
inc
iret
stos
inc
mov
jnp
or
sahf
scas
shr
jnp
cltd
int3
mov
xchg
lret
xchg
xchg
sub
push
sub
jmp
sub
insl
test
fisubrs
jge
sahf
mov
les
add
out
repnz
mov
mov
sbb
mov
dec
outsb
dec
jle
jne
jg
outsl
negb
mov
pop
neg
push
add
in
xchg
cltd
inc
movsl
adc
dec
imul
lret
dec
inc
mov
push
in
andl
subl
sub
sub
cmp
pop
push
lods
std
push
test
xor
inc
push
mov
sbb
push
inc
or
mov
inc
xorb
outsb
scas
mov
dec
and
movsl
hlt
test
lcall
inc
adc
jae,pt
mov
faddl
mov
jne
mov
pop
pop
push
fstp
stos
ja
sub
or
cltd
insl
or
shrb
ret
ljmp
and
add
sub
mov
jmp
xlat
push
mov
je
push
pop
cmp
sbb
loop
xor
adc
push
std
or
mov
jo
mov
dec
mov
mov
push
add
std
mov
shll
adc
mov
imul
mov
sbb
and
dec
fbstp
addb
jb
mov
insb
jmp
imul
or
inc
insb
xor
popa
mull
addr16
mov
cmp
or
out
cld
jmp
cmp
lock
add
xchg
add
sub
inc
leave
shlb
stos
push
andl
jecxz
cmp
lcall
std
js
pop
dec
or
xlat
mov
les
push
ds
add
ljmp
ret
and
dec
xchg
add
addr16
mov
push
inc
mov
cltd
add
xor
sti
std
pop
push
inc
mov
ficompl
mov
xchg
xchg
pop
inc
cmp
xchg
and
in
xor
push
insl
rorl
or
mov
sub
jmp
test
xorb
xlat
push
in
cltd
mov
adc
leave
stos
out
mov
nop
fidivs
inc
mov
cmp
pop
das
pop
push
stc
push
lock
dec
arpl
lods
je
enter
out
adc
inc
and
hlt
shr
repz
lock
pushf
cli
cmp
xchg
add
push
decb
movsl
push
xor
ret
mov
clc
aad
inc
scas
cmp
ret
push
jns
test
sbb
ljmp
push
mov
xor
test
pop
in
repnz
notl
lea
mov
psubw
jle
and
fldenv
iret
sub
aaa
xchg
mov
out
lea
cwtl
sub
fidivrl
ds
cmpsl
jecxz
pop
addr16
das
push
mov
xchg
push
es
adc
and
jb
daa
aas
jne
push
and
outsl
sbb
inc
aaa
repz
addr16
in
mov
push
or
dec
popf
es
fistl
push
or
insl
sbb
xlat
cmp
fwait
rcrb
fildll
fs
or
adc
inc
inc
adc
push
add
js
popf
add
stos
enter
mov
xchg
repz
fs
xor
sahf
sub
fldcw
mov
adc
movsl
mov
jmp
out
push
arpl
in
jne
into
arpl
push
rolb
inc
xchg
sbb
cmc
movaps
cmpsl
es
fisubrs
inc
subl
cld
aaa
xchg
insl
das
addl
mov
rolb
int
lock
cmp
dec
jno
push
cmpsb
mov
lahf
pushf
scas
xchg
xchg
cli
aaa
aaa
jmp
or
mov
sti
adcl
movsl
lods
cmp
outsl
int
call
and
mov
inc
sbb
nop
and
mov
push
lcall
jmp
cltd
sahf
add
xlat
jae
sbb
inc
inc
jp
ret
inc
add
mov
mov
in
rclb
std
mov
adc
test
add
cwtl
sbb
inc
sub
icebp
jno
test
lods
in
aad
xor
and
fildl
mov
push
pop
hlt
aas
or
fwait
pop
inc
int
dec
sub
mov
shrb
lret
stos
int
adc
or
jle
xchg
mov
je
xchg
add
add
lds
mov
adc
ret
cmp
push
dec
pop
in
cld
mov
cld
int3
sarb
leave
shl
in
sbb
dec
stos
mov
lcall
cmp
add
insb
xor
repz
or
mov
xor
cmp
mov
push
add
incl
fsubs
test
in
dec
aas
push
pop
fmulp
push
shll
outsb
insb
adc
mov
pusha
movl
clc
stos
mov
loopne
fcompl
or
lret
mov
dec
cltd
xchg
lret
add
dec
sub
fnstsw
xchg
push
das
mov
jbe
call
sub
push
sti
ret
xchg
lock
xor
dec
inc
test
push
std
dec
aaa
fiadds
repz
fstps
test
mov
pusha
dec
pop
dec
cmpsb
fistl
das
leave
adc
rclb
andb
mov
jp
or
sbb
loope
pop
adc
inc
data16
adc
repnz
jecxz
out
jo
xchg
mov
ret
adc
ficoml
cwtl
xchg
push
dec
xor
repz
xchg
add
aas
int3
nop
cmp
repnz
fwait
daa
inc
ja
repnz
fs
jg
dec
cs
adc
cmp
pop
mov
mov
popf
sub
nop
mov
and
xlat
mov
repnz
pop
in
xchg
gs
push
add
testb
mov
jnp
fstps
nop
out
gs
jbe
cs
xchg
lea
popf
fdivl
mov
icebp
es
jb
xlat
movsl
outsl
sahf
divb
aaa
mov
dec
push
orl
xchg
or
dec
dec
outsb
icebp
rorl
add
mov
cmp
fcmovnu
incb
imul
pushf
movl
iret
adc
adc
jge
cmc
nop
push
and
stos
dec
xor
xor
mov
push
jno
dec
push
mov
xchg
mov
add
cmp
jbe
xchg
not
push
jb
xchg
mov
mov
int3
or
fadds
xchg
xor
std
movsb
jmp
mov
sahf
aaa
xchg
loopne
xchg
fdivr
movsb
push
xlat
jmp
push
fisubl
js
js
paddb
inc
mov
mov
lea
sbb
mov
add
cmc
pop
imulb
lahf
jge
les
fwait
test
mov
inc
gs
lret
mov
enter
repnz
mov
xchg
and
cmc
add
shrl
xchg
lds
aaa
ret
popf
sbb
pop
lock
aaa
iret
hlt
repz
ljmp
add
xor
adc
enter
push
mov
stos
jo
lahf
xchg
mov
mov
std
and
and
mov
outsb
mov
cmc
pushf
inc
je
cmp
xchg
pop
test
mov
cmp
scas
fcomps
ret
ss
sbb
aas
fmull
mov
mov
sbb
pop
icebp
rcl
xor
movsb
int
leave
mov
or
lock
das
inc
push
js
jne
sti
popf
insl
adc
pushf
or
xor
lea
push
inc
jnp
sub
mov
cwtl
or
out
ret
pop
jl
popa
incl
jae
ss
mov
add
aad
pop
and
imul
sub
inc
loopne
pop
xor
dec
dec
inc
xchg
xchg
fisubrs
cs
mov
add
fcmovnbe
call
cmpsl
mov
mov
pop
xchg
lock
aas
inc
jo
fwait
jbe
or
push
cld
lea
popa
pop
ds
mov
and
xchg
push
enter
loopne
or
out
and
xchg
call
jo
jne
sub
xor
imul
lret
out
inc
sbb
leave
xchg
sahf
jno
or
out
pop
sbb
mov
fs
xorb
dec
jmp
ret
xchg
ja
mov
hlt
push
gs
xor
xchg
sub
xchg
add
das
sbb
add
das
nop
pop
lret
jno
inc
xorb
imul
xor
in
mov
inc
cmp
popf
ret
sub
or
inc
lock
push
mov
inc
push
ds
inc
sub
fcoml
mov
or
arpl
shr
lret
jnp
sub
xor
rorb
jae
mov
mov
push
adc
jns
lds
cmp
sub
pop
pop
jb
cwtl
dec
imul
insl
in
arpl
mov
outsl
sbb
dec
clc
xchg
dec
inc
sub
inc
ljmp
or
jne
dec
mov
add
jp
arpl
arpl
inc
lods
orl
jne
add
std
xchg
push
cmovbe
lods
mov
daa
je
loope
cmp
xchg
add
in
mov
bound
shrl
push
xchg
adc
int
pushf
adc
xlat
xorb
lret
leave
or
jecxz
adc
push
sub
mov
lds
test
call
in
inc
cli
loop
mov
out
insl
hlt
mov
mov
pop
cmpl
enter
cwtl
leave
pop
mov
mov
fldl
testb
repnz
mov
or
mov
push
mov
fcomps
push
fwait
test
push
push
aad
test
aas
test
xchg
int3
movsl
cs
data16
add
push
xlat
and
lds
mov
inc
scas
js
movsb
out
dec
ret
or
inc
mov
cmp
int3
inc
sbb
sbb
movsb
in
xchg
mov
or
adc
push
adc
in
outsb
inc
cmp
inc
scas
out
push
cmpsb
xor
loope
xchg
xor
dec
lret
testb
inc
orb
xor
and
add
sbb
push
dec
shll
loop
dec
sub
jb
dec
xor
hlt
push
push
and
pop
mov
mov
inc
jecxz
call
addr16
lcall
sbb
inc
int
add
jl
add
and
pop
cli
push
leave
orb
jnp
xchg
repnz
fwait
mov
mov
push
inc
jb
sbb
rcr
fcompl
add
fcomp
lret
gs
adc
add
ljmp
int
push
adc
movsl
stos
adc
jl
inc
jle
sti
jae
sbb
hlt
xor
cmp
lock
fbld
xchg
jbe
lahf
nop
cmpsb
xchg
lahf
xchg
idivl
cmp
test
imul
cs
push
cs
mov
mov
decb
in
jae
cltd
std
cmc
or
imul
into
cmp
pop
ja
dec
mov
jnp
aad
out
leave
sarb
aaa
outsl
xlat
pop
aaa
jae
int3
adc
das
lods
rcll
sbb
pop
jle
loopne
jl
sbb
add
jle
or
push
aaa
jne
adc
jne
push
jo
ret
cmp
xlat
adcl
xor
pop
or
jns
inc
xchg
jnp
in
and
and
aad
cld
loope
cmpsl
je
fwait
xor
std
pop
mov
in
push
out
mov
pop
push
xchg
mov
adc
pusha
fdivrl
mov
movsb
test
inc
xor
int
xchg
jo
cwtl
repz
scas
scas
divl
xor
lods
push
xor
addr16
adc
insb
mov
and
xchg
push
pushf
xchg
aaa
lcall
cmp
xor
jno
sub
aas
cmc
xchg
mov
test
xorb
xor
jge
fisttpl
je
movsl
pop
xlat
pop
fistpl
outsb
ret
das
dec
jno
fsub
add
sub
jno
pop
je
ds
imul
ljmp
scas
add
add
xchg
mov
sbb
fldcw
xor
dec
mov
inc
out
es
fisubrl
sub
add
add
pop
pushl
outsl
movsb
xchg
xchg
sbb
repz
cltd
pop
xor
fmull
add
mov
shll
xchg
push
faddl
xlat
ficomps
addr16
leave
dec
and
sub
or
aas
adc
sub
lret
mov
out
cmpsb
mov
jl
xchg
das
push
pop
js
inc
or
cltd
jno
cli
adc
fistps
and
jl
dec
mov
jne
xchg
nop
push
inc
test
out
repz
xchg
sahf
aam
pop
pushw
je
lahf
xor
inc
mov
das
outsl
imul
cltd
dec
dec
mov
ret
jp
xchg
mov
sub
dec
xchg
dec
cmp
daa
fwait
dec
mov
aad
push
test
jp
lds
into
fcompl
out
jns
jl
inc
dec
push
jmp
incb
push
mov
sbbb
test
jb
xchg
test
cwtl
and
sub
sbb
out
push
adc
mov
les
std
jno
xor
push
orl
lods
call
mov
outsb
hlt
jmp
pop
adc
inc
pop
loope
add
daa
push
and
push
xor
mov
sbb
add
arpl
fstps
xchg
pop
xlat
push
add
xchg
add
repnz
cmpsl
xchg
pop
sarl
mov
mov
dec
mov
xor
push
ds
mov
or
popf
imul
cli
call
xchg
mov
push
fcoml
jb
hlt
pop
or
sbb
xor
pop
add
push
pop
adc
mov
popa
aaa
imul
xor
hlt
jp
mov
and
sahf
cmpsb
jns
cmpsb
cmpsb
push
and
push
in
jbe
and
lock
and
xchg
clc
ret
xchg
in
xor
ja
inc
jecxz
mov
insb
mov
in
addr16
insl
pop
cmpsb
sti
lods
aam
or
shlb
loope
cmpl
lds
xor
mov
pop
mov
dec
cld
add
xor
jecxz
in
in
pop
xor
mov
adc
insb
aaa
ret
xor
jmp
int
mov
adc
incl
lret
inc
mov
xor
fadds
push
sub
loope
jns
and
jno
pop
inc
arpl
lods
mov
or
mov
rolb
push
pop
lods
or
xchg
pop
scas
xchg
jg
sbb
push
push
outsb
mov
fidivrs
dec
mov
xchg
jmp
mov
add
sbb
pushf
mov
inc
and
mov
lret
movsb
cs
cmpsb
push
movsb
inc
pop
mov
xchg
adcl
test
rcrb
push
sub
xchg
mov
scas
in
and
cli
test
push
mov
cli
push
cmpb
inc
call
and
movsl
cs
shl
inc
xchg
lcall
jg
in
aaa
sti
scas
movb
mov
xchg
js
jo
xlat
fwait
xchg
dec
nop
outsb
scas
das
or
imul
ret
pop
push
xor
sbb
fdiv
xchg
push
js
jecxz
pop
icebp
mov
repz
or
jl
adc
pop
pop
into
cmpsl
xor
fidivrs
mov
adc
gs
fadd
and
movsl
xorb
dec
xor
daa
repnz
push
outsb
add
icebp
or
lock
outsl
push
inc
rcr
add
pop
clc
xchg
pop
fbstp
aad
ja
xchg
and
fwait
ret
mov
dec
push
push
jp
xchg
jle
daa
sub
lods
cmp
or
ret
pop
les
leave
and
push
repnz
mov
repnz
idivl
jp
adc
mov
ljmp
or
aam
test
dec
pop
mov
fwait
pushf
xchg
rcll
push
stc
negl
test
sub
mov
pop
nop
lods
pop
mov
popa
subb
or
dec
cmp
stos
popa
or
push
test
dec
repnz
xor
or
sbb
push
lcall
sbb
jge
mov
iret
aaa
xchg
test
jecxz
pop
push
lods
ret
icebp
call
sbb
mov
xor
cwtl
int
xor
outsb
mov
lods
mov
lods
outsb
mov
inc
mov
fiadds
jl
jge
mov
mov
cmp
cwtl
and
mov
cmp
push
rorl
rcrl
arpl
jmp
jns
mov
inc
jge
jp
outsl
pusha
js
mulb
fimuls
int
push
ja
stos
mov
inc
mov
jno
or
or
xchg
ds
push
mov
cli
ret
xchg
mov
ror
xchg
adc
out
mov
outsb
loope
rcrl
mov
mov
add
jb
add
jmp
sub
jno
xor
dec
push
adc
push
mov
dec
pop
mov
popa
shr
push
call
popa
xchg
push
xchg
fcomps
nop
inc
jmp
mov
cmc
pusha
push
dec
neg
xor
xor
dec
mov
lds
fmul
adc
pop
or
adc
add
jg
inc
aaa
adc
push
nop
dec
ret
or
sub
mov
jp
and
in
sbbl
or
xlat
sub
pop
jae
outsb
and
push
xor
in
les
std
out
mov
fsubs
aam
rcr
cmp
cmp
add
dec
movsb
add
mov
sub
loope
xor
mov
xchg
cld
fsubs
notl
jg
xchg
mov
fsubl
fidivrs
adc
ficomps
mov
sub
ds
mov
pop
or
add
movsl
lahf
idivb
xchg
push
push
jmp
jg
or
mov
rcll
cmp
xor
xchg
mov
test
ss
dec
push
out
mov
inc
call
cmpb
sarl
rcrb
cmp
or
cwtl
in
sbb
dec
inc
jl
std
sub
fnstsw
cmp
mov
fnstsw
ficomps
jg
scas
sbb
clc
push
in
push
insb
repnz
mov
sar
test
pop
rol
notl
popl
movsl
pop
ljmp
mov
mov
jo
lock
andb
nop
in
mov
mov
mov
cmp
pop
xchg
mov
jg
adc
cmp
dec
daa
mov
lret
movsl
xchg
adc
inc
cmp
cmpsb
sbb
pop
movsb
push
lods
scas
stos
pop
jns
jbe
mov
lods
iret
sbb
mov
and
dec
sbb
or
iret
push
movsb
xchg
pop
mov
sbb
pop
push
cwtl
jmp
sti
movzbl
and
cmp
mov
movsb
push
mov
call
cmp
pushf
out
aaa
mov
int
sub
mov
push
or
outsl
jnp
scas
mov
and
in
fcmovnbe
mov
ljmp
adc
push
jmp
jp
xchg
mov
and
inc
xchg
pusha
fmuls
fstpt
sub
cmp
mov
adc
jle
movsl
ror
in
jmp
daa
pusha
jg
xlat
sub
call
mov
cmc
sahf
mov
add
rcrl
iret
out
into
fidivrl
ret
imul
pop
mov
dec
call
and
push
std
cli
test
and
add
xor
test
xor
cmpsl
pop
movsl
add
and
testl
testb
jle
adc
xchg
adc
or
sti
movsl
fucom
dec
lret
pushf
xchg
and
lds
ds
mov
xchg
jmp
iret
scas
fists
ljmp
into
xor
je
in
cs
push
fcmovnbe
fisttps
jecxz
xchg
xchg
sub
das
cmp
nop
xor
cmpsb
cmpsb
les
in
test
sbb
jb
mov
fs
in
addr16
call
inc
ficoml
fisttpll
add
push
in
pop
sbb
jmp
jg
xlat
out
push
sub
push
fbld
mov
inc
popf
std
cwtl
sbb
pop
adc
iret
scas
sbb
loop
inc
testl
fcmovnu
divb
loop
pop
dec
cli
lods
mov
add
or
and
movb
and
sub
fiadds
sub
inc
lret
adc
jl
or
pop
or
movsl
or
popf
das
les
rolb
jnp
add
xchg
scas
repnz
pushf
mov
in
lds
xchg
sbb
dec
out
bswap
imul
xor
popa
jnp
aad
cmp
mov
sarl
ja
sbb
shll
lds
push
arpl
inc
mov
and
cmpsl
or
sub
jbe
imul
xchg
pop
xor
fidivrl
xorb
push
std
sbb
sbbb
jmp
mov
and
popa
loop
cmp
leave
push
adc
loopne
jne
jns
movsb
add
jp
cli
sub
mov
mov
out
in
or
push
rclb
fildl
iret
pop
js
jb
inc
cli
pushf
jmp
xchg
sbb
lahf
push
mov
test
mov
mov
popf
dec
xor
add
push
dec
imul
sbb
lds
pop
xchg
fidivs
test
fadds
mov
rorl
pop
mov
jmp
popa
lods
fstpt
bound
xchg
adc
sarb
or
inc
nop
jle
xor
jge
pop
ja
adc
stos
or
mov
adc
mov
cmp
jne
andl
sub
popf
pop
lods
jmp
push
dec
arpl
aam
mov
cmpsl
stos
cs
jnp
xlat
ds
fdivp
adc
pop
push
adc
pop
add
jmp
cmp
subl
bound
and
shlb
sub
push
popf
cmp
push
pop
mov
in
push
out
jb
fcmovnbe
sub
mov
repz
in
fidivrs
mov
es
fisttps
jae
mov
std
loopne
std
mov
inc
sar
pop
add
mov
cmp
mov
loopne
and
xchg
rcr
call
leave
xchg
jb
jne
jb
add
adc
xchg
ljmp
in
out
mov
pop
lods
enter
jle
mov
enter
push
movsl
mov
dec
cmp
and
xchg
fsubr
mov
fwait
cmp
xor
cli
sbb
sub
bound
in
stc
push
jmp
push
popa
dec
mov
sbb
lret
inc
sahf
mov
xor
sbb
sbb
mov
jmp
lods
mov
int3
es
cmp
pop
and
and
enter
cmp
lcall
and
sahf
inc
cmp
xor
dec
inc
in
jnp
jmp
xchg
push
mov
sub
popa
lret
arpl
dec
or
insl
push
gs
pop
pop
cmc
popf
jne
loope
sbb
add
lret
ljmp
xor
jb
adc
xor
filds
fisubrs
dec
adc
imul
in
cld
in
adc
jo
jo
cmp
ficomps
push
adc
pop
add
es
and
imul
and
inc
les
sbb
mov
insl
mov
or
adc
ret
sub
scas
cmp
daa
inc
das
in
add
in
loope
jno
inc
ss
bsf
popa
adc
es
or
sub
push
fs
cli
or
push
or
push
xchg
or
shl
and
insl
mov
leave
cmp
ds
add
xor
mov
cmc
rorl
fs
arpl
or
lahf
push
bound
sbb
fidivl
lock
pop
dec
push
popa
xchg
mov
mov
popf
adc
bound
jge
cmc
fsub
mov
sbb
pop
pusha
lret
sbb
mov
dec
mov
lea
adc
pop
or
out
iret
add
out
push
ds
cmp
jb
xorb
fidivrl
fs
ficomps
dec
dec
mov
popf
xor
int
sti
jl
or
idivl
andl
dec
cmp
into
mov
jl
test
cmp
dec
jns
lcall
mov
test
add
xchg
xor
adcl
int
lea
subb
add
mov
sahf
mov
mov
push
jmp
inc
jo
inc
push
stos
fidivl
mov
aam
adc
iret
add
pop
int3
inc
sbbb
sti
sbb
cli
xor
mov
push
dec
xchg
jno
jle
mov
scas
scas
outsl
inc
jbe
testb
test
dec
gs
clc
sub
outsb
lcall
mov
jp
or
push
xchg
arpl
pop
pop
into
fnstsw
pop
push
outsb
fldt
push
mov
mov
ret
cmpsl
sti
lds
cmpsl
scas
insb
pop
lret
lcall
aam
and
cmp
fs
mov
xor
test
or
or
mov
out
shld
mov
dec
js
push
je
outsl
xor
fnstenv
adc
testl
push
jno
push
add
sar
mov
ret
mov
push
jnp
jp
sbb
push
mov
fbld
pushf
sub
push
mov
xchg
roll
lret
push
mov
push
lods
adc
cmpsb
xchg
or
or
mov
lea
es
or
jne
push
fidivrl
nop
add
fisttpll
adc
add
and
aad
fildl
aas
jmp
aam
les
aad
pop
loopne
mov
or
imul
pop
mov
xor
test
inc
mov
pusha
arpl
sbbl
sub
out
rcr
scas
cmp
push
add
emms
add
out
lods
or
push
push
sbb
sar
aaa
lahf
push
push
xchg
ja
lcall
testl
dec
push
clc
aas
add
sub
lret
and
jb
jne
pop
dec
leave
push
dec
jmp
addr16
movsb
mov
xchg
test
ret
add
pop
jmp
cwtl
dec
xchg
xchg
mov
iret
dec
jg
jp
ret
js
dec
pop
push
insb
xchg
mov
jbe
cli
mov
jbe
pop
cmp
clc
adc
clc
add
cli
xchg
sbb
pop
xchg
jge
lret
pop
cltd
push
insl
out
xchg
shrl
mov
daa
inc
ljmp
int3
movsl
popf
mov
std
call
push
cmpsb
push
jo
stos
adc
mov
push
movb
lock
mov
cmp
dec
pop
das
mov
sub
and
in
sbb
popa
mov
sbb
sub
mov
pop
xchg
mov
pop
pushf
pop
xlat
xchg
flds
scas
scas
mov
clc
orb
add
in
jns
push
jnp
fmuls
outsl
jp
jp
jle
outsb
xchg
movsb
mov
sti
jmp
fidivl
pop
bound
fwait
mov
loopne
rorb
stos
stos
dec
iret
jp
rcll
sbb
mov
mov
enter
aad
add
cmp
and
push
ret
mov
out
push
push
inc
xchg
sub
inc
lret
movsl
lret
notl
fcomip
lods
sbb
gs
lahf
xchg
jecxz
lret
xchg
nop
dec
add
sti
mov
pop
pusha
aam
pop
loopne
pop
add
xchg
jle
shrb
cs
sub
dec
rorb
mov
push
dec
sub
fnsave
mov
or
test
xchg
xchg
out
pop
pusha
add
pop
cmp
fmuls
sub
inc
pop
add
rorl
and
adc
mov
mov
cmpl
test
adc
push
leave
andl
or
into
and
ljmp
enter
in
adc
loopne
test
jns
int
cmp
scas
pop
or
mov
hlt
in
and
jg
xor
fdivl
mov
es
inc
xchg
push
mov
mov
dec
imul
imul
lods
lea
or
lea
mov
into
mov
mov
mov
pop
repnz
xlat
imul
insb
cmpsl
sub
jmp
dec
rcll
jmp
ljmp
push
dec
fldenv
or
jae
shlb
add
mov
ja
dec
cli
dec
or
add
leave
and
push
daa
sub
jp
or
das
push
mov
leave
and
fdivl
pop
or
int3
pop
push
mov
inc
lret
push
push
or
shl
stc
xor
rclb
cmp
js
mov
mov
ss
test
inc
iret
out
ror
hlt
mov
mov
inc
sub
inc
mov
or
push
inc
mov
ljmp
movb
mov
mov
mov
xorb
sub
scas
jmp
jecxz
decb
shlb
in
mov
cmc
mov
sahf
icebp
xchg
lods
adc
aam
jmp
jne
paddusb
or
mov
daa
jae
xchg
jno
andl
popa
and
aam
xor
add
pushf
cmp
mov
imul
fwait
sbb
adc
pushf
jns
insl
push
dec
test
pop
inc
jb
xchg
or
aaa
in
loopne
cmp
jl
jmp
xor
hlt
icebp
jle
outsb
dec
out
inc
jmp
addr16
dec
sub
imul
lods
leave
jp
cmp
mov
mov
jae
push
push
imul
in
pop
aad
add
jmp
lret
pop
jmp
jg
pop
or
sarb
pop
push
into
div
or
xor
outsb
repz
rcl
pop
lods
push
scas
mov
test
cmp
inc
push
mov
jmp
stos
mov
fistps
mov
mov
sahf
ljmp
jns
fistps
sbb
mov
fmul
ljmp
leave
adc
push
pop
cmp
test
xchg
aad
rcrl
xor
or
rcrl
test
push
dec
jp
loop
ja
popf
fisttps
gs
rorl
aas
subl
inc
and
jmp
pop
fisubl
dec
ret
fsubs
mov
and
jnp
sub
jg
lds
cli
and
outsl
pop
or
movsl
mov
mov
movsl
ficoml
hlt
adc
adc
xchg
xchg
add
daa
and
mov
pusha
sub
mov
das
test
add
sbb
shrl
cmpsb
mov
push
sub
ret
ret
imulb
dec
sbb
pop
cmpsb
mov
push
idivb
scas
push
lahf
insl
mov
fists
insb
les
shlb
jo
ljmp
sbb
in
dec
jge
or
lcall
je
ljmp
pop
stos
ds
test
outsl
push
mov
imul
add
nop
xchg
cmp
call
test
mov
xchg
pop
das
fs
iret
repz
in
add
sub
ds
fstl
or
sbb
xchg
mov
stos
sbb
inc
mov
mov
jg
jno
pop
or
out
shll
sub
test
mov
movsl
push
adc
sub
sarl
in
in
popf
loop
lods
mov
mov
stc
cld
sub
mov
or
arpl
mov
sub
stc
hlt
in
sbb
xchg
inc
or
test
movsl
xchg
and
mov
icebp
mov
sbb
sbb
pop
inc
xchg
std
lcall
jle
js
dec
mov
pand
outsl
cmpsl
mov
mov
pusha
jno
xchg
sub
pusha
inc
repnz
mov
outsl
test
xor
add
mov
jnp
jbe
scas
inc
mov
adc
pop
iret
outsl
push
xchg
scas
lret
fisubrl
mov
sub
sbb
jae
add
or
add
sub
leave
adc
pop
add
fisubrs
mov
jne
adc
push
inc
adcl
aas
cwtl
inc
adc
xchg
jmp
mov
iret
in
scas
mov
push
faddp
scas
es
xlat
jmp
test
push
mov
loopne
push
jno
bound
out
daa
imul
fisttps
mov
pop
shlb
pop
jl
mov
sub
pop
movb
in
push
mov
pusha
jno
xchg
add
outsb
mov
push
jbe
sysret
aaa
jae
jecxz
inc
jns
mov
aad
xor
push
shlb
aam
loop
out
fwait
fucomp
xorb
pop
add
dec
dec
and
adc
imulb
shr
fwait
lea
test
mov
lcall
sbb
mov
scas
xchg
cwtl
push
sar
in
scas
and
test
mov
sub
repz
adc
mov
xchg
div
dec
xor
xchg
shll
pushf
cmp
gs
dec
xor
or
ss
loop
xor
enter
push
pop
dec
pop
inc
jge
pop
fisubrl
or
mov
mov
mov
loope
pop
push
pop
jo
add
arpl
sub
dec
push
lahf
ljmp
sub
cwtl
add
sahf
xchg
xchg
push
inc
das
dec
push
lock
mov
mov
mov
jno
push
fs
mov
lret
sahf
mov
jg
xchg
cmpsl
aad
jp
mov
stc
mov
enter
ljmp
fldt
fwait
jnp
sbbl
subl
mov
mov
js
or
sti
sahf
mov
xlat
imul
sub
push
cmp
in
loope
sti
adc
decl
adcb
fstpt
fwait
sub
mov
mov
cmp
rcrb
xor
push
cs
inc
addr16
xchg
adc
pop
imul
push
and
aam
leave
shll
pop
sti
xchg
fstps
jl
mov
fsubs
sub
or
push
subb
xchg
and
mov
cmpsl
pop
sbbb
divl
dec
jnp
and
inc
pushw
add
push
xchg
jae
fcomp
rorb
repnz
out
cmpsb
lret
icebp
jb
gs
push
imul
push
jne
call
adc
movsb
jb
aaa
filds
jge
pop
jge
xchg
xchg
dec
pusha
lods
call
dec
mov
inc
mov
mov
movsl
add
loop
aam
aam
adc
outsb
aas
sbb
sbb
das
dec
int
add
ja
cli
notb
clc
mov
mov
in
shl
push
sub
xor
jns
insl
out
dec
and
cmpsl
std
adc
lret
ret
push
andb
dec
stos
stos
xchg
or
xchg
outsb
jns
mov
and
or
and
outsb
popf
and
ljmp
lret
cmp
in
out
cmpsb
xchg
test
frstor
ljmp
in
mov
jmp
in
outsb
sti
lock
sbb
mov
pop
aas
mov
cmpb
push
orb
mov
jp
mov
inc
mov
or
mov
pop
mov
loop
pop
fwait
dec
movl
pop
jp
in
in
cmp
push
jle
inc
rclb
pop
les
dec
rol
dec
jmp
jecxz
ficompl
mov
mov
loop
jecxz
mov
pop
xor
lods
cld
hlt
mov
adc
mov
and
sub
jo
and
cmp
in
cmp
data16
pop
cmc
jl
rcl
xor
or
pop
cmp
arpl
sahf
add
or
js
push
sub
fcmovnb
mov
adc
outsb
stos
and
xchg
mov
jge
int3
dec
pop
adc
scas
aaa
mov
addr16
sbb
push
in
sarl
daa
fs
hlt
ds
mov
sbb
cwtl
pop
push
aad
and
xor
sbb
mov
or
xchg
test
dec
mov
mov
arpl
cmp
mov
jecxz
jge
call
push
lods
mov
dec
xchg
enter
xor
lods
pop
xor
mov
or
or
clc
and
in
add
dec
lret
mov
lret
aad
scas
add
call
icebp
xlat
push
xor
sahf
xor
push
movsl
xchg
or
inc
mov
out
inc
ret
fiadds
xor
sub
cmp
adc
sub
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
adcb
add
cwtl
push
add
fadds
add
add
and
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
call
add
add
add
addb
add
add
addb
add
pusha
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
cmp
add
js
add
mov
add
add
add
cmp
add
lock
cmp
add
sbb
xor
add
inc
add
xor
add
push
add
add
add
add
add
add
add
xor
add
or
add
xor
add
pop
add
add
addb
add
add
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
add
add
or
add
add
sbb
add
or
add
xchg
add
mov
add
or
add
xchg
add
mov
add
or
add
add
add
xchg
add
mov
add
or
add
add
add
lret
add
mov
add
or
add
add
add
add
call
add
add
add
add
add
xor
add
mov
add
or
add
add
mov
or
add
add
add
add
add
in
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
mov
add
or
add
add
add
add
add
add
or
add
add
dec
sub
add
add
add
add
add
add
shrb
add
mov
add
or
add
sub
add
or
add
add
add
add
add
aaa
add
mov
add
or
add
add
add
cmp
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
jno
add
or
add
add
add
add
add
add
call
add
add
add
add
add
add
jge
add
or
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
xchg
add
call
add
add
add
add
add
add
sub
add
add
add
add
add
add
fdivs
add
or
add
add
add
add
sub
add
add
add
add
add
aad
add
or
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
mov
add
or
add
push
add
call
or
add
add
add
add
add
push
add
shlb
add
or
add
add
mov
add
add
add
add
add
add
inc
add
sub
add
add
add
mov
add
add
add
or
add
push
add
sbb
add
add
add
add
add
lock
add
add
add
or
add
pop
add
insb
push
add
sbb
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
add
dec
add
add
add
add
inc
add
jb
add
add
jb
add
add
addb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
add
popa
add
add
add
add
add
add
and
data16
add
and
sub
inc
add
push
add
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
add
add
je
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
jo
add
js
add
add
sbb
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
insb
add
data16
add
add
add
add
add
add
add
add
add
jns
and
inc
add
outsb
add
add
dec
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
add
popa
add
add
add
add
js
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
rcrb
add
fwait
add
fcompl
add
and
add
in
add
das
fwait
add
in
lcall
cmp
add
inc
fwait
add
cld
lcall
push
fwait
add
add
add
pusha
fwait
add
outsb
fwait
add
jle
add
mov
add
stos
fwait
add
add
add
mov
add
add
fwait
add
add
add
ficomps
add
out
fwait
add
add
add
or
add
pushf
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
insl
bound
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsb
je
jne
je
fs
insb
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
js
popa
jb
insl
inc
add
add
dec
dec
jae
outsl
fs
gs
outsl
popa
fs
add
jb
jne
jb
push
popa
insb
jne
inc
add
inc
imul
je
jb
inc
popa
.byte
.byte
sbb
add
shrl
adc
je
sbb
jbe
popa
jl
cmc
mov
ret
sub
je
cs
repz
sbb
fisttpl
mov
sti
enter
sub
or
scas
gs
movsb
adc
lea
test
lret
daa
leave
decl
xor
test
pop
fstps
lea
mov
test
rclb
ljmp
push
pop
mov
mov
push
cld
dec
cmp
out
shll
mov
nop
idiv
push
roll
test
xchg
adc
mov
test
inc
addr16
mov
adc
jge
outsb
and
aad
adc
cmpl
repz
outsb
push
data16
leave
cmpsb
cld
test
mov
mov
sub
gs
add
add
fnstsw
adcl
mov
dec
mov
cld
ret
adc
pushf
dec
out
mov
data16
lea
jbe
or
aaa
sub
jbe
jge
dec
shrb
clc
mov
mov
dec
dec
xchg
xchg
xor
mov
cmp
xchg
fldt
pop
inc
repz
daa
pop
mov
sbb
jle
loope
xor
pop
and
imul
mov
or
movsb
jo
rolb
inc
rcrb
dec
insl
cmpsw
lret
adc
sti
mov
dec
cmp
mov
sbb
mov
add
in
sti
push
or
sub
and
mov
je
insl
mov
mov
add
add
cwtl
fstpt
scas
adc
sub
mov
cmp
or
cli
fyl2xp1
lcall
xchg
xor
stos
fldcw
mov
insb
std
jns
cmp
mov
fcompl
test
mov
pusha
add
mov
and
mov
pop
jae
and
jmp
insl
mov
push
inc
inc
mov
inc
mov
inc
lcall
mov
adc
dec
mov
cwtl
push
arpl
adc
mov
mov
xlat
jno
jp
stc
popa
movsw
dec
addr16
or
sub
add
mov
pop
adc
popf
or
sub
mov
pushf
movsb
imul
dec
in
mov
mov
pop
pop
cmp
cmp
inc
xchg
sub
xchg
mov
xchg
xlat
adc
and
xchg
add
aam
out
popf
or
stos
mov
out
cwtl
popa
sub
mov
xchg
inc
mov
rcrb
mov
jge
in
and
cmpsl
push
nop
push
xor
jbe
xchg
push
test
pop
push
in
xor
sarb
fcom
xor
rorl
cmp
ret
push
roll
nop
hlt
nop
push
or
loop
cmp
loop
jge
mov
sbb
xchg
jle
pop
mov
lret
add
lds
cmp
cli
shlb
fucom
inc
stos
iret
inc
les
call
ret
hlt
lahf
jns
push
dec
out
sub
data16
jnp
repz
clc
mov
cli
ljmp
int
lea
or
inc
jmp
sub
mov
imull
bound
xchg
dec
jecxz
adc
rcll
lock
inc
ficoml
lods
arpl
inc
jg
loop
cmpsl
mov
mov
sub
arpl
push
cmp
daa
test
fistpll
sbb
das
lods
or
mov
les
and
add
or
mov
pusha
add
push
insb
imul
fcmovbe
jo
mov
inc
sbb
loop
cmpsb
idivl
pop
xchg
push
stc
addl
push
ret
jae
pushf
fildl
dec
sub
pop
into
addr16
inc
lahf
mov
or
sbb
pop
icebp
dec
pop
fcomi
jne
dec
adc
cmpsb
mov
cltd
incb
test
pop
add
pop
aas
sub
cmc
mov
jge
and
pop
int
lcall
or
xchg
ja
add
pop
sbb
cltd
sub
lea
outsb
mov
mov
mov
add
jle
gs
mov
push
push
push
or
pcmpeqd
adc
std
das
sbb
mov
imul
push
data16
aas
stos
pop
sahf
div
nop
jmp
sub
jg
mov
push
pushf
ja
stos
scas
sbb
push
insb
push
push
xor
mov
adc
daa
cli
jns
push
call
pop
insl
sbb
in
lods
popf
arpl
enter
les
enter
shrl
jg
mov
popf
inc
or
mov
inc
aam
dec
fcmovb
cmpsl
push
cmp
insb
pop
inc
inc
mov
mov
and
ja
insb
out
lods
jno
inc
pop
add
out
iret
test
je
add
xchg
shrl
hlt
sbb
imul
xchg
sub
jle
jb
and
or
fisttpl
dec
sbb
push
movsl
scas
dec
in
jle
imul
daa
lretw
arpl
xchg
push
ret
jae
jb
lds
pusha
mov
mov
outsl
popa
sahf
fstps
les
data16
cmpsl
mov
call
fiadds
xor
dec
mov
cmpsl
sub
daa
jns
jno
dec
dec
subl
lds
enter
jno
inc
js
jge
inc
aaa
inc
cmpb
inc
push
mov
bound
xchg
push
arpl
insb
inc
inc
xlat
xor
call
movsb
jbe
lahf
icebp
dec
orb
mov
xchg
lcall
fwait
mov
mov
daa
daa
adc
mov
xchg
xor
add
cmp
clc
testl
xchg
mov
mov
lahf
push
arpl
pop
das
outsb
dec
cmp
sbb
leave
in
cmc
test
cltd
loopne
dec
neg
jae
into
or
in
outsb
sbb
pop
aas
jno
mov
pop
dec
shlb
sub
ja
fimuls
test
lods
scas
push
jl
xchg
sbb
xchg
cmp
push
int3
xor
ret
shlb
leave
jae
mov
adc
std
outsb
push
jnp
nop
pop
dec
jmp
inc
mov
push
mov
xor
jle
xorl
or
dec
or
inc
aam
adc
xchg
adc
and
mov
push
sub
sahf
sub
je
xchg
or
out
cmpsl
ret
adc
mov
roll
adc
pop
jp
clc
mov
push
cmpsb
ds
add
sahf
push
pushf
xchg
test
cld
push
bound
jecxz
popa
ret
icebp
inc
sub
jno
jno
dec
call
ficoml
movsl
jge
mov
nop
imul
sahf
mov
xchg
mov
into
xchg
and
cs
xchg
out
jp
filds
jge
pop
pop
add
mov
mov
mov
pushf
imul
xchg
sub
mov
nop
cmp
sbb
mov
aam
cmpsb
mov
ficoml
stos
push
mov
cmp
insl
ja
jp
and
sub
in
xchg
gs
sbb
sub
stc
mov
int3
jp
jle
stos
sahf
push
jbe
jno
pop
push
cmpl
mov
or
movsl
jle
cld
mov
fstps
rorl
adc
outsl
push
pusha
push
dec
pop
mov
add
aaa
sahf
fscale
and
jb
or
xor
lods
and
sub
jne
jle
fcoms
cmc
rclb
xchg
sub
stos
push
xlat
fmulp
movsl
std
sbbb
mov
xor
dec
lds
add
add
test
cltd
repz
adc
sub
mov
push
sub
dec
xchg
adc
insl
dec
out
and
inc
add
data16
add
rcll
fisttpll
lea
and
sbb
ret
leave
mov
fadds
mov
daa
cmp
jl
addl
jne
aaa
jecxz
nop
and
pop
cwtl
cli
rolb
dec
cwtl
lret
aam
or
jmp
pushf
dec
idivl
adc
adc
ds
xchg
hlt
pminsw
fwait
arpl
xlat
xor
jbe
push
lods
pushf
cli
out
je
add
mov
adc
js
in
test
or
test
mov
movsb
mov
fnstsw
jo
pop
add
shrb
call
insl
xchg
push
pop
popf
cmp
mov
adc
jns
shl
mov
or
scas
or
xor
ss
jns
rorb
sbb
cli
movb
stc
sbb
scas
shrb
jnp
cli
daa
out
mov
add
call
into
cmp
push
rclb
sub
mov
pop
adc
or
frstor
sti
xchg
jno
mov
jecxz
outsl
lret
sbb
shlb
fdivs
pop
sub
pop
scas
cs
jecxz
mov
jecxz,pt
dec
cmp
cmp
fbstp
ljmp
pop
out
adcb
pop
int
lods
mov
push
mov
xchg
mov
nop
ljmp
in
dec
pop
add
or
out
bound
sbb
das
push
nop
and
sub
cmc
sbb
aas
inc
shll
mov
out
push
mov
inc
inc
test
mov
pop
test
andb
sbb
nop
outsb
sbb
inc
filds
pop
sbb
stos
hlt
clc
subb
aas
in
inc
jno
adc
enter
adc
cltd
cmpsb
clc
daa
cmp
shlb
pop
mov
lds
xchg
mov
dec
out
cmp
insb
or
sarl
sbb
mov
nop
and
mov
xchg
sub
fldcw
push
enter
das
cmp
daa
or
pop
incl
data16
adcb
xor
vshufps
push
repnz
inc
hlt
mov
and
ficoms
aam
stos
nop
enter
arpl
movsl
imul
test
xor
in
pop
mov
icebp
mov
lods
pusha
xor
add
nop
adc
std
sub
rcll
outsb
xorb
pop
push
inc
mov
sbb
test
mov
insl
pop
rolb
and
or
pop
push
push
and
loop
and
mov
out
pop
sub
adc
fdivl
outsb
js
out
mov
out
mov
fiadds
stos
jns
pop
outsl
popf
js
in
push
outsb
pop
pop
jo
mov
jp
in
lret
xchg
xchg
subb
rolb
pop
mov
arpl
mov
jns
addr16
mov
lret
int3
sbb
xchg
fnstenv
inc
fsubs
xor
inc
shrb
adc
and
cmp
mov
mov
pop
add
cli
xchg
popl
jns
aas
daa
inc
push
mov
enter
push
loop
bound
pop
dec
hlt
push
lds
mov
cli
mov
movb
fstl
xor
mov
mov
dec
adcb
aaa
mov
ficompl
push
imul
dec
sarl
fistps
rclb
cmpsb
add
or
pop
insb
sub
les
aad
cmp
cmpsl
sub
or
and
sbb
std
xchg
popf
and
popl
in
cmp
test
roll
mov
fsubl
xor
imul
cmpsl
daa
push
mov
lret
stos
sarl
mov
dec
daa
xchg
js
adc
cmpsb
sbb
testl
sub
xchg
aam
jle
fildll
push
mov
jnp
push
pop
insl
add
dec
xor
or
test
xor
xor
out
mov
jbe
lahf
repnz
sbbb
mov
jle
xor
loopne
cli
sahf
cld
cmp
adc
insl
int
repnz
leave
das
fmuls
mov
dec
dec
scas
and
cs
fldl
jno
pop
inc
jo
scas
gs
inc
fdivrl
fdiv
adc
inc
cld
fwait
jecxz
dec
push
pop
mov
lds
adc
add
cmp
inc
int
xchg
clc
inc
sbb
arpl
shlb
adc
adc
jo
pop
jbe
sbb
test
jb
fst
sbb
jmp
daa
andl
xor
mov
arpl
scas
sub
aas
lcall
ds
mov
addl
or
loopne
imul
dec
cmp
ret
sbb
orl
push
in
jecxz
xchg
dec
repz
pop
outsl
shll
psrlq
xlat
in
ds
test
cmp
out
movsl
daa
push
or
inc
push
std
push
ror
jl,pt
mov
ja
aad
mov
enter
fsubrp
fcmovbe
mov
cmpsl
jno
mov
cmp
roll
daa
les
adc
pop
add
or
rcrb
test
aad
imul
dec
movsl
add
push
xor
dec
pop
mov
mov
inc
test
pushf
push
cli
repnz
jl
mov
sbbb
jmp
test
bound
dec
mov
addr16
push
subl
pop
push
pop
cmp
adc
out
ficoml
push
and
xlat
fcomip
mov
adc
mov
cwtl
cmpsl
popa
sub
jae
addr16
xor
lods
fucomp
repz
ret
jge
pop
mov
ret
leave
fwait
mov
mov
mov
pop
push
pop
push
loope
pop
out
shll
mov
pop
sbb
loopne
stc
fdivrs
xchg
jl
in
out
cmp
inc
sub
xchg
test
sbb
sbb
mov
or
shrl
xchg
movsl
xchg
mov
je
cli
push
push
movsl
xor
add
insb
mov
dec
ret
adc
xchg
cli
mov
fmul
jg
push
mov
xor
dec
rclb
xchg
xor
lret
les
mov
aaa
jns
fsubrl
mov
jno
je
cmp
jp
push
cs
cli
fwait
mov
inc
insb
shl
shrb
cmp
inc
test
test
and
in
ja
ret
mov
sub
push
push
fimuls
call
adc
addr16
test
xor
pushf
cmp
lcall
or
in
test
das
mov
sar
inc
xor
movsb
lock
insl
mov
jns
xor
and
add
aam
xor
pop
push
ja
test
mov
inc
lahf
sbb
repz
adc
and
int3
dec
lods
repnz
hlt
sbb
orb
cmp
inc
sub
jecxz
inc
or
mov
push
out
enter
adc
addr16
xchg
and
sbbl
scas
fbstp
repz
mov
icebp
loope
sbb
in
or
or
pop
orl
shl
sub
fcmovnu
packuswb
repz
lods
iret
in
ffreep
mov
or
pop
fisttpl
mov
loop
mov
pushf
sbb
mov
and
jmp
xchg
sahf
loope
jl
daa
xor
mov
subl
xor
xor
mov
data16
jnp
cs
ret
fidivl
cmp
js
xchg
sarb
mov
mov
push
into
push
je
repz
daa
sar
sbb
bound
inc
inc
pop
aas
insb
in
lea
sbb
movsb
inc
cltd
stos
mov
in
popa
test
pop
sub
mov
shlb
into
pop
inc
mov
imul
sarl
adc
mov
mov
pop
sub
mov
sub
inc
mov
and
xchg
cmpsl
test
pop
pop
cwtl
pop
out
cmc
repnz
mov
stos
cmpsb
inc
fisubrl
test
pop
jge
loop
mov
inc
pop
add
push
dec
or
cmp
fstpl
add
mov
push
jmp
mov
aam
outsl
pop
push
fwait
orl
or
ljmp
or
cmp
clc
mov
fiadds
mov
mov
xchg
cmp
and
mov
sub
insb
call
popa
pop
push
sarl
push
mov
cwtl
aas
cmpsl
xchg
sbb
pop
xor
leave
mov
fsts
out
inc
jno
mov
jb
js
lret
push
pushf
add
cmp
push
dec
and
pop
xor
cmp
cmp
add
cmpsl
push
fldenv
int
test
mov
test
mov
out
lcall
ret
negb
inc
gs
or
sahf
addl
nop
jle
cwtl
mov
mov
mov
repz
sbb
mov
es
push
pop
ljmp
mov
cmp
mov
jmp
scas
int
test
sub
arpl
sbb
je
cmp
push
stos
lret
cli
ret
in
sbb
sbb
leave
inc
dec
out
inc
and
leave
push
ds
xchg
mov
jecxz
out
call
jnp
inc
fildl
inc
lock
fidivrs
fldt
int3
cmpsl
negl
xchg
imul
fwait
add
stos
cli
inc
cli
mov
aas
les
pop
sub
push
sbb
mov
scas
imul
adc
and
mov
mov
mov
add
mov
and
sbb
out
loopne
and
fnstcw
sbb
sub
pop
or
sbb
xchg
mov
fcomps
in
test
cmp
mov
cmpsl
dec
sub
mov
mov
xor
aas
in
in
adc
fcmovbe
and
stos
and
jo
jo
movsb
jecxz
xor
rcrb
and
pop
lahf
insb
dec
push
dec
pop
push
dec
sarb
adc
push
lock
adc
xchg
xor
nop
cmc
ret
push
std
dec
sub
das
pusha
movsl
ret
jg
dec
adc
adc
sbb
subl
stc
mov
inc
rcl
pop
cli
loopne,pn
gs
pop
push
mov
data16
xchg
mov
adcl
mov
cltd
in
or
xchg
das
mov
addr16
cmc
push
sbb
scas
sub
inc
aas
mov
push
mov
outsl
fbld
popf
and
daa
inc
lahf
mov
mov
fidivl
test
fistpll
sub
ret
or
mov
xor
cmp
sub
imul
adc
outsb
fistpll
shll
std
ja
les
fidivl
stc
jecxz
xor
icebp
fs
push
xchg
push
jge
sbb
push
and
sub
jecxz
xor
rorl
sahf
push
xchg
push
mov
stos
lret
xchg
das
pop
push
mov
pop
lods
sbb
xchg
or
dec
fsubs
es
add
ret
sbb
sti
jae
aad
mov
pop
mov
push
insl
adc
in
sub
aaa
scas
daa
popf
mov
pop
dec
jbe
or
pmullw
inc
push
xchg
loope
cwtl
adc
dec
cmp
loope
cmovns
popf
jl
add
inc
pop
aas
add
pop
mov
in
lock
ret
out
sti
cmpsl
movsl
popa
jmp
mov
pop
sbbl
lret
pop
cmp
lcall
clc
mov
out
dec
fs
fwait
cld
xchg
shll
sub
movsl
cltd
cltd
das
push
loopne
les
xchg
jmp
jne
dec
rcrl
fcomp
xlat
setge
mov
out
outsb
mov
mov
sbb
leave
add
cmp
dec
jae
push
dec
or
push
sar
dec
lahf
dec
aas
mov
or
std
cmp
filds
sbb
push
adc
lds
jmp
sbb
lret
lret
je
inc
ret
xchg
push
dec
out
jg
fimuls
jg
notb
std
lret
shl
addr16
push
adc
in
loope
push
mov
mov
in
cmp
outsl
and
mov
add
loopne
test
aam
bound
out
int
lods
adc
das
lock
jg
xchg
sub
aad
cmc
aam
adc
jne
jb
inc
xchg
in
stos
jg
cmpsl
es
sbb
jns
fbld
mov
xchg
icebp
repnz
xor
push
mov
add
cmp
std
scas
pop
pop
xchg
lods
outsb
lds
in
les
pmulhuw
clc
pop
lds
lret
ljmp
inc
xchg
adc
fwait
ss
js
adc
daa
icebp
pop
xchg
gs
testl
mov
sub
jmp
pop
pop
mov
add
mov
cmpl
call
adc
xor
js
sbb
xchg
test
enter
inc
cmovl
into
ja
xchg
pop
xlat
sub
int
in
xchg
inc
adc
mov
in
movsl
aaa
fsubl
fldt
ret
bound
aas
mov
xor
test
mov
cmp
push
aad
dec
imul
cmc
cmp
imul
pop
imul
inc
or
enter
push
or
pop
pop
push
test
daa
dec
movsl
pop
int
xor
jp
mov
test
nop
inc
in
add
jl
iret
sub
loope
jecxz
notl
lret
filds
sahf
mov
clc
movsb
push
push
es
ret
sbb
or
in
movsb
push
pop
push
movsl
and
lods
outsb
adc
pop
pop
ret
mov
inc
or
in
insb
cltd
insl
and
jmp
xchg
in
lcall
sbb
push
push
ljmp
add
movsb
push
add
int3
mov
aam
jmp
stc
or
stos
jnp
iret
jae
clc
sahf
xor
dec
sbb
test
add
inc
sbb
sahf
notl
ret
imul
cld
sbb
lods
sub
fadd
aas
mov
pop
ret
repz
dec
ret
shlb
insl
out
in
sahf
in
mov
xor
and
mov
adc
xor
jecxz
jp
add
sbb
mov
cmp
sub
in
cmp
xchg
add
out
ds
shrb
rclb
sub
icebp
test
pusha
dec
pop
ja
add
pop
xor
push
insb
push
je
fmull
leave
inc
add
cmp
inc
inc
push
jmp
das
nop
and
or
xlat
loop
sub
push
mov
jnp
jecxz
mov
insb
jne
dec
pop
push
xor
pusha
mov
sbb
adc
insb
fdivl
jbe
and
call
pop
adc
lods
js
fnstcw
xchg
rorb
test
test
fistps
mov
and
outsb
fsts
pop
lret
in
sub
jl
aad
inc
xchg
pop
pop
or
add
pop
adc
scas
hlt
fucomp
out
pop
jp
pop
cmpsl
lea
inc
stos
movsl
nop
mov
mov
add
je
shl
sub
les
xchg
cmp
push
shl
jnp
mov
jmp
inc
lea
movsb
insb
rcr
addr16
xchg
cmp
imul
pop
or
call
lods
dec
ja
gs
int
push
add
or
addr16
mov
cmpsl
adc
or
push
hlt
idiv
inc
mov
jmp
iret
inc
mov
adc
jbe
in
out
call
and
insb
add
outsl
test
adc
and
ret
in
movsl
sub
imul
mov
outsb
pusha
lock
jbe
movsb
xchg
xor
mov
aad
mov
nop
shrl
in
movsl
jnp
cmpsb
cmp
sub
cmpsl
lcall
adc
outsl
mov
lcall
sub
mov
es
add
popa
ja
xor
int3
sbb
add
loopne
adc
je
mov
and
xor
push
sbb
pop
mov
insb
or
xchg
pop
mov
cmp
stos
in
fmuls
jno
stc
mov
daa
dec
data16
stos
sub
movsb
insb
xchg
adc
ss
mov
adcl
xchg
or
jmp
push
in
lods
ror
mov
addl
insl
inc
and
std
push
mov
xchg
lahf
cltd
mov
fwait
std
mov
insb
jnp
aam
or
lods
xor
arpl
sbb
ret
jmp
mov
xorl
sbb
mov
adc
cs
testl
hlt
pop
xchg
sbb
fs
in
push
in
test
mov
cmp
jno
popa
ss
loop
outsb
cs
inc
sahf
repz
or
mov
hlt
call
aaa
test
cmp
jge
pop
mov
xor
adc
cltd
dec
das
out
inc
add
cmpl
pop
das
pop
cld
adc
rcll
xlat
jmp
inc
and
mov
push
push
jge
int
cmpsl
dec
aam
jl
mov
ss
mov
add
xlat
mov
daa
push
insb
pop
insl
in
mov
cmp
sub
mov
test
andb
lock
arpl
adc
mov
fld
enter
sub
out
push
xor
bound
push
ljmp
cwtl
push
sti
mov
out
inc
cmp
in
in
pop
push
inc
outsb
std
das
add
adc
cmc
scas
push
xchg
mov
lods
jae
lods
push
clc
decb
sbb
in
movsl
hlt
shll
xchg
inc
cmp
movsl
nop
add
stc
adc
inc
add
push
insb
xor
fcomp
jmp
mov
mov
dec
in
sbb
repz
xlat
or
pop
les
jl
pop
cmp
mov
xor
fstpt
rclb
ljmp
and
divb
clc
icebp
push
cld
fs
inc
cmp
scas
xchg
outsl
xchg
inc
and
push
or
jmp
or
arpl
sbb
mov
pop
nop
sbb
lods
test
push
inc
rorb
call
mov
in
xchg
adcb
aas
repz
sub
loop
mov
ja
cli
sbb
dec
sbb
xchg
mov
push
push
xchg
xchg
xchg
mov
sahf
jecxz
push
jg
jp
mov
fnstsw
and
test
and
inc
je
fcmovnb
mov
push
fidivs
mov
sbb
aam
pop
jmp
adc
push
cmp
mov
repnz
cmp
xor
add
stc
sbb
pop
test
insl
push
fadd
dec
push
jle
jns
mulb
inc
adc
gs
mov
das
aaa
lcall
out
nop
xchg
sbb
inc
adc
push
push
ds
out
xchg
popa
mov
mov
repnz
inc
les
pop
scas
jp
xchg
insb
fisubrl
imul
mov
lea
mov
adc
xchg
es
aaa
out
lret
in
and
ss
mov
dec
sub
push
xor
outsl
push
add
shl
das
ret
pop
mov
orl
dec
rcr
flds
sbb
add
sbb
sub
jge
test
mov
jecxz
cwtl
xchg
pop
push
jg
or
jmp
fwait
in
dec
cmp
popa
sub
shll
call
jle
xchg
hlt
xlat
pushf
insb
js
or
pop
addb
test
cltd
popa
push
mov
leave
mov
lods
push
ss
enter
adc
sbb
ret
add
xor
dec
adc
push
xchg
jne
outsb
pop
popf
daa
sbb
lock
sbb
xchg
jns
mov
nop
and
mov
je
rol
inc
mov
lahf
je
xor
push
outsl
mov
cmp
adc
mov
clc
out
test
xlat
cmp
push
mov
aaa
push
mov
add
int
mov
xor
push
sub
adc
int3
xor
hlt
sbb
addb
jmp
outsb
cmp
or
xchg
mov
mov
mov
orb
xlat
or
in
add
insb
cld
inc
lret
xchg
fsubrp
aad
mov
lahf
adcl
insl
sar
mov
inc
repz
clc
ret
xchg
ljmp
mov
push
jae
jae
jmp
sub
jmp
sbb
int3
sbb
mov
xor
cmpsb
scas
cmpsb
jmp
test
out
loopne
pop
sahf
sbb
xchg
cmpsb
sbb
ret
mov
mov
sbb
dec
shrl
icebp
dec
jmp
divb
inc
iret
mov
xchg
jae
cli
cmp
sbb
test
imul
jg
cmp
xchg
arpl
outsb
fstpt
mov
pop
loop
aaa
xchg
xor
lods
push
mov
outsl
pop
sub
lods
lock
lock
mov
scas
ret
mov
add
cmp
jge
fs
or
imul
lods
out
lods
mov
mov
cmp
mov
stos
nop
add
subb
push
add
pop
jae
insl
addps
lock
cmp
push
mov
jne
lret
mov
cmpsl
int3
subb
mov
mov
repz
dec
adc
loop
imul
shr
sbbb
dec
aas
out
fs
test
inc
push
xlat
xor
lcall
mov
adc
cmp
mov
pop
dec
pop
pushf
call
in
in
mov
xchg
rcr
test
aad
movsb
cmpsl
divb
and
mov
ficompl
ja
inc
jbe
aam
mov
or
lret
cli
mov
and
ljmp
out
push
in
push
inc
adcl
ljmp
outsl
inc
out
jb
test
pop
imul
cmp
shll
ror
sub
pop
xchg
cmp
call
rol
sbb
xchg
or
adc
dec
mov
mov
cmpsb
adc
push
fbstp
jl
sahf
mov
insb
xchg
jne
mov
test
test
scas
pop
test
jno
cmp
repnz
push
shr
into
nop
pop
stos
or
sbb
adc
test
pop
sti
mov
sbb
or
jecxz
in
dec
bound
sub
add
sbb
lock
fwait
sub
pop
fwait
jl
sbb
xor
jge
sarb
jecxz
cwtl
enter
add
cmp
jbe
ljmp
scas
in
fdiv
leave
inc
cmp
mov
mov
stc
mov
std
clc
mov
decl
out
cmp
push
push
sbb
pop
jle
cmpsb
pusha
lret
xlat
push
and
xchg
pop
mov
rcrl
and
das
addr16
xor
cmp
loop
sti
push
jno
push
adc
fcompl
jnp
push
pop
shlb
inc
daa
cwtl
xchg
sub
xlat
jmp
inc
outsb
cld
cmp
imul
dec
jmp
mov
jb
dec
mov
mov
push
lret
ret
in
fcmovnbe
test
mov
mov
ss
sti
pop
dec
sarb
out
out
jno
dec
pop
cmc
es
lods
lahf
add
mov
lock
adc
sub
mov
sub
roll
lret
jle
pop
sbb
or
in
inc
cmpsb
xchg
mov
mov
pop
fmul
dec
mov
in
add
in
adc
push
jae
add
test
xchg
leave
jle
adc
and
inc
mov
test
in
cmpsb
cmp
add
dec
fwait
lahf
add
frstor
inc
fisubs
cmp
stos
scas
sub
sbb
xchg
pop
fs
inc
sbb
popf
fwait
adc
xchg
adc
mov
ja
pop
fldenv
ja
pop
rcll
jg
push
xchg
mov
imul
dec
xorl
push
push
inc
inc
mov
xor
cmp
addb
sub
pop
insb
fdivrs
cli
mov
aad
add
arpl
fstpt
aad
mov
pusha
imul
insb
jns
inc
mov
mov
cmp
cs
dec
or
mov
and
sub
xchg
jmp
adc
xchg
xchg
inc
fdivrs
mov
jne
std
and
sbb
psrad
stos
xchg
xor
mov
rorb
xchg
push
xchg
and
fildll
jb
mov
scas
shr
rorb
add
test
fsub
mov
sti
inc
xchg
stos
xor
lcall
jg
ret
sbb
pop
xchg
cld
gs
pop
cwtl
out
xchg
mov
je
add
adc
mov
test
nop
lcall
mov
mov
push
aaa
adc
xorb
test
les
das
scas
xchg
hlt
or
ds
xorb
dec
adc
inc
cmpsb
lods
outsl
fdivs
mov
add
ret
addr16
jg
push
or
divb
sbb
push
es
fstl
or
lcall
aam
xchg
iret
nop
cmpsb
scas
mov
outsb
pop
push
mov
add
mov
dec
mov
nop
mov
jo
pusha
jne
iret
insb
shrb
mov
aad
fs
pop
mov
pop
movsb
push
icebp
int3
lods
cld
jne
test
push
std
mov
add
popf
dec
add
adc
pop
pushf
mov
inc
mov
push
add
inc
and
push
or
or
inc
in
push
stos
in
inc
popf
cmp
shlb
add
mov
loopne
add
lea
dec
adc
mov
mov
dec
push
cli
test
rcll
shll
lret
adc
and
dec
mov
js
mov
mov
pop
lods
bound
cli
dec
add
push
adc
jmp
jns
mov
lods
es
mov
cmp
jae
outsl
aam
mov
pop
pop
pop
leave
nop
loopne
sub
jb
test
add
push
mov
xchg
insb
pop
inc
fidivs
daa
aaa
lret
push
and
ret
fucomi
xchg
arpl
repnz
mov
dec
mov
lret
fldt
orl
sarl
pop
mulb
sbb
stos
push
add
mov
lods
test
jmp
mov
mov
loope
push
push
sbb
movsb
sti
mov
push
jnp
mov
jbe
and
jb
push
push
stos
mov
pop
dec
add
icebp
sbb
push
loope
shl
pop
sub
rcl
imul
jmp
insl
inc
out
jbe
pop
fbstp
add
xor
cli
dec
je
fiaddl
ljmp
out
pop
or
cmp
movb
enter
jbe
jp
push
out
push
jbe
push
movsl
outsb
push
iret
aas
cmp
jae,pt
xchg
into
movsb
push
mov
add
xchg
sbb
mov
cltd
push
sahf
cmpsb
xor
pop
nop
jmp
and
mov
pop
push
push
xchg
scas
push
daa
or
subb
mov
adc
lret
mov
lods
iret
inc
cmpsb
lret
jne
inc
sub
push
add
in
sbb
cwtl
mov
fiaddl
enter
ss
pushf
xor
add
jle
sub
mov
out
lret
cltd
ret
loop
mov
test
lock
fs
inc
mov
push
aas
jmp
incl
pop
sarl
shll
inc
aad
iret
divb
test
cmc
jg
mov
dec
mov
scas
lcall
ljmp
inc
js
sub
insb
cmp
fcomps
jns
ret
pushf
mov
or
inc
or
pop
sbb
pushf
cld
jnp
lret
clc
rcll
scas
lcall
mov
pop
stos
dec
rsqrtps
mov
inc
lock
enter
cs
das
out
adc
adc
sub
jg
cmc
fwait
sbb
mov
sbb
pushf
jae
shl
dec
xchg
imul
inc
cmc
fwait
outsb
adc
push
mov
outsl
fistl
xor
jg
cmc
push
fmuls
test
je
mov
dec
aas
das
add
inc
sbb
mov
inc
loopne
inc
jl
scas
adc
pop
fs
mov
add
inc
sub
mov
or
cld
and
add
xor
pop
enter
nop
movsb
pop
jno
idivl
pop
jns
and
lock
and
mov
inc
pop
xchg
mov
or
xchg
inc
push
pop
jae
push
hlt
mov
mov
and
inc
mov
xchg
xor
es
in
push
add
iret
leave
cmp
cltd
movsb
testl
or
inc
xchg
push
xlat
xchg
dec
ljmp
test
jl
mov
xor
adcl
das
into
push
repz
lock
cmp
fmul
jnp
stos
pop
mov
clc
add
test
sub
cmp
imul
rclb
outsb
mov
pop
or
inc
stc
incl
xchg
hlt
mov
jb
loope
stos
mov
mov
inc
push
cmpsl
fldl
cmp
mov
lcall
in
test
mov
fxch
xor
cwtl
cs
push
aam
adc
mov
pop
ficoms
add
xor
pop
pusha
adc
add
sub
or
inc
sti
js
cltd
mov
mov
jne
jbe
in
push
cmp
mov
cmc
sub
cltd
mov
push
jb
xchg
fistl
mov
push
shlb
adc
leave
or
into
es
pop
fcompl
in
and
lahf
push
jno
mov
xchg
fldt
or
addr16
pop
push
testb
add
mov
sbb
mov
jne
cmp
cmpsb
dec
push
mov
das
inc
adc
sbb
repz
xchg
je
popf
cmp
leave
in
into
xor
scas
mov
pop
je
ret
and
es
loop
sbb
mov
mov
push
lahf
sbb
lahf
out
imul
stc
add
scas
sbb
push
loop
pop
xchg
in
push
rcr
stos
jbe
cmp
fdiv
jge
inc
mov
std
push
mov
shll
popa
push
leave
loopne
jge
into
aas
and
clc
sbb
xchg
jns
xor
popa
ret
mov
pusha
cmpsl
fdivr
sub
mov
push
and
adc
insl
je
mov
mov
arpl
in
jae
mov
sub
jno
fwait
popf
adc
or
rclb
or
adc
sbb
sbb
sub
fimull
jmp
arpl
mov
mov
add
std
inc
push
push
outsb
inc
adc
cli
lds
mov
daa
mov
addr16
ja
cwtl
ret
mov
add
xchg
xchg
ds
jno
sub
stos
shlb
push
inc
je
and
fwait
cwtl
outsb
push
adc
inc
pop
js
shr
mov
sbb
repnz
xor
cmp
rcll
out
sti
pop
dec
xlat
cli
bnd
sbb
in
mov
push
pop
adc
ss
fmull
push
dec
mov
sub
mov
repnz
mov
jge
cmp
cmp
shlb
adc
orb
mov
mov
xor
enter
loopne
cmpsb
gs
push
shl
or
out
xchg
inc
lds
cmpsb
add
dec
adc
or
les
cmp
push
lcall
loop
std
ror
push
stc
in
lock
xor
push
mov
movsl
out
mov
xchg
add
leave
in
stos
push
add
push
rcrb
dec
stos
sbb
aaa
push
xchg
pop
add
pop
pop
fisubrs
push
cltd
sbb
jae
jge
test
and
stos
jb
xchg
mov
xor
jne
push
mov
mov
adc
cmpsl
jp
add
mov
jmp
jne
xchg
add
movsb
mov
test
cli
cld
ljmp
mov
scas
and
and
and
xor
scas
inc
dec
mov
inc
xchg
cwtl
mov
xor
add
fcmovu
push
call
pop
scas
jg
out
xor
pop
stc
imul
pop
jmp
cmp
mov
xchg
loop
pop
lret
jmp
insb
lahf
and
enter
out
dec
bnd
mov
mov
subb
fdivrl
ds
je
mov
cmpsb
add
mov
xor
xchg
das
scas
add
testl
out
inc
push
scas
scas
lahf
lcall
push
clc
jne
fldl
movsb
xchg
xchg
xor
mov
add
jecxz
test
iret
int
mov
pusha
cmc
sti
dec
mov
dec
mov
outsl
test
xchg
mov
cmpsb
mov
rcrl
lret
out
daa
insb
add
sub
mov
inc
lcall
imul
jns
out
scas
dec
mov
mov
xchg
fidivs
mov
xchg
push
add
adcb
pop
test
mov
adc
mov
das
sbb
lods
xor
xchg
sbb
movsl
mov
or
cltd
jl
or
xor
out
jno
in
sub
dec
test
scas
add
gs
dec
sahf
cld
imul
mov
pop
leave
neg
repnz
in
push
pop
out
rclb
sub
js
into
test
xchg
cmp
insb
fnsave
aad
fs
adc
mov
lret
dec
in
testb
js
filds
cwtl
mov
sbb
mov
adc
jl
sbb
sbb
enter
lret
aaa
pop
scas
mov
xor
mov
and
sbb
sub
push
jo
movsb
push
cmpsb
std
loopne
mov
dec
fnstcw
add
push
sub
push
and
cmp
idiv
mov
repnz
jge
out
aad
nop
cli
divb
loop
popf
xchg
call
or
dec
xchg
popf
lods
nop
add
aaa
adc
or
pop
cli
dec
mov
cmpl
inc
add
add
push
pop
xchg
inc
pop
mov
sbb
inc
lahf
sbb
dec
mov
ret
xor
dec
and
sbb
cmp
mov
inc
hlt
xor
repz
fwait
dec
mov
jb
fnstenv
sub
xchg
push
mov
adc
out
in
jns
popf
ret
in
sti
call
insb
lds
fs
lret
ss
rorb
pop
popa
jle
loopne
stc
repz
or
ds
leave
jo
cld
loope
fs
pop
xchg
add
fwait
sub
enter
orl
push
out
push
jbe
push
xchg
hlt
xchg
xor
push
dec
aaa
pop
xchg
jecxz
out
dec
sub
mov
ja
out
mov
sbb
cmp
into
and
and
cmp
mulb
lock
and
inc
ret
or
pop
add
leave
add
inc
cmpsl
clc
pop
cltd
dec
push
gs
lret
test
xchg
scas
aaa
xchg
scas
in
dec
lds
out
sbb
movsl
lret
jno
xor
xor
inc
cmp
popf
xlat
or
mov
pop
dec
push
insl
adc
jo
cmc
push
int3
xchg
scas
push
xor
jns
icebp
cmp
cmp
gs
jne
lds
lret
fldcw
es
xchg
sarb
dec
ss
roll
cli
jg
or
push
pop
loopne
or
hlt
jb
jl
out
lock
cltd
and
es
mov
xor
jge
sbb
or
test
aad
sbb
sub
add
fmul
mov
das
movhps
xor
insb
ljmp
fidivs
mov
pop
or
sub
int
pop
dec
jg
shlb
loope
and
dec
mov
inc
push
das
hlt
jnp
jno
sbbb
jo
loop
fwait
ja
and
cltd
push
pop
sbbb
adc
insb
cwtl
xchg
push
mov
lods
dec
sti
push
add
loope
jo
push
pop
adc
dec
je
arpl
jae
sti
movsl
cltd
mov
je
cmp
add
xchg
xor
repnz
mov
mov
aas
dec
bound
outsl
pop
sahf
es
dec
pop
inc
push
aam
sbb
in
add
dec
cmp
cmp
cmp
fnsave
orb
jnp
in
cmpsb
fistl
and
jne
sub
jae
lea
in
inc
ja
test
dec
jne
sub
loope
push
jns
pop
cmp
insb
das
xchg
shl
test
cmpsb
test
push
les
jecxz
ret
jecxz
mov
jnp
push
jecxz
ror
sbb
loop
push
aad
incb
icebp
mov
pop
dec
scas
or
in
lret
mov
xchg
addr16
cmp
es
mov
int
xor
jge
pop
aaa
jns
add
in
xor
add
pop
add
and
lret
jp
pop
dec
cmp
cmpsb
ds
aas
or
mov
popf
aas
or
lahf
or
repz
cmp
insb
repnz
scas
arpl
mov
push
or
stos
push
in
movsl
shrb
pop
enter
mov
inc
daa
push
mov
cltd
enter
sbb
jle
fwait
mov
test
sbb
jne
sub
testl
stos
or
subl
xchg
popf
add
mov
sbb
shl
cmp
pop
fisubrs
out
repnz
inc
or
call
rorl
mov
sbb
xchg
xchg
aad
push
or
rcll
popf
dec
add
cwtl
mov
gs
dec
int
cmp
sbb
mov
sub
sub
jmp
jle
testb
repnz
push
jge
pop
mov
sub
stc
and
mov
xchg
ss
cmp
cmpsb
mov
xchg
gs
push
aad
push
test
subb
jno
in
mov
inc
stc
inc
in
shrb
inc
decl
lret
fsubrp
push
push
outsl
add
sbb
xchg
roll
pop
xchg
jl
cmp
inc
jge
fwait
sbbl
push
push
xchg
int3
in
and
mov
mov
or
xchg
stc
iret
sbb
cmp
push
incb
pop
jge
mov
sbb
mov
cmp
not
nop
push
mov
addr16
cmp
jbe
testl
jmp
je
lret
push
push
mov
push
sbb
pop
ljmp
xorl
jle
mov
popf
and
je
leave
incl
mov
and
push
mov
andl
cmp
fdivs
jle
out
dec
jle
lods
mov
inc
adcl
and
push
cmp
pusha
push
mov
repz
lea
scas
jecxz
mov
out
fstpt
pusha
push
das
int3
in
mov
jnp
jb
mov
shlb
xchg
jbe
mov
out
inc
push
adc
addr16
xor
adc
dec
leave
gs
jbe
jle
aam
push
xor
lods
cmp
and
inc
leave
push
adc
lret
mov
mov
fcompl
pop
ss
aad
cmp
scas
xchg
lahf
sub
lret
cmp
or
lea
imul
imul
clc
out
divb
fwait
in
fwait
xchg
clc
jge
mov
jl
in
jne
pop
and
mov
lods
shrb
xor
das
mov
iret
add
jg
mov
js
xor
sub
loopne
nop
inc
cmp
add
ss
lods
push
push
in
loope
bound
popf
jae
xchg
push
stos
sti
insl
mov
rol
idivb
mov
add
gs
push
test
and
lcall
mov
std
repz
dec
mov
inc
xlat
decl
sahf
cmp
jae
inc
in
cmp
and
ds
iret
movsl
xchg
mov
dec
mov
mov
or
cmp
leave
mov
and
and
add
mov
adc
cmp
xchg
jle
movsl
adc
push
popa
addb
sbb
jbe
jne
sub
movsl
lcall
in
jae
subb
repz
hlt
mov
cmp
cmc
jmp
cmp
sahf
xor
sub
cmp
shll
xchg
testl
ret
mov
imul
arpl
inc
mov
dec
jb
cmp
mov
mov
sub
jmp
jp
jmp
cltd
jo
sbb
pop
sub
subb
sub
in
stos
and
test
dec
ss
cli
das
sbb
hlt
sbb
inc
dec
cmpsb
mov
in
xor
hlt
xchg
sub
jo
mov
out
cmp
cmp
cmp
lret
popa
sahf
or
add
and
out
out
adc
add
ja
push
cmp
adc
dec
aaa
scas
stos
ficoms
or
push
add
dec
push
sub
pop
insl
orl
outsb
adc
nop
stc
inc
loope
aad
fnstcw
incl
ret
push
ficoml
lret
shr
mov
and
or
insl
dec
les
push
jmp
movsl
push
cld
scas
mov
and
popf
nop
xor
int
xor
movsl
jb
ret
sbb
fadds
nop
dec
sarl
cli
xchg
cmp
and
iret
call
or
push
mov
out
frstor
mov
jne
cli
rolb
jl
jecxz
movsb
clc
insb
xchg
fbld
jb
xchg
mov
add
fwait
jg
add
inc
cld
mov
jg
or
and
hlt
movsl
in
je
lock
xor
test
push
mov
stc
sbb
pop
fisubl
push
aad
aam
mov
in
cmp
popf
aas
sub
scas
nop
popa
xchg
dec
and
or
insb
out
mov
insb
pop
repnz
enter
inc
aam
dec
xchg
jnp
xor
iret
push
fmul
js
push
xchg
sbb
dec
pop
iret
icebp
xchg
jo
push
rolb
dec
mov
cmp
pop
std
icebp
cmpsl
inc
pop
fnstsw
add
call
test
mov
jmp
dec
out
test
adc
xor
mov
push
adc
lret
sbb
sbb
push
mov
pop
push
pop
lock
xor
arpl
push
movsl
inc
test
fwait
push
cmc
in
dec
mov
mov
rorl
inc
ret
movsb
sub
add
daa
pop
gs
out
adc
lods
adcl
out
inc
cmpsb
nop
sbb
hlt
icebp
push
fsubl
mov
sub
fwait
xchg
xor
jns
dec
in
into
loop
loope
sub
cmp
aad
inc
add
jle
mov
mov
fcmove
pop
mov
mov
mov
fstps
push
jmp
cmp
leave
push
out
mov
bnd
mov
jp
jle
cmp
lods
xor
shlb
in
clc
mov
fdivl
into
out
lret
scas
sahf
dec
xor
test
movsb
or
cmpsl
fcmovne
imul
ljmp
shl
xor
lods
add
sarb
aad
in
mov
jne
jbe
sub
lret
xchg
jo
dec
mov
add
jo
inc
fcoml
insb
adc
cmp
sub
gs
pop
xchg
pop
xchg
lds
xlat
add
and
pop
cmp
dec
lock
cmpsl
xor
jns
pushf
inc
xor
imulb
mov
or
stc
shr
xchg
mov
nop
fidivrl
pop
adc
rclb
adc
out
lds
fsts
fwait
xor
in
mov
pop
pop
push
je
cmp
dec
sbb
loope
iret
inc
xchg
out
rcrl
es
jl
iret
push
mov
mov
cmpsb
sub
int
or
xlat
sub
into
push
xchg
enter
jo
aas
add
mov
mov
xchg
gs
mov
bound
je
and
in
mov
push
stc
pop
aad
out
cli
roll
nop
cli
js
sbb
mov
xchg
pop
cmpsb
ffree
insl
or
hlt
into
rolb
inc
lock
xchg
sbb
outsl
or
sbb
push
push
stos
dec
mov
les
dec
or
sbb
mov
std
dec
std
sbb
sbb
stc
and
aas
mov
dec
roll
and
aad
cmpb
andb
or
inc
xchg
mov
lods
pop
inc
shll
pop
gs
popf
and
push
xchg
movsb
les
adc
lods
jmp
into
arpl
add
cld
sbb
in
add
mov
icebp
and
adc
dec
add
stc
loopne
scas
iret
push
xorb
and
xchg
aad
xor
cmp
popf
jb
gs
lret
loopne
ja
dec
addr16
jb
mov
loope
inc
inc
gs
sti
cs
mov
push
sub
inc
sbb
pop
aam
pop
je
mov
sbb
mov
fsub
mov
sub
cltd
in
and
mov
cmp
adc
adc
shrl
sbb
int
sub
push
jo
inc
pushf
sub
gs
jno
shr
mov
push
cwtl
js
out
push
scas
lahf
cmpsl
push
sub
pop
enter
jg
in
mov
mov
jmp
cmp
sub
or
adc
push
shrl
add
add
inc
stos
or
ret
loopne
sub
jg
cmp
adc
in
mov
inc
dec
mov
sub
pusha
ret
jbe
mov
dec
in
jg
and
dec
insl
pop
scas
inc
bound
lods
sbb
jno
push
in
loop
aas
cltd
loope
adc
jl
xchg
xor
bound
pushl
jae
adc
dec
jno
cmpb
pop
inc
mov
les
lock
filds
or
or
adc
dec
fsubr
fstl
dec
adc
add
inc
pop
jb
and
into
js
sbb
xchg
hlt
imul
faddl
push
imul
cmp
outsl
sbb
xchg
ss
add
fcoms
cmp
inc
rcrb
add
aad
sub
jmp
jle
jmp
ret
mov
call
je
sbb
shl
push
pop
sub
adc
cltd
jne
in
inc
mov
insl
test
mov
dec
mov
dec
adc
jbe
sub
enter
adc
mov
xchg
push
movsb
fsts
mov
push
mov
lret
pop
popa
cmp
xlat
inc
incl
out
out
mov
test
arpl
add
cmpsl
sbb
mov
xchg
rol
ret
xlat
push
mov
movsl
adc
mov
test
cmp
add
push
pop
xchg
jge
sti
jno
jns
mov
iret
jae
jno
sbb
imul
mov
lahf
push
inc
inc
and
pop
mov
cmp
fildll
xor
les
lret
adc
or
test
ljmp
jge
nop
data16
dec
int
dec
add
stos
add
sbb
mov
scas
imul
xor
pop
rcr
mov
lcall
xor
insb
or
xlat
xchg
or
mov
js
call
push
sbb
mov
bound
add
js
mov
cwtl
popl
fnstsw
aaa
fdivrl
fsubs
daa
es
cmpsl
adc
out
sub
xor
jge
ss
bswap
jmp
lods
mov
cli
stos
and
add
dec
jb
test
call
int
in
ljmp
int
fwait
push
movsb
sbb
les
std
mov
mov
fwait
int3
mov
jne
inc
cmpb
or
pop
mov
test
stc
mov
mov
nop
lea
lahf
push
stos
arpl
push
int3
mov
aaa
and
dec
cld
loope
adc
adc
jle
lods
pushf
adc
xorb
jb
and
sub
fimuls
xchg
jne
das
pop
mov
push
enter
imul
xor
cmpsl
aas
pop
adc
xchg
push
and
pop
popf
negb
imulb
std
jp
cmp
or
lretw
out
adc
mov
cmpsl
orb
dec
xor
push
or
sbb
gs
loopne
add
or
mov
cmp
test
or
xorw
or
jp
adc
dec
cmp
or
fcos
pop
pop
pop
mov
in
fs
push
mov
scas
dec
rcrb
mov
and
xchg
add
mov
push
xor
xchg
aaa
inc
sbb
pop
add
mov
loopne
and
push
movsb
adc
push
add
push
mov
mov
sub
mov
fildll
cmpsl
movnti
inc
mov
and
movsb
in
aaa
xchg
imul
sbb
xchg
sbb
cmp
mov
pop
inc
jo
fisubrs
xchg
xchg
xchg
bound
push
in
jmp
inc
cmpsb
sub
or
pop
loopne
sub
lea
cmc
lock
lea
or
jp
sub
cmp
mov
cli
mov
fs
int
pop
out
subl
sti
sbb
pusha
loope
inc
rorl
int3
xor
fiadds
scas
pop
push
push
loope
sub
push
jns
dec
fbld
push
lea
jl
inc
out
or
pop
xor
iret
pop
js
imul
fistpl
leave
imul
outsb
ret
and
std
sub
jne
jle
std
push
stc
xchg
iret
mov
std
daa
data16
mov
mov
push
add
mov
in
dec
xor
dec
bnd
adc
cltd
sub
add
adc
jno
rorl
lret
lods
dec
sub
xor
in
mov
pop
xchg
mov
fidivrs
xor
loope
xor
daa
clc
jecxz
or
out
adc
fiaddl
div
popa
jecxz
pop
pushf
adcl
enter
dec
imull
insb
push
fucomip
inc
xchg
and
sbb
mov
fldenv
sbb
jbe
inc
and
loopne
pushf
aad
fwait
jmp
test
push
inc
enter
inc
push
add
or
es
inc
cmp
addr16
fimuls
push
pop
insb
fs
mov
xchg
cld
xchg
jg
pop
fwait
sbb
ljmp
mov
rcr
xor
pop
adc
outsb
or
sbb
test
dec
and
cmc
inc
cmp
or
mov
mov
dec
inc
decl
inc
or
mov
cmp
pop
xor
lret
loop
push
repnz
lahf
pop
dec
pop
fs
iret
movsl
fldenv
mov
add
and
jecxz
push
mov
pop
loopne
xchg
aaa
xor
popf
sub
bnd
addr16
cmp
cld
pop
test
idivb
mov
jg
call
sub
test
add
pop
daa
push
mov
dec
push
aad
mov
xchg
inc
xor
out
mov
aas
dec
add
pop
sbb
push
cmp
push
icebp
movsb
mov
aaa
outsl
push
xchg
mov
or
movb
fldenv
jl
jge
faddl
pop
xor
outsb
cs
out
test
lock
andb
pusha
cmc
mov
lods
pop
cmpsb
lret
jmp
fisubs
pop
shrl
xchg
call
lret
int3
mov
add
andl
stos
lea
mov
mov
es
dec
dec
ljmp
clc
add
ficompl
or
lock
inc
out
and
push
fwait
lahf
jl
jo
pop
sub
test
nop
xchg
clc
mov
xchg
psrlq
stc
or
jmp
cmp
leave
lds
xchg
sbb
sbb
mov
adcl
or
dec
loopne
xor
loopne
je
in
pop
test
mov
xchg
neg
lahf
aas
inc
in
mov
push
jb
test
fsincos
int
into
gs
jmp
lds
sbb
mov
inc
rolb
pop
cmp
xlat
mov
or
push
addr16
or
in
jno
sbb
xor
xorb
mov
mov
push
sub
cli
sbb
fwait
addl
insl
stc
lds
push
xchg
cwtl
outsl
rcrb
adc
dec
outsb
or
jne
std
add
cmc
cld
in
push
cmp
sub
push
and
pop
pop
insb
mov
je
rcrl
push
sbb
adc
loopne
sbb
cmp
call
sbb
cmp
mov
add
dec
fmull
jae
prefetch
or
mov
loope
adc
dec
jmp
or
test
add
jno
push
xchg
loopne
xchg
nop
xor
dec
ffreep
icebp
push
add
mov
jle
mov
stc
scas
and
mov
repnz
nop
xchg
stos
dec
sub
sbbl
stos
mov
dec
das
out
test
lahf
mov
out
inc
pop
js
mov
xchg
sub
test
jle
dec
mov
mov
je
test
outsb
mov
gs
ja
mov
icebp
and
je,pt
push
sbb
pop
cld
sbb
and
loopne
sbb
xchg
sahf
inc
in
push
pop
or
aaa
sbb
add
mov
cmpsb
outsb
pop
mov
push
sub
xchg
xchg
shlb
push
mov
fcmovnbe
aaa
movsl
insb
push
cmp
mov
stos
stc
das
mov
cltd
jp
scas
inc
mov
inc
xor
insb
xor
stos
xor
dec
popa
push
inc
sub
in
xor
push
iret
rcrb
out
or
adc
leave
jge
pop
outsl
xchg
outsl
xchg
imul
cmp
movsl
lock
sub
mov
out
push
orb
mov
cmc
xlat
or
pop
inc
jns
cmp
dec
in
mov
sbb
mov
pop
mov
jne
rcrb
adc
fstpl
jbe
movsl
sbb
cmovle
mov
addb
xor
dec
cmp
add
push
mov
dec
dec
push
xor
call
pop
inc
cwtl
mov
daa
inc
int3
test
in
iret
adcb
xor
push
mov
lock
icebp
test
mov
cmp
aaa
stos
daa
gs
inc
test
sub
mov
jae
push
imul
cmpsl
add
bnd
push
push
nop
dec
sub
xchg
jno
mov
mov
mov
aas
mov
mov
mov
xchg
add
cli
adc
cwtl
push
jmp
mov
cmp
and
push
out
je
das
rcl
stos
cmpsl
jecxz
and
pop
sbb
repz
jne
les
push
dec
inc
test
and
imul
cltd
jnp
mov
mov
sub
mov
loop
aas
jg
mov
pushf
fsubrl
ret
out
mul
cmpl
loop
xchg
pop
ret
lahf
and
stc
fwait
mov
mov
mov
stos
inc
sbb
xchg
rcrl
adc
add
daa
aad
push
sub
je
or
sbb
xchg
call
xor
cltd
sbb
leave
mov
dec
inc
jno
push
and
out
pop
mov
aaa
and
lret
sarb
js
push
jo
fisttpl
outsb
inc
xor
hlt
mov
sbb
pusha
xor
add
add
mov
jp
push
lods
in
imul
or
pusha
mov
mov
jmp
in
push
mov
pop
sub
hlt
in
lds
inc
and
or
and
xchg
add
lahf
ss
jp
inc
fistl
loopne
inc
push
mov
mov
shr
pop
shll
repnz
repz
daa
loope
les
gs
sub
call
aad
test
lds
js
shr
popf
cmp
sub
std
nop
das
mov
cli
sahf
testl
icebp
lds
loop
test
cs
cmpsb
dec
cmp
and
xchg
mov
dec
out
js
das
xchg
cld
cwtl
mov
cmp
int
sub
mov
jbe
mov
je
xorl
pop
rorl
sub
rcrl
sbb
int
mov
add
fwait
popa
fwait
rcr
adc
mov
pop
or
stos
outsl
pop
push
cmpsl
les
roll
pusha
xor
push
pop
ret
jmp
push
mov
xor
dec
sub
and
jne
sahf
or
stos
push
cmc
ja
movsb
out
je
mov
push
loope
lret
shl
iret
aaa
xchg
js
xchg
in
mov
ja
pop
std
inc
xlat
outsb
mov
mov
rol
jl
inc
pushl
ffree
icebp
mov
jno
mov
mov
fwait
push
mov
lods
ucomiss
adc
jnp
pusha
jmp
sbb
adc
incb
outsl
mov
mov
repz
dec
jno
jo
add
loope
rcll
inc
push
loope
push
push
in
xchg
imul
jecxz
std
fcomps
sti
lds
sbb
lea
cltd
repz
xor
xor
test
sub
out
cltd
push
scas
lea
arpl
out
xchg
nop
cmp
xchg
pop
inc
pop
pop
jl
aad
sbb
xorb
les
ja
outsl
insb
jnp
pop
cli
mov
and
adc
cmc
popa
inc
movl
cmp
adc
push
xor
jns
in
subb
dec
out
aad
lahf
fcompl
loope
mov
cltd
mov
int
sub
inc
sbb
int
pop
mov
fs
outsb
push
mov
dec
push
fildl
add
jnp
lahf
xchg
hlt
shrl
pop
stc
in
sub
mov
push
and
lret
mov
cmp
dec
xorl
sub
stc
insb
jp
loop
loopne
das
in
fistps
mov
nop
xchg
lcall
data16
int3
jno
pop
cmp
outsl
mov
cmpl
gs
add
shll
scas
sub
inc
test
or
xor
push
ljmp
out
inc
mov
cmp
inc
stos
cmpb
adc
dec
xor
pop
rorl
mov
mov
loop
iret
daa
jmp
cmp
faddl
inc
cld
push
xor
sbb
push
stc
pop
std
cmp
mov
xor
push
and
dec
jae
sbb
shll
shl
ja
xor
pushl
mov
in
dec
pop
popf
inc
setg
cwtl
ljmp
xlat
add
inc
das
lahf
fsubr
xchg
into
inc
xchg
or
into
loopne
and
push
dec
inc
jle
out
jle
bound
and
cmc
clc
mov
out
push
pop
mov
ret
inc
repnz
stos
mov
ficomps
adc
xor
jne
mov
mov
xor
insb
jbe
icebp
popa
pusha
and
sub
fucompp
in
inc
pop
inc
mov
fs
jge
xchg
xchg
loop
int3
push
inc
inc
out
test
mov
aaa
fs
stos
gs
in
sub
les
cmp
cld
cmpsb
mov
mov
and
fcom
shll
cltd
push
push
sub
out
fstps
test
rcl
ja
aas
jns
add
daa
push
xchg
ficoml
mov
dec
nop
push
int
rcll
xor
loope
push
sahf
rol
xlat
mov
outsb
inc
push
xlat
in
mov
sahf
mov
mov
push
mov
mov
inc
jns
xlat
xor
cltd
jg
adc
push
scas
inc
mov
pop
add
jmp
or
fistps
loope
lcall
mov
movsb
xchg
es
loopne
and
es
outsl
pop
adc
inc
sub
mov
fnstenv
mov
loopne
gs
iret
pusha
or
inc
daa
ja
fs
mov
rolb
inc
mov
jmp
fcom
andl
mov
push
jl
pop
popa
lcall
lret
or
push
push
insl
je
push
nop
mov
std
push
xchg
sub
fadds
mov
push
repz
xchg
pop
mov
std
les
in
sub
or
sub
inc
cmp
jp
stc
xchg
daa
repnz
mov
dec
fs
jb
fs
in
int3
lods
jecxz
pop
and
inc
pop
movsb
sahf
or
dec
lods
shrl
stos
lods
or
rolb
cmp
fnstcw
sbbl
xchg
and
mov
sbbb
mov
inc
in
pop
xlat
imul
mov
push
xchg
xor
into
sub
cmp
push
or
add
sub
and
mov
out
jo
outsl
and
jg
notl
sub
push
mov
fistl
fdiv
clc
lods
push
xlat
pop
nop
dec
inc
push
mov
mov
outsb
mov
stc
or
int3
xchg
mov
imul
jle
sbb
pop
cmc
iret
mov
jg
aas
rcrb
jp
cmpsl
adc
cmp
cmp
mov
add
pop
adc
jge
daa
and
or
cmp
mov
aas
stc
lret
movsl
add
xchg
repnz
push
and
loopne
jb
push
mov
xlat
jecxz
xchg
jnp
lcall
mov
add
loopne
and
xchg
out
pusha
subl
dec
push
imul
ficoml
leave
inc
or
xor
aaa
xor
adc
ret
nopl
pop
push
daa
push
push
scas
or
hlt
mov
scas
jmp
pop
and
ljmp
xor
jns
add
addr16
fimull
add
repnz
jp
push
add
inc
das
jmp
and
in
sbb
dec
sbb
loop
dec
dec
addr16
sub
adc
aaa
sub
sbb
xor
jno
mov
je
fwait
je
adc
aaa
dec
lahf
movsb
and
pop
cli
xchg
mov
dec
adc
pop
dec
jnp
push
adc
test
cmp
in
fldt
pop
movsl
pushf
cmp
jbe
pusha
lret
std
xchg
push
testb
pop
test
mov
pop
mov
test
jmp
mov
push
push
out
testb
fs
pop
dec
mov
mov
inc
shr
xor
or
mov
jle
leave
out
call
push
dec
lret
cmpsl
sti
sbb
and
mov
pop
scas
mov
cmpsl
and
push
shll
or
lea
sub
xor
cld
fistpl
dec
jb
adc
pushf
sahf
jecxz
dec
lcall
mov
fcmovnu
ja
iret
call
popa
push
out
arpl
jbe
lock
mov
push
aaa
idivl
int3
adc
out
mov
pop
jb
xchg
in
jae
shll
ret
xchg
cmc
xchg
pushf
mov
aas
lock
mov
nop
dec
popa
mov
or
mov
arpl
pop
mov
xchg
iret
icebp
mov
cli
jg
xor
in
and
mov
vmread
cmp
fldt
ss
fcmovnu
insl
popf
sahf
xchg
cmp
push
or
mov
push
cmc
ret
dec
mov
enter
sbb
cmp
mov
sahf
sbbl
data16
adcl
xor
outsl
sbb
pop
stos
mov
sahf
mov
test
shrb
nop
call
stos
hlt
daa
pushf
pop
pushf
mov
xor
mov
mov
jbe
mov
orb
mov
insb
xor
inc
orl
mov
push
push
xchg
mov
stos
test
pop
es
les
pop
insl
push
jge
push
inc
fcoms
pop
pop
stos
or
lahf
push
int3
loope
inc
cs
sbb
loop
mov
xor
push
mov
dec
xchg
sbb
adc
add
mov
mov
test
jnp
add
enter
stc
jge
pusha
xchg
adc
adc
cltd
mov
aaa
add
sbb
andb
repz
test
dec
mov
sti
pop
jl
cltd
and
fisttpll
lods
rcrl
add
pop
adcl
shll
nop
sbb
pushf
repnz
subl
bound
dec
out
pop
inc
pop
add
adcb
jae
adc
jp
mov
mov
ljmp
jns
sahf
or
add
lcall
pop
cmp
movsl
mov
shll
push
add
and
mov
icebp
jg
inc
ficoms
lcall
dec
pusha
xchg
inc
push
fbld
call
hlt
clc
push
add
push
pop
insb
les
lods
cmp
idiv
push
fisttps
pop
adc
jb
stos
roll
test
cmp
fsubp
cwtl
rolb
xchg
dec
decb
clc
sbb
cmp
ljmp
jle
sub
bnd
je
xor
and
pop
lods
orl
sti
and
sub
adc
stc
sbbl
xor
dec
in
or
pusha
push
push
pop
push
rcl
push
adcl
sbb
dec
adc
scas
mov
out
push
lcall
jns
repnz
das
dec
sti
xchg
or
dec
jl
mov
mov
adc
bound
mov
mov
lds
fs
arpl
jp
testl
mov
cs
inc
les
adcl
loop
cmpsb
andnps
cmp
je
jae
orb
sub
add
pop
push
jge
inc
std
pop
call
js
aas
rcrl
cmp
scas
mov
xor
mov
xor
cmpsl
inc
adc
mov
loop
cmpsl
jae
add
cli
push
sarb
xchg
rolb
or
loop
shr
lock
sub
lds
push
jg
push
xor
sbb
pop
test
and
pmullw
xlat
iret
xor
loope
add
dec
or
sub
imull
scas
stos
cmp
rcll
pop
mov
mov
jecxz
xchg
dec
adc
sub
cmp
sub
insb
and
rcr
into
outsb
roll
fnstsw
sbb
das
lret
daa
inc
aad
sub
call
lret
lds
popf
sub
dec
flds
push
mov
push
in
jmp
and
cltd
jp
mov
nop
adc
sbb
mov
in
lea
rolb
or
xchg
fnsave
out
loope
pop
daa
mov
iret
aam
fnsave
jmp
adc
fcmovb
cmp
mov
out
mov
sbb
xchg
mov
fisubrl
call
push
adc
sti
inc
out
mov
aam
insl
or
nop
xor
xorl
jp
rcr
ret
popa
dec
fdivrp
jnp
jge
dec
and
fistpl
push
xor
mov
mov
or
cmp
mov
push
cld
sub
les
in
dec
ret
ljmp
pop
dec
cmpsb
out
fnstsw
xor
xchg
stc
jo
addr16
daa
stos
sub
sarl
adc
mov
inc
cmpsl
mov
pop
mov
fsts
adc
test
cwtl
jecxz
loope
mov
sub
mov
or
in
mov
fwait
das
mov
mov
dec
jb
inc
insl
imul
fdiv
xchg
aad
pop
es
dec
or
xchg
lcall
icebp
sbb
mov
mov
int
lods
inc
daa
mov
mov
lret
outsb
cmp
movl
xchg
xchg
adc
xchg
loop
jecxz
cmc
mov
jge
add
cmpb
xchg
aad
mov
test
mov
inc
divps
mov
mov
stos
push
cmp
push
mov
popa
repnz
jae
daa
loopne
mov
divb
cli
orb
inc
sbb
dec
sbb
or
sub
ret
mov
sub
out
xor
jnp
je
push
ss
mov
inc
movhps
mov
fsts
test
sub
adc
call
divl
cmpsb
jp
fsubrp
xlat
je
arpl
dec
fcomip
call
repz
mov
adc
push
lds
push
pop
lock
pop
push
mov
add
inc
insb
mov
mov
push
jecxz
outsl
fisttps
lret
insl
mov
clc
adc
add
push
addb
pop
mov
xchg
cs
add
and
or
lret
mov
pop
cmpsl
ficomps
xchg
inc
jg
cmp
xor
jl
mov
inc
mov
and
jecxz
insb
lahf
sbb
mov
addr16
cmpsb
sahf
adc
insb
sahf
mov
aad
sub
int3
pop
movb
push
sub
mov
mov
repz
scas
sub
and
push
stos
mov
dec
inc
mov
pop
popf
push
or
pop
ljmp
pop
loop
adc
add
fsubs
pusha
inc
jns
sub
jne
mov
mov
adc
push
push
imul
pop
mov
in
mov
repnz
imul
shrb
nop
pop
lock
mov
cmpsl
call
call
mov
sbb
pushf
je
xorb
sbb
fldcw
incl
mov
in
and
xchg
aaa
push
cli
xlat
cmp
jle
pop
imul
bound
mov
and
mov
neg
xor
mov
sbb
add
mov
fdivl
lret
outsl
adc
pop
cmp
adc
iret
jne
iret
pop
mov
dec
dec
idivl
daa
sub
stos
xchg
lods
pop
push
or
jno
adcb
xor
dec
lahf
sub
fwait
scas
dec
repnz
xchg
imul
jmp
xchg
out
es
add
pop
stos
in
mov
adc
out
xlat
in
adc
push
pop
sub
sti
adc
adcl
push
and
or
hlt
dec
imulb
out
cmc
xchg
add
inc
les
cmpsb
sub
dec
xor
test
out
mov
sar
lahf
mov
mov
inc
jmp
mov
push
dec
aaa
sub
cmp
movsb
mov
pushf
cmp
mov
pushf
adc
out
jecxz
lods
xlat
jo
lock
ds
mov
sbb
popa
pop
jne
movsb
add
out
pop
pusha
adc
stc
out
jg
mov
stos
scas
adcl
push
insb
sarb
or
stc
jns
jge
sbb
adc
push
flds
ret
dec
lds
push
pop
or
out
dec
gs
push
insl
ret
in
ss
test
scas
xor
mov
push
pop
std
cwtl
cmpb
push
or
inc
mov
mov
mov
pop
and
sub
lock
fistpll
lds
mov
mov
pop
mov
xchg
loopne
add
ret
jbe,pn
mov
mov
scas
in
in
mov
iret
in
cmpsb
cwtl
mov
stos
cmp
movsl
xchg
push
mov
inc
movsl
movsb
arpl
lds
xchg
loopne
mov
out
dec
popf
sbb
das
cmovnp
shrb
add
test
and
inc
inc
nop
cwtl
pushf
jo
fcmovu
jl
inc
push
in
out
mov
push
dec
pop
push
jae
adc
test
add
fsubl
xchg
mov
sti
pop
xchg
int3
and
push
jge
insb
or
hlt
sub
into
ljmp
push
sbb
ja
xchg
dec
lahf
jg
ficomps
xchg
jb
and
pushf
addb
push
add
dec
xor
rolb
jle
jae
mov
mov
mov
dec
jnp
push
mov
lods
mov
nop
add
test
push
pop
cmpsb
popf
clc
or
add
cld
cmpsl
sbb
test
push
scas
and
aam
insl
add
xchg
mov
inc
adc
sub
or
sbb
pop
xchg
fidivs
cmp
sbb
push
add
sub
mov
addr16
mov
icebp
add
sahf
push
pop
push
cmp
xchg
pushf
imul
lods
mov
icebp
call
add
subb
xchg
movsl
push
cmp
clc
mov
pop
fdivs
pop
adc
jmp
ja
push
or
push
dec
push
aas
adc
dec
bound
mov
sub
sbbl
mov
inc
and
dec
enter
jb
loopne
inc
movsl
mov
and
sub
sub
add
mov
movsb
cmpsl
push
mov
lock
ss
jno
add
sbb
dec
or
out
push
inc
mov
imul
aam
cltd
dec
loope
or
mov
xchg
sti
je
mov
jecxz
mov
sub
filds
xor
sbb
mov
pop
mov
or
addl
xchg
push
test
mov
iret
cwtl
je
sbb
sbb
push
fistps
and
mov
test
mov
test
add
test
loopne
xor
adc
sub
fcoms
add
test
dec
mov
adc
loop
fimuls
aas
jmp
pop
xor
insb
sbb
scas
add
jno
sbb
sbbb
aad
mov
push
lret
push
push
subps
loop
inc
sub
mov
popf
mov
inc
scas
dec
test
push
xchg
ficomps
push
push
sti
jle
xchg
xchg
insl
movsb
call
into
xor
push
or
xor
inc
cld
int3
cmc
sub
push
es
jg
in
arpl
aam
and
xchg
dec
jns
out
add
adc
ficoms
xchg
sbb
repz
cmp
daa
mov
jp
dec
or
popl
ds
in
ss
outsb
scas
outsb
pop
ret
imul
das
mov
sbbb
jae
out
mov
fcmovne
popa
lods
dec
movsl
mov
mov
inc
jmp
fisubrl
mov
hlt
negb
dec
cmp
movsb
scas
cltd
xor
xchg
sub
jecxz
or
fidivrs
add
out
das
std
fwait
and
arpl
xchg
adc
adc
cli
test
in
int3
xchg
stos
jle
js
repnz
xchg
dec
mov
std
pop
mov
xchg
loope
lods
daa
jp
pop
cmc
out
imul
cltd
pop
fucomp
rclb
jecxz
bound
lods
negl
cmpsl
aam
icebp
jb
inc
dec
xor
mov
jmp
cmp
xor
mov
sub
jg
mov
jg
aad
ss
js
cmp
mov
add
fcompl
mov
out
js
push
mov
inc
rcll
out
xor
pop
pop
test
pop
mov
xor
push
xor
add
leave
nop
in
mov
adc
out
mov
or
dec
cmp
cmp
mov
add
js
testb
test
lcall
adc
inc
fsubp
mov
mov
testb
jb
in
repnz
test
repnz
adc
push
lock
inc
lods
pushf
fcompl
cmp
inc
cld
sub
into
cmc
movsb
mov
cmp
mov
in
push
push
shll
into
repz
push
push
and
xchg
mov
cmpsb
imul
lret
push
mov
adc
push
rclb
arpl
mov
mov
pop
jno
add
mov
xchg
cmp
clc
add
stc
mov
arpl
test
jg
jmp
dec
std
repnz
adc
push
sbb
sarl
sub
push
int
dec
movsl
lods
in
push
out
test
cmp
xor
pushf
jb
jno
andl
jne
xor
push
loopne
leave
jmp
sbb
decb
loopne
xor
clc
cmp
xor
cmp
cmp
sbb
movsl
pop
cmp
arpl
aas
jns
addr16
jecxz
jbe
xchg
sub
movsb
imul
cltd
mov
movsl
xor
push
ret
fadds
loopne
cmpsb
sub
inc
jecxz
das
xor
mov
popa
push
aas
fcoms
add
add
pop
jl
scas
mov
cs
popf
xor
sbbl
cmp
fistps
xor
movsb
stc
pop
sbb
sub
rcll
imul
sahf
test
loop
cld
call
dec
and
mov
mov
test
mov
mov
addr16
add
aaa
jp
aam
hlt
jae
out
arpl
pop
aaa
jb
pushl
inc
jp
out
push
inc
jmp
enter
call
mov
movsb
mov
fwait
rolb
into
mov
ljmp
rorl
shr
mov
into
ja
fdiv
enter
scas
jne
movsl
leave
pop
sub
aad
out
addr16
push
add
sbb
adc
dec
popf
scas
icebp
mov
sbb
in
cmp
sbb
mov
loopne
or
arpl
dec
add
dec
cmpsl
shll
sbb
loop
xchg
pop
and
mov
jle
cld
adc
xor
inc
inc
mov
dec
imul
ret
dec
dec
mov
in
imul
pop
into
mov
cmp
xor
je
out
sub
repnz
addr16
lahf
lret
aas
iret
add
cli
pop
je
jns
dec
pop
mov
xchg
jl
pop
jnp
push
mov
or
mov
mov
mov
mov
dec
pop
and
cwtl
inc
mov
mov
shlb
ljmp
sbb
dec
scas
adc
add
lods
adc
sub
aas
data16
push
add
adc
xor
pop
lret
mov
iret
mov
jl
loope
scas
mov
and
popa
lods
jle
xchg
xchg
push
je
inc
mov
mov
and
pusha
adc
ss
subb
xor
insb
adc
xchg
jl
in
mov
inc
cmc
bound
mov
mov
cld
adc
mov
scas
imul
sti
movsl
or
pop
cld
dec
loopne
loop
stos
fbld
stos
mov
cwtl
inc
ds
repnz
jp
dec
mov
scas
pop
mov
ljmp
fndisi(8087
lcall
lock
pop
sub
inc
inc
or
xchg
cmp
xchg
les
fs
in
mov
sbb
stos
push
lds
pop
sbb
mov
dec
loopne
cs
cltd
movsl
xor
hlt
push
test
lret
or
out
sarl
arpl
sarb
add
push
loopne,pn
cmp
add
int3
pop
add
pushf
adc
int
sbb
xchg
in
push
out
dec
inc
shlb
sbb
sub
and
and
fcomps
outsl
add
daa
pushf
fcmovu
and
ljmp
rcrb
lds
push
xchg
pop
sub
mov
les
popa
jns
in
enter
mov
shufps
lcallw
repnz
movb
fldl
cmp
adc
jg
ret
mov
push
jbe
and
jp
mov
leave
arpl
sub
inc
bnd
movd
fs
hlt
or
sarb
fsub
subb
mov
push
les
ret
fisubs
ret
loop
push
or
mov
das
stos
cmpl
jb
psubd
popa
adc
cmp
push
cs
jg
or
lds
mov
movsb
bound
push
sbb
cmp
jg
inc
cmp
iret
data16
xchg
mov
mov
sbb
stos
sub
push
jb
sbb
jnp
imul
adc
cmp
int
in
mov
mov
lret
adc
mov
es
das
xchg
shl
jge
push
dec
sub
int
movsb
repz
out
in
mov
scas
cmp
xchg
inc
jnp
shlb
cs
inc
xor
or
stos
jecxz
popf
cmpsl
inc
sub
fcmovnbe
push
sbb
cwtl
cmp
into
xchg
fdivs
xchg
js
test
popa
push
push
jecxz
mov
xchg
cld
or
insb
cmpsb
nop
jl
mov
pop
sarl
icebp
mov
ret
push
test
js
xchg
lcall
testl
jmp
icebp
push
in
lea
mov
arpl
sbb
jle
xchg
stos
repz
xor
insl
dec
sbb
pushf
sbb
fwait
pushf
add
roll
xchg
xor
std
call
out
push
test
mov
pop
cmp
adc
cltd
sub
adc
ret
push
out
std
fdivl
andl
push
bound
mov
sbb
ret
sbb
adc
sub
and
in
out
mov
adc
cwtl
push
mov
arpl
cld
cmp
inc
outsl
add
add
call
out
push
mov
jae
data16
xor
adc
es
mov
nop
xor
mov
std
push
xchg
imul
fwait
adc
adc
add
inc
cmp
and
jge
lods
cmp
mov
dec
xor
in
or
clc
insl
cmc
daa
xor
orl
test
mov
rcrb
mov
sbb
adc
aaa
xor
shrb
lret
mov
lods
xor
xor
mov
add
push
and
mov
test
push
sub
iret
cmp
sbb
or
jmp
scas
repz
sub
jmp
xchg
jo
xchg
clc
mov
ljmp
adcl
outsl
jmp
mov
cmp
cli
mov
sub
rol
or
or
mov
jae
enter
in
cmpsb
push
sub
fsubrs
aaa
cmp
push
add
pop
aaa
dec
xor
gs
sub
out
push
sub
lret
stos
notl
lahf
adc
sbb
mov
and
call
xchg
push
pushl
leave
test
mov
mov
mov
or
mov
ljmp
dec
jle
into
in
dec
out
push
cltd
mov
pop
jp
fwait
sbb
jmp
mov
out
arpl
daa
mov
insl
push
test
adc
xor
xchg
les
dec
mov
bound
add
add
adc
lods
sub
fstps
dec
mov
ret
outsb
xchg
jae
xchg
in
adc
sbb
mov
stos
leave
inc
or
popa
in
movsl
jno
adc
arpl
sub
mov
in
jg
xchg
into
mov
scas
ret
int3
fucom
cmp
xlat
inc
xor
fs
enter
out
pop
jnp
mov
xchg
pop
cmp
std
data16
mov
push
fistl
xor
insl
sbb
insb
inc
leave
cltd
pop
sbbb
xchg
mov
ja
mov
adc
ds
fs
dec
xor
ja
hlt
clc
fistl
cltd
popf
push
arpl
punpckhdq
nop
adc
pop
mov
jns
nop
in
scas
adc
xchg
push
jp
sub
jg
xchg
arpl
into
aam
mov
stc
xlat
es
jmp
jp
std
cwtl
sub
or
inc
or
mov
inc
ret
sub
push
repnz
pusha
stc
or
sti
mov
pop
mov
xor
or
and
push
or
adc
insl
lock
mov
pusha
insl
push
cmp
add
repnz
rolb
scas
insb
fwait
data16
pop
aas
nop
das
mov
mov
xabort
push
imul
xor
inc
jle
cmp
sub
es
xchg
mov
cld
sub
xor
and
aad
or
pop
push
dec
into
dec
std
jmp
xchg
jg
cmpsl
sti
push
and
dec
pop
popa
jb
ret
insl
xchg
jmp
xor
xor
mul
js
push
lret
mov
ja
pop
xchg
add
leave
add
out
xor
mov
fnstenv
not
mov
insb
repnz
and
cmp
les
mov
xchg
std
cmpsb
or
lock
mov
stos
fstpl
ja
dec
pop
jno
daa
loope
pushf
push
sbb
adc
lea
mov
jno
mov
negl
fdivrl
dec
ds
and
xorl
iret
pop
dec
daa
adc
sbb
scas
ret
frstor
test
repz
leave
nop
xorb
dec
jp
mov
dec
mov
js
and
sbb
addr16
mov
xchg
cwtl
jp
mov
push
popa
fcomp
jno
test
adc
test
ret
push
cli
sahf
scas
mov
fdivs
mov
adc
and
and
ret
pop
cmp
xchg
test
mov
shl
mov
dec
add
and
int3
sbb
cmpb
hlt
call
xor
js
mov
sbb
ss
xor
mov
in
mov
dec
and
pop
and
rcll
xor
push
and
push
inc
xchg
insl
xchg
repnz
call
inc
shlb
or
xor
scas
inc
aad
in
stc
test
les
stc
iret
in
sbb
mov
andl
cltd
mov
xor
push
cmp
repnz
push
inc
cmpsb
push
lcall
jle
jnp
test
arpl
inc
mov
sahf
push
cmpsb
out
inc
popa
adc
popf
push
xchg
xchg
push
lock
rcrl
push
adc
push
or
int3
insl
add
imul
jl
das
mov
mov
pop
mov
dec
clc
data16
xchg
out
sbb
sbb
cld
mov
rolb
push
mov
xor
push
fistps
movsb
rcrb
loop
mov
mov
sbb
xor
test
bound
imul
enter
inc
pop
loope
mov
popf
int
fmuls
mov
and
nop
add
and
fsubs
adc
mov
jl
gs
test
dec
xlat
int3
es
out
pop
pop
push
ds
lret
bound
add
das
fimuls
sub
sbb
or
lock
subw
push
mov
mov
cltd
imul
push
jns
cwtl
mov
or
sbb
mov
ss
data16
test
call
mov
lock
sbb
jg
shll
pop
loope
les
mov
std
mov
pop
mov
sub
rcrb
addl
js
mov
cwtl
add
xchg
test
sub
gs
sub
jle
mov
push
divl
int
jns
adc
in
push
pop
fwait
pop
mov
mov
pusha
add
jle
out
pop
jmp
imul
mov
call
mov
push
ret
xorl
inc
movsl
enter
test
jb
lcall
into
test
jecxz
pop
andb
xchg
lahf
mulb
push
mov
xor
cmp
sub
jl
mov
sub
lahf
xchg
shll
bound
add
mov
stc
loopne
test
ss
sarb
cwtl
lock
je
push
pop
ficomps
ja
mov
loope
mov
cld
dec
arpl
movsb
pop
add
sahf
je
ss
fadds
adc
pop
test
mov
mov
pushf
push
stos
inc
mov
mov
add
push
push
sti
sbb
lahf
add
iret
adc
rol
mov
and
cli
lahf
xchg
and
ret
fdivp
lock
jg
call
mov
mov
cs
mov
rcrl
mov
jo
add
jne
popa
add
ljmp
add
mov
fsubrl
push
jecxz
inc
lahf
lahf
dec
aaa
xchg
pop
dec
sbb
or
fsin
mov
pop
scas
and
addr16
add
sub
outsl
or
loopnew
movsb
lods
or
out
lahf
push
jbe
dec
sub
fildl
sbb
mov
ret
add
xchg
jns
add
outsl
jmp
or
mov
adc
lret
xor
mov
inc
add
popf
and
mov
aam
sbb
xchg
pop
lahf
repnz
test
add
and
dec
popf
lock
lcall
mov
lret
imul
call
addr16
and
jg
xchg
push
pop
lds
iret
xchg
jge
sbb
add
jle
jecxz
fcomps
aaa
repnz
xchg
add
test
aad
inc
sbb
pop
push
pusha
add
add
sub
dec
ss
sub
fimuls
mull
mov
or
insb
jge
inc
outsb
cmpl
push
movsl
aas
push
adc
pusha
test
pop
xor
fs
and
shrl
jmp
jmp
je
mov
cmp
out
sub
dec
lods
add
jl
pop
cwtl
cmp
lock
jle
out
mov
or
cmpsb
mov
in
fidivs
mov
in
and
mov
jne
pop
xor
sub
mov
cltd
sub
loopne
xchg
in
sbb
or
and
mov
loopne
push
pusha
jle
insb
pop
adc
sub
test
push
clc
fisubrs
int
xchg
rolb
cmp
test
xlat
xor
pusha
push
add
and
sub
push
cmpsl
neg
mov
xor
cmc
dec
xchg
push
sahf
dec
enter
imul
lods
dec
icebp
into
adc
gs
mov
pusha
insl
jne
push
hlt
int
xchg
cmc
movzbl
cmpb
and
fdiv
out
or
pop
sub
xchg
adc
add
fnstcw
sbb
jo
push
fimuls
xor
inc
pause
xlat
sti
fdivrl
and
sbb
and
outsl
out
jae
out
xor
fdiv
cmp
cmp
enter
jl
movsl
pop
adc
jno
inc
xor
stc
pop
loopne
xchg
push
mov
ret
cld
js
gs
jae
imul
fidivrs
xor
push
add
adc
adc
mov
jae
into
adc
pop
test
test
cli
or
inc
or
fs
xlat
dec
gs
std
lret
jo
sti
and
cli
hlt
push
jmp
pop
ret
mov
adc
or
cmp
cld
sbb
imul
ss
imul
enter
add
aas
rcl
cmp
rcll
js
lcall
adc
ds
xor
outsl
jmp
cmp
rorl
mov
push
enter
idiv
movsb
outsb
pop
daa
fs
pop
data16
incb
and
lcall
fst
movsl
mov
mov
aaa
sarl
inc
adc
lcall
loopne
imul
ljmp
loope
sbbb
ds
lods
and
and
orl
cmpsl
adc
sub
stos
jmp
adc
sbb
cs
mov
push
and
jecxz
dec
xor
sub
mov
mov
jnp
adc
insl
mov
xor
test
xlat
cli
sahf
fs
push
dec
rcr
add
std
mov
int3
xchg
lods
xor
or
xchg
bound
lods
rorb
cltd
mov
ss
shrb
int3
pop
jns
daa
jnp
sbb
mov
movsl
fdivs
mov
adcl
sub
jp
data16
or
addr16
sti
push
push
mov
or
loopne
cld
call
sbb
cmpsl
jmp
ljmp
ss
sub
arpl
into
mov
das
push
ficompl
inc
inc
xchg
loop
data16
das
mov
fidivrs
test
mov
push
xchg
rorb
test
out
pop
pop
mov
ficomps
push
ljmp
pop
mov
ljmp
movsb
push
outsb
lock
mov
incl
dec
add
adc
outsb
out
rcll
int3
mov
fdivrs
mov
insl
add
dec
std
rcrl
pushf
push
push
add
pop
pushl
sub
incb
lods
inc
jae
aas
jb
add
sub
push
mov
push
push
lock
and
mov
push
cmp
or
fs
testl
cmpl
test
gs
sahf
fs
mov
lods
dec
xor
punpckhbw
sbb
les
xor
rclb
mov
mov
mov
xchg
lahf
andb
ret
or
insl
je
adc
add
jne
sub
leave
mov
pusha
arpl
imul
pop
lcall
filds
sbb
inc
xchg
loope
cmp
cli
mov
sahf
dec
repnz
leave
dec
inc
mov
icebp
in
xchg
mov
in
inc
jge
movsb
sbb
or
js
dec
dec
popf
lods
mov
adc
das
popa
mov
dec
test
sbb
mov
xor
mov
popl
movsb
je
xorl
aas
mov
inc
andl
cmc
mov
cmp
ljmp
mov
jb
mov
ret
sub
sub
fldcw
imul
mov
fisubrl
or
jne
iret
mov
jl
arpl
iretw
call
jmp
mov
pop
int
xchg
pop
xchg
pop
xchg
push
sti
int3
add
imul
fsubs
test
scas
cmpsb
enter
xor
rcrb
test
incl
aam
cmc
loope
enter
sbb
push
imul
jno
ja
inc
xchg
adc
push
push
cs
cwtl
mov
int3
pop
jae
sbb
jb
aad
negb
add
pop
gs
iret
pop
dec
jl
or
and
adc
in
loope
xchg
and
jecxz,pt
aad
cmp
pushw
add
ret
in
pop
cmpsb
add
jo
sub
cmpl
mov
jo
push
adc
outsb
adc
into
imul
xor
loop,pn
cltd
enter
stos
lods
call
pop
add
sbb
push
push
cmpsl
cmp
popl
cwtl
stos
popf
shrl
clc
sub
inc
gs
cs
ja
dec
lahf
pusha
jg
insl
sbb
std
mov
lock
mov
cmc
inc
testb
dec
push
push
push
out
inc
mov
pop
xchg
xor
rorb
inc
out
iret
mov
xchg
and
fistpl
in
pop
cmp
repnz
mov
cmp
minps
repnz
cmpsb
inc
rolb
repz
dec
xor
int
dec
xor
mov
pop
out
lock
pop
out
jo
add
jl
or
popf
rorb
cmpsb
add
loope
idivb
cmp
outsl
or
pop
mov
addr16
pop
jp
scas
jns
jns
cwtl
add
pop
dec
sub
sub
push
dec
xchg
jns
repnz
sbb
dec
lods
loop
pop
aam
cmp
jae
pop
aas
push
clc
popa
sub
rcrl
mov
cmpsb
push
mov
in
jmp
imul
dec
pushf
sbb
xchg
cltd
pop
in
push
stos
mov
inc
cs
repnz
xor
dec
cmp
sarb
jp
clc
mov
test
scas
fsubr
imull
mov
inc
daa
xchg
sbb
clc
xchg
ja
mov
rcrb
int3
neg
ret
mov
rcrb
inc
or
adc
in
sub
ljmp
aad
mov
adc
repz
xchg
sbb
cli
and
cmp
push
cmp
xor
cmp
sbb
add
and
lret
test
adc
and
mov
test
xor
and
ljmp
rcll
lock
dec
aas
sub
pop
loop
jb
aas
jo
out
fdivl
sbb
adc
pop
xor
xor
subl
mov
jp
stos
stos
stos
imul
nop
pop
testb
jmp
push
pop
nop
lds
filds
mov
mov
xor
iret
and
dec
jb
outsl
xrelease
dec
dec
or
out
xor
aaa
repnz
xchg
mov
ss
push
push
inc
fbld
inc
and
or
paddsb
sar
jns
stos
out
outsl
mov
imul
mov
pushf
jle
mov
or
stos
aas
ljmp
mov
mov
add
cwtl
pop
out
sahf
hlt
push
outsl
sbb
std
scas
shr
jle
fldenv
cmpsb
rorb
js
mov
sub
cld
lods
lods
mov
loop
clc
bound
insb
mov
xchg
mov
mov
push
push
scas
adc
xorl
jnp
in
mov
insl
jp
lahf
fstpl
jbe
xlat
jmp
cmp
inc
pop
pop
xchg
pop
cmp
xchg
or
aam
jbe
cmp
addr16
out
jno
loope
cmp
sub
loopne
pop
jle
push
mov
jge
testl
insl
fs
jg
imul
sub
leave
inc
inc
repz
scas
mov
and
inc
xor
and
daa
in
fs
mov
lea
sub
sub
mov
pop
adc
and
jg
adc
mov
lcall
sub
pop
push
rclb
int
daa
jno
or
int3
aam
ss
mov
loopne
add
inc
popa
loopne
and
cltd
and
add
ret
adc
add
cwtl
dec
mov
or
mov
lea
inc
test
ret
add
notb
mov
xchg
mov
aam
sub
jge
jp
orb
xchg
cltd
ficomps
mov
xadd
jae
jmp
pop
cld
dec
and
gs
das
subl
fadd
pop
mov
imul
fisubl
aaa
imul
lret
pop
push
lods
push
repnz
xchg
xchg
mov
push
fbld
lcall
xchg
fisubs
xchg
shrl
push
pop
adc
enter
push
pop
or
data16
xchg
dec
test
ss
pop
mov
or
es
mov
dec
xchg
sub
xchg
mov
arpl
pop
pop
inc
mov
or
pop
mov
push
movb
inc
cmp
push
repz
jae
cld
ret
fsubrs
sbb
pop
sahf
pop
sub
rcrb
push
rorl
dec
mov
inc
xchg
dec
repz
mov
ja
sbb
or
xchg
fwait
fs
ret
push
adc
leave
xchg
aam
cmp
fsubrs
psllw
ret
jecxz
fwait
pop
cmpsl
pop
movsl
pop
fwait
sti
decb
pop
aaa
ss
xchg
inc
push
sub
stos
test
fisubrs
mov
push
addl
lahf
cltd
outsl
imul
addr16
xchg
pusha
cmp
cmp
cmp
cmc
adc
xor
pop
and
popa
jo
shll
outsl
sbb
pushf
mov
shlb
lret
xchg
js
pop
jo
cmp
shll
mov
or
sbb
mov
add
in
icebp
aam
cltd
jecxz
pop
loope
mov
out
cwtl
pop
add
mov
dec
lds
jne
fcoms
mov
mov
stc
xchg
push
out
lcall
cmpsb
dec
push
mov
xor
ja
jp
ljmp
insb
ljmp
lea
dec
pop
cld
mov
fisttps
stc
lods
rcrb
lods
scas
mov
mov
mov
enter
mov
mov
lock
dec
xchg
jb
cltd
pop
dec
xchg
xor
ficompl
mov
scas
jnp
fsubrl
test
jns
push
sbbl
fistpll
mov
daa
test
lahf
dec
and
lret
verr
or
sub
gs
sbbb
xchg
mov
adc
outsb
movsl
mov
orb
repz
mov
and
icebp
pop
xchg
and
test
and
push
or
sbb
xchg
in
dec
negl
dec
pushf
sbb
mov
fwait
std
ret
sbb
in
xchg
xchg
mov
sarb
jmp
xor
test
push
daa
add
or
iret
loopne
mov
outsl
cwtl
imul
push
push
orl
fdivrs
test
sub
test
mov
jne,pt
mov
jns
add
cmp
jl
cwtl
sub
sarb
das
in
sub
lods
sub
adc
int
fidivrs
inc
mov
lods
adc
scas
xchg
addr16
popa
xchg
adc
pop
pop
movsb
sub
insl
push
sub
and
xor
in
push
dec
mov
add
in
mov
iret
ret
inc
sarl
sbb
js
push
in
inc
inc
lea
or
sub
pop
inc
scas
test
push
xor
int3
cmpsb
scas
ret
decb
adc
cli
xchg
insl
loop
lods
adc
jae
pushf
jmp
mov
push
popl
dec
pushf
das
lret
push
int3
outsb
sub
pop
cmp
test
lret
pop
inc
insb
mov
adc
pop
dec
cwtl
in
add
xchg
jg
ret
inc
sbb
cli
dec
adc
mov
lret
lods
iret
leave
scas
js
fucomp
mov
shll
mov
aas
mov
cmc
test
popf
push
lret
test
add
pop
stos
add
loope
enter
jbe
dec
adc
repz
int
cli
movsl
scas
subl
icebp
outsb
repz
push
sahf
xor
add
adc
adc
orb
xchg
js
lcall
mov
pop
sbb
pushf
fldcw
mov
mov
xchg
dec
mov
jp,pt
lret
in
icebp
push
insb
test
jns
add
jae
das
add
mov
and
in
ljmp
or
call
push
iret
sub
ljmp
jle
clc
xchg
push
in
pop
movsb
sub
sub
xchg
mov
push
outsb
dec
mov
pop
or
inc
mov
push
outsb
mov
xlat
push
lds
loopne
lret
mov
inc
movsb
sahf
push
insl
add
ret
lahf
lock
sbb
out
int3
lds
sbb
or
call
mov
cmc
xchg
inc
scas
and
mov
mov
cmp
fldl
mov
mov
in
mov
pop
xor
orl
cmpsb
dec
sbb
fldcw
les
mov
add
inc
xchg
cld
add
jae
aaa
icebp
fucomi
jne
adc
icebp
neg
and
adc
sub
mov
movsl
scas
loope
mov
scas
ljmp
ljmp
cmp
out
call
pop
sub
int3
jo
mov
adc
out
adc
jnp
loopne
mov
xchg
pop
sub
dec
push
notb
movsb
push
add
orl
cmpsl
push
sbb
xor
adc
pop
mov
lcall
push
ds
sbb
insl
fadds
inc
jge
inc
fsubrs
aam
loop
and
xor
jb
add
push
or
push
add
aad
dec
mul
push
pusha
movsb
mov
shrb
jns
fwait
es
inc
insb
jp
push
mov
notl
pusha
mov
and
out
fwait
aam
jo
sbb
call
xchg
jg
int3
mov
and
popa
xchg
xor
mov
mov
pop
repnz
mov
shl
ror
mov
and
add
cmp
add
jmp
dec
jg
cmpsl
into
push
jge
mov
cmp
or
and
imul
add
hlt
adc
in
xchg
xchg
xor
add
outsb
sbb
call
adc
cmpsl
ret
xchg
mov
cmp
pcmpgtb
enter
aaa
push
mov
shrl
cltd
shlb
cmp
nop
or
add
mov
mov
sub
xchg
aas
mov
loop
stos
and
int
fcmovne
shufps
out
pushf
loop
jp
shll
sub
xor
adcl
and
add
jge
pop
lcall
sahf
dec
shrb
cli
andl
mov
adc
dec
in
push
outsl
insl
test
aad
mov
and
push
jmp
popa
cld
enter
jmp
repz
xorl
add
mov
xchg
testb
mov
inc
into
xchg
pop
popf
inc
dec
ret
ljmp
jno
daa
lods
imul
xchg
subl
dec
into
lds
fadd
sarl
movsb
dec
hlt
lcall
bound
dec
lea
sbb
nop/reserved
ja
xor
mov
ret
adc
mov
mov
test
ret
xchg
mov
add
adcl
repz
notl
sub
lds
sbb
adc
push
push
mov
es
fisubrl
jns
or
dec
ret
jmp
int
in
leave
into
push
pop
mov
mov
movsb
dec
arpl
jl
nop
sub
adc
dec
cmpsb
inc
push
push
int
push
movsb
xchg
out
pop
rcr
aas
loopne
lods
shlb
bound
push
cmpsl
cmpsb
pop
popa
xor
loopne
popf
xchg
sbb
push
mull
int3
mov
aas
jno
adc
jg
ror
fsts
xor
dec
jp
xor
sub
mov
iret
push
add
push
stos
inc
pushf
cld
and
call
movsl
flds
cwtl
xchg
arpl
outsl
inc
rcl
xchg
int
mov
mov
xor
scas
xor
das
pop
inc
xchg
in
cmpl
ss
scas
dec
inc
lods
ljmp
cmp
push
cmp
loop
push
inc
in
lcall
nop
xchg
push
sub
outsb
cmp
jo
xchg
or
dec
cmp
sub
jg
ss
repz
in
pop
cli
mov
loop
pushf
mov
add
mov
scas
jge
popa
xchg
in
mov
xchg
xor
xchg
xchg
cmc
xchg
nop
dec
and
xchg
sub
andl
aaa
mov
jo
mov
ss
lock
fildl
in
nop
mov
jmp
adc
xor
stos
cmc
test
add
xor
cs
xor
leave
ret
push
inc
pop
jae
add
mov
cmp
sarl
and
add
add
orb
xchg
mov
push
sbb
enter
addr16
or
das
fs
fwait
popf
push
mov
arpl
cmpl
push
jnp
cmp
ret
cmp
push
lahf
stc
jp
cmp
jecxz
push
ljmp
xor
fcmovne
les
ja
fidivs
in
je
test
cld
lret
ljmp
stos
xor
lret
pop
push
sub
fs
pop
cmpsb
aaa
xor
mov
pop
dec
jne
je
pop
cli
xorb
xor
mov
test
sub
das
xor
int
mov
and
adc
mov
dec
xchg
mov
lods
pop
xchg
mov
pop
xor
sbb
out
fmul
or
popf
in
daa
roll
mov
clc
mov
cmp
dec
shll
sub
cmp
sbbl
jmp
xchg
icebp
mov
push
and
into
adc
sbb
mov
inc
mov
inc
gs
loope
push
lcall
pop
sbb
repz
sub
adcb
mov
int
ret
movb
divl
stos
lahf
pop
jne
cmp
and
cmp
xor
and
mov
sub
pop
inc
mov
aam
or
mov
jbe
sub
sbbl
sbb
cld
mov
or
out
mov
push
iret
dec
loope
lret
jp
outsl
add
jle
sub
mov
outsl
movsl
sbb
xchg
and
data16
aad
and
jbe
repz
mov
xchg
cmpsl
jge
imul
cli
sti
inc
adc
cmp
std
fimull
jno
repnz
jle
jbe
es
mov
and
and
mov
pushl
ret
shll
add
scas
push
lret
aad
jbe
lea
push
cmp
xor
aam
fnstenv
imul
popw
cld
cmp
decl
cmp
popa
pop
aam
mov
and
in
jae
push
inc
mov
cli
mov
into
mov
in
cmp
out
bound
jne
xchg
dec
lods
sahf
mov
stos
jecxz
fistl
mov
mov
push
vcvtps2pd
or
hlt
add
dec
mov
loop
mov
ficoml
cmp
xchg
pop
popf
lcall
add
outsb
push
and
adc
enter
imul
mov
in
je
loop
inc
or
mov
cmp
inc
shll
sbb
sub
ljmp
mov
hlt
mov
iret
dec
dec
xchg
sbb
imul
aas
mov
xchg
add
inc
and
cmpsl
or
in
nop
sbb
out
data16
jae
jnp
jns
out
push
mov
jnp
push
mov
aam
call
hlt
aam
call
clc
psubusb
inc
or
out
fwait
xchg
lret
mov
pop
ror
pop
add
mov
test
sub
mov
sbbl
pop
fwait
movsb
out
gs
push
mov
incl
in
adc
pop
nop
adcb
ret
shrl
add
adc
je
inc
mov
cmp
daa
xchg
stos
add
cmp
in
shr
lods
push
adc
or
outsl
cmpsb
xorl
or
pusha
and
js
mov
push
dec
leave
inc
xchg
fadd
inc
outsl
push
sbb
mov
cmpsl
mov
cmp
cli
fs
mov
rcll
fldenv
mov
fnstcw
jmp
lea
scas
cwtl
jae
and
repz
jp
gs
mov
mov
rorl
xchg
call
adc
cwtl
mov
xchg
out
xchg
jb
mov
je
arpl
adcb
mov
nop
std
hlt
mov
out
xorl
mov
es
and
and
mov
pop
sbb
jb
fstp
dec
push
adc
in
mov
inc
loopne
push
push
mov
xor
pop
xchg
ret
sbb
sbbb
leave
cmpb
sahf
stos
stc
mov
mov
movsb
adc
jg
xor
pop
jge
scas
and
mov
pop
adc
dec
xchg
test
jge
push
test
push
pusha
ljmp
scas
add
inc
dec
arpl
adcb
pop
sbb
mov
dec
xchg
sbb
inc
xchg
push
mov
jle
dec
cmpsl
mov
lods
pop
subl
mov
push
sub
mov
aad
mov
push
mov
ja
pop
push
nop
xor
frstor
aam
sub
stos
or
sarb
cmp
cs
addr16
adc
stos
test
mov
adc
lock
loope
js
inc
loop
scas
cmp
sub
rcr
xor
shll
push
orb
jns
lods
pop
test
push
dec
mov
fcmovbe
mov
cmc
shlb
inc
scas
repnz
adcl
jne
adc
dec
lret
push
mov
outsl
lcall
icebp
js
iret
lret
mov
test
push
insb
xor
push
mov
ror
fimuls
jae
gs
stos
das
dec
test
and
dec
fistpl
lds
lret
xlat
addr16
jbe
out
and
clc
je
gs
ds
jbe
mov
jns
andb
adc
imul
shll
jg
cmc
xchg
test
lods
xor
sub
adc
pop
cmp
cmp
cmpsl
lret
xor
or
call
fwait
pushf
inc
outsl
push
ret
fistpll
mov
pop
mov
cmp
inc
mov
push
xchg
mov
and
repnz
leave
test
subl
jl
rorl
andl
insb
cmp
fildl
mov
arpl
add
mov
xor
lea
jno
dec
divl
les
popa
xchg
mov
xchg
sbb
or
or
insl
divl
sti
cmp
xor
inc
cltd
addr16
sbb
sub
cltd
lar
fwait
ret
jl
outsb
stos
pop
inc
xchg
xchg
xchg
js
test
aaa
stc
fcompp
mov
or
and
mov
psubusb
jae
sub
mov
inc
lahf
jo
xor
fnstenv
inc
xchg
xchg
dec
enter
mov
cmp
cmp
inc
mov
adc
fsubrs
sub
in
bswap
mov
mov
lret
push
ljmp
push
movsl
and
mov
add
cmc
hlt
pusha
mov
test
sbb
stos
cli
jmp
cmp
and
mov
icebp
cmp
loope
mov
add
ficoml
sahf
cli
mov
loop
repz
clc
cmp
jb
mov
or
adc
xor
or
jbe
push
dec
lret
sahf
push
in
shrl
mov
dec
clc
outsl
ja
mov
lods
clc
es
sbb
sbb
js
sub
call
scas
inc
arpl
xchg
mov
adc
mov
aas
mov
out
sarb
lods
pop
mov
adc
cmc
xchg
pop
aaa
faddl
dec
xor
addr16
or
movsl
jmp
scas
mov
pop
xchg
lds
cmp
ja
xchg
adc
cmp
repz
jae
sbb
push
and
inc
stos
jge
pop
dec
fs
sbb
cmc
ja
adc
sbb
arpl
jge
inc
dec
jno
pop
xor
mov
xchg
sub
daa
jmp
js
push
cmpsl
mov
dec
xchg
in
in
in
addl
push
cli
je
bound
call
lock
shr
jne
cli
mov
cltd
xor
xor
int3
cmc
xchg
sbb
pushf
scas
mov
in
imul
push
lds
cs
arpl
outsl
dec
in
out
popf
pop
cs
or
and
popa
cld
aam
lahf
lock
lea
mov
add
and
cmpsb
aad
mov
mov
sbb
dec
stos
pushf
jo
imul
mov
hlt
rorl
mov
lea
and
scas
add
arpl
xor
outsl
xchg
jmp
dec
dec
dec
std
jmp
sub
mov
inc
mov
daa
xchg
xor
pop
sub
adc
inc
and
sti
sbb
ljmp
mov
mov
fwait
sarl
cli
ret
jo
push
lret
sbb
add
lcall
icebp
jae
int3
sub
addb
in
inc
stos
popf
out
stos
repz
bound
sbb
dec
sub
xchg
mov
mov
mov
cmp
xor
cs
mov
mov
pop
pushf
mov
out
les
xchg
lret
lds
pop
pop
push
jmp
cli
sti
stos
fistl
movsb
jl
adc
jo
imul
test
das
jb
dec
mov
jnp,pn
or
mov
jl
jae
adc
insl
or
add
jg
movsb
shl
sbb
sti
inc
cmp
mov
movsl
push
in
xor
mov
xorl
out
sarl
jge
sub
inc
aas
adc
mov
inc
xchg
xchg
mov
insl
sbb
push
movsb
pop
and
pop
jae
sbb
xlat
push
aad
cmp
xchg
sub
scas
mov
or
xchg
out
sbb
sbb
lret
mov
lret
inc
fsubs
mov
imul
xchg
or
rorl
negl
fs
inc
mov
pop
sbb
push
ret
ret
iret
push
dec
pusha
add
into
jns
xchg
jp
orb
mov
xchg
xlat
stos
add
cs
repz
outsl
int
sub
mov
ret
sub
imul
ror
xor
mov
aas
xchg
push
push
shl
sbb
xor
dec
cmp
out
jmp
fs
aaa
inc
mov
outsb
push
mul
inc
cs
jb
xchg
mov
xor
mov
test
repnz
gs
decb
inc
xor
xchg
mov
faddl
push
push
or
mov
and
cs
popf
cmpsl
adcb
call
xchg
test
js
jae
sbb
inc
xlat
sub
imul
mov
adc
pop
push
lret
xchg
std
cli
jb
out
xchg
mov
lock
jecxz
stc
push
fwait
jo
ja
std
faddl
and
pop
xlat
jmp
sub
add
xchg
ljmp
jmp
add
fmull
xchg
adc
movsb
jg
or
sahf
std
adc
xchg
aas
setg
fwait
cmp
cltd
mov
add
rolb
out
test
pop
or
push
sbb
scas
mov
mov
push
mov
popa
push
cmpsl
sbb
lods
pop
jne
jl
mov
push
mov
xor
xchg
inc
mov
sub
enter
lcall
and
outsl
push
and
int3
fs
outsb
stc
pop
dec
sub
push
xor
fcomps
into
cmp
mov
xchg
popa
sub
xor
call
push
outsb
mov
out
mov
insb
lds
mov
sbb
pop
pop
aad
pop
ljmp
cmp
adc
sub
lock
push
pop
push
aas
shrb
pop
in
sbb
fucomip
jae
sub
test
sub
loopne
stc
adc
iret
mov
ja
mov
paddq
cmp
shll
jne
pop
lret
stos
xor
xchg
lock
sub
outsl
push
pop
mov
pop
xor
xchg
mov
jecxz
outsl
insb
fsubl
into
orb
and
inc
and
test
inc
mov
fstpl
iret
int
dec
or
mov
lods
sub
inc
cmp
mov
push
jne
cmp
js
ss
or
repnz
fcomps
push
mov
mov
sub
sbb
sub
push
cmpsl
shlb
and
insl
js
xchg
insb
dec
jo
in
subb
jg
les
push
dec
add
push
daa
adc
or
mov
insb
sub
pop
sbb
or
xchg
pushf
cmp
jle
insb
sbb
loope
sub
cmpl
sub
pusha
out
dec
sbb
mov
shrl
jmp
xchg
int
fcoml
lea
sbbl
pop
push
pop
stos
mov
dec
add
adcl
pop
push
pop
sub
test
stos
dec
int3
pop
jbe
ror
test
lock
testb
push
hlt
jp
lret
push
sbb
xor
sub
jmp
mov
mov
xor
pop
pop
or
sbb
cmpsl
and
push
xchg
sbb
das
pop
out
mov
out
push
mov
insl
jne
xor
enter
imul
sub
dec
mov
xchg
add
sub
cmpsb
mov
inc
mov
xor
xor
jb
push
out
push
fsubl
xchg
sti
xor
aas
mov
mov
adc
dec
lock
out
sar
divl
mov
sub
lret
inc
aad
lret
mov
sbb
stc
jmp
pop
and
clc
sahf
lahf
xchg
stos
mov
cmp
dec
je
mov
sbb
stc
sub
hlt
jge
daa
inc
inc
adc
jb
adc
jnp
or
xor
jns
cmpsb
idivl
movsl
mov
scas
repz
cmc
or
or
and
inc
aam
ror
flds
inc
xchg
nop
adc
addr16
or
dec
xor
jo
test
icebp
push
out
aam
jmp
les
lcall
pop
aaa
add
pushf
sub
sarb
je
mov
insl
fwait
test
cwtl
xor
test
xor
or
ljmp
jns
inc
lds
mov
pushf
pop
adc
sbb
insb
push
xor
add
xchg
mov
add
data16
jns
stos
push
xchg
push
outsl
loopne
sbb
inc
lea
test
adc
mov
fldcw
cs
sub
vlddqu
test
pusha
push
std
sahf
xchg
arpl
mov
add
into
cmpb
dec
call
pushf
xchg
sub
mov
sub
adc
xor
ret
jne
frndint
sbb
pop
push
mov
xor
in
mov
pop
jo
pusha
cs
cld
mov
imul
dec
iret
add
pop
lahf
lds
pop
jg
idiv
mov
scas
dec
int3
cmc
pop
cli
push
and
test
inc
in
add
xchg
mov
outsl
sti
add
in
mov
repz
mov
clc
out
lret
in
mov
fsubr
sub
ficompl
cmpsb
dec
and
adc
jmp
push
inc
movsl
in
inc
cmp
push
jg
sbb
dec
push
iret
sub
outsl
pop
dec
frstor
enter
lods
mov
dec
and
int
subb
loopne
push
xchg
pop
ljmp
mov
cmp
dec
cmpsb
mov
inc
stc
gs
orl
inc
mov
pop
mov
inc
cmp
mov
jg
popf
mov
cmc
and
sub
xor
mov
enter
adc
sbb
loopne
add
add
add
push
dec
cltd
popa
mov
in
xor
sub
das
xchg
in
xchg
test
push
shl
js
and
pusha
lahf
call
nop
test
dec
rolb
pop
dec
aad
xchg
sbb
xchg
xor
pop
daa
sub
popa
cmp
pop
outsl
pop
call
or
cld
mov
jecxz
hlt
mov
repnz
out
imul
daa
ret
cwtl
aas
sbbb
fwait
notl
lds
jl
and
sti
jecxz
inc
aad
cld
pop
xchg
mov
or
out
sub
mov
inc
push
and
std
das
xor
ljmp
stos
subl
clc
lock
inc
loopne
sbb
out
push
outsl
pop
mov
add
fimull
mov
sbb
dec
or
add
loop
in
sub
sbb
xlat
jle
inc
mov
sbb
stos
pop
es
lock
mov
push
mov
jmp
xchg
cmp
stos
or
dec
cmp
cmpsb
fsin
pop
sbb
shrl
add
and
ret
xchg
sbb
and
lret
sub
adc
repnz
daa
fnclex
xchg
jnp
dec
data16
xchg
cmp
stos
adc
xchg
add
dec
xor
outsb
xchg
clc
xchg
cld
dec
mov
sbb
in
test
or
pop
test
enter
jbe
xor
xchg
xor
enter
loop
adc
outsl
xlat
jne
or
or
cmp
push
mov
call
mov
enter
movsl
pop
cvtps2pd
xchg
mov
lds
enter
pop
push
jns
rclb
test
mov
sysexit
add
loope
add
addr16
xor
jns
ret
xchg
sub
xor
je
repnz
mov
filds
in
inc
push
sarb
es
mov
mov
or
lret
dec
mov
in
cmc
and
inc
ss
pop
test
std
dec
loopne
lret
mov
push
xor
xchg
mov
xchg
xchg
das
or
mov
enter
inc
inc
sbb
faddp
sbb
fists
leave
movsl
incb
and
sub
cltd
sarl
sbb
or
adc
pop
jns
cmp
dec
jge
xchg
sti
xlat
lock
aas
and
stos
cmp
mov
dec
pop
int3
out
fwait
and
jmp
adc
sub
xchg
inc
cld
mov
push
dec
mov
add
std
sbb
imul
push
push
lock
cltd
xor
stos
or
adc
xchg
jg
inc
mov
mov
fs
iret
ds
pop
daa
jns
xchg
fs
loope
add
shll
das
push
mov
das
es
orl
in
cmp
and
dec
xlat
mov
xchg
gs
and
lret
pop
cmc
lock
js
add
js
leave
jg
and
lds
sahf
sti
jmp
je
cmp
aam
fmuls
shl
xchg
add
pop
fs
rcll
test
lret
imul
ss
hlt
dec
cs
xchg
das
dec
ljmp
cli
lret
add
push
jbe
shrl
rolb
push
addr16
adc
out
add
add
add
inc
pusha
icebp
pop
cmpb
lahf
push
mov
cmp
pop
mov
pop
outsb
icebp
pop
mov
out
arpl
mov
arpl
xor
test
sti
repnz
or
nopl
iret
push
movl
lahf
scas
fldl
fildll
test
xchg
mov
sbbb
lds
scas
fsubrs
aam
cli
push
push
pushf
pop
mov
movsl
adc
and
movsb
idivb
xlat
imul
dec
inc
sti
jecxz
movsb
int3
push
and
test
scas
iret
rolb
add
xor
pop
xchg
ss
addl
push
lret
dec
cwtl
push
movsb
jbe
fdivs
pop
test
cwtl
dec
out
jno
mov
loop
mov
or
nop
shrb
jbe
sub
adc
mov
sub
stos
pop
push
pop
gs
dec
pop
cld
fisubs
cmp
fistps
and
jno
jo
ret
pop
dec
pop
cmc
xor
leave
push
xor
xchg
mov
adc
mov
and
jg
hlt
stc
stc
rorl
cmp
inc
sub
lds
dec
hlt
int
fidivrl
not
loop
aas
dec
mov
bound
pop
jecxz
lahf
std
fcomp
repz
or
mov
aas
push
cmpl
sbb
sbbl
cmpsl
jno
xor
dec
jmp
dec
rol
test
arpl
push
test
push
jo
jmp
je
out
jmp
push
mov
fisttps
adc
mov
je
std
xlat
mov
sbb
dec
or
mov
negb
pusha
pop
ret
cmp
xchg
outsl
push
je
mov
inc
imul
scas
and
pop
add
mov
clc
push
ror
adc
loope
cltd
out
xchg
push
push
sbb
dec
call
mov
repz
daa
ret
jne
scas
mov
xor
pop
es
inc
add
cmp
je
fs
in
pop
add
add
imul
inc
sub
push
lods
dec
adc
mov
popa
ss
pop
pop
xor
mov
lret
push
aad
cltd
maxps
rcl
jecxz
jge
add
mov
jg
mov
push
jl
scas
mov
push
fnsave
or
int3
add
add
mov
aaa
aaa
cmc
mov
cmp
dec
adc
mov
adc
frstor
icebp
inc
pusha
pop
int
jbe
xlat
fiadds
icebp
subb
in
sbb
cwtl
arpl
mov
sbb
xor
cmpsl
inc
adc
add
in
and
or
mov
dec
sahf
add
jnp
dec
out
icebp
shlb
enter
lcall
cld
cmc
je
into
inc
dec
mov
sbb
jmp
jmp
cld
outsl
push
fsubr
jg
or
or
pop
mov
xor
insb
push
stos
jno
shrl
jp
jl
add
mov
xor
cmp
inc
mov
fsubrl
mov
aad
sbb
push
cmpsl
loop
xchg
inc
pop
push
jle
enter
inc
movsb
scas
mov
les
testl
cmpsb
sbb
sub
add
xor
mov
jne
sarl
outsb
lods
sbb
push
pop
lcall
pop
inc
std
outsl
insl
in
stos
inc
das
movsl
es
pop
jl
ror
push
pushl
js
xor
xor
js
add
mov
sbb
in
ds
jnp
sbb
ret
mov
sbb
mov
mov
push
ljmp
jmp
jp
adc
mov
push
jns
js
mov
add
add
cmp
hlt
pop
jmp
xor
xchg
cmp
mov
lahf
fmull
jnp
jmp
scas
dec
push
sahf
js
mov
insl
xor
push
jne
add
pop
mov
lock
cs
loop
cmp
sti
test
rcl
mov
enter
mov
sahf
pop
inc
jns
cmpsl
mov
js
jg
push
cld
sbb
pusha
inc
xchg
adc
and
cmpsb
clc
into
data16
jl
push
mov
ret
add
jge,pn
pop
ret
push
add
pop
sbb
cmpsb
xchg
sub
ss
pop
push
std
push
adc
xchg
fimull
add
lcall
movsl
or
stos
sub
cwtl
push
cmp
xor
and
pop
ljmp
mov
mov
sub
pop
stc
leave
or
jnp
and
movsb
lahf
or
je
fcmovb
stos
cmp
movsl
mov
fsub
stos
scas
bound
lds
pop
sub
mov
out
jmp
adc
mov
jno
or
dec
xor
mov
sub
aam
sub
rcrl
xor
mov
sub
aad
test
mov
test
push
mov
xor
sub
fidivrl
in
loop
pusha
or
add
add
jns
xchg
int
jle
ret
rorb
test
push
sub
scas
outsl
mov
out
jo
inc
sahf
rcll
dec
subl
aam
jp
and
push
dec
xor
into
cld
loope
fimuls
addb
sub
fs
add
xchg
mov
or
xchg
or
sub
shrl
popa
mov
test
into
inc
mov
jbe
insb
into
sub
loope
call
popa
imul
sub
or
push
or
test
shlb
out
mulb
adc
mov
ds
mov
jle
jecxz
in
mov
jb
je
inc
xchg
or
leave
jae
and
into
inc
lods
cmp
jecxz
js
push
in
bound
rcl
mov
sbb
inc
dec
repz
add
je
iret
xor
fwait
pop
jp
jne
jmp
fsts
and
pop
in
push
dec
and
dec
mov
test
sbb
es
in
hlt
sahf
popl
jb
cmp
dec
inc
ret
push
hlt
sahf
mov
fcom
xchg
jecxz
mov
sub
adc
lret
push
jne
ret
repnz
push
iret
xchg
fbld
and
sub
mov
and
or
cli
fldcw
shl
fildl
xor
sbb
int
rclb
cmp
shlb
pop
scas
dec
arpl
sbb
lods
adc
arpl
sub
daa
in
lock
adc
shlb
pushf
pop
dec
loope
xchg
mov
int3
mov
pushf
dec
loop
lahf
dec
add
mov
addr16
jo
and
mov
popa
ret
repnz
jge
or
pop
xchg
sti
mov
sub
dec
inc
xor
adc
or
mov
inc
lock
hlt
mov
fisubrs
outsb
cmc
rcr
sbb
and
rol
aas
or
ret
xchg
ficompl
call
inc
outsb
outsl
xchg
sahf
xor
test
popa
add
pop
push
dec
ror
andb
int
dec
adc
pop
push
mov
in
das
jle
cs
push
cmp
jg
add
pop
gs
mov
ds
gs
lock
out
shrb
js
shll
in
pop
push
in
cmpsb
pop
lahf
daa
lods
mov
loope
scas
xchg
ds
xchg
add
xchg
add
mov
lods
jl
jmp
in
pushf
hlt
lds
jb
into
arpl
mov
push
pushl
push
and
cltd
pushf
cmpb
mov
cld
sub
or
mov
xchg
xor
pusha
nop
dec
mov
cmp
adc
sub
mov
cltd
cwtl
inc
rcr
cwtl
add
adc
js
adc
jo
fstps
sub
mov
aaa
and
jnp
std
inc
test
dec
loope
mov
std
clc
jo
inc
das
loope
mov
xor
call
cmp
inc
insl
mov
mov
test
fwait
mov
and
popa
andl
mov
dec
scas
adc
addr16
out
or
lds
pop
dec
push
enter
imul
fldcw
sbb
enter
aas
sti
inc
xchg
mov
inc
and
sub
mov
xor
icebp
add
push
stos
pop
jae
rcrl
xchg
je
push
ljmp
sub
add
pop
lods
inc
lahf
stos
jnp
mov
fmull
or
or
divl
and
cmp
mov
mov
mov
jg
int
pop
and
jl
fwait
movl
pop
icebp
loopne
dec
mov
fs
lds
adc
sti
xor
flds
fs
stc
push
lret
hlt
lea
adc
in
lds
sub
test
mov
sub
sub
or
cs
popf
std
inc
scas
pop
sbbl
mov
mov
aad
inc
or
je
push
mov
repz
ret
fsubrs
mov
sub
stos
lret
or
dec
mov
stc
mov
out
adc
pop
xor
add
movsl
icebp
clc
xor
adc
fdivs
cltd
outsl
jne
mov
lret
add
pop
mov
mov
rol
pop
in
icebp
lods
and
not
scas
hlt
gs
and
dec
xchg
mov
cwtl
pop
sub
push
fwait
mov
lcall
xchg
push
ja
jp
mov
scas
xchg
enter
or
jl
push
add
pop
jne
jo
repnz
mov
jl
sbb
inc
inc
push
sti
lea
jb
loope
popf
test
push
pop
and
stos
mov
jl
popf
or
int
mov
ret
jecxz,pn
ror
testb
pop
fisttps
jecxz
mov
aaa
aas
mov
or
jb
mov
cmp
mov
shl
mov
pop
mov
sub
imul
dec
or
mov
sbb
addb
popf
push
jg
jecxz
sub
mov
sbb
rcrl
sbb
fs
cmp
aam
out
leave
aas
int
loopne
stos
aam
mov
stc
popf
lahf
sbb
js
adc
cmp
leave
pusha
jae
sub
pop
dec
and
int3
xor
stos
xchg
repz
gs
xchg
mov
sub
pop
mov
stc
aas
popf
fwait
dec
loopne
bound
mov
sti
pop
pop
pop
pop
into
pop
stos
or
add
sub
add
mov
xor
test
jne
iret
xchg
fsubrp
cli
mov
adc
imul
lret
jnp
cmpsb
pop
xor
negl
imul
insl
pop
push
pop
adc
xchg
mov
scas
xor
std
pop
imul
pop
shrd
cmpl
xchg
pop
pusha
lcall
movsl
jns
jo
lds
movsb
roll
push
mov
out
ja
insb
lods
fwait
mov
jmp
jecxz
insb
je
push
mov
xchg
lds
jns
mov
leave
cwtl
movsb
mov
insb
mov
cli
out
sub
cli
neg
mov
cwtl
xchg
cmpsl
inc
cmp
adcl
mov
push
xchg
cmp
leave
fdivrl
mov
data16
mov
stos
inc
mov
mov
in
mov
insb
mov
fwait
in
lret
dec
sub
sbb
mov
inc
daa
mov
pop
push
mov
mov
jl
mov
ds
out
jne
pop
rolb
xor
test
xor
sbb
jb
mov
in
xchg
ficomps
lea
into
mov
sub
js
mov
decl
js
pop
scas
inc
cltd
stc
negl
mov
les
mov
sti
fstp
enter
popf
sti
push
aaa
fisttps
shrb
bound
shll
fsubp
mov
jns
fnsave
into
mov
fidivrs
pop
clc
fdivp
out
sub
mov
push
shl
xor
leave
inc
jge
out
xchg
fcoms
in
lcall
rcrl
call
lods
int
insl
jmp
mov
cltd
xchg
pop
bound
add
clc
and
pop
cmpl
sub
imul
inc
pop
xchg
int3
jmp
and
jle
outsl
jo
repz
pop
cmp
popf
jg
xor
push
daa
xchg
inc
pop
or
test
mov
in
pop
push
mov
jae
adc
pushf
sbb
cmpsl
mov
mov
cmp
icebp
mov
mov
mov
pop
push
lock
and
loopne
out
jns
adc
enter
bound
sub
insl
jne
adcl
mov
cmp
faddl
push
jmp
xchg
popf
loopne
je
cmp
mov
jecxz
rol
mov
fisttpll
out
dec
pop
aaa
xchg
cmp
mov
mov
and
dec
imul
jns
and
mov
and
js
fwait
sub
adc
mov
fs
or
push
outsb
pusha
jl
and
addl
jle
pop
popf
enter
and
in
add
add
sub
in
push
inc
stos
stos
pop
cltd
jge
call
sub
xchg
xlat
xchg
dec
inc
fdivrl
push
cmpsb
xor
xor
sbb
push
pop
or
aad
mov
call
or
lea
stos
xchg
pop
xlat
fisubs
stos
addr16
cmp
jmp
jle
ljmp
or
arpl
xchg
pop
pushf
out
sbb
repz
xchg
xor
lea
jno
sbb
cmp
ljmp
dec
add
int3
and
add
mov
add
cs
push
fadds
mov
jecxz
mov
js
cmp
push
leave
out
mov
test
xor
cs
in
sub
lock
stos
ljmp
xchg
push
inc
imull
scas
mov
mov
lcall
lods
pop
cwtl
jnp
xor
imul
jmp
clc
pop
push
aad
repz
pop
imul
cmp
test
adc
xchg
movsb
les
jbe
das
ja
popa
cmpsl
aam
sbb
inc
jns
mov
mov
dec
es
push
xchg
es
mov
mov
add
xchg
in
sbb
mov
xor
cmpsl
in
xchg
sub
gs
rorl
insb
in
ret
daa
or
push
mov
push
fs
out
inc
jp
aas
sub
jb
popa
pop
leave
dec
pop
push
mov
pop
or
and
jne
lcall
add
fwait
push
in
imul
pop
adc
sub
mov
sbb
ja
loopne
mov
pop
adcb
cmp
repnz
jmp
in
ja
xor
es
aad
inc
out
inc
scas
fwait
mov
sbb
mov
outsl
repz
int3
loop
sub
mov
cmp
in
enter
adc
and
add
mov
add
in
ret
aas
outsb
fidivl
in
cmp
sub
inc
xor
pop
push
mov
arpl
inc
loop
test
mov
jl
jns
pop
pusha
andl
push
mov
mov
popa
test
xor
inc
loope
lock
lock
inc
mov
cmp
and
mov
idivb
repz
xlat
cwtl
inc
cmpsl
xor
icebp
or
cltd
jno
xor
mov
adc
je
jle
fisttps
jmp
or
lret
popf
mov
push
inc
test
push
and
mov
mov
js
mov
jns
lret
scas
xchg
mov
icebp
pop
jg
cltd
xchg
mov
das
shrl
push
ja
in
sbb
fcoms
mov
lcall
out
mov
out
lret
loop
jle
adc
lcall
pusha
js
test
sbb
mov
lcall
mov
mov
das
adc
rol
loopne
sub
je
das
faddl
icebp
fsubrl
mov
in
testl
add
jecxz
fwait
xor
ja
testb
gs
movl
in
mov
in
imul
movsl
xor
stos
mov
insb
push
cmpsl
and
insl
pop
dec
hlt
pop
sub
pop
orb
inc
add
xlat
xchg
push
sarb
frstor
jbe
ficoml
adc
cmp
cmp
add
cmpsb
ret
xor
xchg
test
xor
push
cmp
insb
mov
cmp
movsb
insl
loopne
pop
lods
mov
movb
faddl
aad
out
jae
ja
cwtl
jnp
subb
imul
push
cmpsl
and
pop
movl
pop
int
cmpsb
mov
neg
js
push
pusha
ret
sbb
je
mov
pop
or
pusha
push
or
cmpsl
sbb
js
nop
sub
inc
lahf
xor
std
scas
inc
xor
hlt
ret
subb
loopnew
add
xor
xchg
cmp
push
mov
ret
fidivs
push
add
clc
scas
or
ja
inc
std
dec
jns
popa
mov
mov
lock
fcmovnbe
mov
and
xchg
inc
mov
xchg
inc
ja
scas
rcl
cltd
stos
cmp
xor
stos
pxor
fcoml
fadd
or
sub
fsincos
mov
pusha
dec
popl
orb
xor
xchg
xor
inc
mov
cmp
xor
adc
push
mul
xchg
cmpsl
jp
cmp
xor
push
int3
stos
test
aaa
test
lods
pusha
jns
jo
or
fimull
push
adc
jp
ret
cmp
jno
sbb
or
push
rolb
test
imull
jne
and
or
pop
lods
in
aam
mov
mov
mov
sbb
xor
inc
test
insb
inc
cmpsb
icebp
dec
popf
les
and
inc
in
cmp
mov
pop
cwtl
test
sub
pop
push
and
leave
aad
pop
nop
and
cli
inc
mov
lea
mov
jns
rcrb
cmpsb
mov
std
call
aad
shlb
mov
dec
cmpsb
xchg
cs
push
adc
sbb
lds
xor
mov
imul
scas
mov
popa
add
ja
cld
pop
xchg
in
cli
mov
push
inc
xor
in
push
dec
sub
js
xor
sub
push
mov
mov
loope
insb
jle
dec
push
rclb
cwtl
inc
inc
push
je
dec
mov
popf
enter
por
stos
fildll
imul
pushf
rep
js
adc
dec
xor
pop
jbe
cmp
popa
mov
adc
xchg
mov
cwtl
inc
out
stos
add
and
mov
mov
pusha
aas
popa
xchg
ret
mov
fistpll
or
jle
lea
imul
data16
stos
xor
cli
or
push
lock
and
fisubs
xchg
inc
sarb
outsl
dec
add
push
adc
call
aad
mov
mov
mov
scas
mov
pop
cmp
xor
xacquire
adc
mov
jb
xchg
mov
inc
out
in
xchg
idivb
scas
jne
mov
push
cmpsl
push
dec
pop
mov
je
repz
lret
inc
mov
js
sbbl
fldl
call
lret
pop
add
test
out
lret
js
js
stos
ss
xchg
psubw
pop
jns
sbb
and
xor
jno
sarl
xor
je
add
pop
dec
cld
push
sub
pop
sbbl
or
fidivrl
dec
pop
dec
jp
push
scas
pusha
test
lods
ljmp
insb
jg
and
sbb
mov
lods
and
imul
andl
cli
cmc
mov
sbb
push
fs
push
fstl
cwtl
mov
push
sbb
dec
inc
mov
add
cmp
ljmp
sar
sarl
xchg
aad
jno
sub
dec
jb
outsl
adc
adcl
nop
jge
xchg
dec
sub
int
jg
in
sub
push
xor
adc
mov
jge
cmovs
stos
lods
outsl
test
sbb
fidivrl
xor
mov
inc
jae
mov
fwait
inc
jno
pop
mov
in
cmpsb
mov
cmpsl
push
lcall
inc
fiaddl
and
cli
mov
loopne
inc
pop
push
xchg
mov
fucomp
mov
xor
in
lea
sub
jge
jle
out
std
in
icebp
in
or
shlb
ljmp
and
ret
sbb
sub
scas
pop
dec
inc
and
lret
addr16
jp
icebp
scas
adc
lret
cli
sub
or
cwtl
fbld
or
clc
fnsave
jne,pt
lahf
and
mov
rclb
mov
fucomi
clc
jge
sbb
sub
ret
xor
sbbb
lret
and
ret
pop
ja
mov
lds
in
aad
ret
sub
add
in
and
cld
sub
cld
mov
mov
xor
popf
lods
data16
outsl
adc
fs
cmp
cmp
adc
push
arpl
xor
add
pusha
nop
inc
mov
or
jbe
pop
xor
mov
mov
sub
push
fisubs
pop
inc
pushf
idivl
sbb
dec
jbe
adc
inc
out
cmp
sub
fwait
fcomps
sbb
xchg
lret
and
in
into
sarb
dec
iret
mov
test
pop
js
daa
pop
jge
js
imul
mov
adc
popf
cli
fildll
std
rolb
push
outsb
std
jne
inc
mov
add
pop
repz
mov
imul
dec
mov
mov
daa
inc
out
inc
push
mov
xor
cld
cmp
aam
into
and
imul
std
andb
gs
adc
push
call
mov
mov
cmp
movsl
dec
ljmp
int
cs
into
insb
dec
push
sub
fbld
inc
lods
mov
sub
cmpsl
mov
mov
fcoml
int
bound
sbb
push
out
add
inc
ja
popf
clc
jg
jg
push
ds
mov
mov
leave
or
and
aas
or
or
jle
stc
gs
sub
mov
mov
or
movsb
pop
aaa
cmpsb
icebp
xchg
pop
push
jno
pop
inc
add
out
and
mul
dec
pop
and
fmull
or
add
ret
mov
loop
rorb
and
adc
adc
icebp
div
sbb
or
aaa
lret
es
andl
fimull
xchg
stc
sti
dec
cmpsl
leave
test
or
xchg
sub
je,pt
lds
mov
mov
adc
push
mov
ret
xor
repz
bound
push
test
nop
push
es
cmp
hlt
into
or
jae
adc
and
xchg
push
xor
fisubrl
rcrl
pusha
pop
packsswb
adc
pusha
push
stc
mov
scas
xor
jno
pop
outsb
incl
jp
mov
inc
xlat
mov
repz
jnp
cltd
jb
sub
mov
cmp
fnsave
pop
sbb
pop
adc
xchg
std
cmp
xor
lods
xor
sub
clc
sbb
mov
cmp
pop
pop
add
lret
sahf
test
stos
mov
aaa
jne
lods
lahf
cld
jge
push
mov
mov
dec
subl
insl
js
mov
xor
pusha
popa
and
sub
and
repz
inc
out
jmp
fwait
push
add
in
and
and
inc
icebp
cld
mov
add
pusha
mov
mov
sub
and
test
sahf
pop
sbb
jecxz
sahf
xchg
xor
jo,pn
lock
cmp
mull
xchg
push
mov
pushf
call
xchg
push
outsb
idivl
jle
lds
hlt
sub
test
xor
sbb
mov
dec
in
or
push
and
lds
ror
js
mov
add
das
aam
fistl
fstps
aaa
ret
int3
push
mov
cmpsb
aaa
ret
shlb
push
inc
cmp
sbb
fnstenv
adc
mov
push
pop
xchg
pop
push
fwait
jge
pop
xlat
xchg
and
dec
filds
cmpsb
cmp
inc
push
fistl
cltd
bound
mov
imul
lods
sub
add
lea
pop
pop
lea
repnz
into
mov
lea
frstor
mov
dec
jns
mov
pop
imul
mov
iret
and
test
jae
incb
push
clc
cmpsb
and
leave
enter
out
vzeroall
ret
mull
pushf
ljmp
push
jg
das
xor
mov
idiv
popa
mov
cmp
push
incl
ret
out
adc
sbb
scas
jbe
sub
and
adc
cmc
daa
daa
orb
nop
sbb
or
push
push
xor
jb
cmp
pop
xor
dec
adc
jae
cltd
out
mov
xor
xlat
or
mov
mov
lods
and
clc
mov
mov
mov
mov
test
mov
dec
bound
loopne
scas
dec
jle
or
dec
fstpt
cmpl
pop
data16
jbe
and
imul
jno
fstpt
and
das
inc
je
xchg
jbe
mov
lods
fstl
stos
outsb
leave
lret
push
lret
adc
push
push
loop
and
test
push
adc
xchg
mov
cmpsl
shrb
sub
mov
imul
dec
push
lret
lcall
and
daa
pusha
cmp
or
xorl
mov
in
mov
test
xchg
or
push
dec
test
mov
jo
call
rclb
ljmp
sbb
mov
xchg
adc
pop
fwait
and
leave
fisubrs
xchg
fucomp
lods
scas
outsb
movsl
xor
mov
adc
push
adc
adc
xor
gs
fildl
cmpsb
stc
adcb
clc
xchg
jne
out
les
adc
imul
fs
mov
add
add
xchg
sbbb
mov
adc
push
xchg
jbe
sahf
out
in
sbb
mov
inc
lods
push
pop
xor
fsubrl
fcompl
scas
mov
mov
mov
pop
mov
xor
and
pushf
ud0
push
adc
lret
mov
lea
lcall
cltd
xchg
add
pop
add
adc
xor
dec
xchg
mov
dec
imul
sti
add
cmc
inc
inc
in
cmp
push
add
ja
sub
cmpsl
je
or
jae
adc
mov
clc
dec
addl
or
loope
cmp
cmpsb
or
push
push
int3
fs
adc
push
js
mov
inc
call
jge
cmp
cmpsl
inc
mov
mov
add
stc
repz
ss
push
dec
dec
or
jl
pop
pop
insb
mov
add
sbb
popf
or
loop
lock
push
incl
out
push
popf
and
nop
mov
in
inc
mov
mov
leave
call
ds
mov
inc
push
fbld
outsl
fisubl
shlb
sahf
jno
xchg
sbb
ficomps
mov
jns
out
shrb
cmp
lods
push
lea
xchg
push
ret
xchg
and
and
mov
fs
sub
sarl
ffreep
mov
stc
adc
adc
lret
mov
xlat
adc
cld
and
mov
jb
out
test
and
sub
das
setae
enter
insb
shll
test
sbb
sahf
jne
adc
jno
outsl
jb
test
cli
clc
clc
xchg
enter
cmp
data16
jl
testl
pusha
and
std
push
mov
ss
je
sarb
jae
push
cli
mov
or
loopne
cmp
das
cmp
pop
lcall
aas
and
cmp
jb
shr
push
dec
fisubrl
mov
mov
std
xchg
pop
outsl
mov
jbe
sar
fdivs
mov
pop
push
loop
cmp
imul
xchg
and
mov
pop
adc
mov
sti
mov
daa
gs
add
loopne
outsb
or
ficoml
pop
sub
or
idivb
loop
mov
pop
call
pop
xor
inc
dec
rcll
jmp
and
stos
xchg
loopne
adc
mov
int
jae
adc
mov
aas
inc
int3
sub
sub
outsl
outsl
lods
int3
jl
or
xor
aam
aaa
xchg
dec
push
sahf
jp
push
es
js
sub
mov
xchg
dec
dec
add
mov
and
arpl
jbe
adcb
repz
andb
sub
stos
sahf
insl
inc
outsl
mov
ret
pop
imul
in
adc
push
push
insl
jno
in
lods
jmp
cmp
mov
leave
xchg
push
push
enter
or
xor
xchg
sbb
sarb
xchg
pusha
inc
test
in
sbb
inc
out
sbb
bound
jne
daa
ja
enter
adc
cltd
fdivrl
mov
pop
pop
outsb
es
stos
xlat
imul
sbb
xchg
test
and
xor
jmp
enter
out
in
sbb
xchg
or
mov
stos
sarb
inc
popa
outsl
lods
push
xor
push
pop
sub
sar
lods
add
ret
int
fildl
or
and
ds
or
or
or
je
jmp
aaa
push
adc
int3
fldl
mov
in
xor
fwait
and
xor
stos
pop
sbb
test
jg
out
cmp
sbb
push
sahf
pop
lahf
mov
repz
inc
push
pop
mov
loopne
adc
xor
addr16
das
sar
add
into
mov
fists
push
lret
xchg
hlt
sub
jge
das
or
dec
int
mov
push
cmp
lds
xchg
dec
pop
pop
adc
das
cli
add
out
and
cli
push
jo
lret
inc
es
es
sbb
cmp
jge
loope
mov
leave
outsl
cmp
mov
lret
xor
out
lret
je
xchg
cmpsb
test
mov
sbb
inc
in
cmp
mov
test
mov
cmp
out
dec
ds
add
fdivrs
xorb
outsl
mov
sti
mov
add
add
add
lock
inc
arpl
xchg
fs
pop
popf
pop
fdivr
push
sbb
or
pusha
lret
mov
add
or
xlat
or
mov
push
pop
sub
test
inc
xor
mov
test
mov
push
xchg
fsubl
add
popf
jmp
mul
iret
int3
test
lret
fsubl
fwait
jae
dec
or
mov
jb
aaa
mov
push
push
inc
dec
sub
adc
inc
sub
enter
ja
inc
adc
lods
or
jnp
dec
pop
aas
inc
jmp
into
fildl
in
inc
pusha
jae
popa
cmc
repz
dec
je
jmp
pop
adc
js
mov
in
nop
mov
shll
xor
fdivl
aad
xor
aaa
test
dec
dec
pushf
pop
hlt
lea
ljmp
push
outsb
dec
sahf
aam
mov
idivb
xor
adc
jecxz
sub
or
sub
mov
mov
dec
push
fadd
mov
mov
bound
xor
mov
dec
mov
jmp
jo
repnz
adcb
aad
pop
icebp
cli
and
jne
sbb
xchg
out
xor
pusha
pop
ret
inc
enter
lods
ror
inc
push
inc
pop
lcall
insb
mov
jne
sub
dec
inc
cmpsb
scas
cltd
xchg
adc
or
xchg
push
add
push
push
push
or
inc
outsl
stc
daa
or
outsb
push
inc
push
jmp
xor
nop
pop
pushf
subb
and
push
aaa
mov
daa
sub
es
or
adc
outsb
mov
cs
lea
adc
xchg
jge
xchg
outsl
into
xchg
ljmp
jae
adc
shll
xor
orb
fs
jno
mov
push
mov
jo
inc
xlat
push
packuswb
std
out
jle
pop
int
xchg
ds
sbb
fmuls
test
loop
dec
or
xchg
lret
jecxz
icebp
lds
xor
push
test
sub
js
dec
arpl
pop
add
loop
jg
int3
shrb
and
jno
push
insl
aas
mov
cmpsl
enter
push
or
pop
stos
lret
fprem
fmuls
mov
gs
jbe
scas
push
cmp
or
inc
jb
mov
mov
sti
xchg
inc
repnz
in
int
adc
fs
xchg
jbe
jp
add
push
mov
cmp
cmp
in
dec
repz
push
inc
pop
std
jle
xor
addr16
mov
dec
mov
xor
push
sbb
mov
dec
test
jae
shlb
and
dec
add
sbb
or
insb
push
pop
push
sub
aas
loope
cmp
pop
push
andl
lret
popf
and
daa
push
dec
jnp
sub
arpl
int
loop
cmp
mov
mov
mov
sub
or
xchg
sar
out
pop
xor
mov
sahf
cmovns
mov
jae
jns
jne
loopne
je
and
and
or
shlb
int3
sub
loopne
pop
mov
push
fsubrs
pminub
test
inc
pop
sub
aaa
out
push
push
fwait
dec
sti
pop
blcic
pop
test
hlt
sub
push
sub
xchg
xor
dec
imul
cli
inc
xor
sbb
mov
popa
ja
icebp
cmp
int3
int3
inc
cmp
sbb
jnp
das
adc
mov
jne
mov
data16
insb
andb
or
mov
jge
cltd
fcmovb
push
mov
popl
stos
push
jb
lds
and
mov
pop
cwtl
in
cmp
stos
ficoml
les
and
jmp
push
addr16
pop
mov
jnp
mov
adc
enter
or
xor
push
mov
stos
adc
and
shll
outsl
clc
xchg
push
sub
les
jae
xlat
lock
loope
nop
popf
cmpb
mov
fwait
pop
push
fistpl
mov
movl
shl
cmp
scas
lea
popa
mov
loop
ficompl
xor
xchg
je
pop
dec
in
ret
mov
xchg
stos
popf
cmpsl
jmp
pushf
sbb
jbe
cld
and
aad
nop
jns
lret
ret
cmc
in
ljmp
cmp
nop
jae
push
out
adc
icebp
dec
and
jg
rol
fsts
cmp
ficomps
loop
pop
mov
rorb
or
lcall
dec
mov
scas
and
outsl
rcr
xchg
cli
jne
js
mov
out
lods
cli
fwait
push
mov
cmc
mov
outsl
fistps
cmp
adc
push
adcl
loopne
jl
loop
inc
dec
hlt
and
dec
xlat
sub
mov
xchg
sub
fbld
add
push
loopne
xlat
das
and
icebp
icebp
inc
inc
int
fdiv
rcll
imul
leave
lock
arpl
and
jne
cmp
ja
jecxz
mov
mov
insl
jno
pusha
mov
fcomip
xchg
outsl
data16
jae
nop
pop
ja
add
xor
xor
push
jl
lahf
push
shrl
add
xchg
fsubrp
and
ss
pop
push
les
jne
jae
roll
sbb
push
cmp
mov
jle
jge
les
clc
jne
leave
push
cmp
and
push
mov
std
jg
stos
sbb
jl
push
clc
outsb
pop
loopne
push
inc
mov
mov
jnp
mov
inc
or
push
xchg
rorb
jle
outsl
cli
rorb
and
sbb
js
add
dec
xchg
pushf
xchg
or
jmp
mov
nop
lods
rorb
lds
lret
push
sbb
add
mov
adc
lock
outsb
ret
sbb
pop
mov
sbb
stos
repz
mov
fcomps
out
clc
xlat
es
push
mov
xlat
push
pop
xchg
in
icebp
stc
push
adc
loopne
dec
js
and
mov
or
sub
xorb
loopne
push
jmp
xchg
stos
sbb
fsubrs
out
mov
and
xorb
push
add
xor
les
cmp
pop
stos
push
js
repz
rcr
lds
sbb
or
test
cmp
jle
push
jmp
mov
dec
adc
inc
push
jne
push
lret
mov
mov
push
sbb
adc
leave
fcomps
pop
jno
inc
mov
clc
stos
pop
imul
pop
ret
into
push
imul
add
call
je
adc
sbb
pushf
push
sbb
mov
inc
mov
das
in
sbb
cld
cld
ds
inc
dec
mov
testb
xchg
mov
icebp
insl
jp
or
push
and
mov
xor
mulb
pop
cmp
push
lea
stos
test
in
mov
scas
dec
ficomps
cmpl
xchg
mov
mov
ss
add
leave
mov
popf
sbb
leave
popa
inc
or
addb
sbb
fnstcw
push
sbb
push
imul
add
repnz
lahf
fldcw
mov
mov
sbb
js
sub
push
mov
mov
adc
test
ret
mov
or
sbb
lea
inc
aas
jmp
or
dec
jne
xlat
xchg
in
and
pop
mov
adc
cwtl
cmp
and
add
int3
inc
xchg
nop
sub
outsl
fdivr
aaa
enter
xchg
cmc
jg
xchg
mov
xchg
movsb
push
mov
shlb
ljmp
mov
inc
nop
ljmp
pop
push
ja
mov
xor
pushf
xchg
ret
loope
mov
xchg
push
mov
cmpsl
xchg
divb
pop
sbb
pop
stos
jle
jmp
mov
sub
cmpsl
shlb
fsubrl
dec
jmp
jp
jnp
pop
ficomps
nop
mov
cmpsl
in
mov
lret
xchg
pop
dec
imul
fistpl
mov
xchg
js
push
inc
test
jp
sbb
cmp
ss
sub
jne
pop
lahf
scas
loop
add
push
insb
add
jne
dec
dec
fs
xchg
fucomp
jp
sbb
dec
add
bound
xor
cli
out
sbb
leave
dec
inc
xor
testb
and
inc
jb
jne
push
sti
and
nop
adc
xchg
sub
test
jb
mov
and
mov
test
nop
xor
aas
pop
mov
imul
sahf
jb
imul
sub
es
incl
and
xchg
ficoms
or
stos
xchg
or
pop
pop
inc
sub
insb
inc
mov
pop
push
adc
lock
aam
bound
or
dec
out
mov
mov
or
mov
dec
sub
mov
decl
pop
ds
jp
hlt
imul
stos
adc
mov
popa
push
push
shl
xor
mov
push
mov
hlt
xchg
xchg
add
sub
fisttpl
roll
rcr
adc
adc
cli
push
mov
ljmp
inc
mov
inc
push
rorb
pop
fistpll
push
mov
jp
add
test
add
inc
movsl
std
cmp
jge
bound
popa
imul
jae
cli
rcl
fstl
add
dec
int
mov
xor
lret
lods
outsl
jecxz
jo
cltd
ja
nop
lret
repz
pop
inc
push
add
aad
jmp
mov
daa
lds
out
je
mov
dec
mov
loop
insb
lcall
mov
inc
mov
pop
cld
sbb
jl
pop
addl
lock
mov
loopne
in
adc
xchg
jns
iret
xchg
dec
les
fnstcw
cmp
dec
aam
outsl
cmpsl
adcb
jl
fs
adc
repz
in
push
lock
sarl
fs
xlat
ds
push
push
pop
dec
dec
jb
or
aad
rcr
call
movsl
pop
call
testb
sub
mov
or
jp
enter
pop
ret
sub
push
std
adc
xor
scas
enter
mov
lret
dec
mov
lahf
cmp
adc
mov
mov
xchg
and
in
mov
and
or
movsb
push
dec
setae
xorl
les
push
adc
mov
aam
sub
jnp
and
push
movsb
dec
adc
pop
cmp
mov
es
dec
data16
sub
outsl
adc
and
xchg
mov
push
enter
lahf
jb
rorl
dec
sbb
xor
jge
sbb
aas
and
and
cmp
andb
mov
add
int3
jecxz
repnz
leave
int3
repnz
mov
dec
pop
cmpsb
lods
ficoms
icebp
inc
lods
pop
loop
pop
and
mov
mov
aas
cmp
and
lahf
shll
xor
xchg
cmp
push
pushf
xchg
push
mov
mov
inc
ss
push
push
and
mov
in
sarl
test
xlat
lods
repnz
fstpl
dec
mov
roll
jns
dec
inc
push
int3
push
insb
xchg
xor
stc
dec
sub
lods
out
sub
and
jl
cld
jns
shrl
fwait
int
mov
xchg
add
les
sti
pop
imul
jns
stc
push
and
and
add
out
cmp
aad
pop
mov
rolb
add
aaa
mov
shrl
fidivrl
mov
mov
xor
sub
popa
mov
ds
sub
lods
inc
mov
push
lods
pop
xor
loope
ja
pusha
daa
scas
std
cli
fimull
and
notb
xor
aad
pop
dec
in
push
dec
push
ss
pop
data16
and
mov
push
jno
ror
sbb
repnz
and
pop
scas
testb
aam
dec
rcr
int3
cmp
out
and
push
orl
fbstp
in
lods
pop
xchg
cmc
dec
mov
pop
mov
mov
pop
mov
mov
lds
outsb
mov
mov
ljmp
or
push
inc
outsl
xorl
sahf
push
xchg
sar
xor
xor
rolb
xor
adc
push
repnz
es
xchg
xchg
add
xchg
jmp
xchg
xchg
or
xchg
xchg
sub
xchg
lea
scas
cmp
test
jne
es
dec
xchg
je
mov
imul
push
fnstcw
fcmovu
cli
adc
mov
push
ljmp
clc
es
sub
inc
subl
or
push
sub
jp
dec
add
hlt
inc
into
adc
push
mov
inc
xlat
xchg
movsl
jle
add
or
filds
or
fisttpll
jns
push
repz
inc
add
pushf
dec
fs
ja
or
dec
xchg
mov
aad
aad
mov
inc
ss
aas
fidivs
add
pusha
fsts
pop
cmp
movsb
inc
bswap
in
mov
cmc
sbb
jge
test
xchg
icebp
idivb
or
cs
das
or
rep
xchg
out
adc
outsb
inc
mov
lret
and
xbegin
push
lods
rolb
lock
mov
pop
pop
in
shlw
mov
xchg
cmc
pop
sub
in
rcrb
loope
cmp
and
ja
push
out
stos
insb
call
push
out
xchg
inc
ret
jbe
mov
jmp
sti
popa
xlat
push
shrl
das
mov
dec
jg
add
aaa
fistpl
mov
jne
inc
mov
or
or
das
cmp
jmp
push
jno
inc
push
and
arpl
inc
enter
jnp
jnp
popa
rclb
sbb
push
pop
inc
leave
scas
push
xchg
sbb
mov
push
call
imul
mov
je
jo
std
mov
iret
and
sub
xor
jp
sub
add
lcall
outsl
aas
ss
lds
add
lcall
out
cmp
sub
adc
cs
out
into
xchg
sbbb
push
xlat
push
mov
mov
mov
incl
cltd
mov
popa
out
add
or
adc
fisttpl
jo
shrl
mov
outsb
mov
clc
jp
lcall
xchg
sub
lea
inc
shll
or
pop
jp
insl
fstpl
pop
mov
push
pushf
or
into
cmp
test
rcrl
adc
bound
jecxz
add
mulb
sub
inc
loopne
movsb
addr16
cli
popa
or
push
ret
negb
std
or
xchg
pop
or
push
push
mov
sbb
lock
mov
in
inc
xchg
and
sub
xchg
cmp
scas
mov
mov
outsl
daa
cwtl
rcl
mov
leave
call
lods
dec
mov
jge
inc
jo
add
fistps
into
or
inc
mov
add
lret
imul
xchg
mov
shll
ljmp
movsb
pushf
test
adc
mov
jns
inc
stos
lret
jl
jbe
bound
cmp
push
jp
sbb
xor
push
and
inc
andl
push
push
mov
mov
cmpsl
bound
push
sbb
stos
cmpsl
sub
push
loop
xchg
scas
ss
jo
mulb
or
xor
xchg
cmpsb
cltd
cltd
inc
arpl
out
loopne
xor
cmp
mov
add
push
push
ss
stc
push
stc
bound
in
repz
mov
inc
not
ja
addr16
rol
or
mov
test
pop
cmp
sbb
ss
xor
mov
ret
sub
jp
pop
stos
sar
inc
sti
pop
push
ja
std
cs
ss
rorb
lret
js
ljmp
sub
xor
shrb
repz
sbb
in
cmpsl
cmovp
push
movsb
jbe
or
jmp
loop
or
cmp
sbbl
repnz
pop
push
mov
inc
movb
xor
hlt
fsubrs
dec
aas
inc
mov
outsl
xor
or
into
push
mov
inc
and
mov
add
cmp
in
mov
jge
or
push
pop
cwtl
daa
loop
mov
aad
xchg
movsb
scas
lds
movsb
mov
fisttps
pop
sub
xor
mov
pop
mov
add
nop
out
out
xchg
loope
jae
push
popf
btc
xlat
mov
rcrl
ds
mov
sub
mov
shlb
lods
std
push
popf
enter
mov
dec
cmp
xor
cwtl
sbb
jne
ret
rorb
jp
roll
int
pop
es
pop
push
push
int
jb
sbb
lods
rorb
jbe
pushl
mov
dec
push
popa
cmc
inc
inc
or
daa
orl
lea
and
xchg
lea
dec
lock
cmp
test
scas
cmp
mov
ret
aad
inc
mov
in
add
inc
lds
jns
push
jno
loopne
sbb
jbe
test
sti
pop
sbbb
adc
xchg
les
add
addw
push
mov
jecxz
cmp
in
adc
push
dec
ror
fnstenv
inc
and
adc
xchg
push
cmp
mov
push
xchg
dec
jp
aaa
jb
ret
jb
and
xlat
pop
in
add
mov
or
scas
into
in
daa
dec
jnp
add
aaa
pop
mov
mov
dec
xchg
outsb
cmp
dec
test
fnstenv
jns
pop
inc
push
xor
test
test
insb
mov
push
and
xlat
les
pop
jecxz
adc
in
loop
fidivrs
mov
call
sbb
adc
sbb
inc
imul
pop
inc
test
push
xchg
cmp
jge
ss
and
insl
flds
and
sti
and
fs
clc
mov
std
cmc
pop
in
mov
add
pop
jne
repnz
jnp
pop
in
mov
add
or
sub
or
std
imulb
stc
inc
sbb
push
and
pop
mov
aad
fistl
mov
adc
pop
dec
and
aam
cmp
movsb
fwait
xchg
jno
mov
fdivl
xor
imul
cwtl
sarb
popa
fisubrl
hlt
mov
leave
xchg
mov
in
aas
pushf
leave
mov
push
pop
fistpll
mov
jl
int3
aaa
sbb
jle
mov
jo
sbb
arpl
mov
aas
ds
sarb
fcompl
std
ja
mov
dec
div
sbb
test
cld
clc
adc
movsl
xor
lea
loop
dec
push
xor
mov
inc
jnp
icebp
jne
int3
mov
jge
pop
and
ficoms
mov
pop
jae
rcll
and
jbe
lret
in
adc
jne
add
pop
mov
and
mov
mov
icebp
or
lods
out
inc
out
dec
les
ret
cmp
and
push
add
adc
or
jno
enter
pop
fstpl
jmp
adc
add
pop
test
fisubl
ljmp
lahf
stc
push
mov
out
mov
fnstenv
cmpsl
mov
fadd
mov
lock
cmp
bts
xchg
add
xor
jae
add
inc
ja
jns
inc
int3
dec
les
mov
mov
dec
xor
aam
dec
sarb
in
dec
ljmp
sahf
cmp
in
jno
addb
jb
xchg
mov
repz
push
jp
push
icebp
mov
dec
jo
jmp
fidivl
repz
mov
xchg
mov
jb
rclb
fs
and
or
push
fs
scas
stos
mov
outsb
stos
lret
cs
mov
jo
or
push
add
lret
testb
jbe
scas
adc
cmc
xor
fwait
xchg
adc
shrl
hlt
push
cld
insb
jbe
mov
pushf
dec
inc
inc
jl
lods
lods
cmc
jge
shll
int3
mov
test
jno
fistl
addb
clc
aas
pop
jg
out
mov
enter
cli
psllw
shrb
jmp
sub
in
movsl
fsubrl
mov
je
pop
sub
jle
push
cs
fnstsw
or
and
sub
cmpl
adc
pop
clc
pushf
dec
call
clc
xchg
add
fs
jmp
pop
mov
sahf
test
testb
jo
rcrb
out
adc
frstor
mov
shl
xor
dec
fisubs
movsl
cmpsb
jmp
in
dec
ja
iret
and
scas
sub
inc
enter
xor
cmp
xchg
xchg
addr16
mov
mov
mov
dec
jecxz
subl
add
jle
mov
push
nop
mov
xor
or
rcll
jmp
decl
das
jg
mov
inc
mov
xor
imul
add
jge
sbb
lret
imul
and
mov
add
outsl
jo
jnp,pn
enter
lods
sbb
mov
push
dec
cmp
gs
xchg
rol
imul
sub
test
dec
jg
lcall
sarl
scas
add
xor
add
jns
or
or
mov
sbb
cltd
sub
loopne
mov
in
inc
sahf
shll
fiaddl
aad
out
xorl
xchg
inc
fwait
in
int3
push
loopne
or
or
xor
sbb
mov
cvtdq2ps
loop
sbb
mov
dec
rorb
mov
stos
dec
sub
jecxz
and
and
outsl
andb
xchg
lea
dec
cmp
add
cltd
test
nop
test
std
pushl
cmp
popf
fdivrl
enter
mov
js
sub
sub
adc
mov
dec
cmp
add
sbb
mov
cmpsb
dec
in
fs
es
mov
pop
js
or
mov
mov
add
mov
stos
ss
test
xchg
pop
push
in
or
jge
ss
pop
mov
jne
shl
call
sbb
popa
pop
loop
insl
bound
or
je
fs
xor
lahf
jb
mov
add
repz
data16
jns
test
mov
lods
into
jb
out
movb
adc
xchg
inc
imul
loop
clc
arpl
cmpsb
push
icebp
or
jge
lds
cli
bound
mov
je
inc
sarb
inc
fxrstor
loop
je
mov
mov
sbb
mov
test
add
dec
cmp
dec
pusha
test
gs
sub
outsb
fs
loope
sbb
leave
and
jle
and
fcmovb
inc
jne
add
pop
mov
insl
rclb
sbb
sub
js
jp
cmp
call
outsb
mov
add
jo
xor
adc
cmp
fsubl
add
arpl
push
gs
sbb
mov
lret
push
push
lea
sahf
or
push
sti
mov
adc
fisttpll
mov
xchg
daa
add
test
int
idiv
repz
mov
lods
adc
fisttpll
jmp
dec
cmp
sub
and
or
or
imul
ds
movsl
fwait
or
stc
xchg
jae
stos
test
cmp
je
test
and
andl
mov
clc
in
das
mov
and
subl
fucom
int3
mov
mov
sub
and
mov
and
push
repnz
pop
ja
data16
lds
dec
test
pushf
and
pop
pop
rorb
cmp
jecxz
add
ficoml
ret
sub
orl
ret
in
mov
dec
in
or
xlat
jnp
sbb
out
pop
scas
mov
aaa
mov
rol
mov
sub
fisttpl
inc
mov
into
rolb
push
jecxz
js
cmp
lods
mov
adc
and
mov
movsl
mov
lret
sti
stos
int3
and
mov
xlat
push
push
add
nop
test
dec
jmp
fisttps
and
enter
in
fcomi
testb
lock
jb
ret
mov
dec
test
notb
jo
xor
add
jp
cmp
movsb
xchg
fmulp
cmpsl
xchg
test
mov
pop
aaa
inc
ret
or
loop
enter
pop
cld
in
sub
hlt
mov
fwait
mov
pusha
pop
jl
mov
push
add
js
cld
fildll
mov
dec
insl
aam
cmp
xchg
nop
xchg
inc
stos
xchg
pusha
in
arpl
les
aas
push
pusha
mov
mov
mov
mov
push
sbbl
std
adcb
std
cs
popa
mov
out
subl
sbb
data16
movsl
std
inc
pushf
repz
test
push
pop
lret
or
xor
mov
shll
sbb
push
icebp
cmpsl
mov
cmp
rorb
mov
push
fwait
dec
mov
mov
mov
pop
scas
in
mov
call
arpl
loopne
insb
cmc
jb
cmc
or
lea
inc
adc
lret
in
jge
xchg
test
adc
pop
xchg
mov
pop
rep
les
fildl
sub
nop
cmp
insl
icebp
mov
in
mov
pushf
xlat
mov
adc
push
xchg
sbb
data16
ss
call
scas
cwtl
loope
sub
stos
int3
or
jbe
ljmp
cmp
push
jg
mov
inc
sbbb
cmp
mov
pop
push
je
mov
adc
push
sub
inc
cld
jge
adc
cmpsb
sub
xchg
and
and
je
into
pop
cmp
mov
mov
test
push
pop
or
add
sbb
xchg
vphaddbq
push
shll
jno
or
jecxz
sub
fiadds
or
mov
cmc
addr16
and
jno
stos
out
addb
dec
les
mov
jle
adcl
push
pop
jns
adc
popf
es
gs
jb
mov
cmp
loope
stos
outsb
cmp
sub
pop
scas
negl
mov
dec
iret
mov
mov
dec
fcmovnbe
push
add
popa
xchg
hlt
shlb
mov
std
fmuls
stc
addr16
imul
xor
mov
mov
adc
mov
adc
lcall
sbb
stc
mov
ljmp
pop
xchg
std
jle
pop
cmpl
xchg
mov
mov
add
in
jo
call
jg
dec
in
in
fcos
repnz
arpl
arpl
fldenv
int3
das
jl
push
sbb
sarl
fistpl
sbb
adc
cmpsl
mov
cmp
mov
mov
jge
mov
cmp
xchg
jp
call
int3
sbb
es
mov
shl
hlt
popf
popf
outsb
pop
scas
ss
mov
shr
imul
add
gs
inc
push
mov
sbb
xchg
xchg
pop
arpl
jp
call
std
stc
outsl
pop
imulb
mov
test
sbb
sub
mov
inc
inc
push
jg
out
xor
test
call
mov
enter
dec
lret
add
aaa
add
mov
mov
pop
rcrb
mov
cmp
in
dec
rcr
push
mov
fnsave
xchg
popa
out
mov
in
testl
out
inc
stc
daa
cmc
xchg
adc
sub
aam
mov
xchg
cmp
cs
shll
adc
sub
inc
int
mov
mov
xor
mov
mov
shrb
or
xor
mov
push
xchg
pop
int3
xor
ficoml
xchg
rorl
push
mov
lods
mov
mov
int
and
mov
lock
push
shlb
sbb
cmp
out
xor
insl
push
sbb
dec
loope
lret
in
call
jnp
icebp
cmp
imul
xchg
aad
shll
ja
mov
sub
xchg
aas
sahf
fcoml
enter
std
push
cs
dec
fstl
les
lods
cmp
pop
jmp
xor
cli
push
int
mov
inc
xor
mov
test
sbbb
xor
adc
mov
les
push
sti
push
cwtl
pushf
jmp
shrl
xor
push
pop
jbe
add
xchg
mov
rclb
adc
ret
jge
dec
in
test
push
mov
mov
inc
jae
aas
lods
sbb
and
bound
push
jns
repnz
aaa
mov
or
loopne
cmpb
push
cmp
orb
cmc
into
js
hlt
clc
addr16
and
hlt
and
into
inc
out
mov
jns
cmpsb
push
push
aad
pop
std
addl
sbbl
ret
sahf
lods
lock
jmp
push
inc
test
dec
push
or
cli
push
lock
fcoms
cmpsb
jnp
ss
pop
enter
mov
loopne
icebp
push
pop
cli
popa
enter
jmp
push
or
ret
jae
add
sub
in
dec
sti
adc
cmpsl
or
clc
aam
shlb
jecxz
add
scas
sbbl
pop
in
sarl
dec
adc
inc
subb
cli
xor
cs
xchg
xchg
dec
mov
or
push
add
repz
dec
sbb
xchg
pop
jg
test
cmp
jb
test
js
cmp
aad
test
inc
jg
ljmp
push
push
sub
xchg
shl
sbb
pop
mov
ljmp
decb
sti
mov
subl
add
test
adcb
mov
dec
mov
sbbb
xchg
in
ret
data16
movsb
sub
ret
into
outsb
mov
push
movsb
inc
sub
cmpsb
jecxz
jo
xchg
mov
push
loop,pn
out
mov
jne
cmp
das
arpl
adc
gs
xlat
adc
push
aad
push
mov
cld
add
pop
aam
xchg
jge
int3
pop
sbb
test
pusha
dec
aad
jg
aam
stos
jb
jl
adc
or
pop
popa
adc
cltd
pushl
faddl
adc
sub
fs
out
cmpsl
or
inc
cmp
and
pop
inc
mov
icebp
lds
or
sub
sub
stc
out
loop
add
nop
dec
xor
inc
cmpsl
cmp
push
add
cmp
pop
imul
cli
js
loopne
fisttps
pop
add
sub
mov
mov
cmp
mov
cmc
lret
pop
arpl
mov
shlb
gs
scas
inc
inc
mov
fbstp
inc
pop
loop
or
rorl
rcr
mov
arpl
call
mov
add
leave
mov
cli
lcall
outsl
pop
bound
loope
add
jle
jp
test
ret
addl
rorl
cmc
daa
lea
imul
xchg
sub
jnp
mov
jl
fwait
dec
sub
cs
pop
cmpsb
ja
lock
inc
addr16
ffreep
fldt
sbb
cmp
std
std
loopne
dec
sbb
mov
stc
push
and
and
xchg
jns
js
cmp
xor
pushf
lahf
gs
movsl
mov
mov
mov
mov
ror
loop
mov
lods
fdivrs
mov
sbbl
cwtl
in
pop
adc
sbb
adc
lods
sbb
lret
test
aad
mov
orb
sahf
inc
adc
sbb
out
into
mov
sbb
xchg
sbb
stos
push
es
lods
fwait
and
inc
dec
cld
or
int3
addr16
mov
movsb
dec
push
push
stos
pop
sbb
mov
fmulp
and
mov
repz
mov
scas
add
rorb
je
xchg
sbb
clc
and
pusha
ja
cs
xchg
cmpsb
inc
out
es
dec
outsl
mov
sbb
or
mov
pop
mov
js
jmp
dec
cld
pushf
jne
xor
jns
jecxz
stc
mov
adc
push
push
insb
stos
ror
clc
js
mov
sub
loope
push
fidivl
push
lds
xchg
mov
sbb
divb
and
and
cs
subb
lcall
sets
ficoms
fistpll
xor
xor
aas
pop
pop
imul
mov
and
das
mov
xor
push
mov
sbb
lods
xlat
fnstcw
lods
cmp
in
push
rcrl
add
or
sbb
cmp
out
lods
jl
mov
xlat
jbe
fisttpl
mov
test
sub
inc
movsl
rcll
cmpsb
xor
fdiv
cmpxchg
movl
leave
in
adc
arpl
mov
lcall
ret
subb
dec
jp
pop
sahf
push
in
loop
sbb
mov
mov
add
mov
adc
cmp
adc
mov
iret
scas
ds
ljmp
fwait
mov
pop
jmp
repnz
adc
call
mov
add
int
movl
push
dec
test
jmp
jl
scas
rclb
push
jg
sbb
push
lds
pop
int3
lahf
call
repz
lock
pop
dec
fimull
sahf
lods
mov
lcall
fnstcw
pop
dec
mov
repz
sub
pop
push
call
inc
and
out
ret
lahf
stc
sub
shll
cwtl
popf
in
mov
cmpsl
mov
movsl
stc
lock
addr16
xchg
into
mov
pop
dec
mov
scas
xor
pop
and
shrb
adc
mov
loope
inc
std
push
mov
jl
arpl
mov
add
lcall
stos
push
sub
mov
xchg
adc
aad
idivb
inc
push
pop
aas
pop
mov
cld
jb
lds
pop
imul
inc
movaps
mov
or
and
enter
shll
lret
xchg
cld
xlat
andl
sbb
mov
scas
jmp
les
add
pusha
sar
cs
inc
stc
mov
jae
daa
stos
and
popf
xchg
cmp
lods
rcrl
fisubl
fisttps
mov
mov
ficompl
dec
ret
pop
test
jns
movsl
mov
fucomip
sub
test
xchg
and
pop
iret
daa
cmp
test
test
and
and
in
dec
jge
imul
dec
push
or
and
popa
loope
add
ds
mov
jno
mov
mov
hlt
pop
lcall
cmpsb
ret
or
xchg
adc
push
cmp
aaa
addr16
inc
mov
mov
je
sub
loope
push
push
xchg
fsubrl
in
cli
shrl
jns
pop
mov
add
sub
je
iret
push
xor
lock
leave
enter
mov
add
cmp
lods
pop
adc
cmp
loopne
pop
jmp
push
push
fidivrs
mov
nop
inc
call
stos
out
push
xor
adc
pop
lock
out
or
jecxz
dec
dec
test
xor
sub
roll
push
fs
pop
or
loopne
call
das
es
and
and
add
test
scas
cltd
fs
rcr
leave
hlt
pop
pop
out
mov
cmc
jecxz
and
pop
rclb
jmp
xchg
pandn
push
lcall
push
call
test
lods
push
iret
cwtl
sahf
lea
cmp
fsubrl
mov
dec
shlb
lcall
jl
add
aam
pop
sub
call
in
mov
and
and
jnp
sbb
pusha
notl
sbb
stos
aam
or
ficoml
cmp
mov
lods
addl
call
shrl
popa
inc
jmp
icebp
and
sbb
test
add
icebp
pop
lea
add
leave
adc
add
js
inc
mov
int3
xor
dec
push
outsb
js
push
xchg
jl
pushl
sbb
iret
icebp
ss
fsubrl
ret
sbb
pop
lods
lahf
cmp
mov
jnp
sbb
ret
loop,pn
inc
out
mov
or
dec
repz
xchg
dec
lods
sti
data16
fcmove
addr16
addl
or
popf
jo
cmp
fsubs
subl
mov
outsl
ficomps
insb
add
jno
push
push
aad
inc
pop
add
outsb
xor
dec
rcl
pop
cli
movsl
sti
xor
pop
outsl
mov
popf
test
daa
jle
sbb
push
or
jb
stos
cwtl
mov
es
xor
cmc
dec
movsb
add
inc
inc
into
aad
xchg
incb
sbb
or
scas
add
and
jo
mov
jnp
rclb
inc
iret
push
pop
jno
sbb
sbb
push
mov
pushf
push
cmpsb
js
push
jbe
xor
nop
and
fs
inc
add
jg
in
jecxz
sbb
sub
popf
jno
xor
mov
adc
loopne
adc
or
fwait
lock
lods
subb
mov
or
scas
nop
pop
cs
test
aad
add
ret
lcall
aam
mov
adc
stos
icebp
movsl
leave
lahf
mov
sub
in
mov
hlt
mov
and
js
add
jo
jle
sub
std
and
aad
xchg
xor
and
mov
sbb
jb
aam
pop
mov
push
cmpsb
push
pop
movsl
scas
dec
rcrb
pop
in
shll
push
jo
push
mov
push
mov
adc
cmp
cmpsb
sbb
xor
cmc
loopne
pop
imul
mov
fs
or
imul
dec
or
inc
inc
jp
inc
bound
mov
jge
xor
sub
pop
cltd
mov
add
popf
inc
jbe
out
cmp
mov
push
fsub
aam
xchg
pop
sti
inc
xchg
push
mov
xchg
lock
int3
mov
scas
adc
jge
or
loopne
push
mov
jb
test
cmp
inc
inc
pop
jecxz
cmp
adc
sub
push
cmc
push
lds
mov
fstpt
test
mov
xor
and
fdivr
and
out
test
sub
xchg
inc
in
pushf
addb
cmp
sbb
lock
repnz
or
xor
pop
xchg
xchg
cwtl
into
test
mov
nop
js
lds
xchg
or
inc
xor
daa
test
sbb
add
cltd
pop
pop
repz
dec
cmp
movsl
mov
sub
or
rcr
loop
fiadds
divb
push
data16
mov
mov
pusha
in
out
daa
dec
ficomps
and
xorb
mov
adc
shll
push
pusha
iret
loop
pop
out
test
hlt
fwait
in
clc
mov
fstps
jmp
pop
mov
cmpsb
fmulp
mov
movsl
loopne
fdiv
pushf
repz
mov
mov
in
cmp
sarb
aad
sti
cmpsb
cmpsb
jecxz
jo
mov
and
aaa
dec
and
mov
sahf
pop
testl
adc
outsb
pusha
and
gs
jle
pop
xchg
aam
ss
andl
arpl
pop
sub
lock
scas
test
inc
pop
mov
out
cltd
repz
cmp
mov
xor
ss
inc
jl
cmp
sub
mov
test
mov
mov
add
out
ja
repz
fstps
mov
sbb
enter
pusha
sub
test
cmp
adc
adc
sub
mov
shrl
dec
hlt
decl
inc
movsb
dec
mov
in
and
add
xchg
fwait
and
cwtl
int3
outsb
outsl
addr16
fcompl
arpl
std
cli
cld
or
shlb
and
imul
sub
insb
outsl
or
outsl
add
add
jp
ret
xlat
sub
fiaddl
bound
negl
stos
inc
ja
sub
or
les
mov
sub
mov
xlat
add
dec
fldl
push
mov
arpl
out
dec
inc
mov
shr
add
push
jl
adc
gs
or
and
xchg
dec
and
adc
jge
shll
loope
fcoml
mov
mov
mov
sub
mov
fstpt
dec
leave
dec
jle
push
in
sbb
outsb
lods
jo
xchg
mov
aad
and
and
scas
adcb
fwait
adc
jb
pop
xor
jne
cmp
sbb
aad
add
test
dec
cmp
or
xor
pop
jbe
int3
in
and
push
sbb
adc
jno
or
inc
out
jge
sahf
aaa
std
push
inc
add
xchg
pop
mov
mov
xchg
fdivrs
cli
aas
lock
loopne
fildl
mov
and
out
pushl
sbb
ficoms
push
outsb
xor
mov
sbb
xor
out
stos
insb
cmp
je
and
or
inc
loop
fwait
push
arpl
cwtl
cmp
sbb
or
int
push
inc
push
jg
in
fsub
push
adc
sub
ja
arpl
cmp
mov
xchg
pop
shr
cmp
mov
push
cmp
lret
lock
xchg
or
adc
adc
and
shll
loope
mov
shl
aad
jp
inc
mov
add
in
cmpxchg
dec
daa
sbb
push
dec
cmpsb
sbb
mov
rorl
add
fldl
pushf
mov
mov
stos
add
mov
scas
notl
clc
dec
dec
testl
test
out
ficoms
add
dec
xchg
insb
sub
push
das
inc
push
cmp
pop
push
cmp
std
mov
mov
popa
pop
adc
push
jbe
pushf
sub
cld
inc
adc
xchg
movl
repnz
sbb
js
mov
fstl
add
aaa
xchg
cmp
shrb
test
decb
sbb
cmc
and
add
pop
xor
push
int
or
mulb
or
pop
hlt
jnp
mov
std
jo
out
hlt
dec
and
inc
aas
not
out
add
xor
dec
lahf
mov
jecxz
adc
jle
mov
jl
xchg
mov
in
push
adc
fs
inc
push
orl
sbb
cs
and
xchg
inc
out
outsl
pop
inc
enter
mov
dec
les
fsts
inc
test
dec
xor
sbb
push
hlt
add
sbb
mov
addl
adc
mov
jno
sar
pop
xchg
ficomps
xlat
js
mov
sub
push
mov
mov
mov
sbb
repz
outsl
cwtl
push
js
mov
ret
inc
test
mov
jae
pop
sub
arpl
and
movsl
push
bound
sbb
jno
add
sarb
pop
xchg
mov
xchg
dec
xlat
fists
leave
mov
int
rorl
cmp
out
addr16
jl
movsb
xor
inc
std
clc
jmp
scas
cmc
push
or
push
stos
pop
ret
push
xchg
or
outsl
or
dec
cwtl
sbb
pop
add
cmc
je
pop
jmp
mov
mov
imul
scas
sub
lock
das
cmp
jle
inc
lret
push
pusha
ds
pop
js
push
fiaddl
fs
add
popa
jmp
test
adc
push
jbe
cltd
in
sub
test
ds
nop
sbb
mov
iret
jns
jle
add
in
sbb
pushw
cmp
dec
push
xchg
sub
xchg
decl
cmp
sub
cltd
xchg
idivl
fwait
inc
mov
sub
cwtl
mov
pop
pop
arpl
pop
mulb
das
dec
call
mov
push
and
mov
enter
sub
push
jo
push
imul
cmc
or
mov
dec
dec
inc
cmp
movsl
fadds
sub
inc
sub
rcr
leave
in
out
add
push
push
cmpsb
scas
rcr
mov
xchg
nop
sarb
or
or
out
in
xchg
in
jo
cmp
lods
data16
leave
je
push
sbb
or
jbe
repz
scas
std
xor
mov
stos
lock
pop
popf
cmp
andl
push
bound
xchg
sub
into
lock
and
mov
jp
ja
cld
lds
sbb
movl
insb
jns
test
insl
lcall
ficoms
das
pop
ret
push
in
into
outsl
push
inc
cmp
insb
sub
dec
shlb
shlb
xor
ss
repz
dec
xchg
xchg
xchg
lret
mov
and
mov
cmp
scas
in
mov
shl
pusha
flds
sub
jp
daa
aaa
xorl
sbb
repz
xchg
cmc
in
mov
lods
cld
and
repnz
fisttpl
mov
sbb
into
push
push
dec
xchg
mov
iret
push
rclb
test
les
je,pt
inc
addr16
sarb
nop
jo
bound
bound
push
out
mov
xor
jns
out
lds
jns
ret
movsl
loope
insb
mov
lahf
push
add
mov
es
repz
xor
sbb
rcll
inc
das
sbb
sub
push
sbb
outsb
xchg
fwait
rolb
lret
stc
int3
inc
cvtps2pd
add
aad
lret
fcoml
fdivr
mov
ss
int3
ss
and
mov
sarl
loope
sbbl
push
xchg
stos
pop
inc
cli
popa
cltd
mov
inc
lods
pop
scas
xor
xchg
sub
dec
subb
call
rorl
pop
mov
cmp
cmp
jmp
push
inc
mov
es
jae
cli
insl
xor
push
sub
add
push
jecxz
fwait
push
pop
xchg
std
movsb
aaa
jg
dec
mov
xchg
sub
cs
fistl
icebp
rorb
ret
inc
sub
inc
xor
jo
stc
jnp
repz
pop
ret
mov
dec
sub
stos
inc
pop
push
test
dec
mov
cld
push
mov
inc
test
out
ftst
sub
shrb
mov
aaa
xchg
fisttpll
sbb
orl
push
jne
popl
fimull
ds
or
sbb
cmpsb
pop
jns
stos
dec
dec
call
cs
cli
jo
cltd
and
bound
mov
cld
das
call
mov
scas
test
loope
jno
adc
cmp
cmp
lods
sbb
push
cltd
sbbl
mov
mov
sub
pop
sub
ret
pop
popf
mov
xchg
les
lds
sahf
cmp
cld
cmpsl
repnz
cld
jmp
pop
lret
outsl
loopne
mov
mov
scas
jle
add
imul
push
scas
or
and
rclb
sarb
dec
jp
mov
push
add
mov
ljmp
or
adc
mov
sub
pop
mov
push
pop
jecxz
add
push
cmp
scas
mov
pop
addr16
das
mov
cmp
mov
xchg
loopne
push
jno
je
xchg
or
in
cmp
mov
das
cmp
stc
xchg
sbb
shlb
xchg
outsb
clc
mov
bound
push
inc
xchg
out
test
cs
jg
xchg
jnp
js
xor
les
pop
pop
adc
jne
sarb
mov
sbb
or
imul
push
lret
pusha
push
insb
sub
push
leave
cmp
ficomps
ss
lahf
mov
push
fmull
push
inc
jp
ljmp
fcmove
and
xchg
je
jge
and
movsb
into
cmp
mov
ror
jle
fsubs
je
leave
in
or
sbb
push
movaps
mov
push
dec
adc
out
mov
pusha
mov
repnz
inc
test
sub
xlat
jmp
cwtl
ret
jecxz
mov
cmp
inc
push
lret
dec
push
movsl
mov
and
mov
sti
push
repnz
stos
dec
stos
add
or
xchg
outsl
pop
sbb
mov
xchg
cmp
sub
leave
or
adc
push
cltd
addb
pop
stos
rcrb
pushf
cmp
cmp
popa
jg
sarl
test
lcall
cmp
fs
cli
mov
or
orl
push
sahf
cltd
je
mov
mov
push
or
pop
sub
and
push
dec
es
add
mov
out
call
neg
fwait
sbb
mov
sub
and
mov
inc
lods
aas
push
fiadds
lds
adc
lods
sbb
test
insb
adc
mov
movsb
dec
stos
out
rolb
ljmp
std
dec
inc
lfs
loope
xchg
push
cld
cmpsl
lahf
cmp
std
push
inc
sub
aas
pop
dec
xchg
pop
nop
jns
xchg
test
or
aad
pop
or
mov
fsubp
or
nop
popa
pop
jnp
or
and
hlt
mov
scas
loopne
out
orl
sub
push
stos
arpl
push
movsb
leave
je
stc
loop
mov
mov
jbe
fs
mov
push
rcpps
sbb
pop
stos
push
adc
shl
cmp
cltd
mov
inc
movsb
add
test
push
pop
pop
cld
pop
call
lcall
jg
mov
into
into
flds
imul
sbb
xor
or
jmp
pop
or
call
xchg
and
mov
sarb
in
shlb
lret
push
rcrl
or
mov
pusha
aas
xchg
xchg
fdivrs
lds
mov
insb
mov
jb
test
cwtl
mov
mov
adc
test
pop
xchg
and
push
xlat
lret
jno
movsl
push
xor
ficompl
inc
mov
push
sbb
loopne
sub
repnz
sbb
ret
jl
shll
push
je
ret
xor
std
mov
adc
adcl
leave
fwait
xor
fsts
enter
adc
cltd
loop
mov
sahf
hlt
push
inc
xchg
dec
ljmp
mov
popa
cs
jle
jne
xor
lea
cmpsb
clc
imul
xchg
out
imul
daa
incl
std
je
out
mov
dec
push
aas
negl
inc
push
js
out
xor
push
xchg
sbb
push
mov
pop
cmpsb
or
test
dec
cwtl
or
push
ds
pusha
push
mov
and
push
adc
cmp
mov
inc
sub
adc
test
pushf
mov
cmp
iret
mov
dec
in
mov
aaa
incl
or
stc
insb
lcall
es
dec
inc
inc
popf
jbe
pop
lret
aas
cmp
sbb
in
stc
xor
inc
lds
outsl
mov
faddl
cs
das
sbb
jmp
lock
mov
or
cwtl
cltd
xor
xor
adcl
or
daa
mov
push
ret
clc
in
inc
enter
jecxz
push
les
std
and
add
jl
mov
rolb
xchg
mov
fsubl
in
inc
sbb
cmp
int3
scas
xor
or
call
xor
fstpl
outsb
sbb
add
pop
daa
ds
jl
jnp
hlt
sub
mov
xchg
rcr
aam
lods
jbe
cs
rcrb
ret
lret
pop
rorb
inc
out
sbb
dec
fiadds
mov
cmpsl
fwait
xlat
jae
test
dec
push
xchg
mov
adc
ffree
in
call
jle
inc
dec
mov
push
bound
je
cvtps2pd
inc
inc
cmp
xor
insb
inc
ljmp
add
xchg
js
in
loop
xchg
dec
inc
xor
sbb
jecxz
imul
icebp
mov
popa
cwtl
das
mov
cmp
xchg
jle
dec
or
cs
fwait
push
jecxz
sti
mov
mov
jl
xchg
cmpsl
dec
mov
divl
imull
imul
or
mov
test
js
out
adc
cmp
xor
cmp
push
pop
lret
das
mov
scas
push
scas
push
push
cmp
mov
cmp
in
sub
lock
out
adc
scas
push
mov
jb
popa
cmp
push
cmp
movhps
mov
in
lahf
fisubl
and
je
inc
pop
dec
cmc
lcall
inc
push
call
push
cmp
rcr
les
ja
jg
cmc
inc
scas
cmp
lret
pop
xor
jnp
lods
jp
call
sbb
xchg
in
cli
lcall
pop
push
ljmp
or
out
pushf
cli
jae
repz
inc
cltd
mov
sbb
lock
scas
in
sbb
mov
repnz
fs
aam
dec
int3
mov
dec
dec
sub
and
enter
mov
adc
sbb
pop
lock
or
clc
ret
cmp
leave
fdivs
stc
mov
cltd
arpl
rcr
mov
xlat
mov
mov
jmp
mov
cmpsb
xchg
clc
insl
popa
lret
add
adc
mov
cs
cs
mov
pop
pop
ret
lcall
test
cmp
cmpxchg
mov
test
pop
dec
sarl
xor
stos
iret
inc
lods
pusha
sbb
cmp
pop
cmp
out
mov
xchg
xchg
addr16
mov
into
cmpsb
mov
je
dec
out
stc
jle
ds
mov
sub
call
push
imul
sbb
imul
outsl
xchg
mov
mov
lea
ret
stos
lcall
add
add
lods
test
push
stos
fldenv
xor
insb
or
leave
xchg
push
lret
sub
pop
dec
dec
fbld
dec
out
cmp
shll
roll
leave
notb
adcl
in
jge
mov
lahf
adc
mov
or
adc
mov
imul
addr16
xlat
movsl
cld
jno,pt
pop
and
sbb
adc
into
xor
pusha
into
movsl
sbb
lcall
fcoms
es
jns
mov
addr16
add
jle,pn
adc
add
addr16
je
jns,pn
jmp
push
mov
scas
jns
negb
and
mov
ret
and
imul
mov
jp
xlat
aad
push
test
xor
cmpsl
mov
stos
or
xor
inc
push
outsb
sbb
jnp
shl
jg
cwtl
mov
fsubr
fdivl
sahf
std
jbe
mov
push
add
stc
push
out
cmpsb
or
pop
outsl
mov
std
insb
popa
xchg
loop
mov
mov
mov
out
mov
pop
or
aam
inc
cmpb
pop
loop
jle
out
cmc
ds
push
cmc
cmc
fs
push
pop
add
outsl
decl
outsl
test
les
mulb
dec
cmp
sub
cmpb
jle
js
loopne
jns
fildll
cld
negb
mov
push
cli
pop
cmp
mov
cs
add
lcall
jbe
mov
push
jns
or
mov
out
jo
jp
cltd
lds
in
ret
push
fwait
push
mov
inc
in
jns
shrb
push
orl
lret
dec
stc
push
arpl
enter
in
xchg
push
rcll
or
sbb
pop
xor
addr16
and
fildll
in
lods
sarb
pop
push
push
mov
hlt
or
leave
xor
cmp
pop
movsl
add
pop
push
jnp
cmp
jne
iret
pop
pop
mov
jecxz
sbb
test
mov
lcall
or
iret
push
nop
lea
or
pusha
nop
xchg
mov
adc
test
mov
cmp
sbb
rcrb
inc
cmpsb
mov
sarb
mov
adc
mov
or
jnp
jo
loope
ja
push
fnstcw
ds
jge
pop
pop
fdivs
lahf
pop
inc
dec
cmp
push
lahf
or
mov
or
sub
hlt
sbbb
sub
ficoml
and
stc
xchg
xchg
pop
mov
dec
dec
xor
hlt
lret
shrb
das
sub
push
sarb
cli
jo
cli
inc
and
dec
xor
lods
imul
cmp
fmul
xor
ret
cmc
stos
cli
dec
adc
in
pushf
mov
pop
and
jmp
in
in
mov
or
pop
notb
mov
xchg
sbb
add
lret
call
mov
xchg
push
xor
out
clc
inc
xchg
push
clc
push
mov
adc
push
js
call
xlat
or
stc
mov
fs
or
push
loope
imul
cmp
jbe
repnz
data16
mov
icebp
mov
icebp
or
movsl
jb
jne
fnstcw
dec
mov
cld
or
pop
mov
mov
pop
dec
push
and
xor
aad
or
inc
xor
mov
imul
sub
or
out
adc
cltd
call
cmp
jb
pop
jle
mov
jne
mov
push
sbbb
aaa
fwait
mov
popa
test
mov
inc
cmpsl
jnp
or
mov
cli
ret
sbb
test
mov
and
push
ss
jmp
mov
pop
jo
cltd
dec
xchg
push
mov
cmp
xlat
cld
aaa
mov
inc
cld
dec
push
aas
loopne
fidivrl
pop
sbb
cmp
pop
xlat
jg
mov
mov
shll
daa
out
int
cltd
ret
iret
sub
cmp
aaa
lcall
xchg
cmp
data16
push
sub
adc
shr
pop
js
mov
cs
or
inc
mov
sub
pop
nop
iret
mov
fsubrs
fwait
sarb
add
push
aas
lock
pop
repnz
lods
xchg
cltd
or
flds
repnz
xor
stos
dec
xchg
cli
mov
push
jno
dec
iret
mov
mov
mov
pop
addr16
mov
leave
cmp
mov
in
mov
dec
into
add
fcmovbe
movsl
icebp
add
shl
inc
inc
mov
popa
es
scas
xor
pop
mov
lods
aaa
ss
mov
aas
ljmp
inc
fcoml
adc
dec
sub
adcb
lahf
mov
in
sarl
inc
xor
lods
test
and
mov
cmc
jo
xor
fidivl
in
fcmovnb
aam
mov
movsl
sarb
ljmp
xor
lret
leave
jecxz
inc
sbb
jmp
stos
xchg
test
and
insb
cmp
or
xchg
xlat
xchg
nop
repz
mov
xchg
adc
cmp
rorl
mov
test
xor
mov
xchg
xor
enter
sarl
lcall
divl
imul
sub
inc
sub
xchg
cli
pop
fsubp
imul
pop
inc
pop
jg
inc
mov
push
enter
test
mov
xor
push
fcoms
jmp
mov
push
lret
enter
fiaddl
mov
xchg
rol
iret
popf
ljmp
inc
data16
cltd
jo,pn
and
xor
sub
loopne
xor
dec
rclb
or
jmp
into
jecxz
fwait
test
lds
je
lds
into
cmp
push
jbe
cmc
leave
mov
dec
dec
sbb
pop
cmp
dec
cmp
shlb
stc
add
mov
push
pusha
mov
pop
mov
jno
clc
mov
adc
lods
jg
mov
and
push
loop
cwtl
and
xchg
out
movsl
mov
vhaddps
and
jmp
shrb
xchg
cmc
xor
dec
mov
jmp
and
movsl
test
js
daa
sub
sbb
in
push
or
push
daa
dec
cmpsl
xlat
pop
arpl
inc
inc
fsts
out
xor
mov
lds
insb
pop
inc
sub
mov
es
movsb
cmp
das
insl
idivl
push
dec
mov
mov
inc
fistl
popa
inc
xchg
xchg
call
rclb
jnp
fstl
dec
imul
push
call
fiadds
lret
stos
xlat
inc
sub
xchg
repnz
push
iret
arpl
in
loop
or
mov
scas
repz
xlat
rorl
lock
cmp
inc
xchg
xor
pop
jecxz
cmp
mov
adc
cmp
rolb
adc
xor
ja
sbb
imul
jmp
jb
ficoml
push
test
data16
dec
xchg
fs
and
sub
mov
push
add
sub
lahf
stc
xchg
nop
lods
fwait
rcrb
fs
aaa
or
js
das
rcll
dec
pop
and
push
test
sti
aas
insl
dec
sbb
xchg
mov
jl
cli
xchg
mov
mov
int
mov
or
mov
incb
gs
inc
pop
and
mov
add
mov
cmp
dec
mov
jg
cmpsl
aad
pushf
cltd
nop
arpl
mov
or
xor
push
insb
mov
incb
sub
addr16
pop
movsb
sti
aam
dec
add
in
lret
stc
dec
jae
mov
adc
sub
adc
sti
jae
push
sbbb
fiadds
dec
pusha
xorl
sbbb
lods
rcll
sahf
push
add
xor
xchg
mov
divb
add
and
jle
out
in
mov
xchg
shlb
jle
in
cmc
popa
inc
xor
loope
mov
cwtl
scas
nop
lea
leave
xor
out
ret
stos
xchg
pop
repnz
add
mov
dec
and
addr16
push
imul
sbb
push
rcrl
sbb
dec
and
aas
xchg
push
push
pop
fimull
xchg
xchg
insl
daa
jne
int3
call
push
nop
jp
ret
out
cmp
sbb
xchg
dec
push
cmp
cs
mov
test
sub
inc
jo
pop
mov
jp
push
leave
pop
add
push
icebp
int
dec
add
mov
leave
xchg
pop
adc
aam
bound
mov
jle
adc
rol
sbb
lea
mov
popf
andb
addr16
test
lock
sub
leave
adc
cmp
xor
cmpb
insl
dec
xchg
int
imul
test
or
addl
test
xor
lock
push
jp
xor
mov
push
push
shl
xchg
xorl
cmp
sbbl
sub
mov
jae
mov
sub
cmp
and
sti
cmp
adc
xchg
lahf
mov
mov
xchg
pop
mov
jnp
fildll
test
pop
adc
aaa
in
mov
jnp
push
sbb
leave
or
cmp
clc
sbb
and
mulb
sub
mov
push
and
and
ss
dec
cmc
cmc
sub
shr
or
sub
fsts
adc
sahf
push
xor
jae
pop
mov
cmp
xlat
mov
and
cmp
call
enter
sub
inc
and
sub
enter
add
test
popa
dec
pop
jb
mov
xor
pop
mov
jmp
movsb
loopne,pn
push
xchg
aas
mov
xchg
fidivrs
and
adc
mov
daa
pushf
mov
and
imull
enter
pop
stos
lods
xchg
sub
lret
xchg
cmp
inc
jmp
ljmp
js
cld
cli
iret
bnd
in
fadd
cmp
mov
inc
mov
psubusb
test
push
repz
pop
pop
mov
jnp
add
fbld
iret
lret
pop
stc
loop
inc
imul
sbb
mov
rolb
lahf
out
add
addr16
mov
and
stos
add
or
clc
pop
or
push
bound
xchg
cmp
stos
iret
xchg
in
fucomi
int3
call
stc
filds
rcrb
rcr
fs
fmul
shll
repnz
loop
sbb
gs
mov
pop
xor
xorl
push
sahf
push
aas
push
ffree
bsr
icebp
mov
insb
out
push
sbb
mov
jae
insl
outsl
testb
daa
dec
mov
sti
jle
sub
movsl
jbe,pn
mov
in
fistpll
mov
add
in
lea
mov
xchg
dec
mov
mov
daa
aas
inc
imul
movb
ds
lds
aad
xor
xchg
inc
xor
inc
sti
add
add
jbe
mov
xchg
lea
cmc
enter
in
lods
jmp
les
lcall
loop
inc
cmp
test
icebp
jg
test
pop
mov
fstpl
clc
fcomps
aas
push
fwait
nop
fstpl
sti
imull
xchg
sbb
push
loopne
sbb
fistl
pop
in
sbb
xchg
or
mov
push
lods
ds
shl
rclb
and
sub
in
int3
lods
pop
inc
fs
clc
int3
cmpsb
dec
dec
xchg
inc
call
dec
mov
inc
out
and
cs
cmp
adc
fwait
lock
adc
xchg
in
add
mov
sarb
xchg
mov
jnp
cli
daa
push
sbb
or
xchg
lahf
inc
lea
out
lahf
call
iret
es
sub
in
aas
xorb
pop
or
mov
aas
cmp
ss
jns
aaa
les
insl
dec
push
and
fdivrl
sbb
ret
mov
pop
scas
call
mov
into
leave
ret
movb
inc
mov
test
cmp
or
xchg
call
ss
pop
out
lods
mov
inc
add
leave
loope
xor
cmp
mov
cmp
shr
dec
inc
jb
pop
cmp
lods
sbb
mov
mov
call
rcrb
fsubl
jmp
scas
ror
stos
and
xchg
adc
repz
adc
dec
adc
scas
sub
xchg
add
push
ficomps
mull
cmp
mov
clc
mov
out
push
sub
dec
or
or
insb
in
pop
push
mov
push
enter
xchg
mov
fxch
faddl
stos
shrb
dec
sbb
sahf
ja
cmp
arpl
cmp
adc
enter
mov
or
dec
subl
sbb
sub
dec
dec
int
mov
fnsave
addr16
push
nop
push
jg
inc
pop
pop
stos
mov
sbb
sub
push
ret
in
cmp
pusha
xchg
stc
movsb
jo
push
repz
mov
cmp
add
and
mov
mov
ja
into
or
lcall
jmp
fidivrs
in
sbb
cmpsl
xchg
cmp
sahf
xchg
cmp
lods
iret
pop
xchg
mov
sub
test
lret
push
xchg
push
cmp
and
into
int
inc
insl
mov
in
jne
jecxz
jecxz
hlt
stc
mov
add
add
mov
mov
jmp
cmp
fidivl
clc
clc
adc
loop
ja
fldenv
movsb
addr16
or
icebp
sub
push
rol
insb
sub
jbe
les
movsb
imul
cmpsl
pop
shlb
xchg
add
loop
mov
sbb
and
lret
add
xchg
xor
and
xlat
sbb
jo
and
pop
popa
xor
movsl
les
jmp
adc
mov
lea
push
and
rcll
lret
mov
jbe
jbe
xlat
inc
mov
pavgb
xchg
mov
or
ret
movsb
outsl
jge
call
mov
mov
pop
rclb
nop
xor
rcll
scas
inc
fucom
jbe
rolb
mov
pop
inc
popa
dec
mov
jle
mov
cwtl
and
es
movsb
lds
loope
adc
repnz
shll
sbb
push
push
mov
xchg
mov
daa
jmp
xlat
xor
aam
test
pop
jmp
out
or
xlat
jle
cs
pop
das
pop
fists
popf
mov
lahf
jae
icebp
cmp
jp
lds
xchg
xchg
das
jns
sahf
mov
insl
and
sbb
push
lret
out
mov
xor
aam
xor
loope
mov
jg
int
adc
mov
movsb
sub
cmp
dec
push
add
push
cmp
fisubl
jle
sub
out
aad
sub
fsubl
orl
xchg
xlat
jp
lea
and
adc
jae
pop
pop
out
xchg
iret
jl
mov
aam
sbbb
sbb
mov
arpl
xor
mov
cmpsb
je
daa
cmp
inc
xchg
inc
mov
aad
ds
popa
ficoml
and
cwtl
ds
dec
xorl
xor
dec
clc
or
aam
mov
xchg
push
in
dec
cwtl
clc
cmpsl
cmc
mov
stos
xchg
lret
arpl
data16
and
lds
xchg
mov
iret
cmp
sbb
lret
dec
popa
dec
insl
hlt
xchg
enter
mov
xor
push
and
mov
jg
and
fidivl
lods
hlt
sarl
cmp
jo
outsb
in
divb
mov
xchg
lock
dec
mov
maskmovq
imull
cmp
hlt
insb
pop
xor
fsubr
mov
arpl
sbb
mov
adc
pop
add
lret
jp
sub
aad
inc
pop
cmpsl
loope
stos
mov
loope
iret
push
xchg
into
aam
addr16
or
jp
jno
into
cmp
stc
pop
pop
add
inc
cmp
pushf
xor
push
xchg
in
ljmp
mov
jl
rcl
jle
test
fildll
sbb
xchg
xchg
stos
dec
aad
test
lret
pop
jb
push
add
jmp
scas
adc
xchg
cmp
mov
sub
adc
movsl
jnp
lods
jecxz
jnp
stos
scas
pop
jnp
pop
push
ficoms
hlt
dec
mov
in
sbb
mov
lds
push
stos
xchg
pop
or
divl
pop
scas
cli
imul
mov
fs
adc
mov
loop
ficomps
ficomps
arpl
mov
pop
enter
call
cmc
cmp
dec
pop
cli
push
shrl
bound
and
arpl
inc
xchg
por
push
popf
push
icebp
mov
cmp
jge
sub
cmp
divl
cld
int3
mov
gs
icebp
mov
in
cwtl
sbb
xchg
aas
loop,pn
arpl
push
jb
or
sub
pop
iret
pop
push
pop
jge
xchg
gs
ret
and
out
sbb
test
in
loopne
fdivs
lcall
cs
popa
aas
inc
xchg
inc
orl
pop
mov
jecxz
test
js
lahf
lods
repz
stos
out
mov
mov
push
push
sbb
lods
adc
int
jno
dec
xchg
loop
int
push
out
lret
data16
sub
mov
lcall
popa
inc
inc
outsb
push
jp
adc
fsubrp
leave
pop
push
xchg
movsb
pop
dec
mov
adc
rep
pop
and
insl
cmpb
test
test
mov
addr16
aad
leave
dec
push
xchg
inc
dec
dec
insb
cltd
fstp
pop
ret
fwait
cmpsl
cmp
push
pop
xchg
pop
daa
xchg
sbb
out
flds
push
int
cli
sub
or
test
and
mov
enter
rorl
mov
inc
clc
sbb
addl
adc
dec
dec
mov
sbb
add
add
pusha
mov
sarb
in
test
sbb
push
pop
mov
fwait
jle
sbb
fnstenv
xor
xor
or
jno
mov
in
push
dec
out
fsubs
movsl
pop
push
fsubrl
mov
lock
mov
cli
mov
dec
jge
inc
ret
jl
or
xor
test
ds
sahf
jae
inc
inc
sti
mov
clc
jb
pop
decb
or
jo
idivb
lock
cmpsl
cmp
sub
add
dec
jmp
fs
mov
lods
cmp
mov
and
scas
sbb
cmp
push
call
or
mov
fnstsw
ficoms
dec
mov
jge
dec
cs
xor
mov
aad
jb
push
inc
pop
adc
adc
icebp
sbb
dec
fwait
cmp
scas
jecxz
xor
jmp
sbb
lea
and
imul
jae
cmp
sbb
xchg
xchg
pop
stos
cmp
cmpsl
sahf
sub
dec
pop
mov
xchg
stc
ss
xor
shll
dec
push
dec
cs
and
sub
insl
je
loop
fwait
push
xchg
in
mov
add
aaa
imul
jl
and
push
and
mov
mov
repz
push
adc
xor
bound
lods
inc
or
ret
pushf
jno
pop
rcll
xchg
outsb
mov
add
push
movsb
jge
in
ljmp
mov
daa
or
sub
es
into
adc
ficoms
shll
fsubl
cmp
adc
inc
dec
data16
pop
and
enter
sbb
cwtl
fdivr
mov
fildl
mov
push
sub
ljmp
jno
fcomps
scas
sbb
lods
add
mov
frstor
jle
nop
arpl
push
imul
cmpsb
sub
iret
lahf
xchg
pop
bound
adcl
jp
scas
xor
adc
push
jle
sub
test
jmp
push
push
das
jb
lods
xorl
mov
xor
adc
idivb
and
in
das
xchg
insl
in
push
aaa
cwtl
js
sbb
sub
jmp
inc
int
sub
xchg
and
out
aaa
push
push
adc
xor
xchg
js
ljmp
clc
inc
shll
lea
dec
and
fwait
and
xor
fmull
fnstenv
mov
mov
fimull
andl
xchg
add
rcr
fwait
jbe
outsb
mov
hlt
lea
mov
mov
int
jnp
adc
movsb
xor
jmp
in
xchg
push
add
lds
std
mov
inc
cmpsl
scas
mov
cmp
jp
lcall
leave
adc
sbb
cwtl
and
pushf
sub
dec
inc
jg
pop
fwait
add
and
mov
cmp
jo
imul
mov
mov
fldcw
popa
pop
jecxz
or
push
out
mov
call
rolb
lock
hlt
fcmovbe
jbe
pop
cmp
ja
cmp
dec
push
rolb
lock
lock
js
mov
sbb
das
cmp
shl
dec
aaa
sbb
aad
fldcw
aas
dec
xchg
mov
jmp
cmc
subl
mov
mov
fnstcw
mov
pushl
hlt
xor
imul
enter
es
imul
popf
jg
cmp
cmc
psrlw
or
les
mov
sub
xlat
pusha
cmp
sub
dec
push
or
lods
daa
xchg
sbb
push
scas
in
mov
or
xor
nop
add
pop
jnp
add
inc
add
loopne
fdivrl
inc
xlat
push
icebp
mov
loopne
xchg
pop
add
xchg
push
fsubr
push
adc
lods
dec
push
cmp
xchg
cwtl
in
fisubrl
xchg
adc
xor
ficomps
cwtl
arpl
cld
inc
arpl
lret
mov
sub
in
and
icebp
ss
sub
push
scas
mov
popf
int
sub
std
and
sti
jp
iret
sbb
scas
jbe
pop
lret
insb
mov
lods
lea
lret
pop
leave
shll
push
mov
mov
pushf
cltd
xchg
and
xor
push
jecxz
mov
addb
test
push
ljmp
imul
push
sub
dec
xchg
out
fsubs
popf
push
jecxz
mov
inc
pushf
push
and
and
cs
ljmp
push
cmpsb
pop
pop
adc
fwait
xor
mov
out
mov
xchg
push
cmp
lods
mov
xchg
ds
cli
in
sbb
int3
rcll
enter
dec
mov
pop
pop
scas
into
mov
adc
xlat
out
add
lods
inc
in
in
add
insb
lock
lea
lret
popa
jle
mov
insl
push
xor
and
fistpll
jmp
add
scas
inc
cmpsb
in
cmpsl
or
ds
call
adc
dec
pop
xchg
into
pop
xchg
pop
lock
stos
mov
cmpsl
fcomps
mov
cmpsl
fidivs
jbe
stos
xor
test
mov
scas
sub
stc
jb
lea
ret
lods
fnstsw
pusha
pushf
jnp
cld
leave
aaa
lock
mov
es
data16
aaa
aas
out
push
adc
in
aas
push
push
or
jno
mov
je
dec
cmp
fiadds
xchg
int
jle
aaa
jl
mov
mov
fnsave
cli
sub
call
call
and
imul
jbe
sbb
sub
dec
insb
fisubl
andb
sub
rcrb
in
rolb
in
push
xor
xchg
iret
data16
and
jle
inc
dec
dec
xchg
or
push
sub
pop
sbb
fwait
idivb
je
lcall
push
sub
hlt
xchg
dec
aam
xor
lcall
xor
cs
iret
mov
xlat
and
jb
mov
push
fistpl
sahf
mov
icebp
scas
lods
and
sub
fucom
fwait
cltd
ret
fwait
ljmp
fs
push
pop
mov
adc
lahf
sub
jns
xor
scas
or
insl
lret
add
cld
ss
xlat
pop
and
hlt
xchg
cmp
adc
test
movsb
mov
dec
pop
ss
or
fisubrs
mov
rcr
pop
mov
clc
push
gs
sub
xor
mov
iret
cli
fistpl
sbb
xor
pop
leave
or
js
add
stc
bnd
callw
push
test
dec
mov
mov
sbb
xor
mov
ficomps
dec
aam
sub
xchg
fstps
addr16
pop
das
bound
ret
mov
pop
add
hlt
sti
mov
pop
dec
inc
cmc
pop
inc
iretw
nop
sahf
or
lods
cmpsb
lds
xor
fs
lcall
mov
push
adc
mov
xchg
or
cli
in
fsub
dec
mov
adc
push
es
dec
clc
adc
iret
pop
iret
outsl
lret
xchg
scas
push
mov
cmpsb
and
pop
pop
add
test
dec
xchg
mov
lds
dec
dec
xor
adc
add
cli
pop
sub
push
mov
sub
pop
mov
mov
mov
mov
insb
and
ficoml
rcll
insl
sbb
leave
mov
leave
dec
cmp
xchg
inc
lods
and
push
dec
cli
push
ljmp
lock
pop
gs
add
dec
imul
and
popf
inc
xor
movsl
sub
cltd
loope
pop
fcompl
inc
fistl
mov
inc
arpl
imul
test
push
mov
in
adc
dec
cmp
repz
mov
xchg
dec
pop
mov
push
imul
pop
push
testl
icebp
sub
cmp
cmp
in
dec
xor
clc
pop
js
mov
insl
lcall
outsl
sarl
cmp
and
pop
and
pop
mov
jg
fnstenv
xchg
add
ret
or
xor
js
shrl
loope
imul
iret
cltd
int3
xchg
jae
mov
jmp
mov
repz
pop
outsb
lret
jle
lahf
aaa
cld
add
jnp
cli
and
mov
adc
std
add
mov
add
adc
push
les
pop
or
insb
rcl
cli
in
ffreep
pop
mov
mov
fsts
cmp
aas
mov
pop
mov
mov
sub
fisttpl
sbb
in
ret
add
mov
adc
cmp
mov
xchg
and
call
sbb
mov
leave
inc
test
loope
mov
mov
push
push
dec
pop
mov
call
fstpl
mov
dec
call
xchg
hlt
push
xchg
cmpsb
push
inc
add
rcl
cmp
pusha
addr16
ret
adc
out
mov
xchg
sbb
jl
popf
sub
pop
mov
fistps
ficoml
mov
adc
mov
push
or
mov
imul
xchg
inc
sub
lcall
js
cs
jmp
and
push
adc
fldcw
ffree
inc
icebp
mov
xorb
add
call
cmpsl
jbe
int3
adcb
outsb
frstor
mov
mov
pop
lock
shlb
adc
test
or
sub
iret
clc
adc
fldt
lret
ret
lret
lods
mov
in
adc
xchg
stc
adc
inc
pop
xchg
insl
sbb
pop
mov
aas
leave
mov
jns
sti
mov
inc
mov
sbb
dec
sbb
cmp
cmpsl
scas
fucom
cmc
sbb
jnp
in
lahf
das
adc
add
test
push
jl
ret
mov
xchg
inc
in
daa
pusha
mov
and
pop
sbb
mov
mov
sahf
in
jge
sahf
in
test
mov
push
aas
std
mov
lds
sub
scas
xor
aad
xor
xlat
lods
jbe
daa
jae
mov
lods
out
dec
popf
xor
mov
push
shrl
clc
cmpsb
push
add
inc
movb
add
push
movsl
int
push
nop
jg
insl
test
lock
orb
test
mov
and
and
push
popf
cmp
les
out
aas
push
mov
and
sti
sub
repz
xchg
push
sub
adc
aad
fdivrl
cmp
fs
mov
mov
andb
inc
xchg
xlat
jecxz
imul
insb
jl
push
stos
test
mulb
in
mov
pop
dec
or
ljmp
js
aad
into
mov
or
mov
leave
loopne
and
repnz
dec
testl
scas
add
scas
pushf
mov
lahf
xchg
mov
and
test
sub
ja
inc
nop
and
pop
sub
mov
dec
xor
cmp
sub
scas
iret
jle
or
sbb
jb
mov
mov
xchg
jle
mov
hlt
pop
add
fwait
mov
arpl
mov
xor
pop
push
cli
jbe,pn
adc
mov
pushf
pop
lret
out
movsb
add
and
cltd
outsl
fdivs
outsb
inc
and
fs
or
orl
mov
or
lods
lcall
push
sti
jno
add
inc
mov
out
pop
mov
imul
jmp
cs
adc
sub
mov
push
aas
mov
mov
sti
mov
inc
iret
fwait
mov
loope
mov
je
cmp
mov
xor
decb
push
mov
and
pop
push
mov
and
dec
into
pop
test
lret
sub
mov
cmp
or
mov
dec
cmc
in
cwtl
test
fdivrl
int
mov
lea
inc
sti
js
push
push
jecxz
sti
mov
testb
in
jnp
add
xor
push
push
stos
dec
out
hlt
pop
pusha
idivl
mov
cmpsl
mov
cmp
pop
aad
lahf
push
scas
add
lahf
xor
push
mov
mov
pushf
and
hlt
data16
lcall
jbe
cld
xor
xlat
mov
les
adc
xlat
push
mov
dec
add
test
adc
test
out
in
jl
stc
pop
in
mull
cld
in
push
push
movsl
mov
and
les
cmp
clc
clc
sbb
js
rorb
mov
xor
sbb
and
ja,pn
dec
xor
mov
lahf
ficoml
fildll
fstps
loop
inc
mov
push
movsl
dec
pop
or
leave
jecxz
dec
aaa
sub
cmp
in
stos
aad
dec
lahf
jmp
std
lret
jmp
adcb
xchg
xchg
imul
sub
les
pop
adc
fdivrs
mov
xchg
xor
ret
mov
cli
xorl
dec
js
cmp
fs
fsub
mov
in
sub
ret
repnz
lds
test
xchg
and
test
filds
inc
inc
mov
pop
push
xor
sti
ljmp
jp
lock
sub
out
insl
mov
inc
aaa
inc
mov
lds
je
rclb
adc
sub
in
inc
int
add
adc
push
dec
and
fwait
std
push
push
sbb
out
mov
jecxz
fs
stos
scas
push
popa
dec
jle
scas
mov
mov
hlt
lcall
cmp
xor
push
mov
stos
stos
dec
jns
fnsave
test
dec
pop
sbb
add
xor
mull
mov
out
sub
sub
dec
test
cmp
push
mov
push
adc
adc
pop
push
hlt
mov
add
and
or
js
fwait
iret
fdivs
mov
xchg
stos
add
ja
jno
mov
xor
cmp
mov
clc
xchg
notl
fcomp
ss
inc
ficoms
mov
add
insb
sahf
add
out
testb
fistpl
adc
pop
push
enter
std
mov
jno
popa
dec
jmp
sti
mov
add
push
adc
and
test
and
std
mov
cmp
pop
adc
pop
mov
insb
cmp
dec
outsl
pop
test
fs
jmp
sti
int
call
lds
mov
or
and
dec
jge
mov
mov
cmp
neg
sbb
push
mov
dec
ja
sbb
inc
mov
or
inc
lret
add
fldl
sub
test
repz
movsb
cltd
inc
loopne
mov
lods
jae
cwtl
cmp
movsl
rcr
das
lds
jg
out
push
add
arpl
inc
jae
in
adc
imulb
jecxz
daa
insl
xlat
enter
jno
lods
jno
and
add
dec
mov
and
mov
hlt
jae
or
xlat
cmp
sub
aad
rcll
inc
pushf
pusha
inc
aaa
xchg
add
aam
cs
and
cmpsl
je
add
jmp
xchg
jmp
fwait
test
hlt
mov
aas
mov
jl
lcall
test
jmp
pop
sub
adc
dec
fstps
push
or
push
or
jecxz
jbe
xor
fwait
mov
cmp
sub
pop
pop
ljmp
xchg
push
test
int
nop
inc
push
lahf
and
jg
out
mov
cmp
test
or
push
mov
jae
aam
cld
cld
in
les
cmc
lret
xchg
sub
jp
inc
loop
aas
lods
lret
push
sbb
sahf
mov
jl
mov
xor
shl
sbb
or
pop
mov
fisubl
testl
imul
lret
jo
stos
in
popl
push
ficoml
bound
and
cs
mov
xchg
jae
xchg
add
push
mov
fs
push
loopne
push
arpl
lea
pusha
adc
sbb
or
inc
inc
sub
xor
add
pop
or
jge
movsb
mov
aas
pop
dec
cmp
aad
daa
into
or
cmp
divl
shll
xor
push
and
mov
clc
inc
ja
pushf
ja
mov
mov
lea
fs
inc
mov
es
rolb
jbe
cmp
mov
mov
and
mov
lahf
push
push
or
pop
sbb
jge
jae
add
xchg
mov
jmp
push
cld
push
lea
sub
cmpsl
and
jp
in
std
jge
sbb
les
fistpl
adc
add
jbe
or
fldt
jle
addr16
test
add
scas
jne
mov
mov
adc
out
mov
sbbb
sbb
cmp
and
adc
and
jo
inc
nop
sub
lock
or
int
adc
xchg
aaa
dec
cmpsb
jle
loop
lods
std
add
hlt
in
out
or
aam
jl
jne
or
stc
inc
repz
mov
and
leave
sahf
push
shl
out
jmp
xchg
jb
lahf
mov
rcll
sub
xchg
or
push
and
and
pusha
outsb
pop
movq
les
loop
movl
adc
repnz
jl
mov
sub
les
jo
out
pop
adc
insb
js
mov
ja
popf
mov
fs
icebp
cld
out
add
mov
inc
xor
pop
dec
fildll
jl
pop
subb
cmp
lcall
sbb
or
cltd
fdivr
insl
cmp
or
jg
push
cmp
cmc
and
ja
inc
out
push
les
fbld
pop
cmpsb
adc
imul
sbb
xchg
cmp
repnz
ret
mov
dec
cltd
int3
inc
sbb
mov
mov
daa
xchg
jno
ds
mov
mov
push
mov
mov
enter
ficompl
scas
fcmovnb
loopne
cmp
loope
xor
pop
or
ret
ret
jns
mulps
and
mov
inc
xchg
into
push
mov
jnp
inc
outsb
imul
pop
popf
repnz
adcl
jne
adcb
sbb
lods
mov
or
popf
inc
inc
pop
stc
mov
in
jns
and
xchg
das
xlat
xor
mov
shll
push
sub
mov
mov
stos
mov
push
inc
adc
call
adc
pusha
or
cmc
push
scas
popa
sub
scas
or
jle
add
mov
and
push
xor
adc
pushf
push
lret
sub
sub
push
sbb
cmc
int
sbb
mov
sti
out
cmp
and
lret
test
mov
and
push
and
inc
mov
bound
cwtl
cmp
ss
mov
xchg
pop
movsb
mov
cmpl
sbb
lahf
lds
enter
pop
xor
inc
jg
jp
icebp
pusha
loope
andl
pushf
out
mov
mov
iret
data16
loopne
jno,pt
adc
cmp
ja
mov
add
sbb
imul
idivb
xchg
push
fcmovnb
ja
cmc
adc
pop
fsts
roll
loop
ret
or
mov
lcall
jb
filds
enter
inc
shlb
xor
mov
inc
movsl
inc
push
jae
cmp
cld
popa
in
jg
pushf
sbb
int
arpl
or
sbb
push
dec
mov
xor
out
adc
mov
xchg
out
sub
jp
mov
xor
add
dec
push
ret
cli
dec
nop
sub
andb
mov
stc
inc
stos
dec
xchg
sbb
cs
pusha
sti
mov
dec
test
jne
test
pusha
mov
mov
xchg
jbe
sub
sub
jbe
sub
in
xor
sbb
xlat
push
sbb
rorl
xchg
inc
imull
gs
rolb
out
cmpsl
enter
loop
arpl
push
push
hlt
jmp
pop
dec
cmc
outsl
outsl
enter
popa
sbb
xlat
pop
imul
pop
orl
insb
lea
arpl
daa
aam
movsl
aas
dec
insb
add
xlat
dec
aad
hlt
movsb
jg
pop
lock
pop
add
aad
and
daa
adc
out
sub
xor
lock
cmpsl
cmp
xchg
push
xor
pusha
push
ds
fistps
enter
xor
mov
std
jmp
divl
sarl
push
leave
xor
sbb
jno
mov
cs
push
ss
push
loop
ds
lods
lds
dec
cmpsb
and
dec
aaa
pop
jno
mov
sarl
ds
push
inc
push
stc
imull
rcrb
adc
aam
mov
xlat
xorb
mov
cmc
fwait
pop
js
cmpb
and
push
push
stc
rolb
xchg
or
jbe
cmp
jmp
loope
and
pop
mov
pop
xchg
bound
cmp
jno
mov
push
cmp
out
nop
test
and
lds
lcall
or
sti
mov
out
clc
mov
inc
push
mov
jae
notb
sub
rcrl
cmc
or
sar
push
sub
nop
pop
inc
push
imul
repnz
or
add
ja
cmpsb
lcall
mov
xchg
adc
lods
roll
pushf
pxor
fidivrs
jmp
cmpl
mov
pop
out
cmp
dec
ljmp
jp
mov
stc
jp
mov
mov
xchg
fs
push
jno
cmpsb
lcall
pushf
and
xchg
jb
pop
jecxz
dec
xchg
ja
ss
inc
cmp
sbb
inc
rcrl
jmp
and
push
cmp
lcall
add
adc
mov
dec
and
dec
lea
mov
pop
cwtl
lods
lock
outsb
push
add
xor
lahf
mov
movsl
js
sub
push
ljmp
mov
sbb
testl
jb
cmp
mov
sbb
daa
fcomp
imul
inc
aaa
adc
sub
lret
and
add
test
sarl
jge
aaa
mov
xor
das
scas
or
sbb
divl
cmpb
mov
jp
fxch
push
leave
mov
cwtl
jmp
pop
mov
stc
jg
xchg
das
jne
sbb
imul
pop
mov
cwtl
mov
adc
loop
adc
data16
out
js
stos
jno
xor
jl
add
std
push
pop
inc
mov
sbb
into
xchg
jmp
mov
mov
imul
or
shl
pop
imul
adcb
divl
cmp
pop
jg
pop
icebp
fs
adc
dec
cmp
jns
pop
vhaddpd
mov
cs
xchg
dec
cs
mov
mov
pop
ja
pop
mov
insl
lock
and
add
scas
mov
cltd
jb
inc
lret
jmp
je
and
stc
pop
cmpsb
and
mov
cmp
push
mov
mov
mov
adc
loope
fisttpl
ficompl
cli
aam
mov
mov
xor
ds
adc
pop
mov
pop
jle
imul
mov
add
xchg
mov
repnz
outsl
push
fidivrl
inc
subl
insl
test
std
mov
xchg
and
lcall
mov
rorl
pop
dec
mov
leave
jge
rolb
mov
and
std
mov
sbb
insl
cmpsb
xor
jbe
pcmpeqb
mov
cmp
aam
mov
outsl
out
fildl
les
and
mov
inc
jp
jl
arpl
jne
jnp
ret
pop
popf
xchg
push
and
pusha
inc
lods
and
stc
movsl
inc
adc
jne
imul
and
adc
enter
and
push
xor
jmp
addb
movsl
popf
xchg
sub
sbb
bound
pop
out
rolb
fs
cmpsl
test
push
xchg
popf
or
push
cli
je
jecxz
mov
ja
loope
pop
cmc
lret
sub
repnz
and
jg
es
sbb
bound
insl
fnstenv
sub
cltd
pop
xor
cwtl
adc
push
bound
loop
ret
les
inc
cmpsb
ss
sub
jg
jge
adc
lods
fstpl
and
mov
sub
mov
push
cmp
call
cli
cmp
aam
push
movsb
movb
mov
out
nop
dec
cmp
insb
mov
lock
pop
mov
fsub
mov
shrl
and
test
jnp
push
sub
bound
sbb
shll
jbe
test
sahf
sbb
dec
add
mov
sbbb
or
scas
cld
jae
push
jl
or
popa
mov
add
pop
test
jne
cltd
mov
lock
adc
jo
sbb
dec
in
popa
pushf
sbb
dec
dec
leave
negl
test
scas
arpl
movb
jb
inc
jb
adc
dec
mov
sub
movsb
add
or
dec
jne
xor
inc
sub
in
or
xchg
scas
gs
cmp
pop
shll
xchg
push
stos
inc
sub
popa
aad
adc
inc
dec
out
dec
and
movsb
sbb
mov
pop
or
dec
mov
cmp
test
in
inc
sub
in
or
insb
inc
loopne
pop
out
sub
pop
cwtl
add
mov
lea
sti
hlt
jmp
dec
inc
mov
out
xor
sbb
dec
mov
push
shr
cld
add
notl
es
adc
inc
cmpsb
jbe
xor
cmp
insb
hlt
mov
xor
popl
leave
dec
fs
and
dec
imul
lock
cli
nop
test
scas
rorb
mov
shll
hlt
imul
in
out
data16
fwait
push
cmp
mov
jo
xchg
imul
pop
add
in
loopne
fdivs
lods
dec
inc
push
fdivs
lds
sarl
push
sub
mov
outsl
sbb
xor
fxch
out
shrl
rcrb
bound
out
sbb
jp
pop
scas
js
cmp
scas
push
pop
call
out
rcrb
fstpt
sub
fimuls
lret
iret
test
popf
xor
test
cmpsb
dec
pop
dec
mov
jb
rorl
iret
enter
pop
dec
xchg
cmc
nop
jns
in
lcall
movsl
inc
adc
imul
dec
push
sbb
xchg
ds
mov
inc
lods
loope
mov
xor
pop
orb
addb
jae
jle
or
or
or
xor
xchg
pop
aas
adc
orps
pop
or
sbb
mov
xchg
xlat
cmpsl
cmpsl
add
aam
jnp
dec
nop
popl
das
push
es
scas
inc
repz
enter
jle
cmc
pop
mov
lock
test
imul
loope
xchg
and
aaa
jb
arpl
daa
loopne
fldl2e
aad
or
jl
pop
stc
jnp
or
push
add
leave
adc
cltd
rcll
filds
jno
lea
mov
xchg
int
cmp
push
push
xor
mov
in
incb
das
pop
cld
xchg
fisubl
push
jl
xchg
xchg
sbb
xchg
xor
and
out
popf
sar
aaa
mov
imull
imul
nop
push
xor
dec
mov
xchg
lret
push
adcb
mov
pop
jbe
and
push
adc
in
dec
jno
das
and
test
and
rclb
rclb
daa
push
add
xchg
aad
push
xchg
gs
js
jg
jo
fsts
arpl
sbb
jecxz
and
xchg
sub
mov
or
push
pop
sbb
cmc
or
out
xchg
sbb
aam
xchg
sub
jae
in
addr16
jg
sbb
stos
sbb
lea
add
int3
xchg
mov
push
insb
jp
pop
push
lret
xchg
out
shl
push
aad
std
das
sub
push
lcall
adc
xchg
popl
push
mov
ds
push
cmp
lcall
push
push
rclb
and
into
dec
cltd
sahf
pop
cld
and
jbe
lea
lret
push
hlt
pop
stos
add
pop
scas
rcll
xor
mov
mov
out
mov
add
add
imul
mov
dec
jb
fdivrp
ja
lahf
jns
popf
mov
stc
ss
push
xchg
sub
adc
pusha
cld
js
hlt
sahf
adc
test
arpl
pop
xor
clc
push
mov
arpl
rcrb
loop
mov
dec
inc
xlat
ret
dec
ds
adc
mov
inc
stos
dec
inc
adc
lahf
out
in
mov
into
lcall
jge
psubw
stos
aaa
lea
push
cmpsl
pop
aas
scas
jmp
cld
sbb
cld
xchg
subb
cmp
dec
cwtl
sbb
addr16
ds
or
das
lea
rorl
in
mov
add
mov
arpl
in
daa
mov
mov
mov
mov
insl
pop
jnp
xor
insb
mov
shl
sbb
hlt
jnp
loopne
out
std
pop
notb
push
mov
sbb
push
jae
fldl
pop
scas
sar
loopne
setle
jo
sub
das
mov
xlat
push
icebp
iret
nop
mov
negb
mov
hlt
fimuls
cltd
inc
mov
dec
aad
lret
mov
mov
jb
aam
insl
or
mov
enter
stos
mov
icebp
inc
int3
ficoml
xlat
popf
push
and
rolb
push
sbb
in
in
stos
pop
sbb
orl
test
arpl
push
dec
pusha
and
pop
mov
jle
and
push
inc
js
jno
xchg
cli
nop
sub
cmpb
scas
dec
jbe
push
dec
add
xchg
and
or
cltd
sub
js
xchg
cli
jo
cwtl
in
add
and
mov
mov
shrl
pop
sbb
sarl
aaa
icebp
cmp
sub
or
dec
mov
pop
mov
mulb
sub
lods
sub
push
fs
cmp
push
xor
mov
stc
movsl
aas
rcr
dec
pop
pop
aam
cmp
fs
inc
pop
push
je
aad
mov
mov
fadds
xchg
cwtl
xor
sbb
push
clc
dec
push
inc
push
mov
ficoms
iret
pop
test
cmp
js
and
mov
mov
mov
sub
andb
and
ficompl
insb
lahf
sbb
inc
gs
inc
push
aas
rolb
bound
ds
repnz
xchg
jmp
mov
mov
ja
aaa
and
lds
mov
gs
mov
in
push
dec
sbb
push
lret
repnz
cmp
cmpb
pop
cmpsb
push
lahf
jge
dec
xchg
sbb
das
xor
je
inc
imul
sub
iret
in
mov
mov
adc
or
cmp
xchg
nop
push
sti
add
addl
repz
or
push
mov
xor
xchg
std
in
mov
out
test
xor
cltd
pop
imul
dec
gs
lods
cs
bound
xchg
clc
add
std
ret
and
sub
addr16
xor
sub
xor
shll
inc
fcomps
movsb
push
xor
lock
and
or
add
dec
cld
sbb
xor
pop
mov
fwait
xor
push
cmp
adc
jbe
jnp
mov
loopne
ds
xor
leave
and
lock
mov
inc
inc
arpl
insl
mov
mov
mov
jl
cmp
loope
cmpl
sti
call
aas
or
gs
cmp
jge
mov
int
icebp
movsb
mov
imul
fnstenv
mov
rcr
addb
dec
test
cld
dec
addl
ja
mov
push
mov
or
mov
push
add
shrl
cmp
loop
mov
jo,pt
mov
adc
push
rolb
cmpsl
or
pop
andb
push
pop
push
jl
frstor
lret
mov
outsb
mov
push
insl
mov
decl
fnsave
mov
adc
inc
int
push
xlat
inc
and
or
ret
add
loop
imull
fs
or
jmp
push
jge
test
movsl
test
push
lods
popl
fwait
adc
je
mov
push
adc
pop
xor
dec
inc
stos
add
cmp
sti
popa
mov
adc
hlt
push
or
pop
or
dec
lcall
stos
scas
pop
xor
xchg
mov
add
imul
jecxz
add
mov
shrb
lcall
pop
hlt
add
imul
mov
stc
gs
aas
outsl
lock
fdivs
or
or
xor
xor
cmp
mov
cs
cmp
inc
int
inc
incb
adc
cmp
jp
jns
push
mov
adc
sbb
negl
jle
xchg
lods
mov
scas
es
push
cltd
ret
jecxz
jmp
push
scas
pusha
arpl
jb
add
jge
cwtl
or
shlb
ret
and
cmpsb
imul
fcomip
pop
mov
outsl
fbld
nop
shll
mov
movsb
jmp
ja
test
inc
ret
movsl
movsl
jnp
push
push
pop
jo
mov
mov
fsts
push
test
out
or
mov
dec
add
divb
cld
cmp
clc
xor
pop
test
xchg
rorb
push
js
mov
out
fistpl
xchg
push
sbb
mov
xlat
xchg
and
dec
add
popa
cmp
inc
scas
or
sub
pop
push
mov
xlat
cwtl
insl
movsb
outsl
pop
jmp
xor
mov
lea
lods
or
cwtl
xchg
adc
cltd
inc
cmp
clc
pop
mov
add
mov
mov
adc
sbb
mov
loope
ret
adc
ud1
fmuls
xchg
outsb
aad
push
lods
in
insb
dec
aas
mov
lds
sbb
outsl
or
sub
out
in
mov
and
dec
jecxz
sbb
adc
fnsave
bound
stc
int3
push
pop
fucom
mov
sub
out
test
mov
pop
jle
lret
ret
jno
je
sub
sub
test
add
in
jnp
insb
loope
fmul
das
sbb
jns
int
and
daa
mov
mov
dec
decl
or
sub
xchg
inc
cwtl
and
lret
aas
daa
adc
int
xchg
jmp
popf
stos
scas
stos
les
lahf
fidivrs
sahf
in
adc
in
jno
mov
sti
sub
cltd
lods
push
push
xorl
mov
mov
jmp
in
mov
xchg
test
mov
mov
jl
dec
ds
mov
pushf
cwtl
iret
mov
add
dec
pop
mov
lahf
inc
inc
aad
das
popl
ljmp
add
sbb
xchg
addr16
dec
and
mov
sbb
in
lea
cwtl
cmc
jb,pt
imul
lret
lret
sub
pop
jecxz
jne
das
xchg
insb
aad
into
xor
mov
bound
adc
push
mov
das
xchg
push
sti
fnstsw
nop
xchg
cmp
mov
push
cmpsl
mov
add
push
int
and
pushf
pop
mov
lret
ja
into
fidivl
jg
jno
push
adc
xchg
rclb
cmp
push
add
jo
xchg
stc
jg
push
das
cltd
or
cmp
jns
loop
cmpl
sbb
jl
fs
bound
cmp
rcrb
inc
mov
pushf
jp
push
fwait
stc
mov
ljmp
or
sti
rclb
sbb
xchg
dec
and
sbb
js
jne
dec
inc
mov
pop
pop
adc
jp
into
jne
pop
jne
or
jns
dec
and
pop
xchg
mov
fsts
outsb
ja
nop
roll
cmp
test
mov
imul
movsb
loop
xchg
adc
cmp
add
fs
mov
inc
jge
jg
out
int
or
dec
aas
add
push
in
cmp
mov
sub
addr16
jp
push
inc
mov
mov
xor
sbb
sbb
lods
test
jbe
cmc
push
xchg
flds
rol
cmp
or
inc
add
xchg
cwtl
ja
and
push
dec
jecxz
stos
rcrb
mov
push
notl
in
popa
add
xor
and
or
pop
xor
test
dec
xor
cmp
dec
orl
fadds
adcb
fsts
in
aaa
ja
int3
std
fisubs
fwait
loope
scas
stc
dec
sub
stos
orb
mov
jp
cmp
ds
adcl
dec
mov
sbb
loop
push
in
mov
add
movsl
mov
push
pop
and
mov
and
lock
jge
xor
or
cmp
pop
mov
daa
xchg
mov
cmp
and
cmp
push
fcomps
jbe
xchg
std
stos
add
enter
sub
jno
dec
sbb
jo
dec
aad
fwait
sub
addb
jb
mov
cmp
sub
and
push
aas
sub
mov
repnz
loop
dec
or
sub
lahf
cmp
cmp
ret
leave
nop
pusha
cltd
std
mov
or
jmp
xor
and
jp
enter
std
fbld
push
outsl
cs
sub
add
push
js
sub
inc
stos
lcall
sti
xchg
add
dec
nop
add
cmpsb
xchg
lds
add
xor
movsl
mov
jo
stc
cmp
push
out
jecxz
jnp
int
stos
push
dec
ret
cmpsl
dec
sbb
push
cmp
test
xor
add
imul
shll
dec
test
xchg
gs
roll
push
mov
nop
jnp
into
jns
mov
fcompl
xchg
andl
add
inc
adc
or
mov
jo
es
xchg
push
add
in
jp
cwtl
xor
mov
mov
pop
call
push
cmp
cwtl
jne
dec
sbb
or
ficomps
scas
sub
sbb
fidivl
push
jns
popa
decb
sbb
orb
push
movsb
pop
hlt
fisubl
jnp
add
shlb
jnp
in
xor
mov
js
mov
das
mov
popa
xchg
jmp
dec
mov
pop
jmp
xchg
out
dec
scas
and
xor
mov
dec
jbe
push
adc
loope
les
jno
lods
or
dec
sbb
inc
inc
cmp
shll
jb
aas
inc
mov
cmc
push
rcr
cltd
adc
mov
jge
js
movsb
lods
lds
ret
xchg
jmp
out
mov
add
jo
imul
fisubl
push
out
or
mov
push
in
les
cmp
jbe
test
jnp
jnp
pop
and
or
add
push
aas
cmp
pushf
sbb
adc
sti
lret
or
xchg
call
nop
dec
xchg
xor
jb
cmp
insl
stos
notb
pop
push
sarl
sub
mov
ret
imul
sbb
mov
xor
imul
push
test
out
dec
fisubs
pushf
push
into
repz
lods
aaa
jno
mov
in
xchg
jge
pop
push
xor
lea
sub
sub
adc
or
adc
or
pop
lods
mov
jge
fisubrs
hlt
lcall
xor
rolb
mov
cmp
sbb
aam
cmc
mov
mov
dec
popf
jns
js
sub
std
iret
ja
sbb
aam
pop
push
gs
mov
mov
pop
lret
cwtl
sub
or
pop
fs
cmp
add
add
push
cs
daa
push
stos
scas
adc
nop
sahf
imul
addr16
jbe
bound
push
add
sub
fstl
pop
xchg
test
fwait
inc
sbb
pop
mov
push
clc
inc
in
mov
mov
and
ljmp
jmp
mov
jo
or
push
sub
push
add
and
sbb
add
popf
dec
adc
inc
out
xor
sahf
jl
mov
jnp
cmpsb
jl
xor
lcall
into
and
or
frstor
add
inc
test
inc
jo
sbb
jae
jecxz
adcb
cmp
sub
imul
shlb
add
pop
mov
xor
sbb
push
out
pop
or
push
mov
xor
xchg
mov
insb
jbe
pop
sub
mov
cwtd
jo
outsb
xlat
jae
push
cmp
es
das
shll
movsl
je
in
nop
and
andb
das
or
inc
mov
dec
xchg
ret
repnz
ljmp
adc
in
dec
push
ljmp
xchg
cmpsl
movsl
clc
lods
loopne
mov
fs
rep
jno
push
in
add
jbe
mov
push
push
mov
xchg
je
bound
pop
cltd
stc
cmp
into
and
addb
lods
mov
in
aaa
mov
cld
push
jae
test
js
rcrl
or
loopne
loop
cli
sub
push
adc
pop
cli
add
hlt
mov
mov
andl
push
pop
inc
adc
xlat
in
mov
mov
adc
sub
jns
aam
and
inc
push
mov
imul
decb
rorb
lret
lcall
sub
pushf
insl
mov
dec
movsl
mov
pop
decl
rclb
dec
bound
js
sub
xchg
shr
cmp
mov
xchg
repz
and
dec
mov
lods
sbb
mov
mov
sub
jne
sbb
bound
cmpsb
pop
rol
and
adc
fistpl
or
out
mov
sub
arpl
xlat
or
sub
xchg
cmc
dec
pop
sbb
mov
xor
pop
ds
sbb
in
xchg
push
int3
or
bound
in
xchg
jge
shll
ret
stmxcsr
mov
stos
cmp
fmul
lret
cmp
std
xchg
or
mov
aaa
mov
loope
xlat
inc
add
add
xchg
push
dec
pusha
sbb
or
ss
fnstsw
pop
xchg
and
rcrl
inc
sti
inc
push
stc
mov
dec
push
push
mov
lds
popf
repz
mov
aad
pop
and
sub
jge
adc
push
fisttpl
add
mov
add
fcmovnbe
sub
xchg
mov
and
xor
mov
add
lcall
sub
int3
jbe
add
push
ficoms
jmp
and
xor
mov
xor
insl
jno
test
mov
add
mov
int3
mov
fistpl
mov
xor
xchg
stc
cmp
push
inc
bound
out
daa
in
adc
mov
adc
pop
xor
pusha
mov
sbb
test
aam
or
dec
daa
or
jb
mov
cld
or
lods
lret
jg
push
pop
addr16
stc
xchg
pop
testl
arpl
mov
push
mov
xchg
inc
inc
lock
mov
push
int
mov
pushf
cwtl
sti
repnz
xorl
bswap
inc
int3
jnp
jmp
ljmp
in
push
out
mov
stc
add
mov
push
pop
mov
ljmp
mov
test
push
sahf
sar
pop
mov
out
cmc
jns
jbe
jl
sbb
and
cmp
jbe
bound
cmp
push
lahf
and
mov
mov
jmp
xchg
call
jmp
add
cli
jb
push
insb
inc
in
xchg
xchg
pop
call
mov
pop
aam
aam
hlt
or
int3
ret
fs
hlt
sbb
xchg
stos
les
enter
imul
dec
xor
mov
jmp
sti
dec
adcb
das
jp
and
mov
test
mov
shlb
sub
je
or
jmp
xchg
stc
pop
in
sbb
rorl
xchg
and
jle
pop
test
addr16
into
into
subl
and
test
das
mov
sbb
leave
stos
push
or
xchg
cs
in
mov
test
mov
mov
sub
pushf
lret
mov
in
xchg
adc
call
jbe
and
imul
adc
pop
xor
cli
stc
rorb
mov
sahf
movsb
gs
push
xor
sub
lea
xchg
or
decl
test
or
mov
cmpsl
and
movsl
and
or
ljmp
int3
popa
or
dec
adc
xchg
test
mov
jge
jbe
loop
add
cmp
add
push
movsl
pop
adc
adc
shl
dec
outsl
cmp
hlt
repz
in
lock
pusha
mov
rorl
hlt
push
decl
fcompl
push
popf
lahf
jecxz
pop
sub
stc
aas
sub
imul
ror
sar
add
pop
xor
enter
test
addb
add
cltd
xchg
and
sub
or
xor
call
xor
ja
lret
mov
adc
dec
inc
ret
cld
fwait
iret
adc
jg
aad
cmc
sahf
ja,pn
mov
ret
ja
xchg
repz
push
notb
ret
mov
jae
xor
fldt
mov
jns
adc
nop
or
jge
add
push
mov
idiv
sub
iret
mov
add
repnz
jo
dec
dec
sub
rcl
subb
enter
std
in
sub
xchg
dec
mov
adc
xchg
enter
cmp
test
push
into
rcll
or
xor
in
pop
jl
mov
mov
cli
mov
sub
mov
xor
inc
xor
imull
cmp
dec
mov
push
or
pop
shrb
push
jp
dec
or
jae
pop
jns
jnp
mov
jbe
mov
dec
jnp
lods
stos
in
ss
iret
and
adc
sub
iret
inc
scas
rorl
int
dec
jl
in
jnp
pop
and
mov
jge
in
mov
test
or
xchg
sti
hlt
add
shrl
fmuls
push
in
mul
xor
sahf
fs
imul
xor
scas
mull
push
and
aad
fsubrs
pop
mov
aas
xor
add
push
loope
sti
loopne
rolb
jg
sbb
bound
xchg
nop
ja
movsl
xchg
insb
mov
stc
sti
jb
and
cmc
push
cmp
adc
cs
push
pop
adc
push
sub
loope
test
push
rcrl
adc
adc
ja
pop
xchg
fmulp
mov
sub
addr16
inc
mov
aam
adc
mov
push
call
icebp
add
adc
mov
mov
adc
mov
push
aam
mov
mulb
jns
popa
mov
scas
fidivs
stos
inc
sti
rcrl
mov
leave
add
ret
cmp
pop
sbb
xchg
xchg
shll
in
xchg
sbb
dec
ficomps
loope
mull
sbb
in
popf
mov
push
xor
cli
scas
and
insl
push
and
lahf
dec
adc
dec
inc
lds
or
in
mov
inc
cmp
push
imull
stc
aaa
dec
sbb
fldenv
sub
pop
adc
push
scas
mov
cs
scas
mov
dec
jb,pt
xchg
push
js
xlat
pusha
pop
leave
cs
cmpsb
pusha
movsl
or
inc
call
xor
jno
enter
xchg
ret
out
ss
sahf
loop
push
lds
pop
clc
pop
and
inc
pop
jbe
subl
nop
jmp
out
push
push
insb
jo
xor
xor
mov
dec
call
jno
data16
scas
push
leave
adc
mov
push
push
inc
dec
mov
pusha
mov
push
jo
pushf
inc
mov
cmp
out
sub
cmpsl
mov
inc
inc
mov
mov
push
mov
dec
test
push
xchg
stos
out
loope
into
iret
lret
aaa
mov
cmp
dec
xchg
pop
movsl
inc
mov
cmpsl
cwtl
inc
mov
mov
jmp
ror
cli
sbb
movsl
dec
fwait
gs
pop
aam
mov
sbbl
push
icebp
je
dec
mov
mov
cld
test
and
es
dec
dec
imulb
add
mov
pop
or
add
test
repz
pop
daa
jg
cmp
pushf
adc
aas
addr16
loopne
inc
xor
aam
mov
sbb
mov
xchg
xchg
mov
mov
sub
test
imul
addr16
mov
pop
cmp
lock
test
das
outsl
mov
stos
pushf
mov
stos
sbb
in
xchg
jecxz
adc
mov
add
inc
sub
mov
inc
and
inc
je
cmpsl
jae
aas
jne
outsb
and
jne,pt
out
leave
jecxz
adc
or
test
popf
xchg
cmp
lcall
pop
jns
adc
xchg
add
ljmp
test
pop
pop
aad
push
popf
std
xor
mov
xlat
stos
cld
xor
push
cmpsb
xor
pop
jae
inc
clc
jg
andb
xchg
xchg
adc
sarl
adc
jge
inc
and
mov
cmp
adc
hlt
adc
stos
sub
lock
push
gs
pop
popf
lcall
mov
cmp
pop
pop
sub
into
mov
pop
lcall
test
sbb
inc
test
sbb
in
std
and
dec
mov
stos
cmp
je
cltd
sub
in
int3
lahf
adc
test
xchg
add
jl
cs
pmullw
push
imul
xlat
or
lock
sti
sub
sbb
aaa
sub
es
test
cmp
add
push
cmpl
cmc
std
out
addr16
iret
cli
sub
fnstsw
in
push
and
dec
stos
xor
mov
lods
lcall
cs
fcomps
enter
inc
fildll
popa
mov
fld
cmp
cmp
and
les
mov
fmuls
jno
mov
jp
jecxz
push
and
imul
mov
mov
les
xchg
mov
push
inc
test
push
imul
sbb
mov
and
xor
and
cmpsb
cmpsl
insl
cmp
and
fcomps
repz
nop
orl
sub
ret
push
popf
sti
fistl
cmc
sti
xchg
lea
cmp
cmpsl
inc
pop
lds
mov
jne
mov
push
mov
lock
jnp
scas
movsl
jge
call
lds
mov
mov
push
jp
jb
popa
sbb
mov
inc
mov
fstpt
movsl
loop
ljmp
in
or
mov
cltd
aas
loopne
mov
xchg
inc
adc
stc
arpl
or
dec
xchg
cmp
jbe
push
push
pop
gs
sub
jno
push
and
rcpps
insb
xor
dec
mov
or
pop
int
or
jns
sub
test
adc
push
enter
repz
xchg
jbe
mov
in
es
mov
mov
movsl
xchg
ffree
out
fimuls
stc
js
dec
inc
sbb
outsl
sub
test
lret
imul
jbe
xchg
sbb
or
lret
pop
mov
andb
fwait
gs
and
cwtl
jmp
jmp
ljmp
leave
and
hlt
out
imul
outsb
out
cmp
pop
lcall
cmp
or
push
fadds
movsb
dec
shrl
ret
popf
mov
or
xor
pushf
incb
jge
sbb
push
jne
jns
pop
cmp
xchg
clc
stc
sbb
xor
adc
push
fwait
jle
fs
clc
jb
scas
test
xor
xor
stos
stos
dec
xlat
xor
and
add
fisubs
and
pop
mov
mov
jmp
call
mov
pop
movsb
sub
mov
js
dec
stos
scas
dec
add
pusha
fcomi
repz
lret
push
inc
jns
aas
push
inc
shl
and
loop
test
xchg
cmpsl
js
hlt
sub
faddl
aad
mov
pop
popa
andl
lret
mov
in
jo
test
xchg
and
jae
out
shl
xor
and
add
sbb
fistl
pop
aaa
adc
pop
lods
push
mov
pop
cmpb
adc
push
je
pop
sbb
hlt
push
cmpsb
and
mov
xchg
outsb
mov
test
cwtl
fdivp
mov
or
hlt
lock
dec
lods
pop
lret
push
lods
pop
call
mov
pop
aam
aad
gs
mov
jecxz
pop
pop
or
cmp
movsb
call
out
sbb
cmpsl
insb
lret
sbb
cmp
mov
and
mov
scas
cmp
cwtl
push
out
dec
jecxz
adc
push
inc
jno
and
sub
ret
mov
jbe
pop
fisttps
or
nop
fucomp
in
pop
lcall
adcb
pop
sub
mov
sahf
popa
clc
das
das
shlb
xor
stos
push
sbb
mov
dec
and
fiaddl
adc
scas
pop
stc
inc
stos
fnclex
and
xchg
iret
adc
sub
xor
dec
xchg
mov
jp
cmpsb
xchg
mov
mov
imul
notb
mov
mov
xorl
hlt
shl
test
aas
and
xor
and
add
out
jae
out
push
jmp
cltd
add
cmp
mov
pop
sbb
sub
mov
jl
jbe
out
in
stc
aam
mov
push
in
je
and
sbb
scas
in
cmp
outsl
mov
mov
push
adc
mov
test
dec
xchg
in
nop
or
push
or
leave
popf
push
mov
lea
cmp
and
repnz
xor
dec
scas
hlt
and
test
jae
or
shl
rcl
cmp
mov
pop
imul
jp
or
inc
hlt
mov
dec
out
rcrb
je
inc
inc
aad
call
aam
mov
out
rolb
mov
andl
test
pop
dec
push
jbe
clc
fiaddl
mov
cmp
pop
push
les
adc
xchg
cmp
xchg
add
dec
push
aaa
inc
nop
jo
mov
aad
imul
mov
ss
inc
add
jge
repnz
outsl
daa
in
js
pop
adc
ljmp
dec
lods
sbb
and
jno
add
and
sbb
mov
in
adc
xchg
push
mov
es
dec
popf
gs
and
mov
jecxz
int3
pop
xor
outsb
push
push
sbb
ss
jg
popf
fistpll
xor
adc
out
into
xor
adcl
cmp
push
fisttps
shll
adc
mov
repz
gs
sbb
sbb
sbb
mov
and
mov
dec
jp
pop
cmp
fistps
add
or
adc
fnsave
adc
fistpl
pop
jecxz
inc
inc
lret
mov
mov
dec
mov
inc
mov
pusha
or
pusha
dec
add
mov
popf
xchg
pusha
in
cwtl
jge
or
xor
mov
and
xlat
jo
test
sbb
sbb
push
outsb
les
sbb
add
jbe
xchg
sahf
cs
movsl
sub
in
xor
jae
loope
in
mov
loope
lcall
sbb
and
test
ja
xchg
xchg
sbb
inc
push
clc
cltd
je
fistpll
filds
test
repz
test
xor
mov
out
sub
adc
repz
lret
movsl
pop
jle
mov
xchg
lret
dec
dec
or
push
mov
lods
mov
lahf
mov
or
cmc
or
rcrl
out
fstpt
aaa
cmpsb
push
imul
jg
outsb
shlb
xchg
dec
stos
add
cmp
imul
in
mov
jo
iret
push
adc
sbb
and
pop
push
add
inc
xchg
iret
push
jne
mov
xchg
jmp
sub
jnp
sub
daa
leave
stos
pop
pop
xchg
add
repz
sub
adc
xlat
mov
mov
dec
pop
mov
popa
mov
insl
hlt
aam
pop
jbe
jg
and
push
stos
scas
sbb
test
push
cmp
out
jmp
jbe
push
int3
sti
inc
in
in
xchg
insb
bound
pop
fs
jns
jmp
mov
xor
aas
stos
sbb
pop
jecxz
xlat
dec
sbb
add
stos
add
icebp
mov
nop
add
add
inc
adc
xchg
add
mov
cmp
or
enter
fnstsw
shlb
jp
inc
jle
outsl
arpl
xor
bound
popa
sub
int
nop
rcrb
dec
nop
or
les
inc
sarb
fnstsw
data16
mov
imul
int
int3
cmc
imul
dec
dec
push
bound
fistl
jb
nop
repz
enter
xor
js
pop
decl
fistpll
sbb
inc
jge
and
or
daa
popa
mov
lods
inc
pop
or
push
sub
jae
jge
cmp
cwtl
mov
xchg
pushf
mov
dec
aaa
add
mov
or
inc
das
adc
push
mov
scas
xchg
sbb
pop
dec
dec
dec
and
ljmp
das
xor
hlt
jmp
jmp
adc
lods
or
pop
hlt
and
aam
mov
mov
js
rcll
das
lret
cmpl
xor
dec
sub
mov
mov
jp
pop
scas
pop
and
orl
in
ljmp
iret
lock
mov
mov
icebp
add
push
sbb
cld
jae
dec
outsb
jb
ss
sub
dec
and
pop
mov
xor
sahf
pop
std
call
mov
mov
dec
sahf
je
shrb
test
mov
sub
fidivrs
jle,pn
daa
inc
or
cmpsb
pop
lods
icebp
aad
jecxz
hlt
jg
push
mov
xchg
int
dec
jg
sbbl
adc
cmp
sbb
les
lods
cmpsb
mov
insl
icebp
aad
or
stc
cltd
pop
dec
mov
mov
xor
and
cmp
sub
or
stos
scas
adc
pushf
enter
mov
clc
adc
bound
push
inc
call
lahf
jg
jl
cmp
out
inc
mov
mov
ret
loopne
add
jl
push
mov
call
adc
idivb
xor
neg
mov
dec
and
shl
add
fldcw
jecxz
les
sti
in
incl
in
mov
ja
les
xor
dec
int3
out
mov
imul
and
arpl
scas
fistps
jne
push
ror
lret
fisttpl
pop
stos
int3
sub
mov
lds
shrl
sarb
add
lret
mov
icebp
cmpsl
jmp
js
arpl
jmp
and
or
and
xchg
test
negb
icebp
jg
mov
mov
pushf
push
push
xchg
mov
pushf
inc
ss
jbe
insl
push
aaa
notb
jmp
sahf
ds
rolb
sub
jne
xchg
or
stos
mov
or
int
or
rorl
cmpsb
jae
movsb
lods
dec
pop
jns
fcomip
sub
inc
xchg
aas
adc
scas
xchg
or
or
dec
cmp
dec
fidivl
xor
cmp
push
mov
jnp
sbb
in
and
shrl
ret
dec
cmp
mov
push
pusha
jns
inc
mov
stos
std
hlt
xor
pushf
dec
ret
jb
cmp
enter
in
scas
sub
mov
mov
push
cmpsl
cmpsb
xor
sub
adcl
add
call
cli
in
int3
xlat
pop
xor
mov
fildl
inc
jno
lcall
mov
add
adc
lods
mov
js
mov
aaa
out
and
test
aad
jne
cmp
xchg
jne
jle
push
in
or
xchg
xor
repnz
push
in
rorl
and
sahf
xor
push
push
fcoml
mov
mov
pop
iret
fnsave
xor
mov
test
sub
les
nop
mov
jno
sbb
hlt
les
sbb
sahf
pop
xchg
jnp
push
repnz
pop
push
xchg
or
xchg
das
rorb
dec
xchg
or
push
ret
mov
lcall
sarl
jecxz
jo
fwait
push
arpl
aad
pushf
test
mov
mov
xchg
nop
mov
xor
movsl
dec
add
jo
sbb
and
dec
fwait
cwtl
pop
cld
sbb
rcrl
xor
addb
addr16
mov
dec
xchg
sub
mov
cmp
daa
dec
xchg
lret
cld
cwtl
mov
imul
pop
call
adc
bnd
cwtl
mov
aas
rcrb
mov
fistl
dec
xchg
inc
sbb
add
push
insb
insl
cmp
aad
sbb
mov
lea
dec
inc
inc
sbb
cmp
push
sub
cmp
sbb
loope
sub
xor
popa
mov
and
and
jecxz
sub
push
and
dec
and
push
dec
mov
sub
jp
mov
adc
lret
into
ja
ret
into
dec
lods
push
push
fnsave
cmpsl
and
inc
cmpsb
cmpsl
jge
sub
sub
or
jbe
and
push
sub
iret
lods
add
fs
adc
pop
push
je
cli
sahf
xchg
lret
lcall
mov
rorl
je
shlb
daa
lret
adc
cmp
das
and
insb
cli
xor
pop
inc
inc
loope
mov
dec
mov
sbb
mov
dec
pusha
fs
add
cmp
lret
loopne
icebp
push
shlb
fbstp
push
mov
pop
mov
popf
sahf
and
lahf
setns
scas
dec
or
outsb
xor
sbb
fsubr
out
dec
inc
sahf
je
dec
rorl
or
cmc
jne
test
jg
xor
mov
inc
fdivrs
fsubl
data16
jnp
dec
push
or
mov
jg
cmp
shlb
cmp
or
mov
shlb
xor
or
imul
adc
lahf
jmp
cmp
push
cmc
andb
loope
ja
mov
aas
xor
dec
dec
mov
hlt
mov
mov
sub
jb
jl
pop
jge
dec
scas
dec
sbb
imul
stos
enter
cli
xchg
and
cmpsb
lds
test
imul
roll
xchg
jmp
jle
sysret
sub
shl
stos
in
jmp
sbb
mov
rcrl
in
outsl
and
outsb
cmp
out
mov
movsb
or
mov
cmp
aaa
ljmp
dec
cld
cmp
inc
mul
jmp
shll
movsb
pushf
cmpsl
arpl
mov
add
fldcw
add
pusha
push
negb
aad
ffree
stos
clc
aad
add
sbb
out
pop
xchg
cmovae
pop
mov
cmpsb
dec
lock
sahf
push
dec
dec
bsf
test
push
mov
fldenv
into
dec
fwait
push
inc
xchg
push
jg
loop
movsb
adc
fists
sub
inc
out
int
dec
fisttpl
mov
pop
add
filds
js
push
push
arpl
fnstenv
xchg
mov
rcr
in
por
leave
jns
js
add
jg
in
ja
jbe
mov
xchg
cmp
jmp
sbb
mov
sub
out
cmp
pop
inc
add
cmpl
mov
test
or
mov
pop
add
jg
notl
outsb
pop
pop
dec
fsubs
sbb
jno
popa
cs
fs
out
and
jae
inc
int
xor
or
xor
cmpsl
je
mov
jp
and
cmp
pop
lcall
scas
jg
addr16
jnp
push
cmp
mov
push
repz
xlat
and
jno
int3
icebp
xchg
pushw
adc
mov
insl
cwtl
jge
inc
xchg
es
int
add
sub
cmc
jl
mov
repz
jno
shlb
adc
jne
std
sbb
fwait
shrl
cmpsb
call
dec
pusha
aas
loop
lcall
jne
outsb
adc
pop
jmp
and
inc
in
jge
adc
mov
pop
int
push
decl
aad
add
inc
mov
mov
add
pop
pusha
mov
add
pop
test
cli
or
lods
jmp
inc
adc
cmp
xchg
jne
js
push
test
inc
lds
push
sub
add
cwtl
ret
add
inc
pop
push
iret
sarl
out
shl
sti
stc
ss
sbb
pop
fwait
outsb
aas
out
aad
in
dec
mov
jp
lea
push
mov
adc
adc
pop
jnp
push
jbe
das
hlt
pop
mov
imul
lahf
cwtl
and
aaa
jle
test
pop
jge
test
hlt
xchg
cmp
je
mov
mov
scas
enter
cwtl
cmpsb
hlt
and
mov
dec
repz
jecxz
xor
inc
andl
add
aam
pop
push
dec
clc
fidivs
or
inc
das
inc
pop
leave
and
and
pop
add
mov
sbb
push
dec
repz
jo
ss
xor
mov
cld
xchg
mov
dec
fistpl
mov
je
dec
popa
xchg
cmp
out
jmp
and
mov
sub
icebp
xchg
lods
push
shlb
mov
test
lcall
sbb
inc
pop
mov
adc
es
testl
insl
dec
push
dec
leave
ljmp
pop
dec
dec
inc
mov
cltd
rorl
mov
pusha
call
xor
or
fnstcw
imul
imul
pop
fcompl
jae
jecxz
fsubrl
repz
mov
add
jne
test
pop
dec
loopne
jp
insl
fldcw
mov
xor
call
mov
pop
mov
pop
out
mov
mov
dec
test
lods
lock
cli
and
out
mov
pushf
or
pop
test
jo
mov
jne
add
or
daa
cmpsb
mov
inc
and
inc
jo
adc
nop
stc
jo
cmc
sbb
add
dec
sbb
das
enter
daa
outsb
and
cltd
sbb
cmc
int3
inc
mov
xor
or
push
js
cmp
xchg
cmpsl
int3
loope
adc
js
or
inc
pop
or
rorl
sbb
and
inc
adc
cmpsl
daa
je
fwait
test
sbb
push
jg
push
xchg
cmp
pop
lret
add
shrb
shlb
pop
insl
xor
inc
sub
in
test
movsl
sarl
pop
fs
pop
inc
subb
adc
mov
jnp
mov
sub
popf
jle
xchg
cmp
aad
push
mov
divps
sti
lret
mov
xor
xor
push
sarl
dec
sbb
fildl
mov
pop
dec
adc
mov
mov
xchg
stc
xor
in
in
ret
xchg
ret
mov
bound
or
inc
scas
pop
dec
sbb
popf
jno
mov
mov
shr
in
jmp
inc
pop
ss
or
pop
sub
mov
aas
lods
xlat
pop
loope
sbb
push
lcall
xor
shll
nop
sbb
mov
ja
fisttpl
mov
pop
sbb
jne
inc
sar
pop
lret
loopne
mov
pop
adcb
cs
mov
inc
in
mov
cs
cmpsb
xchg
adc
jecxz
jp
addl
lods
pop
lcall
rcll
mov
dec
loop
in
mov
and
jns
xchg
mov
aaa
bound
jo
movsl
pushf
insl
jmp
movb
jo
pop
sahf
jmp
or
mov
addb
dec
sbb
add
sub
stc
popf
inc
and
es
fcompl
in
call
push
aas
icebp
arpl
jp
notl
popa
push
lods
clc
or
pushf
popa
mov
int
add
sub
jge
shll
enter
adcb
std
lret
sub
insl
xchg
cli
cld
mov
push
lea
repz
mov
rcll
idiv
pop
aad
icebp
push
repnz
jb
pop
add
dec
xor
addr16
test
mov
inc
push
call
scas
push
mov
xchg
test
lahf
dec
inc
inc
adc
loope
testl
mov
aaa
loope
xchg
sysenter
dec
inc
inc
and
jg
sbb
push
mov
aas
pop
add
or
fs
xchg
and
or
push
out
andl
es
pop
pusha
mov
inc
pop
mov
sbb
out
ds
insb
js
mov
jno
in
jae
jo
jno
addb
test
cmc
das
adc
dec
cmp
movmskps
clc
adc
jo
push
loop
adc
and
sarl
or
rcrb
cwtl
int3
mov
add
xor
mov
sbb
ret
test
dec
push
out
loope
lea
movb
push
into
mov
xchg
sub
movsb
dec
test
scas
xchg
aad
ret
inc
mov
ret
call
and
mov
inc
mov
in
xor
jns
and
lock
addr16
or
push
imul
in
vcmpsd
mov
mov
mov
fbstp
sti
xor
xchg
or
dec
data16
mov
dec
push
dec
mov
mov
test
xor
push
popf
in
test
push
sbb
lods
jmp
mov
incb
movsl
shll
jo
arpl
add
out
jae
and
lds
push
push
sub
pop
mov
lods
mov
adc
cmp
jle
dec
clc
cmpsb
or
das
stos
mov
or
push
mov
jnp
xor
pop
mov
je
dec
mov
mov
imul
daa
jnp
xchg
jp
cmpb
test
push
xchg
fsubrl
test
lcall
push
or
push
scas
roll
fsubs
mov
andl
dec
pop
xor
xchg
stos
or
pop
sbb
jmp
inc
lds
mov
gs
push
cmp
sub
les
popf
jge
movsl
sahf
push
jo
fsubs
fs
jmp
xor
pushf
push
fsubrs
bound
sbb
mov
pushf
xor
xchg
in
push
jecxz
sbb
ljmp
push
push
adc
pop
mov
adc
and
gs
lods
dec
sbb
xlat
pop
repz
cltd
aaa
pop
outsl
movsl
jnp
stc
sti
pushf
out
add
pusha
pop
or
push
sbb
out
lock
mov
cmp
mov
mov
shl
push
aam
inc
pop
flds
push
nop
pop
into
adc
jg
push
push
div
in
add
xchg
lahf
in
pop
fs
inc
cmpsl
add
or
jae
mov
mov
mov
arpl
jp
mov
std
addb
inc
stos
xchg
xchg
icebp
pop
sbb
adc
jg
clc
push
shll
xor
cmpsb
ret
in
fdivr
cmp
and
jno
sbb
test
jb
push
inc
cmp
in
stos
or
popf
jecxz
out
lods
cs
mov
xor
fmul
fs
lcall
out
test
sti
fnstenv
imul
xchg
fwait
out
dec
cld
outsl
test
clc
cli
dec
fnstsw
data16
out
daa
sbb
jge
dec
ret
sub
mov
jb
jl
jecxz
adc
loope
fucomi
pop
xor
cltd
movsl
lcall
icebp
adc
insl
dec
push
clc
xor
push
ljmp
jns
pop
adc
rep
adc
cltd
or
sub
mov
js
add
mov
ja
cltd
adc
push
shl
aaa
in
decl
push
decb
and
adcl
sbb
imul
data16
mov
lret
outsb
cld
fildll
rcrb
push
xor
rorb
mov
mov
mov
int3
or
arpl
xchg
jp
fidivs
std
pop
push
into
leave
pop
sub
lds
aam
in
out
pop
sub
shll
fistpl
repz
adc
and
mov
aas
fstpl
sbb
inc
mov
scas
xchg
mov
aas
or
js
jecxz
xor
push
jp
inc
sbb
in
sub
and
data16
out
sub
mov
lds
fcoms
jae
loope
nop
js
jmp
dec
jmp
fisubrl
int3
sub
cmp
dec
fnsave
out
xor
ret
aam
push
push
mov
push
add
lret
out
mulb
aas
rclb
push
pop
in
push
sub
jnp
push
add
lods
mov
movsb
repnz
pop
and
pusha
mov
nop
ffree
jae
and
and
inc
ret
xchg
addr16
nop
aaa
repz
nop
sbb
push
jb
xchg
jge
mov
stc
jcxz
dec
push
mov
dec
jne
ljmp
imul
shr
inc
or
jo
aam
sahf
dec
inc
ret
sarl
arpl
scas
std
add
mov
hlt
scas
xor
mov
aam
push
inc
das
shr
mov
fbstp
or
in
or
in
xor
xchg
adc
or
cmp
xchg
pop
dec
mov
lcall
scas
sbb
mov
bound
xchg
aaa
mov
je
es
mov
jl
jge
outsl
add
mov
jne
adc
nop
cmp
repnz
or
dec
testb
adc
clc
mov
lods
lods
push
cmp
and
sbb
pop
test
push
push
add
cmpsb
mov
and
push
fs
dec
aad
repnz
dec
cmp
mov
sub
sarb
inc
xchg
cmp
sti
enter
jecxz
pop
outsb
les
aaa
sub
pop
hlt
fsincos
adc
mov
cmpsb
stos
cmc
mov
jecxz
mov
inc
cmp
int
and
pop
mov
mov
pop
ret
jne
push
jp
and
into
xor
popf
das
xchg
xchg
mov
movsl
cmp
cmp
and
push
or
imul
inc
lods
nop
dec
fmull
mov
aas
mov
push
shl
ljmp
cmp
mov
popf
testl
add
jmp
cmp
mov
jecxz
call
push
fsubrl
movsb
xchg
jbe
add
scas
call
fs
xor
icebp
inc
and
fimull
sti
pop
or
ret
add
xchg
mov
addb
int
insl
cld
add
inc
ret
xchg
sbb
movsl
mov
cld
popf
ror
imul
test
stc
pop
inc
inc
icebp
icebp
in
fisttpl
xor
mov
pushf
or
xchg
sbb
shlb
xchg
sub
sub
adc
cwtl
sbb
pop
push
cltd
ret
jmp
pop
xor
fistps
cmpsl
pop
test
mov
mov
frstor
xchg
rclb
push
sahf
cld
push
lea
mov
lahf
xchg
dec
aaa
fcomip
clc
loop
jmp
hlt
mov
fldenv
or
xchg
jb
push
mov
cmc
push
imul
movsb
dec
inc
ret
push
cltd
mov
shlb
jle
imul
ss
ljmp
mov
push
sub
and
and
push
xchg
dec
cmp
mov
sbb
push
jae
push
cmp
sbb
fwait
add
jecxz
fbstp
adc
jno
xchg
jno
daa
filds
insb
int3
adc
aaa
or
scas
dec
cmc
pop
sti
cmpsl
jmp
push
daa
call
pop
repz
mov
mov
pop
push
push
jns
rolb
inc
cmp
iret
imul
rolb
mov
mov
ljmp
mov
fs
or
or
fistpl
or
sti
sbb
inc
xor
mov
outsl
loope
pop
push
sbb
xchg
nop
in
inc
and
addb
es
mov
jmp
inc
xlat
into
push
sbb
clc
pushf
sbb
and
inc
pop
sub
lds
arpl
imul
repz
mov
lret
gs
mov
push
dec
cmp
dec
mov
dec
dec
roll
and
test
aaa
fwait
test
mov
pop
loope
fildll
cltd
adc
pop
mov
or
fistps
xor
xchg
int3
or
sbbl
call
dec
mov
movsb
push
je
mov
scas
dec
jmp
xchg
jb
mov
outsl
daa
xor
pushf
cmc
insl
jns
push
adc
negl
inc
lds
test
pop
mov
pop
rcll
push
xor
cmp
jg
test
inc
sbb
les
cwtl
roll
adc
repz
mov
cwtl
arpl
or
inc
push
nop
mov
cmp
out
notl
cltd
ljmp
sub
test
xchg
es
test
fiaddl
dec
cmp
decl
aad
daa
sub
je
das
cmp
loope
arpl
outsl
fldt
or
or
inc
sbb
inc
repz
ret
daa
mov
je
pushf
fmuls
repnz
sbb
aas
inc
sahf
sbb
addr16
jbe
adc
inc
mov
pop
sub
mov
adc
xlat
push
cmpsl
std
inc
les
iret
test
out
push
ja
ljmp
push
push
push
sahf
fstps
cmpsb
sarl
icebp
clc
or
aad
faddl
out
mov
mov
loopne
fsubrl
cltd
pop
and
ds
fcmove
or
por
gs
pop
jmp
sub
inc
jne
mov
fucomi
insb
adc
jmp
insl
mov
sub
adc
sahf
dec
mov
lock
jle
or
nop
lcall
push
cld
fdiv
xchg
jg
cmp
xchg
ret
xor
add
ret
pop
or
insl
mov
movsb
test
add
or
insl
enter
jmp
mov
hlt
ja
sahf
xchg
popa
stc
mov
into
out
mov
sbb
lods
andb
nop
outsb
inc
pop
pop
rcl
mov
movsb
movsl
jns
xor
sbb
cmpsb
loop
lret
lret
fs
push
pushf
xor
mov
hlt
xchg
insl
popf
inc
jns
cmp
pushf
jge
pop
sahf
dec
sbb
es
fsubrp
outsl
xlat
je
sahf
jnp
sbb
gs
imulb
idiv
cmp
sbb
cmc
push
cmp
hlt
inc
jp
cli
ret
or
test
cmp
jp
and
sub
push
out
pop
add
inc
loope
cmpsl
xor
jno
sbb
fs
cmpsl
inc
push
mov
xor
dec
add
add
pop
push
jnp
loop
testl
adc
sbb
add
pop
cmp
mov
inc
std
call
jo
dec
pop
aas
fadds
or
cld
int3
sub
pop
int
outsb
js
sbb
rol
mov
mov
push
icebp
and
arpl
pop
and
out
dec
pop
xor
pop
xchg
inc
add
and
outsb
sbb
adc
or
and
psllw
mov
push
cs
mov
jo,pn
push
fidivrl
sub
jp
mov
dec
lock
mov
clc
xor
rorb
fs
int3
divb
test
mov
mov
cmp
outsl
testl
dec
and
mov
aaa
leave
scas
outsb
insl
std
mov
sti
pop
sbb
xor
xchg
push
ss
add
push
dec
std
sbb
testb
clc
push
mov
testb
sub
ljmp
sub
fdivrl
aad
dec
pop
add
push
cs
fnstsw
cltd
icebp
sub
jb
leave
cmp
mov
jns
mov
xchg
mov
pusha
jns
dec
ljmp
mov
xchg
and
add
test
or
cwtl
outsl
imul
lea
add
push
push
xor
loop
call
sbb
xchg
in
cmp
std
sti
sub
popa
pop
test
inc
lds
pop
xchg
in
mov
mov
mov
lret
sbb
nop
cmp
lods
roll
pop
inc
cmpsl
xchg
data16
sbb
insb
or
mov
mov
sbb
or
stos
negb
dec
or
mov
icebp
jecxz
scas
push
sbb
adc
repnz
loope
rorb
loopne
aad
inc
rorb
sub
int3
insb
xchg
mov
je
sbb
mov
imul
imul
dec
sub
orl
add
pop
mov
add
shr
or
inc
push
repz
bound
sbb
xlat
cld
outsl
ds
push
mov
jne
pop
imul
xchg
mov
sub
xor
pusha
out
and
pushl
dec
mov
test
push
out
repnz
jg
mov
xchg
pop
mov
and
out
jmp
mov
dec
sbb
jne
mov
push
popa
hlt
inc
xchg
sbb
jno
xor
cmp
stos
insl
mov
in
mov
leave
dec
movb
aam
sub
outsb
xor
lds
push
je
push
jp
ds
push
jo
int3
mov
pop
mov
lods
icebp
rcrl
mov
add
fidivrs
xor
loop
call
jns
adc
xor
ret
xor
xchg
fwait
adc
insl
mov
mov
cmp
push
shrb
call
daa
test
inc
test
xor
lds
mov
mov
fsubl
xchg
push
mov
dec
fwait
jbe
aaa
and
or
sar
clc
add
insl
fmull
jmp
je
mov
dec
jb
sub
fs
sub
xor
mov
insl
bound
ja
push
int3
ss
xor
push
lds
movsb
sub
gs
xlat
test
dec
sbb
data16
push
shrl
incl
mov
dec
leave
jnp
cmpb
pop
stos
neg
push
pop
cwtl
push
or
cmp
js
sbb
dec
mov
inc
lcall
push
mov
pop
or
xchg
scas
adc
add
aam
fdivs
shll
fcoms
iret
sbb
xchg
enter
push
fiadds
aad
or
addb
pop
sub
cli
pop
in
outsb
mov
adc
icebp
repz
aaa
pop
nop
mov
stos
dec
int3
lret
stos
hlt
icebp
repz
push
mov
andb
adc
out
add
test
aad
jmp
mov
popa
sbb
and
mov
rol
lds
pop
mov
lcall
repnz
jne
scas
adc
sti
aaa
mov
aam
lret
and
je
and
add
out
stc
pop
dec
push
insb
push
mov
sub
mov
dec
lods
je
jb
sbb
mull
popf
popf
mov
sar
repz
sbb
cmpsl
out
push
nop
and
adc
pop
call
testb
and
sub
jl
clc
mov
loop
test
cli
xchg
nop
jb
or
jge,pn
or
lea
mov
js
jne
mov
inc
sub
inc
adc
dec
mov
movsb
pop
jmp
rolb
dec
scas
jp
repnz
sbb
icebp
and
and
pop
and
jl
xchg
test
jmp
bound
lods
jno
jmp
mov
iret
or
sbb
lods
mov
out
push
mov
js
dec
push
push
lahf
pop
push
rorl
int3
out
stc
stc
lahf
lea
xchg
mov
add
jne
mov
dec
das
rcrl
mov
repnz
leave
adc
fs
push
enter
imul
fldt
aam
es
bound
and
adc
mov
lcall
aam
add
or
imul
leave
dec
cmpsb
push
icebp
stos
cwtl
jo
mov
or
and
inc
dec
mov
icebp
ret
xor
or
or
jns
dec
rol
out
sbb
xor
cmp
pop
sub
repz
fdivrs
jno
aas
or
pop
shlb
aas
aas
lods
xor
loop
test
jl
out
lret
add
dec
inc
pop
bound
cmp
or
pop
dec
repnz
adc
jecxz
scas
arpl
fucomp
sbb
mov
xchg
adc
loopne
sub
adc
test
sbb
and
lds
or
push
iret
call
pop
push
outsl
mov
or
sbb
insl
mov
or
cld
cld
inc
mov
sub
xchg
jmp
mov
mov
and
pushf
jno
jle
xchg
xchg
pusha
nop
in
cli
aas
or
push
xchg
in
in
mov
xor
sub
imul
in
repnz
mov
out
jge
and
out
shrl
cwtl
in
imul
and
loopne
xor
push
lret
mov
scas
imul
in
push
imul
fcomi
or
arpl
inc
push
add
iret
xchg
sub
pop
xchg
push
shlb
dec
mov
aas
mov
enter
les
mov
fmulp
cmpsl
movsb
mov
fcompl
dec
dec
xchg
jmp
dec
insl
mov
fsubrl
in
fmuls
push
stos
inc
mov
sub
in
mov
mov
pop
add
jo
jl
jl
jmp
xlat
and
clc
or
mov
ljmp
fbstp
cmp
fimull
dec
mov
push
fidivrl
imulb
xchg
lret
xor
lock
nop
punpcklwd
data16
pop
and
lahf
mov
test
enter
nop
add
insb
jl
sub
and
mov
ficoml
dec
pop
sub
data16
cwtl
pusha
fdivrl
clc
outsl
xchg
sahf
inc
rcrl
lods
or
addl
pop
into
test
arpl
xor
out
fldl
inc
mov
mov
loopne
or
sbb
shlb
push
dec
hlt
and
in
outsl
fbstp
sub
jne
pop
fisttpl
xchg
mov
adc
jb
push
xor
int
cmp
mov
sbb
sbb
xor
sar
fs
cltd
and
loope
xor
jp
add
int
lods
or
loop
stos
out
iret
push
mov
inc
jle
adc
int
cli
test
outsl
inc
subl
dec
fidivs
or
jecxz
cld
outsl
shrb
pop
lcall
xchg
push
es
call
and
inc
mov
daa
aas
mov
pop
rorb
push
xchg
sbb
stc
sub
jae
push
add
cli
mov
xchg
subb
xchg
nop
je
mov
inc
outsl
sti
mov
push
mov
ds
pop
pop
ds
lret
or
jecxz
push
add
adc
sub
mov
bound
negb
aam
jb
inc
sbb
jle
test
push
inc
adc
mov
popa
mov
lret
lods
jne
pop
testl
cmp
mov
push
and
fcompl
ret
popf
jne
xchg
add
outsb
dec
mov
pop
das
lret
sti
lcall
xor
dec
and
test
mov
and
and
out
add
add
and
loopne
insl
mov
push
adc
adc
mov
aas
sub
cmp
jl
xor
jnp
decb
xlat
jle
dec
sbb
int
ljmp
add
addr16
inc
repz
xor
test
pop
shlb
pop
andl
out
lcall
imul
pop
push
ss
jno
push
nop
roll
xchg
ss
or
pop
movsl
add
sbb
adc
and
xchg
sub
stos
xchg
mov
test
das
push
sub
enter
pop
aas
leave
mov
push
emms
lcall
movsl
daa
lahf
add
or
sub
mov
jo
scas
xchg
xor
hlt
ror
int
std
out
aam
outsl
test
xchg
rcr
call
sub
xchg
xchg
xchg
or
mov
sbb
les
and
icebp
and
xchg
addb
push
xchg
pop
fcoml
jl
sub
lcall
idiv
nop
jno
adc
mov
mov
aad
mov
cmp
vpsubb
and
or
movsb
xchg
sbb
push
sub
into
and
mov
test
test
add
xchg
dec
mov
lea
daa
rclb
pop
mov
dec
sub
or
imul
stos
push
mov
inc
mov
mov
push
bnd
jb
jg
push
jl
xor
fsubl
ret
in
loopne
mov
jno
scas
movsl
mull
pop
cmp
test
js
dec
nop
out
inc
imul
or
xchg
xor
mov
sub
fistl
push
jno
lock
mov
in
lods
ficoms
fdivl
call
daa
shll
lret
mov
outsl
outsb
push
mov
popa
sub
daa
cmp
add
movsl
sub
xor
mov
fcom
pop
jecxz
jl
and
pop
xor
arpl
dec
inc
fwait
mov
in
adcb
pop
shl
xchg
out
pop
mov
xchg
mov
mov
or
xorb
jge,pt
je
mov
push
jae
movsl
icebp
and
adc
fstl
cmc
pop
push
jp
leave
clc
and
adc
popa
cmc
lock
sarl
fcomip
or
add
andb
faddl
int3
aam
loop
cmpsl
dec
test
aad
jae
mov
ret
enter
fs
jb
or
push
cld
lods
sti
imul
inc
add
arpl
cmc
push
loope
ljmp
and
in
lahf
xor
jl
cmp
mov
jmp
dec
insb
xchg
and
pop
shll
outsl
mov
xchg
xor
cmp
xchg
cmc
lahf
jmp
pop
pop
xor
xorl
mov
ror
movsb
mov
and
cmp
imul
loopne
push
xchg
mov
mov
lret
push
bound
xor
dec
addr16
cmpl
jle
repnz
pop
jmp
jno
sbbb
pusha
scas
push
pop
cmp
movsl
into
cld
push
mov
ffree
cld
xor
fs
jp
push
inc
je
mov
mov
lret
pop
std
aam
pop
pop
adc
loope
xchg
inc
arpl
pop
nop
xor
cmpsb
jbe
and
adc
mov
lcall
cmp
aad
jg
adc
ja
dec
clc
pop
test
aam
jbe
xor
jb
mov
adc
in
out
lea
mov
mov
outsl
push
ficomps
sub
scas
hlt
sbb
out
addr16
mov
frstor
add
adcl
dec
out
or
aas
loopne
push
fldl
adcb
lret
lds
inc
lret
cltd
jnp
jmp
ss
or
addr16
lahf
or
pop
or
jbe
or
cld
sub
jne
pusha
cmp
inc
jecxz
sub
aas
je
xlat
xchg
or
add
popf
ret
lock
ret
icebp
xor
pop
cs
repz
mov
push
mov
mulb
dec
add
mov
or
pop
or
inc
sbb
dec
shlb
dec
arpl
scas
mov
mov
mov
and
pop
xor
ja
add
loop
fdivs
fcomps
int3
cmp
cmpsl
sti
jo
and
dec
sbb
leave
mov
or
inc
imul
aam
push
loop
push
int
in
repz
fld1
push
add
pop
aad
test
clc
iret
jbe
les
push
leave
int3
mov
es
dec
push
fnstsw
or
insl
movsl
mov
bound
inc
in
mov
dec
mov
call
push
cmc
mov
xor
movl
cld
adc
fidivrs
imul
and
xor
jb
sti
inc
rol
inc
loop
mov
out
mov
sbb
xchg
fildll
adc
and
jns
outsl
hlt
outsb
mov
sub
int
arpl
loop
pop
scas
es
push
mov
daa
div
repz
stos
push
int3
icebp
cmpsl
sti
das
out
mov
inc
sbb
in
imul
push
sbb
in
jne
cs
sub
jmp
les
dec
orb
jmp
inc
xor
sbb
leave
jecxz
roll
js
pop
or
mov
movsb
xor
sahf
in
aam
fwait
call
push
mov
pop
xchg
int
push
xchg
mov
mov
je
jecxz
adc
scas
loope
in
mov
cmp
jle
sbb
or
sub
sbb
dec
es
in
mov
adc
pop
cmp
int3
fldt
mov
add
cwtl
fidivs
aad
add
stc
ljmp
and
cmp
rcrb
xchg
mov
sbb
xchg
add
into
sub
fwait
xchg
incb
loop
xchg
icebp
and
aad
pop
lock
pop
inc
ss
sbb
xlat
jmpw
or
dec
fsts
mov
mov
fbstp
aam
pop
hlt
or
sbb
and
mov
pop
inc
or
in
pop
lea
insl
cmp
push
inc
mov
add
test
push
fisubrl
push
mov
xchg
sbb
and
cmp
xchg
test
call
inc
mov
ss
mov
addb
jmp
and
bound
mov
imul
push
insl
and
pop
mov
sbb
aad
inc
sbb
mov
lds
in
push
lock
or
test
xchg
inc
call
sub
lods
pop
les
in
into
push
int
imul
sbb
xor
mov
cmp
push
add
ja
gs
adc
jle
push
je
push
adc
adc
pushf
push
cltd
xor
loop
mov
into
or
std
add
jb
jmp
test
bound
mov
push
pop
or
jbe
ss
or
imul
sbb
push
or
jns
mov
bound
ds
mov
cltd
pop
add
fbstp
push
push
in
inc
pop
insl
mov
cmpb
stos
pop
cltd
fcompl
mov
mov
push
ds
mov
adc
int3
pop
dec
xchg
fwait
adc
mov
ss
popf
test
adc
jo
pop
dec
add
push
sbb
jnp
jmp
or
inc
fdivrl
dec
fdivrs
xor
cmpsl
inc
jle
sarb
mov
rorl
insl
lcall
jl
mov
push
pop
arpl
cmpsb
xchg
cmp
aas
leave
sub
cmp
inc
shr
or
aam
sti
mov
xor
hlt
or
cli
xlat
fmull
lret
inc
pop
jmp
xor
jg
hlt
out
and
mov
jl
and
dec
pop
mov
mov
sbb
mov
in
jecxz
popl
pop
push
adc
int
push
mov
pop
ret
lods
push
jno
fcoml
insl
outsl
dec
lahf
andb
jae
arpl
cmpsb
cmp
das
cmp
sub
push
fwait
adc
xchg
daa
dec
fwait
pop
arpl
sbb
dec
lret
push
js
jp
and
leave
cmp
ret
imull
mov
add
test
rcrl
mov
enter
jmp
mov
sub
mov
clc
mov
cmp
aas
mov
mov
inc
cmc
sar
out
lock
sub
std
pop
cli
ret
daa
push
lods
or
lods
jo
push
movsb
add
mov
fninit
and
xchg
push
cwtl
pop
ds
out
xchg
test
icebp
push
fwait
cmp
out
lcall
sbb
sub
cld
enter
jne
mov
outsb
mov
push
push
inc
add
sarb
outsb
inc
test
adc
fs
imul
clc
or
fildll
jne
inc
stc
lcall
cltd
jae
fisttpll
mov
lret
xchg
mov
filds
addr16
mov
and
pop
dec
xlat
mov
cwtl
push
in
jo
mov
icebp
cmp
test
cmpsb
insb
loopne
cmp
sub
test
fistpll
sbbb
jp
lock
push
adc
or
ss
push
dec
cld
fdivp
pop
in
xchg
popa
sub
je
jmp
je
sbb
adc
mov
cli
std
cwtl
xorl
adc
lahf
bound
pushl
push
adc
arpl
arpl
out
movsl
and
pop
mov
xchg
cltd
adc
and
cs
or
adc
jmp
jle
xlat
punpckhbw
dec
xchg
xlat
adc
orl
xchg
add
leave
dec
daa
ljmp
cmp
xor
xchg
or
mov
scas
imul
cmpsb
stos
fists
lods
mov
mov
push
and
mov
xor
sub
mov
jne
xor
jp
pop
mov
pop
sbb
out
insl
das
dec
sti
enter
cmc
mov
cmp
inc
or
popaw
inc
pop
pop
and
cmp
push
stos
pop
mov
mov
cmp
sbb
std
push
dec
scas
inc
adc
pop
iret
xor
enter
sahf
movsl
cmp
sbb
add
mov
hlt
adc
xor
inc
pop
push
jecxz
pop
xlat
push
jl
enter
mov
and
xor
jo
and
icebp
sub
sub
rcrl
cmp
jecxz
push
in
loope
lods
pop
xchg
outsb
add
or
inc
out
fcmovnb
aam
sbbb
sub
adc
ljmp
ja
into
rcrb
mov
outsb
mov
test
mov
iret
xor
cmp
cmpl
scas
lcall
jo
lahf
popf
add
sub
int3
mov
mov
pop
jae
insb
jno
int
sub
mov
sti
loop
ja
nop
sarl
mov
lea
jmp
pop
pop
mov
in
arpl
jmp
inc
inc
test
jmp
aaa
fsub
sub
outsb
ds
es
dec
jmp
rclb
or
mov
sbb
movsl
cmc
jl
not
sbb
je
xor
sbb
jecxz
mov
shll
fldl
cwtl
icebp
aas
cmp
jno
pop
adc
jne
cmpsl
push
cmp
aad
ret
lcall
ffree
clc
ret
lcall
insl
jno
lock
xor
sbb
sahf
pop
loopne
in
jge
add
cmp
xchg
scas
add
adc
fidivl
sbb
mov
mov
sub
cmp
or
js
adc
gs
add
push
pop
xor
inc
mov
mov
push
stos
out
sbb
push
test
dec
add
fnclex
add
arpl
push
and
cmp
in
mov
data16
inc
out
and
das
or
mov
and
mov
inc
sub
and
lcall
sub
test
and
ljmp
mov
ret
mov
fwait
iret
inc
mov
and
dec
stos
mov
outsl
mov
push
sbb
outsb
out
jnp
jnp
rcrb
or
inc
cmc
push
movsl
mov
aam
and
jmp
nop
adc
and
int3
pop
sbb
stos
and
lock
add
xchg
ret
iret
inc
nop
push
dec
add
push
push
cmp
add
test
shlb
mov
popf
mov
jns
pop
test
sti
arpl
clc
adc
test
pop
mov
xor
xchg
adc
jne
scas
push
mov
xchg
jae
cs
xlat
pop
clc
jb
fcmovbe
cmc
or
sarb
mov
mov
test
dec
cmpsb
aas
stos
xchg
push
pop
stos
lods
pusha
loopne
gs
pop
add
cmp
push
sbb
or
add
and
pusha
mov
mov
adc
in
mov
sbb
push
in
sub
testl
jne
mov
je
or
lret
xchg
cmpsl
pop
pusha
enter
orb
inc
popf
adc
sub
jmp
iret
rcrb
jmp
push
and
std
jl
cltd
es
fnsave
cli
dec
mov
and
sbb
insb
enter
xor
push
push
out
cld
in
sub
fwait
push
sbb
stos
mov
stc
inc
movsb
subl
popa
dec
popa
jg
int3
push
scas
cmc
leave
aaa
lahf
jo
ljmp
inc
sbb
out
subl
pop
test
adc
adc
fcoml
xlat
sahf
add
xchg
pop
add
or
std
fidivrs
icebp
outsl
std
les
ret
sub
popa
push
mov
icebp
out
je
loop
ficoml
mov
mov
mov
xchg
dec
cmpsl
push
scas
adc
sub
or
mov
push
jg
data16
repz
es
add
outsb
push
fdivrl
and
pop
cmp
and
rorb
jl
mov
rorl
mov
cltd
cmp
xchg
in
out
mov
or
mov
xchg
add
and
push
push
mov
jo
sub
into
lock
out
popf
and
push
sbb
cltd
mov
rorb
xor
shrl
lds
fwait
pop
aas
sbb
das
mov
mov
sub
adc
scas
jo
dec
out
jns
or
dec
movsb
push
jmp
je
xor
add
mov
dec
sar
sti
jns
imul
jo
scas
imul
cmc
add
movsl
mov
das
int
dec
lret
jmp
sbb
push
inc
in
cmpb
dec
jns
push
add
pop
fsubr
xchg
push
lret
jo
mov
fs
xchg
mov
cmpb
mov
push
enter
mov
ret
loope
sub
mov
iret
lcall
int3
pop
push
arpl
jp
push
lods
inc
xor
sbb
test
cmp
add
adcb
mov
test
push
addl
jmp
sbbb
sub
sti
enter
mov
mov
stos
add
jns
sbb
inc
jno
bound
push
das
je
loope
movsl
test
in
gs
or
scas
loope
divb
and
dec
push
ja
arpl
xor
ljmp
pop
cmpsl
mov
aaa
es
jg
and
add
mov
inc
rolb
loope
inc
cld
mov
xor
sub
jmp
pusha
mov
clc
mov
jg
push
lret
int
xlat
jecxz
cmpb
xor
xchg
aaa
outsb
pop
dec
fiaddl
repnz
pop
ss
aaa
xor
pushf
popa
or
dec
push
es
sbb
cmpsb
and
int3
sbb
sbb
ljmp
or
mov
imul
dec
push
nop
lods
xor
call
cmp
sbb
es
repz
pop
mov
push
push
lds
push
cmp
cmp
cmpsb
test
lea
jp
jmp
xchg
jecxz
add
mov
inc
sahf
xchg
or
mov
adc
sub
shll
hlt
orl
xchg
push
stos
push
mov
ffreep
xchg
mov
push
dec
and
jns
out
jne
cmpsb
out
hlt
clc
pop
xor
push
mov
push
pop
punpckldq
insb
in
mov
stos
jp
into
outsl
insb
ret
inc
dec
sbb
lods
ja
out
mov
pop
xchg
or
cmp
cmpsb
insb
test
rolb
test
nop
mov
jbe
lret
mov
jo
pop
mov
cli
pop
rorl
popa
and
aaa
xchg
mov
repnz
sub
mov
mov
push
imul
push
fmuls
sub
mov
jmp
push
neg
xchg
sbb
das
in
jae
push
lret
or
mov
lcall
stos
add
andb
jno
cli
mov
aas
sub
jb
push
dec
pop
add
imul
xchg
clc
dec
xor
aaa
cltd
or
rorl
jno
sub
push
jnp
orb
add
jecxz
mov
clc
jno
call
popa
push
mov
dec
int
insb
jns
push
ss
cmp
or
xchg
adc
ljmp
cmpsl
ss
test
cmp
push
int
mov
push
mov
xchg
in
lea
clc
adc
xchg
sub
xchg
add
int
bound
sub
jmp
bound
fisttpll
push
inc
mov
xchg
les
clc
sub
rorb
adc
cld
pop
inc
jle
out
pop
mov
inc
push
sub
movsl
jb
add
outsl
stos
push
xlat
lahf
cs
ret
lret
pop
push
or
test
test
subb
adc
add
out
adc
lds
out
faddl
mov
inc
mov
sbbl
jge
rorb
shl
push
jmp
or
xchg
icebp
loope
cmp
movhlps
mull
pop
or
ret
decl
cmc
mov
fld
pushf
popa
repz
andb
in
cmovne
push
push
repnz
mov
xchg
push
or
cld
sbb
scas
inc
insb
shlb
xchg
sub
push
ficomps
addr16
sti
xchg
aaa
mov
fsub
call
fwait
push
in
mov
dec
aam
xor
data16
sahf
enter
lahf
sub
mov
mov
lods
jle
out
jmp
out
mov
jb
rcrb
lds
psrad
orb
jns
jno
mov
shrl
mov
inc
in
icebp
cwtl
push
cmc
mov
push
pop
mov
outsl
sbb
mov
enter
fnsave
pusha
dec
inc
and
add
insb
pop
and
xor
or
mov
pop
xor
xchg
out
aad
inc
pop
in
inc
shrb
and
mov
push
dec
adc
inc
pop
imul
jo
sub
bound
mov
add
xor
ret
sti
repz
or
mov
mov
and
jge
movsl
je
pusha
push
jno
addr16
mov
shr
mov
repz
pop
shll
nop
lods
pop
pushf
int
and
push
dec
enter
inc
popf
repnz
push
outsb
lock
or
jo
jle
push
in
pop
inc
push
add
std
mov
mov
dec
arpl
mov
jo
in
dec
and
loop
mov
jle
mov
adc
hlt
stc
leave
addr16
cld
add
sub
icebp
sub
dec
jmp
aas
sub
mov
scas
mov
in
cmpl
xchg
and
repnz
jbe
hlt
xchg
mov
xor
lret
push
lcall
dec
fistps
jae
and
lea
inc
push
ret
int3
jb
jle
jmp
sub
inc
jecxz
imul
or
fdivrl
push
or
sbb
push
aas
jne
dec
cmp
xchg
add
cli
lcall
idiv
or
push
test
insl
dec
dec
mov
ret
outsb
add
hlt
dec
loop
fdivrs
adc
xchg
cli
into
inc
xor
cmp
add
dec
push
pop
jne
jge
and
fwait
xlat
loopne
push
pop
fidivl
push
sbb
rep
decb
in
leave
je
or
orb
cli
loopne
mov
mov
je
imul
mov
xor
jae
or
sbb
mov
ficoml
pop
adc
stos
ret
out
jno
push
add
pop
lea
divb
aad
cmp
cltd
ljmp
arpl
dec
jo
sbb
mov
arpl
xchg
mov
aas
cmp
test
fchs
jp
dec
ret
out
pop
pop
pop
adc
mov
cmp
imul
or
dec
cwtl
mov
cmp
int
dec
enter
cmp
dec
push
repnz
repnz
lahf
pusha
push
pop
repnz
mov
push
or
pop
adc
cli
cmp
cmp
and
mov
loope
rolb
shlb
mov
pop
adc
lahf
xchg
sub
in
push
pop
add
pop
cmp
push
xchg
add
rorb
out
xor
mov
mov
sbb
jmp
mov
push
dec
cmc
push
xor
lea
pop
outsl
sub
pop
xchg
mov
xchg
into
pop
rorl
sub
cmc
fidivrl
in
rol
add
dec
test
add
or
stos
sbbl
push
or
inc
cmp
scas
and
jnp
call
mov
cs
test
xor
mov
jp
sub
nop
decl
cld
add
xchg
dec
mov
aas
test
dec
push
mov
movsl
addr16
or
lds
sar
mov
dec
arpl
mov
add
mov
sbb
shrl
cmc
out
adc
mov
or
movl
push
dec
sbb
mov
push
rcrb
in
cmp
sar
adc
decb
or
js
jp
sbb
loopne
repnz
mov
mov
gs
lea
adc
dec
das
fidivl
mov
sbb
xor
scas
das
push
loop
push
je
insb
mov
das
inc
loop
or
add
cwtl
mov
pop
es
fidivrs
push
push
in
call
cmp
xchg
mov
or
xor
sbb
ss
andb
loopne
sbb
push
std
mov
pop
mov
xor
mov
and
push
push
adc
inc
lods
insb
sub
cmp
fstps
add
sahf
inc
pop
rclb
mov
out
xor
add
pop
xchg
inc
inc
out
rolb
jae
rcrb
movsl
popa
pop
cwtl
cwtl
xchg
and
pop
popa
pop
cltd
and
les
aad
push
adc
push
aaa
insb
fidivrl
outsb
jmp
pop
mov
les
mov
fs
cmp
enter
add
mov
push
enter
push
jg
xor
dec
lods
into
xchg
adc
push
int
in
pop
jecxz
add
gs
out
jnp
jg
jecxz
loope
negb
pop
xlat
mov
fisttps
rcll
adcl
into
scas
mov
xchg
cmp
xor
pop
in
roll
cltd
xchg
pop
cmp
xor
movl
pop
test
cmpsl
stos
pop
outsl
scas
ljmp
or
push
push
xor
xor
pop
xchg
loop
outsl
fimuls
sbb
inc
int3
out
mov
mov
sbb
mov
inc
adc
or
scas
xchg
mov
xchg
fcompl
add
xchg
sbb
std
shlb
rolb
add
and
loop
xchg
scas
mov
sti
xchg
je
popf
add
loop
mov
cld
mov
test
mov
in
mov
js
or
in
dec
test
dec
jnp
nop
loopne
sbb
fsubl
xchg
or
mov
xlat
cwtl
sub
pop
ja
insl
dec
imul
stc
dec
sub
out
fcomi
push
xor
lcall
push
adc
sbb
inc
xor
or
fstps
jae
rcll
and
pop
jno
inc
popa
cltd
mov
sahf
push
les
lods
sbb
dec
jle
and
lea
adc
bound
dec
std
jb
mov
cmpsl
iret
sub
vmovdqu
lcall
insb
mov
jge
jae
jmp
push
xlat
idivb
cmp
rcll
and
mov
jne
push
push
push
mov
into
mov
add
pop
std
stos
movsl
cmp
adc
sti
dec
and
mov
mov
sub
or
scas
out
add
mov
or
gs
arpl
sub
mov
cmp
hlt
gs
xor
push
dec
dec
push
lock
adc
push
sub
movzbl
sbb
sbb
inc
pop
cmc
loop
mov
mov
sub
int
mov
popf
daa
lods
pop
sbb
jmp
dec
dec
jns
mov
pushf
pop
sub
inc
test
aam
or
adc
xchg
imul
mov
imul
mov
lods
icebp
fs
cltd
xchg
loopne
push
dec
xchg
inc
test
add
mov
dec
aaa
add
sbb
stos
xlat
outsb
sbb
sbb
dec
popa
cmc
jne
and
inc
hlt
push
sahf
mov
jnp
and
and
inc
pop
std
ret
push
insl
or
icebp
inc
jns
jg
jnp
lea
int
sbb
dec
pcmpeqw
lods
mov
arpl
shll
xchg
es
leave
dec
mov
add
test
or
cmp
pop
stos
xor
fcmovnb
cmp
ljmp
sub
inc
sysret
jp
int
push
xchg
mov
sub
jmp
cmp
pop
fwait
sub
ljmp
xchg
push
push
xchg
xchg
test
ret
mov
add
hlt
jmp
inc
test
add
mov
inc
add
xchg
pop
add
mov
jg
xor
std
stos
mov
xchg
add
rolb
lds
cmp
lds
jg
lock
sub
popf
sbb
fwait
mov
scas
ja
les
mov
jg
xor
mov
arpl
popf
pop
add
cltd
or
jnp
xchg
hlt
bsf
jg
or
cwtl
sbbl
call
add
mov
push
int3
mov
inc
pop
jbe
fs
jg
xchg
lret
xchg
mov
lds
inc
imul
ja
scas
push
in
pop
loop
mov
cwtl
movsb
iret
out
sbb
adc
jo
jg
xor
movsb
movsl
xor
pop
pop
inc
daa
mov
jno
ret
pop
loope
jl
mov
xchg
xchg
lret
out
xchg
adc
stos
outsl
mov
xor
hlt
movsb
mov
mov
xchg
lds
nop
xchg
in
dec
mov
cli
ret
cmc
jge
and
cmp
scas
jo
mov
sbb
imul
ss
and
jbe
test
xchg
inc
xchg
inc
popf
shll
test
mov
push
mov
xchg
shr
adc
leave
ret
cmp
jae
fcmovb
adc
orps
ret
leave
ja
rorl
loopne
in
pop
testb
mov
xchg
jno
jge
push
out
mov
dec
sti
loopne
sbb
sub
loopne
pop
imul
aas
ja
loope
push
cmpl
pop
cmpb
loopne
fs
or
jecxz
clc
cmc
aad
mov
adc
push
dec
push
daa
aaa
xchg
bound
mov
pushf
out
mov
ret
inc
insl
and
fs
stc
or
sub
pushf
mov
cmp
xor
in
fidivl
and
mov
cmp
fs
ret
lret
inc
in
jo
repnz
sti
in
stos
jno
cld
orb
rorl
pop
ja
push
and
in
sub
cs
pusha
stos
fdivrs
cwtl
jae
add
pop
push
or
jno
lret
in
xchg
popf
jo
add
pop
rolb
fcmovnbe
xorb
ret
xor
sarl
mov
nop
and
mul
inc
movsb
jo
pop
popf
repnz
lret
inc
nop
das
and
cmp
cmpsl
shl
fildl
scas
xchg
jb
fistps
movsl
aas
icebp
xor
xor
sbb
ss
pop
test
mov
or
xchg
lods
cwtl
mov
jnp
sar
in
lods
add
mov
push
inc
push
cmp
enter
out
or
push
lret
xchg
dec
sbb
loop
dec
sub
mov
jp
sahf
test
mov
cmp
dec
enter
stos
dec
mov
or
mov
cmpsb
es
xchg
in
scas
mov
add
pop
adcl
test
dec
jae
adc
incb
shr
push
inc
xorl
aam
fs
lock
mov
les
cli
push
push
jecxz
xor
ret
jle
in
adc
testl
in
push
pop
stos
mov
cld
and
dec
lret
out
shlb
pop
pop
in
pusha
out
sub
and
mov
inc
jecxz
xor
fwait
xchg
clc
rorb
dec
movsl
or
jmp
push
bound
mov
fcmovnb
stc
mov
inc
mov
add
scas
pop
in
cli
jae
sub
mov
popl
or
int
cmp
icebp
das
adc
aas
jp
shll
mov
push
dec
cwtl
cmpsb
shrl
sub
loopne
inc
repnz
xorl
nop
xor
lods
orb
push
dec
add
je
jecxz
popa
ss
push
mov
lret
push
out
sub
xor
fwait
push
aaa
iret
xchg
pop
xor
daa
and
sub
cmp
adc
pop
js
mov
call
push
aam
cmc
out
and
xor
inc
mov
jmp
mov
sub
pop
sub
or
and
dec
mov
sbb
movsl
into
pop
fisttpll
add
xchg
addr16
test
pop
inc
jns
cmc
mov
movsb
xor
and
cld
xchg
mov
jno
testb
cmpb
inc
ret
shll
mov
lcall
ljmp
jg
push
cmp
or
mov
cmpsb
cmp
scas
nop
sub
pop
jns
sbb
ss
out
into
pop
mov
and
push
call
rcrl
and
sbb
lea
xchg
cmc
mov
mov
xor
or
mov
pop
lea
adc
inc
xchg
les
sbb
jp
xchg
mov
xchg
shll
int3
andw
jp
xor
fcompl
xchg
outsl
mov
jbe
push
push
bound
sbb
divb
xorb
jp
push
pop
xchg
jmp
out
shrb
arpl
push
xlat
mov
adc
and
mov
movsb
fists
aas
ret
mov
stc
or
pushf
pop
push
es
gs
repnz
stos
hlt
lret
into
daa
pop
std
cmpsl
cmp
pop
lea
push
push
rcll
arpl
ljmp
fs
dec
insb
arpl
pop
nop
inc
mov
ja
jmp
push
sub
jmp
fstl
cmpsb
mov
imul
inc
xor
fistpl
add
into
mov
lret
test
orl
xor
mov
imul
ja
ljmp
movsl
dec
xor
lods
jg
in
lds
or
cmp
or
mov
fmull
aas
jl
push
bnd
xchg
dec
movsl
cs
movsb
pop
sbb
ljmp
mov
xchg
stos
dec
sub
or
mov
sbbb
adc
aaa
or
push
mov
aas
mov
mov
or
xlat
clc
loop
cs
inc
pushf
out
lea
in
sbb
insl
cs
ja
mov
push
cli
jbe
mov
jg
fs
stc
push
sub
jmp
mov
mov
sub
xor
fistpl
aas
lret
adc
and
or
mov
popf
cmpb
aas
roll
ret
fxch
jo
popf
sbb
mov
cmp
jno
adc
jmp
push
fs
jb
lahf
push
push
sbb
cmp
rcrb
cmp
xchg
orl
repz
mov
sahf
test
pushl
data16
ljmp
in
call
adc
ds
cs
jecxz
add
pop
inc
iret
adc
movsb
jl
pop
and
aam
pop
sbb
mov
or
inc
rclb
imul
inc
cmpsl
jl
and
out
fistpl
cmc
dec
sbb
in
test
jns
sub
in
xchg
fdivrl
stos
xchg
in
dec
daa
xorb
mov
adc
mov
mov
cmp
mov
or
adcl
xor
mov
adc
loopne
xor
cmc
push
push
loop
repnz
hlt
bound
shl
in
rclb
push
movl
mov
sbb
mov
test
hlt
sbb
sub
pushf
or
or
pusha
xlat
pop
pop
and
and
out
clc
jecxz
sbb
xlat
jp
aad
pop
dec
pop
into
mov
rcrl
stc
mov
jl
scas
push
dec
mov
imul
imul
inc
dec
sahf
test
jl
hlt
and
repnz
sub
cwtl
scas
cwtl
jge
or
push
and
test
jecxz
and
enter
fcompl
cmp
outsl
lahf
stos
mov
adc
add
cwtl
faddl
push
hlt
mov
rorb
inc
mov
xor
add
ljmp
lret
sub
pop
xor
fisubrs
jge
xchg
repnz
je
out
add
add
cmp
push
sbb
mov
xchg
mov
inc
or
imull
nop
aas
std
cli
or
into
sbb
popa
adc
data16
jge
js
arpl
pushf
mov
sbb
cmp
int
pop
mov
mov
rorb
sahf
gs
leave
test
std
in
int3
add
movsl
push
lea
ficoml
cmpl
sbb
push
jmp
sbb
shll
mov
cs
lret
or
lds
js
sbb
mov
sbb
ret
jge
scas
or
add
pop
repz
lcall
mov
lock
xchg
ss
clc
add
cli
jo
mov
scas
lods
hlt
pop
insb
scas
test
push
cmc
cmp
vmovntpd
rol
out
das
xor
push
mov
lea
lret
inc
cwtl
div
andb
adc
test
jmp
es
ficompl
mov
fdivr
cmpl
ret
push
mov
repz
jecxz
sahf
cmpl
addr16
insb
mov
ljmp
pop
enter
or
xchg
or
fs
cltd
fcoms
mov
inc
add
repnz
push
js
inc
sub
sub
inc
cmp
xchg
test
stos
xchg
push
xchg
fldl
inc
mov
ja
orl
mov
xor
cmp
daa
imul
mov
fdivrs
sbb
pop
push
push
pop
inc
inc
dec
sub
rorb
xchg
dec
pop
mov
pop
fisubrs
xchg
sub
push
loopne
aaa
xchg
dec
sub
and
inc
das
push
repz
sub
out
das
xchg
js
dec
inc
jb
cmp
and
movsb
sbb
cmp
jno
push
fwait
xchg
testl
xor
push
inc
shr
pop
dec
cli
cmp
mov
or
sub
into
pushf
aad
xchg
sub
push
scas
xchg
dec
push
sbb
mov
push
jns
in
cmp
imul
out
lods
xchg
int
lds
sbb
arpl
icebp
fwait
pop
mov
mov
and
pop
ljmp
icebp
jo
push
test
or
nop
mov
mov
out
fisubrl
xlat
cmp
inc
xlat
fninit
sahf
daa
and
and
sbb
out
adc
in
sub
out
and
xor
xor
inc
das
and
movsb
lcall
jnp
ret
test
stos
es
sbb
sub
vmovaps
cmp
xchg
mov
push
ja
dec
pop
pop
mov
aas
std
in
pop
in
cld
jge
cli
xchg
and
dec
pop
add
or
sub
sbb
test
mov
and
xchg
mulb
int3
loop
xchg
xor
pop
lcall
sahf
or
and
pop
or
inc
push
add
or
loope
jbe
insb
gs
dec
cmpsl
ss
push
sub
das
jns
and
mov
jp
jmp
fisubrs
push
std
sub
add
adc
insl
and
sbb
add
mov
push
fmull
xchg
sub
mov
and
fnstcw
adc
les
mov
jns
push
dec
sub
inc
sub
movsb
mov
imul
fmuls
mov
es
fildll
loope
testl
xchg
sbb
jb
xor
xchg
ljmp
cmpsl
mov
jle
push
xchg
xor
mov
std
jle
adc
shll
jle
hlt
pop
jg
dec
add
sub
stos
and
out
sarl
notl
gs
ja
sti
push
sbb
adc
sub
rol
aaa
lret
dec
pop
sbb
cs
add
xor
and
mov
inc
adc
psubusw
fisubl
aaa
nop
inc
pop
mov
dec
push
stos
idivl
mov
pop
mov
adc
sub
pop
inc
in
ret
insb
jbe
fnstenv
cmc
dec
sbb
scas
push
pop
mov
inc
sub
cld
dec
add
add
cmp
push
xor
sbb
out
aaa
scas
or
dec
iret
jne
rclb
or
shrb
pop
push
dec
arpl
cwtl
xchg
lahf
sub
js
pop
adc
xor
jo
jl
jp
inc
les
int
stc
pusha
inc
push
std
sub
mov
inc
jnp
sahf
jns
sbb
sbb
jns
aam
sbb
or
push
adc
out
inc
cmpsl
sbb
sti
sbb
aad
and
or
jge,pn
inc
ljmp
ret
mov
imul
sub
pop
pop
xchg
sbb
mov
inc
dec
mov
add
xor
mov
xor
and
fcompl
sbb
in
sub
mov
mov
cmp
fdivrp
fwait
aas
xorl
sahf
into
mov
jne
sub
clc
mov
bound
daa
sahf
cltd
mov
ljmp
fucomip
and
sahf
gs
arpl
lret
insb
push
and
and
mov
jno
retw
stos
xor
ja
sbb
jns
add
test
pop
test
or
inc
add
ljmp
xor
xlat
mulb
cmp
pop
sbb
insb
or
stos
mov
pop
test
mov
stos
adc
sbb
jne
scas
lock
jnp
push
push
int
jge
lods
lock
xchg
aas
jp
jbe
gs
cmp
dec
mov
fs
cmp
out
mov
ret
out
psubsw
inc
sbb
pop
cwtl
xchg
test
in
cld
ss
movsl
sub
les
out
lods
in
mov
ret
ffreep
mov
rcll
fcomp
and
and
mov
popf
push
fsubr
push
scas
and
sub
nop
add
out
push
adc
lods
adc
jle
pop
pop
icebp
mov
cmpsb
out
stc
shlb
lds
ret
mov
mov
push
insb
push
or
loop
or
faddl
adc
dec
testl
arpl
loopne
dec
les
mov
aaa
in
addr16
jbe
push
cmc
xor
add
cmp
sub
sbb
and
lods
mov
scas
inc
pop
jb
xor
xor
sahf
pop
xchg
lods
jge
add
sub
adc
ljmp
xlat
nop
out
adc
mov
insl
hlt
dec
fstl
inc
ljmp
daa
mov
mov
xchg
dec
pop
adc
push
mov
sbb
xor
into
push
test
xchg
negl
scas
dec
ss
push
sbb
jne
jmp
mov
mov
push
xchg
jne
jecxz
xchg
mov
or
imul
adc
mov
add
and
mov
sbbl
mov
out
cwtl
lds
outsl
inc
pop
insb
and
mov
xlat
inc
ret
fildl
mov
bswap
subl
or
cmp
daa
mov
fnstsw
jne
data16
cmp
divb
pop
fldt
ss
and
sub
cld
jns
add
jle
shl
sub
ds
pop
mov
xor
bndldx
addl
lret
jo
lds
shll
sti
sbb
into
xchg
push
xchg
cmp
xor
fistl
je
jae
adc
enter
in
lea
jge
inc
jns
jp
mov
lret
push
lods
scas
je
push
bound
lret
sbb
lea
mov
test
fldt
sti
push
test
add
mov
pop
cli
mov
jns
xlat
outsl
add
es
cmp
std
cmpsl
sub
cmp
xchg
test
sahf
mov
lock
loope
sub
icebp
loopne
xchg
push
cli
mov
call
mov
sbb
cmpsb
add
jecxz
mov
jae
or
inc
push
aas
mov
rcr
mov
push
dec
and
mov
dec
push
call
test
pop
and
jecxz,pn
push
mov
jnp
jp
sub
or
xchg
pop
je
nop
jl
mov
jb
or
pop
pop
adc
and
pushl
jb
mov
and
add
jmp
sbb
fisubl
je,pt
mov
sub
sbb
jge
push
scas
cs
mov
pop
ret
gs
jmp
sbb
inc
out
cmp
adc
pop
mov
mov
rclb
rol
pop
dec
fidivrs
rorb
std
hlt
iret
cld
lock
std
sub
jl
xchg
stos
push
ficoms
insl
mov
jmp
mov
lock
adc
sbb
or
stc
jnp
xorb
fs
push
in
es
dec
mov
fstl
cmc
sub
insl
mov
movsb
andb
pop
dec
pusha
sub
sti
sbb
loopne
add
mov
jg
sbb
cmp
mov
nop
fsubl
dec
sub
test
jbe
inc
and
adc
inc
fwait
jmp
fmuls
movsb
jns
lret
scas
push
shrl
repz
inc
test
lea
xor
cmp
and
loop
adc
sbb
push
lds
mov
loop
lods
and
ja
mov
inc
scas
push
xor
mov
mov
sti
add
repnz
data16
sbb
and
or
dec
jae
rolb
or
je
or
push
lcall
and
mov
outsb
xor
or
push
mov
movsb
sbb
xor
push
xchg
push
pop
mov
iret
mov
mov
xor
roll
cmpsl
adc
push
xor
adc
pop
sahf
cmp
out
pop
outsb
mov
push
loope
std
stos
cltd
push
cmp
hlt
mov
mov
negl
mov
and
loope
push
sub
mov
dec
xchg
mov
inc
repz
push
mov
add
aad
pushf
out
and
mov
pop
repz
sti
pop
dec
mov
jp
leave
inc
jnp
movsb
movsb
inc
inc
movsb
in
addl
lcall
mov
aas
sub
sub
push
sub
cmp
or
add
fistpll
pop
fsubrp
mov
insl
sahf
push
inc
jle
nop
xchg
mov
dec
jecxz
mov
add
sbb
gs
xchg
mov
jecxz
or
pop
inc
push
pop
push
in
inc
push
or
sub
inc
xchg
mov
sahf
xlat
sub
repz
push
adc
ret
popa
dec
adc
sbb
or
lcall
jo
orb
fisubl
ds
cltd
cmp
dec
lods
hlt
mov
push
and
fcmovbe
nop
or
hlt
fisttps
addr16
lcall
inc
lods
jmp
rorb
adc
inc
dec
stc
cmp
fldcw
xor
mov
out
sbb
mov
push
push
cmp
mov
pop
inc
aaa
shll
jmp
orl
pop
insl
loopne
xor
jnp
mov
stc
mov
lds
out
pop
sbb
mov
or
cmc
jle
sbb
and
stc
xor
lahf
movsl
orl
into
xchg
dec
mov
popa
test
xchg
insl
aas
mov
jmp
pop
mov
pusha
cmc
inc
mov
in
je
mov
aad
and
cmp
xchg
pop
push
test
insl
add
pusha
ss
cmpsb
icebp
mov
test
pop
xlat
jg
cmp
cld
lret
adc
mov
and
icebp
mov
pop
je
sbb
lods
mov
out
repz
mov
mov
mov
cli
iret
lea
int3
mov
fnstenv
inc
mov
push
popa
pop
movsb
jg
push
pop
push
cmp
xchg
sarl
push
repnz
stos
jbe
pop
aaa
sarb
mov
rcl
inc
mov
mov
fwait
int
mov
mov
mov
dec
dec
jle
cld
and
aaa
xchg
cmp
arpl
scas
scas
loopne
out
sbb
out
rclb
not
psubd
dec
icebp
movl
jge
in
jb
les
mov
stos
mov
into
out
mov
mov
mov
sarl
bnd
mov
jae
jbe
inc
mov
cltd
sbb
pop
out
mov
into
jmp
push
nop
out
cmp
popf
mov
xchg
test
int
push
pop
mov
pop
inc
or
mull
and
adc
clc
repnz
add
imul
insl
data16
cmp
sbb
mov
jae
mov
loope
lea
in
lods
push
push
dec
sub
mov
loop
out
mov
call
rorl
repnz
xor
jnp
jp
xor
cmpb
pop
adc
hlt
and
leave
dec
or
fisttps
scas
xor
sbb
inc
inc
rorb
add
xchg
inc
push
fstl
or
je
adc
jne
rcr
add
ret
decl
or
pop
stc
or
cld
mov
sti
cmpsl
stc
test
sti
pop
mov
sbb
push
pushl
decb
ret
lods
sub
iret
dec
xlat
and
lret
jno
orl
mov
fcmove
inc
mov
push
loope
in
sbb
jge
loopne
out
int
loope
dec
in
idivb
mov
das
cld
push
jg
pop
test
pop
inc
cmpsb
or
lea
leave
dec
fadds
outsb
ljmp
popa
mul
lea
jg
ljmp
mov
outsb
mov
mov
add
or
pop
add
stc
repnz
push
orl
mov
sti
repnz
arpl
ret
les
fs
aaa
or
xchg
ja
fs
test
in
jge
sahf
or
mov
mov
push
push
cmp
stos
aas
push
aam
dec
sbb
fidivrs
test
inc
ret
stos
dec
popf
nop
xor
mov
in
cmpsb
mov
mov
mov
and
push
and
ret
push
shrb
mov
or
sub
xchg
roll
mov
pop
in
dec
movsb
leave
and
mov
call
inc
or
imul
mov
pop
in
lods
faddl
pop
in
jle
repz
lds
je
push
mov
xor
cmp
mov
lret
mov
testl
cwtl
aas
popl
leave
std
pop
and
xlat
lods
inc
popf
out
hlt
icebp
ret
inc
mov
pop
pop
inc
sti
out
push
call
or
and
or
and
sti
int
jg
in
dec
xor
add
lea
sub
sti
outsl
jno
mov
xor
aad
lods
sub
sbb
fstl
scas
mov
or
and
pop
sbb
cmc
pop
jb
mov
out
pop
inc
jne
dec
cmp
or
sub
adc
pop
push
data16
scas
divb
dec
sti
adc
imul
ret
out
add
cs
pushf
arpl
not
std
pop
mov
imul
push
loopne
pop
xor
arpl
mov
nop
scas
loope
lds
push
add
rcrb
adc
aad
sbb
scas
xchg
divw
cmp
jae
shrl
popa
popa
mov
movsb
insl
mov
ja
mov
add
cmp
inc
adc
mov
adc
inc
jle
jns
push
test
sti
mov
push
pop
push
and
mov
btc
mov
jp
mov
sub
jnp
gs
imul
stc
into
push
xchg
and
cld
fistpl
push
test
inc
mov
adc
pusha
popf
xchg
or
es
sub
mov
or
push
fcomi
idivl
movsb
push
mov
mov
mov
push
ja
fnstsw
lcall
cmp
bound
mov
add
and
sbb
push
pop
ret
clc
mov
cmpsl
or
scas
push
mov
xchg
sbb
push
xor
cmpsb
lods
inc
loope
mov
xor
iret
call
shlb
and
add
loope
fbstp
push
cmp
pop
aas
sbb
jns
push
insb
std
pushf
daa
repnz
cltd
xchg
cmp
add
jmp
cs
fcomps
mov
cmp
xchg
sub
xchg
xchg
in
das
mov
xchg
andl
push
ficoml
sbb
push
adc
mov
je
xchg
icebp
movsb
sub
fisubrs
ss
stos
sub
fidivrl
mov
loope
ficompl
repnz
leave
pop
bound
popa
enter
and
mov
je
popf
test
pop
imul
or
xor
cld
xchg
fsubrl
add
hlt
or
mov
fwait
mov
scas
outsb
mov
xlat
clc
lea
sbb
mov
test
dec
pop
inc
add
sub
inc
lds
jnp
test
cmp
test
xchg
xlat
stos
mov
stos
cmc
lret
lcall
adc
cmp
in
shll
mov
fwait
push
lret
insb
adc
mov
sbb
ficompl
mov
aas
or
mov
lret
cwtl
cwtl
and
int
cmpsl
ss
js
jbe,pt
fstps
and
icebp
push
push
rorb
mov
fs
mov
leave
and
imul
int3
xchg
ljmp
push
js
mov
fwait
in
stc
fcoms
xchg
mov
jl
pop
push
mov
push
mov
shr
lret
sub
sbb
sbb
jb
jne
scas
sub
imul
or
mov
movb
mov
filds
lea
test
pop
movsl
mov
mov
lods
sub
js
mov
and
cli
dec
xor
popf
les
or
rol
cmc
jno
cmpl
test
data16
and
in
mov
sbb
push
jno
cmp
xchg
sbb
mov
in
inc
inc
pop
idiv
mull
hlt
movsl
shlb
mov
shll
in
nop
loopne
add
mov
fstps
and
aas
push
inc
pop
idivl
ds
jbe
mov
stos
xor
push
cmpsl
outsb
jge
movsl
push
pop
push
and
jne
push
lea
mov
iret
and
and
inc
cmc
sti
stc
stos
fistl
cmpsl
add
rclb
addr16
sbb
inc
xor
lock
sbb
out
pop
fbld
xchg
pop
cs
mov
add
pop
outsb
lods
cmp
mov
imul
rcrb
mov
icebp
clc
aam
rorb
dec
stos
ret
outsb
lock
clc
fwait
xchg
ds
sbb
sub
ds
lret
push
jno
dec
ret
ss
loopne
sub
jne
cmpsb
cmp
mov
sub
cltd
jmp
cmc
dec
adc
insb
nop
push
movsb
xor
push
and
out
add
xorb
add
loop
mov
cmp
jb
fcomps
mov
pop
out
sbb
rcll
stos
cmc
xor
addb
pop
lcall
add
ljmp
jp
jg
icebp
adc
loope
pop
pop
repz
mov
dec
mov
lret
loop
mov
xorl
push
lods
mov
inc
fnstcw
add
icebp
ret
or
mov
pop
mov
jbe
sub
pop
sti
mov
push
addb
mov
mov
push
fdivr
ja
xrelease
vmread
aaa
loopne
add
mov
pusha
in
orb
mov
jecxz
adc
dec
aaa
fnstsw
jae
in
mov
mov
or
sub
dec
xchg
jnp
pop
mov
lods
scas
and
psllq
mov
add
adc
test
cmpsb
mov
sub
sbb
cmp
repz
fnstcw
inc
xor
out
jo
xor
dec
les
arpl
mov
jl
sbb
mov
jecxz
xchg
test
mov
jno
test
lcall
fs
je
leave
jbe
xchg
mov
daa
xchg
xchg
and
iret
stos
and
cmp
nopl
dec
repz
lret
out
xchg
adc
xor
mov
push
adcl
ficoml
insl
and
loope
or
xor
sub
push
stc
out
movsb
pop
into
call
stos
push
add
ss
push
push
js
sbb
mov
inc
cmpsb
sbb
or
js
shlb
aam
out
fwait
cmp
call
decl
lret
pop
loope
sub
inc
sbb
xor
xor
out
and
ret
call
mov
inc
sahf
imul
inc
mov
fdivp
jno
std
pop
stc
shrl
xchg
das
mov
arpl
xchg
in
stos
xor
aad
add
punpckhbw
mov
xor
cmp
addb
mov
cmpl
inc
arpl
mov
rcll
fs
jge
aam
movsl
pop
repnz
jmp
add
sbb
push
sbbb
sub
je
sub
cwtl
mov
mov
inc
dec
fsubrs
leave
fdivs
inc
cmpsb
push
mov
dec
andl
stc
push
jb
loop
inc
adcl
lds
in
sti
push
scas
sub
fistpl
pop
iret
pop
pusha
pop
xchg
sub
test
adc
and
enter
lcall
jne
mov
jo
mov
shll
mov
or
lea
add
lods
xchg
sarl
dec
inc
mov
sbb
fisttpll
int3
xor
jecxz
in
inc
popaw
adc
mov
push
cmpsb
scas
stc
jp
shlb
mov
pop
sub
insl
leave
mov
jb
cs
mov
mov
sbb
adc
loop
cmp
mov
popa
dec
and
sub
jl
jmp
bnd
pushf
xchg
xchg
sub
hlt
iret
push
loopne
jns
std
insb
push
dec
sbbb
mov
pop
imul
insb
or
shr
and
lds
xor
pop
xor
jp
test
adc
ss
daa
push
adc
jne
nop
pusha
fsubl
jnp
fimull
loopne
dec
aam
push
xor
push
pop
cli
aad
inc
or
adc
sbb
xchg
ss
adc
iret
lods
not
stos
addb
sbb
fcoml
add
push
add
adc
pusha
inc
mov
cmp
cld
das
adc
data16
mov
jp
inc
ds
fstl
jle
or
mov
jns
lret
pop
clc
sub
adc
roll
jo
pop
rorl
popa
clc
ljmp
mov
mov
out
push
movsb
mov
inc
sub
jae
and
pop
js
push
mov
push
or
mov
sbb
xor
mov
loopne
dec
mov
xlat
popa
xchg
nop
rcll
xchg
push
pop
das
imul
cmp
mov
mov
cmp
jo
enter
test
movsl
inc
ljmp
xor
imul
sarb
mov
mov
lea
push
push
fincstp
push
in
ret
je
movsb
and
push
jge
cli
fidivl
fildll
mov
ljmp
sub
push
lret
cs
pop
mov
and
mov
fcoms
push
dec
faddl
sbb
stos
scas
sub
or
lret
pop
jne
push
or
aaa
in
fidivs
lcall
adc
hlt
nop
add
nop
push
fstpl
sbb
cmpsb
mov
push
jge
sbb
inc
into
fstpt
mov
fimuls
lock
mov
cmp
fs
jg
jno
and
and
stc
dec
pop
cmpsb
jp
fdiv
ficomps
lods
pop
aad
sbb
popa
out
mov
frstor
loope
push
loope
mov
ret
push
ljmp
push
ds
fdiv
pop
or
push
imul
mov
pop
test
sbb
test
dec
outsb
or
test
jl
dec
jp
lock
mov
test
jp
xchg
loope
xorb
jo
sahf
sub
fs
cmpl
cld
xchg
mov
mov
cli
mov
jae
or
loope
test
inc
loop
mov
xor
aam
loopne
das
jl
scas
inc
adcl
add
pop
in
and
enter
les
pushf
dec
gs
imul
add
aaa
sub
addr16
jo
cli
lods
or
aam
add
jae
daa
and
sbb
out
pushf
xchg
shrl
test
pop
cli
lods
push
jb
xor
scas
pop
mov
rcr
xchg
push
aad
sbb
rol
fwait
adc
adc
dec
sahf
lods
jo
int3
push
xor
adc
jne
lods
and
les
xchg
push
out
pusha
test
mov
imul
enter
pop
negb
sbb
jmp
jnp
add
ret
das
xchg
add
pushf
leave
jns
aas
push
cmp
fistps
jmp
sbb
inc
cmp
mov
into
les
icebp
inc
test
cli
dec
leave
jb
or
mov
mov
ficoml
xchg
push
jg
push
jbe
jbe
ret
pop
sub
or
adc
pop
arpl
lcall
adc
inc
shll
dec
lret
lds
xchg
shlb
test
arpl
loopne
loopne
or
push
cmp
mov
roll
adc
cli
dec
icebp
imul
pop
or
in
aaa
pop
sub
js
inc
mov
cltd
orb
xor
movsb
clc
ret
lods
ffreep
or
ret
push
or
mov
test
in
or
sbb
cmpsb
push
mov
leave
cli
popf
out
cs
cmp
stos
out
push
sbb
aaa
and
push
ret
jb
cwtl
out
inc
cli
inc
hlt
mov
mov
lock
inc
lea
sahf
test
out
dec
pop
xchg
std
or
outsl
into
sbb
dec
cmpl
lea
sub
xchg
cmpsb
lods
out
sub
pushf
cs
mul
xorl
cmp
mov
push
pusha
insl
pushf
lods
pop
lds
pop
cs
push
dec
repnz
divb
stos
out
add
nop
mov
xchg
push
mov
push
pop
push
mov
push
popa
fwait
or
adc
aas
fdivrl
push
and
inc
push
jp
mov
mov
cltd
cmpsb
mov
inc
dec
std
int
adc
stos
popf
xor
scas
es
push
mov
mov
call
in
mov
fucom
and
lret
data16
jle
xchg
fbld
push
cmp
jnp
insb
dec
mov
nop
xchg
scas
aam
push
shl
ja
imull
adc
iret
cli
gs
mov
and
lds
test
daa
in
bound
pusha
pop
sbb
in
in
mov
pushf
xchg
popf
test
arpl
mov
testb
idivb
ds
inc
repz
sub
pop
ds
jle
decb
aaa
jge
fdivrl
cmp
pop
xchg
test
incl
add
xchg
sbb
adc
das
insl
lods
mov
xchg
sar
in
xchg
negl
cli
adc
cld
xlat
jge
decl
cmp
clc
push
ficomps
test
cmp
in
and
cld
dec
test
mov
inc
mov
mov
mov
push
push
in
and
loop
int
ret
jno
icebp
push
adc
fcmove
cwtl
data16
in
hlt
mov
loopne
lds
lods
cmp
je
cmp
stc
or
enter
aad
rcr
int3
inc
cmpsb
and
xchg
mov
repz
or
fsub
xchg
jbe
fs
sar
xchg
adc
cmc
lahf
xchg
jae
mov
enter
jo
push
in
push
lcall
in
inc
bound
inc
add
lods
and
shrl
mov
aam
cmp
xchg
movl
xchg
mov
js
cmpsl
xchg
xchg
xchg
jb
mov
lds
push
cli
fcoms
test
in
and
mov
dec
mov
repnz
adc
jp
lods
ret
enter
xchg
fistps
mov
sbb
xor
adc
inc
js
js
jbe
out
sbb
mov
push
int3
arpl
pop
mov
js
rclb
or
push
cmpsb
lea
popa
je
pop
es
add
repz
das
scas
test
sahf
ja
sbb
roll
sbb
mov
add
ss
xchg
or
push
adc
xchg
stos
cmpsl
sub
lods
xlat
mov
sarb
sub
les
pop
popf
sti
mov
es
adc
xchg
enter
cmp
dec
cs
lahf
stos
push
je
sbbl
xchg
pushf
fbstp
mov
scas
repnz
adc
push
push
fiadds
inc
cmpsb
imul
icebp
popa
enter
rcrl
test
sarl
bound
pusha
mov
test
dec
mov
stos
scas
mov
inc
mov
arpl
mov
xchg
out
dec
test
rorl
xchg
and
sbb
pop
cmp
mov
loopne
mov
sub
sti
fsubrl
stc
clc
mov
mov
shlb
adc
or
and
jne
ret
imul
sbb
push
aas
push
cmp
pop
push
mov
add
ja
fdivrl
add
leave
and
mov
pusha
mov
inc
dec
push
inc
cmpsb
fldenv
jg
popa
pop
xchg
or
push
cmpsb
es
test
xchg
inc
jl
jbe
ljmp
mov
inc
loop
mov
cltd
cli
pusha
sahf
mov
aam
cmpsb
xchg
jp
das
fsub
in
fwait
ret
shlb
push
iret
stc
adc
push
addr16
loope
or
cmp
sub
mov
xor
sahf
les
out
push
lcall
xchg
mov
ljmp
xchg
mov
loope
pop
jl
lret
mov
xor
imul
sub
dec
xor
or
mov
mov
jge
ret
roll
gs
das
cltd
mov
dec
gs
bound
out
int
jno
je
and
jb
cmc
stc
sarl
fnstcw
inc
cwtl
push
xor
push
bound
popa
negl
pop
xchg
mov
aam
and
mov
mov
pusha
push
pusha
adc
stc
sub
add
pop
iret
nop
push
lahf
lock
xor
outsl
adc
and
repnz
pop
push
or
ret
inc
mov
jbe
pop
adc
lea
test
push
sti
imul
and
mov
mov
mov
inc
and
mov
jne
daa
sub
dec
pop
mov
push
clc
lods
fnsave
cld
lahf
cmp
clc
je
int
cltd
mov
lods
inc
push
jae
sub
in
mov
rcl
push
test
add
sbb
xor
stc
jmp
insl
cmc
cld
out
into
dec
ret
or
add
mov
push
outsb
push
js
test
fcomp
scas
nopl
sbb
sub
and
ficomps
mov
ret
push
in
xchg
jbe
sub
arpl
arpl
ficoml
aas
adc
cmp
pop
sti
fnstenv
mov
mov
or
adc
add
jp
imul
das
mov
insl
sbb
out
testb
mov
pop
add
fidivrs
inc
fstps
jb
pop
jle
or
push
aas
push
aas
in
mov
dec
ret
mov
or
incl
cli
stos
lea
adc
mov
pop
cltd
push
jle
fldpi
add
aas
ja
push
aas
cmpsb
mov
cmpb
in
adc
jecxz
lods
jecxz
sbb
jp
xchg
andb
add
int3
lds
dec
test
loop
mov
jecxz
pushf
pop
add
nop
dec
push
sti
decb
les
das
mov
dec
lds
mov
movsb
adcb
push
mov
inc
adc
dec
dec
mov
and
cmp
aas
call
jns
fs
out
iret
cmp
into
xor
fnstcw
ja
popa
jne
lea
test
mov
cld
in
fwait
mov
push
jno
test
adc
push
das
loopne
fildll
push
pop
pop
adcl
ret
je
inc
lcall
jle
add
popa
arpl
mov
or
dec
aam
mov
out
dec
dec
pop
in
icebp
js
jmp
or
inc
push
inc
jb
cmpsl
add
fs
aas
scas
out
mov
rcll
mov
mov
lods
jg
inc
cmpl
outsl
jne
popa
int
jp
addr16
mov
pop
adc
sbb
push
push
dec
loope
sub
mov
sub
cwtl
mov
jle
pop
cmc
inc
ljmp
jp
or
fistpll
add
or
nop
add
and
nop
pop
mov
inc
nop
add
scas
mov
shll
in
out
repz
out
out
or
lahf
sbb
sti
jbe
and
and
mov
dec
gs
or
pop
pop
jns
pop
sub
or
idivl
ja
test
cli
pop
push
jns
filds
lahf
mov
movl
push
jg
jge
pop
push
test
sarb
ja
mov
jo
das
movsb
push
jb
xor
sub
aas
adc
shrb
popl
dec
mov
fsubs
and
lock
sub
in
inc
dec
jnp
lret
fisubs
or
push
xchg
fwait
add
fsub
std
sub
imul
pop
aas
dec
js
clc
push
imul
outsl
fwait
rclb
xchg
stos
xchg
and
int3
std
and
mov
in
push
das
lods
adc
test
pop
fsubs
shrl
pushf
call
repnz
scas
mul
mov
out
add
popa
cmp
imul
imull
loope
stos
lahf
fdivrl
pop
inc
mov
jno
sbb
outsb
mov
add
in
add
scas
and
fildl
test
hlt
cmpsl
xchg
xor
and
nop
sub
lea
jge
or
int3
mov
dec
lea
repz
stos
out
movsl
pop
mov
mov
jp
pop
mov
arpl
mov
icebp
mov
add
jne
or
loope
insb
push
sub
pushf
test
rclb
dec
cmpsb
adc
enter
outsl
inc
jmp
fs
sub
sahf
ds
cmp
fbstp
inc
push
push
cmp
jo
test
mov
pop
sub
ficoms
scas
mov
push
jns
aas
out
daa
xor
sahf
mov
or
cmp
ja
xchg
inc
inc
enter
xorb
xchg
int3
aad
xor
push
and
mov
push
lods
aad
xlat
xchg
aas
sbb
cmpsb
dec
jmp
push
push
sub
sub
xchg
sub
sti
push
pushf
fimull
mov
mov
mov
jbe
lods
xor
ja
sub
in
cmp
pusha
and
in
mov
adc
mov
out
in
sub
ljmp
adc
imulb
rclb
lret
aas
loop
imul
push
adc
in
mov
adc
xor
clc
add
pop
test
test
xor
dec
add
inc
in
cmpsb
out
pop
clc
out
into
cmpsb
xchg
mov
stc
xor
adc
pop
xor
into
jmp
add
fnstcw
testl
or
adcb
mov
mov
pop
jns
mov
pop
xorb
bound
out
clc
mov
cmp
gs
cmpsb
push
fcomps
bound
enter
aad
jmp
cld
aam
insl
sbb
pop
ret
add
rcrb
push
cvtpi2ps
mov
std
adc
mov
xlat
imul
out
jle
stc
sub
negl
mov
popa
stc
stc
push
sbb
movsb
hlt
mov
cwtl
out
scas
adc
outsl
gs
insl
add
sbb
rcll
gs
pavgb
or
into
outsl
xor
mov
jmp
cmpxchg
cld
xchg
das
cmp
and
lea
pop
ss
idivl
pop
xchg
fnstsw
std
nop
pop
leave
add
cmp
lods
and
pop
idivl
xchg
push
iret
mov
dec
jo
lcall
jae
mov
pushl
add
xor
aam
repz
imul
pop
popa
clc
jle
mov
adc
lock
jmp
and
cld
iret
hlt
pop
jge
mov
icebp
es
fisttps
mov
test
es
inc
lcall
sahf
cmp
jae
les
mov
push
shll
ja
xor
faddp
adc
pop
cmp
and
outsl
xchg
add
mov
aam
ja
lcall
lods
cld
pop
rorl
cmpsl
cmp
and
dec
xor
shll
and
in
xchg
mov
jge
leave
movsl
orb
mov
test
sub
insb
and
dec
in
jmp
xor
fistl
pop
cwtl
fiadds
pushf
mov
xchg
and
lock
les
xor
sub
bound
sbb
lea
and
shrl
mov
mov
jge
lahf
lea
mov
pop
fimull
cmp
pop
jmp
test
lahf
mov
lea
inc
into
adc
mov
cmpsl
outsl
test
shl
and
xacquire
lcall
mov
decl
cmp
sub
movsb
mov
lahf
dec
lret
mov
fs
mull
jl
clc
mov
hlt
sub
mov
out
mov
and
and
adcb
into
xor
testl
adc
inc
ja
push
sub
insb
xchg
xor
cmpsl
lock
sarl
int3
orl
mov
outsl
push
fs
pushf
inc
push
popf
in
mov
push
mov
xchg
jge
mov
mov
addr16
inc
movsb
jb
cmp
testl
cwtl
fistpl
inc
dec
lods
out
or
aam
push
movsl
gs
xchg
rorb
mov
popf
scas
jle
pushf
hlt
insl
jl
add
cmc
sahf
stc
or
test
dec
jg
sub
pop
jne
frstor
push
cmp
fcmovnb
sahf
sbb
push
pusha
fnsave
je
dec
sub
cmpsb
in
lret
add
xchg
sub
fisttps
mov
loope
xchg
dec
insl
pop
sub
xchg
inc
push
addb
push
xchg
stos
outsb
aad
mov
inc
xchg
push
out
xchg
rcrl
cmp
je
ret
imul
fwait
stc
push
sub
inc
dec
inc
pop
add
imul
fistps
sti
xor
inc
shrl
cwtl
cmp
jle
add
divl
jp
gs
mov
in
mov
lret
call
or
push
das
cmp
xchg
dec
rcrl
ret
stos
and
popa
loopne
cwtl
jbe
lret
sub
mov
test
pop
inc
in
push
push
inc
mov
cmp
jle
and
push
psubw
sahf
xchg
icebp
movl
hlt
mov
in
sbb
push
aad
fcomps
fmull
add
pop
sarl
test
cmpb
rorl
insb
pop
push
jge
aam
fsubrs
in
dec
andb
mov
ss
dec
sbb
mov
or
pop
js
jns
sbb
push
mov
and
test
sub
sub
lahf
sub
sub
fisttps
pop
out
mov
adc
xchg
mov
cmp
rcll
inc
loopne
popa
les
inc
icebp
cmp
pop
fdivrs
jmp
jb
leave
inc
cmp
adc
pop
inc
push
dec
mov
sub
scas
and
outsl
cmpsb
imul
xlat
in
lods
ret
outsl
push
jae
mov
or
ret
xor
scas
or
pop
or
insl
inc
clc
cld
push
gs
xlat
jle
sub
cmp
lods
jnp
dec
mov
sub
jns
or
mov
movsb
pop
mov
rclb
mov
xchg
mov
ret
decl
sahf
mov
gs
cmp
mov
pop
mov
in
out
fcompl
and
ret
xchg
insb
dec
lcall
xor
into
mov
add
leave
add
xchg
jae
in
icebp
sub
popf
rolb
lods
cltd
adc
ss
inc
stc
mov
aad
shll
repz
rcrb
jecxz
popf
adc
sub
xchg
xchg
in
mov
xor
insb
add
fsubrl
lock
movsw
fwait
loopne
cmp
or
pop
lahf
int
daa
sub
or
pop
and
bswap
pop
sub
paddb
and
dec
xchg
dec
push
std
mov
mov
hlt
mov
aaa
xor
in
fsubs
mov
mov
dec
aaa
add
setl
daa
addr16
xchg
pcmpgtw
xchg
pop
out
push
add
clc
add
test
and
push
mov
push
cmpsb
lea
popf
mov
loop
movsl
push
ret
xor
inc
in
pop
xchg
sbb
pop
test
iret
cmpsl
mov
push
jmp
mov
roll
jp
sahf
ss
data16
rcrl
imul
push
xor
jle
pop
ret
jo
pop
push
nop
sub
das
mov
dec
cmp
sub
xchg
adc
jne
push
fdivs
sub
push
mov
inc
out
shll
mov
rorl
xor
or
mov
xchg
inc
xchg
pop
mov
or
cmp
cltd
and
lea
pop
out
and
dec
jg
out
sbb
jmp
sub
sahf
in
lcall
icebp
jnp
int3
pop
mov
jle
loop
sub
cmp
hlt
pop
sahf
mov
add
pop
jecxz
pusha
cmp
adc
pop
and
ret
mov
rorb
outsb
mov
dec
aaa
dec
ret
ja
pop
lea
dec
adc
in
ret
xchg
inc
daa
pop
cmp
sub
inc
addr16
xchg
aas
jl
test
and
dec
mov
add
cs
sub
mov
or
sarl
sub
cmp
fcoms
mov
out
inc
cmp
push
int
shll
mov
adcl
jmp
mov
nop
mov
or
pop
xchg
xor
and
lret
orl
cld
jge
mov
jno
adc
pop
outsl
movsl
cmp
inc
into
rcll
test
shll
test
insl
adcb
inc
les
test
inc
xlat
hlt
cmpsb
filds
adc
flds
pusha
rorb
xchg
lds
xchg
pushf
sub
stos
dec
cmpsb
sub
cwtl
arpl
pop
scas
push
stos
mov
lods
add
push
add
negl
cmpsl
call
sub
bnd
vmwrite
mov
popf
mov
sbb
push
sbb
fwait
push
push
jmp
adc
sarb
push
cld
push
les
push
mov
loope
movsl
shll
fwait
mov
xchg
loop
jno
mov
rorb
cmp
push
loopne
and
jno
sbbl
insl
in
or
mov
daa
push
movsl
mov
fcomi
push
inc
out
cmp
ficompl
data16
in
stc
adc
mov
adc
inc
sbb
adc
add
mov
and
pop
icebp
pop
stos
mov
mov
scas
and
jb
stos
leave
pop
test
lcall
gs
aad
mov
pop
jns
push
adc
outsl
mov
dec
test
popa
vmulss
xlat
addr16
jnp
rolb
cmpsl
shrl
js
pop
add
les
cli
into
pop
cmp
test
and
inc
mov
cli
addr16
fs
iret
xor
shl
and
aas
repz
add
pop
jo
inc
cltd
pop
mov
mov
jge
dec
cmp
inc
je
bound
pusha
test
leave
bound
xor
xor
jl
jge
rol
les
pop
pop
call
cld
out
dec
mov
push
stos
data16
arpl
sbb
inc
cmp
mov
loop
sbb
cmc
test
xor
adc
dec
add
pop
inc
loopne
jne
stos
sahf
add
sub
dec
pop
pop
cmp
xchg
xchg
loop
jb
in
jp
xor
adc
jecxz
gs
cwtl
push
test
sub
out
das
call
or
mov
pusha
mov
or
mov
lock
cmp
outsb
inc
or
push
xchg
popf
xor
pop
dec
test
xor
sbb
pop
repz
dec
and
leave
mov
xchg
xor
jno
popa
jbe
decl
std
mov
xchg
pusha
adc
subl
mov
jge
fstpl
sbb
sub
add
adc
xchg
fsubrp
nop
jp
adc
mov
popa
jnp
outsb
jp
int
sbb
cmc
cmp
lods
push
inc
iret
ss
lahf
fildl
cmp
mov
inc
push
pop
xchg
bound
cmp
cwtl
std
enter
mov
dec
mov
fwait
test
xchg
pop
lret
push
insb
xor
pushf
cs
lods
dec
adc
dec
insl
negb
pop
push
test
fmull
xchg
mov
call
cld
cs
call
js
push
and
pop
mov
fdivrp
insl
cmpl
icebp
xor
mov
cmp
adc
or
adc
and
pushf
stos
inc
push
out
pop
rorl
push
push
add
pop
dec
jnp
mov
ljmp
shrl
xchg
cmpb
inc
sahf
xchg
mov
into
pop
or
adc
xor
push
sar
jb
ds
adc
pop
push
inc
stos
lret
jecxz
ret
fidivrs
adc
out
push
and
sahf
jle
sub
addr16
hlt
inc
fdivrl
stos
jg
fwait
out
xchg
mov
xchg
lods
inc
mov
repz
dec
jp
int3
push
or
inc
jbe
sub
es
je
push
ret
pop
es
sahf
push
adc
pushf
rorl
sub
cmp
and
gs
repnz
xchg
das
out
mov
inc
adc
jo
jb
pop
jns
scas
imul
mov
mov
bound
jnp
or
add
mov
mov
dec
lds
lret
sbb
hlt
sarl
jo
test
cmpl
jge
lock
mov
clc
add
cli
cmp
or
daa
mov
push
out
sti
sbb
jl
cmc
inc
jle
in
cld
lcall
pop
push
xchg
cmp
fcmovb
cmp
popa
xor
ja
xlat
mov
icebp
dec
mov
cwtl
imul
mov
xchg
pop
sub
in
cmc
aaa
dec
mov
jmp
ret
aaa
dec
movsl
pop
pop
and
xor
xor
cmc
fidivrl
pop
and
pop
leave
jo
out
xor
mov
mov
sub
into
add
lcall
cmp
inc
test
lods
mov
pop
cmp
fcomp
mov
lea
jg
dec
sub
clc
dec
xlat
stc
push
dec
mov
out
adc
push
pop
mov
jns
xor
cmp
add
push
aaa
into
clc
mov
outsl
pop
ds
dec
mov
push
out
adc
jb
xchg
bound
fs
ficompl
cmc
outsb
inc
mov
in
xchg
aad
mov
ret
inc
lahf
or
imul
dec
xor
mov
mov
mov
movsb
mov
sub
loop
add
sbb
push
jmp
dec
add
loopne
in
adc
fsubrp
adc
in
nop
daa
dec
daa
push
cmpsb
movsl
mov
pop
adc
and
mov
jge
mov
bound
fisubrs
aam
xchg
and
fstps
mov
jo
shll
mov
cmpsl
pop
shlb
or
mov
pop
jmp
ret
add
hlt
hlt
cld
mov
insb
fcomi
xor
pop
jo
fstps
shll
arpl
jne
pusha
mov
cmp
cltd
pushf
rcll
cmpb
idivb
arpl
cld
scas
int3
ja
jmp
xchg
mov
and
int
das
cltd
jge
adc
push
out
test
negb
jl
call
jecxz
mov
movsl
push
or
jp
dec
adc
inc
and
or
addl
ficoml
dec
dec
ror
jg
ss
xchg
scas
lret
aad
adc
fsubp
or
xor
xchg
push
add
pushf
mov
out
inc
sbb
jne
pop
popf
clc
test
sub
cmp
mov
and
cltd
sarl
or
xchg
out
int
cmpsl
xchg
fnsave
shlb
xchg
call
pop
adc
das
pop
data16
xor
or
sub
xchg
outsl
push
push
mull
out
jp
sub
ror
sub
sarb
dec
fnsave
arpl
sti
mov
lock
fmull
out
mov
cmp
cmpl
or
lret
adc
push
push
or
adc
ret
or
iret
sbb
mov
sub
inc
call
mov
cld
std
mov
in
add
cmp
pcmpgtb
dec
xchg
arpl
cmp
add
mov
push
adc
cmp
cltd
lret
cmc
mov
cmpsb
popa
jmp
add
pop
test
or
cli
inc
cwtl
adc
xchg
sbb
gs
shr
sub
add
ljmp
test
mov
pusha
mov
lret
bound
lret
bound
and
mov
lods
xchg
std
jne
adc
clc
rclb
ljmp
sbb
mov
xor
or
bound
icebp
rol
xchg
sbb
imulb
and
ret
mov
fmull
pop
roll
fidivrl
mov
push
mov
subb
cltd
sbb
bound
mov
mov
mov
loope
fbstp
in
testb
mov
cs
adc
adc
loopne
test
dec
jmp
mov
int
int3
gs
mov
das
cltd
adc
mov
mov
ffree
jecxz
sub
mov
ret
xchg
stos
in
hlt
dec
mov
mov
inc
sub
sbb
cmp
fwait
movsb
stos
fcoml
dec
cmp
sbb
mov
aaa
lret
cli
jb
call
test
xlat
mov
jg
xlat
push
movnti
cld
stos
insb
mov
xchg
pop
mov
mov
lret
inc
bound
mov
cmc
adc
dec
xchg
sbbl
mov
cmc
jp
inc
mov
sub
mov
xchg
cwtl
cmpsb
mov
xchg
fwait
push
arpl
lcall
test
lret
or
int3
add
rorb
cmp
cwtl
push
push
cmp
mov
clc
pushf
mov
add
ja
std
add
mov
and
sbb
cmp
adc
mov
shlb
cmp
jns
enter
push
loop
fcomps
mov
mov
sbb
push
nop
roll
aam
inc
into
xchg
jecxz
sub
leave
in
xchg
push
xchg
inc
xchg
mov
mov
push
cmp
sbb
stos
jno
mov
or
jne
push
ror
mov
xor
fnstcw
push
mov
fcompl
test
and
mov
jne
xor
loope
adc
cwtl
lea
xor
pop
shlb
cmp
fs
ror
mov
scas
inc
jnp
adc
test
push
test
repnz
and
dec
rcll
jb
mov
dec
dec
jbe
dec
addl
sub
push
outsl
sbb
xor
mov
push
fwait
scas
imul
xchg
and
mov
ds
ss
fnsave
add
and
loope
ret
mov
add
mull
nop
push
inc
and
pop
lock
andb
daa
jp
in
xchg
xchg
jbe
popf
sub
or
into
and
cmpsb
fabs
mov
jno
mov
inc
or
in
imul
aam
fildl
xchg
aad
loopne
fwait
loopne
cmp
jp
mov
or
lock
sbb
mov
out
fdivs
pop
add
mov
fidivrl
or
jl
add
adc
or
shrl
cs
adc
pusha
fcom
dec
xor
pop
pop
sub
cmp
inc
jg
nop
sbb
stos
jbe
test
ret
stos
dec
ficoml
xchg
lret
push
shlb
lods
add
xor
scas
loope
loop
inc
mov
fcmovu
xchg
jge
bound
negl
add
add
push
aas
ja
arpl
out
test
lds
dec
pop
dec
jnp
out
jl
cmp
hlt
pop
rorl
push
mov
push
cmpsl
add
pop
ror
mov
xchg
pop
cmpsb
cmp
ljmp
jae
sahf
es
xchg
xchg
inc
sahf
aam
xchg
lods
mov
fidivl
adc
push
call
popa
adc
push
fmul
push
pop
sbb
add
sbb
or
xchg
mov
sbb
push
lods
jnp
mov
js
adc
push
jmp
mov
aas
rclb
std
xor
cld
cmpsb
add
sahf
mov
cmp
cmp
iret
in
aam
mov
mov
pop
adc
xor
dec
pushf
jp
mov
cmp
hlt
in
repnz
add
lea
cmp
sbb
dec
call
repz
les
mov
std
mov
xchg
sbb
test
rorl
push
mov
scas
in
mov
cmc
and
orl
mov
pop
jnp
mov
pop
in
test
imul
loop
std
cmc
jns
xor
and
mov
or
fmul
lahf
ret
dec
jno
jbe
or
test
jnp
call
nop
inc
xchg
inc
notl
jmp
push
icebp
pop
and
or
imul
fildll
xchg
insl
jp
std
jns
sub
inc
ljmp
pop
adc
mov
ja
fdivr
pop
mov
and
pop
pop
push
test
movsl
test
xlat
xor
mov
push
xor
lret
cmp
cmp
sahf
and
pop
pop
pop
sbb
inc
add
rcr
xchg
enter
sbb
xor
mov
push
lods
stos
or
push
or
or
adc
test
stos
cltd
test
stc
dec
cmp
add
fcoms
jge
lods
push
push
push
aas
xlat
fistps
sub
cltd
loopne
cmp
sarl
stc
jns
out
lcall
test
pop
daa
and
lods
jno
test
dec
clc
call
sub
xor
out
lea
and
aam
ret
sub
hlt
cmpsl
loop
pop
and
insl
cmp
jno
out
or
pushf
jmp
nop
jno
shrb
frstor
and
stos
aam
inc
sub
hlt
and
out
insl
or
inc
loopne
scas
mov
sbb
sbb
xchg
outsl
mov
cmp
mov
sti
mov
stc
pop
cmp
stos
stc
into
push
xor
jb
xchg
adc
jnp
into
push
adc
js
push
add
int
addr16
lret
cmp
mov
push
add
adc
xchg
insb
inc
sti
in
cld
inc
mov
pop
jecxz
jle
sub
pop
adc
xchg
mov
mov
mov
imul
sub
and
pop
fs
sbb
out
push
ja
push
sbbb
cmpsb
mov
mov
fdivrs
mov
xchg
fstps
jle
iret
mov
jne
ret
or
add
push
and
sub
or
push
jnp
out
add
dec
in
rcrb
stos
pushf
xchg
dec
push
lods
lcall
and
jbe
pop
mov
out
loopne
mov
inc
push
xchg
sbb
adc
mov
dec
sub
imul
or
out
mov
and
xor
add
add
inc
inc
ja
push
xchg
lret
xor
dec
cmpsl
daa
dec
rol
and
sbb
inc
std
ret
cmpsl
and
adc
inc
inc
sbb
scas
push
xlat
pop
jb
cmp
and
xchg
std
add
fbld
push
jmp
sbb
dec
insl
mov
out
movl
insb
clc
cmpsl
stos
stc
xor
push
xchg
sbb
sub
mov
loope
sbb
test
jo
comiss
imul
and
jb
xchg
adc
jo
pop
test
push
outsl
pop
cmc
mov
std
orl
xchg
and
imul
out
repnz
icebp
loopne
push
xchg
sbb
cmp
sbb
inc
add
and
jne
scas
sub
xlat
jmp
inc
stc
jne
lds
rcrb
pusha
in
pop
pushf
sbb
mov
pop
lods
xor
jae
mov
mov
movsl
mov
aad
or
lds
test
cmp
mov
or
jno
sub
adc
cs
scas
xchg
lods
push
mov
sub
test
cmc
pop
gs
mov
test
xchg
nop
pushf
sub
mov
ss
mov
sub
mov
dec
pusha
xchg
or
adc
std
ret
sbb
adc
test
cwtl
mov
dec
lods
inc
dec
mov
insb
lahf
mov
or
push
std
jmp
cmp
add
adc
in
or
call
adc
lahf
outsb
std
sbb
push
pop
addb
dec
cld
xchg
in
std
add
mov
imul
stc
push
jne
mov
sti
adc
clc
sub
xchg
cwtl
sbb
cmp
js
sbb
or
mov
dec
lods
inc
and
jecxz
add
pop
int3
ret
push
bound
xchg
mov
push
or
js
mov
xchg
ret
iret
ja
mov
sbb
popa
dec
cltd
mov
cmp
pop
frstor
cli
testl
mov
leave
fcoml
or
cwtl
mov
nop
and
mov
and
add
xchg
js
iret
xchg
xchg
cli
std
or
lret
loope
clc
xor
out
xor
dec
push
inc
jne
inc
jno
into
cmp
fcmovne
jecxz
add
cmp
adc
mov
subb
stc
jnp
jmp
xor
sbb
sub
pop
loop
clc
mov
pop
pop
fs
add
xchg
mov
adc
add
xor
or
xchg
pop
nop
sub
push
aas
mov
stos
imul
jmp
xchg
cmp
xor
ljmp
ljmp
nop
xchg
cmp
inc
in
jnp
imul
aam
xlat
aas
aam
mov
adc
fisttpll
scas
cmp
movsb
rcrl
mov
cmp
cmp
pop
dec
lahf
and
xchg
and
push
dec
hlt
aam
pop
scas
bound
out
std
in
adc
sub
out
cltd
dec
test
or
bound
in
or
cmp
rcr
out
xchg
dec
xchg
push
rorb
aas
mov
dec
iret
jbe
push
push
add
in
scas
mov
adc
sub
icebp
mov
mov
jle
add
lcall
shlb
xor
cltd
loopne
test
addr16
stos
push
outsl
inc
dec
bound
cmp
push
mov
aam
in
movsb
and
jle
pop
sti
push
mov
lahf
js,pt
xor
ljmp
fadds
rcll
aas
in
cmp
outsl
shrb
adc
fdivl
mov
or
pop
or
ror
and
pop
jge
pop
adc
inc
mov
adc
jl
rcrl
mov
or
je
int
inc
fsubl
jbe
xchg
adc
ja
stc
sbb
xor
push
lea
and
sahf
not
push
cmpsb
mov
push
ljmp
lods
cwtl
movsl
push
sbb
repnz
jo
jnp
and
int
mov
aas
pop
nop
popf
mov
xor
lock
mov
in
or
cwtl
push
repnz
gs
pop
or
sbb
stos
push
jmp
push
adc
mov
and
mov
outsl
jle
iret
fisttpl
xchg
mov
push
movsl
hlt
dec
sbb
lds
les
sbbl
mov
inc
roll
addr16
add
inc
or
push
jmp
xor
js
cmc
cmp
movsb
ror
aam
cli
rclb
jle
xchg
sahf
ss
dec
movsl
dec
jg
leave
mov
ret
push
add
add
lods
in
fwait
addl
sbb
popa
pop
daa
mov
pop
aaa
imul
mov
es
xchg
stos
scas
lea
sub
js
push
iret
fisttpll
in
jae
and
in
lret
int
cmp
jo
adc
and
mov
ficomps
loope
pushf
sbbb
adc
outsb
sbb
mov
roll
jnp
sti
stc
hlt
jo
ret
or
xor
add
aam
mov
pop
ret
jno
add
roll
mov
cli
ret
ss
mov
dec
pop
shl
fwait
mov
aas
inc
mov
lods
sbb
sbbb
inc
inc
add
adc
xor
xor
sbb
or
insb
dec
mov
push
aaa
bound
mov
mov
jp
call
clc
or
es
inc
xor
mov
pop
aaa
scas
or
js
or
inc
aad
xchg
mov
ja
sti
shll
push
fndisi(8087
add
ror
and
out
jecxz
inc
pcmpeqb
sarb
mov
xchg
cmp
outsl
int
xchg
mov
lods
sbb
inc
cmp
adc
adc
cli
inc
xchg
xchg
test
or
add
fidivrl
ljmp
nop
call
loopne
pushf
push
jp
mov
js
jno
cwtl
mov
and
insb
shrl
je
or
clc
pop
adc
lcall
add
mov
lods
mov
cmpsb
jnp
stos
sub
pop
adc
fnstenv
mov
nop
jl
dec
int3
or
xchg
mov
adc
movsb
loopne
dec
cld
fcmovb
std
mov
lcall
xchg
ret
mov
ja
pop
repz
xchg
lret
aas
xor
fnstenv
adc
jmp
leave
add
sub
inc
testb
sbb
nop
xor
push
adc
inc
fs
les
xchg
push
mov
int
cmp
call
in
dec
repnz
sub
xchg
jge
dec
push
clc
idiv
loop
mov
pushf
pop
test
xchg
addr16
inc
in
and
xchg
insb
aas
xchg
dec
sub
ret
in
iret
mov
fdivrl
and
push
jno
pop
cmc
ret
jl
xlat
into
cltd
lahf
mov
je
je
xlat
jbe
sub
ds
and
adc
sub
loope
or
out
std
inc
cmp
xchg
mov
outsl
pop
mov
adc
or
adc
out
push
addr16
test
lldt
insl
and
sbb
cwtl
inc
pop
push
insl
orb
call
mov
add
lods
push
mov
push
hlt
cwtl
aam
adc
in
xchg
jns
icebp
outsb
ror
out
mov
cltd
xchg
cmp
xchg
fwait
pop
lahf
and
dec
popa
add
ljmp
inc
pop
ljmp
scas
sbb
adc
aas
stos
ret
sub
dec
faddp
pop
hlt
jl
mov
or
mov
pop
sub
stos
xchg
cmp
and
repz
in
mov
mov
jle
mov
repnz
adcb
les
loopne
cmp
mov
xor
ss
fmull
mov
adc
and
movsl
das
adc
push
int
dec
inc
xchg
dec
xchg
fcmovnu
je
cmpsb
das
jmp
mov
rcll
add
mov
xchg
icebp
dec
fxch
in
data16
andb
js
dec
cmp
mov
mov
jg
jge
push
cmp
push
call
cmp
dec
pop
hlt
mov
idivb
adc
mov
dec
push
je
stos
xchg
dec
sub
xor
insb
out
ror
xchg
dec
pop
fsubrl
popa
sti
negl
cmp
mov
jmp
jno
pop
adc
mov
sub
ss
dec
and
rcl
movsl
pusha
xlat
test
xchg
fsubrs
fcomps
fst
add
jno
jmp
nop
rclb
mov
je
out
in
pop
lea
mov
ret
or
jg
jne
xlat
jecxz
xor
sti
cmp
clc
mov
cs
mov
test
pop
outsb
fildl
xchg
addb
mov
jmp
loop
push
cld
das
sbb
into
dec
add
leave
jp
fcmovnu
sbb
lds
bound
lret
sub
dec
pop
aas
jle
inc
lock
dec
push
fisttpll
dec
dec
sbb
mov
mov
sbb
mov
cs
stos
add
subl
lods
je
mov
mov
in
lcall
addps
fildl
add
rol
mov
lock
push
gs
movsb
in
mov
mov
stos
jge
xor
mov
xchg
outsl
jmp
pop
ja
and
dec
lods
stos
divb
dec
and
test
sbb
mov
das
mov
popf
inc
cmp
jb
and
mov
sahf
mov
out
ljmp
fsts
push
mov
jmp
movsb
mov
push
mov
mov
mov
sbb
shll
jle
in
adc
sbb
adc
imul
dec
les
sbb
inc
sti
mov
mov
or
push
repnz
jge
jae
push
jmp
test
or
or
pop
xor
movsl
mov
imul
pop
mov
imul
rorl
mov
jmp
push
sub
fisubs
enter
in
test
not
in
out
pop
dec
stos
das
adc
add
push
cwtl
push
and
mov
sbb
dec
inc
out
std
adc
push
pop
xor
push
int3
sbb
sub
dec
jae,pt
lods
fs
insl
cltd
or
or
cwtl
mov
push
or
sbb
dec
outsb
ja
shlb
push
xchg
imul
pop
les
fstpt
xor
enter
add
outsl
fstp
fdivl
or
ja
scas
cmp
pop
dec
popf
mov
mov
outsb
inc
hlt
mov
xchg
inc
mov
incl
cmp
and
xchg
stc
into
and
lcall
xor
cmp
movsl
lcall
lret
mov
or
push
rorl
call
mov
ret
lret
pop
xor
sub
push
cmp
test
pushf
cwtl
jmp
sti
xor
rolb
out
push
lock
repnz
adc
jecxz
imull
adc
imul
or
loopne
and
mov
pop
ss
xlat
sbbb
rorb
imul
xchg
daa
dec
pop
mov
mov
mov
mov
xor
cmpsl
mov
fisttps
mov
jns
mov
sub
sub
push
pop
push
sub
mov
inc
dec
out
mov
jp
repnz
inc
iret
pusha
xchg
stos
stc
daa
dec
and
push
std
sbb
scas
push
lahf
call
lods
jge
jno
mov
ror
push
fsubl
fistpl
leave
sbb
es
dec
push
stos
xor
sbb
xor
xor
movsb
loope
jb
stos
xchg
jne
pushf
pop
jo
pop
xor
and
jp
mov
adc
test
jns
sarl
addb
cli
jb
mov
aas
jmp
outsb
xor
pop
jo
adc
fmulp
out
xchg
sarl
roll
scas
lods
sub
nop
xchg
in
cmp
jne
jp
pop
mov
stos
in
ret
testb
mov
mov
rol
sbb
pusha
scas
mov
insb
mov
in
js
shl
in
xchg
push
sub
mov
dec
xchg
cmpsb
xchg
outsl
out
xlat
jecxz
xchg
sbb
cmpsl
fs
adcl
popa
xchg
sub
jns
adc
popf
lret
je
enter
fstl
into
cmp
std
or
adc
mov
mov
cmp
hlt
push
dec
jbe
inc
loopne
sub
std
pop
stos
push
bound
cli
xchg
xor
lcall
dec
clc
mov
stc
adc
mov
adcb
jmp
in
lock
cmc
and
xchg
in
pop
filds
enter
pop
ja
stc
mov
cmc
mov
popa
or
push
aad
repz
sbb
or
pop
jne
or
add
cmpsb
lcall
dec
mov
sub
ret
shll
clc
sub
mov
rol
xchg
popa
pop
mov
lahf
push
insb
inc
dec
out
enter
test
mov
inc
xor
sub
cmp
jno
gs
das
lahf
cmp
cmp
dec
adc
xchg
inc
inc
insl
sub
clc
int
inc
push
cli
dec
xor
cmpsb
add
xor
js
adc
pop
pushf
pop
inc
dec
enter
push
dec
cmp
xchg
push
cmc
xchg
add
mov
mov
or
test
or
sbb
dec
mov
mov
js
out
mov
ss
add
inc
or
aad
sub
clc
std
sbb
adc
ljmp
or
popf
lcall
lcall
add
pop
jae
xchg
cmpsl
hlt
out
sbb
sahf
aam
jno
shrb
push
incb
and
lcall
in
shlb
sub
mov
mov
xor
fimull
push
divl
ds
mov
mov
push
adc
adc
out
sub
sti
mov
fbld
dec
mov
mov
and
gs
mov
mov
das
cwtl
mull
xchg
inc
add
sbbl
popf
cmp
daa
sti
es
adc
out
push
pop
and
jno
lods
ja
sub
pop
int
jecxz
sti
hlt
xor
insb
loopne
lock
add
dec
sbb
mov
cmp
das
sub
dec
push
fsubrp
add
adc
mov
pusha
adc
jb
mov
mov
in
lret
pop
neg
dec
mov
bound
imul
adc
push
ljmp
test
dec
inc
dec
clc
ss
scas
pop
rorb
mov
rcll
out
adc
lahf
loopne
cmp
rcrb
xchg
sub
jmp
push
outsb
pop
sbb
aam
or
popf
rcrl
fisttps
pop
test
dec
iret
adc
shlb
enter
adc
lret
jb
test
fsubs
scas
pushf
sbb
nop
outsl
rorl
out
inc
enter
push
flds
fs
pusha
subb
inc
lret
jns
popf
aas
or
push
xchg
test
inc
dec
aas
outsb
arpl
cli
xchg
sbb
dec
inc
pop
xchg
inc
shrb
enter
in
mov
sbb
js
lret
imull
sub
mov
push
jne
inc
jne
push
cmc
xor
cmp
sti
mov
clc
lahf
ret
sti
mov
dec
iret
xor
push
lods
fwait
or
rclb
sbb
pop
ret
push
push
mov
lahf
xchg
movsl
sub
bswap
lea
and
or
ror
adc
addr16
dec
xchg
mov
mov
fldenv
mov
dec
sahf
les
std
jne
stc
mov
out
not
cmp
inc
jnp
call
clc
addr16
arpl
dec
mov
mov
cs
lods
mov
push
ret
push
inc
xor
jns
int
dec
cmpsb
cli
jno
lds
ljmp
push
adc
cmpsl
mov
mov
leave
add
xchg
xchg
in
ljmp
shll
scas
out
scas
mov
aaa
pop
rorl
iret
and
xchg
std
fs
call
aaa
xorb
mov
mov
xchg
mov
sub
add
lods
push
pop
jmp
cmp
push
int
jbe
xchg
xchg
leave
mov
inc
dec
or
mov
mov
call
pop
iret
and
cmp
ret
shll
fsts
mov
ss
lar
mov
scas
dec
push
gs
xchg
popf
mov
lods
pop
mov
pushf
mov
mov
pop
and
adc
add
push
dec
jp
dec
sbb
sarl
rorl
mov
pop
clc
inc
jnp
aaa
mov
sar
xchg
pop
xor
jmp
orb
pop
int3
lret
cli
mov
aaa
rcrl
pusha
cwtl
mov
int
gs
push
and
sbb
push
push
xchg
mov
or
inc
stos
bound
pop
dec
int3
ljmp
mov
inc
js
fisubs
adc
in
loop
cli
push
xor
and
fsubrs
and
lret
icebp
enter
test
arpl
test
push
cmp
ret
pop
adcb
pop
scas
mov
adc
mov
add
dec
pop
popf
inc
push
pop
xadd
jno
add
enter
enter
ljmp
xchg
stc
cltd
hlt
scas
ret
jb
or
adc
cmp
out
push
inc
call
insb
lds
hlt
js
into
inc
iret
push
push
jno
jge
out
scas
aam
cmp
xchg
mov
lcall
xchg
gs
add
lock
roll
cmpsl
inc
mov
cmc
mov
call
test
adc
pop
inc
ficoml
comiss
sub
push
jb
in
jnp
std
adc
sarb
add
sub
pusha
jno
mov
not
dec
sbb
mov
mov
mov
adc
mov
mov
and
hlt
stos
repz
push
das
in
popf
gs
inc
loopne
dec
test
inc
xchg
cmp
out
add
mov
inc
push
pop
jne
das
bound
shl
loopne
pop
xor
in
adc
shll
mov
jge
mov
jbe
jg
jne
sahf
push
dec
sub
test
sbb
fstpl
push
lcall
inc
nop
movsb
and
sbb
inc
jne
repnz
push
mov
imul
adc
adc
jp
negb
xchg
xchg
mov
sub
add
xchg
push
arpl
dec
sub
or
sub
xchg
cmpsl
loop
pushf
stos
cmpsb
push
jne
adc
fcomi
mov
orl
or
mov
mov
and
and
clc
adc
test
mov
jb
add
xor
aaa
xchg
fstpt
xchg
lds
sbb
popl
dec
cmovs
push
sub
pop
sub
mov
cs
test
push
lret
movsb
jecxz
orl
push
enter
pop
movsb
or
int
ljmp
fildll
test
outsl
gs
and
js
gs
sbb
iret
scas
mov
jb
mov
push
sbb
enter
xchg
dec
rolb
loope
iret
push
rol
mov
aaa
into
lods
mov
fwait
icebp
sbb
ret
repz
dec
xor
lret
test
test
inc
lret
lret
notl
add
cwtl
fcmovnbe
cmp
int3
cmp
and
jl
sub
jecxz
adc
int
test
push
mov
mov
inc
or
sub
pop
adc
arpl
out
sbb
xor
adc
cs
inc
mov
mov
pop
adc
bound
pushf
in
test
aaa
cli
mov
loop
xchg
daa
sub
sarl
aad
and
and
cmpsb
es
cld
inc
mov
jmp
cwtl
out
mov
orb
std
inc
dec
pushf
pop
ficompl
lock
sub
sarb
jmp
or
pop
sbb
mov
fsubrl
cltd
dec
jp
push
push
pop
mov
jne
cmp
push
jnp
shrb
jp
lods
mov
push
imul
sti
sbb
cmp
jno
cmpsl
ljmp
push
pop
push
pop
in
je
jne
or
inc
iret
jle
leave
aaa
test
dec
mov
inc
ficoml
and
cmp
jne
jne
pop
lods
push
enter
lahf
push
and
stos
movsb
adc
movsb
lcall
jp
aad
sti
cmp
jge
hlt
popf
mov
pushf
je
xor
rorl
in
cmpsl
es
stos
mov
pop
mov
fists
aas
pop
fisttpl
cmpsl
and
or
cmpsl
inc
dec
jno
and
negl
and
mov
push
out
imul
xchg
pop
jo
dec
sbb
lea
jno
cltd
sub
daa
adc
mov
jae
fdivrp
push
pop
cli
push
aad
daa
pop
cmc
jmp
adc
push
cs
jmp
gs
mov
adc
aas
mov
and
je
xor
cmpsl
lret
pop
pop
jns
pushl
pop
cmp
je
dec
mov
add
adc
xchg
stos
push
fcmovnb
out
jae
dec
lret
sub
gs
push
aad
sub
mul
push
je
repz
jns
ss
sub
inc
adc
in
in
hlt
add
gs
pushl
cmpb
jnp
aad
xor
lcall
lcall
and
test
push
adcb
leave
jb
fisttps
fnstenv
negb
and
and
iret
mov
scas
and
mov
psubusb
std
popf
popa
sub
test
insb
dec
xchg
pop
arpl
push
jne
mov
scas
cmpsl
xorl
in
mov
ret
mov
xchg
sbb
mov
sbb
jo
pusha
inc
vblendvps
clc
in
repnz
jne
dec
dec
rcl
stos
cmp
pop
ds
fildl
xor
loop
pop
adc
nop
popf
mov
inc
mov
jp
adc
shlb
out
aam
jnp
jecxz
repz
push
pop
add
cmp
pcmpgtw
jno
xor
in
cmpsl
nop
or
jno
xor
int
push
xchg
xchg
mov
or
xchg
scas
lcall
jge
insb
mov
jae
dec
arpl
out
mov
repnz
bound
jne
push
jge
rolb
xchg
mov
fiadds
push
movl
pop
out
inc
xor
fists
push
sub
shr
icebp
or
loopne
and
pop
mov
mov
cli
sarl
lock
mov
push
jne
xchg
jcxz
mov
mov
mov
mov
addr16
popa
adc
and
pushf
sbb
lods
mov
mov
inc
push
inc
addr16
frstor
mov
testb
popf
mov
adc
sbb
imul
shr
ds
test
sub
lret
ret
xchg
loop
shl
out
add
pusha
negl
cld
add
cmpsl
es
xchg
bound
iret
pop
out
mov
pop
jno
mov
into
outsb
test
data16
jl
iret
icebp
fs
ret
outsl
fisubs
add
lds
and
add
pop
push
cmp
stos
push
add
jecxz
loope
clc
pop
mov
js
jle
scas
inc
dec
rol
ds
adc
cmpsb
mov
and
or
into
adc
nop
cmpsb
lods
enter
push
inc
push
popa
fistps
xor
push
in
mov
cmp
negb
jp
std
mov
sbb
add
orb
pop
in
sbb
pop
and
push
pop
sub
mov
aad
nop
icebp
or
movsl
jns
and
inc
out
mov
test
jae
lret
ja
nopl
rolb
pop
imul
dec
mov
mulb
jp
jle
push
lods
push
mov
daa
lods
add
jle
sbb
in
sbb
dec
rcrb
mov
bound
fistpl
nop
cwtl
xor
aas
insl
xchg
stc
jl
push
cmp
jns
sub
pop
gs
jns
pushf
cmp
jmp
pop
into
sbb
jmp
inc
clc
sbb
test
mov
jmp
push
and
adc
faddl
ror
mov
aas
iret
int3
ja
pop
cmp
jecxz
out
dec
in
shll
cmp
pop
out
pop
lods
stc
mov
insb
into
mov
pop
xchg
xor
mov
mov
adcl
xchg
pop
cli
test
push
jge
mov
and
lea
cld
inc
pop
pop
sub
outsl
jns
and
pop
push
fists
add
loop
pop
test
push
xchg
out
mov
pop
pop
xchg
dec
out
int3
fs
gs
gs
js
fdiv
mov
fisttpll
or
lahf
and
sbb
subl
push
jne
mov
pop
xor
fildl
pop
lcall
sahf
into
adc
xor
rorl
mov
cmp
inc
push
jl
push
cmp
outsb
push
jbe
mov
shl
mov
adc
inc
iret
stos
inc
mov
jnp
or
sahf
scas
shr
jnp
cltd
int3
mov
xchg
lret
xchg
xchg
sub
push
sub
jmp
sub
insl
test
fisubrs
jge
sahf
mov
les
add
out
repnz
mov
mov
sbb
mov
dec
outsb
dec
jle
jne
jg
outsl
negb
mov
pop
neg
push
add
in
xchg
cltd
inc
movsl
adc
dec
imul
lret
dec
inc
mov
push
in
andl
subl
sub
sub
cmp
pop
push
lods
std
push
test
xor
inc
push
mov
sbb
push
inc
or
mov
inc
xorb
outsb
scas
mov
dec
and
movsl
hlt
test
lcall
inc
adc
jae,pt
mov
faddl
mov
jne
mov
pop
pop
push
fstp
stos
ja
sub
or
cltd
insl
or
shrb
ret
ljmp
and
add
sub
mov
jmp
xlat
push
mov
je
push
pop
cmp
sbb
loop
xor
adc
push
std
or
mov
jo
mov
dec
mov
mov
push
add
std
mov
shll
adc
mov
imul
mov
sbb
and
dec
fbstp
addb
jb
mov
insb
jmp
imul
or
inc
insb
xor
popa
mull
addr16
mov
cmp
or
out
cld
jmp
cmp
lock
add
xchg
add
sub
inc
leave
shlb
stos
push
andl
jecxz
cmp
lcall
std
js
pop
dec
or
xlat
mov
les
push
ds
add
ljmp
ret
and
dec
xchg
add
addr16
mov
push
inc
mov
cltd
add
xor
sti
std
pop
push
inc
mov
ficompl
mov
xchg
xchg
pop
inc
cmp
xchg
and
in
xor
push
insl
rorl
or
mov
sub
jmp
test
xorb
xlat
push
in
cltd
mov
adc
leave
stos
out
mov
nop
fidivs
inc
mov
cmp
pop
das
pop
push
stc
push
lock
dec
arpl
lods
je
enter
out
adc
inc
and
hlt
shr
repz
lock
pushf
cli
cmp
xchg
add
push
decb
movsl
push
xor
ret
mov
clc
aad
inc
scas
cmp
ret
push
jns
test
sbb
ljmp
push
mov
xor
test
pop
in
repnz
notl
lea
mov
psubw
jle
and
fldenv
iret
sub
aaa
xchg
mov
out
lea
cwtl
sub
fidivrl
ds
cmpsl
jecxz
pop
addr16
das
push
mov
xchg
push
es
adc
and
jb
daa
aas
jne
push
and
outsl
sbb
inc
aaa
repz
addr16
in
mov
push
or
dec
popf
es
fistl
push
or
insl
sbb
xlat
cmp
fwait
rcrb
fildll
fs
or
adc
inc
inc
adc
push
add
js
popf
add
stos
enter
mov
xchg
repz
fs
xor
sahf
sub
fldcw
mov
adc
movsl
mov
jmp
out
push
arpl
in
jne
into
arpl
push
rolb
inc
xchg
sbb
cmc
movaps
cmpsl
es
fisubrs
inc
subl
cld
aaa
xchg
insl
das
addl
mov
rolb
int
lock
cmp
dec
jno
push
cmpsb
mov
lahf
pushf
scas
xchg
xchg
cli
aaa
aaa
jmp
or
mov
sti
adcl
movsl
lods
cmp
outsl
int
call
and
mov
inc
sbb
nop
and
mov
push
lcall
jmp
cltd
sahf
add
xlat
jae
sbb
inc
inc
jp
ret
inc
add
mov
mov
in
rclb
std
mov
adc
test
add
cwtl
sbb
inc
sub
icebp
jno
test
lods
in
aad
xor
and
fildl
mov
push
pop
hlt
aas
or
fwait
pop
inc
int
dec
sub
mov
shrb
lret
stos
int
adc
or
jle
xchg
mov
je
xchg
add
add
lds
mov
adc
ret
cmp
push
dec
pop
in
cld
mov
cld
int3
sarb
leave
shl
in
sbb
dec
stos
mov
lcall
cmp
add
insb
xor
repz
or
mov
xor
cmp
mov
push
add
incl
fsubs
test
in
dec
aas
push
pop
fmulp
push
shll
outsb
insb
adc
mov
pusha
movl
clc
stos
mov
loopne
fcompl
or
lret
mov
dec
cltd
xchg
lret
add
dec
sub
fnstsw
xchg
push
das
mov
jbe
call
sub
push
sti
ret
xchg
lock
xor
dec
inc
test
push
std
dec
aaa
fiadds
repz
fstps
test
mov
pusha
dec
pop
dec
cmpsb
fistl
das
leave
adc
rclb
andb
mov
jp
or
sbb
loope
pop
adc
inc
data16
adc
repnz
jecxz
out
jo
xchg
mov
ret
adc
ficoml
cwtl
xchg
push
dec
xor
repz
xchg
add
aas
int3
nop
cmp
repnz
fwait
daa
inc
ja
repnz
fs
jg
dec
cs
adc
cmp
pop
mov
mov
popf
sub
nop
mov
and
xlat
mov
repnz
pop
in
xchg
gs
push
add
testb
mov
jnp
fstps
nop
out
gs
jbe
cs
xchg
lea
popf
fdivl
mov
icebp
es
jb
xlat
movsl
outsl
sahf
divb
aaa
mov
dec
push
orl
xchg
or
dec
dec
outsb
icebp
rorl
add
mov
cmp
fcmovnu
incb
imul
pushf
movl
iret
adc
adc
jge
cmc
nop
push
and
stos
dec
xor
xor
mov
push
jno
dec
push
mov
xchg
mov
add
cmp
jbe
xchg
not
push
jb
xchg
mov
mov
int3
or
fadds
xchg
xor
std
movsb
jmp
mov
sahf
aaa
xchg
loopne
xchg
fdivr
movsb
push
xlat
jmp
push
fisubl
js
js
paddb
inc
mov
mov
lea
sbb
mov
add
cmc
pop
imulb
lahf
jge
les
fwait
test
mov
inc
gs
lret
mov
enter
repnz
mov
xchg
and
cmc
add
shrl
xchg
lds
aaa
ret
popf
sbb
pop
lock
aaa
iret
hlt
repz
ljmp
add
xor
adc
enter
push
mov
stos
jo
lahf
xchg
mov
mov
std
and
and
mov
outsb
mov
cmc
pushf
inc
je
cmp
xchg
pop
test
mov
cmp
scas
fcomps
ret
ss
sbb
aas
fmull
mov
mov
sbb
pop
icebp
rcl
xor
movsb
int
leave
mov
or
lock
das
inc
push
js
jne
sti
popf
insl
adc
pushf
or
xor
lea
push
inc
jnp
sub
mov
cwtl
or
out
ret
pop
jl
popa
incl
jae
ss
mov
add
aad
pop
and
imul
sub
inc
loopne
pop
xor
dec
dec
inc
xchg
xchg
fisubrs
cs
mov
add
fcmovnbe
call
cmpsl
mov
mov
pop
xchg
lock
aas
inc
jo
fwait
jbe
or
push
cld
lea
popa
pop
ds
mov
and
xchg
push
enter
loopne
or
out
and
xchg
call
jo
jne
sub
xor
imul
lret
out
inc
sbb
leave
xchg
sahf
jno
or
out
pop
sbb
mov
fs
xorb
dec
jmp
ret
xchg
ja
mov
hlt
push
gs
xor
xchg
sub
xchg
add
das
sbb
add
das
nop
pop
lret
jno
inc
xorb
imul
xor
in
mov
inc
cmp
popf
ret
sub
or
inc
lock
push
mov
inc
push
ds
inc
sub
fcoml
mov
or
arpl
shr
lret
jnp
sub
xor
rorb
jae
mov
mov
push
adc
jns
lds
cmp
sub
pop
pop
jb
cwtl
dec
imul
insl
in
arpl
mov
outsl
sbb
dec
clc
xchg
dec
inc
sub
inc
ljmp
or
jne
dec
mov
add
jp
arpl
arpl
inc
lods
orl
jne
add
std
xchg
push
cmovbe
lods
mov
daa
je
loope
cmp
xchg
add
in
mov
bound
shrl
push
xchg
adc
int
pushf
adc
xlat
xorb
lret
leave
or
jecxz
adc
push
sub
mov
lds
test
call
in
inc
cli
loop
mov
out
insl
hlt
mov
mov
pop
cmpl
enter
cwtl
leave
pop
mov
mov
fldl
testb
repnz
mov
or
mov
push
mov
fcomps
push
fwait
test
push
push
aad
test
aas
test
xchg
int3
movsl
cs
data16
add
push
xlat
and
lds
mov
inc
scas
js
movsb
out
dec
ret
or
inc
mov
cmp
int3
inc
sbb
sbb
movsb
in
xchg
mov
or
adc
push
adc
in
outsb
inc
cmp
inc
scas
out
push
cmpsb
xor
loope
xchg
xor
dec
lret
testb
inc
orb
xor
and
add
sbb
push
dec
shll
loop
dec
sub
jb
dec
xor
hlt
push
push
and
pop
mov
mov
inc
jecxz
call
addr16
lcall
sbb
inc
int
add
jl
add
and
pop
cli
push
leave
orb
jnp
xchg
repnz
fwait
mov
mov
push
inc
jb
sbb
rcr
fcompl
add
fcomp
lret
gs
adc
add
ljmp
int
push
adc
movsl
stos
adc
jl
inc
jle
sti
jae
sbb
hlt
xor
cmp
lock
fbld
xchg
jbe
lahf
nop
cmpsb
xchg
lahf
xchg
idivl
cmp
test
imul
cs
push
cs
mov
mov
decb
in
jae
cltd
std
cmc
or
imul
into
cmp
pop
ja
dec
mov
jnp
aad
out
leave
sarb
aaa
outsl
xlat
pop
aaa
jae
int3
adc
das
lods
rcll
sbb
pop
jle
loopne
jl
sbb
add
jle
or
push
aaa
jne
adc
jne
push
jo
ret
cmp
xlat
adcl
xor
pop
or
jns
inc
xchg
jnp
in
and
and
aad
cld
loope
cmpsl
je
fwait
xor
std
pop
mov
in
push
out
mov
pop
push
xchg
mov
adc
pusha
fdivrl
mov
movsb
test
inc
xor
int
xchg
jo
cwtl
repz
scas
scas
divl
xor
lods
push
xor
addr16
adc
insb
mov
and
xchg
push
pushf
xchg
aaa
lcall
cmp
xor
jno
sub
aas
cmc
xchg
mov
test
xorb
xor
jge
fisttpl
je
movsl
pop
xlat
pop
fistpl
outsb
ret
das
dec
jno
fsub
add
sub
jno
pop
je
ds
imul
ljmp
scas
add
add
xchg
mov
sbb
fldcw
xor
dec
mov
inc
out
es
fisubrl
sub
add
add
pop
pushl
outsl
movsb
xchg
xchg
sbb
repz
cltd
pop
xor
fmull
add
mov
shll
xchg
push
faddl
xlat
ficomps
addr16
leave
dec
and
sub
or
aas
adc
sub
lret
mov
out
cmpsb
mov
jl
xchg
das
push
pop
js
inc
or
cltd
jno
cli
adc
fistps
and
jl
dec
mov
jne
xchg
nop
push
inc
test
out
repz
xchg
sahf
aam
pop
pushw
je
lahf
xor
inc
mov
das
outsl
imul
cltd
dec
dec
mov
ret
jp
xchg
mov
sub
dec
xchg
dec
cmp
daa
fwait
dec
mov
aad
push
test
jp
lds
into
fcompl
out
jns
jl
inc
dec
push
jmp
incb
push
mov
sbbb
test
jb
xchg
test
cwtl
and
sub
sbb
out
push
adc
mov
les
std
jno
xor
push
orl
lods
call
mov
outsb
hlt
jmp
pop
adc
inc
pop
loope
add
daa
push
and
push
xor
mov
sbb
add
arpl
fstps
xchg
pop
xlat
push
add
xchg
add
repnz
cmpsl
xchg
pop
sarl
mov
mov
dec
mov
xor
push
ds
mov
or
popf
imul
cli
call
xchg
mov
push
fcoml
jb
hlt
pop
or
sbb
xor
pop
add
push
pop
adc
mov
popa
aaa
imul
xor
hlt
jp
mov
and
sahf
cmpsb
jns
cmpsb
cmpsb
push
and
push
in
jbe
and
lock
and
xchg
clc
ret
xchg
in
xor
ja
inc
jecxz
mov
insb
mov
in
addr16
insl
pop
cmpsb
sti
lods
aam
or
shlb
loope
cmpl
lds
xor
mov
pop
mov
dec
cld
add
xor
jecxz
in
in
pop
xor
mov
adc
insb
aaa
ret
xor
jmp
int
mov
adc
incl
lret
inc
mov
xor
fadds
push
sub
loope
jns
and
jno
pop
inc
arpl
lods
mov
or
mov
rolb
push
pop
lods
or
xchg
pop
scas
xchg
jg
sbb
push
push
outsb
mov
fidivrs
dec
mov
xchg
jmp
mov
add
sbb
pushf
mov
inc
and
mov
lret
movsb
cs
cmpsb
push
movsb
inc
pop
mov
xchg
adcl
test
rcrb
push
sub
xchg
mov
scas
in
and
cli
test
push
mov
cli
push
cmpb
inc
call
and
movsl
cs
shl
inc
xchg
lcall
jg
in
aaa
sti
scas
movb
mov
xchg
js
jo
xlat
fwait
xchg
dec
nop
outsb
scas
das
or
imul
ret
pop
push
xor
sbb
fdiv
xchg
push
js
jecxz
pop
icebp
mov
repz
or
jl
adc
pop
pop
into
cmpsl
xor
fidivrs
mov
adc
gs
fadd
and
movsl
xorb
dec
xor
daa
repnz
push
outsb
add
icebp
or
lock
outsl
push
inc
rcr
add
pop
clc
xchg
pop
fbstp
aad
ja
xchg
and
fwait
ret
mov
dec
push
push
jp
xchg
jle
daa
sub
lods
cmp
or
ret
pop
les
leave
and
push
repnz
mov
repnz
idivl
jp
adc
mov
ljmp
or
aam
test
dec
pop
mov
fwait
pushf
xchg
rcll
push
stc
negl
test
sub
mov
pop
nop
lods
pop
mov
popa
subb
or
dec
cmp
stos
popa
or
push
test
dec
repnz
xor
or
sbb
push
lcall
sbb
jge
mov
iret
aaa
xchg
test
jecxz
pop
push
lods
ret
icebp
call
sbb
mov
xor
cwtl
int
xor
outsb
mov
lods
mov
lods
outsb
mov
inc
mov
fiadds
jl
jge
mov
mov
cmp
cwtl
and
mov
cmp
push
rorl
rcrl
arpl
jmp
jns
mov
inc
jge
jp
outsl
pusha
js
mulb
fimuls
int
push
ja
stos
mov
inc
mov
jno
or
or
xchg
ds
push
mov
cli
ret
xchg
mov
ror
xchg
adc
out
mov
outsb
loope
rcrl
mov
mov
add
jb
add
jmp
sub
jno
xor
dec
push
adc
push
mov
dec
pop
mov
popa
shr
push
call
popa
xchg
push
xchg
fcomps
nop
inc
jmp
mov
cmc
pusha
push
dec
neg
xor
xor
dec
mov
lds
fmul
adc
pop
or
adc
add
jg
inc
aaa
adc
push
nop
dec
ret
or
sub
mov
jp
and
in
sbbl
or
xlat
sub
pop
jae
outsb
and
push
xor
in
les
std
out
mov
fsubs
aam
rcr
cmp
cmp
add
dec
movsb
add
mov
sub
loope
xor
mov
xchg
cld
fsubs
notl
jg
xchg
mov
fsubl
fidivrs
adc
ficomps
mov
sub
ds
mov
pop
or
add
movsl
lahf
idivb
xchg
push
push
jmp
jg
or
mov
rcll
cmp
xor
xchg
mov
test
ss
dec
push
out
mov
inc
call
cmpb
sarl
rcrb
cmp
or
cwtl
in
sbb
dec
inc
jl
std
sub
fnstsw
cmp
mov
fnstsw
ficomps
jg
scas
sbb
clc
push
in
push
insb
repnz
mov
sar
test
pop
rol
notl
popl
movsl
pop
ljmp
mov
mov
jo
lock
andb
nop
in
mov
mov
mov
cmp
pop
xchg
mov
jg
adc
cmp
dec
daa
mov
lret
movsl
xchg
adc
inc
cmp
cmpsb
sbb
pop
movsb
push
lods
scas
stos
pop
jns
jbe
mov
lods
iret
sbb
mov
and
dec
sbb
or
iret
push
movsb
xchg
pop
mov
sbb
pop
push
cwtl
jmp
sti
movzbl
and
cmp
mov
movsb
push
mov
call
cmp
pushf
out
aaa
mov
int
sub
mov
push
or
outsl
jnp
scas
mov
and
in
fcmovnbe
mov
ljmp
adc
push
jmp
jp
xchg
mov
and
inc
xchg
pusha
fmuls
fstpt
sub
cmp
mov
adc
jle
movsl
ror
in
jmp
daa
pusha
jg
xlat
sub
call
mov
cmc
sahf
mov
add
rcrl
iret
out
into
fidivrl
ret
imul
pop
mov
dec
call
and
push
std
cli
test
and
add
xor
test
xor
cmpsl
pop
movsl
add
and
testl
testb
jle
adc
xchg
adc
or
sti
movsl
fucom
dec
lret
pushf
xchg
and
lds
ds
mov
xchg
jmp
iret
scas
fists
ljmp
into
xor
je
in
cs
push
fcmovnbe
fisttps
jecxz
xchg
xchg
sub
das
cmp
nop
xor
cmpsb
cmpsb
les
in
test
sbb
jb
mov
fs
in
addr16
call
inc
ficoml
fisttpll
add
push
in
pop
sbb
jmp
jg
xlat
out
push
sub
push
fbld
mov
inc
popf
std
cwtl
sbb
pop
adc
iret
scas
sbb
loop
inc
testl
fcmovnu
divb
loop
pop
dec
cli
lods
mov
add
or
and
movb
and
sub
fiadds
sub
inc
lret
adc
jl
or
pop
or
movsl
or
popf
das
les
rolb
jnp
add
xchg
scas
repnz
pushf
mov
in
lds
xchg
sbb
dec
out
bswap
imul
xor
popa
jnp
aad
cmp
mov
sarl
ja
sbb
shll
lds
push
arpl
inc
mov
and
cmpsl
or
sub
jbe
imul
xchg
pop
xor
fidivrl
xorb
push
std
sbb
sbbb
jmp
mov
and
popa
loop
cmp
leave
push
adc
loopne
jne
jns
movsb
add
jp
cli
sub
mov
mov
out
in
or
push
rclb
fildl
iret
pop
js
jb
inc
cli
pushf
jmp
xchg
sbb
lahf
push
mov
test
mov
mov
popf
dec
xor
add
push
dec
imul
sbb
lds
pop
xchg
fidivs
test
fadds
mov
rorl
pop
mov
jmp
popa
lods
fstpt
bound
xchg
adc
sarb
or
inc
nop
jle
xor
jge
pop
ja
adc
stos
or
mov
adc
mov
cmp
jne
andl
sub
popf
pop
lods
jmp
push
dec
arpl
aam
mov
cmpsl
stos
cs
jnp
xlat
ds
fdivp
adc
pop
push
adc
pop
add
jmp
cmp
subl
bound
and
shlb
sub
push
popf
cmp
push
pop
mov
in
push
out
jb
fcmovnbe
sub
mov
repz
in
fidivrs
mov
es
fisttps
jae
mov
std
loopne
std
mov
inc
sar
pop
add
mov
cmp
mov
loopne
and
xchg
rcr
call
leave
xchg
jb
jne
jb
add
adc
xchg
ljmp
in
out
mov
pop
lods
enter
jle
mov
enter
push
movsl
mov
dec
cmp
and
xchg
fsubr
mov
fwait
cmp
xor
cli
sbb
sub
bound
in
stc
push
jmp
push
popa
dec
mov
sbb
lret
inc
sahf
mov
xor
sbb
sbb
mov
jmp
lods
mov
int3
es
cmp
pop
and
and
enter
cmp
lcall
and
sahf
inc
cmp
xor
dec
inc
in
jnp
jmp
xchg
push
mov
sub
popa
lret
arpl
dec
or
insl
push
gs
pop
pop
cmc
popf
jne
loope
sbb
add
lret
ljmp
xor
jb
adc
xor
filds
fisubrs
dec
adc
imul
in
cld
in
adc
jo
jo
cmp
ficomps
push
adc
pop
add
es
and
imul
and
inc
les
sbb
mov
insl
mov
or
adc
ret
sub
scas
cmp
daa
inc
das
in
add
in
loope
jno
inc
ss
bsf
popa
adc
es
or
sub
push
fs
cli
or
push
or
push
xchg
or
shl
and
insl
mov
leave
cmp
ds
add
xor
mov
cmc
rorl
fs
arpl
or
lahf
push
bound
sbb
fidivl
lock
pop
dec
push
popa
xchg
mov
mov
popf
adc
bound
jge
cmc
fsub
mov
sbb
pop
pusha
lret
sbb
mov
dec
mov
lea
adc
pop
or
out
iret
add
out
push
ds
cmp
jb
xorb
fidivrl
fs
ficomps
dec
dec
mov
popf
xor
int
sti
jl
or
idivl
andl
dec
cmp
into
mov
jl
test
cmp
dec
jns
lcall
mov
test
add
xchg
xor
adcl
int
lea
subb
add
mov
sahf
mov
mov
push
jmp
inc
jo
inc
push
stos
fidivl
mov
aam
adc
iret
add
pop
int3
inc
sbbb
sti
sbb
cli
xor
mov
push
dec
xchg
jno
jle
mov
scas
scas
outsl
inc
jbe
testb
test
dec
gs
clc
sub
outsb
lcall
mov
jp
or
push
xchg
arpl
pop
pop
into
fnstsw
pop
push
outsb
fldt
push
mov
mov
ret
cmpsl
sti
lds
cmpsl
scas
insb
pop
lret
lcall
aam
and
cmp
fs
mov
xor
test
or
or
mov
out
shld
mov
dec
js
push
je
outsl
xor
fnstenv
adc
testl
push
jno
push
add
sar
mov
ret
mov
push
jnp
jp
sbb
push
mov
fbld
pushf
sub
push
mov
xchg
roll
lret
push
mov
push
lods
adc
cmpsb
xchg
or
or
mov
lea
es
or
jne
push
fidivrl
nop
add
fisttpll
adc
add
and
aad
fildl
aas
jmp
aam
les
aad
pop
loopne
mov
or
imul
pop
mov
xor
test
inc
mov
pusha
arpl
sbbl
sub
out
rcr
scas
cmp
push
add
emms
add
out
lods
or
push
push
sbb
sar
aaa
lahf
push
push
xchg
ja
lcall
testl
dec
push
clc
aas
add
sub
lret
and
jb
jne
pop
dec
leave
push
dec
jmp
addr16
movsb
mov
xchg
test
ret
add
pop
jmp
cwtl
dec
xchg
xchg
mov
iret
dec
jg
jp
ret
js
dec
pop
push
insb
xchg
mov
jbe
cli
mov
jbe
pop
cmp
clc
adc
clc
add
cli
xchg
sbb
pop
xchg
jge
lret
pop
cltd
push
insl
out
xchg
shrl
mov
daa
inc
ljmp
int3
movsl
popf
mov
std
call
push
cmpsb
push
jo
stos
adc
mov
push
movb
lock
mov
cmp
dec
pop
das
mov
sub
and
in
sbb
popa
mov
sbb
sub
mov
pop
xchg
mov
pop
pushf
pop
xlat
xchg
flds
scas
scas
mov
clc
orb
add
in
jns
push
jnp
fmuls
outsl
jp
jp
jle
outsb
xchg
movsb
mov
sti
jmp
fidivl
pop
bound
fwait
mov
loopne
rorb
stos
stos
dec
iret
jp
rcll
sbb
mov
mov
enter
aad
add
cmp
and
push
ret
mov
out
push
push
inc
xchg
sub
inc
lret
movsl
lret
notl
fcomip
lods
sbb
gs
lahf
xchg
jecxz
lret
xchg
nop
dec
add
sti
mov
pop
pusha
aam
pop
loopne
pop
add
xchg
jle
shrb
cs
sub
dec
rorb
mov
push
dec
sub
fnsave
mov
or
test
xchg
xchg
out
pop
pusha
add
pop
cmp
fmuls
sub
inc
pop
add
rorl
and
adc
mov
mov
cmpl
test
adc
push
leave
andl
or
into
and
ljmp
enter
in
adc
loopne
test
jns
int
cmp
scas
pop
or
mov
hlt
in
and
jg
xor
fdivl
mov
es
inc
xchg
push
mov
mov
dec
imul
imul
lods
lea
or
lea
mov
into
mov
mov
mov
pop
repnz
xlat
imul
insb
cmpsl
sub
jmp
dec
rcll
jmp
ljmp
push
dec
fldenv
or
jae
shlb
add
mov
ja
dec
cli
dec
or
add
leave
and
push
daa
sub
jp
or
das
push
mov
leave
and
fdivl
pop
or
int3
pop
push
mov
inc
lret
push
push
or
shl
stc
xor
rclb
cmp
js
mov
mov
ss
test
inc
iret
out
ror
hlt
mov
mov
inc
sub
inc
mov
or
push
inc
mov
ljmp
movb
mov
mov
mov
xorb
sub
scas
jmp
jecxz
decb
shlb
in
mov
cmc
mov
sahf
icebp
xchg
lods
adc
aam
jmp
jne
paddusb
or
mov
daa
jae
xchg
jno
andl
popa
and
aam
xor
add
pushf
cmp
mov
imul
fwait
sbb
adc
pushf
jns
insl
push
dec
test
pop
inc
jb
xchg
or
aaa
in
loopne
cmp
jl
jmp
xor
hlt
icebp
jle
outsb
dec
out
inc
jmp
addr16
dec
sub
imul
lods
leave
jp
cmp
mov
mov
jae
push
push
imul
in
pop
aad
add
jmp
lret
pop
jmp
jg
pop
or
sarb
pop
push
into
div
or
xor
outsb
repz
rcl
pop
lods
push
scas
mov
test
cmp
inc
push
mov
jmp
stos
mov
fistps
mov
mov
sahf
ljmp
jns
fistps
sbb
mov
fmul
ljmp
leave
adc
push
pop
cmp
test
xchg
aad
rcrl
xor
or
rcrl
test
push
dec
jp
loop
ja
popf
fisttps
gs
rorl
aas
subl
inc
and
jmp
pop
fisubl
dec
ret
fsubs
mov
and
jnp
sub
jg
lds
cli
and
outsl
pop
or
movsl
mov
mov
movsl
ficoml
hlt
adc
adc
xchg
xchg
add
daa
and
mov
pusha
sub
mov
das
test
add
sbb
shrl
cmpsb
mov
push
sub
ret
ret
imulb
dec
sbb
pop
cmpsb
mov
push
idivb
scas
push
lahf
insl
mov
fists
insb
les
shlb
jo
ljmp
sbb
in
dec
jge
or
lcall
je
ljmp
pop
stos
ds
test
outsl
push
mov
imul
add
nop
xchg
cmp
call
test
mov
xchg
pop
das
fs
iret
repz
in
add
sub
ds
fstl
or
sbb
xchg
mov
stos
sbb
inc
mov
mov
jg
jno
pop
or
out
shll
sub
test
mov
movsl
push
adc
sub
sarl
in
in
popf
loop
lods
mov
mov
stc
cld
sub
mov
or
arpl
mov
sub
stc
hlt
in
sbb
xchg
inc
or
test
movsl
xchg
and
mov
icebp
mov
sbb
sbb
pop
inc
xchg
std
lcall
jle
js
dec
mov
pand
outsl
cmpsl
mov
mov
pusha
jno
xchg
sub
pusha
inc
repnz
mov
outsl
test
xor
add
mov
jnp
jbe
scas
inc
mov
adc
pop
iret
outsl
push
xchg
scas
lret
fisubrl
mov
sub
sbb
jae
add
or
add
sub
leave
adc
pop
add
fisubrs
mov
jne
adc
push
inc
adcl
aas
cwtl
inc
adc
xchg
jmp
mov
iret
in
scas
mov
push
faddp
scas
es
xlat
jmp
test
push
mov
loopne
push
jno
bound
out
daa
imul
fisttps
mov
pop
shlb
pop
jl
mov
sub
pop
movb
in
push
mov
pusha
jno
xchg
add
outsb
mov
push
jbe
sysret
aaa
jae
jecxz
inc
jns
mov
aad
xor
push
shlb
aam
loop
out
fwait
fucomp
xorb
pop
add
dec
dec
and
adc
imulb
shr
fwait
lea
test
mov
lcall
sbb
mov
scas
xchg
cwtl
push
sar
in
scas
and
test
mov
sub
repz
adc
mov
xchg
div
dec
xor
xchg
shll
pushf
cmp
gs
dec
xor
or
ss
loop
xor
enter
push
pop
dec
pop
inc
jge
pop
fisubrl
or
mov
mov
mov
loope
pop
push
pop
jo
add
arpl
sub
dec
push
lahf
ljmp
sub
cwtl
add
sahf
xchg
xchg
push
inc
das
dec
push
lock
mov
mov
mov
jno
push
fs
mov
lret
sahf
mov
jg
xchg
cmpsl
aad
jp
mov
stc
mov
enter
ljmp
fldt
fwait
jnp
sbbl
subl
mov
mov
js
or
sti
sahf
mov
xlat
imul
sub
push
cmp
in
loope
sti
adc
decl
adcb
fstpt
fwait
sub
mov
mov
cmp
rcrb
xor
push
cs
inc
addr16
xchg
adc
pop
imul
push
and
aam
leave
shll
pop
sti
xchg
fstps
jl
mov
fsubs
sub
or
push
subb
xchg
and
mov
cmpsl
pop
sbbb
divl
dec
jnp
and
inc
pushw
add
push
xchg
jae
fcomp
rorb
repnz
out
cmpsb
lret
icebp
jb
gs
push
imul
push
jne
call
adc
movsb
jb
aaa
filds
jge
pop
jge
xchg
xchg
dec
pusha
lods
call
dec
mov
inc
mov
mov
movsl
add
loop
aam
aam
adc
outsb
aas
sbb
sbb
das
dec
int
add
ja
cli
notb
clc
mov
mov
in
shl
push
sub
xor
jns
insl
out
dec
and
cmpsl
std
adc
lret
ret
push
andb
dec
stos
stos
xchg
or
xchg
outsb
jns
mov
and
or
and
outsb
popf
and
ljmp
lret
cmp
in
out
cmpsb
xchg
test
frstor
ljmp
in
mov
jmp
in
outsb
sti
lock
sbb
mov
pop
aas
mov
cmpb
push
orb
mov
jp
mov
inc
mov
or
mov
pop
mov
loop
pop
fwait
dec
movl
pop
jp
in
in
cmp
push
jle
inc
rclb
pop
les
dec
rol
dec
jmp
jecxz
ficompl
mov
mov
loop
jecxz
mov
pop
xor
lods
cld
hlt
mov
adc
mov
and
sub
jo
and
cmp
in
cmp
data16
pop
cmc
jl
rcl
xor
or
pop
cmp
arpl
sahf
add
or
js
push
sub
fcmovnb
mov
adc
outsb
stos
and
xchg
mov
jge
int3
dec
pop
adc
scas
aaa
mov
addr16
sbb
push
in
sarl
daa
fs
hlt
ds
mov
sbb
cwtl
pop
push
aad
and
xor
sbb
mov
or
xchg
test
dec
mov
mov
arpl
cmp
mov
jecxz
jge
call
push
lods
mov
dec
xchg
enter
xor
lods
pop
xor
mov
or
or
clc
and
in
add
dec
lret
mov
lret
aad
scas
add
call
icebp
xlat
push
xor
sahf
xor
push
movsl
xchg
or
inc
mov
out
inc
ret
fiadds
xor
sub
cmp
adc
sub
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
cwtl
push
add
fadds
add
add
and
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
call
add
add
add
addb
add
add
addb
add
pusha
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
cmp
add
js
add
mov
add
add
add
cmp
add
lock
cmp
add
sbb
xor
add
inc
add
xor
add
push
add
add
add
add
add
add
add
xor
add
or
add
xor
add
pop
add
add
addb
add
add
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
add
add
or
add
add
sbb
add
or
add
xchg
add
mov
add
or
add
xchg
add
mov
add
or
add
add
add
xchg
add
mov
add
or
add
add
add
lret
add
mov
add
or
add
add
add
add
call
add
add
add
add
add
xor
add
mov
add
or
add
add
mov
or
add
add
add
add
add
in
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
mov
add
or
add
add
add
add
add
add
or
add
add
dec
sub
add
add
add
add
add
add
shrb
add
mov
add
or
add
sub
add
or
add
add
add
add
add
aaa
add
mov
add
or
add
add
add
cmp
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
jno
add
or
add
add
add
add
add
add
call
add
add
add
add
add
add
jge
add
or
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
xchg
add
call
add
add
add
add
add
add
sub
add
add
add
add
add
add
fdivs
add
or
add
add
add
add
sub
add
add
add
add
add
aad
add
or
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
mov
add
or
add
push
add
call
or
add
add
add
add
add
push
add
shlb
add
or
add
add
mov
add
add
add
add
add
add
inc
add
sub
add
add
add
mov
add
add
add
or
add
push
add
sbb
add
add
add
add
add
lock
add
add
add
or
add
pop
add
insb
push
add
sbb
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
add
dec
add
add
add
add
inc
add
jb
add
add
jb
add
add
addb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
add
popa
add
add
add
add
add
add
and
data16
add
and
sub
inc
add
push
add
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
add
add
je
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
jo
add
js
add
add
sbb
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
insb
add
data16
add
add
add
add
add
add
add
add
add
jns
and
inc
add
outsb
add
add
dec
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
add
popa
add
add
add
add
js
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
rcrb
add
fwait
add
fcompl
add
and
add
in
add
das
fwait
add
in
lcall
cmp
add
inc
fwait
add
cld
lcall
push
fwait
add
add
add
pusha
fwait
add
outsb
fwait
add
jle
add
mov
add
stos
fwait
add
add
add
mov
add
add
fwait
add
add
add
ficomps
add
out
fwait
add
add
add
or
add
pushf
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
insl
bound
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsb
je
jne
je
fs
insb
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
js
popa
jb
insl
inc
add
add
dec
dec
jae
outsl
fs
gs
outsl
popa
fs
add
jb
jne
jb
push
popa
insb
jne
inc
add
inc
imul
je
jb
inc
popa
arpl
inc
outsb
je
jns
js
add
add
jns
je
inc
push
inc
gs
je
jb
outsb
outsw
add
add
push
push
gs
imul
outsl
arpl
jae
