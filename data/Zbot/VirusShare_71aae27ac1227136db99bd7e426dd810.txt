lcall
sbb
insl
sub
pmulhuw
hlt
insb
xor
jae
inc
sub
mov
xchg
call
push
popf
mov
sub
stc
loop
mov
loopne
sub
cmp
adc
push
lcall
data16
ror
cmp
stos
cmc
cmp
std
mov
pop
iret
lret
out
jmp
adcb
inc
enter
adc
rorb
dec
push
xchg
std
jmp
cmpsl
out
loopne
in
inc
addr16
sub
and
mov
jge
call
ss
fucomp
movsl
outsb
call
bound
js
iret
icebp
cmp
dec
icebp
in
mov
xchg
mov
pop
jg
decl
add
andl
xchg
inc
xchg
and
mov
test
fs
mov
in
and
fs
test
int3
xchg
nop
cmc
jg
in
iret
cli
push
leave
les
addr16
push
decl
pop
stos
bound
inc
mov
jb
js
repz
add
jns
int
inc
and
push
or
pop
pop
sub
pop
and
lret
xchg
mov
jg
cmpb
decl
xor
mov
shl
adc
push
or
rcr
xchg
out
lods
dec
dec
adc
inc
fidivs
lcall
fisttps
cmpsb
and
or
or
outsl
std
cmp
inc
sarb
cmp
enter
pop
xor
pop
lret
shll
jg
imull
or
decl
shrb
stos
fdivrl
push
fsts
dec
insb
pushf
pop
push
bound
bnd
gs
dec
jge
outsl
hlt
shll
xchg
adc
cmp
test
pusha
aaa
sbb
inc
scas
shll
stos
ljmp
rcr
jecxz
scas
mov
xor
push
jmp
lods
jecxz
insl
xchg
jg
testb
xchg
push
push
mov
xor
mov
dec
sub
push
ret
or
incl
mov
mov
push
lods
mov
jnp
cmc
push
push
aas
cld
xor
pushl
jns,pt
sbb
sub
aad
xor
mov
push
cmc
adc
sti
jmp
bound
ss
repnz
push
pusha
jnp
adc
cs
jg
xchg
lods
jp
and
loope
ljmp
ret
int
jmp
inc
xchg
inc
dec
lock
push
movsl
pop
sysenter
shr
mov
gs
add
sub
vfmsubadd213pd
js
jle
push
or
xchg
push
sub
ljmp
cmpsl
or
test
mov
mov
pushf
jl
movsl
aaa
int3
imul
pop
es
aas
notb
cs
jge
sub
xchg
add
and
and
add
incl
out
xchg
hlt
xchg
dec
mov
mov
xchg
pop
icebp
repnz
push
add
test
out
es
mov
out
mov
and
test
jl
xor
dec
or
fwait
inc
inc
cwtl
out
pop
add
das
mov
mov
mov
xor
cmp
push
hlt
outsl
popf
mov
xor
sub
mov
mov
push
push
fucomi
out
or
pop
aaa
cmp
decl
jmp
gs
xorb
push
in
or
jb
mov
inc
pop
mov
lods
ret
sarl
pop
aas
out
sbbb
push
hlt
cld
xchg
lahf
pop
jg
shlb
incl
jnp
xchg
push
xor
mov
push
adc
mov
mov
cltd
push
cmp
jne
shlb
push
cli
popf
push
dec
xchg
ss
mov
inc
xchg
pushl
out
jl
dec
fdivl
in
add
pop
inc
fcomip
pop
fucomip
jmp
or
mov
jmp
push
push
inc
xchg
lahf
mov
or
call
mov
scas
cs
decl
aaa
stos
iret
xchg
fwait
arpl
xor
push
jo
adc
call
cmc
lahf
lcall
push
inc
sar
sbb
push
push
xchg
jns
mov
test
addr16
cmp
fmull
and
jnp
dec
pop
sar
stos
xlat
je
jp
aas
ljmp
xchg
decl
ret
xchg
dec
push
gs
add
cmp
add
int
mov
pushf
out
dec
mov
rol
push
fs
aad
xchg
xor
push
lds
push
lds
insb
test
mov
push
adc
fdivr
pop
repnz
push
rorb
cmp
ss
aaa
jl
jmp
movsl
mov
popl
adc
and
adc
movsl
jmp
mov
xchg
nopl
orb
mov
lods
rcrl
stos
decb
test
dec
aaa
sbb
cs
loopne
loop
cmp
lcall
jns
fsubrs
es
ret
fnstenv
cwtl
push
pushf
mov
jp
incl
movsl
dec
sbbl
push
dec
mov
inc
add
mov
lcall
jge
jecxz
out
inc
sbb
std
sub
push
mov
shr
mov
cltd
movsb
shrl
mov
dec
rcl
out
dec
xchg
mov
xchg
in
push
test
mov
stos
and
sub
lret
jnp
jb
ret
stos
and
mov
inc
cmc
lds
mov
dec
stc
mov
arpl
rol
daa
in
fs
inc
ljmp
adc
add
imul
cmp
inc
test
mov
ds
test
dec
mov
mov
and
lea
sub
cmp
sti
in
je
sub
pop
xor
mov
movsl
xchg
fistpll
adc
int3
iret
popa
jmp
sbb
call
sub
inc
cmp
testb
jl
pop
xchg
enter
add
je
push
aam
cli
adc
icebp
add
pushf
or
enter
pop
xor
int3
jecxz
sub
push
mov
cmp
loopne
or
jl
and
loopne
test
mov
gs
sbb
lcall
fldl
mov
insl
inc
insb
mov
repz
imul
dec
sub
jg
jge
into
fwait
shrl
lea
cwtl
xchg
inc
jne
sub
rorb
repnz
xor
jl
jnp
pushl
xchg
jbe
ret
movsb
lea
stc
mov
imul
dec
lock
adc
cmp
inc
popf
inc
xchg
scas
mov
test
push
inc
dec
cwtl
addr16
movsb
lcall
cmpsb
loopne
push
xor
push
or
adc
sub
pushl
pop
cli
mov
xor
repz
dec
pop
xor
popf
mov
test
mov
pushl
mov
aas
repnz
scas
movsb
push
cmpsl
leave
xchg
cmp
test
mov
rol
mov
decl
push
js
adc
push
xor
sub
loopne
sbb
aas
push
mov
cmpsb
inc
aaa
pop
shrb
or
std
push
dec
mov
cmp
push
repz
lahf
inc
aaa
xlat
int
lcall
dec
scas
xchg
xchg
push
adc
sbb
xchg
imul
cpuid
mov
push
incl
fnstenv
loopne
sbb
dec
mov
imul
sub
into
jno
mov
xor
jb
mov
jg
incl
sub
mov
mov
add
or
lret
ljmp
jle
sub
mov
xchg
inc
mov
sub
ficompl
hlt
stos
shll
sbb
cs
pop
std
lcall
sbb
inc
cmpsl
es
into
lret
cli
sbb
lods
icebp
insl
aas
adc
daa
sbb
fistpll
mov
cmp
push
push
fisttpl
mov
fdivrp
ljmp
mov
adc
nop
add
into
cmp
ret
mov
pop
sahf
subl
sub
out
int
mov
fwait
mov
push
outsl
sbb
xor
jns
outsb
mov
fistps
mov
or
mov
sbb
add
and
in
incb
in
push
ss
mov
mov
lcall
xchg
imul
sbb
bound
pop
dec
das
mov
jns
lock
test
ret
ljmp
jg
push
mov
nop
mov
icebp
adc
enter
in
repnz
or
xor
scas
jno
loope
ljmp
jmp
orb
testl
insl
loop
jge
sahf
je
sub
jnp
pusha
enter
aas
and
and
adc
insb
and
cmp
out
and
and
dec
lcall
sbb
pusha
inc
loopne
cs
data16
add
fnsave
int
scas
ret
pop
and
cli
push
xor
jle
ror
ja
mov
ret
out
negl
mov
pop
add
call
fcompl
dec
xchg
fdivrl
mov
sub
std
jmp
lods
or
imul
into
fadds
cmpsl
adc
daa
mov
int3
fmull
jg
cmpsb
stos
sub
mov
cmp
mov
decl
push
out
mov
pop
mov
sbb
lret
jns
pushl
mull
push
mov
pop
hlt
je
adc
leave
pop
push
ret
mov
pop
ffreep
imul
fldlg2
arpl
lods
inc
fwait
testl
lds
ror
jae
test
outsl
and
incl
enter
push
loopne
lret
dec
insb
fwait
sbb
ret
stos
push
xchg
enter
lcall
call
jbe
stos
aad
jmp
push
push
pop
fistl
pushf
sub
adc
mov
cs
mov
test
enter
cwtl
and
and
pop
sub
pop
jg
mov
push
int
popf
add
rcrl
jo
mov
mov
call
ror
pop
rorb
in
pop
push
xchg
push
shrb
sahf
xchg
cmp
std
jg
rol
mov
std
push
outsl
sarl
cmp
add
rorl
stc
sub
push
xchg
call
xlat
test
test
xlat
in
scas
push
lret
cwtl
repnz
adc
push
xchg
push
or
call
cld
je
lods
es
das
push
jp
xor
lock
test
fnstcw
xchg
mov
leave
fsubr
add
xchg
dec
push
push
inc
add
aad
ja
sar
fldcw
loope
dec
sar
fbld
sti
dec
adc
ja
movsl
ret
data16
repnz
dec
insl
out
inc
aad
and
mov
dec
lods
mov
ljmp
int3
loopne
std
dec
je
in
call
dec
sub
pusha
push
xchg
jb
cmovb
push
loopne
shll
add
out
mov
call
sbb
arpl
sub
pushf
scas
jb
addr16
pop
jnp
jg
jmp
jb
test
xchg
rcrb
sbb
stos
push
pop
decl
mov
icebp
outsb
xlat
dec
sti
adc
fbstp
push
dec
jg
nop
xor
stc
jg
lock
push
fwait
orb
scas
and
fs
mov
fisttpl
xchg
shll
call
test
push
lds
jl
mov
shlb
jmp
mov
incl
in
and
movsb
pop
movsl
loopne
pop
pop
sub
inc
mov
push
mov
outsb
ljmp
lds
jmp
and
sbb
jnp
incl
cld
mov
pusha
lea
je
std
mov
je
mov
jmp
icebp
ljmp
fadd
mov
dec
inc
das
les
pop
mov
sarb
mov
popa
sub
call
xor
lods
mov
inc
test
or
bound
clc
scas
sti
adc
lahf
dec
repz
ja
sub
outsb
addl
xchg
fidivrs
and
dec
cmpsb
int
les
into
sbb
xor
pop
inc
mov
ret
dec
cltd
xor
shrb
push
mov
arpl
push
mov
cwtl
mov
cmp
dec
cmpsl
adc
popf
fxch
fs
fcomip
xor
jo
cmpsb
xchg
or
arpl
insb
pop
movsb
cmp
fsub
imul
andl
xor
xchg
clc
mov
xchg
xor
cmpsl
pop
xchg
mov
xor
lcall
mov
repz
lea
push
hlt
sub
adc
adc
rclb
mov
out
out
aaa
insb
ja
and
mov
sbb
xor
and
scas
inc
xor
sbb
cmp
out
loope
cmpb
dec
xor
jle
ljmp
cmp
sub
data16
and
test
bound
test
shrb
sub
inc
xor
dec
mov
mov
mov
xchg
sub
sub
mov
aam
das
mov
jbe
jle
decl
je
mov
jo
inc
xchg
mov
sub
int3
pop
aam
xchg
jmp
fistpll
sub
ljmp
aas
push
and
jecxz
aaa
fidivrl
fldenv
xor
mov
inc
test
stc
push
push
into
mov
pop
outsb
aad
out
inc
xorl
pushf
or
lret
in
cmp
cmp
loope
fisubrl
push
stos
es
cmc
mov
out
sbb
mov
mov
xor
sti
loopne
xchg
sbb
dec
test
jg
cmp
lret
lahf
add
jle
popf
cwtl
fs
scas
xor
addb
xchg
fs
int
or
test
or
loopne
lds
push
decl
rorb
mov
xchg
stc
jge
push
loopne
popl
cli
inc
mov
jb
adcb
call
faddl
pop
scas
dec
leave
lds
decl
int3
xchg
je
enter
adc
arpl
lea
cmp
sti
shll
mov
loopne
push
jmp
imul
lock
sbb
cmp
inc
fcos
mov
incb
mov
xor
repz
sahf
cli
aam
dec
fdiv
aas
mov
aas
rcrl
cmpsl
pop
pop
inc
loop
fiadds
cltd
nop
enter
nop
rcrl
cli
inc
ljmp
or
nop
adc
mov
or
mov
xor
popf
lds
incl
xchg
add
in
lret
jg
sub
mov
lret
and
push
jge
outsb
add
call
subl
icebp
lahf
push
xor
fs
sahf
inc
ss
repnz
and
xor
pushl
cld
in
aaa
sbb
mov
std
dec
mov
test
std
mov
cmp
mov
divb
dec
repnz
movsl
subl
lcall
int
jno
xor
pushl
xchg
adc
mov
inc
ds
scas
sbb
dec
and
xchg
movsl
adc
decl
mov
bnd
out
mov
popf
pop
sub
arpl
jmp
push
or
mov
ds
fsubrl
mov
cmp
jno
fsubrl
data16
orb
sahf
xlat
div
std
call
jno
repz
and
ljmp
adc
test
addb
jp
xor
scas
sbb
fcomip
mov
fsubl
inc
lcall
aas
loopne
fldenv
cmp
ja
pushl
push
add
sub
loopne
pop
or
aad
lret
dec
inc
dec
test
popf
add
call
iret
adc
cmp
pop
loop
add
std
or
shlb
jp
inc
decl
pop
xchg
pop
or
mov
rorl
adc
fildll
cld
lods
push
scas
nop
ret
test
stos
incl
es
int
and
mov
mov
das
cli
pushl
lods
into
xchg
or
mov
lcall
dec
push
incl
sbb
xchg
out
push
add
lea
addb
fs
aad
fcoms
call
mov
xor
push
sti
fdiv
daa
js
mov
ja
push
xchg
jg
dec
cld
insb
cmp
loop
test
pop
inc
sti
mov
xor
movsl
add
or
mov
pushl
in
popf
inc
je
push
repz
std
mov
pop
mov
popf
arpl
and
lods
js
pushl
cmp
pop
rclb
inc
lret
mov
sahf
and
push
pop
ja
lods
stos
jg
pushl
paddsw
xlat
test
cmp
cmp
dec
lea
pusha
call
push
jnp
mov
out
cwtl
and
pop
xchg
repnz
leave
ret
add
xor
dec
xlat
pop
pop
cltd
cld
lcall
jmp
enter
sbb
dec
fwait
das
stc
push
aaa
call
or
mov
pop
inc
mov
movq
arpl
das
xor
ret
jecxz
inc
call
lcall
iret
js
shrb
or
rorb
inc
adc
push
mov
adc
cmp
shlb
mov
incl
fs
bnd
stc
repnz
lods
push
shl
mov
addb
adc
jmp
popf
adc
push
mov
push
jb
xchg
mov
out
jmp
je
xor
pop
icebp
decl
in
sub
mov
cmp
bound
jno
lods
fsubs
out
call
mov
sub
fs
pop
iret
daa
movsb
inc
addl
popf
pop
lea
ds
cli
jg
push
adc
lea
mov
mull
dec
mov
jg
push
movsb
jb
loopne
lea
adc
out
adc
fadd
rclb
ss
out
pushl
mov
sti
in
pop
lahf
cmp
jl
cmpsl
and
pop
cs
fsubs
movsb
jmp
mov
inc
pushf
mov
sbb
xchg
sub
fisttpll
lock
push
call
xchg
ss
cltd
divb
ret
jo
xor
xchg
pushl
push
addb
add
inc
leave
and
jge
push
mov
jle
add
cmp
rcl
pusha
es
mov
aad
mov
dec
gs
iret
shll
repnz
incl
inc
es
ds
inc
cmpsb
in
jb
or
cs
fimuls
push
or
decl
in
cmp
fnstsw
mov
ror
and
daa
xlat
pop
cmp
jg
sahf
mov
icebp
jmp
jle
scas
cwtl
in
movsl
add
gs
cmp
mov
jmp
pop
dec
leave
call
fidivs
pop
test
int
cmp
call
outsl
push
aad
jmp
sub
mov
jge
out
adc
insl
sahf
cld
xchg
movl
sbb
mov
incl
cmp
sbb
rolb
icebp
popa
cmp
lcall
and
dec
mov
cld
pushl
out
call
cmp
stc
int
adc
mov
ja
xchg
aas
mov
mov
icebp
sbb
enter
mov
sbb
lds
mov
loopne
hlt
xchg
and
push
je
int
push
dec
enter
out
jmp
fsubrs
imul
das
add
jp
xor
adc
jbe
mov
pushl
aad
add
sahf
xchg
or
dec
sarl
mov
clc
mov
fsubrs
sti
dec
mov
jmp
mov
xor
fdivr
call
je
jbe
cwtl
subb
mov
mov
jge
or
icebp
push
cmpb
or
and
xchg
and
lret
fisttpl
test
cmp
and
cmpl
and
test
add
call
or
add
in
sbb
xor
add
roll
mov
jmp
jmp
mov
xor
into
jle
lds
inc
icebp
mov
adc
push
adc
aad
xor
mov
lock
pop
cld
xchg
out
mov
in
jbe
sbb
inc
sub
xor
cmp
dec
add
jmp
mov
shl
lahf
ficompl
inc
inc
rol
adc
and
cmp
lcall
mov
pop
jno
scas
imull
dec
and
in
in
nop
jns
sub
jmp
and
call
xor
fs
int
repnz
pop
fstps
stc
jecxz
aas
lods
and
lea
push
in
cwtl
pop
cmp
scas
sbb
xchg
dec
sub
roll
mov
fcomip
jg
sbb
dec
xor
popa
mov
mov
ret
sub
pushf
adc
cmp
or
xchg
scas
adc
iret
xchg
cmpsb
sti
sub
out
mov
les
dec
psubb
incl
daa
pop
cmpsb
icebp
adc
push
push
lods
ret
push
xchg
jg
dec
adc
scas
jnp
xchg
push
jg
ljmp
pop
adc
jl
in
scas
sbb
mov
shll
mov
mov
incl
test
clc
jns
mov
cmp
outsl
fs
shl
mov
push
sbb
into
xchg
call
xchg
xchg
mov
imul
inc
ss
cli
adc
js
test
repnz
lcall
sar
push
test
mov
mov
xchg
bound
fdiv
aam
jp
decl
and
mov
out
fistpl
sub
adc
mov
xor
mov
cld
sub
ljmp
jmp
cmp
or
xchg
jno
mov
jno
fdivrl
push
cmp
jecxz
xlat
call
popa
sahf
inc
or
sbb
iret
adc
out
loopne
sub
mov
jg
jnp
fstpt
fsubrs
push
lret
pusha
inc
popf
and
repnz
test
lcall
cli
dec
pxor
pop
fldcw
mov
add
mov
and
decl
push
out
test
fmuls
pop
dec
test
enter
mov
dec
inc
popa
pop
or
jmp
ds
or
mov
xchg
cltd
jne
dec
adc
mov
jecxz
or
dec
decl
sahf
out
shlb
and
adc
dec
idivl
call
jmp
cmp
inc
les
cmp
jb
shlb
mov
xor
daa
test
sbb
mov
decl
push
pushf
gs
repnz
xor
xchg
xchg
cmpsl
sub
cmp
sub
inc
mov
adc
repz
ss
push
out
sbb
cmc
mov
fbld
shl
out
lret
sub
or
jbe
sub
lret
lcall
jp
pop
mov
jns
mov
jae
mov
and
adc
pop
sub
pushl
lods
je
mov
fsubs
jae
or
xchg
neg
sbb
jg
pushl
and
sbb
dec
pop
cmc
mov
mov
data16
filds
out
out
lret
in
mov
movsb
fstpl
loopne
inc
outsb
jne
or
xchg
loopne
decl
lock
dec
nop
popa
mov
fwait
pop
je
ret
mov
push
mov
fcomip
sbb
sbb
pop
pushf
sbb
bound
push
adc
mov
xchg
decl
push
repnz
jg
sbb
fadds
les
imul
incl
ficompl
pop
popa
adc
imul
pop
ljmp
mov
mov
pop
out
xchg
aas
jno
decl
mov
xchg
push
or
test
mov
es
ficomps
lods
mov
lcall
sub
jecxz
cmpsl
stc
jp
testl
push
fstl
jo
add
jmp
test
mov
dec
sbb
jecxz
fnstsw
loopne
lds
jg
jge
sbb
bound
ja
mov
insb
ret
xchg
add
shrl
in
dec
inc
xchg
lds
add
and
pop
cmp
pmaxub
jo
fs
push
sbb
inc
repnz
popa
xor
stc
fs
cmpl
mov
jnp
nop
jle
jmp
stc
iret
jg
in
mov
stos
xor
imul
inc
mov
dec
lret
dec
lock
call
xchg
mov
mov
mov
mov
inc
adc
getsec
fisubl
std
push
incl
jae
push
add
mov
sub
je
loop
add
push
push
lods
mov
pusha
insb
cmp
incl
mov
pop
cmp
pop
imul
setne
ljmp
jg
call
insb
addl
adc
js
dec
out
les
dec
icebp
dec
xchg
xor
out
clc
scas
pop
jmp
sbb
dec
fsubs
aam
mov
or
jmp
and
jb
and
xchg
xchg
lods
xor
inc
out
jns
sub
xchg
xchg
sub
xchg
pop
cmp
inc
mov
adc
xchg
cmp
mov
ret
das
push
mov
ret
sub
lea
into
mov
jmp
dec
repz
loop
scas
andb
add
stos
outsb
cmpsl
imul
fwait
push
jbe
xorb
pop
add
aam
mov
add
dec
out
jle
orb
nop
das
sub
mov
incl
sti
shl
lcall
add
cmp
ss
push
loop
inc
jnp
xor
jg
call
loop
ret
and
cmpb
jp
loop
jae
mov
ljmp
lods
shl
xor
inc
add
data16
pop
lret
jg
push
out
in
inc
lcall
push
into
jae
push
sarl
mov
pop
mov
test
and
imul
jae
jno
inc
sbb
push
pusha
dec
sbb
fstl
xor
mov
stos
stos
mov
ret
incl
push
cmp
push
lods
or
pop
clc
fistl
pop
adc
or
push
lahf
lea
in
sbb
push
sub
cmpsb
movsl
aaa
cmp
mov
sub
xchg
sarl
hlt
mov
mov
ss
dec
cmpsl
mov
mov
fsubl
mov
gs
mov
pushl
add
and
or
cmp
push
shr
sbb
mov
adc
add
lcall
clc
loope
outsb
clc
sbb
mov
mov
cmp
int
dec
enter
mov
call
mov
sti
add
sahf
push
sub
mov
jg
xor
sbb
pop
icebp
cmp
add
or
jp
xchg
leave
lea
jmp
mov
insb
out
hlt
jecxz
mov
adc
xchg
movsb
shlb
jg
leave
jno
call
xor
and
push
push
xchg
test
icebp
sub
inc
jne
shlb
mov
into
fs
sub
and
or
or
jmp
mov
scas
sub
sti
sbb
cld
cmp
daa
fwait
sbb
test
fwait
ljmp
push
pand
cld
push
fdivrl
rep
push
pop
fidivl
xor
add
scas
lods
mov
decl
pop
add
dec
aad
outsl
and
aad
add
in
cmc
push
inc
mov
push
xor
pushl
xchg
sub
xchg
xor
jle
mov
dec
sahf
das
call
leave
pop
fcomip
lcall
mov
add
mov
jmp
inc
sub
cwtl
push
cmp
cmp
push
bt
decl
out
pop
aaa
lds
mov
out
and
loope
add
sbbl
repnz
or
hlt
or
jp
push
inc
decl
sbb
pusha
xchg
push
push
pop
out
jbe
or
ds
or
sbb
lds
pop
pop
cmp
ljmp
ljmp
ljmp
fidivrl
inc
test
data16
paddd
cli
dec
and
popa
pop
int
daa
lcall
imul
cltd
imul
sarl
cs
decl
cmp
mov
push
hlt
xchg
nop
or
outsb
incl
cld
outsb
loope
ljmp
or
adc
add
and
inc
pushl
xchg
add
leave
xchg
jle
hlt
es
mov
adc
clc
pushl
add
into
push
mov
aaa
sarl
mov
jnp
loop
incl
arpl
xchg
shrl
inc
pop
out
and
test
sbb
xchg
mov
mov
push
mov
stc
imul
add
std
sbb
xchg
jbe
sahf
add
scas
test
xlat
jecxz
pushf
pop
pop
dec
mov
fstpl
ljmp
xchg
sub
arpl
xchg
sbb
dec
rcr
mov
incl
je
jae
in
adc
leave
xor
call
hlt
aam
pop
popa
ss
pop
pop
xchg
mov
movsb
mov
xchg
adc
xor
sub
addl
aaa
inc
add
mov
decl
call
cmp
test
add
xor
aas
ljmp
or
adc
lods
in
mov
fstpl
into
sub
inc
test
sti
pop
clc
pop
push
add
mov
push
mov
in
sti
or
mov
push
movl
mov
lcall
lods
stos
nop
loop
dec
jbe
push
leave
cmp
stos
aam
sub
ret
ja
cmpsb
sti
mov
incl
aas
and
push
fsubs
pushf
mov
push
sbb
stos
out
or
cmpsb
inc
stc
jecxz
jmp
and
mov
mov
popf
repnz
inc
movsb
jl
clc
xlat
leave
cmp
mov
jmp
jmp
push
mov
lds
dec
aam
loop
stc
out
test
xchg
mov
mov
xchg
mov
call
or
scas
inc
lock
adc
roll
jmp
add
cli
mov
iret
xor
sbb
jecxz,pn
push
mov
fidivrs
jnp
daa
test
bound
mov
lahf
test
cmp
pop
jmp
sbb
and
cli
xchg
push
push
insl
mov
js
and
insb
and
lock
mov
in
inc
jmp
pop
dec
sub
xor
inc
or
cld
enter
and
ds
mov
outsl
fneni(8087
scas
push
outsl
popa
loop
or
scas
je
ljmp
mov
imul
mov
dec
sbb
jle
or
jne
decl
cltd
lret
jno
pop
mov
hlt
add
push
insl
push
pop
inc
shr
push
movsb
mov
shlb
cmp
fcmovnb
jae
push
bound
fwait
push
and
jle
push
fstpt
mov
ret
fidivs
and
sbb
push
es
pop
dec
mov
pop
fwait
arpl
lcall
lcall
ret
test
ret
push
out
jp
stos
push
add
jmp
jo
xor
mov
pop
testb
or
mov
mov
std
lcall
cmc
shr
xor
testl
lcall
es
adc
sub
mov
ss
pusha
popa
push
sbb
and
shl
push
aaa
cmp
mov
ljmp
push
out
gs
stos
popf
sub
xchg
pop
aaa
std
ljmp
xorb
inc
push
fcoms
scas
nop
dec
push
int3
xchg
lcall
add
insb
ja
sbb
dec
test
mov
aad
mov
add
stc
ja
pushl
fsubl
ss
xor
and
mov
sbb
cmc
mov
subb
push
cmpsb
jmp
dec
jbe
jbe
les
sub
sbb
mov
jbe
aas
fs
hlt
insb
or
sbb
mov
ljmp
iret
cltd
sub
dec
ret
or
call
jno
repz
lcall
cli
lds
cmpsb
mov
push
mov
push
sub
popf
xchg
mov
mov
adc
fcomps
xchg
popa
out
mov
dec
mov
je
fnstenv
dec
adc
xchg
mov
mov
lret
push
aaa
clc
add
in
into
les
sbb
gs
adc
das
push
jae
scas
jl
call
jne
cld
pusha
push
lock
and
push
push
and
ljmp
sub
mov
call
sub
test
pusha
xor
or
inc
and
cmp
repnz
icebp
sbb
pop
mov
jns
inc
lret
jg
mov
dec
jo,pt
xor
xchg
fimuls
mov
outsl
fcomps
jg
call
loop
packssdw
push
sbb
adc
mov
mov
push
clc
and
lea
push
hlt
jge
sbb
fcomps
pop
add
or
sub
test
mov
call
xchg
fstpl
lret
and
inc
pop
mov
inc
outsl
mov
and
jns
subl
fcomip
call
adc
add
cmp
and
aad
xor
cmp
lret
mov
push
ret
sbb
testl
scas
xlat
in
inc
std
cmp
adc
and
add
scas
or
xchg
ljmp
inc
dec
call
out
adc
mov
rcrb
pusha
push
in
rcll
ljmp
addr16
xor
xchg
fnsetpm(287
cmpsb
je
jno
push
jge
and
jno
incl
fistl
ljmp
adc
mov
xor
add
push
sti
xchg
jmp
xorl
mov
rorb
aad
std
mov
dec
push
outsl
in
inc
mov
decl
mov
sbb
jl
cmp
fcoms
xchg
cmp
aaa
cld
fs
pop
adc
in
mov
aaa
repnz
es
andl
das
clc
jmp
xchg
bound
jle
and
push
les
mov
jmp
and
pushl
sbb
or
inc
add
jnp
pusha
mov
xchg
mov
roll
outsl
decl
mov
mov
push
pop
ficomps
add
adc
mov
decl
inc
in
sub
daa
and
rorl
xchg
andl
dec
lcall
jns
and
xor
incb
fs
cmpsl
or
dec
mov
ds
cmc
sub
fcmovne
or
mov
icebp
das
aam
adc
adc
enter
mov
into
test
loopne
iret
movb
xchg
fwait
in
mov
decl
adc
test
outsl
or
inc
ja
xlat
dec
xchg
sarb
mov
jmp
jmp
sarl
sahf
sub
push
dec
aad
push
test
not
cwtl
stos
insl
inc
mov
xchg
sbb
push
push
fldenv
popa
xlat
fldcw
and
pop
icebp
call
ljmp
xor
andl
mov
cltd
sbb
fbstp
push
xchg
jle
add
mov
cmp
call
popa
xchg
xchg
loope
mov
push
out
and
and
dec
into
cwtl
jno
cmp
lods
inc
adc
jg
mov
dec
icebp
test
xchg
mov
add
fwait
sti
or
pop
and
incl
sbb
sub
or
dec
mov
jnp
cli
xchg
add
xor
lret
pusha
ljmp
sbb
add
sub
outsb
int3
mov
push
sub
insb
lcall
inc
in
mov
aam
fadd
add
xor
outsb
stos
aaa
imul
call
ja
aam
mov
jb
sarl
push
jg
scas
mov
cmp
push
xor
sti
add
cmp
stos
int
cmp
das
cwtl
cmp
push
sub
add
decl
pop
dec
or
ds
je
test
ja
test
cld
dec
jo
dec
adc
or
inc
xchg
jno
scas
cld
ljmp
js
cmp
pusha
insl
rcrb
cld
push
mov
push
jp
cld
dec
popa
addr16
push
enter
mov
loopew
jmp
pop
dec
call
inc
push
push
in
out
xor
dec
cmp
xor
callw
daa
sbb
fildll
pop
outsl
sub
call
jb
jo
lea
xchg
xor
sti
sbb
std
cli
xrelease
cld
call
js
imul
xchg
cmp
loopne
xchg
jmp
rcrl
add
cmp
insl
pop
push
repz
pop
xor
cmc
sub
lock
decl
movsb
pop
mov
mov
fwait
sbb
xchg
inc
scas
mov
inc
loop
inc
jae
stos
fistl
and
pusha
test
mov
insb
inc
adc
mov
sub
push
mov
je
sbb
into
adc
cltd
pushl
jno
cs
jno
and
loope
push
pop
push
cltd
int
xor
mov
in
adcb
incl
insb
xor
jmp
push
jo
jb
in
lds
enter
rcl
jb
call
jg
repz
lret
jmp
push
add
mov
push
mov
and
cmp
mov
ljmp
jns
movsb
xor
mov
mov
inc
pop
push
mov
dec
js
cmp
popf
jmp
rcl
pop
push
scas
lods
outsl
cmp
das
inc
mov
add
lea
aas
pop
bnd
decl
cmp
std
mov
and
sti
inc
push
icebp
leave
pop
mov
jp
dec
cmpsl
loopne
or
xor
lea
or
xchg
mov
aad
dec
mov
pop
inc
inc
jb
pop
fwait
xchg
sbb
ret
negl
mov
mov
jle
decl
add
lret
int
negb
push
and
push
sbb
adc
pop
jno
ljmp
mov
insl
in
arpl
mov
xor
loope
sar
call
push
jns
jmp
xchg
in
cmp
mov
sbb
js,pt
pop
push
std
pushl
dec
pop
inc
jne
and
movsl
pop
in
and
push
jg
rol
mov
pushl
inc
aad
das
jbe
out
or
push
xor
out
mov
push
stos
scas
ljmp
sti
push
sub
leave
cli
sbb
notb
test
ljmp
or
mov
imul
cli
scas
mov
repnz
insb
mov
jg
incl
loop
mov
sti
pop
pop
jbe
mov
mov
inc
push
aas
push
test
mov
std
lahf
and
ret
clc
roll
mov
jmp
decl
das
jmp
mov
out
loope
pop
dec
test
jmp
mov
shl
es
cmc
incl
push
cli
adc
stos
dec
push
xchg
out
mov
jp
ret
insl
and
mov
and
cmc
mov
out
cmp
aas
sub
mov
jb
ret
adc
cltd
mov
cmpb
inc
aam
dec
test
cmp
and
lret
scas
mov
out
repz
loopne
fadd
sbb
fbstp
iret
enter
fdivrs
mov
testb
cmp
push
dec
and
sbb
dec
fcmovnb
movsl
fstl
jle
fmull
loope
jp
inc
xor
xchg
jb
dec
shrl
adc
push
pop
aaa
xor
dec
cld
inc
sahf
shl
xor
xchg
add
mov
mov
and
pop
cltd
sub
sub
pop
fidivrl
cwtl
jp
out
aaa
sbb
scas
jns
add
loopne
fsubs
aaa
jb
out
cmc
xchg
fistpll
je
decl
ljmp
test
adcb
inc
jo
movsl
pop
inc
lods
leave
insb
cltd
push
dec
fisttps
decl
jno
cwtl
push
aas
std
pop
mov
push
repnz
sub
jns
repz
push
insb
cmp
rol
jp
popa
dec
jle
leave
jnp
fiadds
mov
dec
jmp
in
ljmp
mov
out
sbb
dec
je
mov
rcl
mov
inc
xchg
sti
sub
movsb
stc
cmp
xor
xchg
cmp
repnz
repnz
aas
lret
push
aaa
xchg
jp
push
fcmovnbe
incb
lahf
lret
lcall
decl
sti
les
out
and
push
sbb
adc
cmpl
push
or
push
lods
push
call
adc
daa
cmp
pop
push
std
divl
decl
jp
sub
add
rcrb
or
sub
inc
int3
xchg
ljmp
insb
adc
sub
add
rolb
pop
or
inc
daa
jmp
std
adc
xchg
adc
jmp
mov
loope
es
and
lcall
in
push
cld
or
jmp
cli
call
out
iret
jnp
imul
jnp
ret
xorps
insl
enter
xor
aaa
jo
decl
popa
cwtl
lds
cmp
push
aam
pushfw
xchg
add
es
mov
out
popf
popf
aaa
call
cmp
dec
mov
repnz
bound
jg
incl
cmpsb
mov
arpl
push
icebp
lods
mov
and
add
push
sbb
movsl
dec
inc
jp
incl
jecxz
pop
stos
push
mov
dec
xor
loope
fs
out
inc
cltd
arpl
mov
fadds
adc
fcomps
mov
test
mov
or
decl
mov
jg
xor
mov
sbb
data16
pop
or
and
in
inc
push
rcll
inc
pop
sahf
fwait
adc
out
xor
mov
in
lds
popl
repnz
fninit
push
pushf
test
dec
es
loopne
jae
enter
push
arpl
adc
cli
popf
jbe
xchg
or
addr16
jp
lods
sub
add
jmp
negl
pop
sar
decl
lcall
scas
repnz
lcall
cmp
aaa
cld
decl
cli
lahf
fs
outsb
sti
outsb
mov
in
mov
xchg
cmc
ljmp
decl
lahf
gs
repz
daa
jp
jno
lret
repz
lret
xchg
icebp
jbe
mov
fadd
and
sahf
push
pop
repz
cmp
adc
movl
nop
aas
in
cltd
std
dec
xlat
inc
out
xlat
dec
dec
leave
cltd
xchg
mov
les
cmpsb
lds
add
out
insb
shll
pop
loopne
fsubrs
push
jmp
cmp
xchg
jb
daa
roll
mov
mov
mov
data16
popf
sbb
add
sub
test
outsb
mov
pusha
jnp
jb
rorb
stos
pushl
mov
outsb
sub
jae
loop
sub
sbb
xorb
dec
or
push
dec
and
ds
outsl
into
xorb
icebp
jecxz
pop
lahf
jnp
inc
dec
mov
pop
dec
shrb
out
cli
cltd
lods
add
xchg
test
test
xor
add
jb
xchg
jecxz
jmp
out
rolb
in
outsb
and
dec
push
jo
xor
stos
jo
aaa
std
mov
lcall
mov
jle
bound
repz
notl
ljmp
inc
jmp
mov
and
stc
lods
les
imul
jg
push
xchg
sub
cmp
loope
imul
jne
enter
and
jmp
mov
fisubrs
xchg
pop
sbb
sbb
and
imulb
mov
aam
mov
jae
pushl
jbe
repnz
je
cmp
sub
sub
pop
test
cmpl
or
decl
fwait
outsl
sarl
insb
xchg
out
mov
gs
pop
rcrl
lods
mov
incl
mov
cli
dec
repnz
in
inc
xlat
pop
pusha
mov
and
xor
addr16
sub
xchg
andb
ljmp
stos
dec
hlt
and
xor
imul
pop
or
fists
fdivr
mov
mov
push
dec
std
xchg
adc
hlt
mov
stos
loope
jmp
mov
sahf
xorl
outsl
xchg
dec
lret
jmp
mov
push
dec
jmp
mov
jne
popf
pop
repnz
loop
xor
fldl
and
sahf
in
in
add
popf
pop
jbe
bound
add
in
andb
ss
aaa
jae
push
or
mov
lcall
sbb
cmpsl
dec
test
cmp
mov
mov
shrb
jl
push
call
sub
xchg
cli
mov
daa
insl
mov
jno
sahf
rcl
mov
maxps
inc
push
leave
push
sti
dec
push
lret
inc
in
cmpsl
into
stos
test
sub
lahf
imul
mov
and
dec
jmp
cmp
sub
cmp
call
adc
dec
std
mov
inc
fisttpl
mov
addr16
out
jb
int
cmp
dec
mov
iret
pushl
pop
lods
lock
in
in
fs
xchg
cmpb
lock
sbb
dec
jecxz
ss
mov
outsb
push
dec
call
les
and
fxsave
fisttpl
inc
jg
inc
xor
je
into
xor
hlt
dec
in
aam
ret
push
mov
push
out
aad
lcall
pushf
jge
cmpsl
sub
cltd
push
xchg
jbe
lds
pop
ss
icebp
and
pop
pop
xor
icebp
jmp
lret
pop
sbb
stos
fmuls
sub
pusha
clc
jg
shr
push
xor
repz
int
fidivs
cltd
sbb
or
pop
pop
fcomip
mov
pop
movsl
fwait
jo
test
sbb
loop
loopne
adc
pop
outsl
clc
ljmp
insb
add
mov
sahf
mov
cwtl
or
imul
filds
in
pop
pop
nop
pushf
pop
sahf
xor
loope
leave
mov
sbb
jo
xchg
lret
push
cmp
aad
pushl
insl
in
push
aas
jns
ficomps
daa
movsb
jp
push
xchg
cwtl
xor
xor
jmp
lret
mulb
inc
dec
mov
dec
xlat
in
inc
cld
ficoml
test
ljmp
add
into
mov
dec
adc
dec
inc
xchg
lahf
repnz
jmp
roll
clc
mov
inc
in
js
repz
mov
cmpsl
out
jmp
pop
out
fistl
sub
lret
mov
cmpsl
and
imul
mov
xchg
mov
or
cmp
cld
in
mov
notb
xor
mov
notb
movsl
add
notb
stos
sbb
loopne
inc
sar
call
mov
clc
outsl
in
adc
rolb
dec
push
jb
cli
xchg
lds
push
mov
das
jno
xor
mov
clc
add
cmc
jecxz
xor
mov
fdivrp
outsl
clc
pushl
add
addr16
xchg
ja
cmp
movsl
call
stos
fwait
notl
push
adc
jge
push
mov
in
leave
stos
jbe
mov
or
dec
lods
sub
mov
cmp
mov
in
dec
mov
lret
inc
xchg
jmp
inc
outsb
pop
add
inc
cmp
lcall
gs
mov
push
cmp
sbb
in
cmpl
call
jbe
shll
sarl
sub
push
movsb
cli
ljmp
adc
stos
frstor
mov
fstpt
fimuls
out
dec
ds
xchg
add
sub
sbb
xor
popf
adc
mov
sbb
pusha
cmp
fcomip
or
shl
cmp
test
jle
xchg
xchg
sbbl
aaa
push
decl
xchg
popl
pop
repz
mov
xor
or
incl
xor
sbb
xor
stc
stos
imul
dec
and
xchg
ljmp
fistpll
mov
incl
cltd
or
popf
cmp
push
cmp
jnp
lods
mov
out
push
rcl
rolb
pushl
orl
cmpsl
out
mov
ljmp
in
scas
addb
in
add
cltd
jmp
fucomip
sbb
cltd
xor
mov
cwtl
std
movsb
sub
aas
aad
arpl
or
insl
lcall
mov
shl
and
cmp
mov
cmp
adc
fbstp
sti
xchg
xlat
mov
lods
jae,pt
lds
and
test
mov
pop
fsubl
aam
lea
jmp
inc
or
mov
jbe
pop
fcomp
sbb
xchg
gs
xchg
mov
or
xorl
adc
iret
push
push
pushl
popf
mov
lds
and
outsb
mov
jle
repz
stos
jo
or
cmp
idiv
incl
lds
aas
cld
addl
cmp
in
ljmp
inc
sub
jb
cmp
jo
sbb
lea
bound
scas
shlb
pop
movsl
cmp
jle
mov
movsb
popa
add
js
dec
sbb
pushf
sub
lcall
push
xchg
test
pushl
das
movb
je
and
mov
jb
mov
repnz
test
fcos
aas
push
jg
divl
leave
pop
testb
xor
js
pop
data16
lods
adc
lcall
or
cs
pop
popf
push
lret
mov
and
mov
fildll
decl
adc
cltd
cli
add
ffree
inc
fnstsw
dec
jl
fsubr
ja
or
ljmp
ss
or
dec
xchg
xchg
fimuls
in
xchg
xor
adc
fs
aad
sbb
call
popf
xchg
jns
sahf
loopne
sahf
arpl
cwtl
push
mov
lods
add
insb
sbb
decl
es
and
out
xchg
sub
ja
fstl
push
or
add
pop
ret
adc
in
nop
int
adc
fisttpll
mov
fistpl
cld
add
mov
dec
push
xor
ljmp
into
shll
xchg
rcll
sbb
xchg
ret
stos
adc
scas
cmpsl
out
add
pop
jle
mov
push
aam
pop
out
xor
mov
arpl
popf
cmp
lock
ljmp
cmc
jb
outsb
push
pop
fdivrp
mov
push
xor
xlat
cmp
lret
fistps
xor
pop
cld
mov
inc
repz
xlat
jb
xchg
comiss
pushl
arpl
or
pop
xor
cld
push
sbb
fsubl
xchg
das
gs
incl
std
je
push
sub
sub
xor
dec
mov
mov
push
inc
sbb
hlt
or
cltd
mov
faddl
int3
jmp
fcoml
ljmp
in
jae
mov
subl
dec
jmp
int
insb
pop
mov
in
cmp
incl
loope
js
and
add
jmp
add
jl
test
int
adc
jne
ud0
decl
and
mov
and
popf
add
in
outsb
arpl
sbb
push
mov
fwait
ljmp
rol
or
leave
out
dec
cmc
jo
inc
ds
mov
sbb
and
lcall
stos
call
ds
in
jl
and
ja
add
ljmp
sbb
push
inc
or
cmpsb
pop
xchg
push
scas
mov
lcall
enter
pop
ljmp
enter
sbb
in
pop
and
jmp
or
pop
mov
mov
jno
lahf
ss
aaa
push
or
outsl
jp
aaa
into
test
gs
mov
cld
faddl
xor
cmp
add
jo
sbb
lcall
sub
mov
fidivl
inc
push
je
and
jns
inc
std
mov
jmp
dec
xchg
cmpsl
stc
int3
icebp
aaa
cmp
push
push
xchg
xchg
jo
mov
xchg
outsl
mov
push
pushl
mov
jecxz
cltd
mov
jecxz
jle
pop
scas
push
outsb
cmp
cmp
sbb
pusha
incl
and
push
mov
outsb
gs
fiadds
mov
test
mov
push
mov
ljmp
fxch
ret
pushf
pop
push
fcomi
aad
lcall
xlat
xor
fcomip
xor
xor
mov
or
pop
mov
push
and
idiv
ljmp
shrb
repnz
cmp
imul
cld
jo
mov
mov
jne
cld
push
nop
or
lret
xlat
test
movsb
fsubl
jns
repnz
ds
and
or
cli
test
out
adc
and
test
pop
es
incl
daa
adc
test
scas
rol
xchg
and
xchg
jbe
jb
fistpl
sar
xlat
jmp
push
inc
shll
sbb
int3
roll
stos
mov
jmp
ds
or
cmp
das
mov
jne
cmp
pop
dec
insl
xor
dec
lods
push
ljmp
test
mov
js
or
iret
testb
push
loope
pop
jbe
cmpsb
inc
xchg
adc
dec
mov
enter
inc
xor
das
sti
movsl
cmpsl
mov
rcl
pop
std
mov
incl
cmp
inc
or
movsb
inc
lahf
lret
sub
pop
ja
inc
xor
rorl
jmp
scas
inc
bound
lock
inc
xor
sti
sub
fldenv
mov
sti
jne
mov
fisubrl
jmp
repz
cmp
jb
mov
cs
test
add
or
fsubrs
sbb
pop
icebp
jmp
aad
sahf
mov
cld
stc
pop
repnz
sub
lds
lcall
inc
or
dec
xchg
add
mov
clc
xor
sub
sub
pop
add
sub
adc
sbb
mov
mov
jg
clc
push
dec
add
add
push
sub
inc
mov
pushl
push
lods
jmp
jg
popa
nop
inc
mov
bnd
es
add
insb
sbb
mov
jmp
ljmp
into
adc
out
popl
out
sub
sarb
lret
movsb
or
dec
int3
sub
iret
pop
daa
outsl
daa
add
addr16
mov
and
mov
push
flds
jmp
leave
xor
mov
xor
cmpsl
outsl
out
cmp
jns
popl
pop
jae
imul
imul
mov
fadds
lods
jo
lock
js
and
in
or
cmp
jbe
mov
ret
xor
xchg
loope
pop
movsl
dec
fildll
lods
xchg
fcmove
sbb
pop
push
jb
stc
and
mov
rorw
scas
insb
decb
aam
push
inc
ja
femms
fistps
test
xlat
imul
cmpsl
cmp
aas
xlat
mov
int
xchg
fstps
idiv
jp
aaa
lds
mov
mov
shr
push
sub
cmp
mov
xor
or
pushl
mul
not
and
and
sbb
in
mov
ret
enter
dec
mov
push
and
ljmp
mov
das
push
sbb
int
push
loopne
inc
push
sub
mov
roll
ret
jno
pusha
sar
decb
sub
sbb
pop
outsb
ljmp
int3
in
fs
das
or
inc
out
sbbb
dec
mov
mov
mov
pop
dec
mov
out
mov
das
sub
sbb
mov
call
push
mov
fstpt
test
repnz
jne
mov
add
aad
js
mov
ljmp
push
in
sub
cmp
test
inc
push
out
xchg
jmp
inc
cmp
and
mov
dec
pop
mov
cmp
fs
xor
add
mov
js
out
clc
dec
pushl
jl
cs
sub
or
xor
cmp
sahf
pusha
jmp
repz
test
jne
pop
outsl
shrb
cmp
icebp
ss
fcomip
cmp
outsb
push
push
ljmp
xorl
mov
daa
pop
cltd
push
cli
sbb
rcll
pop
mov
mov
mov
lcall
cmc
push
mov
into
out
mov
into
adcl
mov
cs
jmp
aam
mov
lret
xchg
sub
js
mov
cwtl
inc
in
xlat
in
jg
insb
xchg
push
mov
pop
adc
data16
or
test
lcall
sub
or
push
jb
jmp
fdivl
in
sbb
js
cmp
jge
arpl
in
notb
add
mov
repz
call
std
pop
ljmp
outsb
call
in
sbb
mov
mov
xchg
rorb
mulb
es
or
add
mov
das
pushf
ficoml
ljmp
imul
pop
mov
jecxz
div
dec
xlat
xor
pop
mov
mov
jg
lcall
add
sar
adc
fstpt
decl
je
popf
les
idivl
int3
mov
imul
mov
pushl
mov
outsl
lret
flds
dec
hlt
stos
mov
in
loopne
dec
fstps
mov
sub
add
mov
hlt
jl
call
cli
scas
push
and
shrb
adc
sbb
push
xchg
mov
pop
lcall
out
jae
pushf
lods
test
addb
sub
inc
cmpsl
insl
test
decl
pushl
xorb
dec
and
insb
jecxz
xor
jg
imulb
aaa
add
fwait
in
jge
ljmp
cmp
mov
aad
mov
out
push
xchg
mov
xchg
pop
and
cwtl
nop
clc
call
outsl
jg
sub
adc
pop
fiaddl
in
add
rep
lock
sub
mov
push
hlt
ficoms
in
imul
adc
xchg
jmp
popf
fbld
ljmp
jne
mov
das
clc
adc
cmp
and
lds
or
dec
inc
aam
out
dec
cmpb
pop
ds
outsb
insl
push
inc
xor
leave
xchg
cltd
ss
stos
mov
dec
out
and
inc
loopne
inc
and
lcall
in
push
aaa
cmp
sete
iret
xchg
xchg
int
push
xchg
sbb
xchg
jmp
jnp
sub
lock
ljmp
xor
push
xor
mov
aas
mov
pop
fcmovnb
mov
mov
push
push
cli
pop
pop
leave
aam
mov
fidivl
cs
jb
adc
incl
lahf
adcl
aas
faddp
xor
je
mov
and
jg
jno
clc
cbtw
mov
push
and
push
adc
add
nop
lahf
mov
mov
enter
enter
mov
jg
jecxz
adc
xchg
loop
ja
repnz
cmp
and
mov
clc
repnz
sbb
cld
mov
bound
and
jae
nop
fisttpl
jl
cltd
clc
jbe
xorb
dec
into
mov
sbb
call
ds
inc
add
mov
adc
and
cmc
ret
test
call
or
sub
rcrl
cmp
fnstcw
adc
mov
mov
mov
popf
inc
lods
cmpsb
pop
repz
movsl
arpl
es
out
cli
dec
in
lahf
xor
jnp
pop
pop
pop
into
in
lahf
mov
test
xchg
cld
push
movsb
mov
jb
mov
add
pop
add
out
outsl
xchg
sbb
push
mov
jmp
or
les
ljmp
fcomps
add
and
jae
les
pop
xor
in
pop
mov
fists
jno
mov
aaa
lret
sar
mov
popa
mov
ficompl
pop
or
decl
pusha
call
addr16
std
icebp
mov
mov
lods
xorl
jbe
daa
cmp
xchg
adc
xor
repnz
repnz
mov
cmpl
mov
sarl
mov
test
xor
ret
test
pop
mov
lcall
loopne
stc
lcall
ljmp
ret
mov
insb
sbb
sahf
adc
ljmp
fnsave
data16
xor
out
push
lds
jno
leave
cmc
loopne
mov
inc
mov
mov
inc
leave
jmp
mov
lds
sbb
jmp
sbb
add
add
mov
jmp
mov
lahf
lock
sbb
xor
aaa
push
repz
aad
notl
lcall
and
dec
cs
mov
jg
ljmp
jbe
cmp
insl
add
sahf
in
jnp
mov
mov
popf
lods
data16
xchg
shl
pop
hlt
jmp
popa
inc
leave
and
sar
jecxz
cs
xorl
dec
inc
lcall
test
lods
cmc
push
sahf
mov
imul
mov
fsubrl
lret
aas
dec
cmp
cld
mov
dec
xchg
pop
mov
cmp
xor
neg
shrb
pushl
into
fistpl
and
outsl
dec
mov
cmp
ficoml
rcrb
push
push
xchg
dec
lods
mov
lds
cmp
outsb
mov
test
scas
dec
cmp
dec
inc
sti
cmp
hlt
adc
mulb
imul
pop
scas
inc
lds
lret
cmp
cmp
or
push
sub
pushl
in
inc
sub
xchg
mov
jnp
rcrl
pop
fildll
adc
ljmp
cmp
or
movups
addr16
adc
dec
cmpsb
jns
mov
cmp
cmp
out
cmp
pop
ret
sub
cmp
fidivl
sahf
stos
lcall
sti
syscall
jne
iret
cmp
dec
lods
mov
dec
mov
test
aaa
cld
sti
mov
jae
movsl
lods
xchg
mov
jmp
mov
jp
pop
cmp
lcall
jg
iret
loope
mov
test
andb
mov
mov
mov
cld
inc
mov
mov
out
iret
add
or
xchg
cwtl
scas
cmp
push
sbb
mov
xchg
or
xchg
ds
push
mov
inc
cmp
xchg
mov
hlt
mov
and
popf
mov
movsl
pop
scas
cmp
incl
mov
jmp
das
test
pop
stos
adc
int
sub
xor
cmpsl
mov
inc
add
sub
icebp
sbb
push
clc
pop
push
aam
push
aam
rorb
lea
out
jmp
loopne
and
cmp
data16
loope
je
jne
lods
mov
popf
std
call
xchg
incl
mov
push
push
mov
loopne
jp
sahf
mov
loop
push
fiadds
xchg
mov
sbb
pop
aad
inc
loope
std
fwait
out
int3
enter
jb
out
scas
sar
incl
in
pcmpeqb
lods
insb
xlat
cltd
lret
inc
add
jbe
dec
in
in
jns
pop
bound
loop
popa
std
jmp
imul
pop
nop
push
aam
test
mov
mov
call
cmp
stc
xor
dec
xor
movsb
mov
cmp
mov
pop
pushl
jg
mov
jecxz
adc
out
mov
and
xchg
inc
mov
pop
mov
shl
add
add
cmp
lret
mov
pop
adc
lahf
mov
jge
and
push
mov
outsl
rcrl
ja
inc
jg
or
sbb
mov
inc
mov
call
dec
fcmovb
dec
mov
push
sub
mov
ljmp
daa
call
dec
pop
mov
sbb
xor
inc
outsb
push
arpl
ja
call
into
aad
inc
frstor
hlt
cmp
pop
mov
sahf
dec
inc
push
test
push
icebp
inc
hlt
mov
dec
cli
inc
xor
sbb
sbb
mov
add
jmp
xchg
xchg
push
and
stc
out
push
movsl
push
int3
push
dec
dec
cs
js
int3
sahf
sar
and
das
in
lds
cltd
out
jg,pn
xor
push
out
add
ljmp
push
fistpl
fnstsw
imul
stos
enter
push
test
cmp
mov
mov
in
jle
xlat
jg
sar
mov
imul
xor
adc
mov
dec
popa
shrl
xor
jl
ss
mov
fldl
mov
jmp
fidivrl
loop
cmp
les
mov
add
sbb
jb
inc
test
decl
mulb
scas
mov
jo
sub
pop
loop
mov
pushl
mov
push
mov
sub
lret
push
lods
adc
ret
cld
scas
cmp
sbb
mov
scas
mov
lods
mov
dec
cmp
es
fsubl
shlb
jbe
call
mov
imul
popf
add
mov
mov
and
push
sbb
incl
mov
mov
icebp
or
push
mov
jecxz
in
movsl
adc
pop
add
lret
lcall
jbe
movsl
mov
push
and
inc
jno
aas
fdivl
xchg
lahf
add
lret
ljmp
rorb
add
adc
cmp
sbb
pop
mov
clc
pushl
sub
mov
adc
and
inc
addb
lcall
inc
dec
mov
push
mov
push
mov
aam
jno
push
xor
cmc
ljmp
mov
fldt
sbb
push
jae
lods
mov
ret
pusha
pushl
and
mov
push
pop
ljmp
les
lahf
pop
cmp
pushl
jecxz
sbb
loop
dec
mov
pop
xchg
enter
xchg
fstps
loopne
rcrb
popf
lock
mov
mov
and
add
call
rorb
inc
jb
ljmp
push
lods
in
mov
push
xlat
xchg
xchg
sbb
stc
xor
or
inc
push
in
insl
out
fidivs
push
hlt
scas
addb
out
xchg
and
js
in
fstpt
jne
ljmp
xor
call
lds
repz
enter
sarb
stos
inc
out
enter
ljmp
int
mov
int3
sub
rclb
iret
outsl
xor
call
mov
inc
xor
or
pusha
mov
outsl
popa
adc
cmp
lock
inc
cmpsb
psubq
ss
insl
icebp
mov
mov
js
jnp
stos
mov
cld
pushf
sbb
stc
decl
cmpsb
lods
scas
jo
test
add
iret
push
scas
push
fsubrl
cld
push
cmp
shll
xchg
rcl
mov
stos
call
adc
xchg
or
loope
jmp
in
xchg
push
mov
inc
or
mov
cmp
das
leave
addr16
fldt
lea
int3
jge
loope
pop
mov
sbb
cld
daa
les
or
inc
push
adc
pop
hlt
mov
fnstenv
pop
in
push
repz
or
sbb
repz
ja
pushl
mov
add
daa
insb
popf
cmp
push
andl
pop
cmp
sub
or
or
outsl
or
cmp
adc
push
jo
nop
dec
icebp
mov
call
push
jg
mov
mov
pusha
das
mov
push
rclb
xlat
cmp
jle
inc
mov
test
push
popf
cmp
ljmp
sbb
xchg
stc
inc
cltd
loop
or
jnp
imul
in
std
lods
iret
enter
pop
lock
cmpsl
jp
fs
mov
cmp
sub
sbbb
and
imul
fisttps
mov
test
cs
push
push
dec
mov
aad
decl
pop
repnz
pop
fadd
xchg
ss
xorb
pop
stos
ljmp
nop
fiaddl
fwait
movsl
outsb
loopne
andb
and
add
and
jg
decl
cld
push
int3
insb
outsb
mov
add
rclb
lods
sub
mov
sbb
sar
js
sub
or
inc
stos
jbe
inc
leave
popf
inc
push
mov
lahf
xor
sub
jg
inc
adcb
sbb
mov
lods
xor
push
test
lods
mov
jp
std
mov
mov
lock
and
push
push
lods
imul
jmp
das
scas
clc
scas
push
pushf
push
add
outsl
mov
dec
leave
adc
xor
lcall
push
adcl
or
das
imul
and
dec
sub
pop
je
mov
ret
jmp
or
cmp
repnz
jg
mov
lret
adc
cld
data16
jnp
mov
cmp
ljmp
leave
dec
and
sub
push
or
xchg
fiaddl
js
lahf
cld
test
add
and
lcall
dec
xchg
push
js
rclb
mov
cld
frstor
aaa
cmp
arpl
popa
pushf
inc
movsl
cwtl
fsubrl
inc
popa
popa
js
lds
xchg
out
mov
ljmp
cli
pusha
mov
push
and
out
jo
pushf
js
xor
mov
adc
mov
mov
mov
aaa
dec
jb
rorb
insl
xchg
sub
sbb
inc
ret
dec
sbb
test
sub
add
adc
mov
cmp
lcall
insb
jecxz
inc
cli
jg
mov
movsl
das
je
int
mov
ljmp
xor
and
pop
nop
push
lcall
fnstsw
dec
shr
dec
cltd
lret
decl
xchg
divb
movsb
repz
pop
outsb
fldenv
jnp
stos
ret
fcomip
outsl
cmc
lods
je
pop
cmp
imul
in
test
andb
inc
add
movsb
call
cli
pop
ja
mov
sbb
mov
or
scas
mov
pop
inc
sbb
cmp
sbb
scas
dec
jnp
add
in
enter
fwait
xchg
insl
push
mov
in
fcmovb
ljmp
sti
lods
mov
stc
movsb
dec
or
call
inc
pop
leave
sub
jg
iret
fdivs
out
jo
adc
fsubrs
fwait
jns
push
mov
andb
incl
pop
je
popa
aaa
and
out
adc
lret
push
mov
jbe
popa
sub
outsb
sub
fistps
jns
and
popa
mov
fcmovnb
in
nop
and
dec
jns
iret
cwtl
aam
push
pop
or
jl
pop
cld
incl
daa
dec
je,pt
add
push
cld
iret
jns
subl
lcall
sbbb
aam
add
dec
stos
sahf
or
adc
xor
call
add
icebp
mov
sbb
scas
push
adc
cmp
lock
xlat
hlt
jae
les
xor
fwait
ljmp
push
push
rcrl
dec
xchg
sti
pop
inc
pop
dec
mov
int3
outsl
adc
ljmp
mov
std
mov
push
int3
and
vpmaddubsw
push
sti
mov
sahf
pusha
or
decl
pop
addr16
push
pop
bound
lahf
inc
dec
dec
out
adc
cmp
cmpsb
imul
imul
push
arpl
jae
imulb
mov
mulb
adc
call
and
in
jb
push
fxch
jmp
add
xchg
stos
imul
dec
inc
lods
idiv
call
or
bound
pop
inc
mov
jno
pusha
sbbb
dec
test
lcall
call
icebp
sub
xor
into
inc
sub
xchg
pop
lea
push
cld
sti
cmp
dec
fnstcw
daa
xor
fimull
data16
inc
jmp
idiv
incl
inc
push
bound
fiadds
mov
xchg
mov
dec
test
insb
pop
test
inc
and
pop
loope
pushl
popa
in
fimull
dec
outsl
cli
insb
mov
dec
cmpsb
cwtl
xchg
pop
mov
repnz
sub
call
dec
stc
inc
sub
ja
or
fdivrp
jae
or
jne
push
sarl
lods
mov
test
adc
adcb
out
sbb
pop
cmp
dec
rorl
mov
cmp
cmp
pusha
xchg
movsl
sub
bound
dec
mov
sbb
flds
sub
mov
subps
adc
in
pop
xor
ljmp
call
adc
scas
mov
jbe
pop
dec
pop
scas
xchg
or
stos
clc
loope
incl
xchg
sub
xor
scas
rcll
leave
dec
inc
pusha
xchg
push
dec
xchg
mov
sbb
push
test
or
pop
aas
add
sub
rorb
movsl
mov
lcall
sbb
cld
std
jl
test
outsb
xor
addl
push
push
mov
fwait
imul
mov
cmp
and
pop
add
push
adc
mov
adc
cld
jmp
out
icebp
fsts
dec
int3
jle
inc
xchg
ret
xchg
rclb
push
in
mov
mov
jmp
lock
iret
lea
jecxz
insl
test
stc
xchg
jl
jo,pn
decl
cld
jle
mull
add
sbb
mov
cmp
adc
mov
das
sar
push
loop
dec
jl
mov
sbb
ds
loope
pop
mov
fstl
scas
das
push
push
jns
outsl
dec
mov
inc
sub
cltd
pop
call
clc
pop
mov
or
fwait
cmp
xchg
out
add
lods
mov
pop
cmp
stc
xchg
rcrl
test
repnz
sub
inc
jns
cwtl
incl
inc
iret
or
outsb
cli
in
fdivr
sarb
dec
sub
cmp
inc
in
clc
fsubrl
test
lcall
clc
lea
test
aam
ret
pop
arpl
adc
pop
dec
mov
iret
xlat
cmp
add
or
sti
mov
inc
cmc
pop
ljmp
pop
out
outsb
test
jmp
push
sarl
jmp
mov
movzwl
decl
loope
dec
adc
pop
mov
sub
mov
les
push
sub
mov
dec
mov
push
push
push
mov
or
sbb
lcall
std
dec
push
cmp
popa
subb
sti
add
or
or
inc
ds
add
je
adc
outsl
xchg
xor
mov
sbb
xchg
gs
out
dec
and
jp,pn
daa
enter
mov
inc
testb
out
sub
add
in
repz
ljmp
sub
push
sub
push
mov
pusha
outsb
mov
mov
pushl
mov
enter
inc
aam
loop
ds
jo
mov
xor
adc
xchg
dec
sbb
jp
adc
pop
mov
test
push
iret
xchg
xorl
cmpsl
xchg
dec
scas
ss
lock
dec
xchg
sbb
jmp
xor
lret
dec
insb
xorb
rcr
add
sbbb
iret
cli
loope
mov
cmp
int
scas
mov
popf
add
jge
dec
cs
jmp
adcb
push
jl
add
mov
inc
xor
call
sub
cs
addb
inc
mov
mov
loop
xchg
adc
outsl
mov
fcomip
stos
cmpsb
xlat
imul
or
gs
int
int3
scas
lret
jg
jmp
sar
mov
cmpsb
inc
fsubr
mov
fistl
inc
lea
call
int3
outsb
fildl
push
pusha
dec
cmc
pop
pop
test
mov
leave
scas
rolb
incl
push
lcall
outsl
inc
fstpl
loop
insl
call
pop
pop
mov
into
sbb
sbb
cmp
mov
mov
fbld
cmpsb
mov
or
mov
arpl
incl
cmc
adc
xor
push
mov
cmp
and
mov
xchg
sub
in
out
sbb
repnz
mov
imul
inc
clc
mov
inc
shrb
jne
jl
mov
cli
es
subl
adc
call
clc
push
dec
xorb
mov
mov
jle
int
ss
addr16
pop
scas
add
xchg
call
jge
sbb
out
sar
fisttps
popf
jl,pt
rclb
add
mov
mov
outsb
or
mov
repz
mov
adc
cmp
iret
dec
ljmp
push
shlb
push
pushf
cld
ret
push
mov
push
scas
cmc
popf
fs
jns
push
mov
insb
gs
in
jmp
shll
out
xchg
test
jg
cmpl
dec
in
and
fcomps
mov
stos
lret
movsb
add
lcall
lcall
movsl
mov
cmp
mov
pop
and
add
cmp
inc
pop
xlat
das
sbb
mov
notl
ss
xchg
sbb
sub
sub
test
inc
xor
xchg
xor
adc
icebp
jo
push
test
shlb
fidivl
test
repz
pop
cmc
shl
sahf
xor
pop
pop
es
fimull
cmp
decl
test
jno
dec
or
sub
ds
cmp
sub
lcall
push
shlb
dec
mov
dec
push
jle
jns
xchg
cli
outsb
add
mov
out
shrb
jecxz
jo
pushl
and
call
mov
jnp
adc
wrmsr
jne
xor
inc
out
cli
jmp
std
sbb
fidivl
ret
mov
jmp
in
fwait
and
pop
jle
fcomi
add
mov
lret
dec
lret
insb
sbb
lcall
gs
and
imul
cmp
push
lds
out
insb
leave
cmpsl
sahf
lock
jmp
shll
lcall
out
xchg
cmp
xor
cs
dec
mov
mov
fmuls
fbld
lret
aas
bound
ret
mov
xchg
sub
iret
jno
mov
incl
arpl
sahf
add
pop
mov
xchg
es
jp
pop
dec
int3
rcr
sub
inc
mov
adc
sbb
pop
stos
sti
stos
fsts
call
ficomps
call
sub
psubq
jne
fwait
stos
lods
pop
dec
dec
in
shr
dec
stos
cmpl
jmp
cltd
shl
mov
rcr
ret
push
pop
xor
pushf
push
ja
and
lcall
movsb
aas
or
fstl
cmp
rorl
sbb
gs
dec
mov
scas
insl
les
dec
cltd
inc
mov
xor
mov
xchg
loopw
mov
push
call
sti
xchg
pop
loop
push
lret
in
add
xchg
adc
mov
inc
push
sbb
ljmp
lea
rorl
xchg
mov
and
or
daa
ljmp
divb
mov
enter
stos
push
and
mov
xor
adc
adc
dec
int3
in
movsb
pusha
add
xor
adc
dec
loop
mov
insl
popa
std
loopne
ljmp
shrb
fwait
jecxz
cmp
pop
jo
jl
jo
inc
sub
and
sbb
hlt
call
shrd
rolb
aad
push
push
arpl
xor
out
clc
call
loopne
mov
out
loopne
inc
pop
push
dec
data16
or
scas
mov
pushl
std
out
xor
sub
add
test
ret
ret
movsb
pushl
mov
mov
and
jl
ljmp
adc
inc
sub
jg
incl
cwtl
xchg
std
inc
push
sbb
bound
out
jo
int
loop
and
add
cld
jbe
scas
cli
mov
or
lret
dec
xor
out
jns
cmpsw
mov
and
jbe
rcll
and
xchg
cli
xchg
repnz
mov
push
das
pop
sub
adc
pushl
jmp
dec
mov
loop
testb
aam
call
lret
add
jg
std
cmp
les
stos
pop
adc
call
cmp
jnp
mov
sbb
lret
out
cld
fwait
jp
call
fwait
add
fbstp
lcall
ret
scas
int
sub
pop
or
imul
cld
pop
std
cmpsl
dec
jle
xor
add
incb
xor
push
jbe
and
mov
xchg
clc
aaa
std
add
push
sti
je
clc
cmpsl
inc
imul
jb
out
cli
or
dec
outsl
outsb
enter
out
addb
xchg
outsb
std
data16
mov
mov
push
and
fsubrp
imulb
je
pop
push
mov
cmp
dec
mov
arpl
shll
push
dec
mov
insl
mov
cmpsb
decl
aas
inc
pop
and
bts
popa
or
mov
or
gs
test
push
test
test
or
push
fstp
pop
add
int
rclb
jne
loope
inc
mov
xchg
sub
adc
ja
sbb
mov
aam
lods
xchg
jp
jmp
mov
add
dec
dec
xor
push
bnd
or
push
pushf
lret
xchg
incl
add
cmc
out
sub
ficoms
cwtl
dec
push
inc
imulb
and
ja
sub
in
ret
jge
pop
xor
ds
jge
cs
push
clc
adc
decl
xlat
jb
int
shrl
or
sbb
das
or
mov
rcrl
aas
jmp
push
jae
rep
nop
push
aam
enter
cmc
mov
sub
xor
idiv
dec
or
sbb
push
dec
loope
mov
jo
mov
clc
sarl
or
decl
cmp
fstl
mov
inc
in
hlt
jp
xchg
xchg
jno
pop
ljmp
ljmp
mov
inc
lahf
je
cld
sti
out
dec
loopne
sbb
je
push
rorb
ljmp
and
call
rol
ret
nop
mov
pushl
pop
enter
sahf
and
popf
xor
cmpsl
popf
sbb
rcrb
pop
and
pop
xchg
jg
call
clc
fstl
dec
inc
xchg
gs
daa
pop
je
lock
scas
push
jns
mov
sbb
cwtl
jl
cmp
sub
lcall
push
jle
mov
fildl
lds
in
adc
push
call
shl
xlat
into
pop
pop
jl
or
inc
outsl
fidivl
jb
and
inc
dec
sbb
xchg
adc
incb
mov
and
das
cmp
cmp
sar
jg
pusha
mov
movsb
fists
dec
les
es
fmuls
dec
daa
shll
xchg
jg
dec
dec
jle
push
les
rcrl
mov
test
fildl
bound
jmp
mov
jmp
lret
jecxz
cmpb
and
insl
lock
ljmp
xchg
popf
iret
stc
mov
and
xchg
inc
dec
sbb
dec
fwait
test
scas
sbb
adc
call
dec
mov
cltd
inc
inc
sub
push
adc
ret
int3
movsb
addr16
pushf
lahf
movsl
jo
mov
ds
ljmp
pop
mov
mov
les
shlb
pusha
sub
sbb
ljmp
aaa
mov
mov
fwait
gs
mov
pop
insl
inc
lret
push
clc
xchg
jmp
call
fwait
aad
push
mov
push
shrb
nop
mov
inc
aad
xor
cli
jecxz
or
push
cmpsl
jno
aad
sub
mov
out
dec
mov
outsl
bound
nop
cmp
xchg
movsb
rcrl
sub
and
scas
jge
sub
fistpl
pop
sbb
leave
xchg
inc
sbb
jp
test
testb
ja
mov
in
jg
arpl
and
test
clc
inc
mov
and
jg
ret
add
outsb
sahf
mov
sub
gs
cmpsb
push
inc
lret
pop
push
test
call
inc
and
les
push
sub
xor
stos
jne
jne
jmp
and
mov
sub
notl
insb
xor
and
and
inc
adc
repz
sub
push
xor
lcall
inc
fbld
cmp
ljmp
xchg
xchg
adc
test
and
cmpsl
loop
out
es
lret
adc
fdivrp
jg
mov
adc
and
or
adc
push
out
popf
aam
scas
jg
lea
dec
mov
xlat
repnz
push
test
incl
das
lret
test
test
mov
mulb
xor
dec
sub
neg
movsl
sti
sbb
outsb
push
mov
sub
insb
stos
dec
shlb
sarb
loop
insb
aaa
pusha
xor
add
ljmp
out
xorl
fldl2e
pop
mov
push
out
pop
iret
in
andl
aam
cmp
incl
mov
mov
addr16
adc
add
adc
sahf
dec
in
fwait
xchg
nop
idivl
es
pusha
mov
cmc
popf
fistpl
int3
fwait
insl
push
loopne
scas
clc
mov
pop
mov
ret
push
add
out
test
pop
aam
xor
push
push
insb
adc
lcall
nop
adc
jo
lcall
cmp
pusha
pop
jmp
dec
cmp
push
aad
push
in
dec
lea
jg
inc
roll
jb
scas
pop
jns
in
xchg
aam
lds
repnz
js
int
call
sub
test
lret
cmp
xlat
inc
pop
lods
mov
xor
xchg
aam
decl
stc
ljmp
scas
into
sbb
xchg
or
ljmp
cmc
lcall
shlb
aam
and
fwait
adc
ret
out
dec
rsm
or
lret
lcall
test
sbb
jmp
arpl
adc
xor
mov
jmp
xor
add
pop
or
ja
lret
dec
sub
pop
call
mov
lcall
inc
push
test
dec
lods
js
dec
in
nop
jno
sbb
jmp
add
or
decl
mov
pop
jno
fucom
xor
cmpsb
jae
dec
fdivs
pushl
push
mov
push
push
xor
pop
call
ss
gs
add
enter
sub
push
xlat
fcoml
imul
mov
and
mov
insl
stos
cmp
mov
inc
sbb
scas
insb
adc
sub
leave
xor
nop
mov
lcall
repnz
fs
aad
adc
mov
mov
sub
mov
lcall
xchg
ss
cmp
movsb
inc
sub
incl
mov
lret
insl
into
jno
scas
movsb
movsl
imul
lea
imul
xchg
hlt
leave
enter
imul
and
sbb
sbb
pushl
pop
xchg
adc
adc
inc
in
mov
fiaddl
sub
push
pop
addr16
mov
push
movsb
sub
iret
lea
pusha
add
pop
ja
dec
popa
and
xchg
cltd
xchg
int
xchg
xor
std
inc
shll
lods
test
andb
cs
std
cwtl
aad
inc
sub
mov
cmp
scas
inc
cmp
movsb
pushf
push
cmp
pop
cmc
decl
fadd
xor
or
inc
into
out
lahf
pusha
sbb
clc
sbb
and
incl
mov
ret
jb
pop
iret
movsb
mov
jp
mov
pop
or
popa
repnz
push
push
repnz
jecxz
mov
cld
and
dec
inc
add
lcall
aaa
popl
movsl
rcll
sub
mov
aaa
dec
test
ret
js
mov
call
in
aad
cmp
fsubs
hlt
dec
push
dec
stc
jp
lods
icebp
inc
jae
pop
add
aad
dec
mov
lcall
push
sets
or
cmpl
enter
push
sti
add
lcall
xchg
je
mov
in
mov
hlt
mov
stos
push
pop
insb
out
pushl
fstps
ret
in
inc
inc
pop
xor
jo
push
or
sub
jmp
pop
sbb
sub
sub
out
sbb
pop
xor
in
inc
xor
jmp
pop
inc
repz
mov
and
jp
and
mov
xor
shl
in
loopne
jns
jns
push
lcall
push
jbe
xchg
inc
push
test
mov
xchg
and
pushf
pop
adc
fidivrl
jbe
loope
call
scas
jo
mov
xchg
pop
test
dec
mov
inc
test
jmp
mov
dec
push
inc
push
shlb
mov
fwait
cmpsl
outsl
jg
ljmp
push
add
lcall
and
vmovups
test
scas
xor
mov
in
mov
mov
sub
cli
adc
popf
fwait
mov
lret
pop
push
loopne
mov
rolb
jge
ljmp
lds
repz
sbb
mov
loop
repz
xchg
stc
ja
in
ss
out
imul
pushl
mov
mov
fnstcw
pushf
mov
push
cwtl
cmpl
jg
fldl
int3
sub
iret
call
add
int3
movsl
add
test
mov
jmp
clc
rclb
mov
jge
scas
and
pop
cmp
lahf
enter
mov
inc
ljmp
les
mov
mov
call
mov
cmp
rcll
sbb
popa
or
mov
xchg
sub
add
call
cld
fiaddl
inc
and
loop
jae
pop
imul
stos
sbb
adcl
mov
mov
out
ror
cmpl
sbb
adc
fwait
test
ljmp
push
into
stc
xchg
adc
cltd
leave
outsb
xchg
arpl
cmp
sub
sub
shlb
mov
jle
subl
adc
jmp
jmp
aaa
pop
inc
xor
pop
rorl
pop
test
push
pop
adc
xor
cmp
jmp
lcall
fcoml
cld
clc
push
lret
jns
or
adc
repnz
jmp
cmp
cmp
jmp
jle
adc
das
scas
or
mov
mov
mov
imul
cmpsb
clc
inc
sub
sahf
sbb
js
test
dec
test
test
inc
dec
test
mov
test
cmovge
es
and
enter
mov
shlb
fsub
mov
or
mov
ljmp
jp
cli
xor
adc
sbb
xor
adc
out
dec
ja
jns
push
lods
addl
fwait
mov
int3
jp
push
mov
sub
scas
in
enter
mov
test
mov
sbb
lea
push
fcomp
jp
inc
adc
jg
incl
or
ss
hlt
mov
pop
jecxz
popf
dec
pop
xchg
push
adc
lret
pushl
fdivrl
or
push
add
mov
lret
push
rcl
xchg
inc
test
mov
repnz
mov
shll
and
xchg
nop
xchg
pop
fdivrs
fisubs
push
xchg
cwtl
sub
ss
inc
das
mov
ja
ret
inc
lods
ss
mov
cmp
inc
add
mov
int3
decl
xchg
or
ja
imulb
jge
jge
mov
daa
add
into
sar
mov
lock
and
adc
ljmp
jg
mov
jb
xchg
fcomi
push
loop
divl
adc
loop
jne
inc
es
xchg
pushl
lcall
cmc
cmp
out
mov
arpl
cmp
outsb
icebp
clc
pushl
mov
out
int
pop
ret
lahf
hlt
aad
dec
dec
std
icebp
movsb
inc
clc
iret
xchg
jp
incl
sub
stos
lahf
mov
rcll
scas
or
dec
stc
xor
imull
sbb
mov
adc
jne
rorb
ljmp
cmpsb
leave
mov
lock
jb
or
jno
mov
sti
mov
sbb
jmp
mov
shr
adc
in
mov
mov
mov
and
pushl
jb
jnp
arpl
and
inc
sahf
mov
loope
pop
xchg
mov
inc
push
cmp
sub
adc
fcmovb
les
enter
pushl
aas
lret
loope
inc
test
adc
stos
jb
pop
cmp
adc
mov
jge
popf
push
xlat
jmp
notb
cmp
adc
dec
arpl
cltd
mov
dec
inc
in
mov
decl
or
push
lods
adc
rcrb
loope
and
les
push
dec
xchg
fwait
fwait
or
xor
lods
mov
loop
cmp
push
flds
push
insb
fistl
push
mov
out
bound
ss
mov
in
mov
sbb
mov
jne
add
xchg
out
ret
or
std
mov
cltd
mov
lea
cmp
adc
fstpt
pop
dec
sub
out
pop
jl
cmp
popa
cmp
fidivrl
mov
scas
cwtl
movsl
cltd
xlat
lcall
jl
andb
shlb
ljmp
dec
dec
sub
push
je
movsb
push
push
mov
mov
add
lcall
fmuls
test
pop
sub
pop
loope
test
xchg
pushl
push
ss
pop
mov
icebp
mov
mov
in
popf
aas
lcall
outsb
inc
ljmp
repz
add
sti
xlat
in
mov
lcall
mov
jns
adc
push
sbb
push
push
imul
jp
jb
hlt
pushl
mov
stos
rol
sub
lods
jle
dec
mov
ret
xchg
insl
or
aad
adc
fidivs
enter
sti
sub
jns
pop
out
in
iret
addr16
jmp
pop
inc
ljmp
out
mov
fists
adc
fcmovbe
pushf
pop
jge
ljmp
es
pop
cmpsb
in
lods
mov
fcoml
and
rorb
adc
lcall
out
mov
dec
xor
or
imul
adc
iret
idivl
mov
lcall
call
push
mov
cli
insb
xchg
daa
mov
arpl
cltd
clc
xor
xchg
jmp
outsb
and
es
cltd
xor
loop
roll
leave
fsts
cmp
popa
or
jmp
dec
popf
test
dec
sbb
push
mov
pusha
add
sbb
inc
xor
cltd
test
push
loop
out
std
xor
out
mov
jg
mov
sbb
imul
sub
aam
lods
mov
shr
adc
sbb
rcll
push
outsb
jg
pop
pop
call
std
sbb
aas
inc
loope
sahf
sbb
roll
jnp
cmp
inc
adc
test
jmp
js
mov
jmp
sarb
pop
dec
and
test
arpl
and
ljmp
sbb
loopne
sbb
outsl
lahf
jb
fsubrl
mov
dec
int3
or
ljmp
mov
in
add
fdivp
or
push
sbb
xchg
fisttpll
repz
call
lea
xchg
fisttpl
lds
cmpsb
addl
loope
xor
cld
mov
inc
incl
pop
outsb
pop
dec
inc
mov
mov
cmp
mov
mov
or
ljmp
stos
stc
xchg
test
jbe
ja
fwait
jb
push
adc
cmp
adc
call
sub
dec
add
push
nop
sti
rcll
mov
dec
or
xor
jmp
ret
sub
xor
into
rol
mov
mov
test
xor
idiv
ljmp
ja
in
fwait
cmp
mov
aam
fidivrl
xchg
dec
popf
sbb
enter
call
add
adc
lods
loop
repnz
adc
or
movsl
scas
fwait
data16
jg
call
leave
in
lret
sub
jbe
loope
pop
or
imul
mov
xchg
pushl
sarb
and
xlat
loop
pop
adc
ret
ljmp
loopne
cld
ljmp
sub
mov
mov
add
pop
xchg
addl
mov
inc
adc
call
dec
arpl
test
mov
rol
jnp
push
push
cltd
push
aaa
out
dec
in
mov
test
add
lods
in
dec
lods
sub
dec
mov
xchg
mov
sbb
cli
xor
shrb
xchg
jl
cmpsb
test
sub
filds
jl
xchg
sti
pop
xchg
adc
ja
jecxz
pop
mov
addr16
pop
lret
in
inc
decl
and
scas
sub
pop
inc
mov
popf
fsin
inc
jne
inc
adc
das
imul
fwait
test
adc
testl
repnz
cld
push
sub
add
lds
mov
dec
inc
insl
movsb
xorl
das
xlat
jg
cwtl
sarb
mov
fmuls
stc
xor
push
in
jg
idivl
ja
aam
addl
inc
jo
mov
scas
out
cmp
push
out
enter
ljmp
lds
mov
xor
stos
stc
cmpsl
popf
jae
xlat
pop
aad
cmp
fisubs
pop
or
cmp
jb
out
scas
pop
cmp
pushl
fisubrl
cmpsl
mov
orl
sti
inc
jmp
mov
xchg
xchg
rcrb
decl
mov
pushf
inc
pop
mov
aas
mov
push
daa
mov
daa
pop
std
ljmp
sub
push
pop
int
inc
or
pop
out
icebp
enter
xchg
mov
lcall
lock
jge
or
cmp
or
pop
rolb
pushl
es
push
mov
sub
adc
mov
mov
lods
and
cmp
out
mov
jmp
mov
aam
lret
dec
les
xchg
push
test
sub
cmpsl
lods
mov
pop
mov
sbb
cmp
mov
ror
int
pop
imul
cmpsl
sub
jb
sahf
ror
repz
call
cmp
mov
lret
repnz
insl
clc
je
aaa
mov
mov
cs
push
dec
call
cld
dec
sbb
and
pop
mov
mov
xchg
or
mov
clc
cld
push
cmp
fcompl
nop
out
mov
rcrb
rcrb
std
pop
ljmp
clc
add
popa
cmp
sbb
jb
or
cmp
push
pop
cmp
pushl
mov
in
jmp
jo
xchg
mov
rcrb
add
push
test
xchg
pop
nop
fdivrl
ljmp
adc
adc
xor
mov
std
push
pop
add
push
repz
cli
sbb
lcall
jne
hlt
not
gs
repz
int
imul
xchg
and
sarb
mov
lcall
stc
push
jno
repnz
sub
sbb
ret
cmp
incl
movsl
xor
xchg
loop
out
out
aad
xor
jl
pop
mov
xor
add
incl
in
aaa
jnp
xor
ret
gs
pop
push
xor
jg
sub
lods
dec
pop
movsb
rclb
dec
sbb
add
fists
push
or
fsubs
sbb
pop
mov
aam
int
sbb
xorl
xor
dec
pop
std
jp
push
fcomps
jno
in
or
dec
ja
test
test
jne
push
les
aaa
add
repnz
shrb
pop
scas
jns
add
mov
sarb
insl
or
mov
inc
popa
enter
lods
iret
add
mov
test
lds
xor
or
fisubrs
fimuls
push
and
mov
cmp
lods
mov
or
adc
jb
jae
decb
leave
cltd
adc
in
jg
incl
int
test
add
lret
insl
jne
cmp
inc
rcll
das
cmp
jg
dec
fstps
jne
inc
imul
sbbl
fidivrs
jno
push
into
repnz
lcall
and
mov
call
xor
test
je
aad
cmc
call
push
sub
xor
inc
imul
mov
outsb
aaa
pop
adc
stos
lcall
outsl
lea
popf
sahf
pushf
mov
mov
lds
fldcw
popf
test
and
call
call
stos
cli
mov
xchg
pop
mov
jbe
fsubl
ss
sar
mov
pop
or
call
lret
mov
mov
enter
mov
push
idiv
call
push
push
sbb
lahf
test
popf
fisttps
mov
cmp
sub
pop
jmp
jns
fsub
jo
sub
lret
shl
jns
sub
arpl
dec
fdivrp
mov
movsb
ja
push
sub
sub
lahf
push
sahf
or
fwait
ss
cmp
clc
xor
mov
xchg
test
cmp
aam
shll
pop
and
hlt
and
call
push
ds
cmp
dec
lods
jne
daa
push
xorl
icebp
scas
cmpl
ljmp
les
stos
int3
insb
enter
mov
rclb
lcall
mov
fnsave
mov
mov
movsl
int3
in
jmp
das
aad
mov
xor
les
stos
xor
out
fistps
lea
push
push
jne
decl
lock
jb
mov
mov
aas
pop
sbb
add
mov
adc
hlt
movl
jnp
mov
ficomps
mov
pushl
outsb
add
mov
add
mov
adc
leave
pop
lret
pop
or
ret
sub
cmc
popa
insb
je
decl
cs
or
cmp
adc
in
push
mulb
inc
in
adcl
ljmp
mov
es
fimull
fcmovne
mov
in
ffree
xchg
and
jl
sbb
jmp
cmp
loop
xchg
xchg
js
sub
add
jmp
pusha
push
pop
or
lea
ljmp
add
mov
imul
xorl
lcall
pop
jns
ret
pusha
push
jnp
test
je
call
mov
inc
fs
iret
lret
inc
xlat
add
outsl
ds
xchg
enter
decl
fdivs
mov
fidivrl
cmp
int
xchg
push
bound
shl
cli
jg
jmp
jbe
pop
adc
out
aam
int
test
insl
mov
jae
movsb
jmp
dec
arpl
xor
mov
lahf
add
and
cmovl
loop
fistpll
mov
and
inc
adc
incl
and
xorl
sub
add
adc
add
and
add
nop
inc
add
sub
inc
sbbb
addb
inc
adc
push
add
sub
inc
push
inc
adc
mov
add
nop
push
add
add
xorl
inc
mov
aam
jl
pop
daa
dec
adc
ss
jnp,pn
push
and
or
pop
repz
xchg
jns
mov
mov
fisubl
enter
in
pop
mov
enter
mov
pop
cmpb
call
cld
xor
insl
mov
lds
push
sti
lods
arpl
xchg
mov
mov
cld
ja
add
jbe
or
js
push
sub
jne
mov
je
ljmp
cmp
mov
shlb
xorb
push
push
lea
shlb
push
push
shll
jg
std
sub
mov
mov
loope
push
incl
addb
sub
mov
xor
and
mov
pop
les
pop
mov
jne
dec
mov
add
inc
mov
hlt
and
add
cli
inc
mov
mov
mov
mov
add
test
and
test
incl
aas
jnp
mov
add
sub
push
in
mov
add
inc
dec
jne
jo
pop
push
pop
adc
mov
addl
add
mov
and
incl
cmp
fadds
js
or
std
decl
loopne
push
fbld
pop
inc
mov
sub
cltd
dec
out
mov
test
or
mov
pop
lahf
lret
pop
sub
jecxz
adc
sub
mov
test
inc
decl
std
sahf
lret
jge
xchg
mov
mov
add
pop
aad
jne
jbe
inc
decl
sub
gs
inc
cltd
andl
out
pop
lods
test
js
xchg
addb
jmp
jg
cmp
jmp
lret
ret
push
dec
push
into
xor
push
sahf
stc
loope
ja
arpl
pop
inc
cmp
lcall
xchg
jno
mov
jg
xchg
lret
loop
js
add
xchg
scas
repz
pop
sbb
jmp
or
stos
fstpt
dec
xlat
les
dec
pushf
sahf
pop
decl
dec
or
inc
mov
hlt
jl
pop
rcr
iret
rcr
iret
dec
decl
scas
xor
or
mov
stc
push
in
cltd
roll
fsubrl
dec
xchg
xchg
xlat
movsl
movl
lcall
cmp
stos
pop
js
mov
faddp
xor
lret
cmp
jmp
adc
mov
ret
icebp
dec
adc
sub
mov
sbb
pop
hlt
jo
sbb
sub
jmp
int3
fucomi
push
push
pop
in
daa
lock
addr16
lahf
es
rcll
test
xchg
imul
pop
icebp
incl
jno
pop
xchg
push
in
or
and
or
pop
mov
cld
cmp
decl
test
cmc
xchg
sub
test
into
xor
nop
add
mov
sub
movsl
push
adc
sub
mov
test
push
add
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
insl
adc
incl
or
cwtl
insl
hlt
push
xor
in
and
into
rclb
popf
or
mov
inc
sub
aad
cwtl
fidivs
aam
decl
pushf
dec
pop
scas
les
mov
test
pop
arpl
shrb
dec
lret
mov
inc
xchg
ror
add
pusha
outsb
hlt
add
sbb
jle
push
or
or
mov
out
stos
rcll
push
test
dec
sub
lock
data16
es
jnp
int
decl
inc
lahf
mov
mov
flds
inc
sbb
adc
fcmove
mov
mov
cmp
incl
add
xor
xchg
mov
jb
arpl
ss
stos
lret
gs
loopne
push
inc
mov
and
push
fcmovbe
push
clc
dec
lods
mov
nop
inc
xorb
cmp
shr
repnz
nop
mov
call
mov
imul
mov
test
addl
cmc
or
in
jmp
adc
enter
adc
jl
lret
jns
ret
xor
jle
mov
rcll
xor
movsl
scas
add
mov
and
cmc
out
or
mov
adc
cmp
xchg
out
xor
xor
or
ficoms
mov
lds
cmp
inc
decl
push
inc
into
jmp
cwtl
jno
xchg
jns
mov
lahf
dec
jns
mov
loope
jmp
xchg
je
mov
push
mov
jno
mov
fprem
push
call
shld
lret
ljmp
push
and
sub
je
cld
std
scas
cmp
pushl
and
out
in
cwtl
arpl
xor
jmp
mov
xchg
lods
je
jmp
arpl
decl
and
jp
jecxz
in
jnp
pop
mov
xchg
inc
xchg
or
js
out
pushl
es
addr16
cmp
mov
aaa
jg
movsl
mov
pop
dec
xor
decl
adc
inc
leave
mov
dec
pop
dec
push
imul
push
test
mov
out
xchg
fidivs
divb
test
mov
ds
pushl
mov
push
into
xchg
mov
mull
pop
cmp
cmc
cld
lcall
fcompl
mov
shlb
or
cs
push
orl
push
inc
push
pop
decl
adc
in
push
hlt
or
mov
cld
jmp
jge
mov
pop
jno
scas
scas
xlat
arpl
jp
sub
push
lcall
pop
jns
sub
jp
imulb
pop
insl
mov
popf
jo
pop
sbb
out
daa
sbb
pushf
stos
imul
cli
jmp
ljmp
mov
push
les
fldenv
hlt
cmpb
lock
in
cmp
pushf
ss
fdivl
pop
pop
ds
mov
cltd
arpl
ss
cmc
int3
sub
jg
call
sarl
enter
nop
push
dec
mov
mov
sub
lret
ss
hlt
jg
dec
pop
xchg
fmul
sub
xchg
jb
mov
xor
repz
clc
xabort
in
sub
fsubrl
mov
fs
aaa
mov
popf
ja
mov
mov
clc
ficompl
repz
lcall
mov
int
out
sbb
push
arpl
xchg
icebp
scas
pushl
nop
fsubl
mov
iret
xor
out
cli
or
mov
push
fisubs
fistpl
jbe
das
clc
xchg
sub
fstps
push
scas
jmp
pop
repz
imul
in
aas
mov
out
incl
ss
test
or
into
mov
dec
repz
cli
int3
lret
repz
cld
out
enter
lret
rorl
ljmp
stos
repz
sub
into
mov
sbb
sahf
loop
jo
js
pop
rcrl
call
cmp
out
xor
repz
sub
cmc
jbe
std
cmp
pop
dec
test
xor
dec
fs
pop
mov
mov
sbb
push
mov
dec
icebp
push
jg
orb
vcvtdq2pd
sahf
repz
fprem1
cli
mov
cbtw
lds
or
int
sub
clc
into
cmp
xor
xlat
push
iret
fstpt
into
mov
fstl
hlt
mov
lock
fdivrl
hlt
sbb
lret
addr16
cmp
sti
push
adc
mov
pop
sub
inc
pop
cld
repz
outsl
sahf
mul
adc
clc
lds
movl
xchg
idiv
sbbb
pop
mov
pop
mov
cld
mov
in
xor
leave
out
aam
aam
rorb
jnp
fildl
imul
imul
jbe
mov
andl
out
jmp
aaa
lahf
idivb
int
es
out
lret
push
jg
lret
add
fimuls
fwait
mov
dec
jle
xchg
imul
sbb
xchg
push
fsubr
push
xchg
decb
mov
push
jmp
push
setns
in
stos
pop
arpl
scas
jnp
pushl
imul
adc
fisubs
lock
and
push
pop
fcomip
fwait
adc
push
es
fs
fnstsw
out
cmpsb
fisubrs
ficompl
dec
mov
aam
dec
fildl
jle
clc
cltd
outsb
cmpsb
mov
jg
outsb
sti
ds
fsubs
movsl
imull
jle
mov
mov
std
xlat
add
ret
ds
push
inc
ljmp
ds
aad
adc
cltd
cmp
push
mov
pushl
xlat
std
and
pop
clc
xlat
leave
cwtl
loopne
mov
lds
std
or
push
jbe
lods
push
push
xchg
sbb
aaa
push
rcll
fdivrl
icebp
aad
incl
pop
clc
aad
xchg
scas
mov
xchg
and
lods
mov
out
push
call
sti
stos
or
adc
stos
lods
pop
lods
add
and
pop
jecxz
in
lcall
pop
ficompl
xchg
rcll
hlt
push
aad
adc
or
pop
outsl
mov
adc
stos
jg
dec
mov
in
pop
rol
adc
jle
std
mov
pop
out
cmpsb
push
movsb
pop
enter
stos
push
fs
scas
dec
push
das
clc
fmull
shrb
xchg
push
pop
pop
das
lret
stos
jle
sbb
loop
std
decl
out
lods
xlat
inc
xchg
and
push
pop
and
out
jno
push
pop
lcall
out
ja
and
jne
push
out
and
gs
xlat
mov
xchg
rorb
and
scas
mov
adc
jmp
fcmovnbe
or
fldt
outsb
scas
lods
jg
out
into
decl
scas
js
push
pop
addr16
adc
dec
out
imul
sub
fcomip
mov
outsb
cwtl
scas
pop
jmp
pop
and
je
pop
push
fldt
es
ficoml
js
sbb
inc
pop
jecxz
in
sbb
int
in
clc
jmp
aad
pop
daa
pop
pop
fildll
pop
fildll
aaa
push
sub
cmp
sahf
pop
fstps
jbe
adc
push
pop
ds
adcb
aam
scas
or
sahf
cld
mov
std
fstpt
ficoms
xlat
sbb
cs
lcall
mov
pop
stc
xor
ret
pop
icebp
xchg
mov
sub
subl
pop
sar
fists
sub
sbb
sub
dec
pop
lret
decb
aas
iret
sarl
loop
fwait
inc
mov
inc
das
fisubs
gs
iret
xor
fstpt
orb
insl
add
ja
cmpsl
jne
sub
lods
cmp
dec
in
sub
dec
dec
add
sti
shl
jno
aad
push
jmp
jmp
lcall
outsb
lock
push
insb
push
or
mov
loop
push
testb
adc
jg
inc
lods
cltd
out
scas
mov
lcall
pop
insl
aad
pop
and
pushf
mov
mov
pop
mov
daa
popa
sbb
cmp
call
out
dec
sbb
mov
pop
int
add
into
mov
or
jmp
and
mov
mov
ljmp
into
pop
call
test
cmpsb
jb
popa
out
clc
sbb
and
out
sbb
mov
mov
arpl
je
imul
inc
jb
adc
gs
imul
popa
je
jb
jae
popa
pushl
inc
add
fs
jbe
dec
push
ja
sbb
dec
push
push
push
incl
dec
dec
jo
addr16
dec
push
pop
imul
popa
inc
push
inc
inc
dec
je
pop
jno
dec
xor
dec
jg
jp
jno
jo
inc
pop
addr16
insl
jb
andb
dec
push
push
jae
push
push
push
lcall
decl
pop
inc
popa
outsl
jno
addr16
imul
pop
xor
fs
jb
push
pop
push
xor
je
xor
ss
insb
pop
dec
pusha
dec
xor
pop
jns
ljmp
je
dec
push
pop
inc
dec
bound
push
xor
arpl
push
js
popa
dec
pop
cmp
jbe
jp
outsb
decl
push
dec
inc
jne
jp
pop
push
push
push
js
jb
insb
dec
dec
dec
inc
jbe
je
push
ss
ljmp
js
jbe
push
addr16
insl
push
gs
outsl
inc
arpl
dec
push
decl
fs
jb
xor
jno
jno
xor
jp
arpl
inc
insb
ja
imul
rorb
dec
call
dec
push
data16
push
inc
push
inc
enter
pusha
outsl
mov
jns
dec
push
arpl
dec
ja
push
dec
pop
xchg
insl
sbb
outsb
ja
inc
insl
xor
and
jb
popa
dec
xor
idiv
ljmp
jo
inc
inc
inc
addr16
outsb
push
inc
xor
push
dec
push
dec
xor
inc
xor
and
xor
inc
aam
push
or
dec
js
dec
xor
add
mov
jbe
dec
xor
ss
xor
aaa
xor
dec
dec
dec
inc
popa
aaa
dec
dec
xor
jbe
rol
mov
aaa
data16
inc
arpl
dec
jno
xor
dec
pop
adc
inc
lahf
mov
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
push
add
aas
add
push
add
aaa
call
mov
lcall
and
aas
push
test
inc
push
add
out
in
out
xor
add
lods
orl
push
adc
ljmp
add
testb
cmpsb
addl
out
pushl
add
add
adcb
jle
add
sbb
push
sbb
add
sbb
add
and
lret
test
rorl
xchg
push
pop
mov
xorb
xchg
sbbl
adcb
sarl
sub
in
outsl
mov
xchg
xchg
push
ret
add
sarl
cmp
or
add
incl
es
mov
les
shrb
add
or
jle
movsb
sbb
inc
inc
adc
fs
out
dec
imul
add
pop
sbb
adc
pusha
mov
sbb
lcall
jbe
cs
xor
jns
mov
pushf
push
xchg
pop
fstpt
sub
add
shlb
divb
push
push
test
sub
jl
push
insl
fcmovu
mov
add
out
pop
inc
jecxz
inc
cmp
bnd
jnp
push
mov
bound
mov
enter
loopne
cs
mov
fcmovbe
fisubrl
stos
cli
push
es
xor
mov
xlat
add
jmp
cs
mov
mov
andb
pop
shrl
push
adc
push
dec
fsubrs
ja
mov
xchg
bound
adc
mov
sub
and
adcb
ja
js
loopne
sbb
inc
int3
fidivrs
andl
pop
and
jns
sbb
ljmp
popa
repz
movsb
test
pusha
xchg
mov
pop
push
add
js
lock
in
sbb
or
mov
or
stos
xchg
or
in
mov
cld
xchg
sbb
stos
push
push
push
dec
jns
imul
mov
stc
pop
sbb
loopne
push
sub
jle
mov
stos
mov
sub
push
or
push
cs
sub
cmpsl
imul
js
xchg
mov
jns
call
adc
cmp
sub
aas
cld
mov
inc
mov
jne
add
cmpsl
inc
rcrb
or
add
push
inc
sbb
jo
stos
jecxz
xor
cmp
loopne
push
pushf
jle
sti
lock
sub
mov
cli
xor
testl
add
push
and
pop
pop
pop
adc
popa
or
push
in
movq
imul
rolb
push
push
xor
cmpxchg
push
arpl
insb
sbb
xchg
clc
negb
loopne
je
mov
push
mov
add
inc
push
in
lock
push
push
rorb
pop
roll
mov
bound
push
aaa
adc
add
xor
xor
adc
dec
push
and
cmp
push
mov
mov
sbb
cmpsb
xor
cmp
push
adc
xor
out
mov
adc
out
ds
loopne
sbb
inc
jbe
mov
popf
fcomps
loopne
jl
push
jo
mov
xor
cmpb
popw
fmulp
call
sbb
mov
or
pop
dec
mov
shll
ja
into
mov
loopne
jnp
mov
and
cmp
inc
stos
add
push
scas
enter
pop
iret
push
lock
stos
add
add
inc
fwait
subl
inc
in
cmpsb
in
mov
add
mov
push
push
push
pusha
andl
aad
mov
add
lock
rcrb
jp
xchg
call
xor
jo
lock
mov
push
mov
push
pop
mov
testl
jo
xor
pop
push
jl
mov
push
icebp
push
jno
pushf
xor
inc
cmovbe
pop
dec
and
xor
outsl
push
xchg
xor
jb
sub
mov
inc
add
iret
rcrb
add
test
jae
cli
pop
hlt
incl
aam
loope
mov
and
push
add
add
jle
mov
push
idiv
das
lret
push
add
cmp
pop
push
lds
call
into
imul
dec
pop
cmp
mov
push
cli
jg
mov
jp
xchg
cmpsl
add
adc
insb
outsl
adc
decl
das
push
aam
inc
or
ljmp
dec
add
out
clc
sub
mov
mov
filds
cmpsb
jb
fistpl
pop
ljmp
mov
popl
xchg
xchg
nop
add
fildl
movsl
xchg
and
movb
fstl
mov
jbe
movsb
incb
mov
jmp
into
icebp
or
add
inc
mul
push
pusha
fs
fildl
jecxz
mov
arpl
pop
data16
pop
addl
fidivs
pushl
sub
add
into
data16
mov
xchg
rcr
jg
loope
xchg
xchg
xchg
add
adc
add
jo
mov
fdivr
push
mov
add
fstl
xor
mov
sub
cmp
add
mov
add
xorl
mov
pop
pusha
xchg
add
jnp
or
add
movsl
push
scas
add
adc
lock
add
add
movsl
movsb
mov
insl
inc
subb
repz
add
sub
and
ss
sub
xor
xor
repz
xor
or
sarl
mov
cs
xor
sbb
pop
lods
mov
push
out
pop
cmpsb
scas
test
cs
test
xor
push
cmp
mov
daa
rclb
adc
mov
int3
mov
push
adc
xchg
jno
add
out
add
in
cmc
push
out
xchg
loop
pop
loop
xor
add
push
inc
add
mov
loopne,pt
push
test
push
and
cld
sbb
outsb
mov
sbb
rol
rol
ljmp
ror
int
lret
enter
xlat
aam
rcl
rcl
fiadds
fists
test
mov
mov
mov
xchg
nop
adc
call
mov
add
add
outsl
add
add
add
or
idiv
sbb
sbb
push
add
add
in
loop
fsub
out
movsb
mov
add
in
ljmp
lods
add
add
or
fwait
filds
push
add
push
in
and
add
mov
out
mov
pop
push
lret
jno
or
pop
cmp
jg
clc
push
lret
stos
sar
jo
test
mov
cli
mov
das
sbb
clc
movsb
and
shrb
xor
or
cld
inc
decl
pop
dec
subl
imul
pusha
dec
lcall
aaa
andb
push
pop
push
sahf
mov
lods
rorb
add
xchg
add
clc
in
mov
test
jbe
cli
popf
cwtl
sbb
dec
stos
insl
push
das
push
std
mov
stos
mov
outsl
clc
push
or
ret
sub
in
test
mov
popf
inc
xlat
jecxz
fcomip
stc
in
cli
out
sbb
fndisi(8087
dec
lret
decl
insl
in
sahf
fsubrp
dec
add
push
add
jg
mov
jb
stos
mul
mov
aam
push
sti
xlat
add
mov
outsl
jg
cli
or
jns
push
jo
pop
aas
bound
adc
and
ljmp
lds
or
sbb
mov
cmpsl
cld
aad
jno
outsl
jp
cmp
or
xor
fdivr
divl
xchg
pop
xor
ja
fistps
mov
add
in
dec
ret
addb
addb
cmp
out
lods
mov
add
adc
adc
adc
cmp
pop
mov
cmpsb
add
add
cli
outsl
insl
imul
stos
loopne
mov
data16
rolb
inc
mov
adc
les
scas
or
lret
rolb
sub
mov
adc
add
ficoml
jo
jmp
add
stos
inc
insb
in
lods
enter
or
add
sbb
or
mov
fs
push
push
mov
or
sub
push
mov
or
je
cmpsb
push
roll
cmc
push
inc
and
or
push
add
fcomi
fdivrp
sbb
adc
enter
mov
add
rclb
jp
imul
dec
out
sub
xchg
mov
push
push
andb
rorb
push
adc
add
lcall
ss
hlt
stos
mov
sub
dec
adcb
push
jle
leave
shrb
pop
pushf
push
dec
mov
push
mov
out
mov
lods
sub
in
hlt
and
push
mov
push
jo
ljmp
sbb
out
pop
jbe
pusha
jmp
data16
sub
rclb
test
mov
js
adc
repz
push
loopne
in
push
fwait
out
outsl
lods
add
inc
add
cli
jg
cmp
inc
fisubrl
push
mov
lea
push
or
rclb
sbb
shrb
movd
ret
add
mov
shrb
jbe
mov
sti
mov
push
cmp
jb
loopne
ss
filds
aad
jp
inc
pop
aad
push
cmc
loopne
jb
sbb
or
pop
mov
jmp
mov
or
push
jge
or
jns
scas
mov
insb
sub
or
push
pop
mul
cmp
fisubl
push
imul
pop
mov
push
inc
or
cmp
xor
add
inc
loopne
mov
jmp
lret
loopne
mov
clc
add
push
mov
and
sbb
push
lret
imul
decb
aad
fbstp
adc
push
cmp
mov
mov
and
cld
mov
fdivl
stc
add
add
rorb
adc
add
jbe
cli
add
sbb
sbb
jg
int
lods
mov
push
cs
loopne
or
xor
mov
xchg
add
or
xlat
push
lock
adc
or
addb
or
add
push
daa
pop
fcmovb
push
loopne
ret
insb
shr
loope
aam
repnz
ja
mov
shrd
jp
lods
xchg
pop
sub
jl
jne
mov
test
dec
sbb
loopne
inc
lcall
into
loopne
outsb
inc
loopne
bound
loopne
xchg
lcall
pop
jnp
cld
sbb
loopne
mov
aas
push
cmpsb
sbb
add
fwait
xor
repnz
pop
pop
cld
stos
and
push
or
pop
push
sub
pusha
xchg
outsb
pop
dec
adc
insb
push
shll
imul
dec
std
std
mov
sbb
loopne
push
loopne
notb
add
sbb
cmpb
mov
mov
loopne
mov
enter
add
add
test
cli
cmp
push
jecxz
or
or
sbb
push
scas
add
adc
pop
rcrl
nop
fs
cmp
push
cmp
cld
jns
inc
xor
popa
loopne
cs
cmp
loopne
outsb
mov
es
cmpsb
sub
into
mov
xor
ret
or
or
in
stc
ficoml
adc
or
shll
int
sub
ja
sub
outsb
xchg
xchg
add
mov
pop
sbb
out
loopne
jle
push
xchg
sub
cli
loope
add
xchg
and
ds
aam
and
pop
lcall
in
add
push
out
lret
or
sub
icebp
adc
addb
shlb
subb
jp,pt
xchg
jo
mov
out
fldt
pop
lock
sahf
xor
stos
mov
mov
jo
scas
pop
lock
jo
or
cmpsb
clc
add
mov
divb
lock
or
mov
mov
lock
in
mov
stos
and
jo
pop
or
lock
lcallw
stos
bound
adc
push
js
nop
or
jo
fdivs
stos
cli
inc
lret
shll
mov
in
int
bound
lret
mov
jo
cmp
mulb
sbb
adc
inc
jno
aam
add
sub
adc
jmp
mov
xchg
test
lock
jecxz
xchg
inc
jnp
scas
sub
sbb
push
push
add
push
and
mov
repnz
imull
push
cmp
cli
inc
jmp
int3
mov
adc
jno
adc
dec
push
sbb
xchg
push
push
sub
sbb
sbb
add
pop
lcall
xchg
sbb
addb
add
aaa
in
lock
insb
push
aas
rclb
lock
or
push
mov
out
test
fcmovbe
jae
adc
popf
jno
shlb
fisubs
fsts
jo
mov
in
arpl
adc
out
and
jle
mov
addl
add
lcall
adc
mov
push
into
fstpl
cmpsb
and
and
push
adc
inc
stc
fwait
mov
inc
out
adc
inc
out
dec
out
out
out
mov
out
out
out
dec
out
out
out
push
out
out
out
divb
movsb
out
out
and
mov
pop
out
out
out
out
pop
out
out
out
adc
cmp
pop
out
pop
inc
int
cld
out
out
out
and
out
and
out
in
cs
adc
out
out
sub
call
aaa
outsb
or
clc
out
out
out
xor
mov
out
adc
out
repz
jg
in
xchg
adc
out
out
out
add
out
jg
aaa
jg
out
out
out
or
jmp
or
std
or
jmp
aaa
jg
aaa
pop
out
out
out
adc
mov
push
out
pop
out
jo
jge
out
out
sbb
test
sbb
push
lock
in
ret
push
sarl
mov
in
enter
in
out
in
pushf
pusha
ror
in
in
and
in
outsb
in
mov
loopne
loopne
in
adc
cli
push
or
adc
in
in
loope
mov
in
shl
enter
out
in
in
fdivl
ficoms
inc
in
mov
into
scas
inc
in
loope
repz
hlt
in
in
push
in
out
loope
mov
iret
in
js
cmc
in
outsb
fildl
lods
outsb
in
adc
in
and
enter
fmull
sub
lock
in
inc
in
in
or
outsb
xor
xchg
adc
in
adc
mov
outsb
outsl
push
add
leave
adc
in
adc
int
aaa
fwait
in
in
adc
pushl
sbb
cmp
lea
cwtl
loop
movb
add
inc
loop
fwait
mov
loop
inc
loop
inc
loop
inc
loop
inc
loop
mov
loop
dec
loop
dec
loop
dec
loop
dec
loop
dec
loop
fstpt
dec
loop
adc
sbb
push
loop
mov
loop
push
loop
push
loop
push
loop
push
loop
push
loop
mov
loop
pop
loop
pop
loop
pop
loop
pop
loop
fwait
mov
loop
pop
loop
pop
loop
es
daa
loop
fwait
mov
and
dec
and
and
cs
and
sub
loop
fwait
mov
loop
loop,pn
das
loop
sub
sub
sub
fwait
mov
sub
ds
cmp
ss
aaa
loop
mov
loop
xor
add
xor
out
out
xor
push
xor
loop
aas
loop
cmp
or
cmp
out
cmp
or
cmp
adc
cmp
jp
ljmp
jecxz
loopne
jecxz
loopne
jecxz
adc
loopne
jecxz
out
and
ret
jecxz
and
shl
jecxz
jecxz,pn
loopne
jecxz
outsl
out
sub
int3
loopne
jecxz
sub
lret
jecxz
sub
enter
out
jecxz
ss
loopne
jecxz
xor
aam
xor
outsl
xor
shl
xor
shll
jecxz
loopne
jecxz
jecxz,pt
loopne
jecxz
outsl
out
cmp
fsub
push
jecxz
pop
jecxz
loopne
jecxz
add
outsl
out
jecxz
add
mov
add
mov
out
decb
jecxz
loopne
jecxz
or
jecxz
or
stos
loopne
jecxz
outsb
out
or
test
pop
jecxz
loopne
jecxz
inc
loopne
push
loopne
add
sub
push
xor
mov
loopne
adc
mov
loopne
sub
out
loopne
jle
mov
loop
jo
out
loopne
dec
loopne
loop
loopne
nop
loopne
loop
push
mov
scas
loopne
push
loopne
loop
loopne
mov
cwtl
loop
loopne
adc
jecxz
push
loopne
push
loopne
loop
loopne
outsl
out
pop
loopne
loop
loopne
pop
loopne
loop
loopne
pop
loopne
loop
adc
out
loopne
pop
loopne
loop
loopne
loop
loop
fisttpl
xchg
loopne
repnz
adc
loopne
mov
mov
cld
loopne
adc
loopne
add
mov
sbb
loopne
push
loopne
loopne
int
ss
add
fistl
sub
fsub
ss
aaa
insl
loopne
and
cmpsb
adc
loopne
xor
movsl
loop
cld
insl
int
shlb
loopne
inc
loopne
adc
loopne
loop
loopne
push
int
cmp
loopne
cmp
scas
push
int
push
push
jb
loopne
shl
shlb
sub
jne
adc
loopne
jp
dec
loop
cmc
jbe
push
je
loopne
test
incb
jbe
adc
std
adc
loopne
loop
loopne
or
ss
loopne
loop
loopne
pop
loopne
mov
je
loopne
mov
loop
loopne
adc
vmovss
adc
adc
hlt
loop
loopne
mov
out
pop
loopne
loop
loopne
sbb
lret
adc
stos
outsb
sbb
iret
loop
loopne
sbb
int3
add
pusha
add
inc
loope
in
loope
jg
mov
adc
insb
in
loope
inc
loope
in
loope
dec
loope
pushl
imul
dec
loope
add
push
loope
push
xlat
fndisi(8087
dec
and
aas
push
loope
in
loope
in
loope
in
loope
in
loope
jg
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
jmp
and
jae
and
jo
and
jno
loope,pn
in
loope
in
loope
in
loope
in
loope
add
jmp
sub
jnp
sub
js
sub
jns
ss
in
loope
in
loope
pop
pusha
add
loope
in
loope
xor
lret
inc
pop
loopne
jmp
loope,pt
in
loope
in
loope
in
loope
in
loope
add
push
jg
push
loopne
add
fsubp
loope
add
push
in
loope
push
pusha
add
in
loope
in
loope
or
add
add
lock
pop
in
loope
ljmp
rclb
notb
loope
in
loope
in
loope
in
loope
in
loope
in
call
loope
in
loope
in
loope
in
loope
in
out
push
lds
ret
inc
fdivrp
inc
inc
out
mov
out
mov
inc
out
inc
lds
inc
lds
inc
lds
lds
jge
inc
dec
out
jnp
dec
out
js
dec
out
inc
lds
dec
lds
dec
lds
add
out
xchg
pop
out
cmp
inc
pop
out
int
es
rol
daa
out
sti
les
clc
les
out
loope
cs
fcmovb
das
out
movsl
les
out
xor
inc
sub
xor
sub
xchg
xor
cld
les
les
out
iret
les
out
int3
les
out
shrl
std
les
out
into
les
test
out
je
sbb
out
ja
sbb
sbb
jne
inc
cmp
and
pop
out
je
add
out
ret
ljmp
out
in
ret
outsl
mov
in
ret
inc
or
ss
or
bnd
or
fcmovb
or
pop
in
decl
inc
push
out
pop
lds
out
mov
adc
out
cli
ret
adc
jg
call
out
rol
adc
lret
out
fiadds
in
inc
in
in
inc
in
loop
inc
in
jecxz
lcall
inc
inc
in
loope
inc
in
and
out
dec
in
in
dec
in
repnz
dec
in
cmc
dec
in
ljmp
dec
in
rol
in
ret
push
in
mov
in
mov
push
in
mov
push
in
mov
push
outsl
in
mov
push
in
mov
push
in
mov
pop
in
hlt
pop
in
iret
lds
lcall
lds
in
mov
and
mov
sub
fildll
ret
sub
push
ret
sub
sub
ret
ss
inc
aaa
in
inc
xor
cli
pushl
sti
xor
clc
xor
aam
xor
aad
aas
push
sarl
es
cmp
fildll
push
ret
cmp
sub
cmp
dec
ret
push
in
out
in
dec
in
dec
ret
add
call
add
pop
ret
add
push
out
movb
dec
ret
push
in
push
ret
paddsb
ljmp
ret
or
rorb
rorb
add
in
add
ljmp
clc
insl
rcll
adc
mov
in
icebp
rcll
mov
adc
mov
inc
adc
movsb
rcrb
cmpsb
rcrb
call
lds
mov
push
sti
sbb
cld
sbb
inc
in
fadds
dec
in
jle
loop
lds
mov
in
dec
add
mov
in
das
clc
fbld
in
mov
les
in
jae
sub
inc
les
in
xor
shll
xor
out
ds
gs
in
cmp
inc
les
in
inc
lcall
push
ljmp
add
xor
add
ljmp
pushl
jecxz
ljmp
push
ljmp
or
cmp
or
ljmp
cmp
or
cmp
or
cmp
push
ljmp
adc
add
adc
ljmp
incl
jecxz
ljmp
push
ljmp
sbb
or
inc
jmp
call
inc
jmp
jmp
call
inc
jmp
call
inc
jmp
call
dec
jmp
call
lcall
dec
jmp
call
dec
jmp
call
jmp
call
push
jmp
call
push
jmp
call
push
jmp
call
push
jmp
call
pop
jmp
ljmp
call
std
call
pop
jmp
call
pop
jmp
call
es
call
and
call
and
and
sar
call
cs
call
sub
int3
call
sub
lret
jmp
call
call
ss
call
xor
aam
xor
jmp
call
xor
sar
call
ds
call
cmp
fsubr
cmp
fsubr
cmp
fld1
push
jmp
call
call
add
jmp
call
out
mov
call
por
call
or
jmp
call
push
jmp
call
adc
mov
adc
call
adc
mov
adc
mov
adc
mov
push
jmp
call
inc
call
aam
call
inc
call
rcl
inc
call
rcl
inc
call
dec
call
fdivr
call
dec
call
fcmovbe
dec
call
fcom
dec
call
cmpsb
xlat
push
call
movsb
call
push
call
mov
xlat
push
call
mov
xlat
pop
call
lods
call
pop
call
stos
xlat
pop
call
test
pop
call
mov
daa
call
mov
call
and
call
mov
and
mov
and
mov
cs
mov
call
sub
call
mov
xlat
sub
mov
xlat
aaa
call
test
insb
jbe
xlat
xor
add
xor
xor
xor
idivl
idivl
cmp
insb
idivl
idivl
idivl
testl
testl
testl
fldcw
testl
insb
ss
int
or
or
testl
testl
call
sahf
xlat
adc
cltd
xlat
adc
call
pusha
xlat
popa
lds
xlat
adc
push
pop
adc
sbb
push
inc
mov
negl
cs
cmc
dec
mov
mov
cmp
jmp
pop
cmc
mov
pop
cmc
sahf
out
movb
inc
inc
iret
repz
inc
inc
inc
inc
dec
dec
or
cmp
dec
dec
out
sbb
cmp
lods
nop
add
push
out
in
ljmp
cmc
cmc
std
std
sahf
cmpsl
stc
cmp
enter
mov
sahf
out
ret
mov
mov
out
sahf
out
into
mov
mov
out
jns
les
xchg
jnp
out
lret
test
lret
mov
sahf
out
push
leave
in
dec
fidivs
cmp
imul
ja
xchg
repz
jnp
push
xchg
jne
jb
repz
xchg
jae
jo
jno
iret
repz
jle
jg
cmp
iret
repz
jl
jge
fmulp
repz
push
lret
jns
jns
out
dec
mov
sahf
out
sahf
dec
mov
dec
mov
mov
push
xchg
jns
out
xchg
test
adcb
cmpb
jns
sbbl
out
pop
out
pop
es
in
and
xchg
and
iret
and
cmp
repz
lahf
cs
das
repz
repz
sub
sub
iret
sub
cmp
repz
addr16
repz
repz
xor
iret
xor
popa
pop
inc
cmp
repz
inc
add
cmpsl
stc
inc
out
inc
or
push
js
out
mov
lret
push
mov
fsts
add
mov
popf
fucomip
pop
incl
xchg
and
mov
shrb
cmp
jmp
leave
aam
roll
out
decl
jns
incb
scas
sbb
add
fs
aad
pushf
xchg
out
jle
push
imul
pop
sbb
push
test
add
xchg
xchg
xor
pop
sub
pushl
jmp
aas
cmpsl
adc
mov
dec
mov
mov
lcall
pushl
gs
xchg
push
jo
daa
repz
xchg
fstp
mov
aaa
ret
xchg
jl
call
push
pop
sti
fisubrl
ljmp
push
or
out
repz
and
or
xchg
into
inc
cmp
icebp
jp
arpl
jo
in
das
fmulp
int
push
in
sub
mov
ljmp
mov
sub
cltd
mov
repnz
cwtl
jmp
cltd
ss
stc
jbe
addb
sub
ja
fs
and
fwait
push
xor
ret
hlt
xchg
jo
pop
stos
or
or
incl
xchg
insl
out
sub
nop
ja
push
lcall
test
dec
xlat
inc
xlat
push
iret
aam
aam
aam
aam
add
outsl
aad
lret
pusha
xor
cli
xor
dec
add
cmpsb
stos
ja
dec
cli
xchg
rol
cwtl
js
sbb
cmp
popf
arpl
ljmp
cltd
out
out
fisubs
movsl
stos
fcmovnbe
cmp
mov
jbe
push
out
xor
incl
mov
xchg
aad
aad
aad
aad
aad
aad
aad
push
stc
or
push
loope
lods
jne
mov
xchg
aad
pop
insl
scas
add
sar
rol
ror
rolb
fcmovbe
mov
call
mov
mov
pushf
jb
pop
xchg
jecxz
and
outsl
movsb
ds
mov
ljmp
clc
sub
xor
cmp
add
or
adc
sbb
loop
ljmp
stc
addl
incl
push
and
leave
mov
popf
rcrb
shll
jp
inc
rorl
push
sar
lcall
and
sbbb
icebp
insb
aaa
outsl
es
mov
bound
jle
dec
rcl
fcmovbe
mov
sarb
rcrb
xor
sbb
push
ja
mov
cmp
push
daa
aas
inc
incl
lret
test
flds
cmpsb
push
repnz
sbb
fcomip
call
stos
xlat
mov
push
pop
pop
add
jge
push
sub
pop
inc
jmp
push
jge
out
jg
sbb
fnstsw
cmpsl
fiaddl
fisubl
sahf
loope
lds
pushl
rcrl
and
jge
lret
fxch
fnstcw
fldenv
fnstcw
fstps
jecxz
dec
lret
stc
out
cmpsb
mov
in
pop
cmp
add
mov
mov
fisttpll
mov
mov
aam
aam
mov
xchg
pushl
sbb
sti
pop
cltd
sub
fst
mov
jmp
decl
shll
shrl
aam
sbb
xchg
mov
xchg
aaa
xor
pop
push
pusha
pop
dec
mov
inc
loopne
jecxz
jmp
cmc
sar
sar
rcr
sub
incl
push
cmp
jp
pop
call
xchg
push
jle
es
jge
or
rorl
call
pop
shll
shll
fidivs
jns
mov
lods
das
sarl
jg
outsb
in
pop
incl
jbe
adc
xchg
fcompl
fdivr
ffree
repnz
incl
jge
push
mov
push
outsl
loope
lret
push
xor
cld
adc
and
sub
fucomi
fcomi
fcmovnb
fcmovne
fcmovnu
push
or
mov
pusha
call
lcall
loop
ljmp
clc
fsubs
imul
fdivrs
inc
fmuls
pop
fsub
jb
fcoml
jg
clc
add
mov
cltd
daa
sub
leave
fiaddl
sub
rol
sar
jmp
insl
rolb
or
push
rcr
rcrl
in
nop
in
sarb
push
daa
negl
jecxz
ljmp
int3
out
fisttps
fsubr
fsubl
fdivrl
mov
dec
push
xorb
out
mov
in
push
dec
test
fidivl
fimull
fcmovbe
fistpl
fldt
fildl
btr
adc
jg
mov
repz
ja
call
addr16
gs
adc
neg
rcr
inc
fldcw
data16
incl
jl
add
inc
shr
fisttps
int3
xchg
xchg
pop
call
pop
outsl
int3
aad
aad
dec
aad
inc
cmp
jmp
scas
adc
mov
fnstsw
mov
cmp
jmp
push
cmc
repnz
cld
std
cli
sti
clc
stc
movb
ja
psraw
int
inc
aas
filds
adc
fcmovu
fcomp
cmpsb
inc
punpcklwd
cwtl
bound
loope
mov
mov
fs
popa
outsb
outsl
insb
insl
push
push
jne
pushl
jno
jg
jge
jnp
jns
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
ljmp
push
pop
pop
pop
pop
pop
pop
pop
pop
es
and
shlb
and
das
sub
sub
sub
pushl
aaa
xor
xor
xor
ds
cmp
cmp
cmp
push
pop
add
add
out
push
or
and
dec
call
pop
adc
adc
adc
out
sbb
decl
xchg
and
add
add
call
popa
add
adc
mov
lods
loope
ljmp
add
mov
mov
mov
xchg
xchg
add
xchg
sbb
sbb
sbb
add
add
add
add
xchg
sub
sub
sub
add
add
inc
add
outsl
cmp
sbb
cwtl
add
add
adc
sbb
adc
and
mov
icebp
ljmp
lods
sbbb
xchg
and
cltd
xchg
xor
xchg
jo
lcall
push
addb
sahf
lea
sbbl
mov
adc
push
rorl
scas
or
push
add
cld
add
fucomip
add
adc
and
neg
pop
mov
aas
add
adc
test
shr
call
test
test
jne
inc
cld
mov
jo
movsl
scas
movsl
xchg
sbbl
xchg
add
rolb
cmp
mov
sbbb
mov
mov
mov
xchg
mov
rclb
loopne
or
push
or
or
fisttpl
in
cmpsb
inc
invd
inc
inc
add
pusha
sti
ljmp
hlt
scas
mov
mov
leave
xlat
enter
mov
mov
inc
pop
and
mov
add
inc
outsl
jbe
stos
nop
xor
cli
add
in
add
add
inc
dec
cld
or
ret
inc
jns
and
add
sbb
mov
inc
shl
xchg
lret
add
movb
add
add
adc
and
mov
adc
xchg
rolb
add
add
xchg
lcall
and
and
fidivrs
fcomp
mov
push
int3
and
lret
adc
cld
mov
cwtl
mov
test
push
mov
rcr
sbb
or
sbb
add
mov
test
push
dec
movsl
add
andl
mov
divb
mov
mov
inc
loope
pusha
push
addl
xchg
pop
bound
arpl
stos
add
mov
addl
rcll
xchg
xchg
xchg
fmul
leave
mov
or
enter
mov
call
adcl
mov
test
cmpsb
dec
loopne
clc
pushl
loopne
test
and
jp
and
popa
or
pusha
add
popa
add
outsb
fcos
stos
in
aam
mov
aad
xor
sub
loope
loope
sub
mov
sti
fcomip
sbbb
xchg
add
pushl
je
ja
dec
add
insb
dec
outsb
insb
fs
insb
jbe
imul
add
adc
inc
idiv
movsb
cli
fs
fcomip
lds
mov
scas
mov
stos
mov
dec
enter
add
xlat
lock
clc
in
add
add
and
adc
sbb
cmp
mov
adc
or
add
or
sbb
pop
or
mov
sbb
cmp
pop
inc
inc
pop
test
fiadds
aam
ret
incl
aam
shrb
lret
clc
fmul
fsubrp
into
add
push
lret
fistpll
into
lock
int3
loop
or
cld
repnz
add
or
clc
dec
ja
cmp
sysenter
adc
adc
or
clc
dec
dec
add
adc
push
pop
pop
push
sbb
popa
jne
mov
adc
adc
inc
add
lcall
out
pop
adc
pop
add
adc
push
push
push
push
scas
mov
pop
int
iret
fcom
lret
aad
cmp
fbstp
and
and
dec
repnz
arpl
bound
jl
jmp
js
jg
add
or
movups
add
sbb
add
fcomip
pushf
mov
mov
mov
mov
fbld
sar
cmpsl
mov
mov
cwtl
mov
call
popa
pop
xor
and
and
cmp
call
pop
add
inc
mov
out
adc
sbb
out
cmp
xchg
orl
jne
aaa
decb
je
js
jp
mov
lcall
test
fdiv
ror
rolb
pop
outsb
add
add
add
pop
dec
shlb
push
inc
scas
sar
jle
jno
jb
pusha
dec
push
arpl
jo
pop
pop
add
clc
fcomip
das
in
jg
or
dec
add
dec
imull
lods
jmp
xchg
decl
cwtl
xchg
add
loop
call
aad
add
sti
xchg
add
cmc
mov
push
mov
leave
lea
pop
cld
lcall
les
mov
pushf
xchg
xlat
xchg
add
scas
stos
ljmp
in
in
jmp
loop
inc
or
push
push
push
sbb
inc
pop
pop
jg
mov
mov
mov
loopne
hlt
mov
out
test
shrl
jl
dec
mov
scas
out
mov
jmp
std
popa
push
dec
add
inc
add
mov
stos
jle
out
ljmp
add
add
cli
pusha
out
mov
repz
clc
idiv
mov
mov
cmpsl
ljmp
outsb
dec
inc
mov
dec
add
pop
dec
add
inc
mov
pop
push
push
push
add
push
adc
aaa
sti
incl
pop
sbbb
sub
jle
addb
mov
jg
loopne
jmp
test
add
hlt
cmc
stc
mov
incl
mov
call
call
clc
xor
adc
add
inc
push
add
mov
or
adc
out
add
pop
jno
push
ss
adc
xor
aaa
cmp
xor
mov
add
scas
mov
shrb
xchg
fldt
clc
mov
mov
adc
push
or
cmpsb
pop
sbb
pop
out
push
std
add
sarb
stos
scas
mov
inc
mov
or
mov
add
cli
jmp
repnz
testl
in
inc
outsl
push
jae
push
sti
pushl
arpl
jae
dec
addr16
jo
sbb
pop
jne
outsb
push
jns
lock
push
sti
and
push
lods
mov
popf
sub
int
mov
lods
mov
sub
add
fs
pop
cmp
inc
add
and
or
aas
incb
sub
aas
cmp
testb
dec
popa
pop
push
lds
pop
push
inc
imul
scas
test
jg
cmpb
and
mov
sbb
push
or
add
push
push
mov
cmp
fiaddl
and
scas
aaa
jmp
test
mov
jg
imul
xchg
inc
inc
push
inc
inc
ja
dec
adc
pop
dec
icebp
add
cld
ljmp
push
add
insl
jge
imul
fs
jno
jae
push
adc
pop
insl
outsb
jl
decb
pushl
icebp
imull
out
loopne
loopne
pusha
cmp
cmp
pushl
out
and
cmp
daa
and
clc
outsl
mov
push
sahf
mov
test
xchg
nop
sbb
sub
sbb
adc
jmp
std
xlat
cli
repnz
in
jmp
add
pop
je
fs
fdivp
push
shrb
mov
sbb
pop
sbb
push
adc
das
clc
stos
enter
mov
repz
leave
int
sarb
jmp
push
adc
push
adc
mov
mov
addb
cli
mov
ss
lock
in
xchg
in
sti
clc
mov
mov
jecxz
lock
mov
mov
iret
mov
ljmp
js
jb
jo
adc
jae
jno
ret
adc
loope
ret
nop
insl
or
adc
addb
jne
loop
jg
pop
in
outsl
jns
inc
pop
loopne
push
inc
pop
jbe
pop
inc
out
cli
dec
inc
pop
add
rclb
jnp
inc
push
outsl
jae
add
inc
jg
jo
add
jbe
testb
jmp
jmp
std
adc
es
testl
stos
mov
loope
lahf
xchg
xchg
xchg
shll
add
xchg
adcl
mov
push
fldl
mov
mov
mov
adc
sbb
call
stos
pop
inc
push
jno
shl
loop
hlt
jno
push
outsb
mov
lods
mov
ljmp
xchg
mov
rolb
cmpsb
mov
test
cwtl
or
addb
mov
test
lcall
jo
and
add
xchg
mov
dec
cmpsl
mov
add
es
or
cmp
sub
push
adc
adc
push
sbb
or
sub
rclb
add
and
mov
and
rcrl
lods
lods
scas
mov
out
cli
test
rcrb
loopne
out
and
loope
inc
push
cld
mov
mov
loopne
mov
adc
leave
fstl
jno
fxch
int
rcl
push
xchg
ret
into
stos
xlat
call
in
int
aad
hlt
in
je
add
icebp
add
mov
mov
mov
push
ja
jbe
jo
lahf
pusha
inc
jns
add
lds
push
add
jnp
bound
popa
ja
push
pop
dec
dec
push
push
sbb
mov
cli
add
dec
push
pop
jle
add
dec
pop
or
jl
loope
enter
bound
jl
add
xor
mov
sub
pop
mov
add
push
pop
mov
cmp
xor
call
std
adc
sub
das
cmp
mov
pop
outsb
mov
mov
outsb
jns
jg
jb
inc
add
pop
pop
dec
add
pop
je
pop
push
js
mov
push
push
pop
inc
pop
add
inc
inc
push
xor
add
inc
dec
jae
imul
jae
cld
popf
adc
fs
ret
sysret
aas
or
add
cwtl
push
pop
push
aam
icebp
mov
dec
push
sbb
pop
dec
dec
and
adc
pop
popf
mov
push
je
repnz
add
pop
pop
and
pusha
sbb
or
mov
xchg
xchg
sahf
xchg
jmp
and
mov
push
adc
xor
push
push
popa
in
hlt
or
sbb
cmpsb
or
and
and
decl
adc
ds
xor
stc
in
pop
mov
lcall
pushf
jno
adc
es
add
adc
add
ret
mov
add
pop
pop
adc
push
xor
and
mov
jne
sbb
or
je
sti
ja
cwtl
mov
add
nop
pushf
flds
xchg
xchg
add
mov
outsl
clc
pushl
add
rolb
inc
add
adc
add
add
or
rcll
cmpb
outsl
ja
jne
js
xor
ror
ja
adc
int3
cmpsb
in
in
icebp
out
in
ret
aaa
std
pop
cmc
jmp
stc
cli
stc
hlt
cld
div
jecxz
xor
lods
push
fisubl
jg
jnp
sbbb
inc
dec
inc
xor
or
push
pusha
add
push
ljmp
imul
orl
stc
loope
stc
ljmp
xor
push
add
sbb
sub
jle
push
pop
cs
pop
pushf
dec
pop
pop
fcompl
inc
call
or
xchg
mov
xchg
mov
mov
decl
test
icebp
add
mov
cmp
or
jo
push
negb
movsl
mov
adc
lods
mov
mov
repz
rclb
test
test
xchg
push
loopne
mov
cs
ljmp
loopne
call
enter
ret
int
jmp
mov
fimuls
test
icebp
mov
push
push
pop
sub
and
dec
push
sbb
divl
cld
sbbb
test
mov
call
hlt
add
adc
push
push
or
push
pop
xchg
sbb
inc
cld
outsl
sub
sub
xor
cmp
push
add
add
add
or
arpl
dec
jno
or
mov
std
cmp
sbb
aas
cmp
sub
sub
push
out
and
add
sar
fldt
rcr
in
adc
mul
mov
adc
add
rol
sar
jecxz
cld
dec
ret
mov
adc
sub
push
pop
or
sbb
dec
clc
push
push
add
add
adc
in
decl
xor
adc
daa
cmp
ja
push
cmp
push
icebp
jmp
shl
cmc
add
loope
out
mov
je
lock
stos
jg
cld
or
mov
lods
std
sub
sub
add
cmp
push
sbb
add
sbb
dec
popa
cld
fcomip
lods
scas
mov
or
cld
aad
cli
lcall
aam
shl
fcmovu
aam
add
enter
je
jae
stos
aas
push
fiadds
clc
pop
push
pop
js
jbe
pop
ja
jne
stos
scas
movsl
filds
sub
mov
in
stos
mov
sqrtps
add
lock
cmp
add
sub
cs
jp
aaa
cmp
push
arpl
jmp
and
adc
push
lret
push
cmp
pop
pop
push
incl
add
fcmovbe
add
rol
loopne
xlat
add
lret
aam
rol
add
lock
iret
mov
leave
ror
outsb
cli
jg
xlat
aam
fld
faddp
leave
xchg
rcll
call
leave
add
add
push
imul
push
insb
addr16
std
jg
push
rolb
jp
out
test
add
jbe
mov
mov
ficomps
rcr
cmp
test
xchg
repz
rcrl
ljmp
inc
push
add
inc
outsl
dec
dec
push
adc
dec
adc
clc
scas
pop
add
push
push
adc
push
jle
jbe
push
inc
cld
mov
sub
and
add
bound
add
das
sti
or
in
out
push
iret
lret
xchg
jno
jg
add
sub
ret
fmul
leave
add
fildl
insb
add
outsl
js
sahf
cmpsl
lods
mov
mov
add
push
mov
add
mov
jg
pushf
mov
mov
movsl
mov
xorb
sbbl
mov
inc
add
sub
sub
xor
gs
cmpsb
cli
pop
mov
or
mov
mov
jno
aaa
aad
stos
xchg
mov
movsb
mov
add
cmp
cld
fists
add
sbbb
add
les
stos
aam
imulb
arpl
inc
fs
jge
mov
mov
jnp
addr16
xor
jnp
jno
jne
push
sbb
add
xchg
call
test
roll
aad
popf
test
push
mov
push
dec
dec
sub
xor
mov
dec
imul
loop
jbe
jne
add
inc
dec
jne
push
bound
lcall
popa
cmp
pop
jl
pop
pop
inc
inc
add
imul
push
dec
add
decl
pop
dec
dec
push
push
inc
outsl
outsb
pop
pop
push
adc
adc
mov
ljmp
stos
test
add
imul
push
insl
data16
decl
pop
jo
pop
inc
push
or
pop
rorl
jp
and
jnp
sub
mov
add
mov
mov
or
aam
fwait
add
test
ljmp
mov
xchg
add
xchg
test
out
lcall
and
adc
add
and
sbb
add
outsl
adc
sub
rclb
push
adc
sub
sub
adc
sbb
sbb
and
push
push
rolb
stos
pop
and
scas
stos
mov
divb
loop
mov
sub
add
movsl
mov
cwtl
cltd
fcmovnu
faddl
aad
into
stc
cmp
popf
mov
push
ljmp
xchg
mov
in
call
jmp
repnz
mov
mov
mov
rclb
jbe
insb
lock
cld
push
mov
imul
pusha
cmpb
jns
jg
jg
pop
std
or
jnp
jno
jne
pusha
inc
xchg
inc
push
dec
dec
push
or
add
stos
decb
aaa
adc
daa
in
push
inc
imul
dec
dec
mov
dec
pop
and
loop
sub
and
and
cmp
jmp
push
cmp
aas
cmp
sub
jne
cmp
adcb
cld
dec
pop
imul
mov
and
inc
push
mov
sbb
prefetcht0
and
pop
sbbb
push
call
jecxz
in
in
lods
mov
jmp
incl
jecxz
mov
call
out
shl
scas
cli
aaa
scas
adc
rcl
ret
fistpll
into
faddp
in
lds
mov
nop
aam
shl
and
fcmovnu
xchg
into
stos
lods
mov
aaa
std
int
call
mov
jle
movsb
mov
push
cmpsl
popa
and
xchg
xchg
popf
lret
popf
mov
mov
lahf
lcall
cltd
mov
fwait
arpl
mov
ljmp
movq
jnp
add
push
jae
sbb
inc
add
outsl
popa
aaa
imul
adc
add
push
jp
inc
pop
dec
dec
add
dec
sbb
pop
pop
mov
cld
pop
pop
pop
pop
sbb
xor
imul
pop
loope
hlt
loop
shlb
es
jg
jo
mov
inc
jge
jno
cmp
clc
fbstp
jge
in
sbb
jb
add
sbb
fnstenv
std
push
pop
ret
add
dec
pop
pop
ljmp
call
movb
stos
std
mov
add
stc
popa
add
adc
adc
outsl
xchg
jo
jo
sbb
int
sub
out
add
pop
inc
gs
inc
sub
test
enter
aam
jg
push
in
push
movsb
inc
popa
jno
jne
ljmpw
dec
mov
mov
xchg
sahf
xchg
lcall
jb
inc
icebp
mov
mov
pop
dec
push
dec
add
pop
pusha
or
outsb
cli
inc
dec
es
sti
decl
sbb
inc
add
cmp
cmp
dec
aaa
sub
popa
add
mov
inc
pop
dec
pop
dec
or
push
add
push
inc
inc
loopne
test
incl
icebp
add
faddp
rcr
rcrb
loope
jecxz
int3
xlat
add
lret
rorb
add
roll
movsl
lds
xchg
adc
mov
mov
mov
test
mov
jmp
add
inc
bound
andb
imul
inc
call
cltd
clc
frstor
add
fcmovu
nop
mov
rcl
ficoml
ret
popf
test
cmp
popf
icebp
mov
or
je
jne
addr16
add
sub
cs
arpl
or
and
inc
sub
out
aam
rol
popf
add
rcr
cmp
aad
adc
cld
into
shlb
aad
cmpsb
add
mov
add
sbb
unpckhps
or
push
or
dec
add
or
push
sar
or
push
dec
dec
add
mov
add
sahf
sub
sbbl
xlat
lret
mov
les
sub
mov
icebp
cmc
mov
std
fisttpl
mov
jae
adc
xor
insl
insb
jae
adc
jb
das
jbe
popa
imul
outsb
outsb
mov
adc
loope
pop
jl
js
outsl
xor
jg
mov
ja
cs
daa
sub
popa
inc
push
or
lcall
cmp
shrb
mov
jmp
mov
outsl
fs
add
or
or
add
ret
push
lds
ffreep
lods
add
sub
fs
loope
jecxz
lock
push
jg
int3
pusha
iret
mov
repnz
cmpsb
in
add
sti
cmpsb
mov
stos
incb
xchg
jmp
jmp
loop
add
fcmove
fadds
loope
xor
cmp
jo
icebp
mov
and
add
dec
shll
pusha
jl
rcl
add
arpl
jne
xor
sub
repz
aaa
push
mov
mov
xchg
pop
dec
adc
mov
imul
incl
in
movb
add
add
jmp
clc
sbb
out
stc
repz
sub
sbb
and
add
aad
test
lods
andb
pusha
or
add
lcall
pop
aaa
sub
es
or
jbe
adc
cmp
or
decl
iret
xchg
rcr
fwait
add
mov
or
push
ds
mov
cld
div
mov
mov
icebp
icebp
out
add
mov
stc
mov
movsl
xchg
pushf
cwtl
xchg
xchg
clc
pop
jl
adc
cmpl
inc
inc
inc
inc
or
das
sahf
pop
pop
dec
dec
pop
push
dec
xchg
pop
inc
dec
push
push
or
cmpsb
ret
cmpsb
ljmp
inc
pop
add
ja
bnd
add
icebp
or
jno
jle
jl
sub
xor
mov
stos
xor
dec
subb
xlat
xlat
shll
test
xlat
mov
push
mov
loopne
mov
addl
test
push
push
lcall
popf
sarb
clts
add
addb
push
rclb
cli
jg
and
push
jno
lret
add
sarb
stos
add
andl
cmpsb
aam
add
outsl
pop
add
mov
mov
xor
movsl
mov
andl
push
inc
mov
xchg
mov
dec
adc
mov
outsl
cld
jg
and
adc
mov
xchg
mov
add
mov
sbb
mov
xchg
add
jb
shll
outsb
add
popa
add
insl
sbb
dec
adcb
stos
mov
mov
push
mov
xchg
xchg
nop
or
outsl
mov
cmpsl
adcb
xchg
adcl
loop
popl
add
lahf
add
mov
mov
idiv
fwait
push
xorb
xchg
adcl
xchg
lahf
rcrb
outsb
adc
scas
mov
xchg
mov
adc
xchg
mov
xchg
mov
dec
pushl
adc
mov
aam
add
addb
nop
or
xchg
sar
out
inc
cli
outsb
add
and
sahf
repnz
faddl
mov
movsb
mov
movsl
mov
movsb
mov
test
mov
hlt
mov
std
decl
push
mov
movsl
scas
mov
mov
icebp
or
lods
cmpsl
inc
movsl
rorl
dec
mov
mov
add
aaa
cld
jg
hlt
test
test
mov
add
ret
mulb
test
lods
movsl
test
fwait
std
pop
fisttpl
adc
add
movsl
add
sbb
sbb
lock
enter
and
fcmovbe
pop
cld
mulb
stos
mov
loopne
mov
sbb
nop
mov
cld
rolb
outsl
pop
movsb
orl
adcl
pop
inc
adcb
bound
orb
cmpl
xchg
les
pop
incl
mov
mov
xchg
les
lock
jp
test
or
and
stc
sub
pushl
xor
xor
xor
xor
pushf
xchg
scas
cli
lock
inc
movsl
mov
fadd
test
cmp
fdivrp
jmp
in
nop
xchg
out
xchg
or
sbb
movsb
cmp
test
in
jg
popa
push
cmpsl
adcl
jae
enter
repnz
push
in
xor
scas
jo
mov
xor
call
shlb
shll
push
push
mov
add
out
xchg
in
daa
lods
andb
inc
jnp
xchg
xchg
inc
add
in
enter
fimull
inc
and
test
adc
movsb
xchg
push
inc
mov
xlat
movsb
add
addl
mov
sbb
sub
adcb
icebp
sbb
das
sub
xchg
cmpsb
xchg
pop
xchg
mov
test
in
in
mov
lcall
mov
sub
mov
mov
pushf
movswl
mov
cli
aaa
std
add
xor
mov
orl
adc
clc
ja
inc
ds
add
xchg
jp
mov
or
sbb
test
pop
mov
test
lcall
jno
mov
sub
sbb
jbe
add
mov
dec
cli
jmp
xor
lock
xchg
push
inc
mov
inc
cld
pop
push
mov
sbbl
xlat
sub
pop
movsb
cmpb
outsl
jg
or
add
dec
cmp
in
add
fisubl
pusha
cltd
inc
test
call
cld
add
js
cld
add
ljmp
insb
jae
add
adc
push
dec
cld
add
lea
xorl
rcll
aas
mov
jmp
jle
adc
rcl
inc
inc
les
mov
pop
mov
jo
jle
sti
or
xor
mov
adc
pop
or
mov
adc
mov
mov
sub
call
and
jmp
lds
movb
orl
daa
adc
pop
cmpsb
cmpsb
sbb
mov
pushl
leave
mov
leave
pop
xor
pop
mov
lock
mov
pop
aaa
mov
jo
shrl
xlat
je
repnz
mov
mov
cmp
push
idiv
sbb
push
arpl
xchg
in
cmpsb
or
sbb
ljmp
lcall
repz
hlt
cmpsb
clc
inc
fsubrl
mov
push
pusha
dec
rcll
push
cmp
cmc
jg
pop
je
sar
movsl
mov
pop
in
pusha
cmp
call
inc
add
add
xchg
or
add
insb
nop
aad
mov
and
or
loop
cmp
xor
mov
add
pop
lods
cmp
mov
xchg
loopne
punpcklwd
pop
and
mov
sbb
loop
sbb
jnp
dec
imul
loop
in
sbb
gs
sbb
add
or
aad
push
bound
inc
and
mov
addl
and
in
push
cmpsb
push
add
and
pop
mov
ret
out
push
cld
sbb
xchg
jp
or
rolb
fsub
sub
add
xchg
aas
pop
xchg
faddl
frstor
xchg
aad
outsb
imul
cmp
sbb
adc
arpl
push
imul
insb
in
mull
xor
cmp
sar
mov
les
mov
cld
fistpl
movsl
xchg
mov
adc
sub
adc
paddb
ds
adc
bound
cmp
mov
adc
fidivs
add
and
pushl
and
cmpb
jl
jle
andl
inc
mov
pop
xor
add
adc
rorl
inc
jle
mov
outsb
shlb
andb
adc
xorb
popa
andb
or
ficoms
negb
cmpsb
or
testl
and
push
xchg
call
sbb
inc
pop
lock
and
adc
dec
mov
imul
add
pop
orb
mov
dec
es
out
rcrb
ljmp
cmc
add
ds
gs
mov
test
jmp
fwait
adc
out
loopne
add
xchg
pushf
cmp
mov
loope
stos
aaa
or
fisubl
fisubrs
dec
cmpsb
fbld
dec
jle
ljmp
nop
int3
jno
sti
incl
push
ret
lock
adc
mov
add
jmp
add
sbb
pop
insl
and
rolb
and
sub
push
push
pop
cs
sbb
push
push
push
std
add
adc
loop
jecxz
push
rolb
adc
in
mov
mulb
js
inc
inc
sbb
movb
in
mov
loop
push
push
push
jmp
sbb
inc
add
adc
push
aad
add
in
add
outsb
mov
cltd
rclb
pmuludq
add
xor
inc
incb
mov
add
lahf
jb
inc
push
sbb
rcll
addb
adc
mov
and
adc
jl
mov
inc
sbb
xorl
mov
and
mov
sub
call
xor
es
or
sbb
jmp
fs
inc
adc
add
inc
sbb
add
sti
hlt
scas
mov
out
add
lock
adc
xor
mov
sbb
pop
mov
fidivl
cld
xchg
ret
xchg
adc
and
les
roll
push
test
inc
xor
je
hlt
imulb
add
add
mov
xor
mov
mov
cld
inc
dec
or
mov
mov
push
mov
int3
push
loopne
sbb
inc
sub
ret
and
jecxz
fnstsw
dec
push
rorb
bound
xchg
jmp
and
gs
sbb
adc
inc
ljmp
cwtl
loop
outsl
mov
push
rcrl
mov
mov
jp
scas
sub
in
jg
fxch
push
mov
stos
inc
add
psubusb
nop
addb
lea
jmp
sarb
testb
xor
repz
inc
adc
xor
push
loop
mov
testb
jg
incl
rolb
inc
addl
push
push
pushf
xchg
leave
pusha
arpl
shr
stos
into
sub
sbbb
arpl
sti
mov
shll
outsl
lcall
cmp
aad
je
mov
loop
inc
mov
mov
daa
sub
mov
ret
push
and
adc
and
pusha
pop
push
mov
mov
adc
cli
scas
xchg
mov
fsts
rorb
jl
mov
js
adc
es
add
fmuls
movsb
pop
and
pop
idiv
mov
daa
cltd
into
xchg
mov
add
pop
je
mov
mov
orl
call
in
loopne
sub
sub
repz
adc
lods
jp
or
frstor
mov
data16
cmpb
rorb
mov
mov
adc
cmpsb
ja
add
xchg
repz
push
enter
push
mov
sbb
pusha
add
jo
add
push
js
or
add
icebp
and
nop
div
sbb
mov
insl
and
or
mov
lcall
pop
add
fsub
rcll
mov
pusha
mov
addr16
sub
or
ljmp
push
inc
mov
add
rolb
sbb
divb
fisttpll
fsubl
fldenv
mov
mov
pusha
shl
sub
and
push
adc
rclb
addl
mov
and
push
dec
pop
imulb
loop
verw
mov
stos
or
lcall
out
mov
pop
mov
fdivr
push
mov
testl
ja
mov
popa
mov
push
and
add
and
cmp
add
outsl
jb
mov
cs
les
mov
test
push
rcrb
loop
pop
pusha
and
add
loope
add
pusha
sbb
fistps
xchg
shlb
cmpsb
aam
andb
addl
sbb
loope
aad
lahf
test
nop
dec
jne
hlt
rorb
test
mov
xchg
dec
std
mov
add
sbb
add
rcrb
filds
add
cmp
ret
dec
xchg
testb
xchg
mov
mov
jmp
mov
mov
add
mov
adc
pop
stos
push
repz
popa
add
pusha
add
adcl
sahf
adc
push
sti
pusha
adc
adc
xor
mov
sbb
add
mov
incl
jecxz
sbb
xor
sub
or
andb
inc
mov
repnz
mov
add
xchg
in
data16
push
sbbb
std
jecxz
repz
mov
cld
mov
ret
xchg
in
mov
xchg
jnp
loopne
mov
pusha
pop
cli
shrb
push
push
std
ljmp
jo
push
loop
or
sub
test
xor
mov
das
pop
sbb
ret
or
or
adc
xlat
xchg
adc
sbb
ds
and
pop
push
roll
out
pop
rclb
add
mov
and
fucomi
adc
push
push
xor
clc
mov
push
and
ljmp
aad
filds
das
clc
ljmp
add
arpl
mov
ljmp
inc
and
push
add
and
bound
cli
push
inc
mov
dec
adc
add
insl
xchg
mov
popa
add
adc
inc
jbe
push
clc
pop
add
add
or
adc
inc
cmp
adc
pushl
xchg
fists
fcmovnbe
add
mov
sarb
mov
pop
xchg
pop
add
jno
mov
xchg
negb
addb
ss
add
lock
clc
mov
mov
add
jno
mov
es
add
or
or
xor
mov
push
insb
int3
push
insl
scas
js
int
sub
rol
pusha
popa
aas
mov
push
negl
outsl
daa
and
push
add
inc
mov
and
arpl
nop
ljmp
add
add
imul
das
cmpsl
jmp
inc
sbb
add
mov
push
add
cs
push
pop
sbb
mov
sbb
add
or
mov
andb
push
test
les
movsb
in
rolb
mov
add
loop
xor
xchg
adc
xor
or
outsl
adc
sbb
icebp
mov
scas
add
cmpsb
inc
test
xor
jo
push
scas
loop
inc
cld
xchg
aam
or
add
mov
xchg
xchg
test
adc
or
scas
cli
jmp
or
push
imul
mov
lcall
cmp
aam
dec
mov
out
sbb
push
popf
in
mov
push
mov
push
sub
rolb
es
call
imul
push
mov
ljmp
or
dec
je
rcll
inc
in
loope
dec
xchg
scas
jp
rcll
pop
adc
xchg
loopne
mov
ljmp
pop
rolb
pop
fs
xor
movsb
lret
jae
push
mov
aas
push
pop
add
cli
inc
ret
push
dec
insl
sub
fsubrs
mov
adc
adc
adc
idivb
jb
jo
mov
outsb
decl
adc
cmp
push
frstor
xchg
nop
inc
mov
xchg
adc
push
rcrl
lock
mov
lcall
push
adc
outsl
lods
pop
fdivs
or
jecxz
out
mov
push
jb
inc
fbld
xor
insl
xor
pop
nop
mov
shrb
cs
fadds
add
mov
mov
mov
add
inc
inc
xor
movb
pop
pusha
sbbb
inc
aaa
cld
decl
xchg
out
aaa
push
add
gs
or
xchg
or
loop
push
adc
xchg
je
aas
push
or
fadds
xchg
scas
shlb
std
mov
push
scas
adc
jbe
pushl
jecxz
loopne
es
add
outsb
scas
scas
mov
lock
test
pop
fcmovnb
inc
das
fcomip
mov
push
mov
shrb
icebp
push
pushf
cmp
pop
xorb
gs
ret
jecxz
add
cwtl
push
rcll
cmp
dec
rcrb
inc
push
or
and
mov
loope
sub
aad
pop
insl
shll
inc
in
mov
pop
push
add
add
xchg
add
lock
add
xchg
clc
add
and
decb
notb
nop
dec
or
ljmp
loope
fimuls
jns
outsl
stc
or
scas
mov
jbe
pop
loopne
cmpsb
cmpsb
jp
adc
push
sub
loopne
loope
decl
ljmp
inc
repnz
ss
cs
mov
cld
loop
ret
stos
loopne
xchg
pop
push
inc
inc
push
test
test
add
lods
sbb
add
pop
lods
jb
repnz
xor
mul
insl
mov
xchg
sbb
decl
lock
mov
and
lret
gs
out
mov
decb
nop
pusha
or
clc
loope
mov
mov
or
mov
mov
sub
aaa
mov
or
mov
cwtl
shrb
jmp
push
loop
dec
out
inc
dec
icebp
aaa
mov
js
add
jno
insl
jmp
add
out
clc
stos
sahf
arpl
xchg
hlt
insl
add
cmp
xchg
in
cmpsb
push
mov
jg
into
frstor
xchg
adc
andb
ljmp
jmp
mov
shlb
sub
add
mov
clc
xchg
in
cmpsb
add
mov
lea
push
in
into
in
push
xchg
int
cmpsl
lea
into
pop
rcrl
and
mov
cmpsl
insl
pusha
shrl
push
mov
cmp
icebp
dec
into
inc
pusha
lods
mov
enter
imul
test
sbb
mov
testb
incb
movb
jmp
mov
mov
push
popa
loop
mov
nop
out
shrb
adcl
loopne
sbb
fdiv
push
clc
rcr
xchg
std
mov
movsb
xchg
ret
loopne
push
sti
inc
cld
inc
xor
xchg
pushl
adc
adc
loopne
imul
add
jle
gs
test
inc
sbb
hlt
add
dec
sbb
jmp
add
xchg
hlt
lock
fildl
pop
mov
sarb
add
mov
subb
es
pop
pop
in
gs
aad
rorl
mov
mov
or
adcb
add
icebp
xchg
sub
shlb
inc
out
jo
mov
push
insl
rcll
scas
add
mov
adc
bound
push
push
pop
test
jbe
mov
mov
les
js
xchg
and
or
and
and
or
or
or
idiv
pushf
pop
and
mov
data16
ljmp
jg
fs
mov
aas
aad
fldl
cmp
mov
add
xorb
mov
or
bound
mov
out
std
cmp
push
pop
subb
orl
sub
xorb
nop
repnz
repz
addb
add
push
js
jle
sub
imul
mov
testb
inc
jecxz
push
or
or
sub
outsl
cli
addr16
ja
fwait
xor
or
sbb
jbe
fstpl
inc
mov
cld
add
in
pop
or
and
insb
lret
adcb
fstpl
and
pop
outsl
pop
out
mov
rclb
outsl
xchg
and
mov
jg
andb
or
clc
mov
test
xor
sub
mov
add
jb
aas
orl
mov
mov
mov
add
fwait
push
and
push
add
xchg
dec
or
orb
mov
out
push
dec
shlb
lock
adc
ret
lcall
scas
push
jne
test
pop
push
jecxz
xchg
add
or
std
mov
pop
outsb
or
sbbl
sbb
push
fdivrl
ret
lcall
xorb
pop
xor
cli
gs
mov
add
mov
cmp
jmp
adc
xchg
roll
mov
fisubrl
mov
shl
mov
imul
sub
ljmp
or
jo
mov
push
jecxz
xchg
sub
in
mov
dec
and
insl
in
add
adc
cmc
rorb
adc
or
js
and
rcrb
mov
imul
mov
shlb
clc
mov
pop
shlb
fldt
scas
insw
and
sbb
xchg
add
ljmp
xchg
mov
add
cld
imul
stos
mov
aam
jl
pop
movsl
jle
mov
stos
mov
push
adcb
add
mov
jne
or
xchg
xchg
push
sub
or
movsb
push
scas
pop
in
in
inc
test
test
add
aam
add
add
incl
push
adc
push
mov
sbb
outsb
adc
data16
mov
xor
or
inc
ss
pop
xchg
inc
and
and
mov
aaa
inc
ret
cmpsb
dec
inc
test
add
add
popf
pop
mov
xor
adc
call
cld
fwait
mov
enter
mov
mov
ret
adc
mov
mov
mov
push
and
and
hlt
incl
ret
das
sbb
mov
and
scas
cmpb
mov
pop
inc
and
inc
mov
aad
mov
push
cmpsl
orb
xor
adc
push
sahf
jecxz
aad
push
push
int3
ds
xor
rclb
or
push
sar
mov
in
mov
xor
arpl
subb
jle
add
sub
inc
add
mov
inc
sarl
fstl
inc
add
out
ret
shrb
adc
popa
sahf
or
bound
data16
movsb
in
decl
add
stos
arpl
or
loope
fchs
add
inc
fs
out
test
ret
or
dec
fs
clc
ljmp
adc
inc
mov
sub
outsl
xlat
and
mov
fisubs
imul
call
inc
adc
or
inc
sub
mov
pop
lcall
out
adcl
incl
jge
pop
sub
pop
push
pop
inc
push
int
push
test
inc
push
cli
gs
loopne
or
call
push
jmp
fs
inc
xor
ljmp
stos
movsl
fdivrp
outsl
jl
push
insl
adc
add
insl
mov
mov
and
jae
push
fwait
std
sqrtps
add
push
subl
pop
mov
in
scas
inc
adc
push
mov
andl
lods
mov
jle
addr16
test
aaa
jl
subl
xchg
loopne
mov
out
mov
aaa
pop
and
rorb
add
cli
fwait
nop
sbb
sub
mov
or
mov
add
add
add
orb
ret
lock
cmpb
sbb
push
fstl
mulb
rolb
push
xchg
mov
push
pop
xor
inc
jp
ret
call
cmc
and
mov
mov
ret
or
add
pop
add
aaa
mov
mov
jbe
ret
fisttpl
pushl
or
push
data16
mov
add
loopne
add
mov
hlt
cwtl
fists
pop
ror
mov
outsl
addb
imulb
xchg
and
imul
insl
add
cmp
sbbb
mov
aad
into
add
cmp
mov
loop
mov
jmp
shrl
inc
rcll
sbb
mov
insl
and
add
push
sub
ss
cltd
repnz
push
je
filds
fimuls
loop
fimull
std
mov
call
out
sbb
fwait
inc
mov
movsb
mov
mov
and
jp
ljmp
mov
dec
sub
out
shll
sub
dec
inc
push
pop
add
data16
or
push
mov
sbb
pop
aad
xchg
push
cmpsb
or
or
scas
xor
shlb
out
bound
sub
mov
test
std
jbe
jns
adc
nop
add
ljmp
pop
push
lock
push
insl
mov
push
add
xor
jmp
xor
inc
jo
loopne
mov
lret
movsb
jmp
add
rolb
sbb
push
dec
mov
loope
repnz
adc
lods
shlb
and
fcomip
add
inc
jle
add
pop
push
sbb
mov
mov
push
add
shlb
fildll
jo
cwtl
clc
in
fbstp
mov
loop
in
adc
outsl
loope
getsec
aad
mov
daa
xchg
in
out
inc
cli
pop
cmp
arpl
andb
pusha
mov
icebp
gs
and
sub
icebp
outsb
adc
je
and
ret
mov
sbb
xchg
inc
shrb
mov
sub
xchg
or
adc
insl
push
ret
nop
and
data16
ja
add
test
rcl
mov
and
add
sahf
out
daa
lret
push
mov
insl
loope
out
mov
rolb
into
nop
or
pop
test
roll
sub
cmp
pop
das
call
andl
clc
loopne
xor
mov
test
xor
add
push
addb
and
call
push
add
or
sbb
push
sub
mov
mov
sbb
cltd
subb
mov
arpl
call
xor
and
adc
fdivp
add
loope
adc
outsl
aad
ja
mov
insl
test
aaa
push
push
call
pusha
dec
xor
mov
incl
mov
mov
incb
decb
add
add
and
int
insl
or
mov
fwait
out
outsb
hlt
mov
mov
mov
incl
addl
mov
add
in
mov
daa
push
and
adc
sbb
inc
in
nop
fisubs
xchg
jo
call
decb
push
and
cmp
sbb
xchg
std
lock
stos
mov
test
incl
inc
sbb
xchg
jmp
repnz
ljmp
mov
dec
mov
enter
outsb
jo
or
outsl
jp
push
jo
mov
jmp
adc
add
loopne
test
sbb
aam
in
add
stc
outsb
sbb
or
or
pop
jg
test
loop
ljmp
mov
decl
add
xor
imul
fsts
jle
xor
cmp
cli
push
imul
arpl
ret
incl
mov
add
loope
push
xchg
out
ds
inc
push
or
lret
mov
add
rorl
pusha
fldt
push
in
nop
jmp
ss
popf
and
outsb
push
nop
pop
mov
pop
mov
jno
cld
push
pop
mov
mov
pop
cwtl
jmp
inc
dec
add
loopne
test
push
mov
add
sub
mov
push
mov
xchg
into
sbb
push
add
aam
push
fiaddl
pop
stos
xchg
shrb
lret
or
xchg
popa
or
idiv
mov
pop
add
xor
inc
or
jmp
adc
seta
loopne
jnp
xor
je
cli
jge
add
add
lcall
pop
xor
sbb
push
sub
mov
mov
xchg
mov
popa
popa
ds
fs
xchg
scas
mov
push
leave
cli
adc
pop
std
jg
leave
xor
or
sbb
push
scas
push
push
xor
lods
mov
fs
fistps
sbb
cmpsb
cmp
clc
decl
shll
or
loope
add
add
repnz
mov
out
xor
push
or
adc
lods
repz
pop
xchg
mov
test
and
xor
or
cli
loope
in
stos
test
subb
mov
jle
insl
shll
push
inc
mov
insl
and
sub
stos
mov
sarb
pop
nop
add
sar
das
lret
les
push
pop
jno
lock
jno
lock
xor
or
add
aam
fists
cli
fldl
cli
mov
dec
je
push
mov
mov
scas
and
fdivs
jp
repnz
ret
insl
hlt
scas
insl
inc
add
loopne
loop
sbbb
push
xchg
stos
fs
into
mov
adc
push
outsl
xorl
xor
mov
pushl
cmp
adc
ret
or
es
addl
clc
mov
add
testb
mov
and
or
adc
inc
loop
and
push
pop
and
lret
inc
jae
fistps
jg
add
sub
push
in
pusha
and
loope
or
adc
arpl
adc
fidivrs
outsl
mov
pop
jno
pushf
inc
ljmp
inc
mov
and
adc
rclb
mov
fists
cmp
int3
bound
subl
loopne
pusha
sub
outsl
sub
ljmp
call
adc
fs
mov
nop
mov
cmpb
xchg
xor
push
inc
push
push
ljmp
ret
popf
addb
rcrb
sbb
stos
addr16
xchg
dec
push
or
into
mov
or
xchg
repz
dec
out
into
mov
or
dec
clc
sbb
inc
fists
inc
xchg
clc
jecxz
dec
pusha
mov
popa
pop
push
adc
aam
jg
mov
fimuls
cli
inc
adc
aaa
ljmp
cmp
xchg
icebp
sarb
push
dec
repz
push
cs
cld
or
lret
jo
jo
add
mov
repz
out
lock
sub
out
out
orl
cs
jecxz
or
and
mov
clc
loopne
lcall
xor
sub
add
add
mov
int3
outsl
movsl
adc
pop
flds
push
push
add
mov
jo
shll
adc
test
add
or
hlt
ljmp
add
ljmp
mov
add
or
xchg
jecxz
insb
xchg
hlt
push
pop
or
push
adc
and
dec
mov
push
into
add
iret
into
fbstp
movb
sti
adc
test
or
repnz
adc
add
add
sbb
sub
sbbl
mov
add
xor
mov
fisttpl
ret
insl
and
arpl
fdivr
push
inc
jmp
insl
out
mov
nop
out
andb
pop
pop
lock
and
imul
es
jl
clc
cmp
add
add
in
cmp
push
fwait
movsb
xchg
sub
xchg
xchg
add
mov
mov
fs
movsb
scas
cld
in
add
clc
sbb
jecxz
mov
ret
fwait
jp
sahf
repnz
jmp
call
cmpsb
ret
xchg
push
push
pop
fwait
dec
lock
out
add
jo
sarb
ret
mov
pop
ret
lock
jp
das
cli
mov
xchg
fwait
repnz
notl
out
pop
push
cld
filds
jo
or
or
je
out
pop
and
mov
fldenv
inc
xchg
mov
mov
cmpsb
fnsave
add
arpl
adcb
add
fdivl
shrb
sbb
or
mov
add
sbb
add
inc
or
or
mov
mov
rcrb
js
and
testb
or
fcomip
pop
add
xchg
mov
es
test
popa
cli
or
loop
pop
add
jg
mov
or
mov
pop
xchg
int3
push
sarb
lock
push
mov
add
sub
push
push
xor
or
mov
mov
inc
jb
insl
testb
ljmp
mov
inc
mov
test
shrl
jecxz
in
int
scas
scas
insb
repnz
notb
adc
jg
stos
and
mov
adcb
sbbb
loop
ret
fiaddl
dec
loop
jmp
sub
xchg
in
mov
or
stc
and
mov
and
cli
fsubr
nop
rep
add
in
notb
cld
int
insb
ljmp
jmp
adc
push
pop
ds
push
daa
int
or
out
and
jg
out
je
data16
out
add
loopne
xchg
std
xchg
xor
test
ja
loope
add
in
and
push
jb
addb
mov
imul
cmp
scas
fdivr
fidivrs
insl
mov
adc
sbb
adc
fwait
xor
or
mov
aad
add
xchg
and
mov
arpl
sbb
adc
adc
or
mov
test
insl
pop
loopne
shrb
inc
or
incl
inc
outsb
and
loope
xchg
push
mov
and
in
and
rclb
inc
or
cli
inc
aam
mov
mov
aaa
xchg
das
enter
mov
mov
jbe
repnz
sbb
sbb
jmp
bound
inc
pop
and
fdivs
orl
mov
inc
je
cs
data16
cmp
sub
mov
fwait
test
mov
mov
jmp
cmp
cli
addr16
mov
mov
movsb
lcall
sbb
mov
push
sarb
mov
add
out
rclb
dec
xchg
in
mov
mov
rolb
add
inc
add
adc
incl
mov
loopne
insb
mov
hlt
sti
pusha
sub
jle,pn
and
push
xor
and
es
and
sub
xor
test
inc
repz
sub
hlt
addr16
xor
push
adc
add
ljmp
and
and
andb
and
and
scas
das
decb
xchg
mov
test
adcl
or
sub
sti
loop
in
out
push
inc
add
or
or
sub
xorb
sub
or
or
fbstp
or
sbb
in
and
mov
sbb
xchg
mov
xchg
out
sbb
pusha
or
add
sarb
inc
fimuls
mov
xchg
xchg
adc
add
xchg
mov
mov
fists
add
sub
fwait
imul
push
xor
mov
inc
outsl
push
push
imull
dec
outsw
pusha
push
mov
sbb
in
xor
xor
loopne
mov
sbbb
and
fwait
mov
push
jp
fs
cmp
mov
orb
bound
add
xor
push
mov
and
adc
jnp
sub
pop
add
xorl
sbb
insl
xchg
xchg
or
push
xor
sarb
lea
pusha
test
mov
mov
aam
mov
outsb
mov
mov
cmp
inc
add
cmpsb
and
pushf
inc
sub
and
icebp
outsl
pop
movsb
cltd
sbbb
mov
imul
mov
addr16
incb
subb
mov
lock
test
out
or
mov
jg
jg
push
add
xchg
movsl
mov
je
pop
add
push
add
ja
imulb
push
add
ret
mov
in
or
or
mov
sub
pop
jo
out
xor
in
int
add
sbb
loopne
shlb
sbb
inc
push
loopne
push
loop
or
xor
incl
pop
push
mul
mov
ss
add
fistpll
or
dec
adc
push
aad
fstpl
xchg
cld
mov
adc
cwtl
pop
push
or
sub
and
push
mov
incl
pop
mov
movb
xchg
mov
adc
adc
push
inc
and
cmc
push
and
sub
movsb
scas
push
std
outsl
clc
adc
push
cwtl
loopne
icebp
nop
pop
repnz
xor
dec
ljmp
out
mov
imull
inc
push
sbb
fdivrs
lock
add
sbb
lods
pushf
mov
add
sbb
in
int3
aas
pop
int3
stos
jo
add
lcall
aam
subb
gs
outsl
mov
mov
loopne
adc
push
inc
inc
jp
pop
and
clc
jmp
or
adc
mov
std
pushl
ficoms
mov
adc
mov
adc
push
movsl
mov
or
insl
mov
mov
les
gs
jo
outsl
clc
add
gs
pusha
mov
scas
pop
mov
mov
repnz
sub
add
pop
jmp
notb
inc
enter
int3
inc
aad
mov
and
xorb
popfw
xor
or
bound
cld
pop
jno
xchg
jmp
adcb
cmp
push
fldl
ret
sahf
inc
add
std
inc
pop
sub
mov
push
push
adc
inc
sub
jmp
call
add
into
mov
push
mov
mov
pushl
into
popa
push
lret
andl
add
loopne
enter
mov
out
sar
aaa
mov
mov
mov
cs
push
add
mov
adc
adc
jle
decb
xor
dec
loopne
add
xor
std
scas
adc
loop
and
rclb
mov
sbb
xchg
or
jg
stos
add
mov
cld
icebp
push
push
dec
test
push
andb
stos
jmp
repz
adc
dec
xchg
push
ja
cmpsb
mov
mov
adc
jecxz
push
test
inc
sub
into
mov
andb
and
mov
jae
or
cs
or
ret
lock
adc
lods
or
arpl
or
rorl
add
scas
loop
outsl
pop
xchg
gs
std
add
into
push
pushf
dec
mov
mov
mov
mov
adc
cwtl
dec
mov
test
jo
stos
imul
cwtl
cltd
cli
nop
add
in
push
adc
pop
or
test
lock
dec
mov
sbb
sti
in
push
lods
fildll
sub
and
mov
push
sbbb
xchg
sbb
ljmp
jns
push
push
add
or
add
data16
push
rclb
std
mov
add
add
lods
lret
call
add
cmp
sub
cmp
outsl
push
or
fs
add
add
sbb
fwait
jecxz
mov
mov
inc
mov
rcr
loopne
insl
add
loopne
cmp
ss
inc
add
pop
cmpsb
lods
mov
add
add
cmp
fwait
sub
pop
hlt
mov
shrl
mov
push
ljmp
ret
fisubl
dec
frstor
int3
fiaddl
or
fmull
pop
shlb
jo
adc
gs
jle
lods
repnz
daa
clc
call
inc
xchg
clc
xchg
add
push
cmp
push
and
sbb
imul
out
mov
test
inc
push
inc
xchg
shlb
out
outsl
lock
jle
adc
and
insl
sub
mov
add
pop
sbb
aam
xor
cmp
add
or
shl
add
sub
lcall
loopne,pn
mov
pop
adcl
or
jle
shll
cwtl
and
rcll
nop
adc
jg
jle
adc
push
add
push
push
pop
xor
push
out
ljmp
mov
push
rolb
mov
and
xchg
rolb
sub
fidivl
arpl
xchg
xlat
nop
inc
pop
jno
pop
ficoms
rorb
test
pushl
push
mov
insb
rcrb
sub
jmp
inc
push
addl
xchg
decl
adc
lock
in
jo
pop
xchg
arpl
lahf
add
pop
pop
aam
push
lock
sub
popa
fistl
shll
out
or
fmull
pop
fildll
pop
lahf
hlt
adc
add
ret
lock
sub
bound
xor
push
and
mov
push
jmp
clc
adc
mov
cs
jmp
stos
shlb
mov
fidivs
fsubl
add
jmp
add
in
pushf
repnz
sbb
dec
bound
shll
and
and
push
aam
add
fbld
stos
sbb
es
ds
push
mov
mov
mov
rol
dec
cmp
repz
aas
fdivr
out
cli
pop
xchg
bound
jb
bound
dec
jp
add
xchg
mov
mov
outsb
and
cmp
shll
mov
push
push
and
add
add
out
add
adc
add
sub
sbb
pop
ja
mov
push
mov
add
push
fstl
mov
outsl
add
jnp
add
push
xor
cwtl
ljmp
mov
pop
inc
rolb
and
add
xor
xor
insl
clc
in
lods
mov
pusha
movsl
out
add
lock
clc
sbb
lock
and
or
outsb
cmc
nop
push
cli
ljmp
push
xor
or
jbe
add
lock
mov
mov
rcl
xchg
cld
sbb
data16
pop
or
lods
rclb
and
out
push
xchg
ljmp
repnz
push
cs
sbb
push
rorb
sbb
inc
mov
loopne
frstor
lret
mov
add
mov
add
mov
fistl
dec
push
pcmpeqw
pop
rol
xchg
mov
and
fwait
cmpsb
xchg
add
int
test
int
cli
fildl
sub
mov
lock
or
xor
jnp
shl
adc
or
adc
pop
xor
dec
push
lcall
add
fs
and
push
loop
bound
mov
add
dec
call
mov
mov
adc
add
arpl
and
or
sub
and
mov
test
shrl
add
pop
sub
ljmp
add
jbe
mov
add
jp
ret
pop
or
push
sbb
mov
jg
add
xor
lcall
and
and
and
movb
fmuls
out
mov
add
or
mov
stc
mov
mov
add
repnz
data16
fstl
out
sbb
xchg
or
pushl
jmp
or
mulb
andb
add
cs
loop
stos
nop
inc
adc
pusha
bound
adc
mov
arpl
add
sbb
and
or
addr16
or
in
push
inc
mov
adc
fisttpl
lcall
or
xchg
icebp
inc
divb
outsb
inc
add
inc
add
cmp
add
ds
mov
fists
out
in
pusha
xlat
insl
movsl
ret
outsl
ss
into
or
inc
insb
movsl
incb
sbb
xchg
ljmp
and
adc
inc
xor
loope
lock
xor
lret
push
and
fbstp
jg
ret
ret
mov
mov
sbb
mov
ljmp
inc
test
fwait
out
and
loop
sub
orb
iret
add
add
in
jle
ljmp
dec
loop
shll
in
ret
dec
or
pop
mov
pusha
ud0
pop
or
push
mov
pop
mov
hlt
andl
adc
or
in
mov
xchg
inc
test
push
sbbb
aaa
inc
pusha
jg
sub
pop
add
lods
hlt
mov
jmp
ljmp
sub
pop
out
sbb
sub
ret
inc
ffree
jmp
js
lock
mov
out
insl
xor
jg
sbb
add
pop
jl
fadds
xor
loop
push
push
ljmp
inc
add
mov
mov
loop
rcl
sbb
sub
or
or
xchg
out
mov
js
mov
push
adc
arpl
fdivrs
mov
fistpll
sbb
mov
and
subl
roll
pop
and
mov
fisubl
jbe
testb
insb
mov
jl
outsl
mov
dec
xorl
sbbb
imul
sbb
pop
add
pushf
xor
pop
mov
xorb
shrl
and
int3
in
mov
mov
loopne
imul
je
cmp
sbb
ja
sub
or
mov
ds
stos
add
ds
sbb
xchg
or
in
ficoms
cmp
mov
jl
xchg
or
mov
scas
clc
fildl
add
push
data16
fwait
xor
add
add
arpl
mov
dec
mov
imul
mov
xchg
loopne
pop
add
lock
decl
cmp
out
inc
add
fwait
mov
mov
and
push
stc
or
stos
ss
ljmp
adc
pop
inc
and
rclb
dec
ds
dec
dec
inc
mov
cli
sub
push
cmpsb
loopne
inc
cmpsb
ficoms
adc
dec
rcrb
jbe
outsb
jle,pn
das
mov
aad
sbb
rep
idiv
add
xchg
clc
fnsave
lcall
out
in
int
cmp
or
loopne
add
movsb
sbb
stos
call
mov
aad
fisubrs
daa
push
push
sbb
test
or
sbb
shlb
cmp
fwait
adc
shrb
jecxz
adc
es
imul
jg
lock
roll
scas
sbb
imul
mov
clc
or
sub
lea
in
cmpsl
mov
test
mov
mov
call
pop
inc
add
mov
imul
cmpb
scas
inc
jecxz
pop
push
or
push
cmp
int3
mov
push
mov
sbb
andb
fildl
cmp
inc
and
and
inc
les
xor
in
inc
inc
add
pusha
push
sbb
xchg
sub
and
adc
push
dec
pop
popa
insb
jp
adc
jbe
mov
enter
sti
jmp
pop
gs
into
add
outsb
mov
sbb
call
sbbl
lock
jl
clc
mov
mov
jns
mov
adc
add
mov
and
repnz
data16
mov
or
popa
inc
lahf
jecxz
gs
and
cmpsl
lret
sub
mov
imul
das
and
dec
pop
sbb
or
jle
rolb
push
mov
lock
lds
int3
cmc
loope
adc
and
inc
adc
mov
fwait
push
mov
loop
pop
in
bound
inc
ret
into
push
add
push
test
rcrb
mov
fldt
fldl
bound
mov
add
add
out
cmp
xor
mov
xchg
stos
fst
or
cld
orb
mov
and
rorb
sub
dec
inc
mov
fimull
push
push
xlat
decl
loop
insb
out
mov
dec
add
call
or
insb
ljmp
adc
js
sti
fistpll
loop
fisubs
cmp
add
and
das
xchg
mov
rolb
dec
fstps
push
mov
aad
rcrl
dec
adc
aam
push
rcrl
mov
in
and
or
pusha
shll
ds
fisttpll
cmp
icebp
das
fsubs
xchg
lock
and
in
xor
sbb
xor
add
push
and
add
and
sub
outsl
ja
mov
shlb
mov
fs
jg
push
in
xor
push
inc
or
jbe
xor
jne
add
outsb
cmp
imulb
dec
ret
add
test
ds
jb
adc
push
push
push
outsl
mov
fwait
mov
data16
mov
add
jbe
push
mov
aam
xchg
or
dec
clc
add
mov
clc
lcall
sbbb
inc
push
cli
inc
sarl
jge
pop
push
push
nop
insb
add
xchg
rcll
fadds
js
cli
insl
mov
sbb
cmp
pop
fs
int3
shrb
lahf
test
push
add
outsl
jo
or
and
mov
mov
cbtw
stos
xor
sub
ret
or
jae
nop
inc
mov
add
mov
cs
ljmp
cmp
mov
loope
jmp
add
adc
sbb
ljmp
push
loop
push
loope
add
inc
pop
adc
out
pminsw
ljmp
xor
fisubrs
mov
push
aad
mov
ror
add
jbe
mov
int
jl
push
add
or
inc
mov
into
dec
push
add
loope
pop
mov
dec
inc
push
push
and
mov
pop
lock
in
mov
push
add
loope
mov
repnz
cs
mov
or
push
es
je
and
movsb
mov
nop
ljmp
jbe
xor
sub
add
loop
iret
jmp
sbb
xchg
scas
jmp
shlb
scas
xchg
fisubrl
add
push
out
jo
out
sbb
in
imul
inc
daa
push
arpl
push
push
or
lahf
add
mov
push
decl
ljmp
or
sub
pushl
add
popf
mov
lret
cld
imul
pop
pusha
aaa
pop
cwtl
xchg
cli
mov
ficompl
sub
fisubrl
jg
insb
mov
pop
lock
add
and
loope
das
frstor
add
sbb
es
cmp
or
xor
add
mov
imul
loopne
loopne
stos
mov
cwtl
push
push
mov
es
pcmpeqd
jno
fidivrl
popa
je
loopew
out
lock
mov
adc
jo
xor
jb
adc
stos
ja
adc
ds
adc
ja
add
movsb
pop
adc
nop
add
lock
das
or
mov
or
cmp
cli
adc
lar
mov
fsubrp
xchg
mov
cli
imul
jb
mov
loopne
and
or
inc
or
loopne
lds
cwtl
aad
es
imul
popa
mov
xor
adc
shl
cli
mov
or
jo
cld
add
push
sub
cmpb
lods
movsb
add
ds
out
icebp
jg
xor
inc
rclb
test
clc
aaa
mov
cs
adc
adc
in
outsl
mov
hlt
mov
lods
adc
clc
popa
adc
mov
hlt
or
xchg
inc
xchg
ret
mov
les
je
add
fwait
movsl
into
nop
add
insb
in
data16
jmp
add
rclb
add
nop
int
in
add
cmpsb
fldl
add
inc
lds
and
mov
iret
dec
fdiv
not
add
cmp
push
sub
sbb
add
and
jo
pop
repnz
add
push
dec
mov
xor
popf
push
mov
jmp
push
cmpsb
rol
mov
mov
lods
mov
push
repz
mov
mov
lock
jmp
scas
ficoms
subb
scas
aam
cmpsl
out
cld
lds
mov
daa
inc
xchg
mov
cld
dec
mov
mov
out
xor
fistpl
adc
and
outsl
push
push
mov
ss
xchg
xchg
mov
or
or
cmp
lock
lods
push
cld
push
mov
mulb
pop
add
push
scas
add
loop
or
xorb
adc
outsl
push
sbb
aam
mov
mov
sub
sub
mov
push
or
inc
es
in
orl
into
outsb
mov
add
rolb
lds
incl
cs
std
jo
in
add
andl
pop
push
push
out
adc
shrl
xlat
mov
push
adc
adc
in
xor
or
loopne
add
push
or
dec
call
es
out
add
pop
pop
adc
dec
mov
lock
gs
addb
cli
jle
and
or
lcall
test
adc
mov
adc
sbb
jmp
fucomip
out
clc
push
loope
mov
hlt
insl
out
aad
imul
ret
add
subb
and
loopne
outsb
adc
xchg
xor
ret
ja
cld
inc
add
cs
outsb
mov
sbb
sbb
outsb
mov
std
loopne
adc
mov
repnz
stos
sarl
push
inc
daa
jp
int
in
stos
sbb
push
std
or
add
push
push
dec
popa
sub
aas
mov
push
lock
pushf
push
adc
repnz
jno
mov
or
data16
sahf
or
and
mov
js
add
adc
mov
test
sub
fildl
rorb
insl
es
aad
cli
outsl
incl
notl
xor
repnz
and
mov
adc
adc
fs
push
jne
rolb
outsl
jg
cld
ficoms
rcr
sbb
xor
push
out
adc
incb
xchg
mov
test
add
mulb
xchg
push
mov
insl
cmp
add
shrl
adc
add
call
add
fstl
fwait
testb
or
iret
and
fists
adc
mov
xor
nop
aad
mov
fisubrl
add
or
arpl
loopne
xchg
lods
sbb
push
mov
push
jb
sbb
xor
adc
out
push
adc
add
inc
loope
testb
sti
daa
mov
inc
loope
inc
pushf
push
jl
add
subb
cwtl
jg
inc
sub
jle
push
push
mov
cmp
outsb
addl
sub
aaa
xor
insl
xchg
repnz
add
in
in
stos
or
pop
hlt
scas
sub
add
pop
lcall
or
jmp
mov
jb,pn
imul
sbb
mov
mul
aaa
cmp
in
mov
cmp
add
pop
push
leave
add
and
outsb
sub
outsl
movsl
add
xor
or
sbb
mov
je
xchg
inc
sarl
andl
mov
sub
push
adc
push
insl
neg
mov
mov
xor
out
pop
cmpl
std
inc
aad
in
inc
and
add
in
sbb
and
loope
mov
outsl
fldl
add
pushf
je
push
ret
repnz
and
mov
lock
shr
orl
sbbb
mov
push
aad
cmp
ljmp
xor
sub
or
adc
notb
add
js
dec
sbb
repnz
mov
xchg
xchg
int3
sbb
cs
in
orl
frstor
jmp
sahf
mov
xchg
lods
loop
and
repnz
sahf
popw
mov
jmp
std
das
or
push
gs
cmp
das
dec
mov
call
movsl
roll
loopne
in
xor
aad
add
mov
mov
push
inc
mov
outsb
push
lret
or
mov
incl
push
pushf
sbb
pop
cmp
arpl
pusha
pop
loop,pn
addr16
inc
dec
xor
in
pop
jb
push
sub
push
mov
movsl
les
nop
idivb
jg
add
inc
or
or
xchg
mov
shl
mov
ds
inc
xor
orb
lea
jl
mov
andl
stos
inc
or
adcb
ljmp
inc
xor
subb
out
lods
ret
xor
bound
xor
inc
jo
add
pop
ret
sbb
mov
mov
xchg
hlt
das
js
xchg
in
ljmp
mov
inc
and
or
xchg
mov
add
pushl
push
data16
addb
xchg
cmpb
cmp
clc
inc
call
add
inc
pop
mov
jbe
loop
shl
ljmp
cld
in
add
js
int
in
gs
sbb
pop
push
pop
fisubrl
fists
and
ffree
jge
in
inc
int
and
push
mov
add
add
xor
orb
adc
insl
jle
roll
cli
pop
or
push
lea
push
test
push
stos
push
popa
adc
shlb
jecxz
sbb
stos
inc
add
mov
and
pop
fisttpl
rcll
lret
repnz
pop
xor
scas
push
lea
decl
xchg
loopne
ljmp
test
jmp
mov
add
push
add
movb
or
ret
ja
mov
leave
dec
cld
push
fs
mov
jge
dec
or
mov
ret
mov
pop
pusha
xchg
pop
and
pop
xor
and
loop
mov
mov
rolb
xchg
push
and
pushf
test
cmp
mov
sbb
jo
pop
mov
orb
ret
loope
add
cmpsb
pusha
add
inc
mov
mov
insl
xchg
data16
out
lcall
js
pop
shl
fsub
mov
pop
mov
cli
jae
adc
addr16
cwtl
loop
mov
mov
out
sub
and
mov
ficomps
push
repz
clc
adc
fisubs
or
and
ret
mov
mov
outsl
js
adc
ret
icebp
and
mov
and
jb
fistpll
test
inc
mov
into
les
inc
sahf
jb
ss
ljmp
les
mov
pop
mov
movsb
and
mov
and
pop
add
jmp
push
mov
add
fimuls
cwtl
out
shll
or
cld
movsb
or
mov
mov
ret
addr16
or
adc
inc
add
clc
add
sbb
jp
loopne
stos
addb
mov
aam
loope
rorl
mov
and
or
fdivrp
mov
xor
jl
shlb
and
add
addr16
call
cmpsb
repnz
xchg
mov
add
adc
and
and
sbb
pop
cmc
sub
xor
call
add
sub
cmp
popa
aas
or
loopne
mov
add
addb
test
sub
adc
jp
decl
outsl
stos
lock
cmc
mov
push
inc
jg
or
mov
inc
adc
push
insl
and
mov
shlb
sbb
push
mov
and
pusha
add
jl
loopne
xor
and
ret
jl
jno
call
inc
add
cld
call
sbb
pop
push
inc
loopne
add
add
xor
jo
sbb
into
and
lods
andl
mov
cld
pushl
andb
popa
movzbl
push
repnz
outsl
cwtl
out
inc
adc
decl
inc
push
test
pusha
mov
mov
mov
and
incl
adc
cld
add
loop
adc
mov
or
testb
insl
scas
ljmp
roll
lods
adc
push
ljmp
in
jmp
mov
adc
subb
xchg
hlt
insb
mull
xor
push
jmp
cmp
popa
add
ljmp
ret
or
xchg
aad
push
ffree
in
shll
add
sbb
out
fwait
ret
repnz
xchg
mov
out
out
xchg
arpl
dec
or
es
jmp
loopne
dec
fisttpl
out
insl
add
loope
cs
dec
mov
or
jae
loopne
out
mov
les
mov
pop
inc
mov
push
xchg
xchg
loop
and
scas
int
adc
in
ja
mov
dec
nop
cmpsl
lock
pop
rep
mov
loopne
add
std
mov
add
xchg
subb
out
inc
mov
jno
call
aas
repz
hlt
mov
ljmp
jle
scas
roll
xchg
add
pop
hlt
pop
loop
imul
mov
xor
aaa
jo
outsl
mov
and
add
lcall
imul
add
nop
pop
sarb
add
aas
mov
sub
es
pop
decb
lock
jmp
xchg
movsl
pusha
xchg
nop
pusha
add
inc
mov
hlt
insl
mov
inc
fucomip
mov
add
mov
jge
icebp
jns
push
sar
ljmp
sbb
xor
mov
rclb
adc
adc
insb
mov
mov
pop
cld
incl
sbb
lock
fucom
xor
add
andb
nop
nop
fsub
push
test
mov
insl
jmp
add
fildll
addb
ljmp
das
cld
imul
popa
inc
int
push
fistl
dec
stos
adc
mov
ja
or
inc
scas
nop
xor
add
jno
mov
push
dec
inc
add
loopne
inc
xor
xor
negb
pop
popa
aaa
xchg
push
fbld
fwait
or
arpl
fnsave
add
push
xchg
push
test
jo
inc
imul
std
cmp
shlb
jg
stos
test
mov
loope
sbb
icebp
inc
movsb
mov
add
sbb
push
add
mov
mov
loop
mov
mov
insb
mov
insl
in
xchg
push
push
rorl
xor
xchg
jecxz
xchg
shl
pop
sbb
push
push
ljmp
clc
stos
add
mov
call
idiv
pop
dec
movsl
inc
rorb
adc
add
jo
std
outsb
clc
into
popw
add
dec
insb
test
adc
xchg
out
std
lds
out
cwtl
push
hlt
mov
sti
jg
mov
or
pop
add
jmp
mov
inc
sahf
xor
cmp
add
add
lock
add
mov
lock
push
scas
stos
adc
push
pushl
pop
mov
ret
jne
cmp
push
mov
fldenv
test
incl
cwtl
mov
stos
xorb
sub
mov
ja
decl
jno
cld
xor
add
out
cmp
inc
and
shlb
stos
shrb
cmp
or
test
mov
in
scas
loop
lods
mov
sbb
cld
outsl
aaa
inc
shrl
sbb
insb
add
mov
testb
add
or
sub
adc
cld
adc
test
mov
and
jb
or
lret
mov
mov
add
insl
rcr
mov
in
push
push
pop
movaps
incl
out
dec
xor
sbb
and
jbe
xchg
cli
incl
jecxz
mov
dec
ret
xor
loope
loop
push
xchg
and
mov
enter
or
and
imul
movsl
mov
adc
call
imul
pop
lds
add
xor
adc
jl
imulb
mov
add
ret
adc
or
add
add
cmpsb
and
cmpsl
jmp
addb
add
loope
xor
cmp
xor
outsb
xchg
adc
jge
mov
sub
outsl
xor
add
add
lcall
or
out
pushf
add
mov
sbb
stos
mov
or
lock
dec
decl
or
inc
add
mov
sbb
adc
add
adc
rcrb
adc
nop
imul
xchg
ret
shl
inc
test
xor
decb
lods
or
dec
and
mov
test
add
cld
ljmp
pop
mov
xchg
mov
orb
mov
in
lcall
mov
add
and
or
pop
adc
jae
shll
clts
scas
and
jle
add
test
mov
push
pop
subb
sbb
mov
subb
mov
jl
lock
cmpb
les
lock
enter
jo
mov
xor
or
shll
push
or
cld
mov
jno
call
jl,pn
sbb
mov
inc
mov
xchg
xchg
and
sub
outsl
adc
call
out
rolb
in
mov
xchg
jo
adc
rorl
dec
rorb
adc
lock
les
aam
mov
pusha
add
xor
push
sbb
push
mov
mov
xchg
pushf
push
mov
inc
addb
inc
pusha
pop
jmp
adc
xor
ficomps
push
and
fcmovnu
lock
push
out
pop
enter
push
ror
movsb
jmp
adc
fidivrs
mov
out
push
push
pop
push
sub
and
loope
mov
add
adc
data16
add
mov
mov
sbb
mov
inc
dec
jecxz
add
pusha
nop
inc
pop
imul
pop
call
subb
mov
xor
shrl
sar
add
add
outsb
mov
jg
scas
scas
xchg
mov
push
adc
out
mov
add
sbb
dec
decl
mov
rcrl
inc
shl
pusha
mov
pushl
insl
push
push
add
test
mov
clc
insl
inc
add
xchg
in
add
inc
inc
subb
into
inc
push
xor
clc
pop
xchg
jno
out
xor
pop
sbb
nop
and
rorb
pop
adc
sbb
push
or
add
pop
arpl
cmp
push
pop
pop
pusha
adc
push
enter
adc
cwtl
jle
js
mov
push
or
imul
sub
add
jbe
sbbl
loopne
or
sub
pop
ljmp
inc
sbb
out
push
movsb
cwtl
lret
popa
xor
xchg
mov
int3
or
pop
cld
mov
lods
stos
add
mov
inc
fs
scas
add
loopne
cmp
scas
mov
mov
mov
pop
je
push
inc
lock
sub
pop
inc
and
inc
pop
xchg
mov
outsb
pop
repz
cmpsb
jo
out
hlt
push
ds
arpl
sti
add
nop
push
inc
nop
sbb
xchg
jmp
enter
or
xchg
popf
mov
dec
pop
outsb
aad
jmp
insl
push
or
sbb
mov
push
dec
xor
insl
loopne
fsubrl
gs
and
and
mov
push
xor
and
jp
cltd
stos
scas
mov
mov
ret
cwtd
adc
cmpsb
stc
add
lods
fs
mov
lahf
or
dec
test
adc
sub
jbe
adc
xor
test
fisubrl
loopne
inc
xchg
sarb
inc
push
add
mov
repz
ljmp
add
add
pop
mov
xchg
push
jmp
jp
add
add
lret
loop
and
scas
add
xadd
xchg
add
cmpsb
add
mov
add
ljmp
stc
add
mov
sarl
jb
pop
mov
sbbb
push
jl
clc
sbb
xchg
pushf
sbb
out
fisttps
mov
or
ret
insb
loopne
mov
data16
xchg
loop
out
ljmp
or
mov
sbb
jecxz
loop
or
jns
add
mov
fs
out
inc
add
es
loop
test
outsb
out
clc
and
icebp
cmpb
dec
pop
xchg
jle
xchg
ljmp
or
push
jl
clc
fldl
lcall
push
and
xor
in
aaa
sub
add
je
or
sub
out
fildll
adc
dec
mov
popa
rcrb
ljmp
add
je
fistpll
xor
test
out
add
loope
scas
fucomi
xchg
cmp
cmpb
cmp
xchg
clc
outsb
mov
sbb
cli
push
inc
rorl
and
data16
inc
addr16
mov
test
add
outsl
insl
push
push
inc
adc
jbe
jo
push
dec
call
out
sub
loopne
stc
and
inc
inc
pop
pop
or
je
inc
insb
imul
addb
outsb
call
adc
jbe
fbld
mov
mov
or
rclb
push
mov
inc
mov
dec
insb
pop
test
mov
add
sbb
xchg
stos
fbld
adc
xor
fdivl
xor
lods
call
mov
popf
test
lcall
cs
mov
fisttpl
or
outsb
mov
repnz
pop
mov
mov
cmp
loopne
nop
lcall
add
fs
mov
xor
lcall
int3
mov
insb
mov
sub
sbb
in
jle
cwtl
mov
lds
sbb
nop
jmp
fs
in
mov
enter
int3
add
mov
jns
add
mov
hlt
push
push
in
fwait
pop
cwtl
in
sub
mov
and
adcb
rcll
pop
mov
in
inc
jl
or
test
popw
lret
xchg
jecxz
cmc
add
or
add
or
mov
push
sub
push
xor
loop
cwtl
adc
xchg
pusha
rolb
add
cmp
dec
in
or
xchg
loopne
das
sbb
outsl
jmp
and
mov
and
or
das
cmp
xchg
sahf
mov
cmc
pop
clc
and
sbb
fildl
pop
loope
push
std
add
imul
jg
aaa
push
cmpsb
repnz
add
in
push
std
push
nop
fnsave
xchg
jecxz
adc
scas
sbb
rcrb
cmp
adcb
aam
test
jns
sbb
jle
ss
inc
jae
scas
orl
mov
mov
fisubrl
push
aam
xor
std
fidivrl
cmpb
loope
ret
add
cmp
in
push
lea
inc
push
icebp
out
aaa
je
repnz
mov
daa
push
imul
into
sbb
dec
popa
add
iret
or
data16
fldt
xchg
lds
add
ljmp
loop
or
jle
inc
and
sub
jmp
les
stos
ljmp
imul
jle
rclb
out
add
or
inc
inc
sbb
mov
or
data16
ljmp
push
sub
mov
addb
fwait
fcomip
and
stos
mov
stos
mov
shll
mov
dec
mov
insl
jmp
inc
int3
adc
out
mov
pusha
add
cmpsb
addr16
mov
inc
pop
cwtl
add
icebp
add
mov
mov
push
mov
popa
add
ja
decl
and
lret
add
insl
xor
sub
cmpsb
in
lcall
adc
adc
add
adc
ds
xlat
cmpsl
cwtl
pushl
pop
mov
nop
xchg
movsb
insl
sti
mov
aad
jecxz
adc
adc
add
shlb
mov
das
mov
loopne
call
or
push
pop
ret
sbb
push
cmp
and
pusha
jle
lods
xor
test
mov
adc
push
xchg
ljmp
and
cmpsb
gs
adc
add
lea
in
xchg
xchg
scas
adc
xor
pushf
imul
roll
sub
jbe
pusha
cmpsb
out
xchg
out
andb
outsl
mov
popa
ret
xchg
mulb
dec
lahf
loop
scas
push
push
outsl
mov
and
pushf
mov
sub
inc
mov
fistpl
jle
inc
or
les
insb
loopne
out
dec
inc
call
jmp
sbb
or
inc
mov
push
fisttpl
in
pop
pop
adc
push
pushf
ljmp
xchg
push
clc
or
add
lock
loopne
in
subb
and
in
add
sub
sbb
sub
mov
mov
sub
pop
inc
jg
push
add
xor
fisttps
or
nop
cmc
adc
lock
gs
fnstsw
push
les
add
and
dec
push
adcb
mov
ljmp
jecxz
imul
negl
out
scas
movsb
mov
addr16
test
xchg
int3
nop
mov
shr
std
push
popf
pusha
pop
movl
cmp
sub
mov
ret
mov
dec
jg
shlb
push
xchg
and
mov
jae
cmp
or
mov
mov
mov
loop
cmc
mov
pusha
pop
mov
imul
push
add
mov
jb
rolb
roll
push
jecxz
outsb
push
sub
add
mov
mov
ja
lock
rclb
mov
push
and
je
lock
sbb
scas
mov
and
fcoml
push
inc
mov
adc
add
inc
and
in
jo
cmp
sbb
and
je
pusha
push
jo
inc
inc
sti
xchg
movsb
add
push
cmp
xchg
nop
cli
or
into
xor
mov
fwait
sub
add
imul
inc
loop
inc
add
loopne
mov
mov
add
std
pop
inc
sub
or
push
pop
pop
sbb
mov
xchg
or
out
in
xchg
rol
dec
mov
push
jecxz
les
test
cld
imul
incl
outsb
mov
out
or
adc
shlb
sbb
ljmp
inc
andb
mov
popa
shll
mov
push
fs
les
mov
push
adc
jb
arpl
mov
jmp
or
andl
lock
xor
jb
sbb
push
or
push
xor
xchg
hlt
lcall
mov
mov
adc
add
pop
mov
fisttpll
jl
add
sbb
fwait
pushf
xchg
leave
xor
xor
mov
adc
mov
add
xchg
addl
adcl
push
out
mov
aam
add
sbbb
pop
and
jo
push
test
inc
xchg
out
jecxz
mov
sbb
daa
or
ljmp
test
pusha
and
fldenv
jg
ss
jo
bound
jl
ljmp
inc
or
in
add
and
lahf
lods
jmp
sbbb
and
push
and
insb
lds
ds
xchg
add
add
mov
jle
ror
sub
jg
and
add
and
inc
loope
xchg
jmp
push
add
loope
out
fisubrl
aas
and
movsb
orl
or
pop
lock
sub
outsl
sti
push
adc
push
repz
ljmp
fisubs
out
test
dec
mov
add
xchg
outsb
or
inc
cmp
and
mov
inc
inc
enter
mov
sbb
pop
dec
adc
imul
xchg
pusha
ja
push
rcrl
mov
inc
jp
cmp
xchg
decl
mov
movsl
add
mov
add
inc
jle
add
rcr
and
and
xchg
std
or
pushl
or
add
add
add
frstor
dec
hlt
out
mov
mov
jo
mov
rclb
fmul
ficoml
push
push
and
into
jg
cmpsb
pop
les
fwait
ljmp
mov
sub
inc
rclb
jb
cld
sahf
sub
fs
lret
mov
fisubl
add
or
incl
dec
popf
outsl
mov
dec
jo
gs
or
xor
jb
push
cmp
adc
aaa
lods
jge
aad
add
push
sbb
push
es
xor
xor
xor
adc
add
mov
in
icebp
cmpsb
cs
jg
inc
ret
push
rorb
repz
es
ljmp
push
cmovb
inc
idiv
add
popa
jmp
adc
inc
je
sbb
sub
jbe
js
push
mov
dec
mov
mov
add
pop
push
sub
in
cwtl
fwait
add
xor
inc
and
clc
sub
mov
loope
lret
add
clc
test
jmp
es
rolb
inc
adc
mov
ret
mov
sub
aaa
sub
dec
adc
das
shlb
cmp
lahf
and
cmpsl
xchg
sub
xor
lret
fildl
fists
xor
out
jecxz
mov
add
insb
xchg
and
jb
pop
push
sar
mov
xor
in
mov
outsl
loopne
jp
push
ret
add
movsl
ljmp
add
mov
and
testb
inc
add
and
shl
and
sub
mov
cmp
add
jg
and
mov
and
and
inc
xorb
xchg
and
repz
cmp
mov
icebp
add
or
pop
mov
call
xchg
insb
add
mov
lock
sub
loop
and
mov
aam
mov
pusha
push
insb
sbb
mov
push
inc
in
mov
mov
push
sbb
add
cli
test
dec
or
shll
mov
call
stos
outsl
lods
ret
test
mov
ret
into
add
rolb
ja
pop
lock
jno
les
movsl
ds
scas
add
or
lock
les
dec
mov
push
jg
push
rorb
sbbb
loope
fisttps
mov
push
pop
ljmp
add
outsl
adc
lock
adc
cmovp
mov
shrb
inc
sub
daa
hlt
adc
push
add
mov
popa
xor
adc
nop
push
push
loopne
adc
mov
mov
int
out
mov
decb
fsubl
dec
mov
mov
inc
imul
pop
orb
aaa
shl
add
ror
int
or
mov
fdivs
or
pop
jno
loopne
mov
in
add
push
push
in
mov
push
adc
mov
enter
jno
push
jbe
shl
lock
or
clc
push
jecxz
es
mov
lcall
adcb
mov
inc
mov
add
jmp
shrb
pusha
imul
fiadds
cmp
movsb
adc
rclb
inc
xchg
lret
mov
or
sub
xchg
xor
out
or
dec
loopne
mov
std
mov
push
add
and
movsb
inc
mov
test
add
and
aaa
rclb
add
mov
add
adc
add
jecxz
nop
mov
pop
inc
cmpsb
push
mov
add
add
adc
jo
shlb
nop
adc
jbe
xchg
push
in
cmp
sahf
push
call
push
insw
scas
xchg
jmp
in
sahf
mov
into
int
sub
and
out
ljmp
scas
xchg
push
data16
fwait
push
jmp
add
gs
push
add
push
lcall
mov
decl
dec
or
xchg
rclb
mov
insl
in
and
add
je
cli
in
pop
mov
imul
sbb
cmp
jge
mov
scas
or
jp
outsb
add
jb
jl
add
xorl
cs
test
adc
gs
jbe
mov
inc
inc
jp
add
add
inc
imul
lods
addb
sub
inc
les
daa
sbb
in
out
sbb
mov
js
sbb
ds
ret
or
rcrb
lods
shrb
out
pop
sub
dec
cmp
call
xor
flds
fidivrl
push
cwtl
or
jb
loopne
loopne
insl
lock
jno
insl
sub
xchg
mov
nop
jo
test
sub
inc
xchg
and
mov
and
push
mov
lcall
mov
xor
cs
call
mov
sbb
cmpb
or
repz
sbb
leave
jle
lods
sub
adcb
add
rcll
lret
push
test
bound
xor
inc
test
inc
and
sbb
sub
fdivl
lcall
add
in
pop
lret
and
loop
push
pop
and
pop
rcrl
test
jp
adc
adc
stos
les
test
mov
in
or
mov
fsubl
mov
jle
into
push
fiadds
cmp
inc
aas
std
outsl
insb
outsl
adc
add
repnz
rcrb
add
jnp
add
test
lcall
add
addb
ljmp
push
xchg
push
nop
gs
mov
ljmp
adcb
sarb
inc
jp
add
mov
push
loopne
test
inc
rcrb
shrb
add
pop
fwait
xor
or
add
imul
sub
xor
push
fiadds
mov
mov
mov
push
jge
stos
mov
or
ret
movsb
push
stos
test
pop
shrb
ds
rolb
in
add
mov
jp
adc
pop
inc
dec
jne
dec
mov
pop
inc
mov
jo
mov
mov
roll
xchg
and
sbb
or
aad
lret
mov
lock
insl
enter
ljmp
sbb
loopne
mov
testb
mov
les
repz
add
and
adc
sbb
mov
add
ss
sbb
ret
jo
lcall
adc
mov
loop
mov
ljmp
add
or
mov
add
subb
loop
xor
into
sub
inc
xorb
loopne
loop
mov
sti
dec
stos
dec
js
fs
in
mov
incb
mov
xchg
sbb
loopne
or
sbb
xchg
mov
lcall
pusha
cmp
rcll
add
xchg
repnz
add
mov
shll
lds
incb
cmp
mov
mov
and
mov
inc
push
gs
repnz
aad
xor
testb
mov
inc
js
mov
push
jmp
imul
pop
push
rcrb
cs
or
pop
jo
mov
insl
daa
pusha
adc
add
rolb
adc
or
or
adc
or
pop
out
int3
cli
push
inc
aad
out
shrb
es
cli
push
add
loopne
loop
xchg
and
insl
or
or
data16
std
mov
or
push
and
pop
shr
push
mov
mov
mov
push
out
mov
push
adc
dec
fsubl
sbb
fwait
call
inc
pusha
lgs
sarb
mov
push
js
or
mov
mov
mov
rolb
mov
and
or
xchg
jecxz
sbb
xchg
add
insl
mov
add
lock
repnz
add
repnz
decl
and
into
fs
dec
and
inc
mov
adc
xchg
addb
inc
push
notb
inc
push
xchg
mov
in
pop
cmpl
test
cmpl
or
loop
int3
inc
outsl
js
jmp
outsb
inc
push
or
jecxz
inc
int
xchg
add
movsb
bound
inc
push
cmp
paddw
lahf
mov
add
pop
push
push
inc
sub
sbb
push
outsl
movsl
jle
jl
add
and
std
pop
lock
pop
nop
sbb
inc
in
ret
cmovge
or
push
push
or
bound
push
mov
mov
mov
mov
cli
sbb
pop
push
push
push
cli
pop
sbbl
popa
jb
add
arpl
clc
push
lods
lret
push
gs
shll
add
mov
dec
cmp
ljmp
decb
add
imul
sub
dec
imulb
cmp
adc
and
push
push
movsl
push
out
mov
push
sub
add
push
sub
outsl
filds
push
inc
es
sbb
aas
or
es
or
mov
xchg
fimuls
pop
sbb
das
mov
pop
fistps
inc
or
out
fisubs
add
shl
fnstsw
scas
js
and
jbe
mov
or
icebp
ljmp
femms
lea
mov
fdivrp
imulb
nop
repnz
push
cs
pusha
mov
ss
notb
inc
in
test
lcall
adc
adc
adcl
nop
sbb
in
outsl
sub
stc
mov
sahf
lret
ljmp
shrb
sti
add
mov
mov
sub
or
ret
adc
xchg
out
mov
push
rcrl
pop
into
fisubrl
cmpsl
xchg
push
lret
pop
mov
outsl
jo
add
addb
pop
adc
dec
cmp
fwait
add
add
push
stos
jbe
or
jp
bound
clc
popa
push
insl
rcrb
cmp
out
add
push
sbb
cli
adc
mov
mov
pusha
cmp
cli
decl
cmp
data16
test
cwtl
int3
cli
das
js
and
addl
mov
je
cmp
push
add
dec
sub
cmpsb
test
mov
nop
fcmovnbe
or
scas
or
icebp
add
stc
add
jp
test
add
mov
push
mov
or
mov
pop
mov
lcall
pushf
and
push
xor
xchg
inc
xchg
adc
shll
mov
jmp
push
int
xor
mov
popf
xchg
aas
push
ljmp
or
fs
in
adc
inc
prefetch
stc
cmp
shl
insl
mov
cli
pop
sub
sub
data16
xchg
jle
adc
xchg
scas
mov
aad
or
das
mov
add
cbtw
mov
es
xchg
xchg
mov
and
pusha
adc
int
orb
dec
jg
ja
mov
mulb
fnstsw
dec
adc
xchg
lock
incl
test
mov
or
mov
adc
lahf
push
and
mov
repz
or
call
push
and
aas
pop
mov
rol
fwait
idivb
sub
rcll
add
inc
clc
test
test
fwait
insb
les
dec
push
adc
push
es
nop
mov
sti
incl
sarb
cmp
fistpll
inc
add
cmpsl
push
and
fwait
bound
xor
aaa
and
mov
addl
xor
cmpsb
inc
inc
outsl
add
and
cmpsb
adc
cli
jmp
inc
xchg
testb
loopne
inc
xchg
xor
add
add
pusha
xchg
subb
aam
or
push
mov
mov
sub
push
jo
call
inc
or
mov
add
pmaxub
add
mov
xor
repnz
mov
cli
mov
test
lock
popa
push
mov
stos
ret
lahf
xor
icebp
add
decb
xor
adc
or
fldl
mov
nop
push
ljmp
fisubs
adc
dec
rcll
cli
ja
fmuls
lods
push
add
and
mov
cmpsb
push
adc
or
xor
adc
and
mov
xchg
out
and
mov
cmpsb
xor
decl
push
mov
popa
adc
xchg
mov
jo
and
dec
xchg
ret
hlt
mov
add
jg
cld
adc
jbe
insb
cmp
push
fadds
sub
mov
or
pusha
inc
mov
outsl
and
mov
or
lahf
pop
nop
lahf
stc
shlb
push
inc
mov
in
das
ss
idiv
push
test
movl
mov
push
repnz
cmpsl
mov
in
int3
fsts
inc
sub
rolb
and
shl
and
loop
test
sbb
xchg
or
push
pop
mov
jg
aaa
inc
or
or
stos
cli
inc
adc
and
outsl
incl
pop
mov
adc
mov
push
ljmp
cmp
fs
lods
js
and
mov
loopne
xchg
inc
adc
push
xchg
inc
xor
std
bound
inc
inc
add
call
mov
andb
lods
mov
dec
gs
clc
xchg
add
and
xor
rdmsr
movsl
xchg
dec
in
inc
pop
jo
mov
aas
mov
rorl
mov
rclb
xchg
mov
imul
orb
cmp
or
call
sbb
rcrb
inc
ds
into
sbb
add
shlb
sub
push
push
add
jg
jecxz
shlb
pop
adc
add
push
pusha
push
dec
xor
ds
or
and
mov
ss
add
lcall
and
es
or
mov
pushfw
add
pop
fistps
adc
inc
pop
das
mov
movsb
orb
or
movups
add
scas
jmp
adc
outsl
sarl
test
out
popl
sahf
xchg
js
push
pop
sub
and
jl
insl
sub
sbb
loop
lcall
cmp
xor
sub
loope
and
mov
xor
push
cmp
or
ds
add
mov
adc
add
add
cmc
add
jb
push
loopne
mov
sub
push
push
sahf
add
testb
in
push
jecxz
push
pop
push
stos
mov
xchg
cli
mov
pusha
push
pushf
sarb
out
pushf
mov
mov
sbb
adc
mov
push
xchg
mov
or
adc
add
xchg
hlt
pusha
repz
jb
push
in
addl
xor
mov
adc
sub
loop
jo
outsb
sbb
inc
and
out
dec
push
test
orl
add
xlat
dec
jg
mov
xor
push
push
lock
or
or
push
xchg
or
push
xor
int3
xor
mov
add
imull
shrb
push
inc
mulb
loop
dec
hlt
addb
sti
sbb
push
loopne
push
insb
mov
add
cmpb
inc
push
inc
cld
in
ljmp
sti
andb
push
rorb
lods
orb
ficoms
popf
les
bound
sbb
ljmp
mov
cmp
mov
fcmovbe
push
adc
je
inc
fcomip
sbb
xor
sub
fwait
aaa
pop
or
bound
sbb
or
js
jb
push
push
mov
add
jne
mov
lret
jp
jecxz
or
pop
mov
sbb
ret
push
sbbb
lret
push
mov
popa
aaa
push
addl
scas
ret
addb
xchg
notb
mov
incl
bound
sarl
inc
and
outsb
mov
shr
inc
and
inc
or
and
stos
mov
fdivrl
push
and
mov
or
pop
rcl
rolb
sub
add
push
add
xchg
in
or
hlt
sahf
pop
jg
hlt
add
rorb
inc
test
inc
out
mov
push
sub
push
fwait
test
scas
inc
push
mov
je
cmp
add
xor
adcb
or
push
pop
icebp
outsb
or
orb
jg
push
pushf
out
femms
sbb
add
imulb
pop
ffreep
les
jecxz
adc
inc
or
add
sbb
add
xor
or
outsb
jp
add
js
mov
shlb
mov
mov
inc
cmpsb
out
and
or
push
add
mov
cs
jg
adc
imul
inc
ds
insl
cmpsb
cli
sbbb
loop
sbbb
data16
xchg
cmp
or
movlps
mov
sbb
das
addb
lret
push
sbb
sbb
cmp
out
mov
or
icebp
xchg
xor
inc
incb
loop
sub
das
loop
mov
push
inc
lahf
pop
sbbl
aas
inc
push
mov
inc
in
mov
sarb
sub
sbb
incb
xchg
imul
xchg
ds
scas
addb
dec
sbb
add
shl
xor
sub
mov
mov
es
inc
fsubp
mov
or
nop
bound
cmpsb
sub
add
add
jg
es
inc
push
loope
or
pusha
add
je
orl
dec
mov
lret
es
je
sti
inc
outsl
dec
arpl
pusha
pop
inc
dec
and
repnz
push
or
jp
push
dec
fistps
mov
push
add
icebp
mov
pop
mov
les
push
imulb
clc
push
popa
add
sbbb
or
jle
subb
mov
popa
inc
insl
add
fiadds
ja
push
filds
xchg
push
subb
push
mov
pop
je
inc
xchg
stos
or
pushl
sbb
mov
cmp
add
arpl
loopne
rcll
loope
mov
and
and
hlt
cli
fmuls
cmp
in
jne
ds
pop
and
mov
sbb
data16
add
cld
cmp
mov
jmp
add
push
andl
push
mov
inc
add
mov
out
push
dec
cmp
pop
mov
outsl
xchg
xor
or
jmp
insl
arpl
pop
shlb
rcrl
cmp
imulb
incb
sub
add
add
push
loop
or
xchg
std
popa
shlb
es
mov
rorl
popa
das
roll
lock
insb
sti
roll
repnz
fistpll
jp
aam
imul
loopne
jb
loope
nop
dec
lock
sub
xor
add
dec
mov
std
pop
test
push
addb
push
mov
test
in
lods
loopne
adc
mov
add
add
inc
imul
rorb
fisttps
pop
icebp
mov
pusha
adc
cmpsb
arpl
scas
cli
mov
and
and
in
push
adc
mov
add
nop
push
or
inc
mov
jo
enterw
add
std
mov
imul
inc
adcl
mov
lret
stos
adc
or
ret
jb
iret
pusha
pop
aam
mov
sub
and
jb
xchg
gs
loopne
jl
loope
mov
push
jae
jno
lcall
in
loopne
push
add
jbe
dec
shrl
dec
mov
pop
or
mov
leave
rclb
in
sbb
add
mov
adc
mov
and
jg
rcrb
pop
mov
sub
cltd
add
push
cmp
mov
loopne
add
xorb
outsb
fsubl
sub
pusha
js
and
add
adc
cmp
push
xchg
gs
mov
in
xor
loop
fildl
and
pop
xchg
add
lods
loopne
out
jo
lcall
in
mov
mov
or
inc
adc
das
dec
jecxz
push
add
pop
les
xor
adc
pop
mov
cli
fistl
bound
rcll
mov
adc
xchg
std
imul
add
stos
movsb
jp
and
outsb
test
jae
add
in
jmp
sbb
popw
in
daa
inc
add
and
xchg
in
pusha
and
and
sbb
push
xchg
mov
outsb
cmpsl
jo
add
adc
test
pushl
cmpb
mov
rcrl
push
sub
or
dec
push
add
mov
loopne
incb
mov
mov
push
or
bound
cmp
adc
andb
gs
in
imul
mov
sarb
and
imul
stos
push
mov
scas
adc
clc
pop
sarb
adc
imul
shll
insl
inc
or
cmp
add
sbb
rcrb
scas
xor
adc
mov
pop
adc
jmp
fadds
ss
jmp
or
sub
cli
loop
jl
pop
jno
pop
inc
je
ds
dec
ljmp
dec
push
push
push
adc
mov
push
bound
std
test
push
ss
push
mov
into
lcall
pushl
rolb
mov
and
mov
inc
push
push
movb
sbb
fimull
push
jne
push
js
aam
cmp
mov
add
lods
nop
scas
mov
xor
or
inc
fistpll
hlt
or
shll
out
dec
push
cli
and
mov
incl
loopne
xchg
in
lock
movsb
and
add
pop
icebp
add
push
ljmp
push
fidivrl
mov
xor
ret
push
hlt
rorb
icebp
add
push
mov
nop
add
gs
stc
sbbl
adc
jmp
push
lahf
jmp
lahf
or
or
out
lock
push
pop
push
adc
push
push
mov
jle
clc
decl
push
pop
xchg
xchg
mov
jae
xchg
fidivs
mov
test
mov
push
dec
leave
adc
mov
and
mov
and
pop
jg
jmp
push
cld
push
and
xchg
adc
mov
and
repz
push
sub
or
test
cmpsb
outsl
mov
daa
ret
lock
sahf
aaa
sahf
or
in
and
mulb
inc
daa
pop
sbb
out
daa
add
call
and
sbb
pop
jmp
cmpsb
addl
adc
decl
push
or
adc
sub
xor
out
call
lcall
popa
rorl
setl
pop
push
arpl
and
mov
add
pop
in
scas
or
push
inc
xchg
mov
and
jo
js
out
gs
add
jo
mov
adc
cmp
ret
cmpsb
push
push
inc
inc
addb
addb
dec
ss
and
mov
xlat
mov
sbb
adc
sub
cmpsl
inc
push
inc
jb
les
mov
adc
negb
dec
mov
sbb
psllw
sub
adc
sub
and
add
idiv
outsl
mov
sub
mov
or
mov
add
mov
sub
jnp
sub
xchg
ljmp
pusha
adc
mov
shlb
aad
sub
sub
shrl
mov
mov
push
pop
icebp
push
clc
fwait
movsb
mov
bound
adc
or
sbb
out
lock
add
cwtl
add
mov
push
into
xor
ret
fdivl
or
jg
add
pop
aam
sub
add
xchg
inc
push
push
xchg
cs
insl
clc
pop
mov
jmp
or
add
clc
xchg
and
mov
push
bound
pop
shll
inc
sub
sub
daa
add
inc
loope
les
data16
loopne
jg
decl
sbb
pop
mov
shlb
movd
jb
adcb
mov
or
inc
adc
cmp
and
stos
lock
jno
xor
push
insb
add
sub
cmpb
xchg
adc
jne
push
push
scas
daa
shr
mov
jmp
clc
ljmp
sub
andb
mov
lock
adc
out
mov
dec
ss
xor
mov
aad
sbb
xor
jp
cmp
add
sub
sbb
and
xchg
sahf
and
mov
push
loopne
mov
addb
sub
push
add
jno
pushl
orb
mov
dec
add
push
xor
ljmp
fs
mov
decl
pop
add
repnz
leave
pushf
andb
jo
xchg
in
or
loope
and
dec
js
in
adc
ret
push
pop
in
das
push
push
lret
int3
pop
outsb
xor
push
lock
push
xchg
mov
rolb
js
fistl
faddl
adc
jb
push
or
mov
incl
adc
push
add
xchg
push
mov
loop
sub
add
mov
ret
sub
ljmp
sub
push
mov
and
mov
addr16
add
jle
out
inc
add
das
sub
add
cli
push
fidivs
insl
mov
repnz
adc
pop
fists
mov
add
fstpl
es
adc
pop
sub
out
movsb
aam
sbb
int
aam
jg
cmp
repnz
insb
cli
in
cmpsl
fdivrp
add
xchg
clc
cmp
dec
and
cmpsb
mov
insb
divl
xor
loopne
test
fwait
incb
pop
or
out
addr16
xor
adc
shll
roll
bswap
push
push
and
rol
push
dec
and
cs
scas
mov
mov
cs
outsl
mov
insb
inc
adc
rclb
or
cwtl
add
add
gs
nop
cmpsb
dec
add
cld
decl
addb
cltd
loopne
add
ret
jecxz
shrb
xor
sub
xor
daa
decw
mov
jle
jae
daa
fildl
repz
rorb
bound
pop
mov
or
adc
pop
inc
and
cs
adc
jae
and
adc
sub
testb
daa
dec
mov
scas
or
test
das
sbb
loop
es
lret
push
inc
jae
sbb
jo
add
mov
add
movsl
mov
out
sahf
mov
dec
ljmp
or
pop
les
add
imul
xchg
into
es
imul
xchg
in
xor
pop
add
add
sti
aad
adc
adcb
or
pop
mov
mov
inc
inc
jle
add
in
lar
ret
and
adc
and
sub
add
dec
pop
incb
int3
je
outsb
fsubs
clc
sbb
pop
ljmp
in
repnz
inc
aaa
add
jbe
and
es
ss
ljmp
jns
mov
incb
call
arpl
add
out
into
gs
movb
fists
jno
push
pop
cwtl
les
add
out
and
cmp
mul
test
or
insl
add
cli
cmp
add
mov
lcall
pop
addb
or
mov
lock
shrb
push
xor
inc
add
cli
repnz
outsb
lcall
xchg
lret
sub
test
in
xchg
push
add
lcall
cmp
andb
daa
lock
mov
xor
mov
aam
test
scas
sbbb
test
jg
mov
adc
andl
push
or
mov
out
fldenvs
mov
mov
jg
outsl
mov
sbb
ret
adc
cmp
xor
inc
in
sub
hlt
push
shlb
jo
add
incl
je
inc
imul
inc
arpl
ret
xchg
mov
and
movsb
loop
call
mov
stos
push
sbbl
adc
lcall
jl
shlb
in
sub
repnz
aam
clts
arpl
orb
cmpsl
out
xchg
or
push
ret
fiaddl
inc
jmp
adc
int3
sarl
sub
rolb
jl
cmpsl
adcb
xchg
insl
push
cmpsl
pop
sbb
xchg
ret
pop
adc
and
sbb
cltd
repnz
clc
adc
ds
add
fnsave
and
dec
in
in
jg
pop
ljmp
mov
int
insl
inc
bnd
mov
out
sarb
push
test
stos
mul
addl
sub
rcrb
stos
movsl
push
setae
pop
pop
add
add
add
test
add
jmp
out
negb
in
xchg
movsb
ljmp
add
adc
push
imul
push
jg
cs
cmove
sbb
pusha
add
and
ljmp
pinsrw
and
jns
pusha
subb
and
lret
jmp
xchg
ret
decl
jns
push
ds
and
or
lods
roll
out
inc
xchg
enter
adc
adc
pop
outsl
mov
inc
adc
roll
push
sahf
in
sbb
adc
xor
mov
jecxz
or
mov
cli
mov
sarl
cld
or
loop
adc
fwait
add
sub
paddsw
decl
pop
and
out
int
fnstsw
cld
loopne
adc
or
push
ret
lods
push
jl
sbb
sbb
pop
cs
filds
ljmp
out
xchg
cs
sahf
dec
popa
add
jbe
imul
add
sub
fiaddl
filds
std
mov
jbe
mov
pop
mov
outsb
add
mov
mov
or
arpl
inc
shlb
push
std
incl
outsb
sbb
inc
test
bswap
addl
cld
mov
addr16
and
in
mov
jmp
push
fildll
std
outsl
dec
gs
push
gs
pop
cli
mov
xchg
xor
std
mov
or
and
insl
mov
jg
stos
mov
mov
imul
movb
jg
xchg
jmp
pop
gs
push
inc
dec
pushl
or
dec
arpl
icebp
and
sbb
cli
fwait
inc
pushf
add
repnz
push
loopne
lods
adc
mov
and
int3
jnp
movsl
call
or
inc
movsl
stos
fsubrs
mov
or
sub
repz
mov
adc
scas
mov
lahf
in
add
mov
cmp
ret
mov
adc
aas
push
mov
xchg
movsl
add
xchg
add
nop
mov
or
or
inc
pusha
or
and
rolb
mov
lret
data16
insl
add
jno
adc
xchg
mov
add
pop
mov
cmp
jo
adc
inc
pop
addb
or
scas
imul
dec
mov
out
aam
ljmp
test
xchg
arpl
sub
push
or
cs
add
roll
add
dec
fldl
lea
adc
dec
sbb
bnd
lds
push
outsb
jno
and
insb
lock
nop
idiv
call
imul
mov
dec
add
xchg
lods
loop
shrb
lahf
dec
xchg
dec
loop
call
or
xchg
dec
popa
adc
jo
push
xchg
stos
push
outsl
pop
shlb
bound
xor
pushf
mov
push
sbb
and
sbb
push
bound
jmp
mov
sbb
push
adc
cld
or
add
les
add
fiaddl
add
cmpl
in
mov
dec
fnstsw
pushf
mov
push
mov
lock
outsl
mov
jmp
cmpsb
std
or
and
mov
in
orb
inc
add
adc
neg
mov
lret
es
xor
xchg
xchg
ljmp
fsubl
mov
addb
adc
add
add
outsb
mov
in
fnstsw
or
push
or
mov
ficoms
pop
jmp
fucomi
inc
push
dec
outsl
rolb
roll
insb
rolb
in
fsubrl
add
push
mov
jae
cmpsb
mov
push
loopne
sarb
mov
xchg
addr16
add
loop
gs
mov
movb
rclb
iret
inc
inc
rcl
fistpl
scas
push
cld
adc
movsl
add
clc
add
int
clts
orb
fs
and
cmp
mov
fwait
dec
push
adc
adc
push
fcomps
xchg
lret
aad
es
in
pushl
adc
test
rorl
pop
xchg
push
or
pop
out
push
jb
add
xor
das
bswap
push
or
cs
das
add
cli
push
pop
xchg
loopne
pushf
movb
outsl
mov
test
cli
sbb
daa
movups
pop
out
or
sbb
out
nop
add
aad
movsb
outsl
mov
popa
clc
adc
imul
in
mov
mov
in
push
pushw
out
add
mov
out
aad
xor
daa
jmp
and
cmpsb
incl
jae
insl
and
inc
bound
loopne
xor
mov
out
cli
pushl
dec
std
nop
or
lahf
adcb
and
or
cli
repz
adc
lock
mov
sbb
adc
mov
inc
mov
movsb
or
icebp
or
and
cmpsl
outsl
test
mov
push
adc
or
stos
add
aaa
mov
xchg
movsl
mov
out
mov
add
dec
add
imul
icebp
add
add
xchg
rcpps
fst
fildl
push
or
nop
adc
push
add
xchg
in
aam
sub
jae
push
add
gs
filds
adc
pushl
ljmp
or
xchg
lret
fildl
lock
lock
and
jecxz
add
iret
add
sbb
sub
sbb
popf
stos
mov
loopne
xchg
pop
hlt
cmp
imul
inc
aas
aas
mov
fisttpll
movsl
mov
add
or
mov
lret
into
push
pop
push
scas
push
repnz
out
outsb
dec
sbbb
sti
mov
push
fldt
rsm
popaw
sub
inc
pop
xchg
add
fs
ror
fisttps
in
xchg
pusha
pushf
icebp
add
push
cwtl
push
dec
mov
mov
shrb
push
add
pusha
add
jg
insl
adc
xchg
cmpsb
mov
xor
fcmovne
and
sti
add
add
pop
push
mov
pop
cmp
or
fldt
lock
bound
mov
fs
sbbl
hlt
xchg
and
loope
inc
adc
jnp
adc
pusha
inc
mov
cmpsb
clc
sub
inc
add
insl
dec
add
dec
adc
outsl
movd
loopne
aam
mov
dec
imul
or
jo
add
and
hlt
outsl
xchg
das
sahf
loope
mov
int
cmp
lcall
add
mov
je
loope
fisubl
cmp
lock
lods
nop
mov
popa
sub
jo
aam
rclb
pusha
faddl
jo
and
xor
clc
rolb
in
fiadds
test
pop
jo
cltd
push
fistps
mov
and
in
rolb
enter
add
lods
fucompp
pop
je
add
mov
inc
add
iret
iret
push
dec
push
daa
in
jg
mov
adc
sub
enter
bound
incl
cli
inc
adc
andb
jo
in
add
les
mov
outsl
rcr
loopne,pn
xor
movsb
mov
pop
repnz
dec
mov
decl
test
ret
pusha
and
popf
sub
and
xorb
shrb
sbb
inc
int3
push
xchg
or
fstpt
and
pop
sahf
xchg
push
xorl
adc
add
mov
add
adc
rcll
in
and
loop
aam
adc
add
shrl
sub
enter
shlb
mov
add
adc
cwtl
bound
nop
rclb
add
push
add
cmp
lret
stos
add
in
xor
loope
xor
mov
insb
loop
movsl
inc
bound
mov
sub
cmp
fildll
fildll
cmp
cs
inc
sbb
sbb
out
or
jnp
outsl
push
or
jae
or
sub
int
cmpsl
fsubrs
add
push
in
mov
pop
loop
mov
dec
seto
mov
add
cld
adc
pop
int3
insb
repnz
inc
repnz
adc
out
add
in
jg
add
lds
in
xchg
push
out
mov
or
add
add
fs
rolb
mov
or
add
mov
xor
lods
jg
mov
or
and
inc
pop
xchg
dec
add
add
adc
ja
scas
out
push
push
ljmp
sbb
orb
mov
add
imul
dec
pop
mov
mov
lods
add
sbb
push
fiaddl
rclb
cld
dec
addps
movsl
push
lock
fbld
add
add
addb
jne
sub
pop
imul
fnstcw
adc
sbb
pop
ret
fdivs
inc
clc
sbb
cli
sub
adc
and
push
xor
je
cmpb
lods
cmp
int3
mov
xchg
xor
mov
or
int3
pop
gs
out
lcall
xor
in
pop
ret
xor
les
addl
lock
cmc
jle
pop
aam
adc
or
or
xor
dec
push
xor
or
nop
rclb
adc
and
out
imul
out
and
add
scas
clc
or
inc
xorl
loop
outsb
push
in
ljmp
in
push
seta
inc
xchg
add
test
loopne
decl
arpl
cmp
jmp
movsb
push
lahf
mov
lahf
cmpsl
lds
add
add
in
dec
jl
xor
push
add
mov
push
add
jge
ljmp
and
testl
bound
sbb
jnp
xor
cmp
ffreep
cmp
pop
cld
mov
push
xchg
inc
test
dec
rorb
cmp
inc
push
nop
xlat
push
pushl
shrl
mov
and
rolb
push
aaa
jbe
mov
loopne
cmpl
rorb
bound
add
push
leave
inc
or
adc
js
add
pusha
push
adc
cmp
fstpt
add
std
imul
popa
add
out
loopne
mov
clc
out
popf
add
daa
xchg
cmpsl
popa
insl
shlb
incl
mov
dec
test
add
sub
mov
dec
jb
mov
pusha
mov
fs
lods
mov
push
sub
add
stos
add
add
xchg
xor
cmp
mov
mov
pop
rcll
pop
addr16
dec
pop
jle
test
push
arpl
or
das
call
add
loopne
jmp
pusha
sbb
in
and
sbb
sbb
push
jmp
jp
adc
cmpsl
mov
add
rcrb
jo
ret
sub
int3
rol
stos
xchg
xchg
pop
rolb
cwtl
adc
cli
pusha
nop
nop
dec
inc
outsb
push
mulb
and
pop
and
or
lods
lret
sub
xchg
cli
insb
in
add
test
xchg
repz
adc
int
insb
lods
out
lret
clc
sub
add
sahf
mov
cmp
push
add
push
jp
add
fwait
add
add
sub
add
push
sahf
pop
loopne
jbe
clc
add
stos
movsl
mov
xchg
rcr
pop
or
orb
cwtl
testl
addr16
jnp
arpl
xchg
test
push
std
mov
dec
subb
or
js
call
out
or
and
out
rol
or
lock
inc
mov
xchg
add
jp
popa
cmp
and
mov
cmp
mul
or
push
push
add
inc
jg
xchg
ljmp
cmp
xor
and
stc
add
lock
cld
pop
je
or
add
lcall
cmp
cld
incl
and
bound
add
adc
clc
jg
push
js
pop
and
pusha
adc
mov
xor
mov
test
fisttpll
cmpsl
jo
add
xor
pop
shr
jg
mov
popw
xchg
push
mov
aas
ud0
fucomip
outsl
call
mov
testb
cmp
xor
or
jnp
push
dec
cmpsb
std
rolb
dec
jo
dec
mov
add
or
outsl
push
incb
add
mov
add
inc
add
inc
add
dec
inc
clc
fistpll
sbb
push
pop
push
add
mov
lds
je
adc
mov
push
std
pushl
xor
aaa
lahf
adc
loopne
shl
cmpsl
mov
lcall
xchg
mov
gs
cld
loop
and
add
sub
add
xchg
mov
icebp
aaa
sti
add
and
xchg
repnz
lods
jmp
les
gs
les
jle
or
rclb
ss
push
or
incl
ss
rcr
nop
subl
dec
nop
push
gs
add
push
jg
inc
aaa
jo
pop
pop
int3
xchg
call
or
aas
or
mov
push
outsl
shlb
lock
clc
movsl
inc
mov
ret
jno
cli
orb
cmp
xor
ljmp
pop
add
clc
or
pcmpeqd
mov
add
lods
sub
nop
add
movsb
sbb
movsl
insl
add
jle
ss
mov
sub
decl
out
addb
ret
sbb
jo
inc
jbe
ret
sub
pop
mov
pop
mov
add
pop
sub
jmp
nop
cmp
push
aam
add
push
mov
pop
jb
ss
decl
sar
rorl
pop
sbb
daa
push
insl
and
bound
sub
data16
add
jbe
notb
jmp
add
fidivs
lods
adc
or
aaa
mov
push
push
pop
sarl
add
cmp
es
in
clc
pop
ja
add
sub
sbb
push
outsl
inc
movsl
fldt
mov
xor
pop
cli
ss
loopne
jge
in
mov
jbe
das
insb
push
add
jb
outsl
movsl
repnz
pusha
popf
mov
sub
call
add
mov
in
daa
shrb
in
jmp
add
push
mov
jle
inc
push
cwtl
jne
sub
in
clc
outsl
clc
jg
add
in
xor
xchg
incl
or
or
xor
pop
aad
xor
pop
loope
mov
jbe
jmp
das
sar
xor
inc
shll
sbb
in
mov
and
mov
loope
and
cmpsl
fimull
or
sub
pop
fsubr
inc
gs
cli
imul
andb
das
sub
repnz
adc
push
fwait
mov
mov
fwait
arpl
es
jb
or
stos
jle
ret
cmpsl
mov
rorb
sarb
les
sub
mov
sub
sub
and
loopne
fstpt
add
or
jge
fs
add
adc
pushw
push
imul
pop
test
or
fidivs
and
in
outsl
adc
ss
mov
out
add
sti
rorb
xchg
sti
sbb
pop
jmp
repz
push
ljmp
cmc
mov
pushf
stos
in
pop
jp
pop
add
mov
mov
jo
and
rolb
mov
sub
adc
test
les
jno
push
or
outsl
sbb
or
and
jg
hlt
cmp
adc
ret
std
roll
ret
add
push
cmpsb
flds
xchg
ret
add
pop
add
outsl
mov
sbb
add
and
outsl
xor
inc
adc
and
mov
into
mov
adc
sub
add
fs
or
mov
sbb
mov
and
jl
test
sub
into
mov
shlb
xchg
adc
adc
insl
adc
mov
sti
add
int
or
es
ja
dec
mov
push
rclb
add
fildl
push
inc
pop
add
mov
in
repnz
pushf
mov
out
xchg
push
imul
imul
outsb
insl
rorb
outsb
insl
or
jg
push
mov
mov
cli
addb
rcrb
jle
lcall
icebp
xchg
add
lock
pushl
xchg
test
mov
data16
inc
out
add
sbb
arpl
loope
ret
mov
mov
cmp
insb
sub
xchg
in
into
sbb
ss
mov
outsl
addl
push
addb
or
insb
add
xchg
outsl
ljmp
outsb
adc
add
rsqrtps
sub
and
rorb
push
pusha
adcl
mov
movsb
call
sub
call
rclb
aaa
ret
out
xchg
jge
xorb
pop
add
add
shl
sbb
ljmp
ret
inc
sub
fwait
std
cmpsb
lar
adcb
push
sbb
and
inc
sbb
mov
ficoml
adc
add
and
add
jg
jno
into
ds
and
addb
stos
movsb
mov
outsl
sbb
mov
outsl
fwait
mov
clc
cltd
in
imul
lock
cmp
add
sub
or
adc
inc
aas
push
fistps
nop
inc
xchg
cmp
mov
push
cmp
sti
dec
push
xchg
adc
add
inc
cmpsb
cmpsl
sahf
pushl
xor
js
in
push
mov
mov
mov
shl
ret
push
scas
jo
test
adc
sub
incl
mov
jmp
xchg
ret
test
sub
mov
sbb
jp
inc
inc
and
jl
sahf
sbb
hlt
push
cmpl
call
call
xchg
add
cmp
scas
addb
inc
or
hlt
pop
or
push
xchg
loopne
ret
repnz
jecxz
xchg
call
pextrw
or
sysenter
push
cmp
subb
add
or
outsl
mov
insl
popf
bnd
rolb
pop
js
shll
cmp
mov
pop
inc
sub
lcall
loopne
cli
insl
add
add
or
imul
sbb
add
test
rcrb
and
mov
pop
lcall
cmp
cmc
rclb
mov
and
imul
push
add
insl
xor
adc
aaa
xchg
or
xorb
testb
pop
xchg
xor
sbb
add
and
inc
movsl
add
push
add
scas
sub
sub
cmp
movsl
mov
bound
and
inc
inc
and
nop
data16
sub
cmp
enter
movsb
sti
adc
in
add
bound
fsubs
loopne
cmp
xor
mov
clc
outsl
lcall
in
and
and
into
xchg
or
xchg
into
push
movsl
add
movsb
and
mov
push
lcall
lock
out
mov
lret
add
push
and
push
inc
stos
push
lods
shll
syscall
add
or
mov
inc
addl
test
adc
or
add
add
ljmp
aas
mov
or
or
cld
incl
jne
add
add
sbb
ret
jg
or
nop
addb
and
mov
fistpll
dec
and
test
rclb
fadds
mov
inc
jmp
decl
pop
btr
shlb
sti
or
and
pop
xor
popa
jb
xlat
mov
inc
gs
inc
push
adc
mov
jno
mov
mov
jl
or
pop
movsl
and
xchg
ret
push
sti
loopne
insl
jg
outsl
mov
or
ljmp
push
add
and
mov
in
aad
cwtl
fsub
push
aam
add
push
add
sub
pop
or
add
insb
in
mov
popa
or
mov
das
push
jo
adc
sbb
gs
stos
adc
mov
inc
imul
aas
fisubl
and
inc
push
ficoms
mov
call
enter
mov
mov
aaa
add
inc
fmuls
jl
movsl
psrlw
test
outsl
pop
mov
push
jle
jmp
and
mov
or
lock
int
push
xchg
add
sub
shll
xchg
mov
lods
add
ret
mov
pop
or
fs
clc
aaa
mov
push
nop
cmpsl
push
or
push
dec
test
out
mov
or
add
addl
or
adc
or
jg
js
sub
jo
outsl
dec
xor
xor
cmp
repnz
lret
pop
push
xchg
jbe
push
xor
lea
or
add
cmpsb
mov
xor
push
push
cmpsb
push
sbb
lock
or
fistl
or
sti
adc
cmp
sub
add
mov
das
out
xor
imul
jo
adc
adc
and
mov
sbb
or
ret
pop
sarb
and
clc
inc
lcall
inc
xor
insb
sub
out
adc
xor
data16
adc
add
lcall
pop
mov
push
dec
pop
cmpsl
andb
cmpb
lcall
add
je
push
cmp
push
mov
es
mov
pop
jo
and
sbb
icebp
fldt
mov
push
mov
inc
adc
and
cmpsl
and
loop
add
xchg
and
ljmp
dec
ret
jae
cld
add
and
outsb
jnp
mov
les
xchg
test
fistl
mov
cs
leave
pusha
mov
roll
rorb
aas
and
ret
sti
cmp
rorb
jbe
adc
fcmovnbe
mov
adc
pop
push
adc
mov
cmp
push
pop
lock
ljmp
in
or
lock
imul
push
push
xor
xchg
or
push
push
mov
rcr
jo
or
add
in
jo
rorb
imul
xorl
add
adc
pusha
and
push
test
jmp
jp
test
jns
pop
push
stos
in
adc
xor
js
dec
hlt
pop
stos
cmpsl
xor
popa
fwait
jbe
add
add
pop
mov
add
sbb
add
jo
sbb
es
shlb
repnz
nop
jge
das
mov
in
sub
das
add
and
cld
lock
adc
loope
sbb
xorb
fwait
mov
and
push
aaa
mov
xchg
mov
add
out
inc
or
xor
cmp
dec
inc
clc
mov
movsb
jmp
mov
xor
cli
adc
add
movsb
and
pop
out
arpl
pop
and
push
and
je
fisubl
add
lahf
adc
jg
jno
pop
fdivrl
movsl
mov
adc
inc
xor
andl
mov
ficoms
push
mov
xor
movsb
mov
clc
or
lock
push
hlt
in
sub
out
ss
or
lds
fmuls
movsl
mov
mov
cs
imul
push
jmp
mov
movsb
in
in
add
std
push
stos
imul
bound
mov
ljmp
cmpsb
ljmp
sub
pop
lods
call
in
jno
push
outsl
push
arpl
rolb
incl
mov
stos
mov
xchg
in
ret
fistpl
popf
bound
dec
cwtl
clc
mov
scas
adc
scas
add
cmp
or
and
mov
or
mov
add
inc
out
daa
outsl
pop
decl
fwait
pop
outsl
fwait
push
xchg
cld
fistl
mov
push
call
xor
sti
mov
paddb
scas
outsl
mov
or
or
daa
xchg
in
dec
test
pushl
push
add
andl
aas
xchg
jecxz
fidivrl
and
andl
mov
std
sbb
cwtl
add
insl
pop
pusha
test
lods
pop
sub
and
scas
and
dec
adc
pop
add
fistpl
lock
enter
out
and
adc
outsb
imul
ret
dec
or
xorb
or
add
inc
arpl
fbld
mov
mov
adc
push
sbb
fwait
or
loope
lock
jg
in
jmp
add
nop
push
jg
decl
sub
add
sbb
imul
sub
jmp
mov
call
and
shlb
negb
jmp
mov
loop
mov
or
mov
inc
mov
sbb
adc
or
test
adc
jmp
outsl
inc
mov
cwtl
rclb
push
test
fistl
push
xchg
adc
pop
insl
jg,pn
pop
jecxz
lods
and
aaa
push
movsb
int
xchg
ja
in
add
gs
push
add
adc
mov
shrl
roll
hlt
outsl
mov
cs
add
daa
adc
pop
push
and
shl
cmp
xor
lret
push
rorl
mov
lcall
es
repz
add
addb
push
or
or
mov
into
mov
add
loop
add
or
xor
cs
or
ljmp
jo
mov
or
in
fsubl
adc
pop
add
add
sbb
xchg
mov
inc
shll
js
cld
mov
loope
add
sbb
loopne
int
push
adc
cmp
int
sbb
jg
rcrb
push
xchg
clc
insb
loope
test
add
repnz
sarl
dec
jbe
insb
mov
sbb
arpl
xchg
inc
insl
xor
or
scas
adc
loopne
movsl
aaa
add
mov
cld
out
pop
and
sbb
fisubrs
bound
and
sbb
pop
lock
push
pop
mov
add
pop
pop
sbb
inc
cmovs
arpl
add
bound
inc
add
test
outsb
and
cmp
shrl
mov
ficompl
adc
loopne
add
cmpsb
mov
and
jae
lods
mov
add
push
and
push
push
add
or
or
frstor
cs
lcall
insl
daa
add
and
notb
repnz
insb
fisubrs
cld
push
stos
ljmp
jmp
movb
lcall
jno
add
xchg
inc
out
data16
xchg
loop
adc
push
push
loop
ljmp
or
add
or
lcall
lods
daa
fisttpl
sub
outsl
pop
mov
pop
jnp
sbb
fsubrl
nop
mov
cli
imul
pop
pop
mov
sub
icebp
mov
xchg
cmp
xchg
or
stos
mov
and
out
xchg
or
orl
sub
mov
pushf
adc
mov
add
add
repnz
mov
lahf
mov
add
outsl
fmull
push
xor
pop
cmc
sub
fcomip
add
xchg
in
nop
add
loopne
cmp
add
cld
add
or
adcb
jl
add
cli
addb
out
adc
xor
clc
addb
test
adc
or
ret
imul
sub
adc
ss
mov
pushl
aas
or
lods
orb
sysexit
cwtl
push
or
fwait
adcl
cltd
ret
in
cltd
add
insb
adcb
lods
test
mov
add
mov
cltd
add
xchg
ljmp
fsts
xchg
stc
and
mov
mov
ret
stos
in
loop
rorb
sbbl
and
jecxz
and
mov
or
cwtl
xchg
jmp
sub
mov
or
loope
ljmp
adc
movsb
lret
fwait
xor
rorb
stos
xorps
pop
inc
add
cmp
dec
push
inc
fs
xchg
adc
subb
push
lods
loop
insb
inc
add
fildl
add
rorb
fistpll
xchg
movsb
gs
les
adc
mov
arpl
push
xchg
push
test
jb
addl
xor
inc
cwtl
in
sarb
xor
and
jle
aad
es
xlat
and
aaa
and
gs
fwait
add
mov
jbe
jb
xorb
testl
movl
mov
loopne
sub
in
inc
pop
lds
hlt
sbbb
cmp
add
in
push
inc
add
and
std
call
push
fnstenv
fwait
push
ret
or
add
dec
mov
dec
jns
dec
nop
jno
jo
popa
nop
sbb
and
out
pop
or
das
clc
xor
bound
imul
inc
add
add
adc
mov
sub
aad
mov
fdivp
lret
clc
lods
dec
fsubrs
adc
and
repz
call
adc
xchg
xor
lret
mov
insb
add
push
add
push
out
add
adc
ljmp
icebp
or
aaa
inc
jp
push
ss
rorl
loopne
adc
add
or
xor
mov
loope
lock
shr
xor
jno
call
mov
add
les
shrb
push
jmp
lods
adcl
and
ja
ret
sub
push
and
pop
and
adc
adc
sub
adc
dec
mov
add
test
sub
or
add
aad
sub
jmp
mov
mov
popa
sub
jbe
dec
sub
push
outsl
mov
lods
es
and
sub
add
sub
and
adc
pusha
fdiv
ds
fistl
push
stos
mov
inc
cmp
and
add
add
les
imul
loop
imul
pusha
cmp
mov
mov
dec
xor
and
sbb
sbb
pop
cmc
sbb
mov
inc
mov
mov
xor
dec
ret
aaa
lods
xchg
insl
mov
cli
mov
loop
loop
push
push
sub
mov
sub
pop
cmc
decl
ss
mov
es
pop
call
cmp
dec
ret
dec
insb
adc
rcrb
das
jb
fdivl
cmc
sub
cwtl
inc
add
sbb
notb
dec
lea
cmp
jne
add
jb
ret
xor
mov
lds
int
mov
mov
push
adc
stos
ret
adc
push
mov
pushl
and
pop
cmp
iret
cmp
push
pop
lock
movsl
dec
and
pusha
arpl
sbb
dec
inc
rorl
fists
adc
adc
stc
jbe
and
sbb
mov
clc
imul
bound
add
pushf
push
and
out
and
imulb
mov
loop
mov
add
lods
dec
pop
lea
sub
inc
sti
push
icebp
inc
js
adc
jae
push
sub
xchg
lods
dec
ret
and
icebp
mov
adc
xlat
inc
outsl
xor
mov
test
mov
imul
pushf
inc
repnz
cs
ret
inc
gs
push
inc
cmp
mov
ljmp
or
sub
jge
insb
xchg
mov
inc
mov
mov
ja
add
pop
add
test
inc
insb
dec
fisubrl
and
sti
dec
mov
insl
or
and
push
adc
cmp
testb
and
je
xchg
cs
push
xchg
push
rolb
cwtl
inc
adc
dec
fiadds
ljmp
jecxz
aam
mov
xor
mov
mov
jbe
or
adc
mov
mov
add
fwait
pop
and
pop
cmpsb
mov
pop
or
es
or
or
lret
dec
dec
dec
mov
inc
loop
or
pusha
pop
test
dec
pusha
mov
jmp
xor
out
mov
or
filds
not
or
cmovb
rclb
rolb
repnz
add
or
push
inc
mov
cmp
add
shll
sbb
xor
xor
and
shl
out
sarb
in
adc
inc
aad
push
mov
or
or
add
inc
bound
pop
test
inc
adc
insl
out
xchg
fisttps
repz
in
loopne
frstor
call
inc
add
scas
add
adc
notb
xchg
cmp
or
loopne
mov
pushf
jb
gs
xchg
sbb
ljmp
es
test
and
xlat
bound
aas
adc
incl
push
adc
push
into
mov
orb
mov
push
test
mov
test
into
xor
pusha
add
add
fs
jle
sbb
add
mov
aad
scas
pusha
add
aam
shlb
pop
and
mov
pop
rcr
decl
stc
inc
xchg
mov
jo
mov
mov
mov
adc
mov
lret
mov
ljmp
pop
fildll
inc
shl
mov
mov
mov
push
std
mov
dec
mov
xchg
dec
add
fisubl
jg
and
call
push
dec
outsl
pusha
sbbb
cli
fcomip
popa
push
jo
xchg
imul
mov
xor
or
push
mov
xor
imul
add
pop
in
mov
dec
insl
and
push
jo
icebp
lret
or
mov
enter
mov
push
fisttpl
popl
addb
add
nop
push
pop
and
cmpxchg
addr16
push
mov
popa
and
nop
adc
sbb
add
insl
inc
dec
loopne
lock
pop
aam
push
fisubs
mov
push
in
push
adc
clc
sub
and
adc
mov
in
mov
push
add
andb
in
aam
movsb
shrb
pop
ss
push
mov
jmp
in
adc
dec
inc
and
or
enter
or
es
gs
mov
outsl
sub
sub
mov
adc
ret
aad
jbe
and
mov
add
jle
nop
test
jbe
push
mov
mov
mov
sub
adc
add
xchg
loopne
lcall
aam
fiadds
hlt
add
push
fs
fcmovb
rolb
and
cmpsb
decl
adc
cs
mov
mov
testb
decl
aas
nop
bound
inc
mov
or
ja
es
xor
mov
jo
repnz
or
lcall
jmp
pmuludq
cli
pop
and
sbb
cmp
dec
or
push
hlt
lock
loop
test
icebp
add
mov
jl
mov
xor
xchg
mov
pop
addb
scas
ja
mov
add
jge
jp
xchg
or
loope
rclb
jo
xor
sub
adc
into
pop
outsl
ret
push
ficomps
cld
fwait
sbb
rolb
js
xor
sahf
pusha
or
jns
xor
orb
call
mov
adc
rorb
jno
outsb
push
add
xchg
mov
inc
dec
divb
add
test
incb
adc
mov
pushf
cli
xorb
scas
nop
decb
and
adc
mov
les
decb
movb
repnz
lock
movsb
mov
push
insb
pusha
adc
push
test
add
lock
js
in
fwait
pushf
sbbb
mov
orb
and
push
adc
sbb
mov
fimull
inc
jo
sub
dec
pop
jmp
cwtl
loop
cli
sub
cmp
and
bound
jno
mov
xchg
stos
dec
aad
xchg
retw
sbb
pop
icebp
ss
xchg
dec
ret
shll
xor
cs
stos
test
inc
add
sub
adc
test
jnp
add
inc
dec
add
and
into
and
lss
push
adc
xchg
push
scas
mov
and
cmp
out
mov
mov
adc
test
scas
out
mov
imul
push
adc
xchg
xorb
aad
outsb
push
add
loop
adc
lret
and
add
mov
adc
loope
mov
inc
stos
sbb
cs
scas
mov
loope
mull
push
add
jg
ljmp
loope
and
adc
in
xor
mov
xor
test
add
int
add
push
dec
fadds
add
push
testl
pop
pop
lock
ds
in
pmulhuw
xor
fistpll
lock
xor
mov
xor
cmp
rcrb
nop
jecxz
jge
addl
pusha
lcall
or
push
dec
pop
orb
fnstsw
loop
add
pop
lds
addr16
or
inc
sub
mov
pop
subb
decl
decb
mov
imul
pushf
ljmp
mov
cli
mov
jo
pop
in
cmp
jg
mov
xlat
sbb
cli
mov
pop
or
mov
and
je
je
adc
rolb
push
rolb
insl
inc
push
test
addr16
pop
and
mov
xchg
lock
idivb
sub
and
push
or
out
add
or
sbb
pusha
push
nop
xor
or
mov
mov
sbb
cmp
dec
std
pop
icebp
test
push
loopne
dec
or
and
push
and
scas
jmp
add
push
pop
cmp
fldenv
dec
xchg
testl
imul
mov
outsl
fmuls
mov
aas
and
mov
and
mov
out
lods
adc
add
adc
xorl
sbb
repnz
ljmp
add
stos
inc
xchg
int3
out
hlt
decl
rolb
sbb
data16
sbb
mov
sub
adc
xchg
cs
es
ds
lods
sbbb
dec
sub
mov
dec
sarb
add
push
add
mov
mov
push
pusha
and
int3
or
pop
lods
jle
push
test
mov
push
or
mov
loop
pop
mov
sar
nop
xor
add
add
add
push
insl
je
sbb
adc
mov
cmpl
pop
enter
cmp
andb
dec
add
mov
insl
out
add
mov
adc
ljmp
fistl
addb
addb
pop
add
notb
add
pop
rcrb
adc
push
cmpl
testb
iret
xchg
fisttpl
andl
mov
cli
addb
add
pop
hlt
add
cmp
sbb
push
xorb
push
pop
cmc
incl
and
orb
jle
stos
mov
mov
outsl
push
rorb
lea
loop
sub
or
fistpll
sub
add
shlb
sub
sub
rcrw
inc
xchg
jmp
clc
sbb
add
loop
inc
and
sarb
inc
add
pusha
add
ljmp
dec
sub
stos
in
and
xor
loope
adc
or
in
mov
cmp
lock
clc
jle
cmpl
sbb
add
lds
mov
ret
mov
mov
xchg
in
inc
push
add
sar
fwait
sbb
pop
es
sbb
xchg
push
adc
daa
nop
and
cwtl
jmp
int
test
mov
push
dec
mov
dec
mov
xchg
xchg
push
and
add
aaa
insb
stos
mov
cmp
jle
aaa
add
inc
push
pop
mov
ret
scas
rolb
adc
add
movsb
jb
mov
push
es
imul
roll
bound
bound
es
sbb
sbb
cltd
dec
xchg
in
aam
hlt
test
or
pusha
mov
or
and
incl
in
dec
mov
inc
cmpl
inc
cmp
mov
inc
push
loop
add
sbb
cmp
push
and
ljmp
cld
gs
xchg
mov
insl
adc
jecxz
loopne
loopne
mov
xchg
jecxz
cmp
lret
mov
loopne
fistl
cld
ror
movsb
dec
jmp
mov
cs
dec
pushf
stos
jge
push
mov
out
cmp
aam
ljmp
mov
sub
cmc
fbld
xor
inc
adc
pop
push
pusha
dec
push
push
or
cmp
pop
sahf
mov
divb
rolb
and
mov
add
xor
shrb
ret
add
pop
stc
adc
decl
or
or
in
js
and
insl
pusha
sub
inc
xchg
mov
mov
pop
push
xchg
addr16
push
repz
loop
jmp
and
addb
xchg
pop
addb
sbb
jg
mov
mov
mov
push
enter
inc
jmp
or
mov
rol
sbb
shll
clc
outsl
xor
sbb
dec
insl
fistl
inc
push
mov
xorb
enter
es
cmp
mov
in
arpl
and
or
mov
adc
and
pop
or
push
loopne
test
in
fwait
cli
sub
and
xchg
fdivrs
mov
rclb
push
scas
andb
add
inc
out
mov
outsl
cs
add
or
inc
shll
mulb
xchg
dec
insl
jg
sbb
sbb
adc
or
fisttps
xchg
mov
push
and
imul
push
insl
inc
dec
push
xor
ret
sbb
pop
lcall
mov
sbb
and
mov
dec
les
adc
xor
out
xor
add
or
mov
mov
cli
fs
cmp
pop
jmp
in
int3
pusha
addb
mov
cmp
or
mov
ljmp
int3
sub
imul
loop
push
xchg
pop
jb
incl
movsb
fstl
fwait
mov
and
hlt
loopne
insb
pop
push
int3
mov
orl
pusha
mov
lret
bound
loope
mov
jb
and
inc
inc
jae
add
inc
rcrb
adc
inc
sub
xor
stos
in
out
shrb
adc
mov
pop
jl
mov
jp
dec
dec
inc
popa
outsb
add
lock
cli
mov
add
inc
and
popa
xchg
call
ljmp
push
movsb
push
mov
cmpsb
and
and
mov
pop
push
dec
xchg
lods
gs
xchg
jecxz
fists
fwait
mov
pop
or
add
incl
add
add
add
mov
lods
push
mov
mov
sub
xchg
roll
ret
or
pop
sti
or
push
or
push
in
and
mov
mov
pop
in
sahf
das
popa
pop
jo
xor
das
clc
sbb
lock
and
mov
sar
scas
test
out
pusha
push
test
or
add
pop
sbb
rorl
hlt
fildll
mov
or
mov
mov
mov
insb
pop
ss
cmp
jg
dec
jb
insl
push
test
loop
pop
ljmp
jl
out
add
sbb
mov
pop
push
mov
jo
into
nop
inc
repnz
mov
push
push
and
scas
cwtl
fnstenv
insl
or
mov
adc
push
and
push
in
and
inc
and
into
mov
or
mov
sub
lret
inc
scas
imul
jmp
mov
adc
push
jp
jno
jmp
push
in
xor
lret
shlb
pushf
push
push
sar
lods
fbld
fstl
adcb
mov
inc
xchg
push
dec
jbe
popl
test
out
cli
add
and
adc
sbb
shrb
jp
adc
fsubs
jmp
inc
and
add
mov
and
nop
jnp
test
idivl
pop
dec
xchg
or
add
in
rorb
jmp
sti
pop
idivb
ljmp
pop
inc
sub
jno
cmpsl
add
retw
add
negl
pushf
pop
add
mov
je
add
popa
add
push
xchg
add
fwait
test
mov
pop
inc
mov
or
cmpl
push
mov
fwait
out
push
mov
mov
sub
notb
push
sub
sbb
or
inc
mov
xor
lock
inc
pop
loopne
push
imul
or
loop
popa
fs
dec
fidivl
cmp
xchg
lods
bound
sbb
notb
outsl
bound
pusha
addr16
in
adc
frstor
nop
mov
int
iret
loopne
call
das
stos
mov
push
inc
loopne
push
mov
or
push
aam
mov
jmp
scas
mov
cmp
xor
mov
cmp
push
lods
xchg
pop
test
jg
out
push
iret
mov
or
mov
mov
add
imul
pop
fimull
lods
push
push
add
jle
cli
fwait
inc
cld
roll
mov
mov
ret
mov
sti
loopne
pop
push
subb
sub
xor
loopne
inc
ds
push
inc
lock
enter
icebp
push
movsl
mov
add
add
ljmp
push
xchg
mov
gs
lds
xchg
pop
xor
adc
out
push
push
in
fsub
sbb
repz
loope
fbstp
mov
je
jno
cwtl
icebp
push
mov
loop
pop
and
ljmp
mov
lods
test
in
mov
mov
push
cli
jo
and
xorl
add
jg
pop
es
or
loopne
andb
shlb
or
add
fucomp
xchg
add
loop
or
ljmp
mov
xchg
mov
gs
adc
loop
push
dec
rorb
xchg
xor
outsl
clc
push
cli
mov
pop
mov
push
mov
sahf
ret
push
stos
jp
addl
add
nop
testb
jle
or
xchg
or
mov
or
jg
mov
cmp
or
fwait
sbb
xchg
or
dec
push
sar
sub
pop
adc
es
adc
cltd
adc
xor
push
adc
mov
xchg
insl
inc
mul
adc
xor
js
pop
or
mov
add
or
jecxz
sbb
call
movsl
loopne
dec
outsl
sti
loope
int
fiaddl
sub
ret
shll
test
adc
and
mov
push
sbb
push
insl
in
add
clc
popf
add
add
and
or
imul
cmp
pop
pop
inc
mov
add
xchg
ret
in
aaa
push
loope
repnz
or
divb
insl
call
or
jl
loop
clc
add
xchg
rol
mov
loopne
add
cmpsb
pop
shrb
pop
pop
hlt
and
mov
aaa
ror
push
cmp
push
shlb
sub
repnz
inc
push
push
push
add
adc
inc
test
mov
addb
cmpb
adc
adc
mov
mov
out
mov
sub
jle
rcrb
xchg
push
add
adc
loopne
loopne
push
ja
cmp
mov
mov
jl
ljmp
and
mov
test
mov
mov
aam
add
rolb
mov
mov
aad
xchg
jmp
pushl
aam
aad
add
dec
jle
mov
adc
push
ljmp
sub
and
std
pop
hlt
rolb
jo
test
adc
stos
inc
outsb
enter
outsl
sbb
mov
pop
push
sbb
inc
sar
mov
aad
outsb
div
and
push
les
mov
adc
jb
add
xor
fwait
scas
push
xchg
mov
push
fldl
jb
ret
sbb
inc
arpl
add
mov
push
add
lods
jle
pop
dec
sub
adc
insl
rorl
fs
or
or
cmp
loopne
jo
cmp
or
test
cmpb
inc
std
aaa
xor
xor
pop
in
add
pop
call
pushw
mov
xchg
push
xchg
xchg
add
sbb
add
mov
jb
jl
jo
sbb
gs
gs
es
test
add
arpl
push
inc
ficompl
xchg
cli
jg
push
fmul
fsubr
loopne
insl
cmpsl
out
add
jecxz
loopne
and
and
out
nop
fmuls
or
xchg
add
movsl
gs
push
scas
fdivs
insb
repz
rolb
jl
adc
dec
add
xchg
lds
and
inc
lea
pusha
mov
sub
dec
pop
cmp
divb
add
dec
call
lea
add
sub
leave
add
add
mov
fucomi
add
mov
cli
sub
cmp
stc
repnz
cmp
in
aaa
add
ret
icebp
ret
pop
sub
push
inc
movsb
dec
popf
lea
sub
out
add
call
inc
fldenv
subb
lea
xor
push
add
xor
ret
adc
cmp
inc
mov
sbb
lock
add
out
jmp
inc
jecxz
and
pop
lods
xchg
sar
aaa
adc
and
out
inc
add
jmp
clc
dec
sbb
xchg
roll
add
adc
dec
adcl
mov
outsb
lods
lods
test
icebp
push
push
andl
add
add
sub
push
xchg
xchg
outsl
dec
fdivr
jg
call
popf
adcl
xor
push
int
cmpl
jno
ljmp
loopne
mov
psubsw
xorb
cmp
cld
pop
lock
cmp
mov
sub
bound
add
xchg
push
cld
mov
push
insl
addb
mov
xor
inc
insb
incl
mov
pop
sub
into
add
push
xchg
dec
imul
or
push
add
decl
mov
pop
movsb
scas
ret
add
lock
push
pop
dec
adc
rcrb
fnstcw
outsl
sahf
ret
sbb
nop
sbb
add
cmp
push
incb
or
or
jnp
lret
shlb
fsubr
ret
clc
and
or
and
push
std
push
sbb
scas
xchg
add
js
sub
lcall
jg
call
sbb
inc
mov
fcmove
or
push
std
dec
loope
jp
pop
ret
pushf
imul
jg
pop
mov
sub
pop
movsb
inc
ret
and
xchg
aad
fistl
sbb
and
or
adcl
push
add
cmc
rol
jae
adc
jg
adc
dec
out
mov
lahf
popa
rorl
rcrl
lock
pop
mov
adc
cmp
lahf
add
call
fsubl
lcall
add
push
ror
add
mov
dec
inc
adc
decl
pop
sbb
imul
mov
sbb
mov
test
jb
sahf
fcomps
filds
roll
jl
push
shll
cmp
cmpsb
mov
adc
jp
test
or
aad
insl
and
or
scas
push
nop
dec
mov
sub
and
nop
pop
inc
or
lock
mov
fiadds
aaa
jp
xorb
sbbl
loope
add
cmp
add
pop
mov
inc
rcrb
add
add
rclb
mov
shlb
add
movsl
cli
pop
adc
lock
jns
js
mov
js
mov
cs
popf
mov
pop
pusha
mov
pusha
xchg
xchg
test
outsl
adc
fs
mov
or
push
in
or
jmp
adc
push
sbb
add
push
jmp
orl
incl
mov
popl
add
pop
sbb
test
inc
cwtl
test
scas
sbb
sbb
sbb
jnp
push
push
fcoms
inc
test
mov
push
movsb
mov
loopne
jb
shlb
mov
inc
fldt
adc
int3
adc
xor
das
sarb
bound
xor
add
inc
and
fsubrl
sbb
pusha
cmp
jmp
out
inc
adc
fs
shr
sar
pushl
and
inc
add
or
sbb
or
shrb
jbe
mov
ss
jmp
aas
data16
out
test
ret
push
mov
add
adc
adc
cmp
js
loop
cvtps2pd
jg
pop
call
mov
ss
jb
cwtl
dec
lock
mov
es
mov
xor
rcrl
das
and
enter
lock
add
aas
aaa
pusha
call
and
in
lock
mov
and
mov
mov
adc
adc
rol
mov
jno
or
or
xor
lock
outsl
cwtl
add
mov
and
mov
inc
data16
mov
mov
jge
sub
rcll
orl
mov
mov
loope
fwait
push
pop
or
adc
loop
add
mov
sbb
pusha
add
push
push
push
les
scas
sbb
sbbl
data16
add
mov
loop
imul
sahf
rcrb
adc
mov
out
mov
dec
mov
sbb
insl
pop
out
sahf
adc
bound
ljmp
ljmp
push
lock
sbb
ret
hlt
pop
sahf
or
push
clc
add
adc
xchg
cmc
lar
and
pusha
and
fcmovbe
and
cli
mov
adc
add
ret
add
pop
xchg
outsb
orl
test
in
xchg
loop
mov
or
imul
arpl
add
adc
call
fdivrp
sti
insl
nop
test
pop
add
int
popa
inc
out
push
out
or
sub
aam
test
clc
pop
add
jmp
cli
xchg
repz
xchg
sbb
mov
imulb
in
pop
xchg
rclb
scas
xchg
push
int
fwait
push
or
sub
call
test
std
hlt
out
adc
and
push
or
in
jo
aaa
inc
xchg
pop
adc
mov
bound
repz
jecxz
popf
sarb
loopne
cmpsb
xchg
incb
stos
jo
sbbb
test
add
cmp
push
push
dec
jbe
ljmp
cld
cs
add
cwtl
loop
lock
divb
add
mov
lods
sub
lret
inc
add
hlt
mov
stos
call
adc
daa
xchg
fistl
or
xchg
mov
arpl
add
rcl
ljmp
jbe
sbbl
enter
or
dec
icebp
push
or
sub
or
inc
push
add
jl
adcl
adcb
stos
sahf
mov
and
or
je
fstl
fldt
int
std
jg
or
rolb
pop
mov
xchg
lret
bound
out
xor
mov
add
xchg
decl
roll
and
subb
inc
or
or
bndldx
leave
fidivrl
lock
mov
pop
fbld
sub
add
jo
xchg
notb
mov
loop
sbb
data16
or
dec
sub
loop
mov
jl
sub
and
add
adc
fnstsw
jle
jmp
sbb
sub
les
xor
daa
pop
sbb
add
out
mov
jmp
std
incl
add
or
add
mov
movb
sub
push
mov
notb
adc
nop
and
adc
xchg
lds
cli
dec
loopne
lock
mov
add
jmp
add
lret
mov
dec
mov
push
test
xchg
or
sbb
pusha
and
fwait
jne
or
add
lock
lock
sbb
sub
outsl
or
xchg
mov
add
ficoms
sbb
xchg
fildl
shlb
xchg
leave
fildl
into
test
inc
pop
dec
std
push
ds
orb
addb
add
lock
adc
and
mov
xor
stos
cmp
mov
xchg
loopne
ret
out
ds
xor
out
or
or
add
insb
pop
xchg
push
or
movb
hlt
nop
add
and
add
pop
jne
call
xor
add
adc
jnp
add
xor
jno
mov
and
push
mov
je
f2xm1
or
adc
ss
xchg
data16
jmp
test
xchg
fsubr
push
adc
cwtl
push
jecxz
xor
repz
add
mov
push
mov
or
nop
adc
fdiv
sub
dec
mov
lret
xchg
iret
adc
insl
movsb
lock
jl
shll
or
sub
sbbb
jmp
or
negb
repnz
insl
daa
adcb
fstl
xor
adc
jo
scas
xchg
icebp
adc
mov
xchg
add
mov
fisttps
pop
roll
int3
adc
xchg
popa
insb
push
add
scas
lcall
pusha
add
sub
pop
and
pop
loopne
add
popaw
dec
insb
frstor
mov
fwait
push
fldl
pop
inc
pop
push
and
xor
or
pop
je
sub
adcb
outsb
popa
dec
loop
adc
dec
inc
outsb
rorl
push
jo
sbb
das
mov
xchg
or
movsb
jno
mov
pusha
jp
inc
add
mov
inc
ret
mov
cmp
cmp
cmpsb
mov
add
add
pushf
and
sarb
movb
pop
mov
in
jb
jo
lods
push
inc
push
imul
adc
decl
out
add
adc
pop
incl
mov
add
addr16
ret
push
cld
mov
aaa
fnsave
xchg
icebp
loope
pop
loop
pop
gs
lea
add
movsb
push
add
mov
sahf
mov
pop
and
cmp
fists
push
nop
ljmp
js
add
ss
orb
jo
add
hlt
sub
add
sbb
and
sarb
mov
sbb
lock
addr16
cwtl
xor
add
add
sbb
mov
add
dec
mov
xchg
les
push
out
ljmp
xchg
push
push
rcll
add
shl
in
ds
push
sbb
push
cmpsb
mov
adc
jo
sbb
push
dec
ljmp
inc
es
push
sbb
hlt
loopne
aaa
cld
mov
sarl
loope
xor
hlt
adc
sti
xor
cmp
shll
rcrb
icebp
pop
push
pop
lock
cltd
andl
rclb
jp
cltd
bound
lret
jno
mov
insl
add
imul
mov
ss
push
or
mov
testb
mov
insl
fisttps
mov
out
add
inc
mov
xor
mov
or
jg
adc
ljmp
dec
pusha
adc
loopne
mov
out
clc
jg
pop
inc
pop
cs
in
mov
jp
inc
mov
jecxz
jle
jg
loop
pushf
push
sub
mov
jmp
movsl
push
sub
popa
and
mov
and
push
and
push
pop
adc
adc
leave
insl
test
hlt
pop
andl
xchg
add
mov
add
popa
test
call
dec
pop
inc
cmpsb
push
aam
pop
sbb
add
push
std
insl
sti
pushl
inc
jno
nop
xchg
and
push
xor
mov
stc
mov
lret
cmp
stos
test
pushf
xchg
mov
adc
push
fimull
mov
mov
xchg
sbb
add
mov
out
popa
inc
xchg
movsb
mov
push
sub
repnz
xor
pop
add
adc
xchg
push
lret
jmp
js
inc
or
inc
sbb
es
cmpsl
adc
loopne
inc
mov
lods
fiadds
outsb
insl
mov
filds
addr16
mov
mov
add
sub
or
mov
jecxz
paddsb
push
out
add
subb
xchg
lods
push
popl
push
movsb
and
push
shrb
pop
arpl
inc
xchg
mov
cs
add
es
mov
bound
mov
and
jle
adcb
xchg
fildll
xchg
aam
push
enter
xchg
ret
push
sbb
push
lock
outsl
mov
loop
push
loopne
jno
adc
mov
adc
js
pop
es
call
add
mov
mov
push
test
xchg
xchg
sbb
aam
inc
push
insl
xchg
subb
fistpll
push
repnz
mov
ljmp
sar
icebp
lods
test
mov
or
xor
jo
and
cli
insl
movsb
and
shr
lcall
adc
push
inc
add
mov
in
out
mov
xor
mov
jge
pop
jecxz
js
mov
sbb
add
inc
rcll
xchg
insl
test
addl
and
adc
add
add
mov
xor
add
inc
fisubl
in
ret
push
jmp
jp
add
xchg
adc
idivb
test
push
mov
jo
aaa
or
jmp
adc
int
sbb
insl
adc
dec
mov
push
nop
mov
xchg
inc
lods
loop
sbb
xchg
mov
data16
incb
mov
jl
rolb
mov
out
addb
cs
ret
scas
mov
dec
pop
cmpsb
in
in
out
add
lock
fnsave
xchg
call
fbld
in
or
sbb
or
or
mov
aaa
loop
ss
mov
mov
add
rolb
js
inc
clc
mov
sbb
add
xor
subb
dec
inc
frstor
dec
jge
mov
add
dec
inc
adc
xlat
mov
rol
mov
rcrb
xorb
or
or
add
add
xchg
mov
inc
aam
mov
add
push
ret
or
int3
or
dec
test
mov
andb
decb
addb
insl
pop
inc
pop
mov
push
insw
shlb
gs
inc
repnz
mov
or
xlat
add
mov
add
rolb
mov
and
mov
mov
mov
mov
cmp
addb
jg
and
in
add
mov
add
sub
gs
pop
addl
or
mov
xchg
mov
and
add
mov
loop
or
add
xorb
loopne
inc
hlt
mov
imul
andb
loopne
sub
imul
adcl
and
rcr
stc
add
inc
push
out
cmp
sbb
xchg
add
jg
fsubs
es
or
fs
loopne
rcll
insb
imul
push
push
and
or
mov
inc
jne
repz
addr16
sub
dec
rcr
cwtl
aam
repnz
jne
mov
xchg
inc
pop
and
add
rorl
sub
adc
pop
dec
cmp
inc
add
mov
addb
cmpsb
cli
pop
pop
xchg
add
cmovo
adc
mov
mov
mov
sarl
nop
lods
pop
ss
push
inc
or
cmp
or
add
jmp
shlb
int
int
dec
clc
mov
roll
inc
ljmp
inc
repz
mov
mov
dec
pusha
add
jmp
or
std
push
add
loop
mov
out
add
or
add
inc
push
xchg
adc
and
sub
sbb
mov
dec
push
adc
and
pop
clc
sub
js
cmpsb
xchg
jmp
or
aas
inc
dec
mov
mov
mov
loop
gs
xchg
pusha
es
cmpb
pop
dec
loopne
and
mov
push
loop
out
inc
xor
shlb
fistpl
mov
pusha
imul
add
inc
je
adc
cli
push
mov
insb
mov
push
mov
lcall
dec
test
xor
adc
pop
pop
add
and
inc
cmpl
xor
aaa
cld
outsb
outsb
mov
sarl
ret
adc
add
inc
or
loopne
pop
incb
adcb
pop
clc
xor
or
mov
xchg
add
inc
mov
decl
xchg
adc
pushf
dec
and
rorb
out
cli
fisttps
in
loope
mov
adc
call
jmp
inc
adcb
cwtl
cld
stos
dec
or
or
xchg
jmp
or
rcll
lock
test
test
idiv
add
bound
mov
cmp
in
lods
or
and
xor
push
dec
or
add
jl
clc
outsl
and
sbb
addl
sub
xadd
inc
das
mov
mov
in
or
cli
mov
push
loope
movsb
mov
rolb
mov
addb
add
scas
xchg
sti
cli
xchg
add
andb
dec
je
sbb
cmc
enter
nop
out
sbb
xchg
sbb
xchg
lret
dec
and
mov
push
sub
mov
cs
push
or
and
push
sbb
sbb
nop
test
dec
adc
mov
cwtl
mov
or
insl
pusha
cwtl
rcrb
or
call
or
js
add
rolb
clc
xchg
lds
call
or
clc
nop
add
mov
sbb
scas
mov
push
pop
xchg
int
and
adc
arpl
jo
dec
mov
add
es
and
fists
pushf
insl
ljmp
xchg
add
mov
cmp
jp
test
add
and
pop
and
pusha
loop
inc
mov
ja
mov
and
cmp
xlat
inc
or
jo
stos
sub
repz
add
std
outsl
inc
push
sbb
push
loop
sbb
in
inc
loop
xorb
mov
or
adc
iret
dec
push
cmpsb
xor
in
cmpsb
je
loop
out
adc
movsb
xor
mov
cmp
xchg
sub
aaa
jmp
fstl
xchg
xor
ss
scas
add
data16
or
adc
pop
in
inc
pop
dec
roll
les
scas
insb
cmpsb
cmpsl
fsubrl
xchg
inc
in
daa
js
aas
cwtl
adc
out
sbb
ss
insb
insb
push
sbb
fs
mov
testb
imul
push
insb
and
jl
shrl
mov
loop
mov
fistpll
adc
sub
dec
adc
aaa
jge
frstor
jle
mov
dec
inc
dec
pusha
jae
js
repnz
push
in
sbb
ja
and
in
and
fsts
add
out
ss
pop
pop
out
adc
xor
xchg
insb
cs
and
fisubrl
mov
jbe
nop
jl
pusha
insb
cmc
mov
movsl
pop
xchg
adc
outsl
add
rep
ficoml
and
hlt
in
rorb
mov
or
in
mov
mov
inc
ret
lods
call
mov
pop
mov
clc
cmpsb
push
fwait
lcall
push
shll
je
out
and
cwtl
fildl
or
dec
sub
jo
lock
pop
push
insb
ljmp
stos
add
mov
mov
sbb
rclb
xchg
fwait
mov
cltd
loope
xor
pop
fiadds
sub
cmp
fwait
call
scas
xor
jo
negb
add
push
and
fwait
in
movsb
frstor
loope
push
nop
sbb
or
and
stos
mov
loopne
mov
mov
int
int
cmpsl
movsb
int3
mov
insl
push
pusha
sbb
int
fiaddl
int
and
int
loopne
movsb
push
push
adc
or
stos
mov
stos
push
dec
sub
push
adc
cli
xchg
xor
or
outsb
xchg
dec
dec
loop
or
or
cmc
imul
rorl
fldt
test
xor
ljmp
pop
in
int
loope
in
cs
and
sbb
sarb
outsl
nop
mov
sub
outsb
stos
push
mov
in
pop
adc
lock
and
fldt
mov
shlb
nop
loopne
push
or
inc
aaa
jae
inc
jb
out
pop
ljmp
in
outsb
cli
adc
adc
jl
stos
jo
pushl
scas
fst
ss
filds
and
js
xor
in
pop
xchg
out
stos
cmp
or
push
filds
xchg
out
shrl
or
push
and
cli
ret
inc
mov
push
repnz
add
or
xchg
sbb
mov
add
add
loopne
idivb
mov
cs
sub
pop
or
ss
and
add
ss
mov
push
rcll
push
inc
test
sahf
mov
mov
cwtl
adc
xorl
orb
mov
cli
xchg
dec
faddp
push
pusha
stos
ljmp
sbbl
call
sub
and
cmpsb
and
adc
icebp
addb
mov
out
sbb
rcrb
mov
add
imulb
pop
xchg
xchg
jb
faddl
xchg
xchg
mov
pop
mov
xor
mov
xchg
add
mov
clc
cmpsb
cwtl
ds
sbbb
xor
xor
nop
mov
jno
insl
mov
mov
into
sbb
stos
ficompl
andb
inc
jmpw
loop
mov
notb
out
cmpsb
and
add
pop
sub
sub
xchg
stc
adc
lock
ljmp
add
bound
aad
mov
fsubrl
add
xor
xchg
or
and
dec
ret
sti
rorb
in
orb
inc
add
adc
jle
adc
xchg
pop
out
adc
adcb
imulb
call
pusha
test
push
in
jbe
rcll
test
adc
adc
push
mov
jnp
pop
and
cmpsb
push
adc
sub
and
inc
mov
pop
dec
and
aam
outsl
or
mov
ror
xchg
pop
lret
or
cmp
rcrb
and
xchg
mov
cmp
shrb
dec
xor
mov
cmp
ljmp
cmpsb
xor
cmp
rolb
je
xchg
push
jp
test
rolb
inc
jo
stos
cli
jmp
inc
outsl
sahf
sbb
jmp
jmp
hlt
jg
xchg
ret
cmp
les
aas
fnsave
or
and
rol
inc
mov
push
and
cmp
push
push
loopne
add
sbb
cmp
cld
adc
adc
hlt
mov
out
push
or
fcomip
aas
call
in
add
add
mov
call
push
cmp
sbb
and
cmp
sub
push
hlt
adc
in
loop
lret
xor
int3
cli
jl
jle
bound
sar
insl
xor
mov
fwait
jle
outsl
shlb
dec
jo
push
mov
test
sbb
aaa
cltd
sbb
je
mov
add
sub
sbb
xor
push
ljmp
pop
fs
inc
push
dec
insb
jbe
adc
dec
mov
xchg
xchg
cltd
mov
sbb
add
pop
andb
push
cwtl
scas
cmpsl
adc
cwtl
add
int
fwait
dec
sbb
cmp
lcall
add
sahf
rcll
lahf
dec
sbb
xor
in
lock
push
mov
ds
pop
cmpb
push
cmpsb
rcrl
scas
push
mov
or
pop
lods
lcall
insb
adc
sub
inc
add
cmp
jmp
push
jp
and
ss
dec
add
mov
mov
js
and
dec
jl
or
cmp
add
loopne
movsl
xchg
cmp
or
fwait
ret
orb
icebp
jmp
adc
xorb
andb
cltd
pop
into
subb
add
push
aam
cmp
in
nop
inc
mov
xchg
aas
std
add
and
push
cmp
cmp
in
hlt
in
into
add
dec
ss
add
jge
push
outsb
mov
adc
inc
push
loopne
adc
icebp
push
daa
aaa
in
dec
jl
fdivp
ss
lods
add
and
inc
sarb
inc
mov
add
iret
subl
pusha
add
xchg
sbb
notb
mov
add
add
add
add
imul
loop
xor
popf
jle
mov
xchg
sbbl
sbb
jbe
in
ljmp
adc
add
test
push
std
push
jo
ret
adc
pop
lods
jmp
add
rorb
push
cs
gs
outsb
or
sub
pop
dec
test
xchg
and
add
cs
and
jge
jmp
or
adc
dec
clc
rorb
orb
fdiv
ljmp
and
sarb
inc
clc
dec
cmpb
sub
je
outsl
cs
sub
add
pop
push
and
in
fnstsw
fldl
add
push
sarb
shrb
push
add
xchg
lods
push
mov
add
test
jle
jge
pusha
orb
into
test
adc
pusha
jg
clc
or
jbe
and
add
cmp
daa
add
mov
repnz
ss
push
int
jle
lock
or
or
jl
pusha
ret
add
jl
pop
jmp
sbb
fisubrs
push
push
cltd
loopne
adc
jp
add
and
mov
jg
ja
xorb
rolb
sub
push
dec
inc
push
rorl
add
in
sbb
xchg
inc
fdivp
and
sahf
jo
sbb
pusha
add
movsb
ret
cmp
inc
push
add
fdivl
stos
in
and
lcall
add
lock
and
cwtl
or
jne
sti
jmp
cltd
mov
sbb
mov
push
pop
push
cmp
inc
xor
stos
sub
adc
outsl
int
cmp
loopne
inc
cmpl
push
fimuls
inc
sub
dec
gs
subl
add
push
and
sub
lods
and
and
outsl
pop
push
and
or
add
ljmp
or
and
push
dec
scas
cs
add
addl
subb
insl
in
andb
xchg
jbe
scas
cli
mov
fs
inc
jge
cmp
jg
loop
sub
adc
add
test
fildll
push
roll
pop
mov
push
add
jecxz
and
call
fmul
cmpb
daa
or
push
outsb
mov
out
add
shrl
or
push
inc
add
in
in
loopne
out
std
mov
dec
loop
adc
adc
subb
xchg
rolb
outsb
ljmp
daa
and
or
push
pop
mov
paddd
clc
add
and
xchg
call
insb
clc
jge
loopne
and
push
subl
or
xchg
pop
sub
push
subl
imul
push
lret
lret
loope
out
popa
je
mov
ja
push
dec
add
push
jecxz
ljmp
popa
sahf
sbb
call
repnz
fisubrs
jecxz
sbb
repnz
pop
arpl
loop
mov
inc
fstps
sbb
popa
push
adc
pushf
in
addb
sbb
pop
sahf
repnz
mov
xor
sbb
cmp
shrb
fldt
xor
cs
js
mov
add
mov
and
adc
mov
fidivrl
pop
pusha
xchg
mov
ja
inc
pusha
lret
inc
xchg
and
fdivl
sub
stos
mov
xchg
lcall
or
loope
adc
sub
ss
inc
mov
lcall
and
pop
icebp
inc
fisubs
and
push
int
inc
or
cmp
loop
xchg
xchg
jecxz
rclb
inc
inc
into
inc
popa
add
mov
add
pop
iret
mov
fadd
clc
dec
xor
pop
push
and
dec
popa
orb
pop
sub
adc
popa
iret
sub
and
push
mov
lock
movsb
adc
lods
jge
adc
inc
or
adc
or
pop
mov
test
sub
push
imul
daa
sbb
xchg
outsw
adc
mov
ss
mov
push
outsl
rcrb
xor
insb
test
fldenv
and
push
pop
sarb
add
cs
adc
int
frstor
xchg
pusha
int
dec
mov
out
fdiv
pushf
inc
add
inc
add
outsb
clc
xchg
or
xchg
ljmp
xchg
ljmp
notb
insl
fnsave
add
xor
jb
daa
and
cmc
aaa
cmp
and
add
jo
js
pop
sbb
aaa
insb
add
xchg
es
rclb
mov
cmpsl
mov
xchg
or
test
fsts
jle
mov
add
push
and
sti
xchg
push
test
inc
pop
cmc
push
jo
or
jae
aam
push
add
lock
adc
xchg
mov
in
mov
mov
pop
add
in
xor
mov
mov
sbb
ss
pop
pop
jge
aaa
test
adc
and
and
addb
push
negb
mov
mov
fcoml
mov
loop
adc
or
mov
movsb
mov
add
pushf
scas
ljmp
inc
push
xorb
pop
in
neg
enter
mov
or
add
mov
mov
jp
xor
cmp
cld
scas
add
data16
push
jo
mov
mov
push
aam
adc
push
xor
cmc
dec
mov
adc
and
fmuls
mov
pop
shrb
rclb
push
cmovns
dec
cmp
push
sub
dec
mov
dec
jo
out
pop
mov
mov
lock
mov
pop
ret
lock
iret
xchg
pusha
cmpsl
not
push
cmpsb
push
imul
add
adc
jecxz
adcb
incb
pusha
adc
jo
push
fiadds
push
pop
fs
enter
push
sbb
daa
pusha
nop
aam
cmpsb
loopne
sbb
in
pop
out
push
push
adc
stos
mov
add
mov
and
mov
hlt
cmpsb
pusha
jge
mov
adc
cli
dec
loop
mov
andb
mov
xor
push
inc
movsl
adc
out
mov
push
repz
ud0
in
mov
pusha
or
inc
mov
out
test
or
jno
sbb
sahf
add
cwtl
test
or
add
outsb
mov
mov
ljmp
jo
rolb
mov
mov
call
outsb
and
cmp
test
mov
xor
fs
insb
xchg
icebp
and
push
test
push
mov
stc
mov
or
push
in
inc
repz
sbb
les
push
test
int3
xor
ret
add
jo
and
dec
add
jnp
mov
repnz
add
add
push
or
std
jbe
divb
push
dec
rcrl
roll
testb
or
add
shlb
out
pavgw
ret
test
orl
mov
cwtl
sbb
push
push
adc
fistps
xchg
shll
loopne
mov
adc
adc
repz
mov
and
mov
and
loop
sbb
mov
inc
add
cmpl
or
adc
loopne
test
outsb
nop
add
insb
arpl
pop
ljmp
push
jmp
clts
mov
addr16
jno
insl
xor
cli
and
add
sbb
fdivl
inc
daa
and
popa
sbb
push
mov
ja
pusha
xchg
push
divb
lret
push
fsubrs
sub
xor
loopne
xor
test
sbb
add
add
rcl
sbb
rclb
andb
bound
roll
sub
aam
or
jg
pusha
xor
push
into
add
add
sub
cwtl
and
mov
mov
test
nop
add
sub
xor
sub
push
andb
cmp
test
xchg
test
stos
stos
sbb
push
jecxz
mov
cmp
jo
int
push
push
mov
fwait
cmpsb
in
loope
aad
cmpsb
and
cltd
sbb
push
ds
loop
and
xor
in
adc
xor
data16
add
or
aaa
inc
fcomps
inc
push
rclb
or
loop
call
pop
and
scas
jmp
or
loopne
adc
xchg
push
jno
add
aad
mov
xchg
and
out
and
dec
adc
jno
insl
imul
or
add
outsb
inc
push
sub
sub
add
adc
cmp
dec
rorb
push
pop
mov
mov
add
and
xor
movsl
pop
lock
pusha
inc
jp
inc
ljmp
movsl
in
lea
and
js
adc
sub
sub
cmpb
bound
push
clc
pop
cld
inc
cld
movsl
add
mov
inc
or
sbb
adc
inc
pop
sbb
dec
dec
push
inc
out
mov
pushl
and
adc
or
stos
push
sub
xchg
inc
insl
fildl
and
scas
push
pop
sbb
xor
adc
mov
or
mov
mov
mov
stos
outsb
xor
ds
add
mov
subb
pop
repnz
movsb
bound
lock
into
mov
and
or
push
or
movhps
and
arpl
outsb
mov
mov
or
stos
roll
arpl
mov
bound
xchg
in
mov
inc
enter
lock
cs
ljmp
sub
fcmovbe
or
add
and
stos
clc
shl
pushf
gs
jp
add
jecxz
nop
lods
or
inc
sub
push
movsb
nop
jns
popa
push
std
dec
sub
das
ret
dec
cmc
roll
das
jo
cwtl
jae
xchg
hlt
sbb
gs
insl
sub
cld
or
mov
lock
add
dec
test
mov
jo
testb
xchg
out
and
mov
jo
xor
fbstp
xor
bound
ret
add
sti
rorb
dec
add
and
aam
and
loop
or
xchg
scas
repnz
shlb
push
cmpb
sub
sbb
xor
and
loop
rorb
test
jbe
xchg
add
ss
ljmp
cmpsb
ds
push
pop
loop
and
and
xchg
mov
and
and
aaa
js
dec
mov
add
rcl
imul
adc
inc
sbbl
dec
push
inc
push
cld
add
fmull
and
add
shrb
out
mov
mov
sub
pushl
mov
sbb
ss
out
add
shll
flds
jl
daa
mov
mov
icebp
aad
pop
add
adc
aaa
clc
xchg
repz
push
fwait
xchg
mov
or
cmpb
inc
adc
sahf
test
mov
ds
fdivs
or
popw
out
add
fsubrl
add
mov
stos
cmc
js
hlt
aad
scas
addb
push
or
sar
mov
add
loop
push
dec
sbb
jbe
leave
sbb
or
adc
add
addb
ret
sbbb
je
call
push
push
gs
in
push
adc
out
mov
sahf
addr16
sub
mov
adc
add
js
clc
daa
test
inc
mov
cmp
dec
push
pop
mov
ficompl
xor
mov
pmuludq
sbb
xchg
loope
jb
inc
orb
cli
and
in
fwait
insl
add
mov
adc
sub
mov
insl
fildl
add
mov
adc
jbe
mov
out
ret
out
xchg
adc
maxps
or
out
outsb
dec
fbstp
mov
add
mov
std
sbbb
pop
sub
aaa
add
push
or
sahf
sub
sbb
test
inc
std
add
push
nop
add
mov
loope
mov
sbb
add
orl
or
add
das
mov
inc
jp
daa
out
mov
sbb
call
adc
out
in
mov
sbb
push
bswap
add
jg
or
mulb
adc
or
mov
or
and
push
mov
sub
outsb
adcb
test
add
call
jg
mov
push
pop
scas
andb
mov
addl
xchg
mov
or
gs
add
lahf
rorb
sbb
pop
push
and
icebp
dec
dec
ret
ds
add
es
add
mov
xchg
mov
mov
enter
cld
out
arpl
cmp
daa
out
lds
pop
push
lahf
in
out
rol
stos
dec
push
cmp
add
std
add
mov
mov
in
lods
stos
mov
fists
testb
xchg
push
or
fistpll
inc
addr16
lds
or
adc
mov
scas
ljmp
sub
sub
add
lret
or
cli
test
sar
xchg
jmp
mov
xorl
hlt
and
clc
stos
lods
jg
cli
cmpb
or
sbb
dec
sarb
xchg
or
daa
je
insb
and
aaa
adc
push
shrl
shrl
in
push
loopnew
sub
adc
inc
pop
xchg
mov
rol
adc
cli
pushl
mov
xchg
mov
inc
pop
add
addl
adc
push
mov
imul
repnz
push
cmp
ss
es
pop
xchg
movsl
cmpsl
add
mov
add
rorl
outsb
inc
push
inc
jmp
xor
pop
mov
sbb
and
push
fisubrl
mov
mov
pop
jg
pop
mulb
loope
xchg
mov
loopne
nop
lods
aad
call
pop
mov
xchg
add
mov
sub
aas
adc
jg
incl
or
loopne
into
fwait
or
or
mov
out
arpl
and
xchg
or
es
inc
mov
push
dec
inc
out
mov
dec
push
add
in
outsl
sub
mov
lret
in
xchg
cli
gs
jmp
mov
test
and
in
rorl
outsl
jmp
adc
in
inc
adc
pusha
add
clc
outsl
pop
cmc
pop
ljmp
pop
arpl
xchg
addr16
shll
cli
adc
pusha
xor
repnz
and
xor
imul
fucomi
and
cmp
repnz
aad
and
addl
jmp
fldenv
lret
ret
sub
cmp
xlat
filds
enter
in
cld
push
or
sbb
adc
inc
sbb
jmp
sbb
dec
xchg
add
inc
clc
adc
in
push
ret
push
cmp
inc
sahf
subb
sbb
scas
jecxz
lods
in
popf
repnz
push
rcrb
push
or
enter
cmp
add
add
sub
mov
in
cmp
fs
mov
push
pavgb
and
and
aam
les
movsl
loop
test
or
xchg
rolb
mov
mov
not
cld
pop
add
mov
fldt
movsb
popa
jnp
shll
adc
push
xor
jl
data16
jp
cmpsb
sarb
or
pop
mov
dec
mov
and
lret
loopne
or
mov
sbb
adc
mov
add
andb
add
push
add
dec
or
push
xor
mov
icebp
jle
test
jb
sbb
cld
xor
sbb
fnstcw
push
push
insl
fwait
xor
int
fs
mov
cmp
inc
xchg
fs
sbb
test
mov
divl
pop
inc
shlb
out
add
add
mov
cld
decl
rol
stos
scas
pop
xchg
and
xchg
fmuls
pop
pusha
cltd
pusha
sbb
rcr
sbb
add
into
adc
push
out
loopne
andb
and
aam
xchg
add
push
add
or
les
xor
jge
and
sarb
ss
loopne
and
or
push
mov
nop
push
push
mov
sbb
add
xor
addb
stos
nop
adc
jo
pop
ds
pusha
or
inc
adc
cmp
pop
out
adc
mov
les
sbb
pusha
add
je
lea
push
inc
xchg
lcall
xchg
clc
mov
aas
imul
sbb
add
or
mov
ret
add
bound
jo
mov
xchg
jne
rclb
sbb
fs
cmpb
stos
add
cmp
test
cmpsb
je
insl
out
mov
sbb
mov
or
pusha
dec
and
mov
call
lods
mov
inc
loop
cli
sbb
cs
mov
add
pop
insl
xor
xchg
add
jle
xchg
out
or
pop
or
jo
pop
and
pop
adc
jo
roll
push
cwtl
mov
outsb
and
inc
or
mov
mov
mov
ret
dec
dec
shrb
cmp
fidivs
popl
outsl
xchg
cmp
and
sbb
add
pusha
mov
or
jo
shrb
sub
loope
lods
inc
mov
push
shlb
mov
add
xor
add
stos
and
push
daa
out
mov
lcall
pop
jo
dec
out
xor
cmp
xchg
jmp
mov
nop
imul
loopne
pushf
cwtl
mov
mov
or
arpl
push
mov
out
adc
lock
and
add
adc
add
ret
adcb
cmpsl
nop
sub
cltd
fists
in
pushl
scas
gs
adcb
adc
add
fldl
sbb
mov
push
daa
lock
mov
dec
aam
cmovs
or
xor
lcall
and
mov
add
or
ds
pusha
movntq
add
pusha
stc
sbb
inc
pushaw
push
lock
add
adc
insl
xchg
adc
and
ret
mov
inc
add
xchg
aas
inc
je
xchg
loopne
repnz
outsb
mov
test
add
mov
stos
call
cmp
ljmp
dec
sub
jg
movsl
cmpsb
les
movsl
sbb
rolb
mov
fucomip
and
mov
mov
mov
push
fistpll
test
adc
popa
movsb
dec
adc
sbb
xchg
jno
popa
loopne
mov
xchg
fidivs
pop
cli
fistpll
sub
cmp
adc
sbb
loop
xchg
fmulp
push
xchg
jo
pusha
add
insl
xchg
testb
lods
add
adc
lock
and
shll
dec
test
cld
adc
ljmp
das
push
and
fisubs
or
mov
jp
cmp
addb
aas
or
sub
in
or
jmp
ljmp
jo
xor
mov
xor
subb
push
adc
adc
decl
push
inc
prefetch
or
push
dec
lret
out
jp
lock
loopne
mov
sbb
adc
or
dec
sbb
jbe
dec
lock
call
outsb
or
push
pop
mov
mov
or
sbb
stos
outsl
dec
lea
das
xchg
push
xor
mov
outsl
mov
xchg
rclb
notb
or
sbb
mov
je
or
call
mov
sbb
adc
xorl
jmp
loopne
rol
sub
mov
filds
mov
mov
mov
out
or
cmp
aad
sahf
add
mov
push
or
inc
clc
mov
mov
out
and
fisubs
and
call
pop
fsubp
and
icebp
pop
imul
subb
push
add
push
hlt
push
add
stos
xchg
cmp
or
sar
imul
jle
fiadds
push
jbe
mov
movsl
fnstsw
rorb
rcrl
mov
sbb
xchg
insb
aas
nop
or
mov
push
inc
mov
enter
popa
mov
push
push
xorb
rcrb
cmpsb
sub
pop
add
mov
adc
addb
lcall
inc
insb
xchg
shlb
rorb
insl
push
in
lcall
cmpsl
or
push
push
fs
repnz
jb
push
sahf
add
adc
fdivrl
andb
push
scas
pop
bound
push
out
inc
xor
or
nop
and
das
xor
cld
rorb
dec
lcall
adc
xor
sbb
push
inc
dec
nop
adc
adc
adc
and
outsl
add
and
mov
push
cmpsb
testb
push
xchg
insl
cmpsl
push
stos
in
sbb
pop
rcrb
adc
or
inc
sub
or
push
push
push
data16
push
or
jo
shll
cli
pop
mov
xchg
dec
and
cmp
adc
push
incb
or
pop
inc
out
mov
push
ljmp
cli
fs
lcall
js
popa
inc
push
mov
push
xor
push
push
and
rclb
and
jge
add
shll
push
incb
gs
ljmp
cmpsb
out
and
pop
add
mov
ljmp
xor
inc
shlb
fisttps
hlt
push
hlt
aas
mov
movsb
out
rorl
aas
push
add
icebp
push
imulb
cwtl
push
dec
adc
fists
addl
add
add
mov
loop
pop
xchg
jnp
add
mov
sub
andb
stos
push
xchg
xor
push
adc
add
xchg
leave
clc
jg
mov
xchg
pop
wrmsr
mov
and
ja
push
pop
std
pop
jne
push
and
mov
push
fsubrl
pop
popa
mov
inc
jo,pt
js
lea
ret
lea
cmp
jno
pop
xchg
stc
add
scas
adc
loope
and
leave
mov
ljmp
in
mov
out
push
ret
loopne
sbb
or
pop
or
jp
fmulp
fsubl
aam
and
es
mov
daa
icebp
mov
hlt
rolb
jl
jnp
icebp
mov
and
push
pop
inc
sub
add
mov
mov
jmp
cmp
loop
pop
xchg
ret
xor
dec
sbb
rcll
es
pop
and
add
add
sbb
xor
add
jp
add
and
sbb
add
mov
push
cmp
aaa
jbe
popa
mov
add
outsb
cmc
ss
xor
test
pop
or
sub
je
xchg
fisubs
js
out
sub
clc
aad
add
sar
rolb
fcomp
inc
add
rcl
sti
add
jle
xorb
push
add
fisubl
fbld
mov
push
insl
popf
add
dec
or
sahf
cmpsb
orl
mov
mov
fildll
aam
or
dec
add
orb
xchg
mov
adc
movsb
les
jle
pop
jne
or
cmp
imul
outsl
jl
stos
and
lea
or
out
jp
repnz
sbb
cli
push
dec
mov
sbb
xchg
or
frstor
fdiv
orl
bound
xchg
xlat
mov
mov
cmpsb
test
insl
cltd
loop
mov
loopne
xchg
loope
cwtl
add
addb
inc
inc
test
fsubl
add
les
pop
and
dec
pop
and
dec
je
test
xchg
adc
inc
test
mov
shrb
icebp
mov
hlt
adc
faddl
push
out
add
xchg
js
or
in
and
push
subb
nop
ret
pop
and
mov
ret
or
cmp
cli
sub
sti
aaa
push
inc
bound
dec
push
xchg
inc
subb
mov
adc
rorb
inc
push
mov
push
inc
pop
xor
ficoms
pop
jbe
ret
push
lock
adc
outsb
into
push
sar
push
push
add
out
add
push
xchg
shll
fxch
fmuls
mov
in
or
orl
jbe
mov
xor
sarb
sub
mov
shrb
adc
pop
or
cmp
mov
addb
jmp
xchg
mov
jo
push
xchg
inc
clc
fcomi
mov
rolb
sbb
or
cli
fbld
rol
cmp
dec
mov
push
loopne
out
test
add
rorb
retw
mov
add
loope
popa
loop
jecxz
scas
loop
idiv
sbb
jbe
scas
pop
inc
or
xchg
cmp
mov
cs
mov
pop
aam
pop
xor
call
inc
push
je
inc
push
sbbb
mov
js
inc
push
shrb
adcb
insl
xchg
loope
ljmp
into
arpl
cmp
jmp
nop
in
xchg
loop
cmc
jae
orb
sub
jno
mov
subb
stc
mov
repnz
push
fs
push
add
mov
out
dec
add
push
lret
jo
sbb
pusha
sbb
ljmp
xchg
ljmp
jb
add
out
cmpl
add
add
sub
pop
and
pop
push
cli
add
imul
pop
js
inc
sbb
fildll
cwtl
into
mov
add
add
adc
xchg
push
xor
inc
xchg
dec
loopne
pushf
add
cmp
xor
push
addl
xchg
stos
cltd
sbb
hlt
rcrb
lds
and
mov
mov
sahf
repz
mov
test
add
popa
push
adc
push
mov
popf
sub
fs
mov
in
dec
cld
fisttpl
mov
leave
inc
push
mov
adc
inc
push
insb
mov
incl
out
movsl
xchg
in
or
pop
loopne
pop
push
fbstp
shrb
cld
arpl
adc
repnz
fdivr
loopne
mov
insb
andl
daa
sbb
sbb
mov
mov
mov
jecxz
mov
icebp
mov
add
dec
repz
jg
push
pop
fimull
push
and
or
pusha
adc
cld
cmpsb
or
loopne
or
jg
adcb
push
insl
dec
mov
data16
fimuls
lods
outsb
loopne
out
inc
ljmp
mov
or
sbb
xor
add
add
movsl
mov
rcrb
cld
ret
xchg
jle
stos
and
dec
pop
add
hlt
gs
pop
and
adcb
jp
imul
les
dec
es
adc
lcall
rcll
adc
sub
out
loopne
adcb
adc
ret
scas
inc
push
fcompl
jnp
jp
mov
call
adc
mov
pusha
aaa
sti
es
mov
cltd
and
push
insl
pop
jecxz
insl
xor
fstpl
and
hlt
pop
subb
loopne
addr16
pop
ret
pushf
aam
stos
nop
sbb
mov
in
orl
sti
addr16
add
inc
jbe
cs
daa
in
sub
sbb
lock
lods
popa
dec
xchg
das
add
pusha
rclb
rol
imulb
or
add
mov
and
jecxz
ret
sub
popa
movsb
mov
imul
or
or
inc
jge
mov
or
cmp
mov
mov
fucomip
fstl
and
mov
xor
add
gs
stos
clc
fildl
rcl
mov
mov
enter
and
jle
adc
test
mov
fcomp
inc
xor
or
add
add
dec
mov
int3
add
sub
cmp
mov
outsb
pop
and
fdivp
dec
mov
pop
in
mov
add
cmp
cmp
cmp
mov
pop
push
int3
repnz
sbb
or
or
inc
sti
ljmp
push
pop
out
inc
sbb
add
add
adcb
push
sub
cmpsb
fs
sti
xor
gs
testb
test
adc
sbb
fsubrl
out
inc
xchg
sbb
jo
mov
mov
add
shlb
inc
cmp
insl
sbb
sub
or
sub
xchg
xchg
fildll
or
and
push
add
orb
mov
mov
add
push
std
mov
adc
in
add
mov
push
add
push
xor
cwtl
fidivl
mov
or
and
adcb
xchg
loopne
ss
call
int
imul
imul
lock
cld
ljmp
fnsave
nop
add
and
sbb
cld
push
add
sbbb
and
dec
push
jl
adc
push
mov
mov
add
sbb
rclb
xchg
loope
das
push
jb
popa
rcr
or
add
dec
dec
lock
icebp
sub
add
ret
icebp
xchg
cmp
outsb
add
scas
mov
xchg
out
cmp
adcl
mov
sbb
inc
xorb
loopne
loope
roll
sbb
lock
addb
or
or
mov
sbb
testb
inc
xchg
add
push
adc
mov
xchg
out
shlb
int
cmpsb
add
mov
or
pop
adc
adc
push
pop
push
lock
clc
inc
inc
push
inc
jecxz
icebp
sbb
xor
nop
sbb
adc
fbld
sbb
insl
out
outsl
loop
ja
inc
cld
int
imul
dec
out
out
mov
add
insl
inc
scas
cmpsb
push
outsb
add
pop
push
clc
stos
inc
sbb
adc
cwtl
lock
ljmp
stos
pxor
jo
movsb
ret
scas
push
cwtl
out
adc
push
pushl
fdivrl
sbb
sahf
repnz
faddl
sbb
scas
lods
lahf
or
sbb
ljmp
les
loop
lock
std
icebp
lahf
sbb
fs
sbb
je
and
or
push
shlb
push
cmp
adc
mov
hlt
pusha
aas
or
push
adcl
push
push
pop
repnz
mov
addb
jbe
test
dec
shrb
jle
pop
in
adc
mov
sbb
out
mov
add
and
out
cmp
inc
stos
adc
imul
or
les
shrb
add
das
clc
sub
out
lcall
add
or
cmp
and
into
fdivrp
xchg
cmc
xchg
lods
xchg
jp
and
scas
data16
pop
or
add
dec
add
sbb
test
aad
lds
jle
loopne
xor
loopne
stos
or
inc
xchg
les
inc
jg
sub
scas
pop
call
and
dec
sbb
pusha
or
rcll
test
dec
inc
add
fmuls
sahf
add
in
and
jo
add
sbb
enter
sbb
shr
add
mov
and
cmp
mov
adcb
stos
xchg
lods
fldlg2
loopne
or
inc
aaa
push
sbb
fwait
test
mull
add
sbb
cli
xor
leave
sbb
xchg
lock
adc
or
orl
adc
jno
je
cmp
sbb
mov
and
adc
sbb
adc
les
xchg
add
cli
or
sbb
rcll
mov
cmpsl
nop
scas
adc
inc
mov
ljmp
sbb
rcrb
and
sub
mov
push
lret
or
add
shrl
jb
call
push
test
or
nop
aad
test
jmp
jb
loope
pop
mov
adc
fidivs
dec
adc
jmp
test
iret
push
sub
mov
shlb
jg
sbb
loopne
loop
dec
mov
mov
shl
xchg
sbbb
dec
ss
movsb
mov
adc
mov
mov
scas
sbb
call
outsl
push
adc
decb
xchg
in
jle
mov
push
and
ja
add
pushf
push
jo
or
sbb
jecxz
inc
jo
popa
jp
xchg
test
mov
mov
int3
push
mov
cmp
inc
add
push
jp
adcb
adc
mov
movq
sub
mov
and
sar
pop
mov
jmp
ss
xchg
mov
sub
and
std
pushl
fbstp
add
mov
pop
xchg
shl
add
mov
aaa
inc
daa
loopne
ljmp
xchg
lods
sti
data16
mov
fdivr
int
xchg
in
cmpsl
mov
jb
lcall
push
push
mov
iret
add
mov
fcmovnu
or
or
or
or
rorb
pop
push
or
lock
fiadds
leave
rorb
shl
add
int
adc
pop
adc
sbb
mov
mov
or
out
or
push
rorb
add
ret
jp
xor
jg
mov
rorl
inc
add
add
or
fsubrl
rorb
adc
push
out
js
pop
hlt
or
outsb
addb
jle
and
add
add
hlt
jb
cltd
jecxz
pop
out
xor
das
and
or
mov
add
and
and
movsb
sbb
jl
inc
cs
fmuls
mov
add
mov
push
or
pop
outsl
test
mov
test
jecxz
add
push
sti
jbe
mov
pushf
add
and
add
insb
add
add
rol
js
js
add
push
lahf
pusha
ds
or
mov
add
add
fdiv
xor
lods
add
arpl
mov
push
mov
add
jecxz
fsubrs
add
in
and
or
xor
loopne
je
inc
orl
sbb
orl
push
xchg
add
aad
cmp
dec
and
add
sti
inc
inc
add
add
add
adc
push
or
divb
pop
and
adc
sub
dec
repnz
and
addb
ds
and
or
or
test
ret
loop
dec
add
sbb
hlt
roll
pusha
xchg
popf
adc
inc
jmp
divl
dec
mov
or
push
pop
les
dec
xchg
lret
and
rclb
pusha
or
jecxz
mov
adc
rolb
add
and
add
sub
or
scas
loop
in
insb
out
add
xchg
out
fcmove
pop
mov
xor
daa
int
add
adc
pop
popa
cld
in
repnz
data16
inc
data16
lds
fisubs
xor
outsl
inc
cmp
aad
test
mov
xchg
mov
adcb
adc
je
xorb
or
sbb
nop
sub
mov
dec
jbe
int
pop
add
fimull
pop
or
lfs
call
notb
movsl
inc
decb
inc
mov
or
shlb
jge
push
cwtl
mov
mov
mov
push
inc
and
insb
cli
out
fdivr
xchg
cmc
adc
inc
rolb
sub
sbb
lock
rolb
popa
mov
nop
imulb
pusha
cli
mov
fcmovnu
push
sbb
daa
ljmp
sti
imul
or
and
addb
data16
or
sti
xchg
mov
push
repz
insb
ds
sbb
sbb
outsb
mov
xchg
cmp
mov
orl
loope
sbb
scas
add
or
mov
jmp
sbb
mov
stos
cmp
sbb
in
push
mov
addb
adc
adc
out
xchg
mov
mov
push
loop
mov
add
pop
cmpsb
mov
jbe
or
sbb
out
cmp
lcall
add
pop
add
data16
frstor
addb
mov
xchg
out
inc
pop
and
push
test
hlt
gs
xchg
push
out
nop
xor
push
xchg
mov
iret
ror
push
mov
push
movb
jg
sahf
rolb
add
cmovne
test
lock
push
pusha
and
orb
mov
add
push
xor
insl
out
insl
xchg
mov
mov
addr16
daa
int3
fistpl
insb
scas
add
repz
test
sbb
test
adc
out
jbe
add
lock
insl
fwait
repnz
movsl
cmp
xchg
lcall
add
cmp
in
in
sahf
test
jb
add
xor
fsubl
inc
inc
cmc
sar
add
scas
addb
shlb
fisttps
jp
push
bound
add
xchg
ror
in
pop
jecxz
pop
inc
fst
dec
cmpsl
fadds
fimuls
pop
xchg
cmpsb
pusha
stos
cli
aad
push
pusha
adc
mov
cld
inc
and
cmp
hlt
cmp
mov
jp
jb
inc
mov
or
data16
mov
cmp
sub
adc
sub
lea
decb
repnz
mov
lret
orl
loopne
cmp
add
adc
pushf
mov
or
inc
pop
inc
push
subb
pop
cmp
xchg
sbb
bound
sub
movsl
dec
xor
jbe
mov
sbb
cli
repnz
lea
push
les
rclb
int
roll
pop
sbb
inc
sbb
pusha
push
shll
and
and
ret
jg
lret
mov
mov
arpl
inc
add
and
cli
jg
cld
jmp
adc
aam
and
aad
push
add
add
cmp
jecxz
in
loop
mov
add
cs
outsl
dec
test
pop
pusha
adc
ret
sub
loopne
pop
incb
lret
call
add
sbb
pusha
or
cld
test
insb
lock
sub
aaa
jmp
lret
add
sbb
sub
adc
loopne
lahf
mov
add
pop
sbb
out
lods
xchg
xchg
cmpsl
pop
push
loopne
loopne
ret
mov
out
ret
mov
fldenv
movsb
std
mov
push
push
xchg
andl
addb
inc
fimull
push
mov
push
add
push
imul
pop
dec
clc
clc
ss
rcll
xlat
mov
mov
xchg
jmp
pop
aam
adc
aam
cmpsl
outsb
repnz
mov
fistpll
in
dec
add
mov
mov
pop
cmp
inc
fucompp
adc
and
sbb
sbb
xor
cmp
icebp
lcall
test
rorb
xchg
aas
or
mov
insl
pop
add
insb
outsb
mov
sbb
adc
in
sbb
std
scas
adc
sub
mov
add
jp
xchg
push
sbb
mov
sub
mov
int3
stos
sbb
out
cli
das
inc
pop
sbbl
loopne
sti
mov
add
and
insb
ljmp
add
fisubrs
push
add
mov
mov
outsb
or
das
mov
push
pop
icebp
sub
mov
lock
mov
inc
adc
fiaddl
push
sub
jp
mov
mov
stos
ljmp
inc
fs
lds
pop
in
loop
cli
insb
jl
add
subb
jbe
jl
daa
lcall
push
incl
or
nop
icebp
adc
sbb
add
call
pavgb
sub
insb
ja
or
add
fbld
or
cmpsb
xchg
fldcw
arpl
push
sti
or
mov
loopne
adc
push
mov
test
mov
and
outsb
add
insb
mov
mov
outsb
scas
in
adc
adc
filds
int
out
das
push
ja
dec
ljmp
add
adc
sbb
loop
mov
push
sbb
test
frstor
cmp
add
and
mov
imul
in
out
daa
push
inc
pusha
push
add
and
inc
shrl
imul
rcrb
or
imulb
les
jle,pn
and
loope
sbb
cmp
outsb
stos
repz
inc
movsb
gs
lcall
insb
mov
test
mov
lcall
imul
sbb
add
in
and
mov
sbb
sbb
xor
push
or
insb
mov
xchg
loope
in
in
sub
or
jmp
or
or
add
insb
loopne
sub
popa
xor
add
cmpsl
out
icebp
stos
add
add
jnp
cld
inc
ds
xchg
adc
repnz
dec
enter
pusha
pop
sbb
or
int3
stos
negb
ljmp
and
mov
add
shrb
add
mov
decl
sub
or
and
sub
insl
fisubrl
cmpsl
mov
sbb
sbb
sbb
inc
out
adc
lret
lock
push
stos
cmc
sub
and
adc
decl
adc
loop
and
cmp
sbb
insl
les
lock
and
add
es
hlt
aad
daa
push
xor
and
push
pushl
pop
sbb
inc
cmp
lock
adc
pop
dec
insb
bound
sub
lods
mov
or
add
inc
imul
loop
outsl
mov
movb
lock
push
ljmp
add
xchg
hlt
add
mov
test
cltd
ret
js
adcb
sbb
push
fsubs
mov
push
push
insl
add
loopne
sbb
rorb
xchg
cli
jg
inc
or
call
add
mov
shrb
jb
push
rclb
insb
add
cmc
or
xorb
in
insl
loopne
in
insb
push
popf
rorl
mov
or
call
add
mov
sub
push
mov
or
adc
fadds
sub
cmp
sub
and
lods
adcb
fsubp
scas
sub
rcrb
or
add
or
mov
or
ljmp
sbb
insl
mov
mov
pushl
add
xchg
shlb
mov
int
jmp
and
push
or
stos
xor
push
inc
aad
clc
in
data16
test
add
xchg
std
insl
mov
mov
push
add
adcb
stos
lds
ss
adc
mov
ss
outsb
call
push
in
in
out
test
call
or
or
popa
add
pusha
add
cs
push
cmp
lcall
pop
movsb
push
add
mov
and
add
mov
in
inc
xchg
add
stos
mov
nop
add
jg
push
push
es
jp
inc
rorl
jge
nop
popa
lret
in
push
add
dec
je
dec
loope
cmpps
or
pusha
inc
andb
in
mov
nop
jge
or
jmp
inc
in
in
ret
sbb
gs
iret
adc
adc
mov
push
push
add
push
add
and
push
add
stos
mov
inc
movaps
mov
ror
arpl
into
test
mov
loopne
fdivl
push
call
add
daa
nop
sahf
insl
jmp
insl
ret
int3
or
pop
popa
ret
dec
push
xchg
adc
push
das
add
fbld
mov
cmpsl
push
add
add
fcomi
ficomps
xchg
fcmove
inc
add
add
mov
js
mov
cwtl
in
mov
mov
out
adc
pop
pop
outsb
shrb
or
mov
add
mov
add
mov
sbb
inc
push
adc
adc
ret
sub
xchg
cli
shlb
aam
loopne
sub
jo
ljmp
add
add
pusha
pop
add
xorb
adc
inc
mov
lods
bound
gs
add
testb
subb
rcrb
ds
les
insb
add
lea
movsb
lods
loope
fiadds
mov
jl
dec
add
dec
call
or
and
fstpt
jo
xchg
fwait
adcl
fs
lods
repz
clc
fcmovnu
push
adc
and
pop
adc
or
xchg
call
jo
jo
lret
add
and
pushf
and
cld
nop
xor
arpl
sbb
insb
xor
jp
clc
mov
fs
nop
pop
xor
add
repnz
add
dec
adc
xor
out
jg
mov
loopne
mov
pop
out
mov
push
add
out
outsl
adc
adc
push
or
inc
push
push
add
or
push
jg
add
adc
mov
mov
and
cmp
pop
lods
or
add
fsubrs
int3
mov
imulb
or
fcmovb
add
fildl
nop
adc
mov
or
xor
adc
jo
mov
or
call
add
inc
enter
push
addb
repz
add
ljmp
xchg
cmp
dec
sbb
push
add
push
scas
les
mov
imul
ret
push
add
mov
inc
sbb
or
fiaddl
sbb
popf
pop
sub
cli
push
cmp
aam
mov
and
rolb
jg
xor
loop
int3
mov
hlt
addr16
xor
scas
mov
and
ljmp
mov
push
and
out
inc
gs
and
mov
outsl
movsb
inc
inc
jg
gs
mov
or
pushf
cmpb
sbb
dec
mov
loop
push
add
xchg
fsubl
mov
inc
mov
or
jg
push
xchg
rorl
icebp
add
enter
fstpl
lods
pop
xchg
call
or
adc
pop
movsl
mov
or
mov
fcos
testb
std
add
add
or
outsl
out
ljmp
dec
sub
insb
ds
pop
hlt
ljmp
nopl
mov
inc
inc
insb
jo
jg
inc
jae
or
cmp
aaa
xor
cld
add
orb
mov
jo
test
and
sub
pop
push
dec
sub
lret
pop
add
test
cld
je
orb
das
xchg
stos
mov
add
inc
xor
xor
mov
add
jle
imul
lock
pop
pop
push
add
push
and
push
lea
addl
daa
sbb
sbb
adc
dec
inc
insb
pop
fdivs
inc
js
add
and
gs
or
imul
add
fwait
repnz
dec
sbb
in
jo
fwait
dec
mov
imul
int3
push
jp
popf
les
push
push
mov
stos
push
sti
pop
or
add
sarb
subl
jo
test
add
cmpsb
or
pop
xor
jnp
incb
stos
rolb
inc
push
cmp
out
lcall
inc
or
sub
adc
xchg
mov
mov
pop
mov
push
scas
fldl
cmp
call
cmp
adc
push
faddl
or
adc
call
inc
push
loopne
testb
cli
add
mov
mov
faddp
jnp
pop
xchg
shrb
mov
mov
dec
enter
adc
xor
es
jg
or
jb
add
insl
rcrl
and
or
mov
adc
fucom
mov
roll
xchg
outsb
cld
bound
repnz
and
pop
ljmp
inc
add
ret
inc
or
les
movsb
and
push
cmc
jl
sahf
dec
mov
mov
adc
mov
sub
out
inc
les
sub
push
sub
and
mov
and
mov
mov
loopne
data16
lret
push
or
add
mov
movsl
stos
imul
leave
rcrb
xor
inc
or
mov
sbbb
das
pop
inc
or
mov
sub
scas
pusha
test
movsl
andl
test
ret
jmp
loop
js
aaa
call
and
cmc
mov
loopne
stos
ds
push
and
adc
push
mov
cld
or
and
into
orb
pop
mov
dec
pushl
repnz
outsb
andl
fimuls
xor
pop
and
out
xchg
cld
insb
inc
push
andl
dec
data16
iret
mov
add
cmpsb
xorb
or
addb
loopne
mov
mov
mov
or
mov
imul
ds
add
out
add
test
dec
filds
shlb
or
or
insb
add
mov
xor
jmp
js
loopne
scas
or
adc
icebp
fistpll
inc
mov
gs
or
das
cmpb
mov
les
cli
clc
xor
fiadds
xchg
inc
lret
inc
pop
roll
and
movsl
scas
mov
add
dec
push
add
clc
jg
add
insl
and
xchg
mulb
loopne
sub
xchg
roll
fidivs
push
into
push
mov
push
cmp
pop
or
or
inc
push
mov
xchg
cwtl
les
xchg
arpl
mov
jle
cwtl
int
outsb
jecxz
sbbb
push
or
loopne
or
push
call
add
aaa
or
pop
scas
nop
or
dec
hlt
js
scas
xchg
aas
mov
mov
sbb
orb
push
mov
daa
lcall
jmp
or
push
or
dec
push
jbe
cmp
outsl
add
loop
xchg
add
test
cmpsl
or
push
jge
mov
testl
xor
frstor
pop
add
adc
fnsave
test
push
push
jl
add
cmc
add
sbb
pop
call
nop
mov
or
into
sahf
sub
fbstp
add
jnp
or
adc
inc
sahf
jle
add
js
jg
ja
in
sub
roll
test
mov
mov
rorb
cld
fistl
sbb
scas
xor
and
jecxz
xor
xor
mov
nop
sbb
mov
add
mov
dec
mov
shll
mov
xchg
ret
push
xchg
mov
pusha
lret
roll
mov
ret
cs
loopne
inc
jbe
mov
mov
pusha
sub
xchg
cmp
dec
push
cli
testb
bound
push
cli
ss
push
xchg
cli
lret
mov
cwtl
insl
cmpsl
call
test
fdivp
push
sahf
movsb
add
inc
ja
push
push
sbb
push
lret
mov
scas
add
sbb
or
sbb
inc
jo
add
or
pop
repz
fs
inc
push
fstpl
ljmp
mov
data16
inc
pop
mov
jo
pop
inc
test
lock
push
js
incl
push
mov
dec
push
rcrb
sbb
pop
sbb
xchg
mov
pusha
sbb
jle
jmp
rclb
scas
and
movq
cmp
mov
add
add
or
std
jg
rcr
xor
orl
push
mov
pusha
inc
lock
les
push
std
pop
lods
adc
insl
sbb
inc
mov
adc
lock
pop
mov
mov
aam
sbb
adc
xchg
push
jg
pop
mov
loopne
add
lcall
mov
xchg
add
jbe
mov
adc
sbb
orl
mov
jbe
add
inc
cmpsb
adc
fisttpl
jo
psrlq
pusha
dec
jno
and
sti
jb
hlt
inc
pop
hlt
and
std
fistps
dec
addr16
jae
adc
or
data16
sbb
push
xchg
adc
cli
push
sub
mov
mov
push
les
clc
imul
call
fiaddl
add
inc
nop
fcomp
inc
or
fiaddl
scas
movsb
mov
test
lock
add
in
dec
sti
and
cmpsl
inc
hlt
or
add
stos
add
or
dec
subb
inc
test
push
out
orl
in
sub
loop
imul
testb
jg
cmpsb
mov
aas
cmp
rorb
push
nop
cmp
jae
mov
mov
imul
dec
xor
xor
or
sbb
dec
dec
test
mov
fs
notb
sub
push
jecxz
push
or
push
sbb
xchg
mov
lea
je
addb
mov
push
push
mov
mov
adc
and
sarb
or
in
inc
dec
push
sbb
outsl
inc
lods
shlb
xorb
scas
push
or
ret
test
insl
daa
fwait
add
negb
sbb
into
ss
sbb
add
inc
clc
mov
sub
lcall
push
mov
mov
mov
push
add
rcr
andb
add
lret
pop
adc
outsb
inc
sub
mov
push
fisubrs
les
push
xor
adc
push
ljmp
ljmp
push
sbb
add
push
clc
xchg
inc
js
and
mov
xorb
or
mov
mov
sbb
bound
jo
std
or
push
jmp
and
adcb
out
mov
xchg
repnz
je
rcrb
pusha
or
pop
in
lcall
imul
lahf
push
negb
addb
repnz
cld
push
movsl
fstl
cmp
mov
or
and
and
pushl
push
repnz
push
ds
sbb
add
ljmp
add
nop
add
data16
pusha
push
xchg
add
mov
and
adc
in
inc
arpl
mov
decb
into
xor
and
xor
mov
aam
inc
adc
add
or
mov
ret
lock
or
pusha
cld
lahf
add
shrl
adc
cmp
mov
add
adc
out
inc
icebp
adc
jo
cli
sbb
daa
addb
push
testb
or
outsl
or
inc
ret
jge
push
jb
xchg
ljmp
mov
mov
jo
test
repz
lahf
lods
cmp
mov
outsb
je
adc
xchg
addb
and
icebp
dec
dec
jmp
ret
mov
and
cmpsl
xchg
idivb
mov
mov
adc
mov
push
push
cli
push
loop
adc
xchg
and
ret
ret
mov
cmc
lcall
xchg
push
bound
rcll
push
fdecstp
dec
cmpsb
add
mov
fildll
jle
add
fdivr
push
lea
hlt
in
in
lcall
push
add
mov
adc
sub
push
and
mov
fdivr
mov
or
cs
add
or
add
scas
mov
fcoml
cmpsb
cmp
or
mov
add
mov
or
xchg
xorb
or
mov
subl
test
dec
notb
ljmp
inc
mov
stos
shrb
sahf
jbe
sub
nop
repnz
or
dec
push
nop
testb
clc
in
add
pop
xor
mov
add
call
mov
or
and
inc
adc
add
les
push
add
push
cltd
fwait
andl
and
mov
in
xchg
mov
and
adc
add
or
mov
cmpsl
pusha
add
inc
adc
in
jge
push
add
cmp
les
int
jecxz
pop
shl
sub
dec
sbbl
and
test
pop
inc
mov
inc
ret
arpl
pop
cmp
fisubl
dec
test
ds
mov
adc
loop
out
and
mov
sub
adc
push
pushl
adc
or
stos
test
or
dec
es
aad
push
in
mov
inc
rolb
or
or
test
adc
xchg
pop
inc
push
std
incl
andl
ljmp
adc
push
adc
sbb
add
repnz
inc
mov
mov
mov
add
jl
or
outsl
push
pop
fnstsw
xchg
sahf
insl
in
pop
das
xor
pushl
add
inc
add
out
inc
add
add
cli
add
addl
mov
xchg
mov
mov
sbb
mov
imul
inc
inc
loopne
sub
mov
arpl
or
sbb
pop
inc
add
mov
fwait
adc
mov
sbb
inc
adc
stos
mov
or
sbb
ja
outsb
sub
push
inc
pop
lds
or
add
push
out
mov
int
jbe
lock
rcrb
sbb
faddp
inc
push
adc
sbb
sbbb
sahf
jbe
xorb
lods
subb
aas
push
je
sub
rclb
adc
pop
add
add
sbb
cmc
adc
jecxz
and
fcom
add
in
or
inc
push
or
sahf
or
sbb
sbb
mov
mov
xchg
fisubs
adc
fistpll
loop
add
xchg
lock
test
in
gs
or
cmpb
aam
cmpsb
xchg
dec
xchg
cmp
add
and
mov
push
repnz
loop
js
add
push
insl
or
add
rcrb
das
test
fiaddl
aas
xchg
pop
mov
fsubrs
inc
mulb
loopne
mov
andl
rclb
in
mov
jg
testb
add
repz
faddl
rcll
push
inc
push
testb
cli
add
sbb
mov
subb
cmp
xor
xchg
into
pop
ss
jg
icebp
dec
fiaddl
sub
in
push
clc
sbb
dec
movsb
sub
xchg
aas
mov
cld
jmp
xor
push
pop
inc
pusha
inc
out
and
mov
aaa
add
movd
in
inc
andl
insl
in
mov
inc
cmp
insl
push
push
aaa
mov
push
dec
add
adc
sbbb
add
jmp
mov
mov
enter
cmp
rorl
pusha
adc
loopne
push
popl
sbb
push
and
ljmp
fdivs
inc
jge
call
dec
pusha
or
inc
sbb
mov
loopne
add
sub
add
daa
add
and
stos
push
or
or
or
mov
inc
pop
fwait
loop
and
orl
add
add
xchg
testb
xchg
out
mov
xchg
loop
in
cli
mov
mov
adc
jle
sarb
loope
jmp
enter
pop
shl
or
add
xorb
inc
mov
and
inc
mov
jae
faddp
cmp
rorb
outsb
data16
lcall
add
xchg
cmp
jb
mov
inc
inc
mov
jp
loop
xchg
cmpsb
fdiv
sub
fcmovu
xchg
pop
push
mov
jne
lds
push
rolb
mov
dec
fadds
shll
loopne
inc
push
mov
jo
loope
pop
js
inc
dec
cld
ret
add
mov
add
jo
or
or
mov
cmp
jnp
jg
lret
inc
cmp
mov
cmp
mov
add
inc
push
sub
cmc
test
add
mov
add
mov
adc
jmp
orl
bound
stos
mov
add
add
in
jle
push
adc
jl
pusha
sarb
out
subb
sti
pop
jmp
push
mov
cmp
inc
or
jg
mov
loopne
jl
jle
mov
xchg
int
pop
icebp
mov
or
lcall
sub
or
call
sbb
xor
je
sar
bound
ljmp
std
mov
mov
loopne
out
inc
addb
pop
push
shrb
movsb
pop
mov
push
or
or
push
xor
sub
push
push
repnz
inc
loope
mov
bound
ljmp
xor
scas
jmp
add
mov
pop
sub
mov
mov
sarb
and
mov
cmpsb
lcall
mov
xor
nop
sahf
cpuid
add
call
shlb
sbb
cs
das
sub
subl
insl
and
bound
push
outsb
jl
adc
fdivl
rcl
or
cmpsb
mov
and
inc
cmpb
gs
dec
and
mov
insb
addb
sbb
pop
sbb
pusha
mov
push
push
mov
mov
inc
roll
xchg
dec
out
ljmp
out
sub
mov
ret
sbb
hlt
mov
push
negb
mov
cmp
push
add
or
mov
adc
dec
mov
inc
fisttpll
inc
sbb
mov
or
xchg
mov
sahf
lods
pop
mov
addb
addb
aam
pop
loop
mov
mov
out
sti
ss
cwtl
cwtl
loopne
shll
and
test
popf
shlb
and
adc
xchg
outsb
push
ret
outsb
sti
bnd
mov
mov
jno
or
pop
lock
outsb
andb
scas
xchg
push
sbb
mov
loopne
lock
imul
xor
and
adcb
and
loope
pusha
stos
test
clc
gs
adc
inc
mov
pop
les
sub
sub
lods
fstl
and
mov
add
arpl
add
jecxz
xchg
xor
inc
xchg
ds
or
mov
movsb
sti
adc
and
adc
inc
adc
test
or
int
and
in
mov
push
test
cmp
push
xor
jne
bound
sti
aad
icebp
push
pushf
push
pop
pop
and
xorb
movsb
test
sbb
lahf
xchg
jle
loope
into
lock
and
shlb
mov
inc
mov
jno
test
or
dec
in
push
pushf
xor
inc
std
add
add
ficoms
inc
roll
aaa
mov
std
imul
mov
outsb
es
dec
inc
shlb
aam
andb
xchg
jle
mov
adc
rolb
add
fistl
sub
cmp
xchg
push
out
nop
inc
andl
data16
fwait
mov
mov
mov
sbb
es
ljmp
sbb
pop
fsts
pop
mov
jmp
ret
inc
mov
orps
inc
or
xchg
sbb
push
ja
nop
pop
adc
xor
rep
fisttpl
mov
or
dec
fdiv
fwait
mov
add
insb
scas
ja
mov
dec
cmp
adc
jo
dec
bound
pop
sub
adc
xchg
subb
jnp
add
pop
or
dec
mov
jno
gs
out
mov
push
das
cli
mov
mov
and
mov
mov
push
sbb
ljmp
fcomps
xor
and
cmp
sbb
sbb
ljmp
dec
adc
sub
pop
xchg
sub
ljmp
sbb
jb
pusha
test
mov
roll
scas
pop
test
cli
push
adc
out
mov
xchg
pop
dec
cli
or
popa
adc
mov
cmp
push
loop
and
fwait
pop
cs
mov
pshufw
sbb
aam
jmp
pop
pop
adc
and
js
nop
cli
pop
adc
add
movsb
pop
cli
lock
aaa
sbb
rorb
out
and
jnp
test
inc
ljmp
add
out
mov
sahf
in
mov
bound
add
mov
movsb
mov
pushf
cmpsb
pop
adc
pop
xchg
push
and
or
pop
ret
iret
xchg
clc
mov
mov
xor
hlt
icebp
adcb
push
cli
dec
sti
in
sub
mov
adcb
inc
nop
or
xor
inc
ss
mov
or
push
adc
add
push
jge
mov
push
std
aam
inc
adc
inc
sbb
shlb
mov
push
sti
fwait
fwait
decb
adc
sbb
mov
xor
jp
mov
aam
out
inc
mov
testb
rorb
insl
xchg
sbb
cld
lcall
xchg
or
mov
dec
add
idivb
xor
sub
add
clc
out
inc
xchg
and
mov
inc
ljmp
nop
mov
icebp
pop
stos
rorb
popa
inc
in
pusha
jo
lcall
adc
mulb
pushf
jecxz
inc
inc
mov
xor
mov
je
sbb
cmp
shl
inc
int3
loopne
cld
call
popa
push
pop
and
jo
sub
mov
andb
pop
push
cltd
adc
or
add
stos
mov
push
cmp
xchg
pop
lods
popf
push
inc
or
dec
insb
sarb
aam
cmpsb
xchg
inc
xchg
fnstsw
mov
ljmp
lock
imul
fldt
xor
sbb
push
jecxz
daa
pusha
adc
ja
push
pop
mov
add
adc
inc
sub
xor
cld
fsts
add
mov
push
or
hlt
and
fbld
loop
fistl
mov
cwtl
lock
popa
out
mov
add
mov
adc
in
pop
lcall
push
lret
xor
std
pop
dec
pop
es
push
or
add
mov
xor
xor
ss
jb
xor
jno
lds
and
mov
sub
dec
inc
fdivs
and
or
mov
arpl
cltd
add
cltd
ljmp
ret
lods
push
inc
fimull
push
aas
add
dec
xor
xor
jnp
push
add
outsb
mov
ds
ret
rcl
add
add
dec
ljmp
js
jae
jo
inc
into
push
sbb
les
pusha
enter
and
mov
pop
insl
push
or
sub
lcall
stc
push
lret
push
jno
mov
scas
adc
clc
insb
stos
jecxz
push
add
and
jo
dec
mov
shll
add
mov
lods
insb
fcompl
orl
cld
add
jg
sub
add
add
test
add
int
or
shr
push
cltd
sbbb
push
add
xchg
out
fdivrs
outsb
outsl
bound
pushf
sbbl
adc
jbe
push
pop
add
add
mov
mov
xchg
lock
pop
rolb
imul
mov
gs
sbb
or
pop
adc
sbb
jl
add
minps
or
dec
andb
addb
dec
jecxz
out
and
jp
push
mov
testl
inc
rol
jg
ficomps
push
andb
inc
add
fldt
test
jecxz
and
mov
in
xchg
jo
sbb
push
outsb
mov
adc
out
and
adc
jbe
add
test
sub
rorb
mov
loope
data16
add
dec
out
xchg
les
test
orl
shrb
data16
adc
sub
push
inc
pop
ss
addl
sbb
mov
stos
adc
mov
leave
sbb
push
out
inc
outsl
add
cmc
insl
sub
push
xor
sub
and
aaa
mov
rorb
adcb
push
out
pop
movsb
dec
push
cwtl
mov
popf
inc
or
adc
in
sbb
cmp
addb
inc
cmp
in
stos
and
cmp
and
shlb
fldcw
pop
stos
add
sti
xchg
es
addr16
mov
push
adc
imul
sbb
data16
add
push
jo
add
nop
ret
lcall
push
add
filds
arpl
inc
add
push
rolb
mov
ja
jb
add
lea
dec
mov
inc
push
in
sbb
or
pop
add
ret
mov
xor
ret
ss
bound
and
shlb
stos
pop
lock
mov
test
je
add
mov
inc
add
jle
imul
sub
push
hlt
xor
fistpl
cmp
inc
outsl
jb
rorb
push
in
sbb
cli
andl
and
insl
mov
divl
push
aas
add
jb
add
popa
push
into
loope
adc
adc
lea
repz
inc
inc
add
add
xchg
out
nop
lcall
lcall
lock
mov
dec
or
and
jp
mov
dec
xchg
mov
dec
imul
jmp
pop
and
inc
cmp
add
sbb
sbb
jmp
cmp
cmp
adc
mov
or
aaa
add
pusha
lds
hlt
loop
pusha
adc
inc
or
in
or
mov
or
lock
das
inc
ret
and
out
xor
out
and
jbe
shrb
mov
int
or
mov
mov
call
adc
orl
fwait
cli
decl
insb
xchg
pusha
fistl
pop
and
andl
pushf
rcrl
std
mov
add
xchg
mov
pusha
sub
sub
rorb
test
sbb
sub
insl
ret
addb
inc
push
xchg
and
roll
or
adc
cmp
add
add
xor
lcall
pshufw
adcb
mov
adcl
adc
sub
cmp
icebp
ljmp
loop
xor
hlt
cmpsl
jo
pusha
inc
fs
jmp
mov
mov
ljmp
adcb
imul
fs
cmp
xor
popl
inc
or
xchg
test
mov
test
sahf
mov
xor
pop
jo
and
xor
mov
loopne
dec
shrl
sbb
or
stos
mov
adc
cs
loopne
call
shll
inc
and
inc
das
cli
or
push
or
idiv
inc
adc
lret
or
jae
sbb
xchg
ja
pushf
sbb
pusha
or
mov
andl
mov
inc
jge
add
add
mov
std
ljmp
inc
leave
add
mov
push
lcall
adc
subb
push
push
out
xor
inc
sub
jge
mov
ficompl
mov
addb
or
mov
outsl
imul
rcrb
cwtl
das
cli
fistps
call
insl
push
xchg
aas
shll
and
mov
mov
loopne
xchg
nop
outsb
add
int
xchg
loopne
jle
jmp
mov
cmp
enter
push
repz
and
loopne
shlb
cmpb
push
clc
dec
gs
pop
fcompl
cwtl
test
loop
aaa
test
sub
cmpsb
cs
lock
xchg
fldl
gs
add
or
mov
add
xchg
mov
test
xchg
je
adc
rcrb
sub
loopne
mov
cmpb
mov
imulb
or
call
mov
lcall
or
adc
movups
add
add
xchg
js
insl
scas
ljmp
add
clc
insl
add
ss
test
adc
pusha
sti
cmovbe
daa
or
pop
add
dec
and
pusha
bound
mov
clc
jo
inc
push
adc
push
fsubl
es
and
add
adc
sbbb
add
xor
mov
push
add
gs
incl
inc
inc
sarb
imul
add
sbb
and
mov
sub
mov
push
shlb
sbb
ret
mov
sbb
jo
loopne
xchg
fdivrl
ljmp
rclb
mov
sub
mov
pop
xchg
aaa
loope
push
dec
or
pushl
gs
loope
and
push
in
xchg
dec
dec
dec
lock
fisttpll
loop
add
jb
sub
pop
sub
and
add
outsb
add
add
insl
sub
xchg
repnz
imull
in
add
dec
add
imull
outsb
not
push
test
or
nop
xor
or
push
daa
test
clc
pusha
pop
imul
and
mov
popa
andb
mov
pop
adc
xor
sbb
or
lret
rcrb
sub
push
ret
cs
xor
jo
add
loop
nop
add
push
push
bound
sub
and
imul
loopne
add
jl
pop
std
push
nop
adc
add
inc
xchg
mov
mov
or
rolb
fdivs
roll
adc
jb
daa
les
and
pusha
push
fdiv
mov
push
loopne
inc
fwait
cli
fidivrs
xchg
pop
loopne
fisttps
adc
roll
push
inc
push
test
adc
dec
push
jno
jno
ljmp
cwtl
jo
popa
aas
mov
nop
or
mov
sub
jmp
mov
xchg
jg
mov
stos
push
sbbb
shlb
mov
xor
or
lahf
insl
lcall
inc
add
fisubrl
pop
fsubp
movb
mov
and
cli
fsubp
decl
jge
arpl
lock
jb
adc
add
icebp
mov
adc
lcall
daa
sbb
repnz
into
repnz
mov
mov
mov
stos
cli
mov
xchg
insb
jo
add
xchg
or
mov
xchg
test
aam
cmp
and
enter
loop
lret
out
xchg
add
mov
inc
sti
pusha
xor
in
adc
idivb
sub
adc
imul
dec
mov
dec
in
scas
jl
sub
xor
and
insl
and
decl
adc
cmp
loopne
mov
add
jbe
or
rolb
xchg
out
and
rcr
in
loopne
mov
das
xor
shl
add
loopne
xchg
out
push
fcmovu
xchg
jecxz
cmpsl
and
hlt
pop
rclb
or
nop
loope
out
sub
jne
pop
push
sbb
mov
insl
test
loopne
add
cld
add
lret
cs
xchg
lds
xor
fsubrp
jg
cs
int
mov
add
rcrb
call
or
mov
jo
add
sbb
dec
sbb
clc
stos
fisubl
cmp
fildll
gs
xchg
add
push
mov
inc
or
add
pop
cs
xchg
add
call
sub
imul
filds
fs
in
pusha
cmp
sbb
test
fildl
add
sbb
in
cmpsb
xor
push
sbb
add
mov
mov
xchg
xchg
push
sbb
and
and
add
imul
popa
xor
insl
mov
and
mov
sbb
aaa
aad
mov
push
mov
mov
mov
and
push
adc
sub
loopne
and
decl
mov
rorl
mov
test
add
xchg
or
xor
andb
adc
icebp
inc
in
push
add
es
fcmovnb
sbb
std
loope
test
dec
mov
jg
insl
adc
lods
loop
dec
and
push
sarb
jl
ljmp
pop
xchg
rolb
mov
mov
lret
testb
add
mov
hlt
cmp
or
stos
repnz
lock
sub
or
cld
or
insl
push
mov
push
loopne
pop
cli
or
mov
mov
jecxz
sub
das
cli
cmp
inc
or
jb
int3
and
outsl
loopne
and
inc
mov
enter
inc
or
rcl
adc
daa
mov
cwtl
loop
push
js
or
mov
fidivrs
push
inc
nop
jle
loopne
or
sbb
jp
fnsave
inc
jno
mov
repnz
adcb
push
jle
fidivrs
frstor
xor
push
and
sub
repnz
negb
das
dec
out
adc
push
rclb
jmp
mov
add
adc
in
mov
jne
inc
mov
sbb
sbb
pop
add
mov
mov
jmp
sub
or
add
rcrb
hlt
push
add
or
mov
mov
clc
stos
jmp
lock
dec
and
jo
and
push
adc
lock
xor
jno
movsb
das
pushf
aad
xor
ds
out
fildll
scas
xchg
sub
or
pop
sub
mov
pop
fbld
push
push
std
sbb
fidivl
test
and
mov
pusha
pushf
adc
mov
shl
ja
mov
adc
in
sarb
mov
addb
loopne
into
add
mov
pusha
popf
inc
mov
fcomps
lret
inc
adc
fimuls
push
mov
cld
mov
push
adc
movsl
gs
xchg
in
push
mov
inc
ds
mov
add
shlb
mulb
es
push
sbb
orb
andb
in
in
xchg
sar
in
hlt
jbe
ret
mov
sbb
and
adc
lea
jl
lcall
enter
pop
cmp
pop
and
cmpsb
and
xor
cmc
pop
sbb
dec
ljmp
lcall
pusha
in
mov
inc
push
ficompl
in
ret
add
adc
in
mov
add
or
sahf
add
cmpsb
in
jbe
cwtl
cmp
aaa
add
data16
and
add
add
testb
add
or
sbb
es
loop
push
adc
lods
dec
loopne
ljmp
mov
push
xchg
sbb
lods
xchg
adc
or
push
fldcw
pop
inc
mov
add
and
arpl
in
pop
imul
mov
xchg
ret
sbbb
mov
subb
mov
fisubrs
into
cmpsl
add
push
add
test
xor
push
addb
sub
fisubs
mov
orl
dec
je
add
out
xchg
mov
sub
dec
mov
and
inc
outsl
or
push
or
mov
xor
rorb
insb
jnp
adc
adc
pop
fadd
sbbb
cmp
lret
add
cmpsl
sbb
jmp
addb
inc
xor
add
add
sub
cmp
cmp
nop
sub
sub
out
inc
add
test
add
insb
push
sbb
xchg
repnz
mov
fidivs
adc
pop
mov
or
push
mov
out
faddp
adc
inc
jg
rclb
ds
cli
push
imul
inc
jp
push
repz
icebp
add
inc
adc
and
fisubs
pusha
std
xchg
hlt
jl
push
inc
dec
rclb
mov
add
push
and
cmp
lea
negb
fistps
je
sbb
ret
fisttpl
add
sbb
or
or
inc
lods
push
pop
les
into
shlb
ss
add
fs
lcall
nop
inc
cmp
fldl
aaa
xchg
in
imul
or
pop
test
xor
or
shrb
pusha
andl
inc
inc
inc
rolb
rol
mov
inc
jbe
scas
mov
pop
out
inc
cwtl
aad
pop
push
imul
sub
mov
push
jle
push
shlb
incl
lds
inc
and
mov
fdivr
shlb
push
inc
push
mov
mov
xchg
cmp
ret
mov
xchg
add
pop
adc
xchg
loopne
mov
std
aam
mov
mov
int3
pop
sbb
inc
fidivs
mov
add
es
mov
xchg
int
int
mov
push
push
outsb
repnz
cmpsb
test
mov
cmp
push
imul
popa
aam
or
sbb
ret
push
jmp
test
jb
loop
or
mov
add
dec
push
sub
pop
cmp
aaa
insb
push
xchg
repnz
testb
int3
add
icebp
in
or
pusha
add
xor
icebp
or
inc
or
daa
in
mov
sar
push
inc
gs
cwtl
out
shrb
loopne
addl
out
jl
das
subl
mov
fldt
add
xchg
shll
decl
sbb
bound
adc
cmp
call
loope
and
stos
mov
adc
push
mov
cmp
negb
push
push
push
inc
cs
sub
jmp
adcl
out
jecxz
cmpsb
pop
xchg
aad
ds
xor
or
cli
mov
xchg
ljmp
repz
inc
sub
clc
inc
mov
sbb
mov
or
cli
rolb
jle
pop
push
movsb
std
xchg
js
xchg
repz
and
fwait
out
push
xchg
rclb
add
inc
hlt
xorb
incb
dec
mov
mov
mov
mov
lret
mov
clc
adcl
mov
cli
xor
mov
pop
and
orl
push
inc
je
out
xor
ja
inc
and
orb
sti
sbb
add
xchg
lock
mov
rolb
call
and
scas
cli
fadds
bswap
inc
cmpxchg
inc
xor
bound
orl
notb
aad
std
add
loope
imul
push
jnp
lods
add
mov
adc
pop
dec
lds
data16
call
add
jo
repz
mov
and
add
push
mov
sbb
adc
or
rorb
rol
xchg
adc
loope
adc
add
sub
mov
jno
shlb
cli
out
add
push
mul
pusha
add
jg
push
sub
mov
xor
inc
sbb
and
stos
adc
mov
cmp
fnstsw
rcr
sub
into
shl
dec
adc
lods
cwtl
stos
outsb
icebp
dec
subb
xchg
hlt
or
xor
inc
and
mov
sub
ss
es
cmpb
daa
movsb
pusha
ds
decb
push
repnz
dec
je
clc
es
mov
decl
loopne
mov
push
orb
fildl
adc
pop
sar
pop
mov
push
xlat
add
and
gs
add
xchg
shrb
addr16
shlb
pop
popa
addl
cmp
pop
xchg
or
mov
in
imul
aaa
insl
mov
shl
test
sbb
add
sbb
orl
jmp
inc
mul
pmovmskb
xchg
jmp
outsb
loopne
xor
mov
in
inc
sub
pusha
insl
ret
out
cwtl
jle
pop
adc
rcrb
pusha
adc
add
jo
mov
lock
add
mov
outsl
xorb
push
inc
pop
cmp
or
add
lock
add
jo
pop
push
add
push
add
mov
rolb
add
adc
jbe
pop
sti
jmp
adc
add
adc
adc
add
outsl
inc
movsl
sub
xchg
mov
and
mov
mov
icebp
add
push
push
stos
adc
enter
dec
faddl
fs
lcall
fistps
add
sub
and
cmc
add
pusha
notb
push
dec
lar
lcall
dec
mov
mov
ljmp
fldt
mov
jmp
sub
push
mov
mov
jg
or
dec
add
inc
push
sbb
push
fwait
in
rorl
push
cmp
repnz
jo
nop
sbb
std
lock
sbb
inc
shll
add
nop
movsb
paddusb
add
xchg
into
daa
mov
stc
movsb
xchg
icebp
aaa
jl
into
addl
rcrb
push
and
sbb
or
loop
cmpsl
jmp
nop
mov
fldt
push
pop
inc
and
test
pop
push
fiaddl
test
mov
outsb
sbb
in
xchg
ret
cmpsb
inc
aam
scas
jle
add
and
dec
xorb
jle
js
punpckhwd
mov
fwait
adc
setb
mov
mov
cwtl
push
test
inc
nop
inc
into
or
scas
jbe
test
loop
fcoms
jecxz
call
cmpsb
adc
fucomip
repz
or
bswap
adc
movnti
cli
inc
fwait
jb
leave
outsb
adc
ljmp
insl
pop
or
out
out
or
adc
mov
mov
cmpsb
in
pusha
adc
mov
or
aaa
enter
ret
jecxz
mov
aam
push
pop
int3
aam
mov
in
and
testl
or
ss
subl
push
cli
mov
adc
dec
push
insb
xor
add
mov
jno
shll
inc
enter
outsl
ss
in
sbb
or
rolb
hlt
subps
mov
jg
pop
push
lock
ss
xchg
add
mov
mov
arpl
icebp
add
std
xor
cmp
rorb
and
or
mov
push
mov
or
lcall
sbb
stos
mov
add
clc
push
add
pop
inc
push
inc
loopne
xor
add
jp
mov
pop
bswap
bound
mov
push
xor
fsubs
mov
clc
pushf
icebp
push
ja
sarl
and
test
es
je
xor
loopne
add
adc
sub
clc
lcall
pop
mov
repnz
adc
add
incl
mov
mov
fsubl
sbb
adc
mov
jle
inc
icebp
dec
aam
push
or
sbb
or
aam
adc
in
je
lock
call
mov
outsl
mov
inc
rolb
mov
jmp
push
push
push
test
fidivs
cmp
mov
or
inc
add
or
mov
add
sub
in
ret
add
fs
xchg
stos
push
add
pushf
push
add
addl
sub
pop
sahf
std
cmpsb
out
xchg
pusha
insb
mov
repnz
and
rcl
lahf
cmp
xchg
inc
data16
aam
cld
mov
push
jnp
fldenv
sahf
aam
icebp
adc
loope
mov
frstor
movl
add
insl
inc
sti
sbb
lods
mov
js
loopne
into
add
daa
es
rolb
roll
mov
test
test
inc
push
cs
and
bound
sbb
addb
mov
push
inc
xchg
inc
push
mov
sbb
mov
push
xchg
push
movsl
add
movsb
add
add
mov
movsb
lgs
ja
dec
movsl
cmp
and
addb
shrb
push
loopne
add
push
sbb
icebp
mov
xchg
mov
push
test
sbb
xor
pop
shl
and
push
les
dec
pop
sbb
lds
add
movsb
bound
jo
or
adc
push
xchg
and
push
adc
ret
jge,pt
and
sti
fwait
add
push
jecxz
fs
movsb
fildl
mov
inc
sbb
lock
xor
jbe
adc
data16
mov
repnz
adc
xchg
sub
xor
dec
add
ret
add
les
sarb
stos
fisubrs
testb
stos
rolb
shlb
es
aaa
mov
paddq
add
stos
loope
xor
or
or
or
add
dec
popa
push
mov
adc
push
push
jmp
mov
ljmp
mov
arpl
cmpsl
fnstenv
out
add
mov
scas
insb
das
mov
add
push
in
add
pop
pop
cmp
push
pop
adcb
xchg
mov
andl
mov
sub
sub
jge
loope
add
in
xchg
je
cwtl
fcompl
mov
outsl
fistl
jp
adcl
arpl
je
and
mov
or
push
xchg
and
adc
fildll
xchg
in
andl
andb
push
pushl
addb
rcrb
or
push
sbbl
call
jl
adc
dec
sbb
jmp
cmp
addl
or
sahf
mov
cmpsl
mov
mov
pusha
push
sub
sub
inc
mov
sbb
ret
pop
sbbl
loop
jmp
pop
mov
mov
pop
push
test
adc
adc
fsubs
loopne
aaa
sbbb
cmpsl
cmpsb
rclb
and
ljmp
pop
inc
or
in
ljmp
dec
es
mov
adc
add
jp
or
stos
add
mov
mov
ss
nop
adc
aas
dec
pop
repnz
xchg
int
or
pop
out
lret
push
movhlps
inc
paddusb
sti
mov
jp
sbb
inc
or
add
sub
sbb
mov
sbb
inc
dec
push
imul
incb
sbb
test
lock
leave
inc
pop
dec
loope
pop
xor
xchg
insl
xor
cmp
and
orb
cmp
add
add
inc
stos
lods
vucomisd
scas
push
addb
or
push
mov
and
lods
xchg
roll
add
call
test
incl
inc
and
mov
add
cld
ret
add
mov
pop
jg
add
ljmp
inc
or
call
push
add
or
mov
jb
data16
popa
sbb
adcb
inc
fcomip
ljmp
loop
mov
ss
xor
insb
loopne
inc
sbb
push
jnp
push
outsb
loopne
shrb
jne
add
and
mov
lods
pop
or
popa
pusha
jbe
push
repnz
add
or
jl
mov
add
es
lods
add
cld
pop
lea
es
mov
and
sub
add
pop
scas
jne
jle
jg
ret
jne
mulb
add
les
mov
stos
or
or
or
call
xchg
add
xor
cwtl
out
gs
jmp
dec
das
inc
pusha
sub
scas
push
int3
add
popa
cmc
dec
inc
jmp
sbb
dec
mov
inc
mov
mov
cwtl
clc
bound
testb
jae
jle
cli
xor
pop
arpl
push
bound
pop
test
lods
jge
cltd
fisubs
sbb
push
fdivp
or
jbe
cmp
jl
adc
push
mov
fwait
add
cld
ss
mov
callw
shl
cmp
loop
out
inc
or
xor
add
lock
or
idiv
push
add
xchg
movsb
push
push
ljmp
popa
inc
add
sub
inc
mov
shl
add
push
add
adc
out
add
orl
xchg
punpckhbw
test
jg
adcb
es
push
call
out
insl
shrb
mov
loopne
dec
xchg
je
out
sub
rclb
fwait
or
lcall
outsl
mov
es
mov
and
pop
out
shll
adc
bound
loopne
mov
adcl
add
popa
or
int
sbbb
pusha
xchg
mov
cltd
ljmp
call
lds
and
pop
out
push
add
adc
js
sub
cmp
jg
decl
shrb
mov
pop
repz
sub
test
out
imul
sbb
sbb
ljmp
pop
dec
inc
pusha
push
fisttps
pop
shrl
inc
sub
addl
das
xchg
ret
adc
xchg
and
clc
pop
push
and
inc
or
test
pop
mov
scas
cld
lock
call
fidivl
les
scas
rcr
pushl
adc
jnp
and
and
repnz
adcb
fidivs
push
mov
leave
jno
or
rcll
sub
inc
sub
adc
loop
push
into
inc
jo
pop
lock
out
mull
add
pop
ss
and
xcrypt-ctr
cmpsl
sbb
bound
xor
setnp
or
push
mov
cmp
jns
add
imul
inc
ret
clc
iret
adc
leave
adc
push
and
mov
leave
sbb
pop
xor
aad
add
sub
sub
inc
adc
add
in
aam
rclb
rorb
aam
or
bswap
addb
mov
out
repnz
push
dec
and
aam
or
xor
or
and
das
rol
stos
mov
add
mov
mov
sbb
xchg
push
bnd
js
add
mov
pop
outsb
sbb
outsb
test
mov
mov
adc
or
add
into
lods
mov
cmpsl
hlt
or
add
and
cmp
add
sti
mov
dec
insb
lcall
or
imul
movsl
ljmp
imul
adc
je
cs
mov
push
sbb
das
cmpsl
jge
dec
or
jge
mov
std
sub
insl
lea
inc
adc
in
cmp
or
shrl
xchg
or
fcoml
scas
sub
lods
sub
in
push
or
aaa
or
cmpsl
aaa
insl
add
xchg
movsb
xor
stos
into
push
xor
insb
push
ss
jo
push
sbb
lods
xor
mov
imul
or
sti
sub
dec
mov
mov
sub
fstp
cmp
mov
je
stos
mov
cmc
or
or
adc
adc
mov
xchg
adc
sub
mov
stos
insb
push
fmull
loop
out
aaa
adc
and
and
js
cwtl
mov
jg
add
imul
push
and
push
or
out
and
mov
repz
mov
mov
cmp
testb
mov
ja
pop
inc
mov
lods
push
adc
sbb
data16
dec
mov
loop
jecxz
xor
shrb
popa
add
in
repnz
xchg
inc
shlb
inc
lods
xorb
orb
outsb
fs
and
sbb
xchg
add
mov
or
gs
add
test
in
fwait
add
bound
loope
or
shrl
jle
xchg
mov
fmull
inc
clc
aam
adc
sbb
loop
cwtl
out
in
xor
add
add
jp
js
pop
pop
sub
mov
enter
xchg
fidivl
mov
jo
hlt
addr16
mov
test
mov
adc
sbb
sbb
mov
add
loopne
fildll
sbb
inc
data16
xchg
push
rolb
aaa
dec
cmpsb
jnp
add
filds
rsqrtps
push
loopne
ljmp
push
cmpl
or
fs
pop
pop
mov
lds
aad
sbbb
je
cs
pop
cs
mov
rorb
add
ss
scas
sbb
or
incb
adc
cs
rep
fisttpl
cmpsb
orl
and
dec
mov
dec
aam
mov
rolb
dec
add
jo
ljmp
mov
xor
and
cmc
mov
into
adc
aas
movsb
jg
loopne
add
xchg
and
xor
sub
inc
cmp
mov
insb
push
push
add
lock
add
push
les
add
push
and
in
and
sbb
add
mov
add
and
cld
dec
mov
adc
or
dec
or
inc
adc
and
adc
inc
inc
lfs
dec
fistpll
mov
mov
cmp
nop
xchg
xor
inc
stos
mov
push
sti
inc
das
or
cmpsb
dec
push
roll
push
scas
ss
fsub
add
sbb
inc
jns
and
es
ret
mov
jnp
push
ljmp
or
icebp
adc
ret
dec
out
in
mov
dec
lcall
fnstcw
or
xchg
das
add
sub
fdivr
ljmp
out
loopne
and
movsb
cli
mov
sbb
xlat
rorb
inc
clc
add
add
push
das
lods
jb
jecxz
stos
cltd
mov
mov
js
loop
cmpsl
inc
push
inc
aaa
in
out
xchg
or
sub
nop
sbb
push
push
mov
xchg
test
cmpsb
nop
ret
mov
adc
mov
rol
jmp
adc
loope
xor
xor
inc
loopne
xchg
sub
cwtl
mov
mov
add
or
add
icebp
push
adcl
js
add
push
inc
sbb
jo
insl
adc
cmp
sbb
into
nop
pop
sub
mov
mov
scas
or
cli
sub
loopne
xor
das
stos
mov
pop
adc
mov
push
add
jnp
cs
in
push
or
ret
pop
mov
sbb
mov
mov
scas
add
jno
call
rcll
mov
or
clc
xor
stos
jne
mov
add
dec
insb
or
sbb
add
xchg
out
cmp
add
fstpl
jle
shrl
adc
data16
jo
cmp
mov
loopne
or
sbb
clc
into
adc
or
bound
add
cmp
xchg
sbb
add
pop
mov
push
notb
mov
subl
lret
outsb
inc
repnz
pop
adc
mov
cmp
add
xchg
sbb
call
push
or
or
fisttpl
rcrb
jbe
imulb
loopne
pusha
aad
ds
lds
hlt
jbe
popf
push
insl
push
aaa
dec
add
adc
ljmp
add
add
or
daa
xlat
addr16
cld
fwait
aad
ljmp
ret
scas
and
insl
add
jecxz
cld
insl
fiaddl
je
xchg
fdivs
adc
fistpll
dec
lahf
and
lcall
ss
add
or
xor
mov
pop
push
imul
mov
outsb
pop
mov
adc
ljmp
cmpsb
inc
xor
mov
aad
testb
dec
mov
loope
or
push
jb
jmp
or
xchg
sub
mov
jle
add
test
loop
pop
push
jp
adc
xchg
push
es
and
clc
jg
nop
adc
and
or
addb
push
subb
adc
add
xchg
bound
pop
mov
out
or
xchg
cld
push
jb
sbb
xchg
mull
jecxz
add
adc
data16
xchg
and
sbbl
jne
fs
pushf
inc
jecxz
xchg
sahf
bound
bound
sbb
push
nop
lds
shlb
test
mov
inc
mov
sarb
in
add
jb
dec
add
add
fbstp
ja
add
xchg
inc
fdivs
js
cmpb
mov
pop
ret
mov
stos
daa
notb
adc
fidivl
rolb
lret
dec
sbb
rolb
test
push
push
xor
push
inc
fxch
imul
add
xchg
push
adc
adc
rcr
das
mov
shl
lock
pop
shlb
sbb
divb
enter
jg
sub
sub
inc
add
cs
out
push
leave
and
cmc
lds
sbb
outsl
pop
mov
mov
mov
or
pop
scas
xchg
aad
sbb
sub
iret
push
faddp
or
jecxz
imul
mov
dec
fcomps
je
push
dec
call
prefetch
or
sbb
adc
imul
pop
addr16
lret
sub
scas
addb
dec
jecxz
jo
pop
sub
inc
add
popa
cltd
dec
outsl
ret
add
js
mov
nop
lcall
out
push
xchg
sbb
inc
xor
sbb
cli
fisttpll
rcrb
jle
and
enter
push
add
mov
sub
mov
repz
add
outsb
xchg
filds
and
in
pop
xchg
ljmp
or
push
in
push
push
xchg
mov
xchg
add
pop
and
cwtl
rcrb
pop
and
adc
xor
or
mov
xchg
jmp
push
mov
xlat
insl
mov
test
into
rclb
or
cli
xchg
in
mov
nop
adc
jle
mov
mov
cmpb
inc
pop
or
xchg
aaa
xor
sbb
xor
push
pop
push
stos
cmp
mov
pop
call
repnz
out
imul
push
mov
dec
ja
add
adc
lock
add
xor
pop
adc
cli
cmpsb
fstp
mov
je
inc
adc
clc
push
cmpb
add
es
and
inc
add
testl
sbb
andl
sub
xor
sbb
sbb
das
add
gs
pusha
push
push
mov
fiaddl
mov
jmp
inc
loope
inc
test
aam
dec
mov
fmuls
ds
rolb
mov
sbb
mov
and
push
xor
push
cmp
mov
xor
push
and
orl
add
shll
add
mov
push
jecxz
add
sub
and
loopne
xchg
es
andl
add
or
mov
mov
loope
push
and
popl
mov
cmp
push
stos
lcall
sarb
or
inc
mov
add
ficompl
mov
adc
call
adc
cmp
rolb
cltd
repz
add
inc
or
or
add
push
sbb
inc
pop
clc
inc
push
xor
mov
adc
adc
sbb
and
and
push
adc
pop
decl
jle
or
mov
loopne
pop
or
add
cmp
and
push
add
adc
add
out
mov
push
leave
sbb
decb
mov
loope
and
bound
mov
ljmp
dec
outsb
testb
mov
and
sub
and
inc
and
out
bound
adc
inc
addb
mov
dec
inc
movsb
mov
in
cmp
inc
push
decl
mov
loop
cmp
and
inc
pop
movsl
lcall
cmp
out
inc
mov
cmpb
ret
adc
adc
xchg
ljmp
add
loopne
loope
ret
xor
sbb
pusha
add
jnp
aaa
push
into
add
shrl
mov
in
push
mov
mov
mov
cli
jge
push
das
xor
loopne
shlb
mov
add
cmc
adc
negb
fdiv
les
and
das
es
mov
xor
xchg
sbb
jle
ret
hlt
adcb
push
push
nop
jmp
xchg
ljmp
push
mov
dec
inc
adc
or
stc
pop
xor
or
sbbb
push
decb
dec
pop
orb
xchg
mov
mov
in
mov
mov
mov
cwtl
push
and
and
ds
cmc
mov
add
pusha
xchg
ss
and
pop
dec
scas
push
inc
xor
jo
inc
shlb
shll
jl
jl
stos
mov
ss
lock
fwait
xorl
repz
jmp
je
cld
cmpb
lret
xor
push
scas
and
fimull
jp
int
js
or
mov
jg
lods
add
pushf
mov
ljmp
jns
ljmp
jns
inc
imul
dec
stos
cmp
jg
adc
adc
mov
or
add
add
adc
clc
cmpsb
push
pop
mov
outsb
xor
pop
push
ljmp
push
sub
into
inc
jg
fcom
mov
pushw
push
xchg
add
ljmp
mov
or
push
mov
pop
sbb
xchg
push
mov
jbe
cmp
insb
adc
and
mov
push
testb
dec
loope
add
adc
leave
dec
jle
ret
cmp
xor
call
cltd
filds
inc
jg
add
js
and
repz
and
sbb
fimull
loop
out
rcr
or
das
xor
mov
xchg
lds
or
mov
incb
hlt
xchg
pop
mov
mov
sub
pop
sub
xor
pop
xor
push
inc
inc
ret
xchg
pop
imul
mov
push
sub
sar
jo
adc
sbb
sbb
es
mov
adc
pop
inc
push
cld
filds
testb
lea
inc
cli
push
push
mov
lock
jns
xchg
mov
jle
mov
pop
push
inc
fadds
mov
ljmp
add
out
mov
sub
out
sbb
mov
rclb
sub
adc
dec
adc
icebp
test
push
jg
mov
add
in
mov
sub
cmp
xchg
popa
xchg
rcl
ja
sub
mov
lock
cmpb
data16
nop
mov
lock
and
mov
mov
jno
mov
pop
adc
in
inc
or
or
or
adc
cmp
inc
and
in
inc
mov
fst
push
or
jle
stos
sbb
adc
cld
adc
call
mov
add
cmp
or
orb
adc
jl
test
repnz
or
icebp
lcall
mov
pop
loope
inc
xchg
xchg
ljmp
rclb
mov
dec
cmp
jl
push
xchg
pusha
cmp
mov
loope
dec
movsb
incb
jne
add
daa
pusha
xor
mov
clc
mov
xor
addl
clc
add
push
mov
sub
push
pop
sbbb
sbb
andb
pusha
sbb
mov
insl
mov
rorb
int
cmpsl
and
add
dec
mov
mov
pop
xchg
cli
mov
inc
repz
lea
cmp
nop
andl
insb
mov
not
sub
cs
inc
mov
pop
cmpsl
fstl
push
dec
add
dec
xchg
pop
test
mov
clc
xor
inc
push
inc
or
mov
sub
or
and
fiadds
dec
imul
inc
xchg
loopne
mov
mov
clc
mov
add
psrlw
sbb
repnz
mov
rol
jnp
jbe
or
push
ret
cltd
pushf
push
lds
add
lods
dec
push
mov
lcall
or
or
daa
add
sbb
or
add
ss
adc
ljmp
mov
imul
cld
or
mov
or
in
add
push
adc
ret
faddl
sti
sbb
adc
or
pop
and
jecxz
imul
mov
lods
push
fistps
mov
mov
mov
xchg
or
imul
add
aam
rcrl
fidivl
jge
jae
lcall
nop
pop
mov
add
mov
mov
pop
notb
es
jl
ret
push
scas
jae
clc
xchg
mov
push
incb
pop
aas
push
je
lcall
cmp
stos
xor
pop
dec
mov
add
ljmp
pop
cmpsb
add
push
movb
push
in
add
xor
sub
dec
push
lds
lcall
jecxz
xor
or
add
pusha
loopne
dec
shlb
add
adc
jno
mov
pop
icebp
jp
imul
add
pop
stos
ljmp
jecxz
mov
or
call
lcall
jecxz
bound
push
orl
jo
and
incl
push
nop
or
fidivs
push
xchg
add
out
mov
stos
mov
dec
add
xchg
mov
inc
push
mov
push
mov
add
or
notl
loope
mov
push
rorb
xor
and
xchg
mov
mov
mov
cmp
jne
cli
xorl
xchg
push
adc
add
je
ss
pop
xchg
cli
pushl
or
aam
xor
jo
sbb
push
filds
adc
ljmp
rclb
jmp
out
mov
mov
mov
pop
fsubs
mov
push
dec
into
or
add
insl
shlb
push
insl
gs
insb
test
sar
filds
repz
fnsetpm(287
adc
test
mov
mov
cmp
pusha
inc
mov
test
add
pusha
jle
flds
cld
dec
push
inc
ss
shll
jo
xchg
adc
test
loop
push
fbld
nop
push
negb
inc
mov
push
mov
push
jno
xor
and
out
xor
push
add
ja
fs
cmc
sbb
fs
add
mov
xchg
mov
cmp
repnz
add
mov
cmp
std
loopne
push
mov
inc
jl
adc
sbb
push
orb
pop
insb
mov
sbb
or
push
adc
xchg
cmp
daa
cmc
cmp
or
les
push
aaa
test
or
mov
xchg
push
cmpl
arpl
ja
or
outsb
int3
out
ret
int3
js
fmul
mov
dec
xorb
dec
or
hlt
add
mov
mov
inc
jbe
out
push
scas
xor
push
push
je
and
adc
test
mov
jg
lock
pop
cmp
mov
imul
mov
std
push
cmp
in
sbb
not
sbb
pop
mov
cli
mov
push
pop
push
dec
sbb
mov
sbb
outsb
jo
incl
rcrl
adc
inc
add
js
add
xchg
jmp
pop
or
xchg
or
pushf
inc
pop
insb
and
addb
mov
mov
xchg
sbb
or
cmp
push
mov
dec
scas
add
movsl
sti
xchg
mov
mov
not
sub
movsb
add
lods
sete
or
ror
adc
jo
repnz
mov
sldt
call
nop
or
and
xor
jnp
loop
or
jmp
sbbl
test
shr
add
sbb
orl
adcb
mov
stos
push
mov
clc
andb
add
add
push
ljmp
rorb
xchg
mov
lods
jb
aas
adc
mov
lret
shlb
flds
or
inc
sbb
cli
inc
jmp
inc
sbb
xchg
inc
rorl
das
cli
mov
test
sbb
xlat
push
lds
sbb
jbe
sbb
orb
jmp
xor
or
sbb
idivb
adc
and
cmp
sub
ds
mov
inc
es
mov
fsubl
mov
imul
adcl
inc
adc
and
aas
ret
jmp
sbbb
cmpb
sbbl
pop
imul
dec
mov
addb
add
out
subb
sbb
pop
mov
sub
sub
adc
repz
push
es
inc
or
movsb
movsb
outsl
cmc
incl
leave
xchg
ds
inc
xchg
adc
aas
or
mov
push
sbbl
or
loop
sbb
add
cmp
cmp
scas
sbbb
rorl
cmpsb
imul
std
sbbl
insb
push
xchg
inc
inc
xor
mov
fildl
hlt
rorb
inc
and
pop
insb
jl
pop
push
mov
imul
mov
cmpsb
sbb
xor
adc
mov
icebp
hlt
or
roll
jns
and
nop
adc
in
fwait
jb
push
inc
push
xchg
and
cli
aad
push
xchg
test
lock
shrb
hlt
jmp
andl
xor
and
mov
cmp
add
pusha
xor
outsb
cmp
clc
push
and
add
test
sbb
popf
mov
cld
sbb
mov
clc
out
addb
aam
setns
outsb
push
add
push
xchg
jmp
adc
xchg
mov
out
jb
cmp
dec
jecxz
xchg
imull
shll
push
lock
sbb
dec
or
mov
gs
push
jecxz
mov
xor
fistl
xor
in
loopne
adc
dec
xchg
xlat
sbbb
xor
movsb
ss
xor
aam
jle
insl
mov
adc
incl
js
pop
mov
mov
xor
addr16
sub
movsl
jg
add
rcrb
adc
dec
imul
sub
dec
or
add
push
test
sarl
mov
adc
xchg
sbb
add
aaa
cmp
fimull
mov
add
cmp
adc
cmp
loopne
sbb
popa
add
lds
sub
outsl
push
shll
sbb
ljmp
loope
cmp
js
xor
add
and
aas
pop
aam
sub
push
xor
add
loope
out
jnp
xchg
inc
xchg
and
sub
sbb
aad
ljmp
add
cmc
lcall
gs
ret
xchg
loopne
shll
adc
xor
xchg
movsl
loopne
add
dec
sub
in
cmp
int3
add
or
push
dec
adc
arpl
xchg
inc
inc
aad
mov
sti
adc
mov
pop
loopne
pop
and
push
mov
loopne
mov
inc
xchg
push
mov
and
and
rorb
scas
gs
test
add
mov
jmp
lret
roll
dec
mov
mov
and
push
pusha
pop
loopne
sti
inc
subb
xor
or
iret
cld
ljmp
and
inc
mov
inc
sub
push
loopne
std
inc
inc
inc
ret
add
fists
add
inc
addb
sub
add
incl
xchg
mov
inc
pop
insl
mov
loop
inc
mov
rcrb
lcall
bound
or
add
sarb
or
aaa
add
add
fwait
les
loopne
loop
lock
xor
sar
xchg
push
mov
and
insl
pop
nop
fadd
push
or
decl
in
outsb
add
mov
es
rolb
or
mov
or
pop
insb
ljmp
mov
sbb
xor
mov
neg
movsl
icebp
and
mov
or
fmul
sbbb
pop
icebp
xchg
push
into
sbbb
push
and
sbb
es
add
xchg
jge
mov
or
in
in
pop
insb
push
dec
mov
das
hlt
and
jo
loop
int
pop
ljmp
jg
add
movsb
insl
and
test
mov
xor
xor
dec
cli
call
je
subb
in
test
sub
inc
push
and
cli
loop
pop
ljmp
inc
mov
inc
loopne
inc
or
movsl
xlat
add
add
or
aam
sub
pusha
into
mov
jg
xchg
out
leave
add
out
add
mov
les
data16
rcr
lcall
xor
add
arpl
lret
outsb
add
push
jmp
jne
mov
dec
lock
sahf
out
add
roll
jle
mov
push
sub
icebp
outsl
movsb
inc
clc
out
add
dec
adc
add
inc
xchg
test
lods
test
sub
xchg
mov
inc
jo
and
adc
inc
and
bound
and
jo
nop
xchg
push
scas
add
aaa
sbb
xchg
ficoml
in
or
arpl
mov
daa
inc
pusha
pop
in
decl
add
add
pop
mov
push
mov
out
push
ret
out
in
or
pop
loop
adc
or
push
bound
into
add
hlt
data16
ljmp
lock
fwait
cmpxchg
das
cmpsl
push
push
or
push
add
fwait
loopne
std
mov
mov
lahf
or
or
push
dec
fldl
add
adc
nop
cmp
scas
test
adc
fwait
mov
outsb
inc
push
pop
scas
loop
pop
ret
adc
pop
xor
sti
jg
pop
loopne
out
clc
mov
lahf
mov
cli
outsl
jp
push
mov
aaa
lock
and
add
and
aas
sub
and
or
stos
ljmp
inc
dec
repz
lea
push
sub
or
push
adc
sub
jge
adc
clc
dec
loopne
loopne
pop
test
push
jb
popa
shrb
xchg
mov
fnsave
inc
clc
cwtl
fstp
and
gs
add
inc
inc
les
mov
push
mov
push
jmp
add
fdivp
mov
sub
ss
cmpsb
pop
inc
add
cmp
out
add
cmpsb
cli
mov
xchg
les
loop
popa
cmpsl
xchg
loope
jle
sbb
mov
call
cmpsb
push
push
int3
push
jg
pop
add
cmp
sbb
ret
mov
add
rclb
ret
mov
or
push
loope
cmc
int
or
and
pop
xchg
mov
sub
out
xchg
mov
lods
pop
sub
push
sgdtl
and
enter
mov
mov
lock
cmpsb
hlt
push
insb
ds
outsb
xor
test
push
mov
movsl
add
xchg
add
hlt
ret
add
ret
rorb
les
xchg
cli
inc
sti
xchg
adc
push
mov
cmc
rcrb
popl
test
inc
adc
xchg
adc
mov
outsb
mov
jo
fdivl
fucomip
ljmp
roll
or
adc
mov
decl
adc
in
lea
jo
adc
xor
in
mov
push
push
shll
das
mov
sarb
repnz
xchg
add
ss
and
or
add
std
sbb
cmpsb
push
or
add
idiv
dec
andb
and
cld
pop
add
pop
push
add
nop
add
xchg
cli
or
xchg
mov
mov
sub
movsb
jle
cli
loope
loopne
mov
xor
or
nop
or
sti
xor
xchg
dec
aaa
mov
ljmp
sub
decl
loop
sbb
das
clc
pop
pusha
cmp
aad
cs
mov
add
rcrb
addr16
mov
stos
aam
loop
add
pop
mov
ljmp
xor
test
or
xchg
mov
jae
fbstp
xchg
cld
mov
pop
nop
rolb
add
xor
dec
test
and
add
out
aad
ljmp
xchg
adc
lret
out
loop
adc
jle
inc
and
rorb
inc
fmuls
loope
or
pop
pop
jo
add
fldenvs
loope
add
dec
inc
sbb
sar
sbb
mov
push
scas
push
push
orb
adc
sbb
fdiv
pusha
or
and
stos
inc
decl
test
popa
add
aam
add
add
scas
pushf
lds
ds
and
xor
mov
inc
sbb
lock
add
orb
loop
jne
and
add
push
in
push
or
pop
sub
in
mov
xor
cmpb
adc
xor
jmp
adc
or
dec
add
push
cmp
inc
add
xor
dec
push
mov
cmpsb
add
sub
add
sub
push
sub
scas
and
testb
gs
mov
xchg
pop
mov
sub
inc
rcrl
xor
cwtl
xchg
mov
out
add
scas
inc
fisttpll
loopne
push
aad
jbe
push
outsl
push
shufps
cwtl
add
call
inc
cwtl
repnz
pop
movsl
stos
sub
add
adc
and
xor
pop
mov
clc
lock
jl
dec
dec
cmpsb
nop
mov
movsb
push
dec
push
jbe
ds
inc
sub
mov
sti
push
sbb
rcll
stc
xor
sub
sbb
add
popf
or
icebp
aas
sub
out
adc
pusha
test
add
mov
push
sar
xchg
mov
cmc
and
ss
sbb
dec
lock
inc
inc
cld
mov
sbb
movb
mov
pop
dec
popf
sbb
inc
lea
scas
cmp
add
fdivl
insl
lcall
inc
cmpsl
add
fstpl
xchg
insl
or
dec
inc
mov
or
xchg
sub
push
enter
inc
push
inc
xchg
sti
add
clc
add
lcall
push
sbb
add
push
dec
jp
lock
push
or
or
sub
and
pop
ss
xchg
fcmovu
and
add
pop
add
sub
pop
inc
inc
xchg
je
mov
or
push
xchg
rcl
test
incb
cmpsb
xchg
push
cmpsb
lds
mov
inc
pop
sbb
aas
and
add
ds
movsl
fwait
popa
subb
pusha
pop
shlb
fnsave
lods
cmp
push
stc
adcb
pop
insl
xchg
add
repnz
sub
jb
mov
mov
mov
popa
std
loope
andb
loop
sub
or
mov
and
dec
jg
add
lret
subb
insl
sbb
es
pop
push
push
dec
xchg
out
arpl
pop
jg
mov
pop
mov
xchg
in
orl
add
inc
test
aaa
or
sbb
mov
push
dec
mov
dec
sbbb
push
xchg
fcomip
cmp
adcb
adcb
adc
adcl
mov
sbb
add
lds
or
mov
mov
lcall
or
jl
adc
mov
push
movsb
in
and
mulb
nop
aaa
in
and
aad
or
sub
fisubrs
rolb
push
sbb
adc
add
and
push
sbb
inc
or
and
cmp
rcll
pop
std
sub
andb
mov
add
cli
adc
inc
push
xchg
rorb
sbb
dec
sub
or
sub
add
rolb
inc
mov
dec
jg
pop
cli
add
lahf
add
xchg
test
or
mov
add
outsl
pop
repnz
pop
add
inc
mov
jo
les
stos
cmpsb
pusha
xchg
or
out
repnz
add
test
ficomps
vpmadcsswd
sub
cmp
wbinvd
cltd
lret
add
or
mov
mov
bound
rcr
shlb
inc
push
mov
popf
call
xor
orb
add
push
inc
xchg
push
dec
scas
mov
and
cmpsb
ds
push
mov
xor
pop
lods
xchg
outsl
jmp
and
cltd
addb
adc
add
add
cltd
nop
add
mov
push
nop
test
shll
dec
leave
insb
fs
xchg
clc
pushw
and
push
scas
dec
mov
mulb
int3
rcll
invd
cld
mov
jne
lods
lahf
jb
xor
sbb
xor
roll
outsb
inc
in
cmp
sub
cld
rclb
mov
jle
push
and
ror
push
pop
pop
or
add
div
mov
sbb
push
ss
nop
mov
add
pop
icebp
ja
mov
out
mov
loopne
je
and
test
clc
cmp
sbbb
adcb
sbb
add
ret
popa
push
pushf
push
add
adcb
jecxz
gs
mov
xchg
dec
pusha
or
and
loopne
loope
jo
sbb
adc
inc
xor
jle
es
add
sub
sbb
sbb
or
pop
inc
cmp
mov
test
dec
sub
loopne
jecxz
dec
stos
inc
shrb
es
loopne
xchg
push
push
sbb
sar
pop
xchg
addl
sub
icebp
mov
push
mov
push
clc
int
aam
cld
pusha
sub
adc
xor
and
sbb
fdivr
and
hlt
loopne
lcall
and
setbe
dec
sub
scas
add
pop
push
pop
mov
inc
and
mov
or
inc
pop
sbb
pop
push
push
and
or
mov
or
and
add
les
and
inc
repnz
movsl
fcmovnu
pushf
sahf
clc
push
addb
or
push
fadd
cmp
cld
pop
or
push
inc
testl
push
mov
imul
add
incb
push
mov
xor
push
loop
addl
pop
sub
fwait
mov
mov
sub
cs
push
fdiv
js
pusha
jp
and
dec
or
popa
dec
pop
outsl
push
sub
or
add
pop
xor
add
push
insl
and
push
dec
roll
xor
movsl
inc
ljmp
pop
insl
add
mov
add
jne
lock
fimull
mov
sub
pop
xor
mov
rolb
or
add
push
enter
xchg
inc
inc
inc
andb
imul
cmp
fnsave
ret
rclb
mov
shll
dec
rorb
mov
mov
dec
sub
xchg
rcrl
ss
cmc
and
pusha
scas
jo
mov
cmp
or
mov
jo
pushf
add
cmp
sbb
std
les
push
loopne
outsb
scas
mov
mov
aas
mov
sbbb
mov
mov
mov
sub
pusha
xor
inc
adc
mov
cmpsb
fldl
and
mov
push
xor
sub
xchg
iret
insb
add
shrb
mov
push
mov
xor
dec
jmp
dec
insb
insb
or
outsb
testb
pop
sub
sub
aad
movsb
mov
push
lahf
repz
dec
rolb
or
or
mov
std
rolb
das
sbb
xchg
addb
add
and
inc
inc
xchg
mov
popa
pusha
push
push
xor
and
sbb
loopne
pusha
daa
push
lret
jb
jge
leave
dec
pushf
jmp
jb,pt
sub
jg
loopne
mov
jecxz
xor
push
jmp
jmp
push
push
aam
addl
imul
dec
aad
outsl
int3
sbb
xchg
stos
adc
and
mov
ret
addb
cmpl
in
add
jg
ljmp
adc
mov
cmpsb
adc
mov
xchg
les
sub
loopne
xchg
jo
aad
add
and
ret
add
pop
nop
je
popa
jnp
and
inc
sahf
cs
data16
lock
mov
push
sbb
rorb
add
push
push
inc
lock
ret
shrb
jo
mov
out
add
push
adc
mov
outsl
outsb
mov
fwait
add
mov
insl
and
push
or
lods
push
xchg
sarb
cld
test
cmp
push
lods
push
mov
outsb
loopne
xchg
stos
incb
jno
aas
xor
pop
xchg
and
incb
and
stos
or
pop
cmc
mov
add
adc
pop
add
loopne
xchg
cmc
add
loopne
adc
sbb
ret
push
or
jmp
out
insl
arpl
add
scas
mov
arpl
push
repz
add
subl
or
js
loopne
das
add
pushf
xor
xor
mov
lock
fmuls
mov
cld
dec
xchg
test
cmpsl
mov
inc
negb
pop
and
or
push
or
cs
sub
jle
fistps
and
or
cmp
pop
pop
lods
stos
add
adc
loop
and
add
pusha
xchg
das
push
lock
es
add
fcomip
ss
add
add
addb
add
sub
pop
mov
jbe
adc
adc
out
and
xchg
or
pop
sub
add
xchg
xchg
in
lock
aad
icebp
mov
xor
ret
out
inc
add
add
cltd
push
push
add
push
push
add
push
jno
bound
inc
outsb
jo
jo
loope
mov
jbe
test
arpl
adcb
cli
lea
cld
or
nop
pop
call
imul
jbe
or
cli
sarl
das
and
or
mov
insl
pop
and
add
jg
and
sub
mov
mov
add
js
incl
int3
push
xchg
idivb
sbb
xor
cmpsl
sbb
fbstp
popa
push
pop
push
or
call
test
jg
push
nop
into
dec
call
adc
cmp
loop
fildl
and
xchg
xchg
push
push
loopne
add
push
notb
test
sbb
js
mov
push
nop
mov
loopne
adc
xchg
into
mov
stos
scas
push
mov
imul
in
decl
or
cmpsl
mov
push
or
adc
mov
mov
repnz
or
cmpsb
push
lock
scas
sub
and
sub
or
std
xchg
and
mov
stos
and
jle
test
push
sub
loop
or
xor
sti
xchg
outsl
arpl
idivb
xor
xor
pusha
pop
adcb
pop
cmc
loop,pn
daa
mov
add
add
pop
roll
push
cli
add
xor
cmpsb
add
sub
push
fwait
push
jno
nop
nop
pushf
push
adc
inc
adc
nop
clc
sbbb
adc
or
mov
dec
cwtl
pusha
mov
call
pop
push
xlat
outsl
pushf
bound
or
lock
sub
rorb
xor
push
sbb
mov
mov
insl
or
mov
aad
pop
scas
clc
testb
push
decl
xlat
stos
cs
mov
out
mov
jb
xor
push
push
incl
test
ds
dec
xor
cli
adc
call
mov
and
cmp
movsb
mov
add
cwtl
loopne
sbb
cld
ds
or
cmovno
xchg
shll
out
mov
push
bound
adc
xchg
xor
cmp
cltd
lcall
test
cwtd
push
jle
and
or
lock
pop
and
xor
adc
mov
xor
int3
xor
xor
add
xor
rcrb
js
mov
dec
adc
inc
pop
orb
cmp
fcoml
adc
out
pusha
mov
and
decl
cmc
sbbl
push
bound
sub
ljmp
add
ficoml
out
dec
inc
cmpsb
aaa
add
flds
je
pop
xchg
jecxz
fs
in
in
aaa
pop
sahf
fndisi(8087
sbb
dec
xor
mov
cltd
or
and
aad
ds
lret
aaa
sar
jmp
xor
loopne
push
stos
pusha
adc
or
push
bound
xor
pop
lock
in
push
in
jno
mov
push
incb
add
xchg
out
push
cmp
and
scas
pop
add
out
stos
and
ljmp
clc
das
push
nop
or
leave
rolb
enter
pop
outsb
repnz
andb
mov
jb
dec
mov
xor
adc
cmpsb
adc
adc
inc
out
jg
icebp
dec
add
outsb
sbb
pop
mov
xor
mov
xor
lcall
sbb
mov
movsb
jne
outsb
add
add
pop
stos
xor
push
je
mov
rcrl
pusha
add
push
mov
imul
cmp
sbb
sbb
pop
add
sub
mov
xorb
sub
xchg
sarb
adc
decl
add
bound
cmp
add
jecxz
mov
add
loope
mov
mov
add
movb
rcrb
sahf
mov
xchg
ror
inc
movsl
or
adc
mov
shrb
rcrl
xor
add
movsl
lods
add
add
shrb
outsl
cmp
test
or
mov
addb
bound
xorb
jno
xor
mov
ficomps
orb
ds
stos
inc
jae
mov
inc
bound
mov
cmp
repz
repnz
add
inc
add
sbb
lcall
hlt
push
sarb
shlb
push
int3
ret
xor
dec
xor
test
xor
wrmsr
mov
push
pop
insl
adc
out
and
inc
mov
repnz
mov
jmp
je
xchg
aad
sahf
test
xchg
icebp
or
loope
sbb
lahf
call
adcl
add
cld
mov
mov
dec
sbb
jge
outsb
adc
inc
popa
rcrb
inc
js,pn
jne
fiaddl
add
or
call
sub
outsl
out
ss
out
and
test
cmp
aaa
sbb
loopne
xchg
adc
clc
jl
mov
jbe
push
mov
rorb
add
mov
cmpsb
add
xor
es
xlat
or
addl
push
in
sub
push
add
jb
aas
dec
ljmp
cmp
pushf
mov
ja
and
sbbb
push
mov
insl
rcrb
dec
out
fsubl
pop
outsb
repnz
mov
pop
lods
pop
add
data16
shrl
pop
pop
dec
push
add
cld
mov
xor
cli
loop
push
les
sub
xor
cmpsb
inc
xchg
xchg
mov
ret
ret
xchg
push
fsubrl
lock
xchg
and
push
enter
ret
push
shl
sub
decb
xor
add
mov
cmpb
shlb
pop
notb
push
fcoml
rorb
xor
out
aaa
inc
add
sbb
jmp
add
shlb
out
adc
aas
mov
imul
movsb
pop
sahf
pop
add
hlt
mov
adc
pop
adc
dec
decl
or
loopne
xorb
and
push
add
mov
sti
and
outsl
std
push
inc
xchg
push
push
pusha
xor
cmp
dec
jp
imulb
loop
repnz
mov
xchg
aam
mov
mov
sub
adc
fs
xchg
mov
and
enter
in
movsb
popa
inc
insb
popa
push
push
mov
and
sub
inc
sub
scas
adc
jp
in
lcall
test
fucom
pop
dec
cld
mov
push
xchg
pusha
nop
mov
sbb
xor
push
and
pop
mov
sub
inc
add
or
pop
dec
std
xor
imulb
add
xchg
loopne
mov
stos
jg
lock
xor
pop
and
and
mov
loop
fidivs
and
cmp
rclb
or
rolb
cld
mov
es
fneni(8087
or
xchg
divl
adc
add
icebp
lea
or
mov
ja
mov
push
push
and
mov
and
inc
jge
cmp
addb
and
nop
pop
jle
mov
sti
ljmp
andb
or
push
inc
mov
pop
dec
push
mov
loopne
sub
add
adc
push
inc
xor
test
add
adc
sar
mov
pusha
dec
incb
loopne
mov
add
call
sbb
ss
fsubrl
jns
push
xorb
ja
fcoms
push
mov
adcb
stos
push
inc
cmp
aam
add
sub
cli
push
ficoml
ds
and
jmp
outsl
lcall
repnz
or
stos
sbb
sbb
add
cmpsb
pop
jb
or
incb
and
cwtl
inc
movzbl
push
cmp
mov
dec
mov
incl
push
mov
and
mov
push
out
sub
sbb
jp
xchg
adc
add
rcrb
add
mov
pop
dec
mov
xor
or
sub
ja
pop
fmull
cmc
add
adcl
push
push
pop
sub
sbb
mov
push
mov
add
in
rolb
dec
std
inc
or
pusha
cwtl
addl
jmp
sarl
push
push
jl
or
cmpsl
inc
xchg
push
and
ljmp
or
or
loop
xchg
mov
out
push
add
xchg
mov
or
or
pop
and
add
sub
xchg
pop
sub
fadd
fwait
sub
mov
xor
decl
xchg
out
sbbl
fidivs
add
mov
cmp
add
pop
dec
std
and
push
rcrl
fimuls
add
mov
mov
sarb
jmp
inc
mov
pop
jno
push
or
inc
push
jg
lods
xchg
aam
or
push
pop
or
daa
inc
dec
dec
pusha
cld
push
cmp
lock
dec
les
sbb
mov
ljmp
notb
cmp
fldl
mov
or
cld
cmp
sbb
push
subl
cmp
and
and
inc
adc
or
inc
xor
add
jmp
mov
arpl
inc
xor
ja
fisttps
mov
cmp
enter
push
adc
out
cli
adc
adc
add
add
mov
ret
push
jle
shlb
pop
push
jg
call
lods
xchg
and
stos
mov
pop
and
mov
lcall
and
pop
inc
call
shll
insl
adc
nop
inc
ret
mov
aaa
insl
cmp
fnstenv
jns
or
push
dec
xchg
adc
or
lret
and
faddl
decb
adc
add
arpl
das
push
adc
adc
push
sahf
sbb
cmp
lods
jge
sbb
add
adc
call
jae
push
gs
sarb
adc
mov
jo
add
popa
xor
xor
sub
adc
aam
dec
lods
adc
mov
mov
mov
jae
or
and
and
jne
and
inc
inc
bound
and
fisubl
pop
shlb
and
dec
mov
repz
cli
adc
mov
js
orl
pop
dec
rcll
adc
pcmpgtb
add
mov
mov
push
data16
inc
test
cmp
sbb
hlt
aaa
ljmp
adc
adc
jo
and
bound
xchg
push
call
aas
mov
push
mov
ss
mov
dec
or
insl
sbb
ret
jb
sub
ljmp
mov
mov
jo
cli
outsl
mov
cmpsb
cmc
data16
push
sbb
cmpsb
sub
adc
fs
mov
push
pop
aam
sar
push
jae
adc
outsb
lock
nop
xchg
mov
inc
or
and
inc
outsb
and
stos
orb
xor
or
in
mov
lcallw
loopne
and
stos
rolb
pop
pusha
cmp
cli
aas
add
cmp
psrlw
add
add
push
sbb
sbb
add
push
lret
dec
loopne
pusha
inc
cli
lods
xor
sub
adc
call
xorb
rorb
jb
add
adc
cmpb
notb
mov
ror
push
xchg
decl
movsl
dec
sub
or
sub
jecxz
and
ret
subb
dec
xchg
fsubp
push
and
adc
bswap
sarb
push
pop
ljmp
pop
mov
dec
adc
shlb
push
push
or
or
xchg
rolb
inc
jo
insb
cmovbe
cmp
adc
rorl
cmpsl
push
nop
insb
cmp
mov
imul
icebp
and
mov
dec
adc
cmp
scas
negb
lret
popa
fnstenv
or
mov
xor
ja
add
clc
jne
jmp
lock
ljmp
mov
cli
push
in
rolb
mov
decb
or
or
pop
add
jno
sbb
jmp
jmp
mov
adc
es
and
inc
push
xchg
outsb
mov
mov
ret
decb
adc
add
jne
outsb
inc
add
xchg
cmp
xor
mov
ss
loopne
adc
ja
xchg
jl
loopne
lods
push
in
xchg
add
incl
sub
push
sahf
xor
int
and
movsl
xor
jle
hlt
add
je
mov
imul
loope
sub
test
and
adc
ljmp
lds
push
add
out
pop
xchg
cmp
test
jmp
mov
inc
mov
inc
popf
mov
or
sub
sub
imul
out
mov
sahf
je
add
out
test
test
das
xchg
mov
das
push
add
mov
mov
inc
fnstenv
jp
test
push
rsqrtps
addl
or
clc
daa
push
jge
xchg
mov
data16
xchg
push
call
testb
push
aam
sbb
insb
ss
push
lock
test
rolb
test
fdivl
pop
sbb
cmp
push
add
call
shld
push
rclb
sbbl
pop
lahf
inc
out
test
add
add
mov
ss
pop
clc
add
pop
add
out
mov
in
or
or
dec
and
aaa
les
mov
int
lock
sub
xorb
mov
xchg
orl
push
push
out
inc
push
cmp
push
sbbb
add
into
push
push
mov
sub
movsb
jbe
or
inc
or
fsubr
add
dec
mov
add
pop
or
mov
xchg
cmp
inc
push
insl
xlat
arpl
lds
enter
or
aad
and
mov
xorb
xchg
add
push
lock
add
add
and
mov
or
fstpl
popf
cli
leave
push
xchg
xorb
or
xor
push
pushf
orb
add
mov
jb
mov
jle
fsubrs
call
adc
out
in
or
pop
rorb
pusha
and
mov
xchg
sahf
xchg
negb
frstor
and
fs
mov
ljmp
aam
aam
or
loopne
or
mov
loope
cmpsb
sbb
pop
xor
and
cltd
loop
add
es
cli
add
push
lds
fldcw
nop
aam
add
or
ss
outsl
mov
jp
mov
mov
out
add
psrld
sbb
ret
int
ret
les
out
mov
in
sbb
ja
mov
iret
inc
addb
add
xchg
jbe
insl
cld
shlb
inc
xchg
or
arpl
dec
pop
scas
test
cmp
test
jle
out
clc
pop
xchg
nop
int
popa
subb
call
sbb
pop
mov
in
or
sbb
rcrb
fs
or
inc
daa
gs
cli
lds
mov
sbb
add
fadds
mov
fwait
jle
jl
rolb
decl
mov
test
mov
rclb
add
lock
sbb
or
mov
inc
xlat
cli
std
add
sub
addl
or
pop
xor
cmp
in
mov
push
inc
mov
test
adcl
jno
dec
inc
ret
sbbb
cmpb
jg
mov
inc
aam
mov
adc
and
loope
std
pop
mov
setl
addb
mov
pusha
or
jo
pop
push
stos
mov
mov
loopne
add
xchg
mov
lcall
and
mov
data16
pop
cwtl
fsubs
inc
pop
mov
push
dec
pop
sbb
les
mov
divl
xorb
xorl
or
push
loopne
xchg
filds
insb
and
dec
sub
ret
inc
sub
xchg
insl
iret
iret
loopne
sbb
xchg
repnz
or
add
mov
mov
vmread
sbb
push
clc
pop
ret
pop
es
es
push
popa
sub
adc
je
or
inc
sbb
nop
adc
jl
mov
lret
adc
dec
inc
dec
mov
testl
subl
inc
dec
and
mov
inc
xor
fildl
stos
mov
pusha
out
cmpsl
and
decl
pop
loopne
cmove
or
movsb
sbb
mov
movsb
subl
loopne
pop
cmpb
and
sub
pop
adc
add
pop
sub
add
decl
sbb
xor
cmpsb
inc
and
addb
and
aad
or
mov
jg
cmp
das
arpl
xor
add
lods
push
stos
outsb
mov
hlt
sub
rol
adc
shll
mov
sub
xor
xor
test
xor
pop
dec
jo
outsl
push
lds
or
xor
mov
pop
pop
in
data16
xor
push
leave
xor
sbb
lret
leave
xchg
jecxz
jmp
and
cltd
jg
push
sbb
or
out
lods
mov
mov
mov
mov
lret
sti
xchg
pusha
xor
xchg
nop
dec
shlb
add
pusha
decl
or
popa
add
and
xorb
mov
arpl
inc
and
mov
divb
cmp
xlat
sbb
inc
push
mov
xchg
in
mov
xor
and
add
sbb
mov
insl
or
xor
dec
mov
fldl
xchg
movsb
push
rclb
inc
adc
push
pusha
call
fadd
or
and
mov
mov
mov
add
outsl
and
pop
inc
js
pop
jns
jo
sarb
pushl
jb
or
add
inc
andb
and
int3
mov
test
xchg
cmpsb
mov
adc
test
mov
inc
push
push
loop
jbe
faddl
mov
sub
stos
push
and
ss
jnp
scas
sub
pop
pop
or
mov
mov
addb
adc
popa
pop
fwait
xor
arpl
scas
mov
sahf
mov
outsl
xor
icebp
add
fcoms
cmp
clc
rolb
add
out
or
call
xor
adc
lcall
or
mov
sbb
movaps
push
push
js
dec
adc
adc
jbe
jp
sbb
xchg
cli
or
test
js
jo
roll
in
mov
ljmp
mov
int
loop
mov
stos
adc
add
xchg
add
sub
mov
mov
nop
push
push
push
adc
test
jg
lock
inc
cmp
xchg
int
dec
sbb
cmp
decl
dec
xchg
repnz
or
testl
push
and
adc
into
push
mov
les
adcb
clc
pop
rol
dec
jo
and
sbb
push
stos
movsb
mov
or
jo
test
lret
out
add
out
and
test
mov
xor
scas
push
push
and
add
add
ret
add
rcrl
mov
xchg
fwait
data16
mov
xchg
hlt
push
nop
sti
scas
cli
lock
imul
xchg
imul
repnz
push
xchg
inc
jg
add
pop
mov
ret
push
cmp
adc
or
cld
mov
or
or
and
cmpsb
sbb
cld
push
and
sahf
pop
loopne
or
aaa
fsubrp
xchg
push
cmpsl
xchg
ret
mul
sub
in
sbb
xchg
xchg
shrb
mov
cmc
add
int
xor
or
pop
or
push
sub
rcr
push
xchg
pcmpgtd
xchg
insb
jmp
jne
xchg
xor
add
adc
mov
data16
xchg
push
fisttpll
loopne
pusha
pop
hlt
push
jg
imul
push
scas
mov
push
cmp
out
je
sbb
adc
and
add
out
push
and
mov
cwtl
adc
mov
je
mov
pmaxsw
rcrb
jo
outsl
pop
mov
mov
mov
adc
pop
or
cmp
je
adcl
popa
mov
paddq
insl
push
xor
mov
nop
stos
push
xchg
xchg
hlt
outsl
cmpsb
add
data16
xchg
in
sbb
ret
push
adc
adc
mov
std
imul
sbb
xor
mov
and
dec
out
pusha
xchg
sub
xchg
jno
das
jb
nop
aaa
cmpsb
sarb
lcall
stos
lcall
mov
sbb
add
xor
test
xor
mov
mov
test
add
mov
mov
outsb
mov
call
add
mov
mov
sbb
inc
fcoml
pop
clc
inc
mov
or
lahf
nop
add
mov
xor
shlb
xchg
stos
ficoml
aam
rorl
sbb
fisubrl
adc
call
incl
sbb
es
lods
nop
ret
or
sbb
mov
pusha
pop
scas
loopne
mov
in
cmp
cmp
mov
scas
push
push
mov
push
or
adc
push
push
add
les
hlt
jb
cmp
hlt
add
cmp
cmp
ficoml
fcoms
bound
test
loop
pusha
or
fimull
loop
jmp
mov
fcmovu
xchg
or
fadds
mov
mov
or
jg
outsb
stos
sbb
bound
sub
mov
les
das
sbb
sub
fidivrl
cwtl
enter
jo
imul
loopne
xor
jmp
cli
dec
ret
sbb
xchg
incb
adc
adc
adc
xor
stc
out
adc
rcl
cld
mov
stos
pop
loop
push
add
xlat
add
cmpsb
mov
cmp
lcall
andb
mov
push
add
adc
adc
sub
jb
add
jg
testl
pusha
add
sbb
arpl
sbb
cmpb
js
mov
int
sbb
sub
aaa
or
and
dec
push
lods
rorb
ret
mov
xchg
scas
push
mov
mov
xchg
cmpsb
xchg
shrb
int
mov
nop
lds
mov
ret
mov
rcrb
mov
jb
mov
push
fwait
es
incl
xchg
sub
push
in
scas
mov
sub
pop
mov
in
xchg
js
lods
mov
sbb
and
push
sub
popa
add
mov
incb
sub
or
fstp
mov
int
adcl
or
shlb
fsubrs
cmpsl
xchg
data16
mov
xor
inc
data16
jecxz
mov
xchg
xor
or
das
push
or
sbbb
js
cmp
clc
testb
mov
sbb
and
and
pusha
add
pop
mov
mov
add
addb
pop
cmp
mov
dec
les
add
add
mov
int3
mov
pop
dec
out
lea
in
xchg
cli
push
mov
test
popa
int
sub
loope
xor
cs
adcb
lret
xorb
shl
add
sarb
loop
jo
movsl
sub
out
loopne
adc
in
sbb
movl
xorb
dec
mov
std
inc
pop
adc
jno
jecxz
je
xchg
mov
sub
xchg
neg
mov
xchg
stos
inc
xchg
add
mov
sub
jb
nop
add
inc
std
mov
push
mov
ja
xor
in
xchg
add
push
nop
add
add
xchg
pop
adc
xchg
pop
lret
fsubrs
xlat
or
adc
notb
insb
ficomps
mov
cltd
in
mov
loop
jae
movsb
mov
push
ficomps
and
add
adc
or
data16
add
or
stos
notb
addl
add
out
fisttps
add
ljmp
insb
in
fs
xchg
dec
scas
loope
add
sub
add
enter
add
ror
rcrb
iret
sbbb
in
or
mov
shlb
push
sub
mov
sbb
loop
push
xor
or
cmpsb
mov
adc
nop
aam
cmpb
jns
mov
fstp
xor
mov
sub
popa
and
mov
cmc
mov
sbb
or
xchg
addb
add
xor
and
cmp
adc
pusha
cmpsb
jno
jb
addl
ficoms
pop
insb
cmp
adc
gs
jo
push
dec
fiaddl
scas
or
push
adc
mov
lret
enter
push
dec
inc
dec
pop
ret
mov
dec
stos
lods
pop
les
lcall
mov
and
cmpsb
dec
pop
cmp
sub
bound
fsubrl
sub
sub
arpl
mov
xchg
in
mov
pop
rolb
push
push
test
or
stc
shl
fistpl
imul
fwait
add
aaa
insb
outsl
xor
adc
fwait
add
push
or
add
rolb
je
or
inc
push
mov
push
pop
pushf
xorl
push
outsb
incl
pop
xorl
repnz
inc
adc
and
push
fnstcw
push
stos
data16
pop
adc
lods
xor
adc
fsubp
sbbb
addl
or
adc
add
push
xor
pusha
pusha
clc
fisttpll
fiaddl
cld
adc
clc
mov
outsb
loopne
pop
loopne
dec
and
call
in
xor
loopne
pop
andb
push
inc
lods
jp
or
mov
mov
adcb
pusha
into
mov
dec
cltd
and
push
inc
and
xor
out
mov
daa
xor
sub
es
inc
push
push
arpl
xchg
clc
subb
ss
push
adc
sbb
inc
inc
stos
add
loope
mov
icebp
inc
cmp
mov
movsl
rolb
sub
out
mov
aad
pop
mov
mov
pop
ret
push
ljmp
dec
dec
insb
adc
inc
sub
je
jecxz
inc
xchg
mov
movsl
hlt
fwait
sarb
int
dec
imul
push
test
es
xor
out
loopne
mov
and
dec
pusha
pop
andb
stc
decb
cld
inc
les
ljmp
xchg
cli
mov
jp
push
pop
str
add
or
or
push
fs
sarl
fs
aaa
push
add
out
in
movsb
rolb
or
add
ss
pop
xchg
jle
or
clc
push
loop
mov
mov
fcoms
jl
sbb
test
pop
hlt
xchg
lock
dec
inc
stos
je
push
add
sbb
add
in
mov
inc
add
shrl
adc
out
xchg
push
add
xor
mov
sar
mov
lods
push
or
and
xlat
inc
mov
add
movl
xchg
or
movq
pop
fildl
pop
xorb
jb
inc
sahf
xor
pop
add
add
sub
mov
dec
and
adc
aam
pushf
and
push
jne
mov
lahf
dec
stos
jp
and
adc
dec
inc
push
mov
xor
jb
pusha
pop
gs
loop
testb
mov
add
push
xchg
in
fneni(8087
adc
ljmp
add
ljmp
add
or
sahf
movsb
pop
loope,pn
gs
popf
xor
es
mov
or
imul
ret
mov
loope
and
jo
orb
ss
adc
imulb
lea
cmc
add
push
subb
fcomip
push
lret
jb
sbb
xor
imul
jmp
jne
jl
push
in
mov
insl
mov
jb
push
movsb
in
and
call
ret
data16
push
lock
push
in
test
mov
sub
push
adc
stos
and
mov
imul
inc
xchg
jl
ret
fisttpl
sbb
repnz
cmp
or
adc
mov
stos
and
mov
out
inc
loop
sbb
mov
nop
push
sbb
inc
mov
mov
add
in
push
adc
xor
and
xor
lret
icebp
push
lret
add
mov
add
push
mov
push
add
sbb
pop
push
loope
adc
lret
orl
inc
push
inc
repnz
xor
xorl
or
and
mov
dec
add
adc
xor
movsb
and
outsl
dec
fdivrl
mov
or
ret
and
movsl
ljmp
rorl
iret
mov
mov
inc
rcrb
hlt
add
adc
push
std
arpl
into
nop
add
jp
add
mov
push
repz
mov
push
testl
xchg
pop
ret
and
movsb
sbb
loope
cli
xchg
les
mov
ret
ret
fdivr
loope
cwtl
lcall
cmp
inc
add
inc
iret
cmpsb
pusha
in
jo
and
cmpsb
js
dec
aam
inc
and
jo
les
mov
and
jb
orb
mov
xchg
mov
add
rolb
shlb
in
lods
loopne
loope,pt
push
cmp
mov
add
sbb
mov
shrb
and
jne
mull
push
loope
xchg
in
adc
stos
adc
repz
stos
mov
adc
mov
push
pop
enter
popa
ljmp
dec
xchg
adc
outsl
push
add
inc
cli
push
es
xor
sub
or
es
nop
sub
xchg
es
adc
nop
fiadds
push
es
sbbb
enter
and
rolb
rol
jecxz
xchg
fimull
outsl
stos
jecxz
inc
decl
mov
xor
inc
push
xor
mov
sahf
loopne
and
xchg
mov
adc
dec
fwait
test
and
adc
sub
push
popl
sbb
mov
push
mov
dec
scas
scas
and
mov
pop
inc
jecxz
mov
or
pop
xor
les
inc
fs
add
adcl
call
push
divb
pop
out
test
sub
clc
or
add
xchg
pushf
sbb
nop
and
cmc
add
jbe
add
mov
mov
or
fildll
mov
cmpsb
cmp
pop
add
adc
out
adc
inc
scas
adc
mov
shll
push
mov
add
daa
xchg
pop
and
dec
xor
pop
mov
mov
add
repnz
mov
sub
push
inc
popa
sub
sar
pop
shll
test
cmp
aas
push
stos
jle
jl
les
mov
dec
or
push
mov
divb
push
pop
loop
or
xorb
mov
jge
pushf
fstl
mov
mov
mov
nop
loop
push
xor
popa
or
xor
lret
push
out
xor
hlt
sub
pop
or
filds
push
out
scas
sbb
aas
add
das
mov
test
testl
inc
cmpsl
add
mov
or
jp
nop
or
add
arpl
and
jle
xor
ljmp
popa
dec
cli
push
push
mov
push
lea
or
cld
xor
push
cwtl
sub
push
and
adc
sbb
mov
insl
sub
rorb
in
sbb
or
fstl
ss
sub
lods
ret
in
fimuls
les
push
adc
pop
das
sbb
add
test
lock
adc
mov
dec
sub
mov
hlt
aaa
or
lahf
xor
push
aas
adc
test
sbb
outsb
lock
outsl
clc
push
add
test
push
shlb
js
jmp
add
add
mov
adc
outsl
js
pop
mov
inc
aam
sub
cmpl
and
push
inc
pop
aaa
adc
jl
dec
jbe
adc
cmp
rclb
sbb
mov
aaa
ljmp
add
sbb
push
rclb
dec
push
or
ljmp
aad
test
and
clc
lahf
sub
ds
mov
jg
sbb
enter
push
andb
pusha
cmp
pop
lea
and
cwtl
xor
add
xchg
fwait
or
rclb
mov
sbb
imul
mov
nop
sub
out
mov
mov
sbbb
lock
rclb
mov
push
push
movsb
cmp
add
mov
jl
lds
loop
ret
inc
mov
cmp
decl
adc
add
cmp
in
outsl
sub
insb
add
imul
push
lods
popa
jno
js
jo
loopne
out
addb
adc
xor
jo
and
pushf
out
cli
test
ret
mov
adcb
sub
sub
xchg
jge
lret
push
mov
or
mov
pop
mov
dec
cmp
xchg
mov
xchg
imul
fs
faddl
add
sbb
call
sub
add
jo
mov
into
sahf
repnz
inc
imul
gs
pusha
jmp
jmp
pop
pop
mov
sub
lds
outsl
loope
add
in
mov
and
bnd
in
push
pusha
add
test
ljmp
mov
xor
mov
stos
inc
sub
fbld
das
and
gs
cmc
mov
sbb
push
dec
jmp
lea
mov
or
rcr
push
les
pusha
cmpsl
icebp
out
push
jmp
out
test
aam
shrl
xor
sub
mov
add
in
loope
bound
sub
pop
fstl
nop
xor
push
push
or
out
add
or
lcall
nop
push
xchg
fistps
movsb
or
inc
rcrb
push
fsubrs
push
add
or
inc
cmpsb
cmpsb
mov
push
pop
or
outsl
push
scas
cli
inc
stos
add
test
jge
push
inc
aaa
pusha
mov
or
mov
push
sbb
or
stos
jle
sub
loopne
sti
and
mov
js
aas
loope
xchg
sar
ja
fbld
add
mov
mov
and
outsl
rolb
sbb
cmp
filds
ljmp
loop
mov
inc
mov
out
inc
pop
jecxz
add
bound
mov
mov
adc
xchg
lcall
mov
pusha
es
xor
xor
xor
cli
dec
insb
adcb
lods
fisttps
ret
cmp
sbb
mov
lcall
cli
mov
adcb
xchg
pop
adc
push
xor
enter
add
push
test
ficoml
rcl
or
mov
daa
xchg
inc
xor
lock
push
or
add
addr16
mov
popa
mov
adc
rclb
jmp
ljmp
sub
or
pusha
add
fbld
enter
scas
add
add
cli
or
inc
jl
mov
fldenv
ss
ds
inc
xchg
xor
add
inc
push
andl
pop
add
push
xchg
repnz
inc
or
or
or
mov
cltd
dec
pop
scas
ljmp
mov
imul
lea
insb
movsl
cld
insl
sarb
shl
push
dec
pop
fstpt
lret
sbb
jbe
jle
and
movsl
repnz
mov
aad
pop
mov
popf
add
in
or
dec
mov
bnd
jp
lods
mov
int
mov
lods
xchg
shlb
inc
arpl
cmp
lock
in
xchg
movsb
call
or
scas
movsl
adc
mov
mov
les
push
mov
mov
and
andb
or
and
rclb
in
movsl
rolb
add
pop
ljmp
cmpsb
repnz
fcomp
mov
sbbb
and
mov
adc
lret
xchg
mov
mov
adc
mov
xorb
mov
push
sub
dec
test
icebp
pop
inc
jp
fcmovu
and
and
pop
adc
sbb
or
imul
movsl
pop
sbb
mov
ret
cmp
test
push
xchg
rolb
pusha
in
movb
and
orb
adc
add
cmp
lahf
and
cli
ja
sbbb
or
mov
ljmp
mov
add
pop
sar
sarb
ret
inc
jecxz
jecxz
inc
cmp
shlb
cmp
stos
or
pop
inc
dec
and
inc
xor
call
push
int3
push
mov
and
mov
xchg
insl
and
or
jae
sbb
inc
inc
test
insl
sti
cmpl
push
pop
cwtl
fadd
or
pop
mov
into
js
fisubrl
xchg
sub
sub
aad
mov
mov
mov
aaa
in
test
daa
test
rclb
lods
or
faddp
push
mov
es
sbb
and
and
mov
xchg
les
clc
loope
lea
std
adc
out
sub
ret
push
xor
push
shrb
xchg
mov
dec
push
inc
clc
mov
dec
rorb
rorb
lcall
das
jp
inc
add
loop
out
or
inc
enter
outsl
or
xchg
rolb
mov
lret
jb
xchg
insb
repnz
sbb
and
or
xorb
add
es
movsb
fcomp
push
popf
shlb
sub
roll
gs
push
xchg
or
add
sub
jb
leave
xor
in
es
pop
and
mov
cmpsl
ror
xchg
lea
lds
js
rcrb
inc
sub
pop
xchg
add
push
lods
add
loop
and
fdivrs
mov
movsb
dec
dec
mov
aad
into
rep
fsub
push
flds
in
xor
or
and
into
jbe
and
aam
popa
adc
call
in
in
add
dec
loopne
ret
arpl
jge
outsb
pop
into
ljmp
shlb
inc
inc
sbb
pop
fst
push
or
pushw
inc
aam
inc
adc
add
lods
std
and
xchg
cmpsb
test
adc
push
mov
cmpsb
jns
add
xor
scas
xchg
mov
mov
pop
inc
sbb
dec
mov
addb
outsb
fisubrl
adc
add
add
push
clc
inc
push
fidivrs
push
push
jg
cli
stos
repnz
std
aad
jle
adc
mov
push
fdivs
or
pop
fld
mov
es
idivb
pop
fsts
movsl
fmuls
loopne
jnp
adcl
ljmp
cmp
jge
sahf
jbe
cs
or
add
stos
fnsave
popa
pop
stos
jbe
mov
sub
ja
in
movsb
bound
ljmp
rcrb
iret
add
fisttpll
lret
adc
add
rcrb
jle
pop
cmpsl
push
sbb
loope
repnz
setg
dec
add
incb
or
and
mov
inc
inc
data16
and
pop
loop
lds
dec
stos
mov
mov
mov
shll
adc
dec
add
fwait
insb
push
subl
xchg
push
add
inc
add
loope
mov
les
push
add
ds
insl
adc
scas
inc
sti
jbe
add
pop
adc
jle
setne
mov
fsub
mov
mov
js
data16
jo
mov
xchg
or
xor
repnz
mov
sub
add
iret
add
nop
mov
rclb
imul
pop
enter
aam
mov
in
shlb
out
mov
push
pop
cld
sbb
lock
dec
fucom
mov
popf
mov
inc
ljmp
xchg
add
fisttps
out
add
jp
and
add
mov
and
lret
mov
loop
and
mov
mov
push
shl
adc
lods
fiaddl
loop
add
pusha
pop
dec
lret
rcrb
sub
aam
test
xchg
adc
inc
cmp
sub
repnz
ljmp
xor
ret
mov
push
adc
rclb
cmp
je
xchg
nop
aas
add
jp
loope
clc
fnsave
sbb
insl
in
scas
mov
add
subl
dec
subb
insb
cmp
aad
rorl
imul
dec
dec
imul
and
rorb
xor
adcb
in
sbb
shl
data16
pop
and
sti
add
add
or
pop
addb
fcmovnb
fxch
nop
enter
es
fbstp
mov
ret
add
mov
outsb
inc
mov
xor
enter
int
frstor
push
ljmp
cmp
rol
iret
fs
push
test
sub
loopne
sbb
nop
sbb
outsl
incl
out
pusha
add
and
and
sbb
fs
stos
push
test
cli
lcall
push
and
es
pop
mov
inc
cmp
jo
lret
push
mov
push
cmpsb
addb
inc
push
pusha
incl
cmpl
out
xor
jecxz
jno
adc
add
mov
ljmp
es
out
mov
lock
push
lock
rolb
arpl
mov
mov
pop
sbb
xor
push
mov
fcmovnbe
mov
fidivs
inc
jecxz
lock
and
addr16
in
mov
add
pop
add
outsl
adc
sahf
repnz
inc
sbb
sub
test
outsb
mov
pop
cwtl
cli
rolb
jo
adc
and
xchg
in
es
adcl
andb
loopne
xor
outsl
divb
mov
cmpb
push
mov
fisttpll
adc
cmpl
loop
push
add
push
add
adc
jns
subl
inc
fisubl
cmp
and
and
out
push
icebp
inc
roll
jmp
rclb
add
mov
inc
or
or
push
fcmovnu
in
add
andb
mov
adc
filds
mov
dec
inc
orl
inc
or
negb
mov
or
js
xchg
jns
jns
inc
js
ficoml
andb
or
loopne
mov
bound
addl
subb
les
pop
xor
loopne
popa
sbb
rcrl
sbb
movsb
inc
mov
or
inc
dec
inc
cld
ljmp
in
and
inc
loopne
mov
shlb
sarb
icebp
test
add
aad
scas
scas
das
loope
nop
pop
dec
popa
add
xchg
loopne
mov
clc
jg
pop
inc
xor
add
push
loop
and
ljmp
push
push
jl
mov
adcb
or
and
sub
sbb
mov
xor
mov
rolb
pusha
enter
call
jo
icebp
orb
or
adc
sub
stos
dec
dec
xchg
sbb
adc
ljmp
xor
adc
cli
ljmp
mov
mov
out
push
or
mov
adc
inc
inc
ficompl
xchg
jb
mov
xlat
mov
mov
add
add
pop
movsb
mov
sbb
ds
add
loopne
inc
ljmp
pop
or
inc
mov
or
push
cwtl
sbb
mov
and
rorb
inc
addl
xchg
sarb
pop
push
mov
mov
mov
add
lods
fwait
adc
mov
mov
mov
adc
loop
rolb
insl
ljmp
jo
mov
test
int3
movsl
xchg
inc
insb
stos
inc
push
in
fstl
fisubs
xlat
and
jl
sub
fs
loopne
push
ficompl
push
mov
sub
xchg
loope
or
mov
test
push
mov
push
clc
imulb
cmp
or
adc
push
add
pushl
xor
push
pop
mov
sub
add
sub
popf
jb
out
mov
push
int3
sbb
call
cmp
mov
pop
add
mov
pop
xchg
add
sub
jno
sar
push
roll
lret
loopne
mov
imul
pop
sbb
into
mov
sbb
dec
jg
add
insl
sbb
js
fbld
lret
loop
inc
jecxz
mov
movsb
mov
insb
xor
bound
in
xorb
call
add
lcall
mov
cmc
loopne
out
ds
add
cvtpi2ps
clc
mov
aas
xor
or
add
cmpb
push
dec
es
add
popa
add
dec
add
cmp
mov
out
sbb
and
insb
jns
xchg
add
inc
or
outsb
xor
mov
pop
sbbb
out
and
imul
mov
out
add
adc
lret
dec
pusha
xchg
test
aaa
inc
add
clc
fcomip
filds
ret
adc
push
push
ja
mov
xchg
mov
in
pop
adc
push
dec
push
shr
jo
or
outsl
inc
or
mov
ja
ds
call
int
addr16
data16
in
push
sar
nop
aad
bound
repnz
push
sar
adc
pop
lea
add
ljmp
iret
xor
div
int
push
mov
inc
xor
inc
pusha
es
in
outsl
add
loopne
jmp
arpl
test
or
mov
psubd
add
xchg
xlat
roll
mov
xchg
xor
jle
pushf
mov
add
lret
push
mov
xchg
out
push
push
push
or
fcomip
add
scas
xor
es
ret
minps
mov
shlb
rol
or
inc
xchg
sub
rolb
add
add
lods
mov
mov
decl
popa
or
popf
mov
and
push
pop
add
jb
cwtl
inc
loope
test
push
popa
fisttps
sub
outsb
pop
insl
sub
mov
pop
xor
push
insl
mov
add
mov
pushf
gs
ja
and
dec
add
and
mov
add
loope
cmp
mov
int
mov
add
jbe
ja
add
pop
insb
jb,pt
addb
push
dec
or
pusha
mov
les
xchg
add
dec
jg
jbe
dec
add
dec
leave
aam
or
loop
cld
sbb
xor
in
xchg
jge
jmp
add
rolb
jb
hlt
add
rorb
inc
imul
xchg
cmc
jmp
mov
or
addb
pop
and
in
push
xor
orb
xchg
sbb
cs
or
pop
movsl
data16
cli
mov
jo
adc
push
or
mov
sbb
push
stos
fdivp
sbb
or
push
add
xchg
or
mov
sbb
sbb
xchg
es
call
adc
or
inc
daa
push
add
dec
das
loop
and
and
imul
mov
pop
push
and
add
ja
or
subb
ds
add
insl
mov
dec
dec
or
inc
lock
gs
add
push
add
jb
mov
pusha
addl
cli
adc
or
sbb
add
mov
or
or
pop
sbbb
movsb
push
insl
loop
or
sub
aam
fstpt
rolb
cmpl
xchg
or
or
imul
sbb
subl
frstor
xor
mov
idiv
add
mov
clc
push
jbe
inc
or
push
dec
std
push
cli
andb
push
das
out
mov
ret
xor
jo,pn
sbb
cli
fsubr
rclb
shrb
stos
or
add
add
add
insb
xor
lods
cmp
insl
mov
stc
or
adc
mov
sbb
scas
jg
or
rolb
or
dec
add
pop
outsb
add
or
xchg
adc
adc
push
jp
inc
popa
fimuls
jo
mov
inc
push
loop
mov
fld
dec
outsb
gs
insl
jmp
xchg
inc
xor
push
lcall
xchg
mov
insl
mov
xor
push
xlat
mov
jp
stc
or
pop
lods
dec
and
pop
pop
inc
mov
sbb
jle
inc
add
stos
rol
or
push
sub
scas
mov
pop
sub
jmp
lcall
push
repnz
pop
lock
lods
leave
adc
ret
es
mov
in
xor
add
nop
orb
or
adc
mov
xor
lcall
aad
ss
pusha
add
aaa
shl
mov
cmpsb
mov
add
and
movsb
or
or
or
andb
push
or
enter
sar
clc
and
rcrb
jno
clc
push
cli
test
mov
aad
mov
cwtl
push
jo
add
mov
shl
push
mov
gs
or
pop
fcomi
pop
sub
sbb
shrl
xchg
inc
mov
aam
mov
pop
pop
or
inc
je
dec
add
cli
cmp
and
mov
sbb
and
out
addb
mulb
mov
out
clc
ret
cmp
aad
adc
push
pop
and
mov
jp
das
push
pop
shrb
add
repnz
cs
push
std
rclb
out
mov
adc
testb
and
imul
mov
in
in
add
or
add
or
iret
pusha
sub
sbb
or
xchg
jmp
cwtl
aas
cmp
lds
cwtl
cmpsb
or
xor
push
and
dec
sbb
aad
out
imul
add
cld
sub
add
or
sub
roll
and
pop
pop
adc
adcb
nop
outsb
add
pop
and
jbe
stc
mov
mov
adc
lock
mov
push
sub
imul
cmc
inc
or
and
jg
mov
add
xor
mov
push
loopne
cld
loop
rcrb
pushl
lea
lea
push
mulb
pop
or
mov
int
push
and
pusha
sub
mov
test
xchg
ret
loopne
sbb
mov
cmp
rcll
lea
xor
xchg
je
cmp
push
push
addb
cmp
fwait
in
imul
sub
add
addb
sbb
ja
add
sbb
mov
sub
lcall
sub
out
shrb
lds
and
shlb
inc
cld
mov
sub
xchg
mov
add
add
scas
jle
xchg
les
push
bnd
and
xchg
nop
test
pushf
insl
lcall
adc
push
mov
into
sbb
subb
mov
adcl
stc
pop
push
mov
mov
add
mov
mov
sbbb
ljmp
lock
sahf
frstor
xor
mov
cmpsb
out
int3
into
stos
ret
ja
or
bnd
add
aaa
pop
pushl
pop
or
dec
roll
jg
push
push
and
mov
loopne
mov
cwtl
mov
adc
xchg
loop
mov
insb
inc
mov
sub
mov
ret
or
mov
inc
xor
adc
mov
icebp
push
dec
stos
ss
push
mov
push
in
and
scas
add
rep
xor
or
call
pop
adc
sub
dec
jae
adc
xorl
loopne
movsl
or
sbb
jno
dec
mov
xor
testb
add
adc
inc
test
shrb
mov
sarb
insl
xorb
sub
adc
push
add
cmp
xor
cmc
int
aaa
outsb
out
inc
adc
adc
pop
ret
push
mov
sbb
mov
cmp
fdivs
inc
pop
xchg
outsb
xchg
lods
imul
adc
and
inc
wrmsr
push
or
sub
mov
push
pushf
sti
adc
mov
sbb
add
or
add
mov
add
add
push
decb
cmc
push
lock
inc
jecxz
sbb
std
testb
hlt
jo
jle
mov
add
adc
loope
sbb
mov
xor
loop
adc
sub
mov
add
dec
add
lret
stos
mov
movsb
push
mov
mov
bound
fsts
jae
sti
dec
mov
adc
mov
cs
jb
cs
rorb
xchg
mov
push
sbb
imul
xchg
jbe
mov
and
cli
scas
clc
push
inc
nop
andl
ljmp
xchg
cmpsb
loopne
add
call
pop
push
push
add
pop
cli
rcrl
bound
xor
mov
add
adc
mov
loope
and
adc
fs
nop
mov
cmp
lock
out
mov
cmp
push
sub
cmp
sbb
or
call
add
in
and
add
inc
rolb
jo
push
adc
inc
shl
cmp
aaa
adc
lcall
sti
pushl
nop
or
hlt
mov
rcrl
adc
mov
leave
push
sub
mov
sbb
xor
mov
add
mov
adc
loop
or
add
and
pop
dec
andl
ret
xchg
popa
insl
ss
sub
hlt
push
sbb
xchg
adc
push
ljmp
jecxz
leave
mov
daa
lods
call
bound
inc
ss
push
cmp
push
incb
lods
fwait
cli
push
out
daa
xchg
or
xchg
jle
sub
inc
sbb
xchg
aad
mov
pop
or
fidivrs
pop
dec
adc
push
fcomip
mov
xor
adc
js
sysenter
in
loope
jle
rorb
fwait
loopne
or
push
addb
and
scas
jb
in
sub
or
dec
and
cli
shr
addl
imul
dec
clc
in
mov
int3
repnz
repnz
enter
into
repnz
test
xor
out
adc
jo
xorb
xor
sbb
sbb
sbb
jo
das
clc
aad
dec
in
push
shll
mov
inc
leave
add
jmp
repz
xor
push
dec
int3
jo
daa
orl
inc
inc
xchg
inc
insl
pop
add
cmp
test
popa
push
or
jg
ljmp
add
rolb
sar
inc
lcall
mov
and
lock
push
sbb
lods
rclb
add
adc
rorb
retw
add
lea
jo
xchg
adc
xor
lock
adc
xor
outsl
sarb
or
push
mov
fwait
aam
nop
daa
add
adc
mov
hlt
mov
lcall
enter
cld
jg
adc
mov
mov
lods
icebp
push
and
mov
push
pop
mov
mov
add
jp
scas
push
or
fdivrs
or
sub
push
test
int3
out
xchg
xchg
fiadds
jo
push
scas
sbb
cmpsl
xchg
xchg
mov
or
das
sub
push
mov
dec
adc
xor
shlb
ret
fadd
xlat
add
or
mov
testb
xchg
loop
test
ss
xchg
cld
rorb
hlt
sub
jle
aaa
cld
mov
rolb
inc
push
fisubl
or
inc
pop
dec
and
add
cmpsb
loopne
cmp
dec
lods
mov
cs
or
das
adc
xchg
dec
insl
xor
cmp
idivb
xchg
inc
xor
push
or
push
ds
and
stos
leave
sub
xor
inc
push
mov
rorb
or
adc
sbb
or
push
insb
inc
add
cs
sbb
add
inc
dec
mov
pop
rcrb
dec
add
test
mov
push
add
fdiv
pushl
inc
push
lock
arpl
notb
jle
sbb
jbe
andb
dec
dec
inc
add
ljmp
rolb
roll
lcall
loopne
iret
and
subb
mov
gs
rorl
mov
pop
adc
push
sbb
popa
push
xchg
test
mov
mov
js
pop
mov
roll
xor
shrl
or
test
shr
aam
jg
fisttps
or
orb
push
aas
mov
push
add
push
sub
jp
push
adc
adc
add
inc
push
mov
or
push
scas
cli
mov
mov
dec
pop
fldl
sbb
loope
aaa
nop
imul
cwtl
pop
pop
loope
mov
pusha
add
das
mov
add
push
mov
push
sub
sarb
sub
adcl
xor
or
test
mov
cs
push
mov
xor
adc
stos
mov
and
dec
or
sbb
cld
lahf
test
push
outsb
sbb
or
ja
cmp
subb
clc
dec
sbb
xor
push
push
push
or
or
mov
jo
jnp
mov
jg
out
ss
and
add
stc
mov
hlt
xor
cmpsb
dec
loopne
add
es
inc
addl
mov
xchg
inc
les
add
stos
test
pop
out
push
mov
mov
or
add
add
enter
mov
push
or
push
subb
fcmove
add
addb
push
mov
mov
and
adc
ret
mov
daa
add
inc
mov
daa
xchg
mulb
adc
mov
mov
test
insb
in
sbb
cwtl
pop
subb
xchg
mov
inc
loopne
and
lock
addb
add
je
adc
xchg
add
push
test
clc
mov
sbb
mov
data16
jns
pushl
and
add
sahf
add
add
pushw
push
mov
clc
xorb
pop
loope
cmp
inc
pop
test
repnz
adc
or
xorb
outsb
add
xchg
sbb
repz
outsb
add
sub
dec
jecxz
sub
and
push
rolb
fidivs
sub
roll
movl
add
mov
stos
shlb
or
std
lods
ficoml
fiadds
adc
pop
mov
add
or
inc
push
cs
fistpll
mov
xor
push
sbb
inc
insl
push
mov
adc
stos
add
push
cmp
fisubrs
sub
movsb
rolb
mov
loop
mov
bound
test
inc
or
inc
push
xor
clc
mov
scas
xchg
mov
out
mov
mov
add
je
add
pop
repz
push
or
mov
push
or
pop
fistps
dec
add
jle
adc
add
mov
or
jno
mov
test
push
mov
cmp
add
xchg
shlb
dec
mov
popa
mov
mov
push
adc
test
add
aad
movsb
mov
cmp
fucomp
mov
adc
sbb
imull
fisubrs
mov
cmpb
fsubr
inc
rorb
incb
add
xchg
gs
inc
add
adcb
mov
pop
test
shll
shlb
ja
jmp
pop
adcb
mov
addb
jg
mov
outsl
add
in
shlb
mov
add
xchg
jbe
and
ss
loopne
ljmp
fmul
or
push
mov
add
add
orb
fcompl
pop
add
sahf
mov
ljmp
mov
mov
push
repnz
shl
mov
sub
loope
push
js
push
add
cmp
add
cmp
jg
sub
lods
popa
or
mov
sbb
add
cmpsb
mov
nop
mov
push
rcrl
xor
out
pusha
push
push
lods
js
xor
cmp
adc
pop
and
pop
xchg
inc
or
test
cmp
or
ljmp
subb
mov
or
or
inc
mov
arpl
pusha
aas
inc
mov
and
mov
adc
pusha
add
cmp
ljmp
rclb
and
cmp
push
lret
xor
adc
arpl
es
adc
sub
loopne
and
push
and
adc
roll
andb
pop
dec
loop
call
aas
mov
rolb
push
xchg
adc
aas
sbb
push
mov
xor
test
cld
xchg
mov
pop
loopne
and
mov
repz
add
or
in
inc
sbb
and
imul
or
mov
mov
sub
add
add
mov
ljmp
dec
aas
mov
push
aaa
sbb
imul
mov
stos
inc
push
and
movsl
decl
ret
xor
add
fstl
cld
pop
jbe
add
loop
aam
jmp
adc
insb
jb
roll
sbb
ljmp
lods
cmpsl
hlt
sub
sub
lcall
pop
mov
es
pop
adc
stos
mov
mov
mov
and
loop
sahf
call
enter
or
or
mov
push
sub
ret
pop
mov
test
mov
mov
xor
leave
imul
mov
jb
outsb
or
incb
imul
pop
mov
loope
add
scas
xchg
dec
cmpsb
cs
add
shrb
push
xchg
cmp
shll
aam
mov
in
imul
mov
adc
mov
and
rolb
fisubl
mov
insl
sub
mov
mov
adc
push
mov
test
or
mov
ljmp
sub
repnz
sub
add
mov
xchg
push
pop
int
push
scas
fisubs
jge
clc
cmp
cmpsb
adc
mov
stos
clc
xor
test
or
lret
movsb
das
pushw
mov
inc
cmp
fadds
stos
dec
mov
fcomip
scas
cli
imul
repz
or
xor
scas
fistpl
mov
add
pop
add
movb
xchg
sub
dec
add
mov
ds
rolb
xchg
add
dec
cld
dec
xor
imul
mov
push
mov
clc
shl
dec
add
or
insl
clc
insl
sbb
mov
pop
idivl
xchg
icebp
jmp
push
dec
inc
hlt
inc
cwtl
hlt
filds
push
icebp
notb
mov
sbb
mov
push
loop
inc
ret
or
cld
push
push
sbbb
sbb
mov
aaa
add
pushf
push
pop
test
loop
hlt
xchg
cli
es
sub
jne
push
add
mov
cmp
addr16
jl
adc
in
or
sub
xchg
pop
push
jbe
imul
ja
mov
adc
and
xor
push
cmp
popf
dec
mov
jmp
adc
cmpb
mov
mov
pushf
jns
and
xchg
fadds
dec
stos
ret
xor
mov
push
les
andb
mov
adc
scas
jmp
sbb
bound
inc
das
and
jno
adc
inc
mov
inc
test
sbb
xchg
push
and
nop
hlt
and
shrb
scas
inc
es
ja
cwtl
aam
sbb
inc
xor
out
mov
es
inc
popa
aas
push
aaa
sbb
add
add
mov
add
pop
xor
dec
jmp
test
lock
insl
cld
call
cwtl
jecxz
frstor
or
sbb
loopne
inc
dec
add
ret
ret
roll
popa
cmpb
adc
aas
sub
push
sti
jb
jo
jbe
or
cmp
sarb
mov
mov
mov
sar
jmp
inc
mov
test
lahf
pop
repnz
rorb
mov
cmp
and
push
cmp
push
inc
cmp
ljmp
fmull
pop
dec
clc
sarl
mov
add
mov
jmp
rcll
je
push
push
mov
rclb
bound
or
lcall
roll
ret
pop
fs
mov
gs
call
sub
bound
les
pop
adc
push
es
jl
sub
aaa
xor
xchg
mov
and
adc
or
cmp
adc
xor
ss
mov
push
push
mov
in
mov
test
jp
mov
cs
pop
hlt
cmp
dec
andb
sbb
sbb
sub
cmp
shrl
add
in
ror
push
pop
add
mov
xchg
push
mov
loope
pop
push
js
sub
sbbb
jno
adc
push
imul
push
enter
sti
gs
push
and
pop
jo
sbb
push
cmp
xchg
push
daa
push
push
cs
cmp
ljmp
inc
mov
pop
imul
or
sbb
les
inc
mov
inc
add
or
or
out
mov
adc
mov
cmp
xor
push
xchg
push
xor
jle
arpl
push
aam
push
jo
push
pusha
loopne
mov
cmpsb
pop
adc
xor
push
push
pushw
popa
adc
cmp
cmp
adcb
mov
shlb
cmp
add
add
sbb
scas
nop
icebp
bound
inc
ret
andl
call
or
movsb
push
mov
pop
outsl
loope
icebp
adc
xor
add
inc
and
addl
outsl
adc
addl
ret
add
inc
inc
add
xchg
inc
mov
insl
xchg
pop
test
ds
sbb
fwait
inc
lcall
mov
xor
flds
lcall
dec
push
mov
dec
jbe
fnstcw
aaa
arpl
mov
inc
jae
inc
add
jno
mov
in
cltd
addb
add
jg
add
loop
add
mov
push
mov
or
add
adc
popa
cmp
mov
adc
nop
adc
sahf
mov
dec
sub
dec
shl
adc
push
xchg
push
repnz
xchg
insl
loope
sbb
sbbb
movsl
dec
popa
repnz
dec
push
or
mov
and
mov
add
sbbb
ss
jg
cmp
push
mov
jb
es
xorb
insl
add
jns
push
and
addl
pusha
loopne
movups
nop
sbb
addb
xorb
push
enter
dec
fadds
sbb
mov
sbb
rcl
in
jo
add
jb
popf
push
jg
xchg
test
jae
adc
xorb
pop
imul
pop
aaa
in
mov
adc
push
pop
imul
repz
aad
rcrb
mov
ret
inc
ljmp
mov
inc
adc
jle
jmp
rol
jle
adc
push
cs
add
mov
into
mov
arpl
jo
insb
add
cmp
add
add
je
fstpt
pusha
adc
enter
je
or
mov
jp
or
add
jl
or
adc
dec
jmp
add
or
jae
scas
mov
mov
test
mov
rolb
mov
xchg
and
mov
push
jo
jmp
adc
in
mov
cmp
add
and
push
xor
ret
add
pop
test
sbb
dec
repnz
std
pop
iret
pusha
xchg
sub
add
add
pushf
mov
inc
mov
nop
add
inc
push
outsb
or
andb
hlt
dec
xor
mov
xchg
push
bound
repz
ds
jne
pop
adc
push
sbbb
dec
or
fisttpll
push
dec
in
mov
or
add
push
adc
add
adc
sbb
sub
push
sbbb
xchg
inc
add
out
pop
adc
int3
and
lret
jb
adc
addl
adcb
rolb
push
lds
mov
sub
dec
sbb
push
push
cli
mov
cmc
sbb
add
movsb
adc
xorb
add
push
cmp
in
mov
call
dec
dec
push
mov
and
mov
lods
adc
dec
cli
jmp
rolb
adc
inc
pop
push
fdivrl
pop
inc
rcll
pop
mov
fcoml
shrb
jo
adc
jo
jo
mov
rorb
incl
xchg
push
mov
mov
add
and
jg
lock
orb
mov
adc
push
mov
lock
shlb
out
push
sbb
cmpb
inc
or
adc
add
andb
pop
call
push
rcrb
fisubrl
sbb
mov
sub
addl
mov
inc
mov
cmp
add
shrb
rorb
add
cltd
or
mov
or
add
cmpsb
sub
adc
jg
push
cmp
div
addb
or
sub
sub
push
cmpl
pop
jl
inc
adc
push
jmp
sbb
cmp
or
mov
jge
or
dec
add
and
fisttpl
mov
outsb
ds
inc
int
ds
add
mov
insl
push
insl
rcrb
rclb
adc
mov
xchg
insl
mov
cli
decb
in
add
mov
out
xchg
in
addr16
jns
out
hlt
sbb
repz
push
sub
sbb
nop
inc
incl
cmp
mov
add
add
ljmp
adc
inc
jo
enter
mov
and
inc
jb
cmp
cmpb
fidivl
add
or
pop
pop
mov
xor
int3
add
pop
add
adc
add
add
or
lea
add
xchg
dec
ss
xor
and
pushf
and
fwait
jle
jecxz
pop
mov
cmp
push
ret
jg
push
inc
je
and
xchg
pop
add
mov
imul
dec
adc
add
xor
inc
nop
subl
imul
xor
push
bound
mov
and
rcrb
lods
mov
mov
jp
fcmovnb
js
dec
insb
imul
or
aam
test
in
stos
inc
cmp
js
lcall
sbb
fwait
popa
mov
inc
add
aaa
clc
je
mov
cmpsb
mov
mov
fs
and
sahf
add
xchg
les
data16
inc
movb
outsb
shlb
push
mov
pop
js
mov
ja
mov
cltd
push
push
and
push
jns
in
arpl
add
sbb
outsl
test
cmp
sub
inc
mov
add
dec
adc
inc
addl
in
adc
mov
adc
push
inc
or
popa
xchg
sub
sbb
mov
add
sbb
xor
add
or
sbbb
clc
data16
testb
arpl
or
add
std
stos
push
or
bound
sbb
shlb
cli
jle
test
je
jmp
add
jle
ljmp
cmp
pop
pusha
lret
push
pusha
cmp
daa
add
adc
xchg
pop
or
loopne
cmp
inc
and
sub
cmp
mov
adc
adc
add
sbb
push
or
fistpl
or
gs
inc
lret
shrb
cmc
test
cmp
fcomps
dec
enter
push
and
incl
push
pop
fwait
xor
cmp
fwait
jge
arpl
add
sbb
inc
or
and
enter
cmpsb
andb
pop
adc
or
mov
add
pusha
cmp
cs
dec
adc
or
push
add
push
test
in
sbb
cmp
popa
and
push
push
adc
in
mov
inc
push
push
cmp
in
pop
popa
push
sub
es
jnp
int
and
add
addr16
cmp
sahf
sbbb
sbb
loopne
push
dec
test
push
mov
arpl
sbb
jmp
push
jecxz
cs
insb
jnp
inc
pushw
mov
push
adc
adc
sub
lds
xor
or
out
adc
js
dec
mov
rol
add
lods
pop
lock
xchg
aam
and
lcall
add
and
stos
out
int3
mov
bound
shr
loopne
mov
dec
inc
mov
shll
add
nop
insb
mov
cli
push
xor
sub
jp
jle
ret
nop
and
add
mov
je
inc
ds
cmp
inc
xor
popa
xor
dec
shlb
xor
pushw
add
inc
jp
add
pop
loopne
loopne
js
add
add
mov
outsl
push
cltd
ret
dec
cli
or
cmc
xchg
add
xchg
push
push
xor
xor
add
xchg
cld
mov
outsl
fdivs
mov
jp
jbe
ljmp
mov
mov
xor
xor
sub
arpl
shlb
lods
jo
inc
pop
rcrb
mov
and
sub
cmpsb
dec
test
scas
clc
jecxz
lods
fwait
nop
sub
mov
loopne
filds
les
sbb
add
clc
inc
pop
push
pushf
xchg
add
xor
adc
mov
repz
push
les
add
push
xchg
xor
lcall
ficompl
xorl
decl
push
out
add
xor
xor
lods
cmp
das
sbb
sub
push
test
sbb
inc
push
dec
xorl
dec
decl
aas
andl
mov
push
sub
in
call
fnsave
xchg
adc
xchg
jbe
mov
aam
xchg
shll
xchg
adc
adc
xchg
enter
popa
push
jmp
in
pusha
xchg
inc
dec
xchg
mov
popa
add
roll
pusha
xchg
popa
mov
lds
pop
inc
pusha
add
lock
loopne
mov
stos
shlb
pop
sub
pop
push
lret
rorl
sbb
lcall
in
ret
nop
ret
dec
addl
sub
mov
adc
or
mov
mov
sbbb
add
add
push
aad
mov
rolb
sbb
push
lock
insb
jl
inc
or
inc
pop
pushl
push
rcr
shrb
sbb
lock
pop
repnz
test
mov
push
add
adc
int
je
add
ret
add
mov
pusha
bound
xor
inc
mov
or
cmp
cmpsb
lock
test
jmp
mov
loopne
and
xorb
and
pop
and
popa
add
sbb
cmpsl
negb
mov
and
dec
sub
loop
and
and
mov
dec
iret
fiaddl
out
sahf
inc
in
ret
mov
in
and
adc
rclb
adc
cmpsb
or
xor
outsl
mov
div
xor
push
scas
add
inc
and
dec
cli
mov
aam
insb
in
add
xlat
pusha
mov
inc
adc
jmp
or
data16
jmp
mov
pop
and
sbb
lock
ret
lcall
sbb
push
xor
adc
clc
or
sbb
aaa
pusha
iret
and
adc
xchg
cmc
ja
add
into
fstl
hlt
outsl
movsb
pop
scas
int3
ljmp
aas
and
add
or
rcrl
shll
xchg
cs
fldt
call
pop
das
and
setbe
and
sub
icebp
clts
xchg
clc
add
push
jb,pn
icebp
es
and
push
pop
push
out
lods
push
pop
xor
cmp
push
scas
loop
rorl
fs
and
mov
divps
xchg
sarb
dec
bound
andb
pop
add
pop
mov
scas
and
pop
or
add
adc
xor
in
adc
cmp
dec
mov
add
pop
push
pop
pop
pop
push
dec
pushl
stos
fldl
hlt
pop
push
xor
ret
add
mov
mov
shrb
pop
cmpsb
adc
pop
push
mov
out
adc
rorb
push
and
scas
mov
jmp
mov
add
jmp
xchg
lock
xor
add
cmpsl
add
or
add
mov
lret
mov
stos
cwtl
sbb
aaa
nop
pop
adc
orb
xor
ret
rcll
adc
jl
test
sbb
sub
add
scas
mov
cmc
fldcw
es
xchg
adc
push
adc
add
xchg
insb
pop
or
or
or
add
jle
mov
mov
mov
incb
cmp
xor
es
ss
xor
ds
mov
fs
scas
in
pop
out
or
push
and
sub
scas
and
js
jge
xor
add
xor
add
mov
mov
les
add
adc
add
fidivrs
or
push
or
pop
mov
cmp
test
outsl
or
pop
jo
or
jbe
cmpsb
push
or
pop
jb
add
jb
add
or
aaa
fisttpl
jo
pop
jle
out
sbb
add
push
and
mov
add
inc
inc
sti
out
pop
inc
inc
jo
inc
pop
xchg
inc
pop
lret
and
dec
ljmp
dec
jle
mov
pop
mov
loop
mov
inc
jnp
push
pop
xchg
or
lcall
push
pop
imul
pop
or
pop
outsb
push
push
pop
outsl
xor
pop
or
aaa
or
adc
or
pop
cmp
fwait
jg
pop
out
or
pop
and
addb
xchg
mov
sub
testl
or
sub
push
sub
cltd
aad
xor
aaa
fbstp
aam
or
pop
xchg
xor
xor
fwait
or
push
lock
mov
cmp
inc
or
insl
xchg
stc
cmp
inc
lock
push
lcall
out
push
push
push
icebp
jno
xor
or
sub
or
xchg
dec
flds
mov
or
scas
add
adc
cltd
push
inc
mov
push
xchg
xchg
and
pop
rcrl
mov
cmp
mov
imul
pop
jae
out
pop
inc
cld
lea
inc
push
ljmp
decl
push
or
dec
adcl
inc
and
repnz
js
mov
ljmp
lock
xchg
subb
out
es
pop
mov
cli
sbb
inc
push
or
pop
and
add
cs
stos
loopne
mov
or
and
xor
pop
inc
aaa
rcr
ljmp
add
adc
pop
mov
ja
sbb
decl
ror
and
add
enter
in
sarb
shrb
add
mov
and
aam
mov
pop
jmp
sbbl
add
pop
and
mov
rclb
pop
stos
sahf
add
mov
push
or
outsl
inc
pop
mov
push
idivb
icebp
mov
ret
cmp
mov
clc
pusha
xchg
orl
ret
jg
inc
and
pop
fstpt
addb
pusha
mov
arpl
pop
cwtl
pusha
xchg
mov
or
push
incl
inc
add
mov
add
pop
cmpsl
inc
dec
add
pop
repz
xchg
adc
or
push
and
rcrb
outsb
ficomps
pop
sub
mov
mov
adc
xchg
xor
daa
sbb
pop
add
int
popf
xchg
scas
imul
pusha
xchg
jl
adc
lcall
add
imul
add
mov
jo
andb
out
aaa
adc
mov
popa
xor
push
test
lcall
shr
ret
and
sahf
rclb
inc
mov
inc
xchg
push
or
add
rcl
push
aas
xor
or
clc
add
dec
sbb
fiaddl
sub
lock
and
mov
cmp
addb
inc
mov
out
faddl
mov
in
mov
xchg
cmc
mov
mov
push
fs
lods
pavgb
inc
arpl
ficoml
ds
iret
mov
cmovo
fwait
push
stos
mov
adc
loop
add
lods
testb
cli
test
push
addb
dec
adc
or
jb
add
ror
or
xchg
xchg
mov
pusha
pop
add
sbb
xchg
imul
insl
adc
push
ja
test
gs
adc
pusha
push
popa
lret
pop
fwait
lcall
mov
addr16
outsb
push
sub
push
aad
enter
imul
push
dec
push
fmuls
imul
sarb
xchg
cmp
add
xorb
inc
pop
sub
lods
pushl
adc
adc
scas
or
or
push
and
or
fstpl
or
and
adc
mov
add
in
fwait
sbb
xchg
sahf
inc
sub
test
pop
xchg
or
fsubrs
pop
scas
mov
pop
out
cmpl
scas
inc
mov
test
mov
jmp
bound
adc
push
pop
xchg
mov
and
loopne
or
add
jg
inc
ficoms
pusha
sub
push
mov
adc
and
jmp
loope
push
or
inc
jo
mov
xor
lock
jb
ret
scas
add
sbb
add
add
adc
icebp
sub
aam
sub
mov
or
imul
cs
pop
inc
dec
fdivs
sbb
and
scas
pop
pop
outsb
and
dec
pop
pop
sub
xchg
mov
ret
mov
adc
add
add
fadds
xchg
and
sbb
repnz
mov
stos
rclb
cli
cs
jge
or
add
pop
popa
fldl
jbe
shrl
ficomps
mov
adcb
andb
push
es
lcall
push
arpl
sbb
mov
mov
sbb
inc
and
pushf
dec
imul
add
inc
jle
loope
shlb
adc
lock
mov
sub
icebp
xor
xor
out
mov
lock
sti
add
push
inc
cmp
mov
inc
pop
add
addr16
push
fwait
or
or
xor
xor
mov
or
rcrb
push
add
and
sub
add
cmpsb
add
mov
or
cs
mov
insl
cmp
hlt
mov
lock
loopne
out
xchg
xor
repz
into
inc
cli
add
or
cwtl
jo
cwtl
inc
shl
cmp
adc
fidivl
dec
out
fwait
shlb
int3
lock
cmpsl
in
adc
call
filds
fisubl
or
or
sub
test
add
sbb
mov
sbb
add
in
sub
gs
xchg
repz
in
andl
add
mov
jbe
inc
inc
and
and
xor
mov
sub
fnsave
xchg
mov
inc
add
fsubr
gs
push
xor
int
or
xchg
push
push
xor
lcall
js
rolb
sub
add
add
adc
test
dec
insl
cwtl
adc
shl
xchg
outsl
mov
or
adc
adcb
addb
lret
mov
dec
imul
pusha
jbe
jle
clc
add
and
xchg
jl
testl
mov
add
movsb
or
in
pop
push
sub
test
mov
xchg
icebp
or
movb
and
pop
in
rcr
hlt
call
shlb
in
sbb
out
or
jp
in
lods
xchg
out
sub
xor
pop
pop
inc
adc
mov
ret
lret
mov
stos
out
dec
pop
sbb
inc
mov
push
mov
xchg
add
xchg
push
ret
nop
push
sub
bound
push
scas
mov
ja
or
add
xchg
stos
adc
pusha
add
pop
repnz
mov
cli
rolb
xchg
fildl
adc
dec
bnd
add
mov
out
adc
add
lods
xchg
aam
pop
xor
mov
or
outsb
adc
lock
dec
xor
fimull
loopne
clc
mov
sbb
or
add
add
mov
xorl
lret
and
add
push
mulb
repz
mov
jmp
pop
adc
dec
divb
pop
mov
adc
inc
inc
inc
aaa
decl
xchg
cli
push
sbb
mov
add
ficoms
pop
fstl
add
jle
pop
sub
push
lock
sarb
repnz
push
add
test
or
mov
push
add
jg
pop
push
add
dec
sub
sti
mov
push
ret
pusha
mov
cmp
nop
add
repz
mov
mov
aad
add
inc
ret
inc
or
pusha
inc
mov
mov
jno
pop
or
xchg
loop
push
mov
and
and
bound
lea
adc
mov
mov
pop
mov
orl
insb
and
cli
push
mov
bound
dec
mov
pop
add
adc
pusha
std
pushl
adc
roll
jo
xchg
adc
mov
std
jg
xchg
aam
fstl
inc
or
mov
push
xchg
fadd
rolb
add
inc
test
nop
into
mov
stos
mov
add
insl
add
fs
push
sbb
mov
mov
cld
cmp
pushf
lret
mov
or
and
cmpb
or
xchg
add
fimull
add
and
xor
loopne
xor
lea
mov
mov
mov
sahf
aad
xchg
sbb
xchg
pop
inc
cmp
mov
mov
mov
and
adc
lcall
shrb
mov
adc
and
insb
shl
mov
xchg
mov
mov
sbb
filds
xchg
mov
sbb
push
adc
notb
mov
add
jbe
push
add
hlt
test
es
ljmp
rolb
pop
and
mov
cmc
jp
jbe
or
dec
shl
push
test
push
add
jle
xchg
push
dec
push
clc
mov
add
add
xor
xor
push
in
pop
pusha
sub
sbb
cmp
rolb
xchg
int
stos
xchg
shll
inc
jge
orb
push
or
jno
mov
add
ljmp
mov
nop
imul
jne
add
fsubrs
push
jb
jecxz
dec
popa
xchg
fdiv
adc
mov
mov
sub
movsb
sbb
jle
movsb
stos
and
mov
xchg
and
dec
inc
push
push
adc
push
push
jle
lock
push
nop
mov
dec
mov
fistpll
jbe
xor
and
pop
adc
xchg
jl
push
adc
adc
adc
outsb
ss
mov
inc
mov
pop
and
imul
shl
or
insl
sub
rcr
jo
add
cmp
mov
xchg
sub
inc
loopne
inc
pushf
add
mov
data16
and
mov
jl
cmp
les
xchg
movsl
lock
jecxz
sub
mov
cmc
cmc
js
addl
pop
fcmovb
bound
push
pusha
pop
mov
or
fnstsw
dec
jne
sbb
and
mov
in
repnz
add
mov
call
and
mov
add
pop
mov
dec
dec
add
sets
sbb
cli
add
jle
movsb
cwtl
jbe
inc
icebp
cmp
fisttps
les
add
add
add
insb
aaa
aad
xchg
repnz
inc
outsl
sbb
add
testb
pushf
sbb
add
pop
xchg
or
sarb
sar
mov
subb
rolb
mov
pop
jb
or
lcall
mov
orb
cmp
sbb
cld
int3
inc
push
sarl
or
test
shll
and
cmpb
push
sbb
imul
fcomps
nop
cli
pop
xor
fimull
lret
xorb
rcr
adc
or
imul
push
mov
test
add
sub
dec
mov
aam
call
aaa
xchg
push
mov
cmp
xchg
adc
sub
mov
stos
shrb
fbld
outsb
inc
insb
adc
xor
adc
add
cwtl
push
or
add
push
and
das
inc
add
pop
inc
and
or
mov
push
sub
sub
xor
outsl
mov
push
addb
cwtl
dec
adc
xor
clc
dec
cltd
imul
inc
mov
test
dec
add
and
xchg
movsb
push
or
sbb
inc
dec
and
inc
inc
jl
sbb
dec
mov
fcoml
sbb
rorl
popf
nop
mov
xor
cmc
and
rcrl
dec
adc
xlat
inc
shlb
test
je
cmp
rclb
jp
add
jle
gs
test
and
inc
dec
push
or
cmp
pop
and
cmp
sarb
push
jl
xorb
mov
out
xor
or
or
push
cmp
pushf
or
shrb
push
orl
shlb
test
push
or
add
xor
or
xor
push
inc
or
xor
add
insl
nop
and
sub
mov
push
cs
inc
shlb
in
lds
mov
jo
sbb
lret
jne
jbe
mov
in
stos
das
and
mov
add
sbb
or
xorl
out
shrb
jle
sub
push
aas
movsl
adc
sub
pop
inc
clc
mov
lods
pop
jle
add
outsb
inc
stos
sbb
rolb
and
cmp
inc
loopne
mov
mov
mov
xor
imulb
shll
mov
outsl
mov
fists
cli
call
nop
mov
insl
bound
pusha
add
inc
adc
lcall
push
mov
andb
cmp
xor
push
mov
xor
jbe
in
out
cli
or
mov
pop
lock
outsl
mov
xchg
push
sbb
fistpl
pusha
or
mov
arpl
or
add
out
or
and
shlb
add
rolb
jnp
push
xchg
or
imul
ss
daa
mov
pop
mov
pushl
sub
test
gs
cmpsb
xchg
lahf
cld
ja
add
and
mov
push
insb
sbb
js
or
add
pop
xor
aam
fwait
ret
repz
and
mov
add
inc
stos
fs
lods
or
and
add
pushf
addl
cmpsb
jno
sbb
stos
ror
repz
mov
adc
outsb
adc
rclb
push
decl
sub
push
out
push
or
or
or
pop
shl
xor
pop
aam
xor
ds
mov
ljmp
xor
add
mov
hlt
fwait
inc
daa
lea
dec
cmp
fisubrs
mov
mov
loop
push
aam
aam
pop
sub
fsubs
push
inc
jp
enter
sub
lods
xchg
in
nop
xor
mov
or
rclb
jp
pusha
mov
sbb
pushaw
mov
ret
mov
loopne
loopne
mov
shrb
pavgw
js
or
jnp
adc
popa
mov
aad
loop
lret
xchg
fimuls
lret
adc
movsl
add
sub
fsubrl
nop
xor
test
je
clc
popf
sbb
andb
les
sbb
and
pop
dec
shlb
aaa
adc
lock
jb
jecxz
push
pusha
add
add
jle
incb
sbb
or
cmpb
sti
clc
loope
addl
inc
mov
fwait
mov
pushf
push
das
push
and
ss
sbb
jmp
adc
jl
xchg
or
les
jg
mov
and
int3
xchg
inc
outsl
push
add
adcl
dec
push
ret
mov
ret
dec
adc
cmpl
and
jb
nop
int
andb
adc
test
add
and
inc
pop
testb
into
out
sbb
rclb
rolb
in
cmp
outsb
sub
jle
sahf
or
xor
orb
push
xchg
mov
fdiv
jg
add
or
loopne
ret
jno
add
in
jb
insl
sub
add
fs
and
insb
cld
add
jne
call
imul
xchg
push
mov
push
outsb
push
rcrb
jnp
imul
loopne
fdivrs
inc
cwtl
or
xor
push
add
push
pop
subb
add
orl
cld
lock
push
sub
shlb
lock
mov
fsubp
cwtl
hlt
mov
push
rcl
incb
dec
xchg
bound
add
jle
insl
cmp
pop
xor
js
pminub
sub
or
mov
inc
ja
clc
addr16
cmp
mov
mov
imul
cmp
or
in
cmp
clc
and
xor
add
jle
add
xchg
sub
and
cli
xchg
or
or
ret
sbbl
rclb
and
fstl
icebp
or
outsl
das
sbb
jo
in
mov
aas
mov
add
mov
or
sub
push
xchg
push
or
xchg
fistl
dec
rolb
or
pop
add
sub
loopne
test
outsb
es
cli
and
pop
gs
mov
divb
sbb
dec
sbbl
push
jg
fistpll
add
in
mov
jb
mov
pop
mov
mov
add
xchg
call
adc
test
cmpsb
out
xchg
je
push
or
rorb
rcrb
cmpsb
es
das
and
dec
mov
cs
test
dec
add
clc
fisubrs
adc
or
je
popa
push
pusha
ljmp
rcr
mov
push
ret
shrb
fsubs
xchg
repnz
fiaddl
and
orb
fimuls
fsubl
or
xchg
lock
in
push
add
loopne
ret
push
loopne
outsl
mov
add
mov
popf
adc
insb
fcoml
or
or
sarl
push
rorb
lret
sahf
adc
incl
or
sbb
popf
pusha
push
jl
test
or
adc
pop
sub
add
outsl
into
mov
push
lcall
test
and
add
mov
test
insb
push
inc
pop
hlt
and
pop
loopne
push
rcll
xchg
push
push
xchg
inc
popa
adc
push
dec
dec
jmp
int3
and
aam
bound
and
sbb
xor
call
mov
and
and
dec
loop
les
push
jnp
imul
sbbl
push
jmp
sbb
rolb
nop
inc
idivb
pop
mov
add
shll
push
or
push
inc
dec
in
push
and
rcrl
ja
push
cltd
roll
xchg
andl
mov
mov
inc
or
popa
arpl
push
xor
and
jg
repnz
insl
mov
insl
sub
inc
jecxz
cmp
cld
push
or
ja
ss
clc
or
in
daa
les
test
inc
push
ja
xor
addr16
cmpl
int3
push
jae
scas
clc
mov
cli
adc
arpl
xchg
pusha
push
imul
add
fdivl
and
xor
push
ss
pop
sub
mov
ret
push
adc
rolb
push
push
inc
es
dec
cmpb
cmp
dec
ljmp
xchg
sbb
inc
cmpsl
mov
dec
out
sti
sub
dec
sbb
rolb
mov
push
stos
inc
aad
push
repz
pop
lock
and
jo
cmpsb
add
loope
xchg
in
stos
cmc
mov
xor
enter
fisttpll
cltd
clc
push
lret
cmc
mov
test
pusha
push
pop
call
test
or
mov
pop
mov
add
aad
lods
add
jle
nop
mov
imul
in
mov
cmpxchg
add
inc
insl
cmp
inc
adc
xor
push
mov
imul
loopne
xor
jle
ljmp
enter
adc
insl
and
stc
lods
std
aaa
cltd
push
jbe
incb
stos
lret
repnz
or
mov
inc
mov
or
repnz
mov
add
shlb
in
pop
gs
adc
adc
xor
and
lock
xchg
stos
inc
lods
ss
sbb
cmpsl
idiv
and
xor
loopne
xchg
ret
sub
add
add
add
and
data16
adc
and
sbb
xor
add
and
and
arpl
adc
xchg
decl
call
outsb
adc
push
daa
bound
vmread
push
xor
shlb
push
jl
in
shl
dec
js
mov
into
repnz
sub
xor
mov
adc
nop
add
pushl
add
push
mov
adc
lret
xchg
mov
and
std
in
out
cmp
add
call
mov
repz
repnz
imul
int
fstpl
jb
mov
shrb
pusha
sbb
add
mov
leave
push
or
sbb
in
or
and
add
push
add
pop
fisubl
sarl
xor
push
and
add
clc
add
rolb
sbb
xchg
stc
cmc
add
push
fstpl
nop
adc
sub
xchg
sub
pusha
stos
out
jbe
sub
push
sub
sub
lcall
loop
inc
dec
outsl
bound
push
push
adc
fsubs
loop
inc
sub
adc
cmp
fbld
out
push
mulb
inc
and
cmp
jp
push
jb
add
jo
je
sbb
adc
fsubs
idiv
xchg
into
jmp
jb
add
mov
or
faddl
insb
sub
jmp
sub
sub
push
add
out
adc
mov
mov
mov
mov
subb
mov
adc
outsl
in
outsl
ret
inc
add
insl
mov
fcmove
sub
insl
xchg
ljmp
int
add
adc
enter
les
movsb
mov
xor
popf
jo
pop
cwtl
orb
add
pusha
sbb
sbb
in
pop
add
ljmp
cld
subb
add
xor
add
add
adc
add
repnz
out
lods
aam
push
sbb
in
push
lret
mov
mov
sbb
push
test
add
pusha
sub
add
or
in
fstpt
aam
xchg
iret
sbb
pusha
inc
lods
push
into
sub
sub
jno
mov
fsubr
or
mov
or
lret
out
cli
inc
aaa
dec
jne
or
clc
ja
push
daa
mov
ljmp
orb
out
andb
mov
int
and
jnp
push
push
loope
push
add
xorb
xlat
subb
loop
push
dec
mov
inc
pushf
subb
lcall
ljmp
mov
push
inc
or
test
cld
add
aam
dec
or
push
in
sarl
xor
push
sub
ljmp
ljmp
faddl
push
mov
fwait
and
xorb
je
push
subb
inc
enter
mov
dec
mov
insb
sbb
das
add
fdivrl
mov
jo
pusha
movsl
mov
insb
or
push
cli
sahf
mov
sub
xor
jg
adc
scas
dec
lcall
mov
push
shrb
shll
mov
bound
add
inc
sub
inc
xchg
hlt
incl
lods
fiadds
push
xchg
or
fistl
cmpsb
addb
adc
mov
add
mov
xchg
xchg
jmp
inc
inc
lret
sbb
mov
and
or
dec
and
repnz
je
in
ret
jo
push
inc
inc
mov
pop
and
pop
or
cmpsb
sbb
mov
aam
out
ret
les
inc
aaa
xchg
mov
sbb
out
rorb
aas
rolb
into
xorb
push
movsb
mov
jmp
inc
add
outsb
push
and
bound
shll
fistpl
fstpt
push
dec
addb
jp
or
sahf
push
jecxz
ret
adc
or
xor
addb
sar
add
or
inc
jle
add
inc
add
sub
loop
arpl
and
jecxz
adc
test
pop
inc
jp
add
out
and
jbe
out
cld
adc
insl
mov
ja
roll
orb
inc
ficoms
cmp
es
lock
xchg
push
push
mov
xor
cmp
inc
pop
test
and
mov
das
and
push
in
shl
cwtl
inc
mov
jecxz
hlt
ljmp
addl
test
inc
and
or
cmp
in
or
and
ljmp
fsubrs
add
aaa
cmp
ds
xchg
shr
das
xchg
adc
adc
repnz
add
call
clc
out
xchg
call
adc
xchg
jmp
out
test
sbb
jb
pushf
test
ja
adc
ljmp
lods
das
push
lock
aas
and
adc
mulb
fdiv
mov
xor
dec
or
dec
or
push
pop
fmuls
outsl
lea
mov
mov
mov
and
ss
pusha
cmp
pop
stos
aas
xor
jne
fidivl
sbb
pop
outsb
sub
ficoms
pop
in
loopne
add
lea
and
or
or
pop
mov
or
inc
sub
xchg
add
dec
loop
rorb
inc
out
push
nop
std
insl
fwait
lcall
fstpl
xchg
out
and
xor
into
fnsave
or
cld
bound
out
pop
add
pop
push
sub
test
push
xchg
mov
pusha
pop
int
mov
and
fisttps
or
in
insl
ss
stc
adc
gs
adc
popf
or
adc
or
mov
push
add
das
add
mov
add
in
data16
mov
and
and
insb
pop
shll
add
test
les
mov
in
cmp
pop
in
mov
add
cltd
adc
mov
cmp
mov
xchg
mov
mov
in
test
sahf
ds
mov
sbbl
adc
cmpsb
mov
inc
sub
flds
add
add
leave
adc
pop
bound
mov
push
jle
cmpsb
add
lds
mov
loop
mov
add
dec
andb
adc
or
insl
ret
or
jg
dec
push
jb
or
loopne
popa
shl
pushl
sub
or
pop
ljmp
dec
mov
mov
out
clc
ljmp
fildl
pop
mov
loope
cmp
pop
dec
jno
out
add
popa
sub
add
ds
adc
mov
add
adc
push
sbb
sbb
imulb
lods
mov
call
imul
pusha
scas
fsubrs
mov
jb
pop
clc
jle
sub
pop
sub
fxtract
js
jns
movsl
jmp
testl
popa
add
mov
mov
add
shlb
push
mov
rorl
scas
imul
adc
and
pop
inc
fldt
sar
mov
inc
pop
push
icebp
add
and
add
jo,pn
push
and
out
sub
outsb
lock
into
das
push
xor
cmp
out
sbb
add
lock
mov
cs
pop
mov
insl
shll
push
imul
push
jp,pn
shrb
jle
jb
mov
sub
push
inc
xchg
sub
pop
test
sbb
add
icebp
push
std
or
add
or
add
sbb
scas
imul
lret
ret
fcmovu
orl
stos
insb
divb
imul
push
add
sbb
jae
sub
xor
pop
xor
icebp
add
adc
divb
hlt
test
inc
mov
sub
jo
stos
es
shl
fidivl
push
sbb
call
test
popa
push
lods
stos
data16
rclb
icebp
add
repz
mov
xorl
fidivl
lahf
loopne
shr
repnz
and
sub
push
jnp
out
or
fisubrl
adc
dec
xor
add
in
xor
sbb
push
jg
std
mov
std
add
je
fidivs
push
cmc
mov
xor
or
sub
add
out
int3
sbb
sbb
mov
jo
dec
pop
jle
push
push
int
jo
shl
insb
xor
mov
fnstenv
int3
lcall
cmp
fwait
sarl
stos
adc
push
mov
add
ljmp
cs
xor
adc
mov
push
dec
ficoms
ss
push
ds
cmp
push
xor
mov
icebp
aad
mov
jmp
stos
mov
daa
dec
mov
xor
in
sarl
stos
inc
outsb
mov
xchg
js
jo
je
loope
jo
notb
jb
pusha
repnz
lds
pushf
ljmp
push
cld
mov
or
jne
fsubrs
fcoml
rolb
mov
aam
add
xor
jno
std
je
add
xor
adc
jo
or
cmp
xor
xor
xchg
popa
mov
add
sbb
jae
fidivl
add
ret
inc
lock
add
in
push
push
xorl
imul
cmc
or
push
es
add
sbb
cmp
push
cmp
jbe
cld
lock
mov
cld
out
sbb
jle
cmp
xchg
rorb
xchg
dec
repz
outsl
jo
arpl
fwait
add
int3
mov
out
sahf
xchg
adcb
jnp
cmpl
mov
lock
push
in
addl
lock
lods
lock
push
neg
test
mov
aam
ss
xchg
cs
stos
sarl
and
inc
jo
stos
jge
pop
lea
jno
or
mov
xchg
jb
push
mov
aad
loop
xchg
fs
stos
js
int
aas
mov
add
loopne
scas
rclb
fs
jg
mov
jb
std
stos
ss
lock
jo
xlat
dec
rclb
and
and
jns
push
push
xchg
sbb
std
lcall
rcrl
adcb
repz
pop
xchg
add
add
mov
insl
adc
js
jl,pn
or
fs
add
add
push
push
pop
test
or
add
inc
ret
imul
sti
orb
insl
pop
or
out
mov
mov
or
inc
cmpsb
jl
dec
shlb
or
bound
rolb
sbb
or
add
stos
xor
add
sbb
add
int
xor
stos
cld
lock
pop
push
push
outsl
addb
in
stos
jnp
pop
stos
imul
stos
outsl
sbb
push
cmpsb
addr16
lahf
xchg
cmpsb
adc
sbb
hlt
add
cmp
dec
sbb
jns
cmpsb
jns
jl
je
cmpsb
jns
cmpsb
insb
pusha
fs
pushf
lcall
mov
jns
mov
jns
cmpsb
lods
mov
cmpsb
jns
rcl
enter
jns
cmpsb
jns
cld
lock
call
in
loopne
sbb
rcr
rcll
push
or
out
cmp
shll
xor
sub
xor
and
je
cmpsb
xor
sahf
push
dec
sbb
cmpsb
imul
cmpsb
imul
sahf
cmpsb
nop
xchg
mov
test
imul
imul
imul
cmpsb
imul
jb
adc
mov
xor
or
or
out
int
xor
cmp
xor
sub
xor
sbb
and
andl
pop
int
add
adcl
adc
pusha
mov
and
add
mov
notb
adcb
orl
imul
add
mov
mov
push
lcall
sbb
leave
shll
imul
dec
mov
sbb
imul
outsl
movsb
loopne
fmuls
fcompl
rcl
add
sbb
xor
int3
rol
cld
lock
in
or
push
in
cmpsl
imul
or
out
add
sub
xor
ret
xor
loop
popa
push
gs
sbb
imul
shrl
js
jo
movsb
dec
rorl
dec
add
add
loopne
xchg
movsb
add
stos
movsl
mov
loope
sub
in
add
dec
shlb
ja
cmpsl
rcrb
lock
loopne
cmpsl
sub
stos
movsl
mov
rorl
mov
and
cmp
repz
stos
mov
mov
and
sbb
mov
inc
jno
subl
jl
cmpsb
jns
mov
lods
mov
xchg
sbb
add
push
add
repz
push
repz
lods
insl
outsb
sub
push
jecxz
out
add
pop
mov
adc
push
adc
stos
or
prefetchnta
shll
xor
or
das
daa
sbb
ret
push
xchg
dec
inc
outsl
adc
hlt
imul
lds
mov
test
mov
andb
cmpsb
xchg
loope
rclb
inc
pop
sub
jmp
inc
call
sbb
mov
push
inc
add
mov
mov
sarl
add
mov
xchg
mov
ret
and
roll
int3
outsl
mov
ss
gs
mov
addb
out
add
add
jbe
push
pop
pop
inc
cli
adc
gs
fidivs
pop
lock
lcall
fadds
in
push
mov
and
jecxz
loopne
xor
fwait
or
add
or
and
or
pop
push
ds
nop
pop
cltd
mov
inc
push
rol
and
or
shlb
testb
cmp
mov
fcoml
out
push
sub
push
add
jmp
inc
add
push
mov
in
sbb
xchg
popa
add
in
add
icebp
add
mov
xlat
mov
rolb
xchg
add
adc
push
jg
add
mov
sbb
mov
aaa
je
sbb
jmp
pusha
and
cmp
roll
out
add
loopne
cld
and
add
or
push
jg
push
or
and
nop
add
mov
fiaddl
dec
mov
push
sbb
xchg
push
or
lret
mov
mov
cmp
fimull
fimull
call
cld
add
divb
dec
ss
add
testb
out
and
call
adcb
sub
jbe
pop
pop
add
roll
scas
lret
xchg
hlt
sbb
or
inc
xchg
add
test
jle
loop
add
dec
sub
push
and
xor
fistps
mov
fcomps
loopne
cmp
andl
das
enter
call
pop
fildll
or
mov
enter
add
mov
or
les
rclb
sti
jg
add
adc
adc
test
popf
adc
out
add
mov
ret
sbb
mov
stos
je
in
mov
icebp
adc
fs
mov
loopne
add
jno
outsb
sub
add
ja
jg
mov
jb
mov
jl
repnz
add
mov
sbb
adc
out
js
or
jg
add
push
sbb
jg
add
push
cwtl
push
add
test
or
push
pop
add
movsb
jle
test
and
cmp
mov
lcall
mov
mov
clc
sub
push
push
sub
sti
outsl
out
clc
fs
add
xchg
sub
repz
push
add
inc
ljmp
mov
loop
push
scas
push
mov
mov
pop
shlb
inc
push
push
loopne
add
push
int3
hlt
add
xor
clc
fdivr
push
sub
add
xchg
fmuls
ret
aam
call
push
loopne
add
or
aam
or
lock
push
nop
sbb
mov
sub
imull
mov
int
jg
or
add
xchg
ss
or
jo
inc
jno
push
lock
loope
adc
flds
pop
mov
add
je
ret
mov
xchg
and
push
stos
and
inc
push
cmp
mov
je
fs
fdivrp
mov
sub
and
and
pop
cld
and
and
xchg
dec
fwait
loope
fs
sbb
sbb
js
adc
and
dec
or
inc
mov
pushl
orb
mov
sub
or
int
fisttpl
imul
rclb
adc
and
inc
and
mov
shrl
inc
xor
mov
push
roll
popf
shll
mov
xchg
call
mov
xchg
mov
mov
aaa
and
rcrb
outsl
sbb
fistl
or
push
add
mov
push
cmp
adc
and
fmuls
dec
insb
enter
int3
pop
add
mov
loopne
pop
sbb
add
push
or
jno
cld
push
bound
in
stos
and
fildl
hlt
push
push
xchg
add
movsb
xor
cmovge
xchg
xor
mov
mov
push
mov
sub
push
movsb
add
loop
repnz
or
loopne
ljmp
stos
add
adc
push
loope
or
adc
jae
xchg
dec
test
sbb
les
adc
les
mov
jbe
lds
es
inc
push
pop
insb
fmull
push
pushf
in
xorb
add
fcomp
push
inc
push
add
adc
outsl
pop
cmc
cmc
mov
add
fwait
repz
stos
xlat
rolb
js
sub
xor
das
mov
cld
test
outsl
push
out
es
add
sbb
adc
loopne
movzwl
mov
or
aaa
pop
jle
xorb
push
push
fiaddl
hlt
fiaddl
sti
pop
nop
and
dec
xchg
in
fimull
loopne
jmp
sub
sti
das
addb
push
pop
inc
dec
inc
sbb
jg
jle
jbe
fadds
lods
inc
xchg
rcr
push
xchg
aam
adc
fimull
fistl
rcr
xchg
les
dec
xchg
clc
push
cld
add
push
cmpsb
stc
fimull
mov
sbb
nop
mov
xchg
call
clc
out
subb
or
inc
aad
es
mov
out
xchg
or
jp
scas
sar
scas
mov
xchg
into
add
add
inc
cmpsb
out
pop
adc
cltd
adc
xorb
xchg
pop
insb
add
push
adc
or
or
mov
mov
add
lcall
or
jmp
pop
int3
fisttpl
lds
xchg
bound
add
push
call
pop
std
sub
pop
in
orb
or
inc
lds
xlat
add
pushl
adc
lock
es
push
push
push
shrb
and
inc
andl
xchg
xor
xchg
mov
sbb
sub
sahf
cli
mov
stc
and
sbbb
xchg
call
inc
sbb
cmp
or
adc
or
mov
fistpl
xchg
std
sbbb
lock
mov
inc
add
out
lcall
mov
mov
fisttps
mov
ret
punpcklbw
les
jmp
incl
jo
adc
daa
adc
ja
lods
mov
in
and
jecxz
sbb
jg
incl
and
dec
daa
ljmp
add
daa
outsl
mov
lcall
inc
sbb
and
mov
mov
or
subl
and
aam
or
ret
fisttps
int
push
fldl
lds
out
sbb
aas
fs
dec
popa
fbld
mov
add
push
inc
faddl
testb
xorb
dec
dec
and
inc
adc
cs
inc
add
adc
sub
std
or
mov
inc
add
adc
mov
pushf
or
add
mov
int3
jg
lods
mov
sbb
outsb
call
adc
pusha
loope
add
adc
push
into
pusha
in
fisttpl
add
adc
jb
push
bound
out
pop
or
jg
sub
cmp
fwait
div
cs
movsb
ret
outsb
repz
clc
push
pop
xor
cmpsb
imul
int3
push
jb
insb
pop
inc
repnz
mov
aad
push
jmp
or
pusha
adc
xchg
pusha
and
push
dec
xor
inc
push
ljmp
push
lods
adc
outsb
xlat
outsb
fsubrs
add
sub
loope
push
das
jg
or
sub
popa
add
aam
dec
loope
adc
test
jo
dec
int
push
bound
sahf
dec
test
addb
mov
mov
mov
or
adcb
loopne
mov
xor
inc
out
cmpsl
sbb
inc
cmc
and
mov
popa
lods
pop
stos
pop
dec
lcall
fsubrp
xor
dec
fdivs
push
add
mov
and
mov
lock
inc
pop
sub
inc
int3
aam
loopne
fidivrs
fidivs
pop
sbb
mov
lret
sub
xor
xchg
clc
push
out
test
cmc
and
or
pop
ljmp
or
out
mov
es
rclb
clc
scas
mov
cld
adc
js
loopne
push
rsqrtps
addb
sub
xor
push
sub
cli
push
mov
mov
test
decb
sub
pusha
add
add
movsb
mov
mov
adc
adc
outsl
mov
int3
sbb
filds
lcall
push
sub
sar
lahf
push
jb
jo
icebp
and
inc
mov
ja
addb
data16
push
out
es
cmp
scas
xor
and
sub
and
add
push
xchg
push
jle
xchg
xchg
cli
dec
cmc
add
pop
ss
dec
cld
andl
cs
lret
pusha
insl
ss
lock
rolb
jle
movsb
out
sub
dec
sbb
scas
mov
jmp
ret
xchg
mov
cmp
clc
outsl
cwtl
ds
sti
mov
in
jne
pop
lods
jb
push
popa
mov
mov
xor
punpcklwd
mov
jno
mov
push
js
jne
and
mov
test
daa
ret
cmp
and
and
daa
xor
xchg
mull
sti
jge
pop
jbe
lcall
test
out
lock
jl
sbb
subb
cmp
and
add
mov
adc
jle
cld
pop
add
pop
fcmovnb
lret
or
and
push
add
sub
sub
push
jl,pt
push
nop
imul
adc
add
sub
ret
cmp
push
adc
push
ret
jl
cmpsb
loopne
mul
jmp
loope
ret
sub
dec
push
shlb
pop
daa
pusha
pop
pushaw
popa
xchg
fwait
and
fiaddl
pop
data16
push
xchg
ret
mov
push
sbb
daa
stos
jno
rclb
test
sub
test
push
sub
mov
jg
mov
pop
loop
xchg
mov
add
orl
fwait
scas
ljmp
xchg
xchg
orl
insl
sti
inc
adc
push
loop
inc
adcl
sti
jecxz
xchg
xchg
xchg
push
mov
or
xchg
sbb
xchg
mov
or
out
sahf
xchg
xchg
cmp
mov
sub
add
pop
rolb
jo
stos
xchg
pop
mov
in
mov
enter
xor
mov
mov
pop
pop
ret
push
xchg
je
xorb
test
xchg
pop
test
mov
lret
addr16
sub
cmpsl
mov
mov
pop
icebp
fbld
jbe
xchg
jecxz
adc
xorl
jb
test
in
mov
shlb
add
in
mov
push
bound
add
mov
cld
add
roll
or
arpl
add
fwait
inc
sub
ss
jg
sbbb
adc
cmpsl
insb
mov
movsl
mov
mov
or
subl
cmp
cwtl
and
or
push
sub
dec
adc
mov
lahf
fs
clc
fildll
stos
xor
xor
mov
jg
or
inc
mov
andl
mov
pop
adc
sbb
jo
or
add
add
add
pop
or
push
fsubrl
xor
add
or
jle
sbb
arpl
nop
wbinvd
pop
nop
pop
cmp
or
pop
mov
mov
jns
adc
push
mov
lret
xor
push
pop
iret
mov
xchg
shrb
mov
dec
push
adc
pop
loopne
ss
xchg
pusha
pop
subl
or
mov
mov
mov
xchg
xor
mov
xchg
sbbb
inc
cld
aaa
dec
xor
adc
sbbl
add
jne
cmpsb
xor
lea
add
add
mov
data16
push
sub
cs
test
dec
adc
int3
test
sub
pop
lock
mov
push
js
add
xor
mov
adc
in
xchg
mov
add
add
loop
ds
add
mov
cmp
pop
test
in
sbb
aam
add
mov
mov
mov
jg
es
mov
test
dec
jle
mulb
or
adcb
xorb
orl
add
xor
and
cmp
mov
and
xchg
addl
fimull
jo
or
xchg
orl
movsl
enter
lods
mov
mov
sahf
and
mov
stos
nop
lock
stos
hlt
xchg
mov
or
mov
push
lock
mov
dec
test
cmpb
test
add
sbbb
push
mov
sbb
mov
addb
push
cmc
inc
jge
mov
mov
addl
testb
xorb
mov
out
les
mov
sbb
outsb
xchg
lahf
rcrb
mov
cmp
pop
shrl
or
mov
mov
adc
or
adc
inc
mov
icebp
incl
add
ret
rcll
adc
cmp
add
pop
sbb
jb
mov
test
cwtl
mov
popf
push
popf
outsb
sahf
mov
and
adc
xor
loop
mov
push
je
movsb
jo
incl
xorl
scas
inc
movsb
scas
inc
inc
xchg
inc
cmp
dec
cmc
add
inc
sub
inc
xchg
inc
lods
inc
or
dec
xchg
mov
insb
aad
insl
xchg
data16
movsb
movsb
mov
or
push
decl
lret
push
enter
addl
add
adc
mov
loopne
and
push
and
mov
rcl
loop
add
mov
rclb
shrb
mov
mov
add
jbe
jbe
sahf
popl
orb
xchg
bound
or
cmp
out
xchg
cs
das
clc
mov
mov
cwtl
sbbl
sbb
mov
add
xchg
pusha
jg
add
fcomip
ja
xor
inc
and
sub
and
loop
or
ss
mov
mov
and
out
jp
fistl
ret
outsb
and
dec
ret
dec
and
push
dec
in
and
mov
stos
imul
add
add
ja
inc
push
test
imul
xchg
test
add
call
push
mov
and
sbb
add
fldenv
cmp
xorb
stos
xchg
inc
push
cs
inc
dec
out
push
add
xor
aas
sbb
or
inc
pop
sbb
les
and
pop
xchg
dec
popa
or
add
aaa
addl
add
or
and
bound
loopne
shlb
and
and
cmpb
loope
push
mov
lcall
adc
add
and
inc
mov
or
xchg
mov
js
shll
fs
js
push
add
push
imul
hlt
dec
mov
stos
xchg
adcl
jecxz
stos
inc
cmpsl
andl
and
sbb
cmpsl
aaa
or
mov
test
mov
testb
test
and
insb
inc
sti
xorb
mov
lods
fidivl
stos
pop
enter
shl
mov
lcall
jb
adc
xor
in
loop
ret
andl
orb
adc
add
add
mov
push
push
jbe
push
lcall
lcall
sub
popa
insb
clc
pop
add
inc
adc
add
or
out
arpl
dec
pop
push
lcall
and
jg
movsl
xchg
fstpt
and
inc
push
clc
popf
test
mov
out
pop
loopne
rclb
ret
and
sub
fs
aad
jg
lods
jmp
cmpsl
rolb
xchg
incl
or
and
insb
loope
call
clc
das
clc
add
out
notb
xchg
jb
or
scas
icebp
push
adcb
sbb
dec
sbb
or
jp
loopne
add
jb
rcll
adc
mov
popl
sub
xchg
or
stos
test
xchg
andb
std
dec
hlt
xor
mov
push
xchg
add
xchg
in
pushl
mov
jno
mov
pop
sar
jbe
test
dec
int
push
rclb
jp
bound
lock
filds
in
jnp
ja
xor
xchg
rolb
jb
arpl
and
hlt
incl
lock
movsl
add
icebp
push
mov
fsubp
sub
mov
jmp
mov
xchg
add
sbb
jb
call
int3
loopne
add
xchg
dec
and
test
xchg
mov
adc
mov
add
je
add
lcall
push
outsb
lods
xor
out
dec
cmp
mov
adcb
mov
push
into
mov
add
out
push
lods
lods
lock
sbb
xor
mov
or
dec
shll
cs
add
das
mov
add
sti
jno
add
mov
jno
xor
push
pop
push
pop
lret
push
dec
mov
and
roll
jle
pop
stos
dec
scas
pop
dec
popa
push
in
sub
mov
mov
mov
add
in
xchg
js
mov
xchg
lea
xchg
add
add
push
jge
mov
std
decl
mov
add
and
or
jns
pop
or
ret
and
sub
adc
and
ja
fmull
mov
adc
or
inc
fcoms
mov
add
or
jl
ljmp
push
mov
lods
push
repnz
inc
in
or
ljmp
stos
stos
add
pop
into
in
test
or
or
repnz
test
dec
push
or
sbb
adc
icebp
add
mov
sub
icebp
fists
xor
mov
sub
push
test
cmp
stos
cmp
sub
push
loopne
add
cli
lcall
aam
adc
ja
cli
in
xchg
orl
aad
adc
clc
xchg
scas
test
and
loope,pn
lock
pushl
lret
repnz
push
adc
or
mov
push
or
pop
cld
dec
xor
cli
add
xchg
adc
pop
add
push
add
mov
fdivrp
ja
jg
popf
and
adc
out
or
repz
and
mov
xor
in
xlat
push
or
shll
decl
out
add
push
outsb
mov
ljmp
pop
test
and
adc
jns
lea
clc
xchg
add
scas
fbld
sub
nop
repnz
adcb
push
adc
sbb
jo
xchg
cs
inc
xchg
test
lahf
xor
out
and
xchg
mov
out
push
test
push
jl
xor
sbb
jp
fwait
xor
fists
nop
jecxz
add
aas
add
adc
ret
add
inc
and
sbb
aam
scas
or
add
test
xchg
jo
add
xor
sub
jbe
xchg
shll
pop
inc
add
add
rcr
adc
xchg
pop
std
mov
pop
roll
addr16
icebp
or
xchg
mov
lock
mov
stos
cltd
adc
push
std
scas
fsubp
out
mov
jge
mov
mov
sti
mov
add
jae
enter
lahf
bound
mov
dec
push
xor
add
fidivl
arpl
adcl
mov
xchg
push
sbbl
push
push
in
push
fwait
xor
mov
movsb
int3
mov
int3
rolb
and
test
jno
push
push
and
das
aad
std
mov
cli
pop
and
nop
or
mov
and
jne
jb
lcall
repnz
pop
ficompl
mov
stc
lcall
fs
fs
add
mov
lea
dec
mov
addl
mov
xchg
xchg
ljmp
push
xor
shlb
add
mov
sub
xor
or
jbe
push
mov
and
fists
aad
dec
add
push
adc
add
lods
xchg
add
xchg
add
push
mov
add
jle
and
adc
xor
pop
aam
xchg
movb
mov
dec
and
fcomps
lea
pop
cmp
mov
btr
popf
orb
mov
or
movl
push
pusha
dec
cmp
push
adc
fiadds
inc
fidivs
repnz
pushf
adcb
push
movsb
test
xchg
mov
sbb
idivb
cmp
cmpsl
lcall
mov
cwtl
lock
mov
fmull
add
sar
pop
mov
xchg
subb
mov
clc
cmp
stos
subb
dec
subb
das
push
cs
stos
push
inc
shll
sbb
add
mov
loopne
dec
or
fbld
and
push
nop
or
fmuls
mov
sahf
fcmovb
fists
shlb
enter
add
clc
add
adc
test
imul
inc
stos
inc
or
stos
mov
mov
clc
enter
sbb
push
inc
fdivr
and
add
sbb
push
ret
or
sbb
cwtl
scas
mov
xchg
xor
dec
je
js
call
push
ret
flds
scas
movb
xor
pusha
les
loop
add
inc
xor
or
dec
pushf
inc
pop
xchg
add
fcoml
fsubrl
inc
xchg
lds
adc
fmuls
sbb
rolb
inc
xchg
sub
push
les
test
inc
add
pusha
adc
adcb
jmp
clc
dec
pop
mov
push
loop
mov
inc
or
sub
pop
xor
shrl
into
adc
cs
inc
loopne
out
add
jb
imul
ret
pop
push
mov
jbe
ljmp
fnstsw
js
lds
or
or
aad
sbb
xchg
mov
sub
lcall
addl
inc
add
xor
insb
or
pop
enter
lods
shr
stos
ljmp
shll
fildll
rolb
mov
loope
scas
data16
pop
call
popa
add
push
sbb
mov
sub
das
js
lock
mov
data16
mov
add
lahf
xchg
jl
lahf
mov
js
sub
aad
pop
cmpsb
mov
xor
icebp
out
jo
mov
clc
scas
test
fmuls
adc
or
ret
cmp
mov
add
jl
cmp
sahf
test
mov
aaa
cmp
loopne
andb
fisttps
or
movsl
mov
mov
test
mov
xchg
xor
xchg
subl
pop
xchg
ret
and
mov
jg
or
into
and
mov
push
push
mov
xchg
add
inc
subl
mov
jge
add
or
push
les
xchg
push
sbbb
and
loope
loopne
clc
sahf
inc
vmwrite
data16
mov
dec
fwait
sub
bound
movsl
sbbb
sbb
pop
push
mov
adc
push
mov
lcall
inc
and
and
dec
mov
pusha
add
lea
mov
cmpsb
jg
scas
mov
out
xchg
cmpsl
add
jb
or
sub
std
dec
fidivl
les
inc
arpl
outsl
mov
and
add
and
jmp
mov
psrld
insl
aad
sbb
scas
test
mov
test
test
loop
or
add
popa
mov
and
je
jo
jb
outsl
clc
in
mov
sbb
or
pusha
es
ja
loop
or
test
xchg
andl
punpckldq
mov
xchg
jp
mov
pusha
sbb
mov
push
cmp
cmpsb
or
loope
mov
jecxz
pop
mov
loop
xchg
add
xchg
loop
push
mov
addb
add
sbb
sub
test
sarb
je
or
and
loop
xchg
and
loopne
lret
xchg
dec
movsl
xchg
or
xor
shlb
add
mov
adcb
fs
inc
outsb
loop
adc
add
add
push
push
adc
mov
aad
js
cmpb
and
pop
add
jg
test
cmpsb
pop
push
or
pop
pushf
ss
incl
push
adc
addl
roll
mov
insl
lods
in
das
sbb
fsubs
js
aad
jae
decb
out
cmpsl
cltd
add
out
test
ljmp
mov
mov
jp
or
ret
mov
or
lock
or
incl
push
add
sub
and
test
push
js
xchg
int
pop
std
pop
and
jnp
cmpsb
ss
push
xor
outsl
pop
jno
jo
jae
call
mov
pop
ret
addr16
cmp
imul
xor
fists
stc
sahf
mov
push
data16
mov
pop
arpl
jmp
fildll
xchg
push
lcall
pop
jnp
or
cmp
movsl
inc
out
add
leave
bound
mov
fistpll
testb
inc
xor
lods
pushf
jae
mov
ja
inc
dec
outsl
xor
incl
add
xor
xchg
addr16
nop
das
scas
stos
ljmp
jne
fst
pop
push
or
mov
inc
add
je
jg
sbb
es
push
add
insl
ds
add
decl
add
mov
stos
das
jge
insb
in
mov
and
xchg
rcll
add
aaa
std
outsl
add
add
or
inc
sahf
add
fnstcw
mov
hlt
push
adc
and
adc
mov
jg
icebp
push
aaa
pop
fnstenv
jmp
std
mov
fldenv
jg
add
pop
shll
fildl
pop
movsb
pushf
add
jb
add
jg
fldenv
sub
sub
fxch
stos
add
jb
out
das
jg
test
fcmovu
xchg
mov
jl
fnstcw
addl
fbld
add
ret
add
pop
cli
xlat
xchg
flds
mov
lcall
or
imul
add
sbb
xchg
adc
filds
or
out
fstps
subl
lcallw
fadds
cmp
mov
sbb
fdivr
pushf
test
and
aaa
fisubs
pop
orb
pusha
xor
cmp
out
std
push
add
add
push
ljmp
jmp
xchg
sarl
xchg
cli
xor
adc
or
popa
add
mov
cld
cmp
fs
inc
add
add
push
testl
push
test
push
add
shlb
call
test
ret
imul
pop
pop
sub
clc
js
outsb
mov
mov
test
sub
pop
fildl
fwait
mull
sub
sbbb
ds
ret
sub
cld
pop
les
dec
pop
pushf
arpl
and
test
or
push
or
add
fistps
push
or
cwtl
ret
lods
pop
insb
xchg
sti
or
push
sbb
mov
sub
jge
mov
js
jp
jge
mov
or
add
xor
jp
add
cltd
lods
push
adc
fnstsw
push
jmp
pop
mov
mov
pop
sbb
int
imul
fisttpll
es
fldt
push
loope
jl
mov
faddl
push
xor
or
mov
or
cmp
or
xchg
sub
jmp
push
inc
call
pop
cmpsb
or
jle
or
scas
and
enter
incb
add
mov
ret
sbb
mov
pop
lcall
push
add
add
mov
rcr
sub
push
testb
mov
cmp
push
push
shll
ss
cs
ljmp
dec
push
sbb
add
push
out
test
loop
cmpl
pop
rcrl
jbe
add
bound
data16
adcb
or
xchg
mov
jg
sub
repnz
cli
faddp
fmulp
int
or
adc
fisubs
mov
ficoms
cld
fisubs
push
jb
fiadds
dec
ficoms
fisubs
fisubrs
es
sub
fistl
clc
fsubr
add
fadd
fcom
fcomp
adc
jg
fdivs
mov
xchg
fcomps
jb
jp
push
cltd
inc
inc
dec
push
fcomps
and
sub
hlt
outsl
out
fdivrs
add
or
adc
sbb
fldl2e
fptan
fsqrt
add
pop
aam
mov
mov
aam
fnstenv
int
pop
push
push
mov
inc
push
out
push
and
sub
xor
fnop
or
adc
adc
add
adc
mov
loop
ljmp
lret
int
mov
adc
mov
xchg
lcall
push
jb
jp
dec
push
pop
and
sub
xor
cmp
or
adc
sbb
xlat
ljmp
xlat
repz
jg
lret
xlat
xlat
mov
xlat
xlat
adc
xlat
xchg
xlat
jg
aaa
jg
xlat
push
jb
xlat
inc
xlat
dec
xlat
push
xlat
xlat
and
sub
xor
xor
aaa
xlat
add
or
adc
xlat
loop
ljmp
push
add
aam
aam
aam
aam
aam
aam
out
aam
aam
aam
aam
aam
aam
aam
inc
aam
out
out
push
aam
and
sub
xor
aam
aam
aam
aam
out
aam
aad
aad
aad
ret
aad
aad
mov
aad
push
push
test
int
mov
mov
and
sub
xor
aad
aad
aad
aad
adc
loop
ljmp
mov
adc
push
xchg
rorb
rcrb
rolb
dec
rclb
shlb
sarb
add
add
fldt
sub
mov
ret
rcl
rcrl
mov
rcl
adc
jo
sub
add
add
mov
cmpsb
xor
shll
rorl
cld
add
or
adc
shl
shr
shl
rcl
ret
mov
rorb
push
inc
or
and
pusha
xor
mov
mov
cmp
loopne
pop
push
pusha
cmp
aaa
add
adc
xor
xor
cmpsl
adc
mov
lock
imul
pusha
jne
jns
fwait
ret
aaa
add
fists
adc
fcmovu
xchg
scas
fstpt
fwait
inc
incl
xchg
push
fsubs
mov
mov
add
popa
inc
xchg
add
inc
in
stc
aad
cmpsb
mov
fwait
mov
jns
push
and
loope
push
js
add
add
and
xlat
aad
sahf
aad
aad
sub
jmp
add
psrld
lods
shll
dec
orb
mov
dec
jg
inc
roll
add
roll
daa
shrl
and
rorl
pop
ficoml
ss
or
xlat
cmpsb
mov
mov
shlb
shrb
movsb
fists
xor
cmp
cmp
fimull
cmp
adc
sbb
rcl
push
add
test
roll
filds
filds
movsl
fildll
adc
add
push
fwait
pop
add
sub
pusha
fisttpll
icebp
aaa
jg
fstl
add
push
fcmovb
fcmove
fcmovu
inc
jle
jns
push
jo
sub
fisubl
adc
in
call
cmpsb
imul
add
fldt
jbe
sbb
fildl
dec
loopne
adc
fsubr
fadds
push
mov
adc
fwait
ret
outsb
fadds
jg
decb
xor
lds
das
aam
aad
aad
dec
rorl
mov
dec
add
or
call
dec
shlb
loopne
imul
fiadds
in
and
arpl
push
push
jbe
fildll
pop
fwait
ret
je
aam
jo
ja
jns
pop
lock
inc
faddl
fsubr
fstp
jbe
fnsave
cs
fisubrl
cmpb
pop
fidivl
js
mov
pop
jg
addl
add
fisubrs
mov
fcomps
mov
sub
xor
or
adc
jbe
flds
sub
call
mov
xlat
mov
sahf
xlat
imul
imul
lods
dec
inc
icebp
aad
aad
cld
xchg
mov
cmp
roll
or
fisttps
repnz
clc
or
sbb
fldl
xor
ficompl
stc
fcmovne
fcmovnbe
fcmovnbe
jp
loop
mov
pusha
or
inc
and
aas
in
sbbb
pop
mov
call
mov
mov
pushf
rcll
shr
loopne
add
sbb
cld
ffreep
fbstp
jp
dec
filds
add
fld
xor
rcr
stos
cmc
incl
mov
adc
loopne
mov
mov
inc
inc
das
adc
imul
xlat
cmp
jne
or
xlat
sbb
jo
adc
sbb
mov
icebp
dec
call
pop
adc
add
sar
add
je
mov
cwtl
rorb
inc
aas
rcrb
shr
shr
adc
call
fs
dec
std
push
add
push
shl
fisubrs
pop
fidivrs
add
pop
in
ret
add
xor
ds
fdivr
stos
mov
jns
push
fisttpll
es
jmp
add
mov
fisubrl
push
adc
fdivr
imul
out
jp
push
xor
push
xor
push
add
or
lret
data16
jg
mov
xlat
or
or
xlat
cmp
test
mov
jns
and
pop
aad
adc
inc
shlb
pop
or
ja
jo
pop
rorl
shrl
test
fwait
mov
sbb
in
out
shr
lock
rol
ror
adc
aaa
jg
shll
rcll
inc
rorl
dec
rcll
jg
call
or
and
xor
rcr
stos
add
fcmovu
fisubrl
mov
nop
fisubrl
and
loop
cld
pop
icebp
fucomi
fldt
fcoms
xor
add
mov
adc
xlat
pop
xlat
mov
incl
pop
aam
aad
add
je
and
mov
dec
add
push
nop
dec
and
sub
pop
shl
sarl
add
rorb
ror
rolb
shlb
push
jo
rcrb
cmp
mov
or
rol
shll
roll
sbb
hlt
push
lcall
adc
fmulp
insb
fdivrl
pop
fcmovnu
cld
or
fdiv
ret
fst
fldl
cmc
fcmovu
clc
inc
call
inc
adc
push
scas
fldcw
sbb
test
lock
movsb
inc
insl
ja
jmp
stos
sub
inc
aam
nop
xchg
xor
adc
out
add
xchg
shlb
pop
sarl
roll
xorl
faddl
cld
das
inc
mov
frstor
add
mov
push
xchg
mov
dec
xlat
fcom
or
rcl
xor
and
xchg
cmp
mov
ljmp
push
lds
inc
rcl
into
lret
cld
js
jg
fmull
fmul
fisttpll
fst
ficompl
fstpt
inc
lock
outsl
pop
ds
addb
fsts
cmp
insb
pop
ljmp
in
mov
adc
xchg
rcll
rcrl
shll
add
pushl
jge
jns
inc
rorl
inc
nop
dec
dec
rclb
push
rcrl
sbbb
shll
shrl
cld
das
clc
shll
sarl
add
rcll
sar
lcall
shl
shl
rorb
dec
icebp
sar
jo
and
rol
ror
nop
push
aad
stc
fildl
shlb
shrb
fwait
mov
mov
rorb
popf
rclb
shlb
and
movsl
sbb
fnsave
shr
push
jmp
std
adc
rol
rol
fbld
ror
leave
rcl
roll
fstl
mov
lods
int
cld
sbb
shll
test
adc
rcll
cltd
shll
shrl
jg
aaa
jg
shll
jge
jns
roll
push
clc
push
shll
mov
push
fcoml
test
lock
mov
jl
add
adc
fwait
mov
pop
jo
loop
int3
jle
or
sbb
lods
mov
mov
gs
int3
aas
xlat
pop
xlat
cmc
aam
and
out
adc
mov
xlat
or
xchg
aad
aad
aad
adc
pushl
inc
sbb
mov
jns
ret
rcll
pop
add
sarl
add
sub
rcrl
mov
call
or
xor
mov
xor
adc
add
fstpl
sbb
repnz
fidivl
add
fimull
push
xor
fildl
jg
mov
popa
fldt
xor
dec
pop
fcomi
fmul
fmul
xor
nop
insl
lcall
sbb
pop
add
adc
xlat
fstps
clc
push
xchg
sbb
loopne
push
rcl
mov
incl
xlat
mov
mov
add
shlb
test
rcrb
out
loop
in
lock
or
pusha
nop
or
sbb
sbb
shr
decl
rorb
js
addb
rcrl
cmp
ficomps
lock
ret
fbstp
fists
adc
insb
je
dec
filds
jg
fists
fistps
fnstsw
faddl
in
fdiv
fdiv
fdivr
fmull
rcr
xchg
imul
aam
sub
clc
xchg
push
clc
fldl
cld
or
mov
sub
loope
mov
jmp
adc
fcomp
fcomp
fdivrs
sbb
jno
in
mov
out
sbb
leave
nop
jp
mov
pop
xor
push
jle
call
jns
and
and
mov
push
vandnpd
std
enter
aad
in
aad
scas
push
rcrl
mov
shrb
js
inc
shrb
jo
inc
jle
shr
jo
pop
push
jo
pop
pop
out
push
lds
fsubl
jo
and
cs
cmp
pop
fucom
lret
std
fildll
ficoml
inc
fimull
pusha
sub
add
shll
push
cmpsb
fildl
push
imul
add
pop
adc
fdivrs
fldenv
add
mov
jb
loope
icebp
xlat
clc
sub
movsl
leave
xlat
mov
lods
mov
mov
xchg
sub
mov
ret
pop
xchg
cmp
call
add
adc
sbb
loopne
ljmp
aad
mov
aam
fs
sub
cmp
xor
out
js
test
aad
aad
mov
add
std
rol
shrb
rcl
push
jne
fwait
jbe
rcrb
jp
ljmp
fcoms
mov
sahf
rolb
lock
xchg
sub
shr
fisubs
ficoms
adc
faddl
loopne
adc
pop
fnstsw
cmp
add
mov
mov
insb
or
push
mov
fisttps
ror
mov
pop
shl
shrl
mov
nop
lock
movsb
xchg
cmpb
outsl
jo
fimuls
fmulp
nop
xchg
data16
add
jo
adc
arpl
mov
and
aam
jg
jo
add
mov
nop
sbb
jo
sbb
ja
mov
fwait
scas
push
jo
xchg
ret
xor
or
nop
mov
mov
mov
call
ror
shlb
cs
lock
pusha
jg
jecxz
fistps
jbe
push
dec
mov
add
sbb
dec
sahf
out
decl
cmp
sub
out
in
xlat
decl
rcrb
xlat
cmp
mov
aam
push
aam
aam
nop
jle
repnz
mov
cmp
bnd
jo
mov
adc
rcr
int
jo
fists
xor
sub
cmp
rcr
add
xchg
fcompl
fwait
jg
faddl
add
sub
inc
add
dec
xor
neg
out
ficoml
ret
ljmp
push
adc
xor
cld
clc
rclb
fstpt
nop
fldt
jle
mov
mov
fisttpl
rcl
mov
das
addb
sbb
fdivrs
pop
jno
testb
sub
or
into
in
jo
int3
fnstenv
nop
pop
cmc
and
xor
jbe
xchg
mov
rcrl
rcl
fcmovnbe
movsl
scas
nop
insb
xchg
mov
cltd
and
jo
jg
add
ret
inc
nop
test
adc
aam
aam
aam
aaa
loop
sbb
pop
sti
aad
aad
xchg
cltd
pushl
push
jo
rcl
push
addl
rorl
insb
nop
pop
push
add
hlt
call
cmp
out
add
jo
sbbb
sbb
imul
shll
rorl
rcr
pop
cmpsb
dec
jg
dec
add
sbb
in
fbld
mov
outsb
filds
fistpll
mov
lock
adc
fsubl
insl
faddl
pop
fsubl
fdivl
fcompl
loope
sti
fstp
push
test
aas
outsb
dec
aas
rcr
faddl
fcmovu
test
adc
inc
int
pop
xor
and
pminub
fistpl
ja
mov
popf
jb
jge
inc
adc
push
fistpl
cmp
repz
inc
enter
in
divb
push
jmp
test
mov
fldcw
pop
scas
sub
add
xlat
add
sbb
xlat
pop
xlat
adc
xlat
dec
xor
xlat
push
loop
mov
adc
sbb
out
repz
add
std
aam
adc
aam
aam
aam
mov
aaa
jg
aam
aam
aam
jb
inc
aam
pop
adc
aam
std
inc
jg
aam
aam
adc
sbb
subb
jp
jne
adc
inc
aad
mov
aas
aad
cmp
add
shlb
adc
rclb
outsl
rolb
je
xchg
mov
sar
insb
iret
sarl
push
fcoml
nop
rcrl
roll
rorb
icebp
lods
push
adc
mov
rol
ficomps
adc
adc
or
sub
adc
daa
and
push
or
or
lock
sub
not
jb
inc
adc
sarl
shl
fsubrp
cmp
enter
call
je
jle
push
adc
int3
adc
ficoms
cmpsb
aad
jg
inc
push
xchg
fistpll
repz
cmpb
repz
cld
fdivrl
xor
std
cmp
fisubl
arpl
je
pop
stc
sub
inc
bound
fisttpl
sub
fdiv
fmul
fcom
fisubl
jne
cmp
cmp
adc
cmp
sbb
push
ret
test
adc
cmp
push
inc
inc
adc
or
hlt
xor
adc
pop
xlat
aaa
rorb
xlat
in
aam
lods
scas
shlb
outsl
mov
push
fnstcw
aad
aad
lock
push
adc
mov
jb
mov
rcr
lock
sti
test
adc
mov
sub
sbb
decl
sbb
mov
fcompl
fimull
cltd
rolb
enter
fadds
mov
bound
mov
shlb
call
adc
sub
xor
add
sbb
and
xlat
mov
add
call
jne
jg
xlat
add
inc
jbe
aad
aad
pop
inc
outsl
clc
or
dec
fsubrl
add
fcomip
ficompl
fisubrl
fcmovne
into
flds
xchg
pop
ss
scas
adc
mov
mov
pop
mov
movsl
jle
in
pop
cld
in
jp
and
shlb
rcll
push
cld
in
and
and
das
adc
shll
shll
sarl
mov
roll
roll
rorl
or
pop
shrl
sbb
ja
inc
js
sarb
and
sar
addb
hlt
lret
mov
xlat
pop
fists
fcmovnbe
cmpsl
shlb
ljmp
mov
mov
mov
add
mov
xchg
cmp
sti
lahf
rcrb
shrb
imul
jae
jg
jnp
inc
rolb
inc
rolb
cld
test
push
shlb
rcll
es
in
jle
or
rorb
adc
jae
out
js
sub
inc
jnp
xor
fnsave
push
icebp
pushl
sub
or
adc
pop
fcmovb
fimull
rcr
fldl
mov
mov
fisubrl
ja
inc
adc
push
ficompl
daa
fiaddl
adc
inc
in
repz
loope
push
ret
fcmovne
fcmovnbe
fcmovnu
adc
fildl
fistl
fdivr
fdivs
or
fmuls
and
mov
cmp
and
xor
rol
icebp
xor
inc
xor
xlat
rcl
inc
loopne
incl
aad
ror
pusha
arpl
adc
jecxz
and
outsl
mov
daa
xchg
or
push
loopne
and
nop
jle
daa
scas
in
test
sub
scas
in
loopne
das
clc
mov
or
fcomip
and
rcr
filds
filds
xchg
mov
inc
fildll
fists
ffreep
aam
fsubl
mov
adc
fsubl
adc
jmp
sbb
fcmovu
fidivl
and
fucompp
fcomi
pusha
sbb
nop
cmpsl
add
push
fndisi(8087
fadd
fcoms
fsubs
fsubr
je
cmc
inc
mov
xchg
fnstenv
cli
push
int
ficomps
push
add
ret
push
js
and
push
aam
aad
aad
movsb
pop
icebp
fildll
daa
aad
rol
rorl
loope
ljmp
shlb
dec
adc
fildll
fdiv
call
clc
loopne
test
dec
loopne
jmp
and
loopne
mov
movsb
fadds
loopne
fsubrs
jp
cltd
inc
scas
loope
cli
or
push
stos
rorb
push
jg
mov
pop
ljmp
add
rclb
and
adc
shrb
shlb
rcrb
out
shr
shl
sar
outsl
xor
es
add
xchg
pusha
dec
cmc
fwait
icebp
lcall
test
adc
jae
mov
xchg
add
cmpsl
inc
fidivs
mov
outsb
mov
inc
add
and
xor
hlt
inc
fsubrl
inc
or
fmull
js
in
fldl
mov
xor
hlt
mov
inc
cmc
add
fcmovb
hlt
mov
ficoml
popa
fidivrl
jp
inc
mov
xor
mov
cmp
pop
mov
mov
sbb
clc
fstpt
adc
adc
adc
mov
ret
fadd
fsubrs
fmuls
fcomps
testl
xor
repz
cs
addr16
sub
add
fsubl
and
or
pop
xorb
mov
shl
ljmp
dec
add
push
rol
sub
rcl
jb
inc
fisubrs
pusha
iret
pop
mov
fmull
sbb
inc
mov
gs
xor
test
cmp
pop
fsubrs
dec
fstps
loope
fiaddl
and
fcom
scas
aam
cmp
push
xchg
add
or
lods
aam
aam
aam
pop
adc
aad
aad
push
aad
aad
mov
mov
jmp
mov
jle
mov
mov
cwtl
ret
mov
cmc
sar
roll
clc
push
je
xchg
add
shl
shlb
rolb
sub
jbe
pop
ret
mov
outsb
jo
and
add
dec
push
inc
add
push
push
sti
mov
nop
faddl
dec
mov
int3
sub
clc
fcmovne
sub
icebp
sbb
out
adc
fbld
jne
mov
mov
pusha
xlat
push
mov
insb
aam
aam
aam
lock
aad
mov
xchg
rclb
inc
xor
pop
shrl
adc
insl
dec
jp
shll
lods
clc
jmp
fdivp
and
add
jmp
leave
fstpt
sbb
out
add
stos
sbbb
lcall
lds
pusha
push
jp
pusha
fwait
int3
inc
pop
mov
pop
pusha
push
cmpsl
scas
adc
add
xor
xchg
nop
adc
popf
and
jb
lock
inc
adc
dec
push
fs
idiv
call
pop
daa
push
push
sub
nop
pop
cmp
xor
or
push
sbb
xlat
loope
not
lock
xlat
xlat
ret
xlat
fucomp
add
xlat
fcoms
movsl
xlat
scas
mov
mov
xlat
mov
mov
insl
xlat
lea
xlat
xchg
xlat
pushf
xlat
cltd
inc
mov
xlat
push
fistpl
and
xlat
inc
xlat
inc
xlat
dec
or
push
xor
sarl
insb
or
xlat
xor
push
sbb
jnp
xlat
out
ja
adc
xor
aam
insb
stc
iret
aam
aam
aad
pop
fcmovnbe
movsb
aam
and
aam
aam
aam
aam
xchg
xorl
jo
popf
mov
in
call
push
aam
sarb
push
aam
aam
push
subb
aaa
lods
aam
lods
or
lock
jb
pop
push
inc
push
inc
negb
aaa
sarb
ror
sub
adc
push
jb
rorl
test
push
je
sbb
std
fisubs
fidivrs
fidivrs
adc
xchg
fistpll
adc
add
push
fcmove
or
hlt
decl
lods
fdivrs
fdiv
mov
mov
push
xor
pop
xlat
and
push
mov
icebp
incl
aam
aad
adc
mov
adc
jg
adc
add
jo
loope
mov
mov
mov
jmp
fisttpll
inc
test
push
mov
mov
ja
roll
pop
rorb
push
lcall
xchg
jmp
push
sti
jmp
add
rcl
shlb
mov
push
es
std
mov
rclb
and
fwait
clc
mov
roll
xchg
and
stc
xor
call
outsb
pandn
fldl
fstl
push
pusha
or
enter
clc
mov
in
fildl
fistpl
scas
mov
out
xlat
xlat
aam
xor
push
jo
ljmp
aam
aam
inc
aad
aad
aad
adc
cld
push
rcll
sub
adc
cmp
fdivp
fisubs
mov
in
pop
add
out
addr16
push
push
and
into
outsb
jb
lock
mov
mov
lods
inc
shl
xor
jae
incl
cld
call
dec
adc
fisubs
xchg
fidivs
ficoms
fisubrs
fidivs
sarb
call
jo
mov
adcb
push
mov
fists
jecxz
std
push
add
repnz
fdivrl
fdivl
cmpb
frstor
add
outsb
sbb
hlt
inc
fisubl
mov
sub
das
pop
bound
fimull
pop
fisttpl
fcomps
sub
add
inc
in
call
flds
ficompl
mov
mov
icebp
movb
popf
push
rorl
nop
aaa
xor
push
adc
sbb
cltd
fcomip
cmp
adc
add
mov
fisubs
fisubrs
icebp
das
xor
xchg
jnp
sub
call
fldt
add
jmp
sarb
fsin
fyl2xp1
add
in
dec
loopne
fs
out
fldenv
mov
in
dec
xor
fstps
dec
dec
fsts
jmp
and
inc
lret
or
add
addb
and
push
leave
sahf
add
int3
jl
or
aad
addr16
cmpsb
pop
cmpb
aad
mov
mov
and
call
push
add
mov
push
cmp
add
sbb
and
sbb
addb
shlb
adcb
mov
dec
and
or
sbb
stos
repnz
scas
rolb
inc
mov
and
xor
push
and
sbb
add
fimuls
adc
loop
repnz
das
mulb
mov
stos
xchg
shll
inc
mov
das
add
add
sub
shl
xor
mov
mov
push
and
jbe
xchg
sarb
rolb
xor
mov
dec
or
push
rclb
cmp
rcrb
incl
sub
push
out
shr
shl
shl
roll
rol
rcr
hlt
mov
cs
rcl
rcl
rcr
ss
cmpsb
shrl
sarl
add
nop
and
rcrl
shlw
das
add
inc
clc
sbbb
adc
test
mov
push
xchg
in
add
enter
adc
fdivr
popl
sub
je
jno
test
hlt
cmp
lcall
in
popa
clc
movsb
jle
nop
add
adc
jmp
and
sub
xor
mov
hlt
int
add
int3
or
hlt
mov
mov
jg
xchg
aaa
scas
dec
movsl
and
jb
sbb
or
aam
sub
jmp
push
ljmp
adc
cwtl
sub
imul
sbb
lcall
std
mov
mov
cmp
adc
in
adc
jl
mov
pop
loopne
loop
insl
popf
adc
ror
call
xchg
xor
jg
decb
mov
loope
mov
mov
lods
in
in
lahf
sahf
jo
and
mov
aad
or
ret
shrb
lods
dec
xor
dec
add
pop
lcall
xor
ss
sbbb
sbb
mov
mov
mov
imul
adc
adc
es
jno
shlb
adc
clc
mov
mov
jg
scas
jg
jle
test
cmc
aam
add
cmp
mov
outsb
fwait
mov
clc
ljmp
pop
addr16
push
inc
adcb
incl
push
add
mov
in
movsb
ret
out
xchg
jo
enter
sahf
add
test
add
cmp
mov
ret
in
rcrb
jle
pop
in
sbb
dec
out
add
xchg
inc
in
mov
mov
aad
jae
inc
add
jle
mov
or
or
jb
mov
adc
ret
add
adc
shrb
mov
pop
adc
pop
pushf
and
mov
dec
clc
push
pop
sar
cmp
cltd
sub
loope
mov
pop
lret
std
inc
jns
aad
add
push
pop
imul
mov
inc
sub
xor
test
rcll
cld
ljmp
adcb
rolb
jns
adc
incl
popa
loop
dec
dec
jge
enter
jle
filds
movsl
jmp
fcoms
adc
mov
lcall
iret
mov
xchg
and
adc
pop
aaa
dec
ret
mov
xchg
cld
addr16
adcb
mov
inc
adc
sbb
or
inc
nop
hlt
sub
add
imul
push
dec
imul
popa
sub
insb
outsl
arpl
fs
js
push
test
gs
outsb
arpl
dec
jns
gs
push
outsl
imul
dec
outsl
pop
outsb
bound
jb
push
push
dec
inc
gs
in
jle
test
inc
insb
sahf
adc
jne
inc
imul
push
imul
and
inc
jns
ret
or
inc
gs
inc
push
daa
inc
jb
arpl
fucomi
push
outsl
outsb
xor
insb
gs
push
je
je
xor
mov
push
outsw
inc
pshufw
addl
insl
inc
imul
fnstcw
mov
mov
jae
xor
cld
loopne
jb
push
push
je
inc
jb
xchg
fdivrs
inc
push
push
ret
inc
outsl
insl
jo
sub
imul
mov
sahf
or
popa
jae
into
fs
add
mov
adc
outsb
insl
and
pop
out
push
imul
push
inc
je
out
sbb
push
push
push
jle
add
jb
jb
push
popa
add
sbb
bound
jb
andl
pushaw
insl
insb
movsb
sub
add
fnstcw
pop
and
ficoms
inc
shrl
or
mov
mov
data16
sub
jae
cld
je
or
adc
adc
sbb
push
inc
ret
jo
xor
mov
cmc
sub
add
jbe
rcll
sub
in
ret
arpl
add
leave
rcrl
stos
push
and
outsl
jbe
pusha
dec
mov
pop
ficoml
pop
mov
xchg
cmp
inc
pop
jns
lods
inc
xor
jmp
push
sub
push
outsb
jae
mov
nop
loopne
push
jb
lea
jbe
rorl
or
mov
sbb
imul
inc
shlb
lock
mov
sub
cmp
addl
popa
sbb
cmp
push
icebp
bound
incb
pop
cmpsl
add
and
inc
mov
jnp
push
fiadds
daa
push
and
mov
pusha
dec
inc
dec
inc
or
jbe
stos
push
xchg
mov
mov
aam
push
xor
les
or
push
add
loop
cltd
test
scas
fucom
xchg
dec
stos
sbb
in
aad
xchg
inc
push
mov
inc
mov
sub
lds
icebp
aas
add
mov
cmp
inc
push
inc
mov
jns
gs
stos
loopne
xchg
lds
mov
push
sbb
scas
push
sub
pop
jmp
mov
mov
icebp
push
ret
mov
mov
aam
sbb
adcl
sub
jbe
imul
inc
popf
pop
sub
xor
mov
inc
and
ret
add
aad
clc
push
push
sub
pop
sub
pop
pop
push
pop
mov
jae
inc
and
mov
xchg
add
push
movsb
and
push
or
mov
cmp
les
fs
inc
push
into
call
jae
adc
fnstcw
icebp
or
xchg
addb
dec
cmp
fsubrs
pusha
adc
mov
rep
push
insl
sbbb
outsl
aas
and
call
repz
or
push
fs
inc
aam
jno
mov
mov
sbb
sti
push
cmp
inc
xchg
push
push
aam
sub
add
sbbl
test
lcall
jne
pop
or
sbb
aaa
or
xor
lods
add
pop
loope
popa
pop
pop
nop
bound
insl
test
popf
push
mov
out
xchg
inc
pusha
pop
jae
aaa
adc
inc
cmp
inc
xor
int
push
test
cmp
jne
movsb
sbb
xor
mov
inc
pop
out
or
adc
or
sub
jb
stos
and
roll
test
and
jle
in
xchg
mov
inc
push
dec
mov
icebp
pop
loop
lahf
and
add
stos
out
out
push
in
ret
fisubrs
push
adc
pop
and
jnp
outsb
fisttpl
sbb
popa
add
sbb
in
add
lea
stc
int
adc
xchg
fiadds
pop
mov
loop
add
loop
std
and
jb
cld
popa
sbb
sbb
push
ret
int
fistl
inc
outsb
dec
push
push
sub
cld
add
cs
dec
xor
bnd
sub
sub
loop
jo
jae
adc
ss
mov
pcmpeqb
fidivs
pop
das
xchg
and
js
cs
add
add
incl
add
add
add
sahf
add
std
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
