lcall
repnz
add
repnz
inc
adc
xor
fistpl
mov
hlt
data16
ljmp
adc
mov
stos
call
cld
pop
dec
xor
fwait
sbb
sbb
ljmp
xchg
push
xchg
jge
add
ss
jo
cld
and
inc
testl
sub
lcall
push
inc
je
shll
add
adc
push
shrb
out
sub
out
mov
mov
aaa
inc
push
mov
sbb
and
pop
mov
data16
mov
mov
push
ja
jg
leave
call
in
ljmp
jmp
mov
lahf
das
insl
fistl
lods
cli
mov
mov
out
std
inc
addr16
push
push
mov
stos
mov
mov
fwait
inc
into
into
and
dec
adc
ljmp
sub
fucomip
ret
ret
jmp
icebp
push
ret
jbe
dec
in
in
subl
mov
loopne
sub
cmp
in
addl
inc
dec
mov
xchg
dec
bound
sahf
jle
call
data16
and
inc
out
xor
adc
push
cld
in
adc
push
fistps
sbb
lcall
xchg
sbb
mov
and
xor
dec
jl
jecxz
pop
dec
hlt
and
mov
aas
sarl
incl
jecxz
lahf
mov
or
adc
lods
jmp
daa
pop
das
xlat
pop
repz
fcoms
decl
dec
sub
lcall
mov
sahf
mov
jg
cmc
inc
xorb
mov
push
jmp
jmp
lods
das
jge
sbb
mov
aam
push
stos
jp
lret
orb
jmp
mov
xlat
into
cs
cld
xor
mov
mov
sbb
icebp
xor
sub
icebp
outsb
scas
sub
jp
add
fisttpll
jns
add
cli
jmp
jmp
mov
mov
inc
mov
shl
ficoms
fisubrs
adc
int
cmpsb
add
dec
in
pop
adc
jp
frstor
add
jae
shlb
sbb
jg
dec
int3
mov
jmp
loopne
lea
mov
fwait
test
cs
inc
inc
cmpsl
andl
ss
pushl
arpl
add
out
jmp
loope
sub
mov
sub
test
push
jecxz
sar
ljmp
sahf
ds
shll
cmp
daa
mull
xchg
out
jmp
mov
sub
ljmp
mov
jle
sbb
insl
sbb
loop
adc
sbb
xorb
xchg
mov
lcall
fsubl
inc
insb
or
and
mov
iret
lock
movsl
mov
lret
in
fisubrl
mov
xchg
or
fistps
pop
add
stos
and
and
jne
fcoms
nop
inc
sbb
push
push
lea
or
loope
jno,pn
xor
xchg
mov
leave
xchg
push
pop
xor
fdivrl
out
add
aas
in
pop
mov
inc
call
into
aam
sbb
or
fldt
sbb
sbb
data16
xchg
and
pop
icebp
notl
fdivp
divb
dec
in
lahf
call
lcall
aaa
fmuls
cmp
jecxz
cwtl
adc
cmp
xchg
xor
js
push
es
inc
cmc
lea
pop
dec
and
adc
shr
enter
inc
inc
mov
cmpsb
cmp
or
mov
leave
inc
out
mov
in
jbe
sbb
lcall
ljmp
cmp
mov
es
sub
es
orl
cmpsl
xor
loopne
lret
andl
popf
pop
add
mov
lock
push
jmp
rcrb
aaa
lret
mov
xor
aaa
imul
pop
sbb
cmp
push
pop
fbstp
std
pop
pusha
dec
mov
or
fdivs
dec
push
lret
mov
pop
rcr
and
enter
mov
jecxz
mov
roll
jmp
push
fstp
in
inc
or
fistpl
test
mov
mov
lods
adcb
xchg
cli
sub
mov
push
lock
sbb
insb
and
dec
push
adc
mov
ja
andb
decl
loope
pop
xchg
xor
mov
outsl
shr
and
cmp
xor
jl
pop
xchg
mov
out
xchg
lods
fcmovb
adc
jl
les
lods
shl
loope
daa
leave
or
jmp
jbe
cli
ss
or
add
rorb
mov
ss
adc
cwtl
lods
test
add
cld
ret
movsl
or
aam
jo
add
adc
dec
imul
inc
ja
dec
outsb
mov
dec
or
lret
and
mov
cmp
jmp
jae
push
fimull
je
lock
fxch
inc
leave
dec
mov
outsl
mov
repz
stc
sti
jno
ja
movsb
and
inc
fs
or
js
lock
std
dec
mov
loop
fcmovb
inc
cmp
mov
fmull
sbb
jl
pop
sub
cs
ds
es
xor
mov
dec
insl
in
pop
cmp
ret
adc
loop
mov
out
call
jmp
adc
cli
dec
mov
push
cs
sub
les
out
push
jmp
ljmp
or
dec
xchg
and
push
icebp
stc
jns
lock
add
loopne
loop
pushf
cmc
mov
incl
in
negb
cli
mov
add
mov
emms
mov
mov
rcll
lods
pop
mov
pop
out
jns
adc
push
fimuls
decl
push
imul
mov
sbb
mov
mov
or
leave
jmp
incl
test
dec
test
shrl
pop
mov
inc
xchg
xor
pop
lock
fstpt
mov
jl
dec
call
cli
mov
jns
outsb
xor
pushl
mov
push
int3
sbb
xchg
es
jbe
add
insl
xlat
ud0
ljmp
shrl
icebp
adc
ja
jle
adc
mov
in
ret
lret
pop
sub
ljmp
mov
push
pop
xor
cmpsb
jl
iret
jbe
loopne
cwtl
xor
or
and
gs
sub
and
lcall
stc
mov
ds
mov
jl
cmpsb
test
iret
aas
ret
in
gs
ret
ret
pushl
cld
pop
push
xchg
mov
popa
test
ficoml
xor
jl
decl
jp
dec
mov
and
sahf
subb
xchg
inc
cmp
icebp
push
xchg
cltd
es
sbb
incl
fcompl
repz
lea
mov
ds
sbb
fdivp
or
push
adc
jno
sbb
ret
fcmovnu
dec
rcrl
inc
loopne
shll
dec
push
jns
into
jmp
ret
lret
mov
sahf
shl
popa
mov
mov
add
aaa
cld
dec
inc
inc
fistpll
or
adc
and
nop
fwait
mov
rcr
lods
mov
jg
mov
out
xchg
cmp
leave
push
mov
jg
jmp
lret
push
popf
addr16
fnclex
mov
dec
outsl
repz
daa
loop
inc
daa
sbb
enter
mov
fwait
lret
loopne
iret
push
sbb
sbb
push
test
adc
jg
push
jbe
adc
jo
insb
aam
aas
lret
mov
push
out
clc
aam
add
fildll
xchg
mov
dec
jb
movsb
sbb
ret
push
or
cmp
fdivp
mov
mov
sub
cmp
test
loope
lcall
cmp
out
mov
inc
rclb
adc
clc
sub
pop
inc
pop
pop
jmp
incl
shl
mov
fldcw
and
dec
and
pop
pushf
imul
cs
xchg
push
movsl
sti
jmp
mov
lahf
jo
and
fldt
and
jo
xor
cltd
aas
mov
adc
mov
adc
inc
mov
in
push
jmp
int
inc
dec
mov
lahf
outsb
pop
pop
xorl
int
cmp
lcall
add
stos
push
lods
loopne
ret
scas
push
and
les
inc
aaa
mov
add
in
xchg
into
inc
cli
and
sbb
add
jmp
ljmp
and
sub
push
mov
push
inc
push
or
mov
ret
out
pop
cmp
mov
dec
mov
push
rcrl
xor
jmp
pop
mov
lods
loope
xchg
cli
xor
insb
movsl
cmp
insb
in
movsl
mov
inc
mov
xor
inc
jg
pushl
in
or
aam
clc
xorb
push
adc
pop
stos
jl
test
cmpsb
decl
cmpsb
cmp
jne,pn
leave
cmp
das
lock
pop
push
lcall
addb
ds
jnp
fadds
outsl
stos
addr16
mov
cmpl
test
or
call
jg
cmp
or
xchg
rcll
cmp
rcrl
mov
jp
cmp
xchg
call
aaa
sub
cltd
mov
pushf
or
xor
push
pop
andl
pop
pusha
addb
xchg
cmpb
add
xchg
test
adcl
fnstenv
jne
loop
mov
sub
mov
fisubrs
mov
loopne
imul
cmp
add
adc
sbb
incl
mov
fnsave
and
mov
cld
in
insb
jno
inc
inc
jbe
out
mov
add
test
cmp
aaa
cld
jmp
pop
out
and
fldcw
xor
inc
ror
shlb
lcall
xchg
dec
orl
inc
sub
sub
xor
mov
stos
push
xchg
clc
mov
or
mov
jecxz
lcall
mov
mov
adc
mov
inc
sbb
dec
xchg
into
push
cmc
cltd
decl
iret
adc
adc
push
stc
inc
and
cli
xchg
mov
jae
loope
cmp
add
pop
push
adc
in
addl
jle
shlb
xlat
nop
inc
mov
sub
iret
sub
cld
ljmp
pop
sbb
xlat
jns
push
pop
inc
jg
pop
outsb
cmc
adc
adc
gs
ja
or
pushl
jbe
fwait
cwtl
and
arpl
mov
push
jge
aam
mov
jg
test
fcomip
pop
xchg
sub
in
hlt
xchg
cmc
in
jne
cmpsl
data16
add
clc
xor
decl
andl
mov
and
mov
mov
cmpsl
insl
imul
and
inc
rol
scas
mov
insl
jmp
divl
mov
dec
push
cli
roll
jae
clc
in
pushl
pushl
adc
cli
mov
cmp
xchg
xchg
dec
cli
js
pushl
pop
inc
pop
dec
mov
sbb
in
test
out
loopne
fstpl
cmpsb
stos
jne
incl
shrb
push
sbb
push
push
pushf
push
popa
jae
scas
mov
xor
push
mov
cmpsl
sbb
adc
in
inc
test
into
xor
insb
push
repz
decl
cltd
mov
inc
inc
push
xchg
mov
sub
adc
fiadds
and
lods
fcoms
call
mov
in
icebp
mov
mov
andb
lods
stos
scas
cli
lcall
xchg
cmovnp
les
fadds
shrl
sub
lea
fdivr
out
sbb
in
mov
icebp
subb
pushf
cmp
call
xor
incl
scas
add
push
stos
adc
mov
xchg
mov
pop
cli
imull
mov
jmp
ret
test
movsl
xor
lock
setae
and
mov
popa
pop
jne
movsl
cmpb
pushl
pop
shl
cli
mov
rcrl
inc
mov
push
sar
pop
push
stos
decl
mov
mov
jg
mov
jne
mull
inc
scas
and
movsl
cs
dec
jmp
les
push
out
aam
popf
cmp
dec
cwtl
xor
jns
in
xor
push
xchg
sub
adc
and
xchg
ds
mov
inc
pop
arpl
or
adc
mov
lock
sbb
lahf
inc
ret
or
clc
lods
je
jmp
pushl
cld
cmp
shll
xor
lods
sub
ret
xchg
xchg
mov
cmc
sbb
cld
lcall
jecxz
push
cmp
adc
mov
or
loopne
pop
dec
sar
call
test
sub
out
dec
push
mov
scas
jb
sbb
loope
test
push
mov
mov
lcall
adc
enter
mov
mov
push
inc
les
andl
jmp
add
leave
movsb
inc
jecxz
mov
mov
roll
add
push
imul
pushl
xorl
jb
or
cwtl
ljmp
sbb
lcall
xor
js
outsl
cs
adc
push
in
rcrb
dec
cmpsl
xor
sti
cmp
fdiv
inc
lret
ficomps
popa
jg
addr16
cmp
test
lods
cmc
in
sti
and
ljmp
xchg
jmp
sbb
cmpsl
repnz
mov
ffree
jecxz
out
xchg
add
out
pop
push
cmpsb
in
cmp
mov
jle
lahf
pop
add
call
adc
sahf
ss
inc
sar
lcall
xchg
sbb
jmp
out
out
imul
mov
outsb
sbbl
and
rcl
push
loopne
addb
ljmp
test
imul
clc
sbb
push
jmp
fldenv
movsl
aaa
mov
adc
lret
xchg
pop
rcrl
mov
mov
cs
adc
xchg
lock
ret
pushf
pop
xchg
push
loop
mov
and
xor
and
mov
jbe
add
outsl
mov
call
cli
repnz
arpl
pop
fsubrp
push
mov
cmpsb
ret
es
aad
or
sti
mov
imul
jae
int
repnz
push
jl
sbb
rcll
inc
mov
push
mov
in
and
mov
mov
push
or
imul
out
mov
lcall
subb
das
adc
and
lahf
out
ret
cmp
stos
mov
or
js
ret
or
or
add
scas
dec
loop
jmp
add
out
mov
jbe
div
mov
scas
xor
jl
dec
cmc
cmp
arpl
mov
cmp
push
ret
jp
jnp
xor
push
cmpb
pushl
jmp
lret
push
adc
mov
in
scas
xchg
das
dec
pop
inc
daa
mov
xlat
icebp
push
pop
mov
iret
aad
pop
std
jp
nop
pushf
jns
adc
pop
in
into
adc
cmc
adc
lahf
jmp
ja
int3
sbb
je
pop
mov
icebp
outsl
mov
popa
lahf
or
scas
add
repnz
pop
std
incl
int
push
inc
subl
pop
inc
dec
test
xor
call
mov
sub
jb
adc
mov
jne
bound
mov
call
adc
nop
nop
dec
in
ds
push
mov
push
fidivl
inc
call
not
fcoms
fsubrl
call
das
scas
std
mov
andb
dec
mov
call
pop
insb
loope
sub
imul
popa
lds
test
cmp
lret
in
outsl
pop
sar
pop
pusha
shrl
mov
test
and
jge
out
sbb
push
adc
shr
ficoml
xchg
mov
loopne
inc
mov
add
incl
mov
scas
mov
add
in
mov
cmpsb
rorl
inc
and
inc
sub
in
and
mov
adc
mov
push
stos
mov
xor
out
jmp
mov
jmp
inc
sub
cmp
mov
aas
mov
lea
cmc
jmp
pop
xchg
sbb
mov
int
sub
pushf
mulb
mov
imul
lret
repz
lret
mov
icebp
movsb
sbb
dec
xchg
push
or
sbb
fnstcw
rolb
add
mov
sub
mov
adc
out
aas
ja
decl
mov
out
test
stos
mov
stc
jl
mov
jl
repnz
mov
jmp
add
addr16
test
push
pop
into
imul
xor
aad
outsl
stos
out
mov
dec
and
mov
pushl
or
push
xor
out
sbb
or
pop
and
push
int3
adc
mov
ljmp
stos
sbb
cmpl
xchg
outsb
das
cli
call
loope
ljmp
adc
rcll
out
mov
add
push
add
call
leave
cld
mov
aaa
faddp
mov
jmp
imul
rorb
xor
ljmp
mov
push
insl
jbe
or
aaa
loopne
mov
lret
orl
out
sub
call
out
data16
xchg
adc
mov
inc
sbb
cmpsl
mov
clc
xchg
fwait
jl
xchg
lods
ja
xor
decl
and
dec
in
gs
cmp
cltd
cmp
std
jbe
fwait
cld
ja
cld
cmp
in
int3
jae
push
iret
or
std
ss
fwait
push
xchg
aas
pop
test
incl
pop
mov
loop
lcall
in
rorb
jb
mov
jmp
dec
pop
leave
pop
cli
shr
pusha
imul
lahf
push
fdivrl
cli
jno
push
loopne
dec
fwait
stc
out
jle
jmp
cmpsl
aaa
xchg
subl
test
sti
out
dec
mov
lcall
mov
mov
xor
or
pop
sbb
stc
ret
in
cmp
mov
outsl
jbe
pop
int3
pushl
sbb
jbe
or
lods
push
dec
outsl
lret
ja
adc
push
mov
mov
pushl
sti
xchg
scas
in
mov
and
jl
cmpsl
cmp
xchg
fistpll
call
or
popa
fisubrs
push
repnz
sahf
cmpsl
add
ret
sbb
fcos
ljmp
dec
imul
or
test
lods
popa
fs
test
mov
ljmp
scas
or
faddp
mov
add
mov
xchg
insl
fcomp
adc
adc
ss
dec
fs
xchg
ja
bound
addl
icebp
dec
test
xor
insl
outsb
inc
aad
cmp
in
and
push
adc
jmp
cmp
idivb
pop
int
inc
jl
dec
xlat
cli
mov
mov
pop
mov
mov
inc
jmp
jmp
lcall
xor
mov
aaa
mov
test
mov
cmp
aad
or
int
test
insl
mov
jg
lea
imul
xor
faddp
cmpsb
je
cmp
sbb
inc
fmuls
in
or
or
fdivrp
pushl
mov
mov
jns
pop
clc
xor
div
rclb
dec
inc
ja
jns
pop
push
test
call
push
outsb
xchg
je
sbb
and
test
xor
jns
je
add
or
mov
dec
jne
jl
scas
cmp
xor
pop
inc
test
dec
or
sub
das
jecxz
dec
movsb
sub
call
ss
sub
out
mov
arpl
loope
xor
xchg
xchg
cld
dec
rorl
push
ja
xchg
dec
mov
push
mov
cmp
inc
push
push
not
stc
sbb
icebp
pushl
lret
push
cmc
inc
out
jns
aas
stos
mov
mov
inc
faddl
pushf
mov
or
fnsave
adc
shl
add
mov
sub
xor
push
popa
call
scas
fsubr
pop
adc
xchg
das
fs
push
adc
out
clc
rcr
mov
adc
clc
or
add
pop
ss
imul
ljmp
push
inc
push
decl
and
or
jae
xchg
mov
lcall
sub
cmpsb
or
inc
push
stos
movsb
leave
ljmp
dec
ss
mov
cli
sub
cmp
sub
int
cmpsl
push
rorl
loope
jge
push
ljmp
sti
std
mov
insl
pop
mov
xchg
xor
inc
push
inc
fimull
push
mov
loope
repz
or
stc
jb
enter
push
sbb
mov
fucomip
pushl
add
fldt
ret
mov
mov
push
or
mov
sti
fists
call
and
add
mov
cmp
jmp
add
xchg
mov
mov
pop
mov
dec
jle
imul
sbb
adc
mov
test
verw
sbb
in
dec
or
imul
movsl
jge
inc
mov
sub
out
push
arpl
jbe
and
pop
xor
sub
add
mov
test
call
dec
add
mov
pop
divl
and
xor
adc
imul
out
repnz
xor
xor
or
adc
jae
fbld
mov
cmpl
push
push
mov
mov
push
sbb
mov
call
popa
aas
push
push
adc
xchg
add
cmp
add
jg
mov
out
incl
nop
add
nop
mov
nop
sub
ret
add
loop
sti
push
jne
xor
loopne
dec
dec
loop
cmp
mov
push
and
fwait
mov
dec
adc
or
ss
enter
stos
incl
in
bound
mulb
pop
fimuls
mov
dec
ficompl
inc
sarl
jb
sbb
mov
popf
lcall
testb
add
dec
mov
pop
dec
mov
test
shll
je
mov
fbld
sahf
mov
std
lcall
rcl
loopne
lret
or
xor
xchg
dec
push
jno
pop
lds
jmp
or
xor
out
dec
sbb
mov
pop
sbb
xchg
mov
incl
mov
mov
inc
dec
xorb
jmp
scas
xor
push
xchg
int
std
out
lds
into
test
mov
mov
lcall
cli
popa
fcomip
xchg
sbb
adc
xchg
mov
inc
imul
lea
inc
ljmp
add
sub
xor
sub
mov
stc
cltd
es
repz
clc
lcall
jg
inc
push
int
and
call
push
jns
or
inc
test
push
incl
adc
xchg
mov
es
dec
inc
call
jb
xlat
push
sub
jnp
sbb
mov
into
shlb
jl
decl
pop
mov
mov
pushf
stos
xor
add
and
mov
mov
dec
repnz
decl
movsb
mov
test
adc
lods
test
pop
stos
lret
std
add
ret
fidivrl
cmp
mov
mov
clc
jl
ljmp
mov
mov
out
test
ja
cmp
notl
mov
lods
pop
sbb
jo
mov
jg
sbb
add
jo
xor
jbe
aaa
pushf
jl
mov
jo
ds
iret
cmp
call
std
insl
push
enter
cmp
test
or
popa
xchg
enter
jg
rorb
cli
add
push
in
xchg
in
fdivs
fidivrl
dec
fdivrp
mov
mov
lcall
jecxz
mov
mov
jmp
xor
mov
or
dec
inc
sbb
icebp
sub
incl
mov
adc
dec
call
push
scas
test
decb
dec
jle
xchg
popf
jae
and
cmp
popf
sbb
pop
out
jo
ja
jge
das
lds
push
inc
and
push
mov
cmp
lahf
fbld
call
jmp
lcall
mov
push
mov
inc
imul
mov
inc
shrl
dec
or
cs
adc
xor
xor
dec
out
js
or
inc
add
mov
and
repz
sbb
cmp
int3
adc
lret
mov
loope
mov
call
xchg
pop
fisttpll
clc
add
push
push
adc
std
xlat
xchg
jge
dec
sbb
fstpl
jmp
and
dec
pop
mov
inc
sub
mov
jmp
call
adc
incl
xor
mov
push
in
das
aaa
inc
mov
xor
adc
je
lods
dec
scas
xlat
pop
repnz
push
jmp
xchg
jo
lcall
inc
or
xor
jo,pn
mov
pop
jbe
ljmp
clc
pushl
loope
inc
or
or
test
xchg
cwtl
inc
ss
sahf
fldenv
ljmp
in
aas
rcrl
push
js
cs
xor
cltd
and
sub
test
cmp
pusha
cmpb
pop
aam
mov
cld
push
lods
and
cmp
iret
loopne
test
pushf
fnstcw
jmp
pop
push
test
fdivrs
push
lahf
testl
sbb
lcall
jno
mov
xchg
iret
cmp
ror
add
nop
pop
lock
cmp
ljmp
jbe
push
icebp
movsb
add
imul
dec
mov
das
pop
dec
rcl
shll
cld
dec
ficompl
mov
test
mov
sahf
mov
movsl
scas
jg
movsl
jge
outsl
stos
dec
push
push
and
cmp
lea
cmc
inc
in
daa
je
out
jmp
xchg
pushl
push
add
dec
lahf
cli
ret
jbe
fildl
sbb
test
int3
or
jmp
inc
mov
mov
mov
fistpll
xor
add
jo
mov
mov
into
xchg
lods
ljmp
cli
dec
and
adc
aaa
cmp
in
dec
repnz
out
mov
mov
push
sbb
insl
push
jl
dec
out
sbb
sbbb
ljmp
call
cld
push
in
popa
test
cmpsb
mov
lcall
and
sarl
pop
inc
adc
icebp
outsl
je
lds
sbb
pop
cmc
call
scas
out
out
fbstp
sub
jbe
sbb
add
das
mov
pop
inc
sbb
loope
inc
cmpsl
adc
lcall
cmc
sub
jne
sub
in
incl
setb
ja
xchg
add
insb
xor
xchg
in
lret
sti
jmp
mull
mov
movsb
mov
imul
xor
pushl
inc
imul
mov
add
aam
es
mov
lods
jmp
mov
mov
std
jl
nop
mov
push
popa
shrb
lret
or
out
aad
push
pop
ja
outsl
cli
call
lcall
inc
jns
adc
pop
icebp
adc
jbe
test
ljmp
sbb
sti
push
or
cltd
xchg
adc
in
jae
pop
push
rcr
lcall
cli
ljmp
imul
aam
push
outsl
or
and
aad
fidivs
pushl
lret
testb
fcoml
fiaddl
or
incl
fs
mov
addb
add
jge
in
addr16
in
lret
and
fimull
mov
out
loope
mov
push
cmp
lcall
mov
jmp
lret
sbb
cmpsb
mov
clc
rcl
jns
pop
push
ja
mov
mov
adc
sbb
cmp
popa
sub
jecxz
fs
sub
jno
jbe
out
or
mov
sahf
incl
pop
movsl
lcall
les
mov
fucom
jbe
dec
scas
movsb
add
xchg
decb
loopne
out
mov
lock
xor
xor
arpl
int
icebp
into
test
jmp
add
scas
and
jnp
adc
adc
pop
or
stos
lcall
cmp
mov
sbb
repz
stc
int
jle
mov
mov
add
push
mov
insb
pop
jl
xchg
dec
call
jp
or
or
pushl
xchg
push
test
int
loop
mov
mov
dec
adcl
add
ljmp
mov
orb
mov
add
xor
rcl
mov
lcall
mov
mov
push
sub
loope
push
fidivl
xchg
cmp
add
lods
push
gs
arpl
inc
dec
or
mov
lret
cwtl
mov
mov
fsubp
outsl
or
repz
mov
adc
into
lods
aad
dec
cmp
mov
inc
aad
adc
sub
push
mov
cmp
scas
mov
pop
or
jmp
mov
push
xchg
fcmovbe
jle
dec
bound
mov
cld
add
fdivs
shl
add
aad
xchg
and
xor
out
sub
ret
push
push
inc
jmp
inc
jo
jmp
push
fcmovne
cmpsl
mov
cld
and
or
cwtl
xor
sti
mov
call
add
adc
sbb
mov
sub
outsl
outsb
mov
into
fs
mov
arpl
jns
inc
bound
test
add
xchg
mov
push
subl
inc
add
adc
push
enter
push
add
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
mov
rcrb
in
add
fnop
je
mov
sub
sub
sbb
xlat
push
cmc
sub
lahf
mov
scas
or
sbb
ljmp
inc
fstps
adc
dec
and
or
push
fwait
jnp
outsl
stos
sub
addr16
call
les
jg
add
cmpb
shll
pop
xlat
sbb
ljmp
out
sub
push
scas
sahf
jmp
arpl
and
or
jge
push
or
jg
push
jmp
rolb
push
xor
mov
int
mov
xchg
mov
jbe
inc
xorps
dec
sbb
fdivrs
call
jmp
mov
out
nop
das
push
loop
ret
fisttps
sub
sahf
lock
jb
dec
sbb
cmpsb
stos
jg
rorl
inc
sbb
js
xor
decl
lds
icebp
cli
in
shrl
mov
in
inc
daa
cltd
subb
cmp
cmc
add
jecxz
sbb
or
ja
fnstcw
ss
jp
mov
push
jns
sub
inc
jle
cmp
ljmp
pop
js
pop
sbb
outsb
mov
xchg
cmp
mov
pop
inc
into
data16
int3
sub
pop
jge
xor
int
sub
cmp
xor
fisttpll
das
adc
mov
in
in
mov
ja
jbe
in
sub
prefetch
mov
sbb
outsl
mov
mov
sbbb
ja
or
pop
test
js
pusha
in
xchg
and
sub
lea
dec
jo
subl
cmp
mov
dec
imul
or
sub
dec
jo
in
lahf
pushf
xor
jns
add
lret
mov
ss
pop
cmp
cmp
aaa
rorl
mov
fucomi
out
pop
pop
and
and
fdivrs
and
sbb
sub
jbe
lea
fdivl
imul
mov
or
loope
sarb
sti
frstor
cmp
jnp
int
sub
daa
daa
cmp
jg
jb
enter
cmp
lds
dec
cmp
jp
mov
sbb
mov
jno
mov
and
mov
xor
jge
das
jbe
push
fsubl
xorl
icebp
and
and
cmp
insl
leave
or
mov
loopne
aad
xadd
pop
insb
cmp
leave
cmp
xor
enter
or
dec
dec
jno
fwait
sbb
mov
lods
adc
or
xor
sub
or
mov
popf
fwait
int
mull
aaa
fmull
aas
scas
push
mov
iret
out
mov
std
adc
mov
inc
popw
xchg
mov
sub
mov
jne
xor
sub
adc
cmp
test
in
les
xchg
ret
outsb
daa
addr16
paddb
xchg
in
andb
iret
arpl
pop
xchg
xchg
inc
adc
ss
pop
dec
ror
pusha
inc
adc
inc
into
xor
sbb
cmp
xchg
movsl
dec
cmp
pushf
stos
and
jge
mov
add
jbe
in
jbe
sti
call
bsr
shr
scas
push
cmpsl
pop
sbb
mov
iret
push
lret
and
adc
or
mov
jbe
and
test
cmp
test
xchg
xchg
adc
das
aas
lea
jnp
cmp
lea
jb
sbb
cmp
adc
cwtl
lds
loop
cmp
mov
lods
mov
cmova
pushf
cmp
data16
xor
mov
aaa
jbe
lahf
mov
arpl
cmp
sbb
lds
cmpsb
in
insl
jnp
cmp
dec
sub
fnsave
xor
iret
add
and
mov
ja
repz
adc
mov
daa
push
in
adc
mov
jge
popa
sbb
jmp
pop
mov
xchg
sbb
jb
jbe
xchg
xor
daa
daa
shr
dec
pop
pop
adc
or
dec
pop
mov
adc
pop
jp
inc
nop
fxch
int
cmc
outsb
xor
lds
cmp
mov
into
fisubrs
inc
test
mov
cwtl
inc
or
push
fldt
lahf
les
les
xor
inc
mov
jno,pn
rorl
in
mov
or
jmp
jge
fldlg2
xchg
sub
sub
loop
scas
xlat
jae
insl
mov
insl
test
xor
or
jp
cmp
das
fldlg2
mulb
jmp
cmp
adc
sti
and
std
pop
cmpb
cmp
jmpw
rorb
gs
xchg
xchg
inc
fisttpl
cwtl
pop
test
dec
cmpl
mov
cs
lods
pop
popf
lock
insl
cwtl
dec
loopne
jge
adc
fsubrl
sbb
lcall
lret
add
adc
xor
cmp
cwtl
int
sbb
in
ror
mov
or
insl
rol
in
add
inc
leave
enter
sbb
test
insb
inc
pop
jno
addr16
test
loopne
or
pop
shrl
pop
xchg
fbld
sub
pop
jecxz
nop
dec
push
xor
adc
sub
jp
push
scas
mov
fisttpl
sub
mov
jmp
stos
insl
pop
cmp
push
pop
bound
aaa
pop
and
sbb
ja
andb
sbb
jno
or
sbb
jg
or
js
and
js
test
or
outsb
mov
outsb
iret
pop
dec
lahf
movsl
stos
jo
jmp
pop
loop
xchg
test
pushf
dec
imul
jne
leave
lds
jno
testl
mov
fcomp
mov
and
mov
xor
popf
add
pop
mov
stc
mov
xor
stos
fwait
jno
adc
fwait
ja
in
jbe
rorl
mov
pop
sarl
mov
adc
scas
das
jns
insl
and
xchg
inc
js
pusha
int
lock
sahf
mov
cmpl
arpl
mov
dec
cmp
bound
sub
out
adc
mov
lret
in
in
jbe
insl
xchg
prefetch
aas
add
sub
fnsave
inc
gs
push
scas
sbb
fdivl
dec
mov
loopne
xlat
jg
sub
push
aaa
fdivl
out
stc
or
jp
jbe
jnp
in
fldt
xor
divb
mov
push
inc
mov
fcmovne
or
and
lret
xchg
fucomi
in
es
fisubs
xor
or
pop
leave
xor
mov
add
scas
mov
mov
mov
dec
add
xchg
pop
aad
mov
stc
and
addr16
das
popa
jns
mov
dec
into
out
xor
jg
outsb
mov
add
jle
fs
bnd
stc
pop
xor
jnp
sbb
or
jnp
cltd
dec
fimuls
mov
fwait
adc
loope
in
in
sbb
adc
loope
aad
sub
inc
je
loopne
pop
lods
lods
cltd
sub
sbb
fldt
cli
out
mov
shr
xchg
daa
fiaddl
fwait
shlb
sbb
jnp
js
xor
insb
xchg
js
mov
lea
das
leave
sti
or
or
add
loope
pop
sub
inc
mov
mov
in
outsl
xor
mov
push
cwtl
das
stos
pop
outsl
push
pop
jo
sbb
lea
and
adc
daa
pop
push
popa
jge
mov
and
in
and
mov
aas
mov
pop
and
sub
mov
aam
xchg
das
popf
in
cmpsb
xchg
xor
sbb
aas
xor
sbb
pop
xchg
lret
sbb
sbb
shlb
lea
pop
jo
lods
sbb
roll
ja
pop
sbb
xor
xchg
int
shlb
outsl
jg
fistpl
fisttpl
packuswb
jb
push
aas
adcb
bound
loope
xchg
mov
pop
cmp
xchg
xchg
addr16
or
inc
mov
or
mov
mov
pop
pop
jo
cmc
mov
daa
pushf
fsubrs
mov
fs
sub
aas
outsb
mov
aad
out
int
pop
jno
mov
xor
pop
lahf
ja
xchg
xchg
pop
fistpll
inc
ds
imul
out
xchg
ret
cmp
add
or
insl
lods
rorb
ret
add
scas
sub
xor
sub
stos
xchg
push
jmp
inc
adc
loop
mov
cmc
adc
in
adcb
pop
pop
in
mov
iret
stos
sbb
addr16
mov
cltd
push
fcoml
cmpsl
stc
mov
fdivl
push
xor
pop
pop
cmp
xor
mov
ficoml
in
fistpll
insb
outsl
shll
and
outsb
mov
outsl
repnz
mov
sbb
insl
lods
testb
loopne
test
sub
in
push
shll
scas
pop
or
repnz
pusha
cmp
dec
sbb
loop
add
lahf
jg
jno
in
or
aas
arpl
pop
fcmovnbe
int
out
and
or
add
fadd
and
aas
in
jo
cltd
and
push
push
pop
jbe
gs
mov
xlat
outsl
sbb
xor
lods
inc
in
repz
pop
sbb
pop
mov
outsb
pop
add
rcrl
sti
leave
xor
or
and
cmp
sbb
jae
mov
mov
and
and
stc
aad
sbbl
js
sub
jbe
xor
ffree
rorl
mov
insl
stos
xchg
dec
jo
jecxz
jmp
mov
fldcw
imul
dec
stos
dec
js
mov
dec
imul
pop
pop
nop
dec
incl
fs
add
mov
mov
cltd
sarl
daa
and
mov
sbb
mov
in
pop
sbb
pushf
sbb
ret
loope
xor
sub
js
mov
scas
mov
push
setae
popa
sub
sti
scas
das
add
cs
dec
test
subl
mov
add
pop
inc
in
or
outsb
cmp
jns
xor
leave
mov
jecxz
inc
xor
in
cmp
xor
jp
sub
outsb
mov
add
sub
xor
jg
in
in
fildl
jns
and
xchg
mov
sti
xor
xchg
icebp
push
stc
fdivl
or
aad
pop
fstpt
jno
and
adc
jb
shlb
or
inc
dec
sbb
ja
fldln2
fs
adc
cmp
mov
fldpi
xchg
je
or
lea
pusha
rcrl
sub
jne
leave
add
xchg
scas
and
ja
inc
sub
and
jns
pop
push
and
cmp
js
sbb
ror
and
xchg
addr16
vmread
adc
rolb
sbb
mov
adc
sti
dec
test
mov
or
in
pop
dec
shr
in
xorb
lret
outsb
push
popa
rcrl
pop
push
loope
sub
adcl
shlb
data16
cmpl
loopne
sbb
mov
or
outsb
daa
daa
push
or
jnp
add
mov
xlat
ljmp
dec
jmp
inc
sbb
nop
dec
mov
add
jne
or
daa
pop
jmp
adc
lahf
sbb
or
and
add
lcall
pusha
adc
inc
pand
pop
push
ja
add
or
lret
adc
popf
sbb
pop
xorb
and
inc
fadds
mov
jns,pn
out
jge
mov
sbb
popf
jp
mov
shl
or
or
rcl
fcomps
jo
ret
loope
jp
in
sub
dec
add
and
xchg
adc
cmp
dec
inc
scas
push
xor
fcmovne
add
and
lea
and
mov
pop
add
add
sub
mov
xor
xchg
adc
in
lcall
sub
push
shll
sbb
sbb
cltd
jge
cmp
fwait
mov
inc
aad
or
mov
int
stc
push
ljmp
ja
lds
imul
pop
pop
sub
xor
push
push
jmp
fwait
push
stc
icebp
dec
adc
push
addr16
jb
add
mov
jecxz
dec
and
pop
and
pop
gs
add
sub
cmp
mov
pop
scas
aam
add
mov
ret
inc
mov
arpl
daa
add
sbb
pushf
ret
add
lods
sub
mov
shlb
pusha
push
push
jne
fsts
jmp
mov
cwtl
int3
cltd
sub
pop
sub
mov
loopne
or
gs
movsl
mov
popa
jbe
sbb
inc
add
xchg
pop
push
cltd
call
jle
or
adc
sbb
pop
testb
loop
mov
or
fsubrs
sti
xchg
and
frstor
pop
mov
or
dec
shr
pop
decl
xchg
jge
aaa
dec
pop
outsb
ret
or
dec
pop
xor
adc
mov
sti
hlt
mov
pusha
in
xlat
fstps
out
call
jnp
jg
in
in
out
and
adc
sub
pop
rcrb
pop
mov
and
jb
popa
mov
sbb
jne
nop
mov
cmp
add
test
fucomi
subb
adc
and
in
lret
mov
pop
testb
push
and
fadds
jmp
addr16
paddusw
mov
jg
popf
pushf
mov
dec
jb
inc
insb
pop
pop
mov
out
dec
es
pop
pop
sub
cmp
pop
repnz
xor
movsb
loop
lcall
dec
sub
cmp
in
das
pop
out
jnp
cmp
stos
jo
pop
pop
fwait
mov
loop
fs
mov
lods
fadds
cmp
or
daa
pushl
jbe
pop
cwtl
jg
pop
push
iret
xor
outsb
push
imul
xor
addr16
or
aaa
add
fstpl
pop
cmp
sub
adc
add
flds
insl
cld
sbb
add
cmp
pushf
fstl
or
mov
jg
or
sbb
dec
mov
test
outsl
insl
sbb
add
push
pop
sub
and
xchg
cld
dec
sbb
xor
mov
pop
and
ss
movsl
inc
out
lock
mov
idivl
sahf
mov
mov
inc
scas
fiaddl
adc
imul
mov
out
mov
mov
jae
in
dec
push
outsb
mov
gs
idivb
fwait
dec
inc
into
imul
int3
xchg
xchg
cmp
in
sub
fdiv
jbe
adc
jnp
ret
daa
or
js
lock
adcl
ret
pop
jl
fildl
jge
dec
ret
stos
test
js
mov
push
je
jno
cmpsl
lds
das
enter
mov
sub
inc
fstl
adc
aam
jp
daa
xor
inc
ss
int
outsl
cmp
pop
movsb
in
or
jecxz
dec
sahf
cmc
pop
mov
ficoms
mov
in
mov
adc
cltd
imul
ljmp
jnp
nop
push
xlat
fistl
fdivl
fwait
rcl
adc
mov
or
mov
mov
jmp
sub
fsubl
mov
insl
lahf
lret
xchg
mov
add
insl
shll
insl
push
dec
popw
sub
jge
and
lods
adc
rep
lahf
xor
xchg
jae
and
in
pop
pusha
faddl
push
aas
imul
jb
sbb
in
jecxz
mov
loopne
fstpt
pop
in
jnp
dec
jo
cmp
add
mov
or
inc
inc
daa
daa
mov
rorb
jmp
clc
xchg
pop
lods
fistpl
out
aad
sub
adc
fisubrl
xchg
and
gs
movsb
and
sbb
cmp
jecxz
orl
in
jbe
jg
dec
bswap
aas
add
ret
jbe
popf
mov
add
popa
lds
in
push
mov
stos
or
push
pop
mov
daa
adc
sub
lods
lods
pop
xchg
frstor
dec
jge
stos
fwait
outsb
cwtl
popf
mov
aam
dec
pusha
pop
sub
cmpsb
jae
nopl
add
cltd
fisttpl
jge
jns
jae
rclb
sbbb
out
cmp
push
lds
rorl
jge
fisttpl
arpl
pushf
pop
or
mov
sub
xchg
push
mov
mov
ret
ja
jl
insl
and
int
lcall
daa
fstenv
mov
fsubrs
sbb
or
mov
fstp
dec
pusha
jnp
insl
lahf
stc
std
cwtl
fdivl
mov
icebp
or
push
pop
jb
jmp
pusha
jp
loopne
js
in
subb
leave
adc
dec
xchg
stos
andb
sub
push
lea
or
push
sbb
cmp
fnstenv
inc
sysexit
push
gs
fmuls
dec
jmp
outsl
pop
and
leave
adc
cwtl
adc
pop
mov
pcmpgtd
outsb
cmp
mov
and
mov
pop
sub
push
frstor
mov
mov
popf
mull
sbb
jno
outsl
add
xor
in
mov
mov
dec
and
in
jb
ja
xor
add
icebp
and
subb
call
or
minps
fwait
push
mov
fisubrl
dec
popl
test
jno
in
mov
xchg
lret
cmp
loope
ret
add
add
or
neg
les
mov
outsb
fsubs
loop
and
aas
imul
dec
and
jae
rol
fwait
je
repz
xchg
loopne
or
jbe
add
mull
dec
test
cltd
sbb
pop
add
sbb
ret
test
jae
ss
cwtl
outsb
pop
jp
cmp
shll
mov
mulb
inc
push
mov
aas
aad
stos
xor
daa
dec
mov
adc
mov
add
int3
mov
lret
or
add
cmp
mov
or
sbb
cmp
leave
mov
add
jne
sub
test
pop
outsb
mov
in
mov
popf
fwait
shrl
sub
ja
or
mov
in
iret
xchg
mov
loop
adc
jbe
and
fmull
sahf
sub
das
rol
fmuls
xchg
test
pop
jo
xchg
adc
out
push
dec
test
ljmp
out
iret
subb
cwtl
sbb
mov
lock
adc
das
push
fs
sbb
insl
ljmp
es
or
mov
dec
repnz
mov
in
xchg
mov
jge
pop
jno
sub
arpl
adc
insl
add
cmp
push
add
xor
subb
loope
xchg
mov
repnz
mov
or
mov
loop
dec
and
out
sbb
ret
adcl
or
insl
sub
ljmp
test
in
gs
orl
ret
popa
in
mov
cmc
push
push
mov
sub
bound
call
inc
lods
movsl
addl
sbb
fidivl
jp
arpl
jmp
jmp
inc
outsl
ja
dec
pushl
jnp
mov
add
xor
push
sbb
add
fisubrl
gs
dec
data16
inc
cmp
sub
rcrl
lea
outsb
xor
add
es
xor
xor
and
loopne
cmp
jbe
xor
in
addb
jbe
cmp
cmp
outsl
neg
jns
les
mov
inc
fidivs
xor
and
cmp
inc
cltd
loopne
inc
cmp
stc
cwtl
mov
cmp
jns
jo
lcall
mov
sub
jge
mov
xchg
inc
fldt
dec
shl
pop
lock
fisubs
cmp
xlat
in
and
and
pop
orl
outsl
pop
mov
push
jnp
add
imul
cld
and
push
bound
xchg
fsubr
mov
pop
pusha
in
dec
rclb
push
insl
mov
and
iret
je
or
sub
push
sub
popf
xchg
aaa
outsb
cmp
aas
fwait
pop
out
add
push
ficomps
cmc
rcll
dec
push
add
mov
or
mov
in
and
sbb
out
fisubl
movsl
aaa
pop
movsl
es
jnp
mov
icebp
xchg
fildl
lods
xlat
sub
jnp
jae
scas
cmp
test
outsb
divl
sub
sub
call
ret
out
lods
es
sbb
pop
repz
or
lock
xor
mov
jb
call
xchg
push
add
mov
or
mov
jns
cmpb
cmp
xor
inc
popa
sub
iret
outsb
cwtl
add
cmpsb
inc
push
push
or
data16
in
inc
jmp
loopne
outsb
or
popa
push
ljmp
sbbl
les
and
sbb
int
sbb
dec
or
or
in
add
pop
jb
jmp
adc
cmp
cmp
mov
jnp
rolb
jg
xor
xchg
cmp
and
or
popf
fdivrs
push
push
xor
loopne
cmp
jns
sub
cltd
repz
in
xchg
popl
test
and
cmp
fimull
xchg
and
jno
test
dec
lds
or
lds
jp
jg
pop
pop
dec
insb
lea
pop
and
bswap
push
popf
call
ja
dec
mov
rcrb
and
or
mov
add
mov
jno
xchg
aaa
mov
mov
mov
jge
mov
cmp
arpl
sub
mov
mov
mov
movsl
stos
insl
cmp
mov
and
mov
mov
mov
cmp
shll
xchg
adc
lods
in
adc
sub
scas
dec
pop
ret
xor
add
mov
out
sti
or
test
or
dec
pop
push
cmp
leave
aam
in
fistpl
cwtl
outsl
in
in
cmp
add
and
addr16
insl
mov
fnstenv
leave
jmp
sti
out
mov
out
adc
and
mov
std
sarl
jle
sbb
and
andl
mov
mov
push
sub
add
cltd
jns
ja
pushf
das
cmp
jg
jp
movsl
je
lea
mov
and
int
jp
xor
fadds
and
popf
pop
cmp
pop
xorb
mov
sbb
fcomp
add
cs
fcmovnb
outsl
xchg
dec
pop
push
sub
sub
jp
fsts
ret
int
dec
push
fimull
mov
out
mov
sub
mov
cmc
push
outsb
daa
das
xor
adc
xorb
mov
hlt
fldt
cmpsl
dec
mov
add
sub
andl
mov
movsl
pop
daa
pop
xor
and
fnsave
insl
aas
bound
push
adc
das
scas
adc
pusha
mov
mov
adc
sub
lds
scas
pop
jg
outsb
inc
fldl
or
nop
mov
popf
cmp
test
jmp
int
mov
add
in
pop
mov
subb
adc
setno
js
loopne
xlat
xchg
adc
out
dec
sti
mov
movb
mov
daa
lods
insl
or
mov
mov
pop
roll
xchg
pop
xchg
inc
fsubr
and
insb
push
add
cmp
xor
ja
adc
jmp
daa
dec
lods
mov
fists
sti
jmp
or
mov
stc
push
or
pop
dec
mov
and
sub
sbb
xor
insb
ret
repnz
and
out
jno
insl
imul
sub
mov
adcl
cli
or
cmp
mov
pop
jno
pop
js
cmc
fmull
or
andl
subl
or
and
sbb
fstpt
and
xor
stos
mov
jnp
shll
jg,pn
fdivrl
fwait
pop
xor
fsubrl
mov
insl
int
mov
and
arpl
mov
in
arpl
call
outsl
dec
xchg
jbe
xor
fwait
les
mov
push
jbe
pop
or
mov
int3
pop
movsb
imul
ds
iret
lods
imul
pushf
jmp
xor
bound
lahf
mov
shlb
jg
daa
out
pop
enter
xchg
and
into
pop
adc
fwait
mov
mov
ja
jg
sbb
dec
xchg
pusha
xchg
frstor
jno
mov
ret
das
lods
fmull
aad
popf
mov
les
and
clc
aas
adc
aaa
inc
mov
test
sbb
fnsave
pop
pop
mov
xchg
push
int3
sbb
mov
cltd
mov
pop
and
lods
adc
out
or
mov
sub
dec
enter
xor
movsl
pop
lds
push
fwait
aad
aaa
popf
mov
sbb
mov
sbbl
xor
pop
js
push
sbb
sbb
mov
arpl
xor
fisttpll
lods
and
cmp
sub
jo
gs
pop
addr16
mov
test
xor
sbb
cld
fcmovnb
cmp
mov
or
xchg
jne
iret
or
mov
sub
push
mov
mov
out
jbe
sti
jnp
sbb
movsb
and
mov
mov
mov
or
fbstp
dec
mov
inc
into
out
cmp
mov
iret
fildl
enter
movsl
int
jmp
cmpsl
cwtl
xchg
imul
les
imul
and
push
sbb
push
add
mov
jno
or
mov
add
mov
sti
ret
das
pop
fsubs
xor
orb
xor
adc
jo
and
pushf
fdivl
mov
sbb
cmovbe
jnp
sub
xchg
pop
push
sub
in
dec
out
loop
pop
and
rorl
fwait
cmp
adc
leave
or
jmp
lret
repz
mov
lods
adc
pop
mov
int
xorl
mov
pop
rclb
daa
notb
dec
jbe
push
lods
mov
mov
es
ret
add
xor
and
ja
push
xor
mov
and
fildl
pop
pop
jne
cmc
cmp
inc
sbb
shrl
jmp
popa
sub
ret
js
test
adc
sub
enter
lcall
mov
and
lods
inc
popa
mov
or
adc
jae
aaa
pusha
rcll
adc
sbb
push
enter
cmp
jno
mov
fisubrl
lock
sub
sub
lea
stc
mov
cltd
stos
jge
mov
in
jbe
mov
fstps
or
jae
imul
pop
xor
mov
jmp
cmpsb
std
pop
das
adc
cs
je
push
sbb
jnp
js
mov
pop
sub
cs
ljmp
mov
mov
or
jbe
or
cwtl
add
rorl
push
pop
inc
dec
rcl
cmpsl
pop
in
add
dec
mov
jb
scas
adc
mov
lods
mov
pop
dec
out
push
jns
ret
mov
pusha
pop
jmp
or
xor
imul
push
and
ljmp
adcb
js
fstps
cmpsb
pop
imul
ss
sub
sbb
add
iret
jmp
mov
into
add
xchg
xchg
movmskps
jns
and
add
mov
dec
xchg
bound
pop
adc
jno
mov
stos
lahf
cmp
das
repz
mov
mov
sub
adcb
cmp
jns
lret
adc
add
lock
ud1
jbe
rcl
cmp
stos
sub
mov
es
insl
pop
adc
lock
or
mov
cs
push
insl
loope
mov
shrl
or
dec
leave
add
mov
mov
lahf
dec
jnp
push
ja
pop
or
push
pop
ret
add
sbb
add
mov
adc
xor
dec
jmp
popa
xchg
imul
adc
and
jp
pop
xor
adc
frstor
xchg
pop
mov
sarl
jp
test
fsubs
sbb
cwtl
push
pusha
movsl
pop
xchg
dec
js
jbe
int
popf
pop
and
cs
sub
xchg
incl
adc
mov
sbb
add
ficompl
jecxz
stos
xor
xchg
jne
sub
jnp
sub
adc
mov
mov
add
or
outsb
das
dec
popf
cmp
imul
inc
shl
stc
outsl
pop
or
iret
xor
leave
ftst
cmp
in
dec
aam
je
popa
sub
lds
xchg
fwait
dec
std
and
sbb
dec
lret
mov
or
or
mov
das
int
xor
aaa
vpmaxsw
in
imul
cmp
xchg
outsb
adc
out
shl
sti
dec
sub
mov
xlat
jne
add
hlt
mov
out
test
pop
jg
stos
icebp
rcrl
jp
outsl
xorb
sub
pop
in
ret
jp
roll
sub
bound
aas
fildl
and
or
frstor
popa
cmpsl
mov
lods
jl
stos
test
jl
inc
mov
pop
mov
daa
adc
cmc
outsb
pop
pop
mov
fcmovnbe
cmpsl
mov
fimull
shrl
addb
adc
call
je
outsb
int3
mov
push
add
pop
xorl
cmp
es
leave
insl
imul
pop
cwtl
cmp
sbb
daa
or
js
xor
sbb
sbb
mov
mov
in
push
fldt
outsb
aas
jg
jo
ret
mov
mov
lds
inc
pop
sub
mov
or
adc
pushf
js
jnp
sarl
adc
mov
jp
pop
pop
movsl
scas
popa
dec
loope
sub
push
ljmp
push
shlb
or
fadds
lods
dec
pop
or
add
rorl
inc
scas
cltd
lea
and
mov
jge
adc
push
fwait
jecxz
adc
pop
xchg
test
push
push
dec
ja
int
lret
adc
in
add
fsts
push
fwait
dec
in
cmp
mov
mov
or
push
add
push
push
dec
sbb
in
loopne
mov
and
stos
mov
aas
xor
cmpsl
mov
and
in
add
repnz
mov
push
add
insb
xor
push
pop
mov
jnp
in
nop
addl
fisttpl
mov
or
add
cmpsb
ss
pop
sub
sbb
scas
js
icebp
cmp
bound
rcrl
mov
dec
add
push
xorl
mov
fildl
sub
rclb
add
jns
or
insl
xchg
insl
sub
aad
sub
dec
inc
xchg
fbld
das
inc
nop
xor
mov
daa
imul
mov
and
out
divl
mov
or
mov
aam
ss
sbb
nop
idivl
ljmp
cmp
or
leave
int3
pop
or
test
sbb
daa
push
lret
imul
mov
cmp
nopl
inc
pop
jo
xlat
cwtl
lahf
out
cmpl
mov
push
inc
mov
ss
mov
and
dec
pop
pop
or
mov
mov
outsl
rorb
insl
jmp
fstpt
jmp
cs
or
push
pop
lods
sbb
xor
add
adc
push
and
mov
or
daa
and
pop
pop
je
push
aad
insl
movsl
mov
xor
inc
sub
jo
inc
sub
and
jbe
jbe
pop
jle
shl
in
in
inc
mov
mov
xor
dec
inc
mov
fstpt
in
ss
ficomps
das
cmp
subb
loopne
mov
pop
fldcw
and
and
or
clc
in
in
add
add
cmc
shrl
lea
and
adc
adc
cmp
cmc
pop
fisttpl
sbb
test
jo
das
cmp
mov
movsb
in
xchg
push
outsl
fnsave
push
dec
mov
das
jle
and
xlat
adc
xchg
mov
or
stc
or
in
movsl
jmp
int3
outsb
pop
and
or
imull
insl
rol
imull
mov
mov
cmpsl
mov
iret
mov
and
repz
shll
pop
faddl
mov
xor
inc
ja
jmp
sbbb
dec
fnsave
aaa
inc
pop
imul
lahf
mov
mov
ja
negb
in
jge
sub
orl
cmc
sub
jmp
pusha
xchg
jne
or
inc
fcmovne
inc
mov
pushf
aas
add
outsb
mov
scas
int3
scas
ss
xchg
cs
es
leave
rcr
mov
pusha
and
and
cmp
mov
jne
mov
int
ret
cmp
insb
mov
pushf
data16
iret
xor
pop
jbe
aaa
fdivr
pop
pop
push
jae
in
mov
sti
scas
insl
icebp
xor
xor
mov
frstor
xor
sub
imul
lea
popa
lret
sti
xchg
or
andl
adc
fisubrl
stc
fwait
mov
nop
mov
pop
pop
test
je
popa
stos
and
push
dec
fwait
mov
push
fcomp
movhps
and
adc
insl
aas
mov
sbb
add
inc
ja
add
sarl
inc
inc
movsb
es
pop
push
and
in
aas
out
sbb
ss
outsb
ljmp
call
mov
fnstcw
mov
add
jle
jg
add
xchg
scas
jmp
push
mov
push
jmp
mov
notb
xorb
mov
push
or
ret
cmp
cmc
and
daa
ds
fwait
pop
cmp
jnp
cltd
decl
mov
add
stos
mov
insl
repz
bound
inc
das
xchg
ds
mov
jmp
pushl
into
xchg
ljmp
sti
int
pop
and
and
cvtpi2ps
mov
incl
rcr
push
js
in
and
jmp
xor
inc
insb
jae
ja
iret
pusha
js
push
sbb
push
dec
mov
cltd
pop
aaa
mov
mov
xchg
lods
xor
imul
rcr
ret
fstl
adc
loopw
sti
adc
lahf
xchg
div
or
pop
aaa
out
mov
mov
fdiv
cld
incl
test
aaa
cmpsb
sbb
pushf
push
test
lods
mov
dec
sbb
mov
pop
mov
popf
push
xlat
adc
mov
mov
loope
test
je
or
lcall
or
xor
dec
imul
movsb
or
mov
mov
jno
sbb
mov
jg
sbb
lea
sbb
xchg
js
movsl
push
mov
ja
les
mov
and
imulb
outsb
inc
dec
movsb
jnp
mov
mov
xor
mov
cmp
push
pop
push
adc
pusha
cmp
dec
pusha
ret
in
push
or
fdivr
call
jb
dec
in
int
fwait
cmc
dec
pop
and
mov
inc
mov
call
mov
cmp
imul
dec
jae
or
push
lea
xor
pusha
movsl
filds
fs
jg
aaa
andb
xchg
mov
int3
and
dec
lock
xorl
call
or
lds
sub
sub
popf
outsb
fwait
lahf
pop
jl
lock
pop
cmpsl
sbb
mov
leave
mov
jmp
stos
into
push
cmc
inc
lfs
in
jp
mov
cmpsb
roll
jmp
jno
sbb
aad
jne
and
addr16
cmp
jo
hlt
mov
popa
mov
call
and
mov
fwait
stos
sub
repz
inc
lret
ljmp
inc
or
add
hlt
push
je
push
cli
push
inc
cli
inc
inc
aaa
idivl
pop
mov
decl
push
inc
lock
rcrl
dec
xchg
push
iret
loop
out
pop
out
pop
and
pushl
in
test
mov
cld
ss
inc
adc
decb
addr16
test
push
out
sbb
pop
aaa
cld
pushl
cmp
icebp
xchg
or
stc
std
sarb
push
incl
sub
adc
and
add
push
xchg
pop
lret
loop
cld
lcall
xor
push
mov
push
hlt
mov
mov
pusha
xor
dec
push
in
ljmp
xor
mov
or
pop
mov
adc
ljmp
lock
bound
mov
inc
xchg
fs
jnp
bound
sti
lock
jg
pushl
fwait
sub
mov
push
scas
roll
lods
mov
incl
cld
inc
fldenv
add
fxch
lods
jge
imul
incl
sbb
cmp
pop
mov
xchg
lahf
call
sbb
xchg
shll
pop
dec
mov
fs
fcoml
lds
xor
out
outsl
mov
scas
mov
test
push
lcall
cs
fdivrs
es
mov
adc
fidivs
cmpl
mov
lcall
adc
sbb
mov
push
fwait
adc
lcall
xchg
call
ljmp
outsb
push
xor
push
cmp
push
adc
pop
inc
push
lcall
xchg
cmpsl
dec
neg
lock
sub
repz
dec
and
shl
insl
push
add
outsb
pop
cmc
jns
lret
push
aaa
push
dec
dec
fistl
shr
in
pop
push
adc
jle
decl
enter
fs
inc
es
adc
push
jp
bound
inc
scas
jg
fs
cltd
mov
call
mov
or
push
and
sub
stc
pop
test
or
leave
test
xchg
sub
das
sar
or
and
pop
sbb
mov
mov
cli
loopne
fs
int3
fdivl
shlb
test
dec
pop
mov
add
out
shlb
sub
test
call
std
cmp
or
xchg
hlt
lea
ljmp
iret
cwtl
loop
cmp
decl
dec
sub
add
lock
and
stos
inc
insb
sar
ljmp
and
mov
jecxz
imul
mov
sub
sub
push
add
inc
mov
rclb
adc
add
inc
test
or
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
incl
mov
lahf
scas
jge
pop
add
decl
repnz
inc
adc
xor
fistpl
mov
hlt
sub
cmp
ljmp
pusha
cld
pop
dec
xor
fwait
sbb
sbb
scas
adc
call
jge
add
ss
jo
cld
and
inc
testl
sub
push
inc
je
sar
pushl
add
adc
push
shrb
out
sub
out
mov
mov
aaa
ret
push
mov
sbb
ljmp
and
pop
mov
data16
mov
mov
push
ja
jg
leave
xlat
in
ljmp
jmp
lahf
das
insl
fistl
lods
cli
mov
mov
addr16
mov
xchg
in
push
push
mov
stos
mov
mov
fwait
inc
into
into
and
adc
ljmp
ljmp
sub
fucomip
ret
ret
jmp
icebp
push
ret
jbe
dec
in
subl
xchg
fnstsw
sub
cmp
in
addl
lds
cmp
popf
aaa
incl
orb
sahf
jle
call
data16
and
adc
xor
adc
call
push
cld
in
adc
push
fistps
sbb
pushf
fiaddl
mov
lcall
loop
aas
and
xor
dec
jl
jecxz
pop
dec
hlt
and
mov
aas
sarl
add
jecxz
lahf
mov
ljmp
dec
or
adc
lods
jmp
daa
pop
das
xlat
pop
repz
fcoms
sub
lcall
aaa
xlat
add
mov
sahf
mov
jg
cmc
inc
xorb
mov
push
and
stc
das
mov
lcall
das
jge
sbb
mov
aam
push
stos
jp
lret
orb
rcr
mov
mov
clc
call
into
cs
cld
xor
mov
mov
sbb
icebp
xor
sub
ss
ljmp
and
fisttpll
jns
add
cli
daa
jmp
mov
ljmp
add
arpl
fisubrs
adc
int
cmpsb
add
or
jp
frstor
add
jae
shlb
sbb
jg
dec
int3
mov
frstor
loopne
decl
cwtl
fwait
test
cs
inc
inc
cmpsl
andl
ss
arpl
add
ljmp
out
jmp
loope
sub
mov
sub
test
push
jecxz
sahf
ds
shll
cmp
mov
mull
xchg
out
jmp
mov
sub
inc
pop
push
jle
push
sbb
insl
sbb
loop
adc
sbb
xorb
xchg
mov
fsubl
incl
or
and
mov
iret
lock
movsl
mov
lret
in
fisubrl
mov
xchg
or
push
pop
add
stos
jmp
dec
push
and
jne
fcoms
nop
inc
sbb
push
push
lea
shl
fsubrs
jno
xor
xchg
js
xchg
mov
leave
xchg
push
pop
xor
mov
out
in
incl
jb
aas
in
pop
mov
inc
call
into
aam
sbb
or
test
addr16
lcall
mov
mov
xchg
and
pop
icebp
notl
fdivp
divb
dec
in
lahf
push
int
lcall
call
aaa
fmuls
cmp
jecxz
cwtl
adc
cmp
xchg
xor
es
inc
ljmp
cli
push
lea
pop
dec
and
adc
shr
enter
inc
mov
cmpsb
cmp
decl
mov
leave
inc
out
mov
in
jbe
sbb
lcall
fnstsw
pushl
sub
es
orl
cmpsl
xor
loopne
lret
andl
mov
incl
jnp
in
push
jmp
rcrb
aaa
lret
mov
xor
aaa
imul
cmp
push
pop
fbstp
std
pop
pusha
dec
mov
or
fdivs
dec
pop
sar
fisubl
mov
enter
mov
jecxz
mov
roll
fs
sub
cmc
icebp
lcall
cmp
fstp
in
inc
or
fistpl
test
mov
mov
lods
adcb
xchg
cli
sub
fists
cmpsl
sbb
insb
and
dec
push
adc
mov
ja
andb
loope
pop
xchg
xor
push
mov
outsl
shr
and
cmp
xor
pop
xchg
mov
out
call
jl
les
lods
shl
loope
daa
leave
or
es
cli
ss
adcb
or
add
rorb
mov
ss
adc
cwtl
lods
test
dec
movsl
incl
cld
or
aam
jo
add
adc
dec
imul
inc
into
outsb
mov
dec
or
mov
lret
and
mov
cmp
jge
jae
call
je
lock
fxch
inc
leave
dec
mov
outsl
mov
repz
stc
sti
jno
ja
movsb
jmp
and
jmp
inc
fs
or
js
lock
std
dec
mov
fcmovb
inc
cmp
mov
icebp
incl
mov
jl
pop
sub
cs
ds
mov
jmp
dec
cltd
dec
insl
in
pop
cmp
ret
adc
loop
mov
out
call
or
cli
jmp
dec
mov
push
cs
sub
les
out
push
jmp
inc
repnz
xchg
pushl
stc
jns
lock
add
loopne
loop
pushf
cmc
mov
mov
in
negb
sbb
dec
pop
fstps
or
mov
out
mov
rcll
lods
pop
mov
pop
out
jns
adc
push
fimuls
std
repz
push
imul
jmp
dec
mov
sbb
mov
mov
or
leave
push
test
dec
test
fwait
pop
mov
shrl
pop
mov
inc
xchg
xor
jl
xchg
mov
jl
ljmp
clc
pop
dec
call
cli
mov
jns
outsb
xor
es
mov
incl
jae
xchg
es
jbe
add
insl
xlat
punpckhwd
shrl
inc
fdiv
adc
ja
jle
adc
mov
in
ret
lret
pop
sub
imul
xor
call
cmpsb
jl
iret
jbe
loopne
cwtl
xor
or
and
gs
sub
and
xchg
popa
jecxz
ds
mov
jl
cmpsb
test
iret
aas
ret
in
gs
ret
ret
pop
push
xchg
mov
sbb
dec
pop
popa
test
ficoml
xor
jl
jp
dec
mov
jmp
lcall
xchg
inc
cmp
icebp
push
xchg
cltd
es
sbb
or
xchg
call
mov
ds
sbb
fdivp
or
push
adc
mov
inc
jno
fcmovnu
dec
rcrl
inc
loopne
shll
dec
push
jns
into
mov
or
jg
sti
cmpb
loopne
popa
mov
mov
dec
inc
inc
fistpll
jg
sbb
mov
adc
and
nop
mov
rcr
dec
incl
mov
jg
mov
out
xchg
cmp
jnp
dec
jg
jmp
lret
push
popf
addr16
fnclex
mov
dec
outsl
repz
daa
loop
daa
sbb
dec
jb
ja
push
fwait
lret
loopne
iret
push
sbb
sbb
push
test
adc
dec
adc
outsl
mov
insb
aam
aas
lret
mov
push
out
clc
aam
sub
xchg
mov
pop
sub
dec
jb
movsb
sbb
ret
push
or
cmp
aas
xor
sub
cmp
test
loope
lcall
out
mov
inc
sar
lcall
nop
dec
jo
sti
adc
clc
sub
pop
inc
pop
pop
jmp
shl
mov
push
gs
and
dec
and
pop
pushf
imul
cs
xchg
push
movsl
sti
and
and
lcall
or
cld
fldt
and
jo
xor
cltd
aas
mov
pop
mov
pop
cmp
out
pop
xchg
adc
inc
mov
in
push
sub
decl
adc
cmp
outsb
pop
pop
xorl
int
cmp
sub
or
xchg
jg
decl
push
lods
loopne
ret
scas
push
and
les
lds
mov
incl
in
xchg
into
inc
cli
and
sbb
add
jmp
dec
rorl
push
mov
jmp
jnp
sub
push
mov
push
inc
push
or
mov
ret
out
mov
dec
mov
cs
push
rcrl
xor
rclb
push
pop
mov
mov
cli
xor
insb
movsl
cmp
insb
in
movsl
mov
inc
mov
xor
inc
ss
or
mov
xorb
push
adc
pop
stos
jl
test
fimull
cmpsb
cmp
jg
decl
jne,pn
leave
cmp
das
lock
pop
push
inc
cmpsl
xor
jnp
fadds
outsl
stos
addr16
mov
cmpl
test
or
call
jg
cmp
or
xchg
rcll
cmp
rcrl
mov
jp
cmp
xchg
aaa
sub
cmp
mov
sub
pop
andl
pop
pusha
addb
lods
add
inc
xchg
test
adcl
fnstenv
jne
loop
mov
sub
mov
jecxz
rol
push
jo
pusha
mov
cmp
add
adc
sbb
xchg
mov
fnsave
fiaddl
cld
in
insb
jno
inc
inc
jbe
out
mov
add
test
cmp
pop
pop
out
and
or
fldcw
xor
inc
ror
shlb
sbb
setne
dec
xchg
decl
mov
mov
lcall
sub
xor
mov
out
lcall
clc
mov
or
mov
jecxz
lcall
pushf
dec
mov
lcall
adc
mov
inc
sbb
dec
xchg
into
push
cmc
cltd
dec
or
adc
adc
ljmp
or
mov
jae
loope
cmp
add
pop
lock
in
addl
xchg
xchg
adc
shlb
xlat
nop
inc
mov
sub
iret
sub
sub
sbb
xlat
jns
jmp
nop
pop
outsb
cmc
adc
adc
gs
ja
or
decl
cwtl
and
arpl
mov
push
jge
aam
mov
jg
test
xchg
sub
out
mov
sub
xchg
cmc
in
jne
cmpsl
data16
add
clc
xor
sub
adc
incl
nop
cmp
enter
mov
mov
cmpsl
insl
imul
call
ret
xlat
insl
jmp
divl
mov
dec
push
cli
roll
jae
clc
in
xor
cli
mov
movsb
cmp
xchg
xchg
dec
cli
js
lea
jmp
pop
inc
pop
dec
mov
sbb
in
test
out
loopne
fstpl
cmpsb
stos
jne
add
imul
jmp
jmp
sti
push
push
pushf
push
popa
jae
scas
mov
xor
push
mov
cmpsl
sbb
test
pushl
cli
into
xor
insb
push
repz
dec
mov
call
mov
sub
adc
fiadds
and
lods
fcoms
jle
or
cs
jmp
push
icebp
mov
mov
andb
lods
stos
cltd
lea
fstl
decl
les
fadds
shrl
sub
lea
fdivr
out
sbb
in
mov
lcall
int
mov
popa
aas
pop
and
in
push
int
or
scas
add
push
incl
cmp
inc
or
in
addps
imull
mov
test
movsl
xor
push
jge
setae
and
mov
popa
pop
jne
movsl
cmpb
je
pop
sar
incl
idiv
mov
rcrl
inc
mov
push
sar
pop
push
dec
jg
pop
arpl
mov
push
pushl
and
sub
and
movsl
cs
dec
xchg
loopne
jg
jp
sbb
sbb
js
cmp
dec
cwtl
xor
jns
in
xor
xchg
sub
adc
inc
and
xchg
ds
mov
inc
pop
arpl
or
adc
xchg
lock
sbb
sbb
inc
ret
or
clc
lods
je
jmp
cmp
shll
sbb
mov
lods
sub
ret
xchg
xchg
mov
cld
lcall
insb
test
and
les
inc
inc
adc
mov
or
loopne
pop
dec
rcl
test
sub
out
jmp
push
mov
scas
jb
sbb
loope
test
push
mov
mov
jo
enter
das
pop
sti
pop
mov
mov
push
inc
les
andl
mov
add
jmp
inc
jecxz
mov
mov
roll
add
push
imul
xorl
stos
call
fidivs
or
cwtl
ljmp
sbb
pop
jns
pop
xor
lcall
scas
outsl
cs
adc
push
in
rcrb
dec
cmpsl
xor
sti
cmp
fdiv
ret
cwtl
mov
cltd
push
popa
jg
addr16
cmp
test
lods
cmc
in
sti
and
js
inc
xchg
jmp
jmp
rolb
mov
mov
ffree
jecxz
out
xchg
add
pop
push
cmpsb
in
jmp
cmp
mov
jle
lahf
pop
add
call
adc
sahf
ss
inc
rcrb
ret
sbb
jmp
scas
jmp
out
out
imul
mov
outsb
sbbl
or
push
loopne
addb
ljmp
test
imul
clc
repnz
in
jmp
fldenv
movsl
aaa
mov
adc
lret
xchg
pop
rcrl
cs
adc
call
lock
ret
pushf
pop
xchg
push
loop
mov
and
testb
pop
cmp
mov
jbe
add
outsl
mov
repnz
arpl
pop
cld
lcall
jmp
xchg
fbld
inc
or
sti
mov
imul
out
cli
fdiv
ficoml
push
jl
sbb
rcll
mov
push
incl
call
and
mov
mov
push
or
imul
lcall
xlat
aad
clc
subb
das
adc
and
lahf
out
ret
cmp
decl
or
js
ret
or
or
add
scas
dec
out
daa
out
mov
jmp
or
shrb
cmc
cmp
arpl
or
cs
stc
xor
push
ret
jp
jnp
xor
push
cmpb
jmp
lret
push
adc
decl
in
scas
xchg
das
dec
pop
inc
daa
mov
xlat
icebp
push
pop
mov
iret
aad
sahf
nop
pushf
jns
adc
decl
ljmp
ds
adc
lahf
es
int3
sbb
faddl
mov
icebp
outsl
mov
popa
lahf
or
scas
add
repnz
pop
jp
mov
jg
or
push
inc
subl
pop
inc
dec
test
xor
mov
sub
pushl
jb
adc
mov
jne
bound
mov
mov
je
ljmp
pop
nop
nop
dec
in
ds
push
mov
push
fidivl
inc
pop
not
fcoms
dec
dec
fsubrl
call
das
scas
std
mov
andb
dec
mov
pop
insb
loope
sub
call
int
imul
repz
in
outsl
pop
shrl
mov
push
adc
jmp
and
xchg
out
sbb
cmp
call
lock
inc
cmpsl
shr
ficoml
xchg
mov
loopne
inc
mov
loopne
cmp
dec
mov
scas
mov
add
in
loopne
in
sar
decl
inc
and
inc
sub
in
and
mov
adc
mov
imull
pop
pushl
push
out
jmp
mov
jmp
inc
sub
cmp
mov
aas
mov
lea
adc
xchg
out
cli
lcall
and
int
sub
pushf
mulb
ljmp
fwait
lret
mov
icebp
movsb
sbb
dec
xchg
push
or
sbb
test
idiv
decl
add
mov
sub
mov
adc
out
aas
ja
mov
fdiv
outsb
mov
inc
daa
repz
dec
test
stos
mov
stc
jl
mov
jl
repnz
mov
add
addr16
test
call
pop
into
imul
xor
aad
outsl
stos
out
mov
dec
and
mov
out
arpl
or
pushl
mov
out
sbb
or
pop
and
adc
mov
fcomip
ljmp
stos
sbb
cmpl
xchg
outsb
das
xchg
pop
mov
dec
std
ljmp
adc
rcll
out
mov
add
and
and
decl
push
jbe
leave
cld
mov
aaa
faddp
mov
jmp
call
dec
imul
rorb
xor
push
push
insl
jbe
or
aaa
loopne
mov
lret
ljmp
mov
jbe
sub
push
jle
data16
xchg
adc
mov
inc
sbb
cmpsl
mov
incl
clc
xchg
fwait
jl
xchg
lods
ja
xor
mov
lcall
gs
cmp
incl
cmp
std
jbe
fwait
cld
ja
cld
cmp
stos
push
iret
or
std
ss
fwait
push
xchg
aas
pop
test
or
out
mov
loop
lcall
dec
mov
rorb
jb
mov
pop
xor
dec
pop
leave
pop
cli
shr
pusha
imul
lcall
sar
jno
push
loopne
dec
fwait
stc
out
jle
jmp
cmpsl
aaa
xchg
subl
decl
test
sti
out
dec
mov
lcall
in
mov
xor
or
pop
sbb
stc
inc
into
out
cmp
mov
outsl
jbe
pop
int3
mov
jae
push
add
or
lods
push
dec
outsl
lret
ja
ljmp
enter
mov
mov
pop
push
fs
xchg
scas
in
mov
and
dec
bound
inc
int
fistpll
inc
mov
fisubrs
push
repnz
sahf
cmpsl
add
pushl
nop
xor
fldcw
dec
imul
or
test
ljmp
ja
mov
ljmp
adc
add
mov
call
xchg
insl
fcomp
adc
adc
ss
fs
xchg
ja
bound
addl
icebp
dec
test
xor
pushl
outsb
inc
aad
cmp
in
and
push
adc
cmp
idivb
pop
int
inc
jl
dec
xlat
cli
pushl
fcoms
mov
mov
inc
jmp
xor
fistps
gs
out
aad
mov
jl
adc
test
mov
xchg
dec
jg
sbb
mov
cmc
int
test
insl
mov
stc
mov
xor
imul
cmp
faddp
cmpsb
je
cmp
sbb
inc
fmuls
sbb
in
or
or
fidivs
mov
mov
jns
pop
clc
xor
div
sar
call
dec
inc
ja
jns
pop
push
test
push
outsb
xchg
je
sbb
and
test
xor
jns
call
je
add
or
mov
dec
jne
jl
scas
cmp
xor
pop
inc
test
dec
or
jmp
sub
das
jecxz
dec
movsb
sub
adc
ss
sub
out
mov
jle
arpl
loope
xor
xchg
xchg
int
or
push
ja
xchg
dec
mov
push
mov
fcomip
jmp
push
push
not
stc
sbb
jl
nop
outsb
push
cmc
inc
out
jns
aas
stos
jg
pushl
sbb
inc
faddl
adc
fnsave
adc
shl
add
mov
pushl
sub
xor
push
popa
push
subb
xchg
das
fs
incl
pusha
push
adc
out
clc
rcr
jmp
add
clc
or
add
pop
ss
imul
push
mov
mov
add
cmp
inc
push
dec
fisubl
jae
or
jae
xchg
mov
lcall
call
test
cmpsb
or
inc
push
stos
movsb
leave
sub
add
mov
cli
sub
cmp
call
sub
int
cmpsl
push
rorl
loope
jge
sub
std
mov
insl
pop
mov
xchg
xor
fildl
inc
fimull
push
jmp
or
stc
jb
enter
mov
sbb
mov
ja
add
fldt
ret
mov
mov
push
out
jg
jg
mov
mov
call
push
insl
mov
incl
adc
jmp
add
xchg
mov
cmpsl
stc
pushl
pop
mov
dec
cmp
mov
cld
sti
mov
push
inc
mov
ltr
pusha
dec
or
imul
cli
push
and
inc
mov
cmp
fisubrl
dec
out
push
arpl
and
mov
xor
sub
cmp
mov
xor
out
je
inc
dec
add
lcall
testl
xlat
jle
jge
adc
inc
cmp
jmp
repnz
xor
ret
add
adc
dec
or
pop
mov
inc
fbld
jecxz
xchg
adc
push
std
sti
mov
sbb
push
adcl
adc
std
jae
popa
aas
push
push
adc
mov
mov
mov
add
jg
incl
jge
mov
nop
add
nop
mov
nop
sub
ret
add
inc
ljmp
scas
stos
add
test
jne
jge
gs
mov
cmp
mov
push
and
fwait
mov
dec
adc
or
ss
enter
outsl
xchg
xchg
ds
jg
jmp
inc
mulb
pop
fimuls
mov
dec
ficompl
cmp
sbb
jmp
mov
popf
lcall
testb
add
push
push
int3
pop
decl
hlt
test
shll
je
mov
fbld
sahf
mov
shl
das
lret
or
ljmp
rcrl
fbstp
pop
lds
addr16
mov
ljmp
hlt
out
dec
sbb
mov
pop
sbb
xchg
mov
xchg
mov
lcall
cmp
cwtl
inc
dec
xorb
jmp
scas
xor
int
std
clc
out
lds
into
test
mov
mov
lcall
cli
popa
xchg
sbb
outsl
clc
add
adc
xchg
mov
inc
imul
lea
inc
sub
sub
pushl
inc
data16
mov
es
repz
bound
jg
add
incl
push
int
and
call
push
jns
or
inc
test
ljmp
adc
xchg
mov
es
dec
inc
xchg
jmp
dec
jmp
push
sub
jnp
sbb
mov
into
shlb
jl
or
leave
popa
xchg
scas
decl
xor
add
and
mov
mov
dec
repnz
or
jmp
adc
lods
test
pop
stos
lret
std
add
ret
fidivrl
cmpl
mov
mov
jl
ljmp
mov
mov
out
test
ja
outsl
ljmp
mov
notl
mov
lods
pop
sbb
testl
fldt
sub
xor
jbe
aaa
pushf
jl
mov
jo
ds
iret
cmp
std
insl
mov
jg
mov
test
or
popa
xchg
enter
enter
out
cli
add
push
in
xchg
in
fdivs
fidivrl
dec
fdivrp
mov
mov
mov
sub
decl
pop
outsl
or
mov
or
dec
inc
sbb
icebp
sub
pop
mov
jmp
test
dec
aas
push
scas
test
decb
dec
jle
xchg
popf
jae
and
sbb
lea
cmp
popf
sbb
pop
out
jo
ja
jge
das
lds
push
ret
in
jecxz
ljmp
daa
sbb
push
dec
cmp
lahf
fbld
call
jmp
dec
pop
xchg
push
mov
inc
imul
mov
inc
shrl
or
ljmp
aam
adc
xor
xor
dec
out
js
or
inc
add
test
iret
sbb
incl
xchg
or
adc
lret
mov
loope
mov
adc
clc
incl
data16
push
push
adc
std
xlat
xchg
jge
dec
sbb
fstpl
movsb
sub
adc
lcall
dec
pop
mov
inc
sub
mov
jmp
call
adc
add
push
mov
push
in
fsubrl
aaa
inc
mov
xor
adc
je
lods
dec
scas
xlat
pop
repnz
push
mov
xchg
jo
jmp
orl
or
xor
jo,pn
mov
pop
jbe
je,pn
xor
roll
call
cld
and
add
ss
sahf
fldenv
imul
incl
in
xor
aaa
xor
cltd
and
sub
test
cmp
pusha
incl
and
lods
and
cmp
iret
loopne
test
pushf
fnstcw
mov
sar
jp
push
lahf
testl
sbb
jno
mov
ljmp
xchg
iret
cmp
ror
add
nop
pop
lock
cmp
imul
movsb
incl
outsl
popf
ret
dec
imul
jae
test
pop
dec
rcl
into
ficompl
mov
xor
mov
movsl
scas
xor
decl
push
and
cmp
lea
cmc
inc
in
daa
je
out
jmp
xchg
je
outsl
push
add
jmp
jbe
lahf
cli
ret
jbe
fildl
sbb
test
int3
or
jmp
inc
mov
cmp
cmp
fistpll
xor
add
jo
mov
mov
into
xchg
lods
insb
ret
movsb
cli
dec
and
pushl
adc
aaa
cmp
in
dec
repnz
out
mov
aam
insl
mov
jl
dec
out
sbb
sbbb
ljmp
call
xor
or
scas
in
popa
test
cmpsb
mov
andl
ds
decl
scas
negb
lds
sbb
pop
adc
scas
out
out
fildll
lret
xlat
sub
jbe
sbb
add
das
mov
mov
lcall
loope
inc
cmpsl
adc
lcall
cmc
sub
jne
sub
mov
data16
ud0
push
xchg
inc
mov
xchg
add
insb
xor
xchg
in
lret
sti
mull
decl
sarb
movsb
mov
imul
xor
jne
inc
imul
pushl
push
aam
es
mov
lods
jmp
mov
mov
nop
mov
lcall
scas
pusha
cmc
cmp
aad
push
pop
ja
lcall
mov
mov
adc
pop
icebp
adc
jbe
test
sbb
sti
push
decl
das
cltd
xchg
adc
in
jae
pop
push
rcr
lcall
cli
ljmp
ljmp
xor
hlt
push
outsl
or
and
aad
fidivs
cmp
das
lret
idiv
push
decl
sbb
xchg
daa
addr16
or
loopne
or
fs
mov
js
addb
add
jge
in
addr16
in
lret
and
out
ljmp
rclb
pop
cmp
sub
mov
lret
sbb
cmpsb
mov
clc
rcl
jns
pop
push
ja
mov
mov
adc
sbb
popa
sub
jecxz
jmp
scas
add
push
and
decb
ss
add
pop
movsl
lcall
push
inc
sbb
les
mov
fucom
jbe
dec
scas
movsb
add
xchg
decb
stos
decl
fdiv
and
xor
xor
arpl
int
icebp
into
test
sbb
jg
ret
subb
sub
adc
pop
or
cmp
mov
aad
in
adc
lret
xor
fwait
or
adc
push
lcall
cmp
pop
xor
jl
xchg
dec
call
jp
or
xchg
push
test
incl
cmc
mov
mov
dec
adcl
test
mov
call
mov
or
mov
add
xor
rcl
test
outsl
es
adc
mov
mov
mov
push
sub
loope
push
fidivl
xchg
cmp
add
ljmp
arpl
inc
dec
or
mov
lret
cwtl
mov
jecxz
or
ss
icebp
mov
mov
adc
into
lods
aad
dec
add
and
inc
aad
pushl
dec
fisttpl
push
mov
cmp
scas
mov
pop
or
shl
jmp
lcall
xchg
fcmovbe
jle
dec
bound
mov
cld
add
fdivs
shl
mov
sub
and
incl
jle
sub
ret
push
push
inc
jmp
inc
jo
aaa
or
fcmovne
jg
decl
cmpsl
mov
cld
and
or
cwtl
xor
sti
mov
cmp
jne
jg
adc
sbb
mov
sub
outsl
outsb
mov
inc
shll
adc
fstpt
inc
bound
test
add
add
sub
test
push
add
subl
inc
add
fs
or
inc
test
or
xor
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
inc
add
add
fnop
pushl
push
or
cld
sub
sub
sbb
xlat
push
cmc
sub
lahf
mov
scas
or
sbb
decl
cwtl
pushf
inc
fstps
adc
dec
and
or
push
fwait
jnp
outsl
stos
sub
jmp
rol
sahf
out
xlat
mov
jg
add
cmpb
shll
pop
xlat
sbb
and
movsl
insl
lea
jmp
arpl
and
or
jge
push
or
jg
decl
loope
add
push
and
mov
xchg
mov
jbe
inc
xorps
dec
sbb
fdivrs
xchg
lahf
sti
mov
jmp
mov
out
nop
das
push
loop
ret
fisttps
sub
sahf
lock
jg
inc
jb
sub
cmpsb
stos
jg
rorl
inc
sbb
js
lcall
mov
lds
icebp
cli
in
shrl
mov
in
inc
daa
cltd
subb
cmp
ja
sbbb
call
mov
or
ja
mov
jp
mov
push
jns
sub
mov
adc
enter
cmp
sbb
in
in
in
cmp
mov
pop
mov
and
pop
js
jge
xor
sub
cmp
xor
pop
paddd
adc
mov
mov
jns
nop
ja
pushf
popf
sbb
int3
aas
sbb
adc
mov
popf
sbb
fucomi
xchg
or
sbbb
ret
insl
ror
mov
pop
test
js
sbb
mov
cmp
outsb
das
sub
lea
adc
test
mov
scas
fisttpl
or
loope
pop
dec
sub
pop
jno
not
lahf
pushf
xor
ror
mov
xor
lret
mov
pop
call
pop
cmp
dec
mov
or
jo
adc
mov
mov
pop
pop
and
and
fdivrs
and
sbb
sub
popf
test
and
and
dec
adc
mov
adc
mov
mov
dec
sbb
int
sub
or
pop
sub
jg
xor
mov
mov
lds
lods
mov
cmp
out
and
xchg
mov
ja
pushf
arpl
and
outsb
mov
outsb
insl
xor
jge
das
jbe
add
sub
xor
and
cmp
insl
jb
adc
loopne
dec
das
mov
rcrl
sbb
leave
cmp
mov
loopne
enter
or
xchg
push
pushf
mov
std
in
stos
adc
or
out
or
mov
or
xchg
testl
pop
mov
cmp
fcmovne
out
std
adc
mov
flds
mov
jnp
outsl
fisubrl
test
jecxz
mov
push
in
sbb
cmp
mov
xchg
ret
fcmovne
flds
popa
inc
btc
xchg
pop
popa
jb
jbe
mov
mov
mov
pop
dec
xor
jns
aas
mov
and
or
inc
mov
fldt
xchg
movsl
dec
cmp
stos
and
jge
aaa
pop
andb
in
pop
jo
fstpl
push
mov
mov
cmpsl
pop
sbb
outsb
jg
paddsw
push
lret
and
popa
aaa
or
pop
pop
aas
popf
sti
jbe
and
xchg
fs
mov
das
aas
lea
pop
lock
lea
pushf
sti
sbb
cmp
or
lds
mov
mov
stos
cs
sub
cmova
data16
xor
orb
jbe
lahf
mov
push
fmull
arpl
lds
fcmovnu
pop
sub
pop
lods
outsb
ja
mov
xor
iret
add
enter
stc
ja
repz
shlb
adc
in
lds
int3
jle
mov
jge
cwtl
loopne
sub
cmpsb
cmpsl
sahf
lahf
pop
sub
lret
xchg
lea
xor
or
mov
pop
adc
ret
mov
enter
pop
loop
add
add
pop
jp
fs
jns
fs
outsb
adc
mov
xor
cmp
mov
mov
enter
mov
mov
js
xor
pop
push
aad
fwait
loopne
lahf
les
or
mov
shr
scas
or
rorl
mov
sbb
jmp
jge
ss
stc
sub
or
jae
insl
mov
insl
test
cmc
cmp
jg
adc
cmp
dec
push
scas
jmp
cmp
adc
sti
and
mov
pop
cmpb
cmp
sbb
xor
gs
pushf
loope
xchg
inc
fisttpl
popw
test
dec
cmpl
in
mov
outsb
fwait
je
bound
sbb
sub
sub
setp
xor
or
and
pop
mov
adc
data16
cmp
flds
dec
jo
xor
jp
lea
pop
jo
rol
in
add
inc
jno
repnz
xor
fwait
adc
iret
gs
test
cmp
or
pop
jo
mov
pop
xchg
fbld
lret
mov
push
xor
leave
or
in
cmpsb
mov
adc
into
jbe
sbb
dec
adc
xor
dec
mov
insl
pop
into
outsb
aaa
pushf
mov
insl
cmp
inc
xor
mov
loopne
arpl
push
pop
jo
pop
addr16
out
in
or
loopne
andb
js
and
mov
test
or
iret
pop
dec
lahf
movsl
stos
fsubl
loopne
fwait
lock
loop
xchg
mov
int3
sub
mov
pop
and
mov
jbe
inc
mov
mov
in
mulb
mov
dec
jo
add
add
dec
loop,pt
push
lods
mov
pushfw
fdivr
adc
fwait
ja
popf
pop
mov
or
fucomip
notb
mov
das
adc
fisttpl
jns
fwait
or
inc
js
pusha
int
cmp
jo
mov
cmpl
mov
cmp
sbb
fsubl
sbb
out
mov
mov
cmp
mov
xchg
prefetch
aas
rcll
mov
jne
gs
push
scas
sbb
mov
es
ret
sarb
or
psubw
sahf
mov
cmp
cmp
mov
xor
loopne
negl
jecxz
jmp
out
mov
in
cmp
test
mov
stc
or
pop
leave
xor
xchg
fcmovnb
lea
subb
jne
push
xchg
outsb
mov
add
xchg
pushf
push
xor
and
addr16
das
popa
jns
in
adcb
dec
mov
rcll
jle
fs
bnd
push
dec
and
jnp
sbb
andl
and
mov
pop
cltd
xlat
jnp
mov
leave
adc
loope
cmp
cmp
fwait
adc
sbb
mov
jg
aam
adc
cs
lods
lods
cltd
mov
xchg
sbb
jbe
jecxz
out
mov
mov
fiaddl
fwait
rolb
pushf
int3
pop
daa
jae
pop
xor
sbb
lea
jbe
mov
pop
cmp
ret
sub
jo
or
fdivl
loope
pop
sub
inc
mov
scas
cwtl
fsubrl
in
outsl
xor
outsb
xlat
test
sbb
cwtl
das
stos
fistl
fcompl
mov
je
aad
ret
leave
enter
adc
leave
popa
jge
leave
enter
in
and
jbe
push
mov
loopne
in
test
sub
outsb
push
mov
xchg
das
popf
mov
sbb
aas
int3
mov
xchg
lret
sbb
xchg
shlb
fistl
lods
sbb
roll
mov
pop
sbb
xor
mov
mov
xchg
hlt
outsl
jg
fistpl
mov
in
packuswb
pop
xor
xchg
mov
aas
mov
mov
pop
cmp
fs
outsb
daa
addb
or
adc
in
sbb
sub
add
mov
daa
ss
daa
insl
imul
cmpsb
cmp
stc
loopne
outsb
ja
aas
pop
adc
pop
out
outsb
push
pop
or
lds
push
fstpl
mov
ficompl
fists
stc
imul
cld
movsb
adc
cmp
cmp
popf
jns
sub
pop
ret
add
scas
sub
xor
sub
stos
movsb
mov
jmp
mov
cmc
adc
jne
loopne
int
pop
sbbl
iret
stos
fsubrl
jmp
daa
ror
mov
cmpsb
add
stc
mov
dec
xor
dec
repz
ret
mov
add
xlat
fistpll
fistpl
out
enter
popa
xchg
xchg
push
outsl
cld
lods
cmp
aad
lods
sbb
fwait
lods
testb
js
stos
cmp
shll
fisubl
adc
push
ret
leave
fldcw
pop
or
repnz
fmuls
jbe
aas
jmp
or
lahf
jg
cmp
repnz
pop
jo
jbe
int
out
or
in
or
push
pop
and
and
xor
inc
cltd
and
push
push
pop
jbe
cmpsb
sbb
mov
xor
lods
inc
in
repz
mov
fildl
mov
or
in
leave
movsl
stc
add
push
or
and
pop
fwait
into
or
push
mov
insb
mov
enter
pop
lret
sub
pusha
push
out
sbb
mov
dec
jmp
je
in
add
ss
adc
insl
test
in
mov
mov
in
fldcw
imul
push
stos
dec
js
or
ja
imul
pop
shlb
cmp
cltd
loopne
jp
pop
add
outsb
push
fdivl
mov
cltd
sarl
leave
enter
mov
sbb
cmp
rol
sbb
daa
pop
arpl
fdivs
fisubl
or
xor
mov
mov
sbb
setae
mov
das
xorl
jns
pusha
sbb
mov
lock
insl
outsl
mov
mov
cmp
jns
and
jo
mov
jecxz
inc
sbb
movsl
enter
addr16
leave
or
mov
aas
mov
sub
in
rcll
sub
inc
fidivrs
in
in
mulb
cmp
and
in
aam
xor
mov
outsl
icebp
push
stc
or
mov
xlat
testb
adc
jo
ret
jns
adc
dec
sbb
ja
jbe
sbb
adc
pusha
sti
loop
outsb
daa
mov
xchg
jmp
test
mov
adc
lcall
pop
je
leave
or
sub
jne
leave
add
loope
sub
sbb
vpsraw
or
fcoml
dec
fisubs
fistps
pop
sbb
mov
popf
sbb
jb
enter
adc
pop
dec
xchg
vmread
les
mov
push
adc
sti
dec
test
repnz
inc
mov
mov
jmp
mov
stos
sbb
lret
fistl
jo
pop
push
test
sub
adcl
movsb
fxch
and
pop
rorb
dec
cmpsb
imul
outsl
inc
loopne
mov
jp
leave
leave
adc
or
jnp
faddl
mov
xlat
ljmp
push
jmp
inc
push
jmp
sbb
add
jne
or
leave
cmp
gs
pop
or
ret
sbb
and
cmpl
or
roll
scas
cmp
aad
cmpsl
sarb
jmp
sub
adc
popf
sbb
push
pusha
jne
and
jbe
mov
jne
in
mov
jns
out
jge
outsb
mov
mov
add
insl
mov
sarb
sub
aad
pop
push
fsubrl
loope
jp
in
dec
test
or
call
inc
adc
adc
jbe
rcll
add
in
sbb
daa
jo
shrb
or
insl
pop
mov
xor
movsb
add
inc
stc
xor
scas
insl
lret
add
or
loopne
ss
sbb
pop
enter
ja
scas
fwait
outsb
jae
adc
aad
or
outsb
aaa
fcompl
cmp
xchg
jp
dec
pop
cld
fwait
mov
mov
mov
dec
dec
addr16
and
push
mov
icebp
dec
adc
aad
pop
jb
add
or
mov
or
jo
and
push
gs
subl
shl
or
lods
adc
mov
rorl
outsb
mov
ret
inc
mov
fbld
rcll
push
xor
leave
fstps
inc
mov
push
push
inc
ss
mov
xor
sbb
inc
and
sub
mov
mov
fildl
mov
pop
cltd
xchg
rcll
pop
push
es
jle
or
adc
sbb
mov
js
insl
js
bound
push
ja
or
mov
scas
sti
xchg
and
fstpl
xchg
pop
insb
lds
jo
lahf
fwait
pop
decl
mov
push
aaa
dec
pop
insl
popl
and
dec
mov
mov
adc
hlt
mov
sbb
cmp
jge
jp
cs
jg
xor
cmp
pop
out
and
adc
mov
pop
rcrb
push
lods
aaa
or
scas
mov
jne
nop
mov
dec
inc
in
add
test
jbe
loopne
mov
sbb
jb
ret
in
push
pop
testb
fisubrl
iret
jns
ss
movl
addr16
mov
cs
jg
popf
pushf
and
addr16
inc
fildl
dec
es
inc
push
or
cmp
cld
lods
aaa
xorl
fxch
outsl
out
cmp
jg
cmp
cmp
pop
out
jnp
cmp
pop
fwait
lods
nop
mov
mov
jp
fwait
sbbb
in
jbe
pop
cwtl
jg
pop
push
iret
int3
sbbl
aaa
aas
addr16
dec
inc
pusha
rorb
insl
cmp
cmp
sub
les
jno
jbe
subb
addr16
fcompl
fs
add
cmp
daa
fstl
or
in
sbb
das
or
push
or
xor
fldt
icebp
push
cmp
xchg
sub
aad
adc
sub
pushf
dec
sub
pushf
mov
lret
shrl
movsl
inc
out
mov
mov
insl
fs
jns
lods
adc
stos
mov
cmpsl
adc
imul
mov
out
mov
in
add
aas
in
dec
fucomi
pop
fsts
imul
xchg
xchg
mov
imul
int3
xchg
xchg
cmp
in
sub
mov
inc
ret
fildl
jns
xor
or
and
lock
pusha
in
sbb
xor
fwait
cld
pop
jl
rcl
sbb
mov
mov
mov
nop
mov
adc
cmpsl
lds
das
enter
fmuls
out
dec
stc
sbb
adc
xor
dec
out
cmp
jmp
fldl
int
outsl
cmp
sub
outsl
fsubr
mov
cmc
pop
mov
aaa
xchg
popa
jnp
ret
mov
fisttps
lds
imul
lea
into
lods
ljmp
mov
fistl
aaa
fsubl
rcl
adc
hlt
add
loope
jnp
xor
jmp
sub
fldln2
scas
jae
mov
lret
xchg
arpl
popa
jg
jo
hlt
and
insl
push
xchg
flds
sub
jge
dec
pop
xor
lods
cltd
xorb
xor
in
outsl
and
in
push
sbb
pop
push
fimull
fdivrl
stos
sbb
cmp
clc
sub
sub
jecxz
jg
pop
in
jnp
adc
or
push
jmp
push
ss
sbb
pop
mov
addr16
inc
leave
leave
in
jbe
dec
push
jmp
clc
push
jmp
xchg
das
out
aad
cs
lret
and
mov
xchg
and
gs
sbb
cmp
jecxz
orl
jno
fnsave
sti
dec
bswap
aas
add
and
popf
mov
addb
adc
adc
cwtl
rcrb
stos
or
adc
mov
lods
lods
pop
gs
outsb
stc
and
jge
stos
sbb
in
fwait
aam
dec
pusha
pop
sub
mov
nopl
aas
jne
sub
or
jge
jns
jae
jo
in
sbbb
out
mov
jnp
fcompl
jecxz
jae
xor
ret
jge
std
daa
addr16
ret
outsl
mov
sub
in
mov
mov
ret
ja
jl
fcmovne
mov
int
lcall
daa
fstenv
mov
cs
in
sbb
mov
outsb
lods
int
stos
mov
fcomp
fisttpll
es
je
das
xor
ja
pusha
repnz
pop
jb
add
mov
loopne
js
loopne
subl
jge
in
pusha
and
sub
push
arpl
or
add
pop
sub
testl
xor
adcl
outsl
push
or
outsb
cltd
leave
leave
adc
out
enter
push
sbb
cmp
mov
and
mov
lret
loopne
int3
mov
jo
pop
pop
lret
sub
cmp
negb
mov
mov
arpl
outsl
add
or
in
mov
and
dec
and
popf
pushf
int3
or
jnp
mov
cmp
and
stos
mov
mov
movsl
and
cld
inc
push
sub
icebp
out
fwait
arpl
dec
popl
mov
cmp
in
mov
js
loope
jo
insl
adc
mov
mov
cmp
divl
jno
pop
or
xor
or
enter
imul
dec
dec
fs
inc
lods
xor
es
shrl
xor
adc
shll
inc
sbb
arpl
dec
add
flds
scas
xlat
add
test
jae
daa
cmpsb
fistl
jp
cmp
je
pop
sbb
decl
dec
mov
mov
mov
sub
daa
dec
mov
pusha
mov
jecxz
sbb
pop
int3
mov
xor
orl
sbb
mov
mov
loopne
mov
sbb
fwait
sub
inc
leave
mov
dec
pop
adc
dec
jo
jbe
and
fucomi
jbe
mov
popf
fwait
shrl
mov
cmpsb
or
in
or
ja
push
js
inc
ret
sbb
test
stc
sbb
sub
das
shll
add
pop
fsub
fiadds
mov
mov
loope
dec
xchg
pop
sub
mov
cmpsb
sbb
mov
insl
mov
das
push
pop
adc
pand
mov
sub
jecxz
fsubr
aam
repz
xchg
mov
push
cmc
mov
mov
lds
push
fdivl
cmp
adc
sbb
add
push
sbb
sti
xor
loopne
and
mov
stos
repnz
mov
add
mov
xor
mov
sbb
in
cmp
movb
jno
xor
and
cmpsl
in
jo
adc
cmp
xor
fnsave
testl
sub
cmc
sub
bound
das
inc
lods
jmp
xchg
mov
or
test
sub
mov
sbb
movb
jmp
and
fistpl
jnp
add
js
cmovnp
add
mov
outsb
sbb
data16
inc
cmp
sub
mov
push
sub
and
outsb
clc
andl
mov
dec
orb
sbb
add
in
addb
jo
fnsave
cmp
mov
jns
les
call
inc
in
xchg
rcr
xor
xchg
mov
loopne
jnp
push
jp
mov
inc
cmp
stc
es
dec
inc
pop
jns
fmull
dec
addb
sub
jge
mov
movsb
shlb
dec
shl
add
js
mov
shrl
cmp
cwtl
mov
loopne
insl
aas
popa
adc
push
lods
add
jnp
shr
movsb
sbb
or
sub
es
stc
xchg
adc
hlt
test
dec
mov
dec
add
iret
pop
jne
popf
insl
add
rcll
mov
negl
fsubrl
add
fwait
pop
out
cmpsl
fisubrl
sbb
cmc
roll
xchg
rcrb
pop
imul
and
push
xor
dec
pop
jge
inc
test
jnp
movsb
in
jbe
mov
mov
or
jnp
pop
mov
push
cmp
test
mov
jnp
sub
dec
arpl
xor
pop
out
stos
mov
ja
lds
or
pop
ret
dec
lret
lock
xor
in
jbe
dec
call
popa
addb
ret
mov
mov
mov
sbbb
ret
xor
fmuls
out
inc
iret
cmpsb
inc
push
or
sbb
fsubr
inc
jmp
mov
ret
cs
test
xor
cmpsb
add
sub
bound
std
and
int
sbb
sbb
orb
insl
add
pop
sbb
mov
adc
mov
fsubs
sub
cmp
mov
mov
sahf
pushf
popa
xor
lds
add
xchg
jp
xlat
sarl
push
push
pusha
lods
jnp
fstpt
or
mov
mov
or
test
aaa
leave
or
xchg
and
fsubl
adc
divl
pop
or
cltd
jg
add
cmp
or
rorb
iret
push
popf
fiaddl
outsl
dec
mov
lock
dec
fldt
push
xchg
and
add
push
fmull
xchg
aaa
mov
in
xorl
mov
and
xor
push
dec
sub
bound
inc
jp
insl
ja
sub
sbb
xchg
jbe
or
cs
js
orb
shll
xchg
adc
lods
in
pop
xor
xor
sub
test
popa
shll
mov
out
sti
or
hlt
ss
fnstcw
add
sub
ret
loope
addr16
aam
mov
push
cmp
cmp
add
enter
mov
leave
sbb
popf
ss
ror
jmp
sti
mov
pop
out
adc
and
std
sarl
adcb
sub
fsubrs
popa
jmp
in
and
shll
push
mov
cmp
addr16
cmp
jg
sub
dec
outsw
cwtl
nop
out
mov
int
fisubrs
xchg
or
pop
and
popf
xlat
push
loope
adcl
xorl
sbb
popa
sbb
fdivs
add
lods
shlb
outsl
xchg
dec
pop
pop
mov
dec
dec
jb
popf
fnstenv
dec
xchg
adc
mov
push
sub
sub
push
fs
jp
add
cmc
push
fcmovne
or
pop
or
imul
scas
es
adc
hlt
jbe
test
mov
sarb
cmp
mov
jge
testb
jnp
movsl
pop
daa
pop
or
and
pop
jo
push
aas
bound
pop
test
scas
adc
cwtl
mov
das
addb
adc
dec
inc
inc
scas
adc
outsb
push
ja
sbb
in
mov
popf
cmp
test
jmp
push
xchg
mov
cmp
fwait
jne
lds
insl
pop
adc
xchg
adc
cmp
mov
movb
mov
fcmovne
cmp
pop
mov
or
roll
and
mov
in
and
fistl
mov
mov
xlat
adc
cmp
adc
out
inc
fstpl
mov
push
sti
jmp
ret
ja
repnz
stc
push
or
pop
dec
outsb
pop
cmp
cltd
and
sub
add
mov
lcall
cmpb
shlb
sub
in
jne
add
ret
in
jbe
cli
jmp
mov
pushf
int3
icebp
jbe
pop
js
cmc
fmull
ret
leave
sbb
sub
or
mov
jp
cltd
fdiv
sbb
mov
and
icebp
mov
aas
and
pop
cwtl
mov
fcomps
shll
fistpll
outsl
sbb
sbb
mov
test
sub
and
rcll
fdivrl
test
add
mov
outsl
dec
xchg
pop
and
fwait
les
xor
sbb
pop
mov
and
and
mov
imul
dec
insb
adc
lods
bound
cmc
pop
imul
ss
pop
pop
ss
lahf
add
mov
lahf
sbb
leave
cmp
jb
rorl
rorb
xchg
mov
pop
adc
es
fwait
mov
ja
jg
pop
shl
or
fcoml
jecxz
ret
das
lods
fcoml
popa
xor
adc
dec
mov
xacquire
aas
adc
rol
mov
ljmp
outsb
mov
arpl
mov
movsb
add
mov
data16
mov
leave
sti
inc
in
push
dec
outsb
push
dec
es
dec
enter
dec
xchg
movsl
pop
enter
push
fwait
jne
dec
daa
mov
sbb
cmc
and
pop
mov
jnp
pop
js
adc
or
ret
xchg
dec
mov
fucom
mov
and
dec
shrl
outsb
cltd
jne
addr16
mov
test
xor
sbb
cld
sbb
addb
fxch
or
xchg
sub
insb
pop
arpl
push
cmp
pop
add
jnp
sbb
dec
and
in
sub
das
mov
leave
fbstp
shrb
cmp
mov
iret
fildl
jb
cs
movsl
int
decl
imul
inc
aaa
arpl
inc
jbe
adc
faddl
cs
int
inc
jno
cmpb
les
addl
sti
ret
push
jbe
ret
das
push
sub
aas
jmp
dec
loopne
lea
ds
adc
pushf
mov
ds
pop
jo
sbb
in
adcl
sbb
movsb
push
push
sub
cmp
out
js
push
dec
mov
xor
stos
scas
fwait
cmp
test
leave
or
mov
jbe
repz
or
add
pop
mov
jae
pusha
insl
fstpl
add
mov
je
inc
adc
test
mov
icebp
push
lods
mov
es
lock
add
dec
jecxz
mov
popf
dec
adc
add
aaa
cmp
sub
subl
cmp
lods
mov
lea
pop
imul
mov
sub
pusha
mov
sub
jb
dec
aas
lcall
dec
xor
jp
imul
cmc
xlat
ja
ret
push
push
jae
or
adc
mov
mov
leave
test
or
jno
insl
mov
pmaddwd
mov
sub
sub
sub
mov
int
stc
mov
cltd
stos
jge
jbe
fnsave
in
das
fsts
ret
inc
sub
pop
add
pop
pop
dec
jne
cmpsl
pusha
sub
jne
pop
das
adc
mov
jmp
sbb
inc
adc
js
mov
pop
sub
mov
ljmp
mov
loop
sbb
pop
jns
sbb
cmpsb
rcrb
rdpmc
adc
rcl
cmpsl
mov
dec
mov
lea
scas
adc
insl
push
mov
test
pop
ret
mov
jecxz
jmp
inc
lcall
ficoml
les
and
cwtl
mov
andb
xchg
jbe
nop
jmp
jmp
sub
xchg
cmp
jmp
mov
into
loope
in
add
in
jns
and
shll
jne
insl
xor
and
push
test
shll
sbb
xchg
stos
lahf
cmp
das
repz
bound
mov
or
ja
fstl
add
out
mov
stc
jns
lret
mov
fcomp
in
add
mov
mov
jo
sub
mov
or
push
loop
orl
xor
lds
pop
sbb
adc
ret
int
mov
cs
push
insl
loope
mov
shrl
inc
in
inc
fstpt
jecxz
jnp
and
dec
jnp
push
popl
mov
cmp
rcrl
add
arpl
xlat
mov
inc
sub
xchg
les
outsb
cmpsl
aas
adc
and
jp
dec
popf
sbb
mov
and
imul
pop
adc
pop
or
sbb
jae
insb
push
outsb
xor
add
cmpsb
adc
dec
pop
mov
es
int
popf
pop
and
or
loope
in
pop
in
and
jmp
or
xchg
jecxz
sbb
insl
daa
mov
mov
mov
fucom
push
inc
insb
int
xchg
jne
xchg
xchg
out
sub
jp
dec
shrb
orb
mov
lds
mov
mov
addr16
popa
fwait
sbb
pop
xchg
dec
shl
stc
sbb
inc
mov
xor
ss
repz
in
xor
popa
sub
jno
xchg
fwait
dec
std
or
xchg
lret
mov
or
mov
lods
xor
mov
das
xor
lea
xor
cmp
movsl
fwait
test
js
sub
sti
rorb
dec
lods
xlat
pop
je
test
pop
cmp
stos
xor
mov
jmp
loopne
push
pusha
sub
cmp
jp
xor
cmpps
pop
add
stos
or
xor
cmp
and
inc
jmp
bound
scas
push
add
lods
jl
push
xor
lods
dec
mov
cs
imul
mov
leave
inc
daa
and
add
cmc
fildl
push
fldt
lods
xchg
mov
xadd
in
xchg
insb
les
test
mov
xor
push
int3
fiaddl
pop
pop
or
jnp
test
insl
imul
pop
lret
mov
fcompl
packuswb
mov
sbb
jecxz
mov
popf
sbb
jbe
mov
sub
cwtl
bound
mov
mov
inc
push
dec
ret
out
push
and
add
fsubrp
cmpl
add
adc
fldt
and
pop
pop
movsl
scas
popa
push
mov
in
adcb
jge
mov
shl
das
out
add
push
cmp
stos
adc
inc
sub
rorl
inc
scas
cltd
lea
arpl
das
add
cmp
lahf
les
sbb
shrl
cmc
out
popa
test
mov
cmp
rcrb
int
lret
add
fld
or
fwait
dec
mov
mov
add
adc
ficoml
and
mov
stc
or
or
repz
xchg
sub
bound
cmpsl
mov
and
in
add
mov
scas
adc
daa
cmp
rolb
adc
jnp
in
loopne
fistl
imul
f2xm1
lods
pop
pop
int
mov
sub
pop
sub
push
loope
pop
shl
out
sub
inc
icebp
cmp
sbb
aas
cmp
xchg
imul
xor
jbe
inc
arpl
xchg
pop
sub
lock
pop
mov
add
jns
add
pop
lret
loope
enter
aas
insl
sub
cmpsl
mov
sub
dec
nop
pop
mov
imul
or
mov
pop
inc
fdivrl
adc
jb
and
push
mov
ffreep
add
dec
aam
dec
mov
sbb
movsb
idivl
cli
rorb
mov
mov
ja
sarl
pop
and
sbb
mov
lods
add
adc
nopl
adc
pushf
pop
xlat
cwtl
lahf
out
and
and
adc
push
mov
push
insl
mov
rolb
insl
ret
aas
inc
dec
pop
add
pop
fwait
inc
or
outsl
mov
ja
jmp
fisttpl
and
das
jmp
or
push
stc
xor
add
mov
xor
mov
adc
push
or
mov
scas
fsubrs
and
push
imul
inc
sub
cmp
movsb
outsb
mov
pop
repz
mov
jle
mov
or
mov
xor
xchg
out
pop
jle
js
fstpt
mov
pop
xchg
femms
loopne
andl
fldcw
or
mov
sbb
dec
add
xor
in
mov
leave
cmc
shrl
and
bound
mov
jns
mov
jbe
les
cmp
pop
jbe
cmpsl
pop
xor
add
outsl
mov
cmp
mov
imul
shr
daa
das
jle
dec
sub
cmp
add
inc
xchg
cli
inc
inc
jle
or
cmp
jmp
mov
push
or
or
testl
fwait
subl
scas
mov
mov
iret
mov
and
leave
pop
subb
dec
outsb
lcall
ja
pop
imul
or
pop
jmp
pusha
pop
xor
dec
aaa
pop
jo
aaa
inc
pop
imul
lahf
mov
mov
ja
not
push
bound
jge
sub
and
mov
or
mov
or
mov
or
shlb
adc
mov
outsb
pop
mov
lea
in
xchg
mov
fldenv
sbb
inc
add
xchg
lahf
xchg
sub
mov
es
frstor
bswap
push
lods
es
ret
aas
sbb
fldt
insb
std
cmp
mov
xor
popf
ret
pop
sti
pop
pop
push
jae
mov
movsl
psubq
inc
xor
mov
ja
xor
rcrb
pop
sub
dec
iret
popa
lret
sti
and
and
faddl
imul
sub
sub
cmp
push
pop
test
ffree
mov
loop
pop
or
js
mov
movhps
or
adc
insl
aas
bound
jbe
push
xchg
pop
add
js
inc
sbb
cmp
test
push
and
cmp
out
sbb
lea
mov
sub
add
fnstcw
mov
add
filds
call
jmp
push
mov
push
jmp
mov
cmp
je
mov
push
jmp
insb
int3
cld
or
and
daa
ds
fwait
pop
cmp
jnp
clc
cltd
lcall
rolb
add
bound
bound
inc
das
xchg
ds
mov
dec
jmp
push
cmpsl
cmc
push
into
xchg
ljmp
sti
int
pop
and
and
cvtpi2ps
pushl
leave
cli
rcr
push
js
in
and
jmp
xor
inc
insb
jae
ja
iret
pusha
js
call
icebp
dec
mov
cltd
pop
aaa
mov
mov
xchg
lods
xor
imul
sar
ffree
fstl
adc
loopw
sti
adc
lahf
xchg
div
or
pop
aaa
out
mov
mov
fdivr
push
cld
add
push
pushf
push
test
lods
mov
dec
sbb
mov
pop
mov
call
popf
push
xlat
adc
mov
mov
loope
test
je
or
pushl
adc
rorb
dec
mov
push
dec
imul
movsb
or
mov
mov
jno
sbb
mov
aas
bound
sbb
lea
sbb
xchg
js
movsl
push
mov
ja
les
rcrb
addr16
sub
imulb
outsb
inc
dec
movsb
jnp
mov
mov
xor
mov
push
jno
mov
iret
jnp
push
pop
push
adc
pusha
cmp
dec
pusha
ret
in
push
or
fdivr
incl
int
fwait
cmc
dec
pop
and
mov
inc
mov
call
mov
cwtl
push
dec
inc
sbb
inc
aad
jae
in
jae
or
push
lea
xor
pusha
movsl
filds
lcall
fs
aaa
andb
xchg
mov
int3
and
dec
lock
xorl
mov
lds
sub
sub
popf
outsb
fwait
lahf
pop
jl
lock
pop
cmpsl
sbb
mov
leave
mov
push
cmc
inc
lfs
in
jp
mov
cmpsb
roll
jmp
jno
sbb
aad
dec
incl
bnd
cmp
jo
hlt
mov
popa
mov
decl
and
mov
fwait
stos
sub
repz
inc
lret
ljmp
inc
or
add
cld
push
je
push
cli
push
inc
cli
inc
inc
aaa
idivl
pop
mov
adc
inc
lock
rcrl
dec
xchg
push
iret
loop
out
pop
out
pop
and
decl
mov
cld
ss
inc
adc
decb
addr16
test
push
out
sbb
pop
mov
mov
cmp
icebp
xchg
or
stc
std
sarb
mov
push
ficoms
lods
adcl
and
add
push
xchg
pop
lret
ljmp
pushf
pop
lods
mov
xor
push
mov
push
hlt
mov
mov
jmp
enter
jecxz
adc
push
jl
mov
xchg
or
pop
mov
adc
decl
lock
bound
mov
inc
xchg
fs
jnp
bound
sti
push
mov
aad
mov
sub
mov
push
scas
roll
lods
mov
inc
fldenv
add
fxch
lods
jge
imul
fcomps
inc
jge
cmp
aaa
pop
mov
xchg
lahf
call
sbb
xchg
shll
pop
dec
mov
call
pop
lds
xor
out
outsl
mov
scas
mov
test
push
lcall
lcall
mov
es
mov
adc
fidivs
cmpl
mov
jmp
mov
adc
sbb
mov
push
fwait
adc
lcall
jg
incl
xor
push
cmp
push
adc
pop
inc
inc
push
lcall
sub
lock
sub
repz
dec
and
shl
insl
push
add
std
lcall
jns
lret
push
aaa
push
dec
dec
fistl
shr
in
pop
push
adc
pushl
push
enter
fs
inc
es
adc
push
jp
bound
inc
scas
jg
fs
cltd
mov
jp
rcr
test
mov
sub
pop
or
push
and
sub
stc
pop
test
or
leave
test
decl
lock
and
pop
sbb
mov
mov
cli
loopne
fs
call
mov
xchg
bound
and
scas
dec
pop
mov
add
out
shlb
sub
incl
rolb
mov
hlt
lea
ljmp
iret
cwtl
loop
jg
cmp
ret
movsl
dec
sub
add
lock
and
stos
inc
ljmp
jno
and
mov
jecxz
imul
mov
sub
sub
clc
ljmp
inc
imul
mov
rclb
adc
add
add
addl
sbbb
cmc
dec
mov
aad
adc
fldcw
sbb
push
and
ret
and
test
shrl
filds
push
sbb
sbb
je
dec
push
int
scas
aad
mov
xorb
ficoms
jmp
fldcw
enter
or
fsubrs
loop
dec
cmp
pushf
mov
or
aad
mov
je
leave
dec
test
stos
adc
lds
stos
cmp
push
push
and
pushl
lds
insl
mov
es
sub
leave
mov
idiv
ljmp
ficoms
mov
jne
es
jmp
test
mov
mov
fldl
fcom
dec
xchg
dec
stos
fsincos
jno
call
imul
outsb
sub
sub
and
lods
test
inc
dec
aaa
dec
repz
dec
mov
lock
jbe
addr16
or
sbb
mov
aam
push
mov
cld
lods
popa
sti
out
push
cli
adc
push
dec
push
mov
cs
fwait
xchg
negl
aaa
push
xchg
dec
mov
movb
push
fwait
int3
xchg
dec
repz
popf
push
or
xor
and
sub
ret
incb
stc
jbe
leave
and
ss
pop
cld
repz
lods
xchg
mov
rcll
incl
jmp
dec
mov
adc
std
xorl
movsl
push
scas
lcall
sti
jnp
mov
adc
or
sub
into
pop
push
mov
sbb
fistps
aaa
fistpll
inc
mov
cmp
mov
es
clc
jge
hlt
mov
pop
cld
rcll
dec
push
pop
es
xchg
dec
push
mov
mov
push
rorl
mov
push
dec
mov
pop
dec
lea
inc
fwait
sbb
and
into
fcoms
inc
or
loop
ret
cmp
push
or
push
fists
cld
and
xor
in
aas
push
stos
into
xor
pop
lock
mov
mov
mov
scas
ficomps
movsl
into
scas
dec
stc
int
insb
inc
lods
sub
loope
inc
mov
sbb
shlb
scas
inc
sub
scas
or
mov
and
out
adc
enter
fnstenv
ffree
out
std
addr16
pop
sub
pop
roll
and
lods
cmp
mov
out
leave
lods
aad
push
xorl
incl
and
scas
xor
pusha
mov
and
insb
loopne
stos
ljmp
or
scas
pop
insb
push
and
ljmp
shl
cs
in
jbe
repnz
bound
add
out
or
fsubs
loop
mov
psubsb
fldt
pop
mov
iret
jle
push
inc
lret
mov
add
loop
sub
mov
xor
adc
sub
push
jmp
push
and
mov
popa
test
adc
push
int3
sbb
lcall
xchg
loopne
lea
lock
or
or
ljmp
mov
test
mov
subl
daa
ret
and
movsb
or
test
dec
jo
jmp
push
adc
out
stos
insb
roll
fbld
loope
ljmp
mov
addr16
and
fcoml
cmpsl
test
fldln2
cmc
stos
sti
lods
push
or
and
sub
dec
push
icebp
test
push
lock
stos
xlat
and
mov
ljmp
sub
jbe
iret
ss
pop
adc
popa
out
clc
lcall
mov
sub
mov
jge
out
in
and
pushf
movsl
std
jmp
pusha
in
push
pusha
fbld
mov
jns
or
repnz
mov
fcomi
sti
lods
out
leave
push
mov
add
push
add
adc
clc
sub
xchg
aam
jg
fwait
into
sarl
es
adc
add
test
sbb
out
insl
mov
popa
push
in
icebp
xor
mov
sbb
jb
outsl
or
aad
aam
call
scas
cmc
and
testl
es
fmul
das
outsb
outsl
cmpsl
and
inc
lds
scas
mov
lcall
idivb
aam
clc
mov
fisubrs
mov
pop
lds
movsl
cmp
out
aas
jo
xchg
out
call
lds
cmp
xchg
cli
cwtl
lods
mov
and
daa
push
push
push
sar
pushl
push
fists
mov
rcll
lret
adc
cmp
pop
jo
enter
rcll
scas
movsl
sbb
shrl
loopne
stos
shrb
cld
aaa
cld
call
fisubl
xor
pop
adc
jo
mov
or
pop
das
pop
scas
cltd
scas
in
call
push
and
stos
xchg
insl
sbb
or
outsl
xchg
push
sub
jg
dec
insl
push
sarb
fcomps
bound
pop
inc
insb
imul
push
dec
and
pusha
or
int
adc
mov
std
fistps
fdivp
adc
jne
mov
jb
test
mov
push
mov
test
adc
lcall
fildll
insl
cs
fdiv
mov
scas
mov
jae
pushf
sbb
jmp
fsubrl
mov
xor
cmp
sub
push
aas
xchg
sti
out
pop
aad
push
std
push
pusha
sbb
es
xchg
mov
in
ficomps
into
dec
ja
pop
lret
push
insb
jle
gs
push
fbstp
push
aad
push
mov
push
or
xchg
push
mov
cmp
sub
shlb
mov
andb
jg
push
push
lods
push
and
call
push
out
sbb
gs
push
fldcw
loopne
insl
lods
cltd
push
push
hlt
scas
test
fnstcw
out
cmpsb
mov
call
jne
xor
call
push
xor
xor
push
addr16
cli
mov
or
ja
fidivs
jb
add
pushl
push
js
addr16
cmp
inc
push
pop
pop
imul
imul
pushl
insb
insl
arpl
imul
push
push
insb
pop
inc
aaa
inc
gs
push
jns
jo
inc
jo
push
outsb
pushl
dec
jns
push
imul
jbe
push
cmp
imul
push
fistps
pop
jo
jae
inc
imul
bound
push
aaa
push
ja
ss
jp
pop
push
ljmp
pop
inc
inc
outsl
je
jne
jp
dec
data16
jo
gs
cmp
inc
std
in
jns
xor
pop
fs
pop
pop
bound
arpl
dec
dec
imul
jp
pushl
pop
dec
inc
dec
dec
adc
je
inc
push
inc
xor
push
aaa
xor
je
idiv
lcall
dec
je
dec
imul
aaa
xor
jbe
pop
push
push
jb
push
push
inc
inc
lock
in
jb
imul
aaa
ds
ss
popa
jp
dec
jo
ljmp
dec
dec
push
popaw
or
inc
outsl
dec
push
jae
pop
inc
push
gs
xor
jo
arpl
jns
cli
arpl
cmp
push
xor
mov
pushl
push
push
pop
aaa
cmp
jns
insb
imul
push
jb
insb
fs
push
jb
popa
jno
pushl
popa
outsl
push
outsl
push
jb
outsb
dec
jno
xor
aaa
pushw
inc
pop
dec
add
icebp
idivb
jp
pop
dec
je
imul
adc
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
inc
adc
xchg
rclb
jae
leave
sub
into
scas
cwtl
sahf
out
fidivs
clc
add
jns
divl
dec
pop
and
sahf
data16
nop
sahf
pop
jo
cmp
mov
lret
and
jns
ja
ds
dec
bound
sahf
out
sahf
xchg
pushf
mov
fsub
cmp
repz
or
adc
cmp
cmp
repz
dec
pop
outsb
iret
repz
jp
sahf
test
fcompl
lock
push
les
jns
out
dec
push
pop
push
out
sahf
out
lcall
sahf
loop
testb
push
sub
repz
cmp
push
pusha
repz
repz
mov
cmp
into
call
out
sahf
push
and
inc
push
insb
jns
out
jbe
pushf
cmpsb
mov
repnz
out
lock
jns
out
push
cmp
jbe
jns
out
pushf
mov
lret
jns
in
clc
adc
push
sub
repz
pop
push
nop
repz
repz
test
mov
iret
loop
clc
adc
sub
out
sahf
cmp
push
jns
test
into
call
hlt
push
lret
ds
repz
dec
push
pop
jbe
lcall
mov
out
repz
add
xchg
sbb
cmp
repz
push
jo
xchg
repz
repz
out
lcall
xor
inc
pusha
push
nop
jns
out
lcall
lahf
out
call
iret
repz
and
inc
dec
push
sbbb
repz
loop
push
into
adc
jns
out
inc
push
pop
data16
out
sahf
jb
mov
ljmp
add
push
push
cmp
repz
cmp
repz
repz
ds
aam
add
or
out
sahf
es
push
pop
jbe
jns
out
mov
repz
out
out
or
adc
repz
ss
pop
fs
cmp
repz
mov
fsub
jns
out
hlt
push
rclb
and
jns
out
pusha
push
mov
mov
loopne
cmp
repz
push
rcrl
and
cmp
repz
push
repz
mov
loop
mov
aam
push
and
repz
dec
push
sahf
out
cmp
hlt
push
aad
inc
jns
out
push
pop
js
xchg
repz
out
enter
iret
repz
adc
inc
push
pusha
jp
iret
repz
sahf
mov
fsub
jns
div
pop
xlat
push
sbb
sahf
out
sahf
push
pop
fs
mov
mov
enter
out
out
or
jle
sub
pop
jns
out
push
mov
out
into
call
repz
push
xor
dec
push
pusha
cmp
repz
jl
nop
lcall
fdiv
jg
push
sahf
out
sahf
cmp
outsb
mov
out
lcall
int
cld
push
fldt
cmp
cmp
push
jo
xchg
sahf
test
iret
repz
int3
out
fcoml
jns
out
sub
dec
bound
sahf
out
cwtl
mov
out
sarl
cli
adc
xor
iret
repz
outsb
sbbb
fsubr
hlt
push
fsubp
jns
cmpsl
sbb
cmp
push
sahf
out
sahf
bound
mov
jns
call
sahf
out
fidivrs
xor
pusha
jp
popf
ret
jecxz
push
pop
pop
daa
shll
inc
inc
mov
or
lcall
imul
push
sub
mul
push
fisttps
sbb
xchg
pushf
inc
lret
xor
xchg
push
idiv
lcall
incl
test
leave
adcb
loop
or
in
jl
sub
adc
mov
jmp
push
pop
rorb
add
je
mov
les
addr16
je
call
push
xchg
pop
jmp
add
mov
and
cmp
mov
mov
sbb
popa
cmc
cs
push
test
mov
ss
test
add
lahf
add
ljmp
xchg
push
lret
les
fmull
icebp
sub
mov
mov
mov
mov
call
mov
inc
pop
ss
xor
xchg
sbb
dec
in
aad
mov
lock
call
dec
sub
xchg
sub
dec
sub
jnp
push
rorb
mov
icebp
inc
out
mov
mov
cmp
ljmp
je
loopne
out
std
mov
mov
stc
jge
mov
xchg
inc
outsb
pusha
stos
nopl
je
outsl
outsl
lcall
sub
lret
or
test
xor
pop
xchg
rcrb
add
pop
inc
push
incl
popf
pop
add
movsl
outsb
and
cltd
and
stos
es
in
fs
pushl
xor
ja
repnz
out
outsl
xor
sub
std
clc
add
daa
outsl
jmp
in
fsubrs
sub
cmp
add
jae
add
hlt
ljmp
movlhps
outsb
test
adc
aaa
jecxz
dec
and
and
push
loop
mov
cmpsb
jecxz
jg
roll
gs
fadds
je
in
icebp
lret
jmp
incl
inc
mov
cmp
mov
jg
loope
mov
cli
std
ficoms
popa
mov
jmp
sub
mov
mov
pop
into
pop
test
mov
daa
movsb
lcall
daa
adc
pop
add
call
jge
cmp
jb
hlt
stc
mov
cmc
incl
mov
sub
xor
negw
loopne
adc
inc
add
in
mov
ljmp
mov
inc
cmp
push
push
out
pop
add
dec
xchg
repz
xor
cmp
lcall
adc
and
icebp
mov
inc
fnstsw
dec
in
das
pop
inc
mov
insl
es
xchg
add
push
bound
push
mov
mov
cmp
xor
or
pop
imul
call
cmp
int
adc
fistpll
push
xchg
and
or
out
sbb
cs
decl
adc
xor
lock
push
aam
mov
add
popa
hlt
add
jmp
dec
std
pushl
cmp
ficoms
dec
jae
lods
sti
mov
inc
cmp
mov
sar
cwtl
push
jae
cli
lcall
mov
in
loopne
mov
mov
dec
aas
in
jb
lret
pop
xchg
pusha
sbb
fwait
lcall
testl
dec
mov
fimuls
popl
cmp
push
mov
incl
sub
push
xchg
ja
pop
dec
fsubrs
popf
mov
scas
mov
pushl
std
je
pop
add
loop
lcall
jecxz
jns
imul
adc
dec
pop
xor
and
daa
xor
sub
pop
adc
cmc
or
pop
out
dec
inc
shlb
sti
lds
xchg
outsb
push
push
movsb
pop
fs
sbbl
mov
ljmp
add
xor
cmp
mov
push
imull
cld
ljmp
add
adc
movsl
inc
lahf
out
fiadds
sarl
push
ror
pushl
mov
mov
mov
ret
adc
negl
xchg
push
testb
xor
dec
xlat
mov
xor
mov
sbb
jnp
and
fs
decl
std
popf
sbb
mov
and
xchg
add
or
mov
cmc
cmpsl
add
adc
and
out
sti
push
outsl
cmpsb
std
sub
mov
aas
pop
jne
cmp
mov
mov
dec
loop
out
xchg
popa
andb
outsl
inc
mov
adc
arpl
lcall
mov
sub
test
sbb
inc
shlb
sti
push
pop
aad
cmp
jmp
fsubs
xor
leave
incl
pop
dec
dec
mov
and
pop
jp
mov
adc
push
xor
mov
fists
inc
loope
sub
dec
aam
test
mov
push
std
jg
ss
cmc
test
xorb
int
sbb
xchg
addr16
decl
fmull
jp
repz
xor
shll
sbb
nop
shrb
or
mov
sub
adc
clc
push
jp
popa
stc
push
test
push
idiv
incl
or
scas
add
pop
lahf
sub
or
push
adc
sti
lcall
mov
ret
mov
cmp
push
test
test
loop
dec
cmp
sub
cmc
inc
inc
mov
sub
push
gs
repnz
push
pop
lahf
cmpsb
and
push
ret
mov
mov
mov
xlat
lock
leave
pop
xor
mov
sbb
pop
or
lock
xchg
cld
repnz
adc
or
mov
movsl
pusha
pop
cmp
inc
cmp
mov
jb
mov
sbb
fadd
out
inc
sbb
mov
ljmp
cmp
leave
movsb
dec
xor
mov
test
fidivrl
xchg
in
mov
clc
xchg
push
inc
icebp
xor
jo
mov
pop
les
cmp
ljmp
pop
or
dec
jp
cmova
cwtl
adc
stos
adc
xor
fldl2t
scas
jae
pop
hlt
and
rcll
mov
or
mov
sbb
cmp
inc
dec
jle
jge
jmp
sub
int
xor
test
iret
cmpsb
jp
aad
sbb
stos
xchg
and
pop
cmp
xchg
mov
dec
push
daa
or
mov
hlt
clc
gs
cmp
push
pushf
sub
ljmp
test
xor
and
imul
xor
out
lcall
inc
sahf
pop
stos
call
sub
push
cwtl
ret
cmp
scas
push
scas
inc
jmp
ss
mov
lds
jnp
mov
jge
loope
cli
outsl
cli
mov
jmp
add
and
mov
and
mov
mov
in
xchg
xlat
lods
jae
add
incb
adc
icebp
adc
dec
mov
js
jp
in
sbb
inc
cmpsl
stc
lock
out
or
mov
cmc
imul
and
mov
roll
xchg
scas
decl
andb
fists
outsl
not
mov
sahf
test
hlt
addr16
cmpb
ljmp
push
and
sbb
lods
aam
fmulp
mov
cmpb
mov
jmp
cltd
cmpsb
push
repz
xchg
repz
push
sti
aad
movsl
rcll
movsb
flds
and
pop
mov
jnp
and
sbb
dec
adc
flds
int
sub
cmc
lcall
pop
sarl
jne
fisttpl
imul
lcall
or
int
pop
test
mov
pushf
int3
and
mov
pushl
addl
je
sub
gs
shll
les
inc
xchg
mov
mov
lcall
cld
jb
inc
xor
inc
dec
pop
add
pop
ret
lcall
movsl
push
in
xor
lds
add
add
add
xchg
stc
mov
int3
mov
pusha
push
pop
outsl
loop
jl
cld
jg
push
push
xchg
mov
imulb
mov
sti
adc
push
mov
out
leave
in
scas
cli
add
clc
inc
mov
lret
mov
cld
xor
sarb
and
xor
cmpsl
ljmp
clc
cmp
xchg
popf
sti
dec
rolb
jp
sti
imul
dec
push
mov
decl
mov
sbb
hlt
xlat
add
mov
popa
jmp
frstor
repnz
pushl
ja
push
add
xor
cmpsb
stc
mov
push
push
repnz
and
loope
push
repz
shrl
fcomps
mov
ja
and
dec
cmp
cmp
or
mov
fstpt
jg
adc
ret
adc
outsb
dec
adc
mov
sbb
xchg
add
test
in
fdivl
pop
hlt
lock
fstp
sub
or
xchg
ljmp
sbb
fwait
jbe
jbe
movsl
sub
sbb
jge
jbe
push
add
pop
jno
ljmp
decl
enter
mov
pop
cld
add
cmp
icebp
cmc
jo
mov
xor
jmp
sbb
inc
mov
add
mov
adc
dec
repnz
pop
in
jecxz
xchg
mov
insl
pop
int
push
cmp
movsb
jae
push
lret
call
xorb
pop
xchg
lds
int
mov
jl
loop
out
in
xchg
fbld
enter
and
push
dec
addl
nop
pop
and
add
jecxz
push
pusha
dec
incl
jecxz
jecxz
enter
lods
mov
fwait
mov
negb
call
scas
es
out
add
into
ss
xor
mov
loop
in
stc
call
jmp
jle
test
mov
mov
mov
hlt
stos
jbe,pn
popa
xchg
or
xor
call
es
pop
mov
test
push
lods
pushf
sub
imul
sub
xor
pop
jge
xor
decl
adc
jne
mov
ja
sbb
inc
fldt
sbb
mov
xor
mov
ljmp
push
mov
rorb
push
ljmp
dec
adc
int3
and
jae
popf
in
decl
xchg
out
filds
xchg
push
loop
xchg
lods
test
or
out
jmp
sbb
rcr
push
arpl
ljmp
mov
js
mov
popa
pop
in
es
mov
adc
inc
sbb
rcll
ffree
push
cmp
cmpsl
xchg
pop
push
cmc
fstpl
pushl
aas
xchg
adc
mov
mull
cmp
mov
mov
and
adc
dec
pushf
or
incl
or
loop
xchg
mov
jbe
mov
add
or
add
mov
into
insb
mov
cmp
lcall
lcall
mov
push
hlt
imul
in
aad
pushl
pop
or
enter
dec
imul
int
lods
xor
pop
jmp
popa
or
lret
cmp
mov
jbe
sub
inc
sub
inc
mov
push
test
sti
push
out
sbb
aaa
std
pop
scas
cmp
stos
cltd
pushl
addl
jmp
inc
pop
int3
in
imul
aas
aaa
int3
lds
mov
inc
dec
std
xlat
jae
outsb
inc
cmp
mov
dec
mov
sbb
out
mov
outsl
cli
incl
stc
cmc
mov
push
ret
test
scas
push
fsub
jnp
inc
or
decl
idivb
bound
js
fidivl
in
sub
pushl
add
mov
adc
test
dec
jge
mov
sbb
jo
mov
ret
pushl
repz
movsl
pop
mov
mov
fidivrs
mov
xchg
mov
les
jg
push
mov
dec
int3
push
aas
in
js
and
sub
sbb
and
pop
cmp
fstl
push
mov
pop
jo
and
neg
addr16
fiadds
loop
ljmp
sbb
pop
arpl
loop
loope
and
adc
sub
jmp
je
or
lahf
sbbl
ljmp
adc
xor
xchg
cmp
or
incl
sub
and
xor
xchg
push
jns
sti
xor
dec
xchg
push
pushl
or
jg
imulb
push
jne
lret
dec
test
aas
adc
fwait
lds
decl
aam
andb
repz
andl
pop
fs
and
pop
cmp
jmp
popf
pop
bound
daa
inc
in
cmpsb
adc
jl
dec
mov
mov
enter
adc
push
call
in
divb
mov
int3
xchg
inc
cmpsl
and
mov
insb
jns
cmpps
call
pushf
jle
lcall
ret
les
mov
dec
cmpsb
cld
ljmp
psubw
adc
ret
xchg
and
push
xchg
popf
mov
fcoml
test
jmp
loopne
imul
push
mov
lcall
xlat
lods
xor
jmp
loopne
outsb
test
jnp
gs
adc
sbb
sub
mov
incl
fisttps
pop
mov
into
jbe
mov
mov
mov
lcall
mov
adc
add
cld
push
and
inc
xchg
jae
jns
js
imul
clc
lcall
jne
repnz
inc
cmc
mov
or
sub
jle
out
cli
incl
or
mov
lock
push
cmp
mov
mov
mov
lods
or
loopne
xor
inc
int
xor
popf
dec
rcrl
fcmovbe
sbb
cmp
pop
icebp
incl
jecxz
lds
popf
in
xchg
cmp
xor
popf
and
nop
dec
stos
idiv
mov
push
cltd
lods
hlt
inc
dec
xor
mov
xor
ss
aad
inc
pop
daa
and
jbe
cmp
scas
les
jnp
fld
jge
fnstenv
aam
sahf
call
mov
jo
add
out
and
cs
push
jo
out
xchg
xchg
fdivl
js
jg
mov
loop
jg
add
jle
xor
cmpsb
cmp
xchg
lahf
xchg
jg
inc
mov
jle
es
mov
sub
jmp
or
sub
mov
movsl
inc
push
xor
sbb
sbb
call
mov
sbb
pop
les
mov
cli
add
cwtl
and
mov
outsl
xchg
push
movsl
or
inc
lods
loop
jno
cmp
xor
xor
dec
lcall
subb
mov
lcall
jno
cmp
shrl
sahf
cmc
push
cld
cmp
insb
adc
push
sbb
notl
xchg
push
dec
xor
movsb
adc
pushl
out
push
pop
stc
add
repnz
pop
add
andl
cmp
jg
ljmp
outsb
movsb
xchg
mov
mov
adc
inc
movsl
scas
mov
test
mov
push
xchg
mov
inc
scas
mov
fsubrs
and
push
and
inc
pop
mov
jmp
xor
cmp
add
fcomip
adc
xchg
test
outsl
mov
push
and
call
xor
and
adc
lea
jne
stos
test
and
mov
call
ror
cmp
dec
or
iret
and
add
or
or
push
ret
out
xchg
xor
pop
sub
shrb
jmp
adc
push
rorl
in
xchg
jmp
ds
jg
xchg
fcompl
sbb
mov
sub
xor
add
arpl
mov
jle
jg
jmp
das
push
adc
pusha
clc
movsl
aas
cmp
test
lret
or
pushl
or
movsb
out
int3
stos
ljmp
std
cld
adc
or
frstor
ljmp
stos
adc
push
fcompl
mov
push
jp
movsl
les
aad
mov
or
fsub
adc
adc
adc
adc
or
mov
pushl
push
fs
inc
movsb
test
xchg
outsl
imulb
aad
pop
incl
cld
mov
movsl
cmc
mov
mov
cmp
mov
jnp
ret
xor
data16
fdivr
decl
lcall
fldenv
lea
sbb
cmpsb
fisttpl
enter
jmp
sbb
push
dec
and
cmpsb
pop
vaddss
cmpsb
cs
ljmp
cmp
adc
mov
push
test
jle
lods
and
mov
jo
cmp
push
sahf
push
int
cmp
packsswb
cmp
pop
leave
lods
sbb
pop
jmp
adc
ljmp
cmp
aad
ja
mov
sar
test
dec
jl
push
jmp
inc
or
loope
adc
loop
and
addr16
sti
mov
orb
out
daa
neg
add
xchg
ljmp
cmp
sbb
dec
mov
aad
sbb
push
jne
cmpsl
popf
iret
sar
incl
fs
push
int3
ja
dec
fimull
insb
mov
mov
xor
fwait
pushf
sar
dec
rorl
call
je
daa
out
add
and
lods
inc
xor
lea
and
fcomip
pop
mov
jnp
pop
mov
in
mov
push
push
sti
scas
cmpb
incl
pop
mov
enter
add
push
lock
in
mov
jmp
and
sub
inc
hlt
lcall
popa
les
mov
lea
mov
mov
inc
mov
adc
sbb
ljmp
divb
lods
fidivrs
insl
out
insb
mov
arpl
lds
dec
cmpsb
pushl
cld
jmp
clc
out
lret
std
cmpsb
aad
mov
dec
int3
cwtl
jge
pop
jg
cmp
imul
sbb
dec
sahf
lods
pushl
push
test
and
xchg
inc
je
mov
sub
push
jnp
aas
test
cmc
incl
test
mov
push
cmp
lods
xchg
insl
rolb
jno
xor
shll
ja
sbb
pop
ja
xchg
or
and
inc
jg
incl
fs
imul
jmp
push
lods
mov
xor
decl
cmp
cwtl
adc
jno
stc
jae
mov
mov
call
nop
cmp
fisubl
inc
and
int3
repnz
mov
faddp
test
mov
clc
mov
lcall
mov
inc
cltd
sub
push
adc
inc
mov
out
call
pop
jno
push
test
xchg
adc
inc
rorb
push
inc
and
mov
dec
lea
fmuls
in
sahf
xchg
pop
xlat
inc
cld
pop
clc
jne
icebp
rcrb
cwtl
xor
test
jl
sub
xor
xorb
lock
push
xor
aaa
loopne
jmp
std
test
or
inc
std
scas
mov
test
ljmp
jg
decl
cmp
out
je
jecxz
jle
jl
repz
in
push
or
loop
mov
xchg
and
cwtl
sbb
fsubs
call
std
ljmp
push
pop
xchg
ja
imul
cmp
mov
push
cmc
insb
cmpsl
mov
add
fcomip
pop
ljmp
jns
cmp
ja
inc
jecxz
jno
pop
enter
mov
jmp
adc
cwtl
aam
mov
std
cmp
jge
iret
imul
mov
mov
sbb
loop
or
xchg
rorb
call
je,pt
lret
out
inc
mov
out
aam
xor
jmp
cli
mov
xchg
incl
and
dec
pop
das
jb
add
cvtdq2ps
mov
repz
ljmp
out
mov
adc
repz
and
les
lods
mov
lods
sahf
ljmp
cmc
fwait
jmp
push
xchg
sbbb
add
push
or
cmp
cs
adc
mov
ds
jo
jae
insb
push
inc
popa
fadd
aaa
xchg
movsb
sub
lcall
and
ja
sbb
outsl
ficoms
xchg
rolb
sbb
add
xchg
outsb
cli
jmp
pop
movsb
popl
add
cld
negl
shlb
push
mov
ljmp
mov
outsb
pop
fdivr
loope
cmp
push
sub
in
mov
int3
adcl
jns
push
call
push
push
push
xchg
lret
popa
and
jno
sub
dec
sbb
out
inc
mov
cld
jle
aaa
rcll
int3
jmp
jmp
mov
lcall
adcb
pop
mov
dec
andb
fisubs
push
scas
js
sub
sbb
cltd
xchg
fwait
inc
xchg
push
dec
shll
lea
fdivs
sub
in
incl
jns
in
movsl
int3
pushf
mov
in
aaa
ljmp
and
adc
sub
in
add
repnz
cwtl
dec
add
mov
mov
pop
mov
ljmp
sbb
sar
lret
adc
adc
xchg
in
insb
xchg
bound
add
stos
push
push
add
jg
lds
test
mov
es
or
leave
shrl
fs
mov
call
and
clc
sub
sbb
ret
xor
add
or
imul
daa
or
sub
mov
mov
add
adc
and
adc
push
xchg
fidivrs
enter
sbb
jge
push
in
stc
inc
lea
mov
sub
jmp
ljmp
and
jne
cmp
clc
fisubs
pop
mov
ljmp
push
add
outsl
push
xor
jp
sub
jnp
inc
or
test
or
fldcw
in
test
popf
sub
das
lret
xchg
push
mov
xchg
jmp
pop
lds
fsubrl
arpl
jns
sbb
stos
pop
pop
jae
and
sbb
push
pop
hlt
inc
and
and
push
nop
mov
sbb
jmp
in
mov
sbb
mov
adc
stos
in
xchg
scas
dec
xchg
adc
lcall
add
fists
shl
test
std
pavgw
cmpsb
mov
mov
fisubs
push
lcall
sub
cmp
ds
out
stos
mov
jp
scas
xor
scas
clc
cmp
lcall
rcl
call
dec
jecxz
and
push
mov
dec
imul
testl
int3
jmp
cli
inc
scas
addb
arpl
lock
jl
loope
mulb
movzbl
outsl
jns
xor
adc
js
negl
rorl
adc
dec
icebp
mov
push
mov
mul
or
sti
decl
mov
pop
stos
sub
mov
scas
inc
out
mov
adc
lcall
rcrl
xchg
into
fdivrs
rcrb
adc
or
mov
or
dec
mov
cmp
lcall
outsb
dec
jp
dec
inc
lods
clc
sbb
loope
in
std
das
clc
pop
jmp
nop
xor
std
les
lcall
ret
or
pop
mov
xchg
or
add
int3
sti
jmp
call
test
shlb
out
in
cs
daa
and
mov
mov
lcall
imul
fimull
jle
add
insb
out
out
adc
pushl
xor
jbe
mov
leave
sbb
mov
daa
pop
cmpsl
jg
lods
lods
pop
ret
sub
inc
fadds
data16
in
das
inc
dec
xchg
jl
sbb
xor
imul
xor
inc
das
cli
adc
dec
adcb
jne
outsb
outsb
es
push
nop
out
cmpsb
decl
jmp
ljmp
popa
addr16
mov
push
mov
jmp
pop
adc
lret
dec
lahf
lret
xchg
fisubl
mov
arpl
mov
sbbb
dec
lods
in
jns
sub
and
push
mov
pusha
inc
leave
insl
adc
or
xchg
jl
incl
add
fnstenv
sahf
frstor
jae
movsl
pop
aam
imul
decl
andl
xchg
and
lahf
mov
imul
fptan
rcll
bound
in
aaa
je
fucomp
clc
pop
nop
cs
jbe
inc
je
sbb
imul
pop
shrl
ss
mov
mov
pop
inc
cmc
push
nop
fisttpll
adc
sbb
aaa
xor
jl
jmp
sub
outsl
in
popf
push
stc
pop
mov
aas
dec
mov
push
bound
incl
hlt
pop
mov
popf
mov
mov
test
int3
mov
mov
cmp
inc
je
add
dec
mov
adc
xchg
call
jmp
and
inc
add
add
les
sub
sub
leave
xorl
sbb
xchg
call
nop
or
cmp
stos
mov
imull
xchg
xchg
mov
ret
pop
lret
incl
jo
xchg
add
orb
pop
jmp
js
adc
jmp
sbb
sbb
sbb
and
in
sti
inc
mov
jo,pn
lcall
js
jge
out
jno
lds
scas
popa
lahf
sbb
popf
es
movsl
jno
bound
add
out
mov
inc
aaa
cwtl
add
mov
mov
jns
push
adc
lods
mov
xchg
xor
lcall
enter
bound
daa
ljmp
shlb
fistps
movsl
fldcw
cmp
add
sub
cmp
sub
push
inc
inc
pushl
jbe
mov
mov
mov
xchg
rorb
fnstsw
push
pop
push
nop
repnz
decl
std
xchg
les
aaa
nop
push
fmuls
jne
test
enter
jmp
imul
sti
sti
or
in
jo
cmp
cmp
sub
mov
pop
push
icebp
leave
push
mov
lret
adc
popf
repz
out
push
dec
xor
jmp
cmp
loop
mov
xchg
adc
cmpsb
aas
stos
sbbl
popf
xchg
iret
call
jl
pop
sbb
add
imulb
call
or
sahf
xor
int3
inc
adc
mov
mov
je
sbb
xchg
into
mov
mov
ss
mov
dec
cld
setae
ljmp
idivb
dec
xchg
int
pop
push
xchg
and
stos
iret
iret
xor
cmp
mov
jns
fucom
dec
sub
rcrl
loopne
call
icebp
xor
adc
decl
and
and
pop
bound
jns
push
les
clc
pushl
cld
mov
or
xor
call
icebp
into
lcall
movsb
imul
sahf
mov
lods
mov
orl
rcrl
add
out
call
call
int
js
push
outsb
xor
cmp
inc
jne
cmp
shrb
xor
call
loopne
mov
hlt
mov
sub
dec
jp
add
inc
push
loopne
incl
rcrl
out
imul
push
cmpsb
xchg
out
lcall
jns
jg
cmp
pop
aas
xchg
lock
icebp
clc
cmp
repz
iret
sbb
test
jp
gs
pop
sbb
push
sub
out
xchg
jo
and
jle
mov
fdivp
pop
mov
jmp
insl
jns
jno
popa
xchg
jnp
jmp
or
enter
mov
and
in
cltd
push
outsb
and
test
decl
push
jecxz
shl
movsb
gs
int
insl
pusha
xchg
adcl
in
push
adc
xor
inc
xor
adc
leave
lock
mov
clc
push
adc
cs
pop
stos
sbb
xchg
outsl
jo
or
mov
mov
xor
mov
leave
in
cmp
in
add
pushl
mov
push
gs
jp
outsl
or
imull
jae
mull
cmp
sti
mov
sub
or
flds
or
sub
inc
xor
loopne
xchg
jb
adc
call
xchg
pop
jnp
mov
popf
into
xchg
xchg
mov
lea
rcll
mov
aam
loope
and
sbb
es
xchg
inc
enter
push
mov
js
gs
insl
push
ljmp
sbb
lds
mov
dec
pop
adc
xor
leave
cli
xor
shlb
push
lcall
jg
pop
insl
push
es
bound
mov
xchg
lret
stos
loop
aas
movsb
cmp
test
sub
insl
loope
stos
cmp
in
mov
mov
pushl
bound
lahf
insl
in
lds
lret
and
and
jne
in
sub
xor
mov
pushl
sub
and
push
cmpsb
lds
daa
lahf
outsl
ds
jmp
popf
push
imull
repnz
push
push
int3
adc
bound
xor
mov
movsl
mov
fcomip
clc
jmp
dec
int
pop
in
js
mov
push
xor
outsb
mov
add
cli
sbb
loope
add
daa
in
adc
mov
rcll
and
adc
gs
ljmp
imulb
pop
test
idivl
rcr
ret
push
dec
xchg
mov
inc
cwtl
xor
lret
cmpsb
mov
pop
pop
pop
stos
shrb
orl
push
cli
fdivrs
pusha
arpl
xor
fcomps
jmp
inc
and
jp
ja
stos
adc
imul
sbb
adc
lods
ljmp
loop
and
lcall
or
xchg
test
nop
sub
into
std
add
mov
xor
push
mov
pop
roll
xlat
outsb
cli
xchg
ljmp
xor
cmc
sahf
cmpl
mov
push
xor
sub
mov
jnp
cmp
xchg
mov
idivl
xchg
dec
sub
out
mov
int
mov
adc
pusha
mov
mov
loopne
lahf
ljmp
dec
dec
sti
add
cmpsl
cmc
nop
and
cmp
or
clc
pushf
mov
mov
pushl
pop
testb
enter
jbe
lea
inc
dec
dec
and
adc
xchg
scas
pushl
jmp
adc
or
sub
fdivs
nop
rcll
call
movsl
adc
jno
pop
jbe
loope
sti
mov
sahf
shl
int
or
incb
leave
add
imul
in
cmp
add
cmpsl
push
dec
jmp
lahf
inc
fiaddl
pop
shr
arpl
fcoml
ja
incl
dec
inc
rcrl
stc
pop
or
pop
jmp
ljmp
jmp
outsb
jg
pop
iret
xchg
cmp
mov
and
jecxz
cmc
cmp
mov
stos
cmc
add
or
mov
sbbb
adc
bound
lcall
movsb
adc
mov
jo
jmp
sub
stc
lcall
fisttpl
and
sbb
xlat
jbe
repz
or
lcall
xchg
and
sub
iret
mov
loopne
popf
out
in
push
add
mov
jecxz
xchg
call
mov
lds
xor
ret
adc
and
sbb
pop
hlt
mov
and
jmp
mov
test
cmp
ret
lea
inc
ja
push
push
ret
call
dec
add
rcrb
movsb
cmp
scas
xor
jle
js
mov
mov
ret
icebp
jg
gs
mov
mov
enter
int
xchg
cmp
jbe
adc
sbb
fsubp
inc
dec
inc
lcall
pop
inc
dec
jb
push
aas
loope
shlb
cmp
dec
rcrl
jge
icebp
ljmp
cmc
shlw
inc
or
jb
lcall
lods
aas
mov
add
movsl
adc
mov
scas
in
divb
mov
psllw
inc
in
shrl
outsb
ret
lret
nop
dec
data16
sub
adc
imul
jmp
cmpsb
and
xchg
movsb
xor
mov
ds
inc
mov
jnp
addr16
cmp
xchg
push
or
jno
andb
dec
jge
sbb
imul
les
pop
pop
cmc
pushl
jnp
jge
stos
lret
test
dec
ljmp
pusha
sub
inc
pushl
insb
and
ss
loop
jmp
out
add
fidivrs
jmp
push
sbbl
shll
mov
sub
call
sub
scas
pop
notb
push
inc
jb
xor
movsw
mov
pop
mov
dec
mov
nop
cmp
mov
ret
adc
inc
hlt
or
cmc
decl
xchg
cmc
pop
orb
stos
or
adc
pop
add
sbb
cmpsb
or
mov
roll
mov
pop
hlt
scas
cld
sub
outsl
push
pusha
and
scas
cli
mov
jmp
daa
or
mov
sbbb
or
ljmp
aam
popf
xchg
insb
scas
icebp
fs
sub
loope
popa
or
cmp
std
mov
add
jmp
out
rorb
xlat
mov
bound
xor
mov
push
ret
sub
stos
insb
andb
xor
loopne
mov
gs
add
jbe
lods
xor
xchg
fcomps
inc
cs
pop
cmpsl
push
xlat
xchg
insb
push
ret
in
scas
in
addl
cmp
jg
jg
std
roll
pop
add
sahf
sahf
jecxz
cmp
test
mov
ljmp
fists
lods
pop
loop
leave
push
mov
pop
sarb
jne
jg
cmp
mov
push
fistpll
pushl
in
ret
or
dec
sbb
or
and
inc
mov
call
xchg
popf
pop
in
cltd
lahf
sub
shlb
in
dec
or
imul
xchg
xchg
xchg
push
pushl
mov
ficomps
add
add
loopne
jae
sahf
popf
jmp
es
xchg
lods
add
mov
inc
int3
das
add
pcmpgtw
stc
addr16
js
mov
sbb
jae
sub
into
shr
cltd
fstpl
lea
leave
sbb
ds
sbb
insl
dec
sbb
pop
mov
jmp
decl
sbb
push
mov
daa
mov
outsl
jbe
pop
test
idivl
scas
inc
and
jno
loope
call
ss
pop
ret
das
mov
mov
ret
pop
fdivrs
push
push
lret
incl
lock
adc
outsb
jae
push
or
stc
cmc
pop
sahf
mov
mov
sub
clc
jmp
movsb
xor
popf
add
decl
mov
enter
mov
repnz
call
loopne
jbe
dec
pop
les
decb
enter
je
cmp
decl
out
mov
loop
or
cli
fsubr
inc
mov
xchg
and
cmp
cmp
inc
das
iret
sub
xlat
out
mov
ret
push
mov
push
popf
and
dec
and
jno
cmpsl
bound
xchg
and
ds
decl
inc
xor
imul
dec
test
mov
sub
loopne
out
jmp
inc
sbb
mov
jmp
jnp
pusha
xchg
xorb
jp
sahf
inc
aam
mov
std
cmp
inc
xchg
sub
push
cmp
add
mov
mov
push
enter
fbld
mov
das
testb
lods
push
inc
enter
int
xchg
pop
movsb
mov
fcomip
ljmp
cmpl
fisttps
sahf
cmpsl
fdivrl
sahf
cmp
add
push
test
imul
call
aas
or
mov
mov
mov
xor
dec
cmc
rolb
mov
dec
fstpl
jl
jno
and
out
lcall
jecxz
push
cli
xchg
das
xchg
in
push
into
sahf
imul
fsubr
mov
mov
pop
clc
inc
mov
pop
dec
sub
les
inc
daa
jge
lock
jo
ljmp
fs
cltd
stos
mov
mov
repz
push
push
sub
pop
pop
je
mov
movsb
mov
mov
xchg
push
lret
dec
pandn
xchg
pop
dec
in
jl
push
mov
jns
pop
pop
and
jne
and
fcoms
mov
mov
aad
sti
dec
clc
jo
cmpsb
adc
and
mov
dec
insl
mov
jg
jmp
mov
sbb
add
gs
push
mov
xor
add
cmpsb
filds
popw
or
ret
lahf
test
inc
or
xorl
into
cmpsl
mov
hlt
incl
lcall
jmp
push
cli
sub
sbb
paddsw
lock
fildll
mov
dec
mov
outsl
sub
xchg
push
fidivs
daa
lret
sub
pop
fmulp
mov
cmpsb
decl
loop
mov
sbb
jle
inc
sbb
aam
pop
pop
pop
lcall
or
popf
enter
lds
aas
mov
jp
cs
leave
xor
pop
adc
jo
add
sbb
mov
lcall
enter
xchg
jecxz
mov
aas
jb
sahf
inc
call
mov
jno
lret
int
in
mov
sub
mov
jmp
dec
cmpsb
repz
jbe
andb
or
mov
cwtl
shrl
push
repz
call
sbb
movsl
faddp
adc
sub
icebp
sub
int
cltd
dec
mov
jge
or
cmc
leave
sub
js
inc
inc
push
hlt
lcall
push
jae
es
jb
pop
insl
cli
pushl
ljmp
addr16
adcb
test
cltd
sbb
sub
xchg
clc
ds
sbb
pop
cli
add
nop
sbb
clc
idivb
jmp
cmpsl
lahf
cmpsb
fnstenv
imul
in
cmp
xor
hlt
and
movsb
decl
js
mov
add
pop
rclb
or
adc
int
in
shl
clc
pushl
je
pop
lds
clc
mov
sbbl
add
stos
cmp
pop
sahf
stos
mov
lret
cli
call
ret
out
test
dec
les
cwtl
add
mov
push
or
pushl
pop
fs
out
inc
fwait
bound
hlt
add
cmp
cmp
in
repz
or
loope
fcomip
or
inc
das
enter
pop
xchg
push
mov
call
je
cmp
jg
pop
and
ljmp
daa
mov
scas
or
shrb
dec
cmp
cli
in
jge
dec
ret
sti
mov
shll
fildl
cmc
mov
es
imul
movsb
dec
rclb
pop
or
lret
mov
sbbb
and
mov
cltd
loopne
divb
in
xchg
out
pushl
movsl
out
pop
cmp
hlt
jns
pop
ljmp
aam
lods
xor
sahf
es
lcall
xchg
mov
fistps
repz
out
lahf
stos
pop
pop
std
incl
jbe
sub
rorl
out
sbb
cltd
jne
mov
add
jg
or
push
out
movsl
lret
jne
adc
lods
lea
iret
movsb
test
mul
fmulp
xor
adc
pop
hlt
incl
pop
jb
ficoml
fisttps
dec
dec
mov
fcompl
movsb
jb
pop
fidivs
ja
cmc
xchg
rclb
inc
sbb
les
test
pushf
xchg
mov
decl
shl
in
add
xor
xchg
inc
lret
jbe
inc
ja
and
imulb
inc
jmp
in
jmp
push
popa
in
insb
mov
jge
inc
fdivl
mov
loope
in
mov
pop
jg
jnp
incb
lods
pop
imul
jbe
add
cmpl
mov
lcall
or
pop
push
inc
loop
cmpl
pushf
data16
or
mov
arpl
std
test
out
push
stc
jecxz
fnstsw
mov
shlb
int3
pop
rcrb
jae
mov
js
popf
and
mov
mov
mov
mov
fsubs
icebp
out
cwtl
xchg
mov
ss
jl
jg
cmp
aas
ret
je
mov
pop
jb
outsb
loope
push
es
mov
decl
lock
sahf
lds
adc
lock
jbe
dec
int3
mov
jg
scas
dec
inc
jns
sbb
lcall
scas
ja
in
mov
sbb
lock
das
cltd
inc
jns
arpl
mov
jb
add
fdivr
incl
imul
mov
push
pop
fstps
xchg
push
push
jl
xchg
or
xorl
imul
sub
adc
xlat
outsb
insb
ret
mov
mov
xchg
rclb
xchg
call
into
rcl
cmp
inc
rcrb
add
sbb
clc
aaa
std
sti
xchg
mov
and
inc
sub
mov
incl
jg
pop
ficomps
rorb
mov
cmpsl
lock
call
mov
outsb
mov
aam
loopne
insb
mov
or
pusha
dec
or
sub
fdivrp
out
jo
xor
test
mov
out
adc
mov
sub
mov
ljmp
loop
dec
lret
test
dec
pop
mov
rcr
xor
out
push
imul
test
jmp
out
jg
lret
jns
fimull
mov
xchg
add
adc
sbb
pop
fldenv
sar
jg
lea
push
mov
or
nop
in
mov
mov
std
mov
jns
je
call
lcall
call
adc
or
inc
jmp
fs
or
imul
in
cmp
mov
sub
test
cmp
fcmovnu
lods
pushf
js
adc
xor
jne
add
add
es
or
aaa
pushf
ds
decl
xlat
bound
and
xchg
dec
push
pop
mov
jmp
mov
adc
add
repnz
xor
mov
lret
push
and
lds
mov
mov
or
repz
inc
mov
mov
rcll
adc
mov
icebp
jae
outsl
rol
inc
push
arpl
incl
xlat
adc
into
sbb
add
enter
sti
fisttps
mov
jge
pop
xchg
adc
loopne
lock
fldt
movsl
push
mov
ljmp
lret
mov
mov
and
movsl
and
pop
jge
push
decl
ficoml
push
ror
adc
lret
mov
add
add
inc
scas
clc
lcall
outsb
sbb
and
sbb
push
rol
adc
lcall
insl
sti
repnz
test
or
push
push
cmpsb
enter
std
js
mov
scas
pop
adc
mov
cmp
sahf
pop
ds
scas
repz
sub
test
into
push
jne
mov
inc
sub
negl
and
mov
fstps
inc
adc
lret
sbb
addr16
ljmp
lods
inc
mov
xchg
lds
cs
cli
mov
jg
aaa
cmpsb
pushf
push
aas
sbb
lahf
inc
jb
in
out
hlt
mov
add
mov
adc
jmp
mov
cmp
cmp
enter
movsb
sbb
jmp
or
cmp
insl
adc
int3
mov
repz
mov
leave
shrl
adc
movb
lock
xchg
lock
dec
stos
lcall
push
scas
adc
add
out
push
fisubs
and
movsb
mov
adc
push
adc
and
or
in
andl
adc
pushl
cmp
icebp
stos
mov
stos
xor
push
outsb
out
call
nop
xor
sbb
jo
inc
mov
mov
mov
shl
std
push
aad
mov
sub
sub
rclb
cmp
call
and
pop
imull
es
xor
jo
lcall
sub
test
pushl
mov
or
repnz
pop
lea
ret
pop
pop
jns
and
call
mov
dec
loopne
popf
mov
pop
mov
roll
jl
sar
pushl
repnz
das
fs
leave
lods
jo
movsl
cs
movb
mov
adc
cmp
imul
push
cmpsl
loope
cld
mov
les
mov
popa
xchg
pop
mov
push
das
clc
jmp
sub
repnz
sti
xor
jmp
movsb
push
dec
push
dec
pop
jae
nop
aas
lods
pop
hlt
lods
in
incl
pop
cmp
pop
call
mov
cmp
test
std
cwtl
xor
xor
pop
mov
and
inc
test
gs
js
push
mov
dec
test
mov
push
xor
mov
shl
sub
adc
aas
loopne
decl
in
lock
stos
cmpsb
push
aad
rcr
sbb
fsubrl
inc
ret
cltd
push
scas
fadd
sub
scas
clc
cltd
push
out
out
pushf
lds
dec
movsl
xchg
or
lahf
std
adc
jge
mov
fwait
sti
dec
js
cmp
push
mov
and
mov
xor
or
decl
add
aaa
lods
es
sqrtps
gs
jg
xchg
roll
sub
xor
test
push
iret
enter
es
repz
pusha
adc
jno
out
mov
rorl
pop
in
outsb
adc
fsts
decl
add
add
insb
jnp
or
daa
repnz
dec
sub
js
pop
daa
cmp
orb
pop
les
sbb
inc
xchg
addl
lcall
adc
mov
mov
push
sahf
ficoms
mov
jg
cltd
cmp
pusha
xchg
jle
cwtl
repnz
shlb
aas
add
add
inc
sarb
lods
adc
adc
push
mov
data16
sub
fidivs
and
jbe
adc
mov
sbb
cmpsl
popw
ljmp
mull
cli
pop
divb
jecxz
mov
inc
add
mov
xchg
and
jp
pop
push
adc
rcr
lahf
scas
add
scas
lcall
dec
xlat
inc
mov
mov
and
dec
inc
dec
pop
pop
sbb
cmp
push
in
les
ljmp
mov
and
add
jne
test
bound
mov
mov
xchg
pop
incl
xchg
out
push
lds
jno
dec
orl
mov
je
out
rcll
sti
or
or
jb
adc
dec
adc
adc
loopne
in
mov
mov
sub
adc
pushl
cld
lcall
cld
push
pushf
mull
or
or
mov
jnp
int3
sbb
cli
mov
lret
aad
stc
or
push
jmp
pop
sub
push
test
inc
outsl
pop
lret
xlat
inc
lahf
push
int3
cmpsb
stos
cmpb
lcall
lcall
pop
pop
add
in
push
cmp
pusha
push
imul
push
test
jge
mov
pop
lods
ljmp
add
mov
sti
jl
xacquire
xchg
sbb
inc
shl
mov
test
mov
and
jge
mov
loopne
and
dec
mov
test
pop
stos
cltd
vpsllw
mov
hlt
icebp
xchg
xor
push
fisubrs
or
inc
xlat
jge
in
lcall
fwait
xor
test
ror
sub
fmul
shlb
call
add
mov
mov
or
dec
pushl
or
hlt
cwtl
xor
int
decl
mov
xor
shr
mov
inc
jbe
ds
xchg
or
iret
test
repnz
arpl
aas
ret
fwait
jns
lcall
push
mov
movsb
gs
and
mov
popf
cmpsb
cmp
mov
das
cli
dec
dec
adc
add
adc
nop
ja
das
out
mov
cmc
lahf
jg
mov
pushf
test
scas
adc
adc
and
mov
xchg
call
test
adc
adc
out
stos
lahf
sub
xchg
xchg
mov
call
and
pushf
xlat
dec
cmp
and
mov
cmp
push
push
pop
lods
xchg
cmc
ja
out
outsb
shll
mov
rcrb
sbb
mov
or
xchg
div
xchg
dec
xchg
test
sub
decl
push
mov
gs
lods
sbb
popf
in
cmc
js
ljmp
js
jmp
jns
lds
arpl
add
outsl
lods
mov
ret
loope
pop
mov
cltd
mov
std
cwtl
mov
mov
cli
out
je
std
xchg
into
cmc
mov
ja
pop
jne
xchg
pop
dec
les
or
scas
jns
xchg
sbb
sahf
cwtl
pop
adc
mov
or
ja
jmp
sahf
cld
jae
mov
rclb
flds
daa
dec
pop
pusha
fwait
leave
cmp
decl
push
pusha
mov
insl
cmp
pop
fwait
xor
fstl
cmp
inc
ror
fucomip
and
outsl
cli
decl
testl
jecxz
push
in
push
insl
dec
jno
loope
sbb
cmp
loop
call
std
fists
cltd
mov
jns
movsb
dec
out
xchg
test
mov
jmp
jl
iret
jge
add
push
mov
and
dec
lcall
sbb
pop
sbb
jo
ljmp
xor
test
pop
cs
pop
std
adc
cmc
and
jne
and
icebp
incl
mov
decb
mov
inc
dec
mov
flds
jae
xchg
jge
dec
sub
mov
cmp
cmpsl
incl
jae
or
sub
xchg
dec
stos
or
jmp
cmp
shll
pusha
inc
mov
push
in
xchg
adc
ljmp
dec
cld
sub
mov
addb
test
lahf
int3
mov
push
shlb
pop
mov
xchg
sbb
cmp
enter
add
inc
mov
push
pop
or
cmpl
jae
outsl
call
ds
adc
xor
lcall
nop
dec
lods
movsb
popl
movsl
ja
fdivs
and
inc
dec
inc
insb
js
lret
lcall
push
jp
ljmp
arpl
cmp
xor
rcll
test
push
mov
inc
fstpt
frstor
adc
or
bound
inc
adc
sarl
pop
mov
jmp
jns
aaa
mov
call
sbb
mov
dec
les
rcrb
cli
pushl
jmp
pop
leave
mov
jp
pop
cmp
nop
mov
jbe
lock
out
xchg
adc
push
adc
arpl
mov
pop
dec
test
add
ljmp
leave
dec
js
nop
jb
dec
cmp
out
sub
inc
mov
cmp
call
clc
popa
or
pop
add
pop
adc
ljmp
insb
stc
sbb
ljmp
sbb
cltd
les
out
lods
jb
or
pop
lret
rorb
push
test
cld
cld
rclb
push
hlt
cltd
inc
mov
call
cmp
inc
repz
jmp
cmp
adc
sar
or
out
push
decl
jb
int3
aas
mov
into
adc
xchg
ds
leave
jmp
stos
pushl
jb
mov
imul
dec
and
rcrb
jnp
lds
iret
test
incl
cmp
mov
push
insb
shlb
pop
cmc
packuswb
cltd
mov
test
add
mov
mov
repnz
push
mov
movsl
dec
jecxz
push
imull
cmp
fnsetpm(287
inc
adc
jl
int
fnstsw
dec
push
ds
mov
add
mov
push
es
leave
add
or
int
or
sbb
xchg
jmp
jp
mov
mov
mov
cmp
mov
int
jecxz
lock
stc
xchg
sahf
sub
dec
jecxz
sub
shl
loop
mov
cmp
xchg
xor
call
adc
mov
mov
and
divb
shrb
mov
jle
sbb
ljmp
push
sbb
and
cld
sub
imul
dec
aam
call
ljmp
pop
enter
adc
mov
cmc
inc
push
fnstsw
addb
push
xor
sbb
and
call
jbe
adc
jmp
cmp
jg
and
cmp
pop
mov
xchg
dec
lret
inc
or
push
sbb
subb
xchg
aad
add
inc
ss
loop
jmp
inc
pop
int
xor
out
jp
movb
clc
orb
stos
pushl
or
jno
movsl
movsl
int3
movsl
mov
mov
scas
push
push
lret
jg
inc
fisubrs
faddl
mov
ret
ss
fcmove
and
pushf
addr16
jmp
jp
push
inc
push
mov
mov
push
imul
inc
dec
fiadds
sub
cmp
decl
add
dec
xor
sub
std
push
insb
sti
pslld
out
stos
jecxz
mov
xor
cli
dec
clc
ljmp
dec
mov
pop
inc
into
stc
xchg
idivb
inc
incl
imul
in
cmp
pop
fildll
push
xchg
into
test
cld
cmp
arpl
sub
push
stos
or
add
imul
pop
scas
shrl
push
sbb
jbe
mov
push
ljmp
out
lret
jae
mov
icebp
push
push
mov
inc
ds
decl
adc
push
pop
bnd
imul
adc
adc
jns
cmp
imul
rol
adc
inc
xor
bnd
nop
call
pop
mov
ret
call
jb
insl
mov
cld
pop
or
shl
xchg
pop
or
pop
idiv
lahf
sbb
mov
cmp
mov
cmp
mulb
add
inc
ljmp
jg
push
out
arpl
adc
sahf
mov
fdivrs
pop
mov
xlat
mov
aaa
cld
add
mov
push
nop
fs
out
insb
dec
outsb
lret
out
repnz
pop
lret
mov
sbb
std
inc
imul
push
mov
push
mov
cmpsb
incl
adc
or
and
pushf
mov
inc
pop
lods
movsb
decl
out
jg
and
mov
pop
leave
adc
sub
add
pop
dec
mov
incl
sbb
and
js
mul
pop
stc
jmp
in
outsl
mov
sub
push
cmc
in
lahf
cmc
test
pop
xor
scas
xchg
dec
jbe
in
xchg
aaa
and
pop
in
ss
mov
add
jle,pn
into
pop
jb
lods
mov
cmpsl
ss
scas
call
sub
js
call
push
cmp
inc
icebp
jnp
mov
inc
lds
sub
mov
lds
test
mov
jmp
fstl
jg
mov
leave
mov
shl
sti
pop
add
pushl
push
sbb
scas
xor
andb
dec
movsl
mov
rol
cmp
add
jmp
fs
pushf
test
pop
push
sbb
mov
or
lret
add
push
pop
fwait
bound
push
mov
add
sti
pop
pusha
fnsave
adc
lahf
out
push
or
xor
dec
push
jmp
jnp
or
arpl
push
xor
mov
cwtl
dec
outsb
ret
adc
leave
jno
int
pop
dec
int3
shll
sar
mov
stc
ss
push
nop
cmp
scas
mov
repnz
shr
testl
add
and
into
pop
or
call
and
mov
cmp
idivb
je
stc
mov
std
outsl
cltd
scas
ret
pushl
ja
clc
subb
je
sub
xlat
mov
daa
xchg
inc
jbe
inc
push
iret
inc
mov
push
cld
mov
shll
in
xchg
cmp
pop
test
stc
jmp
lods
rcr
jg
jmp
sbb
xchg
mov
and
ljmp
mov
or
or
ret
outsl
sub
or
or
jnp
hlt
popa
jns
mov
in
dec
clc
pop
icebp
inc
add
shrl
fcoml
push
mov
sub
mov
out
inc
cmovno
out
call
jecxz
sti
in
incl
jne
mov
sub
xchg
cwtl
test
cmpsb
stos
and
inc
adc
push
mov
pushl
push
push
fisubrs
xchg
das
add
shrb
imul
sbb
jmp
cmp
add
mov
xchg
push
push
sub
lock
inc
in
loop
cwtl
out
dec
pusha
push
adc
inc
sub
mov
push
rolb
arpl
in
push
jno
mov
rolb
sahf
data16
decl
cmp
cmpsl
jb
inc
cmp
mov
flds
mov
mov
ja
stos
and
pop
aad
mov
pop
dec
push
shrl
test
dec
xchg
scas
cmp
lock
ja
cmp
push
add
xchg
outsl
jp
out
into
sahf
icebp
add
pop
mov
loopne
shll
stc
inc
push
ja
movsb
mov
adc
hlt
cli
lock
xchg
movl
pusha
bnd
ljmp
adc
inc
jmp
inc
sub
add
and
adc
ljmp
sbb
xchg
sbb
movsb
lea
jmp
mov
call
out
lds
cmp
push
fs
inc
call
pop
jns
jbe
push
pushl
xlat
dec
xorb
sub
stc
mov
sahf
pop
test
popa
test
mov
xor
inc
pop
scas
rolb
insl
ljmp
jmp
je
jmp
mov
ds
and
stc
cwtl
ljmp
mov
arpl
inc
nop
stc
cmp
sahf
pop
cmp
dec
jo
sbb
xor
lcall
cld
cld
mov
xchg
cmp
pop
popf
xor
nop
xchg
cmp
lret
xor
sub
call
pushf
ljmp
jp
or
cmp
jo
lcall
pushl
xchg
bound
outsb
call
call
fstl
jne
dec
jnp
push
xor
xchg
shlb
std
push
es
repz
subl
push
adc
mov
cld
hlt
or
lcall
mov
dec
jbe
push
jg
jmp
mov
jl
aas
ret
clc
popf
lock
ficoms
sbb
decl
and
jge
mov
sbb
insb
rclb
lcall
test
add
add
int
imul
nop
pushl
push
scas
fs
call
imul
sahf
mov
aaa
mov
jno
xor
push
arpl
shll
sbb
xor
pop
lock
mov
aam
jp
jg
jo
scas
pusha
lret
aad
ficomps
jecxz
fidivl
sbb
test
outsl
cmp
sbb
sub
mov
sub
cld
sahf
fucomip
mov
stc
repnz
mov
ss
rcll
cmp
sarb
nop
lret
stos
pop
lock
out
sarb
shll
nop
leave
call
daa
insl
add
dec
decl
xor
sub
add
fsubs
mov
fidivrs
int3
inc
or
pop
jecxz
jg
dec
or
aaa
push
dec
cmp
jo
push
and
push
gs
ds
sub
mov
shlb
jnp
adc
push
loope
or
jb
jmp
mov
idivb
ret
pushl
or
inc
loope
loopne
mov
or
inc
push
and
add
push
push
mov
jg
dec
add
mov
add
cmp
sub
jo
inc
pop
mov
lcall
mov
mov
fxch
cmpsb
cmp
mov
sti
jbe
lcall
les
daa
cmp
mov
sbb
mov
push
shll
into
dec
or
lods
decl
and
mov
or
mov
je
jbe
dec
sbb
or
mov
pop
jmp
push
or
jge
mov
mov
sarb
xchg
stos
sub
sub
dec
cwtl
or
sbb
adc
mov
xor
lret
xchg
out
icebp
and
or
aad
dec
rol
cmp
and
add
mov
xchg
cmc
icebp
jne
pop
out
ficomps
pop
cmp
inc
pop
mov
cmp
ret
add
or
xor
daa
push
test
add
pushl
push
dec
sbb
push
cmpsl
iret
inc
mov
add
cmp
adc
mov
sub
and
pushl
push
pop
mov
mov
push
mov
add
dec
inc
pusha
lds
mov
stc
inc
push
mov
push
dec
push
lret
push
mov
fsubr
sub
clc
or
ljmp
pushl
mov
jnp
out
jae
aad
cmp
push
mov
push
fbld
pop
enter
push
inc
dec
lahf
inc
and
xchg
out
and
movsb
xchg
pop
jae
int
popa
js
jg
mov
call
xchg
adc
decl
rcll
inc
pop
rolb
mov
or
mov
dec
ds
sub
cmp
iret
loope
fcom
xchg
fwait
mov
lods
mov
scas
sub
xlat
jl
dec
sbb
ror
dec
inc
lret
xor
sti
out
incl
sub
xor
xor
enter
es
stos
test
popa
xchg
mov
pop
ljmp
mov
sub
sub
leave
enter
adc
lods
loope
jg
fisttps
push
jne
jg
sbb
rorl
jb
aas
inc
mov
adc
mov
and
fdivs
mov
pop
push
add
mov
mov
or
jle
dec
lret
inc
sbb
cmp
iret
sub
popf
jl
test
pop
aad
sub
jb
ljmp
movl
cmp
outsb
js
popf
data16
mov
popa
out
sahf
ficoms
call
mov
lea
adc
fwait
push
sbb
mov
mov
mov
cmp
sub
sbb
fisubrs
int3
or
pop
scas
ljmp
pop
jmp
scas
std
dec
and
mov
iret
sbb
les
cmp
aaa
std
pushl
push
add
sub
in
popf
push
outsl
das
enter
call
f2xm1
test
addb
fmull
mov
scas
loopne
dec
arpl
and
gs
jge
pushl
loop
in
pushf
pop
inc
xor
pop
out
lods
sbb
pop
insl
xor
mov
xchg
cmp
ficoms
call
pop
dec
mov
rorb
call
push
sti
mov
xchg
inc
adc
lcall
bound
cmpsb
cmp
jne
jno
sub
and
xor
ss
call
lock
inc
stos
jle
cltd
adcb
mov
mov
add
inc
mov
mov
push
xor
cld
cmp
dec
xor
shlb
sub
icebp
mov
sub
mov
adc
push
stc
imul
sbbl
jge
push
dec
cltd
push
adc
inc
and
test
mov
call
aaa
sarb
test
fsubr
and
in
enter
mov
xchg
xchg
in
dec
adc
mov
cli
jp
jb
pop
inc
xor
ret
cmpsl
jbe
lods
mov
pop
dec
push
leave
lcall
in
adc
cmpsb
stos
push
jecxz
adc
jnp
lods
jo
mov
incl
mov
inc
and
add
mov
jmp
sbb
fmull
mov
fbld
push
xchg
mov
pop
out
ljmp
mov
or
mov
int3
jns
mov
frstor
aam
fimuls
or
decl
lock
xchg
pop
pusha
xlat
push
xchg
ficomps
jb
adc
decl
mov
shrb
xchg
push
and
sub
cli
push
lcall
add
out
inc
jp
dec
add
inc
int
mov
xchg
jmp
push
je
inc
fadd
add
ljmp
xchg
cmc
dec
cmc
jp
push
mov
add
push
cmp
je
adc
pop
mov
pushl
in
pop
decl
cwtl
push
lods
mov
pop
add
ret
mov
cwtl
mov
adc
fcomps
sbb
mov
sub
mov
fcomip
pushl
jmp
aaa
into
push
cld
aas
sahf
popf
icebp
mov
pop
cwtl
out
or
sar
jmp
mov
imul
xchg
xchg
test
xor
jns
ret
cmp
decl
inc
mov
push
push
fs
in
sub
inc
jb
or
push
dec
inc
cld
lods
mov
scas
cli
fcomip
jle
sbb
ds
pop
jae
int3
fs
sub
pushl
sbb
mov
jo
mov
mov
js
in
pushl
in
pushf
pop
adc
stos
pop
into
adc
mov
cmp
out
adc
pushl
cmpsb
sub
or
and
jl
out
pushf
or
inc
mov
in
pop
sub
daa
and
cmpsl
pop
rcrl
jns
push
nop
pusha
ja
ljmp
inc
popf
pop
mov
enter
pop
mov
lret
fldcw
mov
cmp
cmp
hlt
call
jecxz
fwait
xchg
into
jg
sub
into
dec
sbb
sbbb
xchg
movsb
adc
pop
insb
mov
arpl
push
cmpsb
mov
or
scas
mov
and
nop
cs
jp
jo
cs
push
clc
mov
jle
mov
xor
push
outsl
push
aas
hlt
mov
movsl
test
stos
gs
leave
int3
cmp
iret
loopne
scas
out
ret
sbb
add
arpl
cmp
adc
aad
in
xor
and
rorl
hlt
incl
pop
add
push
cld
and
imul
mov
das
jl
arpl
pop
fwait
jl
jnp
dec
movl
push
enter
push
test
jmp
fcoms
imul
jmpw
push
jp
push
jne
mov
fsubrl
pusha
adc
jg
xchg
xchg
fwait
mov
jae
mov
jp
push
dec
fcomp
addr16
push
adc
and
incl
pushl
rcll
hlt
fimull
mov
pop
cmp
dec
pusha
lret
pushl
and
fistl
syscall
adc
xchg
mov
test
js
pop
mov
mov
or
inc
and
sub
sub
jle
xorb
aas
mov
dec
cmp
mov
push
aam
addr16
adc
sbb
push
pop
and
ds
pop
jae
jecxz
mov
outsl
xor
shlb
out
sbb
xor
mov
and
add
movsb
dec
std
mov
or
push
sbbl
popf
cmp
mov
incl
adc
fiadds
mov
jg
adc
mov
xor
fcomip
pushl
rcll
mov
test
test
push
ljmp
lcall
sub
fidivrl
pop
sub
or
and
xchg
lods
mov
loop
pushl
fbld
mov
icebp
cmpsb
test
les
insb
adc
incb
cld
lods
pop
in
and
sub
pop
or
mov
mov
mov
pop
ja
sbb
or
and
mov
lcall
cmp
sub
shrl
sar
pushl
in
gs
mov
or
push
arpl
aam
and
lcall
or
pop
divl
xchg
sub
push
aaa
sbb
add
sar
imul
fucomi
add
rcrb
addl
dec
aam
rorl
xchg
repnz
lcall
icebp
adc
or
xorb
jg
or
dec
test
js
decl
ljmp
movsl
and
inc
jbe
ss
or
mov
decl
gs
pushf
daa
decl
scas
cltd
cmp
std
rcr
jecxz
lock
lcall
pushl
cwtl
mov
out
mov
movsl
sub
dec
fwait
cli
push
notb
push
out
ljmp
enter
mov
sub
or
push
or
movsl
or
dec
js
hlt
sub
and
ljmp
fldt
lret
cmp
fisubrs
xchg
cli
pop
push
fstpt
test
call
push
in
outsl
repz
mov
in
int3
add
mov
inc
insb
pop
arpl
xchg
dec
mov
pop
into
aam
sbb
loop
cmpxchg
sub
in
and
dec
sar
incl
jmp
xor
das
xchg
dec
push
add
sub
jbe
dec
pop
decl
jle
lods
cltd
cwtl
hlt
inc
test
mov
repz
sarb
push
and
adc
pushl
gs
out
rcll
jl
adc
sub
das
mov
adc
das
clc
call
in
dec
mov
and
test
mov
loope
cmp
lcall
adc
mov
ret
jmp
call
loope
fidivrs
call
leave
push
or
push
push
mov
adc
mov
xor
into
inc
imull
jmp
pop
jb
lret
jno
loopne
and
sbb
cmp
jne
out
rclb
add
lcall
insb
jg
in
in
aaa
pop
push
adc
enter
movsb
cmp
in
or
jge
cmp
cmp
or
sub
loope
shrb
pushl
xor
xor
mov
mov
push
or
scas
jae
comiss
mov
shll
sub
sub
fcmovnu
adc
xchg
leave
lock
in
icebp
decl
pushf
sub
inc
cmp
and
push
push
push
adc
and
stos
and
into
mov
add
call
add
ja
loopne
push
sahf
or
sbb
lods
push
inc
pop
mov
call
inc
inc
sub
lods
arpl
js
inc
stos
add
push
dec
sub
xlat
decl
imul
push
jno
lods
or
pop
ficoml
jl
cmp
lret
loop
stos
push
pop
jb
cmp
pushf
push
loopne
or
jnp
shlb
leave
mov
xchg
incl
xor
or
outsl
cmpb
xorb
in
cmp
lret
cmp
repz
in
dec
jmp
mov
dec
daa
jno
lods
das
dec
es
into
fldt
ljmp
test
push
aas
push
loope
in
test
addl
loope
icebp
loop
push
lcall
jle
cwtl
mov
pop
xor
mov
sub
gs
pop
pushl
push
pop
imul
test
cltd
sub
or
addr16
adc
mov
xchg
cmc
clc
sbb
mov
adc
jle
jg
out
cmp
cmp
add
pushl
add
cmp
insl
leave
lcall
mov
lahf
ds
jmp
pop
lahf
pop
sbb
in
cli
sub
xchg
or
add
xor
mov
lods
lods
aam
ljmp
add
movsl
fmulp
rcrb
jns
hlt
jg
es
fsubp
sub
mov
xor
decl
call
push
test
fistl
repz
in
sub
sub
add
incl
add
jg
nop
scas
pop
inc
mov
lods
dec
js
fs
mov
inc
outsb
xor
mov
out
jecxz
jge
aad
js
jle
lcall
fcmovbe
inc
int
movsl
adc
movsb
sbb
pop
out
sub
and
and
fcomip
ljmp
repz
shl
sub
stos
push
jle
decl
jmp
pop
or
fs
in
in
lock
mov
push
lods
rcl
popa
sarb
push
mov
or
sbb
inc
push
mov
mov
ljmp
xchg
pop
xor
subb
push
add
mov
cld
popa
or
fadds
pushf
push
popa
adc
je
mov
shlb
inc
cmpsl
mov
xchg
xchg
enter
adc
rolb
add
or
jl
fsts
bound
cmpsl
ljmp
add
add
outsl
popf
mov
mov
sbb
sar
sub
scas
shll
lcall
adc
std
into
test
popf
test
outsb
es
pop
aad
jbe
jae
decl
scas
inc
imul
test
dec
jp
inc
sub
adc
lock
incl
jnp
pusha
jno
test
xchg
push
inc
out
jbe
xchg
pop
push
dec
push
fs
mov
adc
call
xor
in
data16
xorb
outsl
mov
pop
push
sti
pop
orb
les
fsubl
rorb
jmp
hlt
mov
dec
lods
mov
loope
mov
cmp
mov
push
jo
subl
gs
fdivl
cmpsl
mov
pushl
sub
dec
push
scas
and
inc
punpckhdq
or
or
push
call
lock
in
mov
shrl
pop
inc
test
rol
sub
jne
sahf
add
xor
ljmp
pop
mov
mov
enter
cmp
pop
in
mov
dec
dec
pop
loope
ljmp
cs
gs
mov
cmp
cmpsb
jae
xchg
inc
ret
lcall
mov
and
insb
push
cmpsb
sbb
imul
mov
or
xchg
arpl
aaa
cld
call
test
push
stos
sbb
inc
mov
enter
and
lcall
mull
fcomps
add
push
sub
lods
ljmp
xchg
cmp
stc
adc
push
xacquire
xchg
lcall
jo
pop
sbb
jle
add
iret
lret
mulb
sti
or
test
mov
and
lcall
in
insb
mov
mov
leave
lret
imul
leave
pop
aaa
inc
jl
jp
fstl
pop
cld
and
testl
or
fdivrl
cld
sub
pop
sahf
pop
jae
fstps
ljmp
or
gs
data16
es
sub
inc
mov
imul
xor
sbb
decl
iret
sub
lcall
lods
jo
cmp
mov
icebp
lahf
insl
xchg
sbb
xchg
mov
leave
icebp
lret
cmc
enter
jmp
rolb
cmpl
cltd
sub
xor
adc
incl
sub
mov
sbb
call
cli
cmovae
in
adc
incl
scas
or
xchg
push
scas
cli
lret
and
js
jno
cmpsb
inc
push
jg
movsl
popf
test
xchg
test
and
add
cmp
inc
fcomip
cmpsb
adc
stos
lret
arpl
xor
mov
ss
movsl
outsl
inc
xor
cli
ds
pop
xchg
std
adc
push
lods
mov
in
push
rep
stos
or
push
movsb
xor
mov
lret
movsb
out
ret
push
enter
mov
and
pushl
sub
sbb
rep
popl
icebp
xchg
sub
leave
daa
and
call
jg
sub
repz
or
loop
clc
int
stc
insl
mov
push
add
testb
push
pop
xchg
fs
cli
stc
mov
aam
jg
ljmp
or
cmc
icebp
sub
lahf
fstp
mov
pop
dec
mov
lcall
clc
lods
outsl
xchg
mov
sbb
cmp
notl
xchg
loopne
in
repnz
in
jp
pushl
subl
outsl
loop
dec
mov
stos
cmp
lret
and
push
pop
jg
outsl
jg
pop
jmp
lods
pop
cmpsl
into
lds
aaa
dec
shr
stos
outsb
fsubrl
jae
call
mov
cmp
addr16
std
ret
adc
shll
adc
dec
scas
lock
pusha
add
incl
repz
faddl
loopne
in
stc
les
xchg
dec
and
sahf
mov
ljmp
jbe
mov
inc
cmpsl
inc
mov
mov
add
imul
cld
mov
call
jle
int3
je
inc
out
pop
pusha
mov
and
pushl
movsb
and
outsl
inc
loope
mov
sbb
incl
insb
pop
adc
test
insl
xor
data16
enter
scas
pop
les
mov
mov
mov
push
fwait
and
std
outsl
cli
and
push
in
push
inc
dec
sbb
in
inc
cmpsb
jle
lock
jmp
sarl
pushf
cmc
movsl
adc
sbb
push
inc
out
insb
pop
sahf
and
lcall
ds
notb
jno
lods
popf
outsb
idivl
filds
rclb
test
mov
cmp
mov
hlt
sub
jle
push
mov
pop
jl
mov
testb
dec
test
jo
int3
sub
cmp
cli
or
dec
incl
fsubs
pop
cmc
and
fs
xor
mov
subl
cltd
dec
ljmp
je
add
pop
jb
cld
cli
dec
ds
movb
mov
clc
fcomip
iret
out
push
test
inc
jns
mov
imul
icebp
sbb
and
int3
hlt
loope
dec
call
xor
mov
dec
in
adc
jmp
mov
fs
push
mov
mov
in
push
outsb
rclb
jmp
xchg
sahf
push
mov
add
lds
scas
lods
adc
dec
ljmp
icebp
in
jecxz
and
xchg
add
add
add
fstps
cmp
sub
dec
adc
das
sarl
aam
lcall
aas
or
scas
gs
lcall
decl
cmp
dec
lret
sub
jne
int3
mov
jmp
add
hlt
jp
jge
mov
test
dec
jecxz
mov
cmp
decl
iret
sti
adc
jae
cmp
js
add
push
lods
ja
lods
xor
jmp
jo
add
fs
cmp
cmp
sbb
inc
mov
lret
rorl
ljmp
push
adcb
mov
inc
xchg
inc
call
or
movsb
fisubrs
jecxz
ret
arpl
shll
lods
outsl
mov
dec
lcall
ljmp
mov
inc
pop
loope
fsub
orl
les
repnz
cmp
lcall
jg
repz
xchg
cli
sti
inc
mov
mov
fdivrl
cld
js
lds
xchg
xchg
cmpsl
out
cmpsl
lcall
fisttpl
lds
in
inc
rcr
mulb
test
in
mov
dec
dec
xor
shl
mov
aam
cmp
incl
addr16
cltd
cli
sbb
iret
xchg
arpl
inc
inc
es
adc
dec
test
int3
dec
out
call
lea
fists
stos
scas
push
insb
fidivl
cmp
sub
test
xor
mov
movsl
icebp
cmp
call
shll
xchg
xor
jge
xchg
ljmp
and
dec
repz
inc
and
adc
testb
cmp
push
xchg
add
mov
sub
lret
loopne
jecxz
or
xor
sub
incl
fidivrl
fimull
incb
pushf
les
pop
mov
sub
gs
ljmp
xor
sahf
and
iret
sahf
fdivrl
mov
iret
push
js
dec
out
xchg
add
jmp
mov
add
mov
insl
push
push
jnp
cmc
bound
jle
sbb
push
or
call
mov
xchg
xor
adcb
mov
push
push
dec
mov
arpl
cli
sbb
cld
lock
insb
sub
cmpsb
lods
test
mov
scas
or
int
jl
add
std
push
push
out
xchg
divb
leave
mov
ljmp
bound
cli
jle
xchg
stos
addr16
call
push
dec
push
adc
and
fcmovnu
dec
jge
sbbl
xor
dec
add
dec
stc
xchg
lea
xchg
ljmp
lcall
xchg
rclb
movsl
fwait
ja
sub
ljmp
pop
into
mov
sub
popf
popf
movsb
pop
add
lds
movl
cmp
hlt
push
xchg
or
iret
scas
cmp
xchg
xchg
jl
sbb
ljmp
fsubrs
xchg
repnz
movsl
push
mov
cmp
movsb
push
add
ret
jp
jecxz
pop
das
jo
test
pushl
in
fwait
int3
sahf
sub
jnp
add
outsl
aas
dec
mov
jmp
mov
cmpsl
decl
push
jae
loope
pop
subb
push
sbb
ljmp
inc
jns
xor
sub
cltd
outsb
cmp
dec
es
inc
rcr
dec
insl
fs
leave
cmpsl
popa
cwtl
lret
cmp
lahf
lcall
cs
aaa
sbb
rol
scas
sahf
inc
push
hlt
sbb
mov
movsb
ljmp
cmp
pop
cmp
cli
dec
jle
add
pop
push
leave
cld
hlt
call
mov
jno
xchg
test
push
mov
loop
sbbb
aas
sbb
cwtl
daa
insl
sbb
call
push
dec
xchg
mov
adc
pop
inc
outsl
aaa
pushl
mov
xchg
stc
js
push
cmp
add
or
into
shlb
mov
cmpsl
inc
jnp
ljmp
mov
ret
insb
sbb
out
jo
int
adc
mov
rcrl
push
outsb
negb
mov
sbb
cli
xor
outsl
cmp
lods
loope
popa
add
cmp
sar
jmp
push
outsl
pop
sbb
lcall
or
fimuls
stos
mov
xlat
add
inc
sub
inc
mov
sbb
cmpsl
xchg
mov
sub
push
mov
es
add
pop
xchg
cli
lahf
push
pushl
call
lods
inc
lock
repz
sub
jno
xchg
mov
jl
push
pop
push
add
and
in
sub
pop
cvtps2pd
bound
loopne
in
add
xchg
popf
jp
imul
jno
std
push
xlat
mov
pop
lods
jmp
pushf
sbb
out
dec
xorb
inc
ret
sub
and
pushl
adc
jb
test
in
push
mov
mov
es
ret
in
ljmp
sub
repz
pop
fwait
push
stc
fcmovnb
mov
add
int
cmp
jbe
mov
mov
les
sub
test
mov
lcall
push
into
cli
rorb
jle
cmp
cmp
jb
stos
pop
and
test
ljmp
ljmp
shl
inc
rcl
sbb
mov
push
push
pop
call
inc
sub
leave
ja
mov
test
cli
out
cmpsl
jmp
dec
movsb
mov
push
xor
push
fcoms
imull
jne
sti
test
sbb
and
push
xchg
iret
xchg
test
jg
cli
pop
mov
test
pop
out
fistps
dec
pushf
jb
pusha
jno
out
dec
out
je
cmc
ret
cmp
fnstcw
hlt
addr16
mov
mov
jl
lods
jmp
pushf
mov
out
mov
add
sahf
push
mov
mov
mov
incl
ficompl
push
cmpsl
cmp
out
xchg
shrl
lcall
fisttps
aad
ljmp
inc
mov
fs
lret
jmp
scas
test
mov
jp
xchg
ret
call
mov
sbb
mov
jnp
and
decl
mov
mov
push
stos
pop
jge
mov
aam
pop
fsts
test
dec
icebp
enter
push
mov
push
je
push
rorl
out
xor
fdivrs
js
movsb
jecxz
cli
and
jmp
xchg
and
cmp
stc
jbe
fstpl
pop
aas
decl
pop
out
testl
aaa
test
lea
int
fcomip
pushl
lahf
lahf
jmp
mov
cld
push
mov
stos
cmc
lcall
push
fcmovne
push
das
inc
push
out
lret
mov
out
imul
sarl
stc
ret
call
cld
xor
imul
mov
mov
jecxz
das
lea
dec
incl
jmp
mov
pop
push
jno
dec
in
adc
je
movl
mov
shrl
pop
scas
test
test
test
cs
stos
addb
jmp
xor
push
insb
ret
inc
jg
jo
dec
push
cmp
cwtl
or
lahf
iret
cli
in
subb
or
jg
ljmp
cmp
mov
outsl
sub
daa
mov
popf
pop
loopne
ljmp
or
sub
lock
sbb
cltd
popf
xor
push
or
mov
repnz
ffree
stos
dec
repnz
inc
and
cli
pushf
test
mov
xchg
cs
lahf
lock
mov
fisubrl
jle
aam
das
push
and
fnstsw
pop
sbb
aas
and
adc
call
add
stos
adc
rorl
stos
ret
xchg
dec
in
cmc
incl
out
jecxz
sarl
add
aad
nop
add
push
jbe
icebp
mov
ljmp
es
scas
cmp
push
push
adc
sbb
push
test
fnstcw
jae
ss
jmp
mov
jle
pop
push
and
or
out
mov
xor
lods
mov
mov
cwtl
and
cmp
mov
xchg
dec
mov
or
jg
incl
pop
aad
or
cwtl
cmpsl
mov
lds
iret
xchg
int
xchg
call
pop
pop
stos
stos
lcall
insl
push
and
outsl
in
push
insl
sahf
call
imul
call
mov
lea
mov
cmp
push
and
push
mov
rcrb
mov
sub
jbe
ljmp
je
push
jbe
jge
cmp
pop
mov
mov
std
and
je
push
add
test
xchg
sub
imul
test
add
mov
test
pop
imul
sbb
xor
add
xchg
push
xor
add
adc
lods
jno
mov
daa
fbld
mov
lcall
cmp
push
rorl
add
in
lcallw
fs
outsl
sub
pop
adc
jne
incl
cld
sub
popl
pop
out
jae
pushf
fdivl
pop
test
fcomps
sub
push
into
inc
mov
jp
jg
sub
inc
gs
jnp
xor
dec
and
jg
add
cmp
testb
lea
mov
mov
mov
out
cmp
sub
dec
addl
test
ljmp
jge
jg
mov
arpl
and
push
loop
push
out
cwtl
roll
cmp
pop
jg
lcall
std
pushf
cmp
push
jle
jns
push
jo
inc
rcrl
arpl
nop
or
cmp
in
hlt
push
dec
pop
je
and
inc
iret
sbb
inc
mov
push
es
cmpl
test
xchg
or
daa
cwtl
jb
xchg
dec
popl
out
and
nop
adc
movsl
pop
jmp
push
sbb
ret
pop
or
scas
inc
test
xchg
jle
cmp
and
call
stos
test
stc
cmp
push
int
mov
cwtl
out
push
mov
adc
ljmp
in
out
jg
test
xor
je
adc
out
bound
decl
mov
repnz
adc
orl
aaa
lret
js
aas
lcall
pop
adc
mov
pop
lcall
jl
int
adc
int
jbe
in
imul
ret
lods
pop
addb
sarb
fsubl
out
aaa
cmp
fbld
jecxz
pop
pop
inc
xlat
testb
fwait
cmp
pusha
mov
aaa
je
push
fisttpl
into
cmpsb
fwait
in
je
and
xor
add
idiv
pushl
lods
sub
or
cmp
sub
sbb
ljmp
ss
rcrl
adc
test
inc
cli
shl
fisttpl
xor
or
add
cld
mov
mov
push
mov
inc
cmpl
sub
cmp
test
aas
xchg
inc
cld
pop
and
ret
push
mov
inc
shrl
je
fcomi
aad
xor
aaa
faddl
jne
mov
mov
loope
or
push
lcall
cld
mov
scas
push
sbb
icebp
inc
movsl
jp
xor
sbb
jmp
xlat
lcall
dec
cmpsl
loopne
inc
mov
out
sarb
inc
sub
incl
lcall
mov
mov
sar
std
jge
in
lock
out
sub
and
cmovne
call
out
mov
fists
push
or
outsl
cmpsl
jne
arpl
imul
ret
dec
dec
rcrb
sub
push
jae
cmpsb
imul
sub
xchg
insb
inc
fldl
push
adc
inc
fldcw
mov
jmp
outsb
shlb
incl
lret
sbb
imul
imull
inc
lds
insb
ljmp
jne
lret
mov
lods
xchg
leave
and
cwtl
mov
inc
mov
inc
and
mov
int
cli
shrl
jecxz
in
pushf
clc
fisubrs
xor
sbb
fisubrs
pop
sbbb
scas
xchg
incl
and
adc
test
or
jl
cmc
cltd
outsl
fwait
addr16
inc
sub
jmp
push
adc
inc
rcrl
imul
ljmp
cld
jl
test
jg
decl
xchg
inc
xchg
xor
xchg
sub
out
sub
dec
ljmp
cltd
paddusw
adcb
inc
and
or
sbbl
inc
xor
out
jo
jp
cld
pop
les
insb
mov
fsts
mov
insb
adc
mov
sub
xchg
jmp
cmp
jae
call
xor
int3
xchg
loope
jns
cmc
nop
insb
int3
outsl
shrl
inc
test
jmp
cld
push
push
ljmp
sbb
clc
inc
test
sarb
decl
sub
cmc
dec
xor
fidivrs
ds
loopne
cmp
cmp
inc
dec
incl
inc
ds
aas
pushl
cmp
inc
mov
test
inc
loope
addr16
cmc
xchg
ds
pop
jecxz
dec
mov
push
incb
aam
jge
inc
xchg
lods
dec
incl
frstor
pop
andl
xor
lods
adc
pop
test
es
mov
cmc
lcall
push
out
test
push
mov
test
fcmovnb
jg
jo
lds
leave
adc
dec
push
int
jge
aas
js
jbe
std
or
cmpsb
or
xlat
pop
scas
cmc
xlat
jmp
out
sbb
cmp
loope
hlt
xchg
ds
or
mov
push
mov
sub
aaa
rclb
lret
mov
xor
sti
fistps
sbb
jg
decb
xor
and
fstpt
cmp
je
incl
and
lret
push
lret
mov
xor
dec
push
mov
add
dec
fldl
jg
mov
daa
push
adc
xchg
xor
or
add
int
incl
add
jg
pop
xor
mull
repnz
xchg
sbb
cmp
lret
rcrb
jge
pusha
inc
adc
push
sbb
cmpsl
inc
add
adc
into
aas
inc
imul
ss
ss
jno
sub
dec
cmp
fiaddl
pop
mov
mov
inc
fidivl
push
pop
mov
incl
jbe
inc
insb
movl
loop
xor
andl
xchg
dec
lods
mov
pushl
inc
imul
fdivs
aas
mov
and
mov
mov
inc
lds
imul
lahf
dec
addr16
mov
ljmp
mov
in
ds
jno
and
mov
out
loopne
movsb
adc
scas
test
int3
dec
out
mov
jge,pn
push
mov
push
xchg
fadds
sahf
push
sbb
mov
incl
or
pop
xchg
sub
shrl
sti
decl
sub
add
mulb
cld
ljmp
push
test
inc
jecxz
testl
loope
loop
jmp
rcrb
xchg
andl
add
mov
cmp
push
imul
arpl
incl
in
outsb
lods
neg
lock
push
mov
test
xor
aad
mov
cmc
fwait
mov
decl
in
data16
pop
mov
enter
bound
fildl
or
inc
js
mov
lock
outsl
jge
ss
sub
sahf
xchg
dec
cmp
mov
cli
cmp
jecxz
inc
sahf
mov
cld
fwait
rcr
aad
adc
xchg
fwait
dec
clc
incl
test
add
mov
sbb
mov
jmp
sbb
stos
cli
push
mov
stos
data16
addb
mov
fisttps
dec
pop
fmul
cmp
stc
cmpb
xlat
jno
push
xchg
mov
mov
iret
ds
mov
and
xchg
mov
in
int
fmuls
call
inc
outsb
xchg
pushf
sbb
and
bndstx
mov
pop
mov
push
or
leave
pop
inc
xchg
call
adc
out
ljmp
xchg
add
cld
mov
mov
pop
stos
in
push
jbe
cmpsl
mov
jp
sbb
fwait
inc
push
mov
jl
sbb
in
incl
jge
inc
xchg
xchg
test
shlb
jae
insl
insl
cmp
inc
pop
xchg
sbb
repnz
shl
adc
xchg
jo
jmp
jl
xlat
fwait
ss
and
add
in
pop
push
repnz
add
or
jmp
fsubp
mov
out
fwait
push
cmovns
bsr
ds
mov
jg
mov
int
das
test
fs
in
jp
xchg
mov
jmp
aaa
std
jnp
fcomps
push
in
cs
les
add
mov
pushl
icebp
or
mov
add
sub
insl
popl
leave
jae
shr
xor
pushl
or
mov
add
mov
or
xchg
out
jnp
push
sbb
mov
movsl
inc
sub
incl
icebp
insl
jl
add
or
std
xchg
cmp
mov
out
jg
xor
jo
arpl
lea
and
xchg
stos
push
inc
sbb
mov
call
js
sbb
mov
pushf
lret
pop
xor
sub
jg
lret
mov
inc
popa
inc
outsb
jle
mov
cmp
and
clc
cs
or
xor
loop
scas
ljmp
decl
mov
fldl
arpl
xor
addb
push
lds
insb
call
mov
in
and
aaa
aad
xchg
dec
loope
icebp
push
rcrb
sbb
incl
jbe
mov
pop
lods
cmp
ss
fnstcw
dec
sarb
sar
loop
arpl
push
js
out
mov
pop
sti
lock
jmp
mov
bound
dec
in
call
mov
pop
fistpll
decl
adc
add
ret
mulb
loope
decl
shll
das
fnsave
fwait
es
pop
mov
mov
fcomip
call
addr16
dec
into
adc
mov
cmc
cmc
mov
outsb
fwait
lea
gs
inc
loope
adc
mov
xchg
rclb
push
sbb
cwtl
js
or
dec
stos
xor
pop
mov
mov
decb
mov
and
repnz
cmc
sub
and
enter
adc
fcomip
out
pop
lock
inc
and
pop
nop
insl
xor
xchg
mov
jge
jae
jno
out
jmp
cmp
xor
mov
mov
iret
cwtl
adc
dec
xchg
gs
ljmp
pop
cmpsb
addr16
fidivs
mov
insb
mov
push
addr16
out
cmc
lcall
clc
xchg
mov
imul
jo
mov
adc
pop
push
push
jg
pop
shr
sbb
mov
push
fistl
dec
mov
clc
addl
decl
cmp
sub
jns
sbb
pop
lock
mov
jno
call
fucomi
lea
fnstsw
pop
mov
test
push
int
mov
sub
pushl
test
mov
loop
cmpsb
and
pop
rclb
jb
pushl
scas
test
dec
outsb
push
mov
sub
adc
push
stos
cli
notl
and
jmp
es
incl
pop
sbb
cltd
ja
je
aad
push
mov
sbb
enter
in
xor
and
ds
mov
loope
inc
mov
mov
jmp
popa
arpl
add
ror
lcall
mov
shrb
lret
test
xlat
dec
iret
pop
xchg
push
jecxz
cmp
es
lcall
sub
mov
repnz
stos
adc
js
add
fcomip
ja
out
fcom
cltd
dec
xor
orps
movsl
in
addr16
incl
add
int3
mov
xor
xor
sbb
sarb
pop
jb
out
test
incl
lret
mov
pop
fsubrs
test
shrl
pop
pushf
hlt
jl
jl
inc
lcall
push
stc
or
push
insl
add
push
dec
pop
ret
ds
lods
lods
inc
loopne
mov
ret
inc
push
adc
stos
push
ja
mov
aad
ljmp
xchg
jb
mov
enter
cmp
ja
mov
in
lret
cld
clc
sti
mov
pop
jmp
std
sbb
loop
pop
mov
les
aam
insl
sbb
imul
ljmp
add
sbb
push
std
in
cli
and
inc
shll
sbb
sar
add
push
lcall
daa
cltd
lret
decl
sti
fldenv
and
inc
movsb
out
lcall
hlt
iret
out
ret
ja
stos
add
test
dec
jmp
pop
mov
fiadds
push
mov
dec
out
xor
imul
pop
sbb
shll
jmp
dec
dec
enter
pop
sub
icebp
hlt
mov
jp
test
mov
ljmp
popf
push
fistl
mov
push
aas
aas
xchg
dec
pop
retw
sbbb
mov
or
xchg
xchg
push
mov
inc
cmp
fs
and
pop
fldcw
in
mov
jns
aaa
inc
push
les
cmp
xor
stos
lea
cmp
jmp
ljmp
and
ret
pusha
sub
xor
outsl
in
adc
jmp
in
jmp
not
xchg
loopne
loopne
repz
jns
mov
and
mov
insl
and
lcall
mov
pushw
nop
xchg
lret
and
pop
push
mov
xchg
pop
cmp
ljmp
or
push
cmp
dec
or
sub
out
in
pop
xorl
jmp
outsb
in
jae
aam
jns
dec
add
mov
lea
in
push
xchg
loop
iret
in
or
push
and
cmp
out
and
push
and
outsb
xchg
aaa
pop
jnp
add
sbb
dec
push
clc
repnz
mov
xchg
mov
scas
js
mov
push
adcb
cmpsb
sbb
xchg
int
push
jmp
jo
cmp
sub
jg
mov
add
jg
ret
adc
lcall
iret
pop
in
fnstcw
pop
orl
push
std
aam
push
clc
and
mov
es
mov
enter
je
loopne
leave
add
ljmp
into
cltd
pusha
jge
repnz
sub
aaa
addr16
icebp
divl
movsb
sarb
js
mov
mov
sbb
xchg
sbb
sub
pop
cmpsb
jge
popf
adc
xor
cli
lcall
lret
jns
sub
pop
jbe
push
stos
cmpsl
mov
arpl
cmp
fidivs
scas
jo
arpl
add
jg
pusha
fs
loope
mov
and
inc
js
sti
shr
decb
xor
sbb
push
ficompl
xor
lret
sub
adc
mov
mov
lea
mov
jp
les
ficoml
cwtl
push
insb
xchg
lcall
shlb
fiaddl
ror
rcrb
int3
fists
jl
mov
add
rcrb
pop
push
sbb
pop
sub
dec
fwait
pop
dec
jl
pop
xor
jae
icebp
lock
aas
jecxz
sbb
lcall
cmp
int
fisttps
cli
andb
mov
shrb
jns
and
out
dec
jmp
out
pop
cmp
insb
lea
xor
ss
mov
inc
inc
je
add
sar
ljmp
lret
shl
jbe
pop
rorb
aaa
call
pop
and
cmp
add
mov
test
xchg
movsl
cwtl
add
push
add
adc
gs
inc
dec
fisttps
or
dec
sbb
int3
mov
pop
pop
mov
or
test
or
mov
sarl
mov
enter
fcomps
add
cmp
xor
jb
ret
decl
out
pop
test
xchg
mov
add
incl
xchg
test
jg
inc
dec
sub
fstpl
dec
lret
lock
das
mov
cmp
ljmp
stos
ljmp
loope
mov
dec
stos
repnz
push
or
dec
loop
inc
lock
fisubrs
or
dec
scas
jecxz
jne
mov
ror
clc
sbb
pop
sbb
xchg
shl
jmp
push
mov
sbb
out
ds
mov
jp
xchg
mov
inc
cwtl
inc
sbb
iret
lahf
mov
push
push
xchg
lahf
andl
dec
out
bound
and
popf
cs
test
notb
loopne
fcomip
mov
xchg
cmp
adc
fists
pop
insb
fcompl
int
sbb
jmp
or
sub
rcll
add
jae
stos
pop
mov
incl
imul
es
loop
adc
rorb
ss
ljmp
subb
mov
std
inc
mov
shl
fdivr
cmc
int
stos
neg
movsl
jae
mov
lcall
shll
push
xor
jecxz
out
xor
xchg
lcall
enter
adc
pushl
xor
popa
outsl
jne
jl
addr16
lea
ljmp
and
dec
jp
jmp
into
mov
movsb
sbb
ss
jmp
in
cmp
sbb
ja
jp
decl
inc
or
mov
add
xchg
xchg
movsb
dec
in
mov
push
adc
lret
mov
cld
stos
pushl
ja
push
cmp
popa
mov
mov
and
aad
adc
mov
shrb
pop
mov
xor
jmp
jnp
nop
arpl
sbb
pushl
xchg
adc
sub
into
xorl
scas
jg
mov
fucomi
ss
jp
push
movl
cmp
xchg
clc
xor
jmp
mov
jp
add
push
popf
pop
dec
lds
mov
enter
icebp
cmp
sbb
lret
lahf
int
xchg
jno
lea
out
int3
pop
fisubrs
lret
or
gs
pop
dec
jae
cltd
and
adc
cmp
inc
ljmp
in
jmp
jecxz
lret
scas
mov
mov
out
ret
lret
addr16
hlt
cs
call
add
cwtl
inc
sbb
push
shlb
push
mov
je
inc
add
add
stos
pop
jp
es
rcrb
mov
or
lcall
movsl
xorl
mov
into
into
rcll
pushf
xchg
push
adc
rcr
incl
mov
lcall
mov
std
or
sbb
mov
ficomps
sub
push
stos
cld
loopne
mov
lods
mov
loope
test
leave
xchg
push
iret
sbb
cmp
cmp
xchg
ss
jl
aaa
lds
add
add
sub
mov
call
cmp
shll
mov
repnz
fdivrs
fsub
jmp
jge
mov
xchg
out
and
fcmovnu
clc
add
push
pop
dec
pop
dec
xchg
or
test
cmpsl
call
cld
ljmp
roll
or
push
push
mov
mov
incl
xchg
into
rol
push
cld
lret
in
mov
pop
xchg
push
or
vcvttps2dq
cmp
aaa
inc
mov
pushl
inc
add
stc
clts
sub
or
fnstsw
jb
jg
stos
sub
or
cmp
and
xor
mov
dec
gs
sub
sbb
incl
mov
js
push
mov
leave
das
jnp
insb
jp
and
incl
lret
test
cld
fwait
sub
daa
pop
aaa
imul
xlat
fsts
jmp
incl
cmp
pop
xlat
and
loopne
dec
dec
xlat
adc
mov
in
sub
pop
lock
mov
scas
loope
decl
jne
dec
leave
push
push
adc
in
xlat
jp
xchg
loope
jmp
pop
cmpsl
pop
push
sti
call
mov
insl
jns
pop
sub
xchg
repz
aaa
jb
xchg
movsb
subb
enter
add
pmuludq
jle
inc
push
lahf
addr16
xor
pop
cs
mov
jmp
mov
mov
jl
fwait
mov
xor
mov
arpl
jg
decl
push
inc
and
mov
jb
push
pop
xor
mov
mov
incl
mov
lock
and
jae
std
adc
dec
outsl
shrb
ss
call
and
inc
inc
into
xchg
mov
push
pop
pop
mov
sbb
lock
out
cld
pop
mov
idiv
cmp
incb
xchg
sub
or
aaa
xchg
das
in
xor
lds
popf
pushf
cmp
pushl
mov
adc
dec
jg
xor
lahf
cmc
call
push
lock
fnstenv
xor
decl
dec
mov
mov
clc
jae
or
ss
rcr
mov
call
xlat
mov
inc
pop
js
das
mov
clc
and
outsb
fisttpl
push
leave
or
jp
jge
cli
lcall
adc
mov
rcll
mov
mov
scas
jns
jp
push
decl
pop
pop
outsb
sub
movsl
iret
decl
mov
xor
and
inc
ret
sub
pushl
cld
lcall
jno
roll
fldl
mov
mov
mov
cmp
mov
jp
cmp
arpl
and
add
push
in
mov
push
adc
ljmp
inc
mov
pop
pushl
inc
xor
lcall
push
and
adcl
or
stc
cmp
frstor
cmpsb
and
jae
push
lret
sbb
jae
mov
les
pop
cwtl
jno
cmp
decl
leave
push
lock
in
jecxz
push
jo
mov
or
mov
movsb
bound
jmp
jmp
push
dec
cs
lret
sub
push
jnp
das
pop
insl
int
cmpb
shrb
cmp
decl
add
subb
cmp
jge
imul
push
pop
jbe
clc
and
pop
ds
loopne
lock
xor
cmpsl
jae
orb
cmp
dec
jns
pusha
sub
jbe
int3
pop
das
ja
sub
jge
xor
mov
hlt
call
and
inc
mov
add
div
add
or
adc
xor
outsb
lcall
fcompl
outsl
and
jge
rcrl
or
sub
add
mov
xlat
ds
fs
je
jmp
outsl
dec
xor
es
mov
pop
inc
aad
mov
fcmovnu
push
es
in
jmp
cmp
pop
frstor
in
lret
jecxz
sbb
sub
push
dec
rol
mov
shll
mov
sub
or
cltd
or
aaa
les
lcall
in
add
addb
push
addr16
lret
ret
shll
add
mov
pushl
xor
cmp
mov
push
pop
inc
push
push
mov
xchg
sti
pop
inc
xor
ljmp
dec
jnp
test
movsl
cmp
jns
int
xor
mov
sbb
jmp
out
inc
insl
fisubl
or
call
mov
push
push
test
inc
fcmovb
frstor
std
ljmp
cli
adc
pop
inc
lret
xor
push
xor
call
jb
repnz
adc
jp
xor
movsl
repz
jg
xchg
mov
push
enter
and
adc
inc
lret
mov
rol
adc
lcall
push
pop
adc
mov
dec
or
std
jl
loopne
call
lcall
daa
fistps
and
jge
int3
xchg
inc
mov
adcb
fwait
and
jns
call
ss
jg
or
cld
add
test
test
cmp
mov
fs
jmp
fs
push
nop
in
shll
pop
enter
xchg
test
xor
mov
decl
jns
movsl
gs
rolb
outsb
adc
jae
mov
inc
push
mov
pop
std
popf
loope
das
pop
out
push
and
mov
outsb
cld
jp
mov
inc
test
mov
jmp
lahf
incl
int3
add
test
jle
dec
testb
dec
jbe
mov
mov
dec
ljmp
and
xor
inc
call
leave
stc
xor
cs
or
pushl
push
push
cli
adc
pop
movswl
push
aas
jno
adc
cmpsl
fbstp
sub
adc
and
cmp
pushl
ljmp
icebp
fxch
adc
sarb
in
aaa
shrb
js
clc
aam
test
inc
popf
mov
cmp
push
popa
dec
pop
mov
mov
iret
push
test
cmpsb
decl
xor
fs
inc
mov
jbe
lret
lret
sbb
pop
inc
decb
cmp
or
and
xor
mov
push
je
dec
mov
mov
cwtl
in
xchg
movsl
mov
pop
call
loopne
mov
movsb
fsubs
subl
xor
ss
ljmp
adc
aas
dec
and
ret
int3
dec
fiaddl
rcrb
dec
jmp
bound
popf
call
jne
jg
push
testb
push
and
pop
fwait
sti
test
fidivs
mov
sbb
inc
icebp
sbb
ljmp
sar
mov
push
out
inc
xor
mov
and
call
sbb
cmpsl
push
mov
cs
cmpsb
loop
aad
sahf
outsl
fs
or
or
cmp
cwtl
cmp
shlb
fsubrs
or
pop
xor
sub
js
insl
call
js
push
sub
jb
mov
push
arpl
cmc
lcall
mov
les
movsl
js
mov
std
repnz
xchg
xchg
adc
sahf
jle
xchg
dec
xchg
xchg
inc
leave
dec
xor
fsubl
out
push
jp
ds
loop
dec
and
xchg
push
ss
or
clc
orl
loopne
cmpsl
cs
jne
dec
add
adc
jp
outsl
ss
incl
stos
ja
enter
je
pop
insl
daa
push
push
inc
or
lods
adc
loope
inc
mov
or
mov
xchg
sahf
cmp
out
cmp
insb
jbe
jns
adc
jg,pt
daa
cmp
pushl
lcall
rcrb
adc
inc
idivl
mov
inc
sub
cmp
sub
sahf
pop
sti
jne
hlt
xchg
cld
jle
cmp
pop
inc
or
jb
mov
inc
es
call
fldl
jmp
xchg
in
mov
or
rcr
inc
faddp
scas
pop
insb
mov
pop
hlt
pop
std
mov
jge
faddp
push
pop
mov
dec
scas
aaa
xor
jg
jo
pop
add
test
push
fimuls
lahf
mov
iret
sbb
mov
cwtl
movl
xchg
cmpsb
jg
cmpl
cmp
or
rcr
mov
inc
dec
xor
xchg
adc
call
adc
inc
mov
std
test
or
icebp
ficompl
pop
push
sbb
ljmp
mov
shll
std
aaa
es
out
push
int
aaa
fucom
xor
test
add
xlat
cltd
mov
cld
scas
data16
nop
fs
sub
pop
xorl
and
sar
jg
mov
clc
popf
cli
or
mov
fsts
cmpsl
insb
xchg
dec
and
lcall
push
xor
mov
mov
dec
jge
ret
fists
ljmp
sti
loope
and
push
mov
mov
ret
push
in
mov
test
call
jg
popf
mov
leave
or
or
mov
mov
push
int3
scas
cmp
inc
sub
scas
fwait
sbb
mov
dec
jg
adc
shl
cmpsb
fidivrl
jmp
ret
fdivl
push
adc
sahf
lret
int3
fnop
pusha
mov
into
pop
cs
mov
loop
mov
pop
sbb
sub
js
xor
popf
imul
ljmp
mov
adc
repz
push
loop
add
xor
into
or
call
jg
mov
inc
jae
loopne
xor
movsb
pop
push
dec
mov
aas
sub
mov
cltd
mov
ljmp
rcrl
insl
insl
jp
mov
test
loope
out
mov
mov
incl
dec
sub
rorl
loope
fcmovne
xchg
mov
dec
jae
and
test
rorl
call
bound
enter
mov
test
jae
inc
ja
clc
fistps
jno
aam
and
loopne
insl
stos
shrb
xchg
push
pop
call
mov
jae
adc
adc
stc
pop
pop
jne
lods
mov
mul
add
cli
push
scas
enter
push
mov
repnz
lcall
cmp
push
incl
mov
push
jns
sbb
sub
adc
dec
insl
push
sbb
jg
call
test
pop
out
jnp
fs
push
inc
cmp
insl
jmp
lods
test
inc
xchg
xor
mov
in
jmp
xor
aad
hlt
dec
cli
test
pop
dec
jno
incl
xor
pop
test
jge
fucom
popa
addr16
movsl
aad
in
sbb
int3
dec
cmp
jl
pop
xor
jnp
test
loopw
clc
rol
into
ret
mov
mov
enter
das
pop
rcr
pop
cmpsl
inc
add
fs
repnz
mov
jg
and
mov
pushl
and
dec
ss
dec
sbb
jae
pop
cmp
cmp
call
or
imul
lods
jp
push
cmc
pop
add
js
cli
aas
je
cltd
and
aas
imul
in
mov
lret
mov
xor
clc
test
pusha
pop
fwait
mov
popf
test
mov
stc
adc
cli
cmp
add
and
adc
jge
pop
inc
scas
and
call
loopne
mov
xor
insb
push
xor
adc
sub
adc
pushl
cmp
xchg
icebp
lods
mov
imul
dec
jecxz
jb
mov
jmp
xlat
stos
scas
test
pop
dec
jge
mov
fs
fs
clc
mov
outsl
pushl
in
and
pop
out
ffreep
push
sbb
inc
cli
dec
pushf
fstpt
push
jno
test
lea
repnz
gs
jle
je
xchg
inc
pop
in
push
aam
fcomps
lcall
or
loop
rorb
mov
fidivrs
negl
cld
mov
sahf
push
insl
mov
jae
ljmp
out
jecxz
dec
pop
xor
and
mov
aas
mov
pop
sbb
jnp
mov
sbb
outsl
outsb
rorb
outsb
jns
jmp
out
mov
std
fstl
xchg
add
in
jmp
xchg
push
mov
xor
push
out
sbbb
js
push
int3
lods
sub
pop
ret
jg
incl
pushl
mov
std
jne
push
dec
sbb
add
dec
dec
xchg
lcall
cli
jbe
push
sarl
sbb
loop
sub
ret
jae
sar
mov
fs
mov
mov
das
xor
fld
stc
call
push
addr16
xchg
nop
mov
dec
lock
adcb
sar
incb
mov
lods
xor
and
lock
mov
sbb
jmp
jl
pop
inc
xchg
mov
adc
fimuls
sbb
xchg
es
sbb
fcom
clc
add
xor
lods
or
dec
ljmp
shrl
xchg
add
es
lods
mov
insb
pop
or
push
jne
push
jg
push
hlt
mov
orl
fs
incl
mov
or
sarl
pop
jno
and
repnz
fstpt
add
mov
incb
and
lods
mov
sbb
sbb
mov
push
incl
rcrb
dec
fstpt
stc
fmul
sbb
mov
and
js
in
incl
aas
addr16
mov
mov
cwtl
adc
subl
pushl
movsb
add
mov
scas
stos
scas
add
add
mov
jbe
push
fcompl
mov
xor
mov
mov
pop
loope
mov
and
cmc
lock
push
fsts
ljmp
sbb
pop
push
loopne
mov
lods
sub
xchg
pop
cmp
xor
mov
cmp
push
fs
or
dec
imul
push
cld
decl
pop
sbb
addr16
add
cmp
lahf
dec
or
cwtl
sar
cmp
incl
sbb
xchg
cmp
xchg
mov
jb
sbbb
mov
jns
lcall
cmp
xchg
mov
mov
pop
inc
arpl
mov
jg
add
pushl
mov
pop
jecxz
andl
cmp
movsb
imul
inc
inc
jnp
mov
mulps
cmp
mov
xchg
sbb
push
and
mov
and
cmc
pop
add
aas
data16
mov
incl
aas
js
dec
xchg
xchg
push
pushf
mov
xchg
addb
sbb
mov
xor
mov
ret
pusha
imul
aad
pop
adc
jg
xor
inc
stos
incl
stos
push
jns
xchg
fdiv
jae
and
pusha
sbb
push
cmp
sbb
mov
call
sub
mov
js
mov
push
mov
pushl
decl
lods
dec
inc
mov
lar
imul
push
repnz
inc
pushl
scas
push
testb
xor
or
stc
loop
sub
int
mov
aaa
icebp
nop
mov
fdivr
cmp
jl
sbbb
mov
shl
cltd
call
fwait
lcall
mov
loop
test
rorl
dec
ret
push
add
jmp
push
and
sub
movsl
in
testl
sarl
jmp
loope
lods
mov
xchg
loop
adc
pop
add
add
in
pop
cmp
push
insb
push
push
bound
xlat
iret
add
aam
mov
inc
fdivl
and
mov
cmp
scas
lock
cmp
clc
mov
sub
mov
push
xchg
xor
push
stos
decl
mov
out
data16
pop
jmp
pop
push
dec
imul
inc
adc
push
xor
lock
incl
sbb
cmpsb
jo
gs
idivb
shrb
aam
iret
mov
rorb
std
loopne
xlat
icebp
jmp
lret
xchg
xlat
dec
das
leave
push
lds
nop
mov
cmp
sbb
push
pop
pop
pop
ds
mov
pop
pop
icebp
call
jle
mov
xchg
cmp
movsb
adc
int
adc
lcall
lret
in
jae
sub
jb
sub
jne
cltd
out
or
cwtl
clc
push
push
int3
or
incl
xchg
add
add
and
outsl
push
hlt
mov
mov
cmp
lret
jmp
outsb
xchg
mov
jne
xor
cmpb
ret
push
adc
sbb
decl
mov
aad
shrb
pop
out
in
xchg
jmp
leave
rclb
test
mov
cmp
outsb
sbb
xchg
insb
xor
out
push
add
outsb
jecxz
dec
cli
hlt
xchg
jmp
ljmp
lcall
add
ficompl
sub
mov
outsb
mov
xor
decl
and
dec
and
mov
pop
mov
pop
mov
data16
std
cmp
and
out
clc
add
scas
dec
adc
ficoml
inc
mov
jmp
adc
rcrl
or
addb
or
loopne
mov
ret
lcall
aaa
xor
mov
and
and
imull
jl
ljmp
cmpsb
jnp
std
sub
cs
xchg
je
pop
shr
movsl
icebp
inc
call
leave
and
repz
addr16
ficompl
mov
insl
hlt
scas
mov
dec
fs
arpl
and
rorb
sbb
jmp
sbb
fldcw
aam
mov
push
lock
jne
adc
enter
pop
or
loop
incl
in
dec
adc
mov
popa
sub
test
mov
and
outsb
add
dec
mov
clc
decl
mov
mov
mov
enter
pop
lcall
jmp
aaa
sub
popf
pushf
outsl
cmc
jg
repz
lret
pushf
mov
mov
mov
lea
mov
lods
enter
push
ja
push
insl
push
cwtl
xor
adc
sbb
add
sub
push
insl
imul
add
outsl
fisubrs
lcall
or
or
cli
shrb
push
addb
loope
mov
int
push
pop
jg
xchg
mov
and
in
lret
js
cmp
jmp
fisttpll
scas
clc
andb
jne
inc
mov
jl
adc
sub
jmp
and
rcll
sub
cltd
sbb
nop
stos
mov
stos
daa
fcmovne
dec
pop
call
loopne
push
cmp
fadds
xchg
mov
pop
cmc
test
cmp
push
sub
rcrb
aam
add
pop
mov
inc
loopne
xor
mov
cli
mov
jbe
mov
cmp
lods
es
repz
sbb
repz
sbb
repz
adc
mov
nop
xor
dec
outsl
incl
mov
xor
lahf
imul
iret
or
cmp
cmp
stc
xchg
aam
inc
mov
sub
mov
mov
cmpsb
sub
xchg
ret
fisttpll
pop
push
adc
aaa
mov
negb
int
dec
mov
push
loope
and
jg
js
insl
xchg
inc
dec
jo
inc
sbb
aad
ljmp
inc
cmpsb
fs
hlt
sub
cltd
mov
test
std
stc
and
fwait
jg
push
sub
jge
popa
iret
dec
mov
shrl
test
pop
mov
ljmp
out
fsubl
lods
test
jo
or
pop
lods
add
push
movsl
cmp
lcall
dec
sbbl
mov
fstpt
sub
shr
push
decl
jecxz
mov
or
je
sbb
mov
sub
imul
cli
mov
je
add
dec
xlat
jmp
or
add
adc
add
call
jo
or
adc
mov
sub
xchg
and
mov
ljmp
dec
shlb
in
inc
push
repz
mov
and
aam
sub
jo
dec
arpl
insb
movsb
int
ljmp
sub
and
jbe
scas
mov
pop
inc
sbb
inc
dec
cli
sub
cltd
mov
mov
test
jne
stos
nop
mov
mov
cmp
addr16
incl
push
mov
inc
inc
lret
sbbl
cmp
jle
jle
xchg
pushl
sub
std
out
pop
lea
testb
jo
pushw
mov
xchg
mov
lcall
push
ljmp
mov
cmpsl
rcrl
outsb
repnz
sar
or
call
aaa
les
sbb
or
pushf
mov
mov
mov
xchg
and
push
ja
mov
shlb
pop
adc
enter
push
imulb
mov
out
push
and
jmp
jne
in
cli
aad
pusha
sar
in
and
imul
xchg
rol
sahf
sti
push
ja
incl
rorl
lret
and
xchg
cmp
pop
loope
loopne
ljmp
jo
les
cli
ljmp
cmp
test
xchg
insb
jb
clc
jmp
scas
mov
adc
xor
mov
les
jo
dec
cwtl
or
movsb
repnz
decl
jo
or
push
dec
lock
dec
ret
or
xchg
mov
std
sbb
adc
repz
shl
ljmp
mov
out
lock
push
mov
xchg
cwtl
dec
push
int3
sbb
incl
ret
enter
sbb
cmp
dec
movsl
stos
outsl
dec
clc
jl
in
xchg
xchg
and
ljmp
pushl
push
lods
sbb
inc
mov
mov
fildll
test
enter
mov
inc
mov
xchg
pop
sub
add
push
adc
push
cltd
into
imul
js
imul
push
jb
fisttps
sahf
xchg
mov
cmp
jg
js
fs
sahf
cmp
xorb
dec
inc
sbb
jno
xchg
lahf
sbbb
flds
sarl
mov
xchg
dec
clc
jno
mov
lds
insl
push
cltd
test
mov
js
das
aaa
lcall
insl
dec
clc
out
jns
mov
pop
ss
aaa
fistl
addr16
xchg
jge
dec
cs
inc
fcomip
cmp
adc
push
lret
cmp
fsincos
or
in
loop
popa
sub
pushl
adc
cld
ds
jne
pop
dec
add
je
mov
jg
aas
and
mov
lret
or
add
sbb
addl
mov
push
xor
inc
movsl
shrl
sti
inc
js
cli
cmp
mov
ds
outsb
cltd
fimuls
dec
invd
out
xor
dec
stos
in
popl
int
nop
pminsw
lret
loopne
mov
mov
cli
push
xchg
dec
mov
scas
movsl
xor
fbstp
adc
mov
push
pusha
mov
jmp
clc
cwtl
mov
ja
mov
test
or
inc
mov
mov
mov
int
pop
jg
or
mov
inc
fwait
inc
mov
inc
fstl
or
xlat
jmp
or
scas
or
cwtl
cmp
call
mov
dec
into
shrb
inc
ds
icebp
movsl
rcr
sub
adc
jmp
mov
push
or
sub
ljmp
xchg
lea
test
insb
jle
inc
jecxz
push
cli
jno
mov
and
dec
ljmp
js
lahf
loop
ja
enter
daa
movb
sub
sahf
scas
jbe
mov
fidivrs
jnp
leave
inc
popf
pop
cmp
mov
int3
dec
push
mov
adc
mov
jg
adc
fwait
dec
iret
mov
ss
ret
push
mov
mov
cmp
jnp
pop
mov
cmp
push
dec
xchg
xor
je
mov
rclb
popa
pop
xchg
add
shlb
sbb
fdiv
xlat
negl
imul
xchg
xchg
lret
mov
push
ja
das
cli
call
sbb
sbb
jae
cmpsl
xchg
inc
fwait
push
push
fists
addr16
idiv
lcall
aaa
jl
mov
xchg
xorl
sbb
sub
je
in
mov
fstpt
pushl
or
lods
sbb
sbb
lcall
lahf
or
jmp
mov
jecxz
sub
cwtl
or
out
xchg
rcl
or
mov
jg
outsb
aam
incl
pop
jmp
and
sub
out
inc
nop
cmc
pop
jg
mov
jecxz
jae
dec
clc
hlt
mov
mov
dec
sub
rolb
jg
mov
push
jecxz
insb
jbe
cmp
mov
lcall
inc
out
jp
jle
inc
pop
dec
inc
dec
cmp
xorb
dec
jmp
inc
jecxz
xor
inc
mov
lcall
sbb
inc
mov
jp
jo
movsl
or
inc
lods
xchg
aaa
push
fbld
aaa
pop
mov
push
mov
mov
aam
incl
and
imul
mov
out
add
das
xor
sahf
gs
inc
ror
jle
mov
fincstp
or
lock
cmp
daa
xchg
addb
xchg
incl
test
rolb
lods
adc
cmpsb
mov
insb
jg
push
popf
mov
or
into
push
hlt
dec
addb
inc
cmp
test
enter
dec
decl
imul
repnz
add
push
mov
inc
imul
xchg
jl
adcl
adc
jle
adc
sti
rcr
call
pop
mov
inc
add
inc
shll
push
xchg
int
test
mov
push
decb
adc
xor
dec
mov
ret
ret
cmp
fdivp
cmpsl
inc
inc
xchg
test
jmp
adc
push
mov
bound
loope
mov
jle
fldl
and
jmp
int
jmp
addb
fisttpl
shrb
sahf
cli
xchg
mov
insl
lret
inc
sub
sub
leave
sbb
or
in
push
mov
sarl
add
mov
push
cld
call
push
fsubrp
jae
cmpsl
add
pushf
jg
hlt
fsts
cmp
fists
outsb
lcall
cmp
into
lcallw
cld
cli
in
jns
aad
jmp
xchg
aas
jp
xchg
or
mov
mov
cmpsb
flds
xor
decl
dec
sub
stos
test
mov
cmc
cmp
push
dec
sti
inc
pushl
cld
jmp
out
mov
cmp
jno
sbb
jecxz
xchg
jg
loop
mov
mov
lds
ret
fldt
mov
aaa
stos
inc
les
pop
loope
mov
out
lcall
jg
sti
push
fildll
mov
std
cwtl
or
paddusb
sahf
dec
lret
filds
mov
sbb
shll
add
in
mov
dec
je
pusha
inc
pushf
inc
dec
incl
cld
ljmp
mov
xchg
push
ja
leave
or
frstor
jg
pop
hlt
test
insw
ret
adc
out
decl
test
cmp
out
imul
and
pop
cltd
xchg
scas
daa
les
lret
push
fistpl
int3
adc
sbb
sub
mov
test
aas
das
ret
mov
or
sbb
add
xor
ret
cmc
lock
sub
mov
push
push
mov
lcall
arpl
out
push
fs
test
or
incl
sub
add
testl
mull
xchg
mov
sub
inc
ss
lret
cld
fdivrs
xor
fs
jnp
bound
in
xchg
inc
dec
test
adc
test
push
ljmp
icebp
rorb
hlt
push
fbld
aam
call
or
cmp
push
imul
pop
add
incl
cmp
sbb
and
rcrl
and
sbb
mov
dec
pop
sbb
mov
add
adc
fcoms
lods
mov
out
fucomip
scas
loop
arpl
incl
mov
push
mov
test
lahf
lahf
test
inc
push
mov
adc
int
out
ffree
pusha
mov
fwait
pop
dec
mov
push
fidivl
ljmp
ret
ret
fidivl
add
lahf
jl
icebp
js
push
push
sbb
xor
decl
pop
push
bound
sbb
lods
push
xor
dec
lahf
iret
dec
cwtl
xchg
adc
insl
cli
lcall
lret
or
jne
jne
data16
insb
arpl
add
scas
sub
jne
xchg
mov
das
clc
mov
jg
xchg
loope
loop
or
mov
mov
adc
push
cmp
notb
lret
cmp
repnz
icebp
sbbb
imul
inc
add
sbb
decl
cmp
push
mov
xchg
inc
pop
leave
mov
lcall
call
cmp
movb
decb
xchg
lret
xor
mov
stos
rorb
mov
jg
pop
movsb
sub
pop
inc
xor
xchg
pop
push
lock
mov
mov
decl
xchg
xor
dec
pop
movsl
push
insl
in
pop
dec
jo
ds
pop
jae
and
outsb
push
xchg
les
jp
and
mov
adc
mov
in
shrl
xchg
push
orb
ja
fcoms
cmc
aas
inc
jno
addl
mov
xchg
hlt
sub
movsl
pop
pop
or
adc
add
jg
jge
mov
fisttpll
idivb
or
lea
popa
lods
sbb
xchg
jmp
cli
incl
ret
jno
aas
outsb
xchg
mov
mov
cmc
xchg
xlat
sub
push
movsb
into
dec
sbb
push
cmp
xchg
test
push
adc
je
jp
aam
jle
jne
daa
xchg
jmp
mov
cmpsb
adc
and
xor
mov
cmp
cmp
mov
lcall
lcall
pushl
cmpb
call
inc
bound
inc
inc
ljmp
aad
imul
rcrb
push
mov
inc
aas
sub
mov
decl
aam
adc
nop
push
test
cld
xor
call
incl
xchg
decl
sahf
mov
lock
pop
mov
jmp
in
jle
mov
add
pop
sti
xchg
repz
jnp
sub
scas
dec
sbb
sub
hlt
dec
negb
addr16
pop
xchg
mov
jns
or
xor
adc
cmp
push
cmpsb
lcall
mov
sbb
stc
int
jns
sahf
test
cs
ljmp
or
into
add
xchg
cmp
mov
shll
shlb
stc
pop
cmc
or
jmp
call
sbb
or
pop
inc
leave
in
stos
pop
scas
cmp
jmp
in
jmp
jl
mov
inc
pop
hlt
dec
mov
pop
push
testb
dec
or
adc
sub
pop
sbb
and
push
cmpsb
add
insb
xor
imul
sahf
xchg
pop
xor
outsb
arpl
mov
and
call
std
or
aad
fwait
aam
mov
jmp
jno
ret
inc
js
xchg
adc
incl
mov
in
lcall
call
fwait
lcall
push
adc
out
pop
in
xchg
mov
pop
lods
aam
nop
fisubl
cwtl
push
cmp
incl
mov
mov
cwtl
push
out
in
inc
and
not
add
cmc
mov
sub
jmp
repz
in
out
nop
pop
cmc
jg
sbb
xchg
or
lret
mov
outsl
addr16
fwait
call
xchg
push
pusha
ret
shrb
push
test
cltd
push
and
cmc
pusha
mov
mov
xchg
repz
pop
xchg
push
add
pusha
cwtl
mov
call
and
repz
fcoms
mov
inc
or
cmp
sbb
lret
decl
inc
iret
pop
pop
dec
lds
and
cmc
popa
cli
jl
rolb
mov
jae
push
cmp
arpl
enter
movsl
sahf
dec
je
inc
cmc
mov
loopne
enter
jno
jp
mov
scas
jecxz
shrb
rorb
cmp
stos
daa
cmp
pop
cmp
out
push
push
cli
mov
mov
jmp
ds
repz
clc
out
lret
outsl
inc
xchg
gs
scas
push
pop
rcr
rolb
or
ja
sbb
and
and
dec
lcall
push
inc
cld
stc
or
aas
pusha
lods
clc
push
cmp
ss
xor
push
cld
sti
mov
jns
xor
sub
dec
in
out
inc
imul
lcall
decl
xor
jnp
pusha
movsb
push
sub
aam
out
out
xchg
ret
popf
dec
cmp
sbb
push
imul
add
sahf
pop
mov
adc
sub
inc
test
outsb
inc
mov
push
test
jg
int
ret
mov
inc
sub
loop
dec
iret
pop
pushl
pop
push
out
inc
mov
mov
repnz
shlb
mov
decl
or
cmpsl
sbb
les
dec
call
push
xor
lods
stos
or
mov
jmp
sbb
outsl
sbb
addl
pop
stos
sbb
sub
aaa
hlt
inc
call
pushf
ficomps
incb
cmp
in
jle
push
xchg
cmp
mov
mov
cs
ret
pop
jae
sbb
ljmp
cwtl
nop
add
or
ss
sbb
popa
mov
stos
inc
lods
xchg
push
out
jo
notl
rorb
xchg
jb
push
rcrb
sar
cmp
fsubs
push
jle
stos
inc
xorb
and
sbb
mov
lea
xor
ljmp
rcrb
cli
subl
stos
std
mov
push
fdivrp
push
addb
sub
call
out
sbb
and
mov
stos
dec
rorb
mov
faddl
test
or
call
pusha
lods
or
pop
pop
and
push
fldcw
movsb
int
mov
jge
cmp
pop
call
fmulp
fiaddl
sub
xchg
stos
push
jae
cmpb
sbb
jl
cmp
mov
loopne
ja
test
call
ret
fnsave
mov
fisubl
mov
and
push
adcl
pop
lcall
cmp
pop
lea
outsb
xlat
stos
rol
dec
sbb
pop
or
aam
inc
pusha
cmp
insb
jns
shl
push
jns
xlat
and
jns
mov
das
and
xor
fcomip
incl
dec
pop
fsubrs
mov
into
mov
push
push
push
shll
adc
lea
ljmp
push
sub
sahf
leave
jp
jae
and
sub
mov
aaa
lcall
jmp
cmp
outsl
jb
jge
addr16
push
xchg
fs
jno
xchg
in
sub
push
mov
je
xchg
add
inc
mov
int
xor
push
pop
loope
adc
inc
imul
mov
mov
test
xchg
bound
jmp
jno
loop
mov
incl
repnz
inc
cmp
dec
arpl
jb
cmpsb
fists
xor
dec
mov
mov
add
dec
jae
push
sbb
push
push
xor
dec
jno
mov
insl
clc
decl
jp
out
jb
adc
in
arpl
mov
jo
lret
push
sub
jmp
in
cmp
fs
xor
lahf
xor
xchg
cmp
lods
fsts
outsl
mov
mov
mov
mov
cwtl
ljmp
mov
push
jecxz
mov
int3
insb
je
mov
fcomip
adc
lahf
push
xchg
popa
outsb
or
jb
divb
clc
cmc
or
and
and
sbb
loope
or
aam
jle
dec
and
add
aas
mov
xchg
pop
jg
mov
mov
leave
sub
inc
jb
add
sub
jecxz
jecxz
inc
aam
mov
out
cmp
pop
movsl
lock
mov
mov
mov
pop
std
mov
sub
cmp
sub
mov
or
push
cmc
xlat
pushl
jecxz
fwait
inc
daa
xchg
mov
jbe
lret
pop
addb
jnp
inc
movsl
jle
jg
jo
mov
cmp
test
push
in
je
movsb
je
out
cmp
gs
jno
std
jmp
sub
enter
cmp
rcll
adc
jo
imul
pop
mov
scas
push
xchg
pop
mov
enter
mov
in
call
push
sub
push
jno
xor
push
daa
adc
sub
inc
inc
mov
fucomp
and
decl
outsl
cltd
mov
cmp
push
add
scas
or
cli
fmuls
push
sbb
outsb
jae
sbb
ljmp
push
fidivrl
aam
in
jo
add
dec
mov
loop
ss
orb
sbb
dec
pop
jmp
test
cld
ljmp
pushf
incl
mov
pop
shl
push
ret
sbb
leave
mov
sub
out
sub
scas
mov
mov
call
sub
notl
mov
test
push
in
jg
or
mov
or
decl
jae
adc
fistpl
adc
dec
and
mov
push
adc
push
fwait
cmpsb
push
mov
je
pop
adc
pushf
gs
dec
rcrl
lcall
mov
mov
fidivrs
adc
sub
jnp
pop
loopne
insb
test
push
pop
sti
call
inc
out
ret
xchg
les
loope
lret
mov
xchg
test
clc
pushl
add
cld
xor
pop
sub
and
and
ret
cmp
popa
cmp
incl
mov
xor
clc
insl
fdivrs
mov
shrl
loop
xor
ljmp
inc
rcr
aam
adc
decl
jecxz
js
pop
loopne
das
lock
in
outsl
cmp
std
cmp
pushl
mov
or
xor
lods
push
outsb
xorl
jmp
nop
mov
stc
ss
cmp
daa
push
cmpsb
cmp
out
mov
insl
decb
pop
ljmp
decb
js
cwtl
aam
xchg
repnz
xor
pop
inc
lcall
ljmp
rolb
mov
rcll
and
mov
fnsave
push
filds
sub
jno
dec
mov
je
into
sbb
mov
clc
jmp
movsl
cmp
popf
mov
dec
mov
repnz
pop
hlt
filds
dec
cltd
jecxz
inc
cmp
push
aam
mov
mov
mov
jnp
cmpsl
sarb
outsb
xchg
ficomps
std
or
ljmp
shl
outsb
pop
xchg
cmpsb
xchg
fisubs
jg
mov
into
add
data16
push
cld
enter
mov
fidivs
jp
and
jg
add
ss
jg
les
shrb
jmp
shll
push
mov
sbb
test
js
sbb
mov
decl
sbb
inc
and
dec
pop
cltd
stos
jns
and
mov
jg
fcoml
lock
mov
ljmp
xor
mov
mov
sbb
fwait
scas
fwait
cmpl
sahf
loope
test
ret
sub
incl
addr16
sbb
sti
repz
aam
in
push
xchg
ret
ljmp
sub
xchg
fildl
pop
cmp
or
or
les
inc
pushf
lcall
jecxz
xchg
lods
rclb
aad
mov
inc
leave
aam
pushf
test
jg
decl
cs
ror
xchg
mov
ljmp
pop
bound
inc
cs
lahf
aad
jo
and
les
jne
and
jp
out
inc
js
bnd
ljmp
cmp
ret
xchg
dec
jmp
decl
cmp
movsb
cmp
out
inc
inc
inc
push
pop
mov
daa
in
mov
xchg
js
js
jg
ds
cmp
lret
inc
mov
pop
and
rclb
in
lods
jmp
sbb
es
xchg
test
scas
dec
and
div
sub
mov
mov
sbb
ljmp
push
leave
movsb
mov
loope
mov
dec
xchg
cmp
aam
add
cli
incl
jecxz
pushf
or
mov
daa
stos
and
xor
iret
xor
mov
mov
sti
fildll
sbb
xlat
mov
lret
pusha
cltd
mov
mov
ljmp
mov
xor
cld
cwtl
mov
push
pop
xchg
popl
aad
shlb
sbb
push
std
call
cmc
inc
test
jg
push
jl
lcall
pop
jl
fcmovbe
call
inc
lods
div
test
push
fdivp
cli
jno
shll
jle
test
iret
and
adcl
stc
sahf
mov
mov
mov
xor
aad
dec
int
sbb
add
xchg
pusha
mov
sahf
xchg
popa
test
jg
dec
jo
hlt
scas
loopne
and
adc
inc
out
lods
xchg
fsubrs
call
frstor
popa
push
jno
push
stos
lcall
inc
inc
push
scas
and
cmc
lahf
addr16
dec
call
cmp
add
stc
lea
scas
dec
mov
icebp
mov
data16
pop
rcrb
decl
out
sbb
popf
pop
ds
jecxz
sub
sub
dec
sbb
in
cli
jmp
iret
sbb
sub
or
mov
pushl
jmp
nop
scas
mov
sub
lret
mov
jecxz
sbb
stc
stos
dec
xchg
sbb
gs
xchg
call
loopne
popf
mov
and
test
add
jae
or
decl
mov
fsubrs
and
add
mov
or
aas
xor
push
outsl
xchg
pop
stc
ret
arpl
jns
mov
call
jmp
pop
lock
xchg
int3
push
sub
and
ljmp
sub
pop
add
scas
mov
daa
sbb
mov
fmuls
fstpl
int
cld
pushl
mov
push
cs
shll
sub
call
xchg
je
cmpsb
loop
sub
and
adc
and
add
notl
sahf
sarb
jg
pop
adc
sti
mov
cmp
mov
cmp
lahf
movsb
hlt
add
jp
dec
fcoml
pushf
jg
jae
lahf
jmp
leave
fsts
dec
fsubrl
loope
dec
cmp
dec
mov
out
jne
push
testl
dec
js
cli
jmp
and
subl
rcl
enter
cli
pushl
in
ret
pop
js
fyl2x
in
out
dec
and
pop
inc
xchg
lret
idivb
xchg
cwtl
adc
cld
hlt
adc
daa
enter
jmp
mov
fmuls
add
arpl
adc
jg
cld
repnz
jns
mov
nop
adc
enter
mov
mov
xchg
test
jns
addr16
subb
xchg
addl
mov
mov
and
lods
jmp
orb
and
clc
push
sub
sub
pushf
mov
lock
mov
mov
pop
aas
lcall
shlb
and
xchg
outsl
mov
ljmp
xor
outsb
test
pushl
mov
loope
gs
lcall
daa
sbb
rcrb
clc
incl
data16
xchg
cmc
call
stos
push
xor
stc
insl
jae
jg
push
push
pop
dec
clc
incl
les
fxch
cmp
jmp
call
push
test
jae
xchg
lods
sbb
aad
repnz
add
sub
cmpsb
mov
incl
sbb
sub
jbe
fnstcw
xlat
xchg
and
or
cmp
inc
dec
fwait
mov
adcb
cmp
int
pop
push
and
xor
inc
sti
fildl
ljmp
adc
dec
inc
push
cld
adc
ss
loopne
xor
js
jge
inc
ret
push
lret
jmp
daa
sub
xchg
stc
testb
ficoml
lret
sub
idivb
mov
jmp
mov
es
ret
out
pop
sarl
pop
push
inc
jmp
lret
jo
jmp
pop
addr16
xchg
pop
stos
testb
mov
xor
mov
and
ljmp
mov
mov
sbb
gs
pop
mov
pop
xor
lahf
ljmp
sbb
mov
push
dec
mov
repnz
jmp
mov
xchg
xchg
sub
clc
mov
std
repnz
push
imul
out
lds
cmp
lret
into
outsb
fmull
outsl
nop
loopne
cmp
scas
addr16
xor
dec
or
imul
loop
adc
inc
ljmp
dec
or
or
cli
jmp
adc
jno
jb
idiv
pop
pop
xchg
call
shlb
sub
add
and
inc
push
fisubs
jo
mov
sahf
sar
call
jne
and
pop
or
inc
jmp
sbb
push
cmp
insl
sti
or
inc
outsl
lcall
int3
scas
or
jmp
jne
cmc
jo,pt
lods
mov
dec
sti
aas
sahf
cld
inc
fisubs
jp
push
xchg
inc
fidivl
xor
add
jge
pushl
stos
mov
in
inc
lcall
mov
or
add
xor
scas
clc
cmp
sub
cmp
test
mov
and
outsb
cmp
dec
cmpsl
sbb
sub
lcall
or
shr
cmp
jno
punpckhwd
insb
push
ret
adc
inc
cwtl
mov
mov
jmp
lcall
pop
popa
and
rorl
xor
aad
les
fisubl
push
idivb
call
bound
mov
cmp
arpl
rclb
stos
cmpsl
hlt
in
sub
dec
lret
int3
jnp
or
pop
pop
hlt
lcall
jp
cwtl
lock
mov
fsub
aas
sarl
jg
outsl
mov
ret
js
and
mov
insb
dec
xchg
inc
js
cmp
jo
cmpb
cli
ljmp
cltd
adc
jb
cmpsb
ds
je
into
pop
jecxz
push
daa
fidivrs
rcrb
or
add
sahf
repnz
pusha
mov
push
stc
adc
cli
add
mov
inc
inc
decl
mul
xchg
cmp
push
sti
xchg
dec
sub
sbb
sbb
xchg
popa
std
jnp
sbb
push
xchg
and
cs
cwtl
ja
arpl
test
or
imul
je
call
or
push
cmp
pop
mulb
sbb
scas
pushl
sbb
cmc
push
pop
add
aas
mov
les
mov
adc
pop
mov
test
shlb
sub
push
pusha
es
mov
xlat
sub
bound
lcall
sbb
mov
lcall
lret
lds
or
jp
fsin
cmpsl
call
cltd
push
fimuls
adc
add
jp
insb
pushf
test
sub
jmp
add
mov
mov
xchg
mov
in
push
fsubrp
fcmovu
add
ljmp
adc
rcrl
mov
or
add
jae
arpl
testl
incl
mov
loopne
cmp
mov
mov
mov
xor
cmpsb
mov
ljmp
clc
scas
inc
movsb
jl
outsl
decl
repz
cmpb
rorb
lcall
out
cwtl
out
in
push
negl
add
mov
out
cmp
daa
xchg
jmp
bound
in
mov
aas
pushf
mov
lcall
lret
jbe
lcall
jnp
shll
cmc
fmull
push
sbb
test
sub
add
xor
movsb
inc
lcall
fwait
lcall
pusha
daa
repnz
mov
add
or
test
roll
add
pop
lds
insl
repz
xchg
outsb
insb
das
and
xor
pop
mov
push
sbb
adc
pop
addl
mov
xorl
and
incl
outsb
push
pop
cmpsb
aas
push
arpl
dec
test
xchg
add
jae
incl
or
movsb
jle
imul
and
aas
stos
or
mov
lcall
lcall
decb
imul
aam
cmp
arpl
xor
and
shr
lahf
decl
pop
cmc
imull
les
lds
lock
sti
add
mov
add
sbb
dec
enter
loop
repnz
dec
pusha
incl
cmp
out
pop
jno
jae
stc
pop
mov
cli
sahf
jb
xchg
lcall
xchg
sub
test
test
xchg
and
clc
jno
enter
mov
decl
or
cmpsb
mov
push
xchg
popf
imul
enter
jne
xor
into
mov
into
xor
pop
mov
cmp
jle
adc
loop
stos
and
clc
dec
add
jns
jl
rcrl
sahf
decl
ljmp
push
xchg
gs
or
adc
outsl
cli
ljmp
or
dec
ret
sub
adc
aaa
std
jne
adc
call
mov
out
xchg
lds
insl
xor
mov
es
dec
sub
pop
cs
push
arpl
ljmp
or
inc
mov
cli
pop
hlt
mov
push
mov
fwait
rolb
pop
cmpsl
in
and
xchg
pop
jge
aad
mov
in
lods
mov
mov
and
cmp
lods
or
push
pop
xor
mov
int3
mov
decl
pusha
ljmp
mov
dec
mov
out
pop
fcomps
pop
out
jo
ja
lock
sub
aam
jns
mov
sbb
push
ljmp
pop
adc
shrb
aam
jl
mov
dec
pop
imulb
lret
adc
ljmp
clc
push
dec
push
cwtl
bound
mov
cld
sbb
negl
enter
ljmp
cmpsl
push
popa
ret
xor
inc
mov
inc
and
rcrl
shlb
inc
jmp
std
mov
jae
xchg
movsb
xor
imul
and
fcoml
clc
addr16
mov
sbb
iret
pusha
sub
jg
mov
or
sbb
int
sbb
mov
add
jbe
ja
pushl
ret
push
popf
ss
mov
lock
push
add
decl
xchg
movsb
lods
gs
mov
pop
or
clc
adc
xchg
dec
inc
out
or
outsb
pushl
push
insb
ljmp
lods
cmp
inc
pop
repz
push
outsb
imul
call
adc
loopne
mov
mov
adc
mov
push
mov
decl
jge
pop
imul
xchg
mov
pop
in
ds
dec
enter
dec
fsubrl
sahf
adc
mull
xor
div
cmc
inc
cmp
jb
xor
in
mov
cwtl
notl
lock
jmp
int
inc
sbb
mov
loopne
int3
push
insb
mov
clc
decl
push
mov
ror
and
sbb
dec
enter
mov
jmp
cmp
sahf
lds
arpl
loopne
pop
call
push
enter
xchg
dec
dec
cmp
ljmp
lds
bound
sbb
out
or
stos
mov
loopne
scas
pushl
sub
cmp
and
xchg
push
jnp
sub
mov
loope
add
mov
insb
and
dec
adc
rorb
adc
cmp
aam
mov
ret
xor
in
pop
mov
push
pusha
mov
idivl
iret
pop
stos
in
mov
insl
pushf
xchg
or
out
add
or
test
clc
inc
je
testb
les
mov
imul
mov
loopne
insb
fstpl
xor
ds
jnp
jmp
stos
inc
daa
lahf
push
cmpsl
jne
xchg
imul
sub
fsubrl
dec
pushf
ret
sarl
cmp
ret
mov
out
iret
lods
ds
cmp
pop
add
lea
sub
jo
repz
frstor
inc
jb
enter
out
outsb
and
pop
dec
pushf
in
mov
inc
nop
fistpll
decl
pop
jg
jbe
lret
mov
sub
push
and
loopne
jo
cld
cmp
sbb
push
ja
adc
add
pop
int3
lret
nop
sub
sbb
out
lcall
inc
inc
data16
sub
add
xor
xchg
cmpsb
addr16
fwait
xchg
lcall
sbb
jne
push
sub
lds
ret
pusha
stos
and
leave
push
iret
dec
sbb
out
mov
push
jle
and
stc
ficompl
icebp
pop
loopne
jg
mov
mov
pop
push
int3
aad
cs
ljmp
pop
adc
fists
in
xchg
rclb
shll
stos
push
out
clc
data16
mov
xor
dec
fdivr
fisubrs
push
and
sub
ljmp
xor
adc
pop
mov
adcl
insl
jo
inc
jmp
jbe
push
hlt
cld
push
jbe
in
pop
inc
nop
cmp
rcrb
and
xor
xor
jmp
out
loop
out
xor
jno
js
add
mov
jl
sbb
aas
push
xchg
jmp
jns
xchg
idiv
lds
jae
ljmp
outsb
xchg
out
mov
lock
incl
call
lock
inc
sahf
cltd
cmp
inc
dec
dec
repz
push
pushl
les
push
jae
mov
loop
sbb
push
sahf
inc
pop
aam
mov
inc
mov
pushl
cld
lods
cmpsb
iret
mov
in
cmpsb
xor
sbb
add
fld
outsl
adc
jmp
sub
add
or
repz
fnsave
sbb
mov
lcall
inc
dec
sbb
and
es
add
xchg
popa
fildl
pop
call
jge
loopne
mov
mov
mov
movsl
jle
cwtl
push
nop
cmp
pushl
in
jmp
mov
ds
and
cmpl
mov
ljmp
fcmovnu
stc
data16
dec
sbb
push
repz
jbe
sub
sarb
mov
pop
mov
mov
cmp
movsb
adc
xchg
insl
push
sub
pushl
mov
push
mov
fnstsw
arpl
repnz
aas
orl
in
pop
push
adc
mov
mov
lret
pop
lahf
arpl
jb
or
push
cmp
jbe
xchg
mov
std
adc
mov
sub
push
ss
dec
es
cmp
pop
jb
jae
pop
ljmp
into
cli
jno
xor
mov
and
in
subl
mov
mov
jg
pushf
adcl
das
sub
lcall
dec
pop
enter
aaa
or
repz
movsb
pushl
mov
bound
cmpsb
push
imul
loopne
call
fisttpl
push
lret
in
mov
mov
test
mov
popa
dec
adc
cli
ljmp
pushl
mov
imul
mov
push
fdivrl
in
xor
pusha
sbb
rcl
roll
popa
or
mov
outsb
adc
ljmp
dec
mov
pop
jl
lock
mul
push
les
add
pop
out
dec
sub
pop
inc
mov
inc
sbb
cmpsb
popf
repz
mov
fwait
mov
call
inc
stc
mov
cmp
mov
pop
push
jmp
jmp
stos
shll
mov
sbb
push
dec
dec
mov
ljmp
sti
lds
inc
cwtl
pop
adc
in
pop
cmpsl
mov
mov
mov
push
iret
pop
hlt
pushl
cmp
lock
test
push
push
outsl
xchg
mulb
jg
call
push
addr16
aam
push
rolb
or
push
ljmp
and
cmp
or
mov
aam
push
sub
ja
lcall
fiadds
push
mov
in
cmpsb
aam
fisubs
popf
push
scas
inc
mov
pushl
sarl
ret
jmp
dec
mov
pop
lock
call
test
lcall
pushl
cmc
jmp
jecxz
loope
sbb
adc
cmpsl
mov
movsl
stos
movsb
mov
aad
call
push
out
enter
lds
or
in
pop
mov
push
aas
cmp
or
int
ja
jge
mov
jp
out
dec
daa
sbb
jmp
and
shl
jne
adc
sub
dec
push
shrd
pop
into
sahf
jmp
lcall
cwtl
into
aad
jmp
addr16
repnz
xchg
mov
xchg
int3
jge
add
jo
fldt
mov
push
adc
mov
cwtl
add
push
jmp
sbb
pop
mov
cltd
orb
dec
sub
in
call
sbb
lcall
mov
dec
jnp
pop
in
mov
cli
pushl
les
inc
or
inc
inc
xor
push
push
sub
out
std
out
jmp
inc
jg
cltd
pop
popa
mov
rcrb
mov
in
jmp
testb
testb
aaa
in
dec
icebp
lcall
dec
sahf
sub
stos
sub
in
push
dec
mov
hlt
add
lcall
cmp
jnp
xor
push
xchg
arpl
lcall
mov
dec
dec
cltd
dec
push
sti
insl
lea
inc
mov
ud0
adc
loopne
ljmp
jne
cmp
mov
scas
testl
xor
sub
movsl
mov
add
xor
decl
pop
cmpsb
fcomps
inc
adc
sarl
lods
xorl
leave
sbb
adc
fimull
out
cli
jmp
lret
aas
xor
lods
inc
leave
or
jae
ds
sbb
int
jg
outsb
call
ljmp
xlat
xor
add
in
hlt
inc
sub
cmp
mov
sub
push
pushf
xchg
test
jno
xchg
mov
decl
add
xlat
jnp
pop
leave
push
sub
jmp
cld
mov
xor
lcall
dec
sub
push
mov
dec
shl
sahf
sub
cmp
dec
dec
aam
lcall
pop
data16
cmp
pop
mov
inc
and
aam
push
jne
or
mov
into
pop
testb
mov
mov
inc
jb
mov
pop
jmp
sahf
xlat
or
xlat
gs
pusha
push
jle
pop
and
add
sub
insl
mov
stos
mov
ja
mov
push
fisttps
mov
mov
mov
clc
stos
ficoml
pushl
jge
add
leave
adc
push
dec
shrl
or
mov
cmp
shlb
and
rcr
data16
pop
push
iret
inc
ja,pn
push
xchg
pop
loope
jmp
lea
adc
sarl
loope
xchg
xchg
or
jge
rolb
fidivrl
adc
stos
lret
or
filds
add
repnz
scas
orl
fdivs
hlt
jae
aad
cmc
and
faddp
iret
mov
std
mov
dec
mov
incl
daa
lret
sub
mov
xor
and
cld
bound
mov
adc
sub
shrl
fldenv
sub
data16
adc
popa
adc
imul
imul
mov
jl
add
iret
gs
daa
push
cwtl
adc
clc
sti
cld
lock
pop
mov
sbb
mov
cmp
test
adc
dec
sbb
lcall
pop
iret
sub
sub
test
jmp
sbb
mov
jae
mov
adc
pop
cli
ja
out
cwtl
pop
decl
popf
lret
push
lret
adc
cmpsl
jb
mov
mov
int3
or
icebp
jbe
lret
test
push
adc
sbb
cs
mov
pushl
push
xchg
sbb
push
repz
nop
test
xchg
popa
dec
int3
push
into
aas
movsl
cli
fdivr
and
gs
loopne
mov
enter
jns
lea
cwtl
push
inc
bnd
and
jb
rolb
cmpsb
adc
or
xchg
mov
push
cltd
and
test
call
adc
mov
subl
dec
adc
mov
scas
fstpl
shlb
sbb
inc
mov
cmpsb
stos
or
insb
aaa
sub
pushl
cltd
sub
shll
add
outsl
jbe
cmp
add
sbb
rclb
adc
cmpsl
mov
sbb
mov
add
cmp
sub
movsl
das
std
dec
pushf
cmp
and
add
decl
lock
mov
pop
out
ljmp
leave
xchg
xchg
inc
cmp
call
xchg
out
lods
je
icebp
push
loope
add
jns
popf
add
cmp
pop
outsb
jg
icebp
call
inc
mov
adc
fidivrs
sub
pop
xor
incl
add
ljmp
sub
mov
cmp
sahf
inc
adc
fisubrl
adc
decl
lea
mov
pop
mov
cmp
or
and
insl
sbb
incl
mov
mov
pop
sub
or
cli
repz
out
mov
push
lods
test
adc
xor
push
xor
xlat
sti
jle
jp
fisubl
scas
mov
aam
jecxz
lods
xor
mov
dec
int
and
in
xchg
cwtl
std
pushl
xchg
push
jg
xor
mov
mov
jne
sbb
dec
adc
or
mov
pop
adc
lret
sub
dec
outsb
addl
jnp
lret
pop
hlt
sbb
lds
lcall
std
cmp
mov
std
lock
ljmp
lcall
test
movsl
push
push
andl
lock
mov
jnp
incl
inc
cld
add
xlat
es
in
orl
add
inc
ljmp
jns
icebp
add
in
enter
jmp
add
out
and
xchg
repnz
pop
jg
call
pop
ret
scas
inc
daa
mov
pop
cmp
in
mov
inc
dec
push
out
setge
xchg
clc
push
cli
inc
ja
cmp
sbb
fiadds
mov
fwait
jne
push
lcall
push
jle
push
ljmp
xchg
ret
loope
fcmovnbe
mov
or
jo
adc
cld
mov
sbb
mov
cmp
hlt
pusha
into
push
js
cli
es
fucomi
sbb
jmp
sub
jmp
mov
aad
out
cli
in
inc
hlt
fidivrl
xchg
mul
lcall
sbb
pop
add
cmp
movsl
fimull
mov
jg
push
cli
pushf
dec
jne
lret
jb
fidivl
pop
push
lahf
dec
clc
stos
jmp
mov
jge
jno
mov
push
orb
out
std
mov
hlt
push
dec
rclb
mov
into
xor
std
in
adc
int3
xor
cmpb
incl
jp
or
jne
lock
js
into
mov
dec
mov
out
mov
lcall
jne
inc
or
cmc
and
out
inc
movsb
push
scas
pop
imul
mov
pushl
lcall
ds
arpl
in
outsl
sbb
and
pushf
loop
add
imull
jg
fdivr
xchg
popl
inc
pop
xor
pop
stos
cli
pushl
aas
int3
pop
pop
add
popa
rol
pop
sahf
sbb
add
fbld
sti
jge
clc
ljmp
mov
inc
scas
jno
out
fwait
leave
gs
pcmpgtb
mov
pushf
mov
xor
js
xchg
inc
dec
dec
jae
xchg
or
call
rcrl
lcall
or
pusha
fucomip
shlb
jg
pushl
sqrtps
sarb
lods
fs
icebp
rcrb
push
arpl
xchg
pop
jb
xchg
mov
ud0
mov
into
sub
int3
xor
loop
lcall
adc
cmp
and
outsl
sub
jmp
push
arpl
xchg
cltd
dec
sbb
hlt
jl
mov
out
nop
movsl
inc
inc
repz
lods
mov
lcall
mov
fsts
pop
mov
lods
push
and
in
in
push
mov
xchg
decl
ds
adc
ss
pop
jbe
sbb
mov
rcl
repz
incl
cmpsl
hlt
les
lods
fidivrs
aam
lret
inc
ret
ljmp
fsubrl
into
out
inc
inc
mov
jl
loopne
mov
sbb
popf
out
inc
ret
mov
filds
mov
stos
mov
fstps
andl
mov
idiv
lcall
mov
sahf
enter
add
mov
fnstcw
negl
aas
out
pop
decl
test
ljmp
sbb
and
sub
push
push
mov
call
add
iret
das
dec
lea
pop
test
xchg
mov
jns
xchg
fdivrp
or
jbe
adc
call
cmp
and
push
pop
or
adc
fildll
and
inc
sbb
movsl
pushl
xor
leave
shll
jmp
dec
mov
or
and
aam
jmp
jmp
rcrl
pop
out
insl
sahf
pop
mov
mov
mov
cmp
inc
sub
push
adc
fnstsw
enter
sbb
xbegin
jl
stc
mov
ljmp
xchg
popf
add
sahf
divl
insl
bound
stos
and
adc
jo
out
add
shlb
data16
mov
push
sub
adc
cwtl
lds
mov
inc
mov
mov
cltd
xchg
outsl
jge
xor
pop
shlb
dec
ret
sub
mov
pop
mov
movsb
cmp
mov
decl
push
xchg
insb
mov
mov
pop
push
stos
sbb
fsts
push
push
fs
mov
pop
add
fdivrp
jno
adc
lock
add
in
push
cld
es
imull
sbb
mov
pop
lock
mov
sahf
dec
inc
mov
sbbl
cli
ljmp
js
pop
movsl
cld
mov
jecxz
jmp
inc
test
pop
xchg
pushl
enter
pushf
adc
jmp
nop
sbb
fnstenv
jbe
push
push
call
icebp
pop
push
push
cmpsb
inc
mov
pop
fwait
xor
in
mov
lods
inc
test
xlat
mov
cmp
mov
scas
xor
test
es
lods
xor
bnd
and
scas
clc
lcall
cmp
imul
inc
aas
sbb
sbb
and
inc
and
ljmp
and
aam
cmpsl
rorl
addr16
mov
mov
push
insb
fcomi
sub
cld
sti
or
push
gs
sbb
push
jae
mov
mov
loope
inc
roll
mov
xchg
nop
jo
sub
iret
dec
je
dec
ret
test
jp
lea
fcomip
pushl
outsl
in
mov
pushf
xchg
into
push
popa
add
decl
pop
lods
lcall
xchg
mov
pusha
lret
cmc
stos
pop
add
cwtl
pop
sub
ja
xchg
imulb
test
jmp
les
push
lods
mov
adc
mov
dec
fsubs
inc
arpl
mov
call
leave
add
bnd
ds
mov
mov
add
call
shrl
or
cltd
bnd
dec
jecxz
in
sbb
jns
insl
xlat
test
arpl
incl
aaa
dec
add
xor
out
sub
push
out
xor
jg
mov
pop
loopne
stc
arpl
cmp
mov
mov
je
dec
xchg
xor
sbb
mov
loopne
hlt
das
cmp
int3
dec
mov
decl
pop
pop
sbb
lea
jb
mov
push
popa
xchg
ret
mov
or
decl
jp
imul
sahf
popf
out
cwtl
mov
dec
loopne
lods
movsb
lcall
popf
sbb
adc
inc
push
mov
cld
dec
fldl
pop
and
mov
jp
pusha
xor
sbb
sti
hlt
lcall
lcall
lcall
jo
test
xchg
pusha
nop
shlb
dec
xor
out
lods
jnp
fwait
mov
ficoml
pop
ss
xlat
lods
sti
sub
movsl
pop
mov
sbb
ret
sub
adc
ret
imul
out
mov
in
imul
scas
adc
pushf
into
testb
jo
ljmp
loope
clc
aaa
dec
subb
test
add
inc
fs
stos
les
sar
pushl
or
pop
mov
or
jg
mov
pop
sub
pop
test
cli
or
add
xchg
gs
dec
jae
xchg
in
adc
mov
push
stc
cwtl
cmpl
repnz
push
jecxz
ljmp
call
push
leave
adc
sti
cmp
fwait
mov
into
fmull
mov
out
push
lcall
fadds
dec
push
adc
jmp
mov
inc
push
or
fcom
pushf
fnsave
loop
aad
xchg
push
add
dec
pop
pop
sub
mov
sbb
xchg
fisttpll
stos
adc
sbb
repnz
xchg
add
clc
cmp
dec
dec
mov
cmpsb
out
dec
repnz
call
incl
lock
shl
cld
insl
pop
mov
xor
push
popa
cld
mov
outsl
xchg
sti
and
dec
xor
pop
test
sub
call
mov
lock
scas
xchg
xchg
scas
jle
ja
imul
mov
inc
in
jle
or
and
dec
cmpb
ja
dec
pop
mov
jnp
fwait
mov
adc
ljmp
and
pop
adc
jecxz
pop
inc
and
leave
push
std
out
adc
cmp
lcall
xchg
mov
xor
sbbb
mov
pop
push
xchg
fs
fistpl
xor
xchg
adc
imul
and
gs
xchg
xchg
neg
stos
pop
push
inc
je
aas
incl
jns
int3
int
mov
pusha
leave
fs
inc
outsl
out
sub
in
popa
sub
mov
jns
xor
lret
ja
push
das
sub
std
mov
and
std
add
ret
repz
inc
repnz
jno
test
inc
lcall
mov
jge
movb
stc
cld
xchg
stos
das
adc
adc
ds
fsubrs
incl
sbb
dec
push
aad
test
push
sbb
decl
mov
xor
pop
sbb
in
shrb
lds
adc
dec
incl
in
mov
and
lods
in
xchg
inc
or
dec
fwait
aaa
call
in
sbb
scas
cmc
sbb
cld
test
mov
js
add
pop
push
aas
push
sbb
push
imul
negb
fidivrs
out
push
push
cmpsb
stos
pusha
imul
pushl
inc
or
int
cltd
fisttps
add
popf
xchg
and
out
lret
fcomp
lock
cmp
es
incl
in
pop
xor
xor
mov
insl
in
cmp
mov
jg
call
pop
jbe
xchg
insl
pusha
popf
pop
mov
push
jecxz
inc
icebp
fs
push
aaa
jge
cmp
xchg
jp
dec
dec
data16
pushl
jle
xor
push
sub
mov
roll
adc
in
add
lock
fistpll
add
mov
xchg
stc
adc
fisubl
call
sub
and
mov
cmp
mov
or
movsl
mov
ljmp
or
pop
div
push
add
xchg
pop
xchg
push
xor
add
xchg
ljmp
sbb
pushl
mov
into
stos
sbb
cmp
adc
push
inc
in
or
push
push
sbb
ljmp
ret
cli
jl
mov
in
addr16
test
or
sarb
call
cmc
out
or
rclb
mov
addr16
xchg
mov
xchg
idiv
addps
dec
xor
cmp
pushf
xor
xchg
mov
add
fsubp
aas
lret
outsl
or
and
mov
shrl
popf
rcll
out
int3
xor
and
jmp
xor
pusha
in
lret
fisttpll
cmpsl
inc
mov
aad
xchg
adc
or
fsubrs
and
aad
call
inc
rorl
add
jl
inc
pop
xchg
or
mov
cmp
mov
repz
hlt
sub
xor
ret
pushf
int
dec
cs
inc
sbb
sahf
scas
pop
mov
std
mov
in
fwait
dec
loop
cs
push
push
dec
pop
adc
mov
enter
inc
scas
jae
ljmp
pushl
sbb
icebp
push
inc
inc
xchg
mov
rol
addr16
je
shlb
and
mov
clc
pop
lock
std
mov
fsub
dec
lahf
scas
test
ss
cmp
mov
das
or
push
sub
xor
adc
push
jae
inc
jp
or
ljmp
scas
jmp
dec
xor
mov
or
jge
xorb
decl
inc
arpl
or
mov
fstpl
adc
test
pop
mov
mov
dec
adc
pop
insl
sub
push
jo
jl
repz
jno
stos
fiaddl
push
call
xor
cmp
push
inc
mov
int3
fldl2t
add
xor
inc
mov
lret
add
movsb
cmpsb
dec
cltd
cmp
insl
push
push
test
in
mov
cld
into
xlat
scas
scas
and
jb
adc
inc
push
mov
mov
xchg
cmp
in
dec
cmp
ja
std
call
or
inc
push
cmpl
test
sub
fstp
sbb
stc
pop
xchg
test
jno
leave
cmp
xor
push
lahf
js
pop
shlb
adc
ret
icebp
rorl
push
cs
rorl
pop
call
inc
fcomps
or
pop
sub
push
sub
lcall
jge
test
sbbl
popf
lds
xchg
shll
add
mov
fisttpl
and
adc
xor
ss
mov
idiv
out
xor
mov
rolb
into
sub
mov
and
fwait
jg
insl
xchg
test
enter
jp
lock
std
mov
add
iret
loop
out
pop
aad
dec
fnstenv
xor
or
stos
push
mov
fldl
cmp
popf
notb
mov
pop
push
ljmp
mov
dec
push
out
sahf
mov
fucomip
ret
jp
fcomip
call
push
jle
and
add
vpaddusw
push
jmp
stos
pushl
sbb
je
insb
push
fmul
mov
mov
repnz
sbb
syscall
lcall
decl
pause
das
mov
addl
sbb
pop
xlat
push
in
mov
jb
ret
addr16
out
mov
sbb
jne
mov
cli
movsl
push
push
and
mov
call
xor
add
inc
sub
push
xor
movsb
jb
push
mov
test
pop
and
jg
fildll
xor
cli
clc
inc
pop
adc
mov
xor
aad
je
jmp
mov
vpavgb
mov
mov
dec
shlb
mov
popa
adc
cmp
sarb
sbb
xchg
scas
icebp
jae
sti
loopne
dec
enter
aad
jle
mov
sbb
ljmp
lock
cmp
mov
cmp
fs
mov
test
mov
sbb
lock
lods
outsl
push
fistpl
call
inc
leave
mov
jns
inc
pop
stos
pop
jmp
mov
daa
pop
rcrb
inc
jae
arpl
fs
std
mov
lods
aaa
lret
out
scas
stos
mov
fsubrs
mov
data16
call
push
pop
es
fstps
fs
mov
xchg
cmp
in
mov
mov
loopne
rcrl
sbb
mov
les
ja
mov
jle
or
mov
or
je
push
xchg
lcall
cwtl
cmp
add
aad
jmp
adc
stos
andl
pop
call
lret
ds
pop
sbb
repnz
jg
insl
push
cli
and
out
arpl
or
mov
clts
scas
xor
loopne
or
repz
incl
push
cld
enter
cmp
cmp
cld
pop
adc
cmc
or
adc
lcall
mov
and
insl
pop
mov
shll
popa
push
hlt
add
lea
mov
mov
cmp
in
cld
push
sbb
test
fidivl
test
push
into
mov
inc
ret
inc
or
sbbl
mov
fsubp
std
inc
ss
out
and
sub
sbb
stc
sub
jb
push
nop
add
sar
decl
hlt
inc
jmp
inc
inc
int
lahf
xor
cmp
mov
sarl
fisubrl
int
dec
movsb
lcall
aas
imul
stos
fstpt
mov
stos
add
push
movsl
pop
cmp
mov
aad
and
repnz
xchg
add
aam
add
and
cltd
mov
loopne
add
jecxz
popf
imul
aas
test
enter
ss
mov
cmp
je
adc
sub
scas
stc
inc
adc
dec
jp
push
into
dec
stos
arpl
or
push
adc
jns
cmpsb
and
adc
mov
mov
nop
push
sub
cwtl
adc
fistps
hlt
and
and
incl
xchg
jg
and
test
mov
movsl
adc
gs
adc
push
enter
pushl
dec
ss
inc
xchg
inc
lea
xor
push
push
mov
hlt
adc
jb
cmc
pop
les
in
jb
call
fldenv
or
repz
mov
xchg
dec
int
ret
stos
jmp
je
lahf
hlt
test
testb
jno
sub
hlt
imul
decl
cmp
xor
add
fdivs
cwtl
mov
int
loope
dec
pop
xor
jo
inc
push
add
xchg
jne
imul
iret
cmpsb
jge
xor
add
jmp
add
sbb
outsb
mov
addr16
cli
pop
jne
jno
bound
cmp
lcall
shr
or
cmpsl
popf
or
dec
mov
aad
mov
push
in
pop
xor
das
icebp
ljmp
rcrb
inc
clc
mov
inc
and
movsl
add
xchg
mov
testl
ret
ljmp
ja
les
sub
mov
jl
incl
repnz
mov
xor
ja
lods
push
out
jns
mov
lea
or
aaa
cld
incl
sbbb
adc
aad
test
arpl
push
pop
mov
push
xlat
pop
repnz
mov
add
jmp
rorl
cli
pop
fbstp
cmpsb
incl
pop
in
or
lods
outsl
jnp
les
xchg
mov
and
sahf
mov
fcomip
decl
mov
imul
fsubs
adc
cmp
std
decl
sub
lock
mov
scas
push
aad
mov
test
push
sbb
ljmp
cmp
jno
push
ret
call
cld
fstl
pop
fidivs
imul
lock
lock
xor
out
ljmp
sar
call
in
pop
out
loop
lahf
inc
daa
das
pusha
insb
xor
ret
cmp
and
mov
fldenv
jecxz
jae
sbb
shlb
lea
pop
fsubrs
jp
jmp
mov
xchg
and
xchg
pushl
push
fisttpl
xor
cmp
mov
das
pop
mov
xlat
pushf
out
pop
or
into
dec
enter
pop
pushf
arpl
and
jbe
decl
bt
xor
push
push
imul
jecxz
out
jmp
addr16
push
hlt
mov
decl
aaa
fiaddl
pop
mov
jnp
ror
mov
js
and
popa
mov
pop
pop
pop
icebp
pushl
roll
sub
fisubrs
gs
pop
xchg
xor
ljmp
pop
add
nop
sbb
push
lods
jmp
std
cs
mov
imul
lret
repz
inc
or
mov
cmp
cmc
addr16
lods
push
sbb
mov
dec
and
xchg
out
call
std
shrb
jl
xchg
xlat
mov
test
je
cmpsb
mov
push
pop
out
fcomps
in
fxch
sbb
cmpsb
dec
movsl
adc
ss
repnz
lret
das
jg
ljmp
inc
push
testb
lods
cli
xchg
mov
pop
test
adc
pushl
out
inc
or
jle
mov
cwtl
push
fnstcw
ds
lret
shll
mov
decl
add
je
cltd
stos
scas
sti
and
lds
mov
and
inc
mov
call
rol
test
mov
mov
ljmp
test
decl
inc
inc
xchg
mov
add
lods
mov
sbb
add
push
jno
sbb
push
adc
pop
and
or
jmp
in
xchg
cwtl
sub
test
fidivl
adcb
push
add
push
ljmp
jp
std
fistpll
iret
clc
mov
out
or
dec
lcall
jo
adc
daa
loope
sub
pop
subb
cltd
fistpl
sub
ljmp
lock
ja
sub
cld
into
add
das
cli
ljmp
sbb
mov
ret
ljmp
push
adc
dec
jp
das
cli
cltd
xchg
and
jl
scas
js
inc
jle
ret
rcll
jmp
cmp
pushl
fsts
push
rorb
aad
aad
insb
jnp
jae
adc
dec
mov
ja
lret
call
lret
in
int
fnstcw
xchg
aam
js
cmc
idivl
xor
fdivl
das
dec
mov
stos
lret
je
bound
and
enter
adc
scas
pop
mov
push
fdivp
add
js
rorl
xlat
inc
das
adc
outsb
and
cmp
es
leave
icebp
clc
es
push
dec
sarl
out
sub
pop
mov
rcrl
xchg
pop
lret
or
add
or
cmp
add
jmp
cli
pushf
xor
les
idivb
shrb
mov
or
pop
push
mov
jg
mov
frstor
jno
push
fstps
icebp
cmp
add
push
iret
dec
test
outsb
and
mov
xchg
add
pop
mov
push
xor
adc
pop
mov
adc
xchg
xor
lods
lock
aam
mov
xchg
dec
sarb
lcall
xchg
insl
outsl
lds
jb
ret
push
imul
and
jbe
jmp
cmc
outsb
insb
movsb
jg
mov
fnsave
jle
inc
adc
fimull
scas
stos
adc
ljmp
sbb
es
push
and
ljmp
inc
mov
testl
hlt
xor
or
sbb
add
dec
pop
test
sub
pushl
mov
ja
inc
int
xchg
pusha
push
fwait
movl
imul
push
cmp
jg
inc
popf
xor
mov
std
std
loopne
in
pop
jae
call
std
ljmp
and
or
inc
std
lods
adc
sub
mov
lds
aaa
cld
mov
lret
jmp
or
imul
into
sub
ret
jb
push
ljmp
movb
sub
insl
add
sarl
test
mov
pop
jg
jmp
inc
xchg
dec
mov
xchg
roll
icebp
add
add
loop
bound
jb
mov
lds
ret
popf
data16
enter
lods
jae
ljmp
or
lret
sub
mov
clc
push
mov
js
xor
incl
stos
sub
in
xor
mov
movl
fistpl
pop
mov
idivb
fcomip
xor
imul
fwait
pop
jl
aad
push
push
scas
push
mov
mov
mov
incl
fsubs
aas
mov
out
test
sahf
sub
pop
xchg
fstpt
ljmp
out
jnp
mov
dec
sub
fistps
int
and
mov
cld
pop
mov
lods
sbb
or
push
pop
pop
add
cmp
inc
jmp
or
js
icebp
or
repz
pop
cmp
xor
push
xchg
fwait
scas
cli
jmp
xor
leave
fdivrs
inc
clc
jbe
xor
cld
push
or
jnp
and
dec
loopne
aas
in
rorb
xor
notb
push
inc
fisubl
push
rcrb
nop
fisubrs
jp
cmp
mov
inc
cmpl
push
fcomp
std
jecxz
test
adc
pop
inc
cmp
rcr
lahf
movsb
cmp
push
mov
mov
popf
test
test
in
push
stc
mov
outsl
clc
jmp
xchg
inc
movsl
jmp
icebp
jmp
mov
push
push
pop
and
push
pusha
mov
add
xor
insb
cld
cmp
jge
add
mov
mov
cmpsl
pop
scas
inc
incl
sti
sbb
out
sub
sahf
mov
das
xlat
push
lds
scas
cmp
xchg
stos
jp
pop
in
mov
sti
icebp
xchg
mov
aad
adc
xchg
jmp
push
xchg
mov
jmp
push
dec
xor
pusha
and
pop
jno
and
fstps
pop
adc
loopne
cmp
aas
test
xor
lods
mov
mov
je
negl
daa
pusha
outsl
mov
pushl
leave
jns
nop
sbb
dec
ss
mov
pop
mov
nop
push
jp
add
rolb
mov
imul
or
cmpsb
xchg
dec
ret
sbb
outsl
fimull
cmp
xchg
test
ret
or
sub
sub
pushl
in
daa
shr
pop
lea
mov
and
adc
xchg
xchg
loopne
pushl
inc
jbe
dec
movsb
leave
lea
or
out
push
popa
cmp
mov
pop
jns
add
jmp
push
js
xchg
dec
xor
sub
push
fs
inc
xchg
cld
add
incl
xchg
push
rcrl
xchg
sahf
add
pop
cmpsb
test
call
sbb
fldcw
and
fsub
adc
cmp
scas
dec
mov
add
inc
jecxz
push
into
or
sub
decl
push
sarb
stos
adc
jo
int
mov
add
out
ret
ret
insb
loop
insl
mov
sub
dec
add
lcall
fistpll
test
testb
add
or
adc
fmuls
stos
rolb
decl
leave
mov
xor
test
call
push
cli
or
imul
push
or
ja
and
mov
neg
ljmp
loope
and
jge
rorb
xchg
sub
daa
jae
fbstp
mov
imul
sub
repz
xor
mov
into
pmaddwd
pushl
in
sub
pushf
dec
nop
push
jl
xchg
push
data16
js
and
pop
dec
pushl
jl
jp
inc
popf
cld
shr
and
test
decl
ss
shrl
push
push
imul
mov
sbb
pop
repz
mov
testb
pop
sub
into
aam
cli
add
sahf
fwait
mov
fiaddl
cmc
lret
call
and
push
stos
addr16
xor
jge
xor
mov
sti
scas
pop
jae
pop
lods
ret
lahf
cmp
jb
les
sahf
lock
fmull
rcll
ljmp
adc
xchg
inc
fwait
inc
lds
pusha
scas
scas
add
mov
mov
lcall
aaa
dec
cwtl
xor
mov
lds
pusha
loop
mov
xchg
pop
push
jg
mov
adcl
addb
jg
mov
mov
push
rcll
mov
shl
shlb
out
int3
fistps
xor
and
cwtl
andb
jo
jg
in
dec
in
fidivrl
mov
in
mov
inc
pop
pop
pusha
testb
aam
call
out
jbe
push
movsb
icebp
shrw
jb
xchg
mov
pusha
push
mov
cwtl
cmp
ljmp
leave
mov
dec
cmp
ficompl
mov
ret
xchg
or
call
pop
into
jg
jno
xchg
xchg
pusha
gs
inc
adc
scas
je
inc
cld
decl
cmp
addb
inc
lods
in
sbb
and
aaa
or
jp
imul
pop
jmp
cs
mov
sub
lcall
mov
push
push
push
fnstcw
fwait
icebp
mov
cwtl
sti
sbb
jb
ds
ss
cs
les
push
bound
xchg
push
add
push
inc
pushw
and
xor
cmp
pop
or
fwait
jp
inc
mov
pushf
cmc
dec
add
inc
js
add
aaa
or
pushl
addr16
mov
and
jl
inc
xchg
push
sub
jae
xor
loopne
pushf
movsl
inc
into
pop
push
les
cmpsb
cmp
or
jl
arpl
push
and
outsb
mov
xlat
push
dec
std
aas
inc
pop
xor
cltd
adc
mov
mov
adc
jle
cmp
aas
rcrb
lods
pop
add
inc
mov
mov
push
gs
jecxz
popa
mov
dec
jno
xor
fcmove
loope
out
test
enter
xor
mov
push
xorl
cmp
pop
int3
mov
jmp
xchg
push
pop
sbb
inc
fdivr
incl
icebp
mov
sahf
int3
outsl
push
gs
out
pop
add
jb
out
test
mov
or
ja
decl
jb
pop
loope
push
and
xchg
ljmp
ret
js
dec
or
sbb
sub
mov
dec
cwtl
push
mov
push
icebp
outsb
clc
fisubl
test
push
insl
das
xchg
out
clc
mov
add
adc
fnstenv
loop
fs
sbb
incl
insl
sbb
jb
fcmovnb
mov
push
or
pushf
sbb
dec
frstor
mov
ljmp
push
pop
or
jo
sbbl
sbb
adc
cs
decl
sbb
das
je
gs
fwait
roll
inc
jne
or
dec
pop
mov
or
xchg
dec
jns
jne
call
dec
inc
imul
jp
push
push
cli
xchg
repnz
lret
jmp
sub
lods
sbb
xchg
adc
hlt
fsubrs
sbb
cmp
arpl
inc
decl
fsubs
xchg
in
jae
and
push
insl
add
push
xor
mov
cmpsb
sub
cs
xor
mov
sbb
imul
inc
push
adc
adc
jmp
cmp
shrb
loope
mov
cmpsb
or
push
sub
jo
lods
fidivrl
andl
or
cmp
clc
std
dec
out
insl
negb
lret
rcrb
and
lret
popf
movsb
incl
xor
mov
dec
jge
bound
or
cltd
lods
lret
int
mov
decl
jmp
mov
lock
and
ljmp
addb
fsubs
pop
cmc
xor
lock
mov
imul
ljmp
daa
mov
dec
add
sub
cmpsb
out
shrl
arpl
jmp
ljmp
test
adc
aad
fs
int
roll
in
or
push
pop
int
sbb
lcall
pop
push
or
loop
inc
sub
xor
mov
jg
add
mov
lret
sub
add
jp
call
xchg
sbb
add
adc
adc
jmp
call
insl
dec
push
xchg
mov
add
jno
push
subl
pop
add
lcall
idivb
push
sbb
xchg
mov
shll
jns
sbb
cld
pop
cmp
out
fsub
push
mov
mov
lea
cmp
cld
in
sub
call
in
and
mov
jbe
xor
pop
jle
jmp
data16
add
call
fstpl
outsl
iret
mov
icebp
clc
dec
sarl
xor
ret
mov
inc
jecxz
jns
xchg
dec
lcall
dec
add
lret
daa
cld
mov
call
cmpl
imul
pushl
inc
add
out
cmpsl
rorl
cwtl
xor
push
push
iret
cmpsb
jl
ds
repnz
xchg
out
xchg
pushl
fwait
jecxz
fstps
mov
mov
sarb
pminub
stos
gs
xchg
cmpsb
inc
pushl
std
push
and
jge
mulb
jge
sbb
ja
mov
int
pop
iret
inc
pushl
arpl
or
fwait
push
push
pusha
jecxz
lret
lods
jno
cs
sbb
jle
aad
lcall
push
fmull
xchg
test
jecxz
frstor
js
xor
push
inc
push
adc
call
xlat
test
lret
mov
je
fmull
jnp
int3
inc
test
out
lcall
popf
cmp
adc
cld
lcall
jns
shl
loop
ss
je
scas
outsl
sub
jmp
xchg
and
or
mov
lds
sti
inc
jo
stos
and
lcall
inc
icebp
test
icebp
insl
or
int3
add
loope
enter
push
enter
pushl
call
lds
pop
stos
dec
in
cmp
push
outsb
data16
faddp
or
lcall
out
rcrl
dec
cmpsl
sub
push
insb
mov
out
nop
test
out
loopne
sti
adc
push
call
inc
sbb
fimuls
jg
mov
mov
js
icebp
mov
repnz
mov
sub
adc
ljmp
lcall
xchg
inc
hlt
pop
loopne
dec
adc
mov
or
incl
or
add
sti
xchg
sbb
push
xor
mov
enter
sar
decl
sub
arpl
rcl
ret
cmpl
frstor
jg
lea
imul
adc
and
cmp
jecxz
push
ss
repz
call
jecxz
fcomps
dec
clc
shr
jle
pushf
inc
lret
ja
pop
data16
mov
pushl
cmpsl
fsubrp
jae
and
clc
aaa
pop
lock
sbb
mov
sub
out
data16
xor
call
subl
jmp
jge
bound
xor
cmp
imul
dec
xchg
fwait
hlt
and
jmp
aam
fdivl
std
push
test
enter
sahf
jo
mov
int
ljmp
ljmp
lock
movsb
insb
mov
xor
ret
je
cmp
cmpsl
call
ud0
jg
adc
or
cltd
jbe
ja
xchg
cmp
orl
ucomiss
push
call
iret
hlt
sub
mov
imul
fstps
push
add
xchg
jno
stos
movsl
pushl
mov
dec
inc
mov
fstpt
fsub
pushf
and
jnp
push
push
and
add
lcall
fisubrs
js
add
add
lret
enter
leave
imul
dec
call
fstpl
movsl
movsl
add
pop
je
xor
jae
adc
mov
sbb
xchg
inc
mov
mov
mov
in
lcall
loop
adc
mov
push
in
mov
mov
jo
incl
jno
cmc
ret
incb
cmp
cmp
mov
loopne
pop
push
sbb
inc
in
mov
out
sub
or
and
scas
xor
or
lcall
xchg
mov
fcmovne
xchg
rcrb
adc
insb
clc
sub
out
mov
sti
dec
ljmp
push
sbb
shrl
enter
adc
cld
sahf
call
loopne
in
in
imul
lcall
adc
mov
and
jg
fsubrp
into
jle
repz
fisttps
dec
pop
out
xor
sbbl
ret
add
inc
mulb
daa
fcomip
cmp
daa
sbb
cld
cltd
mov
out
dec
dec
call
scas
add
in
pusha
test
jnp
jle
inc
scas
fldl
shlb
sahf
stc
js,pt
mov
call
test
lea
jle
fnsave
roll
sbb
sub
aad
jp
incl
push
cs
aad
sbb
push
add
subl
sbb
jg
xchg
sbbl
filds
inc
cltd
push
in
imul
je
mov
daa
pop
fidivrs
scas
ljmp
or
jbe
mov
sub
and
adc
call
inc
sbb
repz
lret
pushf
or
imul
push
popf
cmovno
imul
xor
cmp
or
jecxz
jb
mov
adc
ror
mov
into
lahf
call
dec
pop
push
cmp
out
mov
cwtl
jge
dec
jecxz
idivb
cld
adc
fcomip
jmp
ja
mov
or
cmpsl
repnz
das
adc
clc
mov
decl
mov
lahf
mov
inc
mov
lods
cwtl
ror
bound
sbb
mov
inc
lret
mov
lcall
sub
mov
mov
and
js
jle
orb
insl
sbb
adc
pushl
mov
lods
adc
imul
ret
testb
jg
sub
incl
xchg
push
mov
inc
movsl
leave
add
cltd
aad
jmp
imul
add
fwait
clc
pop
sbb
push
mov
cmc
outsl
scas
jmp
popf
gs
clc
icebp
pop
pop
fsubl
lds
jo
xor
ljmp
sub
xor
inc
test
lret
pop
xor
ds
add
inc
add
xchg
and
dec
addr16
incl
push
fs
xchg
xchg
out
jg
shlb
or
lcall
movsb
es
and
or
sbb
sub
out
test
call
mov
test
or
clc
inc
mov
mov
adc
ljmp
xor
in
sbb
add
add
hlt
addr16
jge
add
lcall
cmp
inc
sbb
pop
inc
sbb
shlb
scas
clc
or
mov
rcrl
call
popf
jo
jb
mov
movsl
out
iret
push
adc
jge
stc
cmp
jnp
inc
jmp
push
xor
out
clc
sbb
push
jne
or
std
xchg
pop
incl
cld
fcoml
add
and
sbb
and
xor
pop
std
incl
xchg
xchg
xor
xor
xor
js
mov
mov
and
aad
pop
pop
push
incl
andb
pop
xor
incl
outsl
push
gs
xchg
or
pop
cmp
arpl
or
mov
sarl
outsb
lret
out
cli
aam
cmpl
roll
jecxz
idiv
fcmovne
std
data16
mov
loopne
stos
xor
orb
jl
out
lcall
call
cmc
xchg
mov
imull
aad
cmp
repnz
sub
ja
mov
scas
out
clc
decl
lret
lds
mov
xchg
mov
or
push
cmp
dec
call
jnp
loope
stos
divb
rcrl
lods
dec
adc
adc
cmpb
clc
push
ret
loopne
jmp
call
shlb
cli
sahf
pop
or
and
pop
fbstp
ljmp
jg
lods
aaa
aaa
or
cmc
ror
les
into
stos
push
testl
out
dec
pop
decl
aaa
sbb
inc
scas
pop
cltd
test
pop
cltd
subb
imul
mov
ljmp
fisttpll
and
incl
repnz
lods
jno
popa
sbb
decl
scas
rolb
pop
loopne
sbb
nop
repz
pop
mov
mov
add
lcall
jne
push
arpl
stos
dec
shrl
popa
rcr
ss
jnp
mov
loop
jle
jg
incl
jnp
ss
testl
outsl
fistpl
adc
sbb
lcall
fwait
add
adc
adc
repz
mov
dec
outsl
js
cltd
pop
pop
push
aam
stos
ljmp
out
sub
pushf
fmuls
imull
in
push
in
xchg
gs
push
cmp
ja
hlt
incl
xor
mov
sbb
imul
add
jmp
jge
aas
enter
stc
fnstcw
test
stos
pushf
sub
jmp
or
pop
mov
ljmp
and
cld
sbb
jno,pn
or
ds
mov
dec
lcall
inc
sti
pop
ret
in
int3
or
arpl
int3
mov
cwtl
arpl
insb
das
pop
cld
pushl
pushf
push
inc
pop
hlt
lret
mov
lods
je
or
decl
xchg
pop
stc
ds
cmp
jae
test
push
pop
mull
arpl
dec
mov
mov
call
bound
adc
inc
pop
insl
pop
xchg
lods
in
and
adc
lea
aas
call
xchg
dec
data16
adc
jmp
call
in
stos
mov
dec
pop
lds
xchg
call
mov
or
mov
cmp
lock
imul
dec
sub
pushl
lock
push
cmp
jns
mov
mov
jmp
ja
adc
rolb
jmp
dec
and
jmp
cmp
xor
lods
fisttpl
ret
stos
jnp
mov
lret
mov
push
outsl
gs
sti
or
push
sbb
loope
jg
xchg
movsb
pop
movsl
mov
lahf
jo
lcall
fsubrl
mov
adcb
jmp
adc
lock
addr16
xchg
imul
sub
dec
add
fwait
dec
xchg
dec
push
mov
and
dec
clc
incl
add
add
popa
sbbl
mov
into
xchg
xchg
jge
mov
out
bound
mov
and
cwtl
xchg
std
call
mov
test
lods
add
mov
sbb
leave
dec
les
xlat
js
cmp
dec
pop
jecxz
and
inc
mov
pop
jnp
lcall
cmpsl
inc
loop
packsswb
cli
push
xor
enter
fiaddl
sbb
cmp
call
ljmp
cwtl
dec
dec
loop
or
fisttpll
fcomps
pop
push
inc
xlat
push
lods
cmp
decl
xor
xchg
sub
cmp
adc
inc
popf
cmc
mov
fsubp
gs
loop
pop
cli
mov
fcmovb
sbb
rol
fs
in
sar
call
push
jle
aam
push
sti
inc
xchg
xchg
or
sbb
xchg
jl
icebp
pop
sti
mov
shr
push
jl
insl
insl
and
gs
lock
decl
dec
dec
inc
aaa
mov
and
pop
lcall
scas
ja
addr16
cmp
or
jl
jecxz
cld
ss
bound
into
sbb
mov
scas
lret
cmp
or
mov
out
shrb
xchg
pop
aad
adc
push
jg
gs
inc
pop
jno
add
ljmp
and
js
lods
ret
mov
jmp
cmpsl
addb
add
push
ljmp
xor
in
adc
push
test
incl
nop
mov
add
out
mov
data16
leave
out
inc
rcll
lods
cwtl
xchg
ljmp
xor
cmpb
dec
inc
imull
sbb
jnp
decb
aas
and
mov
mov
imul
sub
das
pop
lcall
jae
jecxz
test
fwait
jns
fdivl
dec
push
mov
adc
jae
mov
mov
adc
lds
nop
pop
and
jmp
aaa
sub
scas
add
dec
in
mov
mov
js
jle
call
xlat
rolb
jb
sub
push
sbb
mov
pop
add
daa
mov
jb
sub
dec
jge
outsl
push
aas
shr
add
adc
fistpll
mov
mov
and
mov
jbe
inc
test
mov
adc
mov
lcall
mov
pop
dec
inc
inc
mulb
in
je
xor
mov
jl
jecxz
clc
fwait
lret
test
cmp
xor
jle
nopl
call
ret
pop
int
jecxz
sahf
repnz
stc
dec
call
cmpsl
int
movsl
push
dec
les
insb
mov
jo
jno
push
xor
popa
cmc
mov
cmp
gs
and
out
decl
movd
push
int3
mov
and
jbe
and
pop
pop
andps
mov
mov
cmp
push
mov
dec
pop
repz
fildl
ljmp
iret
xchg
int
insb
arpl
pop
or
mov
jb
fisttpl
adc
ljmp
dec
push
out
fdivs
jmp
adc
and
mov
push
jno
mov
call
and
hlt
mov
imul
dec
lcall
sbb
stc
mov
mov
insl
jae
cmp
out
xchg
call
aas
in
ja
data16
pop
xchg
sbb
pop
roll
xchg
mov
out
mov
add
clc
add
mov
jmp
pop
test
arpl
sub
mov
ss
push
mov
ljmp
pop
popf
in
popa
jl
or
jno
popl
jae
cmpsl
mov
es
pop
xor
and
jo
decl
ds
insb
jp
dec
js
and
mov
pop
add
pusha
lcall
les
rcll
xor
testb
call
or
cmp
jg
aam
mov
sbb
jmp
shl
cli
into
xlat
jnp
xor
inc
xchg
lret
sub
push
and
cmp
lds
push
push
rcl
cmpl
decl
adc
testl
pop
sbb
mov
out
xor
jae
call
push
xchg
lods
cmp
fistps
mov
pushf
and
mov
dec
dec
stc
std
adcb
loope,pt
jmp
ret
xchg
jb
sbb
jns
fdivr
call
cmpsb
xor
arpl
push
es
xor
or
test
push
mov
add
aad
sbb
imul
loopne
mov
jl
sbb
ret
data16
push
jae
rolb
cmp
mov
jg
in
mov
in
xor
mov
and
sbb
aaa
add
pushl
int3
mov
imul
jmp
loopnew
or
jl
push
add
xchg
out
dec
push
call
loopne
jle
dec
and
test
call
rclb
mov
or
data16
sub
xchg
lods
outsb
or
inc
cmpsl
ljmp
nop
inc
cmpsb
cmp
or
lcall
add
notl
ljmp
lock
sahf
sbb
adc
mov
xor
and
sbb
push
cld
fldt
sahf
push
pop
cmp
adc
add
pop
das
fcomip
mov
out
ret
lock
popf
xor
mov
inc
mov
ds
mov
pop
call
cwtl
int
fstpt
or
jnp
inc
stc
push
bound
dec
pop
sti
pop
add
ljmp
dec
in
mov
or
notl
ljmp
call
sub
or
push
lret
ljmp
and
or
push
cld
call
mov
iret
inc
push
jmp
testb
mov
imul
add
jmp
pop
pop
dec
cli
data16
cmpsb
cmp
cmp
out
dec
push
sub
nop
mov
enter
insb
mov
dec
aam
sub
cwtl
out
pop
cmp
lock
mov
sbb
loope
incl
repz
das
sarb
cmp
inc
jns
xlat
sbb
jno
lahf
jbe
ja
lcall
jmp
sbb
cmp
lret
ljmp
pushl
jbe
insl
fsubrs
inc
sahf
int3
mov
mov
test
mov
jmp
loopne
stos
push
cmpsb
rcl
ss
repnz
mov
fdivr
jb
ljmp
push
in
fcompl
dec
sbb
or
insl
push
sbb
mov
addl
xlat
ljmp
je
fcomps
dec
mov
lcall
mov
mov
cmp
in
or
bound
xchg
push
jle
or
popa
call
or
jg
aad
cmp
shr
lock
push
sbb
movsl
fists
mov
call
loope
pop
xchg
lods
xor
scas
xor
xorb
or
hlt
sbb
jmp
lods
mov
push
in
loopne
out
adc
fdivl
mov
sbb
jmp
and
out
rcrl
std
jl
fucomip
stos
jbe
adc
jae
add
push
pop
cltd
sahf
fidivl
icebp
je
xor
inc
mov
or
push
incl
test
pushl
add
gs
mov
dec
iret
mov
cltd
ret
mov
fdivrs
mov
call
inc
ja
loopne
lock
sub
pusha
pop
fisttpl
and
daa
adc
or
divl
adc
pop
mov
ret
rorb
lods
adc
call
and
lahf
nop
jge
sbb
adc
xor
daa
mov
or
jmp
aas
xchg
sub
inc
xchg
notl
dec
xchg
and
loope
dec
pop
aad
insb
cmp
dec
mov
pop
xchg
clc
sbb
adc
es
fcmovne
push
xchg
sub
lcall
xchg
and
into
jl
lret
mov
sub
mov
cmp
out
lock
lds
imul
sarl
adc
cmpsb
sarl
stos
pop
xor
call
stos
cmpl
lock
repnz
ds
jns
js
out
leave
adc
cmpsb
xor
push
jl
add
aam
adc
mov
ret
and
decl
scas
xor
lret
dec
dec
dec
test
sbb
pop
cmp
fcmovb
push
mov
out
cmp
loope
xor
mov
mov
orb
adc
decl
lcall
lcall
mov
std
dec
mov
lret
scas
incb
cwtl
sbb
and
int
mov
pop
cwtl
aad
clc
pop
sub
cltd
sbb
lea
pop
hlt
sub
call
test
mov
repz
je
imul
insb
aas
xor
add
decl
mov
inc
ljmp
sbb
mov
mov
mov
icebp
inc
dec
inc
adc
incl
pop
or
lods
test
test
jecxz
enterw
cmp
sub
jns
lds
add
aad
mov
pusha
mov
push
mov
inc
sbb
push
jne
sbb
insl
jnp
mov
ss
sub
sbb
imulb
std
adc
push
addl
cmp
decl
and
aas
cld
push
leave
cwtl
xchg
mov
or
stos
sub
push
imul
sbb
inc
sbb
jmp
xchg
filds
in
dec
dec
ja
arpl
insl
stc
adc
pop
mov
lods
addr16
sub
out
pop
mov
xor
mov
ret
push
mov
fwait
cltd
pop
fwait
mov
push
cmp
insb
js
inc
mov
fidivs
incl
cmpsb
push
inc
xchg
mov
aad
test
and
fstl
decl
pop
push
lods
bound
push
push
pop
rcrl
scas
push
inc
mov
rclb
sti
dec
xchg
outsl
push
outsl
push
ds
xor
js
xor
pop
push
jmp
push
sbb
jnp
fcompl
jno
ljmp
mov
addr16
add
cmp
lock
mov
incl
sbb
lret
adc
xor
mov
xchg
out
lock
and
cmp
and
jg
decl
aam
sarb
pop
movaps
imul
leave
incl
rcll
aad
mov
mov
jecxz
xor
icebp
fld1
cmp
out
subl
inc
int3
cmp
ljmp
mov
scas
imul
ret
shrb
sbb
xor
call
hlt
jecxz
xchg
mov
decl
lods
int
mov
and
mov
adcl
dec
call
enter
adcl
stos
adc
popa
adc
clc
icebp
js
pusha
mov
sbb
idivl
or
and
xrelease
sbb
mov
jnp
aaa
pop
ret
enter
and
mov
mov
int3
mov
cli
outsl
inc
mov
lcall
int
jecxz
movsb
cmp
fsubs
repz
add
fcomip
jns
ss
cmc
sub
sbbl
cmp
out
idiv
inc
icebp
int
adc
pop
pushw
and
ja
pop
sub
lods
mov
pop
mov
inc
icebp
dec
movsb
flds
cmp
dec
movsl
jge
sub
gs
mov
loopne
aas
push
test
lcall
lret
imul
ret
gs
pop
inc
mull
mov
shll
stos
test
push
call
shl
mov
add
ret
jmp
cmp
repz
inc
mov
stos
sub
mov
dec
cmp
decl
xchg
mov
pop
loop
xchg
add
jbe
lods
cs
sub
leave
inc
push
add
or
xchg
ljmp
test
dec
mov
shll
in
add
xchg
orb
or
inc
mov
jo
cmp
mov
loop
mov
push
or
test
lods
add
lcall
lock
jp
repnz
add
lods
sbb
xchg
pop
xor
loope
jge
and
fisttpl
test
jmp
out
into
adc
inc
add
sbb
lret
inc
mov
cld
fsubrs
mov
fmull
daa
cmp
mov
sub
imul
cli
mov
dec
ret
push
mov
in
int3
or
lds
loop
iret
inc
cld
call
mov
push
mov
bound
push
push
in
mov
sub
ja
sbb
cmp
jo
or
or
loop
fwait
clc
inc
gs
vpsadbw
push
mov
push
inc
movb
jne
fs
mov
int
dec
and
or
ljmp
xorl
loop
cltd
lock
scas
test
jbe
sub
push
inc
add
jecxz
decl
cwtl
iret
xchg
cmp
xchg
pop
popf
push
sbb
lret
std
mov
add
dec
outsb
sbb
push
mov
test
loopne
jb
mov
push
sar
and
pop
adc
call
leave
mov
iret
inc
ljmp
cmc
mov
add
ljmp
cli
push
xchg
mov
loope
pop
pop
test
inc
add
and
pushl
pop
xchg
loope
aaa
out
cmp
call
jecxz
push
arpl
fildll
and
xchg
mov
xchg
pop
ja
and
ljmp
mov
push
repnz
shlb
mov
cld
pushf
cmp
in
xlat
shl
fistl
jg
cmp
dec
adc
adc
loopne,pt
imul
hlt
test
or
lcall
ja
inc
mov
into
inc
pop
xor
inc
negl
xor
mov
decl
adc
pop
and
gs
adc
or
nop
add
mov
ret
jmp
cld
frstor
mov
or
mov
ffree
je
mov
aaa
inc
cmc
add
incl
mov
cltd
add
shll
mov
cmpb
mov
pusha
fwait
pop
jp
cmpb
ljmp
mov
push
adc
repz
pop
add
mov
pop
sub
std
out
js
xor
adc
sub
jmp
rcrl
idiv
xchg
cmpsl
das
mov
jmp
mov
int3
lcall
es
loopne
gs
inc
push
fildll
mov
test
mov
notl
ficompl
daa
add
inc
daa
mov
inc
sub
jge
and
sub
cmp
fmull
add
lods
mov
test
lods
jmp
inc
test
fldt
lea
mov
fbld
sti
nop
outsl
add
aam
ja
sub
rcrl
scas
decl
cwtl
inc
or
daa
fbld
and
push
arpl
and
pushl
add
fbstp
int3
sahf
or
pop
jns
lea
and
jmp
mov
in
fwait
and
stc
pop
xchg
leave
in
cmp
xchg
fs
xchg
lock
enter
ljmp
adc
nop
jge
pusha
hlt
push
xor
cmp
je
sbb
adc
test
and
push
xor
add
mov
idiv
incl
jle
out
cmpsb
push
into
bnd
mov
lcall
leave
sub
mov
decl
adc
pop
cwtl
orb
fwait
or
mov
outsb
push
imul
lock
dec
pop
mov
fisttpll
sub
add
inc
ljmp
and
ficoml
lret
sub
and
imul
push
dec
push
call
inc
in
pop
stos
sti
push
int3
sub
loope
lret
adc
mov
push
daa
jbe
jmp
xor
mov
pop
or
mov
xlat
pop
es
insl
dec
je
jmp
andb
xchg
sbb
pop
adc
xchg
push
fnstcw
pushl
jmp
fcoml
add
lcall
ret
fdivrl
icebp
sbb
and
pop
das
and
lock
lods
lret
jmp
scas
jmp
lcall
inc
mov
mov
jae
lods
pop
out
sbb
ret
lret
mov
pushl
and
jge
pop
fisubl
pop
inc
int
movsl
or
push
popf
aaa
push
xchg
and
add
push
dec
lcall
mov
stc
sub
sbb
inc
mov
in
mov
add
dec
lahf
sub
jnp
mov
out
add
and
lods
jo
fidivrl
mov
push
sbb
in
incl
sub
int3
ds
aad
call
jbe
insl
jbe
fsubs
mov
inc
repnz
ud0
push
imul
out
jp
aam
mov
sarb
jne
add
xor
lcall
in
imul
push
add
cmp
push
add
ss
fs
icebp
icebp
nop
jp
lcall
mov
jae
pushf
jle
sbb
push
push
cmpl
cmp
sub
lcall
push
sbb
cmovae
adc
icebp
jb
xor
lods
and
cmp
out
cli
add
rcll
cmp
adc
pop
repnz
pop
lcall
je
pushl
lods
stos
adc
mov
mov
or
xlat
in
hlt
outsb
add
sahf
cmpsb
push
ds
cmp
xchg
cmc
sbbl
sbb
pop
jecxz
sub
lock
inc
jmp
fdivl
sti
add
repnz
sbb
test
dec
call
lods
in
mov
shll
decl
mov
and
push
lea
xor
fisttps
push
outsl
cltd
orl
in
push
inc
and
cwtl
push
sub
ds
mov
aas
cmp
es
ljmp
cmpsb
or
and
adc
fisttpl
mov
xor
mov
aas
std
clc
fucom
xchg
fstps
ds
jecxz
dec
lds
mov
in
mov
or
pop
bound
mov
clc
popf
es
es
inc
ss
cmc
and
fcomps
bound
shlb
test
daa
ret
repz
arpl
sub
xchg
jl
pushf
mov
into
push
daa
mov
inc
jl
ds
std
lcall
mov
push
jle
fmulp
iret
cmp
inc
mov
dec
mov
decl
mov
loopne
mov
cmp
insb
loop
jl
and
jmp
adc
mul
xor
test
loop
sbb
mov
cmp
sar
adc
jmp
cltd
into
scas
imul
outsl
cli
in
in
mov
mov
out
mov
mov
ljmp
lret
lods
aad
daa
in
int
sub
js
rolb
mov
jae
mov
dec
or
inc
push
fwait
jne
lahf
adc
icebp
fidivl
and
cmp
mov
jl
test
mov
incl
mov
pop
mov
mov
inc
scas
push
dec
fisttpll
movsl
add
pop
ds
out
dec
mov
mov
dec
imul
mov
xor
jp
fldt
xor
daa
sbb
xchg
movsb
iret
or
lods
test
jmp
sub
xor
mov
pop
mov
lods
push
inc
add
jb
xor
cld
sub
idivb
loop
out
cmpsb
jne
mov
movsb
loop
push
adc
in
pushf
push
imul
mull
mov
fsubrs
loopne
arpl
lahf
test
push
in
sub
mov
pop
incl
es
outsb
xchg
dec
pop
dec
mov
insb
sti
cmp
push
popa
lcall
adc
imul
sbb
jns
sarb
movsl
call
mov
fs
fsubrs
or
shl
dec
pushf
daa
mov
in
int3
and
mov
lods
jns
cmpsl
lahf
adc
shrl
dec
pop
mov
ljmp
and
sub
cmp
adc
aas
aad
xorl
cmp
std
lods
adcb
inc
int3
push
mov
cmpsl
daa
out
push
in
adc
out
jnp
jmp
iret
pop
or
jo
sub
xchg
out
in
sbb
jmp
adc
xchg
stos
jae
mov
lret
mov
or
idivb
jb
lcall
loope
movsl
lret
xchg
cmpb
sub
cmpsb
loop
std
stos
push
xchg
adc
dec
testb
push
sub
push
in
mov
sbb
test
movsb
add
adc
adc
in
or
std
cli
fdivrp
ds
sbb
lods
cmp
outsb
push
lea
jge
add
mov
fisubrl
test
mov
jae
cmp
decl
call
repnz
or
inc
daa
mov
inc
decl
xchg
xchg
sub
add
insl
cmpsl
inc
jae
adc
pushf
jae
call
fnstsw
popf
int3
scas
stos
inc
dec
cmpsl
popa
leave
sub
push
sub
sub
test
cmpsb
fcompl
sub
pop
scas
fwait
or
jle
out
pop
xchg
call
mov
popf
jae
lds
rclb
push
cmp
les
cs
out
push
lahf
sub
inc
iret
lods
add
push
xor
push
lret
repz
movsb
insb
cmp
pushl
rcrl
fistl
imul
out
jo
and
push
or
sbbb
fistpll
pop
mov
push
xor
int
lea
add
ss
xor
mov
or
xchg
lret
adc
jg
gs
es
repz
inc
xchg
arpl
cs
incl
pop
add
or
sub
icebp
adc
xor
stc
add
lcall
lcall
add
enter
lcall
mov
sbb
int3
sbb
scas
cli
mov
orb
test
shl
inc
or
decl
sub
sbb
and
push
sbb
fldcw
das
dec
push
mov
cmp
pop
icebp
mov
data16
roll
mov
cltd
movsl
test
cld
jns
push
lcall
pop
subl
xchg
cs
ss
add
lods
inc
push
and
int3
jnp
dec
test
fucomip
mov
popf
push
pop
xor
mov
ja
push
cld
leave
sub
or
fisttpl
ljmp
or
xchg
adc
push
call
jno
xchg
push
roll
xchg
inc
lods
sti
enter
lret
popf
cmpsl
dec
mov
dec
push
inc
pop
lret
mov
test
or
mov
sub
call
shlb
dec
insl
hlt
ja
loop
push
test
xchg
dec
or
test
decl
xchg
push
mov
je
lret
sub
inc
mov
daa
and
jno
call
mov
jmp
mov
jnp
xchg
push
mov
out
xchg
pop
jge
rol
push
test
jns
and
call
xchg
fistl
mov
nop
int3
mov
inc
mov
int3
aam
addl
pop
jg
inc
dec
ja,pt
out
test
dec
push
mov
inc
cwtl
mov
xor
out
cld
rcrl
sub
inc
jno
mov
es
mov
adc
sbb
cli
dec
push
mov
ljmp
cmpsb
insb
cmpsl
adc
lcall
lret
pop
push
cwtl
sub
lcall
sub
nop
xchg
int
iret
std
lret
mov
fstpt
cmp
mov
dec
and
inc
iret
je
daa
jns
and
mov
pop
adc
sbb
mov
fstps
jl
jne
popa
push
int
xor
outsb
mov
and
int3
cs
lcall
scas
xor
fprem1
or
test
xchg
dec
imul
lcall
sub
stos
ror
aaa
jmp
lock
mov
pop
adc
jge
and
in
cmp
ljmp
lcall
repz
fists
push
out
mov
cltd
insl
mov
loop
push
push
data16
or
call
inc
pop
or
mov
inc
mov
test
jecxz
jmp
mov
mov
dec
adc
cmp
decl
scas
pop
lret
mov
loop
addr16
call
movsl
and
jge
setbe
mov
inc
mov
jb
cmp
and
rcll
fimuls
push
out
pop
pushf
imul
stos
test
push
xor
dec
jg
and
loopne,pn
incl
mov
and
repnz
and
cli
in
incl
sbb
gs
shr
sub
adc
xchg
push
jno
inc
sbb
mov
pushf
sbb
ljmp
mov
cs
lods
pop
push
push
hlt
rolb
mov
incl
ret
pop
adc
je
dec
cmp
dec
arpl
adc
inc
add
xor
pushl
mov
std
push
jns
mov
fiadds
dec
shrl
dec
cmp
sub
mov
cld
call
dec
aaa
push
pop
mov
cld
scas
jp
pop
push
mov
sar
repz
push
pop
pushl
and
mov
sbb
pusha
xor
popa
mov
sbb
subl
aas
imull
and
idivl
pop
jge
xlat
ret
stos
fcomip
sbb
cmp
jmp
insb
hlt
call
pop
fdivrs
mov
mov
ficoml
xor
xchg
pop
insb
fabs
negb
adc
pop
cmc
mov
and
lcall
dec
sbb
nop
aaa
rcrb
aaa
dec
addl
out
pop
lret
push
enter
fcomip
jecxz
jl
mov
jns
arpl
xor
jp
push
pop
add
sub
dec
pop
popa
xchg
lock
push
fsubr
jb
pushl
mov
jae
sub
aad
cld
sub
insl
mov
gs
shlb
xchg
mov
and
inc
icebp
jge
pop
lods
sbb
jl
loop
insb
daa
ss
inc
pop
pop
push
jg
mov
mov
mov
out
imul
or
imul
into
aam
mov
stos
test
add
ja
pushl
mov
stos
scas
ret
mov
pop
jae
mov
sarl
pop
and
out
decl
pop
notb
les
mov
test
rolb
cli
decl
dec
rorb
fisttpll
incb
sbbb
decl
adc
mov
sub
movb
lods
movl
mov
push
test
jbe
adc
loope
jecxz
aad
or
popa
sbb
stc
iret
dec
pop
aaa
js
lret
in
stos
jmp
imul
les
std
dec
cmp
scas
insb
sub
inc
rorb
jmp
and
sti
mov
pushl
sub
xor
jne
mov
arpl
push
movsb
cmpsb
cmp
outsl
pop
sar
call
inc
popf
jno
insl
pop
jmp
add
outsb
mov
repz
mov
add
scas
and
fcomip
jmp
xchg
adc
xchg
push
dec
pop
jae
mov
adc
icebp
jmp
ljmp
pop
jne
jne
lcall
xchg
push
pop
inc
or
and
add
xor
lret
mov
ret
fcmovnb
jnp
add
jg
xchg
add
ja
in
scas
stc
mov
xor
lods
nop
pop
push
dec
push
sub
call
orl
out
push
inc
popf
adcl
data16
cld
out
cmp
jno
sbb
lods
inc
sbb
jmp
pop
repnz
fwait
lcall
hlt
sbb
cmp
and
stos
cmp
stos
xrelease
js
sarl
pop
filds
cld
push
jmp
stos
hlt
imul
pop
scas
loopne
pop
cld
loopne
push
dec
rorl
dec
scas
jl
lea
mov
jle,pn
push
jns
and
inc
sub
testl
fcmovnu
jns
and
sub
cmp
jne
jle
movsl
lds
outsb
jl
jge
out
mov
push
fdivl
mov
jae
movb
sbb
adc
cmp
ljmp
inc
out
jmp
pop
mov
xor
add
jmp
cmpsl
test
ljmp
sbb
sub
cltd
pop
sbb
mov
mov
roll
jmp
aam
fstps
test
outsl
push
xor
xchg
dec
ja
in
pop
popf
scas
jle
iret
out
xchg
mov
dec
cmc
pop
mov
outsl
repnz
add
push
mov
xor
jo
mov
ret
in
cmc
xchg
mov
daa
inc
mov
pop
and
pusha
cmp
jmp
int
adc
clc
movsl
cltd
and
mov
mov
lock
call
out
dec
lahf
fdivr
jle
xchg
aas
out
and
mov
inc
mov
gs
dec
push
xchg
es
cltd
decl
dec
cmp
mov
dec
arpl
add
push
add
popa
dec
loop
fsts
dec
orl
in
leave
mov
pop
push
mov
outsl
push
dec
notb
mov
pushl
das
cltd
rcll
bound
lock
cmpl
xor
sbb
cltd
sbb
outsb
dec
or
js
inc
testl
dec
sbb
pop
cs
inc
or
sub
and
imul
pop
pop
into
adc
lds
pop
jmp
push
xchg
push
pop
je
mov
push
push
aas
cmp
lcall
hlt
cmc
cmp
call
adc
inc
push
push
push
out
jmp
mov
pop
jp
add
call
scas
dec
push
sbb
sub
cld
add
pop
daa
sarb
inc
pushl
xchg
scas
cli
jg
fidivl
push
imul
imul
lcall
in
xchg
mov
cli
push
push
push
popfw
push
mov
sbbl
arpl
cmp
xor
sbbl
mov
mov
fidivrs
fsubr
xchg
xchg
je
notb
inc
fbld
inc
xchg
les
cmp
inc
ret
sub
sar
call
inc
adc
movl
cmc
mov
cltd
push
into
jle
push
jmp
test
and
call
cmp
jmp
mov
xchg
sahf
mov
sarl
lock
push
push
pop
pop
movsb
mov
sbb
cmp
jg
outsb
ljmp
insb
jno
test
movsl
push
or
inc
pop
hlt
mov
inc
sbbb
jae
lods
mov
sbb
jno
ss
test
movsl
pop
scas
pop
lock
incl
mov
inc
scas
and
push
rorl
inc
nop
mov
aaa
fcmovnb
cli
shll
and
mov
je
jmp
je
sbb
test
push
iret
std
test
jp
mov
and
dec
xchg
popf
stos
ret
jmp
ja
adc
out
push
and
jne
dec
adc
ljmp
outsb
cmp
push
push
outsl
into
sbb
mov
push
lea
inc
fnstcw
fcompl
clc
fisttpl
push
cmp
mov
hlt
call
inc
mov
test
pusha
inc
xchg
gs
stc
xchg
mov
aas
rcrb
adc
inc
adc
rcr
mov
jge
fcomip
pushl
fisttpl
mov
dec
mov
cmpsb
lcall
fisttpl
ja
ljmp
add
ficoml
lea
mov
movsl
dec
call
adc
ljmp
test
repz
out
mov
fistpll
sahf
xor
jmp
out
decl
movsb
sub
icebp
aaa
out
cmp
mov
call
andb
ljmp
out
dec
pushf
lahf
cmp
lock
mul
push
rclb
push
mov
push
dec
push
test
mov
cwtl
cmpsl
nop
int
cli
add
cmp
xchg
fdivr
push
cmpl
jecxz
js
lods
mov
pop
cmc
jg
push
mov
pop
clc
xchg
cltd
decl
dec
mov
mov
cli
mov
mov
or
xchg
ljmp
pop
mov
inc
push
mov
mov
mov
and
call
sub
dec
mov
test
push
and
mov
lcall
xchg
call
push
sbb
ficomps
aas
ret
lods
sbb
inc
ret
pop
push
push
mov
aaa
lcall
push
sti
ljmp
or
fwait
ljmp
je
xchg
jecxz
jmp
adc
xchg
enter
or
clc
jmp
outsl
xchg
cmp
mov
sbb
mov
stos
jg
push
cld
lcall
loop
fadds
xchg
inc
std
pop
fildll
push
inc
ficomps
pop
imul
in
ljmp
outsb
lret
call
pop
push
mov
lret
addr16
into
xchg
ljmp
fildll
and
fst
jl
adc
dec
jle
and
push
or
push
aas
pop
ret
xchg
mov
jnp
jl
stos
jnp
adc
mov
inc
mov
dec
mov
jne
and
xor
inc
movsl
jmp
jge
add
fcomip
call
imul
in
mov
lcall
mov
sbb
xor
ljmp
cmp
bound
sti
jg
push
mov
imul
xchg
fstps
sbb
ficompl
push
sub
xchg
pop
jbe
lcall
decl
lret
xchg
imul
mov
sbb
mov
notl
int3
xchg
out
or
pop
incl
cltd
push
repnz
aam
lcall
xchg
pop
fwait
in
scas
sub
sahf
and
jge
ljmp
sbb
xchg
stos
enter
loopne
mov
arpl
enter
cmp
pop
dec
fdivs
je
imul
or
push
jno
fs
ret
mov
arpl
xor
ret
lcall
sub
dec
movw
cmpsl
ret
mov
mov
sar
out
stos
mov
mov
inc
mov
dec
dec
or
pop
cmp
jbe
mov
sub
leave
push
jb
pop
ljmp
dec
pop
adc
mov
jns
push
add
lret
dec
dec
add
outsb
aas
pop
add
mov
push
out
scas
aaa
js
mov
in
mov
xlat
lock
hlt
imul
roll
cltd
jg
sub
push
mov
pop
or
dec
je
jae
dec
jg
test
and
mov
pushf
sub
mov
data16
pop
das
fwait
xor
or
adc
pop
ds
rcll
jae
pop
ljmp
lcall
iret
fcmove
imul
fisubs
ja
and
jge
addb
sar
push
mov
mov
stos
aas
repnz
push
test
jmp
and
ss
xchg
dec
mov
cmp
ret
pusha
leave
mov
pushf
cmp
pop
push
mov
and
add
mov
xchg
pop
inc
int3
mov
cli
loopne
pop
adc
jmp
and
sarb
and
and
lds
mov
cli
fidivs
lcall
call
cmp
cltd
pop
mov
outsb
mov
lcall
out
add
push
cmpsb
ljmp
push
pusha
xor
sub
flds
out
lods
jmp
mov
ljmp
cli
inc
pop
and
inc
inc
xor
xchg
add
out
or
rorb
dec
stos
add
daa
ret
in
fwait
inc
bound
repnz
int3
jo
cmpsl
in
decl
decl
mov
and
jbe
sub
inc
mov
xlat
mov
test
fldenv
xor
popf
dec
sahf
popl
repnz
divb
inc
xor
bound
mov
insl
cmp
push
lcall
decb
bound
sub
cmp
loop
in
pop
insl
mov
lcall
stos
loopne
sub
or
inc
repz
and
int3
rcl
shlb
out
mov
mov
dec
shlb
cmpsb
inc
jbe
or
je
insl
and
in
jle
jmp
push
loop
inc
fnstenv
cmp
out
ss
adc
and
or
xchg
push
sbb
jmp
sub
pushf
sub
jmp
cmp
out
jo
inc
arpl
loopne
inc
lds
enter
fwait
call
fcompl
mov
pop
in
push
loope
les
push
cli
pop
ret
incl
repz
inc
or
inc
jecxz
mov
int
loope
int3
push
or
es
ljmp
push
push
and
insl
jns
aad
stos
gs
mov
xorl
popa
add
lcall
xor
test
mov
dec
jle
pop
cltd
in
std
or
cwtl
pop
push
pop
mov
lcall
fst
insl
add
sbb
test
inc
xlat
popf
or
pop
add
xor
pop
sti
xor
incl
inc
pop
loopne
js
data16
ret
sbb
push
mov
xchg
repnz
mov
push
adc
in
xor
pushf
stc
lcall
subb
lcall
pop
mov
mov
bound
rclb
inc
popa
lock
add
std
call
leave
and
mov
jb
adc
fisttpll
lods
lahf
add
fldl
aad
xchg
dec
scas
idivl
push
or
outsl
lods
in
fnstcw
dec
das
mov
cmp
cmpsb
int3
stc
add
mov
mov
divl
xchg
jne
pop
add
addr16
mov
pop
fcomip
pop
jbe
mov
out
adc
jp
adc
cli
xor
fprem1
call
dec
in
cmp
cltd
cmpl
cmp
pop
xchg
fwait
jmp
push
fucomi
xchg
icebp
adc
adc
pop
mov
jl
nop
pop
mov
pmaxub
dec
std
pop
pop
xchg
xchg
les
popf
inc
push
sub
stc
push
or
sub
es
sti
or
jnp
adc
push
out
fs
shlb
mov
jp
mov
jmp
test
push
sbb
fcomip
cs
mov
in
stos
les
ljmp
bound
insb
mov
xchg
jb
das
mov
xchg
sub
rcll
out
cmp
fsubs
jmp
loopne
cmpsb
arpl
dec
jl
pop
pop
sub
lds
nop
push
mov
es
js
negl
std
fdivl
xor
inc
dec
xor
pmaddwd
in
out
pop
repz
incl
repz
pop
cmp
dec
lock
push
inc
inc
hlt
dec
leave
and
mull
add
jmp
sbb
jmp
call
sub
scas
icebp
nop
xchg
stos
inc
call
in
fwait
cmpsb
cmp
repnz
jnp
dec
push
jno
lret
pushl
lret
insb
in
xchg
insb
icebp
inc
orl
pop
imul
mov
addr16
test
hlt
cmpsl
das
les
mov
push
adc
push
rclb
mov
push
sbb
test
sub
into
mov
jmp
adc
lahf
out
inc
jo
pushl
std
adc
les
cmp
mov
pop
xor
sbb
enter
xchg
sub
xlat
mov
inc
push
cld
cmp
mov
ljmp
ret
fidivs
mov
push
call
imul
aaa
dec
popa
outsb
lods
lea
rcl
mov
or
shrl
call
and
in
sub
or
mov
fistpll
adc
cmpsb
repz
and
addr16
ljmp
in
stc
pop
stos
clc
fsubl
call
or
pop
hlt
jne
jno
je
push
add
lock
mov
jg
dec
mov
jbe
rcll
jmp
hlt
adc
ljmp
and
popa
xor
xor
push
je
stos
mov
xor
test
std
ds
lcall
in
sti
ja
fisttpll
and
add
iret
or
sub
stos
data16
and
adc
cmp
jmp
pop
mov
inc
sub
xchg
ss
sub
jp
int
sahf
sbb
fdivrs
add
push
call
jb
jns
push
movsl
push
lods
mov
xchg
xor
scas
fdivs
cmp
cli
inc
popa
mov
sbb
decb
xchg
clc
das
adc
cld
push
data16
call
jmp
inc
and
test
sbb
add
pop
mov
mov
call
in
sub
or
dec
lock
pop
movsb
popa
and
mov
or
ljmp
mov
xchg
data16
jmp
mov
cmpsl
lods
leave
sbb
ljmp
sahf
aaa
xchg
xor
add
mov
dec
mov
cmp
inc
outsl
decl
lods
pop
lret
pop
cltd
outsb
stc
jp
lds
stos
jmp
pop
or
loop
je
in
shl
lahf
call
fs
enter
aam
pusha
std
jbe
jle
cld
movsb
lods
jb
dec
fs
jl
mov
call
cmc
call
ret
loop
daa
mov
notb
xchg
dec
daa
lods
popa
dec
fcoml
xor
fcomi
add
pop
in
stos
ficoml
out
xchg
mov
ret
push
scas
push
cmpsb
jmp
iret
mov
in
pop
test
xchg
in
sahf
addl
call
lea
sti
push
push
pop
adc
out
mov
lock
lods
xchg
je
ret
pop
mov
mov
xor
mov
pop
or
mov
sti
ljmp
andb
mov
andb
mov
push
les
shlb
jo
mov
cld
jne
inc
add
das
xor
movsl
pop
dec
sbb
mov
or
jp
sub
jbe
decl
in
cmp
dec
and
daa
mov
pushl
push
push
dec
fbld
pusha
fcoms
adc
sbb
movsb
out
filds
jg
decl
mov
data16
popa
cmpsl
mov
daa
retw
loopne
popa
mov
mov
rorl
mov
sti
lahf
fistpll
sbb
lds
bound
jae
xchg
push
addr16
xchg
mov
and
loop
cmp
pop
inc
pop
std
pushl
push
hlt
lock
imul
je
popf
testl
pop
leave
mov
jg
xchg
lods
push
adc
js
lds
inc
fdivrl
stos
ja
sbb
int
mov
push
jnp
test
inc
mov
pusha
test
dec
inc
lea
add
test
push
cli
popa
incl
xchg
mov
lods
inc
dec
std
mov
loopne
push
cmpsl
inc
les
shlb
inc
decl
sub
aaa
les
movaps
sar
in
mov
nop
push
sahf
jns
adc
std
incl
jmp
sbb
movb
mov
adc
mov
ljmp
xor
inc
cmp
jno
jns,pt
test
hlt
mov
and
or
push
ljmp
push
out
ss
js
ds
iret
mov
jmp
imul
incl
xchg
jle
jne
sbb
push
push
or
mov
pop
scas
cli
jnp
jnp
stos
xchg
call
fsubs
adc
test
mov
out
jmp
inc
lcall
rolb
int3
adcl
push
push
sbb
decl
xor
add
jnp
cmp
in
les
cwtl
mov
sbb
mov
cmpsl
or
xlat
mov
fcmovu
arpl
ret
neg
xor
popf
sahf
mov
pop
loopne
incl
cmp
test
popf
fistps
cs
mov
jmp
mov
mov
xchg
mov
jg
or
push
xchg
fs
pop
arpl
jnp
add
jmp
or
mov
gs
push
and
shr
test
adc
lret
fisubl
fsubrl
call
test
fs
jne
out
inc
lods
out
lcall
xchg
scas
push
lret
pop
imul
pop
xchg
inc
ds
decl
aam
push
jmp
dec
lret
test
fs
leave
aad
cld
ljmp
into
cmp
inc
xchg
bound
xchg
mov
push
xlat
fs
clc
fstps
jb
mov
es
dec
ja
dec
push
xlat
sub
cmpb
test
sbb
lret
lds
cltd
cmpsl
int
jbe
cmp
sub
cmp
pop
mov
sbb
subl
test
lcall
inc
push
mov
xlat
dec
sbb
cmp
aad
xlat
push
pushf
lds
jge
inc
incl
popf
sbb
xchg
xchg
mov
or
inc
daa
inc
lcall
adc
lcall
jg
jg
loope
jo
dec
inc
daa
lock
jns
push
cmp
and
cmp
mov
mov
fcmove
out
aaa
movsb
jo
movsl
jl
mov
enter
mov
call
mov
enter
decl
or
rcll
outsb
pop
lods
stos
bound
jmp
jmp
test
add
mov
pushf
and
fst
xchg
lret
mov
dec
out
movsb
ljmp
fsubrs
ds
arpl
push
repnz
jp
pop
jle
pusha
frstor
ljmp
outsl
cli
cld
cmp
cmp
filds
data16
jns
and
mov
icebp
mov
inc
jle
into
ret
or
cli
xor
pusha
loopne
lcall
xor
mov
jbe
sub
xor
aam
stos
xor
subl
dec
inc
clc
push
xor
inc
jae
and
mov
cmp
mov
pop
jle
push
pop
push
cwtl
push
insl
add
sub
lret
sub
ret
jmp
jg
mov
xchg
mov
leave
in
sbb
fisubl
lcall
or
dec
mov
push
iret
loopne
daa
scas
add
mov
dec
or
pop
cld
call
into
and
mov
jo
add
mov
mov
cmpsl
and
pushl
cld
jmp
dec
push
dec
push
adc
testl
jb
pushl
mov
ljmp
and
in
mov
into
xchg
mov
fwait
out
cwtl
add
xor
ljmp
mov
jecxz
movsb
mov
inc
add
cmp
loope
jp
flds
iret
hlt
lcall
cmp
mov
add
adc
ret
mov
pop
xchg
cld
mov
push
adc
ja
push
or
rorl
fcomip
aam
call
fidivrs
bound
stos
mov
add
aad
inc
add
cli
xchg
jno
cli
call
jns
or
ficomps
decb
pushl
movsb
repz
add
inc
mov
fidivrl
push
pop
lods
push
mov
sbb
lcall
sbb
or
cmp
xchg
ja
pop
jmp
or
insl
jns
jbe
xchg
or
pop
icebp
incl
mov
lds
movsl
add
das
stc
pop
jmp
in
or
fildll
mov
mov
iret
lods
aaa
push
roll
dec
popf
decl
adc
out
fldl
xor
xor
repnz
ret
lock
outsb
sub
decl
enter
sub
mov
xchg
and
notb
xor
imul
fwait
je
mov
inc
cmp
lahf
mov
lock
sbb
orl
lock
ret
jne
mov
pop
sbb
jle
rclb
and
push
fcmovnb
jle
pushl
lahf
jl
pushf
lahf
adc
and
out
push
filds
mov
mov
mov
call
mov
add
pop
fsts
in
mov
aad
lcall
cmp
add
sti
mov
outsl
ds
mov
or
scas
std
xor
daa
mov
stc
mov
mov
lods
push
jmp
inc
decl
sub
or
mov
lods
cmpsb
or
ss
push
roll
push
jnp
fadds
add
jmp
mov
xorl
movsb
mov
les
call
adc
jg
pop
inc
xchg
mov
je
sbb
xor
pop
push
pop
mov
jle
cli
cmp
jl
pop
push
or
push
je
mov
mov
lret
mov
ljmp
repz
cwtl
out
pop
cmp
adc
fcoms
mov
test
addr16
jmp
mov
notb
sbb
xor
add
jmp
xchg
push
lcall
sub
js
and
aam
push
push
mov
jp
jle
sub
mov
pushl
cmpl
inc
xchg
mov
jae
jo
adc
mov
aaa
dec
cli
std
lods
jp
jp
test
jecxz
int
incl
mov
mov
mov
sarb
push
out
clc
xlat
insl
ljmp
jno
js
jg
std
mov
mov
xlat
sbb
sbb
add
ja
call
cli
imul
sub
and
fsubl
lret
imul
rolb
adc
pop
cli
shl
lock
shrl
add
dec
mov
dec
push
jo
lods
sbb
ror
bound
out
lret
filds
ret
cmp
lahf
jecxz
mov
adc
divb
mov
es
mov
imul
jmp
adc
insl
jmp
mov
push
inc
adc
dec
das
lret
fwait
jp
mov
jg
pushl
ret
push
or
xchg
inc
xor
in
lcall
clc
push
stos
fstp
pop
or
xchg
testb
cmp
or
pushl
loope
pop
mov
call
test
std
repz
les
repz
repnz
fldenv
fldl
jb
ja
add
orb
andb
or
repz
or
loopne
mov
out
leave
hlt
pusha
push
mov
mov
loope
loope
or
sub
inc
fcmovb
jb
mov
jg
mov
adc
aas
jbe
cmp
scas
xor
ja
mov
pop
loop
add
lcall
lahf
adc
mov
fdivl
fcomps
fiadds
das
xor
call
dec
cmpsb
fwait
add
push
or
jne
sbb
insb
in
sbb
xchg
lds
jmp
mov
popf
pop
sbb
or
int3
je
es
testb
pushl
popa
and
jno
cmpsb
cmp
mov
adc
data16
repnz
outsl
cmp
outsl
xchg
in
xchg
fcoms
jnp
adc
cld
push
mov
gs
jmp
mov
add
addr16
icebp
and
mov
fisubl
jmp
add
enter
mov
mov
mov
xor
push
shrb
inc
inc
pusha
cld
sbb
outsl
ljmp
sarb
add
in
mov
in
jp
fstps
jmp
cli
sti
hlt
cmpsb
dec
cld
push
mov
cwtl
and
and
fists
or
push
pushf
out
push
ror
sub
decl
int
push
imull
ds
mov
sub
jne
mov
sti
pushf
mov
jmp
mov
jge
lahf
jle
cmp
cs
mov
mov
cwtl
cmpsb
add
push
mov
xchg
mov
sarb
mov
cmc
mov
imul
fldl
insl
xlat
out
jno
pop
cmp
add
loopne
sub
mov
and
cmp
in
movups
adc
pop
inc
enter
idiv
ljmp
int
pop
lahf
test
pop
xor
mov
push
stos
addr16
std
lcall
ss
ss
adc
test
adc
push
es
jle
pop
loopne
fistl
mov
popa
xor
cmc
ljmp
rolb
jmp
gs
pop
cmp
xchg
and
cmp
cmp
sahf
call
sub
ficoms
imul
push
push
into
push
push
ret
sbb
dec
repz
cli
dec
in
pop
mov
cmp
arpl
std
pop
push
ja
ret
mov
add
xor
mov
mov
xor
dec
mov
ja
cmp
cwtl
fwait
mov
fs
test
pop
sbb
imulb
incb
lret
xor
pushf
jns
adc
pop
xchg
roll
lock
pmuludq
sti
mov
incl
mov
movsb
mov
shl
rcrl
xchg
or
mov
fmull
mov
jns
fwait
mov
imulb
xchg
nop
add
jae
dec
cmp
add
fcoms
cmp
inc
push
cmp
lret
jle
cli
sub
out
and
mov
or
mov
mov
sbb
sbb
xor
rolb
mov
fsubrl
cmp
dec
sub
sub
cmp
jmp
mov
pushf
icebp
xchg
xchg
lea
and
jge
jmp
sub
jecxz
decl
aam
pop
add
test
roll
mov
and
ret
mov
je
ljmp
pop
adc
popf
adc
pop
cld
cmp
jecxz
lret
ds
repz
jmp
mov
decb
rol
cld
arpl
scas
repnz
pop
popl
mov
incl
repnz
sti
in
fiaddl
add
movsb
out
call
sarb
in
gs
pushl
minps
mov
test
jns
repnz
add
mov
jne
test
mov
xor
mov
xor
lahf
jp
icebp
pop
push
and
into
in
filds
scas
jmp
popa
shrb
into
leave
popa
jle
cmpl
push
add
ds
cmp
loope
push
imul
cmpb
jae
mov
cmp
lea
xchg
inc
cmp
pushl
repz
jnp
ja
pop
push
gs
ds
jge
stc
sub
mov
sbb
cli
lret
jmp
test
mov
lretw
jns
sub
jmp
inc
adc
pop
cmp
decl
hlt
jecxz
cmpsb
mov
mov
push
mov
sarl
ret
lret
sbb
fistps
jmp
pop
mov
cwtl
std
lds
jns
int
fsub
test
and
dec
in
push
cmp
add
cmp
pop
push
cld
ja
pop
arpl
jne
pop
mov
dec
jno
mov
or
push
icebp
xor
push
movsl
mov
push
lods
or
shll
daa
dec
jns
adc
sbb
jae
int
stc
rcrl
insb
or
vpextrw
lds
mov
sub
out
lcall
out
jbe
fsubl
data16
inc
fcomip
js
mov
aam
dec
movsl
mov
xor
mov
inc
lcall
cmp
cmc
sub
lcall
outsl
imul
cmp
xchg
dec
sbb
cld
inc
test
jmp
jg
sahf
jl
fistl
fcoms
cmc
daa
pusha
sar
decl
sahf
mov
loop
ret
jb
sub
das
or
iret
sbb
jg
outsl
push
cmp
lock
out
mov
or
std
inc
sar
es
sub
ljmp
repz
pushf
sub
loopne
movsl
popf
int3
sbb
mov
outsb
loope
mov
lods
lock
jg
xchg
lahf
cwtl
ljmp
rcrb
mov
fnstsw
jmp
and
or
xchg
jnp
mov
scas
push
xchg
pop
sbb
sub
xchg
fcomip
cmpl
scas
in
outsl
lahf
push
daa
in
xor
dec
subb
insb
out
decl
jmp
gs
dec
outsl
ficoms
mov
xor
fdivrp
jno
decl
pushf
or
mov
mov
movsl
fsts
pop
jle
mov
mov
mov
pushl
mov
cmp
inc
lahf
inc
dec
jle
mov
jns
xor
mov
lcall
mov
bound
or
adc
popf
aas
push
cli
jp
mov
clc
js
jg
xor
mov
orb
jbe
dec
jmp
lods
fnstenv
mov
pop
in
adc
pushl
gs
mov
leave
imul
xchg
fsubrp
loopne
xor
add
mov
push
cmpsb
cmp
lcall
xchg
popf
sahf
out
scas
inc
mov
cltd
fs
out
xor
pop
cld
lret
sub
fs
incl
iret
mov
es
cmpl
push
mov
ds
ljmp
cmp
mov
sub
std
pop
imul
xor
cmc
loop
mov
dec
push
popw
mov
call
cmpsl
adc
sub
pushf
add
jecxz
addr16
test
incb
push
lcall
clc
jo
or
pop
testl
out
decl
jne
and
dec
push
clc
inc
int
lea
mov
push
mov
xchg
mov
nop
push
shll
fcomip
incl
push
push
lret
repnz
insb
ja
sarb
int3
or
ljmp
lahf
out
in
mov
nop
movsl
scas
push
jmp
adc
sub
xchg
sti
lcall
inc
jae
inc
sub
mov
pop
push
lds
add
fs
push
and
movl
push
std
outsb
sbb
decl
adc
ja
nop
insl
dec
push
leave
xchg
pop
cmp
sbb
pop
inc
adcb
pushf
push
and
pushl
mov
ja
push
push
sub
push
shll
jo
cwtl
dec
daa
hlt
xor
cmp
pop
rcrl
mov
jmp
test
rclb
divb
adc
inc
jmp
std
and
sarl
int
and
dec
or
ret
pop
pop
push
icebp
cmpsb
push
push
dec
inc
pop
inc
mov
add
loopne
cs
xor
xchg
lods
fimuls
sbb
inc
in
mov
aaa
and
les
jmp
dec
sub
dec
out
adcl
imul
adc
out
xor
in
fisttps
jb
mov
sahf
cmp
pop
shll
jmp
data16
mov
jnp
sbb
shl
cli
push
inc
pop
xchg
xchg
jmp
lcall
rcrb
sbb
iret
andl
fwait
inc
fsub
mov
clc
mov
decb
lds
dec
int
enter
pop
out
iret
adc
mov
push
cmp
subl
aad
xor
addb
add
aas
inc
cs
sbb
inc
xchg
mov
test
sub
call
loopne
mov
cmp
sbb
jl
fstps
xchg
pop
int3
mov
jmp
mov
imul
and
add
ret
fcos
call
cli
mov
hlt
inc
inc
mov
mov
movsl
pop
out
mov
pop
pop
lcall
lea
xchg
fcomps
jne
inc
stc
mov
scas
ljmp
clc
inc
out
scas
daa
js
xchg
xchg
xor
lcall
loope
repz
jbe
ret
sar
sub
jno
repnz
jbe
dec
add
push
jmp
adc
in
jns
je
sbb
testl
pop
icebp
call
mov
pop
ss
ss
push
loope
test
into
mov
insl
out
cmp
call
call
mov
negl
cld
and
xchg
mov
add
out
repnz
fldcw
and
out
push
and
jno
xchg
mov
cmp
jecxz
jmp
call
add
test
mov
xchg
pop
mov
sbb
clc
sub
or
fwait
int
incl
ret
hlt
data16
xchg
dec
jp
jg
incl
mov
cs
pop
push
pop
leave
pop
xchg
inc
in
push
pop
stc
call
lret
fpatan
and
xor
mov
jl
ret
hlt
or
and
adc
xchg
or
dec
nop
dec
mov
mov
mov
xlat
jp
push
cmp
jg
jecxz
dec
decl
jno
mov
mov
cld
xor
out
negb
decl
sub
or
mov
out
jne
sub
adc
pop
push
add
in
movsb
stos
inc
insl
xchg
call
outsl
dec
cmpl
jmp
push
cld
loope
sub
sbb
mov
ret
push
pushf
call
adc
adc
fidivrl
test
xchg
fsubrs
adc
stc
shl
add
xorl
clc
popf
imulb
test
pushl
mov
fmuls
jge
pop
inc
sub
xor
jno
add
daa
call
loopew
loopne
ljmp
test
clc
fcoml
hlt
aad
imul
add
jne
mov
dec
xor
nop
out
mov
pop
adc
les
xchg
jmp
lods
out
sbb
pop
or
ficoml
pop
test
mov
enter
pop
fldl2t
and
inc
add
or
cltd
pushl
sbb
ret
adcl
aad
mov
call
mov
mov
movsl
jg
call
aas
pushf
lea
lods
sbb
xchg
adc
testb
cmp
sbb
movsl
pop
add
jno
xorl
add
aad
pushl
cmpsl
dec
outsl
scas
mov
movsl
sbb
add
scas
cwtl
data16
jg
or
imul
popa
and
add
mov
dec
cmpsb
mov
push
hlt
dec
xor
jb
popl
pop
dec
fsubl
push
push
adc
xchg
movsb
incl
xorb
pop
jle
and
and
ret
test
inc
dec
inc
jae
xor
lcall
inc
cmpsl
xchg
mov
mov
sbb
mov
mov
imul
decl
push
cmp
outsl
dec
or
clc
dec
nop
add
out
decl
push
jmp
add
mov
xchg
mov
inc
test
call
inc
xchg
pop
or
test
in
repz
adcl
dec
dec
flds
lcall
lret
mov
aam
mov
lahf
iret
iret
popf
rcll
lcall
mov
mov
mov
cmp
xchg
sbb
ds
push
xor
cs
mov
cs
and
movsl
inc
outsl
lods
cmp
sub
cmc
sbb
lcall
or
xchg
imul
mov
pop
cltd
sbb
rorb
push
shlb
inc
aad
decl
jno
dec
cli
pop
or
sub
inc
lcall
mov
add
aas
xchg
loope
jae
ficoms
clc
pop
jmp
pop
inc
pop
mov
cmp
ja
push
jno
incl
inc
hlt
faddp
xor
js
fisttpl
pusha
sbbb
loop
dec
das
scas
dec
push
mov
mov
xchg
das
mov
filds
xchg
leave
fisttpl
xchg
mov
xchg
add
xchg
imul
or
rcll
cmpsl
divl
je
adc
out
clc
xlat
jnp
test
out
loopne
inc
into
inc
xlat
inc
xchg
dec
xlat
jmp
loop
incl
jbe
push
fadds
jnp
pop
fistl
mov
jg
ljmp
mov
sbb
add
fs
mov
push
orl
movsb
das
lods
jl
fsubp
sub
pop
loopne
clc
lret
sub
pop
loopne
add
jg
sub
stc
into
xchg
mov
mov
push
movsl
jp
mov
mov
call
rol
cmpsl
add
push
lret
int3
incb
out
xor
lcall
and
paddd
mov
xor
mov
cmp
add
and
xor
jecxz
xchg
sub
cwtl
ret
pop
cmpsb
lret
call
cltd
jno
divl
xchg
outsl
into
inc
addr16
fs
xor
clc
adcb
xchg
pop
shl
inc
sahf
mov
daa
cwtl
adc
sbb
lret
push
mov
das
fsubr
fisubs
cmpsl
sub
mov
inc
stc
push
hlt
lea
pop
bound
dec
xchg
cs
hlt
lcall
jae
aam
mov
mov
fwait
and
adc
dec
mov
pushf
dec
sbb
insl
xchg
xor
mov
sbb
je
mov
mov
add
push
jmp
cli
sti
divl
fnstsw
movsb
arpl
lret
and
mov
movsb
xchg
push
mov
das
pop
pop
outsl
aaa
inc
popa
lds
adc
lahf
scas
in
frstpm(287
shlb
pop
cmpl
decl
fbld
jae
jle
add
mov
and
into
out
inc
ljmp
js
mov
pop
cli
xchg
shlb
in
fldt
test
xor
insl
mov
jne
mov
cmpsb
insl
pop
jns
push
dec
incl
cld
jl
add
out
xor
mov
popf
enter
jl
clc
ds
aaa
inc
ljmp
xor
andl
xchg
mov
sti
out
pusha
xchg
in
and
pushf
les
aaa
mov
xor
push
pop
inc
pushl
inc
aaa
sub
add
push
test
adc
sub
inc
mov
call
and
sti
and
and
push
fsts
jge
adc
lahf
test
xor
adc
sar
sub
jmp
push
scas
pop
insl
mov
popa
jmp
mov
mov
aas
or
push
jbe
inc
call
add
push
data16
mov
xchg
in
lcall
ss
shrb
sbbl
aad
pop
int
mov
push
add
sbbl
enter
inc
fbstp
cli
out
inc
fisttps
cmp
incl
cmpsb
push
in
fsubs
or
fisubrs
dec
dec
add
sbb
xor
fstpl
jmp
adc
xchg
and
sbb
ret
test
arpl
shll
cmc
rcrl
stos
out
cli
jmp
jo
mov
mov
mov
adc
jmp
adc
idiv
ljmp
in
in
push
bound
pop
mov
pop
adc
clc
cmp
in
push
sbb
fiadds
fisubrl
cmp
std
pushl
fwait
sbb
sbb
adc
in
dec
mov
popa
dec
sbb
pushl
add
scas
push
pop
jbe
add
dec
lods
and
jbe
mov
js
data16
cmpsb
arpl
add
and
out
mov
xor
cld
dec
das
int
dec
mov
cmc
cmpb
and
decl
loop
jmp
repz
incb
movsl
jb
pusha
adc
cwtl
mov
stc
mov
jno
jae
rcll
cs
pop
xor
pop
mov
gs
mov
xchg
fdivr
in
nop
xor
mov
mov
and
sub
imul
call
sub
cmp
ja
push
rclb
mov
pushf
out
ss
testb
decl
and
adc
and
in
shll
fisttpll
pop
mov
les
dec
xor
outsl
cli
pushl
jnp
or
fwait
aaa
shll
imul
out
xor
pop
mov
pushl
enter
test
imull
mov
cmpsb
sahf
push
and
loope
fwait
lret
add
jge
sbb
cmp
cli
add
xchg
xchg
ret
sbb
incl
out
cmp
negb
push
lret
call
jg
mov
orl
data16
pop
loopne
push
enter
or
mov
push
insb
or
rorl
cli
cmp
ss
ret
cli
sbb
mov
sbbb
mov
dec
outsl
jl
xor
pop
lods
sub
cld
movsl
cmp
mov
pop
add
push
xchg
cmp
idivb
xchg
sub
mov
in
call
sahf
js
xor
pop
pop
xor
xchg
mov
mov
sub
fucomip
dec
imul
adcb
orl
hlt
scas
fs
decl
cmpsl
daa
fwait
mov
or
push
inc
mov
jno
mov
loopne
mov
popa
sub
clc
inc
sbb
popf
jecxz
rorb
or
mov
xchg
lock
jg
pop
incl
pop
lret
lods
adc
jns
and
rcrl
enter
rorb
stos
lock
ljmp
mov
in
test
loop
jecxz
insl
xor
jne
and
jg
xchg
mov
add
decl
and
sub
ss
lret
jne
add
cmpsl
jp
cmpsb
xchg
pop
incl
fs
aaa
push
nop
imul
stc
aam
scas
sbb
enter
or
mov
popf
sar
pushl
inc
mov
mov
bound
and
cmp
bound
loop
sub
test
or
decl
sub
daa
jg
xor
and
bound
in
imulb
int
adc
incl
minps
lahf
call
pop
push
fiaddl
outsl
lods
and
inc
aad
inc
out
dec
test
loope
scas
cmpsb
fwait
ss
mov
fnstenv
outsb
sub
push
jmp
and
sbb
cmp
mov
mov
inc
ss
sar
dec
jmp
pop
aaa
out
stc
mov
cmp
jb
out
jp
arpl
push
sub
out
pop
shrd
mov
cmpb
call
nop
test
mov
sahf
dec
insl
rclb
ret
jge
and
push
out
test
and
push
fidivrl
dec
outsl
push
enter
int3
dec
inc
add
cmc
lock
mov
cld
cmp
loope
loop
mov
lret
adc
cmp
xchg
or
pushl
cmp
pop
mov
xchg
pop
xchg
pop
adc
out
rcrl
or
gs
lcall
xchg
dec
xor
inc
xchg
dec
pop
stc
leave
es
or
test
stc
addb
xchg
cltd
add
ljmp
and
inc
orl
sub
mov
icebp
fidivs
pop
cmp
push
jl
repz
les
in
lock
mov
xchg
and
sub
sbb
call
ljmp
sub
and
stc
jns
and
sar
or
mov
clc
decl
out
inc
and
test
pop
imul
add
xchg
std
lcall
shrb
jns
pop
mov
sti
into
lcall
sub
sbb
in
mov
jge
add
mov
mov
ljmp
mov
rclb
decl
sub
outsb
shlb
aas
adc
push
adc
aas
les
mov
xor
mov
sbb
aam
jge
sub
add
jmp
in
dec
cmc
in
mov
sbb
repz
test
mov
ficoml
add
leave
or
popa
fs
rcr
xor
cmc
popa
adc
mov
ss
push
mov
loopne
lds
and
add
adc
lods
pop
and
incl
lds
les
jg
rcll
pop
xor
xchg
jae
push
stos
cmpsb
xchg
push
hlt
aaa
incl
lcall
mov
jne
adc
outsl
dec
lret
rorl
roll
popf
out
jg
mov
sbb
loop
je
test
popf
or
lock
bound
pop
add
es
push
mov
adc
and
inc
mov
ljmp
lds
push
sti
sti
insb
mov
sti
fldcw
imull
push
inc
dec
je
cmp
insl
out
stos
call
push
jmp
mov
loopne
out
js
and
jmp
ficompl
or
mov
sbb
por
fldcw
imul
sbb
loop
leave
push
sub
mov
addl
cli
mov
pop
loopne
pop
xchg
or
and
sbb
incl
and
mov
or
jmp
js
lcall
fdivrl
sub
setg
mov
test
add
les
mov
mov
push
pushl
fistpll
jno
and
aas
push
cmp
out
test
dec
xlat
fwait
roll
ss
cli
pushl
stos
jb
stc
popa
add
mov
ds
std
lock
cmp
lcall
test
inc
add
leave
pushf
test
orb
pop
dec
lds
imul
push
movsb
mov
pop
jae
mov
and
fstl
xor
out
jo
push
mov
jb,pt
loope
sub
add
lods
pop
icebp
ds
push
jae
mov
fs
aam
test
clc
jb
das
sar
out
ret
leave
push
push
insl
ficompl
dec
jp
adc
std
inc
rcl
xor
decl
sub
sbb
aad
cmp
repz
stc
testb
add
pushl
xor
inc
shlb
jl
cmp
loopne
dec
and
std
cld
dec
xor
gs
mov
dec
mov
inc
xor
aas
in
das
fisubl
inc
mov
insl
xchg
out
cmc
ljmp
pop
movsb
xor
inc
outsb
xchg
test
mov
stc
mov
clc
pop
xchg
sbb
shrl
sbb
in
fsubrs
mov
mov
cmp
jl
cmp
pop
push
jno
push
subb
data16
cmp
dec
push
jmp
fcomi
cwtl
or
pop
add
orl
pop
mov
xchg
stos
mov
jb
jmp
jp
mov
push
popf
test
push
or
jle
leave
stc
or
xchg
inc
jne
adc
scas
incl
sti
lods
xchg
mov
inc
lods
into
jb
into
ret
pushf
dec
out
push
mov
mov
push
pop
in
movsl
ss
divl
call
fildl
cld
je
push
xlat
pop
incl
jns
neg
sbb
xor
sahf
in
adc
loopne
lcall
or
mov
inc
mov
inc
fmuls
aam
mov
inc
jno
xchg
mov
lcall
add
mov
cltd
pop
adcl
cmp
cmp
mov
bnd
ret
mov
cmp
xchg
cwtl
lea
fdivrl
and
mov
dec
dec
hlt
or
fisubrs
jl
or
ss
int3
rclb
and
incl
add
xchg
in
inc
add
sbb
add
ret
jae
ljmp
xchg
icebp
imul
fbld
out
push
jg
enter
pusha
mov
out
mov
leave
xchg
jne
push
jne
or
aam
add
repnz
sbb
and
or
pop
cmp
insl
pop
loope
movsl
insb
fisttpll
lods
sub
daa
adc
dec
sbb
fisttpl
call
and
xor
push
loop
icebp
mov
fisubl
std
and
pop
xor
call
jg
sti
ja
jb
fdivrl
sub
leave
imul
clc
decl
into
adc
cmp
push
test
ss
cli
decl
add
add
fldcw
inc
xor
icebp
arpl
decl
dec
lds
lret
imul
icebp
sub
dec
dec
lret
pop
jno
imul
call
jmp
ljmp
add
cwtl
push
mov
pop
in
fwait
mov
mov
decl
mov
xchg
jmp
pop
mov
inc
sbb
mov
adc
ret
das
push
sarl
and
cmp
decl
pop
je
jecxz
popa
jmp
pop
jae
fs
fsubrl
ss
ret
outsb
decl
dec
push
dec
sbb
bound
ja
sub
insb
fildll
bound
jne
adc
mov
adc
jg
ljmp
jge
jbe
jb
loope
push
int3
cmp
stos
mov
dec
movd
decl
faddl
sub
iret
insl
xor
loope
dec
jno
xchg
fwait
sbb
ds
sbb
jle
add
dec
mov
xor
outsb
loopne
or
lea
jo
and
xchg
jnp
imul
test
mov
inc
add
aam
ret
jg
mov
mov
mov
and
pop
and
mov
pop
xchg
leave
jp
mov
mov
mov
fisubrl
cltd
test
or
test
inc
idivl
cmp
gs
adc
das
xchg
imul
lods
outsl
jmp
xchg
mov
dec
push
jb
imulb
jae
fstl
sahf
jg
fidivs
rorl
inc
ljmp
into
pcmpeqd
dec
iret
cmp
sbb
call
pushl
xchg
adc
lock
push
movsb
ljmp
pop
push
lret
push
push
leave
push
jbe
sar
jg
hlt
add
in
and
cmp
repz
nop
xchg
xchg
inc
movsl
xor
mov
jmp
or
jg,pn
loop
sub
sbb
in
loop
lcall
sbb
dec
inc
xor
arpl
inc
push
push
pop
pop
xchg
into
lods
add
lcall
test
pop
loopne
inc
cwtl
inc
jl
or
stos
dec
cmp
lods
mov
enter
les
mov
inc
mov
scas
cli
cld
outsl
stos
imul
mov
adc
daa
hlt
dec
fdivr
jl
ss
pop
sub
jmp
pusha
mov
add
mov
in
lds
inc
data16
ljmp
adc
popf
and
sub
xor
bound
adc
lcall
arpl
frstor
test
mov
and
in
inc
mov
cmp
xor
call
les
xchg
popa
jle
mov
jns
cmp
mov
and
fisttpl
loop
lret
xchg
xchg
push
stc
dec
sbb
aam
in
cs
negb
and
xor
sub
loop
inc
cwtl
mov
mov
xor
mul
repz
mov
and
cli
mov
adc
or
push
push
popa
rclb
push
ds
mov
and
decl
push
mov
loop
inc
add
push
sub
bound
jl
mov
jp
sbb
dec
xchg
pop
ret
repz
push
roll
out
mov
add
mov
fcomip
lcall
pop
mov
cmpsb
mov
out
jl
and
add
xchg
es
mov
jg
in
and
arpl
pop
mov
mov
lock
ret
mov
movl
mov
lods
pop
scas
arpl
mov
aad
int3
pop
sbb
sub
popf
in
fs
je
cmp
lcall
scas
test
pop
imul
sub
leave
adc
mov
sbb
call
ret
mov
iret
ret
popf
xchg
or
mov
sub
push
lea
aaa
sub
pop
xor
push
lds
jae
notl
hlt
dec
enter
mov
jmp
xchg
and
ret
pop
xor
stos
test
in
test
dec
cmc
adc
call
push
rcll
out
and
push
cmpl
and
pusha
inc
cld
push
xor
pop
jns,pn
xchg
xorl
enter
sarb
icebp
mov
incl
xor
mov
loop
pop
pop
mov
ret
call
xor
clc
das
push
xor
push
mov
push
std
leave
push
cmp
sub
loopne
ret
cld
inc
ljmp
arpl
add
push
xchg
stc
push
dec
ds
into
xor
or
jl
testl
push
dec
lea
mov
int3
stc
pop
rorb
sahf
add
sub
cmc
and
dec
pop
ljmp
xor
cli
xor
mov
imul
cld
or
shr
clc
xor
or
mov
out
and
pop
push
inc
lcall
cs
cmc
mov
jnp
out
ret
fists
sbb
repz
je
inc
fnstsw
pop
adc
outsb
fwait
es
xor
iret
aaa
xchg
adc
daa
push
mov
into
sub
aaa
out
sub
sbb
fmuls
mov
lcall
xor
add
cli
mov
rorb
leave
dec
push
xchg
xchg
imul
pop
icebp
dec
repz
inc
pop
xor
add
jl
mov
adc
incl
fcoms
push
int
shl
aam
mov
jl
jl
and
ss
ljmp
fisttpl
pop
cwtl
notb
mov
xchg
push
add
cmpsb
mov
out
jl
and
jmp
lock
jmp
pop
sbb
mov
sub
push
scas
fs
inc
sub
add
mov
adc
mov
dec
cmp
clc
push
sub
sti
in
dec
mov
movsl
dec
das
insl
xchg
or
jg
mov
imul
cmc
shl
add
xchg
pop
mov
sub
mov
mov
pushl
rcr
gs
dec
lret
clc
and
jle
fisttpll
cmc
sti
mov
cmp
xchg
je
into
mov
mov
cli
test
fs
ja
push
loopne
movsl
rcll
xor
incl
lock
pop
lcall
jae
mov
inc
rolb
loop
and
cs
mov
out
push
data16
frstor
mov
cld
js
inc
and
sub
cwtl
cmpsl
je
in
jb
push
cmp
hlt
sete
inc
mov
loop
incl
aad
xlat
pop
sub
xor
jo
sub
xlat
xor
and
lcall
out
fdiv
stos
stos
scas
mov
bound
hlt
push
jnp
adc
popf
mov
pushl
mov
cld
enter
dec
dec
mov
add
fcmovne
je
decl
inc
cmp
mov
add
pop
mov
inc
jge
notb
mov
into
pop
mov
jno
inc
cmp
mov
cmp
cmp
mov
incl
cld
das
xor
xlat
push
and
mov
inc
loope
xchg
lods
cwtl
pop
lods
int
xor
jg
in
push
ljmp
inc
orl
in
jmp
sub
xor
test
fwait
fwait
jp
out
jo
scas
into
incl
call
or
scas
sub
mov
scas
push
aam
in
cli
mov
stc
mov
inc
and
push
lret
and
test
inc
lock
mov
lcall
aad
or
jmp
sub
adc
bound
arpl
loope
xchg
add
rorb
xchg
jne
sbb
inc
clc
pop
adc
mov
ret
pop
sahf
inc
pop
mov
incl
xor
sbb
push
cmp
mov
cs
push
dec
xor
dec
das
cli
incl
xor
xchg
pop
xor
push
mov
stc
adc
cmc
std
ljmp
dec
jle
mov
pushw
and
pop
or
sub
je
mov
lcall
je
filds
push
icebp
std
es
and
in
cmpsl
push
add
ret
jns
sub
pusha
xlat
imul
ljmp
xor
aad
and
lahf
shrb
inc
push
stos
jb
adc
out
scas
call
fildl
lret
xor
jp
in
idiv
outsb
or
sub
xchg
xchg
push
fmul
push
inc
adc
push
movsl
mul
jecxz
adc
jmp
sahf
inc
nop
cmp
enter
jbe
sbb
xor
aam
mov
sub
xor
out
sar
lcall
movsl
scas
mov
xchg
inc
popf
dec
lret
lea
push
lods
mov
ljmp
outsb
cwtl
add
jl
mov
pop
add
int
cltd
push
xchg
jbe
sbb
cmpsb
xor
inc
inc
scas
stos
out
decl
inc
push
repnz
imul
push
mov
sarb
mov
and
aad
inc
xchg
mov
in
in
jo
dec
pop
push
sar
jg
cmp
js
sahf
adc
and
jns
enter
int3
mov
dec
stos
cmp
lcall
or
cmc
aas
lock
fldenv
mov
mov
inc
sub
loop
and
push
incl
cwtl
popa
lock
push
inc
shll
sbb
sbb
mov
jge
call
ja
sahf
xchg
or
or
sbb
cs
filds
pushf
xchg
xchg
call
sti
outsl
add
es
aaa
cmp
leave
in
jmp
xchg
data16
loopne
push
sub
inc
cmp
scas
hlt
inc
xchg
dec
inc
jp
inc
jmp
sub
add
imul
aaa
push
dec
imul
lcall
pop
add
das
clc
jp
es
frstor
in
mov
xor
xchg
incl
mov
add
add
pop
mov
pop
push
lcall
dec
adcl
or
and
sbb
jbe
or
aad
lcall
cli
dec
cmpsl
scas
push
pushf
mov
mov
xchg
mov
pop
out
in
add
sbb
getsec
push
push
std
js
loop
mov
roll
mov
dec
mov
jg
sbb
mov
aaa
adc
stos
lret
push
ss
and
jp
shll
xlat
add
nop
pop
mov
cmpsl
inc
adc
bound
and
inc
mov
push
imulb
jno
push
pusha
and
xchg
sbb
jo
int
and
sub
fsubrs
dec
cld
mov
adc
rol
mov
ret
xchg
cs
ret
sbb
cmp
aaa
aas
and
sarl
or
in
jb
sbb
mov
cmpsl
add
xchg
and
dec
push
fistl
jo
cltd
xchg
jmp
mov
xchg
dec
jae
jo
add
sbb
ds
pop
or
jno
call
loopne
fs
sbb
cli
add
scas
push
fisubs
sbb
adc
sub
mov
repz
insl
jns
fstps
xchg
and
loop
call
idiv
imul
call
adc
or
dec
stos
mov
mov
xchg
add
mov
mov
call
fstps
mov
or
leave
out
and
jp
fdivrl
inc
inc
test
movsl
mov
movb
call
lret
push
mov
je
jle
jb
mov
test
in
cmpsb
mov
cli
cmp
hlt
ljmp
adc
mov
and
int3
cmp
cmp
or
incb
faddl
int3
jle
sbb
mov
ss
xor
incl
mov
inc
sti
subb
pushf
mov
sub
jg
cmpsl
mov
pop
pop
into
dec
sbb
aam
into
xchg
sti
inc
mov
lcall
mov
xchg
sti
movsl
cmp
lret
adc
pop
clts
dec
jg
mov
inc
mov
sub
pusha
sub
xor
mov
push
dec
test
call
mov
lds
in
aas
das
push
mov
push
pop
loopne
lret
popf
pushf
cmpb
push
std
lock
push
jecxz
cmc
testb
or
pusha
or
aad
sub
cmp
xor
gs
inc
repnz
std
pop
rorb
mov
cmpsb
imul
icebp
push
lret
adc
mov
or
add
pop
movsl
into
scas
jecxz
xchg
insb
pop
cmp
pop
jns
ret
lds
popl
pop
push
cmpsb
sbb
jmp
and
inc
jo
push
sub
mov
mov
jb
lcall
sub
inc
mov
mov
fadd
jecxz
push
aaa
call
mov
sub
mov
adc
nop
mov
repz
das
push
add
call
out
and
test
mov
rorb
push
cld
incl
or
notb
push
jbe
or
mov
jb
pushl
or
popa
mov
or
fs
repz
xchg
daa
adc
outsb
mov
mov
xchg
dec
xchg
jp
xchg
or
mov
mov
mov
xchg
jg
adc
lcall
incl
push
nop
aaa
adc
out
gs
add
dec
mov
jns
lret
jmp
dec
adc
sub
imul
aas
std
sti
dec
mov
push
mov
clc
stos
mov
or
push
clc
shll
sub
sbb
xchg
test
insb
movsl
adc
mov
add
jmp
in
push
shlb
lea
outsl
push
cltd
pop
out
ret
nop
daa
push
or
mov
ljmp
push
push
adc
gs
imul
mov
pop
jbe
jmp
push
jle
inc
add
sub
lods
insb
test
lret
mov
cmp
call
ficoms
loop
xlat
sbb
test
int
out
inc
push
pop
hlt
jbe
fimuls
js
sbb
popa
pushf
imul
fsubrl
push
jl,pt
andl
or
movsl
fcompl
push
jecxz
incl
adc
repnz
cmp
imull
mov
inc
and
leave
incl
aam
or
mov
mov
out
test
sti
pop
stos
and
ja
mov
incl
bnd
in
inc
nop
dec
mov
fldl
jnp
jbe
pop
pop
cli
or
cmp
dec
negl
jmp
daa
sub
popf
cmp
sbb
fistpll
sbb
cmp
xor
pop
insl
inc
imul
lcall
es
out
sbb
xchg
loopne
mov
ljmp
jmp
xchg
rcll
les
lret
sysexit
jle
xor
xlat
cmp
add
ret
and
jle
or
mov
and
sbb
call
std
dec
out
loopne
subl
push
or
xor
or
es
xor
mov
lock
inc
in
jno
fwait
icebp
jmp
shll
fwait
or
lods
mov
jmp
fidivl
data16
mov
scas
sbb
mov
fisttps
sub
loop
push
ljmp
insb
out
inc
testb
pop
pop
xchg
xchg
sub
sbb
pop
sbb
cltd
push
mov
call
loop
mov
mov
rcr
sub
inc
pop
ss
inc
push
cmp
fcmovb
cmp
and
jb
mov
je
iret
test
adcb
adc
loope
aad
test
cmc
in
mov
pop
cmc
call
pop
inc
in
push
sbb
jp
cmp
out
mov
fistps
inc
ud0
decl
sub
leave
lret
sahf
and
aas
vpaddw
enter
pop
rol
mov
fsub
inc
and
sub
add
jmp
insl
popf
or
scas
inc
sarl
stos
xorb
sarb
cmp
and
loop
pop
sbb
or
mov
call
pusha
push
out
jbe
and
aam
jb
mov
xchg
jmp
lods
int
inc
out
sub
pop
loop
fcmovnu
sbb
mov
movsl
sbb
insb
aad
addb
inc
and
cmp
pop
fisubrs
sbb
cli
mov
jmp
aam
sbb
and
pop
xor
mov
shlb
enter
and
xchg
mov
in
leave
ret
jg
test
mov
pop
jno
cmp
outsb
subl
fimuls
decl
test
dec
std
mov
mov
dec
add
mov
fimull
push
mov
cli
clc
sbb
lea
xor
loopne
int3
adc
and
leave
cmp
into
push
mov
dec
jl
mov
xchg
and
imul
pusha
outsb
test
mov
test
lcall
xchg
mov
mov
sub
inc
mov
sbb
dec
jg
cmp
cwtl
pop
daa
xor
inc
inc
inc
jmp
cmpsb
fidivrl
scas
cmp
cli
in
xor
mov
sbb
push
jmp
sub
outsl
cli
jmp
add
clc
iret
add
pop
xor
call
pop
into
push
cmp
inc
sub
mov
rolb
inc
sub
outsl
add
test
in
rolb
aaa
movsl
xchg
dec
ret
adc
and
dec
jle
ds
xor
mov
inc
add
incl
lea
int3
hlt
imul
pop
mov
scas
dec
jl
shl
pop
movsb
fnstenv
xor
call
add
frstor
aam
roll
and
mov
sbb
cmpsb
jge
aaa
outsb
mov
cmpsl
mov
decl
or
jns
out
repnz
lahf
enter
lcall
xchg
mov
inc
inc
xchg
push
adc
outsl
mov
adc
fdivs
xor
push
and
lcall
inc
mov
bnd
add
lahf
rclb
je
repz
push
fcmove
push
std
js
xchg
sar
jmp
icebp
sub
negb
jo
sbb
loopne
sub
push
jmp
movsl
push
out
mov
and
ljmp
outsb
sbb
sub
call
in
and
filds
das
cmpsl
cmp
scas
mov
into
lret
nop
cmp
jmp
xchg
mov
add
stos
out
mov
insb
or
pop
lahf
xorl
inc
dec
cmp
jecxz
adc
les
cmp
adc
xor
cmc
icebp
ljmp
sbb
dec
das
stc
dec
out
sbb
cmpl
pop
inc
pop
add
mov
lcall
cli
xor
daa
pusha
xor
and
stc
jge
mov
ja
lea
lahf
test
das
pushf
or
mov
mov
popa
sbb
hlt
es
jnp,pn
call
jmp
push
sub
inc
inc
push
cmpsb
aas
mov
xchg
jg
aaa
clc
ljmp
int3
stc
xor
call
daa
push
sahf
mov
mov
xchg
adc
jne
ljmp
outsb
and
cmpsb
loope
outsl
mov
data16
and
jnp
je
xchg
cmp
mov
sbb
inc
and
subb
sub
clc
jle
xchg
add
cld
mov
dec
insl
dec
or
xor
std
jl
lds
xchg
cmp
movb
dec
fcompl
cmp
ljmp
repnz
loope
xchg
sbb
pop
push
dec
orl
push
pop
mov
jne
jp
repnz
add
or
decl
push
and
mov
jle
mov
fwait
subl
mov
xchg
pop
fisubs
jl
decl
mov
mov
scas
loopne
cmp
int
call
std
movsb
jae
lcall
xchg
cmpsb
xor
shrb
lret
in
mov
lcall
push
test
xchg
pop
sbb
xor
mov
mov
inc
shrb
hlt
jg
aam
pop
pop
sub
xchg
lds
fcomip
fsubl
mov
adc
xchg
push
jg
inc
scas
mov
cwtl
dec
pop
mov
add
xchg
insl
cwtl
fmulp
lret
sar
loop
jns
cwtl
or
mov
or
xchg
inc
ret
ja
out
push
pushl
mov
or
or
xchg
mov
mov
daa
adc
push
cmp
daa
int
jo
mov
ret
test
push
dec
lock
lock
cltd
and
ljmp
cli
pop
scas
dec
sarb
fldcw
sbb
cmp
test
gs
andb
js
jae
jl
lcall
xchg
mov
iret
add
inc
scas
push
sub
nop
aam
jl
jl
jno
mov
decl
cmp
mov
lcall
sub
xor
popf
pop
das
idiv
adc
pop
out
clc
mov
add
push
sarb
lds
int3
stc
jno
call
popaw
aam
nop
sbb
mov
fnstcw
jle
pop
sbb
jge
jne
add
decl
xor
xor
repnz
cmpsl
mov
jb
das
cmp
dec
pop
cmp
sub
call
mov
fildll
xchg
aad
dec
xchg
and
out
add
cmpsb
xchg
pop
pushl
lret
mov
or
mov
mov
fildl
insl
scas
pop
out
mov
jg
inc
gs
into
sub
lods
sub
popf
scas
nop
pop
adc
jge
or
pushl
ret
popf
mov
shll
leave
dec
xchg
in
mov
xor
insb
xchg
aaa
or
push
and
ljmp
jns
xchg
jecxz
sbb
push
cmp
movntq
lahf
rcrb
inc
jbe
or
jb
or
xchg
leave
outsb
inc
mov
dec
jno
xor
push
std
and
lret
add
insb
lock
scas
paddsw
jg
jg
daa
sub
enter
das
popf
or
mov
xchg
sbb
pop
inc
ljmp
sub
lret
dec
cmpsb
push
and
insb
mov
mov
lcall
fmul
stos
push
push
std
pop
in
imul
jb
cltd
mov
aam
mov
mov
xlat
jb
jne
call
in
outsb
adc
out
pop
adc
and
and
jge
push
clc
ljmp
push
fs
and
ret
scas
adc
mov
call
fisttpll
ljmp
imulb
jb
dec
xchg
loopne
out
pop
pop
lock
fwait
popw
push
cli
fistps
out
pushf
stos
stos
push
or
mov
pushl
add
xor
dec
mov
pop
iret
pop
dec
xchg
popa
sbbb
insb
je
data16
adc
mov
xchg
daa
add
pop
adc
je
mov
mul
push
lock
and
push
xor
ret
das
lret
iret
mov
mov
xchg
daa
and
lods
xchg
sbb
or
adc
and
incl
cmp
sub
push
les
incl
inc
mov
cmp
pushf
or
push
das
sub
cmpsb
std
xor
add
and
fs
sub
ret
test
lcall
and
notb
gs
dec
popa
clc
jge
shlb
dec
inc
fbld
mov
cmp
pop
cmp
push
shll
or
call
daa
lds
xchg
sarb
sub
xlat
cmp
popf
dec
ficoml
pushl
rorb
cmpsb
inc
cmpl
adc
xchg
sbb
push
adc
pop
dec
xor
jbe
sub
lcall
push
mov
clc
add
loop
sub
pop
lret
mov
stos
mov
mov
push
and
pop
cwtl
xlat
mov
lret
sbb
jnp
jae
xchg
sub
jg
jno
mov
cmpsl
cmp
jae
sbb
int3
inc
push
shrb
lea
mov
jge
adc
xchg
sub
pushl
pop
inc
outsb
scas
faddl
shlb
pop
addr16
daa
inc
fmulp
ucomiss
sbb
push
cmp
adc
pop
or
outsl
mov
fsubrs
repz
test
test
dec
push
or
enter
xchg
or
aaa
jmp
mov
sets
fistps
cli
decl
xor
or
pop
lret
push
sahf
repnz
and
int
std
cmpsb
mov
movsl
push
int
aaa
sub
pushl
mov
mov
inc
push
pop
mov
jle
xor
mov
add
daa
adc
punpckhwd
orl
and
pop
imul
jmp
stc
out
les
sarb
fbld
mov
into
inc
push
inc
sbb
pushl
jge
iret
push
push
rorb
fcoms
loopne
dec
mov
inc
in
cld
pop
pusha
or
shll
pop
adc
pushf
adcb
add
add
sbb
lahf
test
subb
js
lock
dec
mov
out
jo
pop
cli
in
mov
xchg
jg
push
mov
jmp
mov
sbb
std
push
aas
js
dec
loop
mov
adc
inc
cmp
cmp
adc
jmp
outsb
lds
push
mov
adc
mov
repnz
fs
and
clc
das
or
ljmp
push
xor
mov
lret
jg
lret
sarb
mov
int3
xchg
arpl
pop
xchg
xchg
push
pop
ljmp
xor
cmp
into
cmc
inc
lock
jmp
and
add
inc
outsl
stos
mov
push
mov
or
sbb
jb
cs
jge
add
inc
imul
add
cwtl
cmp
jle
loop
mov
insl
push
data16
push
cmp
push
repnz
mov
dec
cmp
aaa
jae
imul
mov
ljmp
mov
sub
jg
push
popa
sbb
push
xor
xor
mov
sub
inc
inc
ljmp
inc
adc
jecxz
mov
movsb
hlt
lea
lret
pop
es
jbe
incl
stos
add
mov
mov
dec
push
inc
mov
sub
adc
sub
push
add
test
jae
sub
sahf
je
add
gs
stc
inc
popf
out
xor
sbb
push
repz
xchg
dec
add
sub
leave
aaa
ds
mov
ja
out
pop
jl
sbb
jge
movsb
mov
js
out
bound
adc
mov
xchg
xchg
jecxz
adc
je
push
repnz
push
push
sarl
inc
test
jp
subl
ds
mov
xchg
lret
aam
incl
push
icebp
xchg
dec
shrb
shlb
lcall
pop
dec
hlt
out
lcall
inc
cmp
jae
ja
pop
loop
sarb
test
loop
mov
push
movsb
push
mov
add
fwait
adc
inc
mov
cmp
push
adc
mov
incl
mov
add
scas
mov
lods
sub
and
push
sub
pop
sbb
imul
incl
xchg
aas
lahf
arpl
add
sahf
lock
test
cmp
adc
ljmp
sbb
cmpsl
fmull
jge
lahf
push
push
xor
and
out
arpl
jg
or
sahf
inc
aaa
int
popa
xchg
out
adc
ret
mov
pushf
cs
jb
pushl
adc
scas
bound
popf
stc
dec
incl
ss
jg
add
inc
pop
xchg
out
ljmp
int
mov
xor
add
pop
push
aam
les
test
cmpsb
push
xor
aas
jg
hlt
adc
jnp
stos
dec
pusha
pop
rol
and
xor
out
fcomps
jl
aad
iret
js
or
sbb
fsubrs
adc
jnp
sarb
decl
jp
rcll
mov
xchg
int3
xor
fstp
in
xchg
mov
xchg
add
lahf
cmp
ljmp
or
pop
daa
xchg
push
mov
cmp
adc
pop
test
stos
cmp
leave
ret
outsb
dec
cmp
pushl
mov
mov
out
push
int
push
add
sbb
lcall
inc
cmpsl
iret
pop
ret
xchg
cmpsb
cs
imul
add
mov
cltd
loop
inc
cmpsl
fisttpll
or
mov
dec
in
or
push
or
lea
push
ss
or
jg
xchg
lds
adc
incb
pop
push
shll
in
push
ljmp
mov
adc
xchg
push
push
or
sub
sbb
jno
add
mov
stos
aas
cmp
push
push
das
clc
dec
xchg
ret
sub
or
mov
push
aas
dec
dec
mov
call
adc
adc
mov
int3
fmull
lock
dec
aad
cli
decl
in
ficomps
push
inc
inc
cmp
mov
inc
adc
lret
movsl
mov
inc
mov
jbe
rclb
out
adc
jg
xor
ret
outsb
mov
or
outsl
cmpsb
lock
int3
test
pop
or
incl
sbb
xor
cmp
adcb
adc
es
adc
lcall
ds
pop
add
popf
sub
mov
add
pop
cmp
mov
pop
ret
inc
out
fdivrl
push
mov
xchg
aaa
sarb
dec
inc
dec
xor
iret
movsl
jl
into
jg
scas
repnz
jmp
in
test
movsl
cli
mov
stos
pop
das
js
pop
jo
xor
les
cmp
mov
jns
aaa
sbb
stos
mov
dec
pop
mov
test
imul
test
mov
jp
lcall
xor
inc
cmpsl
nop
dec
cltd
std
out
test
stos
sub
jmp
stos
insl
cmp
pop
cmp
stos
clc
int3
adcb
jg
mov
and
in
cld
out
rclb
pop
ss
lcall
ljmp
cld
pop
sbb
ds
pop
cmc
inc
mov
mov
mov
pop
popa
shr
pop
xor
xlat
push
jns,pn
xchg
out
adc
call
int
cmpb
fdivrs
ja
jg
sbb
xlat
pop
add
adc
fistl
and
test
jg
lahf
sbb
in
mov
ss
and
das
sbb
gs
ret
xchg
fmull
mov
cli
dec
fildl
pushl
or
daa
fwait
gs
lods
nop
mov
jns
out
ja
pusha
push
hlt
decl
or
push
push
or
mov
push
pop
shll
or
mov
movsb
lcall
lahf
pushf
pop
shll
xchg
mov
jne
daa
push
incl
repz
pop
inc
ret
shrb
ljmp
xor
mov
adc
clc
shl
das
mov
mov
lea
xor
fistpll
push
mov
add
cld
or
in
enter
or
data16
push
incl
sar
lahf
mov
in
data16
popa
xor
pop
aaa
jl
ljmp
and
and
cmpsb
mov
fimuls
ss
sub
stc
add
pop
sub
lods
adc
or
popf
mov
inc
divl
push
loope
mov
ljmp
cld
add
int3
xor
xchg
ljmp
ljmp
push
lret
sbb
notb
arpl
sbb
decl
mov
mov
imulb
jg
add
call
fadd
sub
fwait
std
call
jmp
leave
aam
cmp
ljmp
fxtract
popf
gs
cmp
incl
cmp
mov
lods
xor
lcall
fistl
push
aam
push
aaa
sbb
test
lcall
stos
and
out
add
jg
lods
mov
adcb
rolb
dec
xchg
jl
mov
in
pop
movsb
xchg
pop
frstor
push
xor
scas
mov
scas
fistl
call
cmp
mov
xchg
dec
inc
imul
lahf
test
decl
inc
cmp
mov
push
dec
jb
cmp
xor
inc
in
lea
jp
enter
loopne
jae
xor
xchg
out
pop
pop
inc
dec
stos
or
push
xchg
mov
mov
incl
ljmp
sbb
mov
ret
iret
mov
std
and
ret
and
push
and
lock
xchg
push
aas
scas
ficoms
push
mov
fucomi
mov
or
dec
dec
testb
cli
pop
xchg
movl
mov
sbb
enter
jno
cmp
pop
or
mov
incl
dec
lock
adc
shrl
aad
inc
mov
mov
leave
mov
mov
add
out
sahf
repz
lret
mov
loope
out
pushf
adc
imul
xchg
call
mov
mov
testl
sti
movsl
xchg
sbb
xor
mov
add
mov
mov
repnz
jp
movq
cmp
pop
mov
xor
mov
push
arpl
mov
xchg
movsb
xchg
and
jg
push
mov
insb
dec
fsubl
and
fs
popa
and
fs
push
je
decl
cmpsb
clc
fsubr
add
push
aas
data16
cmpsl
daa
cmp
mov
aas
outsl
decl
mov
insl
push
mov
jge
push
pop
ja
cmp
dec
pop
orl
clc
ds
fucomi
clc
jl
dec
aam
fmull
cmp
pop
mov
or
add
loopne
add
add
inc
push
mov
jmp
jb
popf
push
frstor
lcall
jecxz
sbb
call
js
push
les
mov
les
add
lcall
xor
sbb
xor
xlat
pop
clc
cltd
addl
and
jmp
dec
mov
outsb
sbb
push
push
xor
add
sub
and
xchg
push
aaa
add
mov
pop
repnz
and
roll
lahf
pop
in
mov
stc
mov
mov
jg
sub
lock
test
push
test
insb
sbb
jmp
lea
mov
mov
sarb
cli
subb
sbb
fcmovnbe
gs
pop
and
jmp
cmpsl
aaa
jo
jo
sbb
pushl
call
xchg
into
xrelease
repz
mov
push
or
jecxz
xor
xchg
decl
fwait
inc
inc
leave
test
scas
stos
nop
cltd
inc
vpmovzxbq
ret
xor
sbb
jmp
aam
sbb
jg
movsb
shl
cmc
mov
adc
xor
scas
or
arpl
add
pop
adc
adc
pop
std
clc
insb
scas
xchg
dec
sarb
out
inc
and
ja
mov
jne
jmp
or
sub
sub
add
push
mov
ljmp
bound
xlat
mov
sbb
aam
push
imul
fstpl
orb
out
ret
cld
push
jle
sub
mov
hlt
mov
pop
mov
loopne
mov
stos
mov
popf
fstl
add
sbb
jne
fwait
jge
fisubrl
pusha
jge
push
push
dec
jo
mov
jg
mov
push
dec
sub
inc
sbb
push
or
call
test
rol
insb
fcmovu
jb
dec
imul
out
jg
pop
aaa
fs
lret
mov
pop
rol
jo
dec
push
or
cmp
cmp
jnp
xlat
outsb
xchg
hlt
push
sub
movsl
xor
mov
xor
fbstp
insb
ds
inc
xor
test
ljmp
out
aas
pop
fmulp
stc
cltd
repz
mov
mov
loope
push
inc
jns
cwtl
mov
pop
inc
and
push
repz
aad
and
mov
jl
lods
xlat
gs
imul
pop
jb
sbb
and
scas
jg
call
push
pop
mull
jle
inc
push
dec
fcompl
xchg
aaa
pop
loop
cmpsb
test
sub
jle
lcall
incl
imul
in
cmp
out
cmp
pop
pusha
sub
lcall
ret
mov
out
mov
sahf
lret
add
xchg
lret
mov
mov
decl
mov
dec
lret
pop
ret
sti
xchg
sub
and
jns
add
jmp
pop
inc
jmp
fadds
rdtsc
dec
hlt
test
inc
adc
inc
push
je
cmpsl
cmp
adc
movsl
pusha
mov
mov
push
sahf
lock
push
loope
nop
shrl
pop
dec
jmp
les
xor
jnp
test
sbbb
out
xchg
daa
into
push
stc
stc
push
mov
sbb
ja
int
ja
ror
test
push
and
pop
jno
pushl
gs
rcrl
insb
dec
fwait
xchg
pop
leave
fwait
ljmp
xchg
mov
cmp
gs
pushf
sub
push
scas
jge
fs
jle
sbb
adc
xchg
fisubl
pop
jno
hlt
stos
icebp
repz
add
sbb
push
fcomi
mov
lock
inc
or
call
sti
mov
int3
jo
stc
inc
cmp
push
push
mov
pop
rol
mov
sbb
lcall
in
push
int
test
lds
std
incl
fisubs
out
xor
push
push
aas
ret
and
xchg
xchg
incl
push
pop
sbb
inc
jg
mov
js
mov
push
adc
fstl
in
test
sub
push
decl
ljmp
aas
add
jmp
inc
push
std
sahf
mov
loopne
mov
adc
pop
imul
xlat
adc
fldt
std
dec
aad
push
in
cmp
call
lret
sub
mov
and
adc
dec
sbb
call
ret
sub
fwait
xor
and
aad
mov
in
sbb
cs
lcall
jo
dec
fs
call
rcl
push
les
lret
mov
out
sbb
mov
incl
insl
sbb
shrl
subl
jecxz
cmpsb
mov
sar
mov
iret
cltd
add
mov
add
inc
xor
mov
push
mov
call
cmc
test
mov
inc
outsb
xor
je
arpl
add
outsl
sti
dec
cltd
cli
rolb
in
pop
pop
lea
fcompl
in
xchg
iret
pop
mov
xlat
imul
int3
pop
jns
idivb
lcall
xchg
cmp
cltd
dec
aad
xchg
imul
daa
sbbb
call
push
ja
jbe
jmp
lret
jp
adc
add
popa
push
jle
mov
into
mov
decl
pop
fcomip
mov
inc
iret
dec
loopne
mov
addb
insl
jge
pop
leave
aas
jmp
lret
pop
lock
call
jl
test
cmpsb
push
dec
or
call
data16
cmp
or
push
jbe
cmp
mov
mov
sar
call
in
fnsave
ja
int
pop
repnz
dec
fcmovu
dec
addr16
adc
jne
jne
fcomip
jmp
xor
xchg
pop
nop
dec
and
cmp
push
push
ret
int3
cmpsb
enter
fcompl
loop
int3
inc
mov
les
rorb
sahf
mov
and
jmp
dec
into
fldcw
movsl
ja
popa
enter
mov
aad
jb
rcll
das
outsl
pop
cmc
jmp
push
out
stos
test
mov
dec
pop
test
adc
adc
ret
movsb
push
dec
daa
ss
gs
sbb
jb
mov
subb
test
sbb
inc
insb
mov
mov
cmp
lods
in
icebp
add
pop
loopne
call
sub
xor
iret
sahf
or
dec
mov
clc
addr16
mov
hlt
xor
fs
cltd
jo
push
jae
sbb
jg
jae
mov
incl
jg
mov
mov
push
sub
imul
mov
push
xor
outsl
mov
push
lret
js
idiv
xlat
mov
add
fs
incl
out
or
pop
outsl
popf
mov
sahf
or
ja
dec
aam
das
jae
and
fisttpll
jmp
push
cmp
je
lcall
mov
fwait
mov
pushf
pop
push
imul
jmp
sbb
pop
in
scas
pop
ret
mov
adc
mov
arpl
xor
loopne
incl
jecxz
cltd
test
stc
sub
das
xchg
outsb
push
cmp
xchg
pop
cmp
sub
ljmp
clc
push
push
dec
adc
lret
add
scas
aaa
inc
push
inc
cmp
jg
fmull
ja
imul
test
popf
mov
sub
jnp
jl
cmp
xchg
adc
stc
pop
xchg
scas
pop
movsb
sub
fists
add
sar
filds
ret
jno
adc
mov
imul
in
arpl
pushf
in
call
idivb
fdivr
ljmp
enter
add
add
pop
loop
imulb
int
mov
jmp
sbb
scas
xchg
call
jg
mov
fidivs
jnp
jbe
clc
ljmp
cli
jmp
pop
test
stc
out
jmp
adc
inc
mov
xor
pushl
mov
test
std
dec
sub
xchg
push
aas
movsl
addb
scas
add
lcall
pop
subb
and
cmp
mov
out
pusha
lds
ljmp
xor
add
adc
inc
adc
mov
fadd
fldl
inc
sbb
popa
std
incl
fucomip
aaa
js
pop
xor
scas
xor
inc
clc
dec
jb
dec
repz
aaa
cld
xor
and
mov
sti
add
gs
std
cmp
mov
sti
cmc
dec
dec
xchg
call
call
popf
lods
mov
fs
xchg
lcall
lcall
fldt
push
rcrl
jecxz
xchg
mov
lods
roll
and
lcall
outsb
or
imul
out
mov
ret
push
sarb
push
cmp
notb
ljmp
adc
pushf
cmp
fwait
cmpsl
pusha
mov
xor
xchg
popa
pop
mov
addr16
in
jg
and
xchg
xchg
shll
data16
pushl
lds
xchg
ljmp
or
mov
pop
push
push
out
repz
call
jl
lret
ret
loope
fisttps
sub
jl
and
repnz
icebp
and
dec
ja
mov
dec
hlt
iret
mov
rorl
pop
sbb
mov
cltd
lahf
push
dec
inc
sbb
lcall
xchg
enter
test
imul
scas
std
pop
mov
xchg
jmp
insl
and
dec
pop
sti
out
jp
gs
push
cmp
fisubrs
incl
in
xcrypt-cbc
cmpsl
push
hlt
jbe
mov
xor
test
fcoml
sub
or
insb
dec
add
fstpl
int
loopne
loope
mov
sub
es
stos
inc
fs
inc
inc
jae
imul
adc
dec
decl
pop
jle
cs
mov
mov
push
inc
call
ret
pushf
cmp
hlt
jne
fdivl
jo
cmc
mov
mov
loop
cmp
lcall
sub
pop
cld
arpl
push
js
add
aaa
repz
ss
out
jle
pushf
dec
in
push
cmc
sub
clc
lret
loopne
push
sub
mov
jo
add
dec
push
cmp
or
out
arpl
das
cli
inc
movsl
into
sub
sbb
jecxz
lock
pop
mov
pop
cmpsl
pop
js
adc
xlat
jg
cmc
loope
inc
sub
repnz
ret
fidivrl
jae
popf
mov
into
jecxz
jmp
inc
leave
mov
ja
add
mov
adc
pop
leave
and
aam
mov
xor
push
shrl
sub
pop
test
pop
daa
push
int
sti
adc
cld
jmp
jge
and
int
cmp
add
mov
mov
das
cli
insb
sub
xchg
loopne
ret
jecxz
repnz
lock
adc
and
dec
ljmp
dec
or
in
pop
aas
dec
sub
cltd
inc
push
mov
dec
adc
and
sti
scas
mov
jnp
dec
rorl
subl
in
jmp
mov
cmp
push
mov
inc
loopne
pop
dec
jle
daa
mov
inc
aam
sub
sarb
loop
jo
lods
adc
sti
lock
ljmp
clc
add
sbbb
lock
movsb
insl
pop
shlb
adc
jae
pop
or
jbe
shll
lahf
pop
clc
jecxz
stos
push
pusha
pusha
orl
add
add
fcomp
push
push
dec
cmp
fbld
jae
mov
js
push
mov
inc
std
xchg
mov
daa
sbb
and
ficomps
daa
fstpl
call
jnp
decl
neg
jns
int
adc
mov
dec
mov
test
adc
dec
pushl
mov
je
jge
jl
adc
in
out
je
xchg
insb
mov
in
push
mov
sar
call
push
adc
movsb
push
mov
xor
and
in
hlt
insb
jmp
push
pop
addr16
lcall
addr16
inc
adc
fimull
out
mov
adc
js
and
sub
cmp
lcall
add
adcb
clc
aas
sti
mov
jns
adc
fiadds
mov
mov
xlat
jecxz
clc
inc
xor
pushl
cld
cmp
clc
clc
cltd
je
rorb
gs
outsl
mov
cmp
mov
incl
xchg
lock
xor
dec
add
sarb
or
in
sbb
pusha
dec
add
adc
repnz
pop
outsl
ljmp
cmp
and
or
xor
push
jg
cmp
lcall
mov
leave
out
cli
decl
jl
or
into
sbb
xor
mov
mov
leave
arpl
cmpsb
scas
lcall
sub
cwtl
sbbb
sub
pushf
imul
dec
jl
inc
mov
push
call
adc
rcrb
adc
and
sbb
std
test
das
clc
jmp
rclb
int
push
aam
nop
nop
aas
frstor
aaa
pop
xchg
daa
sar
push
xchg
les
repz
jmp
adc
dec
das
pop
mov
bsf
lcall
sahf
pop
stc
mov
push
xorl
ret
jge
jne
dec
out
nop
and
incb
int
sarw
sbb
pusha
sahf
jnp
push
or
lods
jmp
pop
imul
fwait
out
mov
imul
dec
jnp
cwtl
jp
xchg
and
cmp
sbb
fimull
aam
pop
dec
add
aad
xchg
xchg
sub
pop
mov
dec
daa
cltd
jg
pop
sub
sbb
movsb
imul
jns
in
push
dec
pop
cmpsl
mov
adc
pop
jecxz
mov
in
icebp
cs
and
push
inc
xor
push
decl
sbb
jmp
sarb
outsl
popf
orl
ljmp
scas
inc
sbb
es
out
push
movsl
mov
xchg
cmp
jb
cmp
lods
or
cld
ljmp
popa
call
mov
daa
in
pop
test
inc
cmp
dec
xor
inc
or
rclb
xor
arpl
lcall
incl
add
negl
fcomps
push
dec
ficomps
cmp
movsb
lock
mov
call
cli
xlat
sbb
cmp
stos
inc
jecxz
icebp
dec
inc
xor
gs
add
leave
call
mov
test
pop
aas
add
mov
xchg
push
lds
shlb
clc
movsl
mov
adc
ljmp
ljmp
nop
data16
test
adc
jle
pushf
xor
mov
pop
fcomip
in
clc
and
jbe
push
repz
cmp
mov
pop
test
std
mov
pushl
pop
subl
cmp
pop
and
xchg
mov
ret
pop
push
sbb
cmp
stc
cltd
lret
loope
imul
negl
adc
jge
dec
sbb
lcall
xchg
arpl
cmpsl
mov
data16
and
movsb
mov
imul
push
cld
and
push
xchg
test
adc
mov
mov
dec
out
stc
jmp
jno
push
dec
repnz
and
jno
jle
sub
inc
sahf
inc
lahf
xlat
scas
mov
loop
stos
incb
fisubl
inc
jbe
add
cltd
add
mov
add
cmp
xchg
push
cmp
js
frstor
dec
std
mov
lret
add
jle
push
sbb
jb
int
sub
shrb
test
call
mov
inc
shrl
mov
add
rcrl
mov
jo
mov
pop
cmpsb
pushl
call
adc
and
xor
push
xchg
ficomps
out
aaa
cmp
decl
out
adc
in
xchg
dec
fcmovnb
push
xchg
je
fs
jge
fistpl
mov
incl
int
movnti
xor
sub
xlat
sub
push
jle
jl
cmc
push
lret
ljmp
outsb
xchg
pop
arpl
fs
fistpll
mov
adc
jae
loope
pop
cmp
mov
mov
push
repz
mov
jo
sub
cmp
aam
rcll
mov
and
and
sbb
pushf
in
dec
pop
sbb
lods
mov
or
dec
push
or
jg
mov
mov
insl
aaa
or
addl
xorb
decl
mov
imul
push
dec
xorb
sub
mov
jo
int
test
pop
jnp
inc
or
lea
and
out
subl
mov
sbb
jne
ja
xchg
sbb
inc
test
jg
in
fld
dec
mov
fsubr
rorb
mov
mov
push
jnp
jge
leave
into
sub
xchg
sti
inc
sbb
shlb
xchg
xlat
sahf
std
in
or
mov
dec
mov
test
jmp
jb
sub
push
js
sahf
cmp
adc
mov
sbb
movsb
enter
pop
dec
mov
cli
jns
gs
cmp
mov
lcall
test
lahf
popf
mov
lcall
fcomip
lret
push
jae
and
jmp
sub
lret
cltd
je
jle
and
jmp
sbb
or
jae
dec
ficompl
pop
inc
cmp
push
push
jns
push
push
insb
push
sbb
mov
imulb
push
mov
adc
notl
into
cmp
ds
dec
inc
dec
out
mov
jnp
loope
jl
in
dec
shll
repnz
je
mov
sahf
xor
xlat
test
dec
icebp
cmp
and
pushl
cs
jle
insb
and
cmp
je
xchg
add
es
pop
cmp
bound
ja
ljmp
mov
push
cmp
or
fists
cld
neg
push
inc
xchg
push
mov
push
and
push
call
xchg
int
add
xchg
mov
cli
stos
imul
pushl
push
popf
lcall
dec
or
adc
dec
icebp
sarb
clc
mov
out
cltd
imul
ljmp
xchg
xchg
pop
pop
cli
btr
add
sub
lcall
jmp
shlb
or
insl
jo
inc
dec
ret
insb
cmp
lds
mov
cli
inc
pusha
fistpl
push
or
test
pusha
xchg
out
pop
xor
cmp
shlb
rcrb
dec
repnz
into
fidivs
decl
imul
orb
sbb
xor
xor
inc
jge
pushl
jp
sbb
iret
loope
imulb
dec
cmp
pop
sub
mov
jle
cmp
int
add
ds
cmp
jmp
lock
cs
fimull
pop
push
add
mov
insb
inc
js
mov
lcall
fdiv
mov
xchg
xchg
xor
jmp
ficompl
repnz
mov
call
sbb
rorb
testl
leave
andl
push
mov
lcall
fcomps
int3
xor
aas
imul
test
popf
in
and
mov
incl
fiadds
xor
filds
jne
lock
jecxz
in
adc
ljmp
cmpb
cmpl
adc
ret
decl
adc
pusha
out
jl
pop
popa
xchg
stc
cs
and
aas
jne
jb
cmp
cmp
lods
lret
push
push
jecxz
and
dec
push
sbb
outsb
leave
jge
jne
jg
hlt
sub
insl
lcall
test
sbb
enter
push
ljmp
pop
xlat
bound
movsb
push
aaa
dec
and
arpl
push
cltd
xchg
leave
xor
les
clc
mov
cli
nop
decl
or
cmpsb
sbb
aas
inc
push
loop
stos
outsl
xchg
sti
or
cmp
decl
adc
cmp
ficomps
xchg
addr16
aam
mov
mov
mov
pop
cmp
les
pop
push
push
in
mov
cmpsl
sbb
ds
gs
xor
sub
hlt
out
lcall
pop
les
or
fsts
xchg
pop
shlb
outsl
dec
movsl
xor
cltd
lret
jmp
negl
mov
cld
mov
fwait
lea
cmp
or
fstpt
xchg
decl
call
jo
pop
dec
push
repz
jmp
adc
stos
sbb
xor
fstp
lret
adc
imul
push
xlat
mov
iret
xor
mov
or
fcmovb
or
mov
in
enter
mov
jae
dec
ljmp
les
dec
ljmp
cld
shl
push
jnp
outsb
push
jle
pop
push
incl
lods
mov
adc
push
and
lea
arpl
cmp
sbb
jbe
push
adc
mov
je
js
mov
lea
cmpsl
bound
insl
not
xchg
pushl
push
xchg
cmpsl
gs
ffreep
ja
jnp
popa
js
ja
inc
icebp
mulb
jno
cmc
xor
dec
cmp
pop
xchg
jmp
lret
dec
cltd
mov
mov
loop
dec
jns
shlb
xor
cld
movsb
shlb
jmp
sbb
cmc
cmp
lock
xor
or
int3
cmpsb
test
subl
fdivrl
and
mov
push
xchg
jo
add
int3
adc
dec
outsl
jns
push
pop
mov
xchg
cli
inc
aam
push
jmp
dec
dec
add
inc
sarb
enter
imul
add
pop
test
pop
pop
icebp
js
ficoms
jmp
lcall
sbb
pop
hlt
cmp
loope
cltd
push
jne
cmpsl
pop
mov
lds
push
in
mov
into
rolb
incl
pop
outsb
int3
inc
ds
ret
pop
repnz
mov
mov
jmp
or
mov
cmp
enter
ja
lock
add
dec
mov
pushl
mov
loopne
testl
jg
insb
je
xor
mov
ljmp
lcall
lds
in
mov
add
xchg
mov
shlb
pop
jge
sub
les
rep
lea
movsb
push
adc
mov
xchg
xor
insl
xchg
rcrl
sahf
mov
cmp
bound
leave
imul
adc
cltd
lcall
push
nop
sahf
lret
inc
add
icebp
decl
repnz
mov
jo
cmp
mov
out
mov
insb
dec
jg
fistpll
repnz
cmp
hlt
int
aas
add
xchg
loope
and
cmc
push
stos
mov
pop
icebp
decl
mov
xchg
sub
test
iret
mov
out
inc
add
dec
sub
ljmp
mov
push
test
sub
push
jp
inc
xchg
outsb
add
lcall
testb
mov
jmp
mov
mov
jge
adc
xor
xor
daa
inc
mov
inc
ds
filds
mov
lcall
add
fbld
popa
stc
dec
jns
and
fwait
mov
cmp
insb
cld
incl
push
sub
sub
mov
and
pushl
ret
imul
mov
sub
and
xchg
adc
xchg
lahf
pusha
xor
ljmp
xchg
imul
jo
jl
jl
xchg
dec
fstl
mov
cltd
out
cmp
add
mov
push
inc
and
aaa
jl
insl
lods
dec
mov
jmp
pop
out
lret
mov
mov
jmp
out
insl
mov
imul
shll
xorb
stos
jp
stc
mov
movsl
aaa
xchg
dec
imul
cmp
jge
and
dec
dec
mov
in
lods
ss
inc
jno
xor
mov
fisttpl
cwtl
pop
push
nop
sub
js
or
add
clc
cmpsl
cmpb
cmp
jmp
pop
stos
repnz
sahf
mov
sbb
loop
lret
mov
mov
sahf
ret
out
jle
lret
mov
orl
dec
fucomp
pop
xchg
popf
jb
xchg
ret
xchg
mov
incl
out
sub
push
cmpsb
lret
into
int3
daa
aaa
cmpsb
push
adc
jbe
loop
jp
ret
lds
or
in
int
add
push
cmp
fdivr
ljmp
rolb
xchg
inc
cmpsl
bndldx
or
loop
cmc
ret
or
std
dec
loope
jmp
movsb
cld
popf
cmp
xsha1
cmpsb
dec
outsb
aas
mov
push
int3
xchg
push
faddp
mov
sbb
lret
jb
pop
pusha
cmp
fildl
arpl
inc
add
aaa
xchg
inc
test
jns
imull
mulb
fsts
ljmp
xor
stos
pusha
pop
icebp
xor
mov
scas
push
hlt
gs
xor
push
mov
pop
xchg
sbb
inc
imull
or
movsl
clc
out
cmp
or
sub
addl
call
push
pop
add
cmpsl
adc
insl
push
ds
leave
jmp
bound
mov
popf
cmp
dec
adc
sub
nop
int3
fidivrl
jge
cmp
lahf
ljmp
adc
ror
adc
adc
popf
movsb
imull
test
test
repz
lcall
ljmp
push
sub
lods
inc
xchg
mov
pop
push
cmc
xchg
push
inc
push
mov
incl
je
sbbb
pop
jp
ja
inc
in
mov
test
mov
imul
rcrb
lock
stos
data16
pop
leave
cwtl
cmp
dec
out
jne
stos
out
jg
xorl
cld
lret
mov
push
aam
mov
or
cmp
inc
jmp
lods
lret
jge
bound
adc
push
add
pop
aam
jmp
xlat
test
push
push
outsb
cmp
shlb
ja
es
sub
push
lret
jge
push
shll
inc
and
movsl
xchg
mov
mov
jns
cmp
hlt
bound
cwtl
nop
outsl
lods
push
jno
sub
sahf
es
jmp
adc
push
add
mov
addr16
mov
jno
jg
daa
xor
movsl
cmp
or
xlat
je
xor
cmpl
test
mov
jbe
inc
popf
orl
inc
pop
into
daa
stc
sub
jle
out
jg
hlt
dec
icebp
stos
mov
pusha
fcomp
pop
arpl
pop
or
mov
push
jecxz
test
lcall
loope
aas
dec
xchg
in
cmc
mov
pusha
cmp
mov
daa
dec
in
rorl
mov
push
inc
jp
push
aam
test
jne
ret
mov
movsl
cmc
repnz
test
cmpsb
mov
insb
lcall
in
test
loopne
jbe
push
lds
cmpsb
jb
mov
faddl
cs
add
sub
movsb
push
jmp
mov
ja
pop
push
pusha
xchg
pusha
jecxz
sti
and
inc
jge
popl
cli
xchg
decl
sub
mov
scas
mov
sub
rclb
mov
xlat
popf
mov
mov
incl
inc
jnp
pop
shlb
int3
enter
add
push
sub
cld
mov
cmpsb
sub
ret
dec
mov
cmp
dec
xor
sub
out
dec
push
xor
pop
pushf
in
jl
mov
pop
cmc
fstpt
aad
or
sbb
aas
js
xor
xor
loopne
fmull
fsubs
ja
call
rcl
jle
or
gs
test
jno
sub
ret
lret
xchg
adc
movsb
pushl
bound
fidivrs
xchg
xchg
outsb
add
imul
mov
pop
inc
cltd
insl
ljmp
lcall
out
scas
push
sub
repnz
in
fneni(8087
pop
or
jno
or
pushl
inc
dec
fisubrs
mov
jecxz
lahf
sub
and
outsl
sub
out
sub
incl
cld
inc
movsb
adc
stc
mov
test
fldl
decl
repnz
adc
loop
loopne
jne
xchg
outsl
std
out
mov
sar
mov
out
pop
xor
out
movsb
lret
jo
pop
add
sahf
repnz
enter
lcall
jae
jge
or
pop
add
xor
dec
inc
call
sub
clc
mov
decl
ljmp
out
cmp
push
push
and
ss
clc
and
push
outsb
lcall
jmp
sahf
xchg
adcl
mov
stos
nop
cmp
les
cmp
jg
lock
incl
jnp
xor
dec
dec
mov
out
dec
lods
ljmp
jl
lds
decl
and
adc
cmp
xchg
fcompl
or
inc
repnz
mov
es
mov
xor
das
mov
cmp
lods
mov
pusha
and
popa
inc
sbb
call
dec
call
ja
fcmovnbe
push
xchg
stc
loope
fwait
in
jns
pop
inc
aam
es
dec
mov
add
inc
cli
pop
loop
sub
mov
add
mov
ljmp
jmp
lock
jge
jle
or
fistps
pop
cld
sbb
inc
jge
shrb
in
arpl
jg
mov
mov
jle
rcl
cmc
add
mov
lcall
int3
movsl
cwtl
lret
push
mov
icebp
pop
fsubrl
sub
pop
pusha
imul
inc
call
add
pop
pop
jns
clc
imul
ret
fcoms
cmp
xor
addr16
stos
outsb
cmp
jb
js
imul
pop
mov
and
xor
pop
cmp
and
ljmp
or
inc
fnstcw
cmp
subb
sbb
xor
inc
push
in
ja
arpl
push
push
fwait
jae
sbb
imul
jg
and
scas
sub
jmp
in
lahf
inc
call
fst
sbb
push
repz
pop
or
popf
shr
mov
andb
xor
xchg
inc
sub
mov
lahf
into
cmc
vmovsd
jbe
xchg
inc
sbb
mov
xchg
decl
stc
loopne
insl
lea
popl
addl
aaa
and
in
leave
pop
pusha
loope
movsb
fcompl
mov
push
or
jg
xor
imul
rolb
xchg
push
mov
pushl
xlat
movsl
inc
adc
xor
cmpsb
test
in
incl
cld
outsl
jo
aam
mov
ja
loopne
adc
mov
clc
decl
stos
cmp
fstl
mov
jecxz,pt
fistpll
push
pop
inc
or
ljmp
xchg
dec
push
ljmp
call
xchg
data16
inc
sbb
insb
cli
ljmp
stc
pop
and
xor
push
xor
jp
ljmp
mov
int
cmc
lret
ret
ret
jns
xor
clc
dec
cltd
mov
std
xchg
lret
sub
mov
pop
shr
cld
jg
mov
sbb
dec
leave
and
jg
test
and
and
lret
xchg
jp
pop
ljmp
lock
xor
pop
bound
cmp
js
add
leave
jmp
dec
fsubrs
ljmp
outsl
adc
mov
mov
std
mov
pop
jae
decl
or
inc
sub
mov
and
popa
insl
gs
stc
push
sbb
int
mov
jp
out
aad
and
xor
inc
pop
adc
mov
out
cli
pushl
dec
iret
idivl
fdivr
outsb
push
jg
lods
inc
sub
jg
jo
adc
ds
loop
clc
fcomip
pop
imul
and
sub
cmp
decl
out
cmc
ljmp
popf
pop
jo
push
xchg
data16
incl
lock
cld
inc
and
fisubrs
inc
in
ror
shl
mov
incl
insl
push
cmp
les
pop
mov
ret
mov
cmp
aam
aad
ret
outsb
add
lods
inc
fistpll
iret
dec
inc
or
mov
decl
fildll
loopne
orl
or
xchg
cmp
lret
idiv
ljmp
sbb
sub
cld
jne
iret
xor
movsl
dec
outsl
cld
push
adc
clc
mov
pop
std
ljmp
mov
fwait
out
and
rclb
xchg
inc
int
push
xor
pushl
mov
mov
and
and
pop
xchg
fcmovne
add
cmpsb
pop
adc
push
push
mov
out
lcall
fwait
sub
mov
pop
out
push
test
jmp
dec
adcl
jecxz
mov
adc
sbb
mov
jl
pop
hlt
mov
outsl
pop
stc
lock
in
mov
stos
mov
add
fistl
incl
fwait
dec
inc
cmpsl
sarb
add
iret
push
sub
push
lret
das
call
call
jle
dec
adc
data16
jns
loope
lea
pop
sbb
mov
stos
fldz
loop
ret
cli
incl
movsb
rcr
push
mov
mov
test
leave
out
clc
decl
mov
and
movsl
jp
sbb
xlat
popa
popf
lods
push
div
decl
orl
shr
std
mov
adcb
andl
decl
jae
mov
inc
andl
mov
cmovbe
aad
lcall
cmp
rclb
or
dec
and
addr16
fdiv
sbb
ret
push
call
ljmp
in
pop
es
xor
ret
pushf
xor
ljmp
cmp
adc
dec
dec
push
fsubs
cmp
jns
sahf
push
test
movsb
and
pop
and
pop
ljmp
xchg
cwtl
test
dec
pop
subb
xor
popf
jmp
fbld
lret
sub
cmp
pop
adc
sahf
std
mov
in
fdivs
add
jmp
sub
jmp
ret
into
jnp
fs
shl
test
leave
lock
add
mov
lds
adc
mov
popa
ljmp
mov
jmp
sbb
push
or
test
mov
sbb
push
push
inc
jecxz
decl
fmul
push
cmp
fsubl
adc
mov
js
mov
in
pop
xchg
sahf
stos
fwait
mov
jle
or
jmp
push
cmp
shrl
shrb
jnp
and
or
sbb
ljmp
movaps
and
decl
sahf
lea
inc
sub
inc
mov
aaa
jmp
lcall
je
xchg
fbld
call
popf
mov
jb
cmpsl
and
call
mov
lods
sbb
or
dec
in
xchg
pop
sub
xchg
ja
adc
push
xchg
rcll
call
in
lods
bound
iret
and
inc
inc
xchg
aam
rcrl
add
adc
or
jns
aas
scas
into
imul
xchg
movsb
xor
rcll
xchg
enter
aaa
std
mov
dec
lcall
sub
add
mov
decl
pop
insb
out
jno
inc
mov
mov
cmp
mov
sbb
lcall
mov
ret
push
outsb
push
or
loop
or
or
inc
ljmp
mov
movsb
cmpb
sub
shl
inc
pop
andl
ret
test
lcall
mov
or
fwait
push
shrl
jge
add
enter
pop
lods
add
int
mov
mov
test
cmpsl
aas
test
cmc
xchg
inc
mov
stc
leave
sbb
scas
mov
pop
mov
out
call
xor
jbe
aad
test
clc
incl
sbb
jge
push
popf
push
lock
xchg
cmp
sbb
rclb
cld
call
aaa
test
dec
jno
dec
dec
add
inc
mov
call
ja
out
je
mov
jns
lods
int3
inc
test
sbb
push
xor
enter
roll
stos
xor
roll
inc
mov
pushf
mov
jno
xor
sbb
dec
sbb
push
movsb
out
cmp
cmc
dec
xlat
cld
mov
lock
es
repnz
adc
pop
mov
adc
jg
mov
push
or
add
in
jne
stos
adc
ret
out
cmp
ljmp
psubsw
fwait
int
mov
sti
jns
push
fdivp
xchg
lock
mov
cmp
or
pushl
aas
cmp
jmp
pop
insb
in
mov
outsb
lret
or
cmpsb
push
leave
jmp
jo
mov
jecxz
mov
sub
xchg
and
mull
pop
fstl
cld
push
clc
cmp
sbb
hlt
cmpb
add
xchg
pop
mov
out
xchg
xchg
jmp
jo
push
pop
sbb
aam
std
cmp
leave
ja
mov
cmpsb
jg
push
push
mov
bound
sbb
testb
cltd
xor
insb
scas
ds
mov
fwait
mov
lcall
sti
xchg
out
cmp
xlat
and
ret
lret
pop
pop
mov
cld
ljmp
sbb
and
add
or
xor
mov
or
sub
mov
mov
mov
mov
xchg
fisubrs
call
adc
jo
js
aam
jmp
dec
lcall
jmp
rclb
cli
push
dec
movsb
out
clc
call
inc
out
add
sbb
jge
and
mov
sub
push
incl
push
add
loopne
mov
mov
cwtl
fidivrl
stc
add
jns
sbb
sub
or
filds
pusha
das
mov
mov
sbb
or
fcomps
xor
add
lcall
and
sbb
push
lods
sbb
xchg
inc
roll
test
mov
mov
mov
sti
sbb
add
pop
pop
lods
lea
cmp
pop
adc
hlt
adc
pop
cmpsb
pushf
shll
subl
repz
mov
add
pop
jne
loope
mov
jbe
xchg
mov
das
push
loopne
mov
and
arpl
mov
pushl
xor
stos
pop
add
lods
jne,pn
cmp
into
cmp
js
in
cli
mov
add
lcall
push
jne
push
mull
dec
mov
xor
rolb
xchg
adc
and
decl
dec
sbb
bound
cmovae
add
cmp
cmp
imul
aam
sub
add
rol
mov
dec
fdivrp
adc
pushf
inc
fidivs
cld
xchg
scas
sarb
cltd
clc
push
xor
aas
pushl
rcl
dec
dec
test
cmc
push
jnp
pop
sbb
jl
or
push
xor
jg
lods
adc
es
scas
mov
aam
outsb
je
rolb
and
cli
sti
xchg
insb
das
cmp
adc
cmp
adc
outsl
std
je
outsl
xchg
call
call
xor
mov
push
and
lds
push
jmp
in
mov
push
popf
icebp
jle
pop
ss
xchg
xor
ja
in
inc
je
inc
lea
pushl
or
stos
popa
xchg
aaa
cltd
jmp
ficoms
pop
mov
mov
push
sbb
decl
xor
mulb
and
faddl
imul
mov
std
decl
pop
xor
addl
inc
push
add
outsl
and
and
sub
js
iret
inc
pop
les
xor
andb
push
test
cmc
insb
pop
fsubrl
ljmp
cmp
dec
sbb
jnp
pop
sti
sub
add
mov
and
sti
enter
movsb
nop
add
cmp
ret
dec
rcll
aad
ds
push
call
adc
hlt
sbb
das
mov
jg
ficompl
dec
out
aad
jnp
in
add
loopne
xor
adc
aaa
add
popf
dec
pushl
sub
jl
xor
adc
mov
pop
js
mov
ret
pop
lcall
aad
lcall
leave
in
jb
out
aas
xchg
cwtl
lcall
pushl
and
mov
jbe
mov
xchg
lods
jmp
inc
push
ret
sub
mov
ss
in
or
js
pop
push
xorb
pushl
nop
sbb
or
out
push
adc
fcompl
push
mov
cmp
and
in
jg
dec
imul
adc
inc
adc
mov
mov
test
inc
aam
out
incl
and
dec
dec
shlb
in
std
mov
xchg
mov
out
push
iret
pop
bound
lcall
pop
or
or
mov
popa
pop
sub
xchg
jmp
incl
sarb
jle
sub
clc
stos
and
push
cmpsb
xchg
arpl
aad
popa
push
in
or
es
ljmp
cmp
mov
mov
cmp
fcomip
sarb
ljmp
mulb
js
ljmp
imul
scas
xchg
enter
jle
divl
lods
and
pop
aas
decl
rol
push
adc
sub
out
cmpsl
mov
pop
push
les
mov
pop
imul
jge
jb
lret
mov
into
pop
cmp
loope
test
pop
push
jb
cmpl
mov
test
aaa
je
leave
push
mov
add
pop
jmp
push
outsb
scas
adc
sbb
pop
dec
pop
pop
push
loope
dec
loopne
stos
xor
cmp
pop
mov
js
les
sahf
sbb
call
outsb
repz
adc
or
pop
dec
mov
imul
mov
jo
sbb
mov
sbb
pop
xor
cwtl
or
ret
xchg
clc
jnp
adc
lret
in
inc
mov
outsl
adc
bound
jmp
fidivrs
mov
jno
xchg
mov
test
incl
das
aas
pop
push
sbb
imul
cmpsl
xlat
xchg
sub
shl
ds
push
mov
movsl
add
cmpsb
cmp
inc
jp
out
jns
inc
pusha
dec
lcall
shlb
imul
mov
jg
jmp
in
xchg
add
sbb
f2xm1
dec
pop
xor
mov
std
mov
stos
ljmp
mov
lds
adc
mov
js
sbbl
pop
sbb
fdivrp
cmp
icebp
sub
jg
decl
shrd
xor
mov
sbb
xchg
lea
add
test
cmp
sarb
xchg
ljmp
or
and
in
fcoml
lcall
cltd
xor
mov
pop
push
insl
inc
cwtl
addr16
and
repz
lahf
push
std
pushl
dec
rol
aam
cmp
sbb
mov
sbb
sbbl
aaa
lcall
sub
push
inc
aas
insb
sub
jmp
insb
loope
jae
sub
outsb
xchg
les
popa
jo
mov
fbstp
loope
fisubl
xchg
mov
jmp
ja
inc
cltd
cmpb
or
pop
xchg
cmc
jg
jmp
int
sbb
popf
sbb
ljmp
ja
insb
or
push
stos
jl
ret
add
out
js
push
push
cmp
std
jb
inc
xchg
jmp
cmp
cld
add
mov
or
xor
cwtl
es
push
and
roll
and
mov
outsl
clc
pop
loop
sub
inc
mov
inc
xor
dec
pop
and
jg
mov
dec
dec
hlt
jmp
inc
lea
xchg
xlat
cmp
arpl
std
fdivrl
lcall
ljmp
dec
mov
lock
mov
xchg
add
sbb
js
mov
icebp
pop
inc
ret
mov
lret
mov
sahf
into
pop
ds
cmp
testl
ljmp
clc
jmp
jecxz
pop
xor
add
add
cmp
pop
mov
ljmp
in
cmp
ds
sti
add
mov
inc
cmp
xchg
stos
cmp
mov
cmp
jg
aam
add
hlt
or
mov
push
rorb
fsubs
mov
push
das
add
mov
cmp
ljmp
lcall
adc
es
cmp
mov
xor
push
pop
outsl
pop
mov
incl
in
outsb
mov
cld
push
xor
inc
mov
sbbb
adc
mov
push
and
pushl
cmp
jb
lcall
notb
push
or
and
pop
mov
mov
insl
dec
pop
sub
in
xchg
dec
jge
jbe
hlt
adc
pushl
std
mov
popa
xor
outsl
pop
sbb
fldcw
pop
mov
es
push
jb
insb
and
incl
or
sub
subb
mov
cmp
pushf
adc
aas
mov
ljmp
adc
dec
nop
loop
scas
inc
add
lods
repz
inc
xor
incl
cld
dec
jnp
cmp
ljmp
inc
pop
push
icebp
mov
cmp
xchg
jle
pop
jl
stc
scas
call
jns
cmpsl
sbbl
in
jle
lcall
rcrl
adc
bound
jbe
cmp
cwtl
lret
push
sbb
jg
roll
decb
mov
les
mov
fs
data16
jmp
adc
insl
add
fs
frstpm(287
adc
cmpsl
jmp
mov
and
enter
add
adcb
sarb
jle
bound
or
idiv
add
decl
hlt
push
leave
mov
popf
shll
aad
add
cs
loope
sahf
outsb
popf
addr16
fucomip
outsb
sbb
nop
cmc
mov
cmc
test
lahf
mov
std
dec
or
lret
and
fisttps
ja
xchg
nop
fldenv
loopne
push
fsub
mov
in
daa
mov
push
mov
cli
lods
pushl
xor
add
cs
cmp
rclb
jmp
in
adc
xor
cli
jecxz
pushf
aad
xor
popf
stos
xchg
mov
fld
inc
decl
lock
outsb
jo
enter
inc
cmp
int
test
mov
jmp
xchg
or
xchg
xor
xchg
adc
int3
lods
push
push
jb
arpl
xor
xor
jmp
xor
popf
sub
into
gs
lret
pop
mov
lods
int3
xchg
push
pop
dec
adc
xor
ljmp
jmp
and
xor
mov
cmp
mov
stc
mov
lods
add
xor
adc
xor
in
outsb
testl
lcall
std
stos
pusha
push
loop
bnd
int3
cwtl
mov
mov
je
add
sbb
clc
mov
outsb
test
jo
xchg
mov
out
mov
std
unpcklps
data16
ljmp
jmp
or
xor
mov
jle
xor
add
push
bound
iret
jo
out
nopl
cli
mov
dec
into
clc
pusha
xchg
insb
push
inc
mov
jecxz
sub
popa
cmp
xor
add
or
sbb
rclb
push
cmp
cmp
movsl
dec
cltd
jb
xchg
hlt
pusha
rorl
dec
ljmp
call
pop
cmc
push
dec
xlat
push
jae
or
and
sbb
xor
push
push
ljmp
push
push
sti
xor
jne
lcall
pop
ljmp
loopne
ljmp
sbb
imul
inc
xchg
movsb
pop
dec
push
arpl
call
xchg
stos
jmp
or
lea
push
pop
dec
fidivl
mov
les
xor
je
cmp
cld
sub
inc
xor
icebp
push
push
mov
sub
arpl
jne
jg
enter
sbb
stos
dec
mov
adc
mov
sub
lcall
shlb
fwait
push
lea
inc
int
or
dec
inc
or
cmpl
xor
mov
mov
das
xchg
cmp
inc
sub
or
fcmovnu
push
mov
and
or
mov
and
pop
or
fnclex
in
pushf
ret
fistpll
or
je
push
fsubrl
add
mov
enter
jmp
aas
adc
out
cmp
lods
jne
pop
popa
mov
sbb
test
call
mov
inc
or
mov
ret
xchg
adc
add
adc
jns
xchg
adc
notb
fsubrl
ja
lcall
mov
mov
mov
outsb
mov
outsl
add
cmp
pop
jo
lods
loopne
and
scas
sub
call
inc
add
iret
sub
repnz
cltd
pushf
cli
dec
cwtl
sarb
mov
call
cmp
xchg
inc
mov
lds
fisubrs
in
jmp
inc
xchg
and
incl
push
pop
sub
xor
jns
mov
sub
dec
popf
xchg
lcall
ljmp
sbb
and
mov
cltd
ret
jne
xchg
cs
decl
and
jg
ljmp
jg
dec
jge
mov
sar
push
rcll
inc
sub
mov
sbb
adc
xor
ljmp
lcall
popf
xchg
das
mov
in
xchg
stc
mov
cmp
mov
pop
inc
sbb
fldt
fldt
clc
push
ds
inc
clc
mov
mov
fistpl
insl
mov
jmp
jne
mov
jg
mov
faddl
popf
xchg
scas
cmc
xchg
popf
and
adc
xchg
xchg
repz
cmp
fcomi
dec
pushf
aam
mov
push
popa
je
loopne
fsubrs
pusha
xchg
jge
andb
ds
jns
andl
cwtl
loope
notb
pop
bound
jg
push
subb
pop
roll
inc
stos
mov
rclb
jg
inc
dec
out
add
ds
cld
xchg
int3
cmpsb
jo
xchg
ret
test
call
ror
dec
out
mov
scas
lcall
dec
mov
lahf
mov
jb
sti
js
and
ljmp
out
xor
dec
outsl
cmc
aam
addr16
pop
stos
fadds
call
jns
mov
sub
iret
xchg
fsin
aad
sbb
or
add
jmp
es
das
aam
push
jne
jns
jg
mov
sub
sbb
subl
mov
jmp
mov
sub
dec
sbb
loope
aam
mov
out
mov
lods
or
adc
jg
call
adc
nop
loopne
int3
sbb
mov
into
add
pop
ljmp
adc
pop
insl
push
ljmp
sub
pushl
sub
cltd
or
mov
je
movsb
pop
fstpt
loope
pushl
fcompl
mov
or
sbb
gs
dec
cmc
stos
out
cs
jge
bound
cld
inc
push
lcall
adc
push
cmp
mov
add
call
and
adc
xchg
add
in
decl
mov
insb
jns
sahf
dec
ficoml
or
push
mov
add
fcoml
fildl
pop
or
out
imul
iret
sub
movsl
inc
lret
cmp
sti
jl
mov
mov
dec
call
psrld
cmpsl
sbb
std
mov
jle
cmp
add
test
mov
dec
inc
pusha
xlat
aad
add
lahf
lcall
mov
cmpsb
push
pushf
decl
xchg
mov
inc
iret
xchg
xorb
jae
outsb
sub
dec
lahf
jne
jmp
or
cmc
or
decl
fcmovu
sahf
xor
jle
pop
xchg
xlat
shrb
ss
sbb
ds
lcall
outsl
pop
push
xchg
into
int
xor
or
stos
dec
jne
push
sbb
cmp
mov
shrl
mov
xchg
pop
cld
ljmp
or
cmc
fcmovb
pop
push
sbb
gs
and
pop
hlt
adcl
dec
pop
pop
mov
fnstenv
les
andps
mov
in
fsub
jg
pop
mov
pop
adc
xor
mov
lret
mov
mov
sti
mov
ds
lods
mov
jge
push
mov
out
mov
int
pmulhuw
pop
inc
inc
das
sar
push
pop
mov
xchg
mov
decl
ljmp
xchg
movsl
mov
sub
dec
xor
push
nop
out
push
mov
pushl
sarb
lret
pop
cmp
cs
mov
pop
xor
mov
subl
mov
daa
push
sub
fisubs
jecxz
lods
mov
add
shll
call
bound
cwtl
xchg
lods
cmp
sub
xchg
fwait
dec
lock
shlb
decl
and
jne
xor
xchg
xchg
xor
xor
mov
sub
int
jmp
mov
rol
cmpsl
dec
adc
mov
mov
lahf
mov
cli
in
fucomi
addr16
das
fistps
call
mov
xchg
pop
jl
xchg
iret
lret
xchg
sbb
call
and
mov
aas
or
mov
pop
pop
popa
inc
in
dec
inc
decl
push
test
jno
mov
pop
mul
outsl
aaa
jl
lahf
push
test
mov
and
dec
test
adcl
imul
pushl
clc
call
pop
ljmp
bound
das
lods
test
jmp
mov
shrb
in
push
inc
xor
loop
xorl
jp
clc
hlt
inc
mov
inc
xor
int3
mov
mov
xor
adc
pop
shll
cmc
sarl
in
dec
add
push
mov
sti
jmp
pusha
mov
sub
mov
leave
lods
jg
mov
pop
loopne
decl
or
mov
sbbb
popf
inc
sub
sbb
sub
hlt
lcall
inc
push
xchg
fstpl
add
adc
pop
mov
dec
in
call
inc
xor
mov
push
mov
cli
jmp
sub
sbbl
test
cmp
xchg
repz
pushl
jmp
setnp
imul
ja
outsb
rclb
fadd
loope
push
xchg
clc
scas
sti
cmpsb
inc
scas
cmp
imul
mov
les
add
or
stos
les
jno
gs
decl
mov
dec
add
dec
jecxz
push
add
aam
pop
sbb
add
push
repz
mov
adc
std
xorl
push
jmp
push
pshufw
sbb
xor
sub
mov
cmp
in
shr
cmpsl
cmpsl
adc
test
jae
mov
jg
lcall
addb
in
and
push
test
push
add
pop
mov
pusha
add
fs
decl
lock
ljmp
push
fldenv
arpl
adc
jle
pop
or
cli
loope
mov
adc
fdivrs
cmp
jmp
fidivs
add
inc
addr16
aas
repz
out
fldenv
sbbb
out
mov
mov
and
mov
sub
push
enter
xchg
clc
add
jmp
jnp
xchg
mov
adc
xor
test
roll
rcr
test
pushl
xor
push
sub
mov
pushf
jp
rolb
add
push
jmp
cmc
pop
jne
int
jae
lahf
mov
inc
add
add
es
andl
movsb
jle
test
lods
imul
cmpsl
pop
mov
repz
mov
scas
movb
add
decl
mov
push
pop
dec
jno
aad
inc
js
in
cmc
push
xchg
mov
mov
sahf
inc
cmpsb
in
pusha
push
sbb
in
repz
push
iret
ljmp
and
mov
testl
iret
push
lret
pop
pushl
push
mov
pop
jge
in
inc
mov
push
dec
adc
jecxz
mulb
ud0
decl
inc
faddl
mov
inc
cmp
sarl
pop
pop
fistps
xor
lret
xor
fwait
ljmp
jae
dec
mov
pop
mov
xchg
stc
mov
stc
inc
lcall
incl
push
mov
adc
jecxz
push
or
fnstenv
and
inc
cmp
std
adc
add
iret
mov
add
rcrb
ss
jmp
ror
push
fiadds
into
scas
push
cmp
jl
sar
xchg
jno
test
jbe
incl
out
sub
or
loop
fwait
mov
lods
lcall
cmp
dec
insb
or
xlat
or
mov
insl
mov
dec
nop
jmp
cmp
inc
stos
xchg
and
pop
sub
cmp
jmp
shlb
xor
sbb
add
push
in
scas
push
and
sbb
push
movsb
cmc
mov
test
ljmp
clc
jmp
jl
and
and
movsb
cmp
fnsave
dec
scas
aas
sbb
or
push
fwait
mov
or
out
cmpsl
stos
cmpsl
pop
fcoml
loopne
mov
cld
push
call
test
or
loop
sub
mov
jecxz
or
repnz
push
push
cld
jg
fdivl
rclb
das
test
test
or
mov
icebp
mov
test
cmc
call
jo
cmc
lcall
adcl
add
xchg
mov
hlt
push
push
adc
clc
mov
cmp
stc
lock
xor
clc
mov
cltd
movsb
hlt
jmp
add
xorl
mov
cwtl
mov
or
enter
xchg
bound
and
or
push
sbb
sbb
inc
in
xchg
cmp
jecxz
dec
repz
into
jo
adc
inc
ret
or
mov
enter
xchg
cwtl
mov
js
mov
pop
adc
mov
arpl
or
data16
pusha
push
xor
cmp
lock
ss
jne
inc
outsl
add
enter
bnd
ljmp
subb
movsb
and
add
cmp
leave
arpl
loop
ret
xchg
loop
std
fcomip
ljmp
movsl
sarb
dec
push
jns
and
es
cmp
out
sti
in
call
sahf
xchg
xchg
aas
popa
cmp
sahf
lcall
rol
xchg
je
jl
decl
cs
pop
bound
dec
pop
xchg
add
cmc
mov
into
fimuls
mov
jge
jmp
lret
push
push
fnsave
pop
ficoms
out
sti
pop
in
loope
cmc
pop
sub
ficompl
lcall
pop
mov
or
cmc
in
xchg
cmp
mov
dec
lds
mov
insb
fnstsw
decl
mov
sbb
clc
ljmp
fldcw
gs
ljmp
lret
mov
pop
push
xchg
std
push
push
mov
aas
filds
or
xor
adc
fucomi
push
inc
incb
sub
inc
adc
cmp
add
lds
add
lock
jmp
and
add
aam
inc
inc
sbb
int
jmp
test
movsb
fwait
or
mov
ss
jl
add
or
je
mov
orb
cmp
dec
gs
push
repz
nop
shll
push
cmp
dec
sti
cmp
imul
jl
cmpsb
mov
add
cltd
sub
xchg
add
adc
shll
lcall
das
ss
fcoml
movsb
sub
int3
or
orb
pop
rcrl
sub
dec
jg
loop
sbb
mov
test
xchg
lret
or
shl
ja
jmp
daa
js
push
mov
inc
clc
ljmp
jne
pop
jmp
in
adc
mov
int3
into
loop
jns
lcall
jle
xor
rcr
aaa
jo
call
xchg
aam
jge
jp
sbb
mov
cmp
mov
jmp
ljmp
gs
es
sar
sar
enter
pop
lret
sti
push
inc
out
add
mov
adc
adc
and
scas
jmp
je
divl
and
or
mov
jg
stc
xor
ret
xor
push
and
sub
cmp
popf
loope
adc
or
or
call
jmp
jb
cs
imul
or
mov
mov
shrl
xchg
xor
lods
inc
sub
clc
call
sbb
jle
mov
mov
sbb
std
adc
jmp
mov
je
out
ficomps
fldl
cmp
sbb
negb
pusha
inc
ss
cmp
mov
sahf
sbb
push
mov
jmp
pop
scas
test
out
rdtscp
or
out
cmp
inc
pushf
cmp
aaa
cld
decl
cmpsl
in
ret
pushf
push
fidivrl
sub
aad
scas
inc
not
hlt
repz
shlb
mov
adc
push
aaa
test
jge
cmp
fistl
cltd
xlat
jle
lret
daa
daa
xlat
into
dec
bound
lret
test
sub
mov
stos
movsl
addr16
les
mov
in
movsl
cs
ss
inc
pop
pop
stc
jl
xor
pop
repz
rcrb
mov
call
arpl
mov
push
cli
sbb
xor
repz
cmp
rolb
lock
sbb
ljmp
clc
jge
cld
imul
and
mov
xor
and
pop
enter
inc
jno
in
push
call
ret
push
lds
jbe
mov
adc
push
into
jg
inc
std
popa
scas
and
sub
in
lret
push
adc
movsl
call
or
mul
pop
xlat
or
daa
icebp
ret
test
inc
aaa
int
mov
test
in
icebp
or
or
call
xor
nop
scas
mov
clc
jp
xor
xlat
inc
idivb
roll
rclb
into
sbb
lahf
pop
les
scas
stos
pop
push
fsubrs
aad
pop
push
lock
decl
mov
in
ss
movsl
mov
pop
jg
cmp
and
sbb
push
lea
rclb
jno
and
mov
decl
mov
movsl
in
rcl
pop
cltd
mov
xchg
fcomip
scas
jb
movb
stos
and
mov
aas
loop
add
ljmp
and
das
int
add
mov
lods
cmp
mov
mov
sbb
jmp
cmc
pop
divl
icebp
sbb
repnz
stos
in
jmp
dec
repnz
push
xchg
imul
lock
push
sub
and
out
inc
mov
add
pop
jmp
lods
test
mov
ror
mov
add
dec
sbb
jne
dec
call
adc
aam
adc
inc
out
sbb
xchg
sub
lods
cltd
sbb
mov
ret
call
mov
push
and
push
dec
enter
xchg
aam
iret
cmc
xchg
xchg
pusha
shrb
jecxz
je
cmc
decl
jnp
xchg
pop
popf
pop
lahf
xor
pushf
pop
sub
dec
mov
inc
add
fcomip
incl
int3
sub
push
cmp
into
push
xor
sub
lcall
jp
adc
lds
pop
push
out
jl
aas
cwtl
push
mov
pop
xor
push
cld
jmp
xchg
adc
adc
push
push
adc
mov
outsl
outsb
cld
ljmp
xor
push
mov
iret
pop
xchg
ja
popa
push
popf
cwtl
pop
loope
in
lds
in
aas
icebp
sub
inc
adc
adc
xor
jg
mov
dec
cmpsb
aad
dec
pandn
jecxz
mov
cltd
sub
xlat
shrb
fcomi
or
lods
ret
jg,pn
xchg
lret
jle
or
add
gs
mov
stos
mov
mov
into
in
push
loop
repnz
icebp
js
addr16
xor
bound
add
pusha
aad
shlb
pop
cmpb
fists
pop
popf
jnp
outsl
add
nop
cltd
daa
popf
icebp
or
mov
mov
call
insl
mov
jmp
jl
repz
jns
jp
stos
xchg
add
mov
jbe
cmc
data16
lods
je
mov
mov
add
enter
std
jmp
dec
mov
or
incl
push
add
jecxz
stos
fmull
push
xorl
aaa
clc
call
leave
sbb
dec
out
cmp
pop
mov
xchg
incl
xor
mov
pop
xor
xor
popf
lds
cmp
ret
cmp
adc
pop
loope
push
fimull
les
add
fs
mov
jle
sbb
shll
inc
and
test
add
xor
stos
int
and
or
pop
jo
or
sub
jo
mov
call
jg
xchg
sub
xor
pop
outsb
push
arpl
movb
push
cmp
pop
inc
xor
je
into
mov
dec
sub
jg
cmp
leave
loop
ficompl
mov
fcomip
dec
jp
je
jge
iret
add
inc
mov
xchg
scas
cli
lcall
fs
add
jg
in
daa
and
mov
dec
enter
iret
dec
insb
int
cld
insb
icebp
es
in
mov
and
adc
pop
sbb
clc
lcall
add
sub
pop
dec
sahf
stc
hlt
testb
jmp
aaa
mov
jp
mov
and
repnz
cmp
pushf
add
add
popa
and
int
sub
jne
loopne
push
and
outsb
repz
xchg
fstl
pushf
jne
fs
pop
outsl
sahf
mov
cwtl
shl
fcomip
fildl
pop
fwait
popa
sub
jmp
mull
dec
loope
push
mov
push
xor
jb
scas
fwait
xchg
push
mov
lcall
pushl
push
xor
and
imul
movsb
and
mov
pop
loopne
fldt
loopne
pusha
pop
mov
je
mov
call
std
or
stos
mov
adc
into
mov
dec
mov
shll
das
sar
or
negb
adc
xchg
jge
int
hlt
dec
ffreep
outsb
xchg
aas
inc
icebp
cmc
ss
mov
ss
scas
mov
xor
adc
lods
jmp
ror
pop
hlt
add
jg
cwtl
addb
dec
mov
and
add
mov
adc
out
dec
fists
cmovl
or
mov
push
push
mov
adc
jp
pop
fcoms
lahf
ja
adc
sar
cld
ljmp
inc
cs
ffreep
jae
das
push
enter
or
cmpsb
pushl
jecxz
data16
and
jns
mov
and
or
dec
mov
and
pop
lock
daa
lcall
bound
and
imul
jl
inc
pushf
jae
mov
inc
ljmp
arpl
fcompl
xlat
inc
out
sub
call
std
je
loop
xchg
dec
adc
and
add
ja
xlat
test
repnz
mov
sar
ljmp
jge
push
sub
xor
cmpsb
sbb
out
cmp
imul
mov
sbb
mov
xchg
daa
xor
and
in
mov
xchg
push
mov
lahf
or
dec
jo
jne
call
jp
test
testb
pop
test
xchg
test
pop
in
cmpb
mov
ljmp
push
or
mov
cltd
aas
insl
into
subb
adc
jg
jmp
jns
andl
out
clc
jp
fadd
fcomp
stos
and
pop
sbb
mov
pop
xor
pushl
xchg
sub
or
lock
xchg
jge
test
sar
scas
subb
jno
movl
outsl
adc
lcall
std
arpl
add
loopne
lds
push
xchg
push
aaa
fldenv
mov
lcall
mov
ljmp
cs
daa
mov
insb
mov
call
imul
jne
into
js
add
in
push
xor
fwait
jbe
jnp,pt
xor
push
pop
jg
ljmp
and
xchg
fwait
pusha
inc
pusha
loope
mov
lods
pop
sub
inc
xor
call
fcoml
out
jno
jnp
movsl
popf
scas
aam
sub
mov
mov
push
cmpsb
push
loop
lcall
mov
je
mov
sbb
pop
mov
ljmp
lods
add
mov
jb
ljmp
adc
fdivl
imul
je
lea
adc
xor
into
aam
imul
xchg
push
pop
mov
cli
call
cmp
or
cmp
in
add
inc
jb
jno
sbb
shlb
int3
ljmp
sub
mov
dec
inc
and
test
or
mov
test
call
shll
or
sarb
test
jmp
mov
das
lahf
cld
call
xchg
sbbb
mov
loope
sbb
es
repnz
data16
cmp
add
or
fwait
inc
mov
aaa
xchg
loopne
or
repz
je
outsl
xor
aaa
test
cwtl
cld
cmpsl
push
or
out
shrb
push
test
incl
inc
dec
cmpsb
inc
leave
adc
vpmulhuw
jbe
popa
jmp
pop
shlb
mov
hlt
lds
or
mov
sbb
popa
mov
dec
out
outsl
inc
les
dec
jp,pt
jo
in
jmp
pop
xor
inc
jb
js
pop
xchg
dec
cltd
mov
scas
loop
or
adc
pop
cmc
pop
test
les
shl
fisubl
push
mov
arpl
imul
bound
mov
pop
add
sbb
mov
mov
pop
out
and
stos
push
clc
pop
mov
mov
jmp
mov
or
out
push
aas
sbb
sbb
or
idiv
dec
cmp
dec
mov
sbb
xorb
sti
or
push
pushf
imul
add
mov
cmp
sahf
loopne
mov
jb
divl
imul
ljmp
pop
xchg
dec
lret
dec
jae
mov
shrl
mov
lock
add
push
jg
pop
pop
cmp
dec
adc
push
shll
in
test
js
incl
std
inc
lea
push
inc
leave
ret
mov
mov
sbb
sbb
sbb
decl
adc
leave
decb
mov
cmp
lcall
fdiv
adc
pushl
mov
mov
in
incl
jns
xor
je
nop
jg
lcall
jmp
in
jne
xor
jno
xlat
and
xor
or
fcoms
adc
and
mov
push
jne
push
divb
adc
ljmp
pop
mov
aas
mov
cmpsb
lret
rorb
fwait
xchg
inc
jns
mov
leave
jb
inc
js
pushl
bound
jmp
ficoml
test
sub
and
pop
lods
xor
inc
ret
fisttpll
dec
dec
mov
jmp
fdivr
cmpsl
stos
js
sub
inc
jge
scas
cmp
mov
or
aam
pop
fstpt
jb
push
shrb
mov
addr16
sub
call
popa
mov
outsb
or
lret
xor
push
jmp
add
scas
pop
mov
loope
sub
jg
incl
lcall
adc
stos
mov
mov
das
cmp
roll
out
call
dec
xchg
cmp
sbb
sti
pop
fadd
int3
mov
jge
fstps
pop
decl
or
fidivl
mov
xlat
jns
ljmp
add
xchg
aaa
dec
jle
mov
cmpsb
pop
int3
ret
add
cmpsb
pop
movsb
or
filds
fnstcw
in
loop
call
dec
leave
fcompl
fs
test
push
cld
jmp
cmp
stc
jge
mov
cwtl
jno
sub
jg
sbb
loope
add
mov
stos
and
push
mov
mov
incl
inc
push
aam
mov
mov
inc
dec
push
lcall
or
mov
test
xchg
xor
notl
lcall
bound
add
pop
lcall
xor
sub
jno
jns
xor
dec
inc
push
pop
jbe
inc
pop
mov
jnp
inc
adc
divb
daa
aaa
xor
sub
cmp
call
push
and
xor
dec
leave
jno
outsl
cmp
hlt
nop
push
pusha
xchg
sar
ja
sti
iret
icebp
lds
stc
add
sahf
or
imul
jmp
cmp
int
push
insl
cs
mov
cmp
cmp
sub
scas
lret
pop
jns
ss
jmp
fxam
imul
pop
imul
jns
lods
test
cmpsl
pop
mov
sbb
out
stos
push
mov
push
movsb
ret
cmp
xchg
or
pusha
orb
imul
fmuls
dec
and
imul
test
loope
cmpl
psllw
mov
cld
lret
push
adc
jge
push
mov
rorb
mov
mov
in
and
daa
sub
rorb
incl
out
xchg
jp
inc
cmp
insb
adc
fwait
mov
pushf
sti
arpl
lcall
xchg
lds
sti
js
push
push
and
xchg
arpl
mov
dec
cmp
adc
testb
add
lods
mov
mov
aas
fdivrs
jnp
cld
pushl
sbb
or
fxch
cmpl
sbb
mov
fisttps
pop
js
testl
inc
ret
jno
ss
js
shrb
in
and
xor
jne
cltd
jecxz
in
lret
cmpsl
ret
pushf
je
fwait
xchg
mov
incl
jmp
fdivrs
xchg
gs
addr16
int3
mov
mov
ljmp
enter
ljmp
jo
lock
xchg
cli
and
gs
and
outsb
es
mov
arpl
repz
push
test
sbbb
dec
out
inc
jecxz
enter
xchg
lods
lods
or
clc
lahf
inc
sbb
cmc
fdivrs
movsl
les
mov
adc
lods
sarl
mov
incl
jb
pop
scas
mov
in
nop
mov
scas
mov
add
jae
int
pop
sahf
or
incl
cld
sbb
mov
ljmp
jne
xchg
insb
orl
call
ficomps
xchg
insb
cmc
cmp
inc
pop
sbb
xchg
and
mov
lods
or
pop
xchg
sar
lcall
jb
push
and
sarl
shrb
cmp
sub
lds
incl
ja
add
daa
adc
arpl
add
jbe
cmp
pushl
xor
push
lret
sub
inc
add
movsb
lods
push
or
test
jg
adc
insb
sub
outsb
inc
pop
jl
insb
or
dec
testb
dec
loopne
push
ljmp
and
ret
mov
movsl
addl
lcall
or
push
into
xor
mov
sahf
loope
fistl
lds
andl
ds
cli
inc
int
lock
pop
or
jge
xchg
xchg
xchg
push
call
jg
insl
mov
xor
test
or
fisubrs
orb
add
cmp
in
mov
adc
dec
je
mov
fimull
lcall
cli
fidivrl
sub
or
adc
fbstp
lahf
testb
jmp
pop
out
arpl
mov
xor
push
pop
inc
jae
dec
push
fs
dec
pushf
fbld
sbb
outsb
cmp
test
xor
and
dec
xchg
mov
rcrb
sbbb
lcall
roll
mov
adc
outsb
push
roll
xchg
or
add
adc
lcall
pop
mov
cli
nop
adc
js
inc
sub
decl
loope
jne
das
and
and
insb
push
cmp
data16
stos
xor
in
jmp
jg
decl
inc
jp
inc
adc
shr
in
mov
into
insb
add
jns
icebp
hlt
repnz
ljmp
aad
sbb
inc
and
pusha
test
mov
or
out
clc
fbstp
mov
cmp
mov
dec
xchg
movsb
dec
mov
vpandn
fsub
cld
add
loop
out
cmc
mov
lds
cli
dec
jmp
cwtl
pushl
js
cmp
mov
jo
push
rcl
pop
sbb
test
lods
rcll
ljmp
inc
xchg
in
push
xchg
xor
xor
push
leave
cltd
cmp
cmp
xor
pop
shrl
rorb
mov
jecxz
js
jge
out
test
and
lahf
jnp
les
lcall
movsl
xlat
mov
aad
mov
idiv
jae
push
jle
sbb
pop
adc
cltd
out
js
inc
outsl
push
mov
inc
jge
dec
sbb
jg
xchg
inc
mov
sahf
mov
lea
sbb
or
pop
adc
aaa
inc
dec
hlt
cmp
clc
fcomip
in
cmpsb
aam
leave
push
push
add
sub
jg
pushl
xor
inc
pop
mov
in
push
ficompl
decl
push
sub
pop
stc
leave
push
mov
fcomps
frstor
pop
shll
jmp
mov
gs
cmp
out
pop
pop
ret
jg
pop
xor
dec
sbb
rorl
pop
icebp
call
out
out
mov
test
and
xor
pop
je
push
cwtl
dec
int
iret
ljmp
jp
lret
pop
movsb
inc
jbe
or
imul
lahf
push
xchg
mov
ljmp
pop
addr16
inc
jae
or
rcll
mov
adcb
jl
mov
fstl
mov
subl
test
mov
push
movsl
decl
sbb
xchg
sbb
push
pushf
xor
cmp
cli
iret
and
dec
sub
lcall
pop
push
and
sub
outsb
pusha
in
es
mov
inc
push
push
cmp
pop
imul
sbb
int
ljmp
jg
cmpsb
hlt
fdivrs
pop
push
add
inc
iret
lfs
cmp
ret
jmp
xchg
stc
or
adc
xor
lahf
jge
popf
rcrl
mov
mov
scas
aad
mov
pop
je
mov
and
insb
stc
and
push
cld
incl
add
jp
lods
add
stos
das
insl
inc
sbb
push
fs
jl
mov
jg
add
or
push
iret
push
test
faddl
cmpsb
repz
and
ja
push
mov
js
jg
mov
xor
aaa
cld
add
jb
aas
mulb
js
psubsw
loop
sbb
call
jmp
fsubs
mov
add
push
clc
and
leave
cmc
fsubl
mov
stos
lcall
mov
xchg
call
fidivrl
cwtl
shrb
mov
dec
mulb
rolb
jmp
call
inc
imul
xchg
lahf
call
sbb
pop
mov
sub
or
mov
fwait
into
lcall
pushl
loope
decl
push
or
xor
push
xor
jl
fistl
cmp
jmp
call
cli
decl
mov
insb
pop
mov
inc
je
xlat
cltd
xchg
and
fcomip
mov
mov
filds
mov
mov
std
aaa
cld
jmp
out
and
sub
xor
mov
repz
push
pushl
and
add
gs
add
push
gs
out
ds
imul
pushf
clc
cli
adc
inc
sub
stos
mov
std
dec
jns
outsl
clc
incl
cld
dec
sti
xor
adc
hlt
xorb
dec
mov
insl
adc
mov
clc
shll
ja
mov
cmp
mov
mov
das
fdivp
mov
es
int3
sub
call
dec
dec
jmp
insl
cmp
mov
out
sti
fcoms
jmp
jl
push
mov
push
sti
movsb
or
and
xchg
adc
ljmp
hlt
or
int
sbb
push
insb
std
xchg
gs
mov
add
call
dec
addr16
ja
insb
xor
cs
sub
loope
dec
mov
call
pop
mov
es
lods
inc
push
lods
mov
ret
pop
or
jo
xchg
push
dec
stos
jns
add
sbb
in
mov
jns
lds
mov
cld
ljmp
fdivs
cmp
mov
or
jbe
icebp
outsb
gs
decl
je
jns
cltd
cmpsl
adc
add
leave
mov
dec
rcl
aad
pushl
mov
pop
mov
jmp
xchg
out
inc
arpl
in
hlt
mov
and
aam
lods
ds
and
and
xor
xlat
daa
dec
jg
ljmp
and
pop
call
adc
sti
adc
in
repnz
mov
push
hlt
xor
and
push
test
out
cli
adc
cwtl
imul
pop
clc
lcall
push
cwtl
outsb
pop
or
testb
clc
dec
sti
lods
test
inc
add
mov
push
pop
insl
and
push
inc
xchg
ljmp
mov
mov
adc
xchg
jmp
xchg
cmp
in
stos
xlat
cmpsl
jo
adc
jmp
cmc
lret
mov
imul
adc
push
xchg
fstpt
xor
cmp
pushl
cmp
push
jge
imul
jae
mov
dec
gs
sub
pop
repnz
push
ljmp
incl
dec
int3
jns
fucomp
mov
mov
inc
es
inc
mov
jp
or
shrb
push
or
jmp
jne
push
inc
fwait
cwtl
jecxz
dec
push
jae
adc
inc
fdivs
lods
fwait
test
inc
sbb
lods
mov
hlt
lcall
push
push
shll
fidivrl
shrl
cmp
mov
incl
leave
mov
stos
sub
and
mov
lods
cmp
cmc
sbb
repz
mov
push
lock
jmp
cmc
cmp
orl
js
scas
mov
icebp
movsb
and
jnp
out
push
mov
cmpb
cmpsl
jno
nop
pop
les
pop
lcall
mov
pop
or
pop
ret
add
lret
loope
mov
and
pushl
insb
and
jno
sahf
and
in
aad
ljmp
jp
pop
mov
jecxz
adcb
fstpl
mov
lret
movsl
data16
lcall
and
lahf
mov
push
and
fisubrl
shrb
movsb
xchg
cmpsl
repnz
mov
xchg
int
ljmp
pop
or
sahf
fwait
pop
nop
cmc
decb
test
jg
mov
shll
jb
mov
shrb
or
jg
test
cmp
cmp
hlt
sub
push
aas
push
pop
sahf
pop
mov
mov
pop
sbb
inc
mov
pop
ret
mov
call
lret
clc
push
or
aam
mov
mov
loop
stos
or
mov
mov
pushl
inc
adc
or
dec
cmpsb
in
dec
scas
daa
inc
nop
cmp
adc
mov
pushl
movsb
aaa
dec
das
mov
sub
hlt
jmp
bound
jne
pop
inc
lret
cmc
dec
jmp
idivb
icebp
pop
pop
inc
fsubs
cmpb
gs
adc
adc
incl
mov
pop
lods
and
cld
dec
sbb
in
test
fsubl
ds
mov
jns
mov
test
xor
insl
and
jb
push
test
decl
mov
dec
push
xchg
cld
addr16
ret
insb
ret
pop
cs
xor
iret
rcr
jne
lcall
js
push
jns
repnz
ffree
loope
cmpsb
pop
lea
pop
clc
mov
jmp
inc
or
pop
cmp
lods
test
sub
fcomip
pushl
addr16
cmp
jns
orl
pop
dec
les
mov
jnp
lock
ljmp
sub
xchg
jno
sub
add
nop
and
mov
dec
dec
jo
call
pop
sub
dec
pop
add
aaa
add
mov
pushf
pop
push
icebp
aam
rolb
or
lcall
cmpsb
jmp
outsb
es
jbe
jb
jecxz
sbb
xchg
and
sub
mov
mov
xchg
xor
aam
out
mov
loopne
inc
popf
sbb
cmp
in
push
int3
stos
ljmp
push
ret
cmp
jmp
add
xor
roll
jmp
repnz
mov
sub
and
pop
xlat
gs
data16
stos
and
mov
decl
jp
mov
add
popa
es
scas
cmp
stos
cs
pop
inc
and
add
sub
sarl
out
mov
jg
jmp
popf
mov
add
xor
cltd
cmp
lcall
mov
push
mov
push
out
dec
imul
jmp
loopne
pushl
fldcw
cmp
mov
mov
inc
push
movsl
or
mov
in
adc
add
pushl
dec
mov
fcompl
aad
call
leave
cmc
mov
inc
jecxz
cmp
or
add
outsl
xchg
je
fwait
jl
sub
mov
add
cmp
lea
adc
push
into
aad
decl
sarl
and
in
out
mov
inc
lods
loope
nop
push
popa
ret
imul
mov
ret
aas
xor
mov
xchg
adc
xor
pop
sub
mov
mov
test
jae
sbb
sub
push
pushf
pushf
mov
mov
adc
adc
cmpsb
fldl
call
das
mov
clc
pop
call
jnp
addl
sbb
rorl
push
mov
movsb
adc
jg
imull
sub
push
push
fisubs
sbb
and
lea
pop
xchg
cmc
dec
repz
enter
shl
mov
movsb
cmovl
sub
movsb
push
sbb
lcall
push
mov
cmc
test
jmp
in
inc
fwait
scas
xlat
ret
insl
fdivrp
call
push
sub
mov
push
mov
fs
shll
jnp
out
pop
xchg
xchg
or
add
pushf
inc
ljmp
and
add
es
lcall
and
sbb
loope
in
mov
call
jle
sub
stc
imull
movsl
adc
std
lods
jge,pt
mov
adc
dec
cmp
push
enter
mov
lcall
or
clc
or
mov
pop
loop
jle
inc
fcomip
adc
dec
fistpl
xor
mov
into
fcmovne
enter
xor
ljmp
push
xor
mov
cwtl
dec
mov
mov
sarb
icebp
and
jp
xor
div
mov
lcall
or
enter
lcall
push
cmpsb
mov
int
mov
out
mov
sahf
pop
dec
iret
cmc
mov
cmpsb
sub
or
mov
jb
orl
sbb
jae
ja
ds
decl
aad
ficomps
pop
dec
stos
inc
fsubr
mov
xor
mov
or
lret
xchg
mov
stos
pop
lahf
sti
mov
pop
fmuls
sbb
lods
incl
test
es
mov
int3
xor
clc
sahf
mov
mul
stos
aas
mov
mull
mov
incl
sub
sub
sub
in
fwait
loope
cmpsb
inc
fisttpl
ret
inc
lcall
pop
and
push
add
out
and
and
xchg
and
cmp
inc
dec
dec
cmc
mov
mov
mov
or
outsl
xor
jle
out
add
insl
in
or
jb
test
insb
outsb
movsl
mov
sbb
pushf
ds
push
ret
cmp
pop
sti
xchg
or
outsl
jp
lcall
out
inc
xor
push
sbb
inc
mov
mov
loop
scas
xchg
in
mov
lahf
ret
in
ja
stos
rcrl
add
frstor
ficomps
test
js
adc
test
push
cmp
sub
sahf
cld
pusha
in
jmp
loope
mov
gs
pop
jge
mov
and
dec
jne
mov
cmp
jp
pop
test
sti
sbb
lock
stc
jp
push
call
imul
ret
pushf
pop
inc
fcmovnu
or
call
mov
pop
inc
loop
fwait
lahf
xchg
jb
testl
push
cmp
mov
dec
lcall
mov
or
adc
lcall
cld
adc
sti
inc
outsl
cld
dec
stos
cmp
jmp
mov
cmp
mov
cs
popf
pop
jne
gs
cmc
std
adc
cwtl
sub
jmp
sub
cld
arpl
lret
pop
lahf
cmc
les
and
cwtl
sti
hlt
shrb
pushl
inc
add
xor
mov
insl
outsb
das
sub
inc
sbb
imul
decl
pop
shl
mov
jb
rorb
adc
popa
sub
loopne
cmc
fcmovnb
out
idivl
mov
inc
insl
shll
test
sbbl
jl
cltd
arpl
movsb
insb
out
sub
pushl
dec
pop
aad
push
or
jg
loopne
arpl
ret
sub
loope
insl
cmp
sahf
out
scas
jl
xor
pop
add
int
sub
push
ret
mov
shlb
lret
loop
cli
outsl
cmpl
call
push
cwtl
mov
mov
or
fdivl
mov
push
das
popl
dec
mov
xchg
xchg
pusha
cltd
pop
cmp
lcall
fisttpl
movsl
fcoml
test
inc
push
es
push
loop
mov
loopne
push
incl
ja
jae
cmp
cmpsl
lahf
iret
mov
fcomps
and
daa
push
inc
inc
jmp
cmp
adc
es
xor
jno
add
cmp
nop
jl
xor
and
lcall
sar
or
lret
lcall
lock
push
cltd
dec
lret
out
or
mov
add
test
push
jg
stos
add
pop
in
sub
add
ja
call
stc
sbb
cwtl
adc
in
inc
jle
add
scas
mov
jmp
scas
xchg
sbb
insl
or
frstor
cltd
dec
or
ficompl
sarb
ljmp
int3
popf
mov
dec
int
push
and
and
pop
or
mov
or
jecxz
clc
das
hlt
enter
lcall
cmp
inc
xchg
int
and
pop
pop
jmp
shrl
decl
or
adc
pop
adc
xchg
je
sub
mov
repnz
push
jmp
cmp
add
push
daa
ds
in
js
popf
xchg
ss
decl
bound
imul
rolb
sahf
popa
push
sub
arpl
mull
push
jg
jmp
aas
andb
ds
addl
rolb
stc
dec
jle
int
xchg
inc
cltd
xchg
outsl
xchg
hlt
fstpl
mov
jns
or
and
add
mov
ljmp
jnp
ror
jmp
xchg
outsl
push
or
add
fadds
add
test
bound
lcall
mov
cmp
fnsave
loopne
sub
ficomps
ljmp
push
add
cmp
sti
pop
stos
push
and
cli
mov
std
stos
cld
cmp
jg
fadd
arpl
mov
lock
int3
fs
dec
xchg
movsl
jecxz
jge
cmpsb
lcall
imul
js
repz
je
dec
imul
jp
pop
push
leave
hlt
insl
lock
jmp
or
test
lret
mov
dec
out
sbb
push
jno
xor
hlt
lcall
das
sub
sti
mov
and
push
sub
es
lcall
mov
mov
xchg
cmp
mov
xchg
push
ret
or
nop
mov
jecxz
mov
std
out
xlat
or
inc
cmp
inc
dec
xchg
pop
adc
xchg
push
shll
mov
adc
jo
jmp
cmc
out
or
mulb
add
push
outsb
ds
movq
inc
imul
lcall
les
out
inc
xchg
std
pop
push
mov
pop
lret
or
jb
jp
xchg
and
subb
sub
xor
in
outsl
bound
call
mov
mov
hlt
jmp
jp
push
aad
cmp
sahf
mov
jp
incl
mov
cmpsl
in
repnz
mov
fwait
sbb
sub
cli
in
movsl
popa
jo
xchg
cmpsl
and
hlt
jmp
push
cmp
lods
pop
pop
lcall
sbb
fcos
inc
pop
add
call
add
addl
sbb
or
ss
call
loope
pop
adc
xor
stos
sub
xchg
psraw
or
cmp
sbb
dec
push
in
push
xchg
hlt
int
int
inc
sub
testl
ret
decl
push
ljmp
lds
test
adc
icebp
mov
ficoms
xchg
imul
adc
movsb
idivl
push
and
addr16
ds
enter
loope
sbb
cmp
std
aam
ja
inc
mov
dec
arpl
lock
push
fmulp
mov
cs
pusha
adc
fwait
mov
cli
push
mov
scas
mov
or
mov
aam
push
xchg
mov
aad
push
lock
push
dec
lahf
jae
dec
mov
pop
ficoms
incb
cmc
push
xchg
clc
lods
mov
sti
or
mov
sbb
data16
dec
dec
xchg
sbb
inc
pop
aad
xor
ljmp
pushl
xchg
cmp
xchg
cmp
adc
xor
push
scas
in
jae
jg
ljmp
stc
scas
loop
push
fidivs
movsl
xchg
loopne
pop
sub
incl
or
adc
cmp
cli
les
das
out
mov
loope
adc
ss
mov
and
test
or
mov
rorl
jle
data16
fldl
add
arpl
dec
push
icebp
mov
decl
add
sarl
loope
repz
insl
jne
push
jbe
lcall
jne
pop
insl
lahf
jo
lea
sbb
sub
pop
or
aam
je
cld
ljmp
jbe
stos
scas
pop
cmp
xchg
mov
xchg
insb
mov
out
and
push
popa
adc
adc
ret
xchg
or
loopne
inc
js
rcl
sub
dec
inc
adc
negl
cmpsb
test
or
ljmp
insl
enter
mov
dec
mov
aad
or
xor
call
dec
pop
dec
roll
enter
mov
jmp
push
mov
loop
pushl
pop
and
mov
inc
mov
pusha
rclb
or
cmp
call
imul
jg
je
dec
inc
push
loopne
test
or
mov
rol
jg
movsb
ljmp
or
jnp
sti
mov
insl
fs
iret
hlt
call
jl
repz
outsb
add
into
aaa
push
out
arpl
mov
or
xlat
xor
sub
clc
xchg
es
sub
mov
mov
aam
pop
push
movl
xchg
cmp
rcr
cltd
mov
jbe
cli
inc
dec
inc
lret
sub
aas
mov
or
adc
cld
cltd
addr16
aas
lcall
pusha
sbb
mov
out
jae
pop
add
cmp
mov
cld
mov
jg
ljmp
popf
fbstp
pop
into
pushl
mov
dec
dec
fcoms
ss
inc
mov
daa
fnstenv
outsl
test
and
jae
decl
cmpl
pop
xor
mov
cmp
cld
mov
pusha
mov
popa
add
decl
pop
pop
filds
or
rorl
mov
add
push
loop
decl
and
fildll
push
cmpb
test
in
pop
xchg
dec
cmpsb
mov
mov
push
mov
cmp
cli
mov
cmp
jg
int3
and
shlb
or
rorb
int3
int
test
pushfw
jae
lret
cwtl
push
mov
pop
std
inc
fsubrs
clc
inc
test
fdivrp
add
inc
aas
aaa
pop
dec
or
mov
out
adc
pop
mov
loope
and
mov
decl
lea
fmull
fidivrl
jecxz
call
adc
dec
ret
test
cmpsb
mov
gs
add
push
out
cmc
fldenv
fldcw
push
dec
sub
mov
int
xchg
movsl
adc
daa
mov
xor
and
jmp
scas
sub
push
out
hlt
jae
adc
nop
sbb
sbb
enter
xchg
sub
jmp
mov
mov
lcall
iret
inc
loop
jnp
jo
mov
sub
pusha
clc
leave
and
rolb
outsl
xchg
push
jnp
xor
aas
xchg
dec
rorl
je
pop
xor
pop
mov
lahf
in
mov
push
push
mov
and
mov
push
xor
pushl
push
adc
je
and
inc
nop
add
pop
lods
scas
mov
push
lock
lahf
decl
mov
mov
pop
dec
jmp
fwait
fs
je
sbb
call
out
push
add
add
repz
mov
jmp
testb
lcall
in
cmp
push
out
cmovg
daa
mov
sub
jmp
fistl
add
mov
sbb
roll
pop
aad
and
xor
sub
out
clc
incl
adc
pusha
icebp
out
add
xor
or
mov
add
sbb
or
fnstenv
incb
jmp
pop
jl
push
or
sti
scas
cs
mov
mov
pop
lods
lods
scas
lcall
int3
xor
icebp
mull
cwtl
xor
jae
xchg
mov
jmp
loopne
ljmp
in
fdivrp
sbb
outsb
inc
inc
mov
test
push
in
mov
xchg
incl
or
push
cli
xchg
data16
xlat
xor
movsl
mov
xor
pushl
lods
jae
scas
adc
das
mov
enter
fsubrl
sub
call
inc
mov
push
mov
push
and
or
ficoms
movb
push
jnp
rolb
pop
cltd
sub
enter
stos
push
shlb
cmpsb
lods
or
clc
jmp
mov
push
cld
sti
ret
dec
jmp
inc
pop
xor
es
xor
mov
fwait
ja
decl
into
repz
iret
pop
push
in
xor
pop
jnp
imull
and
push
add
std
out
sub
lock
out
or
loope
and
or
aam
fisttps
rorl
jg
pushf
cmp
in
cmp
mov
fisubs
test
setge
rorb
pop
push
adc
icebp
mov
sbb
call
movsb
outsl
adc
jl
jecxz
call
sbb
dec
loope
jle
ljmp
mov
jl
sbb
mov
mov
dec
scas
aam
call
mov
pushl
out
lahf
adc
addr16
out
dec
arpl
xlat
push
mov
mov
ljmp
scas
lock
push
push
ja
push
jns
incl
in
dec
xor
xchg
sbb
dec
xor
icebp
sbb
sub
ret
aad
sbb
ljmp
sub
aam
inc
mov
mov
or
and
imul
xor
mov
out
shrl
fnstcw
or
in
int3
cmp
popf
dec
inc
xchg
xchg
jmp
enter
insb
and
inc
sbb
pop
push
loopne
xchg
imul
cmpsb
int
insl
adc
push
adc
inc
jecxz
push
addb
shl
std
sub
or
call
mov
mov
cmpsb
mov
push
inc
and
xchg
out
test
test
call
and
syscall
cmp
cmpsb
int3
pop
mov
iret
ss
std
inc
movsl
push
lcall
loop
stc
xchg
stos
movsb
add
push
cmp
inc
mov
adc
pop
or
decl
push
ss
add
ja
mov
lock
jmp
xchg
mov
jg
js
hlt
inc
or
push
testb
push
and
js
decl
cmp
les
mov
ja
in
cmc
sarb
test
cmp
imul
rorb
sbb
add
jge
mov
xor
ljmp
add
sbb
push
and
jbe
lock
test
inc
das
lods
or
fdivrp
fdivr
adc
jb
xor
push
js
ss
incl
cld
decl
setle
leave
inc
mov
dec
mov
lods
pop
iret
pushl
mov
movsb
mov
je
dec
or
adc
pushl
xchg
mov
sub
push
add
jmp
xor
and
mov
popa
xchg
cld
sub
mov
mov
in
insb
xorb
and
cmp
adc
jg
decl
fmul
jnp
jb
pop
push
xlat
js
movsl
or
jg
incl
popa
jmp
lock
push
aaa
adc
jmp
mov
mov
lahf
in
ljmp
cli
cld
ret
adc
icebp
sub
add
call
fsubr
cmc
out
fimull
sub
jbe
insb
cli
pop
ljmp
jns
push
adc
aad
pushl
mov
fiadds
sahf
sti
cld
out
scas
rolb
ret
rcr
add
call
adc
out
cli
call
iret
shll
jge
sahf
add
adcb
dec
pop
fldenv
outsl
aad
cmp
jbe
cwtl
ja
pop
jb
sub
fdiv
arpl
std
sub
ja
xor
std
inc
fs
test
jecxz
adc
mov
pop
mov
jp
or
ds
jbe
orb
aaa
in
add
sub
icebp
cmp
push
pop
pop
in
sti
outsl
xor
and
add
decl
mov
aam
inc
push
jecxz
xchg
jg
cmpsl
lcall
ja
mov
lahf
out
sbb
cs
mov
xor
loop
pop
jg
cmp
sbb
xchg
xor
mov
dec
mov
and
out
clc
mov
sahf
out
inc
add
leave
xor
pop
pop
inc
subl
mov
and
mov
fs
stos
pop
mov
adc
bound
dec
mov
lods
adc
outsl
push
jg
jg
loop
xchg
xor
out
in
and
inc
sbb
cmp
lcall
outsl
clc
decl
scas
push
imul
repz
inc
shll
out
sti
lret
mov
iret
push
mov
jmp
adc
cmp
out
addr16
sub
cmp
and
mov
fdivr
jmp
xchg
dec
incl
xchg
nop
in
cmpsl
cmc
jmp
insl
ljmp
mov
mov
adc
lcall
mov
lds
inc
lahf
dec
sbb
lret
ljmp
pop
cmc
lea
xor
jle
jae
clc
cld
cmpsl
in
mov
add
xor
aam
mov
cmp
xchg
sub
ljmp
jle
and
jnp
out
repz
leave
xchg
call
jle
mov
and
sbb
mov
jg
mov
std
mov
jg
lahf
xor
lods
mov
xchg
mov
nop
movsb
jno
push
sub
sub
and
clc
std
je
lds
cmpb
scas
shrl
mov
xor
pushl
jp
repz
jmp
push
push
sar
dec
add
xlat
daa
sub
xchg
hlt
mov
outsl
push
xor
aas
add
push
fisubs
daa
test
push
cmp
es
leave
loope
jmp
push
into
pop
inc
ja
dec
dec
jne
xor
fstl
xchg
call
push
fs
cmp
mov
pop
pushf
push
outsl
std
jb
adc
mov
pusha
mov
cmp
push
sub
aad
mov
adc
push
cmp
push
sub
push
push
mov
adc
mov
incl
sbb
loope
add
inc
in
sar
cmp
ljmp
stos
inc
mov
inc
and
hlt
mov
and
gs
sub
mov
out
aam
push
imul
dec
mov
daa
and
inc
jo
mov
push
incl
out
inc
shrl
jb
mov
je
add
data16
or
ljmp
sub
icebp
mov
clc
jge
xlat
sahf
cmpsb
addr16
cmp
ficompl
hlt
addl
aam
mov
cmp
xchg
test
jmp
xor
sub
aam
mov
pop
jmp
inc
in
cmp
cmp
icebp
pop
pushf
push
rorb
shrb
popf
es
cwtl
sub
and
inc
push
ljmp
imul
and
xor
and
das
rolb
xor
push
lcall
sub
jnp
aad
xor
push
aas
pushf
addr16
push
and
xchg
notb
rcrb
dec
xor
mov
or
dec
les
loope
push
xlat
mov
in
lea
jmp
jmp
jo
loopne
sub
xchg
arpl
fnstcw
mov
or
jmp
in
lahf
outsb
and
stos
je
fwait
pop
push
insl
sbb
into
jmp
ljmp
dec
push
mov
or
scas
cmp
inc
fsubr
aaa
ja
xchg
mov
xor
lcall
dec
and
pop
adc
test
cwtl
call
mov
test
push
cltd
ljmp
dec
nop
loope
push
pop
adc
out
mov
xchg
rorb
repz
mov
xor
cmp
stos
jg
inc
lods
pop
js
sarl
lcall
mov
mulb
or
jne
inc
fs
sbb
outsl
cltd
inc
jle
jmp
das
clc
call
mov
mov
dec
and
dec
or
in
mull
cmpsb
sbb
xor
or
shlb
daa
fsubs
stc
fildll
sbb
rorb
pop
cmp
cmp
jnp
lods
lock
jl
decl
lock
sti
rorb
je
sub
sti
mov
lds
adc
push
out
mov
cli
lcall
sub
push
js
mov
outsb
in
clc
mov
or
ljmp
lods
adc
out
shrl
stos
cmp
movsb
and
aad
cmp
lcall
and
addb
dec
repnz
insb
outsb
xchg
pop
stc
mov
addb
pop
jge
mov
fdivrl
fbstp
mov
pop
jl
rcrb
movsb
shlb
cmc
push
push
mov
pop
stos
jl
lcall
cmp
shl
pop
movsb
cmp
and
sti
pop
in
and
bound
insl
jne
mov
push
mov
shlb
cwtl
lods
pop
data16
repz
cmpsl
inc
mov
rorb
xchg
ljmp
mov
iret
cwtl
sbb
mov
pusha
xchg
lcall
add
inc
pop
stos
dec
stc
xor
fwait
repz
loop
and
movsl
jnp
fcompl
jge
shrl
lods
test
out
incl
call
xchg
cmp
dec
je
fs
sbb
push
sub
lcall
xor
inc
js
int3
sbb
jmp
sar
and
sar
dec
rcl
mov
push
push
and
out
adc
call
sarb
sti
pop
xor
test
jmp
stc
movsl
subb
in
jmp
stos
shrb
fisubs
and
sbb
testb
sahf
ret
xchg
out
pop
es
lcall
test
cmpsl
loopne
or
divps
mov
jbe
xchg
xchg
decl
insl
dec
test
add
aaa
sbb
jp
add
aas
xchg
jmp
loopne
dec
fistpll
add
jg
push
faddl
pop
ss
aas
and
sub
imul
pop
lds
jecxz
popa
jg
mov
add
fsubs
xchg
ja
fists
fstps
add
incl
cmp
dec
dec
dec
mov
dec
cs
and
out
test
ss
gs
push
mov
mov
es
pushl
pop
and
sub
jge
and
jecxz
outsb
jb
sub
xchg
int3
pop
repz
pushl
jp
mov
sbb
adcl
pop
mov
lds
pushl
fs
pop
xor
sbb
clc
das
cmc
dec
xorl
mov
mov
jb
jg
ret
movsb
sti
imull
stos
pop
rol
cs
stos
jg
std
std
filds
nop
lret
pushf
mov
movsl
push
xchg
aas
mov
das
adc
hlt
xchg
les
or
decl
out
mov
in
dec
into
lret
hlt
inc
out
aam
add
sub
lea
mov
js
inc
int3
dec
shl
lods
test
jg
and
pop
mov
push
push
add
mov
incl
iret
das
mov
pop
xor
mov
out
cli
decl
fcoms
jg
repnz
cmp
outsl
xchg
test
popl
rorl
jg
das
sar
pop
push
pop
fimull
or
xor
repz
jmp
loope
call
mov
sub
aaa
cmpsb
sbb
cmc
out
mov
jbe
cmp
fsubl
decl
mov
jl
mov
mov
jge
dec
mov
push
push
push
xor
incl
and
or
cmp
dec
jge
mov
pop
hlt
mov
jmp
add
cmp
sbb
and
mov
cmp
sub
out
xchg
mov
jmp
push
js
pop
jns
mov
pusha
mov
jbe
out
dec
orb
add
incl
sub
cmp
sub
sub
push
std
lds
adc
call
cltd
rcr
mov
or
or
insl
xchg
ret
mov
std
dec
stos
lahf
pop
test
lock
lds
inc
jg
jecxz
and
mov
orl
fstps
or
jmp
scas
mov
or
inc
jne
inc
jo
fdivrp
ljmp
xor
mov
add
push
lock
inc
notb
outsb
ret
mov
stos
das
ljmp
sarl
bound
sub
fcomps
mov
jmp
mov
inc
out
and
mov
adc
outsb
or
mov
dec
fs
test
imul
or
jg
mov
nop
pop
sarb
push
jno
push
outsl
ss
out
lcall
movsb
mov
jae
sub
std
xchg
andb
jbe
or
cmp
stos
fcmovu
cs
mov
js
out
mov
mov
mov
add
mov
inc
bound
pushfw
fsubl
jg
inc
dec
fcoms
imul
push
nop
out
mov
xchg
cmp
ljmp
sub
loope
mov
jb
inc
stos
insl
inc
fwait
sarb
add
imul
pushl
aaa
jne
xchg
add
ret
movsl
jl
xchg
inc
xchg
or
rcl
ljmp
jp
lcall
jp
and
cld
rcll
xor
dec
stc
fistpl
mov
cmp
call
xor
das
std
fadd
dec
js
fiadds
jne
mov
bound
mov
xchg
addr16
lcall
and
mov
mov
scas
ret
push
jp
mov
pop
jmp
push
clc
popf
je
mov
fiadds
rcrb
ljmp
pop
mov
insl
sti
jecxz
push
fcoms
cld
loop
xchg
pop
lcall
xor
xlat
push
or
pop
data16
sub
incl
dec
xor
pop
in
icebp
mov
sub
adc
add
push
mov
mov
incl
out
pushf
mov
or
leave
ret
ss
add
ret
pop
lea
mov
jg
xchg
lcall
andl
sti
mov
xor
sub
or
jle
repnz
ret
push
or
add
mov
movsb
mov
sar
decl
lret
cmp
adc
sbb
dec
mov
mov
out
push
pop
inc
movsl
inc
mov
inc
cld
pop
push
dec
mov
ret
dec
and
pushl
pushf
adc
or
les
push
jl
xchg
cmp
xchg
inc
inc
stc
mov
sbb
ljmp
xchg
adc
xchg
cld
lahf
jg
incl
scas
pusha
push
js
sahf
data16
push
lock
lcall
lcall
cli
mov
imul
xor
pop
cmp
stos
lods
mov
outsb
cmp
jl
inc
mov
mov
sbb
jge
test
in
cmp
xchg
mov
mov
xchg
xor
dec
push
add
fldl
push
inc
cmp
xchg
jg
mov
lock
js
sub
jne
inc
xchg
fistpl
shr
dec
or
call
jmp
arpl
xchg
cmp
sti
fs
sub
or
and
pushf
lds
movsb
dec
add
lahf
fiadds
ret
xor
mov
lss
lret
nop
mov
pop
cmp
enter
cmc
push
repnz
in
dec
mov
fistpll
js
sub
jl
fsts
cmp
icebp
lock
je
jg
movsb
push
push
dec
push
mov
cmp
jle
xor
xchg
lcall
mov
sahf
js
mov
stc
mov
push
inc
in
lds
jp
sub
decl
mov
add
adc
xor
fcompl
aas
sbb
adc
int3
jnp
pushf
loopne
call
or
or
dec
pop
cmp
dec
test
add
in
cmp
dec
ds
inc
mov
lahf
aas
mov
out
adc
gs
movsl
aaa
pop
jae
repz
inc
cmp
nop
cld
xchg
in
pusha
rclb
fnstcw
lods
mov
rcll
lret
jle
fdivp
cmp
filds
icebp
pop
int
xchg
lcall
cwtl
daa
cld
shr
jmp
shlb
mov
mov
and
add
mov
mov
mov
call
popl
jns
jg
cs
lcall
hlt
jle
pop
popa
jp
dec
cmpsb
vpunpcklqdq
sahf
clc
sbb
push
inc
xor
daa
pop
add
and
shrb
aad
push
cmp
daa
cmp
mov
inc
ljmp
dec
sub
lods
dec
pop
je
xchg
aaa
ss
incl
jmp
cmpsl
arpl
mov
pop
in
sarl
aad
ds
xlat
insb
shr
cs
decl
outsl
and
stos
hlt
repnz
mov
add
sub
aas
pop
jns
stos
dec
rorl
stos
ret
cmp
xor
enter
jp
sbb
shll
pop
incl
cmp
lret
push
imulb
cmp
push
stc
hlt
adcb
mov
mov
aas
pop
into
pop
pop
mov
fcomps
mov
cmp
mov
enter
adc
dec
ror
addb
call
je
cmp
cmp
ret
inc
cli
sub
and
call
mov
cmp
cmpsl
jge
je
dec
cmpsb
movsl
test
fidivl
jbe
add
pushl
or
in
jae
mov
and
adc
inc
arpl
stos
call
stos
rol
pop
mov
lcall
push
jmp
mov
jnp
lahf
stc
mov
jnp
gs
dec
jns
cmpsl
add
fnsave
sub
mov
incl
out
ja
stc
out
cmp
cmp
insl
cmp
mov
inc
xchg
in
mov
int
sub
ljmp
push
call
ljmp
imul
fisttpll
pop
mov
call
imul
add
sbb
xchg
outsb
sub
xchg
stos
mov
mov
mov
cld
sub
cmpsb
jns
jle
push
in
popf
adc
add
decl
orb
lret
and
shll
xchg
das
decb
add
or
mov
daa
incl
adc
xor
lods
stos
iret
push
xchg
in
aad
jmp
pop
inc
xchg
mov
ficoml
mov
aas
jae
mov
ljmp
pop
outsl
dec
in
aam
scas
mov
gs
pushl
mov
aad
push
test
repz
and
lock
adc
das
insb
ja
std
jmp
cltd
test
into
adc
pop
cmpsb
insl
lods
add
jmp
push
jmp
test
iret
pop
push
out
and
xor
clc
fcomip
cmp
adcl
xlat
into
mov
inc
xor
jmp
push
lcall
movsb
movsb
inc
or
add
push
icebp
lods
loopne
ja
and
cli
cmpsb
call
andb
dec
mov
js
and
mov
push
repz
jne
pop
aaa
and
or
pop
lods
xor
pop
test
lds
repz
mov
ss
idiv
outsl
incl
filds
adc
fisubl
fidivrs
xchg
clc
movsl
mov
filds
jp
jmp
jle
dec
xchg
out
dec
cmp
mov
ljmp
aad
in
cmpsb
pop
and
pop
jb
jge
or
xchg
jge
stc
dec
pop
lock
inc
incb
shll
lock
jbe
dec
rcr
and
or
incl
mov
push
das
mov
decb
insb
test
icebp
enter
mov
xchg
or
call
inc
mov
adcl
movsb
mov
call
int
adc
decl
leave
lahf
mov
test
jne
dec
pushf
add
sbb
jns
adc
repnz
lds
xor
fs
xor
int3
sbb
call
jp
fldl
arpl
and
sub
cmp
xchg
xor
xchg
call
jmp
mov
dec
sarb
and
push
decl
imul
push
scas
adc
pop
fimull
jbe
sbb
decl
inc
in
mov
incl
sbb
test
mov
ud0
call
cmp
and
push
cmp
mov
adc
mov
add
lods
add
jmp
sbb
and
inc
xchg
mulb
lock
rorl
pusha
jg
pop
loopne
lahf
push
mov
fwait
push
xchg
jge
inc
and
imul
push
pop
jge
test
cmpl
mov
add
in
pop
inc
call
cmpsb
insb
mov
and
lcall
mov
cmc
popf
out
adc
or
mov
mov
icebp
or
rorl
jg
shll
mov
je
lods
add
add
lcall
add
loop
pop
cs
cmpsl
sub
pop
iret
mov
sbb
imul
and
stos
mov
in
jmp
movsl
cmp
or
loope
outsl
lods
cmp
aas
mov
aam
movsb
ja
push
rclb
push
dec
fwait
insb
loopne
fwait
mov
xchg
dec
lcall
stos
or
out
outsb
adc
int
inc
inc
xor
pop
lcall
sub
subb
aaa
pop
push
push
jecxz
and
les
incl
into
adc
jb
push
mov
imul
lds
aas
adc
fs
jne
call
pop
push
fxtract
jne
dec
push
ret
out
sbb
pop
test
dec
jl
test
mov
incl
sbb
add
dec
jl
xchg
inc
test
or
divl
cld
pushl
lock
movsb
in
sbb
in
or
popa
adc
ficompl
repz
insl
jns
data16
pop
cmpsb
jae
xchg
jns
std
sar
mov
push
les
idivl
mov
dec
nop
xchg
push
cwtl
adc
add
lock
cli
rcrl
cmp
pop
or
push
inc
xor
ljmp
jle
pop
adc
ljmp
xchg
mov
das
lahf
sbb
daa
or
and
lcall
xchg
and
xchg
rcrb
in
adc
push
nop
dec
sub
mov
in
jg
call
adc
out
daa
sub
outsl
sahf
test
ljmp
xchg
addr16
rol
add
cmc
sbb
lahf
adc
xor
aad
pop
sub
repnz
incl
mov
xchg
mov
outsb
repz
imul
incl
test
cmp
xor
mov
bound
lcall
movsl
arpl
xchg
pusha
inc
push
mov
rclb
outsl
push
loopne
and
icebp
stos
pop
inc
enter
call
mov
cmpsl
inc
ffreep
push
mov
dec
and
xlat
cmp
fcoms
push
faddl
iret
lret
test
loope
sbb
jmp
dec
adc
pushl
pop
push
mov
andb
push
out
sar
subb
mov
mov
jns
in
imul
adc
repz
jo
pop
pusha
sbb
inc
frstpm(287
rorb
rcrl
push
filds
hlt
and
add
decl
or
mov
or
repz
lods
pop
or
mov
sbb
dec
push
scas
dec
fcoml
xchg
lahf
inc
aad
test
or
dec
decl
add
cltd
aas
jmp
and
cmp
jne,pn
jae
call
sub
push
pop
repz
popf
fwait
adc
add
pop
loop
imul
mov
call
leave
inc
jo
xchg
into
cli
jbe
loopne
sub
sbb
sub
cmp
insb
in
fldenv
jmp
fcomps
loopne
adc
cmc
aad
pop
cmpsb
mov
fadd
jno
aam
add
mov
int
pop
fisubrs
mov
and
insb
and
shrl
ret
push
or
fwait
jb
jmp
xchg
push
mov
inc
divl
loope
ja
xchg
insb
std
sahf
ds
out
inc
dec
dec
cmp
jmp
jl
xor
sbb
add
inc
clc
lret
hlt
inc
adc
lahf
add
call
popa
movsl
das
cmp
cmpsl
scas
xchg
cli
inc
inc
xchg
mov
arpl
jnp
dec
sarb
decl
lock
mov
push
scas
and
sahf
xchg
icebp
subl
jge
cmp
aaa
cld
sub
out
push
jae
ljmp
inc
and
pushl
pop
mov
jmp
mov
inc
xchg
fnstenv
push
repz
shll
subb
jge
or
push
in
ror
jno
sub
mov
das
dec
dec
bound
ss
scas
mov
shlb
pop
lods
and
aad
movsl
jle
cmp
incl
cli
lret
push
lock
dec
hlt
mov
popa
dec
filds
fsts
or
ljmp
or
mov
xor
loop
ljmp
jl
push
sti
loopne
arpl
lock
add
sub
shll
push
and
out
jmp
sub
cmpsb
ret
xchg
js
inc
lret
rcrb
xchg
jne
xchg
decl
cmp
push
push
nop
into
shl
cmp
add
call
sbb
call
loope
jge
mov
jp
out
arpl
sub
or
mov
icebp
decl
push
push
ja
hlt
or
inc
adc
stos
sub
sub
push
xchg
les
leave
or
scas
lea
rcrl
aam
pushl
mov
mov
lds
test
sarb
xchg
mov
lahf
repz
lcall
push
adc
lds
lods
scas
inc
xlat
jecxz
movsb
pusha
cli
test
or
cmp
adc
inc
cs
addr16
jg
in
insb
mov
jecxz
je
jmp
outsb
mov
adc
es
aaa
mov
dec
xor
pop
fnstenv
arpl
in
pop
out
ret
mov
cmpl
dec
xchg
adc
adc
pop
sub
xchg
and
cmp
or
gs
addr16
rcrl
decl
int
repnz
lahf
fidivrl
jnp
mov
adc
call
inc
mov
dec
push
flds
dec
cld
mov
mov
jge
xchg
cmp
es
xchg
decb
adc
jnp
testl
pop
sub
or
ds
aas
cmp
in
or
arpl
cltd
stos
push
stc
pusha
cld
xchg
xor
mov
outsl
test
push
or
adc
aad
mov
ret
cmp
sbb
lds
lock
mov
xlat
rorl
test
daa
loopne
mov
inc
cmpsb
push
and
push
pop
fwait
cli
call
jno
pop
fs
in
and
decl
dec
or
add
outsb
sbb
adc
ljmp
and
lcall
jge
mov
test
mov
inc
add
push
jo
jne
rorl
mov
inc
incl
cmpl
movsl
jns
stos
test
mov
ds
jo
fbld
out
add
adc
jmp
inc
roll
stos
cli
and
pop
mov
mov
ret
sub
cmp
je
addl
aaa
and
lds
add
hlt
insl
cmp
data16
leave
add
dec
aam
addl
cmp
jb
loop
sahf
xor
sub
pop
push
lcall
lcall
popa
cmp
inc
data16
stc
in
pop
test
mov
inc
and
mov
stos
cmp
mov
mov
aam
cmp
xor
out
push
jbe
js
ljmp
push
and
scas
ljmp
in
sbb
mov
lds
call
imul
ss
mov
jmp
std
adc
xchg
imul
lret
icebp
bound
cmpsb
cmp
arpl
jg
je
inc
movsb
xchg
lcall
xchg
and
pop
fld
clc
mov
in
call
xchg
repz
leave
stc
pop
push
outsl
ja
jns
inc
push
jg
add
fs
pop
and
push
xor
cmpsb
push
dec
in
mov
dec
mov
push
ljmp
sub
daa
repz
push
arpl
leave
icebp
scas
popa
push
pop
lea
adc
sbb
push
cld
xor
testb
rclb
mov
inc
and
mov
stos
push
test
add
call
add
test
addr16
rcrl
lcall
fucomip
xchg
inc
jno
repz
call
rclb
lods
les
ljmp
mov
dec
dec
fmull
mov
add
push
cwtl
jnp
pop
push
dec
jg
jecxz
xchg
aas
in
push
popf
adc
fwait
lods
cld
sbb
mov
mov
mov
adc
ret
or
mov
inc
adc
rol
aaa
cld
mov
pop
xchg
outsl
pop
test
fcoms
pop
pop
sub
mov
daa
jl
push
fiaddl
pop
in
jae
jno
cmc
scas
pop
jae
loope
inc
sti
cli
jb
jecxz
xchg
arpl
dec
nop
imul
incl
cs
mov
hlt
dec
ljmp
pop
xchg
mov
stos
sbb
icebp
sbb
stc
aas
daa
cmp
jbe
or
das
enter
decl
subl
jnp
cmp
mov
mov
dec
mov
mov
jg
mov
cmp
dec
ret
dec
lods
aad
pop
lret
lcall
pop
hlt
lcall
push
mov
sbb
cmp
rolb
xchg
sbb
bound
fsubrs
cmpsb
imul
mov
movsl
jae
loopne
ljmp
out
popf
lret
int3
jg
popw
movsl
mov
and
fs
cmp
dec
jmp
or
xlat
rol
inc
cmp
lret
nop
gs
push
mov
iret
pop
not
push
cltd
xchg
jg
icebp
or
push
mov
lret
out
sub
icebp
ljmp
push
fcomps
int3
pop
or
ret
mov
or
inc
jg
into
sub
hlt
mov
sub
pushf
cli
jnp
xchg
push
lea
bound
es
xlat
push
ret
stc
cmpsb
dec
jo
enter
dec
push
pop
roll
mov
ja
dec
sub
mov
ficoml
pop
decl
xchg
stos
push
xchg
ljmp
aam
pop
icebp
pop
and
subl
nop
ds
rorb
push
pop
inc
out
repnz
add
shrb
dec
or
clc
dec
sti
call
dec
test
xchg
lret
add
xor
les
in
pop
pop
loope
cld
outsl
ficomps
jns
push
push
leave
jl
cltd
dec
pop
add
mov
mov
sti
or
push
sbb
sbb
jo
ljmp
lods
sub
in
jl
mov
call
or
mov
pop
sbb
push
add
and
push
fcomip
push
stos
nop
idivl
sub
insb
mov
dec
sbb
lret
ficoml
sub
dec
icebp
ljmp
dec
sarb
ja
cmc
test
xlat
out
rclb
cmp
mov
cmp
les
cmp
push
ds
cmp
mov
in
shl
loopne
pusha
sub
movsl
loop
cmpsb
lock
pushl
push
mov
dec
jecxz
imul
out
dec
outsl
sub
pusha
shll
jmp
cmp
daa
adc
int
push
decl
in
xor
dec
mov
push
in
mov
out
or
rclb
adc
mov
pusha
jnp
pop
dec
xor
sarb
das
roll
jle
add
fcomip
lcall
aas
fidivl
stos
cmp
inc
sub
inc
mov
arpl
aaa
or
scas
ljmp
lcall
pop
int
int
sub
ljmp
ljmp
cmpsl
sbb
fcom
adc
xchg
stos
sbb
add
in
and
pusha
and
mov
xlat
int3
incl
inc
aam
data16
das
leave
insl
testl
test
add
rolb
call
fistpl
loop
loopne
jl
pop
jl
xchg
fwait
cltd
or
out
mov
ss
inc
int3
lahf
test
cmpsb
aaa
mov
movsl
insl
mov
ss
rcrb
out
and
rolb
ljmp
xchg
cmp
xchg
pop
mov
jb
or
ds
lcall
adc
test
lret
mov
movzwl
andb
and
fcomip
decl
mov
push
insb
adc
mov
push
pop
xchg
imul
call
mov
mov
inc
sub
add
jle
cmpsl
mov
add
jg
ret
lock
out
mov
cmp
xor
stos
dec
rcrl
ds
mov
out
jmp
adc
loop
out
aad
cli
pushf
push
test
xchg
test
jmp
xor
lds
loop
test
outsl
outsl
dec
jg
aad
inc
dec
std
stc
subl
cmpsl
notb
scas
sbb
ljmp
xchg
lret
push
xchg
sub
push
out
mov
hlt
stos
scas
shrl
pushl
sarb
stos
dec
mov
lret
jl
inc
or
jg
cmp
ltr
leave
pusha
inc
inc
mov
inc
stos
push
rol
lcall
mov
outsl
clc
insb
repz
lcall
cmp
ljmp
push
pop
push
iret
aam
xlat
repnz
aas
mov
cltd
fadds
lock
out
jns
cmp
clc
or
les
insl
lahf
or
dec
in
lcall
fimull
sub
sub
mov
dec
sti
dec
adc
ljmp
dec
sub
inc
adc
dec
xor
dec
fidivrs
mov
mov
pushf
xor
pop
cmp
jmp
inc
ss
fldenv
icebp
out
add
aam
dec
xchg
dec
movhps
jmp
mov
movsl
out
les
jne
test
pop
int
jne
pop
arpl
fnstcw
insl
cmp
pop
nop
ret
outsb
xchg
add
pushl
arpl
mov
outsl
cli
jg
mov
lcall
sbb
jl
push
xchg
testb
jmp
imul
adc
outsl
orl
pushl
mov
jecxz
mov
add
pop
aas
dec
push
std
adc
add
adc
fistl
fistpl
jp
push
scas
mov
push
cmp
jnp
sarb
xor
jmp
push
imul
lcall
outsb
ret
xchg
pop
fs
add
mov
addr16
cli
mov
movsl
aas
sub
mov
mov
call
mov
test
popf
sbb
mov
daa
mov
leave
inc
test
decl
fimull
add
mov
ss
incl
sub
mull
pop
subl
mov
mov
incl
loop
es
cmp
lcall
push
aad
dec
and
adc
mov
daa
lock
incl
movsb
sbb
mov
jnp
push
cltd
mov
cmp
mov
inc
push
inc
dec
loop
cmp
loope
clc
and
das
cmc
ljmp
jp
ret
in
pop
mov
cmp
and
lcall
pop
imul
ficoms
pop
filds
std
xor
int3
nop
mov
mov
lahf
lds
jbe
mov
add
stc
mov
mov
push
push
sbb
lea
xor
mov
ljmp
and
adc
adc
jg
repz
or
std
out
xchg
std
lods
arpl
addr16
bound
std
inc
xchg
into
cmp
mov
mov
bnd
push
stos
pop
movsl
out
xchg
jmp
mov
jno
ret
lret
mov
insb
lret
push
js
xchg
out
loope
loopne
and
test
push
mov
xor
jns
gs
ror
testb
pushf
adc
int3
popa
jmp
incl
bound
mov
jbe
insl
lods
out
sub
cltd
orb
sahf
push
push
je
mov
push
jnp
mov
sub
das
add
jmp
scas
decl
mov
or
mov
outsb
push
pop
aaa
sub
incl
aaa
shl
pop
inc
mov
loopne
mov
insb
stos
adc
icebp
fbld
mov
push
jl
call
add
call
adc
cmp
cmpsl
jle
jle
divl
dec
popf
je
jg
adc
push
push
jbe
bts
mov
dec
mov
adc
imul
stos
and
int
mov
jo
int
add
mov
mov
pop
cwtl
mov
js
fs
pushl
xchg
push
cmp
cmp
dec
clc
rcrb
inc
xor
mov
fsubs
sbb
pushl
arpl
or
jo
lods
jno
dec
jbe
or
or
scas
lcall
pop
jecxz
movsb
xchg
ror
mov
dec
mov
cltd
xor
push
aam
adc
inc
add
pushl
imul
lcall
mov
sbb
sub
mov
mov
imulb
or
xor
push
pop
jg
mov
incl
adc
cmpb
push
push
mov
fdivs
mov
inc
ss
iret
out
mov
fsubs
stos
xchg
xor
lock
out
movsl
pop
jle
mov
mov
fnstcw
fwait
lret
add
sarb
in
testl
jmp
cmp
adc
and
iret
popf
add
clc
mov
push
add
mov
dec
sub
inc
ds
push
mov
nop
arpl
pop
fwait
push
and
decl
adc
jmp
imul
in
in
out
sbb
gs
mov
mov
mov
cmp
mov
dec
xchg
orb
fcomip
pushl
adc
adcl
cvttps2pi
scas
ret
bound
pushl
arpl
sub
push
pusha
dec
jmp
das
shll
ljmp
cmp
pop
fcomip
pushl
lret
jne
lea
push
and
loopne
out
repz
lahf
pop
lods
fadd
imul
inc
mov
imul
mov
loopne
rolb
dec
jle
or
pop
mov
xchg
mov
out
cld
outsl
push
outsb
inc
popf
int3
test
cmp
cli
inc
daa
popf
stos
mov
stos
lods
test
mov
jmp
add
pop
mov
js
dec
es
outsl
add
cld
sbb
stc
dec
mov
mov
decl
aad
aaa
clc
stos
xor
or
push
sub
cltd
jge
mov
daa
nop
pop
xor
pop
cmc
lcall
repnz
cmpsb
loopne
push
repnz
mov
arpl
es
arpl
jmp
div
push
jle
mov
aaa
btc
decl
sbb
rorl
sub
and
int3
xchg
jae
jecxz
jb
xor
incl
out
jp
sub
mov
sbb
xor
inc
ret
in
divb
addr16
pop
icebp
ss
rorb
loope
and
lea
pop
or
mov
xor
mov
in
pop
inc
push
bound
push
dec
inc
lcall
push
out
dec
hlt
pop
add
add
xlat
sarb
sbb
xchg
pop
aaa
dec
mov
mov
pop
arpl
das
lods
repnz
add
pop
push
insb
lods
cmpsl
sbb
jg
jg
inc
mov
add
xchg
jge
clc
mov
push
cli
cli
std
out
ja
cli
inc
mov
xchg
and
xchg
lock
lods
ds
icebp
cmp
fwait
dec
add
ss
cmp
incl
cmpsl
les
cmp
push
mov
fmull
ja
fcomps
and
decl
sub
dec
es
lods
fstpl
xchg
subb
in
das
ret
cs
aam
pop
mov
mov
sar
pop
loopne
mov
arpl
jns
sahf
sahf
les
xor
mov
pop
incl
lret
xor
push
ja
add
lods
jb
cmpsl
hlt
mov
rol
add
jmp
jmp
pusha
fistl
fs
push
mov
lea
mov
mov
fidivrl
add
daa
cmp
pop
inc
and
aas
iret
sbb
jns
cli
lcall
push
mov
and
cmp
sub
jl
dec
sbb
bound
out
inc
lods
push
sbb
dec
and
ja
pop
cltd
in
push
leave
xlat
test
in
mov
and
repz
outsb
ljmp
repz
bound
pop
push
cmp
andb
fbstp
out
inc
adc
mov
sbb
mov
push
add
mov
stc
scas
shll
leave
adc
xchg
bound
dec
adc
xchg
lahf
adc
cmp
scas
pop
push
stos
push
lret
insl
jle
mov
pop
pushl
out
xchg
js
movsl
push
and
cmp
sahf
repz
lds
test
dec
push
adc
or
adc
test
inc
or
shlb
dec
outsb
in
test
notl
incl
and
or
bound
add
or
out
xor
je
gs
sbb
mov
mov
sbb
dec
or
decl
push
pop
mov
push
add
ret
sbb
push
aas
pop
imul
mov
add
cmp
jbe
in
pushf
mov
jl
or
ret
mov
pop
fwait
sbb
and
push
lcall
outsl
jo
daa
cltd
push
outsl
je
scas
into
xchg
inc
insl
push
xchg
xor
hlt
push
sbb
ljmp
ja
jb
daa
jg
adc
sarl
aad
cs
aam
lods
sub
rorb
js
adc
dec
dec
mov
push
pop
hlt
sub
enter
xchg
loope
popf
jb
iret
test
cmp
push
dec
cmc
xchg
in
mov
incl
push
sub
sub
sub
adc
inc
in
push
mov
dec
push
mov
imul
pop
mov
and
push
push
jg
push
pop
inc
pop
dec
aaa
jg
gs
push
test
adc
add
adc
sbb
in
inc
adc
rcrl
aas
decl
std
mov
hlt
jne
int3
dec
call
pop
sub
cmp
sbb
mov
call
mov
sbb
out
xor
adc
dec
mov
imul
leave
push
jns
cmpb
or
cwtl
mov
mov
inc
mov
lret
cmp
pop
sub
imulb
jns
mov
iret
cld
sub
call
mov
and
nop
add
push
dec
movsl
inc
mov
scas
scas
dec
out
mov
jmp
lods
push
xchg
lea
sarb
and
test
mov
adc
push
lds
adc
imul
scas
fwait
pop
pop
es
mov
jne
or
push
cmp
pop
jmp
ffreep
movntq
jge
orb
cmp
leave
popa
orl
ljmp
dec
or
xchg
mov
test
lock
inc
pop
jmp
push
sahf
adc
sbb
call
mov
adc
mov
mov
scas
and
xadd
clc
loop
mov
lea
or
aad
js
mov
pop
iret
out
add
mov
enter
cmpsl
in
or
push
nop
jae
sub
and
mov
cmp
cmp
pop
js
push
lods
mov
sub
pop
mov
pushl
rclb
insb
dec
xchg
sub
add
sub
sbb
ficompl
popa
imul
imulb
lds
or
popa
sub
hlt
add
sub
cmp
notb
lcall
inc
inc
loop
repnz
das
popf
push
push
cmp
ficoml
bound
or
push
ss
js
call
mov
push
clc
jge
xor
dec
das
push
xchg
nop
sahf
push
outsl
mov
aad
ljmp
cmp
addb
push
ja
push
rorl
jmp
add
ljmp
repnz
xor
sub
push
or
xchg
stc
lahf
add
fadd
sbb
int3
inc
mov
incl
xor
test
adc
icebp
int3
mov
ja
clc
ljmp
inc
scas
cmp
add
mov
fs
negb
push
ljmp
xor
jb
add
cmp
imul
call
push
mov
cltd
mov
sbb
pushf
sbb
imul
decl
loope
cmpsb
mov
inc
xchg
jg
sub
xlat
or
xchg
in
mov
movsl
arpl
jmp
add
shll
orl
push
push
orb
frstor
decl
je
pop
fisubl
push
scas
cmp
outsb
add
cmc
xor
test
std
pushl
outsb
add
mov
mov
cmp
jmp
jae
lock
xor
adc
aaa
inc
movsl
and
popa
push
les
enter
pushf
in
rolb
js
mov
jno
dec
emms
mov
xchg
fwait
lds
decl
mov
dec
xor
imul
mov
mov
cli
insb
imull
inc
lret
mov
sub
imul
scas
push
add
jmp
or
in
in
lods
xchg
push
outsl
add
mov
xor
mov
adc
or
ljmp
sub
ljmp
ret
lods
adc
push
dec
cmp
mov
xchg
and
and
jno
jne
add
jo
cmp
loop
call
xchg
jnp
xor
loope
sarl
insl
clc
lret
inc
jne
adc
push
mov
inc
and
push
xlat
fists
and
xor
ljmp
and
sbb
pop
cld
es
adc
data16
jecxz
inc
subb
lret
mov
jne
daa
das
adc
insl
fwait
inc
cmc
adc
clc
fisttps
ret
movsl
loopne
cli
add
push
jns
stc
pop
ret
jb
and
mov
push
cld
lcall
outsb
inc
outsl
or
jno
push
cld
aad
call
mov
or
mov
mov
pop
adc
add
pop
mov
enter
pop
inc
mov
repz
shlb
and
pop
stos
lret
inc
jg
jb
xchg
sub
scas
sarb
and
mov
mov
in
xor
jmp
test
jl
lret
sbb
inc
popa
push
push
xchg
pop
or
call
cmp
or
xchg
clc
pushf
xorb
faddl
and
rclb
or
lahf
sbb
in
xchg
iret
andl
pushl
flds
sbb
nop
pop
aas
adc
cmpsl
das
mov
outsl
mov
aam
xchg
jb
mov
lcall
out
shrl
lock
push
int3
cli
xor
int
jecxz
sahf
inc
jg
stos
jns
push
ret
jg
lcall
leave
mov
sub
hlt
call
jmp
pusha
jne
or
test
adc
push
mov
push
mov
lcall
sti
ss
dec
daa
fucomp
in
sub
leave
sti
and
xor
jl
std
testl
push
and
dec
jae
jle
lea
bound
mov
pop
adc
add
cmp
cwtl
cmpsb
mov
mov
iret
loope
jnp
jmp
ljmp
iret
fsubl
inc
aaa
jnp
test
pop
mov
mov
loope
psrld
lret
sub
and
xchg
decl
fs
mov
fnstenv
test
pop
out
loope
mov
lcall
dec
js
out
push
mov
fs
push
cmpsl
push
sub
adc
add
int3
nop
fsubs
cmp
and
les
sub
pop
mov
clc
dec
cmp
mov
xor
jmp
push
cld
mov
jmp
subb
xchg
dec
jns
fisttps
ja
test
jecxz
mov
pop
dec
pop
sbb
lods
add
in
mov
ljmp
mov
cmc
out
mov
jo
mov
hlt
cmpb
mov
mov
dec
mov
or
push
out
clc
nop
jns
mov
or
pop
fwait
pop
aaa
je
mov
inc
incl
cld
out
inc
movsl
dec
push
mov
or
insb
movl
ljmp
lcall
xchg
xor
lret
les
ss
lods
jg
js
out
sub
aas
dec
jle
out
cli
mov
mov
mov
loope
mov
inc
mov
decl
dec
pop
pop
jnp
dec
xchg
aam
or
lods
sbb
mov
stc
push
xor
decl
ffree
push
mov
inc
push
jg
and
xor
aad
lret
jae
shlb
push
loope
xchg
test
stc
xor
inc
icebp
clc
push
fsqrt
fists
pop
aam
push
imul
ja
dec
adc
add
pop
mov
lock
decl
mov
xor
mov
mov
loope
lahf
imul
xor
mov
and
push
and
mov
inc
mov
cmpsl
adc
push
daa
cli
xor
test
pop
adc
jns
addr16
out
jb
sbb
hlt
or
cmp
lock
or
ljmp
jmp
leave
inc
movsb
mov
in
xlat
xor
mov
mov
std
dec
add
popa
cli
aam
dec
inc
out
out
lret
movsb
dec
push
push
iret
fsubl
cmp
ljmp
cld
inc
int3
out
dec
dec
shlw
or
rclb
mov
add
decl
or
adc
cs
fldenv
stc
jmp
call
adc
lods
daa
xor
pop
jno
push
xchg
stc
jge
mov
mov
cltd
pusha
xlat
out
pop
int
test
xor
jl
lcall
aad
sbb
in
test
xor
mov
arpl
lcall
add
inc
aaa
sbb
ffreep
ret
test
icebp
gs
xor
fdivr
das
inc
shl
push
sbb
inc
out
sub
into
inc
mov
xlat
decl
es
push
sub
frstor
cwtl
cs
and
xchg
test
in
inc
mov
call
inc
cwtl
mov
imulb
jge
xor
add
bound
and
pop
into
call
adc
imul
xchg
lcall
lret
xor
dec
sub
lea
inc
sar
lock
insb
adc
push
push
decl
pop
xchg
icebp
dec
popa
out
jnp
xor
jno
out
enter
aaa
pop
sub
lcall
pop
les
je
mov
dec
xchg
xor
popa
adcl
xchg
lcall
mov
mov
or
lods
sbb
int
sub
jae
pop
sub
addr16
call
jmp
xchg
pop
lret
xchg
mov
sbb
xchg
lcall
jmp
pop
popf
ret
cmp
mov
mov
mov
mov
lock
add
outsb
fsubrp
cmc
inc
lcall
insl
loopne
jne
inc
dec
jae
cmpsl
pmuludq
dec
psadbw
ljmp
and
xor
mov
mov
nop
lods
aad
scas
lahf
in
movsl
inc
push
jmp
pop
pop
imul
mov
pop
loopne
add
mov
ss
insl
inc
mov
adc
js
out
clc
push
mov
add
jbe
movsl
movsb
cmp
ja
nop
std
ret
shrl
pushl
lds
leave
mov
mov
and
xor
jg
loope
xchg
popf
loopne
std
mov
aam
outsl
and
pop
ret
mov
in
stos
push
mov
or
cmp
add
jmp
cmp
sahf
sbb
or
lods
or
or
inc
into
add
jmp
jno
sarb
sti
je
and
decl
pusha
loope
sub
jo
pop
hlt
jmp
add
lds
test
sub
push
int
jns
js
lock
mov
jb
xchg
xor
lcall
and
imul
pop
xlat
jno
jb
sub
lea
mov
in
movntps
outsb
sbb
popa
push
mov
cmp
lcall
mov
push
push
sbb
or
divb
cmp
outsb
adc
xor
inc
loope
mov
jo
fisubrs
fwait
test
dec
ds
mov
xlat
mov
orl
mov
in
or
mov
in
daa
ss
xor
xchg
cmpsl
clc
xchg
into
aad
push
nop
mov
test
std
int3
in
push
cmpsb
test
xchg
or
jle
xchg
mov
jg
inc
sub
pushf
xchg
or
cltd
add
shll
call
ror
out
xor
je
xchg
hlt
dec
fwait
inc
fidivs
and
lods
bound
out
mov
xlat
sbbb
ljmp
mov
mov
loopne
mov
inc
mov
adc
pop
addl
mov
ljmp
and
and
repnz
xchg
xchg
dec
loop
inc
movsb
pop
scas
loopne
cld
xchg
lret
jmp
in
hlt
mov
shrb
fwait
dec
mov
std
shr
les
stos
mov
and
jnp
ljmp
test
das
out
cld
inc
push
test
push
xchg
daa
mov
negl
cmp
pop
or
dec
jo
aad
push
std
mov
repnz
pop
mov
jno
int
pop
hlt
incl
push
fwait
xchg
outsl
dec
push
aaa
inc
loop
push
jp
xchg
xor
or
out
lods
and
out
mov
cmp
and
push
adcb
mov
xlat
sahf
push
sbb
mov
repnz
adc
cmp
mov
push
pop
lds
fwait
dec
xor
jmp
incl
jnp
das
aam
pop
ja
fsubl
jle
pop
mov
pop
push
mov
cmp
push
sbb
adc
pop
cld
aas
dec
pop
push
call
jle
out
dec
sbb
dec
lock
lea
sbb
pop
mov
jg
ret
lock
stos
mov
add
cmp
inc
mov
sub
inc
bound
and
jl
js
test
loope
dec
test
cs
call
andb
adc
in
cmp
cmp
fwait
imul
dec
cmp
jnp
ljmp
jg
pop
lret
stos
call
insl
jg
ret
xor
imul
mov
mov
fisubl
mov
out
pop
xchg
scas
flds
jg
xchg
js
lcall
dec
fwait
or
inc
add
outsl
ljmp
sbb
enter
push
mov
call
xchg
sub
adc
sub
add
inc
fdiv
xor
jecxz
je
ljmp
inc
cli
sbbl
cmp
scas
nop
xor
pop
mov
aam
mov
push
cmp
fisttpl
pop
jmp
rclb
xchg
ss
xchg
fdivrs
xchg
int
pop
pop
mov
ret
ljmp
jbe,pn
jge
and
sbb
push
ret
sub
leave
in
push
int
loop
xchg
iret
mov
pushl
pop
fmull
xchg
sti
mov
dec
mov
inc
jae
lea
arpl
test
ljmp
pop
call
push
jns
lods
stc
sbb
mov
cld
mov
dec
rsqrtps
std
sbbb
mov
and
inc
cmp
adc
dec
dec
movsb
call
cs
sarl
popf
xchg
dec
cmpsl
fbld
aas
pop
enter
ja
jmp
stc
js
dec
pop
loop
mov
mov
ficoms
cmp
jp
call
mov
mov
push
cli
call
inc
add
jne
xchg
add
jnp
dec
loope
jns
pop
dec
in
push
mov
das
inc
mov
cmp
loopne
insl
dec
sbb
decl
or
inc
jle
std
mov
inc
cmp
mov
ret
adc
cli
fwait
lcall
data16
int3
pusha
xlat
fs
cmpsl
adc
lcall
xor
fildll
test
lea
and
xor
pop
lea
jg
jb
adc
fistl
sbb
repz
loop
sbb
xchg
arpl
pop
xchg
test
mov
pop
and
push
mov
dec
add
loop
gs
aam
push
shrb
fdivl
fwait
sbb
clc
mov
popa
outsb
pop
xchg
pop
push
or
push
test
enter
push
push
cmp
testb
xchg
ret
and
out
mov
mov
xor
pusha
cmpsl
pop
push
lea
mov
call
sub
ljmp
xchg
cltd
jmp
cmp
cmp
imul
pop
adc
or
in
inc
cmp
gs
dec
dec
fistpl
subb
cmp
outsl
lods
mov
mov
repnz
aaa
xchg
ficompl
sbb
mov
adc
mov
add
daa
inc
xlat
cmp
lds
mov
jmp
idivl
dec
shll
cld
sti
shlb
push
cli
sahf
sbb
orb
in
std
incl
aam
jmp
mov
stc
insb
mov
aad
push
cmp
decl
jns
push
push
or
js
js
dec
imul
cltd
push
loop
add
jbe
aam
rol
pop
lock
jmp
push
or
ljmp
js
xchg
mov
pop
xor
xchg
sub
fcomip
mov
je
ljmp
xchg
daa
aad
repnz
gs
xchg
inc
jmp
decl
lock
lea
sub
outsl
cmp
or
mov
test
add
incl
cmp
push
push
xor
adc
and
fimull
pop
cs
jae
movsb
push
incl
jmp
jnp
nop
push
jmp
nop
jns
daa
push
fisttps
push
fildl
jg
cwtl
movl
lret
test
adc
ja
sbb
and
hlt
dec
xchg
imul
js
pop
cmp
popa
leave
mov
push
cli
sub
sub
inc
cs
or
aaa
negb
int
daa
das
sar
xchg
dec
sbb
pop
add
jo
movsb
inc
aad
jmp
mov
add
aaa
jge
stos
jb
stos
jo
call
pushf
incl
jmp
push
pop
cld
cmpsb
lods
cmp
fldt
push
hlt
sub
sub
mov
jp
add
shlb
mov
cmpl
outsl
in
fstpl
cmp
outsb
test
ret
push
add
cmc
cmp
adc
dec
sub
insl
dec
mov
iret
mov
call
sub
out
inc
mov
mov
repnz
fmuls
push
jl
sbb
mov
jg
push
or
hlt
mov
js
or
test
test
adc
pushf
jge
xchg
dec
call
stos
and
push
adc
adc
or
mov
add
fwait
jge
mov
fdivrp
insl
les
aaa
sar
pop
inc
pop
in
shrl
push
sub
jl
lcall
mov
mov
add
add
jnp
xor
out
mov
notl
test
sbb
push
cld
ljmp
insl
loop
mov
jecxz
out
push
xor
mov
mov
imul
xlat
lock
cmp
test
test
fs
pop
adcb
aas
test
icebp
pop
std
decl
mov
cmp
push
aad
mov
sbb
daa
mov
and
push
int3
xchg
loop
sub
into
lea
daa
mov
sub
push
push
xchg
cmc
adcb
jmp
mov
xchg
or
cmpsl
xchg
cmp
xorl
mov
ret
lcall
jo
xlat
popf
in
scas
rcll
gs
sub
js
ss
cmc
ficoml
inc
cli
jg
sbb
push
mov
xor
dec
mov
inc
mov
lret
xchg
pop
add
outsl
ljmp
fstpt
xor
cmpsl
cs
testb
scas
mov
mov
push
ficomps
lcall
call
add
stos
add
lds
arpl
sbb
ja
pop
or
pop
sahf
test
roll
subb
jmp
push
ja
push
lcall
inc
and
in
mov
out
sub
hlt
inc
ljmp
stos
mov
fnsave
subb
jle
leave
iret
orl
cmp
dec
push
jbe
push
sar
cmpsb
and
xchg
push
inc
xchg
jmp
inc
int3
jbe
jg
mov
ljmp
sbb
dec
dec
in
fiadds
push
mov
push
pop
pushl
loope
pop
mov
pop
mov
jmp
divb
xchg
mov
mov
pushl
dec
lock
test
jecxz
xchg
out
xchg
movsb
repz
add
fdivr
fcomip
pop
popf
jmp
dec
fcomi
mov
or
mov
test
mov
mov
fbld
pop
push
jle
clc
arpl
stos
int3
je
ja
in
jns
fdivr
dec
test
ljmp
or
cld
mov
sbb
orb
lahf
std
lcall
mov
sbb
hlt
fidivrl
or
fmul
dec
push
sub
xchg
call
pop
pushf
and
adc
scas
cmp
mov
push
inc
inc
aas
imul
mov
call
scas
push
jg
or
pop
out
sub
fstpl
adc
pop
cmp
xor
sbb
jmp
mov
jmp
movsb
pusha
adc
es
xor
stos
xchg
sub
jnp
sarl
je
lret
mov
ljmp
cmp
pop
mov
push
pushf
shll
mov
or
cltd
jge
lcall
std
stc
mov
sub
mov
jbe
xchg
push
arpl
call
jno
shll
std
movsb
aaa
mov
movsb
jne
hlt
in
clc
jg
popa
cmp
fidivrs
test
pop
or
cmpsb
sub
jb
and
jmp
out
ss
cmp
outsl
jle
es
mov
cmpb
xchg
popf
call
nop
add
js
add
mov
lds
mov
jecxz
decl
mov
xor
push
and
sbb
sbb
pop
fwait
pop
cmp
mov
xchg
sahf
addr16
push
pusha
lods
js
lret
mov
mov
jmp
movsb
xor
mov
je
enter
add
pop
in
incl
xor
lcall
mov
jle
lods
fwait
lcall
mov
pop
imulb
add
add
or
mov
cmp
leave
mov
loopne
jno
mov
jge
mov
xchg
test
mov
fdivs
xchg
outsl
ljmp
pop
mov
mov
movsb
cmpl
xor
inc
xchg
push
cltd
xchg
mov
repnz
mov
es
out
and
das
out
orb
jno
cmp
ja
push
add
dec
pop
mov
aad
seta
push
push
ja
xor
decl
fstp
sub
fwait
mov
int3
movsl
and
mov
push
push
sub
loope
push
insl
imul
lds
sbb
mov
sbb
data16
inc
xchg
cmp
adc
lret
push
pushf
loopne
incl
test
jnp
sub
aad
out
scas
jge
call
mov
loop
add
das
cltd
mov
in
sbb
testb
ffree
rorl
mov
outsb
aam
outsl
repz
push
inc
mov
dec
jg
cs
mov
jbe
sub
mov
dec
dec
dec
std
mov
cmp
fdivrs
jmp
adc
int3
xchg
jmp
ljmp
stc
xor
cmp
xchg
lea
cmp
fidivrl
sub
push
je
clc
decl
jno
inc
and
inc
dec
cmp
pushl
or
xchg
in
ja
mull
xchg
mov
jo
push
xor
cmp
mov
inc
or
add
aas
outsl
adc
push
mov
jg
or
push
ficompl
inc
ja
pop
fcmovnbe
insl
je
fld
jnp
js
cmpsb
and
lods
test
jp
mov
xchg
sub
jle
test
xor
decl
fiadds
sub
or
mov
leave
pop
cmpsl
lods
fcoms
mov
int
shll
jo
pushl
jae
fadds
lahf
mov
inc
mov
pop
and
pop
fidivrl
dec
jl
sub
lds
clc
stos
movsb
mov
xchg
iret
fisttps
mov
jecxz
and
cmp
incl
addb
aad
cwtl
pop
mov
mov
jle
outsb
jo
cli
jmp
lods
cwtl
shlb
or
lret
mov
jnp
adc
adc
idiv
jmp
pop
vpmullw
xlat
fdiv
mov
scas
shll
adc
inc
daa
inc
insl
xor
call
mov
mov
or
in
xor
adc
lods
dec
call
jmp
aad
arpl
test
adc
pop
sbb
pusha
out
xchg
dec
imull
xchg
enter
ljmp
dec
mov
lret
divb
sub
out
dec
pop
dec
add
jns
and
pop
les
jb
adcb
ljmp
loop
sub
loop
out
fildll
rcrl
jge
or
cmp
mov
cld
dec
dec
imul
in
dec
inc
mov
mov
je
aad
mov
repz
add
nop
fsubl
push
dec
mov
xor
push
cwtl
xchg
xlat
out
adc
dec
clc
dec
push
jg
mov
jl
mov
push
loope
adc
dec
mov
call
flds
jbe
out
std
dec
push
mov
fcoml
adc
shl
add
gs
dec
in
orb
shrb
ss
call
out
sbb
push
leave
mov
aaa
dec
je
mov
shrb
push
jnp
cmc
jmp
push
mov
jge
pop
lcall
js
add
shl
add
mov
clc
call
dec
mov
xor
jae
aam
js
xor
cltd
cmp
mov
mov
jmp
mov
jne
pop
pop
push
push
cmpsb
push
incl
push
xchg
dec
pop
daa
aad
pushf
mov
aas
dec
repnz
incl
addb
xchg
sbb
aas
pop
cmp
mov
jecxz
mov
in
fucom
pop
dec
hlt
xchg
cmp
mov
jge
ljmp
inc
xlat
and
sbb
add
or
add
icebp
jo
imul
data16
incl
inc
push
loope
and
lods
imulb
mov
pop
cli
mov
ds
outsl
daa
mov
add
cli
fdivp
mov
arpl
xlat
cmp
mov
adc
icebp
out
jl
cld
pushf
addb
and
mov
sub
dec
xor
and
sar
decl
sub
sub
lods
aad
dec
in
ret
dec
xlat
or
cltd
lcall
inc
cmp
or
or
jb
sbb
xchg
push
test
pop
push
addb
outsl
leave
aam
aas
in
cmpsl
adc
jmp
jo
jne
in
push
inc
mov
pop
ss
aam
das
insb
jp
js
inc
js
incl
adc
push
jecxz
fs
lock
jae
inc
push
cmpsb
sbb
sub
sbb
movsb
dec
add
push
ljmp
push
addr16
lods
jge
pop
or
xchg
mov
cltd
stos
cld
jg
inc
xor
stos
fdivs
xchg
xor
rorb
mov
stc
hlt
incl
das
lock
push
mov
cmp
in
mov
or
xor
test
aam
in
cmp
and
je
xchg
pop
mov
pop
aas
pop
sbb
rcrl
mov
mov
jg
call
test
adc
mov
pop
dec
xchg
mov
cld
sub
or
jg
mov
cmpsl
or
jb
jae
adc
mov
dec
shlb
int
adc
xchg
sub
push
outsl
xor
fdivr
lcall
fisubrs
ficoml
ret
stos
aad
pop
and
iret
mov
ljmp
rorb
or
aam
sub
mov
ds
lahf
add
pop
dec
les
ljmp
mov
pushf
mov
lcall
sti
mov
and
shll
adc
std
sbb
cmp
nop
sbb
loope
xchg
mov
cmp
push
jp
pushl
xor
jle
lret
sbb
cs
xor
xor
lret
xor
mov
and
push
or
repnz
mov
shr
ret
add
add
push
inc
loope
cmp
or
add
adc
aad
mov
call
sub
divl
pop
push
mov
imul
pop
jmp
push
mov
ret
pop
stc
xchg
add
out
or
mov
adc
call
mov
or
hlt
jl
sbb
ret
adc
jmp
inc
push
lods
sub
scas
xor
push
xchg
xor
pusha
or
incl
mov
loopne
mov
subl
cmp
in
jg
cwtl
inc
pop
fadd
sub
sub
clc
decl
jecxz
sti
cmpsl
dec
pushf
sbb
sar
call
cld
pop
mov
cmp
cmp
addl
mov
xchg
stc
call
cld
incl
imul
cmpsl
fmuls
jle
fwait
adc
xchg
inc
in
arpl
or
push
std
decl
popa
pop
or
push
add
mov
and
push
fcomip
mov
sbb
frstor
scas
adc
das
scas
stos
xchg
add
out
cmp
decl
push
or
mov
bound
cmpsb
daa
div
jo
push
xor
call
mov
cmpsb
sbb
cmp
mov
popa
repz
loop
mov
fwait
pop
bound
add
js
sub
gs
repz
mov
and
aas
dec
mov
inc
ljmp
pop
add
push
out
jg
lahf
push
pop
jnp
es
or
or
xlat
sbb
fimuls
mov
push
pushf
jl
inc
int
ffree
add
daa
loope
xchg
incl
push
inc
aas
dec
mov
sbb
cli
rclb
pusha
loop
lcall
int
xchg
aam
mov
fmull
test
outsb
add
inc
or
jmp
jge
sub
xlat
out
pop
jno
movsb
adc
inc
cmp
jmp
cmpsb
adc
lock
test
mov
adc
sti
and
pop
jg
incl
mov
mov
push
popa
cs
cltd
cmp
sar
or
xchg
sub
pop
sub
mov
dec
mov
aas
adc
insl
add
out
jle
aaa
in
clc
cmp
mulb
add
sbb
fstpt
clc
dec
sub
incl
lods
push
lahf
cli
iret
lods
pop
rcrb
stos
pushf
dec
loope
rolb
xchg
clc
jg
fsubrs
bound
idiv
sub
pop
in
sbb
lock
mov
aaa
fadd
imul
imul
repz
mov
stos
movsl
call
adc
sbbl
fcomps
jg
sbb
pushf
jl
adc
bnd
loope
scas
divl
xor
pop
call
incl
pop
adcb
fnstsw
inc
xor
fs
std
imul
out
xor
push
lock
dec
pop
jo
adc
pop
sbb
int
jns
inc
fisubrl
js
int3
idiv
mov
jnp
out
test
es
pop
dec
inc
dec
cli
adc
jmp
jno
pop
ljmp
mov
xor
mov
mov
pop
clc
fdivr
jp
mov
adc
sbb
nop
and
push
add
pop
in
pusha
pushl
imul
add
cmp
pop
pusha
or
aas
mov
sbb
dec
ljmp
xchg
cmc
and
outsl
mov
lahf
or
in
incl
push
aaa
je
sub
jge
addl
imul
decl
fyl2x
bound
lods
pop
pop
xchg
lcall
data16
pushl
inc
ret
xchg
mov
outsb
arpl
scas
loop
dec
enter
dec
daa
and
call
std
inc
adc
scas
hlt
mov
or
ret
stc
jmp
add
mov
loopne
xchg
inc
cltd
mov
sub
rclb
mov
les
lcall
dec
inc
or
lds
xchg
xchg
clc
pop
mov
dec
addb
movsl
xchg
lea
fnstenv
pushl
jns
cmp
dec
dec
lds
adc
idivb
nop
out
movsl
fcompl
or
jmp
call
lea
rcll
call
fs
cmpsl
mov
push
test
ret
jnp
pop
cmpps
dec
jb
xor
cmp
pop
insb
jnp
adc
cmc
pop
push
or
movsb
call
negb
xor
jnp
pop
jge
jg
push
addr16
sub
push
scas
add
and
push
or
in
mov
pop
cmp
sahf
mov
rorl
inc
mov
cli
push
inc
jmp
and
jnp
sahf
xchg
insb
pop
ljmp
cmpsl
loope
or
in
outsl
push
pop
popa
scas
mov
dec
push
sbbb
fs
std
decl
jb
jbe
popa
cmc
mov
pop
daa
xlat
adc
xchg
cmp
jg,pn
ljmp
dec
shll
inc
ficompl
or
in
jecxz
xchg
mov
adc
and
push
decl
sub
inc
insl
sbb
pushf
and
in
add
dec
xchg
ljmp
xchg
jmp
cwtl
insl
ja
aam
insb
jae
xor
sub
inc
lds
cmp
ljmp
cmpsl
test
out
movswl
mov
push
inc
mov
in
cmp
ja
decl
ret
inc
ljmp
mov
hlt
cmpsl
pop
into
sbb
add
inc
jecxz
fnstenv
fildl
pop
xlat
pop
sbb
cltd
in
dec
mov
pop
jecxz
xor
test
movsb
aam
xlat
decl
jae
cmp
pop
and
mov
mov
and
and
jp
sbb
je
jb
cli
mov
cld
mov
jnp
std
cmpsb
popf
mov
movsl
xor
jl
loope,pn
dec
movmskps
pop
mov
movsl
imul
mov
jns
addr16
inc
add
jnp
sar
call
insb
mov
and
and
shll
pop
mov
sub
push
push
and
jl
out
dec
mov
call
cld
ljmp
dec
jg
jo
jle
mov
and
dec
mov
xlat
pop
hlt
out
call
and
mov
int
in
out
xchg
cmp
call
ja
mov
nop
xchg
sbb
pop
pop
xchg
mov
add
nop
shrb
and
cli
ret
cmp
sbb
clc
xchg
popa
xlat
mov
aaa
mov
push
scas
and
add
js
std
mov
mov
decl
in
call
cmp
cmpsl
add
fildl
and
insb
dec
and
mov
jmp
and
adc
out
aad
sbb
pop
jns
xchg
andb
fdivrs
push
pop
hlt
and
push
mov
and
adc
inc
adc
or
lods
cli
inc
sub
lods
add
test
ficoml
sbb
push
cmpsb
ja
fimuls
movsl
ljmp
sub
mov
xchg
into
mov
dec
mov
or
cmp
stos
mov
pop
and
popf
jl
xor
push
out
or
enter
mov
push
aam
ret
push
inc
mov
ljmp
mov
int3
sub
pop
mov
lea
cmp
lock
sbb
cld
pop
pop
repnz
mov
sub
in
adc
pushl
jp
outsb
xor
pop
push
dec
mov
ljmp
jge
ljmp
mov
or
roll
lret
inc
mov
lcall
insl
sbb
test
cwtl
jmp
pop
lcall
ss
mul
dec
loop
dec
push
js
in
push
out
xor
cmp
decl
xor
and
pop
ret
insl
pop
test
mov
xor
sbb
out
jnp
repnz
ljmp
scas
fistpll
movsl
pop
push
in
sbb
nop
lea
aas
ljmp
ret
ja
sbb
imul
push
hlt
sub
ljmp
aas
jmp
loop
sbb
cmpsb
jle
xor
imul
test
cmp
mov
sub
in
add
pushf
jl
xor
fwait
mov
lcall
push
cmpsl
js
xchg
jp
cs
jmp
in
mov
jmp
data16
es
dec
lock
cltd
xor
decl
inc
jo
or
mov
cmp
ds
mov
ljmp
cwtl
shlb
int
lahf
fisubl
pop
mov
push
cmp
lock
call
mov
ret
int
add
scas
test
into
lahf
daa
cmc
pop
test
fildll
push
add
dec
adcb
cmp
fwait
lcall
dec
cmp
mov
or
cmp
decl
sti
sbb
in
aad
and
pop
fwait
dec
cltd
ds
push
mov
pushl
clc
inc
stos
sub
out
lret
and
call
lret
fcmovnu
lret
fs
dec
add
push
loop
mov
aam
jo
shlb
sub
imul
lcall
fs
sbb
dec
xor
add
or
sahf
loop
out
mov
mov
push
pop
test
adc
cld
xchg
pushf
jecxz
xchg
ret
in
pop
into
ljmp
dec
xchg
fsubs
adc
popf
dec
inc
loope
stc
inc
idiv
jbe
aas
js
sub
cmc
push
sarb
ds
add
and
mov
cmp
or
jg
jmp
stos
jmp
dec
fmuls
sbb
inc
sub
shll
adc
push
ljmp
and
xchg
xchg
mov
repz
sarb
fimull
or
lea
mov
dec
dec
lea
in
push
in
adc
pop
inc
xchg
nop
adc
decl
sub
push
aam
mov
shll
lock
mov
movsl
mov
lea
ficoms
sub
sbb
dec
push
xchg
scas
pushl
std
test
pop
jno
xchg
jbe
popa
jecxz
mov
mov
mov
bound
mov
jno
insb
mov
push
call
movsb
cli
push
dec
in
dec
xor
inc
cmp
jg
xor
or
inc
mov
adc
daa
pop
nop
or
je
jp
bound
decl
push
mov
iret
jl
xchg
loopne
ud1
pop
mov
lcall
cwtl
std
popa
dec
cmpsb
les
popf
pop
sub
pop
push
cmpsl
pop
or
jl
mov
sbb
dec
mov
stc
xchg
in
popa
lds
or
ljmp
push
xchg
push
adc
and
pop
add
test
pop
lea
mov
repnz
addl
or
enter
bound
pushl
outsb
xchg
add
jl
addr16
fsubl
arpl
mov
inc
loopne
push
loope
vandnps
out
sar
mov
xchg
lcall
sub
mov
and
pop
mov
sbb
pop
mov
or
mov
cwtl
add
fstps
add
loopne
cwtl
inc
mov
pop
mov
orl
push
imul
inc
mov
ja
stos
int
add
pusha
push
mov
jp
test
and
sub
push
or
mov
adc
out
lret
push
and
lcall
sbb
xlat
bound
jbe
mov
pop
lock
inc
push
or
sbb
lcall
sub
or
and
pop
out
mov
lret
call
pop
sahf
jns
jmp
test
add
popf
dec
mov
test
lahf
and
jecxz
sarl
mov
call
stos
aaa
or
add
popa
push
faddp
fimull
mov
mov
fcmove
mov
aas
les
xor
pushl
imul
les
clc
daa
xchg
jae
in
pop
or
ret
idivl
aad
sar
jno
inc
in
pop
and
mov
push
xchg
test
jg
insb
sbb
les
xchg
addr16
cwtl
or
cli
mov
ret
sub
xchg
sbb
pop
sbb
scas
fisttps
ljmp
mov
jb
push
sbb
lahf
scas
jmp
push
jne
movsl
mov
inc
pop
and
cli
jnp
mov
and
push
dec
fucomi
lcall
xor
movsb
jg
in
insl
scas
xor
pop
add
movsb
fdiv
mov
in
cmc
ja
loopne
jmp
pop
cmp
add
popf
pushf
call
enter
fistps
aad
or
pop
mov
mov
jmp
add
decl
in
mov
cmp
dec
adc
add
add
stos
sbb
decl
add
xor
add
stos
or
adc
inc
xchg
pop
mov
mov
call
cmpsb
hlt
fildl
test
sbb
movsl
push
add
pushf
lret
repz
pop
subb
repz
lea
andl
pop
push
cs
ljmp
bound
cltd
sbb
sti
mov
sbb
lret
sbb
add
add
lcall
out
xlat
fwait
xor
cmp
jle
in
lahf
add
shrb
push
cmp
adc
cmp
decl
cmp
loop
fdivs
cmpsb
add
jb
cmp
mov
movsb
mov
push
or
cli
adc
jno
pop
lods
scas
xorb
sub
sar
bound
decl
sbb
loop
lret
bts
stos
lcall
outsl
hlt
xchg
xchg
scas
bnd
cmp
sar
pop
subb
dec
in
lret
mov
out
scas
or
xor
fs
clc
incl
ret
aaa
cmp
bound
or
stc
push
adc
add
out
addb
testl
adc
sub
lods
inc
dec
xor
cld
jae
stos
or
imul
pushf
lods
je
fstpl
nop
cld
push
or
insl
movsl
lret
ja
add
decl
adc
loopne
shlb
lds
pushf
mov
pop
std
pop
push
push
sub
lcall
sub
and
aad
inc
pop
push
loopne
imul
lret
push
fs
cmp
stos
stos
test
mov
gs
das
clc
ljmp
lcall
inc
fnstsw
in
mov
mov
incl
jl
mov
imul
inc
outsl
outsl
pop
das
sub
outsl
stc
sub
mov
mov
dec
and
sub
sub
loopne
sahf
inc
fdiv
sbb
add
daa
pop
inc
jg
add
or
in
std
daa
mov
test
pop
stos
sbb
push
pop
imul
cmpsl
and
push
mov
cmpsb
sub
lods
shll
sub
xor
loop
mov
inc
xchg
test
cld
decl
stc
pop
cs
add
xor
scas
inc
xor
inc
pop
jg
mov
bound
fsubrl
sbb
inc
xor
cmpsb
pop
in
adc
push
popf
and
xchg
stos
cmpsb
pop
cmp
cmp
pushl
cltd
add
dec
jge
cmp
push
mov
xchg
dec
mov
xchg
hlt
push
mov
jmp
xor
dec
outsl
sbb
lds
fadd
dec
pop
cmp
call
es
or
ljmp
sti
insl
xor
jl
test
and
jg
jmp
jmp
insl
stc
or
push
jmp
call
pop
test
loopne
out
subb
cmp
or
lods
or
pushf
or
add
add
lret
xchg
xchg
out
push
lret
fidivrl
xchg
mov
pop
sbb
call
dec
fwait
and
ds
aam
inc
fcmove
inc
dec
xor
dec
stos
decl
mov
pop
lods
divb
out
cmp
adc
inc
push
lock
lea
lcall
out
mull
ljmp
stc
icebp
lods
jg
rcrb
in
lcall
mov
mov
sub
aam
ret
jmp
ljmp
add
dec
pop
in
adc
jle
pushl
jmp
int
mov
ds
inc
xor
aas
testb
mov
sbb
mov
inc
mov
lock
pop
aad
jo
stc
rcrl
pushf
icebp
or
push
mov
jmp
lret
push
mov
mov
int3
pop
int3
idivl
sub
jl
cmp
sti
sbb
clc
in
daa
cli
mov
insl
push
mov
ficompl
cmp
pop
in
mov
fstpl
mov
add
or
ljmp
sub
adc
decl
les
les
mov
sbb
mov
mov
jbe
fiaddl
dec
mov
incl
mov
loop
adcb
inc
nop
pop
rcrb
or
xor
incl
adc
lds
jle
sbb
outsb
mov
out
test
sub
add
inc
mov
push
pop
or
or
ljmp
popf
push
mov
jnp
loopne
sub
shlb
in
fsubrl
insl
jmp
sub
inc
stos
les
xchg
jns
or
pop
std
ljmp
adcb
les
cli
cmp
clc
xchg
lock
stc
in
mov
mov
das
mov
jbe
push
cmpsb
xchg
push
out
mov
mov
jmp
cld
test
movsb
mov
repnz
jecxz
push
test
notl
mov
incl
jae
dec
jno
lea
mov
gs
mov
lcall
pop
inc
sub
inc
pop
adc
cmp
xor
push
dec
inc
mov
sbbb
lahf
cmp
push
sub
enterw
inc
sub
imul
xchg
mov
xchg
aad
mov
jae
stos
ljmp
cli
fwait
cmp
popf
cmp
add
inc
arpl
jbe
pop
and
push
mov
loop
in
inc
arpl
dec
pop
in
inc
push
xor
leave
inc
fidivs
and
pushf
movsb
sbb
sub
jns
pushl
dec
mov
pop
lods
lret
add
fsubs
jl
pop
mov
and
addr16
call
mov
faddp
or
mov
lret
icebp
sub
dec
lret
aad
hlt
cmp
mov
outsl
add
cmp
cli
out
pop
test
jae
fwait
dec
xchg
pop
test
pop
int3
fnsave
pushl
pop
jecxz
xor
xchg
fisubrl
mov
pop
push
fildll
fldcw
pop
mov
pushl
shl
jns
shrl
dec
push
xchg
xchg
xchg
test
mov
or
sarb
pop
cmp
js
or
xor
and
loop
mov
repnz
rcrl
dec
hlt
adc
adc
shrl
fs
stos
jbe
in
pop
cld
in
inc
loopne
pushf
or
out
cld
lock
mov
lds
loop
dec
icebp
incl
pop
mov
stos
mov
push
std
sbb
xor
lcall
cmpsb
hlt
stos
pop
in
fisubrl
mull
inc
jne
inc
inc
dec
fdivs
mov
lcall
dec
push
inc
jno
out
or
popf
jno
addl
and
dec
insb
rol
rcrb
test
ss
pop
fists
aam
sarb
sar
mov
rcrb
cld
lds
fcmovu
cmpsl
out
std
sub
out
add
jmp
mov
mov
fstpt
fidivs
mov
jo
pop
dec
sub
dec
inc
push
adc
mov
int
icebp
les
pushf
dec
repz
inc
sbb
std
or
outsb
out
sub
mov
outsl
imul
mov
xor
jns
in
adc
cs
jle
inc
mov
lods
adc
das
clc
js
into
push
pushf
mov
test
cmc
xchg
cmp
addr16
decl
lock
adc
cmpsb
shr
mov
xor
dec
push
lcall
test
int
fidivrl
pop
add
in
scas
mov
adc
shlb
stos
add
or
stos
fcmovbe
jp
mul
push
pop
inc
cmp
mov
jp
xor
pop
out
lret
push
pushl
arpl
mov
scas
or
cld
push
fsubl
xchg
test
push
cmp
nop
in
xchg
mov
pusha
fildll
stc
jne
dec
mov
lods
incb
jg
adc
inc
in
mov
mul
loopne
mov
push
call
pushf
mov
adc
int
xchg
pop
push
xor
insl
or
fwait
incl
lret
inc
and
or
dec
add
lahf
ret
mov
and
mov
lcall
cmp
cmp
subl
divl
repz
sbb
cwtl
scas
mov
fistps
sbb
mov
mov
incb
and
nop
push
in
cli
decl
in
adc
fldenv
add
sarl
mov
sub
ja
sarl
sub
push
mov
decl
dec
daa
lret
jne
dec
filds
scas
mov
mov
adc
outsl
jge
arpl
xchg
xchg
stos
aaa
lret
jmp
xchg
enter
rolb
pop
xchg
ficoml
adc
enter
jb
fwait
out
test
jae
pushl
mov
xor
cmp
test
sub
aaa
sahf
dec
dec
fimuls
stc
sbb
pop
sub
arpl
inc
dec
mov
jo
insl
out
addb
daa
mov
cwtl
xchg
sub
lods
jb
decl
call
push
jecxz
adc
push
sub
add
test
sbb
mov
loope
fsubrl
xor
incl
shrl
pop
cmp
inc
or
add
stc
pop
adc
jmp
and
push
xor
out
test
push
test
push
aaa
ss
mov
out
lcall
out
xchg
and
xchg
add
lcall
adc
mov
cmp
dec
cmpsl
lahf
jge
fisttpll
xor
xor
mov
cltd
jle
das
sbbb
dec
or
cmc
test
and
and
jbe
orl
jp
sti
insb
mov
dec
fwait
mov
push
arpl
mov
ljmp
jge
push
fmuls
ljmp
push
cmp
repz
push
daa
arpl
cmp
xchg
fldl
jecxz
push
or
outsb
mov
es
lcall
mov
aad
xchg
push
cmc
popa
lcall
mov
and
cmp
xchg
lcall
xor
sar
lcall
bound
aam
inc
lods
nop
stos
sbb
std
fdivrs
orb
outsb
mov
jg
sub
xchg
stos
cwtl
mov
or
cmp
jg
loop
shrl
nop
cmp
jo
and
ja
decl
outsl
movsb
dec
push
in
leave
pop
xchg
in
int
adc
loopne
xor
pushf
fisttpll
sbb
jg
ljmp
jge
fsubrl
scas
out
add
adcb
pushf
sub
jne
orb
gs
call
bound
sbb
scas
cli
incl
mov
fucomi
push
cmp
mov
fsubrl
push
add
jg
and
jg
decl
scas
lret
cmpl
xchg
insb
lret
jnp
mov
ljmp
movmskps
arpl
or
mov
sub
loope
xor
shll
lret
out
pop
outsl
js
leave
insl
es
push
dec
sbb
mov
lret
cwtl
cltd
add
aam
mov
cs
cmp
pop
outsl
fs
and
sub
adc
pop
xor
mov
mov
daa
pop
and
cmpb
in
fldcw
pop
shlb
pop
or
call
adcl
dec
out
test
lods
sbb
sti
mov
loope
cli
ja
xor
inc
cmp
push
in
ret
sahf
aas
out
push
mov
or
pusha
pop
push
dec
mov
fistps
cmp
dec
addr16
push
pop
or
adc
outsl
cld
arpl
jno
sub
mov
jne
daa
sub
dec
add
sub
in
test
call
cmpsb
mov
test
mov
jno
push
push
nop
in
enter
shl
jmp
bound
jae
cmp
sub
add
cli
mov
fwait
into
cmp
pushl
std
pusha
sarl
imul
jbe
rcrl
addr16
out
pop
rolb
pop
es
subl
sub
jae
xor
test
in
addl
pop
sti
aam
pushl
scas
fistps
jge
inc
out
jbe
movsl
jbe
pop
hlt
decl
xchg
xchg
dec
inc
dec
pushf
mov
iret
popa
call
sub
cmpsb
jmp
sbb
lock
test
icebp
cld
lahf
jmp
andl
je
addr16
mov
ljmp
jl
push
mov
xchg
cld
sti
repz
mov
jp
pop
mov
jo
ret
pushl
dec
ret
or
movl
mov
push
dec
scas
dec
sti
ss
cmp
les
sbbb
jb
incl
jmp
scas
cmp
ds
jnp
pop
pusha
xorl
cmp
popf
push
mov
pop
cmp
jg
jne
clc
or
sub
icebp
fsubp
xor
adc
inc
mov
jl
push
cld
push
ss
xchg
pop
jge
shlb
sbb
xchg
ss
out
nop
ret
test
test
mov
lret
jbe
sbbl
xor
jbe
movsb
movsl
in
cmpsb
rorb
fcoms
jns
mov
ja
cmp
lcall
push
inc
pop
repnz
sub
ret
cwtl
push
and
ss
adcl
aad
popf
in
xchg
mov
fisubl
add
mov
bound
inc
mov
sub
adc
pop
jnp
data16
call
sub
cmpl
mov
insl
dec
aas
idivb
shr
sbb
std
jne
ljmp
test
mov
into
jne
and
cmp
daa
shlb
adc
ret
arpl
leave
imul
dec
mov
push
aad
xchg
mov
cmp
pop
leave
and
ljmp
jb
jo
fs
dec
push
pop
push
mov
fisttps
fcomip
push
aad
pop
fs
or
movsl
sarb
dec
cmp
mov
ds
inc
push
les
aam
popf
adc
sbb
pop
dec
mov
push
sbb
sub
push
ds
xchg
dec
mov
out
adcl
popf
adc
push
or
pop
dec
loopne
or
mov
fsub
decl
or
add
loop
lods
sub
scas
xchg
and
xor
inc
sub
and
pusha
jns
faddp
jo
nop
mov
int3
cmp
mov
aaa
ljmp
fstl
daa
bound
sub
addr16
mov
lahf
aaa
lret
ss
adc
lcall
mov
andb
sbb
adc
pusha
mov
ror
dec
adc
adc
inc
adc
mov
adc
mov
imul
ljmp
aam
sub
xorb
lock
inc
pop
daa
sub
push
inc
bound
js
dec
mov
sub
sub
data16
mov
inc
xor
sbb
dec
mulb
jmp
or
addb
jmp
mov
inc
mov
cmpsb
push
xbegin
loopne
decl
add
or
shl
push
mov
push
xorl
shll
lods
ds
pop
dec
mov
popa
lods
aad
ljmp
inc
jo
mov
or
imul
fimuls
sbb
jg
cmp
xor
or
fidivrl
sub
inc
push
fmul
popf
stos
mov
pushl
add
jmp
push
subl
fisubl
hlt
and
mov
push
adcl
or
ljmp
sbb
out
int3
insl
mov
sub
insb
inc
cwtl
and
cwtl
or
outsl
fsubrs
imul
sbb
scas
xor
mov
mov
push
and
jnp
in
sub
pop
xor
and
sub
ljmp
sub
sti
pop
js
shr
push
out
add
push
add
or
push
cltd
push
cmp
call
incl
push
inc
push
sub
mov
js
pop
cmc
iret
lea
incl
dec
mov
cmp
xchg
es
and
sub
mov
lods
jo
xor
pusha
inc
fwait
add
sbb
call
mov
fld
int3
fimull
lods
lods
cli
cld
lock
sbb
mov
inc
push
pop
xrelease
aas
xchg
jg
call
gs
xchg
inc
mov
mov
jmp
mov
lret
stos
mov
loopne
ljmp
mov
repz
or
adc
fwait
push
xor
sbb
pushl
inc
jb
cmp
iret
insl
mov
cmp
lods
and
aam
pop
lret
mov
ljmp
lock
add
mov
fcompl
xor
lcall
mulb
loopne
test
pop
dec
stos
iret
jl
push
mov
in
mov
jmp
orl
xlat
cmp
movsl
mov
sbb
sbb
and
les
rcrb
cmpsb
scas
inc
insl
jle
sub
sbb
jge
repnz
or
repnz
pushl
cli
jg
jle
lret
lods
fdivr
fadds
loope
lret
decl
cmp
push
sbb
loopne
dec
xor
mov
or
mov
jl
stos
movsl
xor
cmp
push
dec
mov
adc
push
shlb
lret
push
jmp
lods
mov
decl
mov
jbe
decl
sbb
inc
mov
cwtl
mov
fldl
in
mov
add
xchg
leave
push
call
icebp
push
clc
mov
outsl
sub
movsl
hlt
mov
aad
or
sub
jbe
mov
lcall
add
cmp
cmc
inc
fwait
test
pushf
xchg
fadds
mov
fldl
scas
jp
adc
pop
loopne
add
or
dec
push
xor
xchg
pop
sbb
fucomp
mov
pushf
dec
push
jo
inc
jno
dec
sub
mov
push
jnp
dec
add
in
sbb
and
jae
dec
sbb
les
or
sti
outsl
clc
fcomip
xor
push
shll
xchg
dec
dec
adc
scas
xchg
xchg
dec
sarl
inc
or
jo
adc
sahf
xchg
mov
push
xchg
inc
sar
mov
pushf
dec
fisubrs
cmc
cmpl
cmp
stos
loop
mov
pop
xchg
xchg
ljmp
in
mov
jae
xor
sbb
ljmp
clc
rcrl
out
int
scas
mov
xchg
add
jp
xor
pushl
push
jge
push
out
pop
mov
scas
sahf
jl
push
int3
sbb
fiaddl
cmpb
adc
lcall
xchg
jmp
dec
xchg
jne
stos
sub
pushl
mov
sbb
push
paddw
hlt
jle
mov
int3
stc
icebp
push
and
dec
lea
mov
inc
inc
mov
xchg
pop
mov
int3
xchg
in
xchg
ficompl
hlt
ds
push
inc
out
or
imull
incl
lods
mov
sub
lcall
dec
shrb
dec
inc
jo
mov
loop
or
popa
fs
jbe
cmpsb
jae
cmp
inc
push
jns
lcall
push
movb
call
mov
pop
push
mov
cmpl
pushf
call
std
incl
inc
shrb
enter
jp
lds
les
lret
jl
cmp
pop
fdivrp
cld
lds
jge
fcmovnbe
push
cltd
call
fsubp
cmpsb
je
push
andl
pop
fildll
pushl
pop
scas
mov
aaa
aaa
shrl
cmp
sub
std
jle
mov
push
push
pop
icebp
xchg
stos
lret
xor
icebp
inc
jnp
cwtl
xchg
inc
ja
jno
xchg
das
add
or
pushl
cwtl
cmpsl
or
mov
int
pop
pusha
pop
push
inc
arpl
mov
jg
outsl
clc
pushl
js
cwtl
push
mov
dec
cwtl
mov
or
inc
pop
nop
or
lcall
and
leave
cli
fdivrl
es
push
ljmp
ja
ja
stos
jno
push
mov
dec
sbb
inc
inc
mov
mov
shlb
dec
andl
out
xchg
mov
sub
ljmp
xchg
in
pop
hlt
adc
bound
faddl
xlat
push
lret
dec
dec
xor
mov
jmp
data16
dec
add
adc
pop
adc
fistpl
call
in
pop
sahf
jp
stos
stc
mov
jbe
hlt
nop
push
stos
test
add
in
gs
lea
lret
cmc
ljmp
mov
icebp
and
adc
add
pop
mov
aad
in
loope
cs
jns
insl
dec
filds
inc
xchg
push
mov
xchg
dec
into
fcomip
xchg
or
out
outsl
lret
pushf
aam
and
test
jmp
lret
notl
jp
push
pop
add
add
imul
call
dec
mov
loopne
ljmp
inc
mov
inc
ret
mov
or
push
and
mov
and
out
dec
push
incl
cld
bound
lock
dec
and
push
ljmp
ret
or
inc
decl
je
divb
cmc
lods
test
lret
inc
sbb
jmp
test
fsub
xchg
fildll
cmp
dec
lret
push
and
ljmp
add
daa
adc
call
adc
decl
shrl
loop
mov
nop
shlb
flds
adc
xchg
out
adc
pop
in
sbbl
imulb
pop
jae
imul
rorb
ljmp
insb
cmp
shl
lds
repz
loope
stos
mov
call
xor
jmp
cmp
stos
mov
shld
test
jl
pushl
std
jb
mov
mov
fs
jmp
jp
mov
popa
or
inc
imul
pop
xchg
ficomps
in
rcr
popf
test
iret
cs
icebp
scas
out
xlat
jmp
flds
mov
ret
add
fdivrs
fists
mov
pushl
ds
in
lahf
inc
rorb
ret
adc
cmp
cmpsl
test
push
adc
call
mov
popf
popf
les
push
jecxz
int3
mov
test
sahf
jnp
push
pop
mov
or
movsl
add
scas
push
xchg
xor
or
inc
pop
jl
ja
push
xor
jno
sti
dec
add
pushl
and
pop
push
outsb
inc
fld
lret
cld
fisubl
lcall
daa
popf
test
test
insb
test
movsb
add
fisttps
es
mov
loope
scas
push
push
repz
pop
stos
test
inc
test
les
ja
add
mov
or
mov
dec
out
cltd
cmp
add
mov
incl
adc
adc
pop
leave
mov
mov
adc
imul
pushf
in
and
pushf
sub
dec
decl
cmp
stc
cmp
xchg
mov
or
lods
out
repnz
dec
or
mov
lahf
imul
aam
adc
pop
mov
das
add
sbb
add
cmp
mov
jmp
je
mov
sbb
jae
aaa
jns
xchg
mov
pop
and
lea
xor
jae
cltd
loope
adc
push
sbb
inc
test
cmp
lds
nop
fcoms
adc
cmpsl
and
add
loop
imul
mov
mov
xor
lcall
shll
pop
push
inc
jae
cmp
push
xchg
nop
bound
scas
push
adc
and
iret
mov
call
sti
xchg
jo
mov
repz
addr16
push
fdivl
push
call
xchg
sbb
xchg
sti
std
outsl
jle
or
and
loopne
xchg
ljmp
cmpsl
mov
cltd
xor
adc
pop
push
cld
jp
pop
mov
aaa
data16
add
inc
push
mov
and
into
dec
lds
pmullw
pusha
xchg
add
cmovs
jecxz
movsl
loope
jo
call
and
sti
test
push
push
mov
dec
and
xor
add
mov
rolb
push
adc
loope
mov
mov
and
mov
add
fldcw
mov
movsb
cs
pop
push
lods
add
adc
pop
rclb
mov
lret
xchg
leave
repnz
incl
movsl
out
pushf
xchg
fdivl
xor
fcomip
xchg
fstpt
shrb
incl
mov
mov
sub
push
sbbl
inc
ljmp
sub
inc
data16
fiadds
jg
mov
push
sbb
pop
scas
mov
jb
arpl
dec
pop
mov
jle
ljmp
lcall
push
adc
inc
jnp
leave
std
mov
decb
lock
mov
sub
add
add
out
push
dec
or
pushl
jecxz
cmp
movsl
jbe
jle
hlt
cld
enter
mov
test
xor
in
mov
in
or
jbe
add
in
mov
mov
cs
jp
ror
je
ud0
incl
push
out
int
outsl
cmp
or
in
insl
fdivrp
mov
cmc
mov
jmp
dec
cld
or
xlat
lret
jne
add
dec
repnz
in
jns
xor
in
call
fadds
pop
or
lods
adc
adc
aas
mov
je
ljmp
push
in
in
std
lcall
cmp
ljmp
mov
into
cmpsl
loop
les
daa
push
xchg
jbe
into
out
arpl
mov
jns
outsb
ljmp
ja
out
inc
inc
in
add
xlat
in
dec
pop
xchg
cmc
or
dec
push
mov
leave
ss
cltd
test
push
outsw
in
andb
jb
xchg
push
adc
incl
push
or
sub
insl
sub
mov
shr
jge
insl
or
call
pop
pop
mov
jmp
push
arpl
dec
mov
push
or
push
mov
lds
mov
jg
divl
jle
jns
jg
lahf
pop
test
cli
cmpsb
dec
rcll
push
jle
add
loopne
add
adc
fsubr
xor
loopne
cmpb
pop
fnsave
add
movsb
jne
ljmp
dec
ss
add
sar
lret
rclb
mov
mov
xchg
stc
repnz
cmp
adc
fildll
xchg
jg
call
call
jo
aaa
sub
dec
add
jp
cmp
or
mov
jmp
xchg
mov
mov
data16
pop
mov
and
ja
sub
in
lcall
xchg
lods
out
mov
jnp
mov
aam
ljmp
movsb
xlat
or
std
inc
enter
pushl
stc
dec
jae
jae
lret
bound
clc
lcall
adc
jecxz
sbb
lds
stos
adc
repz
pop
inc
je
xchg
mov
les
dec
rcll
in
loop
es
lret
imul
xchg
ja
cmp
lods
add
lcall
push
lods
notl
in
sbb
push
xchg
mov
and
roll
sbb
sbb
in
push
clc
das
xchg
jo
pop
or
shlb
popfw
jp
xchg
lcall
pushf
popa
std
in
stos
test
xchg
cmp
loopne
fldcw
je
xor
jg
sbb
add
lahf
fisttps
enter
stos
inc
aaa
pop
mov
lret
or
sarl
dec
cmp
icebp
flds
add
mov
inc
jo
add
cmp
cld
xlat
xchg
outsl
insl
std
sti
cmpsl
mov
repz
outsl
stos
fimull
or
lods
paddq
pop
or
ja
add
lcall
mov
ljmp
iret
cmp
mov
pop
ret
repz
or
flds
pop
sub
mov
sub
sar
decl
insb
imul
std
pop
aaa
lods
imul
pop
std
jg
push
add
mov
aaa
nop
adc
aaa
ret
mov
and
inc
in
nop
lods
scas
push
mov
imul
in
sahf
jns
or
ficoml
loopne
arpl
lcall
loope
jmp
or
mov
mov
adc
ja
jno
cmp
dec
mov
call
jmp
fucomp
stos
gs
or
xor
xchg
mov
mov
mov
outsb
decl
cmc
or
inc
rcrb
mov
sbb
push
cmp
pop
dec
cmp
jo,pn
into
out
xor
push
xor
and
divps
and
ljmp
fidivs
xor
enter
cmpsb
loop
and
sahf
scas
imul
add
leave
decl
test
xchg
divl
data16
push
cmpb
jnp
adc
movsl
test
subb
hlt
adc
sbb
or
adc
test
lods
jbe
popa
dec
rolb
inc
insb
loop
inc
lret
sbb
jg
test
sub
mulb
jle
jl
lret
jg
fldenv
dec
std
mov
lcall
jmp
ja
add
and
ret
fiadds
xchg
scas
cmp
dec
or
outsl
notl
add
push
cmp
cmp
hlt
pushf
xor
pop
sbb
mov
xor
incl
test
sbb
mov
push
popf
xchg
inc
jae
addr16
cs
jge
pop
popf
stc
xlat
hlt
shrl
sub
xchg
insb
xchg
push
cmc
and
lea
pop
sub
push
pushl
jl
cmpsl
mov
jg
sub
sti
test
and
out
lods
xchg
jmp
dec
popf
dec
jb
or
mov
push
rcrb
enter
decl
xchg
add
insl
ficoms
push
jo
mov
repz
push
mov
mov
sbb
test
incl
enter
imull
mov
loope
or
or
jp
sahf
sbb
out
lcall
dec
dec
push
insb
push
je
rcl
cmp
inc
sub
test
dec
ja
aaa
std
push
call
stos
adcb
dec
push
lods
or
imul
push
and
les
adc
and
pushf
bnd
jg
cmpb
test
syscall
fsub
ljmp
shlb
mov
xchg
xor
cmpsl
or
loop
push
pop
push
add
mov
adc
add
push
jge
arpl
push
xor
cltd
cmp
out
or
ficompl
fwait
cmp
call
daa
adc
imul
je
sahf
pushf
std
lret
rol
in
aam
mov
mov
jne
lret
xchg
lret
icebp
push
les
movsb
mov
fmull
xchg
out
cmp
jb
cmp
shl
push
or
push
sahf
mov
sbb
push
mov
push
sbb
or
scas
mov
push
add
dec
loope
ss
mov
ljmp
std
and
pop
shl
test
into
test
dec
sahf
pop
outsl
pusha
test
pop
sub
jg
fwait
lea
inc
iret
cmpsl
cmp
cwtl
test
stc
test
mov
ljmp
bound
cmp
cld
cld
jb
test
inc
cmp
mov
inc
daa
jo
shlb
pop
sub
das
std
and
prefetchnta
fcomip
inc
cmp
jecxz
stc
pop
icebp
pop
es
jl
jb
or
adc
mov
jl
lret
jl
or
push
movsb
shl
add
cmp
cltd
jne
fcomps
cli
incl
or
in
push
iret
adc
xor
jne
dec
dec
push
pushf
jg
out
jns
inc
xorb
add
xchg
push
outsb
add
push
push
sbb
out
and
sbbl
xlat
call
repnz
bound
out
jmp
xchg
pushf
fdivl
test
nop
xchg
sbb
dec
push
out
loopne
ret
fnstsw
push
xchg
nop
bound
ljmp
lods
aam
jo
insl
jg
inc
jns
cmc
call
mov
jecxz
das
sar
pushf
dec
ret
xchg
adc
dec
mov
rcr
ret
ja
roll
inc
arpl
in
gs
sub
pop
bound
lcall
decl
rorb
je
mov
call
pop
sub
decl
push
cs
cs
fwait
ljmp
bound
mov
xchg
adc
loope
inc
fisttpll
mov
lret
pop
or
push
adc
mov
inc
mov
cmp
push
xlat
sahf
inc
inc
cld
dec
repnz
iret
mov
lea
ret
jp
mov
clc
cmp
push
xor
add
les
mov
pop
pop
jae
ljmp
mov
jmp
inc
bound
shlb
dec
jb
and
enter
sbb
aam
int3
incl
fs
jle
xchg
push
add
jnp
sbb
or
xor
ljmp
xor
test
xor
and
adc
adc
js
jg
jns
mov
popa
inc
dec
test
jmp
push
stc
xor
cmpsb
mov
pushl
sti
inc
fwait
idivb
movsb
mov
call
lcall
mov
into
lds
inc
nop
scas
inc
cld
in
inc
jge
in
mov
pop
dec
mov
insl
outsb
addr16
or
sarl
insb
pop
hlt
inc
out
push
jb,pt
adc
scas
into
pop
decl
push
je
jmp
xchg
cmp
cmp
mov
imulb
lret
adc
fsubl
sub
imul
jmp
out
fdivl
cmpsl
shl
or
stc
das
xchg
insb
push
movsl
call
push
fcomp
fimuls
xor
mov
pop
and
sbb
rclb
sbb
push
adcb
inc
in
mov
clc
push
push
daa
inc
lret
jmp
inc
fsubrl
mov
mov
dec
aas
in
cmp
mov
jmp
into
sbbl
jmp
pop
imul
rorb
rcl
in
mov
jmp
dec
sar
cmpsb
in
in
sub
fdivs
fsubs
stos
xor
or
sub
repnz
add
jg
mov
pop
cli
rcr
push
rclb
mov
mov
ret
lods
and
and
outsb
inc
ret
mov
sbb
pop
mov
outsb
or
jg
gs
in
dec
and
mov
js
mov
call
mov
xor
call
jl
xchg
push
ja
orl
add
cmp
movsb
jg
popf
out
dec
cmpsb
ljmp
loope
mov
xor
xchg
push
enter
stos
cmpsb
xor
fldt
mov
mov
jle
stos
ja
cmp
cmp
les
mov
es
decl
fisubrs
popl
dec
xor
dec
in
int3
add
or
lcall
inc
add
daa
std
push
jmp
pop
xchg
adc
mov
roll
test
ficoms
inc
clc
mov
sti
std
bound
repnz
pushl
and
test
fildll
xchg
out
fwait
dec
pop
ja
and
cmpsl
adc
aas
sahf
cld
sbb
arpl
mov
pop
insb
call
sub
jl
cmp
jae
sbb
jnp
sub
jmp
nop
cmp
das
lds
cmp
push
mov
rcr
sub
add
mov
not
push
ret
scas
incl
aaa
or
shlb
fcompl
sub
mov
ret
push
xor
jmp
jmp
inc
sahf
nop
test
outsb
pusha
outsl
inc
hlt
push
pop
andb
mov
into
sahf
loopne
cmp
nop
sbb
mov
xchg
aad
fisubrl
push
bound
dec
inc
mov
mov
dec
test
xchg
pop
jb
test
xor
or
dec
sbb
adc
cltd
rcll
cli
jno
adc
mov
mov
rcll
shl
sub
push
in
test
or
hlt
xchg
dec
inc
push
add
jg
xlat
inc
cmpsl
outsb
push
fcomp
into
push
in
mov
out
pusha
aaa
loop
add
lahf
das
orb
cmp
in
sbb
lcall
jmp
mov
pop
sbb
stos
bound
adc
sub
mov
stc
xchg
pushf
in
push
push
mov
push
ret
out
sbb
call
jmp
pop
in
xor
leave
dec
lods
mov
lods
ja
mov
aad
mov
mov
ja
jbe
cmp
fildll
shrl
pop
fcmovnbe
xchg
ljmp
add
push
jne
std
jnp
sahf
add
insl
mov
jo
jae
call
rol
push
lahf
push
xor
nop
scas
out
jg
jns
jo
or
ret
aam
pop
daa
pushf
lock
inc
mov
dec
push
or
enter
fs
or
lcall
push
cmp
popa
or
incl
and
mull
mov
xor
jecxz
push
and
ljmp
jo
cli
add
jg
and
test
test
in
ja
mov
cmpsl
mov
fistpll
or
add
ret
fucomi
xchg
push
adc
shrb
pop
pop
pop
jge
inc
adc
js
sbb
cmp
enter
scas
push
xor
lods
mov
sbb
shr
roll
clc
jmp
dec
dec
mov
aam
idivb
jmp
lahf
xor
add
xchg
xor
cmp
mov
mov
sub
lret
pop
lods
or
adc
jg
nop
add
lcall
add
lock
ficoml
xor
xor
cld
out
add
in
lcall
mov
arpl
mov
test
inc
cli
mov
enter
ljmp
ss
divb
mov
mov
inc
out
pop
cltd
test
fcmovbe
mov
mov
fnop
or
jb
imul
jge
push
es
insb
inc
cmp
shr
mov
jg
incl
fsubs
and
in
push
pop
das
dec
mov
incl
mov
ljmp
push
or
imul
in
sub
into
lahf
test
xchg
popa
outsl
icebp
or
int3
test
stos
mov
cwtl
cmpsl
fcoml
add
mov
xchg
test
fs
in
xchg
add
aaa
add
mov
fcomip
pushl
aas
cmp
lods
push
mov
add
sub
out
outsl
pop
sar
clc
das
incb
rcll
dec
cmp
loopne
mov
push
jg
xchg
out
in
add
jbe
daa
jp
sub
ljmp
mov
xor
lods
icebp
pop
mov
and
daa
jb
cld
jg
test
xor
and
ret
jecxz
test
jne
call
aad
jno
fcomip
rclb
sbb
hlt
aam
xlat
out
adc
sub
call
and
xor
sahf
adc
lcall
lret
push
mov
mov
test
cmp
dec
sbb
jns
call
sbb
bound
sti
in
test
lahf
and
ljmp
xor
push
mov
jl
xchg
inc
pop
cmp
and
and
inc
xchg
mov
jne
inc
ljmp
decl
pop
sbb
mov
jbe
imulb
stc
sub
pop
dec
in
loop
sub
mov
scas
clc
sub
cmp
jmp
dec
mov
insb
sub
sbb
lea
outsl
push
ja
mov
jns
scas
test
fsubp
push
subl
test
fcoms
push
add
cmp
push
push
ljmp
test
mov
lea
shlb
lea
cs
xlat
push
xchg
xor
push
ss
add
xchg
scas
mov
cmp
xor
jno
or
jmp
xchg
dec
adc
inc
imul
ret
cmpl
sbb
xor
shll
inc
outsl
push
dec
fisttps
adc
imul
insb
popa
insb
cltd
push
fstpt
cwtl
cmp
mov
jp
imul
aas
into
insl
in
rorl
inc
adc
cwtl
sbb
shll
adc
sarb
mov
inc
scas
lret
sbb
xor
popa
pushf
inc
dec
ret
inc
push
add
test
insb
adc
mov
jg
jmp
in
scas
mov
sahf
lods
push
repnz
mov
ret
ljmp
mov
sarl
loopne
stc
outsb
imul
jne
jo
das
xchg
ss
jmp
push
xchg
movsl
push
xlat
jmp
stos
loopne
loope
loope
imul
adcb
clc
out
mov
jmp
incb
loope
orb
bound
and
sub
leave
das
pusha
mov
push
ret
dec
call
ja
xchg
push
push
daa
arpl
or
repnz
jg
pop
push
adc
std
pop
clc
paddusb
imul
jge
sub
call
mov
roll
outsb
scas
push
mov
arpl
jmp
jbe
push
and
ds
and
pushl
mov
add
jne
ficoml
fucomip
mov
xchg
xor
ret
lahf
push
fsts
jno
cli
lock
stc
and
pop
inc
std
js
js
and
inc
out
repnz
cli
in
lret
xchg
lcall
xchg
jae
pop
sti
xchg
rcl
xlat
jge
cmp
into
or
mov
ds
gs
jne
xor
repz
dec
dec
ljmp
repz
aas
ret
jo
mov
out
adc
pushf
out
ret
pop
cmpsl
xchg
sbb
cmp
mov
cmp
cld
push
scas
xchg
cltd
test
mov
outsb
mov
push
xor
in
call
inc
inc
xabort
mov
lea
iret
jg
mov
inc
cld
add
add
jl
stos
test
xor
incl
and
lahf
lds
pop
in
ret
imul
mov
push
pop
lea
adc
scas
pop
orb
int3
xor
sub
dec
ljmp
sbb
inc
mov
xor
popa
loope
fs
iret
and
mov
ljmp
and
call
jle
xlat
mov
pop
in
in
stc
mov
ds
imul
mov
fistl
mov
movsl
popf
orl
or
incl
es
enter
adc
sbb
or
push
xor
outsb
imul
sbb
stos
scas
mov
sar
jb
cltd
sub
fwait
sti
out
xor
cli
lret
out
pop
push
dec
imul
sub
sub
inc
inc
mov
xor
stc
in
push
scas
out
dec
fdivrl
ss
pushl
ret
enter
data16
fsubs
test
int
dec
mov
jecxz
aam
push
idiv
lcall
mov
jnp
shlb
insl
int
ljmp
adc
and
push
mov
xor
cmp
int3
mov
mov
jbe
ss
lcall
mov
decl
shlb
xchg
lods
dec
jns
popf
push
leave
gs
jl
idiv
imul
in
fidivrs
call
push
out
hlt
xchg
lahf
ljmp
ljmp
push
aad
outsl
cmpb
adc
pop
or
or
mov
sub
test
push
call
lcall
jmp
lods
insb
add
mov
xchg
jno
mov
cmp
stc
mov
xchg
sub
lcall
mov
ljmp
dec
outsl
mov
add
mov
loopne
fstps
mov
out
jne
orl
pusha
mov
xor
dec
xchg
inc
pop
ret
sbb
mov
sahf
lret
mov
add
push
stos
pop
outsl
adc
push
in
jne
jl,pn
pop
mov
incl
call
xchg
and
mov
sahf
dec
je
mov
add
neg
push
stos
dec
in
sarb
popa
adc
shll
sti
push
lock
mov
iret
sub
mov
inc
add
ljmp
xorb
mov
xchg
push
out
sahf
dec
loope
aaa
cld
inc
adc
mov
push
jp
pop
push
xor
add
imulb
sub
sbb
or
mov
mov
stos
xchg
cs
js
or
sahf
pop
inc
lret
rorl
call
mov
lcall
dec
sbb
cltd
addr16
sub
mov
jne
repz
scas
cli
sbb
js
jns
jno
push
in
aas
ljmp
popa
inc
pop
push
in
call
or
je
fcoms
call
pop
xlat
rorb
mov
inc
je
lods
int3
and
cmp
push
and
decl
hlt
lahf
lret
cmp
cmp
push
dec
mov
jno
sub
pushl
shr
es
pop
pushf
fadd
cmovno
add
push
jno
add
and
xor
dec
ror
adc
outsb
xor
push
je
stos
dec
mov
and
add
arpl
nop
aad
pushl
pop
and
or
mov
fmul
mov
into
xchg
ss
mov
jp
mov
incl
in
push
aad
andb
push
mov
mov
sub
cs
rcrb
fcomip
int3
adc
adc
add
xchg
lock
mov
fisttps
data16
jg
or
call
sbb
loope
nop
call
adc
xchg
mov
nop
inc
jg
pop
mov
movl
iret
xchg
xor
call
aad
pop
add
or
push
rcrb
arpl
add
jno
mov
fdivs
jo
jg
sahf
fimull
mov
sub
cmpsl
sbb
jl
popf
pusha
xchg
push
fbstp
decl
jne
cmpsb
jp
leave
and
insb
in
xlat
idiv
push
push
adc
mov
or
or
fs
test
xchg
mov
sbb
or
pop
and
inc
js
in
lcall
jmp
bound
ss
imul
out
adc
call
outsl
inc
mov
imul
cmpsb
fcomps
pop
int
orl
aaa
stos
mov
fstpt
and
mov
adc
jl
call
inc
fldt
dec
pop
adcb
xchg
xchg
sub
mov
xchg
mov
xchg
imul
push
sbb
sub
inc
popf
mov
jbe
rorl
jp
mov
call
dec
pop
ja
rorb
fcmovu
pushf
out
cmp
arpl
cmpsl
es
hlt
lcall
pusha
adc
mov
mov
ficompl
movsb
cmpsb
rolb
jecxz
mov
push
and
test
cmp
inc
push
jl
data16
jg
add
outsb
scas
fstl
or
stos
inc
jge
sbb
mov
pushf
cmp
inc
jae
adc
xchg
sub
in
add
int3
mov
aad
sub
xor
decl
and
fdivrs
test
push
xchg
push
and
pop
mov
icebp
lea
dec
ljmp
outsb
rorb
or
dec
jmp
scas
int3
dec
xchg
push
call
sub
and
adc
jno
push
adc
cmp
mov
add
stos
outsb
and
jmp
cmp
sub
js
jp
outsb
loopne
in
inc
dec
adc
lret
dec
clc
cmp
pushl
inc
iret
add
sub
jns
fidivrs
jbe
inc
cmp
mov
mov
xor
push
jg
in
sub
or
sti
cs
sub
sbb
lcall
pusha
and
sbb
and
int
in
dec
or
call
sub
cmp
movsl
ficomps
cmpsl
and
aam
pop
ljmp
cmc
decl
orb
sub
shrb
jmp
inc
lcall
jg
pop
add
jg
fiaddl
pop
adc
jb
xor
cmp
fsubr
ja
adcb
nop
fistl
mov
dec
xor
jns
push
movsl
aam
inc
sbb
sbb
aaa
jbe
dec
and
js
mov
loope
loop
or
push
movsl
decl
decl
jle
xlat
xchg
jae
outsb
push
rorb
cmpsb
dec
xor
xor
repnz
popa
xchg
jg
andb
or
mov
call
mov
clc
ljmp
adc
clc
inc
call
xchg
insb
mov
gs
fadd
lret
xchg
or
mov
xchg
out
mov
jne
bswap
cmp
ljmp
mov
push
pop
jo
jp
push
mov
popf
xchg
cmp
jmp
sbb
mov
cld
stos
sbb
mov
inc
and
push
inc
mov
scas
mov
inc
lcall
add
cmp
xor
fisubrl
push
inc
lret
je
pushl
fwait
jmp
mov
scas
jg
cltd
dec
xchg
push
repz
push
pop
push
mov
decl
movsb
adc
sub
dec
xor
add
dec
pop
mov
mov
jp
pop
jb
adcb
mov
dec
aas
rol
fildll
fldenv
dec
xchg
sbb
pop
pusha
lds
or
jbe
and
mov
ss
lret
cmpsl
and
std
in
ljmp
lods
call
jne
sbb
ss
subb
shrb
shlb
sar
call
testl
cmpsl
sbb
or
xchg
push
pop
scas
mov
in
in
push
or
call
enter
and
shlb
es
sub
fnstenv
push
ja
lret
ds
dec
mov
lcall
pusha
lcall
push
stos
shrl
and
cmp
jnp
xchg
aad
incl
or
inc
sti
pop
movsb
into
sbb
adc
jg
aam
dec
test
dec
cmp
add
mov
out
mov
leave
jno
bound
xor
ljmp
add
cs
int3
out
movsb
outsb
and
inc
js
jns
sub
mov
enter
das
negl
test
fsubrl
aaa
jle
call
inc
fistps
jnp
movsb
int
es
and
adc
in
sbb
mov
fcomip
lods
adc
mov
jmp
cwtl
push
ret
mov
test
aaa
add
xor
sbb
adcb
jecxz
gs
es
decl
mov
mov
out
jno
out
mov
loop
push
ljmp
cli
xchg
sahf
or
movsl
lcall
loopne
push
shrl
mov
bound
fwait
clc
ljmp
adc
incl
dec
outsb
rcrl
mov
out
pushf
imul
fwait
mov
cld
movsl
out
add
and
enter
sbb
decl
dec
add
adc
out
inc
sbb
movsl
xorl
aas
jns
jb
cltd
cmp
mov
adc
jl
push
lret
jbe
enter
les
repnz
decl
push
ret
shll
sbb
stos
hlt
pop
insl
in
test
lock
outsl
incl
sub
pop
shlb
mov
sbb
adc
fdivs
call
jmp
push
jbe
dec
cmovs
outsb
xchg
int
int3
movsb
pop
mov
pop
decl
addb
push
les
scas
int3
mov
aaa
movsb
in
nop
lret
xchg
test
ljmp
popa
repnz
sbb
fucomi
roll
sbb
inc
addr16
push
jle
jg
jecxz
add
pop
loopne
loope
mov
jae
pop
test
decl
xor
xchg
incb
neg
rcrb
fbld
mov
in
sub
std
mulb
inc
in
lock
sub
add
push
movsl
decl
xchg
xlat
fisttps
cmp
icebp
outsb
iret
call
add
pushf
sti
mov
clc
cmp
pop
inc
cld
cmp
mov
dec
popf
jb
fcmovbe
mov
mov
jge
incl
shl
jecxz
movsl
ffree
and
push
stc
jmp
mov
fcoms
inc
xor
or
xor
ljmp
pop
mov
aad
inc
lcall
xorps
jle
data16
sub
test
jmp
rorl
push
xchg
xchg
dec
in
jne
push
or
fists
fisubrl
jns
incl
repz
fildll
sub
mov
jo
xchg
cmp
mov
dec
and
repnz
loope
inc
pop
inc
push
js
mov
filds
fimull
push
xchg
mov
pusha
push
rorl
sbb
movsl
outsl
pop
insb
mov
sub
decl
mov
or
ds
addr16
lea
xchg
leave
daa
stos
divl
mov
ret
rol
sbb
dec
sub
in
imul
jbe
pushl
insl
aaa
xchg
nop
ret
jnp
test
pop
movsl
xor
sub
fs
mov
std
inc
pushl
cmp
dec
dec
cli
mov
mov
mov
dec
jae
insl
les
sbb
cmp
mov
or
sub
mov
subb
test
int
lret
decl
cmp
icebp
and
in
lahf
pop
jno
pop
dec
inc
mov
jo
sbb
xchg
shll
cld
bound
cwtl
xor
loope
push
pop
negb
mov
out
clc
fadd
std
sbb
test
sbbl
cmpsl
add
cld
call
xchg
pop
dec
ljmp
inc
adc
sub
int
mov
pop
mov
fdivrp
pop
div
stc
sub
mov
ss
mov
jmp
push
lcall
mov
ret
add
cs
ss
fsubp
dec
sub
lret
push
sbbb
das
pop
sti
call
loopne
aad
jl,pn
jb
adc
sub
add
jno
enter
test
repnz
cmp
jg
sbb
mov
cs
sub
inc
sbb
xchg
dec
les
fstl
inc
or
lods
pop
neg
sub
outsl
clc
incl
push
ret
jmp
pop
mov
fs
bound
test
pushl
das
movsl
and
dec
popa
cmp
mov
jne
sbb
cld
jle
aas
inc
pushl
or
push
out
bound
cmp
push
fwait
xchg
sub
test
and
lcall
jle
adc
inc
adc
insl
push
xchg
pop
mov
sbb
lea
out
add
das
mov
mov
cmp
cmpsb
leave
and
insb
pushf
ljmp
pusha
and
lcall
sub
jno
jp
clc
ret
and
shll
pop
les
out
movsl
scas
adc
decl
inc
aaa
jbe
sbb
xor
loop
inc
mov
sub
nop
inc
push
jnp
lock
push
imul
jg
lock
inc
leave
std
pop
mov
lret
xlat
push
mov
scas
mov
cmc
outsb
sarb
enter
jnp
xchg
xor
incl
jmp
enter
dec
clc
mov
outsl
rorl
je
adc
or
cmpsb
cmp
mov
jmp
cs
lods
sub
sbb
mov
cltd
pop
pop
movsb
jno
push
icebp
out
imul
and
call
xor
add
shr
xchg
ret
push
stos
ret
mov
mov
dec
mov
dec
mov
jnp
xor
jno
in
sub
in
in
cs
dec
mov
mov
xchg
push
cmp
decl
fwait
inc
xor
and
cmp
jbe
loop
inc
je
add
sub
mov
mov
pop
test
jmp
pop
fbstp
mov
jl
pushl
lds
cmpsl
xchg
in
cmc
sarb
ljmp
int3
mov
mov
push
das
popa
adc
and
into
shlb
ret
sbb
or
dec
insl
pushl
enter
and
pushf
xor
cmp
pop
mov
xchg
jno
fildll
sarl
push
add
sarb
fs
pop
cmc
jmp
stc
idiv
jno
fsubl
rcrb
jbe
pop
je
cmp
inc
dec
and
out
daa
lea
cwtl
adc
add
push
decl
inc
sahf
mov
jo
scas
imull
roll
inc
pop
sbbb
pop
cli
jmp
mov
stos
fmull
setb
enter
add
std
dec
push
insl
in
add
ret
mov
mov
mov
fwait
mov
jns
fisubrs
push
and
sub
push
cld
pushl
shll
loopne
addr16
and
dec
pop
fmull
ficomps
add
cmc
ljmp
add
push
outsl
popa
test
mov
ret
sub
push
lahf
les
aas
rcll
fildll
je
xchg
cli
loopne
dec
outsb
ss
sub
dec
mov
mov
int
push
fs
and
and
mov
and
inc
add
push
lcall
roll
faddl
sub
and
mov
jecxz
ljmp
jb
add
lahf
push
ljmp
jae
push
cmp
inc
xor
or
stc
rcr
shlb
shll
xor
fs
xchg
adc
cld
clc
mov
faddp
sbb
adc
and
into
popf
repz
dec
adc
iret
das
inc
jae
popa
add
jp
xor
outsl
lret
push
cmpsl
inc
xorb
mov
push
pop
clc
les
jl
ds
mov
push
std
incl
cld
int
andl
mov
popf
subl
call
sub
push
je
cmp
jg
and
aam
jno
pop
rcll
adc
stc
inc
mov
pushl
insb
add
or
aaa
push
arpl
mov
jne
mov
pop
cmpsl
lcall
scas
dec
dec
test
inc
ret
sahf
cli
dec
mov
lret
xchg
scas
push
scas
std
push
cmp
inc
jno
call
mov
in
lods
xchg
dec
je
sub
xchg
daa
in
aad
pusha
cltd
daa
xor
jns
and
aad
jle
and
adc
pusha
dec
adc
data16
adc
ret
fs
outsl
clc
fnstenv
icebp
loop
sub
xchg
repz
push
ror
leave
mov
call
sbb
jne
fcomps
xchg
mov
outsl
es
aam
sbb
inc
add
scas
fcompl
rcr
pop
adc
data16
ljmp
pop
jecxz
ljmp
add
sub
shrl
scas
cli
mov
sahf
jg
xchg
fwait
jo
add
adc
jecxz
push
arpl
outsl
decl
push
jmp
fadds
rolb
mov
inc
push
rol
sbb
lahf
arpl
cld
adc
incl
movsl
push
xor
lea
jb
and
in
add
dec
in
repnz
lret
insb
adc
mov
stc
xchg
mov
jns
ror
xchg
xlat
clc
pushl
insb
repz
negl
sti
dec
push
pop
les
repnz
sbb
dec
into
dec
sub
aam
xor
popa
lcall
icebp
jbe
add
lcall
sbb
sbb
add
leave
jbe
fwait
mov
jg
cld
aam
mov
mov
cli
mov
scas
mov
push
add
mov
mov
mov
ljmp
mov
rorl
pop
iret
stc
cwtl
es
xor
out
sbb
xchg
imul
jge
mov
outsb
dec
xchg
test
dec
es
aad
pop
mov
mov
mov
or
push
xchg
incl
loop
cmpsl
outsb
scas
xchg
outsl
loop
jo
call
scas
dec
lcall
mov
incl
fdivp
xor
int3
push
adc
or
xchg
inc
xor
cwtl
sub
cwtl
adc
cmp
les
insl
cmp
lock
je
cli
decl
sbb
xchg
fbld
cli
xchg
mov
in
inc
dec
sbb
enter
das
sub
lods
dec
sti
jae
add
jne
stos
mov
mov
ljmp
jle
out
ljmp
xchg
mov
cmpl
push
push
iret
test
push
enter
call
pmaxsw
xor
jecxz
orl
repz
jmp
jmp
mov
outsl
jmp
cwtl
hlt
xor
lods
test
sbb
out
inc
fwait
mov
iret
sar
dec
cmc
pop
lods
dec
fsub
jo
or
loopne
adc
push
fsub
jge
and
jno
mov
mov
pop
dec
and
dec
push
cmp
rolb
insl
das
add
inc
jmp
jmp
jmp
sbb
push
lock
insl
pusha
out
addr16
popa
inc
mov
movsb
cmpl
jl
inc
aaa
mov
loopne
adc
fwait
stos
dec
cld
inc
je
mov
test
enter
pop
jecxz
call
hlt
jns
pusha
jbe
aam
push
in
inc
jmp
xchg
dec
rorl
or
mov
loope
sahf
and
loopne
inc
mov
xchg
push
into
jl
pop
out
test
jo
pop
jp
pop
push
cmc
insl
mov
mov
shl
mov
sub
mov
repnz
incl
fwait
imul
mov
mov
push
insb
jno
cmc
iret
subb
rorl
and
sbb
inc
or
add
mov
and
or
call
and
lret
push
push
sub
jge
ret
in
push
loopne
and
inc
into
push
sti
xchg
xchg
lds
ljmp
inc
add
mov
mov
mov
addr16
xchg
adc
addr16
sbb
jmp
leave
mov
out
add
push
outsb
push
ss
das
jp
test
mov
test
jne
ud0
inc
jmp
dec
loope
out
cwtl
jns
js
pop
mov
mov
jp
popa
xchg
mov
decl
loopne
sub
in
push
cltd
out
mov
scas
mov
mov
jmp
aaa
fcoms
vmulss
sti
dec
bound
repnz
push
sti
pop
sbb
cld
mov
xchg
or
pop
enter
call
xor
cmp
xor
sub
in
cmc
pop
in
outsb
push
mov
jge
xchg
arpl
jle
mov
in
or
pop
xlat
fs
mov
dec
xchg
xchg
sub
dec
mov
mov
cmp
movsb
in
push
stos
outsl
or
dec
loope
ret
push
sub
leave
ljmp
mov
push
mov
not
or
ljmp
pop
mov
jecxz
push
jg
xor
xchg
imul
sti
fwait
jg
or
jmp
or
cmp
cld
lods
idivb
movsl
cwtl
cmc
std
stos
push
push
jno
outsb
add
sub
mov
hlt
lahf
aad
in
pop
aas
cmp
pop
aam
cmpsb
mov
or
lahf
push
lcall
es
and
xor
out
ret
adc
sub
dec
push
push
aam
es
cmp
movsb
cld
pop
mov
call
loopne
call
mov
jl
out
cmpsb
bound
ds
push
aad
lcall
mov
or
into
adc
mov
js
out
mov
sbb
pop
shrl
hlt
mov
jge
and
and
ds
in
xchg
and
cli
scas
outsb
shr
adc
orb
xor
rclb
xor
cld
fdivr
jno
dec
mov
push
mov
into
mov
call
hlt
mov
nop
pop
and
mov
outsb
movsb
push
ljmp
mov
xchg
out
stos
movsb
adc
jecxz
push
les
xchg
jge
jnp
cmp
pop
cmp
in
cmp
jno
push
inc
pop
lret
and
xor
out
stc
pop
out
incl
cwtl
cmp
ljmp
inc
and
xchg
push
sahf
push
xchg
lods
adc
aad
inc
jno
test
lcall
dec
jmp
into
rcl
repnz
pop
icebp
jne
xlat
jmp
test
inc
test
loop
addr16
push
jge
inc
aad
sbb
ss
push
add
adc
mov
jae
xor
iret
xchg
jmp
xchg
fmull
jl
ljmp
aaa
cmp
in
and
mov
jns
jnp
fstpt
dec
bound
mov
mov
xchg
les
stos
cmp
pop
adc
icebp
or
sbb
adc
jecxz
mov
mov
lahf
push
lcall
sahf
xchg
cmp
jnp
cmp
add
push
sbb
sub
lret
sahf
outsb
std
inc
test
divl
pop
mov
dec
fs
mov
pop
shll
stc
lret
ljmp
ret
lock
sbb
xchg
out
je
jae
rcr
insl
fldt
add
xchg
inc
in
jg
mov
shlb
jae
push
push
outsl
mov
mov
sub
sbb
sub
mov
cmp
add
pop
pusha
in
xor
push
sarb
xchg
sbb
pushl
cs
test
sbb
lret
orb
aaa
mov
in
xchg
les
ds
pop
addr16
mov
out
sarl
jo
lods
xchg
inc
cmp
push
sub
and
xchg
lcall
jp
dec
pop
fs
shlb
mov
or
inc
pushf
dec
or
loope
xor
and
inc
pop
mov
inc
cmp
mov
call
push
jp
mov
sbb
scas
lods
mov
lret
mov
aam
adc
lcall
call
add
dec
scas
mov
outsb
xchg
push
mov
sbbb
xor
in
sub
or
mov
mov
jg
and
roll
push
sub
sbb
push
inc
std
pushl
imul
movsl
push
push
sahf
mov
cmc
cmp
xor
mov
jmp
pushl
ljmp
xchg
gs
add
and
test
inc
and
out
insb
push
jmp
sbb
fadds
jne
out
jl
mov
sbb
push
and
loop
call
incl
or
in
jo
inc
xor
incl
test
push
jne
in
icebp
fdivl
icebp
sbb
leave
lret
incl
and
lods
mov
sub
add
mov
mov
adc
pop
or
outsl
int3
cmp
inc
cmp
arpl
inc
xor
mov
ds
pushfw
aaa
mov
add
call
enter
pop
decb
mov
inc
and
or
cmp
in
inc
lcall
leave
lock
jmp
out
mov
jo
mov
push
sti
xchg
mov
xchg
in
mov
cmp
lds
mov
popa
loop
fsubl
insb
push
cmpsl
mov
mov
dec
fsubr
xor
cld
sahf
cmpsb
mov
decb
and
shr
xor
mov
test
stos
clc
push
dec
lcall
cwtl
inc
xchg
xor
mov
lods
push
je
fwait
in
sub
cmc
lret
inc
lcall
ja
les
pop
mov
fcmovu
fdivrp
call
loopne
inc
insl
rclb
pop
ret
adc
mov
call
decl
bound
xchg
test
cmp
mov
outsb
push
pop
sahf
or
jle
incl
test
push
adc
inc
push
adc
sbb
lods
xchg
jnp
in
scas
fwait
js
lcall
lods
jl
push
jno
mov
lret
sbb
test
cwtl
aad
mov
gs
mov
pushl
out
dec
jle
in
fsqrt
sub
pop
mov
inc
lret
xchg
cmp
int3
or
decl
mov
loop
mov
pop
cwtl
into
push
arpl
js
cli
punpckhwd
mov
add
lcall
add
push
pop
ds
push
cld
mov
inc
pop
cmpsl
mov
pop
adc
incl
add
hlt
pop
adc
xor
mov
add
mov
jmp
fwait
xor
filds
ficoms
mov
iret
in
shrl
cwtl
pop
lock
lcall
nop
stos
insl
arpl
xorl
add
in
js
clc
fildll
shrb
rol
in
dec
fdivrp
ljmp
sarl
imul
fildll
jle
push
scas
fstp
push
cld
les
add
or
sbb
adc
ljmp
ljmp
jmp
int
mov
fsubs
scas
mov
jb
out
pop
ljmp
pop
pushf
fscale
lds
flds
ljmp
ss
mov
in
mov
mov
cmp
loope,pt
ljmp
mov
lret
lahf
xor
jmp
fmul
sub
pusha
xor
sub
ljmp
xor
cmp
jno
inc
insl
mov
test
inc
dec
decl
push
or
dec
stos
cmpsb
cltd
dec
or
pop
out
inc
cmp
insb
cmp
cmp
add
cld
jmp
mov
or
loopne
fstps
out
in
outsb
test
jmp
mov
sub
cmp
pushf
cli
or
jmp
adc
pop
cmpsl
ljmp
xor
inc
data16
cmp
insl
rcrb
mov
in
shlb
daa
jecxz
jle
sbb
mov
idiv
dec
adc
or
int3
popl
fstpt
add
dec
jno
call
ljmp
dec
jbe
cmp
jbe
dec
cmc
lea
pop
mov
in
in
inc
mov
ljmp
int3
pop
outsl
pop
fucomip
ljmp
cmp
insb
push
sbb
frstor
jg
inc
push
and
or
mov
jecxz
jle
push
mov
and
add
add
call
fwait
loopne
ljmp
shll
sbb
pop
lret
loope
mov
cmp
xchg
mov
jmp
cwtl
mov
ret
xchg
iret
and
or
shrb
pop
inc
ljmp
adcb
cwtl
in
loope
mov
pop
mov
scas
xchg
xchg
pop
pop
mov
lock
mov
decl
lock
and
popa
imul
aas
adc
add
ljmp
aas
cmp
pop
mov
jecxz
faddl
mov
test
int3
mov
mov
movsb
cmpsl
lcall
incl
repnz
loopne
lahf
cld
jg
mov
and
sub
lods
add
call
mov
addb
dec
aam
cmp
test
mov
in
adc
mov
xor
cli
ljmp
andl
adc
push
mov
mov
push
aad
inc
jmp
incl
dec
pop
xor
mov
add
push
mov
lret
mov
add
lcall
cltd
addr16
repz
insl
subb
or
pushl
add
test
xchg
jae
mov
dec
aaa
ret
xlat
fadds
les
xchg
aaa
add
aaa
dec
into
test
ror
and
cld
aad
jmp
jp
and
mov
std
xchg
adc
jnp
sbb
out
clc
push
faddl
test
push
decl
outsl
mov
sub
push
in
add
sbb
pop
pushf
mov
pop
dec
jmp
add
cmp
jg
jmp
sarl
cs
inc
sub
loop
push
ror
rorb
pushf
scas
lock
mov
and
mov
xchg
dec
mov
lret
aaa
std
pop
pop
clc
test
add
addr16
les
xchg
repnz
in
scas
push
push
in
cltd
xorb
les
shl
jb
call
pusha
aad
add
mov
mov
cli
push
cmp
and
jnp
fmul
andb
ja
addl
pusha
mov
iret
call
and
fidivs
rolb
xor
fwait
cwtl
jg
or
jmp
and
pop
mov
fldl
outsb
dec
mov
dec
or
jb
cmp
ljmp
repnz
in
jl
xchg
mov
clc
or
push
into
and
orb
pop
push
movl
mov
mov
test
push
or
ja
es
and
lods
pusha
mov
sbb
jg
ss
push
aas
scas
xor
xor
push
inc
xor
mov
cmpsl
add
cld
ret
ja
xchg
adc
add
mov
daa
mov
mov
pop
and
push
loope
lock
inc
add
xor
test
push
lcall
push
test
mov
push
bound
mov
xor
test
lret
rolb
lods
lahf
inc
nop
lds
into
adc
leave
daa
imul
mov
repnz
push
sahf
mov
mov
ja
xor
decl
mov
and
or
and
push
jo
ficomps
jne
mov
outsl
xor
pop
fwait
push
jle
in
aaa
dec
in
sbb
div
cmp
lcall
roll
add
mov
jne
call
jp
push
sbb
scas
mov
add
lret
inc
inc
inc
rcll
cmpsl
push
jl
dec
dec
push
outsb
decl
inc
or
pop
add
rorb
ljmp
hlt
mov
xor
jge
jmp
rcrl
movsl
inc
stos
sub
bswap
mov
sub
cmp
hlt
lcall
sbb
xchg
sbb
test
sbb
xor
adc
sub
mov
idivl
mov
pop
xor
mov
and
and
call
orb
jp
icebp
inc
sbb
jbe
xlat
imul
lock
pand
aas
xchg
movb
fmul
mov
aam
cmpsl
pop
inc
stc
imul
lcall
mov
push
sub
aas
and
icebp
lcall
out
mov
decl
cli
hlt
sub
jmp
and
js
pushl
incl
lcall
lahf
add
push
cmpsb
stc
loopne,pn
fdecstp
inc
mov
ljmp
or
test
fwait
dec
mov
cmp
icebp
mov
in
ret
mov
paddsb
pop
pop
mov
sub
lcall
sbb
xchg
or
xor
cmp
inc
and
jmp
sbb
idiv
ljmp
cli
adc
out
call
fldt
fwait
mov
push
cwtl
shrb
call
mov
sbb
les
pop
mov
imul
add
incl
xorb
sbb
jmp
subb
push
adc
ret
dec
push
xor
pushl
je
push
jne
shl
add
add
gs
cld
sub
stos
enter
jp
test
lcall
mov
cld
sbb
cmpsb
rclb
push
pop
sbb
shll
jp
mov
loop
pushl
pop
fiadds
sub
ja
xchg
pop
push
enter
cmp
leave
dec
sub
out
push
cmp
mov
in
std
fbstp
jmp
push
or
xchg
and
push
scas
sub
jne
incl
add
add
and
push
ljmp
or
inc
jg
xchg
pop
test
jmp
insb
sbb
std
xor
pushl
daa
mov
dec
aas
pop
sub
jo
rcrl
je
test
cmp
cmp
fcomip
pop
insl
pop
enter
dec
test
push
mov
ret
fwait
mov
sub
movsl
jnp
or
dec
xor
xor
ret
pop
in
rclb
mov
pop
inc
adc
sar
dec
in
sbb
ljmp
or
mov
xlat
jg
xor
inc
or
sbb
fidivrl
add
inc
inc
addr16
addr16
add
lds
adc
push
fnstcw
shlb
mov
mov
into
jmp
pop
loope
sbbb
mov
movsb
push
jo
jle
sub
int3
sbb
in
aaa
sub
test
cltd
adc
adc
sbb
mov
sbb
loopne
pop
xchg
jl
xor
mov
leave
bound
jb
loope
xor
aaa
mov
dec
xchg
cmpsb
stc
stos
in
xchg
ja
sti
dec
aam
lcall
inc
fadd
test
mov
sbb
pop
jnp
mov
xchg
mov
jmp
pushf
fisubrl
pop
push
int
pop
xor
mov
cmp
jle
sbb
arpl
mov
dec
jbe
bound
and
imulb
add
mov
ljmp
push
cmpsb
popf
dec
movsb
cmp
add
popf
in
jecxz
xchg
icebp
sbb
push
sbb
xchg
jg
mov
sub
add
push
cmpsb
fcoml
movsb
pop
cmc
imul
add
xor
jne
imul
sbb
mov
adc
ja
frstor
adc
decl
lret
movsl
sub
andl
shl
push
mov
test
xchg
mov
popa
mulb
loop
out
andb
int3
scas
insb
mov
pop
cli
cld
incl
jo
aad
push
pushl
pusha
jno
out
xor
js
and
lret
mov
jne
sbb
jns
call
imul
int3
sub
rol
jge
cmpsl
jne
stc
xchg
jb
rcll
out
psrlq
incl
insb
add
and
xchg
add
fsubrp
incl
out
mov
adc
lret
inc
inc
add
dec
call
inc
or
in
cmp
cltd
movsb
inc
add
and
scas
mov
add
stos
pop
jbe
call
pop
decl
in
hlt
sbb
icebp
ffreep
add
mov
add
cltd
lods
int3
cld
inc
push
mov
and
cmp
push
cmp
mov
iret
add
jne
sub
and
js
xchg
imul
mov
loope
pushl
pop
inc
adc
mov
xor
sar
sub
leave
fs
dec
mov
pop
aas
add
test
rclb
call
pop
cmpb
mov
fstpl
mov
insl
jle
adcl
stos
push
mov
cmp
roll
sbb
popw
decl
iret
sar
and
call
jmp
adc
hlt
aad
jl
sbbb
int
push
jae
inc
push
or
sub
adc
idiv
call
int3
and
shl
je
pop
push
and
sbb
gs
mov
inc
int
pushl
cld
cld
cmp
ret
dec
in
pop
mov
jl
adc
sub
repz
jg
popa
xlat
stos
or
outsb
jle
addl
jo
cmpsb
dec
fnstenv
inc
push
sbbb
mov
decb
mov
jae
xchg
push
sub
int
jmp
in
std
xchg
pushl
fldenv
jo
mov
ja
pop
lock
cwtl
mov
sub
roll
jae
or
jmp
test
xchg
movsl
mov
mov
jg
jle
jbe
popa
mov
cmp
fisubrs
push
jne
es
leave
xor
test
repnz
mov
mov
cs
jecxz
adc
mov
pop
push
ja,pt
ljmp
xor
dec
jbe
add
leave
jmp
into
lea
jns
sub
sbb
fcmovb
add
mov
cmp
lcall
push
sub
mov
divl
roll
fs
xor
sub
aad
arpl
aaa
jle
sub
push
pop
mov
or
mov
cmpsl
adc
pop
push
and
jg
dec
xor
mov
movsl
clc
pop
nop
inc
in
mov
sbbb
jnp
lods
mov
lret
clc
push
cwtl
push
aam
lods
cmpl
loop
push
sub
mov
xchg
shlb
and
call
adc
dec
mov
lcall
lret
jmp
leave
fisttpll
pop
jecxz
bound
cmp
shrl
inc
push
in
pop
in
dec
jae
mov
lods
std
incl
sub
ret
outsb
xchg
rol
push
lods
out
or
and
jle
and
lcall
incl
mov
in
data16
mov
xor
test
add
xor
or
dec
adc
test
add
dec
jno
push
in
and
loopne
mov
decl
cld
xchg
icebp
inc
mov
cltd
adc
mov
xchg
out
inc
out
clc
incl
xchg
jae
push
nop
jecxz
fmuls
sub
insl
aam
dec
dec
out
das
jp
mov
ds
hlt
pop
clc
lock
pushl
push
xchg
jg
test
jbe
into
clc
inc
sub
xor
inc
in
push
aam
add
movsb
jo
ss
fcmovnbe
and
xchg
xchg
aad
adc
add
lret
outsb
test
roll
lahf
or
mov
leave
mov
mov
insb
aam
mull
popa
jo
jb
mov
sub
jne
mov
roll
mov
loope
int
inc
ret
into
sub
fwait
jecxz
xchg
arpl
fdivs
adc
sbb
movsb
cmp
int3
popa
cmpsb
jo
in
lock
decl
arpl
test
pop
and
inc
cmp
test
into
jmp
inc
rcll
pop
cmp
fsubl
call
incb
dec
loopne
insb
dec
xchg
enter
insl
dec
pop
icebp
cmp
mov
jg
call
xor
xor
bound
push
jecxz
in
loopne
hlt
xor
shll
pushl
cmp
scas
stc
repnz
pop
jecxz
push
push
xchg
sbb
call
aam
and
addb
aam
insl
pop
repz
xchg
idiv
add
pop
std
lcall
jle
jae
cli
xor
mov
pop
xchg
sub
rclb
push
push
js
xor
cld
pushl
lcall
ja
clc
frstor
or
push
add
dec
loop
jle
cmp
decl
leave
cmp
lret
repnz
icebp
fcmovu
push
mov
sub
movsb
in
lcall
leave
push
shlb
int3
out
adc
mov
js
mov
sbb
push
cli
test
adc
xlat
sbb
mov
or
sub
enter
rcll
push
push
mov
xor
or
or
scas
inc
int3
mov
ljmp
imul
inc
jp
push
fiadds
lds
inc
test
in
rol
popl
mov
add
ljmp
lods
popl
push
push
repnz
xor
hlt
mov
sbb
mov
mov
aam
cmp
lcall
divl
xor
inc
inc
iret
push
sahf
xchg
ljmp
cmp
push
fcomps
xor
fdivr
decl
pop
pushf
jb
and
in
inc
dec
and
and
sub
add
add
nop
mov
sbb
push
adc
daa
dec
sti
jmp
and
imul
shll
decl
ret
pop
pusha
xor
add
dec
and
pushl
mov
mov
add
insb
pop
mov
mov
test
repnz
push
sar
call
repz
inc
cmp
and
lret
or
popf
stos
add
loopnew
inc
jecxz
or
ds
mov
imul
js
jbe
cmc
mov
adc
adc
and
jge
mov
sbb
test
ljmp
cltd
test
test
dec
jge
test
flds
ja
in
fbstp
cld
roll
pop
xlat
inc
call
xchg
xchg
cmp
imul
outsl
add
dec
add
xchg
jo
push
orl
scas
test
sub
and
in
stos
add
cld
imul
jmp
push
xchg
cmpsl
scas
or
jecxz
out
xor
mov
clc
mov
rcr
push
jg
lock
call
inc
jno
pushf
outsb
sbb
add
or
inc
mov
push
cld
mov
bound
or
pop
outsb
add
cmp
mov
sub
lcall
rcrb
push
push
loopne
clc
call
loopne
call
call
lret
ss
add
cmp
mov
gs
sbb
stos
subb
addr16
mov
inc
fwait
sbb
inc
mov
lcall
lea
inc
loop
aad
inc
adc
lods
call
shlb
stc
or
das
fdivs
test
jp
jnp
hlt
and
scas
push
cli
jo
cmpsl
push
daa
lcall
push
jg
mov
mov
test
decl
pop
jl
repz
dec
and
fisubrl
outsl
mov
pop
fcomip
pop
into
gs
stos
sub
push
lock
adc
push
cmpsb
push
push
sub
inc
cmpsl
dec
mov
mov
neg
std
xchg
jae
sub
mov
xlat
ud0
loop
fnstsw
das
cmpsb
cmp
inc
popf
cli
mov
test
inc
cmp
mov
cmp
sbb
xor
jmp
cmc
aad
lods
pop
mov
adc
stos
mov
mov
push
mov
movsb
push
jo
fdivrs
in
and
dec
loope
sub
sbb
push
scas
js
leave
mov
pop
hlt
decl
push
jp
inc
pop
in
cmp
push
ret
and
xor
xor
lock
fcomip
lods
jb
std
frstor
mov
push
xor
es
xlat
push
ljmp
jb
das
rorl
adc
fistl
gs
cmp
ljmp
inc
clc
lods
cld
mov
in
outsb
lock
adc
jmp
fwait
xchg
sbb
ja
hlt
fistl
fmuls
lods
adc
pop
out
inc
lcall
imul
ror
or
loop
add
jg
jo
or
rcll
pusha
or
gs
sbb
push
sub
mov
inc
jbe
pop
push
jecxz
jnp
xor
cs
sbb
hlt
sbb
int
clc
jbe
pop
pusha
movl
cwtl
inc
incl
hlt
xor
addr16
jmp
dec
imul
pop
insb
cmpsl
mov
dec
loop
in
fwait
mov
and
test
xchg
push
and
xchg
fst
pop
data16
xor
xchg
dec
add
xchg
cmp
mov
bound
mov
rcrw
fcmovne
jge
je
mov
add
pushl
xor
jge
pop
fsubrs
mov
dec
aaa
or
mov
and
push
xchg
pop
scas
cltd
cmp
jb
cwtl
gs
push
xchg
lock
stc
je
cmp
mov
inc
inc
cwtl
fldt
push
icebp
shr
mov
movsb
fildll
inc
pop
cmp
aam
xchg
sahf
test
fildll
call
and
xchg
push
inc
repnz
push
sbb
mov
jmp
mov
pop
sar
mov
shlb
fsubs
cmc
cmp
ss
jge
aas
mov
out
imul
rcrb
dec
add
adc
out
and
cmc
mov
stos
mov
mov
lcall
dec
orb
fidivl
xchg
aad
inc
push
mov
in
pop
ret
out
cmp
xor
jmp
jg
int
jno
in
sahf
fnstsw
dec
push
mov
xchg
rcr
leave
mov
stos
inc
fldl
push
scas
sti
dec
pop
into
jno
add
lock
jg
jg
fldcw
ret
data16
data16
testl
mov
fdivl
repz
lcall
dec
stos
lahf
push
pushf
mov
outsb
add
mov
add
sbb
dec
mov
sub
fimuls
jb
jmp
int
out
fnstcw
nop
loopne
sahf
call
push
push
cmpsb
sar
inc
hlt
add
dec
aaa
out
mov
lahf
pop
arpl
sub
mov
jmp
mov
das
ljmp
imul
or
pop
adc
enter
scas
inc
cmpsl
into
sbb
jecxz
out
pop
xchg
jmp
sbb
mov
add
fnstsw
cs
adc
sub
sbb
sbb
ljmp
iret
fcomi
pop
push
data16
mov
mov
imul
mov
cmp
xchg
push
loop
sahf
call
xor
dec
xchg
and
mov
lcall
pop
fists
ljmp
sub
or
out
das
mov
ds
jl
mov
clc
fildll
adc
fsubrl
adc
push
xchg
call
sarl
cmp
or
inc
pop
inc
adc
sub
cld
pop
sbb
lods
sahf
ljmp
push
daa
pop
clc
push
psrlq
sti
ficoms
add
pop
stos
idivl
imul
call
cld
push
popa
test
mov
push
aas
mov
sub
xorb
lcall
dec
jp
adc
adc
cmpb
ljmp
imul
mov
jae
dec
fcompp
roll
mov
scas
mov
data16
cmp
xlat
outsl
call
jle
enter
mov
cld
insb
sub
jg
into
fstps
popf
int3
pop
or
push
mov
out
sar
call
cmp
mov
aam
or
or
divps
add
aam
push
incl
xor
xlat
push
sub
xchg
dec
cmpb
shlb
loope
hlt
fsubs
ja
pushl
cmp
or
stos
nop
lcall
mov
xchg
shll
jecxz
add
inc
xchg
cmp
mov
cwtl
ret
cmp
jp
ficomps
adc
pop
mov
mov
jmp
mov
shrl
sbb
test
push
lcall
fsubl
dec
xchg
stc
sbb
jnp
lret
jae
cltd
pusha
decl
call
jg
dec
or
sbb
xor
jns
sbbl
jmp
out
int
cmp
mov
or
rcl
add
mov
add
jl
ljmp
pop
add
ret
adc
les
inc
dec
adc
xor
call
jmp
enter
and
testb
loope
out
roll
pop
insl
cltd
std
dec
ret
xchg
and
aad
xchg
mov
enter
mov
call
les
jns
sbb
je
push
jge
jae
mov
ljmp
sbb
cld
les
adc
adc
cmovg
outsl
aas
and
movsl
mov
ljmp
lock
sbb
fsubl
sahf
add
adc
jmp
sahf
cmp
xchg
push
jns
inc
in
inc
adc
or
lods
push
adc
pushl
inc
mov
push
xorb
lret
out
push
push
leave
xchg
cmp
inc
jg
pop
mov
ljmp
jo
fbld
test
decl
arpl
fsubrl
jl
push
aaa
push
pop
test
stc
insl
cmp
sbb
call
loop
ja
xor
popa
aam
pop
push
hlt
popf
iret
mov
cs
out
push
push
popf
pop
jg
mov
popl
xchg
push
jmp
in
pop
mov
lcall
xor
cmp
pop
cmp
pop
clc
xchg
push
dec
xchg
jno
aaa
scas
adc
adc
shlb
xchg
sbb
mov
test
aaa
ljmp
dec
jle
cwtl
xchg
sub
add
sub
add
sub
decl
aad
call
mov
mov
jg
stc
fistps
fucomp
inc
fnstenv
ljmp
dec
iret
insb
stos
jne
cmp
sub
arpl
pop
and
xchg
fisubrl
ret
mov
bound
jmp
popl
orb
inc
cmc
loopne
pop
push
mov
jmp
sub
and
lret
mov
std
xor
push
jg
adc
xor
cmpl
inc
out
add
mov
daa
mov
inc
sahf
push
adc
sub
scas
mov
fnsave
inc
incl
and
insb
add
ja
aas
ret
and
std
cmp
iret
scas
int
loope
in
pushl
lcall
dec
mov
pop
cli
adc
outsb
or
inc
adc
insb
ljmp
int3
xor
dec
dec
pop
std
pop
gs
or
fstpl
popa
or
mov
fwait
mov
fwait
pusha
das
sbb
sbb
popf
bound
bound
mov
jmp
clc
aas
in
xchg
cmp
rol
imul
mov
sub
in
mov
pop
mov
gs
adc
mov
mov
cmp
mov
movsb
sub
sar
out
xchg
jmp
sub
scas
aam
or
rol
test
push
mov
push
sbb
into
nop
repnz
in
pop
out
ret
and
mov
scas
shrb
cmp
cld
pop
cltd
jo
fdiv
mov
mov
sti
mov
out
cli
sbb
adc
fisttpl
call
jns
sbb
xchg
jecxz
mov
int
popa
in
es
jmp
sub
fbld
pop
insl
shlb
daa
sbb
adc
xorl
and
pushl
and
sub
push
jecxz
pop
dec
dec
out
imull
stos
test
mov
mov
call
fldcw
pop
and
mov
in
mov
test
shll
lds
lcall
repnz
dec
push
dec
dec
jmp
dec
sub
repz
out
mov
mov
inc
pusha
movsb
ret
mov
iret
cmp
rolb
sbb
mov
pop
xchg
int3
mov
mov
and
push
roll
add
jg
les
jge
push
mov
jns
lcall
pop
mov
add
mov
lods
fucomip
scas
stos
xor
mov
sub
push
movsl
lods
outsl
adc
dec
push
sbb
xlat
jl
fwait
popa
jl
cmp
sub
jae
and
inc
push
sub
mov
incl
stc
loop
vpackssdw
and
push
or
mov
shll
inc
xchg
insb
jle
jg
int
push
xor
mov
rcrb
pmaxsw
sbb
jmp
xchg
mov
stc
mov
xchg
lret
daa
roll
aas
xlat
arpl
dec
mov
lcall
xchg
nop
or
bound
and
dec
dec
dec
lods
jb
mov
jecxz
push
in
ljmp
xchg
mov
jns
shlb
and
sub
or
daa
scas
jmp
inc
arpl
ss
call
enter
add
test
iret
cli
outsl
popf
insl
mov
sub
sti
inc
jmp
adc
enter
pushl
pop
xchg
sti
int3
add
xchg
sbb
into
faddl
aaa
addr16
lds
cmpsb
lods
inc
das
sub
pop
sbb
aas
pop
mov
mov
pop
sbb
mov
push
mov
and
adc
ljmp
daa
jge
add
shlb
in
cmc
sbb
sbb
sbb
jae
popa
fildl
xor
mov
incb
mov
popf
idiv
iret
dec
mov
fdivrs
rolb
clc
lcall
sbb
adc
push
in
dec
faddl
jge
dec
adc
push
mov
out
dec
cli
faddp
iret
jg
mov
cmp
jne
out
mov
adc
roll
and
jmp
rorb
jge
flds
js
or
ret
sti
in
lahf
and
add
jmp
pop
mov
jg
into
movsb
sahf
pushf
call
into
sahf
mov
inc
sti
mov
mov
in
xor
pop
ficoml
xor
pop
push
lret
fnsave
rolb
sbb
mov
dec
rorb
out
xchg
adc
pop
addr16
mov
in
inc
dec
cmp
hlt
mov
jb
push
mov
ja
pop
jp
jo
decl
xchg
outsb
mov
in
xlat
pushf
xor
adc
mov
enter
sub
mov
ds
lcall
sub
shrb
int3
stos
jecxz
mov
imul
ljmp
pushl
fistpl
lcall
mov
mov
and
sbb
add
add
jb
and
cltd
cmp
jnp
adc
jmp
xchg
pop
adc
jge
mov
fistps
loope
ja
pusha
jb
sbb
xor
jns
roll
mov
lcall
cmp
bound
pop
pop
cltd
pop
pop
je
cmp
fcomps
fwait
mov
or
add
mov
cmp
mov
inc
in
hlt
pop
js
inc
cld
fdivrl
mov
fdivr
sbb
and
popa
dec
mov
int
pop
movsb
mov
mov
adc
or
inc
push
add
decl
add
xchg
call
test
sub
and
mov
incl
push
adc
out
shlb
incl
push
mov
mov
or
in
add
jmp
adc
mov
inc
insl
incl
lock
movsl
push
std
movsl
sbb
add
call
pushl
stos
inc
inc
mov
pop
stos
ljmp
loop
stos
pop
dec
shl
mov
lcall
dec
mov
inc
dec
aaa
xor
mov
in
pop
jmp
and
test
jp
fldl
shll
xchg
arpl
mov
jg
xlat
int3
int3
clc
iret
jno
dec
mov
mov
xor
mov
sub
faddl
out
lahf
dec
div
sahf
popa
jo
lcall
xchg
pusha
jmp
push
scas
mov
loop
fcomip
call
scas
out
cld
or
adc
orl
lods
or
call
mov
xor
test
ss
add
decl
pushf
sub
xchg
jmp
jecxz
mov
fwait
sbbl
pop
dec
clc
rep
lcall
leave
sub
pop
leave
stos
call
or
cld
sbb
xor
jb
xchg
or
movsl
in
lods
data16
mov
dec
flds
jb
add
mov
add
jl
lock
test
push
std
ljmp
js
dec
enter
xchg
mov
daa
and
xor
mov
dec
fmulp
and
loop
imul
pop
jnp
fstp
xor
lcall
call
xorb
mov
inc
es
add
xor
je
mov
aaa
enter
dec
xchg
jbe
shl
pop
jne
cmp
mov
jge
mov
repnz
push
dec
inc
cmpsb
pop
ret
add
add
int
mov
xchg
sub
loope
ljmp
aaa
push
cld
mov
loop
mov
int
decl
pop
xchg
in
cmpsb
jno
jae
sbb
es
rcrl
add
incl
dec
aad
je
call
sbb
pop
std
add
mov
and
add
adc
pop
out
mov
je
push
ds
cmpsb
jg
scas
push
loopne
cwtl
and
popa
push
mov
ss
mov
shlb
pop
cld
jmp
mov
hlt
addb
pop
bound
jle
repz
push
push
out
dec
push
pop
pushf
sti
imul
inc
das
shrb
push
adc
sub
or
jmp
xor
xchg
mov
mov
xor
push
ljmp
imul
rcl
lcall
clc
incb
cmp
and
or
cwtl
xlat
fldenv
jae
ljmp
nop
push
inc
xchg
int3
mov
cwtl
neg
aad
dec
lcall
pop
mov
call
push
popf
xchg
adc
aas
mov
outsl
out
xchg
test
adc
lods
aaa
fistl
les
add
mov
lds
inc
lret
add
sbb
scas
mov
iret
add
popa
cli
cmp
xor
mov
pop
push
lock
and
sbb
add
in
mov
fstpt
pop
pop
pusha
lahf
xorl
sbb
pushf
add
aas
outsl
aad
sbb
inc
lcall
cld
incl
inc
jbe
sub
mov
xchg
jg
push
addr16
mov
mov
rolb
aam
cltd
clc
rcrb
xor
inc
ljmp
rcll
mov
mov
jno
lret
xchg
jp
inc
push
pusha
outsl
sub
xor
mov
mov
or
loope
mov
mov
icebp
js
outsl
filds
sub
pop
cs
push
scas
fs
ljmp
mov
and
aad
jl
dec
jb
dec
outsb
sub
adcb
and
adc
inc
xor
call
jge
orl
stos
jae
mov
test
inc
sti
and
xchg
outsl
cmc
mov
sbb
loope
mov
inc
lods
add
and
ljmp
pushf
inc
push
dec
jle
outsb
jp
insb
sarb
cmpsb
xchg
pop
xorl
decl
pop
mov
mov
test
icebp
pop
loop
mov
in
and
add
cmpsb
jno
int3
pop
and
push
pop
cwtl
aaa
and
inc
or
pop
enter
sbb
push
mov
adcb
cmp
sbb
sbb
add
std
fs
loopne
adc
pop
sti
mov
cmp
pop
in
push
xlat
in
mov
jl
fidivrs
pusha
mov
js
loope
decl
pushl
adc
inc
mov
scas
jp
lea
ljmp
mov
decl
popa
cmc
mov
lcall
xchg
mov
pop
and
stos
ret
out
cli
incl
dec
mov
add
add
pop
in
out
jg
add
addb
in
xor
mov
dec
ss
add
jb
cld
mov
call
jmp
mov
cs
mov
loope
incl
cmp
pop
push
lcall
imul
push
xor
sbb
enter
or
call
pop
or
popa
mov
push
cs
aam
push
fimull
pop
incl
adc
in
xchg
xchg
sub
je
jns
and
push
push
call
fmuls
cmpsb
mov
jnp
mov
or
int
sbb
inc
cmp
inc
ja
int3
inc
mov
out
and
addr16
clc
hlt
push
mov
ljmp
pop
enter
dec
andl
cmp
mov
cwtl
sarb
rcrl
sub
inc
or
cld
sub
mov
mov
lret
xlat
scas
in
fsubrl
push
fbld
dec
sbb
inc
or
jmp
jmp
mov
adc
std
push
cltd
bound
lds
push
jg
sub
hlt
decl
mov
lret
stc
jne
subl
shrb
add
out
jl
inc
jne
nop
out
paddd
sti
andl
incl
push
xor
into
popa
lds
into
mov
imul
sub
incl
jo
stc
imul
aad
add
insb
mov
jno
pop
lea
add
xor
add
fildll
cmpsl
loope
push
imul
sbb
rcl
cmp
test
mov
pop
xchg
aad
jp
mov
stos
jnp
jno
mov
lds
subb
hlt
imul
xor
in
fs
test
ja
push
rorb
inc
push
cmp
ljmp
xchg
sbb
adc
xor
leave
adc
dec
mov
mov
sahf
cmp
addb
mov
or
shr
incl
in
jg
fcmovu
icebp
push
fldl
repz
out
aam
dec
adc
call
in
into
jns
sahf
ljmp
sbb
xchg
fdivrs
rorb
lcall
xchg
mov
and
and
jge
sahf
movsb
xchg
lock
sti
nop
jnp
popl
jns
push
pop
int
stos
imul
mov
aad
xor
inc
sti
gs
xchg
sbb
dec
fcmovnu
jg
mov
dec
push
or
push
loop
jg
fsubrl
jno
dec
adc
inc
cmp
arpl
mov
add
mov
dec
jecxz
cs
jb
push
sub
rorl
testl
jge
jmp
decb
scas
arpl
sti
cs
mov
push
shlb
stos
aad
lea
popa
inc
out
out
sbb
add
sub
adc
or
out
es
andl
cli
sub
movsb
lret
pusha
aaa
push
mov
das
std
cmpsl
xlat
jns
mov
mov
ficoml
mov
popa
mov
rolb
icebp
incl
inc
cmp
push
inc
imul
pop
push
fwait
adc
aaa
sbb
cmp
hlt
cli
push
and
pusha
jecxz
xchg
shll
ljmp
cld
and
push
ficoms
icebp
mov
ror
sbb
jmp
inc
mov
mov
rcrl
mov
rcrb
jo
sub
mov
pushl
lret
jno
shr
xchg
popa
sub
xchg
sbb
jge
pushl
jmp
pop
lahf
and
dec
pop
jecxz
inc
insb
out
cmpsb
sub
fadd
sbb
jl
mov
subl
adc
pushl
xchg
jb
andb
scas
or
mov
loop
iret
imul
pop
std
inc
cmp
stc
cmp
inc
lahf
iret
out
jmp
cld
jg
mov
fstpl
or
dec
sbbb
cld
pushf
mov
scas
pop
sbb
icebp
cmp
pushl
stos
gs
sbb
daa
sub
or
xchg
mov
aad
aam
in
decl
es
inc
or
aas
inc
ss
in
sbb
push
cmp
imul
sub
lods
or
in
call
fnstsw
ja
movsl
inc
into
shrb
ret
incl
fdivs
mov
push
fbstp
out
mov
sbb
add
shlb
std
ja
incl
and
sub
sub
adcb
xlat
xor
lea
in
sbb
mov
fmuls
data16
jmp
fildll
mov
movsb
mov
sbb
push
shl
mov
pop
sbb
addr16
mov
subb
sbb
cmp
push
nop
test
fs
decl
or
into
push
mov
push
dec
mov
pushf
inc
xlat
outsb
call
fadd
sub
mov
cmp
inc
jmp
leave
mov
ret
in
arpl
shrb
inc
cmp
jp
call
out
inc
mov
jg
jmp
push
cltd
pop
incb
ljmp
out
sub
gs
mov
inc
mov
stc
clc
test
mov
repz
jg
test
ret
repz
aad
das
scas
enter
xchg
and
gs
xchg
jg
fdivrp
dec
cwtl
mov
mov
mov
call
mov
cli
fcmove
inc
insb
or
push
ljmp
cmovnp
test
add
lret
inc
push
sti
pushl
push
sub
out
call
ja
pop
ds
stc
add
es
jg
addl
cltd
lods
inc
lret
dec
bswap
push
lds
loope
int3
popa
out
cmp
pop
cmp
cmc
stos
xlat
fdivrs
icebp
aaa
pop
mov
and
call
adcl
adc
sub
aad
dec
or
andb
pop
inc
dec
jne
jg
mov
test
addr16
aam
fisubl
jb
sbb
jbe
daa
adc
mov
in
push
pop
rolb
mov
addr16
fiaddl
mov
jl
lods
push
sbb
push
pop
mov
cs
pop
pop
dec
loope
in
mov
sahf
inc
push
ja
jmp
jge
lret
cmp
push
pop
out
repz
int
jae
mov
or
repnz
clc
mov
and
xor
aad
jns
jns
lcall
loop
xor
shl
bound
lahf
jne
ret
and
ja
shlb
mov
incl
jmp
sub
ja
adc
push
pop
jns
push
push
mov
push
call
push
hlt
push
pop
ret
hlt
arpl
xchg
xchg
scas
mov
mov
or
incl
movsb
testb
dec
dec
xchg
push
add
xchg
inc
repnz
fildll
in
in
xor
loopne
adc
imul
mov
pop
sbb
mov
xor
pushl
std
pushl
data16
and
aam
xlat
add
outsl
js
sbb
xchg
out
ds
ljmp
adc
push
and
into
in
pushf
lahf
das
xchg
out
ret
mov
jl
and
lcall
arpl
xor
jno
fucomip
jmp
and
mov
jp
into
pop
lock
pop
sub
call
shl
jl
sbb
adc
xchg
out
ret
and
cld
lods
ret
xchg
incl
sbb
cli
mov
xchg
in
cmp
stos
jb
icebp
jns
movb
rclb
movd
xchg
mov
and
test
sbb
dec
adc
cli
enter
xchg
outsb
jmp
ljmp
pusha
mov
inc
xor
cli
sbb
push
adc
or
xchg
mov
jg
adc
lahf
mov
fldt
orl
sbb
sbb
push
mov
sbb
add
pop
dec
sbb
jae
popf
push
dec
mov
fisubrl
les
imul
jle
push
dec
sti
ss
xchg
stc
shll
mov
cmp
cltd
inc
test
ljmp
cmpsb
lahf
jecxz
dec
addr16
push
les
call
jmp
ret
xchg
inc
aaa
cs
daa
pop
popf
decl
sub
jb
mov
ret
repnz
mov
test
stc
lds
inc
dec
sbb
add
decl
fbld
inc
or
cmpsb
icebp
incl
pop
dec
jg
adc
adc
jp
jae
lcall
add
jl
inc
pop
mov
xor
das
cli
out
imul
pop
add
pushf
loop
jge
pop
mov
lret
push
xor
add
mov
cmp
jle
pop
fwait
or
dec
dec
call
fdivr
jns
jne
mov
push
int
xlat
add
loopne
daa
jg
scas
or
lds
lcall
and
cld
mov
fildl
clc
and
scas
jl
pop
stos
adc
call
push
out
fimull
adc
pushl
push
xor
loop
xchg
mov
in
lock
lea
icebp
mov
ljmp
rclb
push
jno
cmpsl
or
stos
adc
cmp
push
sub
fcomip
jg
lods
lret
call
sub
mov
out
cmpsb
cmc
les
jg
hlt
lret
fistpll
or
call
mov
shrl
mov
aas
cmc
repz
dec
ss
call
out
add
jb
and
jnp
inc
fstl
imul
call
cmp
scas
sbb
out
xchg
mov
std
pop
push
cmp
mov
and
jmp
outsl
cli
pushl
fdivrs
fwait
push
mov
mov
add
clc
lock
bound
jb
incl
clc
sti
push
nop
xchg
mov
rep
xor
xchg
lea
cmp
test
mov
adc
lods
js
jg
pop
pop
fdivrp
repz
sub
pop
sub
inc
pop
movsl
dec
clc
inc
sti
mov
ljmp
loope
push
jb
ret
in
jnp
adc
mov
xchg
xlat
push
in
pop
ljmp
inc
cld
outsb
fwait
ss
outsl
xchg
push
add
pop
out
pop
incl
xor
sub
lds
dec
adc
aad
enter
xchg
push
fistps
decl
inc
sbb
je
ja
mov
mov
test
jl
push
jns
repz
ret
jo
inc
mov
and
mov
push
imul
push
mov
test
inc
lock
enter
loopne
scas
inc
imul
decl
movsb
clc
mov
and
inc
fs
jns
out
push
pop
pop
or
cltd
push
fisttpl
lock
add
mov
subl
mov
jb
aam
rcr
and
mov
jge
or
mov
fucomi
movsl
cmp
stc
cmpsl
bound
xchg
mov
cltd
add
jg
mov
sbb
js
repnz
das
xchg
mov
add
stos
jne
std
cmp
arpl
cmp
adc
es
sar
lcall
sub
loop
push
aam
xchg
push
xchg
shrb
shr
mov
cmpsl
cmp
call
xchg
dec
in
mov
incl
test
cmpsb
test
mov
cmpsl
and
jecxz
inc
sbb
push
pop
into
mov
jb
in
mov
add
fimuls
or
ret
cmp
hlt
inc
mov
les
push
lods
scas
push
jo
testb
mov
cmc
call
loopne
jbe
xchg
loopne
lods
pop
mov
andl
in
push
lcall
nop
push
and
in
pop
mov
cmp
fimuls
hlt
xchg
mov
mov
xchg
push
xlat
mov
rcl
xlat
mov
clc
sahf
test
decl
dec
cwtl
movl
arpl
fisubrs
jg
test
push
fwait
popa
shlb
jp
mov
fisubl
lcall
enter
jl
mov
xchg
mov
scas
push
inc
fs
lahf
aad
addb
sub
ljmp
cmp
add
icebp
dec
inc
push
stc
mov
das
mov
jns
xrelease
adc
cwtl
mov
popa
sar
decl
out
out
jbe
pop
xor
repz
movsl
test
popa
mov
push
pop
adc
jecxz
cltd
pop
decl
rol
xor
dec
shl
stc
and
call
adc
test
out
stc
pop
in
lds
add
mov
shr
cmp
sbb
dec
mov
negb
and
add
pusha
xor
aad
pusha
push
jmp
aas
std
mov
pop
test
or
sub
movsl
movsb
iret
inc
jg
push
in
jp
and
out
out
pop
scas
inc
dec
popa
daa
and
and
jp
xchg
mov
call
jbe
lods
cmpsl
loopne
movsb
sahf
aaa
sub
mov
mov
fnsave
int
cwtl
out
lcall
les
decl
fdivl
int3
xor
inc
and
jns
push
xor
inc
cmp
nop
cli
subb
cld
cli
repz
jb
dec
mov
movsl
inc
lock
insb
jl
jno
adc
aad
push
dec
cmp
jmp
sub
lret
mov
lcall
add
or
out
pop
bound
xchg
sub
adc
pop
jecxz
dec
daa
inc
test
popf
int3
or
incl
xor
incl
or
and
in
xchg
adc
fs
inc
mov
jmp
pop
jnp
xchg
inc
das
fcomip
jmp
rclb
and
int
inc
mov
cwtl
scas
shlb
jbe
pop
pushf
popf
insb
stos
lcall
clc
enter
adc
mov
stc
sbb
pop
fcmovb
dec
push
add
stc
xchg
lods
ret
mov
xorl
pop
sahf
xchg
and
push
jne
out
lods
pop
gs
ja
call
repnz
adc
fdiv
mov
rorb
cmp
inc
mov
push
in
xchg
pop
mov
push
mov
add
cmp
loope
adc
mov
loop
jge
cmp
jg
pop
movsl
mov
adc
outsb
lds
sub
ljmp
cmpsl
or
jae
movsl
xchg
cwtl
xrelease
cmpsl
fwait
cmpsl
les
mov
push
jo
mov
pusha
ret
int3
ret
jg
jmp
sub
movsb
shll
movsb
int
clc
jg
inc
dec
sahf
ss
cmp
adc
xchg
adc
mov
jl
jg
inc
cld
xchg
and
or
fdivr
pop
jg
adc
cs
movl
pop
dec
out
and
xchg
clc
jmp
pop
inc
adc
int3
jbe
rorb
pop
jge
int3
adc
lods
add
ja
cli
cli
stos
repz
leave
push
bound
and
clc
stc
push
adcb
sbb
ja
mov
mov
decl
mov
fs
mov
push
inc
pusha
adc
mov
and
cld
cmpsb
ljmp
xchg
lahf
and
and
test
xor
mov
jle
cmp
test
lock
addl
out
cmp
test
daa
int
xor
and
ljmp
adc
mov
mov
testb
movsb
cld
cmc
adc
ljmp
sbb
pop
and
cmc
adc
jmp
push
rclb
mov
mov
dec
aad
popa
mov
inc
pusha
dec
push
ja
xor
test
in
sbb
cmp
mov
cmp
xor
sbbl
push
js
decl
ror
cmp
cmp
or
fiaddl
insb
mov
subb
dec
push
inc
lret
lcall
mov
push
test
jl
aaa
jle
in
test
std
jmp
xor
push
sbb
icebp
pusha
jbe
out
dec
adc
pop
and
add
or
nop
or
dec
test
fcomip
add
mov
out
cld
jmp
xor
cmp
insb
xchg
and
lock
jmp
addb
push
lea
adc
loopne
call
jno
enter
filds
add
xchg
or
pop
adc
inc
push
dec
jmp
mov
xchg
imul
ja
lods
mov
mov
in
inc
mov
add
mov
decl
push
lods
lods
ja
mov
fisubs
cmp
lods
icebp
shl
std
jp
jl
jmp
inc
lcall
test
adc
push
fstp
mov
jne
sub
push
insb
insb
push
fs
cmp
mov
cmp
jnp
sbb
call
mov
icebp
imul
adc
int3
pop
pop
inc
and
in
scas
inc
dec
repnz
lcall
mov
mov
loop
sahf
add
negl
fists
dec
ss
pushl
adc
imul
cli
jmp
outsb
sbb
daa
mov
jl
mov
jge
iret
js
outsb
xchg
add
jp
andl
jnp
inc
mov
call
leave
pop
adc
jae
cmpsl
sub
cmp
call
sbb
je
dec
pop
fs
jmp
out
cmpsl
stc
xor
ja
dec
mov
sbb
sti
cmc
push
lcall
fneni(8087
dec
icebp
ficoms
dec
inc
cwtl
add
ja
std
pushf
cmpsl
jp,pn
add
nop
add
sub
jg
inc
cmp
es
lret
jmp
xor
fs
lcall
data16
or
shll
shll
push
xor
push
xchg
aam
adc
pop
sub
adc
sub
sbb
adc
pop
pushf
cmp
decl
cmpsb
jp
inc
dec
es
clc
loop
imul
pop
jnp
pop
aad
push
and
mov
sbb
test
fsubs
lods
daa
in
psubsb
scas
clc
sub
cmc
pushf
mov
gs
adc
jmp
jne
push
std
mov
adc
inc
lods
out
jae
adc
xchg
in
ljmp
in
in
lods
add
cmp
dec
pushf
mov
lcall
ljmp
cmpsl
add
and
inc
pop
or
aaa
mov
dec
es
int3
or
fwait
or
sub
ljmp
fadds
out
fwait
aas
pushl
int
iret
jns
add
rclb
movsb
loopne
jcxz
adc
js
push
xchg
mov
imul
pop
sarb
cmp
xor
shrl
mov
ljmp
mov
sbb
or
into
lock
push
jno
sar
shl
xor
jns
dec
jmp
sar
xlat
cmpb
into
jl
dec
xor
test
or
mov
sti
std
incl
pop
imul
xchg
andb
dec
inc
btl
les
dec
jae
dec
jnp
cmp
push
inc
lahf
test
pop
sbb
out
arpl
lret
jg
outsb
adc
add
rcll
ficoms
cmp
jg
or
push
push
scas
add
push
pop
xchg
in
mov
cmc
lcall
push
mov
mov
ret
into
jge
and
enter
ljmp
xchg
ret
gs
lret
cmp
stc
mov
add
jge
pop
sbb
push
jb
popa
adc
sub
and
adc
loopne
dec
add
cmp
fwait
test
add
push
popf
mov
data16
lcall
loopne
decl
inc
lds
mov
pop
in
sub
in
lods
insb
loope
or
jae
mov
outsl
or
and
stos
sub
lret
imul
mov
push
sbb
pop
xchg
test
fistpll
clc
pop
rorw
mov
arpl
jge
fdivl
jae
ljmp
enter
inc
push
push
xchg
into
int
cmpsb
lret
js
ja
sbb
ds
or
xchg
and
out
xor
das
or
jle
pop
sahf
int
pop
dec
movsb
dec
jo
lret
ja
hlt
test
xor
andb
add
ljmp
inc
and
aam
xor
pop
sarb
push
lds
rcr
scas
ds
fdivs
dec
shlb
jg
and
popa
mov
jmp
push
cmp
orl
mov
sbb
mov
fwait
es
dec
jecxz
fnsave
insb
das
and
push
es
shlb
dec
push
push
hlt
cli
aaa
andl
adc
inc
mov
xlat
mov
add
movsb
inc
test
dec
xchg
idiv
jp
sar
mov
in
imul
data16
or
ror
xchg
cmpsl
and
clc
jg
je
pop
xor
clc
cmpsl
fmuls
dec
or
xor
aad
jno
sarb
adc
push
nop
stos
insl
fs
inc
insl
out
xor
cli
ret
das
pop
push
jns
dec
mov
mov
sub
inc
pushf
sbb
call
std
movsl
je
ret
cmp
out
jo
add
push
or
mov
dec
inc
mov
adc
repz
lds
ret
cmpsl
sub
sbb
sub
inc
je
ljmp
ret
pop
cmp
test
in
pop
aas
ret
dec
addr16
incl
cmp
pop
sbb
adc
in
gs
fdivl
push
dec
dec
mov
es
das
lock
mov
and
outsl
sub
or
pushl
stos
adc
sub
mov
cli
fildll
jb
xor
jnp
cltd
and
out
inc
sarl
inc
fldl
mov
jle
pop
add
and
mov
jge
pop
push
je
fwait
adc
ffreep
cltd
sub
iret
jno
out
scas
xlat
cmp
mov
mov
ja
addb
cwtl
clc
jmp
xchg
dec
mov
dec
mov
out
xchg
bswap
mov
sbb
pop
aam
dec
clc
jo
and
jbe
or
cmp
pop
inc
cmc
and
outsb
mov
lods
repz
fdivrs
cwtl
test
jae
mov
out
mov
lret
add
ds
and
sbb
mov
decl
jg
daa
push
clc
xor
std
aam
inc
add
add
xchg
fsubp
sbb
push
or
jmp
call
jbe
imul
pop
mov
mov
popa
rolb
sbb
idivb
jo
pop
loopne
jmp
mov
xor
cmpb
mov
or
call
inc
sub
xchg
aad
mov
jecxz
fs
inc
jo
les
decl
ret
insb
pop
or
inc
push
sub
dec
lods
mov
cmpsb
jmp
jb
mov
push
cltd
or
or
loop
jns
jl
push
xchg
push
jne
push
dec
pop
in
add
fcoml
push
fnsave
imul
or
add
fnstcw
mov
fs
jl
mov
faddp
push
xor
dec
jbe
sub
cmc
xor
es
add
mov
call
push
and
pusha
data16
push
test
les
push
ja
pop
jp
lock
out
clc
stc
dec
jl
out
rorl
scas
hlt
scas
mov
mov
ljmp
adc
scas
andl
mov
daa
mov
mov
mov
shll
les
es
cld
in
lret
push
add
sbb
enter
push
or
cld
adc
test
sbb
fistpll
mov
or
pop
fcoml
in
xchg
loopne
pop
or
inc
jecxz
or
pushl
sub
push
in
sahf
mov
dec
outsb
test
imul
cs
mov
push
mov
lds
cli
faddl
pushf
out
xor
inc
cmp
fsubr
mov
jmp
gs
xchg
pop
ds
in
daa
aam
sub
rorb
rcll
in
jmp
decl
movsl
sti
pop
loope
jmp
test
xor
aas
or
sbb
aaa
mov
outsl
jle
mov
cmp
jle
mov
push
psubq
jmp
mov
adc
aam
mov
rclb
push
in
jmp
sbb
inc
cltd
dec
and
flds
jb
adc
add
mov
mov
icebp
jae
mov
sub
lret
call
xor
and
nop
clc
adc
jb
push
adc
mov
inc
lock
ljmp
push
fistps
add
jae
xorl
xor
push
pop
loopne
push
lret
ret
imul
mov
bound
jmp
ret
mov
lods
idivl
fistps
lcall
out
lds
incl
and
std
jno
cmp
add
jno
movsl
fcoms
pushl
sbb
push
inc
sbb
adc
xchg
scas
pop
subb
push
cmc
inc
adcb
mov
push
mov
and
cmc
js
mov
mov
pop
imul
or
movsb
loopne
add
jmp
push
into
xchg
mov
sbb
clc
testl
loop
sbb
xor
fbstp
pop
ud0
decl
inc
inc
stos
xor
inc
jg
cmpsl
dec
adc
in
rcll
test
out
icebp
mov
lcall
and
lret
sti
jp
out
loope
outsl
mov
jg
pushl
mov
testb
loope
push
pushf
push
jbe
push
adc
sub
jmp
pop
jecxz
or
popa
imul
inc
sbb
or
jmp
push
xor
stc
cmp
adc
xor
mov
loopne
xchg
jg
inc
jl
test
mov
ja
test
sub
push
jnp
push
sbb
into
cmp
jmp
add
and
hlt
sarb
or
fcmovnbe
and
je
aam
std
call
sbb
push
dec
mov
pop
popa
sbb
mov
and
cmpsb
lcall
test
aaa
sub
sarb
cmp
mov
les
push
popa
pop
jg
ljmp
mov
test
xor
and
sub
lcall
pusha
loopne
ja
mov
out
lods
and
into
lcall
cmpsl
leave
imul
loope
push
inc
mov
outsb
xchg
push
ficoms
pop
adc
insl
adc
mov
and
lcall
loope
jb
pop
push
std
push
mov
add
pop
lock
pop
fldl
ja
out
jg
sub
add
fnstenv
xchg
pop
ljmp
mov
add
aad
lret
jne
cwtl
aaa
mov
ja
loopne
out
roll
or
call
push
or
stc
imul
test
aas
pop
call
sub
sub
mov
adc
out
cmp
pushl
dec
or
pusha
pop
jl
test
pop
adc
das
movsl
xchg
out
adc
cmp
jne
notb
dec
scas
or
and
mov
in
std
fsts
add
jl
addr16
repz
lahf
rorb
or
adc
insl
xchg
movb
sbb
sub
mov
and
sahf
add
jmp
stc
push
popl
pop
rcll
jmp
cmp
push
sbb
mov
movsl
bound
cmp
mov
xchg
daa
and
in
lahf
lcall
mov
or
jae
gs
pop
push
xor
or
std
dec
out
cmc
xor
jno
mov
xchg
jp
ss
hlt
push
mov
sub
jecxz
or
and
jmp
jns
adc
stc
lock
push
mov
mov
cmc
int3
xor
ds
add
mov
dec
pop
and
dec
hlt
rep
mov
clc
in
fiaddl
cwtl
out
int
call
std
idivb
ds
add
xor
xchg
jbe
sub
jmp
and
addr16
dec
loop
addl
test
sub
inc
stos
lret
ret
push
push
xor
shrl
fdivrp
jg
movsb
cmp
in
mov
das
dec
and
adc
sub
jl
insb
das
jg
data16
and
pop
sbb
cmp
inc
push
rcr
xor
xchg
sti
jo
incl
sbb
jbe
sub
jne
dec
bound
lea
rorb
jae
sub
fists
add
fwait
or
lcall
add
mov
adc
or
mov
cmp
testl
ds
sub
cltd
and
mov
inc
xchg
cmp
decb
mov
ss
mov
or
icebp
outsb
lret
xor
pusha
add
cld
das
fcompl
push
insb
inc
les
imul
or
movsl
test
dec
in
pop
inc
imul
fld
mov
stc
push
or
inc
int
popa
dec
sub
adc
dec
dec
in
xchg
jbe
xchg
mov
mov
loopne
pop
fdivl
in
out
aad
leave
mov
cltd
popf
push
and
scas
les
in
adc
mov
adc
cli
cmp
dec
into
jne
jo
fisubrs
aas
and
mov
std
mov
dec
push
or
jns
pushf
cmpsb
je
rolb
mov
lock
adc
in
xor
iret
std
aaa
out
cmp
fcomps
sbb
aas
jmp
jb
add
shll
std
mov
xchg
dec
mov
sub
add
stos
or
call
scas
test
mov
loopne
push
sbb
jnp
sbb
jg,pn
adc
out
clc
jg
ljmp
jbe
ja
fimull
bound
shll
out
hlt
dec
mov
sbb
cmp
fiadds
cld
pusha
cld
pop
neg
xchg
inc
jp
aas
subb
out
incl
fs
fwait
push
mov
jmp
and
or
insl
dec
movl
add
ljmp
push
test
test
adc
cmp
in
mov
or
xchg
mov
inc
pop
mov
mov
das
pop
lret
test
add
push
sub
xchg
int
rcll
in
pop
loopne
shll
mov
mov
ret
pusha
incl
xchg
inc
xchg
ret
mov
cmp
mov
lds
sti
aas
mov
push
aad
out
inc
loopne
push
adc
aaa
in
push
or
inc
lret
xor
inc
jno
push
push
push
js
inc
out
push
pop
hlt
lcall
xor
sub
mov
inc
cmp
jo
add
pop
movsb
lcall
decl
gs
xchg
push
adc
cld
into
pop
jmp
cwtl
add
adc
stos
sub
jp
orl
mov
pushl
push
subl
lret
pop
jp
test
pop
adc
push
std
lods
push
cmp
dec
push
mov
mov
popa
push
mov
adc
insb
shrb
icebp
xchg
xchg
les
sub
jecxz
ljmp
adc
dec
jbe
dec
xchg
ds
mov
dec
repnz
jmp
sub
push
aas
jge
cs
dec
sbb
sti
push
or
decl
ss
mov
dec
sti
xchg
cmp
stc
outsb
lret
rol
mov
xor
mov
out
cmp
mov
and
add
adc
add
push
dec
sub
sbb
fmul
sbb
and
adc
jae
jne
lret
push
xor
mov
adc
enter
mov
jne
aad
lcall
xlat
pusha
fcomip
ljmp
push
test
jl
or
cli
lret
push
mov
inc
adc
xor
das
push
sub
and
push
imul
arpl
cmp
movsl
xchg
ljmp
sub
or
lea
imul
cs
sarl
or
aas
out
into
in
inc
shll
sub
inc
push
jbe
mov
cs
cmp
aas
in
pop
int3
in
imull
push
data16
aas
cmp
aad
push
push
lret
push
sahf
pop
incl
icebp
leave
dec
in
aam
mov
cmp
mov
pop
push
ljmp
call
pop
mov
pop
dec
mov
ret
adc
test
decl
mov
mov
dec
leave
mov
iret
movsb
lcall
xchg
stos
lock
and
cltd
mov
rolb
push
fs
cli
lcall
divl
sub
mov
out
iret
xchg
lock
into
ja
sbb
nop
ds
call
cwtl
call
sub
sub
loop
loope
inc
xchg
push
pop
shlb
dec
jmp
dec
les
insl
std
cmp
mov
mov
sbb
or
fisubrl
bound
cmp
xchg
xor
fs
mov
fwait
or
shlb
mov
aam
movsb
mov
ljmp
mov
ret
int
dec
pop
sbb
aaa
pop
cmpsb
cmp
sbb
jmp
inc
scas
xor
pop
or
arpl
jae
push
cli
or
lock
pushf
pop
sar
push
xchg
lcall
imul
adc
repnz
cmp
pushl
cmp
in
iret
jp
and
dec
xchg
test
jge
out
jbe
inc
xchg
inc
popf
xchg
cmp
test
xchg
sbb
dec
pop
jo
adc
fwait
push
lea
lcall
ret
shll
addr16
adc
hlt
cmp
pop
cmc
shlb
push
scas
cli
scas
cmpsb
andb
dec
jo
out
sbb
jge
dec
mov
xlat
push
push
aaa
outsl
je
aam
mov
and
addl
decl
arpl
sbb
pop
lds
inc
lret
pop
jp
inc
inc
cmpsb
add
decl
mov
push
mov
push
adc
inc
call
insl
rol
sbb
bound
jg
xorl
sahf
mov
lret
mov
jmp
xlat
stos
ljmp
mov
add
sub
roll
ljmp
jo
out
xchg
sub
dec
push
insb
ds
hlt
xor
sbb
xchg
mov
push
push
xchg
ret
inc
test
inc
arpl
mov
pop
test
test
jg
jae
mov
xchg
xlat
lret
subl
jg
xor
push
cmp
xchg
or
mov
data16
aaa
jmp
pop
pop
sub
loopne
aam
adc
or
or
in
rclb
lcall
pop
fwait
out
cli
mov
add
xor
pop
mov
je
jmp
lcall
int
fdivrs
mov
fidivrl
jle
pop
data16
jmp
mov
lcall
pop
cs
mov
jns
test
xor
clc
jmp
push
movsl
jb
ds
fisttpll
test
inc
jne
jns
xor
out
les
ljmp
cmp
dec
add
dec
idivb
add
mov
inc
or
mov
and
loope
cltd
cld
outsl
xchg
pop
xchg
mov
ljmp
and
fadds
fmull
ret
pop
jl
stos
daa
inc
mov
cld
cmpsb
lret
jg
ljmp
jp
pop
imul
sub
push
call
mov
scas
add
pop
fidivrs
xchg
mov
test
sar
adc
add
imul
mov
out
outsl
mov
call
dec
mov
nop
cmpsb
adc
addl
imul
jg
in
mov
aam
inc
fnstenv
sub
add
add
xor
or
adc
ljmp
cmpsb
sbb
or
mov
es
ja
mov
dec
lock
jl
inc
fsts
mov
xor
je
and
add
sarb
pop
bound
in
in
mov
std
into
add
lods
repnz
call
fcoms
cltd
insb
outsl
aam
or
cmp
jnp
and
sub
decl
xor
mov
cs
push
enter
notl
jb
outsl
and
or
push
sahf
outsb
jg
jmp
mov
sbb
sbb
jmp
xchg
inc
ss
aam
adc
xchg
pop
jae
hlt
xchg
lea
mov
push
or
mov
inc
daa
inc
das
scas
lcall
incl
popf
fnstsw
inc
loopne
in
ror
xchg
mov
imul
jp
sub
adc
ja
aas
aas
sub
outsb
add
les
out
nop
ss
jl
dec
ja
decl
fdivp
xor
push
or
adc
shrl
dec
scas
mov
sbb
jmp
jae
fisttpll
jo
popf
xor
inc
lret
fstp
add
cwtl
fdivs
fstl
xchg
pop
xor
arpl
add
mov
call
adc
rol
js
fisubs
cmp
jg
mov
adc
testl
jae
add
sub
xchg
inc
jno
mov
mov
call
jb
fcoms
mov
das
xor
xchg
mulb
cli
adc
xchg
shrb
lret
out
and
ljmp
and
aas
inc
mov
add
jae
aaa
insl
push
fsub
push
push
fs
ljmp
jl
sub
shlb
push
movsb
cmp
dec
mov
or
insl
ljmp
sbb
mov
push
fisubl
out
jmp
lods
scas
cmp
jns
xchg
fisttps
je
adc
loope
xor
pop
mov
and
test
push
sub
repnz
subb
fildll
lret
and
sub
or
enter
cld
dec
push
jae
dec
inc
aas
dec
aad
push
out
das
pop
icebp
aam
cld
lret
jne
cmp
xchg
test
adc
test
or
cli
jmp
sahf
mov
sti
adc
push
nop
sahf
dec
mov
cmp
scas
pop
xor
aad
leave
js
int3
xchg
lock
decl
lret
leave
inc
jmp
nop
neg
jo
sub
mov
outsb
pop
push
dec
mov
fistpll
dec
loope
aas
in
mov
add
stc
dec
jg
mov
scas
and
out
cs
nop
adc
push
push
std
pop
cld
ret
sbb
pop
inc
adcb
data16
insl
cmc
sarl
dec
inc
xor
cwtl
push
sbb
sti
test
inc
jmp
inc
mov
add
or
cmp
or
sub
repz
pop
jl
jno
arpl
fbld
sbb
cli
sbb
popa
add
stos
in
int
test
filds
out
xor
mov
aad
mov
jmp
ret
mov
pushl
shlb
and
lods
mov
or
popf
ljmp
rcr
cmp
insl
jns
pop
sub
enter
orb
call
pop
inc
sbb
xchg
jmp
add
lahf
fcmovnbe
enter
mov
mov
incl
mov
cs
cmpsb
xchg
ds
sete
dec
pop
fistl
sahf
or
pushl
pop
sahf
or
fldt
xchg
xor
mov
dec
xor
or
negb
out
sub
dec
xor
jle
pop
test
push
loop
add
sub
outsb
loope
stc
sbb
dec
dec
xlat
sahf
nop
jne
cltd
decl
adc
xchg
iret
iret
adc
jge
in
inc
mov
incl
aas
out
xchg
adc
decl
lods
mov
sub
mov
dec
hlt
push
das
sbb
add
dec
and
sti
add
cmp
push
pushf
inc
lods
cmp
sub
inc
sub
add
mov
ret
idiv
mov
dec
jmp
sbb
pop
repnz
dec
xchg
movsb
jo
enter
in
jecxz
pop
ljmp
jmp
sbb
bound
sti
sbb
loope
clc
mov
mov
dec
popf
inc
mov
mov
out
push
sbb
mov
xchg
out
cli
aad
add
aad
subb
outsl
sub
push
jb
imul
push
xchg
std
incl
xor
lods
mov
or
and
sub
stc
or
in
popf
and
lock
call
fmul
pop
into
cltd
fistpl
mov
cld
xor
insb
int3
enter
xchg
leave
mov
sbb
into
sub
mov
pop
inc
pop
jb
out
push
sahf
mov
sub
jb
adc
das
dec
mov
aaa
mov
mov
mov
cwtl
and
test
sahf
sub
dec
loope
into
scas
mov
mov
jp
mov
pushl
sbb
jae
xlat
pop
sub
lret
pop
jle
fwait
jp
dec
jmp
or
pushl
mov
sub
bound
mov
xchg
int3
or
cmc
jg
pushf
push
pop
pop
les
xchg
outsb
and
imul
xchg
dec
bswap
mov
lcall
mov
outsl
pmulhw
or
push
ror
push
js
push
jo
cmpl
loope
pushl
dec
mov
fs
push
mov
jno
in
jp
cmp
pop
jmp
or
imull
adc
icebp
jne
mov
pop
mov
addr16
and
aam
repnz
and
mov
add
add
movsb
mov
in
shlb
mov
jmp
pop
mov
ljmp
pop
in
loop
rcll
or
add
mov
pop
cld
push
loope
inc
pop
test
in
mov
mov
mov
cs
lcall
cmpsb
je
xchg
inc
and
jmp
insl
clc
xor
sbb
ret
mov
push
and
ljmp
push
int3
movhps
adc
cmpsb
imul
adc
sbb
cmp
xchg
sub
mov
ljmp
lock
push
mov
jmp
mov
pusha
and
in
lods
stos
mul
push
xchg
daa
cmp
lock
jmp
inc
add
xor
pop
lcall
xor
imul
mov
ljmp
aad
cmc
call
aaa
lcall
push
popa
out
test
out
inc
xchg
push
xor
and
fadds
call
cmpsb
mov
cmp
inc
imul
scas
dec
sub
imul
addb
mov
mov
cmp
jne
stos
mov
mov
adc
xchg
inc
add
outsb
add
sbb
cld
or
inc
pop
push
pop
adc
call
adc
inc
lea
into
imul
mov
daa
mov
bound
mov
ret
mov
fnstenv
insl
fs
std
shl
jl
mov
in
sub
cmp
js
cli
pusha
push
ds
fisttpll
mov
jae
jno
outsl
adc
scas
movsb
loope
cwtl
dec
lock
jmp
add
lcall
mov
imul
fstpt
lcall
jle
fcoml
mov
inc
pop
jg,pt
dec
ret
test
lods
adc
fs
lods
pop
fdivl
lods
loope
mov
jecxz
mov
xor
sbb
jp
lcall
imul
push
cwtl
mov
repnz
ret
icebp
outsl
rolb
push
xor
lcall
inc
cmc
fisttps
xor
out
shrb
out
into
mov
int3
lods
in
dec
dec
sbb
outsl
mov
clc
imul
or
add
jg
movsl
jbe
sub
data16
or
pop
inc
bound
in
push
stos
inc
mov
insl
dec
push
arpl
or
jl
inc
cmp
clc
dec
fisubrl
je
cmpsb
adc
lret
loopne
loopne
scas
adc
adc
and
call
aam
pop
mov
test
add
in
cmc
enter
data16
pop
in
sbb
jmp
sub
pusha
outsl
dec
and
adcb
xchg
mov
out
rclb
iret
cmp
ljmp
sar
shrl
shlb
sub
xchg
std
js
xor
jge
jg
sahf
cmp
ja
mov
in
rclb
cmp
jo
int3
adc
or
lcall
idivl
inc
clc
or
sub
adc
mov
mov
push
xor
lds
int3
jne
jecxz
mov
push
das
flds
repz
imul
lods
fidivrl
pop
and
and
inc
push
nop
cwtl
loopne
push
dec
pushl
jle
xlat
sub
inc
dec
iret
call
cmp
xchg
push
cltd
xchg
call
dec
in
pop
inc
cmpsb
jb
data16
and
jp
add
decl
push
cmp
or
fcmovne
ja
sbb
shr
fdivrl
xor
aad
mov
sti
lcall
cwtl
mov
sub
xchg
repnz
push
mov
out
mov
or
ljmp
pop
sub
jns
mov
dec
ror
add
sbb
xchg
or
int
fsubrl
cli
cmp
leave
mov
sub
cmovbe
testl
inc
iret
andl
cli
test
scas
and
cwtl
cltd
fs
outsb
mov
xchg
mov
cld
pop
dec
dec
fisttps
mov
aad
mov
pop
hlt
jg
ficoms
pop
sub
sub
in
cmpsb
out
decl
mov
xchg
xchg
dec
sbb
sbb
ret
iret
mov
push
mov
call
cs
shrl
dec
cli
stos
mov
xor
out
mov
mov
incl
js
cwtl
and
pop
sarb
sub
imul
pop
ret
test
rclb
movsl
push
xchg
jp
fldcw
mov
xchg
fldt
dec
call
lcall
pop
push
mov
imul
mov
mov
popf
sarl
test
xchg
or
jnp
loope
scas
xlat
bound
aas
call
cmc
andb
adc
inc
and
xchg
call
dec
cld
fbstp
popf
sub
lock
out
data16
sbb
fwait
adc
jg
xor
mov
push
mov
hlt
ret
mov
outsl
std
incl
je
xor
movl
stos
push
inc
emms
lret
xchg
cli
xchg
push
inc
mov
insl
sbb
jmp
dec
addl
sbb
ljmp
outsb
enter
dec
pop
inc
lods
jl
adc
add
jnp
repz
std
push
add
imul
hlt
jo
or
outsl
lahf
xchg
mov
out
mov
adc
mov
xor
jge
lret
inc
xor
or
sbb
ret
push
stos
or
ficompl
clc
mov
incl
adc
ss
and
imul
cld
pusha
icebp
movsb
cltd
cmpsl
leave
cltd
xchg
jg
jns
ret
push
loope
mov
fcomi
pop
pop
cld
pop
test
arpl
cmc
and
jmp
sub
sbb
addr16
mov
cmpsl
cmc
push
sub
imul
ljmp
in
jle
xchg
test
rolb
add
cld
mov
nop
xchg
fadds
jns
lea
adc
into
mov
fsubrl
ss
ss
sbbl
cld
add
push
repz
add
pop
out
in
stos
insl
loopne
jl
mov
gs
and
or
mov
lcall
mov
inc
inc
jae
sbb
sub
packsswb
pop
push
dec
stos
mov
ljmp
stos
fildll
or
pop
call
cli
pushl
mov
pop
mov
inc
and
lock
add
pop
out
loopne
cmp
mov
dec
mov
arpl
lret
inc
arpl
bound
sahf
push
mov
xchg
adcl
scas
cmp
in
lds
aam
shll
jge
dec
mov
add
mov
repnz
rclb
xorb
xchg
mov
cld
call
in
in
lret
mov
leave
add
pop
icebp
jg
inc
sub
or
jmp
fucomp
dec
icebp
popf
divl
xchg
das
test
inc
sti
outsb
dec
sub
jmp
nop
hlt
les
out
cmc
sub
ret
sub
pop
sbb
scas
clc
incl
call
cmp
mov
push
dec
pop
decl
and
mov
fisubs
negl
testl
xchg
cmp
incl
int3
pop
ret
cmpsb
push
add
adc
adc
adc
lock
jge
sbb
sub
jp
xor
pusha
xchg
mov
outsl
fisubl
sbb
sub
dec
sub
inc
cmpsb
mov
ljmp
dec
xor
or
add
sahf
mov
mov
enter
arpl
dec
outsl
clc
call
fldenv
rcrl
mov
push
add
sub
mov
mov
call
ret
stc
leave
hlt
dec
push
cmpsl
add
pusha
or
scas
gs
sbb
jmp
pop
mov
sti
adc
lret
sub
inc
popa
push
push
mov
fs
mov
lea
lret
inc
std
aad
fbld
ljmp
ficomps
test
push
out
inc
push
and
cltd
jo
repnz
loope
sbb
dec
es
jb
adc
mov
fucomip
imul
mov
xor
daa
scas
mov
sub
inc
adc
jecxz
push
addr16
sub
sbb
bound
pop
dec
cmp
cmp
call
mov
adc
mov
sbb
subl
or
ljmp
cmp
int3
xor
sub
pop
cmp
sbb
rolb
mov
push
mov
jmp
out
sub
push
and
mov
pop
lcall
call
fistps
loope
add
pop
and
push
adc
into
arpl
xor
in
shl
decl
outsb
push
cli
jb
outsb
movsb
loope
mov
mov
add
loopne
jae
jae
incl
mov
pusha
popf
mov
sahf
lret
aaa
fisubrl
imulb
decl
fmuls
shr
stos
jg
test
leave
outsb
nop
pop
arpl
xchg
add
in
decl
dec
stos
adc
dec
sahf
insl
addr16
shl
mov
jmp
push
sti
scas
inc
fsubr
icebp
rolb
ret
aad
cmp
cmpsb
dec
inc
mov
inc
add
jmp
cmp
inc
fnstsw
sbb
push
or
jmp
inc
or
xchg
fstl
cmpsb
test
orl
mov
iret
call
mov
bnd
mov
jg
xor
sahf
pushf
push
int
push
mov
and
orl
inc
call
nop
mov
push
scas
mov
ret
movsb
popf
mov
cmp
incl
ret
inc
mov
xor
rcll
and
scas
add
movsb
je
pop
dec
dec
jg
push
pop
xor
mov
adc
push
inc
les
pop
fidivrl
jecxz
pop
cmp
jmp
popf
mov
dec
ljmp
insl
iret
sub
mov
pop
mov
mov
push
out
adcb
pop
ljmp
and
inc
mov
mov
test
xor
je
jns
jnp
xchg
outsb
subl
leave
inc
inc
loopne
mov
movsl
jecxz
lock
sbb
cltd
jmp
xchg
and
push
dec
mov
cmp
es
cld
outsb
push
push
adc
jb
lock
push
daa
bound
insb
cmp
push
inc
rcrl
call
lcall
dec
ljmp
addl
rcrb
inc
lahf
ja
push
cli
jmp
cmp
test
insb
lret
mov
and
ljmp
inc
sub
fwait
jae
stc
mov
jmp
lock
mov
jg
pop
xor
sbb
ljmp
in
pop
fwait
loope
pusha
mov
adc
std
mov
pop
sub
xor
jge
xchg
mov
mov
in
and
loop
jo
rorb
adc
jl
adc
mov
iret
add
aas
pop
push
inc
jl
sub
stos
fdivl
std
sub
jno
push
iret
inc
mov
pop
inc
xchg
pushl
into
cmpsb
fwait
xchg
popf
js
repnz
aaa
xchg
push
mov
es
mov
out
data16
jno
cmp
push
mov
xchg
dec
push
mov
idivb
sub
mov
mov
sub
inc
loope
add
push
lods
mov
jmp
mov
cmp
mov
xchg
dec
inc
push
sti
aaa
mov
ljmp
xor
jle
push
icebp
popa
addr16
sub
loopne
or
inc
les
dec
sbb
stc
inc
jle
jmp
dec
push
mov
loop
push
xor
cmp
mov
sbb
sarb
jmp
call
xchg
std
jns
ss
cmp
fisubrs
inc
outsl
sbb
fidivrl
call
inc
cli
test
lds
mov
adc
xchg
sahf
pop
jle
aaa
je
mov
add
cmp
mov
xchg
call
adc
mulb
shrb
dec
mov
mov
push
decl
and
xor
nop
or
push
and
pushf
cmp
mov
mov
mov
dec
bound
pop
jg
xor
xchg
dec
or
lret
jmp
pushl
pop
push
xchg
pop
pop
cli
mov
loop
fadds
ss
out
inc
cwtl
pushl
daa
mov
enter
movsb
mov
jp
adc
andl
imul
call
push
lret
popf
int3
pop
push
fidivrs
fldl
pusha
xchg
sub
cmp
sti
jo
cmp
call
out
mull
in
out
mov
sub
pushl
jae
in
aad
cmp
cmpsl
call
lcall
stc
or
mov
mov
adc
in
incl
cmp
lahf
sahf
loope
dec
dec
sbb
lretw
lods
scas
ss
mov
xor
cmp
xor
sbb
mov
or
xlat
sbb
add
fidivrl
ljmp
in
dec
adc
push
mov
int
or
dec
sub
lods
mov
sub
and
test
mov
aad
outsb
dec
inc
stos
or
insb
sbb
in
xchg
inc
adc
test
jg
or
ljmp
cmp
xchg
jae
push
in
lods
and
je
or
push
out
or
decl
push
fucomi
cwtl
mov
or
ljmp
int
xor
cmp
push
mov
faddp
push
addr16
dec
movsb
idivb
push
pushl
sahf
lcall
ja
dec
fcompl
stos
sbb
ja
jo
adc
add
in
pushl
push
jle
enter
adc
test
or
notb
dec
mov
mov
ds
in
clc
inc
cmp
xchg
aaa
mov
add
cmp
js
testl
decl
adc
sbb
adcl
sub
enter
icebp
or
or
decl
clc
adc
testl
sbb
decl
xchg
sub
je
lahf
and
out
scas
adc
xchg
xchg
fwait
repnz
icebp
push
test
das
in
push
in
fmuls
lret
inc
nop
pop
push
inc
out
rcll
mov
std
xor
enter
xor
std
dec
and
add
dec
fidivl
test
xor
insl
imul
xchg
fsubrs
xchg
decl
add
xchg
cltd
adc
into
sarl
sti
cli
xchg
push
loope
adc
xchg
idiv
ljmp
sbb
lea
call
jae
movsb
pop
xchg
xchg
mov
rolb
lcall
popa
pop
sbb
cmpsb
hlt
cltd
sub
mov
inc
sbb
add
pop
fidivrs
dec
clc
mov
shlb
push
lock
outsl
inc
inc
cmpsl
push
xchg
jg
ja
inc
jno
mov
pushf
test
sub
jnp
jge
push
es
fwait
jb
inc
jp
and
jp
jg
sub
outsl
clc
mov
or
mov
ss
clc
je
scas
int3
lods
xor
pushl
rclb
xor
jne
sbb
stos
xlat
das
dec
jo
sub
pushl
clc
add
idiv
add
test
clc
pop
inc
js
stc
movsb
stos
cld
jb
ret
decl
pop
repz
sti
mov
daa
ret
xchg
pusha
pushf
or
jmp
dec
lds
jg
aaa
std
nop
push
add
pop
jbe
push
inc
mov
xchg
aad
dec
sbb
push
out
decl
push
test
jmp
mov
xchg
mov
pop
jg
incl
cld
idivb
add
push
ja
inc
add
push
aas
cld
call
inc
insl
lahf
xor
nop
sbb
adc
add
jg
and
fildl
push
je
lock
pop
cmp
jb
sub
jg
xchg
shlb
xor
sub
pushf
cli
mov
incl
lret
push
inc
dec
dec
cld
pop
and
fidivrl
xchg
sbb
movsl
aam
ljmp
int3
jmp
incl
pop
dec
push
sub
push
mov
xchg
xchg
inc
call
mov
mov
dec
sub
mov
fimuls
xchg
xor
cltd
fdivl
lcall
adc
or
xor
jo
push
dec
shll
inc
lcall
cmp
xchg
xor
stos
lret
mov
jp
sub
loopne
mov
push
mov
fistl
mov
pusha
sub
mov
sub
adcl
insl
in
repz
shl
mov
lods
dec
loopne
lods
sbb
loope
jmp
test
mov
inc
stos
mov
xor
fwait
test
fistps
jb
aam
push
into
cmpsl
mov
push
das
jmp
add
xor
sbb
inc
mov
aam
fs
out
sub
or
fcmovu
loopne
xchg
adc
arpl
jecxz
sti
ljmp
sub
lret
mov
pusha
movsl
add
mov
mov
popa
mov
dec
call
loop
and
mov
aas
lods
lods
add
pop
jbe
shll
aas
lock
jo
lcall
or
sbb
push
add
aas
dec
out
or
dec
mov
call
loopne
jle
sti
push
push
cld
dec
call
lea
mov
jb
pop
jae
fwait
adc
mov
jg
sbbb
push
pushl
jmp
mov
dec
xor
jp
xchg
addr16
aaa
cltd
xchg
xor
jg
fwait
xor
nop
and
orb
fwait
push
xor
loope
jecxz
outsb
sub
mov
fnstcw
cs
jg
incb
into
pop
push
stc
push
dec
test
adc
jne
in
outsb
mov
mov
into
sub
mov
sub
fldt
fcomps
xor
jmp
imul
pop
lea
push
push
push
sti
sarb
imul
or
pop
pop
int3
lock
decl
xor
sub
xor
mov
decl
cmpsl
xchg
jp
pop
sub
push
pushf
add
aas
ljmp
or
dec
aas
jno
pop
subb
or
lods
pop
add
xchg
aas
sub
pop
pop
cmp
mov
in
or
insb
xor
pop
pop
setp
adc
sub
mov
mov
adc
js
js
or
sbb
test
cmpsl
jecxz
mov
outsl
sub
jecxz
and
int3
mull
ljmp
repz
mov
cmpsl
mov
data16
ja
mov
popa
loope
lcall
adc
xor
mov
sub
cli
sbb
pop
in
jg
out
scas
jg
add
dec
not
pop
imul
or
roll
cmpsl
addb
je
icebp
rorl
call
add
insb
inc
mov
push
jns
insl
push
mov
sar
call
jns
ss
cld
ffree
add
ffree
add
mov
cld
fs
loope
jg
lods
lcall
int
xchg
test
shll
jo
in
xchg
dec
inc
cwtl
and
lcall
jmp
lods
out
in
sbb
pop
mov
das
inc
lds
sbb
test
jmp
lea
mov
lcall
sub
adc
mov
insb
scas
jmp
inc
andb
call
mov
mov
enter
xchg
ja
std
andb
inc
das
daa
lods
add
mov
iret
addr16
scas
sbb
mov
push
adcl
ljmp
add
jb
daa
mov
push
shll
shlb
dec
cmp
loopne
sti
fbld
jmp
ds
pushl
pop
inc
sahf
je
xchg
mov
pop
or
sbb
jg
test
or
lret
lds
icebp
dec
in
repz
jg
data16
stos
lret
push
ret
pop
ret
cmp
std
cmpsl
notl
in
jge
sbb
filds
lret
xchg
mov
cmc
xor
or
mov
add
xchg
int
inc
rolb
add
ljmp
stos
dec
je
ds
push
loop
xor
mov
gs
adc
or
and
and
incl
xor
jg
std
test
and
fdivl
mov
adc
inc
aaa
out
lcall
jns
stos
lds
jno
loop
ret
xor
iret
xchg
std
xchg
enter
dec
mov
and
addb
movsl
or
incl
mov
dec
aam
lret
insl
insl
les
sbb
jno
pop
xor
clc
popf
call
lret
stos
inc
mov
out
dec
pop
aad
ret
xchg
jmp
sbb
andl
sbb
insb
and
lds
insl
imulb
add
clc
incl
and
dec
xlat
outsl
lds
popa
ret
ljmp
sub
cli
pop
adc
imul
rol
stos
aaa
dec
scas
scas
ret
loopne
xchg
div
scas
inc
cld
fdivrs
cmp
lret
or
inc
mov
aas
or
mov
dec
pushl
push
fucomp
cltd
scas
arpl
inc
xor
jo
xor
xchg
pop
dec
out
mov
test
jl
cmp
cmpsb
scas
nop
inc
or
or
fs
je
dec
lea
add
pushl
std
sbb
xor
stos
xor
xchg
mov
pop
mov
pushf
xchg
cwtl
adc
lock
les
sub
push
and
repz
mov
pop
jl
in
xchg
adc
or
xchg
pop
and
push
dec
jge
jg
stc
gs
xchg
fdivrs
stc
push
in
out
jge
pop
in
lret
lock
or
hlt
orl
insl
lock
decl
idivl
push
dec
mov
cmp
clc
shll
and
das
jl
mov
loop
dec
dec
cltd
cwtl
fldenv
xor
adc
orb
into
stc
iret
xchg
inc
push
pusha
orb
jmp
push
sub
mov
push
ret
mov
lock
adc
push
lcall
je
test
mov
outsl
and
or
call
dec
mov
int3
repz
push
mov
pop
mov
subl
into
push
stos
decl
testl
sub
jg
adc
push
jno
aaa
mov
lods
popa
add
lods
jl
in
lahf
xor
imul
xor
aas
mov
xor
test
xlat
pop
xchg
repnz
insl
ljmp
dec
aaa
xchg
out
dec
stos
xchg
lods
repnz
mov
or
mov
and
ljmp
sbb
fadd
push
push
jb
aad
mov
movsb
jb
jl
dec
cmp
lcall
adc
test
jne
pop
imul
dec
cmp
fbstp
shl
cli
decl
mov
aas
loope
sub
xlat
repz
loopne
xchg
or
inc
pop
lock
out
and
arpl
pushf
movsb
les
sub
lret
mov
add
cli
stc
addb
sbb
mulb
xor
cmp
xchg
adc
test
jg
sbb
pop
out
push
dec
sub
mov
inc
mov
orl
add
add
sub
pushl
rorb
enter
out
push
push
aas
test
dec
aas
jmp
ljmp
popf
jo
mov
add
jl
and
mov
inc
stc
or
fdiv
std
ljmp
xchg
pop
into
les
stos
lds
in
fldt
xorl
lock
stos
pushl
sbb
xchg
test
sub
xchg
sub
lcall
aaa
shlb
xlat
in
lock
cmc
adc
xchg
scas
lods
or
cwtl
andb
outsl
insb
int3
mov
and
mov
mov
adc
cld
jno
jg
test
or
pop
mov
daa
fiaddl
lret
inc
lods
out
mov
ljmp
addl
out
fldl
xor
pop
aam
ret
inc
jne
scas
xor
adc
push
push
mov
sbb
pop
cli
cmpsl
in
and
jmp
jnp
adc
mov
mov
dec
cld
or
sub
pop
lock
incl
ficomps
jnp
fwait
out
idivb
lret
test
iret
pushl
scas
push
pop
mov
sbb
xlat
mov
sbb
mov
cwtl
les
or
call
mov
fnsave
push
inc
jne
cmp
pop
and
mov
cmpsl
loopne
adc
jne
inc
inc
pusha
loop
jecxz
mov
cmp
fstl
mov
push
insl
sub
jg
push
pop
and
mov
outsb
cmp
add
ret
out
pop
mov
dec
pushf
mov
ja
lcall
jae
cld
int3
pop
movl
mov
lret
mov
pop
jb
inc
pop
push
adc
xor
mov
jecxz
and
decl
jmp
divl
pop
inc
cmp
out
das
add
lcall
test
xor
or
pop
mov
shlb
out
cmpsb
jg
movsb
bound
jg
aad
cs
push
fnsave
pop
fs
mov
out
mov
call
dec
push
inc
ret
fsubrs
push
pushf
xchg
add
rolb
arpl
lea
inc
or
mov
fmull
scas
jmp
jle
hlt
mov
adc
sti
sbbb
stos
sbb
sar
call
pop
adc
jecxz
in
inc
pop
cs
push
sbb
negl
cmp
and
inc
jge
pushl
fs
and
loope
jo
xchg
aad
pop
jecxz
push
lods
jmp
int
sub
jg
jbe
lcall
xchg
fdivrl
add
push
shlb
pop
outsl
jmp
add
jnp
push
lahf
stos
in
jle
lret
xlat
xchg
pop
push
sbb
push
mov
dec
icebp
jg
lock
dec
les
test
add
mov
sbbb
das
cli
pop
pop
mov
or
xor
cmp
push
movsb
add
dec
in
aaa
adc
xor
xchg
pop
lret
jmp
ja
jge
mov
lock
inc
dec
int3
into
and
popw
shll
inc
repnz
scas
inc
iret
loopne
fildll
push
out
adc
inc
dec
pusha
clc
decl
xchg
xor
cmpxchg
fisubrl
jbe
mov
js
call
xor
xchg
add
inc
jle
imul
testb
cmp
push
mov
fneni(8087
or
into
jle
scas
add
push
push
jge
mov
stc
mov
aaa
xor
fs
xor
popa
fcompl
add
fdivl
jg
call
repz
repnz
pop
ss
movsl
frstor
xchg
fimull
das
adc
push
mov
mov
imull
popf
daa
sti
aas
xor
cmp
jl
arpl
push
clc
call
scas
inc
cwtl
xchg
jmp
push
xor
jbe
pop
sbb
call
adc
mov
rolb
ljmp
adc
femms
sub
jg
arpl
mov
hlt
ficoms
decl
sbb
scas
mov
cltd
mov
mov
inc
xchg
pop
pushf
adc
inc
test
bound
negb
dec
cmpsb
int3
add
jg
fbld
push
add
dec
sub
aas
xor
mov
cmp
sarl
lds
cmpsb
adc
faddl
push
hlt
push
or
aaa
push
bound
mov
movsb
mov
out
aaa
jno
mov
mov
xlat
andb
rcll
xor
push
cmp
mov
dec
dec
nop
dec
sbb
and
in
inc
lret
or
sar
pushl
filds
iret
aad
aaa
dec
mov
lea
lods
xor
mov
sbb
push
ficompl
std
pop
stc
xlat
stos
sub
rolb
int
add
mov
out
cmp
inc
push
bound
sahf
inc
movsl
cmp
mov
filds
iret
scas
stos
cmp
sbb
cmp
out
fcomip
ljmp
into
out
adc
dec
mov
rorb
xor
xor
loope
cwtl
dec
fdivs
jge
inc
xchg
jno
enter
loope
sub
aaa
or
scas
ret
mov
call
cmp
stos
sub
cmpsl
jmp
inc
mov
cmp
enter
jp
ud0
ljmp
mov
or
push
xchg
inc
inc
add
into
sbb
mov
sub
mov
stc
or
pushl
or
cmp
rolb
in
mov
les
mov
xlat
jp
lret
xlat
add
test
lcall
xchg
sub
std
pop
sbb
lock
jg
arpl
in
daa
sub
ljmp
lret
fnsave
adc
sbb
pop
aaa
push
cli
stc
xor
movsl
pop
icebp
daa
pop
jle
mov
push
ficoml
adc
in
dec
scas
scas
cmp
sbb
rorb
loopne
jmp
decb
addr16
ljmp
adc
aad
or
mov
outsl
fldcw
jmp
jo
cmp
jg
add
lock
mov
lods
sbb
rorl
aam
pushl
insb
je
mov
push
pushl
ret
pop
dec
gs
push
std
call
push
mov
xchg
imul
pop
push
adcl
lock
mov
jmp
inc
jbe
or
mov
push
sub
lods
pop
jno
aam
test
and
or
lcall
sbb
inc
imul
mov
pop
cmp
sbb
nop
jo
jnp
push
or
gs
gs
or
scas
inc
mov
ss
dec
nop
dec
lret
in
mov
or
xchg
sbb
mov
int3
and
push
lds
xchg
subb
out
shl
loope
pop
push
movsb
test
cli
fldenv
mov
pop
pshufw
pop
xchg
fdivrl
movsb
cmp
dec
repnz
clc
push
ds
ljmp
faddl
movl
cmp
ljmp
push
dec
test
jmp
out
test
icebp
testb
push
sub
jp
push
pop
sub
call
cmp
xchg
mov
fstl
repz
pop
pop
add
adc
call
ljmp
mov
fnstenv
leave
jo
test
mov
jmp
dec
xchg
pushf
out
outsl
fildll
or
stc
xchg
mov
or
stc
test
push
cmp
fadd
mov
fdivrs
test
adcb
in
adc
mov
call
mov
push
push
stc
lds
mov
mov
decl
jno
loope
loop
dec
lods
repnz
mov
loop
fmulp
pop
aad
incl
enter
inc
imull
fsubs
sbb
xchg
mov
js
mov
je
mov
jmp
mov
pop
test
mov
js
ror
xor
mov
or
jno
inc
inc
rclb
xchg
outsb
cs
push
lds
jns
ficoms
push
sti
xlat
cmp
incl
dec
cs
xchg
jo
fwait
nop
cmp
add
xor
dec
dec
mov
loope
mov
aad
rolb
cmp
ljmp
and
dec
adc
mulb
das
xchg
adc
call
rol
daa
out
ret
xchg
adc
pushf
push
stos
popa
pop
jno
cmp
pushf
jle
mov
pop
mov
add
jle
iret
push
mov
in
mov
inc
push
jmp
xor
mov
push
lahf
js
dec
outsb
fimuls
and
dec
jp
inc
xlat
decl
xchg
or
stos
test
pop
popa
ds
aas
push
jg
pushl
add
mov
cmp
popf
inc
mov
pop
mov
dec
push
and
push
adc
ret
test
push
jg
xchg
in
jle
adc
push
jbe
movsb
sti
jnp
int
bound
mov
decl
inc
pop
lcall
dec
cmp
in
les
cmp
fidivrs
adc
ret
adc
loope
xchg
push
outsl
shlb
jecxz
add
jbe
insb
loop
loopne
cs
sbb
cli
mov
cmc
mov
xor
add
insl
xchg
pop
rcr
dec
adc
and
jmp
ss
or
test
jbe
jl
outsb
lahf
pop
push
mov
jns
out
gs
cmp
mov
pushl
xchg
rcrb
popa
or
ficoml
sub
dec
jmp
mov
dec
arpl
pop
ljmp
push
xor
imul
cli
jmp
pop
aas
test
mov
stc
outsb
out
xchg
ret
loopne
cli
sti
call
ja
sbb
pushl
and
sbb
sub
popf
jp
jbe
add
pop
stos
mov
dec
std
or
ljmp
cmp
daa
sarl
sbb
xor
ds
pop
orl
mov
ljmp
les
cld
mov
inc
ret
and
jbe
push
cmpsb
hlt
cli
xchg
shlb
pushl
dec
jg
pop
add
hlt
or
es
scas
inc
ret
adc
sub
call
pop
jl
stc
jmp
xor
inc
lods
mov
repz
cmp
test
xor
adc
cld
stc
fs
adc
dec
cld
pop
loopne
mov
mov
lret
test
jmp
out
mov
int
decl
shll
mov
icebp
dec
xor
cmpsb
into
jae
push
fwait
cmp
sub
jge
mov
hlt
stos
out
loope
std
arpl
imul
pop
nop
ljmp
add
cli
into
jge
mov
cli
inc
ds
out
int
mov
incl
bound
movsb
lret
push
insl
ret
xlat
arpl
add
pushl
add
pop
push
push
mov
cmp
and
dec
enter
loop
mov
push
rol
pop
lods
ficompl
fsubrs
or
mov
jmp
add
mov
sub
arpl
mov
mov
mov
sbb
hlt
xor
push
test
cs
xchg
nop
out
pushl
rcrb
addr16
jo
mov
sub
leave
push
jo
orb
fcmovnb
pop
ljmp
or
inc
nop
ret
adc
mov
shr
inc
lahf
sub
mov
xor
pop
outsb
xor
testl
cmp
dec
out
hlt
pop
push
std
sbb
adc
loope
dec
or
ljmp
sub
int3
rorb
mov
jge
add
hlt
or
dec
adc
inc
jle
mov
pop
or
ljmp
mov
pop
arpl
aas
cmp
ljmp
in
mov
sub
in
lock
in
je
push
loope
mov
jp
pushl
bnd
in
xor
xchg
adc
adc
mov
or
repz
sbb
call
jne
je
push
pop
fidivl
dec
ds
sahf
push
xor
xor
dec
cmp
jg
addr16
bnd
scas
iret
pushf
push
adc
pop
test
out
pop
stc
add
lahf
push
es
call
js
xchg
iret
mov
pop
cmp
insb
cmp
fld
add
incl
clc
sbb
shlb
sub
test
enter
fisttpll
cwtl
adc
mov
cwtl
xchg
fwait
icebp
repnz
mov
call
fwait
jo
movsb
repnz
call
lods
sub
and
pop
cld
mov
out
ljmp
pop
dec
cli
adc
add
rcrb
es
pop
xor
xor
jg
push
cld
xchg
rcr
and
dec
enter
xor
call
inc
cli
jecxz
mov
shll
fnstcw
pop
mov
cmpsl
fbld
out
inc
or
int3
lcall
std
cs
xchg
int3
aam
insb
outsw
mov
jecxz
push
push
sbb
pop
fimuls
mov
ds
dec
repnz
je
add
ss
fs
movsb
pop
xchg
lods
inc
ss
jo
sbb
dec
inc
pop
repnz
push
push
sarl
in
mov
fcmovnbe
sub
lret
pushl
mov
ljmp
adc
cmp
xor
fdivrl
pop
vshufps
fs
pushl
sub
fcmove
test
adc
mov
push
out
pop
hlt
jns
dec
and
inc
clc
push
andl
and
push
call
fcoml
imul
mov
enter
sub
pop
push
es
xchg
arpl
incl
mov
ret
aam
ljmp
call
dec
jbe
sub
add
loop
fs
gs
sub
xor
lcall
stc
hlt
or
cltd
mov
test
jl
mov
mov
inc
sar
lcall
cmp
pop
ds
mov
jl
fisubl
fidivl
sbb
andl
jg
loope
jno
imul
test
push
adc
xchg
popa
aas
push
shll
and
jmp
fstpl
adc
sti
jmp
call
mov
push
pop
sti
xchg
cmp
jp
push
jl
lea
idivb
lods
aad
mov
push
cmp
push
jne
xchg
jecxz
test
jecxz
jg
pop
mov
push
lods
adc
inc
shll
jg
imulb
sub
fdiv
test
out
sbb
daa
aas
mov
or
ret
sar
jmp
loope
aam
aad
movups
add
cwtl
xchg
pop
mov
rcrl
movsl
in
xor
scas
mov
insb
into
out
mov
cmp
sub
push
std
cmpsb
cmp
outsl
sub
mov
fmull
call
pop
imulb
dec
lret
xor
test
call
fdivl
add
jae
je
push
push
xacquire
lcall
jecxz
xor
fadds
call
mov
jo
mov
decl
add
inc
sbb
enter
push
stos
daa
push
mov
dec
push
loopne
pop
inc
adc
inc
mov
lcall
mov
sti
es
add
test
imul
or
out
jno
or
push
sbb
jp
aas
xchg
ja
arpl
aaa
je
cs
add
mov
lock
das
add
mov
dec
mov
idivb
imul
push
je
mov
sub
add
cmp
gs
or
jp
scas
jnp
rorb
mov
jge
add
div
push
mov
pop
adc
nop
test
std
scas
xchg
lock
jg
jnp
push
adc
call
pop
inc
shll
ds
mov
xchg
mov
orb
xchg
push
test
pop
aad
adc
mov
xchg
lcall
push
sub
fnstenv
out
adc
jmp
fsub
fld
xchg
inc
adc
adc
inc
xchg
dec
leave
mov
jg
jmp
in
mov
push
pop
pop
jno
xchg
mov
mov
sbb
dec
and
test
jmp
mov
inc
jp
mov
adc
ds
fs
test
arpl
mov
and
cmp
add
push
in
and
dec
xchg
jg
and
mov
fnstsw
mov
push
sub
sbb
inc
shrb
lcall
fs
movsb
xlat
stc
imul
aad
push
mov
inc
mov
xor
decl
cmp
mov
push
popf
add
in
xor
or
xchg
mov
sti
adc
mov
fsubl
jnp
flds
ljmp
aaa
xchg
or
pop
or
mov
in
dec
push
dec
mov
xchg
scas
mov
out
roll
and
notl
and
pusha
ret
pop
sar
adc
lahf
xchg
clc
add
imul
jmp
xchg
xchg
pop
repz
sub
cltd
clc
inc
or
and
xor
inc
adc
jmp
mov
aas
sahf
aaa
addr16
push
mov
call
mov
aad
xchg
hlt
call
jmp
dec
repnz
icebp
mov
insl
sub
jg
in
gs
push
pop
and
subb
push
cmpsl
mov
loop
inc
cmp
pushf
jle
in
xor
pop
cmp
not
das
fbstp
mov
push
lods
subl
lds
mov
jecxz
test
adc
adc
inc
cmp
cmp
out
cli
lcall
push
mov
jo
ret
and
push
out
loop
ja
xchg
adc
or
dec
jbe
fs
lcall
cwtl
into
xchg
mov
or
inc
inc
pusha
cmp
mov
mov
jae
mov
mov
in
add
mov
jmp
in
and
sbb
push
mov
scas
inc
movsl
stos
xchg
aad
and
popa
in
or
pop
dec
add
sar
decl
xchg
mov
repz
jge
push
push
shrl
or
dec
push
int3
sub
push
or
and
sub
xor
mov
jmp
arpl
dec
xchg
or
sbb
sub
ficoms
and
push
jb
lcall
xor
pop
add
dec
mov
or
std
test
fistps
xor
and
aad
insl
pop
dec
lea
sub
mov
sub
inc
ja
decl
sbb
push
stos
push
fsub
lock
gs
or
sub
clc
into
add
arpl
adc
decl
sti
out
lahf
ret
out
xchg
seto
and
outsl
jecxz
mov
add
dec
sar
lcall
push
sub
into
push
fwait
in
stos
push
aam
xlat
frstor
arpl
adc
and
lcall
sub
in
in
adc
ja
imul
daa
xchg
adc
lret
mov
xchg
cmpsw
outsl
xor
sbb
shlb
pop
mov
mov
inc
jp
insb
lcall
dec
dec
das
jno
repz
in
or
cmp
push
mov
push
insb
adc
mov
test
lods
incl
es
and
mov
test
cmpsl
cmp
in
andb
decl
ret
ror
dec
cmp
and
jno
das
scas
pop
scas
fwait
popf
pop
mov
jg
sbb
dec
push
jle
neg
int3
push
insb
and
push
mov
mov
sbb
pushl
aaa
adc
xlat
fcmovbe
lea
adc
imull
es
mov
and
pusha
fsubrs
fwait
mov
add
aam
and
nop
mov
aad
ljmp
inc
shrl
addb
mov
pop
int3
dec
imul
mov
cli
ljmp
jge
orb
les
and
movsl
je
out
xchg
fstp
mov
incl
cld
fucom
push
push
cmp
sub
and
call
xchg
clc
mov
outsb
or
fwait
lahf
add
mov
cli
sar
call
mov
jmp
cmpl
mov
add
jae
or
push
hlt
mov
fldenv
adc
cmc
cmp
and
sbb
mov
test
ds
repz
sbb
popf
jae
imull
and
popa
sbb
push
mov
jmp
ss
popa
aas
cmpsb
push
lods
movsb
inc
mov
pop
pop
push
mov
xchg
xchg
jmp
repnz
cmp
jns
pop
mov
push
push
es
psubsb
aaa
add
decl
jle
cld
ljmp
sub
jge
and
lods
push
jae
dec
ficoml
mov
pop
mov
xchg
pushaw
pop
std
js
mov
lods
call
jp
jne
add
jge
clc
cmp
push
int3
mov
pop
ret
cmpsl
push
mov
icebp
dec
mov
sbb
pop
clc
ja
incl
push
or
push
dec
aam
mov
incl
pop
push
das
loope
and
mov
das
add
ljmp
insl
jno
mov
mov
aaa
xor
jbe
in
push
mov
push
imul
mov
ret
pop
leave
std
rolb
aam
bound
push
add
fisubs
int3
or
loopne
ffreep
mov
mov
repnz
adc
sti
push
xchg
inc
jnp
ja
movsl
push
arpl
out
clc
xor
and
jmp
movsb
or
jle
call
loope
shl
pop
mov
lret
outsb
pusha
xor
popa
syscall
test
scas
add
hlt
lcall
jmp
jecxz
xchg
pop
push
xor
xlat
dec
scas
call
xor
jg
cmp
push
dec
sbb
inc
sahf
jge
xchg
push
lods
mov
lock
call
or
shrd
mov
in
loop
inc
fdivrl
sbb
pushf
or
fdivrs
les
jmp
push
xorb
ljmp
addr16
or
in
lcall
lcall
xlat
aas
outsb
cmp
cmp
call
cli
lds
xor
ss
nop
lret
cmp
inc
mov
cmp
adc
decl
sub
cwtd
loop
aam
stos
cmp
das
mov
inc
inc
add
daa
push
mov
cs
jmp
test
scas
adc
inc
dec
call
mov
push
dec
xchg
test
loopne
cmpsl
xchg
mov
push
insl
or
adc
xchg
mov
pop
arpl
mov
inc
mov
and
lret
xchg
incl
dec
lods
in
fildll
data16
addl
leave
cltd
insl
add
incl
sub
jl
xor
rclb
inc
sub
push
into
push
xlat
in
pmaxsw
fildll
test
mov
rolb
dec
sub
cld
push
ja
push
mov
mov
loopne
xchg
fsubrs
lds
movsl
mov
sub
scas
insl
pop
clc
aad
scas
jbe
fildll
fsubp
jb
sub
mov
lahf
sbb
popf
sti
cmpsl
push
fdivs
insl
ljmp
rclb
and
jg
jbe
cmpsb
hlt
incl
data16
sub
ja
test
mov
icebp
in
sbb
ljmp
mov
int
daa
push
jg
je
pushf
dec
xchg
pushf
cmpsl
and
repz
ljmp
out
test
iret
faddl
ljmp
iret
mov
inc
out
bound
mov
or
xchg
adc
lds
out
je
mov
ljmp
cmp
imull
sbb
sbb
adc
lret
and
pop
mov
or
dec
movsl
aas
or
ljmp
lret
loopne
in
lret
pop
or
cmp
call
fnstsw
and
sbb
sub
lahf
mov
test
pop
sbb
xchg
mov
rcr
in
stos
cmp
call
push
ret
lock
pop
jae
aas
jb
jb
mov
ja
test
push
xchg
incl
test
lods
xchg
out
adc
iret
in
in
mov
scas
clc
decl
ljmp
xor
dec
leave
cli
je
data16
lods
push
incl
cmp
scas
rolb
jae
mov
or
inc
ss
jmp
xchg
mov
out
pusha
or
lcall
scas
xchg
or
cli
sti
mov
cmp
sbb
mov
mov
and
icebp
fwait
push
cmp
addb
jns
pop
and
push
xchg
push
test
or
hlt
out
std
in
or
push
and
jmp
jae
nop
icebp
mov
jo
xchg
sbb
stos
addr16
bound
inc
loop
out
push
lcall
int3
sbb
sub
sbb
add
jb
cmpsb
cmp
xor
dec
ror
cmp
jle
sahf
or
lcall
cmpsb
jle
xor
mov
out
leave
andl
sub
rcpps
or
repnz
inc
xor
jle
mov
mov
mov
loopne
fildll
cmp
lcall
xor
sahf
movsl
push
lea
push
enter
add
inc
mov
lcall
inc
adc
add
push
jno
out
movsb
clc
cli
inc
xchg
mov
or
pop
cld
popa
sub
inc
es
dec
pushl
mov
push
cmpsb
jge
sahf
add
lods
adc
fmul
adc
jns
mov
arpl
incl
dec
cmpsb
pop
mov
xchg
hlt
divb
jl
outsb
push
notb
sbb
ljmp
and
fimuls
fsubs
mov
push
inc
xchg
insl
jbe
mov
data16
push
int3
xchg
adc
fimull
adc
test
pop
stos
outsb
nop
clc
jmp
push
subl
aad
and
push
popa
mov
jmp
insb
rclb
jno
es
jae
das
sub
push
mov
xor
mov
fstl
data16
jle
jge
jmp
pushl
fwait
cwtl
in
xorl
lret
pop
jae
inc
push
stc
loope
lods
imul
psllq
dec
or
mov
jb
mov
adc
lods
into
xchg
jnp
push
pop
add
lea
push
jmp
push
and
repz
jle
add
sbb
mov
scas
push
and
xchg
lcall
popf
lods
add
xor
mov
mov
jo
pushf
mov
scas
pusha
pop
test
jg
insb
jne
mov
push
aaa
aam
ja
cmp
stos
push
mov
push
decl
lcall
pop
jg
and
dec
and
add
push
sbb
mov
js
lcall
jmp
inc
lds
xor
cwtl
cmp
pop
add
sub
mov
fsubs
lcall
mov
out
ficoml
mov
or
pushf
or
ss
stos
pop
shl
loope
out
xchg
xchg
or
dec
xor
push
loope
lcall
shll
test
repnz
xlat
je
popf
dec
insb
jmp
xchg
mov
pusha
inc
ds
adc
sbb
sar
call
sti
fnstenv
aas
out
pop
data16
clc
mov
sti
fcmovb
xor
xor
lcall
cli
inc
inc
xor
xor
subb
cmp
int
in
aam
mov
int3
ds
jne
adc
decl
and
es
fnstsw
pop
test
jg
out
imul
aam
xchg
cmp
cmp
cmp
dec
push
or
dec
lcall
loop
sbb
adc
adc
jnp
jl
xchg
jb
jg
scas
mov
lds
call
stos
dec
mov
xor
mov
lods
mov
dec
mov
mov
clc
ds
lahf
sbb
sti
fisttpll
pushl
adc
sahf
xor
iret
inc
popa
dec
pushf
lcall
and
lds
repz
lds
out
int
dec
jnp
pushf
pop
addr16
jae
jp
rcll
fsubrl
int3
mov
aas
sbbb
aaa
cmp
mov
out
lret
xchg
idivb
adc
xor
jb
jmp
push
pop
andb
mov
xor
clc
clc
lret
insl
sbb
scas
dec
mov
lret
mov
stos
out
jno
add
mov
mov
out
lret
cmpsl
xlat
mov
jnp
xor
repz
fistps
mov
movsb
into
pop
inc
pop
pop
push
sti
mov
ljmp
push
pop
int3
imul
jno
cli
xor
out
dec
mov
sub
insb
jno
dec
adc
mov
cmp
or
xchg
divb
test
ds
stos
scas
jne
mov
mov
dec
pop
xor
and
call
in
and
push
jns
test
iret
fildll
lcall
out
rclb
mov
ljmp
notb
lret
lods
ret
imul
mov
mov
sub
mov
sbb
outsl
sbb
xchg
lods
jnp
xor
decl
das
and
xchg
std
out
push
insb
psraw
pusha
stc
or
dec
das
outsl
rclb
xchg
push
mov
mov
js
jmp
nop
and
ljmp
mov
mov
inc
std
adc
rcrb
adc
lock
jbe
and
or
jmp
and
adc
jmp
jmp
mov
aas
mov
mov
pop
cmp
aad
test
test
add
fcoml
bnd
jmp
sub
cmp
sti
cmpsb
inc
or
mov
push
inc
pop
mov
pushf
adc
pop
in
xchg
jnp
cli
or
daa
pushl
push
dec
cltd
dec
cltd
fs
jo
insl
and
inc
sbbb
adc
push
ret
jl
cmp
shr
or
roll
xchg
sub
daa
push
mov
mov
cmp
ret
fwait
push
sbb
sar
gs
and
xchg
call
pushl
or
gs
and
aam
std
mov
and
test
mov
loop
sub
jg
decl
shlb
test
fwait
hlt
les
les
sub
jl
fidivl
jmp
inc
jae
mov
loop
sub
mov
clc
fsubrs
es
xor
das
push
push
addr16
roll
call
push
fidivrl
mov
stos
and
dec
popa
mov
imul
mov
jle
in
xchg
or
mov
sahf
in
and
icebp
test
test
roll
jmp
sub
hlt
test
test
mov
call
call
pushf
mov
fcom
mov
inc
fbstp
into
pushf
lea
jmp
repnz
lahf
aaa
mov
xchg
push
pop
dec
inc
jne
push
push
lcall
pushf
test
jg
jl
fldt
inc
std
mov
mov
sub
adc
push
lcall
adc
addl
jp
cld
adc
pusha
add
mov
add
repnz
pushf
pop
incl
mov
lea
out
pop
clc
add
imul
or
push
call
movsl
push
dec
mov
or
cmp
add
sti
je
jge
jb
insl
movsb
fbstp
out
clc
pop
hlt
jo
cmp
out
jg
or
ret
add
in
cwtl
clc
mov
call
cmp
loop
enter
mov
movsb
fidivrs
mov
adc
dec
lds
add
mov
push
rclb
add
out
cli
mov
mov
xchg
icebp
sti
into
loopne
sub
ljmp
out
mov
movsb
or
mov
inc
test
fmul
inc
fadd
push
lock
ss
add
pop
stos
pop
ljmp
fcompl
xchg
out
jns
int
cmp
sbb
dec
outsb
mov
pushl
xchg
adc
pop
je
mov
and
ret
cmpsb
shl
push
sbb
dec
xchg
xchg
lahf
xchg
cmp
add
or
cwtl
mov
loop
ljmp
jno
xor
cmp
cmp
ss
dec
push
outsl
in
stc
out
repnz
ljmp
pop
jbe,pt
mov
xor
dec
xchg
cltd
xchg
stos
and
mov
mov
lock
das
mov
inc
scas
dec
iret
dec
sbbl
ret
dec
in
jg
jmp
jnp
xor
ljmp
jl
scas
cs
enter
cmp
adc
jne
or
ss
xchg
les
cltd
mov
les
xor
rcrl
xor
lock
call
jle
scas
push
xor
inc
jb
shrb
mov
xor
call
add
cmp
jo
in
and
or
and
sarb
cmc
mov
dec
jle
data16
ret
sbb
adc
inc
inc
push
aaa
ljmp
and
cli
lods
cmp
pusha
lock
mov
das
les
sub
mov
lret
push
mov
in
inc
sti
and
or
pop
sbb
repnz
fmul
rsm
cmp
pushl
mov
out
scas
cmp
jns
jle
invd
or
inc
hlt
lret
in
mov
xor
aaa
aas
aam
adcl
add
jmp
cmp
mov
mov
pop
insb
enter
dec
inc
stos
xchg
lock
pop
cmp
ljmp
testb
inc
jp
lods
xchg
mov
push
leave
adc
stos
sub
popa
out
stos
je
in
mov
add
bnd
mov
ror
pop
aam
ja
call
and
adc
push
xchg
or
imul
inc
mov
xchg
call
bound
js
call
adc
aad
sbb
push
rorl
jle
mov
sub
mov
clc
jae
mov
jg
xor
push
dec
add
lcall
lcall
shll
std
pop
shrl
mov
sbb
popf
mov
jg
ffreep
lock
jne
fidivs
out
das
pop
ljmp
lock
dec
fcmovnu
int
rcrl
cmp
push
mov
xchg
pushf
jg
loop
std
mov
clc
andb
xchg
sbb
sub
aad
mov
cld
call
sub
mov
sbb
outsb
inc
mov
push
in
ret
mov
jg
or
dec
adc
dec
scas
ja
ret
dec
iret
cmpsb
and
ljmp
mov
pop
jp
divl
jl
fstpl
in
outsl
push
mov
pop
xlat
lret
out
shrb
lock
clc
dec
sahf
data16
jo
sub
adcl
call
or
std
stc
adc
inc
lea
test
add
push
add
call
fildl
cmpsl
ljmp
ss
outsl
nop
icebp
fs
outsb
nop
cmp
aad
xor
push
cmp
and
mov
sub
adc
mov
stos
lds
aaa
mov
lds
inc
sbbb
aaa
pusha
outsl
cli
jmp
das
lret
or
push
shr
clc
loope
inc
jg
imul
add
xchg
lea
push
aad
cmp
mov
ficoms
mov
and
lret
int3
inc
inc
lcall
pop
cmp
mov
jg
inc
inc
das
xor
xorb
clc
js
mov
scas
jl
cli
ret
test
incl
push
mov
xchg
or
cmpsb
dec
repz
test
insb
imulb
cld
dec
lds
xor
fisubs
and
jp
add
xor
out
cmp
push
aas
cmpsb
mov
inc
in
repz
sahf
das
jb
imul
mov
stos
decl
mov
dec
arpl
sbbl
mov
lcall
mov
lds
aaa
xchg
iret
inc
lret
nop
mov
call
jle
jns
shl
xchg
clc
push
stc
inc
add
or
mov
sbb
lcall
or
insb
dec
dec
enter
push
cmp
inc
xor
dec
pushl
add
cmp
in
jb
pop
sub
dec
out
xchg
pop
push
ficomps
decl
js
test
iret
stos
jno
inc
je
xchg
jne
pop
fists
cmpsb
mov
dec
and
and
jmp
jae
jp
mov
jns
pop
and
and
call
lret
or
ljmp
jno
xor
adc
call
lcall
sub
gs
test
test
std
mov
lock
shlb
mov
mov
pop
push
and
addr16
cwtl
xchg
sbbl
pop
addr16
in
les
mov
push
pcmpeqb
mov
inc
pop
lods
mov
incl
push
arpl
les
dec
or
cwtl
rorl
jg
insl
mov
or
inc
test
mov
sahf
pop
add
ss
loope
lcall
inc
adcb
ss
shll
out
sub
inc
adc
add
dec
jne
in
popw
push
cmp
incl
xor
jl
sub
xor
loop
xor
push
and
xor
cld
lcall
outsb
loopne
push
pushf
int3
pop
xchg
cld
test
dec
fistl
push
pop
jg
jg
cld
sub
xorl
fdivs
pop
mov
enter
lcall
push
and
aad
test
mov
mov
pushl
mov
adc
mov
mov
test
lret
inc
push
mov
pop
and
jns
cmpsb
incl
adc
inc
jmp
outsb
cld
mov
mov
push
xor
cmp
inc
push
jg
cmpsl
cmpsb
rcrb
lea
jns
cmp
pushl
shl
out
push
pop
ja
cltd
sbb
jo
shr
incl
call
mov
sub
enter
icebp
cmp
xlat
cmp
ljmp
bound
incl
fbstp
xchg
in
cwtl
dec
adcl
call
mov
rol
add
jecxz
stos
or
sub
dec
mov
in
std
mov
xchg
and
in
sti
ffreep
xchg
inc
decb
adc
decl
mov
jne
iret
or
lock
aad
or
repz
call
addr16
cmp
loop
dec
mov
sbb
dec
inc
cmp
mov
jmp
fstp
adc
call
loop
xchg
push
loopne
sub
sbb
imul
dec
cmp
or
sub
cli
sub
gs
push
lret
mov
mov
sub
cmpsb
pop
scas
in
mov
jo
or
sar
fcomip
incl
inc
popf
lods
fucomi
dec
shlb
adc
call
scas
test
cmc
mov
cmp
test
fistps
dec
lock
dec
scas
xchg
scas
and
repz
jg
mov
test
cmp
jg
sbb
inc
arpl
rcll
lcall
ja
push
sub
and
or
adc
or
pop
or
cmp
fcomip
mov
sub
mov
mov
cmpsb
xor
lret
xchg
cli
clc
nop
je
ljmp
cmc
in
ret
lock
and
fildll
or
dec
mov
pushl
arpl
movsl
pusha
fsubs
nop
xor
push
dec
adc
push
pop
jle
push
notl
fcomip
lcall
imul
test
jg
and
pop
stos
sbb
pushl
lret
xchg
nop
pop
lahf
sti
mov
jmp
xor
pop
repz
gs
fidivrs
ds
lcall
ss
mov
dec
gs
popf
sbb
and
fs
loope
ljmp
sbbb
sti
loopne
pop
pop
rorl
test
jl
push
dec
mov
decl
jle
test
pushf
lahf
add
cmpsb
mov
push
inc
pop
daa
sbb
jae
stos
push
add
pop
loop
jle
stos
jle
arpl
leave
push
sub
call
mov
dec
pop
les
lahf
ljmp
xorb
test
mov
outsb
idivb
cmpsl
or
xchg
inc
add
cld
popf
mov
xor
pop
lret
out
cmpsb
stos
popa
add
js
dec
aad
jbe
repz
and
jmp
mov
mov
xor
cs
sbb
sbb
aad
shlb
mov
push
sahf
mov
pop
jb
push
sbbb
in
shll
xchg
scas
cld
jae
ds
decl
leave
fmull
jle
adc
rorb
shl
fs
lret
sub
mov
ss
mov
fisttps
sbb
stos
inc
mov
dec
ret
xchg
push
sub
or
ljmp
mov
push
scas
addb
jns
js
imul
xchg
mov
stc
cmp
out
mov
mov
xor
lahf
push
mov
xlat
mov
pushf
mov
pop
data16
xor
loopne
jmp
mov
dec
scas
nop
jns
repnz
add
push
fsubr
cmp
add
es
sbb
pop
mov
sti
rcl
insb
push
adc
sub
push
pop
sbbb
gs
call
xor
repnz
mov
xchg
lock
aad
ret
test
sbb
call
jp
push
xchg
jg
adc
jno
icebp
mov
mov
enter
fcmovb
in
loopne
inc
fadd
fldt
xor
push
out
adc
test
lret
xlat
dec
pop
test
out
sti
inc
sbb
decl
jnp
sti
das
cltd
adcl
jp
iret
fisubrl
insl
xor
ljmp
or
mov
aad
inc
gs
mov
ljmp
cmc
decl
jbe
mov
stc
ja
mov
sub
lret
ss
pushl
adc
fnop
sub
jb
adc
adc
std
shl
xchg
test
jle
fnsave
in
outsb
int3
lahf
mov
xchg
fidivs
fld
int
mov
dec
nop
sub
outsl
ljmp
adc
jo
mov
or
inc
jns
cs
xchg
xor
or
incl
mov
pop
enter
out
and
xchg
add
jg
add
xor
incl
int3
in
sub
or
dec
mov
mov
loope
push
mov
pop
xchg
into
loop
or
fldcw
xchg
fisttpll
adc
sub
pop
cli
sbb
jmp
dec
int3
xchg
sub
inc
hlt
cmp
push
aas
int3
and
decl
movsl
cmp
pop
mov
cld
adc
idivb
mov
leave
sbb
jge
or
inc
mov
jns
xor
pop
int3
imul
js
leave
dec
cld
aad
insl
inc
and
mov
ret
sbb
adc
ljmp
jg
ljmp
int3
js
inc
add
adc
mov
stos
cs
popf
push
sbb
cmp
das
mov
clc
xor
sub
loop
cmpsl
push
lcall
ljmp
mov
jbe
mov
dec
jne
mov
jmp
orl
mov
mov
jb
push
cmp
pusha
and
lcall
mov
inc
sub
aad
in
inc
scas
jo
sbb
pop
in
jl
inc
js
jns
mov
push
xlat
mov
add
pop
push
int3
mov
mov
sub
ljmp
lods
push
xor
iret
mov
or
sub
dec
inc
add
xor
add
repnz
pop
mov
pop
mov
sbb
add
or
cmp
push
hlt
cmp
es
inc
dec
fxch
mov
xchg
sub
pop
xor
inc
lods
mov
decl
pop
jg
js
mov
pop
nop
gs
cmp
ret
add
call
popf
cli
mov
in
lds
adc
imul
jb
push
pusha
adc
and
pushl
inc
test
ljmp
mov
cmp
loope,pt
sub
mov
outsl
or
mov
jg
mov
and
mov
int
leave
inc
jno
xchg
clc
ljmp
sub
ror
sub
pop
mov
add
or
mov
sahf
ljmp
jl
idivb
inc
xchg
daa
mov
jae
lea
jmp
push
cmpsl
xchg
ficompl
iret
cmpb
mov
pop
xor
mov
ljmp
jmp
push
aam
aam
stos
jge
out
ja
push
mov
mov
mov
mov
pushl
cs
dec
jmp
sahf
dec
mov
cld
jb
adc
or
ret
lods
jg
pop
mov
cmp
push
in
ret
mov
out
push
inc
cltd
lret
xchg
dec
xor
push
scas
and
insl
push
call
call
inc
ja
shll
scas
sub
nop
std
and
push
sar
push
ja
jp
into
stos
je
bound
cmp
mov
icebp
pop
cwtl
xor
mov
test
xchg
mov
ljmp
jb
inc
aaa
scas
or
sub
sub
ret
fwait
pop
pop
sub
aam
pushf
push
fs
jmp
into
insb
fnstcw
sbb
enter
ljmp
les
cs
sti
add
decl
enter
or
fnstcw
ds
jl
cmp
mov
sar
ljmp
ss
mov
ficomps
jno
fnstsw
xchg
adc
sub
sbb
aaa
inc
pusha
adc
xchg
inc
sub
into
xor
hlt
sub
fcmovnb
movsl
or
clc
aaa
push
fs
call
and
stos
add
push
pushf
into
sub
cwtl
sarb
push
mov
add
fcmovbe
mov
cs
cmp
sbb
add
ljmp
xor
fisttps
and
cld
mov
sub
dec
and
lods
sbb
jmp
push
rol
push
mov
stos
enter
adc
add
ljmp
mov
fdivrl
jbe
inc
xchg
movsl
jecxz
decl
mov
push
sub
ss
adc
fcomps
pop
add
insl
pushf
mov
xchg
fldt
int
fsubrl
scas
insb
dec
adc
scas
xor
cs
std
paddusw
incl
fistps
fnstenv
repz
adc
mov
sbbb
decl
sarl
and
sub
ffreep
inc
xchg
fwait
mov
sahf
test
sbb
sbb
cmpsb
jmp
cltd
mov
addr16
pop
ds
pop
cwtl
pop
mov
decl
clc
sahf
mov
insb
xchg
call
mov
lds
ljmp
lock
push
mov
or
ja
out
add
loopne
sti
add
cld
jg
sub
pushf
faddp
push
fstl
xchg
mov
mov
xor
push
repz
nop
arpl
pop
mull
ja
cmp
js
jle
incl
inc
lret
inc
sub
loopne
pop
cmp
push
add
dec
sub
mov
jnp
push
cmp
idiv
jle
test
inc
mov
dec
data16
pop
push
lcall
or
rcrb
mov
mov
sbb
jnp
push
cmp
movsl
in
sbb
aaa
jp
sti
loopne
cwtl
inc
pop
cmpsl
mov
jmp
xchg
cmp
jb
mov
jno
pop
je
sub
xor
icebp
scas
enter
lock
decl
xchg
and
int3
xchg
and
call
int
inc
stos
xor
scas
clc
or
xchg
lret
pushf
pop
insb
sbb
push
push
jbe
jae
ljmp
mov
clc
pop
bound
in
dec
les
fs
and
jl
jb
mov
jbe
std
mov
fcomip
fadds
mov
mov
mov
xor
inc
adc
sbb
daa
and
daa
les
jge
cmpsb
and
pop
cmpsb
xlat
pop
test
addr16
lcall
jne
sbb
arpl
pop
sbb
fists
loopne
mov
por
and
mov
push
cmp
cmp
cmp
cli
popa
sub
xchg
inc
inc
xorb
cld
lret
mov
xchg
out
push
inc
incl
rol
aas
loop
mov
add
int3
inc
adc
int
or
jg
pushl
leave
addl
mov
xchg
outsl
movsl
insb
mov
lcall
out
pop
pusha
aam
mov
dec
xchg
jae
sub
push
or
mov
imul
adcb
aam
or
cmp
cmpl
dec
sbb
and
jecxz
add
add
adc
mov
adc
sub
add
mov
or
mov
and
enter
pop
call
pop
xor
add
mov
sub
stos
mov
cmpsb
cmp
dec
insl
or
sti
fs
arpl
mov
xchg
cmp
push
int3
lret
dec
xor
sti
loop
adc
shr
mov
dec
or
mov
mov
cld
push
dec
addl
mov
ljmp
push
pop
or
aaa
dec
int3
psubusw
and
inc
shr
into
mov
and
out
iret
decl
adc
addr16
mov
dec
cld
popa
in
jbe
mov
mov
ds
in
jge
pop
fstps
cltd
pop
adc
pop
inc
int3
pop
insl
in
inc
sarb
gs
and
pushl
dec
les
xchg
jnp
pop
rol
pop
sahf
enter
incl
sub
or
movsb
and
test
inc
pop
pop
xor
neg
mov
jae
cmc
jbe
sbb
xor
sub
div
inc
sarl
cmp
add
pop
lods
jo
pop
sub
imul
lock
pop
mov
jmp
inc
xchg
cmp
cwtl
push
dec
insl
mov
or
aad
icebp
sbb
sub
and
ljmp
jle
and
or
pop
nop
ror
cmpsb
and
dec
jl
mov
imul
lcall
push
sub
lret
jg
mov
ret
dec
aam
jp
dec
and
add
sub
mov
or
add
and
repnz
jl
xchg
mov
clc
push
ljmp
shlb
adc
mov
divl
add
inc
outsb
dec
ljmp
imul
add
jp
ja
xor
sbb
jae
call
lea
idivl
clc
sbb
xor
or
jl
sub
inc
adc
call
sbb
icebp
xchg
adc
cmc
push
ljmp
dec
shlb
fcomps
cmp
or
cmp
out
lea
adc
adc
pop
xor
orl
loopne
fildll
xor
pushf
cmp
inc
sub
data16
fadds
daa
andl
dec
cmpsb
ja
arpl
jge
sbb
mov
pop
scas
cmp
rcrb
fdivs
inc
mov
subb
stc
es
out
clc
incl
pop
rcrb
ljmp
push
pusha
ret
jns
and
std
test
int3
mov
loop
aad
sbb
enter
mov
cmp
cmc
sub
ljmp
xchg
imul
mov
xor
add
mov
add
push
out
les
mov
dec
in
fwait
rcl
sbb
test
sub
dec
pop
aaa
lahf
xor
jmp
push
bound
cs
inc
add
ja
inc
mov
mov
mov
dec
ja
mov
jns
adc
jl
fimuls
pop
xchg
jg
cmp
ljmp
lahf
sbb
and
add
pop
popa
mov
fsubrs
xchg
dec
push
adc
fs
loope
test
ds
push
je
mov
mov
pushf
repz
dec
imul
cwtl
ja
ficomps
outsl
jecxz
jnp
add
das
cmp
jle
in
movsl
lock
pop
pop
xchg
mov
fsubrl
mov
pushl
mov
shrl
add
subl
inc
jp
mov
ds
call
popf
cmp
lcall
sahf
rcrl
add
movsl
pop
call
ret
rol
mov
clc
lods
gs
jmp
pop
cmc
loope
pop
ja
ja
jnp
push
fucomi
mov
fistps
mov
out
loope
jg
and
xchg
out
push
pop
jecxz
fnstenv
inc
xor
pop
clc
jg
mov
xor
les
xchg
mov
das
insb
cld
mov
popl
popf
dec
je
into
jle
jne
outsl
sbb
jg
dec
push
pop
jne
fmuls
lock
loope
outsb
jno
fistpl
xchg
arpl
pop
push
or
inc
imul
hlt
mov
lret
cmc
or
push
inc
nop
ret
inc
fnstcw
inc
or
and
dec
xchg
ljmp
push
and
dec
jl
cmp
mov
mov
loopne
je
pop
aaa
rcl
and
jmp
mov
call
and
push
jnp
fs
inc
xchg
jp
orl
mov
jle
jmp
js
pop
mov
fiadds
jle
xor
push
add
sbb
pop
xchg
test
repnz
mov
fisttpll
es
rorb
fildl
mov
mov
clc
lcall
ret
mov
mov
aam
xchg
into
mov
and
ljmp
mov
fiaddl
rolb
cli
sar
jmp
adc
movsb
pop
pop
popf
adc
sbb
jbe
xor
pusha
cwtl
addr16
jg
cmp
mov
push
das
pop
push
lods
cmp
jl
cmp
test
int3
xor
push
mov
jae
pop
loope
mov
jne
and
rorb
sub
incl
push
pop
push
and
mov
lods
aam
sub
push
push
inc
cld
rcrl
jecxz
mov
fcmovnu
cmpsb
rolb
popf
push
loopne
lcall
lret
and
lcall
add
das
imul
inc
bound
out
pop
outsb
loop
fs
mov
sbbl
mov
lods
push
pushf
ret
push
pop
jmp
sbb
adc
inc
nop
test
ret
xorb
xor
ljmp
or
xchg
xchg
aaa
cwtl
inc
cwtl
adc
xor
decl
push
pop
inc
test
jo
out
stos
xor
xor
adc
cmc
out
fs
aaa
mov
adc
test
jg
movl
repz
fsubp
sub
xor
ljmp
pop
dec
or
insl
or
fldcw
daa
mov
add
imul
xor
adc
hlt
inc
push
gs
icebp
cmc
cs
mov
std
decl
dec
movsb
sbb
and
outsl
mov
in
ds
mov
decl
xorb
inc
xor
sti
push
sub
jmp
mov
ljmp
popl
scas
jmp
mov
inc
xchg
cltd
clc
xor
mov
adc
fcomi
jno
in
cltd
cld
mov
mov
and
inc
imul
in
xchg
cmpsl
cmp
incl
lcall
mov
and
or
mov
out
mov
inc
xchg
push
xor
jb
lahf
call
jg
or
jnp
stc
sti
jnp
lret
and
lahf
mov
lds
mov
push
out
mov
or
mov
incl
fnstenv
out
adc
sub
push
cmpb
out
aas
movl
ljmp
fcomp
hlt
push
jecxz
add
inc
pop
cli
cli
adc
enter
fildl
push
xrelease
jmp
std
jl
push
movsl
ror
mov
fnstenv
xchg
jae
jnp
fidivl
loope
lcall
and
test
mov
xor
int
ljmp
mov
sbb
push
mov
jl
inc
inc
mov
fcomip
ljmp
cmp
loopne
outsl
mov
dec
jo
and
dec
jnp
mulb
or
jne
call
bnd
stos
aaa
sub
push
xor
sub
ss
pop
lea
sbb
jmp
adc
insb
lods
xor
and
mov
or
add
xchg
dec
xchg
sub
cmp
out
inc
imul
loopne
pop
pop
dec
xchg
lods
or
loop
je
sub
cwtl
jge
mov
decl
sub
hlt
imulb
push
out
and
push
push
cmp
jns
enter
xstore-rng
cmpsl
add
std
decl
push
sbb
mov
ljmp
sar
enter
mov
aaa
dec
cld
das
and
inc
adc
cmp
clc
stc
je
add
enter
cmp
rolb
jl
call
movl
fisttpl
in
fs
jmp
rol
loopne
cmp
sub
lods
pusha
cmp
decl
jmp
cmp
bound
dec
incb
jo
out
daa
mov
pushl
in
pop
sbb
test
stos
sti
rcl
pop
adc
push
xor
ljmp
sbb
or
aas
sbb
data16
xor
sub
dec
xor
ficoml
push
pop
lock
and
fcomip
sbb
into
cmp
mov
jns
jge
sbb
mov
notb
int
jbe
incl
xchg
jle
jle
mov
leave
push
and
bnd
fisubrl
jmp
jg
add
mov
call
jg
sub
int3
pop
pop
in
insl
sbb
xor
push
pop
popf
rolb
or
push
xchg
sahf
mov
or
inc
fdivrs
add
add
sub
or
xor
mov
jp
ficomps
cld
rcrb
add
push
xor
sbb
incl
push
xchg
divb
incb
sahf
or
mov
xor
mov
sub
dec
ss
jmp
jnp
loop
decl
mov
fstl
lret
and
mov
jo
add
push
iret
cmp
jnp
std
aad
sbb
jno
inc
jae
mov
das
mov
push
cltd
je
pop
pop
rolb
adc
mov
pushl
cltd
insl
sti
loop
jbe
enter
cmpsl
adc
call
xchg
add
das
sahf
inc
dec
inc
mov
aam
incl
cli
add
mov
loopne
stos
xchg
xchg
sbb
stos
cmp
sbb
push
mov
cs
clc
rcrl
sub
or
lcall
cmpsb
sbb
or
push
xor
push
ljmp
jg
incl
fldenv
iret
jno
sub
movsl
sbb
xchg
shr
jns
ficompl
scas
fwait
cmc
in
lods
std
dec
clc
jmp
xor
lea
push
jmp
adc
call
xchg
xor
into
and
sub
daa
dec
push
repnz
test
incl
push
push
push
push
or
xchg
cmp
stos
outsl
add
mov
call
mov
movsb
adc
addr16
mov
dec
jns
xor
loop
or
lcall
fildl
movsl
movsl
cwtl
mov
mov
rorl
outsl
fistpll
fcomps
dec
inc
cltd
sarl
mov
stc
push
or
jae
rorb
push
add
das
decl
lock
fldl
xchg
call
ficompl
or
mov
cmp
xor
xor
dec
sbb
pop
rcr
jae
orb
mov
and
decl
int
add
mov
imul
xchg
fwait
and
pop
je
ret
movsb
inc
test
fnstenv
mov
lahf
cmp
cmp
incl
add
popa
incl
sarl
sbb
jnp
stos
mov
and
js
dec
fnsave
jnp
nop
pop
or
lds
je
push
stc
cmp
adc
mov
adc
ret
xor
jg
jmp
add
insl
xchg
or
xor
jle
xor
enter
pop
xchg
push
iret
jmp
mov
xor
lds
inc
or
mov
sub
sbb
ljmp
xor
into
cli
jmp
test
jle
jne
adc
loop
xchg
push
push
fwait
roll
fwait
xchg
neg
add
cli
push
adc
ret
decl
in
dec
lock
pop
mov
inc
jp
inc
sub
daa
daa
ficomps
sub
aad
adc
lcall
das
inc
cs
stos
cmpsl
daa
sbb
and
shrl
ret
sahf
xchg
pushl
stc
int
mov
aas
loopne
test
xlat
xlat
cmc
sar
stos
mov
vpmaxsb
pop
sahf
lret
push
jg
decl
movsl
sub
sub
dec
mov
aam
mov
cld
jmp
out
out
xor
lods
loopne
push
jg
stos
push
insl
in
test
or
jbe
and
fbstp
inc
in
mov
xor
inc
mov
lea
push
lret
adc
jmp
cmp
icebp
rorl
adc
lcall
sub
pusha
into
clc
xor
pushl
ret
movsb
cli
lds
dec
jp
dec
insb
mov
inc
call
cli
out
mov
push
mov
mov
idivl
fisubs
add
xchg
mov
in
je,pt
add
jnp
cmpsl
repnz
dec
adc
repz
pushf
mov
fcomip
pushl
sub
mov
cmp
or
mov
push
ljmp
cmc
call
jb
insl
fcomps
gs
pop
adc
aam
push
fdivrl
decl
sub
xchg
cmp
sub
push
and
mov
pushl
sbb
sbb
mov
sub
jb
inc
fst
add
outsb
mov
fs
mov
call
add
rcr
cmp
ljmp
loopne
mov
fwait
loope
pushl
leave
mov
xchg
xchg
js
insb
mov
dec
arpl
js
cltd
rclb
ljmp
jne
sti
in
lods
jns
add
mov
repnz
sbb
incl
ret
mov
cmp
add
cmp
adc
je
inc
arpl
and
cmpsb
ljmp
mov
jp
pushf
cs
enter
sub
fsubr
sarb
lock
ljmp
mov
jle
popf
sbb
scas
je
sti
ljmp
out
mov
dec
cltd
lock
movsb
fstpl
aas
les
movsl
lods
push
aas
ret
xchg
ljmp
mov
lcall
jo
fnstenv
in
dec
push
mov
enter
loop
inc
aad
out
inc
xchg
sbb
idivb
arpl
jle
mov
lds
testl
out
mov
sbb
cmp
inc
mov
push
scas
aam
pop
xor
cmpsb
pop
jge
imul
in
pop
push
decl
lea
pushf
mov
les
shrb
lahf
inc
sub
in
stos
decl
adc
mov
lock
xchg
lods
cmp
cmpsl
push
lock
ljmp
ret
push
xor
jl
rolb
mov
mull
mov
lcall
push
mov
test
or
mov
sarl
jmp
movsb
push
adc
scas
push
insb
test
mov
xor
xchg
jae
ja
mov
cmp
in
cmp
mov
dec
pop
jg
sub
stos
and
sbb
daa
dec
and
jmp
xor
and
adc
sub
shll
add
idiv
mov
add
popa
push
stc
notl
pop
jmp
std
pushf
xchg
repnz
incl
mov
sbb
subb
imul
std
loop
out
jg
or
xchg
test
loop
fsubl
push
cmp
pop
movsbl
xchg
xlat
iret
jp
add
pop
xor
jge
jg
jae,pn
lcall
push
adc
fistl
imul
daa
rol
dec
jl
jp
call
adc
decl
add
lods
loope
add
mov
xor
aad
call
inc
xchg
inc
leave
sub
or
xor
mov
mov
ds
sub
popf
push
dec
pop
incl
mov
clc
pop
mov
jg
jmp
popf
fnstcw
shlb
out
xor
sbb
xor
push
adc
inc
lcall
xchg
loop
jp
and
pop
or
inc
jne
pop
out
add
ss
out
push
push
add
dec
or
pop
jns
cmp
loopne
mov
mov
push
xchg
sub
xchg
xor
call
push
mov
mov
fwait
or
jno
andb
push
jl
fcoml
xchg
inc
xchg
and
sub
ja
xchg
repz
add
xor
mov
call
std
mov
leave
cwtl
cmp
ja
or
push
jmp
xor
fucom
repz
pushl
jmp
push
push
inc
adc
addb
mov
sbb
sub
and
cmp
xor
and
add
dec
into
insb
loop
jo
and
lret
mov
scas
push
inc
sahf
aad
cmpsb
sbb
xchg
dec
push
xor
and
or
mov
pop
sub
pop
adc
push
cmp
sbb
lcall
cmp
out
lret
clc
ljmp
jnp
pop
cmp
sbb
fsubs
jne
xor
andl
rcl
std
sahf
aad
pop
fldpi
divl
lret
rorl
int3
mov
dec
or
cltd
aam
push
inc
icebp
jl
test
inc
pop
mov
cld
xchg
into
mov
incl
mov
subl
out
aam
out
lock
std
ljmp
nop
pop
xor
jne
add
adc
push
pop
fs
pop
adc
shrb
adc
pop
mov
mov
dec
cmp
and
dec
icebp
cs
mov
ja
les
mov
pop
dec
push
gs
push
fdivrl
pop
cmp
xchg
inc
cmpb
mov
enter
sbb
cld
ja
les
mov
xor
incl
ja
das
aad
sub
adc
mov
icebp
sbb
pushl
push
jae
ja
test
popa
add
jae
out
enter
pop
clc
ret
cli
fildl
mov
push
shlb
sub
xor
dec
inc
mov
inc
int3
scas
shll
push
mov
scas
and
je
out
aad
xchg
pop
sbb
sub
decl
leave
ljmp
push
sub
pop
push
out
or
xorl
mov
clc
and
les
sar
sbb
mov
mov
in
mov
sbb
cwtl
loop
add
movsb
out
pop
aam
std
jle
jl
icebp
fsubrs
clc
add
fs
sahf
xchg
js
stos
mov
inc
imul
aas
push
xor
mov
or
dec
call
mov
sub
clc
sbb
notl
ds
cltd
aaa
pop
incl
dec
xchg
adc
scas
cmpsl
pop
inc
mov
pusha
aam
mov
pop
call
nop
sahf
sbb
outsl
shrb
cli
mov
cli
xchg
loopne
jnp
cmpsl
sti
cmp
cltd
dec
fsubl
mov
iret
fs
in
jp
fsubr
stos
mov
xchg
lds
subl
cmp
and
push
add
adc
js
jb
cmp
and
fcoms
incl
sbb
data16
jnp
sub
data16
push
add
dec
addr16
arpl
decl
mov
loopne
test
dec
inc
fdiv
and
xchg
mov
insb
push
push
mov
push
mov
clc
jl
test
push
out
popa
inc
adc
xchg
stos
into
mov
incl
ljmp
clc
in
jno
or
or
lods
pop
cmp
jmp
xchg
adc
ljmp
fidivs
pop
ljmp
or
push
push
push
fcmovb
or
push
mov
sub
inc
jp
mov
mov
outsl
stc
les
dec
cmp
mov
loop
cs
inc
xchg
push
cmp
insb
in
ljmp
xor
sahf
dec
lea
adc
mov
test
fimuls
fwait
inc
loop
jo
fdivs
mov
sub
popa
cmp
dec
cld
loope
push
push
push
movsl
push
leave
xchg
jae
aam
xchg
xlat
out
clc
lcall
adc
out
hlt
cmp
movsb
insl
fmull
push
or
push
add
mov
sarl
pop
test
incl
sub
fisubs
fisubs
adc
or
shl
and
cmp
adc
sbb
scas
push
pop
movsl
dec
ret
jg
decl
loope
sub
les
arpl
notb
rcrb
loope
pushl
adc
lahf
lret
and
pop
sub
add
movsb
jo
shlb
xor
in
lcall
lods
pusha
js
sub
xor
out
mov
pop
sar
adc
pushf
mov
test
adc
imul
dec
add
ja
decl
mov
leave
insb
inc
rclb
cmp
ss
add
and
stos
add
mov
leave
dec
adc
pop
jb
push
ds
inc
arpl
cmp
sub
or
jno
adc
jp
jae
scas
mov
push
dec
dec
popf
jle
xor
jne
push
fwait
daa
aaa
jns
push
popf
sbb
icebp
incl
outsb
cmpsb
pop
dec
aad
mov
jecxz
rclb
cmp
dec
adc
lret
and
cli
xor
idiv
scas
call
sub
pop
mov
daa
push
or
das
in
dec
mov
iret
out
idiv
mov
pusha
ss
push
cmp
push
out
cmp
dec
mov
mov
fwait
out
adc
test
testl
sti
adc
adc
fldenv
mov
lods
sbb
movsb
mov
das
sub
nop
dec
aaa
lcall
call
and
shlb
mov
or
movsb
dec
dec
test
xlat
inc
push
stos
push
shrb
inc
mulb
xchg
jmp
sbb
lods
sarl
adc
js
vpsubd
mov
sar
or
stos
inc
push
fcomi
int
test
outsl
add
and
sbb
xchg
mov
repz
cli
sti
clc
jmp
into
and
cmpsb
repnz
mov
push
fstenv
mov
orps
stos
or
out
ds
mov
pop
jecxz
cmc
hlt
push
data16
xlat
sbb
fadds
xchg
dec
fsub
push
cmp
jnp
inc
pop
mov
sti
sti
lea
adc
das
cli
push
adc
mov
cli
mov
ja
test
and
pusha
dec
in
cmp
cld
or
xorl
mov
lea
insb
std
mov
mov
outsb
adc
jb
dec
and
xor
cli
int3
push
adc
mov
push
push
aaa
test
cmpb
popf
sub
mov
loopne
pushl
mov
fsubs
imul
mov
mov
insl
mov
jmp
push
or
sub
mov
mov
cmp
std
mov
enter
ljmp
cli
les
and
scas
jbe
push
pushf
pop
fisubrl
sarl
jne
ss
xchg
sti
xor
jmp
outsl
sub
xorl
mulb
cmp
notb
jo
mov
mov
dec
mov
mov
in
jmp
xchg
lods
dec
jp
rorb
push
xor
stos
mov
aas
sar
cld
mov
js
mov
push
push
jnp
outsb
ds
push
dec
pop
loop
out
xor
pushf
xchg
scas
xchg
xchg
fucom
fsubrs
jmp
mov
mov
jo
sub
jne
fwait
pop
orb
pop
mov
inc
xchg
subl
push
jecxz
add
test
shlb
push
mov
adc
stos
sbb
popf
push
push
hlt
cmpsb
xor
scas
test
mov
pushf
jg
stos
push
test
movl
out
jg
mov
sbb
test
jmp
gs
mov
mov
ret
into
dec
pop
lods
jo
or
ljmp
int3
imul
gs
fistps
out
mov
adc
std
jmp
sub
sahf
out
push
arpl
stc
loopne
xor
outsl
dec
dec
in
rcrb
cmp
jg
lcall
jle
jg
push
jle
mov
hlt
add
inc
push
add
jmp
lcall
mov
mov
add
imul
lock
int3
ds
jmp
popf
imull
dec
rolb
in
roll
idivb
inc
and
movsl
cmp
pushl
repnz
or
or
aam
lea
test
out
fwait
or
inc
mov
addr16
mov
cltd
jle
lahf
in
setbe
push
fisubrs
push
mov
insl
mov
out
lcall
xor
jmp
inc
sti
xchg
dec
shll
outsl
sbb
adc
push
lret
outsl
decl
and
xor
inc
pop
sbb
pop
sbb
aas
mov
mov
pushl
mov
xchg
cmp
nop
bound
pop
dec
cmp
jmp
in
ljmp
xchg
shr
sbb
ret
inc
mov
dec
clc
lcall
cmp
xor
js,pt
orb
call
push
icebp
ja
rol
in
cld
sbb
ds
scas
mov
push
pop
loopne
xchg
cltd
sub
mov
adc
leave
adc
decl
sbb
push
stc
jb
mov
clc
ljmp
je
ljmp
movsl
aad
or
sbb
popa
dec
incl
rcll
lret
repz
xor
shr
and
decl
mov
lock
rclb
cld
lret
add
pushf
fs
lods
cld
xchg
pop
mov
pop
jne
dec
xchg
xor
push
inc
sahf
repnz
dec
jl
lcall
pusha
mov
fdivl
push
mov
decl
push
cli
and
imul
ljmp
out
xor
rcr
cs
clc
incl
push
shlb
test
in
out
push
add
push
or
sub
rol
pop
mov
add
xchg
jmp
pusha
out
mov
mov
fwait
pushf
mov
lods
pop
enter
lahf
ljmp
lods
loope
out
test
out
loopne
leave
repnz
movsl
loop
pop
inc
sarl
lcall
cli
ja
pop
push
pop
jnp
call
dec
push
adc
cmp
fwait
inc
push
xor
stos
dec
loop
fdivrl
cmp
mov
in
mov
mov
jmp
ja
push
aaa
jge
jo
outsl
aam
xchg
pop
push
clc
ljmp
and
cltd
rclb
ret
cmp
xchg
cli
lahf
jmp
repz
insl
lret
or
imul
mov
andl
push
pop
mov
or
push
add
pushf
daa
dec
or
lahf
les
pushl
daa
repnz
push
pop
xlat
ja
addr16
mov
mov
loope
ret
inc
xor
xchg
mov
sar
iret
out
incl
mov
mov
subb
bound
data16
sbb
jg
push
sub
sub
pop
sub
mov
mov
and
sbb
ret
js
mov
sbb
aad
jae
fs
mov
mov
insb
push
pushl
push
iret
cmp
pop
in
adcl
mov
cmp
pop
iret
in
xchg
scas
loopne
lods
imul
mov
mov
sbb
cld
and
outsb
dec
sbb
addr16
loopne
js
popf
push
ret
call
ljmp
decl
sub
adc
rcr
lret
mov
jae
xchg
or
call
std
enter
jl
add
hlt
xlat
insl
inc
jno
pusha
sub
imul
pop
clc
and
dec
scas
fucomi
mov
inc
cvtps2pd
out
cli
and
into
aad
incb
push
or
gs
test
cld
ljmp
sti
pop
pop
xor
mov
shll
bound
lret
call
or
imul
dec
mov
loop
aad
fld
fucom
pop
mov
add
sahf
stos
jecxz
fldl
call
pushf
xor
test
and
outsb
sbb
incl
aad
jo
pop
mov
xor
aad
or
lcall
loope
mov
inc
stos
jmp
sti
cmp
nop
mov
pop
mov
call
in
mov
test
sub
arpl
push
cwtl
bnd
and
rcrb
add
lock
pop
sub
mov
lcall
sahf
adc
cmpl
pop
mov
sahf
imul
sbb
mov
push
mov
push
and
jns
out
lret
xchg
cli
outsl
xchg
mov
ret
lds
das
xor
shr
mov
mov
ss
or
adc
in
push
jmp
in
pop
mov
mov
cltd
jp
hlt
mov
das
push
dec
out
push
lret
push
testl
ljmp
lods
cmp
popa
xchg
and
js
pop
leave
shll
and
aad
xor
pop
iret
in
stos
das
loop
jmp
push
jbe
push
add
cmp
cmc
ja
sbbl
adc
cmpsb
out
out
cmp
jb
cli
jb
fldenv
mov
sub
ret
outsl
clc
incl
popl
pushf
pop
fcompl
or
lock
jg
out
jmp
or
in
or
xor
add
mov
push
insl
add
js
fbld
fwait
push
pop
mov
je
xlat
jge
pushf
sbb
pop
dec
das
pop
mov
int
test
out
daa
fisttps
mov
dec
and
sti
into
dec
mov
jle
mov
pushaw
test
scas
clc
inc
mov
sub
and
movsb
xor
adc
add
jns
incl
js
dec
dec
inc
popa
cmpsb
push
fidivl
mov
jg
lret
xchg
dec
pop
xchg
mov
mov
in
das
outsl
stc
fwait
cmpsb
dec
shlb
ljmp
pop
mov
dec
xor
jbe
outsb
jno
int3
pop
sub
incb
out
clc
pushl
int
js
insl
mov
add
ret
dec
sub
loopne
push
je
clc
pop
hlt
dec
in
stos
shr
loop
jmp
testl
dec
inc
push
daa
jo
mull
repnz
ficomps
dec
test
mov
cmp
or
in
incl
out
fcoml
xor
stc
ja
loop
inc
dec
test
lcall
mov
mov
sbb
cmp
addr16
mov
scas
loope
fcomps
std
or
int
jbe
xchg
dec
decl
jno
cmpsb
jo
xor
pusha
mov
or
xchg
ret
jns
mov
in
or
or
inc
idivl
lea
jmp
push
hlt
test
ds
mov
outsb
cwtl
jg
js
movsb
add
insl
pop
jecxz
adc
cmp
incl
call
cmc
loopne
cmpsb
xchg
fimuls
in
pop
aas
bound
rorb
insl
icebp
pop
pop
pop
lcall
test
das
xor
jb
push
sub
daa
lock
test
pushf
or
xor
push
cmp
mov
adc
sbb
xlat
or
mov
pop
into
call
sub
add
cltd
pop
dec
push
mov
in
decl
leave
pushf
sbb
sub
cmpxchg
adc
call
inc
fldenv
jmp
andb
cmc
mov
push
lock
std
dec
insl
sub
aad
aaa
xchg
fcoml
adc
xchg
adc
mov
jns
loopne
in
pushf
add
test
push
mov
inc
das
in
in
dec
ret
loopne
inc
xor
push
cld
fnsave
test
jg
lret
repnz
add
dec
ljmp
fdivr
mov
lds
stos
mov
or
decl
cmp
or
mov
in
shrb
shld
mov
jne
ffreep
out
mov
rcr
rorl
adc
xacquire
push
test
inc
jp
stc
hlt
ja
sbb
mov
and
or
cmpsl
addr16
and
inc
inc
inc
out
inc
decl
arpl
mov
mov
mov
or
jl
jns
xchg
addl
js
decl
push
into
stos
cmpsl
jns
test
mov
or
inc
cmp
mov
sub
call
std
add
cmp
clc
test
les
xor
mov
stos
ljmp
cld
inc
je
test
lods
sub
jmp
out
xchg
sub
in
jl
gs
incl
cmpsb
sub
fisubs
mov
mov
adc
cltd
inc
xor
call
in
mov
xchg
clc
into
jne
cmp
je
insl
js
cmp
mov
ljmp
cwtl
aas
pop
fstl
inc
in
add
je
push
fistpll
in
stos
jns
ljmp
jle
jg
or
lahf
jle
enter
jae
cmc
push
and
sti
out
ljmp
sub
int
xor
sub
test
stos
ljmp
pop
in
mov
ja
mov
jnp
push
jmp
xchg
je
daa
cmp
pushl
outsl
out
inc
into
out
adc
cmpsl
adc
dec
xor
mov
in
jg
mov
inc
insb
sub
das
xor
mov
bound
lods
pop
xorb
jns
addr16
ss
add
adc
lcall
out
sbb
fidivrl
fucomi
mov
lcall
pop
pop
adc
xchg
pop
push
movsl
and
inc
in
ja
cmp
in
imul
push
and
mov
stos
fmull
stos
in
lret
fbstp
cld
xlat
mov
xor
xor
add
call
dec
shlb
insl
stos
dec
sub
test
and
push
xchg
jbe
cmp
cmpsl
inc
jg
popf
loope
movsl
inc
insl
call
fsubrl
xchg
js
cmpsl
js
adc
sbb
pushl
lcall
loope
out
or
add
add
in
inc
imulb
roll
into
push
dec
xor
sarl
rcll
nop
lahf
jg
sub
test
xchg
pop
pop
js
jmp
lcall
jae
stos
add
stc
pop
js
pop
mov
les
mov
repz
mov
xor
loope
call
sub
hlt
test
or
pusha
cli
dec
xchg
push
sub
mov
dec
out
es
insb
int
cmp
or
ja
cmp
ljmp
add
mov
ss
or
mov
cmp
jmp
in
and
xchg
push
incl
aaa
out
or
pop
mov
push
shr
lret
call
pop
sub
ljmp
arpl
push
popf
pop
jns
enter
clc
pusha
xchg
loopne
sub
xchg
dec
dec
loop
or
in
and
jle
xchg
mov
roll
pushl
jmp
jnp
rolb
push
mov
xor
mov
and
mov
ror
jns
mov
inc
jmp
adc
push
pop
lods
add
adc
ljmp
adc
mov
sub
inc
xchg
cmpsl
je
cmp
sub
pop
inc
jno
cwtl
sbb
sbb
xor
dec
xor
fisttpl
push
sti
orb
mov
out
js
xor
lds
add
sarb
imul
subl
std
fsubrs
aaa
fiaddl
jo
pop
dec
mov
pusha
cwtl
scas
mov
mov
cmp
pop
inc
ljmp
and
scas
mov
das
inc
sbb
jno
shl
cmc
pop
inc
dec
neg
call
std
inc
jns
pop
or
sub
lock
das
mov
mov
fstl
jnp
mov
push
fildl
je
inc
pop
decl
scas
and
dec
mov
ret
or
gs
mov
cmc
outsb
adc
scas
decl
push
ret
jb
jae
dec
sbb
mov
fs
popa
cld
pop
inc
or
outsb
add
inc
inc
fwait
lcall
outsb
or
xlat
dec
jle
mov
push
ljmp
stc
xchg
jmp
data16
stc
in
sub
cmpsb
loopne
imul
push
and
call
inc
jne
sub
inc
pop
js
sbb
and
push
dec
mov
fiadds
or
pop
cmp
fs
movsl
arpl
fwait
mov
mov
jg
fcomip
mov
jl
hlt
push
inc
in
lahf
sbb
cmpsb
pop
fisubs
cmpsl
mov
call
out
mov
insl
inc
inc
vunpckhpd
cmp
scas
mov
and
bound
stos
inc
test
clc
sbb
cld
fadd
xor
jg
sub
incl
push
stos
out
das
jl
jecxz
movsl
adc
jns
cmp
decl
gs
push
jo
cmp
and
cli
xchg
pop
inc
mov
fdivrs
test
cli
incl
and
mov
sbb
sub
cli
and
jmp
pop
sar
mov
ljmp
sbb
sbb
mov
std
inc
std
pop
sbb
pop
pop
mov
nop
movb
out
adc
rcll
mov
adc
or
mov
inc
incl
data16
cmpsl
ja
call
add
insb
notb
sub
mov
inc
daa
dec
pop
ret
pop
jae
sbb
pop
ja
decl
andps
cld
mov
xchg
ljmp
clc
dec
xchg
mov
imulb
outsb
or
cld
and
cmp
loop
dec
and
pushl
mov
test
mov
inc
add
fwait
mov
bnd
mov
mov
xlat
inc
xor
jl
and
xchg
jbe
mov
xchg
lcall
dec
sub
outsl
aaa
cmp
dec
sbb
rorl
call
pop
scas
cltd
in
lods
mov
xchg
repz
fstps
jl
sbbb
pop
ljmp
mov
jmp
loop
xor
shlb
jns
les
mov
jmp
ss
mull
stos
leave
sar
push
inc
pushf
jno
mov
cmp
les
into
xor
push
out
dec
xor
cld
inc
add
fstl
sarb
xor
call
cmpsb
push
push
call
sbb
fdivrs
hlt
xor
or
xchg
xrelease
sub
popl
scas
mov
jmp
mov
out
sarb
decl
movsb
xchg
lcall
fiadds
aam
aaa
add
fcomip
imul
cld
jne
mov
and
sbb
ljmp
incl
push
fs
stos
pop
sub
lea
fstpl
push
jns
idivl
call
jg
fmull
subb
enter
std
icebp
aas
jb
dec
pusha
stos
sub
and
out
fcomip
call
mov
daa
and
ljmp
inc
in
das
cld
push
jns
adc
je
fcomip
add
mov
cmp
call
or
mov
sahf
aad
mov
jae
mov
push
push
mov
xor
les
incl
push
les
lea
and
popa
add
sbb
movsb
cmpsl
xchg
mov
dec
sbb
sbb
cmp
repz
out
push
ljmp
imul
lret
pop
jl
xor
mov
inc
jecxz
mulb
or
xor
mov
mov
orb
cwtl
adc
jmp
outsl
test
clc
movsl
push
xchg
stc
mov
fistps
ljmp
mov
push
sahf
cmp
mov
pop
aaa
gs
cmpb
mov
call
fmul
xchg
gs
sub
ljmp
lcall
adc
loopne
dec
cltd
mov
inc
shll
out
inc
ljmp
push
push
outsl
push
pop
pusha
mov
subb
mov
or
inc
loopne
pop
ret
pop
shlb
sbb
mov
test
imul
mov
or
inc
shrl
adc
imul
mov
fwait
jae
sub
cmp
mov
mov
jb
out
adc
decl
fwait
subl
xchg
mov
aaa
test
jbe
pushf
bound
mov
lods
cmp
dec
cmpsb
data16
mov
adc
call
push
mov
dec
stos
or
decl
mov
pop
rclb
in
sti
and
add
inc
inc
cmp
push
mull
sub
out
cli
ds
jecxz
cwtl
imul
cmp
lahf
jo
adc
pushl
pop
jecxz
in
adc
mov
xor
scas
push
ss
mov
adc
icebp
mov
pushl
push
push
pop
shll
idivb
cmp
das
int
lods
mov
sbb
mov
pop
outsb
xor
push
imul
jmp
sbb
popf
sbb
dec
adc
push
icebp
jnp
or
xchg
in
sub
cmpsb
call
loop
std
pop
dec
daa
loop
push
std
and
sbb
lods
adc
pop
loopne
pushf
iret
nop
bound
ret
xor
pusha
lock
std
lcall
xor
sti
nop
sbb
push
arpl
inc
repz
fldenv
and
in
ficoml
sbb
out
negl
gs
out
movsl
fwait
dec
scas
int3
dec
jmp
int3
dec
xlat
repnz
jmp
outsl
or
and
sbb
jecxz
into
in
jbe
mov
pop
icebp
jmp
ja
mov
inc
mov
xchg
rcrl
cmp
inc
leave
sub
cmp
adc
ds
jg
xlat
jnp
lret
test
dec
out
scas
xchg
mov
aaa
jmp
pop
mov
call
add
mov
out
sub
dec
xchg
jnp
insl
stos
lds
or
pushl
pop
mov
std
stc
sarl
in
push
dec
jp
imul
mov
push
add
int
or
jg
push
lcall
cs
and
or
idiv
mov
push
jae
adc
pushl
addb
loope
in
sub
outsl
lret
je
adc
stc
pop
loop
dec
in
es
frstor
imul
sbb
mov
notb
aas
mov
push
aaa
enter
imul
mov
out
mov
rol
dec
jecxz
incl
vpmullw
into
sbb
andb
add
cmp
push
pop
dec
rorb
dec
mov
pop
cmp
test
push
sub
dec
test
lcall
call
in
inc
or
push
mov
hlt
dec
inc
jg
js
lods
cmpsl
sbb
inc
jmp
pop
sti
lods
or
lcall
push
loope
cmc
mov
jg
fisubl
push
inc
jle
xchg
lods
rcrl
pop
ljmp
orb
testl
jmp
arpl
repnz
aaa
cwtl
ljmp
cmp
lds
sub
incl
jnp
push
inc
out
stos
shlb
mov
xor
sbb
lcall
adc
push
adc
or
inc
sti
pop
sbb
or
push
mov
mov
movsb
loopne
or
gs
push
push
lods
rcrb
dec
rcll
pop
adc
add
xchg
cmpsb
mov
cmp
dec
out
dec
jbe
repz
pusha
imull
decl
clc
and
add
xchg
mov
and
test
shrl
cmc
call
dec
lock
xlat
xor
arpl
es
sbb
jg
imul
sahf
sar
in
xchg
sbb
loopne
imul
mov
push
pushl
xorl
jo
stos
xor
lods
faddl
insb
lcallw
cld
dec
pop
xor
sahf
jb
push
or
je
mov
leave
arpl
pop
lcall
cld
lret
xor
ret
xor
pop
xor
pop
xchg
popl
divb
scas
shl
das
addb
xchg
in
xchg
cmp
push
dec
sbb
mov
testl
or
xchg
out
sbb
jne
test
cmp
jns
push
inc
dec
dec
xor
pop
fiadds
mov
andb
mov
mov
std
enter
pop
je
outsb
pop
ds
mov
cld
lret
ss
fmull
aaa
aam
je
insb
adc
push
cwtl
xor
into
cmp
jmp
pop
jne
fwait
stos
cltd
imul
ficoms
xchg
or
outsb
inc
cli
push
mov
into
jmp
inc
and
mov
sub
push
not
aas
xchg
aaa
sub
sahf
mov
subb
pop
enter
test
gs
in
cmp
pop
popf
stc
xchg
xor
sub
arpl
or
push
or
call
addl
roll
call
jecxz
sbb
fdivs
jmp
pop
aaa
mov
fwait
das
xchg
cmp
test
int3
int3
and
test
outsl
lcall
mov
and
mov
lds
mov
test
loope
mov
xchg
clc
xchg
push
cli
aas
mov
decl
inc
mov
lods
in
inc
lods
cmp
jne
inc
push
jp
cmp
cli
aad
ljmp
incl
dec
mov
jo
sub
jmp
scas
xor
call
mov
inc
sar
mov
test
test
adc
pop
decl
jmp
inc
cmpsl
xchg
push
fisubs
xchg
jecxz
mov
pop
lods
mov
ljmp
hlt
push
pop
and
push
test
add
inc
ret
out
xchg
push
sbb
hlt
fdivl
insl
push
incl
inc
pushf
pushf
adc
pop
lock
rcll
push
push
in
pop
pusha
xor
jno
sahf
iret
dec
dec
data16
xchg
xor
push
nop
testl
or
mov
mov
call
imul
pop
jge
in
sbb
jae
cld
or
mov
call
cli
mov
dec
and
mov
sti
push
jb
cmp
lock
incl
bound
shl
scas
or
shll
popa
fwait
sbb
mov
call
xchg
call
jmp
xchg
rolb
insb
adc
aaa
pop
dec
int3
cmpsl
lcall
dec
fcomip
xor
jmp
call
jo
pop
roll
mov
lea
lea
xor
enter
pop
sub
sub
decl
jno
jnp
pop
in
fmuls
arpl
stos
insl
lods
bound
dec
lods
sbb
scas
jg
lods
mov
fwait
test
inc
cltd
and
es
ljmp
push
push
push
pop
cmpsl
or
aaa
inc
rcl
jb
int3
mov
xchg
jge
addl
decl
mov
inc
mov
mov
mov
push
scas
or
push
fidivl
dec
cwtl
incl
icebp
adc
frstor
mov
hlt
dec
pop
xchg
mov
stos
outsl
xor
xchg
or
addr16
sbb
leave
pop
jns
lcall
testl
movl
or
cmp
call
push
add
gs
push
arpl
sahf
jne
cmc
mov
jecxz
mov
loop
ss
loopne
neg
pop
dec
jecxz
jnp
sub
pop
sbb
out
xor
incl
jl
mov
inc
mov
in
lcall
push
cltd
cld
pop
lret
out
pushl
bound
cwtl
inc
mov
dec
jg
sub
jns
into
stos
sub
sbb
lcall
inc
mov
sbb
fsincos
test
and
push
jmp
pushf
mov
decl
shl
push
in
in
bound
push
stc
mov
dec
andl
adc
mov
push
dec
jmp
mov
jecxz
push
cltd
stos
adc
cmpsb
xor
loop
incl
cmpsb
jmp
cli
and
out
pop
cwtl
inc
dec
mov
mov
mov
mov
lods
std
add
push
dec
lea
test
ret
daa
sub
in
sarl
idiv
ljmp
popa
xorb
ret
xor
in
jg
int
daa
mov
aas
dec
jecxz
cli
ljmp
imul
and
push
push
in
push
and
fimuls
test
inc
cld
push
imul
push
iret
cwtl
add
and
pushl
xchg
pop
scas
xor
mov
and
jmp
mov
fdivrp
loop
cmc
jecxz
mov
out
mov
push
mov
pushf
jnp
testl
outsb
jp
cltd
pcmpgtd
movsb
pop
jo
sub
inc
xchg
sahf
imul
bnd
sub
insb
lcall
loop
js
cli
repz
xchg
dec
leave
sti
in
add
jecxz
xchg
push
xchg
mov
xchg
popa
into
mov
sbb
sub
xor
orps
ljmp
sbb
out
add
add
clc
dec
xlat
cmp
and
and
xor
ret
xchg
or
movsl
shr
dec
addr16
leave
out
cld
sbb
in
les
ljmp
addb
loop
mov
test
test
cs
call
loopne
inc
mov
cmp
or
mov
clc
push
inc
jmp
xor
pop
sub
mov
mov
ror
je
inc
notl
test
inc
sbb
popa
sub
xor
decl
cmp
mov
xchg
mov
mov
out
or
xchg
test
mov
fldcw
sahf
pop
and
push
scas
stos
lahf
fwait
clc
and
xchg
loopne
sub
std
inc
or
test
mov
and
jno
stos
xor
adc
inc
test
fdivrs
js
insb
cmp
sbb
rsqrtps
push
inc
iret
dec
jo
js
hlt
sarl
pushl
sarl
xor
call
mov
ljmp
inc
ljmp
or
ffreep
movsl
lahf
imul
call
lods
cld
fdivrl
scas
inc
lret
fwait
and
inc
dec
loop
movsl
cwtl
jnp
inc
adc
add
incl
add
fildl
jle
mov
inc
sub
imul
test
mov
push
pop
xlat
bound
shl
jecxz
ret
cmp
dec
and
js
jbe
lock
cli
call
pop
sub
sahf
mov
push
push
lcall
push
xchg
inc
jo
cmp
sub
xchg
dec
aaa
jl
loopne
push
out
or
push
jno
jmp
fs
push
lds
xor
add
mov
stos
lcall
mov
movsb
sub
imul
iret
and
stc
inc
lret
or
mov
push
inc
lods
xor
fnstcw
fistpll
pop
xor
sbb
xchg
push
and
or
mov
push
in
add
imull
incl
pop
aam
mov
in
xchg
iret
loope
dec
or
adc
cwtl
into
pusha
pushf
sbb
dec
sub
loop
and
decb
push
push
pop
and
int3
mov
sub
dec
stos
jg
cld
iret
pop
lods
inc
mov
sbb
cmp
add
mov
sub
or
lret
es
xlat
push
pop
adc
stos
jp
call
xchg
das
lret
pop
pop
scas
adc
into
jge
inc
xor
mov
mov
or
push
xor
sbb
jbe
xlat
leave
dec
testl
call
lcall
mov
jns
inc
dec
mov
lret
sbb
scas
xchg
bound
jno
nop
push
adc
and
mov
sarb
push
inc
cmc
ror
push
or
pop
sub
scas
nop
jb
incl
cmc
mov
pusha
aaa
cmp
adc
fmulp
mov
stos
inc
push
pop
add
dec
sbb
lcall
pop
les
push
mov
xchg
ja
adc
sub
je
mov
int
decl
push
push
out
jp
stos
inc
and
push
mov
es
fcoml
pop
pushl
std
decl
pop
imul
ljmp
fstpt
rorl
aas
shll
mov
or
add
faddl
add
mov
mov
and
adc
fstpt
sbb
stc
mov
lcall
test
sub
insb
call
cmp
mov
mov
leave
cmp
iret
or
das
cli
pushl
mov
sbb
and
xchg
scas
jb
or
rcll
incl
push
pop
pushf
xchg
fimuls
or
shl
cmc
mov
gs
decl
mov
and
int
lods
fcomi
bound
popf
and
push
orl
dec
xchg
add
in
lods
movsl
pop
iret
roll
out
jecxz
inc
xchg
add
mov
jge
out
cmp
ss
push
and
or
push
xchg
int3
fcoml
ljmp
fcoms
push
arpl
adc
sub
cmp
sbb
sbb
in
lock
decl
xchg
ja
les
nop
andb
cmc
adc
fsubrs
jae
call
je
xchg
lret
pop
sub
mov
xor
call
cmp
div
lock
ljmp
testl
sub
mov
jg
ficoml
jb
push
jp
in
clc
call
scas
sbb
mov
popl
sub
pop
dec
mov
ljmp
adc
pop
sbb
daa
push
dec
movsb
nop
add
xor
repz
idivl
inc
and
mov
hlt
cmp
call
sti
fldt
mov
xlat
mov
in
test
mov
ja
idivb
iret
adcl
or
dec
frstor
mov
and
adc
mov
cwtl
mov
call
sub
jl
nop
dec
shl
pop
in
add
xchg
cltd
or
nop
aaa
out
repnz
stos
jo
incl
add
clc
loope
cmpsb
lret
xlat
stos
stos
or
sbbb
sbb
lock
push
xchg
pop
sbb
jg
ljmp
mov
jmp
mov
pushl
or
ljmp
and
inc
xchg
outsb
pop
loope
fwait
mov
mov
call
inc
jge
adc
fstps
movsl
cmp
ljmp
aaa
pop
pop
lret
cmpsb
mov
aam
int3
xchg
ds
mov
call
adc
call
cli
sub
mov
pusha
ljmp
add
dec
or
add
aad
add
mov
fisttps
lcall
mov
xor
in
push
xchg
adc
xchg
and
mov
lret
pop
and
jno
loopne
pushl
xchg
jl
pop
mov
inc
pop
sub
test
mov
lahf
mov
mov
pop
lea
and
add
out
not
add
ljmp
lret
jg
lahf
scas
iret
add
andl
pop
imul
push
or
scas
mov
cmp
mov
leave
adc
mov
inc
xchg
decl
jmp
fdivrs
mov
fs
test
or
adc
sbbl
stc
push
jge
ljmp
jb
into
dec
and
sbb
scas
sub
cmp
fadds
xchg
push
loop
incl
and
push
lods
dec
pop
mov
and
mov
jae
push
ret
data16
mov
inc
daa
std
xchg
test
inc
lret
add
jg
mov
lcall
ficomps
test
outsb
cmp
xchg
roll
nop
repz
pop
xlat
ret
jl
push
and
pop
cli
or
lcall
xchg
aad
into
mov
dec
add
hlt
or
das
dec
lea
cs
jne
mov
sub
mov
jecxz
mov
outsl
mov
inc
adc
mov
xchg
cmp
out
les
mov
push
outsb
and
lcall
add
jno
fwait
jg
imul
lea
out
xchg
popf
adc
push
xchg
mov
dec
sub
mov
inc
incb
jbe
jecxz
mov
push
nop
jae
ljmp
push
stos
push
nop
cld
mov
jl
sub
nop
mov
int3
and
rclb
lcall
hlt
inc
push
out
sbb
out
rcll
mov
push
push
pop
push
mov
stos
and
sub
inc
fnstenv
pop
mov
push
push
lock
loopne
adc
inc
cmp
mov
push
cld
test
pop
sub
jno
rcl
fisttpl
jle
bound
adc
jbe
repnz
cmp
inc
mov
mov
pop
dec
clc
stos
pop
enter
out
pop
jge
jmp
frstor
je
adc
lcall
xchg
std
aam
sbb
sub
sbb
inc
push
ss
in
mov
fldpi
fs
scas
sbb
fcomps
pop
into
rcl
in
xor
or
pushl
push
push
sub
mov
cs
adc
clc
jge
push
jbe
cmp
push
scas
inc
mov
fdivrs
lret
pushl
cld
in
gs
dec
movsl
jmp
mov
movsl
pop
ljmp
xchg
and
pushl
xor
hlt
daa
shrb
or
scas
test
jo
push
stc
mov
data16
add
dec
repnz
ss
mov
cld
xor
aas
ljmp
loop
and
sbb
outsb
sub
std
clc
hlt
dec
lcall
in
sbb
push
out
incl
xchg
jne
sbb
push
sub
std
ret
and
push
stos
aaa
adc
add
lahf
outsl
and
add
mov
cmp
movsb
xor
fs
leave
ja
push
mov
incl
sub
and
adc
pop
and
dec
adc
repnz
ljmp
clc
ret
mov
mov
orl
xchg
in
pop
test
js
cmpsb
mov
jge
pop
and
ljmp
xchg
xor
or
fstl
jl
dec
fcomip
ja
and
outsb
sbb
push
jmp
js
sbb
pop
mov
repz
fisubrl
repnz
bound
icebp
sbb
hlt
mov
or
xchg
pop
xchg
mov
lret
cmp
xor
out
adc
cmc
push
test
xchg
pop
pop
cmc
cld
xlat
xor
out
das
fnstenv
mov
aas
ja
cmp
push
out
fs
sbb
add
jle
cmp
pop
push
inc
pop
stos
fwait
iret
gs
xchg
sub
cltd
decl
into
js
aam
ret
inc
cmpsl
mov
jns
addr16
fistps
xor
aaa
cmp
xor
add
push
push
push
adc
das
in
ret
mov
mov
cmc
xchg
ljmp
inc
and
mov
lods
lret
cld
add
xor
ljmp
xchg
call
sahf
dec
sub
pop
loope
inc
into
ficompl
xor
fs
ss
dec
mov
inc
les
mov
cld
jp
sbbb
jo
out
dec
lret
in
call
rcrb
jmp
xchg
push
fcoml
xchg
imul
cli
and
cs
jne
nop
arpl
mov
sti
mov
jg
fnstenv
inc
stos
insl
movsb
adcb
adc
aad
bound
dec
test
xchg
lcall
lcall
in
mov
pop
test
inc
jg
push
les
push
hlt
sub
mov
sub
adc
mov
jmp
rcrb
mov
pop
repz
ljmp
clc
or
push
rclb
outsb
lods
mull
cmp
pop
xor
orb
mov
cmpsb
in
xor
ljmp
or
pop
xchg
and
hlt
inc
les
dec
cmp
in
jg
mov
test
xchg
mov
enter
imul
jmp
fidivs
ret
cli
ljmp
dec
pop
xor
shl
pop
inc
add
mov
mov
fnstcw
xchg
push
outsl
xchg
int3
push
inc
mov
jecxz
lock
aaa
xor
incl
sub
or
push
sbb
mov
decl
push
mov
pop
mov
arpl
mov
sub
imul
push
jg
in
xchg
loopne
scas
add
clc
mov
xchg
xchg
add
jmp
inc
sub
mov
ljmp
xchg
adc
lea
sub
fsubp
sub
mov
push
cwtl
mov
xchg
mov
mov
pushf
add
lcall
shl
and
stos
adc
ja
adc
sbb
mov
sti
mov
mov
test
data16
jno
in
xchg
mov
cld
sbb
flds
scas
in
int3
dec
mov
or
mov
dec
ror
orl
push
pushf
sub
mov
mov
outsb
xchg
xor
fldl
add
mov
sbb
mov
in
movsl
popf
pop
push
xor
nop
or
cmp
ficoms
pop
loopne
cmp
add
push
das
pushf
jo
or
imull
xor
call
push
and
or
sub
dec
scas
imul
outsl
mov
js
mov
mov
nop
push
mov
mov
outsb
addl
lcall
xor
inc
push
jmp
iret
add
dec
nop
pushf
fwait
lock
add
sub
in
push
incl
and
add
xchg
out
aas
jns
xchg
dec
push
gs
push
data16
scas
imul
fisubs
cld
mov
aam
jmp
fdivrp
jmp
pop
test
popa
and
fnsave
call
xor
popf
sbb
or
xchg
incl
and
clc
mov
lcall
push
cmpb
jno
inc
test
incl
push
add
daa
cmp
addr16
lret
sub
loope
aad
ja
in
mov
and
jl
test
jg
jno
mov
or
jne
jg
sbb
insl
adcl
mov
and
mov
rcrl
inc
dec
xchg
es
lcall
pushf
mov
push
dec
sbb
rcrb
movsb
sbbl
lods
stc
jnp
push
mov
fld
decl
push
xor
sub
mov
adc
lcall
pop
jo
cli
lret
mov
ja
jl
std
dec
xchg
int3
or
sbb
loopne
push
cmp
pushl
rcr
adc
test
mov
sbb
mov
push
add
jae
sbb
std
rcrl
call
es
fadd
mov
xchg
or
push
sbb
stos
pop
es
mov
fistps
push
jmp
jae
mov
jg
dec
clc
shll
mov
inc
cmp
add
mov
jge
push
pusha
aas
xchg
popf
out
pushf
cs
pop
xor
es
call
jo
mov
xor
addr16
decl
scas
test
pop
inc
inc
dec
cmp
mov
addr16
xchg
cmp
mov
sbb
bound
pop
lret
push
ret
pop
iretw
lcall
xchg
ljmp
fwait
aaa
iret
pushf
aam
inc
xlat
dec
xchg
in
sbb
xchg
je
xor
push
insb
xlat
jne
cmp
inc
dec
adc
sbb
mov
test
in
add
adc
jl
std
lods
fwait
scas
movsl
test
cs
pushl
inc
and
pushf
xchg
daa
mov
adc
mov
inc
push
repz
jmp
test
repz
call
xlat
push
fldenv
ss
icebp
aaa
mov
out
clc
cltd
xchg
enter
mov
pushf
cmp
mov
xor
in
xchg
xchg
mov
ljmp
imul
jp
pop
push
test
mov
ss
jp
and
arpl
lcall
ljmp
dec
xor
shlb
jmp
or
fidivrl
movsl
aam
xchg
push
repz
das
clc
cli
push
sti
popa
lods
jo
inc
outsl
scas
test
push
pop
out
mov
lret
mov
call
sub
movsb
subb
pop
sub
adc
or
sbb
pushf
and
ficoml
dec
lret
mov
dec
jl
nop
test
xchg
jns
pop
sub
mov
dec
jae
or
mov
lcall
pop
in
mov
popa
jp
decl
movsl
adc
cmp
jecxz
xchg
jbe
or
dec
sub
popf
mov
mov
call
fadd
int3
aam
lahf
fcomi
pushf
rclb
imul
jbe
add
scas
mov
shl
ds
push
stos
negb
mov
ljmp
xchg
jns
add
or
cmp
cmp
decl
mov
in
or
addb
cmp
jmp
out
add
neg
jecxz
mov
fdivs
insb
fstpl
icebp
nop
mov
filds
push
fldl
push
repnz
sahf
test
sub
aam
js
dec
sub
mov
push
pop
jg
out
sbb
enter
subb
and
pop
out
mov
cmp
rorl
call
lcall
mov
gs
andl
and
insb
or
mov
movsl
mov
pushl
into
mov
sbb
push
cmpsb
push
mov
in
sbb
cli
push
shll
idivb
jecxz
mov
xchg
mov
dec
add
dec
add
aam
xor
call
sbb
pop
pop
push
adc
or
jge
mov
lcall
cmp
cmp
jecxz
dec
sbb
dec
xchg
movsb
lret
lock
add
pop
adc
push
mov
push
cmc
mov
jecxz
ja
sub
ljmp
dec
push
setae
xchg
mov
jb
dec
sbb
cmp
shl
call
daa
mov
add
pop
movsl
jmp
mov
hlt
xor
in
jg
sti
xchg
shrb
test
jb
adc
xlat
pushf
dec
je
pop
mov
ljmp
cli
call
cmp
or
mov
cwtl
dec
mov
insl
sub
mov
gs
decl
ja
xchg
and
pushf
mov
xor
mov
rcrb
decl
pop
rclb
adc
test
inc
arpl
cmpsl
test
decl
shl
enter
outsb
fwait
outsl
mov
pop
fisubl
push
adc
jecxz
sbb
dec
inc
sahf
icebp
jmp
pop
mov
insl
inc
test
sahf
add
mov
lods
ljmp
movsb
adc
mov
int
lock
lock
lcall
cmp
mov
jle
fsubrl
test
jb
pushl
or
push
outsl
mov
lahf
sub
inc
aas
popa
lcall
jle
fisubs
out
jmp
sub
das
jae
data16
das
rcrl
cmp
into
pop
and
icebp
sti
adcl
les
scas
mov
push
orb
fistpl
xlat
adc
out
test
movsl
mov
mov
lock
test
in
les
add
loope
jg
jmp
xor
movsl
out
shlb
stos
fsub
scas
xlat
lcall
mov
sbb
xor
cmp
lret
adc
add
lods
xchg
and
xchg
dec
mov
jg
and
xchg
scas
adc
scas
sub
or
inc
lods
fsubs
and
add
push
popf
std
in
and
cs
lock
jno
dec
ret
call
cmp
pop
xor
pushl
and
push
pop
out
mov
pop
push
cld
sbb
jb
sbbl
mov
out
stc
push
out
add
mov
push
in
pop
ljmp
mov
cmp
lock
jmp
jns
jecxz
iret
lcall
and
or
xchg
jo
mov
lret
mov
mov
fcoml
mov
mov
and
loopne
ljmp
sbb
mov
sub
lea
shll
je
ret
push
das
repz
cmpb
out
jle
imul
jbe
into
mov
xchg
push
shll
cwtl
neg
xorb
bound
popa
add
pushl
ja
pop
mov
sub
negb
decl
pop
fbld
jp
xor
inc
ret
jl
pop
nop
mov
or
mov
push
cmp
je
pop
addr16
push
and
dec
cld
mov
ljmp
cmp
mov
sbb
int3
loop
rcrl
pop
ljmp
callw
cmp
pushl
pop
cmp
hlt
outsb
pop
cs
mov
imul
jle
mov
xchg
push
sbb
cld
jmp
push
jl
sub
pop
pop
mov
popf
inc
jbe
mov
les
incl
dec
jo
xor
mov
lcall
jo
aam
fimuls
xchg
jp
pop
sbb
push
int
mov
cld
jmp
loop
xchg
add
sti
ficompl
sbb
jg
jecxz
xor
test
repnz
outsl
adc
xor
mov
out
test
inc
pop
push
dec
jge
cwtl
sarb
lock
lcall
ss
xchg
mov
sub
lret
addr16
mov
pop
lcall
jns
mov
and
movsb
in
leave
cmpsb
scas
cld
mov
mov
sub
test
das
outsb
fstp
cmp
cmp
lods
jne
lock
cmpsl
out
out
js
jne
inc
in
inc
loopne
sub
movsl
mov
cmc
mov
push
iret
fidivrl
cmp
push
in
cmp
fcmovnb
data16
or
jo
cmp
lods
and
pushl
enter
xchg
adc
adc
test
push
xchg
xchg
cltd
mov
fstpl
call
mov
iret
mov
fldt
sbb
hlt
sbb
aas
jle
loop
lcall
mov
out
adc
mov
int3
das
shll
rorl
jge
pop
sbb
fisttps
mov
pop
cmp
sbb
jmp
arpl
sub
lods
mov
xchg
roll
jne
xchg
arpl
pop
push
iret
gs
lods
call
rorl
call
xchg
shlb
add
orb
mov
jg
dec
xor
dec
pop
mov
loop
cmp
imul
out
lods
push
fdivr
mov
mov
sub
cwtl
insl
push
lods
outsl
out
outsl
xchg
fidivrs
mov
mov
pushf
into
into
add
adc
fmul
roll
lcall
test
ja
or
pop
jle
cmpsl
adc
test
push
dec
add
dec
cld
das
cli
aas
stos
dec
mov
cmpsb
fwait
daa
int3
int
mov
sar
jg
xchg
popf
mov
mov
in
sbb
pop
sub
jg
mov
xchg
cmpsb
in
in
jns
dec
bound
xchg
push
aaa
cmpsb
inc
repz
mov
popa
orl
inc
push
lock
outsl
mov
dec
xchg
mov
xchg
icebp
mov
mov
nop
orb
mov
xchg
arpl
jmp
cmp
xor
lods
jmp
jns
in
call
in
orb
fstps
push
scas
cmp
inc
cmp
inc
cmc
mov
mov
cmp
cmp
fwait
dec
in
fisubl
or
inc
mov
aad
add
jns
mov
in
xchg
or
inc
xor
or
in
mov
bound
or
push
lahf
decb
add
mov
insl
or
mov
sti
mov
dec
jecxz
xor
ljmp
inc
dec
push
stos
icebp
mov
and
pop
fistpll
ret
jnp
faddl
ljmp
mov
jno
inc
push
cmp
xchg
ljmp
add
loope
mov
in
push
lcall
mov
adc
clc
call
xchg
push
mov
movsl
add
push
and
jb
pop
pop
test
addr16
xchg
decl
leave
sysexit
xchg
xchg
mov
inc
sbb
inc
or
stos
repnz
jg
fwait
imul
xor
scas
mov
sarl
inc
jle
shrl
fldenv
sbb
fildll
stos
xlat
cwtl
outsb
loop
popf
fcompl
fistl
adc
fdivrl
into
cmp
or
lahf
push
add
mov
jne
fbld
push
mull
cld
out
iret
mov
mov
inc
mov
jmp
add
and
mov
jnp
jmp
inc
or
adc
stc
test
and
rcrb
push
into
mov
dec
mov
mov
out
call
jg
cmp
jb
mov
mov
sarb
mov
and
jg
or
push
lret
mov
inc
insb
out
push
scas
and
mov
in
incl
lods
cmp
xor
mov
pop
xchg
call
jae
dec
xchg
adc
inc
sub
jne
cli
push
js
outsb
push
sti
int
pop
rorl
lcall
xchg
jnp
cmpsb
loope
add
pop
ss
push
pop
cmp
xorb
cmp
cmovb
mov
xchg
je
sub
cli
icebp
sub
sbb
pop
cwtl
scas
sbb
jecxz
mov
jbe
test
mov
sti
mov
push
and
mov
test
jge
mov
lret
js
sub
incl
sub
jp
cltd
aaa
adc
enter
cltd
ffree
je
mov
sbb
add
xchg
mov
aad
inc
xchg
and
sbb
aaa
into
ja
cmpsl
cmp
fstpt
mov
cld
xchg
fimull
cmp
gs
sub
fildl
jecxz
pushf
call
push
mov
orb
gs
sti
in
pushf
ja
ret
data16
mov
fisttps
cld
mov
sub
inc
fcmovnb
xchg
fisubs
add
fsub
dec
inc
xchg
ljmp
jbe
and
adc
push
mov
mov
scas
xchg
shll
pop
cmpsb
test
mov
mov
mov
test
aaa
cld
pushl
addr16
mov
and
add
sar
outsl
bound
jmp
call
mov
push
jb
pop
mov
sbb
shlb
ss
shll
mov
loop
in
cld
dec
adc
xor
outsb
loope
mov
cmp
push
dec
jno
pop
mov
addb
mov
push
sub
push
test
adc
call
es
push
lea
test
pop
mov
jmp
js
or
jns
cmp
jg
xchg
push
imul
fnsave
add
ret
into
push
adc
incl
cltd
jecxz
inc
pop
jb
xchg
mov
jnp
js
push
adc
inc
es
iret
out
call
xor
mov
nop
outsb
ret
lock
and
or
cwtl
icebp
jg
jg
jnp
cmp
push
cmpsl
jge
lahf
pop
lahf
jp
mov
adc
lock
pop
shrl
and
stc
pushl
cmp
lds
inc
or
sub
scas
push
mov
inc
xchg
and
sar
jl
adc
outsl
shrb
or
leave
mov
add
addl
incl
lcall
sub
adc
cmp
pop
mov
hlt
cmc
push
jp
or
ljmp
add
aaa
cmc
ss
cltd
dec
xchg
jge
leave
sahf
pushl
add
sbb
jg
outsl
jmp
leave
test
imul
jb
aad
dec
stos
add
inc
das
add
cld
sub
testb
js
pop
pop
pushl
decl
mov
sbb
mov
stos
in
and
movsb
aam
push
aam
push
sub
mov
js
cmp
notl
push
dec
jg
icebp
rcr
idiv
pop
push
sbb
cli
imul
cmp
lret
push
daa
pushf
inc
in
call
stc
mov
mov
insl
sub
scas
or
jbe
repnz
sub
icebp
pop
pop
pop
lcall
call
imull
iret
sbb
xchg
sbb
in
adcb
jmp
mov
inc
lret
fldcw
in
mov
jg
xchg
dec
pushf
lcall
jle
scas
add
std
in
xchg
add
pushf
add
incl
pop
sbb
aas
scas
mov
or
loop
mov
and
mov
jg
jg
jne
dec
sub
cmp
les
jns
lea
sti
gs
jno
push
inc
add
ret
sub
call
repz
add
jns
cmp
cmpsb
sub
and
insb
sub
push
adc
call
xor
aas
mov
pop
jae
movsl
sbb
pop
cmpsl
xchg
push
xor
subl
push
mov
add
and
jnp
jns
push
out
jne
ja
pop
jne
dec
mov
test
mov
and
outsb
fcompl
popa
pop
loope
adc
clc
decl
fwait
bound
xchg
jnp
clc
xchg
mov
jne
aam
xor
and
pushl
mov
jne
adc
mov
pop
cmc
mov
fcom
pop
and
jle
lods
mull
sbb
fcmovne
lea
inc
push
inc
dec
lock
or
nop
lods
std
into
mov
push
cli
pusha
loope
loope
adc
fstpl
cmpl
decl
dec
xor
fs
daa
jns
imul
shl
test
loope
fsts
decb
jmp
hlt
sub
mov
ljmp
adc
ss
mov
rcrb
pop
int3
mov
lcall
sahf
jg
std
fdivr
mov
cmc
mov
jbe
daa
mov
dec
pushf
insl
loopne
lcall
aad
pop
ljmp
inc
push
je
movsb
adc
inc
push
fdivr
decl
jbe
inc
mov
mov
fsts
mov
dec
pop
push
sub
cld
add
adc
popa
add
and
call
dec
xchg
testl
mov
xchg
xchg
pop
pop
pop
shll
cmpsl
lds
mov
decl
sti
call
sbb
dec
fmulp
pop
out
adcb
movsb
test
cltd
call
adc
hlt
fists
mov
stos
or
in
psubd
pop
stc
xchg
divb
clc
mov
loope
dec
fs
inc
xor
sub
add
pop
std
call
xor
mov
push
into
jno
bound
push
sti
add
ret
daa
sti
incl
fiaddl
adc
scas
popf
cwtl
add
cmp
push
jns
mov
out
mov
in
sub
push
jae
insl
push
cmp
and
ljmp
mov
lea
cmp
xchg
mov
sbb
scas
fldlg2
outsb
lds
xchg
pop
dec
cs
lcall
clc
sbb
call
push
aaa
mov
jo
sbb
outsb
xchg
divl
cmp
adc
lcall
xor
pop
jo
jmp
dec
rorb
inc
cmp
mov
jg
movsb
cmpsb
and
pop
adc
pop
pop
xchg
lods
adc
scas
call
icebp
lret
mov
mov
pop
add
loop
add
cli
decl
and
adc
arpl
or
les
jmp
test
push
test
push
or
or
outsb
xor
movsb
xchg
mov
cld
sbb
pushf
stos
push
sbb
mov
dec
mov
call
push
pushf
fcompl
ret
gs
insl
mov
push
imul
cld
aad
fcomip
inc
jne
into
shlb
cmp
fsubrl
mov
fcomip
icebp
xor
mov
push
cltd
sbbb
sub
push
mov
loope
dec
pop
clc
clc
repnz
cmp
sub
add
xor
incl
rcrl
test
mov
push
mov
dec
daa
xchg
jecxz
and
pop
int3
lea
aad
or
es
add
and
ljmp
jecxz
xchg
xor
xor
stos
or
sbb
adc
mov
icebp
push
out
fidivs
fsubl
scas
decl
push
rorb
rorb
fcmovb
testb
lret
insl
movsl
and
call
scas
cltd
xor
gs
push
mov
out
arpl
jb
nop
jl
cmp
mov
push
fistps
into
lret
mov
push
aam
push
mov
push
cmp
arpl
fiaddl
inc
pop
pop
and
sbb
pop
clc
xchg
lea
jb
xchg
lock
cmp
int3
popf
test
jb
adc
mov
push
push
pusha
rorl
push
aam
repnz
mov
push
aad
fists
xor
lea
or
push
jno
dec
lods
ja
pop
test
fimuls
movsl
lock
repz
das
xchg
scas
jecxz
mov
mov
leave
cmp
sbb
popa
lds
push
pop
and
nop
xchg
movsb
in
push
push
ret
decl
push
mov
xor
cltd
mov
mov
mov
pop
loopne
popf
loop
pop
pop
fs
lods
jno
jle
stc
je
sub
push
push
jecxz
xor
ljmp
inc
imul
cmp
stos
xor
and
in
push
insl
popf
ds
fnsave
gs
mov
mov
outsl
dec
fidivrl
jge
add
rclb
std
mov
lea
flds
push
jg
inc
mov
bound
xchg
cli
repz
fcoml
jno
mov
bound
bound
fisubs
scas
add
jg
or
lods
cmpsb
jl
xor
inc
cmp
decl
jnp
lahf
add
xchg
inc
or
dec
inc
movsb
push
xchg
out
fmull
insb
mov
pop
lret
mov
dec
or
inc
cmpsl
sub
decl
sbb
insb
js
sbb
sbb
inc
iret
repz
inc
stos
adc
test
adc
mov
mov
push
scas
add
daa
sbbl
mov
and
jg
in
dec
mov
jl
push
xor
push
rcrb
mov
lcall
jge
sub
les
dec
mov
std
ds
and
jne
addr16
cmp
out
mov
ljmp
or
fwait
das
ljmp
in
push
push
inc
test
mov
mov
cmp
filds
cmpb
push
bound
int3
aas
movsl
mov
int
shlb
call
jae,pn
adc
jg
or
cmp
push
dec
or
cld
outsb
mov
ret
dec
or
mov
scas
mov
cwtl
or
das
add
lcall
pushf
xor
inc
jle
std
dec
in
popf
cli
jecxz
mov
xchg
test
cld
lcall
xchg
push
mov
aam
cwtl
xchg
popa
xlat
cld
xor
mov
lcall
incl
orb
jecxz
cmp
lock
jg
or
dec
dec
test
inc
notb
and
std
lcall
sahf
and
ja
cmpsl
push
fprem1
sub
div
xchg
push
jle
arpl
jecxz
inc
mov
push
stos
inc
loopne
outsb
je
sbb
popf
es
inc
int3
jecxz
push
pop
add
lcall
sbb
cld
loop
inc
adc
data16
jecxz
inc
mov
lcall
incl
inc
cli
mov
pop
jg
test
mov
stos
sub
repnz
fwait
mov
inc
and
inc
xchg
push
and
or
sahf
jae
push
jmp
mov
hlt
lds
scas
stc
mov
sbb
subb
out
xchg
mov
dec
xor
and
rolb
loopne
mov
shl
sbb
icebp
sahf
push
cli
popa
jecxz
ljmp
sar
lock
cwtl
stos
int3
pop
mov
insl
lea
into
aas
inc
jmp
nop
and
adc
ret
xchg
jl
adc
out
jp
dec
jb
ds
adc
call
dec
jmp
jo
mov
cmpsl
lcall
mov
or
leave
iret
cwtl
xchg
add
push
out
mov
scas
scas
sub
call
xor
xor
and
or
jmp
dec
icebp
push
mov
dec
push
xlat
jge
mov
rcll
mov
xchg
jle
sub
jno
out
nop
ljmp
push
les
push
or
inc
insl
test
ljmp
call
stc
movsl
jno
shll
push
jmp
jbe
or
cltd
or
rcr
adc
mov
mov
cld
cmp
sub
data16
in
push
pop
arpl
decl
scas
xchg
jg
push
lcall
inc
adc
xor
lcall
aaa
pop
pop
or
xor
cmc
mov
xor
pop
es
cmp
decl
mov
iret
mov
push
addr16
in
sub
jns
inc
or
daa
fldt
cmp
cmp
jno
jno
imul
movsl
popa
dec
mov
ljmp
sbb
popf
jae
iret
pop
push
or
sbb
pop
inc
add
scas
pop
or
movb
jecxz
mov
subb
repz
fildll
pop
loop
clc
adc
jae
lds
jle
or
mov
lcall
cmpsl
fdivs
shl
cmpsl
loop
fsubs
or
or
push
xchg
add
test
decl
inc
fidivl
fstpt
seta
fiaddl
mov
pop
ret
int
push
or
popf
add
pushf
jge
call
rcrb
mov
cmp
mov
mov
push
sbbl
mov
jg
lcall
cmpsb
pop
mov
or
adc
push
cmp
jge
xchg
pushl
cld
push
xchg
es
sti
daa
or
push
enter
mov
inc
insl
mov
lcall
cmpsb
and
adc
mov
add
gs
jmp
mov
lret
ficomps
aas
and
out
lfs
add
incl
popf
mov
rcrl
int
mov
cmpsl
mov
mov
mov
loopne
in
push
and
mov
fcomip
out
pop
cli
ss
loop
ds
xor
imul
fucom
repz
in
adc
daa
push
aam
clc
daa
clc
lods
insb
mov
fmulp
adc
fadd
rcr
shll
xchg
lods
mov
add
mov
push
cwtl
cwtl
sbb
pushl
inc
inc
sub
rcl
outsl
loop
xchg
ss
mov
inc
adcl
ljmp
decl
push
jae
sub
int3
je
daa
mov
cmp
incl
sahf
fincstp
cmp
adc
mov
or
mov
dec
lods
ret
lcall
pop
leave
clc
jns
or
mov
lea
adc
fdivr
repnz
xor
push
mov
push
sbb
xchg
and
push
jmp
jnp
push
iret
or
sbb
loope
lock
and
popa
ficomps
test
mov
nop
test
decl
aaa
lods
mov
addr16
fadds
cmp
out
pop
out
mov
pop
jnp
js
inc
mov
sub
jge
jecxz
incl
push
jo
test
add
daa
inc
xchg
ret
imul
cmp
lcall
cmpl
jno
movsb
cmp
mov
iret
test
and
sbb
inc
aas
and
jnp
sbb
loope
push
ja
test
adc
sbb
movsl
incl
out
lock
int3
cmp
xor
hlt
cmp
lret
icebp
aad
mov
push
jmp
add
fwait
movsl
pushf
int3
push
pop
scas
pop
lret
test
imul
cmp
pushl
lea
xor
into
push
clc
sbb
cmc
nopl
push
clc
mov
xchg
sbb
mov
scas
jg
stos
stos
mov
outsb
icebp
lds
fs
mov
pop
enter
in
dec
jle
ljmp
push
daa
ds
bound
cmpsb
mov
cmp
sbb
sbbb
pushl
pop
cmp
cmc
cmpsb
push
call
lcall
shrb
sbb
bound
dec
mov
rolb
rolb
push
cmc
xchg
out
aaa
sar
incl
int
fisttpl
mov
fidivs
mov
test
cmp
jno
jg
mov
xor
jbe
mov
sahf
je
ficoms
in
push
jg
test
pop
dec
cmp
mov
jl
jmp
cmp
pop
or
jg
cmp
ljmp
and
push
and
cwtl
test
stos
pop
mov
push
shr
in
and
xchg
call
push
lcall
fyl2xp1
loop
cmp
adc
push
cmp
outsl
sub
cmp
push
cmp
mov
decl
test
movsb
mov
cmp
out
pop
stos
dec
push
or
cmpl
pop
shrb
xchg
or
ds
xchg
pushl
pop
test
xor
cmpsl
ficoms
cmp
xchg
daa
adc
out
dec
xchg
das
hlt
mov
nop
xor
mov
addl
ljmp
and
out
ljmp
jecxz
adc
ss
out
adc
cltd
sbb
mov
jb
mov
ds
js
cli
in
push
lock
sahf
push
roll
pop
inc
xchg
xor
in
cmp
cmp
ret
in
sbb
dec
fcmovnu
fmul
xor
xchg
mov
imul
sub
decl
cwtl
orl
pop
incl
insb
or
xor
pop
shll
in
icebp
cmp
and
aad
nop
in
push
decl
mov
mov
jecxz
call
rcl
mov
sahf
les
and
cld
pushl
and
sub
pop
shrb
xchg
xor
sbb
mov
adc
sub
mov
ds
imul
xchg
mov
in
xor
and
faddp
jmp
movsb
jae
mov
out
fwait
and
jmp
arpl
js
aam
lods
scas
mov
decl
mov
dec
add
push
mov
mov
imul
ret
mov
xor
push
or
jle
push
mov
xor
decl
ss
ret
imulb
pop
mov
sub
push
lcall
aaa
xchg
shlb
add
incl
aam
pop
mov
ljmp
xchg
scas
scas
mov
and
xor
ljmp
movsl
cwtl
sbb
stc
sub
inc
xchg
mov
aam
lcall
fs
lds
pop
jo
sbb
add
push
dec
ljmp
jns
mov
jns
pop
add
mov
xchg
sarb
gs
lcall
mov
jno
sbb
xlat
adc
cmp
xlat
pop
sbb
jnp
hlt
pushl
std
decl
sahf
jne
mov
in
cmc
fildl
je
inc
xor
cmpl
fistpll
loopne
fs
fs
adc
incl
clc
dec
xchg
sbb
add
pop
ffree
lret
xor
mov
xchg
and
scas
xchg
ljmp
test
call
cmc
jae
js
call
leave
inc
test
mov
cmp
fcoms
jmp
mov
add
cmpb
jb
mov
adcb
in
out
js
out
adc
outsl
aam
cmp
dec
mov
mov
leave
sbb
sub
adc
push
lock
and
ja
mov
rorl
lock
loope
and
inc
sahf
test
mov
mov
outsb
sbb
mov
in
aam
aam
adc
mov
mov
lods
fnstenv
mov
cmpsl
push
mov
mov
sub
dec
addr16
out
sbb
sbb
cmp
pop
inc
data16
cs
mov
stos
inc
mov
pop
lock
mov
or
mov
leave
inc
cmpsl
inc
insb
daa
dec
mov
push
adc
dec
mul
mov
push
jl
fninit
test
pop
mov
mov
pusha
call
adc
mov
loop
inc
pop
sbb
mov
adc
sbb
or
pop
xor
incl
inc
andl
cs
fcmove
push
pushf
or
pop
leave
inc
dec
nop
mov
lahf
ja
in
repnz
mov
lret
hlt
mov
add
repz
adc
jle
mov
add
loope
add
cs
popa
pop
orb
lret
pop
push
arpl
and
incl
cmp
sbb
js
mov
xchg
mov
std
lock
in
std
add
test
call
push
push
adc
lcall
pusha
repz
pop
ljmp
jmp
jmp
inc
cli
mov
stos
imul
fs
or
clc
arpl
jmp
and
aad
xchg
iret
mov
xchg
lcall
push
xchg
cmp
xor
xor
jecxz
clc
aas
into
push
mov
js
jge
mov
mov
lcall
mov
sub
sbb
stos
xor
jnp
mov
aam
sbb
jb
sti
popf
mov
jp
push
sub
out
pop
test
icebp
cmp
sbb
std
mov
inc
mov
aaa
pop
mov
lcall
out
movsb
jb
xor
jae
imul
mov
sub
jle
jmp
dec
jg
nop
inc
popf
dec
rorl
push
mov
xchg
adc
xchg
inc
mov
subb
xchg
in
outsl
sahf
mov
lcall
inc
mov
fucom
inc
ja
lcall
int3
add
test
shl
inc
mov
pop
enter
mov
inc
and
pushl
mov
or
or
insl
add
dec
out
mov
les
decl
je
scas
push
pop
mov
lahf
insb
hlt
push
pop
mov
dec
clc
incl
xchg
lahf
xor
push
jae
psubb
js
sub
pushl
stos
dec
sbb
dec
or
pop
loope
jle
popa
movsb
xchg
idiv
jns
sbbb
and
lahf
push
imull
add
mov
outsl
mov
ljmp
movsl
inc
sbb
int3
stc
inc
iret
adcb
paddsw
lcall
int
inc
add
cmp
fcompl
sbb
xchg
mov
xor
stos
daa
js
push
shll
lock
ret
popf
xchg
mov
call
adc
out
insb
call
and
fs
popa
clc
jg
scas
movsb
insb
inc
mov
push
shlb
xchg
mov
rcrl
push
cli
scas
cs
pop
pop
jecxz
push
ljmp
jno
and
inc
inc
and
in
sahf
enter
cmpsl
and
incl
dec
test
push
pop
jge
or
scas
pop
dec
cld
outsl
ds
outsl
test
sub
subb
jg
loopne
and
fiadds
push
mov
pop
jmp
aad
dec
test
pop
or
sbb
or
mov
xchg
ljmp
push
mov
movsl
cld
in
or
inc
call
in
ret
rcr
xor
les
xlat
decl
dec
inc
imul
jp
xchg
push
and
scas
mov
lcall
add
imul
aas
lods
outsb
hlt
decl
add
clc
movsb
cld
stos
mov
cmpsb
xchg
cmp
mov
dec
cmpsb
push
mov
mov
aaa
jecxz
shr
cmp
mov
jecxz
sbb
scas
scas
orb
test
xor
ljmp
sbb
mov
add
mov
mov
mov
cltd
test
sbb
inc
add
setle
test
outsl
movsb
insb
sarb
cmpsl
jne
sti
loopne
sbb
cld
imul
es
out
arpl
sbb
push
mov
std
mov
jecxz
inc
loopne
push
ljmp
sub
adc
fcom
cltd
cmp
push
or
lcall
pop
arpl
dec
sahf
mov
cmp
fcmovnb
das
or
push
rclb
aas
mov
loope
and
ljmp
lret
xor
mov
mov
mov
test
jg
and
dec
out
dec
shl
dec
pop
inc
xchg
mov
add
xchg
sbb
push
enter
call
jns
test
push
mov
hlt
inc
xchg
incb
nop
test
decl
add
mov
mulb
jecxz
cli
push
jge
pop
xchg
addr16
sbb
decl
dec
test
inc
inc
subl
loop
cmc
push
jo
cli
stos
dec
arpl
popf
inc
decl
sbb
xor
outsb
mov
jbe
ret
mov
xor
scas
js
or
xchg
shlb
shl
sar
gs
xchg
ret
lods
inc
pop
xor
sub
incl
imul
dec
mov
out
addb
rcrb
ljmp
and
lods
inc
mov
sbb
popa
xchg
pop
loope
push
stos
and
mov
call
xchg
lods
mov
movsl
sti
and
sbb
pop
adc
xor
mov
sahf
mov
dec
leave
inc
lods
fxch
aas
cmp
test
pop
pop
lahf
xchg
sti
ficoml
mov
int3
ret
adc
xor
xor
lods
cltd
sbb
jnp
jmp
fsubrl
and
fdivr
sub
sbb
push
push
out
mov
push
es
pop
pop
mov
mov
idivl
or
xchg
les
daa
cmpsl
gs
stc
jmp
sbb
jmp
mov
sub
jge
in
push
shr
or
outsb
xor
rcr
mov
ja
aad
jg
lcall
movsl
rclb
mov
pop
pop
es
lcall
xchg
imul
repz
push
cmp
cltd
dec
clc
jg
adc
push
cmp
mov
xor
jno
xchg
test
outsb
pop
pop
sbbb
in
push
mov
push
ret
cmp
call
inc
ret
jns
rol
je
fdivs
ljmp
add
xchg
xlat
popa
push
sbb
mov
mov
decl
xchg
cmp
sbb
xor
adc
insb
loop
std
fidivrl
mov
cltd
mov
dec
lcall
or
mov
mov
jg
dec
push
pop
mov
adc
out
clc
pop
lock
cmp
call
dec
sub
shll
jg
mov
mov
imul
xchg
jge
mov
in
mov
mov
jl
gs
ljmp
mov
mov
or
imul
sub
sub
pop
hlt
inc
adc
mov
jg
iret
jns
mov
fisubrl
insl
pop
fnstsw
jb
cmp
paddusw
lcall
mov
pushf
mov
mov
inc
ss
sti
jge
xor
and
fcomip
ljmp
xor
iret
xchg
bound
or
push
inc
lcall
pushf
or
mov
push
mov
mov
push
jp
addl
imul
dec
ret
dec
xor
and
inc
aas
inc
loope
rcrl
push
xor
pop
inc
add
cmp
jmp
inc
sub
aas
movsl
imul
push
movsb
xchg
xor
test
push
inc
decb
mov
rclb
faddp
fstps
fcomps
dec
lret
leave
in
incl
sbb
adc
cs
fsts
les
jo
jb
aas
add
dec
jecxz
sbb
mov
je
in
adc
pop
xchg
into
mov
shrl
cs
jg
pushl
xchg
mov
insw
bnd
aam
fnstsw
cltd
loope
aaa
filds
jmp
dec
xchg
mov
adcb
push
test
sarl
call
inc
adc
int3
push
pop
scas
imul
add
jbe
and
cs
mov
daa
xchg
and
out
int3
pop
xchg
mov
pop
loope
gs
in
sub
or
stc
mov
in
xlat
cmpsb
xchg
xchg
repz
aas
xor
jmp
jo
pusha
mov
addr16
adc
shrb
mov
mov
int3
lret
out
inc
cmc
sarb
sbb
incl
sbb
call
out
jns
insl
push
cmpsl
in
jl
mov
pop
loopne
mov
push
decl
adc
or
push
mov
jmp
xchg
or
adc
hlt
cli
bound
cwtl
mov
push
out
shlb
inc
push
pushf
icebp
adc
mov
gs
sbb
pushf
test
mov
pushl
clc
dec
lock
popf
insb
lock
icebp
insl
push
jb
out
ficoms
js
adc
in
mov
jnp
jne
addr16
in
sahf
test
fwait
inc
xor
test
sub
jbe
mov
out
inc
xor
pusha
call
mov
insb
mov
in
cmp
push
mov
mov
rolb
sbb
adc
cmp
xor
jg
aad
mov
xchg
cwtl
stc
xchg
ljmp
scas
jo
dec
jmp
stos
jne
push
fldt
rclb
and
add
std
decl
mov
std
jno
jecxz
dec
imul
inc
lods
mov
je,pt
aaa
sbb
lcall
cmpsb
hlt
jg
push
aaa
pop
in
or
inc
sbb
mov
push
sbbl
repnz
mov
int3
lods
shrl
cmpb
jae
insb
jb
addl
incl
push
and
imul
push
jmp
or
mov
inc
cmp
mov
sbb
and
ficoml
sbb
dec
pop
inc
push
ja
fstpt
xchg
jb
hlt
in
dec
jne
cld
shll
mov
fidivs
push
int3
into
jo
jmp
lea
mov
dec
loopne
xchg
popf
mov
cmc
cld
dec
mov
pop
int3
adc
scas
daa
lods
jns
push
xchg
fs
mov
jmp
leave
jb
mov
mov
push
loopne
sub
icebp
ljmp
cmp
xor
ljmp
adc
dec
pop
sti
inc
sub
cmpsl
lods
mov
jle
fdivs
movsb
xlat
je
or
out
rcll
cmp
mov
fnstsw
fwait
in
ljmp
imul
mov
xor
outsl
divb
sub
inc
enter
dec
hlt
cmp
ljmp
push
mov
or
ja
sub
fisttps
adc
mov
sbb
movsb
aam
mov
enter
mov
jp
loope
xor
imul
out
cmp
sarb
dec
imul
lcall
cmp
orb
clc
jg
mov
and
cltd
inc
test
sub
decl
pop
mov
outsl
jge
cmp
in
mov
loop
pop
int3
push
push
inc
push
jns
aam
rcrb
push
cwtl
mov
push
loope
xchg
inc
push
ret
jmp
add
ret
mov
sarl
aas
sbb
mov
push
push
ud1
dec
nop
faddl
icebp
dec
push
lret
rorl
js
lret
sbb
call
outsl
mov
mov
xchg
and
adc
mov
shlb
lret
jg
aad
divl
insl
cmp
popf
mov
mov
sar
ljmp
jb
or
vmptrst
rcrb
mov
jnp
sub
jp
mov
push
adc
loop
sub
negb
std
je
addr16
pop
es
dec
clc
fisttps
adc
jle
pop
pop
ljmp
push
sbb
xchg
outsl
jb
xor
pop
adc
jmp
shlb
aam
aaa
cmp
sbb
pop
jns
inc
xor
ja
outsb
addb
mov
cwtl
mov
mov
ret
jmp
and
mov
jmp
inc
pop
ret
jb
xor
das
xchg
xlat
test
xor
outsl
sti
sbb
loope
mov
clc
lock
inc
out
mov
call
aas
mov
cmp
mov
ljmp
repnz
dec
icebp
cmp
decl
nop
shll
xor
jg
and
inc
mov
movsb
daa
insl
cltd
lcall
pusha
mov
dec
sbb
pop
adc
mov
orb
pop
lods
jp
or
xchg
jg
mov
ljmp
jnp
mov
popf
test
mov
push
jno
jp
sahf
adc
clc
dec
xor
dec
mov
aam
lret
adc
xor
daa
in
fidivrs
lcall
add
mov
fcmovnb
or
push
lods
cmpsl
call
mov
es
std
cltd
dec
es
pop
gs
jb
push
out
roll
lcall
arpl
adc
and
add
testb
aaa
in
jg
shll
lcall
sub
sub
xlat
arpl
push
out
or
dec
sbb
dec
push
jo
jecxz
lcall
les
int3
xor
dec
pop
fsub
xchg
pop
pop
xor
testl
or
lcall
push
das
jl
xor
imul
loopne
loope
pushf
cli
pop
aam
cwtl
mov
mov
ds
stc
mov
addr16
push
js
mov
push
stos
adc
movsb
stos
and
and
and
stc
popf
in
adc
lea
stos
out
jmp
popa
xchg
decl
ficoml
mov
lods
inc
cmp
or
cmp
enter
loopne
les
xchg
jl
mov
out
cmp
xor
cmp
jecxz
and
pop
push
pop
add
push
sub
lcall
das
mov
jno
fisttps
adc
insb
stos
lret
mov
or
pop
mov
sub
pushl
and
add
outsb
ss
push
sbb
dec
add
hlt
cli
add
adc
mov
pusha
ss
pop
inc
pop
das
outsb
dec
inc
fldenv
scas
or
adc
jg
mov
imul
fadd
lea
lret
in
call
les
add
andl
pop
or
jg
jmp
lret
sarb
cli
addb
leave
cmp
cwtl
jmp
cmp
jecxz
jge
out
mov
xchg
mov
jbe
cmp
lcall
mov
out
dec
lods
mov
lret
sbb
fs
shl
lcall
xchg
mov
mov
dec
notb
pop
and
jle
enter
das
test
jge
addr16
popw
stos
ss
int3
pop
inc
mov
inc
aam
push
lods
pop
lods
loop
mov
lods
xchg
inc
mov
jmp
cli
cltd
dec
imul
dec
inc
push
and
jmp
in
ds
jp
inc
pop
lods
divl
or
lock
cld
jg
sarb
data16
pop
jae
clc
jecxz
cmpsb
cmc
adc
xor
lcall
jl
out
sub
and
lcall
sar
aas
and
out
repnz
jge
js
sbb
out
push
sbbb
or
dec
jnp
jg
jmp
dec
fs
pop
gs
pusha
ljmp
mov
dec
add
push
shrb
lods
nop
jns
dec
xchg
pop
hlt
pop
addl
and
mov
jg
cmp
inc
sbb
movsb
test
mov
mov
lahf
js
mov
fistl
and
testb
add
jle
pop
lcall
lods
dec
xlat
subl
stc
ljmp
rol
add
repnz
pop
or
call
pop
aas
pop
pusha
jle
xchg
outsl
pop
decb
push
jbe
in
or
das
sarb
pop
adc
sbb
xor
stc
push
xor
jae
xchg
pop
cmp
call
dec
aaa
cmpsb
sub
cmpsl
int3
adc
sti
pop
push
and
cmpsl
lods
test
xchg
imul
jno
cld
and
imul
ljmp
mov
inc
jmp
das
fistpll
sti
or
sarb
jb
dec
mov
xorl
cmp
mov
mov
fsubs
test
add
stos
mov
fcomip
shrl
add
mov
xor
lret
std
xchg
jp
mov
rolb
jb
inc
data16
sub
lock
jbe
call
sbb
movsb
mov
or
or
jge
mov
lcall
sub
or
mov
dec
sub
pop
xchg
incl
pushf
aad
or
test
ret
push
pop
loopne
bnd
es
mov
test
cmovb
mov
test
cli
cs
jne
sti
iret
int
dec
mov
mov
das
push
loope
cmp
mov
aas
push
movsb
dec
sub
test
push
push
sub
and
jo
sbb
push
mov
push
ljmp
adc
dec
arpl
xchg
mov
push
outsb
cld
inc
jp
imul
mov
imul
pop
stos
int
out
pop
loope
push
loope
push
push
aaa
xor
mov
decl
test
cmp
enter
jmp
fcomip
xlat
test
cmp
xor
sbb
ljmp
inc
mov
lods
inc
inc
dec
stos
mov
adc
add
sbb
adc
cmp
push
mov
dec
jb
pop
xchg
inc
dec
push
mov
incl
lods
and
leave
sub
push
cmp
cmc
adc
je
add
outsb
and
jmp
stc
push
jnp
fnstenv
mov
js
fcmovnbe
aaa
cltd
popa
dec
jcxz
in
ljmp
cmp
jnp
xchg
pop
in
xchg
sbb
jle
push
push
xchg
and
xor
ret
jg
push
xchg
pop
push
jg
lcall
fiadds
test
shrb
lock
xor
jl
insl
dec
inc
pop
fdivr
pushl
in
cmp
insl
or
enter
dec
test
fstps
aaa
push
jmp
mov
std
mov
sub
ss
shr
jecxz
fisubl
mov
scas
push
fnsave
cs
inc
jns
mov
dec
pop
dec
pop
pop
rcrl
mov
xchg
ss
ja
ret
fs
es
jbe
inc
in
xchg
mov
ret
lcall
inc
unpckhps
aaa
jmp
pop
rcll
cmp
jp
lahf
mov
loope
push
fwait
arpl
xchg
cmpsb
xchg
loope
in
xlat
jp
sahf
add
mov
cmpsb
push
jb
dec
inc
rcrb
or
sahf
popa
cmp
incl
popf
jle
pop
scas
bound
shlb
cli
fucom
xchg
xchg
mov
cmp
divl
repz
pop
add
mov
pop
loopne
inc
cmc
aad
mov
add
pushl
xchg
mov
cmp
je
les
jecxz
or
cmp
shll
xor
cwtl
cmc
scas
jmp
int3
xchg
popa
jb
and
push
mov
or
bound
stos
push
incb
sub
cmpsl
and
test
and
mov
lds
dec
popa
xchg
inc
and
inc
and
mov
in
call
stos
loopne
jno
xor
pop
jp
ja
mov
test
dec
and
mov
lods
imul
jp
sarl
xor
cmp
mov
mov
cmpl
stos
lret
or
aas
aam
adc
xchg
mov
cs
movsb
lds
data16
xlat
pop
ret
mov
mov
out
cltd
clc
mov
mov
push
fidivrs
sbb
mov
dec
adc
jne
decl
pusha
test
mov
cld
add
push
sbb
out
and
xor
pop
fs
sub
push
mov
sar
call
insb
pop
daa
cld
lret
rcr
and
jb
mov
ss
test
and
mov
pop
loope
jg
or
scas
mov
push
fistpl
inc
xchg
repz
adc
pushl
sbb
cwtl
dec
data16
ret
lods
sub
movsb
mov
call
pop
mov
movsb
mov
in
pop
add
loop
mov
push
dec
arpl
or
fs
and
popf
orl
incl
push
test
cmp
pusha
xor
ja
cwtl
add
pop
nop
pop
lods
xchg
adc
mov
xchg
mov
movsb
add
adc
inc
icebp
jmp
icebp
jecxz
daa
mov
cmp
mov
fnstsw
cmp
in
inc
cwtl
in
lea
loope
cwtl
push
lcall
call
jp
into
cmp
mov
hlt
fwait
jg
add
imul
push
xchg
inc
movsl
inc
sub
jbe
das
add
pushl
jno
jecxz
mov
pop
adc
dec
repz
shr
adc
sbb
mov
inc
ljmp
or
push
int3
sbb
cs
int3
bound
addr16
jg
jmp
loopne
xor
out
sub
sbb
movsb
bound
jmp
mov
scas
test
xchg
out
out
cmp
test
into
add
push
cmpsl
insl
mov
decl
mov
stos
lcall
mov
mov
inc
scas
mov
mov
popa
repnz
scas
jg
out
int3
push
sti
fdivrl
ljmp
repnz
icebp
pop
jl
out
stos
arpl
dec
insl
imul
adc
lret
jg
pop
icebp
out
pop
mov
cmp
fwait
mov
cli
dec
jg
sub
push
sub
and
add
push
out
push
sbb
sbb
addr16
js
adc
push
adc
insb
cli
push
loopne
or
les
leave
lods
mov
movb
jns
leave
lods
xchg
push
or
cmc
mov
pop
lret
push
call
mov
cmp
stos
sbb
stc
stos
jne
xlat
push
jns
cmpb
inc
pop
pop
mov
xor
pusha
call
ret
cs
inc
out
fwait
jmp
pcmpeqb
adc
or
sarb
sar
add
das
orl
cli
push
scas
jecxz
pushl
cwtl
add
mov
test
in
cvtpi2ps
test
dec
cmovp
in
or
adc
jnp
mov
cmpsl
jp
cltd
cld
test
les
addr16
data16
aas
imul
icebp
xor
jb
mov
out
aaa
cld
jmp
pushf
jge
inc
pop
rcl
scas
xor
add
mov
xchg
sti
iret
mov
ja
cli
jmp
pusha
mov
imul
xor
jg
inc
sub
call
mov
enter
pop
lcall
jns
dec
ljmp
aad
pop
push
addr16
cmp
mov
dec
fstpt
int3
fchs
add
loope
lahf
cli
pushl
ficoms
aad
cmpsb
mov
add
fisttps
add
insb
outsl
in
add
clc
or
iret
sbb
sub
ud0
call
xchg
xor
fbstp
or
repnz
aam
cmpsb
jmp
mov
sbb
decl
inc
adc
out
js
inc
xchg
sbb
stc
arpl
and
jmp
shrb
hlt
xor
inc
mov
sbb
add
mov
fcmovnb
mov
jne
fwait
xchg
or
xor
addl
call
mov
or
mov
jecxz
repnz
gs
lcall
fmuls
or
and
out
jns
hlt
push
adc
test
xchg
outsl
rclb
and
cmp
in
pop
sarl
xlat
jo
xor
leave
test
imull
mov
lock
add
jg
or
lods
dec
jo
stos
stos
mov
je
push
in
pop
xchg
xor
sbb
mov
dec
mov
test
jg
adc
stos
popa
shll
out
cmc
iret
inc
lds
fidivs
jmp
cmp
and
pop
js
pop
cmpb
in
scas
lea
cmpsl
jmp
jne
fcmovb
test
inc
out
cmc
les
sahf
push
pslld
add
mov
call
mov
sti
and
aad
cmp
xor
pop
loopne
testb
mov
mov
inc
roll
decl
loopne
xor
in
stos
cmp
andb
cmp
fwait
jnp
sar
fcomip
leave
mov
cld
ficomps
or
mov
sub
pop
add
cmp
lods
negl
decl
sbb
adcb
iret
shrl
xchg
push
lcall
ds
and
sub
xlat
mov
mov
jg
and
sub
jns
or
mov
jg
stc
xchg
jb
adc
xor
pop
sub
push
adc
or
jl
outsl
add
jmp
xchg
pop
jmp
cmp
movsl
inc
sbb
test
cli
ss
in
decl
push
loope
ficompl
cmp
or
jge
loop
mov
or
push
dec
sub
xor
inc
test
pop
jbe
cmp
mov
cmp
fwait
sub
cli
push
fistl
jmp
inc
out
fcoml
mov
and
or
inc
pop
shrb
cs
fcomip
xchg
cmp
lret
adc
out
mov
aas
jge
pop
daa
int
add
loopne
lret
jg
mov
cmp
fbstp
cmp
sti
pop
fwait
mov
xor
and
jmp
or
lcall
pop
shlb
mov
cltd
add
jle
mov
or
daa
add
and
add
cli
imul
lea
fists
adc
inc
mov
hlt
sbb
call
xchg
repz
rcll
cs
mov
lea
mov
fcmove
dec
xor
dec
ja
test
inc
mov
aad
push
icebp
je
add
xchg
scas
xchg
inc
ret
cmp
ret
jl
or
ljmp
cmpsl
loope
inc
std
or
mov
lds
push
iret
add
cmc
cmp
xor
call
xchg
scas
rorb
push
dec
in
cmp
fs
push
int
mov
mov
xor
pop
push
xor
scas
pusha
call
dec
int
insl
mov
cmp
pop
lds
sub
clc
cli
rclb
xchg
ror
outsb
nop
and
decl
mov
dec
fstl
xor
mov
inc
jne
hlt
loope
call
dec
push
sbb
loopne
xchg
push
int3
mov
sub
push
xor
call
clc
pop
pop
cmc
mov
call
and
dec
mov
out
int3
jg
mov
arpl
ret
and
loopne
lcall
push
mov
lds
xchg
or
mov
gs
dec
ja
ret
fwait
dec
stc
adc
inc
mov
pop
ljmp
or
shrl
dec
out
mov
xchg
pop
rolb
popf
decl
push
push
jl
vpcmpeqb
xchg
sub
mov
fnstsw
inc
outsl
ljmp
add
add
and
inc
push
mov
dec
pop
stos
jns
imul
lods
jnp
xchg
adc
mov
push
push
mov
enter
lods
lcall
push
in
xchg
fidivs
in
hlt
in
hlt
stc
inc
mov
sbb
loop
sbb
pop
or
mov
lcall
ds
dec
add
sbb
and
xor
push
ss
das
test
es
fildll
insl
push
int
sub
incl
add
dec
mov
fcmovbe
int3
notl
enter
inc
add
jl
dec
jge
mov
call
in
jmp
loope
sahf
inc
or
cltd
sbb
jmp
dec
ja
addr16
xlat
sub
inc
mov
add
pop
pushf
movl
loopne
sub
mov
dec
cli
cmpsl
fwait
add
jmp
fstpl
push
repz
popf
lods
pop
stos
test
dec
jbe
imul
sub
push
xor
std
js
imul
jns
xor
in
pop
mov
push
jle
loop
out
jge
aaa
test
mov
and
ja
pop
leave
sbb
in
inc
aam
xor
stos
sbb
sar
fsubs
adc
inc
dec
stos
incl
xor
adc
dec
ret
loop
sbb
inc
sbb
pcmpgtd
mov
test
jg
out
outsb
outsb
stos
xchg
mov
mov
jl
push
sbb
add
decl
in
jno
mov
cwtl
ss
push
mov
lds
shl
push
pop
in
test
add
outsl
stos
rolb
outsl
push
inc
int3
inc
add
jl
mov
jmp
int3
hlt
data16
mov
aas
icebp
jo
insb
repnz
push
inc
negl
mov
fwait
push
inc
inc
jg
cld
cmpsb
adc
lret
cmpsl
cmp
add
pop
popf
adc
fwait
jno
incl
gs
js
adc
ja
lahf
push
lcall
mov
call
outsb
mov
cmp
push
push
jge
mov
pop
xchg
push
push
xor
nop
in
into
fwait
test
iret
das
mov
es
xchg
jp
loope
jmp
pop
fwait
and
sub
jecxz
ljmp
push
xchg
jecxz
xorb
dec
lcall
adc
or
mov
mov
cmp
add
adc
ds
or
push
mov
lcall
in
xlat
and
into
adc
inc
in
inc
jl
jp
jno
pop
rorb
outsl
jmp
xchg
xor
sbb
pop
lret
and
call
rcll
pop
ss
mov
or
pop
aam
cmp
popa
insb
inc
call
jmp
data16
leave
pushf
mov
aaa
mov
mov
mov
in
roll
es
dec
pop
xor
xor
jg
pop
fwait
cmp
mov
js
inc
jae
ret
cmp
cmp
iret
sub
or
push
nop
mov
bound
incl
pop
xor
test
popa
mov
dec
mov
or
adc
mov
test
mov
xor
rcr
pop
jge
jo
push
and
mov
push
push
cmp
jl
push
test
stos
mov
jge
fisttpll
mov
inc
pop
mov
xor
rcrb
sti
rep
push
mov
adc
mov
jns
mov
mov
cwtl
inc
xchg
xorb
cld
pushl
sarl
jb
or
adc
cmp
ljmp
cli
add
dec
mov
mov
out
arpl
mov
sar
ret
cmp
in
pop
cmc
fisttpl
es
scas
imul
mov
and
lcall
aad
pop
mov
mov
pop
or
cltd
pop
std
repz
xchg
ljmp
and
fldenv
sbb
test
jae
icebp
stc
shll
ret
in
xor
and
popf
pop
repnz
insl
jg
and
not
sub
push
and
scas
mov
ljmp
jp
imul
adc
push
pop
negb
push
pop
pushf
add
ja
scas
ja
sarb
push
adc
xchg
not
ljmp
sbb
mov
adc
cmp
lret
xor
push
adc
out
mov
scas
pushf
cmp
sbb
std
mov
ljmp
shlb
add
imul
fldenv
repz
orb
lret
ret
jns
lret
mov
loopne
in
cmp
ja
mov
clc
sahf
subl
std
ret
incl
dec
cmp
ja
ds
mov
jo
lock
imul
pushl
mov
jae
push
pop
mov
orb
leave
or
std
pushl
sti
adc
lds
mov
sub
mov
test
push
ret
or
push
sub
xor
out
sub
sbb
mov
mov
out
ja
inc
mov
mov
out
call
sub
ret
inc
jb
sbb
xchg
xor
jg
les
mov
inc
inc
bound
mov
jns
test
fwait
mull
iret
insl
and
pop
xor
loopne
cltd
aaa
stc
loope
jmp
mov
mov
lahf
mov
sub
sbbb
clc
push
ficoml
mov
add
pushl
sub
cmpsb
ss
sub
pushf
ret
ljmp
xlat
push
push
lret
push
sbb
sti
sub
inc
sub
adc
scas
jge
mov
cltd
sub
mov
pusha
popa
xor
and
cmpsl
or
inc
or
in
sti
ret
lds
mov
pop
push
flds
mov
mov
imul
mov
mov
jbe,pt
push
pop
xchg
mov
push
jmp
stos
incl
cld
aam
inc
lds
jb
cmp
mov
data16
divl
sub
lea
xor
dec
dec
add
push
aas
sahf
fwait
into
incl
fld
mov
xorl
dec
pop
push
sbb
sbb
shlb
into
mov
std
ljmp
mov
ds
sahf
out
dec
xchg
mov
ljmp
or
inc
jo
mov
mov
mov
fcomip
lcall
xchg
out
es
test
sbb
cmp
jae
div
push
adc
pop
std
ljmp
jmp
shlb
rcll
fcomps
mov
adc
into
call
loop
cmp
jmp
data16
out
xchg
sub
sub
ljmp
mov
or
insl
push
jae
pop
mov
dec
ss
xlat
inc
xor
dec
loop
cs
clc
cmp
ja
jl
sbb
mov
cmpsl
xor
push
xor
xor
add
lea
inc
shll
cli
or
aaa
out
stos
mov
mov
sub
add
fdivs
lcall
mov
pushl
xor
xchg
dec
mov
sub
hlt
jnp
hlt
mov
mov
cld
rclb
dec
stc
dec
arpl
ljmp
push
push
sbb
jle
call
pop
fcoml
lea
mov
sbbl
push
mov
and
jne
leave
clc
aaa
push
add
jmp
and
jge
xchg
mov
pop
rcll
dec
push
jle
jmp
sub
decl
mov
cmp
fidivl
hlt
inc
decl
push
ja
dec
into
lcall
and
leave
sbb
xchg
pop
xor
out
aam
in
xor
mov
xor
jno
pop
repz
decl
imul
inc
je
dec
pop
pop
in
xor
dec
fs
pop
dec
outsl
sti
sub
in
mov
adc
cld
stos
push
insb
sti
mov
and
pushl
dec
je
fsubrs
mov
xchg
push
sarb
cli
loop
in
xor
orb
pop
clc
push
xchg
aam
sbb
jmp
lods
xchg
mov
mov
add
fwait
sbb
sub
icebp
call
or
decb
adc
xchg
pop
mov
dec
es
sbb
jbe
cmp
lcall
adc
and
adc
outsl
rolb
push
mov
inc
enter
jmp
fisttpll
pop
mov
pushf
pop
aad
out
xchg
sarl
adc
push
adc
daa
or
push
cmp
mov
dec
dec
mov
xchg
iret
add
lea
sbb
xor
pop
adc
cmpl
in
mov
mov
ret
incb
jle
dec
loope
lret
enter
inc
and
frstor
decl
dec
test
cwtl
out
rcrb
lret
not
xor
mov
jmp
and
jp
sbb
imul
and
incb
pop
mov
inc
xchg
mov
jmp
adc
cmc
mov
out
fldcw
jnp
scas
fst
lret
push
outsb
xchg
imul
lods
mov
dec
subb
repnz
adc
fadds
mov
and
rclb
in
inc
test
mov
jg
inc
adc
or
mov
sbb
mov
jns
pop
xchg
ljmp
das
inc
arpl
jle
pushf
xchg
mov
add
orl
mov
sub
lcall
sub
imul
xchg
lock
fists
movsl
adc
call
mov
iret
std
shrl
xor
xor
dec
inc
sub
les
jo
aaa
or
cld
nop
push
inc
jb
inc
call
xchg
mov
fldenv
fidivl
and
ss
in
bound
or
pushl
pop
scas
mov
aas
sbb
mov
icebp
xlat
fisubl
out
sbb
inc
inc
dec
mov
cmp
data16
int
loop
cltd
int3
and
mov
outsl
xor
jmp
andb
mov
fucomp
add
sarl
fwait
dec
jle
mov
cld
cmp
cmp
aaa
xchg
or
aad
push
loopne
ja
sti
inc
icebp
mov
fmuls
pushf
and
dec
sub
jecxz
or
es
clc
ss
mov
sar
push
in
fwait
shrl
in
loopne
les
pop
dec
aaa
sbb
pusha
jg
jb
push
lock
or
or
and
lret
popf
xor
and
in
out
jne
pop
ljmp
clc
cmpsb
adcl
int3
mov
xchg
loope
mov
les
mov
cmp
adc
shll
lcall
xchg
loope
xlat
xor
push
arpl
xchg
inc
jne
xor
lcall
mov
icebp
int3
push
andb
pusha
stc
sahf
out
aad
out
addr16
test
repnz
push
push
int3
jmp
inc
xchg
push
bound
fdivrs
push
xor
pop
xor
xchg
movsl
imul
push
sarl
ljmp
mov
xchg
fidivrs
pop
out
and
xchg
movsl
pop
loope
lock
cli
incl
arpl
popf
jno
mov
push
int3
dec
jecxz
mov
or
pop
sbb
push
icebp
dec
jge
popf
cmpsl
fildl
rcr
test
sbb
sar
call
sub
push
jae
cmp
mov
rolb
mov
lea
lods
mov
cs
cmpsb
and
add
cmpsb
sub
pushl
mov
sbb
lock
xchg
pop
fmuls
call
push
into
xchg
std
repnz
xlat
cltd
test
jnp
arpl
mov
add
jmp
hlt
bound
pop
and
sbb
add
nop
mov
mov
sar
pushl
mov
add
add
sub
ret
aad
lahf
bound
cmp
cmpsb
jg
sbb
mov
scas
js,pt
loop
loop
clc
popl
fwait
roll
call
cmp
push
in
add
sub
rol
fnstenv
out
sub
in
lea
icebp
sbb
jecxz
movsb
jg
jo
push
push
incl
mov
lock
jne
adcl
jge
and
ja
or
sti
in
pop
dec
push
push
inc
sahf
in
sahf
adc
ljmp
cmp
iret
push
cwtl
loope
gs
pop
repz
mov
movsl
inc
adc
cmp
add
sbb
mov
lahf
push
jbe
pusha
rcrl
pusha
outsl
inc
add
jmp
repnz
rcl
cmp
imulb
mov
cli
aas
fimuls
add
sub
jo
daa
imul
cmpsl
ja
xor
cmp
sbb
cli
in
lret
outsl
inc
lcall
mov
jo
pop
imul
jle
into
push
cmpsb
and
gs
pop
repz
mov
aad
sub
xor
filds
cmpsl
fwait
in
into
jns
cmp
mov
imul
adc
in
pop
jnp
cmc
fcmovb
xlat
inc
xor
cld
ljmp
nop
mov
cld
adc
pop
ljmp
push
aaa
adc
incl
or
test
out
push
decl
or
xor
add
push
loopne
push
xorl
mov
inc
add
add
xchg
jne
sbb
jmp
dec
pop
popa
inc
sub
icebp
xor
or
aaa
mov
mov
mov
test
push
xchg
dec
cs
cmp
and
adc
aad
pop
or
int3
jae
outsl
sar
decl
push
cmp
cmp
test
fldenv
add
pop
in
psubd
inc
sub
shr
mov
mov
push
cwtl
jno
mov
xor
insl
loopne
call
stos
jge
jb
or
mov
rclb
or
push
lods
mov
ret
cmp
in
jno
inc
es
jmp
sub
sbb
cwtl
sbb
xchg
dec
aam
sub
lcall
mov
movsl
icebp
out
pop
cmovns
fdivs
cmpsb
lea
cmpl
jno
jecxz
hlt
push
xadd
xchg
test
sbb
call
aas
mov
outsb
rcrl
test
xor
mov
add
xchg
into
insb
mov
xor
lcall
xchg
sub
lret
xor
mov
xor
or
xchg
lea
or
jno
dec
pop
xor
pop
and
pushl
cld
mov
int3
xchg
enter
add
add
jle
mov
into
push
std
sti
add
je
xlat
push
xchg
and
sbb
pop
cmp
jo
inc
inc
repz
call
dec
pop
adc
or
push
jl
push
mov
lods
addb
xor
scas
adc
adc
xchg
lods
pop
mov
or
imul
pushl
mov
mov
out
pusha
dec
mov
repnz
je
cmpsb
mov
inc
push
sar
aas
mov
xchg
adc
mov
test
xchg
or
mulb
testb
add
pop
mov
mov
in
divl
ds
jmp
dec
adc
ficomps
lahf
dec
notl
xchg
xor
pushf
ficoms
pop
cltd
imul
cmpsb
icebp
fistps
stc
sarb
dec
adc
stos
lcall
mov
stc
sub
rcl
cmp
xchg
mov
sub
das
clc
decl
push
cmp
test
add
or
rclb
cmp
ljmp
mov
outsl
xor
xor
xchg
test
push
inc
insb
fwait
push
decl
je
jl
cwtl
call
test
jg
repz
sub
lret
sti
adc
out
xchg
mov
jnp
scas
ds
mov
out
icebp
sbb
xlat
fstpt
lret
xchg
fs
or
outsl
call
cmp
mov
sub
js
fisttpl
xchg
adc
into
cmp
int
out
test
and
clc
pushl
pushf
xchg
imul
cld
popa
push
nop
out
sbbl
and
lret
xor
hlt
mov
push
daa
sub
mov
xchg
mov
inc
xchg
stos
push
push
or
rcrl
sub
sbb
jmp
cmp
and
sbb
sbb
fdivrp
mov
xor
mov
hlt
xchg
inc
movsb
cmp
stos
addr16
loopne
cli
les
gs
lods
lods
dec
fisubl
pushl
xchg
movsb
popa
out
inc
jns
int3
xchg
test
sub
clc
mov
cmc
jne
std
stos
push
popa
movsl
xchg
adc
push
mov
xchg
and
add
jg
mov
subb
shrl
jecxz
cmp
mov
das
sar
das
gs
jbe
mov
into
xchg
and
daa
xchg
inc
lret
sub
fdivs
jnp
rcll
rcr
jmp
fs
mov
andl
mov
addr16
incl
cmp
dec
inc
or
lods
inc
push
xor
popa
sub
dec
inc
cs
imul
jno
js
pop
insb
sub
fisttpll
lods
outsl
test
and
scas
and
mov
sahf
sahf
aad
mov
decl
adc
aaa
js
dec
inc
insb
rcr
or
fisttpll
icebp
iret
or
xchg
sbb
inc
jnp
cmp
jmp
sbb
sub
dec
adc
pop
mov
outsl
loop
scas
dec
in
pop
test
push
sahf
jmp
xor
icebp
add
mov
lds
hlt
movsb
mov
sbb
inc
jg
loopne
jmp
sub
mov
mov
in
mov
cmp
lods
ss
mov
or
push
mov
insl
lea
mov
pop
aad
mov
add
cld
sti
xorb
xchg
adcb
jg
inc
lea
xor
and
div
scas
adc
stos
fs
aam
aad
jnp
mov
incl
loop
popf
pusha
xchg
push
pop
nop
mov
into
jo
xchg
dec
jg
mov
xchg
push
test
push
jae
or
dec
xchg
pop
cld
stos
or
and
inc
sbb
cmp
xchg
fldcw
sub
inc
incl
std
cld
fcmovbe
mov
sub
lea
stc
push
cld
lods
jp
lret
loope
jg
jns
fisubrl
lret
aad
enter
rorb
addl
mov
cwtl
xor
fdivrl
cmp
inc
loop
mov
mov
pushl
fnstcw
enter
sarb
xor
add
mov
mov
call
xchg
sbb
xchg
lea
mov
sub
iret
aas
scas
sbb
sbb
xchg
jne
jmp
pushl
iret
adc
xchg
sbb
push
add
les
loopne
stos
xor
movsb
ljmp
incl
jmp
sbb
aad
out
xchg
cli
shll
inc
mov
push
incl
jnp
mov
cld
jbe
jo
js
nop
sbbb
dec
push
pop
pop
repz
loop
mov
mov
repnz
arpl
in
add
ficoml
rorl
loop
addb
lcall
sub
jge
sbb
or
mov
sbb
push
cld
dec
mov
scas
pop
mov
sbb
imul
je
cmp
xchg
cmpsb
fsubrs
push
sub
insb
mov
or
imul
aas
test
loopne
pushl
and
push
xchg
jnp
lea
or
jns
mov
mov
idivb
cmc
clc
clc
xchg
pop
stos
out
repz
ljmp
inc
sahf
loopne
xchg
dec
push
subl
movsb
clc
test
aad
add
jno
cmp
jmp
mov
mov
xchg
adc
lret
sbb
or
lahf
pusha
shrb
dec
or
mov
mov
cld
out
jae
test
icebp
mov
xor
rorb
std
push
out
ds
into
test
xor
test
scas
aas
xchg
testl
xchg
push
and
pushl
stos
inc
and
outsb
cmp
out
sub
adc
sub
pop
pushl
push
sbbb
and
lods
inc
inc
fidivrs
decl
jae
add
xchg
out
inc
out
ds
sub
fstpt
pushl
shll
fnstcw
in
lds
jge
fs
scas
ljmp
sub
sub
lcall
sarl
jns
xor
sbb
cmpb
daa
cli
pop
in
sub
fstl
rorl
test
cld
xlat
bound
test
outsb
call
sti
repz
or
inc
sub
adc
das
push
std
xlat
push
mov
or
jg
cmc
fxam
jns
fsubl
jge
fs
shlb
pop
lea
sar
ljmp
iret
inc
stos
mov
mov
lahf
ret
jbe
in
clc
push
pop
loop
xchg
push
xchg
mov
aas
inc
cli
cltd
call
ds
adc
icebp
xchg
scas
outsb
cmpb
arpl
dec
jno
mov
insb
gs
call
fcompl
negl
pushf
pop
mov
cmp
mov
fildl
add
cmpl
ret
lock
icebp
mov
pop
sub
mov
ljmp
test
push
mov
shrl
rcl
and
jae
out
add
rorb
adc
pop
notl
fisttps
add
jge
and
and
data16
decl
sbbl
mov
bound
sahf
sub
xor
push
movsb
sub
scas
dec
pop
inc
mov
out
sbb
mov
fwait
push
adc
call
cmpb
xorb
test
ljmp
mov
mov
imul
lea
or
mov
dec
jns
xor
ud0
cld
jbe
add
xchg
mov
mov
out
inc
call
push
adc
int
arpl
push
cmp
les
in
scas
test
push
nopl
push
and
cmp
cmp
jmp
movsb
mov
jg
inc
mov
test
popf
aam
push
mov
hlt
mov
scas
clc
dec
mov
sar
mov
insl
ficoml
insb
push
adc
repz
ljmp
out
testl
stos
mov
cmc
jae
adc
mov
out
jl
inc
or
pop
mov
lea
sbb
std
call
add
mov
enter
dec
xor
pop
cli
arpl
add
pushl
xor
jb
lods
pop
push
jne
cmp
das
dec
adc
mov
jbe
mov
xchg
inc
fists
adc
bound
mov
mov
les
jb
cmpl
adc
jb
jmp
mov
scas
mov
scas
adc
add
xor
xor
mov
cmpsb
pop
push
test
inc
jne
fwait
mov
negl
loop
je
sbb
ret
popa
bound
or
cmp
add
lcall
add
xlat
cmpsl
mov
pusha
xchg
mov
lea
sub
ljmp
push
mov
sub
movsl
cmp
decl
pop
or
xchg
mov
aad
cld
lret
xchg
dec
mov
clc
movsb
daa
mov
jge
out
fistl
and
dec
into
ret
push
test
dec
pushl
xor
adc
xchg
scas
notl
inc
ret
pop
nopl
inc
pop
sub
jge
rcrb
pop
decl
enter
pop
loope
pop
leave
jle
mov
xlat
xchg
pop
incl
shl
jb
lods
jns
jns
pop
outsb
sbb
pop
stc
iret
mov
mov
jg
push
jg
dec
popf
sahf
shll
aam
inc
test
ljmp
repnz
jmp
scas
lret
push
mov
shll
adc
sti
pop
dec
add
in
icebp
call
int3
clc
outsb
lcall
testl
stc
addr16
out
stos
loopne
shr
sub
pop
pusha
xchg
lret
daa
xchg
outsl
pop
pop
push
sti
jmp
roll
sub
lods
and
fs
test
andb
dec
call
mov
subb
mov
jmp
or
lahf
ljmp
stc
mov
lea
ret
in
push
in
xor
loopne
ds
outsb
lods
stos
cmc
adc
fdivrl
cmc
pop
push
int
cld
decl
movsb
pushf
arpl
mov
movsb
fdiv
pop
mov
jg
push
or
stc
fistps
mov
and
mov
loope
fstpt
or
mov
mov
mov
js
out
cmc
push
es
scas
mov
sub
imul
loopne
out
pop
mov
jae
sbb
call
rorb
lret
or
add
dec
xor
push
sti
std
mov
jg
add
jae
jns
jmp
andl
jae
push
lds
pop
push
pushf
mov
gs
jge
dec
cmp
ss
add
xchg
in
jmp
nop
pop
repnz
cltd
leave
sahf
ljmp
fisttps
pop
sbb
incl
sub
fs
pop
into
mov
popa
lret
fs
push
roll
mov
and
es
lret
and
icebp
lock
ret
mov
sub
les
stos
adc
sub
mov
jecxz
push
mov
test
xor
hlt
outsl
int3
shlb
in
xor
or
mov
fldcw
xchg
insb
jg
push
je
popf
in
movsb
jl
incl
jb
mov
mov
inc
aam
inc
pop
pop
pop
into
loope
in
add
lcall
dec
das
sahf
sub
adc
repnz
dec
sub
ljmp
dec
fstpt
cmpsb
xchg
pusha
cmpb
ret
xchg
movsl
dec
cld
pushl
or
inc
sbb
inc
push
jg
cmp
in
xchg
adc
mov
mov
stos
loope
or
jge
cmp
jmp
jnp
call
xchg
outsb
sbb
in
nop
jg
xchg
orl
cmp
inc
mov
sub
add
mov
mov
mov
jb
lret
mov
pop
loope
orb
mov
adc
sbb
cmp
call
dec
jl
test
sub
mov
push
xchg
pop
test
mov
enter
xchg
sti
lcall
shr
and
movsb
ffree
jne
inc
bound
popf
cmp
or
sbb
jg
stos
lret
dec
cli
and
and
sbb
mov
mov
sub
sub
cmp
leave
xchg
les
cltd
pushl
outsb
pop
scas
jg
cmp
inc
mov
in
loopne
xor
dec
xchg
xor
jmp
loop
and
mov
push
xor
pusha
jo
push
and
xlat
shrb
jnp
adc
insb
jmp
imul
xor
sbb
jecxz
dec
dec
jb
cmpsl
je
subb
inc
pop
xchg
popa
xor
add
je
pop
cmp
stos
inc
xchg
fwait
shlb
push
movsb
sahf
clc
mov
cmc
sbb
mov
decl
or
jae
sub
filds
cmp
fwait
and
push
pop
insb
or
lret
sbb
stc
fldenv
incl
cli
rclb
ja
ret
push
addr16
mov
cltd
ret
adc
mov
or
cmp
jg
in
enter
das
cs
mov
pop
jmp
ds
das
ja
xor
mov
ret
cld
fisubs
and
sub
movsl
jb
out
sbb
sub
repz
pop
sub
pusha
out
xor
addr16
cltd
adc
fildll
out
out
push
dec
imul
pop
lods
rcll
mov
rolb
popf
scas
xchg
pop
adc
fwait
jmp
sarl
insb
add
dec
shr
icebp
pop
sbb
jmp
enter
leave
cmpb
push
mov
jg
test
into
imul
mov
int
or
inc
inc
fstpt
adc
daa
in
xchg
pushl
mov
xchg
mov
cmp
fcmovb
dec
ljmp
lcall
xchg
sarl
mov
inc
xchg
dec
bound
mov
ljmp
push
scas
fisubs
cld
mov
mov
jo
or
incl
popf
mov
sub
jae
hlt
mov
lcall
adc
sbb
iret
lcall
cmpsl
adc
sbb
leave
or
loope
mov
filds
aaa
and
push
cmp
jg
xchg
cs
mov
push
es
cmp
sbb
call
jge
leave
push
scas
decl
hlt
pop
xchg
aas
jg
or
addr16
addps
int3
inc
jbe
leave
dec
int3
mov
ljmp
mov
das
mov
adc
ss
sbb
pop
lret
aad
push
loopne
ljmp
les
rclb
call
or
call
cmp
loope
push
add
push
jecxz
xchg
shlb
and
ja
fbstp
sub
push
jg
mov
lret
jbe
mov
rorb
push
insl
dec
dec
push
movsb
int
stc
outsb
das
lret
call
out
push
inc
push
in
sub
popa
lds
ds
inc
outsb
fcomps
test
test
pop
xor
call
mul
pop
rorb
test
shr
mov
aam
cmc
fwait
pop
xchg
imul
or
jmp
insl
push
xor
aaa
dec
std
outsl
out
sub
fs
xchg
test
stos
leave
or
add
dec
jl
sub
movsl
sub
sub
ds
jg
insl
call
insb
sti
sub
push
sbb
ljmp
jl
fwait
mov
outsl
out
xlat
test
mov
scas
cwtl
push
int
sub
cwtl
pushl
lret
icebp
dec
sbbl
in
adc
cli
xchg
subl
movsl
call
fwait
ret
push
aaa
les
and
xlat
sarl
inc
push
mov
stos
cmpsb
fcmovb
imul
pop
mov
jns
pop
ret
push
incb
inc
incb
ljmp
xchg
mov
mov
pop
sub
out
cli
jg
lahf
ror
pop
push
dec
shl
adc
adc
sbb
jne
ds
ljmp
dec
sahf
xchg
xchg
sbb
sbb
into
insl
js
mov
decl
test
call
mov
and
lcall
pop
hlt
incl
cltd
cld
aad
mov
stos
mov
or
loop
lods
mov
or
call
add
ror
out
loop
out
pop
push
adcl
mov
gs
es
mov
aaa
or
popf
xchg
and
lcall
lods
fsubs
inc
daa
les
or
shl
fisubrl
adc
inc
fcmovnb
repz
ljmp
testb
jns
inc
jp
jbe
xlat
out
mov
mov
neg
lea
aad
adc
je
sub
jbe
xor
pop
jae
mov
push
ljmp
cli
jmp
sub
sarl
ss
cmp
out
sub
ficomps
std
push
inc
xchg
jne
daa
loope
fidivrs
mov
jl
fbstp
inc
mov
stos
xor
incl
cmpsb
mov
or
js
inc
cld
test
ja
movsb
fildl
add
inc
out
sub
testl
fs
incl
cli
popf
mov
add
stc
lcall
and
icebp
decl
movsb
ret
push
cmp
jp
into
pop
or
push
pusha
dec
pop
adc
dec
decb
and
roll
mov
out
movsb
enter
pusha
add
mov
push
lcall
lock
clc
incl
fldenv
lcall
inc
scas
cli
std
outsb
jmp
in
fsubs
mov
rcrb
push
ret
call
mov
bound
sbb
cmp
mov
xchg
insl
sub
les
push
push
fdivs
repnz
data16
or
aam
pop
insb
clc
mov
sbb
push
mov
fiadds
lods
mov
decl
push
add
sbb
or
in
or
shlb
leave
pop
call
pushl
adc
aam
into
push
jmp
call
movsb
frstor
shrb
out
daa
dec
sub
pop
add
mov
mov
pushl
jne
jne
mov
mov
mov
lcall
push
jl
push
inc
cmc
je
cwtl
jne
jb
stos
xor
xchg
mov
fildll
in
loopne
xorl
test
push
sahf
fcmove
mov
dec
jecxz
pushl
jnp
mov
mov
js
adc
cmp
icebp
ljmp
dec
in
jp
cltd
lcall
clc
ljmp
in
add
das
adc
mov
hlt
lahf
decl
push
dec
nop
mov
xor
xchg
jae
mov
rcrl
sbb
je
scas
gs
pop
iret
xchg
mov
movsb
jo
adc
fcmove
cmc
mov
aad
icebp
and
jle
test
fmul
adc
sbb
fdivrp
ljmp
cmp
xchg
cltd
out
movsb
aas
lcall
mov
or
pop
mov
and
jp
or
push
int3
and
add
dec
sbb
pop
incl
dec
inc
ret
fistps
mov
lcall
out
xlat
cmp
pop
lret
in
inc
pop
int3
xchg
out
dec
inc
lds
ljmp
movsb
addr16
sbb
in
shll
out
pop
sbb
incl
cli
arpl
scas
int3
paddd
test
cmp
outsb
orl
pushf
mov
cld
lcall
xchg
js
sub
arpl
mov
dec
inc
addb
or
js
cwtl
test
or
pusha
push
cmp
je
sub
push
sub
sub
bound
adc
hlt
ljmp
and
jne
sbb
sub
gs
mov
ss
mov
dec
sbb
dec
dec
push
push
push
popf
leave
jbe
cmpsl
int
add
incb
mov
xchg
lcall
insb
sbb
mov
neg
aas
cmp
lods
jl
add
and
incl
sbb
mov
mov
mov
dec
sbb
aaa
sbb
cmp
aaa
mov
or
inc
decl
ret
sbb
fcompl
ficoml
call
sub
call
and
sub
fsubl
or
imul
mov
mov
sahf
jg
hlt
fcomip
test
outsl
test
sub
jge
test
and
push
jne
decl
push
mov
outsb
jle
insb
cmp
clc
lcall
xlat
inc
das
xchg
mov
fistps
pop
ret
stos
inc
push
xor
lcall
jnp
or
jns
repz
inc
fiadds
jnp,pt
jmp
cmpsl
cli
sti
mov
aam
dec
add
hlt
ffreep
fcompl
xor
shl
xchg
mov
ljmp
clc
icebp
aam
cmp
mov
cmpsl
ss
sub
push
dec
jg
jmp
inc
ret
fists
fs
xchg
sub
sti
adc
cltd
cmp
loope
repnz
sub
les
sbb
and
cs
ljmp
ret
repz
push
bound
dec
outsl
test
mov
xchg
repnz
mov
call
push
and
or
inc
ret
pop
std
jne
iret
out
inc
cmp
mov
dec
sub
test
dec
jns
inc
jecxz
inc
movl
mov
sub
cs
jp
sbb
hlt
cmp
cmpsw
mov
mov
jbe
inc
and
testl
in
jg
call
and
andl
js
dec
or
loope
ljmp
aas
outsl
or
incb
loope,pt
sbb
jo
jg
stos
mov
or
rcrb
mov
cmp
fmull
aaa
std
cmpsb
call
add
dec
mov
mov
mov
popf
cmp
decl
popa
fldenv
inc
out
inc
notb
mov
sub
dec
fisubrl
mov
mov
das
stos
insb
outsl
adc
std
jmp
dec
mov
sbb
subb
xor
add
mov
out
or
xchg
add
jne
mov
popl
mov
std
dec
add
lock
les
cli
jecxz
sbb
jbe
int
and
in
cmp
xchg
aaa
std
cmp
cltd
ljmp
xchg
and
jmp
shll
test
sar
cmp
pop
fimuls
mov
fimuls
iret
outsl
fmul
dec
pop
int
inc
and
sub
push
insb
aam
adc
and
test
out
push
and
push
mov
push
ja
push
add
or
cmp
fdivr
lcall
push
pop
jp
imul
push
shll
or
dec
fbstp
popf
dec
insl
adc
add
pushl
adc
imulb
clc
popa
sub
int
js
mov
enter
push
add
ja
xchg
dec
xchg
popa
cs
jae
push
lcall
inc
jmp
imulb
sbb
jmp
jle
testb
ja
xor
decl
es
jns
pop
sub
cmp
ljmp
xchg
mov
lcall
adc
inc
sub
and
ljmp
and
inc
pop
unpcklps
in
jg
ja
ljmp
xchg
cld
out
dec
pop
dec
ljmp
clc
jg
aam
cmp
cmp
mov
xchg
outsl
cli
incl
pop
jo
push
sbb
rol
cmp
loope
cmp
scas
les
enter
out
ficoml
jecxz
mov
mov
xor
push
fcompl
add
das
fnstcw
pushl
sbb
aaa
add
out
and
fsub
in
mov
adc
dec
pop
ficoms
arpl
cmp
leave
fnsave
lahf
out
ljmp
dec
adc
out
sub
in
loope
repnz
dec
cmpsl
and
fbld
loopne
jp
loopne
aam
lods
std
nop
ss
enter
dec
xchg
ljmp
fs
sbb
lret
inc
les
sbb
xchg
inc
push
mov
pushl
xchg
jns
adc
ss
xchg
and
stc
in
inc
inc
mull
xlat
dec
aaa
mov
insb
incl
cmp
and
inc
fiadds
call
xor
clc
int
jmp
mov
mov
inc
lods
sub
cmpsb
adc
popa
lcall
dec
mov
imul
pop
iret
mov
cld
cmp
and
inc
dec
enter
adcl
out
clc
sub
jnp
mov
sub
mov
and
aaa
add
decl
push
dec
mov
insl
mov
and
xchg
xchg
push
mov
fcomip
push
rcrl
inc
adc
sbb
testl
add
clc
icebp
jmp
jle
cmp
add
mov
or
mov
fidivrs
sbb
je
sahf
pop
add
mov
stc
mov
hlt
fwait
loop
jns
out
aaa
pop
and
ljmp
add
mov
jb
or
xchg
push
push
shl
fsubl
dec
call
ja
mov
inc
dec
fcomps
es
mulb
lret
xchg
lcall
orb
sub
repnz
or
mov
ljmp
inc
add
clc
sbb
mov
sbbb
jne
dec
jmp
mov
and
fists
popa
sbbl
fdivl
decl
shrb
jae
push
mov
pop
jp
std
aam
pop
xchg
cmp
jmp
cmc
stos
cltd
test
push
add
les
cmp
cmpsb
sub
cli
test
cmpsb
aaa
push
pop
xlat
xor
clc
scas
add
inc
pop
outsl
sub
cmpl
lcall
in
inc
xchg
into
out
and
sbb
inc
cmp
jns
sbb
mov
xchg
inc
call
int3
test
ljmp
mov
out
popf
push
or
fdiv
cmpsb
jle
cmpsb
aad
out
lods
lret
fisttps
addr16
dec
push
xchg
mov
dec
cld
jmp
les
jp
cmpsb
adc
sbb
enter
incl
xchg
sub
shlb
pop
push
or
adc
jno
es
dec
ljmp
loopne
adc
aam
push
push
sti
rorb
out
lcall
mov
loopne
mov
inc
push
std
decl
add
data16
mov
or
cmp
test
ljmp
pushf
add
sub
adc
push
mov
jo
cmpsb
xor
mov
inc
in
sbbl
repz
xchg
scas
dec
dec
test
push
mov
jg
mov
out
clc
decl
loope
dec
mov
add
clc
cmp
rolb
dec
sub
call
xor
or
imul
pop
xchg
out
mov
mov
lcall
xor
mov
mov
in
push
sbb
mov
loop
cld
iret
and
mov
int3
add
mov
dec
and
mov
lret
mov
out
js
fimull
std
mov
pop
dec
cmp
mov
push
cmp
lock
ljmp
aad
push
pop
push
aas
jne
scas
cmp
mov
jne
mov
mov
dec
and
out
ss
add
xchg
and
dec
adc
popf
mov
lock
pop
push
adc
call
test
call
pop
xchg
mov
mov
cmp
test
mov
in
lcall
test
mov
mov
mov
dec
ror
mov
mov
and
inc
sub
mov
hlt
push
ss
jo
xchg
mov
ror
fwait
adc
repnz
popf
add
pop
stos
in
stos
xor
add
ljmp
imul
movsl
xor
insb
fnstsw
arpl
jbe
jg
lcall
mov
rcrl
gs
popf
cmpb
clc
movsb
sbb
shl
test
out
fistl
in
inc
mov
scas
cmc
sub
xlat
jbe
sarb
add
mov
aaa
cld
add
push
pop
mov
pop
pop
in
dec
push
jmp
js
ljmp
mov
out
imul
addl
push
lock
faddl
inc
and
push
push
fstp
ja
xor
xlat
imul
or
cmp
pushl
cmp
and
xlat
adc
test
push
dec
push
nop
or
scas
mov
xchg
add
lcall
call
sub
lods
jecxz
int
cld
cwtl
popf
push
or
insl
pop
xchg
jp
out
or
xor
and
push
arpl
and
int3
mov
pop
in
push
call
xchg
jl
xchg
in
jmp
xchg
pop
push
pop
bound
inc
jae
ja
decl
xor
rorb
ror
push
mov
loope
or
or
or
call
lock
test
and
push
movsl
mov
pop
negb
aad
aas
mov
leave
and
outsl
fdivrs
test
sahf
sub
stc
jo
pop
add
rcl
inc
xor
push
je
push
fs
iret
jne
mov
in
ljmp
cmpsb
out
mov
push
int3
jp
pop
and
ljmp
mov
mov
insb
mov
xor
call
mov
cs
clc
mov
enter
test
test
pushl
lea
into
mov
aad
divl
xchg
popl
xchg
mov
cld
pushl
call
int
dec
bound
fbstp
into
in
clc
rcr
imul
arpl
push
inc
mov
xchg
lods
fwait
push
jae
mov
into
sub
cmp
mov
lock
scas
lcall
int
xor
daa
ret
cmp
mov
mov
orb
inc
jo
pop
mov
mov
cs
stos
ds
in
and
adc
xor
sbb
sub
mov
inc
sbb
or
jmp
popf
inc
mov
lds
divb
pop
dec
fsts
pusha
fisubl
test
ljmp
ljmp
lods
adc
loopne
outsl
mov
mov
mov
sbb
mov
xchg
jg
sbb
out
scas
xlat
fmuls
push
dec
pop
xchg
dec
pop
push
loopne
lock
mov
mov
inc
pop
or
mov
push
inc
cltd
cmp
push
cld
aaa
std
pop
pop
xchg
sarl
daa
add
decl
imul
pop
sub
ljmp
out
mov
mov
faddl
test
mov
sub
cmp
jae
push
std
incl
js
xor
repnz
xchg
icebp
and
xlat
adc
or
imul
mov
cmpsl
pop
pop
and
cmp
xchg
push
lret
fimuls
outsl
adc
jg
pop
clc
mov
cmpsl
add
inc
nop
iret
mov
lock
or
add
int
stos
pop
pushl
cmpsb
xchg
xor
push
stc
sbb
gs
mov
lret
insl
jne
pusha
sub
pushf
cmpsl
push
lcall
push
push
aaa
jl
adc
push
sahf
test
lea
sbb
push
lods
fisttpll
xchg
daa
dec
and
mov
cmp
mov
test
adc
aam
mov
ret
jge
sub
fisttps
xchg
add
ljmp
outsl
cwtl
cmp
cmp
cmpsb
mov
xor
movsl
pop
and
push
popf
cs
mulb
inc
das
clc
lcall
cltd
mov
mov
sbb
fidivrs
push
lds
inc
ja
incl
cmp
pop
push
mov
fcmovnb
lock
int
pop
fimull
cmpsl
xor
incl
sbb
fcoml
mov
rorl
sub
and
sub
mov
mov
incl
xchg
sub
dec
lret
nop
pop
push
dec
fistpl
test
scas
dec
out
movsb
jg
adcb
push
xchg
inc
lahf
and
push
pusha
jl
and
mov
ljmp
xor
or
outsb
sbb
pop
aaa
push
in
loop
cmp
sbbl
mov
shr
lret
adc
imul
lods
jno
push
fsts
and
out
daa
sub
aad
mov
aam
das
test
dec
incl
xorl
lret
xchg
cmp
adc
xchg
cld
adc
dec
sbb
and
ret
lcall
dec
add
adc
leave
sti
mov
stos
mov
lret
enter
cltd
movsb
aaa
push
sar
cmpsb
cli
inc
and
add
mov
ljmp
insl
cmpsb
add
ljmp
dec
mov
test
mov
mov
int3
and
scas
aas
mov
dec
fdiv
cld
test
xchg
imul
jecxz
mov
inc
or
pop
inc
mov
dec
lahf
clc
jo
xchg
mov
sahf
or
mov
sub
daa
add
fs
sub
das
mov
pushl
xchg
ret
popf
aad
loop
cwtl
call
cmp
lds
incl
jno
mov
or
in
sbbl
pop
aam
mov
push
mov
mov
fisubrl
movsl
cmpsl
pop
jo
mov
div
sti
xor
xor
mov
decl
movsb
jmp
lods
add
xchg
mov
test
cmp
inc
clc
xchg
out
enter
xchg
ret
jns
jne
jle
aas
mov
sub
cld
cmc
dec
cmpsb
or
lods
int
cmpsb
js
jle
xor
rcrb
into
repz
sbb
shrl
sbb
jns
aas
xchg
or
xchg
lahf
cmp
popf
in
push
sarl
push
subl
pop
sbb
cmc
stos
int3
shll
roll
jg
addr16
pop
cli
aaa
xor
and
mov
mov
mov
or
or
stc
adc
leave
or
push
push
bound
push
test
dec
push
jp
cmpsb
mov
dec
loopne
adc
mov
sub
add
incl
out
call
and
push
cmpb
mov
cmc
sbb
call
mov
jle
add
lcall
outsl
jp
jecxz
mov
and
or
xor
das
rorb
addr16
push
push
aad
ja
mov
jl
and
or
push
dec
inc
ss
loop
jmp
cmp
pop
pop
lret
push
xor
popf
adc
lret
cmp
lcall
jge
aad
test
fsubs
les
fcmovne
mov
pop
jg
fs
push
cltd
adcb
mov
and
dec
jl
sub
lods
nop
pop
movsl
rcr
inc
jp
xchg
stc
out
lods
lds
cli
mov
sti
pop
xchg
jp
and
pop
push
lea
push
jmp
xchg
mov
imul
mov
pushf
xlat
cld
scas
fcomip
decl
xor
dec
lahf
inc
mov
ss
insb
mov
hlt
dec
icebp
add
push
enter
aaa
cli
test
mov
roll
mov
adc
incl
sub
mov
dec
adc
insl
and
mov
outsb
cli
incl
pop
hlt
cmp
popa
dec
mov
out
cmpl
jnp
mov
dec
ljmp
and
scas
sbb
mov
insb
shrl
aam
push
ss
add
insb
cmp
lcall
pop
out
jmp
push
jne
insb
xor
aad
divl
adc
sub
cld
ljmp
lods
into
push
pushl
or
aad
mov
int
mov
xchg
or
dec
sub
lret
andb
mov
cld
out
sarl
in
lahf
aam
outsb
push
sarl
or
cs
cmpsl
add
jg
dec
mov
aad
test
push
mov
mov
lock
mov
and
lea
ss
fists
xchg
inc
inc
in
jecxz
aas
aaa
bound
inc
push
add
in
pop
repnz
sub
scas
sub
aad
pop
hlt
dec
in
sbb
inc
loope
ret
mov
adc
in
adc
sbb
pop
xor
mov
clc
pop
mov
rorl
push
hlt
stc
aaa
push
sar
ds
imul
jmp
inc
pop
xchg
sbb
sbb
mov
cmpl
push
fiaddl
decl
xor
mov
fidivrl
adc
push
cmpsl
pop
pop
sti
loopne
push
pushf
cld
push
nopl
sbb
xor
inc
xchg
cmp
sarl
adc
lds
fst
lds
decl
mulb
lahf
dec
lods
fwait
outsb
mov
test
cmpsl
imul
fisttps
ret
in
iret
mov
flds
inc
dec
inc
adc
sub
mov
or
jp
adcl
xchg
mov
decl
mov
hlt
adc
xor
xor
dec
push
cmc
pop
pushw
mov
adc
shlb
frstor
push
out
sbb
pushl
enter
jae
scas
mov
bound
aas
mov
and
dec
das
outsb
xchg
int3
lds
cmp
lea
sub
test
test
sub
in
aam
fidivrs
sbb
jg
jmp
sub
mov
dec
mov
adc
xchg
test
mull
cmp
cmp
fs
mov
mov
mov
mov
cmp
or
or
add
std
add
pushl
andl
sbb
cld
ret
mov
sub
sub
and
movb
sbbb
mov
mov
dec
addr16
bound
cld
push
or
in
push
lcall
push
mov
pop
or
sbb
out
addr16
test
lret
test
dec
pushf
ss
pushl
int
pop
inc
es
sub
std
fnstenv
and
lea
fdivp
inc
iret
ret
pop
inc
std
sub
lcall
mov
mov
push
aam
sbb
pop
dec
ret
xor
cld
jnp
mov
mov
pop
lcall
int3
pop
fisubrl
testl
mov
sub
insb
std
rol
mov
xor
dec
mov
das
scas
mov
cmp
ficoms
mov
ljmp
ss
sub
roll
into
mov
mov
inc
test
lds
iret
push
mov
jne
sbb
pushl
mov
popl
xchg
jge
add
mov
addb
adc
add
or
xchg
or
sbb
std
mov
pop
xchg
ret
pop
cmpsl
or
movsb
dec
mov
jp
lea
jo
adc
incl
into
hlt
test
mov
xor
pop
and
mov
mov
decl
fidivl
xor
cs
push
mov
stos
jo
dec
jecxz
fdivrs
daa
arpl
dec
out
aaa
adc
or
mov
jmp
les
lcall
push
mov
jmp
imul
push
leave
jmp
cmp
jne
sti
mov
ljmp
in
xor
push
push
je
sub
call
dec
mulb
pop
test
sub
pop
or
cmp
adc
jle
ljmp
cwtl
aad
test
pop
inc
jnp
jae
jb
loop,pn
mov
mov
push
cmp
call
mov
out
jne
inc
lods
mov
icebp
dec
shlb
test
sbb
in
xor
cmc
jle
cmp
jg
and
in
insl
les
in
insl
pop
call
jns
mov
mov
push
lods
dec
std
out
sub
loopne
xor
add
imul
dec
clc
push
mov
data16
ror
aad
sub
repnz
mov
aad
repnz
and
push
cld
dec
adc
mov
xchg
inc
push
movsl
adc
mov
or
pop
insl
jecxz
inc
repz
cmp
pusha
inc
mov
sahf
inc
sub
dec
or
dec
call
mov
push
pop
jmp
sbb
into
gs
inc
lcall
pusha
mov
lret
push
mov
mov
mov
cmp
push
das
push
incl
cld
mov
jle
sub
mulb
arpl
dec
jbe
mov
cmpsb
rcl
shll
and
jle
int3
scas
cmp
sti
outsb
push
out
xlat
ret
fbld
cmp
dec
lods
adc
fisttps
arpl
jns
jmp
stc
xlat
xchg
lods
lcall
mov
popf
popaw
xchg
mov
adc
lret
jmp
lea
add
lret
sub
sarb
movsl
cmpsb
xor
jl
fsubrl
inc
adc
jae
or
and
mov
add
aaa
or
decl
inc
out
andb
adc
lret
incl
xor
push
pop
pop
cmp
fcomps
xor
in
shrl
int
rcrb
and
fidivs
xlat
pop
sbb
and
add
jg
mov
sub
pop
cmp
xchg
pop
popa
aad
test
mov
out
and
mov
and
push
lcall
xchg
pop
pop
sbb
mov
push
out
out
sbb
xchg
lahf
loope
pop
into
cld
call
add
out
loopne
outsb
or
stos
xor
add
jae
in
aam
out
aad
fimuls
xchg
imul
pop
jno
jg
jb
loope
sub
mov
cmp
mov
cmp
mov
or
stc
cmp
lds
jns
mov
cli
fs
pushl
pop
outsl
xor
mov
dec
mov
lods
cld
cs
sbb
jae
call
sbbb
fldenv
roll
inc
dec
sub
mov
push
enter
out
divl
int3
or
repnz
repnz
pop
aad
rclb
sub
adc
int3
mov
shl
ljmp
xor
mov
sub
rcll
shlb
or
aaa
ret
push
jae
xchg
incl
shll
mov
or
jno
jns
dec
fists
enter
mov
xor
incl
and
fldcw
fcmovnbe
add
pop
push
push
sub
add
push
and
mov
mov
mul
arpl
cmp
push
adc
test
and
xchg
ror
testl
std
xchg
lcall
sbb
mov
mov
jg
inc
mov
jle
mov
pushl
xchg
cmp
inc
popf
sbbl
sub
add
jne
mov
add
jg
mov
cli
sar
data16
movsb
ret
insl
adc
test
mov
out
mov
or
repz
and
adc
cwtl
push
cld
mov
test
ljmp
lods
and
and
rclb
jbe
mov
or
and
stos
push
call
pop
add
fiadds
dec
push
shr
mov
sub
push
lods
fisttpl
pushl
fwait
jecxz
pop
ret
mov
xchg
jecxz
mov
js
jo
mov
lods
out
pushl
cld
mov
in
cltd
jmp
dec
outsl
sahf
add
sti
loop
xchg
adc
xchg
xchg
xlat
call
xchg
out
mov
out
cmpsb
dec
mov
sub
xlat
mov
jmp
mov
inc
jo
icebp
jg
mov
sub
loopne
rol
loop
ret
cli
mov
inc
xor
inc
filds
jo
shlb
mov
test
pop
ret
sbb
xchg
lock
fistps
inc
mov
lods
cmp
mov
and
mov
fcomip
lcall
mov
add
fidivs
insl
or
mov
jne
mov
dec
nop
dec
cli
jmp
iret
jmp
xor
mov
pop
call
mov
out
clc
mov
fstpt
xor
pushl
lods
adc
ds
movsb
and
mov
cmp
pusha
lods
mov
push
sub
inc
xchg
fdivr
or
sbb
mov
xchg
shlb
mov
jg
sbbb
js
or
icebp
push
mov
fwait
push
sbb
push
bound
pop
fs
scas
dec
mov
ljmp
mov
pop
mov
lcall
arpl
shl
inc
or
xorb
mov
ljmp
adc
add
jno
lcall
out
fsts
adcb
inc
mov
sbb
test
call
xchg
cmp
lcall
dec
sahf
ljmp
sti
hlt
inc
dec
sub
push
movsl
out
repz
pushf
imul
jnp
sub
lret
addr16
add
orb
mov
jg
jnp
mov
lods
arpl
mov
lock
incl
push
loop
lea
inc
mov
mov
dec
lods
adc
mov
iret
cmp
or
lea
sub
out
ja
mov
fwait
lea
repnz
call
mov
jmp
xor
in
popa
and
cmpsb
xchg
mov
lcall
push
inc
sub
js
mov
jb
xor
in
ljmp
dec
jl
pushf
jge
xchg
jns
pop
or
jne
cmp
roll
mov
cltd
sbb
pop
hlt
dec
ljmp
insb
rcr
sbb
dec
sub
mov
outsl
insl
daa
lods
test
ljmp
mov
xchg
test
add
and
jle
loope
fsts
out
mov
das
push
and
out
iret
add
cmp
repz
dec
mov
mov
out
scas
push
addb
mov
inc
push
sub
ficoml
scas
int
out
int3
outsb
adc
int
and
fs
push
sub
data16
outsb
adc
decl
ljmp
sbb
mov
mov
int
fistpll
sbb
ljmp
in
mov
push
jp
dec
push
test
jg
lcall
ret
dec
push
imul
lock
jbe
int3
mov
sbb
ljmp
add
xchg
ja
ret
aas
in
mov
xlat
out
adcl
ja
pop
je
in
stc
lock
test
adc
pop
sub
or
add
sar
ljmp
cmp
ljmp
lcall
aaa
adc
sub
fs
inc
jecxz
clc
pop
jle
jbe,pn
cmc
sbb
js
test
push
sti
sarb
call
decl
pop
sub
int
push
fcom
rcr
dec
and
ret
rcrb
dec
out
lret
dec
cpuid
in
and
mov
or
and
aas
roll
fnstsw
adc
fadd
xlat
mov
adc
jecxz
fisubs
jmp
jle
inc
jne
adc
or
xchg
in
xor
lea
fwait
out
pop
pop
dec
adc
fmulp
adc
lret
je
lock
jg
scas
and
cmpsl
pop
add
movsl
xchg
mov
cmp
adc
and
adc
or
das
jno
mov
cmp
sub
in
sub
xor
mov
mov
sbb
aas
pop
push
pop
jg
jmp
sub
sbb
pop
cld
xchg
enter
lea
orb
or
and
pop
out
popl
pusha
pop
xchg
mov
nop
cli
push
push
pop
sbb
jno
dec
sub
pushf
inc
fdivr
mov
outsl
outsl
lock
into
sbb
mov
outsl
inc
out
sbb
imul
addr16
xor
or
push
xchg
mov
dec
push
aaa
lds
loopne
lcall
cld
lcall
jne
fs
ret
mov
cli
movb
lock
jmp
pop
jg
and
stc
cmp
arpl
repnz
mov
fldl
dec
adc
inc
test
faddl
pop
ss
dec
jns
sub
jbe
ljmp
push
addl
add
ret
push
xlat
jg
decl
and
insw
das
lret
addl
out
cmp
aaa
icebp
xor
fistps
jmp
insl
ds
incl
mov
repnz
adc
daa
int3
arpl
sbb
jbe,pt
outsl
pusha
or
loopne
jp
lock
xor
and
xor
xchg
cld
aaa
into
mov
call
sub
push
xchg
out
cmp
xor
push
pop
pop
jecxz
inc
loop
ljmp
mov
sbb
aam
daa
mov
data16
inc
hlt
push
stos
lods
imulb
rcl
lcall
in
leave
es
lcall
cmp
pop
call
pop
fcomi
inc
insb
mov
jecxz
sti
push
loopne
lret
dec
popf
ljmp
call
orl
dec
cmpsl
push
int
xchg
mov
xor
arpl
jo
movsl
fstps
mov
dec
mov
cmc
jns
lret
pop
push
xor
mov
cmp
fcmovb
in
out
jle
dec
mov
adc
xor
xor
in
imul
loop
leave
inc
in
xchg
inc
push
aam
xchg
pop
push
scas
lds
and
mov
dec
cmpsb
inc
xor
in
fidivs
mov
inc
xchg
inc
out
js
cmp
incl
movsb
lds
mov
test
sbb
push
out
popa
mov
sbb
ljmp
pop
jp
mov
roll
ljmp
adcb
lcall
ret
inc
xor
or
mov
jg
mov
and
xchg
shrl
shlb
cs
push
decl
or
mov
daa
fisubrs
dec
fistpll
xchg
push
rcrb
ljmp
jne
cmp
xchg
jp
es
cwtl
nop
shl
xor
les
ljmp
mov
pop
iret
js
push
pop
mov
jnp
pop
push
cmpsb
shlb
lds
dec
push
mov
or
or
lahf
insl
and
fisubrl
mov
mov
std
sbb
fwait
and
nop
dec
in
movsb
and
inc
pushf
mov
stos
test
bound
incl
xchg
loop
add
push
subl
stos
enter
mov
cli
jg
cmp
fstpt
mov
int3
xor
aaa
cmpsb
stos
insl
int3
jl
sbb
add
mov
loopne
lcall
ds
scas
inc
xor
lods
repnz
adc
je
lret
ljmp
add
cmpsl
mov
or
xchg
je
imul
decl
lret
mov
xchg
adc
ja
jnp
int3
cmp
lret
lret
decl
popa
in
sahf
fdivrl
sub
sbb
test
push
pushl
pop
jecxz
xchg
mov
push
cld
leave
std
mov
jbe
inc
cmp
push
cwtl
mov
mov
dec
or
loopne
in
lcall
je
in
xchg
fcoms
push
jge
or
mov
dec
les
push
call
inc
sub
or
lea
and
xchg
push
mov
mov
xor
jp
loop
dec
subb
push
pop
dec
inc
mov
xor
dec
pop
xor
mov
out
sub
popa
jne
mov
pop
adc
or
and
mov
lret
int
mov
ret
and
jmp
rclb
fisubl
stos
jmp
dec
iret
cmp
adc
push
mov
fs
pop
and
shlw
ja
aam
sbb
cld
sbb
out
fdivs
cmpsl
xlat
dec
addr16
xchg
mov
push
xchg
outsl
fucom
cmp
and
inc
sbb
loope
lock
cmp
jp
pop
out
or
lds
cwtl
jne
mov
inc
sub
lcall
ljmp
pushl
jae
jbe
mov
mov
pop
inc
fcompl
test
repnz
adc
call
out
rcl
fs
mov
sub
out
andl
fldcw
inc
decl
mov
adc
lds
adc
les
sbb
mov
cmpsl
lock
data16
xchg
lea
ljmp
icebp
lahf
cmp
cmpl
xchg
das
test
jbe
mov
mov
loopne
mov
pop
scas
push
fs
ds
sub
lock
aam
movsb
loope
fs
fisubl
add
mov
fwait
insb
cld
inc
xchg
test
decl
test
adc
rcl
fmuls
dec
and
outsl
xchg
mov
mov
jne
dec
ret
jbe
add
lcall
sub
outsl
outsb
or
xor
inc
fdivr
scas
add
jl
and
sub
mov
mov
insl
jo
movsb
shll
das
push
shll
ds
leave
add
fdiv
mov
mov
push
push
loopne
xor
ret
xchg
loop
or
leave
repnz
adc
imul
inc
ljmp
test
data16
sti
jo
call
pop
inc
pushf
or
into
sbb
bound
adc
icebp
push
and
cmpsl
lahf
inc
fs
scas
clc
pushf
add
jge
jae
xchg
jns
in
cmp
loop
clc
incl
mov
hlt
sbb
jg
cmp
add
es
fdivrs
movsl
out
pop
dec
jge
sbb
cmp
cmpsb
movsb
arpl
mov
pop
inc
xor
jnp
mov
test
mov
jp
ljmp
pusha
dec
cmpsb
jl
into
aad
incb
and
push
fdiv
cmc
out
mov
ret
adc
ljmp
scas
ljmp
dec
dec
mov
xorl
subb
enter
aad
std
stc
scas
lahf
cmpsb
cmp
add
jmp
pop
and
inc
pop
cmpsb
and
cmp
clc
sbb
popf
inc
pop
xor
lcall
ja
add
into
or
dec
and
out
call
lcall
or
add
xchg
jbe
dec
jnp
loopne
movsl
subl
jne
pop
cli
jp
dec
pop
lahf
mov
jle
stc
ficomps
cmp
leave
xor
mov
or
mov
mov
jecxz
mov
push
inc
sti
stc
push
xor
cmp
hlt
test
and
movsb
xchg
clc
fdivs
mov
insl
pop
fwait
clc
lcall
jg
iret
adc
adc
mov
aas
push
mov
ljmp
or
ficoms
fcomp
adc
sub
in
cmp
call
ffree
ds
jne
in
hlt
push
outsb
sub
jns
or
insb
ljmp
cmp
ds
mov
lret
push
out
dec
dec
lds
ficoms
out
cli
mov
stos
sbb
pushf
xchg
pop
add
enter
inc
sub
call
in
push
sbb
xor
mov
xchg
or
cwtl
test
and
jmp
mov
adc
push
sbb
push
outsb
pushf
inc
mov
pop
xchg
idivl
sahf
jo
les
fisubs
sbb
subb
in
testb
mov
push
dec
inc
je
or
ds
fidivs
mov
push
sbb
sti
mov
leave
mov
lcall
jo
das
dec
enter
pop
inc
mov
push
cmp
rep
xchg
test
int
add
cmp
or
jne
fistpl
test
mov
mov
jle
jmp
mov
daa
and
xchg
repz
test
clc
mov
call
sub
jns
loope
inc
stc
inc
pop
jne
jg
inc
arpl
or
out
int3
gs
mov
inc
jb
rcrl
mov
xlat
in
or
jbe
pop
decl
cmpsb
push
imul
outsl
mov
sbb
sbb
ss
pushl
dec
and
sub
push
inc
jp
in
cli
mov
scas
cltd
and
scas
add
sti
movsb
movsb
out
outsl
cmpsb
mov
rcl
inc
mov
pop
xchg
popf
jae
mov
fdivrp
lods
adc
frstor
sar
push
fs
jmp
jl
dec
mov
dec
fwait
mov
incl
push
sub
stos
imul
ljmp
sbb
test
sub
mov
popf
and
jb
dec
movsb
test
cwtl
or
push
add
mov
lcall
pop
repz
pop
cmp
stos
ret
js
sub
mov
cmp
das
mov
push
icebp
xchg
fsts
iret
movsl
stos
push
or
mov
add
adc
out
movsl
jne
pop
call
push
lds
push
and
lods
push
inc
divl
aas
imul
or
mov
dec
filds
and
bound
push
pusha
add
pop
pop
aam
in
mov
inc
incl
incl
mov
in
stc
and
lods
jo
pop
jno
push
xor
decl
push
mov
mov
test
xlat
lret
movsb
mov
in
pop
pushl
addb
dec
adc
fnsave
dec
push
es
enter
ljmp
rclb
inc
xorl
mov
pushf
xchg
popa
adc
push
ud2
inc
jne
mov
jae
outsl
clc
clc
mov
mov
mov
cmpsl
sahf
data16
outsl
push
lret
dec
xchg
icebp
call
cwtl
push
sti
loop
mov
je
push
mov
sbb
popa
int3
out
jle
sahf
add
and
or
mov
mov
fsubrl
push
pop
xchg
push
fdivr
rep
dec
pop
mov
cmpsb
xlat
inc
cld
or
and
add
pop
or
pop
inc
jmp
cmp
pop
jbe
adc
sbb
dec
insl
jg
stos
lret
add
test
enter
clc
rcrb
dec
inc
inc
mov
and
add
clc
jmp
push
out
push
mov
sbb
mov
mov
call
jo
std
and
inc
xchg
mov
xchg
rclb
ljmp
adc
lock
fldcw
jne
and
push
adc
cmp
pcmpeqw
push
decl
dec
sub
mov
jo
xlat
repnz
jg
test
sti
dec
fwait
adc
lcall
repnz
sub
daa
and
scas
jo
es
xchg
inc
pop
and
mov
pushl
push
mov
pop
lret
ja
mov
cmpsb
mov
das
sbb
in
pop
int3
jbe
std
add
xor
pop
jbe
lods
dec
xchg
pop
or
push
ficoml
sbb
inc
push
mov
mov
and
faddl
inc
dec
aam
jns
and
mov
repnz
or
lret
dec
jne
clc
mov
and
pushl
xchg
sbb
mov
daa
stos
sarl
movsl
push
inc
mov
push
notb
xchg
mov
xchg
clc
fistps
and
stos
dec
dec
push
pushf
dec
hlt
jg
or
mov
sbb
inc
leave
sub
pop
xchg
xchg
mov
sahf
adc
gs
sbb
xor
cmpsl
pop
and
bound
loope
flds
mov
adc
inc
hlt
cli
ljmp
movsb
pop
fildll
inc
push
js
or
lds
test
sub
push
stos
mov
jge
and
inc
popa
cmc
fcomps
add
sub
hlt
jg
inc
loope
inc
xchg
int3
add
insl
pop
cs
cwtl
lods
jmp
push
fmull
sub
sbb
pop
idivb
cwtl
cmp
shlb
repz
incl
aaa
sub
rorl
gs
cmp
jnp
xchg
xchg
adc
dec
imul
fwait
sbb
lcall
icebp
dec
or
dec
pop
addr16
out
or
cs
pop
mov
push
mov
inc
lret
cltd
scas
dec
enter
cs
push
pop
push
jo
xchg
mov
idiv
sub
add
push
pop
dec
insl
sub
js
ret
adc
inc
pop
ret
sub
mov
dec
cmp
imul
inc
loop
adc
arpl
mov
stos
dec
leave
outsb
ljmp
stos
in
mov
xor
fidivrl
in
dec
dec
dec
inc
pfsub
decl
into
adc
dec
mov
jne
and
fists
imul
jns
sub
sbb
push
out
mov
dec
push
mov
dec
sub
pop
outsl
clc
jo
mov
out
insl
mov
sub
push
jg
mov
les
movsl
daa
or
mov
cmpsb
mov
inc
and
and
add
repz
xor
jle
mov
decl
fwait
cli
insb
jno
mov
push
xlat
mov
mov
sub
sub
lcall
mov
inc
push
cmc
and
mov
jo
mov
jp
lds
mov
mov
push
sbb
sub
fidivrs
add
movsb
orl
ljmp
xor
mov
jmp
sbbb
push
divl
cmpl
ret
add
jo
push
stos
adc
addr16
popf
mov
in
cmp
decl
jecxz
enter
xchg
cli
out
lods
shlb
add
adcb
pop
pop
push
pusha
stos
inc
cmpsb
or
fs
ja
int
cld
jb
mov
pushf
popa
sbb
rcll
sti
incl
push
lea
rcll
insl
mov
shl
sub
add
xchg
adc
aas
xchg
lds
xchg
jns
out
mov
adc
scas
xor
loopne
sti
or
pop
ss
or
lret
stos
dec
or
lea
in
popf
or
or
daa
pop
popa
jp
xchg
fs
mov
fcomip
push
das
dec
into
nop
jae
dec
scas
pop
popf
xchg
jp
push
inc
mov
push
pushf
xchg
inc
cwtl
stos
aaa
incl
lods
dec
aaa
subb
jl
adc
inc
cld
gs
pop
out
or
jb
mov
mov
sahf
mov
repz
sub
jg
out
fidivs
xor
icebp
push
and
or
jmp
cmp
gs
leave
cmp
cwtl
mov
dec
mov
jmp
push
ljmp
ret
mov
aas
push
mov
jnp
nop
adc
pop
ficompl
test
cld
decl
movsb
cmp
or
es
aas
mov
fisubl
add
in
fldl
mov
ficoms
mov
dec
adc
aam
repnz
int3
lock
inc
sarl
cld
insb
jns
adc
es
xchg
pop
test
mov
lcall
sub
aam
dec
xchg
dec
push
test
pop
loop
test
adc
jg
inc
xor
jg
call
add
or
fidivrl
popa
mov
scas
fwait
gs
dec
in
add
mov
call
inc
inc
arpl
dec
pop
int
push
in
or
scas
sbb
sbbb
nop
mov
mov
jl
lock
call
jns
sahf
inc
repnz
mov
dec
inc
jmp
decl
xchg
gs
lret
insl
jle
xchg
aam
pop
jns
fimull
lret
sar
inc
movsb
mov
loopne
jmp
jecxz
ljmp
dec
jno
pop
cmp
es
loope
dec
or
fwait
pop
sub
mov
mov
inc
xor
xchg
repz
mov
ljmp
mov
outsb
mov
cmp
popl
adc
xchg
nop
jmp
jecxz
aam
icebp
call
pop
dec
inc
lds
sbb
sub
push
dec
xchg
ljmp
and
fisttpll
push
jb
sarl
mov
add
dec
nop
xor
in
call
inc
je
movsl
jns
xchg
push
inc
inc
push
xchg
pop
stos
int3
dec
xchg
call
inc
xor
gs
mov
xlat
pushf
pop
fldl2t
xchg
in
cli
or
and
popa
dec
mov
test
movsb
pop
add
pop
pop
ja
lret
xor
xchg
sub
mov
mov
xchg
bound
out
rorl
scas
sbb
lock
mov
decl
mov
imul
es
or
pop
or
dec
add
dec
mov
shll
pop
mov
jmp
or
dec
in
fwait
mov
xlat
scas
stos
mov
ds
cmp
and
fildl
lcall
cld
xchg
ss
jno
pop
test
or
cmc
xor
mov
cli
push
movsb
push
cmp
dec
sub
addl
add
stc
cwtl
pop
jno
aad
clc
ja
ds
out
clc
das
fs
or
xor
sbb
adc
fadd
pusha
dec
mov
ja
dec
mov
push
fldt
int3
insl
or
push
cli
test
daa
in
sbb
sub
sti
ret
fsubl
push
mov
pop
out
fbld
addr16
lcall
jne
sub
cs
mov
out
sar
mov
or
pop
dec
adc
adc
jmp
aaa
or
dec
add
xor
cmpsb
daa
pop
xor
adc
rclb
outsb
shrb
lods
popf
jge
push
pushl
cli
nop
arpl
cmp
mov
mov
pop
clc
push
sbb
add
mov
lods
enter
jnp
orb
cmp
mov
jg
sbb
push
notl
aas
in
frstor
pop
xor
jae
mov
inc
xlat
xchg
dec
mov
push
lods
xchg
call
cmp
jbe
lods
push
cmp
pop
jo
ret
sbb
dec
add
cmp
jmp
mov
mov
dec
xor
je
sarb
cmp
pop
xor
add
incl
movsl
fmull
or
rol
aam
sbb
jge
xchg
dec
push
incl
incl
jo
jb
std
dec
sar
daa
lods
push
and
push
sub
cmp
push
mov
xchg
push
dec
mov
movsb
iret
xchg
repnz
adc
pop
cmc
decl
aaa
mov
mov
in
loope
fmull
sar
push
decl
adc
aam
xor
jne
add
add
scas
call
push
sar
pushl
out
ds
dec
sub
icebp
jmp
sahf
inc
pop
outsb
sahf
pop
jne
mul
dec
sub
lods
jmp
dec
nop
clc
movzwl
sbb
xor
mov
lcall
hlt
cmpsb
and
xorl
sbb
std
fdivrs
clc
movsl
icebp
cmc
or
ljmp
pop
lahf
xchg
push
mov
xor
lcall
or
xchg
sub
call
push
daa
pop
ss
push
test
mov
xchg
enter
or
es
out
jae
push
cmp
sub
jmp
andl
sub
cmp
lret
xchg
adc
test
call
sub
mov
dec
int
aad
dec
sbb
shr
pop
js
jne
dec
rclb
push
jge
dec
xor
ja
shlb
fsubrs
outsl
scas
cmpsb
add
inc
fs
push
pushf
mov
push
fnstsw
mov
jp
xchg
and
or
pushl
push
and
inc
pop
push
out
addb
xchg
cmc
shl
cmp
decl
rolb
dec
inc
inc
test
push
push
fidivrl
fidivs
aaa
movsb
and
sbb
inc
fldcw
cwtl
cmpsb
ds
lds
sbb
jnp
ror
scas
roll
fimull
xchg
lods
sub
ss
int3
mov
mov
adcb
fnstcw
lcall
and
rclb
cmpsb
loop
repz
cli
jb
jecxz
scas
xchg
movsb
pop
lock
and
and
pop
inc
lret
mov
test
and
cmp
fwait
cmp
fsub
ret
pushl
jg
push
push
dec
out
out
mov
cs
push
ss
push
test
mov
sbb
dec
mov
cs
mov
jg
ljmp
adc
rolb
adcl
fcompl
mov
setp
adc
inc
mov
bnd
repnz
repz
call
dec
or
pop
loop
lret
aaa
mov
std
pop
or
push
je
mov
int
mov
adc
inc
cmp
add
xlat
dec
jb
or
mov
mov
inc
sub
sub
mov
mov
jae
pushl
cmpsb
mov
cmp
test
arpl
jl
pop
shrb
stos
in
shrb
sbb
cs
jg
dec
ja
or
scas
mov
arpl
loop
or
mov
mov
push
add
ljmp
dec
and
ret
and
ljmp
add
sub
lcall
mov
push
lods
dec
push
mov
mov
xchg
stc
pop
incl
push
fwait
mov
xchg
or
cs
sahf
xchg
jnp
pop
mov
fldl
daa
unpckhps
mov
xor
outsl
ret
aad
mov
int
pop
mov
test
and
sbb
shrb
inc
lret
xor
mov
bound
pop
loope
push
push
or
scas
pop
inc
scas
pop
es
insb
cmc
repnz
dec
adc
sbb
aas
mov
mov
fnstsw
decl
into
adc
and
test
aam
out
movsl
leave
ja
push
cmp
mov
rol
ror
adc
and
sub
loop
mov
and
xchg
pop
psrlq
cltd
adc
cmp
int3
cmpsb
dec
test
imul
dec
add
add
test
pushf
jnp
mov
cld
sbb
xor
sub
fwait
add
rorl
add
push
ja
push
pop
fcomip
mov
dec
cli
mov
xor
lret
xlat
test
jmp
push
mov
jle
add
jl
mov
lret
testb
sbb
ret
xor
clc
sub
pop
sbb
jmp
hlt
out
cmp
push
inc
jo
roll
test
aam
and
inc
mov
cmp
test
ljmp
xchg
aam
sbb
dec
or
adc
or
mov
dec
rcr
push
inc
push
mov
and
int3
test
repnz
rorl
add
leave
shll
cmp
or
lahf
mov
or
inc
in
push
call
fsts
ja
into
cmc
jle
push
mov
data16
test
cmpxchg
js
inc
cltd
insb
shl
ret
push
fwait
aas
mov
cmp
xchg
inc
movsb
pushf
pop
rorl
dec
inc
cmp
xor
fstl
jmp
mov
sub
in
movsl
push
cmp
lret
clc
cld
push
adcb
sbb
or
and
lcall
aaa
inc
xchg
pop
subps
mov
imul
ss
pop
or
imul
pop
clc
sub
mov
mov
mov
test
inc
mov
pop
xorl
leave
push
pushl
cmp
or
iret
jnp
call
sbb
decl
stos
mov
xchg
scas
aad
xchg
ret
ljmp
jae
adc
lods
jmp
cmp
push
pushl
test
fmuls
mov
or
and
fidivrl
push
ljmp
ret
test
cmp
test
imul
jle
clc
mov
adc
inc
in
pop
add
dec
inc
insl
test
pop
jg
inc
addr16
jle
sub
insb
mov
push
out
adc
test
in
jno
and
cli
xor
cli
or
into
and
mov
jno
and
aas
repz
data16
outsl
aad
popa
rorb
incl
xchg
mov
cltd
fsubl
xchg
aaa
icebp
mov
sti
push
data16
test
jg
movsb
push
call
pusha
lea
data16
jno
mov
jg
and
mov
lock
add
cmp
mov
fnstsw
mov
sbb
push
lcall
js
sub
cmp
pop
pushf
pop
mov
mov
sbb
clc
push
aam
and
ja
sub
arpl
adc
shl
xchg
addr16
cmp
bnd
mov
or
cld
popa
fmuls
push
push
hlt
pop
hlt
das
cli
call
jp
dec
or
mov
inc
test
inc
xchg
or
shll
nop
push
dec
push
imul
bound
leave
cmovno
and
add
mov
sbb
lcall
mov
inc
add
mov
int3
push
out
aas
dec
dec
xchg
cwtl
imul
cwtl
sahf
xchg
xlat
jo
adc
ret
out
addr16
in
aam
sbb
sub
pop
pop
sar
cwtl
sub
in
rolb
dec
inc
xchg
cld
call
test
jp
and
sbb
and
jecxz
lods
mov
or
dec
inc
sbb
or
adc
or
data16
jge
mov
jbe
jmp
and
push
scas
insb
and
and
sarb
orw
fcomip
das
cli
iret
cmpsb
cmpsl
addr16
mov
pop
xchg
mov
add
sub
lcall
ds
jbe
mov
dec
fs
pop
add
push
jne
lds
loop
loop
or
cwtl
pop
test
pop
mov
test
xor
add
xchg
xchg
fimuls
subb
pop
xchg
cmc
pop
jae
pop
pop
test
push
repz
mov
cltd
ljmp
jmp
movsb
fwait
pop
cwtl
xchg
ja
lcall
pushf
popf
inc
push
out
inc
test
cld
push
pop
int3
das
jl
enter
adc
in
inc
dec
std
fisubl
lret
cld
addb
lret
ljmp
fxch
test
std
clc
xor
sub
mov
mov
add
inc
out
push
fnstsw
mov
dec
push
xchg
pop
dec
dec
fldl
xchg
dec
out
xchg
cltd
cld
js
sub
and
call
adc
int3
vpandn
jb
adc
je
mov
dec
hlt
or
dec
in
pop
mov
xor
pop
and
bound
and
int3
ljmp
hlt
movl
mov
repnz
push
jnp
push
mov
or
pop
fwait
jmp
out
ja
xchg
mov
movsb
leave
pop
cmpsl
shrb
dec
push
dec
or
adc
fcoml
jae
mov
loopne
mov
cs
enter
cmc
and
inc
fs
cli
incl
test
stc
or
inc
daa
xor
jmp
dec
loope
ja
dec
and
les
sub
je
add
adc
dec
push
sub
lcall
pop
stc
stos
inc
jbe
shll
mov
lcall
sti
arpl
push
or
testl
mov
orl
and
or
mov
mov
xor
leave
loopne
pop
adc
rcrb
jle
dec
pop
mov
filds
rorb
inc
cmpsl
andb
mov
pop
nop
icebp
sub
sub
push
xchg
daa
mov
aaa
dec
and
adc
push
lahf
cmp
push
add
lahf
popf
test
inc
incl
loope
cld
je
fwait
daa
insl
jmp
adc
ja
push
imul
ds
test
push
push
inc
nop
cwtl
in
pop
lretw
cwtl
aaa
call
cltd
mov
stc
jo
mov
lcall
jp
mov
adc
sbb
test
inc
or
lret
das
sub
inc
int3
mov
popf
add
shlb
jecxz
out
xchg
inc
mov
xchg
cmp
ljmp
lods
aam
mov
sbb
cmc
jmp
xor
pop
fnstcw
jle
push
cmpsb
mov
out
mov
loope
inc
das
dec
xor
pop
xchg
cld
jg
cmp
cmp
adc
lods
jns
pop
popf
push
repnz
ja
sub
xor
repz
in
mov
push
jns
or
xor
imul
icebp
std
jbe
es
mov
ljmp
pop
xor
cltd
and
mov
std
decl
adc
out
movsb
rolb
xor
and
test
ss
pop
cs
jg
add
popf
jg
jle,pt
add
movsl
data16
ljmp
andl
adc
sahf
push
int
or
sub
je
clc
cld
xchg
xor
mov
popf
push
push
push
aas
adcl
mov
cli
enter
decl
ss
mov
and
add
inc
sub
or
add
fucom
inc
fstpt
sbbl
or
movsl
jg
nop
mov
aad
ficoml
sahf
insl
jmp
sbb
ret
repz
xchg
clc
mov
aam
push
addr16
out
sbb
jmp
divb
arpl
ds
or
call
xchg
push
sub
aad
jnp
mov
dec
jmp
and
repz
fdiv
into
cmp
push
mov
mov
xor
cwtl
jmp
repnz
mov
cli
jg
in
push
loop
mov
xor
fwait
pusha
fs
push
fimuls
inc
dec
aad
cs
inc
adc
pop
inc
test
inc
jb
push
or
push
lret
fsubrl
mov
iret
adc
fstpl
inc
lcall
jns
or
test
dec
mov
subl
dec
clc
out
test
imul
lcall
or
fs
outsl
mov
lcall
add
repz
cld
mov
sbbl
shrl
xchg
ljmp
outsb
sub
sbb
daa
jge
lock
pop
leave
cmpsb
sbb
dec
fstps
pop
cmp
fadd
ret
iret
mov
addr16
xor
lds
je
mov
dec
subb
cli
ret
fldt
cs
lcall
push
cmp
shlb
jns
push
divb
adc
test
push
cmovp
lock
aas
loop
popa
stos
stc
addr16
cs
mov
dec
lret
ljmp
inc
inc
sbb
aaa
push
and
mov
inc
jg
pop
pop
mov
or
shlb
adc
or
cmc
push
clc
jp
jb
mov
push
mov
ficomps
and
shlb
outsb
xor
inc
jno
jae
adc
push
lock
cmpsb
cmp
fcmovnu
ret
icebp
sub
dec
inc
cltd
mov
cld
jnp
lods
dec
in
inc
cld
test
dec
nop
jnp
xchg
push
cmp
push
cmpsl
lods
ds
fadd
and
push
lods
fisttps
ljmp
xor
cmp
loopne
jne
push
cs
scas
icebp
cmc
fnsave
fistps
gs
lods
test
stos
std
lret
mov
filds
jle
ret
add
xor
push
cmp
out
stc
push
notb
mov
shlb
mov
cwtl
lcall
inc
push
adc
lcall
jmp
out
int3
movsb
std
std
mov
std
sbb
arpl
inc
sub
cmpsl
call
sbb
rcrl
lock
sahf
stos
lock
add
decl
adc
cmp
sub
xchg
imul
push
movsl
dec
decl
and
outsb
aaa
fsubrl
jge
out
jl
jmp
repz
bound
incl
outsb
xlat
or
jbe
mov
jae
stos
dec
dec
sub
jle
call
fnstcw
pop
mov
pushl
in
sub
outsb
add
cs
test
cmpb
mov
cmc
jmp
imul
fs
dec
cmp
fsubs
cld
ljmp
mov
test
lea
or
clc
jg
subb
and
addl
sub
sbb
pop
sub
ljmp
outsb
jp
bound
adc
and
adc
dec
cmp
xor
lret
imul
pushl
sbb
mov
addr16
in
adc
push
pop
and
int3
xor
movsb
cmpsl
gs
les
push
cmpsb
stc
test
imul
mov
jecxz
cs
cmp
call
sbb
adc
fwait
imul
fwait
hlt
push
mov
push
add
jmp
aaa
cmp
mov
repnz
in
clc
xor
call
or
xor
cmp
into
pop
stos
cmp
cmp
test
shr
xchg
or
cli
call
imul
mov
mov
leave
mov
dec
mov
outsl
push
jmp
jns
fdivrl
movsl
mov
jmp
mov
pop
xchg
push
xor
aas
sub
lds
mov
call
outsl
push
lods
xchg
fnclex
into
push
lret
jno
sbb
dec
sub
andl
call
test
lock
cmp
addl
push
dec
mov
xchg
pushl
mov
sub
test
cmpsb
xchg
js
outsl
inc
jl
xor
cli
in
ds
rcll
and
xorb
lcall
push
push
ljmp
push
inc
xor
dec
sbb
jb
imul
call
cli
rcl
and
adc
loop
jbe
xor
inc
add
into
mov
addr16
jg
ret
add
ss
or
pop
rolb
push
or
data16
fidivrs
ljmp
pushl
jmp
dec
sub
std
sbb
fs
pop
aas
popf
sbb
lea
jmp
dec
fs
fwait
mov
int3
mov
push
jnp
les
xlat
lret
call
inc
ret
mov
loope
inc
dec
movsb
jmp
lret
pushl
repnz
outsl
aas
mov
out
ja
notl
cmpsb
loop
mov
dec
hlt
adc
clc
jmp
cmp
ret
popf
xchg
or
in
bound
enter
mov
sbb
loop
loop
shlb
dec
push
adc
lcall
icebp
pop
mulb
int3
repz
adc
clc
fs
adcb
loopne
lahf
mov
push
push
pop
imul
arpl
push
push
and
js
std
mov
push
ret
and
sub
ljmp
sub
ja
pop
subb
push
pop
pop
es
cmc
push
enter
lea
push
incl
pop
pop
cmpsb
ss
mov
push
add
mov
mov
cld
in
decl
inc
or
jge
pop
scas
mov
cltd
sbb
or
push
mov
call
decl
pop
pop
and
gs
sbb
loope
sub
pop
call
scas
xor
jle
insb
clc
decl
fiaddl
push
test
faddl
mov
dec
call
aas
dec
sbb
ret
and
test
and
jae
jl
xchg
addr16
pushl
cld
push
insb
dec
mov
out
int3
ja
stc
insl
dec
enter
scas
loop
dec
pushl
in
inc
js
push
gs
movl
rclb
test
fisttps
xor
mov
call
cs
jb
imul
mov
xlat
outsb
fwait
movsb
test
out
fstpl
lcall
insb
jle
out
hlt
aas
adc
mov
cmpsb
push
sbb
pop
mov
mov
or
dec
out
xor
daa
mov
hlt
pop
ss
xor
push
aad
push
std
call
test
push
pusha
inc
movsb
test
cs
dec
cltd
outsb
pushl
outsb
test
push
adc
out
mov
push
repz
into
xchg
fbld
ljmp
jmp
in
into
or
jge
mov
mov
pushf
out
aaa
icebp
call
jp
mov
in
cltd
hlt
ss
mov
and
fcoms
pop
mov
lea
mov
mov
sbb
mov
jge
gs
push
in
pop
jge
in
mov
aam
push
xor
ficompl
mov
mov
mov
mov
iret
into
pop
pushf
fsubrl
outsl
add
jp
std
xchg
mov
mov
stos
inc
decl
aad
adcl
xchg
sub
icebp
push
mov
jbe
mov
filds
mov
ret
addb
or
shrb
enter
or
jg
dec
das
pop
je
fs
fadds
cmp
add
jg
xchg
cltd
or
cmc
xor
inc
rcl
push
adc
mov
or
lcall
stc
ss
cmp
int
lcall
aas
dec
psubb
scas
ja
sarl
sbb
ficompl
mov
mov
gs
fs
in
decl
out
pusha
ret
div
inc
fwait
pop
ret
sub
adc
and
mov
push
ss
xchg
call
pop
icebp
xchg
orl
mov
lret
inc
push
dec
mov
test
add
cmpb
and
pop
and
xchg
fwait
fildll
pop
adcl
push
call
jns
pop
gs
sbb
mov
mov
rcrl
popf
repnz
sbb
pushf
jge
cmp
mov
push
push
mov
dec
movsl
incl
lods
pop
mov
sbb
cmc
pop
outsl
out
int3
or
sbb
ret
cld
stos
fs
mov
mov
jge
repnz
push
jp
xorb
stc
lcall
cmc
fistps
and
jp
hlt
push
sar
jns
inc
nop
or
xor
shlb
arpl
mov
push
or
mov
mov
in
shll
xchg
mov
decl
or
in
push
pop
scas
jg
and
inc
mov
jge
mov
inc
pushf
cmp
sbb
jmp
scas
and
comiss
mov
int
clc
in
stos
adc
add
or
push
shll
add
cmp
cli
pop
ljmp
mov
test
inc
dec
dec
clc
call
pop
or
ljmp
jg
addr16
fistpll
lcall
sub
popf
sti
test
mov
inc
pop
les
aam
lcall
outsb
cld
xlat
push
les
pop
arpl
test
inc
adc
es
jne
push
call
xlat
lcall
inc
scas
sub
lcall
lret
mov
fistpl
scas
repnz
out
sahf
popl
add
sbb
decl
dec
scas
add
inc
mov
jne
mov
in
push
pop
cwtl
gs
popf
inc
cmp
cli
pushf
hlt
cmc
scas
clc
jg
fcompl
xchg
adc
rcrb
imul
cmp
lret
ljmp
dec
arpl
xchg
movsl
mov
pop
mov
mov
mov
jnp
pop
pop
dec
std
or
pop
dec
dec
call
inc
sub
adc
cli
push
push
dec
push
repnz
push
xchg
test
mov
cli
mov
adc
mov
cld
and
sbb
mov
push
iret
mov
push
xor
hlt
fisttps
mov
xchg
jp
pop
jg
xchg
pop
lock
xor
mov
cmp
cmp
sub
leave
aam
lock
inc
into
aaa
xchg
jno
cmp
jle
mov
fistpll
push
shrb
mov
dec
dec
add
fdivs
push
mov
arpl
sbb
or
iret
mov
or
mov
or
push
mov
adc
ds
sbb
xchg
fisttpll
fs
ljmp
addr16
cs
dec
adc
sub
insb
add
out
test
dec
xlat
and
icebp
fidivrl
loop
push
inc
shll
pop
in
fisttpl
mov
mov
decl
clc
repz
cmovbe
iret
push
shlb
clc
jmp
add
pop
jmp
test
int3
shrl
ljmp
test
leave
cmp
sub
xor
push
repnz
jne
mov
mov
pusha
mov
cmpsb
mov
mov
jle
xor
pop
lcall
out
negb
push
mov
ja
pop
xchg
inc
iret
jbe
or
dec
sbb
fwait
cwtl
imul
mov
ss
or
or
ja
rcrb
ror
incl
sub
pop
fsincos
pop
xor
inc
or
add
outsb
jmp
mov
jecxz
pushl
aad
aaa
pushf
std
or
xor
aad
in
cmp
pop
inc
ljmp
jmp
ficoml
ret
cmpsl
dec
jns
sar
decl
ret
popf
ret
ffree
repz
adc
test
adc
in
push
jno
call
push
fwait
bswap
fistl
cltd
mov
push
into
insl
cld
jmp
imul
jmp
loop
lods
hlt
sub
jno
test
add
sar
in
ret
mov
insl
mov
cld
fcoms
out
flds
cmp
ret
faddl
stc
test
call
xor
mov
fcomi
xor
insb
movsl
shll
adc
mov
bound
push
lcall
mov
push
mov
ja
mov
adc
adc
push
sub
pop
lcall
cmp
test
inc
push
sub
xchg
cmp
fdivrs
push
sarb
inc
cli
addr16
sbb
mov
call
or
daa
sbb
sbb
imul
cmp
mov
in
cmpsb
add
data16
mov
mov
mov
decl
decb
push
inc
mov
loope
xor
ficomps
bound
sar
jmp
decb
mulb
aaa
sbb
add
or
ljmp
mov
jno
call
call
adc
mov
dec
repz
xlat
xor
xchg
pop
sbb
sar
push
test
dec
ret
out
mov
cmp
pop
cmp
insl
xchg
push
xchg
aaa
mov
movsb
add
pop
fs
mov
push
cmp
add
jmp
mov
xor
jb
je
cmp
jecxz
sub
mov
and
push
add
repz
sub
xchg
orb
lock
das
or
into
or
sbb
mov
pop
sbb
fimuls
xchg
lea
adc
outsl
mov
ds
mov
out
push
mov
movsb
cmp
lret
outsl
orb
push
and
outsl
push
jp
push
add
call
lock
mov
xchg
xchg
inc
fsubrs
sub
ljmp
adc
sbb
and
cld
pusha
pop
fst
sbb
fdivrs
jmp
adc
addl
adc
pop
xor
xor
sub
jl
xchg
ss
jg
xchg
xor
ljmp
push
subb
add
mov
cli
lcall
and
mov
pop
sub
jmp
sub
and
fdivl
push
lods
dec
outsb
mov
lods
mov
push
jb
cs
fstps
pop
inc
sbb
ljmp
ja
es
cmp
lret
cmp
xor
enter
dec
cmp
aas
in
and
decl
ror
push
ja
push
jg
test
rcl
decl
hlt
xor
mov
sbbb
ljmp
or
sbb
xchg
xchg
or
das
inc
inc
pushf
sub
ret
or
pop
fldt
adc
cs
sbb
or
test
jbe
lods
call
fcoms
int3
jecxz
xor
and
dec
cmp
lock
ficomps
pop
mov
adc
adc
test
inc
clc
dec
inc
mov
decl
push
stos
dec
sub
aam
lods
xchg
dec
inc
mov
inc
dec
and
hlt
push
stc
sbb
icebp
mov
cld
mov
ljmp
aad
ds
sub
ljmp
jge
mov
pop
pop
sar
push
or
sub
xchg
pop
out
push
jmp
mov
call
mov
jb
movlps
xlat
push
xchg
fucomp
test
and
xchg
inc
aad
test
jb
mov
insb
std
test
shrb
ljmp
push
dec
cmp
pop
mov
lea
dec
push
xchg
clc
orl
and
inc
jp
ret
sar
out
pusha
push
loope
iret
mov
daa
scas
int3
loope
mov
mov
aaa
insb
push
inc
jne
in
jp
mov
pop
stc
mov
loope
inc
mov
int3
das
ret
sbb
jle
call
out
dec
mov
push
loop
cmpsl
push
mul
pop
and
adc
xor
mov
mov
call
repnz
outsl
std
dec
jge
mov
movsb
lret
xchg
adc
mov
incl
incl
pop
aas
xlat
shll
mov
cmp
or
inc
dec
mov
cli
imul
sahf
add
jle
jge
sarb
cli
mov
pusha
sbb
addr16
xor
insl
pusha
in
cli
andb
lahf
sbb
js
push
clc
dec
jmp
rorb
pop
jmp
mov
pop
fdivrl
jo
enter
adc
xor
aaa
and
dec
stc
in
fldcw
add
int3
dec
push
movsb
adc
call
enter
dec
es
out
xor
aas
loopne
fbstp
inc
push
ret
or
mov
loopne
ss
shl
daa
inc
adc
add
pusha
inc
push
xor
push
call
add
test
push
hlt
and
or
js
mov
mov
or
es
hlt
bound
incl
mov
inc
mov
mov
outsl
pop
jg
int
add
loop
cwtl
add
mov
fdiv
pop
mov
xchg
push
and
out
dec
repz
decl
or
dec
cltd
adc
int
pushf
sbb
fnstenv
and
mov
pushl
lock
sqrtps
or
push
enter
xchg
psrad
or
in
out
incl
leave
jb
jae
xchg
push
repnz
mov
mov
inc
push
out
add
jecxz
ljmp
mov
movsl
cmp
push
insb
adc
sti
dec
lods
aaa
xchg
or
out
addr16
imul
dec
in
sar
decl
cmp
fisubrs
mov
int3
xchg
inc
rolb
cmp
stos
push
push
add
xor
test
fistpl
cmp
shll
test
pushl
movsl
xchg
icebp
sbb
inc
pop
pop
cmp
ljmp
push
lock
std
cvtps2pi
pop
adc
pop
cmp
push
xor
mov
jo
lahf
popl
test
and
push
jmp
cli
jmp
test
inc
repnz
lcall
xchg
or
pushl
xorb
push
js
jg
test
cld
xchg
arpl
mov
mov
mov
add
aam
and
scas
popf
xchg
call
cmc
jmp
out
inc
mov
and
imul
test
inc
mov
dec
insl
jmp
dec
xor
mov
dec
cmc
mov
outsl
and
sbb
jcxz
push
jne
mov
jmp
jp
and
jb
aad
clc
mov
push
xchg
xchg
repz
adc
mov
mov
fs
add
cwtl
stos
scas
decl
mov
push
lock
jmp
ret
or
js
cmp
pop
jle
addr16
jge
jp
int
push
jns
adc
sahf
push
and
repnz
xchg
imul
bound
sbb
out
shll
aam
das
xchg
jns
repnz
std
mov
fldenv
push
add
push
hlt
repz
adc
insl
mov
ret
fbld
call
inc
lahf
cmc
sbb
cmp
mov
imul
frstor
faddl
mov
inc
aam
ficoml
insl
sti
js
inc
aad
jae
pop
decl
das
inc
xor
arpl
jle
jne
stc
sub
mov
mov
mov
out
insl
cld
decl
outsb
ja
and
mov
adc
lods
std
std
cmp
sub
mov
adc
in
jge
or
dec
or
ljmp
cli
ja
sub
int3
inc
xchg
inc
pop
inc
adc
adc
das
testb
aad
cli
fists
cli
in
and
inc
stos
sbb
jo
inc
mov
xchg
adc
outsb
sbbb
shlb
lods
decl
addr16
push
jl
jo
xor
shl
nop
mov
xor
pushl
mov
push
adc
sub
sub
sbb
popa
mov
fs
pop
fadds
add
inc
jecxz
cmp
cld
mov
adc
popa
decl
aam
jmp
pop
lods
sahf
mov
arpl
insl
inc
jmp
add
mov
incl
mov
push
xchg
jl
test
cmp
and
dec
mov
cld
cmp
lods
xor
fnstsw
js
loop
loop
bound
repnz
xchg
mov
lret
xor
std
mov
cmpsb
pop
out
ss
cmp
xor
aam
adc
daa
sbb
pushl
aas
jmp
pop
dec
or
push
cmpsb
lds
lea
jl
pop
adc
sti
outsl
mov
jge
ss
cmpsl
add
mov
or
test
loope
mov
and
push
push
xchg
mov
cmp
and
sub
pushl
sub
imul
out
dec
repnz
scas
in
mov
xor
and
incl
pop
std
shll
std
xchg
roll
enter
or
ljmp
cmp
push
mov
bound
mov
sbb
loopne
cmp
push
xchg
leave
mov
mov
and
push
add
jge
aas
ljmp
stc
subb
lret
inc
push
xchg
cmpsb
int3
repnz
pop
aaa
mov
mov
sbb
lcall
and
and
jb
xchg
lods
sbb
mov
fmul
outsb
icebp
add
jo
mov
push
ret
mov
cmp
and
call
sahf
shl
in
dec
mov
xchg
das
or
aaa
push
cld
and
in
fstpt
cld
jo
pop
lock
stc
outsl
popa
out
mov
push
ret
cli
add
cmp
into
cmp
incl
mulps
sub
cmp
mov
mov
movsl
hlt
je
popa
clc
call
loopne
nop
mov
mov
test
dec
push
inc
clc
jg
std
cmp
ljmp
pop
xchg
push
mov
adc
sub
test
mov
push
dec
ret
iret
fistps
sub
lahf
ret
push
sbb
push
jae
inc
sub
out
test
adc
or
or
or
mov
mov
stos
loope
jmp
std
jecxz
adc
out
mov
pop
cmp
fdiv
imul
mov
pop
xchg
mov
decl
add
ror
jp
cmp
push
jno
cwtl
lret
std
cmpsl
pop
pop
mov
jbe
or
mov
mov
push
cmp
dec
adcb
ror
pop
movsb
test
add
jae
mov
lret
mov
ror
sti
cmp
lea
or
mov
xchg
scas
scas
lock
sbb
lods
pop
call
cli
jns
divb
and
cmp
int3
std
lcall
inc
mov
mov
scas
sub
fwait
mov
call
adc
pop
cmp
notb
pop
sub
xor
or
inc
loopne
cld
sub
in
in
mov
and
push
scas
clc
xchg
aam
inc
pop
cs
fidivs
push
jecxz
incl
bound
pop
stos
stc
loop
cmpsb
and
add
inc
les
std
xchg
lcall
notb
mov
and
pop
xor
lahf
mul
dec
xchg
mov
add
mov
pusha
xchg
movsl
addl
and
data16
push
mov
jo
mov
dec
lret
ja
pop
lcall
inc
lds
loopne
xchg
sub
repnz
mov
outsl
sub
ret
dec
sub
ficoml
ljmp
icebp
lcall
arpl
fistl
sub
xor
dec
or
rorl
jmp
fs
loope
fildll
pop
mul
dec
mov
insl
mov
and
pop
or
or
sbb
std
xchg
outsl
inc
fildl
or
adc
dec
mov
push
movsl
add
dec
mov
sahf
in
faddl
out
sbb
sbb
pop
cwtl
add
and
in
mov
hlt
and
pushf
or
fs
sub
adc
rolb
push
fcmovbe
add
loop
push
jl
dec
ja
sbbl
mov
dec
sub
mov
sbb
add
lods
cltd
mov
jecxz
mov
pop
lds
ret
push
fmul
xor
lcall
jne
cmc
jo
imul
cld
imul
mov
cli
cmp
cwtl
jo
mov
lahf
sahf
idiv
add
jo
mov
inc
das
enter
int3
adcl
pushl
push
cmp
mov
imul
push
ret
mov
clc
mov
pushl
or
mov
cmp
loop
hlt
push
xchg
or
adcl
jp
ds
call
add
push
xor
aam
test
lods
pop
loop
fidivl
fbld
call
and
mov
data16
jno
dec
pop
pop
enter
sub
or
xlat
adc
fstp
jns
pop
aas
jle
sub
lahf
mov
add
mov
cmp
xchg
and
ss
push
jge
dec
repz
enter
ret
daa
insb
mov
lahf
dec
insb
ret
daa
iret
xchg
aam
xchg
mov
jle
cwtl
das
or
xor
iret
add
jae
mov
xchg
test
push
lods
cltd
nop
push
mov
outsl
clc
incl
test
xchg
sahf
mov
lods
test
movsl
fs
jp
bnd
sahf
jg
ljmp
mov
std
loop
aam
adc
call
jp
mov
xchg
jg
lcall
add
sti
cmc
push
add
sbb
dec
in
mov
incl
cmp
jb,pt
cmp
sbb
leave
shr
pop
scas
fmul
xor
hlt
ljmp
fsub
popf
fadd
leave
mov
lds
lahf
icebp
cltd
xchg
add
pop
push
push
incl
loop
out
or
jl
mov
test
push
jmp
xorb
cmp
jl
cmp
xor
mov
push
rclb
or
push
xor
or
mov
xchg
call
inc
aas
cmp
or
test
xchg
cmp
enter
in
jne
je
mov
fwait
ss
dec
jbe
sbb
test
add
jns
jae
test
mov
lcall
adc
test
inc
jb
cltd
push
xor
xchg
lret
mov
jns
out
mov
fdivr
lahf
push
incl
xchg
cmc
cltd
jae
adc
and
stc
pop
and
les
mov
jo
push
ds
xlat
inc
jl
ljmp
cli
push
inc
movsl
dec
cs
pop
lods
mov
sti
lret
ret
scas
mov
and
fadd
mov
jmp
inc
fistpl
push
mov
lret
mov
inc
icebp
push
xchg
test
incl
lods
push
hlt
and
xchg
in
xor
test
lcall
mov
test
es
arpl
stos
adc
dec
mov
inc
xchg
and
cli
fucompp
jge
and
add
decl
scas
jecxz
sub
rorb
or
arpl
mov
out
cli
fstl
lret
iret
cmp
fildl
and
rolb
pop
aam
out
xor
mov
dec
cmp
xor
aas
xchg
loope
jbe
fnstenv
lea
dec
xor
and
decl
js
mov
pop
imull
in
fadds
pushl
call
adc
mov
xor
push
adcl
adc
mov
mov
sbb
xchg
cmp
push
xchg
mov
daa
pop
ja
lcall
mov
push
scas
xlat
test
pop
mov
imul
imulb
sub
decl
test
cmpsl
cld
lods
addb
sbb
je
inc
out
jmp
ret
push
sub
mov
xor
sub
jmp
and
call
add
stos
popa
repnz
dec
cli
jnp
mov
mov
mov
in
scas
inc
into
cli
or
ljmp
adc
add
push
mov
sub
mov
jne
repnz
jg
out
mov
xchg
pop
lock
sti
pop
xor
test
pushl
idivb
sbb
repz
ret
lock
cmp
inc
adc
or
inc
scas
add
fld
mov
mov
aad
dec
xchg
test
lret
cld
call
in
jnp
fs
ficoms
jge
cmp
sub
icebp
incl
dec
mov
enter
sbb
arpl
lcall
mov
arpl
into
mov
inc
lcall
call
and
test
or
or
mov
inc
mov
fwait
loop
ljmp
push
dec
cmp
push
std
cmp
inc
cmc
dec
mov
mov
negb
pop
fcoml
scas
push
or
loope
aam
cli
fcomip
jns
and
bnd
sbbb
mov
popf
dec
les
pushl
or
dec
jo
out
xor
fmulp
dec
dec
fs
jg
mov
add
and
enter
data16
ficomps
jg
call
ret
adc
fldcw
xchg
xchg
aas
push
jmp
jbe
inc
clc
clc
xchg
fidivrs
sub
mov
in
cmc
xchg
mov
jb
dec
fstpt
jl
cld
add
outsl
outsb
pop
shrl
mov
mov
xchg
cmp
aam
xchg
test
push
pmulhuw
ja
cli
inc
cmp
je
or
sbb
insb
das
pop
cs
pushl
inc
outsb
je
lcall
mov
subb
adc
sti
jbe
pushl
xor
or
decb
out
mov
lret
dec
and
and
call
aam
lock
pop
test
inc
push
sub
sar
add
sbb
outsl
fists
mov
jg
js
push
jl
stc
inc
enter
inc
cwtl
cwtl
iretw
cli
ljmp
call
mov
dec
cmp
xor
inc
cmc
push
aaa
sbb
ret
test
pushl
adc
insb
mov
pop
push
jns
sub
loope
int3
sub
mov
loope
jle
fistpl
ljmp
push
popf
test
jmp
jg
cmp
push
mov
fs
cmc
xor
pop
mov
xor
daa
inc
mov
or
ds
inc
pop
ret
cmp
cmp
cli
inc
push
pop
in
add
and
adc
dec
cltd
aaa
jmp
pop
in
push
add
push
mov
push
ljmp
decl
inc
stos
outsb
mov
inc
xchg
jne
or
lret
dec
shll
xchg
mov
adc
clc
gs
js
mov
xchg
mov
add
out
rclb
inc
shll
pop
sub
cmpsb
pushf
push
in
cmpsb
addr16
lcall
xchg
mov
popf
mov
mov
sbb
mov
decl
stc
dec
cmc
les
fildl
popa
lea
cmpb
inc
inc
iret
insb
lods
lcall
ljmp
mov
test
in
jo
pop
loopne
lahf
popf
movsl
sahf
lods
ja
sbb
lods
andl
xchg
mov
call
rclb
xlat
xor
mov
incl
ljmp
movsl
dec
inc
daa
nop
cs
jge
sub
jno
and
lcall
push
loop
fisttpl
push
in
into
data16
iret
xchg
in
sbb
aam
or
lods
mov
icebp
push
les
mov
loop
dec
sub
decl
lret
lods
cmpsl
jns
inc
add
jl,pt
adc
adc
xor
mov
fnstsw
movsl
lds
stc
and
repz
ret
lcall
loope
push
add
incl
hlt
sahf
mov
fcoms
and
bound
decl
inc
rclb
sbb
mov
mov
inc
mov
fsubrs
and
inc
das
mov
mov
xchg
mov
inc
push
cmp
fcomip
movsl
cmp
rcrb
scas
out
stos
loop
mov
out
push
inc
adc
add
icebp
cwtl
pop
sub
aas
mov
repnz
sar
in
ja
mov
movsb
out
cs
adc
mov
jo
xchg
in
nop
inc
xchg
lods
mov
jnp
dec
stc
push
aad
adc
in
jnp
xor
cmp
cmpsb
jmp
cmpsb
jbe
add
jl
js
imulb
sbb
shl
mov
dec
jae
push
in
pusha
cld
inc
out
fcmovb
mov
pop
loopne
pop
push
jp
push
jne
cli
cmpsb
loop
mov
sbb
xor
pushf
decl
push
cmp
sti
out
xchg
or
gs
je
mov
sti
loope
out
mov
xor
dec
sar
popf
lds
dec
jne
call
call
mov
or
mov
bswap
jb
nop
popf
or
into
sbb
lcall
jg
lcall
push
out
je
cmp
pop
inc
sub
mov
jns
push
adc
sub
and
adc
push
out
xor
pop
sub
sbb
cmp
inc
clc
js
orb
aaa
xor
dec
dec
sub
adc
repnz
ret
into
ljmp
inc
cld
xchg
incb
pop
test
testb
xor
clc
dec
out
inc
stc
out
push
insl
pop
and
jmp
xor
ljmp
fsubs
stos
pusha
pop
jge
mov
movsb
scas
test
clc
jg
cwtl
xchg
sub
inc
adc
icebp
gs
or
xchg
jno
mov
stos
jb
aad
push
xchg
cmpb
push
jg
iret
lods
inc
push
es
inc
sbb
xchg
adc
inc
call
push
sub
call
mov
mov
daa
push
outsl
xor
sahf
stos
pushf
loop
pop
mov
inc
and
decl
loop
jl
pop
inc
mov
inc
xchg
cs
arpl
hlt
jmp
cli
dec
inc
fisttpl
mov
pop
pop
or
sub
pop
xchg
xor
fwait
adc
fwait
dec
ljmp
fst
popf
add
mov
xchg
mulb
scas
xor
dec
mov
decl
sbb
mov
mov
dec
sub
and
fdivrp
ljmp
movsb
inc
gs
out
jmp
pop
mov
pop
inc
jne
mov
mov
popa
jmp
orb
xchg
add
and
test
dec
test
push
movsb
xor
pop
and
mov
jmp
sbb
out
out
mov
mov
cmp
sub
sub
dec
scas
dec
jle
bound
lods
scas
fwait
adc
inc
adc
and
add
decl
rcl
jne
mov
push
lods
out
cmp
bound
and
mov
mov
cmpsb
sbbl
mov
lock
mov
pop
pop
mov
mov
cmp
sarb
lahf
inc
push
lods
pop
nop
add
xchg
sbb
dec
into
mov
jae
fwait
aam
jbe
cmp
cli
outsb
sub
sbb
iret
or
outsl
movsb
aam
insl
mov
sub
call
jge
push
jmp
or
call
lret
and
push
cltd
fisttps
push
jg
mov
das
jne
loope
enter
and
pushl
xlat
test
fidivl
nop
repnz
stc
lahf
scas
xlat
js
loope
adc
sbb
frstor
out
je
xorb
out
cmp
jg
cld
arpl
outsl
mov
xor
jo
ret
ljmp
pop
xchg
stos
dec
jl
mov
popf
xor
xchg
cmp
lret
fcomip
insb
call
call
test
int
xchg
dec
lds
es
pop
push
push
pop
mov
fildll
jo
movsl
movsb
aad
jg
das
xor
cmpsl
sub
fstps
adcl
sbb
ljmp
cli
cmpsl
xor
dec
cltd
jo
ret
xor
add
push
ret
outsb
mov
xor
sarb
jbe
and
jg
pop
add
jmp
push
mov
mov
pop
sub
pop
aad
cli
xor
mov
jbe
mov
xor
into
ds
xor
scas
cmp
inc
lods
and
ljmp
cwtl
into
outsl
into
das
js
scas
je
xchg
and
inc
mov
jno
aaa
call
sbb
sub
std
insb
shll
and
cmpb
mov
push
dec
iret
add
sarl
stc
and
outsl
mov
clc
push
daa
aas
push
inc
jb
jmp
imul
loopne
imul
push
test
jns
jmp
jl
jp
xchg
sbb
decl
stos
sub
xchg
repnz
xor
xchg
outsl
add
pushl
hlt
ret
inc
insl
inc
shrb
ljmp
pop
shrl
test
aam
jl
scas
inc
push
xor
nop
and
pushl
cmp
mov
test
vrsqrtps
scas
enter
lahf
inc
pop
mov
pop
mov
aad
jmp
daa
push
mov
mov
push
pop
mov
call
addr16
ss
mov
mov
scas
push
ret
dec
dec
imul
sbb
ljmp
je
mov
in
sbb
stos
scas
push
ret
lcall
pop
or
xchg
xor
push
sahf
xor
push
divb
sub
lock
jmp
cmpsb
test
push
int3
aad
stc
push
jle
pushf
add
or
lret
adc
idiv
incl
out
add
dec
mov
test
dec
dec
dec
pop
push
xchg
or
gs
sahf
dec
sarb
fists
lods
cmp
lahf
xor
sbb
pop
jmp
mov
leave
nop
add
adc
out
clc
decl
inc
cltd
mov
mov
xchg
pop
sbb
or
pop
or
jecxz
sub
int3
pop
sbb
jge
pop
rolb
lock
jb
sub
cmp
xchg
cld
stos
inc
cmpsb
cmp
cmp
push
and
call
add
mov
je
jae
inc
mov
enter
aad
adc
movsb
popf
sahf
xchg
ljmp
mov
aaa
nop
or
imulb
cld
dec
rolb
sar
inc
ror
sub
es
sar
ficomps
cwtl
dec
adc
sbb
adc
outsb
add
add
test
add
sarl
push
scas
orb
scas
mov
scas
pop
mov
movsl
addr16
mov
mov
push
cli
test
jmp
dec
mull
mov
adc
pop
fisubs
stos
mov
repz
cmp
gs
jl
movq
lds
stos
call
aaa
fwait
push
mov
pop
subb
pop
mov
xchg
lret
jne
das
mov
pop
ss
imull
sbb
pop
mov
call
insb
inc
adc
inc
mov
sbb
out
mov
push
xlat
in
ss
pop
jmp
cltd
push
pop
es
xor
mov
push
daa
je
sbb
clc
pushf
idivl
and
call
ret
lahf
inc
mul
ljmp
cmp
das
cli
fldt
lods
movsl
sti
lret
sbb
in
ror
jp
scas
xchg
icebp
pushl
and
lahf
das
push
xchg
and
adc
push
push
mov
call
or
stc
cmp
adc
adc
push
sahf
xlat
sub
je
adc
pop
aad
call
into
cmp
or
or
lret
in
sbb
loop
jmp
cmp
pop
imul
and
decl
stos
cmpsb
outsl
jne
gs
xchg
or
jae
sub
pop
test
ja
call
dec
add
xlat
mov
jge
sbb
in
mov
push
mov
add
movb
mov
xlat
lret
and
ljmp
inc
loop
ljmp
push
cmp
pushl
sbb
inc
std
cmp
gs
push
daa
or
jl
push
sbb
shlb
jg
movsl
loopne
push
cld
push
jg
nop
mov
pop
clc
or
and
push
sub
push
xchg
call
xchg
mov
lods
xchg
repz
sti
incl
push
fisubrl
mov
pop
enter
cwtl
cwtl
or
pop
push
mov
ljmp
popf
jge
jg
lods
sbb
shlb
sub
sub
stos
rcll
pop
lcall
inc
hlt
shll
jg
out
ss
aam
sbbl
mov
dec
leave
lods
jecxz
sbb
icebp
cmp
dec
push
sbb
push
subl
ret
dec
loop
fbld
xchg
adc
ss
bound
pop
out
jne
jno
jle
ja
call
mov
mov
cmp
rcll
mov
ret
inc
xlat
gs
mov
sbb
mov
lret
enter
fildl
xchg
ret
cmc
outsl
mov
jmp
cmpsb
jns
testb
lcall
pop
cmp
aad
mov
dec
mov
adc
adc
lea
fs
mov
repnz
pushf
push
sbb
push
pusha
inc
add
dec
subb
jae
jne
rcrb
ds
push
mov
jb
push
pop
enter
mov
incl
lahf
aaa
inc
or
call
or
xchg
or
andw
loope
push
push
int3
mov
mov
xchg
mov
jmp
sti
xor
lcall
shlb
into
or
fadds
ficoms
mov
fildll
in
rcrl
scas
gs
jmp
clc
idivb
subl
ljmp
mov
jnp
inc
cli
imul
leave
mov
out
xchg
jae
sti
scas
xchg
hlt
cld
dec
je
ja
mov
jmp
xor
sub
je
je
pop
je
jbe
scas
add
adc
xor
aad
or
lcall
push
daa
sbb
jle
pop
or
in
mov
cltd
imul
aam
iret
sub
cmpb
pop
pop
fisttpll
cmc
adc
cmpps
jno
subl
push
sahf
xor
or
xlat
daa
lcall
movsb
mov
mov
cltd
in
test
pop
xchg
fnstcw
outsb
rcl
enter
mov
fldenv
lahf
cs
dec
pop
cmp
sahf
stos
out
mov
dec
arpl
xor
pop
jno
and
jmp
out
jbe
jmp
dec
mov
inc
les
imull
inc
and
std
repnz
mov
loopne
mov
xchg
arpl
add
adc
das
push
fcomip
out
push
pop
inc
lcall
dec
mov
popa
sahf
xor
pop
fldl
or
lcall
ret
adc
movsb
ds
xor
push
inc
mov
clc
cmp
subps
jmp
sbb
int
jg
cmc
mov
enter
lcall
dec
mov
mov
cmp
enter
es
xchg
jecxz
loopne
stc
pop
mov
adc
pop
jmp
popf
sbbl
fcmovnb
faddl
jg
in
jg
mov
jl
push
test
pushl
push
mov
mov
pop
xchg
pop
and
xchg
sub
mov
adc
lcall
pop
iret
cmc
rol
push
repz
stos
jmp
sbb
je
in
push
sub
leave
fnstenv
call
add
outsb
push
mov
scas
scas
cltd
jl
dec
xchg
jne
sbb
arpl
adc
pop
jb
xlat
or
jmp
xor
adc
mov
call
sub
hlt
icebp
adc
pusha
cmp
decl
mov
int3
incb
cwtl
xchg
push
test
inc
inc
aaa
cvtps2pi
jmp
xchg
cltd
add
jg
add
jp
call
pop
cwtl
icebp
movsb
and
and
aas
inc
ret
add
jno
dec
push
jg
cltd
lret
in
sub
iret
xchg
leave
xlat
xchg
and
and
roll
enter
out
and
or
adc
jae
xchg
xor
movups
cs
mov
call
outsb
sub
mov
test
mov
lock
out
pop
mov
mov
pushl
ret
mov
jno
inc
jb
pusha
xchg
sbb
mov
sub
push
pushl
test
mov
sbb
out
adc
rorl
movsl
call
fstl
outsb
adc
inc
test
in
les
les
jle
fisubrl
fwait
pushl
std
pushl
inc
dec
addr16
adc
ds
add
mov
and
aam
sub
dec
roll
mov
add
mov
inc
fs
out
and
inc
push
mov
ret
cli
sar
lcall
pop
insl
sbb
xchg
mov
pop
adc
mov
jg
test
movsl
push
jns
pop
arpl
pop
loop
pop
shl
mov
fisttpl
ret
ss
sub
incl
fstpl
cmp
push
sahf
fisubrs
jmp
xor
push
std
add
jnp
ja
add
cmp
push
xor
cld
fcomip
ljmp
push
sub
jmp
pop
push
and
dec
fistps
ja
jno
and
faddp
gs
mov
push
xor
lret
cmpsb
push
inc
sbb
scas
xor
mov
push
or
incl
lcall
fnstcw
inc
dec
pop
xor
mov
or
out
les
jge
idiv
insl
in
jnp
bound
in
cli
inc
or
out
pop
inc
fnsave
push
ret
mov
ljmp
call
enter
in
pusha
inc
lock
insl
data16
imul
int
xorb
testb
lock
jmp
cs
jno
mov
sbb
pushf
xor
sbb
jmp
mov
int
dec
xor
pop
subb
or
xchg
push
test
cmp
mov
push
push
adc
fwait
push
popf
out
cmpsl
jge
dec
cwtl
and
fistpll
repz
decl
xor
das
or
xor
in
popa
xorl
cmp
mov
test
push
xlat
or
sar
call
jp
cmp
stos
sti
negl
xorb
xchg
lcall
inc
sub
ja
sbb
add
loop
je
pop
js
idivb
lcall
jmp
fistl
mov
push
idivb
mov
sub
ret
mov
pop
dec
adc
jmp
ss
decl
sbb
data16
add
or
inc
jmp
sub
sbb
in
cmp
jg
lcall
int
mov
dec
mov
pop
test
pop
sub
rorl
jmp
push
cmp
or
icebp
mov
mov
add
mov
cli
dec
xor
out
fdivrp
mov
das
hlt
jp
arpl
jl
add
pop
cmp
arpl
push
mov
call
cmp
push
and
mov
sbb
inc
cmc
imul
sbb
push
mov
mov
rep
fstpt
fcoml
clc
jmp
mov
mov
stos
arpl
fwait
clc
mov
cwtl
call
mov
ljmp
aaa
in
dec
xor
dec
sub
mov
dec
xor
test
sti
das
adc
lret
pop
movsl
dec
cld
call
xlat
mov
jno
pop
out
bound
xchg
fcompl
ficompl
cmpsb
mov
jno
addr16
jmp
stos
aaa
stos
loope
add
jle
cmpsb
jns
es
mov
mov
pusha
out
jle
push
push
icebp
call
cmp
or
std
xchg
out
inc
test
mov
jmp
rol
dec
or
pop
mov
scas
out
aas
nop
mov
xchg
in
jns
xor
mov
pop
sub
ret
push
fucomi
fstpl
lea
inc
iret
sti
aad
rclb
dec
cld
push
fs
sbb
test
add
loop
or
mov
mov
sbb
xchg
into
adc
out
aad
cmp
mov
sti
icebp
cs
filds
xor
mov
xor
mov
mov
sub
jmp
add
test
push
jecxz
cmp
add
js
das
sbb
insl
push
sub
into
jmp
stos
or
sub
pop
adc
push
das
add
les
sub
sbb
mov
in
inc
divl
xchg
lahf
and
jg
incl
pop
dec
jmp
jo
inc
inc
and
aas
cs
push
call
pop
imul
pop
fs
je
sub
hlt
and
sahf
pop
jbe
std
ljmp
dec
mov
test
pop
lea
std
adc
jp
or
mov
mov
pop
rcrb
pop
mov
shll
pop
loopne
test
jle
loope
icebp
push
mov
ljmp
add
iret
jmp
add
or
mov
popf
push
lods
mov
rcrb
push
adc
mov
dec
test
dec
or
jb
and
js
aaa
xor
xchg
cmp
incl
sbb
pop
inc
push
sub
test
ret
int
aad
jle
mov
mov
push
dec
data16
decl
lock
cmp
rclb
xchg
in
xchg
inc
aaa
cld
push
sarb
fsubrs
mov
sbb
ret
adc
pushl
or
mov
movsb
outsb
mov
xor
stos
xor
pushf
jg
rcll
daa
and
mov
pop
xchg
nop
pop
mov
sub
arpl
jg
mov
sbb
ja
mov
outsb
inc
dec
cltd
es
sbb
fldl
ds
pop
outsb
aam
add
jnp
jbe
lcall
or
fmull
pop
andl
imul
dec
sahf
or
cmp
sbb
pop
cltd
xchg
inc
mov
decl
xchg
adc
lret
in
and
sbb
mul
lds
cmp
mov
lods
ss
ret
popf
arpl
xlat
call
mov
rcr
xchg
lock
insb
pop
jge
ds
cmp
inc
or
in
add
inc
insb
shll
sbb
test
cmp
jle
and
sbb
push
cmp
mov
and
jle
aad
xor
pop
in
enter
push
in
out
cli
js
mov
call
dec
sbb
movsb
add
push
incl
in
sbbl
aad
les
stc
xchg
incl
sbb
mov
subl
cmp
inc
xchg
jmp
mov
pop
lock
inc
or
daa
xchg
jge
shr
adc
and
lret
jnp
push
lahf
xor
push
scas
and
sarb
inc
jbe
je
nop
sbbb
xor
inc
add
adc
fcomi
stc
es
xorb
xchg
pop
lods
test
and
ds
pushl
sbbb
inc
ret
inc
call
test
sub
hlt
pop
outsl
movsb
dec
dec
ljmp
mov
pop
or
incl
mov
jno
jmp
shl
repz
mov
pushf
mov
mov
cmpsl
clc
or
popf
sbb
add
incl
ss
inc
inc
fdivs
xchg
lcall
sti
das
or
ds
dec
add
and
xor
dec
jge
xor
insb
adc
push
and
mov
jnp
lods
imul
dec
popf
mov
aaa
inc
cld
mov
jae
jmp
fildl
lcall
pushl
cs
in
stc
nop
test
cmp
icebp
and
mov
imul
mov
push
mov
dec
add
push
pop
xlat
and
adc
jg
and
ds
movsl
int3
add
hlt
incl
or
sbb
mov
pop
push
add
outsl
add
or
mov
les
outsb
cltd
pushf
mov
insl
fs
jmp
ret
xchg
xchg
pop
data16
xchg
or
push
data16
cmp
lret
cmp
lcall
pushw
pop
push
jg
fs
enter
fisttps
jp
jmp
push
adc
lods
imul
and
mov
mov
out
jb
or
sub
js
insb
pushf
mov
jnp
ffree
scas
test
movsl
fs
sub
pop
push
lock
bound
rcll
sbb
inc
stos
jmp
call
imul
jl
xchg
inc
push
pop
in
stos
push
mov
pop
bnd
mov
lret
sub
sbb
push
pusha
ljmp
mov
cld
clc
sahf
nop
jns
rcrl
inc
cwtl
test
jo
push
hlt
mov
aam
lcall
adc
cmp
es
repnz
dec
pop
jno
pop
push
jne
dec
loope
cmp
mov
and
bnd
dec
pusha
adc
fbstp
insl
pushl
sti
jno
cs
lods
aaa
arpl
dec
add
xchg
inc
mov
xor
ret
lret
outsb
arpl
cmp
xorb
aas
push
mov
push
lods
inc
filds
or
fmull
inc
pushl
repz
or
aaa
add
and
jae
ljmp
cmc
xor
sarb
mulb
push
lds
adc
push
out
cli
aad
inc
inc
shll
out
in
sbbl
dec
dec
cmpsl
mov
jo
dec
call
adc
enter
jne
movsb
push
lgs
inc
adc
cltd
and
pop
sahf
dec
lret
or
outsl
in
push
mov
outsl
lcall
adc
mov
and
mov
add
rcll
stos
gs
jmp
jl
mov
mov
jmp
out
das
sti
mov
out
lds
sbb
in
jge
add
ss
scas
adc
call
int3
roll
or
inc
mov
xor
and
daa
sbb
in
and
pushl
mov
inc
ret
cmp
sbb
sub
sub
mov
dec
sub
jo
loopne
or
test
lods
cld
decl
adc
mov
inc
mov
mov
arpl
in
aam
ds
push
sbb
jl
sub
stos
sbb
idivl
jg
in
mov
cld
cmc
jp
insb
loop
add
jecxz
in
mov
add
sub
insl
dec
incb
mov
test
push
pop
cmpsb
or
ret
jns
inc
push
add
sbb
xlat
rorl
cmp
dec
push
jmp
icebp
push
mov
xor
aad
pushl
pop
iret
mov
adc
mov
inc
cmpsl
aam
loope
cmp
add
scas
inc
je
sbb
cli
rcrl
mov
je
xor
in
xchg
mov
xchg
jecxz
cmc
jb
call
push
cmp
push
and
xor
sarb
pushf
roll
rcrl
aaa
cltd
sar
outsb
cmpsl
inc
cmp
dec
inc
lock
ljmp
and
push
popa
adc
jle
xor
repnz
iret
xor
fdivs
or
mov
data16
movsl
std
xchg
jbe
scas
xchg
lods
scas
mov
jmp
scas
js
pop
icebp
faddl
shlb
jg
incl
into
xchg
scas
sbb
ret
mov
and
xchg
stos
cltd
lcall
scas
daa
jp
mov
roll
cmp
test
out
add
pop
jns
push
sbbb
outsl
lret
push
and
sub
inc
sbb
stc
push
or
shrb
roll
loope
pushl
je
dec
sub
lea
mov
inc
mov
mov
ja
loop
cmp
cmpsb
mov
push
bnd
cmpsl
mov
xchg
jp
stos
incl
inc
xchg
inc
fucom
lea
imul
and
or
mov
rcrb
incl
jmp
fcoml
sub
xchg
out
iret
pop
lret
pop
or
mov
cmp
incl
xlat
mov
iretw
and
insl
icebp
sub
adc
repz
add
lcall
xchg
sarl
cwtl
add
das
bound
jns
cld
mov
jg
mov
in
pop
sub
xchg
jg
add
clc
sbb
push
rcrl
xchg
cmp
mov
scas
dec
sar
sub
sub
sbb
mov
pop
daa
push
pop
stos
sub
fimuls
mov
mov
ljmp
xor
or
jle
push
jecxz
push
outsb
int
jg
gs
repz
push
iret
leave
cmpsl
or
faddl
subl
aam
xchg
scas
aaa
mov
gs
ja
jmp
out
xor
int3
mov
ljmp
decb
aam
push
xchg
xchg
inc
mov
negl
cli
pop
fwait
pushf
test
movsl
aas
inc
inc
mov
sbb
arpl
arpl
lret
insl
rclb
fidivs
call
stos
adc
sub
jne
and
popa
and
outsl
or
out
mov
xchg
das
rcr
xor
enter
sub
adc
ret
ljmp
lock
mov
push
push
adc
fnstcw
loop
mov
adc
sbb
dec
stos
dec
ret
mov
cmp
inc
aas
fsubs
in
fnstsw
jne
icebp
ret
stos
aam
test
cmpsb
ljmp
cmc
mov
cmp
stos
adc
cltd
mov
pushl
cmp
mov
mov
sub
ret
test
into
xor
test
mov
and
dec
xor
inc
sub
clc
pusha
addl
das
clc
push
mov
mov
je
mov
movsl
and
fnstsw
pop
mov
push
jge
xorl
loope
cltd
or
mov
scas
lcall
repnz
mov
fcomps
jnp
sahf
or
mov
int3
movb
jge
push
lods
lock
cli
inc
int
or
mov
repz
dec
ds
pop
jo
push
cmp
push
dec
popf
xchg
mov
pop
movsb
cmpl
sbb
repnz
mov
mov
xchg
sub
inc
jae
bound
dec
lock
dec
push
or
sub
mov
leave
insl
bound
imul
call
or
orl
rcrb
or
jmp
icebp
or
cmp
les
sar
cld
leave
pop
into
adc
popf
push
fisubs
sbb
sbb
inc
pop
ljmp
lahf
pop
adc
or
xor
cwtl
shrb
sahf
les
jle
pop
fwait
outsb
jb
push
in
shr
pop
enter
pop
mov
inc
outsb
push
bound
filds
std
pop
mov
sub
or
inc
stos
stos
inc
cmp
fsubrl
mov
ja
push
imul
jns
insb
adc
jg
mov
xlat
xchg
sub
mov
inc
and
jmp
loop
mov
loopne
inc
xchg
lea
dec
aaa
mov
psllw
mov
jmp
mov
cmpsb
cli
push
pop
lret
xlat
mov
pushl
or
out
pop
ret
outsl
scas
cli
mov
stos
or
cs
aaa
sahf
pop
mov
mov
mov
dec
decl
aad
sbb
mov
mov
fcoml
mov
adc
add
pushl
rcl
pop
arpl
xorb
ror
rorb
idivl
push
enter
push
cld
incl
js
stos
add
cmpsl
into
imul
adc
pop
addr16
test
repnz
jg
push
sub
test
imul
mov
cli
push
mov
jl
mov
dec
das
mov
test
std
movsb
push
cmc
and
push
cmp
and
repnz
add
pop
sub
arpl
aam
into
and
cli
or
mov
push
and
jmp
mov
js
xchg
inc
in
mov
rcr
fistl
scas
push
loope
mov
sub
adc
xchg
and
int3
xor
incl
xchg
hlt
js
push
mov
dec
mov
and
sub
sahf
call
sbb
ss
ja
loopne
test
pushf
out
dec
insb
movsb
dec
fistpl
in
ljmp
lcall
or
stos
add
mov
incb
out
and
ljmp
xchg
cld
enter
ror
lret
xor
mov
outsb
nopl
dec
fidivrl
stos
add
ret
xor
lock
scas
jne
es
add
sbb
fstpt
or
aad
sbb
insl
add
test
int
imul
fisttps
jmp
out
pop
or
push
lret
clc
xchg
push
int3
ljmp
in
dec
dec
push
test
iret
or
sub
xor
adc
push
out
enter
lock
call
xchg
mov
roll
jmp
lods
pusha
or
testb
fbstp
lea
je
mov
sti
pop
lret
repnz
lods
xchg
and
mov
decl
dec
leave
stc
out
test
inc
add
jns
mov
adc
mov
cmp
jbe
mov
mov
add
xchg
cltd
mov
sub
pushl
clc
int3
xlat
xchg
std
out
jge
subb
into
jecxz
repz
cli
mov
sub
push
lret
popa
jge
popa
sbb
mov
into
jg
xchg
movzbl
xchg
and
dec
cmpsb
or
adc
aas
sbbl
flds
ljmp
pop
int
pop
scas
inc
xchg
call
test
lret
mov
pop
aas
aaa
out
jno
dec
decl
jnp
std
hlt
insb
pop
dec
mov
mov
test
ret
sti
dec
cmpsb
shl
mulb
imul
xchg
arpl
pop
sub
movsb
mov
mov
pushf
xchg
pop
pop
sub
mul
mov
adc
and
daa
notl
data16
mov
jo
hlt
push
push
fdivp
xchg
jae
push
jle
or
pop
js
js
add
xor
jae
add
insl
pushf
mov
dec
jnp
push
push
cmp
xor
sub
mov
xchg
add
jbe
shrl
mov
push
fsts
mov
push
xor
repz
xlat
add
mov
idiv
insl
ljmp
ljmp
shll
popf
sahf
es
loopne,pt
lret
xchg
jb
pop
je
pushl
pop
repnz
xchg
and
mov
popf
mov
xchg
leave
shlb
insb
inc
mov
inc
xchg
xchg
mov
inc
pushf
decl
mov
pop
xchg
cwtl
int3
sbb
xchg
pop
adc
hlt
cld
data16
inc
out
adc
pop
cli
lcall
xchg
fwait
push
je
sbb
cmp
mov
into
stos
shll
movsb
popf
lods
pop
add
add
loopne
mov
adc
sbb
aas
pop
fimuls
inc
sbb
out
pop
mov
lods
and
jo
popa
pavgw
sub
scas
in
and
inc
or
pop
mov
ret
stos
das
add
mov
or
xor
shl
outsb
sbb
sub
mov
ljmp
mov
fwait
pusha
jmp
push
sub
inc
scas
test
mov
mov
sub
popa
jb
movsb
inc
xlat
pushl
cs
push
dec
cltd
dec
jne
lahf
pop
movsl
pop
push
push
std
xchg
in
dec
fisubrl
mov
stos
cs
aas
push
push
fnstcw
call
inc
aad
das
int3
mov
idivl
int
mov
push
mov
lds
loope
sbb
lods
hlt
aas
repz
je
inc
js
dec
dec
inc
out
ljmp
hlt
xor
notl
jne
test
and
inc
icebp
and
faddl
add
pushl
sub
pop
nop
nop
fwait
orl
mov
ja
dec
add
in
sbb
ss
jmp
out
sub
data16
pop
xor
cwtl
test
andl
adc
data16
lock
gs
jg
movsl
mov
repz
jnp
ds
arpl
mov
das
cli
decl
jb
std
pop
push
jge
cmp
and
inc
inc
cmpsl
sahf
mov
inc
lods
dec
rorb
mov
idiv
jmp
outsl
mov
pusha
cmp
push
dec
mov
loope
and
cmp
mov
or
pop
lock
decl
in
test
fsubrl
stc
outsb
jne
sbb
ljmp
mov
and
ljmp
test
sbb
in
les
dec
sti
xorb
notb
decl
lock
sbb
mov
xchg
push
inc
or
int
jae
xor
push
jno
lcall
add
lods
mov
xchg
sbb
pop
inc
jne
mov
jns
sbb
mov
aas
jmp
decl
mov
xchg
into
xor
mov
movsl
movlps
push
mov
fcom
clc
incl
aad
xchg
jl
xchg
push
gs
push
jg
dec
decl
dec
sti
mov
pop
push
cmc
sbb
sub
pop
mov
xor
sar
mov
out
fistps
das
out
mov
push
lea
and
adcb
mov
scas
call
pop
jbe
push
insl
jae
fisubs
adc
clc
clc
icebp
leave
rcrb
lods
loopne
mov
call
negb
pop
cmpl
mov
jg
add
push
pusha
xor
fistpll
adc
jns
pop
lock
xchg
xorb
adc
leave
mov
test
pop
daa
mov
pop
out
clc
ja
lods
movsb
pop
sbb
mov
jmp
fldt
push
out
pop
jle
ljmp
je
xchg
test
movsb
and
mov
jg
popf
or
lods
insb
lea
aas
outsl
ljmp
ja
sub
fsts
and
adc
aaa
decl
popa
xor
push
pop
or
cltd
push
sbb
pop
int3
movsb
pop
in
adc
sub
adc
out
add
pop
mov
shl
jecxz
add
into
fwait
aas
mov
outsb
inc
std
inc
nop
xchg
fwait
jecxz
ljmp
push
mov
in
icebp
lods
sub
pop
dec
lods
popa
and
lret
pushl
adc
mov
or
mov
xor
rorl
dec
negb
inc
adc
test
into
cmpsl
push
mov
dec
leave
in
add
xchg
pop
push
sbb
or
inc
adc
cmp
xchg
daa
jbe
or
sbb
stos
decb
pop
fs
repnz
xor
adc
inc
xchg
shl
mov
andb
or
fldt
inc
adc
adc
and
lret
cld
lcall
insl
pop
xchg
popf
xlat
loopne
arpl
jmp
gs
test
mov
fdivl
popa
inc
inc
sub
out
and
push
es
push
adc
adc
pop
ljmp
dec
and
sti
mov
push
mov
andl
lock
das
test
mov
dec
stos
mov
inc
push
daa
dec
imul
call
pop
clc
jle
or
xor
inc
xchg
ss
pushl
jnp
and
lcall
insb
mov
gs
adc
push
fwait
test
icebp
incl
mov
push
je
int3
jno
lods
fcompl
jmp
fs
in
xchg
pop
inc
movsl
ja
xchg
popa
sti
mov
addb
mov
pop
mov
add
inc
jge
xlat
mov
sbb
pop
lods
xchg
frstor
pop
xchg
adc
pusha
mov
test
jle
sbb
dec
mov
gs
cwtl
push
ja
incl
dec
dec
fildl
mov
jmp
cli
call
lret
sahf
bound
pop
inc
add
mov
pushf
pop
lcall
lds
enter
inc
push
adc
andb
hlt
push
in
mov
decl
ficomps
jmp
xchg
or
push
dec
in
dec
imul
xchg
pop
stos
mov
bound
pop
inc
stos
sub
jmp
push
mov
test
movsb
mov
cmp
jns
inc
das
popf
pop
outsb
ds
mov
ljmp
andb
inc
xlat
push
cmp
scas
clc
incl
shrl
adc
add
pusha
inc
adcl
push
mov
adc
call
xchg
xchg
mov
cmp
xchg
xchg
repz
stos
movsb
pop
iret
pop
pop
repz
aam
xor
dec
pop
xor
rcrb
sbb
push
sbbl
sub
aas
test
sub
mov
mov
pushl
sbb
loope
pushf
jle
popa
cmc
call
inc
jg
shr
and
imul
js
das
and
std
aam
lcall
xor
mov
push
sbb
or
iret
mov
sbb
test
out
mov
or
dec
test
cmp
mov
out
pop
stc
cmpsl
das
mov
push
fsubr
popa
add
nop
in
call
dec
incl
inc
bound
and
mov
out
out
xchg
fwait
sahf
inc
mov
incl
sub
loopne
jb
or
insl
in
or
jae
inc
mov
frstor
sub
cmc
adc
je
cli
jmp
pop
pop
cwtl
inc
or
loope
sbb
sub
int3
loopne
inc
testl
adc
cmp
js
pop
dec
lods
loope,pt
mov
in
dec
adcl
xor
xchg
pop
xor
filds
lea
aas
int
jg
mov
sbb
jg
pop
fnsave
xchg
dec
xor
pop
movlps
inc
fwait
stc
or
push
sub
adcl
decl
enter
push
dec
mov
shlb
cmp
cmp
loopne
lcall
cmpsb
das
xchg
repz
scas
movb
pop
ljmp
addr16
sbbl
in
dec
mov
mov
pushf
xor
cmpsb
cld
das
sar
out
in
arpl
mov
loop
les
aaa
xor
mov
jg
fs
add
lds
jnp
mov
pop
inc
jl
dec
jecxz
sbb
out
dec
das
or
out
data16
popw
jb
fsubs
or
sbb
ljmp
fadds
movsb
mov
in
fidivl
cltd
pop
jecxz
xchg
or
jnp
cmp
jmp
mov
int3
mov
push
mov
inc
enter
loope
andb
adc
in
jg
xor
adc
or
ficoms
nop
shll
data16
mov
idivb
mov
call
lods
dec
cli
repnz
adcb
cli
test
cmp
adc
jmp
adc
lds
cs
adc
inc
movsb
push
rcrb
xchg
into
xchg
push
pop
clc
sub
and
push
popf
pop
clc
das
dec
lcall
mov
pop
outsb
adc
add
jnp
inc
lock
cmpsl
jl
stos
iret
cmp
or
pushl
sub
ja
pop
jmp
out
xor
iret
jp
inc
xlat
in
in
lcall
xor
xor
jne
jne
add
pop
sub
pushf
int3
adc
cmp
ffreep
push
pop
sbb
pushl
xchg
scas
shl
int
stos
nop
bound
or
jmp
sub
push
or
add
pop
inc
cmp
jecxz
idivb
nop
fidivs
shl
rcr
mov
gs
in
xor
cmp
imul
cmpb
dec
cmp
fcomp
into
sub
out
movsb
inc
gs
pushl
fwait
les
lds
int3
jne
das
xchg
push
push
jo
hlt
inc
popf
int3
push
and
decl
sub
mov
cmp
into
icebp
inc
ds
outsl
or
xchg
sbb
add
sahf
std
pop
sub
leave
mov
xorl
ja
add
xchg
adc
add
loopne
cmp
sbb
pop
movsl
cli
ljmp
sbb
xlat
sub
divl
mov
jg
idiv
inc
hlt
mov
icebp
push
mov
jae
pop
out
cmp
pop
mov
pop
and
sahf
mov
ja
clc
ffree
mov
cld
push
iret
shll
mov
or
clc
dec
sub
mov
push
sarl
or
xor
xor
push
lea
jo
jnp
sub
dec
imul
push
inc
loopne
fwait
mov
mov
inc
jo
mov
lcall
cmpsb
add
jb
inc
xchg
dec
ja
pop
and
sbb
fidivs
inc
xchg
fldl
add
inc
jne
push
gs
ss
clc
mov
call
in
jns
filds
or
stos
xchg
test
and
adc
idiv
aad
test
decl
pop
cwtl
jb
decb
xchg
jb
cmp
mov
loope
test
inc
stos
shlb
cld
xor
mov
sbb
push
nop
std
loop
mov
push
icebp
inc
stos
inc
loop
mov
mov
pop
clc
movsl
das
outsb
push
sahf
lcall
mov
xlat
or
xchg
icebp
test
sbb
in
imul
mov
cmp
xor
pop
sbb
xorb
mov
jmp
sti
cwtl
mov
lcall
inc
scas
sub
sub
jg
or
test
jge
repnz
push
ja
jle
in
pop
pop
outsl
sarl
xchg
push
cli
ss
fwait
mov
xor
popf
out
loope
lret
jg
ljmp
call
push
fbstp
push
test
rcpps
test
sub
fs
shlb
ljmp
icebp
loopne
cmp
hlt
add
pop
cmpsl
fists
movsl
rcll
les
or
inc
jg
jle
jne
xor
and
push
call
decl
and
jb
pop
inc
or
jge
jl
mov
mov
movsl
cld
cmp
outsb
and
jnp
cmp
test
mov
popf
pop
sub
jbe
in
mov
adcl
stos
adc
scas
adcb
mov
int
and
push
xchg
or
xchg
jne
cltd
push
sbb
cmpsb
and
test
ljmp
add
jecxz
inc
push
xchg
rorb
xorl
repnz
movsb
xchg
decl
push
rol
in
add
dec
arpl
out
in
ret
call
sbb
bound
sti
dec
jmp
ret
and
setg
nop
call
movb
aaa
ljmp
push
iret
dec
pushl
out
lods
and
ljmp
push
xchg
dec
jae
xchg
push
lds
sub
jg
mov
xor
xchg
cmp
push
push
add
or
pop
std
stc
cmp
jle
mov
cli
orl
mov
push
cmc
out
popf
or
mov
add
xchg
popf
mov
adc
stos
lcall
incl
and
sub
ds
cmp
mov
je
dec
pop
in
adc
pushl
insl
testb
js
xchg
jbe
dec
push
xchg
mull
xchg
jmp
out
clc
inc
pop
jnp
pop
repnz
mov
sbb
mov
repz
add
xlat
cmp
fimuls
sti
adc
pop
dec
je
or
adc
incl
xor
imull
and
mov
mov
adc
cwtl
sub
pop
cltd
sub
clc
cmp
inc
out
ds
addr16
fistps
xor
int3
stos
and
test
aaa
sub
popa
hlt
out
mov
or
dec
adc
scas
cmp
lcall
mov
jae
cmp
mov
add
inc
pop
jg
sti
insl
cs
push
mov
loop
jnp
mov
les
stc
scas
cmpsl
addr16
sub
idiv
ja
lcall
jl
aas
iret
into
push
pop
in
iret
jae
daa
loopne
ljmp
lcall
or
dec
push
push
dec
sbb
add
addl
mov
out
test
insl
pushl
cld
imul
and
ret
fs
inc
cwtl
push
sbb
ret
xchg
and
inc
push
adc
dec
out
and
cwtl
sub
cmp
mov
jb
in
cwtl
pop
mov
and
jmp
movsl
jg
and
jno
repz
mov
stc
mul
negb
pop
jb
lds
mov
push
adc
cmp
repz
push
pop
out
leave
mov
dec
push
cmc
cmp
cld
cmpsb
mov
call
xor
cmp
int3
call
lcall
mov
cmpsb
jae
push
ds
mov
xchg
dec
dec
iret
out
dec
sbb
mov
sbb
clc
jne
xchg
push
xchg
xchg
icebp
pushl
and
pop
aad
sbb
push
push
inc
scas
ljmp
and
xor
mov
ds
mov
pushl
mulb
cmpsb
sub
push
sub
repnz
pop
test
lret
outsb
in
pushl
add
fiaddl
and
decb
decl
xor
push
rorl
fstpt
test
and
test
add
and
fisubrl
popf
mov
lahf
inc
into
adc
sbbb
cmpb
xor
roll
popa
mov
ret
mov
pushl
mov
adc
cs
mov
jecxz
dec
outsl
fwait
je
fcomps
or
mov
shlb
and
movsl
inc
nop
nop
inc
sub
mov
lock
sub
in
jmp
and
or
and
cmpl
adc
sarl
cmp
jmp
add
jb
sub
out
mov
iret
cmpsb
xor
movl
or
ja
decl
lret
pop
push
sub
cwtl
shrl
call
jae
xchg
decl
ss
orb
mov
mov
fldcw
jge
bswap
nop
push
mov
sub
xchg
dec
lods
mov
nop
aaa
nop
adc
inc
es
ljmp
shlb
loope
mov
test
movsl
dec
stos
test
icebp
fbld
or
sbb
inc
cmpsb
std
out
xor
stos
movsl
jmp
rcrl
sub
std
xchg
imul
pop
sub
mov
mov
mov
call
in
and
push
ja
mov
ss
mull
push
pop
call
pop
sbb
loopne
cmpsb
dec
push
xor
fs
inc
lock
adc
or
mov
call
adc
fisubs
nop
daa
xorl
ljmp
scas
xor
movsb
jae
mov
xchg
std
mov
sub
add
fmull
pop
add
xlat
push
and
fldz
sbbl
or
jns
pushf
sbb
outsl
and
xor
ljmp
sbb
and
inc
sti
adc
lea
and
sbb
lcall
mov
jae
into
xlat
add
jo
pop
sbb
push
xor
decl
out
out
inc
popf
cmpsb
or
scas
leave
jo
mov
enter
sub
lcall
jnp
jb
pusha
xchg
movups
mull
xchg
rorl
outsl
negb
jb
ljmp
clc
pop
lcall
sbb
ficompl
ret
cltd
fsts
sbb
js
lcall
cld
pusha
lret
loopne
lcall
imul
mov
out
adc
mov
fidivrs
into
in
sahf
out
lods
shll
call
mov
shll
dec
cmp
sub
cmp
scas
mov
lahf
ljmp
push
mov
pop
dec
cmp
xor
ljmp
mov
insb
popa
cmpsl
xchg
jo
data16
mov
insl
scas
mov
pop
mov
jg
test
push
push
cmpsl
dec
xor
xchg
cmp
jmp
mov
xchg
push
lods
jmp
jmp
bound
inc
nop
lcall
rcrb
add
push
test
xchg
in
pusha
xor
mov
jmp
sar
mov
repz
xor
push
mov
fcomip
xchg
lahf
dec
mov
cmp
push
mov
xor
sub
dec
jge
mov
fxam
dec
jae
mov
xor
pop
sub
sti
add
pop
decl
pusha
jmp
cld
das
xchg
mov
mov
out
jge
adc
mov
loope
call
pop
insb
dec
jns
add
rcrl
and
mov
or
cmp
mov
movl
jnp
scas
lret
fistps
xor
fs
sbb
xchg
inc
sbb
lods
call
dec
insb
ljmp
jmp
jo
jp
mov
test
aam
xor
add
mov
jmp
dec
subb
add
js
lock
xlat
adc
pop
pop
js
filds
mov
pop
movsl
mov
aam
push
mov
sub
push
stos
call
cmp
push
out
out
mov
sbb
push
int3
xor
add
ficoml
pushl
sar
pushf
push
inc
sbb
stc
rolb
int
jnp
xchg
call
test
leave
adc
pop
vaddpd
xorb
rolb
adc
xor
dec
fdivr
fs
pop
pop
testb
pop
or
mov
nop
sbb
push
jb
clc
mov
push
int
cli
inc
test
decl
mov
inc
push
pop
cwtl
std
mov
mov
call
test
call
std
xor
lahf
push
hlt
sbb
mov
cwtl
mov
out
loope
xchg
xchg
inc
mov
dec
out
ljmp
mov
push
xor
nop
xchg
push
outsb
jmp
or
fisubs
sti
repz
sbb
mov
inc
hlt
jmp
loopne
enter
movsb
inc
pop
xor
out
xchg
push
xor
inc
stc
inc
icebp
inc
dec
lock
jae
call
sahf
jecxz
aam
mov
xlat
inc
pop
inc
or
loope
decl
sar
dec
jmp
mov
xchg
ficomps
lods
mov
cli
sbbb
add
popf
cwtl
jmp
mov
mov
call
mov
out
and
call
xor
js
mov
push
sbb
icebp
into
pushf
dec
mov
fsubl
mov
ljmp
inc
push
sahf
or
lea
sti
test
je
adc
call
cwtl
cmp
push
or
out
pop
xchg
test
jl
stc
cltd
mov
pushl
imul
ljmp
rclb
inc
test
dec
pusha
jb
setns
dec
loop
call
popa
push
je
inc
xchg
xchg
sbbb
rcl
mov
jecxz
sbb
mov
jmp
or
in
call
loopne,pn
mov
call
fs
and
ljmp
xchg
fcmovnu
test
add
adc
enter
xor
mov
or
push
xor
sbb
sbb
push
movsb
sarb
shll
xlat
jecxz
cltd
xchg
and
cmc
mov
js
mov
sbb
negb
xchg
jmp
pop
fwait
cmp
stos
stos
aaa
sti
fs
xchg
pusha
sti
inc
push
adc
icebp
orb
and
jmp
lock
fisubl
push
pop
stc
sar
call
jbe
mov
push
xchg
jge
adc
pop
cltd
gs
je
call
ret
pop
dec
xchg
jnp
test
js
movsb
stos
ja
pushl
cwtl
pushf
ja
push
add
and
rol
gs
pop
dec
sbb
imul
in
xor
jbe
test
mov
mov
jb
data16
loopne
jg
ljmp
or
jo
bound
pushl
jl
jne
push
inc
xor
jmp
imul
mov
or
xchg
in
clc
jge
and
subb
pop
mov
cmp
repz
inc
clc
jmp
lret
ja
inc
push
jb
aam
mov
cmpsl
imulb
jo
fwait
incb
je
jns
out
es
add
xlat
xchg
and
jmp
aad
mov
rcr
jg
lods
jg
add
xchg
lods
add
inc
mov
mov
mov
add
adc
cmp
insb
mov
movsl
sbb
dec
jle
out
jecxz
dec
push
repnz
or
enter
lds
shlb
ljmp
xor
cli
pop
gs
sbb
ja
pushf
lds
lret
pop
fstpt
sbb
subb
mov
dec
cld
or
pushl
dec
out
push
xor
out
cld
jnp
fdivs
mov
dec
xor
adc
repz
push
std
pushl
pop
push
out
mov
pop
movsb
lods
mov
es
fmull
inc
adc
pushf
push
mov
movsl
ficompl
mov
jmp
jnp
fwait
sbb
pusha
cmc
jb
jmp
in
divl
out
cwtl
leave
ficomps
pushf
enter
sub
pop
xchg
push
cwtl
mov
gs
push
push
in
adc
sbb
xorl
or
icebp
jmp
and
pusha
mov
mov
icebp
xor
incl
push
imul
push
add
sub
scas
in
mov
jg
out
cli
sub
test
lret
add
aam
inc
call
incl
cmp
cmc
sarb
out
dec
push
cld
xchg
sahf
adc
push
fildl
incl
add
or
into
out
pop
xor
mov
icebp
out
stos
adc
mov
scas
cli
lcall
mov
pushf
orl
cmpsb
loop
mov
mov
insb
mov
add
add
xchg
aad
or
inc
jmp
repnz
les
in
xor
adc
jno
fistps
push
pop
iret
decl
xor
ret
dec
and
add
rcrb
xor
call
scas
stos
mov
push
gs
inc
push
fsqrt
jg
lea
sub
pop
outsb
aam
fwait
adc
mov
jp
push
icebp
aad
ljmp
addr16
push
fildl
mov
call
sar
arpl
pop
mov
ficoms
mov
scas
jg
out
fistps
mov
pop
repnz
stos
repnz
hlt
pop
xor
std
adc
add
dec
inc
pushl
mov
subl
js
inc
mov
ja
mov
pushf
dec
int3
pop
and
incl
psrld
mov
push
or
clc
popf
dec
call
lret
fimull
jnp
and
jg
jg
hlt
call
sub
jp
push
leave
dec
imul
ljmp
mov
xor
xorb
push
hlt
push
jne
or
pusha
push
inc
call
xchg
out
mov
push
push
inc
jle
ret
or
imul
int
pop
movsl
cmpsb
sub
jns
inc
mov
dec
nop
mov
jnp
sbb
inc
sbb
imul
xor
incl
cld
call
roll
mov
mov
out
pop
cwtl
fchs
push
clc
call
xchg
xchg
sub
arpl
in
push
mov
xchg
into
adc
adc
lcall
dec
pop
inc
pop
jmp
pop
into
addr16
pop
pmaxsw
scas
in
and
decl
add
testl
lods
js
iret
ds
call
xor
xor
repz
push
push
pop
or
test
test
mov
movsb
push
in
aas
pop
jae
ret
faddl
adc
push
fdivr
mov
xor
enter
xchg
sbb
repz
outsl
cli
shll
decl
mov
imul
add
idivb
mov
jle
and
push
popf
es
jp
add
js
flds
jb
push
dec
sub
push
sar
jbe
adc
inc
out
xor
mov
aam
push
out
outsl
out
scas
inc
loope
push
adc
lret
inc
jne
cmp
clc
pop
xor
xchg
lds
fwait
nop
and
push
stc
aas
cmp
lcall
js
mov
sahf
add
mov
pop
test
lds
push
inc
and
mov
pusha
ljmp
jno
xlat
xchg
fsubrp
int
cmp
dec
fmull
ljmp
cltd
xchg
shrb
add
out
jge
jge
push
arpl
ljmp
nop
jns
int3
cs
dec
nop
mov
int
inc
pusha
mov
jp
sbb
pop
jmp
enter
push
pop
das
pop
xchg
adc
mov
pop
repnz
test
sarb
dec
rorb
loopne
shr
push
shlb
mov
adc
mov
sbbb
mov
outsl
pusha
pop
add
repz
adc
call
mov
cld
repnz
lret
cmp
jmp
xor
adc
pop
inc
push
lcall
add
mov
pop
sti
arpl
mov
leave
cmp
loop
mov
rolb
ljmp
sbbl
and
pusha
call
out
ret
test
xchg
out
adc
jg
fld1
mov
add
push
lret
fnsave
mov
arpl
or
pop
imul
sub
call
cwtl
cld
test
ret
cmp
incb
xor
cmp
and
jg
mov
jmp
and
outsb
dec
xor
lods
loop
ss
mov
dec
aad
imul
int
sub
jmp
aaa
xlat
sarl
adc
jnp
or
inc
xlat
and
daa
imul
jl
dec
sbb
mov
inc
mov
outsb
outsb
scas
incl
inc
sub
rcr
mov
ret
pushl
cmp
inc
inc
mov
cld
inc
repnz
out
xchg
sbb
cmpsl
inc
mov
push
jns
push
jmp
mov
mov
pop
bound
stos
stos
pop
cli
decl
stos
lret
push
adc
out
cmp
stos
lahf
out
out
mov
fwait
adc
rcr
mov
test
call
enter
jmp
pop
lcall
and
xchg
jns
sahf
loopne
sub
ss
incl
sub
mov
cmpsb
cs
or
aas
xor
cmp
mov
cmc
mov
or
lods
mov
jecxz
outsl
cs
jmp
and
scas
mov
fcomi
adc
dec
and
call
sbbb
sahf
repnz
into
mov
xchg
push
and
xchg
pop
fidivs
or
incl
out
subb
or
inc
cmp
scas
in
outsb
nop
push
push
pop
pusha
add
and
jmp
add
sbb
popa
std
xor
and
pop
cmpsb
jne
aam
mov
lea
inc
dec
in
loope
sub
mov
loopne
aas
and
adc
lcall
call
popa
push
out
stos
fildl
rolb
pop
pop
pop
push
pop
ss
lods
popa
sarl
adc
push
std
ficoml
mov
adc
cltd
adc
clc
loop
sub
add
scas
push
sbb
hlt
adc
xchg
repz
mov
out
in
in
fmull
dec
lahf
adc
cmc
adc
call
cld
fisttps
mov
les
or
sbb
stos
jle
cmp
filds
mov
mov
test
mov
lods
sub
leave
pop
cmp
roll
imulb
jb
fcmovb
xor
mov
int
bound
sub
dec
int
dec
pop
xor
xor
cmp
mov
nopl
leave
imul
xchg
push
cld
incl
dec
mov
mov
loope
xor
push
testl
inc
add
add
jmp
add
lcall
add
ja
shll
popf
lea
fbld
call
dec
mov
dec
push
loope
sub
push
jl
or
in
sahf
and
cmp
incl
cli
jg
shll
cmpsl
inc
rcr
mov
mov
or
js
test
cwtl
mov
call
mov
jp
call
push
jb
jae
add
sub
lahf
jmp
push
adc
outsl
clc
push
ss
cmp
les
mov
outsb
push
sub
jmp
sbb
arpl
jae
mov
iret
jae
jnp
adc
stc
fs
xor
mov
lcall
xchg
mov
mov
mov
pop
jbe
lods
loope
mov
ljmp
sub
mov
and
jge
sbb
in
dec
adc
jp
inc
sub
and
loopne
pop
mov
into
inc
bound
lcall
ss
xor
cwtl
cmp
pop
test
shll
lret
cmp
jp
or
fimuls
scas
fisttps
mov
sub
int
test
inc
jl
rcrb
mov
call
ljmp
loop
adc
add
pop
mov
arpl
scas
cmpsb
bound
stos
decl
cltd
loopne
pop
sub
testl
xchg
and
rcr
jl
in
sub
decb
fcmove
test
sub
jg
outsl
leave
mov
adc
dec
jg
lea
leave
pop
and
les
movsl
test
or
push
mov
fsubl
jg
mov
push
test
daa
ds
mov
pop
icebp
push
mov
cmp
fwait
sar
gs
lcall
out
and
decl
push
imul
mov
jo
mov
mov
in
xor
dec
icebp
enter
adc
ret
push
mov
add
cli
xchg
in
add
xor
add
ret
loopne
push
cmp
cli
sub
dec
inc
sbb
incl
push
insb
sti
test
cmp
das
movsl
cs
sub
daa
cmp
into
pop
sbb
lcall
pushl
and
ret
in
rorb
mov
insl
nop
push
and
lcall
int3
out
push
dec
add
xorl
cmp
or
push
stos
pop
out
movsb
bound
mov
call
test
arpl
lock
cmp
addr16
mov
xor
jmp
ret
mov
sub
adc
push
mov
and
pop
dec
xchg
xor
xchg
cmpsl
addr16
pop
adc
mov
cld
mov
notb
movsl
adc
lea
hlt
lcall
dec
and
out
or
pop
lds
push
jns
jecxz
add
incl
inc
iret
andb
jl
lret
loope
inc
xchg
mov
push
and
sbb
cwtl
add
add
jmp
fnstcw
nop
shl
sahf
notl
packuswb
jo
adc
add
stos
jp
adc
out
and
loopne
mov
es
mov
orb
pushl
cld
inc
cmp
inc
sti
cmp
lds
iret
mulb
pusha
mov
jbe
inc
or
lahf
mov
xchg
call
adc
pop
pop
ret
mov
cs
inc
stos
lcall
lcall
js
out
addr16
push
cld
pop
fisttpl
inc
shl
add
inc
pop
inc
cmp
lcall
pop
mov
mov
mov
das
loope
dec
cmp
xor
or
ljmp
loopnew
test
sub
dec
sbb
orb
sub
scas
aas
icebp
cli
dec
loop
popa
xor
es
decl
fstpl
in
in
andl
rorb
mov
mov
and
loope
vmwrite
int
cmp
pop
inc
sub
decl
loopne
add
mov
mov
push
fsubrl
insl
adc
adc
mov
lods
dec
adc
lcall
pop
push
jbe
ret
xor
xchg
and
cwtl
std
xor
pusha
xchg
xchg
add
fwait
in
cmc
xchg
loop
ljmp
inc
pop
rcrb
jge
les
sub
push
imul
cmp
stos
push
stos
test
cs
push
fadd
loope
lea
inc
pop
sub
clc
jmp
dec
lods
and
rcrb
xchg
xchg
or
mov
ljmp
lcallw
hlt
lret
pop
test
inc
data16
dec
xor
pusha
out
add
mov
mov
xchg
sbbb
inc
cmp
mov
pop
add
mov
push
push
lods
cmp
out
sbbb
popf
insl
subb
scas
jns
cmp
dec
jns
inc
jl
rcrb
ret
lcall
lods
adc
repnz
dec
repnz
and
lahf
lcall
jbe
xor
fcos
incl
mov
into
out
xor
je
inc
sbb
idivb
imul
dec
das
rclb
lea
mov
fisttpl
xlat
int
mov
rcr
xchg
xchg
lock
stos
incl
insb
push
cmc
lcall
push
int3
divb
outsl
add
decl
adc
enter
es
sbb
in
dec
adc
popf
push
lods
sub
adc
ljmp
cli
call
rcr
mov
push
aas
pusha
clc
sub
adc
out
cmp
mov
adc
mov
ss
jg
scas
cli
jmp
dec
push
mov
std
jle
mov
push
cwtl
outsb
cmp
push
xchg
jg
cli
and
add
xchg
mov
bound
loop
loopne
mov
adc
in
xchg
pushf
imul
adc
and
mov
rcl
xor
add
xchg
sbb
stos
ficompl
jnp
incl
and
adc
stos
leave
mov
xlat
cwtl
inc
in
pop
lret
data16
mov
test
iretw
sub
stos
cs
clc
pop
ds
and
fldcw
mov
call
mov
stc
dec
imul
jnp
dec
outsb
add
inc
out
ja
mov
int3
int
xchg
mov
testl
sub
lcall
pop
adc
imul
test
in
fbstp
incl
mov
mov
pop
xchg
xor
mov
scas
mov
outsb
mov
mov
and
ljmp
pop
cmp
fsubl
hlt
popw
popf
mov
pop
cmpsb
shlb
lcall
adc
inc
and
add
mov
xchg
pop
fdivr
lods
repz
mov
call
scas
mov
xor
ljmp
adcb
cmp
test
mov
jb
loopne
push
jne
outsl
clc
jmp
push
sub
cli
xchg
mull
ret
or
popa
sar
pushl
adc
das
add
sbb
mov
pop
rorl
sbb
xchg
push
push
fnstenv
mov
jmp
ss
fldenv
inc
ss
adc
mov
pop
jns
inc
sub
push
outsl
cli
sub
push
test
cmp
loop
pop
xor
test
fwait
fwait
movsb
cmc
push
mov
fwait
pop
inc
add
pop
outsb
sbb
jp
push
fidivl
daa
mov
mov
adc
mov
mov
loop
lcall
cs
push
push
jmp
adc
lds
fwait
jle
sub
pop
adc
insb
ds
or
inc
adc
sub
ljmp
insl
xor
test
leavew
sahf
adc
hlt
xor
stc
jns
clc
add
inc
add
cmp
jle
push
mov
in
inc
jnp
dec
or
lds
lcall
loopne
adc
and
dec
dec
clc
ret
rcrb
arpl
jns
mov
or
xchg
jecxz
dec
pushl
add
sahf
sub
lret
mov
push
imul
adc
dec
into
sub
pushl
std
mov
fsubrl
mov
and
push
out
add
cmpsb
int
insb
sbb
jmp
nop
imul
mov
sub
mov
inc
jnp
scas
cli
ljmp
adc
jmp
push
xchg
xor
lcall
mov
stos
push
sti
cmp
inc
adc
sar
lcall
inc
inc
mov
iret
mov
stos
pop
int
andb
push
loope
cmp
cmp
sarl
mov
sub
mov
arpl
sub
cld
or
les
push
in
mov
shrl
push
and
pop
movl
xorb
fmuls
fidivs
pop
pop
jl
lods
addl
mov
insb
enter
adc
jg
dec
mov
fwait
stc
movb
scas
and
out
aaa
jle
push
jno
xchg
mov
out
cli
pop
pop
cld
bound
test
inc
mov
repnz
sbb
in
cld
mov
decl
mov
enter
mov
lret
push
jle
jmp
lret
aas
or
ljmp
pusha
leave
rorl
sub
mov
arpl
call
lcall
pop
and
pushl
jo
dec
lock
sbb
sar
aad
jmp
pop
jbe
mov
pop
xchg
pop
push
mov
lock
fistl
mov
out
cli
lret
sbb
bound
stos
fnstsw
xchg
fidivrs
out
add
pop
push
arpl
mov
pop
or
outsl
repnz
inc
inc
sbb
and
cli
inc
scas
pop
stos
and
xchg
test
ret
xlat
push
cmpsb
mov
sub
daa
xchg
imul
push
aaa
call
mov
lret
clc
xor
xchg
fnstsw
mov
aam
stos
call
popf
out
jmp
push
addr16
and
mov
lds
jecxz
xchg
aas
call
sbb
or
popf
inc
iret
mov
pushf
inc
imul
addl
rclb
mov
inc
scas
in
xor
imul
loop
mov
xor
gs
shrl
ja
push
push
pop
inc
out
sbb
pop
std
sti
dec
pop
add
and
into
popf
scas
lret
mov
in
fistpl
pushl
dec
pop
mov
lret
mov
push
test
fadd
in
add
xor
push
push
add
outsl
call
out
and
scas
inc
mov
add
out
xchg
hlt
rcrl
fimuls
xor
cmp
pusha
mov
sbb
cld
xor
dec
scas
scas
sti
sti
and
call
inc
and
stos
mov
pushf
xchg
rclb
stos
jbe
pop
imul
aad
arpl
ljmp
fwait
push
dec
in
enter
lret
stos
inc
mov
ret
out
sbb
cmp
jmp
cmp
push
jmp
mov
outsb
push
ss
in
scas
jb
test
xchg
pop
jb
mov
mov
out
push
mov
jns
xchg
and
push
jg
popa
and
call
je
nop
jns
push
cld
pop
add
fistl
jae
shl
jl
call
adc
mov
ja
incl
stos
push
aam
fsubs
ret
popa
outsb
inc
sbb
adc
push
jmp
addr16
and
inc
inc
sbb
cmc
imul
je
and
faddp
nop
lret
xor
lret
inc
inc
call
xchg
and
add
mov
inc
hlt
push
gs
sti
xor
incl
sub
or
xor
adc
cmp
enter
mov
lret
jmp
sbbl
ret
es
dec
ficompl
hlt
xchg
pop
push
cmpxchg
xor
jg
lahf
pop
movsb
mov
enter
add
stos
push
pop
lret
lret
lods
int
scas
loopne
das
mov
or
adc
call
ljmp
mov
add
cmp
fcoml
movsb
mov
decl
stc
xchg
shlb
add
call
xchg
outsb
das
bound
loopne
inc
pop
lret
jmp
pushl
mov
out
or
lods
xchg
ret
jmp
inc
or
or
inc
push
test
add
insl
test
cmc
popf
jge
imul
mov
int
sti
in
pop
or
sub
xchg
movsb
shufps
pop
cmp
es
pop
fldt
loop
and
or
cltd
sbb
jns
mov
movsl
lods
push
sti
sbb
loopne
movsb
pushl
fdivrs
sbb
adc
dec
stc
sbb
ljmp
fs
sbb
mov
rdtsc
lret
xor
or
adc
int
scas
sar
pop
cmpsl
shl
adc
aad
iret
negb
imul
ja
mov
addb
mov
sub
lock
dec
jecxz
ds
loope
mov
outsb
cmpsb
mov
push
or
outsl
jb
cmc
lock
sbbb
sbb
sbb
ss
jg
mov
fmull
jmp
xchg
cmp
dec
popa
and
bound
cltd
dec
add
loop
xchg
push
or
pushf
leave
out
imul
ret
sub
imulb
mov
icebp
jmp
fisubrl
addr16
push
sbb
sbb
adc
or
sbb
pusha
sarb
fdivl
mov
rorb
xchg
pop
inc
mul
mov
hlt
outsb
push
sbb
mov
mov
fstpl
movsl
add
enter
sbbl
arpl
mov
imulb
jl
sbb
or
cld
inc
dec
pushf
xchg
dec
pushl
push
out
sbb
fnstcw
push
lcall
pop
mov
pusha
pop
pop
scas
movsl
lods
fmull
cli
into
mov
rorl
pop
rcrb
add
fcomip
mov
js
lods
mov
jnp
sub
pushl
cmc
mov
insl
mov
lods
cmp
cmpsl
and
adc
fadds
repz
call
jne
incl
repnz
push
sbb
jno
fwait
dec
mov
sub
mov
or
jg
adcl
adc
outsb
xor
inc
imul
lcall
mov
sahf
fs
stos
dec
jmp
gs
mov
pop
xor
pop
test
out
lahf
lret
lds
lock
xchg
pop
enter
mov
inc
xor
pop
gs
aas
enter
imul
sub
pushf
pop
mov
data16
inc
mov
call
cmpsl
sub
rcr
pop
roll
inc
dec
fsub
sar
dec
sar
clc
repz
jo
lahf
mov
arpl
enter
call
stos
out
movsb
gs
xor
divl
ds
add
xor
or
dec
imul
mov
sbb
mov
sbb
sub
sub
popf
cmp
filds
or
add
imul
or
jg
scas
or
sbb
dec
cmp
adc
cmc
sub
es
inc
insb
jp
inc
jle
ljmp
scas
outsl
and
test
xchg
jnp
int
xchg
mov
xor
and
inc
jmp
or
xor
into
sarl
cmpsb
sbb
mov
mov
lcall
clc
cwtl
cwtd
fs
xchg
push
fstps
dec
sub
shl
adc
cld
in
cli
aaa
add
xor
outsb
popl
pushl
mov
in
xchg
aad
into
pop
lret
adc
daa
data16
pop
jno
mov
call
fnstenv
or
arpl
nop
xchg
pop
out
sti
and
cmp
pusha
push
icebp
aam
jb
mov
fldcw
sub
xchg
stos
and
inc
movsb
inc
jg
decl
push
adc
jae
jae
fcoml
xchg
loope
test
push
mov
loope
jo
ss
jmp
mov
cmc
push
cmp
adc
jecxz
mov
ljmp
pushf
push
jbe
movsl
mov
push
dec
pop
repnz
ret
or
call
outsl
jns
push
adc
popl
dec
call
out
inc
add
test
jge
xor
cltd
add
shrb
in
sub
ljmp
jmp
or
scas
inc
cmpsl
and
mov
pop
push
xchg
repz
xchg
pushl
push
mov
into
mov
add
xchg
mov
stc
mov
in
xor
cmp
cs
fcoml
inc
loopne
push
mov
test
adc
mov
cld
sbb
cmp
jl
push
lea
hlt
sub
jb
jmp
or
inc
call
mov
mov
jg
scas
inc
xchg
dec
inc
sbb
call
daa
sbb
jne
mov
cmp
fists
xor
int
and
jne
test
cmpsb
pop
xor
mov
sar
lcall
dec
lods
sub
sub
pop
mov
sub
cmp
or
jg
pop
jmp
xchg
jns
aam
mov
pop
mov
jns
mov
fcompl
in
adc
out
jg
mov
mov
push
mov
loope
scas
add
sbb
cld
lahf
or
sbb
sbb
sti
xchg
cmp
mov
jbe
in
add
xchg
bound
mov
fists
add
mov
mov
out
push
es
out
inc
and
jbe
inc
test
cltd
inc
clc
mov
jecxz
mov
sbb
into
call
sub
lds
movsl
mov
loope
push
and
cmpsl
mov
push
leave
ss
dec
push
sub
test
jge
or
xor
orb
dec
filds
mov
pop
mov
cmp
cmp
fstpt
lea
stos
or
jmp
jg
loope
aas
xchg
dec
test
xchg
xor
ljmp
mov
pop
mov
aam
xlat
mov
dec
insl
xchg
stos
popa
jo
or
pushl
or
arpl
mov
dec
andb
sbb
and
push
dec
xlat
add
mov
sti
xor
mov
shlb
or
pop
push
adc
adc
into
adc
mov
inc
xchg
mov
inc
rcll
mov
fmul
lcall
fidivrl
negb
xor
mov
mov
xchg
int3
add
neg
icebp
jmp
mov
test
sub
push
inc
jl
out
xor
decl
push
xchg
es
mov
adc
push
mov
lock
call
shlb
push
jecxz
imul
aaa
loopne
or
xor
sbb
idiv
incl
dec
jno
cmp
jae
cltd
mov
mov
and
ljmp
add
mov
in
inc
jmp
pop
popa
les
push
ljmp
ljmp
sub
mov
hlt
inc
mov
or
std
clc
sahf
fbld
push
mov
lret
in
iret
iret
adc
mov
outsb
int3
mov
push
aad
inc
add
fucomip
sbb
popa
add
ffreep
cmpsb
adc
and
cmp
cmp
push
jl
xchg
js
mov
fdivrp
call
shll
push
mov
cmp
stos
cwtl
xlat
pop
push
and
dec
push
outsb
push
incl
adc
mov
test
mov
cli
jecxz
push
aas
bswap
cs
aas
mov
mov
in
mov
gs
jne
xor
cwtl
push
out
push
cmp
xchg
pushl
mov
cvtps2pd
xchg
call
sub
jg
inc
mov
call
pop
je
test
lahf
pop
xchg
jo
push
pop
pusha
test
ja
cmp
cmp
push
ror
pop
jle
inc
fisubrs
dec
xchg
bound
pop
ljmp
xchg
jnp
fidivrs
icebp
mov
ret
mov
dec
mov
sbb
ljmp
and
pop
mov
and
imul
fld
incl
arpl
pop
lods
dec
ja
adc
scas
xor
ljmp
stos
pop
out
xchg
mov
sub
scas
sbb
rcrb
outsb
fs
pop
pusha
enter
jmp
dec
idivb
sub
lods
lock
lret
xor
adc
call
mov
xor
icebp
or
cld
imul
test
xchg
rorb
imul
dec
loop
hlt
jmp
cmp
cmp
call
mov
push
inc
cmpsb
inc
test
fwait
cmc
gs
dec
push
lahf
jle
pop
cltd
rep
incl
or
xchg
stc
orb
mov
in
dec
movsb
pop
ss
mov
rorl
and
call
jns
xor
aad
les
pop
das
jl
pop
sbb
outsl
and
les
jae
lret
jnp
mov
lods
pop
jns
push
imul
test
arpl
sub
cmpsl
enter
jbe
sar
decl
mov
pop
scas
and
imul
cmpsl
pop
daa
push
lcall
mov
fs
out
adc
inc
jp
cmp
aaa
fiadds
sub
shl
lcall
xchg
xorps
mov
iret
and
loop
fcoms
mov
aam
cld
scas
ljmp
xchg
sub
ljmp
add
mov
pusha
mov
into
mov
daa
push
pusha
push
cmp
mov
outsb
jo
stc
push
outsb
xchg
sar
sti
cs
jecxz
mov
out
cmp
pop
aad
dec
add
mov
dec
pop
xlat
mov
jg
push
mov
enter
leave
test
in
mov
xor
fildll
into
pop
cmp
je
arpl
mov
pushl
sbb
scas
fistpll
mov
jnp
popa
jge
cmp
or
stos
insl
push
cmpsb
je
jnp
or
jmp
mov
je
dec
inc
adc
pop
aas
xchg
mov
daa
or
pushf
add
add
and
lods
sbb
add
or
cmp
call
lods
div
pusha
je
iret
sti
pop
sahf
push
cmp
faddl
cmovbe
lods
mov
adc
call
jecxz
mov
xchg
jne
mov
cmp
xchg
mov
mov
jmp
call
push
outsl
outsb
shl
test
mov
sub
ljmp
rorl
loop
ljmp
mov
sbb
push
add
xor
add
les
decl
cmp
mov
mov
sub
js
std
stc
sub
mov
pop
inc
jp
int3
mov
dec
pushl
cld
mov
cmp
cltd
pop
lock
cld
addr16
adc
repz
xchg
push
lahf
ljmp
sbb
pushf
imul
cld
mov
stos
and
ret
sar
cmpsb
mov
popa
sbb
mov
sub
in
inc
push
inc
aaa
add
incl
jb
loop
sbb
out
jmp
pop
pop
cltd
cmp
sbb
outsb
mov
and
sahf
add
add
sub
mov
imul
imul
jbe
stos
mov
call
imul
enter
adc
fcomip
fwait
cmp
push
add
fs
xchg
pop
mov
shl
std
add
or
jmp
mov
bnd
pushf
pop
cltd
aad
fldcw
insl
mov
cmc
shl
lock
mov
inc
jmp
xor
out
adc
add
inc
call
in
adc
xchg
mov
xchg
adc
adc
adc
jecxz
pop
and
jg
mov
cmp
dec
out
mov
sub
std
loop
cs
inc
ljmp
pop
cld
mov
insl
mov
fsubrl
test
es
scas
bound
call
call
xlat
cmp
push
insl
mov
fcoml
mov
add
loop
test
jb
call
out
pop
mov
inc
cwtl
mov
hlt
inc
pop
aaa
sbbl
cmpsb
cmp
scas
inc
arpl
iret
cmova
js
xchg
sbb
xchg
mov
xor
adc
lret
cltd
pop
sbb
ficoml
inc
or
adcb
fcomip
sub
cmpsl
std
mov
loop
cmp
xor
mov
fdivs
andb
popa
mov
icebp
mov
push
ljmp
add
icebp
xchg
pop
loope
lahf
mov
call
and
mov
ret
sub
scas
inc
std
mov
es
out
jp
punpckhwd
loope
stos
orl
lea
ljmp
ffree
scas
dec
xor
xlat
clc
sbb
out
inc
mov
and
call
fistl
mov
sub
push
lcall
cld
cmp
cmp
incl
mov
cli
call
mov
push
sbb
rolb
mov
push
incl
push
xchg
mov
push
push
add
loopne
mov
rcll
ret
test
pushl
cli
mov
push
xchg
mov
std
mov
arpl
inc
inc
sbb
sub
js
popf
in
add
add
pushl
imul
mov
aam
mov
icebp
in
shrb
mov
lahf
popf
ljmp
jb
repnz
inc
fbstp
shrb
xchg
loopne
aad
cs
adc
decl
push
sbb
jp
adc
ds
sbb
xor
lcall
shrb
push
call
cli
mov
mov
mov
sub
jne
nop
fcmovb
cmpsl
jl
rclb
mov
jg
pop
mov
shrl
and
or
int
push
cmp
xchg
push
bound
hlt
jmp
inc
inc
movsl
scas
dec
pop
xchg
lea
and
loopne
ljmp
cltd
and
jl
dec
adc
xchg
incl
cwtl
aas
mov
jmp
xor
incl
sarl
lds
idiv
aas
outsb
imul
ljmp
jecxz
gs
push
pushl
sub
fnsave
call
outsb
test
icebp
pop
shll
mov
decl
shrl
lods
leave
xor
xor
out
or
in
mov
test
add
inc
loopne
data16
call
push
pinsrw
adc
arpl
lret
imul
aas
add
js
cmp
sbb
mov
iret
lcall
sti
cwtl
jecxz
incb
stos
pusha
lea
cmpsl
addr16
or
imul
pop
sub
jg
adcl
lds
inc
enter
imul
jge
sub
outsl
les
mov
mov
decl
dec
shll
int
int3
pop
mov
jl
scas
jg,pt
or
sub
into
mov
repz
in
mov
sbb
andl
or
adc
or
xchg
sub
lea
jb
sbb
jmp
xchg
dec
inc
loope
jne
icebp
ds
loop
in
mov
call
repnz
leave
movsl
add
pop
stc
xlat
stos
stos
psubd
cld
outsb
ja
and
mov
fmull
mov
pop
jl
sbb
dec
mov
dec
pop
sub
cmpsl
call
xor
icebp
shll
dec
mov
in
jg
xchg
jo
push
test
dec
ds
dec
add
jae
sub
fidivs
lcall
divb
fisubrl
mov
push
sbb
cld
aam
bnd
jns
inc
lock
mov
lea
in
aas
or
sub
je
int3
movsb
inc
pop
in
pop
loopne
dec
mov
ss
movsb
pop
mov
je
inc
xchg
jae
imul
mov
adc
stos
jo
push
imul
mov
stos
mov
repnz
push
lret
jmp
int3
std
nop
sbb
inc
jl
fnstsw
xor
add
cld
adc
xor
xor
mov
outsb
ret
mov
jmp
loope
repnz
loopne
mov
mov
outsl
pop
jge
das
repz
ljmp
adc
add
adc
loope
mov
and
inc
xchg
or
jbe
sti
mov
std
das
out
adc
mov
xchg
in
aam
movsl
pushf
insl
into
mov
xchg
sar
or
int
jge
push
push
clc
adc
ljmp
ss
ja
mov
jne
mov
sub
xchg
mov
and
push
les
xchg
jno
lea
aad
mov
mul
ljmp
punpcklbw
addr16
mov
stos
dec
or
cwtl
push
add
mov
fisubrs
cmpb
bound
and
sbb
jmp
leave
xchg
in
bound
fiaddl
inc
orl
lahf
gs
dec
sbb
lcall
xchg
mov
test
fistpll
aas
add
jmp
pushf
jge
loopne
orl
and
sbb
push
ja
rcll
mov
inc
pushf
mov
test
repnz
ds
adc
push
stos
arpl
pop
xor
lcall
cmpsl
fisttps
out
push
gs
xchg
int3
rolb
pop
lcall
testb
mov
scas
jne
xor
lods
popf
cltd
push
pop
pop
mov
incl
xor
lret
ret
inc
sub
pop
dec
push
mov
adc
je
or
ljmp
sub
or
inc
sbb
jp
and
xor
nop
scas
cli
mov
mov
sub
pop
pop
pextrw
mov
mov
scas
pushl
cmc
mov
jle
cltd
nop
rolb
lret
dec
sbb
mov
and
mov
iret
xchg
cmp
mov
mov
gs
outsb
xchg
jne
das
add
mov
xlat
mov
add
jb
pop
sahf
pushl
sbb
pop
insb
sub
shll
adcb
xchg
call
dec
xor
mov
and
adc
test
cmp
mov
sbb
aas
popa
out
xor
out
jle
or
lock
adc
in
and
out
xchg
aas
xchg
lock
pushl
xchg
mov
xor
movsl
mov
in
xor
sub
mov
decl
fisttpll
push
pop
pop
insl
sahf
adcb
cmpsl
jge
arpl
lock
call
sti
fsub
jbe
les
pushf
mov
jp
test
cmp
dec
jb
std
mov
test
mov
lods
lods
out
clc
push
add
lods
int
pop
or
icebp
or
sub
mov
xor
mov
ror
push
jmp
inc
jne
fcomip
jmp
pop
movsl
arpl
sbb
mov
lods
out
mov
call
arpl
ror
cmp
sbb
pop
cld
mov
movsb
call
mov
mov
pop
inc
hlt
daa
sbb
add
pusha
add
sbb
sbb
mov
add
dec
icebp
popa
fsubrp
pop
js
push
mov
in
out
xchg
cmp
xchg
mov
xchg
fcoml
adc
lcall
mov
or
pusha
scas
dec
and
mov
cmp
push
icebp
movsl
xchg
cmpsb
pop
lods
outsl
mov
shr
sub
xchg
ret
cmp
xchg
inc
pop
ljmp
scas
idivb
scas
ljmp
stos
push
and
pusha
mov
stos
adc
lahf
jno
sbb
mov
nop
bound
ss
mov
mov
ljmp
lods
jg
mov
loopne
clc
lods
cmp
pushl
inc
shl
fildll
inc
jmp
andl
fwait
cmp
pop
test
arpl
hlt
call
js
sub
mov
push
xchg
pop
les
mov
cmpsb
push
movsb
jle
or
pop
cmp
pop
mov
popa
sub
incl
xchg
leave
cld
inc
loopne
fstps
or
sub
std
lcall
add
loope
repz
les
sub
cmpsb
dec
std
ret
fcomip
xchg
stc
shl
imul
sti
sbb
cmp
mov
arpl
sub
pop
dec
mov
popf
dec
sub
pop
xchg
sbb
mov
std
lods
dec
outsb
outsl
mov
ds
int3
shll
shll
mov
pop
shrl
mov
adc
gs
jg
cwtl
in
jne
int
mov
sub
scas
mov
dec
lahf
inc
jbe
in
push
xchg
pop
dec
jmp
cli
stos
push
sbbb
dec
in
andl
mov
sbb
ljmp
ds
mov
dec
shll
xor
das
jl
jbe
mov
sar
push
shrb
inc
movsb
mov
cmp
sbb
aad
add
lods
push
adc
gs
popa
ljmp
mov
xor
cmp
lods
in
divl
xchg
fldl
decl
xchg
loop
mov
orl
cmp
lcall
bound
xchg
aas
xchg
pop
daa
push
cmp
mov
push
ds
sub
decl
in
inc
cmc
notb
sbb
mov
pop
es
and
js
cmp
adc
cmp
pop
cmp
dec
arpl
cmpsb
jne
cmp
mov
out
addb
pop
aaa
jmp
decl
in
enter
sbb
xchg
mov
jmp
jle
ja
jo
dec
dec
outsb
or
jno
inc
or
cmpsl
push
mov
test
stos
lods
jbe
cmp
clc
inc
mov
fidivl
jae
ss
js
or
add
into
ret
mov
cmp
pop
add
imul
ja
adc
popf
sbb
mov
call
xor
adc
push
cmpsb
fidivl
jecxz
dec
mov
mov
jecxz
mov
add
pop
push
xor
imul
in
mov
and
push
movb
lods
lcall
mov
inc
or
and
icebp
sbb
sub
adc
pop
ss
jmp
mov
push
fiaddl
push
push
jp
dec
cmp
movsb
stc
test
jns
in
push
lcall
cs
cmp
stos
pop
pop
into
shr
inc
stc
inc
and
cltd
cmp
lds
es
movsl
std
popf
mov
decl
xchg
push
adc
popf
jo
ds
and
push
sub
dec
xor
repnz
jg
popf
incl
mov
adcb
push
leave
xchg
enter
insb
jbe
gs
call
fidivs
pop
mov
sbb
sub
push
sbb
cmp
dec
ljmp
clc
pushl
stc
jp
mov
cmpsb
sub
cmp
mov
test
and
loop
ljmp
add
notl
repnz
lcall
stos
push
mov
push
inc
xor
mov
in
clc
xlat
pop
movsb
lock
test
fs
ss
daa
iret
add
adc
mov
cmp
cwtl
repnz
hlt
mov
pop
cmp
jge
jo
movsl
xchg
jne
mov
and
push
cmp
clc
ljmp
sbb
pop
cmp
xor
je
xchg
jbe
or
cmpsb
fdivrs
scas
test
jl
push
push
test
enter
and
xchg
mov
push
bound
inc
inc
sub
call
notl
mov
add
adc
fld1
pop
mov
sbb
leave
xlat
push
jmp
and
das
in
dec
adc
loope
rcrl
sub
jb
dec
mov
jg
test
pushf
pop
scas
bound
fimull
roll
ret
mov
or
das
clc
ret
lods
clc
sbb
jbe
xor
xchg
fbld
jg
in
xor
lds
pop
mov
mov
jg
and
icebp
jg
mov
cld
jmp
xor
sbb
inc
push
mov
mov
shrl
jle
rorb
sahf
aas
ret
push
add
sub
aam
mov
in
sarb
in
xlat
xchg
enter
jecxz
loope
data16
decl
sub
arpl
scas
or
inc
dec
out
lea
jno
lret
loop
movsb
cmc
pop
cmc
sub
jo
xor
sub
push
stos
lretw
jg
ljmp
test
fs
stos
stc
les
out
and
sbb
repnz
popa
clc
and
inc
fcmovbe
loop
testl
leave
mov
sbbb
jp
cmc
cmpsb
jecxz
rcll
mov
decl
cs
and
pusha
out
in
jns
loope
aad
jnp
incl
add
xorb
xchg
add
sbb
mov
shl
imul
cmp
in
push
adc
mov
leave
lock
mov
paddd
hlt
push
movsl
mov
xchg
negl
out
aad
mov
decl
push
mov
xchg
cwtl
adc
inc
mov
push
cld
pushl
jns
iret
repz
test
sbb
cvtps2pd
sub
cmp
cmp
xchg
es
js
int3
ss
shl
xor
push
jp
cli
jmp
negb
mov
jns
stc
loopne
push
jno
int
lret
idivb
mov
hlt
or
stos
bnd
aad
outsl
mov
loopne
ljmp
xchg
fcomip
int
pop
jmp
inc
mov
push
insl
stc
pushl
jns
add
lods
sbb
jge
push
jge
cld
cwtl
psrad
mov
fcmovne
or
add
or
test
cmp
jg
adc
xchg
or
jmp
sub
xor
pop
sbb
adc
jmp
add
xlat
lods
les
jmp
nop
je
pop
inc
sub
in
or
inc
sbb
mov
test
sub
xchg
xchg
jmp
add
jne
lret
mov
enter
xor
dec
inc
mov
pusha
dec
xchg
or
out
push
inc
cmp
divb
jns
mov
call
fdivr
mov
clc
jl
cmpsl
pusha
push
xor
mov
jl
stos
pop
mov
xor
cmp
sbb
mov
sub
inc
adc
rcrb
pop
lret
jl
pop
cmp
mov
xchg
xchg
std
nop
arpl
popa
ret
mov
add
pop
pop
test
add
decl
sahf
scas
repz
or
stos
repz
jmp
ljmp
inc
cmpsl
xor
insb
fnsave
pop
xchg
push
lock
aam
xor
frstor
leave
rcrb
data16
fcomip
mov
popa
mov
nop
adc
jb
pop
lret
test
lcall
cmp
mov
xlat
mull
loopne
loope
insl
loope
sbbb
aas
xchg
imul
push
je
xor
xor
or
jle
xchg
mov
fisubrs
pushl
lods
fmull
shrb
push
out
cltd
xor
out
cmp
adc
jno
in
jl
dec
add
outsl
lret
ds
dec
test
push
jg
jp
xchg
mov
pop
gs
xor
xchg
ret
dec
mov
fistpll
call
xor
insb
jnp
add
and
sarb
pop
mov
and
lods
aaa
inc
sub
jmp
add
inc
xchg
dec
push
sahf
into
adc
ret
jae
cmp
jnp
repz
mov
sbb
cmpb
out
mov
imul
xchg
out
dec
jl
out
jg
in
mov
cmp
stc
mov
mov
loop
mov
mov
adcb
xorl
ret
mov
add
ljmp
pop
adc
in
mov
test
loop
loop
pop
fisttpll
ljmp
mov
pushf
dec
xchg
stos
loope
cmp
cmc
and
int3
pusha
push
lock
ljmp
mov
stos
push
pop
cltd
cmp
and
cltd
nop
push
jecxz
sub
inc
shrb
daa
xchg
and
jmp
mov
sbb
bound
lret
loopne
inc
mov
or
mov
loop
mov
ret
xchg
jmp
mov
or
push
push
pop
popa
adc
jge
fadd
sub
xchg
enter
incl
add
adc
rol
xchg
mov
hlt
sbb
pop
mov
push
cld
incl
xchg
lock
pop
sahf
repnz
xchg
jg
sub
cmp
xchg
jge
mov
test
cs
cmpsb
cmpsb
or
pushl
ret
iret
into
lahf
cmc
cli
dec
data16
not
mov
in
push
ljmp
mov
pop
push
das
adc
scas
adc
stos
cmp
call
call
scas
jmp
outsl
and
stc
je
sub
push
mov
pop
insb
inc
je
or
addr16
and
call
dec
repnz
bndstx
clc
ret
bound
and
xchg
sub
ja
rcl
dec
push
lock
cld
sti
paddsw
lcall
jl
mov
loopne
scas
and
xchg
dec
push
sbb
xchg
call
adc
in
mov
fadd
aad
mov
pop
inc
pop
cmc
sbb
jl
and
dec
inc
and
push
out
nop
mov
sub
cmpsl
sbbl
mov
jge
and
leave
jae
mov
int
jle
int
ljmp
jge
ret
cmc
mov
pusha
mov
jbe
das
test
and
or
lock
mov
test
decl
call
push
mov
arpl
cmp
aad
mov
imul
into
in
fsubr
int
inc
sbb
jecxz
lret
fcompl
push
movsb
jo
imul
jge
imulb
aad
das
loop
std
pop
in
xchg
loopne
mov
pushl
test
dec
push
and
lods
pusha
insl
push
pop
cli
sbb
push
pop
ss
xchg
or
ljmp
adc
pop
xor
cmpl
stos
cs
lcall
and
aad
mov
andb
mov
ljmp
icebp
ljmp
sbbb
imul
fwait
push
mov
shr
gs
cmp
inc
lods
inc
push
push
or
lods
cmp
pop
pop
mov
mov
mov
ljmp
jnp
jb
ljmp
add
lds
sub
sbb
repz
mov
fistpll
int3
lcall
clc
mov
xorl
xchg
cmp
loopne
outsb
lahf
mov
mov
incl
jnp
xor
aas
fcmove
push
hlt
movsl
mov
iret
in
mov
out
into
ljmp
push
test
sub
subl
aas
out
rorb
andl
pop
aas
into
pop
nop
push
outsb
cmp
sub
call
nop
pop
je
mov
repnz
lcall
push
jae
mov
dec
xchg
call
jno
sbb
test
pop
aad
add
fs
cmpb
sbb
andl
dec
fnstsw
push
pop
std
or
int3
int
cmp
stos
add
add
mov
pop
sarb
cmp
stos
and
sub
inc
and
popa
jmp
imul
int
mov
cld
daa
push
cld
mov
sub
decb
ficoms
inc
jmp
xchg
mov
jmp
push
mov
rorl
filds
or
push
cmc
and
es
jl
testl
rclb
out
ja
jge
fstp
out
sbb
or
dec
inc
xchg
fmull
movl
icebp
clc
imul
sub
push
cmp
mov
stc
pop
push
test
push
pop
nop
jmp
int
jmp
lods
and
sub
sbb
mov
loopne
pop
ljmp
ljmp
outsl
pushl
ret
icebp
mov
jp
in
pop
aam
or
and
dec
ljmp
dec
xchg
sarl
sahf
dec
jbe
das
mov
sbb
cwtl
and
jl
scas
jae
rorb
scas
xor
insl
mov
adc
in
mov
std
inc
mov
ljmp
orb
aad
jg
push
inc
cmp
sbb
jmp
dec
cwtl
out
daa
jmp
mov
xor
add
dec
decl
mov
push
imul
and
incl
mov
jp
ljmp
lods
jnp
mov
dec
mov
imul
xchg
pop
sub
ret
jo
inc
fldcw
incl
ja
int3
pop
mov
mov
dec
stos
out
cmp
test
or
add
lods
jp
icebp
push
mov
mov
ret
lahf
cmpsb
lahf
data16
dec
popf
js
push
repz
out
push
sarb
push
movsb
push
mov
mov
xchg
mov
jbe
dec
jmp
xor
idiv
push
adc
sub
dec
in
loopne
mov
push
xlat
call
sub
mov
movsb
mov
mov
outsl
cli
jmp
scas
fisttps
fistl
pop
jg
sub
in
pop
or
xchg
lcall
loopne
in
out
mov
gs
sbb
cwtl
push
and
mov
inc
dec
push
cmp
test
push
xor
push
push
jecxz
mov
and
adcb
fwait
inc
and
mov
enter
faddl
xorb
mov
out
dec
xorl
cmp
xchg
sbb
lcall
int3
add
test
add
jmp
push
fbld
add
pop
loope
mov
mov
adc
mov
sub
or
add
pop
add
sub
jmp
cmp
int
pop
popf
mov
inc
aas
fcmovb
push
mov
and
out
mov
cwtl
and
mov
ljmp
dec
int3
popf
es
mov
fwait
adc
das
mov
adc
pop
add
out
mov
rorl
xor
jmp
js
cmp
push
cmp
mov
sub
sbb
xor
pop
cmp
mov
sbb
jp
in
ror
push
add
and
sub
lcall
push
sbb
out
mov
jle
jp
call
rorb
adc
or
std
lahf
mov
mov
push
iret
stos
shll
adcl
dec
decl
mov
and
ljmp
xlat
pop
jb
pop
leave
lret
cmp
mov
lcall
fistpll
stos
jecxz
dec
xor
mov
and
xor
data16
dec
sahf
movsb
ja
mov
mov
lea
push
std
ljmp
xchg
insb
mov
xchg
sbb
iret
ljmp
loope
or
mov
push
mov
addr16
lock
inc
sbb
jae
adc
and
loope
bound
decl
rol
xor
in
xchg
bound
rolb
fnsetpm(287
mov
decl
jl
mov
mov
sahf
out
and
ret
or
shlb
cmpl
push
jg
dec
sarl
xor
fisttps
and
call
add
inc
push
jl
loope
cs
or
decl
ret
and
dec
enter
inc
inc
or
pop
data16
jge
mov
jg
jnp
mov
fcompl
rorb
and
divl
dec
or
add
dec
loop
inc
inc
mov
cmp
sahf
clc
shll
xchg
mov
insb
std
mov
sbb
cmpsl
add
cld
jns
loopne
sbb
les
cwtl
dec
in
cmp
mov
imul
aam
adc
jp
add
pushl
adc
inc
loopne
add
movsb
test
mov
cs
mov
mov
in
repz
pop
dec
subb
jmp
and
into
xchg
push
jecxz
aaa
das
mov
inc
int
xchg
or
dec
insl
jbe
pop
xchg
gs
push
inc
push
mov
push
nop
sbb
out
js
jae
inc
ljmp
stos
xchg
fstl
decl
data16
imul
ret
push
and
dec
aaa
mov
or
mov
icebp
ljmp
fucomip
xchg
and
cmp
add
or
addr16
inc
push
outsl
out
fldl
stos
cs
pop
xor
dec
seto
jmp
or
dec
or
xor
outsl
adc
movsl
and
mov
jge
stc
xor
rorl
jg
inc
adc
xor
jge
push
movsl
pop
or
or
ljmp
inc
imul
fimull
sahf
push
jnp
inc
xchg
lds
xchg
xorb
xchg
push
scas
cli
scas
decl
enter
add
outsb
sbb
lock
mov
jmp
mov
test
call
daa
pop
fdivrl
outsb
or
out
mov
shlb
dec
repz
add
dec
into
mov
mov
outsb
gs
das
push
cli
std
aad
mov
and
insl
xchg
jecxz
pop
xchg
fmuls
das
jecxz
cmp
mov
aas
lea
xchg
mov
ficomps
ljmp
push
bound
cmp
mov
xchg
test
push
mov
imul
inc
jmp
mov
xor
mul
lret
out
fdivs
repnz
pop
aam
mov
out
xor
into
fldcw
sbb
pop
clc
outsl
xor
into
mov
mov
incl
add
xchg
xor
aas
and
mov
incl
or
cli
lcall
sbb
mov
mov
jmp
mov
daa
clc
out
sbb
dec
jmp
mulb
mov
insl
popa
and
aad
or
cltd
mov
jecxz
inc
lret
jmp
cmp
sbb
jle
adc
outsl
jmp
adc
in
dec
pushl
je
lret
and
in
xchg
aad
xor
and
pusha
sbb
push
xor
out
mov
adc
pop
mov
shlb
call
ljmp
in
add
push
xlat
jo
icebp
push
xor
mov
pop
jnp
call
dec
lods
mov
push
inc
ficompl
push
sbb
outsb
out
test
cld
inc
adc
pushl
cmp
push
data16
std
sub
xchg
ja
daa
jp
pop
or
ljmp
dec
mov
scas
loope
leave
mov
pop
cmp
cwtl
test
dec
jle
fcomip
pushl
pop
ret
adc
push
int
add
pop
push
add
inc
test
or
cmp
incl
dec
pop
sub
out
xchg
xchg
movsb
aad
inc
leave
loopne
pusha
incl
push
inc
inc
dec
xchg
cwtl
daa
sbb
fbstp
cld
decl
sbb
js
in
lds
mov
stc
sbb
adc
xor
incl
and
lds
std
call
add
inc
in
jne
stc
add
out
mov
daa
jb
mov
popf
xchg
ja
mov
scas
jg
xchg
and
ljmp
push
push
rolb
cmp
clc
fnstcw
push
ds
gs
xchg
add
mov
jge
pusha
xchg
cmpsl
add
clc
lcall
sahf
mov
call
out
mov
rorl
mov
hlt
lock
pop
pop
aam
sar
cmpsb
int3
mov
xor
cmpsb
sarb
pop
pop
jnp
jecxz
lcall
inc
fadd
scas
sub
pop
popa
mov
das
je
lret
rorb
pop
orb
lods
ficoml
inc
popa
roll
mov
or
ds
push
mov
add
mov
nop
ss
dec
lahf
xchg
popf
roll
xchg
loope
dec
sbb
lea
cmp
incl
repnz
arpl
popf
and
and
ret
shlb
mov
fiadds
stos
testb
hlt
jae
xchg
iret
jbe
inc
call
add
pop
push
push
mov
jb,pn
inc
xor
or
jg
lea
mov
mov
movsb
into
loop
ja
decl
xchg
aas
loope
mov
loop
mov
cld
cmpl
sub
jg
add
pusha
outsl
and
shlb
push
stos
call
loopne
jno
lret
addr16
lret
les
adc
mov
add
push
outsb
es
fsts
sti
lcall
lcall
cli
stc
mov
cmovnp
or
cltd
stc
xor
ljmp
enter
call
nop
ret
sahf
sub
jno
add
mov
aad
call
push
adc
push
cmp
nop
xchg
or
out
fbstp
jmp
sub
pop
push
lock
jmp
rorb
cmp
xchg
dec
jecxz
xchg
or
pop
in
lcall
js
ret
inc
mov
mov
fisubrs
repz
mov
movsl
mov
adc
dec
mov
cli
aaa
xchg
ljmp
adc
arpl
xchg
mov
imul
xchg
add
ljmp
outsb
or
jmp
fists
lahf
inc
sub
fcomip
call
test
jle
dec
prefetch
inc
fimull
clc
xchg
int3
xchg
pop
decl
mov
in
out
ret
pusha
fstpt
fs
xchg
or
enter
push
jmp
mov
inc
lods
or
imul
inc
mov
call
pop
sbb
jg
adc
dec
mov
jno
addr16
adc
dec
in
xor
push
outsb
inc
cltd
ret
mov
call
arpl
test
inc
dec
push
mov
sbb
cli
cli
dec
cltd
lahf
stos
push
mov
adc
adc
neg
test
lcall
js
aad
jg
jl
mov
decb
clc
xchg
lahf
sbb
mov
inc
cmp
dec
fdiv
dec
pusha
stos
xlat
aam
and
add
ljmp
add
outsl
ljmp
icebp
add
mov
jnp
sbb
jmp
fcmovnu
xchg
mov
add
add
test
lea
mov
pushf
mov
iret
mov
test
cmp
lods
adc
adc
das
into
pop
daa
inc
stc
pushf
sbb
sbb
push
pusha
jmp
xor
or
sahf
testl
jecxz
fildll
mov
std
push
insl
push
push
lods
and
pop
push
mov
out
arpl
mov
pop
cmp
push
mov
mov
fmull
push
pop
mov
mov
mov
inc
sub
push
out
icebp
inc
mov
mov
xor
insb
ja
dec
add
jno
movsl
push
xor
jle
mov
clc
mov
dec
mov
and
jp
fs
xchg
daa
ss
xchg
jp
mov
clc
push
std
imul
sub
inc
loopne
imul
aam
jb
test
cld
js
cmp
popa
in
dec
stc
cmp
cmp
loopne
adc
adc
cli
adc
mov
aas
push
fcomip
add
repz
das
bound
adc
test
shlb
ljmp
push
jecxz
inc
es
adc
sub
inc
fwait
ss
mov
into
lret
mov
inc
dec
mov
mov
mov
jecxz
jmp
add
push
mov
mov
sbb
imul
pop
scas
xor
fucomi
push
xor
dec
loop
and
ds
inc
sub
inc
daa
cmp
push
ret
shlb
sub
push
jbe
mov
repnz
mov
cmpsb
sub
test
insb
ljmp
mov
xorb
mov
and
fdivrl
movsb
xchg
inc
inc
daa
mov
xchg
cmp
test
std
sub
pop
inc
push
mov
jns
pop
mov
test
incl
mov
lcall
or
cltd
cmc
pop
jns
xchg
fists
sbb
mov
in
push
push
pusha
jge
mov
sub
push
xchg
push
sub
jge
jns
fs
insb
or
mov
sub
or
shll
sahf
clc
in
pop
cmp
push
out
cs
cli
aad
ret
adc
cmp
lret
sub
out
cli
decl
dec
mov
lret
inc
xor
insb
cmp
daa
sbb
pop
sbb
call
scas
out
and
adc
mov
dec
mov
push
jnp
je
sbb
or
and
cmp
or
xlat
decl
repnz
cltd
pop
testl
inc
cmc
das
jp
rcll
mov
or
frstor
daa
cltd
lcall
fcomip
dec
lea
test
mov
add
in
into
sbb
fnsave
jmp
inc
push
pop
cmp
push
fs
sbb
fiadds
jmp
mov
mov
jp
out
mov
pop
pop
cmp
fmul
mov
mov
lcall
xor
lods
sti
cmc
jge
xchg
dec
shlb
outsl
mov
xchg
mov
or
fbstp
mov
inc
icebp
jo
jmp
jg
outsl
idiv
call
icebp
jb
jge
lret
lock
ja
mov
sbb
cmp
mov
lret
and
call
test
inc
xchg
sbb
loope
loope
aas
sbb
jno
sbb
pop
and
jmp
addr16
repz
dec
sub
fwait
inc
push
and
mov
rcrl
call
sub
icebp
fisttpll
xchg
jns,pn
mov
sbb
or
cmp
scas
xor
out
cmp
dec
fisttpl
dec
and
push
and
call
in
adc
xor
int3
in
cld
dec
popa
xchg
sub
adc
cs
rcll
outsl
out
test
or
push
iret
dec
xchg
ss
test
lret
or
xchg
pop
rcl
loope
incl
enter
jp
dec
ja
lds
rcrl
push
lea
test
fadd
mov
jae
cmp
shll
cmpsl
sbb
ret
rclb
pop
imul
sub
sbb
outsl
repz
shlb
adc
repz
push
adc
pop
pop
or
shl
fs
mov
pop
outsb
or
les
imul
adc
aaa
mov
icebp
cs
aaa
pushl
mov
outsb
pop
clc
dec
xchg
shrb
pusha
jno
test
push
mull
insb
dec
movsb
add
jmp
jecxz
mov
jnp
lahf
xchg
xchg
gs
mov
mov
sbb
jg
pop
and
lods
pop
scas
in
inc
addr16
xor
xor
jge
popf
mov
mov
call
push
aam
adc
jns
mov
add
lods
lret
popa
bound
add
xchg
and
out
repnz
repz
fdivl
push
decl
xchg
jb
aam
hlt
adcl
cs
push
sbbb
je
js
in
popf
aad
cmpsl
xor
jg
mov
pop
sub
pop
cs
in
add
sbb
push
mov
call
cs
call
lahf
mov
mov
shr
jg
mov
bound
sub
pop
sti
jge,pn
mov
jmp
sub
clc
fstps
scas
mov
dec
aaa
xchg
xor
mov
mov
xchg
pusha
xor
xchg
lret
mov
push
int3
mov
jecxz
int3
jo
mov
lcall
popa
xor
push
sub
mov
sti
mov
mov
out
mov
rolb
inc
pusha
mov
mov
ljmp
imul
xor
cld
pusha
jmp
dec
or
popf
cli
leave
loop
sar
aaa
mov
mov
adc
fs
loope
adc
outsl
cli
inc
cwtl
mov
andb
sbb
or
leave
pop
push
add
loopne
jb
es
ljmp
mov
cmp
cmp
test
mov
jnp
pop
lret
stos
fcomip
popa
call
ss
lret
int
stos
xchg
and
mov
push
add
mov
jge
fadd
mov
mov
filds
test
cmp
pop
inc
data16
clc
outsl
lock
jmp
cmp
data16
andl
xor
movl
outsl
out
ljmp
mov
sbb
iret
std
test
lahf
stos
notl
call
add
and
cmpl
cmc
add
insl
scas
in
inc
imul
fcomip
ret
daa
inc
jecxz
mov
jge
daa
mov
jne
cld
xchg
xlat
sbb
ds
lahf
push
or
call
out
adc
adc
dec
rcr
aaa
cld
pushl
or
test
mov
mov
lods
cltd
adc
and
or
fcomip
call
xchg
loop
adcl
sbb
inc
mov
lcall
inc
mov
pop
pop
lds
pop
cwtl
hlt
sbb
jmp
adc
sbb
dec
dec
inc
sbb
ds
fwait
xchg
sub
pmullw
dec
lahf
cmp
inc
outsb
cmp
pop
xlat
stc
pop
sub
test
ja
ret
push
aad
push
cmp
cmp
ljmp
sub
jle
xor
sysret
faddl
cld
xchg
pop
mov
out
and
jle
popf
fisttpl
sub
mov
je
xchg
jle
jg
dec
xchg
push
inc
cltd
mov
add
jge
mov
lret
inc
sbb
jnp
sarl
pushl
rcll
jl
int3
ljmp
mov
cmp
sbb
cs
aad
gs
cs
cli
sub
and
mov
fiadds
icebp
push
in
enter
pop
add
pop
and
adc
mov
jb
add
loopne
or
adc
sbbl
push
dec
imulb
add
push
out
out
pusha
cmp
mov
es
jns
fmul
mov
mov
jg
call
add
jl
insb
or
mov
fldt
and
inc
outsl
xchg
rorb
clc
mov
loop
repnz
mov
lods
mov
sarl
ja
arpl
call
sub
and
test
or
xlat
mov
fldt
inc
sub
enter
call
clc
call
test
dec
fs
call
aaa
ja
outsl
xor
adc
push
popf
and
push
mov
or
and
jne
lcall
dec
ss
test
loop
mov
leave
je
scas
rclb
dec
jmp
pop
sbb
arpl
sbb
cmp
lcall
pop
test
hlt
imul
pushf
aam
xchg
fdivl
pushf
fs
cmp
sub
pop
ret
test
stc
xor
mov
imul
das
lds
jmp
ret
loopne
or
inc
les
daa
pushf
sub
filds
push
inc
sub
mov
stos
mov
shrl
shlb
in
push
cs
cmp
sar
push
cmpsb
rcl
lock
out
clc
call
loope
cmp
dec
mov
test
inc
pushf
push
inc
inc
push
in
cmp
fwait
insb
loopne
or
cld
jge
ret
inc
mov
push
icebp
push
mov
or
out
xorb
push
pushf
jp
mov
addr16
scas
clc
outsl
call
jge
shll
jecxz
jno
fbld
fmuls
into
adc
mov
dec
ret
push
cmc
mov
mov
mov
test
bound
lret
dec
dec
push
xor
xchg
arpl
call
stos
add
and
orb
and
ficoms
std
outsb
sbb
jecxz
out
xchg
subb
call
xchg
int
arpl
js
push
ret
rorb
or
mov
call
push
ret
sti
stos
push
imul
sbb
jne
xor
cmpsb
jb
clc
aas
mov
enter
push
push
pop
mov
imul
xor
mov
sub
decl
jp
mov
in
and
arpl
or
loope
dec
add
ljmp
shr
out
push
test
add
jb
hlt
or
std
xchg
lcall
das
rcl
outsb
loope
scas
pop
push
shll
add
out
stos
jle
sub
cmpsb
icebp
cmpsl
fcmovnb
push
mov
fidivl
es
clc
stos
add
sbb
in
lea
lcall
repnz
lods
mov
mov
cmc
imul
jmp
imul
ljmp
sbb
das
jge
inc
aad
or
in
or
das
and
mov
das
aam
sub
test
add
mov
xchg
mov
jb
xchg
xlat
jae
cmp
out
pop
jg
mov
je
jo
or
inc
pushl
sub
lret
cmp
pop
mov
sub
push
nop
fucomi
add
shr
xchg
and
jmp
pusha
imul
add
lock
pushf
divl
jns
outsb
dec
fldcw
xchg
aam
xorl
jmp
sub
lock
sub
mov
mov
dec
call
inc
aam
and
daa
or
inc
sarl
je
cwtl
push
fs
rcrb
ljmp
loop
mov
mov
cwtl
dec
sbb
xlat
sub
inc
stos
sbb
inc
cmp
xchg
mov
cmpsb
popf
pop
shlb
adc
mov
hlt
push
dec
jecxz
arpl
lcall
sbb
adc
dec
shlb
cmp
xor
dec
ljmp
icebp
sub
enter
psrlq
push
rolb
iret
jl
je
mov
je
and
out
sub
icebp
addr16
xchg
lcall
fs
movl
and
fdivrs
inc
dec
inc
jo
sub
cmc
add
aad
enter
xchg
xor
icebp
add
push
and
fidivrs
lcall
adc
mov
adc
repnz
cmpsl
out
adc
test
mov
xchg
mov
insb
mov
pop
xor
sbb
push
rorl
imul
fcomip
js
push
dec
sahf
lds
in
inc
movsl
mov
cmp
pop
mov
mov
sub
in
adc
xor
jg
mov
fsubp
push
xchg
or
jb
mov
sub
jns
sub
sar
inc
pop
push
leave
push
lock
lock
mov
pop
in
hlt
cmpsb
lret
jo
cmp
cmpsb
mov
mov
test
inc
leave
cmpsl
arpl
mov
mov
ljmp
ret
xor
dec
sbb
fidivrl
mov
or
sub
cmp
sarb
mov
add
mov
stos
incl
cwtl
cmp
outsb
jno
fiaddl
mov
scas
scas
ljmp
adc
addr16
mov
adc
sub
into
int
and
stos
rcrb
ret
js
sub
aad
call
dec
aad
cltd
aad
jmp
add
jnp
pop
mov
inc
jg
jno
fwait
and
jg
and
daa
in
sbb
mov
xor
lret
hlt
jg
ds
pop
xchg
or
and
cmp
add
push
cld
cli
lret
hlt
mov
inc
int3
jge
jle
mov
je
cli
pushl
fildll
adc
fidivs
call
xor
xchg
and
leave
fidivrs
inc
out
and
mov
flds
pop
rcr
add
mov
adc
sahf
fbstp
mov
loop
lock
cli
rcl
jg
mov
rolb
mov
scas
mov
cmpsb
dec
push
mov
xchg
shlb
cmp
dec
mov
and
hlt
ja
fwait
or
ljmp
addr16
and
mov
cs
ja
fwait
push
and
pop
push
inc
jle
enter
add
xchg
call
push
mov
mov
cwtl
sub
mov
push
cmp
or
aam
jo
cltd
mov
and
pushl
jle
mov
stc
pop
lret
sahf
sbb
in
fdivrp
pusha
xor
rorl
out
cli
lret
xor
mov
push
dec
xor
pop
ja
jle
js
mov
sbb
in
sahf
pushf
call
cmpsb
mov
dec
out
adc
movsb
adc
aaa
jle,pt
xor
pushl
je
in
ret
sbb
jbe
cmp
jnp
movsb
and
fstl
hlt
pop
mull
cs
adc
call
xor
pop
imul
sub
pop
cmpb
and
call
pop
in
sub
or
add
sbb
ret
addl
rcll
out
cmp
sub
repz
pop
std
pushf
mov
cmp
outsl
mov
inc
inc
lcall
ficoml
cmpb
cmp
and
jns
incl
enter
or
cmp
popf
mov
js
rorl
test
movsb
xlat
mov
lahf
jmp
bound
das
inc
out
pop
popf
popf
jnp
out
mov
and
fs
mov
lods
call
and
popa
xor
mov
iret
adc
jg
icebp
dec
sbb
les
call
clc
out
adc
xor
daa
out
mov
cld
cmp
or
decl
mov
dec
mov
push
sub
fdivrs
cmp
sbb
pop
mov
sub
pop
hlt
incl
daa
dec
push
pusha
push
ficompl
inc
sub
lods
idivb
out
sahf
mov
ljmp
ret
push
add
mov
insl
movsl
shrl
lahf
lea
aaa
pop
dec
fnstsw
ljmp
clc
adc
push
cld
inc
iret
jnp
test
sub
jg
testl
insl
inc
mov
aad
sub
mov
data16
xor
ja
call
mov
rolb
pop
xchg
dec
test
sarl
lods
pop
and
decl
jae
cmp
shl
ds
insl
sti
dec
pop
mov
xchg
out
mov
ret
std
push
aas
ds
mov
adc
lods
fnstcw
dec
in
xchg
xor
jo
std
inc
out
mov
inc
add
xchg
sbb
adc
mov
xchg
pop
mov
js
xchg
xchg
jg
jg
in
int
dec
xor
lcall
dec
pusha
std
rol
pushl
out
aam
jecxz
mov
hlt
mov
push
je
icebp
popa
sub
in
inc
xor
int3
inc
pop
mov
lret
lcall
push
inc
hlt
leave
in
arpl
adc
or
in
fucomp
sbb
mov
stos
add
test
xchg
dec
out
test
out
decl
decb
into
adc
test
rorb
mov
adc
test
sbb
cmp
push
inc
sahf
pop
movsb
mov
jle
insl
jo
cwtl
mov
decl
scas
sub
shr
adc
les
and
out
bound
lcall
xchg
adc
push
out
enter
and
cmp
pushf
std
incl
jp
dec
mov
repnz
call
sub
jmp
lock
repz
outsl
sub
mov
lcall
sub
in
outsl
adc
jge
dec
into
idivb
repz
jne
stos
mov
adc
pop
jmp
incl
pop
cmpsl
in
cmp
mov
and
lahf
mov
or
addb
incl
fldt
xchg
push
mov
mov
mov
negl
fildl
xorb
ljmp
mov
lds
or
icebp
les
cmp
popa
jae
xchg
sub
aad
sub
push
std
add
jg
or
mov
out
jmp
pop
loopne
cltd
ficompl
cld
lock
stos
loopne
jmp
bound
incl
arpl
cmp
ja
pop
sub
inc
cmp
test
shlb
sti
rcl
popf
jg
ret
out
pop
mov
lea
sub
push
push
loop
pop
std
dec
jno
cmpsb
jge
cmp
into
mov
add
sarl
call
cwtl
ljmp
adc
subl
sbb
decl
testl
aam
in
lcall
xor
add
sub
add
outsl
pushf
scas
push
aad
lret
push
jle
xor
lcall
inc
mov
inc
cmp
fidivrs
imul
cltd
jmp
jle
out
adc
notb
ja
lea
mov
push
hlt
inc
insl
mov
lcall
xchg
or
adc
fidivs
fsubrl
pop
lcall
sbb
outsb
xor
subl
stc
add
add
mov
ret
and
and
arpl
lcall
icebp
jo
repz
cmp
subb
arpl
test
mov
frstor
mov
xchg
int
loopne
test
clc
inc
adc
xchg
or
loop
cs
int
xchg
jecxz
mov
mov
mov
insl
cmc
insb
mov
arpl
loopne
incl
sbbl
adc
or
cmp
jnp
push
jne
call
aam
mov
addr16
js
and
inc
ficoms
pop
mov
dec
imul
repnz
clc
lcall
sub
jno
int
pop
xchg
jmp
int3
or
ljmp
mov
pop
scas
es
mov
sub
and
loope
aas
aad
cmp
mov
cld
addb
mov
loop
ja
decl
mov
mov
mov
pop
pop
mov
cmp
lds
jns
push
jmp
push
pop
xchg
sub
cltd
mov
xor
cltd
pop
pusha
inc
pusha
sub
in
rol
test
into
pop
lcall
pop
xchg
stc
movsb
push
add
xchg
inc
aad
dec
add
cld
mov
mov
lcall
dec
popa
in
xchg
sub
pop
ljmp
inc
scas
sub
jmp
in
cmp
ja
mov
inc
sbb
cmp
dec
add
push
or
frstor
and
jg
lock
mov
mov
push
movsl
fnsave
push
mov
lcall
ss
std
jae
adc
mov
and
loopne
push
fisttps
aad
pushf
mov
sahf
xlat
mov
mov
mov
mov
mov
ljmp
jg
stc
jae
jle
xchg
mov
cmp
sbb
dec
or
hlt
add
call
adc
cmp
add
jl
adc
mov
mov
rcrb
jl
push
jecxz
out
inc
or
or
incl
xor
push
jle
repnz
punpckhdq
inc
xor
clc
dec
dec
lret
jl
frstor
mov
jp
fidivl
hlt
ja
xor
dec
loop
push
ds
xchg
dec
pop
pop
shrb
iret
inc
mov
decl
pop
loopne
fsubrp
lcall
fld
push
sahf
xchg
lret
inc
mov
dec
and
movsl
mov
inc
je
cs
call
cwtl
leave
stos
push
mov
or
int
sub
sar
mov
jae
or
and
loopne
inc
mov
std
jb
mov
hlt
dec
sub
cmpsl
gs
fisttps
sarl
sub
stc
adcl
iret
dec
std
lods
dec
cmp
call
pop
data16
cmp
xchg
sub
mov
mov
add
aaa
int3
push
lahf
xchg
jecxz
mov
inc
xchg
fadd
fsubp
jbe
mov
pop
mov
inc
xchg
jb
loope
loopne
bound
sbb
jmp
pushf
movsl
popf
mov
pusha
lahf
arpl
andl
pop
and
mov
pushf
call
testl
jle
fldcw
push
jl
sbb
jmp
xchg
xchg
aaa
lods
ret
jp
mov
inc
repz
ret
jl
sbbb
jnp
dec
stos
outsb
jns
arpl
inc
pop
push
mov
or
dec
cld
sahf
sub
pop
cmp
ds
fildll
or
pushf
mov
cmp
jns
addr16
sar
push
incl
mov
stos
imul
jnp
sahf
or
pop
incb
and
ljmp
xor
mov
inc
pushf
push
and
lock
jbe
lds
jg
jne
ja
test
aam
js
dec
and
lock
jo
add
ljmp
cs
mov
xor
adc
mov
sahf
cmp
loope
fistl
pop
out
cmpsl
dec
adc
xchg
lods
push
jg
lds
and
cld
xor
sbb
mov
pop
xchg
pushl
mov
shl
js
cwtl
into
and
ljmp
pushl
mov
loope
push
stc
jnp
or
test
icebp
mov
mov
pop
aas
stos
pop
lret
jo
icebp
mov
dec
xchg
loop
call
out
xor
bound
push
imul
push
pop
pop
pop
clc
aas
jo
inc
xchg
repz
mov
push
fwait
arpl
sub
fisttpl
ds
inc
ret
or
pop
xchg
pop
imul
or
fs
lcall
insb
stos
mov
push
popf
and
mov
out
cli
xor
call
incl
std
lock
push
popa
shl
nop
rcrl
mov
inc
cmc
pop
and
mov
pushl
and
mov
xchg
out
and
jp
hlt
leave
out
inc
mov
cltd
push
fildl
push
stos
sti
shrb
xchg
decl
es
cmc
mov
push
gs
or
cmp
pop
test
dec
loope
sahf
xchg
xchg
adc
cwtl
scas
mov
outsb
add
je
shlb
shr
call
inc
push
push
into
push
mov
sbb
clc
or
xor
repz
dec
mov
scas
sub
lcall
pushl
push
add
mov
mov
fdivl
das
mov
popf
cmp
into
popf
jg
mov
pushf
sub
lcall
sub
push
ja
dec
call
scas
mov
in
add
test
cmpsl
inc
mov
mov
cld
push
jecxz
inc
lods
loope
add
xchg
les
adc
mov
inc
std
stos
lret
das
mov
loopne
in
push
ljmp
sub
ret
loopne
daa
pop
inc
les
hlt
stos
pop
les
call
sbb
call
xchg
sarb
jge
xchg
pop
arpl
cwtl
jg
xchg
add
incl
int3
lods
jle
and
pop
scas
rorb
in
sbb
scas
cmp
and
add
fildl
dec
xor
cmpsl
and
sub
adc
mov
mov
addr16
cld
dec
sbb
pop
popa
mov
xlat
test
xchg
and
fcmovnb
or
mov
sub
incl
js
sub
test
pop
fwait
dec
out
mov
adc
dec
jecxz
test
adc
incl
adc
sub
out
movsl
jno
outsb
outsl
sar
pop
pushf
bnd
nop
stos
jne
or
adc
cmp
mov
sub
fldenv
imulb
pop
shll
stos
xor
lcall
push
or
inc
sbb
mov
cmc
call
rolb
int
jmp
xorb
mov
fmull
hlt
jno
mov
fildll
pop
cmp
aaa
cs
push
int
cs
cmpb
sarb
sub
or
lcall
das
ret
in
jb
push
out
aas
test
pop
imul
inc
adc
insb
fstp
and
hlt
mull
mov
mov
ror
in
push
stos
loopne
cmc
rcrl
stos
pop
adc
arpl
and
fisubrs
push
rcr
and
pushf
fists
jmp
xor
dec
pop
cmp
jae
adc
cli
sbb
adc
divb
repz
daa
push
incl
ficompl
xchg
mov
sbb
push
testb
dec
mov
add
std
imul
mov
lea
inc
jne
andl
fildll
ja
mov
or
adc
leave
cmpsb
imul
popf
jle
stos
or
sbb
aam
in
std
lcall
mov
and
lods
jnp
jmp
push
jae
push
sahf
jmp
mov
mov
lods
or
cltd
mov
xchg
jo
scas
fcoms
mov
cld
lret
lret
into
dec
je
popf
mov
imul
jg
sub
add
dec
ret
adc
push
call
mov
in
les
inc
sub
lret
jns
mov
sub
scas
mov
xchg
adc
mov
outsl
subb
push
in
xchg
and
or
mov
xorl
out
daa
jp
repz
mov
xchg
fadds
mov
push
inc
jle,pn
cmp
dec
std
dec
pop
or
jno
mov
incl
and
imul
pusha
ret
cli
adc
mov
push
and
int
daa
mov
test
sbb
out
das
sub
jg
sub
sbb
or
ficomps
jp
and
sub
rcrb
mov
out
jl
call
pop
sub
out
mov
and
lcall
cmp
in
aas
out
cs
dec
or
sub
test
decl
xor
out
sti
out
divb
popf
aaa
repnz
mov
mov
and
cld
dec
or
test
in
out
mov
clc
insl
and
jge
mov
fmull
pop
je
leave
or
lods
inc
iret
insb
pusha
popf
notb
inc
push
mov
icebp
ljmp
or
fwait
adc
movsl
or
fidivrs
jmp
sbb
test
add
aas
xchg
repnz
es
jb
xchg
add
pushl
popf
lret
filds
sub
xchg
or
mov
pop
push
scas
adc
dec
xor
add
cmp
adc
sbb
xchg
decl
ja
enter
mov
mov
cmp
jmp
push
pushf
out
daa
jmp
jge
jle
ret
xor
fcmovnbe
mov
cmpsl
and
hlt
pushl
fistl
arpl
shlb
ret
dec
dec
dec
int3
sub
rorb
sub
pop
sub
sub
and
and
addl
fimull
cmp
call
or
add
cmc
and
in
sub
les
loope
mov
mov
mov
jp
or
das
loope
aaa
mov
and
dec
pusha
jg
adc
cld
push
pop
cltd
push
fistl
lock
call
int
jmp
outsb
repnz
xor
push
lret
sub
mov
cwtl
cmp
and
addr16
xlat
inc
test
mov
arpl
jecxz
test
jne
shll
lcall
xor
test
shl
and
stc
push
or
xor
dec
push
inc
mov
mov
jb
call
clc
adc
fwait
xor
or
decl
aaa
stos
out
imul
rorl
and
mov
and
cld
outsb
adc
in
mov
sbb
shll
jmp
jg
ljmp
or
cmp
push
imul
pop
les
jmp
cs
xor
xor
lea
fdivs
xchg
imul
pop
dec
js
out
mov
or
mov
and
fsubs
cmp
inc
mov
ljmp
jnp
test
addr16
sbb
jmp
ret
jb
lods
enter
pop
dec
pop
mov
cmpsb
sti
shlb
mov
pop
outsb
xor
fdivr
sbb
jns
and
cmp
sub
inc
cld
pop
rolb
or
mov
sub
scas
cli
jg
push
imul
lods
mov
inc
fbstp
mov
sbb
mov
test
xor
aas
sbb
rorb
filds
push
cmp
mov
and
call
mov
add
lcall
hlt
cmpsb
jns
and
push
inc
xchg
pop
push
sbb
mov
pop
insb
cli
sub
mov
jg
stos
pushf
imul
ja
push
cvtps2pi
cld
leave
cmc
mov
gs
cmpl
cli
repz
enter
scas
sarb
fincstp
shll
mov
jbe
lcall
mov
lds
xor
fwait
and
push
jne
ret
lret
sarl
jnp
dec
es
adc
and
jmp
inc
dec
adc
fcmove
push
fmull
cli
jmp
jae
sub
xchg
and
pop
daa
sarb
cld
fmul
push
xchg
inc
icebp
rorl
inc
dec
dec
and
sar
and
cmp
call
cmpsb
push
xor
jl
retw
xor
xchg
fcmove
adc
data16
incl
sub
add
cld
std
insb
fs
lods
mov
cmpsb
mov
filds
bound
mov
int
fs
jmp
pop
subb
loope
mov
mov
fists
mov
push
inc
jge
subl
add
jns
xlat
jne
in
in
call
test
bound
xorl
ret
es
xchg
imul
ljmp
push
mov
mov
loopne
sub
out
push
fisubrl
inc
iret
cmp
call
leave
push
pop
pop
test
mov
fdivs
aad
out
lret
bound
add
femms
cwtl
icebp
mov
mov
push
std
dec
sahf
cmpsb
cli
xor
xor
jne
addr16
or
jg
popf
xchg
mov
lcall
xor
inc
aad
sub
xor
inc
out
andb
mov
mov
xchg
add
lock
pop
movsb
xchg
out
mov
xor
mov
xchg
inc
push
mov
cli
ja
leave
cmpsl
mov
fwait
call
daa
sbbl
dec
push
ud0
lcall
mov
sub
adcb
sub
sub
call
test
arpl
jmp
sahf
push
adc
int
mov
mov
xchg
sbb
jp
leave
scas
pushl
pop
dec
adcl
sbb
not
push
mov
fwait
ret
xor
imul
hlt
pushf
jg
sbb
cld
or
clc
pushl
adc
add
test
call
and
pop
adc
dec
and
dec
pop
push
sub
pop
ja
xor
call
dec
out
aam
or
dec
jb
mov
mov
push
jbe
inc
pushl
dec
stos
lahf
cmp
mov
test
mov
xor
faddp
xchg
push
push
ljmp
lea
pop
sbb
mov
ljmp
mov
lcall
call
or
cmp
imul
pop
addb
xchg
and
inc
xchg
dec
daa
aas
ja
sub
mov
mov
xchg
inc
rcr
test
xchg
or
bound
mov
add
dec
inc
mov
into
sbb
push
jmp
stos
cld
push
dec
dec
call
adc
sbb
push
mov
in
std
xchg
test
adc
fldl
sbb
call
sbb
ret
dec
and
insl
cmp
lcall
mov
loop
and
sub
fsubs
test
cltd
pop
lock
or
pop
andb
ret
in
fwait
in
dec
imul
pushl
in
ja
jbe
mov
mov
push
xor
or
jl
add
cmpsl
cmp
addr16
mov
push
fcoml
out
aad
outsl
loope
shlb
cld
inc
fldl
xor
js
adc
dec
cmpsb
mov
mov
stos
cli
jns
nop
inc
add
lret
inc
jg
call
jno
jle
leave
movsl
mov
pop
sub
lahf
imul
cmp
push
inc
mov
leave
arpl
xchg
inc
xchg
test
cmp
push
xchg
pop
mov
dec
loope
jmp
jle
adc
inc
mov
cli
or
or
daa
or
pushl
test
leave
dec
cmpsl
gs
cwtl
push
insl
push
push
xchg
rclb
shll
cmp
hlt
dec
cmp
lahf
call
sub
sub
std
ljmp
push
shl
fwait
cmp
jb
dec
imul
loope
js
mov
and
mov
jge
cmp
jmp
pop
inc
call
push
scas
sub
xchg
out
loope
inc
xor
adc
fs
decl
daa
xchg
adc
mov
xchg
adc
and
dec
pop
aad
add
push
adcb
inc
addr16
jl
loop
cmovle
cmp
mov
cmp
xchg
adc
scas
mov
pop
loop
ljmp
xchg
pop
cltd
add
jecxz
sahf
in
mov
cmp
imulb
lcall
cmp
inc
mov
dec
icebp
mov
pusha
mov
repz
ljmp
mov
call
in
je
mov
push
pop
arpl
loopne
sbb
filds
push
lock
pusha
push
sahf
lods
daa
xor
mov
jg
xor
add
movsb
into
stc
mov
arpl
mov
push
adc
lds
sarl
mov
pop
movsb
icebp
repnz
shl
jnp
dec
movsl
icebp
xlat
call
call
add
add
lock
sub
cmpsl
out
xchg
mov
ss
movsl
xchg
push
ret
and
and
daa
xor
lcall
cs
cmp
hlt
inc
sbb
ss
insb
rolb
xchg
jg
xorl
mov
mov
adc
push
and
les
add
xor
in
add
incl
mov
push
lcall
daa
out
pop
nop
jg
pop
and
xchg
push
dec
jae
and
popf
push
cmp
lret
lods
add
push
sarb
add
mov
pushf
movsb
fiadds
cli
out
incl
or
pop
jl
bound
cli
sarb
roll
push
fcmovnb
sahf
data16
xchg
mov
cmpsl
int3
enter
ds
xor
xor
xchg
fcomip
mov
push
std
jmp
mov
ljmp
aam
cmpsb
xor
jb
cld
push
push
ljmp
ljmp
cmpsb
jmp
popa
mov
mov
mov
rorb
cmp
adc
fcoms
je
mov
xchg
push
lret
jg
out
shrb
mov
push
stos
mov
pop
dec
sub
les
inc
cmp
mov
in
sbb
fsts
cmc
push
std
lret
dec
mov
mov
out
lcall
sub
scas
jl
lods
mov
add
xchg
data16
mov
or
fbstp
sbb
sub
xchg
mov
fwait
xor
cmp
cmpsl
push
shr
adc
pop
mov
jge
pop
add
mov
sub
mov
test
mov
dec
sbb
and
inc
test
aaa
mov
fists
xchg
loop
cmpb
loope
loop
inc
hlt
and
inc
ds
leave
js
divb
decl
in
jo
cmp
test
mov
push
sub
outsl
pop
dec
pusha
je
gs
mov
lods
dec
hlt
imul
enter
or
inc
scas
xcrypt-ctr
cmpsl
sahf
callw
cmpsb
aam
mov
pushw
add
or
or
out
push
or
xor
test
cmp
pop
nop
imul
aam
mov
cmpb
adc
mov
ljmp
jb
inc
sbb
data16
adc
das
sub
cmp
pop
pop
sbb
ret
push
adc
xor
inc
scas
push
mov
das
push
mov
cwtl
pusha
adc
inc
loopne
call
cmp
cmc
ror
iret
push
mov
lea
lcall
and
repz
xchg
push
wrmsr
sbb
cli
jle
pop
pusha
sub
ja
mov
jg
out
cwtl
or
ret
pop
test
mov
xchg
mov
decl
jae
add
sub
jge
mov
xor
sbb
pop
adc
mov
repz
jg
push
jb
xchg
sbb
pop
add
push
sbb
mov
int
cmp
test
lcall
and
jns
push
fstpl
mov
scas
mov
mov
mov
imul
rcrb
fstl
mov
push
cmc
int3
mov
int3
lret
popf
lahf
fistpll
mov
mov
lahf
sbb
js
jecxz
sub
and
or
pop
ljmp
out
sbb
mov
scas
pop
mov
jl
mull
idivb
inc
rorl
add
jo
aaa
jno
decl
lock
jle
mov
inc
outsl
cmp
test
fwait
mov
xchg
jge
xchg
jge
mov
jno
pop
cltd
mov
sti
test
adc
clc
ljmp
sahf
adc
pop
cltd
and
lods
push
movb
pop
or
incl
mov
push
cmp
lcall
xchg
and
dec
int3
sbb
outsl
mov
cmp
jl
jbe
mov
xor
lcall
mov
bound
adcl
fidivrs
xor
xchg
jl
inc
mov
cltd
or
jg
add
divb
les
mov
add
rorb
ret
je
mov
iret
clc
xchg
push
sub
das
or
cmc
pop
mov
pop
mov
inc
inc
pusha
and
inc
inc
popa
mov
inc
or
mov
push
aad
loopne
cs
pop
adc
addr16
imul
jo
aad
jno
icebp
push
add
mov
jg
test
jmp
out
mov
jg
xor
test
scas
xchg
mov
daa
sbb
sbb
pop
icebp
incl
sahf
outsb
mov
repnz
daa
mov
loop
mov
lods
push
xchg
ret
pop
inc
rcll
adc
mov
clc
sbb
mov
inc
jecxz
mov
incl
ja
mov
inc
rcrb
pop
adc
inc
arpl
and
or
iret
sbb
repz
jg
or
push
dec
mov
pusha
sbb
decl
cwtl
and
or
lcall
or
add
jbe
repz
dec
ret
sub
incl
pop
xor
fldenv
sbb
in
dec
or
sbb
in
lcall
push
mov
dec
or
mov
and
fisubrl
addr16
ja
lcall
ret
lcall
inc
pop
push
mov
mov
or
cmp
pop
out
mov
sub
mov
mov
filds
xchg
mov
jg
mov
nop
cmp
stos
fwait
insl
fdivrl
mov
sub
sub
incl
or
gs
adc
push
daa
xchg
dec
inc
jp
sbb
ja
jp
pop
mov
lcall
push
ficomps
add
jbe
outsb
out
aas
cmp
pop
lock
push
push
jmp
je
in
into
or
jb
pusha
mov
fadd
jmp
aaa
repz
lahf
jl
dec
mov
sahf
cli
adc
sarb
sub
call
shrb
xchg
js
mov
push
and
fwait
xlat
cli
popf
mov
aas
mov
mov
or
xchg
pop
shlb
lcall
push
mov
cld
cmp
jp
sahf
addr16
cltd
push
cltd
gs
mov
xor
fcmovne
gs
scas
mov
pop
mov
and
out
xor
stos
lods
fbld
jo
sbb
decl
leave
movsb
add
lods
mov
mov
jo
or
push
aam
pushl
push
ss
sub
negb
xchg
dec
in
mov
xchg
test
push
push
mov
and
out
pop
jns
mov
test
inc
leave
stc
and
mov
pop
movsl
cmp
jmp
movsb
js
sbb
push
pushf
leave
bound
dec
dec
leave
aam
adc
test
cmp
fcoml
add
cmc
out
ror
adc
inc
xchg
jmp
cvtpi2ps
mov
adc
xor
aam
fstpl
std
pushl
rclb
lcall
mov
jg
stc
dec
xchg
nop
insl
loopne
mov
ret
orb
jg
mov
pusha
bound
andl
arpl
jg
je
mov
out
xor
ljmp
into
fmuls
addr16
lcall
pop
addr16
mov
out
data16
mov
cmp
stos
mov
and
je
clc
nop
cli
push
popf
fcoml
dec
aad
cltd
sar
in
movsl
pop
push
and
test
dec
mov
fcomip
call
cmpsb
sub
outsl
daa
mov
push
out
jmp
push
sbb
jmp
cmpb
jge
ja
push
xor
mov
pop
lods
sub
sub
sbb
std
mov
cmp
sub
xchg
xchg
sub
jbe
and
andl
addr16
adc
clc
cld
stos
pop
inc
jnp
add
jmp
fisubrs
dec
aam
pop
mov
std
add
pop
iret
cwtl
pushf
div
mov
out
mov
lods
ljmp
clc
mov
add
fstpt
jbe
out
out
inc
out
mov
call
movsb
lock
fwait
cmp
shl
mov
sbb
sbb
movsb
jmp
dec
repz
mov
cmp
aas
add
sahf
lahf
mov
jmp
mov
lods
decl
out
shll
jp
dec
mov
aas
mov
adc
jg
lock
sub
jo
clc
push
ss
jmp
mov
jmp
jbe
mov
iret
sahf
add
rcll
mov
sahf
idivl
lods
or
sub
shrb
ljmp
xchg
aam
iret
mov
push
jmp
or
add
vpunpckhqdq
movsb
adc
cmp
add
divl
dec
xchg
popf
dec
mov
int3
insb
push
jmp
sbb
mov
rcll
in
insb
pop
xchg
ljmp
hlt
jecxz
cmp
xchg
pop
ds
jns
pop
push
je
mov
fildl
mov
nop
test
xorl
lcall
cli
pop
clc
jl
rcrb
out
xchg
outsl
mov
addr16
loop
sub
jg
push
insb
pop
and
mov
orb
or
inc
scas
mov
inc
xchg
mov
adc
and
decb
les
cmp
adc
out
lcall
popf
imul
jae
pop
fs
addr16
out
push
int
loopne
int3
and
mov
adc
decl
lcall
dec
push
mov
outsb
lcall
imul
scas
nop
repz
sbb
sahf
ja
pop
pop
enter
lcall
adc
dec
push
pop
fadds
dec
inc
mov
std
jg
jns
icebp
sti
xchg
cld
jmp
fistps
in
movsl
daa
pop
mov
scas
imul
fbld
push
push
rcrl
out
cmpsb
nop
jmp
subb
inc
inc
ror
dec
sbb
andl
xor
push
rolb
out
pop
push
cli
decl
jg
test
push
jno
data16
mov
mov
push
mov
adc
mov
in
mov
sbb
mov
out
or
sub
lods
lods
xchg
daa
and
jae
sbb
push
xor
decl
dec
clc
pop
mov
cmp
cmp
rcrb
mov
push
cmp
js
fisubs
cli
lret
xor
ja
adc
push
insb
push
loop
or
sub
test
ret
or
addr16
out
xchg
loopne
incl
ficompl
imul
repz
add
pop
cmp
lahf
stc
std
push
jle
and
xor
xchg
push
add
jle
shrd
cmc
repz
dec
pushf
xchg
jecxz
dec
lahf
pop
test
movsb
sti
out
js
clc
aaa
std
push
pushf
pop
js
subb
popa
or
dec
cld
lret
adc
call
mov
sub
in
mov
adc
jg
lods
ljmp
pop
cmp
xor
subb
push
jbe
xor
xor
adc
nop
mov
xlat
xor
or
loopne
cmpsl
cmp
ret
dec
mov
xor
lods
sbb
push
loopne
rcrb
cmpsb
push
and
lods
insb
gs
xor
sti
jnp
daa
movsl
inc
das
sbb
jbe
lock
jmp
dec
cmp
fwait
out
mov
inc
lods
and
scas
mov
push
sbb
push
insb
movsb
lock
push
pop
add
nop
imul
mov
and
ljmp
xchg
loop
cmpsl
mov
xor
out
out
xlat
cltd
mov
inc
sbb
or
sbb
dec
in
mov
pop
movsb
lahf
jnp
out
cmpsl
es
mull
adc
pop
call
cmc
lcall
outsb
mov
mov
into
push
jl
or
jmp
xor
sub
stos
ljmp
mov
fadds
bound
mov
mov
mov
push
cwtl
pop
mov
aam
pop
mov
cli
mov
out
push
xchg
clc
sbb
mov
mov
jnp
mov
push
in
and
jns
lock
scas
cli
out
dec
jge
mov
pop
cld
mov
mov
sbb
jge
insl
movsb
outsl
xchg
rorl
pop
dec
pop
mov
or
std
clc
or
movsb
arpl
orl
out
push
call
lcall
mov
movsb
push
push
fsub
ss
sub
inc
push
ljmp
lock
sub
mov
pop
pop
sbb
repnz
jno
inc
icebp
inc
jnp
call
inc
test
push
cmpsl
int
mov
xlat
scas
xchg
outsl
push
fwait
push
sub
test
lret
enter
pop
pop
sar
call
mov
stos
mov
inc
shll
fcompl
mov
aaa
in
fisubrl
ljmp
mov
push
sub
xlat
jnp
or
cmc
int
inc
divl
fstpt
ja
jnp
ret
das
outsb
je
call
loopne
sti
pusha
cmp
cmpsl
push
mov
aam
xchg
addr16
sub
lcall
mov
inc
jmp
mov
fidivl
lds
mov
fwait
fs
stc
inc
pop
lock
pop
mov
adc
scas
ss
and
call
es
ljmp
pushl
jns
push
xor
test
subl
jecxz
xlat
add
pop
fnstenv
push
clc
fnsave
push
mov
and
ret
ficoms
into
xor
and
jmp
xchg
or
rclb
push
stos
repnz
hlt
fisubrs
test
adc
push
ret
mov
lds
imul
lods
xchg
incl
xchg
cmp
fsubl
cld
loopne
dec
cld
lods
cmp
jge
pop
mov
in
loop
sub
cld
mov
repnz
test
inc
shrl
pop
pop
pop
les
pushf
push
lcall
xchg
jle
xchg
adc
leave
js
pop
inc
cmpsl
cmp
ljmp
lret
js
incl
pop
and
cmp
std
rolb
in
fwait
or
pop
inc
jl
add
psrlw
call
sub
lahf
jecxz
push
lcall
aad
mov
pop
and
inc
jmp
imul
sbb
adc
sub
cmpsl
in
cmpl
fbld
fsubs
cld
mov
lret
mov
mov
icebp
aas
mov
mov
icebp
decl
repnz
xchg
jmp
xor
inc
arpl
push
xor
incl
jg
or
pop
jp
push
jmp
inc
cmc
push
in
xor
lret
nop
out
subb
sar
pusha
std
jnp
jne
daa
mov
pop
inc
pop
int
cmpsb
push
out
pushf
lcall
jg
mov
sbb
cmpsb
out
out
and
mov
and
pusha
dec
mov
dec
xchg
push
dec
push
hlt
loopne
aad
push
into
fistps
es
jmp
je
pushl
sub
adcl
leave
push
movsl
dec
dec
add
pop
je
mov
paddsb
lcall
cmp
add
pop
sub
pop
decl
cmp
push
dec
pop
int3
xor
mov
outsb
mov
dec
jle
lahf
xchg
stos
sahf
cmp
mov
add
push
cmc
push
xor
sbb
aas
inc
inc
add
fists
inc
ds
stos
movsl
iret
jge
pop
call
out
out
adc
mov
incl
mov
jmp
fidivs
jns
push
sbb
out
ljmp
inc
aaa
mov
pop
sti
setg
fucomip
ret
dec
jo
xchg
cli
popa
dec
js
cmpb
std
sbb
pop
daa
fxch
test
addr16
push
mov
loop
cmp
bound
ljmp
lea
xchg
mov
cmp
pop
lds
mov
sbb
mov
push
testl
jo
inc
mov
push
ret
xor
jg
mov
nop
jo
mov
sub
clc
out
subb
xchg
mov
aam
cli
inc
push
leave
push
dec
or
popa
pop
dec
nop
cltd
testl
fldcw
notb
subb
jbe
fldt
jbe
xor
mov
int3
lods
jnp
mov
cltd
cmp
popa
jg
mov
decl
push
mov
xor
jns
lods
scas
popf
fs
shll
cmc
ljmp
js
in
ljmp
loope
js
je
mov
cmp
xor
loopne
lock
jg
les
test
sbb
movsb
push
aaa
inc
je
call
cwtl
int3
inc
js
add
leave
lds
xor
ja
dec
sub
test
das
or
cld
call
orb
pop
mov
mov
pop
pop
lret
dec
in
jle
or
push
sti
and
cmpsb
or
push
lret
shll
dec
and
pushl
sub
in
lods
sbb
pop
int
jbe
or
sbb
popf
scas
mov
ror
mov
fisttps
lods
mov
shll
adc
inc
arpl
ss
xor
fcomi
sbb
mov
mov
jmp
movsb
or
push
lret
or
sub
add
add
adc
push
clc
inc
adc
adc
out
add
call
roll
and
jae
cmp
lahf
loop
push
hlt
test
mov
data16
jg
or
jge
outsl
lahf
sahf
into
shrl
jp
push
iret
jo
insb
cmpsb
mov
or
fcomip
jmp
cwtl
clc
scas
stos
jmp
fstpt
and
addr16
jnp
push
mov
pusha
jne
mov
xchg
fdivs
je
cmp
cmc
mov
inc
ret
sub
decl
cmc
xchg
add
mov
out
fiadds
ret
mov
jmp
outsl
nop
jmp
mov
adc
push
mov
pop
inc
movsl
push
mov
fs
adc
decl
std
mov
sub
sahf
leave
cmp
add
fsubrp
mov
xchg
lock
or
push
cmp
pushl
imul
rsm
mov
push
insb
xor
lahf
nop
popa
dec
loope
scas
loope
decl
fs
or
mov
es
or
shlb
mov
ret
popf
icebp
in
mov
jmp
das
inc
movsl
scas
ds
mov
adc
mov
mulb
or
and
jecxz
xor
inc
mov
mov
std
pop
sbb
sub
inc
pop
fs
and
pop
ds
add
mull
ljmp
cmp
mov
push
xchg
cmp
jo
fldln2
dec
iret
push
decl
jo
mov
repz
mov
pop
and
jmp
loop
or
sahf
or
cmpsl
inc
pop
push
das
lock
je
pop
decl
outsl
les
test
push
int3
les
and
push
out
xchg
cmp
loope
incl
test
adc
test
stos
pushf
aaa
clc
bound
sub
out
cmpsb
icebp
imul
stc
nop
je
sti
inc
pop
lahf
bound
inc
add
dec
loope
ss
xchg
out
sub
xchg
xchg
les
incl
in
lods
or
xorl
dec
in
jbe
adc
jp
std
call
jo
add
fsts
lret
loop
out
mov
adc
and
ljmp
and
in
je
sahf
stos
cmc
push
sub
test
pop
in
inc
pop
movsb
sub
int3
jmp
data16
mov
mov
mov
fs
fldl
data16
mov
mov
adc
pop
ljmp
cmpsb
loope
xchg
or
and
rcrb
push
fcomip
sub
repnz
mov
push
jnp
xchg
shll
jmp
or
mov
int3
cltd
mov
xor
orb
je
add
sbb
stos
add
jg
jl
and
pop
pop
int
and
jno
jg
enter
ds
das
rolb
call
mov
aam
mov
mov
xor
or
cmp
push
mov
push
out
pop
sahf
jle
cli
cmp
push
sbb
lea
mov
sub
sbb
mov
pop
pop
pop
mov
mov
mov
dec
or
aas
cmpsl
mov
stc
fdivs
lock
and
enter
cmpsb
xor
sti
fwait
cld
jecxz
add
pop
decl
andb
scas
xchg
in
pop
ja
stos
push
mov
les
rclb
xchg
popa
mov
loop
lods
sub
js
ja
clc
push
fidivl
out
mov
outsb
std
std
adc
sub
mov
dec
dec
pusha
xchg
pop
and
sbb
or
inc
dec
bnd
lock
fisttpl
inc
ss
movsl
insl
mov
ret
pop
imul
add
mov
jg
test
shlb
loope
mov
jg
in
in
mov
pushl
mov
cmp
xchg
dec
cli
pushl
jecxz
iret
movsb
adc
xrelease
das
clc
jmp
pop
pop
jns
mov
jp
mov
cld
ds
lods
push
push
sbb
add
jle
addr16
rcrl
xchg
jb
lods
dec
jns
xchg
aam
push
hlt
sub
jmp
pop
sti
cmp
repnz
cmpb
mov
loopne
mov
sar
xor
filds
mov
jbe
shlb
incl
loopne
sub
dec
cmp
shlb
push
add
xchg
negb
push
add
ljmp
enter
pushf
or
test
movb
dec
cld
mov
and
in
ljmp
aas
adc
int3
in
iret
and
not
sbb
jge
icebp
lods
mov
in
or
call
decl
popw
loope
dec
cmp
push
inc
mov
enter
jmp
dec
out
inc
pop
lcall
test
rorb
in
lods
cmpl
pop
ret
sbb
jo
faddl
enter
ljmp
jmp
inc
lcall
paddd
pop
and
or
push
loope
mov
js
push
lods
pop
imul
lea
in
mov
pushl
sub
fbstp
xor
fld
aam
test
lahf
dec
jg
fdivr
cmp
jg
jg
pop
inc
rcrb
fsubl
call
mov
or
lock
aaa
shrb
popa
xor
pop
cmp
sub
popf
adc
clc
and
fcomps
sub
icebp
ret
insb
fstpt
pop
cmp
fucomp
and
enter
call
stos
pop
cmpsl
mov
fnstsw
pushf
cwtl
rol
popf
xchg
in
insl
mov
decl
fs
lcall
pusha
fisttps
mov
xchg
outsl
sti
pop
jecxz
daa
pop
xchg
hlt
mov
icebp
inc
sub
hlt
sbb
push
mov
xchg
inc
mulb
lcall
pop
xchg
cmp
add
lea
scas
ja
insb
pop
push
sub
add
daa
incl
cli
sub
sbb
xor
pop
mov
fisubrl
aaa
cmp
cmpsl
cmp
test
jecxz
mov
inc
scas
stc
pushf
test
and
and
mov
and
call
cmp
sub
jg
cmp
in
loopne
ja
inc
jecxz
ljmp
sbb
bound
push
and
sbb
inc
mov
sbb
mov
pop
into
in
or
inc
rcl
push
addr16
out
ljmp
cmp
cmp
loopne
and
sbb
pop
popa
repz
xorl
cld
incl
xchg
aam
orb
jae
out
dec
fs
lock
imul
int
jnp
cmp
in
jecxz
pushl
jb
repz
ret
xor
jnp
fwait
mov
decl
mov
clc
movsb
fwait
daa
and
push
jecxz
cwtl
call
pop
dec
lock
xor
negb
fprem1
lcall
pop
adc
dec
cs
pushl
inc
inc
das
out
sbb
ds
add
mov
in
ja
sub
jg
pop
mov
inc
loopne
mov
fldz
in
sahf
xor
cli
adc
inc
icebp
fsts
ret
sbb
mov
mov
jge
loopne
test
mov
fsubrs
decl
aad
and
xlat
adc
dec
jnp
aaa
rcrl
xor
ljmp
jecxz
sbb
mov
push
sub
addr16
rcl
call
cwtl
push
pop
sbb
fsubl
and
sahf
or
or
dec
cmp
stos
lret
inc
sbb
pop
lods
inc
bound
jnp
or
lcall
imul
cmp
addr16
outsl
lods
aam
test
scas
outsb
inc
cli
stos
mov
xchg
xchg
inc
out
test
jg
add
xchg
xchg
lret
stc
mov
ret
stc
jb,pt
in
insb
sub
cld
ljmp
cli
adc
movsb
aam
leave
lret
inc
mov
rep
pop
push
sbb
mov
jle
jns
or
mov
movsl
xlat
xchg
mov
je
mov
sbb
jnp
lock
jae
sbb
jg
in
xlat
movsl
cmc
inc
push
dec
test
push
push
leave
je
or
int
sub
stos
inc
cmc
jne
ljmp
xor
dec
inc
push
dec
xor
addb
sub
int3
ret
icebp
rcr
xchg
push
mov
mov
lods
sbb
push
xlat
outsl
mov
rorl
fstp
xor
mov
inc
cmp
mov
data16
mov
ljmp
inc
cwtl
and
into
mov
push
push
add
rcl
idivl
mov
pop
cld
pushl
mov
cmpsb
andb
pusha
dec
sbbl
cld
xor
jne
dec
jmp
fildl
stos
and
or
push
jb
mov
adc
dec
jp
or
mov
mov
or
test
sbb
ret
dec
sarb
pop
fs
sbb
inc
push
scas
ret
incl
bound
adc
add
imul
inc
test
mov
jmp
pop
mov
decl
jb
cmp
xor
cmp
insl
addr16
or
arpl
cmp
ljmp
call
mov
inc
mov
lret
cmp
out
mov
sar
jmp
cwtd
bound
scas
xchg
mov
fimuls
repz
cltd
nop
jg
and
push
fstl
mov
std
mov
xchg
iret
ljmp
nop
mov
in
in
adc
pusha
mov
pop
fdivrs
pop
pop
xchg
ljmp
repnz
dec
sahf
mov
out
xchg
outsb
or
mov
xchg
lret
clc
sub
int3
aaa
ss
mov
insl
pop
pop
repz
and
ja
adc
and
xchg
cmp
loope
jmp
inc
roll
ficoms
sub
ja
repnz
imul
std
dec
ljmp
xor
andb
ret
jg
test
fbstp
int3
imul
mov
psllw
mov
adc
cmp
orb
cmp
pop
fnstcw
xchg
jae
dec
stos
mov
inc
mov
inc
ss
or
inc
outsb
mov
sbb
jae
jmp
add
sarl
int3
gs
jae
adc
pushl
ja
or
add
xchg
jecxz
jg
mov
shrl
cs
fbld
je
cmpl
les
sub
mov
add
mov
push
inc
test
out
inc
xor
out
dec
mov
loope
insb
popa
repnz
popa
imull
pop
push
icebp
cmp
test
repnz
cmpsb
sbb
cltd
pop
popa
daa
in
rcrb
and
mov
jbe
cmp
inc
movsl
mov
or
insb
lahf
dec
decl
pop
or
les
out
xor
sbb
add
jmp
jo
icebp
out
and
pop
mov
or
addr16
movsl
pop
shll
xor
clc
incl
adc
fnstsw
cld
xlat
adc
dec
and
xchg
stos
filds
loopne
mov
jmp
mov
sub
andb
fnsave
cld
cmp
jmp
xchg
lods
dec
clc
or
pop
data16
ja
idivb
push
mov
iret
pushl
mov
cld
and
stc
xchg
ljmp
mov
loope
xor
in
insb
cli
cmpsb
and
rol
fcmovu
jge
mulb
inc
es
sub
xor
push
stc
cmp
pushf
sbb
lods
lcall
add
rcrb
pusha
fdivs
lock
adc
xor
fcomip
sbb
or
movsl
int
pushf
imul
mov
ja
rcll
pop
inc
mov
sbb
cmp
inc
adc
mov
shlb
fdivl
pop
add
out
pop
push
mov
out
test
pop
jp
dec
push
es
lock
in
fcomip
inc
mov
push
lds
pop
sbb
out
cli
filds
cld
mov
stos
push
les
scas
clc
ss
call
mov
mov
sbb
ja
repz
ljmp
enter
xchg
mov
and
sub
sbb
mov
idiv
in
decl
push
push
int
rcrb
movsb
inc
aas
int
cmp
into
or
xor
call
movsl
adc
xor
mov
ja
and
mov
fbld
js
pop
inc
rorb
jns
push
rcl
dec
xor
mov
addr16
mov
mov
jb
jg
cmp
sub
mov
add
lock
movsb
jmp
in
xor
or
hlt
mov
ljmp
jecxz
in
popf
xor
or
mov
imul
mov
repnz
inc
sbb
xchg
mov
sbb
xchg
aas
out
jp
fwait
pop
movb
push
or
fmull
std
and
dec
push
mov
cmp
popf
mov
sbb
xor
fisttps
xor
jge
inc
or
fists
add
inc
sbb
enter
sub
in
mov
js
mov
decl
stc
mov
cmp
test
inc
mov
fcmovnbe
mov
inc
cld
cmp
push
jo
leave
in
arpl
mov
sub
loope
stc
jl
out
inc
sahf
f2xm1
sbb
test
test
aad
sub
dec
decl
imul
jo,pn
jno
incl
ret
js
ret
push
mov
dec
jle
pop
cld
repnz
jg
mov
cmp
ljmp
mov
test
pop
imulb
scas
xchg
and
inc
xchg
test
icebp
lcall
inc
lock
sub
cld
movsb
xor
es
test
push
shr
arpl
loope
aas
xor
sub
std
cwtl
lods
adc
jle
repnz
mov
inc
outsb
into
kaddw
testb
sub
test
scas
sbb
nop
cli
outsb
ja
lret
xchg
jge
or
ljmp
fldt
enter
scas
adc
jae
pop
mov
imul
push
rolb
incl
stos
ljmp
or
sbb
sub
xor
jae
lods
into
decl
test
inc
jecxz
ds
adc
imul
lods
mov
rorb
arpl
rclb
mov
jl
aad
gs
sbbb
adc
mov
not
push
or
ja
mov
cmp
cli
incl
in
ss
icebp
inc
adc
jne
xchg
test
sbb
call
or
inc
sub
sbb
jns
push
pop
jge
pop
xor
aad
jmp
sub
movsb
push
push
jne
insl
les
pushl
shrb
mov
insl
je
adc
loop
sub
adc
push
sub
dec
mov
call
in
popf
aam
jg
in
outsb
sub
dec
out
or
data16
fdivrp
jmp
imul
cli
repz
adc
fcmovu
aam
cmp
mov
cltd
data16
out
cld
jge
sub
push
sahf
stos
lret
imul
inc
mov
and
mov
sahf
or
dec
sbb
popf
xchg
mov
sbb
push
fnsave
lea
lds
stc
and
jmp
loope
sbb
xor
aaa
sub
lret
inc
inc
filds
ds
fnstcw
mov
cmp
out
mov
lcall
and
notb
sarb
pushf
mov
xor
mov
shll
les
inc
mov
orb
cmpsb
sbb
pop
inc
inc
xor
inc
adc
in
ljmp
adc
fldcw
mov
or
xchg
sub
adc
jo
or
aas
xchg
incl
inc
movsl
aam
mov
inc
sub
popf
cmc
lds
loop
ds
aas
xor
stos
mov
fisubl
int3
xor
mov
addb
js
jns
jnp
adc
and
bnd
decl
push
fidivrl
xchg
adc
inc
or
inc
sbb
lcall
std
inc
gs
addl
and
pop
fcmovb
pop
psllw
dec
xchg
push
xchg
aaa
mov
aaa
sub
jno
fnstenv
mov
lea
addl
out
xchg
fld
sar
decl
or
cmpsl
or
dec
lret
pop
xchg
mov
jl
and
incl
insl
lea
rcl
data16
jo
xchg
in
cmpsb
leave
pop
push
les
jmp
push
adc
aaa
or
pop
pop
jns
stos
dec
fbld
out
xchg
inc
nop
inc
mov
xorl
jns
or
shll
fwait
int3
scas
sub
mov
call
lods
aam
mov
jg
add
dec
dec
rorb
and
pushl
ds
loope
inc
or
xchg
push
inc
ret
gs
outsl
xchg
pop
rep
decl
rol
mov
jl
mov
repnz
xchg
test
xor
sub
call
mov
imul
fimuls
dec
arpl
cmp
loop
mov
add
in
push
ja
inc
xchg
mov
jns
lea
or
call
inc
cmpsb
into
aas
loopne
lahf
in
sbb
inc
push
sbbb
in
sbb
ja
adc
mov
mov
jb
xor
int
pop
push
mov
repnz
hlt
icebp
jae
xlat
fcmovnbe
data16
mov
ret
insb
push
xchg
mov
fwait
addl
cmp
mov
test
js
data16
mov
shrl
and
fldl
cli
cmp
bound
divl
pop
inc
jmp
push
insl
pop
rclb
in
add
mov
push
inc
inc
adc
mov
mov
call
pop
xchg
push
loopne
lret
xchg
add
and
sub
mov
fs
std
dec
hlt
sbb
mov
scas
loopne
sbb
pop
jg
cmp
jge
pop
mov
cmp
fcomip
aaa
bound
dec
icebp
mov
jg
loop
cmc
test
fnsave
sbb
sub
pop
cmc
ljmp
call
mov
push
cmp
inc
mov
adc
adc
xchg
out
dec
add
jmp
mov
fldcw
sub
adcl
hlt
loope
sar
sbb
test
jp
lds
mov
mov
mov
cwtl
test
xchg
rcrl
jae
mov
lcall
add
push
cmp
mov
dec
icebp
adc
pop
and
xchg
rclb
ficomps
pop
hlt
ljmp
jge
into
pop
mov
stc
push
add
mov
mov
push
call
sahf
mov
js
fiadds
nop
xlat
popf
or
cmpsb
xchg
ss
cmpsl
push
cmp
pushl
cmp
ja
jne
sub
xchg
sbb
dec
push
daa
es
mov
incl
pusha
movsl
sub
xchg
loope
dec
aas
test
ds
flds
mov
shll
mov
filds
jmp
dec
inc
cmpsl
mov
sti
dec
adc
clc
pushl
mov
out
mov
xor
pusha
repnz
cli
cmp
call
cmp
arpl
add
sahf
hlt
sti
xchg
and
out
mov
pop
popf
ljmp
call
push
pop
cmpsl
dec
clc
call
sbb
cmc
adc
or
decl
shrl
in
inc
jmp
out
push
mov
xor
or
orl
cli
dec
movsl
ss
cld
push
movsb
es
fs
dec
push
xchg
and
jnp
push
cmpsb
lods
mov
sbb
adc
aaa
sbb
or
test
or
push
jg
jl
out
jp
push
dec
or
shlb
rcll
enter
daa
iret
jbe
fstpt
inc
inc
test
fs
pop
stos
lcall
cmpsl
mov
ljmp
adc
repz
lods
and
sti
clc
pop
mov
xchg
jno
ret
jg
dec
es
imul
inc
and
aad
jmp
add
sbb
pop
push
sbbb
xchg
mov
int3
loopne
bound
imul
jmp
adc
ret
xchg
ljmp
or
sbb
lock
popf
mov
inc
mov
and
fwait
xchg
add
aas
daa
mov
lahf
cmp
adc
push
icebp
inc
xor
aam
popf
push
inc
jno
les
mov
rclb
fs
cmp
mov
lea
pop
jl
mov
push
ret
orb
fs
jg
loop
fnsave
xchg
flds
fcomi
iret
jg
je
mov
or
popa
std
jle
sbb
scas
adc
add
cmc
pop
icebp
call
jo
shr
icebp
push
insb
and
stos
or
xor
orb
cs
clc
fwait
dec
mov
or
adc
adc
jb
shrl
pop
add
cld
ljmp
mov
push
jl
cmp
add
lock
add
and
or
sub
incl
cmp
in
mov
jbe
fdivs
cmp
pop
popa
jge
sbb
mulb
push
sbb
mov
ret
mov
out
pop
ss
sti
aam
fists
in
incl
adc
jnp
test
mov
dec
adc
xor
lcall
aam
je
insb
jbe
shrb
popa
cmp
xor
insl
push
test
pusha
popa
xchg
icebp
in
lret
sub
push
push
xchg
stos
in
sbb
decl
jge
lahf
push
js
sbb
mov
test
ud0
mov
inc
das
inc
addl
adc
jo
pushl
cld
fcoms
repz
xchg
xorb
fs
xchg
ret
mov
in
and
mov
daa
cli
out
subl
mov
lds
clc
ljmp
jnp
inc
hlt
jmp
mov
shr
sbb
pop
outsb
sar
pushl
fdivrp
jbe
jl
lcall
cmp
fsubr
xchg
pushl
dec
jp
and
scas
mov
fdivl
hlt
repnz
fnstcw
sbb
mov
ljmp
inc
cmp
mov
inc
push
pop
cmp
ret
xchg
movsb
outsl
decl
xchg
mov
insl
pop
pushf
test
out
stos
sbb
outsl
dec
xor
sbb
scas
mov
xorl
mov
add
pop
pop
shll
mov
inc
dec
and
insl
fxch
stos
push
notb
mov
xchg
popf
push
xor
xor
mov
stc
mov
mov
cmp
aaa
jp
xchg
lock
decl
and
std
sti
lret
aad
ss
ljmp
sti
int
sti
sti
sub
lds
inc
inc
jb
mov
aas
bound
push
pushl
mov
sub
push
cmp
popf
mov
aam
outsb
xlat
rclb
dec
and
mov
sub
push
xchg
decl
or
loope
cld
mov
imul
pushl
xchg
clc
notl
jae
cltd
outsl
xchg
imul
fistpll
or
rol
je
xchg
inc
adc
mov
aad
fisubs
jg
dec
sbb
push
icebp
cli
stc
ss
or
stos
mov
mov
decl
inc
out
push
int
cli
sbb
cltd
nop
adc
lods
lcall
jo
dec
push
sti
and
jb
add
out
clc
outsb
pop
mov
mov
adc
cmp
ret
mov
es
mov
or
sbb
sbbl
sub
push
aad
push
push
dec
dec
mov
imull
jae
leave
and
sub
push
lret
ja
adc
rorb
fcomip
adc
inc
jne
xchg
mov
pop
jb
fmuls
xor
sar
incl
and
push
leave
orb
jae
push
fidivrs
jmp
aam
lods
sar
jmp
mov
enter
push
sarb
jb
add
aam
pusha
mov
loope
push
mov
sub
push
or
jg
dec
scas
cmp
incl
and
sbb
add
js
fwait
cmpb
mov
add
jle
inc
loop
rorl
add
scas
clc
add
jge
add
cmp
sub
js
adc
nop
push
outsl
cli
cs
lret
adc
loop
adc
jg
fcoml
or
xor
repz
inc
rcrb
mov
mov
xchg
cs
lea
loope
cwtl
int
push
jno
or
es
lods
ret
jmp
pop
sub
loope
sbb
and
cmp
pushl
jne
fs
dec
adc
push
mov
pushf
add
ljmp
shl
xchg
xor
lcall
pop
push
dec
shrb
mov
das
data16
mov
mov
imul
mov
sar
incl
aad
gs
sbb
int
push
push
std
mov
jp
adc
pop
pop
sub
pop
cmc
lcall
xor
rcl
sbb
adc
sahf
aad
xchg
popf
jno
lcall
add
cmc
adc
inc
pop
shrb
jbe
cwtl
mov
mov
decl
outsb
inc
xchg
pop
stos
dec
sti
xlat
jl
sti
mov
mov
ret
std
cmp
ret
mov
lods
cmp
call
loopne
fwait
mov
xchg
out
sti
cmp
or
into
imul
hlt
lcall
adcl
nop
jecxz
aas
sub
out
xor
shll
pop
xor
add
pop
cld
out
sahf
xor
inc
icebp
cmp
je
ljmp
pop
pop
dec
mov
sti
and
hlt
notl
inc
cmp
and
push
cld
cli
mov
enter
fisttps
repnz
adc
adcb
aaa
inc
adc
pop
mov
iret
mov
mov
mov
std
das
into
mov
sahf
dec
les
jg
cmpsb
and
fs
pushl
es
xchg
xor
int3
mov
pop
js
test
mov
jg
into
cwtl
std
int3
inc
mov
mov
or
popf
outsl
inc
adc
jae
out
call
ret
push
sbb
cmp
ljmp
addr16
fwait
arpl
out
adc
xchg
aas
outsb
in
ljmp
jne
nop
icebp
ljmp
push
sti
xor
adc
ljmp
jmp
sub
push
or
pop
cs
imul
push
sub
jmp
not
inc
mov
jmp
mov
fwait
adc
nop
lret
adc
out
aaa
loop
in
mov
xor
mov
mov
test
mov
movsl
out
movsl
orl
gs
nop
clc
mov
insl
xor
add
or
cmc
push
mov
loop
aas
in
fs
in
clc
sub
xor
loopne
fwait
sti
cmpsb
testb
addr16
stos
ret
fildl
mov
cld
mov
lock
ljmp
pop
push
pop
shrb
push
jnp
xchg
stc
scas
pop
insb
icebp
or
xchg
xchg
cmpsb
test
out
add
push
mov
xchg
push
lods
andb
mov
inc
push
scas
inc
js
fadds
pop
aad
xor
and
push
out
lock
out
imul
decl
sub
or
mov
pop
loop
movsb
scas
sub
out
mov
xor
mov
xchg
addr16
xor
cmp
pop
test
adc
sbb
aam
inc
xchg
mov
enter
pushl
xor
scas
mov
aad
cmp
jecxz
ds
movsb
and
out
cli
jmp
push
add
push
inc
xchg
shll
cmp
andl
inc
repnz
cld
inc
mov
clc
pop
cli
fadd
into
cltd
mov
sub
pusha
pop
adc
call
jecxz
lret
jbe
mov
subb
adc
cmpsb
es
mov
ljmp
mov
adc
stos
adc
out
sub
movsb
sub
je
in
mov
sahf
pop
aad
cmp
adc
pop
lds
push
int3
shrb
jg
lock
cmp
xor
decl
js
xor
and
cltd
xor
cld
cmc
call
popf
push
sbb
enter
push
push
cwtl
dec
xor
xchg
out
stc
test
shlb
push
bound
lds
sbb
mov
cltd
sbb
mov
std
mov
fcomip
cltd
mov
adc
ffreep
and
fidivl
fs
sub
cs
stc
mov
lcall
inc
pushf
fisttpl
adc
inc
ja
cmp
pop
jp
dec
mov
test
mov
dec
aad
sub
js
adcl
gs
jg
aad
lret
movsl
sti
aam
fcmovbe
dec
insb
lods
int3
sbb
sub
jp
mov
dec
pushl
mov
sub
lret
loop
mov
incl
enter
pop
ret
outsl
daa
xor
mov
fmull
out
les
jae
loope
pop
pop
in
xchg
out
fdivrp
fstl
das
dec
rclb
jns
push
sar
incl
mov
cmp
ret
incb
fistps
adc
std
fs
push
pop
mov
xchg
mov
loope
mov
fwait
out
mov
decl
fists
push
popl
lock
lahf
cmpsl
ret
cmp
lahf
popf
sbb
pop
push
lods
push
push
loope
mov
mov
jb
es
loopne
xor
rcrb
lcall
sub
ss
insl
dec
mov
mov
lods
inc
je
add
ret
jnp
mov
mov
mov
inc
ljmp
mov
jmp
inc
inc
cmc
xor
sbb
or
pop
or
lcall
sti
mov
pop
cmp
addr16
xlat
and
xor
mov
pop
jge
gs
push
mov
jb
leave
dec
xor
pop
dec
ss
mov
sar
adc
addb
and
pop
fcomps
decl
push
shlb
jbe
cmp
js
mov
fmuls
aad
dec
mov
push
or
jg
fildll
int
das
dec
loop
call
outsl
hlt
dec
cmp
insl
and
das
cld
fildll
outsl
lahf
in
xchg
adc
int3
lahf
mov
les
xchg
aaa
call
lcall
lods
mov
jns
push
out
adc
mov
lahf
ret
adc
jg
add
stos
sub
cld
rorb
aaa
add
mov
fcmovbe
jo
in
pop
shr
xchg
popf
incl
cltd
jno
data16
fadd
fbld
jno
cwtl
mov
xor
pop
lret
jno
das
mov
lret
insl
ljmp
jae
repz
jne
mov
clc
or
test
lods
cld
jl
scas
xchg
mov
push
xchg
pushf
ljmp
cmc
das
ljmp
mov
ljmp
add
mov
inc
outsl
or
dec
sbb
outsl
shlb
lcall
push
test
sbb
jno
fmull
rcrl
xchg
pop
ficoml
sbb
jg
call
inc
xchg
idivl
test
add
subl
sbb
adc
outsb
insl
icebp
repz
jnp
repnz
sti
xchg
arpl
cwtl
mov
jno
push
mov
gs
push
xchg
rolb
sbb
stos
jp
cld
bound
cmp
or
fstps
aaa
cmpb
decl
xor
pop
xchg
insb
je
xlat
jbe
int
sbb
imul
addr16
test
les
stos
or
fwait
xchg
fs
std
pop
dec
mov
sbb
cli
pop
and
pop
add
jg
pop
aaa
cli
xchg
jns
jbe
sub
add
imul
into
mov
pop
jp
add
cmc
jecxz
or
push
imul
jl
icebp
jp,pn
mov
in
test
jmp
bnd
pusha
sbb
jge
adc
adc
outsb
mov
out
std
and
jg
or
fwait
xchg
mov
jo
ret
ja
je
or
aam
cwtl
jge
roll
lods
mov
xor
xor
or
out
mov
rcrl
inc
out
xchg
xchg
nop
negb
jmp
or
std
in
xlat
cltd
call
cli
cmp
outsb
call
fildll
push
mov
push
cmp
cmpsl
mov
test
mov
movsl
xchg
outsb
push
into
ret
xchg
push
cmp
add
pushl
loopne
add
mov
pushf
sub
ss
aam
imul
outsl
jns
stos
gs
dec
mov
xor
lcall
or
pop
jne
inc
or
and
cmp
cmc
sub
pop
mov
ljmp
clc
addr16
mov
xchg
push
dec
cld
cmpsl
push
cld
arpl
dec
mov
ret
adc
push
mov
call
jns
lret
mov
imul
xchg
adc
jle
subb
lcall
cmp
arpl
or
jg
push
stos
mov
and
loop
cltd
jp
xor
outsb
int3
mov
std
jb
inc
and
lods
ds
and
orb
lea
pushl
ror
sti
jle
std
mov
orb
push
xchg
call
out
inc
xchg
xchg
jge
and
push
decb
sub
mov
pushf
movsb
dec
std
fistpll
repnz
stos
xchg
aad
cmpsb
pushl
inc
adc
dec
push
cld
cmp
jp
add
adc
movsb
and
scas
dec
fwait
stos
sub
jmp
xor
xchg
push
sub
scas
jmp
cmp
pop
dec
and
das
adc
out
aam
lcall
test
adc
sbb
mov
cmc
fbstp
es
pop
mov
pushl
dec
mov
add
pusha
add
jo
xchg
ljmp
mov
jo
les
pop
xchg
jp
orb
push
pop
xor
push
repz
lcall
inc
nop
adc
cmpsb
jg
push
fs
outsb
stos
sub
leave
push
mov
dec
inc
or
outsb
adc
inc
outsb
aaa
inc
jecxz
clc
incl
mov
or
out
lea
mov
and
pushl
lret
push
mov
jne
jno
cld
adcb
in
ljmp
sbb
fsts
jecxz
ret
inc
pop
lea
clc
into
jae
jno
dec
repnz
ljmp
adc
pop
xchg
ret
out
jo
imul
lods
sbb
dec
cmp
ja
shl
cmpsb
js
dec
adc
mov
mov
adc
sub
movsb
mov
sbbb
xor
movsb
incl
pop
je
inc
push
stos
pop
add
aad
ficoml
mov
rorb
sub
push
sub
incb
clc
ret
leave
pushf
or
cwtl
imul
xchg
dec
push
xor
and
decl
push
and
xchg
cs
xchg
out
ja
cmpsb
fildl
jmp
push
clc
adc
jb
jg
sub
iret
fbld
and
ja
out
popa
or
xor
dec
and
pop
dec
int
aam
push
mov
icebp
into
sub
and
int3
sbb
pop
pushf
xchg
add
xor
sub
mov
out
push
popa
jb
sub
mov
jb
hlt
clc
inc
push
dec
fidivrs
imul
push
mov
daa
push
fidivs
cwtl
orl
enter
push
or
cld
jp
dec
cld
ljmp
push
mov
mov
xchg
in
mov
xor
pop
and
test
insl
dec
fisttps
jmp
es
mov
mov
push
mov
bound
push
push
cmp
ljmp
ror
out
inc
xlat
cs
addr16
inc
imul
pop
add
jmp
and
pop
lods
insl
mov
lahf
cmovno
or
leave
mov
or
sbb
xor
dec
xchg
add
incl
test
rorb
push
cmp
addr16
and
push
hlt
hlt
xor
lret
mov
xchg
pop
ffree
or
test
inc
xchg
inc
lcall
std
dec
aad
sbb
out
sbbb
inc
ret
sbb
dec
push
sub
pop
inc
inc
mov
aad
or
and
sbb
inc
adc
sub
call
jmp
add
cwtl
idivl
inc
outsb
fmul
aaa
popf
inc
and
xchg
repnz
clc
decl
push
jnp
lret
mov
das
lret
cmp
jmp
inc
or
cmp
fidivrs
xor
mov
imul
ljmp
xor
jae
mov
jmp
shlb
mov
sbb
jo
xchg
out
scas
loopne
mov
add
fsubs
test
mov
mov
jb
ds
xor
xchg
xchg
inc
jnp
inc
xchg
in
or
stc
cmova
lods
xchg
ret
test
decl
jo
pop
xor
push
out
les
mov
ljmp
ret
mov
cmp
int3
pop
mov
mov
std
aam
int3
inc
add
or
jl
jle
adc
ror
in
mov
out
push
ljmp
jns
cltd
or
cmp
adc
push
add
mov
das
cmpsb
das
adc
sub
mov
incl
sbb
sub
call
and
out
jecxz
sar
inc
aas
int
cmp
and
daa
in
mov
out
sub
rolb
or
mov
adc
inc
popa
stc
fimuls
nop
clc
pop
sbbb
hlt
mov
fisubrl
and
or
lret
aam
mov
sbb
adc
push
pop
xor
mov
icebp
pop
test
mov
sarl
hlt
push
or
scas
inc
xchg
mov
sbb
arpl
aad
popf
js
adc
lcall
test
or
lds
out
mov
roll
xchg
dec
in
je
movsl
sarl
call
cmp
out
pushf
xlat
xchg
in
cli
ret
and
ret
dec
mov
daa
adcl
call
pop
pop
ds
xor
jno
leave
jo
lret
push
adc
loope
xchg
mov
mov
incl
shrl
gs
int
xchg
push
out
adc
clc
sahf
out
push
shr
sub
fstl
or
out
aam
popa
aad
orl
int3
aaa
xchg
mov
testb
fcmovne
mov
insb
mov
cmp
mov
clc
in
cs
push
outsl
cli
pusha
or
dec
push
stos
push
loope
nop
lock
pushl
into
mov
push
pop
mov
ja
inc
emms
addr16
push
loop
pop
cmpsl
push
dec
and
incl
adc
sub
movsl
add
sarb
fwait
xchg
xor
and
push
or
incl
lds
popf
pop
adc
mov
sbb
mov
pop
push
adc
push
xor
sbb
push
jnp
jmp
loop
pop
mov
push
pushl
and
pop
hlt
or
ja
dec
mov
cmpsl
inc
mov
pop
sbb
jg
lret
jnp
call
xor
jns
mov
jbe
push
and
push
outsl
push
lahf
cs
add
xor
sar
decl
dec
push
int
sub
or
insb
or
adc
decl
sbb
scas
clc
test
jnp
out
and
pop
lcall
jge
repnz
in
loopne
movsb
jbe
mov
fcomp
cmc
incl
add
imul
repnz
cmp
clc
incl
ret
inc
push
add
xchg
pop
jmp
sbb
ja
repz
in
cld
dec
pushl
les
pop
jp
and
inc
and
sar
inc
or
push
lds
jg
cmpsb
adc
out
gs
mov
dec
and
int
jnp
fsts
inc
out
dec
pop
es
ljmp
ljmp
sarb
adc
adc
and
lret
inc
cld
jg
mov
pusha
les
mov
es
aam
gs
add
mov
jmp
ret
cmpsb
sti
sub
test
imul
call
cmc
inc
icebp
lods
test
outsl
aam
mov
jnp
in
jb
adc
cmpsb
lods
and
call
arpl
inc
mov
add
in
inc
mov
rorb
adc
out
mov
call
aad
mov
aam
xchg
mov
jmp
mov
imull
clc
movsb
ja
mov
lret
mov
cmp
or
fsubrl
mov
push
clc
icebp
fbld
call
cmpsl
cmp
stos
and
push
aad
rcl
push
xchg
xchg
xchg
xchg
les
xchg
sbb
insl
ljmp
sbb
push
sbb
frstor
cmp
pop
outsl
pop
shl
jnp
pop
incl
sbb
ds
xlat
mov
xchg
mov
lods
pushl
jl
lea
mov
mull
arpl
cmp
in
mov
out
mov
xchg
int
ljmp
jl
jmp
pushf
and
lds
xchg
mov
ret
xor
sub
inc
int
aad
filds
sbb
dec
jbe
daa
mov
fwait
mov
jmp
loopne
push
mov
dec
mov
std
sub
pop
xlat
imul
and
mov
mov
movsb
stos
sbb
sbb
into
inc
sub
fmull
test
imul
fwait
mov
popf
lea
movsl
icebp
add
mov
cmp
ljmp
js
xchg
cvtps2pd
test
push
jne
jecxz
push
stos
loope
or
cmp
call
ja
jae
lods
mov
cli
bound
jb
mov
jl
add
js
push
pop
and
incl
lcall
cmp
test
inc
in
call
jo
xchg
xchg
sub
dec
sub
add
out
orb
int3
xchg
out
movsb
shl
flds
or
incl
add
movsb
push
fsub
aam
mov
jmp
pop
mov
loop
in
xchg
push
je
sbb
sbb
ret
xor
arpl
hlt
mov
aas
xorb
xor
into
sarl
test
pop
dec
mov
shlb
sbb
pop
adc
mov
mov
pop
out
aad
jmp
or
push
jecxz
cltd
pop
cmp
bound
jg
sbb
cmpb
jg
xor
repz
inc
movsb
cltd
jno
adc
and
cli
call
xchg
cltd
pop
pop
loop
push
movb
aaa
ljmp
ss
pushf
ret
mov
mov
mov
jne
jge
push
inc
in
or
and
inc
mov
mov
cwtl
and
mov
inc
xchg
lret
mov
movsb
dec
mov
xor
lahf
mov
mov
add
sarl
ss
das
push
mov
pushf
ljmp
sbb
cli
push
sub
sbb
test
insl
sbb
int3
jo
je
fmul
stos
xchg
mov
add
stos
pop
push
mov
adc
mov
jecxz
jnp
cld
xchg
or
xchg
call
inc
mov
icebp
inc
pop
fsubrp
inc
dec
inc
lcall
inc
push
dec
popf
cmp
stos
jmp
ljmp
repz
mov
and
sbb
imul
aaa
das
rcr
cmp
into
fwait
jg
js
movsb
pusha
pop
mov
hlt
jmp
mov
loope
adc
loope
add
inc
mov
repnz
mov
jnp
lahf
movsb
jg
jmp
cltd
pop
pop
ds
mov
lret
dec
into
jmp
push
inc
push
mov
add
ljmp
fdivp
or
xor
out
cli
xor
add
jmp
repnz
sbb
popf
fimull
mov
cmp
sub
fbstp
in
cli
inc
cwtl
arpl
lock
mov
or
mov
sahf
ja
mov
jne
xlat
sub
lea
jg
add
out
mov
jle
push
aaa
jae
insb
push
cs
push
cmp
pop
xlat
scas
cs
cmc
xchg
jo
xor
sbbl
stos
cld
mov
cwtl
nop
decl
pop
push
jno
scas
fcompl
in
inc
pop
loopne
mov
fbstp
adc
sbb
fdiv
cmp
decl
nop
out
lret
jmp
jae
xor
mov
fstl
movsb
sbbb
addl
dec
lret
movsl
pop
xor
push
mov
es
push
shl
pop
incb
es
inc
nop
fcomps
or
sub
orb
shlb
aaa
lret
xchg
pusha
sub
ljmp
call
inc
xchg
stc
test
mov
scas
jmp
or
jne
inc
sub
xor
lock
push
inc
mov
mov
or
sbbl
movsb
sub
mov
jnp
incl
push
repnz
mov
push
fs
data16
fcomip
mov
add
sub
loope
or
pop
mov
stos
popf
sbb
call
inc
dec
fucomip
dec
cmc
ret
insb
jg
loopne
add
jg
fstps
sub
call
stos
xchg
dec
int3
mov
xchg
es
sahf
mov
push
in
dec
mov
jecxz
pop
mov
bound
lods
mulb
mov
in
incl
adc
lahf
push
mov
repz
lea
push
clc
sub
into
nop
pop
add
mov
test
push
pop
dec
mov
out
adc
inc
lock
jp
or
xor
dec
scas
jbe
fildll
lcall
sub
cmp
cmp
js
and
scas
pop
cli
cmp
pop
int
data16
hlt
iret
fistl
push
cwtl
out
lcall
fildl
mov
and
notl
jb
call
jmp
gs
xchg
rorb
lret
xor
ficoml
pushf
inc
cmp
sub
inc
ljmp
insl
xchg
mov
fisttps
loopne
aaa
jg
bound
stos
add
insl
incl
mov
and
cli
jle
ss
aaa
xchg
ret
jnp
js
arpl
jle
outsb
jp
add
or
sarb
dec
jbe
mov
incl
add
stc
lock
pushf
and
jne
dec
ficoml
inc
leave
cli
imul
repz
es
jne
rorb
decb
dec
cltd
movsb
mov
lcall
mov
sarl
dec
xchg
pop
inc
outsb
mov
scas
and
ret
ret
fisttpl
and
es
jg
push
lea
push
fsubr
ljmp
call
mov
mov
mov
cwtl
inc
cmpb
jne
mov
in
pop
fidivrs
dec
sub
push
cmp
popf
sub
xchg
outsl
fsub
pop
jae
icebp
call
push
fdivp
pushf
mov
mov
mov
decl
arpl
dec
insb
dec
dec
push
mov
pop
lret
push
add
pop
cmc
call
mov
scas
xchg
movsb
rcr
dec
mov
call
mov
out
mov
clc
mov
mov
lcall
into
aam
out
addr16
popa
or
xlat
roll
andl
mov
jle
out
es
les
xchg
mov
pop
clc
jbe
inc
jne
or
out
xchg
jnp
ja
leave
fdivr
aaa
or
bnd
mov
xchg
sub
jecxz
jae
dec
xchg
int
lock
cmp
pop
or
daa
jmp
aaa
cld
lcall
mov
xchg
fiaddl
ret
lods
or
push
pop
xchg
ljmp
dec
xchg
addb
mov
xchg
sarb
mov
ret
fbstp
lret
addl
pop
and
scas
cmp
cmp
mov
inc
xlat
or
xor
push
adc
jmp
xor
ss
cs
adc
push
mov
out
sub
mov
cmpsl
dec
and
lea
lcall
adc
push
xor
jg
cmpsl
dec
jecxz
push
call
ss
push
inc
pop
cmovle
xor
mov
inc
mov
call
scas
add
test
fwait
jmp
mov
mov
sub
jle
mov
push
dec
xchg
addr16
lcall
frstor
insb
pop
sbb
pusha
sub
sbb
inc
mov
sbb
lcall
pop
sub
movsb
sbb
lods
cmp
jl
lds
aad
or
incl
sub
sub
lret
adc
stc
sbb
iret
xchg
fdivr
mov
jge
add
test
sub
iret
cs
mov
mov
jmp
leave
rorl
lcall
jl
cmp
sbb
xor
fs
xlat
daa
dec
sub
dec
int
stos
stos
and
mov
pop
pushl
pop
lds
test
cld
scas
push
mov
fildll
hlt
inc
pusha
xor
ljmp
insb
xor
rcrl
pop
cmc
pushl
push
push
popf
into
les
ljmp
cmpsb
xchg
fbstp
jmp
push
jp
xor
mov
outsb
out
cmp
gs
pop
fsubs
dec
xchg
pop
add
decl
xlat
adc
xlat
shll
cmp
and
nop
dec
adc
dec
lods
or
lcall
xchg
out
xchg
mov
xor
aas
iret
lods
push
cmp
cmp
leave
xor
int3
pop
lahf
incl
mov
jl
jecxz
mov
mov
movsb
xchg
xlat
inc
push
or
adc
ret
xchg
jg
mov
mov
dec
dec
push
add
jo
daa
lcall
out
test
sub
popa
jle
sub
jmp
push
aas
std
lcall
ret
js
pusha
sbb
incb
fsubl
cmp
loopne
jecxz
jg
sub
dec
hlt
xor
jne
out
mov
mov
lsl
sbb
xchg
sbb
movsl
jge
ja
mov
lahf
ret
nop
and
xchg
aaa
test
cs
or
fs
pushl
mov
out
add
ljmp
sbb
ffreep
xor
xchg
insl
int3
jge
gs
mov
out
add
mov
cmc
repz
and
pop
call
dec
shr
fcmovnb
test
frstor
faddp
pop
jmp
cmc
stc
fucom
dec
jb
popf
and
fmul
mov
out
pop
inc
inc
testl
jmp
loope
mov
sub
stc
nop
or
mov
dec
and
iret
lcall
dec
imul
cmp
mov
ficomps
pop
jecxz
jecxz
ds
jo,pn
ds
ljmp
adc
sbb
mov
cli
mov
jmp
cltd
jne
lods
pop
es
sub
test
jle
pop
outsl
outsb
into
shl
cmpsl
loopne
cmpsl
fwait
xchg
incl
cmp
pop
sub
repnz
adc
test
ja
out
ret
inc
sti
lcall
pop
xchg
decl
jp
dec
adc
jo
xchg
mov
lock
cmp
jb
test
insb
insl
gs
pop
loopne
aam
lret
cli
xor
push
and
adc
and
data16
jle
sbb
push
imul
push
jl
push
jg
aaa
outsl
xchg
dec
mov
push
inc
sbb
pop
dec
adc
jo
adc
cmp
or
hlt
adc
iret
push
dec
push
or
lods
xchg
and
lods
inc
cmp
sbb
mov
xchg
jmp
insb
test
jmp
dec
mov
mov
pushl
xor
mov
or
lods
mov
xchg
sbb
mov
inc
push
cli
ret
cltd
stc
fisubl
jmp
mov
mov
aaa
stc
jno
push
push
fidivl
sub
xchg
inc
push
mov
mov
stos
jmp
xor
sub
xor
rcrl
into
lods
sti
jmp
add
test
leave
fiadds
jle
outsl
insl
sub
xchg
xchg
inc
push
add
jae
dec
lcall
mov
jns
call
sub
ja
and
mov
dec
xor
ljmp
cs
mov
lret
cltd
pop
jg
sbbl
pop
and
scas
push
push
ret
decl
push
je
jp
lock
mov
es
stos
pop
sbb
scas
mov
mov
fcmovnu
mov
sbb
stc
adc
inc
xchg
dec
hlt
jg
test
hlt
mov
jno
xchg
cmp
inc
pop
fbstp
cwtl
adc
loop
lahf
xchg
ja
jmp
jb
add
incl
xchg
cmp
into
push
and
imul
icebp
mov
lcall
lods
lcall
ds
mov
pop
jae
jp
loop
fisttpl
mov
fisttpl
shlb
clc
pop
orb
fdiv
bound
sti
imul
mov
fistl
cltd
aad
jbe
dec
cmp
push
dec
push
adc
or
inc
clc
fcmovu
inc
out
or
pop
fcoms
jnp
jge
push
jo
popf
test
je
daa
xchg
mov
outsl
rcl
lods
jg
jno
adc
dec
pusha
dec
add
dec
in
pop
std
cmc
out
mov
test
lock
enter
sub
xor
ds
addr16
mov
push
inc
fisubl
mov
push
jmp
xchg
dec
mov
jne
fsubr
jmp
xor
adc
js
scas
mov
jo
pop
mov
add
xchg
lcall
mov
aad
cmpsb
mov
jl
inc
lahf
pop
push
cmp
pushl
iret
aam
sbb
push
add
jge
add
dec
loop
mov
jg
ljmp
fdivl
jmp
test
stos
push
and
xor
dec
es
fisttps
cld
dec
fcomps
sarb
leave
inc
rcll
andb
inc
xor
and
inc
sbb
dec
inc
outsb
dec
data16
add
comiss
je
lcall
loop
jno
imul
pop
cmp
pop
test
loope
mov
dec
mov
push
add
aam
add
mov
inc
fs
imull
xchg
mov
mov
sbb
mov
jno
or
sahf
jl
repnz
ror
or
and
enter
outsl
ss
xor
adcl
test
mov
fimuls
ja
js
inc
cmp
pop
test
adc
in
lret
aam
lcall
adc
mov
fcoml
push
push
add
cmpsl
jle
or
cmp
sub
jno
pushl
incl
movsb
ljmp
or
movsl
call
push
sbb
leave
cs
lahf
push
cmp
inc
scas
shll
adcl
sbb
incl
adcl
lods
data16
cli
and
adc
push
in
fiaddl
lahf
pop
mov
dec
jo
cmovnp
ficomps
movsl
lock
fcomip
push
dec
dec
and
jp
pop
jo
mov
in
loop
cmp
adc
sub
test
xor
inc
lods
sbb
incl
cmp
and
cmpsl
loopne
and
jnp
push
mov
leave
pop
pop
test
and
out
in
lcall
sbb
icebp
mov
hlt
inc
shrl
dec
nop
or
jge
inc
nop
movsl
xlat
mov
lret
sbb
nop
xor
sub
mov
decl
push
in
fcomps
xor
push
push
cmp
xor
xchg
in
in
pop
mov
fucomip
insb
pushf
pushf
fwait
add
mov
mov
lcall
aad
cmp
jns
xor
jb
xchg
xchg
dec
xor
out
dec
or
das
shlb
test
xchg
jle
cli
lcall
mov
dec
adc
mov
push
mov
and
or
cmpsl
sub
clc
out
push
sbb
xchg
rcrb
mov
arpl
inc
int
pushl
adc
jbe
das
movsb
imul
xor
fcmovnu
icebp
jns
jge
lret
lods
cmp
push
pop
scas
dec
sbb
test
inc
enter
mov
xchg
iret
lret
pop
or
pop
lea
in
lods
mov
jecxz
sbb
clc
imul
xor
loop
xor
push
push
data16
lock
jmp
sar
ja
clc
in
loop
xchg
dec
outsl
sbb
sar
in
pop
adc
push
sbbb
neg
inc
lds
dec
xchg
sbb
xorl
mov
pusha
mov
test
push
mov
dec
adc
xor
sub
call
movl
pop
lret
jle
xchg
std
inc
jg
push
ja
dec
cwtl
aaa
movsl
inc
rcrl
les
push
es
ja
rclb
cmpsb
xlat
mov
cmp
lea
dec
adc
das
cmp
jne
mov
fistps
jle
rcrb
je
cs
cmpsb
xchg
call
movb
add
ret
lret
sahf
fptan
loope
ret
xorb
scas
lock
xlat
xor
jmp
leave
mov
inc
pop
add
sbb
ljmp
outsl
lcall
dec
lcall
inc
push
mov
movb
clc
jae
rclb
cmp
clc
fisttps
sbb
pop
push
pop
dec
push
push
aaa
adc
lods
negl
xorl
decl
xor
daa
arpl
fcompl
mov
lret
filds
adc
and
ljmp
scas
fistps
or
pop
add
ljmp
adc
push
in
mov
sbb
addl
cmc
or
cwtl
fdivrp
ljmp
fists
add
jg
inc
in
pop
add
cmpsl
out
aas
int
lds
stos
cmp
std
aas
fs
push
fiadds
and
mov
push
pop
mov
xchg
dec
push
xchg
mov
divb
inc
mov
mov
and
mov
in
pop
call
add
jmp
fwait
pop
xchg
mov
icebp
test
mov
jno
cmc
or
in
adc
cmp
test
loopne
lods
das
std
pop
or
sti
fdivrs
test
sbb
repnz
repnz
stos
jo
jecxz
dec
in
lock
jmp
or
clc
paddd
push
sbb
adc
decl
cmc
add
test
inc
cmpsb
push
jg
lcall
out
out
jo
testb
and
loope
add
jg
dec
mov
mov
pop
cs
in
sbb
jg
mov
sbb
mov
cmp
gs
clc
add
movsb
sub
fistps
push
jle
xchg
aaa
roll
ret
xor
jns
mov
rclb
cmp
push
ljmp
inc
movsb
popa
inc
fisubs
mov
stos
mov
xchg
xchg
xorl
decl
ficomps
inc
in
cmp
xor
xorl
mov
sub
sbb
mov
pop
call
stos
pop
out
sbb
popa
dec
cli
jo
fldl
inc
pop
jecxz
decl
fwait
adc
outsb
pop
fwait
dec
lcall
lcall
adc
pop
or
sbb
inc
scas
inc
rcr
shlb
mov
lcall
out
idivb
mov
data16
sbb
lcall
and
xorb
in
adc
cli
lea
xchg
push
sbb
mov
push
xchg
std
inc
imul
jae
insl
mov
sbb
shl
orb
lcall
jle
orl
and
test
clc
test
sbb
int
push
arpl
jbe
pop
mov
aad
bsr
push
pop
loopne
xchg
cmpsl
xchg
ret
jae
inc
dec
lret
arpl
movsb
push
cltd
int3
jae
sub
xchg
divl
xchg
scas
or
pushl
pop
xchg
negb
sti
rcr
nop
push
jmp
or
adc
cmpsb
aad
hlt
call
inc
sbb
mov
mov
inc
mov
mov
test
inc
jnp
lcall
ja
push
addl
out
fnsave
gs
pushl
repnz
into
mov
mov
xchg
test
out
clc
mov
int
mov
push
mov
sbbl
cmp
pushl
sti
enter
scas
push
loope
decb
fidivs
rcrb
ja
call
pop
or
push
into
jle
xor
sarl
sbb
fdivrp
decl
dec
lcall
or
iret
xor
dec
cmpsl
push
mov
popa
in
cmpsb
subb
or
shl
mov
in
fsubrl
into
pop
std
inc
xor
sub
mov
inc
fisttps
sub
pusha
shll
jg
add
mov
mov
sbb
incl
sahf
dec
cmp
push
push
mov
mov
xor
dec
outsl
jne
les
pushl
xchg
sbb
mov
add
xor
addr16
xchg
mov
std
arpl
incl
mov
cmp
jp
into
fldl
clc
lods
pop
pop
inc
pop
xchg
and
pusha
insb
xor
sub
pushl
out
int
out
cld
cwtl
mov
iret
je
push
ficompl
push
xchg
mov
cmp
xchg
daa
add
lcall
sbb
shr
ja
inc
movsl
call
mov
jmp
dec
fidivs
repnz
cmp
add
scas
pop
push
test
sar
sbb
loop
sbb
fildll
push
call
and
fildll
sbb
lret
jg
or
and
and
cltd
leave
fldcw
adc
xchg
movsb
fistpl
dec
sub
enter
incl
jle
xor
push
and
jne
mov
jae
loope
lcall
pushl
movsl
jne
dec
add
ror
jnp
dec
testl
mov
or
jmp
mov
pop
jnp
sub
xor
imul
into
pop
out
in
dec
mov
adc
testl
sbb
fcomip
jmp
push
pop
mov
jne
out
xchg
je
imul
fisttpll
push
cli
fucomip
cmpsb
or
dec
jg
pop
out
add
jmp
outsl
lds
jae
sbb
jmp
pop
jns
push
movsl
mov
pushl
cld
lcall
in
xchg
mov
movsb
scas
into
cmp
dec
sub
cmp
cmp
or
test
dec
in
loop
pushf
cli
adc
xchg
jg
mov
push
xchg
mov
shlb
fsubl
lcall
dec
or
jbe
ss
lcall
imul
push
jmp
lret
mov
sbb
inc
xor
or
lcall
outsl
out
jge
jmp
dec
or
mov
ljmp
pop
add
xor
add
cmpsl
push
aaa
and
dec
xchg
xchg
loop
adc
repz
lcall
add
ja
in
sub
mov
cmp
ljmp
mov
push
pop
sbb
mov
mov
push
in
push
add
adc
inc
orl
pop
lcall
shrl
push
dec
addr16
cmp
ds
sbb
ss
xchg
ror
jbe
mov
cld
dec
lcall
jae
xchg
mov
shll
sbb
push
test
loop
xchg
add
decl
mov
add
jmp
and
sar
push
addr16
adc
mov
pop
mov
popa
insb
mov
xor
dec
insb
adc
mov
arpl
das
add
and
stos
adc
jo
psubsb
scas
es
filds
sti
cmc
sbb
sbb
test
adc
mov
lock
ficomps
aam
call
inc
push
or
mov
xchg
fnstcw
lods
mov
adc
jle
mov
ficoms
cs
and
in
xchg
push
or
ljmp
push
jl
xchg
sahf
cs
dec
ljmp
in
mov
pop
stos
mov
scas
aas
push
fdivr
push
dec
push
aam
or
into
mov
xchg
filds
cmp
mov
pop
mov
push
jg
sub
fs
loope
push
or
rcll
call
stos
loop
inc
int3
mov
cltd
aam
mov
jbe
inc
sub
mov
sbb
call
inc
jne
dec
pop
movsb
jp
pushf
subl
dec
jbe
xor
pop
add
faddp
test
and
mov
pusha
xchg
lret
dec
and
cli
mov
inc
jbe
jmp
movl
jo
ljmp
decl
add
stos
aas
dec
xlat
xor
pop
mov
pop
lock
lcall
or
push
or
stos
sub
icebp
sarb
outsb
outsb
mov
pushl
adc
pop
cmp
pop
aam
aam
xchg
mov
sbb
jae
push
aaa
mov
bound
aaa
sub
popl
in
mov
pop
mov
pop
mov
or
adcb
ss
popa
sbbl
inc
xchg
jge
xchg
call
xchg
mov
jg
popa
sbb
rolb
sbb
stos
test
fs
push
decl
loopne
outsl
mov
hlt
mov
std
push
int
push
push
xchg
xor
arpl
imul
push
stos
insl
mov
aam
outsb
inc
mov
imul
sub
mov
inc
mov
mov
or
mov
inc
xchg
push
in
addb
gs
mov
popa
xchg
cmp
pop
push
sbb
vmulpd
mov
bswap
add
fcomip
xor
cwtl
repz
das
mov
cmp
aaa
cs
and
sbb
xor
adc
jb
or
stos
mov
push
mov
mov
scas
mov
xchg
aad
aaa
rcll
add
fsubr
push
outsl
jmp
test
popf
call
push
out
xor
dec
imul
cltd
mov
mov
inc
mov
shrb
les
bound
mov
or
loop
cmpsl
mov
xchg
js
mov
call
add
dec
or
cli
sub
decl
lret
or
pop
fiadds
loop
imul
ficoml
cli
mov
mov
sbb
and
ljmp
fistpll
js
or
jne
lods
push
xchg
ret
call
dec
pop
mov
shlb
ljmp
ljmp
aaa
dec
sbbl
push
mov
lcall
clc
cmp
aas
sub
sbbl
shl
outsb
dec
imul
in
and
pushl
add
or
jo
bound
push
mulb
lock
dec
mov
jbe
les
in
aad
add
cmp
call
test
int3
sti
ret
mov
scas
sub
xchg
xchg
lock
cmc
inc
pop
inc
jge
jb
test
rcr
out
call
mov
sbb
fwait
push
int3
push
mov
fcmovb
dec
mov
or
mov
mov
call
stos
mov
ficomps
xchg
mov
mov
jmp
dec
inc
jg
mov
dec
call
lods
dec
mov
push
mov
mov
or
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
out
in
pusha
sti
in
insb
mov
jno
dec
loope
loopne
cmpsb
adc
fsubs
mov
jmp
mov
in
lahf
stos
mov
mov
jg
jge
int
aam
cmp
cld
aas
xor
sub
mov
xchg
repnz
pusha
fcmovne
repnz
sub
dec
jmp
inc
pop
jo
mov
xchg
mov
repz
mov
sarl
mov
incl
xor
mov
adcl
mov
sbb
jbe
call
lcall
sarb
jne
xchg
adc
cmc
sbb
lods
fcompl
ret
aam
sbb
in
adc
call
mov
mov
jg
mov
lods
cld
dec
int
ret
mov
incl
repz
subb
stc
aas
sub
fisubs
and
ret
fwait
int
add
dec
call
in
adc
xor
mov
sar
xor
lock
jmp
shll
in
add
out
movsl
inc
xor
mov
lret
gs
std
in
daa
lods
jbe
inc
out
arpl
or
sbb
xchg
aas
cmp
and
jns
lcall
mov
fwait
cmpsl
mov
mov
pop
lods
pop
sarl
xor
cmp
xchg
out
imul
dec
sub
addr16
adc
or
jae
mov
sub
shl
aam
jmp
mov
pop
cltd
pop
fwait
mov
test
sub
arpl
das
pop
or
cmp
out
pop
sti
adc
lahf
cli
jnp
shrb
repnz
jbe
mov
dec
jbe
popa
lods
cmp
or
pop
pop
in
in
cmp
sbb
aaa
mov
call
fld1
xchg
xchg
movsl
and
or
enter
fcmovnb
out
movsl
jnp
hlt
mov
lcall
cltd
xor
adc
cmpsl
mov
sbb
xchg
fildl
js
mov
dec
cmc
lods
cs
ja
sub
mov
sub
fnstsw
stos
dec
mov
push
sbb
jg
push
mov
sarl
mov
inc
ret
xchg
iret
pop
test
arpl
leave
cmpsl
stos
jmp
fistl
sbb
add
movsl
jo
push
fstpl
dec
dec
leave
gs
jne
mov
subl
sub
mov
sub
pop
and
addb
inc
add
nop
andb
outsl
mov
and
dec
dec
inc
pop
pop
adc
dec
add
stos
add
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
sbb
or
cwtl
mov
js
adc
imul
inc
jb
adc
arpl
sti
outsl
push
outsl
outsb
add
push
insb
gs
gs
push
jo
mov
jne
je
push
je
inc
popa
jo
jne
gs
je
arpl
push
push
jb
jbe
imul
xor
cs
lods
adc
inc
insb
neg
jle
insb
or
dec
jne
inc
imul
cwtl
outsl
outsb
or
js
jo
dec
popa
outsb
fs
add
in
loopne
push
dec
imul
insb
jae
push
sub
mov
inc
adc
sahf
mov
mov
jb
inc
sbb
jb
push
fiaddl
pop
add
mov
dec
popa
les
and
push
lret
fwait
jns
insl
push
imul
inc
and
or
pop
push
outsb
popa
fists
sub
ret
xchg
insb
arpl
xchg
outsb
arpl
add
imul
lods
aam
fisttpl
testb
addr16
jae
sti
repnz
jns
sarb
fs
add
add
sbb
dec
mov
inc
nop
add
rcl
les
inc
inc
xor
push
and
addl
xor
add
sub
mov
pop
xor
outsl
inc
or
cmc
mov
adcb
xlat
subb
test
add
inc
push
xor
pop
adc
add
mov
subb
push
sub
add
enter
push
inc
gs
and
addb
cwtl
adc
adc
jns
jmp
adc
jae
add
adc
jne
inc
pop
enter
out
mov
and
sbb
mov
adc
and
inc
jecxz
pop
push
adc
les
push
mov
add
fs
call
cs
jae
inc
mov
je
push
cmp
jb
filds
aaa
xchg
push
mov
push
push
push
cwtl
jecxz
fs
add
pop
or
ret
jmp
inc
or
or
or
lahf
das
bound
sbb
lahf
out
mov
xchg
mov
add
adc
adc
and
adc
mov
pusha
dec
rclb
ja
mov
dec
adcb
sbb
push
rcrb
inc
adc
rolb
add
pusha
sbb
leave
lcall
cmp
sti
xor
inc
inc
or
pop
inc
add
mov
and
cmp
mov
repz
add
addb
adc
adc
sub
inc
insb
out
arpl
push
repz
inc
addb
push
mov
inc
and
jno
adc
sbb
cmp
mov
test
or
aas
cwtl
adc
mov
rorb
adc
ret
add
xor
dec
add
add
es
popl
jg
cmp
sbb
or
inc
inc
fdivl
add
nop/reserved
lods
fwait
cmp
fdiv
out
fistps
add
das
mov
rolb
xor
adc
aas
mov
je
js
xor
shll
imul
inc
inc
aas
jl
fbld
push
sub
popa
xor
fadd
add
cmp
add
das
shr
jb,pn
xor
js
mov
dec
or
scas
mulb
sub
mov
xchg
fcmove
cmp
adc
loopne
out
dec
pop
add
loopne
jae
mov
jno
in
out
es
insl
and
xor
xchg
jmp
add
outsl
add
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
in
add
add
add
pop
mov
add
inc
xor
test
pushl
pop
adc
das
dec
into
cmpsb
out
das
repnz
xor
pop
fsubl
push
add
pop
addr16
int
or
jecxz
sbb
call
imul
lock
pop
adc
jne
arpl
add
in
xchg
xlat
dec
adc
iret
hlt
shrd
loop
push
or
jb
add
shll
inc
frstor
unpcklps
jmp
mov
or
in
dec
xlat
insb
movsb
mov
cs
adc
hlt
adc
push
lods
mov
into
mov
stos
mov
dec
sbb
xchg
repnz
stos
fldenv
mov
jp
inc
pusha
bound
scas
push
push
call
call
aam
roll
out
adc
mov
fstpt
jmp
pop
movsl
push
fcomps
pop
pop
aad
sbb
lods
jno
popf
mov
mov
pusha
test
sub
fs
sub
cmp
inc
or
repz
lods
out
out
arpl
loopne
inc
push
add
negl
push
push
mov
xlat
gs
dec
push
ja
mov
sub
fstl
mov
arpl
dec
call
enter
or
subb
in
out
mov
cmpsl
jnp
push
cmp
aas
add
std
pop
push
mov
pop
out
mov
loopne
test
out
ficoms
testb
std
inc
insl
xor
test
lods
pop
mov
iret
or
mov
mov
stos
jl
and
jne
movsb
xchg
outsl
in
pop
testl
test
fimull
pop
mov
xor
mov
pop
stos
leave
mov
cmp
idiv
pop
jp
mov
sbb
and
test
push
adc
insl
xchg
push
std
jle
lcall
imul
popa
and
outsl
cld
mov
push
and
lret
loope
sbb
aam
stos
inc
shlb
sbb
jmp
push
and
cli
cmpsb
mov
stos
pop
lods
ljmp
push
pop
dec
dec
adc
popl
lock
fsubrl
inc
xlat
enter
and
lods
imul
shll
nop
and
mov
sbb
movsb
fdivrl
jae
ror
jmp
in
ficoms
or
outsb
pop
inc
mov
cmp
into
fucomp
sbb
sbb
xlat
daa
xadd
sarb
mov
fimull
lds
mov
sbb
imul
subb
sarb
push
in
aam
mov
adc
inc
jbe
and
int3
dec
jp
sub
push
aas
xor
xchg
adc
out
repnz
sahf
int
in
sub
insb
out
out
and
cmp
ds
sbb
dec
pusha
cmpxchg
jo
adcl
cmpsb
divb
data16
push
and
inc
imul
dec
popf
add
jb
sub
mov
ficoms
mov
push
push
in
jg
jno
outsl
test
dec
adc
jmp
mov
stos
subl
clc
and
fsubrl
out
ret
pushf
cld
repnz
sbb
orl
xchg
mov
mov
mov
mov
mov
mov
sub
je
mov
ret
or
arpl
out
negl
push
sub
mov
xchg
cltd
or
xchg
cmp
mov
pop
xlat
fldl
xor
dec
mov
dec
lea
sbb
adc
dec
popf
pop
sbb
inc
dec
lds
xor
push
outsb
mov
mov
mov
js
ret
and
imul
or
sahf
insb
ljmp
cwtl
cmp
inc
dec
enter
out
add
clc
or
pop
outsl
cld
mov
cmp
pop
jns
adc
jae
xchg
sub
mov
lea
mov
jecxz
xchg
lock
les
hlt
cs
sub
ss
pop
pop
aad
push
jbe
pop
addb
jns
lods
cmp
aaa
inc
mov
aas
loop
mov
inc
sub
mov
out
xor
stc
loopne
clc
dec
jo
xchg
jne
sub
adc
lods
push
nop
pop
mov
adc
loopne
es
mov
addl
daa
pop
scas
inc
mov
shll
jae
fldt
or
mov
lret
or
inc
dec
test
push
lcall
sbb
lods
push
clc
fxch
jge
inc
loope
mov
push
into
mov
ljmp
lret
adc
fimuls
cltd
lods
ss
out
mov
dec
imul
pop
xchg
cmpsl
loopne
mov
pop
jp
cmp
jae
mov
fcmovbe
mov
dec
mov
addb
into
jae
jnp
ja
pop
shll
pop
mov
outsl
jmp
fldcw
cmpsl
inc
push
push
dec
inc
xchg
aad
adc
in
pop
mov
mov
imul
mov
mov
xor
lea
mov
outsb
inc
sbb
daa
loope
ret
add
cli
dec
mov
xorb
and
outsl
into
mov
sbb
lret
jp
sub
cmp
shrb
imul
fs
aam
pop
sar
fs
fs
adc
adc
pushf
xor
rcr
or
in
adc
mov
and
mov
stc
andl
adc
sbb
shll
jg
cmp
loopne
add
int3
pusha
aas
pop
cmp
cmp
cmp
insl
mov
add
jmp
dec
mov
inc
push
add
adc
dec
xchg
cwtl
jl
fcmovu
cmp
nop
out
popf
dec
dec
cmpsl
or
push
in
mov
pop
push
lahf
out
cld
popf
es
mov
popa
clc
pop
sbb
cmp
ja
sbbl
lods
or
cmpsb
sub
mov
push
dec
cmpsb
sbb
ja
push
data16
cmp
lods
jae
stos
pop
dec
insb
cmp
insl
aad
inc
xchg
int
push
fstps
xchg
pop
cwtl
dec
scas
mov
dec
or
andl
jo
sbb
arpl
adc
lds
lcall
pop
or
fcmovnbe
jne
arpl
or
nop
sub
ds
xchg
insl
jmp
jne
data16
imull
push
sbb
xchg
sbb
gs
outsl
sub
test
ja
subb
lahf
push
push
insb
clc
xor
add
add
add
xor
add
add
add
clc
xor
add
clc
xor
add
clc
xor
add
clc
xor
add
clc
xor
add
clc
xor
add
stc
xor
add
xor
add
push
dec
inc
dec
xor
cs
dec
dec
add
jns
je
xor
imul
jo
jne
gs
xor
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
jo
push
gs
data16
imul
gs
add
add
outsb
fs
insl
popa
add
add
je
imul
